push
push
pop
add
add
add
add
add
add
add
sbb
add
add
add
add
push
push
and
add
adc
add
fst
out
mov
xchg
add
add
jae
gs
cs
gs
jne
arpl
cs
gs
jne
arpl
gs
fs
and
arpl
ins
imul
jae
outs
outs
cmp
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
aaa
popa
xor
cmp
xor
xor
cmp
push
jns
je
ins
cs
gs
jne
arpl
cs
jne
je
ins
gs
gs
jne
arpl
gs
add
add
add
add
add
add
inc
push
inc
inc
push
adc
or
add
add
add
add
inc
add
imul
add
add
and
pop
push
add
add
add
(bad)
(bad)
inc
add
add
add
sbb
add
add
mov
mov
int
mov
nop
nop
push
push
jb
addr16
ins
and
jae
and
and
outs
and
fs
push
imul
aaa
push
inc
add
dec
add
add
pop
inc
sub
add
add
add
add
add
sbb
inc
add
add
add
push
adc
add
pusha
add
add
inc
add
adc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
sbb
add
add
add
add
add
inc
add
add
adc
add
add
add
add
adc
add
add
add
add
add
xor
add
add
add
test
add
add
add
sbb
add
inc
dec
inc
inc
add
add
int3
inc
add
add
add
add
add
add
add
add
pusha
inc
inc
push
inc
add
add
xchg
sub
add
pusha
add
add
add
add
add
add
inc
push
push
add
add
add
adc
add
nop
add
add
add
add
add
add
imul
pop
add
add
add
add
inc
add
shr
ins
jae
add
add
add
add
rol
add
add
add
mov
shr
fs
je
add
sbb
add
add
add
add
add
add
add
add
jb
ins
outs
arpl
add
add
add
add
add
add
inc
add
push
cs
jb
add
add
add
add
add
add
add
add
add
inc
add
push
add
add
add
add
add
add
inc
add
push
add
inc
add
add
jns
add
add
add
add
add
or
push
je
imul
ins
adc
add
add
add
add
cmp
inc
add
add
inc
add
add
inc
add
inc
add
add
push
dec
bound
arpl
and
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
push
add
mov
push
call
test
je
movzx
mov
add
pop
ret
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
push
add
mov
cmp
jne
push
push
call
mov
cmp
jne
xor
mov
jmp
mov
mov
mov
mov
mov
xor
mov
add
mov
lea
mov
mov
mov
mov
mov
mov
inc
cmp
jne
mov
mov
mov
mov
mov
mov
mov
mov
add
pop
ret
mov
mov
ret
mov
push
push
add
mov
mov
call
mov
cmp
jne
xor
jmp
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
pop
pop
pop
pop
ret
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
pop
pop
ret
mov
push
push
push
push
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
cmp
jne
mov
call
mov
mov
mov
mov
mov
add
jmp
add
cmp
jne
mov
call
mov
mov
add
mov
mov
cmp
jne
mov
mov
call
test
jne
xor
mov
pop
pop
pop
pop
pop
pop
ret
lea
push
push
push
push
add
mov
mov
mov
mov
mov
mov
mov
cmp
jb
mov
mov
add
mov
add
cmp
jb
cmp
jne
mov
mov
add
mov
mov
sub
mov
cmp
jne
mov
call
jmp
mov
mov
add
mov
add
cmp
jne
mov
mov
sub
jmp
mov
add
mov
mov
mov
mov
add
sub
mov
sub
mov
mov
lea
mov
call
test
jne
xor
jmp
mov
jmp
mov
mov
mov
mov
cmp
jne
xor
add
pop
pop
pop
pop
ret
nop
push
push
push
mov
mov
cmp
jge
mov
jmp
add
and
mov
push
push
push
push
call
mov
mov
test
je
mov
mov
call
test
jne
push
push
mov
push
call
xor
mov
pop
pop
pop
ret
nop
push
push
push
push
mov
mov
mov
mov
push
push
push
push
call
mov
mov
test
jne
add
and
mov
push
push
push
push
call
mov
cmp
je
mov
mov
call
test
jne
push
push
mov
push
call
xor
mov
pop
pop
pop
pop
ret
nop
push
push
push
push
add
mov
mov
mov
xor
mov
mov
add
mov
mov
mov
jmp
mov
mov
mov
mov
mov
cmp
jb
mov
mov
add
cmp
ja
cmp
jae
mov
mov
mov
mov
add
cmp
jbe
mov
push
push
mov
mov
push
call
test
jne
mov
mov
call
mov
mov
mov
cmp
jne
xor
mov
cmp
je
mov
mov
mov
sub
mov
add
pop
pop
pop
pop
ret
mov
push
push
push
push
add
mov
mov
lea
lea
lea
mov
mov
and
mov
add
add
and
mov
mov
mov
mov
sub
mov
mov
mov
jmp
mov
mov
mov
mov
mov
add
mov
mov
cmp
jae
mov
mov
mov
cmp
jbe
mov
mov
mov
cmp
jae
push
push
mov
sub
push
mov
push
call
test
jne
xor
mov
jmp
mov
mov
mov
mov
cmp
jne
add
pop
pop
pop
pop
ret
nop
push
push
push
push
add
mov
lea
lea
lea
mov
mov
add
and
mov
add
and
mov
mov
mov
mov
sub
mov
mov
mov
jmp
mov
mov
mov
mov
mov
add
mov
mov
cmp
jae
mov
mov
mov
cmp
jbe
mov
mov
mov
cmp
jae
push
mov
sub
push
mov
push
call
test
jne
mov
mov
mov
mov
mov
cmp
jne
add
pop
pop
pop
pop
ret
mov
push
push
push
push
add
mov
mov
mov
mov
add
and
mov
mov
jmp
mov
cmp
jg
mov
mov
mov
mov
call
cmp
je
mov
mov
add
mov
mov
sub
mov
cmp
jne
mov
call
jmp
mov
mov
mov
cmp
jne
mov
mov
call
cmp
je
lea
mov
mov
call
cmp
jne
lea
mov
mov
call
xor
mov
add
pop
pop
pop
pop
ret
mov
push
push
push
push
add
mov
mov
mov
lea
mov
add
and
mov
mov
jmp
mov
mov
mov
cmp
je
mov
cmp
jne
mov
cmp
jne
mov
cmp
jle
mov
mov
sub
mov
mov
mov
add
lea
call
cmp
je
lea
lea
mov
call
cmp
jne
lea
mov
mov
call
mov
xor
mov
jmp
lea
mov
mov
call
cmp
je
lea
lea
mov
call
cmp
jne
lea
mov
mov
call
mov
xor
mov
jmp
mov
mov
cmp
jne
mov
cmp
jg
mov
mov
mov
call
mov
cmp
je
mov
mov
mov
add
mov
mov
mov
sub
mov
cmp
jne
mov
call
jmp
mov
xor
mov
add
pop
pop
pop
pop
ret
nop
push
add
mov
lea
and
mov
add
and
mov
mov
cmp
jbe
mov
mov
sub
mov
call
lea
mov
mov
call
mov
test
je
lea
mov
mov
call
mov
mov
mov
mov
cmp
je
lea
mov
call
jmp
xor
mov
add
pop
ret
mov
push
mov
push
xor
push
push
push
mov
push
call
cmp
je
push
call
mov
call
mov
call
mov
call
push
push
call
mov
cmp
je
mov
mov
xor
mov
inc
cmp
jne
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
pop
pop
pop
mov
push
cmp
je
push
call
ret
jmp
jmp
mov
pop
pop
ret
nop
push
mov
add
cmp
je
xor
push
push
push
mov
cmp
je
push
call
mov
mov
push
call
xor
mov
mov
mov
jmp
push
push
mov
mov
push
call
mov
mov
mov
mov
cmp
jne
mov
call
mov
call
mov
call
mov
mov
cmp
je
mov
mov
mov
mov
push
call
mov
mov
cmp
jne
xor
pop
pop
pop
mov
push
cmp
je
push
call
push
call
ret
jmp
jmp
pop
pop
pop
ret
nop
push
add
cmp
jne
mov
mov
mov
mov
mov
cmp
jg
cmp
jne
test
jns
add
sar
mov
xor
mov
jmp
test
jns
add
sar
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
jmp
mov
mov
mov
mov
mov
mov
mov
mov
pop
pop
pop
ret
lea
push
push
mov
mov
mov
jmp
mov
mov
cmp
jb
mov
add
cmp
jb
mov
mov
mov
mov
cmp
jne
mov
xor
mov
mov
pop
pop
ret
mov
push
push
mov
sub
lea
mov
cmp
jl
mov
mov
mov
call
pop
pop
ret
cmp
jl
mov
or
mov
mov
mov
pop
pop
ret
inc
mov
sub
mov
and
sub
add
call
ret
mov
cmp
jl
or
mov
add
call
ret
cmp
jl
mov
or
mov
add
and
ret
push
push
push
mov
sub
mov
mov
and
cmp
je
mov
mov
and
sub
mov
xor
test
je
mov
test
je
mov
sub
mov
sub
mov
mov
cmp
je
mov
mov
call
add
mov
pop
pop
pop
ret
push
push
push
mov
xor
mov
test
je
and
add
add
mov
test
jne
mov
mov
call
mov
mov
add
add
and
mov
pop
pop
pop
ret
lea
push
push
push
push
add
mov
mov
xor
mov
call
mov
cmp
je
mov
mov
mov
mov
add
mov
lea
sub
cmp
jg
mov
sub
mov
sub
cmp
jge
mov
mov
sub
add
mov
mov
call
jmp
mov
mov
sub
lea
call
mov
test
je
mov
sub
mov
call
mov
mov
mov
add
mov
add
cmp
jbe
lea
sub
call
mov
mov
call
mov
mov
add
pop
pop
pop
pop
ret
push
push
add
mov
mov
mov
mov
mov
mov
add
sub
mov
cmp
jg
mov
test
jns
add
sar
mov
mov
mov
cmp
jne
mov
mov
mov
mov
mov
mov
mov
mov
mov
jmp
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
jmp
cmp
jl
mov
mov
call
test
jne
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
pop
pop
ret
nop
cmp
jle
cmp
jge
mov
jmp
mov
or
mov
mov
mov
add
call
xor
mov
xor
mov
ret
mov
push
push
push
add
mov
lea
movs
movs
mov
call
lea
mov
mov
call
mov
test
jne
xor
jmp
mov
cmp
jae
call
sub
add
mov
add
mov
add
cmp
jae
call
add
mov
add
cmp
jne
sub
mov
call
sub
mov
mov
mov
mov
mov
add
pop
pop
pop
ret
lea
push
add
mov
mov
lea
call
cmp
je
mov
call
test
jne
xor
jmp
mov
pop
pop
pop
ret
nop
push
push
add
mov
mov
mov
lea
mov
call
cmp
je
mov
call
test
jne
xor
jmp
mov
pop
pop
pop
pop
ret
lea
push
mov
xor
mov
test
jns
add
sar
cmp
jg
mov
mov
mov
cmp
jne
inc
cmp
jne
mov
pop
ret
lea
push
push
push
push
add
mov
lea
mov
mov
mov
mov
mov
cmp
jle
mov
mov
mov
mov
cmp
jle
mov
mov
mov
mov
mov
mov
cmp
jg
mov
mov
mov
cmp
je
mov
mov
jmp
cmp
jg
mov
call
mov
cmp
jne
mov
call
test
jne
xor
mov
jmp
cmp
jg
sub
cmp
jge
add
xor
mov
mov
mov
add
mov
or
mov
mov
mov
add
mov
inc
sub
add
jmp
mov
call
mov
mov
mov
sub
cmp
jl
mov
add
xchg
call
jmp
mov
mov
cmp
jne
mov
mov
mov
mov
add
mov
mov
and
mov
mov
mov
or
mov
mov
mov
add
mov
inc
sub
add
mov
add
pop
pop
pop
pop
ret
push
mov
add
push
mov
cmp
jne
call
test
je
cmp
jle
xor
mov
jmp
xor
push
push
push
mov
cmp
je
push
call
add
and
cmp
jge
mov
cmp
jg
mov
test
jns
add
sar
mov
mov
mov
cmp
je
mov
add
mov
mov
and
mov
mov
mov
mov
cmp
jne
mov
xor
mov
jmp
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
or
mov
mov
mov
add
mov
inc
sub
add
call
jmp
cmp
jg
sub
cmp
jge
add
xor
mov
mov
mov
add
mov
or
mov
mov
mov
add
mov
inc
sub
add
call
jmp
mov
call
mov
xor
pop
pop
pop
mov
push
cmp
je
push
call
ret
jmp
jmp
mov
pop
mov
pop
ret
nop
push
mov
add
push
mov
xor
mov
cmp
jne
call
test
jne
mov
mov
jmp
xor
push
push
push
mov
cmp
je
push
call
mov
mov
sub
mov
mov
mov
test
jne
mov
jmp
dec
mov
and
sub
sub
test
je
mov
sub
mov
cmp
jl
test
je
mov
jmp
mov
sub
mov
mov
cmp
je
mov
jmp
add
mov
mov
mov
call
and
mov
add
mov
mov
cmp
jne
sub
add
cmp
jle
call
xor
mov
call
jmp
mov
mov
test
je
and
cmp
jge
mov
jmp
mov
or
jmp
mov
mov
mov
cmp
je
mov
cmp
je
mov
cmp
jge
mov
jmp
mov
mov
add
mov
call
mov
mov
call
mov
mov
xor
pop
pop
pop
mov
push
cmp
je
push
call
ret
jmp
jmp
mov
pop
mov
pop
ret
mov
push
push
push
push
add
mov
add
and
cmp
jge
mov
sub
mov
mov
mov
and
mov
add
mov
cmp
jne
mov
jmp
cmp
jle
mov
sub
mov
cmp
jne
sub
add
cmp
jge
add
sub
mov
jmp
mov
mov
test
jne
mov
mov
mov
add
mov
call
cmp
jl
mov
add
mov
or
mov
mov
mov
add
call
jmp
mov
jmp
mov
sub
mov
cmp
jne
cmp
jg
sub
add
cmp
jge
mov
add
add
xor
mov
mov
sub
add
mov
mov
and
or
mov
mov
mov
jmp
call
mov
add
mov
mov
test
jne
mov
mov
mov
mov
cmp
jle
add
mov
sub
jmp
mov
call
sub
cmp
jl
mov
add
mov
call
jmp
add
mov
add
mov
mov
and
jmp
mov
mov
test
je
and
add
mov
mov
mov
call
test
je
mov
add
mov
jmp
xor
jmp
mov
sub
add
mov
mov
and
or
mov
mov
mov
add
pop
pop
pop
pop
ret
nop
push
mov
add
push
push
mov
mov
cmp
jne
call
test
jne
xor
mov
jmp
xor
push
push
push
mov
cmp
je
push
call
mov
mov
call
test
je
mov
jmp
mov
call
mov
mov
sub
mov
and
sub
cmp
jge
mov
cmp
je
mov
mov
xchg
call
mov
call
mov
mov
xor
pop
pop
pop
mov
push
cmp
je
push
call
ret
jmp
jmp
mov
pop
pop
pop
pop
pop
ret
lea
push
push
mov
test
jle
mov
call
mov
cmp
jne
mov
call
jmp
xor
mov
mov
pop
pop
ret
lea
push
test
je
call
mov
test
je
mov
call
jmp
xor
mov
pop
ret
mov
test
je
test
je
push
mov
call
pop
or
je
mov
ret
mov
jmp
mov
mov
call
or
jne
ret
mov
jmp
test
je
push
mov
call
pop
or
je
mov
ret
lea
mov
call
ret
push
push
mov
mov
and
cmp
je
mov
mov
call
test
jne
call
mov
jmp
cmp
ja
xor
mov
mov
xor
mov
mov
call
pop
pop
ret
mov
and
mov
jmp
ret
push
mov
call
mov
pop
ret
push
push
mov
mov
mov
cmp
ja
je
sar
js
rep
mov
and
rep
pop
pop
ret
lea
lea
sar
js
std
rep
mov
and
add
add
rep
cld
pop
pop
ret
fldl2e
fmulp
fld
frndint
fsubr
fxch
f2xm1
fld1
faddp
fscale
fstp
ret
nop
sub
fistp
fwait
pop
pop
ret
mov
sub
fnstcw
fnstcw
fwait
or
fldcw
fistp
fldcw
pop
pop
pop
ret
mov
push
push
mov
xor
mov
cmp
jb
cmp
ja
and
cmp
jne
mov
call
mov
test
jne
mov
call
mov
test
je
mov
call
jmp
cmp
je
mov
call
mov
pop
pop
ret
mov
push
push
push
mov
shr
je
mov
mov
cmp
jne
dec
je
mov
mov
cmp
jne
add
add
dec
jne
jmp
add
add
pop
and
je
mov
cmp
jne
dec
je
mov
cmp
jne
dec
je
mov
cmp
jne
xor
pop
pop
ret
pop
cmp
jne
cmp
jne
shr
shr
cmp
jne
cmp
pop
pop
ret
nop
push
mov
mov
mov
shl
mov
mov
sar
js
rep
mov
and
rep
pop
ret
nop
push
push
push
mov
push
test
je
xor
xor
mov
mov
inc
cmp
je
mov
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
cmp
jne
mov
inc
cmp
je
cmp
je
test
je
jmp
test
je
sub
cmp
ja
cmp
ja
lea
add
add
mov
inc
test
jne
dec
je
test
jge
jmp
inc
jmp
neg
jle
js
pop
sub
jmp
inc
mov
inc
jmp
mov
mov
inc
test
je
cmp
jb
sub
sub
cmp
jbe
sub
cmp
ja
add
cmp
ja
shl
add
mov
inc
test
jne
dec
jne
neg
pop
xor
mov
pop
pop
pop
ret
lea
push
push
mov
xor
mov
mov
xor
rep
sub
inc
mov
rol
shr
cmp
jae
or
pop
pop
ret
mov
cmp
jae
ret
push
test
jne
mov
test
je
push
call
pop
test
je
push
mov
mov
push
xor
shr
rep
mov
and
rep
pop
pop
mov
test
jl
mov
test
pop
ret
xor
pop
ret
xor
cmp
pop
ret
mov
test
jl
mov
xor
test
pop
ret
mov
jmp
mov
push
xor
push
call
cmp
jne
push
call
and
cmp
je
cmp
jne
mov
mov
pop
ret
nop
push
mov
add
movzx
mov
lea
push
push
push
push
push
call
test
jne
xor
push
push
push
mov
mov
lea
push
lea
push
push
push
push
mov
push
call
xor
pop
pop
pop
mov
push
mov
push
call
ret
jmp
jmp
mov
and
mov
and
or
mov
mov
pop
ret
add
inc
push
push
inc
push
inc
pop
inc
outs
jb
popa
outs
fs
inc
gs
jo
imul
push
dec
popa
jae
push
popa
ins
jne
add
add
fninit
fldcw
ret
mov
mov
jmp
ret
push
mov
mov
call
call
mov
mov
call
pop
ret
mov
push
mov
mov
call
mov
call
pop
ret
nop
add
mov
ret
mov
test
je
add
call
test
je
call
pop
add
ret
call
test
jle
call
ret
nop
test
je
mov
mov
call
ret
push
push
push
mov
mov
stos
mov
xor
push
shr
dec
rep
pop
and
rep
mov
mov
mov
test
je
push
mov
test
je
mov
jmp
cmp
je
pop
mov
add
mov
test
je
mov
mov
add
dec
jne
cmp
jne
pop
pop
pop
ret
mov
push
push
mov
mov
mov
mov
mov
test
je
call
mov
test
jne
pop
pop
ret
push
xchg
jmp
mov
mov
test
je
movzx
push
add
repnz
je
pop
mov
test
jne
pop
ret
pop
add
sub
mov
pop
ret
mov
mov
ret
mov
ret
lea
ret
lea
ret
lea
push
mov
or
je
cmp
jae
push
mov
call
pop
je
mov
pop
jmp
pop
mov
jmp
ret
nop
push
push
push
test
jl
call
xor
lea
mov
mov
mov
mov
mov
mov
pop
pop
pop
ret
jmp
mov
mov
test
je
mov
mov
push
call
pop
call
call
ret
lea
mov
call
ret
mov
push
mov
mov
mov
call
mov
pop
ret
mov
test
jg
ret
push
push
mov
call
pop
pop
ret
nop
cmp
jbe
push
push
push
push
call
ret
nop
cmp
je
push
push
push
push
push
push
push
call
add
pop
ret
lea
push
push
push
push
call
add
pop
ret
lea
cmp
jbe
push
push
jmp
ret
lea
test
je
mov
cmp
je
cmp
jne
movsx
inc
inc
jmp
add
add
ret
mov
cmp
jbe
push
push
push
call
push
push
push
push
push
call
pop
pop
pop
pop
ret
nop
cmp
jbe
push
push
push
push
push
call
pop
ret
push
push
cmp
jbe
push
push
push
push
call
pop
pop
ret
mov
mov
test
jne
cmp
mov
mov
je
cld
call
mov
test
je
call
test
je
mov
mov
cmp
je
call
cmp
jbe
cmp
ja
lea
push
push
call
cmp
pop
je
mov
mov
mov
jmp
mov
mov
mov
cmp
jbe
cmp
ja
push
lea
push
push
push
call
cmp
pop
pop
pop
je
or
push
xor
push
push
push
mov
push
push
push
push
mov
push
push
push
push
call
mov
call
push
mov
mov
mov
mov
add
call
jmp
jmp
call
mov
mov
mov
mov
jmp
mov
ret
mov
mov
mov
test
je
mov
mov
push
push
push
push
mov
add
call
call
pop
pop
pop
pop
mov
ret
mov
mov
mov
call
mov
mov
mov
mov
and
cmp
je
mov
call
call
xor
add
mov
pop
mov
mov
pop
pop
pop
pop
mov
ret
lea
call
mov
mov
mov
mov
call
pop
mov
xor
pop
mov
pop
pop
call
jmp
ret
xor
mov
mov
add
mov
call
ret
ret
mov
push
mov
mov
mov
cmp
jg
je
cmp
jg
je
sub
je
sub
je
dec
je
jmp
add
sub
jb
je
jmp
cmp
jg
je
sub
je
dec
je
dec
je
jmp
sub
je
sub
je
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
and
mov
call
pop
ret
mov
test
jne
cmp
ja
lea
push
call
cmp
je
mov
cld
call
mov
push
push
push
push
call
mov
cmp
mov
mov
je
mov
test
je
mov
call
test
je
mov
call
mov
test
je
call
mov
mov
mov
mov
jmp
xor
ret
lea
xor
lea
mov
mov
mov
mov
mov
mov
ret
lea
xor
mov
test
je
mov
cmp
jne
mov
mov
ret
mov
cmp
je
cmp
jne
mov
mov
ret
push
mov
add
push
push
push
mov
mov
test
je
mov
mov
mov
xor
push
push
push
mov
test
jle
dec
mov
mov
mov
mov
cmp
je
call
test
jg
xor
pop
pop
pop
mov
jmp
jmp
call
call
call
pop
pop
pop
pop
pop
pop
ret
push
mov
add
push
push
push
mov
mov
test
je
mov
xor
mov
mov
xor
push
push
push
mov
cmp
jle
mov
mov
mov
inc
mov
cmp
je
call
cmp
jg
xor
pop
pop
pop
mov
jmp
jmp
call
call
call
pop
pop
pop
pop
pop
pop
ret
mov
mov
mov
xor
mov
mov
mov
mov
call
mov
call
ret
push
push
push
mov
mov
mov
mov
mov
cdq
idiv
add
xor
mov
mov
mov
mov
cdq
idiv
mov
dec
test
jne
mov
mov
mov
and
mov
xor
mov
mov
shr
dec
test
jne
pop
pop
pop
ret
mov
xor
xchg
neg
sbb
inc
mov
mov
mov
push
push
mov
mov
rep
pop
pop
leave
ret
ret
mov
push
cmp
je
cmp
jne
cmp
jbe
mov
call
push
lea
push
push
push
push
call
push
call
push
lea
push
push
push
push
call
push
call
pop
ret
cmp
jne
push
push
push
push
call
pop
ret
add
(bad)
(bad)
inc
add
add
push
push
push
push
mov
mov
cmp
jne
cmp
je
mov
mov
xor
mov
call
cmp
jne
cmp
je
call
call
xor
mov
cmp
jne
cmp
jne
xor
mov
call
cmp
jbe
cmp
je
mov
test
je
mov
call
mov
mov
cmp
je
test
je
push
call
call
cmp
jne
call
cmp
je
call
cmp
jne
cmp
je
call
mov
push
call
mov
mov
mov
mov
rep
jmp
pop
pop
pop
pop
pop
ret
mov
call
ret
nop
pop
jmp
ret
mov
test
je
mov
mov
dec
jl
lock
jne
push
lea
call
pop
ret
nop
push
push
mov
mov
mov
test
je
mov
mov
dec
jl
lock
jne
lea
call
add
dec
jne
pop
pop
ret
nop
test
je
mov
inc
jg
push
push
mov
call
mov
pop
push
mov
call
pop
pop
jmp
lock
xchg
test
je
mov
dec
jl
lock
jne
lea
call
ret
nop
test
je
mov
inc
jle
lock
xchg
test
je
mov
dec
jl
lock
jne
lea
call
ret
lea
test
jle
push
add
and
push
call
pop
mov
add
pop
mov
mov
ret
xor
ret
nop
push
push
push
mov
mov
mov
mov
call
mov
mov
test
je
mov
mov
call
mov
call
mov
pop
pop
pop
ret
mov
push
mov
push
push
push
push
mov
push
push
push
mov
push
call
pop
ret
nop
push
push
push
push
add
push
add
mov
mov
mov
test
jg
mov
call
jmp
lea
cmp
jge
push
lea
mov
mov
call
mov
test
jl
lea
mov
mov
call
jmp
mov
add
mov
mov
call
push
mov
mov
mov
call
mov
test
jge
xor
mov
mov
call
add
pop
pop
pop
pop
ret
push
mov
mov
call
pop
ret
nop
xor
test
je
push
cmp
je
cmp
je
cmp
je
cmp
je
add
jmp
inc
inc
inc
mov
pop
sub
jmp
ret
lea
xor
test
je
push
cmp
je
cmp
je
cmp
je
cmp
je
add
jmp
add
add
add
mov
pop
sub
shr
jmp
ret
lea
push
push
push
mov
xor
repnz
jne
not
pop
add
pop
pop
jmp
ret
test
je
mov
ret
test
je
mov
test
je
push
push
push
mov
mov
mov
mov
add
cmp
je
call
mov
mov
mov
add
call
pop
pop
pop
ret
call
mov
mov
jmp
ret
test
je
test
je
cmp
je
cmp
je
push
push
call
pop
pop
jmp
push
push
push
mov
mov
push
mov
add
call
mov
mov
mov
mov
call
mov
mov
mov
add
call
pop
mov
test
je
dec
call
pop
pop
pop
ret
mov
jmp
mov
jmp
ret
push
push
push
push
push
mov
xor
mov
test
je
cmp
jne
mov
mov
dec
jmp
xor
mov
test
je
add
cmp
jne
xor
dec
jne
test
je
mov
mov
mov
call
mov
push
add
dec
jmp
call
push
mov
mov
mov
test
je
mov
add
call
dec
jne
pop
pop
test
jne
test
je
dec
call
pop
pop
pop
pop
pop
lea
jmp
ret
mov
push
push
push
mov
mov
cmp
je
test
je
test
je
mov
mov
sub
ja
add
push
shr
je
mov
mov
cmp
jne
dec
je
mov
mov
cmp
jne
add
add
dec
jne
jmp
add
add
pop
and
je
mov
mov
cmp
jne
dec
je
cmp
jne
dec
je
and
and
cmp
jne
add
jmp
mov
sub
jmp
mov
sub
jmp
pop
cmp
jne
cmp
jne
shr
shr
cmp
jne
cmp
pop
pop
pop
ret
mov
test
je
mov
inc
jle
lock
ret
nop
test
je
ret
add
ret
mov
test
je
mov
dec
je
push
mov
mov
call
mov
mov
mov
push
mov
call
pop
mov
dec
jl
lock
jne
lea
call
mov
pop
mov
ret
lea
jmp
ret
mov
jmp
ret
mov
push
test
je
mov
test
je
dec
jl
cmp
jge
sub
test
jl
cmp
jg
add
mov
call
jmp
xor
jmp
mov
jmp
mov
call
pop
ret
ret
push
push
push
mov
mov
mov
call
mov
test
je
mov
dec
jl
cmp
jge
test
jle
sub
cmp
jle
mov
sub
add
lea
call
mov
mov
mov
sub
call
pop
pop
pop
ret
test
je
push
push
push
push
mov
mov
mov
mov
push
test
je
mov
dec
jge
xor
cmp
jle
mov
mov
mov
add
call
pop
cmp
jne
mov
mov
lea
mov
sub
add
add
call
mov
mov
mov
add
call
pop
pop
pop
pop
ret
nop
test
je
test
je
push
push
push
mov
mov
mov
push
mov
dec
js
mov
inc
sub
jle
repnz
jne
mov
push
push
mov
repz
pop
pop
je
mov
jmp
pop
xor
jmp
xor
ret
pop
mov
sub
pop
pop
pop
ret
lea
push
push
push
mov
mov
xor
test
jle
mov
test
je
cmp
jne
sub
add
push
mov
call
pop
add
mov
mov
mov
jmp
mov
call
mov
mov
test
je
mov
mov
cmp
jl
mov
call
mov
call
mov
pop
pop
pop
ret
mov
mov
jmp
ret
mov
test
je
mov
push
push
call
pop
ret
lea
push
push
mov
mov
mov
test
je
mov
push
call
add
dec
jne
pop
pop
ret
lea
test
je
mov
shr
je
push
push
push
call
test
je
ret
xor
push
mov
push
push
mov
lea
mov
mov
mov
add
mov
mov
call
add
dec
jg
mov
pop
pop
pop
ret
lea
cmp
je
call
ret
mov
call
ret
cmp
je
push
push
push
push
mov
mov
mov
xor
mov
mov
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
jmp
cmp
mov
jg
call
jmp
mov
call
jmp
cmp
mov
jg
call
jmp
mov
call
jmp
mov
add
call
dec
jg
jmp
push
mov
mov
mov
add
mov
mov
call
dec
jg
pop
jmp
push
mov
mov
add
mov
call
dec
jg
pop
jmp
mov
add
call
dec
jg
jmp
mov
mov
add
call
dec
jg
jmp
pop
pop
pop
pop
mov
jmp
pop
pop
pop
pop
ret
mov
cmp
je
call
ret
mov
call
ret
push
push
push
push
mov
mov
xor
mov
lea
mov
xor
mov
push
mov
sub
jle
mov
add
add
call
mov
mov
mov
mov
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
mov
pop
pop
pop
pop
jmp
mov
add
call
mov
jmp
mov
add
call
mov
jmp
lea
add
call
mov
jmp
xor
mov
push
push
mov
mov
lea
add
call
pop
jmp
xor
mov
mov
push
mov
lea
add
call
pop
jmp
mov
add
call
mov
jmp
mov
mov
add
call
mov
add
add
dec
jne
pop
sub
jle
lea
add
call
pop
pop
pop
pop
ret
mov
push
push
push
push
mov
mov
mov
mov
mov
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
mov
pop
pop
pop
pop
jmp
mov
mov
call
add
add
dec
jne
jmp
mov
mov
call
add
add
dec
jne
jmp
mov
mov
call
add
add
dec
jne
jmp
xor
mov
lea
mov
mov
mov
push
call
add
add
dec
jne
jmp
mov
mov
mov
call
xor
mov
add
add
dec
jne
jmp
mov
mov
call
add
add
dec
jne
jmp
mov
mov
mov
call
add
add
dec
jne
pop
pop
pop
pop
ret
ret
nop
call
ret
mov
xchg
call
ret
nop
mov
jmp
ret
test
je
mov
ret
push
mov
push
call
pop
ret
nop
jmp
ret
mov
call
ret
mov
push
mov
add
push
push
push
mov
mov
mov
mov
mov
mov
mov
mov
test
jg
test
jge
mov
call
mov
mov
call
jmp
xor
cmp
je
sub
mov
mov
sub
mov
movzx
add
mov
mov
mov
test
je
mov
mov
jmp
xor
mov
mov
imul
mov
mov
cdq
idiv
cmp
je
mov
call
add
cmp
je
mov
cmp
jne
mov
mov
cmp
jle
cmp
je
mov
add
mov
imul
add
mov
sub
mov
call
lea
mov
call
mov
mov
jmp
mov
dec
mov
call
mov
mov
cmp
jge
mov
cmp
je
mov
imul
mov
add
xor
call
mov
push
mov
mov
mov
add
mov
call
jmp
mov
imul
mov
add
mov
mov
call
mov
mov
add
mov
mov
add
mov
sub
imul
mov
imul
add
xor
call
cmp
jle
add
dec
dec
test
jl
inc
xor
mov
push
mov
lea
mov
mov
call
inc
dec
jne
mov
mov
mov
pop
pop
pop
mov
pop
ret
mov
push
add
call
ret
nop
mov
test
je
mov
lock
jne
push
mov
xor
mov
mov
test
je
mov
test
je
mov
call
sub
call
pop
ret
mov
push
mov
test
je
lock
test
je
lock
jne
push
push
mov
inc
call
pop
pop
mov
pop
ret
nop
push
mov
add
push
push
push
mov
mov
mov
cmp
je
xor
push
push
push
mov
mov
mov
call
xor
pop
pop
pop
mov
jmp
jmp
call
mov
mov
mov
cmp
jne
pop
pop
pop
pop
pop
pop
ret
mov
mov
mov
mov
ret
mov
push
mov
add
mov
xor
push
push
push
mov
mov
mov
call
xor
pop
pop
pop
mov
push
mov
cmp
jne
mov
mov
mov
jmp
mov
mov
cmp
je
mov
mov
cmp
jne
mov
mov
mov
mov
jmp
mov
mov
mov
cmp
jne
ret
jmp
jmp
pop
pop
pop
ret
mov
test
je
mov
push
push
mov
call
pop
ret
lea
test
je
push
push
mov
push
call
pop
mov
pop
test
jne
ret
mov
push
call
ret
mov
test
mov
je
mov
push
call
ret
push
mov
add
push
xor
mov
xor
push
push
push
mov
push
lea
push
push
push
call
lea
lea
mov
call
mov
lea
call
mov
cmp
je
xor
xor
pop
pop
pop
mov
push
lea
call
ret
jmp
jmp
mov
pop
mov
pop
ret
push
mov
xor
push
push
push
mov
inc
jne
mov
call
mov
call
mov
call
call
xor
pop
pop
pop
mov
push
ret
jmp
jmp
pop
ret
nop
sub
jae
mov
mov
mov
mov
mov
call
test
je
call
call
mov
mov
mov
call
mov
call
mov
call
and
cmp
je
call
and
cmp
jbe
mov
jmp
call
call
mov
jmp
call
call
mov
call
mov
ret
nop
jmp
mov
jmp
mov
jmp
mov
jmp
mov
push
push
call
ret
lea
mov
ret
mov
push
call
mov
test
je
cmp
jne
mov
call
mov
call
test
jne
mov
call
jmp
push
mov
push
call
pop
ret
mov
mov
test
jne
mov
mov
ret
call
mov
push
call
test
je
ret
mov
ret
push
call
test
je
ret
mov
call
ret
nop
push
mov
xor
mov
push
call
mov
mov
mov
xor
mov
xor
mov
call
mov
mov
call
pop
ret
lea
push
mov
xor
push
push
push
mov
inc
xor
pop
pop
pop
mov
push
ret
jmp
jmp
pop
ret
mov
sub
ret
push
mov
xor
push
push
push
mov
inc
xor
pop
pop
pop
mov
push
ret
jmp
jmp
pop
ret
mov
sub
ret
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
shr
ret
xchg
call
ret
nop
xor
call
ret
push
mov
xor
push
push
push
mov
inc
xor
pop
pop
pop
mov
push
ret
jmp
jmp
pop
ret
mov
sub
ret
push
mov
xor
push
push
push
mov
inc
xor
pop
pop
pop
mov
push
ret
jmp
jmp
pop
ret
mov
sub
ret
push
mov
xor
push
push
push
mov
inc
xor
pop
pop
pop
mov
push
ret
jmp
jmp
pop
ret
mov
sub
ret
sub
sub
add
add
add
fs
inc
add
mov
inc
add
add
add
add
fs
inc
add
stos
inc
add
inc
add
add
add
add
add
inc
add
add
add
add
add
add
fs
inc
add
inc
add
add
add
add
fs
inc
add
inc
add
add
add
add
fs
inc
add
inc
add
add
add
add
fs
inc
add
loopne
add
add
add
add
je
inc
add
inc
add
inc
add
jnp
add
add
mov
add
data16
imul
arpl
xor
add
add
jb
arpl
xor
add
add
jb
arpl
add
push
imul
xor
imul
xor
inc
add
arpl
imul
inc
add
add
add
add
add
add
add
inc
add
add
add
add
add
add
dec
inc
add
add
add
add
add
add
add
add
push
add
add
add
add
add
add
or
add
in
add
add
add
int
add
add
add
add
leave
mov
les
ret
mov
mov
mov
retf
leave
add
add
retf
lds
retf
add
add
add
add
add
dec
add
leave
push
add
inc
add
add
dec
add
inc
add
inc
add
dec
add
inc
add
add
push
retf
fwait
dec
add
das
adc
or
int3
xor
sub
leave
or
aad
adc
adc
adc
or
add
add
add
add
mov
les
ret
mov
mov
mov
ds
add
add
add
retf
xor
enter
add
and
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
test
jne
mov
ret
mov
test
jne
mov
ret
mov
pop
xchg
push
mov
call
pop
ret
mov
push
push
push
push
push
xor
mov
mov
mov
mov
mov
xor
mov
push
call
movsx
test
je
xor
mov
or
mov
dec
dec
inc
jne
mov
pop
pop
pop
pop
pop
ret
lea
mov
mov
ret
mov
cmp
jle
mov
ret
nop
cmp
jge
mov
ret
nop
push
call
pop
push
push
mov
call
mov
call
push
push
call
pop
push
push
mov
ret
pop
pop
pop
push
push
push
push
call
call
ret
mov
ret
lea
mov
ret
nop
xor
ret
nop
push
mov
mov
pop
ret
lea
push
mov
mov
pop
ret
lea
push
mov
pop
ret
nop
push
mov
xor
pop
ret
lea
push
mov
xor
pop
ret
lea
push
mov
xor
pop
ret
lea
push
mov
xor
pop
ret
lea
push
mov
mov
xor
mov
mov
call
pop
ret
ret
lea
add
ret
lea
push
xchg
xor
xchg
jecxz
mov
mov
call
mov
jecxz
mov
mov
jecxz
mov
mov
push
push
mov
lea
xor
mov
call
pop
pop
call
jmp
xor
xchg
call
pop
ret
mov
xor
call
mov
ret
lea
push
push
push
mov
mov
mov
cmp
jl
mov
test
jg
mov
test
jns
add
sar
inc
mov
call
mov
add
mov
call
jmp
mov
add
mov
call
mov
mov
mov
inc
pop
pop
pop
ret
mov
mov
call
ret
nop
test
jle
cmp
jge
push
xchg
lea
cmp
jbe
mov
sub
mov
push
sub
mov
lea
lea
add
pop
sub
shl
call
pop
ret
push
mov
mov
call
test
jl
mov
xchg
call
pop
ret
push
mov
mov
push
dec
mov
repnz
pop
je
mov
mov
stc
sbb
sar
pop
ret
push
push
push
push
call
pop
pop
sub
shl
mov
pop
mov
lea
jl
push
lea
call
pop
pop
mov
ret
nop
push
mov
add
push
push
push
mov
mov
mov
mov
mov
mov
mov
mov
xor
mov
test
je
cmp
je
mov
mov
mov
mov
mov
push
push
push
call
xor
mov
jmp
push
push
call
mov
cmp
je
lea
mov
mov
call
jmp
cmp
je
lea
mov
mov
call
jmp
mov
push
push
push
push
call
pop
pop
pop
mov
pop
ret
lea
push
mov
push
push
push
push
mov
xor
push
push
push
mov
test
jne
pop
add
jmp
mov
call
mov
xor
pop
pop
pop
mov
jmp
jmp
call
mov
pop
pop
pop
pop
pop
ret
mov
mov
xor
call
ret
mov
call
mov
shr
and
mov
shr
and
or
shl
and
or
mov
ret
push
push
mov
mov
mov
mov
xor
call
mov
call
mov
pop
pop
ret
mov
push
push
mov
mov
mov
cmp
je
test
je
mov
call
mov
push
call
mov
mov
call
pop
pop
ret
mov
cmp
je
mov
call
ret
mov
cmp
je
mov
call
ret
mov
xchg
mov
test
jne
push
lea
push
call
pop
mov
ret
nop
push
mov
mov
xor
call
mov
call
mov
call
mov
call
mov
call
mov
pop
ret
nop
call
ret
mov
mov
mov
ret
mov
add
adc
ret
nop
push
xchg
lods
sub
mov
lods
sbb
mov
pop
ret
mov
neg
mov
mov
sbb
mov
ret
mov
push
push
xchg
mov
mov
lods
mul
stos
xchg
lods
mul
add
stos
pop
pop
ret
mov
xor
cmp
xchg
jg
jl
cmp
je
inc
ret
dec
ret
mov
push
push
add
mov
mov
mov
mov
mov
call
mov
call
pop
pop
pop
pop
ret
push
push
push
push
add
mov
mov
xor
mov
xor
mov
mov
test
je
mov
mov
cmp
jne
mov
inc
jmp
cmp
jne
inc
jmp
mov
cmp
jb
cmp
ja
lea
mov
mov
call
mov
mov
mov
mov
xor
mov
sub
mov
call
inc
mov
call
cmp
jle
cmp
je
lea
mov
call
mov
mov
mov
mov
add
pop
pop
pop
pop
ret
mov
push
mov
fld1
test
je
fld
jg
fdivr
neg
jmp
fmul
shr
jae
fmul
jne
fstp
fwait
pop
ret
lea
push
mov
add
push
push
push
xor
mov
mov
xor
push
push
push
mov
xor
mov
mov
test
je
mov
mov
cmp
jne
mov
inc
xor
xor
mov
mov
jmp
xor
mov
cmp
jge
sub
je
sub
je
jmp
add
sub
jb
sub
je
sub
je
jmp
test
jne
mov
jmp
test
jne
fld
fmul
xor
mov
mov
fild
faddp
fsub
fstp
fwait
jmp
fld
fmul
fstp
fwait
xor
mov
sub
mov
fild
fmul
fadd
fstp
fwait
jmp
lea
lea
mov
call
mov
call
mov
push
push
push
mov
call
fmul
fstp
fwait
jmp
inc
mov
call
cmp
jle
cmp
je
fld
fchs
fstp
fwait
xor
pop
pop
pop
mov
push
lea
call
ret
jmp
jmp
fld
pop
pop
pop
mov
pop
ret
add
add
and
add
int
int3
int3
int3
int3
int3
int3
sti
aas
add
imul
idiv
ret
lea
push
push
mov
mov
or
xor
repnz
not
mov
mov
mov
mov
shr
rep
mov
and
rep
pop
pop
ret
mov
push
mov
mov
xor
repnz
not
std
dec
mov
repnz
mov
jne
mov
inc
cld
pop
ret
lea
push
xchg
xchg
repnz
xchg
pop
ret
push
push
mov
mov
mov
xor
and
shr
shr
repz
jne
mov
repz
jne
inc
pop
pop
ret
nop
push
push
push
mov
mov
mov
call
mov
mov
call
mov
mov
mov
call
test
jle
push
mov
push
call
pop
pop
pop
ret
nop
push
push
mov
mov
push
mov
call
push
push
mov
call
push
push
push
call
sub
pop
pop
ret
call
ret
mov
push
push
push
mov
mov
mov
xor
test
je
repnz
jne
inc
sub
mov
mov
mov
mov
shr
rep
mov
and
rep
stos
mov
pop
pop
pop
ret
lea
push
mov
push
push
push
push
push
push
mov
mov
mov
xor
push
push
push
mov
mov
mov
call
mov
test
jle
lea
push
mov
dec
mov
mov
call
push
push
mov
call
mov
add
lea
mov
call
push
mov
mov
call
mov
jmp
xor
xor
pop
pop
pop
mov
push
lea
mov
call
ret
jmp
jmp
mov
pop
pop
pop
mov
pop
ret
mov
push
push
mov
xchg
or
xor
repnz
not
mov
xor
repz
mov
mov
sub
pop
pop
ret
nop
push
push
push
mov
mov
mov
xor
or
je
repnz
sub
mov
mov
xor
repz
mov
mov
sub
pop
pop
pop
ret
nop
xchg
xchg
or
xor
cmp
je
repnz
dec
dec
sub
mov
ret
push
mov
test
jne
sub
mov
push
push
push
call
xchg
mov
mov
call
add
pop
ret
push
call
pop
inc
call
mov
call
loop
mov
sub
cmp
jl
cmp
jne
cmp
jne
inc
dec
sub
xchg
xchg
call
pop
ret
lea
movzx
push
push
push
push
call
ret
mov
push
mov
add
push
push
xor
mov
mov
mov
mov
mov
mov
mov
xor
push
push
push
mov
mov
call
lea
mov
call
jmp
lea
lea
mov
call
cmp
je
mov
mov
call
cmp
jne
mov
call
cmp
jne
mov
cmp
jne
mov
mov
call
jmp
push
push
lea
push
push
mov
lea
mov
call
mov
call
push
call
cmp
je
lea
lea
mov
call
mov
mov
call
cmp
jne
lea
mov
call
cmp
jne
lea
mov
call
mov
mov
call
xor
pop
pop
pop
mov
push
lea
mov
call
lea
mov
call
ret
jmp
jmp
pop
pop
mov
pop
ret
add
add
(bad)
(bad)
inc
add
add
add
push
mov
mov
push
mov
call
push
call
mov
mov
cmp
setne
pop
pop
pop
ret
nop
push
mov
push
mov
push
call
cmp
sbb
inc
pop
ret
mov
push
call
ret
lea
push
mov
add
push
mov
mov
mov
lea
mov
call
test
je
mov
mov
mov
mov
lea
call
mov
mov
pop
mov
pop
ret
nop
push
push
call
ret
push
push
push
mov
mov
mov
mov
mov
call
cmp
je
mov
call
mov
cmp
jne
mov
call
mov
mov
mov
call
pop
pop
pop
ret
nop
push
push
mov
mov
mov
mov
mov
call
pop
pop
ret
push
push
mov
mov
mov
mov
mov
call
pop
pop
ret
push
push
add
mov
mov
mov
call
mov
mov
mov
call
mov
mov
cmp
jne
mov
call
jmp
push
mov
sub
inc
mov
mov
call
pop
pop
pop
pop
ret
add
add
pop
das
add
in
xor
push
push
push
push
push
mov
mov
call
xor
push
push
push
mov
mov
call
test
setg
test
je
lea
mov
call
mov
lea
call
mov
call
cmp
jl
mov
call
test
jne
lea
mov
call
mov
mov
call
je
lea
mov
call
mov
call
test
je
mov
call
test
jne
xor
jmp
mov
xor
pop
pop
pop
mov
push
lea
mov
call
ret
jmp
jmp
mov
pop
mov
pop
ret
lea
push
mov
push
mov
call
push
call
cmp
sbb
inc
pop
ret
mov
push
push
add
mov
mov
push
lea
push
mov
call
push
call
mov
mov
mov
call
add
pop
pop
ret
nop
push
push
push
add
mov
mov
xor
mov
lea
push
call
xor
mov
cmp
jne
cmp
setae
jmp
cmp
jne
mov
cmp
seta
test
jne
cmp
jne
cmp
seta
test
jne
cmp
setae
test
je
push
call
mov
push
push
call
mov
test
je
push
lea
push
lea
push
mov
call
push
call
jmp
lea
push
lea
push
lea
push
lea
push
mov
call
push
call
lea
mov
imul
xor
call
lea
mov
mov
call
add
pop
pop
pop
ret
add
imul
gs
xor
add
add
inc
gs
imul
push
jo
arpl
js
add
push
push
mov
mov
mov
mov
xor
call
mov
push
mov
mov
mov
call
mov
pop
pop
pop
pop
ret
push
push
push
mov
mov
mov
mov
call
mov
mov
pop
pop
pop
ret
nop
push
mov
add
push
push
push
xor
mov
mov
mov
mov
mov
mov
mov
mov
xor
push
push
push
mov
mov
and
cmp
je
mov
and
test
jne
xor
jmp
mov
mov
cmp
je
cmp
jne
mov
cmp
jne
cmp
je
test
je
xor
jmp
mov
mov
cmp
jne
mov
and
test
je
cmp
je
and
test
je
and
test
jne
mov
mov
mov
mov
dec
test
jl
inc
xor
mov
mov
mov
call
mov
cmp
je
cmp
je
cmp
jne
mov
cmp
jne
lea
mov
inc
call
mov
push
lea
mov
call
mov
pop
call
test
je
mov
jmp
mov
lea
mov
call
mov
push
lea
mov
call
mov
pop
call
test
jne
inc
dec
jne
cmp
je
cmp
je
xor
jmp
mov
mov
xor
pop
pop
pop
mov
push
lea
mov
call
ret
jmp
jmp
mov
pop
pop
pop
mov
pop
ret
lea
push
mov
add
push
push
push
xor
mov
mov
mov
mov
mov
mov
mov
mov
xor
push
push
push
mov
mov
call
lea
mov
call
cmp
je
lea
mov
call
mov
lea
call
cmp
jne
call
mov
mov
mov
call
jne
mov
mov
call
jmp
mov
mov
call
lea
mov
call
mov
mov
lea
call
mov
call
mov
lea
call
mov
lea
call
test
je
call
mov
push
lea
mov
mov
call
test
je
mov
cmp
je
lea
push
lea
mov
mov
call
mov
dec
je
dec
je
jmp
cmp
jne
mov
call
mov
lea
mov
mov
call
mov
mov
mov
call
lea
call
test
jne
lea
call
lea
call
xor
pop
pop
pop
mov
push
lea
mov
call
ret
jmp
jmp
pop
pop
pop
mov
pop
ret
add
(bad)
(bad)
inc
add
add
sub
(bad)
(bad)
(bad)
inc
add
add
add
add
push
mov
mov
push
push
push
mov
call
push
push
call
test
je
xor
mov
mov
pop
pop
pop
ret
lea
push
push
add
mov
mov
lea
push
lea
push
push
push
push
push
push
mov
call
push
push
call
test
je
xor
mov
mov
pop
pop
pop
pop
ret
nop
push
push
add
mov
mov
mov
xor
mov
test
je
lea
push
lea
push
lea
push
push
mov
call
push
push
call
test
jne
cmp
je
xor
mov
mov
add
pop
pop
ret
mov
push
mov
mov
add
push
mov
mov
push
mov
add
push
push
mov
mov
call
push
mov
mov
push
call
test
sete
pop
ret
lea
push
mov
add
push
push
push
mov
mov
mov
mov
call
cmp
je
xor
mov
xor
mov
push
call
pop
test
je
cmp
je
cmp
jne
mov
call
mov
push
call
pop
test
je
cmp
jne
push
push
mov
push
call
mov
mov
call
mov
push
push
mov
push
call
mov
mov
call
mov
call
jmp
mov
mov
call
mov
call
pop
pop
pop
mov
pop
ret
lea
push
push
push
mov
mov
mov
test
je
push
lea
push
push
push
mov
call
push
push
call
test
je
xor
jmp
mov
pop
pop
pop
ret
lea
push
push
push
mov
mov
mov
test
je
mov
call
inc
push
mov
call
push
push
push
mov
call
push
push
call
test
je
xor
jmp
mov
pop
pop
pop
ret
mov
push
mov
push
push
push
push
mov
mov
mov
mov
cmp
je
mov
test
je
mov
call
inc
push
mov
call
push
push
push
mov
call
push
push
call
test
je
xor
jmp
mov
pop
pop
pop
pop
pop
ret
nop
test
je
push
call
ret
nop
push
push
add
mov
mov
test
je
lea
push
push
lea
push
push
mov
call
push
push
call
test
je
xor
jmp
mov
pop
pop
pop
pop
ret
push
mov
push
push
push
mov
mov
mov
test
je
mov
push
push
push
push
mov
call
push
push
call
test
je
xor
jmp
mov
pop
pop
pop
pop
ret
push
mov
add
push
push
push
xor
mov
mov
mov
xor
push
push
push
mov
xor
mov
call
push
push
push
push
push
push
lea
push
push
push
push
push
push
call
test
jne
cmp
jbe
mov
inc
mov
mov
call
mov
xor
jmp
lea
mov
call
mov
mov
call
mov
inc
mov
inc
push
push
push
push
lea
push
push
push
push
call
cmp
jne
mov
call
mov
xor
pop
pop
pop
mov
push
lea
call
ret
jmp
jmp
mov
pop
pop
pop
mov
pop
ret
nop
push
push
push
mov
mov
mov
test
je
push
push
lea
push
push
mov
call
push
push
call
mov
pop
pop
pop
ret
mov
add
lea
push
call
mov
lea
call
fld
add
ret
nop
push
push
add
mov
mov
push
push
call
cmp
sbb
inc
test
je
fild
fld
fdivrp
fadd
fstp
fwait
mov
pop
pop
pop
pop
ret
add
add
add
add
imul
add
push
dec
push
mov
push
xchg
fld
fsub
fld
fmulp
jmp
push
lods
push
dec
add
add
shr
es
call
push
push
mov
push
push
call
pop
pop
cmp
sbb
inc
pop
pop
ret
nop
push
push
add
mov
mov
push
push
call
test
je
lea
push
lea
push
call
test
je
mov
lea
call
test
jne
xor
jmp
mov
add
pop
pop
ret
mov
push
mov
add
push
push
push
mov
mov
mov
mov
mov
xor
mov
mov
call
xor
test
jne
cmp
jne
mov
jmp
mov
cmp
je
mov
call
mov
call
mov
cmp
je
push
mov
push
push
mov
push
push
mov
push
call
test
jne
call
cmp
jne
mov
add
mov
jmp
mov
mov
call
cmp
je
mov
call
pop
pop
pop
mov
pop
ret
lea
push
mov
add
push
push
push
mov
mov
mov
mov
xor
mov
mov
call
xor
test
je
mov
jmp
test
je
mov
test
je
or
test
je
or
cmp
je
mov
call
mov
call
mov
cmp
je
push
mov
push
mov
push
push
push
mov
push
call
test
jne
call
cmp
jne
mov
add
mov
jmp
mov
mov
call
cmp
je
mov
call
pop
pop
pop
mov
pop
ret
lea
push
mov
add
push
push
mov
mov
push
push
lea
call
xor
mov
test
je
mov
call
mov
mov
push
push
lea
xor
mov
call
pop
pop
mov
pop
ret
lea
push
mov
add
push
xor
mov
mov
mov
xor
push
push
push
mov
fld
fcomp
fnstsw
sahf
jae
fld
fadd
fstp
fwait
push
push
lea
call
push
lea
push
lea
xor
mov
call
push
push
push
lea
push
lea
mov
mov
call
push
mov
mov
call
xor
pop
pop
pop
mov
push
lea
mov
call
ret
jmp
jmp
pop
mov
pop
ret
add
add
cmp
(bad)
(bad)
inc
add
add
add
add
add
add
pop
add
add
mov
xor
call
ret
call
ret
call
ret
mov
ret
call
ret
call
ret
push
mov
push
push
mov
mov
mov
call
xor
push
push
push
mov
cmp
je
mov
call
push
lea
call
mov
mov
pop
call
mov
jmp
xor
xor
pop
pop
pop
mov
push
lea
call
ret
jmp
jmp
mov
pop
pop
pop
ret
push
mov
add
push
push
push
xor
mov
mov
mov
lea
xor
push
push
push
mov
mov
call
mov
mov
mov
mov
call
cmp
je
lea
mov
call
mov
mov
call
cmp
jne
xor
pop
pop
pop
mov
push
lea
call
ret
jmp
jmp
pop
pop
pop
pop
pop
pop
ret
lea
call
ret
push
push
mov
mov
xor
call
mov
lea
mov
mov
call
lea
mov
mov
mov
pop
pop
ret
mov
call
ret
lea
push
mov
push
call
cmp
jne
xor
ret
nop
ret
lea
xor
ret
nop
xor
ret
nop
mov
call
ret
lea
mov
call
ret
lea
push
push
call
xchg
call
xchg
pop
ret
mov
push
mov
mov
cmp
je
call
mov
pop
ret
lea
push
mov
and
loop
add
loop
add
cmp
jle
push
mov
call
pop
xchg
mov
pop
ret
nop
mov
ret
push
push
xchg
cmp
jae
mov
mov
jecxz
lea
call
jmp
or
je
xchg
call
mov
pop
inc
loop
cmp
je
mov
xchg
jecxz
xchg
call
xor
mov
cmp
jb
mov
pop
ret
lea
push
xchg
mov
add
cmp
jle
mov
sub
push
mov
add
call
pop
add
pop
ret
push
xchg
mov
add
cmp
push
push
jle
xchg
mov
call
pop
pop
mov
add
push
call
pop
add
pop
ret
mov
push
push
push
mov
mov
mov
call
mov
mov
mov
call
mov
call
push
call
cmp
jbe
mov
mov
call
pop
pop
pop
ret
nop
push
push
push
push
add
mov
mov
mov
mov
mov
mov
xor
mov
cmp
jle
mov
sub
mov
call
mov
mov
dec
mov
call
mov
mov
mov
sub
mov
cmp
jge
mov
cmp
jle
mov
mov
call
mov
xor
mov
mov
call
mov
xor
call
add
add
mov
mov
mov
mov
mov
call
add
mov
mov
mov
add
mov
mov
mov
pop
pop
pop
pop
pop
pop
ret
mov
push
push
push
push
add
mov
mov
jmp
mov
mov
sub
mov
mov
mov
mov
mov
mov
mov
mov
sub
cmp
jg
mov
call
mov
mov
mov
call
sub
jmp
sub
mov
mov
mov
sub
mov
cmp
ja
mov
cmp
jbe
mov
pop
pop
pop
pop
pop
pop
ret
mov
push
push
push
mov
xor
jmp
mov
mov
call
add
mov
cmp
jl
lea
call
xor
mov
xor
mov
pop
pop
pop
ret
lea
push
push
push
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
test
je
mov
mov
or
or
mov
call
mov
mov
mov
pop
pop
pop
ret
mov
push
mov
call
mov
mov
pop
ret
nop
ret
lea
push
push
add
mov
mov
call
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
mov
mov
call
push
push
mov
call
mov
add
pop
pop
ret
push
mov
add
push
add
push
push
push
mov
mov
mov
mov
cmp
jne
mov
mov
call
push
push
lea
push
mov
call
push
mov
call
push
mov
call
push
call
test
je
mov
lea
mov
call
jmp
mov
call
jmp
mov
mov
call
mov
call
push
mov
call
push
mov
call
push
mov
call
push
call
pop
pop
pop
mov
pop
ret
mov
push
push
mov
mov
xor
call
mov
lea
mov
call
mov
pop
pop
ret
mov
xor
call
ret
push
push
push
push
call
ret
push
push
push
push
call
ret
push
push
mov
mov
xor
call
mov
mov
test
je
mov
mov
call
mov
mov
pop
pop
ret
mov
xor
call
ret
mov
xor
inc
mov
push
mov
xor
push
call
or
mov
mov
call
push
push
push
call
mov
xchg
mov
cdq
push
push
push
push
sub
push
push
push
sub
push
push
push
mov
push
push
call
call
call
call
pop
xor
ret
cmp
jne
mov
and
cmp
jne
push
mov
jecxz
xchg
mov
jecxz
mov
mov
jecxz
xchg
push
call
test
pop
je
call
pop
xor
mov
inc
ret
pop
jmp
pop
push
call
cmp
jne
mov
jecxz
xchg
push
call
pop
push
call
mov
ret
pop
call
pop
pop
push
call
pop
ret
lea
xor
mov
cmp
je
cmp
je
cmp
jne
cmp
jne
mov
mov
ret
mov
xor
cmp
jne
mov
ret
nop
push
push
push
add
mov
mov
mov
xor
mov
cmp
je
cmp
jne
mov
mov
mov
mov
test
jne
lea
push
mov
push
call
mov
mov
mov
call
mov
cmp
je
mov
mov
mov
movsx
push
movsx
push
mov
mov
mov
call
mov
cmp
jne
lea
push
mov
push
call
mov
mov
mov
xor
mov
mov
add
pop
pop
pop
ret
add
or
add
push
push
push
push
mov
mov
mov
xor
mov
call
mov
mov
mov
mov
call
mov
mov
call
mov
mov
call
mov
mov
test
je
mov
mov
mov
add
add
mov
add
mov
mov
mov
call
mov
pop
pop
pop
pop
ret
push
mov
add
push
push
push
mov
mov
xor
mov
push
call
mov
test
je
push
push
call
mov
cmp
je
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
mov
lea
lea
mov
call
test
jne
mov
cmp
je
cmp
je
mov
mov
lea
lea
mov
call
test
jne
mov
cmp
je
cmp
je
mov
mov
lea
lea
mov
call
test
jne
mov
call
test
je
cmp
je
cmp
je
cmp
jne
xor
mov
cmp
jne
sub
jne
mov
xor
mov
mov
call
test
jne
jmp
cmp
jne
cmp
je
cmp
jne
push
push
push
mov
push
call
test
je
push
push
push
mov
push
call
cmp
jne
push
mov
mov
push
push
mov
push
call
lea
lea
mov
mov
call
jmp
lea
lea
mov
mov
call
jmp
cmp
jne
cmp
je
mov
mov
mov
mov
push
push
call
mov
cmp
je
mov
push
mov
push
mov
push
push
mov
push
call
mov
jmp
xor
mov
jmp
mov
push
mov
push
push
push
call
mov
mov
pop
pop
pop
mov
pop
ret
nop
push
push
mov
push
push
call
mov
test
je
push
push
call
test
je
push
push
call
push
push
call
mov
test
jne
pop
pop
ret
push
push
push
push
push
mov
mov
mov
xor
mov
cmp
jb
cmp
ja
mov
push
mov
push
add
push
push
call
mov
mov
mov
jmp
mov
cmp
jb
cmp
ja
test
je
sub
jne
push
mov
push
call
mov
call
push
mov
push
call
mov
call
mov
mov
mov
jmp
cmp
jne
mov
call
test
je
mov
call
dec
je
sub
je
dec
je
jmp
mov
call
mov
mov
call
jmp
mov
mov
mov
call
jmp
push
push
push
mov
push
call
jmp
cmp
jne
mov
call
mov
pop
pop
pop
pop
pop
ret
lea
push
mov
push
push
push
push
mov
mov
mov
mov
call
mov
push
mov
push
mov
mov
mov
call
mov
mov
call
mov
pop
pop
pop
pop
pop
ret
push
push
push
push
add
mov
mov
mov
xor
cmp
jne
push
mov
push
call
test
je
lea
push
mov
push
call
mov
neg
push
mov
neg
push
lea
push
call
mov
push
call
mov
push
push
lea
lea
movs
movs
movs
movs
pop
pop
mov
sub
push
mov
sub
push
mov
add
push
mov
add
push
push
call
mov
mov
mov
mov
cmp
jne
push
call
mov
push
mov
push
call
mov
push
mov
push
call
mov
cmp
je
mov
mov
mov
call
mov
mov
push
lea
push
mov
push
mov
push
push
push
push
call
push
call
push
mov
push
call
mov
add
pop
pop
pop
pop
ret
add
je
gs
gs
ins
add
ja
push
popa
arpl
jb
jne
add
outs
push
push
popa
je
add
add
add
je
add
add
push
mov
test
je
or
pop
ret
and
pop
ret
nop
test
setne
ret
push
add
mov
mov
mov
cmp
jne
mov
mov
mov
mov
sub
jne
mov
call
test
je
mov
call
jmp
cmp
jne
mov
test
je
call
xor
mov
mov
pop
pop
pop
ret
push
push
push
push
add
mov
mov
lea
cmp
jne
xor
mov
mov
mov
cmp
jbe
mov
xor
or
push
call
mov
jmp
mov
push
call
mov
mov
mov
cmp
jg
add
lea
cmp
jne
cmp
jg
xor
mov
mov
push
call
mov
lea
mov
call
mov
push
mov
push
mov
or
mov
mov
call
mov
mov
call
mov
mov
mov
add
add
mov
mov
mov
push
push
mov
call
mov
mov
mov
test
je
mov
mov
mov
mov
mov
call
mov
or
mov
and
mov
or
mov
add
add
mov
add
mov
push
push
push
mov
push
call
mov
mov
mov
mov
call
push
push
push
mov
push
call
mov
mov
call
mov
add
pop
pop
pop
pop
ret
add
add
add
add
add
add
and
mov
jmp
mov
push
push
push
push
add
mov
mov
call
mov
mov
call
cmp
jge
push
lea
push
push
mov
call
push
push
push
call
push
lea
push
call
mov
jmp
push
push
push
mov
push
push
push
call
mov
push
push
call
mov
push
mov
push
push
push
push
push
call
mov
add
pop
pop
pop
pop
ret
push
push
mov
mov
mov
mov
call
mov
pop
pop
ret
lea
mov
call
ret
xor
ret
nop
push
push
push
add
mov
mov
xor
cmp
jne
mov
lea
mov
mov
mov
call
cmp
jne
cmp
je
mov
xor
mov
mov
jmp
mov
xor
mov
mov
cmp
je
mov
call
test
jne
cmp
jne
push
call
mov
mov
xor
mov
mov
pop
pop
pop
pop
pop
ret
push
mov
push
mov
mov
call
mov
mov
mov
mov
mov
mov
call
pop
pop
ret
push
mov
push
push
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
call
pop
pop
pop
ret
nop
push
push
push
push
mov
mov
mov
xor
cmp
jne
call
test
jne
cmp
jne
cmp
je
mov
jmp
mov
test
je
push
call
mov
mov
mov
pop
pop
pop
pop
ret
mov
xor
call
ret
push
push
push
mov
mov
mov
push
push
call
mov
mov
call
or
pop
pop
pop
ret
lea
push
push
xor
cmp
jne
mov
and
sub
je
sub
je
sub
je
jmp
mov
mov
mov
call
jmp
mov
mov
mov
call
jmp
mov
mov
mov
call
mov
pop
pop
ret
mov
push
mov
push
push
push
mov
mov
mov
call
mov
add
add
mov
mov
mov
mov
mov
mov
mov
mov
call
pop
pop
pop
pop
ret
nop
push
mov
mov
mov
jecxz
push
lods
call
pop
loop
pop
ret
push
push
push
mov
mov
mov
mov
call
mov
mov
pop
pop
pop
ret
nop
push
push
push
mov
mov
test
jle
mov
call
test
jle
mov
mov
call
mov
mov
pop
pop
pop
ret
lea
mov
push
mov
push
mov
push
mov
push
push
call
ret
mov
push
push
push
push
add
mov
mov
mov
mov
test
je
mov
test
jne
and
mov
and
mov
cmp
je
mov
cmp
jg
je
sub
je
sub
je
jmp
sub
je
add
sub
jae
mov
call
jmp
test
je
mov
call
mov
push
mov
push
push
mov
push
call
mov
mov
jmp
test
je
test
jne
mov
mov
test
je
test
jne
test
je
test
jne
lea
mov
call
push
lea
push
mov
mov
push
call
push
mov
push
call
jmp
cmp
jne
xor
mov
test
jne
push
push
push
push
call
mov
mov
push
push
mov
push
call
dec
jg
mov
push
call
jmp
lea
push
mov
push
call
mov
push
call
mov
lea
push
mov
push
call
mov
push
mov
push
push
call
push
push
call
mov
mov
mov
jmp
mov
mov
mov
mov
or
mov
test
je
test
je
push
push
push
push
call
push
push
push
push
call
push
mov
push
call
mov
push
push
call
mov
test
je
push
call
test
je
push
push
push
push
call
mov
push
push
call
dec
jg
lea
push
push
call
xor
mov
xor
mov
lea
push
mov
push
call
mov
neg
push
mov
neg
push
lea
push
call
lea
mov
call
movsx
push
movsx
push
push
call
push
push
call
mov
push
mov
push
push
push
call
cmp
jl
mov
mov
cmp
je
mov
mov
and
mov
cmp
je
push
call
mov
mov
or
mov
call
add
mov
mov
call
add
mov
push
movsx
neg
push
movsx
neg
push
push
call
push
push
push
push
call
xor
mov
xor
mov
lea
push
mov
mov
push
call
lea
push
mov
mov
push
call
mov
add
sub
mov
mov
mov
add
sub
mov
mov
push
mov
movsx
neg
push
mov
movsx
neg
push
push
call
lea
push
push
call
mov
push
mov
push
push
push
push
call
push
push
push
push
call
mov
and
mov
push
push
call
jmp
push
push
mov
push
mov
push
call
push
call
push
push
call
mov
test
jne
xor
mov
and
test
jne
push
push
mov
push
call
mov
push
mov
push
push
call
push
push
push
push
mov
push
mov
push
push
push
push
call
push
mov
push
call
mov
push
push
call
push
call
mov
push
call
push
call
lea
push
mov
push
call
mov
add
pop
pop
pop
pop
ret
add
add
add
add
push
push
push
push
add
mov
mov
mov
mov
mov
sub
jne
mov
cmp
je
push
push
push
push
call
mov
mov
test
setne
neg
sbb
push
push
mov
push
call
cmp
je
test
jne
mov
push
call
xor
mov
mov
mov
mov
mov
test
jne
lea
push
mov
push
call
mov
mov
mov
mov
mov
call
mov
test
je
xor
call
cmp
jne
lea
push
mov
push
call
mov
mov
mov
xor
mov
mov
mov
test
je
push
call
xor
mov
jmp
mov
mov
add
pop
pop
pop
pop
ret
lea
push
mov
push
mov
mov
call
mov
mov
mov
mov
mov
mov
call
pop
pop
ret
push
push
mov
mov
mov
call
cmp
je
test
je
test
jne
mov
or
or
or
or
or
or
or
mov
call
jmp
test
je
mov
or
mov
call
jmp
mov
or
mov
call
jmp
mov
and
test
jne
or
mov
xchg
call
mov
and
mov
call
pop
pop
ret
push
push
push
push
mov
mov
mov
mov
call
test
jne
mov
cmp
jne
mov
mov
call
mov
mov
sub
mov
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
jmp
cmp
jne
mov
mov
call
mov
cmp
jl
cmp
jg
xor
mov
mov
jmp
cmp
jne
mov
call
test
jne
push
push
push
mov
push
call
push
call
xor
pop
pop
pop
pop
ret
lea
push
push
mov
push
xor
mov
push
push
push
call
mov
mov
pop
pop
ret
nop
mov
ret
push
mov
push
mov
mov
call
mov
mov
mov
mov
mov
call
pop
pop
ret
nop
push
mov
push
mov
mov
call
mov
mov
mov
mov
mov
call
pop
pop
ret
nop
push
push
call
xchg
pop
call
xchg
pop
ret
push
xor
push
push
mov
mov
mov
jecxz
push
lods
push
test
je
mov
or
and
cmp
jne
call
test
pop
je
push
xchg
push
mov
mov
xor
jecxz
lods
mov
cmp
jle
pop
mov
mov
mov
call
jmp
inc
loop
pop
mov
call
inc
pop
test
jne
push
call
pop
je
mov
call
pop
loop
pop
pop
test
pop
ret
nop
pusha
push
mov
mov
call
xchg
mov
xor
jecxz
mov
mov
mov
xor
push
push
test
je
push
lods
cmp
je
mov
jecxz
mov
test
jge
cmp
jge
cmp
jle
mov
jmp
cmp
jle
cmp
jl
jmp
test
jl
cmp
jg
jmp
cmp
jl
mov
jecxz
mov
test
jl
cmp
jge
jmp
cmp
jle
mov
pop
dec
jne
pop
pop
inc
loop
mov
pop
jecxz
xchg
mov
jecxz
inc
push
mov
call
pop
dec
mov
xchg
call
popa
ret
nop
push
mov
mov
mov
pop
ret
nop
mov
xor
call
ret
mov
push
mov
mov
call
mov
mov
pop
ret
mov
mov
mov
ret
mov
push
push
mov
mov
push
jecxz
mov
push
xchg
xor
jecxz
push
push
push
lods
call
pop
lea
pop
loop
pop
pop
xchg
push
call
pop
pop
jecxz
mov
push
lods
push
call
xchg
pop
xchg
rep
xchg
mov
stos
pop
loop
xchg
stos
pop
pop
ret
lea
push
push
push
or
mov
jecxz
mov
mov
call
movzx
lods
inc
cmp
jne
push
push
call
pop
pop
je
loop
or
xchg
pop
pop
pop
ret
jmp
mov
jmp
mov
jmp
mov
push
mov
push
push
push
push
mov
mov
mov
mov
test
je
mov
call
push
mov
push
mov
push
mov
push
push
push
call
pop
pop
pop
pop
pop
ret
xor
test
je
or
test
je
or
test
je
or
jmp
test
je
or
mov
shl
movzx
or
mov
ret
nop
push
push
push
push
mov
mov
cmp
jne
xor
mov
test
je
mov
test
je
xor
mov
movzx
cmp
je
or
mov
push
push
push
push
push
call
mov
mov
cmp
je
mov
mov
call
cmp
setne
pop
pop
pop
pop
ret
nop
push
push
push
mov
mov
mov
mov
test
je
mov
call
push
push
call
pop
pop
pop
ret
nop
cmp
jne
mov
ret
mov
cmp
jne
mov
ret
mov
push
push
push
push
mov
mov
mov
cmp
jle
mov
mov
jmp
mov
mov
cmp
je
mov
cmp
jne
mov
mov
call
mov
cmp
jne
mov
mov
call
cmp
jne
mov
mov
cmp
je
mov
cmp
jne
mov
cmp
je
mov
mov
mov
cmp
jne
mov
pop
pop
pop
pop
ret
nop
push
push
push
mov
mov
test
je
mov
mov
call
mov
jmp
mov
mov
cmp
jne
mov
mov
cmp
je
mov
mov
call
cmp
je
mov
mov
call
cmp
jne
mov
mov
mov
cmp
jne
mov
pop
pop
pop
ret
nop
push
push
push
mov
mov
mov
test
je
test
je
cmp
je
cmp
jne
mov
mov
call
mov
mov
call
sub
je
sub
jne
mov
jmp
mov
jmp
mov
mov
call
pop
pop
pop
ret
mov
push
mov
push
mov
push
mov
xchg
call
pop
ret
lea
push
mov
add
push
push
push
mov
mov
mov
mov
mov
mov
mov
call
test
je
mov
mov
mov
xor
mov
mov
test
jge
neg
or
mov
test
jle
or
mov
call
mov
lea
push
push
push
push
call
test
jl
inc
pop
pop
pop
mov
pop
ret
lea
push
mov
push
push
push
mov
mov
mov
mov
test
jle
test
jne
mov
mov
mov
mov
mov
mov
mov
test
je
or
push
push
push
push
call
pop
pop
pop
pop
ret
mov
push
mov
add
push
push
push
mov
mov
mov
xor
xor
mov
cmp
je
mov
call
mov
add
add
mov
mov
call
mov
mov
mov
lea
push
mov
push
push
mov
mov
mov
call
mov
call
mov
dec
cmp
jge
mov
mov
call
mov
call
pop
pop
pop
mov
pop
ret
mov
push
push
mov
lea
mov
sub
je
sub
je
sub
je
jmp
mov
jmp
mov
jmp
mov
mov
call
push
push
push
push
call
pop
pop
ret
mov
mov
xor
call
ret
mov
push
xchg
call
ret
mov
push
push
movzx
push
push
call
ret
mov
push
xor
cmp
jne
cmp
jne
mov
xor
mov
mov
mov
pop
ret
mov
push
push
push
mov
mov
xor
cmp
jne
cmp
jne
mov
call
cmp
jb
mov
call
cmp
ja
mov
mov
test
je
mov
push
call
mov
mov
mov
pop
pop
pop
ret
lea
push
push
push
push
add
mov
mov
xor
test
jne
cmp
jne
mov
call
jmp
mov
mov
call
mov
mov
mov
call
mov
xor
mov
mov
call
test
je
mov
call
mov
dec
test
jl
inc
xor
mov
mov
mov
call
mov
cmp
je
mov
call
test
je
mov
mov
call
mov
xor
call
mov
inc
mov
mov
call
inc
dec
jne
jmp
mov
mov
mov
call
test
je
mov
mov
call
mov
mov
mov
mov
xor
call
mov
inc
mov
mov
call
inc
mov
mov
mov
mov
call
xor
mov
mov
call
jmp
call
mov
call
cmp
jne
cmp
je
dec
mov
xor
mov
mov
mov
call
mov
mov
dec
test
jl
inc
xor
mov
mov
call
mov
mov
dec
mov
cmp
jg
mov
mov
call
mov
mov
call
inc
dec
jne
mov
call
cmp
je
push
push
push
mov
mov
push
call
cmp
je
mov
mov
call
mov
mov
add
pop
pop
pop
pop
ret
mov
push
mov
push
mov
mov
call
mov
mov
mov
mov
pop
pop
ret
mov
jmp
mov
jmp
mov
push
mov
push
push
mov
mov
mov
cmp
je
mov
mov
mov
call
pop
pop
pop
ret
nop
push
mov
mov
xor
call
mov
mov
pop
ret
lea
push
mov
mov
xor
mov
call
inc
mov
call
mov
pop
ret
lea
push
push
mov
mov
mov
test
setne
xor
je
test
jne
xor
mov
or
push
push
push
mov
push
mov
push
call
mov
jmp
push
call
xor
mov
mov
pop
pop
ret
ret
lea
push
push
mov
mov
test
je
mov
call
mov
call
pop
pop
ret
lea
push
push
push
mov
xor
mov
call
test
jne
mov
call
cmp
jne
mov
test
je
mov
push
call
mov
xor
mov
push
push
lea
push
push
mov
push
push
call
mov
push
push
call
cmp
je
mov
mov
mov
call
cmp
jne
mov
push
call
mov
xor
mov
xor
mov
jmp
mov
mov
mov
mov
pop
pop
pop
ret
mov
push
mov
add
push
push
push
mov
mov
mov
mov
mov
lea
mov
mov
mov
call
cmp
jne
xor
xor
mov
mov
cmp
je
mov
mov
mov
mov
xor
call
jmp
mov
mov
sub
mov
mov
mov
mov
mov
mov
add
call
mov
mov
mov
mov
mov
mov
call
cmp
jne
mov
mov
cmp
jne
mov
sub
lea
mov
mov
call
mov
sub
cmp
jne
jmp
cmp
jne
mov
mov
mov
sub
mov
lea
mov
mov
call
cmp
jne
mov
mov
movzx
mov
movzx
mov
mov
mov
mov
mov
mov
movzx
movzx
imul
call
mov
mov
mov
mov
mov
mov
cdq
xor
sub
mov
mov
call
mov
imul
mov
push
push
call
mov
xor
mov
mov
cmp
ja
mov
test
jbe
mov
shl
jmp
mov
mov
shl
mov
shl
jmp
mov
sub
je
mov
cmp
jne
mov
test
jbe
sub
cmp
je
mov
add
sub
jae
test
jne
mov
mov
call
mov
test
je
cmp
ja
sub
cmp
jne
mov
lea
mov
mov
mov
call
cmp
jne
jmp
mov
add
mov
test
jbe
mov
mov
mov
mov
call
cmp
jne
sub
add
test
ja
test
jbe
mov
mov
mov
mov
call
cmp
je
mov
mov
call
test
ja
mov
mov
jmp
mov
mov
call
push
mov
mov
call
pop
sub
mov
call
mov
mov
mov
call
mov
mov
cmp
jge
mov
mov
call
sub
cmp
jb
mov
sub
mov
mov
mov
call
mov
mov
cmp
jle
mov
mov
mov
mov
mov
call
cmp
jne
cmp
jge
mov
sub
mov
mov
mov
call
mov
mov
pop
pop
pop
mov
pop
ret
nop
push
mov
add
mov
mov
mov
call
mov
call
mov
push
call
pop
test
jne
mov
xor
mov
call
mov
call
mov
pop
ret
nop
push
push
mov
mov
call
je
mov
call
push
mov
xor
call
xor
mov
movzx
cmp
jg
mov
shl
push
lea
cmp
je
add
push
push
add
push
mov
push
xor
mov
mov
push
mov
call
pop
add
xor
pop
jne
mov
cmp
je
add
add
push
mov
call
pop
xor
jne
mov
mov
mov
push
call
pop
xor
pop
je
xchg
xor
call
pop
pop
ret
push
push
push
mov
mov
mov
cmp
je
mov
call
mov
call
mov
add
mov
shl
add
mov
pop
pop
pop
ret
cmp
je
mov
call
ret
mov
push
mov
cmp
je
cmp
jne
xor
pop
ret
mov
movzx
call
mov
cmp
je
mov
cmp
jne
lea
add
cmp
jne
add
add
cmp
jne
mov
jmp
mov
cmp
jne
lea
add
cmp
jne
add
add
cmp
jne
mov
jmp
mov
pop
ret
mov
test
je
cmp
sete
test
setne
or
btr
ja
or
mov
test
je
call
jne
ret
test
setne
test
setne
or
test
setne
or
je
test
setne
and
jne
cmp
je
push
mov
call
pop
xor
or
xor
ret
push
push
push
push
push
sub
mov
and
or
lea
call
mov
mov
mov
jmp
mov
mov
shr
or
and
je
movzx
bt
jae
test
jne
mov
mov
call
mov
mov
mov
mov
mov
mov
sub
mov
mov
sub
movsx
movzx
loop
mov
sub
add
mov
add
add
jmp
loop
mov
sub
add
mov
add
add
jmp
loop
mov
sub
sub
mov
add
sub
add
add
mov
sub
mov
add
mov
jmp
loop
mov
sub
sub
mov
add
sub
add
add
mov
sub
mov
add
mov
jmp
loop
mov
sub
mov
mov
sub
mov
mov
add
mov
add
mov
mov
cmp
jle
mov
mov
cmp
jle
mov
mov
sub
mov
sub
or
mov
sub
sub
mov
sub
sub
or
je
and
or
or
je
mov
mov
call
test
je
mov
call
test
je
add
dec
jge
shr
jne
and
add
pop
pop
pop
pop
ret
nop
mov
test
jne
cmp
je
mov
call
ret
push
push
mov
mov
call
mov
mov
pop
pop
ret
push
mov
push
push
push
mov
mov
xor
push
push
push
mov
mov
cmp
je
mov
call
lea
mov
xor
call
mov
call
push
push
mov
movzx
push
push
call
jmp
push
lea
mov
call
mov
push
mov
call
push
mov
call
mov
inc
pop
pop
call
xor
pop
pop
pop
mov
push
lea
call
ret
jmp
jmp
pop
pop
pop
pop
ret
mov
push
mov
push
push
push
mov
mov
mov
mov
cmp
jbe
mov
mov
mov
mov
call
mov
mov
sub
mov
mov
mov
call
xor
pop
pop
pop
pop
ret
nop
push
mov
add
push
mov
mov
mov
mov
xor
mov
mov
mov
xor
cmp
je
mov
lea
push
xor
mov
movzx
or
push
push
push
call
xor
mov
mov
mov
test
sete
pop
mov
pop
ret
mov
push
mov
push
push
push
push
mov
mov
mov
mov
call
mov
push
mov
push
mov
or
mov
call
mov
mov
call
mov
pop
pop
pop
pop
pop
ret
lea
cmp
jl
pusha
mov
mov
mov
jecxz
mov
mov
jecxz
mov
shr
call
dec
js
push
push
xor
cmp
je
mov
mov
jecxz
mov
mov
xchg
mov
call
pop
pop
test
je
mov
call
popa
mov
ret
xor
inc
cmp
je
mov
call
popa
xor
ret
nop
push
push
mov
mov
mov
call
mov
test
jl
mov
mov
call
mov
mov
call
mov
mov
call
xor
mov
call
pop
pop
ret
ret
lea
xor
call
ret
push
push
mov
mov
test
je
call
mov
test
jl
mov
mov
call
mov
mov
call
pop
pop
ret
lea
push
mov
mov
cmp
je
mov
mov
mov
call
pop
ret
mov
mov
mov
call
pop
ret
mov
push
mov
add
push
push
push
xor
mov
mov
xor
push
push
push
mov
lea
mov
mov
call
xor
mov
xor
mov
cmp
je
mov
test
je
cmp
je
lea
mov
call
mov
call
lea
push
mov
call
lea
mov
call
mov
test
je
cmp
je
lea
mov
call
mov
mov
dec
je
dec
jne
or
jmp
or
mov
jmp
mov
mov
mov
cmp
je
mov
cmp
je
xor
cmp
je
mov
call
call
push
mov
call
call
push
call
mov
push
lea
push
mov
call
push
mov
call
push
mov
call
push
call
mov
cmp
je
push
mov
call
mov
push
call
mov
sub
mov
xor
mov
mov
sub
jb
sub
jne
xor
mov
mov
mov
call
mov
add
cmp
je
mov
add
mov
call
mov
mov
call
movsx
cmp
jge
movsx
mov
call
mov
mov
test
je
sub
je
sub
jne
xor
mov
mov
mov
call
mov
add
cmp
je
mov
add
mov
call
mov
mov
call
movsx
cmp
jge
movsx
mov
call
mov
test
je
mov
call
xor
pop
pop
pop
mov
push
lea
call
ret
jmp
jmp
pop
pop
pop
mov
pop
ret
add
(bad)
(bad)
(bad)
inc
add
add
add
add
mov
test
je
mov
mov
call
jmp
mov
mov
mov
pop
pop
ret
push
mov
call
cmp
ja
and
bt
setb
pop
ret
mov
push
push
push
mov
mov
mov
call
mov
mov
call
mov
mov
pop
pop
pop
ret
lea
push
push
push
push
call
ret
nop
push
push
add
mov
mov
mov
mov
xor
mov
mov
call
mov
mov
push
push
push
push
call
add
pop
pop
ret
nop
push
push
mov
mov
mov
call
mov
mov
mov
call
pop
pop
ret
nop
push
push
push
push
push
mov
xchg
mov
mov
mov
call
test
jne
cmp
jne
mov
dec
cmp
ja
xchg
mov
shl
mov
cmp
je
cmp
jne
mov
test
jne
mov
test
je
push
xor
mov
mov
mov
call
test
je
cmp
jne
mov
call
test
je
mov
call
test
je
cmp
jne
mov
jecxz
test
je
cmp
je
xor
cmp
jne
mov
or
je
mov
jecxz
mov
and
cmp
jne
mov
call
test
jne
xor
cmp
mov
mov
jne
test
je
mov
pop
jecxz
mov
xchg
shr
cmp
jne
mov
call
pop
pop
push
push
push
push
call
xor
and
and
inc
push
push
jmp
xor
pop
pop
pop
pop
pop
ret
lea
push
push
push
mov
mov
mov
add
cmp
je
cmp
jne
add
cmp
jne
not
and
mov
or
cmp
je
call
test
je
xchg
mov
shr
sbb
and
mov
cmp
je
mov
xchg
call
xchg
mov
and
or
call
test
mov
mov
je
mov
cmp
je
mov
mov
mov
mov
mov
jmp
lea
lea
movs
movs
mov
pop
pop
pop
ret
lea
push
push
push
push
call
ret
push
push
push
mov
push
call
ret
push
push
xor
cmp
jne
mov
and
cmp
jne
cmp
je
mov
mov
call
mov
cmp
je
push
push
mov
call
push
mov
call
push
mov
call
push
push
mov
mov
push
call
mov
pop
pop
ret
push
push
push
mov
mov
xor
mov
sub
jne
mov
dec
je
sub
je
jmp
mov
push
call
test
je
mov
jmp
mov
push
call
test
je
mov
jmp
mov
jmp
mov
test
je
and
push
mov
push
call
mov
xor
mov
mov
pop
pop
pop
ret
lea
push
push
mov
mov
mov
cmp
jne
mov
mov
mov
mov
call
mov
mov
call
mov
mov
call
pop
pop
ret
push
push
push
mov
mov
cmp
jne
mov
mov
cmp
jne
push
call
cmp
sbb
inc
mov
cmp
je
or
test
jne
mov
mov
mov
call
jmp
and
test
je
mov
mov
mov
call
mov
call
xor
pop
pop
pop
ret
nop
push
mov
push
mov
mov
call
mov
mov
mov
mov
mov
mov
call
pop
pop
ret
push
mov
push
push
mov
lea
movs
movs
movs
movs
pop
pop
pop
ret
lea
mov
call
ret
nop
push
mov
mov
lods
cmp
jg
lods
cmp
jg
lods
cmp
jg
lods
cmp
setle
pop
ret
mov
push
mov
push
push
mov
mov
xor
inc
je
lods
test
jge
not
test
je
dec
test
je
or
shr
loop
xchg
pop
pop
mov
pop
ret
lea
call
je
push
mov
call
pop
ret
mov
test
je
sub
jge
mov
push
ret
push
call
pop
xor
call
ret
nop
push
push
xchg
mov
test
jne
call
mov
mov
xor
pop
call
xchg
xor
mov
call
pop
ret
nop
push
mov
push
xchg
mov
test
jne
call
mov
xor
mov
mov
call
xchg
xor
mov
call
pop
pop
ret
push
xchg
mov
jecxz
xchg
push
call
test
pop
xchg
jl
push
and
xor
mov
call
pop
mov
inc
loop
lea
call
pop
ret
mov
push
call
pop
call
ret
lea
cmp
jge
mov
cmp
je
mov
shl
lea
call
ret
push
xor
mov
mov
mov
pop
call
ret
lea
test
jl
cmp
jge
mov
mov
ret
xor
ret
nop
push
push
mov
xchg
xor
xchg
jecxz
push
xchg
mov
call
test
jne
mov
call
push
push
push
push
call
pop
xor
mov
mov
call
xchg
call
pop
pop
ret
cmp
je
push
xchg
inc
mov
mov
call
jmp
call
mov
call
movzx
jecxz
mov
xchg
pop
jecxz
call
ret
lea
mov
jecxz
mov
cmp
xchg
je
xchg
xchg
mov
test
jne
push
mov
call
push
call
pop
mov
ret
push
push
call
xchg
pop
jecxz
xchg
call
mov
xchg
call
pop
ret
mov
mov
call
mov
mov
mov
mov
ret
lea
mov
mov
call
mov
mov
mov
mov
mov
push
lea
mov
xor
mov
call
pop
ret
nop
btr
jae
and
push
call
ret
call
xchg
ror
xchg
shr
ret
mov
shr
and
mov
shr
and
mov
and
or
or
ret
nop
test
jne
call
xor
ret
push
mov
test
jne
xchg
call
cmp
je
push
xchg
mov
jecxz
cmp
je
mov
call
lea
lea
mov
call
mov
call
xchg
pop
pop
ret
lea
xor
xchg
jecxz
push
push
call
call
pop
mov
jecxz
push
xchg
mov
call
pop
ret
mov
push
cmp
je
mov
jecxz
push
call
pop
push
mov
jecxz
push
call
pop
call
ret
mov
push
call
pop
xor
xchg
ret
lea
lea
cmp
je
mov
call
ret
mov
and
mov
cmp
setge
add
or
shr
or
shr
or
ret
nop
push
mov
push
call
pop
cmp
je
push
lea
mov
shr
jae
cmp
jge
mov
jmp
cmp
jl
xor
xchg
stos
shr
setb
stos
shr
setb
stos
shr
setb
stos
pop
call
pop
ret
lea
push
xchg
mov
jecxz
mov
call
cmp
je
mov
call
push
call
mov
inc
loop
mov
jecxz
lea
lea
mov
call
test
mov
jne
mov
call
mov
xchg
call
xchg
xchg
pop
ret
mov
push
xchg
mov
test
jne
mov
call
xor
mov
push
jecxz
mov
jmp
mov
mov
sub
jl
xchg
mov
call
xor
mov
push
push
push
call
mov
add
pop
ret
mov
push
mov
mov
jecxz
mov
call
push
mov
call
mov
call
push
call
mov
cmp
mov
mov
mov
jne
push
push
call
push
push
jmp
push
push
call
not
push
push
call
call
pop
ret
mov
jecxz
mov
xor
jmp
ret
mov
push
mov
mov
jecxz
mov
push
call
xchg
call
push
mov
call
mov
call
push
mov
call
push
call
pop
ret
mov
jecxz
mov
mov
call
push
jmp
ret
nop
mov
jecxz
push
mov
mov
movzx
inc
push
mov
call
push
mov
call
mov
call
push
mov
call
push
call
pop
ret
mov
push
push
push
lea
mov
test
je
movzx
and
je
push
lea
mov
inc
loop
mov
push
call
stos
push
call
stos
push
call
stos
lea
pop
lods
push
push
lods
push
push
lods
push
push
mov
call
call
call
and
pop
pop
pop
ret
nop
push
mov
push
push
mov
mov
mov
test
je
call
and
test
je
call
test
je
mov
not
and
je
test
je
mov
call
test
je
mov
call
mov
jcxz
mov
dec
sub
jb
test
je
mov
call
or
mov
pop
pop
pop
ret
push
push
mov
mov
mov
cmp
je
jecxz
push
call
pop
mov
jecxz
cmp
je
cmp
jne
push
push
call
jmp
cmp
jne
push
call
xor
mov
mov
and
test
je
or
mov
lea
mov
call
pop
pop
ret
mov
mov
mov
mov
call
ret
lea
pusha
mov
jecxz
xchg
mov
call
popa
ret
mov
push
push
push
push
push
call
push
call
ret
nop
push
mov
push
mov
push
call
pop
mov
xor
mov
mov
cmp
je
mov
call
pop
pop
ret
mov
inc
loop
push
call
pop
push
mov
mov
mov
mov
jecxz
push
mov
mov
pop
test
je
call
pop
xchg
ret
cmp
mov
mov
je
mov
push
call
xchg
pop
push
call
pop
ret
nop
push
lea
mov
mov
lods
test
je
mov
mov
dec
jne
pop
ret
lea
test
pushf
jge
neg
push
call
pop
popf
jge
mov
call
ret
lea
push
xchg
push
call
pop
call
push
call
pop
xchg
jecxz
lods
sub
cmp
jae
add
loop
pop
ret
nop
push
xchg
push
call
pop
call
push
call
pop
xchg
jecxz
lods
sub
cmp
jae
sub
loop
pop
ret
nop
test
je
push
call
pop
push
call
pop
ret
nop
push
mov
call
mov
pop
call
call
ret
mov
xor
push
mov
shr
and
jne
mov
push
mov
push
push
mov
push
mov
push
push
call
ret
mov
push
call
test
setne
ret
push
push
mov
push
push
push
push
push
call
test
pop
jne
xor
pop
ret
lea
push
push
mov
push
push
push
push
push
call
test
pop
jne
xor
pop
ret
push
push
push
call
xchg
call
inc
je
dec
and
setne
xchg
push
call
xchg
pop
ret
lea
lea
call
add
pusha
xor
xchg
call
popa
ret
nop
push
mov
call
lea
call
xchg
call
pop
ret
mov
jecxz
mov
xchg
ret
mov
push
push
call
pop
call
pop
call
ret
xor
xchg
jecxz
xchg
call
ret
mov
push
xchg
mov
call
mov
mov
xchg
mov
call
mov
xchg
pop
ret
mov
push
xchg
mov
call
mov
mov
xchg
mov
call
mov
xchg
pop
ret
nop
push
lea
push
lea
call
pop
call
pop
call
ret
mov
push
push
push
call
pop
cmp
mov
jb
push
lea
xor
lods
mov
xor
mov
cmp
jb
ja
inc
movs
loop
jmp
lods
sub
sub
push
movzx
xor
rep
pop
inc
loop
pop
pop
pop
ret
nop
mov
mov
xor
call
ret
push
mov
push
push
push
mov
mov
push
mov
call
xchg
pop
mov
cmp
jb
movzx
push
mov
jecxz
xchg
push
call
pop
jmp
mov
call
mov
pop
mov
mov
xchg
mov
call
test
je
mov
mov
lea
lea
movs
movs
lods
xchg
xor
push
call
stos
pop
xchg
jecxz
mov
mov
mov
mov
mov
call
mov
mov
call
lods
xchg
xor
push
call
stos
pop
xchg
jecxz
mov
mov
mov
mov
mov
call
mov
mov
call
movs
lods
add
lods
test
je
mov
and
and
or
stos
xchg
pop
pop
pop
pop
ret
nop
push
push
mov
mov
push
call
mov
or
mov
call
mov
mov
call
pop
mov
call
or
xchg
pop
ret
nop
push
push
push
push
mov
mov
call
xchg
mov
mov
add
mov
mov
or
pop
mov
call
mov
mov
call
mov
mov
call
xchg
pop
ret
lea
call
mov
add
mov
mov
mov
ret
nop
push
mov
test
je
push
push
xchg
or
inc
mov
cmp
jge
mov
call
test
je
test
je
cmp
push
sete
push
call
pop
cmp
pop
je
call
jmp
pop
pop
pop
ret
nop
push
push
mov
call
xchg
mov
mov
test
je
bts
jne
mov
call
xchg
pop
pop
ret
mov
cmp
jne
mov
push
push
mov
mov
call
test
jne
push
push
call
mov
call
push
push
call
xor
push
push
push
push
call
sub
push
push
call
mov
call
mov
push
push
push
call
add
pop
pop
xor
ret
nop
push
xchg
push
mov
xor
mov
mov
call
xchg
pop
push
test
jne
and
or
push
push
mov
xchg
call
xchg
mov
lea
mov
add
mov
mov
add
mov
pop
test
mov
je
add
add
mov
or
test
je
and
mov
xchg
pop
ret
mov
push
push
mov
call
cmp
jge
mov
cmp
jle
xor
mov
xor
push
push
push
push
push
mov
call
pop
inc
imul
inc
inc
push
mov
call
push
inc
xor
push
push
push
push
call
dec
je
mov
mov
mov
mov
call
pop
pop
ret
mov
push
push
push
mov
mov
xor
mov
call
pop
xchg
pop
push
push
mov
or
test
jne
or
call
mov
mov
mov
mov
or
add
add
mov
pop
test
je
mov
mov
push
mov
call
pop
ret
lea
or
mov
jecxz
push
mov
call
pop
mov
call
ret
push
push
mov
mov
call
lea
mov
add
mov
mov
add
mov
xor
mov
mov
mov
mov
ret
lea
push
call
pop
xor
shr
jae
mov
shr
jae
inc
or
ret
cmp
jne
push
push
push
mov
push
push
call
pop
pop
test
je
cmp
je
mov
mov
pop
jmp
pop
xor
ret
nop
cmp
jne
push
mov
mov
xor
cmp
je
cmp
jne
mov
and
or
mov
mov
mov
mov
jmp
cmp
jne
mov
mov
mov
jmp
cmp
je
cmp
jne
mov
mov
mov
xchg
call
pop
xor
ret
nop
pusha
xchg
mov
movzx
jecxz
mov
xor
mov
xor
mov
mov
call
test
je
call
push
push
push
push
call
inc
shr
je
cmp
jge
xor
jmp
popa
ret
mov
pusha
xchg
push
mov
mov
xor
mov
call
pop
push
mov
and
or
movzx
or
mov
call
mov
mov
xor
mov
call
pop
push
push
push
push
call
popa
call
ret
mov
push
mov
push
push
movzx
mov
or
mov
push
push
call
mov
mov
mov
push
xchg
mov
xor
mov
call
xchg
pop
mov
and
or
mov
pop
pop
mov
mov
add
add
mov
xor
pusha
call
popa
mov
mov
pusha
call
popa
mov
add
push
call
pop
mov
xor
inc
mov
pop
ret
pusha
call
test
popa
je
mov
call
mov
mov
ret
call
ret
mov
inc
loop
push
call
test
mov
jne
inc
mov
ret
mov
push
push
mov
call
xor
cmp
jne
mov
movzx
and
mov
mov
loop
mov
mov
mov
movzx
shr
mov
mov
loop
mov
mov
mov
or
dec
mov
mov
inc
or
lea
mov
call
stos
call
stos
pop
pop
ret
push
push
mov
call
pop
pop
test
je
mov
mov
call
ret
mov
push
push
mov
call
xchg
jecxz
mov
xor
jne
mov
mov
jecxz
push
push
call
mov
call
bts
jb
xor
xchg
call
mov
call
mov
test
je
mov
jecxz
inc
je
test
jne
dec
push
call
push
call
test
je
push
push
push
call
push
call
xor
mov
push
test
je
push
mov
jecxz
push
pop
jecxz
xchg
call
jmp
xor
xchg
jecxz
push
call
mov
jecxz
cmp
jne
xor
mov
push
mov
mov
call
pop
mov
call
lea
lods
call
lods
call
lea
call
xchg
call
pop
pop
ret
lea
push
mov
movzx
push
call
pop
cmp
je
test
jne
or
jmp
and
mov
jecxz
push
push
call
xchg
call
pop
ret
nop
push
push
xchg
xor
mov
sub
cmp
ja
push
pusha
push
call
add
popa
xchg
mov
jae
or
push
mov
lea
call
push
mov
mov
mov
call
pop
pop
pop
mov
xchg
pop
pop
ret
icebp
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
inc
ret
inc
inc
inc
lods
lods
ret
add
ret
inc
inc
inc
add
ret
add
ret
push
push
push
push
xchg
mov
mov
xor
cmp
je
cmp
jne
mov
mov
xor
cmp
je
mov
jecxz
cmp
je
call
mov
call
mov
mov
call
movzx
cmp
jne
cmp
je
mov
call
test
je
push
call
mov
jmp
cmp
jne
or
jmp
cmp
jne
push
push
push
call
xor
jmp
mov
mov
mov
push
mov
mov
call
test
pop
je
pop
jmp
cmp
jne
mov
mov
call
push
mov
call
jmp
cmp
jne
mov
and
cmp
jne
mov
call
test
je
cmp
je
push
push
push
mov
push
call
jmp
cmp
jne
mov
call
test
je
inc
mov
mov
call
dec
jmp
mov
sub
cmp
ja
push
push
add
push
push
call
jmp
cmp
jne
push
push
call
test
je
push
push
push
push
call
jmp
mov
sub
cmp
ja
call
cmp
jne
push
mov
mov
mov
call
test
jne
mov
mov
mov
call
test
pop
jne
push
call
xchg
push
call
or
js
cmp
jne
cmp
je
jmp
mov
call
test
je
mov
mov
cmp
setne
cmp
setne
and
mov
mov
call
test
je
xor
mov
jmp
mov
mov
call
jmp
xor
push
cmp
jne
mov
mov
mov
call
pop
pop
pop
pop
pop
ret
nop
cmp
je
mov
mov
jecxz
push
push
xor
push
push
push
push
push
push
push
push
push
call
call
pop
call
ret
lea
cmp
je
mov
mov
jecxz
push
push
xor
push
push
push
push
push
push
push
push
push
call
call
pop
call
ret
lea
push
mov
push
lea
call
pop
cmp
je
mov
mov
jecxz
test
je
mov
inc
loop
push
push
push
push
call
mov
mov
mov
call
add
mov
mov
call
mov
lea
call
add
test
je
call
push
pop
pop
ret
nop
cmp
je
mov
inc
je
dec
push
push
push
push
call
test
je
push
call
ret
nop
push
ret
push
xchg
lea
call
mov
jecxz
push
push
push
push
call
test
jne
mov
call
xchg
pop
push
ret
lea
test
setne
ret
call
ret
mov
and
test
je
or
mov
jecxz
push
je
call
pop
push
push
call
ret
and
push
push
call
pop
call
ret
mov
or
call
ret
mov
push
push
lea
mov
push
movs
movs
movs
movs
pop
xchg
mov
jecxz
push
push
call
test
je
mov
call
test
je
xor
push
push
push
push
call
pop
neg
pop
neg
push
push
push
call
xchg
lea
movs
movs
movs
movs
pop
pop
ret
mov
pop
add
mov
push
push
call
pop
ret
nop
push
mov
push
mov
call
mov
mov
call
test
jne
pop
pop
pop
push
push
push
sub
cmp
jne
cmp
je
or
push
mov
sub
push
push
lea
movs
movs
movs
movs
mov
pop
mov
jecxz
std
push
lods
lods
xchg
lods
xchg
lods
sub
push
xchg
lods
cld
sub
push
push
push
push
push
call
pop
pop
test
je
xchg
call
add
pop
pop
ret
push
mov
call
mov
mov
call
push
call
xchg
call
pop
ret
lea
push
push
mov
mov
movs
movs
push
mov
jecxz
push
call
push
pop
pop
pop
ret
lea
push
xchg
push
push
lea
xor
mov
call
mov
call
xchg
jecxz
push
call
push
pop
pop
lea
lods
movsx
add
lods
movsx
sub
lods
movsx
add
lods
movsx
sub
pop
ret
lea
mov
jecxz
push
push
push
call
ret
nop
push
xchg
mov
inc
je
dec
jne
mov
jecxz
cmp
je
xchg
call
test
je
xor
push
push
push
inc
push
push
call
jmp
dec
inc
dec
dec
dec
inc
dec
dec
add
mov
push
xchg
inc
add
add
inc
add
pop
ret
push
push
push
mov
jecxz
push
push
call
ret
push
call
ret
push
mov
call
test
je
inc
push
call
dec
mov
pop
ret
mov
jecxz
push
call
ret
test
sete
ret
xchg
xor
mov
test
jne
test
jmp
cmp
je
push
call
pop
cmp
sete
ret
push
push
xchg
mov
mov
cmp
je
jecxz
push
mov
mov
call
pop
push
mov
call
pop
mov
xor
call
mov
test
je
mov
mov
call
mov
mov
call
mov
jecxz
mov
call
push
push
call
mov
mov
mov
call
mov
mov
mov
call
xchg
call
pop
pop
ret
call
je
push
mov
mov
call
pop
ret
lea
call
pop
pop
pop
pop
ret
mov
push
push
call
pop
pop
pop
sub
mov
add
push
push
push
mov
call
add
pop
ret
lea
call
pop
pop
pop
pop
ret
mov
push
push
push
call
pop
pop
pop
pop
sub
pop
add
push
push
push
push
mov
call
add
pop
pop
ret
mov
call
pop
pop
pop
sub
pop
ret
push
call
pop
push
add
mov
mov
call
add
ret
nop
call
pop
pop
pop
pop
sub
ret
push
call
mov
add
mov
mov
call
add
ret
lea
push
mov
push
call
xchg
pop
jecxz
mov
movzx
jecxz
push
xchg
push
call
pop
push
push
push
push
call
pop
cmp
je
mov
xor
xchg
jecxz
push
push
call
pop
mov
jecxz
xchg
mov
xor
call
xchg
call
pop
ret
lea
xchg
test
mov
mov
jecxz
push
je
xchg
call
pop
mov
ret
push
xchg
add
mov
push
xor
push
push
push
push
call
test
je
cmp
jne
or
jmp
mov
xchg
mov
call
test
jne
mov
push
push
call
call
cmp
setne
add
pop
ret
nop
push
call
dec
pop
je
ret
cmp
jne
push
push
xor
inc
xchg
mov
jecxz
jecxz
xchg
push
call
test
pop
je
push
call
inc
dec
mov
jecxz
cmp
je
mov
xchg
pop
pop
ret
xor
ret
mov
push
xchg
sub
xchg
mov
push
push
mov
call
pop
jecxz
add
mov
pop
jecxz
add
mov
mov
mov
call
add
xchg
pop
ret
mov
push
xchg
push
push
mov
mov
sub
cmp
ja
push
mov
call
xchg
push
push
call
test
je
push
push
call
push
call
jmp
mov
call
xchg
push
push
call
push
push
call
mov
call
xchg
pop
mov
mov
jmp
cmp
jne
push
movzx
mov
cmp
jne
cmp
jg
mov
mov
call
mov
call
jmp
mov
cmp
mov
lea
je
add
cmp
je
sub
cmp
jne
mov
mov
mov
call
jmp
cmp
jne
mov
call
xchg
mov
call
jmp
pop
xor
cmp
jne
mov
mov
call
test
je
push
mov
jecxz
cmp
je
xchg
mov
mov
xchg
mov
call
pop
mov
xor
push
pop
pop
pop
pop
ret
lea
push
call
pop
mov
mov
mov
call
ret
lea
test
je
mov
test
jne
ret
mov
mov
inc
loop
push
call
pop
push
push
xchg
call
pop
pop
mov
mov
mov
mov
mov
ret
xchg
ret
mov
mov
inc
loop
push
call
pop
mov
mov
mov
mov
mov
push
xchg
call
pop
xchg
ret
nop
mov
mov
push
call
pop
call
ret
nop
mov
mov
xor
xchg
jecxz
push
push
call
pop
call
ret
mov
push
xchg
mov
jecxz
xchg
mov
jecxz
mov
mov
push
call
push
push
push
call
xor
xchg
jecxz
xchg
call
xchg
call
pop
ret
add
mov
call
pop
pop
pop
pop
sub
ret
lea
add
mov
call
pop
pop
pop
sub
pop
ret
lea
push
push
mov
call
push
mov
call
pop
sub
pop
add
xchg
call
pop
ret
nop
push
push
mov
call
push
mov
call
pop
sub
pop
add
xchg
call
pop
ret
nop
pusha
xchg
mov
jecxz
test
jne
push
call
push
push
call
push
push
push
jmp
add
mov
xchg
call
mov
call
mov
call
pop
add
pop
pop
sub
sar
mov
call
mov
call
add
pop
sub
sar
xchg
call
popa
ret
mov
call
mov
and
setne
mov
and
setne
or
ret
nop
test
sete
ret
push
mov
call
cmp
je
shl
and
or
xchg
mov
call
pop
ret
mov
mov
jecxz
push
xchg
push
push
push
push
push
push
call
mov
call
mov
call
mov
xchg
pop
ret
nop
test
je
test
setne
ret
push
push
push
push
call
ret
lea
test
je
shl
and
or
jmp
push
movzx
push
push
push
call
ret
mov
push
push
and
call
pop
pop
ret
mov
mov
movzx
jecxz
xor
push
push
lea
push
push
push
call
pop
xchg
ret
xor
mov
movzx
jecxz
cmp
jne
push
push
mov
push
add
push
push
push
call
pop
pop
sub
xchg
ret
push
push
push
push
call
ret
mov
push
mov
movzx
jecxz
push
push
push
call
push
pop
ret
nop
push
push
mov
movzx
jecxz
push
push
call
ret
pop
mov
movzx
jecxz
pop
push
jmp
mov
movzx
jecxz
push
jmp
mov
call
pop
ret
mov
movzx
jecxz
push
push
push
push
push
call
pop
pop
ret
mov
push
xchg
push
mov
xor
lods
test
je
cmp
jne
test
je
test
jne
mov
push
xchg
call
xchg
pop
cmp
jne
push
push
call
pop
and
or
add
sbb
add
inc
xchg
call
mov
pop
pop
ret
or
and
test
add
mov
or
add
rcr
ret
mov
push
call
test
je
mov
pop
ret
nop
push
xchg
mov
mov
movzx
jecxz
xor
cdq
cmp
jne
inc
inc
jmp
cmp
jne
dec
push
push
push
push
call
pop
ret
mov
movzx
jecxz
push
push
push
push
push
push
call
pop
pop
cmp
jne
mov
push
push
push
push
push
push
push
call
add
ret
inc
call
ret
nop
mov
jecxz
push
xchg
mov
push
call
pop
mov
pop
xchg
ret
mov
inc
loop
call
push
call
ret
push
push
mov
call
mov
test
jne
xor
call
mov
mov
mov
mov
xchg
mov
jecxz
mov
mov
call
mov
mov
jecxz
mov
mov
call
mov
xchg
pop
pop
ret
test
jne
shl
and
or
mov
call
lea
mov
ret
mov
mov
jecxz
and
test
je
or
push
xchg
call
pop
mov
call
ret
push
call
pop
call
ret
lea
mov
mov
push
call
pop
ret
lea
push
xchg
mov
dec
jl
push
mov
call
pop
jmp
xor
mov
xchg
test
je
call
xor
xchg
call
pop
ret
dec
push
mov
mov
push
call
pop
pop
mov
jecxz
cmp
jb
add
cmp
jb
call
ret
nop
push
mov
test
je
call
xchg
pop
jmp
ret
lea
push
push
push
xchg
mov
test
jne
call
mov
pop
push
call
inc
push
call
mov
xchg
pop
pop
push
test
je
call
pop
pop
mov
call
inc
pop
ret
push
call
pop
mov
ret
nop
push
mov
push
push
push
mov
call
push
call
pop
ret
mov
mov
mov
ret
nop
push
mov
push
push
push
mov
shr
jne
mov
inc
mov
and
push
push
call
mov
add
pop
jae
call
pop
ret
mov
push
mov
mov
mov
jecxz
mov
call
xor
pop
ret
mov
push
xor
call
pop
call
dec
jne
xor
xchg
call
ret
push
xchg
cmp
je
mov
test
je
mov
inc
loop
inc
mov
xor
push
call
mov
mov
or
xchg
push
push
push
xchg
call
push
call
mov
pop
ret
xor
xchg
jecxz
push
mov
push
call
pop
ret
lea
push
push
push
push
mov
call
mov
xchg
xor
mov
stos
pop
stos
pop
stos
xor
inc
stos
pop
stos
xchg
pop
ret
lea
push
mov
xor
xchg
inc
lods
cmp
je
test
jne
xchg
pop
ret
mov
push
push
mov
mov
mov
xor
call
mov
mov
mov
pop
pop
ret
nop
push
push
call
pop
pop
push
inc
jecxz
test
je
push
push
push
push
push
call
push
xchg
call
pop
mov
push
push
call
pop
pop
ret
mov
add
xchg
mov
xor
mov
call
ret
nop
push
push
push
push
call
xchg
pop
pop
pop
test
je
test
je
push
movzx
jmp
movzx
movzx
jecxz
mov
cmp
pop
pushf
call
mov
popf
jne
call
mov
call
mov
mul
mov
add
push
push
call
mov
xchg
pop
ret
mov
push
mov
call
xor
xchg
jecxz
push
call
xor
mov
xchg
jecxz
cmp
jne
push
call
xor
xchg
jecxz
xchg
call
xor
mov
mov
mov
xchg
pop
call
ret
lea
push
call
pop
push
call
pop
xor
mov
mov
mov
ret
mov
push
call
pop
call
ret
lea
push
mov
push
push
push
push
mov
call
je
mov
jecxz
add
push
push
push
call
test
mov
jne
mov
add
call
push
push
push
push
call
call
call
jmp
xchg
push
push
push
push
jmp
mov
jecxz
mov
test
jge
neg
push
push
push
push
push
push
push
push
call
call
test
jne
mov
call
test
xchg
jne
pop
pop
mov
pop
ret
lea
push
push
push
mov
push
push
mov
call
je
mov
jecxz
call
push
push
push
push
push
push
call
call
call
jmp
pop
mov
mov
mov
sub
push
mov
mov
sub
push
push
push
push
jmp
mov
jecxz
push
push
push
push
push
push
push
push
call
call
test
jg
mov
call
mov
jecxz
jmp
mov
pop
pop
pop
ret
nop
push
mov
push
mov
inc
mov
jne
xchg
call
jmp
add
push
mov
add
push
push
push
mov
push
call
mov
pop
ret
push
mov
push
xchg
mov
inc
mov
jne
call
jmp
push
push
call
test
je
mov
call
mov
jecxz
cmp
je
mov
inc
loop
xor
call
mov
mov
push
mov
call
pop
mov
call
mov
call
pop
pop
push
xchg
call
jmp
pop
pop
pop
pop
ret
nop
push
mov
push
push
push
mov
push
call
test
je
push
call
push
push
push
call
push
call
push
push
push
call
push
push
call
push
push
push
call
push
push
mov
call
push
mov
call
push
push
call
push
push
push
call
push
push
mov
call
push
mov
call
push
call
push
call
mov
call
call
call
call
stc
jb
pop
push
push
xor
push
push
push
push
push
push
push
push
jmp
pop
push
push
push
push
push
mov
mov
mov
sub
push
mov
mov
sub
push
push
push
push
call
jmp
pop
pop
mov
pop
ret
lea
xor
xchg
jecxz
push
mov
push
call
ret
push
mov
call
je
mov
call
test
je
mov
inc
loop
mov
xor
call
mov
mov
mov
call
xor
mov
jecxz
call
mov
mov
inc
loop
push
mov
push
call
xchg
pop
call
mov
inc
loop
push
mov
call
push
call
mov
mov
mov
pop
ret
nop
push
mov
jecxz
mov
test
pop
sete
ret
push
xchg
call
xchg
pop
push
call
pop
call
ret
mov
push
mov
xor
call
mov
call
test
je
cmp
je
mov
push
push
push
call
mov
xchg
pop
call
xor
mov
xchg
pop
ret
push
mov
call
je
mov
push
call
pop
cmp
je
test
mov
jne
pop
inc
jmp
mov
xor
call
xchg
cmp
pop
jne
ret
mov
movzx
mov
mul
add
shr
and
ret
nop
push
call
pop
je
pusha
mov
call
xor
mov
mov
mov
mov
mov
mov
jecxz
mov
mov
mov
test
jge
neg
jmp
mov
jecxz
add
push
push
push
call
xchg
jecxz
mov
mov
add
push
call
push
cmp
jne
push
call
push
push
push
push
call
xchg
push
call
pop
push
push
push
call
push
push
push
push
push
mov
call
push
call
mov
push
push
push
push
call
call
add
mov
jecxz
push
call
push
push
push
push
push
push
push
call
jmp
mov
push
mov
xor
push
call
call
mov
call
mov
jmp
movzx
xchg
mov
movzx
jecxz
xor
mov
mov
call
push
cmp
jne
call
pop
push
call
mov
mul
push
push
push
call
push
push
push
push
mov
cmp
jle
mov
push
push
mov
call
push
push
call
mov
cmp
jle
mov
cmp
je
call
xor
push
mov
mov
push
push
push
push
push
push
call
xor
xchg
push
push
call
push
mov
xor
push
mov
call
push
call
mov
call
pop
pop
pop
mov
test
mov
jge
inc
mov
jecxz
pop
push
push
xchg
xchg
call
call
popa
ret
mov
mov
jecxz
mov
test
jl
sub
dec
mov
mov
inc
push
loop
push
call
pop
xchg
xchg
mul
pop
add
xchg
ret
mov
mov
jecxz
push
xchg
call
xchg
pop
mov
xchg
ret
nop
push
xchg
call
mov
pop
mov
call
ret
push
call
pop
mov
jecxz
call
push
call
ret
pusha
xchg
mov
mov
call
mov
or
je
call
je
mov
mov
mov
mov
movzx
mov
jecxz
dec
push
push
push
push
push
call
mov
test
xchg
je
jmp
xchg
mov
push
call
mov
xchg
pop
mov
call
mov
mov
push
push
push
call
mov
xchg
pop
mov
call
inc
popa
setne
ret
mov
push
call
pop
xor
xchg
call
ret
push
push
push
xchg
xchg
call
xchg
mov
call
xchg
xor
jecxz
mov
add
xor
push
dec
lods
xor
mov
shr
mov
add
mov
adc
cmp
jae
mov
pop
push
add
loop
xchg
pop
pop
pop
pop
pop
ret
mov
mov
jecxz
mov
inc
dec
xchg
ret
lea
push
call
pop
je
call
movzx
mov
loop
inc
ret
loop
mov
ret
loop
xor
inc
ret
xor
ret
mov
or
xor
xchg
xchg
call
ret
push
push
push
push
xchg
xchg
call
xchg
mov
call
cmp
jb
cmp
jb
bswap
shr
mov
cmp
jb
mov
cmp
jbe
mov
call
mov
mov
mov
call
push
xor
inc
mov
call
xor
cmp
jge
push
mov
call
xchg
mov
pop
push
call
xchg
mov
call
movzx
sub
mov
jne
cmp
jne
xor
push
mov
call
cmp
pop
je
inc
cmp
jb
xchg
mov
mov
inc
shr
mov
shr
cmp
sete
shl
or
mov
and
cmp
sete
shl
or
dec
dec
jne
stos
mov
inc
loop
jmp
loop
cmp
jne
xor
push
mov
call
cmp
pop
je
inc
jne
xchg
mov
mov
inc
cmp
sete
shl
or
dec
jne
stos
mov
inc
loop
jmp
loop
cmp
jne
xchg
push
call
pop
xchg
mov
cmp
sete
shl
or
dec
jne
stos
mov
add
loop
jmp
loop
cmp
jne
xchg
push
call
pop
xchg
mov
cmp
sete
shl
or
dec
jne
stos
mov
add
loop
jmp
loop
mov
push
mov
and
cmp
sete
shl
or
dec
jne
stos
mov
add
loop
pop
jmp
mov
and
cmp
sete
shl
or
dec
jne
stos
mov
add
loop
test
je
cmp
je
shl
dec
jne
stos
pop
inc
jmp
pop
push
xchg
call
pop
call
pop
pop
pop
pop
ret
mov
push
mov
push
push
call
pushf
or
popf
je
call
push
push
push
call
xchg
call
xchg
pop
pop
pop
ret
nop
push
mov
push
mov
push
push
call
je
call
mov
call
push
push
push
push
call
call
pop
pop
pop
pop
ret
mov
push
mov
push
push
push
push
mov
call
mov
shr
add
adc
cmp
setge
and
shl
pop
pop
imul
pop
add
pop
push
mov
shr
add
and
mov
shr
and
pop
shr
or
pop
ret
mov
push
mov
xchg
push
push
mov
inc
xchg
cdq
div
xchg
pop
mov
imul
add
add
push
mov
mov
call
pop
pop
push
mov
and
sub
mov
movzx
mul
xchg
mov
shl
not
and
pop
shl
or
pop
ret
push
mov
add
add
push
push
mov
imul
push
mov
call
pop
pop
xor
sub
je
mov
shr
shr
mov
and
shr
jmp
and
mov
shr
mov
and
shr
mov
and
or
pop
mov
pop
ret
lea
push
mov
push
push
mov
mul
pop
add
pop
push
imul
pop
add
push
mov
call
pop
and
or
pop
ret
mov
push
mov
cmp
jne
pusha
mov
xor
cmp
jne
call
mov
xor
inc
mov
call
sub
mov
mov
call
movzx
mov
mov
mov
loop
mov
loop
loop
dec
mov
loop
dec
inc
loop
inc
mov
loop
dec
dec
inc
loop
inc
mov
mov
mov
mov
test
popa
jne
push
call
jmp
push
call
pop
ret
lea
push
mov
test
je
test
je
test
je
call
push
mov
jecxz
cmp
je
mov
mov
mov
mov
jecxz
xchg
call
jmp
push
call
pop
mov
xchg
call
push
call
pop
ret
xchg
call
push
call
pop
ret
nop
push
push
push
xchg
mov
mov
mov
mov
call
test
jge
mov
push
mov
call
pop
pop
push
call
mov
call
pop
pop
pop
ret
nop
test
setne
test
setne
or
test
je
mov
jecxz
test
je
xchg
push
call
pop
call
xchg
xchg
ret
nop
movsx
inc
jne
call
xchg
xor
test
xchg
jl
mov
cmp
je
inc
sub
je
inc
dec
je
inc
dec
je
inc
cmp
je
inc
jmp
cmp
jb
inc
cmp
jb
inc
cmp
jb
inc
mov
ret
or
mov
test
jne
and
or
push
call
pop
ret
nop
arpl
arpl
xor
add
add
imul
inc
outs
outs
je
outs
ins
jae
js
add
add
or
dec
add
xor
call
mov
push
push
call
xchg
pop
jecxz
push
push
push
call
pop
pop
ret
mov
push
lea
xor
mov
push
push
push
call
pop
pop
pop
je
call
pop
push
call
pop
ret
nop
push
xchg
call
push
push
xchg
call
xchg
push
push
push
call
push
call
pop
ret
lea
call
push
xchg
xor
test
je
lods
cmp
jne
lods
test
je
sub
cmp
jbe
sub
cmp
jbe
sub
cmp
ja
add
shl
add
jmp
xchg
pop
ret
lea
xor
push
add
push
lea
push
cmp
pushf
jge
neg
mov
dec
xor
div
add
mov
test
jne
popf
jge
dec
mov
pop
mov
call
pop
add
ret
nop
push
mov
push
push
push
mov
mov
mov
mov
fld
ficom
fstsw
sahf
jb
fidiv
fst
fwait
test
je
and
jmp
add
add
add
retf
shl
ret
add
push
mov
fld
call
push
push
fild
pop
pop
mov
call
fsubrp
fimul
call
test
je
xor
mov
cdq
idiv
test
je
mov
shl
add
push
mov
inc
jmp
shl
add
push
mov
mov
call
add
sub
push
push
mov
mov
rep
pop
pop
call
mov
pop
pop
pop
pop
ret
lea
xchg
xor
test
je
xor
mov
inc
cmp
pushf
je
cmp
jne
mov
inc
sub
cmp
ja
lea
lea
jmp
popf
jne
neg
ret
call
call
ret
nop
push
push
push
call
pop
test
jg
xor
inc
sub
mov
pop
jge
pop
jl
inc
call
ret
lea
call
push
mov
call
pop
je
lea
sub
ret
nop
push
push
push
call
mov
or
mov
jecxz
lods
xchg
pop
push
push
call
pop
test
jle
test
jle
cmp
jge
xchg
loop
xchg
pop
pop
pop
ret
lea
push
push
push
mov
xchg
mov
call
xchg
test
jg
mov
call
xchg
inc
xor
inc
push
push
mov
dec
mov
call
xchg
mov
pop
call
pop
pop
pop
ret
nop
test
je
xchg
xor
mov
push
push
mov
or
je
mov
cmp
je
cmp
jne
dec
inc
cmp
je
cmp
sete
jmp
cmp
je
cmp
jne
inc
inc
jmp
cmp
jne
inc
cmp
je
call
test
jne
mov
inc
jmp
mov
xor
je
xor
pop
pop
ret
push
test
je
xchg
xchg
test
je
call
push
mov
call
xchg
call
push
mov
call
pop
pop
push
push
call
xchg
call
call
xchg
pop
ret
nop
dec
inc
cmp
je
cmp
jbe
ret
lea
call
cmp
jbe
cmp
jne
inc
cmp
je
cmp
jne
inc
jmp
ret
mov
call
or
inc
call
call
cmp
jne
xchg
ret
mov
push
call
mov
mov
cmp
je
inc
jmp
push
lods
test
je
push
xchg
call
pop
test
je
pop
cmp
je
cmp
jg
push
jle
pop
pop
ret
push
mov
push
push
push
mov
add
mov
inc
je
mov
push
loop
push
push
push
call
mov
mov
call
mov
pop
pop
pop
mov
pop
ret
nop
call
push
call
inc
je
dec
and
sete
ret
lea
push
push
xchg
xchg
call
pop
pop
mov
jecxz
add
dec
cmp
je
push
push
mov
call
mov
mov
call
call
pop
ret
lea
cmp
push
push
mov
call
pop
cmp
je
xchg
inc
pop
call
ret
add
add
adc
call
call
xchg
pop
call
ret
lea
push
xchg
sub
mov
push
push
call
mov
mov
call
mov
mov
call
add
pop
ret
nop
push
xchg
sub
mov
push
push
call
mov
mov
call
mov
mov
call
add
pop
ret
nop
push
sub
push
push
call
mov
mov
call
add
pop
mov
call
ret
nop
xchg
push
call
pop
cmp
jne
lea
je
sub
sub
ret
mov
push
mov
push
push
push
movzx
push
call
xchg
or
pop
or
mov
test
je
and
or
mov
pop
jecxz
push
push
push
lea
lea
lods
movsx
push
movsx
add
stos
pop
push
movsx
add
stos
xchg
pop
add
stos
xchg
add
stos
pop
mov
stos
pop
pop
xchg
call
xchg
jecxz
inc
mov
mov
test
je
cmp
jne
mov
movzx
inc
mov
mov
mov
call
xchg
pop
pop
ret
mov
push
push
push
mov
mov
call
mov
or
mov
add
mov
pop
push
call
pop
ret
lea
push
push
push
mov
mov
call
or
mov
add
mov
mov
add
mov
mov
xor
and
mov
add
add
add
pop
push
call
pop
push
or
mov
call
pop
ret
nop
push
mov
mov
push
push
call
mov
add
add
or
pop
cmp
jg
je
or
ret
or
ret
lea
push
push
xchg
push
push
call
test
je
push
push
push
xchg
call
push
push
push
call
push
push
jmp
pop
pop
ret
nop
mov
jecxz
xchg
ret
push
mov
test
jne
xor
call
mov
call
or
jmp
call
mov
pop
ret
mov
push
xchg
mov
jecxz
xchg
call
test
je
mov
jecxz
mov
test
je
call
mov
mov
call
and
jmp
call
mov
pop
ret
push
mov
push
push
push
push
push
call
push
xor
push
push
push
push
push
push
add
push
mov
mov
call
pop
mov
push
call
call
push
push
push
mov
mov
call
push
mov
mov
mov
sub
jne
mov
push
mov
sub
jne
mov
push
mov
test
jne
test
jne
mov
xchg
push
push
push
push
lea
push
push
mov
jecxz
lea
push
push
push
call
mov
mov
and
cmp
jne
mov
mov
mov
test
jne
test
xchg
jne
mov
mov
add
push
push
push
call
add
test
jne
mov
mov
mov
lea
push
call
test
je
mov
call
mov
test
je
push
push
push
push
push
push
push
call
call
xchg
pop
inc
loop
mov
push
push
push
call
test
jne
mov
call
push
push
push
push
call
mov
mov
call
mov
call
mov
call
xchg
call
mov
mov
pop
pop
ret
lea
push
mov
sub
cmp
ja
xchg
xchg
mov
lea
je
xor
je
add
xor
je
xor
je
sub
xor
je
xor
jne
push
push
lea
push
call
pop
xchg
mov
mov
mov
call
pop
mov
jecxz
xor
pop
ret
mov
pop
ret
nop
push
push
xchg
mov
test
jne
mov
jecxz
push
call
push
xchg
lea
call
pop
jecxz
inc
push
push
push
call
mov
xchg
call
pop
pop
ret
lea
push
xchg
xchg
mov
push
call
pop
test
jne
mov
mov
call
jmp
(bad)
(bad)
(bad)
inc
add
outs
bound
add
nop
push
mov
mov
movzx
jecxz
call
push
push
push
push
call
push
mov
call
xchg
loop
xchg
inc
xor
call
pop
pop
ret
mov
mov
jecxz
call
jmp
lea
call
mov
mov
call
xor
pop
ret
mov
push
push
xchg
mov
call
inc
je
dec
xchg
pop
push
mov
call
pop
push
call
xchg
pop
push
mov
call
push
call
xchg
call
call
push
inc
pop
pop
ret
nop
push
xchg
mov
cmp
jne
mov
call
mov
push
xchg
mov
mov
call
push
push
xchg
call
pop
pop
ret
lea
push
mov
mov
call
mov
pop
ret
push
mov
push
mov
mov
call
mov
mov
mov
mov
pop
pop
ret
lea
push
mov
mov
mov
mov
mov
mov
pop
ret
push
mov
push
push
mov
mov
mov
call
mov
mov
mov
mov
pop
pop
pop
ret
nop
mov
call
ret
push
push
mov
mov
push
mov
call
push
call
pop
pop
ret
nop
push
push
push
mov
mov
mov
push
push
mov
call
push
call
pop
pop
pop
ret
mov
mov
call
ret
push
mov
xor
push
push
push
mov
inc
jne
cmp
je
mov
push
call
mov
call
mov
call
xor
pop
pop
pop
mov
push
ret
jmp
jmp
pop
ret
push
mov
xor
push
push
push
mov
sub
xor
pop
pop
pop
mov
push
ret
jmp
jmp
pop
ret
nop
jmp
mov
jmp
mov
push
mov
xor
push
push
push
mov
inc
xor
pop
pop
pop
mov
push
ret
jmp
jmp
pop
ret
mov
sub
ret
push
mov
xor
push
push
push
mov
inc
xor
pop
pop
pop
mov
push
ret
jmp
jmp
pop
ret
mov
sub
ret
sub
inc
add
inc
add
inc
add
add
and
inc
add
cs
add
add
inc
add
add
inc
add
inc
add
in
add
add
add
add
add
add
inc
add
add
add
inc
add
add
adc
inc
add
add
add
inc
add
add
adc
inc
add
add
add
inc
add
add
add
inc
popa
bound
inc
add
mov
add
mov
add
mov
mov
mov
mov
call
test
jl
inc
cmp
je
mov
call
test
jne
mov
mov
call
jmp
mov
cmp
jne
mov
cmp
jne
mov
dec
mov
call
mov
mov
call
jmp
mov
cmp
je
mov
mov
call
mov
mov
call
add
dec
jne
pop
pop
pop
ret
add
(bad)
(bad)
inc
add
add
add
add
je
jmp
mov
ret
mov
ret
mov
ret
mov
test
je
test
je
mov
ret
test
je
test
je
mov
jmp
mov
jmp
test
je
mov
jmp
mov
ret
mov
test
je
test
je
mov
jmp
mov
test
je
or
test
je
or
test
je
test
je
or
mov
ret
push
push
mov
mov
push
mov
call
push
mov
call
push
push
push
mov
call
push
push
call
mov
cmp
jne
or
jmp
test
je
push
push
push
push
call
cmp
jne
or
push
call
jmp
mov
mov
pop
pop
ret
mov
push
push
push
push
mov
mov
mov
push
lea
push
push
push
push
call
test
jne
mov
mov
pop
pop
pop
pop
ret
push
push
push
push
mov
mov
mov
push
lea
push
push
push
push
call
test
jne
mov
mov
pop
pop
pop
pop
ret
push
mov
push
call
test
je
xor
pop
ret
or
pop
ret
mov
push
push
push
push
call
cmp
jne
or
ret
nop
push
mov
add
push
push
push
mov
mov
mov
push
push
push
push
push
push
push
call
mov
cmp
jne
xor
jmp
lea
push
mov
push
push
call
test
je
lea
push
lea
push
call
test
je
lea
push
push
lea
push
push
call
push
call
mov
and
movzx
push
push
call
mov
pop
pop
pop
mov
pop
ret
mov
push
mov
mov
call
pop
ret
lea
push
mov
mov
call
pop
ret
lea
push
mov
mov
mov
mov
call
pop
ret
nop
push
mov
mov
mov
mov
call
pop
ret
nop
push
mov
mov
mov
mov
call
pop
ret
nop
push
mov
mov
call
pop
ret
lea
push
mov
mov
mov
mov
call
pop
ret
nop
push
mov
mov
mov
mov
mov
call
pop
ret
lea
push
push
test
je
add
call
mov
mov
xor
mov
call
call
mov
call
mov
mov
test
je
call
pop
add
mov
pop
pop
ret
lea
push
push
call
mov
mov
mov
call
mov
call
mov
call
mov
and
mov
call
test
jle
mov
call
pop
pop
ret
push
push
mov
mov
call
mov
mov
mov
pop
pop
ret
nop
push
mov
cmp
jne
lea
xor
mov
call
lea
push
push
mov
push
mov
push
mov
push
mov
push
mov
push
mov
push
mov
push
call
add
mov
pop
ret
lea
push
mov
push
mov
mov
mov
test
je
xor
push
push
push
mov
push
call
pop
xor
pop
pop
pop
mov
push
mov
xor
mov
ret
jmp
jmp
pop
pop
ret
mov
push
mov
push
mov
push
push
dec
jne
push
xchg
push
push
push
mov
mov
mov
xor
push
push
push
mov
mov
xor
mov
cmp
ja
jmp
dec
out
add
out
add
jmp
inc
add
or
xor
mov
dec
add
or
inc
xor
or
cli
push
(bad)
dec
in
inc
sub
in
dec
in
mov
call
mov
lea
call
lea
mov
call
xor
jmp
xor
jmp
mov
mov
lea
mov
call
mov
mov
lea
lea
mov
call
cmp
je
mov
push
mov
push
mov
push
mov
push
mov
push
lea
push
lea
push
lea
mov
call
mov
mov
mov
call
cmp
je
or
jmp
cmp
jne
xor
jmp
mov
mov
call
mov
mov
call
mov
cmp
jne
cmp
je
lea
push
lea
push
mov
mov
mov
call
cmp
je
or
jmp
xor
jmp
lea
mov
call
mov
mov
call
mov
mov
call
cmp
jne
jmp
mov
call
lea
mov
call
mov
mov
call
mov
test
jl
lea
mov
mov
call
mov
mov
call
mov
mov
call
mov
push
mov
call
mov
mov
call
mov
jmp
cmp
je
lea
mov
call
lea
mov
call
mov
push
lea
push
lea
push
lea
mov
call
mov
mov
mov
call
cmp
je
or
jmp
lea
mov
call
mov
mov
call
xor
lea
mov
call
mov
mov
lea
mov
call
mov
mov
lea
lea
mov
call
mov
lea
call
mov
jmp
xor
jmp
xor
xor
pop
pop
pop
mov
push
lea
mov
call
lea
call
lea
mov
call
ret
jmp
jmp
mov
pop
pop
pop
mov
pop
ret
nop
push
push
add
mov
mov
push
lea
push
push
mov
call
push
call
mov
lea
mov
call
add
pop
pop
ret
mov
push
mov
push
push
push
push
push
push
push
push
mov
mov
mov
xor
push
push
push
mov
lea
mov
call
mov
lea
call
lea
mov
call
mov
lea
call
mov
call
mov
call
lea
mov
call
jmp
lea
call
lea
call
lea
mov
call
lea
call
mov
push
push
mov
push
push
lea
mov
call
mov
call
push
lea
mov
call
mov
call
push
mov
call
push
call
add
cmp
je
lea
mov
call
jmp
mov
mov
call
test
jne
lea
call
jmp
lea
mov
call
cmp
je
mov
call
test
jne
lea
call
cmp
jne
xor
pop
pop
pop
mov
push
lea
mov
call
ret
jmp
jmp
pop
pop
pop
mov
pop
ret
push
mov
xor
push
push
push
mov
inc
xor
pop
pop
pop
mov
push
ret
jmp
jmp
pop
ret
mov
sub
ret
push
mov
cmp
jne
push
call
mov
cmp
jae
xor
mov
xor
pop
ret
push
mov
push
call
mov
push
mov
push
call
mov
push
mov
push
call
mov
push
mov
push
call
mov
push
mov
push
call
mov
push
mov
push
call
mov
push
mov
push
call
mov
push
mov
push
call
mov
push
mov
push
call
mov
push
mov
push
call
mov
push
mov
push
call
mov
push
mov
push
call
mov
push
mov
push
call
mov
push
mov
push
call
mov
push
mov
push
call
mov
push
mov
push
call
mov
push
mov
push
call
mov
push
mov
push
call
mov
push
mov
push
call
mov
push
mov
push
call
mov
push
mov
push
call
mov
push
mov
push
call
mov
push
mov
push
call
mov
mov
pop
ret
add
push
push
inc
push
dec
cs
ins
add
add
jne
push
jb
arpl
jae
jae
add
inc
outs
jne
push
jb
arpl
jae
outs
fs
gs
add
je
outs
fs
gs
popa
jae
dec
popa
ins
gs
add
inc
gs
outs
fs
gs
imul
js
add
add
inc
gs
outs
fs
gs
popa
jae
dec
popa
ins
gs
add
inc
gs
outs
fs
gs
imul
js
add
add
inc
gs
outs
fs
gs
outs
outs
jb
popa
je
outs
outs
add
add
inc
ins
jo
jns
outs
jb
imul
push
jne
jb
push
outs
jb
imul
dec
outs
imul
push
jb
arpl
jae
outs
jb
jae
popa
je
push
dec
popa
jo
gs
imul
add
inc
gs
gs
arpl
jb
jbe
jb
popa
jae
dec
popa
ins
gs
add
add
inc
gs
gs
arpl
jb
jbe
jb
imul
add
add
inc
gs
popa
jo
gs
imul
add
inc
gs
gs
arpl
jb
jbe
jb
popa
jae
dec
popa
ins
gs
add
add
inc
gs
gs
arpl
jb
jbe
jb
imul
add
add
inc
outs
jne
inc
gs
arpl
jb
jbe
jb
add
add
je
jb
arpl
jae
gs
outs
jb
dec
outs
outs
add
add
push
push
push
mov
mov
mov
call
test
je
push
push
push
call
jmp
xor
pop
pop
pop
ret
nop
push
mov
push
push
push
mov
mov
mov
call
test
je
mov
push
push
push
push
call
jmp
xor
pop
pop
pop
pop
ret
lea
push
mov
push
push
push
mov
mov
mov
call
test
je
mov
push
push
push
push
call
jmp
xor
pop
pop
pop
pop
ret
lea
push
mov
xor
push
push
push
mov
inc
xor
pop
pop
pop
mov
push
ret
jmp
jmp
pop
ret
mov
sub
ret
push
mov
cmp
jne
push
call
mov
cmp
je
push
mov
push
call
mov
push
mov
push
call
mov
push
mov
push
call
mov
push
mov
push
call
mov
push
mov
push
call
mov
push
mov
push
call
mov
push
mov
push
call
mov
push
mov
push
call
mov
push
mov
push
call
mov
push
mov
push
call
mov
push
mov
push
call
mov
push
mov
push
call
mov
push
mov
push
call
mov
push
mov
push
call
mov
push
mov
push
call
mov
push
mov
push
call
mov
cmp
je
cmp
jne
xor
pop
ret
mov
pop
ret
add
imul
gs
xor
cs
ins
add
add
inc
jb
popa
je
push
outs
outs
ins
push
xor
popa
jo
push
add
dec
gs
jo
xor
je
imul
popa
jo
xor
je
gs
add
dec
gs
jo
xor
jb
je
dec
gs
jo
xor
js
add
push
outs
outs
ins
push
xor
popa
fs
jb
arpl
jae
gs
outs
jb
add
outs
arpl
jae
xor
jb
je
add
outs
arpl
jae
xor
js
add
add
outs
arpl
jae
xor
jb
je
add
outs
arpl
jae
xor
js
push
add
push
push
xor
inc
imul
push
push
xor
dec
gs
add
add
dec
outs
fs
xor
inc
imul
dec
outs
fs
xor
dec
gs
add
add
dec
outs
fs
xor
inc
imul
dec
outs
fs
xor
dec
gs
push
add
add
mov
mov
call
test
je
push
push
call
pop
pop
ret
xor
pop
pop
ret
nop
push
push
mov
mov
call
test
je
push
push
call
pop
pop
ret
xor
pop
pop
ret
nop
push
push
mov
mov
call
test
je
push
push
call
pop
pop
ret
xor
pop
pop
ret
nop
push
mov
xor
push
push
push
mov
inc
xor
pop
pop
pop
mov
push
ret
jmp
jmp
pop
ret
mov
sub
ret
outs
gs
je
outs
outs
popa
jb
add
jb
popa
ins
and
add
add
add
imul
jb
jb
add
jb
popa
ins
and
jb
jb
add
add
popa
and
jb
jb
add
jae
data16
je
ins
gs
outs
jb
add
data16
gs
outs
jb
add
add
arpl
jo
je
bound
jbe
jb
imul
push
mov
mov
mov
mov
call
pop
ret
nop
push
mov
mov
mov
mov
call
pop
ret
nop
mov
imul
call
ret
mov
mov
call
ret
push
mov
push
push
push
push
mov
push
mov
call
pop
ret
push
mov
add
push
push
mov
mov
mov
mov
xor
test
mov
je
mov
mov
cmp
jne
cmp
je
mov
jmp
test
jne
mov
jmp
xor
mov
cmp
jne
mov
xor
mov
cmp
jne
mov
cmp
jne
mov
cmp
jge
mov
neg
cmp
jl
cmp
jg
cmp
jne
cmp
jl
cmp
jg
cmp
jl
cmp
jg
cmp
jl
cmp
jle
mov
jmp
mov
mov
mov
call
mov
test
jne
mov
jmp
mov
mov
mov
mov
mov
mov
mov
mov
shl
mov
dec
mov
mov
mov
add
mov
mov
shl
mov
dec
mov
xor
mov
mov
add
dec
div
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
add
mov
shl
mov
mov
mov
mov
call
mov
mov
shl
mov
cmp
je
cmp
je
cmp
je
cmp
jne
mov
mov
mov
call
mov
jmp
mov
shr
add
add
mov
mov
lea
add
mov
mov
mov
mov
mov
mov
mov
mov
call
pop
pop
mov
pop
ret
push
push
push
push
add
mov
xor
test
mov
mov
mov
je
cmp
je
cmp
je
mov
cmp
je
mov
jmp
mov
mov
mov
mov
call
mov
cmp
jae
xor
jmp
mov
sub
cmp
jbe
mov
mov
sub
add
push
mov
push
mov
push
call
mov
mov
mov
add
movzx
mov
mov
mov
shl
movzx
xor
and
mov
xor
jmp
mov
mov
shl
mov
movzx
xor
and
mov
mov
movzx
mov
and
mov
mov
mov
mov
mov
inc
mov
sub
cmp
jbe
test
xor
pop
pop
pop
pop
pop
pop
ret
push
test
je
cmp
je
cmp
je
cmp
jne
mov
pop
ret
xor
xor
mov
mov
mov
xor
mov
mov
mov
mov
mov
cmp
jge
xor
mov
cmp
je
mov
jmp
mov
mov
mov
xor
mov
mov
call
mov
call
xor
pop
ret
nop
nop
push
push
push
push
push
mov
mov
xor
test
je
cmp
jne
mov
jmp
mov
cmp
jne
mov
test
jl
cmp
jg
test
jl
cmp
jle
mov
jmp
mov
lea
lea
mov
mov
mov
cmp
je
cmp
je
mov
call
mov
cmp
je
mov
movzx
mov
movzx
mov
movzx
mov
movzx
mov
mov
mov
pop
pop
pop
pop
pop
ret
nop
nop
push
mov
inc
mov
lea
push
mov
shr
pop
mov
mov
inc
mov
and
mov
pop
ret
nop
push
mov
push
mov
mov
mov
cmp
jbe
mov
test
je
push
mov
push
mov
push
call
add
mov
add
mov
add
add
sub
mov
mov
sub
mov
test
jne
mov
mov
pop
pop
ret
nop
nop
nop
push
push
push
push
push
mov
mov
test
je
cmp
je
cmp
jg
test
jge
mov
jmp
cmp
mov
je
cmp
jne
cmp
jne
cmp
jne
cmp
je
mov
mov
mov
jmp
cmp
jne
mov
mov
mov
jmp
mov
mov
mov
cmp
jne
mov
mov
sub
dec
shl
add
shl
sar
cmp
jbe
mov
shl
or
cmp
je
or
mov
push
xor
mov
div
mov
pop
sub
add
mov
mov
mov
call
cmp
je
mov
mov
shr
call
mov
mov
and
call
mov
cmp
je
mov
call
cmp
jne
mov
xor
jmp
cmp
jne
cmp
jl
cmp
je
mov
mov
mov
jmp
cmp
jne
cmp
je
mov
mov
mov
jmp
cmp
jne
cmp
jne
test
je
cmp
je
mov
mov
lea
mov
mov
call
mov
cmp
je
cmp
jne
mov
cmp
je
cmp
jne
cmp
jne
mov
xor
jmp
cmp
jne
cmp
jne
mov
call
jmp
push
xor
xor
mov
call
cmp
jne
mov
mov
mov
mov
dec
add
push
push
mov
push
call
add
mov
call
cmp
jne
mov
xor
jmp
cmp
je
xor
jmp
cmp
je
mov
jmp
mov
mov
shr
call
mov
mov
and
call
mov
call
mov
cmp
je
xor
jmp
mov
pop
pop
pop
pop
pop
ret
nop
push
push
mov
test
je
cmp
jne
mov
pop
pop
ret
mov
mov
cmp
je
cmp
je
cmp
je
mov
pop
pop
ret
mov
mov
test
je
mov
mov
call
mov
mov
test
je
mov
mov
call
mov
mov
test
je
mov
mov
call
mov
mov
test
je
mov
mov
call
mov
mov
call
xor
cmp
mov
jne
mov
jmp
xor
pop
pop
ret
nop
nop
nop
push
push
push
push
push
mov
mov
cmp
je
test
je
mov
cmp
jne
mov
jmp
mov
mov
mov
mov
push
push
mov
mov
rep
pop
pop
mov
mov
mov
call
mov
test
jne
mov
jmp
mov
push
push
mov
mov
mov
rep
pop
pop
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
cmp
je
cmp
je
cmp
je
cmp
jne
mov
call
mov
jmp
mov
add
push
mov
push
mov
push
call
add
mov
add
push
mov
push
mov
push
call
add
mov
add
push
mov
push
mov
push
call
add
mov
push
mov
push
mov
push
call
mov
add
sub
add
mov
lea
mov
shr
add
add
lea
mov
mov
lea
add
mov
mov
lea
mov
mov
xor
pop
pop
pop
pop
pop
ret
nop
push
push
mov
push
mov
mov
cmp
jae
mov
test
jne
xor
jmp
sub
mov
cmp
jne
mov
mov
mov
call
mov
push
mov
push
push
call
add
mov
add
add
pop
pop
pop
ret
nop
push
mov
mov
add
mov
mov
mov
mov
mov
dec
add
push
push
mov
push
call
mov
add
lea
movzx
mov
mov
lea
movzx
mov
mov
lea
movzx
mov
xor
mov
lea
movzx
mov
mov
xor
xor
mov
mov
mov
xor
mov
mov
mov
xor
mov
pop
ret
nop
nop
nop
push
push
push
add
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
sub
cmp
jbe
mov
sub
mov
sub
jmp
xor
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
add
mov
mov
cmp
jb
shr
mov
cmp
jae
mov
mov
add
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
inc
mov
cmp
jne
add
inc
inc
inc
mov
cmp
jne
inc
inc
mov
cmp
jne
inc
inc
mov
cmp
jne
inc
inc
mov
cmp
jne
inc
inc
mov
cmp
jne
inc
inc
mov
cmp
jne
inc
inc
mov
cmp
jne
inc
inc
mov
cmp
jne
cmp
ja
mov
sub
push
mov
pop
sub
lea
cmp
jge
mov
mov
mov
cmp
jge
mov
mov
mov
mov
mov
and
mov
movzx
mov
cmp
jbe
dec
jne
mov
mov
cmp
jb
mov
jmp
mov
add
pop
pop
pop
ret
nop
nop
nop
push
push
push
mov
push
push
mov
mov
sub
sub
test
jne
cmp
jne
cmp
jne
mov
jmp
cmp
jne
dec
jmp
mov
sub
add
cmp
ja
push
mov
mov
mov
add
push
push
call
add
sub
sub
sub
mov
mov
add
add
sub
movzx
mov
cmp
ja
mov
sub
jmp
xor
mov
dec
jne
mov
mov
add
add
sub
movzx
mov
cmp
ja
mov
sub
jmp
xor
mov
dec
jne
add
mov
cmp
je
mov
mov
add
mov
add
call
add
cmp
jb
mov
mov
movzx
mov
mov
shl
mov
mov
movzx
xor
and
mov
cmp
jae
mov
cmp
jne
pop
pop
pop
pop
pop
ret
push
mov
push
push
mov
mov
mov
sub
cmp
jbe
mov
cmp
ja
mov
call
mov
test
jne
cmp
jne
xor
jmp
test
je
mov
xor
add
mov
mov
mov
add
test
je
cmp
ja
sub
mov
mov
push
mov
sub
cmp
jl
mov
add
jmp
xor
mov
call
mov
mov
mov
call
mov
cmp
jne
xor
jmp
mov
mov
sub
mov
sub
cmp
jb
push
mov
sub
test
jl
mov
add
jmp
xor
mov
call
mov
mov
mov
call
mov
cmp
jne
xor
jmp
cmp
sete
and
push
mov
sub
cmp
jl
mov
add
jmp
xor
mov
call
mov
mov
mov
call
mov
cmp
jne
cmp
jne
mov
jmp
xor
jmp
cmp
jne
mov
jmp
mov
pop
pop
pop
ret
nop
push
push
push
push
mov
mov
xor
cmp
jae
mov
call
mov
cmp
jae
cmp
jne
xor
jmp
test
je
cmp
jb
mov
mov
shl
mov
mov
movzx
xor
and
mov
mov
movzx
mov
and
mov
mov
mov
mov
mov
mov
test
je
mov
mov
sub
sub
cmp
ja
cmp
je
mov
mov
call
mov
cmp
jb
mov
mov
sub
mov
mov
mov
sub
mov
dec
inc
mov
mov
and
xor
mov
inc
cmp
jae
movzx
mov
jmp
movzx
sar
mov
xor
mov
inc
mov
dec
cmp
sete
and
mov
sub
mov
cmp
ja
cmp
jb
dec
inc
mov
mov
shl
mov
mov
movzx
xor
and
mov
mov
movzx
mov
and
mov
mov
mov
mov
mov
mov
dec
jne
inc
jmp
mov
xor
add
mov
mov
mov
movzx
mov
mov
mov
shl
mov
movzx
xor
and
mov
jmp
mov
mov
mov
mov
mov
mov
mov
inc
mov
mov
and
inc
mov
dec
cmp
sete
and
dec
inc
test
je
push
mov
sub
cmp
jl
mov
add
jmp
xor
mov
call
mov
mov
mov
call
mov
cmp
jne
xor
jmp
cmp
sete
and
push
mov
sub
cmp
jl
mov
add
jmp
xor
mov
call
mov
mov
mov
call
mov
cmp
jne
cmp
jne
mov
jmp
xor
jmp
cmp
jne
mov
jmp
mov
pop
pop
pop
pop
ret
push
push
push
add
xor
mov
mov
cmp
jae
mov
call
mov
cmp
jae
cmp
jne
xor
jmp
test
je
cmp
jb
mov
mov
shl
mov
mov
movzx
xor
and
mov
mov
movzx
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
test
je
mov
cmp
jae
mov
mov
sub
sub
cmp
ja
cmp
je
mov
mov
call
mov
cmp
ja
cmp
je
cmp
jne
mov
sub
cmp
jbe
mov
mov
cmp
jb
cmp
jb
mov
add
sub
mov
mov
mov
dec
mov
sub
mov
mov
sub
mov
dec
inc
mov
mov
and
xor
mov
inc
cmp
jae
movzx
mov
jmp
movzx
sar
mov
xor
mov
inc
mov
dec
cmp
sete
and
mov
dec
sub
sub
inc
mov
cmp
ja
mov
mov
shl
mov
mov
movzx
xor
and
mov
mov
mov
movzx
mov
and
mov
mov
mov
mov
mov
mov
dec
jne
xor
mov
mov
inc
test
je
push
mov
sub
cmp
jl
mov
add
jmp
xor
mov
call
mov
mov
mov
call
mov
cmp
jne
xor
jmp
jmp
cmp
je
mov
mov
mov
mov
mov
mov
mov
inc
mov
mov
and
inc
mov
dec
cmp
sete
and
test
je
push
mov
sub
cmp
jl
mov
add
jmp
xor
mov
call
mov
mov
mov
call
inc
dec
mov
cmp
jne
xor
jmp
mov
inc
dec
jmp
cmp
je
mov
mov
mov
mov
mov
mov
mov
inc
mov
mov
and
inc
mov
dec
cmp
sete
and
xor
mov
cmp
sete
and
push
mov
sub
cmp
jl
mov
add
jmp
xor
mov
call
mov
mov
mov
call
mov
cmp
jne
cmp
jne
mov
jmp
xor
jmp
cmp
jne
mov
jmp
mov
pop
pop
pop
pop
pop
ret
mov
ret
nop
nop
nop
push
mov
call
lea
lea
mov
lea
mov
mov
xor
mov
mov
mov
mov
mov
mov
mov
call
pop
ret
nop
nop
xor
lea
mov
inc
add
cmp
jl
xor
lea
mov
inc
add
cmp
jl
xor
lea
mov
inc
add
cmp
jl
mov
xor
xor
mov
mov
mov
mov
ret
nop
push
push
push
add
mov
mov
mov
mov
mov
mov
add
lea
mov
mov
lea
jmp
cmp
jge
mov
mov
mov
cmp
jb
mov
mov
mov
cmp
jne
mov
mov
mov
cmp
ja
inc
mov
mov
cmp
ja
mov
mov
cmp
jne
mov
mov
cmp
jbe
mov
mov
mov
mov
add
cmp
jle
mov
mov
mov
add
pop
pop
pop
ret
push
push
push
push
add
mov
mov
mov
mov
mov
xor
mov
mov
mov
mov
mov
mov
mov
mov
xor
mov
add
mov
inc
add
cmp
jle
mov
mov
mov
mov
mov
mov
mov
inc
mov
cmp
mov
mov
lea
jge
mov
movzx
movzx
inc
cmp
jge
mov
inc
mov
cmp
jg
mov
inc
xor
mov
cmp
jl
mov
sub
mov
mov
mov
mov
mov
movzx
add
imul
mov
add
cmp
je
mov
movzx
add
movzx
imul
mov
add
inc
add
cmp
jl
cmp
je
lea
mov
lea
jmp
dec
add
cmp
je
mov
dec
mov
add
mov
dec
sub
cmp
jg
mov
mov
test
lea
mov
je
mov
movzx
mov
mov
lea
test
je
dec
add
mov
cmp
jg
movzx
cmp
je
movzx
mov
sub
movzx
imul
mov
add
mov
dec
test
jne
dec
add
test
jne
add
pop
pop
pop
pop
ret
nop
push
push
push
add
mov
mov
xor
mov
lea
mov
mov
add
add
inc
add
mov
add
cmp
mov
jle
xor
lea
cmp
jg
movzx
test
je
mov
inc
movzx
mov
call
mov
inc
add
cmp
jle
add
pop
pop
pop
ret
nop
nop
push
push
push
push
add
mov
xor
mov
mov
mov
mov
mov
mov
mov
lea
mov
xor
mov
mov
mov
mov
mov
cmp
jge
cmp
je
mov
inc
mov
mov
mov
jmp
mov
inc
inc
add
cmp
jl
jmp
cmp
jge
inc
mov
jmp
xor
inc
mov
mov
mov
mov
mov
dec
cmp
je
mov
movzx
sub
cmp
jl
mov
mov
mov
mov
sar
jns
adc
cmp
jl
mov
mov
mov
call
dec
cmp
jge
mov
mov
mov
add
mov
mov
mov
mov
mov
call
mov
dec
mov
mov
dec
mov
mov
mov
add
push
pop
mov
mov
cmp
ja
mov
jmp
mov
inc
mov
mov
mov
mov
mov
mov
mov
inc
call
cmp
jge
dec
mov
mov
mov
mov
mov
call
lea
mov
mov
call
add
pop
pop
pop
pop
ret
nop
push
push
push
add
mov
mov
mov
movzx
xor
mov
mov
test
jne
mov
mov
mov
mov
xor
add
mov
mov
mov
cmp
jg
mov
mov
inc
movzx
cmp
jle
cmp
je
cmp
jle
mov
add
jmp
test
je
cmp
je
mov
inc
mov
inc
jmp
cmp
jg
mov
inc
jmp
mov
inc
xor
mov
test
jne
mov
mov
jmp
cmp
jne
mov
mov
jmp
mov
mov
inc
add
mov
cmp
jle
add
pop
pop
pop
ret
nop
nop
push
push
push
push
add
xor
mov
mov
mov
mov
mov
mov
movzx
test
jne
mov
mov
xor
mov
mov
add
mov
mov
cmp
jg
mov
mov
inc
movzx
cmp
jle
cmp
je
cmp
jle
movzx
mov
sub
cmp
jge
movzx
mov
sub
mov
mov
shl
or
mov
inc
mov
lea
push
pop
mov
and
mov
mov
inc
mov
lea
push
movzx
pop
sar
mov
mov
movzx
sub
sar
mov
add
mov
jmp
mov
mov
shl
or
add
dec
jne
jmp
test
je
cmp
je
movzx
mov
sub
cmp
jge
movzx
mov
sub
mov
mov
shl
or
mov
inc
mov
lea
push
pop
mov
and
mov
mov
inc
mov
lea
push
movzx
pop
sar
mov
mov
movzx
sub
sar
mov
add
mov
jmp
mov
mov
shl
or
add
dec
movzx
mov
sub
cmp
jge
movzx
mov
sub
mov
mov
shl
or
mov
inc
mov
lea
push
pop
mov
and
mov
mov
inc
mov
lea
push
movzx
pop
sar
mov
mov
movzx
sub
sar
mov
add
mov
jmp
mov
mov
shl
or
add
mov
mov
sub
cmp
jge
add
mov
mov
sub
shl
or
movzx
mov
inc
mov
lea
push
pop
mov
and
mov
mov
inc
mov
lea
push
movzx
pop
sar
mov
mov
sub
sar
mov
add
mov
jmp
add
mov
shl
or
add
jmp
cmp
jg
movzx
mov
sub
cmp
jge
movzx
mov
sub
mov
mov
shl
or
mov
inc
mov
lea
push
pop
mov
and
mov
mov
inc
mov
lea
push
movzx
pop
sar
mov
mov
movzx
sub
sar
mov
add
mov
jmp
mov
mov
shl
or
add
mov
mov
sub
cmp
jge
add
mov
mov
sub
shl
or
movzx
mov
inc
mov
lea
push
pop
mov
and
mov
mov
inc
mov
lea
push
movzx
pop
sar
mov
mov
sub
sar
mov
add
mov
jmp
add
mov
shl
or
add
jmp
movzx
mov
sub
cmp
jge
movzx
mov
sub
mov
mov
shl
or
mov
inc
mov
lea
push
pop
mov
and
mov
mov
inc
mov
lea
push
movzx
pop
sar
mov
mov
movzx
sub
sar
mov
add
mov
jmp
mov
mov
shl
or
add
mov
mov
sub
cmp
jge
add
mov
mov
sub
shl
or
movzx
mov
inc
mov
lea
push
pop
mov
and
mov
mov
inc
mov
lea
push
movzx
pop
sar
mov
mov
sub
sar
mov
add
mov
jmp
add
mov
shl
or
add
xor
mov
test
jne
mov
mov
jmp
cmp
jne
mov
mov
jmp
mov
mov
inc
add
mov
cmp
jle
add
pop
pop
pop
pop
ret
nop
nop
nop
push
mov
lea
mov
mov
call
lea
mov
mov
call
lea
mov
call
mov
mov
xor
mov
cmp
jne
dec
dec
cmp
jge
lea
add
add
pop
ret
push
mov
add
push
push
push
mov
mov
mov
mov
mov
sub
mov
cmp
jge
mov
mov
add
sub
mov
shl
or
movzx
mov
inc
mov
lea
push
pop
mov
and
mov
mov
inc
mov
lea
push
movzx
pop
sar
mov
mov
sub
sar
mov
add
mov
jmp
mov
mov
add
shl
or
add
mov
mov
sub
mov
cmp
jge
mov
mov
dec
sub
mov
shl
or
movzx
mov
inc
mov
lea
push
pop
mov
and
mov
mov
inc
mov
lea
push
movzx
pop
sar
mov
mov
sub
sar
mov
add
mov
jmp
mov
mov
add
shl
or
add
mov
mov
sub
mov
cmp
jge
mov
mov
add
sub
mov
shl
or
movzx
mov
inc
mov
lea
push
pop
mov
and
mov
mov
inc
mov
lea
push
movzx
pop
sar
mov
mov
sub
sar
mov
add
mov
jmp
mov
mov
add
shl
or
add
xor
mov
cmp
jge
mov
mov
sub
cmp
jge
xor
sub
mov
movzx
mov
mov
mov
shl
or
mov
inc
mov
lea
push
pop
mov
and
mov
mov
inc
mov
lea
push
movzx
pop
sar
mov
mov
movzx
sub
sar
mov
add
mov
jmp
movzx
mov
mov
shl
or
add
inc
inc
cmp
jl
mov
dec
lea
mov
call
mov
dec
lea
mov
call
pop
pop
pop
mov
pop
ret
push
mov
add
push
push
mov
mov
mov
mov
mov
sub
mov
cmp
jge
mov
mov
shl
or
sub
mov
inc
mov
lea
push
pop
mov
and
mov
mov
inc
mov
lea
push
movzx
pop
sar
mov
mov
movzx
sub
sar
mov
add
mov
jmp
mov
shl
or
add
push
mov
mov
call
pop
pop
pop
pop
pop
ret
nop
push
push
push
mov
mov
mov
sub
mov
cmp
jge
mov
mov
mov
sub
mov
shl
or
movzx
mov
inc
mov
lea
push
pop
mov
and
mov
mov
inc
mov
lea
push
movzx
pop
sar
mov
mov
sub
sar
mov
add
mov
jmp
mov
mov
shl
or
add
mov
mov
mov
movzx
sub
cmp
jge
mov
mov
sub
movzx
mov
movzx
mov
shl
or
mov
inc
mov
lea
push
pop
mov
and
mov
mov
inc
mov
lea
push
movzx
pop
sar
mov
mov
sub
sar
mov
add
mov
jmp
mov
mov
mov
shl
or
add
mov
call
mov
add
mov
sub
cmp
jge
mov
mov
sub
cmp
jle
mov
mov
mov
sub
mov
shl
or
mov
inc
mov
lea
push
pop
mov
and
mov
mov
inc
mov
lea
push
movzx
pop
sar
mov
mov
movzx
sub
sar
mov
add
mov
jmp
mov
mov
shl
or
add
mov
mov
mov
movzx
sub
cmp
jge
mov
mov
sub
movzx
mov
movzx
mov
shl
or
mov
inc
mov
lea
push
pop
mov
and
mov
mov
inc
mov
lea
push
movzx
pop
sar
mov
mov
sub
sar
mov
add
mov
jmp
mov
mov
mov
shl
or
add
mov
call
mov
pop
pop
pop
ret
nop
nop
nop
push
mov
add
push
push
push
mov
mov
xor
mov
mov
cmp
mov
jle
cmp
jne
mov
call
lea
mov
call
lea
mov
call
mov
call
mov
mov
mov
add
add
shr
shr
cmp
jb
mov
jmp
lea
mov
lea
cmp
jb
cmp
je
push
mov
mov
mov
call
jmp
cmp
jne
mov
mov
sub
cmp
jge
lea
mov
mov
sub
shl
or
movzx
mov
inc
mov
lea
push
pop
mov
and
mov
mov
inc
mov
lea
push
movzx
pop
sar
mov
mov
sub
sar
mov
add
mov
jmp
mov
mov
add
shl
or
add
mov
mov
mov
call
jmp
mov
mov
sub
cmp
jge
lea
mov
mov
sub
shl
or
movzx
mov
inc
mov
lea
push
pop
mov
and
mov
mov
inc
mov
lea
push
movzx
pop
sar
mov
mov
sub
sar
mov
add
mov
jmp
mov
mov
add
shl
or
add
mov
inc
push
mov
mov
mov
inc
inc
call
lea
lea
mov
call
mov
call
test
je
mov
call
pop
pop
pop
pop
pop
pop
ret
nop
nop
nop
push
push
mov
mov
mov
mov
inc
mov
test
lea
push
pop
mov
jne
inc
jmp
inc
dec
movzx
inc
cmp
jae
mov
jmp
shr
mov
xor
mov
inc
mov
dec
cmp
sete
and
pop
pop
ret
nop
nop
push
push
push
push
add
mov
xor
mov
cmp
je
mov
mov
movzx
mov
mov
movzx
inc
test
jne
movzx
mov
sub
cmp
jge
movzx
mov
mov
mov
sub
shl
or
movzx
mov
inc
mov
lea
push
pop
mov
and
mov
mov
inc
mov
lea
push
movzx
pop
sar
mov
mov
sub
sar
mov
add
mov
jmp
mov
mov
shl
or
add
jmp
xor
mov
movzx
mov
mov
sub
cmp
jge
movzx
mov
mov
mov
shl
or
mov
inc
mov
lea
push
pop
mov
and
mov
mov
inc
mov
lea
push
movzx
pop
sar
mov
mov
movzx
sub
sar
mov
mov
sub
add
mov
jmp
mov
mov
shl
or
mov
add
mov
test
je
sub
mov
mov
sub
cmp
jge
mov
mov
shl
or
mov
inc
mov
lea
push
mov
and
pop
mov
mov
inc
mov
lea
push
movzx
sar
pop
mov
mov
sub
movzx
sar
mov
sub
add
mov
jmp
mov
shl
or
add
dec
cmp
jae
mov
jmp
mov
shr
mov
and
mov
movzx
mov
sub
cmp
jge
mov
sub
movzx
mov
mov
mov
shl
or
mov
inc
mov
lea
push
pop
mov
and
mov
mov
inc
mov
lea
push
movzx
pop
sar
mov
mov
movzx
sub
sar
mov
add
mov
jmp
mov
mov
mov
shl
or
add
mov
test
je
sub
mov
mov
sub
mov
cmp
jge
mov
mov
shl
or
mov
inc
mov
lea
push
mov
and
pop
mov
mov
inc
mov
lea
push
movzx
sar
pop
mov
mov
sub
movzx
sar
mov
sub
add
mov
jmp
mov
shl
or
add
mov
cmp
jb
movzx
mov
sub
mov
cmp
jge
movzx
mov
mov
shl
or
mov
inc
mov
lea
push
mov
and
pop
mov
mov
inc
mov
lea
push
movzx
sar
pop
mov
mov
sub
movzx
sar
mov
sub
add
mov
jmp
mov
mov
shl
or
add
movzx
mov
add
pop
pop
pop
pop
ret
nop
push
push
push
xor
xor
xor
lea
movzx
add
inc
add
cmp
jl
lea
cmp
jge
movzx
add
inc
add
cmp
jl
lea
cmp
jge
movzx
add
inc
add
cmp
jl
shr
cmp
jbe
xor
jmp
mov
mov
pop
pop
pop
ret
nop
nop
nop
push
xor
mov
dec
and
or
shr
add
test
jg
mov
shr
pop
ret
nop
nop
nop
push
cmp
jne
mov
inc
mov
mov
and
mov
mov
inc
movzx
mov
sar
mov
xor
mov
mov
pop
ret
cmp
jl
mov
inc
mov
mov
mov
shr
sub
pop
ret
push
cmp
jle
mov
inc
mov
mov
and
mov
mov
inc
mov
movzx
sar
mov
jmp
cmp
jle
mov
inc
mov
mov
mov
mov
xor
mov
pop
ret
nop
nop
nop
push
mov
push
push
push
mov
mov
mov
mov
call
mov
cmp
je
mov
mov
inc
mov
lea
mov
push
and
pop
not
mov
and
mov
inc
mov
lea
movzx
push
pop
sar
mov
mov
inc
mov
lea
push
pop
mov
mov
not
movzx
mov
inc
mov
sar
mov
jmp
mov
inc
mov
mov
mov
inc
mov
add
test
jne
pop
pop
pop
pop
ret
test
je
cmp
jne
mov
ret
xor
xor
mov
mov
mov
mov
cmp
je
mov
jmp
xor
mov
mov
mov
xor
xchg
call
xor
ret
nop
nop
push
mov
test
je
cmp
je
cmp
jne
mov
pop
ret
mov
mov
test
je
mov
call
mov
mov
call
xor
xor
mov
pop
ret
nop
nop
nop
push
mov
push
push
push
push
mov
mov
cmp
mov
je
mov
mov
cmp
jne
cmp
je
mov
jmp
test
jne
mov
jmp
xor
mov
cmp
jne
mov
xor
mov
cmp
jne
mov
mov
mov
mov
call
mov
test
jne
mov
jmp
mov
xor
mov
xor
mov
test
mov
jge
mov
neg
mov
cmp
jl
cmp
jle
mov
call
mov
jmp
mov
mov
shl
mov
mov
mov
cmp
je
xor
jmp
mov
mov
call
mov
test
mov
jne
mov
call
mov
jmp
mov
call
xor
pop
pop
pop
pop
pop
ret
push
mov
xchg
call
ret
nop
nop
push
push
push
push
mov
mov
test
je
cmp
je
cmp
jne
mov
jmp
cmp
jne
mov
jmp
xor
mov
mov
mov
mov
cmp
ja
jmp
cmp
inc
add
sub
pop
sub
lea
inc
add
sub
pop
sub
mov
inc
add
sub
sbb
add
inc
add
add
pop
mov
jmp
mov
dec
inc
mov
inc
mov
xor
mov
mov
mov
and
cmp
je
mov
mov
mov
mov
jmp
mov
mov
shr
add
cmp
jbe
mov
mov
mov
mov
jmp
mov
mov
cmp
jne
mov
jmp
dec
inc
xor
mov
mov
inc
mov
mov
and
mov
shl
push
add
mov
div
pop
test
je
mov
mov
mov
mov
jmp
test
jne
mov
mov
jmp
mov
mov
cmp
jne
mov
jmp
mov
dec
inc
mov
inc
mov
xor
mov
shl
mov
mov
mov
cmp
jne
mov
jmp
dec
inc
xor
mov
mov
inc
mov
mov
mov
shl
add
mov
mov
cmp
jne
mov
jmp
dec
inc
xor
mov
mov
inc
mov
mov
mov
shl
add
mov
mov
cmp
jne
mov
jmp
dec
inc
xor
mov
inc
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
jmp
mov
mov
mov
mov
xor
mov
mov
jmp
mov
mov
mov
mov
call
mov
cmp
jne
mov
mov
xor
mov
jmp
test
jne
mov
cmp
je
mov
jmp
mov
mov
mov
add
mov
mov
call
mov
cmp
je
mov
jmp
mov
mov
cmp
jne
mov
jmp
mov
dec
inc
mov
inc
mov
xor
mov
shl
mov
mov
mov
cmp
jne
mov
jmp
dec
inc
xor
mov
mov
inc
mov
mov
mov
shl
add
mov
mov
cmp
jne
mov
jmp
dec
inc
xor
mov
mov
inc
mov
mov
mov
shl
add
mov
mov
cmp
jne
mov
jmp
dec
inc
xor
mov
mov
inc
mov
mov
mov
add
mov
mov
cmp
je
mov
mov
mov
mov
jmp
mov
mov
mov
jmp
mov
jmp
mov
pop
pop
pop
pop
ret
nop
nop
nop
push
push
push
push
mov
mov
mov
mov
test
je
cmp
je
mov
cmp
je
mov
jmp
mov
mov
mov
call
cmp
je
mov
jmp
mov
mov
mov
mov
shl
cmp
jb
mov
mov
mov
shl
dec
sub
add
mov
mov
mov
call
mov
mov
xor
pop
pop
pop
pop
ret
nop
nop
nop
push
push
push
mov
test
je
cmp
jne
mov
jmp
mov
cmp
je
mov
xor
mov
mov
test
jne
mov
jmp
mov
mov
mov
jmp
mov
cmp
jne
inc
jmp
test
je
xor
jmp
mov
sub
mov
inc
dec
test
je
cmp
jb
mov
sub
add
mov
mov
cmp
mov
mov
je
mov
jmp
mov
mov
mov
call
mov
mov
mov
xor
mov
pop
pop
pop
ret
nop
nop
nop
test
je
cmp
je
mov
cmp
jne
mov
ret
mov
mov
call
ret
lea
push
mov
add
push
push
mov
mov
mov
lea
mov
mov
xor
mov
add
mov
xor
mov
add
mov
xor
mov
add
mov
xor
mov
add
mov
xor
mov
add
mov
xor
mov
add
mov
xor
mov
add
mov
xor
mov
add
mov
xor
mov
add
mov
xor
mov
add
mov
xor
mov
add
mov
xor
mov
add
mov
xor
mov
add
mov
xor
mov
add
mov
xor
mov
add
mov
xor
mov
mov
mov
mov
mov
mov
mov
inc
add
dec
jne
mov
cmp
jne
mov
xor
mov
xor
mov
xor
mov
jmp
mov
mov
mov
lea
mov
mov
mov
cmp
jne
inc
add
cmp
jbe
mov
cmp
jbe
mov
mov
lea
mov
mov
cmp
jne
dec
add
cmp
jne
mov
mov
mov
cmp
jbe
mov
mov
mov
mov
mov
mov
mov
shl
mov
lea
mov
cmp
jae
mov
mov
sub
mov
test
jge
mov
jmp
add
shl
inc
cmp
jb
mov
mov
sub
mov
test
jge
mov
jmp
mov
mov
add
xor
mov
lea
mov
lea
mov
jmp
mov
add
add
mov
add
dec
jne
mov
mov
xor
mov
mov
add
mov
test
je
mov
inc
mov
mov
mov
inc
mov
cmp
jb
mov
mov
mov
xor
mov
mov
mov
mov
mov
mov
neg
mov
xor
mov
xor
mov
xor
mov
lea
mov
mov
cmp
jg
mov
mov
mov
jmp
mov
lea
mov
mov
lea
mov
jmp
inc
add
add
mov
add
mov
sub
cmp
jbe
mov
jmp
mov
mov
mov
sub
mov
mov
mov
shl
inc
cmp
jbe
sub
mov
shl
lea
add
cmp
jbe
jmp
add
add
cmp
jbe
sub
inc
cmp
ja
mov
mov
shl
mov
mov
mov
add
cmp
jbe
mov
jmp
shl
add
mov
mov
mov
mov
add
cmp
je
mov
mov
mov
mov
mov
mov
mov
sub
mov
shr
mov
mov
mov
sub
test
jns
add
sar
sub
mov
mov
mov
mov
mov
jmp
mov
mov
mov
mov
add
cmp
jl
mov
sub
mov
mov
shl
add
cmp
ja
mov
jmp
mov
mov
cmp
jae
cmp
jae
xor
jmp
mov
mov
mov
mov
mov
add
jmp
mov
mov
sub
mov
mov
add
mov
mov
mov
mov
add
mov
sub
mov
shl
mov
mov
shr
cmp
jbe
mov
mov
mov
mov
mov
add
cmp
ja
mov
dec
mov
shl
jmp
xor
shr
test
jne
xor
mov
mov
mov
shl
lea
dec
mov
jmp
dec
add
mov
sub
mov
mov
shl
dec
and
mov
cmp
jne
mov
add
test
jne
inc
add
mov
cmp
jle
cmp
je
cmp
je
mov
jmp
xor
pop
pop
mov
pop
ret
nop
nop
nop
push
mov
add
push
push
mov
mov
mov
mov
xor
mov
mov
mov
mov
call
mov
test
jne
mov
jmp
push
push
mov
push
lea
mov
push
mov
push
push
mov
mov
push
mov
mov
call
mov
cmp
jne
mov
jmp
cmp
je
mov
cmp
jne
mov
mov
mov
mov
call
mov
pop
pop
mov
pop
ret
nop
push
mov
add
push
push
mov
mov
mov
mov
xor
mov
mov
mov
mov
call
mov
test
jne
mov
jmp
push
push
mov
push
lea
mov
push
mov
push
push
mov
push
mov
mov
mov
call
mov
test
jne
mov
cmp
jne
cmp
jne
mov
jmp
cmp
je
mov
mov
mov
mov
call
mov
jmp
push
push
mov
push
lea
mov
push
mov
push
push
mov
push
mov
mov
shl
add
xor
call
mov
test
jne
mov
cmp
jne
cmp
jbe
cmp
jne
mov
jmp
cmp
jne
mov
mov
jmp
cmp
je
mov
mov
mov
mov
call
mov
jmp
mov
mov
call
xor
pop
pop
mov
pop
ret
nop
push
mov
push
mov
mov
mov
mov
mov
mov
xor
mov
pop
pop
ret
lea
push
push
push
mov
shr
mov
and
and
push
mov
test
mov
jne
mov
jmp
test
jbe
cmp
jae
mov
jmp
mov
sub
cmp
jl
xor
xor
mov
mov
add
xor
add
add
mov
add
add
xor
mov
add
add
xor
mov
add
add
xor
mov
add
add
xor
mov
add
add
xor
mov
add
add
xor
mov
add
add
xor
mov
add
add
xor
mov
add
add
xor
mov
add
add
xor
mov
add
add
xor
mov
add
add
xor
mov
add
add
xor
mov
add
add
add
add
sub
cmp
jge
test
je
xor
mov
add
inc
add
dec
jne
mov
mov
xor
div
mov
mov
mov
xor
div
mov
test
ja
mov
shl
or
pop
pop
pop
pop
ret
lea
push
push
mov
mov
test
je
mov
mov
mov
cmp
je
cmp
jne
mov
mov
call
cmp
jne
mov
mov
call
xor
xor
mov
xor
mov
mov
mov
mov
mov
cmp
je
xor
xor
xor
call
mov
mov
pop
pop
ret
nop
nop
push
push
push
mov
push
mov
mov
mov
mov
mov
call
mov
test
jne
mov
jmp
mov
mov
mov
call
mov
test
jne
mov
mov
call
xor
jmp
mov
mov
mov
call
mov
test
jne
mov
mov
call
mov
mov
call
xor
jmp
mov
xor
add
mov
mov
mov
mov
mov
mov
xor
call
mov
pop
pop
pop
pop
ret
nop
nop
nop
push
push
push
push
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmp
jae
mov
sub
dec
jmp
mov
sub
mov
cmp
ja
jmp
nop
aaa
inc
add
inc
add
inc
add
cmp
jecxz
inc
add
inc
inc
add
inc
inc
add
inc
add
cmp
je
xor
mov
jmp
mov
mov
mov
mov
mov
mov
sub
add
mov
mov
mov
mov
mov
mov
mov
call
jmp
mov
dec
mov
mov
xor
mov
shl
or
inc
add
cmp
jb
mov
and
mov
mov
and
mov
mov
shr
sub
jb
je
dec
je
dec
je
jmp
shr
sub
mov
and
mov
mov
shr
sub
mov
jmp
lea
push
push
lea
lea
lea
call
mov
push
push
mov
mov
mov
call
mov
cmp
jne
mov
mov
mov
mov
mov
mov
mov
sub
add
mov
mov
mov
mov
mov
mov
mov
call
jmp
shr
sub
mov
jmp
shr
sub
mov
jmp
shr
mov
sub
mov
mov
mov
mov
mov
mov
mov
mov
sub
add
mov
mov
mov
mov
mov
mov
mov
call
jmp
cmp
jae
cmp
je
xor
mov
jmp
mov
mov
mov
mov
mov
mov
sub
add
mov
mov
mov
mov
mov
mov
mov
call
jmp
mov
dec
mov
mov
xor
mov
shl
or
inc
add
cmp
jb
mov
mov
not
shr
and
and
cmp
je
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
add
mov
mov
mov
mov
mov
mov
mov
call
jmp
mov
mov
xor
mov
mov
test
je
mov
jmp
cmp
je
mov
jmp
xor
mov
jmp
cmp
jne
mov
mov
mov
mov
mov
mov
sub
add
mov
mov
mov
mov
mov
mov
mov
call
jmp
test
jne
mov
cmp
jne
mov
cmp
je
mov
mov
mov
cmp
jae
mov
sub
dec
jmp
mov
sub
test
jne
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
cmp
jae
mov
sub
dec
jmp
mov
sub
mov
cmp
jne
mov
cmp
je
mov
mov
mov
cmp
jae
mov
sub
dec
jmp
mov
sub
test
jne
mov
mov
mov
mov
mov
mov
sub
add
mov
mov
mov
mov
mov
mov
mov
call
jmp
xor
mov
mov
mov
mov
cmp
jbe
mov
mov
cmp
jae
mov
mov
push
mov
push
mov
push
call
add
mov
add
mov
sub
add
sub
mov
sub
jne
cmp
je
mov
jmp
xor
mov
jmp
cmp
jae
cmp
je
xor
mov
jmp
mov
mov
mov
mov
mov
mov
sub
add
mov
mov
mov
mov
mov
mov
mov
call
jmp
mov
dec
mov
mov
xor
mov
shl
or
inc
add
cmp
jb
mov
and
mov
mov
mov
and
cmp
ja
mov
shr
and
cmp
jbe
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
add
mov
mov
mov
mov
mov
mov
mov
call
jmp
mov
shr
and
add
add
mov
mov
mov
mov
call
mov
test
jne
mov
mov
mov
mov
mov
mov
mov
sub
add
mov
mov
mov
mov
mov
mov
mov
call
jmp
shr
sub
xor
mov
mov
jmp
cmp
jae
cmp
je
xor
mov
jmp
mov
mov
mov
mov
mov
mov
sub
add
mov
mov
mov
mov
mov
mov
mov
call
jmp
mov
dec
mov
mov
xor
mov
shl
or
inc
add
cmp
jb
mov
inc
mov
mov
mov
and
mov
shr
sub
mov
shr
add
cmp
ja
jmp
mov
inc
mov
mov
xor
mov
cmp
jb
mov
mov
push
push
lea
lea
mov
call
mov
cmp
je
mov
mov
cmp
jne
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
sub
add
mov
mov
mov
mov
mov
mov
mov
call
jmp
xor
mov
mov
jmp
mov
mov
cmp
jae
cmp
je
xor
mov
jmp
mov
mov
mov
mov
mov
mov
sub
add
mov
mov
mov
mov
mov
mov
mov
call
jmp
mov
dec
mov
mov
xor
mov
shl
or
inc
add
cmp
jb
mov
mov
and
shl
add
xor
mov
mov
mov
cmp
jae
mov
shr
sub
mov
inc
mov
mov
jmp
cmp
jne
mov
jmp
mov
sub
cmp
jne
mov
jmp
mov
mov
jmp
cmp
je
xor
mov
jmp
mov
mov
mov
mov
mov
mov
sub
add
mov
mov
mov
mov
mov
mov
mov
call
jmp
dec
mov
mov
mov
and
mov
shl
or
inc
add
mov
add
cmp
jb
mov
shr
mov
sub
and
sub
add
mov
shr
mov
mov
mov
mov
mov
shr
and
and
add
mov
add
add
cmp
jb
cmp
jne
cmp
jae
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
add
mov
mov
mov
mov
mov
mov
mov
call
jmp
cmp
jne
mov
mov
jmp
xor
mov
mov
mov
inc
dec
jne
mov
mov
mov
mov
mov
shr
and
and
add
add
cmp
ja
xor
mov
mov
mov
mov
lea
mov
push
lea
push
lea
push
lea
push
mov
push
push
mov
mov
shr
and
and
mov
inc
add
call
mov
cmp
je
cmp
jne
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
add
mov
mov
mov
mov
mov
mov
mov
call
jmp
mov
push
push
mov
mov
mov
call
mov
test
jne
mov
mov
mov
mov
mov
mov
mov
sub
add
mov
mov
mov
mov
mov
mov
mov
call
jmp
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
sub
add
mov
mov
mov
mov
mov
mov
mov
call
mov
dec
je
mov
mov
mov
call
jmp
xor
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmp
jae
mov
sub
dec
jmp
mov
sub
cmp
jne
xor
mov
jmp
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
cmp
jae
mov
sub
dec
jmp
mov
sub
mov
cmp
je
mov
mov
mov
mov
mov
mov
sub
add
mov
mov
mov
mov
mov
mov
mov
call
jmp
mov
mov
mov
mov
mov
mov
mov
mov
sub
add
mov
mov
mov
mov
mov
mov
mov
call
jmp
mov
mov
mov
mov
mov
mov
mov
sub
add
mov
mov
mov
mov
mov
mov
mov
call
jmp
mov
mov
mov
mov
mov
mov
mov
sub
add
mov
mov
mov
mov
mov
mov
mov
call
add
pop
pop
pop
pop
ret
nop
nop
push
push
mov
mov
xor
mov
mov
call
mov
mov
call
mov
mov
call
mov
mov
call
xor
pop
pop
ret
push
push
mov
mov
push
push
mov
push
call
add
mov
add
mov
mov
pop
pop
ret
nop
nop
cmp
sete
and
ret
mov
push
mov
add
push
push
mov
mov
mov
mov
mov
mov
mov
call
mov
test
je
xor
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
pop
pop
mov
pop
ret
push
push
push
push
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmp
jae
mov
sub
dec
jmp
mov
sub
mov
mov
mov
cmp
ja
jmp
pop
inc
inc
add
inc
inc
add
inc
add
dec
inc
add
inc
add
dec
inc
add
inc
add
dec
inc
add
dec
inc
add
add
add
and
and
or
adc
and
mov
mov
mov
mov
mov
sub
add
mov
mov
mov
mov
push
push
push
mov
mov
mov
xor
mov
mov
movzx
call
mov
mov
mov
mov
mov
mov
mov
mov
cmp
jae
mov
sub
dec
jmp
mov
sub
mov
cmp
je
cmp
jne
mov
jmp
mov
mov
mov
jmp
mov
xor
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmp
jae
cmp
je
xor
mov
jmp
mov
mov
mov
mov
mov
mov
sub
add
mov
mov
mov
mov
mov
call
jmp
dec
mov
mov
inc
and
add
shl
or
cmp
jb
mov
mov
mov
mov
and
shl
add
mov
mov
mov
mov
and
shr
mov
sub
xor
mov
mov
cmp
jne
mov
mov
mov
mov
mov
mov
jmp
test
je
mov
mov
and
mov
mov
mov
mov
mov
mov
mov
jmp
test
jne
mov
mov
mov
mov
mov
mov
shl
add
mov
jmp
test
je
mov
mov
jmp
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
add
mov
mov
mov
mov
mov
call
jmp
mov
mov
mov
cmp
jae
cmp
je
xor
mov
jmp
mov
mov
mov
mov
mov
mov
sub
add
mov
mov
mov
mov
mov
call
jmp
dec
mov
mov
inc
and
add
shl
or
cmp
jb
mov
mov
mov
and
add
mov
shr
mov
mov
sub
movzx
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmp
jae
cmp
je
xor
mov
jmp
mov
mov
mov
mov
mov
mov
mov
sub
add
mov
mov
mov
mov
call
jmp
dec
mov
mov
inc
and
add
shl
or
cmp
jb
mov
mov
mov
mov
and
shl
add
mov
mov
mov
mov
and
shr
mov
sub
xor
mov
mov
test
je
mov
mov
and
mov
mov
mov
mov
mov
mov
mov
jmp
test
jne
mov
mov
mov
mov
mov
mov
shl
add
mov
jmp
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
add
mov
mov
mov
mov
call
jmp
mov
mov
mov
cmp
jae
cmp
je
xor
mov
jmp
mov
mov
mov
mov
mov
mov
mov
sub
add
mov
mov
mov
mov
call
jmp
dec
mov
mov
inc
and
add
shl
or
cmp
jb
mov
mov
mov
and
add
mov
shr
mov
sub
mov
mov
mov
sub
mov
jmp
mov
sub
add
mov
cmp
ja
jmp
cmp
jne
cmp
jne
mov
cmp
je
mov
cmp
jae
mov
sub
dec
jmp
mov
sub
mov
cmp
jne
mov
mov
mov
mov
call
mov
mov
cmp
jae
mov
sub
dec
jmp
mov
sub
mov
cmp
jne
mov
cmp
je
mov
cmp
jae
mov
sub
dec
jmp
mov
sub
mov
cmp
jne
mov
mov
mov
mov
mov
mov
mov
sub
add
mov
mov
mov
mov
call
jmp
xor
mov
mov
mov
mov
inc
inc
dec
mov
cmp
jne
mov
mov
mov
dec
mov
cmp
jne
mov
xor
mov
jmp
cmp
jne
cmp
jne
mov
cmp
je
mov
cmp
jae
mov
sub
dec
jmp
mov
sub
mov
cmp
jne
mov
mov
mov
mov
call
mov
mov
cmp
jae
mov
sub
dec
jmp
mov
sub
mov
cmp
jne
mov
cmp
je
mov
cmp
jae
mov
sub
dec
jmp
mov
sub
mov
cmp
jne
mov
mov
mov
mov
mov
mov
mov
sub
add
mov
mov
mov
mov
call
jmp
xor
mov
mov
mov
mov
inc
dec
mov
xor
mov
jmp
cmp
jbe
sub
inc
dec
mov
mov
mov
mov
call
mov
mov
cmp
jae
mov
sub
dec
jmp
mov
sub
mov
cmp
je
mov
mov
mov
mov
mov
mov
sub
add
mov
mov
mov
mov
mov
call
jmp
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
add
mov
mov
mov
mov
mov
call
jmp
mov
mov
mov
mov
mov
mov
mov
mov
sub
add
mov
mov
mov
mov
call
jmp
mov
mov
mov
mov
mov
mov
mov
sub
add
mov
mov
mov
mov
mov
call
add
pop
pop
pop
pop
ret
nop
push
mov
mov
xchg
call
pop
ret
push
push
push
add
mov
mov
mov
mov
mov
mov
mov
cmp
ja
mov
jmp
mov
sub
mov
mov
cmp
jbe
mov
test
je
cmp
jne
xor
mov
mov
sub
mov
add
cmp
je
mov
mov
mov
call
mov
mov
mov
push
push
mov
push
call
add
mov
add
add
mov
cmp
jne
mov
cmp
mov
jne
mov
mov
mov
sub
mov
cmp
jbe
mov
test
je
cmp
jne
xor
mov
mov
sub
mov
add
cmp
je
mov
mov
mov
call
mov
mov
mov
push
push
mov
push
call
add
mov
add
add
mov
mov
mov
mov
mov
add
pop
pop
pop
ret
mov
push
mov
add
push
push
push
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmp
jbe
mov
mov
sub
dec
jmp
mov
mov
sub
mov
mov
mov
mov
mov
mov
cmp
jae
dec
mov
mov
inc
and
add
shl
or
cmp
jb
mov
and
shl
add
mov
xor
mov
mov
test
jne
mov
mov
mov
and
shr
mov
sub
mov
mov
mov
inc
dec
jmp
mov
mov
mov
and
shr
sub
test
je
and
mov
sub
mov
mov
mov
and
add
mov
shr
cmp
jae
dec
mov
inc
mov
mov
and
add
shl
or
cmp
jb
mov
and
shl
add
mov
movzx
mov
mov
mov
shr
mov
movzx
sub
test
je
and
cmp
jae
dec
mov
inc
mov
mov
and
add
shl
or
cmp
jb
mov
mov
mov
mov
and
add
mov
shr
sub
sub
mov
sub
mov
mov
mov
cmp
jbe
mov
mov
mov
sub
add
mov
mov
cmp
ja
mov
mov
sub
mov
cmp
jbe
sub
mov
mov
mov
mov
inc
inc
dec
jne
mov
mov
mov
mov
mov
mov
mov
inc
inc
dec
jne
jmp
mov
mov
dec
mov
mov
inc
inc
mov
mov
mov
mov
inc
inc
dec
mov
mov
mov
mov
inc
inc
dec
jne
jmp
mov
mov
dec
mov
mov
inc
inc
mov
mov
mov
mov
inc
inc
dec
mov
mov
mov
mov
inc
inc
dec
jne
jmp
test
jne
mov
mov
shl
add
mov
mov
and
shl
add
mov
movzx
mov
jmp
mov
mov
shr
mov
mov
mov
sub
cmp
jbe
mov
shr
jmp
mov
mov
add
sub
shl
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
add
mov
mov
mov
mov
mov
mov
jmp
test
jne
mov
mov
shl
add
mov
mov
and
shl
add
mov
xor
mov
mov
test
jne
mov
mov
mov
and
shr
mov
sub
mov
mov
mov
inc
dec
jmp
test
je
mov
mov
shr
mov
sub
cmp
jbe
mov
shr
jmp
mov
mov
add
sub
shl
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
add
mov
mov
mov
mov
mov
mov
jmp
mov
mov
mov
mov
shr
mov
sub
cmp
jbe
mov
shr
jmp
mov
mov
add
sub
shl
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
add
mov
mov
mov
mov
mov
mov
jmp
cmp
jb
cmp
jae
mov
mov
mov
shr
sub
cmp
jbe
mov
shr
jmp
mov
mov
add
sub
shl
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
add
mov
mov
mov
mov
mov
xor
pop
pop
pop
mov
pop
ret
mov
push
mov
xor
push
push
push
mov
inc
xor
pop
pop
pop
mov
push
ret
jmp
jmp
pop
ret
mov
sub
ret
push
mov
add
push
xor
mov
xor
push
push
push
mov
mov
mov
cmp
jne
xor
mov
pushf
pop
or
push
popf
pushf
pop
test
je
and
push
popf
pushf
pop
test
jne
inc
cmp
je
or
push
mov
cpuid
mov
mov
cpuid
mov
pop
test
je
or
lea
lea
mov
call
mov
mov
call
jne
push
mov
cpuid
mov
pop
test
je
or
test
je
or
test
je
or
test
je
or
test
je
or
mov
xor
pop
pop
pop
mov
push
lea
call
ret
jmp
jmp
mov
pop
mov
pop
ret
add
add
add
add
(bad)
(bad)
inc
add
inc
jne
push
push
mov
xor
push
push
push
mov
inc
xor
pop
pop
pop
mov
push
ret
jmp
jmp
pop
ret
mov
sub
ret
mov
inc
add
add
add
add
add
inc
add
push
inc
add
add
add
add
add
add
add
push
inc
add
add
add
add
fs
inc
add
push
inc
add
add
add
add
add
add
add
push
inc
add
add
add
add
fs
inc
add
add
add
add
add
fs
inc
add
add
push
inc
add
add
add
add
add
add
add
add
add
fs
inc
add
add
inc
add
add
add
add
add
add
movs
inc
add
(bad)
(bad)
inc
add
dec
dec
inc
push
add
add
(bad)
(bad)
(bad)
inc
add
dec
inc
dec
inc
add
add
(bad)
(bad)
(bad)
inc
add
dec
inc
inc
push
add
add
(bad)
(bad)
(bad)
inc
add
push
dec
push
inc
add
add
(bad)
(bad)
(bad)
inc
add
addr16
dec
inc
add
add
(bad)
(bad)
(bad)
inc
add
push
push
dec
push
add
add
(bad)
(bad)
(bad)
inc
add
je
pop
je
add
add
(bad)
(bad)
inc
add
je
dec
inc
add
add
push
push
push
mov
mov
mov
mov
mov
call
jne
mov
jmp
dec
sub
test
jne
xor
pop
pop
pop
ret
lea
push
mov
add
push
push
push
mov
lea
movs
movs
movs
movs
mov
mov
mov
mov
push
call
mov
push
mov
push
push
push
push
mov
push
call
push
push
call
mov
mov
cdq
xor
sub
mov
mov
cdq
xor
sub
mov
mov
sub
mov
mov
sub
mov
mov
push
call
mov
mov
push
call
mov
mov
push
call
mov
push
push
push
push
mov
push
call
mov
push
push
push
push
push
call
mov
push
push
mov
push
call
mov
mov
push
mov
push
call
mov
mov
push
mov
push
call
mov
mov
push
mov
push
call
mov
mov
push
push
call
mov
push
mov
push
mov
push
push
push
push
push
push
push
push
mov
push
call
mov
push
push
call
push
push
push
mov
push
push
push
push
push
mov
push
call
push
mov
push
mov
push
mov
push
push
push
push
push
mov
push
call
push
push
push
mov
push
push
push
push
push
mov
push
call
push
push
push
push
push
mov
push
mov
push
mov
push
push
push
push
call
push
mov
push
mov
push
push
push
push
push
push
push
push
mov
push
call
push
push
push
mov
push
push
push
mov
push
mov
push
mov
push
call
mov
push
mov
push
call
push
call
mov
push
mov
push
call
push
call
mov
push
mov
push
call
push
call
mov
push
push
call
push
call
mov
push
call
mov
push
call
mov
push
call
push
call
pop
pop
pop
mov
pop
ret
push
push
xor
mov
mov
mov
mov
and
test
je
shr
xor
jmp
shr
dec
jne
mov
inc
add
cmp
jne
mov
pop
pop
ret
nop
push
push
push
mov
mov
mov
cmp
jne
call
mov
dec
test
jl
inc
xor
xor
mov
xor
and
mov
shr
xor
mov
inc
dec
jne
mov
pop
pop
pop
ret
mov
push
push
push
push
push
mov
mov
xor
mov
mov
and
sub
cdq
xor
sub
mov
xor
mov
sub
cdq
xor
sub
mov
xor
mov
xor
mov
add
mov
add
sub
cdq
xor
sub
cmp
jl
cmp
jl
mov
jmp
cmp
jl
mov
jmp
mov
pop
pop
pop
pop
pop
ret
bswap
ret
nop
and
cmp
ja
jmp
jb
inc
add
pop
inc
add
pop
inc
add
pop
inc
add
mov
imul
add
test
jns
add
sar
mov
ret
xor
mov
imul
lea
test
jns
add
sar
ret
xor
mov
imul
mov
add
test
jns
add
sar
ret
xor
mov
imul
mov
shl
test
jns
add
sar
ret
xor
ret
mov
mov
add
inc
call
ret
lea
mov
mov
mov
call
ret
lea
push
push
mov
mov
mov
xor
call
mov
mov
pop
pop
ret
lea
push
push
call
je
mov
mov
mov
xor
call
mov
call
mov
xor
mov
mov
mov
pop
pop
ret
push
mov
lea
call
mov
call
mov
call
mov
pop
ret
mov
push
push
add
mov
mov
mov
call
mov
mov
mov
mov
call
mov
call
lea
mov
call
lea
mov
mov
call
mov
test
jbe
mov
mov
mov
call
lea
mov
or
call
mov
mov
mov
mov
call
xor
call
mov
lea
mov
mov
call
mov
add
pop
pop
ret
nop
push
mov
add
push
push
push
mov
mov
mov
mov
mov
mov
call
test
jle
mov
mov
mov
call
lea
mov
mov
call
mov
call
mov
lea
mov
or
call
mov
mov
mov
mov
call
xor
mov
cmp
sete
test
jne
mov
cmp
je
mov
mov
jmp
mov
pop
pop
pop
pop
pop
pop
ret
push
mov
push
push
push
mov
mov
mov
push
mov
mov
call
mov
test
je
cmp
jne
mov
mov
mov
mov
mov
add
mov
mov
mov
add
mov
mov
mov
add
mov
mov
mov
add
mov
mov
mov
add
mov
mov
mov
pop
pop
pop
pop
ret
push
push
mov
mov
mov
mov
call
mov
mov
mov
mov
add
mov
mov
mov
add
mov
mov
mov
add
mov
mov
mov
add
mov
mov
mov
add
mov
mov
mov
mov
call
pop
pop
ret
nop
push
mov
add
push
push
mov
mov
mov
push
mov
mov
call
mov
cmp
je
cmp
jl
mov
mov
lea
mov
call
mov
call
mov
sub
dec
lea
call
mov
call
push
mov
call
add
inc
push
lea
call
pop
pop
call
mov
pop
pop
pop
pop
pop
ret
lea
push
push
push
mov
mov
mov
call
mov
inc
mov
call
add
mov
mov
call
mov
xor
mov
call
cmp
je
mov
call
push
lea
call
mov
mov
pop
call
cmp
je
mov
call
push
lea
call
push
mov
call
add
inc
pop
pop
call
mov
mov
call
pop
pop
pop
ret
push
call
je
mov
mov
xor
call
xor
mov
xor
mov
mov
pop
ret
lea
push
mov
mov
call
mov
call
mov
pop
ret
lea
push
mov
mov
test
je
push
call
mov
test
je
push
call
mov
test
je
call
xor
mov
xor
mov
xor
mov
xor
mov
pop
ret
push
mov
add
push
push
push
mov
mov
mov
mov
push
mov
mov
mov
mov
call
mov
test
je
mov
cmp
jae
xor
mov
mov
jmp
mov
push
lea
mov
movs
movs
movs
movs
pop
mov
call
mov
mov
call
mov
cmp
jg
cmp
jle
xor
mov
mov
jmp
cmp
je
xor
mov
mov
jmp
mov
test
je
cmp
je
xor
mov
mov
jmp
mov
mov
mov
mov
call
mov
pop
pop
pop
pop
pop
pop
ret
push
push
push
push
mov
mov
cmp
jne
mov
mov
mov
call
mov
push
mov
lea
movs
movs
movs
movs
pop
mov
call
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
call
pop
pop
pop
pop
ret
nop
push
mov
push
push
push
push
mov
mov
mov
mov
mov
mov
lea
xor
mov
call
mov
mov
mov
mov
mov
mov
cmp
je
mov
call
mov
mov
call
mov
mov
mov
xor
mov
pop
pop
pop
pop
pop
ret
nop
push
mov
push
push
push
mov
mov
lea
xor
mov
call
mov
call
mov
sub
jb
dec
je
dec
sub
jb
dec
je
jmp
mov
xor
mov
cmp
ja
mov
jmp
add
add
add
add
add
add
add
add
add
inc
add
pusha
inc
add
inc
add
inc
add
inc
add
mov
call
pop
jmp
push
mov
mov
call
pop
jmp
push
mov
mov
call
pop
jmp
push
xor
mov
call
pop
mov
call
movzx
imul
add
and
test
jns
add
sar
mov
mov
cmp
jne
mov
cmp
je
cmp
jne
mov
call
mov
mov
call
imul
mov
call
mov
push
call
mov
mov
push
push
lea
push
push
lea
push
push
call
mov
mov
call
mov
imul
mov
call
pop
pop
pop
pop
ret
nop
push
push
mov
mov
mov
cmp
ja
lea
mov
mov
call
mov
mov
call
pop
pop
ret
lea
push
mov
add
push
push
push
mov
mov
mov
mov
push
mov
mov
mov
mov
call
mov
cmp
je
mov
cmp
jle
mov
mov
mov
jmp
lea
mov
mov
call
lea
mov
mov
call
mov
call
mov
sub
jb
dec
je
dec
je
jmp
mov
jmp
xor
mov
dec
test
jl
inc
xor
cmp
je
inc
inc
dec
jne
dec
sete
mov
mov
pop
pop
pop
mov
pop
ret
push
push
mov
mov
mov
xor
mov
call
mov
call
mov
mov
mov
mov
mov
call
pop
pop
ret
xor
xor
xor
add
push
mov
push
push
push
push
mov
mov
mov
mov
mov
xor
mov
call
mov
call
mov
mov
mov
mov
mov
push
mov
xor
mov
mov
call
pop
pop
pop
pop
pop
ret
xor
xor
xor
add
push
mov
mov
call
mov
call
pop
ret
push
mov
mov
call
mov
call
pop
ret
push
push
push
push
push
mov
mov
call
mov
mov
test
je
cmp
jne
mov
mov
shl
mov
movzx
dec
test
jl
inc
xor
lea
movzx
dec
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
inc
dec
jne
pop
pop
pop
pop
pop
ret
push
mov
add
push
push
push
xor
mov
mov
mov
mov
mov
xor
push
push
push
mov
mov
mov
mov
mov
jmp
mov
call
cmp
jne
cmp
jle
cmp
jne
lea
mov
mov
call
mov
cmp
je
mov
call
mov
mov
xor
cmp
je
mov
mov
mov
jmp
mov
mov
mov
call
lea
mov
mov
call
lea
lea
mov
call
mov
mov
call
je
mov
mov
mov
jmp
lea
mov
or
call
mov
mov
mov
call
push
mov
call
pop
add
mov
cmp
jne
mov
call
add
cmp
jbe
mov
call
mov
sub
mov
mov
call
mov
jmp
mov
mov
mov
call
mov
mov
mov
mov
mov
call
mov
mov
cmp
jne
mov
sub
mov
jmp
mov
mov
mov
xor
call
mov
cmp
jge
mov
mov
mov
jmp
cmp
jg
mov
mov
xor
pop
pop
pop
mov
push
lea
call
ret
jmp
jmp
mov
pop
pop
pop
mov
pop
ret
add
(bad)
(bad)
inc
add
dec
inc
inc
push
add
add
push
mov
add
push
push
mov
mov
mov
and
mov
shr
lea
add
mov
mov
mov
shr
lea
sub
mov
mov
and
mov
shr
mov
mov
sub
mov
mov
add
mov
push
push
push
mov
mov
mov
mov
xor
lods
mov
bswap
lods
mov
lods
mov
xchg
stos
shr
stos
add
sub
jg
pop
pop
pop
pop
pop
mov
pop
ret
push
mov
add
push
push
mov
mov
mov
and
mov
shr
lea
add
mov
mov
mov
shr
lea
sub
mov
mov
and
mov
shr
mov
mov
sub
mov
mov
add
mov
push
push
push
mov
mov
mov
mov
xor
lods
mov
inc
bswap
lods
mov
inc
lods
mov
inc
xchg
stos
shr
stos
add
sub
jg
pop
pop
pop
pop
pop
mov
pop
ret
nop
push
mov
add
push
push
push
mov
mov
mov
mov
mov
xor
mov
mov
shr
mov
mov
mov
shr
mov
mov
call
movzx
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
shl
shr
add
mov
mov
mov
movzx
shr
and
mov
mov
shl
and
mov
sub
shl
mov
or
add
sub
test
jge
inc
mov
cmp
jl
pop
pop
pop
mov
pop
ret
lea
push
mov
add
push
push
push
mov
mov
mov
mov
xor
mov
mov
shr
mov
mov
mov
shr
mov
mov
mov
shr
add
mov
mov
xor
mov
shr
and
mov
shl
and
jns
dec
or
inc
push
mov
pop
sub
shl
mov
or
add
sub
test
jge
inc
mov
cmp
jl
pop
pop
pop
mov
pop
ret
mov
push
mov
add
push
push
push
mov
mov
mov
mov
xor
mov
mov
shr
mov
mov
mov
shr
mov
mov
mov
sar
jns
adc
add
mov
mov
xor
mov
shr
shl
and
mov
shl
and
jns
dec
or
inc
push
mov
pop
sub
shl
mov
or
add
sub
test
jge
inc
mov
cmp
jl
pop
pop
pop
mov
pop
ret
mov
push
mov
push
push
push
mov
mov
xor
mov
mov
shr
mov
add
mov
mov
and
mov
shr
mov
mov
mov
add
add
add
cmp
jl
pop
pop
pop
pop
ret
lea
push
mov
add
push
push
push
mov
mov
mov
and
mov
shr
lea
add
mov
mov
add
mov
mov
mov
and
mov
shr
lea
sub
mov
mov
mov
and
mov
shr
mov
mov
and
mov
shr
mov
mov
mov
add
mov
mov
mov
mov
add
movzx
mov
mov
mov
mov
inc
inc
movzx
mov
mov
mov
mov
inc
xor
mov
mov
mov
mov
mov
add
mov
add
mov
add
add
cmp
jl
pop
pop
pop
mov
pop
ret
lea
push
mov
add
push
push
push
mov
mov
mov
and
mov
shr
lea
add
mov
mov
add
mov
mov
mov
and
mov
shr
lea
sub
mov
mov
mov
and
mov
shr
mov
mov
and
mov
shr
mov
mov
mov
add
mov
mov
mov
mov
add
movzx
mov
mov
mov
mov
inc
add
movzx
mov
mov
mov
mov
inc
xor
mov
mov
mov
mov
mov
add
mov
add
mov
add
add
cmp
jl
pop
pop
pop
mov
pop
ret
nop
push
mov
add
push
push
push
mov
mov
mov
xor
mov
mov
shr
mov
add
mov
mov
add
mov
mov
mov
shr
mov
movzx
mov
shr
mov
mov
movzx
mov
shr
mov
mov
mov
mov
mov
inc
mov
mov
mov
mov
inc
add
mov
add
add
cmp
jl
pop
pop
pop
mov
pop
ret
nop
push
mov
add
push
push
push
mov
mov
mov
xor
mov
mov
shr
mov
add
mov
mov
add
mov
mov
mov
shr
mov
movzx
mov
shr
mov
mov
movzx
mov
shr
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
add
add
mov
add
add
cmp
jl
pop
pop
pop
mov
pop
ret
nop
push
mov
add
push
push
push
mov
mov
xor
mov
mov
mov
call
movzx
cmp
ja
jmp
hlt
imul
ins
inc
add
inc
add
ins
inc
add
add
(bad)
dec
add
je
sub
je
jmp
mov
mov
jmp
mov
mov
jmp
mov
call
movzx
cmp
ja
mov
jmp
add
add
add
add
add
add
add
add
add
ins
inc
add
ins
inc
add
inc
add
inc
add
loopne
inc
add
nop
add
add
(bad)
inc
add
jne
mov
mov
jmp
mov
mov
jmp
mov
mov
jmp
mov
call
mov
sub
je
sub
je
jmp
mov
mov
jmp
mov
mov
jmp
mov
call
mov
sub
je
sub
je
jmp
mov
mov
jmp
mov
mov
mov
mov
dec
je
dec
je
dec
je
jmp
mov
jmp
mov
jmp
mov
jmp
xor
mov
mov
movzx
mov
test
jb
inc
mov
mov
mov
mov
mov
mov
mov
cmp
je
xor
mov
imul
mov
movzx
mov
inc
mov
cdq
idiv
mov
mov
movzx
mov
push
mov
push
mov
xor
mov
mov
mov
call
test
je
mov
call
mov
sub
mov
add
dec
mov
mov
cdq
idiv
mov
mov
call
mov
push
mov
call
mov
mov
pop
call
mov
mov
xor
and
mov
mov
call
mov
mov
mov
mov
mov
shr
mov
mov
cmp
jne
mov
call
mov
mov
dec
sub
imul
mov
call
add
mov
mov
call
mov
mov
imul
add
mov
cmp
jbe
jmp
mov
cmp
je
mov
movzx
cmp
jle
xor
mov
imul
mov
fild
mov
movzx
mov
inc
mov
fild
fdivrp
imul
mov
fild
fild
fdivrp
mov
movzx
mov
inc
mov
fild
fdivrp
faddp
call
mov
jmp
imul
mov
dec
mov
cdq
idiv
mov
mov
movzx
mov
push
mov
push
mov
xor
mov
mov
mov
call
test
je
mov
inc
push
lea
push
mov
push
xor
mov
mov
mov
mov
call
test
je
mov
call
mov
cmp
jle
mov
cmp
je
mov
call
mov
mov
call
mov
mov
lea
push
lea
push
lea
push
lea
push
lea
push
mov
mov
mov
mov
call
cmp
jne
mov
push
mov
push
xor
mov
mov
lea
mov
mov
call
mov
cmp
je
mov
call
neg
mov
mov
call
mov
mov
lea
push
lea
push
lea
push
lea
push
lea
push
mov
mov
mov
mov
call
cmp
jne
mov
xor
mov
mov
add
mov
mov
shr
add
mov
call
mov
mov
mov
shr
imul
sub
mov
mov
shr
imul
add
mov
call
cmp
jg
inc
add
add
add
add
dec
jne
pop
pop
pop
mov
pop
ret
push
mov
add
mov
mov
mov
mov
mov
mov
shl
sub
mov
push
push
push
mov
mov
mov
mov
lods
bswap
add
shr
stos
shr
stos
loop
pop
pop
pop
mov
pop
ret
mov
push
mov
add
mov
mov
mov
mov
mov
add
mov
mov
mov
shl
sub
mov
push
push
push
push
mov
mov
mov
mov
mov
xor
lods
mov
inc
bswap
lods
mov
inc
lods
mov
add
xchg
stos
shr
stos
xchg
loop
pop
pop
pop
pop
mov
pop
ret
mov
push
mov
add
push
mov
mov
mov
cmp
jne
mov
mov
mov
call
jmp
mov
call
movzx
shr
imul
mov
mov
mov
shl
dec
mov
push
push
push
mov
mov
mov
mov
movs
add
loop
pop
pop
pop
pop
mov
pop
ret
push
mov
push
push
push
mov
mov
mov
mov
test
jle
mov
xor
mov
shr
and
and
or
mov
inc
mov
mov
shl
and
shl
and
or
mov
inc
mov
mov
mov
shl
add
dec
jne
pop
pop
pop
pop
ret
lea
push
push
mov
xor
mov
mov
shr
and
mov
shr
and
or
mov
mov
and
shl
and
or
shl
or
mov
inc
add
cmp
jne
pop
pop
ret
mov
push
mov
add
push
mov
mov
mov
cmp
jne
call
mov
mov
mov
mov
shl
dec
mov
push
push
push
push
mov
mov
mov
lea
mov
xor
lods
mov
stos
add
loop
pop
pop
pop
pop
pop
mov
pop
ret
nop
push
mov
add
mov
mov
mov
mov
mov
mov
shl
dec
mov
push
push
push
mov
mov
mov
mov
movs
add
loop
pop
pop
pop
mov
pop
ret
lea
push
mov
add
push
mov
mov
mov
cmp
jne
call
mov
mov
mov
add
mov
mov
mov
shl
sub
mov
push
push
push
push
mov
mov
mov
shl
mov
mov
mov
xor
lods
mov
bswap
lods
mov
lods
mov
mov
stos
shr
stos
lods
mov
inc
movzx
add
sub
mov
shr
jne
pop
pop
pop
pop
pop
mov
pop
ret
nop
push
mov
add
push
mov
mov
mov
cmp
jne
call
mov
mov
mov
add
mov
mov
mov
shl
inc
mov
push
push
push
push
mov
mov
mov
shl
lea
mov
mov
xor
lods
mov
inc
bswap
lods
mov
inc
lods
mov
inc
mov
stos
shr
stos
lods
mov
inc
movzx
add
sub
mov
shr
jne
pop
pop
pop
pop
pop
mov
pop
ret
push
mov
add
mov
mov
mov
mov
mov
mov
shl
dec
mov
push
push
push
push
mov
mov
mov
mov
mov
lods
stos
mov
add
inc
loop
pop
pop
pop
pop
mov
pop
ret
nop
push
mov
add
mov
mov
mov
mov
mov
mov
shl
sub
mov
push
push
push
push
mov
mov
mov
mov
mov
lods
stos
shr
mov
add
inc
loop
pop
pop
pop
pop
mov
pop
ret
nop
push
mov
add
push
push
push
mov
mov
xor
mov
mov
mov
call
movzx
cmp
ja
jmp
sbb
add
jne
add
je
add
jne
add
jne
add
jne
add
ret
call
mov
sub
je
sub
je
jmp
mov
mov
jmp
mov
mov
jmp
mov
call
movzx
cmp
ja
mov
jmp
add
add
add
add
add
add
add
add
add
jne
add
inc
add
add
in
inc
loopne
jno
add
nop
add
add
(bad)
inc
add
jne
mov
mov
jmp
mov
mov
jmp
mov
mov
jmp
mov
call
mov
sub
je
sub
je
jmp
mov
mov
jmp
mov
mov
jmp
mov
call
mov
sub
je
sub
je
jmp
mov
mov
jmp
mov
mov
mov
mov
dec
je
dec
je
dec
je
jmp
mov
jmp
mov
jmp
mov
jmp
xor
mov
mov
cmp
jne
mov
call
mov
mov
dec
imul
mov
call
add
mov
mov
call
mov
mov
xor
mov
mov
call
mov
dec
test
jl
inc
mov
mov
cmp
je
push
mov
call
mov
dec
mov
call
push
imul
pop
mov
cdq
idiv
push
mov
mov
xor
mov
call
test
je
mov
inc
push
lea
push
mov
push
xor
mov
mov
mov
mov
call
test
je
mov
call
mov
mov
shl
dec
and
jne
mov
cmp
jle
mov
cmp
je
mov
call
mov
mov
call
mov
mov
lea
push
lea
push
lea
push
lea
push
lea
push
mov
mov
mov
mov
mov
call
cmp
jne
mov
push
xor
mov
mov
lea
mov
mov
call
mov
cmp
je
mov
call
neg
mov
mov
call
mov
mov
lea
push
lea
push
lea
push
lea
push
lea
push
mov
mov
mov
mov
mov
call
cmp
jne
inc
mov
call
mov
sub
mov
add
mov
xor
mov
inc
dec
jne
pop
pop
pop
mov
pop
ret
lea
push
mov
add
push
mov
xor
mov
mov
mov
dec
je
dec
je
dec
je
dec
je
jmp
mov
lea
mov
mov
neg
mov
mov
inc
mov
sub
jb
inc
xchg
mov
mov
mov
mov
mov
add
inc
inc
dec
jne
jmp
cmp
je
xor
xor
mov
mov
mov
xor
mov
mov
mov
mov
add
shr
mov
mov
mov
sub
mov
movq
psrlq
psllq
jmp
movq
movq
paddb
movq
add
loop
emms
jmp
xor
mov
mov
inc
mov
mov
xor
and
mov
inc
mov
mov
test
jbe
mov
mov
mov
mov
add
and
mov
mov
inc
inc
inc
dec
jne
jmp
xor
mov
mov
inc
mov
mov
xor
and
mov
inc
mov
mov
dec
test
jb
inc
mov
mov
movzx
shr
mov
add
inc
inc
inc
dec
jne
mov
neg
mov
mov
mov
dec
sub
jb
inc
xchg
mov
mov
mov
movzx
mov
movzx
add
shr
mov
add
inc
inc
inc
dec
jne
jmp
mov
mov
mov
mov
xor
mov
mov
inc
mov
mov
xor
and
mov
inc
mov
mov
sub
mov
push
push
push
mov
mov
mov
jecxz
lods
add
stos
loop
push
mov
neg
mov
nop
nop
nop
mov
xor
mov
lods
push
push
mov
shl
mov
mov
movzx
neg
movzx
add
lea
add
cdq
xor
sub
xchg
cdq
xor
sub
xchg
movzx
add
cdq
xor
sub
cmp
ja
cmp
mov
jbe
mov
cmp
jbe
mov
shr
pop
pop
add
inc
dec
jne
pop
pop
pop
pop
pop
mov
pop
ret
push
mov
add
push
push
push
mov
mov
mov
mov
mov
mov
call
mov
mov
cmp
je
mov
call
mov
mov
mov
mov
mov
mov
mov
cmp
je
mov
call
mov
mov
call
mov
lea
mov
or
call
mov
lea
lea
mov
call
lea
mov
call
mov
call
add
mov
mov
add
call
mov
mov
add
call
mov
mov
inc
mov
call
mov
mov
mov
sub
jb
je
jmp
push
lea
push
lea
mov
mov
call
jmp
push
lea
push
lea
mov
mov
call
lea
call
mov
call
mov
call
lea
mov
mov
call
mov
cmp
je
xor
mov
call
mov
mov
cmp
sete
test
jne
mov
mov
jmp
mov
pop
pop
pop
mov
pop
ret
lea
push
push
push
add
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
lea
lea
mov
call
mov
call
mov
mov
mov
mov
call
mov
call
mov
mov
mov
mov
call
mov
test
je
mov
call
mov
mov
test
je
mov
call
mov
mov
test
je
mov
call
mov
mov
test
je
mov
call
mov
lea
push
mov
mov
mov
mov
call
mov
mov
sub
jb
je
jmp
lea
mov
mov
call
jmp
lea
mov
mov
call
lea
call
mov
call
mov
call
mov
test
je
mov
call
mov
test
je
mov
call
mov
test
je
mov
call
mov
test
je
mov
call
mov
add
pop
pop
pop
ret
nop
push
push
push
add
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
call
mov
mov
or
call
mov
mov
mov
mov
call
mov
mov
mov
call
xor
call
mov
lea
mov
mov
call
pop
pop
pop
pop
pop
ret
lea
push
mov
push
mov
mov
mov
mov
jmp
mov
xor
call
cmp
jne
mov
mov
mov
call
mov
mov
mov
cmp
jg
pop
pop
ret
nop
push
mov
xor
mov
xor
mov
jmp
mov
sub
mov
mov
call
mov
mov
mov
mov
mov
call
dec
jne
mov
cmp
jge
mov
sub
mov
mov
call
pop
ret
nop
push
mov
push
push
push
mov
test
jle
mov
add
movzx
mov
mov
mov
inc
mov
inc
movzx
mov
mov
mov
inc
xor
mov
mov
mov
mov
inc
add
dec
jne
pop
pop
pop
pop
ret
nop
push
mov
push
push
push
mov
test
jle
mov
add
movzx
mov
movzx
mov
add
mov
inc
movzx
mov
movzx
mov
add
movzx
mov
movzx
mov
add
add
dec
jne
pop
pop
pop
pop
ret
mov
push
mov
mov
xchg
call
pop
ret
push
mov
push
mov
test
jle
xor
mov
mov
add
inc
dec
jne
pop
pop
ret
mov
push
mov
push
push
push
mov
test
jle
mov
add
movzx
mov
mov
mov
inc
mov
inc
movzx
mov
mov
mov
inc
xor
mov
mov
mov
mov
inc
mov
mov
mov
inc
add
inc
dec
jne
pop
pop
pop
pop
ret
mov
push
mov
push
push
push
mov
test
jle
mov
add
movzx
mov
movzx
mov
add
mov
inc
movzx
mov
movzx
mov
add
movzx
mov
movzx
mov
add
mov
movzx
mov
add
add
inc
dec
jne
pop
pop
pop
pop
ret
lea
push
mov
push
push
mov
mov
test
jle
mov
mov
inc
mov
mov
inc
inc
inc
dec
jne
pop
pop
pop
ret
push
mov
push
push
mov
mov
test
jle
movzx
mov
add
movzx
mov
add
inc
inc
dec
jne
pop
pop
pop
ret
push
push
push
push
add
mov
mov
xor
mov
mov
mov
call
movzx
cmp
ja
jmp
adc
inc
add
add
add
mov
inc
add
inc
add
(bad)
dec
add
je
sub
je
jmp
mov
mov
jmp
mov
mov
jmp
mov
call
mov
dec
je
sub
je
sub
je
sub
je
jmp
mov
mov
jmp
mov
mov
jmp
mov
call
mov
sub
je
sub
je
jmp
mov
mov
jmp
mov
mov
jmp
mov
call
mov
sub
je
sub
je
jmp
mov
mov
jmp
mov
mov
mov
mov
cmp
je
lea
push
lea
push
lea
push
lea
push
lea
push
mov
mov
xor
mov
call
jmp
mov
mov
mov
mov
mov
call
mov
mov
dec
imul
mov
call
add
mov
mov
call
mov
mov
cmp
jne
mov
dec
test
jl
inc
mov
mov
push
mov
mov
mov
call
mov
call
mov
push
lea
mov
mov
call
mov
push
xor
mov
mov
mov
mov
call
mov
dec
cmp
jle
mov
cmp
je
lea
push
lea
push
lea
push
lea
push
lea
push
mov
mov
inc
mov
mov
call
cmp
jne
jmp
mov
call
mov
sub
mov
add
inc
dec
jne
mov
mov
call
add
pop
pop
pop
pop
ret
push
mov
push
push
push
push
mov
mov
xor
mov
mov
lea
add
mov
mov
add
movzx
mov
mov
mov
inc
mov
inc
movzx
mov
mov
mov
inc
mov
movzx
mov
mov
mov
inc
xor
mov
mov
lea
add
add
cmp
jl
pop
pop
pop
pop
pop
ret
mov
push
mov
push
push
push
push
mov
mov
xor
mov
mov
lea
add
mov
mov
add
movzx
mov
movzx
mov
add
mov
inc
movzx
mov
movzx
mov
add
mov
movzx
mov
movzx
mov
add
xor
mov
mov
lea
add
add
cmp
jl
pop
pop
pop
pop
pop
ret
mov
push
mov
add
push
push
push
mov
mov
mov
mov
mov
mov
xor
call
xor
mov
mov
mov
call
lea
movzx
mov
movzx
imul
test
jns
add
sar
add
mov
mov
call
movzx
mov
movzx
imul
and
jns
dec
or
inc
sub
mov
movzx
shr
movzx
and
mov
shl
mov
or
xor
mov
add
movzx
sub
test
jge
inc
mov
cmp
jl
pop
pop
pop
mov
pop
ret
mov
push
mov
push
push
push
mov
mov
xor
mov
mov
mov
add
mov
mov
movzx
mov
add
mov
and
mov
add
add
cmp
jl
pop
pop
pop
pop
ret
nop
push
mov
push
push
push
push
mov
mov
xor
mov
mov
lea
add
mov
mov
add
mov
mov
add
movzx
mov
mov
mov
inc
mov
inc
movzx
mov
mov
mov
inc
mov
movzx
mov
mov
mov
inc
mov
mov
mov
inc
xor
mov
mov
lea
add
add
add
cmp
jl
pop
pop
pop
pop
pop
ret
lea
push
mov
add
push
push
mov
mov
mov
xor
mov
mov
lea
add
mov
mov
add
mov
mov
add
movzx
mov
add
mov
inc
movzx
mov
add
mov
movzx
mov
add
mov
movzx
mov
add
xor
mov
mov
lea
add
add
add
mov
cmp
jl
pop
pop
pop
pop
pop
ret
nop
push
mov
push
push
push
mov
mov
xor
mov
mov
mov
add
mov
mov
add
mov
mov
mov
mov
inc
mov
mov
mov
inc
xor
mov
mov
add
add
add
cmp
jl
pop
pop
pop
pop
ret
mov
push
mov
add
push
push
mov
mov
mov
xor
mov
mov
mov
add
mov
mov
add
mov
mov
movzx
mov
add
mov
movzx
mov
add
xor
mov
mov
add
add
add
mov
cmp
jl
pop
pop
pop
pop
pop
ret
nop
push
push
push
push
add
mov
mov
xor
mov
mov
mov
call
movzx
cmp
ja
jmp
pushf
xchg
mov
pusha
xchg
pushf
xchg
or
mov
fiadd
call
mov
sub
je
sub
je
jmp
mov
mov
jmp
mov
mov
jmp
mov
call
mov
dec
je
sub
je
sub
je
sub
je
jmp
mov
mov
jmp
mov
mov
jmp
mov
call
mov
sub
je
sub
je
jmp
mov
mov
jmp
mov
mov
jmp
mov
call
mov
sub
je
sub
je
jmp
mov
mov
jmp
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
mov
mov
add
dec
cdq
idiv
mov
mov
call
mov
push
mov
call
mov
mov
pop
call
mov
mov
mov
mov
call
mov
mov
mov
mov
cmp
je
lea
push
lea
push
lea
push
lea
push
lea
push
mov
mov
mov
mov
call
jmp
mov
mov
mov
mov
mov
call
mov
mov
dec
sub
imul
mov
call
add
mov
mov
call
mov
mov
imul
add
mov
cmp
jbe
cmp
jne
jmp
mov
push
mov
push
mov
mov
mov
call
mov
call
mov
push
lea
mov
mov
call
mov
push
xor
mov
mov
mov
mov
call
add
cmp
jge
lea
push
lea
push
lea
push
lea
push
lea
push
mov
mov
mov
mov
call
cmp
jne
jmp
mov
call
mov
imul
sub
mov
imul
add
cmp
jl
inc
add
add
add
add
cmp
jne
mov
mov
call
add
pop
pop
pop
pop
ret
nop
push
push
push
push
add
mov
mov
test
je
mov
dec
test
jb
inc
xor
mov
cmp
jb
mov
sub
mov
mov
jmp
xor
mov
mov
sub
mov
mov
inc
dec
jne
mov
test
je
mov
dec
test
jb
inc
xor
mov
mov
mov
sub
mov
mov
inc
dec
jne
mov
test
je
mov
dec
test
jb
inc
xor
mov
cmp
jb
mov
sub
mov
mov
jmp
xor
mov
mov
mov
xor
mov
xor
mov
add
shr
mov
mov
sub
mov
mov
inc
dec
jne
mov
test
je
xor
mov
mov
dec
test
jb
inc
xor
mov
cmp
jb
mov
sub
mov
mov
mov
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
mov
mov
sub
mov
mov
inc
dec
jne
mov
mov
mov
call
mov
mov
cmp
je
mov
mov
cmp
jne
mov
jmp
xor
mov
mov
xor
lea
mov
mov
cmp
ja
and
bt
jae
xor
mov
mov
lea
mov
call
mov
mov
cmp
jne
mov
mov
jmp
mov
dec
sub
jb
inc
mov
mov
mov
mov
mov
mov
cmp
je
mov
mov
mov
mov
mov
cmp
jne
inc
inc
dec
jne
mov
cmp
jbe
mov
mov
mov
mov
inc
add
cmp
jne
mov
add
pop
pop
pop
pop
ret
add
add
add
add
add
push
mov
mov
xor
mov
cmp
jl
mov
mov
mov
mov
jmp
mov
call
xor
mov
mov
mov
mov
pop
pop
pop
ret
mov
push
mov
add
push
push
push
mov
mov
mov
mov
push
mov
mov
mov
mov
call
mov
cmp
je
mov
mov
mov
cdq
idiv
test
jne
mov
mov
cdq
idiv
cmp
jle
mov
mov
mov
jmp
mov
mov
cdq
idiv
mov
mov
mov
mov
dec
test
jl
inc
xor
mov
call
lea
mov
movzx
mov
mov
mov
mov
movzx
mov
mov
mov
mov
movzx
mov
mov
mov
mov
add
inc
dec
jne
mov
pop
pop
pop
mov
pop
ret
lea
push
push
push
push
add
mov
mov
mov
lea
mov
call
mov
mov
mov
call
mov
dec
test
jl
inc
xor
lea
xor
mov
mov
mov
mov
mov
inc
xor
mov
mov
mov
mov
mov
inc
movzx
mov
mov
mov
mov
inc
inc
dec
jne
mov
mov
call
pop
pop
pop
pop
pop
pop
ret
mov
push
call
je
mov
mov
xor
call
mov
mov
call
mov
pop
ret
nop
push
mov
cmp
je
mov
mov
call
mov
pop
ret
mov
mov
call
pop
ret
push
mov
add
fld
fcomp
fnstsw
sahf
jne
xor
mov
mov
mov
jmp
fld
fcomp
fnstsw
sahf
je
fld
fcomp
fnstsw
sahf
jne
xor
mov
mov
mov
jmp
fld
fldln2
fxch
fyl2x
fld
fmulp
call
fstp
fld
mov
pop
ret
add
add
add
push
mov
add
push
push
push
mov
mov
mov
push
mov
mov
mov
call
mov
cmp
je
mov
mov
call
mov
test
je
mov
xor
mov
fild
fdiv
add
fstp
fwait
mov
xor
mov
fild
fdiv
fld
fmulp
fdivr
add
fstp
fwait
call
fmul
call
mov
mov
fild
fdiv
add
fstp
fwait
mov
xor
mov
fild
fdiv
fld
fmulp
fdivr
add
fstp
fwait
call
fmul
call
mov
inc
cmp
jne
mov
pop
pop
pop
mov
pop
ret
add
add
add
add
inc
int
int3
int3
int3
int3
int3
mov
inc
add
add
cmp
mov
mov
call
mov
mov
dec
je
dec
je
dec
je
jmp
mov
jmp
mov
jmp
mov
mov
cdq
idiv
mov
mov
pop
ret
nop
push
mov
mov
call
mov
mov
dec
je
dec
je
dec
je
jmp
mov
jmp
mov
jmp
mov
mov
cdq
idiv
mov
mov
pop
ret
nop
push
push
mov
mov
cmp
je
mov
mov
call
mov
call
mov
mov
pop
pop
ret
nop
push
push
push
mov
lea
call
mov
call
mov
mov
dec
test
jl
inc
xor
mov
mov
call
call
inc
dec
jne
mov
call
pop
pop
pop
ret
lea
push
push
mov
xor
call
mov
mov
mov
mov
mov
mov
mov
call
mov
mov
pop
pop
ret
add
add
add
push
mov
mov
call
mov
call
mov
call
mov
pop
ret
push
push
push
mov
mov
mov
mov
call
test
je
mov
call
mov
push
mov
call
mov
push
mov
call
mov
pop
pop
call
mov
mov
call
movzx
cmp
ja
jmp
rcl
inc
add
xchg
inc
add
xchg
inc
add
xchg
inc
add
xchg
inc
add
xchg
inc
add
add
cmp
jne
mov
jmp
mov
jmp
mov
jmp
mov
call
movzx
lea
shr
mov
jmp
mov
call
movzx
add
shr
mov
jmp
mov
call
movzx
shl
shr
mov
jmp
xor
mov
jmp
xor
mov
xor
mov
pop
pop
pop
ret
lea
push
mov
mov
call
test
je
mov
call
mov
pop
ret
xor
pop
ret
lea
push
mov
mov
call
test
je
mov
call
mov
pop
ret
xor
pop
ret
lea
push
push
push
mov
mov
mov
call
mov
mov
mov
call
mov
mov
call
mov
pop
pop
pop
ret
nop
push
push
push
mov
mov
cmp
jle
mov
xor
call
mov
jmp
xor
mov
mov
pop
pop
pop
ret
nop
push
push
push
push
add
mov
lea
movs
movs
movs
movs
mov
mov
lea
xor
mov
call
mov
call
mov
mov
mov
call
mov
mov
neg
mov
mov
lea
mov
rep
push
call
mov
cmp
je
push
push
lea
push
push
lea
push
mov
push
call
mov
cmp
je
cmp
jne
cmp
je
mov
push
call
mov
push
call
jmp
mov
push
mov
push
call
mov
push
mov
call
mov
push
mov
call
mov
push
mov
push
mov
push
mov
push
mov
call
mov
push
mov
call
mov
push
push
push
mov
push
call
mov
call
mov
mov
mov
call
movzx
imul
add
and
test
jns
add
sar
mov
mov
call
movzx
mov
call
imul
add
and
test
jns
add
sar
mov
mov
mov
mov
call
mov
mov
mov
call
mov
mov
call
mov
dec
imul
mov
call
add
mov
mov
call
mov
dec
je
sub
je
sub
je
sub
jne
mov
call
mov
test
jle
mov
mov
call
mov
dec
test
jl
inc
xor
mov
lea
lea
add
mov
movzx
mov
movzx
imul
add
mov
movzx
mov
sub
xor
mov
imul
add
shr
mov
lea
inc
mov
movzx
mov
movzx
imul
add
mov
movzx
mov
sub
xor
mov
imul
add
shr
mov
lea
mov
movzx
mov
movzx
imul
add
mov
movzx
mov
sub
xor
mov
imul
add
shr
mov
inc
dec
jne
mov
add
mov
sub
mov
add
dec
jne
jmp
mov
call
cmp
jne
mov
call
mov
test
jle
mov
mov
call
mov
dec
test
jl
inc
xor
mov
lea
mov
call
mov
movzx
mov
movzx
imul
add
mov
movzx
mov
sub
xor
mov
imul
add
shr
mov
mov
movzx
mov
movzx
imul
add
mov
movzx
mov
sub
xor
mov
imul
add
shr
mov
mov
movzx
mov
movzx
imul
add
mov
movzx
mov
sub
xor
mov
imul
add
shr
mov
inc
dec
jne
mov
add
mov
sub
mov
add
dec
jne
jmp
mov
mov
call
mov
mov
mov
call
mov
mov
call
mov
test
jle
mov
xor
mov
mov
xor
mov
mov
call
mov
dec
je
dec
je
sub
je
jmp
mov
and
jns
dec
or
inc
mov
sub
mov
movzx
shr
and
mov
jmp
mov
and
jns
dec
or
inc
mov
sub
mov
shl
mov
movzx
shr
and
mov
jmp
mov
mov
mov
mov
lea
xor
mov
mov
mov
mov
mov
call
shr
and
xor
mov
imul
add
xor
mov
mov
sub
xor
mov
imul
add
shr
mov
mov
mov
call
shr
and
xor
mov
imul
add
xor
mov
mov
sub
xor
mov
imul
add
shr
mov
mov
mov
call
and
xor
mov
imul
add
xor
mov
mov
sub
xor
mov
imul
add
shr
mov
inc
mov
call
movzx
add
cmp
jl
inc
mov
call
cmp
jl
mov
add
mov
sub
dec
jne
push
mov
call
mov
push
mov
call
mov
push
push
push
mov
push
mov
call
mov
push
mov
call
mov
push
mov
push
mov
push
mov
push
call
mov
push
mov
push
call
mov
push
call
mov
push
call
add
pop
pop
pop
pop
ret
add
push
push
dec
push
inc
push
mov
add
push
push
push
mov
mov
mov
mov
mov
call
mov
cmp
je
mov
call
sub
jne
mov
call
add
mov
call
push
mov
call
add
mov
call
push
push
push
lea
push
call
lea
mov
mov
call
jmp
mov
call
add
push
mov
call
add
mov
call
push
mov
call
add
mov
call
push
push
push
lea
push
call
lea
push
mov
call
push
mov
lea
mov
mov
mov
call
pop
pop
pop
mov
pop
ret
nop
push
mov
add
push
push
push
xor
mov
mov
mov
mov
mov
mov
mov
mov
xor
push
push
push
mov
mov
mov
mov
call
mov
mov
call
lea
mov
mov
call
lea
mov
mov
call
je
mov
jmp
mov
cmp
je
push
mov
call
sub
imul
push
mov
call
sub
pop
xchg
mov
xor
div
push
mov
xor
mov
call
test
je
lea
mov
mov
call
cmp
jae
mov
mov
call
test
je
mov
mov
call
test
jne
xor
jmp
mov
mov
jmp
mov
call
mov
lea
mov
mov
call
mov
cmp
jne
lea
lea
mov
call
mov
mov
call
je
mov
jmp
cmp
je
lea
lea
mov
call
mov
mov
call
je
lea
lea
mov
call
mov
mov
call
jne
mov
call
mov
add
add
mov
call
jmp
lea
lea
mov
call
mov
mov
call
jne
mov
mov
mov
call
mov
cmp
jne
mov
jmp
lea
lea
mov
call
mov
call
mov
xor
mov
cmp
je
mov
push
xor
mov
mov
mov
mov
mov
call
test
je
cmp
je
cmp
jne
jmp
mov
push
mov
mov
mov
call
test
je
lea
lea
mov
call
mov
mov
call
jne
cmp
jne
mov
jmp
mov
xor
pop
pop
pop
mov
push
lea
mov
call
ret
jmp
jmp
mov
pop
pop
pop
mov
pop
ret
dec
inc
inc
push
(bad)
(bad)
(bad)
inc
add
dec
dec
inc
push
add
add
(bad)
(bad)
(bad)
inc
add
dec
inc
inc
push
add
add
(bad)
(bad)
(bad)
inc
add
arpl
dec
add
add
(bad)
(bad)
(bad)
inc
add
dec
inc
dec
inc
add
add
push
push
push
push
add
mov
mov
mov
mov
mov
call
mov
mov
dec
test
jl
inc
mov
xor
mov
mov
call
mov
call
mov
mov
and
cmp
je
mov
mov
call
mov
mov
call
jmp
mov
mov
call
mov
call
inc
dec
jne
pop
pop
pop
pop
pop
pop
ret
nop
push
mov
xor
lea
mov
mov
mov
inc
inc
cmp
jne
pop
ret
mov
push
push
push
push
mov
mov
call
mov
xor
mov
mov
call
mov
xor
mov
cmp
ja
jmp
ins
sahf
inc
add
inc
add
inc
add
inc
add
inc
add
cmp
add
add
adc
je
mov
cmp
je
mov
jmp
mov
mov
pop
pop
pop
pop
ret
add
push
push
push
mov
mov
cmp
jle
mov
xor
call
mov
mov
call
je
xor
pop
pop
ret
mov
pop
pop
ret
add
(bad)
(bad)
(bad)
inc
add
dec
dec
inc
push
add
add
push
mov
add
push
push
push
xor
mov
mov
mov
xor
push
push
push
mov
mov
mov
dec
test
jl
inc
xor
mov
mov
call
mov
lea
lea
mov
call
mov
mov
mov
call
jne
mov
mov
jmp
inc
dec
jne
xor
mov
xor
pop
pop
pop
mov
push
lea
call
ret
jmp
jmp
mov
pop
pop
pop
mov
pop
ret
mov
push
mov
add
push
push
push
xor
mov
mov
mov
xor
push
push
push
mov
xor
mov
lea
lea
mov
call
mov
call
and
cmp
ja
jmp
sub
add
mov
inc
add
inc
add
mov
inc
add
mov
call
test
jne
mov
mov
xor
call
mov
mov
mov
xor
call
mov
mov
jmp
mov
mov
test
jle
mov
dec
mov
call
mov
mov
call
je
mov
mov
xor
call
mov
mov
mov
call
mov
mov
jmp
mov
mov
call
test
jne
mov
mov
xor
call
mov
mov
mov
call
mov
mov
mov
call
mov
cmp
je
mov
call
mov
inc
mov
mov
call
jmp
cmp
je
mov
mov
mov
call
jmp
mov
mov
xor
call
mov
mov
jmp
mov
mov
call
test
jne
mov
mov
xor
call
mov
mov
mov
call
mov
mov
mov
call
mov
cmp
je
mov
call
mov
mov
mov
call
jmp
cmp
je
mov
mov
mov
call
jmp
mov
mov
xor
call
mov
mov
jmp
mov
mov
call
test
jne
mov
mov
xor
call
mov
mov
mov
call
mov
mov
mov
call
mov
mov
mov
call
mov
cmp
je
mov
call
mov
inc
mov
mov
call
jmp
cmp
je
mov
call
mov
inc
mov
mov
call
jmp
cmp
je
mov
mov
mov
call
jmp
mov
mov
xor
call
mov
mov
jmp
mov
mov
call
test
jne
mov
mov
xor
call
mov
mov
mov
call
mov
mov
mov
call
mov
mov
mov
call
mov
mov
mov
call
mov
cmp
je
mov
call
mov
inc
mov
mov
call
jmp
cmp
je
mov
call
mov
inc
mov
mov
call
jmp
cmp
je
mov
call
mov
inc
mov
mov
call
jmp
cmp
je
mov
mov
mov
call
jmp
mov
mov
xor
call
mov
mov
jmp
mov
mov
xor
call
mov
mov
mov
call
mov
cmp
je
mov
call
mov
mov
mov
call
jmp
mov
mov
call
mov
jmp
mov
mov
xor
call
mov
mov
mov
call
mov
cmp
je
mov
call
mov
mov
mov
call
jmp
mov
mov
call
mov
jmp
mov
mov
xor
call
mov
mov
mov
call
mov
cmp
je
mov
call
mov
mov
mov
call
jmp
mov
mov
call
mov
mov
add
lea
mov
call
xor
pop
pop
pop
mov
push
lea
call
ret
jmp
jmp
mov
pop
pop
pop
mov
pop
ret
add
(bad)
(bad)
inc
add
dec
inc
dec
inc
add
add
dec
inc
inc
push
dec
dec
inc
push
push
dec
push
inc
addr16
dec
inc
push
push
dec
push
dec
inc
dec
inc
push
mov
lea
call
lea
call
mov
call
mov
pop
ret
mov
push
mov
xor
push
push
push
mov
inc
jne
mov
mov
mov
call
xor
pop
pop
pop
mov
push
ret
jmp
jmp
pop
ret
lea
sub
jae
call
not
and
sete
ret
add
add
add
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
test
sete
ret
lea
push
mov
xor
push
push
push
mov
inc
xor
pop
pop
pop
mov
push
ret
jmp
jmp
pop
ret
mov
sub
ret
push
mov
xor
push
push
push
mov
inc
xor
pop
pop
pop
mov
push
ret
jmp
jmp
pop
ret
mov
sub
ret
push
mov
xor
push
push
push
mov
inc
xor
pop
pop
pop
mov
push
ret
jmp
jmp
pop
ret
mov
sub
ret
push
mov
xor
push
push
push
mov
inc
xor
pop
pop
pop
mov
push
ret
jmp
jmp
pop
ret
mov
sub
ret
push
mov
xor
push
push
push
mov
inc
xor
pop
pop
pop
mov
push
ret
jmp
jmp
pop
ret
mov
sub
ret
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
push
mov
xor
push
push
push
mov
inc
xor
pop
pop
pop
mov
push
ret
jmp
jmp
pop
ret
mov
sub
ret
and
add
add
add
fs
inc
add
mov
push
mov
mov
mov
xor
call
mov
mov
mov
call
mov
mov
call
call
mov
mov
mov
mov
mov
call
mov
mov
mov
or
or
call
mov
mov
xor
call
mov
mov
mov
and
call
mov
mov
mov
mov
call
mov
mov
call
mov
mov
call
mov
mov
call
mov
call
mov
mov
mov
mov
mov
call
mov
mov
call
mov
call
mov
call
mov
mov
mov
mov
mov
call
mov
mov
call
mov
mov
call
mov
call
mov
mov
mov
mov
mov
call
mov
mov
mov
call
mov
mov
call
mov
mov
call
mov
call
mov
mov
mov
mov
mov
call
mov
mov
call
mov
mov
call
mov
call
mov
mov
mov
mov
xor
xor
call
mov
mov
call
mov
mov
call
mov
call
mov
mov
mov
push
push
mov
mov
call
mov
push
push
mov
mov
call
mov
mov
mov
mov
call
mov
push
push
mov
mov
call
mov
mov
mov
mov
call
mov
push
push
mov
mov
call
mov
mov
call
xor
call
push
push
push
mov
mov
push
call
mov
mov
call
mov
mov
or
call
pop
pop
pop
ret
add
add
(bad)
(bad)
inc
add
add
add
add
(bad)
(bad)
inc
add
add
outs
ins
popa
add
(bad)
(bad)
(bad)
call
add
add
gs
jae
and
ins
arpl
and
addr16
gs
add
add
add
(bad)
(bad)
inc
add
add
add
(bad)
(bad)
(bad)
inc
add
add
outs
arpl
add
mov
call
ret
lea
push
push
push
push
push
mov
mov
mov
mov
mov
call
mov
mov
call
mov
dec
test
jl
inc
xor
mov
shl
mov
mov
mov
mov
mov
call
mov
mov
mov
call
push
call
movzx
pop
cmp
jne
mov
inc
dec
jne
cmp
jne
mov
call
mov
dec
test
jl
inc
xor
mov
shl
mov
mov
mov
mov
call
jne
mov
jmp
inc
dec
jne
cmp
jne
xor
mov
mov
mov
call
pop
pop
pop
pop
pop
ret
add
(bad)
(bad)
inc
add
add
ins
imul
push
push
mov
xor
push
push
push
mov
mov
call
mov
mov
lea
mov
call
mov
mov
call
mov
mov
mov
call
mov
call
xor
pop
pop
pop
mov
push
lea
call
ret
jmp
jmp
pop
pop
pop
ret
nop
push
mov
cmp
jne
xor
call
pop
ret
nop
push
mov
mov
mov
call
push
push
push
mov
call
call
push
call
pop
ret
lea
push
mov
xor
push
push
push
mov
inc
xor
pop
pop
pop
mov
push
ret
jmp
jmp
pop
ret
mov
sub
ret
adc
inc
add
add
add
add
add
mov
push
mov
mov
mov
xor
call
mov
mov
mov
call
mov
mov
call
mov
mov
mov
mov
mov
call
mov
mov
mov
and
call
mov
mov
mov
mov
call
mov
mov
call
mov
mov
call
mov
mov
call
mov
call
mov
mov
mov
mov
mov
call
mov
mov
call
mov
call
mov
mov
mov
mov
mov
call
mov
mov
call
mov
call
mov
mov
mov
mov
mov
call
mov
mov
call
mov
call
mov
mov
mov
mov
mov
call
mov
mov
call
mov
call
mov
mov
mov
mov
mov
call
mov
mov
call
mov
call
mov
mov
mov
mov
mov
call
mov
mov
call
mov
call
mov
mov
mov
mov
xor
call
mov
mov
call
mov
mov
call
mov
mov
mov
mov
xor
call
mov
mov
call
mov
mov
call
mov
mov
mov
mov
xor
call
mov
mov
call
mov
mov
call
mov
mov
mov
mov
xor
call
mov
mov
call
mov
mov
call
mov
mov
mov
mov
mov
call
mov
mov
call
mov
mov
call
xor
call
mov
mov
mov
push
push
mov
mov
call
mov
mov
mov
mov
call
mov
push
push
mov
mov
call
mov
push
push
mov
mov
call
mov
mov
mov
mov
call
mov
push
push
mov
mov
call
mov
mov
call
xor
call
push
push
push
mov
mov
push
call
mov
mov
call
pop
pop
pop
ret
(bad)
(bad)
(bad)
inc
add
add
add
add
(bad)
(bad)
inc
add
add
outs
ins
popa
add
mov
mov
mov
call
ret
lea
mov
mov
mov
call
ret
lea
mov
mov
mov
call
ret
lea
mov
mov
mov
call
ret
lea
push
mov
add
push
push
push
xor
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
xor
push
push
push
mov
lea
mov
call
mov
mov
call
mov
test
jne
mov
mov
call
jmp
call
mov
test
jle
lea
push
mov
dec
mov
mov
call
mov
mov
call
lea
push
mov
call
mov
lea
mov
call
mov
mov
call
mov
test
jg
cmp
je
mov
mov
call
lea
mov
mov
dec
mov
call
mov
mov
dec
mov
call
mov
call
jmp
push
lea
mov
xor
call
push
push
mov
mov
call
mov
xor
call
mov
lea
mov
call
mov
lea
mov
call
cmp
jle
mov
cmp
jg
mov
cmp
jne
mov
mov
call
jmp
push
push
push
mov
mov
call
mov
call
xor
pop
pop
pop
mov
push
lea
call
lea
mov
call
lea
call
ret
jmp
jmp
pop
pop
pop
mov
pop
ret
add
(bad)
(bad)
(bad)
inc
add
add
add
(bad)
(bad)
inc
add
add
cs
add
in
push
push
push
push
push
mov
mov
xor
push
push
push
mov
mov
mov
lea
mov
mov
call
mov
mov
call
mov
mov
mov
call
lea
push
mov
call
mov
mov
call
add
sub
push
mov
call
mov
mov
mov
pop
call
mov
mov
call
mov
mov
mov
call
mov
mov
mov
call
mov
mov
mov
call
mov
mov
mov
call
mov
call
push
mov
call
pop
call
mov
add
mov
mov
call
mov
mov
call
mov
mov
mov
call
mov
mov
mov
call
mov
mov
mov
call
mov
mov
mov
call
xor
pop
pop
pop
mov
push
lea
mov
call
ret
jmp
jmp
pop
pop
pop
pop
pop
pop
ret
nop
push
mov
xor
push
push
push
mov
inc
xor
pop
pop
pop
mov
push
ret
jmp
jmp
pop
ret
mov
sub
ret
dec
mov
add
add
add
add
add
add
mov
push
mov
mov
mov
xor
call
mov
mov
mov
call
mov
mov
call
call
mov
mov
mov
mov
mov
call
mov
mov
mov
or
or
call
mov
mov
mov
and
call
mov
mov
mov
mov
call
mov
mov
call
mov
mov
call
mov
mov
call
mov
call
mov
mov
mov
mov
mov
call
mov
mov
call
mov
mov
call
call
mov
mov
mov
mov
mov
call
mov
mov
call
mov
call
mov
mov
mov
mov
mov
call
mov
mov
call
mov
mov
call
mov
mov
mov
mov
mov
call
mov
mov
call
mov
mov
call
mov
mov
mov
mov
mov
call
mov
mov
call
xor
mov
call
mov
mov
mov
mov
mov
call
mov
mov
call
mov
mov
call
mov
mov
mov
push
push
mov
mov
call
mov
mov
mov
mov
call
mov
push
push
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
call
mov
push
push
mov
mov
call
mov
mov
call
xor
call
push
push
push
mov
mov
push
call
mov
mov
call
mov
mov
or
call
pop
pop
pop
ret
add
(bad)
(bad)
inc
add
add
add
add
(bad)
(bad)
inc
add
add
outs
ins
popa
add
(bad)
(bad)
(bad)
inc
add
add
add
(bad)
(bad)
(bad)
inc
add
add
outs
arpl
add
add
add
(bad)
(bad)
(bad)
inc
add
add
outs
ja
add
push
mov
xor
push
push
push
push
push
push
push
mov
xor
push
push
push
mov
mov
mov
mov
mov
call
lea
push
lea
mov
mov
call
mov
lea
mov
call
mov
mov
mov
lea
mov
mov
mov
xor
call
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
lea
mov
mov
call
mov
mov
call
xor
pop
pop
pop
mov
push
lea
mov
call
lea
call
ret
jmp
jmp
pop
mov
pop
ret
add
(bad)
(bad)
(bad)
inc
add
add
add
add
call
inc
add
in
add
push
xor
mov
mov
mov
mov
mov
xor
push
push
push
mov
lea
mov
call
lea
mov
mov
call
lea
mov
call
mov
mov
mov
call
mov
mov
call
test
jne
push
mov
mov
mov
call
push
lea
push
mov
mov
mov
mov
mov
mov
lea
mov
mov
mov
mov
call
mov
call
push
mov
mov
mov
push
call
jmp
mov
call
xor
pop
pop
pop
mov
push
lea
mov
call
ret
jmp
jmp
pop
mov
pop
ret
push
mov
push
push
push
mov
xor
push
push
push
mov
lea
mov
call
lea
mov
mov
mov
call
mov
lea
call
test
je
cmp
je
mov
mov
call
xor
pop
pop
pop
mov
push
lea
mov
call
ret
jmp
jmp
pop
pop
pop
pop
ret
nop
push
mov
xor
push
push
push
mov
inc
xor
pop
pop
pop
mov
push
ret
jmp
jmp
pop
ret
mov
sub
ret
add
add
add
add
fs
inc
add
mov
inc
add
add
xor
add
add
add
add
add
add
adc
push
push
imul
push
push
mov
mov
mov
xor
call
mov
mov
mov
call
mov
mov
call
call
mov
mov
mov
mov
mov
call
mov
mov
mov
and
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
call
mov
mov
call
mov
mov
call
mov
call
mov
mov
mov
mov
push
push
call
mov
push
push
mov
mov
call
mov
push
push
mov
mov
xor
call
mov
push
push
mov
mov
mov
call
mov
call
mov
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
xor
call
mov
mov
call
mov
call
mov
call
mov
mov
mov
mov
xor
call
mov
mov
xor
call
mov
mov
mov
call
mov
mov
xor
call
mov
mov
call
mov
mov
call
mov
call
mov
mov
mov
mov
xor
call
mov
mov
xor
call
mov
mov
call
mov
mov
call
mov
call
mov
mov
mov
mov
xor
call
mov
mov
call
mov
mov
call
mov
call
mov
mov
mov
mov
mov
call
mov
mov
call
xor
call
mov
mov
mov
mov
xor
call
mov
mov
mov
call
mov
mov
mov
call
mov
mov
xor
call
mov
mov
call
mov
mov
call
mov
call
mov
mov
mov
mov
call
mov
call
mov
mov
mov
call
mov
mov
xor
call
mov
mov
call
mov
mov
call
call
mov
call
mov
mov
mov
mov
mov
call
mov
mov
xor
xor
call
mov
mov
call
mov
call
mov
mov
mov
mov
mov
call
mov
mov
call
mov
call
mov
mov
mov
call
mov
call
mov
xor
call
xor
call
mov
mov
mov
mov
mov
call
mov
mov
mov
call
mov
call
mov
xor
call
xor
call
mov
mov
mov
mov
mov
call
mov
mov
mov
call
mov
mov
call
mov
mov
call
xor
call
mov
mov
mov
mov
xor
call
mov
mov
mov
call
mov
mov
call
xor
call
mov
mov
mov
mov
xor
call
mov
mov
mov
call
mov
mov
mov
call
mov
mov
xor
call
mov
mov
call
mov
mov
call
call
mov
call
mov
mov
mov
mov
call
mov
call
mov
mov
call
mov
mov
call
mov
mov
call
mov
call
mov
mov
mov
call
mov
mov
xor
call
mov
mov
call
mov
mov
call
call
mov
call
mov
mov
mov
mov
mov
call
mov
mov
xor
call
mov
mov
call
mov
call
mov
call
mov
mov
mov
mov
xor
call
mov
mov
mov
call
mov
mov
mov
call
mov
mov
xor
call
mov
mov
call
mov
call
mov
call
mov
mov
mov
mov
xor
call
mov
mov
mov
call
mov
mov
mov
call
mov
mov
xor
call
mov
mov
call
mov
call
mov
call
mov
mov
mov
mov
xor
call
mov
mov
mov
call
mov
mov
mov
call
mov
mov
xor
xor
call
mov
mov
call
mov
call
mov
mov
mov
mov
mov
call
mov
mov
mov
call
mov
xor
call
mov
mov
call
xor
call
mov
mov
mov
mov
mov
call
mov
mov
xor
call
mov
mov
call
mov
call
mov
call
mov
mov
mov
mov
xor
call
mov
mov
xor
call
mov
mov
call
mov
call
mov
call
mov
mov
mov
mov
xor
call
mov
mov
mov
call
mov
xor
call
mov
mov
call
xor
call
mov
mov
mov
mov
xor
call
mov
mov
mov
call
mov
mov
xor
call
mov
mov
call
mov
mov
call
call
mov
call
mov
mov
mov
mov
mov
call
mov
mov
call
mov
mov
call
mov
call
mov
mov
mov
mov
xor
call
push
push
call
mov
mov
mov
call
mov
mov
mov
call
mov
xor
call
mov
mov
call
xor
call
mov
mov
mov
mov
xor
call
mov
mov
mov
call
mov
mov
xor
call
mov
mov
call
mov
mov
call
call
mov
call
mov
mov
mov
mov
mov
call
mov
mov
call
mov
mov
call
mov
call
mov
mov
mov
mov
xor
call
push
push
call
mov
mov
mov
call
mov
mov
mov
call
mov
xor
call
mov
mov
call
xor
call
mov
mov
mov
mov
xor
call
mov
mov
mov
call
mov
mov
xor
call
mov
mov
call
mov
mov
call
call
mov
call
mov
mov
mov
mov
or
xor
call
mov
mov
call
mov
mov
call
mov
call
mov
mov
mov
mov
or
call
mov
mov
xor
call
mov
mov
call
mov
mov
call
mov
call
mov
mov
mov
mov
xor
call
mov
mov
mov
call
mov
mov
call
xor
mov
call
mov
mov
mov
mov
xor
call
mov
mov
call
mov
mov
call
mov
mov
mov
mov
mov
call
mov
xor
call
mov
mov
call
xor
call
mov
mov
mov
mov
xor
call
mov
mov
mov
call
mov
mov
xor
call
mov
mov
call
mov
mov
call
call
mov
call
mov
mov
mov
mov
mov
call
mov
mov
call
xor
mov
call
mov
call
mov
mov
push
push
push
mov
mov
mov
mov
call
mov
mov
call
mov
mov
call
mov
call
mov
mov
mov
mov
mov
call
push
mov
mov
xor
xor
call
mov
mov
xor
call
mov
mov
call
mov
call
mov
call
mov
mov
mov
mov
mov
call
mov
xor
call
mov
mov
call
xor
call
mov
mov
mov
mov
xor
call
mov
mov
mov
call
mov
mov
xor
call
mov
mov
call
mov
mov
call
call
mov
call
mov
mov
mov
mov
xor
call
mov
mov
call
mov
call
mov
call
mov
mov
mov
mov
xor
call
mov
mov
mov
call
mov
mov
xor
call
mov
mov
call
mov
call
mov
call
mov
mov
mov
mov
xor
call
mov
mov
mov
call
mov
mov
xor
call
mov
mov
call
mov
call
mov
call
mov
mov
mov
mov
xor
call
mov
mov
mov
call
mov
mov
or
xor
call
mov
mov
call
mov
mov
call
mov
call
mov
mov
mov
mov
or
call
mov
mov
mov
call
mov
xor
call
mov
mov
call
xor
call
mov
mov
mov
mov
xor
call
mov
mov
mov
call
mov
mov
xor
call
mov
mov
call
mov
mov
call
call
mov
call
mov
mov
mov
mov
mov
call
mov
mov
call
mov
mov
call
mov
call
mov
mov
mov
mov
mov
call
mov
xor
call
mov
mov
call
xor
call
mov
mov
mov
mov
xor
call
mov
mov
mov
call
mov
mov
xor
call
mov
mov
call
mov
mov
call
call
mov
call
mov
mov
mov
mov
xor
call
mov
mov
call
mov
mov
call
mov
call
mov
mov
mov
mov
mov
call
mov
mov
call
mov
mov
call
mov
call
mov
mov
mov
mov
mov
call
mov
mov
mov
call
mov
xor
call
mov
mov
call
xor
call
mov
mov
mov
mov
xor
call
mov
mov
mov
call
mov
mov
xor
call
mov
mov
call
mov
mov
call
call
mov
call
mov
mov
mov
mov
or
xor
call
mov
mov
call
mov
mov
call
mov
call
mov
mov
mov
mov
or
call
mov
mov
xor
call
mov
mov
call
mov
mov
call
mov
call
mov
mov
mov
mov
xor
call
mov
push
push
mov
mov
call
mov
mov
mov
call
mov
push
push
mov
mov
mov
call
mov
mov
mov
call
mov
push
push
mov
mov
mov
call
mov
push
push
mov
mov
call
mov
push
push
mov
mov
call
mov
push
push
mov
mov
call
mov
mov
mov
call
mov
mov
mov
call
mov
push
push
mov
mov
call
mov
mov
mov
mov
call
mov
push
push
mov
mov
call
mov
push
push
mov
mov
call
mov
push
push
mov
mov
call
mov
push
push
mov
mov
call
mov
mov
mov
call
mov
push
push
mov
mov
call
mov
mov
mov
mov
call
mov
push
push
mov
mov
call
mov
mov
mov
call
mov
mov
call
mov
push
push
mov
mov
call
mov
mov
call
xor
call
push
push
push
mov
mov
push
call
mov
mov
call
mov
mov
call
pop
pop
pop
ret
add
add
(bad)
(bad)
inc
add
add
add
add
dec
dec
dec
inc
dec
dec
add
add
(bad)
(bad)
(bad)
inc
add
add
outs
ins
popa
add
add
add
(bad)
(bad)
(bad)
inc
add
add
jb
popa
outs
popa
add
add
add
add
add
in
push
push
push
push
push
push
mov
xor
push
push
push
mov
add
call
mov
cmp
jne
mov
mov
call
test
je
mov
call
jmp
mov
sub
jb
je
dec
je
dec
je
jmp
mov
mov
mov
call
jmp
mov
call
mov
sar
jns
adc
lea
mov
call
mov
test
jle
mov
lea
push
mov
add
dec
mov
mov
call
mov
call
push
lea
call
pop
mov
inc
dec
jne
mov
call
push
lea
call
mov
mov
mov
call
jmp
mov
call
mov
mov
mov
call
jmp
push
mov
mov
mov
call
mov
call
xor
pop
pop
pop
mov
push
lea
mov
call
ret
jmp
jmp
pop
pop
pop
mov
pop
ret
push
add
mov
mov
test
je
push
lea
push
call
jmp
push
lea
push
call
mov
lea
mov
call
add
pop
ret
push
add
mov
push
push
push
call
lea
push
mov
push
call
mov
push
call
mov
lea
mov
call
add
pop
ret
mov
push
mov
xor
push
push
push
push
push
push
push
push
push
mov
mov
xor
push
push
push
mov
mov
call
xor
mov
cmp
ja
mov
jmp
add
add
add
push
pop
or
or
or
push
movups
adc
adc
push
add
add
sbb
sbb
sbb
push
pop
and
and
and
and
and
and
and
and
and
and
and
push
rol
push
rol
data16
jb
inc
add
inc
add
rol
stos
rol
sti
rol
or
inc
add
rol
aas
rol
push
rol
popa
rol
jb
inc
add
rol
fcmovnbe
inc
add
rol
hlt
rol
add
inc
add
rol
and
inc
add
rol
push
rol
push
rol
mov
inc
add
rol
mov
inc
add
rol
add
inc
add
add
call
cmp
jne
push
mov
mov
mov
call
cmp
jne
lea
call
mov
mov
lea
call
mov
mov
mov
call
jmp
mov
call
jmp
mov
call
jmp
mov
mov
call
jmp
mov
call
jmp
mov
xor
call
jmp
push
mov
mov
mov
call
cmp
jne
lea
mov
call
mov
mov
mov
call
mov
call
test
jne
mov
call
jmp
mov
mov
call
jmp
mov
mov
call
jmp
mov
mov
call
jmp
mov
mov
call
jmp
mov
mov
call
jmp
mov
mov
call
jmp
mov
mov
call
jmp
mov
mov
call
jmp
call
cmp
jbe
mov
mov
call
jmp
lea
mov
call
mov
mov
mov
call
jmp
push
lea
call
mov
mov
mov
call
jmp
lea
xor
call
mov
mov
call
jmp
mov
mov
call
jmp
mov
mov
mov
call
jmp
mov
xor
call
jmp
mov
mov
call
jmp
mov
mov
call
jmp
mov
mov
call
jmp
mov
mov
call
jmp
mov
mov
call
jmp
mov
mov
call
jmp
mov
mov
call
jmp
mov
mov
call
jmp
mov
mov
call
jmp
mov
mov
call
jmp
push
mov
mov
mov
call
cmp
jne
push
mov
mov
mov
call
cmp
jne
mov
mov
call
jmp
mov
xor
mov
mov
mov
mov
call
lea
mov
call
mov
mov
call
xor
pop
pop
pop
mov
push
lea
mov
call
ret
jmp
jmp
pop
pop
mov
pop
ret
add
(bad)
(bad)
(bad)
dec
add
add
outs
addr16
ins
inc
imul
(bad)
(bad)
(bad)
jmp
add
add
inc
push
push
inc
push
inc
pop
dec
imul
je
push
imul
inc
jne
jb
outs
je
gs
imul
(bad)
(bad)
dec
add
add
pop
push
jb
addr16
ins
and
ins
gs
(bad)
(bad)
(bad)
dec
add
push
jne
arpl
dec
popa
jne
arpl
add
add
(bad)
(bad)
(bad)
cmp
add
push
outs
data16
popa
jb
pop
dec
imul
je
push
imul
inc
jne
jb
outs
je
gs
imul
inc
outs
outs
jbe
dec
popa
jo
jb
jne
jae
(bad)
(bad)
(bad)
jmp
add
add
arpl
jae
data16
dec
outs
je
jb
gs
inc
js
ins
outs
jb
jb
push
jne
arpl
dec
popa
jne
arpl
add
(bad)
(bad)
(bad)
dec
inc
outs
ins
ins
outs
outs
and
ins
gs
add
(bad)
(bad)
(bad)
dec
add
add
outs
addr16
ins
push
ss
xor
add
in
push
push
push
push
push
push
push
push
push
mov
mov
mov
xor
push
push
push
mov
mov
mov
call
mov
mov
call
mov
test
je
lea
push
lea
mov
mov
call
mov
call
mov
mov
cmp
jbe
cmp
jae
sub
mov
lea
mov
call
mov
or
je
lea
mov
call
mov
lea
call
lea
mov
mov
call
mov
mov
mov
call
test
jne
xor
pop
pop
pop
mov
push
lea
mov
call
lea
mov
call
ret
jmp
jmp
pop
pop
pop
mov
pop
ret
add
(bad)
(bad)
inc
add
inc
and
and
push
mov
push
push
push
mov
mov
mov
call
xor
push
push
push
mov
mov
call
mov
cmp
jl
mov
cmp
jne
lea
lea
mov
call
dec
test
jne
mov
mov
call
xor
pop
pop
pop
mov
push
lea
call
ret
jmp
jmp
pop
pop
pop
pop
ret
add
(bad)
(bad)
inc
add
add
add
add
fdivr
call
mov
mov
mov
call
mov
mov
pop
ret
lea
push
mov
push
mov
mov
cmp
jne
mov
mov
add
adc
fild
fdiv
call
mov
mov
mov
call
mov
mov
call
pop
pop
ret
add
add
add
mov
mov
mov
call
xor
mov
push
push
mov
call
mov
mov
call
test
je
cmp
je
test
jne
mov
mov
call
mov
push
call
pop
pop
pop
ret
push
mov
push
push
push
push
push
push
push
push
mov
mov
mov
mov
xor
push
push
push
mov
lea
call
push
mov
push
push
push
mov
push
call
lea
call
mov
call
push
mov
push
mov
call
mov
call
push
mov
push
mov
call
cmp
jne
lea
mov
call
jmp
lea
mov
call
mov
call
push
mov
push
mov
call
cmp
je
mov
push
mov
call
push
mov
push
mov
call
test
je
mov
call
push
mov
push
mov
call
lea
call
push
push
mov
push
mov
call
mov
call
mov
push
mov
push
mov
push
mov
call
mov
mov
call
cmp
jne
mov
mov
call
xor
pop
pop
pop
mov
push
lea
call
lea
call
lea
call
ret
jmp
jmp
pop
pop
pop
mov
pop
ret
push
mov
xor
push
push
push
push
push
push
push
mov
mov
mov
call
xor
push
push
push
mov
mov
call
mov
cmp
jle
lea
push
mov
mov
mov
call
mov
mov
call
jne
lea
push
mov
mov
mov
call
mov
mov
call
jne
push
push
push
lea
mov
call
lea
mov
call
push
push
push
lea
mov
call
mov
mov
mov
call
xor
pop
pop
pop
mov
push
lea
mov
call
ret
jmp
jmp
pop
pop
mov
pop
ret
add
(bad)
(bad)
inc
add
add
add
add
(bad)
(bad)
inc
add
add
mov
mov
push
push
dec
jne
push
push
push
mov
xor
push
push
push
mov
lea
mov
mov
mov
xor
call
lea
mov
mov
mov
xor
call
lea
mov
call
mov
call
lea
mov
call
mov
call
mov
call
test
je
mov
call
mov
mov
mov
xor
call
mov
call
test
je
call
mov
mov
call
test
je
mov
mov
call
jmp
mov
mov
call
mov
call
mov
mov
xor
xor
call
mov
xor
push
push
mov
mov
call
lea
mov
mov
call
mov
call
mov
call
mov
lea
call
mov
movzx
mov
call
lea
mov
mov
call
mov
call
call
mov
mov
mov
call
mov
mov
mov
mov
dec
test
jl
inc
xor
lea
lea
call
push
push
lea
mov
mov
call
push
lea
mov
call
mov
mov
call
inc
dec
jne
mov
call
xor
mov
mov
mov
call
mov
call
mov
dec
test
jl
inc
xor
mov
add
mov
mov
mov
call
dec
jne
inc
push
mov
mov
mov
lea
xor
call
mov
mov
call
pop
inc
dec
jne
mov
call
mov
dec
test
jl
inc
xor
push
lea
lea
call
push
push
lea
mov
call
mov
mov
call
push
mov
add
mov
mov
mov
xor
call
pop
push
mov
mov
mov
lea
xor
call
mov
mov
call
pop
inc
dec
jne
xor
mov
mov
mov
call
mov
call
mov
dec
test
jl
inc
xor
mov
add
mov
mov
mov
call
dec
jne
inc
push
mov
mov
mov
lea
xor
call
mov
mov
call
pop
inc
dec
jne
xor
mov
mov
call
mov
dec
test
jl
inc
xor
mov
add
lea
mov
mov
mov
call
dec
jne
inc
push
lea
mov
call
push
push
lea
mov
call
mov
mov
call
push
mov
mov
mov
lea
xor
call
mov
xor
call
pop
push
mov
mov
mov
lea
xor
call
mov
mov
call
pop
push
mov
mov
mov
lea
xor
call
mov
mov
call
pop
inc
dec
jne
xor
mov
mov
call
mov
dec
test
jl
inc
xor
mov
shl
sub
mov
mov
mov
call
dec
jne
inc
push
lea
mov
call
push
push
lea
mov
call
mov
mov
call
push
mov
mov
mov
xor
call
pop
push
mov
mov
mov
lea
xor
call
mov
mov
call
pop
push
mov
mov
mov
lea
xor
call
mov
mov
call
pop
inc
dec
jne
mov
call
mov
dec
test
jl
inc
xor
inc
push
lea
mov
call
push
push
lea
mov
call
mov
mov
call
push
lea
mov
mov
mov
xor
call
pop
push
mov
mov
mov
lea
xor
call
mov
mov
call
pop
push
mov
mov
mov
lea
xor
call
mov
mov
call
pop
inc
dec
jne
xor
mov
xor
mov
mov
call
mov
mov
call
mov
mov
call
add
dec
sub
jl
inc
mov
add
lea
mov
mov
mov
call
test
jne
inc
push
lea
mov
call
push
push
lea
mov
call
mov
mov
call
jmp
inc
push
lea
mov
call
push
push
lea
mov
call
mov
mov
call
push
mov
mov
mov
lea
xor
call
mov
xor
call
pop
push
mov
mov
mov
lea
xor
call
mov
mov
call
pop
push
mov
mov
mov
lea
xor
call
mov
mov
call
pop
push
mov
mov
mov
lea
xor
call
mov
mov
call
pop
inc
dec
jne
mov
call
mov
dec
test
jl
inc
xor
push
lea
lea
call
push
push
lea
mov
call
mov
mov
call
push
mov
add
mov
mov
mov
lea
xor
call
mov
xor
call
pop
push
mov
mov
mov
lea
xor
call
mov
mov
call
pop
inc
dec
jne
mov
mov
call
xor
mov
cmp
ja
jmp
(bad)
loope
add
loop
add
inc
add
inc
add
inc
add
loop
add
loop
add
loop
add
inc
add
jecxz
add
inc
add
inc
add
inc
add
jecxz
add
jecxz
add
jecxz
add
jecxz
add
in
add
in
add
inc
add
inc
add
in
add
in
add
in
add
in
add
in
add
in
add
inc
add
inc
add
inc
add
out
add
inc
add
in
add
in
add
in
add
out
add
out
add
out
add
inc
add
inc
add
inc
add
out
add
out
add
out
add
clc
xchg
mov
mov
call
jmp
lea
mov
mov
mov
call
jmp
lea
mov
mov
mov
call
jmp
lea
mov
mov
mov
call
jmp
lea
mov
mov
mov
call
jmp
lea
mov
mov
mov
call
jmp
lea
mov
mov
mov
call
jmp
lea
mov
mov
mov
call
jmp
lea
mov
mov
mov
call
jmp
lea
mov
mov
mov
call
jmp
lea
mov
mov
mov
call
jmp
lea
mov
mov
mov
call
jmp
lea
mov
mov
mov
call
jmp
lea
mov
mov
mov
call
jmp
lea
mov
mov
mov
call
jmp
lea
mov
mov
mov
call
jmp
lea
mov
mov
mov
call
jmp
lea
mov
mov
mov
xor
call
jmp
lea
mov
call
jmp
lea
mov
mov
mov
call
jmp
lea
mov
mov
mov
call
jmp
lea
mov
mov
mov
call
jmp
lea
mov
mov
mov
call
jmp
lea
mov
mov
mov
call
jmp
lea
mov
mov
mov
call
jmp
lea
mov
mov
mov
call
jmp
lea
mov
mov
mov
call
jmp
lea
mov
mov
mov
call
jmp
lea
mov
mov
mov
call
jmp
lea
mov
mov
mov
call
jmp
lea
mov
mov
mov
call
jmp
lea
mov
mov
mov
call
jmp
lea
mov
mov
mov
call
jmp
lea
mov
mov
mov
call
jmp
lea
mov
mov
mov
call
jmp
lea
call
jmp
lea
mov
call
jmp
lea
mov
mov
mov
call
jmp
lea
mov
call
jmp
lea
mov
mov
mov
call
jmp
lea
mov
mov
mov
call
jmp
lea
mov
call
jmp
lea
mov
call
jmp
lea
mov
call
jmp
lea
mov
call
jmp
lea
mov
call
jmp
mov
call
mov
mov
add
add
mov
call
add
mov
call
add
mov
add
add
add
add
add
lea
call
jmp
lea
mov
mov
mov
call
jmp
lea
mov
mov
mov
call
jmp
lea
mov
mov
mov
call
jmp
lea
mov
mov
mov
call
push
mov
mov
call
pop
inc
cmp
jne
mov
mov
call
mov
call
xor
pop
pop
pop
mov
push
lea
mov
call
lea
mov
call
lea
call
ret
jmp
jmp
pop
pop
pop
mov
pop
ret
add
add
(bad)
(bad)
inc
add
add
pop
add
(bad)
(bad)
inc
add
add
(bad)
(bad)
inc
add
add
pop
add
(bad)
(bad)
inc
add
add
add
(bad)
(bad)
(bad)
inc
add
add
add
(bad)
(bad)
(bad)
inc
add
add
pop
add
(bad)
(bad)
inc
add
add
add
(bad)
(bad)
(bad)
inc
add
add
add
(bad)
(bad)
(bad)
inc
add
add
add
(bad)
(bad)
(bad)
inc
add
add
add
(bad)
(bad)
(bad)
inc
add
add
add
(bad)
(bad)
(bad)
inc
add
add
pop
add
in
add
push
push
push
xor
mov
mov
mov
mov
xor
push
push
push
mov
mov
mov
mov
mov
mov
call
mov
mov
call
mov
call
mov
dec
test
jl
inc
xor
mov
add
lea
mov
mov
mov
call
xor
mov
cmp
jne
mov
mov
mov
lea
xor
call
mov
mov
mov
lea
xor
call
lea
mov
call
mov
mov
mov
call
mov
mov
mov
mov
call
dec
jne
lea
xor
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
call
mov
mov
call
mov
mov
call
mov
mov
mov
mov
lea
push
call
test
je
jmp
mov
mov
call
push
mov
push
call
cmp
je
mov
push
call
jmp
mov
push
mov
call
push
mov
call
push
mov
call
push
push
mov
mov
mov
push
call
push
push
mov
call
inc
dec
jne
xor
pop
pop
pop
mov
push
lea
mov
call
ret
jmp
jmp
pop
pop
pop
mov
pop
ret
add
add
outs
add
add
push
mov
mov
push
push
dec
jne
push
push
push
mov
xor
push
push
push
mov
mov
call
mov
dec
test
jl
inc
xor
mov
add
mov
mov
mov
lea
xor
call
lea
mov
call
mov
mov
mov
mov
lea
call
mov
mov
call
mov
mov
call
mov
call
test
je
mov
add
mov
mov
mov
lea
xor
call
lea
mov
call
mov
push
lea
mov
call
mov
lea
call
mov
pop
call
test
jne
lea
mov
call
jmp
lea
mov
call
call
cmp
jbe
lea
mov
call
jmp
lea
call
mov
push
push
push
push
push
push
lea
mov
call
mov
mov
mov
call
mov
call
push
call
push
push
push
push
call
push
push
mov
call
inc
dec
jne
xor
pop
pop
pop
mov
push
lea
mov
call
ret
jmp
jmp
pop
pop
pop
mov
pop
ret
add
(bad)
(bad)
inc
add
add
dec
push
add
(bad)
(bad)
call
add
add
data16
popa
jb
pop
dec
imul
je
push
imul
add
(bad)
(bad)
call
inc
jne
jb
outs
je
gs
imul
je
add
add
in
push
push
mov
mov
call
xor
push
push
push
mov
mov
call
push
call
mov
push
push
call
test
je
call
push
call
xor
pop
pop
pop
mov
push
lea
call
ret
jmp
jmp
pop
pop
pop
ret
add
inc
ins
ins
push
imul
jb
gs
add
push
mov
mov
mov
call
push
mov
mov
mov
call
push
mov
mov
mov
push
call
mov
call
call
ret
mov
push
mov
add
push
push
push
xor
mov
mov
mov
mov
mov
mov
mov
xor
push
push
push
mov
cmp
jne
mov
call
push
mov
call
pop
xchg
sub
sub
xor
mov
mov
mov
mov
cmp
jne
cmp
jbe
jmp
jle
mov
mov
mov
mov
push
push
mov
mov
call
mov
mov
jmp
push
push
mov
mov
call
mov
mov
jmp
inc
mov
call
cmp
jne
lea
xor
call
mov
mov
call
lea
mov
call
mov
mov
mov
mov
mov
call
lea
mov
call
mov
mov
mov
call
jmp
mov
mov
mov
call
mov
mov
call
mov
mov
call
mov
call
mov
mov
call
mov
call
test
jne
mov
mov
call
mov
call
test
je
mov
call
mov
mov
mov
sub
sbb
push
push
mov
mov
call
add
adc
mov
mov
mov
mov
cmp
jne
cmp
ja
jmp
jg
xor
pop
pop
pop
mov
push
lea
mov
call
ret
jmp
jmp
pop
pop
pop
mov
pop
ret
add
(bad)
(bad)
inc
add
add
es
push
add
mov
cmp
jle
mov
call
push
call
mov
call
mov
mov
mov
call
mov
call
cmp
jne
mov
call
cdq
mov
mov
jmp
mov
call
cdq
mov
mov
cmp
jne
mov
call
mov
imul
mov
add
mov
xor
call
push
push
mov
call
mov
call
mov
mov
call
add
pop
ret
add
add
(bad)
(bad)
inc
add
dec
push
inc
inc
add
add
push
mov
push
push
mov
xor
push
push
push
mov
cmp
jle
mov
mov
lea
mov
call
mov
call
inc
xor
pop
pop
pop
mov
push
lea
call
ret
jmp
jmp
pop
pop
pop
ret
nop
push
mov
xor
push
push
push
push
push
push
xor
push
push
push
mov
mov
sub
je
sub
je
sub
jne
mov
mov
mov
mov
call
mov
lea
mov
add
call
mov
push
push
lea
call
push
push
mov
mov
mov
call
mov
mov
fild
add
fstp
fwait
lea
call
push
push
mov
mov
call
mov
lea
mov
add
call
mov
push
push
lea
call
push
push
mov
fild
add
fstp
fwait
lea
call
push
push
mov
mov
call
mov
mov
mov
call
mov
mov
mov
call
mov
mov
mov
call
mov
mov
call
mov
sub
je
sub
je
sub
je
sub
je
jmp
mov
mov
jmp
mov
mov
cmp
je
cmp
jne
mov
jmp
mov
mov
jmp
mov
mov
xor
pop
pop
pop
mov
push
lea
mov
call
lea
mov
call
ret
jmp
jmp
mov
pop
ret
add
(bad)
(bad)
inc
add
and
and
add
add
(bad)
(bad)
(bad)
inc
add
add
add
push
mov
add
push
push
push
xor
mov
mov
mov
lea
movs
movs
mov
mov
xor
push
push
push
mov
mov
lea
mov
mov
mov
lea
xor
call
mov
mov
call
mov
mov
call
push
call
mov
cmp
je
test
jne
push
push
push
push
push
push
mov
mov
call
push
call
mov
lea
push
push
push
push
call
push
call
lea
mov
mov
mov
call
cmp
ja
jmp
jmp
add
repz
add
repz
add
repz
add
sbb
(bad)
call
cmp
in
push
imul
push
call
pop
jmp
mov
jmp
mov
jmp
lea
lea
call
dec
sete
jmp
mov
cmp
je
test
je
and
push
mov
mov
call
push
call
mov
mov
call
push
call
jmp
lea
mov
mov
call
mov
call
cmp
jne
mov
call
jmp
lea
mov
mov
mov
call
dec
jne
mov
mov
mov
call
mov
xor
pop
pop
pop
mov
push
lea
mov
call
ret
jmp
jmp
mov
pop
pop
pop
mov
pop
ret
push
mov
add
push
push
push
xor
mov
mov
mov
mov
mov
mov
xor
push
push
push
mov
push
push
mov
call
lea
push
mov
push
mov
push
call
lea
push
lea
push
call
mov
cdq
push
push
mov
call
mov
lea
call
test
je
lea
mov
call
mov
mov
mov
mov
lea
call
mov
mov
call
mov
cdq
mov
mov
xor
pop
pop
pop
mov
push
lea
mov
call
ret
jmp
jmp
pop
pop
pop
mov
pop
ret
nop
push
mov
add
push
push
xor
mov
mov
mov
mov
mov
call
xor
push
push
push
mov
push
mov
mov
mov
call
push
mov
mov
push
push
push
mov
mov
push
lea
mov
call
mov
call
push
mov
mov
push
call
sub
je
dec
je
jmp
mov
jmp
mov
mov
cmp
je
call
xor
pop
pop
pop
mov
push
lea
mov
call
ret
jmp
jmp
pop
pop
pop
pop
pop
ret
add
add
(bad)
(bad)
inc
add
add
mov
add
push
push
push
xor
mov
mov
mov
mov
mov
mov
mov
mov
xor
push
push
push
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
call
lea
xor
call
mov
call
mov
mov
cmp
je
xor
mov
mov
mov
lea
mov
xor
call
mov
call
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
lea
mov
xor
call
mov
mov
mov
call
mov
call
push
push
mov
call
jmp
mov
mov
mov
mov
xor
call
mov
call
mov
dec
test
jl
inc
call
mov
push
push
mov
call
mov
xor
xor
call
lea
mov
mov
call
lea
mov
mov
call
lea
mov
mov
call
lea
mov
mov
call
mov
call
push
push
lea
lea
mov
call
test
je
lea
mov
call
mov
mov
mov
mov
lea
call
mov
mov
call
mov
mov
call
lea
mov
call
mov
call
mov
mov
call
mov
mov
call
test
je
push
push
mov
call
mov
call
push
push
push
push
push
push
mov
call
push
call
mov
lea
push
lea
push
lea
push
push
call
push
call
mov
push
mov
call
push
call
jmp
lea
push
lea
push
mov
mov
xor
call
cmp
jne
jmp
mov
mov
mov
call
push
push
mov
call
dec
jne
mov
call
mov
call
push
call
mov
mov
call
xor
pop
pop
pop
mov
push
lea
mov
call
lea
call
ret
jmp
jmp
pop
pop
pop
mov
pop
ret
mov
push
mov
push
push
push
push
push
push
push
push
push
push
mov
mov
mov
mov
xor
push
push
push
mov
mov
call
mov
lea
lea
mov
call
mov
mov
mov
add
call
mov
shl
sub
push
mov
mov
mov
call
add
lea
mov
call
mov
mov
shl
sub
mov
lea
call
mov
lea
mov
call
mov
lea
mov
call
mov
lea
mov
call
lea
mov
call
mov
mov
lea
call
cmp
je
lea
mov
call
jmp
lea
mov
call
mov
lea
mov
call
cmp
je
lea
mov
call
jmp
lea
mov
call
mov
lea
mov
call
xor
pop
pop
pop
mov
push
lea
mov
call
ret
jmp
jmp
pop
pop
pop
mov
pop
ret
(bad)
(bad)
(bad)
inc
add
add
add
add
(bad)
(bad)
inc
add
add
add
add
in
mov
push
push
dec
jne
push
push
push
mov
xor
push
push
push
mov
mov
mov
call
xor
call
call
mov
mov
call
mov
mov
mov
mov
call
mov
call
mov
dec
test
jl
inc
xor
mov
add
mov
mov
mov
lea
xor
call
mov
call
push
push
mov
call
inc
dec
jne
mov
mov
mov
mov
call
mov
mov
mov
lea
mov
call
mov
mov
mov
push
push
push
push
mov
mov
mov
call
mov
mov
mov
push
push
push
push
mov
mov
mov
call
mov
mov
mov
push
push
push
push
mov
mov
mov
call
mov
mov
mov
push
push
push
push
mov
mov
mov
call
mov
mov
mov
push
push
push
push
mov
mov
mov
call
mov
mov
mov
push
push
push
push
mov
mov
mov
call
mov
mov
mov
push
push
push
push
mov
mov
mov
call
mov
mov
cmp
je
mov
mov
mov
push
push
push
push
mov
mov
mov
call
mov
mov
cmp
je
mov
mov
mov
push
push
push
push
mov
mov
mov
call
mov
push
push
push
push
mov
mov
mov
call
lea
mov
call
mov
lea
call
mov
push
push
push
push
mov
mov
mov
call
call
add
fstp
fwait
lea
mov
call
mov
push
push
push
push
mov
mov
mov
call
mov
movzx
shl
mov
mov
mov
push
push
push
push
mov
mov
mov
call
mov
call
mov
fild
fdiv
call
lea
call
mov
push
push
push
push
mov
mov
mov
call
push
push
push
push
mov
mov
mov
call
push
push
push
push
mov
mov
mov
call
mov
call
mov
dec
test
jl
inc
xor
mov
shl
sub
mov
mov
mov
lea
xor
call
mov
push
mov
shl
sub
mov
mov
mov
call
push
mov
shl
sub
mov
mov
mov
call
dec
sete
push
mov
shl
sub
mov
mov
mov
lea
xor
call
mov
push
mov
shl
sub
mov
mov
mov
lea
xor
call
mov
push
mov
shl
sub
mov
mov
mov
call
pop
pop
call
push
push
mov
call
inc
dec
jne
mov
call
mov
mov
mov
mov
call
push
call
mov
call
mov
dec
test
jl
inc
xor
lea
call
mov
shl
mov
mov
mov
call
mov
mov
cmp
ja
jmp
cmp
inc
add
inc
pop
add
xor
inc
add
add
cmp
(bad)
inc
add
mov
call
test
je
mov
jmp
mov
lea
mov
call
mov
push
mov
lea
call
mov
lea
call
mov
lea
pop
call
jmp
mov
call
test
je
mov
call
test
je
mov
jmp
mov
mov
lea
call
jmp
mov
call
test
je
mov
call
test
je
mov
jmp
mov
mov
lea
call
jmp
mov
call
test
je
lea
mov
call
jmp
mov
shl
mov
mov
mov
lea
xor
call
cmp
je
cmp
jge
mov
shl
mov
mov
mov
lea
xor
call
mov
push
lea
mov
call
mov
lea
pop
call
lea
mov
call
mov
call
mov
shl
mov
mov
mov
lea
xor
call
mov
push
mov
shl
mov
mov
mov
lea
xor
call
mov
push
mov
shl
mov
mov
mov
lea
xor
call
mov
push
mov
shl
mov
mov
mov
call
push
lea
push
mov
shl
mov
mov
mov
lea
xor
call
mov
push
mov
shl
mov
mov
mov
lea
xor
call
mov
mov
pop
call
mov
mov
call
push
push
mov
call
inc
dec
jne
call
mov
call
test
je
mov
mov
mov
mov
call
call
push
push
mov
call
mov
mov
mov
mov
call
mov
call
mov
dec
test
jl
inc
xor
mov
add
lea
mov
mov
mov
lea
xor
call
mov
lea
call
mov
call
mov
add
lea
mov
mov
mov
lea
xor
call
mov
call
mov
mov
add
lea
mov
mov
mov
lea
xor
call
mov
mov
add
call
mov
add
lea
mov
mov
mov
lea
xor
call
mov
add
lea
mov
mov
mov
call
test
jne
lea
push
mov
xor
mov
call
cmp
jne
mov
mov
lea
push
mov
add
lea
mov
mov
mov
lea
xor
call
mov
mov
mov
call
mov
call
push
push
mov
call
inc
dec
jne
mov
call
test
je
mov
call
mov
dec
test
jl
inc
xor
mov
add
mov
mov
mov
lea
xor
call
lea
mov
call
mov
mov
mov
mov
lea
call
mov
mov
call
mov
mov
call
mov
call
push
push
mov
call
inc
dec
jne
mov
call
mov
cmp
jne
mov
mov
mov
mov
call
mov
mov
call
push
call
mov
call
push
push
push
push
call
mov
cmp
je
call
jmp
mov
mov
call
mov
mov
mov
call
mov
mov
call
push
call
inc
mov
call
xor
pop
pop
pop
mov
push
lea
mov
call
lea
mov
call
lea
call
ret
jmp
jmp
pop
pop
pop
mov
pop
ret
add
(bad)
(bad)
push
add
push
dec
inc
push
push
inc
push
inc
pop
dec
imul
je
push
imul
inc
jne
jb
outs
je
gs
imul
outs
jae
popa
ins
ins
pop
add
add
(bad)
(bad)
(bad)
dec
add
add
jo
popa
jns
popa
ins
gs
(bad)
(bad)
dec
add
add
jo
popa
jns
gs
imul
(bad)
dec
add
push
gs
imul
jb
add
add
(bad)
(bad)
dec
add
push
gs
imul
jb
add
add
(bad)
(bad)
dec
add
add
bound
push
add
(bad)
(bad)
dec
add
add
jo
popa
jns
arpl
add
(bad)
(bad)
dec
add
add
imul
push
je
imul
dec
add
push
push
dec
dec
outs
outs
inc
bound
je
add
add
(bad)
(bad)
dec
add
add
ins
jo
imul
(bad)
(bad)
(bad)
dec
add
add
jae
popa
ins
ins
dec
outs
arpl
imul
dec
outs
jae
popa
ins
ins
push
outs
jne
arpl
add
(bad)
(bad)
(bad)
dec
add
add
jns
dec
dec
fs
add
(bad)
(bad)
(bad)
dec
add
add
jae
popa
ins
ins
inc
popa
je
add
(bad)
(bad)
dec
add
add
addr16
add
add
add
add
dec
jae
imul
imul
(bad)
(bad)
inc
add
add
add
add
(bad)
(bad)
dec
add
add
dec
outs
imul
(bad)
(bad)
(bad)
dec
add
add
push
gs
imul
inc
sbb
dec
cdq
(bad)
inc
lea
push
cmp
ja
jmp
mov
push
inc
add
inc
add
push
inc
add
push
inc
add
push
inc
add
push
inc
add
push
inc
add
push
inc
add
add
mov
mov
jmp
mov
mov
jmp
mov
mov
jmp
mov
mov
jmp
mov
mov
jmp
mov
mov
jmp
mov
mov
jmp
mov
mov
jmp
mov
mov
mov
pop
ret
nop
push
mov
add
push
push
push
xor
mov
mov
mov
mov
mov
mov
mov
mov
xor
push
push
push
mov
xor
mov
mov
mov
cmp
sete
mov
mov
call
test
jbe
cmp
jb
xor
jmp
mov
mov
mov
mov
call
mov
mov
call
cmp
seta
mov
call
mov
mov
call
mov
mov
call
cmp
je
mov
call
mov
mov
call
sub
mov
call
mov
sub
sub
mov
call
mov
call
mov
mov
call
add
mov
mov
call
cmp
jae
xor
xor
mov
cmp
je
mov
mov
call
call
inc
cmp
jne
xor
mov
mov
call
call
xor
mov
cmp
ja
jmp
jg
inc
add
or
aaa
or
js
inc
add
or
or
inc
add
inc
add
or
add
push
inc
add
mov
mov
mov
call
jmp
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
jmp
mov
mov
call
mov
mov
call
mov
xor
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
jmp
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
jmp
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
lea
mov
mov
call
lea
xor
mov
call
jmp
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
jmp
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
jmp
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
push
push
lea
mov
call
push
lea
mov
call
mov
call
test
je
mov
call
test
jne
push
push
mov
mov
push
lea
mov
call
push
push
lea
mov
call
push
lea
mov
call
lea
call
mov
call
test
je
mov
call
test
je
mov
call
test
je
push
mov
mov
push
push
lea
mov
call
mov
call
test
je
mov
call
test
je
push
push
mov
mov
push
push
lea
mov
call
mov
call
test
je
mov
call
test
je
push
push
mov
mov
push
lea
mov
call
cmp
je
push
push
mov
mov
push
push
lea
mov
call
mov
mov
call
jmp
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
xor
call
mov
xor
call
mov
call
mov
mov
call
jmp
mov
call
mov
mov
call
mov
call
mov
mov
call
mov
call
mov
mov
call
mov
call
test
je
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
call
mov
mov
call
mov
call
mov
mov
call
mov
mov
call
mov
mov
call
mov
mov
mov
mov
call
jmp
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
call
mov
mov
call
mov
mov
call
mov
mov
call
mov
call
test
jne
mov
mov
call
mov
call
test
jne
mov
mov
call
mov
call
test
jne
mov
call
test
jne
mov
mov
call
mov
call
test
jne
mov
call
test
je
mov
mov
call
mov
mov
call
mov
mov
call
mov
xor
call
mov
call
jmp
mov
mov
mov
call
mov
call
push
mov
mov
mov
push
call
mov
call
test
je
mov
call
test
je
lea
mov
mov
mov
xor
call
lea
mov
call
mov
call
push
call
push
mov
call
mov
push
call
cmp
jae
push
push
push
push
push
push
call
mov
call
test
je
mov
call
test
je
lea
mov
mov
mov
xor
call
lea
mov
call
mov
call
push
call
push
push
push
mov
call
push
push
push
call
mov
call
test
je
mov
call
test
je
push
push
push
lea
mov
mov
mov
xor
call
mov
call
push
push
push
call
mov
call
test
je
mov
call
test
je
call
cmp
jbe
lea
push
push
call
push
call
test
je
lea
push
push
push
call
test
je
mov
mov
mov
xor
mov
lea
push
lea
push
push
lea
push
push
mov
push
call
push
push
call
call
xor
mov
mov
cmp
jne
mov
mov
mov
mov
call
mov
mov
call
xor
pop
pop
pop
mov
push
lea
mov
call
lea
mov
call
ret
jmp
jmp
pop
pop
pop
mov
pop
ret
add
(bad)
(bad)
inc
add
and
and
add
add
(bad)
(bad)
(bad)
inc
add
or
add
add
(bad)
(bad)
inc
add
add
gs
push
ja
push
jb
jbe
ins
gs
in
mov
push
push
dec
jne
push
push
push
push
mov
xor
push
push
push
mov
xor
mov
mov
cmp
jne
mov
call
test
je
xor
mov
mov
cmp
jne
lea
mov
call
cmp
je
inc
lea
mov
call
mov
lea
call
mov
mov
push
call
mov
lea
mov
mov
mov
call
lea
push
lea
mov
call
lea
mov
call
mov
lea
call
lea
pop
call
inc
jne
push
mov
mov
mov
call
push
lea
push
mov
mov
lea
mov
mov
mov
xor
call
mov
call
push
mov
mov
mov
push
call
dec
push
call
jmp
inc
mov
call
xor
pop
pop
pop
mov
push
lea
mov
call
lea
mov
call
ret
jmp
jmp
pop
pop
pop
mov
pop
ret
add
(bad)
(bad)
inc
add
add
pop
add
push
mov
mov
call
test
je
dec
xor
mov
mov
cmp
jne
mov
mov
mov
mov
call
xor
mov
mov
mov
cmp
je
cmp
jne
mov
mov
call
mov
call
pop
ret
nop
push
mov
cmp
jne
mov
push
push
push
mov
push
call
xor
pop
ret
nop
push
mov
add
push
push
push
xor
mov
mov
mov
xor
push
push
push
mov
xor
lea
xor
mov
call
lea
push
call
test
jne
cmp
je
push
mov
push
mov
call
mov
xor
mov
push
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
call
mov
lea
push
call
mov
cmp
setne
test
je
mov
push
mov
push
call
mov
push
mov
push
mov
call
mov
mov
call
mov
push
mov
push
mov
call
xor
pop
pop
pop
mov
push
lea
call
ret
jmp
jmp
mov
pop
pop
pop
mov
pop
ret
nop
push
mov
mov
push
push
dec
jne
push
push
mov
xor
push
push
push
mov
lea
mov
call
lea
mov
mov
mov
call
mov
lea
call
test
je
cmp
je
lea
mov
mov
mov
xor
call
mov
mov
cmp
je
lea
mov
call
mov
push
lea
push
mov
call
mov
mov
mov
call
mov
lea
call
mov
pop
call
jne
lea
mov
call
mov
lea
call
jmp
lea
mov
mov
mov
xor
call
mov
push
lea
mov
call
mov
lea
pop
call
mov
call
cmp
jne
lea
mov
call
mov
mov
call
xor
pop
pop
pop
mov
push
lea
mov
call
ret
jmp
jmp
pop
mov
pop
ret
add
(bad)
(bad)
inc
add
add
add
(bad)
lock
mov
call
test
je
push
mov
call
push
mov
call
push
mov
call
call
mov
mov
call
mov
call
test
je
mov
call
test
je
mov
call
test
je
mov
call
push
mov
call
push
mov
call
push
push
mov
call
push
mov
call
call
mov
mov
pop
call
jmp
mov
call
mov
mov
call
mov
mov
call
mov
mov
call
mov
mov
call
call
mov
mov
mov
call
jmp
mov
call
test
je
mov
call
push
mov
xor
xor
call
push
mov
call
push
mov
call
call
mov
mov
pop
call
jmp
mov
call
push
mov
call
push
mov
call
call
mov
mov
pop
call
add
pop
ret
nop
push
add
mov
mov
call
test
je
mov
mov
call
mov
call
test
je
mov
call
test
je
mov
call
push
mov
call
push
mov
call
push
push
mov
call
push
mov
call
call
mov
mov
pop
call
jmp
mov
call
mov
mov
call
mov
mov
call
mov
mov
call
mov
mov
call
call
mov
mov
mov
call
jmp
mov
call
test
je
mov
call
push
mov
xor
xor
call
push
mov
call
push
mov
call
call
mov
mov
pop
call
jmp
mov
call
push
mov
call
push
mov
call
call
mov
mov
pop
call
add
pop
ret
push
push
mov
mov
call
test
jne
mov
call
test
je
xor
jmp
mov
mov
mov
call
mov
mov
call
mov
mov
call
test
je
mov
mov
call
mov
xor
mov
call
pop
pop
ret
mov
mov
call
mov
mov
mov
call
pop
pop
ret
nop
push
mov
xor
push
push
push
push
push
push
push
mov
xor
push
push
push
mov
xor
mov
mov
cmp
jne
push
call
mov
lea
mov
call
mov
call
cmp
jge
mov
xor
call
jmp
lea
mov
call
mov
mov
lea
call
lea
mov
call
mov
call
mov
mov
call
push
call
lea
mov
call
mov
lea
call
mov
mov
call
xor
pop
pop
pop
mov
push
lea
mov
call
ret
jmp
jmp
pop
pop
mov
pop
ret
(bad)
(bad)
(bad)
inc
add
add
pop
add
push
mov
push
push
mov
xor
push
push
push
mov
xor
mov
mov
cmp
jne
lea
mov
call
cmp
setne
mov
call
xor
pop
pop
pop
mov
push
lea
call
ret
jmp
jmp
pop
pop
pop
ret
mov
mov
mov
call
ret
mov
call
test
je
mov
mov
mov
call
call
ret
nop
push
push
push
mov
mov
xor
cmp
jne
cmp
je
mov
mov
mov
call
test
jne
mov
xor
call
mov
pop
pop
pop
ret
nop
push
push
mov
mov
call
mov
lea
push
mov
mov
mov
call
add
mov
mov
pop
pop
ret
nop
push
mov
mov
push
push
dec
jne
push
push
push
mov
mov
xor
push
push
push
mov
mov
mov
mov
call
mov
call
test
je
xor
call
mov
mov
mov
call
mov
mov
mov
call
mov
call
test
je
mov
call
mov
mov
mov
call
push
lea
xor
mov
xor
call
mov
mov
xor
call
mov
mov
cmp
je
mov
call
mov
mov
mov
call
mov
mov
mov
call
mov
call
mov
mov
call
mov
mov
call
mov
mov
mov
call
mov
mov
call
mov
call
test
je
mov
call
mov
mov
mov
call
push
lea
xor
mov
xor
call
mov
mov
xor
call
mov
call
test
je
mov
call
mov
mov
mov
call
mov
mov
mov
call
mov
call
test
je
mov
call
test
je
mov
call
lea
mov
mov
call
mov
mov
call
mov
mov
mov
call
lea
mov
call
mov
mov
mov
call
mov
mov
call
mov
dec
test
jl
inc
mov
mov
mov
call
lea
lea
mov
call
mov
mov
call
inc
dec
jne
mov
call
mov
mov
mov
mov
call
mov
call
test
je
mov
call
mov
mov
call
mov
call
mov
mov
call
mov
call
test
je
lea
mov
call
cmp
jne
xor
jmp
mov
mov
call
mov
call
test
je
mov
call
mov
mov
mov
call
lea
mov
mov
call
mov
mov
call
lea
mov
mov
call
mov
mov
call
lea
mov
mov
call
mov
mov
call
mov
call
test
jne
mov
call
mov
mov
call
mov
call
test
jne
mov
call
mov
mov
call
mov
call
test
jne
mov
call
test
je
mov
mov
call
mov
call
test
je
mov
call
mov
mov
mov
call
mov
call
mov
call
test
je
mov
call
mov
call
lea
mov
mov
mov
xor
call
mov
mov
call
lea
mov
call
mov
lea
call
mov
mov
call
mov
call
test
jne
mov
call
mov
mov
call
mov
mov
call
mov
mov
call
mov
mov
call
mov
call
mov
cmp
je
mov
call
mov
mov
push
call
mov
mov
call
mov
call
test
je
mov
xor
call
mov
xor
call
mov
call
test
je
mov
xor
call
mov
xor
call
mov
xor
call
mov
xor
call
mov
mov
call
mov
mov
mov
call
mov
mov
mov
call
lea
mov
mov
call
mov
mov
call
mov
call
mov
mov
call
lea
mov
mov
call
mov
mov
call
mov
call
mov
mov
call
lea
mov
mov
call
mov
mov
call
mov
call
mov
mov
call
mov
call
test
je
mov
mov
mov
call
mov
call
mov
mov
call
mov
call
mov
mov
call
mov
call
mov
mov
call
mov
call
mov
mov
call
mov
mov
mov
call
mov
mov
mov
call
lea
mov
mov
mov
xor
call
mov
mov
call
mov
call
mov
mov
call
sub
mov
call
mov
sub
sub
mov
call
mov
call
mov
mov
call
add
mov
mov
call
mov
cmp
je
mov
call
mov
call
mov
mov
call
mov
mov
xor
mov
call
mov
mov
call
mov
mov
call
xor
pop
pop
pop
mov
push
lea
mov
call
ret
jmp
jmp
pop
pop
pop
mov
pop
ret
add
(bad)
(bad)
(bad)
inc
add
add
sub
push
push
add
mov
mov
test
je
mov
mov
call
push
mov
call
call
mov
mov
pop
call
add
pop
pop
ret
nop
mov
mov
call
ret
lea
mov
mov
call
ret
lea
mov
mov
call
ret
lea
push
mov
push
push
push
mov
xor
push
push
push
mov
lea
mov
call
mov
lea
call
mov
mov
mov
mov
call
sete
mov
call
xor
pop
pop
pop
mov
push
lea
mov
call
ret
jmp
jmp
pop
pop
pop
pop
ret
lea
push
mov
push
push
push
push
mov
xor
push
push
push
mov
lea
push
mov
call
mov
mov
xor
call
cmp
je
lea
mov
call
lea
mov
mov
mov
xor
call
mov
lea
mov
call
mov
mov
call
xor
pop
pop
pop
mov
push
lea
mov
call
ret
jmp
jmp
pop
mov
pop
ret
add
(bad)
(bad)
(bad)
inc
add
add
add
dec
(bad)
(bad)
inc
mov
push
mov
call
pop
ret
push
mov
push
push
push
mov
mov
xor
push
push
push
mov
mov
cmp
je
mov
jmp
mov
cmp
je
mov
call
call
lea
mov
call
mov
mov
mov
mov
call
jne
call
jmp
push
mov
mov
call
push
mov
mov
mov
call
push
mov
mov
mov
push
call
cmp
jne
mov
call
call
jmp
mov
xor
pop
pop
pop
mov
push
lea
call
ret
jmp
jmp
pop
pop
pop
pop
ret
mov
mov
xor
mov
call
push
mov
mov
call
push
mov
mov
mov
call
push
mov
mov
mov
push
call
ret
lea
push
mov
xor
push
push
push
mov
inc
jne
mov
call
mov
mov
call
mov
call
mov
call
mov
call
mov
call
mov
call
xor
pop
pop
pop
mov
push
ret
jmp
jmp
pop
ret
sub
ret
cwde
es
add
add
add
add
add
add
mov
inc
add
add
xor
add
adc
inc
add
add
adc
inc
add
inc
add
es
add
add
xor
add
adc
inc
add
add
adc
inc
add
inc
add
es
add
add
xor
add
add
inc
add
add
adc
inc
add
inc
add
inc
add
add
xor
adc
inc
add
add
adc
inc
add
inc
add
inc
add
add
ss
add
adc
inc
add
add
adc
inc
add
inc
add
add
add
aaa
add
add
adc
inc
add
add
adc
inc
add
inc
add
add
add
cmp
add
adc
inc
add
add
adc
inc
add
inc
add
cmp
add
adc
inc
add
add
adc
inc
add
inc
add
xor
add
add
adc
inc
add
add
adc
inc
add
rol
inc
add
add
xor
add
add
adc
inc
add
add
adc
inc
add
shl
inc
add
add
xor
add
add
adc
inc
add
add
adc
inc
add
rol
add
add
xor
add
add
adc
inc
add
add
adc
inc
add
shl
add
add
xor
add
add
adc
inc
add
add
adc
inc
add
rol
adc
cs
add
inc
add
add
adc
inc
add
shl
adc
cs
add
adc
inc
add
add
adc
inc
add
rcl
mov
mov
mov
xor
call
mov
mov
mov
call
mov
mov
call
mov
mov
mov
mov
mov
call
mov
mov
xor
call
mov
mov
xor
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
call
mov
mov
call
mov
mov
call
mov
call
mov
mov
mov
push
push
push
mov
call
push
call
push
call
mov
push
push
mov
mov
mov
call
mov
push
push
mov
mov
mov
call
mov
push
push
mov
mov
call
mov
push
push
mov
mov
call
mov
mov
xor
call
mov
mov
call
mov
call
mov
call
mov
mov
mov
mov
call
mov
call
mov
mov
mov
call
mov
mov
xor
call
mov
mov
call
mov
call
mov
call
mov
mov
mov
mov
call
mov
call
mov
mov
mov
call
mov
push
push
mov
mov
mov
call
mov
push
push
mov
mov
mov
call
mov
push
push
mov
mov
mov
call
mov
push
push
mov
mov
mov
call
push
push
push
mov
mov
push
call
mov
mov
call
pop
pop
pop
ret
add
(bad)
(bad)
(bad)
call
add
add
popa
jb
and
jae
popa
ins
ins
and
imul
dec
inc
dec
dec
dec
inc
dec
dec
add
add
(bad)
(bad)
(bad)
inc
add
add
outs
ins
popa
add
(bad)
(bad)
(bad)
inc
add
add
outs
ins
popa
add
push
mov
mov
mov
mov
call
sete
xor
pop
ret
(bad)
(bad)
(bad)
inc
add
add
add
add
add
stos
(bad)
inc
nop
push
mov
push
push
push
push
push
push
mov
mov
mov
xor
push
push
push
mov
lea
call
test
je
lea
mov
call
lea
call
push
push
push
lea
mov
call
push
push
mov
mov
call
xor
pop
pop
pop
mov
push
lea
mov
call
ret
jmp
jmp
pop
pop
pop
mov
pop
ret
add
(bad)
(bad)
inc
gs
jo
add
add
(bad)
(bad)
inc
add
add
outs
jae
pop
add
(bad)
(bad)
(bad)
inc
add
cs
jo
add
add
in
xor
push
push
push
push
push
push
push
push
mov
xor
push
push
push
mov
xor
lea
xor
mov
call
mov
call
push
call
inc
cmp
jne
test
je
mov
call
mov
add
sub
jl
inc
mov
lea
xor
mov
call
mov
call
push
call
lea
lea
xor
call
mov
call
push
call
inc
dec
jne
lea
xor
mov
call
mov
lea
call
mov
call
push
call
xor
pop
pop
pop
mov
push
lea
mov
call
ret
jmp
jmp
pop
pop
pop
mov
pop
ret
nop
push
push
push
push
add
mov
mov
mov
call
mov
mov
mov
call
xor
mov
test
jbe
mov
mov
movzx
mov
mov
sub
imul
add
add
mov
imul
add
mov
mov
xor
div
imul
sub
cmp
jae
add
cmp
jbe
cmp
jae
mov
call
mov
inc
dec
jne
add
pop
pop
pop
pop
ret
nop
push
mov
add
push
push
push
mov
mov
mov
mov
cmp
jne
cmp
jbe
jmp
jle
mov
jmp
mov
mov
call
mov
mov
xor
cmp
jne
cmp
jae
jmp
jge
mov
xor
mov
mov
jmp
mov
mov
mov
mov
mov
mov
mov
mov
call
xor
mov
mov
mov
mov
mov
call
cmp
je
mov
mov
sub
sbb
mov
mov
add
adc
mov
mov
call
cmp
jne
cmp
je
cmp
jne
cmp
je
cmp
jne
cmp
jne
mov
mov
call
mov
mov
pop
pop
pop
mov
pop
ret
mov
mov
cmp
je
mov
mov
mov
mov
push
call
ret
mov
push
mov
push
push
push
mov
mov
add
mov
call
mov
mov
mov
call
dec
sub
jb
dec
sub
jb
dec
jne
mov
mov
mov
call
jmp
mov
mov
call
mov
call
mov
call
pop
pop
pop
pop
ret
nop
push
mov
add
push
push
push
xor
mov
mov
mov
xor
push
push
push
mov
xor
mov
mov
call
mov
mov
mov
call
mov
mov
mov
call
mov
mov
dec
test
jl
inc
xor
lea
mov
mov
call
lea
push
mov
mov
mov
call
mov
lea
call
mov
mov
call
jne
mov
mov
call
test
jle
lea
mov
mov
call
mov
call
fstp
fld
fcomp
fnstsw
sahf
jbe
mov
mov
mov
mov
inc
dec
jne
mov
call
mov
call
xor
pop
pop
pop
mov
push
lea
mov
call
lea
call
ret
jmp
jmp
fld
pop
pop
pop
mov
pop
ret
add
add
(bad)
(bad)
jmp
add
add
inc
push
push
inc
push
inc
pop
dec
imul
je
cs
inc
push
inc
jb
ins
gs
jb
pop
jo
ins
imul
inc
add
add
add
(bad)
(bad)
(bad)
inc
add
add
add
add
push
add
mov
lea
push
push
push
call
push
call
mov
test
jne
call
cmp
jne
lea
push
push
call
push
call
mov
test
je
mov
call
mov
lea
push
push
push
push
mov
push
call
mov
mov
push
call
test
je
lea
push
push
push
push
push
push
push
push
push
push
push
call
mov
dec
test
jl
inc
xor
mov
push
mov
push
call
test
je
mov
jmp
inc
dec
jne
mov
push
call
mov
call
mov
add
pop
pop
pop
ret
lea
push
mov
add
push
push
mov
mov
mov
cmp
je
mov
mov
mov
mov
mov
jmp
mov
mov
mov
mov
mov
mov
mov
mov
call
mov
mov
call
mov
shr
mov
mov
shr
and
mov
and
mov
mov
call
mov
shr
mov
mov
shr
and
mov
and
mov
mov
dec
test
jl
inc
xor
mov
sub
imul
cdq
idiv
mov
add
shl
mov
sub
imul
cdq
idiv
add
shl
or
mov
sub
imul
cdq
idiv
add
or
mov
cmp
je
push
mov
mov
xor
call
jmp
push
mov
xor
mov
call
inc
dec
jne
cmp
je
mov
mov
call
mov
jmp
mov
mov
call
mov
mov
call
call
mov
push
push
call
push
push
push
push
call
push
mov
push
mov
push
push
push
mov
call
call
push
mov
mov
push
mov
mov
push
push
push
push
call
cmp
je
mov
test
jns
add
sar
test
jl
inc
xor
push
mov
shl
mov
mov
call
inc
dec
jne
jmp
mov
test
jns
add
sar
test
jl
inc
xor
mov
shl
push
mov
xor
mov
call
inc
dec
jne
mov
call
mov
call
pop
pop
mov
pop
ret
mov
push
mov
add
push
xor
mov
mov
mov
xor
push
push
push
mov
lea
xor
mov
call
push
lea
push
push
call
lea
lea
mov
call
mov
lea
call
cmp
je
mov
mov
call
test
jle
mov
mov
call
test
jne
mov
mov
xor
pop
pop
pop
mov
push
lea
call
lea
call
ret
jmp
jmp
mov
pop
mov
pop
ret
add
(bad)
(bad)
call
add
add
inc
push
push
and
push
push
inc
dec
dec
and
dec
inc
push
add
in
add
push
xor
mov
mov
mov
call
xor
push
push
push
mov
lea
mov
call
mov
mov
call
xor
mov
push
push
call
mov
xor
pop
pop
pop
mov
push
lea
mov
call
ret
jmp
jmp
mov
pop
pop
pop
pop
ret
nop
push
push
push
push
mov
xor
test
jns
call
push
push
push
call
mov
test
jns
call
push
mov
test
jns
call
push
call
test
je
mov
push
test
jns
call
push
call
cmp
sbb
inc
test
jns
call
push
call
mov
pop
pop
pop
pop
ret
mov
push
mov
add
push
xor
mov
mov
mov
mov
mov
call
xor
push
push
push
mov
xor
mov
call
mov
cmp
je
mov
lea
mov
call
test
je
lea
lea
mov
call
mov
lea
call
mov
lea
call
mov
mov
call
jne
mov
test
jns
call
call
lea
mov
call
test
jne
push
call
xor
pop
pop
pop
mov
push
lea
mov
call
lea
call
ret
jmp
jmp
pop
mov
pop
ret
mov
push
mov
add
push
add
push
push
push
xor
mov
mov
mov
mov
mov
call
xor
push
push
push
mov
lea
lea
mov
call
mov
shr
test
jns
call
mov
dec
test
jl
inc
xor
cmp
jbe
call
mov
push
push
push
call
mov
test
je
lea
push
lea
mov
mov
call
push
lea
mov
mov
call
push
call
lea
lea
mov
call
mov
lea
call
mov
lea
call
mov
mov
call
jne
cmp
jbe
call
mov
test
jns
call
call
inc
dec
jne
xor
pop
pop
pop
mov
push
lea
mov
call
lea
call
ret
jmp
jmp
pop
pop
pop
mov
pop
ret
nop
push
mov
push
push
push
mov
mov
mov
call
xor
push
push
push
mov
mov
mov
call
mov
test
jle
push
mov
dec
mov
mov
call
jmp
mov
mov
call
xor
pop
pop
pop
mov
push
lea
call
ret
jmp
jmp
pop
pop
pop
pop
ret
add
(bad)
(bad)
inc
add
add
sub
add
in
mov
push
push
dec
jne
push
push
push
push
mov
xor
push
push
push
mov
lea
mov
call
mov
mov
call
jne
push
push
call
call
lea
xor
xor
call
mov
lea
call
mov
call
lea
xor
call
mov
call
mov
mov
mov
mov
call
mov
mov
mov
call
mov
mov
mov
call
mov
mov
mov
call
mov
mov
mov
call
mov
mov
mov
call
lea
mov
mov
call
lea
mov
mov
call
lea
mov
mov
call
cmp
je
mov
call
xor
call
push
push
push
mov
mov
mov
push
call
call
mov
mov
push
sar
cmp
pop
je
call
mov
mov
xor
call
xor
mov
inc
push
mov
mov
mov
call
add
xor
mov
test
jl
inc
xor
lea
mov
call
mov
mov
test
je
cmp
jb
call
lea
call
inc
dec
jne
mov
call
mov
mov
shl
push
mov
mov
mov
call
add
dec
test
jl
inc
xor
lea
mov
call
mov
mov
test
je
cmp
jb
call
lea
call
inc
dec
jne
mov
dec
test
jl
inc
xor
lea
push
mov
shl
mov
test
je
cmp
jb
call
mov
call
test
jns
call
mov
shl
add
mov
test
je
cmp
jb
call
mov
push
mov
shl
inc
mov
test
je
cmp
jb
call
mov
pop
call
mov
mov
test
je
cmp
jb
call
lea
call
mov
test
je
cmp
jb
call
cmp
jne
mov
test
je
cmp
jb
call
lea
mov
shl
add
mov
test
je
cmp
jb
call
mov
call
inc
dec
jne
push
mov
mov
mov
call
add
mov
call
mov
call
mov
test
jle
mov
lea
mov
call
lea
mov
call
mov
mov
call
jne
mov
mov
mov
call
jne
mov
mov
mov
call
jne
mov
mov
test
je
cmp
jb
call
lea
mov
call
mov
mov
call
jne
mov
mov
test
je
cmp
jb
call
lea
mov
call
lea
push
mov
mov
mov
call
mov
mov
call
jne
lea
push
mov
call
mov
mov
mov
call
mov
lea
call
mov
mov
mov
test
je
cmp
jb
call
lea
call
lea
push
mov
mov
mov
call
mov
mov
call
jne
mov
mov
test
je
cmp
jb
call
lea
push
mov
call
mov
mov
mov
call
lea
push
mov
mov
mov
call
mov
mov
call
jne
push
mov
call
mov
mov
mov
call
lea
push
mov
mov
mov
call
mov
mov
call
jne
lea
push
mov
call
mov
mov
mov
call
mov
lea
call
mov
mov
mov
test
je
cmp
jb
call
mov
call
jne
mov
mov
test
je
cmp
jb
call
lea
call
inc
dec
jne
cmp
je
mov
mov
test
je
cmp
jb
call
cmp
je
mov
call
call
mov
mov
test
je
cmp
jb
call
mov
lea
xor
call
mov
mov
call
mov
mov
mov
call
cmp
jne
push
mov
mov
mov
push
call
jmp
mov
mov
xor
call
mov
call
mov
shl
sub
push
mov
mov
mov
call
add
mov
dec
test
jl
inc
xor
lea
mov
call
mov
mov
test
je
cmp
jb
call
lea
call
inc
dec
jne
mov
call
lea
push
mov
mov
mov
call
add
mov
dec
test
jl
inc
xor
lea
mov
call
mov
mov
test
je
cmp
jb
call
lea
call
inc
dec
jne
mov
call
mov
add
push
mov
mov
mov
call
add
mov
dec
test
jl
inc
xor
lea
mov
call
mov
mov
test
je
cmp
jb
call
lea
call
inc
dec
jne
mov
call
mov
shl
push
mov
mov
mov
call
add
mov
dec
test
jl
inc
xor
lea
mov
call
mov
mov
test
je
cmp
jb
call
lea
call
inc
dec
jne
mov
call
lea
push
mov
mov
mov
call
add
mov
dec
test
jl
inc
xor
lea
mov
call
mov
mov
test
je
cmp
jb
call
lea
call
inc
dec
jne
mov
call
mov
add
push
mov
mov
mov
call
add
mov
dec
test
jl
inc
xor
lea
mov
call
mov
mov
test
je
cmp
jb
call
lea
call
inc
dec
jne
mov
call
mov
mov
call
add
mov
add
lea
push
mov
mov
mov
call
add
mov
dec
test
jl
inc
xor
lea
mov
call
mov
mov
test
je
cmp
jb
call
lea
call
inc
dec
jne
mov
call
mov
add
lea
push
mov
mov
mov
call
add
mov
dec
test
jl
inc
xor
lea
mov
call
mov
mov
test
je
cmp
jb
call
lea
call
inc
dec
jne
mov
call
mov
add
push
mov
mov
mov
call
add
mov
dec
test
jl
inc
xor
lea
mov
call
mov
mov
test
je
cmp
jb
call
lea
call
inc
dec
jne
mov
call
mov
add
push
mov
mov
mov
call
add
mov
dec
test
jl
inc
xor
lea
mov
call
mov
mov
test
je
cmp
jb
call
lea
call
inc
dec
jne
mov
call
mov
shl
push
mov
mov
mov
call
add
mov
dec
test
jl
inc
xor
lea
mov
call
mov
mov
test
je
cmp
jb
call
lea
call
inc
dec
jne
mov
call
mov
mov
call
imul
lea
push
mov
mov
mov
call
add
mov
test
jle
mov
lea
mov
call
mov
mov
test
je
cmp
jb
call
lea
call
inc
dec
jne
mov
mov
push
sar
cmp
pop
je
call
mov
mov
xor
call
cmp
je
lea
xor
mov
call
mov
call
mov
mov
mov
call
push
push
mov
mov
call
mov
call
mov
mov
call
mov
lea
call
mov
mov
mov
call
mov
call
jmp
xor
mov
test
jle
lea
mov
call
mov
push
lea
call
mov
lea
pop
call
mov
call
mov
lea
mov
call
mov
call
mov
mov
cdq
push
push
mov
mov
call
mov
call
dec
jne
mov
call
cmp
je
mov
mov
call
mov
dec
test
jl
inc
xor
mov
shl
mov
test
je
cmp
jb
call
mov
lea
call
mov
push
lea
mov
call
mov
pop
call
test
jle
mov
cmp
jbe
call
mov
jmp
inc
dec
jne
cmp
jne
mov
call
mov
call
dec
jle
cmp
jne
mov
mov
mov
call
mov
mov
call
mov
mov
mov
call
cmp
jne
mov
call
call
mov
call
dec
jle
cmp
jbe
mov
xor
mov
shl
mov
test
je
cmp
jb
call
mov
call
mov
call
mov
test
jle
mov
mov
call
xor
mov
imul
add
mov
test
je
cmp
jb
call
mov
mov
test
je
cmp
jb
call
lea
call
inc
dec
jne
jmp
mov
xor
mov
test
je
cmp
jb
call
mov
call
lea
mov
call
mov
mov
call
lea
xor
mov
shl
add
mov
test
je
cmp
jb
call
mov
call
cmp
je
mov
call
cmp
jbe
call
mov
mov
jmp
mov
mov
lea
xor
mov
shl
add
mov
test
je
cmp
jb
call
mov
call
cmp
je
mov
call
cmp
jbe
call
mov
mov
jmp
mov
mov
mov
call
call
test
je
cmp
jne
push
mov
mov
test
je
cmp
jb
call
mov
call
push
mov
mov
test
je
cmp
jb
call
mov
mov
mov
test
je
cmp
jb
call
mov
lea
call
mov
call
push
mov
mov
mov
push
call
mov
call
call
mov
call
test
je
call
test
jne
push
mov
call
push
mov
mov
test
je
cmp
jb
call
mov
call
push
mov
mov
mov
push
call
mov
call
call
mov
call
test
je
mov
mov
test
je
cmp
jb
call
mov
call
fstp
fwait
call
fstp
fwait
mov
call
test
je
fld
fcomp
fnstsw
sahf
jb
mov
call
test
jne
fld
fcomp
fnstsw
sahf
je
lea
mov
mov
test
je
cmp
jb
call
mov
call
mov
call
test
je
mov
push
push
mov
mov
test
je
cmp
jb
call
push
lea
mov
call
jmp
xor
or
test
jns
call
push
mov
call
push
mov
call
push
mov
mov
mov
push
call
cmp
jne
push
push
push
mov
mov
test
je
cmp
jb
call
mov
call
push
push
push
call
mov
call
call
mov
call
test
je
lea
mov
mov
test
je
cmp
jb
call
mov
call
mov
call
cmp
jge
mov
xor
jmp
mov
mov
call
sub
jb
je
jmp
mov
call
push
push
call
mov
jmp
mov
call
mov
test
je
mov
mov
cmp
je
mov
mov
cmp
je
push
push
push
push
call
test
je
cmp
jne
jmp
lea
mov
call
call
cmp
jbe
mov
call
jmp
mov
call
mov
call
test
je
cmp
jne
mov
mov
call
xor
call
mov
mov
xor
xor
call
push
push
call
push
push
call
mov
pop
pop
call
call
mov
mov
call
push
mov
mov
call
pop
call
mov
mov
mov
call
test
je
mov
call
xor
push
mov
call
push
mov
call
push
mov
mov
call
push
mov
mov
call
push
mov
mov
call
call
pop
pop
call
mov
mov
call
push
mov
mov
call
pop
call
jmp
xor
xor
call
mov
mov
lea
xor
mov
call
mov
mov
mov
call
mov
call
sub
jb
je
dec
je
jmp
mov
mov
call
push
mov
mov
call
pop
call
jmp
lea
mov
mov
call
lea
push
mov
mov
call
call
mov
mov
mov
pop
call
mov
mov
call
push
mov
mov
call
pop
call
jmp
mov
mov
call
mov
mov
sub
mov
fild
fdiv
call
push
sar
cmp
pop
je
call
push
mov
mov
call
mov
mov
sub
mov
fild
fdiv
call
push
sar
cmp
pop
je
call
push
mov
mov
call
call
mov
mov
mov
pop
call
mov
mov
call
push
mov
mov
call
pop
call
mov
mov
test
je
cmp
jb
call
mov
lea
xor
call
mov
mov
mov
call
mov
mov
test
je
cmp
jb
call
mov
lea
xor
call
mov
mov
mov
call
mov
mov
call
mov
mov
call
mov
mov
mov
call
mov
mov
test
je
cmp
jb
call
mov
mov
call
mov
call
mov
mov
call
mov
call
mov
cmp
jbe
call
mov
call
mov
call
mov
mov
call
mov
mov
call
mov
mov
call
mov
mov
call
mov
call
mov
mov
call
mov
call
mov
cmp
jbe
call
mov
call
mov
call
mov
mov
mov
call
mov
mov
test
je
cmp
jb
call
mov
mov
call
mov
mov
call
mov
mov
mov
call
sub
sub
push
mov
mov
call
push
mov
mov
call
pop
sub
sub
mov
mov
pop
call
jmp
mov
mov
call
mov
call
test
je
mov
call
test
je
call
mov
mov
lea
xor
mov
call
mov
mov
mov
call
jmp
xor
xor
call
mov
mov
lea
xor
mov
call
mov
mov
mov
call
mov
call
test
je
mov
call
test
je
call
mov
mov
lea
xor
mov
call
mov
mov
mov
call
jmp
xor
xor
call
mov
mov
lea
xor
mov
call
mov
mov
mov
call
mov
call
test
je
call
mov
mov
lea
xor
mov
call
mov
mov
mov
call
mov
call
test
jne
mov
call
test
jne
mov
call
test
je
call
mov
mov
lea
xor
mov
call
mov
mov
mov
call
mov
call
test
je
call
mov
mov
lea
xor
mov
call
mov
mov
mov
call
xor
pop
pop
pop
mov
push
lea
mov
call
lea
mov
call
lea
mov
call
ret
jmp
jmp
pop
pop
pop
mov
pop
ret
add
add
(bad)
(bad)
inc
add
je
jae
add
add
cs
jae
ins
cs
add
inc
jb
outs
jb
add
push
push
je
jo
imul
jb
and
jb
jne
je
fs
gs
jae
and
je
imul
ja
arpl
jns
outs
data16
and
outs
addr16
ins
cs
(bad)
(bad)
inc
add
add
push
add
(bad)
(bad)
(bad)
inc
add
add
dec
inc
add
(bad)
(bad)
inc
add
add
push
push
add
(bad)
(bad)
inc
add
add
add
add
(bad)
(bad)
inc
add
add
dec
push
add
(bad)
(bad)
inc
add
add
push
cmp
inc
add
add
inc
cmp
inc
add
add
dec
cmp
inc
add
das
push
push
cmp
(bad)
(bad)
(bad)
inc
add
dec
push
inc
inc
add
add
(bad)
(bad)
(bad)
inc
add
add
add
add
add
inc
call
ret
mov
call
ret
mov
call
ret
mov
push
mov
xor
push
push
push
mov
inc
jne
mov
mov
call
mov
call
mov
call
mov
call
mov
call
mov
mov
call
mov
mov
call
mov
mov
call
mov
mov
call
mov
mov
call
mov
mov
call
mov
mov
call
mov
mov
call
mov
mov
call
mov
mov
call
mov
mov
call
mov
mov
call
mov
mov
call
mov
mov
call
xor
pop
pop
pop
mov
push
ret
jmp
jmp
pop
ret
sub
ret
push
mov
xor
push
push
push
mov
xor
pop
pop
pop
mov
push
ret
jmp
jmp
pop
ret
sbb
add
nop
push
inc
add
inc
inc
add
inc
inc
add
inc
add
inc
add
inc
inc
add
inc
add
dec
inc
add
inc
add
dec
inc
add
loope
add
loopne
add
inc
add
inc
add
push
inc
add
add
movs
inc
add
inc
add
repnz
add
out
inc
add
out
inc
add
loope
add
jmp
add
loope
add
movs
inc
add
inc
add
add
add
add
inc
add
inc
add
inc
add
movs
inc
add
inc
add
cmps
inc
add
inc
add
inc
add
mov
inc
add
inc
add
lods
inc
add
stos
inc
add
inc
add
inc
add
add
add
inc
add
in
add
mov
call
mov
call
mov
mov
mov
mov
mov
call
mov
mov
mov
call
mov
call
call
add
add
(bad)
(bad)
inc
add
add
add
add
lea
xor
mov
add
inc
add
lea
fsub
inc
add
daa
inc
add
retf
int3
enter
enter
fcomp
fxch
(bad)
(bad)
loopne
jecxz
in
lea
inc
jb
outs
jb
mov
push
jne
je
ins
and
jb
jb
and
and
popa
je
xor
xor
xor
xor
add
xor
inc
inc
inc
inc
inc
inc
(bad)
(bad)
(bad)
inc
add
add
arpl
pop
jo
outs
addr16
jae
xor
add
dec
imul
xor
add
add
add
add
add
add
jae
gs
add
or
add
pop
lea
push
push
inc
push
pop
push
push
dec
inc
add
pop
push
dec
inc
add
push
pop
inc
push
add
inc
dec
pop
inc
push
add
inc
add
inc
add
dec
inc
add
dec
inc
add
dec
inc
add
dec
inc
add
dec
inc
add
inc
add
dec
inc
add
lea
pop
dec
inc
add
inc
add
add
inc
add
dec
inc
add
imul
imul
imul
imul
imul
add
add
add
add
imul
ins
inc
add
ins
inc
add
inc
add
inc
add
push
push
dec
dec
add
adc
adc
add
nop
add
and
add
inc
nop
hlt
push
inc
add
push
inc
add
push
inc
add
push
inc
add
inc
add
push
inc
add
push
inc
add
inc
add
push
inc
add
add
push
inc
add
push
inc
add
and
and
and
and
add
add
add
add
add
add
add
add
add
add
add
or
or
add
add
add
add
push
add
add
add
push
lea
and
add
push
inc
add
jo
add
out
(bad)
mov
add
add
add
add
add
add
add
add
add
or
add
add
add
adc
add
add
add
and
add
add
add
or
add
inc
add
add
add
add
add
and
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
inc
add
add
add
add
add
add
add
add
add
and
add
add
idiv
(bad)
(bad)
sti
(bad)
(bad)
call
add
add
adc
add
add
add
add
add
add
add
add
or
add
adc
add
and
add
inc
add
add
add
add
add
add
add
add
or
add
and
add
out
(bad)
mov
add
add
or
add
add
add
adc
add
add
add
and
add
add
adc
and
add
add
add
add
adc
sbb
add
add
loopne
add
pop
add
add
add
add
add
add
add
inc
add
add
add
inc
inc
add
inc
inc
(bad)
inc
add
add
adc
sbb
add
add
add
add
inc
add
adc
adc
dec
jb
add
dec
push
add
dec
inc
dec
inc
dec
pop
add
inc
add
aam
add
inc
add
inc
add
inc
push
dec
inc
add
sbb
inc
add
repz
add
inc
add
repz
add
inc
add
add
inc
add
inc
add
repz
add
fs
popa
je
and
xor
xor
inc
outs
jo
jb
addr16
cmp
xor
dec
gs
outs
sub
and
imul
add
add
add
add
or
add
xor
inc
add
add
add
add
add
push
add
add
add
add
add
add
adc
adc
cld
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
add
add
add
xor
xor
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
or
add
add
add
add
add
add
add
add
adc
add
pop
or
or
or
add
or
mov
or
dec
add
add
add
add
or
lods
add
add
add
add
add
or
pushf
add
add
add
add
add
or
mov
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
lds
or
and
add
add
or
in
or
adc
add
add
or
aad
or
xor
add
add
or
cmc
add
add
add
add
or
int
or
sub
add
add
or
in
add
add
add
add
or
fld
or
cmp
add
add
or
std
add
add
add
add
add
add
add
add
or
push
add
add
add
add
add
add
add
add
add
add
add
add
or
jae
or
repz
add
add
add
add
add
add
add
add
add
or
dec
add
add
add
add
add
add
add
add
add
add
add
add
or
imul
add
add
add
add
add
add
add
add
add
add
add
or
pop
add
add
add
add
add
add
add
add
add
add
add
add
or
jnp
or
sti
add
add
add
add
add
add
add
add
add
add
or
inc
add
add
add
add
add
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
add
add
add
add
or
push
add
add
add
add
add
add
add
add
add
add
add
add
or
ja
or
test
or
str
add
add
add
add
add
or
dec
add
add
add
add
add
add
add
add
add
add
add
add
or
outs
add
add
add
add
add
add
add
add
add
add
add
add
or
pop
add
add
add
add
add
add
add
add
add
add
add
add
or
jg
or
inc
or
inc
or
add
pop
add
pop
add
add
add
pop
add
add
add
pop
add
add
add
pop
add
add
add
pop
add
add
add
pop
add
add
add
pop
add
add
add
pop
add
pop
add
add
pop
add
add
pop
add
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
pop
pop
pop
pop
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
sldt
adc
adc
adc
adc
adc
adc
push
push
push
push
push
push
push
pop
pop
pop
pop
pop
pop
pop
pop
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
add
add
or
or
or
or
or
or
push
push
push
(bad)
(bad)
(bad)
movups
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
push
push
push
push
push
push
push
push
push
push
push
push
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
add
add
add
sbb
add
sbb
add
and
add
sub
add
xor
add
cmp
add
inc
add
add
add
pusha
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
add
add
add
adc
add
sbb
add
and
add
xor
add
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
add
add
add
adc
add
sbb
add
and
add
xor
add
inc
add
add
add
inc
add
add
add
add
add
add
add
add
inc
add
gs
add
add
add
add
add
add
add
add
add
inc
add
add
add
add
add
add
add
add
push
xor
xor
jne
imul
outs
and
ins
jo
gs
imul
push
outs
jbe
ins
imul
ja
jae
jp
add
arpl
jb
arpl
gs
fs
arpl
arpl
outs
gs
je
outs
outs
popa
jb
add
arpl
jb
arpl
popa
je
and
arpl
add
add
imul
and
xor
xor
inc
outs
jo
jb
addr16
cmp
xor
dec
popa
jb
and
ins
gs
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
add
jae
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
jo
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
popa
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
add
add
add
adc
add
sbb
add
and
add
xor
add
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
or
add
add
add
add
pop
add
add
add
add
add
push
add
add
or
add
add
add
add
add
push
pop
add
pop
add
add
or
add
add
add
add
xor
add
add
add
rol
add
add
or
add
add
add
pusha
add
add
or
add
add
add
or
add
or
add
add
add
or
add
or
add
add
add
add
loopne
add
push
pop
add
push
add
add
or
add
add
add
add
sbb
add
add
add
nop
add
add
add
cmp
add
add
add
js
add
add
add
cmp
add
add
add
rol
add
push
pop
add
adc
add
add
add
push
or
add
add
add
or
add
or
add
add
add
or
add
or
add
add
add
add
lock
add
add
add
add
add
add
push
add
add
or
add
add
push
or
add
add
add
add
sub
add
add
add
je
add
add
add
xor
add
add
add
enter
push
pop
add
or
or
add
add
or
add
add
add
add
test
add
add
add
add
add
add
add
test
add
add
add
inc
add
add
or
add
add
add
add
or
add
add
add
pop
add
add
or
add
add
add
add
cwde
add
add
add
add
add
add
jl
add
add
add
cmp
add
add
add
fadd
add
push
pop
add
pop
add
add
or
add
add
or
add
add
add
add
mov
or
add
add
add
add
mov
add
add
add
dec
add
add
or
add
add
add
add
add
add
add
add
push
add
add
or
add
add
add
add
mov
pop
add
and
add
add
add
jb
add
add
add
xor
add
add
add
les
add
push
pop
add
or
add
add
add
bound
add
add
add
and
add
add
add
movs
add
add
or
add
add
add
or
add
or
add
add
add
add
in
add
push
pop
add
pop
add
add
or
add
add
add
add
sbb
add
add
add
xchg
add
add
add
add
add
add
jp
add
add
add
cmp
add
add
add
aam
add
push
pop
add
adc
add
add
add
push
add
add
add
sub
add
add
add
mov
add
add
add
or
add
add
add
mov
add
add
add
dec
add
add
or
add
add
add
add
add
or
add
add
add
add
push
add
add
or
add
add
add
add
xor
add
add
add
jbe
add
add
add
add
add
or
add
add
add
add
sldt
add
or
add
add
add
add
add
add
or
add
add
push
add
add
or
add
or
add
add
add
add
in
add
add
add
or
add
add
add
pop
add
add
or
add
add
add
or
add
add
arpl
add
add
add
jle
add
add
add
add
add
or
add
add
add
add
sbb
add
add
add
outs
add
add
or
add
add
add
or
add
add
push
add
add
or
add
or
add
add
add
add
cld
add
add
add
add
add
add
add
push
add
add
or
add
add
add
add
add
add
add
pop
add
add
or
add
add
add
add
xor
add
add
add
ret
add
add
or
add
add
add
popa
add
add
or
add
add
add
or
add
or
add
add
add
or
add
or
add
add
add
add
loop
add
push
pop
add
push
add
add
or
add
add
add
add
sbb
add
add
add
xchg
add
add
add
cmp
add
add
add
jns
add
add
add
cmp
add
add
add
rol
add
push
pop
add
adc
add
add
add
imul
add
sub
add
add
add
mov
add
add
add
or
add
add
add
mov
add
add
add
dec
add
add
or
add
add
add
add
add
add
add
add
push
add
add
or
add
or
add
add
add
add
sub
add
add
add
jne
add
add
add
xor
or
add
add
add
add
or
or
add
add
add
add
and
or
add
or
add
or
add
or
add
add
add
add
jmp
add
add
add
or
add
add
add
add
sbb
or
add
pop
add
push
add
add
or
add
add
add
add
cmp
or
add
add
add
add
pop
add
add
or
add
add
add
add
sub
or
add
or
add
or
add
or
add
add
add
add
cli
add
add
add
add
add
add
add
push
add
add
or
add
add
add
add
ret
add
add
add
and
add
add
add
jae
add
add
add
xor
add
add
add
mov
add
add
or
add
add
add
arpl
add
add
add
and
add
add
add
cmps
add
add
or
add
add
add
or
add
or
add
add
add
add
out
add
push
pop
add
pop
add
add
or
add
add
add
add
sbb
add
add
add
xchg
add
add
add
add
add
add
jnp
add
add
add
cmp
add
add
add
(bad)
add
add
add
adc
add
add
add
imul
add
or
add
add
add
or
add
or
add
add
add
or
add
or
add
add
add
add
test
add
add
add
or
add
add
add
add
pop
add
add
or
add
add
add
add
xor
add
add
add
ja
add
add
add
aaa
add
add
or
add
add
add
add
sldt
add
or
add
add
add
add
daa
add
add
or
add
or
add
add
add
or
add
or
add
add
add
add
out
add
add
add
or
add
add
add
pop
add
add
or
add
add
add
or
add
pop
add
arpl
add
add
add
jg
add
add
add
aas
add
add
or
add
add
add
add
sbb
add
add
add
outs
add
add
or
add
add
add
or
add
or
add
add
add
or
add
or
add
add
add
add
inc
add
pusha
pop
add
add
add
add
add
push
add
add
or
add
add
add
add
add
push
pop
add
pop
add
add
or
add
add
add
add
xor
add
add
add
rol
add
add
or
add
add
add
pusha
add
add
or
add
add
add
or
add
or
add
add
add
or
add
or
add
add
add
add
loope
add
push
pop
add
push
add
add
or
add
add
add
add
sbb
add
add
add
xchg
add
add
add
cmp
add
add
add
js
add
add
add
cmp
add
add
add
rol
add
push
pop
add
adc
add
add
add
push
or
add
add
add
or
add
or
add
add
add
or
add
or
add
add
add
add
icebp
add
add
add
add
add
add
add
push
add
add
or
add
add
push
or
add
add
add
add
sub
add
add
add
je
add
add
add
xor
add
add
add
leave
add
add
add
or
or
add
add
or
add
add
add
add
test
or
add
add
add
add
test
add
add
add
inc
add
add
or
add
add
add
add
or
add
add
add
pop
add
add
or
add
add
add
add
cdq
add
add
add
add
add
add
jl
add
add
add
cmp
add
add
add
fld
add
push
pop
add
pop
add
add
or
add
add
or
add
add
add
add
mov
or
add
add
add
add
mov
add
add
add
dec
add
add
or
add
add
add
add
add
add
add
add
push
add
add
or
add
add
add
add
mov
pop
add
and
add
add
add
jb
add
add
add
xor
add
add
add
lds
add
push
pop
add
or
add
add
add
bound
add
add
add
and
add
add
add
movs
add
add
or
add
add
add
or
add
or
add
add
add
add
in
add
push
pop
add
pop
add
add
or
add
add
add
add
sbb
add
add
add
xchg
add
add
add
add
add
add
jp
add
add
add
cmp
add
add
add
aad
add
push
pop
add
adc
add
add
add
push
add
add
add
sub
add
add
add
mov
add
add
add
or
add
add
add
mov
add
add
add
dec
add
add
or
add
add
add
add
add
or
add
add
add
add
push
add
add
or
add
add
add
add
xor
add
add
add
jbe
add
add
add
add
add
or
add
add
add
add
sldt
add
or
add
add
add
add
add
add
or
add
or
add
add
add
or
add
or
add
add
add
add
in
add
add
add
or
add
add
add
pop
add
add
or
add
add
add
or
add
pop
add
arpl
add
add
add
jle
add
add
add
add
add
or
add
add
add
add
sbb
add
add
add
outs
add
add
or
add
add
add
or
add
or
add
add
add
or
add
or
add
add
add
add
std
add
add
add
add
add
add
add
push
add
add
or
add
add
add
add
add
add
add
pop
add
add
or
add
add
add
add
xor
add
add
add
ret
add
add
add
or
add
add
add
popa
add
add
or
add
add
add
or
add
or
add
add
add
or
add
or
add
add
add
add
jecxz
add
push
pop
add
push
add
add
or
add
add
add
add
sbb
add
add
add
xchg
add
add
add
cmp
add
add
add
jns
add
add
add
cmp
add
add
add
rol
add
push
pop
add
adc
add
add
add
imul
add
sub
add
add
add
mov
add
add
add
or
add
add
add
mov
add
add
add
dec
add
add
or
add
add
add
add
add
add
add
add
push
add
add
or
add
or
add
add
add
add
sub
add
add
add
jne
add
add
add
xor
or
add
add
add
add
or
or
add
add
add
add
and
or
add
or
add
or
add
or
add
add
add
add
jmp
add
push
pop
add
or
add
add
add
pop
add
add
or
add
or
add
pop
add
push
add
add
or
add
add
add
add
cmp
or
add
add
add
add
pop
add
add
or
add
add
add
add
sub
or
add
or
add
or
add
or
add
add
add
add
sti
add
add
add
add
add
add
add
push
add
add
or
add
add
add
add
ret
add
add
add
and
add
add
add
jae
add
add
add
xor
add
add
add
mov
add
or
add
add
add
arpl
add
add
add
and
add
add
add
cmps
add
add
or
add
add
add
or
add
or
add
add
add
add
out
add
push
pop
add
pop
add
add
or
add
add
add
add
sbb
add
add
add
xchg
add
add
add
add
add
add
jnp
add
add
add
cmp
add
add
add
xlat
add
add
add
adc
add
add
add
imul
add
or
add
add
add
or
add
or
add
add
add
or
add
or
add
add
add
add
test
add
add
or
add
add
add
add
pop
add
add
or
add
add
add
add
xor
add
add
add
ja
add
add
add
aaa
add
add
or
add
add
add
add
sldt
add
or
add
add
add
add
daa
add
add
or
add
or
add
add
add
or
add
or
add
add
add
add
out
add
add
add
or
add
add
add
pop
add
add
or
add
add
add
or
add
pop
add
arpl
add
add
add
jg
add
add
add
aas
add
add
or
add
add
add
add
sbb
add
add
add
outs
add
add
or
add
add
add
or
add
or
add
add
add
or
add
or
add
add
add
add
inc
add
push
add
add
push
add
add
push
add
add
pop
add
add
push
add
add
pop
add
add
push
add
add
pop
add
add
push
add
add
pop
add
add
push
add
add
pop
add
add
push
add
add
pop
add
add
push
add
add
rol
add
add
add
add
push
add
add
push
add
add
pop
add
add
push
add
add
pop
add
add
push
add
add
pop
add
add
push
add
add
pop
add
add
push
add
add
pop
add
add
push
add
add
pop
add
add
push
add
add
rol
add
gs
jne
jae
jb
bound
and
popa
ins
imul
ins
outs
addr16
jae
je
gs
arpl
jo
gs
and
popa
ins
imul
ins
outs
addr16
jae
je
gs
gs
jne
jae
jb
bound
and
gs
ins
das
ins
outs
addr16
and
add
arpl
jo
gs
and
gs
ins
das
ins
outs
addr16
and
add
gs
jne
jae
jb
bound
and
je
outs
arpl
je
gs
arpl
jo
gs
and
je
outs
arpl
je
gs
jo
jns
imul
and
and
je
and
addr16
jae
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
add
add
or
add
add
add
add
add
add
add
add
jbe
ins
imul
and
add
jbe
ins
imul
and
outs
arpl
ins
outs
addr16
jae
je
outs
and
outs
jns
ins
outs
addr16
and
and
je
outs
arpl
jae
ins
bound
jae
imul
and
je
ins
outs
addr16
and
jo
popa
je
add
imul
and
gs
ins
das
ins
outs
addr16
and
fs
jbe
ins
imul
outs
arpl
arpl
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
inc
add
inc
add
inc
add
inc
add
dec
add
call
add
(bad)
aas
add
(bad)
jg
add
inc
add
jbe
ins
imul
outs
arpl
arpl
add
jbe
ins
imul
popa
ins
das
ins
outs
addr16
and
fs
add
lea
add
add
pusha
push
inc
add
inc
add
push
inc
add
push
inc
add
push
inc
add
push
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
or
add
or
add
add
add
add
add
add
add
add
add
or
add
or
add
add
add
add
add
add
add
add
add
add
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
sldt
add
add
add
add
add
add
add
add
add
add
add
add
add
add
dec
inc
inc
push
add
add
add
add
add
add
sldt
add
add
add
add
add
add
sub
add
add
add
add
add
add
or
or
add
add
pop
inc
add
add
add
add
inc
add
inc
add
inc
add
add
add
pop
inc
add
add
add
jnp
add
add
add
inc
add
pop
inc
add
pop
inc
add
adc
add
add
add
add
add
add
inc
out
adc
add
add
add
add
add
add
inc
add
add
add
add
rol
add
add
inc
add
inc
add
lea
add
add
add
inc
add
inc
add
inc
add
lahf
inc
add
lahf
inc
add
inc
add
inc
add
xchg
pop
mov
inc
add
inc
add
mov
inc
add
mov
inc
add
mov
inc
add
xchg
or
inc
add
mov
inc
add
inc
add
lahf
inc
add
mov
inc
add
mov
inc
add
mov
inc
add
inc
add
inc
add
inc
add
inc
add
add
mov
inc
add
add
or
add
cmps
mov
add
mov
add
mov
add
add
adc
add
inc
mov
add
xchg
mov
add
xor
add
mov
add
mov
mov
add
mov
add
(bad)
rol
jl
add
js
add
mov
add
add
mov
add
les
add
add
jl
add
test
add
call
add
lds
add
add
add
mov
test
add
cmp
add
mov
add
(bad)
mov
mov
add
add
mov
add
mov
fdiv
add
and
add
lock
add
mov
add
mov
add
add
pop
mov
add
add
mov
add
movs
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
add
inc
mov
add
add
pop
mov
add
add
test
add
add
add
mov
add
les
add
loopne
add
hlt
mov
add
add
add
add
and
add
add
add
push
mov
add
jo
add
jle
add
add
add
mov
mov
add
aam
add
jmp
add
mov
add
add
add
inc
mov
add
pop
mov
add
cmp
add
mov
add
sar
add
out
mov
add
adc
add
cmp
add
dec
mov
add
mov
jle
add
nop
mov
add
mov
add
les
add
loopne
add
idiv
add
push
mov
add
cmp
add
push
add
cmp
add
add
add
add
retf
add
mov
add
add
add
mov
add
xor
add
add
add
push
add
je
add
cmp
cwde
mov
add
mov
mov
add
jmp
add
add
sub
add
cmp
add
dec
mov
add
js
add
xchg
mov
add
mov
mov
add
fdivr
add
cli
mov
add
sbb
add
sub
add
cmp
add
pop
mov
add
jb
add
cmp
add
mov
add
int3
mov
add
jmp
add
mov
add
es
add
inc
mov
add
fs
add
mov
add
mov
mov
add
enter
sar
add
jmp
add
rol
adc
add
and
add
xor
add
rol
dec
rol
pusha
rol
ins
rol
jl
add
mov
add
cwde
rol
movs
rol
mov
add
(bad)
rol
add
add
in
add
test
add
rol
push
rol
rol
rol
push
rol
push
add
add
rol
mov
rol
out
add
test
add
ret
push
ret
xor
add
inc
ret
push
ret
push
add
xchg
add
call
add
ret
fcmovb
add
out
ret
add
add
adc
add
es
add
ss
add
dec
ret
add
fs
add
jb
add
add
add
add
mov
add
enter
(bad)
ret
add
in
ret
add
add
add
or
add
sbb
add
sub
add
cmp
add
dec
les
add
add
push
les
add
les
add
les
add
les
add
les
add
les
add
les
add
lds
add
lds
add
lds
add
lds
add
add
pop
lds
add
add
add
add
mov
add
add
add
test
add
mov
lds
add
lds
add
add
add
mov
add
add
and
add
add
add
inc
mov
push
mov
add
add
outs
mov
add
add
add
add
add
mov
add
add
add
retf
add
mov
jmp
add
mov
add
add
dec
mov
add
add
add
add
add
add
jb
gs
xor
cs
ins
add
add
inc
gs
gs
inc
jb
je
arpl
push
arpl
outs
add
add
jbe
inc
jb
je
arpl
push
arpl
outs
add
add
inc
outs
je
jb
jb
je
arpl
push
arpl
outs
add
add
dec
outs
imul
inc
jb
je
arpl
push
arpl
outs
add
add
jb
jne
ins
inc
jb
add
add
jb
jne
ins
inc
ins
ins
outs
arpl
add
add
popa
ins
inc
jb
add
add
popa
ins
inc
ins
ins
outs
arpl
add
add
je
gs
imul
inc
gs
jne
jb
outs
je
push
dec
add
add
push
imul
outs
dec
jne
je
inc
jns
add
add
je
push
dec
outs
arpl
add
add
je
je
jb
jne
dec
outs
outs
inc
add
add
je
outs
arpl
gs
outs
outs
inc
add
add
inc
gs
outs
ins
ins
popa
outs
fs
imul
inc
jb
gs
imul
add
inc
js
je
jb
arpl
jae
add
push
jb
je
inc
imul
push
gs
js
gs
imul
gs
add
add
ins
push
outs
ja
outs
add
add
imul
jo
imul
inc
gs
je
dec
popa
outs
fs
add
jne
gs
xor
fs
ins
add
add
inc
gs
gs
outs
popa
jb
push
jns
add
add
jae
popa
addr16
outs
js
add
jbe
jo
xor
cs
ins
add
add
push
gs
jne
jb
push
popa
ins
jne
inc
js
add
add
push
gs
jo
outs
dec
gs
js
add
add
addr16
ins
outs
jae
dec
gs
outs
ins
gs
jne
xor
cs
ins
add
add
push
jns
inc
jb
gs
je
imul
jns
push
gs
ins
ins
outs
arpl
jb
outs
addr16
outs
add
jb
gs
xor
cs
ins
add
add
push
ins
jae
gs
popa
ins
jne
add
add
inc
gs
popa
ins
jne
add
add
popa
ins
inc
ins
ins
outs
arpl
add
add
je
outs
fs
gs
popa
outs
fs
gs
add
popa
fs
jo
xor
cs
ins
add
add
push
gs
ins
outs
jae
dec
gs
add
dec
jo
outs
push
push
push
outs
imul
add
dec
jo
outs
push
jb
arpl
jae
outs
imul
add
add
je
outs
imul
outs
outs
jb
popa
je
outs
outs
add
add
gs
imul
popa
ins
push
imul
ins
outs
arpl
gs
outs
fs
outs
imul
push
imul
push
jae
push
outs
imul
jb
jbe
ins
gs
imul
gs
xor
cs
ins
add
add
push
jb
je
inc
imul
outs
inc
js
arpl
add
push
popa
imul
ins
gs
bound
arpl
add
ins
imul
outs
arpl
jae
add
add
jae
gs
push
imul
ins
gs
imul
push
ins
gs
add
push
gs
imul
add
push
gs
imul
gs
add
add
je
jb
outs
jb
outs
fs
add
push
gs
outs
fs
inc
imul
gs
fs
imul
jo
outs
push
jb
arpl
jae
add
dec
jne
je
inc
jns
gs
outs
push
imul
add
dec
outs
arpl
inc
imul
outs
inc
imul
add
dec
outs
popa
fs
imul
add
add
inc
ins
outs
bound
inc
jb
add
add
inc
ins
outs
bound
inc
ins
ins
outs
arpl
add
inc
gs
gs
imul
inc
gs
jae
jb
gs
jne
je
popa
outs
addr16
inc
add
add
inc
gs
jb
arpl
fs
jae
add
add
inc
gs
outs
fs
gs
popa
outs
fs
gs
add
add
inc
gs
outs
arpl
push
imul
inc
gs
popa
jae
inc
jb
outs
jb
add
add
je
imul
add
inc
gs
imul
add
inc
gs
js
je
outs
fs
jb
arpl
jae
add
add
je
jne
jb
outs
je
push
add
add
inc
gs
jne
jb
outs
je
jb
arpl
jae
add
inc
jb
gs
imul
add
inc
imul
add
add
ins
gs
imul
jae
gs
push
imul
inc
imul
outs
dec
outs
arpl
inc
imul
add
inc
outs
jae
popa
je
push
imul
ins
gs
imul
outs
ins
jo
jb
inc
imul
add
inc
ins
outs
jae
dec
popa
outs
fs
add
imul
ins
add
add
jb
je
push
je
add
add
jb
je
push
add
add
je
imul
addr16
js
add
add
je
gs
inc
outs
ins
outs
jb
add
add
je
je
gs
push
outs
fs
add
je
arpl
outs
add
add
push
gs
dec
push
xor
add
push
gs
imul
add
je
dec
inc
imul
je
jb
jae
dec
jb
inc
js
add
push
gs
imul
add
add
je
imul
outs
jb
add
add
ins
arpl
push
arpl
add
push
popa
jbe
inc
inc
add
add
push
gs
outs
jb
inc
inc
add
add
data16
je
outs
add
add
jbe
push
outs
inc
js
add
add
je
jb
arpl
imul
add
inc
gs
je
arpl
bound
arpl
add
inc
gs
imul
add
je
dec
inc
imul
je
gs
arpl
imul
add
inc
js
ins
jne
gs
ins
imul
add
inc
gs
gs
dec
bound
arpl
add
inc
gs
gs
inc
inc
add
add
inc
jb
popa
je
push
outs
ins
imul
add
add
gs
je
push
arpl
outs
add
add
gs
je
inc
dec
inc
imul
add
gs
je
inc
dec
inc
push
arpl
outs
add
add
inc
jb
popa
je
inc
outs
ins
jo
je
bound
inc
add
add
inc
jb
popa
je
inc
outs
ins
jo
je
bound
imul
add
gs
je
inc
jb
jae
dec
outs
imul
add
gs
je
inc
imul
add
ins
bound
gs
outs
add
add
inc
imul
jae
jb
xor
fs
ins
add
add
push
popa
imul
add
add
ins
imul
je
add
add
outs
jae
popa
je
dec
gs
popa
add
add
push
push
outs
outs
ja
add
add
je
imul
jae
add
add
je
imul
add
je
popa
jb
outs
je
add
push
gs
outs
jb
addr16
jne
fs
imul
add
je
outs
arpl
add
add
push
gs
jne
jae
jb
add
push
outs
fs
gs
popa
addr16
add
add
push
arpl
outs
push
outs
inc
ins
imul
add
ins
gs
jae
inc
inc
add
add
jae
push
jne
je
gs
popa
add
add
data16
je
arpl
add
dec
imul
add
add
pop
outs
outs
ins
gs
add
dec
jae
imul
jae
bound
add
dec
jae
imul
popa
bound
add
add
push
imul
add
dec
jae
arpl
imul
outs
jbe
ins
imul
je
add
add
je
imul
outs
add
add
inc
gs
imul
arpl
add
je
imul
add
add
je
jo
popa
je
push
outs
add
add
inc
gs
jns
je
ins
dec
gs
imul
inc
gs
jns
je
ins
dec
outs
jne
add
inc
gs
jns
inc
outs
ins
outs
jb
add
inc
gs
popa
jb
outs
je
add
inc
gs
imul
add
je
gs
je
je
add
add
je
outs
arpl
add
add
inc
gs
inc
inc
js
add
inc
gs
inc
add
add
je
jne
jae
jb
outs
jae
add
add
je
ins
imul
je
add
inc
gs
popa
jo
jne
add
add
inc
imul
add
add
imul
jae
js
add
inc
outs
jne
push
imul
add
inc
outs
fs
popa
imul
inc
outs
popa
bound
imul
add
inc
outs
popa
bound
outs
jne
je
ins
add
add
inc
jb
ja
arpl
add
add
inc
gs
jb
jns
imul
add
je
outs
jns
arpl
add
add
gs
dec
outs
jne
add
add
jo
dec
ins
popa
add
add
imul
arpl
outs
add
add
inc
imul
add
add
inc
push
ja
jb
jne
inc
add
popa
fs
jo
xor
cs
ins
add
add
push
gs
gs
popa
ins
jne
inc
js
add
add
push
gs
jne
jb
push
popa
ins
jne
inc
js
add
add
push
gs
jne
jb
dec
outs
outs
dec
gs
add
add
push
gs
jo
outs
dec
gs
js
add
add
addr16
outs
jne
dec
gs
js
add
add
addr16
jb
popa
je
dec
gs
js
add
add
imul
jb
jbe
ins
gs
popa
ins
jne
inc
add
add
je
jae
jb
popa
ins
gs
add
imul
gs
xor
cs
ins
add
add
push
jb
je
push
jb
jbe
je
push
jb
imul
imul
add
je
imul
bound
gs
add
add
push
gs
jne
jb
outs
je
imul
jns
add
add
push
gs
outs
jbe
inc
imul
jns
add
add
dec
outs
popa
fs
imul
add
add
inc
gs
imul
imul
jns
add
add
inc
gs
gs
imul
add
inc
gs
imul
popa
je
add
add
inc
gs
gs
jo
popa
je
inc
add
add
inc
gs
jns
je
ins
inc
imul
jns
add
add
je
push
popa
je
dec
popa
ins
gs
add
add
je
jb
jbe
je
push
jb
imul
imul
add
je
outs
fs
gs
popa
outs
fs
gs
add
add
inc
gs
outs
fs
gs
imul
add
add
inc
gs
jne
ins
push
popa
je
dec
popa
ins
gs
add
add
inc
gs
imul
bound
gs
add
add
inc
gs
imul
push
jo
arpl
add
add
je
popa
je
inc
outs
jb
popa
je
add
add
inc
gs
outs
ins
jo
je
jb
popa
ins
gs
add
add
inc
gs
outs
ins
ins
popa
outs
fs
imul
inc
imul
inc
imul
imul
je
imul
inc
js
popa
outs
fs
outs
jbe
jb
outs
ins
outs
je
je
imul
add
gs
inc
imul
jb
popa
je
inc
imul
jb
popa
je
inc
imul
jns
add
add
inc
outs
ins
jo
jb
push
je
imul
imul
ins
add
add
je
gs
inc
js
outs
je
outs
imul
add
inc
gs
bound
arpl
add
add
gs
je
inc
outs
outs
je
outs
imul
add
inc
fs
outs
outs
je
gs
jne
arpl
add
jne
gs
xor
fs
ins
add
add
ja
jae
jb
outs
je
inc
add
add
push
gs
imul
outs
addr16
add
add
push
gs
jb
jo
add
add
push
outs
fs
gs
popa
addr16
add
add
push
gs
outs
jbe
push
jb
jo
add
add
imul
popa
jae
inc
add
add
push
outs
jae
dec
gs
popa
addr16
add
add
push
gs
jae
addr16
add
add
dec
gs
popa
addr16
outs
js
add
add
fs
arpl
inc
add
add
fs
jne
jae
jb
add
add
je
imul
js
dec
outs
addr16
inc
add
add
inc
gs
imul
js
inc
add
add
inc
gs
imul
outs
addr16
add
add
inc
gs
jb
jo
add
add
inc
gs
ins
popa
jae
dec
outs
outs
addr16
add
add
je
ins
popa
jae
dec
outs
outs
inc
add
add
outs
fs
imul
add
inc
jb
ja
gs
inc
add
add
jo
je
push
popa
addr16
add
add
inc
gs
imul
outs
arpl
add
add
gs
je
push
imul
inc
add
add
ins
ins
push
imul
outs
arpl
jae
gs
ins
xor
cs
ins
add
add
inc
gs
imul
add
arpl
arpl
xor
fs
ins
add
add
dec
ins
popa
addr16
imul
ja
add
add
popa
addr16
imul
inc
imul
outs
jb
add
add
popa
addr16
imul
popa
je
add
add
dec
outs
imul
inc
outs
outs
je
outs
ins
jae
add
xor
cs
ins
add
add
gs
outs
imul
add
gs
jne
xor
cs
ins
add
add
push
jns
inc
ins
ins
outs
arpl
jb
outs
addr16
outs
add
outs
ins
ins
cs
ins
add
add
gs
imul
add
add
gs
gs
jbe
outs
je
add
gs
ins
xor
cs
ins
add
add
gs
ins
inc
js
arpl
gs
js
add
add
gs
ins
inc
js
arpl
gs
add
bound
gs
fs
ins
add
add
dec
inc
gs
jb
jns
add
add
dec
inc
outs
jo
add
add
dec
inc
jb
popa
je
add
xor
cs
ins
add
add
gs
outs
imul
add
add
push
popa
jae
dec
gs
inc
jb
add
add
inc
jb
popa
je
dec
outs
jae
popa
outs
arpl
add
add
push
outs
imul
imul
inc
outs
dec
outs
imul
add
jae
gs
ins
xor
cs
ins
add
add
inc
gs
jo
arpl
ins
inc
outs
ins
fs
outs
arpl
imul
push
dec
inc
gs
popa
je
inc
jb
ins
dec
inc
dec
imul
add
inc
gs
popa
ins
ins
outs
arpl
add
push
dec
inc
push
dec
outs
je
data16
add
add
inc
jb
ja
gs
outs
jb
outs
ins
fs
add
add
inc
add
rol
mov
add
loopne
add
adc
add
add
add
xor
and
inc
xor
xor
xor
xor
xor
jle
xchg
mov
xchg
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
dec
xor
pop
xor
push
jb
jge
stos
xor
xor
xor
xor
xor
xor
xor
lea
fbstp
out
ss
aaa
mov
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
and
xor
cmp
cmp
pusha
cmp
jnp
cmp
cmp
retf
cmp
cmp
cmp
cmp
cmp
cmp
sub
xor
cmp
inc
cmp
imul
repnz
cmp
cmp
cmp
cmp
cmp
cmp
cmp
fnstsw
jmp
aas
cmp
inc
aas
dec
aas
push
aas
bound
imul
in
aas
add
add
loopne
add
jbe
mov
xor
xor
bound
les
int
out
or
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
pusha
xor
outs
xor
les
shl
fdiv
stc
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
cmp
xor
les
inc
ss
ss
ss
ss
ss
jo
ja
xor
nop
aaa
pushf
aaa
movs
aaa
add
cmp
cmp
cmp
cmp
cmp
cmp
cmp
or
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
add
or
and
cmp
inc
aas
jp
xchg
aas
mov
aas
sar
add
add
mov
add
add
xor
cmp
imul
xor
xor
xor
(bad)
xor
xor
xor
xor
aas
xor
xchg
fidiv
div
inc
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
das
xor
pop
xor
xor
xor
add
dec
ss
ss
ss
mov
lds
sti
cmp
ds
add
add
add
adc
xor
xor
mov
mov
xor
xor
xor
xor
xor
xor
xor
xor
push
xor
cs
push
xor
jno
jnp
mov
xor
loop
jmp
ss
ss
ss
xor
mov
ss
shl
out
repz
adc
pop
aaa
sub
cmp
dec
aaa
push
aaa
pop
aaa
bound
push
jb
jp
xor
aaa
xchg
aaa
call
aaa
mov
aaa
shl
fidiv
loop
jmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
dec
cmp
pop
cmp
push
jb
jp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
dec
cmp
pop
cmp
push
jb
jp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
dec
cmp
pop
cmp
push
jb
jp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
dec
cmp
pop
cmp
xchg
xchg
cmp
cmp
cmp
cmp
cmp
cmp
push
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
xor
inc
cmp
pop
cmp
ds
ds
ds
ds
ds
ds
jle
xchg
mov
xchg
ds
cmps
ds
ds
mov
ds
fidivr
out
out
idiv
(bad)
ds
aas
push
aas
push
aas
push
aas
es
cs
ss
ds
inc
aas
dec
aas
push
aas
pop
aas
data16
outs
aas
jbe
jle
xchg
mov
xchg
aas
sahf
aas
cmps
aas
scas
aas
mov
mov
aas
(bad)
aas
fidivr
out
out
aas
idiv
(bad)
aas
add
add
add
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
push
xor
movs
ss
aaa
stos
cmp
cmp
cmp
cmp
cmp
and
test
add
add
add
add
les
and
jae
xor
xor
xor
pop
aaa
inc
aaa
dec
aaa
mov
cwde
cmp
cmp
cmp
mov
jmp
cmp
jb
cmp
ds
aas
and
sub
xor
cmp
add
jo
add
xor
sahf
xor
xor
xor
xor
xor
xchg
xor
xor
xor
je
jle
xor
aaa
xchg
aaa
cwde
aaa
popf
aaa
test
scas
aaa
fdiv
loopne
out
int
fdivr
call
cmp
cmp
cmp
cmp
cmp
push
cmp
ja
scas
cmp
cmp
cmp
pop
cmp
cmp
cmp
cmp
cmp
cmp
add
add
add
mov
xchg
xor
xor
aaa
or
adc
sbb
mov
sar
adc
xor
sbb
and
push
aas
jp
lods
aas
add
add
add
mov
aaa
jno
cli
cmp
cmp
cmp
cmp
cmp
cmp
cmp
das
ds
and
cmp
inc
aas
pusha
aas
ins
aas
jle
xchg
aas
fidivr
loop
out
add
add
push
xor
xor
xor
xor
xor
xor
jne
(bad)
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
ss
xor
aaa
cmps
aaa
dec
cmp
cmp
cmp
cmp
sti
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
aas
push
aas
push
aas
ja
test
stos
aas
ret
aas
into
aas
fnstsw
add
add
pop
xor
push
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
jo
aad
add
sbb
fnstenv
pop
aaa
(bad)
aaa
stc
aaa
retf
cmp
cmp
cmp
xor
jl
stos
aas
enter
add
inc
add
add
mov
xor
xor
xor
xor
xor
xor
in
xor
das
ss
mov
xchg
ss
push
aaa
adc
cmp
cmp
and
sub
add
pop
add
add
xor
pusha
xor
or
xor
xor
xor
aaa
xor
jbe
pusha
cmp
aaa
cmp
cmp
cmp
cmp
cmp
mov
cmp
cmp
cmp
cmp
cmp
cmp
adc
and
loop
clc
aas
add
add
add
add
add
or
es
xor
xor
xor
xor
xor
xor
xor
xor
xor
push
xor
push
ja
xor
xor
xor
xor
xor
xor
xor
xor
xor
adc
adc
sbb
sbb
and
and
sub
xor
xor
dec
xor
pop
xor
jbe
jle
jecxz
imul
ss
jge
xor
ss
ss
aaa
sub
aaa
cmp
cmp
aaa
enter
aad
js
lahf
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
sbb
cmp
dec
cmp
outs
cmp
test
jle
scas
aas
(bad)
aas
sar
loopne
repnz
cli
aas
add
add
add
add
xor
xor
inc
xor
push
xor
xor
ja
test
mov
xchg
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
sbb
xor
xor
xor
xchg
cmps
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
jmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
push
add
add
sbb
add
pop
xor
xor
bound
jo
out
cmp
cmp
cmp
add
adc
add
add
loopne
or
bound
jnp
hlt
cmp
cmp
cmp
cmp
add
add
push
add
add
xor
xor
xor
xor
aaa
jmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
sahf
cmp
cmp
cmp
pop
cmp
add
dec
add
add
pop
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
aaa
push
aaa
je
js
jl
xor
aaa
mov
mov
pop
cmp
cmp
sbb
clc
aas
add
add
add
add
pop
xor
xor
xor
xor
xor
xor
xor
xor
sysexit
adc
jmp
cmp
cmp
aas
(bad)
aas
add
add
add
xor
xor
xor
xor
xor
pusha
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
adc
sbb
sub
xor
inc
xor
loopne
pop
cmp
cmp
push
cmp
pop
cmp
cmp
outs
cmp
pusha
add
test
add
or
adc
sub
sub
xor
xor
sbb
ins
xor
out
xor
xor
xor
leave
xor
outs
ss
popf
ss
ss
sub
cmp
mov
(bad)
aaa
inc
cmp
cmp
cmp
mov
cmp
jge
lea
mov
cmp
cmp
cmp
mov
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
ja
je
xchg
ds
add
jo
add
add
xor
xor
jl
in
xor
shl
enter
shl
xor
xor
xor
xor
cmp
push
xor
xor
xor
clc
xor
mov
add
xchg
add
add
xor
xor
xor
xor
xor
xor
xor
xor
xor
mov
xor
mov
xor
xor
xor
xor
xor
xor
xor
loopne
xor
arpl
mov
shl
ss
aaa
inc
aaa
dec
aaa
dec
aaa
push
aaa
push
aaa
pop
aaa
pop
aaa
xor
aaa
(bad)
aaa
aam
stc
aaa
pop
cmp
cmp
dec
cmp
cmp
jbe
xchg
outs
ds
ds
ds
aas
aas
aas
inc
aas
dec
aas
pop
aas
je
mov
xchg
aas
call
add
add
in
hlt
xor
xor
enter
sub
xor
cmp
cmp
cmp
mov
cmp
cmp
cmp
cmp
cmp
cmp
cmp
sub
ds
ds
ds
ds
ds
ds
repz
aas
(bad)
aas
lds
leave
aas
int
sar
aad
fnstcw
fnstsw
loope
in
jmp
add
add
add
xor
xor
xor
xor
push
xor
xor
xor
mov
mov
xor
xor
xor
xor
xor
xor
xor
and
push
xor
jb
jp
xor
xor
(bad)
push
adc
pop
ss
ds
ss
ss
xor
ss
ss
ss
mov
ss
ss
out
ss
ss
aaa
adc
and
and
xor
aas
aaa
(bad)
repz
sub
jae
scas
cmp
cmp
jl
inc
cmp
xchg
int
xlat
cmp
cmp
dec
cmp
ja
test
xlat
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
xchg
cmp
loope
add
bound
jp
xchg
aas
stos
aas
icebp
aas
add
add
add
or
jo
int
sub
dec
xor
xor
xor
xor
xor
xor
xor
xor
xor
dec
xor
xor
div
sysenter
inc
xor
xor
xor
xor
xor
mov
pop
outs
xchg
movs
ss
add
pop
aaa
je
mov
fwait
aaa
lods
aaa
(bad)
sti
aaa
push
cmp
arpl
popf
cmp
cmp
cmp
cmp
cmp
cmp
cmp
or
sbb
xor
inc
cmp
cmp
cmp
cmp
cmp
data16
ds
add
add
jl
add
movs
xor
xor
pop
cmp
cmp
cmp
cmp
push
cmp
mov
cmp
cmp
cmp
cmp
cmp
cmp
cmp
adc
sbb
cmp
aas
mov
mov
xchg
aas
xchg
aas
call
aas
stos
aas
scas
aas
mov
mov
mov
aas
(bad)
aas
retf
aas
sar
(bad)
aas
fidivr
fidivr
loop
out
jmp
aas
cli
aas
(bad)
aas
add
add
mov
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
cmp
popf
xor
xor
xor
leave
xor
cmp
dec
ss
ss
ss
mov
or
push
aaa
sub
leave
aaa
(bad)
cmp
ret
cmp
push
cmp
ins
cmp
stos
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
mov
in
xor
dec
ds
cmp
ds
aas
jne
mov
mov
fnstcw
add
add
add
push
add
add
xor
xor
xor
xor
xor
xor
xor
xor
xor
inc
xor
dec
xor
push
xor
pop
xor
xor
outs
xor
jbe
jp
jle
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
inc
xor
jge
xchg
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
push
xor
shl
ss
ss
(bad)
ss
aaa
daa
cmp
cmp
cmp
cmp
fdivr
or
push
cmp
mov
cmp
cmp
inc
cmp
xchg
test
adc
sub
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
jno
mov
sar
dec
ds
ds
ds
fdivr
stc
ds
aas
ds
push
aas
pop
aas
pusha
aas
test
mov
sar
aas
in
aas
add
add
add
sbb
add
pop
xor
xor
jg
lods
xor
xor
xor
xor
xor
xor
xor
push
xor
xor
xor
xor
mov
xor
xor
xor
xor
xor
xor
xor
or
xor
xor
xor
xor
xor
xor
xor
xor
mov
xor
or
adc
and
daa
xor
dec
ss
imul
ss
xchg
ss
scas
les
retf
ss
lahf
aaa
pop
cmp
cmp
cmp
cmp
mov
cmp
cmp
cmp
jl
cwde
cmp
adc
cmp
push
cmp
jnp
(bad)
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
xor
cmp
mov
cmp
sub
dec
ds
mov
mov
aas
and
sub
sub
xor
xor
add
add
in
add
cmp
xor
xor
xor
xor
xor
xor
jns
xchg
xor
xor
push
xor
xor
xor
aaa
xor
xor
xor
ss
jge
xor
lea
xchg
ss
ss
ss
sub
aaa
aaa
cmp
cmp
push
cmp
pop
cmp
cmp
outs
cmp
ja
jnp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
bound
jns
mov
popf
cmp
cmp
cmp
cmp
cmp
cmp
cmp
jge
mov
retf
cmp
cmp
cmp
xchg
mov
cwde
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
mov
ds
ds
aas
xchg
aas
std
aas
add
add
add
mov
xor
xor
xor
xor
jle
test
mov
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
mov
aaa
inc
aaa
je
(bad)
cmp
stos
cmp
cmp
pop
cmp
aam
in
cmp
cmp
cmp
ins
cmp
test
cmps
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
add
add
cld
add
add
xor
mov
inc
xor
adc
jnp
(bad)
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
pop
xor
test
xor
sbb
and
sub
xor
cmp
inc
ss
ss
ss
xchg
mov
cwde
ss
mov
shl
ss
loopne
in
ss
add
or
adc
and
sub
xor
inc
aaa
dec
aaa
push
aaa
pusha
aaa
ins
aaa
je
xor
aaa
xchg
aaa
mov
aaa
shl
aaa
aad
loopne
in
aaa
cmc
aaa
add
or
cmp
cmp
push
cmp
ins
cmp
mov
xchg
cmp
cmp
cmp
cmp
jb
mov
fwait
cmp
cmp
dec
cmp
cmp
cmp
cmp
js
lea
mov
cmp
cmp
test
(bad)
ds
aaa
aas
xchg
aas
movs
aas
add
add
mov
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xchg
aaa
xlat
aaa
in
sbb
pop
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
imul
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
scas
cmp
add
cs
ds
arpl
outs
ds
mov
stos
ds
fidivr
pop
aas
adc
aaa
aas
gs
jo
xchg
aas
les
iret
aas
hlt
aas
add
add
add
add
add
xor
push
xor
mov
mov
hlt
xor
xor
xor
xor
xor
xor
xor
xor
mov
xchg
xor
xor
xor
push
xor
pushf
xor
xor
xchg
xor
xor
xor
xor
xor
pop
xor
xchg
xor
out
std
xor
inc
ss
ss
test
ss
add
or
sub
aas
aaa
popa
aaa
jge
stos
aaa
fbstp
lock
or
inc
cmp
cmp
cmp
cmp
pushf
cmp
cmp
cmp
xlat
cmp
cmp
cmp
cmp
(bad)
ds
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
out
ds
aas
jb
xchg
aas
test
aas
add
add
add
add
xor
bound
xor
xor
xor
xor
xor
xor
xor
bound
push
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
pop
xor
jp
mov
nop
xor
mov
xor
mov
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
pusha
add
movs
add
add
xor
xor
int3
xor
inc
xor
xor
xor
xor
xor
xor
je
js
jl
xor
xor
xor
test
lods
xor
xor
in
xor
xor
xor
xor
xor
xor
or
or
adc
pop
xor
js
jl
xor
nop
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
sub
dec
xor
push
aas
mov
aas
add
add
shl
fdiv
call
aaa
push
aaa
push
aaa
pop
aaa
pop
aaa
pusha
aaa
fs
ins
aaa
je
js
xor
aaa
mov
fdiv
fdiv
loopne
in
call
aaa
hlt
aaa
clc
aaa
cld
aaa
add
add
or
or
adc
adc
sbb
sbb
and
and
sub
sub
xor
xor
cmp
cmp
inc
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
nop
cmp
loopne
add
add
add
add
or
or
pusha
adc
add
add
add
add
add
add
or
add
fadd
add
dec
add
adc
add
mov
add
enter
add
add
xor
add
pusha
add
xor
add
mov
add
mov
add
add
add
add
add
js
add
inc
adc
add
add
add
add
add
add
test
add
add
add
enter
nop
cmp
add
add
pusha
adc
add
add
add
add
or
add
push
add
and
add
pusha
adc
add
add
add
add
add
add
adc
add
clc
add
adc
add
pusha
adc
add
add
add
add
add
add
cmp
add
or
add
adc
add
add
add
add
and
add
add
add
add
js
add
sbb
add
add
add
jge
add
add
add
add
add
add
mov
add
add
jge
add
add
add
add
sbb
add
inc
add
je
add
pusha
adc
add
add
add
add
add
add
loopne
add
pusha
adc
add
add
add
add
sbb
add
add
add
add
push
add
add
dec
add
dec
add
add
inc
add
dec
add
inc
add
dec
add
inc
add
or
dec
add
dec
add
dec
add
dec
add
sub
add
xor
add
pusha
add
add
add
add
cmps
xchg
(bad)
cmps
xchg
(bad)
cmps
xchg
(bad)
cmps
xchg
(bad)
cmps
xchg
(bad)
cmps
xchg
(bad)
cmps
xchg
(bad)
cmps
xchg
(bad)
cmps
xchg
(bad)
cmps
xchg
(bad)
cmps
xchg
(bad)
cmps
xchg
(bad)
cmps
xchg
(bad)
cmps
xchg
(bad)
cmps
xchg
(bad)
cmps
xchg
(bad)
cmps
xchg
(bad)
cmps
xchg
(bad)
cmps
xchg
(bad)
cmps
xchg
(bad)
cmps
xchg
(bad)
cmps
xchg
(bad)
cmps
xchg
(bad)
cmps
xchg
(bad)
cmps
xchg
(bad)
cmps
xchg
(bad)
cmps
xchg
(bad)
cmps
xchg
(bad)
cmps
xchg
(bad)
cmps
xchg
(bad)
cmps
xchg
(bad)
cmps
xchg
(bad)
cmps
xchg
(bad)
cmps
xchg
(bad)
cmps
xchg
(bad)
cmps
xchg
(bad)
cmps
xchg
(bad)
cmps
xchg
(bad)
cmps
xchg
(bad)
cmps
xchg
(bad)
cmps
xchg
(bad)
cmps
xchg
pop
add
cmps
xchg
(bad)
rol
mov
(bad)
mov
(bad)
mov
(bad)
mov
(bad)
mov
(bad)
mov
(bad)
mov
(bad)
mov
(bad)
mov
(bad)
mov
(bad)
mov
(bad)
mov
(bad)
mov
(bad)
mov
(bad)
mov
(bad)
mov
(bad)
mov
(bad)
mov
(bad)
mov
(bad)
mov
(bad)
mov
xchg
pop
add
add
mov
(bad)
(bad)
std
(bad)
(bad)
std
(bad)
(bad)
std
(bad)
(bad)
std
(bad)
(bad)
std
(bad)
(bad)
std
(bad)
(bad)
std
(bad)
(bad)
std
(bad)
(bad)
std
(bad)
(bad)
std
(bad)
(bad)
std
(bad)
(bad)
std
(bad)
(bad)
std
(bad)
(bad)
std
(bad)
(bad)
std
(bad)
(bad)
std
(bad)
(bad)
std
(bad)
(bad)
std
(bad)
(bad)
std
(bad)
(bad)
std
(bad)
(bad)
std
(bad)
(bad)
std
(bad)
(bad)
std
(bad)
(bad)
std
(bad)
(bad)
std
(bad)
(bad)
std
(bad)
(bad)
std
(bad)
(bad)
std
(bad)
(bad)
std
(bad)
(bad)
std
(bad)
(bad)
std
(bad)
(bad)
std
(bad)
(bad)
std
(bad)
(bad)
std
(bad)
(bad)
std
(bad)
(bad)
std
(bad)
(bad)
std
(bad)
(bad)
std
(bad)
(bad)
rol
mov
add
add
mov
(bad)
(bad)
std
(bad)
(bad)
std
(bad)
(bad)
std
(bad)
(bad)
std
(bad)
(bad)
std
(bad)
(bad)
std
(bad)
(bad)
std
(bad)
(bad)
std
(bad)
(bad)
std
(bad)
(bad)
std
(bad)
(bad)
std
(bad)
(bad)
std
(bad)
(bad)
std
(bad)
(bad)
sti
cld
cld
cli
sti
sti
clc
stc
stc
div
div
div
hlt
hlt
hlt
repz
repnz
icebp
icebp
lock
lock
out
out
out
out
out
out
out
out
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
std
(bad)
(bad)
rol
mov
add
add
mov
(bad)
(bad)
std
(bad)
(bad)
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
call
out
out
out
out
out
hlt
hlt
hlt
repnz
repnz
icebp
lock
out
out
out
out
out
out
out
out
out
out
out
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
std
(bad)
(bad)
rol
mov
add
add
mov
(bad)
(bad)
mov
cmps
sar
sar
sar
sar
sar
sar
sar
sar
sar
out
out
hlt
hlt
repz
icebp
icebp
lock
icebp
lock
out
out
out
out
out
out
out
out
in
out
out
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
std
(bad)
(bad)
rol
mov
add
add
mov
(bad)
(bad)
sar
test
and
test
jl
pop
jp
pop
jns
pusha
js
popa
jbe
bound
arpl
jae
gs
data16
sar
out
cmc
cmc
cmc
hlt
cmc
cmc
fstp
fstp
fstp
fstp
fstp
fstp
fstp
fstp
fstp
fstp
fstp
fstp
out
out
out
out
out
out
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
std
(bad)
(bad)
rol
mov
add
add
mov
(bad)
(bad)
sar
test
and
movs
pop
jg
pop
jge
pop
jl
pop
jnp
pop
jns
pusha
js
popa
ja
bound
arpl
jae
gs
sar
div
div
div
cmc
cmc
cmc
hlt
cmc
cmc
hlt
hlt
hlt
repz
repnz
icebp
icebp
lock
out
out
out
out
out
out
out
out
out
out
out
in
in
in
in
in
in
in
in
in
std
(bad)
(bad)
rol
mov
add
add
mov
(bad)
(bad)
sar
xchg
lahf
push
and
movs
pop
jg
pop
jle
pop
jl
pop
jnp
pop
jp
pusha
js
popa
ja
bound
arpl
fs
sar
idiv
clc
div
neg
fstp
fstp
fstp
fstp
fstp
fstp
fstp
fstp
fstp
fstp
fstp
(bad)
icebp
icebp
lock
out
out
out
out
out
out
out
out
in
in
in
in
in
in
std
(bad)
(bad)
rol
mov
add
add
mov
(bad)
(bad)
sar
mov
xchg
test
and
test
jl
pop
jp
pop
jns
pusha
js
popa
jbe
bound
arpl
mov
clc
stc
stc
clc
clc
clc
idiv
clc
div
div
div
cmc
div
cmc
cmc
cmc
hlt
cmc
cmc
repz
hlt
repz
icebp
icebp
lock
lock
out
out
out
out
out
in
out
out
std
(bad)
(bad)
rol
mov
add
add
mov
(bad)
(bad)
sar
mov
mov
test
and
movs
pop
jg
pop
jge
pop
jl
pop
jnp
pop
jns
pusha
js
popa
ja
vcvttpd2dq
out
cli
cli
stc
cli
cli
fstp
fstp
fstp
fstp
fstp
fstp
fstp
fstp
fstp
fstp
fstp
fstp
repz
hlt
repnz
repnz
icebp
lock
out
out
out
out
out
std
(bad)
(bad)
rol
mov
add
add
mov
(bad)
(bad)
sar
mov
mov
xchg
lahf
push
and
movs
pop
jg
pop
jle
pop
jl
pop
jnp
pop
jp
pusha
js
popa
sar
cli
sti
sti
cli
sti
sti
stc
cli
cli
stc
cli
cli
clc
stc
stc
clc
clc
clc
idiv
clc
div
div
div
cmc
div
hlt
cmc
cmc
hlt
hlt
hlt
repz
icebp
icebp
lock
lock
(bad)
(bad)
rol
mov
add
add
mov
(bad)
(bad)
sar
lea
xchg
push
mov
xchg
lahf
push
test
and
test
jl
pop
jp
pop
sar
sti
cld
cld
sti
cld
cld
fstp
fstp
fstp
fstp
fstp
fstp
fstp
fstp
fstp
fstp
fstp
fstp
div
div
cmc
cmc
hlt
cmc
cmc
repz
hlt
repnz
repnz
icebp
icebp
std
(bad)
(bad)
rol
mov
add
add
mov
(bad)
(bad)
sar
mov
mov
mov
mov
test
and
movs
pop
jg
pop
jge
pop
jl
pop
sar
cld
std
std
cld
std
std
sti
cld
cld
sti
cld
cld
cli
sti
sti
cli
sti
sti
stc
cli
cli
stc
cli
cli
clc
stc
stc
clc
clc
clc
idiv
clc
div
div
div
cmc
cmc
cmc
hlt
hlt
hlt
repz
(bad)
(bad)
rol
mov
add
add
mov
(bad)
(bad)
sar
(bad)
(bad)
dec
mov
mov
mov
mov
xchg
and
movs
pop
jg
pop
jle
pop
sar
std
(bad)
(bad)
std
(bad)
(bad)
std
(bad)
(bad)
std
(bad)
(bad)
std
(bad)
(bad)
std
(bad)
(bad)
std
(bad)
(bad)
std
(bad)
(bad)
std
(bad)
(bad)
std
(bad)
(bad)
std
(bad)
(bad)
std
(bad)
(bad)
std
(bad)
(bad)
nop
rol
mov
xchg
(bad)
(bad)
rol
mov
add
add
mov
(bad)
(bad)
sar
xchg
lea
dec
(bad)
xchg
dec
mov
mov
mov
xchg
lahf
push
test
and
out
std
(bad)
(bad)
std
(bad)
(bad)
std
(bad)
(bad)
std
(bad)
(bad)
std
(bad)
(bad)
std
(bad)
(bad)
std
(bad)
(bad)
std
(bad)
(bad)
std
(bad)
(bad)
std
(bad)
(bad)
std
(bad)
(bad)
std
(bad)
(bad)
std
(bad)
(bad)
xchg
mov
mov
xchg
(bad)
rol
mov
add
add
mov
(bad)
(bad)
sar
xchg
mov
mov
mov
dec
mov
mov
mov
mov
test
and
mov
std
(bad)
(bad)
std
(bad)
(bad)
fcmovu
fcmovu
fcmovu
fcmovu
fcmovu
fcmovu
fcmovu
fcmovu
fcmovu
fcmovu
fcmovu
fcmovu
std
(bad)
(bad)
std
(bad)
(bad)
std
(bad)
(bad)
cdq
mov
xchg
mov
mov
xchg
(bad)
(bad)
rol
mov
add
add
mov
(bad)
(bad)
sar
xchg
xchg
mov
mov
lea
dec
mov
mov
mov
mov
xchg
and
out
std
(bad)
(bad)
std
(bad)
(bad)
std
(bad)
(bad)
std
(bad)
(bad)
std
(bad)
(bad)
std
(bad)
(bad)
std
(bad)
(bad)
std
(bad)
(bad)
std
(bad)
(bad)
std
(bad)
(bad)
std
(bad)
(bad)
std
(bad)
(bad)
std
(bad)
(bad)
popf
mov
cdq
mov
xchg
mov
std
(bad)
(bad)
rol
mov
add
add
mov
(bad)
(bad)
sar
xchg
test
xchg
mov
mov
lea
dec
(bad)
xchg
dec
mov
mov
mov
xchg
lahf
push
sar
std
(bad)
(bad)
std
(bad)
(bad)
fcmovu
fcmovu
fcmovu
fcmovu
fcmovu
fcmovu
fcmovu
fcmovu
fcmovu
fcmovu
fcmovu
fcmovu
std
(bad)
(bad)
std
(bad)
(bad)
std
(bad)
(bad)
mov
jns
mov
xchg
mov
rol
mov
add
add
mov
(bad)
(bad)
sar
stos
call
dec
xchg
mov
mov
mov
mov
dec
mov
mov
mov
mov
sar
std
(bad)
(bad)
std
(bad)
(bad)
std
(bad)
(bad)
std
(bad)
(bad)
std
(bad)
(bad)
std
(bad)
(bad)
std
(bad)
(bad)
std
(bad)
(bad)
std
(bad)
(bad)
std
(bad)
(bad)
std
(bad)
(bad)
std
(bad)
(bad)
std
(bad)
(bad)
mov
jbe
mov
cdq
mov
std
(bad)
(bad)
rol
mov
add
add
mov
(bad)
(bad)
sar
mov
jae
popf
outs
sahf
mov
test
xchg
mov
mov
lea
dec
mov
mov
mov
mov
out
out
(bad)
(bad)
std
(bad)
(bad)
fcmovu
fcmovu
fcmovu
fcmovu
fcmovu
fcmovu
fcmovu
fcmovu
fcmovu
fcmovu
fcmovu
fcmovu
std
(bad)
(bad)
std
(bad)
(bad)
std
(bad)
(bad)
movs
cmps
jno
lods
je
mov
popf
mov
std
(bad)
(bad)
rol
mov
add
add
mov
(bad)
(bad)
sar
scas
cwde
ins
scas
call
push
nop
pop
xchg
mov
dec
xchg
mov
lea
dec
(bad)
xchg
dec
mov
mov
mov
out
out
(bad)
(bad)
std
(bad)
(bad)
std
(bad)
(bad)
std
(bad)
(bad)
std
(bad)
(bad)
std
(bad)
(bad)
std
(bad)
(bad)
std
(bad)
(bad)
std
(bad)
(bad)
std
(bad)
(bad)
std
(bad)
(bad)
std
(bad)
(bad)
std
(bad)
(bad)
test
outs
movs
cmps
jno
lods
je
mov
std
(bad)
(bad)
rol
mov
add
add
mov
(bad)
(bad)
sar
lods
xchg
data16
xchg
stos
xchg
data16
xchg
addr16
push
xchg
pop
xchg
(bad)
push
xchg
lea
dec
(bad)
nop
dec
mov
mov
sar
std
(bad)
(bad)
std
(bad)
(bad)
fcmovu
fcmovu
fcmovu
fcmovu
fcmovu
fcmovu
fcmovu
fcmovu
fcmovu
fcmovu
fcmovu
fcmovu
std
(bad)
(bad)
std
(bad)
(bad)
std
(bad)
(bad)
stos
pushf
ins
test
outs
movs
cmps
jno
lods
je
(bad)
(bad)
rol
mov
add
add
sar
(bad)
(bad)
std
(bad)
(bad)
sar
stos
mov
lea
(bad)
pusha
test
popa
cmps
xchg
popa
cmps
xchg
bound
movs
cdq
mov
addr16
fwait
bound
fs
mov
sar
std
(bad)
(bad)
std
(bad)
(bad)
std
(bad)
(bad)
std
(bad)
(bad)
std
(bad)
(bad)
std
(bad)
(bad)
std
(bad)
(bad)
std
(bad)
(bad)
std
(bad)
(bad)
std
(bad)
(bad)
std
(bad)
(bad)
std
(bad)
(bad)
std
(bad)
(bad)
lods
xchg
imul
std
(bad)
(bad)
loopne
shl
add
cmps
xchg
(bad)
loopne
sar
(bad)
(bad)
std
(bad)
(bad)
sar
test
pop
cmps
xchg
mov
mov
mov
mov
pop
mov
pop
mov
pusha
lahf
cdq
popa
sahf
fwait
bound
arpl
out
out
(bad)
(bad)
std
(bad)
(bad)
fcmovu
fcmovu
fcmovu
fcmovu
fcmovu
fcmovu
fcmovu
fcmovu
fcmovu
fcmovu
fcmovu
fcmovu
std
(bad)
(bad)
std
(bad)
(bad)
std
(bad)
(bad)
mov
lods
xchg
imul
loopne
shl
add
cmps
xchg
(bad)
loopne
sar
(bad)
(bad)
std
(bad)
(bad)
sar
cmps
jg
movs
adc
push
mov
push
mov
push
lahf
lea
(bad)
pop
sahf
xchg
pop
popf
xchg
pop
pushf
xchg
pop
fwait
xchg
pop
call
mov
std
(bad)
(bad)
std
(bad)
(bad)
std
(bad)
(bad)
std
(bad)
(bad)
std
(bad)
(bad)
std
(bad)
(bad)
std
(bad)
(bad)
std
(bad)
(bad)
std
(bad)
(bad)
std
(bad)
(bad)
std
(bad)
(bad)
std
(bad)
(bad)
std
(bad)
(bad)
mov
arpl
imul
cmps
xchg
pop
add
add
sar
(bad)
(bad)
std
(bad)
(bad)
sar
movs
js
mov
dec
mov
dec
mov
dec
sahf
test
xchg
mov
mov
mov
mov
push
xchg
xchg
push
xchg
xchg
push
sar
std
(bad)
(bad)
std
(bad)
(bad)
fcmovu
fcmovu
fcmovu
fcmovu
fcmovu
fcmovu
fcmovu
fcmovu
fcmovu
fcmovu
fcmovu
fcmovu
std
(bad)
(bad)
std
(bad)
(bad)
std
(bad)
(bad)
mov
arpl
lods
xchg
imul
shl
add
cmps
xchg
(bad)
loopne
sar
(bad)
(bad)
std
(bad)
(bad)
sar
mov
inc
mov
inc
lahf
jns
lahf
jnp
sahf
jge
popf
jg
pushf
or
dec
call
mov
lea
(bad)
push
sar
std
(bad)
(bad)
std
(bad)
(bad)
std
(bad)
(bad)
std
(bad)
(bad)
std
(bad)
(bad)
std
(bad)
(bad)
std
(bad)
(bad)
std
(bad)
(bad)
std
(bad)
(bad)
std
(bad)
(bad)
std
(bad)
(bad)
std
(bad)
(bad)
std
(bad)
(bad)
mov
arpl
arpl
(bad)
loopne
shl
add
cmps
xchg
(bad)
loopne
sar
(bad)
(bad)
std
(bad)
inc
mov
sar
sar
sar
sar
sar
sar
sar
sar
sar
std
(bad)
(bad)
std
(bad)
(bad)
std
(bad)
(bad)
fcmovu
fcmovu
fcmovu
fcmovu
fcmovu
fcmovu
fcmovu
fcmovu
fcmovu
fcmovu
fcmovu
fcmovu
std
(bad)
(bad)
std
(bad)
(bad)
std
(bad)
(bad)
mov
arpl
arpl
(bad)
loopne
shl
add
cmps
xchg
(bad)
loopne
sar
(bad)
(bad)
std
(bad)
(bad)
std
(bad)
(bad)
std
(bad)
(bad)
std
(bad)
(bad)
std
(bad)
(bad)
std
(bad)
(bad)
std
(bad)
(bad)
std
(bad)
(bad)
std
(bad)
(bad)
std
(bad)
(bad)
std
(bad)
(bad)
std
(bad)
(bad)
std
(bad)
(bad)
std
(bad)
(bad)
std
(bad)
(bad)
std
(bad)
(bad)
std
(bad)
(bad)
std
(bad)
(bad)
std
(bad)
(bad)
std
(bad)
(bad)
std
(bad)
(bad)
std
(bad)
(bad)
std
(bad)
(bad)
std
(bad)
(bad)
std
(bad)
(bad)
std
(bad)
(bad)
std
(bad)
(bad)
std
(bad)
(bad)
std
(bad)
(bad)
std
(bad)
(bad)
std
(bad)
(bad)
std
(bad)
(bad)
std
(bad)
(bad)
std
(bad)
(bad)
std
(bad)
(bad)
std
(bad)
(bad)
std
(bad)
(bad)
std
(bad)
(bad)
std
(bad)
(bad)
loopne
shl
add
cmps
xchg
(bad)
loopne
sar
(bad)
(bad)
std
(bad)
(bad)
std
(bad)
(bad)
std
(bad)
(bad)
std
(bad)
(bad)
std
(bad)
(bad)
std
(bad)
(bad)
std
(bad)
(bad)
std
(bad)
(bad)
std
(bad)
(bad)
std
(bad)
(bad)
std
(bad)
(bad)
std
(bad)
(bad)
std
(bad)
(bad)
std
(bad)
(bad)
std
(bad)
(bad)
std
(bad)
(bad)
std
(bad)
(bad)
std
(bad)
(bad)
std
(bad)
(bad)
std
(bad)
(bad)
(bad)
std
std
(bad)
(bad)
(bad)
std
std
std
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
(bad)
(bad)
(bad)
std
(bad)
(bad)
std
(bad)
(bad)
std
(bad)
(bad)
std
(bad)
(bad)
std
(bad)
(bad)
std
(bad)
(bad)
std
(bad)
(bad)
loopne
shl
add
cmps
xchg
(bad)
loopne
sar
(bad)
(bad)
std
(bad)
(bad)
std
(bad)
(bad)
std
(bad)
(bad)
std
(bad)
(bad)
std
(bad)
(bad)
std
(bad)
(bad)
std
(bad)
(bad)
std
(bad)
(bad)
std
(bad)
(bad)
std
(bad)
(bad)
std
(bad)
(bad)
std
(bad)
(bad)
std
(bad)
(bad)
std
(bad)
(bad)
std
(bad)
(bad)
std
(bad)
(bad)
std
(bad)
(bad)
std
(bad)
(bad)
std
(bad)
(bad)
std
(bad)
(bad)
std
(bad)
(bad)
std
(bad)
(bad)
std
(bad)
(bad)
std
(bad)
(bad)
std
(bad)
(bad)
std
(bad)
(bad)
std
(bad)
(bad)
std
(bad)
(bad)
std
(bad)
(bad)
std
(bad)
(bad)
std
(bad)
(bad)
std
(bad)
(bad)
std
(bad)
(bad)
std
(bad)
(bad)
std
(bad)
(bad)
std
(bad)
(bad)
std
(bad)
(bad)
std
(bad)
(bad)
std
(bad)
(bad)
loopne
shl
add
cmps
xchg
(bad)
loopne
sar
sar
mov
sar
mov
sar
mov
sar
mov
sar
mov
sar
mov
sar
mov
sar
mov
sar
mov
sar
loopne
shl
add
cmps
xchg
(bad)
loopne
shl
(bad)
loopne
shl
(bad)
loopne
shl
(bad)
loopne
shl
(bad)
loopne
shl
(bad)
loopne
shl
(bad)
loopne
shl
(bad)
loopne
shl
(bad)
loopne
shl
(bad)
loopne
shl
(bad)
loopne
shl
(bad)
loopne
shl
(bad)
loopne
shl
(bad)
loopne
shl
(bad)
loopne
shl
(bad)
loopne
shl
(bad)
loopne
shl
(bad)
loopne
shl
(bad)
loopne
shl
(bad)
loopne
shl
(bad)
loopne
shl
(bad)
cmps
xchg
pop
add
add
shl
(bad)
loopne
shl
(bad)
loopne
shl
(bad)
loopne
shl
(bad)
loopne
shl
(bad)
loopne
shl
(bad)
loopne
shl
(bad)
loopne
shl
(bad)
loopne
shl
(bad)
loopne
shl
(bad)
loopne
shl
(bad)
loopne
shl
(bad)
loopne
shl
(bad)
loopne
shl
(bad)
loopne
shl
(bad)
loopne
rcl
push
(bad)
xchg
jns
xchg
jns
loopne
shl
(bad)
xchg
jns
xchg
jns
loopne
shl
add
(bad)
cmps
xchg
(bad)
cmps
xchg
(bad)
cmps
xchg
(bad)
cmps
xchg
(bad)
cmps
xchg
(bad)
cmps
xchg
(bad)
cmps
xchg
(bad)
cmps
xchg
(bad)
cmps
xchg
(bad)
cmps
xchg
(bad)
cmps
xchg
(bad)
cmps
xchg
(bad)
cmps
xchg
(bad)
cmps
xchg
(bad)
cmps
xchg
(bad)
cmps
xchg
(bad)
cmps
xchg
(bad)
cmps
xchg
(bad)
cmps
xchg
(bad)
cmps
xchg
(bad)
cmps
xchg
(bad)
cmps
xchg
(bad)
cmps
xchg
(bad)
cmps
xchg
(bad)
cmps
xchg
(bad)
cmps
xchg
(bad)
cmps
xchg
(bad)
cmps
xchg
(bad)
cmps
xchg
(bad)
cmps
xchg
(bad)
cmps
xchg
(bad)
cmps
xchg
(bad)
cmps
xchg
(bad)
cmps
xchg
(bad)
cmps
xchg
(bad)
cmps
xchg
(bad)
cmps
xchg
(bad)
cmps
xchg
(bad)
cmps
xchg
(bad)
cmps
xchg
pop
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
(bad)
(bad)
jmp
(bad)
(bad)
jmp
(bad)
(bad)
jmp
(bad)
(bad)
jmp
(bad)
(bad)
jmp
(bad)
(bad)
jmp
add
pop
test
rol
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
test
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
(bad)
(bad)
jmp
(bad)
(bad)
jmp
(bad)
(bad)
jmp
(bad)
(bad)
jmp
add
add
add
add
add
sbb
add
add
(bad)
cmps
xchg
(bad)
cmps
xchg
(bad)
cmps
xchg
(bad)
cmps
xchg
(bad)
cmps
xchg
(bad)
cmps
xchg
(bad)
cmps
xchg
(bad)
cmps
xchg
(bad)
cmps
xchg
(bad)
cmps
xchg
(bad)
cmps
xchg
(bad)
cmps
xchg
(bad)
cmps
xchg
(bad)
cmps
xchg
(bad)
cmps
xchg
(bad)
cmps
xchg
(bad)
cmps
xchg
(bad)
cmps
xchg
(bad)
cmps
xchg
(bad)
cmps
xchg
(bad)
cmps
xchg
(bad)
cmps
xchg
(bad)
cmps
xchg
(bad)
cmps
xchg
(bad)
cmps
xchg
(bad)
cmps
xchg
(bad)
cmps
xchg
(bad)
jns
jae
add
add
add
out
sti
stc
idiv
stc
idiv
stc
idiv
stc
idiv
stc
idiv
stc
idiv
stc
idiv
stc
idiv
stc
idiv
stc
idiv
stc
idiv
stc
idiv
stc
idiv
stc
idiv
stc
idiv
stc
idiv
stc
idiv
stc
idiv
stc
idiv
stc
idiv
stc
idiv
stc
idiv
stc
idiv
stc
idiv
stc
idiv
stc
idiv
stc
mul
add
add
cmps
xchg
(bad)
div
out
cld
cld
cld
stc
std
push
clc
cli
cli
(bad)
push
cld
push
stc
cld
cmc
stc
sti
clc
std
(bad)
(bad)
(bad)
(bad)
std
(bad)
(bad)
cld
(bad)
(bad)
cli
(bad)
(bad)
stc
(bad)
push
sti
(bad)
cmc
div
div
clc
div
clc
div
div
cmc
hlt
repnz
repnz
lock
icebp
lock
icebp
lock
icebp
icebp
repnz
stc
mul
add
add
cmps
xchg
(bad)
div
icebp
sti
stc
idiv
sti
cld
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
repnz
div
clc
idiv
stc
div
clc
cmc
div
repz
hlt
repnz
out
out
in
in
in
in
in
in
in
in
out
sti
stc
mul
add
add
cmps
xchg
(bad)
clc
div
sti
stc
imul
mov
mov
sar
sar
sar
lods
mov
hlt
cmc
test
retf
retf
retf
retf
retf
retf
retf
retf
retf
retf
retf
retf
retf
hlt
hlt
cmc
icebp
repnz
out
out
in
in
in
in
in
out
sti
stc
mul
add
add
cmps
xchg
(bad)
div
repz
stc
not
mov
and
cmps
pop
jnp
pop
jns
pusha
ja
bound
arpl
gs
sar
repnz
div
clc
idiv
stc
idiv
stc
idiv
stc
idiv
stc
idiv
stc
div
clc
hlt
cmc
cmc
out
lock
in
in
in
in
out
out
sti
stc
mul
add
add
cmps
xchg
(bad)
div
repz
stc
not
mov
test
and
pop
js
popa
jbe
arpl
sar
repz
retf
retf
retf
retf
retf
retf
retf
retf
retf
retf
retf
retf
retf
retf
retf
retf
retf
retf
div
clc
hlt
div
lock
icebp
out
out
out
out
out
lock
stc
mul
add
add
cmps
xchg
(bad)
div
repz
stc
not
mov
mov
test
jg
pop
jge
pop
jnp
pop
jns
pusha
jbe
vcvttpd2dq
out
div
cmc
div
div
clc
idiv
stc
idiv
stc
idiv
stc
idiv
stc
div
clc
cmc
div
repnz
lock
sti
stc
mul
add
add
cmps
xchg
(bad)
div
repz
stc
not
mov
mov
xchg
mov
jle
pop
jl
pop
jns
pusha
sar
hlt
idiv
div
stc
idiv
clc
idiv
stc
idiv
stc
idiv
stc
idiv
stc
idiv
stc
idiv
stc
idiv
stc
idiv
stc
idiv
stc
sti
stc
mul
add
add
cmps
xchg
(bad)
div
repz
stc
not
mov
lea
mov
xchg
and
mov
hlt
idiv
retf
retf
retf
retf
retf
retf
retf
retf
retf
retf
retf
retf
retf
retf
retf
retf
retf
retf
idiv
stc
idiv
stc
idiv
stc
idiv
stc
idiv
stc
sti
stc
mul
add
add
cmps
xchg
(bad)
div
repz
stc
not
mov
nop
(bad)
dec
mov
mov
xchg
and
mov
hlt
cmc
stc
clc
stc
cli
idiv
stc
idiv
stc
idiv
stc
idiv
stc
idiv
stc
idiv
stc
idiv
stc
idiv
stc
idiv
stc
idiv
stc
sti
stc
mul
add
add
cmps
xchg
(bad)
div
repz
stc
not
mov
xchg
mov
mov
dec
lea
cdq
push
xchg
mov
out
out
idiv
retf
retf
retf
retf
retf
retf
retf
retf
retf
retf
retf
retf
retf
retf
retf
retf
retf
retf
idiv
stc
idiv
stc
outs
mov
outs
mov
idiv
stc
sti
stc
mul
add
add
cmps
xchg
(bad)
div
repz
stc
not
mov
xchg
xchg
mov
lea
nop
dec
mov
mov
xchg
out
out
idiv
clc
clc
clc
cmc
div
idiv
stc
idiv
stc
idiv
stc
idiv
stc
idiv
stc
idiv
stc
outs
mov
outs
mov
idiv
stc
sti
stc
mul
add
add
cmps
xchg
(bad)
div
repnz
stc
not
mov
cdq
test
inc
xchg
mov
mov
mov
dec
mov
mov
out
out
idiv
retf
retf
retf
retf
retf
retf
retf
retf
retf
retf
retf
retf
retf
retf
retf
retf
retf
retf
idiv
stc
idiv
stc
and
clc
stc
sti
stc
mul
add
add
cmps
xchg
(bad)
div
repnz
stc
not
mov
mov
fs
mov
xchg
mov
lea
dec
lea
sar
hlt
idiv
idiv
stc
div
clc
idiv
clc
div
clc
div
clc
idiv
stc
idiv
stc
idiv
stc
mov
idiv
stc
sti
stc
mul
add
add
cmps
xchg
(bad)
div
hlt
sti
stc
not
mov
mov
jp
movs
jl
lahf
jb
lahf
outs
cmps
popf
imul
sar
cmc
idiv
retf
retf
retf
retf
retf
retf
retf
retf
retf
retf
retf
retf
retf
retf
retf
retf
retf
retf
idiv
stc
idiv
stc
xchg
add
push
idiv
stc
sti
stc
mul
add
add
cmps
xchg
(bad)
cld
cld
std
sti
stc
not
mov
mov
outs
mov
outs
mov
jno
pushf
jno
lahf
jae
mov
lods
cmps
jbe
test
out
out
idiv
idiv
stc
idiv
clc
idiv
stc
div
clc
idiv
stc
idiv
stc
idiv
stc
idiv
stc
mov
inc
idiv
stc
sti
stc
mul
add
add
cmps
xchg
(bad)
cld
cld
cld
sti
stc
not
mov
mov
bound
lods
xchg
lods
xchg
data16
xchg
addr16
push
lahf
imul
mov
idiv
retf
retf
retf
retf
retf
retf
retf
retf
retf
retf
retf
retf
retf
retf
retf
retf
retf
retf
idiv
stc
idiv
stc
mov
cmp
clc
stc
sti
stc
mul
add
add
cmps
xchg
(bad)
cld
cld
cld
sti
stc
not
mov
stos
jle
stos
adc
push
test
pop
test
pop
cmps
mov
lea
xchg
pop
mov
mov
idiv
idiv
stc
idiv
stc
idiv
stc
idiv
stc
idiv
stc
idiv
stc
idiv
stc
idiv
stc
mov
cmp
clc
stc
sti
stc
mul
add
add
cmps
xchg
(bad)
cld
cld
sti
sti
stc
test
mov
mov
sar
sar
sar
sar
cli
sti
cld
cli
sti
cld
retf
retf
retf
retf
retf
retf
retf
retf
retf
retf
retf
retf
retf
retf
retf
retf
retf
retf
idiv
stc
idiv
stc
mov
cmp
clc
stc
sti
stc
mul
add
add
cmps
xchg
(bad)
sti
stc
idiv
stc
idiv
stc
idiv
stc
idiv
stc
idiv
stc
idiv
stc
idiv
stc
idiv
stc
idiv
stc
idiv
stc
idiv
stc
idiv
stc
idiv
stc
idiv
stc
idiv
stc
idiv
stc
idiv
stc
idiv
stc
idiv
stc
idiv
stc
idiv
stc
idiv
stc
idiv
stc
idiv
stc
idiv
stc
idiv
stc
idiv
stc
mul
add
add
cmps
xchg
(bad)
div
repz
stc
cli
idiv
stc
idiv
stc
idiv
stc
idiv
stc
idiv
stc
idiv
stc
idiv
stc
idiv
stc
idiv
stc
idiv
stc
idiv
stc
idiv
stc
idiv
stc
clc
clc
stc
idiv
stc
idiv
clc
idiv
clc
idiv
clc
idiv
clc
idiv
clc
idiv
stc
idiv
stc
idiv
stc
idiv
stc
clc
stc
cli
sti
stc
mul
add
add
cmps
xchg
(bad)
retf
leave
(bad)
retf
leave
(bad)
retf
leave
(bad)
retf
leave
(bad)
retf
leave
(bad)
retf
leave
(bad)
retf
leave
(bad)
retf
leave
(bad)
retf
leave
(bad)
retf
leave
(bad)
retf
leave
(bad)
retf
leave
(bad)
retf
leave
(bad)
retf
leave
(bad)
retf
leave
(bad)
retf
leave
(bad)
int3
retf
retf
retf
retf
retf
leave
int3
retf
retf
leave
(bad)
retf
leave
(bad)
retf
leave
(bad)
retf
leave
(bad)
retf
leave
(bad)
cmps
xchg
pop
add
add
add
fcomp
xlat
rcr
xlat
rcr
xlat
rcr
xlat
rcr
xlat
rcr
xlat
rcr
xlat
rcr
xlat
rcr
xlat
rcr
xlat
rcr
xlat
rcr
xlat
rcr
xlat
rcr
xlat
rcr
xlat
rcr
xlat
rcr
xlat
rcr
xlat
rcr
xlat
rcr
xlat
rcr
xlat
rcl
rcl
rcl
shl
add
add
add
add
(bad)
cmps
xchg
(bad)
cmps
xchg
(bad)
cmps
xchg
(bad)
cmps
xchg
(bad)
cmps
xchg
(bad)
cmps
xchg
(bad)
cmps
xchg
(bad)
cmps
xchg
(bad)
cmps
xchg
(bad)
cmps
xchg
(bad)
cmps
xchg
(bad)
cmps
xchg
(bad)
cmps
xchg
(bad)
cmps
xchg
(bad)
cmps
xchg
(bad)
cmps
xchg
(bad)
cmps
xchg
(bad)
cmps
xchg
(bad)
cmps
xchg
(bad)
cmps
xchg
(bad)
cmps
xchg
(bad)
cmps
xchg
(bad)
cmps
xchg
(bad)
cmps
xchg
(bad)
cmps
xchg
(bad)
cmps
xchg
(bad)
mov
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
add
add
add
add
add
add
add
add
(bad)
cmps
xchg
(bad)
cmps
xchg
(bad)
cmps
xchg
(bad)
cmps
xchg
(bad)
cmps
xchg
(bad)
cmps
xchg
(bad)
cmps
xchg
(bad)
cmps
xchg
(bad)
cmps
xchg
(bad)
cmps
xchg
(bad)
cmps
xchg
(bad)
cmps
xchg
(bad)
cmps
xchg
(bad)
cmps
xchg
(bad)
cmps
xchg
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
cld
cld
cld
cli
cli
cli
clc
clc
clc
cmc
cmc
cmc
repz
icebp
icebp
out
out
out
in
in
in
jmp
call
xchg
(bad)
cmps
xchg
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
cld
cld
cld
cli
cli
cli
clc
clc
clc
cmc
cmc
cmc
cmc
cmc
cmc
repz
out
out
jmp
jmp
jmp
cmps
xchg
(bad)
cmps
xchg
(bad)
(bad)
(bad)
inc
pop
jge
pop
ja
popa
jae
gs
test
retf
retf
retf
in
jmp
jmp
call
cmps
xchg
(bad)
(bad)
(bad)
dec
push
test
jp
pop
stc
stc
stc
div
div
hlt
hlt
hlt
hlt
hlt
icebp
icebp
icebp
out
out
out
in
in
in
jmp
xchg
(bad)
(bad)
(bad)
call
dec
mov
and
int3
retf
retf
retf
retf
icebp
jnp
pop
in
in
in
cmps
xchg
(bad)
cmps
xchg
(bad)
(bad)
(bad)
call
dec
xchg
mov
xchg
dec
mov
cli
cli
cli
clc
clc
clc
clc
clc
clc
cmc
cmc
cmc
repz
cmps
xchg
(bad)
cmps
xchg
(bad)
(bad)
(bad)
call
inc
xchg
add
dec
(bad)
nop
dec
std
std
std
int
retf
retf
retf
retf
cmc
xchg
jle
out
out
out
cmps
xchg
(bad)
cmps
xchg
(bad)
(bad)
(bad)
jmp
ds
jne
cwde
jl
xchg
test
(bad)
(bad)
(bad)
(bad)
(bad)
std
std
std
sti
sti
sti
stc
stc
stc
div
mul
icebp
cmps
xchg
(bad)
cmps
xchg
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
std
std
std
sti
sti
sti
stc
stc
stc
div
div
hlt
hlt
icebp
icebp
icebp
cmps
xchg
(bad)
cmps
xchg
(bad)
int
retf
retf
retf
retf
retf
retf
retf
retf
retf
retf
retf
retf
retf
retf
(bad)
cmps
xchg
(bad)
loopne
shl
(bad)
loopne
shl
(bad)
loopne
shl
(bad)
loopne
shl
(bad)
loopne
rcl
rcl
rcl
(bad)
cmps
xchg
(bad)
cmps
xchg
(bad)
cmps
xchg
(bad)
cmps
xchg
(bad)
cmps
xchg
(bad)
cmps
xchg
(bad)
cmps
xchg
(bad)
cmps
xchg
(bad)
cmps
xchg
(bad)
cmps
xchg
(bad)
cmps
xchg
(bad)
cmps
xchg
(bad)
cmps
xchg
(bad)
cmps
xchg
(bad)
cmps
xchg
(bad)
cmps
xchg
pop
add
add
jmp
add
lods
inc
add
lods
inc
add
lods
inc
add
lods
inc
add
lods
inc
add
lods
inc
add
lods
inc
add
lods
inc
add
lods
inc
add
lods
inc
add
lods
inc
add
lods
inc
add
lods
inc
(bad)
jmp
ret
mov
pop
fwait
cmp
add
add
sbb
add
add
popa
ins
ins
add
push
push
add
(bad)
push
jns
je
ins
add
adc
je
or
push
imul
adc
jns
gs
adc
arpl
gs
add
dec
gs
popa
addr16
sbb
inc
outs
ins
ins
inc
je
ins
add
push
push
push
dec
add
push
gs
je
add
push
imul
sbb
push
jb
dec
outs
outs
add
dec
dec
push
jns
je
ins
add
mov
add
dec
dec
add
push
imul
add
push
jae
push
dec
add
push
ins
dec
gs
jo
xor
adc
dec
dec
push
outs
add
inc
dec
outs
ins
pop
dec
imul
js
add
dec
gs
imul
imul
cmp
popa
arpl
imul
imul
ins
arpl
outs
add
add
add
add
add
xor
add
add
add
add
and
add
add
add
add
adc
add
add
add
add
xor
je
xor
add
push
add
pop
add
inc
add
push
add
dec
add
pop
add
dec
add
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
add
rol
add
add
push
add
add
outs
add
inc
add
ins
add
dec
add
data16
add
scas
add
add
add
add
xor
cmp
xor
xor
add
add
sbb
add
add
inc
add
ins
add
add
je
jae
add
add
add
call
add
ins
add
popa
add
jns
dec
add
ins
add
add
add
mov
add
add
add
outs
add
jo
outs
add
popa
add
add
outs
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
imul
inc
add
jae
arpl
jb
imul
imul
add
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
add
ins
add
push
add
jb
jae
imul
add
add
xor
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
dec
add
add
ins
add
outs
add
jns
jb
imul
je
add
mov
add
add
add
outs
add
jo
outs
add
popa
add
add
outs
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
popa
add
inc
add
ins
add
dec
add
data16
add
add
and
add
add
push
add
popa
add
jae
ins
add
je
imul
add
add
or
add
aas
js
ins
and
jb
imul
xor
and
arpl
imul
inc
sub
je
outs
fs
ins
outs
outs
gs
and
ds
jae
ins
bound
js
ins
outs
jae
and
outs
cmp
push
sub
outs
jae
data16
arpl
cmp
ins
cs
and
ins
popa
outs
imul
jb
imul
xor
and
popa
jae
gs
bound
fs
je
je
or
and
jb
imul
xor
xor
xor
or
and
outs
arpl
jae
jb
jb
push
je
jb
cmp
or
and
and
ins
gs
jb
jae
data16
push
imul
push
dec
dec
and
and
gs
xor
and
ds
fs
jb
jo
imul
jb
and
jae
popa
ins
ins
and
imul
sub
popa
je
and
je
jo
jae
data16
popa
jb
cmp
fs
jb
jo
imul
and
jb
jae
dec
outs
outs
and
ins
outs
jae
and
outs
cmp
push
sub
outs
jae
data16
arpl
cmp
ins
cs
and
or
and
arpl
imul
and
and
cmp
gs
gs
gs
jb
jbe
ins
gs
or
and
and
and
gs
gs
gs
js
arpl
imul
ins
and
gs
cmp
jne
jb
inc
fs
imul
je
jb
das
ds
and
and
jb
jno
gs
gs
jb
jbe
ins
gs
or
and
jae
arpl
imul
cmp
je
jne
je
outs
outs
ds
fs
outs
fs
arpl
or
and
gs
outs
fs
je
jae
gs
bound
or
and
and
jae
gs
bound
fs
je
je
or
and
and
and
gs
xor
and
and
and
and
ins
gs
jb
jae
data16
push
imul
inc
outs
ins
ins
outs
outs
sub
jb
ins
jae
or
and
and
and
jb
imul
xor
xor
xor
or
and
and
and
bound
dec
gs
outs
imul
and
xor
xor
xor
arpl
xor
or
and
and
and
addr16
addr16
or
and
and
and
and
outs
arpl
jae
jb
jb
push
je
jb
cmp
ds
and
fs
outs
fs
je
jae
gs
bound
or
das
fs
outs
fs
arpl
or
jae
gs
bound
add
push
ins
popa
jb
and
jae
popa
ins
ins
and
imul
jbe
and
xor
xor
xor
xor
aaa
xor
xor
add
add
add
icebp
repnz
out
loop
loopne
iret
lock
in
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
inc
outs
jo
jb
addr16
xor
xor
sub
mov
ins
and
jb
outs
jb
je
outs
outs
add
popa
push
xor
aaa
aaa
aaa
xor
xor
add
add
ss
aaa
aaa
xor
xor
xor
add
outs
ins
popa
add
add
imul
and
popa
imul
add
xor
xor
xor
xor
inc
outs
jo
jb
addr16
xor
xor
sub
mov
ins
and
jb
outs
jb
je
outs
outs
and
iret
lock
in
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
xor
xor
xor
xor
xor
add
add
je
cmp
das
add
add
add
add
add
ins
and
jb
outs
jb
je
outs
outs
add
xor
xor
xor
add
add
add
add
add
lock
in
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lock
in
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
xor
cmp
add
es
add
xor
xor
imul
cmp
dec
inc
das
dec
push
das
xor
xor
das
pop
push
das
xor
xor
and
jb
gs
push
imul
xor
and
jb
gs
aaa
add
add
add
icebp
repnz
out
loop
loopne
iret
lock
in
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
xor
xor
xor
xor
xor
xor
aaa
aaa
aaa
xor
xor
add
aaa
cmp
push
das
das
add
in
jmp
in
call
call
in
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
xor
xor
xor
add
add
xor
xor
xor
xor
xor
xor
xor
xor
xor
inc
and
and
outs
imul
cs
add
es
outs
imul
imul
add
xor
cmp
xor
add
add
lock
in
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
add
add
add
add
lock
in
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lock
in
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
mov
add
add
add
add
add
add
add
add
add
ss
add
add
pop
push
jb
addr16
ins
inc
popa
je
pop
dec
outs
je
ins
sub
and
outs
popa
gs
outs
je
jb
outs
cs
add
add
add
pop
push
jb
addr16
ins
inc
popa
je
pop
dec
outs
je
ins
sub
and
outs
popa
gs
outs
je
imul
jb
imul
add
add
add
pop
push
jb
addr16
ins
inc
popa
je
pop
dec
outs
je
ins
sub
and
outs
popa
gs
outs
je
imul
imul
xor
xor
xor
inc
cmp
outs
addr16
ins
inc
popa
je
pop
dec
outs
je
ins
sub
and
outs
popa
gs
outs
je
jb
outs
cs
add
xor
xor
xor
xor
inc
cmp
outs
addr16
ins
inc
popa
je
pop
dec
outs
je
ins
sub
and
outs
popa
gs
outs
je
imul
imul
add
add
add
add
jae
imul
icebp
icebp
jmp
xor
add
add
loopne
and
lock
repnz
in
and
loopne
repnz
and
icebp
repnz
out
loop
call
jmp
out
in
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
and
lock
jecxz
loopne
in
loopne
repz
repnz
out
loop
repnz
lock
in
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
loop
clc
and
out
in
out
cld
(bad)
repnz
cs
in
in
and
loopne
loopne
out
in
and
icebp
repnz
out
loop
call
out
in
in
in
in
icebp
jmp
out
jmp
icebp
in
out
out
repz
in
in
sti
in
out
lock
in
call
repnz
and
out
out
out
jmp
repnz
lock
jecxz
loopne
in
in
repz
repnz
out
loop
call
out
loop
repnz
and
call
in
sti
in
hlt
loopne
jmp
and
in
and
in
in
loopne
lock
call
or
loopne
in
call
loopne
in
and
repnz
loope
and
lock
in
jmp
call
int
out
call
loopne
in
sub
in
jmp
out
lock
in
jmp
in
call
repnz
out
loop
call
jmp
and
sti
and
out
bnd
sti
loope
loopne
cld
and
lock
(bad)
and
loopne
jmp
repz
repnz
out
loop
call
out
call
loope
out
lock
jmp
and
icebp
repnz
out
loop
call
jmp
jecxz
loopne
in
sti
and
lock
repz
icebp
jmp
jmp
call
xor
xor
dec
bound
icebp
loop
loope
in
out
jecxz
and
call
out
jecxz
and
lock
icebp
repnz
icebp
repnz
cs
loopne
in
call
icebp
repnz
out
loop
repnz
and
jmp
and
loopne
loopne
loopne
repz
repnz
out
loop
call
and
loopne
loopne
sub
div
out
loope
and
lock
loop
lock
jmp
and
loopne
out
loop
and
loop
icebp
bnd
out
lock
loopne
call
jmp
repz
repnz
out
loop
call
in
out
call
out
out
jmp
lock
in
loopne
icebp
jmp
repnz
icebp
in
in
in
loope
out
in
in
sti
in
hlt
loopne
jmp
and
lock
in
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
repnz
out
loop
loopne
iret
lock
in
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
in
in
out
and
loopne
in
clc
in
loopne
shl
repnz
out
loop
loopne
iret
lock
in
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
out
jmp
in
loopne
or
out
call
out
repnz
loop
and
jmp
and
sti
cmc
out
in
and
out
out
lock
jecxz
loopne
in
sti
and
icebp
repnz
out
loop
call
jmp
repz
repnz
out
loop
call
jmp
out
in
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
in
icebp
jmp
in
out
icebp
repnz
out
imul
out
and
loop
loope
in
out
jecxz
and
in
repnz
and
icebp
loop
loope
in
repnz
in
in
repnz
and
loopne
std
repnz
in
and
call
call
sti
loope
lock
lock
jmp
jmp
in
out
out
in
in
out
in
icebp
out
jecxz
loopne
in
call
out
div
call
icebp
jmp
loop
jmp
jmp
mul
in
out
out
in
in
out
jecxz
and
out
jecxz
loopne
in
call
lock
and
icebp
repnz
out
loop
out
jmp
jmp
out
in
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
loope
lock
loopne
jmp
in
out
loop
call
in
call
loopne
jmp
repz
repnz
out
loop
call
jmp
out
in
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
loope
lock
lock
jecxz
loopne
in
in
repz
and
lock
out
repz
repz
and
icebp
repnz
out
loop
repnz
and
lock
jmp
lock
in
sti
aas
add
sti
loope
lock
out
out
out
jmp
call
in
sti
in
push
jmp
jmp
and
out
repnz
loop
and
jmp
and
loopne
loopne
loopne
repz
repnz
out
loop
call
repnz
lock
mul
icebp
icebp
and
icebp
repnz
out
loop
call
out
jmp
jmp
out
call
cs
icebp
jmp
and
sti
and
lock
in
in
repz
jmp
loop
jmp
icebp
out
jecxz
loopne
in
call
loopne
in
call
in
out
out
jmp
loopne
in
cs
repnz
loope
and
icebp
repnz
out
loop
repnz
and
lock
in
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
and
out
jmp
in
sti
and
lock
and
icebp
jmp
loop
jmp
icebp
out
jecxz
loopne
in
call
sti
loope
lock
loopne
jmp
in
(bad)
and
iret
repz
jmp
out
repnz
lock
and
repz
repnz
out
in
in
in
sti
and
lock
jmp
in
loopne
jmp
loop
in
out
jmp
jecxz
loopne
in
sti
cs
sti
and
loopne
out
and
out
out
repnz
loop
in
bnd
jecxz
in
call
loopne
jmp
repz
bnd
lock
in
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
in
out
repnz
cld
and
popa
fs
gs
out
jecxz
loopne
in
add
loopne
in
and
add
int
out
in
into
repnz
in
loopne
shl
repnz
out
loop
repnz
add
loope
out
lock
in
icebp
out
out
loopne
loopne
cld
and
lock
jmp
jmp
jecxz
repz
repnz
out
loop
call
jecxz
loopne
in
in
loopne
and
lock
out
loopne
shr
out
loopne
cld
and
lock
jmp
loope
mul
in
and
repnz
jmp
add
out
out
loopne
cld
and
lock
jmp
lock
loop
in
and
in
inc
shr
out
loopne
cld
and
lock
jmp
in
in
call
repnz
jecxz
and
loopne
repz
jmp
lock
loopne
call
out
call
in
call
int
loop
out
out
out
out
and
out
out
loopne
cld
and
loopne
jmp
and
shr
out
loopne
call
out
call
lock
icebp
repnz
cs
out
out
loopne
call
jmp
jmp
shr
cmc
lock
in
call
hlt
out
lock
loopne
call
jmp
in
call
jmp
push
call
add
loopne
in
clc
in
call
repnz
out
loop
call
ret
out
repnz
loop
add
icebp
repnz
out
loop
loopne
iret
lock
in
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
loopne
out
jecxz
repz
repnz
out
loop
call
iret
lock
jecxz
loopne
in
in
loopne
and
lock
out
loopne
or
jmp
jmp
lock
in
sti
cmp
and
in
icebp
repnz
repnz
cld
in
out
and
out
bnd
repnz
in
call
icebp
repnz
out
loop
repz
lock
in
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
out
loope
out
in
in
out
and
icebp
repnz
call
jmp
in
(bad)
stc
call
icebp
jmp
repz
and
icebp
repnz
cld
repnz
in
icebp
jmp
in
loopne
in
call
dec
or
jmp
and
loopne
jmp
and
repnz
jecxz
and
call
in
out
jecxz
repnz
sti
repnz
and
loopne
in
in
sti
and
and
loopne
jmp
call
in
icebp
jmp
out
repnz
out
jmp
jmp
in
and
loop
in
repnz
out
lock
call
jmp
cld
and
jmp
and
loopne
in
call
loope
out
lock
sti
loope
lock
loopne
loopne
out
jecxz
in
jmp
repz
repnz
out
loop
call
jmp
out
in
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
loope
lock
out
out
out
jmp
call
in
sti
in
push
jmp
jmp
outs
out
in
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
repnz
lock
in
loope
in
repnz
out
out
loopne
sti
and
lock
loopne
out
loop
in
add
out
jmp
mul
in
call
jmp
cs
repnz
out
lock
jecxz
loopne
in
loopne
lock
out
repnz
repnz
out
jmp
jmp
add
loop
in
repnz
out
loopne
out
jmp
and
icebp
repnz
out
loop
call
jecxz
loopne
in
loopne
iret
lock
in
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
and
loopne
out
jmp
in
add
sti
and
out
jmp
in
sti
and
loop
icebp
bnd
out
jmp
and
jmp
and
lock
in
jmp
in
call
repnz
out
loop
call
jmp
out
in
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
in
call
loopne
out
jmp
and
and
loopne
in
call
loopne
in
cs
icebp
jmp
and
sti
and
in
out
loopne
repnz
out
loopne
out
jmp
sub
repnz
and
loopne
in
call
repnz
in
loopne
in
jmp
out
lock
lock
in
call
icebp
repnz
jmp
imul
call
lock
jmp
and
icebp
repnz
out
loop
call
out
jmp
in
call
in
loopne
in
cs
in
call
imul
(bad)
cmp
add
icebp
repnz
out
loop
loopne
iret
lock
in
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lock
in
loopne
add
out
out
loopne
call
dec
sub
out
loop
cs
in
icebp
repnz
jmp
imul
inc
iret
lock
jecxz
loopne
in
loopne
repz
repnz
out
loop
call
out
loop
and
loopne
loopne
cld
and
icebp
repnz
out
loop
repz
lock
in
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
ret
and
out
in
out
cld
(bad)
repnz
cs
loopne
repnz
and
icebp
repnz
out
loop
call
out
out
repnz
loopne
and
in
jmp
repnz
and
lock
in
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
loop
clc
in
out
and
out
in
out
cld
(bad)
repnz
loopne
and
loopne
in
call
in
jmp
repnz
and
jmp
and
loopne
loopne
loopne
out
lock
mul
icebp
icebp
loopne
repz
jmp
in
call
in
jmp
repnz
add
in
jmp
in
call
cmp
(bad)
loopne
and
in
in
loopne
lock
repnz
and
out
in
out
cld
(bad)
repnz
and
in
mul
icebp
add
in
sub
jmp
out
lock
call
repz
in
in
loopne
lock
repz
out
out
in
shl
loopne
in
call
call
in
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
jmp
in
call
call
in
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
loop
clc
in
out
and
out
in
out
cld
(bad)
repnz
loopne
add
loopne
in
clc
in
out
add
in
jmp
in
call
loop
lock
in
out
add
in
jmp
in
call
call
in
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
in
in
out
and
loopne
in
clc
in
out
cs
in
jmp
in
call
jmp
add
out
in
out
call
out
out
jmp
jmp
repnz
jmp
iret
lock
in
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
jmp
in
call
out
jmp
loopne
in
call
call
in
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
in
in
out
and
loopne
in
clc
in
out
cs
loopne
in
call
out
repnz
loop
and
jmp
and
sti
cmc
out
in
and
out
out
lock
jecxz
loopne
in
sti
and
in
jmp
in
call
sti
and
in
icebp
repnz
repnz
cld
in
out
and
out
bnd
lock
loop
repnz
and
in
jmp
in
call
call
in
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
out
in
call
imul
(bad)
cmp
add
icebp
repnz
out
loop
loopne
iret
lock
in
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
out
jmp
in
loopne
or
jmp
out
loop
lock
in
call
repnz
out
loop
call
loope
in
icebp
jmp
out
in
in
loopne
lock
repnz
and
out
in
out
cld
(bad)
repnz
cs
lock
call
bnd
in
loopne
lock
repz
in
mul
icebp
aas
add
out
out
loopne
call
out
out
jmp
jmp
loopne
ja
bound
in
call
in
jmp
in
call
call
in
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
imul
repnz
repnz
and
out
out
jmp
jmp
and
jmp
in
(bad)
stc
repz
and
in
hlt
out
lock
loopne
call
icebp
repnz
out
loop
loopne
iret
lock
in
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
in
in
out
and
loopne
in
clc
in
loopne
add
out
icebp
in
call
bound
and
lock
jecxz
loopne
in
sti
add
repnz
loope
and
icebp
repnz
out
loop
repnz
and
loopne
in
repz
and
lock
jecxz
loopne
in
repz
ret
in
jmp
in
sti
and
sti
out
out
jmp
call
cmc
out
in
loop
icebp
call
repz
loopne
and
in
call
lock
out
lock
jmp
and
icebp
repnz
out
loop
call
jmp
jecxz
loopne
in
sti
and
in
loope
out
in
in
loopne
loope
loope
call
loopne
cs
inc
push
and
popa
ins
gs
jb
and
in
icebp
call
iret
out
out
jmp
jmp
repz
repnz
out
loop
repnz
cs
inc
push
and
popa
ins
gs
jb
and
and
out
loop
out
lock
out
out
sti
repnz
loopne
add
dec
inc
push
and
popa
ins
gs
jb
and
out
out
out
and
jmp
call
repnz
in
in
loopne
and
out
bnd
loopne
loopne
cld
and
lock
in
out
and
in
mul
icebp
aas
add
loopne
jmp
repz
and
repz
in
repnz
in
cmp
shl
stc
in
repnz
(bad)
stc
call
jmp
icebp
repnz
loopne
jmp
loop
in
sti
jmp
jmp
add
loopne
in
call
loopne
in
call
icebp
in
iret
lock
out
repz
bnd
lock
out
repz
bnd
icebp
in
iret
lock
call
loopne
out
clc
call
out
lock
sti
repnz
lock
loop
in
call
jmp
add
loopne
in
call
out
loop
out
lock
div
out
loope
and
out
loop
out
lock
out
out
sti
repnz
out
repz
bnd
div
out
loope
and
lock
out
repz
bnd
loopne
jmp
and
jmp
and
lock
loop
repnz
and
jmp
and
repnz
in
sti
and
icebp
repnz
out
loop
call
out
jmp
jmp
and
jmp
out
repz
and
and
jmp
in
(bad)
stc
in
repz
call
add
repz
cmp
aam
jmp
jae
and
in
in
loopne
in
in
and
and
and
iret
out
out
jmp
jmp
and
icebp
repnz
cld
repnz
out
lock
call
jmp
jmp
sti
loope
lock
lock
(bad)
and
loopne
jmp
add
add
add
add
and
add
add
add
add
add
xor
add
add
add
sub
add
add
add
add
add
add
add
add
add
bound
add
adc
add
add
add
add
push
dec
add
add
pop
add
mov
add
add
imul
add
add
add
out
mov
xchg
push
inc
jne
jl
sbb
lea
adc
add
add
add
add
cs
out
ja
cs
out
out
out
out
out
out
out
out
out
out
out
out
out
ja
ja
jo
dec
and
scas
add
add
mov
scas
mov
lds
retf
adc
movs
cmc
inc
jge
hlt
mov
push
jo
inc
inc
mov
jae
aam
xor
imul
inc
add
add
add
add
sbb
(bad)
mov
pop
add
inc
daa
jo
(bad)
out
lods
sti
aas
sbb
repz
xchg
pop
pop
add
add
nop
movs
add
jg
push
jno
outs
pop
ins
jo
imul
ins
pop
ins
ins
pop
jb
pusha
jo
ins
jae
pop
stos
call
(bad)
mov
pop
adc
inc
enter
out
add
sbb
jge
call
out
rcl
lock
pop
std
inc
inc
fisttp
lss
into
add
fnstsw
mov
push
mov
(bad)
and
inc
cmp
leave
cmc
repnz
jmp
(bad)
cmc
inc
adc
(bad)
fucom
(bad)
pop
inc
aas
idiv
cmp
cwde
inc
mov
(bad)
(bad)
mov
add
jl
pop
gs
inc
in
mov
addr16
or
loopne
sbb
out
(bad)
dec
push
or
int3
add
sub
jl
xor
mov
sub
call
scas
xchg
test
cmps
js
xchg
in
push
(bad)
cwde
nop
frstor
in
sbb
xchg
jns
test
int3
(bad)
pushf
and
mov
xlat
inc
add
xor
mov
fcom
test
inc
dec
fdivr
cwde
test
sub
mov
andps
pop
mov
push
mov
dec
dec
xchg
nop
jo
movs
das
push
inc
ret
jns
in
xor
ret
(bad)
push
cld
add
adc
repnz
ins
xor
or
mov
loope
iret
and
inc
hlt
popa
mov
xchg
neg
dec
dec
call
mov
dec
cmp
and
mov
adc
xor
mov
fisttp
mov
push
cmp
xchg
pop
iret
ss
mov
or
sub
ja
imul
push
lea
fs
and
and
outs
xlat
pushf
test
pop
sub
jg
sar
addr16
mov
int3
mov
dec
mov
movs
dec
add
mov
scas
(bad)
icebp
fild
out
or
or
gs
(bad)
jle
popf
adc
leave
sub
jno
jl
mov
xor
xor
mov
xchg
nop
and
xor
jg
or
call
dec
daa
test
(bad)
movs
les
mov
cmps
xchg
sar
jo
adc
jae
jne
and
imul
stos
and
pushf
leave
or
lahf
movs
xor
popa
or
mov
fwait
adc
sti
ins
(bad)
adc
sub
and
xchg
into
iret
jno
mov
lahf
dec
dec
pop
jg
xchg
adc
inc
es
fdivr
mov
and
sbb
cdq
pop
sub
mov
sub
mov
ret
dec
loope
push
push
mov
sti
or
dec
out
push
aas
mov
fimul
dec
xor
adc
cmps
sub
cmps
mov
xchg
inc
aas
idiv
retf
and
sti
adc
popa
iret
imul
cmps
adc
cmp
mov
popf
in
mov
arpl
xchg
data16
or
sub
xlat
lea
cmps
mov
fiadd
ja
test
shl
xchg
int
fidivr
ffreep
out
daa
inc
aas
xchg
sub
mov
movs
enter
xor
into
(bad)
in
adc
inc
jbe
mov
lods
les
int
(bad)
cmps
cmc
and
psubd
fbld
gs
cmps
imul
mov
mov
ret
outs
jbe
push
hlt
pop
jg
ds
mov
and
mov
jmp
cmp
and
jb
mov
scas
lods
daa
fild
ja
or
push
cmovbe
cld
(bad)
(bad)
loopne
cld
jg
data16
adc
push
cmp
push
mov
adc
inc
xchg
rcr
or
pop
pop
cmps
pop
in
out
cs
sti
pop
dec
ficomp
jnp
into
push
xchg
push
jmp
or
pop
xor
arpl
add
push
ret
mov
js
fnsave
cli
push
(bad)
scas
adc
pop
nop
xchg
out
push
push
pop
fdiv
fsub
push
stos
mov
jbe
into
aad
retf
loopne
lods
push
dec
(bad)
ss
inc
pop
jo
cmc
(bad)
ja
add
mov
jmp
data16
in
inc
mov
xor
js
jne
js
sbb
mov
gs
sub
push
in
mov
sub
dec
push
mov
rcl
pop
jp
xchg
mov
mov
or
popa
add
int
pop
(bad)
imul
dec
mov
inc
cmp
or
jp
jp
cs
cmps
adc
data16
nop
push
ror
aad
loopne
sub
inc
aam
ins
sub
pop
int3
aam
pop
arpl
stos
pop
add
(bad)
repnz
arpl
sbb
mov
add
pop
retf
retf
push
aam
daa
xchg
xlat
cli
mov
mov
sbb
call
rol
fcomp
cmp
sbb
push
sahf
sbb
dec
out
adc
mov
xchg
loopne
rol
xchg
retf
arpl
test
ss
mov
dec
pop
inc
cmps
aam
out
test
(bad)
in
(bad)
pop
shr
pop
dec
mov
fisttp
je
iret
add
lock
rcl
push
cld
inc
aad
aad
call
sub
mov
sbb
fs
daa
mov
mov
lds
int3
adc
ret
test
fs
mov
popa
test
nop
xchg
fimul
int
and
rcr
inc
ror
call
call
not
outs
pop
mov
push
mov
shr
dec
or
aam
xor
sub
jmp
pop
lds
dec
xlat
cwde
adc
push
das
adc
pop
fistp
in
mov
jmp
push
inc
mov
mov
pushf
cmps
leave
and
push
add
arpl
push
stc
mov
dec
mov
and
pop
mov
div
jo
dec
cld
push
add
pop
mov
pop
xor
rcr
dec
jb
in
adc
sahf
cmp
or
xchg
stos
ret
fistp
test
mov
(bad)
loopne
call
shr
fimul
jg
xor
cmp
inc
adc
daa
bound
fistp
int
fdivr
mov
push
sbb
xchg
aaa
jp
mov
inc
cld
sub
in
ds
jecxz
sar
call
add
addr16
mov
and
inc
dec
mov
out
shl
ror
ins
ror
cmp
mov
icebp
loop
sti
sti
enter
sbb
(bad)
jmp
add
fistp
btc
push
leave
or
and
int
fucomi
int
and
jno
imul
pop
out
or
(bad)
(bad)
cmp
inc
test
(bad)
push
pop
vshufpd
fidiv
loope
mov
mov
aas
jns
and
xchg
xor
repz
jge
adc
imul
adc
sbb
iret
xchg
mov
bound
arpl
ja
cmp
gs
popa
jo
std
iret
mov
pop
sbb
out
nop
outs
aaa
mov
inc
xor
dec
fld
ss
bound
mov
jae
in
scas
icebp
mov
and
in
dec
test
mov
aas
mov
add
mov
sub
add
ds
in
or
leave
cli
xor
mov
adc
dec
xchg
pop
cdq
mov
cmp
lea
into
adc
jo
ins
mov
mov
leave
dec
mov
mov
adc
jnp
and
mov
ds
add
push
lds
stos
pop
pop
jecxz
stc
xchg
or
nop
pop
aas
fwait
push
pop
das
pop
pusha
mov
fadd
retf
jge
out
imul
sbb
adc
add
push
ret
icebp
loopne
mov
sti
jne
(bad)
pusha
fwait
push
xor
xor
inc
pop
xchg
inc
add
or
jne
outs
sub
xchg
jmp
adc
xchg
pop
jb
dec
mov
xchg
ror
aad
jne
pop
lods
repnz
jg
and
mov
pop
lods
popa
das
jb
cmp
(bad)
mov
popf
jg
sbb
mov
xchg
mov
pop
add
xor
xor
aam
lahf
xchg
add
sub
jnp
shl
jl
mov
jl
mov
clc
dec
xchg
stos
lds
pop
div
gs
mov
dec
xor
pop
stc
adc
pop
out
paddq
cwde
mov
into
sbb
lahf
xchg
dec
and
sbb
shl
test
lods
push
xchg
add
stos
dec
iret
scas
retf
adc
movs
hlt
add
shr
pop
ret
repz
ins
and
and
or
mov
xor
dec
xchg
mov
lahf
call
xor
(bad)
sbb
fidivr
push
addr16
shr
sahf
lods
adc
lods
pop
and
xchg
ins
add
call
(bad)
adc
pusha
shl
push
imul
loop
out
pop
or
inc
loopne
daa
jbe
jl
neg
push
retf
push
sbb
outs
stos
inc
mov
sub
ret
fsub
xor
dec
lahf
test
cld
and
loopne
mov
imul
mov
(bad)
pop
cs
popa
bound
loopne
inc
xchg
cmc
sub
enter
mov
(bad)
adc
dec
pusha
arpl
jecxz
repnz
jno
mov
push
adc
pop
xchg
loopne
aas
pop
popf
(bad)
jmp
inc
outs
cmpxchg
add
inc
jne
mov
jb
inc
adc
out
mov
pop
cmp
test
push
sub
int
arpl
aas
es
sub
add
inc
sub
adc
loop
inc
cdq
jb
pop
(bad)
cmp
mov
test
sub
pop
lea
cwde
ds
mov
mov
out
or
pop
loop
je
outs
dec
sbb
fstp
std
(bad)
into
pop
lahf
sar
mov
(bad)
jecxz
push
cmp
sbb
dec
stos
adc
pop
into
cmp
out
ins
enter
inc
dec
inc
pop
in
xchg
ja
push
mov
stc
fld
popa
(bad)
dec
aaa
es
mov
bound
repnz
scas
fbld
inc
(bad)
fstp
inc
mov
inc
popf
sbb
jo
mov
cmps
xorps
mov
arpl
div
pop
repnz
sahf
dec
adc
pop
or
fld
inc
loopne
mov
jmp
test
loop
repnz
jp
jbe
call
ins
mov
inc
jg
dec
jl
sar
add
iret
or
stos
pop
dec
pop
fcom
repz
push
shr
pusha
dec
jae
imul
sub
sub
rol
mov
inc
cs
push
mov
out
out
and
xor
repz
pop
and
cmp
sub
push
fbld
cwde
ins
cmp
cdq
jbe
and
xchg
sti
xchg
push
xchg
xor
fwait
or
push
popf
inc
pop
std
call
xchg
aaa
sbb
ret
ins
adc
pusha
or
out
mov
test
xlat
mov
jg
test
cmp
sub
pop
(bad)
sbb
hlt
idiv
or
sahf
mov
cmp
dec
cmc
js
inc
in
imul
enter
mov
adc
in
mov
ins
add
pop
cmp
add
outs
psrlq
icebp
cmps
clc
outs
or
ds
wrmsr
add
retf
jbe
jecxz
pop
test
mov
jle
cmp
shr
shl
push
pop
dec
push
ror
mov
mov
sbb
dec
(bad)
sbb
lea
lahf
out
mov
jle
ret
test
push
in
aam
cmp
int3
ja
sub
xor
fwait
int3
xchg
inc
popf
xchg
out
push
jmp
add
cmp
and
mov
jo
dec
inc
push
adc
enter
(bad)
in
mov
lods
sbb
xor
int3
push
xchg
out
jp
out
dec
cdq
jg
not
pop
push
popa
mov
pusha
xchg
xor
xchg
sub
scas
rcl
dec
scas
push
inc
jns
xor
rcl
jae
xchg
push
pusha
cmps
or
sub
inc
adc
mov
push
mov
daa
cwde
mov
add
aam
movs
sbb
dec
sbb
fdivr
jno
push
ret
jno
xchg
in
cmps
rol
xor
dec
pop
clc
xchg
xchg
int
lahf
fdiv
dec
push
ins
jle
pop
add
test
test
aad
jge
push
call
(bad)
fcmovne
dec
jecxz
test
lahf
adc
cmp
adc
xor
sub
cmp
test
aam
test
jae
pop
sub
test
mov
xchg
repz
mov
outs
mov
pop
cmps
ins
sbb
je
js
out
xchg
retf
mov
and
std
fiadd
add
adc
jns
loope
pushf
(bad)
imul
lahf
lahf
jecxz
pop
lea
and
(bad)
jb
dec
or
mov
js
cmps
jno
push
scas
je
mov
loop
push
xchg
rol
rcl
adc
shl
pop
repz
lods
test
out
xchg
xchg
mov
(bad)
or
mov
into
xchg
xchg
hlt
jmp
mov
jg
xor
lods
movs
and
sbb
mov
or
xor
data16
xor
scas
enter
cmps
jle
mov
and
loop
or
mov
add
jo
push
ror
ss
mov
xor
cmps
mov
or
add
inc
ret
ins
retf
fmul
mov
xlat
or
in
push
and
jecxz
cmp
push
push
fbld
cmp
sub
mov
cmp
pop
pusha
mov
retf
not
lods
ret
cmp
sub
out
int3
lods
stc
jne
or
and
or
jp
out
idiv
std
sti
mov
cmc
mov
fcmovnbe
and
sub
jno
mov
mov
pop
and
(bad)
cmps
in
leave
dec
jmp
dec
mov
cwde
or
push
push
in
aaa
mov
fild
cmc
loop
ror
mov
sti
dec
xchg
pop
push
repnz
and
iret
fdivr
pusha
xchg
inc
mov
mov
mov
dec
push
(bad)
jbe
bound
xchg
mov
hlt
out
arpl
mov
pop
cmp
mov
ja
pop
xor
pop
add
mov
ss
fist
clc
retf
dec
sub
fucomi
mov
and
add
retf
(bad)
mov
xor
scas
jle
fist
out
dec
jmp
pop
pop
sub
rcr
mov
sub
loopne
or
ins
xlat
sub
(bad)
pop
(bad)
scas
in
sbb
push
in
xchg
mov
pushf
sub
mov
arpl
lock
jo
sbb
jge
pop
push
icebp
xchg
lahf
cmps
push
dec
and
dec
fdivr
stos
and
or
mov
cmp
jo
pop
cmps
jae
ror
vpaddb
jp
mov
xchg
push
inc
call
and
jns
push
cmp
lods
cmp
cmc
mov
dec
add
and
sub
mov
popa
les
sbb
sbb
out
outs
or
mov
iret
stos
(bad)
push
test
push
dec
dec
xor
add
inc
inc
in
mov
mov
sbb
out
scas
sahf
xor
xchg
lods
dec
stos
stos
cmp
repnz
jae
das
mov
xlat
xor
push
xor
loopne
xchg
push
enter
and
push
lea
fiadd
rcr
frstor
jmp
mov
shl
add
mov
cmp
mov
xchg
fcomip
cmp
test
mov
out
inc
test
pop
mov
or
jmp
outs
(bad)
aad
adc
xlat
sub
pop
les
cmps
push
sub
cli
pop
and
cmp
loopne
pop
add
out
aam
enter
add
push
cld
in
shl
sub
xor
(bad)
push
lock
pop
push
or
in
sbb
out
mov
shl
add
jne
mov
rol
int3
out
daa
fucomip
aam
or
frstor
jge
add
neg
dec
mov
cmp
xchg
std
mov
dec
arpl
push
xchg
jb
mov
sti
in
shl
sub
inc
mov
add
xor
retf
or
dec
pop
push
pop
adc
arpl
push
sub
les
(bad)
push
scas
ret
inc
jne
stos
jae
imul
adc
arpl
repz
and
dec
xchg
jmp
jne
dec
hlt
loop
xchg
rsqrtps
call
xchg
dec
repz
test
rcr
mov
lock
lock
(bad)
cmp
and
sub
idiv
arpl
push
push
gs
loop
xor
lds
bound
push
ret
xchg
dec
mov
xor
out
repnz
sub
int3
lea
sub
cmp
ficomp
fisubr
dec
stos
lahf
mov
push
pop
arpl
sbb
inc
dec
retf
in
and
jns
pop
and
or
and
adc
or
jl
add
adc
push
je
fs
mov
adc
gs
mov
jl
adc
cmps
add
fadd
and
movs
inc
inc
dec
(bad)
fiadd
cmp
jle
dec
jns
fisubr
seta
xchg
sub
inc
loope
in
push
push
outs
mov
pop
repnz
aam
cli
mov
ja
aad
mov
jp
xchg
jo
stc
stos
fsubr
xchg
mov
push
movs
rep
or
aad
gs
mov
popf
test
cs
push
lea
sbb
repz
xchg
push
ins
mov
xor
ins
inc
push
test
and
bnd
scas
inc
mov
pop
in
nop
xor
sub
inc
sub
xor
push
lds
push
out
push
and
dec
mov
mov
sbb
jmp
xchg
mul
pop
xchg
sub
out
addr16
and
repz
and
jecxz
sahf
jno
lahf
or
cmp
jae
fcomp
sub
mov
scas
(bad)
fbld
js
out
jle
fcom
xchg
inc
imul
fcmovbe
test
pop
inc
call
pop
ds
add
call
xchg
aam
imul
xor
ja
push
retf
cmps
jle
into
xor
and
sub
sbb
scas
push
push
push
mov
dec
sti
pop
mov
xlat
dec
je
mov
jnp
ins
mov
arpl
ret
adc
into
cmp
dec
jge
nop
repnz
std
vmovntps
lock
rol
add
loopne
ror
loope
je
inc
xchg
add
push
loope
ror
jmp
pushf
(bad)
clc
lea
mov
sbb
mov
sti
pop
inc
adc
sub
aad
ss
scas
jg
std
xor
mov
movs
add
movs
cmp
mov
imul
imul
test
sub
movs
jp
in
ss
out
lahf
push
fiadd
mov
push
push
sbb
into
jecxz
and
dec
sub
sbb
loopne
bound
xor
mov
loopne
xchg
mov
shl
aam
movlps
and
sbb
xchg
movs
mov
(bad)
stc
cli
or
or
or
ret
jg
pop
shl
sar
(bad)
push
leave
sti
dec
pop
xor
xchg
adc
mov
stc
sar
push
or
jmp
outs
(bad)
clc
xchg
gs
int3
mov
jno
(bad)
or
(bad)
or
movs
sbb
inc
xchg
inc
out
jmp
and
shl
jmp
rcr
cmp
pushf
jb
add
ds
(bad)
sbb
stc
cwde
push
addr16
xchg
mov
je
test
push
mov
out
test
jecxz
sbb
stc
push
ds
push
mov
cmc
retf
enter
mov
xchg
cld
fwait
mov
sbb
inc
mov
(bad)
pop
test
retf
sahf
mov
mov
and
dec
cmp
and
dec
test
push
xchg
xchg
pusha
movs
xchg
lock
inc
shl
cmps
jmp
repnz
(bad)
jmp
lahf
mov
xchg
xor
aam
test
push
loopne
xor
dec
sbb
or
loope
lods
jecxz
pop
test
sub
jns
movs
inc
jbe
es
mov
fist
jb
test
cmp
lea
(bad)
sub
stos
std
xor
inc
sbb
mov
(bad)
retf
cwde
push
inc
scas
sbb
(bad)
sub
aaa
test
mov
pop
push
sti
jle
jmp
push
sub
or
sub
hlt
mov
paddsb
adc
nop
sahf
pop
sub
shl
lock
xor
(bad)
mov
mov
je
bound
inc
adc
fcomp
pop
dec
(bad)
jl
pop
adc
jb
add
popf
jg
inc
jno
mov
inc
cmp
mov
into
mov
and
aas
xor
pushf
mov
pushf
xor
or
ret
push
enter
mov
aas
push
cmp
dec
xchg
push
ret
test
fdivr
inc
rcl
add
mov
inc
inc
std
retf
sti
mov
mov
xchg
pop
inc
test
cli
cmp
ss
pop
or
ds
aas
shl
or
jne
mov
sbb
pop
aad
sahf
inc
cli
jmp
cdq
call
aad
cmp
add
adc
add
mov
mov
ret
les
pop
cmp
int
mov
or
(bad)
(bad)
pop
popa
xchg
cmp
sub
xchg
xlat
int3
push
cmp
arpl
das
sahf
ins
inc
inc
mov
lock
xchg
pop
push
test
jno
arpl
jp
or
cmp
and
dec
stos
push
push
sub
cwde
data16
mov
fisttp
and
jl
or
test
jl
jecxz
mov
jbe
int3
(bad)
rcl
push
test
cmp
mov
and
out
push
or
sub
ja
cld
stc
movs
xchg
xchg
xor
ja
mov
mov
jae
cmp
push
dec
addr16
retf
mov
test
hlt
mov
sbb
mov
out
(bad)
int3
scas
cli
xchg
movs
sub
mov
(bad)
xchg
inc
sbb
loope
sbb
je
sub
cmp
outs
jp
shl
data16
jnp
js
js
pop
or
lods
jmp
fadd
jns
push
(bad)
fist
fisttp
das
xchg
adc
push
je
dec
test
mov
xchg
mov
jmp
xchg
ja
test
in
jmp
or
pop
retf
arpl
aam
sub
mov
out
xor
push
push
clc
and
push
jg
(bad)
ins
dec
leave
push
les
gs
mov
mov
xor
push
push
dec
cmps
std
ja
ror
iret
mov
outs
fisub
pmaxub
sub
xor
bound
pop
mov
inc
aad
loop
xor
push
fcomp
mov
fcomp
add
iret
xor
pop
icebp
out
or
bound
mov
(bad)
adc
aam
call
dec
dec
inc
jecxz
pop
in
adc
lock
add
fild
sahf
xchg
(bad)
ret
hlt
inc
push
out
cld
pop
ret
mov
fwait
or
fadd
jecxz
dec
addr16
mov
adc
fwait
pushf
jl
shl
sub
jge
inc
cmp
lods
vpsubsw
pop
push
add
mul
dec
sbb
icebp
inc
ret
imul
mov
adc
pop
pusha
xchg
fisttp
jno
loope
daa
loopne
sub
out
sub
mov
mov
xchg
sti
out
mov
cmps
xchg
movs
hlt
div
push
icebp
dec
mov
call
jbe
pop
pop
test
dec
mov
cmp
retf
popa
int3
pop
in
jnp
(bad)
mov
ret
sti
int
mov
push
xchg
out
icebp
test
push
aad
push
ja
cmp
lock
bound
scas
jno
inc
adc
lea
ins
repz
jmp
into
dec
imul
pushf
and
jae
push
out
cdq
jnp
push
clc
into
fld
sub
mov
mov
lahf
push
jle
mov
pop
sub
enter
js
add
icebp
mov
sti
je
or
or
xor
mov
xor
dec
pop
push
fstp
ror
(bad)
(bad)
push
pop
aam
xor
inc
ret
mov
jmp
call
push
loope
cwde
adc
fisttp
push
jns
stos
loop
add
fadd
mov
clc
jne
mov
jno
push
cmp
jge
dec
aaa
fwait
arpl
fwait
cwde
neg
cdq
fld
push
jo
dec
int
sub
cmps
call
mov
lea
lods
sbb
mov
mov
out
sbb
loop
movs
punpckldq
ret
out
cmps
enter
in
rcr
cmp
(bad)
in
mov
sbb
xchg
sahf
lds
icebp
and
aaa
sub
and
aaa
loop
repz
stc
mov
iret
dec
sbb
mov
pop
push
cs
push
sbb
cmp
adc
inc
arpl
(bad)
pop
adc
jmp
mov
and
and
dec
pop
sar
and
inc
fidivr
iret
and
ds
shr
xor
xlat
fwait
mov
mov
mov
jecxz
sbb
pop
dec
pop
adc
ins
push
adc
aaa
add
sahf
adc
inc
popf
retf
test
sub
(bad)
aas
sbb
add
jg
push
xor
xchg
les
popf
sbb
ds
in
lds
ret
push
test
push
cmp
inc
test
daa
movs
loop
or
out
dec
test
and
js
ret
rcl
cmp
ret
out
ror
mov
cmps
fwait
push
or
pusha
sub
dec
mov
(bad)
jbe
dec
push
inc
fdiv
dec
lea
test
jae
ror
in
mov
js
dec
fst
push
movs
jge
pop
ja
and
test
in
stos
(bad)
xor
je
sti
scas
dec
jecxz
pusha
or
xor
lds
div
jmp
out
jp
(bad)
xor
shl
nop
mov
cmc
jno
xchg
fisttp
rcl
popf
push
rcl
ja
mov
retf
xchg
push
mov
pop
mov
movs
sti
stos
je
ja
cmp
xchg
jnp
scas
mov
mov
xchg
out
push
push
idiv
sbb
sub
mov
mov
and
lods
aaa
scas
imul
dec
sbb
movs
mov
dec
clc
inc
stos
xchg
cli
add
mov
jne
std
xor
and
add
shl
pop
mov
add
mov
cmps
lds
sbb
ins
es
fcomp
mov
je
mov
pop
int3
sbb
inc
fiadd
std
cmp
inc
(bad)
shr
cli
clc
adc
mov
xor
popf
(bad)
mov
ds
bound
push
mov
jnp
fcmovu
mov
pop
fxch
jp
xor
xchg
mov
mov
xor
xchg
mov
cwde
iret
pusha
ret
int3
mov
daa
aad
mov
jbe
(bad)
sub
and
movs
ins
fdivr
cdq
fs
mov
arpl
cmps
cmp
cdq
push
mul
popa
out
loope
retf
adc
jb
mov
xchg
outs
ins
pop
fs
push
sti
ret
mov
mov
ja
inc
ss
fild
inc
(bad)
data16
dec
sub
outs
je
call
iret
mov
mov
ds
push
out
or
cmc
loopne
xchg
dec
test
fsubp
fist
push
mov
mov
hlt
xor
dec
inc
(bad)
cmp
jge
dec
stos
mov
mov
xchg
std
jo
push
cmp
outs
movs
jne
push
pop
int
jae
rcr
fisub
xchg
lods
pop
popf
cmp
test
add
ds
or
jmp
arpl
mov
inc
jne
dec
stc
or
mov
rol
cmp
jg
test
xchg
sub
xchg
jae
out
std
sbb
sub
ja
leave
std
mov
add
outs
clc
out
dec
in
mov
mov
pop
test
push
cs
push
or
repz
jbe
ret
sahf
mov
mov
cmp
rep
push
lahf
push
sub
pop
cwde
mov
inc
dec
shl
xchg
shl
dec
out
xor
sub
aas
dec
pop
popf
sub
pop
scas
pusha
push
(bad)
int3
ja
imul
lahf
lds
(bad)
retf
hlt
mov
pop
jg
clc
sti
les
pop
push
mul
adc
and
xlat
pop
push
test
inc
xor
mov
adc
(bad)
dec
lock
ret
loop
mov
cmp
outs
sbb
jbe
push
sti
out
push
ds
fadd
xchg
cmc
or
repz
loop
cmps
cmp
test
push
outs
push
push
xor
adc
and
or
mov
aaa
mov
push
shl
rol
dec
cmps
mov
inc
cmp
inc
mov
sub
xor
sub
call
pusha
pop
xor
mov
sub
sub
stc
clc
mov
sbb
(bad)
aam
and
or
cwde
cmp
sub
fcomp
mov
popf
xchg
sub
sub
mov
dec
xor
cmp
and
cmc
aaa
mov
inc
pop
mov
push
fistp
mov
cmp
in
inc
inc
push
pop
enter
jbe
xchg
add
scas
cmps
iret
fldcw
xchg
inc
add
and
push
fimul
stos
out
lahf
xchg
mov
xchg
clc
or
sbb
sub
push
ss
retf
push
mov
bswap
xchg
std
push
int3
xchg
or
jae
pushf
in
fnstenv
cli
inc
sbb
mov
mov
jp
and
xchg
les
jbe
aaa
or
mov
cmps
iret
std
sub
xchg
stc
pusha
lea
stos
push
loope
jne
adc
jmp
pop
mov
fisubr
cmp
sbb
or
sbb
pop
sbb
pusha
jbe
sub
and
mov
jbe
or
sar
cli
push
jno
lea
dec
or
popf
aas
cmps
test
(bad)
retf
sbb
jbe
push
test
daa
cli
pop
fsub
lock
mov
sub
fidiv
shl
fnstenv
fdivr
add
out
and
xor
outs
sar
dec
push
loop
pop
imul
in
push
mov
adc
and
or
sub
and
lea
inc
test
jmp
pop
aad
enter
fcomi
jge
loope
std
cmp
daa
inc
int3
xor
repz
lods
push
cmp
stos
mov
nop
jmp
out
or
add
and
push
rcl
cmp
shl
push
fcom
test
pop
mov
ins
mov
gs
div
sub
call
loop
popa
xor
mov
add
hlt
mov
test
xor
adc
sub
inc
xchg
enter
sbb
dec
dec
stc
jae
rcl
lods
cs
sub
lock
fbld
mov
repz
and
daa
cs
idiv
push
or
xlat
fcomip
mov
(bad)
cld
inc
mov
arpl
psrad
push
lods
out
das
mov
inc
scas
call
leave
cmps
push
and
jb
mov
pusha
loopne
ret
xor
outs
cmp
bound
inc
fwait
(bad)
imul
xor
cmp
xor
mov
cld
xchg
mov
arpl
push
fisubr
lods
dec
cmp
xchg
or
int3
jecxz
xchg
out
and
addr16
fsub
and
add
cwde
adc
jbe
in
mov
pop
jne
pop
test
or
jnp
xchg
cdq
dec
dec
pop
push
(bad)
and
xor
cmp
sbb
pop
xor
jae
push
aam
mov
and
mov
ins
retf
xchg
mov
xchg
cmp
imul
push
fisttp
cmp
popa
cmc
push
bound
lods
adc
sbb
neg
sub
or
fcmove
pop
pop
add
lds
push
push
out
test
jle
mov
dec
out
mov
test
push
ficom
adc
sahf
mov
push
sbb
popf
mov
add
out
push
push
push
mov
inc
sub
ins
and
dec
xchg
shl
mov
sbb
xlat
stos
(bad)
nop
hlt
into
cld
loopne
cmp
gs
pusha
ret
call
cmps
pushf
pop
lea
inc
mov
dec
or
mov
cmp
sbb
inc
mov
inc
mov
push
mov
dec
and
mov
jmp
mov
adc
js
xchg
and
jno
loop
dec
ins
and
push
adc
push
(bad)
fdivr
in
xor
or
push
dec
out
add
xchg
pop
push
mov
out
xlat
mov
sub
mov
cmp
sahf
mov
addr16
jp
mov
int
cmc
jb
xchg
inc
lea
ja
mov
out
out
loope
nop
ds
xlat
fwait
jno
jae
lahf
push
mov
ds
jae
or
jecxz
into
or
imul
popa
mov
aas
mov
(bad)
jo
mov
push
cwde
dec
add
xchg
adc
sub
lahf
add
outs
jge
rcl
add
mov
in
cmps
jbe
xchg
push
rol
push
adc
cmp
dec
dec
xlat
push
iret
add
jnp
aad
jmp
in
retf
jecxz
aad
sbb
inc
xchg
cmp
xchg
pop
sub
retf
and
scas
and
out
nop
pop
(bad)
pop
sti
adc
mov
nop
cmp
outs
arpl
add
mov
ss
jmp
mov
and
pop
cmp
mov
aas
push
fcmovne
mov
cli
dec
xor
arpl
inc
imul
leave
jle
jo
inc
inc
xchg
or
dec
icebp
push
or
mov
call
and
mov
inc
cmc
outs
call
inc
div
adc
sub
es
test
stos
mov
repz
mov
mov
ret
add
sti
mov
push
mul
pop
fldcw
test
movs
sti
mov
ds
daa
arpl
repz
cli
cmps
ja
inc
pop
enter
int
paddq
jle
sbb
xor
mov
pop
mov
push
jo
in
cmp
pop
jle
add
sar
push
pop
stos
add
fnstenv
add
scas
jbe
fsubrp
mov
inc
jmp
xor
sub
xor
imul
cmps
inc
int
cmp
jne
retf
(bad)
(bad)
iret
dec
test
mov
dec
add
add
push
adc
inc
lock
mov
push
aaa
cmps
movs
fmul
cmp
sub
mov
push
cld
jbe
iret
inc
nop
mov
cmp
xchg
addr16
adc
test
and
mov
mov
repnz
xchg
(bad)
cdq
dec
pop
inc
cmp
mov
cs
mov
popa
mov
mov
(bad)
sbb
mov
push
xlat
xchg
je
fldz
dec
adc
iret
push
mov
jmp
pop
inc
xor
xchg
fs
push
movs
sub
not
xlat
push
bound
add
and
jp
pop
inc
iret
cmp
xchg
lahf
in
sub
mov
iret
lods
xchg
adc
sub
mov
std
push
mov
cwde
loop
push
mov
cmp
mov
sub
and
or
ss
sti
add
and
xlat
push
cmc
jl
sbb
std
pop
out
sbb
sub
inc
in
dec
mov
loope
call
xlat
mov
fdivr
arpl
mov
std
daa
outs
scas
repnz
mul
jmp
sub
xchg
xor
xchg
jl
cmp
dec
out
ret
pop
outs
popf
jo
in
sub
or
dec
into
mul
and
in
loope
push
sti
add
mov
retf
push
jge
adc
mov
or
leave
movs
or
cmp
cmp
mov
pop
jmp
(bad)
jno
sbb
add
dec
cli
mov
ss
xchg
into
jnp
push
cmp
fs
icebp
loopne
ds
sahf
(bad)
jle
pushf
adc
enter
scas
adc
pop
retf
mov
sbb
mov
gs
adc
out
jno
adc
retf
pop
and
xor
pop
lea
das
test
sub
xor
jg
adc
mov
pop
psrld
mov
lahf
rcr
outs
xchg
cmps
int3
out
and
mov
and
sbb
jl
outs
xor
clc
add
cli
ret
sub
leave
mov
mov
ror
pop
xchg
mov
xchg
fsub
ficom
mov
cmps
rol
xchg
cli
push
out
inc
setnp
jbe
mov
sbb
inc
mov
add
retf
imul
mul
mov
int
cli
or
xor
cdq
mov
push
icebp
adc
mov
cs
jp
and
(bad)
mov
lds
sbb
push
inc
push
or
dec
stos
mov
ds
add
(bad)
sbb
imul
sbb
call
push
push
push
iret
add
pop
adc
xor
cli
push
fist
adc
test
mov
hlt
iret
dec
mov
xor
stos
jecxz
lods
fstp
and
imul
(bad)
mov
pop
movs
idiv
nop
in
push
mov
in
xchg
imul
mov
xor
mov
and
push
push
fimul
shl
daa
iret
in
cmc
shl
arpl
addr16
repnz
ret
dec
push
sub
mov
(bad)
mov
mov
or
jbe
pop
(bad)
sbb
mov
cli
cmp
pop
(bad)
imul
fsubr
mov
(bad)
mov
rcl
loope
pop
pop
or
xchg
and
mov
jmp
sub
ret
push
xchg
xor
aaa
dec
or
add
sbb
mov
inc
clc
cmp
fs
idiv
mov
fs
das
or
(bad)
inc
jo
sub
rcr
and
sub
sub
pushf
retf
jmp
(bad)
xor
and
gs
adc
dec
pop
mov
ins
push
fild
in
or
adc
mov
add
retf
add
and
xchg
add
dec
push
aam
mov
jo
xchg
or
adc
sub
mov
jp
jp
ja
xchg
icebp
xor
gs
jbe
mov
scas
jp
(bad)
in
push
into
hlt
pop
cmp
xchg
jl
push
dec
imul
adc
(bad)
xchg
or
ret
in
or
mov
mov
or
mov
(bad)
mov
call
push
loop
cmp
hlt
call
jl
fild
dec
add
int
pop
ins
or
rol
test
loopne
call
mov
ins
xor
les
(bad)
push
pop
sbb
push
jae
push
and
jecxz
popa
cmp
scas
sub
push
test
inc
addr16
ins
aam
pushf
pop
push
stc
and
lods
push
call
sbb
in
push
mov
std
cmp
repnz
mov
aas
cmp
imul
js
(bad)
sub
enter
es
test
sbb
sub
(bad)
mov
mov
int
and
out
les
das
ins
and
ins
sbb
inc
inc
mov
stos
call
mov
ins
inc
push
push
adc
mov
add
jnp
mov
push
inc
xchg
pop
xor
jl
sub
jmp
add
push
nop
cld
adc
test
mov
scas
or
inc
gs
or
fistp
fmul
scas
fsubrp
scas
outs
sub
lea
xlat
pop
out
sub
xchg
adc
push
pop
push
add
or
out
jge
mov
mov
cmp
arpl
dec
arpl
mov
mul
out
leave
out
lods
pop
xor
push
mov
adc
pop
adc
test
(bad)
in
mov
mov
fild
std
sbb
mov
movs
in
and
xor
inc
hlt
loopne
sbb
add
or
lea
stos
pop
dec
add
movs
loopne
pop
cmp
cmps
mov
sbb
ror
gs
jmp
adc
jnp
sub
mov
fidivr
in
jb
fs
push
xor
in
adc
jp
jg
mov
sahf
add
ror
jge
jmp
test
cmp
loopne
popf
cmp
or
lock
jge
call
jle
sbb
inc
js
mov
sub
stos
xchg
mov
mov
cmps
mov
aaa
jge
lea
cmp
jno
test
mov
stos
imul
xchg
push
pop
aad
push
rcl
daa
and
arpl
adc
inc
fadd
mov
xor
push
pop
dec
or
jmp
and
mov
or
ret
nop
or
add
mov
and
lock
imul
mov
jl
sti
pop
push
or
cld
pusha
int3
inc
stc
in
dec
out
hlt
nop
xchg
lods
outs
mov
push
ret
test
aaa
icebp
dec
mov
jb
clc
cld
sub
add
fild
pop
sub
iret
push
hlt
sub
sti
sbb
inc
sbb
fld
(bad)
cs
retf
test
shr
cmc
dec
xchg
or
arpl
xor
leave
ja
mov
push
les
jo
jg
test
daa
mov
jmp
in
cld
mov
lahf
mov
cmp
mov
ret
adc
cmp
leave
jae
mov
pop
xlat
xchg
sub
inc
imul
icebp
cmps
cs
mov
std
pusha
xchg
dec
cdq
icebp
or
fs
je
ds
lods
push
and
or
inc
arpl
cmp
in
xchg
test
mov
mov
leave
xlat
les
test
add
push
lock
cmp
popa
lea
lds
int3
(bad)
pop
and
fs
adc
cdq
mov
adc
cmp
div
call
push
jg
jne
and
sbb
jmp
mov
jmp
(bad)
pusha
imul
setnp
or
ja
push
(bad)
(bad)
mov
fucomi
cwde
scas
lods
hlt
outs
xchg
mov
push
adc
mov
cmp
pop
es
ret
and
add
aad
imul
call
xor
je
pop
and
push
inc
inc
rcr
(bad)
outs
repz
pop
dec
push
xor
jbe
inc
rcl
sub
imul
adc
es
hlt
sbb
inc
add
jge
jge
mov
test
mov
addr16
test
cmp
mov
aas
sti
std
dec
pusha
or
cli
jb
jae
ja
pop
in
jno
mov
loope
dec
fld
fdivr
xor
aad
mov
ffree
mov
sub
loopne
(bad)
pop
mov
ja
inc
mov
cwde
jle
dec
pusha
int3
push
and
neg
pusha
inc
jo
dec
xor
sbb
repz
and
prefetch
or
fmul
pusha
test
jae
mov
ficom
fild
pop
das
sub
shl
adc
jnp
scas
mov
mov
aas
test
jg
mov
test
aad
sub
fstp
add
inc
inc
aad
jo
pop
jg
popa
or
sub
ret
xor
inc
mov
mov
mov
and
fwait
lods
cmps
mov
xchg
pop
test
test
movs
inc
push
jge
jne
or
push
(bad)
clc
int
mov
movs
lds
addr16
call
sahf
or
inc
mov
adc
iret
add
int
loope
inc
cmp
dec
mov
push
mov
cmps
fsubr
imul
ss
pop
jo
xor
xlat
ins
call
jge
jns
inc
call
sar
shl
in
inc
add
or
std
ins
mov
pop
xor
arpl
ins
and
push
mov
inc
mov
adc
retf
aas
fidivr
sahf
xor
mov
add
mov
aad
cmp
or
pop
ss
push
repnz
rcr
icebp
lods
xchg
push
xchg
ja
rcl
cmps
sbb
test
inc
cmps
pop
dec
test
icebp
jo
das
(bad)
xor
popa
lods
pop
add
mov
mov
popf
(bad)
stos
pop
cs
ds
xchg
and
fwait
xlat
or
stc
jle
out
cmp
fwait
cwde
and
sbb
int
cli
adc
inc
dec
fldcw
dec
movs
icebp
sbb
mov
pop
mov
sub
pop
stc
push
and
cs
fcom
dec
es
pop
ss
push
dec
mov
clc
adc
pop
jno
xchg
xchg
dec
sbb
test
xchg
int
mov
pop
add
fisttp
and
add
push
clc
and
or
add
push
mov
mov
sub
push
or
and
fstp
mov
(bad)
in
fnsave
hlt
cwde
jle
ja
ja
mov
jnp
mov
adc
hlt
sti
cmp
hlt
sub
movs
out
or
lock
xchg
call
(bad)
or
popf
sahf
sbb
add
lea
mul
xchg
mov
lods
jge
addr16
sub
mov
add
mov
sbb
inc
cmp
mov
add
(bad)
jmp
test
inc
pusha
xlat
xor
lds
cmp
jnp
inc
jg
aam
addr16
rcl
inc
das
cwde
call
mov
(bad)
xchg
and
and
(bad)
jmp
lods
outs
inc
or
dec
es
rcr
inc
fisubr
xchg
jge
inc
rcr
in
hlt
ins
add
pop
or
pop
adc
adc
sti
adc
xor
and
aaa
jge
pop
add
add
mov
xchg
xchg
adc
iret
lods
push
add
aam
test
mov
stc
push
jl
shl
mov
mov
push
cld
out
in
mov
cmp
lahf
mov
mov
jne
jne
cmp
loope
push
xchg
add
jb
mov
pushf
jno
mov
mov
or
test
gs
pop
xchg
mov
sub
cmc
and
sub
std
fnsave
cmp
ins
ins
xor
(bad)
cwde
sbb
mov
nop
js
ror
jo
aam
movs
stos
dec
jne
cwde
add
add
(bad)
scas
jle
popa
shld
cmps
push
pop
inc
out
xor
outs
aas
push
loope
jl
mov
xchg
aaa
cli
jp
pop
int
dec
or
and
cmp
or
cwde
push
cmps
sub
mov
pop
scas
push
aaa
retf
ret
ret
in
mov
mov
pop
rcl
mov
xor
mov
popf
stc
xchg
mov
enter
push
add
std
stos
xchg
inc
mov
test
sub
mov
mov
out
add
mov
in
add
xchg
fild
loop
or
jg
and
ss
mov
ins
sub
mov
xor
ins
push
sbb
inc
fimul
mov
xor
pushf
out
pop
dec
push
ins
mov
test
cld
dec
xor
(bad)
daa
shl
or
popa
(bad)
mov
lds
xchg
xor
stos
aaa
in
pusha
pop
mov
jns
pop
mov
gs
in
add
mov
stos
ror
xor
je
jmp
xor
repnz
out
mov
push
popa
retf
xchg
inc
dec
(bad)
mov
xchg
shl
sub
or
mov
jae
int
push
push
das
sar
into
(bad)
or
adc
sbb
push
xchg
les
iret
inc
xor
lods
and
add
mov
xchg
push
jge
mov
cmp
inc
fistp
jb
inc
mov
xor
ds
and
dec
or
pop
sti
jmp
mov
dec
xor
mov
cwde
dec
lds
mov
jmp
sub
nop
and
loope
into
imul
mov
push
cli
lahf
xchg
or
mov
sbb
cs
jle
sbb
mov
push
ret
pop
div
xchg
cmp
and
bound
icebp
adc
and
inc
dec
leave
(bad)
xor
mov
xor
cmp
mov
mov
dec
xchg
popw
xor
ins
outs
stos
sar
mov
dec
fisub
(bad)
xchg
xchg
call
retf
push
aaa
lods
sti
rcl
mov
adc
sub
add
rcr
adc
mov
mov
jmp
out
movs
daa
xor
stc
lods
xchg
pop
adc
mov
cmps
mov
xchg
cmp
adc
inc
aas
ror
mov
mov
dec
jo
pop
and
pop
shl
out
in
sub
mov
adc
lea
push
enter
adc
imul
push
rol
push
imul
stc
repz
outs
push
xor
xchg
fs
psrlw
retf
sahf
mov
out
scas
sub
sbb
pop
sub
repz
ja
cs
mov
out
out
fbstp
cmovbe
out
mov
cwde
enter
fld
sub
ret
jae
sbb
scas
fcom
jo
xchg
imul
add
pop
push
ror
xchg
imul
sti
fstp
xchg
add
aas
mov
dec
(bad)
enter
push
sub
mov
jle
fs
add
out
in
sahf
int3
add
leave
mov
jecxz
mov
sub
clc
ret
push
cmc
shl
push
imul
cmps
mov
outs
les
stc
test
imul
sbb
jle
cmp
shl
(bad)
sbb
in
sti
js
mov
sbb
arpl
push
in
loope
cmc
add
push
and
xlat
mov
sbb
cmp
mov
popf
out
mov
mov
dec
outs
or
or
xchg
dec
pop
xchg
neg
inc
shr
mov
or
clc
jl
add
mov
push
inc
mov
pop
dec
mov
xchg
lahf
stos
add
push
daa
or
xchg
gs
xchg
xchg
push
xor
aam
mov
pop
pushf
sub
retf
jp
jecxz
fwait
xor
test
iret
(bad)
and
add
sbb
aaa
jl
and
ja
dec
shl
shl
mov
imul
nop
fistp
push
je
loop
dec
or
push
xor
pop
push
sub
jp
jae
mov
pop
cmp
mov
mov
or
sbb
jns
int3
sbb
adc
adc
pusha
out
inc
outs
jg
xor
cmp
xchg
test
mov
jb
movs
cmp
and
add
mov
retf
movs
mov
iret
test
mov
dec
cmc
xchg
adc
out
sbb
lods
stos
ins
test
cmp
add
xor
scas
icebp
mov
shr
jmp
push
ret
or
mov
xchg
cmps
mov
mov
mov
or
outs
in
cdq
jae
lds
mov
fwait
(bad)
mov
ret
jge
or
mov
sub
pushf
mov
popa
mov
ret
mov
mov
cmp
out
inc
push
xchg
(bad)
lea
or
mov
mov
dec
adc
mov
fld
fsubr
push
mov
mul
push
inc
pop
js
dec
in
cmps
and
stos
sub
mov
mov
jns
ficomp
movs
loope
xchg
das
cmp
lea
inc
ins
add
pop
mov
xor
icebp
jp
pop
stos
inc
push
mov
movs
mov
mov
stos
jge
mov
sub
mov
repz
pop
mov
int
pop
inc
xor
mov
and
nop
ds
xchg
rol
cmp
push
arpl
popa
(bad)
push
add
ins
xor
jg
rcl
adc
je
je
push
fisub
fnstenv
rcl
mov
dec
or
aaa
cmc
dec
sub
sahf
xchg
mov
adc
ret
xchg
(bad)
stos
fs
not
out
lds
jecxz
mov
test
popa
jmp
mov
data16
cmps
out
and
mov
lds
sbb
jecxz
retfw
fisubr
aam
out
sbb
(bad)
int
add
pop
or
popa
cmp
or
fsub
retf
mov
in
(bad)
pushf
out
mov
add
push
ss
dec
call
pop
push
sahf
mov
test
push
pop
xor
cwde
fidiv
sub
cld
call
jecxz
int
mov
loope
cs
js
push
jnp
dec
test
lahf
cs
mov
popa
dec
repz
jno
push
cld
sub
and
or
push
and
push
xchg
jo
fucomp
(bad)
mov
mov
push
retf
xchg
sub
sar
aad
out
pop
mov
xchg
push
xchg
mov
(bad)
mov
shr
mov
jecxz
aas
and
xor
jnp
sbb
push
mov
or
jmp
inc
vcomisd
fistp
mov
adc
bound
in
div
data16
sub
inc
mov
clc
jmp
ins
sti
ret
sub
sub
movs
fstp
enter
pop
xchg
push
sub
cmp
xchg
cmps
jp
and
dec
mov
loop
push
cmp
mov
in
jecxz
call
and
and
adc
call
or
cs
pop
div
mov
dec
xor
jo
dec
mov
mov
(bad)
pop
or
into
inc
inc
call
push
cmp
cmps
cs
mov
or
mov
call
push
arpl
jo
adc
imul
dec
push
jg
lahf
leave
mov
mov
mov
mov
popf
inc
xchg
clc
fiadd
sar
cmp
je
hlt
jo
push
aad
adc
pop
push
xchg
shl
xchg
ss
icebp
inc
(bad)
sar
mov
sbb
aas
xor
(bad)
push
jns
xchg
and
or
mov
jmp
scas
loope
frstor
ja
lods
mov
push
loopne
lock
cmp
or
push
test
dec
sbb
sub
jg
nop
imul
mov
dec
stos
lods
mov
push
adc
mov
xchg
push
cmc
inc
ds
test
push
dec
sbb
outs
jne
dec
and
fcomp
mov
mov
cmp
icebp
sub
lods
pop
cmp
mov
lock
(bad)
lahf
test
int
imul
sub
mov
or
pushf
xchg
or
ss
lahf
mov
mov
(bad)
(bad)
call
lahf
push
loop
call
data16
icebp
mov
inc
add
add
test
ss
in
sbb
mov
sub
rcr
push
jb
out
je
jp
(bad)
mov
dec
fisttp
jge
(bad)
pop
mov
sbb
test
fnsave
imul
xchg
push
sahf
es
(bad)
(bad)
es
loopne
jbe
fs
dec
(bad)
xor
ret
add
aad
mov
push
(bad)
or
push
jno
jno
stos
inc
jae
repz
and
pop
inc
push
cmp
push
jecxz
test
xchg
and
je
retf
mov
cmp
dec
cmp
aad
outs
push
mov
dec
mov
cmp
(bad)
or
nop
arpl
pop
popf
test
loopne
and
pop
adc
mov
daa
mov
nop
jmp
cmp
push
mov
xchg
or
lock
aaa
cmc
scas
push
nop
and
pushf
test
out
sub
popf
push
(bad)
int3
sbb
pop
mov
inc
ins
(bad)
in
in
ins
or
dec
int3
out
jecxz
mov
in
fist
push
sub
cmp
adc
icebp
cmp
sbb
cld
aam
push
mov
pop
dec
inc
xchg
js
and
add
call
test
shr
pop
sub
pop
xor
iret
cmc
je
pop
and
(bad)
repz
cdq
add
shl
and
inc
inc
jns
or
out
xor
pusha
cmp
and
adc
or
out
aaa
cmc
loop
es
xchg
xor
fcom
inc
and
fmul
or
mov
mov
std
movs
push
loopne
jnp
rcr
icebp
or
rcr
inc
stc
adc
mov
or
mov
movs
jp
shl
or
xor
push
and
xlat
pop
out
or
pushf
cs
imul
push
mov
mov
sub
adc
pop
pop
das
lahf
and
mov
int
or
fld
mov
jbe
jnp
jno
int
push
push
out
scas
mov
addr16
aad
xchg
in
movs
addr16
xchg
mov
movs
add
movs
sbb
xor
cmp
int
icebp
jnp
aas
mov
and
xchg
fsub
pop
and
inc
xchg
inc
rcr
in
dec
sahf
icebp
jmp
daa
cmp
mov
lock
jmp
inc
(bad)
stos
sbb
inc
iret
out
xchg
ret
outs
fst
cmc
add
rcl
fwait
cli
nop
jo
out
jmp
retf
or
dec
pop
xchg
pop
aaa
push
pop
imul
or
out
scas
(bad)
jbe
jns
out
push
andnps
ss
das
pop
sub
adc
and
or
addr16
xchg
ret
ds
inc
fmul
bound
mov
add
sbb
cmps
mov
test
(bad)
and
push
(bad)
xlat
test
add
pop
(bad)
scas
lock
xchg
in
std
mov
ret
xor
stos
add
or
hlt
pop
pop
mov
cmp
iret
lea
in
cmp
pmuludq
stc
mov
jae
arpl
mov
or
stos
sbb
jo
sub
stc
daa
stc
add
mov
sbb
jno
je
test
(bad)
fnstsw
push
mov
xor
sti
pusha
cmc
cmps
loope
(bad)
stos
sahf
xchg
pop
and
add
push
fsub
sub
int
mov
lds
pusha
inc
fistp
aas
dec
movs
(bad)
retf
loop
mov
jbe
xchg
xor
arpl
(bad)
lds
retf
stos
leave
imul
test
and
leave
cmp
mov
daa
pop
(bad)
enter
xchg
lods
imul
sub
adc
xor
push
rcl
js
jno
das
nop
dec
pop
xchg
pusha
mov
cmp
xor
fwait
ins
sub
ss
retf
cli
inc
cmp
pop
mov
js
(bad)
adc
or
sub
lock
sub
xor
xchg
in
mov
retf
push
xor
or
int
xor
rol
imul
outs
fdiv
mov
mul
cmps
addr16
fisubr
imul
add
pop
pop
js
ins
call
mov
mov
enter
push
push
pop
jmp
movs
dec
ret
les
shr
nop
std
jnp
test
add
mov
stos
loopne
jno
jae
(bad)
idiv
(bad)
mov
sbb
jb
fstp
call
xor
mov
adc
fldcw
add
sub
adc
push
out
pop
rcr
adc
or
loop
mov
std
stc
mov
push
fs
dec
(bad)
mov
pop
pop
rcr
xchg
jecxz
lds
mov
ds
sub
fsubr
enter
pop
and
les
mov
add
jns
rcl
fimul
test
popf
es
popa
dec
out
pop
lock
or
mov
loope
mov
inc
(bad)
icebp
out
mov
push
adc
sbb
rcr
bound
jbe
push
push
ins
cmp
mov
hlt
sbb
xchg
mov
dec
dec
ja
std
ret
mov
sbb
jge
jb
pop
xchg
call
sub
lods
xchg
and
shl
xlat
mov
retf
addr16
add
ret
cmp
mov
out
pop
xor
add
pop
cmc
shl
das
loop
mov
repz
pop
xchg
shr
jns
test
cld
fstp
fistp
push
push
sbb
shl
nop
ror
jl
daa
xchg
test
xor
fcom
mov
xor
in
pop
xor
aas
jb
cs
lea
xchg
or
clc
push
cmp
sub
pop
pop
das
fldenv
mov
dec
jae
jne
pop
inc
int
cmp
dec
xchg
test
out
push
sbb
inc
gs
arpl
out
lahf
pop
movs
stos
push
dec
hlt
xchg
or
mov
jnp
pop
and
(bad)
addr16
cdq
int3
das
(bad)
fiadd
jae
nop
add
call
mov
inc
inc
inc
movs
retf
xor
mov
mov
test
pop
bound
jecxz
inc
popf
add
xor
push
add
es
dec
mov
adc
xor
stos
cmc
xchg
je
dec
out
push
test
scas
or
mov
dec
ss
aas
xchg
jb
in
jp
sbb
add
xor
aas
push
push
inc
movs
out
dec
or
sbb
push
or
add
fdivr
xor
pop
cmps
out
push
cmps
mov
xchg
pop
int3
cmp
push
fs
in
cmp
scas
pop
add
jge
call
int3
mov
xchg
repnz
adc
iret
xchg
test
cdq
daa
push
(bad)
call
push
pop
outs
xor
cmps
scas
movs
pop
dec
popa
ss
lahf
push
in
dec
dec
sub
lahf
push
int3
fld
mov
ret
sbb
cdq
iret
ins
mov
dec
in
sahf
mov
dec
mov
mov
std
inc
sti
fimul
in
ret
cwde
cmp
cld
(bad)
call
loope
jnp
mov
in
xchg
mov
inc
jmp
out
in
daa
dec
sub
cmp
test
sbb
add
(bad)
mov
add
jno
sbb
les
fs
jp
mov
mov
add
sar
outs
outs
or
xor
test
mov
xor
stos
mov
fidiv
mov
je
or
mov
(bad)
xchg
sub
movs
xchg
or
int
rol
fidivr
jmp
mov
xchg
xchg
inc
pop
out
xor
inc
or
lods
and
xor
inc
xchg
jno
in
inc
adc
pop
cmp
iret
and
sub
mul
inc
cmp
jno
stos
call
or
loop
lahf
xor
and
cmc
push
add
popa
(bad)
call
cmp
xor
test
push
mov
jno
pop
aam
inc
inc
jnp
xor
lea
and
(bad)
mov
cmp
int3
and
jp
mov
adc
int3
mov
mov
and
jle
cmp
or
adc
xor
adc
ins
jl
ja
add
xor
inc
hlt
(bad)
sub
cmp
sbb
push
mov
or
or
jnp
adc
push
xor
or
xchg
inc
lahf
aaa
mov
ss
loop
mov
jbe
or
(bad)
push
dec
jp
lahf
clc
sbb
sub
into
mov
in
jns
sar
xchg
jae
push
popf
inc
xor
or
push
inc
cmp
push
div
pusha
shr
(bad)
imul
adc
adc
in
add
test
into
loopne
test
inc
xchg
sahf
mov
jns
and
movs
repnz
add
std
adc
(bad)
xchg
mov
lods
mov
lahf
push
lds
xchg
pop
stos
cli
test
and
push
leave
fsub
sub
or
scas
cs
pop
stos
clc
fist
mov
or
test
aaa
inc
ss
fadd
xchg
popf
pop
test
mov
sbb
cmp
dec
inc
mov
pop
push
push
out
inc
xchg
ror
sub
je
cmp
mov
cmp
xchg
xlat
iret
dec
test
inc
test
shl
and
xchg
repnz
mov
gs
adc
stos
pusha
mov
sbb
ja
(bad)
xor
(bad)
mov
ja
js
cmps
pop
lahf
xor
stos
jns
sbb
jg
and
dec
or
sub
pop
pop
scas
or
mov
cmp
inc
rol
pop
jae
bnd
xchg
jmp
cmp
mov
cmps
push
out
xor
dec
mov
in
lods
fidiv
sub
xor
mov
and
sar
call
out
mov
lahf
call
cmp
(bad)
xor
xchg
xor
pop
xchg
test
push
std
xchg
fadd
ss
push
and
xchg
jle
loop
sbb
es
xor
adc
fist
xchg
cmp
or
mov
jg
addr16
imul
or
aad
mov
push
lock
xchg
cmc
push
sahf
dec
adc
in
sub
(bad)
mov
loop
cwde
push
addr16
sar
pop
fst
mov
lock
lods
out
fs
repz
mov
xor
cli
bound
lods
lds
or
ins
push
jmp
adc
sbb
ss
ds
jg
ss
xchg
xchg
inc
cli
loopne
sub
pop
(bad)
sbb
jmp
cdq
imul
cwde
jge
fs
adc
add
addr16
sbb
sub
xchg
aaa
xchg
jbe
mov
ss
(bad)
outs
add
pop
and
xor
leave
mov
lods
mov
in
xchg
ror
nop
xor
inc
sbb
jnp
fincstp
(bad)
daa
movs
xchg
or
inc
stos
dec
xchg
std
sub
out
add
add
sahf
sti
or
sbb
lods
mov
pop
pop
and
sbb
dec
sbb
lods
mov
jle
inc
cld
jmp
push
mov
stos
adc
rcr
sbb
aad
cld
mov
cmp
js
push
jle
mov
mov
jg
or
cmc
jmp
(bad)
cmc
loope
loop
pop
jmp
push
jmp
or
aas
adc
daa
aad
mov
add
inc
mov
pop
call
xchg
inc
nop
mov
dec
leave
sti
es
sub
stos
jae
jecxz
enter
xor
int
adc
fsubr
adc
cmp
out
fldcw
sub
sbb
int3
xor
scas
in
push
fld
pop
data16
movs
call
cmp
adc
(bad)
bound
fsubr
push
popf
bnd
and
ins
jle
rol
rcl
jp
jl
push
sti
push
(bad)
(bad)
fild
pop
push
adc
(bad)
push
xor
and
sub
mov
pop
add
mov
cmp
xor
(bad)
mov
mov
and
lea
mov
pop
pop
xchg
clc
jg
paddsw
sub
ds
add
xchg
in
(bad)
clc
inc
mov
dec
call
jmp
ins
xchg
push
pusha
add
fwait
int
popa
out
hlt
cli
mov
mov
pop
and
sub
lods
arpl
retf
es
loop
in
dec
xchg
add
(bad)
dec
inc
add
ds
xor
push
scas
iret
sub
je
and
mov
into
(bad)
jmp
push
mov
jmp
cs
mov
push
icebp
iret
adc
jnp
jmp
cs
ror
(bad)
sbb
xchg
icebp
xchg
jl
cwde
fist
leave
fidiv
scas
(bad)
xor
dec
inc
(bad)
ins
pop
rcr
or
sbb
inc
push
mov
mov
mov
dec
scas
jg
int3
ficom
(bad)
aaa
in
jno
outs
lods
(bad)
fdivp
lds
aam
dec
outs
sub
outs
lea
sbb
and
in
push
enter
mov
mov
inc
lods
test
shl
sub
outs
(bad)
or
test
stos
shr
movs
mov
push
adc
cmp
lahf
out
mov
xchg
xchg
cld
sar
mov
mov
retf
and
pop
add
xchg
in
(bad)
or
inc
imul
add
push
sti
sub
(bad)
xchg
std
popa
sbb
cmp
xor
and
sbb
ja
mov
dec
test
push
jb
test
stos
mov
xchg
fstp
out
outs
add
cmc
jae
sbb
sub
mov
push
add
sub
pop
sub
xor
mov
ins
push
cmp
xchg
addr16
pop
leave
jno
mov
jg
pusha
sti
js
sbb
rcr
stos
pop
dec
shl
mov
retf
mov
mov
icebp
int3
pop
fist
adc
push
rcl
loope
arpl
lea
and
lock
cmps
pop
loop
mov
out
(bad)
jg
movs
mov
lds
ins
xor
ds
leave
lods
cli
mov
ss
test
cmp
imul
dec
shl
push
xor
fwait
mov
sbb
adc
sub
jle
lahf
lds
dec
and
pop
and
scas
jl
adc
ret
dec
push
mov
xchg
repnz
out
lock
xor
inc
ds
repz
and
test
push
push
jae
pop
xor
js
and
int
xchg
pop
(bad)
call
ret
xchg
xchg
in
scas
mov
adc
into
jno
call
es
leave
cwde
push
adc
adc
push
jbe
dec
popa
test
mov
adc
pop
jmp
pop
jo
jb
ficom
push
or
(bad)
mov
sub
aad
retf
add
fiadd
dec
sub
or
mov
mov
jns
in
pop
pop
je
(bad)
pop
adc
aad
push
icebp
stos
pop
xor
lods
lock
dec
test
ficomp
in
jo
ror
icebp
ins
adc
jb
cmp
inc
imul
ror
push
repnz
(bad)
daa
or
arpl
out
push
repz
mov
les
outs
mov
ds
add
mov
(bad)
stc
inc
sbb
pop
rcl
push
sbb
hlt
mov
ins
fwait
push
push
aaa
lds
icebp
repz
add
cmps
jp
mov
in
or
jno
inc
inc
push
xchg
(bad)
mov
mov
jp
xchg
pop
xchg
inc
adc
enter
call
mov
inc
mov
and
cmps
outs
dec
nop
jns
das
mov
call
fwait
test
pop
dec
mov
adc
push
add
mov
retf
pop
sub
push
inc
cs
sub
cmp
cli
(bad)
(bad)
sahf
sbb
push
ror
fwait
xor
in
leave
and
adc
mov
aas
in
inc
jo
scas
cmps
div
jb
pop
mov
(bad)
fadd
cmps
sub
jp
das
out
jb
xlat
pusha
imul
inc
scas
ss
or
cmp
std
cmp
sbb
mov
and
pcmpeqd
sti
jp
test
push
sbb
xlat
inc
xchg
(bad)
in
dec
sahf
jg
xchg
xor
(bad)
aad
jo
std
push
cmp
lahf
popa
mov
and
les
pop
jecxz
xchg
push
scas
rcl
mov
inc
pop
scas
popa
pop
sti
daa
fdiv
mov
and
addr16
or
ins
call
push
xor
shr
out
out
add
test
xchg
pushf
call
adc
lods
mov
xor
test
stc
pop
or
and
fstp
pop
and
fidiv
cmps
movs
sbb
lods
pop
pop
pushf
xchg
std
and
sub
in
or
es
int3
mov
push
push
(bad)
je
lock
out
xor
sub
inc
push
repz
inc
push
mov
mov
cmp
outs
inc
sbb
and
adc
les
pop
sub
or
fs
in
rcr
jno
jo
pop
cmp
dec
ds
pushf
fucomi
cld
fwait
add
mov
add
out
pop
jne
in
xor
cmp
mov
mov
fwait
xor
xchg
jbe
cs
cld
movs
repnz
jg
out
mov
push
or
and
or
nop
pop
mov
xchg
out
fisubr
sub
fist
cdq
sub
xchg
xchg
fwait
(bad)
push
call
jl
icebp
or
ficomp
(bad)
stc
mov
leave
pop
int
and
mov
mov
sti
add
mov
sub
rcr
int3
loop
sbb
xchg
jae
scas
sbb
fdivr
fs
pop
retf
sub
aad
and
push
push
sbb
ja
mov
mov
push
add
test
test
hlt
test
test
retf
pop
outs
sub
mov
(bad)
ret
outs
test
mov
ret
das
ret
mov
and
mul
mov
popa
inc
gs
stc
mov
aas
pop
mov
or
dec
nop
xchg
xchg
or
mov
shl
int3
popf
call
fs
xchg
dec
enter
mov
or
inc
cmps
cwde
dec
xor
adc
cmps
and
mov
add
je
arpl
sub
ja
mov
lahf
jmp
(bad)
and
cmps
repz
jns
fcmovne
cli
cmp
add
ror
pop
cld
test
nop
and
and
clc
mov
out
add
xchg
ins
idiv
fild
mov
lock
arpl
inc
mov
xor
pop
sti
sub
repnz
leave
loop
inc
and
mov
push
push
hlt
pop
sub
adc
sub
imul
(bad)
cmp
outs
jmp
sahf
cld
lock
add
and
ja
or
push
out
mov
cs
push
in
inc
mov
call
in
xor
out
and
icebp
les
fld
mov
and
dec
cld
add
or
std
int3
adc
lods
mov
and
inc
fxch
add
gs
das
repz
and
dec
mov
lock
retf
or
inc
loop
loop
xchg
cmp
push
leave
dec
sub
aad
pop
pop
xchg
mov
mov
call
push
adc
mov
retf
push
jbe
outs
mov
arpl
mov
cmps
jbe
aaa
mov
call
sub
dec
test
push
or
push
jg
(bad)
cmp
xor
pop
add
mov
and
stc
push
retf
jle
shr
push
jl
jmp
dec
call
xor
popa
icebp
push
xchg
jnp
dec
mov
test
adc
dec
call
imul
and
lds
retf
cmps
mov
les
mov
fdiv
xor
sti
(bad)
aas
cwde
mov
cmp
jne
xor
sub
xchg
ds
fucomi
dec
jge
popf
xor
lock
jg
test
mov
les
test
shr
or
sub
pushf
aam
loopne
addr16
cli
mul
(bad)
jmp
sti
retf
and
inc
mov
mov
push
push
das
mov
push
or
inc
jmp
push
inc
mov
push
cmp
jle
pop
mov
icebp
cld
loope
mov
adc
(bad)
cmps
cwde
and
push
mov
xchg
or
outs
jl
cmps
sbb
push
ss
jno
mov
repz
inc
mov
rcl
mov
cmp
and
ret
(bad)
sbb
and
out
ja
xchg
ins
push
fs
and
je
fisub
addr16
addr16
pop
test
add
sbb
mov
jp
nop
icebp
scas
hlt
add
sti
jp
data16
aam
mov
dec
loope
push
out
add
scas
adc
pop
push
mov
ss
popf
lea
dec
repnz
sub
outs
cdq
push
inc
rol
or
mov
popf
fldenv
pop
clc
xchg
mov
jo
das
push
or
iret
mov
into
mov
add
ss
jne
xchg
rol
push
dec
test
daa
or
call
int
mov
ins
adc
mov
mov
xchg
jb
jl
cmp
or
inc
xor
mov
mov
xchg
dec
stc
add
lock
xor
or
or
shr
cmps
cmp
xchg
xor
push
neg
push
push
call
pop
js
cmp
jnp
ror
pop
inc
mov
sti
or
mov
mov
repnz
xchg
test
inc
mov
dec
jnp
sti
mov
and
(bad)
in
shl
inc
mov
mov
push
inc
xor
or
xor
mov
sub
cmp
and
frstor
pop
mov
mov
xor
clc
cdq
ins
leave
loop
mov
mov
dec
mov
mov
inc
xchg
pop
(bad)
mov
pop
and
fsubr
daa
push
mov
pop
jae
in
pop
test
xchg
ret
cwde
imul
adc
and
pop
leave
xchg
mov
jnp
dec
aas
std
(bad)
cmp
mov
test
sbb
xor
cmps
mov
(bad)
retf
(bad)
shl
(bad)
mov
imul
sbb
sub
bound
sbb
aaa
inc
fwait
mov
in
(bad)
jmp
je
add
pop
lods
ins
xchg
jmp
in
ss
imul
jmp
fsubp
movs
xchg
lods
scas
(bad)
(bad)
shl
sbb
pop
sar
mov
xchg
dec
jecxz
scas
mov
enter
sub
std
test
sub
mov
(bad)
test
in
sbb
movs
(bad)
lock
imul
push
xor
xor
int
fiadd
lods
repz
add
aas
outs
int
lods
xor
jle
shl
jg
(bad)
out
call
push
inc
popf
sub
into
shr
mov
inc
call
call
js
pop
retf
addr16
pop
push
daa
inc
addr16
mov
mov
push
cdq
sbb
push
dec
lahf
(bad)
das
push
jl
retf
or
in
jnp
repnz
inc
mov
jo
add
push
push
sar
int3
dec
lods
test
sbb
xor
dec
sbb
(bad)
popf
jne
scas
xchg
jp
cwde
or
mov
(bad)
fstp
and
pop
int3
mov
(bad)
jns
faddp
jne
pop
lahf
sbb
lods
dec
and
test
ds
push
dec
lods
out
lea
lock
std
mov
adc
dec
hlt
mov
aaa
sahf
dec
jmp
xchg
(bad)
mov
mov
ins
cmp
add
inc
aad
outs
inc
mov
aad
mov
xor
or
pop
loope
pop
into
cmp
mov
sub
pusha
jb
icebp
push
mov
(bad)
jmp
cmps
xchg
pop
out
xchg
cdq
or
sbb
push
scas
retf
je
adc
cmp
pop
dec
xchg
fwait
cs
inc
retf
xchg
scas
pop
sub
push
pop
or
pushf
push
mov
ret
not
jo
mov
push
cmp
in
cmp
inc
push
cmc
test
add
mov
ins
fisub
xor
pop
xchg
push
jl
(bad)
or
test
inc
popa
pusha
out
loop
ins
in
scas
xor
in
int3
xchg
fdiv
pop
xor
dec
movs
mov
mov
rcr
mov
fwait
pop
ins
ficomp
ins
mov
sbb
and
call
cmp
fwait
aaa
mov
mov
and
pop
in
call
jno
jp
test
sub
mov
adc
push
test
fild
sbb
inc
shld
or
(bad)
(bad)
mov
mov
or
sbb
sub
mov
stos
ret
loope
add
mov
ret
mov
loop
adc
mov
test
sbb
jge
mov
fs
(bad)
mov
inc
in
sar
mov
push
sub
mov
(bad)
pop
mov
xchg
adc
sub
xlat
mov
xchg
push
mov
loop
xor
sbb
push
retf
int3
add
sub
repnz
shr
jo
and
xchg
mov
inc
jbe
adc
movs
ret
fs
sbb
push
repz
cmp
jp
sub
push
add
loop
rcr
cmc
adc
and
stos
fcomp
(bad)
(bad)
imul
in
popf
push
fdiv
shl
pop
and
ins
je
dec
sub
cmp
mov
iret
pop
pop
cmc
out
mov
mov
std
push
adc
inc
iret
mov
mov
test
jns
sub
imul
dec
ret
hlt
mov
pop
cmc
sub
xlat
ret
aas
into
cmp
outs
test
or
adc
dec
les
cmp
push
fs
jbe
loope
icebp
cdq
scas
and
adc
xchg
clc
dec
add
add
ret
push
loopne
cmp
movs
fcom
mov
loopne
out
jb
jl
mov
cmp
lods
adc
jge
out
ds
nop
mov
cmp
(bad)
mov
mov
out
loop
xchg
call
jb
jle
add
adc
out
mov
cmp
push
jp
mov
repz
rcr
ror
outs
lea
mov
pushf
add
clc
enter
mov
in
jle
push
lahf
loope
add
ret
mov
pop
dec
dec
paddq
jp
cmps
cmp
shr
nop
mov
ins
sbb
out
repz
test
scas
jne
stos
pop
inc
adc
or
aaa
cmp
sahf
sub
mov
adc
scas
mov
inc
loopne
sahf
fist
out
shl
sahf
sbb
lods
loope
xchg
pop
mov
in
aaa
std
pop
call
mov
loop
bound
je
push
pop
jg
cmp
test
jno
ja
mov
mov
push
xchg
add
adc
mov
loop
inc
cmp
push
xchg
mov
lahf
inc
cmp
sbb
ds
sar
jno
xchg
popa
call
cdq
in
lds
shl
mov
xor
xor
sahf
movs
sub
adc
and
and
cs
pop
jae
out
imul
mov
pop
out
sub
(bad)
ror
jl
sbb
cwde
or
hlt
xor
inc
inc
(bad)
imul
shr
stos
pop
pop
mov
jno
mov
dec
push
fnstenv
in
lea
test
test
inc
inc
fwait
push
cmp
xchg
test
je
rol
xor
test
sub
vmulss
pop
mov
imul
inc
adc
add
jne
pop
int3
adc
fwait
mov
jae
inc
(bad)
popa
push
or
out
enter
stos
repz
(bad)
mov
mov
xchg
push
mov
mov
xchg
cmp
rol
hlt
mov
arpl
jecxz
mov
push
adc
ror
fld
movs
push
into
jmp
retf
gs
xchg
inc
or
cs
repnz
retf
test
add
fs
pop
push
das
(bad)
stc
and
jnp
fwait
ins
xlat
jns
(bad)
in
xor
into
or
mov
and
adc
push
lds
mov
rcr
outs
cdq
xchg
jg
xchg
pop
push
popa
je
fisttp
fmulp
jle
stos
or
movs
adc
mov
lods
xor
cmc
jno
adc
sub
mov
add
stos
mov
ret
xchg
mov
add
cmp
daa
loopne
cmp
es
mov
sbb
push
sahf
aam
test
sub
lea
(bad)
mov
sub
daa
add
jecxz
lods
mov
add
scas
cmp
inc
movs
pop
inc
add
xchg
es
fst
jecxz
pop
clc
popf
bound
inc
call
sub
retf
pop
fnstenv
ins
leave
stos
cmc
and
ins
das
data16
jne
fs
add
adc
repz
retf
es
retf
mov
cld
in
mov
fcomi
xor
mov
cmc
outs
xchg
add
(bad)
lods
jo
stos
inc
dec
rol
in
push
cmp
mov
lods
test
mov
fild
xor
sahf
repz
fisttp
and
test
pop
push
out
pop
enter
ficom
fs
jmp
xchg
mov
adc
enter
pusha
test
dec
lods
sbb
xchg
les
dec
sub
xchg
ficom
xor
sbb
test
jg
aaa
rcl
inc
dec
std
stc
nop
mov
dec
lds
fistp
rcl
mov
rcl
cmp
ror
dec
(bad)
daa
jns
test
push
call
pop
(bad)
shl
cmp
movs
sbb
not
jne
js
xor
test
ins
mov
mov
push
dec
mov
out
jbe
add
mov
out
(bad)
push
cmc
or
mov
ins
or
sbb
mov
dec
jl
pop
jnp
adc
mov
push
cs
mov
xchg
out
jmp
ja
inc
fnstenv
pusha
lahf
push
jnp
stc
mov
rcl
push
cmc
out
es
cmp
xchg
daa
adc
inc
pop
mov
shr
and
push
lock
imul
push
pop
adc
out
test
imul
sbb
nop
movs
mov
inc
dec
sub
inc
fdiv
dec
dec
mov
pop
push
call
mov
mov
mov
out
pop
(bad)
and
rcl
xor
sbb
or
ret
inc
test
cdq
cmc
pop
pop
jmp
lds
adc
stos
cmp
and
in
xor
pop
pop
sub
(bad)
cs
fisubr
lods
arpl
dec
repz
push
sub
hlt
cmc
lock
test
sub
adc
lods
mov
mov
(bad)
jp
outs
int
add
mov
mov
pop
sub
shl
cmc
inc
xchg
das
and
scas
fwait
jnp
ins
retf
mov
pop
sbb
fcom
shl
mov
add
test
sar
push
loop
mov
sub
movs
xchg
inc
fld
out
pop
push
call
jl
dec
mov
mov
adc
jbe
out
in
ss
mov
shl
push
imul
cwde
lahf
int3
push
pushf
xor
adc
pop
fisttp
bound
call
in
lds
push
sbb
push
hlt
or
fadd
fdivr
shl
fisub
scas
or
dec
push
jnp
xor
std
push
into
cwde
lods
lea
push
rcl
mov
clc
dec
add
int3
call
lea
cli
push
sub
shr
leave
sbb
sahf
jno
and
adc
stos
pop
(bad)
mov
call
xchg
lods
(bad)
call
and
mov
in
(bad)
fdivr
out
je
stc
jmp
mov
in
mov
int
mov
shr
test
sub
sub
loopne
outs
pop
lods
adc
inc
jnp
jmp
sti
mov
clc
mov
test
cmp
mov
xor
inc
out
adc
jg
mov
xchg
aaa
push
pop
inc
(bad)
sub
inc
push
jo
cmp
cmc
outs
dec
rcr
and
cli
xchg
push
loopne
stos
mov
jns
fisttp
lods
push
xor
xor
adc
jle
imul
int3
not
out
repnz
cmp
ja
cmc
xchg
sahf
and
jbe
xor
xchg
adc
(bad)
out
push
xor
cmp
mov
repnz
neg
and
mov
jp
pop
clc
jno
enter
jne
jo
stc
push
(bad)
cmps
push
mov
cmp
adc
outs
fmul
aas
jle
and
jle
aad
pop
scas
and
out
pop
retf
int
pop
push
aaa
gs
std
outs
or
aaa
push
ret
xor
sub
rol
mov
lods
mov
and
add
push
movs
push
sub
rcr
xchg
movs
mov
add
sbb
fadd
stos
cmp
sbb
jae
outs
ret
(bad)
xchg
pop
mov
push
inc
push
and
push
xor
jmp
int3
xchg
push
ss
dec
xor
bound
mov
mov
push
ret
ds
mov
jl
dec
icebp
push
dec
lea
sbb
scas
lea
in
cwde
popf
les
mov
mov
pusha
call
inc
sub
cmp
xor
aas
xchg
xchg
mov
das
fadd
sahf
mov
movs
add
in
ffreep
push
inc
sbb
mov
rcr
inc
(bad)
or
cmp
sub
jno
dec
test
jae
xor
ret
pop
push
dec
sbb
xchg
scas
shr
rcr
dec
je
fs
gs
je
dec
pop
or
mov
leave
push
loope
fstp
out
movs
aad
lea
push
iret
hlt
cmp
jns
adc
neg
inc
std
add
inc
sar
gs
lods
and
mov
pop
mov
loopne
cdq
cld
and
aaa
std
scas
das
mov
add
push
jns
cmps
pop
inc
dec
cld
mov
jmp
(bad)
xchg
add
js
std
inc
or
fidiv
add
or
push
je
mov
mov
stc
mov
js
mov
cmp
and
cmp
xor
lods
dec
ss
or
mov
and
(bad)
pop
ret
imul
packssdw
sub
sub
adc
lods
sub
jne
setnp
aaa
dec
out
mov
les
mov
jmp
rol
adc
mov
ins
xchg
mov
mov
outs
jg
dec
movs
pop
loope
outs
aad
loope
xor
or
out
ins
inc
repz
js
mov
ror
xor
mov
out
cmp
rol
xchg
cmps
and
lahf
sub
aaa
cmp
mov
sbb
adc
add
jl
add
sbb
pop
ficom
sub
mov
jge
xchg
or
arpl
in
adc
adc
cli
stos
pop
(bad)
call
leave
dec
sti
and
push
test
bound
fistp
lds
jno
mov
mov
rcr
jnp
xor
adc
leave
mov
fs
and
inc
push
aaa
cwde
dec
loope
mov
dec
mov
xor
sar
cmps
jmp
in
sbb
adc
shl
fild
inc
xchg
ja
push
dec
clc
lods
cmp
adc
cwde
mov
mov
and
mov
inc
lods
lods
mov
in
cmc
ja
xchg
jmp
xchg
pop
retf
inc
jbe
adc
inc
shl
mov
pop
push
mov
cmp
pop
xchg
sub
scas
lds
lods
outs
les
sbb
loope
popf
(bad)
ss
out
iret
test
scas
xor
sbb
xchg
push
retf
jecxz
rcr
in
mov
pop
inc
test
jne
js
mov
push
sbb
cmp
pop
icebp
add
dec
xchg
xor
sub
cdq
repz
jns
mov
xlat
scas
aas
or
in
mov
pop
and
popa
clc
adc
add
sbb
sti
mov
push
and
out
das
inc
pop
loopne
push
in
inc
mov
push
(bad)
je
pusha
es
sub
and
jecxz
xor
dec
es
loop
sub
out
or
add
mov
icebp
adc
int3
scas
sahf
sti
pop
xchg
out
xchg
mov
popf
bnd
xor
mov
or
jns
mov
aaa
pushf
ret
clc
loopne
pop
clc
aas
stos
add
(bad)
mov
out
pop
and
xchg
sti
sbb
jge
mov
arpl
push
imul
push
movs
pushf
test
sar
pop
mov
pop
jge
push
cmc
out
sub
mov
jge
ss
adc
dec
push
cmp
(bad)
mov
fwait
jne
adc
(bad)
rcl
cmp
out
mov
in
pop
data16
movs
jl
add
dec
fcmovnb
pushf
fst
push
or
adc
(bad)
int
(bad)
inc
pop
xor
mov
push
leave
push
adc
jl
fsubr
outs
cmps
mov
mov
cmp
push
sub
xchg
bound
mov
push
fist
imul
mov
std
jno
movs
popf
xor
pop
xchg
fs
add
fsub
push
mov
dec
or
jo
add
repz
add
sahf
fwait
mov
inc
enter
pushf
and
push
sub
pop
aaa
addr16
jbe
dec
mov
jle
xlat
push
sahf
sbb
das
repnz
or
inc
pop
xchg
xchg
xlat
jns
xchg
lods
xor
mov
pop
jns
outs
sar
inc
retf
add
dec
mov
sbb
outs
push
inc
fcmovne
and
sub
push
adc
xchg
dec
mov
jns
(bad)
loop
jb
popa
or
pop
je
scas
inc
sar
add
mov
retf
mov
gs
pushf
nop
(bad)
mov
or
cmps
in
adc
xchg
js
ins
mov
fwait
dec
and
dec
in
push
jge
bound
(bad)
ja
and
cs
mov
sub
inc
jmp
fnstcw
call
shr
leave
in
in
inc
pop
jecxz
push
sbb
rcr
test
mov
imul
mov
inc
repnz
or
fisttp
in
sti
sub
xchg
adc
ret
mov
fist
adc
and
cmp
movs
fwait
scas
clc
nop
jae
sub
loope
movs
jmp
xchg
in
cs
pop
arpl
into
and
nop
mov
into
ret
add
or
sub
ins
sbb
loop
lock
xchg
out
shl
jmp
add
fdiv
fwait
ret
fistp
enter
and
pop
jnp
xchg
je
cld
xlat
dec
mov
std
sub
(bad)
push
in
xor
clc
loop
out
das
sub
or
sub
and
ins
movs
mov
call
arpl
jo
pusha
pop
sar
fwait
or
xchg
imul
imul
mov
xor
aad
scas
(bad)
lds
mov
push
sar
xor
mov
sub
enter
out
jae
mov
pop
cmp
popf
out
data16
hlt
push
jmp
cmp
push
jno
mov
mov
addr16
sbb
pop
inc
les
mov
jnp
dec
mov
js
loope
ds
inc
cld
test
xchg
repnz
and
movs
inc
mov
test
pop
mov
shl
cld
xor
test
popf
mov
daa
ds
xor
pop
sub
or
ss
pop
retf
nop
inc
cmps
mov
mov
push
mov
cmp
adc
out
mov
clc
push
push
push
aam
dec
pop
int
mov
or
pushf
loope
mov
push
mul
setb
cld
or
subps
in
sbb
add
(bad)
dec
mov
mov
cmp
jge
rcl
mov
fwait
or
jmp
cmp
sbb
jmp
inc
or
mov
aaa
test
inc
push
(bad)
cmp
dec
mov
sbb
dec
mov
pusha
ins
mov
fidivr
push
sub
sbb
jno
out
cmp
mov
xlat
fucomp
ret
(bad)
(bad)
iret
fisttp
scas
push
add
fs
lds
rol
pop
xor
test
ja
mov
(bad)
arpl
jmp
(bad)
out
sub
mov
mov
(bad)
add
jae
xor
inc
aaa
dec
jmp
xchg
test
jno
push
mov
repnz
scas
cmp
addr16
iret
retf
pop
add
push
push
mov
fmul
stc
test
cs
fcomp
push
dec
int3
fcom
inc
inc
fadd
movs
and
xchg
shr
outs
cmps
gs
cdq
sub
(bad)
bound
inc
(bad)
xchg
cli
xor
scas
mov
ja
or
and
pop
jne
data16
arpl
scas
popa
pop
jne
push
dec
lds
mov
xchg
adc
mov
test
into
push
iret
jp
adc
and
cmp
pop
fcmovne
adc
push
(bad)
push
pushf
xchg
ja
adc
data16
add
mov
cmc
mov
inc
jmp
sbb
shl
aam
jb
adc
enter
frstor
cmps
pop
sbb
adc
les
inc
in
fistp
add
mov
pshufw
jmp
not
pushf
mov
idiv
pop
repz
and
call
mov
in
xchg
lods
cmp
xchg
push
xor
cmp
popa
aam
in
mov
stos
xor
pop
movzx
mov
jl
and
xor
pop
jl
dec
sbb
call
xchg
bound
rol
mov
ins
iret
inc
and
in
(bad)
jno
inc
cmp
out
ret
fs
push
loope
daa
sbb
jg
push
cdq
shl
jb
in
push
inc
fdivr
dec
push
dec
dec
inc
fsub
test
cmp
hlt
aas
adc
and
jb
sar
das
bound
mov
dec
stos
or
add
stos
add
mov
loop
(bad)
mov
cwde
loope
out
lahf
pop
xor
pop
and
cli
ror
or
or
sbb
sub
pushf
inc
mov
daa
inc
add
fild
jno
lea
test
pop
daa
fdecstp
push
test
jae
cmps
movs
adc
inc
call
cmp
xchg
add
cmc
dec
aam
sub
or
and
dec
ret
push
sbb
icebp
fild
push
in
inc
int
dec
psubsb
jae
or
or
add
adc
std
dec
push
stc
lahf
call
(bad)
push
and
jmp
mov
or
xor
sub
dec
(bad)
push
adc
sub
aaa
push
xchg
mov
push
mov
jl
arpl
and
test
(bad)
int3
daa
cmps
add
retf
xchg
inc
js
imul
cmps
inc
mov
nop
jbe
inc
test
int
loope
scas
pop
inc
loope
inc
repnz
cmc
sbb
shr
xchg
clc
int3
and
push
cmps
push
cmc
mov
inc
sbb
aaa
jge
xchg
dec
xor
cmc
lds
iret
adc
and
mov
leave
adc
pop
xchg
das
xchg
sub
or
test
cmp
scas
je
or
aaa
adc
mov
cmp
fistp
rcr
leave
push
cmp
arpl
fistp
cmp
ret
xor
outs
fwait
xor
mov
add
jg
in
mov
add
out
mov
adc
mov
cmp
or
frstor
bound
push
mov
int
xchg
test
call
or
mov
xor
push
mov
popa
and
mov
xor
push
aam
or
xchg
aad
inc
sahf
ins
dec
cmp
jmp
scas
mov
daa
rcr
inc
aas
sub
add
jmp
xor
xchg
mov
pop
pop
inc
push
out
sub
and
repz
push
dec
in
ficom
cwde
jns
nop
repnz
lahf
xlat
pop
dec
movs
dec
fucomip
mov
pop
rcr
xchg
out
mov
mov
fwait
cmp
mov
movs
sbb
jecxz
dec
jle
lods
add
push
add
xchg
xchg
int
dec
add
pop
cli
sub
enter
cmc
jno
fstp
xor
lds
cmps
add
cwde
cmp
or
in
sub
test
xchg
lods
dec
out
clc
or
fld
mov
test
loope
xchg
int
in
cld
sub
adc
(bad)
scas
cmp
mov
les
dec
mov
dec
jns
add
adc
pop
std
mov
pop
cmp
clc
bound
fwait
dec
add
es
scas
mov
test
mov
loopne
ret
mov
push
mov
jge
sub
scas
jmp
lods
jnp
push
lds
(bad)
inc
vpxor
mov
push
jl
outs
in
mul
jo
push
lea
int
sub
inc
cmp
xor
xchg
mov
daa
xor
std
cmps
pop
movs
cmp
test
mov
sbb
xlat
xchg
pop
ror
sbb
mov
stos
(bad)
jbe
icebp
fs
xchg
inc
retf
push
push
out
cli
(bad)
mov
adc
lds
add
daa
add
in
add
popa
ret
push
cld
adc
(bad)
ffreep
pop
in
js
scas
and
imul
loop
mov
punpckhwd
inc
jecxz
lea
fdiv
(bad)
out
sub
mov
aad
jmp
mov
jmp
add
lahf
stc
js
aas
std
mov
sub
pop
mov
xchg
repz
call
repz
lods
inc
ins
rcl
fcmovu
xchg
ins
add
inc
dec
rol
adc
stc
jg
mov
push
clc
mov
idiv
pop
mov
mov
call
int
xchg
sub
sbb
inc
shl
xor
test
outs
ins
pop
inc
scas
stos
jmp
push
lods
cwde
jge
js
fld
jae
xor
test
iret
ds
or
xor
dec
mov
sti
cmc
and
loope
not
dec
sbb
or
lock
add
adc
int
cmp
cli
mov
(bad)
pop
mov
sub
xchg
icebp
fsub
add
int
into
mov
call
scas
dec
jnp
cmp
mov
popa
out
fisttp
daa
pop
in
sbb
mov
(bad)
jg
test
(bad)
add
inc
add
and
fcmovnu
std
jnp
jnp
cmps
inc
sbb
inc
ins
push
fisubr
icebp
aaa
cmp
inc
and
adc
jnp
fisubr
out
jle
jecxz
mov
jno
sbb
sbb
dec
pop
outs
mov
mov
lock
or
jge
mov
mov
mov
sti
push
cld
fist
cmp
lea
mov
out
or
lea
mov
lahf
aas
in
inc
pop
ds
(bad)
xchg
add
and
movs
popf
loop
add
pop
and
ins
daa
pop
nop
inc
adc
lods
add
loopne
mov
and
dec
mov
fdivr
dec
out
int3
adc
iret
jg
mov
and
push
ja
cmovbe
jnp
jge
test
(bad)
fisubr
mov
pop
jecxz
push
mov
rol
rol
pop
xchg
loopne
add
cmp
pushf
retf
sbb
pop
lods
or
mov
mov
cmps
push
pop
sbb
icebp
pop
call
mov
sbb
dec
arpl
sbb
outs
ret
and
sbb
sub
sbb
test
push
inc
sub
push
sbb
xor
xor
and
add
sbb
jb
mov
(bad)
in
dec
dec
dec
pop
adc
add
leave
xchg
sub
mov
pusha
and
leave
and
test
jp
dec
pushf
mov
aam
pop
mov
mov
or
mov
sbb
jmp
add
sbb
fcomp
jmp
mov
shl
out
popa
ss
mov
imul
dec
movs
jo
movs
cmp
and
retf
sub
(bad)
or
movs
pop
jp
ins
sub
sbb
adc
pop
fcmovne
scas
xor
dec
pop
xor
pop
loope
ins
adc
lods
imul
ins
cmp
mov
xor
xchg
(bad)
in
jo
nop
idiv
pushw
(bad)
xchg
fidivr
xchg
lods
(bad)
jecxz
mov
cmps
jns
ss
rol
stos
test
jmp
and
fmul
dec
iret
fdiv
in
add
xchg
jle
inc
inc
jmp
inc
mov
imul
xchg
add
xchg
sbb
inc
nop
mov
mov
dec
rcr
lea
inc
push
adc
enter
ss
cmp
sub
mov
or
leave
shr
cdq
repz
xor
stos
fidivr
mov
cmc
lock
ror
mov
cmps
je
mov
loop
pop
mov
lea
mov
sub
mov
lods
lods
fst
outs
mov
inc
cmp
xchg
add
rcl
out
aas
inc
or
imul
ds
rcr
cmps
and
mov
aam
loop
scas
mov
pop
cmps
jae
dec
jle
jge
sub
(bad)
loopne
stos
or
(bad)
ftst
lds
scas
dec
je
lea
pop
movs
mov
lea
iret
mov
cmp
imul
mov
enter
and
mov
scas
rcr
pop
mov
inc
retf
(bad)
retf
pop
fs
fist
stos
out
ficomp
adc
dec
push
and
add
inc
xor
jnp
pop
addr16
push
dec
lahf
and
sub
pop
pop
inc
out
xor
movs
call
adc
mov
cmp
pop
daa
out
ja
movs
inc
sbb
mov
fstp
shl
out
in
mov
add
mov
jg
inc
push
cmp
scas
cmp
sbb
js
jmp
sub
sbb
adc
push
cmps
ret
mov
adc
jl
push
fidiv
out
fcmove
retf
dec
jns
cmc
mov
leave
xchg
xor
add
cdq
or
jp
fld
push
sbb
gs
fild
sbb
gs
fisub
xchg
cld
shl
jb
rcl
rcl
adc
pop
ret
imul
or
stos
mov
push
jne
ret
pop
nop
int3
(bad)
mov
push
jbe
cmp
repnz
add
popf
ja
xor
lods
cmp
mov
mov
or
jecxz
gs
movs
add
arpl
scas
lods
bound
push
mov
je
inc
loop
test
dec
or
and
xchg
(bad)
cld
outs
mov
add
push
ss
jne
cmc
fcom
and
inc
and
shl
mov
mov
mov
test
pop
adc
push
imul
push
dec
mov
sub
rcr
aam
cmp
seto
push
and
mov
cmovae
div
lock
repz
inc
mov
jmp
jecxz
aam
push
xor
enter
call
je
es
dec
in
cmps
iret
mov
adc
cmp
or
hlt
fnsave
inc
repnz
xchg
add
loope
setne
(bad)
imul
in
or
rcr
mov
push
add
lods
push
jl
dec
or
call
loopne
sub
jns
imul
add
xchg
mov
cmp
in
and
fisub
fstp
in
hlt
inc
lods
jmp
cmps
add
ins
mov
dec
shl
mov
cmp
in
lock
jno
ret
cmp
mov
mov
repnz
mov
xchg
sub
mov
fadd
je
cmp
cs
bnd
iret
fild
call
fwait
push
push
mov
mov
sti
aas
sar
xchg
inc
add
fsubr
mov
pusha
add
inc
jae
imul
ret
xor
mov
xchg
loope
daa
cmovbe
pop
xchg
dec
and
pop
xchg
pusha
push
cmps
push
add
fnsave
repnz
int3
ror
mov
in
xchg
cld
add
stos
inc
mov
xor
push
nop
lahf
cmp
jae
push
loop
pop
dec
pop
xchg
dec
push
adc
mov
nop
neg
cmp
sbb
and
jae
push
fcomp
addr16
(bad)
cmp
inc
sub
mov
fs
add
and
xlat
push
push
mov
imul
xchg
xchg
adc
test
out
and
mov
dec
rcl
int3
jle
mov
cmp
jb
mov
push
jge
stos
sbb
inc
cld
(bad)
mov
pop
add
adc
cli
jns
inc
xchg
pop
mov
sub
movs
into
xor
adc
adc
add
(bad)
mov
dec
inc
or
(bad)
sbb
mov
rol
pop
jmp
retf
rcl
adc
xor
leave
test
rol
dec
jmp
call
mov
mov
out
pop
mov
xchg
xor
and
enter
mov
inc
mov
test
adc
dec
movs
nop
xor
fxch
call
call
pop
rcr
and
push
mov
in
mov
dec
inc
call
xchg
xchg
and
pushf
sub
xchg
ret
idiv
lahf
mov
es
fcmovnu
ins
aad
rcr
mov
pop
test
add
(bad)
pop
(bad)
and
mov
test
mov
xor
daa
xchg
xor
or
inc
cmp
ins
mov
cmp
imul
xor
ins
cmps
imul
sar
dec
mov
mov
scas
in
mov
dec
jae
fiadd
jmp
arpl
daa
cmp
fsubr
enter
out
jmp
pop
loope
loop
in
xor
cmc
ficom
ss
std
lea
jmp
push
dec
cli
fwait
movs
sub
(bad)
neg
mov
mov
imul
fcmove
test
cmps
bnd
push
mov
rcr
jnp
cwde
mov
adc
ins
push
es
loope
ins
leave
inc
pop
pusha
and
xor
cmp
ror
mov
cmp
xchg
push
daa
fmul
je
imul
aaa
scas
push
cmps
inc
fisttp
popf
mov
test
cmp
hlt
(bad)
ror
pop
dec
addr16
add
(bad)
in
mov
fwait
or
es
pushf
(bad)
movs
leave
xor
cmps
pop
fnstenv
call
sbb
sub
and
mov
ins
pop
addr16
ror
sub
mov
inc
pop
mov
xchg
sub
mov
lods
in
mov
xor
arpl
mov
inc
jnp
bound
inc
cmp
and
inc
std
(bad)
hlt
movs
ss
push
fcmovnu
mov
jmp
inc
ds
mov
cmp
jbe
mov
dec
push
jb
retf
add
loopne
mov
add
jmp
into
pushf
dec
test
jns
pop
sbb
fsin
pop
xchg
sub
mov
add
rcl
imul
movs
xchg
or
and
cmp
call
lods
scas
jne
arpl
dec
xor
int
push
std
pop
scas
mov
xchg
jmp
mov
popa
and
test
call
outs
in
mov
arpl
jbe
shr
inc
or
mov
mov
lds
das
pop
or
ins
iret
ins
lea
lods
fldenv
les
cmp
repz
and
and
sahf
imul
push
fsub
call
in
(bad)
xor
outs
mov
xchg
pop
sbb
ret
cmp
outs
jnp
retf
dec
ja
and
and
xor
ins
cmp
scas
ins
mov
xchg
repnz
call
(bad)
pop
xchg
(bad)
lods
cli
xor
xor
and
icebp
loopne
pop
pop
xor
fcmovnu
sub
or
(bad)
pop
sub
dec
sar
mov
bound
dec
inc
jmp
or
xchg
rcr
mov
mov
sti
lods
rcl
or
int3
mov
xchg
out
mov
cmp
dec
mov
icebp
js
cmp
jnp
in
rol
fisttp
jge
psubb
inc
mov
ret
adc
ins
sbb
movs
sub
mov
cmp
js
leave
mov
jnp
or
mov
rol
pop
fistp
sbb
out
repnz
jns
xor
in
repnz
es
jg
cmc
xchg
movs
movs
mov
(bad)
adc
sahf
stos
dec
jg
call
pop
or
and
cmc
cmp
popf
or
cli
pop
xor
xchg
dec
adc
push
inc
jle
in
push
dec
iret
std
mov
movs
js
stos
call
dec
jmp
push
jmp
mov
mov
(bad)
stos
(bad)
xchg
cmp
cli
lsl
and
inc
dec
mov
pop
push
mul
adc
mov
pushf
in
add
aad
dec
xchg
add
lds
scas
dec
bound
adc
pop
xor
pop
stos
xchg
adc
adc
push
adc
in
imul
bound
aaa
stc
xchg
sub
xchg
hlt
xchg
dec
int3
mov
mov
ja
mov
dec
xor
or
push
push
pop
mov
clc
push
fld
inc
outs
je
jno
xchg
ret
jns
xchg
inc
sti
ds
adc
aam
loope
fstp
mov
mov
push
shl
idiv
dec
jmp
cmc
and
mov
jmpw
es
mov
xchg
fild
pusha
sbb
xor
or
jno
cs
enter
dec
iret
adc
aaa
(bad)
jmp
sub
movs
shr
adc
inc
bound
mov
mov
scas
adc
(bad)
(bad)
xchg
(bad)
mov
dec
xor
adc
mov
push
sub
int
mov
adc
push
lock
xchg
jae
ret
popa
into
jmp
rol
xchg
shl
dec
jmp
cmp
loop
jb
push
inc
pop
sar
cs
jl
pushf
scas
pop
mov
dec
es
shr
xlat
out
and
fdivrp
je
mov
mov
(bad)
call
and
add
mov
mov
and
push
sub
push
adc
rcl
bound
cmps
xchg
pop
imul
sbb
mov
adc
xlat
test
pop
jmp
and
xchg
bound
ret
cdq
sbb
imul
cmovb
out
int3
(bad)
cmp
sub
mov
inc
mov
cmp
pop
sbb
jae
xor
cmp
add
mov
or
mov
ret
int3
bound
xor
mov
and
pop
sbb
imul
pop
dec
cs
inc
mov
pop
scas
and
inc
ret
dec
mov
mul
fcomip
out
mov
(bad)
popf
add
cmc
jbe
push
sbb
ret
mov
pop
inc
cmp
mov
push
sub
lods
inc
xchg
js
mov
(bad)
icebp
(bad)
enter
push
into
cwde
xchg
jle
aam
push
hlt
pushf
jmp
mov
mov
add
push
ss
arpl
ins
mov
sbb
movs
pop
pop
movs
sbb
or
xchg
adc
mov
test
sbb
lea
add
ins
xlat
fwait
ret
mov
push
aam
xchg
jmp
cwde
push
cs
imul
xchg
sahf
mov
repz
loope
rcr
movs
je
xchg
xchg
mov
adc
popf
jmp
or
inc
cmova
jl
aas
mov
inc
rol
sub
cld
test
std
dec
add
(bad)
into
sub
mov
mov
cwde
shr
mov
scas
mov
mov
mov
ror
add
mov
ret
sub
cmps
lahf
adc
aas
das
dec
jno
out
xchg
call
xlat
xchg
ror
movs
add
and
into
inc
idiv
aad
lods
adc
adc
adc
push
xchg
or
sub
movs
sub
dec
mov
popf
jne
add
xor
mov
repnz
inc
sbb
shl
xchg
dec
sbb
addr16
jmp
repz
rcr
lods
shl
int3
out
and
movs
outs
jmp
mov
sub
dec
pop
and
pop
loope
int
ins
cmp
jp
push
clc
fistp
cmp
dec
in
pop
inc
jb
out
xchg
push
adc
jb
inc
cmp
dec
or
xor
ins
jo
sub
cs
cmp
push
mov
mov
jg
ss
mov
sti
mov
jp
retf
fs
mov
xchg
movs
cmp
shl
sar
xor
leave
sahf
mov
xchg
fmul
dec
lahf
mov
jle
out
dec
fs
lods
cmp
mov
daa
(bad)
aam
dec
mov
sub
mov
fs
fadd
mov
repnz
xlat
(bad)
sub
pop
popf
das
jne
mov
mov
mov
ss
xchg
add
std
xor
test
stos
adc
in
pop
inc
and
ja
mov
popf
rcr
out
xor
imul
mov
sbb
pop
ins
adc
repnz
and
fmul
bound
scas
cmc
aam
dec
loopne
jae
pop
inc
data16
jle
sbb
xor
cmp
cld
scas
iret
sbb
push
retf
mov
adc
or
jecxz
xchg
jg
jnp
push
sbb
neg
inc
push
inc
and
pop
mov
call
das
in
jp
sahf
pop
push
cmc
dec
(bad)
es
or
sub
sbb
(bad)
inc
xchg
fcmovb
dec
jmp
jg
mov
xchg
stc
jl
out
repz
mov
stc
lds
ja
xor
lock
rcr
(bad)
add
inc
jecxz
jo
xchg
or
or
nop
ss
jo
mov
pop
add
test
push
shl
das
or
ja
cli
or
push
icebp
xor
xchg
int3
jbe
loope
lahf
out
mov
aad
call
popa
outs
(bad)
mov
push
scas
mov
shr
sbb
aad
je
jbe
rol
sub
pcmpgtb
test
mov
and
lds
into
fnsave
loopne
repnz
iret
cmc
push
dec
(bad)
sbb
and
cmc
(bad)
pop
pop
scas
imul
(bad)
fsubp
scas
dec
jnp
sbb
cmp
cmp
rcl
jns
das
mov
movs
loopne
mov
and
icebp
into
ret
pushf
dec
mov
jo
jl
mov
xchg
push
enter
dec
repz
jmp
sub
lds
outs
pop
mov
xor
ja
jb
adc
xor
stos
sub
repnz
add
push
and
stos
inc
sar
xchg
inc
add
data16
and
pop
push
cdq
inc
xchg
mov
test
xchg
fidiv
sar
mov
jae
xchg
jmp
in
add
cmp
ins
fcom
test
adc
xor
int
imul
daa
test
inc
(bad)
ds
jo
lods
(bad)
pop
push
xchg
ret
test
retf
mul
jo
dec
out
dec
lds
and
retf
stos
lods
inc
aam
cmp
in
dec
mov
icebp
mov
mov
ja
cdq
xchg
into
call
repnz
and
dec
or
or
xchg
sbb
dec
inc
ret
into
call
mov
sub
test
sub
(bad)
(bad)
shl
jbe
jmp
or
mov
xchg
mov
out
mov
(bad)
or
mov
sti
push
or
je
(bad)
ins
mov
addr16
pop
ins
es
jno
sbb
loop
fld
pop
js
mov
shl
mov
movs
adc
mov
ds
aad
dec
bound
push
dec
movs
ja
fisttp
in
and
add
pop
jno
out
(bad)
stos
mov
stos
sbb
test
rcl
adc
xor
mov
push
sar
in
inc
cmp
retf
xor
xor
repz
jnp
sub
jae
inc
and
and
push
mov
sbb
sti
push
jno
sbb
cmp
das
imul
fwait
movs
int
mov
mov
mov
mov
jnp
cmp
out
rcr
stc
inc
inc
mov
mov
cmp
cmp
fldenv
xchg
(bad)
or
lds
scas
mov
pop
push
ret
dec
adc
mov
dec
mov
xchg
idiv
ror
and
movs
sbb
sbb
repz
xor
jae
mov
daa
loop
dec
inc
push
repz
retf
mov
iret
jbe
cmp
xchg
jl
mov
(bad)
adc
jnp
out
cmp
fiadd
sbb
mov
cld
xchg
jo
pop
jae
test
jmp
(bad)
mov
je
xchg
lock
push
std
repnz
shl
jle
movs
mov
lock
pop
adc
ret
inc
in
inc
out
mov
idiv
push
mov
sti
dec
std
fbld
dec
inc
jns
ins
mov
(bad)
ds
dec
shl
jb
stos
jbe
sbb
js
xchg
inc
shr
ins
fwait
or
xchg
out
and
inc
faddp
jl
in
mov
xor
jle
test
add
dec
loopne
dec
outs
outs
rol
and
inc
jecxz
push
fs
mov
mov
inc
dec
mov
push
xor
fstp
push
daa
iret
and
arpl
xchg
(bad)
lock
and
cdq
pop
add
stos
movs
add
hlt
add
xor
aam
cmp
data16
(bad)
xchg
xchg
in
int
repz
sub
ds
xchg
fist
mov
leave
jmp
ins
add
or
inc
add
lds
mov
push
mov
test
je
mov
push
mov
dec
xor
push
(bad)
mov
in
imul
js
outs
mov
mov
adc
dec
mov
cli
ds
stc
inc
xchg
movs
push
cmp
push
mov
popf
adc
mov
sub
mov
push
xchg
lea
dec
pop
pop
pop
addr16
ret
push
iret
test
jne
or
sti
sub
cwde
nop
test
mov
retf
push
mov
and
and
imul
cmc
push
and
mov
int
cld
xor
in
or
dec
add
pop
sbb
icebp
cmp
scas
out
jb
fistp
aam
jecxz
mov
stos
pop
inc
es
(bad)
or
jnp
out
jecxz
jmp
bnd
outs
adc
sbb
dec
jle
les
cmc
not
jns
out
xchg
mov
cmp
jae
add
dec
cmp
mov
sub
push
add
test
repnz
rcl
je
test
mov
imul
popa
mov
push
scas
mov
arpl
mov
hlt
push
(bad)
push
add
(bad)
sbb
sbb
jbe
js
push
test
and
push
xor
sub
adc
stos
stos
or
(bad)
sub
into
cmp
movs
push
push
add
push
adc
xor
mov
dec
jo
sysenter
push
adc
pop
inc
jo
dec
(bad)
outs
mov
sbb
sub
jno
cmp
mov
outs
aaa
lods
mov
(bad)
aaa
ret
test
loope
in
jmp
cmps
mov
mov
adc
cmp
data16
push
gs
mov
in
sbb
mov
xor
retf
rcl
scas
idiv
jmp
mov
icebp
sti
push
jnp
mov
push
add
jno
mov
ret
mov
and
xor
(bad)
xor
pop
jmp
mov
jnp
int
hlt
js
pop
xor
push
xor
sbb
cwde
cwde
dec
loope
jge
sbb
sub
xchg
and
adc
dec
ret
retf
inc
out
jmp
lds
mov
add
iret
stos
jbe
mov
cli
mov
(bad)
add
adc
xlat
adc
inc
and
add
retf
mov
mov
xchg
fidiv
inc
push
into
adc
sbb
add
mov
outs
lahf
fcom
movs
pusha
lahf
dec
dec
jp
xchg
sub
xchg
and
or
xchg
and
sbb
sub
pushf
repz
or
sub
test
nop
cdq
hlt
(bad)
sti
cmp
popf
or
push
retf
jns
imul
test
int
aaa
test
jmp
sub
nop
inc
iret
lods
cwde
pop
lock
inc
adc
inc
bound
jle
(bad)
and
jno
nop
pop
xchg
jecxz
sbb
fs
and
cli
test
in
call
push
(bad)
jo
dec
inc
loopne
je
mov
mov
add
add
scas
leave
push
mov
xchg
push
or
enter
pop
(bad)
(bad)
and
or
push
pop
std
push
mul
je
inc
mov
int3
outs
inc
sbb
pop
pop
daa
pop
inc
ins
sub
popf
pop
cdq
pop
or
xor
idiv
daa
ins
push
inc
dec
push
retf
push
cwde
fwait
mov
and
lds
psrld
aad
fnstsw
call
lods
popf
or
add
repz
pop
fcmovne
dec
sbb
in
dec
jae
jg
cmps
sub
mov
scas
or
add
xchg
mov
retf
jecxz
dec
jo
mov
cli
lahf
push
sbb
push
int
fmulp
in
(bad)
mov
mov
sbb
addr16
pop
dec
push
push
xor
sbb
or
sub
neg
scas
xchg
in
inc
mov
and
adc
(bad)
mov
dec
and
push
cmp
or
cmps
fisub
gs
in
or
fld
push
fistp
rcl
jmp
fbld
mov
mov
pop
sahf
out
mov
das
dec
movs
adc
cmp
inc
jb
scas
or
xchg
mov
dec
sbb
outs
jae
fcomp
in
sahf
data16
ds
add
pop
push
mov
pop
xor
cmp
xor
or
aas
popf
lods
rol
dec
dec
jge
mov
iret
outs
inc
lock
and
add
aas
dec
xchg
pop
mov
and
rcl
sbb
cmps
sub
movs
pop
xchg
sub
mov
popf
ss
mov
lds
test
gs
cmps
xor
cmp
push
fimul
adc
outs
sub
outs
ret
sub
scas
daa
xchg
sub
and
sti
or
popf
xchg
mov
aam
in
(bad)
ficomp
jne
js
inc
mov
lahf
xor
stc
adc
repz
pop
xchg
xor
dec
in
cmp
shl
pop
add
jb
test
jns
cmc
mov
lock
sahf
mov
pop
jle
ja
mov
push
enter
mov
das
xchg
cs
bound
retf
cmp
aaa
jg
sub
jg
xchg
aas
pop
aad
loop
jge
popa
and
add
push
call
sahf
mov
data16
push
dec
sbb
iret
xchg
push
pop
push
dec
sub
xor
inc
popa
lock
in
xchg
push
dec
loope
sub
and
loop
cs
xchg
fisubr
pop
in
or
dec
xor
sbb
jge
sub
add
movs
cmp
mov
sub
test
ds
je
lock
adc
add
fnstsw
push
mov
inc
pop
jmp
inc
cmp
add
inc
bound
pop
jbe
je
(bad)
mov
enter
aas
xor
xor
leave
adc
push
inc
test
or
imul
loopne
scas
pop
sub
inc
retf
mov
mov
nop
add
call
xlat
jg
cmp
std
and
cmp
aaa
pop
cmp
jne
push
lahf
not
(bad)
jg
mov
loope
jmp
xchg
or
test
push
jne
push
bound
pushf
mov
or
lds
xor
mov
out
adc
inc
aad
ds
dec
jne
mov
xor
mov
enter
out
sub
jmp
cli
ficomp
add
pop
stos
ss
push
std
fdivr
jnp
stos
sub
adc
mov
jnp
push
shl
jmp
outs
add
out
or
ins
ret
les
movs
or
jns
retf
nop
sbb
loop
clc
leave
cwde
xchg
push
add
fdivr
lock
and
xor
test
mov
ret
inc
adc
add
pop
pop
adc
pop
push
inc
and
(bad)
push
xchg
into
loopne
ins
leave
loop
arpl
mov
mov
mov
push
enter
ins
or
push
shl
add
inc
xchg
or
or
push
mov
mov
xchg
pusha
mov
mov
mov
imul
add
jbe
jns
retf
xor
pop
(bad)
and
mov
and
mov
cmp
fwait
push
aas
cmp
(bad)
adc
add
popa
mov
sbb
mov
pop
push
add
xchg
(bad)
retf
sub
cmp
loopne
xor
mov
jmp
repnz
xor
push
mov
cdq
scas
inc
aaa
push
mov
ror
sahf
movs
cmc
or
inc
mov
fsub
adc
popw
ins
inc
inc
jle
test
shr
mov
xor
jecxz
gs
out
xor
or
bswap
jmp
out
sub
inc
pushf
sub
out
or
(bad)
call
loopne
jmp
ins
mov
sub
mov
sbb
iret
jecxz
xchg
shl
movs
ja
loopne
push
push
mov
mov
push
xor
loop
nop
cli
aad
(bad)
mov
data16
push
leave
mov
test
in
push
sbb
stc
and
ficomp
loop
shrd
clc
push
repnz
test
push
fld
dec
out
loop
(bad)
push
xchg
sti
xchg
pop
sub
dec
jb
push
nop
jmp
mov
jle
dec
mov
(bad)
stos
retf
stos
pop
imul
adc
sbb
cmp
movs
push
ficom
pop
mov
frstor
mov
dec
and
lock
mov
push
hlt
mov
iret
in
loopne
int
shl
outs
loop
adc
fsub
cmc
adc
cmps
fsubr
cmc
mov
jle
mov
sbb
js
xor
push
jmp
hlt
cwde
jmp
cdq
inc
jmp
adc
stos
jne
mov
fld
xchg
ror
call
xor
sub
ds
scas
and
sbb
add
push
test
cli
shl
inc
lods
mov
push
test
icebp
sub
lods
xchg
cmps
out
add
pop
pop
out
push
out
lods
inc
or
fsubr
jae
sub
mov
movs
push
mov
inc
arpl
scas
out
pop
mov
sahf
(bad)
xor
add
xchg
fcomp
pop
cmps
sbb
in
(bad)
push
icebp
fbld
stc
cmp
sub
retf
push
and
jne
push
ss
test
and
lea
sbb
sub
cs
mov
mov
or
das
and
scas
xor
mov
pop
lods
js
fs
mov
(bad)
(bad)
cmc
outs
adc
aam
cmps
mov
mov
lock
pop
mov
adc
test
dec
dec
pop
inc
adc
ror
ins
jg
fcom
mov
sub
fisubr
int
inc
inc
in
jns
(bad)
pause
les
icebp
in
shl
cmp
sar
xchg
pushf
sub
movs
adc
out
and
mov
mov
cmp
mov
in
je
and
cmp
cmc
ror
aaa
push
out
pop
addr16
std
pop
add
sub
jo
sbb
aas
lea
inc
sbb
xchg
sahf
push
and
dec
std
mov
xlat
in
fidivr
ficom
mov
fcom
mov
jecxz
loopne
jb
jno
adc
mov
dec
fdivr
inc
dec
jle
stos
push
fnsave
out
mov
mov
loop
ja
xchg
sbb
xchg
scas
(bad)
js
ror
ficom
call
mov
mov
or
fisttp
movs
(bad)
fld1
out
icebp
cmps
out
push
sub
dec
je
mov
je
dec
push
(bad)
das
sub
aas
imul
sti
inc
mov
jns
repnz
jb
jmp
into
aaa
mov
daa
pusha
pop
push
jmp
call
jbe
cmp
xchg
mov
das
test
fisttp
cmp
or
jmp
int
push
push
mov
hlt
pop
xchg
lods
movs
jns
arpl
xor
jge
mov
xchg
mov
jmp
mov
push
les
(bad)
(bad)
push
dec
out
es
call
and
mov
push
sar
mov
imul
and
jecxz
mov
(bad)
mov
mov
dec
add
(bad)
jnp
mov
arpl
xor
and
pop
jp
nop
push
pop
mov
jno
inc
das
xor
push
or
cmps
aaa
imul
mov
xor
in
fwait
and
mov
cdq
inc
mov
push
push
jb
mov
mov
pusha
cli
xor
ss
scas
adc
mov
movs
enter
mov
jbe
jp
add
retf
and
mov
jp
rol
lods
or
sbb
adc
dec
sub
daa
xchg
or
or
dec
repnz
sbb
sub
and
pushf
pop
push
shl
adc
std
cmp
call
push
fnstenv
fwait
sahf
jle
cmp
iret
out
sub
int3
jle
ins
imul
and
iret
aam
leave
jo
add
sub
loop
(bad)
pushf
mov
or
push
gs
push
pop
cmps
pop
sbb
dec
jno
cmps
sub
js
retf
mov
ficomp
push
call
shl
test
mov
enter
mov
popf
imul
mov
xor
cmps
rol
xchg
or
or
retf
adc
add
add
push
cld
push
shl
add
loopne
push
ds
push
sahf
cmp
popf
jns
jecxz
push
add
bound
lods
out
sub
adc
pop
je
call
jecxz
aam
test
fs
ror
sar
pop
lock
jge
loop
mov
(bad)
imul
jne
xchg
inc
mov
cmps
in
movs
ja
int3
and
mov
mov
outs
mov
pushf
pop
call
sub
push
or
mov
push
call
sbb
push
sti
adc
xchg
xchg
xor
dec
mov
into
cs
cli
sub
cmps
fcomp
pop
pop
retf
(bad)
imul
out
ret
pop
loop
xchg
cmp
retf
sbb
call
(bad)
fstp
jns
or
inc
popf
iret
jmp
adc
aas
jge
js
jg
(bad)
ds
fild
fxch
mov
inc
xor
call
pop
(bad)
cmps
xchg
and
push
adc
cmp
cmp
popa
jnp
mov
mov
dec
mov
movs
push
pop
out
int3
fimul
mov
xchg
mov
mov
inc
scas
dec
mov
jnp
fwait
popa
sbb
loop
and
ret
mov
adc
inc
stos
mov
or
mov
mov
add
jge
jbe
xor
add
std
xchg
push
dec
jecxz
rcl
sar
mov
pop
call
loope
std
mov
je
adc
xchg
hlt
mov
bound
outs
pusha
fsubr
adc
push
cdq
neg
and
rcr
dec
cmp
test
scas
imul
cs
dec
sub
outs
add
fcom
leave
inc
repnz
xor
xlat
in
nop
pop
stc
cmp
xor
fcom
mov
es
out
and
lahf
ja
cmp
arpl
mov
out
outs
push
dec
and
stos
pusha
retf
mov
popa
sub
rcl
dec
and
jl
xchg
mov
int
jp
pop
leave
shl
aad
(bad)
mov
jmp
xor
pop
fs
or
cmps
pop
popa
mov
or
int3
pop
mov
pop
jge
sbb
pop
inc
lea
inc
rcl
rcl
push
mov
cli
test
add
in
dec
xchg
jmp
clc
adc
int
dec
test
inc
imul
ja
test
ins
imul
mov
iret
idiv
adc
popa
fidivr
lods
mov
mov
and
push
mov
pop
mov
mov
pop
cmp
add
neg
jle
pop
fcom
cmc
dec
enter
jnp
jge
push
or
rol
sub
add
push
dec
sahf
ins
mov
js
dec
xor
mov
cmp
aas
cwde
and
xor
sar
test
push
repz
xchg
and
pop
cld
mov
fisubr
xchg
daa
sti
and
fdivr
aaa
enter
dec
xchg
mov
in
xlat
movs
pop
cmc
jg
pop
cmp
inc
std
popa
rol
out
in
mov
xchg
xor
xchg
ds
jne
in
retf
test
cmp
adc
dec
ins
clc
adc
jo
xor
popa
out
ss
call
xchg
inc
retf
test
add
sbb
test
cli
loopne
in
sbb
in
mov
jge
and
aas
add
mov
cmp
fldenv
movs
aaa
pop
sti
push
mov
out
xor
mov
dec
lea
dec
fldcw
cmps
xchg
mov
shl
cmp
rcl
rcr
not
sub
sub
sbb
push
cmp
adc
sbb
dec
repnz
dec
inc
cmps
jecxz
sub
push
push
xchg
mov
xlat
(bad)
and
push
cwde
cmps
mov
pop
cli
add
dec
mov
fisub
scas
test
call
test
pop
cmp
sar
rcr
jnp
movs
adc
fcomp
cmps
xchg
jle
push
popf
dec
mov
mov
pop
fst
xor
inc
fist
cmp
stc
push
cmps
xchg
mov
mov
add
or
sub
mov
in
aas
dec
pcmpeqd
shl
dec
xlat
mov
fwait
mov
in
leave
stos
jne
fsub
and
xor
push
jnp
in
lods
jmp
daa
stos
shr
mov
mov
lods
inc
pop
(bad)
nop
push
je
clc
test
mov
cmp
movs
inc
je
out
sub
shr
jnp
and
addr16
inc
add
shl
movs
(bad)
pushf
arpl
sub
ins
or
retf
sub
push
adc
pop
mov
std
and
(bad)
jns
xor
pop
add
mov
aas
inc
pop
dec
pop
mov
adc
test
cmp
rol
pop
pop
and
into
push
ret
xchg
or
hlt
pop
mov
out
push
lds
jnp
xlat
stos
mov
mov
js
adc
mov
add
mov
mov
call
jmp
push
push
mov
lock
and
adc
and
in
mov
in
test
imul
dec
mov
dec
cwde
mov
pcmpgtb
adc
icebp
cmp
cmp
icebp
cdq
sub
mov
add
dec
xor
or
jecxz
mov
jns
and
mov
add
rol
jmp
call
pusha
adc
(bad)
ja
mov
mov
fdiv
jmp
aas
je
xor
xchg
xchg
scas
mov
ss
stos
dec
jle
ret
mov
jne
xlat
shl
imul
mov
jno
jne
sub
or
cmp
ficomp
push
inc
fidiv
pop
xor
jns
in
inc
mov
aaa
aaa
jle
test
inc
sub
sbb
dec
aaa
pop
cmp
xchg
push
add
xchg
rcl
(bad)
and
dec
xchg
cli
mov
xchg
aaa
pop
mov
push
push
mov
dec
push
inc
cmp
shl
stc
dec
xchg
inc
xchg
push
pop
or
(bad)
pop
mov
sbb
push
xlat
dec
push
cmp
div
mov
ds
leave
fisttp
std
xchg
gs
rcl
(bad)
mov
(bad)
iret
pop
push
add
in
ss
jo
outs
sar
mov
scas
call
mov
sar
ja
cmp
into
mov
push
jae
enter
cmp
test
adc
mov
arpl
xchg
push
sahf
lahf
jecxz
adc
cmc
stc
out
dec
pop
mov
pushf
jmp
xchg
movs
addr16
jge
cmp
test
ret
and
dec
or
loope
dec
lea
loopne
cdq
pop
mov
cdq
jmp
inc
fcomp
add
(bad)
adc
mov
adc
nop
mov
clc
gs
aad
lock
out
mov
xchg
sub
dec
(bad)
xor
out
jbe
test
jmp
pop
sbb
test
shl
cld
mov
jle
dec
xor
in
jo
mov
push
inc
jmp
xor
ficom
push
mov
mov
cmps
in
push
getsec
jmp
jle
pushf
mov
mov
inc
and
add
ror
sub
scas
xchg
mov
into
sar
xchg
je
jecxz
aaa
cmp
lods
or
xchg
add
add
dec
leave
ss
test
mov
test
shr
jns
bound
scas
xchg
jecxz
popa
repnz
pushf
sti
data16
mov
pushf
adc
mov
pushw
inc
inc
or
mov
mov
gs
add
loopne
repz
adc
sub
sbb
(bad)
test
xchg
cmps
std
imul
push
pushf
lods
int3
(bad)
stos
scas
lods
xchg
inc
nop
mov
fcom
jnp
jg
cmp
test
fdiv
xor
call
jle
mov
mov
jg
jecxz
cmps
aad
sbb
movs
mov
and
sar
mov
push
movs
cmp
xchg
and
sahf
and
inc
xchg
sub
mov
gs
in
retf
mov
sub
out
test
(bad)
or
dec
retf
cmps
sbb
inc
movs
rcr
int
cld
mov
add
jmp
retf
mov
dec
test
adc
test
mov
push
xor
add
lods
repnz
xchg
mov
mov
test
ret
retf
push
inc
push
mov
je
or
adc
mov
lods
outs
or
hlt
add
cmps
and
inc
mov
or
dec
lea
jecxz
add
adc
hlt
nop
pop
add
xchg
(bad)
ss
pop
xor
dec
neg
lea
pop
aaa
ficomp
dec
int3
mov
mov
xor
fcom
and
sub
shl
out
xor
rcr
mov
push
fst
(bad)
xchg
cmp
adc
(bad)
mov
repnz
mov
mov
xchg
test
mov
enter
or
movs
je
movs
aas
mov
push
add
cmp
es
stos
shl
repnz
jmp
adc
adc
(bad)
and
xchg
sub
xchg
add
jno
aad
ss
xor
jmp
in
shl
push
and
cmp
sub
ret
test
xchg
nop
popa
dec
push
jo
mov
mov
cmp
fcomip
(bad)
es
jmp
sbb
inc
add
mov
stos
inc
xor
(bad)
xchg
(bad)
mov
and
rcr
mov
mov
mov
loope
sbb
push
mov
inc
ss
sbb
jno
jnp
shl
dec
pop
(bad)
add
pop
inc
int
test
fiadd
jge
sti
pop
cmps
dec
dec
imul
out
cmp
sbb
(bad)
jge
and
jge
iret
adc
mov
mov
xchg
adc
add
dec
pop
push
gs
aam
push
jp
cmp
and
sar
rcr
mov
stos
mov
mov
shl
sub
add
cmp
push
or
es
or
call
je
icebp
push
test
inc
hlt
dec
or
iret
sub
dec
pop
repnz
(bad)
sbb
cmp
cdq
pop
adc
sbb
das
loopne
adc
sbb
fidiv
add
movs
and
mov
mov
mov
stos
cmps
loop
jns
movs
push
lods
(bad)
(bad)
in
or
clc
mov
pop
mov
das
inc
rol
pop
inc
into
pop
loope
dec
inc
shl
fs
pop
mov
pop
fdivr
dec
mov
dec
es
mov
shr
jns
mov
bound
jecxz
sub
nop
mov
leave
jns
jne
pop
retf
dec
and
mov
aas
xor
dec
pusha
in
xor
in
cmp
push
pop
inc
push
xchg
xor
dec
lea
adc
and
not
call
cld
sub
pop
out
in
into
mov
(bad)
jns
fadd
(bad)
inc
add
out
pop
in
lods
cld
inc
inc
(bad)
call
sbb
enter
mov
jmp
data16
pop
jnp
shr
pushf
inc
in
push
iret
pop
cmp
jb
xor
dec
mov
sbb
push
push
retf
(bad)
pop
xchg
inc
pop
mov
xchg
dec
rol
dec
jmp
inc
jns
inc
jmp
xchg
push
add
les
jecxz
jae
js
sub
cmp
fs
fwait
cmps
push
jns
mov
and
clc
cmc
das
jmp
pop
js
stos
push
add
dec
or
js
pop
push
mov
retf
pop
mov
pop
mov
mov
mov
sub
call
pop
mov
test
inc
inc
aam
ins
addr16
std
dec
(bad)
ss
aam
and
jge
mov
fst
lock
dec
dec
repz
jl
dec
or
jno
outs
sbb
inc
pop
inc
pop
ret
ror
and
push
sti
adc
sbb
dec
scas
pop
js
mov
sbb
fidivr
nop
inc
movq
in
jp
fnstcw
fadd
ds
jmp
mov
inc
movs
push
test
stos
xchg
outs
dec
int
add
inc
mov
inc
inc
ror
shl
ss
(bad)
nop
shl
sub
pop
daa
out
xlat
ins
jp
into
mov
and
inc
and
(bad)
stos
rdtsc
xor
dec
ins
add
jo
mov
pop
outs
sub
es
jbe
mov
xor
add
popa
stos
jbe
cmps
sbb
mov
pop
outs
pop
dec
and
xchg
mov
test
pusha
xor
sbb
mov
jne
gs
push
std
lods
mov
cmc
lahf
dec
cdq
into
mov
push
xchg
adc
js
les
mov
xor
fmul
sub
jno
mov
daa
test
mov
jno
mov
jecxz
sub
aam
ror
push
mov
mov
shr
mov
lahf
mov
(bad)
movs
sub
mov
push
and
and
cmp
nop
jne
jbe
fnstsw
nop
rcl
and
mov
dec
mov
mov
sar
jae
daa
mov
mov
fidiv
inc
cli
sub
(bad)
int3
mov
jl
jecxz
sub
test
fisttp
cs
sbb
out
or
sub
dec
stos
icebp
cmc
fld
movs
push
adc
sahf
ret
jl
(bad)
mov
cmp
add
(bad)
cwde
int3
aas
sti
(bad)
mov
aam
(bad)
call
les
mov
push
sti
mov
repz
adc
cmp
pop
push
inc
fistp
in
dec
loop
inc
and
inc
pop
dec
mov
into
repz
adc
repz
mov
rol
xlat
mov
xchg
pop
ins
int
ins
loope
cwde
ins
pop
inc
push
das
mov
stc
sub
iret
mov
mov
in
cdq
ins
sub
aas
addr16
push
pop
aad
scas
push
mov
fist
cdq
iret
fs
inc
mov
lods
pop
dec
mov
rol
icebp
xor
call
mov
(bad)
rep
daa
mov
repnz
pop
sub
ret
in
ja
pop
mov
sub
add
das
jb
sbb
mov
stc
outs
cmp
(bad)
aas
cmps
pop
push
mov
cmp
jl
shr
les
pop
xchg
pop
mov
dec
sub
sbb
mov
and
clc
and
fs
stc
sub
mov
jo
rcr
ds
and
fisttp
add
jge
xor
pop
push
xor
cmc
loopne
xlat
add
(bad)
xor
mov
and
icebp
ins
lods
movs
pop
gs
gs
(bad)
cmp
add
lods
pusha
dec
cmp
pop
add
dec
div
mov
mov
xchg
fld
cmp
push
aaa
ret
sub
clc
out
fwait
in
cmp
dec
mov
inc
pop
pop
xchg
mul
mov
cmp
mov
jae
push
and
daa
mov
clc
push
dec
pop
test
mov
rcl
icebp
jge
leave
sub
outs
push
mov
mov
cli
sti
out
inc
jecxz
in
push
mov
retf
inc
xor
add
out
inc
add
dec
sub
and
cwde
cs
fld
in
ja
ja
jecxz
lods
mov
aam
jns
xchg
and
cmps
stos
call
ins
mov
test
push
push
sbb
fdiv
stc
mov
sbb
popa
test
inc
push
jns
ins
add
fnstcw
(bad)
sub
lods
jb
test
xchg
adc
leave
pop
cld
xor
or
aas
inc
and
mov
enter
not
scas
pop
out
add
scas
movs
mov
cmps
test
std
sbb
mov
inc
mov
inc
mov
jnp
jmp
popa
pushf
sbb
cs
mov
in
popf
push
mov
ror
nop
stos
xchg
(bad)
fdivp
or
xchg
and
mov
add
cld
out
iret
pop
mov
mov
xchg
das
push
mov
(bad)
xchg
pushf
retf
and
adc
shr
sti
adc
mov
daa
pusha
popa
ret
pop
add
into
fdivr
and
mov
or
sub
and
push
cmc
adc
jmp
sub
sub
ficom
mov
movs
daa
call
cmp
sbb
adc
inc
cmp
icebp
retf
test
out
dec
xchg
stc
fcomi
rcl
out
ja
dec
sbb
iret
(bad)
icebp
add
pop
addr16
push
inc
test
cwde
test
push
loopne
jae
xchg
fucom
cmp
or
cmp
pop
cs
pop
mov
cmp
repz
and
into
jmp
ja
shr
xchg
daa
dec
mov
jno
ds
into
scas
leave
into
and
adc
dec
aad
test
push
ins
iret
fild
mov
fsubr
shr
pop
les
hlt
lock
repnz
ja
jecxz
in
mov
sub
adc
dec
imul
or
imul
and
test
mov
dec
xchg
cwde
pop
clc
jecxz
outs
mov
gs
jb
data16
jnp
push
mov
xor
xor
or
adc
pop
cdq
push
(bad)
movs
jle
xchg
fs
nop
pop
(bad)
pop
mov
fidiv
push
retf
cmps
stc
lods
cmp
inc
outs
ret
ror
les
leave
inc
pop
das
jbe
dec
(bad)
and
mov
mov
or
mov
sub
cmc
mov
icebp
fistp
inc
inc
fidiv
jae
adc
push
cld
pop
cdq
pop
mov
sub
dec
sbb
mov
fimul
repnz
mov
out
inc
retf
jmp
dec
cmps
sub
sub
jg
lock
jge
loopne
arpl
hlt
sub
or
mov
and
xor
dec
cmp
jle
or
or
daa
push
bound
sbb
push
cli
xchg
call
cmp
pop
scas
cs
mov
bound
xchg
jno
in
shl
jno
push
bound
fild
and
dec
retf
and
dec
es
lahf
sbb
sahf
(bad)
sbb
sub
imul
shl
xchg
pop
fmul
mov
test
dec
outs
test
mov
dec
mov
pop
dec
lods
xor
inc
outs
xor
fisub
jb
or
cmp
xor
pop
adc
clc
and
and
lds
push
test
(bad)
neg
and
fadd
sub
pop
jns
cmp
addr16
push
push
xchg
jae
movs
dec
movs
gs
mov
std
int3
mov
adc
cmp
or
cmp
mov
xor
lahf
mov
xor
sbb
shl
cmp
inc
scas
jp
sub
xchg
js
ins
xor
scas
into
lods
aam
scas
cmps
pop
add
mov
add
mov
mov
mov
xchg
sub
inc
sbb
jb
scas
int3
dec
loopne
repz
push
fbld
push
pop
or
jge
outs
mov
fbstp
mov
call
out
fisttp
movs
imul
xchg
jmp
in
add
and
xchg
mov
(bad)
adc
pop
call
sub
push
jmp
push
sbb
jle
fsubrp
fld
push
mov
popa
lds
psubd
aaa
lea
mov
out
call
pop
fadd
stos
jns
shl
bound
sbb
gs
shr
or
es
test
int
adc
add
inc
sub
mov
popa
in
push
xchg
(bad)
jp
add
nop
xor
push
nop
les
loopne
mov
bound
inc
jmp
cmp
mov
and
jbe
sbb
and
popa
dec
push
pop
mov
xor
fisub
adc
shl
sub
sbb
clc
int3
sti
clc
shr
mov
push
and
in
in
bound
jecxz
int
adc
pop
test
bound
aas
sti
repnz
adc
xchg
in
xchg
movs
or
add
inc
sbb
cmp
scas
(bad)
fimul
xchg
cmp
dec
add
push
sub
lock
or
aam
adc
push
pop
fdiv
pusha
(bad)
int
sbb
add
jp
pop
pop
(bad)
cmp
cmp
sti
sbb
(bad)
loopne
adc
push
imul
leave
shl
cmp
mov
div
out
mov
xchg
cmps
lea
push
jo
xchg
inc
in
movs
stc
repz
int
inc
arpl
lds
mov
pop
mov
jl
mov
fmul
call
les
dec
push
fst
sub
cld
mov
call
pop
xlat
data16
dec
or
out
pop
pop
mov
jno
repnz
dec
imul
retf
repnz
add
fimul
and
daa
dec
dec
pop
adc
sbb
lods
data16
push
pop
xor
jl
mov
ror
mov
popa
fs
pop
sub
cmc
xor
call
sti
mov
add
xchg
pop
xchg
pop
nop
je
xchg
mov
jle
cmp
std
jge
adc
nop
ret
rol
cdq
pop
data16
mov
sub
push
lds
cld
stc
cmp
cmp
xchg
add
rol
adc
test
(bad)
in
addr16
sub
sbb
jp
je
or
(bad)
std
scas
push
sbb
add
enter
push
add
push
rcl
sbb
loopne
dec
xor
scas
fadd
cmp
shl
xchg
fisubr
xchg
das
(bad)
mov
mov
or
fs
test
sub
sbb
loop
aaa
xchg
mov
xchg
mov
mov
jb
inc
sub
pop
inc
mov
aaa
xor
xor
push
dec
adc
mov
or
cmp
adc
lods
jae
pop
gs
lods
mov
ins
adc
(bad)
aam
addr16
popa
ret
jl
inc
in
push
inc
push
movs
push
pop
xor
or
mov
xor
cdq
aas
jp
and
nop
xchg
aas
fidiv
retf
clc
das
or
or
fcom
push
mov
lea
dec
jp
fstp
ret
xchg
enter
or
mov
shl
lahf
sbb
js
dec
adc
mov
(bad)
push
xchg
cld
mov
or
loopne
jns
shl
aad
popa
popf
jge
jge
movs
jecxz
(bad)
loope
and
lock
and
ja
aaa
and
mov
sub
push
jmp
pop
mov
fsub
jle
movs
cmp
xchg
or
das
xchg
push
aad
pop
pop
jmp
shl
fsubp
sbb
dec
mov
mov
jb
sar
iret
les
pop
sbb
out
dec
cmp
in
pop
or
(bad)
scas
ficom
outs
mov
pushf
cmp
inc
cmp
(bad)
out
xor
mul
movs
jg
mov
jo
int3
sbb
ins
mov
sbb
xor
lahf
imul
neg
jb
and
pop
and
adc
xchg
adc
and
pop
ins
mov
stos
imul
div
cdq
inc
popf
lock
fmul
repnz
aas
mov
xor
sub
xchg
sbb
dec
push
xor
mov
xchg
das
repnz
out
sub
pop
sar
mov
push
mov
mov
sub
sbb
inc
xor
and
fisttp
ins
retf
xor
jo
add
loope
or
pop
aad
repnz
xchg
push
jmp
jge
(bad)
les
fdiv
xchg
xchg
mov
ins
dec
(bad)
test
xchg
xlat
adc
jle
sub
sbb
xchg
je
nop
out
xor
je
sar
pop
push
dec
cwde
dec
cmp
xchg
loop
cmp
test
jmp
and
dec
cwde
cmp
jbe
cmp
sub
mov
std
add
in
lods
stos
lds
or
in
xor
ins
(bad)
lea
movups
add
push
push
xor
imul
xor
retf
xchg
les
add
push
fdivr
pusha
mov
mov
cmp
mov
add
sbb
dec
push
cmps
mov
lods
retf
mov
cdq
mov
xchg
sbb
dec
mov
test
dec
and
inc
lock
sar
ss
mov
pop
fnsave
mov
or
dec
pusha
scas
call
bound
dec
mov
retf
adc
mov
(bad)
mov
mov
jmp
mov
movs
bound
xor
fcom
pop
push
aas
xor
in
test
xor
cmp
jp
pop
dec
lahf
sbb
repz
iret
mov
xor
xor
enter
test
fisttp
dec
or
mov
jge
in
or
adc
pusha
nop
cmp
sub
xor
push
loop
sub
dec
std
call
stc
pusha
aad
ins
call
call
mov
push
mov
xor
mov
dec
arpl
or
adc
and
rcl
stos
dec
add
rcl
ret
sbb
fstp
rcl
mov
lea
jno
and
js
xchg
xchg
dec
dec
call
movs
inc
(bad)
sub
jmp
pusha
imul
xchg
scas
fadd
lods
or
pop
pop
out
xor
ret
fist
aad
adc
and
jp
or
push
sbb
sub
pop
pop
das
add
xor
inc
jmp
and
bound
xor
shl
mov
adc
jmp
retf
xlat
(bad)
into
ins
cmp
push
mov
int
inc
das
push
jmp
mov
push
es
add
and
icebp
jno
sub
wrmsr
sub
or
inc
adc
or
ret
sbb
add
mov
movs
cs
add
pushf
or
mov
dec
dec
sub
shl
mov
daa
pop
scas
out
and
fistp
add
push
scas
repnz
imul
adc
inc
mov
and
jp
sub
dec
inc
out
rol
icebp
movs
ss
push
movs
loop
jns
and
inc
and
pop
xchg
xchg
mov
test
addr16
mov
and
in
cs
sar
mov
xlat
xchg
mov
mov
sub
pop
test
pop
mov
xor
icebp
mov
call
call
adc
push
push
popf
cmps
(bad)
call
pop
xchg
outs
push
stos
inc
jmp
cmp
outs
push
inc
ror
(bad)
loop
dec
jmp
push
and
sbb
mov
clc
pop
and
test
xor
call
mov
ror
jo
and
leave
pusha
and
and
into
add
ror
mov
push
aam
mov
push
mov
dec
push
mov
aad
xor
inc
icebp
or
in
es
int3
icebp
xor
mov
mov
inc
dec
jmp
jb
ins
call
adc
cld
xlat
pushf
cmp
out
aad
cmp
mov
push
sti
stos
inc
xchg
xchg
fdivr
fdivr
xor
repz
stos
pop
fbstp
push
jne
dec
leave
movs
adc
sub
(bad)
sbb
mov
jae
in
leave
jge
sub
cli
sar
push
jl
scas
mov
add
shr
jle
outs
sub
mov
out
out
jge
adc
fs
sbb
(bad)
fdiv
fstp
cmp
cmp
out
dec
and
mov
inc
cwde
lahf
sub
pop
adc
int3
mov
xchg
scas
data16
push
rcr
cmp
add
fcom
pop
cmp
neg
mov
in
inc
inc
mov
test
lods
mov
mov
in
ret
test
call
into
sbb
jge
je
in
jp
(bad)
(bad)
mov
mov
lahf
mov
jmp
jbe
lahf
ror
cmp
(bad)
xlat
cld
add
cmp
or
sbb
out
xor
pop
mov
mov
(bad)
or
jae
mov
rol
in
or
(bad)
stc
and
xchg
jo
inc
mov
inc
mov
jno
jae
xor
sahf
jecxz
cld
pop
mov
push
jno
sub
into
xor
scas
jmp
xchg
xchg
lea
in
(bad)
outs
dec
mov
adc
out
in
outs
sub
inc
and
xchg
mov
aad
mov
lea
jecxz
push
sbb
test
enter
push
push
movs
jmp
xchg
fdiv
mov
dec
push
and
es
icebp
jge
in
imul
call
inc
mov
aam
adc
push
scas
push
std
pop
dec
mov
jecxz
aas
pop
mov
cdq
add
shr
aas
test
fadd
dec
mov
mov
mov
(bad)
nop
jecxz
sub
sub
cmps
pop
fwait
(bad)
or
inc
add
in
jl
cdq
icebp
push
and
lahf
cmc
add
pop
jg
or
lods
lds
xor
ins
int
jmp
nop
mov
or
leave
les
repnz
ds
xor
imul
mov
iret
aad
stc
js
dec
fisubr
cmp
jne
idiv
sti
add
cmp
ret
pop
repz
test
xchg
adc
mov
scas
push
pop
jecxz
add
clc
mov
fsubr
cld
cmp
idiv
jne
mov
xchg
mov
lahf
pop
outs
inc
clc
nop
dec
pop
xchg
clc
enter
call
pop
pop
pop
sub
inc
repz
sbb
or
adc
jnp
icebp
call
stc
popf
mul
dec
and
mov
push
into
repz
lock
sub
js
push
inc
push
repz
jp
pop
sub
fstp
jle
inc
mov
mov
out
nop
loope
stos
lock
loopne
into
pop
mov
inc
in
mov
in
std
inc
(bad)
xlat
mul
rol
fsubr
pushf
sub
mov
push
jno
in
pop
shr
mov
mov
and
pop
and
stc
mov
and
mov
and
cmps
out
pop
sbb
dec
mov
stc
sbb
sbb
or
inc
iret
loopne
cld
lods
adc
ret
adc
jmp
ss
cmc
in
stos
push
(bad)
mov
add
lock
loope
jmp
and
mov
outs
lods
sbb
xlat
fisttp
inc
test
add
or
pop
dec
dec
xchg
cwde
xchg
jb
rcl
(bad)
test
stc
dec
sbb
outs
rol
fdivr
push
mov
sbb
jecxz
ret
jp
push
rol
(bad)
sub
test
sbb
mov
adc
gs
gs
and
mov
push
jge
add
adc
inc
test
dec
or
in
nop
movs
sub
int
sahf
dec
mov
in
call
sbb
push
lea
xchg
push
popf
push
sub
sbb
push
sub
or
shl
dec
test
mov
pop
mov
inc
enter
mov
and
inc
js
inc
dec
xchg
ror
rol
(bad)
mov
ror
xchg
sbb
retf
mov
xor
test
nop
movs
and
add
(bad)
xchg
add
cmps
xchg
pop
in
adc
or
inc
ins
test
jmp
ret
cld
xor
loope
pop
pop
aam
int
inc
dec
cmc
test
mov
jno
jno
mov
dec
call
jl
out
xor
xchg
aas
arpl
cmp
lods
cmp
sub
test
xchg
mov
sbb
cmp
cli
fdivr
imul
scas
jno
pop
mov
push
xor
mov
ins
ficom
lea
cdq
push
adc
gs
daa
lea
jl
mov
nop
fld
mov
mov
sub
or
dec
test
lds
adc
sub
xlat
and
leave
test
ficomp
call
outs
jno
adc
push
pop
cli
pop
mov
cmc
xlat
mov
cmp
xor
push
dec
cmp
out
mov
movs
cld
xchg
gs
mov
popf
dec
in
jecxz
jecxz
push
or
mov
test
(bad)
lods
inc
and
mov
ret
inc
inc
shr
jb
adc
gs
call
xchg
cmp
jmp
cmp
cli
dec
mov
xchg
inc
shr
add
popa
or
shl
adc
test
dec
in
push
inc
jmp
mov
cli
in
pusha
test
mov
int
mov
inc
mov
imul
adc
jecxz
pop
movs
fwait
mov
inc
fnstcw
(bad)
cwde
icebp
mov
aas
ins
movs
mov
fwait
mov
daa
xchg
push
bound
push
pop
jae
jmp
rcr
(bad)
rcl
mov
lods
fdiv
jecxz
dec
inc
xchg
xor
cmp
adc
mov
xchg
pushf
ror
(bad)
mov
xchg
and
mov
scas
adc
call
push
push
scas
jbe
loopne
retf
push
aas
cmp
enter
pop
stc
push
push
loopne
xor
xchg
(bad)
mov
push
mov
push
push
mov
lds
jmp
int
stos
mov
mov
cmp
test
test
arpl
push
pop
adc
retf
jle
clc
sub
sbb
mov
jbe
add
test
aad
pop
xchg
adc
movs
movs
mov
shl
icebp
ret
loopne
xchg
ins
xchg
push
lahf
repnz
mov
out
xor
dec
test
mov
stc
test
dec
out
aaa
repnz
ss
leave
cmp
call
stc
in
adc
mov
push
jmp
stos
test
lea
mov
loope
push
imul
sbb
sbb
mov
test
adc
inc
test
pop
(bad)
pop
dec
int
bound
(bad)
hlt
and
mov
adc
jno
push
mov
xchg
pop
iret
cmp
movs
jno
(bad)
stos
mov
(bad)
ret
jmp
and
ins
stos
cmp
sub
mov
nop
pushf
push
ss
sbb
mov
pop
cmp
fdivr
and
call
mov
dec
fwait
dec
lahf
xchg
mov
cmp
es
xor
div
out
(bad)
xchg
sti
inc
(bad)
sar
jae
into
mov
in
inc
xor
mov
add
mov
outs
daa
jl
mov
xor
mul
daa
and
aam
pop
xor
and
inc
xlat
jmp
lock
inc
cld
mov
jl
fs
xchg
mov
mov
inc
dec
dec
push
inc
outs
pop
test
xchg
imul
sti
mov
adc
dec
fsub
adc
dec
cmp
push
jb
mov
ins
cmp
in
ins
sub
or
loopne
pusha
mov
jnp
fidiv
and
pushf
adc
sub
dec
js
fwait
inc
push
adc
inc
js
call
mov
fs
cwde
inc
into
int3
push
rcl
inc
mov
and
mov
cmp
adc
jl
mov
imul
test
das
int
adc
adc
(bad)
test
inc
mov
push
fst
pop
movs
stc
mov
ds
pop
sub
mov
lods
je
jp
add
push
sbb
mov
les
ret
sbb
test
inc
adc
cli
cmps
in
add
push
movs
xor
cmp
push
and
push
mov
lock
movs
jp
inc
cli
or
mov
lea
push
push
movs
xchg
push
sar
xchg
add
ficom
addr16
jle
add
mov
mov
(bad)
mov
sbb
xchg
and
iret
mov
(bad)
sbb
fnsave
addr16
enter
mov
push
rcl
stos
cmp
mov
ficomp
or
lods
jge
stos
xchg
iret
popf
add
jnp
ret
dec
sub
ins
push
jecxz
fimul
xchg
dec
retf
inc
push
push
je
pusha
xchg
pop
adc
xchg
xchg
lock
dec
rol
cmps
leave
jo
mov
data16
test
jo
loopne
mov
add
mov
jno
mov
xchg
xchg
xchg
add
and
and
mov
stos
fs
add
xor
in
mov
iret
int
sbb
hlt
mov
mov
push
mov
dec
adc
(bad)
sbb
xchg
add
cdq
lahf
dec
mov
dec
ror
in
mov
xchg
cs
rcr
adc
adc
push
and
add
add
gs
jmp
gs
xor
dec
xchg
and
mov
rcl
mov
jecxz
inc
pop
dec
mov
xchg
add
and
push
retf
and
pop
sub
mov
inc
js
je
fistp
fcom
ss
push
mov
add
mov
gs
pop
mov
in
rol
xor
mov
es
je
dec
xor
xor
xor
loopne
pop
pop
fadd
scas
in
std
movs
sbb
jo
dec
movs
test
ficomp
and
sub
sub
sbb
or
adc
jno
adc
fucomip
push
inc
mov
dec
inc
sub
jle
mov
jp
jge
cmp
sbb
jg
sub
sbb
imul
retf
loope
loop
ret
xchg
mov
mov
pop
push
jb
add
jle
pushf
scas
popf
or
es
sub
mov
pop
inc
sub
sub
lds
iret
shl
bound
jge
mov
xchg
pop
dec
dec
sbb
and
aaa
mov
inc
aam
dec
call
mov
pop
jb
mov
mov
out
icebp
jbe
pop
inc
pop
ds
mov
sti
pop
mov
fwait
clc
mov
and
fidiv
pop
push
aaa
sti
sub
push
es
loope
cmp
cdq
jno
dec
xchg
ret
jb
inc
pop
mov
aad
fidiv
jmp
mov
sar
dec
mov
mov
movs
pop
outs
dec
pop
sbb
mov
bnd
dec
les
lods
test
in
adc
mov
sub
mov
jge
shr
sti
jge
and
cli
mov
(bad)
jne
in
lahf
ja
mov
retf
xchg
es
xchg
nop
daa
in
bound
mov
aas
rcr
test
xchg
xor
adc
xchg
ret
pop
or
dec
cwde
xchg
xor
pop
ret
(bad)
push
into
jno
and
imul
and
shl
loopne
bound
pop
pop
hlt
jb
or
(bad)
arpl
les
pop
rcr
or
jmp
sti
push
jecxz
jo
imul
sub
fld
dec
jmp
inc
sti
push
stos
sti
add
mov
cmp
data16
loop
adc
xchg
adc
test
fistp
cld
and
adc
mov
je
jmp
mov
and
push
mov
and
jb
test
lds
jo
mov
sub
jmp
xchg
sub
xor
xor
xchg
ret
pop
or
es
pop
lods
lods
sub
pop
lods
lods
das
xor
lods
lods
xor
lods
sti
aam
das
pop
dec
jno
mov
jp
adc
repz
cli
mov
in
idiv
mov
(bad)
push
out
or
inc
dec
jl
stc
pop
(bad)
push
mov
cmp
(bad)
jl
aam
ret
nop
adc
xchg
(bad)
ins
in
pop
add
hlt
xor
fld
lea
cwde
ja
(bad)
xchg
xchg
lods
inc
xchg
int
lods
adc
inc
ja
outs
in
imul
enter
xchg
gs
sbb
sub
xchg
scas
pusha
ret
xor
sub
add
jge
in
scas
push
pop
sub
push
and
adc
inc
cwde
xchg
ins
test
mov
pop
stos
lods
mov
jge
lea
gs
jmp
pop
aam
cmp
xor
mov
mov
imul
lea
jg
pop
pop
imul
dec
cdq
push
es
les
adc
mov
cmps
mov
push
data16
pop
ins
add
cdq
add
popa
call
cdq
imul
out
dec
push
aaa
imul
pop
adc
dec
push
push
les
mov
(bad)
fcmovnb
ds
sar
retf
mov
xor
cwde
enter
jmp
pop
mov
data16
mov
jg
or
dec
stos
adc
mov
int
retf
mov
div
or
xor
lods
(bad)
pushf
cmc
imul
mov
xchg
cdq
rcr
xor
std
xchg
lea
data16
in
out
pushf
aam
ret
cmp
lods
cmp
not
sub
(bad)
xchg
adc
pop
or
mov
mov
xor
add
nop
jae
push
sub
stos
jl
mov
cmp
call
outs
std
in
outs
mov
js
sahf
and
popf
pop
push
in
dec
fwait
jne
mov
clc
stos
stc
inc
or
push
inc
stos
repz
shr
jg
push
fbstp
(bad)
dec
test
jg
in
mov
xor
cmp
dec
jp
test
push
mov
mov
sbb
jne
dec
jmp
mov
imul
inc
mov
retf
cmp
mov
test
fs
jmp
int3
mov
loop
mov
inc
jne
scas
jmp
lock
std
aas
push
sbb
add
and
bound
mov
pop
adc
pop
mov
mov
lahf
dec
jb
out
jmp
jns
dec
push
jb
ins
add
aad
inc
and
(bad)
addr16
das
(bad)
int3
add
sub
jnp
pop
dec
pop
ds
and
mov
mov
jno
inc
push
(bad)
xor
fimul
jae
lahf
fisttp
or
ret
repnz
jns
enter
popf
xchg
test
std
fs
xchg
dec
ds
imul
rcr
inc
(bad)
jno
popa
rcl
cmp
or
aad
mov
push
aad
mov
or
cmps
pop
leave
jmp
leave
daa
mov
push
outs
mov
je
or
jmp
ret
aad
fs
xchg
ret
cld
or
and
xor
in
mov
cli
sbb
out
jbe
mov
bound
in
or
sbb
call
push
xchg
sbb
fiadd
jmp
pop
lea
push
popf
xor
and
and
dec
xor
xchg
inc
test
leave
dec
xor
movs
dec
pop
jbe
cmp
cmc
xchg
popa
cmp
pop
stos
ss
in
mov
xor
int
push
pushf
fwait
jae
mov
or
mov
out
cs
outs
adc
std
mov
xor
inc
or
sahf
ret
sti
call
pop
retf
xlat
pop
fisttp
in
sbb
pop
std
add
popf
xor
loop
jno
jp
call
fmul
mov
in
stc
in
mov
(bad)
push
mov
cmps
sub
fnstenv
push
rcl
xchg
add
mov
inc
stos
into
push
push
(bad)
call
dec
cmc
popf
retf
push
enter
(bad)
adc
jg
xor
sub
cmc
int3
jb
adc
lahf
xchg
mov
ror
ja
inc
in
movs
test
(bad)
mov
or
push
push
xor
jmp
push
adc
test
push
pop
pop
mov
fs
es
mov
popf
stos
mov
mov
inc
xchg
push
ror
mov
pop
xor
sbb
in
adc
rcr
mov
xor
test
sbb
or
nop
hlt
mov
push
rcl
xor
jmp
push
xor
dec
retf
retfw
xchg
sub
add
jp
add
mov
pop
loop
cmps
pop
es
shr
outs
xor
adc
pop
mov
addr16
pop
aas
ds
push
fsub
std
xor
xor
in
inc
test
xor
push
pop
jb
shl
jg
pop
cmp
inc
pop
inc
sub
inc
mov
ins
xchg
daa
mov
or
inc
jmp
dec
pop
push
leave
retf
mov
daa
push
jmp
(bad)
cmps
shr
inc
push
retf
loope
mov
mov
inc
jno
and
clc
adc
(bad)
xor
xor
adc
inc
inc
int3
mov
or
pop
cmp
push
cdq
cmp
(bad)
aam
or
mov
pop
fdiv
out
adc
jmp
xchg
mov
in
sub
dec
push
jbe
and
and
or
imul
leave
nop
cmps
mov
xor
loop
mov
out
fist
add
xchg
adc
mov
test
cs
inc
scas
mov
pop
jmp
push
or
or
and
push
add
stos
push
mov
push
imul
cmp
mov
or
je
mov
push
push
in
ror
sbb
movs
inc
dec
add
and
enter
cmp
mov
xor
movs
scas
xchg
sub
pop
in
je
add
push
in
add
xlat
aaa
cmp
mov
imul
jl
push
mov
(bad)
add
int
and
mov
mov
jl
in
or
mov
cs
clc
out
xchg
cmp
or
fist
add
pop
imul
arpl
mov
cmps
mov
mov
cmps
dec
xchg
lds
dec
jo
and
lea
adc
shl
outs
sti
mov
and
push
lea
ret
mov
mov
jo
mov
add
adc
xchg
ror
add
ror
mov
dec
lahf
test
jnp
repz
cmp
stc
and
ins
jle
mov
add
xor
test
jg
xlat
into
jbe
and
add
sub
mov
in
xchg
(bad)
mov
enter
scas
sub
das
pop
mov
cmp
adc
and
mov
adc
(bad)
out
jo
mov
imul
sub
popa
mov
pop
rol
shl
fdivr
inc
in
adc
or
and
nop
or
jns
outs
in
mov
nop
adc
inc
fmulp
pop
jns
ja
cmps
nop
or
ja
cmps
ja
cmps
nop
or
ja
mov
fadd
push
mov
and
and
xor
cmp
mov
mov
aad
cli
push
sbb
mov
sub
jne
cmps
pop
cwde
jle
lods
and
(bad)
fnsetpm(287
(bad)
jge
xor
test
jg
cmp
sub
or
(bad)
in
push
scas
adc
push
mov
cmps
out
dec
sbb
inc
sbb
nop
push
pop
dec
pop
retf
sub
das
mov
std
xchg
dec
adc
int
mov
inc
cmp
mov
test
jb
mov
mov
mov
imul
fimul
adc
clc
retf
ror
inc
or
xchg
add
in
into
nop
in
cmp
jmp
dec
ret
jno
mov
out
jno
mov
nop
jno
clc
fcomp
mov
(bad)
sbb
mov
cmp
jl
js
jg
xor
pop
loop
sbb
mov
pusha
add
and
adc
ins
fs
ret
pop
xor
cdq
mov
retf
mov
and
lock
outs
jne
mov
loope
mov
les
dec
fidiv
das
outs
inc
rcr
xor
test
stc
push
clc
cdq
lea
jp
test
imul
push
movs
xchg
jae
test
add
xchg
fcmovnu
aad
and
sub
or
int3
aaa
scas
mov
mov
daa
data16
popf
enter
lahf
jmp
xor
and
push
mov
lods
mov
pop
mov
mov
lods
inc
push
jo
retf
repnz
or
xor
xor
ds
push
imul
sub
mov
push
mov
sub
sahf
and
mov
retf
xchg
sub
scas
push
jmp
cmp
cmp
ret
dec
inc
jo
imul
sbb
push
push
and
loope
stc
push
mov
pop
rol
mov
adc
adc
(bad)
fbld
lock
arpl
ins
dec
shl
(bad)
jbe
pushf
ins
leave
mov
or
movs
add
mov
adc
scas
sahf
jno
inc
cmp
aam
std
mov
jmp
fwait
fs
cmc
sbb
sahf
shl
dec
(bad)
jo
mov
push
jmp
mov
cmps
and
push
mov
jno
mov
hlt
(bad)
xor
adc
xor
or
or
sub
xor
push
sbb
mov
jno
inc
xchg
inc
out
or
ja
jg
ror
cli
mov
cmp
cmps
jno
cld
out
fwait
mov
out
cmp
or
std
jmp
sti
mov
outs
mov
in
xchg
ds
jns
xor
xchg
inc
dec
dec
jmp
mov
in
xchg
or
xchg
push
jle
int
shr
pop
mov
mov
sub
pop
ror
or
pop
pushf
cmc
cmp
shr
(bad)
icebp
xchg
or
daa
or
leave
stos
mov
fucom
aaa
mov
inc
sub
outs
and
pop
mov
inc
mov
out
inc
mov
test
fmul
jg
pop
out
in
(bad)
popf
adc
pushf
pop
int
cdq
pop
dec
lds
fnstcw
repnz
out
jmp
imul
into
pusha
loopne
mov
cmp
es
aam
add
jge
out
push
mov
out
int3
cmc
pop
fistp
jns
adc
(bad)
xor
xchg
sub
add
cmp
jne
jns
push
aaa
test
xchg
xchg
push
fnsave
mov
pop
aaa
cmp
mov
(bad)
dec
rcl
mov
aad
fidiv
cmps
and
push
adc
retf
repz
pop
jo
mov
add
pop
icebp
mov
inc
and
sahf
stc
add
mov
test
cwde
xor
xlat
and
ret
repnz
sbb
and
ds
sbb
int3
mov
xor
call
mov
mov
jp
imul
jae
out
jecxz
icebp
jge
out
loop
imul
pop
adc
mov
mov
jge
adc
ret
jmp
xlat
pusha
arpl
push
fmul
scas
sub
sbb
repnz
daa
mov
lods
mov
jle
jb
jmp
adc
(bad)
cmp
dec
inc
mul
icebp
(bad)
les
pop
clc
xchg
mov
call
fstp
mov
push
js
aaa
sub
loopne
jne
fisubr
dec
sbb
addr16
or
xchg
push
cwde
jae
mov
mov
outs
cmp
ret
push
(bad)
pop
cld
mov
jne
cmp
and
test
out
jmp
in
jmp
xchg
pop
xchg
inc
cld
nop
cmps
mov
in
fldcw
fsubp
sub
sbb
adc
push
xchg
cmps
sar
add
out
adc
mov
arpl
retf
cmp
shl
stos
inc
bsf
jne
mov
cmps
mov
lods
mov
out
call
push
pop
test
cwde
adc
push
mov
add
pop
mov
cld
sahf
pop
pop
add
out
(bad)
stos
mov
out
jle
das
or
out
xor
das
pop
lds
push
neg
ins
mov
lea
cmps
or
dec
pop
adc
cmp
and
sti
push
dec
loop
push
leave
jge
pop
int3
pushf
repz
jae
call
mov
sub
jae
jl
jge
repnz
sub
bound
fild
pop
out
bound
scas
sldt
js
pushf
retf
cmp
shl
ror
pop
shl
sbb
lods
clc
adc
xchg
sar
adc
mov
mov
mov
outs
daa
jne
out
push
mov
ret
push
outs
js
out
push
ss
sahf
jmp
dec
je
dec
movs
mov
adc
jmp
aad
mov
mov
adc
pop
leave
push
dec
sub
pop
scas
inc
cmp
pop
pushf
movs
jmp
jns
call
sub
lods
mov
cwde
cmps
psubq
jp
mov
pop
pop
mov
dec
sbb
sahf
pop
mov
cwde
cmp
sti
loope
fmul
jno
les
mov
inc
dec
ss
inc
cld
stc
shr
loop
addr16
lea
mov
sbb
push
adc
out
adc
cmp
test
xchg
add
sbb
loope
xchg
(bad)
out
pop
imul
sub
cmp
hlt
into
cld
fbstp
dec
push
lock
pop
xchg
leave
dec
imul
fdivr
nop
cmp
xor
movs
pop
out
xor
xchg
popf
mov
(bad)
and
fwait
dec
jno
(bad)
(bad)
pop
add
lahf
xchg
xchg
(bad)
sub
mov
xchg
add
daa
mov
es
xor
icebp
mov
fs
xor
call
fistp
stos
aaa
cld
add
cld
jo
lock
cmps
shl
sub
adc
inc
jg
sub
push
gs
xchg
(bad)
mov
xlat
mov
push
test
dec
jb
cmp
mov
dec
(bad)
push
push
fwait
jmp
push
test
jl
xchg
in
test
lods
int
jge
lods
jle
(bad)
outs
les
xor
inc
push
movs
shr
push
sbb
xor
movs
jb
leave
cmp
cmps
push
dec
lods
imul
cld
ds
inc
lods
mov
adc
cld
or
push
mov
xchg
enter
imul
dec
cmp
stc
repnz
sbb
sbb
pop
les
adc
fild
sbb
sub
(bad)
movs
aam
mov
mov
jle
dec
aas
retf
rcr
cwde
ja
test
adc
jecxz
inc
cmp
stos
mov
mov
adc
loopne
div
push
jae
mov
sub
adc
jne
sbb
fimul
lock
jg
cs
add
push
adc
sahf
push
jmp
fcmovu
sti
inc
mov
inc
xchg
fstp
neg
fstp
sub
(bad)
js
inc
call
adc
sbb
push
push
(bad)
ins
push
pop
clc
dec
sbb
aad
mov
xchg
adc
cld
adc
pop
fs
mov
mov
or
add
push
pop
test
iret
outs
sub
pop
imul
cld
dec
inc
test
fwait
cmp
imul
or
jo
xchg
out
push
sub
dec
push
pop
pop
retf
mov
rcr
jns
ins
fisttp
mov
fmul
cwde
add
scas
add
retf
mov
dec
imul
nop
inc
fwait
in
fs
cmp
adc
cbw
mov
inc
or
repz
jmp
cmp
(bad)
cmps
xlat
cdq
loopne
adc
out
jbe
or
add
xor
add
ins
push
and
ds
pop
dec
int
pop
adc
in
ror
mov
shl
test
ret
push
jb
mov
and
mov
jb
sahf
pop
(bad)
sbb
imul
adc
sbb
mov
xchg
add
lods
stos
imul
adc
mov
mov
aam
adc
mov
out
xchg
sbb
loop
xchg
into
das
mov
xchg
(bad)
and
aaa
jbe
cmp
inc
or
pop
pop
jns
push
push
hlt
pop
stos
dec
icebp
sar
repnz
stc
popa
and
rol
mov
aas
mov
enter
adc
xor
into
call
push
sub
cdq
aam
ds
std
inc
or
fwait
into
setnp
xor
ins
push
ret
addr16
push
jne
jge
sbb
push
inc
adc
ins
nop
xchg
je
shr
jbe
pushf
sub
or
repz
retf
imul
es
lock
sbb
aam
clc
stos
sahf
mov
sahf
xor
push
xor
inc
mov
jb
lods
aad
stos
stc
adc
out
xlat
rcr
jecxz
in
shl
sbb
loop
or
inc
pop
ror
arpl
(bad)
shl
popf
sbb
outs
rcr
dec
movs
and
sar
leave
adc
hlt
js
ror
movs
add
inc
dec
xchg
sub
test
sub
in
xor
test
test
sub
ret
pop
stc
popf
jge
cmp
cmovns
stos
lea
sub
jle
jl
mov
sbb
into
outs
or
push
das
or
mov
or
fimul
xchg
jmp
iret
mov
jmp
adc
mov
fucomip
push
shl
mov
pop
fld
or
lods
push
jge
or
int
ja
xchg
js
mov
rcr
sub
scas
push
mov
inc
pop
imul
call
jecxz
rcl
dec
in
fist
xchg
and
push
jnp
mov
inc
sub
movs
push
popa
mov
add
test
jg
daa
sbb
inc
ror
mov
cmp
push
cmp
(bad)
pop
in
sbb
in
data16
fbstp
aam
scas
inc
aad
in
mov
push
xlat
xchg
pop
aad
hlt
aaa
(bad)
xchg
lahf
sbb
cs
pop
sbb
mov
retf
cli
jecxz
es
adc
push
std
sbb
push
loope
into
cwde
enter
push
lock
dec
adc
jns
sub
mov
(bad)
into
xor
and
pushf
hlt
scas
jbe
mov
xchg
repnz
std
cmc
push
mov
xor
jne
fadd
aaa
stos
(bad)
fdivr
sar
and
(bad)
out
sub
aad
cmc
xor
pop
cmp
fisub
nop
stos
and
pop
ror
loopne
jno
cmp
mov
sbb
popf
mov
imul
xor
jge
cmp
dec
ss
jo
iret
js
dec
dec
ja
xchg
pop
into
jg
xor
das
or
ficomp
aaa
and
xchg
pop
dec
sbb
mov
add
cdq
shl
cli
fstp
(bad)
out
cld
push
jae
sahf
test
cmp
mov
aam
mov
mov
mov
int
in
fsubr
aaa
data16
int
fcmovb
cmps
repnz
cli
jmp
(bad)
xchg
retf
call
push
imul
xor
aam
jnp
frstor
dec
adc
sub
mov
push
aas
loop
hlt
jne
sbb
xchg
mov
jge
test
icebp
aas
inc
hlt
ins
imul
push
mov
in
xchg
xchg
(bad)
fcomp
std
dec
xchg
movs
scas
inc
fldenv
dec
call
adc
aad
lock
outs
loope
out
push
sbb
xchg
(bad)
std
into
clc
mov
ficom
lea
xchg
ror
push
mov
xchg
cli
xchg
fninit
push
stos
in
or
sbb
inc
inc
dec
push
test
jp
inc
jecxz
frstor
das
push
out
pop
or
cwde
pop
mov
mov
fcomp
leave
shl
dec
repnz
loop
imul
nop
div
rol
test
ret
inc
(bad)
jae
in
adc
aad
call
fimul
je
push
push
mov
push
add
or
mov
(bad)
cmp
(bad)
jmp
sbb
and
add
pop
or
sub
shl
shl
lahf
fild
add
rcr
add
jmp
mov
mov
push
xchg
cmp
call
push
jle
push
pop
or
jo
or
pop
icebp
mov
mov
fiadd
lahf
div
aas
mov
repz
adc
cmps
ja
inc
dec
icebp
sub
push
aad
int3
into
jae
mov
aad
dec
sbb
out
mov
xor
sar
mov
out
scas
pop
test
out
stos
jle
jae
add
imul
sub
and
(bad)
mov
pusha
mov
xchg
rcl
mov
push
test
dec
ficom
push
jbe
mov
mov
jbe
xor
lahf
arpl
inc
stc
mov
shr
pop
inc
adc
sti
cdq
cmovbe
(bad)
xor
shr
inc
mov
mov
out
(bad)
cs
mov
hlt
test
push
cmc
sbb
mov
inc
adc
adc
stos
rcr
inc
cmps
out
sbb
(bad)
dec
repz
outs
jmp
out
mov
ins
xor
aas
jle
jmp
jg
and
mov
scas
xchg
xchg
mov
int
jmp
retf
inc
je
adc
in
adc
fwait
not
data16
in
add
push
mov
jne
arpl
jne
cmp
lahf
loope
das
mov
cmpxchg
mov
cmp
ins
push
xor
mov
scas
rcl
repz
stos
(bad)
mov
rol
jmp
mov
adc
adc
pop
and
and
jmp
aaa
pop
xor
ins
pop
mov
out
xchg
and
(bad)
addr16
mov
repz
pushf
add
ins
dec
mov
fldcw
inc
lock
cmp
clc
mov
fst
xchg
mov
dec
jl
cmp
sbb
push
push
pop
xchg
xchg
pop
je
ds
dec
nop
xor
sbb
sub
rcl
scas
mov
push
xchg
shl
int
or
(bad)
sbb
popa
dec
xor
mov
cwde
ins
xchg
xchg
pop
pop
dec
sbb
inc
jmp
stos
jb
cmp
(bad)
cmc
movs
or
popa
sahf
fwait
les
push
(bad)
loop
movs
add
sbb
inc
mov
cwde
jg
fstp
jge
inc
dec
push
mov
and
(bad)
(bad)
lock
pop
icebp
jmp
ins
outs
jbe
stos
mov
sbb
adc
mov
inc
inc
test
enter
inc
push
iret
or
adc
fimul
mov
call
jne
retf
fld
icebp
mov
pop
adc
je
or
div
int3
out
(bad)
popf
mov
or
icebp
lods
xchg
mov
loope
inc
adc
push
adc
repnz
cdq
or
sub
mov
adc
mov
scas
jle
jbe
jb
mov
and
ret
jg
in
jp
fldl2e
lods
and
adc
push
or
xor
ds
cwde
push
push
dec
shl
nop
xchg
jge
cmp
xor
aas
sub
cmp
shr
stos
xchg
push
sahf
in
sbb
mov
call
in
push
sub
sub
mov
dec
inc
dec
xor
std
pushf
sbb
ins
xchg
ins
fnstsw
pusha
fucomi
add
scas
inc
movs
mov
loopne
test
pop
push
outs
pop
push
cmc
xchg
shr
and
dec
mov
fisub
idiv
fucom
mov
test
cdq
adc
jge
mov
or
push
xor
mov
jmp
xchg
pop
leave
xchg
lods
retf
pop
pop
xlat
and
inc
ins
sub
mov
add
or
add
mov
pop
or
ja
mov
iret
in
std
fstp
dec
dec
mov
call
in
jo
aam
pop
jae
cmp
fs
jbe
pop
shld
ss
dec
pop
push
adc
int3
mov
test
in
jnp
dec
and
dec
lahf
es
dec
pop
mov
into
bound
pop
pop
xor
lods
sbb
scas
xchg
cwde
and
int3
xchg
scas
and
and
mov
fs
jecxz
aad
out
mul
or
les
int
loope
mov
or
shl
pop
ja
cmp
fs
dec
ds
dec
push
and
or
ds
sbb
mov
sub
inc
lahf
scas
daa
adc
push
xchg
jle
mov
push
push
cmp
bnd
clc
xchg
popf
mov
lock
fist
mov
arpl
jl
scas
imul
outs
lods
jne
clc
xchg
mov
xchg
into
xchg
pop
arpl
in
inc
mov
and
pop
adc
sbb
jnp
sub
test
mov
adc
mov
cmps
les
mov
lods
ret
xchg
inc
in
or
mov
jp
push
fdivr
jne
add
cdq
jmp
dec
hlt
or
mov
jg
mov
sub
test
mov
adc
xchg
scas
test
jle
je
pop
and
xlat
xchg
ds
push
adc
js
movs
retf
aam
cmp
pop
jmp
jbe
sti
repnz
adc
and
mov
addr16
push
enter
push
sub
jle
sbb
das
adc
stc
push
or
jnp
and
dec
and
test
adc
test
neg
add
push
push
cmp
jne
jmp
in
bsr
(bad)
and
in
or
cmp
push
(bad)
in
repnz
lahf
mov
(bad)
jle
jecxz
cmp
xchg
dec
lahf
sti
jg
adc
dec
out
call
inc
fistp
inc
(bad)
movs
sub
mov
jl
leave
and
(bad)
mov
add
(bad)
xlat
dec
test
cmc
sub
aas
repnz
hlt
pushf
jg
cmp
fwait
mov
in
cmp
sbb
test
pop
jmp
sub
or
shr
xchg
and
ss
xor
in
dec
add
sbb
loopne
lahf
ret
mov
adc
test
out
(bad)
push
mov
mov
mov
or
cmc
ret
cli
mov
mov
mov
int
popf
cmc
inc
addr16
dec
inc
sub
adc
and
cmp
cwde
(bad)
adc
movs
movs
loop
aam
out
xchg
and
cli
ins
jne
nop
adc
dec
lock
xor
inc
and
sbb
loope
inc
mov
lods
popa
mov
std
(bad)
xlat
mov
outs
and
lahf
push
mov
gs
cmps
std
imul
outs
sub
sub
sbb
enter
xor
push
scas
inc
stos
mov
mov
fwait
adc
in
jnp
out
push
jns
ret
data16
push
adc
movs
(bad)
fimul
pop
mov
fidiv
lods
hlt
out
sub
pop
push
mov
inc
jg
les
scas
pop
cmps
movs
cmp
dec
repnz
dec
dec
pop
sub
push
pop
test
out
add
jne
pop
std
in
xor
movs
sub
das
lahf
loope
push
dec
jge
or
xchg
add
sar
mov
dec
sub
outs
aam
sub
and
push
aad
repnz
dec
mov
jg
fdivr
out
fwait
mov
adc
in
lods
rcr
aas
aam
or
ret
aam
and
sub
mov
or
mov
cmp
add
pushf
xor
inc
leave
adc
test
push
sbb
sub
or
sub
cmps
xchg
das
popf
jns
lods
test
in
add
dec
ds
retf
imul
dec
cmp
jl
pushf
push
sbb
aam
fstp
sub
mov
push
arpl
lahf
mov
daa
xor
xchg
pop
inc
mov
mov
ror
cmp
(bad)
fs
jmp
cmp
gs
mov
xchg
jle
pop
or
mov
addr16
cmp
jno
sub
pop
into
mov
adc
inc
add
mov
aad
push
clc
fwait
aaa
mov
jg
scas
ror
ds
mov
lods
and
adc
std
es
nop
mov
cmp
xlat
mov
xchg
aad
and
push
iret
or
inc
xor
mov
arpl
push
lahf
dec
in
xchg
outs
scas
jnp
test
aas
imul
inc
lods
gs
jns
dec
(bad)
jp
test
or
mov
xor
or
xlat
sub
cmp
jo
mov
dec
mov
leave
aas
inc
cmp
mov
sub
cmp
retf
imul
sbb
ror
imul
add
xchg
inc
add
or
ret
int3
or
inc
les
gs
add
adc
and
popf
int3
mov
sub
jl
cld
jecxz
mov
inc
icebp
dec
pop
pop
cmp
cmc
pop
mov
gs
and
sbb
add
pop
test
ins
adc
add
mov
cmps
ficom
addr16
int3
mov
push
push
popa
call
mov
je
ins
pusha
or
sub
add
jmp
push
(bad)
xor
pop
dec
call
xchg
xor
mov
(bad)
push
outs
and
(bad)
xor
gs
push
(bad)
jmp
shl
mov
xlat
fistp
ficom
and
mov
fistp
jno
call
and
mov
ins
nop
mov
inc
jp
(bad)
mov
or
cmp
cmp
icebp
jmp
(bad)
lea
inc
add
es
adc
movs
mov
popf
sub
adc
js
stos
gs
ins
cwde
mov
sbb
sub
dec
dec
and
stos
arpl
push
cdq
mov
mov
add
retf
or
loopne
inc
inc
bound
sub
and
rcl
or
pushf
cmp
and
inc
xor
fs
xchg
or
adc
rcr
adc
inc
movs
fwait
cmps
cdq
jl
add
(bad)
dec
nop
mov
mov
add
sahf
dec
xor
mov
sbb
or
out
pop
in
pop
dec
push
mov
sub
pop
test
dec
or
stos
inc
and
adc
lods
fs
mov
repz
inc
gs
repz
ret
test
shl
mov
cmps
inc
ss
mov
cmp
int3
add
push
pop
xor
std
pop
lea
pusha
dec
nop
push
mov
stc
mov
movs
out
arpl
cli
add
cmp
jmp
sbb
push
mov
dec
fldenv
sbb
sub
xchg
in
push
mov
cli
test
jp
adc
push
movs
test
dec
shl
xchg
and
inc
adc
xor
pop
ss
mov
mov
dec
jle
add
rcr
or
into
mov
pop
adc
data16
xor
adc
cwde
xchg
cmp
test
paddq
or
test
xchg
icebp
ja
inc
cmp
dec
(bad)
into
dec
ret
fcom
or
(bad)
pop
jnp
xor
pop
xchg
or
test
jb
mov
add
sub
pop
sar
loop
mov
adc
or
outs
add
loope
(bad)
dec
ficomp
pop
pusha
pop
sub
pop
rol
sbb
mov
ss
daa
inc
aam
add
outs
push
and
xchg
or
xchg
in
mov
push
push
sar
call
add
inc
sub
mov
mov
or
sub
dec
sbb
jo
shr
leave
add
sbb
cmps
inc
sahf
sbb
das
push
pop
and
aaa
xor
sbb
mov
inc
rol
and
mov
or
mov
or
scas
add
add
loopne
xor
mov
add
push
adc
dec
xor
sub
and
js
cmp
inc
fisub
jbe
push
retf
imul
iret
shr
cmp
(bad)
mov
outs
cmp
scas
aad
and
fist
pop
inc
inc
(bad)
call
(bad)
jmp
xor
cmps
clc
jg
fcmovu
int
jl
xchg
out
jns
les
dec
add
dec
loope
aad
mov
iret
popf
(bad)
jp
pop
mov
imul
ficom
test
add
les
push
jns
mov
xchg
(bad)
imul
(bad)
into
in
aam
cmp
dec
lods
sbb
pop
adc
jns
or
repz
(bad)
lock
and
pop
pop
dec
cmp
add
or
xchg
xchg
mov
mov
icebp
xor
and
mov
jnp
stc
nop
popa
adc
rol
adc
push
mov
inc
mov
jle
das
mov
jo
movs
xchg
bound
xlat
cld
imul
push
cdq
cs
popf
xchg
aas
mov
nop
aam
lahf
ins
push
ret
adc
into
imul
aam
test
mov
xchg
and
xor
hlt
inc
mov
xchg
mov
dec
xchg
sub
adc
cld
cmps
movs
or
xchg
mov
(bad)
or
bound
xor
das
(bad)
xchg
test
push
hlt
jno
mov
jmp
test
enter
nop
imul
aad
rcl
xchg
scas
fadd
test
xchg
pop
mov
or
retf
xchg
mov
outs
xor
cld
fidiv
jmp
sbb
popa
adc
in
push
and
sub
lods
inc
xchg
push
add
aam
js
push
mov
cmp
aam
rol
jmp
pop
sbb
in
aas
inc
inc
cs
mov
imul
sub
sbb
xchg
or
aas
push
mov
inc
inc
pushf
and
(bad)
xchg
and
mov
inc
mov
pop
mov
(bad)
dec
out
sbb
fcomp
cdq
pcmpeqb
inc
adc
fs
(bad)
std
jns
jnp
movs
(bad)
xor
xor
and
cmps
and
lds
xor
int
rol
aam
mov
push
jecxz
adc
mov
in
fldenv
sahf
xor
aam
mov
or
xchg
not
repnz
inc
inc
mov
push
dec
mov
push
fwait
aas
push
leave
dec
dec
out
mov
sub
fild
out
inc
mov
jl
and
or
pop
cmp
xor
icebp
mov
pop
out
add
repz
in
mov
pop
xchg
sbb
popf
adc
fcmovu
xor
adc
ins
dec
daa
sub
movs
lahf
sbb
inc
jmp
xchg
mov
xor
ror
or
cmp
sub
shl
ror
fmul
mov
jno
dec
and
jo
jmp
fisttp
mov
popa
xchg
cwde
xor
pop
mov
jmp
add
mov
mov
cmp
dec
push
sbb
sbb
add
xor
dec
movs
mov
dec
cmp
adc
aad
cmp
int
rcr
aaa
stc
enter
xchg
pop
(bad)
icebp
test
jmp
int3
adc
xchg
add
enter
scas
loopne
jb
rcr
imul
outs
or
int3
jne
push
adc
(bad)
inc
out
sbb
jle
cmc
mov
ins
stos
mov
mov
adc
gs
int3
ss
pop
mov
push
mov
mov
xchg
mov
fcom
jo
xchg
sbb
mov
lea
les
dec
int
or
sbb
and
stos
inc
popa
mov
les
scas
adc
and
adc
pop
dec
jbe
push
(bad)
jns
fnsave
int
mov
inc
push
xchg
int
mov
fisub
sub
movs
add
fiadd
mov
and
es
mov
test
ror
(bad)
and
hlt
fisttp
cs
fnstsw
(bad)
in
cmp
in
retf
aas
clc
and
mov
lea
dec
push
out
and
(bad)
push
test
sub
xor
mov
outs
adc
push
(bad)
test
mov
outs
adc
add
inc
leave
loop
cmps
ss
mov
je
int
jl
mov
cmp
loop
adc
outs
in
mov
iret
fdiv
pop
cs
pop
test
push
dec
movs
aad
fsubr
cmc
jbe
jnp
int
cmps
jnp
push
pop
scas
stos
sbb
and
xor
icebp
ja
or
fs
mov
sbb
push
push
push
dec
ja
adc
in
xor
out
cmp
push
xchg
stc
jl
nop
cli
mov
push
cmp
int
xor
repz
mov
sbb
jno
fnstcw
fwait
cmp
movs
ds
rol
push
push
inc
xchg
sbb
js
ds
in
xor
mov
in
xchg
xchg
int3
and
nop
xchg
sub
pop
jecxz
push
jne
and
jmp
dec
jae
and
or
or
mov
sbb
mov
add
pop
mov
out
sbb
xor
adc
ins
mov
mov
leave
arpl
push
cmp
pop
(bad)
jecxz
enter
nop
push
mov
iret
adc
mov
leave
repnz
mov
ins
outs
cmp
mov
cmp
aaa
dec
xor
xor
dec
ins
mov
sbb
pop
or
inc
or
dec
dec
xchg
aad
inc
adc
inc
pop
adc
test
daa
mov
test
es
(bad)
pop
sbb
ja
test
imul
cmc
sbb
add
lods
sub
daa
mov
fs
cmp
mov
push
lds
push
jecxz
cmp
dec
fs
pop
out
dec
daa
retf
dec
nop
sbb
jno
dec
sbb
pop
cli
repnz
and
push
out
mov
lods
xchg
inc
jp
in
in
gs
xchg
push
push
push
xor
sbb
pop
mov
les
test
fisubr
(bad)
cwde
ret
cmps
sbb
ja
movs
pop
repz
inc
cmp
mov
cmps
push
or
int3
clc
cmp
pop
push
(bad)
mov
mov
jo
shr
movs
xchg
loop
xchg
push
sub
mov
cmp
mov
jae
les
xchg
push
push
dec
pop
xchg
jg
dec
mov
rcl
inc
lods
jo
bound
enter
nop
sbb
loopne
in
push
in
xor
jo
in
inc
xchg
sbb
sbb
mov
mov
iret
movs
loope
bound
aad
pushf
push
fcom
ja
pop
gs
pop
push
ret
fist
cmp
or
push
loopne
mov
adc
scas
jbe
leave
push
add
mov
inc
cs
push
cmp
dec
fcomi
push
lods
inc
xchg
xor
xor
jo
test
jge
aam
dec
mov
jecxz
xchg
loopne
aad
movs
adc
cmp
retf
cmc
or
or
inc
loop
xor
rcl
daa
or
xchg
add
push
cmps
shr
sub
popa
pop
stos
and
adc
or
loopne
or
inc
pop
es
mov
fnstcw
or
ret
jb
xor
jge
aam
mov
retf
fwait
inc
pop
bound
leave
xchg
mov
test
pushf
outs
iret
or
push
push
fdivr
aam
stc
or
test
inc
sub
cmp
pop
mov
les
or
enter
sub
ds
xchg
pop
and
pop
fwait
ret
scas
mov
pop
adc
inc
out
repz
push
stc
sbb
repnz
adc
xchg
jne
fimul
push
pop
outs
(bad)
mov
into
fld
jnp
pop
enter
push
movs
lds
push
fwait
pop
movs
outs
mov
jmp
lahf
adc
imul
jecxz
icebp
aad
rcl
xchg
inc
mov
sbb
ins
xchg
scas
adc
xor
sbb
sti
ins
and
jmp
jbe
adc
icebp
pop
jns
and
imul
ret
lock
lea
aas
cs
mov
loopne
push
jecxz
mov
xchg
mov
test
mov
sbb
data16
daa
pop
sbb
in
add
jmp
and
int3
aaa
adc
rcl
aas
xchg
add
punpckldq
repnz
xchg
and
ins
pop
int3
popa
in
loope
ds
sbb
test
das
into
or
pusha
sbb
and
loopne
and
pop
push
dec
mov
rcl
dec
pop
shl
daa
(bad)
hlt
movs
xchg
cli
adc
or
imul
and
jnp
cmps
sahf
hlt
sbb
imul
aad
les
cmp
inc
adc
call
sbb
leave
dec
fisubr
jmp
inc
adc
jns
cwde
repz
mov
jnp
dec
inc
cmp
in
clc
xchg
xchg
inc
dec
mov
ds
mov
fbstp
mov
lahf
xchg
xchg
pushf
mov
sbb
nop
pop
mov
mov
xor
or
fsubr
daa
push
or
jle
in
sbb
cmp
adc
adc
sub
mov
mov
imul
inc
mov
sbb
fist
(bad)
hlt
fs
mov
(bad)
pushf
arpl
pop
pop
xchg
inc
pop
and
out
cmps
mov
mov
push
sub
push
ins
std
sbb
sar
fs
jp
pop
int3
mov
mov
lea
mov
das
aas
push
movs
sbb
sbb
mov
sub
cmc
mov
inc
xchg
cdq
push
jg
adc
cmp
add
mov
add
call
adc
xlat
xchg
jae
push
pop
pop
xor
scas
xchg
scas
rcl
xlat
loopne
in
xor
or
mov
adc
sub
or
pop
pushf
mov
in
push
mov
add
fdivr
mov
in
in
or
int3
sbb
adc
call
mov
(bad)
mov
lds
dec
lods
push
sub
cwde
mov
xchg
xchg
jge
in
nop
icebp
inc
pop
fidivr
cdq
mov
out
pop
repnz
cdq
lods
stos
daa
(bad)
cmps
in
or
scas
xchg
push
mov
int
stos
loope
and
adc
push
mov
stc
xchg
mov
mov
xor
idiv
je
xor
in
cwde
adc
jle
sub
push
jns
jecxz
aaa
int
dec
adc
push
adc
jmp
popf
movs
push
cld
xchg
jmp
adc
cwde
pushf
je
inc
jb
mov
out
(bad)
dec
call
gs
fld
cdq
jg
mov
or
xor
jns
pop
jne
in
mov
jnp
mov
jno
pop
mov
int
and
xlat
cdq
mov
xchg
jl
jne
sbb
bound
mov
lahf
cmp
into
jecxz
loope
test
cmp
xchg
jmp
adc
imul
add
xchg
in
or
mov
imul
and
adc
xor
jle
xor
out
xchg
sahf
jge
xor
repz
and
mov
sar
cdq
pop
jle
(bad)
or
and
pop
sub
cmps
loop
fld
jae
mov
fcomip
inc
in
xor
pop
or
fnstcw
mov
clc
pop
ss
outs
fcom
movs
and
test
bound
js
xchg
and
pop
mov
sbb
adc
ds
stc
xor
fist
lds
dec
pop
xor
jmp
arpl
(bad)
repnz
fadd
cmp
cmps
cmc
loop
mov
(bad)
div
push
loope
sbb
(bad)
cmc
sbb
cmp
pushf
cmps
push
(bad)
mov
sbb
push
inc
mov
jle
inc
jns
movs
(bad)
or
mov
inc
fdiv
ret
mov
inc
les
ss
cs
xchg
add
scas
rcl
stos
pop
push
cmp
fstp
or
dec
dec
dec
ss
mov
pop
dec
call
and
gs
in
or
xor
add
jge
or
adc
call
lds
mov
sbb
add
outs
ficom
sub
dec
sub
cmp
cmp
push
mov
test
cwde
xor
mulps
mov
jne
cmp
gs
movs
adc
sahf
(bad)
fmul
mul
pop
fidivr
shl
aaa
mov
fstp
mov
lods
shl
in
sar
addr16
dec
mov
and
lods
fbstp
add
imul
inc
test
sub
jae
call
movs
fadd
mov
add
sub
scas
cmp
adc
lds
fwait
mov
and
adc
cs
sbb
(bad)
pop
mov
pop
pusha
sub
imul
add
mov
push
das
cwde
aaa
pop
dec
mov
push
jecxz
cmc
mov
xchg
adc
jno
jbe
retf
cmps
sahf
add
add
xchg
gs
test
push
in
push
dec
or
iret
and
leave
inc
cmp
and
pop
bound
dec
jmp
and
das
jmp
cmps
fld
mov
lea
dec
jbe
addr16
jo
xchg
mov
xchg
lods
ds
shl
or
push
pop
push
js
outs
and
popa
sub
lock
(bad)
dec
adc
sub
popa
adc
push
aaa
jp
cmp
ins
call
es
dec
dec
pop
retf
or
xchg
pusha
ins
xchg
inc
in
stos
jg
sbb
inc
js
dec
mov
push
in
in
outs
retf
test
xor
xchg
mov
inc
cdq
mov
mov
imul
mov
outs
cmp
and
jp
movs
jecxz
mov
mov
xor
aaa
pop
or
ror
adc
ss
lahf
cwde
xor
imul
lds
mov
out
cmps
fdiv
push
das
pop
imul
adc
pop
repz
stos
movs
xor
bound
fs
add
push
and
js
adc
xchg
cmp
and
sub
sub
mov
cmp
dec
mov
adc
push
lea
inc
xor
scas
cmp
sub
fstp
push
call
cmc
std
call
xchg
rcr
shl
arpl
adc
push
sub
adc
lgs
cmps
mov
(bad)
cmp
aas
es
fld
dec
or
arpl
outs
jo
lahf
(bad)
jg
mov
xchg
int3
or
pop
xchg
call
(bad)
loope
xor
cwde
pop
popf
jle
pop
call
xchg
cmps
imul
dec
daa
jle
in
jmp
or
jns
into
fcmovb
mov
xchg
data16
sub
sti
mov
mov
repnz
into
test
repz
iret
cmps
pop
jae
and
jmp
mov
dec
ins
lods
push
(bad)
hlt
add
mov
mov
ja
and
mov
adc
jnp
adc
cmp
daa
js
pop
pop
jae
movs
daa
les
cmp
or
loop
jp
jle
hlt
and
cli
and
mov
ins
ds
jb
outs
add
loopne
imul
jno
js
clc
rcl
mov
add
inc
in
adc
inc
mov
adc
push
and
adc
(bad)
sbb
mov
sahf
jg
arpl
mov
test
xor
fdiv
fmul
rcl
hlt
movs
push
pop
dec
js
jns
cli
data16
xchg
ins
movs
scas
adc
inc
jb
ja
sub
test
pop
call
dec
lds
aad
cmps
aas
std
and
imul
xor
and
nop
mov
retf
dec
mov
adc
mov
sbb
and
shl
outs
adc
(bad)
jecxz
rcl
adc
mov
cmp
add
add
mov
push
js
ds
pop
enter
mov
mov
(bad)
mov
int3
test
sbb
adc
fistp
lods
push
lods
cld
inc
fwait
add
add
rol
xchg
ret
(bad)
mov
xor
mov
lahf
int
xor
push
mov
icebp
js
sbb
pusha
clc
sbb
out
out
jecxz
mov
call
xor
imul
sbb
mul
int3
push
int
add
inc
imul
sbb
fisttp
arpl
and
xor
jp
xor
cmps
mov
int
sub
call
(bad)
arpl
stos
jp
test
dec
inc
leave
jno
jno
push
adc
push
fcmovb
mov
push
push
dec
pusha
mov
pop
push
sub
or
jns
or
mov
add
and
and
leave
and
mov
pushf
aas
js
xchg
sbb
dec
sub
(bad)
pusha
loop
mov
nop
clc
adc
sub
or
retf
mov
dec
jns
push
movs
adc
sbb
sti
xor
xlat
xchg
loope
mov
pop
and
jp
sbb
jne
shr
adc
mov
push
jg
inc
je
sbb
adc
mov
ror
cmps
push
or
call
pop
sub
fmul
cmc
(bad)
lahf
sub
push
cmp
sbb
pop
dec
ss
push
sub
scas
pop
or
out
enter
ret
ret
adc
movs
retf
test
jns
les
add
jno
mov
pushf
dec
push
sub
add
push
out
pushf
ret
retf
stos
pop
aaa
hlt
xor
sub
test
jmp
(bad)
xor
icebp
jg
in
add
movs
loop
xchg
test
pop
inc
shl
inc
jnp
jo
(bad)
data16
cmp
int3
cmps
cdq
loopne
mov
inc
xor
in
ret
sub
xchg
jmp
mov
mov
push
das
leave
outs
cmp
or
je
adc
jmp
adc
push
pop
cmps
xor
std
dec
xchg
xor
xor
stos
sahf
sub
je
ret
enter
mov
sub
(bad)
call
int3
cdq
(bad)
repz
int
and
sbb
cmp
shl
add
mov
dec
mov
mov
adc
shl
bound
inc
movs
bound
loop
pop
sub
aam
jbe
sub
xor
aaa
inc
add
retf
sbb
jns
retf
mov
jp
pop
mov
xchg
lds
push
jge
sub
nop
pop
(bad)
mov
ja
sbb
pushf
sub
cs
pop
cmp
jb
out
outs
mov
into
sub
lods
xchg
cwde
mov
dec
addr16
dec
lods
or
pop
jnp
add
push
js
sub
mov
and
js
sub
lahf
jbe
mov
repz
sbb
mov
mov
mov
pop
sti
call
in
push
xor
mov
int3
rcr
pop
mov
das
shl
or
pop
lock
add
xchg
mov
xlat
call
fwait
mov
sub
into
loopne
inc
xchg
adc
add
daa
cdq
xchg
xchg
mov
xor
mov
mov
xor
sub
jo
rol
mov
pop
hlt
xchg
mov
paddusb
ret
test
ror
test
loope
or
daa
call
stos
cmp
aam
in
pushf
loopne
cmp
nop
adc
push
(bad)
jle
mov
inc
push
xchg
fwait
adc
push
out
and
ds
sub
mov
rcl
loop
cld
icebp
mov
pushf
xchg
fsub
scas
mov
mov
js
pop
xchg
mov
ja
push
arpl
mov
fs
movs
hlt
dec
mov
pop
jecxz
xchg
pop
ficom
frstor
add
dec
add
fst
mov
add
xchg
and
pop
nop
in
lea
retf
cli
fdiv
push
push
cmp
mov
imul
fidivr
jle
jmp
ds
jno
pop
aas
ja
stos
xchg
repnz
xchg
jnp
in
int3
test
out
cs
stos
xor
in
dec
sub
xchg
jbe
leave
or
ins
xor
cmp
or
pushf
loop
in
push
push
imul
sub
sahf
stos
fist
movs
xchg
(bad)
imul
adc
sbb
and
mov
mov
gs
rcr
xor
xor
ds
jl
mov
es
push
jnp
arpl
xchg
cmps
add
out
dec
imul
mov
in
and
xchg
data16
xchg
(bad)
(bad)
pop
and
movs
mov
outs
push
fistp
inc
cdq
lock
xor
loop
(bad)
dec
adc
jno
cmp
(bad)
cld
adc
inc
xchg
jno
jecxz
repnz
add
pushf
mov
adc
mov
mov
sbb
fs
fisttp
inc
pop
xchg
pusha
(bad)
or
push
push
xor
in
mov
ins
arpl
jle
dec
pushf
adc
outs
sub
mov
sar
inc
sahf
mov
xor
div
loop
xchg
aam
loop
or
sbb
into
(bad)
inc
jl
mov
nop
loopne
xchg
push
test
dec
xor
cld
scas
push
in
iret
call
call
call
ffree
cmp
je
fs
fidiv
sbb
and
mov
push
push
mov
xchg
fsub
sbb
rcl
into
dec
lods
in
lods
scas
cmp
adc
and
pushf
pop
in
and
pop
lahf
pushf
adc
fsubr
jmp
inc
cmps
aaa
mov
xchg
mov
pop
outs
or
adc
aas
xchg
(bad)
enter
jae
and
stos
aaa
nop
and
jmp
mov
and
pop
dec
fist
xor
mov
test
jno
js
push
fcom
arpl
outs
pusha
mov
mov
inc
push
sbb
or
push
cmp
inc
icebp
daa
jns
xchg
mov
pop
cdq
lock
mov
or
cmp
dec
inc
xor
je
jbe
sub
leave
jmp
xchg
enter
and
cmp
call
repnz
call
cmp
inc
pop
cmp
pop
add
and
sub
or
mov
cmp
rol
cmp
fidiv
xor
icebp
pushf
push
sub
inc
jnp
adc
jmp
jmp
cmp
or
inc
dec
cmp
sar
xchg
jae
in
add
pop
or
movs
shr
mov
gs
push
cmp
xor
dec
mov
inc
ins
cmps
and
or
sahf
stc
inc
push
dec
xchg
cmps
pop
or
and
stos
cmp
stos
(bad)
mov
fidiv
pushf
pop
inc
adc
or
test
cmp
mov
int
enter
or
mov
in
mov
or
adc
jmp
sbb
leave
lock
mov
loopne
icebp
jae
test
xchg
push
mov
adc
leave
scas
icebp
mov
imul
mov
or
repnz
sbb
push
and
daa
in
retf
sbb
pop
xchg
daa
pop
mov
and
(bad)
fsub
popf
xchg
xchg
dec
inc
sar
push
or
sub
or
pushf
clc
jle
cld
xchg
push
aas
jmp
xor
stos
xlat
hlt
or
test
ins
pop
inc
stc
das
movs
mov
cmp
retf
call
movs
repz
inc
ret
jl
sahf
aam
mov
adc
mov
fld
add
mov
inc
xor
out
and
ficomp
rcl
neg
sub
mov
movs
jae
out
push
push
or
test
shr
rcl
pusha
push
enter
mov
cmp
mov
cmp
imul
xor
or
or
push
pop
ins
loope
jnp
ss
dec
inc
mov
nop
jo
xor
or
shr
or
mov
push
dec
mov
jbe
push
jg
sti
push
add
jl
mov
aad
mov
ret
inc
inc
xchg
test
imul
pop
push
xchg
push
xchg
cli
fnstcw
test
adc
std
add
retf
xchg
cmp
inc
cmp
pop
push
out
adc
nop
ror
pop
outs
retf
xor
test
dec
rcr
xchg
loop
jmp
retf
retf
call
jbe
daa
sub
mov
int
in
jo
test
stc
hlt
addr16
mov
daa
mov
(bad)
jecxz
add
pop
test
in
pop
xor
inc
lods
cmps
push
addr16
adc
fnsave
fld
mov
mov
mov
cmp
inc
xor
push
mov
push
and
pop
jmp
mov
xlat
int
jb
and
call
stc
movs
inc
push
sbb
leave
xchg
add
inc
xlat
inc
push
sub
pop
mov
sahf
cmp
lahf
push
mov
inc
mov
imul
cs
mov
dec
je
cmp
sahf
popf
cmp
mov
out
and
mov
sub
xchg
ins
adc
ss
jp
mov
pop
jmp
or
call
add
xchg
mov
sbb
pop
add
mov
cmp
push
popa
xor
cwde
xchg
sub
in
mov
fwait
movs
jl
or
adc
shr
adc
jno
pushf
les
(bad)
loopne
jmp
cmp
and
push
in
xor
clc
loopne
and
pushf
stc
xor
loop
bound
aas
jmp
add
xchg
cmp
lods
rol
push
mov
scas
in
(bad)
jo
int3
or
das
xchg
add
cmp
add
cli
fiadd
jno
in
pop
mov
fisttp
push
aam
ror
sbb
stos
and
imul
push
cmps
sahf
jg
hlt
je
xchg
fisub
mov
nop
push
mov
nop
hlt
ins
sub
jae
sbb
jns
push
(bad)
std
dec
ror
inc
sub
mov
dec
in
outs
fstp
out
and
add
mov
xchg
outs
rcr
and
out
sbb
test
mov
and
cld
(bad)
rol
pop
mov
push
(bad)
ins
sti
inc
xor
leave
or
adc
or
scas
cs
mov
xchg
pop
sub
sbb
push
dec
out
(bad)
aad
imul
dec
out
in
jns
test
xchg
pop
sub
and
inc
inc
sub
mov
or
retf
inc
dec
addr16
jmp
loope
dec
sbb
mov
cmp
out
out
stos
mov
lea
push
arpl
pop
inc
xor
not
dec
xchg
cmp
adc
dec
pop
dec
sbb
sub
xchg
dec
push
and
pop
push
sub
in
pushf
push
sbb
pop
popa
sub
and
mov
push
xor
jno
sub
push
lea
hlt
jp
lea
ret
aam
sbb
inc
inc
in
sbb
cmp
xor
inc
adc
cwde
das
and
aad
xchg
ret
xor
push
cmps
xchg
sbb
ror
aam
out
or
adc
imul
cmp
lock
fs
xchg
and
xor
or
cmp
lods
cdq
adc
pusha
mov
mov
mov
dec
lea
ja
test
mov
xchg
lods
pusha
jmp
out
lea
pop
popa
mov
neg
aad
and
jl
je
(bad)
into
adc
dec
pop
mov
pop
jne
repz
scas
cmps
enter
outs
pop
xor
mov
test
adc
ret
adc
pop
gs
int
dec
mov
(bad)
sbb
pop
addr16
adc
cwde
dec
fdiv
and
fmul
test
fadd
mov
(bad)
fldcw
jns
aam
xchg
push
adc
sub
sbb
jns
mov
clc
mov
mov
(bad)
dec
inc
xchg
test
mov
push
(bad)
test
xchg
sub
push
scas
clc
not
or
imul
popf
sub
cwde
popf
sti
dec
lock
bound
or
push
adc
vunpckhpd
lahf
ret
adc
jp
inc
add
pop
inc
inc
test
fmul
aam
dec
push
les
cmps
idiv
ss
add
data16
shr
rcr
outs
dec
inc
lods
test
pop
fild
and
xchg
xor
xchg
jno
and
in
sbb
ins
jecxz
mov
inc
aaa
enter
mov
dec
nop
nop
mov
and
add
push
ror
or
test
shl
push
cmps
jns
jo
popa
ror
cdq
inc
xor
or
scas
jnp
or
sar
es
mov
scas
clc
mov
jo
mov
fistp
sbb
inc
inc
repz
push
ret
pop
movs
adc
or
jl
cmp
push
add
jno
(bad)
cmps
or
adc
dec
into
sub
(bad)
jg
adc
mov
inc
popf
arpl
pop
fs
add
push
fisubr
aaa
jb
pusha
or
cmp
jge
mov
and
fdiv
sbb
sbb
jnp
mov
popf
cmp
imul
and
iret
inc
mov
(bad)
fsub
rol
sub
fwait
call
or
pop
inc
mov
mov
jo
cmc
rcr
inc
fnstenv
sub
in
pop
adc
jg
lock
jo
xlat
icebp
icebp
mov
stc
and
fdiv
jo
xchg
sub
dec
test
cmp
and
aas
cmp
add
jecxz
in
mov
cmp
dec
mov
mov
stos
pop
dec
jecxz
or
(bad)
mov
inc
dec
daa
aas
and
adc
sbb
push
mov
sub
cmps
jp
mov
jbe
pop
(bad)
mov
adc
test
cmp
add
dec
sub
jo
iretw
aad
pop
pop
push
jno
aam
jmp
mov
xor
mov
mov
jle
iret
xlat
cld
sub
pop
ins
fidivr
xlat
or
add
fwait
mov
dec
gs
or
iret
xlat
leave
and
mov
mov
dec
push
dec
xor
xchg
sar
jecxz
and
jbe
cld
or
shr
cmps
pusha
jl
push
shl
(bad)
sbb
out
dec
cmps
fcmove
or
xchg
jl
mov
or
dec
mov
cmp
ss
mov
jae
retf
repnz
pop
std
push
movs
sbb
fdivr
adc
out
mov
push
ret
sbb
pop
lods
stos
pop
push
sahf
push
push
dec
std
sub
out
and
jbe
ficom
popf
retf
repnz
(bad)
xor
pop
fstp
xchg
fbstp
sbb
lahf
out
pop
test
add
dec
daa
fisttp
or
mov
cwde
cdq
cs
push
bound
test
pop
adc
dec
adc
sub
aaa
lods
inc
or
sahf
sub
imul
xor
imul
test
push
mul
dec
sub
mov
push
pop
mov
out
jb
adc
loop
int3
fcom
push
(bad)
dec
cmc
aas
mov
sti
pop
test
jns
inc
movs
push
jge
test
movs
jbe
jne
nop
aam
cli
out
jbe
pop
outs
ret
(bad)
jb
jne
add
fmulp
shr
movs
xchg
retf
cs
pop
cli
xor
mul
or
jmp
jns
jae
mov
pop
outs
push
pop
mov
mov
lea
mov
jp
(bad)
dec
lock
(bad)
mov
mov
addr16
or
cmp
ins
out
sub
add
xchg
stos
cmp
inc
mov
out
cmp
jnp
and
cs
loope
(bad)
mov
popa
pop
cmp
push
add
xchg
adc
and
enter
ss
and
(bad)
fs
cdq
push
mov
add
dec
pop
dec
outs
cmp
mov
xlat
sbb
dec
mov
outs
dec
rcr
jnp
imul
rcl
cmc
and
aas
mov
and
(bad)
neg
push
mov
test
sub
sub
add
lods
push
arpl
inc
pop
icebp
mov
xor
push
ja
pop
mov
das
aam
nop
retf
jp
popa
inc
(bad)
xor
push
xchg
out
fwait
mov
lock
imul
call
sti
add
sub
and
outs
cmps
add
push
retf
adc
xchg
retf
inc
pop
pop
shl
jmp
scas
cmc
push
or
pop
and
movs
in
int3
and
cli
mov
jmp
jo
mov
and
mov
ror
jmp
in
add
mov
add
clc
out
jle
imul
jnp
sub
in
cwde
(bad)
arpl
mov
pop
adc
scas
popf
into
es
mov
add
test
pop
jnp
mov
cdq
jb
movs
inc
pop
sahf
pop
scas
adc
mov
call
leave
or
test
pushf
rol
clc
in
jmp
call
std
ret
popf
mov
jb
adc
adc
test
sahf
pushw
out
(bad)
enter
rcr
rcl
jecxz
jmp
and
lds
jmp
fnstcw
xor
loopne
push
pop
les
lahf
mov
jecxz
ret
mov
mov
jb
sbb
pop
mov
(bad)
ret
mov
int3
outs
add
ja
jg
cld
rol
hlt
mov
jo
adc
mov
cmp
and
setno
jmp
sbb
or
adc
dec
fldenv
leave
xchg
mov
dec
mov
or
sbb
dec
pop
out
mov
adc
sub
mov
imul
pop
mov
xchg
jg
pop
mov
repz
sbb
push
test
and
fld
sbb
cmps
sbb
dec
mov
adc
(bad)
addr16
(bad)
loopne
and
mov
pop
in
xchg
inc
mov
iret
cld
push
sub
xchg
xchg
es
jp
repnz
and
test
cld
push
data16
jecxz
fidiv
jne
sub
out
outs
sub
fadd
xchg
scas
add
sub
rcl
scas
fs
in
mov
mov
dec
mov
adc
cmc
out
scas
and
fistp
cmp
cdq
pop
adc
daa
push
icebp
stc
repnz
xor
ficom
xor
mov
jl
inc
test
pop
imul
adc
leave
enter
pop
out
adc
and
lea
xor
jb
xchg
add
push
add
mov
mov
(bad)
sti
mov
jb
ja
pop
inc
dec
sbb
xor
add
inc
clc
lahf
push
pop
dec
adc
js
xor
cli
xchg
jmp
popa
add
xchg
push
sbb
push
jecxz
xchg
ret
inc
adc
js
sbb
jmp
ror
loop
add
retf
xor
ret
inc
add
loope
pop
arpl
jne
mov
and
push
sub
ss
pop
pop
push
sub
pop
(bad)
repz
inc
hlt
cmp
or
sub
rcl
push
mov
fs
aad
loopne
test
and
xchg
mov
xchg
jecxz
cld
cmps
fs
dec
shl
test
loop
sub
fdivr
pop
cmp
jb
clc
stos
pop
inc
jbe
repnz
into
int3
pop
das
movs
add
sub
xchg
fwait
xchg
cmps
sub
sub
xchg
push
inc
test
stos
sti
mov
mov
(bad)
int
lock
or
mov
xor
jmp
xlat
daa
lea
xchg
out
pusha
verr
outs
mov
idiv
mov
pop
daa
repz
and
out
ja
sbb
adc
add
jbe
push
add
mov
(bad)
clc
leave
shl
cmps
(bad)
dec
pop
stos
data16
xchg
xor
or
cdq
out
loopne
movs
push
shl
loope
loope
adc
xchg
mov
retf
in
jecxz
popf
cwde
pop
fidiv
std
out
loope
js
inc
leave
daa
cld
push
mov
cmp
inc
dec
jno
add
xchg
sti
and
pop
push
xor
in
fsub
pop
mov
in
popa
sub
jae
xor
or
mov
(bad)
test
cmps
pop
sub
popf
lds
mov
sahf
movs
push
dec
cmp
nop
push
mov
push
nop
adc
jns
aad
movs
in
outs
pop
(bad)
outs
in
icebp
mov
dec
mov
pop
js
mov
push
jae
jg
sbb
fidivr
shl
int
push
test
ss
test
xchg
jg
xchg
bound
jle
jns
cmp
aam
rcl
hlt
lds
(bad)
dec
jg
mov
push
icebp
xchg
lahf
or
or
push
mov
adc
stos
mov
inc
test
dec
and
repnz
add
xchg
sti
mov
cmp
leave
aam
ret
imul
or
in
fsubr
mov
push
in
pushf
outs
jo
out
test
outs
rol
rdmsr
xor
out
mov
cmp
mov
fdivr
pop
sub
mov
aas
ds
adc
loopne
inc
das
mov
fld
sub
test
xchg
cmps
movq
in
xchg
jmp
ja
(bad)
sar
xlat
shl
ins
inc
das
and
cli
mov
mov
lods
pop
daa
or
aad
add
mov
or
jns
jnp
jmp
call
or
pop
pop
ins
fstp
(bad)
out
pop
mov
retf
repz
inc
aaa
hlt
xchg
ficomp
ret
mov
push
cmps
and
out
or
sysexit
dec
inc
add
adc
mov
lea
iret
and
mov
fidivr
jle
repnz
jl
jb
in
mov
iret
add
int
adc
fist
inc
sbb
sub
pop
sub
mov
inc
fidiv
out
jae
jo
jo
lea
rcr
aaa
adc
jbe
adc
push
mov
pop
mov
leave
(bad)
fmul
ins
jl
cmp
jp
pusha
push
xor
adc
dec
xlat
stos
rcl
sbb
je
fsub
movs
sbb
sahf
sahf
mov
sbb
push
in
(bad)
sahf
pop
inc
lods
xor
jmp
stos
jo
cmp
or
mov
call
rcl
iret
dec
and
je
push
sub
adc
loope
and
push
sahf
cmp
pop
push
inc
inc
lea
and
and
ds
jns
outs
daa
test
add
and
push
cwde
sbb
cmp
pop
or
push
addr16
pop
push
rcl
cmp
xchg
aaa
push
pop
or
ret
shl
lods
xchg
repz
mov
fidiv
not
ret
push
loopne
fdivr
in
and
sub
cmp
sub
into
int
lea
fisttp
add
inc
test
int3
fdiv
mov
je
pop
jmp
xchg
push
pop
cmp
aad
xchg
cmovae
cmp
fst
dec
fcmovnu
xor
pop
adc
inc
das
jmp
repz
xor
jne
pop
(bad)
std
jecxz
sub
xchg
loope
pop
cmps
push
leave
fimul
(bad)
faddp
push
cmp
out
(bad)
add
es
jecxz
xchg
cmps
sahf
shl
movs
mov
icebp
test
mov
push
ret
mov
push
xchg
daa
push
inc
jne
adc
int
or
push
ret
nop
(bad)
mov
retf
jecxz
and
ins
dec
adc
rol
adc
pcmpeqb
gs
add
cmps
test
js
and
xor
data16
sub
sbb
xchg
pop
sbb
xchg
adc
push
cs
cmps
rol
dec
adc
lds
stc
(bad)
lock
xchg
and
mov
sub
mov
dec
inc
popa
fwait
jbe
fldenv
pushf
sub
cwde
arpl
int
in
cmp
jne
push
add
retf
pop
out
dec
mov
aam
js
test
iret
jge
shl
mov
push
out
cmp
imul
stos
mov
inc
fisttp
push
inc
xor
daa
mov
mov
mov
xchg
clc
push
sar
movs
mov
push
add
ins
push
mov
xchg
mov
test
sub
loop
ss
xor
push
imul
mov
xchg
jo
add
(bad)
iret
or
std
xchg
icebp
or
ror
outs
add
cld
(bad)
pop
test
movs
add
idiv
push
or
xlat
pop
sbb
ins
out
(bad)
mov
add
jmp
icebp
mov
jno
sbb
rcl
mov
inc
in
xor
xchg
mov
aam
cmps
pop
mov
and
xchg
mov
push
mov
mov
inc
push
jmp
push
leave
jp
adc
fcmove
fsub
sti
sti
cdq
inc
xor
hlt
(bad)
and
ror
cmp
sti
jnp
mov
hlt
ja
adc
popa
fstp
jl
push
leave
je
cmp
adc
xor
add
rol
mov
sbb
(bad)
and
pop
das
bound
jno
dec
in
inc
(bad)
fild
mov
pushf
xchg
cmp
aad
imul
loopne
test
cdq
ja
not
pop
xor
dec
add
dec
cli
pop
jmp
aas
adc
and
pusha
out
mov
in
inc
lds
jbe
bound
sub
sti
push
adc
add
neg
sar
jns
sahf
and
xor
cdq
ins
dec
cmp
mov
out
dec
jge
jne
rol
or
push
cmps
ror
dec
int
mov
sahf
or
int3
xor
sub
mov
mov
adc
or
cwde
movs
repnz
cli
jecxz
jp
jecxz
adc
add
dec
mov
cmp
dec
rcr
popf
in
stc
dec
xchg
push
adc
into
xchg
pop
call
imul
xor
nop
jecxz
xor
push
popa
mov
lock
and
or
inc
adc
imul
xor
test
shl
dec
adc
cmc
shl
loopne
out
mov
mov
cmp
dec
jmp
cmp
fdivr
out
addr16
push
les
jne
mov
push
out
and
pop
dec
ret
imul
or
(bad)
cmp
in
jbe
inc
mov
in
push
mov
sbb
sbb
adc
cs
mov
in
jmp
jp
in
loop
repnz
lds
push
out
rcr
push
mov
inc
imul
mov
push
test
push
pop
jmp
je
xchg
pop
popf
sbb
sbb
xor
dec
js
shl
sbb
add
inc
in
ss
sub
fld
and
sbb
xchg
or
mov
cmp
pop
mov
int3
inc
sahf
xchg
push
dec
test
(bad)
loope
xchg
sbb
sub
shr
bound
mov
and
lahf
(bad)
jle
not
pushf
sbb
or
ret
xchg
(bad)
ins
in
ds
add
dec
fadd
inc
add
or
dec
in
xchg
je
cwde
cld
mov
mov
mov
mov
mov
push
push
mov
cmps
push
ins
add
leave
cdq
not
scas
(bad)
repz
outs
loope
jg
jnp
push
sub
jg
sbb
add
mov
adc
cmps
test
push
or
shl
mov
dec
lea
int3
cmc
test
pop
mov
mov
jae
pop
jle
cli
adc
pop
push
mov
mov
push
cmp
(bad)
mov
sub
sbb
mov
cdq
cmp
loopne
addr16
push
into
in
ret
retf
cmp
add
add
cmps
xchg
cmps
ja
mov
jb
daa
sar
in
in
outs
shl
test
cmp
dec
bound
(bad)
jle
push
push
xchg
sub
xchg
ret
add
lods
repz
lods
addr16
int
or
sub
daa
mov
and
scas
pop
in
adc
cmp
mov
cmp
(bad)
(bad)
jo
sti
popa
sub
aas
ret
cwde
sbb
pop
add
ds
fucomip
mov
scas
sub
aad
test
or
add
adc
out
cmc
test
xchg
jno
adc
xchg
mov
dec
test
jbe
cdq
jb
or
pop
pop
mov
std
call
push
(bad)
ret
xlat
jne
icebp
gs
ret
mov
test
sbb
daa
lods
sub
push
push
nop
out
jns
mov
ret
push
push
scas
xchg
cmc
sar
or
inc
mov
fimul
(bad)
jp
and
fistp
call
fldenv
sbb
jb
addr16
pop
push
jge
adc
fwait
neg
sar
ds
(bad)
jns
pop
mov
jmp
xchg
jns
pop
cmp
shl
bnd
mov
stos
ds
xchg
and
in
ficomp
fsub
enter
nop
mov
test
imul
pushf
sbb
jmp
jb
ja
inc
mov
mov
bound
mov
scas
ins
pushf
and
lods
out
scas
cmp
add
mov
or
jl
mov
xchg
push
cmc
lds
push
jno
gs
and
fild
aam
cmps
movs
mov
dec
imul
or
cmp
mov
jns
adc
sub
fwait
add
jmp
pop
mov
adc
loope
xor
cmp
hlt
mov
imul
xor
adc
shl
or
adc
ret
jecxz
in
mov
push
adc
(bad)
sbb
retf
push
ins
cmps
cmc
stos
outs
out
xchg
push
cmps
pop
pop
push
or
pop
arpl
test
cld
dec
push
xchg
lahf
cmc
push
jmp
jno
push
jns
stos
and
repz
ret
or
lea
xchg
in
push
pop
and
cmp
sub
(bad)
clc
push
cmp
inc
test
repz
sbb
(bad)
lahf
aas
fcom
jmp
and
inc
out
jle
dec
xchg
aas
dec
jmp
add
(bad)
push
pop
sub
xor
cmp
enter
jbe
jnp
dec
jns
push
jnp
ins
jo
cmp
cmps
xor
cmp
aam
pop
lods
test
mov
mov
es
test
shr
jmp
bound
mov
int3
out
cli
retf
cmps
fstp
xor
clc
sub
ret
aam
(bad)
xor
inc
pop
imul
pop
fistp
fs
mov
dec
pop
pusha
xor
inc
fwait
cmp
push
out
cwde
jmp
pop
call
jmp
xchg
push
icebp
ds
enter
test
into
mov
push
mov
daa
sar
and
gs
sub
pop
push
(bad)
or
fst
fwait
das
nop/reserved
pop
(bad)
daa
xor
dec
sti
nop
adc
test
push
xchg
movs
and
adc
pop
pusha
test
dec
sar
(bad)
in
sbb
add
add
lock
call
adc
mov
jbe
popf
adc
cmp
test
stos
cli
push
mov
pop
adc
ret
test
mov
popf
loopne
inc
inc
push
inc
cmp
mov
dec
add
in
adc
imul
inc
ret
sbb
or
outs
sbb
mov
mov
repz
jle
imul
loop
and
jne
es
push
pop
mov
cmp
jnp
loop
adc
lods
cmp
jo
or
cmp
push
sbb
cwde
sub
(bad)
daa
les
jecxz
mov
sbb
or
and
mov
mov
pop
scas
xchg
fs
sub
cwde
sbb
jae
jle
mov
out
inc
rcr
and
inc
mov
in
inc
aas
enter
add
jae
jl
imul
push
jo
mov
pop
imul
mov
ror
arpl
test
scas
fwait
xor
pop
mov
push
fdivr
out
push
jecxz
iret
xchg
fsub
mov
sub
imul
and
mov
or
push
shl
lock
jge
xor
sbb
in
cmps
sbb
mov
fidivr
test
stc
pop
jno
xor
pushf
push
clc
movaps
lds
jg
lahf
enter
cmps
lods
mov
sub
xchg
inc
test
push
add
pop
xchg
cmps
or
ja
out
cmova
ror
hlt
call
jbe
sahf
fwait
mov
fstp
aas
jl
mov
dec
jae
dec
(bad)
xor
(bad)
fbld
xchg
pusha
add
outs
in
jmp
adc
pop
push
ror
call
push
and
(bad)
pusha
out
ret
xchg
mov
cmps
mov
mov
pusha
fiadd
pop
(bad)
lea
mov
jle
xchg
mov
fidivr
mov
loopne
xchg
(bad)
sti
scas
fidivr
test
gs
mov
cmp
bound
jg
lds
into
dec
xchg
sbb
test
out
cli
shr
movs
aas
icebp
dec
int3
xchg
add
inc
lods
daa
mov
dec
mov
and
sar
out
pop
scas
pop
(bad)
shl
out
mov
xchg
loopne
fwait
out
mov
(bad)
cmp
jge
xchg
mov
cmp
mov
inc
sahf
cdq
dec
xchg
fwait
push
push
push
xor
pop
arpl
cmps
cmp
in
lock
pop
shr
addr16
inc
adc
xor
sbb
cld
pushf
ret
or
jns
loopne
xchg
lock
test
lods
jne
out
adc
and
sbb
xor
xchg
out
cmp
ja
test
cs
inc
mov
xor
aam
in
and
sub
pop
ret
xchg
mov
cmc
xchg
shr
cld
mov
repnz
mov
pop
dec
xor
cli
scas
mov
mov
ret
pop
cli
sub
pop
addr16
xor
aam
xchg
inc
test
pop
xor
or
sahf
jecxz
clc
adc
movs
fld
out
mov
and
xchg
adc
adc
adc
xchg
mov
and
mov
sbb
lahf
movs
in
add
add
cwde
push
xor
xchg
icebp
add
xchg
add
aad
ficomp
sub
mov
mov
jb
cmp
add
mov
and
stos
repnz
adc
movs
sub
inc
scas
xor
adc
ret
pop
or
js
cmc
punpckhdq
sahf
repz
cmp
inc
jecxz
or
mov
rol
jmp
cli
dec
jecxz
jne
out
mov
pusha
or
outs
sbb
jnp
push
fcmovbe
nop
fbld
mov
jmp
sub
mov
ror
(bad)
xor
pop
xchg
cli
pop
sbb
fisttp
clc
mov
jl
shr
xor
arpl
imul
das
jg
ss
sbb
push
scas
add
mov
and
cmp
inc
push
or
ja
inc
jecxz
fisttp
adc
or
aad
adc
sti
add
pop
jnp
(bad)
rcl
mov
push
in
or
hlt
fdiv
fs
out
cmc
mov
sbb
aam
mov
jl
(bad)
or
lods
cdq
jno
add
push
sub
push
adc
xchg
movs
cmps
lock
(bad)
mov
call
or
dec
outs
pop
test
scas
adc
mov
cmp
test
pop
and
or
test
lds
mov
sub
cmps
test
repz
imul
dec
xor
arpl
cmp
sahf
inc
xlat
push
cmps
sub
scas
jmp
fwait
call
jae
pop
outs
jmp
loope
mov
sbb
shl
and
mov
dec
daa
mov
not
sbb
arpl
inc
call
ficomp
and
jns
in
or
push
pusha
into
mov
mov
pop
push
push
retf
adc
pop
jmp
pop
test
sub
jmp
sub
xchg
nop
push
xchg
xlat
rol
lds
dec
mov
jb
jmp
cmp
mov
pusha
aas
shl
inc
jne
repnz
retf
in
imul
pop
dec
and
push
shl
pop
xor
in
fucomp
pop
xchg
adc
mov
xchg
xchg
pop
jmp
inc
mov
das
sbb
xor
rcr
push
(bad)
ss
inc
mov
push
(bad)
xlat
pop
in
jecxz
retf
bound
int
and
xor
push
div
sahf
jno
scas
pop
mov
lds
lods
or
cmp
scas
add
inc
push
sub
sub
sbb
inc
ror
adc
fwait
je
mov
std
xor
repnz
adc
fdiv
xchg
adc
mov
jbe
pop
add
shr
pop
inc
int3
xchg
mov
pop
arpl
ficom
pop
sti
jo
xor
pop
push
sub
push
cmps
loope
inc
gs
dec
pop
inc
mov
inc
or
xchg
shl
out
mul
cmp
lds
ficom
pop
daa
pop
xchg
adc
clc
push
bound
fidivr
ja
jecxz
pop
mov
scas
mov
push
sub
test
push
ins
sbb
mov
mov
into
aas
jo
and
sub
enter
imul
neg
lahf
ret
rcl
sbb
arpl
je
(bad)
and
(bad)
pop
sbb
cmps
and
pop
test
cmps
adc
aad
pop
mov
(bad)
adc
pop
mov
jnp
mov
push
loope
scas
or
repz
push
ja
xor
pop
pop
mov
inc
add
in
sbb
xlat
push
fisttp
inc
inc
dec
mov
mov
call
pop
ds
mov
mov
mov
shr
pop
xchg
jle
leave
es
movs
icebp
xchg
mov
movs
ficom
in
cmp
cdq
in
aam
mov
(bad)
fs
adc
xchg
or
xchg
xchg
dec
iret
jmp
jo
mov
inc
lahf
(bad)
xchg
leave
aaa
inc
jmp
(bad)
mov
and
adc
push
stos
jg
xchg
adc
xchg
push
pushf
dec
aam
lods
rcr
jnp
test
xor
dec
hlt
or
test
or
dec
and
mov
es
mov
sub
les
icebp
sahf
xchg
(bad)
push
mov
iret
sub
and
pushf
mov
das
push
popa
dec
or
push
pushf
ja
mov
and
pop
or
and
out
cmp
ins
in
mov
dec
inc
mov
xlat
ror
cli
pop
retf
add
adc
popa
adc
jae
das
mov
stos
fucomi
sub
mov
aam
inc
or
sti
adc
cmp
dec
jp
in
sub
adc
test
mov
push
test
pop
jo
mov
movs
sub
mov
sbb
clc
mov
mov
mov
and
nop
inc
cmp
pusha
mov
add
add
jle
push
xor
inc
nop
lds
inc
sub
js
imul
test
hlt
(bad)
mov
fist
cwde
(bad)
sub
(bad)
xchg
fs
inc
xor
scas
pop
xchg
adc
dec
mov
and
add
ja
jmp
clc
outs
(bad)
mov
mov
dec
or
dec
push
xor
hlt
pop
mov
inc
jb
and
xor
add
and
pop
stos
add
stc
(bad)
and
jne
push
into
xchg
and
xchg
cmps
push
pop
push
cmp
sti
add
mov
test
data16
addr16
movs
test
cmc
js
adc
mov
fs
bound
pop
add
scas
test
sub
call
imul
sbb
jmp
scas
cwde
xor
mov
xchg
and
in
test
push
dec
xchg
push
push
xchg
hlt
push
test
and
push
sahf
sub
inc
js
push
jbe
mov
cmp
lahf
cmp
dec
cmp
ins
sub
or
inc
int
rcr
xchg
dec
lods
adc
add
xor
jl
mov
xor
inc
jnp
sahf
jnp
or
dec
mov
jmp
xor
test
cmp
sub
adc
mov
rol
rol
loopne
xchg
pop
retf
out
mov
sub
loopne
cmp
add
dec
loopne
xor
add
cmps
or
add
int3
pusha
clc
push
xlat
addr16
mov
or
push
aas
dec
mov
cwde
push
cmc
and
inc
mov
pusha
cld
repz
loope
iret
cs
hlt
dec
outs
rcr
mov
lea
das
dec
loope
xor
lea
sar
jne
sub
push
test
js
pop
pop
jle
retf
mov
mov
xchg
xchg
test
add
dec
aas
int
push
int
das
and
fiadd
xchg
pop
xchg
xchg
(bad)
or
xor
stc
pop
gs
gs
adc
fucomip
gs
mov
ret
leave
pop
mov
shr
cmps
outs
and
fs
bound
mov
dec
pop
sub
mov
mov
cmp
jmp
mov
movs
mov
data16
loop
xchg
les
adc
inc
in
call
pop
xchg
sbb
push
cmps
dec
(bad)
mov
cwde
sbb
xchg
retf
(bad)
sub
add
retf
in
mov
cmp
xchg
stos
push
mov
clc
inc
and
sub
gs
rcl
fdivr
push
ficom
sbb
push
push
int
cld
push
cmc
repz
sbb
ror
ret
cli
loop
pop
jne
fsub
pop
xor
fcomp
mov
mov
jle
sbb
push
je
jmp
cs
xor
pop
es
mov
and
fwait
mov
mov
xchg
xchg
ja
leave
sub
jg
jns
or
jbe
mov
mov
mov
icebp
mul
xor
neg
sti
loopne
xor
movs
fld
push
dec
fsubr
imul
cwde
mov
mov
sti
sar
mov
iret
dec
jg
or
fnstenv
cmp
mov
jbe
out
push
and
xchg
ins
and
xor
movs
test
les
out
call
addr16
sbb
jnp
push
mov
hlt
mov
out
mov
icebp
dec
ret
or
cmp
push
(bad)
ss
loop
cmp
stos
fsubr
or
div
sbb
or
ret
stos
sbb
cmp
mov
xchg
ret
mov
inc
sbb
push
jns
jbe
mov
or
mov
movs
and
xchg
mov
jp
sahf
aam
bound
fld
out
(bad)
in
int
lahf
jmp
imul
sbb
jmp
jo
inc
and
mov
mov
mov
outs
test
add
adc
mov
int3
fiadd
lods
jmp
sub
mov
repz
cmp
xchg
rcr
jne
push
dec
add
int3
dec
mov
mov
mov
cmp
adc
in
bound
inc
mov
fs
xchg
jo
jno
je
xor
xchg
ja
sbb
cs
repz
mov
pop
or
int3
and
push
out
ins
fldcw
jmp
fdiv
in
sbb
xor
xor
stc
push
dec
fxch
jge
ficomp
and
(bad)
ins
loope
push
js
dec
fiadd
in
mov
das
pop
and
je
repz
es
pop
adc
fs
or
popa
cmc
sar
cmp
in
push
rol
scas
jae
sub
push
ret
gs
dec
sbb
pop
(bad)
icebp
pop
xor
ret
inc
std
xor
xchg
into
mul
sub
ins
popf
sub
stos
sub
and
cld
adc
fcmovbe
rcr
jg
push
add
cmp
sti
xchg
xor
adc
into
ret
adc
inc
jge
jo
pusha
inc
lock
(bad)
(bad)
sahf
add
add
std
out
lahf
addr16
xor
push
dec
faddp
xchg
pop
loopne
fidivr
ffreep
test
fild
in
sub
xchg
jo
les
pop
xchg
(bad)
cmp
retf
int3
aam
ins
dec
test
xor
jge
lahf
aaa
cli
mov
cmp
bts
adc
sbb
stc
xchg
xor
mov
ret
inc
mov
repz
add
cmp
imul
sub
pop
xor
dec
loop
jo
xor
push
loope
(bad)
ror
add
fcmovb
out
imul
mov
mov
cwde
mov
pop
jns
icebp
imul
jl
or
cwde
test
fld
daa
shr
aad
sbb
push
and
shl
test
test
int3
mov
lods
cmp
sbb
push
cmc
adc
mov
jle
or
test
inc
dec
xor
sbb
repnz
inc
and
dec
or
or
xchg
aas
imul
rcl
scas
jp
or
test
xchg
lock
test
test
mov
sbb
pusha
aaa
jo
hlt
adc
pop
in
or
xor
xor
(bad)
mov
push
sbb
xor
xchg
ret
xchg
and
stos
sbb
add
adc
push
lock
add
xchg
bnd
test
jbe
mov
imul
mov
out
jbe
cmps
es
cmps
outs
jle
test
jns
data16
scas
dec
es
mov
dec
and
xchg
mov
mov
(bad)
pop
mov
dec
loope
push
in
ja
push
call
test
sbb
stc
adc
inc
pop
mov
inc
test
or
loopne
shl
mov
mov
xor
shl
pop
jno
dec
jo
jne
mov
sub
ins
(bad)
out
pushf
mov
mov
xchg
dec
adc
inc
jmp
add
pop
cdq
jo
or
cmp
fldcw
cli
hlt
test
ds
into
pop
fwait
cwde
cmp
aaa
or
(bad)
mov
stc
int
daa
(bad)
cmp
inc
adc
lock
fnstcw
retf
sysenter
pusha
loope
sbb
add
jmp
push
pcmpeqb
les
push
out
es
add
outs
aas
jle
in
push
xchg
dec
mov
mov
pop
dec
sbb
sub
loopne
ds
add
adc
mov
push
rcl
mov
enter
push
and
add
inc
cmp
mov
cmp
pop
jecxz
mov
pop
cmps
iret
cmp
cli
cmps
lock
xchg
push
add
or
add
loopne
in
inc
mov
sub
aam
std
cmps
inc
sub
hlt
call
pshufw
fldcw
popa
mov
mov
sub
je
push
loop
adc
popf
inc
and
xchg
xchg
cmp
dec
std
or
jmp
rcl
inc
fwait
loope
dec
mov
neg
jae
cmp
aad
lahf
or
dec
inc
pop
aam
int3
data16
pop
(bad)
push
mov
dec
iret
pop
add
hlt
jbe
sar
leave
stos
dec
pop
jo
mov
dec
fwait
push
mov
dec
jb
test
cld
sbb
loopne
loopne
rol
pop
cwde
sub
jle
repz
(bad)
aaa
cmp
push
xchg
bound
dec
cwde
xor
lahf
xchg
adc
or
call
ss
xchg
or
les
inc
pop
and
dec
jecxz
test
(bad)
cmp
fldenv
inc
mov
mov
adc
(bad)
mov
jmp
cwde
retf
push
cld
pop
in
ins
cdq
or
jmp
ja
call
and
ret
jns
enter
xchg
cli
xchg
pop
retf
pop
jl
icebp
pop
add
or
bound
mov
sbb
add
jbe
mov
adc
outs
dec
adc
es
pshufw
mov
aam
adc
ds
add
inc
int
rcr
sbb
sub
xor
jb
test
cld
push
mov
fiadd
loop
cmp
dec
ds
pop
retf
mov
jmp
repz
arpl
xchg
outs
nop
mov
in
pavgw
ror
inc
int
jg
ret
into
inc
mov
mov
jp
sbb
pop
in
icebp
fist
push
and
sbb
mov
xlat
not
lds
ja
int
call
repnz
xchg
cmps
jo
inc
test
ds
and
test
cmps
sbb
pop
and
inc
gs
stos
dec
retf
imul
popa
lods
or
ds
jle
or
movs
repz
out
(bad)
sub
aas
ja
jmp
inc
jnp
add
dec
in
icebp
mov
sub
rcr
les
xchg
mov
pop
ror
loop
dec
(bad)
pop
inc
add
xchg
or
jne
addr16
push
mov
sbb
outs
xchg
mov
pop
retf
out
gs
pop
lds
scas
push
sbb
scas
cmc
mov
and
jmp
dec
iret
sbb
js
dec
jp
push
sub
ins
pop
fsubr
inc
inc
rcl
mov
pop
cli
mov
hlt
ficomp
add
int
dec
jle
rcr
in
aam
mov
dec
inc
push
addr16
inc
in
adc
xor
scas
movs
frstor
ficomp
in
(bad)
fldcw
jle
jp
xlat
or
stc
js
retf
and
dec
cld
push
test
xchg
loope
fcmovb
ret
lods
mov
scas
int3
adc
outs
mul
adc
ss
xchg
pop
mov
add
mov
scas
aad
push
xchg
xchg
push
inc
mov
popa
leave
or
mov
pop
loopne
jbe
or
lods
stos
(bad)
xchg
fsubr
popf
dec
mov
jb
imul
neg
push
mov
fsqrt
jg
scas
xor
addr16
jmp
push
lea
test
and
sbb
in
dec
popa
xchg
inc
bnd
pop
mov
adc
hlt
xor
pop
cmp
mov
ins
push
leave
jno
dec
(bad)
mov
and
ja
fcomp
(bad)
fsubr
icebp
xor
xchg
xchg
je
lahf
lds
jae
cmps
xchg
cwde
jnp
in
jmp
daa
arpl
xchg
cmp
jp
inc
aaa
inc
jno
(bad)
sub
cmp
add
movs
js
or
and
sub
push
(bad)
into
js
imul
adc
shl
repz
(bad)
dec
pop
je
hlt
int3
dec
cwde
mov
mov
int3
(bad)
cmp
iret
or
cmp
xchg
mov
add
and
adc
pop
and
push
in
cli
mov
xchg
adc
and
fisub
xchg
mov
(bad)
repnz
out
push
popa
inc
mov
int3
imul
mov
(bad)
std
(bad)
daa
bound
fwait
shr
clc
and
outs
bound
fdiv
push
stos
cmps
ins
dec
(bad)
pop
push
inc
dec
push
into
fs
in
mov
dec
cmp
or
in
fild
jmp
das
sub
test
cdq
sub
gs
pop
cmc
inc
push
mov
mov
fisub
jge
jo
inc
lods
cmc
cmp
pop
cmps
lahf
cdq
in
daa
xchg
jp
jmp
leave
test
push
mov
cmp
inc
(bad)
jg
int3
ja
aaa
mov
fwait
ins
out
add
pop
aad
mov
in
sbb
inc
scas
(bad)
inc
aam
xor
adc
fsubr
jb
cmp
out
jg
ja
mov
shr
stos
mov
mov
mov
(bad)
xor
add
scas
push
sbb
mul
(bad)
xrelease
imul
mov
psubb
ja
call
xor
mov
and
jnp
cwde
neg
pop
clc
adc
add
xchg
push
and
lds
repnz
scas
push
dec
lea
cld
mov
mov
rcr
or
inc
pop
lahf
int3
add
pop
in
cmp
jmp
in
(bad)
mov
pop
cmp
iret
dec
fiadd
call
stos
push
ins
push
test
repnz
or
movs
fmul
cli
xchg
fstp
mov
push
mov
add
aas
icebp
das
iret
sti
gs
popa
mov
icebp
ds
repnz
je
push
in
test
test
(bad)
int
sbb
jp
rcl
in
test
js
and
stos
mov
mov
mov
adc
xor
jmp
out
ret
arpl
fdivr
jg
jge
mov
mov
mov
mov
mov
push
fdivr
fucom
dec
test
add
imul
and
dec
in
jno
and
pop
mov
adc
out
daa
xchg
jb
xor
sbb
scas
or
jb
mov
mov
lock
push
js
mov
aaa
sub
lahf
pop
iret
cld
ja
dec
inc
cmp
stos
push
addr16
sbb
retf
in
mov
repz
jns
dec
lock
pop
xor
out
pop
jnp
retf
jb
jnp
lods
test
adc
les
imul
and
xor
adc
mov
xchg
jp
scas
in
jnp
inc
std
jo
scas
lods
dec
cmc
xchg
shr
aaa
outs
inc
addr16
clc
pop
test
js
mov
test
js
(bad)
stc
pusha
(bad)
cmc
adc
inc
sub
ret
pop
clc
enter
inc
or
shr
(bad)
repz
mov
push
jecxz
sbb
mov
fisubr
test
ins
xchg
dec
cdq
and
mov
dec
jg
popf
icebp
and
aaa
jne
in
mov
iret
jl
cdq
xchg
xchg
adc
add
pusha
jg
adc
jl
push
fwait
mov
pop
mov
xlat
or
clc
jg
xor
mov
scas
icebp
push
cmc
xor
cmp
cli
sbb
fsubrp
jg
(bad)
lods
or
pusha
inc
pop
lods
loop
sbb
jmp
and
jecxz
loope
sub
jmp
dec
js
xchg
int3
jmp
dec
inc
push
hlt
(bad)
jp
jmp
mov
adc
adc
sbb
mov
mov
push
aad
sub
cmps
add
test
xor
enter
gs
cmp
stc
rcl
inc
dec
dec
inc
mov
dec
mov
push
ss
pop
mov
sub
clc
out
or
and
adc
sub
retf
(bad)
gs
push
add
mov
push
mov
loop
cmp
cmc
pop
mov
and
sahf
pushf
int3
jle
daa
ins
add
and
push
or
jo
popf
retf
sub
xor
test
outs
(bad)
jecxz
stos
cmp
outs
rcr
dec
inc
pop
xchg
rol
jecxz
scas
jns
hlt
mov
and
jmp
mov
cld
xchg
repz
sahf
mov
cwde
aas
add
fnstsw
enter
mov
add
sub
ret
jp
adc
addr16
aas
xchg
pushf
data16
sub
and
out
cdq
lods
repz
fwait
and
sub
(bad)
lahf
mov
(bad)
xor
lods
cmp
aam
and
pop
mov
rcl
cmc
xchg
(bad)
shr
mov
mov
repz
mov
ret
fbstp
adc
outs
aaa
sub
movs
sahf
inc
xchg
dec
mov
mov
js
ja
ins
in
push
adc
xchg
lods
ins
aaa
movs
daa
stos
ins
inc
xor
leave
mul
jmp
inc
int
push
sbb
or
(bad)
clc
or
mov
addr16
cmp
idiv
shr
enter
out
popa
push
rcl
jmp
sbb
js
add
cmp
pop
jecxz
jg
xchg
sbb
ficom
jo
mov
rcr
sahf
push
pop
dec
adc
dec
and
cmp
adc
push
imul
(bad)
gs
push
dec
mov
rcr
dec
mov
cmp
sub
adc
and
sahf
dec
ret
std
sahf
shr
pop
fnstsw
dec
dec
daa
int
adc
jb
inc
jnp
ss
clc
push
fdivr
cwde
jo
popf
fidivr
xchg
js
shl
sub
out
cli
lods
jno
add
(bad)
adc
daa
fs
cs
push
in
sbb
mov
inc
xchg
mov
inc
jae
out
movs
or
in
inc
mov
mov
aaa
fldenv
mov
retf
call
enter
jmp
std
and
add
imul
(bad)
fsubr
mov
push
sub
mov
loope
cli
or
mov
xchg
inc
je
lods
pushf
fldcw
es
das
rcl
and
pop
jmp
dec
hlt
xchg
shr
scas
or
or
jno
pop
shl
fmul
aaa
jle
jge
pop
in
push
add
jmp
mov
inc
aas
mov
test
and
adc
test
inc
jmp
sub
jl
jl
mov
cmps
xchg
scas
mov
xchg
das
cld
cmc
pop
out
dec
and
mov
adc
inc
add
jmp
cmp
jle
movs
stos
test
mov
push
mov
xchg
and
test
in
call
ss
lahf
xchg
inc
loopne
ds
adc
push
movs
jge
out
popa
push
pop
retf
dec
std
out
push
out
pop
fisub
(bad)
sbb
add
dec
fisubr
inc
sti
leave
les
pop
jp
(bad)
ficomp
mov
sub
pop
inc
push
hlt
mov
outs
iret
inc
out
cmp
sar
pop
ror
repnz
and
sub
sub
push
shr
bound
outs
test
sahf
xchg
adc
outs
and
mov
dec
push
imul
jns
push
and
sbb
in
push
mov
icebp
jecxz
adc
scas
jnp
xchg
cmp
iret
push
cvtpi2ps
movs
retf
cld
cld
iret
add
push
into
push
jle
or
mov
xrelease
xchg
in
ins
fidiv
in
call
mov
(bad)
mov
inc
adc
addr16
mov
sub
rcr
or
xchg
pop
mov
enter
pusha
arpl
pop
mov
mov
aas
and
push
xor
pushf
lods
fisub
aas
xor
push
data16
pop
dec
aad
dec
rcr
mov
(bad)
lahf
mov
std
sbb
rcr
(bad)
jae
int3
adc
cmp
push
sub
sbb
sub
or
out
mov
add
or
push
push
fcmovbe
sar
or
mov
push
fisub
sbb
and
movs
mov
fptan
adc
out
cmp
hlt
dec
cmp
ds
loope
inc
inc
leave
push
sar
mov
mov
add
cmps
push
dec
dec
mov
inc
mov
cmps
fdivr
jl
test
in
and
sbb
xchg
push
jnp
mov
mov
mov
inc
retf
imul
pop
repz
retf
inc
or
loopne
retf
lahf
loopne
cmps
call
cmp
stos
(bad)
or
sahf
cdq
pop
test
arpl
shr
mov
sub
xchg
inc
cld
div
or
in
xor
in
or
clc
lahf
jge
adc
xor
aam
div
cmp
pop
jne
mov
mov
je
ret
or
adc
dec
pop
shl
sub
call
pop
and
(bad)
adc
ficomp
or
inc
sub
popf
adc
mov
test
add
sub
or
(bad)
aam
movs
outs
es
xchg
adc
fimul
or
dec
mov
jl
movs
out
adc
or
aad
jo
(bad)
in
mov
scas
(bad)
dec
out
scas
push
and
std
cmps
repnz
jno
fyl2xp1
cli
mov
pop
cli
mov
mov
pop
ds
or
cmps
in
aam
imul
xor
push
into
ins
inc
sbb
mov
jp
ins
cmps
movs
cmp
or
fdivr
push
dec
adc
push
xor
inc
addr16
sub
mov
pop
sub
inc
pop
hlt
into
cmp
xchg
in
aaa
jb
and
xlat
leave
cmc
push
neg
mov
sub
mov
xchg
(bad)
(bad)
das
pop
sbb
xchg
(bad)
imul
jns
cmp
es
fild
fmul
rcr
sub
mov
aad
add
pop
adc
scas
lods
dec
leave
mov
test
dec
ins
or
mov
cmp
(bad)
xchg
mov
jne
mov
and
lods
fisubr
test
aas
sar
cdq
cs
jbe
outs
jge
mov
sub
retf
jl
fimul
fcmovnb
mov
push
test
sub
push
fwait
sti
fcmovu
ficom
retf
xchg
mov
stos
pop
dec
sub
mov
test
jne
mov
loope
test
(bad)
lahf
scas
mov
mov
adc
imul
lahf
iret
or
cmc
xchg
sub
mov
pop
lock
(bad)
and
inc
movs
test
adc
fisub
mov
and
ror
aas
adc
cwde
repz
cmp
mov
push
jge
mov
stos
cmps
(bad)
fadd
stos
cmp
add
in
outs
stos
int
add
lahf
xchg
adc
fldcw
add
dec
retf
mov
pop
jge
dec
sub
aas
mov
lock
mov
inc
scas
call
int
fdiv
sti
fst
and
rcr
lahf
cdq
mov
aas
xchg
jmp
cdq
imul
cmps
push
loope
xor
retf
push
jbe
mov
push
cwde
stc
shl
and
test
pop
sti
pop
dec
cmp
and
stc
jp
sti
inc
es
adc
adc
jecxz
cs
or
aam
icebp
dec
mov
xchg
dec
mov
mov
call
mov
pusha
adc
lahf
cmp
inc
ret
lods
or
in
mov
push
xchg
xor
push
pop
mov
jo
push
enter
inc
idiv
loop
adc
pop
sub
adc
pop
or
ret
push
xchg
fdiv
and
inc
push
sub
sbb
lock
daa
mov
adc
xchg
xor
sub
push
push
mov
loop
popf
enter
shr
cld
leave
adc
jmp
enter
and
add
cmp
dec
mov
ror
shr
mov
cmove
inc
add
pop
lods
aaa
cmps
hlt
ror
mov
and
scas
mov
jne
mov
fstp
pop
mov
jmp
push
add
(bad)
or
lahf
call
push
adc
sbb
out
jmp
xor
adc
scas
push
fcmovnu
push
or
and
aad
nop
sub
stos
dec
pusha
pop
push
mov
popf
ds
add
int
loope
aam
or
repz
loope
loope
stos
pop
xchg
mov
pop
cli
cld
sbb
dec
out
push
or
mov
add
shr
adc
xchg
shl
mov
mov
lods
mul
add
sub
inc
cwde
scas
xor
xor
dec
mov
rol
jl
daa
mov
push
mov
int
aad
jle
inc
nop
enter
and
cmp
mov
fimul
xchg
outs
jg
fdiv
cmps
pushf
fst
mov
daa
int3
push
cwde
mov
std
in
out
icebp
pop
or
data16
leave
movs
pop
icebp
add
lea
jmp
and
add
dec
fnstenv
scas
imul
cmp
scas
xchg
sub
into
push
lods
jo
std
outs
data16
js
mov
js
mov
std
lods
jae
xchg
xchg
shr
dec
movs
xchg
es
(bad)
jl
add
sahf
add
repnz
ret
sub
test
mov
and
scas
adc
dec
(bad)
outs
or
adc
xchg
jnp
add
ror
pop
push
pop
xchg
and
mov
mov
out
adc
ins
pop
pop
inc
ja
dec
lea
test
xchg
sub
add
ins
mov
stos
push
mov
gs
adc
cmp
fild
aas
ror
std
or
push
in
pop
scas
dec
jnp
dec
xchg
add
push
jg
and
xor
icebp
imul
daa
push
and
or
imul
lea
ficom
cs
jne
xchg
icebp
ds
fadd
ret
sti
test
into
movs
push
push
cmps
inc
mov
push
xchg
mov
inc
mov
fucomip
push
lea
or
mov
jmp
(bad)
jno
cmp
fucomi
loopne
xor
or
(bad)
and
fisub
nop
xor
add
mov
jl
push
cmc
pop
push
scas
test
jle
gs
push
pop
outs
out
cmp
repz
dec
inc
rol
sub
ss
mov
sbb
test
test
rol
sub
push
gs
pop
sub
cmps
sub
push
pop
into
arpl
loope
in
or
add
or
mov
push
clc
jnp
imul
mov
gs
or
addr16
xchg
ret
mov
mov
cmp
fisubr
cdq
dec
jno
(bad)
xor
pop
outs
adc
cli
pop
dec
push
mov
and
add
imul
test
mov
add
pop
cmc
pusha
sub
inc
adc
repz
outs
xchg
sub
sub
inc
retf
fs
xor
dec
push
fisubr
or
jnp
jne
mov
jg
xor
pop
scas
fbld
dec
popa
inc
mov
sub
sbb
in
stos
ja
jo
jmp
lahf
das
cmc
and
(bad)
jb
shl
inc
rol
add
cmps
adc
xor
sar
mov
repz
jmp
push
loopne
fst
cmp
(bad)
sbb
rcl
xor
loopne
cs
pop
out
inc
jecxz
dec
shl
rcl
push
stc
jge
in
lods
xor
cmc
xchg
push
pushf
movs
std
outs
pop
sub
mov
jmp
(bad)
aad
outs
cmc
cmps
sbb
ds
mov
sahf
dec
in
cli
xchg
shl
mov
jo
jg
add
push
inc
leave
test
xor
push
jle
xchg
jmp
les
adc
mov
jb
xchg
ins
or
mov
cmc
div
std
sub
jg
shr
inc
aaa
in
push
xor
xchg
push
(bad)
fbstp
mov
lahf
dec
ja
pop
mov
adc
jl
xchg
adc
arpl
les
pusha
push
ficomp
jecxz
mov
mov
cwde
loopne
xchg
cmp
stc
push
sahf
and
jnp
dec
jmp
pop
push
popa
sbb
in
pusha
call
sti
xchg
mov
movs
push
mov
jmp
xor
mov
out
pop
repz
(bad)
mov
jmp
es
(bad)
mov
pop
sbb
out
mov
cmp
mov
adc
ret
lock
jne
mov
dec
fidivr
scas
adc
adc
(bad)
jmp
jge
jp
pop
inc
xor
cmps
test
and
movs
in
out
jle
das
cmp
std
xchg
and
loop
pop
mov
push
in
popf
xchg
cwde
mov
xchg
pop
cmp
pop
clc
mov
jecxz
outs
dec
stc
lock
data16
jl
into
xchg
mov
mov
and
push
cli
jmp
in
adc
mov
push
mov
xchg
mov
rol
and
jmp
mov
shr
push
rcl
into
pop
sub
test
in
mov
jae
xchg
(bad)
fndisi(8087
pop
aaa
adc
popa
leave
aas
pop
jl
cli
sub
xchg
push
sub
inc
pusha
push
inc
sub
call
jae
or
jmp
shl
mov
pop
lahf
loopne
js
je
retf
push
jb
push
out
xchg
mov
stos
ins
out
ret
dec
hlt
mov
clc
iret
gs
cmp
and
out
mov
adc
jge
cmp
add
in
pop
addr16
xchg
sbb
outs
loop
lock
inc
or
jae
sbb
add
and
loop
aas
xchg
push
mov
dec
call
lahf
and
fist
scas
addr16
shl
pop
mov
push
mov
fstp
xchg
test
sbb
in
cs
sbb
fsub
add
scas
repnz
call
in
add
mov
sti
cmps
mov
dec
add
test
cmp
call
sub
int3
sbb
das
(bad)
push
jmp
les
pop
iret
icebp
inc
sbb
scas
fnsave
je
pop
repnz
retf
frstor
(bad)
scas
adc
ds
cmp
out
std
popa
sbb
mov
xor
scas
sbb
mov
popa
dec
dec
jmp
pop
jae
mov
imul
scas
scas
mov
retf
and
xchg
push
popa
inc
fcmovnbe
push
call
xchg
sti
das
dec
test
aas
cld
push
(bad)
(bad)
call
or
and
dec
cmps
cdq
(bad)
sub
jl
(bad)
jno
dec
or
jb
push
mov
or
dec
jbe
test
or
pop
dec
shl
mov
out
ins
out
scas
hlt
inc
sub
push
dec
cmp
icebp
pop
dec
push
hlt
lods
rol
int3
xchg
loopne
mov
dec
(bad)
cmp
pop
pop
sbb
xchg
call
lea
in
mov
ins
fldln2
js
add
mov
xchg
faddp
shl
sbb
or
ins
mov
add
mov
sbb
repz
loopne
scas
call
shl
adc
mov
test
jno
add
out
inc
aas
das
sub
cmp
fadd
sbb
sti
push
inc
jmp
or
cmp
outs
xor
loope
or
cmps
push
(bad)
jmp
mov
dec
cmc
jmp
into
mov
pop
or
sahf
xor
scas
(bad)
jne
aad
ins
xchg
addr16
dec
jg
adc
test
sub
popf
push
pop
nop
or
mov
lea
jl
je
inc
inc
lds
test
lock
mov
xchg
jecxz
ret
pusha
xchg
adc
pop
arpl
mov
mov
or
cmps
shr
sbb
sbb
inc
ins
cdq
jecxz
ret
dec
sbb
xor
mov
mov
loop
cwde
test
out
pop
dec
mov
(bad)
loop
test
inc
inc
lods
mov
xchg
shl
xchg
scas
mov
jl
sahf
add
cmp
lods
xchg
pop
and
push
retf
mov
pop
out
xchg
stc
and
out
adc
mov
les
mov
call
sub
sub
out
mov
mov
scas
inc
jae
or
cmp
cmc
les
push
(bad)
(bad)
in
adc
bound
sub
sbb
je
inc
pusha
(bad)
sub
adc
dec
ins
jg
aam
or
or
nop
xchg
cmps
aas
xchg
sbb
inc
mov
icebp
aaa
aaa
push
push
test
call
jns
int
and
daa
ja
fstp
or
pop
in
je
je
jno
int
imul
cmp
stc
daa
movs
stos
(bad)
jbe
xor
xlat
sub
(bad)
push
and
adc
sar
retf
xlat
mov
or
cmp
ror
leave
inc
neg
or
mov
sbb
cmp
dec
int
bound
add
push
popf
ret
add
addr16
aas
sbb
dec
scas
imul
jae
xchg
in
imul
xchg
mov
fdivp
iret
stc
mov
dec
mov
mov
xchg
jecxz
cmp
jle
jl
push
ins
arpl
sbb
shr
jmp
cmp
dec
es
or
int
test
les
pop
add
mov
sbb
outs
js
jmp
sar
loopne
xor
xor
loopne
cmp
clc
mov
mov
mov
stos
gs
jg
sbb
imul
fld
jg
or
inc
je
pop
aaa
sub
sbb
imul
hlt
js
xchg
mov
xor
mov
or
mov
xchg
fcom
cmps
sbb
mov
pop
aam
and
adc
mov
fsubr
std
retf
mov
or
mov
mov
imul
mov
bound
or
stos
mov
js
aaa
inc
sub
fld
xlat
sub
xchg
aad
push
mov
jno
loop
jae
fsub
rcr
rcl
scas
div
in
cdq
imul
enter
retf
fs
sub
shl
push
pop
(bad)
mul
jbe
xor
jbe
xchg
pop
shr
in
(bad)
shl
inc
das
sbb
out
xor
ins
imul
inc
inc
mov
cmp
mov
push
and
dec
inc
loopne
xor
mov
mov
xor
lock
fild
dec
or
add
sub
(bad)
pop
add
retf
je
jge
push
and
popf
bound
jne
pop
popf
mov
fist
and
xchg
fisub
test
mov
out
gs
dec
cwde
sub
bound
push
ret
push
movs
ja
xchg
sbb
jp
sbb
mov
ss
add
pop
sbb
mov
jae
inc
ret
pop
xchg
xor
imul
xor
inc
and
mov
pop
icebp
dec
rol
sbb
or
cwde
int3
add
push
inc
das
xor
ror
stc
jno
sbb
call
ret
mov
call
cmps
loopne
cmps
call
retf
pop
jnp
aaa
push
call
adc
bound
sbb
lahf
repz
fisub
dec
hlt
int3
mov
in
dec
sub
js
xor
push
in
daa
sub
mov
xchg
jns
jmp
test
mov
add
dec
imul
js
xor
inc
or
sub
popf
hlt
and
cmps
mov
sti
push
jmp
xchg
and
mov
or
adc
mov
test
int3
mov
inc
or
fwait
daa
gs
add
nop
pop
push
mov
mov
gs
inc
cmps
xor
push
hlt
mov
dec
mov
call
add
mov
jl
add
mov
add
cmp
iret
inc
outs
es
jns
sti
retf
jno
movs
leave
push
sbb
mov
pop
sar
and
mov
dec
pop
dec
mov
ds
pop
cmp
add
jb
test
sahf
push
and
(bad)
sar
aam
mul
adc
mov
popa
ds
pop
cmc
mov
(bad)
out
push
shr
push
xchg
inc
jecxz
dec
call
and
mov
pop
add
(bad)
mul
and
xlat
xor
inc
dec
and
dec
xchg
loopne
sub
push
lock
(bad)
jmp
(bad)
mov
cmps
add
and
fistp
pushf
sbb
je
out
push
daa
xor
xchg
jl
adc
sbb
rol
or
mov
adc
xchg
mov
sar
or
shr
xchg
push
ja
call
pop
push
not
mov
shl
call
stc
jle
hlt
sub
fdiv
(bad)
sbb
sbb
mov
js
stos
fld
mov
jp
popf
int3
push
movs
div
sub
xchg
(bad)
cmc
mov
add
shr
test
popf
inc
pop
adc
dec
xlat
jo
ja
sar
stos
push
push
jecxz
mov
mov
push
pushf
sbb
or
jno
aas
je
xchg
les
ds
fcomip
cmp
popf
aam
loopne
aas
test
jmp
xlat
movs
(bad)
mov
imul
push
sub
aaa
out
xchg
jne
cmp
dec
and
jle
push
dec
hlt
push
fdiv
pop
test
scas
and
inc
jg
test
add
pop
xchg
outs
mov
test
jno
xchg
inc
jle
lahf
movs
push
inc
cmp
xor
ja
sub
xchg
jno
imul
xor
inc
ret
shl
shr
cdq
inc
popf
jne
ja
aaa
mov
pop
scas
or
push
ret
or
cwde
in
enter
dec
push
jns
stc
dec
mov
mov
push
outs
pop
mov
mov
mov
pop
cmp
icebp
sub
pop
mov
jae
xor
ficom
mov
sub
aaa
cmc
in
mov
and
cdq
imul
imul
and
nop
repnz
xchg
dec
(bad)
mov
dec
shr
cmp
out
jne
dec
xchg
mov
inc
test
movs
dec
mov
and
cmpxchg
jns
ror
mov
xor
jmp
inc
dec
repnz
adc
fdivr
rcr
or
jnp
push
and
sub
push
mov
lea
mov
in
adc
adc
int3
jmp
push
int3
shl
iret
inc
inc
sbb
and
sub
shl
adc
and
dec
lds
dec
or
jno
cmp
inc
out
sub
xchg
pop
movs
je
inc
pop
popa
lods
or
push
bound
rol
mov
xchg
sub
xchg
pop
imul
cmp
jns
mov
pop
jge
hlt
(bad)
push
clc
sub
mov
adc
gs
dec
inc
(bad)
jmp
shr
mov
aaa
lea
mov
or
pop
push
and
dec
and
sbb
mov
dec
pop
add
sub
dec
mov
or
in
(bad)
loop
call
jge
mov
push
clc
pop
mov
adc
xadd
test
mov
mov
dec
test
add
inc
xchg
mov
scas
and
fist
jmp
sub
adc
cdq
shl
jp
cmp
lods
mov
nop
xchg
xor
mov
outs
lods
sub
jno
jg
inc
stc
loope
xchg
sbb
data16
or
xchg
in
stc
retf
call
rcl
(bad)
or
inc
hlt
addr16
xchg
sbb
xor
iret
cdq
popf
jmp
bound
cmp
not
add
or
and
ins
mov
mov
sub
jle
pop
dec
jno
and
movs
scas
xlat
retf
pop
dec
adc
int
sar
xchg
xchg
or
inc
jp
dec
and
and
xchg
dec
sub
sbb
mov
(bad)
and
and
or
mov
add
mov
push
nop
fist
mov
adc
sub
mov
mov
add
(bad)
jecxz
into
iret
out
sahf
jmp
stc
fsub
jmp
pop
sub
hlt
stc
into
fcomp
dec
stos
int3
or
fst
pop
es
lods
mov
mov
fsubr
mov
and
dec
jne
sub
and
add
push
stos
hlt
push
das
lock
enter
mov
inc
into
ss
push
in
add
stos
pop
test
into
add
lea
in
jne
inc
or
stos
punpckhbw
xchg
pop
mov
mov
cmps
mov
adc
outs
cmp
outs
cmp
xlat
loop
daa
xor
add
fdivr
in
add
jle
in
lahf
mov
or
ins
pop
jns
xchg
mov
mov
dec
pop
sub
shl
mov
push
(bad)
outs
jbe
and
mov
jecxz
ins
mov
in
test
jo
add
ins
sub
or
inc
mov
ja
movs
xlat
nop
push
outs
xor
test
add
and
and
xchg
in
stc
dec
inc
ss
bound
iret
(bad)
mov
fistp
das
into
imul
jns
jno
call
test
sbb
pop
mov
in
inc
or
cmp
sub
in
adc
ror
sbb
sbb
(bad)
sub
push
fstp
xor
jb
js
in
test
fdivr
mov
lds
xchg
sbb
pushf
jae
je
stos
xor
iret
mov
mov
mov
ret
jbe
xor
adc
or
or
xchg
inc
jno
or
inc
dec
std
dec
jp
retf
lds
ret
out
or
mov
dec
ins
xor
mov
or
stos
push
xor
je
dec
adc
cld
mov
cpuid
stc
fsub
daa
mov
(bad)
stc
pop
sub
inc
test
and
adc
adc
push
dec
mov
cmps
dec
(bad)
cmp
arpl
(bad)
mov
adc
enter
adc
xlat
sub
fcomp
je
xchg
push
call
mov
retf
mov
push
out
imul
xchg
leave
sbb
lods
adc
(bad)
pop
dec
out
mov
xchg
mov
loop
pop
ret
adc
fst
cwde
inc
rol
cmp
fs
xor
sbb
cmp
xor
fs
sbb
mov
sbb
stc
in
inc
mov
call
xchg
(bad)
idiv
mov
movs
daa
xchg
push
or
push
jg
pop
stos
imul
add
or
or
add
adc
mov
jecxz
test
movs
and
leave
ficom
out
mov
sub
dec
daa
or
movs
add
les
lds
cmp
jmp
imul
xchg
inc
push
mov
lds
sbb
cmp
push
mov
es
ins
outs
add
add
retf
test
mov
sbb
mov
jns
cmp
add
mov
pop
sbb
fcomp
inc
dec
jae
fnstcw
add
pop
and
neg
add
out
call
pop
in
pop
inc
and
cld
movs
mov
fsubr
lahf
or
xchg
and
mov
jg
xchg
adc
jg
cli
icebp
arpl
mov
adc
outs
sub
inc
scas
push
jp
lock
sbb
loopne
mov
fsubr
lock
mov
jnp
sub
mov
mov
dec
cmp
cmp
fadd
dec
lahf
call
ss
ror
outs
push
cmp
or
and
or
inc
lods
int
pop
fdivr
mov
cli
movs
adc
xor
test
outs
and
in
pusha
das
mov
inc
mov
test
cli
and
lock
jmp
or
pop
or
push
jmp
xor
ficomp
push
push
mov
movs
push
mov
xor
xor
add
nop
xchg
cld
jb
fsub
lahf
dec
pop
fistp
jl
mov
clc
je
mov
pop
stos
inc
out
mov
shr
(bad)
psrlw
outs
jge
enter
test
jno
sahf
jmp
inc
popf
sub
mov
lock
inc
cmc
sub
(bad)
cs
test
outs
jbe
mov
xchg
pop
adc
outs
pop
rcr
retf
cli
jno
ja
jno
or
lock
sub
hlt
loope
ret
push
lock
mov
cli
(bad)
hlt
ja
cmp
sti
jecxz
pushf
imul
pop
cmps
jo
retf
sub
mov
push
xlat
xchg
push
mov
mov
push
push
jns
sub
xor
push
and
push
xchg
mov
popf
push
mov
ss
add
movs
mov
fwait
push
mov
and
push
jmp
fwait
mov
adc
cld
in
(bad)
hlt
sahf
outs
test
mov
adc
pushf
icebp
pop
and
retf
pop
hlt
jmp
loope
in
xor
inc
and
pop
test
or
mov
aam
sbb
ja
xchg
pand
cmc
push
clc
mov
add
das
lock
std
or
sbb
neg
inc
xchg
out
push
fcomp
out
mov
cmps
xchg
sub
xchg
and
mov
push
cmps
(bad)
lods
lods
mov
and
mov
arpl
mov
push
ja
adc
pop
and
mov
sbb
jbe
int3
int3
sub
mov
push
iret
push
sbb
inc
and
sbb
sub
test
aam
iret
push
mov
cld
lea
cmp
inc
jg
push
stos
sbb
nop
push
mov
mov
jle
mov
cmp
in
cmps
cli
mov
ds
mov
mov
pushf
pop
jno
xlat
ins
(bad)
push
mov
sub
xor
push
jns
jo
or
ret
loop
push
sbb
inc
xor
cmc
ds
ins
shr
jb
sti
pop
and
stos
fisttp
pop
mov
cmps
dec
sub
popa
cmp
test
add
out
fistp
push
loopne
test
pop
sub
addr16
clc
enter
pavgb
adc
mov
mov
jmp
mov
fbstp
push
add
icebp
(bad)
push
aaa
xor
cmps
lock
imul
cli
cld
adc
jae
xor
mov
push
dec
adc
or
test
stc
jmp
mov
(bad)
mov
pop
cli
and
(bad)
sub
sub
and
add
dec
outs
inc
add
mov
mov
shr
mov
and
pusha
daa
(bad)
push
dec
bound
and
out
mov
xor
inc
ja
or
loope
sbb
rol
out
movs
out
sub
shl
xor
xor
gs
inc
fwait
mov
hlt
int3
call
bound
jno
jo
add
hlt
jmp
cmp
ret
adc
fst
(bad)
mov
sar
dec
outs
(bad)
mov
adc
rcl
lock
mov
add
jo
not
dec
out
or
sbb
xchg
(bad)
push
adc
add
in
mov
ret
pop
mov
cmps
jno
sub
sub
cmp
loope
xor
fwait
mov
and
and
ss
push
push
push
mov
scas
nop
sub
inc
lock
mov
loopne
mov
pop
mov
add
and
(bad)
(bad)
push
sub
stc
pop
push
dec
push
pop
cdq
popa
xchg
xchg
dec
pusha
not
(bad)
lods
cmp
mov
sub
and
nop
js
adc
mov
jmp
in
xchg
or
and
outs
inc
jle
xchg
in
shl
pop
sub
movs
push
sti
cli
push
leave
push
pop
test
cmps
jg
xor
sahf
pop
sbb
mov
add
test
fsubr
mov
inc
adc
fsubr
xor
add
inc
repnz
pop
mov
mov
dec
call
xchg
mov
data16
lock
(bad)
dec
gs
in
jg
push
sbb
(bad)
mov
test
and
mov
pop
stos
cmc
sub
and
and
sub
dec
outs
test
fistp
inc
mov
pusha
jns
xchg
into
sbb
push
(bad)
jge
lods
sbb
push
je
movs
sub
bnd
mov
xor
mov
and
pop
mov
enter
sub
mov
mov
rcr
jae
(bad)
movs
loop
stc
add
xor
inc
mov
adc
sahf
jle
test
js
aaa
cmp
jle
pushf
sbb
ror
adc
inc
fidivr
cmp
outs
lods
test
push
movs
jbe
mov
aaa
lock
mov
das
pusha
sub
xchg
loopne
int
or
mov
or
pop
pop
clc
jns
mov
pushf
lds
jle
je
xor
dec
and
lock
bound
movs
jb
push
movs
outs
jae
or
dec
lods
enter
daa
cmp
test
retf
lea
inc
out
add
push
test
ds
sar
cmp
mov
mov
pop
push
jno
jg
addr16
out
push
out
ins
data16
iret
push
mov
icebp
out
es
jmp
push
xchg
sbb
push
test
and
ins
inc
lea
out
push
stos
das
sar
sbb
xor
arpl
mov
call
fsubp
test
push
dec
lods
xchg
out
test
jg
dec
aam
aas
jne
test
mov
pushf
jmp
mov
jno
sti
sub
inc
or
jle
mov
sub
test
pushf
cli
or
outs
xchg
jge
inc
xor
mov
cmp
int
cwde
push
inc
leave
sti
pop
loope
cmp
aas
into
cmp
pop
xchg
cwde
lds
out
xchg
mov
lea
repz
imul
(bad)
(bad)
adc
outs
iret
mov
push
out
retf
or
push
pop
arpl
and
mov
repnz
xchg
loopne
mov
out
pcmpgtd
pop
xchg
popf
mov
popf
pop
xchg
mov
call
imul
ins
mov
bound
fsubr
pop
cli
jle
data16
mov
pop
push
push
push
xor
inc
cmp
mov
or
sub
hlt
jnp
ja
jnp
push
test
int3
loopne
out
in
mov
adc
sub
xchg
push
xor
or
test
or
mov
cmp
mov
cld
add
push
xor
mov
out
mov
cmp
pusha
mov
mov
cmp
nop
mov
test
push
xchg
pop
inc
rol
jbe
cli
inc
sbb
xchg
mov
jnp
fisub
shl
fstp
mov
inc
imul
rcr
ds
pop
lods
lds
iret
pextrw
cwde
sub
lock
cmp
inc
fwait
stc
stc
xor
and
mov
repz
jmp
push
pop
sbb
cmp
xor
xor
push
xor
sub
aaa
sub
and
fst
or
retf
or
ins
xchg
enter
pusha
(bad)
in
or
add
cmps
aad
sti
dec
jl
mov
pop
shl
mov
adc
and
jmp
dec
loop
in
enter
ror
sahf
jle
hlt
lock
xchg
loop
enter
mov
xchg
lds
mov
mov
aas
mov
imul
and
ss
call
and
outs
int3
pop
test
loopne
mov
jae
aaa
jg
push
mov
(bad)
xchg
and
sub
dec
ficomp
dec
push
xchg
add
mov
cli
sti
out
inc
popf
div
pusha
out
enter
mov
cmp
call
pop
jbe
sbb
aam
mov
inc
mov
(bad)
mov
add
mov
(bad)
retf
adc
pushf
sbb
ret
(bad)
pop
(bad)
push
jbe
ja
jle
cmps
test
jmp
pop
mov
pop
jle
push
fstp
mov
lock
ret
std
(bad)
fnsave
sub
jb
shl
jp
out
bound
clc
stos
inc
mov
repnz
loope
(bad)
dec
cmp
and
mov
xchg
fcmovnbe
mov
jp
jmp
cdq
sub
adc
inc
enter
push
(bad)
je
add
test
inc
in
sub
add
add
sbb
movs
mov
push
dec
les
popa
test
push
dec
adc
cmp
inc
sar
mov
femms
adc
mov
jp
test
jl
jg
fisub
pop
ret
adc
or
fist
mov
lods
dec
or
adc
movs
mov
and
ins
movs
push
mov
cmp
into
out
fidiv
movs
lds
pop
inc
inc
lock
sub
inc
dec
cmp
dec
pusha
adc
cmp
mov
cwde
add
stos
mov
and
pusha
iret
retf
xor
adc
push
mov
ret
lock
jo
sar
cmp
add
push
sti
mov
push
and
push
test
or
movs
fadd
sbb
sub
xchg
xchg
inc
add
out
dec
call
pop
sbb
mov
mov
pop
or
sbb
sub
sbb
cdq
shl
clc
mov
inc
dec
js
cmp
jbe
rcl
dec
dec
xchg
popf
dec
retf
fidivr
or
push
into
and
repz
pop
cld
mov
lea
in
mov
dec
push
push
(bad)
mov
cmp
push
mov
jnp
das
mov
repnz
sub
xchg
neg
xchg
or
ret
add
sub
adc
lea
mov
xchg
mov
cmp
(bad)
sbb
and
dec
lahf
pop
ss
sbb
daa
fmul
xchg
inc
push
pop
mov
cld
movs
int3
rcr
mul
or
jg
inc
fs
mov
or
xor
xchg
fisubr
cmovle
dec
pop
push
xor
(bad)
cmps
xchg
jle
fmul
cs
xchg
loop
jo
js
in
test
inc
adc
lods
icebp
xchg
xor
xchg
mov
(bad)
mov
lock
sub
(bad)
lock
ret
test
(bad)
inc
repnz
enter
pop
into
push
and
inc
ror
popf
das
mov
sti
ins
cmp
and
mov
push
mov
psraw
cwde
pop
push
call
mov
mov
push
(bad)
rcl
sub
push
mov
cmp
jae
out
or
iret
leave
sysenter
add
or
jae
sbb
jg
xchg
in
adc
sub
pop
or
sub
fnstcw
or
xchg
sub
stos
mov
jmp
xor
sub
mov
jnp
or
xchg
pop
in
aaa
jmp
adc
out
imul
outs
or
jmp
out
stos
cmp
mov
or
mov
cmp
xor
(bad)
aas
loope
call
xor
mov
inc
ror
sub
mov
sub
arpl
xchg
shl
sti
jo
mov
pop
adc
xor
inc
les
mov
xlat
push
lea
stos
sar
push
jns
adc
pop
xchg
add
adc
out
gs
and
mov
dec
pop
cmp
pop
mov
sahf
rcr
cmc
call
jg
sti
push
clc
inc
mov
cs
xchg
jle
(bad)
das
push
jle
push
push
jmp
mov
cmp
jae
shl
stos
call
push
scas
pop
add
cs
mov
dec
mov
dec
xor
ficomp
jns
lahf
adc
or
and
and
adc
jl
cmps
xchg
clc
loop
test
mov
sub
adc
stos
xchg
jae
xor
les
ss
jns
rol
add
in
mov
pop
(bad)
mov
in
in
test
fwait
or
cmp
dec
mov
inc
push
dec
fiadd
xor
pop
xrelease
ja
jno
(bad)
icebp
jg
xchg
pop
xlat
jge
mov
and
rcl
dec
ret
(bad)
scas
and
clc
fsub
lea
pop
or
scas
sbb
nop
sub
mov
cwde
mov
jmp
cmp
retf
movs
pop
in
or
in
aam
mov
pop
xor
aad
fcomip
cli
in
in
dec
sub
sub
xchg
lods
xor
push
xor
or
aam
and
movs
mov
call
jle
and
cs
ficomp
aam
xchg
pop
retf
dec
(bad)
mov
jne
sbb
test
cwde
or
daa
fcomp
stos
scas
das
xor
rcl
shl
movs
pusha
push
movs
ret
dec
loope
cmps
mov
mov
xchg
xor
addr16
and
xor
cmps
mov
inc
mov
jmp
sbb
dec
rdtsc
pop
or
loop
mov
std
arpl
fidiv
gs
fbstp
and
adc
inc
sbb
dec
mov
or
xchg
xchg
mov
in
push
(bad)
xchg
jl
test
hlt
sub
push
ret
imul
jg
adc
cdq
js
dec
inc
addr16
pop
mov
ret
jl
imul
inc
mov
rcr
xchg
(bad)
pop
aas
cmp
mov
cmp
int
cld
dec
mov
mov
mov
mov
call
adc
mov
sbb
mov
leave
jle
dec
cmp
xchg
and
icebp
and
rcl
and
jl
in
int3
cmp
sbb
mov
sub
mov
adc
in
sbb
sbb
push
push
fcmove
rcr
jge
out
dec
pop
mov
jecxz
cdq
lods
mov
mov
mov
movs
pop
cmp
retf
pop
(bad)
add
popa
xchg
dec
iret
cmp
and
les
(bad)
inc
int
cmps
(bad)
inc
sbb
ins
dec
fcmovnb
jne
call
(bad)
sub
ret
mov
rcr
in
mov
inc
pop
jle
push
cmps
xchg
pushw
dec
movs
lods
cmp
rcl
cmps
clc
mul
xchg
push
into
and
rol
sbb
sar
cwde
xor
mov
pop
jno
xor
or
sbb
xor
repnz
adc
push
pop
xor
adc
test
and
sbb
inc
(bad)
jnp
sbb
and
adc
xchg
bound
lea
and
test
dec
mov
into
pop
cmps
ins
dec
mov
or
lds
add
sub
jno
and
je
or
imul
and
dec
mov
pavgw
addr16
std
cmp
mov
fdivr
xchg
xchg
shl
mov
xchg
movs
stos
cmp
or
mov
push
fisttp
ja
fsubr
sbb
imul
mov
sub
mov
push
aam
inc
pop
dec
lahf
in
and
loop
mov
xor
pusha
jns
jne
scas
sub
push
test
push
push
ret
mov
mov
(bad)
xchg
mov
adc
mov
push
mov
and
add
arpl
ins
leave
jae
inc
cli
inc
add
enter
sub
pop
jg
rcr
mov
mov
lea
shl
sahf
lahf
sbb
pop
ss
iret
xor
or
test
cmps
sub
test
push
shl
mov
or
into
or
aam
ret
leave
mov
push
pop
mov
gs
cwde
push
push
hlt
stos
mov
jnp
or
dec
ss
into
or
jmp
daa
fcom
push
push
add
icebp
int
and
pop
loope
cmp
xchg
repnz
adc
jg
xchg
nop
push
mov
jmp
mov
or
pop
push
push
or
data16
and
pop
sbb
jns
out
xor
or
add
cmps
stos
imul
clc
sbb
xchg
push
dec
or
xchg
jge
mov
sbb
sub
push
xchg
sbb
aad
dec
adc
leave
inc
push
fwait
cmc
dec
xor
jg
cmp
add
mov
ret
cdq
sbb
pop
sub
js
mov
mov
mov
jbe
mov
jo
stos
mov
cdq
lock
std
scas
lock
or
cdq
and
mov
mov
xor
or
stos
pop
fldcw
pop
pushf
sbb
dec
pop
clc
sub
(bad)
fs
aad
shr
jb
jo
(bad)
sahf
sahf
cmp
xchg
add
in
jo
inc
movs
call
adc
push
and
leave
pop
mov
pop
(bad)
loop
outs
or
mov
mov
or
cmp
pop
jo
adc
jbe
fnsave
jle
fs
pop
sti
pop
dec
retf
aaa
jo
(bad)
mov
push
inc
jge
or
pop
mov
or
dec
or
push
fidivr
(bad)
mov
sbb
push
ud0
adc
mov
out
pop
sbb
mov
add
fsub
(bad)
nop
inc
pop
mov
pushf
(bad)
xchg
bound
aam
pop
dec
jmp
cmps
sub
jp
or
pop
inc
(bad)
mov
repz
addr16
sub
mov
fld
fmul
dec
push
int
mul
jmp
js
sbb
jl
xchg
add
lods
push
loop
pop
mov
mov
js
xor
movs
cmp
sbb
mov
imul
adc
add
jg
pop
xor
test
mov
jno
sbb
mov
push
aam
psubusb
in
sbb
push
call
sbb
cmps
dec
enter
in
sbb
jne
popa
mov
xor
fbld
(bad)
test
jb
jb
mov
nop
xchg
outs
xchg
cdq
loope
or
lock
jg
jmp
jge
cmp
ja
pop
mov
dec
or
loopne
inc
dec
mov
nop
popa
inc
add
add
add
push
inc
inc
sbb
nop
adc
push
or
push
ror
push
xchg
or
mov
mov
and
imul
lahf
ds
bound
popa
out
push
push
aad
lds
cmp
test
xchg
xor
pop
aad
adc
pop
ja
cli
sub
and
add
int
mov
jb
sar
fldcw
outs
fld
pop
imul
sbb
jbe
add
mov
mov
jecxz
jecxz
test
stos
sbb
mov
sbb
and
and
loope
and
test
bound
inc
repz
lds
test
sbb
sub
movs
(bad)
fmul
rol
xchg
(bad)
into
or
sub
inc
mov
fldcw
ja
fisttp
pop
or
call
and
jns
mov
fiadd
nop
hlt
sbb
scas
test
fstp
add
fst
xor
inc
adc
pop
xchg
push
(bad)
cmc
lods
aas
iret
sub
sub
pop
push
bound
pop
repnz
das
popf
movs
ds
retf
outs
cmps
dec
push
fisttp
mov
mov
hlt
mov
xchg
inc
adc
xor
cmp
or
aas
sti
add
inc
adc
or
fxch
nop
push
push
lea
xor
int3
inc
push
or
neg
cmp
(bad)
mov
sahf
dec
loope
jno
mov
ficomp
scas
div
cdq
ds
rcr
call
xchg
mov
jno
addr16
add
dec
fild
inc
clc
lea
rol
in
test
stos
xor
popf
push
fcomp
xor
das
repz
xchg
and
outs
sbb
clc
cmp
jnp
std
jne
fld
adc
push
(bad)
cmp
mov
loop
imul
scas
push
repnz
jb
dec
mov
push
mov
fist
mov
int
sbb
mov
rol
jb
cmp
stos
add
fstp
test
(bad)
push
add
pop
inc
or
xchg
(bad)
ss
add
out
xor
sub
int3
lock
in
mov
sbb
jge
pop
pop
cli
and
inc
test
mov
mov
mov
lock
iret
movs
icebp
push
mov
sbb
push
jb
sub
div
sub
les
cmp
int3
jmp
push
sub
xchg
movs
aas
int
leave
aam
inc
imul
inc
xchg
adc
or
pop
retf
lods
xchg
sbb
jno
pop
addr16
jns
jge
xchg
ret
adc
and
mov
or
mov
sub
or
and
sbb
jo
shl
jle
push
call
xor
inc
sar
push
cdq
lods
clc
inc
mov
pushf
xor
xor
inc
add
adc
sub
push
mov
jno
mov
mov
scas
cmps
pop
nop
div
cmp
movs
dec
cmp
imul
cmp
sub
adc
jno
ds
ja
and
les
popf
inc
imul
xchg
jne
and
ret
jmp
xor
mov
and
(bad)
or
aas
repnz
rol
mov
lods
repnz
lea
and
cmc
and
jb
xchg
mov
push
mov
jp
cmps
lods
cwde
ret
aam
push
loop
push
or
xchg
push
icebp
xchg
inc
pop
cmc
bound
lds
aad
xchg
out
or
sub
inc
and
mov
pushf
movs
cs
adc
mov
(bad)
xlat
test
ins
xchg
sbb
dec
inc
push
repnz
mov
rcr
and
xor
mov
dec
push
xor
xor
add
jg
sbb
hlt
in
lea
sahf
mov
(bad)
les
ret
xchg
(bad)
bound
shl
call
jle
out
popf
pop
cmp
push
or
cmp
aaa
mov
in
outs
sub
out
imul
fs
sbb
inc
push
or
pop
pop
sti
(bad)
cmp
cmp
jp
iret
inc
add
add
(bad)
shl
hlt
test
xor
icebp
mov
jecxz
fs
pop
dec
ret
and
mov
add
iret
mov
xor
frndint
jno
scas
inc
push
and
test
bound
push
mov
sub
jl
cmp
adc
push
fdiv
outs
cmp
jge
pop
sub
mov
dec
jp
imul
xlat
or
lea
add
dec
sbb
lea
in
and
jge
fsubr
inc
lea
lahf
pop
xchg
addr16
fist
push
mov
mov
mov
sub
fisttp
xchg
pusha
test
aas
push
adc
(bad)
cmp
jle
pop
inc
lods
pop
and
repz
cmp
cmp
or
pushf
xor
mov
inc
sbb
and
or
cmp
or
jmp
repnz
pop
fdiv
fs
mov
js
inc
mov
scas
imul
cs
(bad)
in
and
push
mov
cmp
sbb
xor
outs
ins
(bad)
sbb
icebp
inc
push
movs
out
push
cs
jns
jne
fs
test
or
jecxz
cmp
fdivr
inc
mov
lahf
dec
add
jle
aas
das
cld
fwait
cmp
loop
dec
cld
sub
dec
or
icebp
push
fidivr
(bad)
pop
cmp
popf
loope
xor
jmp
pop
jbe
imul
lahf
push
mov
xor
cmp
shl
movs
bound
cmps
xchg
ret
jmp
gs
dec
mov
cmp
adc
loopne
mov
inc
push
test
dec
call
popf
jae
shr
(bad)
xor
add
imul
adc
scas
inc
aad
sub
push
scas
cmp
push
jbe
push
mov
stos
mov
out
scas
test
or
sbb
or
jne
xor
test
int
lods
inc
sub
dec
hlt
push
lods
add
mov
sbb
cs
ins
dec
push
movs
xchg
call
add
stos
ins
mov
test
call
loopne
lods
sub
or
test
sub
jl
test
stos
add
push
popf
mov
cmp
sub
adc
adc
pushw
push
adc
mov
push
enter
xchg
inc
ja
fsubr
ins
das
xchg
das
in
adc
(bad)
retf
xchg
mov
fcmovbe
cmp
sub
inc
shr
scas
add
add
dec
mov
inc
jne
cmp
or
xor
xchg
push
es
mov
dec
dec
xor
and
push
push
popa
lea
push
sbb
rcr
lahf
loop
pushf
mov
and
rcl
mov
es
dec
mov
pop
pop
mov
inc
xchg
rcr
rol
outs
sub
pop
xchg
push
sub
inc
out
push
lea
cwde
cmp
xchg
fsub
loope
inc
sub
mov
cmp
push
push
cmps
pusha
add
jae
mov
xlat
xchg
cmps
stos
call
add
dec
fmul
ror
sar
lods
xor
hlt
in
jmp
mov
sub
cs
sub
push
movs
xchg
je
js
xchg
sub
pop
outs
mov
xor
mov
mov
jnp
and
ss
addr16
push
dec
mov
xchg
cmp
push
dec
mov
rcl
call
and
push
daa
xchg
xchg
mov
call
das
and
xor
xchg
pop
aam
dec
mov
push
and
dec
push
mov
sahf
das
fst
push
inc
add
pop
or
retf
xor
xchg
xchg
scas
dec
bound
pop
cmp
jle
outs
jmp
xchg
and
push
dec
fdiv
push
cmps
mov
and
sub
cmp
fld
mov
sub
cmp
mov
fldcw
xor
add
int3
xlat
sbb
sbb
adc
mov
mov
lea
xchg
push
inc
bound
pop
dec
mov
popf
xor
aas
lock
cmp
jo
push
cmp
mov
xor
pop
mov
stc
or
stos
xchg
mov
dec
repz
sbb
jge
mov
stos
call
mov
sub
dec
lahf
pop
pop
dec
arpl
xlat
xchg
je
push
mov
inc
inc
ror
in
scas
adc
sub
or
in
xchg
or
and
call
out
loopne
and
loope
lock
mov
adc
pop
mov
xchg
jne
test
test
mov
add
cmps
jle
push
mov
or
and
pop
imul
daa
push
push
or
push
call
mov
pop
je
shl
or
pop
dec
push
pop
push
imul
daa
sbb
xchg
(bad)
aam
dec
cmc
scas
xchg
xor
(bad)
xchg
imul
and
ror
or
add
push
inc
cmp
outs
loop
cmp
dec
mov
xchg
adc
sti
movs
retf
mov
dec
jne
ret
bound
xchg
fucomi
xchg
push
mov
repz
inc
sbb
jbe
jo
mov
test
inc
outs
mov
add
push
pop
mov
push
sub
and
adc
fst
jns
pop
jmp
cmp
arpl
(bad)
xchg
xor
hlt
sbb
add
xchg
leave
mov
xchg
cmp
test
cmp
and
sbb
mov
daa
mov
sbb
in
jl
je
mov
mov
mov
xor
es
ror
or
jbe
call
and
cmp
push
mov
push
jmp
into
cld
ins
push
test
inc
mov
mov
jmp
and
jle
sub
xchg
dec
fcmovb
call
in
push
rcr
xchg
aaa
mov
retf
mov
mov
les
mov
in
or
nop
js
sar
in
mov
shl
stos
fucomp
test
sahf
(bad)
shl
ficomp
lock
fbld
(bad)
dec
jmp
data16
mov
cmp
or
aas
and
add
and
sbb
and
mov
mov
cs
loop
stos
dec
ins
popf
push
jo
push
call
pop
ror
cmp
push
sub
pop
push
into
mov
push
dec
mov
fisubr
add
and
xor
ret
xor
jne
pop
retf
sub
push
mov
test
dec
iret
enter
mov
sbb
neg
iret
in
mov
(bad)
fcmovnb
xor
aam
xchg
in
test
mov
ss
sar
enter
(bad)
dec
sub
and
dec
pop
xchg
mov
(bad)
das
out
fbld
repz
stc
cli
pop
push
in
sub
mov
jmp
add
mov
and
cmp
ins
and
adc
retf
retf
push
cmp
mov
pop
pop
addr16
cld
dec
cli
pop
outs
mov
sbb
repz
and
xchg
add
jo
xor
cmp
sub
into
mov
inc
mov
ss
inc
aam
aaa
cmp
sub
leave
ins
xor
or
dec
push
test
pop
or
jle
data16
sbb
cld
mov
faddp
mov
mov
jl
dec
mov
mov
push
push
imul
lods
xor
jmp
je
pop
inc
retf
les
ret
add
pop
push
dec
push
sti
sub
gs
ret
push
mov
or
into
ror
test
call
push
push
mov
push
ja
push
aaa
out
xchg
shl
out
cld
cdq
and
push
mov
fldpi
hlt
add
lds
lds
retf
push
imul
jg
xchg
xor
xor
sbb
pop
xchg
cmovo
cmp
adc
jo
movs
jb
xor
adc
enter
mov
ret
cmp
push
or
fs
sbb
jp
js
movs
xchg
or
push
fldcw
gs
stos
add
inc
pop
push
stc
stos
mov
lods
cmp
dec
mov
adc
popa
out
xor
pop
fnstsw
xor
jb
ret
jmp
rcl
dec
shl
fsubp
pusha
pop
loopne
pop
inc
nop
scas
int
dec
mov
push
retf
loope
push
cli
ins
adc
add
sbb
sbb
fld
ja
sbb
imul
pop
popa
sub
lods
inc
or
or
lea
pop
test
and
and
mov
add
aam
dec
and
xchg
sbb
mov
mov
ins
data16
ins
jl
push
cdq
dec
test
dec
pop
retf
cmps
aad
mov
cmp
push
ret
nop
sub
pop
xchg
xlat
loope
leave
lods
aad
mov
sbb
and
rcl
lods
and
arpl
xor
push
inc
mov
shr
xor
les
rcr
add
mov
nop
cmps
loopne
mov
sbb
rcl
bswap
mov
paddsw
sbb
sbb
xchg
and
add
jbe
and
(bad)
mov
lock
movs
push
sub
sar
pop
push
adc
call
clc
cmc
cmp
xchg
or
adc
sbb
mov
add
outs
fabs
xchg
jp
dec
retf
cdq
gs
rcr
mul
js
cmc
fwait
(bad)
outs
idiv
dec
mov
ror
xchg
cmc
xor
cmps
mov
add
inc
jno
imul
dec
mov
clc
pop
sub
mov
test
pushf
aam
mov
sbb
add
fwait
aaa
les
cs
pop
sbb
int3
inc
cli
stos
sar
inc
and
dec
or
cdq
out
add
push
aas
aad
xchg
and
mov
pop
adc
add
and
rcr
cmp
pusha
and
xor
outs
xchg
test
cmp
retf
mov
pop
sbb
lods
mov
dec
xchg
cmp
pop
fstp
or
fdivr
(bad)
fld
cmp
mov
jmp
jmp
sub
add
mov
sub
call
das
ret
ret
push
fisubr
fldenv
fwait
sbb
jmp
(bad)
xchg
xchg
jmp
movs
retf
jo
jnp
pop
push
xchg
sbb
or
pop
fisttp
push
(bad)
adc
(bad)
frstor
hlt
push
in
mov
jmp
pop
icebp
xor
cmps
arpl
retf
mov
jae
jp
shl
jg
dec
and
push
push
dec
ficom
push
pop
pop
cs
fs
lock
pop
fmulp
cmp
mov
push
addr16
retf
push
ret
mov
jnp
jb
pop
dec
ror
cdq
lods
xchg
add
cld
call
in
mov
repz
ins
dec
push
lahf
sub
call
test
sub
sub
mov
sub
mov
xor
scas
mov
xor
dec
mov
sub
push
pop
clc
stc
pushf
xor
jno
popf
ret
push
imul
jae
mov
push
dec
fdiv
cmovne
popf
or
neg
fisub
and
sub
xor
rcl
xchg
adc
add
fistp
retf
test
adc
dec
mov
jmp
cmps
push
mov
fiadd
leave
add
jp
repnz
cld
pop
or
jg
dec
scas
sub
repz
cmp
mov
sbb
lock
in
std
mov
std
mov
(bad)
dec
movs
and
xchg
scas
pop
sub
mov
(bad)
in
add
add
pop
out
add
dec
retf
xor
jnp
rcl
mov
nop
mov
inc
mov
jge
inc
js
call
jae
scas
outs
les
sub
fs
shl
xchg
sbb
cdq
(bad)
ret
jp
scas
jge
sbb
jle
dec
fsub
aad
popf
jmp
mul
mov
push
mov
aaa
inc
pop
icebp
fld
sub
dec
std
imul
jns
pop
ss
add
push
les
outs
jge
jge
dec
(bad)
add
shl
pop
ds
leave
xor
mov
cmp
dec
cmp
outs
cmp
jmp
push
test
inc
cpuid
mov
pop
push
xchg
jmp
xchg
xchg
mov
add
xchg
cld
aaa
push
fwait
jns
std
movs
jl
inc
or
or
test
sub
jl
aaa
imul
test
ret
retf
jne
(bad)
int
bound
and
rol
dec
cmc
cmp
cmc
mov
aaa
jae
and
fistp
mov
int
into
shl
js
mov
sub
mov
cwde
xchg
lds
pop
movs
jbe
fs
sub
push
dec
mov
lahf
add
mov
shl
xor
sti
stos
pop
imul
je
cli
mov
or
xlat
stos
imul
jb
pop
or
pusha
mov
aad
push
or
adc
xor
inc
imul
inc
pop
adc
ins
adc
loopne
int
mov
rcr
sub
or
data16
mov
cmp
es
pop
mov
pop
mov
mov
into
xchg
sub
mov
sub
ffree
mov
std
popw
ret
hlt
test
mov
xor
inc
mov
arpl
rcr
sahf
or
cli
xchg
add
xor
bnd
and
clc
and
enter
inc
cdq
outs
popf
fadd
cwde
xchg
sub
xchg
push
dec
push
movs
xor
push
jecxz
loopne
mov
sbb
pop
cmp
lahf
popf
test
cli
aad
movs
mov
inc
iret
shl
ficom
daa
pop
fdiv
(bad)
xor
scas
push
es
int3
pop
xchg
pop
pop
imul
xor
mov
ins
nop
mov
mov
xchg
jns
and
xchg
push
ror
(bad)
push
ds
mov
pop
test
push
(bad)
sti
inc
out
lods
sbb
pop
test
out
inc
(bad)
in
sbb
xchg
repnz
outs
add
or
dec
dec
std
inc
mov
in
in
imul
cmps
xor
sub
xor
aaa
xchg
cdq
int3
mov
lods
push
outs
imul
jg
cmps
xor
out
ror
dec
jmp
fs
sar
fisub
jmp
in
fadd
repnz
jecxz
add
lods
sahf
sub
and
mov
bound
mov
xchg
cdq
imul
sub
xor
out
and
mov
fild
daa
pop
pop
in
fcom
mov
or
or
repnz
das
push
loopne
xor
(bad)
fimul
mov
mov
jmp
mov
cwde
or
mov
or
stos
inc
setb
ret
jmp
mov
in
out
arpl
sub
mov
xchg
jmp
inc
call
push
popf
push
sbb
jp
imul
lds
lock
inc
xor
pusha
mov
push
(bad)
scas
inc
push
call
rcr
jns
icebp
xchg
jg
jp
adc
(bad)
pop
inc
mov
and
cmp
rcr
pop
(bad)
add
in
call
addr16
imul
fcmovbe
xchg
mov
int3
ins
mov
lea
xor
sub
les
sbb
and
inc
rcr
push
pop
sbb
add
push
scas
popf
cld
cmp
cmp
pop
fdivrp
pop
dec
stc
cld
repz
mov
lsl
pop
out
outs
(bad)
or
xor
xchg
inc
dec
dec
push
pop
sub
inc
pop
push
movs
jo
and
(bad)
jl
and
dec
in
fwait
mov
pop
sbb
fcomp
push
shl
add
jg
cld
fcom
dec
shl
or
push
imul
jle
pop
jmp
adc
lods
clc
fild
into
shl
test
rcl
push
test
sub
sbb
push
clc
int3
xchg
shl
and
out
loop
dec
mov
or
sub
js
inc
pop
xor
movs
push
push
jg
scas
cmps
mov
sti
rol
mov
lods
out
pop
xchg
mov
in
cdq
scas
lods
and
call
xchg
fdiv
pushf
loopne
mov
push
push
push
mov
push
es
ficom
or
mov
cdq
push
jmp
dec
aad
jmp
sub
mov
jns
mov
mov
xchg
daa
sub
adc
call
adc
sub
sbb
out
cmps
adc
sahf
sbb
or
js
push
mov
mov
add
movaps
jle
cld
jno
cmps
test
mov
adc
into
out
sahf
dec
jp
imul
(bad)
(bad)
js
adc
sbb
call
pop
aaa
and
loopne
push
push
and
call
les
or
jno
dec
test
test
mov
sub
daa
push
clc
leave
retf
jae
sub
sbb
pop
dec
jmp
pop
aas
scas
dec
mov
add
scas
movlps
iret
js
dec
adc
or
clc
mov
jns
out
cmp
and
or
push
mov
stos
sub
pop
pop
jecxz
push
mov
jns
push
jbe
stc
ret
ret
sar
aas
leave
test
add
pop
xchg
(bad)
out
enter
lods
xor
(bad)
cmp
mov
fmul
fld
stc
and
adc
stc
mov
mov
lods
in
mov
pop
jg
pop
dec
mov
(bad)
imul
push
mulps
jbe
lods
sbb
test
es
and
aas
push
movs
cmp
or
sti
dec
les
add
(bad)
movs
sbb
sub
jo
jmp
mov
mov
out
jae
jbe
inc
test
iret
into
cmc
cmp
mov
cwde
lock
popf
pusha
sbb
add
add
and
mov
mov
in
nop
ret
xchg
ins
ret
imul
inc
add
mov
test
pop
inc
xchg
mov
ret
xchg
sbb
pop
popa
and
mov
fdivr
pop
dec
stos
vsqrtsd
cli
add
push
xchg
lahf
sti
sub
jle
cmp
push
push
or
lea
xor
add
mov
movs
jl
call
outs
push
(bad)
xlat
daa
xor
cmp
hlt
fadd
icebp
data16
ins
push
push
pop
sti
dec
adc
imul
xor
dec
std
and
xor
mov
scas
xlat
jp
or
xchg
cmp
adc
cmps
adc
adc
inc
jle
adc
lahf
cmp
xchg
nop
or
sbb
mov
adc
hlt
inc
mov
pop
cmc
sbb
xchg
std
pop
pusha
cmp
pop
es
aaa
xor
xchg
fnstcw
dec
adc
adc
mov
cmp
xlat
mov
sub
add
jmp
add
inc
dec
push
mov
dec
pop
sub
out
xlat
cmp
retf
push
outs
ss
test
dec
(bad)
sbb
inc
sub
punpcklbw
arpl
lock
mov
mov
mov
cmp
ss
push
mov
inc
lods
fwait
pop
das
cmps
dec
sub
and
pop
pop
test
ds
ror
out
std
aad
lock
aas
(bad)
std
push
scas
fsubr
in
movs
jno
lods
les
test
and
pop
cli
aaa
push
gs
mov
(bad)
push
ret
dec
adc
cmps
dec
in
invd
loop
push
in
mov
cdq
mov
sub
test
stos
mov
pop
sub
pop
jne
xchg
retf
pop
clc
out
mov
mov
fiadd
stc
or
add
mov
cmps
mov
in
mov
sbb
icebp
pop
xchg
adc
out
inc
aaa
sub
mov
sahf
cwde
cmc
pop
(bad)
aam
sbb
push
mov
sub
jle
(bad)
mov
pop
xchg
mov
leave
fnstenv
popfw
nop
lods
shl
std
mov
add
cmp
cmp
xchg
ja
and
inc
ins
aaa
mov
fwait
lahf
cmp
outs
(bad)
jle
mov
retf
or
xor
es
mov
dec
mov
xchg
movs
push
or
sbb
dec
ins
daa
and
rcr
not
inc
test
add
stc
loope
dec
not
mov
shl
sbb
xchg
repz
mov
jns
inc
and
nop
jmp
fidivr
ret
add
push
inc
xchg
mov
stos
imul
sbb
rcr
inc
push
data16
pushf
add
dec
popa
fild
(bad)
ror
adc
pushf
jecxz
into
jge
icebp
mov
gs
jp
jmp
sbb
out
jecxz
ret
adc
pop
rol
mov
pop
lods
leave
jecxz
pop
sar
and
push
xor
dec
inc
imul
adc
ins
pop
out
loope
out
loopne
adc
pop
cmp
test
push
dec
xchg
add
retf
xchg
and
adc
in
mov
clc
iret
fwait
jb
out
inc
inc
mov
lods
add
cli
aas
aad
cmps
add
(bad)
mov
jo
and
ds
sbb
in
cmp
sbb
mov
and
and
loopne
data16
out
rcl
mov
xchg
mov
(bad)
xchg
pop
loopne
and
pop
push
pop
jge
jno
es
cmp
sbb
lods
mov
pop
dec
sub
push
jb
hlt
enter
repnz
jl
ja
out
adc
jnp
scas
jae
dec
pop
adc
mov
jne
(bad)
or
jmp
les
pslld
shr
outs
mov
fwait
retf
dec
dec
dec
movs
xchg
movs
jmp
jae
gs
in
push
jnp
pop
and
hlt
mov
or
daa
sub
arpl
inc
pop
(bad)
stos
xlat
(bad)
jp
mov
jo
or
mov
retf
push
ret
mov
xor
and
add
lds
sub
sub
inc
les
inc
iret
mov
push
repnz
jo
sub
xchg
rcr
in
jo
fild
jle
mov
and
cmp
lea
shr
sub
xor
mov
mov
inc
mov
int
pop
add
(bad)
stc
enter
loope
mov
int3
in
into
fs
cld
xor
mov
pop
jl
pusha
or
(bad)
mov
(bad)
jne
cmp
cmp
jmp
das
jecxz
pop
sbb
add
push
mov
adc
adc
aad
sbb
(bad)
pop
shl
fisubr
rol
jecxz
pop
sti
jge
xor
mov
jmp
mov
ds
(bad)
in
mov
xchg
cmp
sbb
jno
or
aam
arpl
mov
hlt
test
movs
sub
test
xchg
cmp
sti
push
xor
(bad)
idiv
push
jecxz
ret
test
inc
and
lahf
sbb
add
lods
ins
inc
push
xchg
jbe
rcl
imul
out
in
int3
rcr
mov
add
and
push
pop
push
je
xor
dec
mov
js
out
mov
sub
xchg
cmp
inc
mov
or
loop
test
add
shl
jbe
test
mov
icebp
retf
clc
fst
ins
push
aam
mov
inc
rcl
cli
mov
inc
call
mov
shl
add
into
fisubr
hlt
lods
cmps
sub
loop
leave
mov
dec
and
add
popf
adc
imul
sub
(bad)
call
test
in
call
push
leave
xor
cmc
jb
lods
jne
jae
sub
pop
mov
ins
and
pop
adc
or
xchg
das
inc
out
ret
out
gs
mov
dec
cmp
test
into
mov
pop
outs
jns
leave
xchg
nop
xor
or
aas
add
dec
sub
inc
aad
push
lds
and
leave
and
push
mov
into
mov
rol
out
leave
xchg
xchg
aaa
movs
add
sub
xor
(bad)
sti
dec
inc
mov
push
stc
in
test
int
jns
push
sbb
std
stos
adc
mov
ds
cmc
test
clc
mov
cmps
(bad)
xor
add
xchg
loope
nop
push
pop
shr
sub
and
jg
dec
arpl
mov
mov
fucomip
stc
icebp
addr16
scas
in
push
sbb
mov
mov
jbe
sub
fild
jmp
out
dec
arpl
outs
and
call
mov
(bad)
not
aas
in
outs
jb
xlat
or
pusha
repz
mov
xor
or
je
sbb
sub
mov
aam
stos
pusha
pop
call
jmp
fwait
mov
xor
js
dec
sbb
xor
retf
mov
mov
ja
ret
adc
dec
in
adc
adc
scas
jmp
cmp
icebp
int3
ror
shr
ror
out
and
in
nop
movs
xor
xor
sbb
mov
jne
xchg
dec
jns
pop
lods
or
lea
movs
seta
pop
clc
ins
mov
jle
cs
sub
cwde
leave
inc
add
icebp
pop
jp
js
imul
fld
fisttp
jl
add
aam
packsswb
gs
xchg
xchg
dec
call
sbb
pop
icebp
cdq
outs
je
js
scas
cmp
cmp
repnz
xor
out
(bad)
repnz
mov
and
xor
pushf
mov
and
sbb
int3
ret
jmp
test
sbb
daa
imul
in
in
jb
aam
pop
addr16
cli
cwde
ret
scas
pop
adc
imul
inc
jp
fadd
sar
mov
lock
and
call
icebp
jge
es
ror
mov
push
and
(bad)
mov
xchg
jl
jne
and
dec
leave
push
mov
adc
outs
imul
nop
rcl
imul
retf
ja
fwait
push
mov
lods
loope
test
add
es
sub
mov
mov
inc
call
ins
(bad)
xchg
inc
fninit
pop
les
outs
mov
push
lds
inc
lods
jae
inc
and
mov
pushf
add
sub
add
inc
repnz
xchg
fadd
retf
push
xor
or
xchg
dec
mov
jg
or
push
inc
dec
movs
in
idiv
sub
(bad)
div
popf
gs
(bad)
rcr
mov
adc
xchg
adc
dec
adc
dec
ds
xor
(bad)
ret
sahf
ss
xor
std
jae
mov
lea
imul
call
jmp
enter
or
out
cmp
aas
inc
sub
xlat
jbe
mov
out
in
add
adc
push
mov
cmp
mov
add
das
add
jo
sbb
mov
mov
mov
cmp
jo
mov
or
dec
adc
sub
ins
out
stos
xlat
(bad)
sub
scas
lea
(bad)
inc
sbb
sub
sbb
or
adc
js
(bad)
aad
outs
and
test
or
pop
shr
pop
adc
xor
fldcw
xchg
add
mov
shl
dec
call
mov
pop
data16
push
sbb
call
jp
cli
cmp
rol
cmps
out
push
xchg
ficom
xchg
daa
push
adc
out
cli
sbb
pop
mov
add
test
test
(bad)
mov
sbb
jne
xchg
mov
mov
inc
call
ins
mov
clc
arpl
jns
xor
push
cmp
mov
add
dec
push
(bad)
mov
je
(bad)
pop
inc
retf
mov
cld
(bad)
(bad)
out
lahf
or
push
clc
repnz
inc
add
dec
adc
neg
mov
mov
dec
in
sub
out
test
jp
add
pop
jmp
stc
mov
popf
fwait
cmps
xchg
inc
ret
fbld
push
xchg
pop
xchg
sti
mov
mov
or
loopne
leave
xor
dec
pop
ja
xor
(bad)
dec
xchg
mov
jne
mov
and
sub
mov
push
xor
cs
jb
xchg
mov
pop
push
enter
ror
cld
mov
or
or
mov
xor
cmp
inc
dec
sub
xor
sub
and
lock
xor
push
xor
jb
pop
pop
data16
sbb
(bad)
mov
push
dec
xor
dec
out
adc
aas
clc
jecxz
pushf
dec
jne
xor
ins
addr16
pusha
punpckhdq
int3
xor
dec
jecxz
scas
call
ins
in
dec
xor
xchg
mov
jae
out
in
dec
jns
sbb
dec
and
mov
mov
sbb
push
inc
sbb
mov
pop
jb
scas
add
gs
retf
cli
push
ret
and
xlat
jge
inc
xchg
mov
popf
dec
aaa
in
leave
dec
shl
(bad)
out
xchg
jmp
xchg
sahf
int
outs
cmp
and
bound
jb
jecxz
pusha
mov
loop
jmp
push
and
(bad)
inc
mov
adc
add
jmp
daa
enter
jl
sub
push
out
inc
xor
pusha
imul
gs
daa
cmps
sub
test
xchg
outs
jo
std
std
mov
add
cwde
cli
and
push
sub
(bad)
ds
pop
aaa
mov
out
cld
cmp
inc
xlat
gs
lods
mov
xor
inc
scas
mul
dec
nop
lds
cmp
mov
rol
imul
repz
call
push
loopne
and
dec
cmp
cmps
inc
mov
enterw
cmp
pop
jo
jo
or
jle
outs
mov
popf
xchg
daa
jbe
in
mov
and
cwde
mov
stos
leave
or
mov
sub
jle
add
fistp
daa
cs
adc
ins
push
ins
js
mov
xor
jo
or
iret
inc
jl
adc
dec
cwde
sbb
ds
data16
(bad)
xchg
jne
int3
adc
add
jge
sub
or
mov
ins
into
jno
(bad)
out
add
mov
sub
push
fisubr
mov
pusha
imul
and
adc
aad
ds
call
outs
mov
ins
(bad)
into
in
sahf
inc
(bad)
push
or
pop
jnp
pusha
loop
sahf
mov
outs
out
jmp
mov
add
xor
gs
clc
jae
psubq
cwde
rcl
jmp
in
mov
dec
pop
xor
xchg
pop
mov
test
inc
call
jge
jb
std
dec
sbb
ja
sub
out
jnp
xchg
adc
bnd
arpl
inc
and
je
fcmovnb
add
sti
imul
inc
adc
cmp
dec
nop
inc
retf
jns
jg
push
inc
out
lods
popa
jo
and
jl
cmp
fcmovnbe
jp
push
push
(bad)
fadd
jmp
fsub
sub
leave
movs
jne
gs
les
ds
adc
loope
jg
cmp
mov
xor
mov
icebp
mov
in
sti
imul
jnp
push
jae
pop
clc
jl
inc
mov
sahf
cld
sub
(bad)
mov
or
and
mov
std
xchg
ret
sub
xchg
icebp
mov
xchg
mov
jnp
loope
movs
dec
mov
mov
add
inc
aam
lods
push
iret
icebp
inc
sbb
jle
xchg
(bad)
xchg
adc
mov
xchg
movzx
mov
test
stos
add
outs
dec
cmp
cmps
and
es
adc
sub
or
imul
and
scas
pop
popf
fild
or
mov
jae
mov
pop
pop
stc
arpl
xor
ss
jmp
or
lea
fs
cmp
mov
xchg
cwde
mov
mov
pushf
shr
sub
icebp
pop
loope
push
fstp
mov
mov
movs
sbb
or
add
push
repnz
mov
out
sbb
xchg
pop
in
fmulp
aam
fdivr
push
std
push
imul
dec
fcomp
cwde
lods
int3
fwait
mov
jnp
mov
bound
aaa
fidivr
xor
add
in
xor
test
cdq
in
sti
repz
push
inc
push
dec
ins
mov
es
sti
rcr
mov
push
push
inc
out
or
rcr
jecxz
lock
outs
in
lods
ror
bound
push
sbb
jnp
mov
sbb
rcl
(bad)
out
adc
mov
cld
pop
shr
sbb
es
pop
inc
cmp
push
call
push
push
cmps
cli
and
sar
enter
aam
xchg
add
dec
repnz
dec
xor
jo
add
push
cwde
nop
inc
leave
add
dec
jp
mov
int3
lock
idiv
je
jl
call
aad
pop
out
mov
outs
dec
dec
stc
jae
js
test
pop
cmp
in
ja
popa
jae
dec
mov
adc
push
mov
cmp
mov
cs
cs
sahf
data16
test
pop
cli
pop
fst
out
or
sahf
mov
cmp
(bad)
into
dec
dec
cli
fiadd
add
inc
ds
mov
retf
or
jne
test
enter
xchg
mov
xchg
pop
mov
aad
ins
pop
sar
into
xchg
mov
push
push
push
jle
je
xchg
jle
adc
out
cmps
add
mov
mov
push
lock
pop
mov
push
ror
shr
(bad)
push
js
iret
adc
lds
ret
or
out
fiadd
outs
jnp
cmp
in
popf
cmp
xor
xor
into
sub
gs
sar
dec
or
pop
mov
scas
repnz
retf
mov
push
pop
test
mov
out
ffreep
or
scas
shl
mov
lea
jge
les
inc
push
cmp
mov
in
stc
call
mov
not
mov
mov
leave
jnp
mov
test
xor
jmp
xor
dec
adc
push
retf
into
jns
xchg
addr16
and
mov
stos
push
push
mov
(bad)
mov
daa
ins
test
retf
stc
repnz
cmps
aad
repnz
leave
push
xor
sti
dec
fsub
jae
mov
mov
popf
push
inc
fstp
dec
inc
fiadd
lods
stc
mov
sar
mov
sbb
and
xchg
mov
adc
mov
push
ret
fcom
cmp
adc
pop
mov
jno
dec
mov
scas
cmovl
jo
mov
xor
jg
scas
pop
push
addr16
jbe
sub
cdq
data16
pop
inc
sub
leave
cmp
cli
xor
into
jbe
dec
push
mov
mov
dec
and
daa
sbb
inc
jbe
clc
pop
jecxz
popf
dec
scas
push
sahf
stc
and
or
inc
jae
leave
or
adc
test
or
push
icebp
lahf
ret
adc
enter
ror
in
cmp
leave
jbe
mov
popa
rcl
cmp
mov
mov
test
loopne
enterw
sub
and
into
aad
stc
xlat
cmc
int
out
xchg
pop
sub
int
sub
mov
jns
jbe
jl
sbb
sbb
xchg
ret
jecxz
movs
popf
pop
clc
(bad)
push
out
dec
pop
or
pop
ja
ja
rcr
loop
icebp
jae
jae
mov
or
dec
fistp
(bad)
pop
jecxz
mov
pop
push
adc
hlt
mov
loop
mov
xchg
in
mov
(bad)
xlat
xchg
jnp
xchg
rol
dec
and
sub
mov
lahf
jno
in
jns
cld
inc
cmp
push
movs
jnp
dec
xor
add
(bad)
or
jbe
pop
push
pop
and
pop
hlt
xor
hlt
mov
retf
(bad)
xchg
push
mov
nop
les
xchg
mov
int3
add
inc
lods
xchg
retf
cmp
push
sub
subps
popa
adc
mov
xchg
push
xor
cmp
adc
sbb
jb
(bad)
push
(bad)
jl
lds
mov
test
dec
mov
sbb
add
dec
pop
arpl
jmp
xchg
push
sbb
cmp
push
fldenv
sbb
sub
pushf
xor
scas
fmul
or
retf
jbe
scas
mov
test
mov
imul
icebp
popf
sub
dec
push
pusha
popf
fcomp
(bad)
jo
test
mov
pop
push
xchg
push
xor
jg
test
sbb
retf
into
xchg
mov
add
pushf
neg
jo
cmps
add
xchg
arpl
out
imul
mov
pop
out
fisub
add
hlt
or
xchg
rol
clc
nop
mov
cli
cmp
dec
fild
pop
and
adc
pop
ret
div
jmp
loop
mul
test
mov
sar
repz
popa
hlt
add
mov
xor
es
mov
cmps
jno
pushf
mov
cmc
mov
add
cmp
sbb
retf
mov
or
in
or
cmp
jl
sbb
test
push
aas
call
and
faddp
xor
xor
xor
cmp
mov
add
dec
sub
mov
sub
add
cmp
(bad)
in
fadd
(bad)
mov
(bad)
push
je
leave
inc
sbb
jbe
aam
cmp
or
test
or
jmp
stc
inc
or
outs
fnsave
out
stos
mov
push
adc
cwde
dec
mov
or
stos
jge
push
xor
std
jnp
xchg
(bad)
fidivr
mov
sbb
dec
in
lea
dec
ret
retf
xor
out
dec
sbb
cmp
sub
cmps
mov
retf
pop
adc
push
mov
jp
xchg
(bad)
jecxz
inc
adc
femms
adc
mov
sti
mov
int3
sahf
jbe
cli
or
inc
add
je
into
mov
out
imul
addr16
test
push
pop
push
sar
adc
retf
xchg
imul
jmp
cwde
pushf
push
lock
sub
adc
outs
call
cmp
pop
cmp
outs
sbb
std
push
inc
add
push
pop
xchg
out
sahf
pop
jmp
test
inc
mov
xor
aaa
mov
jle
mov
js
push
ss
adc
loope
cmovae
sti
pop
aas
test
pop
mov
xacquire
ja
jo
enter
mov
(bad)
and
mov
jmp
pop
cmp
pop
retf
add
in
add
inc
mov
leave
pop
mov
stos
jo
inc
mov
sub
loopne
aaa
cmp
int3
ror
pop
dec
xchg
fcmovne
into
dec
mov
sbb
push
jle
add
inc
mov
inc
adc
sub
loop
cs
daa
pop
inc
xchg
movs
sub
jae
iret
jge
out
xchg
push
or
cs
rcr
out
test
sub
mov
ret
fadd
mov
js
push
mov
xchg
mov
mov
sbb
mov
mov
adc
mov
and
loope
retf
scas
or
inc
mov
int3
xchg
out
push
ins
lock
shufps
int
shl
test
cmp
push
(bad)
adc
xor
loop
enter
push
sub
into
(bad)
jns
mov
push
int
mov
inc
lahf
inc
adc
bound
iret
xlat
ss
inc
hlt
ret
bound
and
nop
arpl
rcl
fld
ins
fcomp
dec
aas
push
les
call
pop
fst
dec
jb
mov
mov
sti
sbb
call
dec
mov
push
ja
dec
add
loopne
pop
leave
fmul
mov
adc
mov
pusha
mov
outs
mov
jae
or
cmp
ins
sbb
lea
repnz
or
gs
inc
mov
out
jg
cmp
in
xor
xor
add
call
jecxz
fidiv
retf
add
lock
ret
mov
add
lods
or
sbb
ds
fld
ret
add
cs
sar
inc
pushf
cli
stos
test
add
or
xor
xor
outs
leave
sbb
cmp
mov
std
push
stc
mov
add
shl
(bad)
retf
add
bound
aaa
test
adc
adc
pop
xchg
cmp
xchg
(bad)
arpl
stos
mov
jns
cmp
add
cmp
sar
out
adc
cmps
int3
dec
and
xor
mov
xor
and
aad
xlat
loope
sahf
push
inc
(bad)
add
ins
mov
aad
push
ss
dec
or
scas
dec
movs
sub
sti
push
xchg
mov
bound
jg
jp
popa
les
cmp
addr16
inc
push
xchg
push
ret
sub
push
mov
push
clc
addr16
scas
int
mov
(bad)
div
mov
add
push
push
jg
rol
scas
mov
pop
inc
jne
jl
fmul
test
minps
jbe
or
mov
cmps
mov
pop
cs
bound
scas
mov
mov
call
push
mov
pop
add
ins
fbld
sti
mov
call
mov
fadd
sbb
shl
leave
or
ins
stos
dec
adc
repz
cmc
ret
cmp
sar
mov
fyl2x
stos
mov
add
(bad)
(bad)
pushf
mov
cmps
push
xchg
sbb
jg
leave
stc
push
mov
add
fiadd
cdq
bound
and
inc
test
push
aam
fcmove
sub
inc
cmp
dec
enter
pop
pop
data16
xor
mov
xchg
out
pop
lock
loope
jnp
loopne
sub
push
loopne
dec
and
jle
shl
call
mov
or
sahf
sub
mov
dec
and
pop
inc
shr
cmp
jl
call
dec
dec
push
lods
repnz
push
js
js
outs
gs
and
inc
lea
fwait
cmps
cs
pop
shr
xlat
pop
jle
push
xchg
xor
adc
xchg
push
dec
pop
fsubrp
push
retf
enter
push
mov
push
dec
mov
and
pmuludq
cmp
jae
push
inc
(bad)
pop
mov
je
fnstcw
jg
and
in
xor
movs
push
mov
stc
(bad)
push
push
jb
int3
jmp
jg
idiv
push
sbb
or
retf
movs
and
mov
gs
dec
cmp
xchg
ret
movs
test
sub
add
jle
test
jg
xchg
int
jecxz
cwde
inc
repz
dec
or
(bad)
mov
mov
in
ja
jno
enter
(bad)
std
mov
fsubr
ret
(bad)
push
cmp
mov
mov
push
loope
prefetch
std
fdivrp
out
std
imul
fwait
inc
pop
dec
inc
fsubr
aad
jecxz
(bad)
leave
in
pop
sahf
jo
movs
jns
xchg
stos
stos
or
lds
out
shl
jae
mov
or
nop
cwde
adc
or
mov
mov
out
fs
jle
lahf
scas
pop
xchg
inc
into
cmp
rol
std
call
(bad)
mov
sub
icebp
mov
cmp
mov
jge
sbb
icebp
std
inc
and
push
test
xchg
out
movs
cmps
xor
mov
data16
stc
ss
sub
mov
cmps
jl
cmp
aaa
aam
mov
shl
loope
pusha
movs
(bad)
xor
cmp
mov
into
das
test
fsub
mov
shr
or
scas
fsub
dec
sub
jbe
(bad)
mov
xchg
stos
pop
int3
xor
loopne
pushaw
int3
xlat
xchg
outs
int3
ficom
fld
lock
add
xor
adc
call
adc
jbe
jge
jecxz
and
mov
ror
pop
pusha
mov
inc
ficom
dec
sub
or
movd
jg
iret
cdq
fwait
mov
jne
mov
aaa
outs
mov
mov
loop
mov
jnp
or
out
ja
sahf
mov
outs
rol
adc
cs
mov
pop
push
mov
outs
movs
fcomp
scas
mov
es
pusha
and
or
ror
pop
hlt
jns
(bad)
mov
ret
cdq
mov
push
icebp
pop
mov
into
push
or
cmp
pop
pop
dec
inc
jl
sub
jle
scas
mov
pop
iret
push
fwait
loopne
fist
hlt
push
inc
sahf
jno
push
jne
sahf
push
mov
jo
push
pop
imul
js
leave
or
lods
jl
pop
adc
clc
mov
jge
lahf
sub
int3
push
sub
int
dec
push
in
out
shr
in
add
sub
push
and
pushf
mov
sbb
push
nop
mov
xor
and
pop
pop
xchg
fs
xchg
cwde
clc
cmp
cmp
adc
sar
cli
sbb
in
bswap
jbe
mov
inc
mov
aad
rol
jne
inc
sbb
aas
jne
les
sub
int
or
lods
and
jo
aas
loope
mov
loopne
pop
(bad)
and
push
inc
mov
push
pushf
fcomp
nop
pop
pop
sbb
sub
mov
sbb
leave
pop
stos
call
dec
sbb
repz
mov
adc
mov
out
ret
in
into
mov
shl
outs
add
mov
icebp
popa
jo
dec
dec
clc
stos
fucomi
cmc
cdq
pop
mov
rcl
out
fcomip
add
into
cs
popa
popf
add
retf
jmp
push
cmp
(bad)
call
repz
inc
lahf
int
lds
adc
mov
dec
aad
test
gs
dec
int
pop
dec
xor
aaa
mov
xchg
leave
test
inc
shl
je
movs
adc
in
sahf
push
push
jno
or
adc
xchg
mov
aad
fwait
jb
idiv
repz
sub
clc
ja
test
in
fisttp
xchg
fistp
xor
ficomp
addr16
jnp
dec
sub
ror
dec
dec
aaa
fnstenv
hlt
ret
test
ins
adc
jmp
in
sti
push
xor
popf
out
mov
lods
(bad)
imul
(bad)
popa
rol
scas
mov
or
test
ss
(bad)
cmp
mov
test
jge
cmp
retf
pop
sub
outs
nop
imul
out
imul
mov
shl
ss
fist
(bad)
pop
jecxz
sub
cmps
jb
hlt
cmp
add
add
xchg
ds
or
adc
push
xor
sbb
in
push
push
sub
mov
dec
mov
mov
and
xor
xlat
enter
ret
(bad)
xchg
and
retf
das
lds
cmp
popa
in
jnp
inc
out
inc
push
or
out
inc
rol
xchg
frstor
shr
aaa
push
cld
adc
push
dec
push
or
jnp
pop
call
ret
(bad)
fnstenv
in
or
fdivp
push
jns
inc
aam
pop
div
repnz
(bad)
shl
xchg
aad
sbb
rcl
inc
jae
sbb
lods
in
fisttp
adc
mov
dec
xor
sub
jbe
mov
shl
popa
cmp
das
mov
lods
xchg
jae
psraw
shr
jp
push
jmp
xchg
rcl
push
lahf
mov
sti
stos
jae
jns
retf
popf
push
ds
test
rcl
ficom
mov
or
dec
(bad)
out
dec
clc
push
mov
cmp
cwde
movs
call
lahf
mov
jle
dec
addr16
mov
sub
push
pop
scas
les
adc
xchg
fldenv
daa
jbe
adc
and
(bad)
sub
daa
cmp
mov
and
dec
sub
aaa
cmps
nop
mov
xor
arpl
dec
loopne
sbb
jne
pop
out
in
loop
cmc
or
add
jmp
iret
imul
push
pusha
aam
inc
aad
jno
adc
dec
in
xchg
jo
fmul
out
lods
sub
push
(bad)
inc
test
cdq
mov
mov
popa
mov
inc
das
cld
data16
test
sub
repnz
(bad)
adc
and
mov
pop
xchg
jecxz
cmp
add
in
shl
test
mov
aad
or
arpl
stos
(bad)
dec
xchg
xchg
sub
inc
ret
loop
call
call
sub
jmp
leave
sub
hlt
daa
mov
mov
cmc
retf
daa
rcr
mov
inc
jno
xchg
mov
pusha
inc
push
daa
pop
add
pop
push
xor
and
push
sbb
inc
inc
sti
packsswb
xchg
not
sar
int
inc
push
lea
cmp
scas
add
cwde
add
imul
jnp
bound
mov
xchg
and
fldenv
add
hlt
int3
and
inc
in
xor
xchg
add
rol
add
scas
inc
sbb
mov
sbb
cld
dec
and
jmp
pop
cmp
pushf
es
idiv
cwde
xchg
ja
bound
and
xor
jg
mov
jmp
ret
inc
push
inc
jo
pop
xor
arpl
add
ret
xlat
fiadd
rcr
mov
popf
sub
add
lock
inc
cmp
je
jle
ins
cs
fdivp
add
and
mov
test
cwde
es
(bad)
aaa
fisttp
xchg
enter
sub
mov
jbe
int
mov
dec
pop
retf
cld
stos
clc
iret
adc
adc
loop
fwait
ins
daa
mov
mov
ror
call
sar
std
ds
(bad)
lods
test
or
gs
ins
out
clc
xchg
inc
xor
test
fld
lahf
xor
sub
jb
xcrypt-cbc
cmps
sar
pop
gs
enter
std
inc
gs
pushf
push
fist
lea
ret
add
sub
push
fldcw
cmp
call
cmp
scas
sbb
mov
push
adc
fsub
int
mov
out
stos
mov
xchg
xor
sub
enter
and
cdq
arpl
mov
loopne
ret
repz
daa
sub
nop
sbb
pop
mov
mov
jbe
xchg
cld
push
pop
aam
fdivr
push
fsub
mov
les
dec
xchg
mov
aas
lea
test
mov
cmp
cmp
dec
aas
out
repz
inc
jle
pop
movs
and
out
jmp
add
fwait
xlat
retf
sub
fwait
retf
sub
lock
cdq
ins
mov
sub
cmp
and
push
and
and
cmp
cmp
std
popf
sub
(bad)
shr
(bad)
jmp
push
fisttp
push
loope
ret
test
pop
jns
push
sbb
stc
outs
jg
adc
cwde
dec
pop
cmp
ficom
pusha
ja
mov
adc
les
lea
shl
dec
cwde
dec
mov
xchg
movs
gs
adc
xchg
push
xchg
out
aaa
xor
dec
out
push
xor
adc
adc
inc
rol
iret
lds
adc
test
arpl
jl
sub
and
cmp
adc
mov
dec
jb
cs
xor
mov
mov
cmovs
jmp
fidivr
inc
xor
bound
inc
mov
fs
xor
adc
mov
pop
or
pop
test
sbb
add
test
push
push
cmp
arpl
or
inc
stos
xchg
(bad)
xchg
xor
mov
fstp
test
pop
outs
adc
or
mov
push
push
cmp
sub
push
fwait
js
je
mov
mov
ret
xchg
pop
mov
and
mov
out
in
mov
pop
mov
test
add
rcl
mov
sub
add
jge
retf
cdq
sbb
mov
stos
inc
in
aaa
push
mov
rcl
(bad)
std
aas
ret
adc
sahf
pop
out
aas
mov
mov
mov
imul
gs
mov
push
enter
sbb
cmp
xchg
sub
and
int
call
push
cdq
lock
jmp
jmp
mov
sub
iret
pop
movs
aad
jmp
or
in
ins
(bad)
fistp
jmp
int3
dec
sub
mov
in
call
dec
leave
test
pop
jno
jge
sub
mov
mov
shr
jp
je
pop
add
sbb
jmp
hlt
jge
jbe
mov
mov
inc
xchg
jno
pusha
in
cmp
pop
inc
movs
icebp
std
adc
xchg
pop
push
dec
inc
cmps
cmps
sbb
ds
inc
cmps
repnz
jecxz
aas
sti
(bad)
sub
pop
pop
fbstp
push
mov
loop
inc
gs
test
(bad)
stc
jo
add
outs
xor
loopne
pop
loopne
sahf
mov
nop
cld
fistp
cmps
mov
in
outs
xor
mov
pop
fidiv
push
mov
sahf
retf
ror
inc
xor
jle
mov
cmps
sbb
(bad)
ins
push
and
pop
jge
imul
dec
add
jnp
inc
mov
xchg
lods
add
mov
jmp
mov
push
xchg
jecxz
cmps
mov
mov
scas
iret
lahf
mov
pop
jns
cmps
std
xor
out
xor
fwait
pusha
shl
or
loope
inc
call
fist
loope
sbb
mov
clc
jo
pop
cmp
aas
and
scas
repnz
sbb
and
push
ror
int3
int3
or
sub
ins
push
(bad)
in
sbb
je
mov
push
jecxz
push
sti
xor
xchg
dec
lods
mul
xchg
mov
mov
jne
adc
scas
sbb
lea
or
pop
fild
mov
sub
jb
(bad)
cwde
add
test
aaa
dec
xor
aad
mov
fldenv
adc
push
call
mov
inc
mov
jmp
jb
push
stos
jle
push
mov
add
xor
test
call
inc
push
and
pop
mov
pop
in
or
je
and
push
dec
fcom
ds
ja
push
mov
(bad)
jmp
xchg
loop
fistp
test
or
fisttp
inc
or
push
xchg
xchg
cmc
das
jl
and
mov
push
or
pop
xlat
inc
push
cmp
xor
out
dec
(bad)
shl
loop
xor
push
push
mov
imul
cmp
movs
jae
outs
or
mov
inc
or
imul
dec
sbb
push
ret
in
cmp
into
cmp
leave
cmp
xor
fsub
and
leave
cld
sbb
test
out
aad
hlt
in
mov
mov
push
fild
sar
add
inc
sub
es
loopne
imul
icebp
jno
aaa
call
xor
ins
or
neg
xor
std
push
pop
mov
daa
pop
mov
xchg
lods
shl
out
mov
cli
xchg
mov
mov
test
jnp
mov
mov
aaa
mov
loop
jl
mov
xchg
mov
pop
movs
int3
pop
push
pop
dec
test
mov
push
fcom
jb
fist
dec
cmps
jne
jb
loopne
(bad)
jmp
imul
inc
xchg
jmp
movsx
fcmovnb
dec
ss
pop
sti
pusha
add
stos
ja
push
lds
outs
mov
jns
push
jmp
or
cmp
cwde
jmp
test
fiadd
iret
inc
mov
push
cmp
mov
scas
out
jg
pop
dec
jp
arpl
xchg
xor
int
aam
and
fucom
lea
inc
add
push
jbe
push
imul
lods
pop
inc
xchg
add
pop
push
pop
adc
inc
repz
ffree
or
jmp
aam
iret
pushf
pop
(bad)
push
xchg
(bad)
jmp
push
cmps
mov
cld
mov
cmps
xor
adc
mul
jb
icebp
lahf
adc
int
and
ins
and
retf
mov
or
xchg
lds
and
rol
inc
or
sub
cs
test
inc
jbe
dec
add
(bad)
mov
inc
mov
xor
mov
and
and
mov
int
or
sbb
pop
and
int3
or
js
cmc
sub
ror
das
loope
div
jmp
xor
add
aaa
lahf
push
out
test
imul
cwde
(bad)
movs
(bad)
jb
push
jae
push
(bad)
scas
add
xor
je
pop
add
and
sbb
rcl
in
std
clc
or
lock
out
std
and
(bad)
sub
jno
cmp
add
(bad)
xor
daa
cmp
movs
push
ins
push
nop
sub
push
js
outs
call
jecxz
pop
push
pop
pop
das
sub
cmps
jo
mov
dec
mov
pop
adc
sub
fadd
adc
lods
popf
mov
in
mov
std
xchg
shl
mov
stc
pusha
leave
je
fcom
es
js
xlat
pop
cmp
setns
addr16
js
nop
loope
fwait
adc
popa
(bad)
and
cmp
cs
pop
mov
inc
dec
pop
(bad)
xor
sbb
(bad)
push
xor
mov
test
dec
gs
xor
cmp
or
jle
shr
scas
xchg
(bad)
pop
push
test
add
test
pop
rcl
icebp
mov
xchg
movs
or
xchg
sbb
mov
and
mov
cdq
mov
ss
ror
aas
push
retf
jecxz
lds
iret
mov
inc
(bad)
fistp
cmp
xchg
or
adc
push
ds
bound
mov
test
push
test
add
nop
in
into
sub
fsubr
mov
iret
retf
cmp
retf
addr16
mov
cmps
mov
inc
movs
lock
repz
mov
aas
mov
jbe
adc
cmp
call
sub
sbb
jne
fnsave
mov
fistp
fxch
pop
loop
mov
(bad)
inc
mov
push
rol
push
jns
inc
lock
popf
or
movs
call
dec
xchg
call
and
jle
xchg
mov
xchg
repz
movs
dec
sbb
pop
cmp
mov
cdq
jb
fstp
sti
cmps
ret
(bad)
push
stc
pop
fdiv
and
sub
sub
xchg
mov
xor
das
sub
outs
sbb
stc
jbe
inc
jecxz
mov
into
xor
fsub
jg
gs
fadd
mov
push
adc
out
push
push
lea
daa
cdq
push
sub
les
pushf
inc
dec
jg
mov
xchg
in
and
ror
adc
push
push
adc
dec
ins
fbld
retf
in
rol
mov
dec
xlat
stos
adc
cdq
pushf
jmp
mov
mov
popf
cmps
sbb
stos
retf
pop
or
fsub
push
xchg
hlt
push
push
push
es
sbb
xchg
iret
inc
cmp
ss
shr
push
push
sub
aas
dec
cs
mov
jge
ss
cmps
loop
pop
mov
sar
imul
adc
xor
stos
inc
xor
push
mov
xchg
(bad)
jmp
or
jge
lock
jl
out
ins
mov
dec
dec
inc
in
dec
clc
inc
pop
bts
adc
push
and
push
arpl
(bad)
fcom
push
pop
imul
sbb
jmp
pop
mov
and
xchg
jp
sub
jns
outs
lods
stc
cli
sti
xchg
fwait
dec
jp
add
pop
mov
into
inc
xchg
cmp
(bad)
xchg
add
pop
ds
xchg
cmp
xlat
leave
cdq
jge
sub
call
test
cmp
adc
aam
vpsubd
pop
inc
sub
mov
loope
gs
cmp
ret
adc
mov
movs
aaa
mov
jge
xchg
mov
or
pop
xchg
xchg
bound
sub
and
mov
cmp
fmul
xchg
cmp
dec
inc
scas
jbe
ret
xor
into
pop
hlt
cmps
mov
mov
sbb
fild
lods
sti
xchg
dec
add
(bad)
out
add
or
call
mov
bound
clc
sbb
sub
dec
or
sub
or
std
clc
inc
dec
mov
adc
(bad)
repnz
push
dec
retf
xchg
mov
retf
icebp
inc
mov
jmp
loope
data16
xor
cmc
aaa
or
xchg
nop
stos
les
fldcw
pop
test
xor
xchg
adc
dec
int3
sub
test
cld
push
lds
fwait
adc
loope
xchg
ds
(bad)
inc
xor
mov
test
or
inc
inc
lods
mov
ds
adc
xor
ss
ins
aas
mov
fiadd
dec
sub
push
cmps
inc
xchg
pop
test
pop
int3
xor
and
out
jnp
std
adc
cld
mov
mov
xlat
rcl
div
add
aad
push
jbe
loopne
les
ficomp
or
jge
cmp
test
add
daa
scas
or
cmp
leave
in
in
jne
test
call
ins
push
push
sbb
daa
repz
outs
sar
cmp
jecxz
xchg
data16
loopne
add
test
or
in
and
pop
mov
mov
jp
test
loop
pop
and
addr16
push
sbb
sub
jmp
adc
rcr
std
xchg
(bad)
pop
sbb
ds
std
jnp
inc
jg
psubw
mov
ror
out
outs
nop
std
mov
push
popa
iret
ret
mov
int3
or
push
xchg
movs
jae
out
or
in
nop
inc
jae
or
push
xor
push
rcl
push
inc
adc
mov
dec
dec
div
loop
(bad)
add
cmp
adc
outs
push
jl
movnti
pop
imul
pop
daa
mov
jns
xchg
loop
xchg
and
or
mov
enter
sbb
mov
mov
push
jecxz
dec
std
pop
adc
iret
sub
imul
cld
and
and
(bad)
mov
test
xchg
mov
dec
stos
addr16
cmp
add
xor
int
cwde
push
xlat
inc
push
or
mov
not
fadd
stos
sbb
adc
or
or
imul
jnp
pop
arpl
aaa
in
bswap
fist
movs
dec
shl
setl
inc
xor
sbb
xchg
mov
pop
mov
mov
or
dec
vsubss
movs
push
ins
pop
(bad)
rol
addr16
mov
pop
loopne
rol
or
push
sbb
cmps
or
call
sbb
mov
and
jnp
sbb
pop
call
mov
and
jl
dec
in
jne
mov
sub
and
js
movs
(bad)
adc
push
ret
or
iret
das
nop
mov
neg
sub
scas
sub
sti
dec
lock
lods
sbb
movs
sub
mov
sub
pop
ret
sbb
scas
or
mov
inc
mov
hlt
cdq
xchg
retf
and
ja
inc
inc
out
cdq
in
nop
iret
cdq
xchg
imul
add
and
(bad)
test
cmp
shr
mov
fdiv
push
sar
mov
fdivp
xor
mov
fcmovbe
jb
sbb
push
mov
mov
xor
pop
scas
iret
add
(bad)
xor
push
xchg
scas
push
inc
inc
popf
std
cmps
and
out
stc
fwait
and
cmps
ss
add
sub
enter
sub
scas
cmc
call
test
fistp
sti
loopne
jge
pop
push
(bad)
popf
rcl
out
or
dec
jne
cmp
sub
(bad)
jnp
jno
mov
and
sub
cwde
xor
rol
sbb
cli
scas
(bad)
pop
ret
xor
dec
ds
dec
sbb
add
and
into
fdivr
and
es
(bad)
fwait
xor
xor
inc
mov
rol
lahf
dec
mov
jb
add
pop
pop
pop
jne
aas
or
iret
imul
cmp
cmp
leave
sub
mov
fldlg2
add
and
mov
pop
cld
jbe
and
mov
xor
ds
mov
hlt
adc
mov
fs
push
jl
std
add
retf
into
arpl
mov
ss
bound
icebp
enter
sub
popa
repz
mov
arpl
mov
sub
sub
or
push
jb
call
retf
cmp
cli
inc
pusha
mov
and
repnz
pusha
nop
rcr
dec
fwait
sub
cs
data16
dec
sub
dec
std
pop
ror
mov
pop
jle
mov
outs
js
inc
sub
imul
lahf
inc
sub
aas
dec
ret
(bad)
xchg
loope
sub
jg
ror
and
outs
and
cld
ins
clc
xchg
je
mov
push
push
daa
sub
sbb
out
pop
mov
sub
icebp
aas
ja
pop
les
int
dec
mov
movs
cmp
dec
add
or
loope
sub
mov
mov
jo
mov
jmp
popf
or
sbb
mov
mov
cmp
sub
inc
scas
rol
jp
cli
push
cmp
stc
loop
mov
or
xor
mov
xchg
xor
retf
sub
sar
and
lahf
cli
outs
fwait
movs
pop
xor
or
ja
jae
dec
inc
push
jne
cmp
dec
icebp
shl
jp
enter
pop
cmp
sbb
push
jnp
jne
or
scas
and
push
in
jmp
retf
jg
sub
pop
repnz
sbb
mov
pop
cmp
sbb
pushf
cmp
adc
or
sub
pushw
adc
ror
jmp
fisttp
addr16
push
pop
daa
and
sub
push
sbb
push
xchg
mov
sub
mov
sub
add
sahf
mov
fmul
neg
repnz
and
jb
das
cmc
cdq
cwde
sub
inc
mov
sub
ss
ss
mov
fiadd
mov
inc
sub
call
jae
std
jbe
cwde
cdq
mov
add
add
sahf
add
mov
sub
in
sub
bound
lods
xchg
fldl2t
push
mov
xchg
inc
gs
rcr
mov
push
ror
adc
add
loop
ins
jge
aas
add
add
js
cwde
mov
cmp
retf
call
jge
mov
push
push
pushf
push
jns
popf
xchg
adc
jbe
cmp
sub
sub
and
in
outs
mov
or
cmps
fidivr
cmps
in
mov
pop
or
std
outs
sbb
out
cmp
xchg
movs
xchg
aad
les
add
dec
push
cmp
stc
inc
pop
shl
test
pop
adc
mov
fimul
fadd
push
push
idiv
sbb
out
(bad)
adc
stc
gs
rol
enter
loop
sub
enter
(bad)
or
cs
sbb
jmp
push
ret
mov
movs
xor
fsub
inc
jg
data16
jg
jb
cs
jns
cmp
fdivrp
dec
loope
cmp
lock
lods
in
mov
add
jmp
iret
call
imul
scas
lock
jo
cdq
aaa
or
pop
scas
(bad)
fist
pop
cmp
jle
iret
push
mov
and
inc
not
jns
mov
fcom
xor
sub
out
push
inc
push
lea
(bad)
sub
pop
(bad)
cmp
cmp
inc
inc
adc
xor
fdiv
iret
ror
jp
push
fcomp
addr16
(bad)
mov
inc
out
pop
dec
and
push
test
mul
sub
mov
retf
pop
jnp
inc
cmp
mov
lidtd
fwait
cmps
sbb
dec
iret
stc
popa
mov
cmps
jae
sub
mov
aaa
mov
xchg
pop
mov
stos
jle
not
sbb
gs
hlt
mov
xor
dec
pop
push
mov
xor
shl
clc
call
rcl
jno
mov
scas
mov
xchg
cmp
ins
outs
mov
xchg
cmp
cmp
adc
pop
ja
push
icebp
or
gs
shl
mov
push
adc
stos
mov
mov
test
out
mov
scas
or
loop
and
fwait
jl
call
push
adc
jecxz
out
pop
push
test
adc
outs
movs
sti
fistp
bound
xor
xchg
mov
jb
mov
cmp
dec
mov
fld
or
xchg
pop
rcr
pop
sbb
xchg
jb
ret
(bad)
and
lock
int3
dec
mov
and
(bad)
shr
adc
fisubr
cmps
outs
adc
pop
aas
gs
inc
scas
push
daa
xchg
das
rcl
retf
xadd
adc
mov
ds
std
and
push
in
(bad)
fld
sub
cmc
jp
aas
pop
cmp
xor
stc
leave
outs
lods
lods
jae
xchg
jae
icebp
mov
fs
scas
repz
xchg
sub
enter
mov
in
sbb
sub
jecxz
(bad)
fdiv
mov
mov
mov
inc
stc
dec
pushf
loopne
inc
sbb
push
xchg
mov
dec
idiv
(bad)
cmps
stos
arpl
add
sbb
xor
sahf
xor
mov
fistp
cmp
and
sub
sub
cmp
xchg
xchg
or
test
mov
aas
mov
rol
sahf
clc
ins
int
mov
xchg
cmp
dec
dec
imul
lahf
daa
cwde
adc
mov
pop
out
dec
mov
pop
mov
idiv
ins
repnz
scas
daa
sub
or
ins
cmp
aaa
mov
jmp
lock
ins
pop
and
add
or
ror
push
jge
mov
scas
mov
mov
lods
and
xor
(bad)
push
lods
or
ins
ss
int
dec
fstp
push
dec
call
pop
in
gs
stos
fcomp
imul
cmp
cld
dec
shr
pop
inc
pop
(bad)
js
in
lahf
and
ret
push
mov
mov
jmp
inc
aad
sti
cmps
stos
int
sbb
pop
xlat
les
jl
fwait
inc
dec
mov
xlat
push
mov
push
popa
daa
je
mov
ins
mov
mov
retf
outs
mov
neg
ret
mov
and
in
sub
call
ret
add
loop
dec
inc
jp
jmp
sbb
pop
sub
frstor
aas
fadd
mov
mov
cmps
sub
shl
jno
cmps
xlat
add
loope
jle
out
pop
aas
lahf
dec
mov
xchg
clc
dec
jb
sub
mov
sub
(bad)
std
inc
mov
fcom
dec
dec
push
call
int
push
std
sub
ja
pop
jnp
call
sbb
push
pop
call
xor
inc
dec
sbb
push
inc
leave
sub
add
dec
inc
es
pop
pop
dec
adc
mov
lds
mov
mov
aaa
int
push
ss
dec
pop
adc
adc
loopne
mov
mov
jmp
icebp
sub
pop
push
cmp
cdq
ins
icebp
nop
sbb
sub
data16
push
mov
mov
mov
cmps
dec
fsub
sub
cs
sbb
inc
mov
(bad)
cwde
cmp
and
jnp
cdq
mov
lahf
out
pop
cmp
out
scas
sub
fidivr
adc
dec
mov
repnz
(bad)
sbb
pop
pop
aam
pop
dec
sub
(bad)
or
mov
mov
lods
add
leave
clc
aaa
mov
xchg
add
out
js
mov
movs
idiv
pop
ficom
add
mov
push
push
pop
or
in
cmp
push
into
sbb
(bad)
retf
retf
daa
ret
xchg
add
dec
call
stos
test
mov
ds
das
mov
mov
fwait
adc
pop
xchg
or
or
jg
cmc
addr16
or
lock
jmp
popa
jg
jb
pop
xlat
icebp
js
inc
cdq
inc
fmulp
test
cmp
inc
pop
repnz
mov
cmps
stos
fdivrp
push
data16
div
cvtps2pi
mov
movs
mov
pushf
adc
test
jbe
icebp
mov
lods
rcl
mov
ficom
in
ins
rcl
cmp
cdq
jmp
mul
push
pop
call
enter
in
and
(bad)
imul
outs
or
outs
cdq
pop
push
test
sbb
xchg
jle
cld
imul
dec
(bad)
in
aaa
jge
adc
adc
sbb
in
sar
add
sub
sub
test
push
cmp
cli
add
xchg
or
popa
aas
mov
ins
pop
xor
mov
cmps
sub
jge
dec
fcmovbe
dec
mov
mov
pop
in
xchg
lods
scas
or
mov
faddp
je
mov
fdiv
mov
fpatan
and
sbb
out
pop
out
inc
mov
cmp
hlt
aas
cli
div
fnsave
sti
loop
sbb
aam
pop
idiv
cmp
es
test
fisubr
in
(bad)
pop
add
jmp
movs
mov
or
mov
out
stc
jo
ret
cld
cmp
stc
xchg
int
mov
mov
pop
mov
leave
loope
fbld
inc
pusha
mov
imul
mov
dec
xchg
push
mov
mov
xchg
xchg
inc
mov
pop
and
push
sahf
or
ins
cli
xor
xchg
xchg
add
or
fsin
mov
push
popa
xchg
std
loop
jle
call
and
test
jbe
arpl
push
in
and
sbb
push
fistp
push
adc
shl
jp
jmp
mov
cmp
je
inc
mov
and
shl
dec
rcl
xchg
xchg
jge
popf
aaa
xchg
loope
js
xchg
retf
fist
sbb
into
xor
push
in
cmp
push
push
aas
or
jmp
hlt
xor
outs
and
shr
sub
and
enter
scas
pop
jbe
cdq
and
imul
stos
jbe
popf
pop
ficom
jno
nop
mov
mov
xor
ja
sub
inc
add
out
ror
pop
aaa
pop
cmc
sub
xchg
xchg
mov
sti
add
(bad)
retf
fs
gs
xlat
jae
mov
dec
sub
ret
or
mov
std
movs
mov
jae
jns
stc
jne
jge
xchg
cmp
arpl
loope
mov
push
jns
sub
pop
es
sbb
int
mov
and
out
dec
dec
fwait
dec
jle
stos
ret
xchg
add
cmp
and
mov
enter
sbb
adc
rcr
es
pop
das
adc
sbb
test
inc
push
inc
clc
or
inc
sub
jmp
pop
jmp
jle
push
(bad)
push
inc
test
mov
pushf
inc
push
popa
pusha
ret
cli
jmp
(bad)
sub
cmp
jmp
cdq
xchg
pop
add
xor
iret
sbb
xchg
stos
inc
enter
sub
mov
mov
or
dec
cmp
mov
sbb
jno
dec
push
cmp
push
clc
push
iret
test
aas
cs
fdivr
movs
push
cmp
outs
fisub
xchg
cmp
mov
jmp
xor
add
xchg
inc
stos
(bad)
sub
dec
push
pop
sub
push
push
je
call
mov
inc
(bad)
cld
sub
lods
cs
cmp
call
or
sub
ins
mov
mov
and
push
enter
sbb
daa
add
inc
iret
adc
mov
cmp
fdiv
out
mov
mov
add
(bad)
mov
jo
imul
pushf
adc
sahf
call
xlat
cmps
hlt
add
pop
sbb
scas
test
pop
out
in
clc
xchg
fcomi
add
dec
xchg
adc
loopne
mov
(bad)
movs
push
aas
xor
xor
xchg
mov
sub
mov
in
loop
retf
push
lahf
cmp
fsubr
int3
icebp
adc
jne
sbb
movs
push
mov
scas
repz
unpckhps
mov
or
std
sbb
out
icebp
nop
xchg
movs
pop
mov
and
xchg
mov
stos
and
in
cli
sub
iret
ds
xor
jmp
xchg
pop
mov
test
pop
je
outs
cmc
sbb
xchg
mov
cmp
in
repnz
scas
jp
inc
jg
xchg
in
in
ret
adc
stos
iret
dec
jbe
rol
adc
jae
imul
xor
aas
inc
pop
movs
pop
inc
add
leave
stos
rcl
push
xchg
sub
mov
or
pusha
and
and
mov
jg
leave
test
dec
lods
je
fist
out
fadd
loopne
fnstcw
out
movs
mov
addr16
xchg
cmp
dec
aaa
iret
jmp
mov
mov
jo
mov
mov
mov
daa
xchg
mov
cmps
pop
push
lock
pusha
adc
dec
push
xor
or
or
cli
shr
push
aaa
into
mov
adc
xchg
les
bound
lds
inc
sub
push
push
mov
adc
out
mov
bound
push
inc
pop
jge
(bad)
mov
xchg
xor
or
sysret
mov
pop
fild
jmp
and
cdq
or
in
sub
mov
and
inc
mov
jmp
xor
enter
outs
push
(bad)
icebp
xor
imul
leave
push
repnz
repnz
adc
scas
mov
loopne
out
outs
mov
aad
stc
outs
push
jmp
pushf
mov
ds
mov
mov
arpl
mov
gs
cmp
push
or
mov
leave
loop
imul
aam
push
popf
loopne
repnz
cmp
fnstcw
fist
addr16
xchg
(bad)
mov
aad
icebp
pop
neg
retf
repnz
mov
iret
fstp
out
or
(bad)
sub
cmps
out
inc
xchg
sbb
add
mov
inc
shl
xor
imul
jae
jp
test
out
movs
movs
pop
in
or
fbld
xor
outs
fld
(bad)
sahf
add
xchg
push
mov
xchg
xor
adc
pop
jg
xchg
mov
dec
data16
jge
pop
stc
(bad)
mov
mov
retf
inc
pop
adc
repnz
mov
push
daa
cdq
add
sub
mov
lods
loop
push
arpl
setle
in
into
sbb
adc
mov
retf
mov
ret
(bad)
lds
fcmovnu
cmp
jno
in
sbb
mov
pop
mov
dec
pop
mov
sub
les
(bad)
mov
pop
cmc
fdiv
add
lock
aad
add
xor
mov
icebp
movaps
cmp
jle
adc
call
mov
xor
ret
push
enter
popa
inc
nop
pop
cld
das
mov
addr16
js
das
gs
inc
aaa
js
(bad)
cmp
std
je
inc
mov
aam
stos
add
push
(bad)
fisubr
mov
lods
mov
jae
movs
sub
std
and
push
ja
std
mov
data16
xor
or
aam
jne
mov
sbb
add
xor
in
jno
add
jecxz
jle
dec
xchg
jno
jmp
adc
jp
or
jg
fild
mov
xchg
pop
loope
jno
pop
xchg
xchg
push
inc
or
mov
lods
jmp
push
add
adc
xor
rol
(bad)
arpl
xor
inc
es
and
fistp
or
pop
bound
retf
mov
xchg
movs
push
jo
dec
pop
inc
in
jno
leave
mov
mov
and
ja
int3
push
stc
xor
mov
adc
aad
push
aad
(bad)
jns
stos
pop
sub
daa
add
jo
clc
cs
inc
(bad)
cmp
inc
lds
cli
inc
cwde
adc
adc
xchg
mov
xchg
(bad)
loope
mov
xor
cmp
popf
fst
adc
dec
cld
aaa
icebp
movs
(bad)
out
dec
sbb
push
int3
(bad)
in
fimul
cmp
repz
xlat
cdq
movs
les
cmp
sub
dec
ror
(bad)
dec
rcl
pusha
nop
jns
bound
mov
cmps
pop
xor
inc
icebp
jecxz
adc
pop
in
imul
in
loop
add
jmp
int3
and
(bad)
fsub
ffreep
aad
add
iret
aas
in
and
dec
cmp
push
xchg
gs
outs
test
push
retf
aaa
dec
aaa
add
daa
push
out
jns
xchg
adc
enter
nop
dec
pusha
xchg
xor
mov
push
cmp
sti
inc
lea
push
dec
cdq
out
loope
std
dec
pop
mov
loop
retf
gs
shl
nop
in
movs
xchg
je
sub
pushf
icebp
and
jle
std
xor
mov
stc
push
xchg
popa
call
repz
xor
mov
inc
and
dec
cmp
xor
and
mov
or
add
imul
into
in
cmp
mov
repz
mov
jg
lds
retf
and
xchg
div
push
mov
xor
cmp
cmps
xlat
repnz
movs
push
test
jbe
cld
nop
fsub
jl
shl
or
fprem
retf
sbb
mov
mov
(bad)
sub
and
imul
dec
(bad)
push
fs
dec
out
jbe
sahf
cmps
push
add
outs
jle
sar
loop
fwait
pusha
push
xchg
mov
xchg
jnp
dec
mov
xor
mov
ds
nop
aaa
js
mov
in
retf
jo
call
enter
fcomp
push
add
sub
fsub
xor
mov
mov
mov
jns
cdq
test
mov
and
inc
sbb
or
mov
sbb
out
mov
addr16
or
sub
stos
push
repz
mov
popf
cmps
stc
outs
mov
retf
pop
lock
push
popa
cmp
lock
test
iret
inc
xchg
inc
jb
retf
cld
retf
stos
call
or
lods
cmp
push
mov
add
addr16
cwde
cmp
in
adc
pop
jbe
fldcw
das
cmp
data16
xor
ret
adc
shl
or
jg
cmp
or
xor
sbb
inc
sbb
loope
call
cmps
popa
data16
fcomip
loopne
loope
lods
mov
cmps
push
inc
std
fidiv
sbb
mov
lock
jnp
sbb
(bad)
sbb
jmp
mov
fbstp
dec
push
mov
sub
sub
xor
imul
add
mov
mov
fdiv
xor
sbb
or
mov
or
adc
int
or
xchg
sub
out
push
push
mov
pusha
es
or
fistp
jge
and
mov
sti
in
adc
and
popa
mov
mov
mov
add
retf
scas
xchg
pop
ret
pop
ficomp
lock
int
or
dec
clc
jo
inc
cs
loop
lods
daa
push
push
int
sub
dec
sub
daa
in
cmp
sub
or
(bad)
mov
loope
cmp
lea
aaa
cmp
(bad)
in
loopne
fld
neg
xor
ins
popa
push
dec
enter
aas
add
faddp
in
inc
arpl
cmp
and
mov
in
mov
ins
push
sub
stos
or
jbe
in
pop
ficom
(bad)
push
inc
add
mov
push
push
sub
movs
jb
pop
cdq
add
aam
ins
(bad)
and
xor
inc
clc
retf
dec
dec
and
inc
mov
fsubr
lods
xor
mov
cwde
daa
mov
les
not
pop
mov
cmp
xor
mov
push
scas
sub
cs
int
push
cmp
add
inc
add
cmp
or
mov
push
add
adc
(bad)
dec
add
rcr
jno
and
dec
adc
mov
push
aam
push
adc
(bad)
dec
push
pop
mov
outs
inc
aas
ins
xchg
in
sahf
retf
adc
rol
and
xor
cld
lods
fucomi
js
push
xor
sti
ja
shl
xor
cmp
cld
sar
and
pusha
mov
sar
dec
outs
push
div
lods
aam
adc
ss
das
inc
cmp
retf
xchg
inc
lock
mov
mov
mov
dec
mov
mov
loopne
fisttp
mov
sbb
jl
mov
in
xchg
imul
icebp
xchg
and
push
sbb
dec
test
out
xchg
popf
mov
cmc
and
cmp
outs
xchg
inc
cwde
jl
aad
stc
lock
aad
popf
es
outs
dec
xor
mov
test
push
xor
lock
ficomp
test
aam
(bad)
aam
xchg
and
mov
cmp
in
ror
dec
xchg
mov
sbb
mov
aas
lahf
imul
imul
lea
retf
stos
ds
(bad)
js
sub
dec
sub
jae
or
pop
pop
adc
dec
ins
lock
fadd
mov
pop
cmp
icebp
cmps
movs
inc
or
cmc
shl
mov
retf
jl
lods
dec
mov
push
lods
in
pop
dec
scas
scas
mov
sbb
aaa
push
inc
add
ins
xor
xor
and
mov
je
movs
fmulp
leave
cwde
mov
dec
jno
cli
ins
sub
xchg
push
mov
xor
mov
int3
pop
sti
scas
push
pop
popf
and
inc
aad
test
or
sub
jl
shl
hlt
fsubr
jne
ins
xor
adc
adc
(bad)
clc
push
jmp
lahf
inc
icebp
mov
gs
push
sbb
outs
inc
and
mov
or
cdq
jmp
loope
aam
cdq
daa
lods
mov
movs
movs
pop
out
jae
std
mov
pop
movs
pop
mov
cmps
jno
sub
call
call
(bad)
and
ffreep
mov
ficomp
movs
mov
xor
sbb
std
iret
push
sub
sbb
sbb
pop
adc
fwait
push
adc
ficomp
xor
mov
jbe
mov
inc
fcmovnbe
inc
es
in
jne
repz
mov
pusha
adc
cmp
add
mov
cmps
and
and
pop
dec
dec
and
bound
push
lahf
pop
(bad)
xor
popf
lods
cpuid
aad
(bad)
add
inc
aas
cmp
inc
xor
fdiv
repz
push
xor
jp
sbb
sbb
or
aad
push
jecxz
cwde
aam
mov
dec
pop
jmp
dec
and
pop
mov
jnp
jle
mov
(bad)
fisub
push
sub
sbb
adc
js
xor
inc
cmp
pop
sti
imul
nop
pop
ins
fstp
iret
fstp
xchg
jmp
add
aas
sbb
mov
mov
enter
movs
les
dec
mov
cmc
push
pop
mov
int3
dec
in
cli
mov
imul
pop
stos
push
push
adc
ja
test
inc
retf
mov
aas
repz
scas
inc
js
mov
xchg
or
xor
jb
pop
sub
pushf
and
and
or
inc
or
add
and
sbb
jne
dec
inc
or
lock
popa
mov
mov
adc
or
(bad)
call
xlat
lea
adc
push
pop
mov
idiv
and
int
dec
and
or
(bad)
jnp
fstp
gs
push
sub
out
test
push
pop
imul
or
pop
sub
rol
pop
and
ja
cmp
sub
imul
daa
pop
adc
sti
mov
in
and
inc
(bad)
jmp
inc
addr16
nop
jmp
mov
pop
gs
add
dec
call
daa
inc
out
test
imul
fwait
jns
push
and
adc
arpl
fisttp
nop
int
xchg
(bad)
mov
aaa
das
mov
cld
add
mov
iret
int3
cmps
repnz
call
jg
cwde
in
jae
adc
mov
and
scas
shr
hlt
stc
adc
sub
mov
cdq
and
xchg
mov
gs
jno
mov
push
bound
sar
push
push
out
adc
lods
inc
retf
loopne
ds
jle
inc
xchg
retf
adc
mov
push
enter
test
iret
aam
or
pusha
lahf
mov
adc
lahf
popa
je
fcomp
xor
sar
inc
wbinvd
push
dec
xchg
xchg
cmp
loopne
fnstenv
cmp
sahf
push
mov
adc
es
mov
cmp
(bad)
arpl
mov
sub
movs
rcr
sbb
xchg
add
lahf
xchg
sbb
adc
jno
dec
pop
or
out
into
fldcw
and
push
call
movs
ret
adc
cmp
(bad)
rcr
mov
lods
push
jno
outs
ins
and
and
cs
xor
movs
inc
sbb
mov
dec
adc
mov
test
lods
retf
jnp
clc
lods
aas
imul
and
jmp
ficom
xor
in
sub
inc
mov
inc
loop
scas
scas
sbb
sti
mov
lea
movs
popf
out
shr
mov
xchg
xchg
mov
imul
movs
ss
mov
or
std
mov
adc
cdq
sub
ds
fild
jecxz
lock
xchg
add
mov
or
ror
jmp
dec
icebp
adc
jae
movzx
rcr
sbb
cmp
dec
mov
rcl
sub
jg
popf
popa
mov
lods
enter
push
xchg
(bad)
cs
jnp
(bad)
aas
or
mov
pop
mov
jge
in
jae
push
fidivr
cmp
push
dec
not
fdivr
sbb
inc
and
test
mov
or
daa
int
and
(bad)
add
pushf
mov
xchg
shl
mov
loop
ins
push
cld
and
cmc
ja
jne
enter
fnstsw
pop
xor
jne
bound
call
pop
jb
mov
pop
xor
sbb
(bad)
ds
sub
ret
mov
push
mov
and
call
jge
pushf
and
fs
mov
outs
xor
mov
xor
mov
mov
mov
jge
and
cmp
xor
cdq
mov
dec
lds
adc
(bad)
sbb
pop
test
sbb
shl
icebp
(bad)
cli
push
mul
mov
js
cmc
mov
jp
add
cs
add
jle
fcmovu
lahf
sub
sbb
adc
(bad)
imul
pop
shl
out
std
sub
dec
xchg
scas
and
lods
pop
cld
movs
jle
mov
int
imul
jmp
fstp
jle
repnz
out
es
push
movs
adc
movs
and
cwde
dec
add
cs
std
(bad)
lods
int
pop
dec
cdq
mov
adc
(bad)
cwde
sahf
and
cdq
sbb
ins
cmp
pop
fdivr
jbe
push
fcomp
nop
movs
sbb
adc
jecxz
add
pop
mov
jp
xchg
and
ja
mov
inc
mov
jmp
loop
pop
out
or
scas
inc
and
inc
lahf
or
and
daa
aas
jae
mov
cmc
sbb
mov
lahf
cs
aas
ds
das
data16
repnz
push
out
cmp
mov
push
mov
enter
in
cld
(bad)
cmp
test
dec
pop
cmp
mov
aas
cmp
movs
call
sbb
mov
cmps
ss
fucomp
fst
and
xchg
repz
aaa
rcl
mov
cmp
push
pop
mov
mov
call
or
lods
sub
push
mov
and
ror
jns
(bad)
jmp
cwde
(bad)
dec
xchg
mov
in
fisub
aad
adc
push
jo
shl
mov
das
call
adc
jns
sbb
jmp
inc
fs
dec
call
adc
jmp
pop
jmp
jnp
test
and
aas
aad
rcr
popf
out
sub
sbb
(bad)
das
repz
(bad)
mov
mov
pop
dec
xor
lods
mov
or
dec
imul
dec
inc
(bad)
jns
lea
inc
pusha
pop
xor
outs
loopne
repz
push
jmp
inc
cld
adc
out
(bad)
push
ret
pop
or
push
enter
retf
fild
cmc
mov
pushf
xchg
scas
sub
jo
int
cmp
mov
push
out
jle
imul
mov
and
dec
add
dec
mov
or
push
adc
mov
dec
jb
or
adc
das
dec
arpl
push
std
pop
mov
ror
imul
call
fidivr
mov
or
inc
std
xor
nop
fwait
cmp
and
or
leave
mov
pop
in
stos
jno
cmps
mov
xor
int3
lahf
cmps
add
push
xor
cmps
test
mov
outs
out
push
out
inc
stos
mov
jbe
adc
xchg
retf
call
push
sbb
mov
cmp
ins
mov
sub
call
sbb
test
pop
xlat
sahf
dec
cld
inc
pop
or
xor
push
cmp
push
aam
and
fcom
fild
dec
lock
push
test
leave
push
xchg
mov
cmc
jge
ss
push
pop
mov
mov
adc
les
arpl
div
add
gs
xor
mov
xor
or
call
lods
pusha
ds
(bad)
fistp
rcr
in
jle
or
sti
pop
inc
in
psubsw
and
movs
fmul
mov
mov
sahf
das
int3
sub
or
adc
push
repnz
dec
jb
pop
call
sub
(bad)
dec
(bad)
push
in
int
sahf
inc
mov
and
hlt
push
cmc
out
lahf
jae
mov
test
fnstcw
test
ins
in
retf
cmps
jbe
push
cmp
sbb
push
mov
aad
jne
sbb
cmp
mov
pop
push
add
lock
mov
or
aas
ret
iret
cwde
inc
xor
add
fst
and
jmp
imul
sbb
or
stc
sub
xchg
es
mov
inc
imul
fcomi
xor
std
shl
int3
jmp
mov
mov
mov
mov
or
dec
cld
scas
sub
addr16
test
js
loop
ss
lods
pop
cld
inc
mov
sbb
lahf
dec
mov
mov
sbb
sub
jbe
pop
jne
and
call
dec
xchg
xlat
push
xchg
cs
xchg
das
pop
jne
xor
in
js
cdq
cmps
jmp
adc
cmps
or
push
mov
aad
jns
ins
adc
stos
cmp
leave
pshufw
mov
jno
lahf
push
movs
pop
call
sub
push
sbb
sbb
inc
xor
out
imul
jle
xor
push
xchg
or
jb
mov
cli
xor
mov
or
fwait
or
or
pop
adc
stos
jo
push
pop
repnz
pop
aaa
mov
dec
add
push
xlat
mov
or
iret
pop
pop
jmp
mov
xchg
adc
leave
jns
inc
imul
adc
arpl
sbb
imul
bound
jnp
sub
inc
(bad)
push
rcr
ret
retf
or
jns
sub
push
xchg
rcr
inc
call
stos
lods
lock
(bad)
jbe
adc
popa
daa
fimul
aam
inc
les
lea
push
xlat
push
int3
int3
les
hlt
add
xor
inc
mov
push
mov
and
adc
out
inc
jno
xchg
pop
inc
adc
lea
rol
es
mov
bound
push
mul
daa
cmp
fcmovnbe
lock
xor
sbb
xlat
or
inc
and
test
fdiv
mov
or
mov
adc
jecxz
or
scas
inc
cld
es
mov
test
shl
daa
lock
retf
lods
cld
loope
dec
sub
mov
je
cs
mov
shl
adc
hlt
inc
bnd
stc
xor
pop
std
ja
mov
xor
xlat
mov
add
xchg
sbb
xchg
cmp
scas
cmp
jl
and
mov
pop
pop
in
xor
ins
ins
out
adc
dec
cmc
mov
lds
int3
test
(bad)
in
fsub
push
pop
cwde
stos
out
add
into
add
mov
mov
sbb
bound
jns
push
ins
test
xchg
sbb
fcom
cmc
into
jo
jl
call
jb
cmps
and
mov
and
cmp
pop
in
cmp
gs
int3
out
aam
sbb
fisub
push
push
cmp
sub
add
xchg
push
jbe
and
ja
fldenv
mov
(bad)
mov
mov
addr16
dec
std
add
dec
sbb
mov
test
push
int
xor
lahf
push
jmp
mov
sub
jle
lods
retf
into
xor
mov
sbb
out
ffree
pop
jge
mov
ficom
test
pop
repz
shl
sbb
jecxz
xchg
out
imul
adc
or
cli
sti
dec
imul
sbb
enter
adc
jmp
ds
or
test
lahf
movs
mov
popa
addr16
dec
(bad)
jecxz
out
enter
or
std
jmp
mov
test
mov
pop
cdq
sub
xlat
and
dec
pop
test
sahf
and
xchg
mov
xchg
mov
rep
xchg
call
scas
ja
jae
dec
xchg
inc
je
xchg
push
and
mov
cmc
mov
xchg
and
stc
sbb
or
adc
imul
shr
test
xchg
std
jo
mov
sbb
or
call
xor
dec
mov
out
nop
fwait
push
dec
mov
mov
xchg
gs
pushf
in
xchg
mov
data16
(bad)
retf
scas
loop
push
sub
add
pop
aas
jmp
(bad)
cmp
sbb
in
setbe
fnstenv
or
cmps
pop
adc
inc
hlt
push
mov
ret
sbb
jl
(bad)
fsub
js
enter
stos
adc
mov
retf
das
pop
aas
test
adc
sbb
xchg
push
push
dec
inc
dec
inc
pop
data16
inc
and
cmp
popa
and
fild
mov
mov
jb
daa
push
imul
xchg
push
jno
mov
or
ins
mov
xchg
and
movs
push
jmp
push
or
test
inc
dec
xchg
sbb
ret
in
iret
(bad)
in
add
cdq
adc
cmp
jb
push
xor
rcl
add
adc
jno
(bad)
int3
outs
adc
lahf
inc
ret
jmp
jle
clc
fld
mov
loope
jb
push
test
inc
pop
aas
(bad)
retf
shl
outs
nop
in
lods
iret
and
adc
out
mov
mov
pop
cdq
fiadd
mov
hlt
mov
sub
sbb
pop
mov
or
dec
jne
jle
cwde
xchg
xchg
cmps
ret
dec
add
cmp
mov
hlt
or
test
cs
xchg
adc
test
jp
cli
or
pop
inc
adc
add
loopne
or
lods
aad
ja
mov
arpl
adc
sub
push
mov
sbb
xchg
dec
pusha
jnp
jl
push
mul
adc
in
sub
jo
xor
push
(bad)
in
jbe
repnz
add
leave
inc
ret
push
push
add
xor
cld
icebp
es
inc
cmps
js
add
add
add
xchg
push
mov
push
lods
adc
and
adc
pop
mov
js
inc
popa
xor
cdq
sahf
xor
inc
jp
nop
aas
jle
or
rol
call
cmp
pusha
jns
xchg
repz
js
pop
mov
cmp
mov
push
sbb
sub
pop
xor
nop
aaa
and
call
ror
ret
mov
ins
fstp
pushf
ins
cmp
data16
xlat
out
jne
lahf
(bad)
(bad)
std
jp
scas
out
cli
mov
rcl
push
nop
xchg
push
sbb
add
(bad)
in
fdiv
(bad)
stc
mov
out
repnz
xchg
jp
push
jge
aad
adc
add
cmp
cmc
mov
push
xlat
pop
dec
push
push
push
pop
cmp
sub
cmp
(bad)
adc
fst
adc
xchg
push
cmp
adc
test
sbb
pop
adc
dec
lock
repz
jmp
jmp
xchg
sbb
call
add
imul
loopne
push
lods
xchg
mov
dec
mov
xchg
xchg
pop
and
and
ja
dec
and
jae
(bad)
mov
ins
adc
add
cwde
xor
dec
lea
imul
jbe
fist
mov
ss
pop
mov
repnz
rcl
cmp
leave
int3
pavgw
and
xor
test
inc
xor
es
xchg
and
pop
leave
stos
clc
mov
lahf
jae
clc
jmp
add
xor
enter
inc
mov
dec
cmc
mov
sbb
xor
cmp
or
jbe
gs
in
mov
xchg
xlat
div
and
les
test
jle
daa
and
jae
inc
jae
push
arpl
ins
push
gs
dec
pop
add
out
dec
adc
inc
js
les
lock
xchg
les
add
xchg
or
cmp
ins
scas
add
lods
icebp
outs
rcr
popa
mov
test
sub
mov
mov
adc
pop
test
sub
jb
xchg
mov
repz
jne
jp
jo
mov
stos
test
sub
(bad)
sub
xlat
or
out
inc
inc
cmp
add
imul
pop
or
movs
arpl
add
pop
sbb
pop
fwait
cmp
push
cmp
ins
stos
push
add
loope
(bad)
mov
inc
retf
mov
into
and
push
pop
mov
mov
push
xchg
pop
lods
adc
ret
ret
neg
push
in
retf
(bad)
adc
mov
in
sbb
mov
mov
ret
fnsave
dec
call
in
(bad)
xchg
mov
cmp
jne
je
ja
repnz
not
or
(bad)
jne
mov
mov
jb
addr16
jnp
rcl
jae
or
into
cmp
jbe
inc
push
popa
(bad)
ds
pop
jne
mov
js
addr16
addr16
fcmovnb
xchg
pusha
xor
xchg
cmp
retf
sub
pushf
dec
test
inc
or
push
(bad)
cmps
push
jno
outs
pop
rol
adc
mov
cdq
cmovs
mov
adc
push
fbld
or
push
mov
stos
stos
xor
mov
xchg
test
jno
and
or
es
and
iret
pop
pusha
mov
jle
sbb
cmp
fldenv
loope
sbb
mov
push
jmp
test
mov
push
outs
scas
aaa
dec
retf
xchg
sub
int
dec
fisub
and
neg
adc
cmp
and
xor
int
repnz
xchg
dec
mov
idiv
cmps
or
inc
(bad)
aam
mov
loope
pop
pusha
adc
cdq
pop
out
(bad)
repnz
out
out
adc
xchg
cmp
add
(bad)
aad
cdq
mov
and
shl
cmp
(bad)
frstor
xor
es
sbb
aas
das
mov
add
mov
mov
pop
xchg
mov
mov
add
adc
sbb
adc
ret
xchg
sub
das
popa
loopne
add
cmps
and
test
call
cdq
loop
gs
in
push
and
pop
pusha
aam
push
outs
dec
xor
imul
fsubr
cmp
in
repz
jae
mov
jge
test
leave
(bad)
cmp
xor
test
jno
xor
ins
jnp
mov
imul
mov
mov
std
jnp
xchg
push
aas
dec
cmp
sbb
rol
add
xlat
xchg
xor
js
cmp
jp
(bad)
cmp
mov
imul
dec
ficomp
ds
addr16
aas
push
retf
mov
aad
cmps
ret
mov
or
std
aam
sbb
stos
fcmovnu
(bad)
adc
cmc
pop
xchg
fwait
sub
aad
cmp
pusha
repnz
fild
pop
mov
push
add
cld
out
inc
iret
dec
aaa
inc
push
fidivr
xchg
fwait
cld
jmp
and
push
cmc
in
cmp
mov
mov
retf
xor
fistp
sbb
(bad)
mov
in
in
sub
dec
adc
xchg
retf
pop
fiadd
fwait
test
nop
adc
sbb
movs
test
jmp
push
jl
jmp
shl
mov
mov
inc
sbb
mov
xor
adc
push
adc
pop
and
jl
push
jae
hlt
sbb
or
test
jge
mov
mov
ss
jb
push
out
xchg
(bad)
or
repnz
shl
outs
jp
and
imul
push
aam
or
add
cmp
push
test
xchg
inc
mov
pusha
ror
mov
repnz
mov
push
lds
add
sub
adc
push
dec
fucomi
sbb
inc
jl
rol
cmp
cdq
sbb
pop
outs
fisubr
cs
rol
xchg
jge
push
mov
xor
stc
xchg
popa
xor
sub
movs
and
mov
sbb
in
dec
pop
cwde
sbb
pop
or
xor
aas
dec
mov
push
cld
xor
dec
sbb
addr16
sub
cmp
xor
out
dec
mov
pop
rcl
stos
cmps
imul
(bad)
hlt
dec
bound
and
nop
pop
ss
push
push
mov
sbb
mov
loope
mov
(bad)
dec
je
stc
dec
ret
retf
jle
dec
jecxz
out
pop
stos
mov
fucom
mov
and
adc
scas
pop
pusha
leave
fs
fisttp
icebp
xor
xchg
adc
mov
movups
push
or
add
aam
sub
cmp
add
jo
xchg
popf
pop
cwde
dec
cwde
fwait
xor
mov
xor
cmps
int
cmp
mov
cli
adc
cmp
xchg
and
cmp
gs
and
std
push
movs
sbb
lods
mov
pop
sbb
sub
jg
push
sub
xor
not
ins
lock
mov
leavew
xchg
inc
xor
cmp
push
mov
adc
xlat
jp
test
sub
jl
ret
das
into
cmp
xlat
out
xor
jle
adc
cmps
test
xor
lea
sti
mov
shl
pop
cld
rcr
cmp
pop
mov
jecxz
xchg
mov
mov
inc
xor
aam
(bad)
sbb
xchg
mov
push
js
dec
je
enter
popa
pop
or
loope
xlat
mov
das
xor
cmps
xchg
mov
inc
fs
lods
jnp
pop
cdq
xor
sub
xor
xor
add
push
das
sub
pusha
push
dec
sbb
iret
out
mov
test
movs
cmps
sub
mov
(bad)
xchg
cmp
ja
mov
mov
inc
aaa
dec
push
add
and
and
sar
es
mov
dec
rol
push
mov
outs
pop
in
pop
mov
jle
mov
push
add
mov
xchg
repz
mov
lods
hlt
sub
mov
lods
sar
xchg
dec
push
mov
jp
aad
movs
cmp
jnp
push
dec
cmps
inc
call
in
inc
fdiv
jne
ret
lea
jbe
pop
arpl
(bad)
repz
sub
(bad)
push
fcmove
dec
xchg
int3
jae
sub
mov
dec
inc
in
mov
sub
fcom
mov
fnsave
rcr
cwde
fisttp
icebp
stos
jle
shl
call
mov
pop
pandn
xor
int3
or
repz
pop
nop
fcom
sub
jmp
ds
ss
adc
data16
xor
or
xor
adc
jnp
pop
xor
movs
(bad)
inc
mov
xchg
outs
jne
or
mov
jae
xor
mov
xchg
jb
or
and
leave
jnp
cmc
stc
sub
ret
xchg
sub
repnz
xor
popa
cld
lods
adc
sbb
dec
mov
test
mov
call
mov
sbb
loop
fcom
xor
mov
mov
in
in
out
frstor
mov
jmp
imul
push
fs
push
mov
(bad)
fisubr
movs
xor
mov
and
jnp
xchg
sub
out
dec
add
push
movs
push
mov
inc
sub
add
sub
les
xchg
cmp
int3
test
ja
push
(bad)
dec
dec
mov
ret
call
inc
aad
push
aad
fwait
jo
gs
adc
cmp
fcom
aam
out
leave
cs
push
pop
sbb
jae
shl
aaa
adc
or
sbb
or
test
pop
push
(bad)
or
jne
mov
mov
bound
sbb
ror
leave
pop
xor
stc
mov
aad
jecxz
and
push
pop
or
test
scas
into
add
scas
jmp
push
sub
xchg
xor
mov
pop
xor
imul
popa
xchg
mov
xor
cli
test
int3
push
mov
push
push
inc
xlat
mov
ret
jb
and
cmc
xchg
and
mov
je
xor
scas
push
dec
es
cmp
jmp
xor
nop
push
push
dec
pop
cmp
out
iret
cmp
pop
(bad)
jg
inc
cmp
jge
inc
and
inc
call
and
xchg
add
dec
push
inc
retf
pop
in
imul
(bad)
stc
daa
ror
jge
das
dec
push
pop
inc
js
loope
sub
sub
mov
jns
push
and
sub
and
dec
pop
nop
test
pop
xchg
shl
loope
xchg
inc
adc
push
sub
pushf
loop
in
jmp
push
xchg
dec
int
jmp
jecxz
jp
lds
mov
ror
pop
pop
mov
mov
fcomp
imul
sbb
scas
aaa
sahf
xchg
std
call
push
mov
xchg
jmp
ss
adc
into
fld
or
inc
dec
bound
and
or
retf
pushf
iret
not
mov
xchg
mov
mov
mov
call
clc
rcl
repz
xlat
cmp
and
jbe
jnp
adc
repnz
cwde
xchg
pop
(bad)
dec
push
dec
jbe
or
sbb
inc
sub
cmp
cmc
or
fbstp
pop
push
add
test
adc
repz
xor
push
movs
inc
xor
xchg
xor
sbb
in
adc
dec
jmp
call
(bad)
adc
bound
adc
sar
mov
ins
jl
xchg
push
mov
push
dec
dec
push
mov
je
sbb
ins
mov
mov
xchg
inc
add
test
sbb
jmp
lods
das
xchg
mov
outs
xchg
xlat
cmp
adc
inc
loop
(bad)
sub
xchg
sar
js
cmps
ret
push
mov
loopne
adc
push
lods
rcl
sbb
or
push
enter
or
test
imul
pop
clc
and
fldenv
dec
add
cmp
jo
mov
mov
mov
pop
dec
cs
test
fst
xchg
cmp
dec
call
mov
cli
inc
pushf
adc
sub
adc
out
(bad)
dec
jge
mov
sbb
leave
jle
aad
and
rcr
mov
pushf
movs
das
loope
push
add
sub
imul
outs
cld
movs
mov
jmp
rol
fwait
dec
mov
fsub
cmps
push
add
addr16
xchg
mov
mov
pushf
ret
movs
in
jle
add
test
lahf
lods
leave
jl
das
cdq
or
repz
lods
adc
int3
test
mov
mov
mov
loop
mov
popf
jae
jb
cld
pop
cdq
jbe
mov
imul
sbb
repz
cmp
fcmovne
dec
jmp
(bad)
push
xchg
aaa
nop
and
loop
adc
sahf
inc
push
add
sbb
xchg
dec
retf
lahf
outs
xchg
mov
daa
loopne
jae
mov
aaa
or
mov
jnp
int3
jmp
imul
adc
dec
jne
(bad)
pop
adc
cli
cmp
or
cmps
mov
and
enter
xlat
adc
mov
cmp
dec
imul
xor
cmp
ret
ret
cli
sbb
adc
call
(bad)
inc
mov
scas
adc
xchg
mov
bswap
shl
and
pushf
aad
icebp
out
sub
ret
mov
mov
test
in
mov
sbb
pusha
xchg
xchg
ffreep
xchg
outs
in
adc
and
ja
add
jnp
sub
adc
inc
aaa
inc
sbb
scas
rcr
iret
xor
push
cmps
cmp
xlat
les
(bad)
push
enter
(bad)
adc
xor
iret
mov
jmp
add
repz
cmp
sub
push
jae
test
loop
shr
shr
or
lds
inc
cmc
cld
loopne
push
add
xor
mov
shr
cs
popa
stos
cld
push
pop
cmp
and
div
or
mov
dec
or
cmps
xchg
dec
test
(bad)
call
and
fs
mov
jae
cmp
inc
jge
push
shr
(bad)
push
xchg
ja
mov
addr16
xor
je
cmp
adc
pushf
add
in
xchg
and
fbld
outs
xor
push
pop
mov
pop
fcom
pop
mov
lock
push
jecxz
pushf
bnd
pop
fidiv
mov
mov
dec
inc
lods
into
pop
mov
xchg
cmps
(bad)
pop
and
addr16
test
cmp
out
dec
stc
sbb
fistp
sub
test
fidivr
pop
pop
fidiv
imul
xchg
or
repz
daa
sbb
popf
and
ja
dec
movs
sar
in
jmp
mov
push
jns
(bad)
xchg
loop
and
scas
popa
sahf
int
cwde
test
xchg
mov
es
(bad)
mov
sbb
xor
xchg
jb
mov
fdivr
xchg
xor
out
fst
imul
jmp
popf
pop
into
pushf
cwde
adc
mov
sub
pop
add
jecxz
int3
ins
push
dec
add
outs
repnz
jmp
mov
loop
nop
scas
int
stos
adc
fstp
xor
stos
movs
and
mov
sti
push
ficomp
pop
sbb
xchg
jnp
xor
mov
aaa
outs
imul
iret
cmp
cmp
scas
pop
mov
ret
push
xor
out
xor
lahf
jmp
cmps
inc
xchg
arpl
pop
xor
cld
mov
sahf
xchg
and
es
sub
jns
(bad)
int
ins
sbb
pop
dec
jmp
stos
push
pop
inc
and
adc
or
jnp
lods
mov
jne
dec
popa
aaa
pop
cmps
cmc
dec
sub
mov
xlat
adc
call
dec
dec
xor
and
jno
in
or
sbb
(bad)
push
retf
cmps
sub
sub
sub
mov
xlat
add
dec
mov
mov
ins
xchg
mov
out
push
mov
loopne
push
pop
(bad)
cmp
cmp
test
cs
js
mov
imul
and
sbb
push
xchg
repnz
push
(bad)
mov
outs
cld
jb
les
mov
add
pop
mov
in
jo
pop
sub
cmps
cmp
daa
cld
jl
sbb
cmp
cmc
jg
inc
and
jge
setbe
cld
push
or
popf
cmps
lock
xor
ret
(bad)
sbb
dec
(bad)
add
(bad)
leave
cld
jno
scas
xchg
cdq
(bad)
xchg
sub
fldenv
out
sbb
pop
mov
loope
cmc
rol
out
push
inc
not
cli
jno
adc
jecxz
test
out
xchg
cmp
in
das
mov
scas
bound
mov
xchg
arpl
push
and
loope
ins
rcr
mov
dec
jo
arpl
std
sub
jnp
aaa
(bad)
jg
pop
pop
xchg
imul
les
fldpi
mov
ins
jnp
adc
sub
cmps
loopne
std
rcr
es
sbb
aas
dec
hlt
sub
in
jbe
push
adc
sti
inc
sti
push
movs
mov
or
push
loop
mov
push
popa
lds
mov
loop
jge
dec
dec
not
xor
or
idiv
(bad)
add
mov
loope
fwait
pop
push
pop
dec
cmps
mov
xchg
retf
jb
push
enter
arpl
xchg
mov
pop
mov
test
cs
add
test
push
inc
pop
popa
mov
and
cli
jns
or
cmps
and
xor
inc
jmp
icebp
inc
pop
movs
(bad)
xor
nop
cmp
(bad)
pop
pusha
pop
mov
mov
mov
nop
pop
xor
mov
pop
nop
cdq
fwait
adc
lods
xor
stos
retf
test
or
mov
scas
cli
mov
xor
mov
add
ret
in
mov
and
adc
fmul
sti
xchg
adc
dec
pop
xor
dec
push
lds
neg
mov
mov
loopne
aam
add
cmp
pop
icebp
mov
pop
iret
mov
ins
sub
jp
jo
call
xchg
retf
hlt
mov
dec
in
fwait
pop
dec
js
sub
push
jmp
test
and
fs
lea
out
xlat
adc
cs
cs
iret
scas
jo
pop
data16
icebp
sti
pop
outs
cdq
call
inc
push
aam
fs
mov
xchg
lods
fistp
icebp
ds
pop
jb
pop
mov
iret
and
(bad)
idiv
rcr
fstp
fwait
cmps
xor
adc
push
xchg
shl
jl
nop
int
cmp
lea
cmp
jne
inc
push
fist
inc
jmp
iret
and
jl
jns
mov
push
outs
push
shr
sar
popf
mov
mov
hlt
fwait
dec
fsub
lahf
rcr
loopne
inc
fidivr
sub
pop
mov
xchg
sahf
mov
mov
stos
xabort
pop
xchg
xchg
bound
and
cli
daa
popf
pop
(bad)
(bad)
jge
(bad)
out
push
ss
pop
inc
clc
pop
lds
out
and
xchg
push
pop
pop
popf
mov
cs
jb
test
sbb
in
adc
repz
mov
iret
xchg
ror
popf
mov
fsubr
gs
sbb
adc
call
pop
dec
sub
aad
cmps
mov
ret
js
(bad)
arpl
cs
pop
mov
stc
or
fcom
shl
sbb
sar
les
push
jae
cli
push
test
jl
mov
imul
or
(bad)
mov
adc
rol
ins
add
pushf
repnz
js
data16
lock
sub
sbb
test
ret
xchg
push
scas
jo
pop
lock
outs
sbb
adc
out
lods
loop
pusha
push
fwait
and
(bad)
mov
sbb
sbb
(bad)
mov
mov
leave
cmp
adc
add
pop
xchg
mov
loope
jecxz
mov
xor
outs
mov
xchg
pusha
fnstenv
rdtsc
mov
cmps
dec
add
cmp
xchg
(bad)
push
std
loopne
ds
loope
mov
(bad)
adc
loope
int
gs
in
(bad)
xchg
sub
adc
out
sub
inc
mov
push
out
sub
out
icebp
and
cdq
into
out
std
adc
into
xor
cld
xor
lods
jg
scas
mov
cmp
mov
retf
fcom
aad
sub
popf
into
fdivr
aaa
sbb
xor
ds
mov
outs
fucomi
popa
lock
arpl
jg
stos
les
daa
xchg
mov
fdivrp
add
and
std
popf
dec
leave
adc
dec
adc
jmp
lock
mov
cmps
shl
mov
mov
mov
pop
daa
or
call
pop
rcr
sub
mov
xor
push
test
addr16
sub
in
sub
pop
mov
clc
pusha
adc
xchg
push
lock
(bad)
test
xor
jl
jmp
fsub
inc
popa
dec
adc
cmps
retf
jbe
dec
pop
xchg
fnsave
and
or
inc
fcmovu
jns
adc
call
adc
xor
dec
pop
gs
arpl
out
pop
lahf
adc
loopne
add
aad
xchg
jnp
ficomp
pusha
(bad)
pop
jle
pop
push
repnz
push
aas
sub
inc
add
iret
gs
sbb
lods
jo
shl
xor
daa
dec
pop
cmp
mov
dec
mov
daa
inc
push
and
retf
ja
jns
stc
inc
(bad)
cmp
mov
lds
jmp
out
add
mov
arpl
aas
mov
bound
mov
mov
outs
movs
mov
sahf
pop
sahf
xchg
mov
stos
or
mov
xchg
jmp
jge
xchg
int3
push
push
aas
cmp
pop
pop
bound
sub
in
push
xchg
sbb
fwait
stc
cwde
ret
xlat
xchg
cli
jae
adc
pop
inc
in
dec
sub
mov
xor
shl
xchg
fcmovu
stc
ins
xchg
xchg
out
pop
push
cmps
sub
push
dec
and
in
(bad)
(bad)
pop
jno
xor
sbb
push
sbb
in
pop
adc
ret
sahf
mov
ficom
jmp
add
clc
jle
mov
mov
jnp
adc
sbb
neg
cmp
bound
in
lahf
frstor
xor
cmp
xor
es
xor
(bad)
and
not
jno
(bad)
gs
mov
mov
clc
xlat
dec
and
pusha
std
(bad)
jnp
test
or
dec
leave
cmp
imul
cmp
and
sub
push
push
push
jl
cmp
sbb
jo
cs
mov
jg
out
jg
ret
jge
push
xor
lea
add
es
std
jno
xor
mov
sub
sbb
aas
ja
and
in
mov
xor
xchg
sbb
or
pusha
sbb
iret
push
add
lods
shr
jle
add
nop
pop
inc
out
xchg
cmp
xor
and
inc
icebp
push
pop
stc
outs
mov
jp
ins
pusha
jmp
outs
out
inc
fcmovnu
test
jno
xchg
les
mov
pop
loopne
jmp
jl
add
dec
push
mov
mov
jg
sub
jle
sbb
into
and
imul
leave
mov
and
jo
mov
aam
push
jo
jmp
sahf
movs
test
rol
mov
faddp
cmp
fiadd
add
cmp
xchg
jp
jno
stc
daa
test
lods
jg
lds
cmp
in
sbb
pop
sar
push
mov
add
sub
sbb
lods
pop
sbb
fwait
mov
cdq
mov
int3
bound
lds
xor
add
mov
xchg
int
jge
pop
cld
(bad)
sub
ds
retf
jbe
(bad)
ret
adc
sub
pop
fwait
daa
mov
(bad)
adc
adc
gs
push
cmps
fs
cs
mov
test
out
mov
pop
jge
sbb
das
sub
inc
les
daa
add
sbb
inc
sub
leave
and
inc
bound
add
movs
xchg
out
xchg
repz
call
xor
mov
mov
push
sbb
sar
cli
xchg
int
lock
dec
dec
les
and
sub
test
xchg
cli
cmp
adc
pop
and
cmp
ret
in
test
stos
mov
xchg
clc
(bad)
jge
sbb
call
and
push
rol
aad
in
xor
repnz
jmp
mov
imul
jecxz
xor
adc
pop
cli
fistp
pop
jecxz
or
mov
lahf
inc
push
or
repz
push
push
fs
test
popa
in
mov
xchg
jp
pop
test
push
sub
mov
rol
call
pusha
add
cmp
adc
mov
mov
xchg
xchg
aam
xchg
xchg
adc
jmp
cmp
dec
dec
repz
and
jecxz
loope
mov
mov
(bad)
inc
dec
es
ror
mov
and
mov
xchg
mov
dec
stc
and
ja
pop
pop
(bad)
cmp
pop
mov
cmp
scas
xor
fs
repz
ss
mov
inc
jmp
lds
aaa
movs
adc
mov
or
xchg
je
lock
cmp
pop
adc
je
sbb
inc
(bad)
jns
adc
sub
(bad)
icebp
into
xchg
adc
add
sub
xor
cmp
xchg
shl
cwde
push
sbb
mov
xchg
icebp
xchg
mov
adc
int3
test
add
xchg
shl
or
cmps
adc
dec
add
les
add
stc
xor
lds
outs
jle
daa
shr
push
sub
aas
pop
test
jno
inc
arpl
add
mov
iret
pop
mov
in
mov
and
mov
mov
inc
ds
mov
or
stos
jmp
fstp
mov
sub
push
mov
fldcw
adc
ja
sbb
and
adc
cmp
or
push
dec
(bad)
lods
cdq
jbe
pop
pop
outs
xlat
in
adc
mov
pop
lock
mov
arpl
rol
xchg
jbe
mov
xor
mov
jmp
xchg
out
or
xor
inc
loope
xor
lods
(bad)
mov
out
cwde
xlat
test
sub
pusha
mov
cmp
sbb
not
fiadd
pop
test
enter
cmp
push
mov
(bad)
test
popa
jmp
cld
repnz
rcr
popa
(bad)
dec
adc
xchg
or
push
test
es
add
in
jne
push
cmp
pop
mov
xlat
mov
adc
inc
mov
inc
mov
ss
(bad)
inc
int
ret
ret
pop
pop
outs
push
js
push
retf
imul
add
cmp
and
mov
int3
imul
aad
inc
arpl
and
jb
rol
loop
jp
shl
ins
call
es
push
pop
test
in
scas
loop
pop
or
dec
fimul
mov
cmp
lock
in
sbb
out
call
cmp
clc
call
mov
aam
or
pusha
xlat
sahf
loopne
mov
int3
mov
adc
icebp
push
push
or
lds
sub
mov
aaa
add
into
cdq
xor
mov
leave
jg
iret
cmc
pop
icebp
je
rol
loop
(bad)
jmp
mov
pop
mov
es
mov
mov
xor
inc
(bad)
mov
test
arpl
das
das
test
in
clc
mov
lahf
mov
repnz
xchg
int
xchg
xchg
push
push
jp
cmp
fistp
iret
outs
nop
sub
mov
sub
mov
dec
lods
les
sbb
jae
add
inc
cmp
(bad)
ja
loop
(bad)
mov
dec
aas
dec
inc
adc
call
sub
mov
push
and
mov
mov
add
cmp
in
cs
push
mov
xchg
push
xor
daa
out
lds
hlt
ds
(bad)
cwde
cmc
adc
stos
push
and
xchg
sub
mov
xor
push
dec
cmc
xchg
and
or
ficom
cmp
add
outs
loop
xor
add
fcomp
inc
std
cmp
pushf
pushf
mov
ror
daa
jle
dec
rep
test
or
clc
not
cmps
xor
lock
leave
les
adc
mov
aas
stos
sub
cs
cdq
ror
xlat
gs
loop
es
and
fisub
mov
dec
dec
scas
outs
bnd
pop
pop
cs
inc
stc
scas
es
mov
add
stos
adc
stc
push
sbb
daa
sub
imul
add
push
xchg
inc
mov
mov
pop
lock
push
xor
movs
adc
cdq
xchg
push
popf
pusha
loop
inc
inc
das
add
cmps
loopne
push
mov
adc
(bad)
call
cdq
(bad)
mov
lea
jnp
jmp
out
(bad)
cli
sbb
outs
jmp
jne
xor
inc
sar
fbld
sub
cld
pop
push
int3
xchg
daa
int
sbb
sub
hlt
retf
(bad)
test
mov
in
pop
hlt
ror
sub
js
retf
lock
iret
jbe
test
push
ss
xchg
ds
sahf
loopne
mov
and
jge
and
test
arpl
das
(bad)
movs
stc
jl
pop
jo
push
out
mov
stos
popa
test
in
loope
test
ror
push
in
fadd
leave
push
pop
fdivr
repz
mov
xor
js
dec
arpl
and
jmp
cmp
ror
push
out
fdiv
cli
jmp
xchg
add
add
mov
dec
sub
pop
xchg
scas
and
cmp
test
jmp
xlat
push
int3
inc
inc
addr16
and
inc
xchg
sub
sbb
push
cmp
jbe
loope
dec
sub
push
or
mov
mov
sub
sub
fstp
mov
jb
mov
mov
push
sbb
fild
or
ror
lods
sbb
mov
aaa
gs
repnz
mov
je
push
or
bound
lods
aas
or
jmp
iret
scas
aad
int3
sub
mov
xor
lea
mov
setp
or
lock
push
adc
imul
add
idiv
lods
xlat
pop
js
idiv
ror
loopne
stc
lods
xlat
ja
inc
movs
scas
xor
aaa
xchg
xor
mov
and
mov
jge
repnz
jp
nop
gs
lods
cmp
inc
or
shl
mov
push
push
call
pop
jp
cmp
mov
mov
lods
stos
and
stos
into
dec
inc
(bad)
jae
ins
pop
out
inc
mov
jno
dec
sbb
mov
jmp
sbb
mov
pop
mov
jg
lea
fs
pop
fisttp
es
or
add
mov
mov
pusha
loope
pop
cwde
adc
out
jmp
(bad)
or
dec
call
and
jp
fstp
scas
push
into
pop
add
test
ficom
js
push
call
aad
aam
les
push
outs
push
jecxz
and
mov
xchg
xchg
adc
test
mov
push
xor
les
int3
xor
cmc
sub
sub
xor
pop
push
addr16
jno
popf
push
fwait
movs
dec
mov
lods
pop
call
mov
mov
jno
mov
and
add
lds
pop
push
loopne
inc
popa
out
jno
out
dec
jecxz
icebp
push
push
inc
nop
test
loope
(bad)
adc
out
arpl
dec
xchg
test
add
leave
push
lods
shr
popa
imul
out
cmp
ds
iret
movs
jbe
inc
add
and
mov
sub
cmp
add
pop
rol
dec
xlat
cld
jno
(bad)
dec
mov
xchg
dec
fsubr
pop
sub
(bad)
repnz
inc
sti
or
cmps
and
lods
leave
mov
mov
fld
and
je
test
sbb
sub
adc
adc
mov
mov
addr16
mov
inc
ins
pop
pop
cs
mov
xor
(bad)
fisttp
sti
scas
test
xchg
push
add
xchg
inc
mov
hlt
outs
mov
dec
mov
sbb
dec
jle
popa
jg
sub
pushf
dec
dec
ret
ins
xchg
xor
daa
mov
fnstenv
sub
xchg
test
xchg
stos
ins
pusha
pop
in
push
in
add
pusha
sbb
rol
sbb
lods
xor
sub
out
or
into
dec
fisub
outs
mov
cld
stos
cld
les
loop
mov
frstor
jmp
push
cmps
push
and
dec
push
xchg
xor
adc
or
(bad)
mov
and
(bad)
stc
cmp
mov
cld
popa
arpl
pop
pop
addr16
pop
ficom
push
adc
retf
repnz
sbb
(bad)
iret
lods
add
(bad)
loopne
push
cld
pusha
mov
jo
mov
dec
add
jp
ror
add
es
xor
sub
jl
pop
and
or
mov
dec
mov
ins
jb
or
add
jo
cli
push
movs
mov
xchg
sahf
push
stc
mov
gs
adc
adc
inc
neg
ret
and
mov
mov
and
leave
or
aaa
cmps
scas
(bad)
ror
jl
pusha
add
cwde
jg
and
xlat
sbb
pop
cli
xchg
push
push
arpl
rcr
js
mov
and
add
repz
jmp
push
mov
ss
xchg
mov
pop
pop
cdq
or
adc
mov
pusha
int3
call
xchg
mov
pop
mov
mov
ins
push
imul
sub
and
xchg
push
popf
sub
hlt
scas
sbb
or
sbb
jne
out
addr16
xor
call
and
cli
je
aam
pop
ficomp
fiadd
xchg
imul
xchg
xor
pushf
sub
mov
jg
xor
xor
sbb
sub
lahf
sub
xor
pop
sar
lds
push
jl
cmp
or
scas
mov
mov
and
sbb
xchg
(bad)
fs
pop
repz
and
fsub
add
inc
aaa
adc
iret
popa
mov
ins
add
enterw
or
and
mov
aas
daa
pop
mov
adc
outs
dec
js
loop
or
xchg
fbld
(bad)
dec
push
dec
inc
movs
call
dec
rol
adc
jmp
jns
lods
pushf
je
pop
push
jp
dec
loop
rcl
cmp
xor
popf
cwde
jle
ret
xchg
jbe
cmps
dec
test
and
scas
push
jae
inc
loope
cld
and
jns
sbb
and
or
imul
sahf
lea
add
cli
(bad)
xor
jae
inc
pop
out
adc
call
clc
mov
dec
aas
std
sbb
outs
mov
out
mov
ficom
imul
fxch
jg
out
inc
fwait
jle
add
je
jns
fstp
mov
xchg
(bad)
(bad)
jo
movs
cmp
enter
inc
scas
lds
fisubr
cwde
out
pusha
mov
rcr
pop
shl
das
and
or
into
imul
imul
mov
sub
cmp
les
push
inc
hlt
mov
cmps
push
ror
shr
jp
lods
adc
rcl
pop
ja
and
inc
mov
pop
dec
cli
and
cmps
push
adc
enter
mov
jl
dec
mov
adc
sub
xchg
lods
sub
lahf
pushf
idiv
retf
sbb
lahf
cwde
cwde
loope
int
inc
mov
retf
fisub
or
(bad)
cmps
movs
adc
cmp
xor
sub
push
lds
bound
ss
pop
ss
mov
push
bound
xchg
fstp
cmp
add
and
sub
movs
div
sar
adc
xor
iret
inc
nop
pop
fist
or
pop
fimul
adc
inc
xchg
pop
bound
and
cmp
cld
jbe
data16
and
aam
scas
dec
mov
mov
inc
pop
es
xor
jne
mov
and
int
push
pop
jo
scas
call
in
repnz
lds
pop
movs
outs
stos
mov
xchg
push
pop
shr
stos
add
(bad)
bound
push
mov
mov
jge
mov
adc
xor
cmc
jne
xor
pop
add
jo
call
arpl
lods
adc
imul
mov
movd
add
pop
cdq
jle
dec
jo
mov
and
jno
(bad)
mul
daa
jo
xor
das
es
pop
jmp
or
sbb
xor
pusha
daa
xor
outs
xor
mov
mov
add
cmp
icebp
stc
addps
jno
inc
and
in
in
hlt
push
aad
adc
add
mov
mov
vdivsd
out
push
jns
adc
(bad)
or
cmp
invd
mov
pop
and
xchg
adc
jl
jecxz
lock
movs
jle
mov
je
cmps
hlt
bound
pop
pop
pop
adc
imul
popf
fistp
push
daa
pop
add
call
(bad)
inc
xchg
or
ret
fwait
pop
mov
cmp
inc
loope
imul
lahf
pop
shr
dec
xchg
and
scas
push
test
(bad)
call
mov
fld
xchg
jns
pop
mov
pop
pop
call
mov
fild
push
push
push
leave
xor
enter
xor
ficom
ins
push
jnp
or
or
into
pop
shl
lahf
add
push
or
pop
rcl
or
lods
dec
outs
mov
push
ss
in
inc
cmp
cmp
call
add
cmp
mov
daa
mov
pop
mov
out
mov
test
jo
dec
add
push
fs
arpl
cmp
mov
loop
fdivrp
push
jbe
daa
maskmovq
div
bound
adc
mov
push
ds
fwait
scas
hlt
stos
gs
rcl
aad
rol
jge
jge
push
lds
mov
arpl
enter
push
mov
nop
dec
fistp
jge
rol
arpl
and
cmps
sub
push
(bad)
pop
adc
fimul
in
retf
aad
pop
xchg
loopne
pusha
icebp
inc
adc
mov
add
cli
imul
shl
inc
jne
rol
xchg
inc
daa
push
push
shl
das
imul
or
dec
dec
fistp
add
push
push
pop
adc
mov
lahf
jno
shl
pop
mov
mov
scas
jp
repz
push
add
rol
mov
mov
dec
daa
xchg
adc
out
out
adc
xor
add
fcom
lods
in
scas
out
or
xchg
cmp
inc
fdiv
repnz
push
adc
and
aaa
push
in
jl
push
cmp
pusha
aaa
scas
cmp
or
sub
mov
xchg
loopne
(bad)
out
sub
add
mov
sar
adc
cmp
arpl
pop
dec
arpl
dec
jmp
push
aam
(bad)
pop
daa
pop
or
pop
cmps
aaa
scas
or
inc
sar
jmp
cmp
dec
dec
jecxz
add
(bad)
xchg
loopne
ficomp
xor
push
pusha
dec
pop
ss
xchg
jnp
push
in
push
rol
popa
outs
retf
cmp
inc
call
fcom
jb
inc
mov
aas
mov
sar
sub
fs
jo
shr
test
pop
pop
(bad)
stos
mov
and
in
jg
sti
in
call
add
addr16
sub
mov
mov
dec
add
dec
popf
out
add
imul
fadd
cli
fdiv
mov
xor
movs
xor
lods
push
sbb
stos
(bad)
pop
push
(bad)
les
fist
mov
xchg
dec
cwde
sub
dec
out
xchg
mov
mov
mov
sub
add
push
idiv
test
arpl
pop
fidivr
adc
cld
mov
mov
mov
add
(bad)
and
jecxz
add
rcl
pop
inc
mov
fst
cwde
pop
or
rcr
push
cmp
dec
xor
jns
scas
push
and
call
xchg
sub
push
mov
xchg
add
push
mov
push
jnp
mov
loopne
jmp
mov
sub
stc
mov
repz
popf
scas
fmulp
xchg
not
fimul
mov
lahf
clc
pop
rol
add
pop
xor
and
in
imul
ror
mov
fdivr
imul
mov
leave
jmp
jmp
pop
inc
addps
outs
dec
fsub
sub
inc
mov
in
dec
outs
sbb
mov
aaa
jbe
shl
pop
pop
jp
lods
xchg
dec
cdq
or
push
jo
out
sbb
xchg
shr
dec
mov
jns
mov
inc
movs
jl
push
mov
in
or
aam
sub
and
cmp
mov
pop
cmps
lahf
cmc
inc
sbb
iret
les
push
js
out
mov
jne
aaa
push
bound
call
das
xchg
fild
mov
not
rol
enter
xor
jg
inc
nop
or
mov
cmp
lods
outs
cmp
pop
js
cmp
mov
fdiv
push
pop
sbb
mov
repz
cmp
push
jnp
and
stc
push
jl
jne
test
xchg
adc
push
test
int3
mov
cmp
jge
add
inc
jg
push
xchg
std
lods
pop
daa
cmp
(bad)
iret
dec
pop
not
adc
lock
imul
int3
xchg
test
ret
shl
mov
push
dec
add
les
lock
mov
push
dec
in
ret
dec
dec
dec
xchg
jl
leave
outs
popf
mov
call
jmp
add
dec
ror
in
ret
push
loop
push
mov
lock
int3
adc
clc
mov
and
push
pop
test
sbb
mov
cld
xor
inc
xor
aam
sbb
out
or
sbb
cld
mov
loopne
sub
cmp
popf
lock
cs
dec
sbb
test
jp
movs
jne
imul
xchg
test
movs
sbb
icebp
leave
mov
mov
fs
fist
mov
repnz
cmc
clc
imul
sbb
outs
leave
out
cwde
sbb
ret
mov
je
jp
push
xchg
in
lahf
or
push
xchg
outs
xchg
mov
(bad)
pop
xchg
fld
cmp
mov
mov
mov
sub
out
push
xor
pusha
cmp
push
mov
add
lock
test
out
enter
mov
pushf
clc
imul
mov
in
js
and
mov
data16
xlat
pop
inc
mov
in
loopne
sbb
out
or
mov
mov
and
aad
pop
test
call
jno
ds
les
adc
mov
dec
and
cmp
add
dec
pop
sbb
iret
scas
in
jbe
mov
pop
stos
repz
call
mov
jmp
xchg
fwait
xchg
xor
cmc
dec
popfw
pop
sbb
data16
cmp
or
cwde
cmps
push
sub
cmp
push
push
or
loopne
cmps
mov
in
jne
nop
sub
add
js
mov
cmp
inc
jmp
adc
dec
cmp
aam
sbb
repnz
repz
mov
outs
inc
fdivr
cdq
push
aam
cwde
and
fldcw
rol
add
nop
repz
adc
and
in
pop
and
popf
test
mov
cwde
fs
aad
jmp
mov
dec
setae
and
nop
and
or
inc
ret
les
sbb
(bad)
hlt
pop
jl
inc
retf
in
pop
inc
xor
movs
and
ficom
sub
(bad)
adc
adc
or
push
dec
inc
jmp
and
jb
outs
fs
aam
or
ret
mov
enter
(bad)
xor
aaa
mov
pop
inc
or
cmc
mov
dec
or
cmp
call
adc
dec
test
fimul
aas
dec
xlat
inc
adc
push
dec
dec
movs
pop
popa
sti
inc
jbe
cmp
test
imul
popf
paddusw
dec
dec
mov
xchg
sbb
cmps
sub
and
lods
in
dec
arpl
or
inc
mov
jne
xchg
es
adc
xor
pop
xor
mov
adc
pop
mov
shr
es
fbld
loop
jno
test
dec
call
call
adc
xor
lods
xchg
std
sub
cmp
aaa
jmp
imul
cwde
add
jno
sub
cwde
mov
and
mov
in
call
lahf
mov
pop
into
ds
cmp
mov
cdq
rcr
push
add
xor
mov
xor
cmp
push
push
imul
mov
ror
rcr
push
xlat
ins
cli
mov
mov
fwait
(bad)
ficomp
dec
add
sub
push
std
lahf
xchg
adc
cmp
daa
jmp
jne
loop
cmc
mov
adc
repz
add
cmps
movs
movs
lock
outs
repz
pop
xor
mov
mov
and
mov
inc
cmp
adc
sub
cdq
popf
aas
mov
aaa
in
lock
jl
jns
xor
aaa
adc
nop
in
mov
js
inc
push
ins
gs
add
mov
push
sub
out
add
dec
sub
gs
es
daa
rol
mov
xor
mov
(bad)
mov
popf
outs
ror
adc
ja
imul
mov
dec
clc
xor
out
xchg
nop
inc
jns
cmp
pop
mov
(bad)
sbb
js
outs
add
sub
mov
stc
mov
push
ret
mov
inc
add
jecxz
dec
outs
jns
xchg
sahf
popf
imul
in
aad
movs
paddb
jb
dec
sbb
pop
das
cli
dec
push
add
mov
stos
arpl
xchg
jnp
push
xchg
or
inc
(bad)
(bad)
cmc
mov
jmp
dec
repz
movs
push
adc
sbb
lock
sub
in
pushf
xor
aam
leave
pop
push
fbld
dec
jb
mov
test
retf
retf
das
ins
nop
mov
or
and
mov
and
loope
mov
jb
xor
retf
rcl
aaa
jge
nop
adc
out
test
jmp
int
hlt
or
adc
inc
movs
add
sbb
std
push
xchg
jbe
cmp
sbb
push
push
xchg
mov
pushf
sti
sub
lea
scas
pushf
call
xchg
bound
dec
loopne
test
iret
lea
mov
into
cmp
sub
or
cmp
inc
fisttp
and
or
(bad)
ds
cmp
dec
sbb
jne
lock
lds
adc
fs
fisttp
test
mov
mov
mov
adc
adc
pop
ins
push
xchg
mov
inc
xchg
hlt
imul
ins
int3
mov
and
xor
mov
xchg
nop
cmp
scas
inc
lock
jle
pushf
and
xchg
movs
aad
adc
stos
jge
ja
nop
sbb
dec
into
or
cmp
pop
les
cmp
xchg
fxch
repz
stos
shl
retf
bound
adc
jg
pop
push
(bad)
cmps
fs
mov
arpl
retf
retf
push
adc
xor
in
pop
das
pop
sub
push
inc
push
(bad)
and
outs
inc
pop
xchg
lock
out
ret
jg
sbb
cmp
cwde
sub
inc
inc
cmp
shr
data16
mov
retf
out
push
xor
or
push
mov
and
sti
out
retf
xchg
or
imul
sub
dec
sti
rcr
cld
cmp
mov
popf
int3
sub
pop
je
clc
xor
cmps
addr16
cwde
mov
sbb
data16
sbb
imul
dec
cmp
pop
scas
push
or
xor
mov
jle
cmp
mov
stos
jl
inc
dec
mov
sub
repz
adc
add
movs
or
(bad)
adc
outs
xor
or
push
jae
daa
or
push
int3
mov
inc
cmps
inc
inc
push
cli
div
aaa
mov
mov
jo
and
push
sbb
push
pushf
pop
sub
call
je
das
int
fcomp
xor
xor
sbb
inc
adc
gs
popa
pushf
sub
jge
mov
mov
add
pop
scas
push
sub
(bad)
mov
call
lods
adc
push
sub
push
jbe
aas
hlt
and
and
cmp
cmp
scas
and
push
cmp
inc
not
inc
outs
test
mov
and
into
sub
push
ret
jb
shr
popf
ds
inc
cmp
aaa
int
jmp
std
(bad)
pusha
dec
fsub
sub
mov
shl
xchg
cmc
add
mov
or
(bad)
js
mov
(bad)
retf
rol
dec
sub
mov
frstor
and
pushf
popa
mov
shl
cmp
bnd
arpl
pop
scas
sbb
imul
fwait
jbe
and
dec
shl
popf
xchg
imul
imul
push
jae
pop
out
and
and
inc
jmp
pop
xchg
push
cmp
pop
scas
bound
adc
das
inc
dec
jnp
stos
mov
inc
jne
inc
sbb
push
loopne
call
sti
pop
jmp
xchg
or
test
rol
add
rcl
jle
pop
inc
lds
adc
rol
xor
mov
call
add
push
mov
and
test
mov
ret
mov
mov
push
stos
lds
out
stos
xor
pushf
inc
and
(bad)
lahf
outs
jmp
test
nop
mov
and
sub
and
sbb
jmp
dec
mov
in
xchg
stos
dec
or
das
xchg
inc
out
xchg
aaa
inc
or
call
mov
test
cmc
xchg
jmp
jb
push
push
ret
dec
pop
sbb
cld
pop
jnp
je
sbb
stc
dec
push
loopne
test
(bad)
aas
mov
rcr
je
push
jnp
cmp
cdq
cmc
push
daa
pop
ds
sbb
and
xor
mov
mov
or
sti
iret
mov
clc
ficomp
retf
lock
lea
xbegin
and
ret
add
jecxz
rcl
pop
cdq
jp
ds
stos
xchg
loope
dec
adc
or
pop
fstp
cs
push
mov
int3
in
pop
add
xlat
push
aam
out
out
xor
inc
or
and
adc
mov
add
push
jae
dec
mov
lock
cwde
dec
jle
push
add
enter
push
sub
std
aam
icebp
repnz
push
pop
stos
pop
and
cwde
(bad)
das
inc
cwde
mov
cmp
and
shl
pop
and
pop
and
push
jp
mov
xor
dec
pop
sahf
adc
sub
test
sti
mov
aas
cmp
(bad)
sar
pop
push
test
sub
xor
daa
lahf
jg
clc
mov
pop
sub
shl
(bad)
push
cmp
movs
add
lods
sti
add
push
lock
ins
fld
cwde
rcr
add
shr
mov
mov
pop
sbb
sbb
lods
sahf
inc
(bad)
mov
icebp
pop
rcl
loop
add
pop
push
popf
test
jg
and
lahf
add
aam
push
cld
outs
test
push
leave
in
iret
call
nop
dec
xor
or
pushf
jmp
mov
mov
enter
xchg
(bad)
retf
xor
mov
(bad)
lock
push
fwait
mov
loopne
mov
and
je
cmps
push
mov
xchg
xchg
cdq
in
nop
cmps
sub
jbe
jg
adc
sbb
cmp
pop
pop
inc
mov
push
xchg
leave
in
sub
jl
jmp
mov
cs
xchg
and
sub
cmp
cmp
dec
jo
xlat
ins
popf
(bad)
dec
popf
test
add
pop
popf
aad
cwde
test
xor
daa
inc
adc
push
adc
sbb
xor
adc
mov
mov
outs
cmp
mov
hlt
sub
add
xor
sbb
clc
arpl
push
daa
mov
(bad)
mov
xchg
xchg
les
jg
aam
imul
fbstp
(bad)
jle
jmp
out
mov
gs
aam
sub
and
mov
data16
pop
dec
lods
cmp
push
int
(bad)
cs
(bad)
cmp
jmp
icebp
stos
mov
in
xor
out
xchg
pop
adc
lahf
in
mov
movs
cwde
(bad)
repz
mov
push
je
cmp
test
pop
mov
jle
fcom
xchg
mov
test
sub
adc
xlat
into
ja
jae
fs
mov
sub
(bad)
(bad)
mov
mov
jno
xchg
pop
dec
les
jno
jbe
out
loope
(bad)
or
stc
lahf
inc
fwait
xor
fldcw
sbb
daa
(bad)
(bad)
inc
pop
mov
dec
leave
and
and
dec
xor
mov
dec
pop
cmp
mov
mov
aaa
cwde
enter
pop
inc
xor
push
ins
fs
(bad)
jne
or
rcr
ins
int3
cmc
loope
lods
fild
in
and
pop
shl
loop
sbb
pop
ret
cmp
cwde
cmc
xchg
repnz
je
pop
not
jbe
arpl
imul
out
xchg
xchg
adc
mov
dec
lods
or
add
xchg
icebp
sbb
push
bswap
das
repz
daa
fwait
out
out
fld
fbstp
sub
ror
push
mov
test
sub
inc
xor
mov
pop
pop
loop
mov
jl
ins
jle
mov
sahf
inc
sahf
mov
cld
dec
mov
and
mov
sbb
pop
rcl
nop
hlt
out
outs
sub
dec
scas
cmp
cmp
push
shl
mov
jno
into
push
or
and
jecxz
std
ja
dec
mov
mov
jae
xchg
pop
shr
into
mov
add
ins
or
inc
inc
cmp
call
cmovs
sbb
dec
test
ror
shl
xor
cmp
enter
lock
mov
(bad)
nop
xchg
pop
sbb
add
test
mov
add
leave
lods
or
mov
mov
imul
bound
and
aaa
outs
add
sti
jp
and
sti
addr16
add
out
or
aas
outs
cdq
jae
outs
rol
call
je
loop
or
inc
ins
push
mov
ret
ret
mov
adc
gs
or
ret
shl
cmp
jb
mov
dec
test
jecxz
scas
nop
fwait
stc
leave
in
push
mov
push
daa
mov
sbb
lock
jge
xor
pop
xor
jg
shl
movs
in
mov
sub
xchg
pop
mov
jl
fimul
loope
rcl
movs
xlat
popa
jecxz
fisub
jle
call
xchg
push
add
sbb
xchg
cld
push
mov
in
bound
aaa
(bad)
push
loopne
sub
sub
adc
mov
mov
jmp
and
fisub
or
bswap
xchg
sbb
icebp
push
cmp
daa
popf
pop
xor
mov
loopne
sub
sbb
movs
fsubr
pop
bound
cmp
in
fxch
ret
push
jo
pop
push
ins
xlat
dec
(bad)
dec
push
mov
mov
stc
test
mov
cmp
sbb
cmp
mov
cmp
add
leave
into
clc
(bad)
fld
nop
jo
mov
cld
jecxz
push
je
test
inc
cmps
es
pop
test
(bad)
adc
cmp
pop
push
xchg
loope
mov
sbb
jl
out
cwde
push
shr
shl
mov
stos
ins
mov
in
ret
pop
jno
adc
loope
dec
adc
pop
scas
js
mov
dec
add
mov
mov
jns
retf
jb
retf
cli
inc
lods
cmp
pop
popf
rcl
fwait
jp
fimul
add
adc
vpsadbw
test
inc
xadd
adc
mov
xor
stos
pop
aas
fs
stos
int3
out
xchg
fdivr
pusha
out
and
jns
ja
into
inc
retf
ss
dec
shl
adc
int3
xor
leave
or
pop
lods
and
cmp
(bad)
aas
enter
cmps
mov
(bad)
mov
pop
sbb
cmp
inc
fs
jb
stc
xor
jg
jle
call
lock
scas
pop
or
sar
mov
fmul
jne
les
jo
mov
pop
int3
leave
inc
out
xor
sbb
xchg
mov
test
scas
mov
push
jmp
fs
fist
ins
adc
cli
in
cmp
pop
dec
jge
mov
xchg
jl
icebp
fisubr
jns
cld
fcmove
call
sub
shr
and
daa
or
cmc
fcomp
and
ror
imul
adc
inc
push
or
not
sub
or
mov
daa
push
hlt
in
dec
mov
fldenv
pushf
in
xlat
xchg
enter
call
not
repz
cmp
cli
pop
into
inc
test
jge
inc
je
or
iret
and
cmps
movs
data16
jecxz
lock
rcl
pop
int3
adc
(bad)
pusha
mov
sub
shr
sub
test
mov
sbb
scas
call
cld
jmp
int
cmps
mov
stos
mov
(bad)
(bad)
sbb
inc
in
mov
mov
mov
pusha
aad
sbb
(bad)
or
jbe
mov
fsubr
ret
mov
add
mov
inc
pusha
movs
out
dec
inc
cmps
lock
xlat
scas
pop
ja
mov
scas
dec
inc
test
sub
jbe
hlt
xor
and
pop
nop
fs
or
xor
and
stos
sbb
fdivr
pop
aaa
pushf
ret
movs
in
retf
addr16
mov
sub
cmp
adc
lea
xchg
cwde
retf
out
sbb
loop
or
mov
mov
cmp
inc
popf
cmp
shr
repnz
ret
adc
clc
push
xor
enter
add
popf
movs
pop
mov
jae
retf
loope
movs
push
rcr
or
in
(bad)
or
and
push
lds
shl
test
jmp
push
add
cmp
rcl
sti
test
aas
retf
ret
jecxz
cmp
sbb
ret
sbb
les
cmp
ds
xor
push
out
rcl
pop
inc
mov
mov
pop
inc
pop
jae
loopne
dec
jmp
jge
daa
cmps
ror
dec
adc
jecxz
mov
mov
cmps
mov
xor
std
movs
jae
ins
mov
dec
mov
inc
dec
xchg
test
inc
mov
inc
lds
push
mov
pop
imul
adc
push
pop
sbb
rcl
nop
arpl
mov
mov
xchg
in
cld
fwait
aam
ret
std
ss
les
mov
pop
ds
or
das
idiv
or
adc
out
sbb
xor
xor
push
push
test
rol
lea
ss
pop
test
ja
popa
imul
mov
(bad)
stos
and
mov
loopne
loop
mov
lea
scas
push
pop
in
icebp
sti
es
adc
neg
shl
lods
jp
(bad)
fisubr
mov
push
jp
fld
or
lock
(bad)
fiadd
jbe
test
pop
cmp
pusha
scas
out
in
ret
add
cwde
mov
jno
jle
cmps
pop
test
movs
sahf
mov
push
out
jns
push
enter
outs
sti
adc
cmps
push
aaa
in
jne
fisttp
js
scas
in
cmps
idiv
cmp
inc
mov
fisttp
add
xchg
pop
into
cmc
inc
dec
shl
xchg
and
pop
mov
shl
jb
dec
push
inc
inc
xor
in
and
sub
xchg
push
gs
add
adc
shl
aas
sahf
outs
add
fwait
and
jbe
pop
rcr
je
outs
ret
cld
daa
xchg
dec
lods
(bad)
(bad)
mov
inc
sahf
mov
in
or
(bad)
(bad)
sbb
jg
add
push
push
(bad)
sbb
sub
mov
xchg
or
mov
add
in
xor
mov
xor
imul
fadd
push
pop
pushf
push
cli
cmp
imul
and
dec
push
xor
cmp
sub
in
cmp
pushf
jnp
aam
dec
jbe
adc
add
push
cs
jns
fstp
adc
sub
mov
aam
sub
dec
loop
outs
jp
xchg
mov
xor
push
ror
fsub
xlat
and
xor
push
movs
xchg
daa
loopne
scas
lahf
test
pandn
sub
dec
jle
ins
cld
scas
std
pop
push
cmc
mov
ins
and
pop
add
push
fadd
ror
cli
add
mov
dec
int3
inc
leave
in
jmp
and
xchg
vpmulhw
and
xchg
aaa
push
dec
cmp
adc
sub
dec
ss
xor
adc
xor
mov
in
xor
scas
fldcw
or
and
test
ins
popf
data16
retf
lock
in
outs
repz
fwait
sbb
iret
in
mov
add
retf
push
rcr
pushf
cli
or
inc
daa
jge
in
out
inc
loopne
(bad)
retf
pop
cmp
xchg
jne
leave
inc
icebp
adc
sub
push
jns
push
inc
mov
bound
lds
popa
push
mov
jno
xchg
cmp
arpl
adc
mov
push
jae
jnp
popa
fs
in
popa
xchg
mov
je
and
stos
sbb
sbb
dec
test
xchg
sahf
popa
sar
aas
stos
cmp
push
push
pop
test
(bad)
xlat
data16
adc
mov
ds
adc
jge
pop
or
retf
sub
stc
pop
sahf
call
js
push
adc
sbb
inc
inc
scas
cmp
mov
mov
jl
adc
jle
and
movs
scas
daa
xchg
aaa
push
repz
(bad)
jp
sub
aas
daa
jns
xchg
in
lods
add
aaa
jo
mov
mov
ss
mov
mov
mov
xchg
addr16
jmp
dec
mov
xchg
cmp
and
or
xlat
sahf
sub
and
pop
pop
pop
push
add
stc
nop
cmp
mov
sbb
retf
popa
ins
mov
adc
add
mov
sbb
rcl
xchg
sar
pop
jcxz
jbe
mov
mov
push
in
pop
jl
adc
mov
pcmpeqb
pop
or
and
inc
sub
add
ss
mov
ja
cwde
loope
or
in
push
stos
iret
mov
in
xor
mov
xchg
out
and
and
xbegin
inc
push
cvtsd2si
push
test
or
jb
sub
dec
movs
dec
pop
cmp
pop
iret
xchg
aam
cmps
dec
sbb
xchg
mov
or
(bad)
jle
retf
xchg
mov
push
sbb
xor
mov
push
repz
xchg
jmp
pop
iret
out
add
mov
mov
xchg
xor
jmp
inc
sahf
xor
fidiv
jmp
xchg
in
adc
std
dec
cmp
push
daa
(bad)
adc
sbb
sub
mov
lods
sbb
add
push
nop
movs
stos
cmp
out
addr16
push
mov
lock
aam
jg
fist
or
xchg
ins
lds
xor
push
mov
xchg
fs
mov
int
push
in
inc
out
(bad)
dec
adc
and
pop
push
sbb
lods
adc
xor
mov
dec
sti
(bad)
mov
mov
(bad)
movs
cld
pop
ins
xor
lods
fwait
adc
and
sub
mov
dec
sub
adc
dec
jb
movs
fst
or
sbb
iret
dec
dec
call
cmps
push
mov
pop
test
loop
fcmovnu
push
cmp
push
scas
pop
out
rcr
out
mov
outs
jmp
xor
out
icebp
in
int
jo
iret
cmp
push
sbb
cmp
mov
jmp
ins
(bad)
shl
jnp
mov
mov
cmp
cmp
js
fiadd
dec
sbb
cs
bound
sar
int
addr16
stos
std
in
xor
cmc
jecxz
xchg
jle
movs
js
stc
pop
mov
xor
ins
cs
in
(bad)
fimul
mov
jae
stos
add
pop
call
sbb
adc
lea
pop
stos
and
push
dec
push
cmp
js
les
push
icebp
xor
or
jge
shl
fisubr
adc
stos
and
mov
rol
xchg
xor
pop
cs
jp
scas
std
sbb
mov
dec
mov
pop
inc
pop
lods
mov
repz
fbld
dec
retf
push
(bad)
xor
jp
enter
mov
leave
and
cmp
push
test
mov
aaa
clc
popf
jo
push
mov
jge
mov
jge
mov
jge
mov
jge
mov
fsub
cmp
mov
inc
pop
and
pop
dec
or
call
sub
or
sub
out
sbb
movs
inc
movs
cld
xchg
add
cmps
xchg
push
jno
mov
cld
dec
push
xchg
inc
imul
mov
mov
xor
inc
or
pop
sbb
cmp
retf
push
retf
or
iret
ret
loope
cmp
push
out
cmp
loopne
mov
xchg
push
mov
xchg
retf
push
bnd
shr
loope
cmps
shr
push
es
push
das
js
ds
mov
mov
or
into
ss
aaa
les
mov
cmps
ret
shr
and
add
pop
mov
pop
fdivr
inc
test
in
cmp
test
scas
movs
mov
or
pop
(bad)
movs
icebp
out
jecxz
jge
in
xchg
sbb
cdq
leave
xchg
push
xor
add
pop
enter
mov
pop
mov
in
cmps
fisttp
cmp
pop
shl
test
fnstsw
adc
ins
and
and
add
jmp
add
inc
movs
ja
cmp
into
sti
data16
inc
popf
fsubr
fnstsw
sbb
push
ja
add
es
jl
clc
and
in
cld
js
stos
cmp
mov
or
add
adc
xchg
mov
aad
mov
addr16
aaa
hlt
pop
aaa
popf
push
clc
das
dec
retf
push
movs
cs
ret
int
pushf
xchg
or
sbb
xchg
sub
or
movs
and
enter
dec
xchg
aad
cdq
hlt
jg
push
out
outs
sub
mov
sbb
mov
(bad)
call
adc
jl
sub
fst
xor
mov
jae
retf
pop
push
dec
das
lods
aas
mov
mov
dec
jmp
jo
ret
(bad)
in
xchg
sbb
in
or
ss
cdq
stos
mov
inc
mov
inc
push
mov
lock
ret
sti
(bad)
ss
shl
in
dec
dec
cmp
xchg
adc
dec
xor
fidivr
inc
sub
mov
dec
leave
movs
sub
sub
loopne
ins
push
cld
push
aad
rcl
and
xor
jle
into
loop
jo
retf
pop
loop
xlat
jmp
push
mov
dec
add
mov
mov
cmp
mov
mov
sub
fcom
pop
push
mov
dec
dec
xchg
or
cmc
xchg
or
pop
mov
cmova
int
cmp
jecxz
out
daa
jmp
movs
dec
mov
jae
mov
mov
rol
cwde
jge
out
scas
mov
push
sbb
bound
lds
sub
icebp
mov
xor
cmps
inc
pop
xchg
js
jle
xor
and
dec
fist
mov
lahf
cmp
mov
ja
imul
mov
into
das
scas
retf
(bad)
stc
clc
lea
pusha
scas
les
fld
mov
mov
xchg
xchg
lods
dec
out
pop
jp
xchg
imul
xchg
xchg
(bad)
mov
loope
xchg
cs
lahf
pop
arpl
(bad)
jnp
(bad)
das
or
out
xor
xchg
dec
jnp
retf
adc
ror
pop
gs
icebp
mov
bsf
or
xchg
cli
mov
dec
retf
test
jmp
or
mov
fdiv
xchg
and
fsubr
sub
push
test
pushf
inc
aam
mov
dec
ret
popf
in
mov
add
xor
cdq
bound
push
std
jb
push
movs
mov
cli
lods
hlt
jae
jns
sti
xchg
jb
ret
xchg
scas
adc
pop
xor
mov
pop
lea
scas
(bad)
dec
icebp
mov
sub
aas
mov
clc
inc
cs
jbe
repnz
mov
les
xor
adc
cs
xor
or
mov
retf
push
or
pop
xchg
and
lock
dec
push
scas
lea
aaa
cmp
and
push
(bad)
fsub
es
gs
xlat
ds
(bad)
pusha
add
fist
adc
pop
call
cmp
jle
jo
jae
out
or
mov
push
(bad)
pop
ins
jne
jle
lea
mov
sbb
sub
ret
dec
test
enter
cmc
fs
cmps
jl
iret
xor
repz
(bad)
jge
(bad)
stc
cmp
test
jb
ds
dec
sti
adc
mov
mov
jp
cmp
stc
movs
sbb
mov
sub
test
jmp
adc
mov
ror
sub
mov
jb
push
(bad)
xchg
vshufps
sbb
repnz
lds
cmp
and
lods
call
mov
retf
inc
xor
lods
sbb
pop
jo
mov
enter
or
aaa
jmp
mov
std
jge
sub
or
retf
loop
push
fdivp
and
imul
pop
fsubr
scas
je
mov
cmp
sub
mov
xchg
addr16
cmps
(bad)
and
mov
mov
xor
lock
xlat
or
pop
cld
adc
ins
pop
cmp
data16
(bad)
ins
add
pop
cmp
push
push
out
xor
stos
out
add
repnz
(bad)
jecxz
punpcklbw
mov
xor
dec
(bad)
call
push
das
xor
inc
sub
(bad)
out
sub
dec
mov
sub
mov
out
cmps
pop
fisttp
ds
into
cmc
enter
div
arpl
jmp
xor
daa
sbb
adc
imul
push
mov
(bad)
lea
int3
repz
xlat
add
es
test
call
dec
or
mov
ficomp
xchg
cs
xchg
aas
into
cwde
dec
pop
aas
cmps
sbb
ja
add
push
cmp
jns
adc
mov
xor
cdq
xchg
scas
stos
shl
adc
add
test
cmp
sub
aaa
jmp
mov
mov
clc
cmc
cmp
push
aam
xchg
in
sbb
call
or
stos
lock
stos
adc
(bad)
nop
outs
fnstsw
sub
sub
lock
test
(bad)
call
int3
or
add
shl
mov
test
mov
or
std
sbb
fcmovbe
push
test
jmp
push
mov
popa
ret
adc
adc
sub
add
jmp
loopne
es
ds
xchg
xor
cs
inc
cdq
and
movs
pop
ror
and
or
scas
dec
imul
xlat
cmp
xor
les
pop
and
mov
push
daa
pop
adc
imul
ret
add
rcr
or
add
xchg
jne
xchg
shl
jae
out
(bad)
mov
lock
jne
add
push
inc
stos
xchg
mov
lods
mov
rcr
rol
ja
cmp
movs
movs
xchg
pop
lods
shl
into
cmp
mov
in
in
xor
pop
xor
aam
call
bound
shl
call
and
jmp
xor
or
mov
xchg
iret
stos
or
xchg
out
retf
fld
push
mov
pop
stos
push
stos
and
repz
jle
ja
pop
sbb
movs
jne
push
(bad)
loop
jbe
fldenv
sbb
test
mov
std
push
jae
test
test
bound
and
mov
sub
pop
in
pop
xor
mov
mov
mov
gs
cmps
xchg
jp
pop
adc
mov
mov
sbb
inc
in
sbb
daa
xor
or
adc
inc
loopne
arpl
shr
fistp
test
scas
mov
in
fnsave
fbstp
in
jl
(bad)
xlat
add
loopne
outs
mov
je
pusha
es
pop
jmp
shr
jecxz
push
inc
push
adc
sub
int3
ins
scas
lods
and
scas
loopne
jns
mov
xchg
add
scas
push
cs
in
cmp
call
adc
xor
push
mov
add
lock
int
cmp
jo
ja
mov
das
(bad)
push
fimul
ins
jne
fld
sub
out
repnz
lock
dec
in
and
lods
out
push
aas
dec
stos
cmp
dec
inc
jae
or
mov
xor
shl
and
mov
stos
jo
cwde
pop
xor
aam
cmc
push
out
rcl
jne
je
mov
xchg
dec
cmp
mov
pop
pop
inc
out
cmp
mov
and
cld
add
call
pop
aam
jb
inc
cdq
or
jmp
xlat
loope
pop
mov
jno
or
sbb
in
test
add
add
xchg
loopne
mov
sub
pop
cmp
sti
mov
push
imul
fisub
xlat
cli
stos
arpl
adc
nop
ret
sub
ja
shl
xchg
into
push
mov
mov
jmp
jnp
jle
mov
jle
mov
mov
mov
pop
dec
mov
and
stos
aam
xchg
leave
or
xor
mov
test
out
mov
cmp
sbb
mov
icebp
sti
pop
jns
mov
test
sbb
daa
add
cmp
les
test
out
fnstenv
mov
mov
mov
jmp
mov
lea
push
clc
dec
add
call
xchg
pop
loope
mov
in
scas
mov
les
sbb
dec
sub
xchg
push
jle
mov
hlt
out
jl
stos
aaa
push
and
fcom
mov
pop
xor
xor
loopne
sub
mov
adc
jbe
fcmovnu
loope
nop
lock
xchg
lea
lds
test
cmps
gs
xor
call
ja
cdq
scas
retf
fcom
jp
sub
xchg
inc
imul
ja
pop
sub
or
lds
xchg
mov
push
das
(bad)
mov
lods
retf
retf
pop
inc
aad
push
push
pop
sub
call
mov
stc
xor
sbb
pop
xchg
sbb
hlt
popf
mov
adc
sbb
dec
jmp
aam
dec
sti
rol
hlt
adc
shl
cdq
xor
and
adc
(bad)
int3
xchg
jge
xchg
(bad)
dec
call
imul
adc
les
ror
hlt
jo
aaa
mov
push
dec
sub
ja
out
add
out
imul
add
adc
or
aaa
retf
mov
test
je
in
nop
ins
pushf
xlat
lods
adc
push
push
rol
sub
test
repz
sub
mov
ret
inc
cld
ror
mov
fisubr
or
sub
cs
in
or
cwde
pop
pop
fmul
cmp
and
cmp
add
mov
(bad)
popf
pop
sbb
jns
xchg
leave
mov
in
sbb
(bad)
mov
mov
mov
es
push
aad
mov
adc
stos
pop
mov
scas
cmps
fs
fs
loop
mov
jne
icebp
ret
push
(bad)
out
dec
(bad)
fiadd
scas
cmps
add
xchg
or
jae
and
ret
loopne
addr16
mov
xor
mov
daa
pop
sub
cmps
icebp
push
das
jae
adc
inc
adc
mov
or
adc
in
cwde
(bad)
clc
add
movs
retf
push
add
ficomp
jmp
dec
es
fisubr
inc
pop
adc
outs
(bad)
mov
ret
sbb
inc
cs
gs
enter
gs
cld
xchg
mov
repz
popaw
lods
adc
call
inc
dec
iret
(bad)
leave
pop
mov
pushf
xchg
inc
sti
sbb
scas
xchg
rol
sahf
pushf
(bad)
out
xchg
mov
sbb
and
cmps
fcomp
imul
shr
add
sbb
shr
pop
idiv
aaa
push
adc
add
sub
ss
mov
xor
pusha
mov
stc
leave
ret
cwde
outs
add
xor
push
jge
dec
fcom
retf
inc
das
cmp
mov
dec
xlat
(bad)
retf
aaa
cdq
je
dec
and
mov
xor
popa
mov
push
jns
daa
shr
and
gs
into
xchg
sub
adc
repnz
in
aas
mov
sub
jbe
inc
push
fdivr
dec
(bad)
test
jl
mov
fxch
sbb
mov
dec
imul
inc
(bad)
out
mov
push
out
adc
cmp
jne
int3
add
inc
xchg
out
sub
jno
jmp
scas
dec
mov
sub
mov
sbb
or
pop
push
div
iret
in
xchg
out
or
and
movs
add
cmps
ret
mov
stos
mov
dec
xchg
rol
mov
daa
(bad)
push
jnp
pop
xor
and
jmp
adc
outs
add
adc
or
sub
cmp
pop
cmp
in
(bad)
(bad)
or
xchg
mov
faddp
pop
lahf
popf
aam
js
inc
mov
les
mov
pop
addr16
add
mov
sar
cld
aas
js
mov
or
cmpxchg
je
and
or
rcl
and
inc
dec
mov
rdpmc
xor
xor
daa
out
add
jns
dec
pop
imul
outs
jmp
in
dec
pop
push
push
xchg
push
push
std
ret
jmp
retf
push
pop
cmp
push
push
sub
mov
sahf
adc
mov
std
jns
popa
iret
adc
(bad)
dec
cmp
xor
pop
mov
sub
iret
inc
mov
pop
ror
loope
mov
sbb
sti
loopne
adc
popa
jae
mov
cld
push
daa
or
mov
xor
enter
mov
and
pop
ins
dec
adc
stc
(bad)
mov
fsubr
inc
inc
xor
sahf
in
jecxz
sbb
dec
sbb
mov
pop
outs
test
mov
lods
xor
cmc
dec
mov
push
xchg
mov
imul
dec
es
adc
ret
shl
cmps
(bad)
xor
ficomp
aam
mov
(bad)
in
jb
mov
mov
js
into
fild
retf
shl
test
pop
dec
iret
jmp
movs
pop
jns
jecxz
aad
fdivr
jle
mov
pop
cli
add
outs
aaa
imul
cmps
into
add
mov
push
mov
fistp
icebp
inc
fcom
pop
xor
fiadd
scas
add
ds
retf
cwde
push
scas
call
and
push
add
mov
daa
sbb
jp
xor
mov
cmp
scas
fidiv
call
xchg
jmp
icebp
mov
movs
mov
rcl
add
mov
out
nop
jns
mov
push
push
sub
sbb
jp
xchg
mov
lahf
push
xchg
shl
push
call
jbe
sbb
mov
mov
repz
call
clc
push
mov
outs
or
out
into
sbb
call
scas
inc
xor
sbb
lds
retf
mov
add
loop
sti
mov
pop
push
cmp
imul
or
rcl
mov
pop
pop
aas
mov
repz
daa
and
push
dec
jmp
mov
xchg
ins
rcr
sub
inc
loope
push
int3
clc
push
xchg
push
pop
popa
or
mov
jne
jmp
add
loop
pop
and
and
pop
dec
pusha
ins
cs
cli
lods
mov
xor
jb
ss
mov
sbb
xchg
(bad)
cmps
imul
jae
add
test
and
test
cmps
fadd
sbb
ror
test
ficom
jp
xchg
mov
or
sbb
gs
adc
xchg
loopne
ficomp
add
inc
mov
enter
add
inc
jne
cmp
in
xchg
pop
mov
inc
aas
test
or
cmp
pop
push
in
(bad)
ins
ret
call
fstp
mov
out
pop
aad
xchg
inc
imul
push
push
lock
sbb
sub
dec
xchg
aaa
mov
pop
and
popa
jnp
sbb
xchg
aam
jl
out
ficom
in
call
add
mov
stc
lds
fisubr
cli
inc
ficom
dec
mov
sub
push
std
lods
scas
inc
push
sbb
pop
ret
inc
mov
(bad)
cmp
cmc
lds
es
sbb
fwait
xchg
(bad)
or
jg
rep
inc
add
loopne
mov
cwde
and
push
aas
(bad)
in
arpl
pusha
arpl
pop
pusha
mov
icebp
cli
or
inc
cmp
mov
sub
push
dec
dec
sub
retf
out
ror
movs
pushf
cmc
pop
jmp
or
cmps
dec
outs
call
fistp
sub
int3
js
lahf
and
push
sbb
jae
fsubrp
inc
adc
add
out
push
sub
je
div
push
cmps
mov
jge
xchg
inc
pop
push
icebp
int
dec
enter
jl
clc
mov
or
sub
adc
pop
jns
das
das
test
jbe
inc
adc
ja
leave
test
mov
mov
xor
pop
mov
movs
fimul
call
xchg
mov
jp
inc
adc
ins
mov
jmp
mov
jo
(bad)
scas
sub
mov
popf
xchg
jecxz
sub
lds
dec
xchg
inc
or
sub
cld
std
ds
sbb
mov
(bad)
fcmovne
loopne
hlt
mov
or
sbb
jnp
fwait
pop
adc
adc
adc
mov
jns
xor
(bad)
mov
adc
dec
mov
aam
mov
mov
dec
leave
retf
ret
jg
adc
jne
inc
addr16
jb
repz
(bad)
mov
sub
in
popa
jl
dec
dec
mov
pop
enter
in
fcom
in
mov
adc
jl
sbb
shl
jg
cdq
push
mov
arpl
dec
dec
fs
inc
arpl
pop
fwait
jb
dec
xor
hlt
out
mov
xor
mov
jg
scas
jge
sub
push
sub
push
inc
in
ror
fimul
rcr
out
mov
loope
push
sbb
sti
shl
xchg
aaa
shr
aad
gs
test
add
movs
xor
xchg
jl
aas
mov
add
loopne
je
mov
das
mov
sub
adc
sbb
int3
xchg
(bad)
push
(bad)
scas
test
data16
les
imul
sub
(bad)
retf
movs
cmp
mov
pusha
cmps
in
pusha
push
in
test
mov
mov
dec
or
mov
int
xlat
ret
mov
cmc
aam
retf
ret
lahf
movs
les
ret
dec
cmps
je
div
mov
adc
(bad)
in
sub
pusha
lods
adc
xor
loope
cmp
sub
loop
mov
jmp
xchg
push
dec
pop
xor
jmp
push
call
sbb
(bad)
inc
xor
movs
jae
bound
fld
ror
push
inc
(bad)
jle
xor
dec
popf
(bad)
ds
lahf
not
or
mov
in
ficom
or
int3
nop
cmp
gs
push
std
cmp
add
dec
jbe
push
add
je
dec
mov
pop
es
push
sub
xchg
cmp
jae
fldl2e
les
sub
arpl
pop
and
lods
mov
popf
pop
call
adc
inc
push
jl
ret
aad
iret
mov
push
ins
xor
sub
in
jns
inc
add
xor
jecxz
pop
lds
xor
bound
sbb
gs
clc
push
sub
out
data16
lds
je
dec
pop
mov
and
sbb
jo
je
cmp
or
test
out
aam
xor
movs
js
mov
mov
push
push
inc
mov
xor
mov
jl
aas
adc
pop
cmp
dec
retf
rol
inc
fsub
rcl
pop
repnz
dec
mov
int
mov
push
sbb
jns
into
mov
arpl
adc
sub
(bad)
cmp
iret
pop
ret
adc
and
push
xchg
inc
pop
push
dec
in
aad
imul
inc
or
movs
outs
(bad)
iret
pushw
repnz
in
popf
adc
sar
lods
dec
mov
jmp
lods
ret
mov
xchg
push
pushf
retf
cmp
xchg
lock
and
xchg
push
mov
mov
call
xchg
inc
push
loopne
pcmpeqw
ret
out
(bad)
in
and
mov
test
mov
mov
in
and
sub
sub
jge
ja
(bad)
mov
sbb
cmp
sbb
xchg
(bad)
movs
xor
mov
(bad)
inc
out
mov
mov
movs
inc
ins
pop
retf
jno
and
in
and
push
shl
xchg
mov
pop
add
add
ficom
fsub
cmps
mov
jle
cwde
jb
xchg
xchg
add
sub
push
fisubr
sub
rol
mov
jo
cli
and
adc
sub
or
shl
mov
push
int
sub
dec
adc
or
sahf
dec
ret
pop
mov
clc
jl
mov
or
pop
push
dec
push
dec
or
jle
es
adc
cmp
jge
daa
popa
stc
pop
adc
into
pop
jle
push
mov
test
lods
cwde
outs
test
pop
into
outs
dec
call
adc
jmp
cmp
stos
mov
cli
mov
inc
sub
or
cmp
mov
out
inc
cmp
cmps
sub
scas
popf
retf
neg
xor
clc
inc
pop
and
add
out
pop
pop
cdq
popf
daa
pop
mov
fwait
shl
iret
cmps
imul
xchg
adc
pop
int
repnz
jbe
push
call
xor
jbe
pop
sub
mov
out
idiv
push
iret
bound
sti
jge
imul
mov
xor
xor
pop
je
and
retf
neg
loope
js
jl
imul
xchg
jp
pop
retf
out
sbb
ja
mov
in
test
inc
cmp
pop
cld
es
sbb
dec
sbb
pushf
pop
push
pop
imul
inc
dec
push
movs
sahf
fidivr
sahf
xchg
ret
mov
call
repnz
cmc
mov
dec
test
aas
ror
jecxz
enter
jae
stos
fdiv
mov
jb
repnz
loope
paddd
cmp
clc
retf
add
mov
fistp
dec
vpacksswb
test
loope
dec
sbb
repnz
xchg
test
aam
rcr
(bad)
xor
xlat
fidiv
scas
aam
mov
pop
pop
or
dec
shl
(bad)
mov
shl
jmp
iret
aaa
dec
shr
ret
adc
mov
mov
adc
pop
xor
ret
stos
movs
cmps
mov
jp
in
xchg
les
out
je
je
into
js
pop
repz
(bad)
add
les
jnp
(bad)
arpl
mov
ror
add
pop
mov
sbb
sub
jle
or
mov
fisub
pop
mov
dec
cmps
loope
jp
iret
das
pop
fsubr
fadd
and
in
or
repnz
(bad)
iret
inc
cmp
out
mov
xchg
inc
sti
jo
xor
cmps
cwde
xor
fst
push
cs
xor
loope
xchg
neg
out
std
pop
jb
js
jnp
jge
inc
icebp
sbb
cmc
gs
clc
cmp
imul
imul
inc
fimul
push
pop
mov
add
lds
mov
pop
out
and
data16
fwait
ret
inc
int
add
mov
inc
test
repnz
ja
or
jp
cmp
push
je
jae
(bad)
iret
test
mov
repnz
lea
and
es
cmp
test
fstp
ret
sbb
loopne
cmp
(bad)
fild
js
mov
xor
mov
leave
mov
xchg
adc
xchg
pop
push
cli
(bad)
jmp
cmp
sti
push
pop
xchg
pop
in
pop
xor
test
sbb
shl
pop
pusha
shl
mov
cmp
mov
adc
dec
mov
add
mov
add
push
(bad)
out
les
test
dec
mov
fmul
lds
fdiv
or
dec
imul
push
mov
push
mov
and
addr16
repz
mov
cwde
shl
enter
jecxz
cmp
inc
sti
dec
dec
mov
int3
(bad)
repz
call
ds
add
mov
mov
loop
adc
fsubr
cwde
scas
and
sub
icebp
scas
push
nop
xor
cmp
xlat
std
lods
pop
das
ja
push
jae
add
fsubp
js
(bad)
loop
call
add
cmc
test
inc
pop
lods
xor
push
jae
(bad)
fst
pop
bound
inc
mov
dec
mov
hlt
cmp
inc
movs
xor
(bad)
push
scas
jns
xor
sub
or
mov
inc
xor
sub
jp
sub
mov
add
das
add
stos
push
sbb
sar
imul
jmp
jmp
popa
mov
daa
fxch
pop
xchg
into
in
and
ja
aas
pop
mov
mov
fist
je
movs
ret
sub
push
arpl
jo
ret
xchg
xchg
pop
les
sbb
adc
addr16
outs
repnz
push
stos
pop
xchg
inc
add
in
bound
mov
add
repz
jmp
gs
pop
mov
jp
(bad)
loop
xor
mov
int
popf
and
aad
cld
mov
pusha
(bad)
daa
into
lea
stos
pushf
push
mov
adc
xor
sbb
into
out
nop
add
cwde
cdq
mov
mov
je
lahf
repz
inc
call
jp
lods
dec
xor
sub
xchg
jecxz
xor
mov
jmp
movs
fs
push
adc
test
push
add
cmp
xchg
leave
xchg
sbb
xor
daa
popf
sub
js
mov
loope
push
fxtract
jno
jmp
push
enter
cli
sbb
pop
mov
out
call
ret
pushf
jecxz
gs
rcl
mov
cmps
cli
dec
test
mov
jp
dec
les
sub
ret
cs
into
or
and
xchg
in
(bad)
int
sbb
pop
jbe
push
mov
arpl
add
adc
jno
jge
xchg
test
pop
jmp
jmp
gs
loope
add
jbe
fisttp
sub
mov
arpl
fist
adc
pop
and
call
pop
pop
jbe
push
and
fstp
fmul
cmp
adc
pop
pop
bound
sahf
aas
and
pop
xchg
imul
inc
push
mov
push
add
(bad)
imul
and
jne
mov
xchg
xchg
dec
stc
nop
pop
pop
mov
test
add
(bad)
std
push
pop
inc
sub
int3
mov
cmp
inc
cwde
push
dec
jp
xor
inc
data16
sub
test
jo
test
sbb
es
mov
cmp
cmp
leave
sbb
xchg
ins
jnp
test
call
pop
jecxz
loop
outs
rcr
adc
push
sbb
scas
cmps
shr
cmc
int3
out
cmp
scas
pushf
mov
mov
and
retf
fdiv
mov
and
je
sub
or
add
push
lahf
fimul
jg
retf
mov
arpl
daa
xchg
ds
jg
sbb
out
jmp
sar
(bad)
imul
xor
dec
and
scas
mov
sub
xor
(bad)
push
movs
jle
push
in
sbb
jmp
adc
jle
cs
call
sbb
test
push
inc
inc
mov
push
stos
mov
cmp
adc
int3
cmp
cmp
jp
cmp
pushf
inc
jno
(bad)
test
pop
mov
cmp
scas
mov
aaa
cld
xor
xchg
push
push
mov
es
mov
(bad)
adc
pop
pop
add
jp
retf
mov
xor
and
std
nop
and
xchg
inc
loopne
(bad)
and
mov
stos
push
mov
adc
retf
int
mov
pop
inc
icebp
xchg
xor
cwde
lock
pushf
leave
mov
scas
test
mov
xor
adc
mov
jmp
int
jmp
sar
fidiv
test
movs
cwde
mov
dec
sbb
dec
push
jmp
jp
mov
stos
sub
lahf
xchg
iret
retf
jbe
shl
inc
fnstenv
mov
mov
xchg
pop
mov
imul
les
mov
enter
dec
leave
add
in
dec
test
popa
(bad)
xchg
repz
test
sti
rol
sub
data16
inc
cmp
inc
shr
sti
daa
movs
push
or
sbb
into
(bad)
mov
mov
retf
mov
push
dec
mov
and
rep
xchg
int
mov
ss
ret
mov
cmc
pop
adc
leave
lds
(bad)
repnz
dec
out
inc
ds
retf
or
adc
pop
push
pop
pushf
inc
dec
dec
push
mov
jnp
push
cmps
scas
(bad)
xlat
dec
and
pop
lea
dec
sbb
sbb
push
dec
out
sbb
lock
xor
popa
aad
fcomp
aaa
popa
jmp
sub
jl
loopne
sbb
xor
sub
fiadd
xor
aad
xchg
sbb
mov
cmp
push
stos
icebp
mov
sbb
ja
xor
fstp
(bad)
ds
dec
or
xchg
and
mov
cmp
das
retf
dec
xchg
add
scas
adc
movs
scas
sar
sub
clc
mov
add
hlt
pop
int
xchg
mov
jbe
sub
jmp
inc
movs
test
or
push
mov
pop
nop
mov
cmps
int
(bad)
pop
into
adc
push
pusha
mov
mov
push
pop
in
xor
jne
dec
pop
arpl
pushf
mov
sbb
sub
(bad)
cmp
daa
inc
idiv
xchg
fstp
aam
outs
dec
jo
sub
jmp
xchg
mov
pop
jns
cmp
and
jnp
fcomp
adc
(bad)
out
xchg
xor
mov
or
sub
cmps
cmp
ins
fcomip
fwait
daa
mov
mov
int3
xor
out
stos
ficom
jae
jae
fsub
ins
test
ret
adc
inc
add
dec
or
cmps
retf
in
adc
sbb
cmp
repnz
je
or
sbb
(bad)
pop
mov
mov
cmc
inc
daa
sub
cmp
arpl
je
cmp
jb
in
lods
jo
jmp
clc
and
dec
pop
aad
cwde
int
aaa
sub
loopne
mov
mov
mov
xchg
cld
xor
mov
mov
and
and
adc
add
and
imul
inc
lods
mov
jmp
push
ret
or
dec
lea
xchg
jmp
push
sub
retf
or
ss
outs
pop
mov
adc
sub
jl
jecxz
arpl
(bad)
cmp
stos
ss
adc
inc
mov
and
shl
and
(bad)
and
mov
jno
repnz
dec
inc
add
outs
imul
pop
leave
fwait
xchg
inc
jbe
or
dec
cmp
dec
adc
std
pop
xchg
(bad)
adc
mov
xor
aaa
xor
mov
push
jne
call
dec
adc
movs
out
data16
sub
test
in
lds
jae
out
aaa
mov
xor
lock
in
mov
leave
sbb
repnz
fs
xchg
ror
xchg
mov
ins
jo
pop
out
cdq
add
inc
repz
mov
test
out
es
das
mov
movs
mul
xor
cmp
fcmovnb
or
mov
arpl
mov
mov
xor
xor
xchg
popa
ins
pop
mov
pusha
aad
clc
stos
dec
(bad)
es
xchg
aaa
add
cmp
xchg
ret
pop
retf
loope
xchg
sub
fs
cmp
lods
mov
adc
stc
xchg
in
pop
add
ins
sbb
sbb
arpl
pop
sbb
push
inc
or
addr16
nop
xor
imul
cmps
fadd
adc
sub
cmp
pop
dec
dec
jnp
dec
shr
fstp
dec
lds
ja
std
cmp
sbb
inc
jmp
inc
movs
jns
xor
and
add
and
out
add
test
xor
xor
in
mov
mov
adc
pop
ret
xor
lods
push
jns
mov
xchg
and
mov
loope
pop
in
jb
jbe
jle
loope
loope
mov
stos
jbe
pop
and
xchg
cs
fbstp
neg
adc
push
repz
xchg
xor
jb
int
add
push
mov
mov
call
in
or
ret
jl
in
addr16
inc
in
adc
fdiv
jae
mov
pop
sti
ds
jmp
pushf
int
mov
cdq
loope
mov
inc
repz
repz
push
mov
jmp
and
push
(bad)
xor
clc
jb
sub
mov
(bad)
add
fstp
pusha
or
cmp
test
dec
cmps
js
push
lods
sahf
sub
mov
mov
lods
dec
fcmovnb
mov
(bad)
out
int3
dec
aaa
test
inc
push
pop
or
mov
repz
(bad)
adc
test
daa
shr
in
(bad)
mov
fild
pop
imul
fwait
aam
aas
test
lods
aam
sub
mov
out
or
scas
pushf
loop
jns
cmp
add
and
retf
sahf
loopne
fdiv
cmp
and
ret
mov
push
xor
mov
add
mov
dec
ss
push
dec
or
retf
cmp
mov
sub
enter
jo
ja
iret
out
jnp
push
push
dec
xor
bound
inc
es
into
movhps
shl
das
xchg
pop
mov
jl
cdq
or
idiv
fst
cmp
pop
fcmovnb
repnz
adc
shl
and
dec
in
rol
jae
clc
sub
pop
mov
popf
ficom
sbb
loope
and
rol
mov
imul
inc
mov
pop
xlat
adc
inc
adc
lods
retf
outs
sub
imul
pop
adc
sub
out
sbb
jns
mov
push
dec
lock
xchg
sar
imul
adc
stos
mov
(bad)
jns
out
sbb
mov
inc
pop
xchg
pop
push
fcomip
popf
fadd
push
imul
sub
test
push
and
cmc
fisubr
mov
shl
xchg
cwde
test
cmp
or
cmp
dec
jae
(bad)
retf
stos
mov
cvtps2pd
test
add
jns
or
retf
add
fld
sbb
in
fidivr
in
jp
sub
dec
lahf
mov
dec
lods
rcr
daa
push
aad
mov
cmp
test
stos
mov
mov
push
xlat
out
and
jp
rol
aaa
leave
xchg
mov
sti
sbb
and
adc
mov
into
ret
mov
rol
pusha
icebp
and
sbb
cmc
(bad)
sub
mov
cs
stos
fst
adc
shr
cmc
shl
xor
loop
scas
shr
mov
and
lock
mov
mov
cs
daa
into
mov
fmul
(bad)
pop
les
push
push
or
push
inc
mov
pop
push
sbb
out
and
xor
and
loop
sub
es
jne
mov
mov
(bad)
mov
mov
(bad)
jo
or
dec
rcr
jl
fsubr
or
lock
inc
dec
mov
xor
inc
add
xchg
shr
out
xchg
mov
push
imul
int3
or
mul
or
movs
and
es
and
mov
adc
fst
iret
pop
cmps
mov
or
ds
pop
and
and
jae
push
or
pop
fcom
(bad)
std
jns
jmp
ror
mov
dec
stos
jmp
call
inc
jnp
rdtsc
or
xchg
cmp
inc
es
lahf
adc
cmp
popf
mov
outs
icebp
cmp
dec
popa
lahf
sbb
mov
out
xchg
jecxz
push
add
mov
adc
jns
pop
pop
inc
push
test
adc
outs
mov
adc
(bad)
cmp
cmp
lds
out
pushf
mov
mov
pushf
adc
mov
xchg
add
loope
outs
ins
test
xor
mov
dec
pop
xchg
fcmovne
cmp
je
outs
sar
gs
cdq
dec
retf
jbe
pop
pop
outs
fsub
cld
push
outs
int
jge
cmp
jnp
aam
sti
mov
jg
adc
pop
test
cmc
pop
pop
out
stc
cmp
xor
xchg
addr16
xor
pop
je
push
gs
les
cmc
pop
jecxz
or
mov
scas
jmp
push
scas
ja
(bad)
push
(bad)
sub
push
inc
or
jle
xor
aas
ret
adc
push
or
(bad)
enter
push
arpl
icebp
inc
push
lods
loopne
fidiv
mov
xlat
scas
loope
fild
cdq
cmp
xchg
stos
int
repz
lods
fadd
arpl
mov
(bad)
shl
pushf
mov
(bad)
mov
aas
popf
sub
mov
mov
call
in
sar
xchg
fldenv
adc
jge
pop
mov
add
sbb
aad
push
je
or
mov
mov
jne
test
pop
sub
popa
fld
push
sub
ins
mov
outs
xor
sbb
pushf
cmp
pusha
retf
sub
fst
jmp
mov
and
xor
adc
dec
inc
mov
cdq
stc
mov
or
adc
jmp
neg
or
and
pop
xor
push
add
pop
dec
or
mov
add
jmp
lahf
cmp
xor
out
xchg
mov
ror
lods
mov
(bad)
and
xor
(bad)
jle
mov
adc
dec
push
data16
jns
xchg
push
mov
xor
inc
mov
push
inc
retf
(bad)
nop
movs
ret
jno
inc
jno
in
ficomp
or
add
(bad)
loop
shl
dec
ins
test
mov
(bad)
dec
pop
mov
and
gs
fdiv
or
shl
pop
outs
jbe
mov
add
cld
mov
ins
dec
cmp
ret
push
add
es
test
movs
ret
push
and
mov
mov
inc
sbb
add
and
mov
call
jno
inc
push
jo
jmp
push
ja
cmp
mov
mov
jg
sub
sbb
sti
es
fnsave
in
or
mov
hlt
mov
pushf
or
sbb
call
inc
dec
or
mov
int3
sub
dec
or
push
xchg
leave
or
xor
out
mov
in
pop
jmp
or
sbb
ins
add
mov
cs
mov
outs
rcl
mov
fs
xor
or
cmps
scas
sub
mov
loope
cmps
xor
or
jmp
ror
mov
fcomi
cmp
in
sub
inc
jmp
jnp
cmps
stos
lods
push
fidivr
pushf
or
pop
pop
inc
sbb
add
ins
sub
xor
les
movs
mov
ins
push
les
mov
shl
mov
ret
cdq
daa
aaa
jbe
jmp
and
loopne
adc
xor
call
sub
cdq
add
shl
call
push
js
pop
in
shl
cdq
test
jmp
int
pop
nop
add
sub
add
adc
shl
push
and
mov
xor
fild
adc
add
adc
retf
and
jmp
pop
(bad)
imul
xor
pop
inc
ds
xchg
enter
fnstcw
inc
pop
lahf
js
out
mov
imul
xchg
mov
mov
retf
mov
mov
jge
push
xor
fisttp
jnp
pop
mov
mov
dec
sub
xchg
dec
stos
ror
cmp
xchg
cdq
jg
cmp
daa
push
push
mov
and
js
jmp
sbb
push
call
mov
mov
sar
cmp
xor
pop
call
(bad)
loop
aam
popf
jns
bnd
out
jb
mov
test
mov
fdivr
push
cmp
jmp
jl
and
(bad)
ins
jle
jl
call
mov
popa
pop
add
aad
mov
xchg
or
outs
jge
mov
adc
mov
aaa
push
sbb
sbb
mov
inc
push
push
retf
fidivr
sub
test
mov
jp
out
imul
shr
popf
cmc
and
and
popf
mov
(bad)
out
inc
in
mul
loopne
pop
aas
pop
and
aam
out
xlat
jbe
push
outs
ret
xor
or
neg
push
movs
push
out
mov
ret
ficom
jns
cdq
and
test
add
fwait
sbb
outs
push
stc
mov
les
sub
lods
nop
lods
mov
add
std
pop
iret
and
or
in
ret
push
stos
xchg
push
adc
sbb
adc
pop
mov
or
cdq
add
push
fsubp
pop
sub
fnstsw
mov
push
fs
cmp
sub
(bad)
jmp
push
pop
sbb
jmp
popa
add
lds
stos
xchg
adc
add
xchg
push
rol
mov
or
adc
push
cmp
(bad)
mov
stc
stos
in
or
out
clc
add
fistp
repz
neg
sub
pop
adc
bnd
iret
xchg
and
popa
push
adc
mov
jns
jae
and
add
mov
sbb
xor
xchg
xor
pop
xchg
push
lods
nop
xchg
in
enter
mov
call
leave
jecxz
addr16
xor
inc
aad
mov
stos
cmp
mov
pop
int3
pop
cmps
push
iret
les
retf
jmp
sbb
js
mov
pop
scas
fbstp
test
stc
arpl
shr
dec
scas
cwde
inc
xchg
cmc
mov
xor
xor
mov
dec
xchg
imul
jmp
xchg
mov
(bad)
xchg
leave
xor
adc
in
ret
jns
out
mov
repnz
add
or
sbb
call
mov
stos
dec
fadd
jnp
mov
pop
pop
inc
cld
push
(bad)
cs
or
mov
pop
add
adc
call
pop
fidiv
leave
pop
push
dec
es
(bad)
int
mov
rol
xor
mov
ror
jns
cmps
xor
sub
hlt
enter
shr
mov
sahf
test
clc
add
loope
fidivr
xor
outs
or
mov
adc
sti
add
push
fdivr
(bad)
movs
retf
jg
into
pop
add
lahf
das
rol
adc
fdiv
push
addr16
out
mov
jge
adc
rol
or
fbstp
cld
or
mov
xchg
sub
es
iret
scas
in
es
ins
and
mov
cmc
ss
cwde
add
or
mov
push
(bad)
sub
lahf
pusha
mov
jnp
push
cmp
pop
xchg
add
add
cmps
das
(bad)
push
inc
pop
pop
into
inc
test
cmps
dec
fs
xor
xchg
mov
xchg
dec
sbb
cmp
movs
in
inc
xlat
xor
push
int
push
mov
xchg
fsubr
out
and
mov
out
ds
pop
add
ja
xchg
dec
add
int
std
retf
xor
pop
movs
push
sub
lahf
xchg
lahf
mov
shl
aad
jns
imul
inc
bound
into
popa
aam
fwait
mov
and
or
dec
cmp
pop
xor
cmp
lea
mov
inc
mov
and
pop
or
in
xchg
sub
fmul
inc
(bad)
inc
mov
call
jnp
mov
jo
cmp
pop
sub
test
daa
fild
xor
inc
fbld
cmp
test
push
into
xchg
repz
leave
cld
jnp
push
xchg
sub
retf
test
jno
test
(bad)
adc
cmp
fs
add
call
repz
fnstcw
repnz
and
inc
cld
xor
mul
mov
sbb
push
jo
fsub
push
add
cdq
(bad)
xchg
pop
pushf
ffree
call
sub
mov
cs
ret
jo
sub
pop
aad
xor
xchg
jno
cmps
xor
or
in
or
xchg
jbe
push
sub
xchg
xchg
push
inc
das
shl
lds
int3
test
lods
pushf
xchg
ja
in
pop
mov
mov
xchg
adc
aam
stc
call
inc
pop
out
cdq
push
paddusw
mov
(bad)
fidiv
and
aas
(bad)
mov
sub
and
and
stos
or
mov
arpl
add
and
or
adc
test
aaa
jmp
retf
mov
cmp
aad
push
fs
add
cld
and
mov
scas
hlt
mov
xchg
inc
mov
adc
or
adc
inc
bnd
jp
mov
xor
in
dec
aas
sbb
cmps
lahf
icebp
dec
adc
mov
xchg
jbe
lds
sub
and
js
jmp
mov
gs
sub
push
sub
pop
in
(bad)
loopne
lahf
sbb
enter
pop
pop
dec
cmp
ins
ret
push
dec
adc
and
cmp
inc
outs
add
mov
jbe
int
sbb
scas
lods
xchg
pop
das
fwait
gs
push
mov
les
retf
out
mov
pop
ins
das
cmps
mov
into
leave
out
mov
and
xor
xchg
jl
jo
add
push
push
das
and
aas
sar
mov
xor
int
add
mov
push
xor
sbb
and
ror
dec
cmps
xchg
add
sub
ja
lahf
iret
icebp
jne
jecxz
jmp
mov
inc
jle
xor
cs
ins
out
arpl
mov
(bad)
pop
inc
pop
add
dec
retf
stc
add
cwde
hlt
mov
jle
pop
jge
xor
mov
ins
cli
mov
xchg
nop
push
stos
dec
adc
std
dec
and
sub
loop
outs
bound
dec
shr
xlat
pusha
add
and
push
xor
sti
dec
dec
jae
(bad)
xor
leave
in
jbe
scas
test
or
push
loop
retf
jne
sub
(bad)
mov
jns
lods
cmp
shl
fisttp
mov
cwde
std
ins
and
jmp
cmps
lds
sbb
popa
jns
jg
ror
jge
addr16
mov
dec
sub
push
std
les
test
jecxz
and
adc
jle
shl
adc
inc
mov
jge
xchg
push
push
clc
xor
lock
idiv
jne
cdq
push
dec
push
enter
aas
or
cdq
push
cwde
fisubr
fdivr
test
push
mov
cmp
xor
inc
xchg
dec
retf
add
xor
mov
inc
jle
jmp
jmp
push
cwde
cmp
dec
xor
mov
fwait
mov
jmp
es
fwait
lods
jb
test
in
jmp
popa
or
inc
dec
fnstcw
push
les
and
cmp
out
cmp
addr16
into
xchg
(bad)
jg
movs
mov
sbb
(bad)
dec
fdivr
gs
pop
add
fistp
loopne
push
rcl
jmp
pavgb
jge
xor
addr16
leave
mov
add
dec
and
and
sbb
iret
push
fisub
(bad)
mov
add
jno
or
gs
das
shl
inc
jae
imul
lock
jge
outs
xor
cmps
les
loop
sar
das
inc
fimul
outs
sbb
xchg
gs
(bad)
dec
leave
inc
push
js
inc
mov
int3
inc
inc
or
test
jmp
fsub
fs
js
push
xchg
xchg
pop
rcl
and
jmp
in
jb
sub
in
sbb
xor
scas
xchg
inc
arpl
retf
hlt
inc
out
dec
adc
iret
std
cmp
bound
dec
sub
div
rcr
sbb
div
sbb
and
cld
and
cli
xor
mov
test
fs
pop
test
and
lods
movs
mov
or
ror
jo
jne
in
jae
jo
(bad)
neg
sti
dec
mov
push
and
push
mov
or
cmps
add
sub
and
xor
dec
imul
lea
xchg
sbb
out
arpl
jbe
push
js
xchg
test
inc
jl
add
add
retf
push
fnsave
cwde
(bad)
jge
andps
and
pushf
pop
test
xor
fdivr
outs
pusha
popa
jp
and
imul
or
cmp
sub
lods
loop
mov
pop
popa
fadd
retf
inc
or
fsubr
mov
call
fiadd
es
jmp
int
(bad)
stc
or
mov
(bad)
enter
xchg
push
sub
pop
mov
nop
pop
not
call
(bad)
sub
mov
xor
dec
mov
sub
mov
bound
ret
mov
lods
inc
pop
add
loope
push
(bad)
repnz
push
push
(bad)
ins
pop
push
scas
push
(bad)
adc
add
jl
ins
xchg
(bad)
fmul
and
and
or
inc
mov
ss
pop
int3
pop
and
ja
retf
stos
loopne
clc
mov
aad
in
mov
fldenv
imul
sar
loop
sbb
push
cmps
and
jl
je
repz
int3
adc
push
das
push
mov
aaa
lds
xchg
jp
in
xchg
stos
outs
in
arpl
fisttp
xchg
dec
(bad)
xchg
test
sub
inc
out
jne
mov
mov
out
movs
xchg
mov
jp
test
jno
ret
nop
scas
mov
and
dec
outs
jns
xchg
scas
cli
and
jl
popf
mov
mov
imul
dec
mov
into
push
mov
jge
sahf
mov
test
movs
and
into
mov
imul
fwait
mov
mov
fs
sbb
xor
adc
push
jnp
sbb
xor
ret
jno
pop
cwde
fild
clc
dec
mov
loope
adc
mov
cld
sbb
sub
bound
push
(bad)
out
mov
push
jmp
movs
call
xchg
dec
clc
sub
stos
outs
loopne
nop
dec
pop
adc
retf
inc
push
jo
movs
int3
cs
jecxz
xchg
jno
inc
cmp
dec
add
dec
pushf
adc
shl
mov
inc
add
lahf
(bad)
in
or
fwait
out
pushf
mov
daa
cwde
inc
mov
iret
aaa
outs
xchg
scas
xchg
and
sar
je
lock
dec
inc
cwde
mov
pop
pop
out
mov
call
inc
mov
dec
icebp
xlat
lahf
mov
cmp
mov
cmp
xchg
adc
push
movs
jp
xchg
cmps
push
or
cli
push
mov
dec
bswap
out
mov
popa
ins
loop
pop
idiv
fiadd
pop
(bad)
mov
fisub
stos
mov
cmps
outs
push
imul
fldz
or
cmp
je
mov
jge
ss
jle
iret
js
sbb
repz
imul
xchg
and
movs
bound
clc
lods
mov
pop
call
sub
fadd
ja
xchg
retf
cmps
jmp
ret
loopne
cdq
cdq
daa
jnp
add
std
sub
in
js
test
add
fldcw
stc
xchg
add
cmps
pusha
sbb
imul
sbb
fisub
xor
push
lds
imul
cmp
sub
pop
pop
push
pop
cli
pop
cmc
stc
inc
xchg
lahf
neg
mov
div
xchg
rep
stc
lods
imul
xor
pop
scas
test
int3
cmp
mov
(bad)
(bad)
mov
xchg
cmc
push
inc
es
fldenv
dec
sbb
test
add
dec
inc
sbb
clc
and
je
pop
xchg
add
imul
jnp
fwait
out
(bad)
fiadd
xor
mov
push
pop
mov
test
xor
adc
jp
(bad)
pop
push
movs
loopne
adc
sub
pusha
dec
lds
jecxz
mov
inc
or
(bad)
mov
jo
add
mov
cmp
pandn
popa
int
stc
loop
push
faddp
scas
cmp
mov
int
xchg
(bad)
mov
fstp
jge
daa
pop
cmp
pop
add
addr16
aad
jo
xchg
xchg
(bad)
fstp
stos
inc
pop
mov
aad
cmp
ss
test
loope
cmp
push
movs
xchg
outs
ds
mov
mov
or
sub
mov
add
mov
sbb
outs
mov
inc
inc
hlt
mov
lods
inc
inc
push
inc
movs
adc
mov
adc
cmp
fistp
imul
aaa
ins
mul
(bad)
fldcw
xchg
dec
out
fdiv
xchg
add
inc
jbe
mov
mov
xchg
or
fwait
mov
call
fcom
sbb
sbb
cwde
hlt
aad
jle
fwait
aam
xor
mov
push
push
mov
(bad)
mov
jne
sahf
cmc
movs
test
ins
fidivr
mov
pop
push
rol
sti
jo
jp
stc
xchg
into
sub
sti
rol
xchg
pop
paddsw
mov
fmul
call
bound
xor
bound
xchg
mov
popa
add
fsub
sub
mov
mov
pushf
ret
sub
aas
adc
xor
retf
cmp
cmp
pop
dec
adc
shl
push
shr
(bad)
jp
cdq
and
(bad)
fdivr
call
(bad)
(bad)
call
in
mov
enter
xchg
fiadd
ins
sub
pop
xor
mov
cmp
outs
cmp
jae
cmps
loop
push
jecxz
mov
jne
jae
inc
or
sub
adc
mov
jno
jns
shl
mov
push
jl
mov
sahf
pop
(bad)
ins
retf
pop
mov
ins
shl
test
add
mov
jno
icebp
inc
add
btr
pop
push
xchg
out
push
mov
push
cmps
or
adc
or
dec
and
sbb
push
(bad)
dec
dec
aas
stos
mov
and
mov
push
jo
pop
xchg
div
and
in
cmps
jbe
cdq
xor
cmp
dec
or
(bad)
call
jmp
ja
jmp
push
in
(bad)
mov
add
add
leave
iret
out
cmp
pop
adc
dec
adc
imul
sub
mov
fsub
(bad)
xchg
push
jbe
xor
fwait
mov
inc
leave
add
mov
sub
dec
leave
jno
xchg
and
rol
(bad)
(bad)
sub
(bad)
(bad)
out
call
daa
arpl
imul
mov
jne
add
cmps
out
icebp
or
ss
and
xchg
sahf
mov
cmps
fisubr
in
mov
mul
xor
jmp
mov
or
(bad)
mov
cmp
jmp
jbe
aad
es
add
pop
in
mov
sbb
ret
adc
dec
ret
mov
xchg
mov
sbb
mov
sub
jle
jbe
cmp
mov
adc
inc
mov
mov
test
sub
mov
inc
popa
cmps
pop
pop
cmps
fsubr
push
(bad)
pop
outs
shr
ins
stos
rcl
stos
out
sbb
mov
repz
mov
repz
inc
mov
xchg
push
aad
mov
test
mov
cwde
jb
rcr
lds
stos
nop
sub
mov
popf
aam
call
cmp
(bad)
push
jns
(bad)
ja
aas
fwait
mov
jecxz
xchg
mov
adc
push
xlat
mov
inc
jl
call
shl
es
sbb
xor
sbb
jae
ret
or
push
in
sub
add
stos
add
loopne
sbb
or
xchg
sub
fmul
xlat
std
leave
xor
cmps
push
pop
jne
jmp
and
sbb
(bad)
jmp
shr
adc
cdq
jecxz
pop
imul
repz
movs
xor
or
dec
clc
lock
sahf
cwde
ds
jne
test
sbb
fwait
inc
call
cmp
imul
(bad)
shr
in
xlat
jge
dec
cmp
sbb
dec
jl
add
jno
dec
data16
inc
sub
je
push
sub
mov
cmp
sub
(bad)
sbb
nop
add
sub
call
pop
inc
jnp
add
sub
mov
lock
cmc
loope
push
push
cwde
out
and
int3
rcl
pop
sti
sub
mov
mov
aad
mov
cli
dec
aas
adc
in
adc
adc
sbb
shl
ins
jecxz
cmp
cli
mov
cld
add
imul
dec
push
shl
sub
mov
xchg
mov
out
xchg
lds
mov
cmps
sbb
sbb
iret
lea
adc
icebp
xchg
add
jge
mov
mov
push
mov
jl
imul
jle
sub
mov
fcom
std
sub
mov
push
push
mov
imul
stos
sbb
xor
jnp
jne
rol
stos
jbe
xor
fnsave
loop
out
or
or
inc
and
cld
add
and
rcl
mov
rcl
div
adc
fld
int3
mov
movups
loopne
inc
cwde
and
inc
cmps
mov
pop
sti
call
jp
repz
xor
pop
jl
scas
push
ins
sub
(bad)
xor
pop
adc
arpl
mov
jno
cmp
scas
dec
sub
cld
and
inc
cmps
sub
add
mov
ss
ins
mov
mov
xchg
mov
adc
repz
push
sti
in
adc
hlt
test
pop
popa
cli
cmc
mov
dec
push
aaa
test
jmp
ins
xchg
dec
outs
neg
push
cmp
ja
sbb
retf
push
scas
pop
lods
push
xor
pusha
cmp
xchg
cmc
pusha
mov
repnz
jecxz
cmp
mov
push
in
and
retf
es
pop
jp
stos
and
cmps
xchg
mov
jns
(bad)
push
sub
mov
cmp
iret
js
fstp
pop
aas
les
inc
out
ficomp
xor
cli
lds
xor
jl
cmp
xor
sbb
mov
fs
cmp
inc
mov
mov
or
sbb
push
aas
sar
mov
aad
imul
(bad)
out
fcmovnbe
pop
fdiv
outs
sub
push
sbb
xchg
(bad)
(bad)
dec
cmp
push
neg
add
test
sub
jmp
rcr
jnp
jp
xchg
sub
and
mov
iret
cmps
clc
jmp
xor
dec
in
add
les
dec
inc
ins
xchg
retf
push
jmp
xchg
sbb
mov
sub
fwait
in
cld
mov
inc
xor
sbb
(bad)
cs
xor
and
xchg
mov
mov
hlt
fcom
dec
add
fmul
bound
adc
mov
jge
je
push
jae
cmp
pusha
and
out
pop
mov
aad
clc
sub
push
es
inc
push
add
fidiv
hlt
pushf
jg
xor
adc
xor
(bad)
cli
dec
cmps
(bad)
shr
add
mov
fbld
pop
push
xor
inc
not
out
aaa
movs
pushf
pop
icebp
ret
jo
inc
loope
frndint
inc
and
jmp
ficom
inc
cmp
inc
sbb
imul
jns
xchg
movs
add
fimul
jg
or
les
mov
not
daa
and
mov
mov
lahf
div
inc
cmp
movs
and
sti
pop
pop
imul
movs
cdq
or
dec
pop
outs
push
ins
lods
xchg
in
call
imul
push
xor
ss
or
mov
imul
xchg
mov
cmp
repnz
push
inc
pushf
into
aad
sbb
mov
add
mov
push
dec
inc
add
das
test
outs
(bad)
movs
call
sbb
inc
dec
retf
jmp
ins
data16
sub
push
ins
or
mov
dec
retf
push
push
jp
push
sbb
pop
pop
cmp
pop
adc
shl
mov
stos
and
xchg
popf
xor
(bad)
pop
in
lods
das
pop
cwde
fldenv
mov
cmp
loop
fnstsw
ret
retf
pop
cld
and
inc
adc
aad
cmp
lods
fidiv
xchg
jl
outs
inc
jecxz
pop
rcr
push
(bad)
loope
cdq
xor
mov
addr16
xchg
pop
cmp
adc
pop
bnd
add
inc
std
pop
pop
jmp
das
add
cs
jg
scas
jns
test
xchg
fadd
retf
(bad)
pusha
dec
jle
xchg
jle
iret
dec
or
mul
cmps
xchg
stc
pushf
mov
imul
pop
push
jno
adc
mov
pop
inc
push
and
inc
aam
shl
jge
adc
jnp
mov
jmp
jg
add
mov
int
mov
icebp
imul
(bad)
(bad)
or
ins
imul
repnz
add
pop
adc
into
sub
push
lock
xor
xor
xor
ds
sub
and
inc
stos
sbb
scas
and
jg
jo
dec
cmc
mov
push
sbb
and
cmp
call
scas
arpl
fistp
mov
les
sbb
divps
add
push
cmc
inc
cmps
sub
cwde
iret
clc
lock
sub
pop
repnz
imul
pop
in
xchg
les
retf
jp
test
dec
test
push
mov
push
or
xor
jmp
jl
or
ins
out
call
mov
fwait
mov
dec
shl
in
jo
dec
inc
aas
xchg
jmp
xchg
nop
push
imul
inc
xor
dec
js
or
test
(bad)
call
dec
inc
pop
sbb
mov
stc
sub
add
ins
jb
jecxz
jecxz
push
mov
sub
out
nop
cmp
addr16
movs
fbstp
jmp
mov
test
fwait
call
cmp
fstp
imul
fidiv
mov
adc
(bad)
xor
lds
loope
data16
in
(bad)
xor
and
test
nop
cs
add
leave
pop
ss
dec
mov
xchg
or
shl
dec
push
inc
fwait
xchg
adc
scas
xor
mov
lods
rol
mov
jle
fisub
test
rol
mov
sub
push
fistp
retf
aam
fidivr
jl
retf
xchg
push
add
jge
rcr
push
(bad)
jne
push
adc
popf
mov
or
or
add
push
pop
cmc
repz
pop
sbb
push
sbb
stos
and
ins
loop
xchg
and
fisttp
movs
cwde
int3
out
sub
sub
push
adc
and
mov
add
xchg
ret
aam
fstp
lods
popf
cmp
cmc
fsubr
lds
rol
sbb
xor
hlt
rcl
call
mov
push
leave
ins
mov
push
pusha
ret
mov
mov
cmps
add
arpl
ficomp
scas
enter
cs
jle
mov
mov
(bad)
adc
or
pushf
pushf
sbb
cmp
cmp
push
add
idiv
fisub
ins
add
cmp
sbb
mov
lahf
dec
mov
adc
ficom
cli
pop
xchg
xor
leave
xor
(bad)
loop
pop
idiv
mov
adc
cmp
xchg
jmp
add
mov
jp
in
popa
lea
call
dec
mov
je
dec
sub
mov
and
js
stos
adc
cmps
xchg
add
pop
lods
in
mov
call
xor
sbb
push
add
jge
les
pusha
dec
xchg
cmp
not
mov
sbb
and
pop
push
(bad)
push
mov
adc
fild
pop
mov
sbb
imul
repz
add
fst
std
adc
adc
xchg
add
(bad)
daa
stc
rcr
or
rol
add
cld
pop
in
or
fdiv
cwde
loop
xor
pop
out
dec
xchg
ins
pop
xchg
out
mov
aam
pusha
jb
idiv
adc
sti
(bad)
sub
xchg
or
hlt
ja
sbb
xchg
stc
out
adc
(bad)
add
je
and
sbb
ret
sub
sub
push
xchg
cs
or
out
sbb
xchg
xchg
mov
and
sbb
xchg
fmul
movaps
jecxz
mov
push
cwde
mov
pop
into
dec
mov
stos
dec
and
out
xlat
sub
(bad)
ret
jge
dec
sbb
pop
jbe
imul
fistp
pop
sbb
mov
or
fs
inc
imul
(bad)
dec
ret
inc
pop
jo
fisubr
inc
hlt
inc
aas
sbb
mov
or
cmc
mov
test
sar
mov
shl
pusha
nop
cwde
fcmovnbe
stos
and
jle
sbb
dec
icebp
mov
and
sar
jnp
in
int
mov
sbb
push
xor
cmp
add
pusha
std
dec
das
pop
aam
jge
(bad)
icebp
mov
(bad)
test
loopne
nop
mov
xchg
les
cwde
cmps
data16
mov
imul
fnsave
int3
lahf
mov
pop
mov
cmp
mov
sub
inc
push
sub
cli
or
push
imul
ja
and
lea
div
jnp
mov
inc
pop
repz
mov
sti
inc
or
dec
sahf
loop
cmps
pop
pop
scas
(bad)
out
xor
xor
neg
or
pop
repz
jl
popa
scas
add
sub
xor
popf
sar
movs
adc
out
adc
mov
out
add
jnp
jbe
fs
or
inc
lea
cmc
(bad)
sub
cs
pop
ins
xchg
(bad)
mov
arpl
pop
aas
jb
test
xchg
dec
aad
ins
inc
jmp
lods
pop
or
xor
(bad)
ficomp
jae
dec
cmp
add
xchg
xlat
jmp
or
adc
mov
clc
mov
ret
pop
push
dec
push
xchg
add
xchg
mov
loop
inc
les
lahf
stos
sar
scas
cmp
mov
sti
or
dec
ins
xchg
fisub
dec
pop
lahf
push
xor
push
into
ud1
or
movs
lods
call
cmp
and
enter
or
and
dec
jp
dec
imul
lock
push
push
mov
mov
cmp
dec
dec
lds
jne
mov
ret
and
icebp
inc
jns
movs
sti
add
fdiv
mov
dec
daa
add
sub
mov
ins
fs
adc
stos
push
es
jb
cdq
jb
dec
shl
jb
sub
scas
mov
sub
jns
mov
loop
hlt
sub
repz
ret
je
push
into
cmc
shr
fisttp
(bad)
mov
xchg
xchg
xchg
leave
adc
not
nop
lds
jp
not
sar
lahf
cld
sti
sub
retf
sbb
jns
xchg
das
cmp
shr
aam
inc
call
test
jge
sar
xchg
sahf
(bad)
cmps
jg
lds
sbb
push
fst
cmp
push
jbe
les
(bad)
dec
iret
lods
jl
xchg
test
sbb
call
fisttp
xor
gs
jne
push
fidivr
push
out
retf
pop
sub
dec
fcom
lahf
xchg
movs
fwait
in
push
ins
shl
push
adc
std
add
out
mov
int
(bad)
fcmove
sbb
or
pushf
test
jbe
and
mov
cmps
pop
movs
(bad)
stos
into
and
xor
push
shl
int
sbb
xor
mov
clc
mov
push
xor
jmp
out
mov
fwait
jb
mov
cmps
dec
mov
cmp
clc
icebp
mov
cld
cmps
cdq
jo
mov
(bad)
aam
jbe
leave
daa
aam
jle
(bad)
inc
pop
movs
jne
pop
dec
stos
mov
push
out
outs
iret
and
les
out
out
stos
adc
in
xlat
retf
mov
jmp
and
imul
mov
aad
sub
push
xchg
pushf
push
pop
loop
test
xor
xlat
cwde
and
retf
mov
sub
inc
inc
aaa
(bad)
jno
cwde
pop
or
mov
leave
mov
xor
call
loope
js
test
sub
mov
jno
stos
jecxz
adc
stos
mov
add
xchg
dec
scas
pusha
cmps
adc
push
es
xor
or
push
mov
sub
(bad)
les
cmp
mov
rcl
adc
mov
ror
sbb
movs
pop
rcr
mov
shl
ret
cmps
jge
pushf
pop
jnp
mov
jb
leave
or
sti
lock
push
inc
lock
jmp
and
shl
daa
inc
pop
int3
(bad)
jbe
cdq
jns
cmp
adc
(bad)
cli
imul
neg
test
test
jl
pop
add
push
mov
mov
dec
push
add
aas
aaa
inc
(bad)
jb
ds
out
mov
shl
jge
pop
in
push
pushf
pop
fild
fnstenv
jmp
xchg
push
or
push
retf
add
push
std
test
dec
out
(bad)
(bad)
inc
mov
mov
je
(bad)
mov
out
lahf
call
ret
mov
int
shl
movs
adc
mov
cmp
and
jle
js
xchg
jmp
(bad)
add
jle
and
mov
add
fwait
or
jb
push
(bad)
shl
retfw
mov
xor
jb
cli
xchg
xchg
jae
pushf
mov
mov
inc
push
cmps
mov
pop
jmp
mov
aaa
pop
std
cmp
fild
xchg
fstp
xchg
adc
mov
ins
jns
pop
jno
in
int
sub
jae
dec
ror
cmc
adc
push
repz
xchg
add
inc
adc
inc
pop
cdq
inc
jp
and
jno
xchg
inc
adc
in
scas
ret
sub
movs
jns
fidivr
mov
loop
cmps
jae
addr16
mov
jo
fwait
movs
ins
push
or
push
add
sbb
aas
shl
leave
mov
inc
out
cwde
sbb
inc
xchg
scas
cmp
or
push
cmp
xor
test
lahf
(bad)
rcr
lods
push
dec
mov
fs
jmp
or
cmps
dec
retf
xor
int3
clc
movs
sar
jmp
(bad)
jo
rol
lahf
enter
imul
lods
dec
lea
mov
inc
hlt
stc
sbb
lods
jg
(bad)
lods
jno
pop
xchg
lds
push
das
outs
mov
jae
cld
movs
sub
adc
and
add
test
pushf
mov
and
sbb
(bad)
mov
scas
pusha
inc
icebp
into
mov
fucompp
movs
mov
es
(bad)
(bad)
adc
adc
cmc
add
dec
cdq
mov
adc
rcr
mov
mov
leave
mov
(bad)
pop
fisttp
pushf
or
pop
mov
or
xchg
idiv
cmp
adc
or
repnz
cmp
int
sub
pushf
aam
xor
shl
jo
ins
retf
mov
inc
cmp
jecxz
lods
xor
pop
ins
test
sar
into
inc
rcr
jae
pusha
les
and
sub
jbe
mov
lods
mov
rcl
ror
cmp
and
(bad)
cmp
imul
sbb
cdq
leave
arpl
or
(bad)
add
dec
jae
dec
lock
xchg
cmc
jns
sbb
fcmovbe
add
cdq
dec
push
adc
inc
out
retf
or
imul
es
adc
pop
push
or
mov
mov
or
ja
test
push
pusha
xchg
(bad)
xlat
sti
in
fldcw
xchg
mov
push
jb
in
jp
fcmovbe
loope
popf
jns
(bad)
pushf
mov
sub
mov
retf
push
sbb
sub
cmps
push
ds
rol
cmps
clc
push
out
xchg
jnp
cmps
pop
sub
rcl
and
pop
int
ror
cld
cdq
pop
sbb
sub
push
inc
inc
inc
xor
daa
ja
rol
push
inc
fwait
push
dec
icebp
mov
stos
data16
movs
data16
adc
or
out
push
enter
retf
daa
mov
inc
(bad)
mov
cwde
cmps
rcl
mov
or
adc
sti
and
add
nop
or
sub
dec
test
jns
ins
mov
jle
in
cmp
je
cmp
cdq
push
jge
cdq
ins
rdmsr
lahf
stos
dec
mov
test
test
sub
retf
movs
push
adc
cmps
mov
sub
inc
xchg
push
push
push
sar
mov
inc
mov
leave
cmp
ins
jmp
push
loopne
out
mov
sbb
adc
repz
inc
push
mov
fnstenv
repnz
in
mov
pop
repz
inc
sbb
jg
test
test
ror
outs
jp
out
xor
stc
ret
xchg
adc
pop
pop
in
loop
in
lds
lock
and
pop
add
xchg
and
adc
or
xchg
jmp
aaa
jno
ret
inc
mov
mov
lea
sub
mov
adc
rcr
xchg
fisubr
cmp
push
inc
dec
dec
sti
dec
jl
fsubr
and
xor
in
add
fs
cmp
mov
icebp
jo
repnz
in
jmp
xlat
addr16
test
imul
jbe
mov
xchg
fiadd
and
push
and
adc
fwait
or
fs
fnstenv
fst
xor
movs
mov
cmp
sbb
sub
mov
popf
lods
fst
les
pop
mov
out
(bad)
sti
jge
mov
in
mov
pop
outs
imul
xor
dec
popa
sub
add
cmp
aaa
jmp
add
add
in
and
sbb
ret
xor
cmc
adc
rcl
(bad)
adc
jae
fwait
sti
push
or
arpl
mov
out
inc
hlt
add
movs
das
aad
adc
pop
pop
xor
mov
push
test
mov
jns
mov
mov
pop
adc
sbb
mov
clc
or
push
test
movs
test
jecxz
(bad)
call
pushf
pop
xor
daa
jl
xor
mov
push
fwait
xor
lea
jbe
cwde
(bad)
test
dec
cmc
add
xor
imul
rcr
(bad)
sar
aaa
mov
mov
sbb
xchg
(bad)
(bad)
xchg
cld
mov
out
loope
jp
(bad)
xchg
push
pop
sbb
sbb
inc
dec
jmp
call
cmps
sbb
aad
sbb
nop
jmp
mov
test
in
dec
xchg
xor
les
imul
mov
jecxz
out
push
push
aaa
cld
mov
js
and
mov
xchg
xor
repz
push
jecxz
retf
aas
sbb
sub
je
dec
fst
inc
and
xchg
retf
jecxz
push
sbb
dec
add
in
pop
fwait
sbb
adc
cmp
ds
or
out
mov
(bad)
addr16
test
nop
jns
mov
shr
clc
into
mov
call
pop
xor
loop
pop
and
add
xlat
out
sahf
or
test
out
imul
daa
lock
inc
inc
sbb
push
(bad)
into
lds
xor
pop
ds
jns
imul
mov
inc
mov
hlt
mov
test
xchg
sbb
dec
mov
test
mov
xor
in
add
cmp
movs
scas
test
and
xor
mov
ret
jp
mov
mov
and
jmp
enter
add
sar
out
xchg
in
xor
pop
jg
outs
push
sub
mov
xchg
lahf
mov
inc
add
lahf
dec
jo
fild
mov
cli
lods
out
stos
mov
mov
cmps
add
jns
and
jg
push
ret
test
rcl
dec
int
pop
fsub
adc
cmps
cmc
sub
xchg
mov
or
jno
xchg
loope
push
pop
je
lock
mov
js
cmp
pusha
xchg
adc
xchg
ficom
mov
rol
sti
bound
iret
int3
xor
cmp
pop
push
dec
leave
gs
cmp
push
sbb
aam
out
cmp
out
mov
(bad)
xor
das
inc
pop
adc
mov
cli
loopne
add
aad
arpl
mov
add
mov
shr
stc
into
fisttp
int3
mov
aad
stc
dec
jno
xchg
mov
cld
mov
lock
and
push
clc
cmp
cli
test
lahf
fsubrp
je
shl
call
sahf
xor
stos
dec
into
adc
mov
mov
aam
inc
in
aaa
sbb
cmp
(bad)
push
xchg
jge
imul
push
sub
cmp
cmp
out
xor
cmp
pop
or
data16
dec
icebp
mov
icebp
xchg
neg
cmp
xor
adc
movs
and
ins
xor
je
sti
add
mov
ja
ins
das
popf
jmp
mov
rcl
cmp
fld
pop
hlt
lahf
jno
stos
jg
xchg
jmp
or
push
mov
dec
shl
addr16
add
pushf
adc
xor
xlat
stos
push
jbe
sbb
sti
pushf
mov
mov
xchg
dec
add
adc
stos
cli
adc
ds
cmp
jb
dec
push
ret
push
and
es
mov
pop
stc
xchg
push
inc
cwde
in
xchg
add
push
daa
cli
mov
movs
xor
int
movs
jp
loop
rcr
adc
icebp
inc
cmp
pop
fild
ror
cmps
dec
rol
pushf
mov
push
mov
js
mov
pop
out
repz
fild
xchg
icebp
gs
push
jl
cmps
dec
push
repz
mov
lods
fadd
loop
js
mov
scas
cmps
movs
xor
std
mov
mov
popa
dec
sub
imul
pop
adc
cld
push
clc
ret
xor
mov
mov
and
sub
stos
push
addr16
les
das
daa
arpl
xlat
mov
call
das
rcl
sub
dec
cmp
mov
inc
inc
mov
out
fucom
pop
jbe
jb
xor
loopne
test
js
mov
mov
lds
ret
inc
mov
add
je
push
jg
mov
mov
add
or
sub
add
add
sub
inc
adc
rol
mov
stos
xchg
or
mov
mov
add
add
jo
dec
(bad)
stos
sbb
rol
sbb
and
xchg
in
and
add
push
loopne
or
sbb
pop
add
mov
pop
popf
pop
call
or
in
je
pop
add
loopne
rcl
cmp
call
jp
rcl
xor
add
and
inc
dec
pop
js
xor
(bad)
test
loop
iret
enter
dec
sbb
repz
xor
sbb
stos
pop
xchg
xchg
das
xchg
cmc
into
sbb
mov
pop
mov
sbb
mov
hlt
sub
mov
icebp
call
sbb
ret
jle
cmps
push
jbe
jnp
mov
inc
iret
xor
sub
inc
xchg
inc
mov
movs
lahf
pusha
loope
mov
push
inc
jno
adc
pusha
sbb
imul
push
or
lea
loop
add
mov
leave
push
les
mov
bound
cmp
cmp
in
pop
or
cmp
or
pushf
dec
pop
add
mov
fiadd
cs
out
xchg
sbb
xchg
shr
mov
call
adc
aas
jb
cmp
cwde
pop
pop
adc
xor
addr16
sbb
fwait
not
jmp
dec
mov
(bad)
push
in
xchg
sub
fsub
mov
or
outs
mov
add
fld
adc
pop
out
in
mov
add
cmp
and
jnp
xchg
test
pop
inc
xchg
mov
ins
add
sub
jo
rcl
dec
cs
mov
dec
enter
dec
dec
and
mov
or
idiv
pop
ror
mov
pop
js
retf
aaa
loope
frstor
or
xor
ds
jbe
cmps
xor
jl
call
inc
pushf
mov
push
sub
(bad)
outs
dec
(bad)
fucomi
scas
adc
out
cdq
jmp
jecxz
iret
stos
in
repnz
js
fwait
or
sub
sub
bound
fs
jbe
out
jg
outs
dec
popf
ins
push
or
and
fstp
mov
mov
pop
scas
xchg
(bad)
aad
outs
jae
pop
xor
retf
inc
outs
mov
je
movs
xchg
dec
sub
cmp
mov
jnp
repz
jl
shl
push
push
sub
pop
sub
lock
mov
sbb
in
into
push
jns
push
push
lahf
mov
fdiv
sbb
and
pop
or
leave
xchg
add
test
retf
mov
mov
shl
inc
jns
sbb
push
push
ds
pop
scas
loopne
push
jo
mov
cwde
unpcklps
jle
push
fisttp
mov
mov
in
in
retf
rcl
enter
fldcw
enter
outs
sbb
sbb
repz
call
cmps
sahf
fdiv
(bad)
imul
sbb
jecxz
sbb
push
pop
sub
push
aas
jle
mov
in
(bad)
xor
add
mov
xchg
(bad)
mov
pop
mov
mov
jae
je
mov
sbb
sub
fwait
pushf
pop
sbb
imul
push
dec
ja
xchg
or
pop
outs
fxch
jmp
in
fisttp
fcomp
test
sbb
repnz
push
call
outs
rcr
mov
les
in
retf
push
(bad)
jnp
imul
pop
int
pop
stc
fstp
jmp
jecxz
pop
mov
pusha
(bad)
rcr
fucomip
aad
ins
push
enter
xor
pop
adc
neg
sar
rcl
in
jo
sbb
fucomp
xchg
out
jge
xchg
(bad)
out
bnd
jp
pop
xchg
mov
xor
iret
call
rcl
rcr
and
es
dec
mov
dec
cmp
inc
sar
fwait
mov
jns
mov
retf
out
int3
clc
xchg
jbe
adc
out
push
jnp
(bad)
jns
mov
ja
stos
mov
iret
outs
inc
je
sbb
(bad)
sub
mov
shl
mov
push
cmp
sbb
loopne
stos
popa
(bad)
dec
and
xor
pop
mov
test
sti
cmp
adc
push
fnsave
adc
fimul
and
js
inc
ja
inc
mov
sub
out
inc
add
push
sahf
adc
add
mov
cmp
jne
dec
xchg
in
in
outs
gs
inc
mov
jp
cmp
sub
sub
xor
daa
test
xchg
jle
cmp
or
dec
test
jmp
pop
inc
and
mov
jge
hlt
pop
push
xchg
inc
stos
stos
(bad)
call
mov
pop
das
leave
arpl
in
retf
es
sti
(bad)
or
pop
imul
popa
lods
or
test
inc
js
lds
xor
sbb
out
pushf
ss
je
pop
icebp
popa
int3
mov
ins
(bad)
xchg
add
(bad)
out
and
fcomp
(bad)
stos
xchg
xor
outs
jmp
loopne
mov
divps
aam
loopne
mov
scas
lods
mov
sub
cmps
xor
dec
gs
sti
xchg
pop
adc
sar
or
jbe
add
xor
test
or
popa
inc
ins
(bad)
lods
std
pop
std
cmps
pop
cld
in
sahf
ja
sahf
inc
out
call
mov
shl
es
cmp
sub
sti
outs
inc
movs
in
sbb
dec
ja
(bad)
mov
shl
ror
and
cs
jno
(bad)
js
mov
sub
rcl
or
arpl
mov
out
jae
push
mov
or
ror
push
jno
dec
mov
pop
popa
mov
mov
mov
ja
ins
mov
es
std
outs
xor
jl
sub
mov
inc
es
or
scas
jns
div
scas
xchg
inc
fs
out
das
fsub
xadd
jmp
push
aam
mov
dec
cmp
(bad)
xor
imul
push
mov
xchg
rcl
(bad)
scas
je
fadd
jno
sahf
hlt
cwde
sbb
into
mov
test
mov
inc
(bad)
jae
(bad)
and
lods
ss
stos
sysexit
sub
pop
add
out
xchg
add
popf
pop
rcr
jmp
aas
adc
adc
das
fsub
cmc
inc
jecxz
jl
sub
sbb
sti
daa
mov
and
mov
pop
dec
mov
bound
sbb
aaa
push
or
sti
wrmsr
sti
cmps
xchg
mov
aas
icebp
aaa
adc
sbb
stc
sub
outs
lea
aas
sub
or
xchg
retf
push
xchg
jecxz
adc
(bad)
xor
xchg
shl
arpl
enter
mov
push
lea
dec
movs
call
mov
ja
xchg
jp
(bad)
int
hlt
lds
stc
sub
into
fdiv
xor
push
sbb
mov
pop
fld
js
les
into
movs
dec
xor
(bad)
(bad)
neg
fsubr
add
ds
jno
mov
fdivp
test
jns
jge
daa
fwait
gs
xchg
inc
inc
mov
inc
clc
imul
(bad)
hlt
push
xor
push
adc
or
loopne
pop
mov
cs
cwde
ins
(bad)
cmc
shr
pushf
sahf
nop
fucomp
push
push
adc
lds
add
or
cwde
xchg
ja
movs
rcl
pop
ret
(bad)
sbb
bound
mov
pushf
sub
or
sbb
in
push
in
lds
test
adc
fwait
dec
pusha
pop
es
mov
sbb
lods
lahf
jmp
xor
aad
and
pop
std
in
mov
mov
loop
aaa
nop
icebp
mov
lahf
addr16
pushf
push
jno
lods
daa
sbb
sub
push
mov
test
adc
in
jp
adc
and
dec
xor
call
cmps
mov
sbb
out
sbb
outs
sbb
dec
add
scas
cwde
jp
xor
scas
jae
aad
popf
lahf
test
cmps
sub
sub
scas
fisubr
dec
adc
jne
rol
jns
(bad)
adc
adc
mov
pop
imul
lods
(bad)
push
cmps
fsubrp
arpl
mov
xor
push
popa
xchg
out
out
loope
idiv
cs
dec
(bad)
mov
or
lods
or
xchg
push
mov
mov
push
pop
shl
int3
or
outs
push
mov
sahf
jae
js
cmps
mov
cmp
jl
cmc
or
inc
add
adc
and
or
sub
mov
and
ss
fist
ds
shl
xor
jns
xor
loop
dec
sbb
or
pop
xor
xchg
or
fld
cmp
in
rcr
test
int
xor
outs
in
pop
adc
test
pusha
mov
sbb
shl
(bad)
in
fisubr
mov
mov
jl
sbb
ins
inc
xor
and
pop
not
push
sbb
aaa
push
sub
pop
xchg
mov
daa
push
or
mov
cmp
cmp
cld
inc
(bad)
sub
and
or
dec
or
rcr
and
sbb
(bad)
lock
adc
pushf
loopne
fnstsw
shr
push
rcl
adc
jecxz
dec
retf
push
ss
test
or
or
push
addr16
mov
scas
mov
mov
mov
inc
int
ret
sub
mov
sbb
push
sar
xor
rcl
(bad)
loopne
cmp
loope
enter
mov
cmp
jbe
xor
mov
loope
xor
inc
inc
adc
adc
adc
and
xchg
dec
dec
dec
cli
cmp
cmc
mov
mov
ins
push
and
inc
xchg
ret
inc
rol
outs
mov
daa
push
fsubr
sar
pushf
or
in
cli
inc
pop
mov
movs
and
inc
stos
jl
sbb
sub
lods
mov
outs
dec
add
inc
xor
scas
(bad)
jmp
xor
stos
hlt
rol
inc
xchg
jne
aad
cmp
mov
or
popa
fs
int
dec
das
sub
les
jecxz
iret
sbb
fdiv
jle
repnz
xchg
push
jmp
dec
mov
sub
mov
out
div
mov
and
mov
adc
sahf
jbe
lea
xor
cmp
test
movs
mov
jbe
sbb
aas
sbb
sbb
dec
adc
and
adc
movs
dec
jmp
push
push
aaa
(bad)
or
in
add
pop
stos
stos
xor
scas
inc
and
mov
push
aaa
or
idiv
xor
jmp
popa
inc
adc
inc
fsubr
daa
jne
sbb
push
mov
loopne
test
sbb
dec
mov
movs
(bad)
stos
cmps
push
clc
(bad)
clc
stos
imul
cld
mov
(bad)
lock
lahf
pop
jb
scas
mov
out
out
mov
pop
mov
or
pop
xchg
xchg
imul
pushf
push
mov
pop
sti
sub
jmp
sbb
jnp
mov
hlt
jmp
test
adc
mul
mov
hlt
repz
fwait
out
xchg
mov
mov
scas
sub
hlt
jp
pop
je
stos
mov
mov
jecxz
mov
adc
sub
leave
xchg
inc
mov
push
dec
and
pop
pop
fimul
adc
xor
fs
sbb
stc
dec
mov
(bad)
clc
jecxz
and
cmp
xchg
add
mov
ret
popf
nop
aam
push
and
cmc
mov
add
sbb
mov
fld
or
je
vunpckhps
imul
adc
dec
es
cld
pop
xor
xor
cwde
fld
dec
and
jb
fs
inc
xchg
dec
scas
je
mov
loop
or
pop
push
pusha
int3
ins
pop
enter
data16
add
inc
inc
mov
jge
xor
jnp
push
cmp
and
fidiv
aaa
daa
mov
(bad)
dec
inc
inc
xchg
out
mov
ss
lock
dec
cdq
cwde
daa
fsubrp
scas
pop
stos
xchg
adc
iret
(bad)
fmul
les
int3
aam
xchg
popf
dec
enter
in
mov
movs
and
repnz
pop
push
pushf
sbb
leave
fcmovnb
jns
idiv
xlat
pushf
inc
call
pop
test
pop
jbe
fisub
dec
std
mov
and
test
inc
xchg
(bad)
shl
and
and
int
int
ss
mov
sub
mov
dec
pop
aad
push
xchg
pop
jl
xchg
cmps
sbb
cdq
(bad)
retf
mov
mov
dec
int
test
pop
ror
fidiv
pop
dec
or
repz
push
sbb
dec
ja
pop
movs
test
pop
test
jecxz
adc
jecxz
(bad)
xchg
xchg
sub
pop
das
and
dec
lock
mov
dec
sbb
scas
icebp
fisubr
movs
lahf
hlt
mov
mov
je
inc
dec
les
les
fadd
sub
sar
movs
outs
scas
outs
(bad)
mov
dec
js
mov
iret
pop
scas
dec
jle
sbb
popf
(bad)
mov
nop
popf
fld
in
inc
dec
adc
loope
nop
js
cs
adc
mov
adc
dec
addr16
rcr
scas
int3
into
and
arpl
push
ret
ret
bound
jp
and
(bad)
cld
daa
mov
and
add
fldenv
sbb
aad
mov
cdq
dec
outs
ret
mov
cmp
fnsave
ret
scas
dec
pop
mov
push
pusha
mov
je
add
out
push
push
test
mov
mov
popa
sub
ret
mov
sub
fld
scas
xor
xchg
popf
fst
shl
arpl
stos
das
into
nop
lods
call
adc
nop
jnp
jns
jbe
push
mov
and
mov
js
lds
jl
outs
(bad)
(bad)
rcl
jge
mov
xchg
push
inc
mov
adc
inc
xchg
add
add
clc
jmp
add
scas
retf
retf
mov
inc
cmc
popf
fsubr
fwait
add
add
fsub
xchg
std
push
stc
leavew
push
mov
ret
mov
mov
dec
adc
push
fucomp
add
sbb
dec
cmp
jo
jge
neg
dec
push
nop
mov
movs
inc
and
and
into
test
ja
fstp
xchg
stos
jp
xchg
add
ret
dec
jae
mov
jno
int3
ins
mov
cwde
xor
and
lods
fld
mov
mov
out
ins
mov
and
ins
cwde
xor
xor
adc
push
shr
in
jne
addr16
adc
jecxz
pop
mov
ret
fcmovb
out
xlat
bound
inc
mov
jp
adc
mov
inc
and
aaa
xchg
or
sub
push
cli
pushf
ret
aad
add
les
aad
sahf
icebp
push
into
and
loope
in
and
popf
jle
in
(bad)
cmc
pop
pop
inc
push
in
pop
ficom
out
repz
mov
sub
pop
inc
xlat
mov
in
jp
adc
std
leave
pop
pop
fbld
jne
aad
stc
(bad)
push
push
cmp
cwde
push
sbb
xchg
pop
adc
mov
or
stc
mov
ds
cdq
mov
sub
mov
push
(bad)
push
add
pop
cmc
mov
std
push
push
cmp
and
sub
ror
jno
in
fs
out
ret
jl
fs
fdiv
ret
sti
mov
sti
or
cdq
stc
test
dec
jge
jmp
sar
stos
stos
out
mov
jge
add
push
arpl
mov
arpl
aad
mov
call
adc
fs
dec
cmp
mov
rol
xchg
cs
push
xchg
jg
lock
scas
or
in
aaa
mov
sbb
dec
adc
mov
nop
int3
mov
mov
inc
repnz
mov
ins
mov
add
std
cld
adc
out
xor
xchg
xchg
scas
iret
mov
lds
inc
movs
and
fdivr
cmp
push
sbb
xor
mov
or
in
pop
or
inc
push
pop
pop
xor
push
cmc
sti
icebp
xchg
push
push
push
or
push
popa
fisub
push
sub
dec
cmc
data16
add
sbb
xor
and
add
sbb
xchg
xor
sbb
xchg
in
jmp
dec
fadd
jb
mov
jo
loope
loopne
cmp
add
and
xor
shl
outs
adc
cwde
sbb
cmp
cmp
or
mov
adc
mov
sub
xchg
int3
push
stos
sbb
ret
jmp
push
cmp
cmp
clts
aad
js
sbb
cmp
pop
jp
popf
mov
dec
mov
cmp
adc
adc
imul
fisubr
lea
jge
mov
ins
cmp
fidiv
inc
lods
xacquire
dec
(bad)
push
inc
push
call
es
inc
cmp
fisttp
dec
hlt
xchg
dec
push
les
leave
xor
int
push
mov
shl
mov
pop
xchg
dec
dec
scas
push
mov
test
dec
outs
mov
pop
dec
aad
inc
ds
inc
sbb
push
(bad)
(bad)
test
sbb
in
outs
sub
idiv
cmp
ficomp
ss
ins
mov
mov
add
add
and
cmp
pop
dec
mov
add
xchg
pop
icebp
popa
imul
push
outs
sub
add
sbb
cmp
rol
sbb
loop
and
inc
call
push
add
sub
add
mov
popa
cmp
loope
adc
shl
mov
cvtps2pd
adc
push
jne
(bad)
(bad)
pop
(bad)
std
inc
dec
ds
cmps
ins
and
test
cmp
mov
stos
add
mov
nop
jmp
add
dec
int
(bad)
adc
dec
je
cwde
fidiv
push
(bad)
adc
jge
sbb
mov
mov
leave
sbb
mov
cmp
or
xchg
inc
(bad)
mov
jns
(bad)
aam
adc
xlat
frstor
fisttp
mov
icebp
mov
fcom
cmps
aas
ret
sub
push
dec
shr
adc
sbb
lahf
mov
pop
mov
or
adc
inc
stc
dec
add
in
pop
inc
pop
or
cmp
mov
fld
jb
cmp
xor
arpl
mov
xchg
test
xchg
push
lahf
out
dec
lods
push
mov
cmp
jbe
imul
shr
and
jbe
es
shr
ret
push
cs
mov
(bad)
pop
loop
data16
fisttp
leave
daa
fnsave
push
stos
mov
leave
hlt
das
hlt
mov
test
popf
fwait
pop
inc
mov
scas
fcom
sub
jg
rcl
ins
push
jecxz
ficomp
ss
push
mov
or
xor
dec
mov
cli
jp
jnp
jle
sub
dec
sub
ret
jmp
add
int3
(bad)
bound
push
xor
arpl
nop
mov
stc
pop
mov
dec
xchg
in
ins
jo
mov
push
and
pusha
outs
es
inc
sbb
out
movs
mov
push
push
push
mov
inc
or
and
jmp
cmp
rol
cdq
jmp
dec
ret
and
sbb
outs
push
push
call
and
out
movs
aad
add
and
mov
fwait
xchg
xchg
sar
adc
push
iret
int
out
adc
popa
pavgb
cmp
sub
sub
psubsb
cmp
mov
inc
cmp
mov
lahf
adc
add
fldcw
add
int3
(bad)
jl
stos
bound
rcl
mov
cdq
nop
xchg
les
gs
pinsrw
xor
sub
or
sub
jecxz
dec
outs
and
sub
add
not
idiv
outs
outs
sub
sub
xchg
sub
rcr
jbe
sbb
dec
inc
lahf
xor
jle
mov
dec
ror
aas
push
push
repnz
xchg
xor
ret
scas
ins
mov
adc
(bad)
xor
adc
cmp
add
push
call
add
inc
pop
add
shr
adc
xchg
fs
pusha
xor
adc
add
sbb
push
dec
imul
xchg
rol
cmp
xor
mov
je
jb
enter
bound
pusha
mov
and
enter
shl
iret
inc
js
xor
push
test
mov
in
call
sub
cmp
adc
fcmovnb
pop
xor
scas
into
call
push
adc
fs
sbb
dec
movs
in
cmp
leave
push
cdq
in
fmul
data16
push
mov
int3
icebp
mov
dec
mov
push
jmp
mov
inc
jne
js
xchg
cld
or
call
in
lods
mov
cmp
fwait
cmp
and
adc
test
mov
imul
sub
stos
and
and
pop
push
arpl
add
or
ret
ret
movs
add
cmps
jno
rol
ror
loope
sbb
cmp
sbb
jo
or
pop
jo
jo
and
in
cmp
inc
enter
sub
and
cmp
sbb
dec
fmul
call
pop
mov
xchg
sbb
mov
(bad)
shl
inc
js
jo
clc
js
cmp
jp
call
jmp
adc
lock
jno
or
mov
call
cdq
call
sub
std
inc
jbe
push
in
movs
pop
retf
pop
clc
xlat
bound
loopne
imul
sete
retf
test
sti
cmps
lods
(bad)
fwait
jne
jne
xor
or
mov
pushf
mov
dec
daa
test
push
out
mov
push
sbb
movs
mov
xchg
mov
dec
(bad)
mov
mov
rcl
or
arpl
movs
lods
fwait
jne
xchg
cmp
cmc
mov
mov
pop
outs
jmp
mov
std
mov
jmp
(bad)
xor
mov
movs
cmp
dec
fidiv
lods
mov
movs
pop
xchg
dec
mov
fild
leave
mov
inc
push
nop
rcr
inc
jmp
imul
cs
lds
mov
adc
jo
push
mov
lds
in
add
ficom
clts
mov
jae
xchg
jae
ret
pop
and
dec
fistp
repnz
dec
loop
das
add
pop
call
sub
ss
mov
adc
aam
jge
xlat
and
mov
test
outs
inc
adc
sahf
mov
add
adc
mov
dec
test
push
adc
push
mov
movs
add
or
and
and
mov
sbb
or
mov
movs
sbb
xchg
or
mov
movs
add
into
adc
dec
dec
push
xchg
or
xchg
test
xlat
and
retf
xchg
jb
enter
outs
bt
je
movs
mov
aas
es
ret
mov
cmp
pop
mov
movs
rol
iret
or
les
dec
push
xchg
retf
sbb
call
adc
outs
push
dec
inc
mov
and
fist
scas
xchg
jmp
ds
ins
push
scas
aam
aas
mov
cmps
xchg
lods
dec
pop
or
je
add
or
clc
ja
jns
cld
mov
js
inc
ja
outs
mov
rcpps
or
adc
ins
sbb
clc
in
ins
mov
out
jge
jbe
fldcw
iret
mov
inc
inc
mov
shl
jecxz
outs
jle
adc
and
push
push
fld
dec
shr
cs
dec
repz
hlt
(bad)
xchg
mov
in
addr16
or
sahf
jg
xor
pusha
pop
cmp
(bad)
mov
mov
push
cmp
movaps
loopne
ss
(bad)
leave
mov
mov
stos
sub
pop
ret
pop
push
in
mov
arpl
out
(bad)
or
cmp
mov
lods
dec
ret
sub
sahf
xor
lock
cmc
mov
test
(bad)
or
xchg
clc
outs
in
sub
aam
in
lock
mov
lea
and
lock
loopne
adc
fist
movs
xor
dec
xchg
mov
adc
mov
mov
aad
xor
jp
aas
push
lods
mov
xlat
daa
xchg
mov
jmp
cld
popf
out
and
retf
repz
int
lahf
scas
adc
mov
in
add
sahf
mov
dec
sbb
rcl
jb
inc
enter
das
push
loopne
xchg
pop
push
jle
out
dec
cmc
push
jns
iret
mov
lahf
imul
loopne
movs
jmp
jg
add
stos
in
jmp
or
dec
cli
fwait
add
adc
cmp
aas
sar
cmp
fsubr
popa
inc
add
sti
dec
out
stos
and
xor
jge
mov
hlt
adc
or
xor
rcl
adc
jecxz
div
test
push
inc
aas
push
aam
mov
dec
pop
popf
or
sbb
aaa
mov
outs
push
fimul
and
push
mov
dec
add
sub
shl
mov
cmps
pop
and
icebp
aam
xchg
(bad)
xlat
pop
(bad)
das
(bad)
leave
sub
pop
shr
mov
cmps
sbb
or
imul
shl
shl
cdq
rcl
cmp
dec
push
or
out
sub
sub
out
mov
mov
test
adc
xchg
push
addr16
jle
mov
push
xor
arpl
(bad)
rcr
and
xor
popf
sbb
pop
inc
push
mov
lahf
xlat
sub
fidivr
ins
retf
xchg
cwde
jge
(bad)
stos
inc
lock
add
cmps
mov
pushf
push
jo
xor
cmc
add
add
mov
jmp
push
sub
retf
jecxz
enter
fimul
test
push
mov
xchg
cli
push
jno
cmc
nop
les
or
int3
push
ins
inc
cmp
jno
adc
mov
mov
js
std
and
out
cwde
shl
pop
(bad)
repz
(bad)
push
jp
mov
or
std
add
cmps
clc
mov
in
jecxz
cs
paddusb
jmp
ss
ret
lea
repz
daa
adc
cmps
test
push
pop
push
in
fld
int3
jae
jnp
movs
dec
mov
pop
dec
jmp
in
mov
sbb
call
call
inc
in
jl
stos
push
or
xchg
push
or
jnp
xor
bound
jge
jb
cdq
js
arpl
addr16
aam
loop
adc
popa
ins
mov
fdivr
test
sti
cmp
test
push
sbb
fadd
jns
out
ret
ds
jmp
cmp
(bad)
ins
push
sbb
add
pop
xor
pop
push
lds
xor
mov
cmp
pop
add
push
or
aas
iret
int
dec
int3
sub
pop
daa
cmp
je
movs
test
pushf
lds
sbb
call
pop
imul
cdq
mov
jbe
bound
in
or
jbe
jbe
adc
cwde
inc
jle
scas
clc
imul
pop
test
aam
add
xor
fcom
icebp
inc
outs
add
sbb
mov
inc
popa
and
js
loopne
pop
push
or
fmul
xchg
mov
sub
cmp
loope
jae
pop
jno
inc
cmp
push
and
and
ficom
enter
mov
arpl
mov
les
loopne
pusha
mov
xchg
sbb
dec
ret
adc
add
add
mov
adc
imul
loopne
sub
cmp
mov
sbb
pop
mov
mov
lahf
mov
xor
gs
xor
jae
scas
daa
(bad)
pop
cmp
mov
ret
jno
cmp
jns
sub
mov
adc
pop
adc
push
aas
shl
inc
xor
enter
lds
jmp
not
mov
push
mov
mov
bound
xchg
jl
(bad)
or
xchg
xchg
leave
sahf
fidiv
dec
push
jns
and
push
scas
push
inc
cli
hlt
dec
test
push
pop
aad
push
xor
ficomp
pop
lds
mov
loop
push
or
jo
push
rol
nop
cwde
mov
add
(bad)
arpl
je
fsub
jg
sbb
jmp
pop
jb
jns
mov
cmp
shr
ret
mov
enter
add
push
adc
dec
add
fidiv
pop
pop
add
inc
into
inc
push
cli
push
adc
push
sar
sub
push
xor
out
fcom
jp
cmp
jp
cmp
lock
jl
arpl
loop
push
retf
xchg
jo
add
fcomp
aas
push
mov
test
loop
out
and
jmp
jecxz
into
xchg
mov
loopne
jb
and
inc
into
add
pop
pop
popa
sbb
mov
mov
push
ds
adc
jp
xlat
jge
cmp
pop
sub
lea
loop
mov
mov
movs
sub
push
mov
aam
push
stos
(bad)
out
adc
push
popf
rcl
lods
jbe
js
xchg
lods
aas
sub
shl
ins
imul
ins
(bad)
ds
or
mov
adc
shl
scas
xor
jbe
popf
fdiv
push
(bad)
movs
xor
out
cmc
lock
push
enter
(bad)
test
push
sar
rcr
pushf
mov
sbb
hlt
push
repz
mov
popf
stos
mov
dec
sub
adc
(bad)
mov
xchg
and
push
mov
push
cmc
mov
jge
sar
loopne
lahf
mov
sub
xor
push
ror
sub
dec
bound
iret
leave
mov
jb
pop
sub
ins
ret
sti
xor
repnz
cli
push
iret
iret
dec
ins
movs
fnstenv
push
(bad)
sbb
sub
test
stos
jo
push
lock
imul
movs
dec
mov
(bad)
into
aas
enter
icebp
ja
loop
mov
les
out
pushf
repz
xor
dec
mov
push
ins
loopne
in
mov
pop
data16
std
scas
mov
enter
mov
pop
cmp
js
lds
stos
cmps
inc
xchg
cs
mov
mov
jp
std
or
push
popa
call
test
fsub
inc
pop
test
outs
jne
or
ins
imul
sub
iret
push
popa
mov
pop
xor
and
push
fild
jmp
push
and
jno
jbe
dec
sahf
sar
stos
sahf
xchg
mov
jno
sub
in
add
jo
ins
pop
mov
xlat
add
inc
fwait
mov
mov
or
into
aaa
cmp
cmps
sti
cmp
inc
call
adc
mov
jl
mov
je
pop
sbb
fld
clc
mov
mov
jnp
cmp
cmp
cli
jl
cwde
sub
stos
icebp
pop
adc
ss
pop
cli
test
retf
std
pop
sub
mov
jecxz
out
fiadd
pushf
mov
aad
or
xchg
mov
inc
mov
(bad)
ja
mov
mov
pop
das
clc
sub
pop
jp
inc
xor
push
sbb
jmp
mov
scas
or
test
and
(bad)
(bad)
imul
mov
cmp
ss
xchg
lds
fmul
retf
jmp
xor
aad
lea
push
cmps
inc
ss
cdq
and
add
shl
cs
movs
mov
cs
js
ja
pop
mov
lds
retf
(bad)
pop
mov
xor
jecxz
xor
jno
loop
push
pop
fmul
cmp
sub
jo
sbb
fwait
aad
xchg
add
xor
ja
push
es
popf
mov
loop
and
ds
je
and
arpl
adc
cld
and
imul
call
jl
(bad)
ss
mov
mov
test
push
not
inc
into
inc
stc
lds
scas
xor
adc
shr
pop
pop
and
(bad)
imul
scas
mov
xor
pop
adc
xor
mov
mov
dec
jno
push
int
outs
xor
dec
xchg
and
in
jg
and
mov
cmp
mov
adc
in
push
fld
mov
nop
sub
ja
sbb
pop
icebp
sub
cmc
jmp
add
sub
xchg
retf
enter
sub
in
jbe
outs
movs
stos
in
inc
out
pop
adc
pop
mov
inc
sub
gs
add
jp
mov
lahf
jmp
fucomp
jne
pop
stos
inc
sub
imul
(bad)
and
(bad)
mov
push
(bad)
mov
aam
xchg
ins
loopne
(bad)
shl
sahf
mov
inc
inc
retf
push
retf
lea
mov
add
aad
call
fcmovne
jbe
ds
dec
popa
in
cmp
cmp
ja
xchg
in
xchg
fwait
repnz
fidivr
dec
stos
push
mov
jne
dec
sbb
in
adc
inc
das
mov
mov
cld
loopne
mov
adc
scas
mov
(bad)
int3
push
mov
dec
mov
fimul
sbb
je
pop
test
repnz
xchg
rcl
mov
imul
pop
jl
push
sbb
(bad)
das
popa
loopne
mov
or
clc
sub
dec
test
dec
enter
mov
stos
xchg
movs
pop
inc
ss
loop
mov
jecxz
mov
jl
outs
cmp
xchg
enter
ret
push
ror
sar
scas
lea
inc
push
je
pop
out
jg
mov
je
jbe
cmp
test
or
pop
push
sbb
jns
xor
cmp
ficom
and
sahf
jmp
pop
cmc
cmp
mov
daa
loop
out
test
iret
add
je
clc
shl
add
inc
xor
test
pop
jnp
dec
or
in
out
in
aad
gs
sahf
sub
cmp
cmps
jmp
jne
(bad)
into
fs
or
stc
cdq
movs
stc
mov
sahf
std
adc
push
xor
sub
pusha
push
aad
cdq
hlt
fcmovbe
pop
xor
mov
inc
push
pop
fisub
aaa
xor
imul
adc
lahf
fiadd
ins
jmp
aam
cli
fucom
xchg
movs
and
bound
enter
jo
aas
xor
jno
fistp
mov
mov
stos
cmp
cmp
fnstcw
scas
fistp
sub
jmp
das
and
mov
sbb
ret
arpl
cli
xchg
pop
mov
popf
pop
xlat
xchg
dec
jae
out
xchg
pushf
mov
adc
fstp
sub
mov
add
dec
pop
in
enter
sub
pop
dec
in
ins
lods
getsec
loop
pop
mov
jno
das
(bad)
pop
lahf
jg
xor
cmps
cdq
shl
jg
mov
mov
imul
cmp
dec
add
adc
add
push
mov
jno
jnp
xchg
mov
xlat
pop
mov
pop
(bad)
mov
xor
lods
lahf
and
lods
push
push
mov
xchg
mov
outs
dec
xor
push
stos
jecxz
jg
sar
mov
and
stos
dec
(bad)
repz
fsub
ret
mov
stc
mov
sar
sbb
scas
pusha
ins
stc
int3
inc
aad
push
test
pop
fs
push
stos
inc
iret
ja
lods
xchg
sub
pop
cli
fbld
loopne
xor
xchg
pop
ja
push
push
mov
ins
dec
cmp
pushf
jne
mov
push
mov
push
rcl
mov
jnp
and
lods
add
inc
mov
in
pop
cmps
push
ret
mov
xor
lock
stos
loopne
mov
or
das
jmp
pop
mov
test
cmc
mul
arpl
jecxz
adc
sub
pop
dec
sub
in
clc
lahf
mov
in
call
pop
(bad)
into
adc
ds
hlt
sub
popa
jo
mov
mov
xor
popa
inc
add
xlat
dec
arpl
(bad)
jb
rcr
aad
(bad)
daa
nop
test
jle
ins
jg
sub
jbe
mov
lods
into
das
dec
fdiv
and
ss
dec
sbb
(bad)
push
or
aad
sbb
xchg
addr16
call
inc
ffree
jne
lock
or
sahf
retf
test
sti
mov
mov
es
or
xchg
mov
stos
mov
scas
pop
fstp
xor
dec
dec
push
loop
ret
pusha
cmp
fsub
mov
dec
ret
pop
jp
call
aad
inc
push
call
(bad)
or
mov
xchg
and
dec
test
cli
ins
mov
sbb
ret
mov
stc
loopne
ror
addr16
repnz
xlat
mov
and
mov
jo
test
or
cdq
jns
mov
outs
hlt
int
cs
sbb
and
in
dec
lahf
dec
sub
push
or
(bad)
jmp
mov
jp
std
in
inc
and
stos
mov
xchg
and
scas
hlt
getsec
mov
mov
aaa
mov
jl
iret
push
push
pop
adc
shl
cld
pop
sbb
bnd
test
nop
fcomp
push
mov
jbe
sti
jmp
stos
xlat
in
jns
data16
xchg
loopne
test
mov
gs
movs
xchg
xchg
sar
stc
stc
mov
int
dec
ds
gs
ins
mov
adc
pop
push
mov
sti
adc
neg
pop
lds
jbe
cdq
pop
sbb
lahf
shufps
mov
ret
xor
mov
xchg
(bad)
loopne
inc
mov
(bad)
adc
push
in
shr
or
ss
ror
jnp
adc
sub
mov
das
add
xchg
add
mov
mov
stos
jns
add
xor
add
pop
xchg
pop
aaa
mov
sbb
mov
sbb
mov
hlt
dec
sar
scas
jmp
sbb
into
lods
loop
mov
rol
lock
jae
jg
mov
test
push
cmc
add
sub
aaa
gs
fmul
xlat
test
mov
fistp
mov
fwait
xor
cmp
sbb
or
pop
jne
(bad)
daa
cmp
in
cmp
push
pop
data16
xchg
mov
xor
scas
mov
cs
popf
jmp
imul
pop
adc
rol
sbb
xchg
xor
xchg
lds
mov
adc
test
fsub
add
jecxz
stos
aaa
push
adc
push
cld
adc
dec
scas
mov
cmps
sahf
fbstp
sub
inc
pop
xor
xor
out
push
adc
sbb
movs
push
cmp
(bad)
pop
std
fimul
mov
fnstenv
in
pop
ins
nop
mov
adc
xor
lahf
xor
adc
fist
paddw
cmps
mov
inc
stos
push
int3
and
dec
mov
cmps
stos
icebp
scas
ja
cs
mov
cmp
inc
mov
pop
out
fchs
lahf
or
cmp
mov
or
push
xchg
adc
mov
daa
pop
add
cmp
adc
and
sbb
or
push
add
lods
adc
clc
movs
cmp
and
retf
outs
hlt
sub
ins
sub
sbb
fiadd
add
fdivr
mov
inc
sbb
ins
xchg
or
jns
jl
popf
fdivr
push
lock
fdivr
jnp
div
stos
push
fcmovnu
movs
or
repz
movs
lds
call
pop
popf
idiv
(bad)
dec
inc
(bad)
scas
pop
nop
fnstenv
xchg
cs
rol
popa
frstpm(287
pop
mov
jne
loopne
and
mov
add
fcomp
xchg
fdivr
jge
lods
push
sub
xchg
push
xchg
push
xlat
jmp
cdq
mov
repz
sbb
adc
jge
inc
add
push
fcmovbe
xchg
cmc
or
sub
adc
(bad)
push
(bad)
xchg
mov
push
and
call
lods
fisttp
jne
arpl
(bad)
in
inc
je
test
adc
cmps
and
jge
and
xlat
xor
mov
aas
jmp
les
sbb
pop
(bad)
addr16
neg
sub
pop
jmp
sub
push
sub
mov
inc
shufps
ins
in
repnz
pop
adc
shl
jae
cmp
push
enter
repnz
xchg
std
mov
push
js
aas
inc
push
jle
fisttp
sub
cmps
inc
not
or
rcl
jl
lods
pop
scas
sub
sbb
add
ret
jb
dec
pop
lods
jmp
pop
sub
mov
cmp
repnz
pop
cmc
xchg
mov
xchg
mov
jl
das
pop
adc
test
dec
xchg
je
inc
lods
ins
out
or
movs
(bad)
mul
mov
data16
std
ds
(bad)
or
add
mov
ss
fisttp
mov
imul
jnp
adc
jg
int
mov
js
xchg
mov
cmp
mov
cli
cmc
mov
xchg
test
shl
and
push
ds
mov
rep
das
(bad)
sbb
je
arpl
fisubr
ret
ins
fmul
jnp
js
sub
and
mov
jne
(bad)
ficomp
in
mov
xor
mov
pop
sub
repz
aad
call
mov
dec
les
jo
mov
cmps
fidivr
inc
retf
mov
rol
out
pop
call
lods
scas
int
pop
xor
pop
pusha
imul
sbb
add
sti
inc
jge
mov
cmp
push
xchg
outs
cmp
jo
jl
test
pop
mov
xor
xchg
mov
std
mov
mov
mov
inc
pop
js
push
aaa
mov
cmp
mov
adc
push
push
cmp
shr
std
je
loopne
add
adc
(bad)
cmp
dec
push
fld
popf
call
out
push
hlt
pop
lds
cmp
xor
pusha
mov
rcl
pop
fadd
(bad)
push
pop
clc
lds
xor
xor
cmp
enter
sub
jg
jecxz
jg
or
js
out
mov
and
jl
fidiv
stc
imul
(bad)
gs
out
mov
mov
fs
push
repz
sbb
es
push
leave
mov
mov
daa
mov
inc
cmp
or
dec
cmp
push
fldcw
push
sub
and
test
fnop
cmp
in
pop
neg
adc
cdq
or
aas
lock
ds
pop
xchg
sub
push
mov
cld
je
or
mov
push
inc
in
movs
add
out
pop
mov
(bad)
je
ret
imul
outs
imul
imul
ret
les
jecxz
dec
(bad)
jl
adc
inc
push
jo
mov
mov
and
jle
adc
imul
xor
ss
pop
add
or
js
sti
pop
mov
jbe
in
sub
push
adc
xor
ret
mov
cli
adc
jmp
inc
out
cli
das
test
dec
xchg
sti
das
rcr
add
cmp
je
scas
dec
dec
sti
inc
paddsb
fld
xor
ror
test
test
shl
or
xor
movs
mov
ror
adc
sahf
adc
xchg
div
repz
adc
out
cmp
les
ss
cs
jae
iret
js
fiadd
sub
fbld
mov
outs
jmp
test
sub
das
ficom
in
mov
enter
shl
mov
inc
cli
mov
call
push
jg
out
(bad)
sti
imul
fisttp
jp
cmp
sub
loope
mov
imul
repnz
and
adc
xchg
or
out
pop
xchg
dec
icebp
ds
push
cmp
aam
xor
mov
push
jge
pop
cmp
sti
xor
fisub
out
rcr
fsub
jb
add
xlat
push
mov
js
je
retf
hlt
(bad)
out
pop
xor
xchg
es
pop
add
fdivr
mov
push
xor
push
mov
xor
adc
add
in
data16
out
adc
test
mov
xlat
push
pop
icebp
or
adc
movs
addr16
and
bound
mov
pop
and
xor
mov
mov
cmp
icebp
pop
lea
add
xor
(bad)
adc
push
mul
mov
dec
pop
xchg
cmp
jp
inc
div
or
push
stc
lahf
ret
inc
sub
cld
imul
inc
bound
push
div
stos
adc
jp
cli
ss
push
or
mov
test
dec
xchg
mov
sahf
scas
inc
mov
add
aas
movs
call
mov
sar
mov
xor
cmp
fadd
jecxz
sub
pop
push
call
cmps
das
jbe
out
(bad)
call
iret
mov
mov
xchg
loop
jne
leave
mov
or
(bad)
ret
loope
lods
jge
stos
shl
mov
xor
xchg
push
add
lods
cmp
icebp
adc
outs
xchg
xor
mov
push
loopne
mov
sub
sbb
mov
jmp
add
inc
sbb
in
pop
neg
cmps
adc
dec
ins
xchg
inc
mov
cdq
push
daa
sahf
xchg
stos
lds
jo
retf
out
jae
lock
mov
and
lods
add
test
sub
mov
mov
xor
pop
je
retf
ja
loop
sahf
push
jmp
imul
pop
xchg
xchg
fwait
pop
cmp
mov
push
retf
(bad)
push
lds
dec
icebp
out
adc
addr16
sbb
rcr
mov
fbstp
mov
sbb
and
stos
or
daa
dec
adc
mov
ja
fisub
xchg
frstor
adc
mov
stos
jbe
push
inc
adc
xchg
stos
jmp
pusha
gs
push
bound
mov
ror
jl
scas
dec
and
jmp
add
pop
lods
cmps
jne
mov
dec
sbb
test
cmp
ret
jbe
cs
jbe
jmp
jg
les
mov
push
xchg
xlat
das
mov
shl
movs
pop
push
cdq
fisubr
jmp
neg
push
std
cmp
int3
fisttp
pop
call
mov
pop
stc
push
ins
xchg
shr
sbb
jns
xchg
shr
mov
sbb
xchg
adc
mov
(bad)
inc
movs
mov
sbb
(bad)
jnp
or
mov
mov
ficom
dec
mov
dec
jne
ins
call
ret
(bad)
inc
ins
pusha
aad
mov
add
fsubr
jbe
jne
or
and
loopne
daa
call
popf
aad
sbb
aas
push
jle
sbb
mov
popf
adc
xor
jmp
mov
lds
sbb
sub
pop
out
xchg
cmp
scas
sub
mov
mov
xchg
dec
sub
adc
lods
jecxz
rol
loope
pop
sti
dec
mov
push
sbb
xchg
ror
repnz
and
mov
push
mov
inc
adc
push
mov
enter
mov
cli
sub
mov
bound
or
pop
pop
jecxz
ins
cmp
aam
int3
mov
push
sub
cmps
das
push
mov
not
mov
mov
cmp
cmp
add
sub
mov
fild
in
xchg
repz
jmp
js
gs
xor
mov
(bad)
div
mov
jle
jmp
inc
call
jmp
inc
sbb
fcmovbe
scas
push
enter
int3
pop
cmp
jbe
jmp
leave
push
shl
mov
(bad)
push
and
ret
jno
pushf
dec
stos
(bad)
call
repnz
cli
in
ret
aaa
add
inc
inc
mov
(bad)
pusha
mov
mov
mov
or
outs
pop
js
add
push
pop
mov
dec
and
xor
xor
dec
mov
pop
leave
xchg
cs
aas
or
and
test
imul
or
fsub
add
sbb
clc
xchg
sbb
lods
push
nop
or
add
dec
push
jbe
jg
inc
in
push
in
push
fmul
pop
sub
and
aas
pop
sub
or
push
jg
dec
fistp
inc
call
add
sub
push
popf
jle
sub
push
dec
cmp
pop
fwait
dec
sbb
out
(bad)
test
jbe
div
sub
jmp
outs
into
hlt
ss
cmps
mov
outs
mov
xor
(bad)
(bad)
cmc
jle
push
xchg
and
retf
mov
adc
jb
hlt
outs
in
sbb
sti
test
cli
pop
xchg
sbb
mov
push
add
test
les
aam
out
xor
or
es
mov
mov
mov
cli
xchg
and
mov
jns
or
jno
dec
aad
cmp
push
lds
mov
movs
cmp
imul
fwait
or
xor
je
sahf
out
fdiv
inc
cmp
loope
(bad)
cmp
add
cdq
rol
loop
mov
inc
dec
gs
stos
clc
inc
fcom
mov
(bad)
(bad)
jae
push
sub
sbb
cmp
push
jmp
int
push
fnsave
mov
push
sub
iret
mov
add
stos
xor
cld
add
push
mov
push
bound
aam
xchg
mov
hlt
or
out
fsqrt
push
(bad)
mov
inc
aam
sub
adc
jno
add
xchg
mov
pop
inc
add
lods
ins
pop
fucomip
aaa
jle
mov
int3
jnp
xchg
fcomp
scas
sti
jmp
cmp
jp
push
jge
mov
jle
or
retf
test
fist
icebp
pushf
inc
dec
cmp
(bad)
pop
fs
sub
cld
mov
sub
push
in
add
lahf
inc
pop
les
mov
mov
adc
retf
cmps
pop
cld
(bad)
daa
mov
out
xchg
(bad)
fs
push
adc
cmps
jl
pop
pusha
pop
sub
stc
xchg
pop
mov
shl
xchg
into
or
(bad)
out
cmc
dec
loop
adc
jge
adc
(bad)
jmp
mov
push
jno
dec
or
pop
xchg
retf
sbb
dec
int
out
lds
imul
out
int
dec
out
dec
jp
pop
sbb
push
outs
lods
mul
or
lahf
pop
push
xor
aaa
daa
add
(bad)
aam
push
pop
arpl
jb
jae
repz
inc
jns
pop
mul
cmp
jge
rol
pop
cmp
push
mov
xor
pop
std
nop
ja
pop
xchg
jg
inc
mov
mov
adc
adc
jnp
xchg
inc
pop
call
mov
loop
cli
mov
clc
(bad)
jno
sahf
pushf
sub
mov
mov
dec
mov
lods
jle
sbb
fimul
les
cmp
loop
ins
cmp
jmp
sbb
lea
inc
push
sbb
inc
(bad)
jmp
imul
jo
mov
ja
mov
cmp
nop
dec
test
or
mov
xlat
cmp
mov
inc
jmp
cmps
add
rcr
ficomp
imul
mov
jge
xchg
cli
not
in
cmp
mov
xlat
(bad)
fst
sahf
stc
rcr
cli
pop
jmp
in
mov
sub
clc
cmp
repz
jbe
mov
es
rol
jno
scas
mov
stos
or
pop
dec
movs
outs
popa
cld
repz
scas
push
adc
(bad)
xchg
xchg
sub
or
iret
es
sbb
pop
inc
cmp
lds
pop
shr
jo
and
lds
aaa
inc
push
adc
inc
dec
cmps
push
lds
inc
cmp
ret
test
ret
xchg
test
inc
jnp
add
mov
push
int
loopne
or
or
fwait
jne
or
xchg
inc
pop
xchg
pop
cmp
xchg
add
ss
push
push
(bad)
(bad)
jge
xor
and
sbb
cli
daa
push
por
popa
cmp
mov
mov
ss
sub
and
sub
pop
fld
pushf
aas
ret
imul
ins
mov
lds
(bad)
das
push
lods
retf
ins
hlt
dec
xor
sar
pusha
push
cmp
cmp
bswap
cmp
mov
xor
int3
mov
jle
xchg
ss
add
outs
jbe
dec
cmps
push
pop
mov
cli
inc
jge
push
rcl
dec
and
ds
pop
not
lods
sbb
das
dec
fwait
xchg
lods
aas
jae
inc
push
int
pop
pop
cmps
ficom
pusha
pop
mov
iret
cli
fcomp
cli
xlat
pop
stos
fldenv
adc
sti
pusha
adc
out
pop
mov
aad
xor
jns
pop
pop
xchg
test
stos
call
aaa
jl
push
sti
sub
iret
fwait
pop
jne
push
sub
push
xchg
push
or
out
dec
repnz
push
(bad)
push
fcmovne
jle
aaa
bound
sbb
sub
(bad)
vmovsd
sub
push
xor
adc
cmp
cmc
jae
stos
ror
pop
mov
lods
sbb
ret
dec
movs
sub
or
jb
shl
mov
popa
inc
inc
loop
mov
lods
adc
dec
shr
xchg
(bad)
rol
out
std
int
mov
jb
cmc
jecxz
and
push
ins
pop
data16
pop
xor
pop
aaa
int3
sub
ror
mov
push
ins
or
cli
mov
loope
and
jle
xchg
push
mov
lahf
loop
or
push
icebp
mov
ins
add
cwde
adc
push
pop
popf
xchg
ret
sub
push
cmp
(bad)
loop
lods
in
shl
push
mov
mov
pop
outs
dec
loopne
(bad)
out
int
xchg
adc
push
hlt
jb
scas
xchg
stc
addr16
sbb
(bad)
mov
adc
and
mov
mov
cmp
ins
fcmovnb
mov
xchg
add
add
dec
add
add
sbb
test
ror
add
add
fwait
xchg
mov
and
mov
add
shr
and
adc
retf
cs
es
rol
add
add
scas
loope
mov
cmp
xchg
jg
lahf
icebp
sbb
xchg
ins
mov
jae
sub
inc
les
adc
sub
arpl
int3
int3
and
shl
mov
jmp
and
cmp
out
out
jle
cmc
jle
cmp
add
mov
mov
sbb
fsubp
clc
loop
cmc
and
inc
sub
test
fucomip
cld
out
or
push
dec
fisubr
fstp
push
in
jg
aaa
xchg
xchg
aam
pop
jmp
xchg
sub
xchg
lds
lods
imul
in
ins
fs
mov
inc
movs
mov
or
int
pop
inc
inc
sahf
fcom
jecxz
pop
movs
xchg
out
fisttp
(bad)
add
rcl
add
jo
pop
push
and
xor
rol
xor
add
js
push
mov
es
movs
xchg
adc
rol
in
sub
popa
mov
sub
hlt
sub
mov
xor
push
cld
xlat
out
out
out
out
stos
stc
add
push
ja
jo
call
in
adc
xor
add
and
sbb
mov
xchg
btc
xchg
cmc
es
or
and
fwait
out
pop
jmp
cmps
dec
mov
std
push
sar
pusha
movs
pop
cmc
cmps
stos
mov
test
inc
pop
dec
mov
(bad)
std
test
ror
mov
lea
shl
cmp
or
(bad)
je
xchg
fcmovbe
cmp
fisubr
sbb
neg
bound
cmps
leave
push
xchg
adc
std
jo
xlat
xchg
mov
test
cmp
mov
add
data16
(bad)
(bad)
imul
fs
add
mov
out
test
jne
xchg
jo
push
push
xor
arpl
rcl
call
lods
sbb
cmp
jb
pop
jmp
cmp
ror
push
adc
(bad)
pop
jmp
push
add
pavgb
les
test
dec
dec
mov
mov
jecxz
outs
arpl
data16
pop
mov
cmp
inc
mov
inc
mov
jmp
cmp
rcl
pop
or
adc
push
inc
jp
inc
outs
adc
clc
or
jbe
jp
adc
in
(bad)
addr16
clc
mov
movs
outs
add
push
out
dec
test
loope
mov
je
data16
and
pop
leave
or
popf
nop
lods
push
into
or
push
xor
shl
aaa
das
sbb
push
xchg
lods
bnd
and
add
ret
sbb
rcr
adc
ud2
mov
rcr
xchg
push
sbb
xchg
cmps
or
in
jns
pop
sar
xchg
mov
repnz
hlt
call
int
sub
test
in
int
sub
adc
bound
and
outs
outs
dec
pop
cmp
sti
(bad)
jns
pop
shr
pushf
pop
mov
(bad)
push
mov
xchg
adc
mov
jl
sub
mov
pop
inc
and
mov
ror
in
test
push
scas
mov
xor
jg
adc
jbe
cmp
sbb
xchg
ror
jge
gs
out
mov
push
push
adc
outs
(bad)
loope
aad
mov
ja
inc
sbb
or
cmp
jno
aad
adc
pop
arpl
pusha
pop
in
or
fild
mov
movs
je
iret
hlt
sbb
adc
push
push
add
adc
shl
lods
clc
jmp
mov
in
dec
fwait
into
fs
mov
inc
lods
cmps
dec
aam
cmps
aas
add
rcr
lock
test
jne
cmps
cmp
popf
call
mov
das
sub
fstp
je
fwait
mov
push
aaa
or
arpl
(bad)
cwde
mov
xlat
fisttp
push
mov
push
push
mov
repnz
lock
sbb
mov
or
xchg
jns
loop
mov
cld
enter
mov
sti
adc
cmp
and
push
cmp
rol
icebp
xor
mov
scas
cmp
in
mov
push
out
std
addr16
sbb
ins
inc
push
cwde
cld
js
cli
xor
pop
(bad)
call
(bad)
ins
pop
or
nop
jmp
adc
cmp
xor
xor
cmc
dec
sbb
les
xor
test
and
stc
and
icebp
fsub
or
pusha
adc
add
enter
pop
outs
bound
jle
outs
adc
dec
cmps
out
pop
mov
inc
push
push
dec
in
jp
outs
pop
push
leave
sbb
inc
pop
mov
stos
call
cmp
pop
pop
dec
xor
xlat
movs
aam
addr16
inc
xchg
mov
retf
jl
fs
xchg
in
push
or
xor
dec
dec
dec
into
loope
lods
(bad)
data16
mov
test
aaa
adc
xchg
mov
mov
and
jbe
faddp
push
mov
shl
dec
cmp
movq
xchg
xchg
cdq
push
loop
xor
pop
shl
push
rol
jp
xor
and
dec
mov
(bad)
es
mov
jbe
pusha
ror
jecxz
push
or
fisub
xchg
dec
rcr
mov
js
(bad)
out
fisubr
jge
lea
push
clc
push
or
cmp
mov
fidivr
shr
add
popa
jo
lock
out
dec
loop
cmp
mov
inc
mov
neg
adc
sub
xchg
or
fiadd
mov
cmp
(bad)
push
mov
mov
jle
mov
and
pop
sub
or
cmp
sbb
and
mov
mov
jb
das
cmc
call
xchg
pop
push
imul
cmps
cmps
sub
arpl
std
add
les
scas
je
mov
out
arpl
sbb
push
lahf
sub
imul
sahf
aas
or
pop
int
mov
inc
xor
sbb
adc
leave
loopne
aam
sahf
sbb
xchg
mov
movs
xchg
mov
call
int
and
xchg
arpl
add
jnp
inc
cs
push
xor
adc
hlt
and
adc
sbb
xor
xor
mul
test
cld
lds
sbb
dec
js
mul
imul
xor
cwde
mov
xlat
and
stos
mov
push
jg
int
out
sub
mov
call
iret
rcl
fidiv
pop
jo
or
cmp
cmp
dec
(bad)
mov
pushf
jp
sub
xchg
repz
stos
addr16
pop
dec
ret
mov
emms
mov
(bad)
neg
cmp
inc
inc
ins
ror
in
pop
xor
lea
dec
sar
mov
jg
mov
cld
test
rcr
div
sub
in
ss
dec
push
call
shr
pop
fdiv
stc
fiadd
fist
leave
fsub
(bad)
mov
std
sub
into
sub
mov
jge
(bad)
js
ret
fwait
or
aam
lahf
fdiv
jle
adc
push
sti
retf
cmp
hlt
sub
jp
jae
push
xlat
push
or
imul
mov
push
mov
mov
sahf
and
iret
xchg
cwde
pop
sub
sub
mov
mov
addr16
lahf
pop
fld
call
xlat
xchg
inc
cmps
iret
pop
(bad)
dec
imul
bound
daa
mov
mov
(bad)
mov
sub
pop
inc
mov
stc
(bad)
adc
pushf
jbe
pop
mov
pop
sub
push
lock
neg
mov
jle
add
jecxz
cmp
lahf
adc
imul
loope
out
xchg
ret
ror
jbe
mov
(bad)
aad
fwait
xchg
js
fadd
in
xchg
pop
cmp
mov
sbb
mov
xchg
mov
movntq
pop
mov
pushf
sbb
js
xlat
ss
xor
(bad)
into
dec
rol
jge
lahf
leave
daa
xor
mov
inc
lods
fistp
gs
cmc
xchg
dec
xor
fist
adc
push
in
sbb
mov
mov
jno
test
ja
adc
dec
movhps
push
xchg
xor
(bad)
dec
push
cld
(bad)
fcmovb
rep
jp
js
ja
call
outs
or
cmps
xchg
movs
mov
icebp
sub
cmc
imul
or
pusha
shl
adc
sub
push
adc
pop
shr
inc
int
out
pusha
adc
cmc
jbe
jp
fcom
pop
jmp
bound
lods
sbb
jnp
hlt
jmp
in
jmp
mov
movs
cmp
fisubr
mov
sbb
stc
pop
mov
js
in
fisubr
nop
stos
movs
arpl
mov
mov
pop
cmp
cmp
and
mov
and
adc
in
mov
and
mov
cmp
dec
xchg
xor
mov
mov
loop
sbb
add
in
clc
(bad)
xchg
or
and
xchg
xchg
in
xor
fidivr
ror
add
adc
sbb
cdq
dec
xchg
pop
jmp
or
shl
and
xchg
ret
popa
dec
fcmove
pop
cld
push
cmp
sub
gs
mul
retf
pop
outs
adc
sub
cmp
int3
mov
or
mov
mov
xchg
and
inc
and
call
rcl
mov
sbb
or
and
in
cdq
mov
aaa
mov
pusha
retf
xchg
outs
inc
jnp
movs
mov
in
ficomp
out
dec
pop
mov
xchg
stc
fisttp
rcr
sar
imul
inc
jnp
inc
cs
repnz
dec
cmp
dec
xor
daa
(bad)
pop
into
sub
adc
adc
cmps
inc
push
lahf
scas
bound
aaa
into
gs
lods
pop
pop
fidiv
outs
push
jg
or
xlat
cmp
rcl
push
and
jg
out
jle
push
(bad)
sub
mov
jne
push
in
es
pop
pop
loope
adc
pop
dec
cmp
test
fwait
or
push
cmps
dec
or
dec
cmps
out
repnz
jg
pop
popf
stos
(bad)
cli
imul
jnp
aaa
push
test
dec
repnz
fimul
fisubr
xchg
lods
js
movs
ficom
fcom
ds
stos
cmp
xchg
js
loop
mov
xchg
or
(bad)
out
mov
test
cmps
mov
sub
pushf
jns
inc
push
pop
inc
out
or
sub
mov
xchg
sbb
push
push
sbb
pushf
mov
adc
(bad)
xlat
mov
das
push
out
(bad)
pop
mov
inc
aam
cmp
addr16
call
sbb
push
dec
jns
(bad)
rcr
out
dec
jae
lds
mov
lods
cli
popf
arpl
fidivr
(bad)
int3
cdq
dec
(bad)
lods
jp
icebp
imul
stc
out
dec
dec
imul
push
mov
in
int3
pop
dec
mov
stc
data16
ror
(bad)
fwait
mov
mov
pop
inc
lods
adc
jecxz
in
mov
and
adc
addr16
fist
or
out
fst
sbb
aas
jno
jno
mov
or
add
in
cmp
icebp
call
adc
or
mov
leave
cmps
loopne
jae
inc
mov
push
cmp
cmps
pop
fld
out
das
xlat
push
pop
inc
or
jnp
das
xchg
test
ss
cs
or
cli
out
pop
lahf
mov
repnz
fwait
inc
je
scas
xor
rol
push
adc
push
mov
iret
xchg
sub
dec
das
js
fcomp
les
int3
pusha
mov
gs
xchg
cdq
idiv
loopne
pusha
stos
imul
or
add
mov
pop
push
pusha
aaa
xlat
outs
inc
xor
inc
sahf
mov
outs
adc
jge
pop
jo
inc
ins
fmul
pusha
mov
adc
in
shl
pushf
push
mov
into
and
pop
(bad)
or
jge
mov
(bad)
push
stc
xchg
jge
movs
lods
es
add
cmp
mov
mov
adc
imul
pusha
dec
xchg
sub
repz
(bad)
pop
mov
add
out
data16
aam
fidiv
not
dec
imul
xlat
jg
sub
sub
pop
rcl
fld
dec
inc
imul
test
pop
sub
ret
lock
shl
mov
hlt
sbb
cmp
push
mov
lods
jp
out
loope
mov
jnp
(bad)
pop
fcomp
cmp
mov
ins
push
push
cld
sahf
xchg
xchg
shl
push
add
test
sti
fisub
aaa
pop
push
jmp
int3
and
pop
mov
jg
rcr
into
out
inc
ss
(bad)
sbb
ret
out
xchg
push
in
push
aas
jbe
and
cmp
jno
mov
outs
push
aad
and
xchg
xchg
mov
loopne
push
pop
dec
ds
hlt
out
in
cli
clc
setp
xor
(bad)
xor
aas
mov
jp
adc
push
push
aas
adc
mov
mov
and
push
rcl
mov
mov
mov
jmp
stos
push
fnstsw
sub
and
jb
jge
in
xchg
jecxz
dec
adc
outs
imul
mov
clc
sub
xchg
jno
hlt
dec
xchg
pop
movs
in
outs
fwait
loopne
pop
in
out
add
cmp
inc
outs
dec
les
ret
ins
or
dec
int
mov
or
call
pusha
lahf
mov
ja
pusha
std
js
dec
repnz
xchg
stos
add
out
jmp
rcl
cld
xor
lock
pop
jge
xlat
inc
adc
std
mov
push
and
ds
push
scas
imul
test
jae
mov
mov
sbb
mov
xchg
(bad)
cli
and
jle
jmp
dec
or
jle
mov
cmps
pop
cli
lods
cmp
jno
call
pusha
aaa
leave
test
xchg
jmp
sar
shl
ins
adc
and
sub
add
lahf
adc
and
push
mov
je
jbe
es
ror
aaa
push
mov
mov
dec
into
js
mov
xor
adc
outs
daa
pop
sbb
and
cdq
out
rcr
jle
aad
lock
jo
dec
sub
jne
ds
les
xchg
shr
jmp
xor
nop
sub
lds
imul
mov
push
pushf
hlt
sbb
dec
js
clc
pop
ins
push
mov
fadd
jge
loopne
(bad)
cmp
mov
icebp
cwde
sbb
sbb
in
dec
adc
inc
das
(bad)
loope
push
jo
sub
mov
inc
es
aad
enter
xlat
stos
jmp
(bad)
mov
mov
imul
(bad)
push
mov
rcl
push
jbe
out
cmp
js
cmps
fcmovnu
mov
jmp
popf
mov
pop
(bad)
adc
sub
enter
xor
imul
sbb
rcl
pop
call
btr
sbb
push
in
(bad)
cmp
jo
sar
cwde
add
inc
xor
mov
inc
xchg
mov
pop
in
sub
(bad)
(bad)
cmovb
out
xchg
mov
xchg
xchg
xor
adc
cmc
retf
cmp
repnz
int
push
cli
iret
mov
dec
iret
push
pop
sub
dec
mov
fdiv
ss
iret
sub
test
cmp
xchg
shl
hlt
addr16
xor
pop
popa
inc
dec
imul
nop
je
es
adc
or
(bad)
sbb
popa
pop
sbb
mov
xchg
mov
mov
jecxz
or
ret
repnz
pop
rcr
test
fs
rol
pop
mov
or
test
dec
cli
div
mov
test
(bad)
pop
jg
(bad)
lds
sub
add
in
jno
or
dec
ins
xchg
jp
int3
(bad)
mov
jnp
pop
je
es
mov
push
shr
xor
in
test
enter
mov
inc
into
ss
xchg
(bad)
retf
lods
pop
lods
dec
xchg
and
and
ins
mov
mov
aam
cmp
or
xor
mov
(bad)
fcomp
fsubr
shr
cli
shr
shl
aad
sahf
pop
cs
js
scas
cmp
les
imul
push
add
push
fdiv
aad
inc
ret
or
fld
sub
mov
lock
mov
jb
dec
lds
int3
dec
aaa
ins
xchg
mov
fiadd
cs
(bad)
repnz
mov
in
cmp
mov
loope
push
fild
call
stos
not
mov
call
jmp
push
cmp
jmp
dec
pop
xchg
push
sub
and
je
pop
inc
add
jae
add
lahf
push
sbb
cmc
inc
ror
push
lods
std
ja
or
stc
stos
mov
jl
jl
ret
push
out
hlt
mov
stos
into
pop
cmp
and
bound
repnz
mov
pop
sub
jmp
out
sub
ins
out
movs
xchg
out
inc
or
adc
push
call
xchg
(bad)
push
movs
and
dec
cli
aaa
in
add
dec
nop
xchg
jns
mov
xchg
jo
(bad)
push
sbb
daa
xchg
out
(bad)
aad
push
and
fcomp
add
adc
aaa
or
std
stos
adc
dec
nop
rol
mov
push
std
(bad)
and
adc
stc
mov
cmp
shr
cs
jnp
adc
fsubr
rcr
xor
mov
outs
pop
arpl
jle
push
sbb
call
test
int
pop
lods
pextrw
ja
pop
rol
xchg
lahf
jno
and
cmp
inc
cmps
cmp
dec
jg
popa
jle
xchg
(bad)
pusha
mov
cdq
xor
adc
inc
pop
dec
cmp
hlt
sub
aaa
cmps
xchg
(bad)
iret
adc
into
ret
and
adc
icebp
out
push
out
out
addr16
dec
out
jns
aad
loop
xor
addr16
or
test
or
aaa
mov
pop
and
xchg
shr
js
push
push
dec
fwait
ret
fistp
icebp
in
or
mov
fidivr
jae
outs
outs
jg
dec
sub
sbb
push
daa
push
loop
jb
ret
out
cmp
and
lock
je
retf
popa
push
imul
adc
push
mov
dec
pop
mov
call
cmp
pop
rol
pop
mov
sub
dec
push
cmp
mov
(bad)
into
xchg
test
xor
(bad)
and
aaa
cld
inc
xchg
js
aas
xchg
push
jge
mov
and
cli
xchg
(bad)
loopne
repnz
ficom
dec
and
(bad)
cmp
or
cld
cmps
add
stc
adc
jg
push
outs
and
mov
pop
fsubr
iret
or
push
or
mov
loopne
bound
repnz
pop
mov
in
je
ins
cmp
mov
rcl
mov
call
scas
jne
shr
lock
pop
adc
and
mov
inc
dec
stos
xchg
mov
in
mov
leave
mov
(bad)
repnz
or
adc
sub
pop
sti
clc
in
inc
stc
mov
pop
and
xchg
mov
inc
lds
in
ds
fucomp
adc
push
and
fiadd
dec
cmp
lea
stc
nop
cmp
inc
fwait
dec
cmp
or
(bad)
mov
mov
dec
adc
stc
pop
push
aad
adc
sub
aas
mov
imul
mov
pop
imul
sbb
jle
adc
or
mov
mov
jmp
cmc
enter
scas
mov
dec
inc
inc
aaa
loope
fwait
jmp
movs
test
retf
mov
xor
scas
push
lea
popf
ins
(bad)
loop
xchg
out
mov
stos
dec
mov
mov
or
add
(bad)
out
mov
mov
pop
popf
ret
addr16
leave
push
xchg
xor
pop
push
gs
jmp
mov
mov
add
mov
(bad)
hlt
mov
dec
dec
inc
xchg
les
mov
(bad)
mov
rol
adc
je
inc
add
push
je
adc
cmp
cmp
out
fiadd
ror
pop
pushf
cmp
aas
in
and
(bad)
test
mov
mov
push
inc
push
pop
sub
fcomp
stc
rcr
push
lds
addr16
in
popa
cmp
mov
mov
scas
add
push
push
ja
xor
push
adc
neg
jl
daa
(bad)
pushf
jmp
xor
xchg
lea
test
cmp
or
push
ja
jo
push
jg
test
imul
ss
pop
enter
sub
adc
mov
(bad)
retf
mov
(bad)
push
cmp
std
aam
mov
stc
jae
jns
out
stc
push
cmp
xor
scas
fld
adc
mov
and
cld
dec
add
ds
std
dec
scas
sar
push
add
mov
daa
pusha
push
dec
repz
sbb
and
and
xchg
add
jg
cmp
dec
cdq
outs
sar
xchg
ffreep
sbb
mov
dec
imul
push
xchg
cmp
movs
adc
mov
ficomp
aad
shr
movs
mov
scas
shr
xor
cmp
inc
pop
jmp
out
js
sar
xor
sbb
pop
(bad)
sti
test
push
lahf
adc
mov
cwde
xchg
mov
xor
cmc
js
aas
ret
mov
rcl
push
in
int3
mov
cld
repnz
sub
pushf
retf
xchg
push
in
(bad)
int3
inc
pop
fmul
cld
add
dec
dec
ss
sub
push
(bad)
lea
test
lds
jg
mov
lods
out
ret
cli
jae
(bad)
inc
in
idiv
mov
imul
add
cmp
jmp
mov
pop
dec
leave
inc
gs
push
sub
pop
out
ins
fmul
vmovd
dec
mov
and
sbb
stos
inc
push
mov
arpl
cmp
add
xor
cmp
jae
cmp
push
sbb
sbb
inc
adc
jle
dec
mov
mov
(bad)
mov
enter
add
cli
jmp
sub
cmp
scas
mov
frstor
test
fidivr
mov
arpl
clc
jmp
aas
cmc
daa
xor
lea
das
test
jl
or
hlt
sub
fnstenv
push
rcr
push
bound
cmp
xchg
add
sbb
cdq
push
js
mov
and
or
out
xchg
in
retf
xor
popf
cmps
mov
cld
aad
jne
and
cld
add
arpl
jl
lahf
in
sbb
(bad)
test
test
retf
cwde
or
ss
jno
(bad)
loope
cs
fsub
xor
xchg
mov
cwde
fbstp
inc
add
dec
out
mov
adc
mov
adc
scas
mov
mov
xchg
fldcw
(bad)
and
push
push
gs
push
sahf
test
inc
retf
jecxz
and
shr
xchg
xor
inc
and
sbb
dec
loope
scas
dec
mov
sbb
addr16
(bad)
addr16
pop
xchg
lds
ret
or
sbb
xor
pop
mov
push
in
adc
(bad)
pop
xchg
rcr
pushf
cdq
cmp
aam
mov
punpcklbw
and
pusha
rcr
inc
inc
in
jge
push
mov
outs
movs
push
jmp
call
lods
jo
sti
ror
(bad)
leave
aad
sar
rcr
fwait
rol
cs
adc
fmul
xor
xor
nop
dec
repz
push
and
xor
pop
leave
loop
sbb
xchg
cmp
mov
(bad)
lock
xor
pop
cwde
jle
pop
das
xchg
movs
push
loop
mov
shl
jl
xchg
adc
push
leave
dec
clc
lock
xor
sbb
ins
lea
retf
out
mov
sti
pop
cwde
add
je
(bad)
and
fnstcw
test
sub
and
cmp
fldcw
and
test
add
mov
jp
and
popf
jmp
sub
aad
je
push
inc
sub
scas
cwde
in
cwde
push
fisttp
push
xor
lods
xchg
(bad)
in
(bad)
clc
stos
sub
sahf
mov
jg
inc
jmp
dec
mov
adc
popa
sub
cli
stos
ret
jnp
(bad)
stc
cmp
aam
ret
push
sbb
dec
sbb
nop
ret
leave
jg
dec
outs
xchg
fwait
xor
int
and
dec
(bad)
jnp
sbb
pop
ror
add
mov
adc
push
jmp
es
stos
jb
add
leave
add
add
push
jl
out
enter
xchg
nop
stc
in
cmps
xchg
fincstp
push
cmp
dec
inc
mov
xchg
cmp
mov
or
popa
and
int
jbe
and
(bad)
cmp
jmp
inc
pop
scas
fistp
pop
scas
mov
bound
sub
fwait
xchg
test
pop
xchg
addr16
adc
mov
cmp
int
and
add
cmps
fistp
stos
stc
xchg
mov
pop
sub
dec
scas
xor
push
inc
push
pop
imul
dec
fs
or
or
pop
repnz
adc
pop
ins
or
sar
pop
test
push
idiv
cld
lods
xchg
call
cmp
mov
pop
jne
ret
imul
not
mov
fist
in
shl
sbb
dec
dec
pop
dec
movs
es
sbb
cmp
xchg
mov
xchg
push
xchg
fcmovbe
pop
fwait
dec
sbb
jle
retf
std
js
push
inc
jo
cmp
lahf
test
pop
push
mov
inc
xchg
nop
cmp
movs
clc
ins
repnz
push
ret
mov
out
mov
retf
shl
jae
ffree
nop
stos
adc
xchg
sbb
repnz
lods
ud2
sbb
jge
xchg
add
(bad)
arpl
mov
push
or
push
mov
jns
push
les
mov
scas
aaa
inc
adc
stos
retf
nop
sub
mov
hlt
loopne
into
(bad)
cmps
cmp
cs
sar
(bad)
aas
or
mov
jbe
add
stos
loope
in
icebp
xcrypt-ecb
push
jge
push
mov
sbb
xchg
std
cmp
fisub
(bad)
stc
in
sub
cmp
push
mov
lahf
jo
xor
or
dec
inc
add
dec
bound
xchg
mov
mov
xchg
outs
repnz
inc
pop
addr16
mov
xchg
and
movs
inc
xchg
sub
stc
leave
or
pushf
add
ss
retf
arpl
pop
cli
inc
cmps
mov
jmp
(bad)
xor
aas
sub
mov
retf
cmp
movs
push
push
pusha
rcl
jge
and
lods
jl
inc
mov
dec
test
add
cli
add
mov
xchg
add
(bad)
test
jb
xchg
mov
loope
pop
inc
xor
add
sbb
mov
fstp
fidiv
repz
pop
push
and
fist
cs
ret
stc
xchg
loope
icebp
xchg
sbb
out
cmps
lahf
sub
aam
sbb
icebp
icebp
lods
mov
enter
cli
sub
fnstenv
movs
jae
add
mov
sbb
test
fistp
shl
jle
ins
lods
popa
ret
mov
or
lods
xlat
add
dec
mov
iret
jg
stc
cmp
pop
loopne
dec
push
cmp
inc
cld
out
push
imul
push
pushf
out
hlt
test
das
aas
xchg
adc
sub
rol
add
push
xchg
xchg
cmc
scas
jl
add
push
mov
jmp
test
sbb
push
in
mov
mov
(bad)
(bad)
fwait
jns
in
popa
pushw
cmps
xor
and
pop
shl
adc
add
daa
mov
dec
jnp
mov
lahf
adc
add
sbb
aas
pop
repz
ret
sub
jg
sub
mov
std
loop
xor
cmp
ja
fwait
inc
dec
sahf
cmp
adc
sbb
scas
mov
add
pushf
mov
sbb
imul
fdivr
ins
aas
xor
aad
out
cmp
in
dec
not
les
mov
xchg
xor
test
cli
rcr
inc
mov
mov
mov
scas
dec
mov
mov
adc
fmul
ds
(bad)
pop
stos
pop
and
add
push
outs
push
or
ror
scas
xchg
push
retf
push
and
xchg
push
push
popf
ins
adc
into
inc
sbb
pop
nop
and
sub
dec
mov
jge
cmp
loope
xchg
adc
push
jl
(bad)
fs
ins
call
int
inc
adc
and
xchg
les
sub
sub
arpl
ret
pop
push
out
sbb
(bad)
jle
pop
jns
shr
mov
xchg
js
aam
xchg
fs
xchg
jge
test
cwde
pop
push
cmp
push
mov
dec
popa
(bad)
call
iret
(bad)
dec
adc
repz
stos
les
jecxz
mov
ds
dec
sub
mov
cmp
or
inc
pop
bound
push
(bad)
push
pop
or
sbb
leave
dec
ror
fistp
enter
lods
test
out
mov
push
push
ffreep
ret
xchg
ins
jg
mov
adc
idiv
lds
fwait
xchg
popa
scas
and
lods
xor
in
test
push
sub
xor
out
out
hlt
xchg
mov
ds
sbb
out
jns
cmp
mov
stos
xchg
pop
xchg
sub
out
mov
mov
pop
mov
push
inc
jmp
and
mov
lea
retf
fldcw
jno
xor
sub
mov
jb
dec
dec
adc
lock
jbe
in
cs
in
mov
and
adc
push
jnp
gs
es
xor
retf
pop
(bad)
repnz
out
jno
ret
stos
or
inc
and
jnp
gs
push
mov
ret
xor
call
mov
sahf
sub
adc
retf
sub
mov
fiadd
test
cmp
mov
dec
fldcw
xor
pop
popf
mov
aad
fcomp
mov
fdivp
dec
pop
mov
out
nop
fild
dec
dec
xchg
pop
cs
mov
sbb
cmp
js
test
clc
dec
cwde
movs
mov
icebp
xor
jnp
loopne
pusha
cmp
pushf
add
sub
and
adc
inc
mov
push
and
jmp
mov
lahf
sbb
stos
cmp
push
sub
pop
movs
(bad)
push
popf
aam
mov
test
dec
jecxz
inc
scas
test
aam
adc
pop
pop
mov
push
aas
hlt
mov
addr16
imul
push
aam
mov
or
xchg
mov
sbb
push
fwait
xlat
or
clc
mov
mov
aad
sub
add
inc
push
(bad)
ror
scas
nop
or
xchg
out
(bad)
aam
dec
mov
ins
rcr
(bad)
imul
cmc
shr
push
push
add
jbe
out
sar
imul
or
retf
dec
test
xchg
xchg
xor
sbb
lea
retf
stc
stos
inc
inc
mov
call
into
cwde
jb
aad
ret
in
leave
in
stos
mov
sub
adc
xor
jl
scas
mov
sbb
push
pop
adc
inc
in
popa
xchg
in
out
inc
pushf
xchg
ins
dec
pop
in
test
jecxz
push
(bad)
mov
mov
or
xchg
sub
std
sbb
xor
sub
xlat
arpl
das
stc
aad
ins
jb
sbb
push
data16
jp
jnp
dec
cmp
xchg
ret
retf
mov
mov
mov
xor
icebp
hlt
jo
lds
sbb
clc
lahf
sbb
stc
div
es
push
xor
push
test
mov
sbb
pop
hlt
ja
outs
dec
and
jmp
mov
out
retf
jns
xchg
dec
lea
sub
repnz
fdiv
xchg
mov
(bad)
sbb
jg
retf
mov
mov
out
repz
jmp
out
cmp
pop
sbb
or
jno
movs
aas
mov
dec
cs
stos
adc
mov
lods
pop
lds
push
fmul
cs
mov
cld
imul
adc
xor
mov
jmp
xchg
mov
xor
mov
clc
loop
add
out
dec
and
jae
mov
adc
and
aad
jo
push
pop
xor
cmp
mov
ja
and
test
mov
cmps
gs
dec
es
ret
inc
cwde
retf
xor
pushf
sti
and
dec
add
push
xchg
xlat
jae
sbb
imul
mov
jp
test
imul
scas
add
dec
add
enter
sbb
popf
xor
mov
popa
out
inc
out
xchg
xchg
data16
push
pushf
lds
ins
bswap
xchg
stc
fbld
daa
ja
loope
mov
xor
test
mov
xlat
ret
push
pop
das
into
daa
pusha
adc
jno
jne
mov
gs
sub
retf
mov
aam
pop
neg
cmp
std
mov
inc
ins
pusha
xor
mov
dec
pusha
ret
and
or
and
imul
or
xchg
push
push
retf
and
fs
push
jmp
add
mov
mov
ficomp
and
cdq
mov
push
cmp
jo
(bad)
fisubr
push
sbb
fstp
in
ins
fmul
mov
xchg
ror
mov
rol
or
rcr
fcom
mov
sti
ja
cmc
or
pop
mov
aaa
push
leave
cmp
mov
rol
mov
lds
cmp
ss
(bad)
cmc
fdivrp
retf
mov
stos
lahf
dec
cmp
rcr
adc
js
and
xchg
sbb
gs
and
pop
scas
mov
int
out
jmp
clc
movs
test
cwde
push
inc
loop
push
imul
mov
mov
stos
ret
sahf
cwde
adc
cli
aas
fwait
jecxz
mov
out
and
push
xchg
inc
sub
xor
stos
ins
mov
inc
mov
and
jae
xor
jg
xchg
dec
jmp
mov
pop
stc
mov
pusha
cmp
pusha
std
repz
push
jmp
mov
loopne
(bad)
jge
mov
mov
inc
mov
cwde
loop
or
pop
xchg
mov
mov
call
or
sti
movs
push
movs
mov
cwde
pop
jp
int
and
popf
ins
icebp
test
sub
hlt
pop
loop
int
adc
jge
sub
cmp
jl
movs
push
mov
(bad)
or
mov
out
pop
fcomi
jbe
xchg
gs
pop
arpl
icebp
icebp
push
sar
jno
and
into
popf
mov
inc
int
fldenv
or
or
test
sub
scas
and
in
mov
nop
out
test
stc
fdiv
mov
mov
jmp
movs
pop
sbb
call
(bad)
popa
sahf
xor
xor
test
jmp
sar
mov
int3
out
jmp
sqrtps
adc
in
and
add
inc
jmp
inc
aaa
push
xchg
cmps
jbe
aad
cdq
fdivr
iret
in
dec
push
xchg
mov
mov
retf
sbb
pop
jl
cmp
xor
cs
lock
std
mov
pop
(bad)
adc
cli
lds
(bad)
leave
addr16
jmp
add
push
shl
xor
inc
dec
inc
out
pop
jnp
sub
mov
fadd
out
dec
scas
push
icebp
mov
popa
jecxz
stos
jbe
ins
jmp
icebp
or
loopne
sub
nop
lods
fs
jge
push
and
stos
in
inc
rcl
jmp
jmp
inc
adc
dec
sub
dec
popf
and
inc
xchg
cdq
mov
fadd
and
sar
pushf
inc
cmp
jle
mov
and
push
xchg
bound
xchg
aad
icebp
or
in
scas
mov
jne
popf
and
mov
xor
and
jns
jmp
gs
mov
jmp
cwde
mov
popf
loop
push
mov
mov
inc
pop
loope
cli
hlt
scas
pop
out
aas
fdivr
mov
lods
adc
cmc
ret
out
imul
inc
pop
sti
inc
push
cld
jno
mov
call
jg
mov
pushf
add
fisttp
ror
(bad)
(bad)
sub
add
mov
push
sti
and
test
addr16
mov
mov
or
mov
in
pop
fadd
movs
cli
popf
and
(bad)
push
or
sub
je
pop
dec
sahf
xchg
inc
aaa
in
inc
push
cld
pop
mov
push
mov
xchg
inc
xlat
imul
mov
bnd
test
push
pusha
daa
and
mov
jno
retf
inc
aam
mov
or
inc
(bad)
ror
add
pop
sub
fidiv
(bad)
leave
fwait
cmps
mov
cwde
xchg
jb
push
cmp
fdivr
ins
push
nop
adc
imul
js
or
pop
cmp
loop
movs
out
adc
pop
sub
scas
int
ret
lds
sbb
sub
mov
es
scas
aam
and
pop
rcr
xchg
push
pop
int3
cmps
dec
addr16
mov
call
into
aam
push
and
loope
push
push
jmp
adc
jmp
jbe
push
sub
mov
mov
inc
and
or
sti
into
xchg
pop
cmp
cmp
test
rcl
imul
mov
mov
xchg
(bad)
aad
dec
(bad)
pop
rcl
call
out
ret
outs
pop
jb
stos
sub
das
cmp
xchg
mov
loope
push
pop
int3
inc
add
aam
mov
pop
iret
xchg
rcr
mov
jmp
xor
(bad)
xchg
inc
or
push
enter
and
call
mov
ins
cmp
mov
inc
mov
loop
lods
hlt
xlat
or
adc
or
mov
aas
jge
mov
inc
pop
xor
scas
xchg
into
xchg
lahf
retf
stos
call
xchg
pop
jge
mov
arpl
popa
(bad)
leave
mov
xchg
mov
adc
stos
jl
lods
xor
push
mov
cmp
and
mov
(bad)
jle
push
out
retf
push
xchg
jnp
aam
out
es
out
jns
cmp
inc
or
cdq
in
hlt
cmp
call
jmp
inc
fsubr
dec
std
add
das
or
sub
mov
(bad)
xchg
in
xor
outs
push
push
ror
out
ficom
push
cmp
inc
loopne
xchg
adc
mov
mov
in
mov
and
add
push
stos
dec
dec
scas
add
dec
arpl
and
mov
(bad)
xor
mov
cdq
xor
pop
xor
test
add
into
imul
dec
movs
test
mov
call
sbb
xor
mov
push
jno
sub
mov
and
xchg
sbb
push
cmp
imul
pop
xor
xor
push
jnp
mov
pop
push
mov
xor
out
(bad)
retf
inc
sahf
xor
call
inc
ss
(bad)
cmp
jo
arpl
call
cld
mov
jo
ins
jl
div
xchg
mov
push
add
mov
loope
pusha
rol
mov
inc
test
shr
push
mov
jmp
xchg
xchg
aad
aam
and
xchg
xchg
(bad)
push
mov
sbb
mov
mov
inc
sub
inc
jno
inc
adc
in
xor
sbb
xchg
pop
sbb
push
sbb
jae
push
data16
sub
sbb
jns
cmp
xchg
xchg
mov
mov
jp
adc
mov
mov
xchg
cmp
sub
xchg
sbb
jo
sub
sbb
test
scas
test
lods
xor
mov
jo
out
je
and
sahf
test
dec
mov
ret
dec
jnp
push
push
(bad)
gs
jmp
push
push
mov
shl
out
test
push
dec
es
call
mov
cmp
adc
pushf
mov
add
pop
xchg
inc
data16
sar
stc
push
cmc
inc
in
adc
icebp
fisub
mov
or
xor
xlat
xchg
sub
xchg
xor
mov
adc
jg
fst
addr16
mov
pop
mov
cs
fdiv
cdq
push
idiv
shr
lods
aaa
es
movs
add
lock
not
push
sub
cs
mov
cwde
lods
and
and
pop
mov
pushf
xchg
pop
ins
(bad)
jmp
cmp
inc
xor
inc
out
adc
jmp
dec
in
jns
sub
mov
and
repnz
push
(bad)
ja
mov
test
aaa
jo
sti
and
cmp
jl
mov
mov
push
xor
into
aas
pop
lods
mov
out
popf
lock
into
js
pop
xchg
outs
push
dec
fimul
inc
popf
adc
dec
mov
js
mov
cmp
ins
sbb
xchg
and
rcr
rol
pop
data16
inc
dec
popf
cwde
sbb
cmp
inc
mov
(bad)
cmps
sub
daa
stos
daa
add
push
ret
add
loopne
fnstcw
xor
fisubr
or
out
cmps
adc
ret
xchg
adc
repz
inc
lods
jge
sbb
pop
stos
inc
daa
movs
xor
sbb
adc
cmps
inc
push
and
dec
inc
cmps
sub
int3
push
mov
fadd
inc
xchg
arpl
(bad)
rcl
icebp
div
scas
retf
jmp
leave
ror
call
dec
(bad)
mov
jmp
js
arpl
jg
jg
dec
and
pop
mov
push
sub
jmp
sbb
mov
jle
pop
data16
call
fwait
and
xchg
sahf
cmps
jl
fisttp
int3
js
das
mov
or
pop
and
and
jo
push
in
jbe
mov
or
xchg
xor
jecxz
test
or
out
inc
mov
retf
adc
adc
cmp
retf
out
ret
mov
and
xchg
mov
jg
xchg
xchg
or
sub
jo
sub
retf
xor
fcmovnbe
push
stc
mov
xor
movs
sbb
in
sub
outs
cmp
pop
dec
mov
(bad)
out
push
sub
stos
pop
sbb
mov
shl
and
jle
dec
cdq
pop
mov
mov
adc
xor
fs
xchg
imul
loopne
add
xlat
xlat
ret
xor
inc
adc
xor
icebp
sub
shr
dec
xor
inc
and
int
adc
leave
sbb
xor
lock
std
pusha
cmp
or
fisub
xlat
mov
mov
mov
(bad)
jnp
and
adc
or
inc
sbb
stc
jno
fwait
in
mov
push
sti
sub
and
(bad)
int
lods
xchg
setne
and
ins
xchg
mov
pop
cmp
cmp
cwde
std
add
ss
sbb
sbb
sar
xchg
scas
mov
mov
pop
movs
push
cmp
pop
(bad)
adc
je
mov
call
adc
add
mov
mov
test
sub
ret
dec
daa
out
scas
out
xchg
xchg
sbb
mov
xchg
dec
sbb
fiadd
ret
mov
add
or
movs
xchg
push
pop
add
inc
mov
push
les
cmp
leave
xchg
pusha
ins
push
neg
test
xchg
push
sbb
sub
cwde
pop
sar
push
lock
ja
xchg
(bad)
sbb
pushf
and
inc
push
mov
mov
test
xor
in
push
pusha
in
test
or
jmp
mov
(bad)
fldcw
jecxz
and
int
fucom
and
mov
pop
scas
scas
jne
push
cmps
xor
xor
xor
scas
sub
add
cmp
test
push
imul
lock
repnz
fcmovb
repnz
xor
dec
stos
push
and
sti
lock
sbb
xor
jns
jg
add
and
push
popf
or
leave
loope
dec
add
popa
mov
xchg
add
(bad)
sbb
pop
sbb
popf
mov
fadd
pusha
add
sub
and
je
push
aaa
dec
mov
imul
dec
fnstcw
je
int
out
xchg
cmp
cmps
sub
shl
sahf
add
iret
push
or
clc
push
shr
bound
div
cmp
ror
retf
dec
jmp
adc
push
jmp
mov
cwde
mov
mov
pop
pop
jmp
xchg
push
arpl
mov
mov
and
and
popf
(bad)
mov
mov
into
push
lahf
outs
pop
mov
scas
fstp
stc
data16
pop
xor
sub
sbb
adc
jno
test
retf
dec
mov
lock
fs
add
mov
jne
and
fsub
les
mov
jge
bound
daa
leave
loop
jns
in
sub
inc
lds
outs
sahf
sub
xchg
inc
jb
(bad)
loop
aas
dec
std
sub
jle
mov
int3
stos
pop
rcl
fimul
imul
ret
imul
xor
push
xchg
mov
imul
lahf
xor
inc
hlt
ja
inc
sub
xchg
xchg
or
xchg
sbb
stc
xlat
bound
in
fdiv
clts
pop
jo
fsub
pop
imul
mov
xor
and
out
in
xor
push
sub
jnp
xchg
xchg
into
sbb
test
inc
sbb
rcr
inc
or
cld
ins
movs
ret
aaa
lods
inc
loopne
jl
(bad)
jmp
scas
leave
inc
neg
scas
jns
addr16
push
pop
aaa
stos
loop
das
inc
mov
test
cmp
ja
test
inc
cmps
hlt
jmp
push
loop
lods
mov
mov
pop
pusha
fmul
mov
mov
adc
call
ja
(bad)
ror
test
pop
and
jmp
(bad)
push
cmp
xor
dec
ret
repz
pop
xchg
imul
dec
(bad)
xor
sbb
ins
mov
loope
sbb
xor
mov
das
jmp
cdq
ja
es
pop
or
jno
in
mov
and
mov
rol
adc
dec
not
cmp
mov
jp
dec
inc
xor
push
in
inc
dec
push
cwde
pop
(bad)
xchg
call
lea
jl
cmp
ss
sahf
sbb
dec
cmps
bound
lock
out
sbb
loope
je
in
dec
imul
out
jb
aad
lahf
in
adc
push
push
add
mov
pop
jge
mov
add
push
stos
gs
pop
leave
sbb
pop
daa
inc
and
add
pop
shr
mov
retf
inc
jmp
mov
or
loopne
test
or
aaa
aam
std
aas
push
js
fld
xchg
dec
out
jo
push
test
push
mov
and
jb
xlat
and
les
(bad)
retf
inc
mov
dec
adc
cmp
aaa
adc
inc
stc
fist
add
adc
xchg
ficom
stos
and
or
lods
adc
test
or
cmp
(bad)
fidiv
faddp
scas
push
mov
int
das
stc
dec
push
push
add
fs
jmp
add
cmp
xchg
ja
popf
inc
ds
aam
dec
fcomp
out
push
pop
ja
punpckhbw
loopne
mov
es
hlt
(bad)
out
rcl
push
jmp
outs
push
sub
lea
ret
and
lahf
div
daa
clc
push
push
xchg
xchg
jb
out
jg
test
sub
aam
imul
(bad)
mov
mov
fwait
add
and
outs
adc
sar
and
dec
jecxz
mov
mov
cs
outs
pushf
scas
and
(bad)
add
adc
ds
inc
dec
xor
xlat
mov
dec
push
dec
and
les
xchg
rol
push
xor
out
shl
loope
inc
mov
xor
shl
cli
test
mov
pop
sbb
jmp
not
and
mov
ss
cmp
pop
not
sahf
add
jle
mov
jno
rol
lock
outs
dec
xchg
leave
jo
(bad)
loop
retf
(bad)
xor
sbb
ret
mov
jecxz
sar
cmps
cwde
xchg
push
inc
je
repnz
imul
mov
xor
stos
je
in
sub
pop
xchg
mov
dec
push
inc
mov
inc
or
xor
movs
fnstenv
out
or
cdq
cmp
dec
sar
sub
jl
jnp
add
pop
adc
xor
xor
xchg
inc
aas
shr
clc
push
pop
dec
mov
add
popa
repnz
mov
les
push
in
xlat
aas
jne
cmp
add
push
xor
into
fcomp
(bad)
mov
sub
movs
clc
out
imul
xchg
dec
inc
ret
cli
cmps
inc
pusha
mov
push
push
into
mov
scas
dec
out
les
lds
lea
add
mov
cmp
daa
adc
and
push
xchg
adc
retf
pop
xchg
jg
mov
add
test
fwait
into
cdq
mov
or
mov
hlt
pop
inc
jmp
scas
sub
fcom
outs
cmp
jle
mov
cmp
mov
out
sub
or
loope
cmp
sub
mov
ror
mov
push
fiadd
sbb
adc
fcom
popf
and
jnp
mov
inc
enter
xor
fwait
loop
sbb
(bad)
aaa
js
jb
push
and
fisub
inc
and
mov
lods
sbb
cmp
mov
dec
test
and
jns
and
xchg
pop
mov
mov
test
sub
mov
cmp
xlat
pusha
enter
and
inc
xor
cld
dec
int3
mov
cmp
xchg
mov
aas
pop
dec
es
push
hlt
sbb
push
adc
or
lock
movs
adc
xor
cmp
add
inc
adc
sti
sbb
loopne
pop
or
(bad)
mov
rol
mov
dec
push
jbe
xchg
into
idiv
adc
adc
loop
sub
xchg
mul
inc
cld
sub
dec
call
push
pop
mov
stos
mov
jne
cs
mov
jge
fcmovnu
pop
mov
jmp
jmp
and
sbb
and
aas
cmc
or
cmps
push
pushf
lea
nop
les
add
(bad)
aam
xchg
cmp
and
push
fstp
push
cmp
sbb
(bad)
dec
jmp
xchg
jl
mov
rcr
call
std
jecxz
jge
gs
cmp
inc
shl
les
test
scas
jecxz
lods
arpl
push
fcomp
or
dec
cmp
pop
push
inc
inc
sbb
sbb
inc
xchg
sub
mov
pop
xchg
in
add
arpl
xchg
and
imul
jmp
jle
jo
dec
sub
fs
leave
repz
mov
imul
push
sub
scas
ins
or
mov
mov
ffreep
fimul
add
sbb
jle
(bad)
xchg
and
and
aaa
lahf
das
mov
jne
and
clc
sbb
or
mov
loope
jg
mov
adc
xchg
and
dec
mov
push
ret
xchg
jb
movs
push
je
shr
lea
test
add
aam
adc
dec
inc
out
sbb
push
add
add
ss
inc
ins
cmp
movs
scas
rcl
popf
sbb
(bad)
mov
jg
out
add
xor
push
mov
(bad)
or
aad
rol
xlat
clc
rcr
fsubr
bnd
xchg
xchg
jecxz
add
icebp
jo
pop
cdq
(bad)
pop
nop
popf
push
pop
dec
in
hlt
mov
inc
push
call
push
push
test
ins
mov
sahf
repz
scas
xor
fs
pop
repz
adc
add
int
xchg
addr16
ins
or
ud2
xor
mov
mov
jae
pop
test
lods
jne
pushf
push
(bad)
das
out
lods
push
cld
les
inc
aad
test
xor
push
loop
lds
mov
mov
retf
test
xor
jns
pusha
das
shr
and
adc
push
dec
js
(bad)
scas
mov
and
and
xlat
ss
fnstcw
outs
ficom
ret
lods
cmp
or
fsub
jl
dec
lods
xchg
jnp
mov
mov
pop
pop
and
jns
lds
gs
data16
xchg
and
fdiv
dec
mov
cmp
bound
movs
aam
push
xchg
inc
dec
test
ror
or
rol
push
xchg
jl
xchg
push
sub
jecxz
(bad)
fld
mov
adc
pop
and
sbb
aad
mov
add
xor
or
leave
xchg
adc
xor
sub
jnp
cmp
dec
shl
add
ss
mov
and
test
lods
leave
and
sahf
shr
adc
mov
(bad)
dec
iret
out
adc
pop
xor
pop
push
xchg
call
xchg
mov
loopne
addr16
add
push
outs
(bad)
inc
inc
push
dec
dec
xchg
or
dec
sbb
sbb
inc
push
sahf
xchg
pop
pop
jle
aaa
clc
dec
jge
int
xchg
push
loopne
and
movs
mov
je
in
push
sahf
fsubp
dec
bound
imul
inc
mov
cmp
lds
pop
or
and
xchg
xor
test
mov
inc
mov
das
leave
cmc
push
inc
and
pop
mov
jg
(bad)
std
mov
outs
jb
fstp
sbb
div
fisttp
push
xor
mov
xlat
pop
sub
jne
mov
cmc
sub
retf
and
mov
icebp
arpl
push
fisttp
inc
mov
add
loopne
xchg
xlat
ror
jno
in
(bad)
aas
pushf
jb
mov
lods
sbb
or
sub
sub
cvttps2pi
lds
mov
fwait
scas
(bad)
sti
pop
cmp
shr
pop
dec
in
sahf
or
cli
outs
imul
loope
pop
jge
mov
xchg
mov
mov
(bad)
cmp
lods
add
xchg
loop
mov
add
in
cmps
mov
int
or
or
push
leave
rol
xor
gs
iret
and
mov
or
test
jl
adc
or
ins
dec
into
jns
lods
repnz
mov
das
das
pop
in
xor
enter
add
lds
inc
call
mul
mov
pop
movs
dec
cs
test
mov
mov
adc
cmc
sbb
push
in
sbb
fs
lea
mov
inc
push
bound
movs
in
in
(bad)
jmp
stc
adc
popf
in
sub
scas
mov
shl
addr16
push
mov
lods
pop
in
pop
sar
stos
stos
and
push
adc
sti
stos
xor
pop
jbe
jp
inc
pusha
in
scas
dec
and
push
push
outs
mov
lods
mov
mov
sbb
fistp
push
nop
jbe
(bad)
fincstp
out
cdq
sbb
pop
xchg
jg
sub
retf
dec
push
(bad)
xchg
and
nop
fucomi
repnz
cmp
or
leave
pop
xchg
ret
enter
test
(bad)
hlt
loop
aas
dec
test
push
and
data16
xor
inc
mov
int
movs
or
sub
xor
jmp
adc
cmovnp
mov
out
or
and
push
cmps
add
ret
jg
neg
push
adc
jb
es
or
daa
push
fdivr
loop
ins
mov
sbb
cld
push
and
and
or
rcl
leave
inc
in
iret
push
test
mov
ror
aad
out
sub
jmp
dec
add
or
mov
pop
mov
test
movs
add
jno
retw
sub
call
jmp
mov
sub
mov
push
bnd
mov
sbb
jmp
call
test
mov
ror
dec
ds
cmp
outs
retf
aas
iret
arpl
fnsave
adc
xor
mov
loop
cmp
data16
ss
imul
push
mov
push
cmps
mov
add
inc
xor
in
lahf
mov
je
xor
shl
fbstp
pop
pop
jle
mov
int
(bad)
test
jge
cld
push
ins
push
fwait
stc
sbb
lea
add
sbb
hlt
jecxz
fbstp
xor
(bad)
lea
aad
(bad)
push
mov
fwait
or
jl
(bad)
jle
add
leave
push
mov
cmp
hlt
test
mov
push
les
mov
fiadd
popf
push
mov
into
daa
dec
jl
sbb
jl
push
sbb
and
cld
fwait
push
jb
jecxz
mov
into
dec
adc
add
xchg
rcr
jae
push
shl
or
xor
je
idiv
and
push
adc
jle
mov
mov
scas
mov
pop
aad
add
test
test
rol
xchg
xor
and
push
jns
and
in
jmp
pusha
xor
loop
xor
mov
fs
and
leave
sbb
div
jmp
rol
(bad)
and
ja
or
mov
adc
aad
adc
pop
les
fidivr
push
and
sbb
iret
sbb
xor
sbb
(bad)
pop
leave
dec
sbb
cmp
mov
(bad)
mov
loopne
dec
xchg
and
imul
xchg
fcmovnu
push
push
lock
and
ret
shl
cmp
push
add
jmp
xchg
loopne
(bad)
arpl
jo
repz
mov
mov
pop
retf
mov
cs
aam
push
out
(bad)
mov
push
jnp
mov
rcr
add
inc
in
movs
jbe
and
dec
enter
jg
dec
jg
(bad)
jno
inc
mov
cmp
outs
xor
sub
daa
ja
icebp
pop
mov
push
inc
fimul
out
push
stos
or
neg
mov
stos
jp
(bad)
pop
or
out
jecxz
jle
retf
fwait
mov
int
sbb
ins
cmp
ret
jecxz
pop
loopne
and
test
jg
or
push
loope
lea
push
cmps
and
and
inc
or
std
or
sbb
push
(bad)
not
sbb
push
icebp
push
(bad)
push
(bad)
sub
sub
scas
pop
loop
jne
pop
push
pop
pushf
sub
out
cmps
mov
xchg
sar
out
int
mov
adc
mov
std
imul
ret
fnsave
aas
cld
inc
cmps
ret
adc
xchg
je
daa
mov
sub
and
test
jnp
push
jge
and
mov
repz
(bad)
mov
xchg
sahf
inc
cmps
ror
loop
sub
dec
fild
sbb
rol
scas
fist
jecxz
sub
mov
mov
jl
push
test
jmp
in
xor
cmp
jecxz
sahf
mov
dec
dec
adc
rcl
push
fimul
ins
rcl
pop
loope
pop
mov
cmp
enter
sti
jmp
jns
out
pop
imul
dec
out
stc
add
push
leave
cmp
iret
and
(bad)
pop
out
retf
mov
xor
mov
add
or
mov
add
mov
int
out
loop
arpl
in
mov
dec
cmp
xchg
fild
sahf
push
sbb
sub
cmp
sub
mov
add
mov
loop
cwde
pop
sbb
sbb
xchg
in
mov
push
jo
push
loop
jle
inc
mov
sub
push
sbb
and
cmp
fsub
xchg
mov
fldenv
ror
push
xor
jnp
push
loope
stos
movs
in
out
sub
adc
call
(bad)
cdq
sahf
push
cmp
dec
mov
or
push
cdq
and
sbb
adc
fidivr
dec
cmp
rcl
or
push
mov
xor
shl
jmp
sub
outs
loope
outs
mov
cmps
adc
aaa
push
adc
jecxz
mov
out
pop
test
push
in
xchg
js
shr
aad
lock
and
jb
mul
and
retf
and
out
fsubr
xor
jo
aaa
mov
mov
cmps
xchg
push
pop
(bad)
out
cld
cmp
stc
loop
mov
fidivr
clc
pop
movs
mov
mov
movs
es
and
mov
xchg
cmp
ja
sahf
mov
fimul
xchg
jns
mov
push
sub
jg
adc
loopne
sbb
fwait
js
mov
pop
icebp
sar
jle
dec
xor
push
pop
adc
pop
test
int
or
fucom
jle
test
pop
popa
enter
mov
aam
(bad)
and
movs
cmp
mov
aam
mov
popf
adc
pusha
(bad)
mov
addr16
out
loopne
push
mov
mov
mov
sub
lock
pop
arpl
out
pop
stos
jae
or
mov
loopne
fst
cwde
fcmovu
ja
mov
into
shr
jl
fld
cmp
fsubr
(bad)
inc
push
mov
add
dec
cli
xor
xchg
inc
into
in
rcr
call
push
jp
or
mov
add
in
fsubp
and
cdq
mov
mul
pop
push
shr
dec
jmp
pop
fs
xlat
scas
inc
loope
stc
dec
mov
xchg
pop
jo
repz
push
jne
mov
jle
push
mov
xor
test
sbb
icebp
in
ret
jb
(bad)
into
cmp
mov
std
arpl
add
add
(bad)
mov
dec
iret
xchg
or
lods
mov
addr16
int3
dec
ret
jo
fstp
mov
enter
adc
into
inc
gs
js
(bad)
ja
jge
pop
mov
call
jecxz
push
sbb
jp
xor
pop
in
cmp
sbb
test
(bad)
fcmovbe
sub
push
ss
scas
mov
push
imul
cmc
xor
jg
mov
xor
(bad)
aas
jmp
jmp
or
inc
hlt
sub
sub
xor
xor
enter
mul
jle
xchg
or
mul
imul
pop
mov
push
jno
xchg
idiv
movs
xor
mov
push
inc
fldenv
(bad)
in
(bad)
jmp
pop
nop
aaa
mov
test
dec
ret
aad
adc
xor
aas
ins
jnp
iret
iret
jmp
movs
daa
scas
jecxz
push
test
aad
xchg
mov
out
hlt
js
fistp
xor
rcl
pusha
ins
jle
clc
mov
imul
mul
repz
lock
ja
push
cdq
and
jle
cmp
mov
ror
or
dec
pusha
xchg
mov
scas
or
push
sub
pushf
jnp
jae
out
imul
xchg
xchg
mov
pop
ja
push
fxch
push
sahf
push
push
stc
test
(bad)
movs
and
pop
js
mov
pop
sbb
push
cmp
fldenv
in
dec
or
call
inc
or
cmp
fild
stc
lods
push
aas
mov
jl
repz
ret
push
mov
mov
cmp
mov
call
push
stc
xchg
push
push
aas
pop
push
xor
adc
loope
test
and
or
jb
or
pop
xor
int
xor
outs
inc
clc
dec
sub
stos
aam
xchg
cs
fstp
gs
cmps
pop
mov
out
cmp
aaa
xor
mov
xor
or
or
stos
cmp
cmp
arpl
in
cld
sbb
xor
jns
lock
mov
cmp
(bad)
out
bound
rol
xor
imul
pop
xor
xchg
(bad)
mov
clc
loope
stos
(bad)
retf
push
pop
push
mov
push
fist
enter
iret
or
fld
movs
(bad)
mov
push
jnp
adc
mov
mov
jecxz
add
push
push
(bad)
cli
out
mov
loope
shl
pushf
scas
loop
fisttp
cmp
std
sahf
cmp
xor
xor
mov
and
jnp
mov
test
xor
rcr
jne
stos
xor
(bad)
mov
movs
lods
(bad)
dec
fidivr
xchg
rol
jge
pop
idiv
cld
lds
inc
pop
ds
stos
xchg
jo
fcmovb
out
and
mov
push
gs
in
cld
cs
test
lods
int
icebp
sub
add
retf
jne
jl
std
repnz
sbb
xchg
xor
and
ss
jmp
dec
add
add
jns
pop
push
repnz
xor
jnp
and
fldcw
call
adc
jle
cmps
mov
loope
pop
xchg
jnp
jno
adc
sti
sbb
out
xor
stos
jg
jecxz
inc
mov
arpl
pop
lds
mov
movs
psrld
in
cli
dec
inc
mov
sub
enter
xchg
fimul
push
xor
icebp
fs
jne
test
mov
pusha
push
mov
or
hlt
or
xchg
lahf
adc
xor
mov
outs
jge
adc
je
nop
push
adc
xchg
aad
and
pop
enter
xor
xchg
cmps
inc
push
les
lock
pop
(bad)
adc
sub
cmc
xchg
adc
sbb
push
dec
rcl
inc
movs
jns
cld
pop
jo
inc
cmp
mov
out
mov
pop
sahf
iret
pusha
div
iret
out
mov
scas
or
idiv
cli
mov
sbb
sbb
test
lock
pop
popa
mov
cmc
mov
rol
mov
ja
and
fsubp
pusha
sub
and
call
dec
cmps
addr16
inc
inc
lods
cmp
(bad)
in
cmp
push
or
in
dec
arpl
cmp
xchg
jbe
cmovs
inc
in
in
imul
leave
jbe
jb
dec
dec
pusha
dec
stos
sahf
or
js
mov
adc
push
dec
cmp
pop
dec
in
dec
arpl
inc
(bad)
mov
icebp
lds
or
nop
cmp
sub
sbb
inc
or
xchg
xchg
test
int
mov
rcl
test
sub
jne
test
mov
jp
jp
pop
retf
inc
xchg
fstp
movs
retf
clc
xor
xchg
test
shr
xchg
nop
jp
adc
xchg
pushf
xchg
or
loop
xlat
adc
sbb
and
nop
dec
inc
(bad)
adc
lds
test
cmps
add
mov
(bad)
fmulp
pop
xchg
jo
lock
sub
xor
xchg
push
(bad)
(bad)
repnz
imul
and
dec
jo
dec
dec
ins
enter
ror
push
cmp
pop
cdq
xchg
aad
and
shl
cli
xor
test
or
lahf
pop
rcr
ds
jb
dec
adc
out
and
add
or
retf
sbb
xchg
add
jns
clc
iret
inc
xchg
stos
cmps
mov
stos
lock
add
add
xlat
ffreep
mov
and
pusha
add
or
shl
dec
cmp
add
inc
mov
aam
or
sub
jnp
aaa
lahf
or
in
mov
(bad)
dec
xchg
push
stos
pop
sar
xchg
int
sub
mov
std
retf
pop
idiv
pop
fbstp
xchg
hlt
jno
ret
adc
pop
jle
test
pop
xchg
loope
sbb
sbb
dec
cmc
pop
arpl
hlt
outs
lods
fcomp
jmp
test
mov
fnstsw
cli
xor
sub
xor
out
adc
add
pop
lods
sbb
push
movs
cmp
test
out
adc
dec
(bad)
sbb
pop
mov
mov
mov
in
dec
inc
pop
xchg
bound
mov
or
arpl
add
add
sub
mov
jecxz
lods
cmp
inc
push
lock
fs
and
cdq
nop
mov
xor
cmps
and
sub
daa
inc
mov
ret
pop
jbe
fwait
ror
xchg
sbb
jmp
call
push
ins
and
sub
cmps
in
or
sbb
sti
push
inc
sbb
and
xchg
bound
stos
cmc
mov
in
xchg
dec
ss
cli
jg
jns
ins
sub
pop
mov
stos
fs
ins
popa
movs
or
popf
jo
xor
lods
test
inc
outs
daa
stc
scas
adc
mov
inc
movs
add
test
jmp
sbb
jmp
xor
hlt
adc
or
pop
jl
add
sub
sbb
fcmovbe
adc
fisttp
scas
inc
fucomi
jbe
xor
je
es
call
retf
pop
pop
imul
mov
mov
sub
adc
push
pop
xor
inc
dec
sbb
xchg
mov
daa
pop
mov
(bad)
popa
and
inc
mov
add
xchg
les
mov
inc
out
sub
mov
in
out
pop
test
(bad)
xchg
daa
jmp
or
iret
fidivr
ja
adc
mov
mov
xchg
sbb
cmp
and
stos
mov
xchg
repnz
inc
inc
mov
inc
mov
je
pushf
or
retf
mov
push
xor
jmp
mov
cmps
sub
scas
push
or
hlt
sbb
push
mov
les
pusha
mov
dec
test
or
inc
(bad)
cld
pop
enter
loop
dec
mov
sub
sbb
ins
dec
ss
adc
out
xchg
idiv
loopne
cmps
or
inc
inc
ins
xchg
xlat
pop
lock
mov
stos
icebp
or
pop
adc
popa
fnsave
ror
mov
(bad)
rcr
call
inc
repz
cmp
mov
das
sbb
std
cmp
push
and
popa
cmp
inc
push
les
jp
add
out
sub
push
(bad)
mov
pop
inc
xor
dec
sbb
or
and
pop
loop
xchg
mov
sbb
mov
dec
or
mov
cs
lods
push
inc
(bad)
sbb
xor
outs
add
jge
cmps
icebp
pop
sub
fmul
repz
push
mov
dec
out
dec
lock
jae
xchg
iret
cmc
and
enter
push
pop
jecxz
rcl
inc
movs
sub
clc
push
inc
mov
in
call
bound
add
jmp
movs
gs
sub
cmp
or
xchg
xchg
cmp
and
(bad)
pushf
or
sbb
cmp
enter
add
add
xchg
pop
jbe
and
xchg
add
pop
cmp
out
aam
jg
adc
out
mov
lahf
loop
inc
xchg
and
loop
or
pop
aas
daa
mov
(bad)
fild
add
sti
nop
addr16
fisubr
sbb
xchg
xchg
xor
inc
and
sti
dec
call
or
mov
fist
(bad)
mov
mov
mov
repz
pop
jg
push
mov
test
hlt
adc
adc
xor
sub
ins
xor
add
inc
mov
mov
sahf
js
cmp
push
movs
and
xor
xchg
adc
dec
js
cmps
push
ror
cs
xchg
sbb
add
cs
gs
or
fs
seta
lods
dec
mov
(bad)
cmps
xor
jecxz
mov
dec
movs
add
clc
enter
test
imul
rcr
jmp
stc
stos
sub
lods
dec
push
push
dec
mov
fdivr
rcl
jbe
xor
inc
xchg
popa
arpl
mov
out
adc
mov
mov
lds
addr16
sub
aas
push
fcomp
test
dec
lea
mov
les
xchg
into
lahf
xchg
adc
leave
push
jle
pop
jmp
adc
and
test
pop
jno
fisub
cmp
mov
jmp
mov
mov
sub
jno
ins
mov
and
dec
push
sub
inc
xlat
das
movs
jecxz
sub
xchg
cmp
je
xchg
mov
xchg
and
xchg
cmp
pusha
xor
popf
xchg
xchg
cwde
jae
cmps
call
xchg
rol
pop
sbb
fist
mov
inc
dec
xchg
ret
bound
xchg
ins
inc
xchg
jmp
push
inc
xor
jle
aam
mov
out
adc
dec
add
jmp
sahf
or
cmp
cmp
aad
lea
addr16
inc
adc
or
daa
dec
fisttp
outs
aaa
cwde
mov
xor
test
retf
sub
pop
imul
imul
sub
rcr
adc
push
sbb
nop
loopne
adc
mov
inc
pusha
das
fdivr
test
adc
in
add
add
adc
rcl
js
lods
cdq
imul
inc
adc
dec
and
lea
mov
test
jns
shr
(bad)
pop
pop
jge
bound
jb
mov
dec
xchg
xor
push
call
cmp
pop
jae
es
jmp
cmc
adc
js
enter
mov
test
push
(bad)
jle
dec
push
xor
in
cmp
mov
and
popa
mov
jo
dec
jge
and
dec
ins
sbb
outs
pushf
or
add
mov
add
or
push
and
adc
xchg
out
mov
call
and
dec
pop
test
jno
sub
cmps
loop
inc
push
pavgb
jnp
mov
mov
adc
push
cli
push
and
sub
bnd
popa
pop
fmul
or
inc
ret
das
cld
jno
sub
xor
nop
ins
fistp
add
add
jmp
xlat
jp
xchg
lock
dec
aam
xor
cmp
cmp
pop
cs
mov
les
cmc
sub
cmc
out
sbb
fild
rol
test
jp
hlt
je
push
lahf
test
sub
(bad)
rcr
lahf
outs
cmps
xlat
xchg
inc
aad
push
add
shr
inc
push
loope
push
jno
push
int3
sbb
aam
jae
mov
movs
adc
movs
push
dec
out
mov
sub
nop
xchg
inc
fwait
xor
cdq
mov
retf
data16
ins
lock
adc
stos
xchg
pop
mov
imul
lods
popf
ret
sbb
pop
lahf
mov
ja
sbb
xchg
xor
pop
lock
mov
add
imul
inc
lods
dec
push
add
adc
(bad)
icebp
xchg
xchg
jmp
jecxz
in
popf
int3
mov
or
dec
adc
pushf
xor
jo
test
(bad)
add
or
inc
movs
adc
cmps
out
pop
push
aas
xor
pop
push
xor
push
jle
fstp
call
fiadd
mov
xlat
call
or
or
out
pusha
adc
stos
add
add
loop
lahf
pushf
stc
xchg
imul
shr
stc
or
sbb
jl
xchg
dec
xor
test
(bad)
sub
or
lods
jno
mov
adc
and
inc
sub
push
int
or
xchg
adc
loop
ja
cs
push
push
cmp
icebp
loopne
jno
or
fld
sbb
mov
mov
push
sbb
pop
jbe
cmp
popf
jb
and
fstp
add
mov
into
sbb
out
push
imul
pushf
in
jmp
addr16
xchg
adc
or
stc
cmp
add
out
std
jns
cdq
cmc
arpl
hlt
div
pop
hlt
fidiv
or
call
or
fwait
retf
outs
leave
ficomp
call
stc
or
rdmsr
push
(bad)
dec
in
sub
ins
imul
scas
xor
leave
mov
es
jnp
mov
push
lods
inc
fidiv
out
js
imul
cli
mov
test
in
daa
gs
mov
addr16
dec
test
out
add
out
(bad)
fld
jle
dec
and
inc
or
jl
cmp
dec
out
mov
add
dec
xor
mov
jl
shl
xor
or
popf
mov
out
inc
add
cli
mov
cmps
or
mov
pop
fstp
fwait
sbb
nop
xor
dec
jp
call
pusha
nop
icebp
cmps
(bad)
xor
and
add
push
mov
imul
push
data16
not
repnz
enter
bound
inc
mov
cmc
dec
mov
fdivr
push
ins
rcr
and
adc
xor
in
cmps
mov
jne
pop
xchg
sbb
cmps
packuswb
or
jge
scas
xchg
dec
retf
mov
dec
mov
xchg
mov
jnp
mov
mov
mov
or
pop
(bad)
pop
adc
lods
out
jae
and
and
xchg
in
stos
xor
mov
bound
ins
ja
in
jg
loopne
lock
ss
jae
test
add
add
in
pop
shr
sbb
test
es
sbb
std
jmp
mul
jno
(bad)
mov
shl
pop
adc
cmps
arpl
mov
jae
mov
cmp
and
inc
out
fldcw
jg
xor
popf
cs
jl
test
loop
shl
sub
and
mov
ins
lods
fwait
test
dec
jl
imul
int3
sub
lock
mov
sub
call
sub
adc
and
sbb
aam
(bad)
rcr
cs
ins
mov
sbb
push
jns
sbb
inc
mov
mov
lods
stc
icebp
xchg
add
call
and
push
data16
ret
out
push
stos
dec
pusha
cmp
xor
cmps
xchg
loope
retf
in
jmp
icebp
sub
dec
mov
ficomp
mov
outs
arpl
inc
cmp
push
pop
loopne
dec
call
inc
adc
mov
ret
dec
pop
xchg
mov
test
push
cmps
pop
fimul
inc
jns
mov
mov
leave
in
call
and
addr16
enter
xor
mov
mov
xor
mov
clc
pop
add
sub
xchg
cmp
pop
outs
and
sub
popa
fucomp
lahf
lock
sub
icebp
mov
adc
scas
daa
lahf
dec
xchg
movs
loopne
hlt
pop
mov
retf
push
inc
push
push
jno
lods
(bad)
mov
test
xchg
int3
enter
fnstsw
cli
sub
arpl
iret
data16
ror
cmp
inc
retf
outs
out
mov
nop
xor
and
lahf
call
sub
pop
shr
pop
les
inc
scas
das
fsub
or
enter
push
out
test
xor
push
mov
xor
retf
pusha
mov
shl
ss
xor
xor
cmps
sub
mov
mov
or
jle
jno
xchg
xchg
jmp
fwait
ret
stos
lods
inc
and
jp
ficomp
pop
cmp
dec
ret
daa
and
adc
mov
sub
pop
(bad)
xor
fdiv
push
lea
mov
jmp
rcr
and
(bad)
loopne
mov
loope
add
fld
dec
cld
popf
pop
enter
xchg
out
jno
push
retf
addr16
fdiv
jo
mov
ja
sti
aam
add
mov
dec
jle
sbb
xor
add
loope
dec
stos
lea
inc
push
adc
dec
fcomp
in
mov
and
faddp
ret
push
push
outs
rol
inc
scas
daa
or
adc
jg
cmps
cmp
ds
ins
jle
dec
cdq
stc
lods
or
lahf
sub
push
ss
aam
push
xchg
mov
shr
push
ret
fwait
sbb
jne
cwde
sub
pop
add
pop
lods
or
into
jp
xchg
mov
outs
mov
fiadd
aas
addr16
ret
pop
xchg
and
idiv
sub
test
cmps
mov
inc
sub
cdq
inc
inc
jmp
das
mov
stos
shr
dec
lods
mov
imul
sti
mov
aad
lds
repz
jg
sub
lods
pop
mov
shr
sub
pop
adc
cmps
lods
jno
iret
mov
push
iret
in
sub
xchg
and
addr16
stc
xchg
into
pushf
std
shl
scas
out
mov
dec
mov
es
aad
or
sub
std
dec
lods
mov
jle
cmp
jb
fs
mov
dec
cdq
(bad)
mov
pop
ja
pop
pop
das
xchg
xchg
fist
clc
sub
mov
adc
out
inc
loopne
jns
mov
jbe
retf
pop
dec
(bad)
inc
pop
cwde
daa
xor
les
mov
fcom
jmp
in
pushf
and
inc
pop
lahf
mov
scas
pop
inc
jbe
mov
(bad)
pop
stos
jns
shr
lds
mov
iret
sub
cs
shl
xchg
lds
mov
pop
jge
pop
aad
int
jg
out
adc
retf
(bad)
shl
mov
mov
dec
shr
lods
push
dec
dec
les
cmp
push
mov
mov
daa
dec
sbb
(bad)
daa
jp
sti
adc
inc
xchg
mov
les
jmp
and
in
and
(bad)
repnz
ins
shl
lea
push
outs
or
mov
and
jl
scas
jbe
push
in
bound
cld
inc
sbb
repnz
inc
and
mov
push
inc
fwait
retf
add
leave
ret
cld
inc
cdq
inc
fdivr
mov
dec
in
mov
xchg
sub
mov
(bad)
adc
mov
rol
ror
(bad)
add
add
and
jle
adc
jmp
in
pop
add
es
pop
(bad)
cmp
push
jns
push
dec
sub
into
push
and
mov
lods
scas
cmp
push
shr
pop
fst
xor
sbb
adc
add
test
jno
retf
cld
push
pop
mov
stos
and
dec
mov
inc
in
sbb
scas
in
jg
and
jmp
xchg
jmp
and
pop
inc
or
je
sbb
xchg
or
mov
push
inc
stos
stos
xchg
test
ret
push
in
jl
or
cmp
or
xchg
push
and
or
pop
xchg
sahf
mov
mov
inc
aam
fwait
jae
jae
sub
test
adc
and
in
ins
inc
arpl
loopne
rcr
imul
cmp
pop
or
mov
test
cmp
sub
fsubp
daa
xchg
mov
out
adc
pop
in
les
(bad)
outs
jg
cs
push
lock
push
aad
mov
shr
pop
pop
(bad)
pop
outs
ret
in
out
push
and
xor
fs
cmps
dec
pop
addr16
or
popf
and
xor
loop
add
std
inc
sub
rcr
lea
clc
add
mov
jo
cmp
mov
jne
pop
lds
cmp
xor
jns
cmp
arpl
mov
and
cmps
mov
daa
pushf
nop
cli
(bad)
js
inc
ja
sub
test
fwait
loope
test
cmps
dec
jmp
ret
dec
inc
xchg
int
fcomp
cmp
push
xchg
das
push
sub
push
mov
ins
sbb
mov
xchg
xor
fild
hlt
adc
or
cmp
les
nop
add
pop
mov
dec
gs
mov
cdq
pop
(bad)
mov
adc
cmps
ins
xchg
xor
jbe
mov
out
push
lock
dec
das
add
movs
add
sub
daa
adc
scas
mov
test
jo
jbe
sbb
retf
jae
dec
xchg
dec
ror
iret
mov
inc
xchg
jmp
sbb
mov
add
in
jnp
jo
fldcw
mov
dec
pop
(bad)
xchg
stc
shl
ss
ins
fbld
pop
iret
inc
in
mov
cmp
ficomp
inc
fisub
inc
inc
in
cmps
sub
fbld
cmp
and
es
dec
xlat
inc
call
dec
hlt
sub
jae
push
mov
xchg
test
icebp
out
cdq
retf
cmps
loope
sahf
mov
inc
or
cs
mov
add
sbb
xor
mov
or
xchg
jae
jb
dec
sbb
sbb
inc
cdq
jo
fnstenv
test
addr16
mov
and
add
cmp
pop
xchg
mov
hlt
scas
push
push
lods
push
out
xchg
jmp
movs
jle
inc
push
test
sbb
leave
out
cs
push
inc
aad
aas
mov
push
rcl
jno
pop
sar
mov
sub
movs
sar
retf
jbe
das
and
outs
imul
test
ds
in
dec
in
mov
repz
imul
mov
lea
add
shr
jle
(bad)
sub
jns
or
dec
dec
retf
sub
addr16
daa
imul
push
mov
adc
nop
xlat
in
jl
dec
test
mov
pop
int3
repnz
imul
cmps
adc
rcl
aaa
sub
sub
mov
cs
aad
push
stos
aad
xor
push
data16
out
mov
sbb
adc
push
xchg
sbb
jne
xchg
sbb
gs
adc
sub
or
aad
lods
pop
xor
mov
jns
popa
mov
jbe
inc
inc
sub
jb
dec
jge
jmp
add
sbb
and
push
jo
test
push
push
fild
adc
mov
jg
(bad)
retf
xor
scas
rcl
test
call
jno
mov
call
loopne
stc
(bad)
dec
idiv
add
sbb
(bad)
push
inc
es
and
or
ret
mov
add
mov
push
jne
sub
push
into
out
rep
lea
rcl
retf
out
sub
jl
shr
(bad)
lock
sbb
mov
cmp
push
stc
xchg
cwde
add
jmp
cmp
jle
ret
mov
xlat
sbb
in
inc
jl
ds
cmc
sbb
mov
cmp
hlt
jnp
jl
sbb
lock
(bad)
mov
mov
jnp
push
dec
xchg
push
pop
mov
(bad)
mov
ror
mov
xchg
enter
jno
xor
test
arpl
ret
cmps
sub
push
or
mov
mov
mov
cmp
xor
dec
dec
fld
mov
add
nop
cmp
mov
or
inc
ja
fldenv
out
shl
out
mov
xor
stos
nop
cmp
out
loope
cld
and
jne
jecxz
dec
or
idiv
(bad)
nop
inc
shl
imul
adc
or
sbb
jecxz
adc
mov
pop
int
loopne
mov
scas
in
imul
call
mov
xchg
outs
and
xchg
lods
dec
adc
int
je
imul
cmps
rcr
outs
repnz
fistp
fidiv
fdivr
jp
sub
ds
(bad)
cmp
popa
inc
cmp
fidivr
push
loop
mov
mov
ins
arpl
xchg
xor
int
test
mov
out
push
es
xchg
jge
mov
push
(bad)
sbb
and
(bad)
pushf
ins
test
gs
inc
iret
lahf
pop
push
out
(bad)
bound
je
xlat
repnz
adc
cli
cli
mov
jmp
dec
adc
push
jno
fidiv
inc
repnz
mov
in
out
sub
mov
addr16
cmps
xchg
test
out
movs
sub
adc
ret
fdivrp
call
ret
fwait
gs
popa
mov
dec
rep
adc
cmp
add
gs
cmp
fisub
xchg
daa
mov
js
mov
bound
fdivr
jge
test
and
sub
fist
jne
jbe
in
aad
mov
or
lock
std
jp
adc
icebp
cli
test
lods
out
test
int
das
fild
fs
push
sub
pop
sbb
lds
mov
sbb
sub
out
cwde
aas
aad
xchg
(bad)
sub
(bad)
hlt
sbb
mov
cmp
pop
mov
daa
sbb
imul
dec
enter
shl
mov
repnz
and
jnp
shl
cli
mov
sahf
sub
push
cmps
xor
inc
mov
cld
jae
or
sub
mov
fwait
adc
lea
pop
cwde
dec
xor
pop
loope
or
cmp
cmps
mov
cmp
sbb
test
push
ss
mov
xchg
rcr
pop
xchg
in
jecxz
adc
ret
retf
xchg
mov
cmp
popa
dec
mov
cmp
aaa
stos
cmp
clc
retf
sbb
pop
push
mov
add
xlat
fwait
daa
mov
mov
iret
mov
add
mov
jae
cdq
sti
add
popa
cmp
sbb
into
pop
or
pop
cmps
jb
mov
jmp
lahf
out
mov
pusha
mov
(bad)
jae
int
in
push
push
and
cdq
out
out
mov
fbld
inc
mov
test
inc
jle
xor
inc
mov
inc
mov
ss
mov
or
retf
sbb
divps
je
adc
xor
xchg
data16
imul
in
cmps
xchg
add
add
jge
xchg
imul
xlat
mov
loope
sub
hlt
mov
push
add
xchg
mov
rol
fld
or
(bad)
sti
or
mov
xor
jmp
fcmovnu
ins
outs
rcl
aas
dec
lock
int
mov
out
push
pop
push
add
xchg
mov
xchg
jbe
adc
inc
into
mov
or
repnz
push
push
push
icebp
xchg
je
dec
mov
and
and
sbb
mov
inc
or
xchg
and
dec
cwde
and
inc
in
lea
mov
clc
mov
mov
inc
inc
inc
add
add
xchg
daa
pop
cdq
pop
inc
mov
out
jo
out
xchg
(bad)
cmps
hlt
arpl
daa
out
ret
jnp
add
aas
int
push
ja
popf
(bad)
std
and
push
inc
add
add
arpl
jmp
neg
sub
inc
sub
loope
cld
mov
sbb
lock
movs
test
lahf
add
stc
clc
cli
mov
ss
and
dec
sbb
(bad)
lods
inc
jg
das
jg
cdq
sti
mov
call
int3
(bad)
std
test
das
sbb
pop
push
mov
(bad)
(bad)
out
in
cwde
sahf
aad
push
out
xchg
pop
lock
imul
lock
or
adc
out
adc
inc
sbb
imul
stos
and
mov
cmc
xchg
lds
lods
fwait
pop
(bad)
(bad)
stos
and
mov
loop
xor
xor
hlt
xor
add
fwait
ss
ret
cli
mov
sti
in
add
call
xchg
mov
test
mov
mov
loope
popa
jo
popa
inc
out
jmp
fcomp
xchg
aad
shl
mov
int3
jmp
jae
pop
jmp
jmp
loop
imul
fucomip
xor
fidiv
ret
add
jae
jo
clc
test
enter
xor
sbb
push
push
inc
popa
sbb
sar
(bad)
imul
popf
ret
dec
rcl
call
inc
mov
xor
loopne
clc
and
push
aaa
cmp
es
inc
(bad)
mov
mov
inc
dec
inc
push
inc
adc
dec
pop
push
push
pop
push
push
cmp
push
pop
push
gs
adc
jmp
xchg
push
loope
in
or
fs
aas
mov
mov
js
clc
outs
jge
clc
mov
cdq
mov
out
xchg
pop
lods
std
mov
xor
out
(bad)
shl
das
dec
(bad)
ins
push
loop
jmp
jp
icebp
neg
sbb
pop
mov
icebp
mov
daa
cmp
cli
sbb
pushf
es
lahf
in
xchg
or
neg
(bad)
xor
mov
daa
call
add
js
adc
icebp
out
xor
dec
icebp
fdivrp
push
sub
imul
repnz
mov
clc
aaa
sbb
fistp
cmp
pop
arpl
dec
out
stc
jmp
mov
scas
je
mov
(bad)
ds
fadd
pop
outs
jne
loop
in
pop
test
mov
aaa
jp
inc
retf
jle
and
adc
arpl
sub
enter
xchg
movlps
pushf
fwait
sbb
rcl
or
push
mov
aaa
out
mov
sub
(bad)
jae
adc
(bad)
cmps
mov
leave
jecxz
cdq
fst
ror
add
idiv
xchg
push
mov
retf
mov
pop
out
hlt
in
xchg
lock
rcl
out
push
loope
aas
int3
out
loopne
fadd
or
jbe
iret
clc
cmp
cmp
mov
adc
out
fistp
or
repz
push
push
retf
(bad)
xchg
pusha
cmp
sbb
ins
sti
out
sbb
mov
in
leave
in
(bad)
mov
pop
push
sbb
inc
lahf
js
mov
loop
fmul
lock
(bad)
sti
call
out
fidivr
inc
(bad)
xor
ficomp
adc
lock
aam
adc
in
test
fdiv
lods
or
cmps
std
add
pop
test
and
sbb
lods
and
scas
fstp
fcmovnb
cs
scas
or
int
lahf
movs
inc
ja
in
fmulp
mov
fstp
jno
jb
fdivrp
adc
mov
scas
cmc
addr16
and
and
xor
ror
xchg
cwde
mov
(bad)
loope
and
mov
xchg
pop
mov
neg
adc
sub
aad
inc
mov
iret
and
sub
cwde
sti
pushf
or
(bad)
icebp
sbb
cmp
jge
xor
cmp
out
repz
pop
and
and
pop
or
push
pop
std
push
pop
add
pop
les
or
mov
sub
pop
ret
clc
sbb
xor
and
mov
pop
cmps
jg
jae
das
repz
jecxz
cmps
in
sub
ins
lock
icebp
call
mov
out
pop
xchg
jle
or
mul
xchg
fdivr
hlt
push
test
aas
popf
in
out
push
xchg
daa
repnz
sub
mov
std
fidiv
test
test
sub
shl
loop
out
pop
add
sub
dec
(bad)
jae
loop
repnz
add
ficomp
dec
cli
popf
add
jmp
push
dec
jge
jnp
dec
in
inc
in
jo
xor
sbb
(bad)
call
shr
aas
in
jle
ds
out
xor
pusha
mov
pop
stos
or
sahf
and
ins
pop
add
pop
jg
ins
inc
push
out
js
cmps
gs
xlat
mov
mov
jmp
pop
jge
push
cmp
xor
dec
cdq
and
pop
cmp
mov
popa
inc
mov
lods
cmp
jl
popf
jno
push
jmp
outs
mov
movs
cmp
dec
fiadd
sti
dec
repnz
(bad)
outs
pushf
fucomp
ss
or
ret
popa
push
scas
cmp
pop
hlt
pop
xlat
repz
cmc
mov
retf
and
clc
pop
call
add
icebp
sahf
mov
ins
jns
sub
mov
inc
xchg
fwait
rol
int3
not
fnstsw
jg
mov
out
mov
xor
mov
aas
push
lahf
push
jl
into
std
mov
pop
xor
mov
enter
xchg
push
ja
xor
mov
jle
jl
fbstp
cli
jns
(bad)
bound
cdq
sub
js
pusha
dec
imul
fadd
add
jno
mov
cmp
xlat
mov
out
and
cld
iret
cli
aas
shl
sub
cmp
iret
inc
mov
jmp
imul
jl
mov
aad
stc
mov
hlt
or
pop
js
rep
pop
cld
xchg
jne
pop
fst
jo
jecxz
stc
jle
sub
icebp
aad
cdq
cli
jecxz
fcmovu
mov
ror
add
cmp
out
idiv
sub
iret
(bad)
(bad)
test
js
mov
ds
adc
je
jg
imul
pop
movs
pop
ds
gs
adc
cld
cmp
daa
push
xchg
clc
xor
addr16
jp
test
loope
mov
push
loope
sbb
jp
mov
(bad)
jmp
das
neg
mov
std
jns
stc
mov
movs
test
mov
pop
stc
pop
mov
fild
pop
clc
cmps
outs
pushf
cli
fild
mov
imul
retf
icebp
into
xchg
out
arpl
cmc
add
outs
xor
jo
rcr
shl
jb
cmp
test
test
dec
cmc
mov
aad
fcmovu
mul
mov
cs
neg
jb
loop
mov
mov
jp
(bad)
stos
jg
cwde
cmps
adc
cmp
lahf
add
push
and
mov
(bad)
cmps
arpl
idiv
jmp
(bad)
ins
out
xor
mov
out
setl
push
mov
or
mov
cmps
mov
mov
repz
mov
lea
jp
push
dec
into
sti
cmps
rol
out
xor
cld
push
out
pop
call
sub
mov
(bad)
fcomi
sar
fsubr
inc
mov
ds
sti
out
imul
cmc
into
mov
inc
ins
sub
cmovb
rol
std
ret
inc
imul
cli
mov
stos
pop
pop
mov
hlt
aad
jne
mov
jmp
add
pop
and
movs
outs
push
mov
aad
(bad)
fs
jge
dec
aad
jne
push
or
jmp
(bad)
cmps
inc
mov
aad
jne
std
or
daa
and
fstp
and
cmp
pop
iret
adc
sbb
add
sub
sub
sti
in
and
and
sahf
dec
xlat
test
hlt
pop
sbb
pop
lahf
retf
sub
(bad)
cmps
cmps
adc
ret
jle
fsub
pop
push
adc
das
add
dec
pop
inc
xlat
mov
outs
aam
jmp
xor
jg
xchg
fcmove
(bad)
int3
dec
pop
push
jmp
cmp
(bad)
inc
test
jge
jmp
sub
call
ja
fmul
or
add
fucomi
or
ins
and
daa
mov
int
std
popa
repnz
(bad)
(bad)
push
test
in
jb
push
lock
repz
sub
(bad)
cmp
(bad)
jge
add
retf
xchg
inc
cwde
enter
xor
sub
inc
jge
jg
pusha
inc
(bad)
pop
jmp
mov
in
pop
(bad)
adc
ins
popf
out
pop
imul
xchg
ja
cmc
popa
push
mov
adc
lahf
ja
jge
mov
mov
and
into
in
cmp
cmp
xor
ficomp
mov
idiv
cmp
das
jmp
jl
mov
clc
mov
push
in
std
pusha
add
sub
std
xchg
outs
push
loop
mov
mov
hlt
dec
mov
push
lahf
push
xchg
shr
mov
pop
jg
xor
jg
leave
pop
loopne
jg
(bad)
in
push
pop
aad
push
xor
cld
cmp
sahf
addr16
int
mov
in
jge
jne
scas
push
(bad)
retf
mov
jne
dec
inc
mov
scas
inc
in
xor
mov
or
sti
fistp
sbb
nop
sti
cmp
or
sahf
int3
call
call
loopne
sub
mov
fdiv
pop
movs
push
xchg
push
jg
(bad)
stc
icebp
dec
aad
test
jb
mov
xor
pop
sub
aas
pop
inc
mov
fld
cmp
out
push
sbb
ds
retf
sbb
add
jne
cli
jg
xchg
aas
pop
in
aad
ds
or
jle
jae
fdivr
js
jnp
stos
jo
call
push
out
ud1
aas
hlt
xchg
(bad)
mov
ja
in
sbb
daa
(bad)
and
aas
dec
and
rcr
loopne
stos
stc
mov
mov
sub
mov
xchg
div
psubw
cmp
cmp
mov
jg
mov
cmc
imul
adc
das
xchg
and
xlat
inc
popf
dec
pop
aaa
sti
pop
or
cmps
and
popa
push
pop
mov
add
nop
jmp
(bad)
cs
push
dec
cli
std
xchg
js
jmp
jecxz
lahf
(bad)
sub
repnz
lock
push
inc
add
icebp
jne
pop
js
jl
mov
and
aam
aas
aas
pop
addr16
stc
out
lahf
pop
jmp
jg
xchg
add
jmp
lahf
dec
ja
fstp
mov
mov
fucomip
mov
lods
cmps
inc
jge
out
(bad)
not
dec
in
sti
test
jne
add
lock
pop
aas
jg
or
mov
ja
pop
repnz
mov
pop
out
and
sub
outs
loopne
jns
fidiv
int3
into
js
addr16
xchg
mov
xor
aaa
cmps
jg
push
popf
(bad)
push
les
mov
xchg
adc
push
push
in
adc
ins
sub
sti
cs
inc
sub
push
xchg
test
jmp
jp
sbb
ds
ds
push
retf
mov
cmps
repnz
imul
jge
or
pop
loop
daa
fs
sbb
test
int
sbb
add
mov
and
xlat
mov
inc
icebp
ins
mov
in
jp
cmc
icebp
push
pop
or
mov
jbe
mov
lahf
nop
imul
cmc
cli
push
hlt
repnz
inc
scas
data16
fs
pop
pop
(bad)
fs
ins
aad
push
ss
mov
and
loop
and
ja
mov
mov
in
mov
jl
(bad)
jge
xor
jae
imul
sbb
fist
and
mov
cwde
test
jl
fsubr
out
fist
fwait
popa
outs
sbb
inc
lods
shr
pushf
jb
xlat
push
pop
ja
cmp
movs
jmp
loop
lahf
(bad)
ret
in
popa
mov
fldcw
xchg
rol
cmp
dec
in
jbe
push
(bad)
sbb
xchg
sbb
ret
mov
xchg
ja
ja
stos
mov
sbb
jecxz
inc
nop
test
sar
and
fs
dec
cmps
jo
or
test
not
or
xor
push
sub
fsubr
retf
ror
je
cmc
es
imul
mov
hlt
in
sub
fdivp
std
xchg
leave
imul
outs
sbb
xor
(bad)
jmp
adc
inc
mov
mov
sub
fsubr
add
xor
fmul
push
into
fst
dec
or
js
dec
mov
loop
imul
leave
pop
mov
pop
loop
mov
cmps
adc
xchg
jo
mov
into
xor
or
fwait
add
loope
mov
mov
cmps
jns
enter
(bad)
aad
mov
mov
sbb
xchg
pop
das
pop
adc
les
out
ss
mov
adc
sub
and
dec
(bad)
(bad)
mov
jns
mov
add
sub
les
shr
ja
sti
outs
mov
pop
test
xor
xlat
ret
sub
test
lea
pushf
in
cdq
loope
ret
inc
jno
stos
xchg
aad
jb
xor
(bad)
addr16
jle
xor
dec
dec
cdq
sahf
pop
lahf
adc
lods
in
loop
xor
ss
addr16
or
imul
fldcw
out
pop
enter
inc
xchg
jecxz
jno
retf
adc
dec
sahf
ficom
clc
in
sub
(bad)
ins
sub
cmc
lds
push
ins
retw
dec
adc
xor
adc
js
jbe
xor
adc
xor
push
mov
scas
inc
jmp
in
push
popf
jecxz
cmps
test
shr
popf
jmp
shl
push
adc
fld
imul
sbb
lahf
aaa
dec
pop
shl
jle
sub
movnti
inc
jo
nop
xor
call
or
adc
mov
push
push
xchg
xchg
pop
jno
cmp
out
scas
fmulp
push
sub
daa
fstp
or
xor
cmp
out
arpl
xlat
ja
fs
dec
push
cmp
inc
mov
mov
nop
into
xchg
mov
icebp
ret
mov
(bad)
std
aad
pop
cwde
ss
mov
ret
popa
sbb
mov
xlat
mov
outs
cli
sbb
mov
inc
cs
popf
retf
into
jno
cdq
dec
sti
out
mov
(bad)
stos
std
and
mov
push
int3
mov
imul
xchg
jp
scas
cmp
arpl
lods
inc
div
stc
pop
dec
xchg
mov
dec
xchg
sbb
jmp
dec
imul
outs
pop
ins
fild
mov
jnp
(bad)
shl
and
push
pop
sub
call
ins
cmc
in
icebp
push
retf
inc
mov
or
push
or
sti
jmp
sub
aaa
call
stos
stc
add
cmp
mov
fst
data16
pop
sub
pushf
cmp
ficom
test
pop
xchg
adc
sub
jne
sub
repnz
xchg
fild
ss
jg
aas
dec
in
adc
xchg
xor
dec
push
dec
xchg
call
jmp
call
fnstcw
jmp
pushf
arpl
push
pop
adc
mov
push
es
jnp
mov
les
popa
xchg
pop
cmps
scas
sbb
and
cs
dec
xor
pop
pop
pop
sbb
xor
dec
mov
mov
fs
pop
jecxz
jno
aam
dec
outs
stos
jmp
sti
pop
sbb
sub
pop
adc
dec
cmps
cmp
movs
xchg
adc
mov
mov
mov
mov
mov
int
inc
sub
mov
lods
arpl
xchg
mov
fsub
or
mov
int3
jo
pop
push
push
scas
push
xchg
xchg
fisttp
(bad)
shl
mov
cmps
mov
mov
lds
push
cmps
bound
dec
inc
and
call
mov
aaa
ficomp
pop
pop
add
shl
outs
outs
repz
in
pop
aaa
xlat
je
into
xchg
les
jp
and
call
pop
inc
push
cmp
dec
leave
(bad)
leave
outs
cmps
jb
retfw
fnsave
sbb
mov
mov
jnp
jecxz
xor
mov
(bad)
jo
sbb
fmul
sub
push
sub
call
sbb
fadd
push
cli
push
xchg
popf
retf
out
(bad)
das
mov
push
lods
inc
xor
fist
sub
pop
sbb
mov
and
sahf
in
fisubr
xchg
sub
fucomip
ret
aas
retf
test
mov
adc
or
aas
mov
(bad)
push
outs
sbb
lods
pushf
xchg
dec
sub
test
test
push
and
sbb
pop
fimul
arpl
push
pop
mov
inc
and
push
icebp
int
xlat
retf
hlt
push
in
inc
mov
push
ds
movs
lea
mov
ret
jmp
add
dec
mov
jmp
cmp
jle
mov
cmp
jns
stc
sbb
scas
inc
push
mov
(bad)
stos
enter
push
scas
mov
mov
lock
adc
arpl
loop
xchg
data16
repz
xor
sub
inc
xchg
push
or
lods
in
adc
cdq
jl
xor
imul
out
sub
repz
and
movs
cmc
xor
dec
(bad)
(bad)
xor
out
xor
dec
jl
push
aam
jle
addr16
das
and
pop
xlat
push
in
hlt
shr
js
loope
mov
fld
fld
adc
push
popf
neg
push
xor
jmp
bound
mov
loope
adc
mov
in
imul
les
sbb
cwde
hlt
xchg
repnz
fiadd
stc
mov
ffreep
jb
fidiv
xchg
sbb
sbb
repz
(bad)
pop
out
hlt
jnp
xor
rcl
jp
jl
inc
das
repz
push
or
xchg
in
pop
xchg
mov
jbe
or
or
(bad)
mov
add
ins
jmp
inc
xchg
arpl
and
and
cwde
add
(bad)
nop
mov
stc
call
mov
xor
(bad)
xor
push
jno
icebp
add
xchg
popa
scas
mov
or
sbb
test
jnp
sbb
pop
in
push
rol
dec
sub
xlat
aas
gs
mov
jbe
lds
(bad)
xchg
inc
and
adc
(bad)
cmc
mov
inc
cmc
clc
outs
lds
mov
pop
fmul
je
mov
das
repnz
xchg
(bad)
sti
sbb
mov
cmc
xchg
out
nop
add
jae
mov
aam
daa
inc
sub
push
jecxz
aaa
dec
mov
in
loop
inc
mov
fnstcw
fisub
jns
popf
mov
xor
pop
nop
mov
and
jmp
xor
add
shr
call
cmp
ss
mov
mov
icebp
dec
cdq
ss
aam
xchg
das
sub
aaa
adc
lea
push
test
dec
inc
(bad)
and
push
ror
mov
rcr
and
dec
dec
loopne
pop
sahf
mov
imul
mov
sub
adc
into
addr16
pop
arpl
daa
jge
daa
cmps
fxch
xchg
pop
cmp
es
lahf
dec
mov
mov
aaa
fwait
ds
xor
cdq
xchg
sbb
mov
pop
xlat
jge
adc
call
cs
inc
sub
out
pushf
push
ins
push
xchg
mov
xor
test
js
sub
adc
outs
xchg
jg
nop
retf
jne
repnz
sub
mov
add
sub
ret
lods
es
mov
lea
jle
inc
and
lahf
jns
push
pop
rcr
cmps
in
enter
stos
xor
xlat
ja
pop
inc
push
cmc
in
or
xor
bound
pop
lods
xchg
mov
fimul
in
or
push
and
in
fadd
push
inc
data16
test
outs
(bad)
je
jne
and
outs
imul
jae
and
mov
mov
call
mov
mov
xor
aam
pop
jb
push
adc
dec
mov
sbb
scas
out
jl
aaa
ret
imul
call
mov
lods
or
xchg
cmps
xlat
ins
xor
cmp
popf
rol
mov
fmul
ja
js
jg
sub
jno
inc
test
retf
lods
xchg
push
je
daa
xchg
jecxz
or
dec
or
lods
mov
xchg
in
jns
daa
sbb
jmp
rol
cmp
xchg
push
mov
jbe
xchg
and
scas
mov
shl
in
push
jae
dec
inc
gs
mov
or
pop
push
and
jno
dec
push
inc
mov
pop
jo
mov
int
adc
in
push
and
sbb
sub
cmps
xchg
aad
rcl
hlt
adc
in
cmps
cld
ins
adc
lahf
scas
cmp
(bad)
fnstcw
into
fsub
dec
mov
adc
scas
xor
xchg
adc
mov
add
xor
mov
call
cmp
xchg
xchg
cmp
pop
jb
push
mov
out
adc
mul
cld
test
aad
je
mov
(bad)
shl
jmp
ins
add
mov
outs
push
sahf
xchg
fistp
call
loopne
sbb
sub
pop
or
mov
ins
loop
jbe
test
mov
cs
dec
mov
retf
in
xor
mov
push
xchg
xchg
push
popf
push
(bad)
sbb
or
xchg
push
or
cmp
loope
add
imul
xor
cmp
daa
and
shr
sbb
push
clc
pop
push
pop
mov
xchg
or
jbe
mov
ss
push
arpl
es
add
(bad)
leave
mov
mov
js
xchg
les
mov
sub
jb
or
sbb
or
mov
shl
jnp
push
mov
repnz
icebp
pop
aaa
or
xor
add
cld
std
js
shl
imul
adc
(bad)
mov
hlt
and
and
sbb
jo
pop
jle
mov
sar
daa
push
ins
pop
aas
adc
pop
push
jnp
xchg
adc
cmp
cmp
pop
push
mov
push
xchg
mov
xchg
xor
jmp
cld
(bad)
xor
retf
and
rcr
test
pop
dec
xchg
rcl
pop
call
imul
aaa
stos
pop
mov
aad
int
mov
sbb
xor
fidiv
out
xor
xchg
sub
arpl
xchg
mov
movs
mov
mov
rcl
popa
jne
and
add
sub
fs
fisub
xlat
jmp
push
fld
call
push
popf
test
inc
jb
out
xchg
in
stos
in
push
mov
adc
loop
cdq
outs
rcr
retf
xor
inc
ret
push
inc
xlat
into
stos
jle
pop
mov
jno
jae
in
pop
push
or
cmp
data16
sbb
cmp
mul
jp
fsub
les
inc
jae
jno
retf
jbe
popa
test
scas
ficomp
mov
mov
jae
aam
mov
sbb
jns
or
jne
lea
adc
jns
rcr
adc
mov
mov
pop
imul
add
jmp
into
aaa
adc
and
ficom
dec
xchg
push
(bad)
aam
popf
xchg
mov
scas
sahf
xchg
data16
mov
test
inc
xchg
div
int3
mov
fcomp
inc
xchg
iret
add
adc
add
mov
mov
xor
mov
inc
jge
push
(bad)
jge
and
(bad)
cmps
dec
pop
mov
dec
les
in
(bad)
icebp
fisubr
neg
mov
cmp
movs
stos
xor
mov
cmps
mov
jmp
jmp
mov
pop
cmp
mov
add
adc
mov
or
out
scas
sub
push
push
xor
unpckhps
mov
bound
scas
(bad)
rcr
sub
cmps
jne
int3
fcomip
jmp
(bad)
clc
push
inc
inc
sahf
xchg
push
xchg
xchg
cmp
push
inc
or
into
(bad)
sub
sbb
xor
jle
ins
xor
xor
iret
xchg
mov
inc
sub
test
lods
and
mov
arpl
pop
in
sub
push
movs
iret
lds
jp
test
test
scas
adc
dec
or
sbb
push
cwde
mul
push
outs
xor
stc
mov
shl
movs
inc
sub
mov
cmp
outs
ret
out
inc
je
addr16
push
mov
ja
pop
push
jae
not
jmp
movs
sub
sub
cmp
mov
das
shl
cmps
mov
rcl
in
jecxz
pop
aas
cs
test
fistp
sub
jmp
lock
jno
xlat
jmp
jae
aaa
jae
sub
xchg
xchg
mov
popf
aam
mov
out
dec
in
mov
es
jmp
xchg
sub
(bad)
sub
pop
sub
(bad)
or
jge
adc
hlt
stc
add
or
mov
aam
stc
outs
sbb
sub
mov
pop
xchg
fsubr
das
lea
push
stc
jbe
dec
in
ror
ror
jmp
jg
inc
add
push
pop
add
or
sub
push
(bad)
push
pop
stc
inc
(bad)
ins
jno
test
test
cmp
frstor
movs
add
inc
cwde
fisubr
shl
rcl
mov
fisub
ins
outs
mov
dec
mov
outs
movs
dec
and
hlt
ins
sub
enter
and
adc
push
xor
xor
jmp
sub
pop
jge
retf
jo
jmp
cmc
inc
sub
add
sub
inc
sub
jle
mov
mov
jbe
cmp
imul
sbb
les
add
repnz
jmp
scas
sar
xor
aas
(bad)
in
aaa
ficom
test
pop
or
sbb
mov
shrd
icebp
push
push
out
dec
dec
cmp
mov
cdq
cli
movs
and
daa
dec
lods
cmps
dec
pop
lods
pop
mov
cmp
call
jae
(bad)
sbb
dec
mov
pop
sub
and
pop
fsubr
dec
cmc
jnp
sub
retf
pop
inc
cdq
pop
push
mov
and
scas
sahf
cmp
in
jp
aaa
adc
xchg
(bad)
movs
mov
cmp
jle
push
stos
movs
push
out
dec
js
test
adc
or
neg
push
dec
imul
xchg
mov
push
xchg
push
imul
outs
popa
push
xchg
mov
push
inc
inc
enter
mov
xchg
into
push
bound
cwde
ja
xor
lock
mov
sar
sbb
add
loop
xchg
into
ret
les
das
pop
int
aam
cdq
xor
popf
bound
adc
icebp
or
(bad)
out
neg
das
(bad)
xchg
dec
aas
and
jmp
nop
shl
je
cwde
pop
iret
jl
sbb
or
sub
int3
dec
adc
cli
ins
mov
fsub
retf
dec
pop
inc
pop
inc
div
aam
imul
out
sub
lods
xchg
outs
dec
xchg
pop
iret
adc
xor
and
imul
(bad)
mov
daa
or
pop
test
jle
inc
xchg
adc
call
push
int
(bad)
jb
or
or
xchg
jns
dec
mov
rcl
test
movs
inc
outs
mov
jb
xor
in
shr
ret
push
stos
xchg
in
sub
push
cmp
aaa
dec
push
sbb
dec
and
mov
jecxz
aad
retf
retf
mov
sbb
fsubr
push
dec
aam
mov
out
sbb
in
mov
call
jl
sbb
jmp
cdq
xchg
mov
and
stos
pop
sub
fsubr
repz
dec
scas
aaa
mov
retf
out
jbe
out
jg
(bad)
push
cmp
faddp
das
outs
frstor
or
add
push
cmc
cld
pop
retf
std
cmp
test
shl
sbb
cld
jl
add
xchg
fidivr
repz
pop
xchg
xor
xchg
xchg
in
popf
fidivr
fsubr
xor
jmp
jecxz
xlat
lods
movs
hlt
xchg
dec
call
mov
pop
(bad)
ja
sti
cmp
inc
lea
(bad)
pushf
lods
pushf
and
mov
pop
test
push
push
sbb
xchg
sub
jo
iret
xor
call
stos
and
push
and
sbb
(bad)
test
xchg
xor
xchg
inc
or
sbb
sbb
push
jae
jle
mov
sub
jb
jmp
in
repnz
mov
out
sbb
test
retf
or
adc
pushf
sbb
mov
pop
call
fcmovu
popf
jmp
movs
push
inc
pop
(bad)
mov
xor
stos
xor
xor
push
pushf
mov
daa
and
sbb
loope
sbb
shl
mov
jge
dec
mov
jae
mov
bound
sbb
xor
pop
ret
loopne
inc
rcl
mov
in
(bad)
inc
xchg
mov
mov
mov
mov
call
les
cli
cli
sar
push
push
mov
lea
mov
dec
push
pop
or
xchg
push
adc
fst
aas
sti
sbb
mov
xchg
cmp
lods
ins
fcomp
pushf
or
add
cli
je
outs
scas
xor
ins
shr
jmp
ret
cmp
sbb
imul
icebp
adc
sbb
xor
fnstenv
out
mov
xchg
mov
cmp
aas
fs
fs
fst
scas
xchg
int
xchg
pushf
int
pushf
mov
or
mov
cld
sti
cmp
and
pop
and
lds
mov
nop
mov
call
mov
cmp
adc
push
js
xor
mov
and
mov
sbb
xor
cmps
arpl
gs
inc
icebp
les
xor
pop
xor
xor
out
imul
outs
lea
movs
popf
outs
xchg
xchg
inc
mov
bound
popa
popa
daa
jne
jp
adc
scas
xchg
xchg
ja
int
xlat
fcomp
idiv
fcmovnu
stos
mov
into
xor
xchg
in
jmp
es
push
fcom
shr
ins
repz
fisttp
dec
mov
ror
popf
fcmovnu
outs
xor
cdq
fidiv
jo
stos
test
sbb
test
pop
dec
dec
cmp
dec
inc
test
jne
pop
outs
and
je
sbb
dec
push
push
daa
cmp
lds
int
repnz
jecxz
jo
inc
adc
test
or
push
(bad)
cmp
stos
pushf
xor
or
mov
fucom
lods
push
add
inc
enter
sub
in
pop
jbe
sub
call
sbb
sbb
cs
icebp
ja
movs
mov
jbe
xor
or
mov
imul
aaa
jnp
call
sbb
lds
push
xor
mov
mov
sub
je
retf
xchg
(bad)
imul
stc
jl
dec
pop
mov
mov
ret
in
sbb
lods
pop
das
push
xchg
das
ret
inc
sbb
hlt
push
push
daa
adc
fild
jbe
cmp
xchg
pop
ret
add
shufps
and
or
sbb
xor
push
js
xor
mov
or
mov
dec
(bad)
jo
add
inc
add
sbb
or
lock
inc
sub
retf
or
add
inc
inc
ror
xor
mov
loopne
add
or
or
mov
adc
hlt
rol
push
pop
pop
add
sbb
add
mov
add
adc
or
enter
sub
cmp
mov
inc
adc
push
lock
add
loopne
or
jl
add
movs
out
loopne
add
mov
popa
cmp
int
or
ret
shl
ret
aaa
cwde
and
or
jle
and
or
inc
add
or
arpl
and
sbb
call
js
inc
mov
and
xor
or
sub
push
mov
add
addr16
or
pop
or
lock
in
pusha
mov
inc
or
lahf
stos
add
add
dec
cwde
ins
xchg
and
shl
add
or
test
retf
adc
jno
hlt
or
or
pop
add
bound
xor
or
or
retf
mov
shl
nop
add
(bad)
jmp
pusha
mov
push
js
xor
mov
or
mov
dec
(bad)
jo
add
inc
add
sbb
or
lock
inc
sub
retf
or
add
inc
inc
ror
xor
mov
loopne
add
or
or
mov
adc
hlt
rol
push
pop
pop
add
sbb
nop
mov
add
adc
inc
or
pusha
add
sub
or
outs
mov
sbb
push
push
shl
add
add
and
movs
add
loopne
add
or
mov
popa
or
shr
rol
ret
and
and
add
add
inc
add
and
nop
and
sbb
call
adc
pop
or
xor
sbb
test
push
push
sbb
mov
add
adc
scas
fs
mov
mov
data16
lahf
add
add
xchg
ins
rol
adc
sub
test
and
sbb
test
inc
and
or
inc
bound
add
push
or
adc
add
push
rcl
nop
mov
inc
adc
adc
xchg
pop
je
ret
adc
pop
inc
inc
xor
mov
add
shl
add
sub
js
mov
loope
push
or
sbb
add
add
add
adc
pop
sbb
ret
or
xor
pusha
add
jb
pusha
rcr
or
add
add
xlat
cmp
jbe
ror
ret
add
or
mov
sbb
adc
and
or
popa
pusha
or
imul
or
jb
xchg
ret
add
enter
and
cmp
inc
xor
add
and
sub
mov
add
inc
adc
or
adc
ret
test
inc
adc
push
inc
ret
sub
push
mov
nop
or
movs
data16
pop
xchg
aaa
pop
pusha
mov
enter
add
lock
les
adc
mov
test
mov
add
sbb
add
adc
sbb
js
inc
sub
push
cdq
loope
push
or
pop
pusha
add
dec
add
adc
inc
inc
sub
adc
mov
pop
fchs
rol
xchg
or
push
or
add
and
lock
es
call
or
jecxz
pop
lods
add
sub
into
loopne
fdivr
xchg
les
int3
test
out
xor
sbb
sahf
adc
imul
jmp
sub
cs
pop
xor
pop
xor
jmp
inc
sbb
xlat
mov
rcl
iret
push
cmp
jl
les
lahf
cmps
jae
in
add
inc
cmps
data16
inc
xor
mov
push
(bad)
push
es
push
pop
cmp
cmp
mov
pop
imul
mov
es
pop
sbb
ja
mov
imul
push
out
cld
push
mov
pop
xor
js
pop
cmp
sub
aad
adc
adc
sbb
clc
fadd
and
lahf
mov
xor
pop
jae
add
rol
jmp
mov
(bad)
ja
sub
pop
dec
jge
mov
lock
mov
jg
stos
and
mov
and
data16
mov
adc
int
(bad)
dec
addr16
loope
mul
or
jle
inc
(bad)
dec
outs
fsubrp
imul
(bad)
scas
mov
dec
jmp
add
ins
nop
loope
xchg
mov
js
(bad)
push
(bad)
jge
(bad)
fs
movs
cmp
sbb
(bad)
mov
push
sub
fisttp
xor
movs
sub
mov
mov
pop
ja
pop
stos
dec
ins
loope
mov
retf
imul
jp
push
adc
add
mov
pop
int
ins
test
inc
outs
adc
aas
mov
xor
(bad)
push
adc
cwde
pop
pop
fstp
imul
int
and
fnstenv
jne
mov
fsub
xor
mov
mov
adc
inc
or
test
cmp
xchg
jecxz
mov
xchg
push
jge
retf
mov
mov
push
mov
add
(bad)
sub
call
mov
adc
rcr
out
js
push
or
imul
data16
inc
ret
out
jne
not
push
dec
imul
mov
mov
movs
xchg
mov
push
xor
sub
dec
mov
mov
xchg
cmp
clc
sub
out
xchg
(bad)
jae
adc
sub
(bad)
dec
jbe
inc
mov
fincstp
sub
repz
jbe
xor
mov
pusha
imul
lds
cdq
repz
in
pop
ret
jbe
mov
mov
sub
popa
jno
adc
enter
mov
push
mov
loope
push
xor
shl
cmps
sub
aaa
das
sub
repnz
ja
stos
pop
pop
sub
push
jmp
xchg
fisub
jno
pop
js
mov
lahf
add
jmp
xchg
and
(bad)
push
dec
pop
push
sbb
outs
push
ja
sub
mov
cmps
xor
mov
daa
test
in
fnsave
pop
retf
retf
lahf
popa
jmp
sub
test
imul
and
pop
aad
(bad)
inc
jge
ret
pushf
xchg
sbb
and
adc
or
or
iret
mov
sti
inc
ds
mov
cwde
int
dec
dec
jb
push
mov
sbb
push
call
es
add
loop
mov
jmp
pusha
out
jbe
in
dec
jb
jp
jecxz
push
test
scas
fs
or
jae
sti
das
mov
cmps
les
fwait
jl
push
ds
adc
mov
xor
mov
sar
push
repz
ficomp
into
lea
push
pop
jne
(bad)
mov
sbb
adc
inc
(bad)
mov
push
inc
in
mov
leave
les
jae
mov
or
int3
cmp
retf
mov
sub
arpl
outs
jbe
jl
adc
jmp
pop
pop
and
rcl
not
mov
aad
add
mov
jno
xor
ja
mov
cmp
retf
jg
(bad)
and
sbb
jmp
fnstcw
inc
mov
push
xor
inc
adc
mov
lahf
gs
cld
stc
push
push
(bad)
test
jmp
mov
add
ss
push
fistp
add
push
ja
pop
mov
mov
ss
mov
jae
mov
mov
lods
jmp
xchg
xchg
push
push
rcl
xchg
adc
push
ficomp
jo
mov
es
push
aaa
pop
xlat
inc
ja
rol
test
inc
xor
stc
ror
push
sub
sub
inc
mov
sub
sub
sbb
or
les
mov
xor
sbb
mov
cmp
cmp
ds
inc
inc
inc
dec
dec
dec
dec
push
dec
push
push
pop
push
pop
pop
pusha
pop
bound
ins
push
outs
adc
call
add
int3
xchg
out
shl
or
fs
je
mov
push
sub
xlat
lods
ins
dec
cmps
es
fwait
out
ja
mov
loopne
push
jno
aad
mov
shl
ja
sar
mov
lock
xor
cmps
pop
daa
push
cmp
and
mov
sub
sub
sub
fs
rcl
xor
mov
(bad)
pop
mov
std
mov
(bad)
shl
xor
imul
aas
aas
retf
and
jnp
lods
sub
stos
xor
and
shl
pop
push
daa
scas
mov
xchg
dec
test
mov
or
lahf
out
pop
fsubr
cmc
mov
jae
popf
inc
(bad)
cmp
aad
inc
fwait
(bad)
call
sbb
mov
arpl
aam
icebp
ins
cld
addr16
jmp
xor
cmps
loope
xor
jno
ins
inc
mov
mov
sub
ret
fadd
loopne
mov
dec
and
pop
jmp
sub
push
dec
into
(bad)
enter
sbb
mov
nop
dec
dec
mov
mov
loope
aam
clc
pop
push
or
sub
cmp
pushf
mov
enter
or
outs
movs
xor
shr
dec
sub
iret
les
inc
fnsave
ins
daa
aad
es
push
scas
cdq
outs
rol
retf
sbb
test
dec
or
rcl
(bad)
fldenv
dec
cmp
mov
test
ret
dec
ds
js
cmp
xor
out
aaa
fwait
push
mov
sar
stos
mov
mov
aaa
or
dec
mov
dec
pop
jecxz
fdiv
aaa
sub
xchg
jle
(bad)
push
movs
push
xchg
aam
add
and
js
out
push
cdq
inc
mov
sub
push
mov
cmps
sbb
jnp
scas
enter
or
pop
xchg
mov
ror
push
adc
shl
jge
push
and
js
jmp
dec
aas
or
mov
inc
adc
jle
inc
cmp
push
jl
fs
daa
pop
pusha
jb
jg
loop
mov
cdq
mov
(bad)
mov
mov
loopne
pop
jae
dec
outs
lds
mov
xlat
dec
repnz
aad
sub
imul
daa
daa
fwait
cmp
cdq
inc
dec
mov
and
pushf
jno
jnp
pushf
cmovg
int3
sub
(bad)
pop
xor
mov
sub
lods
inc
fst
xchg
pusha
mov
aas
mov
xchg
xchg
xor
std
dec
dec
in
dec
inc
test
outs
jmp
int
add
adc
mov
inc
movs
das
iret
mov
test
cdq
xchg
sub
xchg
xor
cmp
movs
leave
and
fs
mul
jno
shl
dec
hlt
aaa
dec
call
pop
xor
out
dec
jnp
out
push
enter
dec
ss
sbb
push
aaa
cmp
sti
add
jnp
cmp
mov
xchg
push
fistp
je
stos
or
or
int
xchg
fstp
pop
dec
out
fist
xor
mov
leave
xlat
mov
jns
je
in
xor
cmp
shl
jbe
or
push
popa
dec
adc
add
push
test
nop
sub
dec
mov
sub
inc
push
and
int
into
stc
out
pushf
pop
addr16
jnp
dec
(bad)
pop
icebp
jns
dec
fwait
xchg
cs
(bad)
out
(bad)
push
movs
and
pop
out
ret
dec
cli
inc
loop
cmc
cld
inc
add
inc
and
or
pusha
xchg
jns
call
pop
and
xchg
aad
fstp
and
mov
xlat
add
fistp
rcl
or
pop
loopne
sbb
pop
push
sbb
(bad)
jbe
sub
add
mov
inc
pop
sbb
mov
inc
xor
test
(bad)
data16
sar
outs
xchg
add
sub
lock
lock
mov
xchg
inc
clc
adc
rcl
lds
inc
push
mov
addr16
mov
ror
adc
mov
sub
(bad)
cs
push
fwait
adc
mov
data16
psubusb
mov
push
jle
stc
pop
mov
cmp
cmp
mov
gs
leave
jmp
(bad)
dec
jo
xlat
push
(bad)
arpl
aam
scas
inc
aam
xor
dec
shl
aad
pushf
jmp
lahf
mov
popf
fs
mov
pop
mov
cmps
jmp
cmp
jmp
inc
(bad)
dec
mov
mov
in
adc
pop
idiv
cmp
push
pop
jmp
je
jmp
pop
jecxz
cmp
lea
jle
shl
stos
adc
ins
inc
cmp
ds
cli
sub
jle
inc
imul
dec
rcr
dec
fwait
push
mov
and
rol
jmp
jg
pusha
adc
inc
test
inc
xchg
sub
rsm
xchg
loopne
push
in
pop
pop
xchg
lahf
xor
sub
(bad)
pop
push
imul
aad
clc
dec
int3
sub
push
adc
popf
push
lahf
loop
int3
into
je
movs
inc
arpl
xchg
pop
mov
jge
lods
mov
rcr
jp
adc
sub
gs
inc
aam
scas
mov
mov
out
add
mov
push
inc
xchg
add
cmp
ror
inc
loop
mov
dec
pusha
call
dec
pop
push
xor
icebp
push
push
inc
or
lock
imul
and
aaa
add
dec
lods
pop
movs
ror
jecxz
sub
mov
std
bound
fwait
pushf
pop
popf
xor
add
add
xchg
cmps
imul
sbb
adc
sub
push
ds
(bad)
xor
(bad)
nop
dec
pop
push
div
sub
jmp
imul
jae
pop
push
inc
mov
jecxz
xchg
in
sahf
ror
cdq
mov
xchg
fs
jb
mov
jmp
mov
bound
int3
jmp
or
cmps
dec
jecxz
movs
xchg
adc
fwait
fwait
sbb
cmps
rcl
ficomp
sbb
fwait
test
or
mov
xchg
ror
loopne
jno
mov
pop
cmp
mov
out
pop
movs
fs
pop
add
jne
outs
pop
cmps
lods
aad
mov
daa
lods
sub
xchg
mov
enter
pop
frstor
js
and
fisttp
test
dec
je
gs
or
call
push
dec
cmc
mov
mov
push
cmp
aaa
pop
pop
aad
or
sbb
push
xor
xor
dec
test
xor
sbb
cmps
aaa
lds
pusha
cld
(bad)
scas
(bad)
stc
std
pop
ret
inc
xor
popf
cmc
lds
out
out
push
cmps
rcl
xchg
dec
dec
mov
and
(bad)
cmp
jb
(bad)
mov
pushf
out
sub
div
hlt
push
mov
popa
xor
xchg
jl
jno
mov
retf
jo
int3
dec
xchg
push
sub
pop
test
xchg
add
shl
push
push
(bad)
mov
outs
stc
xor
lea
xor
dec
cmp
mov
sbb
adc
js
adc
sub
popf
xchg
outs
mov
inc
mov
cmc
mov
dec
and
push
jae
ins
mov
adc
enter
sbb
sub
mov
dec
inc
repnz
pusha
cmp
mov
add
nop
ds
int
into
jecxz
adc
mov
push
mov
sahf
xchg
adc
push
rcl
dec
pop
shr
lock
pop
enter
mov
js
jae
inc
pop
aaa
int3
or
shl
xor
cs
call
sub
in
jo
mov
arpl
daa
test
xor
je
(bad)
call
in
in
mov
pusha
aaa
jecxz
pop
pop
inc
push
xchg
imul
mov
inc
or
rcr
pop
push
test
test
xor
xor
dec
sbb
sub
inc
push
jmp
cmp
rcr
pushf
outs
jnp
push
hlt
fwait
hlt
xor
imul
int
jbe
adc
and
outs
mov
sub
(bad)
mov
clc
rol
adc
adc
jg
push
inc
pop
mov
icebp
cmp
stc
ret
jo
cmp
add
push
retf
cwde
int
mov
cmp
mov
mov
cmp
out
cmc
inc
iret
xor
ins
mov
in
or
fcmovnbe
nop
shl
pop
mov
dec
mov
imul
push
adc
ret
xor
sbb
jp
sti
fmul
sub
in
fcom
inc
jg
(bad)
mov
shl
add
cwde
cmp
test
cmp
mov
call
adc
sbb
and
xor
sbb
(bad)
lea
mov
or
imul
aas
mov
lahf
mov
movs
jae
out
and
les
icebp
pop
push
sbb
mov
fadd
shl
mov
movs
cmp
jmp
and
add
retf
cmp
pop
jno
fmul
test
repnz
jmp
sub
sub
lods
test
(bad)
xor
loop
shr
add
pusha
or
call
xor
mov
retf
js
pop
push
push
and
aas
adc
xor
outs
xchg
call
xor
jno
mov
and
mov
ins
inc
fist
adc
aaa
lock
push
xlat
nop
into
adc
fdivrp
inc
in
test
loop
popa
add
ficomp
jg
sub
jg
dec
jno
push
or
lock
sbb
inc
xor
mov
pop
inc
loop
or
mov
or
adc
xor
sti
mov
dec
retf
dec
pop
add
and
les
jne
xchg
cwde
clc
clc
push
push
js
jg
mov
xchg
ret
and
pop
pushf
loop
mov
retf
push
fmul
sbb
xor
cmp
jb
neg
jmp
xchg
out
cld
jecxz
xchg
stos
aas
outs
jae
dec
inc
out
cld
ja
push
sbb
add
ror
and
xor
rcr
and
test
ror
setl
or
jl
mov
aaa
or
repz
mov
mov
mov
xchg
sub
rcr
in
data16
call
js
cmp
sub
scas
mov
out
dec
add
cmp
jmp
cmp
ja
inc
je
adc
dec
inc
std
fist
push
lods
data16
sbb
imul
aaa
mov
jp
out
test
mov
bound
jne
jb
clc
xchg
xchg
into
aaa
cmps
test
neg
mov
aas
movups
pop
daa
and
cld
lods
ds
ins
fistp
out
nop
or
and
ja
sbb
call
stc
leave
and
in
cmp
aas
fcomp
fmul
das
pop
add
cld
and
xchg
pop
das
test
push
dec
test
add
repz
push
mov
fwait
mov
jp
push
xor
dec
fidiv
inc
adc
shl
mov
jae
xchg
dec
cs
mov
fsub
es
mul
sahf
gs
push
aaa
repnz
fld
sub
pop
js
ret
in
add
and
mov
push
push
push
push
pop
movs
out
jge
push
imul
movs
adc
xchg
mov
mov
sbb
daa
adc
loope
pop
inc
out
cmps
sbb
mov
inc
adc
in
jo
aam
hlt
lods
and
mov
packsswb
and
hlt
inc
jo
ja
adc
pop
imul
in
inc
pop
and
(bad)
jmp
call
xchg
mov
xchg
pop
pushf
aam
not
rol
lods
lods
and
mov
aas
pop
pop
sti
sbb
xchg
dec
mov
inc
adc
or
push
xor
mov
adc
int3
jno
push
call
loop
(bad)
cmp
not
and
js
push
cmc
sub
jne
jno
test
xchg
retf
je
mov
test
out
pop
aas
cmps
push
adc
and
ins
repnz
mov
scas
and
mov
bswap
shl
mov
adc
aad
xor
or
jecxz
test
movs
(bad)
loop
enter
sbb
push
jbe
stc
icebp
sar
mov
inc
loopne
mov
mov
sbb
iret
jp
add
out
retf
out
dec
inc
jge
jne
cdq
pop
call
dec
enter
cld
addr16
jmp
or
jge
push
movs
jge
push
fimul
mov
push
rep
jbe
or
popa
dec
test
retf
call
imul
mov
jb
ss
sub
sub
jne
mov
adc
(bad)
sbb
movs
sti
xor
adc
fs
xor
dec
adc
sbb
aas
xor
neg
xchg
sub
das
popa
in
out
push
mov
or
sbb
sahf
mov
sti
rcr
cmp
cld
add
movs
shl
retf
jne
movs
fwait
inc
cdq
and
out
xlat
addr16
pop
and
and
mov
sbb
js
adc
jnp
adc
mov
scas
(bad)
xchg
xchg
cmc
or
scas
repnz
aad
in
xor
jne
dec
mov
pop
int3
xor
arpl
sbb
inc
in
xor
xor
adc
fs
or
mov
push
movs
scas
call
cmps
pusha
scas
(bad)
jl
fadd
lock
ins
mov
sbb
out
mov
call
cdq
xor
pop
sub
sahf
int3
dec
fs
psraw
cs
adc
xor
loop
jecxz
pop
adc
pop
inc
pop
ds
retf
jg
(bad)
repz
ret
into
shr
sbb
arpl
xchg
mov
data16
dec
fistp
out
in
adc
sahf
popa
pushf
sub
mov
sbb
fiadd
xchg
jg
ins
ss
dec
bound
and
jbe
xor
mov
fisubr
mov
and
push
and
arpl
addr16
in
jno
jnp
mov
push
stos
sub
in
sbb
lods
dec
arpl
pop
add
mov
enter
out
mov
retf
(bad)
in
xor
or
pop
ja
mov
pop
dec
jmp
sbb
repnz
out
in
jg
push
cmps
loopne
aaa
cmc
sti
sub
add
jbe
xor
in
add
and
jb
(bad)
(bad)
adc
leave
mov
add
xchg
or
xor
popa
inc
pop
pop
lds
cli
adc
add
aas
imul
sbb
or
sub
sub
mov
inc
imul
and
sub
jns
arpl
sbb
into
add
ja
pop
pop
xchg
mov
xchg
fsubr
loop
xor
jecxz
shl
test
mov
in
or
pop
and
sub
popf
std
test
sub
fisubr
inc
mov
cmp
cs
inc
push
xchg
repz
mov
scas
test
xor
cmp
lds
cmp
fyl2xp1
sub
jecxz
lds
stc
ds
mov
add
pop
and
add
add
nop
aaa
shr
jecxz
jnp
jb
xlat
lea
and
inc
add
jno
loop
inc
adc
repnz
js
enter
sbb
pop
and
pop
pop
jb
cmp
cmp
add
or
mov
loop
inc
inc
inc
or
and
push
fmul
lock
outs
add
cmp
inc
inc
inc
or
and
push
fmul
shl
lds
sbb
xchg
jo
repz
jmp
jl
xchg
(bad)
(bad)
push
cmp
aas
push
push
mov
movs
repz
pop
loop
shl
mov
stos
(bad)
je
call
inc
imul
fwait
dec
ins
pop
jle
or
mov
jae
lock
sub
add
(bad)
mov
in
mov
cld
dec
test
cmp
ja
outs
es
cmp
(bad)
adc
or
or
fs
test
mov
push
add
mov
dec
jge
pop
push
jb
mov
push
dec
mov
fxch
cwde
cmp
in
fidivr
jge
lods
xchg
sub
dec
popf
jmp
mov
sti
ficom
aad
cmp
sub
gs
inc
cmp
lahf
pop
popf
dec
jp
mov
jp
add
retf
push
retf
add
xchg
jb
push
or
jmp
fcomp
ds
je
or
call
and
rcr
ds
or
mov
push
(bad)
mov
cmps
in
adc
xchg
enter
ret
gs
addr16
fidiv
push
mov
inc
lea
stos
rcl
test
push
shr
js
xor
sub
loopne
sbb
cdq
inc
cmp
cs
inc
and
rol
int
(bad)
pop
je
push
inc
and
mov
sub
ret
repnz
push
mov
in
int
movs
adc
je
cmp
mov
imul
dec
xchg
pop
popa
mov
mov
(bad)
jns
je
fdiv
cdq
rcl
sahf
test
pusha
mov
mov
xchg
cmp
jns
sub
xor
fs
mov
js
call
push
jg
mov
mov
push
mov
nop
cmovae
lods
outs
lods
or
mov
popa
scas
pusha
xor
dec
aad
test
add
pop
jge
(bad)
(bad)
lods
cmpxchg
add
cs
rcr
push
movs
div
jp
and
inc
(bad)
retf
push
in
mov
int3
outs
mov
test
(bad)
and
(bad)
add
and
jnp
and
push
mov
mov
or
mov
imul
jno
movs
mov
sbb
leave
push
clc
add
je
ins
mov
mov
jo
aas
sar
mov
pop
or
inc
push
cmps
scas
push
stc
sbb
(bad)
jb
fwait
ss
add
sbb
add
mov
rcr
retf
mov
ja
lds
int3
cmp
loope
nop
bound
cmps
xchg
jb
push
fsub
call
shl
mov
or
push
inc
ds
in
mov
jl
and
test
or
fisttp
inc
sub
lahf
adc
mov
loopne
es
repz
cmp
add
(bad)
mov
xchg
adc
push
push
xor
adc
or
ret
cdq
cmp
test
rcl
je
inc
cmp
xor
mov
pop
loope
pop
mov
cli
retf
mov
lahf
nop
sub
arpl
xor
(bad)
nop
and
pop
add
inc
inc
mov
shr
stc
out
in
jb
leave
mov
call
cld
leave
dec
and
cmps
or
(bad)
test
test
enter
xlat
lods
into
fisubr
popa
cmc
cmps
push
dec
push
add
push
pop
cmp
adc
inc
dec
or
pusha
pop
mov
retf
sub
adc
sub
pusha
xchg
ds
and
cmps
retf
adc
stos
xor
lods
dec
dec
mov
and
int3
iret
xchg
mov
adc
mov
adc
or
xchg
sub
pop
pop
mov
sub
add
pusha
sub
xor
sub
xlat
inc
push
retf
out
pop
rcl
(bad)
jb
repnz
stc
jno
je
add
push
add
popa
int
mov
dec
push
jmp
scas
aad
or
fnsave
add
dec
push
(bad)
lahf
dec
mov
sbb
retf
imul
push
cmp
fdiv
fbstp
adc
sbb
ffree
sbb
mov
sar
mov
pop
xchg
xor
in
mov
(bad)
sub
daa
mov
aaa
fistp
cli
mov
je
enter
cli
ins
xor
xor
(bad)
jns
pop
push
arpl
aad
mov
adc
mov
cmp
push
push
add
in
aas
ins
push
sub
mov
lds
call
mov
add
add
mov
pop
or
and
mov
popf
lea
mov
push
cwde
out
test
sub
mov
and
cmps
das
(bad)
lea
pusha
or
dec
cli
sbb
sahf
(bad)
sbb
jbe
xor
rcr
rcl
fs
mov
adc
pop
retf
jmp
jmp
mov
(bad)
retf
cmp
sub
mov
xor
sbb
pop
in
lock
call
sbb
mov
lds
or
push
xchg
cmps
push
and
sbb
aad
cmps
pop
add
mov
les
cmp
inc
dec
mov
int
dec
inc
cs
loope
repnz
cmp
jge
dec
cmp
mov
ret
jl
pop
mov
in
cwde
or
jge
dec
rcl
push
xor
sub
sub
sti
mov
mov
mov
adc
loopne
push
push
cmp
shr
mov
iret
lods
mov
mov
mov
inc
fdiv
ss
call
iret
xor
inc
mov
pop
mov
xor
cld
(bad)
pop
and
dec
(bad)
xchg
stos
cmp
call
inc
aas
push
cmps
push
mov
je
jo
mov
fdivr
sub
sar
(bad)
cmp
sub
jne
aas
and
push
leave
enter
or
in
add
mov
push
popf
xchg
mov
sbb
ss
push
add
mov
push
xchg
cwde
rol
inc
aad
adc
(bad)
stos
xlat
int
clc
stos
call
inc
loope
pop
cmc
push
in
lahf
cmp
cwde
fld
add
test
movs
clc
xchg
idiv
(bad)
je
sbb
adc
add
inc
scas
mov
stos
movs
outs
mov
mov
lock
cmp
dec
dec
imul
jmp
pop
sub
xor
shl
outs
sbb
sbb
aam
clc
mov
adc
push
(bad)
ret
or
(bad)
loope
fwait
ror
(bad)
div
lock
pop
jge
shl
outs
out
inc
xchg
xor
mov
leave
ss
xchg
xor
push
jmp
add
mov
adc
cdq
xlat
out
imul
xor
loop
ins
call
mov
sub
jns
scas
inc
push
jne
pop
cmp
mov
(bad)
call
int
xchg
mov
lods
mov
cld
fbld
push
das
mov
push
push
sar
mov
shl
cmp
jns
adc
call
jae
inc
jle
test
sub
retw
or
xchg
sub
loop
inc
push
pop
fstp
lahf
or
mov
inc
(bad)
outs
into
mov
popf
daa
pop
and
cmc
rcl
scas
test
add
das
mov
sbb
xchg
jo
mov
push
arpl
inc
jmp
adc
cmp
cmp
fimul
pop
mov
cwde
mov
scas
jecxz
mov
xor
adc
(bad)
and
jge
add
xor
sbb
and
test
sub
mov
inc
jp
xchg
pop
dec
cs
xchg
js
in
ret
cmp
dec
push
stc
imul
xchg
out
add
fstp
call
adc
xchg
(bad)
and
mov
stos
ret
call
jae
addr16
jmp
add
test
cdq
ins
pop
xor
adc
mov
push
call
sbb
ds
jp
rcl
dec
addr16
jbe
or
hlt
test
ins
test
in
jle
ret
mov
test
mov
inc
xor
xchg
call
stos
loopne
mov
inc
mov
aam
or
cmps
xor
arpl
pop
shl
jmp
add
sbb
repnz
sub
mov
push
ror
dec
(bad)
pushf
rcr
xor
sub
sub
sbb
cmp
adc
je
inc
je
mov
adc
push
fnstenv
scas
inc
aad
push
cmp
fwait
adc
(bad)
jmp
adc
cmp
and
(bad)
mov
inc
mov
mov
aam
jae
test
cmps
xchg
xchg
test
cmp
jp
and
mov
lea
fwait
data16
iret
cmps
mov
fs
mov
rcl
mov
jne
adc
fwait
retf
nop
rcr
jge
int
mov
rcr
xor
ror
sbb
sub
out
popa
push
shl
jne
xor
mov
pop
scas
or
dec
mov
add
pop
js
movs
mov
pop
call
cs
mov
ror
cmp
cmp
lock
push
std
dec
repnz
retf
fnsave
fild
dec
pop
imul
push
dec
cmps
fmul
adc
and
dec
cld
ficomp
sahf
test
std
push
out
out
xchg
push
not
push
jae
xchg
lods
rcr
inc
jmp
adc
pop
out
mov
(bad)
repz
imul
inc
mov
jge
loope
xor
xchg
call
sub
adc
pop
dec
rcr
mov
mov
mov
or
int
dec
adc
mov
not
jg
out
dec
jmp
imul
inc
sub
and
aad
(bad)
int
cmp
test
bound
call
in
aad
fisttp
pop
gs
xchg
sub
pop
or
push
out
mov
retf
clc
daa
mov
mov
scas
aad
lahf
dec
mov
add
mov
rol
sbb
test
or
sbb
shl
lahf
mov
mov
sbb
sub
pop
daa
xor
jmp
sub
sbb
push
add
lds
movs
inc
jns
jo
dec
push
inc
cmp
fbstp
(bad)
jmp
cmp
mov
js
test
and
adc
iret
xor
pop
xor
adc
jmp
in
cmp
lock
jo
xchg
outs
nop
xchg
loop
imul
mov
or
pop
jmp
jo
sahf
stos
xchg
enter
or
mov
clc
sar
jecxz
mov
mov
pop
inc
(bad)
loope
xchg
mov
fidivr
pushf
and
jle
rcr
jns
test
nop
ja
movs
popf
mov
mov
sub
add
mov
(bad)
xchg
push
fldcw
mov
add
inc
fnstenv
pop
int
sub
arpl
scas
cmp
rol
ins
lds
adc
cmp
jbe
inc
cs
jmp
xor
jbe
mov
cli
fdivr
icebp
clc
push
jnp
sbb
push
(bad)
and
fmul
mov
sbb
adc
fadd
lods
sub
sub
xchg
jecxz
imul
test
pop
int3
xchg
lods
jne
inc
jmp
jmp
add
lods
mov
pop
mov
push
stos
std
popf
xor
outs
pushf
loopne
sub
pop
fldenv
cdq
repz
jmp
in
inc
aam
mov
mov
lods
sbb
dec
nop
pop
dec
sbb
mov
pushf
loop
ja
ja
sub
pop
add
sar
jmp
rol
ffree
adc
sbb
jg
sbb
mov
xor
inc
xchg
stos
rcr
sti
inc
in
int
bound
push
adc
push
cwde
mov
pop
mov
sub
add
xchg
mov
and
jmp
inc
mov
rol
xchg
pusha
cmp
adc
push
clc
xchg
jns
in
sub
movq
sub
inc
sub
into
shl
sub
sub
sub
add
mov
enter
dec
jge
test
mov
scas
ja
pop
inc
or
sbb
jl
or
cmp
fs
mov
or
pop
popf
mov
mov
xchg
stos
in
in
or
add
in
push
inc
pop
jg
and
lahf
jnp
sub
call
div
or
cmp
test
(bad)
fs
cmp
ficom
jmp
jmp
bound
pop
mov
jbe
push
push
nop
ja
(bad)
cmp
fnstenv
dec
movs
addr16
jne
sbb
jl
(bad)
xor
ds
js
lods
or
mov
das
mov
fs
pop
xchg
push
mov
pusha
jbe
in
ret
fimul
js
inc
aas
sub
and
xchg
jge
pusha
cli
cmp
mov
aas
cli
pop
aad
push
mov
les
xchg
xchg
xor
(bad)
inc
push
add
xor
bound
movs
xchg
js
add
mov
cmp
arpl
test
(bad)
movs
das
mov
or
cmp
push
mov
xchg
xor
cmp
(bad)
xor
mov
xchg
xchg
cmps
add
adc
xor
lahf
clc
push
movs
mov
jecxz
lea
sub
push
(bad)
mov
cli
(bad)
mov
xor
(bad)
call
cld
ror
sub
add
loopne
popf
pop
std
ins
jmp
add
add
lods
add
cli
adc
lods
ins
out
jp
add
sti
mov
gs
sub
loop
pop
cmp
sub
fwait
stc
ficom
sub
sub
outs
lahf
inc
or
ja
test
xchg
(bad)
xor
inc
js
pop
stc
push
dec
jae
mov
add
aas
or
lea
sub
in
xchg
xor
ja
shr
adc
pop
pop
jle
(bad)
jae
daa
mov
(bad)
sti
jo
mov
stos
sar
mov
cmp
int
iret
pop
out
pop
mov
cmp
mov
or
pop
in
push
(bad)
(bad)
sti
scas
mov
scas
fldenv
(bad)
jge
mov
or
movs
push
or
(bad)
push
rcr
jno
add
fisub
(bad)
push
test
out
js
dec
rcl
stos
sbb
push
sar
movs
bound
or
sub
ja
sub
call
dec
punpcklbw
inc
xchg
dec
adc
int3
add
and
add
adc
and
sub
je
xchg
test
in
inc
inc
inc
scas
imul
lods
retf
inc
(bad)
mov
nop
shl
ss
push
jno
mov
and
and
jmp
cdq
outs
jmp
fs
pop
ds
push
fwait
dec
jns
out
xchg
leave
and
mov
cmp
add
sub
push
jne
out
mov
fcmovnb
mov
add
adc
lods
sub
repnz
mov
push
cmp
xor
jbe
dec
fild
sub
retf
dec
imul
lds
mov
lods
loopne
pop
jmp
lds
imul
push
daa
mov
js
out
pop
adc
fnstsw
xchg
xchg
leave
xchg
and
lods
lock
(bad)
leave
lods
or
mov
lods
popf
mov
xchg
xchg
pop
outs
pop
jbe
out
and
retf
test
sub
pop
push
ret
call
cmps
icebp
pop
scas
ficom
cmps
xchg
xor
jae
or
mov
mov
jbe
xchg
cli
or
mov
xchg
sbb
jns
test
mov
prefetch
sbb
xchg
mov
inc
js
pushf
mov
test
outs
les
or
scas
repz
mov
mov
jl
icebp
push
or
(bad)
out
sbb
add
sub
out
aad
cld
xchg
dec
ficom
jmp
repz
in
mov
addr16
cmc
or
std
mov
push
push
jne
xchg
xchg
mov
loopne
xor
(bad)
and
sbb
sub
mov
lods
mov
or
fidiv
daa
lds
xor
or
fsub
call
icebp
push
add
nop
xchg
jecxz
ds
xchg
stos
pop
sahf
lock
dec
sub
jae
jo
xchg
and
ds
(bad)
and
pop
cmp
xchg
stc
leave
sar
shr
hlt
gs
frstor
sub
xchg
ins
movs
jecxz
aaa
test
dec
ret
lods
test
add
push
iret
aaa
repz
jp
loopne
sahf
jmp
pop
int
outs
adc
stos
push
loop
jbe
pop
loop
dec
rcl
xchg
les
jp
out
push
dec
dec
imul
mov
jmp
xchg
cdq
call
mov
xchg
cwde
pop
into
dec
push
jmp
outs
data16
add
cmp
add
mov
int3
add
div
mov
retf
gs
push
mul
mov
push
xlat
jl
xor
pop
cli
pop
pop
adc
inc
cmps
push
sub
rol
test
lods
jecxz
dec
hlt
repz
int3
fcmovbe
cdq
aad
and
inc
pop
and
xchg
in
or
dec
push
push
leave
aam
aam
push
sahf
scas
xchg
sbb
iret
pusha
xlat
mov
and
or
stc
xchg
lock
xor
inc
mov
cmp
loop
pop
cmp
loop
pop
in
repnz
cmp
pop
cwde
inc
push
jbe
pop
pop
xchg
pop
cmp
jb
adc
cdq
stos
or
mov
ins
xchg
sti
scas
rcr
adc
je
sbb
xrelease
hlt
retf
dec
cmp
mov
inc
test
mov
xchg
mov
arpl
cmp
inc
sbb
mov
ins
fidivr
sub
mov
cmp
xor
xchg
ins
inc
stos
imul
movs
xchg
push
nop
lahf
mov
or
sub
scas
push
into
(bad)
mov
(bad)
cmps
out
or
lods
out
stos
jecxz
push
loope
add
sub
mov
scas
std
add
loop
rcr
sti
dec
leave
mov
inc
fiadd
push
cmp
mov
repz
aad
stc
xlat
mov
aas
clc
into
inc
jmp
fstp
sub
mov
push
mov
rcr
pop
stos
adc
and
icebp
sub
mul
sbb
adc
dec
idiv
(bad)
mov
or
je
pop
dec
sbb
push
sbb
add
and
sub
jo
loop
push
adc
inc
test
call
sbb
dec
adc
mov
cdq
sahf
out
cld
fxch
movs
loopne
mov
int
adc
ret
push
test
push
or
repnz
(bad)
movs
xchg
ficomp
jnp
movs
call
mov
mov
mov
in
cdq
pop
push
and
mov
hlt
pop
or
lods
popf
inc
call
and
test
addr16
lea
jp
es
mov
inc
paddsw
mov
neg
jo
inc
bound
ja
jmp
sahf
shl
movs
int
dec
in
adc
push
lds
ins
fld
call
sar
repz
into
std
repz
scas
loop
jo
data16
sbb
push
aam
inc
lods
test
dec
sub
sbb
jmp
mov
lea
stc
shr
sbb
std
outs
stos
mul
in
mov
je
int
imul
(bad)
retf
sahf
scas
movs
dec
push
das
ja
test
dec
and
ret
les
jne
sbb
xor
jb
xchg
ds
cmp
into
ret
cld
sub
call
push
push
test
jno
sbb
or
sbb
or
imul
jo
adc
(bad)
push
sub
mov
and
push
test
sbb
test
push
enter
out
gs
lods
fdivp
cmp
dec
ret
cmps
icebp
fwait
mov
xchg
push
fs
cmc
and
xor
inc
mov
cmp
push
mov
outs
jbe
mov
idiv
pop
jp
pop
fistp
int3
mov
jne
mov
jecxz
cmp
jns
mov
add
sub
and
sbb
inc
mov
xor
jl
adc
clc
push
ins
arpl
sub
jnp
pop
xchg
mov
mov
ficom
jb
xchg
mov
adc
cld
pop
push
jno
jno
in
push
std
aad
jecxz
repnz
mov
pop
pushf
add
and
mov
push
pushw
out
dec
xchg
lock
push
adc
stc
jns
mul
dec
dec
movs
mov
je
pop
aaa
adc
nop
cdq
sbb
aas
sbb
loop
mov
pop
test
shl
xor
shl
rcr
push
retf
mov
jecxz
test
mov
popf
stos
pushf
mov
shr
inc
popf
ret
int3
stos
mov
cmovb
out
shl
inc
fld
test
popa
test
mov
sti
dec
mov
cmp
dec
inc
push
imul
xor
cmp
stos
repz
repnz
lds
les
mov
mov
or
add
ja
jb
jecxz
xor
in
retf
push
sub
cmp
test
mov
pop
jno
mov
daa
cmps
sub
xor
sub
xor
aam
ror
and
sbb
jbe
repnz
mov
mov
mov
sub
stos
xor
dec
mov
dec
push
push
stos
inc
ds
and
jnp
cld
(bad)
ror
stc
cmp
mov
pop
sub
sub
(bad)
xchg
mov
sub
xchg
outs
mov
adc
mov
or
mov
outs
cmps
xor
aam
cmp
pop
ins
popf
jle
mov
fcom
aas
cdq
and
jecxz
add
(bad)
mov
pop
adc
adc
cmp
mov
lods
loop
int3
mov
cmp
(bad)
xor
nop
sahf
adc
mov
mov
or
push
adc
in
call
pop
and
call
mov
dec
movs
pop
jae
fimul
popf
fwait
ret
outs
(bad)
inc
aad
fld
or
dec
je
mov
jns
or
mov
mov
sar
rep
cmp
out
retf
call
xchg
push
lds
mov
fist
shr
jmp
aas
xchg
push
(bad)
movs
pop
nop
lahf
adc
fwait
mov
inc
push
inc
or
push
sbb
in
xchg
pop
jo
xchg
pop
(bad)
imul
shl
jae
push
and
sbb
push
sub
inc
fld
dec
ss
xchg
mov
inc
and
mov
cmps
stos
and
out
cmp
in
ror
lock
mov
cld
xchg
stos
outs
lods
mov
mov
jo
fwait
daa
(bad)
sub
mov
xchg
mov
cmps
or
sub
out
jp
add
add
jmp
pusha
cmps
mov
outs
xor
inc
mov
sub
xor
dec
(bad)
lds
(bad)
lock
jns
je
ror
test
adc
in
nop
xor
xor
push
push
sub
mov
xchg
aam
inc
addr16
ficomp
xor
iret
mov
div
push
popf
daa
add
cmc
les
pop
jnp
ror
out
repnz
mov
dec
fstp
sub
(bad)
push
lock
ret
dec
xchg
pop
xchg
sti
or
movs
inc
cld
in
popa
ja
(bad)
cmp
push
cmc
and
or
(bad)
jecxz
xchg
rcl
aas
scas
sbb
xor
imul
(bad)
push
pushf
sahf
cmp
xchg
mov
inc
call
in
or
rcr
and
bound
or
ins
and
cmp
lea
pop
sbb
adc
mov
cdq
push
(bad)
sbb
and
xchg
call
and
shl
mov
sti
daa
mov
data16
xchg
xchg
cdq
xchg
push
cld
dec
sub
inc
or
lahf
pusha
xchg
inc
je
call
or
pop
call
leave
jp
cmp
movs
sbb
std
lods
sbb
cld
jmp
push
push
sar
cwde
sbb
or
std
mov
out
lea
enter
pop
push
shr
ja
imul
push
xchg
push
in
inc
sar
sub
inc
in
jo
mov
cmp
or
inc
xor
rol
sbb
push
(bad)
jb
aaa
jmp
adc
pop
push
fist
mov
mov
test
inc
push
and
out
and
and
dec
and
jmp
or
add
push
xor
cwde
sub
or
mov
inc
add
jl
xor
fs
test
imul
cmc
sbb
loopne
popf
push
pop
sbb
jmp
adc
outs
cmp
or
retf
aas
inc
hlt
xchg
std
sbb
nop
movs
mov
out
add
out
dec
mov
test
add
ror
and
sbb
and
lahf
mov
inc
jbe
push
into
mov
adc
clc
cmp
xor
jne
int3
mov
mov
addr16
popa
dec
jnp
jae
cs
dec
jge
push
std
out
sbb
sbb
test
not
fimul
rol
leave
push
push
xor
stos
sub
(bad)
dec
iret
lods
rcl
in
inc
lds
xlat
repz
int3
xchg
mov
pop
mov
out
call
push
mov
scas
in
dec
adc
adc
sbb
inc
cmps
call
mov
mov
test
stc
pop
cmp
or
adc
xor
inc
fst
mov
jp
adc
push
stos
into
test
push
inc
cmc
ds
mov
and
ror
sti
test
xor
popf
lods
aam
mov
mov
fnstcw
cmp
and
sar
inc
push
idiv
leave
dec
mov
aas
pop
mov
jmp
inc
loope
xor
test
or
jecxz
sub
cmp
lods
sub
mov
in
lahf
test
sti
test
add
mov
pop
js
cdq
or
add
fisttp
or
aad
pop
inc
popa
pop
cmp
mov
adc
dec
stos
icebp
jg
aad
mov
lahf
jmp
in
mov
lods
pushf
cmps
scas
fs
cld
pop
test
nop
movs
and
dec
xor
pusha
sub
cmps
pop
movs
mov
or
loope
aaa
mov
jo
xchg
mov
mov
dec
test
mov
push
fistp
hlt
sbb
shl
jmp
stos
sub
cmp
xor
test
xchg
es
pop
out
repz
jnp
imul
or
xchg
aas
inc
mov
arpl
(bad)
fld
inc
cmp
shl
into
retf
sahf
or
aad
jno
mov
mov
outs
fwait
dec
cmp
jp
dec
mov
call
test
sbb
aas
mov
icebp
aas
ds
dec
cmps
jmp
cmp
out
cmp
int
push
push
inc
scas
adc
xchg
jmp
pop
and
mov
in
xor
jo
xor
rol
cmp
out
in
push
mov
inc
js
les
cwde
push
enter
add
sbb
fidivr
(bad)
adc
dec
xor
lods
int3
in
add
in
dec
lods
dec
sbb
dec
jno
pop
pop
dec
mov
ret
xor
repnz
lock
bound
lds
das
mov
aaa
test
xchg
loope
lahf
adc
xlat
stc
push
push
inc
mov
cmc
or
ja
test
loope
add
mov
jmp
ret
pop
(bad)
js
fnstsw
ja
js
sub
sub
xchg
movs
idiv
ret
gs
jne
pop
rol
jl
frstor
sbb
imul
stos
pop
aad
dec
stos
(bad)
int
mov
out
loopne
inc
push
pop
mov
hlt
imul
or
pop
and
loopne
cdq
xchg
xor
shr
(bad)
into
mov
xchg
sub
sti
dec
stos
dec
retf
test
push
rcr
aam
sbb
lock
test
dec
or
jb
mov
gs
xchg
cmps
mov
pop
xor
je
inc
lods
loop
mov
xlat
jbe
fmul
clc
ret
xlat
das
add
inc
std
pop
imul
ret
fcom
call
mov
mov
cwde
adc
pop
mov
mov
call
mov
jp
inc
loop
imul
mov
fucomip
sbb
xchg
cld
mov
mov
daa
jmp
sbb
nop
xchg
and
xor
out
mov
xchg
repz
pusha
xor
pop
pop
mov
mov
sub
xchg
jne
push
mov
push
push
dec
mov
or
rcr
or
(bad)
mov
jae
rcl
pop
jmp
loopne
mov
cmp
out
jmp
pushf
stos
scas
pop
cmp
inc
jl
push
jne
push
(bad)
pop
sub
cli
repnz
cmp
push
mov
mov
xchg
mov
sbb
push
xor
ins
pushf
jno
sub
pusha
icebp
dec
mov
dec
ds
mov
lahf
rcl
(bad)
ss
push
jg
jne
cs
mov
sbb
adc
es
mov
cdq
push
inc
add
scas
adc
iret
add
sub
mov
hlt
ficomp
popf
fsub
(bad)
mov
pop
cmp
xchg
jmp
mov
adc
or
ret
rol
fild
mov
int
jns
and
push
cmp
cmp
lds
add
es
stos
inc
es
mov
mov
add
(bad)
lods
sbb
xor
pop
std
push
ins
mov
mov
mov
aas
add
and
cmp
fucomi
in
dec
and
xor
xchg
mov
adc
js
push
xchg
fdivr
ins
xor
adc
inc
pop
outs
push
in
and
mov
ins
pop
mov
sub
in
fnstsw
push
add
cli
pusha
hlt
(bad)
fwait
mov
lods
pop
lahf
aaa
hlt
xchg
repz
dec
icebp
call
(bad)
lock
loopne
mov
adc
mov
into
xor
lods
popa
cmp
pop
pop
cmp
repz
adc
jl
push
push
jge
fcom
dec
xchg
jmp
fwait
aad
dec
daa
aad
pushf
in
pop
int
in
call
and
jne
xchg
mov
push
pop
mov
cld
(bad)
and
xor
popf
shr
jmp
scas
jnp
mov
push
test
or
sahf
push
cli
arpl
fld
jo
aaa
pop
stos
aas
(bad)
loope
leave
jg
mov
leave
scas
retf
fstp
add
mov
scas
jl
test
jg
imul
clc
inc
fnstcw
xor
pop
xchg
push
push
adc
retf
xor
test
jmp
jbe
jl
mov
ja
je
outs
adc
jne
retf
pop
push
mov
cmps
and
cmp
xchg
or
dec
xchg
hlt
mov
or
dec
popf
sub
mov
mov
mov
es
sub
dec
pop
fs
push
in
mov
call
jo
dec
ret
mov
dec
cmp
int
inc
popa
sub
adc
cmp
mov
pop
jmp
arpl
mov
daa
out
adc
fs
call
movs
and
or
into
cs
(bad)
ja
sub
(bad)
jmp
or
push
xlat
dec
retf
pop
adc
xor
push
test
dec
mov
adc
ret
test
(bad)
cli
mov
cmp
dec
mov
movs
add
jo
mov
rcl
cdq
sbb
adc
pop
mov
cmp
mov
xor
push
adc
jge
jb
ins
ss
dec
dec
and
aam
and
mov
idiv
mov
mov
rol
jle
fcomp
xlat
add
stos
jg
fstp
pop
mov
loopne
sbb
xor
mov
mov
(bad)
cmp
into
fsub
scas
sbb
pop
sbb
xor
jmp
cld
repnz
aad
es
or
sub
add
int3
mov
sub
repnz
movs
xor
inc
add
add
add
push
lods
test
in
pop
cli
jl
or
popf
sti
std
(bad)
fs
jle
xor
repz
jg
shl
jle
dec
pushf
aas
fmul
(bad)
out
xchg
xchg
cmp
xor
fbstp
out
not
and
pop
loop
das
dec
leave
rcl
inc
std
cli
sbb
inc
push
popa
iret
retf
pop
mov
or
and
daa
cmp
add
mov
cwde
fcomp
cli
pop
sub
(bad)
adc
nop
div
ds
daa
mov
adc
mov
add
adc
lahf
div
add
mov
dec
out
or
jmp
sub
pop
or
aas
pop
push
repnz
or
lea
pop
or
jbe
mov
mul
adc
mov
fwait
mov
push
xchg
out
sbb
push
add
xor
mov
sbb
sub
(bad)
iret
or
pop
or
xor
xor
add
push
or
outs
or
xor
or
hlt
out
inc
adc
push
mov
aam
push
mov
lock
mov
das
add
hlt
add
cmp
jae
mov
lods
add
adc
je
rol
adc
add
add
add
add
add
add
add
add
inc
lods
add
into
xor
rol
inc
adc
mov
hlt
adc
add
or
jl
push
pop
pop
dec
mov
or
add
or
mov
cmp
outs
add
pop
add
clc
dec
rcr
loope
push
push
push
ror
test
and
inc
pop
jle
rol
mov
sbb
fadd
jg
cld
jmp
ins
pshufw
push
add
sbb
cmp
adc
adc
dec
loope
add
adc
enter
mov
add
add
cld
mov
cld
jmp
add
sub
and
push
aas
sbb
dec
cmp
sub
lea
jbe
sbb
sar
cwde
push
pop
pop
gs
add
xchg
add
or
push
or
push
mov
inc
cmp
add
sub
enter
add
cld
das
inc
ret
sbb
inc
pushf
inc
es
add
lods
inc
mov
and
and
and
adc
and
dec
ins
nop
mov
movs
push
test
or
sub
sub
inc
push
inc
mov
mov
fs
sbb
pop
rcl
pop
and
add
pushf
cmp
add
push
test
out
dec
fisubr
ds
out
scas
fmul
pop
sbb
jb
mov
add
ins
fcmovu
inc
and
aas
xchg
movs
pop
xor
mov
(bad)
mov
movs
out
pop
xchg
mov
dec
stc
mov
mov
jo
rol
rcr
aam
add
scas
sahf
dec
neg
fisttp
stos
sahf
push
ss
add
mov
mov
ss
outs
loope
ret
add
aaa
mov
(bad)
inc
mov
or
fcom
fdivr
push
ds
js
imul
ror
jb
loopne
adc
sub
adc
clc
jo
test
out
adc
rcl
(bad)
leave
mov
push
call
(bad)
fidiv
jae
push
fnstcw
inc
jg
push
add
cmp
mov
push
or
adc
lea
aad
daa
jns
sub
xor
in
dec
cmps
in
lds
js
jmp
retf
jge
jnp
and
ins
jl
dec
sbb
imul
fidivr
xchg
xchg
adc
aaa
div
ja
push
sbb
shl
xlat
jne
jb
jo
repnz
fisubr
pop
rcr
or
jmp
dec
jmp
jbe
popa
dec
ins
cdq
test
scas
cmp
imul
and
arpl
aaa
sub
repz
lods
sbb
inc
in
mul
pop
pushf
ds
int3
dec
mov
xlat
cmc
xchg
ror
test
stos
xchg
inc
mov
and
jns
lock
fdivr
mov
sbb
sub
or
les
sub
popa
stos
je
int
add
dec
or
push
pusha
adc
pop
jl
ja
adc
repnz
jl
adc
mov
mov
pop
test
loop
sub
sub
pop
(bad)
test
ret
mov
xlat
fld
jmp
lods
jge
sub
adc
sahf
icebp
mov
cmps
in
inc
xor
jl
sub
imul
inc
clc
mov
push
retf
pop
fisubr
sbb
pushf
cmp
inc
jmp
stos
ja
in
cmc
or
fmul
enter
xchg
xor
test
jnp
or
lock
cmp
les
(bad)
ret
sub
pop
mov
fnsave
mov
aaa
scas
xchg
lds
rol
(bad)
xchg
sbb
xlat
aad
int3
jb
shl
xchg
push
and
mov
dec
push
pop
cmc
dec
and
push
jmp
inc
ds
rcl
jns
xchg
adc
repz
dec
jmp
and
aas
and
dec
fs
push
mov
mov
in
fstp
js
sub
push
adc
xor
xchg
aaa
dec
jns
cmp
test
fstp
xchg
xchg
cmp
cdq
add
stc
cs
cdq
adc
inc
call
into
adc
jb
pop
cmp
add
jo
test
inc
push
dec
es
sbb
inc
push
adc
jb
sub
pop
in
(bad)
mov
jmp
pop
mov
xchg
pop
sar
sub
mov
jne
loop
sub
cmp
dec
add
(bad)
movs
xor
jle
fldcw
test
test
lods
ficomp
fldcw
call
sbb
sub
bound
mov
mov
dec
and
jl
push
inc
cmc
mov
in
test
sti
fsub
test
stos
ror
jo
gs
sbb
inc
mov
dec
stos
jno
scas
mov
cmp
jae
lock
adc
mov
fimul
pop
and
xchg
int3
jmp
ret
out
cwde
jp
xchg
scas
sub
add
bound
call
cli
xchg
(bad)
loopne
imul
out
mov
sub
adc
and
and
test
pop
add
out
xchg
inc
add
inc
xor
cmps
and
pop
out
sbb
pushf
popf
aam
lds
pop
and
(bad)
push
jns
mov
ds
mov
pusha
mov
mov
push
mov
fild
mov
jbe
mov
add
dec
ja
ret
stos
int
sti
dec
in
mov
retf
mov
cmps
jge
jbe
out
push
out
push
jbe
mov
mov
push
cdq
stos
or
in
lea
push
fcmovnb
outs
addr16
popa
mov
pop
pop
mov
ja
int
add
or
cs
sbb
les
movs
mov
jmp
cmp
(bad)
jge
push
or
clc
cmp
xchg
pop
jecxz
or
test
test
mov
mov
jmp
xor
arpl
push
sahf
ja
cmp
lods
lods
inc
dec
dec
dec
sub
enter
jg
repz
mov
pop
pop
(bad)
dec
cmp
int
cmps
jnp
call
mov
dec
mov
sbb
xchg
sbb
clc
sub
cmp
cmp
push
xor
cmps
mov
loopne
daa
enter
mov
pop
cmp
pushf
lea
nop
cwde
jle
or
popa
lds
es
pop
lods
mov
pop
adc
addr16
push
call
call
jb
xchg
sub
popf
xlat
sub
xor
es
sbb
test
mov
cmp
retf
in
call
push
int3
rsm
(bad)
out
jns
adc
jge
adc
xor
add
fcomp
or
in
out
sbb
(bad)
pop
cdq
call
clc
add
cli
jp
add
pop
sbb
fwait
mov
jo
mov
and
cmp
fbld
leave
pop
int3
mov
mov
push
jnp
dec
adc
dec
xchg
inc
sbb
xchg
cmp
imul
or
jb
jbe
fild
xchg
shl
or
call
adc
sub
cmps
dec
outs
in
mov
mov
xchg
je
mov
cmp
jae
xchg
push
sti
sbb
xchg
xchg
and
rol
adc
(bad)
jge
(bad)
xor
or
xchg
push
cmps
clc
dec
push
dec
scas
mov
test
clc
inc
cmp
pop
aam
cmp
sbb
(bad)
(bad)
mov
ins
or
cmp
cmps
cmps
mov
ret
shr
mov
add
test
and
jge
push
ror
xchg
or
mov
push
dec
dec
loop
mov
pop
out
or
in
iret
mov
push
xor
lods
add
xchg
cmp
inc
push
jns
(bad)
mov
jnp
pop
mov
push
sub
cwde
test
jge
sub
inc
int3
sar
pop
std
outs
sub
pop
loope
iret
inc
or
scas
sbb
rcr
xchg
ficom
and
cmps
or
cmp
jmp
and
jne
ds
sub
add
in
sti
inc
mov
pop
iret
ss
cmp
cmps
adc
adc
lods
add
loope
jecxz
mov
pop
aas
dec
pop
xchg
jo
das
ss
xor
sub
iret
out
inc
(bad)
call
fmulp
and
pop
or
in
xor
shr
sub
ss
daa
xor
rcl
xchg
mov
sub
(bad)
mov
sub
call
sub
pop
cmp
mov
mov
push
ror
mov
pushf
sahf
jns
jae
mov
xchg
jno
adc
mov
adc
xchg
xlat
xor
push
and
or
or
jl
test
icebp
in
pushf
jl
or
lods
call
push
test
mov
jo
and
dec
imul
cmps
int3
cli
cmp
mov
push
push
mov
scas
pop
mov
xor
mov
inc
movs
xchg
lock
movs
mov
mov
into
and
dec
adc
jns
stos
pop
in
cmp
int
inc
hlt
movs
mov
dec
fcmovne
aas
(bad)
test
dec
(bad)
movs
and
dec
fstp
sbb
cmp
cdq
mov
je
test
mov
jecxz
in
inc
gs
shl
int
dec
mov
test
stc
inc
fiadd
xor
call
sbb
sub
into
jnp
lahf
loopne
push
xor
out
pop
aam
stos
xchg
out
dec
into
je
sub
cmps
push
fsubr
out
ins
inc
hlt
popa
mov
or
jo
pop
div
lahf
cmp
mov
or
aaa
pop
xor
std
outs
xor
loope
idiv
into
or
or
cmc
sub
dec
mov
xchg
sbb
pop
pop
in
cdq
clc
or
mov
out
pop
hlt
cmc
sbb
cwde
adc
inc
fst
mov
mov
scas
push
movs
jns
or
xchg
mov
sti
test
iret
loop
push
int
xchg
int
stc
std
adc
xchg
cmp
dec
jmp
mov
jae
(bad)
shr
(bad)
ins
cmp
add
inc
movq
out
sub
push
mov
dec
ins
jle
mov
pop
cmp
leave
xchg
jg
fwait
(bad)
cmps
mov
jmp
pop
xor
or
daa
ret
sub
lea
jne
(bad)
pop
call
ja
mov
mov
loope
jmp
sub
imul
fidivr
idiv
das
sbb
lahf
cmps
mov
pop
inc
xchg
in
std
jae
retf
(bad)
sahf
int
out
jb
mov
std
std
in
xor
lods
popa
(bad)
fadd
loop
aad
loop
dec
xchg
rol
jne
shl
push
and
fdiv
xchg
loopne
jb
push
mov
mov
push
sub
pop
ss
cmps
(bad)
dec
mov
jp
outs
repnz
loop
std
std
cs
jp
and
pop
mov
fimul
push
std
xchg
rcr
(bad)
popa
push
(bad)
jmp
outs
sub
push
dec
push
gs
xchg
into
das
fcomip
scas
xchg
aas
test
fwait
or
xchg
cdq
dec
jg
repnz
les
fs
dec
in
jae
mov
mov
pop
stc
sti
lahf
das
adc
or
dec
mov
sbb
add
xor
aam
call
adc
and
and
loopne
sub
mov
adc
jge
jl
jecxz
fucom
lahf
js
repz
mov
xchg
xchg
call
mov
daa
inc
cdq
leave
cli
lahf
fld
outs
cmp
jo
iret
inc
and
mov
adc
dec
mov
loop
lahf
lea
dec
push
pop
mov
or
xchg
mov
pop
jp
int3
fs
jo
push
jbe
or
mov
loopne
sub
aas
mov
adc
cdq
dec
cmp
mov
sbb
in
retf
sub
out
(bad)
xchg
mov
(bad)
mov
pop
jne
dec
xlat
cdq
(bad)
fwait
outs
xor
pusha
mov
fwait
jnp
hlt
fdivr
int3
sub
cmps
dec
mov
jge
jp
movs
cmp
stos
dec
pusha
int
sbb
mov
sahf
dec
inc
pop
int
fiadd
int3
movs
dec
xor
scas
jae
jmp
cmp
inc
call
xchg
stc
fsub
retf
mov
(bad)
retf
lock
bound
pushf
push
xor
xor
pop
aad
pop
jns
mov
cmp
pop
push
aad
sti
xchg
fisubr
int
lods
retf
movs
and
pop
mov
addr16
std
loopne
or
scas
jbe
mov
fnsave
push
or
or
mov
mov
or
or
stos
and
xor
sbb
comiss
(bad)
xor
(bad)
adc
fld
sub
shl
fnstenv
clc
int
add
pop
sub
outs
jmp
fwait
sub
(bad)
jns
out
push
popa
icebp
shr
xor
std
mov
retf
cmp
fadd
cmc
xchg
repz
push
cwde
mov
stc
pop
in
aaa
ins
and
sahf
mov
adc
push
bound
dec
es
pop
push
sub
loope
gs
icebp
dec
ret
rcr
nop
outs
in
jecxz
and
inc
sub
mov
(bad)
fs
je
cmps
pop
adc
fmul
jge
xchg
cmp
lods
out
or
or
xchg
ds
xchg
inc
repnz
xor
cwde
jno
loop
xor
push
dec
pop
adc
ss
aas
rcl
cwde
iret
pop
xlat
test
sub
stc
cmp
icebp
sub
push
test
mov
xchg
out
loope
movs
mov
mov
push
cmp
sbb
inc
inc
cdq
sbb
push
xchg
ret
shl
inc
out
mov
popf
stc
je
inc
xchg
jne
cmps
into
ds
ret
xor
(bad)
pop
cmp
cli
inc
sbb
loopne
jae
popf
repnz
xor
aad
mov
push
mov
push
inc
mov
(bad)
cld
sub
mov
jnp
into
leave
xchg
pop
and
clc
test
cmp
and
or
sub
sub
and
aas
(bad)
call
mov
(bad)
mov
js
movs
lods
push
bound
aam
sahf
in
and
pop
lds
sub
mov
push
cmps
cmp
inc
dec
shr
mov
jp
in
ins
daa
out
rcr
xchg
jl
pop
test
mov
retf
movs
psrld
pop
lock
mov
hlt
mov
lods
iret
mov
or
aaa
inc
fcomp
rcr
ja
cmps
xor
cmps
jno
cmp
mov
jmp
nop
push
mov
mov
mov
mov
rol
xchg
nop
mov
inc
arpl
fs
ins
push
int
dec
mov
jle
call
lahf
fld
leave
ds
out
mov
jge
mov
mov
retf
imul
inc
lock
nop
dec
int
pop
mov
sbb
cmps
out
icebp
sbb
cmp
hlt
adc
cmps
lock
popf
pop
je
xchg
out
mov
loop
inc
pushf
dec
test
cmp
xchg
jno
push
mov
sbb
retf
ret
mov
lock
ret
scas
shr
test
push
movs
sub
je
(bad)
ds
scas
popf
dec
fwait
or
xchg
xchg
push
mul
ins
loope
mov
(bad)
sbb
mov
ins
cmp
cmp
outs
shl
mov
fs
jae
repnz
out
jno
iret
je
mov
xor
(bad)
dec
sahf
push
sahf
aaa
sbb
mov
lods
cmp
enter
in
jl
jno
mov
loope
ffree
xchg
(bad)
adc
mov
or
add
and
imul
js
dec
movs
inc
imul
fmul
fincstp
and
jmp
lock
out
mov
gs
lea
call
out
or
mov
outs
mov
cld
ins
sub
mov
mov
popa
sbb
dec
sbb
jp
jbe
pop
mov
cmp
jl
pusha
xlat
xor
dec
push
call
pop
jmp
mov
iret
mov
sti
cmps
adc
push
clc
or
push
add
mov
sar
mov
or
jle
repnz
fisubr
loop
pop
loope
adc
jmp
dec
call
sbb
xchg
sub
lds
adc
je
enter
dec
mov
inc
sub
dec
mov
or
mov
ret
jne
idiv
jne
jp
mov
inc
cdq
mov
js
pop
push
adc
leave
jae
xor
and
sbb
lahf
ins
inc
mov
rcr
jle
retf
mov
cdq
xor
repz
out
pop
sub
rcl
test
cwde
adc
xor
mov
fcom
loop
mov
fwait
mov
ss
inc
add
sti
jne
cmc
mov
adc
mov
ins
(bad)
ss
loope
cmps
jmp
imul
push
cmp
sbb
sahf
push
xchg
jg
or
cmp
dec
out
mov
mov
retf
mov
out
add
jle
sub
andps
dec
inc
fld
sub
scas
cmp
inc
call
xchg
sub
push
xchg
or
xlat
xchg
shl
outs
in
sbb
inc
in
in
out
arpl
jp
dec
jmp
mov
xor
xchg
movs
or
adc
int
scas
xchg
xchg
or
sbb
jb
ins
aam
mov
push
inc
test
push
aaa
stos
(bad)
sub
inc
adc
(bad)
idiv
dec
loope
xor
adc
push
out
iret
hlt
ss
xchg
lods
leave
pop
stc
sub
cmp
dec
lea
sbb
mov
push
sub
adc
or
test
mov
iret
mov
jbe
pop
jp
xchg
fs
fisub
sbb
daa
xor
or
jb
sbb
mov
pop
dec
je
loopne
xchg
ret
ins
icebp
aas
aas
xchg
adc
jb
mov
mov
mov
cli
jne
pushf
jnp
jl
ja
pop
outs
outs
rcl
or
cmp
mov
popa
pop
adc
stos
inc
mov
lods
ret
imul
sbb
imul
jnp
ret
call
push
leave
mov
fcmovnbe
ins
jns
loopne
dec
or
loopne
data16
mov
in
pop
sbb
cmps
lods
push
scas
scas
push
loopne
test
imul
sub
(bad)
retf
and
es
xchg
adc
xor
mov
in
push
imul
outs
xchg
mov
out
dec
(bad)
repnz
loope
sub
dec
dec
push
mov
out
and
stos
out
sbb
inc
xchg
aaa
cmc
mov
xchg
sub
jp
mov
ficomp
pop
out
sbb
mov
call
fld
cli
es
push
push
test
addps
mov
adc
xchg
daa
xor
adc
popa
and
cmp
inc
shl
jg
adc
inc
dec
imul
(bad)
in
mov
mov
add
or
cmps
clc
jg
xchg
dec
out
sti
call
mov
imul
jl
inc
cmp
pushf
sub
mov
adc
push
add
cmp
cwde
mov
and
mov
mov
jl
test
pop
outs
dec
cs
into
dec
push
sbb
cmps
mov
jb
mov
scas
fdiv
inc
es
jae
xchg
cli
hlt
push
int
inc
xchg
inc
pop
pop
popa
(bad)
stos
enter
jmp
cli
xchg
pusha
scas
(bad)
mov
fcomp
or
xchg
lods
push
test
xor
in
mov
pushf
dec
sub
ins
dec
xchg
dec
push
enter
fidiv
xchg
or
pop
dec
fidivr
or
pop
repz
test
and
pushf
mov
sbb
jle
fstp
fcom
pop
popf
xchg
mov
lahf
adc
mov
cs
inc
xor
push
enter
jecxz
loopne
mov
pop
lock
fimul
jno
aaa
sbb
inc
enter
fstp
stos
fwait
hlt
cld
xor
sbb
imul
and
mov
cmps
cli
lods
mov
adc
and
mov
mov
stos
outs
adc
xchg
cld
movs
jbe
js
add
loopne
ror
sub
(bad)
dec
out
or
(bad)
adc
std
loope
push
iret
adc
or
cmc
dec
test
in
pusha
addr16
jnp
cli
(bad)
enter
stos
rcr
out
mov
not
adc
xchg
jmp
mov
and
mov
cdq
adc
mov
and
push
jno
ficomp
cli
add
sbb
fwait
pop
fadd
and
adc
lds
adc
add
xchg
ins
jo
outs
xchg
gs
aam
mov
xor
jb
jae
arpl
mov
addr16
jg
or
repz
pushf
nop
mov
loop
aaa
loopne
out
add
retf
dec
push
fnsetpm(287
pop
pop
xchg
repz
inc
stos
jmp
outs
jae
pop
mov
cld
aad
add
das
mov
push
mov
xchg
mov
sbb
push
cmp
or
jl
mov
mov
and
pop
push
aam
mov
dec
mov
fsubr
push
sbb
or
inc
xchg
xor
mov
dec
pop
jg
rcl
(bad)
repnz
dec
or
pop
scas
nop
inc
ror
push
mov
stos
cmps
cld
mov
mov
or
std
inc
gs
shl
sbb
or
aam
dec
pop
lods
xor
mov
mov
mov
in
jbe
call
jo
cmp
pop
inc
mov
mov
push
xchg
gs
movs
cmp
aaa
or
xchg
cs
(bad)
fwait
mov
jno
inc
dec
aaa
sbb
inc
sub
xchg
push
aaa
push
adc
or
dec
and
push
addr16
enter
xor
mov
pop
mov
(bad)
sub
or
mov
shl
mov
fs
mov
or
sbb
lock
dec
outs
ret
jle
inc
mov
(bad)
ror
dec
cdq
(bad)
jmp
fidivr
fwait
mov
les
cmp
sub
xor
push
xchg
das
js
in
and
ins
mov
pop
pop
mov
das
pop
mov
enter
sbb
mov
lods
test
movs
in
dec
jns
repz
push
in
jp
fdiv
xchg
jecxz
ss
clc
stc
cmp
add
std
bound
cmp
dec
test
pop
int
call
nop
in
or
pop
xchg
xlat
jns
pop
repnz
mov
push
xchg
mov
mov
push
xchg
xor
repz
dec
repz
(bad)
bound
adc
cwde
stc
fild
adc
adc
mov
outs
xchg
jg
dec
xchg
or
jns
(bad)
je
jno
mov
in
and
jb
lods
shl
aaa
cmp
test
dec
addr16
cmp
mov
push
(bad)
inc
popa
scas
cmp
ins
and
neg
lock
in
js
retf
jb
(bad)
push
inc
mov
(bad)
das
add
std
lods
shr
pop
xchg
xchg
inc
fwait
test
aas
in
ret
pop
mov
into
sahf
iret
in
mov
xor
js
xchg
iret
loope
sbb
std
je
addr16
call
ds
call
sahf
push
movs
or
mov
loop
cmps
fldenv
mov
fsubrp
addr16
jno
and
sbb
js
mov
cmp
cmc
jecxz
pop
outs
sti
jecxz
mov
xchg
out
pusha
pop
pop
mov
xor
sub
push
hlt
lahf
mov
dec
dec
xor
pop
cdq
mov
ror
cmp
xor
(bad)
sub
outs
mov
imul
test
sub
mov
mov
popf
sub
call
inc
imul
hlt
adc
cs
fisttp
cli
in
call
mov
xchg
ret
dec
outs
test
out
mov
cmp
aas
jl
repz
int
mov
sbb
xchg
xor
and
(bad)
xor
fsub
add
adc
inc
es
mov
out
das
xchg
mov
in
cmps
adc
lods
imul
(bad)
xor
fld
adc
cmp
sub
mul
jle
ins
push
(bad)
gs
(bad)
lea
idiv
push
jno
jnp
mov
lahf
out
arpl
and
cmc
clc
test
push
cmc
add
xchg
das
hlt
xor
js
push
es
push
adc
pushf
cmp
mov
mov
mov
rcr
or
xor
pop
dec
cli
dec
sti
out
aaa
xchg
data16
cmp
stos
pop
mov
mov
sbb
xchg
clc
push
rcr
pop
mov
rcl
stos
mov
stc
mov
in
(bad)
sbb
dec
fsub
mov
mov
out
int3
fwait
mov
mov
xchg
sar
xchg
in
ss
adc
mov
inc
or
mov
scas
cmp
adc
in
xchg
inc
ret
mov
cwde
xchg
cmp
mov
mov
popa
mov
aaa
mov
(bad)
loopne
push
dec
pop
lahf
stc
retf
dec
pushf
mov
sbb
fistp
call
iret
sub
mov
(bad)
mov
and
test
fldcw
push
pop
and
daa
cmp
pop
fidivr
fwait
and
ja
or
mov
movs
mov
stos
ss
fist
push
pop
push
mov
sar
popf
xlat
stos
mov
push
xor
sub
ins
fisubr
inc
dec
cmp
cmp
rol
cmps
out
pop
jb
mov
adc
std
clc
xchg
fwait
out
cmp
icebp
add
arpl
in
out
dec
pop
outs
data16
sbb
int
push
jmp
call
jns
retf
xchg
pop
adc
mov
sar
dec
mov
pushf
cwde
stos
sbb
iret
mov
es
xlat
jle
leave
push
test
leave
inc
mov
cwd
jae
dec
and
jmp
xchg
or
pusha
dec
je
stc
xchg
or
pop
and
std
aam
repnz
push
push
mov
repnz
in
dec
mov
pop
test
pop
mov
aad
push
iret
jb
push
outs
pop
mov
pop
xchg
imul
sub
stc
out
mov
rcr
and
and
pop
into
sub
xchg
pushf
ds
adc
int
xchg
aad
xchg
pop
cmp
mov
mov
(bad)
mov
sbb
movs
loop
push
pop
jecxz
push
(bad)
(bad)
cmp
jmp
dec
test
outs
es
jb
and
aam
imul
inc
mov
repnz
imul
jg
mov
and
sbb
and
cmps
fadd
xchg
popf
dec
inc
in
jno
out
mov
movs
lahf
push
in
cmp
sub
mov
sbb
dec
les
lds
jbe
xor
stos
addr16
cmp
or
call
out
hlt
xchg
dec
mov
jbe
xchg
mov
mov
fs
push
ret
cdq
mov
cmps
mov
not
jae
sub
dec
and
sbb
push
(bad)
out
rol
cld
lea
cmp
jle
retf
data16
cmp
daa
lods
add
out
mov
adc
pop
pusha
cdq
scas
lock
xchg
jp
xchg
push
bound
ja
ja
popa
fnstsw
jne
cmp
ins
mov
call
(bad)
jmp
mov
xor
pop
popa
into
out
sti
je
mov
test
cmps
jno
(bad)
jge
cmp
mov
add
xor
jb
addr16
imul
test
jg
push
repz
es
pop
rcr
jmp
imul
aas
jo
or
clc
dec
aaa
movs
movs
jne
(bad)
pop
mov
mov
add
dec
js
xor
dec
jmp
mov
out
dec
mov
add
movs
inc
jns
mov
and
push
(bad)
retf
mov
mov
mov
dec
jg
ret
mov
iret
(bad)
pop
xchg
cmp
pop
out
je
pop
mov
mov
fcmovu
lods
call
sti
mov
pop
push
inc
fcomp
dec
pop
rep
nop
ds
push
mov
mov
cmp
jge
fisubr
aad
inc
ss
dec
sbb
cdq
fadd
outs
pushf
mov
test
popa
rcr
xor
out
sbb
mov
pop
stos
xchg
hlt
call
fnstcw
test
fwait
mov
mov
lds
aad
cwde
jnp
sti
adc
sbb
push
ins
in
mov
mov
mov
jnp
shl
je
out
pop
push
pusha
push
jne
mov
dec
or
imul
add
and
jbe
icebp
ins
loop
inc
not
loope
mov
push
pop
or
stos
mov
pop
cmp
dec
test
jge
sbb
cmps
mov
mov
cmp
add
add
add
inc
ja
and
cmc
sbb
sub
xchg
lods
dec
lea
jns
stos
cmc
pop
call
dec
xor
aam
in
pop
mov
pop
mov
retf
aad
sysret
mov
sub
(bad)
out
xchg
mov
xchg
test
stos
stos
push
pushf
loope
jecxz
sbb
test
dec
mov
inc
xchg
xchg
pop
push
xor
aad
add
adc
cdq
(bad)
pusha
ja
mov
push
mov
out
sub
or
test
lea
inc
dec
pop
hlt
sar
and
ret
mov
cdq
cwde
pop
pop
xchg
push
dec
daa
cs
xchg
js
push
sar
inc
add
push
cmps
fwait
and
mov
sub
inc
mov
movs
je
enter
sar
pop
leave
jle
and
icebp
lahf
in
cdq
cmp
lods
pop
mov
(bad)
ins
std
jnp
(bad)
loopne
lods
pop
mov
jle
add
adc
inc
adc
sbb
sub
push
std
stos
add
fnstenv
out
enter
stos
mov
jmp
dec
addr16
aad
jecxz
jae
pop
cmp
sbb
ins
jmp
pop
cmp
gs
in
jns
mov
aaa
call
mov
dec
xchg
xchg
daa
lods
inc
xlat
lods
test
push
cmc
sti
push
arpl
lods
mov
fiadd
or
sub
xchg
add
mov
pop
out
std
cmp
mov
or
mov
ror
ins
mov
fwait
pushf
cs
mov
adc
lods
retf
jg
imul
cwde
lahf
mov
scas
call
fistp
jnp
inc
not
imul
test
jo
cli
ds
and
cmc
in
add
xor
jnp
sti
movs
ins
aas
aad
in
es
(bad)
jae
cmp
jns
popa
in
aas
mov
cmc
jmp
out
jae
and
std
inc
(bad)
pop
addr16
in
mov
jg
std
add
mov
adc
xchg
(bad)
cmp
out
lods
adc
jl
stos
call
retf
retf
sub
xor
xchg
ret
andnps
das
shr
lods
in
pop
mov
dec
or
ins
cld
mov
test
add
in
cs
jmp
aad
sbb
not
repz
shl
aam
fucomip
mov
fucom
xor
jle
retf
cmps
lahf
clc
clc
xor
jmp
jp
push
mov
test
jae
cmc
dec
lods
pop
sub
idiv
inc
repz
jg
call
pop
mov
outs
not
jbe
out
jae
retf
call
out
mov
lahf
xchg
mov
addr16
jns
aam
cmp
hlt
inc
call
(bad)
jg
pushf
jmp
pop
shl
stos
hlt
push
scas
dec
jge
push
aaa
or
jbe
mov
jle
or
(bad)
(bad)
mov
sub
cmp
mov
daa
sub
adc
mov
adc
sti
or
nop
(bad)
cmp
pop
mov
in
aam
pop
scas
call
aaa
sahf
imul
addr16
jns
gs
lods
leave
and
dec
jmp
xchg
std
push
cmps
lahf
loop
push
imul
loop
sub
pop
mov
xchg
jg
jg
(bad)
jne
xlat
push
sbb
clc
aaa
imul
mov
not
not
into
int3
call
fwait
inc
retf
pop
movs
sub
push
(bad)
nop
jp
aad
cmc
mov
cld
or
pop
dec
push
ins
jae
fxtract
cmp
(bad)
fsubr
out
cmps
test
xchg
shl
sub
(bad)
aaa
jns
repz
and
inc
das
pop
mov
mov
dec
fistp
push
mov
jbe
push
sar
sub
in
movs
std
jae
sub
aaa
xchg
ds
(bad)
das
jle
mov
mov
iret
jmp
cwde
push
(bad)
pop
cld
sbb
xchg
cld
fsubp
mov
cs
mov
mov
ins
sti
out
xchg
xchg
retf
cld
push
fwait
jmp
lea
pop
jbe
push
sar
std
fwait
imul
popf
jmp
jmp
(bad)
xor
out
jecxz
cld
mov
(bad)
mov
lods
in
std
imul
and
clc
ja
fs
std
jae
call
outs
mov
push
repz
mov
out
push
in
add
loope
mov
std
jg
stc
out
dec
js
and
and
push
fucomi
sbb
retf
out
sub
push
inc
stos
and
outs
add
jns
retf
call
addr16
clc
jg
and
dec
mov
mov
pop
mov
repnz
cmc
push
jmp
cmp
mov
xchg
jecxz
dec
cwde
xor
ret
addr16
jmp
cmc
addr16
pop
in
mov
cli
clc
lods
dec
sub
loope
in
mov
(bad)
push
hlt
(bad)
mov
mov
imul
cld
cli
movs
jecxz
mul
jp
sti
scas
test
fwait
mov
scas
mov
aad
out
je
lds
(bad)
xor
repz
cld
jne
je
(bad)
sahf
sahf
fsub
pop
inc
outs
mov
push
jmp
iret
fidivr
outs
lock
(bad)
call
loop
mov
(bad)
outs
cmp
xor
int
addr16
sub
stos
call
mov
jb
inc
mov
lea
or
cmps
cld
fnstsw
and
mov
push
jns
mov
sub
push
jne
xchg
pushf
jae
fisub
cmp
mov
xor
mov
lea
imul
data16
out
push
jge
mov
push
int3
scas
xchg
cmps
mov
cdq
or
(bad)
stos
test
jg
push
fistp
ror
jne
lock
fstp
jmp
iret
mov
add
dec
cld
imul
imul
jecxz
enter
ins
or
arpl
mov
push
xor
cld
push
out
add
ins
mov
cmps
into
mov
cmp
(bad)
aad
cli
mov
cld
pop
inc
lods
out
sbb
ret
ret
ret
jmp
stc
xor
sbb
(bad)
vpmaxuq
xlat
dec
sbb
div
xor
ins
mov
sbb
jg
sbb
push
not
pop
rcr
aad
ja
push
cmp
sub
dec
ins
lahf
dec
inc
mov
pop
ds
stos
stos
mov
xor
dec
(bad)
push
jmp
jo
loope
jne
arpl
jbe
pop
pop
pop
mov
loop
dec
push
imul
fcom
xchg
ins
out
pop
dec
xlat
mov
pop
les
cli
xor
push
hlt
stos
and
pop
(bad)
(bad)
dec
(bad)
sub
fdiv
jnp
popa
popa
push
je
and
out
(bad)
frstor
aaa
out
xchg
dec
imul
(bad)
sbb
iret
mul
push
in
lahf
imul
cmc
pushf
jg
fist
cld
mov
or
push
lock
pushf
cmp
out
cmps
adc
cmp
les
out
inc
dec
push
mov
not
stos
xor
int
sub
stc
mov
xor
xor
mov
cwde
sub
popa
jecxz
xchg
(bad)
cmp
jnp
cmp
or
das
sub
add
iret
fimul
xchg
pop
in
imul
lds
xchg
inc
sub
rol
shl
sar
leavew
in
retf
push
jecxz
and
out
sub
repz
inc
add
repz
and
jbe
fldenv
xor
jb
(bad)
lock
or
xchg
mov
mov
mov
jnp
ja
fimul
repnz
inc
jae
movs
jb
std
ss
pop
iret
repz
aas
jns
sub
mov
repnz
pop
outs
jns
aas
xchg
test
into
pop
mov
cmp
sahf
mov
and
clc
cmc
sub
and
dec
(bad)
(bad)
push
clc
ds
iret
(bad)
pop
push
cmp
stc
mov
fmul
and
xor
xor
inc
(bad)
and
push
sub
cmp
sbb
int3
push
inc
cmp
in
inc
pop
mov
leave
mov
cs
scas
int3
repz
xchg
sbb
xor
add
leave
in
cmp
cmp
sub
aam
jge
rcr
stos
adc
pop
push
sahf
cmp
hlt
cdq
adc
mov
sbb
jmp
fwait
cli
pop
pop
idiv
fdivr
mov
xor
out
mov
xor
aam
lea
pop
cmps
fs
jne
cdq
sbb
mov
stc
call
(bad)
addr16
sbb
adc
pusha
mov
lea
jno
dec
lds
mov
jno
pusha
and
xchg
jecxz
sbb
adc
or
fadd
lds
pop
pop
test
mov
inc
cmps
in
imul
jmp
push
movs
xchg
push
fwait
cmp
inc
xchg
push
add
in
fldenv
jbe
sar
clc
xlat
sub
jecxz
jnp
int3
out
dec
cs
xchg
adc
adc
mov
push
loope
sbb
add
or
inc
frstor
je
dec
jl
xchg
sti
lods
out
gs
jo
(bad)
outs
loopne
lock
and
xor
xchg
mov
(bad)
pop
jno
mov
jae
xor
aam
mov
aam
push
adc
cmp
not
loopne
out
rcl
adc
inc
retf
cmp
repnz
mov
xor
nop
cmp
enter
inc
fdiv
and
inc
sbb
push
pop
sar
aaa
bound
xchg
add
jg
cld
inc
pop
pop
cmp
data16
mov
sbb
outs
test
ds
xor
sub
jle
sbb
mov
mov
repz
(bad)
cmp
sub
cmp
mov
out
ds
mov
sahf
jge
sbb
dec
pop
ficomp
enter
sub
adc
gs
xor
aaa
call
mov
test
cmp
xor
enter
loop
pop
mov
mov
in
test
retf
lds
pushf
cli
cs
dec
sahf
ret
cmp
enter
inc
ss
fwait
mov
or
movs
into
mov
js
cmp
inc
(bad)
repz
test
mov
ins
push
pop
test
ss
and
xor
in
inc
(bad)
dec
xlat
fnstsw
inc
xchg
dec
mov
movs
scas
ret
pop
push
pop
dec
loope
push
dec
mov
ins
mov
push
lds
retf
fwait
ret
cld
out
xor
mov
cmp
inc
jge
(bad)
lahf
jb
pusha
cmp
(bad)
mov
jb
dec
cmp
mov
add
mov
add
out
fnop
and
test
inc
push
loope
jo
push
fdiv
es
pop
pop
add
mov
and
nop
push
test
inc
inc
mov
jns
cmps
lds
jno
push
jle
test
dec
imul
push
retf
mov
lds
push
push
bound
xor
ins
mov
leave
add
adc
jb
pop
cli
lds
xchg
jmp
xchg
sbb
sbb
popa
scas
lahf
enter
jno
cmp
cdq
add
mov
jmp
jle
mov
adc
push
fucomip
outs
jp
(bad)
or
loopne
push
add
dec
cmp
ficom
ror
ins
lods
cmp
shl
mov
cs
add
pop
imul
jl
fs
loop
push
pop
pop
mov
call
add
sub
bound
enter
dec
lea
jb
sub
xor
ror
dec
jnp
xchg
cmp
out
inc
jb
mov
inc
icebp
pop
or
jge
push
jle
jl
xchg
jo
inc
xor
and
adc
xchg
jno
sahf
ins
push
or
(bad)
rol
mov
jo
std
mov
push
pop
aaa
cwde
pop
xchg
stos
test
and
mov
xchg
sti
es
jle
inc
shl
dec
mov
push
jle
imul
xor
dec
xchg
xor
enter
mov
data16
push
inc
bound
and
sbb
and
jge
enter
jmp
loop
sub
pop
pop
sbb
pop
in
mov
and
adc
cmps
adc
pop
(bad)
out
out
rcl
fisubr
icebp
xchg
add
adc
adc
push
pop
aad
sbb
ret
loope
or
pop
sub
lods
jnp
call
or
inc
and
out
sub
aaa
hlt
or
add
lods
fnstenv
inc
cs
lds
sub
sub
pop
(bad)
inc
add
xchg
sbb
out
fs
test
mov
not
pop
lock
jp
sub
push
jo
mov
(bad)
jge
jae
aad
mov
jg
mov
xchg
sub
movs
add
mov
mov
mov
loope
rol
pop
sub
inc
push
jp
test
or
mov
sar
lods
(bad)
stc
int3
jae
adc
xor
(bad)
or
jne
adc
sub
ja
and
in
xchg
pop
xor
or
jge
inc
push
pop
ret
and
or
jnp
mov
cs
mov
cmp
jo
je
pop
lea
sub
test
or
test
sbb
xchg
mov
mov
push
or
pop
fadd
ins
cmps
je
sbb
lods
pop
adc
sbb
dec
out
test
fist
xchg
sar
cs
fist
mov
daa
push
ffreep
adc
dec
cmps
imul
xabort
mov
in
lds
imul
in
add
xchg
sbb
xor
mov
xor
xchg
rcl
fadd
pop
xor
es
mov
jbe
sub
fidivr
inc
adc
jmp
or
xchg
lds
lods
dec
inc
push
ins
aam
ret
idiv
sbb
shr
xor
ret
outs
or
or
clc
sbb
pusha
inc
loope
push
or
jbe
adc
icebp
dec
aaa
retf
loop
adc
data16
jbe
xchg
jno
jp
jbe
push
xor
pop
fsubrp
xor
call
cmp
rcl
xchg
cmp
xor
sub
dec
sub
push
mov
mov
mov
jb
fist
add
push
(bad)
adc
xor
bound
mov
loope
dec
xchg
bound
sub
ror
sbb
les
cmp
push
xchg
out
test
scas
arpl
fs
sub
or
pusha
dec
pop
pop
adc
nop
add
sbb
pop
test
sbb
push
inc
add
mov
push
jbe
test
push
mov
add
and
js
sbb
sub
out
out
arpl
int3
cmps
add
bnd
movs
xchg
xchg
xor
xchg
inc
lods
daa
shrd
test
xor
movs
ror
repnz
xor
xor
std
jle
in
and
push
je
jnp
test
in
fcmove
cmp
sub
fmul
int3
lods
and
sbb
mov
mov
xor
in
imul
cs
imul
push
pop
fistp
stc
sar
dec
retf
into
les
(bad)
jl
pop
loope
out
fld
cli
dec
(bad)
push
xchg
outs
sbb
inc
iret
mov
cmp
lock
mov
rol
scas
dec
into
leave
ins
ins
push
dec
sub
arpl
inc
outs
sbb
lahf
lea
mov
repz
jo
into
ja
jnp
cmp
mov
and
pop
jecxz
mov
cdq
xchg
fs
jge
sbb
test
test
jnp
and
xlat
pop
sahf
es
aad
das
icebp
pop
mov
mov
lds
movs
pop
jmp
xlat
test
jmp
dec
outs
sbb
sub
ja
fs
xor
rcl
sbb
ret
in
(bad)
inc
push
jns
jecxz
dec
cli
or
xchg
mov
ja
adc
sti
sahf
jge
sbb
pop
push
out
fs
cmp
add
mov
popf
out
xchg
clc
sub
cmp
cli
lods
out
sbb
pop
int
gs
clc
retf
or
je
jno
jb
sbb
in
nop
ins
gs
inc
sbb
pop
push
mov
mov
and
sbb
push
mov
add
push
test
add
call
enter
dec
push
dec
pusha
loop
not
bound
jp
lds
jmp
lods
or
fsub
push
nop
retf
xchg
push
cmp
mov
push
stc
rol
ret
pop
pop
cmps
fsubr
jb
sub
mov
imul
or
mov
jbe
ds
mov
jne
div
sbb
fidivr
dec
test
sbb
sub
adc
xchg
loop
rcl
and
push
sub
popf
jns
mov
mov
cmp
push
add
into
or
call
test
jbe
in
es
pop
push
cdq
mov
fild
mov
push
ds
or
ss
loop
mov
out
out
fcomp
xchg
inc
add
fs
fs
sub
lahf
ficom
(bad)
lods
rol
xchg
bound
mov
pop
push
out
loope
clc
or
test
or
mov
mov
dec
mov
lock
and
cmps
xor
dec
dec
cmp
sub
loopne
imul
lea
call
xchg
(bad)
sbb
inc
cs
iret
nop
fwait
mov
push
cmp
outs
pop
lds
xchg
inc
stos
pushf
dec
ins
mov
out
rol
xor
jl
addr16
sbb
test
or
leave
push
pop
push
sbb
pusha
cmps
ret
push
fsubr
repz
loopne
cs
xchg
xlat
inc
movs
push
mov
into
jbe
and
movs
add
jns
mov
popa
sbb
sub
shr
jp
in
xor
lock
pop
pusha
outs
imul
mov
mov
or
inc
push
sub
pushf
shl
(bad)
int3
jnp
dec
or
test
test
cld
adc
cs
loope
cmp
pop
inc
mov
pop
lods
add
add
pusha
les
nop
(bad)
imul
jg
call
cmp
movs
sbb
jae
retf
jecxz
aaa
mov
je
sti
jge
in
push
dec
mov
sbb
mov
push
out
dec
xor
daa
fisttp
inc
adc
sbb
repnz
and
adc
sub
mov
lods
or
push
jb
int
loope
push
mov
inc
add
xchg
fmul
and
mov
xchg
jns
xor
adc
xor
iret
push
jbe
enter
pop
jo
popf
cmp
mov
push
ins
mov
sub
inc
cdq
add
xor
test
retf
cmp
mov
xchg
imul
retf
pop
or
icebp
out
(bad)
ror
dec
(bad)
jmp
mov
retf
imul
call
sbb
retf
jb
add
xchg
push
ret
mov
gs
test
int3
ds
push
xchg
mov
popa
cmp
and
stos
add
push
lds
mov
sbb
enter
icebp
fisttp
in
push
or
cli
pop
dec
mov
xchg
in
jmp
jbe
hlt
shr
aad
sub
mov
jmp
addr16
mov
int3
fs
imul
adc
sbb
push
dec
in
or
(bad)
in
movs
push
pop
sub
data16
and
sbb
das
les
mov
stc
mov
mov
nop
mov
fcom
cmp
adc
cdq
pushf
xchg
push
cmp
xor
cmp
mov
out
cmp
xchg
dec
cmp
push
xchg
mov
adc
push
inc
cdq
add
loop
pop
cdq
fist
cs
cmps
int3
sub
fiadd
sub
ds
mov
dec
dec
cmps
adc
dec
sub
sub
xchg
sar
pop
je
in
push
cmp
push
or
push
test
pushf
rcl
movs
rol
pop
inc
test
test
pop
dec
push
pop
hlt
loope
movs
es
xor
loopne
nop
loop
fwait
mov
dec
in
mov
loope
jo
bound
dec
pop
push
mov
repnz
xchg
jle
mov
addr16
test
add
mov
add
popf
xchg
icebp
mov
je
sbb
xor
sub
fwait
movs
mov
shl
or
push
add
pop
(bad)
sub
cmp
mov
mov
push
xchg
dec
in
sub
and
dec
pusha
dec
adc
xchg
push
sbb
test
or
ja
fmul
xchg
inc
dec
retf
jno
or
jo
sbb
xchg
sti
sub
aas
cmp
imul
movs
mov
and
xchg
adc
out
mov
xchg
lahf
cmps
add
ret
test
cli
in
sub
inc
or
in
adc
(bad)
and
sti
push
cmp
movs
adc
dec
jo
movs
xchg
add
jecxz
add
dec
jge
xchg
xchg
popa
or
retf
leave
adc
mov
or
pusha
adc
test
popf
or
adc
adc
repnz
test
add
fild
and
xchg
jne
enter
xor
sar
cmc
(bad)
fs
pop
inc
pop
add
mov
imul
loope
std
sub
ins
sub
dec
loope
add
inc
mov
jno
sbb
and
dec
pop
push
inc
jmp
or
sub
shr
lea
sub
inc
mov
jo
cmp
test
gs
rcl
add
mov
jbe
test
test
imul
pop
ret
pop
add
push
adc
ret
pop
cmps
sub
imul
dec
pop
push
adc
adc
and
lea
mov
in
sbb
pop
pop
repnz
sub
adc
pop
movs
mov
mov
xor
jnp
rcl
ror
aad
dec
push
inc
fsub
and
sbb
icebp
fcomp
ins
xchg
jecxz
push
ret
arpl
or
pop
cs
nop
(bad)
and
pop
dec
lahf
(bad)
mov
mov
out
jnp
pop
test
pop
and
jmp
out
leave
dec
add
add
push
out
xlat
jo
add
xchg
inc
and
lgs
jno
jecxz
mov
leave
cmp
in
add
and
ficomp
xchg
sbb
jne
sub
mov
jl
ret
loopne
fild
ret
xor
imul
mov
iret
jnp
pushf
fild
inc
loopne
out
int3
and
sahf
in
jne
jae
mov
lea
sub
sbb
(bad)
imul
fisttp
lods
mov
sbb
sahf
addr16
fld
jns
mov
jnp
xor
dec
cmp
outs
imul
outs
mov
test
sub
push
or
xor
or
cwde
xor
mov
sub
(bad)
dec
shr
daa
outs
hlt
mov
and
loop
adc
jecxz
sbb
jnp
cmp
adc
adc
shl
dec
xchg
mov
rol
aam
fucomi
hlt
cdq
je
mov
push
loop
pop
movs
adc
push
or
shr
leave
ja
mov
fdiv
xor
mov
cdq
mov
(bad)
xchg
mov
test
lds
push
enter
test
cmp
xchg
mov
xor
seta
pop
mov
enter
sar
mov
mov
mov
xchg
in
sti
(bad)
aam
cmp
cmp
retf
pop
dec
xchg
das
xchg
mov
pop
in
mov
push
retf
out
cdq
inc
fwait
int
cmps
sbb
rol
xor
outs
xchg
xchg
repnz
inc
or
adc
xchg
addr16
fbld
jp
sbb
xchg
mov
(bad)
fmulp
dec
out
inc
imul
inc
add
push
jae
loopne
pop
aam
ret
fs
push
sbb
push
rcl
call
dec
sub
sub
or
rol
mov
jo
push
cwde
loope
xchg
inc
pop
mov
sub
jo
mov
popf
xor
push
call
inc
rcl
aad
xor
add
pushf
cmp
pop
loope
mov
pop
sahf
cmp
push
loope
leave
fstp
mov
or
mov
push
jb
xchg
sub
xor
and
loopne
pop
mov
dec
mov
loope
xchg
jne
and
cld
push
loop
dec
sbb
mov
cmp
fnsave
mov
sar
mov
mov
aaa
and
mov
das
repnz
aas
shl
loope
xor
inc
push
sub
xchg
test
pusha
push
xchg
inc
sub
pop
cmp
sbb
out
mov
sub
jne
les
aam
xor
cmps
fdiv
ja
inc
aas
fstp
sbb
cmp
mov
adc
push
inc
enter
mov
shl
push
das
cmp
mov
push
fmul
add
xchg
inc
xchg
jo
fisubr
mov
mov
ficomp
ja
test
outs
xor
and
pusha
push
ret
ja
outs
ret
jno
cmp
jmp
or
mov
dec
sbb
fs
xchg
mov
mov
cwde
mov
add
sub
lds
xchg
sbb
push
inc
pop
adc
mov
and
xchg
pop
pop
(bad)
adc
inc
mov
adc
js
das
lea
jl
mov
iret
icebp
ss
aas
mov
inc
clc
dec
movs
xlat
jg
mov
ins
stos
ficom
je
clc
mov
sbb
adc
(bad)
enter
mov
stos
jne
retf
pop
or
(bad)
in
repnz
inc
shl
test
enter
je
ret
dec
sub
mov
or
mov
or
add
popa
inc
xchg
add
xchg
in
aam
sub
aam
jmp
mov
mov
sahf
mov
dec
(bad)
dec
sbb
and
xchg
sub
lods
adc
adc
jl
ins
or
mov
cmps
xor
imul
add
xchg
add
mov
or
push
xor
sbb
hlt
fs
in
iret
popa
fwait
std
movs
test
cmc
mov
out
inc
in
out
sub
and
cmp
mov
ror
sbb
retf
stos
imul
in
sub
sub
mov
test
ins
int3
and
test
pusha
out
es
enter
mov
sti
imul
push
jg
shr
mov
lock
cmp
cmp
leave
aam
dec
pusha
lock
out
jecxz
xchg
shr
push
retf
mov
mov
out
xchg
leave
xchg
mov
aaa
ja
xchg
jae
cdq
cld
outs
mov
lods
mov
loopne
jns
sbb
outs
movs
call
pop
jp
shl
movs
bound
jbe
cdq
pushf
data16
test
test
cli
addr16
mov
enter
xchg
xchg
and
or
jnp
xor
sub
or
dec
push
shr
pop
aam
test
ins
outs
mov
mov
jno
xor
add
ja
imul
repz
fisttp
movs
addr16
jno
add
pop
xor
xchg
rol
push
adc
push
clc
pop
test
and
pop
inc
pop
stc
and
aad
jae
cmp
inc
fisttp
or
or
fwait
inc
std
neg
jg
arpl
pop
fdivr
and
xor
jbe
jne
adc
shr
in
loope
and
cmp
cmp
fadd
sbb
dec
mov
mov
arpl
cmp
int
jno
pop
push
xor
imul
xchg
and
imul
ja
inc
dec
fisub
and
rol
outs
adc
push
push
jle
gs
and
dec
(bad)
sbb
inc
cld
out
inc
retf
add
stos
mov
inc
mov
ret
push
nop
(bad)
jmp
ror
or
(bad)
mov
clc
push
mul
jns
int3
inc
xor
or
and
xor
or
sbb
movs
rol
std
cwde
push
dec
xchg
inc
adc
addr16
lods
(bad)
sbb
je
call
push
in
xchg
stc
sbb
or
jo
js
cmp
pop
push
jo
ja
inc
jmp
mov
into
sbb
imul
ret
sbb
xlat
outs
sub
and
push
rcr
adc
mov
pop
ins
stc
mov
sub
in
and
movs
loope
cs
or
fisubr
or
loopne
adc
out
push
ins
mov
dec
cmp
dec
test
jmp
xlat
(bad)
xchg
(bad)
stos
ins
dec
adc
cld
es
bnd
mov
jecxz
sbb
jmp
mov
gs
adc
das
xchg
into
leave
pop
fsubr
push
or
outs
mov
push
mov
dec
nop
add
adc
mov
adc
jecxz
and
(bad)
inc
lea
fs
sbb
inc
jl
mov
inc
ficomp
dec
xchg
dec
fcom
rcl
js
mov
or
cmp
and
into
pop
sbb
fwait
ins
leave
iret
call
in
pop
xchg
dec
es
jmp
mov
cmp
sbb
sahf
das
sti
stc
add
dec
or
daa
dec
xchg
lahf
add
fsub
cmp
mov
mov
sub
loopne
popa
(bad)
aam
add
enter
and
in
aas
retf
test
movs
adc
nop
or
and
cli
pop
xor
test
in
jo
sub
retf
mov
pop
std
je
or
bound
in
dec
fisub
ds
lock
leave
xchg
mov
xchg
cwde
(bad)
int3
mov
push
push
hlt
xor
pop
(bad)
push
sbb
movs
loopne
lds
mov
push
add
sbb
aad
add
mov
xchg
inc
shl
leave
aam
sbb
cmc
retf
sbb
mov
ror
xchg
dec
add
lahf
outs
leave
lea
lods
and
adc
push
add
mov
inc
loop
push
add
into
xchg
mov
mov
nop
mov
arpl
enter
xchg
test
xlat
mov
cdq
xchg
mov
push
stc
fadd
bound
hlt
dec
sub
or
and
mov
add
sub
popa
mov
and
sbb
dec
dec
cmc
adc
or
or
mov
mov
jmp
mov
and
mov
xor
stc
test
jne
and
xor
inc
dec
mov
pop
dec
xor
or
mov
sub
leave
and
imul
jmp
inc
cmp
call
xchg
popf
jle
loop
add
cld
in
pop
mov
add
and
mov
mov
or
addr16
test
nop
popf
cwde
xor
scas
les
add
push
dec
mov
or
xchg
and
pop
xchg
retf
xor
or
dec
or
(bad)
retf
test
ret
cli
pop
adc
cmp
icebp
loopne
sub
sub
sub
push
inc
xchg
push
(bad)
cli
dec
fdivr
adc
leave
jo
sub
mov
das
mov
fld
sub
retf
and
sbb
jge
movs
xchg
xchg
pusha
or
push
mov
mov
push
dec
mov
cmp
test
dec
mov
mov
xchg
mov
int3
les
pushf
mov
push
aam
xor
mov
dec
add
arpl
inc
xchg
cwde
xor
pusha
fldcw
xchg
popa
pop
int3
loopne
cmc
inc
push
mov
mov
mov
xchg
test
into
add
out
xor
cmp
ins
int3
cmp
xchg
test
add
inc
dec
fsubr
ss
sar
call
lahf
pop
adc
imul
sbb
test
(bad)
jbe
inc
pop
jb
ret
push
rcl
mov
xor
mov
cdq
jo
or
es
xor
cld
fild
das
fistp
fnstenv
push
and
ja
push
in
xor
fmul
jl
sbb
push
inc
dec
leave
cdq
test
mov
pop
push
push
or
cmps
inc
cmp
loope
mov
push
mov
or
dec
cs
mov
dec
xchg
jae
inc
call
lds
hlt
xchg
mov
mov
mov
psubusw
(bad)
adc
fwait
push
bound
jnp
jns
fidivr
shr
inc
push
inc
mov
push
jmp
call
inc
dec
in
jbe
mov
jecxz
adc
call
stos
int
dec
aaa
sub
neg
mov
mov
fs
jno
sar
in
sbb
pushf
jbe
in
nop
pop
add
addr16
sbb
inc
dec
xchg
retf
ins
outs
test
clc
adc
push
cmp
(bad)
sbb
cmp
or
inc
mov
push
movs
sub
push
repnz
mov
arpl
bound
mov
rcl
(bad)
aaa
outs
mov
dec
(bad)
icebp
adc
mov
sbb
inc
push
inc
shl
pop
les
adc
push
call
add
or
retf
cli
stos
jge
cmp
lods
add
cmp
xchg
fist
xchg
ret
and
(bad)
sti
out
cmc
sub
test
jbe
inc
fldcw
dec
out
push
je
xchg
inc
mov
cmp
loope
mov
cmp
and
stc
call
test
es
mov
mov
aaa
pushw
ret
pop
pop
mul
xor
iret
cmp
or
stc
rcl
push
inc
push
mov
fist
(bad)
add
pop
jp
mov
cmp
leave
and
dec
jb
jne
dec
mov
xchg
sbb
sub
or
xchg
hlt
in
loop
int
dec
mov
cwde
xchg
jg
ret
xor
leave
and
and
(bad)
leave
cdq
and
pusha
inc
arpl
fcmovb
das
ror
push
pop
sbb
xchg
adc
add
mov
add
xor
xchg
jns
popa
cbw
cmp
data16
jae
ret
jo
ss
shl
repz
popf
cdq
aad
loop
fwait
stos
call
jae
call
neg
loopne
cmps
lahf
sub
dec
mov
pop
and
dec
arpl
pop
test
jmp
leave
fcmovb
lds
cwde
cld
xor
mov
stos
mov
xchg
jecxz
push
cdq
xor
es
es
out
call
add
add
mov
stos
loop
or
(bad)
sbb
jmp
cdq
cld
pop
fucom
xchg
push
loop
cdq
arpl
cs
adc
xor
mov
inc
dec
(bad)
jns
mul
push
fistp
fist
out
popf
fimul
xlat
pop
iret
push
in
jo
loopne
test
ja
sbb
test
or
aas
xchg
nop
sbb
xchg
mov
mov
aaa
int3
jnp
fild
aaa
retf
mov
sub
cmp
pop
dec
jmp
rcr
cwde
push
pop
das
shr
add
enter
mov
and
or
daa
test
push
out
add
cmps
ja
dec
dec
cmp
bound
fmul
push
outs
push
cs
add
pop
mov
pop
sub
(bad)
or
dec
cmp
cmp
or
outs
cmp
mov
jo
icebp
mov
inc
in
fcom
lds
lods
jo
inc
mov
jno
movs
adc
les
call
add
jbe
adc
mov
add
test
fld
add
sbb
inc
lods
add
cs
sbb
ret
outs
lds
push
push
adc
cwde
push
pop
rcr
retf
sub
inc
ficom
push
add
push
mul
cmp
sub
xchg
shr
shl
mov
outs
or
push
loopne
loopne
adc
das
jo
js
sub
mov
imul
in
mov
mov
(bad)
pop
mov
cmp
fmul
cmp
sub
into
mov
push
inc
repz
int3
pop
pop
pop
mov
outs
mov
push
in
sub
add
test
cmps
in
cmp
adc
mov
lea
fs
leave
inc
pop
jle
or
sahf
sahf
loopne
or
lahf
or
loopne
std
(bad)
outs
xchg
push
or
jp
ins
ja
and
iret
xor
sbb
xor
leave
data16
xchg
mov
xor
xor
xor
sar
push
shr
fld
cmc
cmp
std
adc
sbb
xor
fs
jo
test
or
shr
sar
or
leave
in
cld
jecxz
je
pop
and
addr16
push
call
mov
pop
sbb
outs
ret
lea
mov
adc
js
sbb
ror
mov
cld
fidiv
es
cmp
inc
mov
out
jae
daa
sub
xchg
add
or
push
movs
sbb
xchg
xchg
mov
jne
mov
int3
inc
mov
pop
stc
nop
int3
enter
fisttp
mov
in
dec
ret
in
push
xor
rcl
dec
push
cmp
push
jecxz
dec
dec
pop
fs
mov
jo
pop
lods
mov
das
fsubp
(bad)
mov
test
clc
adc
and
hlt
mov
shr
jmp
inc
push
(bad)
bnd
and
nop
mov
mov
and
adc
mov
bound
fwait
adc
or
sub
outs
jno
and
push
jecxz
arpl
(bad)
jne
hlt
mov
or
mov
imul
push
ins
sbb
movs
pop
aad
dec
cmp
dec
xor
fbld
dec
or
sub
push
std
add
outs
pop
popa
(bad)
or
int
or
jge
fs
cmp
adc
stos
(bad)
std
fsub
xor
(bad)
mov
inc
hlt
daa
xor
cs
mov
dec
xor
mov
jl
adc
scas
xor
mov
pop
rcr
dec
icebp
sti
xchg
call
add
outs
mov
push
js
sti
lock
and
mov
xchg
xor
jecxz
(bad)
movs
or
mov
push
mov
movs
into
mov
stc
and
out
or
dec
popa
inc
(bad)
mov
or
(bad)
jmp
cmp
cmp
leave
jmp
int
push
(bad)
shl
push
push
sti
or
(bad)
push
pop
scas
loope
cmp
jg
push
inc
pop
int
mov
adc
sbb
lods
pop
nop
out
clc
inc
dec
retf
xor
jne
jno
sbb
xor
mov
add
push
test
or
dec
arpl
sub
jmp
fmul
xor
xchg
mov
ins
pop
(bad)
add
sub
lock
xor
mov
lock
ja
jle
pop
daa
xor
sbb
inc
pop
cmp
fs
outs
ret
ss
mov
fdivr
arpl
mov
sti
cmp
jns
add
repz
push
stos
fwait
xchg
push
jnp
mov
loopne
mov
scas
push
jo
out
dec
nop
int
cld
lods
lea
out
outs
(bad)
push
mov
mov
data16
popf
fistp
mov
mov
mov
pop
inc
mov
fneni(8087
out
sub
and
call
es
int3
dec
mov
xchg
stos
jnp
lods
stos
pop
js
and
loope
mov
pusha
js
lods
xor
push
shr
push
sbb
scas
nop
jae
and
adc
mov
call
cmp
push
rol
mov
push
adc
pop
fisub
int3
neg
push
sti
and
sahf
mov
lock
mov
xor
lea
sub
push
cmp
(bad)
nop
jge
fisubr
mov
in
jle
stc
rol
xchg
pop
loop
sbb
xchg
ins
add
xor
xchg
nop
call
mov
mov
fwait
inc
mov
mov
mov
xchg
int3
jbe
dec
xor
sahf
add
dec
test
cmp
dec
(bad)
hlt
call
jnp
fs
push
xor
cmc
or
(bad)
retf
pop
mov
(bad)
mov
inc
sbb
(bad)
cld
(bad)
test
pop
test
(bad)
loopne
je
jg
push
mov
loope
jb
repnz
sysenter
sub
imul
push
push
ds
retf
shl
cld
and
jnp
sub
mov
sbb
adc
pop
repz
mul
fdiv
cmp
call
popf
cmp
(bad)
data16
js
arpl
sbb
push
mov
clc
xchg
je
mov
sub
jb
stos
jmp
sub
mov
add
ret
mov
push
jle
in
xchg
or
cmp
jbe
(bad)
imul
test
in
pop
outs
test
xchg
fdiv
or
out
cmc
fcomi
addr16
adc
scas
dec
fiadd
inc
add
add
jmp
enter
adc
loopne
push
jl
push
sub
mov
push
add
sbb
shl
in
popa
mov
dec
lea
sahf
std
pop
(bad)
shl
or
inc
aas
movs
sbb
sahf
or
xor
add
in
mov
inc
jmp
cmps
sbb
aas
push
jne
mov
stc
loope
and
jge
jb
(bad)
mov
cmps
mov
out
or
sbb
inc
loope
jl
clc
lods
and
ds
rcr
into
mov
ins
push
mov
ja
mov
sbb
mov
mov
adc
pop
xchg
outs
repz
jg
add
push
mov
scas
mov
or
in
dec
in
pushf
inc
(bad)
jp
call
xchg
and
cmp
mov
cs
adc
push
dec
dec
mov
xchg
sahf
repnz
idiv
clc
adc
xchg
pushf
mov
popf
imul
ins
pop
in
cs
jns
lahf
loopne
jmp
std
sub
ret
xchg
pop
mov
aas
ins
ficomp
mov
push
sbb
aad
push
mov
pushf
adc
adc
out
cmp
out
lods
lea
icebp
(bad)
dec
sahf
lock
cmp
xor
xchg
sbb
xchg
out
jle
xchg
popf
fbstp
xchg
(bad)
das
xchg
cmp
xchg
mov
xchg
jg
int3
push
and
bnd
jge
or
jg
mov
dec
lods
mov
xor
(bad)
cld
inc
in
pop
imul
dec
retf
push
cli
push
in
xlat
pop
ss
std
push
add
ja
push
push
cmp
dec
sbb
mov
ins
stos
pop
fsub
cmp
push
fld
nop
cmp
jmp
and
jne
jmp
xor
jno
shl
pop
sti
ret
movs
inc
shr
(bad)
ret
pop
gs
sub
inc
dec
in
and
imul
pop
movs
leave
loopne
stc
mov
iret
dec
retf
sub
jmp
xlat
ds
mov
fmul
loop
cdq
mov
dec
push
sbb
xchg
pushf
pushf
jo
mov
mov
sub
aad
stc
ror
jo
mov
mov
dec
push
stos
jns
cmp
dec
addr16
xor
jp
push
ficom
jp
jmp
loop
push
cmc
aad
push
es
pop
ror
popf
arpl
add
dec
retf
jmp
sti
fisubr
mov
adc
out
jo
mov
nop
pop
and
jle
jmp
mov
cmp
pop
or
jnp
out
or
xchg
or
add
push
lahf
mov
stos
ret
jmp
test
es
sub
and
push
mov
lea
retf
mov
xchg
leave
sbb
and
test
pusha
fscale
jbe
and
push
xchg
shr
xor
dec
pop
push
test
jmp
ins
jns
(bad)
aad
enter
mov
arpl
call
push
sub
mov
pop
push
jb
mov
pop
test
mov
scas
sti
aaa
neg
out
dec
dec
mov
xor
mov
and
sbb
bound
cld
add
push
add
push
ss
mov
dec
clc
push
inc
leave
leave
adc
inc
lock
push
xchg
push
or
in
in
xchg
ja
jnp
cld
ret
adc
stc
pusha
mov
pop
cmp
push
sbb
or
dec
inc
ss
mov
inc
(bad)
jnp
mov
jg
lahf
outs
jnp
xchg
arpl
jbe
and
lahf
dec
shl
mov
das
imul
adc
inc
clc
iret
idiv
das
mov
jmp
push
mov
loop
xor
retf
push
ins
mov
retf
pop
test
fisttp
in
mov
mov
inc
mov
test
in
dec
hlt
js
aad
jno
sbb
jmp
pop
sbb
fmul
daa
shr
imul
jl
sub
stc
sar
jno
pop
jmp
sahf
ror
and
sbb
out
sub
or
add
inc
outs
test
jp
out
popa
(bad)
jecxz
shr
adc
dec
and
fnsave
pop
xor
outs
test
(bad)
in
repnz
loopne
cvtdq2ps
xor
dec
push
stos
pop
in
sub
push
or
lods
je
push
loope
js
mov
cmp
popf
inc
in
pusha
mov
cli
jle
push
sub
mulps
push
fbstp
rcl
pop
out
cs
out
fld
xchg
pop
or
popa
mov
repnz
mov
xor
outs
cmp
out
js
lods
cmp
mov
arpl
or
jae
pop
(bad)
out
lock
ret
jbe
ja
cmp
mov
leave
mov
add
or
adc
fcmovbe
jmp
dec
fsubr
cmp
cmp
leave
mov
popf
ins
fiadd
cld
or
popf
aad
pop
ins
js
inc
inc
and
sbb
aam
out
nop
push
jecxz
repz
fist
xchg
jmp
sbb
cmp
dec
(bad)
in
fnstcw
cwde
push
les
lahf
cmp
jge
sbb
pop
cmp
or
fsubr
rcl
jns
test
fiadd
mov
mov
pop
sbb
mov
and
xchg
or
arpl
inc
push
inc
mov
iret
fsubr
mov
in
fcom
aas
inc
adc
retf
mov
in
(bad)
xor
jo
add
(bad)
fcmovnb
in
out
jge
cmp
cmp
into
ret
sub
jge
push
jns
(bad)
outs
mov
and
leave
mov
test
or
fld
jle
jbe
inc
jle
hlt
cmp
xchg
xchg
cmp
jo
pop
popa
out
or
sbb
not
cmp
loope
ins
pop
loopne
and
jecxz
pop
out
jns
addr16
mov
ret
jnp
add
sbb
pushf
ja
cmp
shl
xchg
out
push
iret
js
out
es
add
div
inc
mov
popf
(bad)
imul
add
fidiv
call
lods
jp
or
jecxz
cli
mov
retf
xchg
(bad)
mov
cli
mov
mov
push
pop
shl
int
mov
ret
inc
sbb
outs
fldenv
dec
ficom
adc
dec
lods
ret
out
cdq
mov
addr16
imul
dec
add
xor
das
cmps
jecxz
or
js
or
jecxz
lods
in
mov
sbb
loop
shr
mov
popf
or
test
icebp
fistp
dec
rol
out
cmc
ins
cld
test
inc
mov
arpl
cmp
push
mov
jbe
inc
call
push
adc
and
jg
pop
sahf
or
pop
dec
cmp
inc
mov
and
cmp
jle
fild
pop
cwde
rol
outs
push
cmp
jne
jmp
pop
rcr
xor
push
out
rol
push
adc
add
ja
pop
adc
mov
xchg
out
xor
ficomp
jmp
scas
xchg
fcmovnb
push
outs
cmp
in
out
ret
ins
icebp
shl
bound
and
cmp
sbb
repnz
(bad)
xor
inc
pop
in
and
nop
fmul
pop
cmp
mov
inc
loope
inc
cmp
jmp
add
popa
clc
icebp
jo
repz
dec
loopne
jmp
mov
int
out
cmps
ins
push
ja
out
out
in
int3
movs
mov
inc
stc
test
jo
mov
call
les
and
lods
jl
mov
dec
ror
scas
test
movs
sti
retf
and
imul
cmp
mov
add
imul
movs
fdivr
push
loop
retf
adc
stc
movhlps
adc
mov
adc
inc
adc
cmp
cmc
(bad)
push
push
add
or
jb
in
xchg
test
icebp
rol
(bad)
aam
pop
mov
retf
push
cs
ins
in
add
test
in
js
sub
outs
cmp
daa
mov
sbb
test
cmp
scas
pop
int
ror
cmp
lds
stos
pop
push
int
pop
movs
aaa
and
adc
mov
jp
int
pop
push
bnd
fstp
mov
js
imul
mov
pop
shr
or
push
movs
cmp
in
dec
add
aas
add
add
pop
repnz
mov
into
xor
add
fisttp
sbb
xor
sub
dec
sub
clc
scas
xchg
mov
sub
pop
pop
xchg
adc
outs
bound
(bad)
cmc
pop
leave
inc
loopne
mov
mov
ret
pop
adc
je
enter
push
cwde
aaa
je
mov
sbb
fdivp
and
pop
add
test
bnd
clc
cdq
ret
popa
ds
inc
and
adc
aas
xchg
es
xor
ffreep
and
inc
fidiv
jge
std
mov
data16
or
push
ret
inc
inc
in
out
das
cmp
loop
icebp
loop
sbb
loop
imul
xchg
arpl
sub
push
xchg
lds
jl
mov
sar
cmc
xlat
aas
jno
dec
(bad)
(bad)
jp
sbb
scas
cwde
test
je
and
stos
mov
cmp
inc
mov
cmps
jnp
mov
dec
cmp
xlat
loop
inc
scas
mov
fwait
mov
jp
dec
arpl
enter
xor
hlt
pop
out
xchg
and
jnp
inc
in
out
mov
and
(bad)
into
call
pop
in
inc
cwde
adc
inc
test
not
ins
inc
out
outs
popf
maskmovq
jl
popa
mov
adc
xor
outs
mov
fidivr
pop
lock
cmp
cmp
out
loope
pop
lea
les
fsub
add
jl
int3
adc
idiv
ret
out
sti
pop
retf
mov
dec
add
and
jg
fist
(bad)
pop
ss
mov
mov
call
(bad)
cmp
fst
fbstp
xor
mov
mov
add
cmp
mov
dec
push
inc
or
jge
pop
pop
ins
out
xor
jecxz
iret
fnstsw
sub
mov
repnz
jno
xchg
fidivr
mov
(bad)
sti
int3
xchg
imul
sar
sub
mov
push
mov
and
adc
pop
std
push
leave
and
in
lods
xlat
aaa
shr
idiv
repnz
add
imul
cs
loope
shr
retf
jne
and
xchg
push
repz
mov
lahf
call
fwait
imul
or
shr
das
out
pop
sbb
jbe
mov
mov
mov
sti
fstp
addr16
movs
aam
loop
in
and
pop
daa
pop
mov
sbb
lahf
push
cmp
retf
xchg
jge
xor
in
in
in
ret
mov
(bad)
push
ret
xchg
into
fwait
inc
mov
out
lods
sbb
fwait
mov
xchg
mov
das
je
mov
faddp
call
jg
and
movs
dec
pop
(bad)
jne
inc
jbe
xor
mov
mov
pop
ret
mov
imul
jns
mov
sbb
dec
(bad)
call
imul
mov
xchg
retf
jnp
mov
ss
dec
mov
stc
cmp
cmp
pop
fsub
cld
and
sub
jnp
pop
xchg
movs
add
mov
jnp
mov
les
xor
imul
or
cmp
jnp
daa
lock
mul
dec
aam
fld
pusha
sbb
xor
fst
jl
push
scas
inc
lods
adc
iret
pop
push
ds
adc
jmp
mov
out
mov
loopne
hlt
mov
adc
inc
mov
push
mov
jge
mov
sbb
out
jmp
xchg
out
pop
jne
jae
popf
cmp
dec
cmp
lods
xlat
popa
mov
xchg
out
sub
pop
push
mov
sbb
push
js
inc
stos
out
sbb
jg
or
push
jmp
adc
mov
jg
xor
cmp
or
test
sbb
dec
xchg
add
sbb
sbb
xchg
adc
std
mov
sub
jns
jp
jp
mov
inc
(bad)
nop/reserved
push
test
rcr
pop
xchg
jge
loop
pop
add
jl
ds
scas
ins
gs
iret
xor
sbb
cmp
push
sub
stos
mov
mov
xchg
pop
xlat
inc
repz
jo
sub
pop
addr16
cmp
jl
ds
retf
add
mov
xor
push
push
cs
or
inc
test
adc
cmp
push
cmc
push
or
repnz
mov
xor
lahf
fs
fwait
out
arpl
aas
mov
dec
popa
imul
adc
push
cli
enter
aam
lods
mov
xchg
out
and
aas
sub
dec
mov
lods
xchg
adc
xor
cmp
dec
idiv
out
fidivr
inc
pop
mov
shl
jecxz
leave
add
push
dec
mov
ds
dec
sub
dec
inc
in
out
cmp
cld
inc
test
gs
test
aam
clc
jl
cli
or
out
lock
xor
(bad)
icebp
jl
jns
pop
mov
retf
sub
lods
or
pushf
jg
outs
lods
jge
sub
pop
cli
jmp
add
mov
cs
fcomp
dec
(bad)
out
outs
sar
jmp
imul
mov
retf
pop
mov
jle
ret
push
pop
hlt
mov
inc
test
loopne
and
xchg
hlt
test
sbb
jnp
jmp
mov
lods
pop
fs
fwait
test
mov
call
mov
(bad)
outs
xchg
cmp
aam
ss
xor
mov
sbb
hlt
or
mov
hlt
sub
dec
inc
jmp
mov
call
xchg
pop
dec
mov
jne
stos
xor
sub
sub
in
aad
out
out
(bad)
pop
test
pop
sti
inc
cmps
jmp
(bad)
push
scas
mov
cmps
sbb
or
pushf
push
lods
(bad)
xchg
in
lods
cdq
sbb
retf
(bad)
push
mov
mov
dec
mov
inc
repz
jp
dec
cmp
call
es
imul
push
xor
xchg
hlt
mov
and
jmp
and
sbb
cmps
jp
dec
mov
adc
mov
adc
fistp
sub
out
or
inc
call
mov
out
ror
push
pop
les
lock
aas
cmp
mov
stc
pop
ss
cmp
ins
and
fimul
adc
sbb
dec
loope
cmp
stc
mov
(bad)
fcmove
vpcmpeqd
cmp
imul
es
adc
xchg
sti
pop
fisubr
clc
mov
cld
mov
fdivp
fmul
jp
lahf
mov
or
fcmovnb
lods
mov
sbb
sub
std
aas
mov
iret
and
jecxz
sub
jbe
add
mov
xlat
jg
popa
pop
ins
jg
das
sbb
scas
stos
fst
fdivr
mov
add
lahf
in
jl
dec
push
test
mov
stos
(bad)
sti
push
mov
outs
ret
test
jno
mov
xor
aad
xlat
test
add
adc
jge
in
mov
push
add
xor
movs
mov
ins
mov
repz
retf
adc
lods
cmp
mov
inc
out
(bad)
and
clc
imul
pop
pop
mov
sahf
and
adc
mov
inc
mov
add
xchg
outs
sbb
imul
adc
xor
push
std
retf
push
bound
cmps
dec
mov
jb
std
ins
push
cmps
repz
ss
push
movs
test
mov
mov
sahf
mov
jae
cmps
pop
repnz
pusha
(bad)
clc
out
fld
(bad)
outs
out
add
in
imul
fisub
outs
cmp
and
fbld
inc
jmp
fsubrp
jmp
(bad)
jne
or
add
sahf
mov
lahf
xchg
jle
mov
aad
cmp
cmp
xchg
into
mov
mov
stos
dec
jmp
push
mov
je
or
mov
and
cmc
aam
std
into
add
lock
cmp
mov
movs
out
daa
fs
jns
leave
cmp
cwde
push
push
jle
jne
push
dec
mov
jmp
mov
les
mov
mov
cmp
or
outs
loopne
jmp
ins
fld
add
pop
cmc
fcom
clc
movs
hlt
push
push
cli
sbb
mov
cmp
fwait
mov
cld
or
pop
test
pop
mov
add
add
add
add
add
and
add
add
add
cdq
add
add
add
add
add
add
add
add
add
add
add
add
sub
add
add
add
sub
jae
add
or
jae
add
or
jae
add
or
jae
add
or
jae
add
or
sub
xor
add
add
add
add
adc
add
add
or
add
sub
adc
add
or
add
add
add
jle
add
add
or
add
sub
adc
add
or
add
add
add
jle
add
add
or
add
xor
add
add
add
add
jle
add
add
push
add
or
add
xor
add
add
add
add
sldt
or
add
xor
loop
add
push
add
adc
mov
add
sbb
(bad)
(bad)
push
add
add
outs
adc
add
cmp
add
add
add
add
sub
push
add
add
add
add
sub
add
outs
adc
and
add
jo
lea
push
add
or
add
or
sbb
add
add
add
push
add
add
add
add
sub
add
adc
sbb
add
sub
add
sub
fisubr
add
add
sub
and
add
or
add
or
add
inc
push
inc
(bad)
adc
jb
add
jo
lea
or
or
add
or
add
or
add
or
or
add
or
add
or
push
add
add
add
add
sub
add
outs
and
add
fsubr
add
sub
sub
add
sbb
add
add
cwde
add
je
add
add
ins
add
add
adc
add
sbb
add
pop
add
adc
(bad)
push
add
add
outs
and
add
add
add
adc
push
add
push
add
and
add
sub
xor
add
add
adc
add
and
add
sub
add
sub
add
adc
add
pop
add
add
add
adc
sub
add
xor
add
add
add
add
adc
add
adc
add
sub
adc
add
pop
add
add
add
adc
sub
add
or
add
xor
add
add
adc
add
and
add
sub
add
sub
add
adc
add
pop
add
add
sub
add
xor
add
add
add
add
adc
push
add
add
adc
add
sub
adc
add
pop
add
add
add
adc
sub
add
or
add
xor
add
add
add
add
adc
mov
add
sbb
add
sub
sub
xor
add
add
add
add
adc
adc
(bad)
adc
push
add
add
and
add
sub
xor
add
add
adc
add
jle
add
or
or
add
add
sub
add
jle
add
or
push
add
and
add
sub
xor
fadd
add
adc
add
jb
add
jo
push
sub
add
adc
adc
sub
or
push
sub
call
jns
add
pop
sub
add
adc
adc
sub
add
add
mov
xor
add
push
call
xchg
add
jo
or
sub
add
adc
adc
sub
add
push
xor
add
push
call
movs
add
jo
das
add
or
sub
add
outs
xor
add
jb
add
jo
sbb
outs
xor
add
sub
add
outs
xor
add
jb
add
jo
fadd
add
jmp
add
xor
add
jb
add
jo
xor
add
fimul
sbb
add
sub
add
or
add
add
add
add
add
iret
iret
add
add
add
xor
add
add
add
add
jle
add
add
sub
add
or
jb
add
jo
or
add
sub
add
outs
aaa
add
or
add
or
pop
or
add
or
add
add
xor
add
add
add
or
add
add
push
add
sub
xor
add
add
add
add
adc
sbb
add
jb
add
jo
or
add
cmp
add
sub
add
or
pop
je
add
sbb
add
add
pop
add
push
sub
add
or
add
or
add
add
push
add
cmp
add
sub
xor
add
add
add
add
adc
add
add
add
adc
add
push
add
add
add
adc
and
add
sub
add
dec
inc
add
add
add
add
or
add
jbe
xor
xor
xor
cmp
add
add
add
or
add
jle
add
or
add
add
and
jb
outs
addr16
add
add
add
add
and
add
add
and
dec
inc
add
add
add
and
outs
bound
add
add
add
add
add
push
adc
add
add
and
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
push
add
inc
add
add
add
inc
add
add
add
add
push
add
add
add
add
inc
add
add
add
add
add
add
daa
add
add
add
add
add
add
add
cmp
pusha
add
jp
inc
add
add
add
add
enter
push
add
add
inc
pop
push
lds
add
push
inc
add
add
daa
add
add
add
push
adc
push
add
push
inc
add
add
add
pop
xchg
adc
inc
pop
call
pop
push
add
add
add
add
pop
mov
add
mov
add
or
push
add
dec
add
call
add
add
or
or
add
add
or
or
or
or
push
add
add
add
add
or
push
add
or
push
add
or
push
add
or
add
add
add
add
add
add
add
add
add
sub
aaa
add
add
add
add
aaa
add
add
add
add
add
add
aaa
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
and
xor
mov
sub
add
add
add
add
xor
test
movs
add
add
add
add
add
add
pop
add
add
sbb
add
add
add
pop
add
add
sbb
add
add
add
add
add
sbb
pop
add
add
pop
add
add
or
sbb
add
nop
ss
add
add
or
sub
add
test
pop
add
add
or
add
ss
add
add
or
add
add
fdiv
pop
add
add
or
add
add
lock
add
add
add
add
add
cld
aaa
pop
add
add
add
add
add
pop
add
add
sbb
add
add
add
pop
add
add
mov
add
pop
add
add
rol
add
pop
cmp
add
add
add
je
pop
add
add
fiadd
call
add
add
mov
add
inc
add
add
cmp
add
add
add
add
add
fiadd
call
add
add
add
add
add
add
add
add
add
add
pop
add
add
sbb
add
add
add
pop
add
add
or
add
cmp
add
add
sbb
add
add
add
add
add
add
add
add
add
add
add
or
mov
pop
add
adc
mov
mov
cmp
add
add
or
add
add
or
add
cmp
add
add
sbb
pop
add
add
cmp
add
add
sbb
add
add
add
cmp
add
add
or
add
add
add
pop
add
add
or
add
add
add
add
add
add
add
jg
add
add
mov
add
add
add
add
jg
add
add
mov
add
add
push
add
add
push
add
add
add
add
add
push
add
add
push
add
add
push
add
add
add
add
add
add
add
add
jecxz
mov
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
xor
push
add
add
add
add
or
leave
add
add
add
add
call
add
add
add
add
out
fld
jg
adc
sbb
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
out
add
add
hlt
add
add
add
add
pop
add
xor
push
or
add
add
or
add
add
or
add
add
or
add
push
add
add
add
cmp
cmp
push
inc
add
push
add
inc
add
pop
add
push
add
add
stos
or
adc
popa
add
add
add
jns
push
add
add
add
add
add
add
add
add
add
add
add
add
sub
xchg
add
add
add
add
add
add
add
add
jmp
add
add
add
add
add
sub
rol
add
add
add
add
jmp
add
add
add
add
add
out
add
sub
pop
add
adc
out
add
sbb
inc
dec
add
add
add
add
sbb
inc
imul
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
add
add
add
ret
add
add
add
add
add
add
add
pop
add
add
pop
add
add
jmp
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
add
add
add
and
mov
pop
add
add
add
add
sub
pop
add
sbb
ret
add
add
add
add
adc
out
add
sub
pop
add
mov
pop
add
rol
pop
add
add
add
pop
add
add
xchg
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
sub
pop
add
adc
out
add
sub
pop
add
adc
out
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
add
add
add
add
inc
add
pop
add
cmc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
daa
add
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
add
sbb
adc
add
sbb
add
add
add
add
jne
jne
jne
sahf
add
and
sub
xor
cmp
rol
popa
add
add
add
nop
add
add
add
add
or
add
add
or
add
or
adc
add
add
add
add
add
inc
add
add
add
add
add
inc
add
add
add
add
add
add
add
add
push
add
pop
add
add
adc
push
add
add
adc
adc
pusha
add
add
add
add
add
add
add
add
sub
pusha
add
add
add
add
add
add
cmp
outs
fs
gs
arpl
ins
imul
outs
jae
data16
push
imul
jae
arpl
dec
jns
jo
ins
imul
add
outs
addr16
ins
cs
jns
dec
jns
outs
ins
jo
je
jb
dec
jns
jb
push
arpl
jns
outs
jb
jae
dec
jns
bound
jb
imul
jb
popa
fs
popa
gs
bound
arpl
outs
jbe
fs
xor
dec
outs
fs
xor
push
jb
addr16
ins
add
jae
jne
arpl
add
outs
addr16
ins
cs
jns
push
gs
jne
arpl
add
push
gs
imul
push
gs
imul
jo
jb
jns
dec
imul
je
push
imul
jae
arpl
inc
jo
ins
imul
push
gs
imul
outs
jae
ins
gs
jo
ins
imul
inc
popa
jae
add
arpl
add
arpl
jae
data16
push
imul
jae
arpl
inc
gs
arpl
add
ins
jo
je
jb
push
jns
je
ins
add
push
arpl
arpl
outs
jb
addr16
inc
outs
ins
jo
je
jb
ins
pop
inc
outs
ins
jo
je
jb
bound
arpl
outs
jbe
fs
addr16
inc
jo
ins
imul
add
inc
jo
dec
bound
arpl
outs
jbe
fs
push
jae
jb
addr16
push
jae
jb
ins
pop
push
jae
jb
bound
arpl
outs
jbe
fs
addr16
inc
outs
jb
jae
ins
pop
dec
jns
outs
jb
jae
bound
arpl
outs
jbe
fs
addr16
push
bound
jb
imul
dec
jns
bound
jb
imul
arpl
outs
jbe
fs
inc
jo
ins
imul
add
jb
jae
push
bound
jb
imul
gs
je
pop
pop
dec
outs
jae
popa
outs
arpl
pop
add
jae
gs
cs
imul
inc
outs
jb
jae
inc
outs
jb
add
outs
jae
popa
outs
arpl
inc
imul
pop
dec
outs
jae
popa
outs
arpl
pop
add
jae
popa
outs
arpl
push
jns
je
ins
cs
outs
ins
ins
arpl
outs
jae
dec
popa
jae
je
bound
ins
pop
inc
outs
jb
inc
imul
je
add
jne
ins
jae
outs
add
je
popa
jae
inc
outs
fs
add
je
jns
add
je
imul
pop
inc
gs
outs
jae
popa
outs
arpl
ins
pop
push
push
push
je
je
arpl
ins
jne
add
je
outs
jae
popa
outs
arpl
dec
popa
imul
gs
cs
gs
jne
arpl
add
jae
jne
arpl
popa
outs
popa
addr16
jb
jae
jne
arpl
popa
outs
add
jae
gs
cs
ins
outs
bound
imul
add
ins
je
jb
dec
outs
outs
add
jae
jne
arpl
jne
je
jb
add
je
push
gs
jne
arpl
popa
outs
popa
addr16
addr16
inc
jne
je
jb
add
je
inc
jne
je
jb
add
ins
jne
add
je
inc
jne
ins
add
ins
je
jb
add
imul
gs
cs
outs
outs
imul
je
outs
outs
add
jo
imul
push
gs
imul
add
popa
jne
je
outs
jae
popa
outs
arpl
addr16
inc
gs
jne
je
inc
gs
jne
je
addr16
push
gs
imul
je
imul
jae
gs
cs
outs
ins
jo
outs
outs
je
outs
fs
add
imul
jae
bound
je
jb
bound
add
imul
jae
bound
je
je
add
jae
gs
cs
outs
fs
outs
ins
cs
outs
ins
jo
ins
gs
inc
outs
gs
je
fs
outs
fs
je
jb
bound
add
jae
gs
cs
imul
imul
jne
addr16
imul
jb
bound
add
arpl
jae
data16
push
imul
jae
arpl
inc
outs
ins
jo
ins
gs
gs
imul
popa
outs
fs
jb
dec
outs
fs
gs
je
jb
bound
add
fs
outs
fs
gs
popa
ins
gs
je
jb
bound
add
jae
gs
cs
outs
ins
jo
outs
outs
je
outs
fs
cs
gs
outs
add
ins
jo
gs
outs
jb
inc
je
jb
bound
add
jae
gs
cs
gs
arpl
outs
add
addr16
outs
jbe
arpl
imul
jo
imul
je
outs
ins
add
je
dec
jae
imul
add
outs
je
ins
gs
jns
gs
popa
outs
fs
add
je
jns
gs
jb
ins
dec
popa
outs
fs
add
outs
je
imul
push
je
imul
ins
jae
inc
gs
gs
jne
arpl
je
imul
popa
ins
imul
imul
jo
imul
add
je
jbe
je
jb
inc
jb
popa
je
dec
outs
jae
popa
outs
arpl
push
jb
push
arpl
je
add
arpl
je
outs
outs
add
je
jb
push
arpl
jb
jb
addr16
dec
outs
outs
gs
js
gs
imul
pop
dec
gs
popa
add
gs
jb
jb
push
arpl
jb
jb
push
gs
outs
jbe
add
ins
jo
outs
outs
je
inc
imul
push
jns
je
ins
cs
jne
je
ins
gs
outs
ins
jo
ins
gs
gs
imul
outs
je
ins
gs
gs
jo
jb
add
je
bound
arpl
ins
jne
add
inc
jb
jne
inc
outs
ins
ins
arpl
outs
inc
je
jb
bound
add
gs
fs
je
je
arpl
je
imul
jns
je
ins
cs
jne
je
ins
gs
outs
je
jb
jo
gs
imul
ins
push
imul
je
jb
bound
add
ins
jo
ins
gs
outs
gs
je
fs
je
jb
bound
add
outs
arpl
jae
push
jns
je
ins
cs
dec
add
je
add
je
imul
imul
je
outs
jae
outs
outs
add
je
jb
arpl
jae
jae
jns
popa
ins
add
ins
ins
add
arpl
jns
inc
imul
jns
outs
outs
add
gs
je
inc
imul
jns
push
gs
gs
outs
ins
jo
je
jb
dec
imul
je
push
imul
jae
arpl
dec
jns
gs
imul
ins
gs
jns
je
ins
push
jb
js
add
je
inc
imul
ins
add
imul
je
jae
push
imul
outs
js
add
je
push
imul
gs
popa
ins
jne
add
popa
jb
add
inc
push
push
inc
je
jb
bound
add
data16
outs
arpl
jno
popa
ins
jae
inc
jae
gs
bound
addr16
inc
jae
gs
bound
inc
gs
bound
arpl
bound
addr16
outs
outs
push
jae
jb
outs
fs
je
jb
bound
add
je
imul
add
outs
arpl
outs
outs
imul
outs
addr16
ins
cs
gs
jne
arpl
cs
jae
jne
arpl
add
jne
addr16
bound
je
jb
bound
add
jne
imul
jae
inc
outs
ins
jo
ins
popa
je
outs
outs
push
gs
popa
js
je
outs
outs
jae
je
jb
bound
add
outs
je
ins
gs
outs
ins
jo
je
bound
imul
bound
add
jae
gs
cs
jne
je
ins
gs
gs
imul
push
popa
jb
gs
jb
ins
gs
jb
inc
je
jb
bound
add
jae
ins
bound
imul
outs
outs
inc
je
jb
bound
add
imul
jne
add
jae
ins
bound
jb
fs
popa
jb
inc
je
jb
bound
add
jae
ins
bound
outs
jo
jb
addr16
jb
bound
add
jae
ins
bound
jb
fs
je
je
jb
bound
add
jae
ins
bound
outs
ins
jo
outs
jns
je
jb
bound
add
jae
ins
bound
gs
jb
jo
imul
imul
jae
gs
bound
imul
imul
jb
addr16
ins
cs
add
add
push
add
outs
add
outs
add
ins
add
pop
add
add
jne
jb
jae
imul
inc
add
jb
ins
add
jb
add
je
add
xor
outs
add
outs
add
ins
add
pop
add
add
dec
add
outs
add
jb
inc
add
arpl
add
je
imul
add
jb
jne
outs
add
pop
imul
add
add
jbe
imul
add
imul
add
add
imul
inc
add
add
add
outs
add
jb
popa
add
inc
add
je
popa
add
add
je
add
add
sub
and
dec
add
outs
add
add
ins
add
outs
add
addr16
add
add
add
outs
add
jb
popa
add
inc
add
je
popa
add
add
je
add
add
sub
and
dec
add
outs
add
add
ins
add
outs
add
add
outs
add
add
add
arpl
imul
add
add
add
js
add
add
add
pop
add
add
inc
add
add
inc
add
dec
add
dec
add
pop
add
outs
add
je
ja
popa
add
add
add
arpl
jb
outs
add
outs
add
je
pop
add
imul
outs
add
jae
pop
add
jne
jb
jb
add
je
push
add
jb
jae
imul
pop
add
jne
outs
add
aaa
dec
add
je
add
add
sub
and
dec
add
outs
add
add
ins
add
outs
add
add
add
jbe
imul
add
push
add
outs
add
jb
popa
add
add
add
outs
add
jb
arpl
add
add
inc
add
imul
add
bound
inc
lods
ds
int
xchg
cld
sbb
pop
push
sbb
mov
mov
pop
jg
aad
cmp
and
add
add
add
add
or
push
adc
or
add
adc
pop
push
adc
or
add
adc
push
adc
adc
add
adc
push
adc
adc
add
adc
pop
push
adc
sbb
add
or
or
adc
add
add
adc
add
adc
or
adc
add
add
adc
add
add
add
xor
add
adc
add
push
adc
add
add
sbb
and
or
add
sbb
add
add
add
add
push
adc
add
add
add
push
adc
add
adc
and
add
and
adc
add
and
add
and
add
add
add
sub
add
sub
xor
add
add
add
add
add
push
sbb
add
dec
jns
gs
jo
popa
je
or
xor
xor
xor
xor
add
add
add
adc
or
adc
or
adc
adc
adc
adc
adc
sbb
add
or
pop
add
or
add
adc
add
adc
pop
add
sbb
add
push
adc
add
dec
jns
inc
jo
ins
imul
add
or
add
dec
jns
push
jae
jb
add
jns
inc
outs
jb
jae
add
add
push
dec
jns
push
bound
jb
imul
add
or
cs
outs
ins
jo
je
jb
add
and
add
add
adc
add
push
sbb
add
add
add
add
add
imul
and
add
adc
and
add
pop
add
add
adc
push
add
add
add
add
add
add
add
add
add
add
sbb
pop
and
push
push
push
push
pop
add
sbb
jae
gs
cs
imul
inc
outs
jb
jae
inc
outs
jb
adc
gs
je
pop
pop
dec
outs
jae
popa
outs
arpl
pop
adc
jo
jae
pop
pop
dec
outs
jae
popa
outs
arpl
pop
adc
cs
jns
jb
push
arpl
outs
jb
jae
add
add
jns
je
ins
cs
bound
push
gs
imul
outs
je
arpl
jae
push
outs
popa
jo
je
jo
ins
imul
je
arpl
adc
gs
je
pop
pop
dec
outs
jae
popa
outs
arpl
pop
adc
jo
jae
pop
pop
dec
outs
jae
popa
outs
arpl
pop
add
add
adc
add
add
add
add
add
add
add
add
add
push
pop
add
sbb
push
add
adc
add
sbb
sbb
add
sbb
push
sbb
add
adc
or
push
push
sbb
adc
test
push
push
add
sbb
and
adc
add
adc
adc
adc
add
add
and
push
adc
pop
add
add
push
jns
je
ins
cs
gs
jne
arpl
cs
outs
outs
ins
jae
push
je
outs
outs
ins
jns
jns
gs
gs
jne
arpl
jne
ins
fs
xor
xor
xor
xor
add
add
add
add
add
or
add
sub
add
sub
add
imul
je
push
imul
jne
imul
outs
jb
cs
gs
imul
imul
gs
imul
ins
gs
imul
popa
je
jb
xor
xor
xor
xor
add
add
or
cs
gs
imul
and
add
xor
or
add
add
add
add
add
or
add
add
push
add
add
push
add
push
jb
jo
outs
outs
inc
js
gs
imul
ja
add
add
cs
inc
push
inc
jb
ins
gs
jb
sub
gs
imul
xor
jb
imul
imul
push
adc
jb
ins
gs
jb
inc
imul
popa
ins
gs
cs
inc
push
and
popa
ins
gs
jb
and
inc
ins
imul
outs
imul
pop
xor
xor
xor
xor
add
add
and
xor
sub
sub
sub
sub
arpl
gs
data16
add
add
sbb
jo
jb
addr16
and
arpl
jae
data16
xor
xor
add
or
add
push
jb
addr16
ins
add
push
add
or
arpl
jae
data16
add
pop
add
pop
add
and
add
pop
add
add
add
add
outs
jb
js
dec
popa
imul
jb
gs
ins
add
add
add
and
