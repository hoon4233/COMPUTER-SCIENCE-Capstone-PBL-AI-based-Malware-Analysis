stos
stos
out
(bad)
dec
mov
adc
sbb
add
push
cmps
ror
cmp
call
into
adc
pop
cmps
adc
push
adc
loope
sbb
sbb
xor
jo
and
adc
sbb
and
adc
mov
dec
sar
mov
xchg
pop
data16
dec
shr
inc
iret
add
add
push
fs
or
call
std
(bad)
test
and
inc
iret
loope
sbb
push
(bad)
adc
ja
mov
sahf
ins
cmps
adc
push
cwde
fist
jecxz
cmp
push
push
call
call
pop
out
xchg
out
push
adc
jmp
shr
sub
loope
std
adc
adc
pop
push
push
call
and
fsubr
sub
sub
add
cmps
push
push
push
call
loop
out
sub
cmps
pop
push
push
call
adc
xchg
arpl
mov
xchg
call
pop
out
sbb
lock
jb
pop
out
gs
rcr
xchg
xchg
repnz
xchg
loope
sbb
data16
gs
pop
and
xlat
inc
pop
add
test
xchg
pop
data16
adc
mov
fsubr
adc
jmp
bound
xchg
stos
shl
lock
adc
(bad)
adc
bound
out
cmps
xchg
pop
bound
adc
jmp
imul
scas
jp
push
call
aad
xchg
xchg
add
sub
adc
scas
mov
adc
xor
sti
rcr
push
mov
popf
shl
stc
cmp
push
call
adc
push
pop
adc
(bad)
int3
out
bnd
push
call
jne
dec
cmps
adc
cmp
inc
adc
dec
inc
inc
push
xor
adc
mov
xor
call
adc
dec
push
push
call
push
loope
cmps
out
scas
inc
push
push
call
out
scas
dec
push
push
call
stc
jmp
and
jmp
retf
push
push
sar
leave
cmps
adc
jecxz
test
jb
rcl
call
inc
jmp
pop
out
jecxz
loope
xchg
pop
cwde
pop
add
jnp
add
xchg
repnz
ss
call
shl
push
test
call
out
gs
xchg
popa
xchg
rcl
lock
xchg
outs
fstp
retf
pop
fwait
push
xchg
(bad)
fstp
retf
clc
in
push
nop
jne
lahf
adc
push
and
jns
enter
out
xchg
jmp
jb
cmps
adc
xchg
pop
adc
sub
sbb
adc
das
xchg
jb
pop
out
adc
pop
out
call
xor
fcomp
das
hlt
retf
cmp
inc
and
jmp
jbe
push
pushf
fist
idiv
add
adc
push
adc
stos
out
out
bound
jecxz
cmps
cwde
pop
jmp
pop
mov
push
mov
out
out
jb
mov
pop
mov
fist
call
mov
push
sbb
and
mov
out
cmps
fs
shl
sbb
xchg
rcr
xor
das
hlt
sbb
pop
xor
adc
and
jge
jecxz
adc
into
or
xchg
rcr
into
adc
out
outs
xchg
shl
pop
adc
jnp
xchg
rol
gs
pop
stc
ficom
cmps
adc
lods
pop
data16
out
outs
xchg
shl
xchg
rcr
sub
(bad)
lds
ror
jecxz
xchg
jbe
cmc
inc
int
rcr
(bad)
hlt
mov
fist
das
inc
bound
cmps
xchg
call
cmps
cli
neg
call
das
inc
bound
cmps
and
loop
fist
scas
push
and
movs
push
and
cwde
sub
cmps
push
adc
es
mov
das
push
call
mov
and
adc
das
push
cwde
fist
outs
out
(bad)
call
sbb
out
fist
addr16
push
xchg
out
cmps
imul
xchg
call
push
out
gs
dec
les
outs
ror
jecxz
test
jb
rcl
call
call
pop
out
scas
pop
imul
pop
out
fs
das
shl
xchg
pop
out
outs
shl
xchg
jecxz
xchg
push
xchg
out
cmps
imul
xchg
lods
and
call
out
js
jmp
xchg
loopne
sub
(bad)
mov
push
mov
out
pop
out
fs
das
xchg
bound
push
out
fs
push
mov
xchg
pop
out
adc
push
out
fs
das
xchg
xchg
pop
out
adc
mov
adc
out
cmps
adc
stc
dec
shl
std
mov
lock
adc
stos
(bad)
fist
push
sar
das
push
(bad)
jecxz
stos
pushf
dec
aaa
jb
ficom
call
jae
cmp
shr
addr16
stos
pop
push
mov
das
rol
fs
pop
or
add
out
sub
or
das
push
cwde
fistp
jecxz
adc
pop
dec
les
outs
ror
jecxz
inc
retf
inc
adc
stos
(bad)
fist
sub
and
repz
stos
pushf
dec
aaa
jb
rcl
call
jae
cmp
shr
addr16
stos
pop
push
mov
das
rol
fs
pop
or
add
out
push
enter
out
xchg
das
push
(bad)
jecxz
outs
shl
xchg
lods
mov
dec
push
test
cmc
inc
int
rol
adc
mov
fist
sub
and
repz
outs
shl
jno
sub
adc
push
aam
add
stos
out
xchg
sub
daa
jl
mov
dec
les
outs
ror
jecxz
inc
retf
inc
adc
scas
scas
dec
pop
aaa
inc
adc
pop
adc
fsubp
adc
stos
jns
mov
adc
and
gs
das
push
data16
sbb
jnp
cmps
inc
jb
pop
out
cmp
inc
jb
pop
out
gs
das
jmp
(bad)
popa
dec
les
outs
ror
jecxz
inc
retf
inc
adc
stos
scas
adc
and
int3
adc
xchg
das
(bad)
gs
scas
stc
mov
cmps
adc
lods
int3
adc
push
out
test
inc
int3
xchg
rcr
lock
adc
aad
call
not
das
pop
cwde
pop
lods
mov
dec
les
outs
ror
jecxz
inc
leave
cmp
call
(bad)
nop
ins
repz
adc
sub
lea
sub
inc
xchg
loope
adc
adc
daa
adc
inc
xchg
jecxz
out
jecxz
in
adc
cmps
dec
les
outs
ror
jecxz
xchg
jbe
cmc
inc
int
rcr
and
jecxz
cmp
popa
xchg
mov
push
adc
(bad)
adc
add
cwde
jmp
adc
popa
and
jge
push
stos
das
push
jbe
data16
cmp
mov
sahf
add
stc
into
sbb
rcl
jecxz
stc
xchg
stos
shl
adc
into
mov
sub
call
cmps
adc
test
cmps
adc
mul
fisttp
xchg
rcr
sub
adc
xchg
pop
dec
stos
stos
stc
dec
shl
cmp
sbb
stos
pop
sbb
leave
adc
in
gs
cmps
adc
ins
and
adc
push
push
xchg
gs
fwait
push
call
cmps
nop
pop
jmp
cmp
cmps
adc
jb
lea
sub
inc
xchg
jmp
fwait
retf
push
xchg
mov
push
out
gs
pushf
pop
mov
cmp
xchg
cmp
call
push
call
inc
jb
pop
out
gs
pop
adc
test
fwait
push
nop
imul
cmps
pushf
fistp
sub
sub
mov
ins
outs
push
xchg
test
pop
pop
adc
push
je
push
sub
fsubp
adc
cmps
adc
inc
das
leave
ins
mov
xchg
inc
xchg
pop
out
adc
in
adc
push
sub
sbb
xchg
mov
push
ins
sub
rcr
push
in
jmp
mov
leave
adc
movs
adc
das
pop
cwde
fild
cmps
pushf
fistp
and
test
push
adc
sub
adc
int
das
push
data16
out
jecxz
leave
gs
pop
cwde
pop
jmp
repz
leave
in
repnz
inc
push
call
out
mov
adc
arpl
lods
jecxz
cmp
gs
pop
mov
out
cmp
lea
sub
xchg
push
adc
das
pop
sbb
mov
lahf
push
adc
xchg
pop
adc
out
jp
fs
shr
sbb
and
adc
leave
in
retf
out
int3
bound
(bad)
jecxz
mov
inc
pop
out
gs
cmps
adc
sub
cwde
pop
mov
gs
les
outs
ror
jecxz
xchg
jbe
cmc
inc
int
imul
daa
(bad)
imul
adc
popf
test
and
push
xchg
jmp
call
(bad)
fist
das
loop
xchg
push
not
das
pop
cwde
pop
sbb
pop
sbb
jecxz
adc
movs
adc
pop
rcl
adc
scas
pushf
fisubr
inc
repnz
add
call
aad
jecxz
out
jecxz
jmp
cmp
in
call
shr
outs
and
ins
pushw
inc
cmp
push
push
call
pop
adc
and
retf
push
not
das
pop
cwde
pop
cmp
cli
mov
jecxz
adc
sub
stos
pop
mov
cwde
bound
cwde
pop
sub
push
xchg
jmp
gs
pop
xchg
call
cmps
gs
xchg
rcr
repnz
aas
push
call
imul
xor
call
adc
repnz
adc
add
xor
push
cwde
fist
int3
adc
adc
xchg
jecxz
xchg
push
xchg
out
cmps
imul
call
fs
xchg
shr
jb
leave
adc
sahf
idiv
add
fsubr
bound
das
jmp
push
jecxz
adc
pop
jl
push
dec
shl
mov
mov
cmp
stos
std
adc
adc
ficomp
gs
nop
pop
ins
lods
adc
xchg
pop
adc
mov
call
xchg
outs
xchg
pop
out
pop
out
(bad)
out
fs
idiv
jmp
push
push
mov
adc
jecxz
jnp
or
cmc
push
cwde
pop
cmps
pop
out
gs
adc
gs
das
cmps
pop
out
gs
aad
xchg
pop
inc
jb
pop
out
gs
cmp
push
sar
adc
adc
push
out
fs
das
rcl
out
inc
out
fs
div
retf
out
int
das
push
data16
cmp
jle
jns
and
pop
out
int
xchg
pop
inc
repnz
call
inc
adc
add
call
xchg
lods
bound
inc
call
out
retf
mov
push
call
pop
sbb
and
xchg
push
jns
retf
fbld
fs
dec
call
pop
bound
(bad)
fucom
sbb
gs
pop
call
repnz
push
leave
mov
das
rcl
out
sbb
fs
div
retf
out
int
das
push
data16
pop
shl
lods
and
pop
out
call
xchg
daa
xchg
pop
out
gs
xchg
pop
ins
cmps
adc
imul
jnp
cmps
pushf
pop
xchg
pop
out
cmp
ins
xchg
pop
xchg
pop
data16
(bad)
cld
jecxz
mov
xchg
pop
nop
pop
out
pushf
adc
xchg
pop
out
cmps
xchg
pop
adc
push
push
sub
xchg
out
pop
out
pop
out
fs
idiv
retf
jb
leave
adc
frstor
mov
xchg
pop
xlat
sahf
outs
div
aas
ret
gs
sub
fsubp
adc
push
nop
pop
mov
cmps
jns
mov
adc
cmp
push
call
aad
push
pop
out
call
fistp
cmps
pushf
daa
xchg
pop
out
gs
pop
xchg
pop
data16
out
gs
gs
lods
and
call
icebp
fsubr
inc
cmp
cmps
stc
jb
pop
out
sbb
cmps
adc
dec
int3
adc
rol
call
inc
jb
push
out
gs
pop
adc
ret
imul
aaa
mov
adc
cmp
push
call
aad
push
pop
out
call
test
sub
out
gs
pop
xchg
pop
data16
out
gs
gs
lods
and
call
icebp
fsubr
inc
cmp
cmps
stc
(bad)
lahf
pop
out
sbb
cmps
adc
dec
int3
adc
rol
call
inc
jb
push
out
gs
pop
adc
ret
imul
jns
and
pop
add
adc
cmp
push
call
aad
push
pop
out
call
out
fs
cmps
adc
jmp
div
outs
xchg
pop
xchg
pop
data16
out
gs
gs
lods
and
call
icebp
fsubr
inc
cmp
cmps
stc
push
sahf
pop
out
sbb
cmps
adc
cs
adc
rol
call
inc
jb
push
out
gs
pop
adc
add
icebp
fsubr
lods
addr16
pop
out
int
xor
gs
and
out
call
out
fs
cmps
adc
popa
cmps
adc
xlat
push
out
fs
cmps
mov
adc
out
pop
out
fs
idiv
xor
mov
lahf
sbb
push
call
mov
fsubp
adc
mov
leave
adc
pop
out
call
loop
outs
cmps
adc
out
jle
fs
neg
cmp
cwde
fist
push
adc
and
and
gs
pop
inc
adc
inc
mov
mov
leave
adc
test
adc
iret
jb
fs
cmps
nop
imul
add
gs
pop
adc
xlat
push
out
fs
cmps
push
adc
cmps
adc
push
ja
out
ds
fs
mov
pop
out
push
out
fs
cmps
adc
xchg
pop
out
retf
mov
pop
inc
adc
jle
fs
neg
adc
and
fs
das
rcl
out
jb
fs
idiv
mov
adc
out
ss
fs
neg
call
sbb
and
sahf
push
pushf
pop
mov
sub
out
retf
out
or
jecxz
in
adc
and
xchg
call
out
fs
neg
cmp
cwde
fist
imul
push
loop
pop
cmps
adc
sub
loope
int
xchg
pop
inc
adc
inc
mov
dec
les
call
out
gs
xchg
out
cmps
push
pop
stos
movs
adc
xchg
pop
inc
adc
dec
out
fs
neg
adc
pop
cwde
inc
pop
jle
pop
jmp
and
push
nop
jno
ret
jmp
pop
adc
pop
out
fs
into
inc
cmp
cmps
pushf
pop
xchg
pop
out
cmp
imul
xchg
pop
and
xchg
pop
out
call
adc
int
call
out
das
xchg
gs
in
gs
pop
inc
repnz
out
in
gs
pop
inc
jb
retf
jmp
(bad)
rcl
loop
out
gs
pop
out
gs
and
pop
out
cmp
movs
adc
mov
jge
mov
mov
fild
out
fs
and
test
push
adc
sub
out
int
cdq
out
int
das
push
data16
pop
add
add
sbb
sub
add
lock
xchg
push
xchg
pop
out
retf
out
mov
adc
arpl
pop
inc
movs
adc
push
pushf
pop
retf
cmp
out
retf
out
int
das
push
data16
pop
xchg
cmps
adc
xchg
pop
adc
cmps
adc
add
and
gs
out
(bad)
out
fs
movs
adc
out
push
out
fs
das
xchg
loop
pop
out
pop
out
es
fs
neg
jmp
pop
adc
aas
out
popa
gs
pop
xchg
jbe
das
mul
outs
cmps
adc
into
pop
out
gs
rcr
int
cmps
out
jecxz
dec
gs
pop
cwde
pop
jmp
and
cmps
xchg
aas
out
pop
out
gs
xchg
push
xchg
pop
out
retf
lock
xchg
sbb
sahf
out
mov
adc
arpl
pop
jl
adc
xchg
pop
adc
push
xchg
cli
xchg
pop
out
retf
out
das
sahf
pop
out
gs
xchg
gs
pop
inc
adc
inc
mov
mov
leave
adc
test
adc
jmp
pop
sbb
push
lods
repnz
pop
out
call
pushf
pop
aaa
pop
in
cmp
repnz
pop
out
jb
push
out
gs
loope
daa
xor
gs
mov
push
xchg
daa
aaa
pop
in
gs
xchg
adc
out
push
out
fs
cmps
adc
fisttp
out
fs
sub
add
icebp
fsubr
xchg
addr16
pop
out
retf
jnp
push
aad
out
in
gs
pop
xchg
push
xchg
out
cmps
imul
gs
pop
nop
jno
mov
dec
gs
pop
pushf
pop
aaa
pop
in
cmp
out
pop
out
mov
inc
jb
iret
adc
outs
sub
add
icebp
fsubr
xchg
addr16
pop
out
retf
js
push
aad
jmp
imul
out
pop
out
gs
adc
out
es
fs
neg
adc
(bad)
out
fs
das
shl
push
out
fs
sub
out
mov
xchg
test
out
adc
add
fs
neg
adc
cmp
fs
neg
gs
dec
out
fs
sub
out
mov
xchg
test
out
sbb
push
out
fs
cmps
fs
lods
and
gs
pop
adc
dec
cmps
adc
ret
gs
call
sub
xchg
daa
mov
rcr
fs
neg
sbb
jb
fs
cmps
gs
loope
lds
pop
inc
adc
inc
xchg
loope
leave
gs
pop
inc
adc
inc
xchg
loope
int
xchg
pop
inc
adc
inc
xchg
jecxz
and
gs
sub
clc
mov
xor
fcomp
das
hlt
lock
into
xchg
sub
adc
retf
cmps
adc
dec
cmps
adc
cmp
inc
adc
dec
(bad)
fisttp
daa
jl
vmovss
in
call
fnstcw
push
into
adc
sbb
gs
cmps
adc
mov
and
pop
out
gs
pop
cli
mov
jecxz
fwait
push
adc
das
inc
rcl
cmovle
fbstp
sub
and
int
fsub
xchg
pop
out
gs
jecxz
dec
cmps
adc
outs
cmps
inc
adc
shl
jecxz
out
jecxz
in
adc
cmps
jnp
add
adc
push
adc
ret
adc
(bad)
lds
call
xchg
jbe
cmc
inc
adc
scas
scas
out
sbb
call
out
fsubp
adc
mov
xor
cli
out
call
xchg
mov
push
xor
cmc
out
call
adc
dec
mov
push
adc
repz
sahf
push
adc
mov
out
fld
cmps
lahf
sub
push
call
adc
push
sahf
jmp
dec
and
xchg
jb
push
call
out
lahf
push
adc
pop
xchg
mov
and
push
bound
sub
push
mov
out
push
test
adc
mov
push
gs
retf
dec
mov
push
adc
cmc
out
jno
pop
adc
cmc
out
adc
push
cwde
pop
and
mov
nop
cmps
adc
sub
push
call
ds
push
nop
ins
xchg
mov
or
sub
push
call
and
pop
out
jb
push
call
adc
sub
adc
sub
out
gs
mov
sbb
ins
xchg
shl
movs
adc
push
xchg
xchg
jb
push
call
mov
retf
jae
pop
out
gs
mov
adc
ins
xchg
shl
movs
adc
jecxz
xchg
xchg
jb
push
call
adc
fstp
gs
mov
adc
ins
xchg
shl
movs
adc
push
xchg
xchg
jb
push
call
adc
loope
out
gs
mov
out
lahf
push
cmp
jecxz
adc
pusha
xchg
xchg
jb
push
call
mov
mul
adc
push
psllw
out
jecxz
loope
lods
es
cmc
out
fiadd
pop
std
pop
sub
adc
cmc
out
jae
cmps
adc
push
adc
cli
out
jae
cmps
adc
push
adc
cmc
out
jae
cmps
adc
sub
push
call
cwde
push
push
cwde
pop
jmp
cmps
adc
cmps
adc
imul
fld
nop
pop
and
push
adc
inc
cmp
cmps
push
sub
div
out
and
out
mov
push
xchg
call
adc
dec
and
sub
cmps
xchg
xchg
jb
push
call
movs
fsubr
cmp
mov
cli
mov
sub
cwde
pop
jmp
jno
xchg
shl
cmps
adc
push
out
lahf
push
adc
pushf
mov
push
xchg
out
bound
call
mov
retf
in
adc
test
push
call
push
popa
adc
retf
in
sbb
test
rcr
jecxz
adc
pop
mov
push
call
push
sub
pop
sub
push
adc
popa
pop
push
add
cmps
adc
jmp
cmps
adc
jg
ins
popa
push
inc
sbb
pop
pop
out
es
adc
nop
mov
or
call
fneni(8087
cmps
mov
mul
adc
sub
push
pusha
jmp
out
cmps
fs
jmp
cmps
adc
adc
adc
sub
adc
push
adc
call
mov
cli
out
mov
push
retf
std
aaa
call
adc
sub
adc
push
adc
call
mov
cmc
out
mov
push
retf
shl
mov
add
and
clc
dec
push
test
test
jmp
fstp
push
out
jecxz
in
adc
adc
arpl
call
(bad)
bnd
push
call
mov
retf
repnz
sbb
call
mov
cmc
out
and
lods
adc
xchg
das
xlat
repnz
sbb
call
mov
mul
adc
and
call
mov
cmc
out
repnz
push
call
mov
retf
lds
ror
jecxz
xchg
jbe
cmc
inc
int
jg
pushf
adc
leave
fwait
mov
shl
shl
and
cmps
pushf
ffreep
imul
(bad)
ss
push
call
adc
mov
leave
adc
sub
jecxz
pop
das
push
push
call
adc
jmp
mov
xchg
(bad)
mov
jle
pop
jmp
jecxz
fwait
push
adc
jp
call
adc
das
push
add
gs
lahf
push
sbb
call
movs
fsubr
push
sub
adc
push
repnz
xor
fwait
push
adc
nop
pop
pop
sbb
push
loop
out
stc
retf
adc
pop
add
mul
adc
mov
leave
adc
int3
adc
das
add
push
adc
outs
int3
pop
gs
inc
stc
push
or
inc
gs
add
add
push
adc
fsubp
adc
push
cmp
cmps
jnp
add
cmc
jb
(bad)
adc
push
repnz
ss
pop
xchg
shl
jb
sti
adc
sub
out
out
fisubr
push
jle
pop
add
mul
adc
das
inc
cli
pushf
jmp
mov
push
dec
les
outs
ror
jecxz
xchg
jbe
popa
push
dec
mov
in
adc
inc
cwde
fisttp
jecxz
adc
pop
call
jmp
adc
pop
xchg
call
repz
adc
dec
jnp
add
jmp
retf
jmp
outs
cmp
out
gs
scas
out
(bad)
pop
cmp
loope
in
ins
daa
jl
jnp
adc
(bad)
test
jecxz
cmp
popa
out
lahf
push
adc
xchg
rcr
lock
pop
add
cmc
out
and
inc
cwde
fist
gs
adc
lock
adc
scas
call
in
stos
xchg
test
out
call
push
lods
imul
mov
adc
push
cmps
xchg
push
lods
imul
push
lods
outs
fwait
out
call
adc
movs
adc
jle
cdq
mov
push
gs
cmps
fist
les
mov
xchg
out
xor
call
add
pop
loop
adc
push
lahf
shr
adc
jmp
and
pop
pop
enter
dec
adc
cmps
and
sub
pop
jp
sub
call
push
sub
pop
jp
jle
add
call
adc
das
pop
xchg
push
xchg
sub
add
outs
pop
cdq
das
pop
xchg
jb
das
push
outs
loope
add
movs
adc
xchg
and
in
jle
adc
adc
add
mov
adc
gs
imul
xchg
pop
out
lahf
push
adc
jmp
bound
es
adc
call
jmp
mov
jmp
sub
mov
sub
push
adc
popa
das
jmp
cmps
ins
and
adc
jp
inc
mov
jmp
mov
call
fs
pop
pop
sbb
adc
ss
jmp
cmps
ins
movs
fs
jecxz
xchg
jb
es
adc
adc
call
adc
xchg
sub
add
outs
pop
fwait
mov
stc
sahf
jecxz
jmp
fisubr
adc
dec
adc
mov
adc
imul
adc
cmps
fs
pop
xchg
jb
es
adc
call
jmp
mov
pop
cmps
xchg
cmps
adc
push
adc
jb
mov
iret
jp
inc
mov
jmp
and
call
adc
xchg
pop
dec
les
outs
ror
jecxz
xchg
jbe
cmc
inc
int
mov
call
dec
push
sbb
adc
arpl
nop
and
and
adc
stos
cmp
imul
adc
outs
shl
iret
jp
repz
loope
add
sti
out
stos
mov
jmp
push
pushf
pop
out
ret
xchg
mov
push
sub
mov
adc
dec
fwait
clc
call
in
call
in
adc
cdq
mov
retfw
mov
push
data16
mov
outs
mov
call
cmps
retf
mov
das
jmp
mov
rcl
push
pushf
fidiv
iret
sahf
das
add
push
jmp
das
jecxz
mov
rcl
cmps
retf
fwait
mov
jecxz
pop
outs
xchg
clc
pop
cs
cwde
mov
cmps
xchg
push
xchg
(bad)
mov
stc
sahf
jecxz
jmp
sahf
push
cmps
adc
fdiv
add
movs
out
scas
jg
lods
fsubr
gs
pop
xchg
pop
data16
dec
shl
dec
mov
xor
stc
inc
xchg
pop
out
pop
out
inc
into
gs
cmps
stc
and
cmps
adc
sbb
out
imul
test
call
push
sbb
inc
into
gs
cmps
mov
xchg
imul
cmps
adc
jo
lods
jns
pop
out
call
(bad)
gs
es
call
cmps
setns
gs
mov
push
sub
call
call
mov
adc
xchg
pop
jp
je
sbb
call
mov
xchg
pop
out
scas
jg
mov
push
hlt
ret
call
mov
adc
out
push
(bad)
gs
cmps
push
sub
push
(bad)
gs
int
test
call
and
pop
xlat
pop
cdq
dec
out
gs
cmps
setns
gs
inc
adc
push
mov
or
cmps
adc
push
cmps
setns
gs
inc
adc
jle
inc
add
cmps
cwde
movsx
gs
mov
xchg
daa
mov
gs
xchg
or
push
pop
out
gs
leave
inc
xchg
pop
out
lahf
push
adc
loope
lds
pop
cwde
dec
stos
dec
pop
pop
mov
adc
push
xchg
outs
test
stos
xchg
dec
xor
push
adc
push
cwde
pop
jmp
movs
cwde
xlat
pop
(bad)
gs
loope
pop
push
adc
xchg
pop
addr16
out
xchg
inc
xchg
pop
inc
jb
(bad)
adc
sub
out
gs
popf
call
adc
dec
(bad)
gs
pop
movs
inc
mov
out
jb
pop
out
gs
pop
sbb
les
gs
mov
mov
out
jno
xchg
out
adc
inc
adc
shl
lods
bound
loope
gs
adc
xchg
movs
adc
outs
cmps
add
mov
out
jno
daa
rcr
xchg
cmps
loope
push
cmps
gs
pop
stc
xchg
nop
pop
out
ret
jmp
std
jne
pop
adc
out
out
gs
pop
out
call
out
xchg
in
sti
out
gs
pop
adc
fsubp
adc
jle
gs
dec
sub
push
clc
fisubr
adc
xchg
pop
sar
sub
push
call
xchg
aas
sahf
dec
out
gs
test
pop
out
pop
mov
pop
mov
mov
sub
mov
out
adc
push
(bad)
gs
addr16
jecxz
shl
addr16
imul
sbb
xchg
pop
nop
daa
sahf
dec
out
gs
adc
push
adc
jmp
out
xor
dec
daa
sub
adc
out
push
iret
gs
das
rcr
push
cwde
psadbw
gs
das
xchg
add
iret
gs
sub
out
sbb
and
pop
retf
gs
test
adc
xchg
pop
cwde
pop
(bad)
jns
gs
lds
pop
cwde
pop
mov
out
add
out
cmp
inc
mov
out
jb
icebp
adc
xchg
pop
sub
(bad)
jns
gs
in
pop
scas
jns
gs
movs
inc
xchg
pop
adc
mov
out
gs
out
test
xchg
loope
movs
inc
xchg
pop
shl
hlt
call
dec
sbb
fwait
push
test
mov
out
jno
pop
adc
fsubp
adc
xchg
pop
sar
sub
out
mov
jb
gs
das
sbb
call
out
pop
mov
fisubr
test
pop
out
repnz
adc
push
cwde
pop
fidivr
arpl
pop
or
sbb
push
call
adc
cmps
and
out
cmps
push
push
push
cmps
adc
push
xchg
outs
test
adc
adc
xchg
sub
outs
das
xchg
jle
pop
out
pop
out
add
xchg
aaa
mov
outs
sub
out
adc
sar
adc
sahf
adc
je
loope
and
adc
sahf
adc
pusha
das
loope
and
aam
imul
push
adc
adc
mov
gs
es
cmp
pop
cmps
and
sahf
pop
cmps
adc
out
and
xchg
pop
cli
sbb
push
cli
xchg
loope
in
xchg
pop
adc
push
fwait
(bad)
loop
push
mov
xchg
aam
sbb
add
push
sub
add
repz
loope
add
mov
out
pop
ins
cmps
xchg
cmps
push
cmps
adc
jmp
call
adc
jmp
call
adc
sub
and
pop
adc
cmps
xchg
xchg
imul
pop
out
das
mov
shr
gs
and
repnz
xchg
pop
adc
sub
out
call
sar
das
enter
sar
movs
pop
data16
add
mov
out
adc
out
pop
sahf
dec
out
gs
in
xchg
pop
adc
xchg
mov
clc
mov
pop
out
sbb
push
(bad)
gs
cmps
push
sub
push
(bad)
gs
int
test
call
and
popa
xchg
pop
dec
les
outs
ror
jecxz
xchg
jbe
cmc
inc
int
sti
sbb
pop
out
test
xchg
call
ins
jge
xchg
gs
sub
adc
sub
fst
das
outs
out
cmps
das
push
pop
jecxz
jmp
scas
out
sbb
shr
mov
pop
ja
scas
(bad)
sbb
shl
mov
pop
pop
or
push
xchg
mov
jmp
adc
pop
xlat
fist
push
sub
pop
sub
jg
fs
jmp
fist
arpl
jecxz
call
adc
cs
xchg
out
sub
call
adc
adc
push
adc
fsub
adc
jmp
es
imul
sbb
rcr
sbb
pop
push
out
es
imul
fwait
stos
rcr
bound
adc
adc
pop
cwde
pop
inc
fs
iret
xchg
test
rcr
push
adc
outs
es
outs
test
adc
sub
push
outs
es
imul
test
out
pop
das
pop
adc
sub
xchg
fdiv
in
mov
ins
es
imul
das
pop
adc
pop
pop
push
call
shl
call
adc
xchg
cmps
push
sub
pop
dec
les
outs
ror
jecxz
inc
int3
cmp
push
add
daa
cli
fidivr
adc
xchg
cmps
adc
ins
hlt
adc
xchg
out
cmps
imul
xchg
jmp
ficomp
adc
jmp
cld
adc
stc
dec
shl
inc
adc
cmps
stc
mov
cmp
(bad)
cwde
bound
jns
gs
cmp
popa
pushf
out
data16
out
bound
xchg
call
inc
call
out
retf
adc
jecxz
and
popa
and
fcomp
das
hlt
int
xor
xor
add
adc
push
adc
scas
jnp
cmp
call
hlt
sbb
sbb
ins
cmps
adc
push
adc
imul
adc
bound
enter
pop
jmp
and
pop
adc
stos
xchg
mov
lea
push
outs
jecxz
and
hlt
jnp
cmp
adc
push
cwde
pop
jmp
out
pop
cmp
nop
jne
movs
adc
data16
gs
loope
sbb
pushf
out
jmp
out
sahf
cmc
out
out
xchg
lock
push
cmp
inc
call
cwde
bound
cwde
pop
xor
repz
jg
cmc
inc
int
xchg
aas
mov
das
jmp
lock
xchg
call
jnp
add
fs
sbb
call
pop
call
and
idiv
add
nop
retf
push
call
pop
push
sbb
adc
xchg
das
shl
push
inc
data16
out
out
data16
push
cmp
push
data16
adc
call
retf
push
nop
ins
mov
adc
push
test
lds
hlt
sbb
adc
xor
push
out
jecxz
jmp
repnz
call
shl
scas
stc
jp
cmps
adc
lods
das
jmp
outs
jecxz
xchg
fs
rcl
lock
lock
jle
cmps
adc
push
push
data16
mov
cwde
inc
call
(bad)
int3
xor
push
rcr
xor
das
hlt
retf
cmp
inc
adc
scas
(bad)
fist
daa
jl
in
adc
and
ins
xchg
push
push
inc
gs
stos
jns
mov
adc
cmc
adc
sub
push
call
aad
pop
jge
mov
adc
jp
cmps
stc
into
cmp
push
mov
pop
pop
cli
xchg
jmp
sahf
push
mov
pop
stos
ins
push
into
cmp
cmps
stc
mov
cmps
adc
scas
scas
call
das
inc
xor
push
test
cmc
inc
int
sti
sbb
pop
stos
(bad)
fist
daa
push
data16
adc
fsubr
in
push
dec
stos
xchg
dec
add
add
lock
pop
(bad)
sub
dec
jns
mov
adc
hlt
adc
jecxz
adc
repz
lds
hlt
sbb
sbb
cwde
inc
imul
or
push
js
cmps
xchg
inc
cmps
xchg
dec
sub
xlat
in
and
adc
or
push
inc
jecxz
xchg
out
cmps
fs
or
push
js
cmps
call
cs
or
push
inc
jecxz
push
sub
pop
push
sub
mov
adc
xchg
ins
gs
dec
adc
add
jl
imul
gs
ficom
das
stos
push
sub
xchg
dec
xor
add
fist
xchg
pop
je
push
jb
fucomi
cwde
pop
mov
xchg
not
fs
jecxz
out
jecxz
leave
adc
adc
adc
scas
push
sub
stos
retf
adc
mov
cmc
adc
sub
cmp
xchg
lock
jb
fisttp
adc
loope
sbb
mov
test
cmc
adc
stos
push
sub
bound
rcr
dec
pop
adc
stc
dec
shl
or
push
stos
push
in
adc
rcr
push
lea
ss
pop
cli
or
cli
and
sub
or
cli
or
cli
ss
or
or
cli
ss
cli
or
push
stos
dec
mov
adc
shl
pop
pop
sub
xchg
pop
cli
or
cli
and
jmp
sub
or
cli
ss
cli
or
xchg
pop
sar
cli
or
push
adc
cli
or
sub
push
call
adc
cli
sub
sub
cli
and
cli
sbb
cli
and
sub
cli
mov
addr16
cmps
add
push
lahf
fisubr
push
lea
cmps
mov
fsubr
pop
pop
sub
or
or
push
jnp
cli
or
cli
ss
bound
or
cli
ss
push
in
adc
jecxz
or
cli
or
cli
ss
or
or
cli
ss
cli
or
cli
ss
or
or
aaa
and
imul
cli
ss
shl
xchg
bound
or
cli
ss
dec
mov
adc
jecxz
or
cli
or
cli
ss
or
or
cli
ss
cli
or
cli
ss
or
or
sub
and
imul
cli
ss
or
or
push
mov
gs
and
inc
adc
scas
call
popa
push
xchg
das
sti
loope
in
adc
pop
and
push
push
cmps
clc
inc
push
adc
mov
loope
cmp
gs
call
sbb
pop
adc
ins
pusha
push
pusha
push
cmp
jmp
std
and
mov
cmps
iret
xchg
das
call
arpl
addr16
fs
iret
nop
push
enter
out
xchg
das
push
jb
jecxz
adc
sub
in
mov
inc
imul
fdiv
cmp
mov
sub
mov
adc
jp
leave
fwait
call
xlat
nop
(bad)
fist
jp
push
data16
adc
push
adc
das
push
inc
jb
call
push
popa
cmp
leave
fwait
call
iret
nop
cmps
ror
sub
call
inc
adc
fcomp
push
aad
jmp
pop
daa
mov
das
push
push
sub
lods
test
out
lds
hlt
sbb
sbb
nop
pop
fisttp
call
inc
adc
addr16
stos
pop
push
mov
das
rol
fs
iret
test
adc
and
call
fs
sbb
xchg
jecxz
sbb
and
cwde
push
push
sub
dec
sar
sub
push
call
adc
mov
icebp
push
sub
dec
sar
pop
and
call
push
call
jnp
add
aad
sub
stc
and
cmps
adc
scas
mov
adc
das
pop
cli
(bad)
jmp
jns
push
cwde
push
jecxz
adc
lods
fsubr
add
das
pop
adc
call
sub
xchg
aam
cmp
jecxz
jno
push
out
leave
push
out
jecxz
int
test
pop
call
mov
fist
in
cdq
outs
jle
fsubr
push
bound
jne
mul
cmps
adc
das
jp
(bad)
daa
cmps
adc
pop
jp
sub
fnsave
jp
(bad)
adc
lods
fsubr
cli
test
adc
jmp
call
adc
fstp
pop
gs
pop
mov
int
sub
lods
fsubr
loope
outs
data16
fsubr
stc
jp
cmps
adc
scas
stos
mov
xlat
in
adc
push
cli
(bad)
jmp
cmc
test
cmps
cwde
push
jecxz
adc
lods
fsubr
add
das
push
adc
call
sub
sahf
aam
cmp
jecxz
jno
das
loope
das
push
call
mov
fistp
in
cdq
outs
jle
fsubr
push
push
jns
ins
imul
sar
test
in
adc
lods
fsubr
sbb
cmps
scas
sbb
adc
inc
call
sub
adc
pushfw
nop
pop
dec
test
(bad)
fwait
pop
mov
push
sub
call
retf
in
gs
and
jnp
add
call
stc
xchg
and
nop
imul
cmps
pushf
fild
lock
out
mov
shr
out
out
mov
shr
inc
jb
out
adc
pushw
adc
jecxz
lds
test
gs
adc
cmps
adc
cmp
scas
inc
pop
or
and
fist
call
out
gs
nop
lahf
push
adc
shl
inc
sub
cwde
pop
sbb
call
inc
adc
mov
fist
mov
popa
push
adc
pop
out
pop
das
pop
adc
dec
adc
cmps
push
sub
pop
stos
dec
daa
les
retf
jecxz
out
stos
pop
push
pop
xchg
mov
dec
adc
xor
das
pop
adc
das
pop
sub
pop
ins
pop
out
gs
inc
shr
cwde
pop
pushf
fs
fs
xchg
lahf
xchg
pop
out
test
xchg
pop
and
pushf
mov
xchg
gs
pop
out
retf
mov
push
in
sub
out
cmp
shr
jnp
add
jnp
add
xchg
popa
xchg
pop
out
retf
push
call
out
gs
scas
test
retf
pop
call
in
gs
idiv
jb
adc
xchg
sbb
xchg
adc
addr16
pop
stc
stos
and
loope
lods
pop
movs
outs
xchg
pop
out
jb
loopne
call
inc
repnz
push
call
inc
jb
in
adc
xchg
pop
inc
repnz
push
call
inc
repnz
adc
xor
call
out
jecxz
stc
addr16
pop
cwde
pop
xchg
mov
jns
mov
adc
cmps
jns
call
inc
repnz
adc
add
div
jns
call
pop
call
out
push
cmps
adc
xor
fcomp
das
hlt
sbb
sub
push
mov
das
(bad)
outs
shl
ins
lea
push
outs
jecxz
xchg
call
neg
add
adc
push
adc
stos
out
out
bound
shr
cwde
imul
out
(bad)
call
xchg
pop
bound
adc
push
mov
out
adc
push
out
out
xchg
dec
in
shr
dec
les
outs
ror
jecxz
inc
and
jmp
add
push
out
out
jle
sbb
push
jnp
cmp
mov
stos
out
out
bound
call
dec
pop
aas
das
hlt
retf
cmp
mov
fist
int3
adc
gs
mov
out
pop
fs
and
xor
inc
retf
test
bound
cwde
pop
out
jmp
retf
jns
push
adc
push
adc
push
fs
xchg
rcr
jb
out
adc
pop
data16
lods
xchg
ror
gs
mov
out
jbe
adc
mov
out
xchg
dec
jl
push
sbb
stos
out
out
xchg
dec
sub
push
and
mov
bound
cwde
pop
xchg
shr
jb
out
adc
mov
and
call
das
push
adc
pop
push
dec
daa
out
sub
adc
cwde
bound
cwde
pop
out
in
retf
adc
pop
stos
out
out
bound
(bad)
sbb
mov
pushf
fbstp
inc
lock
adc
mov
out
xchg
dec
hlt
(bad)
sbb
stos
out
out
xchg
dec
rcr
push
and
mov
movs
(bad)
push
sub
ror
call
cwde
pop
xor
das
hlt
retf
cmp
inc
and
jmp
push
stc
push
xchg
cmps
xchg
jae
call
adc
push
cwde
fist
das
(bad)
cmp
jecxz
out
inc
xchg
rcr
and
adc
push
adc
or
call
in
dec
sub
adc
pop
data16
mov
cmps
stc
shr
adc
das
pop
cli
pushf
jmp
test
gs
sbb
(bad)
fst
stos
sub
add
mov
adc
cmp
inc
leave
cmp
call
jecxz
(bad)
sub
and
das
pop
cwde
pop
inc
fs
iret
xchg
das
into
jno
es
adc
push
adc
pop
mov
and
cmp
repz
adc
xchg
and
nop
fist
loope
cmps
push
cmps
fs
arpl
mov
pop
mov
sub
adc
mov
call
adc
pop
das
loope
mov
stc
ds
adc
lods
daa
push
callw
call
adc
pop
mov
sub
cmp
repz
adc
xchg
rol
xor
fcomp
das
hlt
sbb
sub
loope
dec
sub
xor
jb
loop
call
neg
lods
scas
inc
lock
fldcw
cwde
fistp
test
loope
arpl
nop
adc
adc
push
mov
jmp
loope
push
cmps
adc
lods
jecxz
call
out
xchg
fcomp
or
xchg
das
(bad)
sbb
or
xchg
ins
mov
cdq
jecxz
std
adc
sub
dec
inc
sub
adc
xchg
jecxz
xchg
fucom
out
mov
loope
in
xor
fcomp
das
hlt
and
cmps
adc
push
inc
int
jmp
jmp
pop
adc
iret
dec
out
addr16
cmps
pushf
pop
xchg
pop
out
cmp
xchg
cmp
xchg
jecxz
cwde
push
push
cwde
pop
arpl
popf
pop
data16
mov
cmps
adc
xlat
pop
out
fs
cmps
fs
cmp
fsubr
and
mov
call
push
call
out
and
adc
xchg
pop
cwde
pop
mov
sbb
gs
pop
jp
mov
in
gs
sub
out
pop
(bad)
pushf
adc
sub
fsubr
cwde
pop
xchg
pop
out
gs
call
into
adc
and
cmps
adc
call
xchg
jecxz
shl
cwde
pop
jmp
call
add
in
imul
imul
jmp
jns
call
adc
and
push
call
stc
ret
adc
scas
scas
stc
mov
pusha
cmps
adc
nop
mov
icebp
fsubr
movs
xchg
pop
out
jb
jecxz
call
loope
lods
dec
sbb
push
test
push
adc
popf
pop
xchg
pusha
outs
(bad)
jb
loop
call
out
cmp
out
int
cwde
into
fsubr
stc
bound
cmps
adc
scas
mov
inc
cmps
adc
pusha
cmps
adc
nop
mov
icebp
fsubr
movs
xchg
pop
out
jb
loop
call
push
call
stc
jle
cmps
adc
scas
scas
stc
cmp
cmps
adc
pusha
cmps
adc
nop
mov
icebp
fsubr
movs
xchg
pop
out
jb
loop
call
adc
push
out
jmp
dec
js
push
test
push
adc
popf
pop
inc
adc
pop
out
fs
icebp
jns
mov
adc
add
call
xor
call
inc
repnz
jns
call
xchg
pop
jle
call
cmps
adc
loop
call
out
jmp
into
loope
sub
out
gs
call
into
fsubr
movs
xchg
pop
out
jb
loop
call
adc
push
out
jmp
into
loope
sub
out
sub
add
movs
xchg
pop
out
jb
in
call
adc
push
out
jmp
dec
mov
push
test
push
adc
popf
pop
inc
adc
pop
out
fs
icebp
jns
mov
adc
cmp
call
jl
push
not
out
push
addr16
das
xlat
jb
in
call
out
cmp
in
inc
sub
in
gs
cmps
pushf
pop
mov
in
cmp
mov
and
gs
pop
inc
repnz
dec
inc
fldcw
xchg
pop
dec
dec
and
push
test
push
adc
popf
pop
xchg
pusha
outs
(bad)
jb
in
call
out
cmp
out
int
cwde
into
fsubr
stc
xchg
cmps
adc
scas
mov
push
inc
cwde
pop
mov
pusha
stc
push
cmps
adc
pusha
cmps
adc
nop
mov
icebp
fsubr
movs
xchg
pop
out
jb
in
call
adc
push
out
jmp
into
fiadd
out
das
xchg
pop
out
or
and
push
call
mov
and
jns
mov
adc
pop
out
fs
dec
aam
push
xchg
pop
bound
loope
call
call
out
fs
idiv
mov
adc
sbb
call
push
call
mov
and
jns
mov
adc
pop
out
fs
dec
ins
fsubr
xchg
pop
bound
fsubr
test
push
adc
popf
pop
xchg
pusha
outs
fild
repnz
gs
pop
stc
ret
adc
scas
scas
stc
mov
cmps
adc
pusha
cmps
adc
nop
mov
push
call
mov
hlt
call
into
das
inc
sub
adc
pop
xchg
xchg
out
and
call
out
call
xchg
call
inc
jmp
stos
pop
in
gs
outs
adc
(bad)
out
addr16
movs
xchg
pop
xchg
pop
out
mov
xchg
aad
adc
(bad)
out
addr16
movs
lods
pop
xchg
pop
out
xchg
fcomp
or
xchg
and
jmp
call
repz
and
gs
xchg
pop
or
pushf
daa
push
out
gs
cmps
pushf
daa
push
out
gs
cmps
xchg
pop
jle
cmp
push
out
jecxz
test
pop
xchg
and
gs
pop
nop
daa
stos
pop
in
gs
gs
pop
out
das
sahf
pop
out
gs
ror
pop
out
cmps
adc
neg
gs
jne
sub
adc
xchg
out
call
out
jmp
into
dec
inc
sub
out
cmp
xchg
cmp
pop
sbb
xchg
and
jns
mov
adc
pop
out
fs
dec
call
pop
bound
loope
call
call
out
jmp
into
loope
sub
out
sub
push
aad
jmp
aad
xchg
pop
xchg
call
out
gs
jmp
pop
scas
pop
in
gs
fs
pop
cwde
pop
xchg
gs
out
jecxz
shl
pop
cwde
pop
sbb
call
jmp
shr
adc
xlat
cmps
adc
cmps
push
push
push
cmps
adc
jecxz
call
cmps
sub
xchg
pop
out
gs
call
and
gs
pop
out
out
jle
dec
inc
sub
in
cmp
fisubr
xchg
pop
sub
mov
cmps
adc
xchg
das
(bad)
cld
jecxz
xlat
gs
pop
cwde
push
push
cwde
pop
out
adc
frstor
xlat
gs
pop
pushf
push
outs
push
out
addr16
idiv
mov
out
push
out
addr16
idiv
sub
mov
in
gs
adc
gs
pop
out
out
jb
movs
push
pop
out
adc
pop
out
fs
idiv
mov
adc
add
call
cs
mov
and
jns
mov
adc
pop
out
fs
dec
mov
push
xchg
pop
bound
loope
call
call
out
jmp
into
fiadd
out
das
xchg
pop
out
gs
call
cs
mov
and
jns
mov
adc
pop
out
fs
dec
inc
movs
push
xchg
pop
bound
push
pop
out
jb
popf
adc
push
out
pop
sahf
pop
out
gs
adc
fistp
fs
cmc
stc
mov
pop
out
sbb
pop
out
arpl
pop
stc
pop
out
add
xchg
pop
out
jb
cdq
adc
test
lods
adc
jmp
into
dec
inc
sub
out
add
and
das
call
mov
and
jns
mov
adc
pop
out
fs
dec
lods
movs
push
xchg
pop
bound
loope
mov
xchg
pop
xchg
pop
out
adc
test
push
adc
popf
pop
xchg
pusha
outs
fild
repnz
gs
pop
stc
push
push
cmps
adc
scas
scas
jns
mov
adc
pop
out
fs
dec
push
pop
bound
movs
push
test
push
adc
popf
pop
xchg
pusha
outs
(bad)
jb
cwde
adc
push
out
cmp
out
int
cwde
into
fsubr
stc
mov
scas
mov
call
adc
nop
mov
iret
fsubr
movs
xchg
pop
out
jb
cwde
adc
pushf
mov
les
push
adc
popf
pop
xchg
pusha
outs
fild
repnz
adc
gs
pop
stc
outs
push
cmps
adc
scas
scas
stc
sub
adc
pusha
cmps
adc
nop
mov
icebp
fsubr
movs
xchg
pop
out
jb
fwait
adc
loope
adc
push
out
jmp
dec
push
stc
push
adc
popf
pop
inc
adc
pop
out
fs
icebp
jns
mov
adc
adc
call
iret
fsubr
movs
xchg
pop
out
jb
fwait
adc
call
cmps
push
test
push
adc
popf
pop
xchg
pusha
outs
fild
repnz
gs
pop
stc
(bad)
push
cmps
adc
scas
scas
jns
mov
adc
pop
out
fs
dec
pop
cmps
push
xchg
pop
bound
cmps
push
test
push
adc
popf
pop
xchg
pusha
outs
fild
repnz
gs
pop
stc
mov
scas
scas
jns
mov
adc
pop
out
fs
dec
add
bound
out
jl
adc
call
push
out
jmp
into
loope
sub
out
add
push
aad
out
iret
gs
pop
inc
adc
pop
out
fs
idiv
mov
adc
add
call
sub
call
jmp
pop
mov
push
in
fistp
fs
dec
mov
push
xchg
pop
(bad)
into
adc
out
das
xchg
pop
out
xor
sub
call
mov
and
jns
mov
adc
pop
out
fs
dec
jl
push
xchg
pop
bound
data16
cmps
out
jecxz
shl
pop
cwde
pop
cmp
push
mov
das
(bad)
sbb
icebp
call
into
stc
inc
sub
adc
test
adc
jmp
into
loope
sub
out
sub
xchg
add
fsubr
movs
xchg
pop
out
jb
popf
adc
fstp
adc
jmp
into
loope
sub
out
xor
push
aad
jmp
(bad)
fild
stc
push
push
cmps
adc
pusha
cmps
adc
nop
mov
sub
push
mov
hlt
call
into
das
inc
sub
adc
mov
adc
gs
pop
stc
adc
adc
scas
scas
jnp
add
jnp
add
fs
and
xchg
pop
out
sbb
movs
xchg
pop
out
jb
sahf
adc
sahf
pop
out
gs
pop
out
gs
adc
gs
pop
stc
cli
push
cmps
adc
dec
out
addr16
dec
call
das
xchg
pop
out
add
push
loope
call
call
out
lds
hlt
sbb
icebp
scas
shr
sbb
xchg
push
not
out
pop
out
gs
das
(bad)
pop
das
pop
adc
test
jns
mov
adc
out
pop
out
gs
idiv
cs
cmps
adc
xchg
xchg
jmp
repnz
jnp
call
inc
repnz
gs
and
out
fwait
loopne
out
cmps
outs
aam
lock
sub
cmps
jns
mov
adc
imul
gs
into
mov
in
repnz
call
xchg
pop
dec
daa
inc
and
inc
adc
cmps
adc
cmp
scas
xor
popa
adc
and
out
call
push
push
stos
and
and
sub
adc
xchg
pop
cwde
bound
cwde
pop
pop
jge
fbld
xlat
sbb
adc
movs
adc
jecxz
mov
xchg
pop
inc
jb
xchg
adc
xchg
pop
out
das
retf
add
xchg
loope
ins
addr16
pop
pushf
into
pusha
mov
push
adc
ds
gs
das
jmp
int3
and
xchg
pop
out
fild
in
gs
dec
loopne
push
cwde
pop
push
pop
out
gs
adc
jp
cmps
adc
aas
scas
call
repnz
xchg
pop
pushf
into
pusha
cmps
pushf
into
push
cs
gs
daa
out
pop
cmps
adc
push
push
call
xchg
push
xchg
pop
out
sbb
int3
add
push
xchg
ds
pop
out
retf
sub
push
inc
jb
lahf
adc
push
xchg
cs
pop
out
retf
int
push
movs
inc
sub
xchg
jb
push
out
gs
rcr
add
call
adc
xchg
into
adc
pop
xchg
pop
out
cmp
xchg
cs
pop
out
retf
and
push
xchg
pop
out
fbstp
in
gs
pop
movs
push
xchg
pop
out
fild
in
gs
pop
movs
add
push
in
gs
lock
pop
ficomp
cmp
push
dec
das
xchg
push
xchg
pop
out
xchg
stos
rcr
sbb
jae
cmps
adc
push
xchg
xchg
pop
out
retf
sub
xchg
das
(bad)
pop
out
adc
gs
neg
cmp
mov
test
adc
and
gs
int3
push
lock
xchg
and
sub
jecxz
cmp
popa
(bad)
pop
rcr
gs
adc
xchg
pop
adc
out
dec
out
gs
cmps
adc
xlat
and
gs
cmps
xchg
xchg
jb
pop
out
fwait
push
(bad)
test
cmps
adc
out
push
out
gs
idiv
mov
and
pop
out
push
out
gs
idiv
add
jnp
add
out
gs
adc
xchg
adc
mov
adc
xchg
pop
stc
and
adc
xchg
(bad)
pop
movs
push
xchg
pop
out
bnd
push
call
xchg
xchg
pop
out
retf
es
bound
pop
adc
daa
out
aaa
cmps
adc
out
pop
out
gs
idiv
mov
adc
xchg
adc
pop
mov
adc
xchg
adc
xchg
pop
adc
out
aad
gs
call
aas
into
adc
push
stc
(bad)
pop
cmps
adc
xlat
ss
gs
cmps
gs
add
sub
imul
gs
test
xchg
adc
mov
adc
out
pop
out
gs
idiv
(bad)
pop
out
sbb
cmps
adc
dec
and
out
call
out
gs
(bad)
test
and
out
call
pushf
pop
ficomp
cmp
scas
push
test
ins
lea
xchg
jmp
stc
jmp
movs
ds
pop
out
jb
xchg
adc
xchg
pop
stc
ds
cmps
adc
out
cmp
gs
dec
push
and
lods
adc
push
pop
out
gs
dec
les
outs
rcr
jmp
icebp
call
loopne
bound
cwde
pop
xchg
rcr
jb
xchg
adc
aas
pop
cwde
bound
cwde
pop
xchg
rcr
call
out
out
jp
mov
pop
or
inc
ins
cmp
test
or
inc
outs
adc
adc
jbe
sub
adc
loop
mov
int3
adc
xchg
adc
cmp
adc
jbe
push
push
stos
das
push
push
mov
or
jecxz
push
retf
and
push
aad
xchg
rcr
adc
dec
sub
test
xchg
sub
outs
out
jb
xchg
adc
jecxz
out
out
jp
cmps
fist
cmps
iret
xchg
sub
push
cmps
adc
adc
loop
lahf
adc
jbe
sub
jp
inc
jb
xchg
adc
add
push
call
and
test
call
and
cmp
stc
stos
pop
cmps
adc
cmp
call
dec
push
test
jmp
push
inc
int3
cmp
inc
push
xchg
das
(bad)
and
scas
adc
rol
gs
(bad)
pop
(bad)
inc
out
sub
lods
jp
pop
inc
pop
out
data16
gs
idiv
mov
adc
mov
call
sbb
cmp
pop
mov
jb
xchg
adc
stos
ror
fild
gs
pop
fs
or
ins
lea
xchg
mov
adc
(bad)
(bad)
pop
(bad)
inc
out
sub
lods
jp
pop
inc
pop
out
data16
gs
test
mov
call
cmp
popa
inc
fbld
gs
dec
and
push
xchg
pop
bound
movs
push
mov
gs
stos
stc
dec
inc
cmps
adc
jmp
shr
cli
xor
dec
les
outs
ror
jecxz
test
jb
mov
call
scas
xor
push
dec
sbb
loope
call
call
cwde
inc
jmp
call
add
inc
jb
sbb
gs
jns
call
xchg
pop
bound
out
add
loope
lods
into
pop
inc
sub
out
cmp
scas
push
xchg
pop
bound
test
push
adc
popf
pop
xchg
pusha
outs
fild
call
inc
jb
xchg
adc
rcl
adc
jmp
dec
mov
stc
push
adc
popf
pop
inc
pop
xlat
cmps
icebp
gs
icebp
jns
mov
adc
xlat
cmps
icebp
gs
icebp
stc
cmp
adc
scas
mov
sbb
adc
pusha
cmps
adc
nop
mov
icebp
fsubr
xchg
call
and
jecxz
cmp
pusha
jns
mov
adc
out
cmps
icebp
gs
idiv
push
pop
cmps
adc
scas
scas
stc
ficomp
adc
pusha
cmps
adc
nop
mov
icebp
fsubr
xchg
call
and
cmp
push
mov
and
stc
xchg
pop
cmps
adc
or
call
jp
pop
inc
repnz
call
inc
jb
xchg
adc
pop
mov
mov
cmps
icebp
gs
idiv
mov
adc
out
cmps
icebp
gs
idiv
inc
pop
cmps
adc
scas
mov
push
inc
cwde
pop
sahf
jns
gs
stc
sub
adc
pusha
cmps
adc
nop
mov
icebp
fsubr
xchg
call
and
add
call
and
adc
call
mov
and
jns
mov
adc
out
cmps
icebp
gs
idiv
push
pop
cmps
adc
scas
scas
jns
mov
adc
out
cmps
icebp
gs
idiv
sbb
adc
scas
scas
cwde
push
inc
cwde
pop
call
stos
pop
cmps
adc
pusha
cmps
adc
nop
mov
and
push
mov
hlt
pushf
daa
push
out
gs
cmps
pushf
daa
push
out
gs
cmps
xchg
pop
jp
cmp
pushf
pop
push
out
cmp
test
cmps
xchg
pop
bound
stos
push
test
push
adc
popf
pop
xchg
pusha
outs
fild
call
inc
jb
xchg
adc
and
call
inc
jb
xchg
adc
call
stos
push
test
push
adc
popf
pop
xchg
pusha
outs
fild
call
inc
jb
xchg
adc
jo
push
call
inc
jb
xchg
adc
or
lods
adc
jmp
into
loope
sub
out
cmp
stos
push
xchg
pop
bound
out
inc
cmps
adc
stos
pushf
pop
push
out
gs
aas
inc
sub
out
cmp
stos
push
xchg
pop
jp
or
push
test
push
adc
popf
pop
xchg
pusha
outs
fild
call
inc
jb
xchg
adc
push
push
call
inc
jb
xchg
adc
mov
adc
jmp
into
loope
sub
out
cmp
stos
push
xchg
pop
bound
cs
push
out
jecxz
std
inc
xchg
pop
cwde
pop
or
call
mov
das
(bad)
sbb
icebp
pushf
daa
push
out
gs
cmps
pushf
daa
push
out
gs
cmps
xchg
pop
jp
ins
stos
push
test
push
adc
popf
pop
xchg
pusha
outs
fild
call
inc
jb
xchg
adc
mov
push
call
inc
jb
xchg
adc
test
call
test
push
adc
popf
pop
xchg
pusha
outs
fild
call
inc
jb
xchg
adc
jge
adc
push
out
jmp
dec
adc
push
test
push
adc
popf
pop
inc
pop
xlat
cmps
icebp
gs
icebp
jns
mov
adc
xlat
cmps
icebp
gs
icebp
stc
inc
cmps
adc
scas
mov
dec
mov
adc
out
cmps
icebp
gs
idiv
xchg
pop
cmps
adc
scas
scas
jnp
add
jnp
add
stc
adc
adc
out
pop
into
gs
daa
xlat
push
jge
adc
out
cmps
icebp
gs
idiv
xchg
inc
cmps
adc
push
lods
bound
sub
xchg
adc
inc
xchg
pop
stc
jle
cmps
adc
pop
into
gs
dec
ins
mov
cmps
and
dec
pop
adc
stc
dec
shl
std
push
outs
cmps
adc
cmp
scas
je
pop
jp
xchg
push
not
out
and
gs
das
(bad)
sbb
cmp
gs
cmps
and
arpl
push
call
cmps
adc
aas
scas
pushf
into
push
pop
out
gs
out
jecxz
xchg
popa
xchg
pop
cwde
pop
sub
call
adc
push
out
gs
shr
in
jb
lea
call
jnp
add
out
cmp
mov
cmps
jns
imul
gs
idiv
mov
adc
fidivr
call
icebp
jg
pop
xchg
pop
dec
scas
rcl
push
adc
pop
xchg
pop
out
cmp
xchg
cs
pop
out
retf
cmp
xchg
das
(bad)
fild
in
gs
cmc
pushf
pop
ficomp
cmp
pusha
xchg
pop
xchg
pop
scas
rcl
push
mov
sub
out
cmp
mov
cmps
pushf
pop
ficomp
cmp
xchg
xchg
pop
out
retf
aas
call
cwde
pop
repnz
out
gs
adc
popa
jnp
add
out
cmp
mov
cmps
xchg
pop
jbe
(bad)
lea
adc
push
out
gs
loop
call
out
fwait
push
adc
xlat
ds
gs
cmps
xchg
xchg
jb
pop
out
fwait
push
(bad)
out
add
out
gs
idiv
or
inc
pop
out
push
out
gs
idiv
add
jnp
add
out
gs
adc
mov
call
adc
xchg
pop
stc
pop
inc
cmps
adc
xchg
cmps
jmp
cmp
jns
call
xchg
xchg
pop
out
retf
cmp
push
aad
lods
and
xchg
pop
adc
daa
(bad)
jmp
out
gs
idiv
mov
adc
lea
call
jns
imul
outs
popa
xchg
pop
adc
out
fldl2e
gs
call
out
scas
adc
push
stc
retf
adc
xchg
(bad)
into
adc
pop
cli
pop
out
gs
stc
push
inc
cmps
adc
imul
inc
sub
out
cmp
sub
fwait
out
gs
push
push
lods
cmps
adc
xchg
pop
inc
leave
adc
gs
and
push
push
les
out
das
(bad)
pop
out
gs
popf
popa
xchg
pop
inc
jb
(bad)
adc
push
pushf
pop
neg
cmp
push
xchg
pop
out
jb
jno
gs
out
das
(bad)
pop
out
gs
call
stc
xchg
adc
add
stc
bound
adc
scas
mov
pop
pop
(bad)
jns
mov
adc
(bad)
adc
xchg
pop
xchg
jno
cmc
cwde
pop
imul
fbstp
in
gs
dec
daa
inc
xchg
pop
xchg
pop
dec
push
adc
cmp
gs
and
out
das
(bad)
pop
out
cmp
xchg
jmp
hlt
icebp
push
inc
jb
(bad)
adc
xchg
pop
adc
ficomp
cmp
mov
cmps
cwde
bound
cwde
pop
add
out
sbb
ds
pop
out
jb
mov
call
cli
pushf
jmp
pop
clc
push
dec
les
outs
rcr
jmp
icebp
call
(bad)
nop
pop
xchg
lock
push
cwde
fist
in
cmp
out
adc
adc
inc
int3
add
aam
cmps
out
jecxz
in
lods
cmc
stc
mov
pop
stos
pushf
into
ins
cmps
inc
jb
adc
mov
xchg
idiv
cmp
mov
call
adc
lods
int3
out
int3
sbb
call
push
push
popa
pushf
fist
adc
mov
xchg
stc
dec
shl
adc
dec
cmps
adc
cmp
adc
add
in
mov
cmps
cwde
pop
jecxz
cmp
popa
sbb
and
in
gs
adc
out
cmps
loope
xchg
test
mov
call
xchg
fwait
call
gs
and
out
call
add
popf
mov
adc
or
call
dec
push
test
dec
sbb
or
adc
out
fwait
push
jae
fucom
out
retf
int
push
push
outs
cmp
mov
cmps
nop
ins
inc
call
call
jns
imul
fsubr
cmp
das
pop
xchg
pop
imul
adc
das
push
inc
jb
mov
call
inc
lock
push
fwait
push
out
scas
inc
cmp
sbb
shr
xchg
test
jmp
push
test
dec
sbb
mov
bound
push
data16
jnp
add
lahf
add
jnp
add
adc
push
pop
lock
sub
push
cwde
pop
ror
sbb
das
pop
cwde
pop
add
and
retf
in
jb
mov
call
and
mul
adc
mov
call
and
retf
in
jb
mov
call
and
cmc
out
jb
mov
call
and
jmp
adc
mov
call
jnp
cmp
mov
mov
cmps
jnp
cmp
xchg
mov
cmps
jnp
cmp
ss
push
or
cmp
shl
mov
cmps
cwde
push
push
cwde
pop
add
and
repz
jb
adc
lock
pop
and
mul
adc
adc
lock
pop
and
leave
in
jb
adc
lock
pop
and
leave
in
jb
adc
call
cwde
pop
xor
sbb
test
fcom
call
push
call
xor
sub
adc
xchg
pop
and
mul
adc
adc
scas
jmp
call
jns
in
out
lock
pop
and
retf
in
jb
adc
xchg
push
jnp
xchg
xchg
cmp
bound
cmp
push
call
in
gs
mov
mov
xchg
xchg
or
dec
dec
cmps
adc
push
push
call
in
gs
mov
fdivr
xchg
cmp
dec
cmps
adc
adc
push
call
in
gs
mov
mov
xchg
xchg
xor
dec
cmps
adc
inc
aas
push
call
in
gs
xchg
mov
pop
pop
cwde
pop
add
scas
out
pop
push
call
or
mov
out
lock
pop
and
retf
in
jb
adc
xor
and
scas
outs
adc
or
test
call
out
out
bound
xchg
pop
cwde
pop
add
fsubr
stc
sbb
mov
xchg
cmc
out
lock
stc
loop
cmps
adc
popf
loop
call
stc
test
lock
and
cmc
out
lock
call
sub
loope
add
adc
cmp
int
sub
adc
push
adc
push
push
cmp
cmps
jnp
xchg
xchg
and
call
cmp
call
lock
adc
mov
adc
mov
push
call
adc
outs
cmp
jecxz
cmp
popa
jnp
xchg
xchg
and
call
jns
imul
fistp
int3
inc
lock
sbb
mov
adc
mov
push
call
adc
or
push
call
jnp
add
jnp
add
adc
push
adc
(bad)
int3
add
call
and
mov
je
push
jnp
xchg
xchg
and
call
jnp
add
jne
inc
into
adc
mov
adc
mov
push
call
adc
push
pop
push
call
jnp
xchg
xchg
and
call
jnp
add
imul
push
jns
mov
adc
mov
push
call
adc
retf
call
push
call
push
call
adc
retf
call
inc
repnz
jl
call
adc
adc
leave
stos
mov
push
adc
xchg
mov
push
adc
loop
fld
add
adc
adc
push
adc
add
retf
fsubr
retf
inc
sub
xor
add
xchg
xchg
and
call
jnp
add
jns
push
adc
jle
adc
mov
adc
out
jl
call
adc
cmp
call
jns
mov
adc
push
push
fwait
push
inc
jb
adc
add
retf
fsubr
adc
sub
stc
pop
sub
adc
push
and
cmc
out
lock
and
retf
repnz
cmps
adc
push
adc
adc
adc
mov
adc
out
jl
call
adc
jmp
(bad)
jnp
xchg
xchg
and
call
jns
imul
call
adc
imul
xchg
inc
sub
xor
sub
out
lock
and
cmc
out
lock
and
retf
lock
sub
mov
adc
push
jns
mov
adc
mov
push
call
adc
cli
add
out
jecxz
std
adc
xchg
mov
push
adc
loop
fld
add
jmp
adc
push
add
call
push
call
adc
test
call
adc
xchg
mov
push
adc
loop
fld
add
or
cmps
jns
push
adc
push
adc
add
retf
fsubr
retf
inc
sub
xor
sub
and
call
jnp
add
call
jnp
add
add
cmps
jns
mov
adc
push
les
mul
adc
push
and
cmc
out
lock
and
retf
lock
inc
repnz
adc
push
jns
mov
adc
mov
push
call
adc
inc
out
scas
pop
cmp
add
push
call
adc
sti
cmps
adc
push
inc
repnz
push
call
adc
dec
cmps
adc
out
pop
push
call
push
call
push
call
adc
test
mov
call
push
call
adc
dec
cmps
adc
jbe
push
call
jnp
xchg
xchg
and
call
jnp
add
adc
jle
adc
mov
adc
imul
cmps
adc
push
mov
cmc
out
lock
and
cmc
out
lock
and
retf
lock
jne
lahf
cmps
adc
push
inc
repnz
push
call
adc
dec
cmps
adc
dec
cmp
add
push
call
push
call
adc
ret
cmps
adc
push
inc
repnz
call
adc
xchg
call
dec
bound
pop
cwde
pop
and
gs
stc
dec
push
test
dec
or
cmp
mov
cwde
pop
add
fsubr
fs
or
xacquire
call
xchg
pop
jp
sbb
inc
pop
cwde
pop
add
push
call
push
push
lock
call
and
cmc
out
lock
call
sub
loope
add
adc
cmp
int
sub
adc
push
adc
push
push
cmp
cmps
jnp
xchg
xchg
and
call
cmp
call
lock
adc
mov
adc
mov
push
call
adc
outs
cmp
jmp
jl
push
jnp
xchg
xchg
and
call
jns
imul
fistp
int3
inc
lock
sbb
mov
adc
mov
push
call
adc
or
push
call
jnp
add
jnp
add
adc
push
adc
(bad)
int3
add
call
and
mov
call
call
jnp
xchg
xchg
jno
sub
jnp
add
inc
repnz
push
call
adc
mov
mov
push
inc
adc
add
adc
or
call
jnp
add
adc
mul
adc
mov
cmp
jl
adc
imul
fwait
push
out
scas
cmp
call
add
repnz
adc
sub
adc
push
and
cmc
out
lock
and
retf
repnz
cmps
adc
add
jns
push
inc
repnz
push
call
adc
mov
mov
push
jmp
lock
and
cmc
out
lock
and
retf
repnz
cmps
adc
add
adc
jmp
repnz
jl
call
adc
inc
cmp
sbb
gs
int3
adc
xchg
mov
push
adc
loop
fld
add
jmp
adc
imul
retf
retf
fsubr
retf
inc
sub
setp
cmp
cmps
jnp
xchg
xchg
and
call
jnp
add
jns
push
adc
test
cmps
adc
sub
adc
push
mov
push
mov
repz
and
inc
cwde
fild
pop
and
cmc
out
lock
and
retf
lock
in
call
adc
push
into
adc
mov
adc
mov
push
call
adc
call
scas
pop
cmp
add
push
call
adc
push
jns
push
inc
repnz
jl
call
adc
mov
mov
push
adc
xchg
mov
push
adc
loop
fld
add
mov
adc
push
adc
add
enter
retf
inc
sub
or
push
ins
cmp
cmps
jnp
xchg
xchg
and
call
jnp
add
call
jnp
add
inc
inc
sub
adc
push
mov
cmp
in
lock
and
cmc
out
lock
and
retf
lock
xchg
call
jns
push
inc
repnz
add
call
adc
ja
adc
jbe
push
call
jnp
xchg
xchg
and
call
jnp
add
jns
push
inc
repnz
push
call
adc
ja
adc
inc
cmp
add
push
call
push
call
jnp
add
int
sub
adc
push
adc
push
xor
xchg
xchg
and
call
jnp
add
push
fwait
push
jnp
add
repnz
sub
adc
push
fadd
leave
in
jb
push
out
sar
call
cwde
pop
cmp
xchg
stc
dec
push
test
dec
or
cmp
scas
mov
xchg
push
not
das
dec
cwde
pop
add
adc
imul
adc
bound
sub
pop
jmp
aaa
adc
cmp
push
ror
adc
call
push
outs
outs
cmps
adc
jecxz
stc
adc
sub
sub
pop
mov
fwait
movs
fsubr
adc
leave
pop
out
sbb
aad
lock
fs
enter
inc
inc
sub
fs
cmp
xchg
and
jmp
lock
int3
adc
gs
mov
cmps
fsubp
adc
imul
gs
and
and
popa
dec
les
outs
ror
jecxz
nop
jbe
cmps
adc
inc
mov
loope
lods
daa
jmp
sub
adc
enter
out
adc
pop
inc
jb
mov
or
call
ret
pop
xchg
out
cmps
mov
sbb
call
or
call
out
jnp
leave
sub
cmps
pushf
pop
push
out
cmp
sub
out
movs
mov
push
mov
call
or
outs
rol
bnd
push
call
inc
jb
mov
call
xchg
out
mov
mov
call
push
call
add
and
push
call
inc
jb
mov
call
jns
fnsetpm(287
adc
out
cmps
out
gs
idiv
cmp
adc
pop
pop
sbb
jnp
xchg
sub
cmps
pushf
pop
push
out
cmp
lea
cwde
push
push
cwde
pop
jmp
cmp
in
pop
out
cmps
out
gs
idiv
idiv
adc
pop
pop
sbb
jnp
into
sub
cmps
pushf
pop
push
out
cmp
lea
xchg
out
lods
mov
cmps
mov
call
push
call
add
dec
adc
call
inc
jb
mov
call
jns
fsub
adc
out
cmps
out
gs
idiv
mov
adc
call
gs
das
xlat
sbb
pop
pop
out
jnp
inc
sub
cmps
pushf
pop
push
out
cmp
mov
jnp
add
adc
and
call
inc
repnz
push
call
sub
cmps
jns
fnsetpm(287
adc
sub
push
call
sar
jo
adc
scas
mov
pop
xchg
pop
out
gs
clc
mov
xor
sahf
push
cwde
jg
lock
adc
scas
scas
jge
xor
adc
das
out
and
call
inc
jb
dec
out
gs
rcr
lock
stc
into
jb
adc
xor
dec
pop
outs
cmps
inc
adc
cmps
adc
cmp
scas
pushf
push
out
sbb
(bad)
mov
sbb
call
inc
jb
mov
call
push
call
test
pop
out
sbb
push
jmp
mov
or
ja
pop
out
retf
add
push
lods
imul
in
pop
out
dec
out
xchg
idiv
jle
cmps
adc
xlat
push
jmp
mov
inc
mov
ja
pop
out
retf
add
push
mov
push
out
jecxz
cmc
ins
xchg
pop
cwde
pop
jmp
out
jnp
adc
sub
out
cmp
(bad)
daa
cdq
pop
out
outs
rol
bnd
push
call
inc
jb
mov
call
pop
out
jnp
and
pop
xchg
cmp
(bad)
daa
cdq
pop
out
gs
rol
repnz
and
ins
xchg
pop
inc
jb
mov
call
xchg
daa
cdq
pop
out
gs
add
push
adc
cld
ins
xchg
pop
inc
jb
mov
call
sbb
jnp
call
push
out
cmp
(bad)
daa
cdq
pop
out
gs
rol
repnz
ins
xchg
pop
inc
jb
mov
call
sbb
jnp
fsubr
sub
out
cmp
mov
cwde
push
inc
cwde
pop
mov
gs
xchg
daa
cdq
pop
out
rol
repnz
ins
xchg
pop
inc
jb
mov
call
sbb
jnp
adc
sub
out
cmp
mov
xchg
daa
cdq
pop
out
gs
repnz
adc
out
cld
ins
xchg
pop
inc
jb
mov
call
xchg
ja
pop
out
retf
cld
gs
das
loope
mov
xchg
inc
popf
pop
out
adc
jns
fsub
adc
dec
out
gs
dec
out
xchg
lods
imul
push
out
gs
xchg
mov
test
sbb
mov
xchg
inc
popf
pop
out
adc
retf
into
popa
cmp
cmps
stc
fld
scas
cwde
pop
xchg
arpl
pop
mov
adc
push
lods
xchg
pop
out
call
xchg
daa
xchg
pop
out
gs
test
adc
xlat
pop
in
gs
pushf
push
pop
inc
cmps
adc
xchg
pop
adc
and
cwde
pop
mov
pusha
pushf
pop
xchg
pop
out
gs
and
sub
out
cmp
sub
pop
and
xchg
pop
out
call
adc
test
das
shr
addr16
stos
pop
push
mov
das
rol
popa
push
mov
xchg
test
adc
push
(bad)
mov
push
lods
add
mov
push
cmp
cmps
pushf
pop
xchg
pop
out
cmp
sub
push
push
cwde
pop
add
mov
push
push
inc
sub
out
cmp
lea
xchg
pop
jb
pop
repnz
adc
xchg
pop
inc
jb
mov
call
not
out
jbe
gs
das
xlat
pop
out
pop
jmp
mov
pop
out
gs
idiv
es
adc
imul
bound
mov
call
out
gs
idiv
mov
adc
out
pop
in
gs
and
xchg
xchg
pop
out
retf
leave
fsubr
xchg
xchg
pop
out
retf
push
call
pushf
pop
xchg
pop
out
cmp
mov
jnp
add
fsubr
xchg
xchg
pop
out
retf
mov
and
push
pop
or
in
xchg
pop
xchg
pop
outs
idiv
inc
jl
adc
jecxz
jmp
push
inc
cwde
pop
mov
pusha
xchg
daa
xchg
pop
out
gs
test
adc
pop
jmp
cmp
cmps
jns
mov
adc
out
pop
jmp
call
jns
fsub
adc
out
pop
out
gs
idiv
scas
js
adc
out
pop
out
gs
idiv
scas
jle
adc
out
jb
gs
dec
aaa
adc
jb
gs
lods
lahf
xchg
pop
out
gs
rol
adc
jb
gs
pusha
xchg
lahf
xchg
pop
out
gs
push
gs
out
xchg
and
out
cdq
sbb
inc
cwde
pop
cmps
push
out
gs
out
das
xchg
pop
out
gs
in
fs
pop
inc
repnz
and
fs
pop
inc
jb
mov
call
jmp
pop
jns
adc
out
outs
out
xchg
sub
adc
push
lods
push
popf
pop
out
pop
push
mov
stc
jp
cmps
adc
out
push
jmp
xor
adc
out
pop
jmp
das
sahf
pop
out
gs
call
out
retf
add
xchg
pop
out
int
sbb
bound
cmps
inc
jb
mov
call
inc
lock
movs
outs
xchg
pop
out
repnz
push
call
add
jnp
adc
out
pop
in
gs
test
dec
jmp
push
xchg
pop
xchg
pop
data16
rcl
xchg
pop
out
fisttp
gs
dec
dec
mov
nop
je
jmp
sub
push
dec
jae
pop
out
gs
mov
test
jb
mov
call
in
mov
jecxz
jns
(bad)
adc
push
adc
js
adc
out
add
gs
scas
shr
jle
stc
retf
adc
imul
push
dec
sbb
sub
mov
push
adc
mul
adc
push
adc
mov
repnz
adc
gs
das
shl
cmp
push
call
out
call
adc
mov
call
stc
mov
and
fwait
push
pushf
pop
fisttp
cmp
xchg
sub
push
adc
cli
pop
push
call
inc
jb
cmp
add
and
fwait
push
xchg
lahf
push
adc
bound
out
fsubp
adc
shl
(bad)
jo
adc
mov
call
cwde
pop
popf
dec
shl
addr16
dec
xor
(bad)
sbb
xor
pop
(bad)
imul
sbb
lods
sub
jmp
mov
das
shr
addr16
stos
pop
push
mov
das
rol
pusha
xchg
pop
or
jecxz
(bad)
fwait
mov
xchg
pop
xchg
pop
(bad)
imul
xchg
cmps
(bad)
rcl
sbb
pusha
xchg
xor
add
test
fs
lods
and
pop
out
or
gs
xchg
pushf
pop
leave
dec
out
gs
cmp
mov
adc
out
cmp
gs
idiv
xchg
jle
adc
cdq
loopne
call
std
gs
neg
cmp
mov
pushf
pop
cmc
dec
out
cmp
pop
xchg
pop
pushf
pop
leave
dec
out
cmp
pop
xchg
pop
xchg
pop
jb
adc
out
cmp
gs
idiv
sahf
jnp
adc
imul
push
nop
imul
into
cmp
mov
adc
sub
push
call
lods
clc
test
pop
pop
mov
xor
iret
into
movs
inc
sub
adc
lods
jle
call
mov
cwde
inc
inc
jle
pop
out
cmp
pushf
scas
sub
push
call
ja
add
cmp
mov
adc
dec
ss
call
lods
js
pop
out
pop
pop
es
fsubr
xor
iret
into
mov
sub
adc
lods
jle
call
add
push
xchg
pop
sub
lods
and
pop
out
pop
pop
pusha
(bad)
fsubr
sbb
jecxz
cmp
gs
add
jnp
add
adc
cmps
stc
add
adc
das
adc
add
mov
(bad)
pop
push
call
xchg
das
test
retf
pop
call
out
sbb
cmps
adc
xchg
int3
adc
pop
push
inc
retf
movs
jne
pop
inc
gs
adc
inc
cmps
adc
push
push
and
int3
adc
call
jb
test
paddusb
(bad)
(bad)
pop
push
call
xchg
das
test
retf
add
test
sbb
cmps
adc
xchg
int3
adc
pop
push
inc
retf
movs
jne
pop
inc
gs
adc
push
cmps
adc
push
push
and
int3
adc
call
jb
test
movs
jb
test
call
repnz
push
cld
gs
sub
out
adc
in
adc
inc
mov
cmc
out
adc
push
lahf
xchg
fist
jecxz
shl
push
adc
cmps
adc
das
jb
cdq
adc
dec
test
push
cwde
fistp
cmps
adc
jp
call
add
lods
jecxz
cdq
push
adc
mov
leave
adc
cmps
adc
push
adc
das
sbb
stc
test
out
scas
pop
cmp
add
jnp
add
adc
into
lock
sub
adc
push
adc
push
mov
cmc
out
repnz
push
push
call
pop
call
out
gs
stos
adc
jmp
call
outs
inc
sub
adc
xchg
pop
nop
jno
mov
call
adc
xchg
xor
pop
(bad)
dec
out
outs
cmps
adc
jecxz
pushf
pop
ror
cmp
xchg
test
retf
movs
fsubr
push
retf
adc
imul
gs
and
fs
jmp
cmps
adc
retf
push
adc
xchg
pop
cwde
inc
inc
jle
pop
out
mov
lock
adc
xchg
push
call
pop
call
adc
out
push
jmp
idiv
add
adc
push
adc
stos
adc
push
jnp
add
call
mov
push
dec
xchg
push
cli
and
cmc
retf
pop
call
adc
das
inc
inc
jb
test
call
pushf
fisttp
cmps
adc
xor
fcomp
cmps
inc
adc
cmps
adc
cmp
scas
adc
sbb
sub
add
push
pop
sbb
cmps
adc
push
add
sbb
call
adc
push
sub
imul
call
xchg
cmps
add
push
call
adc
lahf
jge
call
stc
movs
mov
adc
dec
in
gs
das
jmp
xacquire
call
stc
mov
scas
mov
pop
sbb
out
leave
addr16
pop
inc
fisttp
gs
dec
add
and
mov
pop
and
retf
jb
stos
adc
loope
icebp
addr16
pop
cmp
mov
out
gs
jbe
gs
lea
mov
inc
in
gs
lea
and
gs
xor
addr16
pop
sub
xchg
jnp
loope
cmc
addr16
pop
cmp
mov
out
cmp
out
mov
jle
gs
idiv
add
push
call
out
cmps
adc
push
ret
push
push
push
stos
mov
movs
fsubr
jns
sub
adc
sub
movs
fsubr
fs
cmp
jno
pop
dec
sbb
movs
fsubr
push
pop
out
adc
sub
out
ret
sbb
call
(bad)
cmp
push
call
push
call
adc
push
adc
(bad)
sbb
scas
stc
mov
adc
jo
adc
xchg
gs
clc
scas
ins
cmps
adc
das
mov
pop
xchg
pop
out
gs
jns
push
sub
push
loop
lahf
push
pop
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
jnp
xchg
rol
jb
stos
adc
xchg
pop
sub
push
mov
lahf
retf
call
push
call
adc
mov
and
adc
xchg
pop
out
call
adc
push
not
out
jle
gs
das
(bad)
sbb
jp
gs
cmps
xchg
aas
mov
gs
xchg
inc
xchg
pop
out
retf
sbb
jb
pop
out
sbb
dec
dec
pushf
push
cwde
bound
cwde
pop
add
call
out
retf
stc
pop
sub
adc
xlat
cmps
out
gs
cmps
fs
add
leave
fsubr
adc
lods
adc
sub
adc
mov
and
popa
fwait
pop
imul
loop
in
xchg
pop
xlat
pop
pushf
pop
out
gs
sub
fsubp
adc
push
jns
push
adc
out
cmps
out
gs
imul
scas
out
pop
push
call
pushf
fwait
xchg
pop
out
sbb
cmps
adc
xchg
and
jnp
add
lock
mov
sbb
xchg
and
out
call
adc
pop
jle
call
adc
and
nop
push
clc
std
outs
cmps
adc
in
fwait
adc
sbb
jecxz
pushf
pop
imul
cmp
xchg
outs
xchg
pop
out
retf
leave
fsubr
xchg
outs
xchg
pop
out
retf
sbb
mov
pop
adc
xchg
pop
out
retf
or
jbe
cmps
adc
xlat
cmps
out
gs
cmps
fs
add
adc
lods
adc
sub
adc
mov
adc
pop
xchg
push
xchg
out
cmps
imul
out
dec
int3
adc
push
test
jnp
add
jmp
adc
scas
adc
push
xchg
call
push
sub
cmps
out
gs
sub
lahf
imul
push
xchg
ins
sahf
push
lahf
outs
mov
add
fsubr
adc
scas
adc
sub
adc
mov
adc
pop
adc
out
cmps
out
gs
call
xchg
das
(bad)
pop
out
cmps
out
gs
neg
cmp
cmp
sub
out
cmp
xchg
push
xchg
pop
jp
out
call
out
cmp
sbb
in
jb
scas
adc
xchg
pop
adc
dec
int3
adc
push
(bad)
dec
sub
sbb
retf
in
jb
scas
adc
push
(bad)
xchg
add
out
gs
neg
cmp
cmp
sub
out
cmp
xchg
push
xchg
pop
jp
out
call
out
cmp
mov
out
jb
scas
adc
xchg
pop
adc
dec
int3
adc
push
mov
call
and
cmc
out
jb
scas
adc
push
jmp
pop
out
cmps
out
gs
neg
cmp
mov
sub
out
cmp
nop
push
xchg
pop
jp
out
call
out
cmp
mov
out
jb
scas
adc
xchg
pop
adc
dec
int3
adc
push
jp
sub
sbb
cmc
out
jb
scas
adc
push
pushf
fwait
xchg
pop
out
sbb
cmps
adc
xchg
and
jnp
add
adc
push
je
push
out
scas
inc
cmp
xor
push
xlat
pop
xchg
pop
out
gs
sub
fsub
out
fs
pop
fwait
push
outs
cmps
out
gs
call
dec
int3
adc
push
cmp
call
and
cmc
out
jb
mov
adc
xchg
pop
out
fwait
loopne
out
fs
pop
sub
bound
cwde
pop
out
adc
pop
inc
pop
out
push
in
gs
idiv
mov
adc
out
push
in
gs
idiv
inc
arpl
jns
push
adc
out
cmps
out
gs
imul
scas
dec
cmp
and
call
out
call
jns
mov
dec
mov
scas
dec
cmp
cmp
call
xlat
pop
xchg
pop
out
gs
sub
fsub
out
fs
pop
fwait
push
outs
cmps
out
gs
call
dec
int3
adc
push
dec
jnp
or
call
adc
mov
adc
xchg
pop
out
fwait
out
adc
pop
xchg
push
xchg
out
cmps
imul
fs
pop
out
mov
xchg
xchg
jmp
fwait
xchg
pop
out
retf
in
xchg
pop
inc
repnz
jle
call
inc
jb
scas
adc
aam
adc
sbb
loope
stc
addr16
pop
cwde
pop
add
jnp
add
push
repnz
push
call
xchg
outs
xchg
pop
out
lock
pop
movs
outs
xchg
pop
out
jb
mov
popa
sub
sbb
repz
sbb
cmps
adc
xchg
das
shl
push
test
pop
out
enter
add
cmps
out
das
sahf
pop
out
cmp
int3
adc
out
push
in
gs
idiv
add
fsubr
movs
outs
xchg
pop
out
jb
mov
in
xchg
pop
xchg
push
xchg
out
cmps
imul
setp
gs
pushf
pop
lahf
pop
out
cmp
outs
xchg
pop
out
jb
mov
pushf
pop
call
repnz
fs
pop
stc
loop
cmps
adc
push
out
gs
dec
add
cs
push
call
adc
push
adc
repnz
adc
add
test
push
cwde
pop
sahf
pop
out
gs
out
jecxz
cmc
addr16
pop
call
popa
jnp
add
in
xchg
pop
stc
outs
cmps
adc
addr16
push
fldenv
es
adc
push
in
gs
hlt
inc
repnz
add
call
stc
outs
outs
cmps
adc
push
xchg
push
pop
out
retf
jns
mov
push
out
gs
dec
enter
out
das
sahf
pop
out
gs
call
adc
xchg
(bad)
int3
adc
sub
adc
cmp
push
call
xchg
push
xchg
pop
xchg
pop
jb
adc
pop
scas
mov
push
les
jb
adc
das
xchg
jp
pop
out
adc
mov
out
jp
fs
xchg
rcr
jb
mov
dec
push
test
adc
jecxz
xchg
jbe
cmc
inc
int
rcr
and
jecxz
adc
popa
call
cmps
push
pop
mov
fild
xchg
gs
call
push
call
push
call
jmp
(bad)
popa
sub
pop
lods
out
scas
jmp
call
adc
popa
pop
and
cmc
out
jb
mov
cmp
xchg
xchg
xchg
or
(bad)
outs
cmps
adc
xchg
push
not
das
push
cwde
pop
push
xchg
or
xchg
xchg
xchg
cmp
outs
cmps
adc
push
sbb
xchg
sahf
push
sub
pop
mov
cmps
sbb
push
call
mov
push
add
dec
cmp
pop
mov
push
call
mov
push
in
push
cli
xchg
jecxz
out
jecxz
loope
lods
xchg
retf
dec
mov
push
pop
adc
test
push
and
retf
in
out
ins
sub
adc
push
pop
adc
mov
push
(bad)
push
jne
adc
push
pop
adc
sbb
cmc
out
out
ins
sub
adc
push
pop
adc
mov
push
and
retf
in
out
ins
sub
adc
pop
mov
out
jp
fs
cmp
stc
out
outs
cmps
adc
daa
(bad)
pushf
jo
adc
xor
fcomp
cmps
adc
scas
loop
push
sbb
push
sbb
push
sbb
push
sbb
push
sbb
push
sbb
push
sbb
push
sbb
sbb
call
fs
sub
stc
retf
adc
scas
scas
cwde
fist
das
(bad)
fld
xchg
cmp
xchg
bound
loop
imul
and
scas
shr
outs
and
jnp
and
push
adc
add
out
gs
dec
adc
jp
adc
outs
sub
cmps
adc
or
adc
sbb
stos
pop
out
gs
pop
xchg
pusha
cwde
or
inc
out
out
adc
sbb
loope
xor
sbb
outs
sbb
dec
out
fsubr
sbb
push
sbb
push
sbb
push
sbb
push
sbb
push
sbb
push
sbb
push
sbb
push
sbb
push
sbb
push
sbb
push
sbb
push
sbb
push
sbb
push
sbb
push
sbb
push
sbb
push
sbb
push
sbb
push
sbb
push
sbb
push
sbb
push
sbb
push
sbb
push
sbb
push
sbb
push
sbb
push
sbb
push
sbb
push
sbb
push
sbb
push
sbb
push
sbb
push
sbb
push
sbb
push
sbb
push
sbb
push
sbb
push
sbb
push
sbb
push
sbb
push
sbb
push
sbb
push
sbb
push
sbb
push
sbb
push
sbb
push
sbb
push
sbb
push
sbb
push
sbb
push
sbb
push
sbb
push
sbb
push
sbb
push
sbb
push
sbb
push
sbb
push
sbb
push
sbb
push
sbb
push
sbb
push
sbb
push
sbb
push
sbb
push
sbb
push
sbb
push
sbb
push
sbb
push
sbb
push
sbb
push
sbb
push
sbb
push
sbb
push
sbb
push
sbb
push
sbb
push
sbb
push
sbb
push
sbb
push
sbb
push
sbb
push
sbb
push
sbb
push
sbb
push
sbb
push
sbb
push
sbb
push
sbb
push
sbb
push
sbb
push
sbb
push
sbb
push
sbb
push
sbb
push
sbb
push
sbb
push
sbb
push
sbb
push
sbb
push
sbb
push
sbb
push
sbb
push
.byte
.byte
push
.byte
