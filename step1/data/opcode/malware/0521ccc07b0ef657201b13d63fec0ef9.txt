outs
outs
(bad)
call
in
sub
mov
mov
or
adc
mov
(bad)
jbe
in
mov
pop
ret
int3
add
pop
sub
pop
push
push
mov
pushf
adc
push
push
mov
jo
dec
add
lds
sahf
mov
outs
in
cld
fucomip
out
push
retf
inc
mov
sub
or
or
enter
inc
out
movzx
test
je
sub
or
sbb
fwait
in
dec
in
test
cld
in
jns
add
in
test
or
mov
inc
mov
and
jmp
add
inc
add
mov
inc
jmp
adc
pusha
xor
pop
pop
pop
inc
xchg
or
lds
jl
sub
mov
mov
call
dec
fsub
in
mov
fist
jne
push
mov
aas
sbb
cli
or
stc
mov
imul
push
rcl
ins
sub
loop
int3
push
dec
ins
jne
sti
mov
push
push
xor
or
fcom
or
mov
add
cdq
jnp
inc
or
adc
xor
add
adc
ret
jg
sub
bound
(bad)
in
cwde
mov
in
inc
mov
xchg
lock
lea
mov
push
movs
fsincos
arpl
mov
(bad)
fs
test
(bad)
add
mov
(bad)
and
ds
xchg
shr
inc
mov
jns
int3
mov
fwait
adc
mov
push
loop
xchg
jnp
sar
adc
pushf
call
xchg
cmps
rol
adc
mov
leave
xchg
dec
rol
ret
xchg
or
add
iret
test
or
in
jb
and
adc
in
inc
call
jns
adc
in
sar
jmp
adc
xchg
xchg
out
lods
jmp
adc
ret
pop
xchg
cld
out
das
iret
mov
rol
arpl
in
pop
jg
inc
push
jno
mov
mov
sbb
pmaxub
or
ja
pop
cmp
jge
sub
movs
jp
lods
pushf
je
xor
add
jmp
iret
push
jbe
xchg
fadd
adc
cmp
jbe
jae
xlat
jmp
ret
enter
mov
push
jmp
test
movs
cmp
pusha
dec
scas
(bad)
int3
int3
popf
scas
dec
xor
sbb
xor
jnp
call
sti
aam
es
or
aam
jo
aad
(bad)
std
and
push
lea
pop
mul
xor
std
adc
xchg
add
loopne
push
cmc
pop
add
sub
cmp
lahf
mov
ja
mov
xchg
jl
sub
dec
and
movs
dec
mov
in
xchg
lods
push
pushf
add
add
cmp
push
push
mov
or
pop
cmp
and
mov
add
dec
dec
dec
adc
sub
push
jg
cmps
xlat
jnp
fcomp
int
sub
clc
pop
sub
lahf
and
inc
cmp
and
pop
sub
adc
mov
inc
cmp
std
(bad)
fdiv
in
xor
or
sbb
sub
ss
stos
add
or
fnsave
or
adc
sbb
sbb
enter
xor
pop
popa
adc
mov
stos
adc
rcr
fdivr
cli
or
dec
push
mov
data16
cli
loopne
mov
je
push
cmp
fsubr
in
mov
dec
fmul
dec
call
push
fld
jns
loopne
mov
push
lods
test
or
push
iret
dec
inc
call
sub
add
shr
jmp
test
enter
add
sbb
adc
push
inc
push
out
xchg
adc
cmps
pusha
adc
mov
lock
inc
out
pusha
outs
iret
subps
inc
loopne
dec
mov
out
jae
loopne
sbb
add
jmp
sbb
xchg
pop
and
push
fsub
xor
retf
pop
jmp
xor
and
push
add
sub
jmp
sbb
jg
in
inc
repnz
mov
add
ror
push
in
push
push
xchg
fnstcw
adc
lea
jnp
adc
std
sub
add
cmp
dec
push
dec
push
(bad)
dec
cmp
js
shl
and
das
ins
out
imul
in
sub
test
int3
clc
inc
dec
sbb
nop
add
fwait
lea
mov
add
push
mul
int
cmp
test
cmp
test
mov
int3
sbb
out
pop
xchg
jmp
mov
aas
ins
pop
dec
dec
jmp
ins
cwde
inc
ins
inc
adc
jmp
lods
mov
or
in
xchg
sbb
sbb
cmps
outs
int3
jg
mov
inc
xor
sbb
jnp
mov
lock
push
pop
or
and
call
test
out
jmp
sahf
in
add
aam
pusha
fsubr
test
shr
jns
adc
cmp
inc
mov
mov
repnz
or
call
sbb
sar
and
cmps
shl
sbb
push
mov
das
ror
pushf
or
or
ss
mov
repnz
add
test
in
sti
cs
push
mov
lea
gs
ficomp
outs
sbb
jl
aas
adc
sbb
dec
int3
sub
mov
adc
mov
sti
or
or
cmc
jae
ficomp
add
cmps
xchg
in
add
cld
mov
les
mov
shl
push
mov
test
(bad)
push
cmp
mov
out
(bad)
icebp
lock
hlt
les
adc
or
adc
rol
push
or
jge
test
jne
inc
push
lock
push
out
xchg
mov
push
push
lock
push
pop
leave
mov
jne
in
lods
mov
add
mov
in
hlt
scas
les
push
add
dec
or
clc
loopne
inc
js
jns
sbb
mov
sti
add
xor
add
cmp
pop
sbb
mov
lock
rcr
jg
mov
clc
mov
fld
rdtsc
cmp
or
mov
mov
clc
fs
rol
mov
add
push
mov
ins
dec
mov
int
sbb
mov
mov
adc
cmp
(bad)
cld
jbe
sbb
cmp
jne
push
sar
sbb
push
mov
mov
cmps
or
add
and
loopne
pop
not
cmp
sbb
cmp
cmp
cs
adc
or
dec
into
jno
adc
iret
ds
adc
clc
(bad)
fisttp
sub
lea
das
dec
cmp
test
cmp
push
push
and
jnp
mov
cwde
je
inc
ficom
sub
pop
add
adc
in
push
jg
in
push
or
xlat
lock
in
fcomp
enter
push
(bad)
push
movs
or
aam
cmp
lahf
or
inc
push
mov
hlt
mov
adc
inc
mov
in
and
pushf
xchg
inc
cs
and
cld
cld
mov
shl
movs
in
arpl
mov
add
int
cld
sbb
in
xchg
clc
clc
clc
xchg
(bad)
js
cmp
test
in
les
inc
mov
mov
and
inc
rcl
xor
jo
or
sub
push
ret
pop
les
jl
mov
lods
enter
popa
pop
int3
push
mov
movs
inc
ins
int3
test
int3
mov
cmps
add
jg
ss
jle
add
xlat
sub
inc
sar
push
imul
in
adc
cmp
or
mov
shr
in
add
cmp
(bad)
add
ud0
das
ret
push
sbb
pop
adc
in
add
call
mov
add
push
clc
dec
dec
jle
push
lods
and
lock
xchg
in
movs
daa
fs
jne
push
mov
clc
inc
or
sar
fistp
rol
mov
(bad)
mov
call
xchg
jmp
pusha
icebp
test
cld
idiv
pop
shl
or
in
(bad)
and
test
push
xchg
scas
std
add
and
nop
sar
lods
push
fucompp
fcomi
lods
rcr
outs
(bad)
sbb
fcmovbe
pop
jne
repnz
ins
std
mov
push
jle
xchg
mov
ret
push
iret
dec
sub
mov
inc
mov
and
mov
mov
call
mov
mov
adc
dec
adc
xchg
sub
add
inc
movs
mov
int3
adc
addr16
inc
sub
mov
addr16
in
inc
pop
lods
push
sbb
ja
fiadd
xor
sub
or
test
test
xchg
push
pushf
push
or
jle
icebp
cmp
mov
mov
and
mov
enter
push
sub
adc
push
pusha
sub
sbb
les
adc
in
lock
dec
inc
push
cmp
push
add
clc
hlt
xchg
daa
lock
xchg
lock
(bad)
aad
jp
(bad)
dec
pop
mov
test
mov
push
lock
hlt
je
cli
push
mov
xor
push
xor
xchg
addr16
fucomi
or
je
xor
je
ds
push
pop
cmp
and
lods
(bad)
rol
adc
dec
xor
in
xchg
mov
sbb
adc
adc
daa
pop
jno
mov
cld
cmp
add
inc
adc
icebp
or
sub
rol
push
xchg
jne
aas
sbb
or
pop
rcl
pop
mov
outs
lock
mov
in
ds
fwait
shr
dec
cmp
sbb
out
sbb
and
inc
add
add
in
dec
cld
popf
std
(bad)
cmp
sub
adc
dec
adc
push
jmp
jb
les
sub
lods
sub
lock
mov
dec
cwde
mov
rol
fisttp
ins
in
sub
es
fsubr
push
jl
pop
loop
or
adc
test
fucomip
adc
or
jns
add
aas
add
shl
loopne
loopne
pop
aas
push
fninit
or
adc
adc
and
pcmpgtb
gs
and
push
daa
cmp
loope
je
aam
int3
push
bound
xor
mov
cmp
enter
repz
sub
pop
pushf
arpl
or
popa
sub
xor
mov
cmp
jae
pop
es
cmp
ficomp
daa
or
cmp
mov
cmp
ins
cmp
jae
cmc
pop
mov
mov
pop
dec
mov
not
or
sub
movs
lea
loopne
mov
lahf
or
in
jne
inc
add
or
push
inc
stc
(bad)
shr
cmp
jae
loopne
ins
and
sub
inc
loopne
pop
jbe
mov
sub
sub
pop
jae
inc
lock
popa
push
lea
cmp
(bad)
iret
push
xor
push
add
jo
mov
(bad)
in
mov
das
call
movs
adc
or
mov
jne
fdiv
or
push
push
pop
xor
nop
sbb
outs
das
or
arpl
loop
or
xchg
fdiv
dec
clc
test
sbb
bound
pop
jae
cmp
add
mov
fiadd
xor
les
sti
mov
fs
daa
mov
pop
fimul
sbb
ret
(bad)
or
add
xchg
imul
(bad)
mov
push
jno
dec
cmp
jmp
out
mov
test
ficom
clc
or
pop
aad
mov
shl
mov
xchg
mov
rcl
sbb
je
out
in
jne
dec
das
stos
or
ret
(bad)
jmp
jmp
push
pushf
jecxz
lock
loope
adc
ret
jmp
stos
call
call
out
xor
cdq
dec
sbb
fbld
push
xchg
popa
shl
arpl
jl
sbb
test
ja
push
jmp
pop
mov
cmp
and
or
sub
aas
pop
inc
or
xor
push
xlat
sbb
je
xchg
xchg
sub
adc
jne
cmps
cmps
mov
sti
test
cdq
out
mov
pop
pop
or
push
adc
dec
add
xchg
in
xlat
push
pushf
mov
gs
cs
sbb
or
fstp
adc
xor
adc
jl
jle
jg
push
or
mov
cmps
mov
adc
je
and
loop
imul
dec
imul
push
sbb
das
dec
mov
inc
and
clc
sub
jmp
mov
inc
fs
dec
adc
pushf
and
out
add
lods
sbb
sub
add
dec
fidiv
lock
test
pop
jg
aaa
int
in
ins
jb
gs
dec
enter
(bad)
cmp
lock
lock
inc
cmps
in
mov
popa
sub
dec
mov
pop
jmp
xchg
push
int
sub
imul
mov
or
push
push
jns
sbb
push
ret
dec
lods
fidivr
sar
cmp
das
jle
and
pop
jne
sub
and
adc
enter
mov
clc
int
jb
int
in
lock
xor
xor
lock
in
and
clc
and
shl
hlt
clc
mov
int3
xor
rcr
hlt
mov
call
call
hlt
js
cwde
movs
clc
adc
cdq
push
cmp
dec
lods
mov
rcl
sub
add
mov
cmp
shr
jo
test
stc
test
imul
ins
pop
popf
mov
dec
call
dec
push
cmp
mov
popf
daa
bound
inc
cmp
arpl
push
fcomp
jae
addr16
xchg
nop
lahf
and
xor
and
adc
cdq
lahf
xor
cmp
sub
sbb
push
fild
add
xchg
aas
data16
les
add
call
push
or
adc
inc
sub
add
aaa
push
or
mov
test
and
xchg
dec
or
or
dec
add
aas
xor
or
add
jo
adc
sub
push
mov
pop
inc
mov
inc
and
sbb
daa
adc
and
or
mov
out
sub
enter
adc
mov
dec
repnz
mov
and
dec
mov
je
sbb
mov
sbb
and
scas
adc
in
adc
test
retf
push
jne
jb
push
pop
mov
fld
lock
or
pop
js
jmp
cmp
es
mov
imul
es
sub
xchg
mov
lods
lods
test
sub
or
out
(bad)
mov
push
mov
dec
mov
lds
int3
push
xchg
(bad)
lods
lods
xor
sub
adc
sbb
xor
and
in
cdq
inc
pop
movs
or
and
cmp
or
loop
aas
bound
cmp
shr
dec
pop
pop
int3
movs
jo
aaa
test
and
push
cmp
push
into
sub
sbb
jne
add
sub
mov
xor
or
pushf
shl
jmp
jne
adc
lods
dec
(bad)
rcl
in
clc
xchg
mov
jne
push
xor
xor
in
in
popf
in
dec
dec
loope
ror
test
cwde
fadd
clc
jp
fxtract
sub
cmp
adc
pusha
movs
push
or
xor
adc
and
aad
(bad)
push
adc
mov
and
jmp
and
pop
sbb
xchg
push
scas
sti
add
fidivr
lods
ror
sbb
jbe
sbb
(bad)
add
mov
fild
push
inc
shr
jp
enter
ret
and
dec
jmp
(bad)
jmp
dec
adc
dec
or
or
mov
push
imul
pop
xchg
push
dec
mov
mov
loopne
cdq
sub
xchg
call
adc
pop
dec
es
mov
add
jb
sub
stos
or
jo
jb
in
aaa
push
pop
pop
cmp
pop
or
mov
adc
add
push
pop
xor
push
or
and
jmp
dec
jle
data16
loopne
adc
pop
sbb
nop
or
nop
stos
fs
sbb
je
inc
inc
inc
pusha
test
adc
pop
sub
in
and
fdiv
pop
xchg
cmp
stc
lock
add
add
or
mov
clc
lea
das
ror
mov
hlt
pushf
jecxz
pop
imul
xor
inc
pop
lea
push
je
call
fld
cmp
and
mov
(bad)
mov
in
or
cld
mov
sub
lds
in
add
jge
jne
loope
je
xchg
mov
adc
pop
mov
mov
fbld
fld
scas
adc
mov
(bad)
nop
cmp
lds
inc
inc
stos
pop
xor
shl
gs
adc
and
push
inc
in
inc
enter
xchg
lahf
pop
shl
push
retf
gs
outs
pop
xor
ins
stos
sbb
mov
jnp
push
outs
cmp
sub
fist
jae
and
sbb
cmp
add
dec
(bad)
cld
jp
pop
pop
cmp
xor
pop
out
sub
mov
and
inc
inc
outs
in
pop
xlat
dec
icebp
dec
cs
cwde
bnd
rol
adc
sbb
xchg
retf
in
and
sub
sbb
lods
loope
push
sub
pop
cdq
(bad)
aas
lods
fimul
fisttp
test
cmp
aaa
out
mov
add
sub
mov
in
scas
jo
and
adc
aas
cmp
xor
dec
int3
add
fdiv
xor
and
movs
shl
push
push
movs
add
mov
jae
inc
adc
std
mov
cwde
call
mov
mov
sub
sbb
pop
(bad)
enter
xorps
dec
xor
lock
mov
pop
enter
cmp
mov
sbb
jne
pusha
aaa
mov
xchg
loopne
shl
mov
inc
cmp
mov
and
adc
pop
ror
ficom
dec
aam
add
sbb
dec
inc
sub
aam
fsub
lea
imul
or
push
or
push
mov
inc
mov
mov
or
les
call
out
scas
or
dec
mov
out
das
and
cmp
mov
add
fwait
push
shl
test
int
shl
inc
dec
pusha
or
pop
iret
add
repz
pushf
fimul
pushf
cmp
rol
cmp
test
aad
cld
and
in
lds
jmp
inc
loope
(bad)
add
pop
lods
mov
outs
aad
add
and
inc
push
adc
pop
push
jp
nop
test
cmp
sbb
pop
cmp
mov
or
lods
call
cmp
dec
cmp
sub
and
shr
rcl
or
shl
rol
sub
pop
aaa
mov
sbb
mov
je
jmp
aaa
jmp
xor
mov
xor
dec
gs
int3
test
add
adc
jmp
in
jge
xlat
push
mov
in
call
jo
shl
mov
mov
out
sub
faddp
inc
enter
add
jae
push
fwait
mov
pushf
pushf
enter
daa
ror
adc
and
and
push
push
pop
sbb
and
ficomp
pop
xor
lahf
cld
loope
in
cdq
cld
and
sub
(bad)
xor
retf
cmp
int3
in
mov
sub
or
loope
rcr
fistp
pop
cdq
mov
jne
ja
adc
push
add
add
xor
jne
jp
(bad)
lods
and
call
neg
iret
hlt
addr16
hlt
pop
mov
in
push
fdiv
cli
adc
adc
xor
and
ins
ret
in
add
xor
enter
push
jo
jno
js
or
push
and
pushf
cmp
adc
and
jp
xchg
mov
or
inc
cmp
in
adc
xor
cmps
jle
cmp
pop
cmp
sbb
clc
jge
inc
in
rcl
xchg
jbe
jne
and
xchg
test
push
fnstsw
out
mov
mov
and
mov
pop
and
call
mov
xchg
or
lahf
jne
mov
lods
into
inc
inc
and
ror
lea
fist
call
push
adc
inc
jp
sbb
cmp
jmp
lds
or
sbb
sub
push
or
and
test
bound
jmp
and
ss
sub
add
bound
push
jae
das
mov
sbb
in
scas
mov
push
add
popfw
addr16
add
popa
int3
xor
push
inc
dec
rcr
pop
ret
lods
sub
mov
mov
push
sub
data16
jg
xor
aas
inc
add
jo
mov
sub
inc
test
pop
mov
pop
(bad)
pop
pop
or
mov
ficomp
repnz
cdq
inc
or
sub
pushf
inc
mov
xor
stos
push
jno
es
sbb
aam
ds
add
sbb
add
mov
push
movs
addr16
push
sub
cmps
jp
push
sub
adc
ss
int
jl
or
sbb
(bad)
mov
adc
or
fist
add
adc
call
sbb
retf
jmp
les
jmp
dec
fld
cmp
add
or
adc
push
dec
pushf
aas
js
loopne
loope
pop
and
pusha
xor
and
push
adc
out
(bad)
jl
adc
inc
push
pop
adc
or
and
stos
mov
movs
or
mov
mov
xchg
and
xchg
adc
or
and
dec
dec
and
pmulhw
out
cmp
adc
sub
sbb
aas
mov
fld
add
loope
pop
es
mov
mov
(bad)
fiadd
pop
mov
dec
pop
cs
neg
cmp
mov
sbb
add
cmc
xor
push
xor
push
adc
or
jge
inc
jno
test
and
daa
dec
cwde
jmp
test
jp
and
adc
xchg
mov
imul
daa
mov
sub
add
ficom
test
not
push
mov
pop
sbb
mov
ins
cli
push
and
xchg
xchg
and
sub
jg
fcom
mov
pusha
loop
xchg
inc
xor
push
push
and
dec
lahf
pop
add
and
sbb
pop
enter
hlt
lods
add
and
aas
fdiv
sbb
ror
jl
add
nop
add
mov
lock
repnz
hlt
jle
imul
sbb
mov
mov
cld
scas
sub
or
shr
ret
ins
mov
adc
test
push
or
inc
adc
sub
nop
adc
xor
sbb
call
or
out
pop
push
cmovne
or
mov
js
adc
mov
jge
adc
inc
(bad)
jne
dec
add
sbb
lods
(bad)
mov
stos
pop
dec
daa
(bad)
clc
inc
mov
or
dec
sbb
push
dec
pop
adc
call
mov
mov
mov
mov
xchg
mov
(bad)
xor
(bad)
cmp
mov
pop
cmp
adc
cmovns
popa
sub
dec
xchg
mov
call
sub
enter
fdiv
aad
aam
inc
xchg
call
and
ret
lahf
inc
popf
add
mov
pop
inc
mov
(bad)
adc
pop
inc
cld
xchg
lods
dec
sub
mov
sub
xor
(bad)
fld
sub
sbb
out
cmp
mov
test
sbb
pop
mov
push
and
inc
or
adc
mov
and
cmp
ret
add
sbb
call
xchg
sub
and
adc
adc
add
cmp
push
dec
sbb
retf
call
or
cmp
and
mov
push
pop
rcl
pop
or
int3
popf
sar
cmp
jne
mov
xchg
jge
and
sbb
push
fdiv
lock
or
frstor
sti
pop
ss
pop
(bad)
mov
push
or
adc
dec
mov
or
cmp
add
push
jne
cmp
adc
pop
fwait
add
jmp
or
jnp
ror
push
not
adc
bound
push
dec
adc
fbstp
sub
xor
jmp
scas
aas
mov
stos
dec
dec
test
lds
aas
ins
mov
xchg
jg
fsub
add
or
ins
loope
add
inc
aas
dec
pushf
mov
dec
xchg
pop
jl
dec
stc
fs
out
cmp
or
pop
inc
mov
ffreep
mov
jg
pop
mov
push
pushf
sbb
jge
ja
mov
pop
rol
pusha
arpl
pop
adc
stos
xchg
addr16
in
sbb
or
sbb
adc
xchg
ins
mov
jmp
jns
dec
mov
pop
movs
push
shl
sbb
lahf
fbld
inc
pop
sbb
jmp
inc
or
fisub
adc
mov
mov
ins
push
sub
and
addr16
dec
loop
call
jae
ret
push
hlt
lods
adc
jns
in
or
cmp
push
clc
pop
mov
pushf
into
fwait
lahf
in
cdq
xor
int3
ret
inc
gs
cwde
push
test
push
ret
neg
inc
test
or
mov
call
push
fucom
in
sbb
jl
cmp
sbb
jge
loop
fbstp
leave
scas
mov
inc
push
xchg
mov
cmp
jno
cmp
lea
xor
mov
mov
push
inc
dec
ret
inc
or
mov
add
pusha
sbb
or
adc
and
and
and
shl
fild
sbb
xchg
mov
dec
dec
dec
dec
or
mov
ror
mov
mov
add
pop
pop
cmp
js
inc
xor
add
lods
lds
pop
fisttp
jmp
or
dec
jl
imul
mov
mov
mov
cmps
or
dec
mov
xor
sbb
pop
dec
fs
dec
mov
adc
inc
es
or
cmp
jecxz
fbstp
inc
and
inc
cwde
push
mov
cmp
sbb
je
adc
add
lea
addr16
call
dec
cmp
loopne
adc
push
std
lea
loop
push
mov
and
into
stos
pushf
sub
add
arpl
scas
inc
mov
sti
mov
sbb
and
mov
daa
dec
pop
push
arpl
mov
sub
in
dec
icebp
rcr
je
dec
cmp
cdq
and
loopne
test
in
and
add
outs
stc
pop
das
cmc
dec
mov
xor
ds
dec
jmp
nop
(bad)
mov
dec
push
push
jmp
loope
in
rcr
or
inc
cmp
dec
movs
loopne
push
push
xor
cmps
cld
sbb
(bad)
xor
pop
ins
sub
adc
fmul
sbb
andps
imul
push
pop
dec
outs
or
pop
xlat
call
retf
pop
pop
call
xor
or
inc
pop
jmp
mov
cmp
jb
cmp
cmp
add
adc
lea
imul
dec
fidivr
call
push
cmp
loopne
mov
xor
loopne
in
rcl
(bad)
xlat
movaps
inc
push
mov
lea
cs
push
pop
sbb
ffreep
and
xor
and
mov
dec
add
xchg
stc
pop
call
cwde
lods
mov
pop
xor
pop
pop
or
in
mov
and
and
mov
test
pop
cwde
add
cwde
or
mov
pop
push
or
pop
aam
fbld
jg
mov
int3
pushf
pop
jg
cmp
les
in
mov
pop
jg
bound
fistp
dec
mov
lahf
aam
repz
ret
add
repnz
stos
and
fst
(bad)
les
xchg
inc
aaa
mov
jecxz
xor
add
test
lock
retf
cld
addr16
jmp
(bad)
or
push
ins
lds
add
popf
cdq
fcomp
push
sub
push
pushf
popa
mov
das
and
out
movs
bound
push
and
push
xor
add
adc
or
test
and
lock
cmp
aam
dec
add
and
add
pop
mov
ins
jnp
or
sub
in
mov
jle
jg
pop
pushf
push
mov
sbb
pop
jg
ins
push
xor
lahf
xchg
pop
jns
lahf
pop
mov
in
cmp
in
cmp
or
add
push
mov
mov
ret
ficomp
pop
fist
dec
aaa
push
ds
mov
pop
cmp
pop
mov
mov
push
dec
or
dec
adc
cwde
rol
fcmovne
(bad)
xor
mov
push
adc
dec
pop
dec
push
sub
hlt
push
sbb
cmps
xchg
push
pop
push
push
mov
cmp
sbb
addr16
jb
xchg
add
push
in
push
xchg
das
mov
mov
mov
push
or
push
mov
push
test
popa
xor
inc
call
retf
xor
sbb
mov
fistp
mov
add
sbb
icebp
or
and
pushf
or
mov
cmp
add
mov
movs
jp
or
xchg
mov
shr
mov
pop
and
mov
nop
aas
mov
leave
xchg
cld
or
xlat
jle
fucomip
sbb
leave
push
pop
or
or
pop
or
pop
adc
out
add
mov
sub
and
push
or
add
enter
cmps
fstp
mov
(bad)
or
jmp
cmp
imul
mov
lock
stos
push
lock
jns
add
(bad)
pop
sub
push
stos
cmp
jmp
xor
or
xor
xor
fcos
push
lods
add
sbb
je
out
sub
scas
sbb
mov
pop
lahf
sbb
adc
adc
call
mov
and
ret
aas
sbb
aas
sbb
cmp
sbb
xchg
mov
lds
loop
sub
adc
jne
test
mov
lods
dec
or
fld
pop
mov
jmp
in
jge
and
adc
xchg
shl
arpl
dec
push
repz
aam
cli
jl
jg
sbb
or
hlt
jg
lock
xor
arpl
jl
int3
addr16
int
add
push
add
adc
ficom
mov
xchg
jmp
jo
dec
adc
dec
loope
push
data16
ror
sub
dec
in
in
sbb
loopne
das
in
clc
loopne
jmp
jmp
xor
test
add
inc
cld
adc
fild
or
adc
jmp
jb
(bad)
cmp
rol
and
leave
and
and
xchg
pop
xor
and
add
and
dec
je
dec
cmp
xlat
pop
rcr
or
dec
inc
cmp
or
xchg
jo
add
jb
and
dec
in
lock
aam
jmp
shl
add
push
dec
in
leave
in
retf
in
lock
lock
dec
test
fwait
ins
mov
gs
aaa
lock
inc
hlt
xor
sub
cmp
stos
lock
retf
fsubr
adc
cmps
imul
xchg
xchg
push
popa
out
pop
xchg
sbb
lahf
stos
push
sub
jge
movs
mov
(bad)
jle
pop
imul
inc
aas
inc
or
add
icebp
jno
sub
adc
sbb
ja
adc
(bad)
xor
sbb
cld
inc
sbb
into
push
dec
aas
cmp
sbb
inc
lahf
je
icebp
add
cmp
cmp
adc
sar
adc
cmp
add
sar
mov
push
push
test
push
pcmpgtb
jg
and
xchg
xor
pop
or
aam
jb
sar
sbb
pop
gs
xor
scas
pop
idiv
enter
clc
mov
pop
xor
int
pop
hlt
cmp
data16
test
adc
jg
pop
call
call
mov
in
xchg
out
inc
repnz
dec
dec
pushfw
dec
cmp
(bad)
push
ds
pop
inc
hlt
xor
add
ror
leave
js
mov
jle
clc
data16
push
jbe
add
cmp
adc
and
add
mov
jo
dec
mov
adc
pop
add
(bad)
mov
sar
test
xchg
imul
mov
push
lds
es
add
scas
jg
addr16
push
rol
js
pop
mov
sub
lock
push
mov
sar
pop
(bad)
adc
adc
lahf
jo
add
sbb
sbb
jbe
or
pop
xchg
add
adc
xor
cs
dec
dec
cmps
jge
mov
push
inc
add
loope
mov
jmp
cmp
add
(bad)
imul
push
lock
cmp
mov
inc
mov
add
xor
push
jmp
in
push
mov
push
xor
aas
or
mov
sub
xchg
leave
jnp
or
push
jae
add
in
cmp
enter
fild
imul
adc
and
or
mov
jg
dec
fist
adc
retf
dec
lods
movs
jae
into
xor
retf
or
mov
jge
clc
xchg
inc
imul
jno
jg
xor
outs
mov
sbb
adc
push
xor
ins
sbb
pop
popf
(bad)
sub
xchg
addr16
mov
jmp
pop
inc
(bad)
and
imul
les
aas
ja
sbb
outs
push
inc
imul
mov
xlat
lods
(bad)
je
lds
pop
(bad)
arpl
jl
mov
inc
cmp
and
sub
jb
pop
pop
push
hlt
and
push
xor
pop
dec
mov
je
jne
push
call
adc
xor
gs
sub
and
adc
shl
or
sub
and
sbb
inc
xor
xor
add
sub
(bad)
sbb
xor
dec
lahf
jg
sub
loope
bound
rol
mov
pop
adc
inc
clc
adc
in
pop
adc
pushf
and
jecxz
fucompp
cs
jmp
stos
sbb
cwde
test
mov
or
outs
pushf
shl
(bad)
jo
push
add
cmps
imul
and
add
xchg
test
retf
mov
pop
into
add
and
push
loopne
shr
xchg
fcom
sub
add
je
lods
jae
nop
pop
pop
mov
xor
mov
xlat
jmp
add
test
push
or
test
ss
bound
(bad)
xor
dec
cmp
std
ret
ret
sbb
cdq
pusha
les
pop
fiadd
or
or
jno
dec
add
cmp
cmps
pop
rcl
in
jmp
in
jo
cld
jmp
adc
xor
mov
loop
icebp
out
dec
adc
jmp
popa
dec
push
lods
cmp
jb
ins
sub
adc
inc
and
call
call
ret
or
pop
sbb
fist
mov
xor
fsubr
(bad)
ror
jmp
dec
or
lods
sub
rcr
aam
dec
rol
ror
push
aam
push
int3
mov
sbb
jo
mov
(bad)
jbe
adc
(bad)
inc
popa
sbb
in
sub
das
(bad)
mov
and
in
in
popa
clc
xor
in
sbb
pop
mov
ret
or
cmp
in
aad
pushf
jae
mov
xchg
lahf
lahf
stos
push
xchg
lock
pop
mov
mov
sub
xor
lahf
int3
test
push
sbb
jb
les
mov
push
sar
and
je
and
sbb
(bad)
jnp
loope
and
pop
(bad)
push
xchg
fadd
jp
popa
push
sub
rol
jbe
ret
adc
adc
jmp
adc
jns
jb
aaa
jae
sub
dec
xor
jae
pop
loope
fld
inc
adc
or
adc
cmp
add
pop
or
add
jno
pop
jbe
sub
mov
jg
push
jb
daa
mov
jge
adc
add
mov
inc
sti
add
push
dec
xchg
xchg
dec
xor
lahf
jl
pop
mov
outs
pop
jmp
dec
or
popa
rol
and
or
add
(bad)
jl
and
and
stc
sub
and
pushf
sbb
push
arpl
pushf
and
ins
mov
lea
jmp
imul
xor
iret
fisttp
fcomp
inc
call
sub
loopne
fadd
xor
inc
sbb
push
jo
fild
sub
call
inc
popf
mov
mov
ret
pop
push
scas
fadd
jmp
lock
cmp
xchg
sub
pop
dec
call
jb
ss
mov
jo
jb
repnz
arpl
in
jae
enter
sbb
mov
rol
xchg
mov
sbb
sbb
mov
imul
sar
sub
(bad)
es
push
push
les
aam
fs
add
pop
sub
rcr
cmp
or
aam
ror
clc
mov
in
mov
mov
xchg
fstp
fadd
pusha
rol
xchg
shl
push
sub
in
std
adc
cmp
mov
ret
inc
loope
pushf
sub
je
or
adc
mov
push
rol
adc
push
jle
ins
sahf
or
cmp
jb
dec
add
xchg
out
dec
cmp
mov
inc
mov
mov
fdiv
xchg
fsubr
enter
nop
into
sar
add
dec
mov
jge
add
or
mov
fidiv
js
mov
jmp
mov
les
pushf
mov
icebp
lods
pop
repnz
add
inc
in
xchg
jnp
cmps
xor
in
cdq
idiv
and
mov
ret
call
inc
ss
jle
xor
in
add
mov
mov
adc
shl
daa
add
jno
mov
mov
mov
int3
xchg
pop
enter
imul
icebp
mov
shl
(bad)
inc
or
cmp
ds
cmp
inc
in
cs
jb
idiv
or
rcr
mov
ins
nop
dec
cli
mov
push
stos
cmp
push
dec
ss
lock
fs
dec
xchg
retf
rol
fadd
inc
or
ins
jecxz
call
jae
mov
mov
sbb
mov
mov
out
fstp
cmp
mov
inc
fcom
pop
xchg
and
adc
(bad)
pop
int
mov
mov
add
movs
loopne
fcomp
retf
jmp
xchg
movs
pop
cmp
bound
cmp
inc
call
les
ins
pop
xor
jp
test
jp
sbb
mov
mov
dec
sti
inc
fbld
int3
mov
in
mov
inc
stos
jb
out
mov
in
pop
outs
mov
fmul
cs
lock
rcr
sbb
(bad)
ins
cmp
(bad)
mov
dec
pop
fs
cmc
(bad)
or
or
lock
xor
jmp
jmp
ja
xchg
sbb
hlt
jg
clc
and
push
cmp
mov
cmp
jg
lahf
cmp
sub
mov
std
mov
ja
loopne
stos
cbw
fadd
(bad)
push
fstp
aam
jb
and
cmps
pushf
fild
lds
pop
popf
mov
inc
jg
(bad)
sbb
(bad)
in
ins
out
in
movs
jp
sub
cmp
mov
sub
cmp
fild
push
push
and
adc
xor
jmp
mov
sub
adc
loope
int3
mov
pushf
pop
mov
or
les
xor
loope
add
xchg
or
repnz
mov
add
pop
setb
mov
int
mov
shl
fdiv
push
push
or
mov
sbb
mov
mov
push
xchg
cmp
ret
jecxz
stos
jbe
mov
pushf
ja
jl
xor
fld
jnp
movs
int
and
ins
sub
pop
fdiv
ins
test
mov
stos
and
mov
adc
loope
test
(bad)
mov
cmp
and
mov
mov
sbb
lea
das
stos
mov
sahf
loopne
dec
gs
add
and
movs
adc
or
scas
pushf
popf
ins
mov
js
pusha
lock
sbb
fs
cdq
jbe
push
jmp
add
sar
das
ret
jbe
daa
cmp
add
lock
mov
das
mov
enter
xchg
lods
dec
aas
mov
xor
sub
or
inc
dec
lea
push
mov
ret
cmp
fwait
retf
jae
dec
nop
lea
loopne
cs
punpckhbw
cs
jb
push
rcl
lods
hlt
cwde
add
adc
sbb
pop
ins
sgdtd
push
shr
pushf
mov
enter
adc
aas
aas
mov
fcmovnbe
xor
lods
dec
jl
dec
or
dec
outs
iret
push
sub
mov
and
and
add
push
or
enter
ror
mov
mov
mov
lock
inc
jb
repnz
or
push
popf
or
xchg
(bad)
and
sub
retf
retf
test
test
fmul
and
or
dec
jl
inc
sbb
cwde
mov
in
pop
ss
push
add
or
or
cmp
jo
push
mov
sahf
shl
lea
add
inc
jo
push
inc
mov
mov
ins
xor
fcomp
jp
mov
in
test
movs
and
add
mov
lods
hlt
fistp
xchg
out
adc
inc
cmp
rcr
loop
les
mov
gs
mov
dec
mov
sbb
sub
mov
dec
or
xchg
mov
xchg
lock
aaa
lahf
dec
ret
jo
in
adc
aas
push
sbb
jo
ret
mov
lea
xchg
cmps
adc
fcom
jae
adc
pcmpgtb
jl
adc
cmp
aaa
scas
nop
outs
pusha
push
daa
pop
xor
ror
jl
ret
gs
fsubr
inc
in
pusha
mov
cmps
aam
into
and
jo
in
jne
in
inc
call
pusha
lock
push
add
add
push
sub
idiv
mov
mov
sub
(bad)
lods
xor
mov
mov
cmc
test
into
mov
xlat
jmp
inc
ret
sub
cwde
jecxz
mov
or
test
fiadd
mov
icebp
ja
mov
pop
enter
add
sub
aam
pop
cwde
lock
mov
mov
fbstp
outs
daa
stos
pop
adc
movs
and
push
and
xchg
test
xchg
call
jmp
out
inc
in
in
and
push
pop
lea
pop
push
mov
les
mov
push
sbb
rcl
jmp
ret
inc
add
push
or
xor
rcl
icebp
sbb
adc
hlt
or
inc
jno
add
nop
cdq
out
fs
push
and
pop
daa
push
or
jge
fdivr
push
inc
inc
mov
repz
out
jns
push
rcr
ins
adc
movs
push
sbb
push
inc
das
enter
fistp
into
sub
mov
push
or
stos
mov
xchg
jmp
out
or
pop
repnz
mov
add
fcom
aaa
mov
inc
adc
dec
daa
mov
mov
outs
clc
loop
ds
mov
or
ins
sub
lods
data16
mov
push
cmp
loopne
dec
call
shr
mov
in
cmp
xchg
or
jmp
(bad)
rcr
jne
cmp
in
in
inc
mov
in
or
jp
jbe
in
jmp
loop
mov
jo
inc
in
lock
cmp
movs
shl
sbb
pop
mov
or
call
mov
les
inc
push
push
push
mov
rcr
dec
sbb
pushf
loope
leave
pop
pop
lahf
pusha
mov
push
ins
enter
or
imul
inc
xchg
xor
sbb
or
add
mov
call
fmul
cmp
and
stos
adc
and
outs
add
xchg
ret
getsec
mov
adc
call
mov
jge
pop
stos
adc
pusha
mov
push
or
jl
pop
repnz
jp
div
sbb
or
pop
sbb
(bad)
int3
or
inc
aam
xchg
mov
push
jge
mul
or
lock
xchg
popf
sbb
and
inc
xor
scas
fdivr
pop
ins
enter
dec
sahf
sub
cmp
lahf
sub
xchg
xchg
js
sahf
enter
adc
mov
xor
stos
add
test
dec
mov
js
sub
adc
test
xor
or
jno
out
pusha
mov
imul
pusha
lahf
sub
xor
cli
sub
mov
rep
adc
mov
int
xchg
mov
leave
lea
jo
ror
jl
mov
sbb
dec
pop
push
push
loopne
fcom
out
call
aas
push
pop
add
mov
adc
pop
shr
sub
dec
clc
jns
popa
lods
std
sbb
test
fmul
add
pop
push
pop
inc
or
hlt
mov
loope
(bad)
(bad)
mov
je
ficom
adc
jne
pop
xchg
or
push
fbld
inc
mov
push
xor
rol
mov
xor
mov
and
mov
pop
push
stos
outs
mov
or
xchg
icebp
in
out
sti
pop
mov
fsub
pop
inc
xchg
xchg
or
or
xchg
imul
movs
sti
inc
inc
ret
in
sar
adc
in
pop
mov
xor
enter
jp
ret
les
mov
das
inc
in
cdq
add
push
pop
inc
mov
xor
jg
push
mov
jmp
mov
push
test
inc
add
adc
retf
aam
sbb
mov
adc
shl
and
mov
xor
mov
repnz
fistp
cmp
push
rcl
jg
or
scas
or
bound
and
adc
test
in
adc
ror
xchg
gs
retf
mov
jl
push
js
adc
sub
inc
sbb
xchg
inc
sahf
out
fmul
fdivr
or
pop
rcl
jge
shl
aam
bound
test
add
fs
ds
cld
fdivr
xor
sub
inc
add
hlt
add
movs
or
push
add
cwde
or
sub
out
sub
xor
int3
push
lea
xor
iret
in
or
sub
mov
mov
inc
dec
mov
push
mov
je
jmp
push
xchg
add
mov
lds
adc
mov
pusha
pop
sub
stos
test
xlat
add
jmp
dec
add
adc
ins
xor
sub
cmp
pushf
add
xchg
inc
dec
mov
(bad)
push
fidiv
and
stos
xor
test
sub
ds
cmps
sub
inc
adc
push
cmp
mov
in
mov
stos
xchg
cmp
adc
xchg
jnp
js
mov
lods
cwde
cwde
mov
push
in
add
call
inc
mov
jp
mov
xchg
mov
pusha
cmp
lahf
adc
jo
outs
and
je
sub
movs
inc
loopne
xor
aad
adc
mov
ds
out
es
and
pushf
pushf
or
pusha
add
loopne
or
push
addr16
aam
dec
in
sub
mov
push
scas
cmp
cmp
aam
aam
nop
inc
or
mov
call
dec
loopne
pop
je
sbb
add
ins
mov
imul
pop
fs
fcmovnbe
mov
addr16
pop
push
call
ret
xchg
push
mov
fucomi
sub
and
ret
xchg
(bad)
hlt
mov
mov
fs
cwde
add
outs
test
test
pop
stos
loope
inc
cwde
xchg
nop
int
sub
add
xor
lahf
call
and
sub
or
jb
inc
cmp
sbb
out
lea
and
cdq
in
aas
fdivr
call
mov
sbb
sbb
aam
adc
push
fisttp
add
arpl
jl
mov
jg
in
jmp
jmp
lock
idiv
outs
sub
pop
jl
inc
das
mov
les
inc
(bad)
jmp
sahf
inc
pop
pusha
fisubr
inc
jmp
mov
pop
xchg
xor
xchg
lock
jmp
iret
mov
(bad)
fst
pop
sub
movs
mov
mov
pusha
mov
ins
mov
add
test
sub
dec
sbb
sbb
pop
aam
mov
imul
je
pushf
fnsave
fisub
mov
jo
lea
mov
sahf
push
mov
push
pop
aam
aam
adc
add
add
leave
add
pop
push
ss
mov
mov
sbb
and
dec
lods
jmp
iret
rcl
or
adc
nop
push
addr16
add
jl
out
cmp
stos
hlt
rcl
cmp
mov
push
pop
xchg
imul
pop
inc
enter
dec
push
or
pushf
mov
in
sub
add
push
retf
(bad)
pop
or
mov
push
mov
pop
push
sbb
cmps
test
mov
jmp
(bad)
mov
mov
sbb
loopne
cmp
rol
pop
inc
dec
pop
adc
inc
xchg
aas
nop
mov
push
adc
add
push
cmc
dec
ja
loopne
mov
jl
sbb
in
es
inc
arpl
push
pop
and
adc
add
leave
popf
inc
push
push
sbb
pushf
inc
push
sub
mov
scas
(bad)
(bad)
out
and
stos
in
inc
clc
daa
pop
je
repz
cmp
cld
push
push
cwde
cld
inc
adc
sbb
ror
enter
push
or
cmp
push
adc
pop
push
or
in
shl
sbb
mov
test
sub
xor
xchg
dec
mov
loopne
xchg
in
add
mov
ss
push
mov
pop
repz
mov
loop
dec
jnp
mov
shl
ror
rol
cmp
sahf
mov
sub
pop
nop
call
inc
xchg
cmp
xchg
pop
repnz
lahf
push
add
int3
jge
test
adc
call
add
iret
and
test
cmp
fucomp
push
sub
ret
jp
dec
rcl
aaa
mov
sub
ja
loopne
push
mov
popa
xchg
inc
sti
outs
xor
jns
jo
inc
and
lahf
out
(bad)
clc
lock
push
or
xor
mov
jl
call
mov
test
call
push
adc
imul
adc
jp
dec
clc
push
addr16
xchg
les
mov
mov
add
jns
mov
push
push
xchg
retf
(bad)
iret
adc
nop
mov
int
movs
or
pop
dec
mov
je
in
test
jne
(bad)
xor
sar
push
push
add
arpl
ins
jecxz
in
fs
dec
sbb
pop
fs
or
jle
xchg
cmp
dec
jno
inc
push
push
imul
dec
and
cmp
inc
adc
inc
dec
cmp
cmp
inc
dec
jnp
lahf
(bad)
test
add
mov
mov
adc
mov
sub
xor
or
mov
nop
mov
test
out
ds
mov
push
mov
scas
mov
outs
pop
cmp
push
add
retf
pop
push
or
ret
ret
mov
nop
imul
(bad)
mov
push
add
inc
scas
loopne
push
les
dec
pop
je
push
pop
push
mov
xchg
out
aad
xlat
repz
xchg
in
mov
in
xchg
(bad)
xor
loopne
loopne
add
movs
mov
je
xchg
jno
adc
or
jle
ror
test
dec
add
inc
rol
push
sub
cmp
cmc
repz
xchg
rcl
lock
out
mov
stos
mov
es
pushf
mov
lods
(bad)
mov
les
lds
jnp
sbb
popa
cmc
ret
ror
cmc
xor
enter
inc
mov
and
xor
sbb
or
popa
ss
xor
adc
dec
les
cld
adc
dec
add
adc
shl
or
repnz
int3
sbb
loope
ret
cld
or
jp
mov
repnz
fstp
cmp
aam
enter
push
inc
(bad)
in
inc
test
mov
aas
dec
mov
pop
cmc
and
cmp
inc
jmp
gs
adc
jmp
mov
xor
push
push
test
inc
mov
push
dec
js
aas
enter
inc
aad
pop
cld
push
popa
loope
dec
xchg
and
cmovno
or
and
jl
mov
pop
pop
lahf
mov
inc
add
sub
movs
inc
add
mov
push
mov
mov
repnz
or
mov
push
je
jg
jl
sbb
bound
sahf
rcr
pusha
in
adc
ffreep
cmp
mov
sar
jne
cmps
xchg
jo
jl
mov
mov
xchg
cld
xchg
or
dec
cmps
cmp
sahf
or
mov
sbb
adc
cwde
and
push
rcr
ins
nop
nop
outs
mov
add
add
xchg
lea
jo
sub
lock
mov
ret
fnstenv
jbe
pushf
(bad)
adc
jno
fsubrp
jno
call
xchg
dec
and
jb
pop
nop
nop
add
nop
lea
mov
sub
fwait
retf
lods
jl
xor
pop
mov
dec
ret
jl
pop
mov
(bad)
clc
bound
mov
add
or
lahf
dec
dec
add
(bad)
push
push
enter
pop
int3
pop
int3
sub
mov
mov
sbb
cmp
je
cmc
mov
jmp
sub
imul
leave
lahf
or
and
loope
sbb
enter
psubusw
push
inc
or
xlat
ins
xor
inc
inc
and
stc
loopne
es
movs
inc
add
das
jmp
or
mov
jmp
adc
sub
sub
xor
test
xchg
lahf
inc
jo
cmp
mov
cmps
pop
dec
ret
cmp
mov
mov
nop
push
aas
push
outs
shr
aad
fucom
out
push
cmps
ret
dec
enter
push
adc
rcr
adc
jle
jb
adc
jle
or
je
xlat
fld
pop
out
out
xor
ror
xchg
ret
movs
ror
cmp
add
cmp
pop
xchg
loope
outs
add
inc
mov
out
cmp
je
ins
mov
lock
add
jmp
stc
cmp
jae
xchg
fcmovnbe
fsubr
ins
jmp
(bad)
jmp
jmp
jne
dec
movs
loop
push
pop
aam
les
pop
jmp
pop
xor
mov
shl
aas
fisubr
jmp
cmp
scas
jno
jg
adc
sbb
mov
jo
jge
jae
pushf
jb
cmp
mov
xor
inc
sub
and
add
mov
or
clc
test
sahf
outs
in
xchg
jmp
ins
popa
jnp
pop
push
(bad)
pop
jg
test
or
inc
lock
pop
(bad)
cmp
cmp
pop
fsubr
add
and
inc
aaa
and
jmp
ret
(bad)
push
inc
sbb
jbe
push
mov
scas
aam
pop
sbb
xchg
pop
jmp
jmp
movs
sar
dec
data16
movs
in
mov
clc
ficom
sbb
mov
jmp
sbb
or
push
adc
pop
repnz
dec
add
push
add
mov
or
enter
and
pop
pop
and
repz
mov
inc
js
test
pop
inc
pop
fwait
or
add
inc
push
mov
xchg
xor
add
add
(bad)
sahf
lods
sbb
cmp
(bad)
ss
xchg
pop
push
outs
jp
mov
scas
pop
mov
retf
or
add
rcl
aaa
inc
movs
push
retf
and
push
mov
mov
mov
ficomp
add
cwde
int3
je
fild
jne
aam
cmp
jne
dec
jle
(bad)
push
dec
les
not
add
push
jmp
push
(bad)
cmp
dec
jno
dec
lods
pop
lods
addr16
adc
enter
add
jb
add
and
lock
jmp
push
add
dec
dec
mov
nop
imul
mov
mov
push
and
mov
pop
stos
aad
inc
sbb
rcr
ret
jne
xor
add
jp
adc
xor
rcr
push
push
ja
fstp
adc
sbb
cmp
add
mov
inc
xchg
jmp
jno
add
add
xchg
lods
xlat
add
and
mov
push
cmps
inc
jg
xchg
dec
lods
inc
shr
adc
pop
sbb
add
sbb
sub
sbb
dec
sub
lock
adc
cs
in
mov
push
push
mov
cmp
xchg
arpl
push
push
xchg
push
jne
call
add
pop
dec
sub
call
xor
and
or
mov
not
push
and
cmps
cmp
mov
push
mov
add
mov
je
xor
das
hlt
mov
cmps
ror
add
es
adc
sub
lock
jmp
popf
jne
lea
int3
pop
inc
cs
pop
pop
xchg
mov
out
lods
cmc
rcl
mov
lods
jg
dec
dec
cmps
bound
pusha
cmp
or
lods
dec
and
inc
cs
add
add
nop
add
fld
dec
mov
mov
movs
inc
es
lods
add
xchg
pop
aam
jo
lahf
push
jo
inc
push
sbb
lods
pop
and
jnp
pop
xchg
ret
xor
leave
das
cdq
ret
sbb
or
jbe
adc
enter
mov
sbb
sub
(bad)
stos
cmps
xchg
pop
jb
sbb
or
test
mov
pusha
mov
jae
(bad)
lea
fisub
pop
stos
ja
in
xor
sub
xor
ret
sbb
sub
aad
test
sub
fcomp
aad
xor
add
add
pushf
or
mov
lods
hlt
push
push
fadd
dec
mov
adc
mov
sahf
dec
pop
mov
add
or
lods
mov
lea
pushf
add
xchg
jne
aam
cdq
pop
fst
and
or
push
lahf
or
test
xor
adc
pop
ret
pop
cmp
(bad)
sbb
loopne
push
ja
(bad)
test
xor
push
aad
add
adc
out
scas
sub
dec
(bad)
sbb
or
xchg
inc
call
inc
lea
add
loope
call
adc
jge
dec
mov
ss
pop
add
cwde
and
jle
mov
add
adc
jmp
lods
lds
push
iret
retf
mov
stc
add
mov
repnz
cmp
dec
add
or
push
add
or
pushf
(bad)
pop
fwait
cmp
dec
or
or
and
(bad)
cld
aas
push
push
imul
out
hlt
je
mov
out
xchg
hlt
xchg
or
or
rcl
lock
add
subps
and
and
adc
pusha
inc
and
pop
mov
add
xor
fiadd
jl
push
in
or
cwde
enter
inc
adc
xor
repnz
hlt
mov
xor
loopne
pushf
push
loopne
sub
lods
inc
push
loopne
xor
xor
lock
ret
fadd
dec
shl
push
pusha
in
xchg
call
fcomp
test
xlat
call
mov
cld
das
push
mov
push
in
aas
test
add
test
adc
cmp
sbb
stc
or
pop
cmp
bound
push
push
aad
arpl
cld
jge
add
sbb
pop
add
add
lahf
sub
mov
add
(bad)
fst
mov
dec
aad
jbe
sar
aad
cmps
jmp
jle
nop
add
or
push
xor
or
adc
ds
and
sub
rcr
adc
inc
adc
pop
or
movs
stos
(bad)
xchg
jno
in
xchg
scas
or
pop
mov
sub
inc
ds
adc
pop
or
xor
add
adc
call
xchg
xlat
push
sbb
into
xor
lock
loopne
xor
lods
pop
add
jg
fst
sbb
iret
add
and
inc
cdq
imul
(bad)
fbstp
mov
lock
test
cmp
cld
mov
(bad)
in
sub
push
mov
xor
mov
mov
je
or
rcl
jae
inc
cmp
adc
push
pop
fwait
clc
das
add
jmp
mov
call
fld
push
push
inc
iret
adc
hlt
adc
dec
stc
inc
aad
and
aam
fdivr
adc
shl
cwde
ret
cs
fimul
stos
lods
inc
or
mov
mov
jnp
sub
pop
or
pop
cdq
xor
sar
pop
dec
repz
xor
test
fmul
movs
test
fcomp
cmp
mov
mov
je
or
je
or
jmp
adc
out
mov
mov
fsubr
enter
inc
ror
mov
adc
xchg
loope
jbe
int3
add
inc
repnz
loope
jmp
jge
iret
add
add
sahf
(bad)
jmp
jl
cwde
xchg
jbe
(bad)
fdiv
push
int
dec
dec
in
sar
dec
push
push
lds
xor
xor
test
cmp
icebp
xchg
mov
sbb
and
js
xor
pop
pop
sbb
sbb
pop
bound
sar
and
sbb
inc
push
test
dec
inc
push
addr16
inc
ret
ficomp
or
inc
sbb
loope
sbb
pop
arpl
cmp
jns
jg
mov
js
aam
xor
nop
pop
aaa
fidiv
in
pop
add
dec
aam
fmul
push
push
mov
lock
(bad)
ret
sti
cmp
js
pop
push
add
mov
rol
dec
jmp
pop
cmp
out
sbb
out
add
or
adc
inc
les
mov
mov
lea
inc
fcom
pop
lock
dec
fcmovb
inc
outs
cmp
adc
(bad)
cld
lahf
mov
mov
add
aaa
lods
cdq
inc
stos
mov
sbb
pop
cmp
dec
cmp
cmps
ss
xchg
enter
mov
push
add
mov
sbb
outs
lea
pop
movs
out
add
in
sbb
push
add
inc
sbb
inc
cmps
ror
or
sbb
pushf
jl
(bad)
mov
inc
dec
inc
pop
mov
aam
out
push
adc
sbb
pop
pop
push
mov
imul
xchg
lods
xchg
sub
scas
fnsave
push
push
push
add
popa
sbb
ret
ret
stos
aad
call
and
mov
nop
retf
scas
and
pop
mov
adc
add
and
and
ds
lods
sub
push
sbb
pop
sbb
add
mov
add
push
lods
add
sbb
cmp
jns
xchg
pop
or
jl
adc
ja
xlat
les
pop
jecxz
push
cmp
jecxz
mov
in
cmps
cdq
push
addr16
test
adc
push
sahf
adc
mov
pop
into
push
repnz
adc
in
jnp
pop
jo
or
cmp
ret
es
push
pusha
adc
js
je
and
xor
add
jge
movsd
or
js
stc
into
(bad)
jbe
ucomiss
lahf
test
jnp
sub
sub
cmp
lea
jl
pop
xchg
into
jg
adc
mov
nop
sbb
idiv
(bad)
dec
mov
inc
cwde
(bad)
stc
das
add
mov
(bad)
mov
pop
add
sahf
test
imul
push
or
jno
dec
push
imul
sub
loop
or
lds
fdivp
or
xchg
mov
cdq
mov
imul
imul
loop
push
mov
push
mov
fstp
test
dec
jns
or
test
sbb
mov
pusha
ror
inc
(bad)
fcmovu
sub
or
mov
xchg
je
dec
mov
jae
and
rol
imul
add
add
stos
mov
dec
ins
push
cdq
stos
lea
inc
jg
push
enter
xor
repnz
call
ret
out
adc
test
and
mov
(bad)
mov
mov
jmp
out
add
inc
adc
add
jno
in
push
sbb
xor
sbb
cmp
je
mov
pop
hlt
mov
mov
(bad)
xor
(bad)
mov
adc
xchg
cmp
cmc
xchg
ds
loopne
test
or
pop
and
or
or
mov
jb
aas
cmp
inc
cmp
inc
lods
aaa
in
push
ret
mov
inc
sub
ins
cmp
and
pop
call
sub
lods
mov
mov
push
add
sub
add
leave
arpl
out
test
popf
push
push
sub
mov
push
add
add
aas
aas
cld
dec
and
jmp
add
ret
pusha
adc
sbb
imul
retf
mov
(bad)
cmp
adc
and
pop
call
or
pushf
xor
inc
in
xlat
pop
aas
inc
mov
das
cmp
pop
push
sbb
icebp
pop
jo
add
mov
or
fst
push
jo
add
ins
inc
call
push
imul
dec
inc
push
sub
add
cmp
lds
push
cld
call
loopne
shl
sbb
lods
push
sbb
or
and
or
or
ins
movs
push
add
inc
sar
(bad)
adc
out
(bad)
imul
lahf
arpl
adc
or
test
cld
cmp
and
test
add
push
addr16
add
(bad)
cdq
sub
sar
add
dec
addr16
adc
jge
sbb
jmp
imul
popa
test
dec
rcr
cs
sub
cmp
sbb
adc
xor
pop
push
add
test
jnp
aam
clc
or
inc
loopne
repz
in
inc
mov
adc
xchg
push
mov
add
cld
and
and
jg
jbe
pop
dec
xchg
add
das
out
and
je
sub
xchg
pushf
and
cs
dec
outs
sti
popf
sbb
sub
das
mov
mov
xchg
clc
fiadd
(bad)
mov
dec
adc
loop
xchg
test
shl
adc
out
je
mov
std
data16
sbb
pop
lods
and
jmp
pop
dec
dec
std
in
nop
imul
jmp
lahf
cli
arpl
sbb
cs
stos
sti
cli
arpl
mov
dec
repnz
xor
fwait
(bad)
enter
in
jbe
addr16
or
cmp
je
adc
leave
adc
add
mov
add
add
jg
int
or
or
pop
xor
shl
xor
push
je
dec
mov
xor
sbb
call
pop
sbb
push
add
mov
pop
(bad)
mov
cdq
clc
sbb
push
mov
outs
or
mov
mov
jne
fsubr
sub
jg
(bad)
imul
mov
mov
ins
or
popa
jge
inc
adc
and
pop
jmp
movs
lea
dec
movs
sbb
dec
je
sub
inc
sub
or
lods
in
push
mov
(bad)
(bad)
imul
xor
adc
sbb
addr16
fcom
xor
xor
add
ins
sub
nop
es
and
mov
shl
js
test
mov
cld
pop
fdiv
pop
cmp
and
movs
(bad)
jo
int
and
mov
xchg
xchg
adc
add
retf
and
sub
push
push
std
sbb
arpl
movs
pusha
xchg
xor
mov
hlt
fsubr
sub
movs
test
shr
ins
(bad)
cld
js
push
in
inc
inc
or
pop
cmp
xchg
adc
dec
xchg
je
call
test
test
jle
bound
or
xor
int
sub
retf
pop
shl
mov
int
pop
movs
mov
or
or
or
hlt
cmps
test
test
pushf
out
sti
rcr
adc
int
sbb
cmp
stc
and
jbe
inc
cmp
adc
sub
xor
loopne
sbb
fucomi
and
fmul
out
or
jmp
mov
mov
rol
push
push
cli
or
adc
push
imul
data16
inc
mov
xor
xchg
into
shl
mov
mov
rcr
(bad)
icebp
jne
mov
ins
pop
mov
test
fcomp
pop
cdq
mov
jp
js
mov
dec
pop
jmp
fisttp
cmp
pop
cmp
xor
nop
jbe
push
dec
push
jae
and
pusha
jns
iret
sbb
movs
loopne
dec
pop
inc
xor
cmp
push
dec
or
or
mov
dec
and
clc
clc
sub
test
and
scas
out
loopne
sub
daa
push
adc
cmp
pop
lods
clc
jmp
je
add
clc
sti
sbb
xchg
or
sbb
xor
xor
lahf
inc
outs
push
hlt
adc
and
jmp
sbb
jbe
ffree
loopne
add
dec
in
mov
jbe
js
or
sbb
jmp
sar
nop
push
pop
leave
test
and
pop
dec
cmps
test
test
dec
mov
push
mov
inc
sbb
mov
add
ficom
sub
test
loopne
fst
or
xchg
xlat
ss
or
mov
sbb
adc
hlt
cwde
add
mov
imul
cwde
frstor
repnz
cdq
pusha
shl
push
mov
outs
pop
push
push
inc
add
sahf
add
shl
adc
sbb
shl
sbb
mov
push
add
push
test
xor
mov
mov
mov
(bad)
jg
mov
nop
add
xchg
inc
adc
jmp
movs
cld
mov
add
adc
rcr
sbb
sbb
int3
mov
mov
psubusb
ins
inc
xchg
in
icebp
xchg
fs
cs
leave
inc
add
xchg
fst
mov
dec
mov
dec
fsubr
pop
jb
rcr
lods
and
mov
pushf
adc
jl
mov
jl
lea
pop
arpl
ficomp
push
cmp
nop
dec
jmp
adc
ficomp
js
test
jge
jmp
lea
sub
outs
push
mov
test
call
inc
gs
popa
sbb
cmp
les
ja
stc
int3
pop
pop
test
ss
jecxz
imul
inc
xor
movs
test
in
pop
or
ret
and
hlt
add
daa
je
sbb
out
test
(bad)
loope
add
add
dec
jmp
mov
add
(bad)
xchg
push
mov
call
adc
icebp
fistp
jmp
mov
mov
jno
enter
stos
dec
sti
pushf
push
adc
xlat
or
cmps
or
push
xor
add
cmps
pop
nop
mov
cli
fisub
cmps
or
xor
loope
in
scas
add
inc
popa
inc
inc
sbb
and
out
push
cmp
mov
in
or
sub
inc
and
sbb
dec
(bad)
jb
adc
clc
sbb
dec
loopne
add
add
push
fbld
xor
pushf
aas
sbb
push
fsub
jg
inc
jmp
test
push
add
mov
les
(bad)
mov
jmp
xor
sub
add
adc
js
pop
dec
ret
je
jmp
mov
adc
clc
je
mov
mov
add
jmp
mov
inc
dec
in
cmp
adc
ret
sahf
inc
enter
add
and
in
lods
add
sub
or
pop
adc
push
pop
aas
in
ins
sub
mov
xor
add
sbb
push
push
or
std
xchg
sub
in
jl
pop
or
stc
pushf
xchg
and
mov
inc
enter
jl
mov
test
and
nop
or
add
or
(bad)
icebp
pushf
lock
add
and
(bad)
jecxz
jno
or
icebp
dec
jo
cmp
jg
enter
lods
inc
lods
adc
dec
fisttp
adc
in
ins
add
pusha
popa
add
mov
lea
hlt
js
fadd
cmp
push
(bad)
mov
hlt
jl
pop
adc
fcomp
pop
xchg
out
out
xor
add
data16
or
or
(bad)
ins
jmp
fldcw
cmc
(bad)
adc
inc
in
fs
cmp
push
clc
mov
in
cmc
pushf
add
fdiv
xor
rcr
sub
and
or
mov
imul
mov
test
push
ret
mov
pop
mov
cs
(bad)
fisubr
sbb
dec
cmps
jg
add
adc
mov
mov
out
jge
push
jge
cmp
push
xor
and
repnz
push
mov
setp
xor
sbb
pop
or
stos
data16
jecxz
data16
sub
xor
cmp
mov
jp
and
pop
lea
sti
(bad)
jp
jnp
test
rcr
or
aaa
inc
push
add
push
mov
test
mov
mov
cmps
in
in
cmc
cld
neg
fadd
xchg
or
or
add
mov
add
test
xchg
ins
imul
mov
and
imul
sub
pop
and
and
stos
test
adc
leave
push
repnz
inc
xor
inc
add
pop
repnz
adc
enter
fadd
imul
in
cmp
xor
or
adc
add
fsub
aad
call
pusha
push
ins
jg
mov
pop
adc
jmp
and
jle
or
mov
stc
call
jmp
mov
je
out
sub
and
cmp
cdq
add
shr
mov
dec
shl
mov
mov
and
dec
jb
stc
int3
add
lock
mov
dec
push
ja
pop
je
inc
leave
xchg
sbb
(bad)
jmp
jmp
dec
xor
or
imul
(bad)
jns
stc
or
in
sti
add
add
xchg
jl
add
add
add
int3
and
or
push
or
or
pminsw
test
pushf
pop
xchg
les
sub
out
push
adc
inc
mul
add
xor
or
sbb
sub
mov
cmp
lods
movs
inc
xchg
or
jbe
and
mov
sbb
dec
xor
jmp
inc
jb
mov
sbb
enter
cdq
lahf
dec
daa
dec
aam
js
int
ja
aaa
add
xchg
and
jns
mov
fidivr
movs
xchg
ds
test
mov
test
or
mov
test
mov
or
dec
(bad)
and
inc
popf
aaa
ret
push
sbb
dec
data16
lods
arpl
or
mov
adc
stc
mov
mov
shl
jno
pop
leave
sbb
int
push
enter
push
stos
and
jle
lahf
es
and
in
pop
push
rol
ret
call
pop
movs
adc
sbb
stos
and
push
repnz
pop
(bad)
cmc
inc
js
or
das
cmp
and
adc
dec
mov
leave
push
aas
clc
and
mov
xchg
add
lds
mov
call
popa
loopne
jl
add
add
dec
loope
jns
(bad)
fcom
dec
shr
loopne
mov
add
sbb
xchg
adc
adc
in
and
add
fmul
fadd
add
(bad)
in
mov
or
aas
or
lods
push
or
sub
popa
xor
mov
adc
fistp
ds
push
(bad)
es
pop
cmp
fucomip
mov
lea
rep
pop
lea
jge
sbb
mov
jmp
pop
lahf
add
ja
add
sbb
or
and
dec
cmp
jecxz
jp
inc
mov
push
lea
add
popf
push
shl
pop
or
in
outs
xchg
mov
adc
inc
or
cmp
push
xor
push
daa
fisttp
inc
cmps
les
xor
test
mov
push
mov
dec
inc
add
or
push
xor
push
mov
cmp
int3
mov
sbb
dec
mov
or
adc
pusha
cwde
dec
aaa
retf
shl
mov
pop
les
fwait
push
inc
add
or
pop
mov
and
addr16
pop
mov
daa
stc
sub
mov
movs
mov
js
xchg
cmc
push
dec
jle
mov
push
lods
push
lods
js
sub
shl
test
adc
pop
iret
cs
push
push
leave
cld
sub
adc
add
sub
jmp
adc
mov
mov
dec
pusha
push
mov
dec
pop
data16
jg
jbe
loop
fwait
adc
lock
jp
jmp
xchg
inc
pop
lock
in
jl
dec
adc
add
add
pop
arpl
and
pop
jne
or
add
sub
add
int3
add
add
loop
lahf
add
inc
(bad)
stos
pop
or
aaa
mov
dec
push
aad
sahf
jg
push
sar
sbb
fwait
sbb
jb
pop
or
aas
(bad)
cmp
dec
push
jge
mov
pop
sub
mov
fdivr
adc
push
add
sbb
add
lods
lds
pop
push
push
sbb
push
pop
sahf
xor
inc
adc
sub
and
jmp
sub
inc
dec
es
sbb
or
pop
cmp
data16
jp
mov
cmp
sub
lock
cdq
pop
cmp
sbb
sub
arpl
and
sbb
ins
add
jl
or
call
aas
arpl
cmp
pop
call
fisttp
ror
pusha
loop
sub
les
and
inc
and
bound
in
sbb
call
call
lods
hlt
add
fucomi
inc
sub
or
push
adc
xchg
mov
cwde
addr16
sub
mov
mov
or
mov
and
je
sbb
cs
pop
mov
movs
dec
and
add
add
inc
push
aaa
mov
mov
push
leave
test
inc
mov
cwde
and
cmp
xchg
sbb
pop
(bad)
or
xor
dec
push
inc
sub
adc
add
inc
adc
cmp
mov
push
call
mov
xor
int3
cmp
or
cmp
or
jmp
adc
push
stc
rcl
dec
xchg
push
call
jecxz
jecxz
mov
mov
sbb
sbb
mov
movs
dec
mov
dec
(bad)
dec
dec
test
lea
je
or
sbb
xor
adc
lea
lds
adc
mov
sub
or
sbb
jns
sub
daa
mov
fist
ins
and
pop
jo
dec
mov
jmp
inc
add
xchg
or
xchg
dec
xor
or
adc
add
mov
test
repnz
sbb
fstp
jg
and
fs
ficomp
scas
add
sub
jmp
and
pop
lahf
lods
jle
leave
mov
push
push
movs
or
mov
push
lea
add
test
aam
jno
inc
icebp
jo
sub
push
add
lds
push
nop
or
je
popa
(bad)
cmp
add
add
test
pop
mov
(bad)
and
pushf
jmp
shr
inc
in
xor
je
or
mov
js
cwde
sub
xchg
lock
std
inc
mov
add
dec
scas
sbb
and
cwde
jne
imul
sbb
mov
pop
xor
or
sbb
inc
xor
fild
and
jnp
push
adc
(bad)
mov
xor
or
mov
cmp
push
(bad)
ds
mov
popf
popa
sti
mov
cdq
inc
xchg
arpl
or
mov
int3
mov
out
int
pop
jnp
inc
call
cwde
mov
inc
shr
int3
cld
fbld
(bad)
add
push
dec
mov
inc
(bad)
or
jle
pop
or
pop
push
movs
hlt
xor
push
repnz
and
movs
sub
push
out
dec
popa
loop
aaa
int3
cmp
jg
js
xchg
movs
lods
fs
ror
inc
sub
fsubr
(bad)
hlt
lock
push
mov
out
adc
or
dec
leave
cmp
push
mov
mov
jmp
push
push
mov
push
cwde
ss
mov
in
pop
in
add
out
inc
or
mov
mov
jbe
bound
xchg
jl
mov
jb
inc
dec
mov
jmp
fidiv
(bad)
icebp
sub
sub
xor
daa
shl
cmp
push
scas
dec
mov
cmp
je
or
sub
fdiv
ror
pop
push
sbb
ret
mov
rcl
pusha
xchg
push
xor
lea
mov
jle
add
inc
adc
cmc
mov
and
mov
sub
(bad)
mov
pop
in
add
push
sbb
ss
call
or
push
cli
mov
or
sbb
gs
jo
loope
ficom
sbb
jle
inc
sbb
out
sbb
loop
jbe
and
je
xor
cli
sbb
fnstcw
cmp
cmp
push
sbb
mov
je
cmp
sahf
div
cmp
push
sbb
idiv
sub
inc
loope
jge
mov
or
mov
pop
mov
pop
aad
mov
fstp
or
push
push
sbb
mov
sar
mov
add
enter
jae
lock
xor
jecxz
jmp
sbb
mov
psraw
push
mov
movntq
mov
sbb
mov
loopne
pop
add
into
inc
lods
xchg
push
psubq
fs
(bad)
sbb
or
inc
or
sbb
dec
push
mov
or
xor
push
cdq
mov
add
pop
pop
stos
xchg
add
add
ret
and
push
cmp
repz
lods
push
or
push
inc
sub
jmp
mov
in
and
or
jo
out
push
loope
xor
cmp
and
sahf
mov
imul
cmp
cmp
push
add
push
mov
add
lds
or
popf
sbb
adc
mov
or
repz
xor
push
retf
retf
add
call
mov
repz
and
add
pop
cmp
pop
mov
pop
out
fisttp
jecxz
nop
mov
push
push
dec
push
xlat
jmp
fadd
add
dec
jnp
mov
mov
push
repnz
std
add
in
pop
ret
xor
jne
and
lods
inc
jge
push
push
pop
in
or
pop
sub
or
add
xchg
sbb
mov
jne
rcr
jb
or
lock
imul
or
sub
or
push
pop
js
std
mov
add
mov
jne
test
nop
sbb
xchg
jecxz
in
mov
jmp
mov
cmp
or
mov
adc
dec
mov
test
mov
cmp
dec
sar
hlt
out
les
aas
(bad)
movzx
movzx
and
sbb
push
mov
sar
sub
(bad)
call
mov
fdiv
dec
push
add
or
inc
mov
clc
into
push
push
xor
push
sbb
mov
test
jb
and
out
adc
lock
ror
cld
adc
inc
or
shl
or
pop
pop
pop
leave
stc
sub
dec
inc
push
jb
push
dec
add
adc
ds
jmp
ds
push
inc
clc
mov
and
and
cs
test
je
pusha
test
je
dec
mov
cmp
inc
cmp
adc
inc
mov
add
out
cmp
adc
pop
push
bound
test
je
cmp
xchg
(bad)
repz
clc
or
loope
test
push
aaa
mov
pop
je
test
push
cmp
cli
enter
push
jmp
push
pop
push
loopne
ja
push
push
jne
pop
push
adc
mov
push
push
fistp
jnp
pop
inc
push
lea
rep
popf
dec
sbb
test
fdivr
pop
loopne
ror
pushf
es
call
retf
and
mov
repz
sar
or
inc
or
jl
inc
pop
pop
shl
aad
fisttp
lea
test
js
xor
xchg
and
imul
fisub
mov
add
cmp
popa
je
mov
jg
xor
mov
ins
repnz
add
test
leave
jl
cmp
xchg
ret
mov
sbb
sbb
pop
ret
add
jl
gs
push
out
mov
jp
or
xor
clc
cmp
cwde
jecxz
punpckhwd
jno
les
jnp
icebp
lods
inc
les
les
cli
push
sub
inc
mov
out
and
and
dec
neg
jl
js
sahf
sub
push
sub
xchg
ret
daa
mov
cs
clc
dec
fdivr
pop
and
inc
dec
mov
mov
dec
ror
out
pop
add
xchg
clc
xlat
(bad)
jo
stc
mov
add
push
push
pushf
ins
pop
ror
adc
or
iret
add
sbb
pop
enter
retf
pop
adc
add
stos
fwait
or
or
xor
ficom
jmp
cmc
adc
pop
or
ins
xlat
cvttps2pi
hlt
or
in
xchg
cmc
and
push
or
jp
adc
cmp
mov
lahf
nop
inc
or
mov
cmp
jecxz
and
pop
mov
les
ds
jl
inc
and
mov
(bad)
xor
inc
mov
mov
sbb
jmp
or
push
cmp
jge
lea
sub
daa
call
dec
push
int
mov
bound
ret
inc
and
sbb
or
out
xor
adc
mov
cmp
loope
shl
mov
xor
push
sbb
ins
ja
push
and
inc
pop
stos
mov
add
adc
in
add
mov
or
adc
cmp
push
pusha
bound
add
loop
cdq
sahf
cmp
jnp
xchg
dec
and
lock
mov
test
xor
push
sub
cld
jg
popf
mov
lea
jmp
lea
data16
mov
cmc
sub
test
sub
sar
mov
push
push
sbb
dec
nop
sub
test
jne
test
sub
ror
sub
ins
push
sub
sbb
jle
fnstcw
mov
push
mov
movs
jp
and
and
pop
jns
cdq
xor
xchg
sbb
vunpckhpd
cmp
int3
or
hlt
ror
push
fs
jns
neg
mov
jns
jmp
inc
mov
jo
retf
or
pop
gs
loopne
fisub
or
push
pop
sub
jg
imul
(bad)
out
(bad)
mov
movs
mov
push
push
psubb
mov
ds
out
adc
cmp
iret
je
fucomi
xor
fscale
adc
or
inc
mov
(bad)
std
ja
jne
cmp
cmp
ret
mov
pop
jl
(bad)
call
nop
retf
mul
fistp
xchg
dec
adc
lods
lock
scas
xor
les
cld
adc
call
mov
jl
xlat
fistp
xchg
xlat
lahf
xchg
outs
and
repnz
mov
add
arpl
stc
js
pop
jmp
adc
mov
push
in
cmp
push
(bad)
cwde
ins
mov
and
cmc
mov
push
or
jg
inc
push
jne
sbb
mov
mov
pop
adc
cmp
inc
pop
xchg
mov
xlat
inc
jmp
mov
stos
retf
lods
cwde
fisubr
stc
or
rol
mov
stos
les
or
cmp
mov
and
div
mov
and
(bad)
mov
pop
rol
or
movs
and
inc
(bad)
(bad)
jle
rol
pop
neg
rol
add
jb
test
mov
retf
data16
fst
or
int
dec
sub
ret
dec
push
cmp
push
pop
sub
mov
adc
jl
or
ror
jbe
ror
stc
cmp
jb
cld
mov
movs
cwde
and
mov
sub
stc
int3
cmp
call
(bad)
xor
test
lock
push
add
jge
and
test
xchg
jbe
sub
xchg
add
add
cli
dec
ds
sub
lea
pop
lea
and
jae
repz
aaa
in
movd
sub
or
(bad)
cvttps2pi
push
in
jbe
jmp
arpl
add
dec
hlt
inc
hlt
fnstsw
push
pop
adc
sub
xor
(bad)
pop
rol
cmp
(bad)
jg
sbb
ret
in
inc
adc
xor
jmp
or
sub
clc
sbb
push
sbb
mov
or
leave
test
ds
sbb
push
shl
add
dec
enter
addr16
xchg
add
adc
outs
adc
movs
loope
jg
adc
call
cmp
inc
sub
cmp
(bad)
push
adc
loopne
jne
shr
and
mov
jb
rep
cmps
mov
nop
mov
mov
test
enter
out
jne
fdivr
lea
cmp
mov
or
ins
fnstenv
mov
mov
mov
mov
or
scas
adc
inc
mov
mov
stc
(bad)
push
dec
add
mov
cmps
inc
add
add
mov
or
push
aam
int3
aas
iret
repz
mov
mov
out
in
inc
(bad)
in
call
sahf
out
lock
hlt
clc
xchg
inc
jno
clc
cld
push
mov
add
add
fld
dec
jne
sbb
cmp
inc
sub
pop
sti
and
jbe
or
sbb
lea
and
fmul
jl
cld
or
scas
(bad)
cld
out
xchg
cmp
fst
xor
stc
sub
fstp
test
int3
push
hlt
fiadd
push
fldcw
jl
mov
add
sahf
inc
push
out
push
outs
in
xchg
retf
nop
dec
dec
xlat
imul
add
mul
inc
push
test
and
sahf
pop
pusha
push
sahf
out
cmp
sbb
sbb
out
sahf
out
adc
adc
out
sahf
or
or
ds
int
inc
movs
or
dec
inc
sub
push
add
or
mov
mov
push
mov
jg
inc
adc
add
and
shr
push
stos
stos
(bad)
nop
dec
push
rcl
mov
push
pop
lods
jg
push
dec
and
push
out
ins
cmc
jg
shl
or
jbe
cld
repz
fidivr
xor
jg
jg
jg
jo
mov
ret
fmul
mov
out
and
lea
rcl
imul
inc
out
and
or
push
push
mov
cli
test
mov
xor
je
push
xor
add
push
idiv
mov
jmp
rol
sub
sub
push
mov
sbb
in
arpl
mov
mov
shr
dec
clc
adc
rcr
sub
inc
jmp
cmp
out
dec
nop
dec
inc
add
pop
add
push
inc
pop
aas
xor
sbb
repnz
inc
cwde
inc
scas
repnz
in
inc
test
push
sub
es
push
or
aas
cwde
inc
outs
sub
push
cwde
inc
xchg
or
push
je
fs
das
or
push
dec
inc
aas
cwde
inc
ret
cmp
mov
mov
stos
and
xor
in
mov
inc
pop
nop
dec
push
ins
and
mov
push
xchg
inc
aas
xor
outs
mov
call
push
lock
clc
add
adc
mov
jns
sub
clc
mov
or
jo
aad
inc
inc
aas
xor
pusha
push
mov
or
sar
inc
or
mov
test
fcomp
rcr
xor
sbb
push
or
cmp
test
das
or
xchg
push
ret
jne
pop
sar
dec
pop
push
inc
inc
push
in
out
adc
and
(bad)
mov
xor
xor
cmp
and
out
inc
add
dec
loop
or
jge
in
jg
fdivr
dec
js
outs
jmp
pop
std
sbb
cmp
je
lds
jg
js
add
into
lock
loop
xchg
inc
sbb
add
xchg
mov
mov
or
fnstenv
mov
mov
push
jmp
adc
fwait
popa
jl
push
jne
inc
mov
in
jae
gs
cmp
dec
add
mov
sbb
push
adc
inc
es
and
cmc
adc
adc
jnp
fsubr
sub
aam
inc
xor
ins
mov
xor
or
or
clc
jne
daa
sbb
xchg
sub
cmp
push
xor
push
pop
cmp
add
call
sub
xor
mov
jnp
addr16
push
aam
adc
jne
imul
outs
xor
sub
lea
xor
stos
or
push
pop
cmc
push
add
mov
xor
add
mov
cld
fadd
jb
push
push
das
jns
sub
jae
adc
inc
adc
ds
mov
xchg
(bad)
sar
sbb
leave
jecxz
(bad)
ins
je
lea
push
mov
xor
sbb
pop
sar
pop
leave
dec
cmp
(bad)
or
std
repnz
cmp
sub
sbb
xchg
push
pushf
sbb
lock
jnp
add
add
adc
hlt
sub
fcom
mov
sbb
imul
das
into
addr16
adc
and
inc
dec
cwde
fbld
add
jmp
or
je
xor
test
setg
lea
pop
leave
scas
fwait
or
jle
cdq
pusha
cmp
inc
jns
pushf
xchg
or
add
add
ret
and
adc
sub
inc
adc
dec
xor
in
loopne
retf
add
jg
adc
and
add
dec
call
and
in
pop
pop
pop
mov
push
or
or
enter
pop
or
push
xor
xor
or
(bad)
ror
or
(bad)
mov
sahf
dec
push
or
in
push
and
movs
push
test
inc
sahf
(bad)
movd
adc
in
cmp
xchg
adc
or
push
adc
mov
adc
inc
sahf
retf
or
push
adc
sbb
adc
in
sbb
and
add
retf
or
in
pushf
jge
pop
pop
and
sbb
add
mov
sbb
dec
and
enter
in
add
adc
pop
sbb
mov
and
sbb
push
enter
add
sbb
inc
push
and
pop
aas
push
enter
xor
lock
sub
add
add
cmp
jae
repz
pop
pop
push
cmp
iret
xchg
pop
inc
push
in
rol
dec
and
jb
add
inc
in
cmp
out
add
enter
jns
or
call
dec
jmp
cmp
jmp
jmp
loop
in
daa
fadd
mov
enter
in
inc
in
xchg
xchg
adc
shr
out
jno
out
out
test
dec
lock
lock
shl
icebp
cld
add
daa
nop
out
repnz
repz
jb
jns
mov
hlt
add
inc
call
pusha
iret
enter
inc
fs
jns
neg
add
cmps
nop
out
neg
clc
dec
mov
imul
xchg
or
pop
stc
inc
stc
int
daa
nop
cmp
cli
stos
add
cmps
jb
jns
test
cld
push
leave
fwait
loopne
je
and
pusha
jns
nop
neg
std
cmp
inc
(bad)
sahf
add
(bad)
and
(bad)
call
or
cli
pusha
xor
sbb
in
in
repz
es
jno
enter
push
out
or
scas
fwait
loop
loopne
push
and
push
or
dec
push
sub
(bad)
jmp
jno
dec
mov
jmp
fild
mov
imul
push
sub
add
out
jmp
(bad)
lock
jmp
call
inc
dec
cmps
jb
loopne
sub
add
nop
repz
fdivp
inc
hlt
pop
push
enter
cmp
cs
adc
daa
fdiv
imul
out
inc
xlat
pop
jno
lds
push
or
fbld
jge
xor
add
inc
es
cld
inc
cld
push
sar
xor
out
mov
push
jp
(bad)
sub
xchg
fcomp
push
push
daa
or
movs
loop
das
xchg
sti
into
add
cs
jecxz
jne
fidivr
xor
lock
sub
ins
inc
call
push
pop
xchg
cli
out
(bad)
and
cli
xchg
push
movs
test
jmp
push
sub
inc
cli
and
in
call
out
out
xchg
adc
jmp
xchg
push
pop
int
stc
lea
dec
int
or
jae
repnz
cmp
int
stc
enter
idiv
mov
cmc
xchg
div
pop
fcom
inc
cmps
mov
jl
inc
cmp
lock
pusha
pop
das
int
or
clc
cli
cli
cli
mov
sub
sti
int
fist
jmp
int
js
add
mov
data16
push
or
xor
pop
imul
ret
add
rcl
loope
loope
push
pop
and
popa
loop
aas
pop
or
lods
add
div
in
in
inc
mov
aam
mov
lods
adc
xlat
aaa
xchg
lods
sub
pusha
jmp
pop
and
xor
lods
adc
out
cmc
sub
pushf
inc
leave
cmc
in
in
mov
movs
pushf
sbb
jp
in
jp
lods
pop
dec
push
jge
sub
inc
sbb
push
icebp
icebp
icebp
mov
jmp
repnz
xlat
aaa
xchg
pushf
loop
rol
dec
in
ret
pop
call
and
movs
ins
push
xlat
add
dec
hlt
lods
push
enter
sub
sub
in
jmp
repnz
repz
push
lods
xchg
inc
dec
lods
sub
ins
repz
rcl
out
jle
push
pop
cli
xchg
fadd
dec
int3
inc
pop
shr
push
shl
xor
lock
test
and
sub
inc
iret
jo
inc
sahf
add
lods
dec
mov
push
mov
test
cmc
mov
jne
arpl
sub
js
in
lea
dec
shl
dec
inc
add
dec
nop
mov
jmp
xchg
and
push
mov
bound
daa
ret
fiadd
and
data16
push
push
sqrtps
push
jo
shr
movs
pop
mov
xchg
push
fstp
imul
cld
push
inc
ja
pop
ss
int
gs
push
fistp
dec
into
push
jge
out
adc
aaa
jl
idiv
cwde
dec
mov
xor
repz
add
out
add
es
scas
xor
mov
xor
dec
push
push
mov
jmp
imul
ss
sar
(bad)
es
clc
push
outs
clc
mov
fcomp
cs
sub
push
or
push
adc
xor
shl
xchg
pop
movs
icebp
enter
sbb
ins
adc
pushf
mov
pop
xchg
jno
xor
(bad)
jnp
sbb
mov
mov
xchg
push
mov
push
push
pop
mov
jecxz
xchg
cmps
in
rcl
jecxz
mov
mov
inc
aam
dec
jne
pop
jbe
in
push
mov
mov
pop
and
shl
inc
push
push
mov
and
and
push
push
sbb
or
cmp
pop
mov
jmp
retf
enter
jcxz
outs
es
pop
cmp
scas
mov
jne
jmp
out
fsubr
mov
or
inc
daa
es
mov
mov
and
(bad)
jno
sub
mov
and
popa
or
inc
fs
or
stos
jmp
dec
cmp
pop
push
jl
pop
clc
add
jg
stc
cmp
jb
neg
fimul
ror
dec
mov
mov
cmp
ror
loope
or
pop
dec
aas
scas
push
rep
or
mov
jnp
out
pop
ret
or
xor
add
cmp
fdivr
sete
hlt
sbb
pop
mov
mov
pop
imul
adc
xor
into
cwde
cwde
xchg
pushf
and
ins
cwde
int
pop
lods
pop
loope
addr16
popf
xor
mov
and
lahf
sbb
ins
mov
pop
mov
inc
dec
cld
(bad)
push
xlat
push
push
je
sbb
push
or
call
shl
jp
lods
ret
shl
push
add
inc
fbld
mov
inc
pop
mov
and
push
cmp
jge
add
xor
in
fnstsw
je
dec
push
and
mov
xor
retf
pusha
call
mov
sahf
lea
in
call
mov
sub
out
shr
cmp
push
inc
stos
add
jb
fbld
pop
test
cmp
sub
sub
lock
add
retf
fcomp
or
sbb
pop
and
clc
adc
push
push
ret
jge
pop
or
stos
(bad)
jle
pop
fcmovnb
jb
cmp
aam
in
add
sbb
pop
mov
jae
or
mov
adc
inc
pop
loop
push
push
push
jne
sub
fstp
out
mov
push
and
pop
pop
pop
cld
test
jne
pop
mov
in
rol
je
or
fbstp
stc
inc
loopne
and
add
push
fdivrp
test
not
sbb
and
jne
push
ret
push
loop
cld
gs
mov
push
add
iret
dec
inc
and
dec
add
push
push
cmp
movs
stc
inc
xchg
jecxz
scas
jmp
or
add
dec
rcr
(bad)
push
mov
inc
inc
imul
ins
add
inc
adc
pop
adc
mov
cmp
icebp
cmp
ja
xor
mov
js
scas
sti
not
xchg
mov
inc
sub
cli
dec
sbb
sbb
les
cmc
add
push
mov
int3
scas
rcr
mov
xor
mov
mov
sub
jae
xchg
rol
pop
ss
and
push
or
and
push
fadd
push
pop
cmp
jb
pop
loope
pop
into
jne
ficomp
xchg
pop
imul
jbe
or
ins
adc
ret
cdq
xor
mov
in
clc
dec
cmp
pop
push
clc
outs
or
fcmovb
cmp
cmp
mov
jmp
sub
add
push
push
cmp
hlt
sub
shl
and
sub
rol
xchg
pop
hlt
push
and
mov
test
inc
mov
ret
inc
mov
xor
mov
loop
daa
push
add
enter
call
pop
inc
outs
xchg
(bad)
cmp
cmp
idiv
rol
cld
imul
in
inc
(bad)
shl
inc
and
jb
and
loope
retf
test
sub
adc
add
or
push
cld
add
cmp
les
pop
into
inc
adc
or
shl
add
inc
mov
dec
pop
sub
sbb
and
pop
and
mov
and
arpl
pushf
push
stos
xchg
ret
jmp
push
popa
lods
loope
add
popf
cmp
pop
dec
dec
mov
sub
or
add
pop
cmp
or
cdq
or
pop
mov
add
mov
les
adc
mov
adc
cmp
jb
mov
xchg
sbb
or
jmp
pop
jae
and
ss
xor
pop
dec
(bad)
(bad)
mov
inc
aas
push
adc
cmp
enter
cld
or
fiadd
mov
pop
inc
add
inc
pop
or
test
xchg
jnp
push
sub
mov
outs
(bad)
or
fdiv
adc
call
pop
les
and
out
add
cmp
xchg
pop
test
outs
cld
ins
jmp
test
adc
sub
test
sbb
call
lods
pop
push
ret
(bad)
mov
mov
or
add
fidiv
add
cwde
or
cmp
das
lds
in
mov
add
in
in
inc
daa
dec
adc
js
shl
xor
nop
fwait
jo
push
test
sub
or
loopne
mov
adc
xlat
or
mov
mov
std
retf
or
jno
enter
(bad)
jbe
dec
xchg
lods
fstp
or
or
push
loopne
mov
dec
or
cmps
push
jle
or
xchg
or
pop
jmp
ja
cld
(bad)
ret
add
bound
test
and
pop
xor
daa
hlt
cmp
pop
sbb
jns
adc
push
mov
pop
mov
mov
std
pop
pushf
pop
jmp
add
jbe
jb
test
or
in
loope
fsub
retf
cmp
push
pop
icebp
(bad)
mov
and
pop
aam
xlat
repnz
push
sub
call
cs
jbe
movs
stc
mov
pcmpgtd
paddw
jb
inc
pop
pop
or
(bad)
inc
test
bound
dec
pusha
xor
aas
repz
imul
inc
push
leave
pop
fwait
pop
xchg
pop
xchg
and
sbb
jge
loop
pop
adc
xor
mov
fcomp
pop
nop
cmp
adc
loope
push
mov
dec
pop
imul
mov
ror
icebp
lods
lea
cmp
dec
sub
adc
jge
inc
xchg
dec
sti
push
inc
adc
aaa
jne
or
out
out
inc
fcomp
inc
inc
jmp
cli
outs
sub
jg
push
push
iret
mov
pusha
pop
fcomp
ret
add
in
ror
adc
push
jb
daa
push
mov
ret
add
ret
retf
je
mov
mov
fnstenv
jne
sbb
adc
add
or
jge
or
add
arpl
shr
(bad)
jne
pop
ret
push
in
or
retf
mov
std
stc
xor
xor
inc
add
loope
jns
xlat
sub
xor
je
shr
adc
xchg
outs
mov
add
enter
(bad)
jp
(bad)
pop
or
cld
ins
adc
cmp
inc
xor
cmp
(bad)
adc
fsubr
rol
and
pop
adc
mov
adc
or
jmp
cmp
push
mov
add
stc
and
loop
cmp
movs
fst
in
lea
sbb
sbb
jg
dec
stos
push
sbb
data16
shl
add
cs
pop
ins
mov
test
retf
(bad)
jmp
rol
pop
pusha
xor
(bad)
cmp
or
adc
je
cli
inc
push
fwait
cwde
dec
jo
ins
dec
sbb
rol
mov
or
rcl
int3
pop
push
pusha
mov
int3
inc
or
jmp
and
add
call
jae
in
push
cmp
les
push
pop
jo
dec
or
leave
push
pop
adc
call
add
push
loope
or
iret
push
xchg
cmp
stc
cmc
mov
out
jae
ins
call
push
inc
or
add
xor
adc
mov
loopne
cld
mov
rep
lods
aam
or
test
push
mov
add
mov
pusha
repz
or
je
popf
sub
inc
cdq
ins
mov
add
fwait
clc
and
loopne
leave
or
xchg
mov
xchg
push
ret
push
push
mov
jp
sbb
mov
mov
or
adc
sbb
es
inc
ins
gs
imul
pop
lods
dec
cld
push
rcl
push
push
into
push
adc
cmp
mov
jbe
jg
imul
push
bound
xor
gs
inc
into
cmc
sub
adc
mov
ins
jmp
mov
mov
xor
jo
or
mov
and
imul
es
gs
stc
out
mov
outs
pop
push
stos
mov
or
adc
jmp
imul
jae
imul
sub
xor
(bad)
and
lock
push
mov
jl
inc
add
pop
mov
mov
ins
outs
lock
out
push
cmp
sar
add
sub
push
xchg
add
adc
aam
cmp
xchg
add
adc
ins
fild
fs
enter
rcl
lods
pop
push
enter
add
adc
fsub
ror
push
sbb
and
shl
in
pop
push
in
push
gs
ins
add
movs
mov
cmp
test
fwait
adc
add
clc
push
cmp
push
clc
lahf
arpl
and
or
pop
enter
dec
loopne
rcr
stos
mov
xchg
push
int3
mov
jl
sbb
dec
adc
push
inc
dec
cmp
inc
jp
fs
dec
test
jl
(bad)
or
call
imul
cmp
jge
cmp
or
jp
lods
jmp
jns
fadd
push
push
(bad)
jmp
fidivr
ja
cmp
fst
fdiv
xchg
adc
fidiv
pop
std
push
adc
push
xor
add
ins
fisub
push
pushf
push
jp
pop
addr16
ret
fcom
pop
jne
icebp
add
jae
js
cmps
in
test
std
inc
inc
add
jb
shl
push
clc
mov
or
jo
out
inc
pop
mov
mov
retf
mov
mov
fistp
jge
daa
push
cmp
pop
mov
dec
test
lock
sbb
enter
mov
hlt
sar
add
sahf
ret
pop
sub
dec
leave
loopne
jno
lods
loopne
ins
cmps
xchg
in
push
inc
icebp
mov
cmp
adc
xchg
inc
shr
xchg
cmp
push
adc
clc
mov
dec
addr16
je
pop
jg
push
push
jae
push
mov
cld
sub
cmp
mov
push
add
push
outs
pop
les
mov
push
push
xor
pop
jecxz
cli
push
les
push
lock
das
(bad)
push
mov
push
mov
das
test
je
add
and
mov
fldcw
mov
pop
mov
addr16
sbb
sahf
add
gs
test
sbb
fild
xchg
xchg
dec
repz
add
fsub
outs
addr16
lods
push
mov
and
cmps
push
jge
xor
add
jmp
sub
ins
adc
imul
jg
cmp
test
jp
pop
adc
fmul
not
out
pop
mov
push
fadd
imul
sar
movs
aam
adc
push
test
je
pop
lods
mov
pop
pop
cmp
je
push
mov
push
pop
daa
cmps
(bad)
or
mov
pop
mov
fcmovu
pop
test
add
and
pop
loop
push
push
push
(bad)
shl
jl
je
pusha
std
pop
push
and
ret
lock
iret
sbb
push
iret
gs
das
push
or
cmp
jmp
jle
sbb
xchg
imul
push
in
or
mov
fidivr
add
stos
fcomp
mov
jne
pop
inc
pop
xchg
inc
jne
sbb
les
add
fs
xchg
nop
mov
inc
push
cwde
(bad)
dec
cli
data16
ror
push
mov
push
or
popf
adc
adc
xlat
dec
pop
mov
inc
les
adc
inc
cmp
jmp
sbb
mov
test
push
pop
aam
dec
dec
adc
add
push
stos
mov
jmp
mov
fild
(bad)
mov
fsubr
lock
cmps
jns
add
push
jo
dec
out
xor
xlat
add
mov
mov
mov
test
pusha
and
adc
xchg
pop
mov
add
enter
add
outs
sub
es
or
add
xor
(bad)
push
jmp
lods
add
cwde
push
and
cmp
cmps
mov
cwde
and
add
out
loop
mov
add
les
cwde
rol
ret
or
rcr
xor
(bad)
pop
aam
xchg
fmul
in
xchg
repz
retf
jbe
push
(bad)
ret
jne
push
push
loopne
push
test
retf
dec
xor
sti
fadd
scas
aam
js
add
fmul
xchg
inc
add
inc
or
lods
aam
fcom
imul
ficomp
dec
fcom
inc
in
mov
aaa
jo
ret
mov
inc
cmp
mov
mov
aaa
mov
cmp
call
pop
mov
push
fcom
sbb
fwait
push
add
cmp
push
inc
push
sti
push
sbb
xchg
iret
add
js
addr16
mov
imul
test
(bad)
shl
xor
pop
out
je
mov
sub
mov
fwait
jo
shr
cmp
hlt
fwait
cmps
add
sar
into
cmp
fnsave
loopne
sbb
inc
jnp
sub
pop
mov
sbb
aas
add
mov
test
(bad)
(bad)
cli
loopne
jmp
pop
jg
call
fdiv
mov
cwde
repnz
inc
shl
sbb
or
aaa
and
lea
jl
and
mov
out
loopne
sub
in
into
cmp
loopne
ret
push
push
mov
outs
paddd
push
lea
es
mov
cmp
mov
add
xchg
xor
sbb
sti
cwde
or
adc
(bad)
push
jne
cmp
mov
nop
movs
mov
sbb
mov
das
add
ins
lahf
aam
je
es
pushf
mov
pushf
aam
push
loopne
in
push
iret
mov
retf
mov
ret
pop
jmp
xchg
push
jne
lahf
sub
(bad)
lahf
retf
stc
adc
inc
adc
and
xchg
les
xor
pop
fistp
sub
jle
dec
xchg
inc
in
dec
sub
jmp
inc
inc
(bad)
inc
dec
cmp
lea
jl
jp
xchg
icebp
shl
repnz
mov
bound
test
loopne
sub
sbb
push
jno
fcom
mov
push
jecxz
add
dec
cmp
mov
add
mov
pop
je
jp
push
ror
mov
jb
mov
and
sbb
(bad)
adc
mov
fld
inc
ret
lea
pop
ds
cmps
scas
fiadd
and
adc
arpl
cli
push
push
(bad)
mov
cmp
push
inc
mov
je
mov
pop
dec
and
in
jmp
stc
jg
jne
(bad)
sbb
test
in
push
xchg
push
es
lea
mov
jge
test
je
mov
sbb
jl
jbe
lea
clc
leave
or
and
xor
(bad)
or
push
and
push
push
ret
jbe
sub
cmc
pop
pop
push
or
mov
lea
imul
dec
mov
xor
adc
sahf
pop
add
or
jo
pusha
std
and
popa
jo
xchg
(bad)
(bad)
loop
fdivr
cmp
mov
test
test
jmp
cmp
mov
add
fimul
or
or
hlt
add
sti
int3
pop
movs
push
into
xchg
cmp
sub
mov
jne
mov
js
ficom
pop
pop
mov
cdq
and
shr
je
jb
pop
mov
data16
adc
jb
and
sbb
jae
loopne
push
add
sbb
sbb
adc
or
loope
adc
dec
mov
inc
mov
jne
dec
lock
or
mov
into
mov
cld
movs
shr
and
cmp
outs
sbb
xchg
and
lods
nop
test
inc
mov
pop
and
jo
ret
and
add
jecxz
enter
xor
jecxz
pop
test
cmps
in
enter
movs
add
push
jbe
ret
mov
cmp
hlt
add
pop
mov
jae
je
sbb
out
adc
mov
pop
or
scas
(bad)
int3
inc
inc
adc
jecxz
pmaxsw
sub
jb
pop
jns
(bad)
fs
jbe
xor
ins
icebp
loopne
sub
xor
jp
fs
(bad)
push
push
jg
movsx
add
xor
sbb
and
inc
or
aas
mov
mov
cmp
imul
add
jle
jbe
push
push
or
retf
inc
or
repz
add
or
xchg
or
cmp
push
push
push
xor
lods
cmp
enter
mov
and
or
(bad)
outs
pusha
outs
clc
add
add
xlat
and
cmp
and
jle
jle
pop
cdq
push
add
aas
and
shr
mov
mov
or
push
scas
add
ror
in
or
inc
fild
pop
sbb
cmc
mov
adc
mov
cmps
dec
fnstcw
add
adc
jo
pop
iret
jae
je
ss
daa
sti
sbb
jne
push
fadd
lods
les
jo
popa
shr
call
sbb
inc
adc
je
sub
xchg
pop
scas
out
dec
call
xchg
cmps
mov
in
cmp
sbb
sbb
pop
bound
mov
cmp
std
arpl
pop
lea
jp
jg
mov
aaa
(bad)
shl
jmp
clc
(bad)
ror
add
inc
ret
pop
mov
jne
cwde
int
adc
jle
xor
pop
sbb
in
ja
inc
retf
cmp
test
mov
add
xchg
pop
push
mov
push
add
sub
or
gs
je
retf
in
ins
and
repz
push
fdivr
test
dec
dec
sar
pop
jle
dec
leave
mov
adc
dec
sub
scas
dec
mov
out
hlt
sbb
sar
jp
enter
imul
out
xor
jbe
and
in
xor
push
fs
jmp
cmp
jae
sub
xor
lea
nop
(bad)
std
pop
pop
or
cmp
xchg
sbb
xchg
mov
mov
fdivr
or
ret
loopne
loop
cmp
fadd
or
or
test
jmp
fcom
or
popa
mov
js
or
sub
push
in
dec
fwait
imul
sub
shl
call
mov
sbb
push
loop
jmp
inc
nop
cmp
ror
aam
shl
adc
mov
push
jbe
mov
shr
mov
shl
je
add
call
out
or
stos
and
stos
jae
push
mov
test
pop
cmp
jg
push
add
mov
pop
dec
or
mov
scas
or
jne
fsubrp
js
pusha
or
dec
jbe
cmp
xor
aam
xchg
rcr
or
mov
jne
mov
add
sbb
retf
out
cmps
pop
(bad)
mov
movs
pusha
or
and
into
or
into
test
pop
sti
int3
loope
push
aas
add
sbb
add
mov
sbb
dec
push
lock
mov
js
fild
xor
dec
inc
loopne
sub
push
inc
and
push
jne
cli
and
outs
cmp
push
out
push
jbe
ins
inc
data16
sub
cmp
jae
lea
mov
les
inc
hlt
jl
or
jg
stos
jle
shr
mov
jbe
pop
hlt
clc
adc
hlt
cmp
pusha
cmp
jne
inc
add
add
mov
test
loop
lea
sar
xor
xchg
xor
dec
(bad)
cmp
into
cmp
clc
inc
push
ins
lock
loop
adc
add
enter
add
push
jle
mov
mov
inc
xchg
mov
aam
xor
push
sbb
enter
repnz
or
lods
push
stos
xor
inc
aaa
cld
data16
jmp
mov
inc
lods
dec
pop
push
lods
js
ds
(bad)
mov
fistp
mov
into
or
cmp
pusha
sbb
imul
and
ret
or
rcr
add
out
cmp
pop
push
adc
test
cmc
pusha
imul
add
jmp
lea
add
sbb
jmp
pop
ret
xlat
jge
xor
pop
dec
jne
mov
xchg
jae
or
call
xchg
mov
and
movs
jmp
xor
or
pushf
std
mov
int3
and
or
pusha
dec
js
jp
div
ror
aam
cmp
adc
movs
sub
and
mov
jge
js
movs
adc
test
pusha
stc
in
test
sub
or
cld
les
and
imul
movd
dec
pop
jo
push
pop
mov
jmp
pop
sti
das
push
sbb
push
add
mov
ror
mov
pop
pop
sub
cmp
mov
inc
jmp
cdq
das
aaa
jmp
cmp
cmp
je
popf
je
xchg
push
popf
enter
xchg
mov
jecxz
add
adc
and
mov
popf
adc
cmp
stos
push
popa
adc
adc
sbb
sub
int3
cmp
add
jno
mov
jle
outs
or
lea
gs
addr16
rcr
pop
and
sbb
or
push
je
xchg
cmp
sub
mov
cmp
push
and
daa
es
xchg
into
push
not
js
out
arpl
sbb
xchg
call
jmp
or
push
dec
or
and
pop
add
or
xor
mov
and
pop
jmp
sbb
pop
push
popf
mov
(bad)
jb
test
dec
(bad)
and
sub
je
cmp
add
ss
cmp
jne
push
push
mov
push
adc
jmp
inc
or
adc
aad
and
je
mov
adc
jb
cmp
jbe
test
sbb
into
push
lock
mov
clc
or
jmp
das
cmp
pop
shl
(bad)
ja
cmp
xchg
push
loop
add
and
inc
(bad)
call
push
es
pop
push
add
ret
inc
jle
jl
pop
test
add
in
repnz
test
neg
mov
sbb
in
sub
or
loopne
dec
ret
sub
lods
pop
(bad)
push
leave
adc
jle
pop
or
(bad)
mov
adc
mov
or
lds
loop
fstp
fsub
adc
hlt
or
dec
(bad)
ficomp
dec
imul
dec
push
and
outs
clc
xor
dec
jle
push
sti
add
lock
xlat
(bad)
pop
jp
clc
pop
adc
(bad)
jmp
add
push
mov
cmp
clc
mov
test
xchg
rcr
mov
add
add
and
add
jge
enter
cmp
mov
jle
adc
sub
push
mov
push
fs
or
arpl
xor
test
push
mov
mov
or
pusha
or
sbb
or
jle
or
push
and
scas
inc
sbb
icebp
(bad)
in
push
adc
push
pop
idiv
sub
add
enter
shr
adc
pusha
dec
mov
adc
outs
dec
inc
call
jne
xor
cmp
ret
or
adc
jo
pop
in
pop
nop
fwait
cmps
add
mov
jmp
imul
loopne
push
fsubp
xchg
xor
dec
cmp
ins
xor
je
mov
sar
ror
ror
or
ficom
xor
push
add
and
cld
into
xchg
call
mov
inc
or
mov
cmp
add
cmp
sub
xor
cmp
sbb
adc
xor
and
xor
ror
or
bound
ret
push
mov
or
add
sbb
adc
out
fsubr
add
mov
(bad)
into
ret
or
cmp
mov
pop
loop
xor
pushf
mov
sbb
mov
adc
test
sbb
mov
test
adc
fidivr
pop
jne
pop
lahf
add
in
dec
push
ds
and
sub
je
add
and
mov
adc
push
cmp
sbb
or
inc
dec
sbb
inc
les
test
ffree
data16
push
xor
or
adc
or
rcl
enter
pop
adc
mov
add
nop
push
jb
mov
je
add
sbb
mov
and
cmp
gs
mov
fimul
and
(bad)
mov
je
mov
sbb
retf
sbb
add
test
adc
gs
mov
int3
and
sbb
pop
in
clc
and
out
and
enter
sub
xchg
add
mov
mov
or
lods
cmp
inc
cs
and
push
enter
sbb
dec
sbb
cmp
add
dec
pop
mov
pop
ins
pusha
xor
xchg
add
push
in
lods
ins
pop
xchg
pop
(bad)
cld
sub
inc
mov
mov
inc
cmp
or
mov
push
mov
ret
dec
pop
js
sar
push
mov
inc
inc
adc
icebp
out
xor
enter
fistp
or
adc
fcomp
push
xchg
push
or
sbb
in
lock
fistp
dec
mov
mov
inc
mov
data16
add
sbb
add
sbb
scas
je
xchg
mov
xor
push
jmp
sub
mov
sub
sub
std
add
mov
jo
lea
add
rcr
jo
movs
mov
ja
cmps
cdq
adc
xor
jb
pop
aas
adc
fmul
mov
adc
jnp
(bad)
into
clc
je
dec
jmp
sbb
and
sahf
or
stc
shl
or
test
pop
pop
sar
lea
xchg
sbb
adc
out
shl
cmp
and
dec
ins
jmp
lods
add
inc
or
loope
push
or
fdivr
mul
add
loope
rcr
adc
jno
cmp
sbb
faddp
jnp
add
push
adc
repz
jmp
mov
xor
(bad)
cmp
shr
rcr
shr
rcr
or
jne
div
mov
mov
sti
div
mul
add
jb
cmp
or
cmp
add
sahf
test
add
outs
push
mov
loope
mov
fs
int
sar
sub
test
jns
mov
and
add
into
jle
mul
sbb
xor
mov
gs
sar
push
je
mul
movs
push
adc
lea
cmp
jns
pop
jle
jle
pushf
push
mov
enter
push
jae
lods
adc
cmp
hlt
jg
cmp
adc
test
jg
cld
(bad)
sub
mov
jo
xor
add
push
ret
test
mov
xchg
fistp
dec
aas
or
inc
add
stos
lods
inc
and
mov
sbb
cmp
mov
gs
adc
fadd
add
enter
(bad)
rcr
mov
and
nop
push
sbb
fadd
mov
or
ins
pop
add
and
jecxz
cwde
or
pop
inc
ficom
mov
sbb
daa
stos
jne
cmp
push
sbb
ins
dec
les
push
sbb
sbb
push
sub
adc
je
les
push
pop
push
pop
sub
movs
add
(bad)
xlat
adc
jb
or
push
imul
xchg
ror
sub
or
dec
push
das
sar
adc
je
xchg
add
and
test
sub
pop
push
jbe
mov
or
add
inc
push
inc
mov
mov
fst
out
cmps
les
leave
ret
lea
inc
in
popf
jle
push
fstcw
mov
adc
popf
cli
das
adc
cli
push
push
mov
lods
xchg
cmp
test
mov
out
popa
or
cmps
lock
sub
dec
aad
pop
call
mov
push
jmp
sub
and
jne
and
fld
dec
enter
mov
fdiv
adc
fistp
lsl
sbb
or
pop
hlt
adc
pop
or
and
ret
mov
cmp
xchg
bound
hlt
pop
lea
xchg
(bad)
je
ffreep
pop
add
add
xor
sub
sbb
pop
test
inc
js
inc
aam
fs
sbb
or
cld
mov
pop
adc
out
jns
lea
xchg
sbb
sbb
in
jnp
(bad)
outs
scas
hlt
push
cli
(bad)
mov
mov
mov
push
scas
cmp
scas
inc
nop
ret
psubsb
call
push
popa
cmp
sub
test
xor
cmp
xchg
in
enter
mov
xor
scas
test
data16
retf
cmp
loope
push
mov
inc
jmp
add
ret
jmp
bound
retf
mov
mov
movs
xchg
retf
add
xor
inc
mov
mov
stos
dec
(bad)
(bad)
xchg
adc
cmc
and
add
push
popa
mov
lods
je
and
cmp
(bad)
adc
cmp
fnstsw
fild
mov
mov
xchg
sbb
cdq
mov
pop
jae
cmp
scas
mov
xchg
add
or
fdiv
adc
xor
nop
ret
inc
movs
bound
push
sbb
cmp
aam
test
pusha
mov
xchg
xlat
and
cmp
pop
sbb
call
mov
and
push
jmp
and
cmp
mov
mov
mov
lds
cmp
fs
into
sub
shl
mov
cmp
repz
ins
inc
xor
inc
test
push
push
imul
movs
test
xor
mov
mov
(bad)
(bad)
jp
dec
lfs
mov
push
mov
shl
pop
mov
add
xor
fistp
pop
rcr
int
sub
inc
(bad)
add
add
and
sbb
rcl
xor
mov
cmp
inc
sbb
in
and
pop
jo
inc
and
and
or
cwde
test
sbb
enter
jo
dec
sahf
aam
stos
cmp
std
idiv
psrad
push
iret
ins
pop
cmp
pop
adc
js
mov
mov
adc
and
xchg
sbb
mov
pop
or
add
xchg
pushf
adc
xor
mov
js
jle
clc
test
add
add
aaa
mov
dec
xor
dec
jnp
mov
daa
dec
cmp
retf
sbb
sub
dec
add
(bad)
fxch
shl
add
mov
dec
repnz
xor
cdq
nop
xor
inc
lock
sbb
fild
push
pop
mov
fsub
test
js
(bad)
dec
dec
ret
and
stos
xchg
cmp
jmp
ins
outs
ror
and
cs
int
pop
arpl
add
lea
xor
jle
push
out
mov
bound
fbld
fild
int3
jecxz
nop
and
fisub
and
mov
test
or
and
addr16
cmp
jecxz
aad
jne
or
pop
frstor
daa
jecxz
in
outs
or
rcr
adc
outs
inc
rcr
ret
pusha
je
push
inc
push
add
add
cld
es
outs
add
cdq
mov
dec
out
push
je
inc
cmp
sbb
cmps
add
pop
push
inc
out
nop
pop
je
push
and
jnp
add
movs
or
pusha
cmp
pop
pop
mov
pop
adc
sbb
jb
fwait
sbb
sbb
mov
and
sub
adc
adc
mov
or
push
dec
xor
aaa
mov
inc
mov
pop
call
mov
push
jb
(bad)
sar
jbe
enter
dec
xor
mov
popa
test
sbb
inc
in
xor
pushf
loope
cmps
adc
xlat
pop
(bad)
cmps
mov
call
std
pop
cli
sbb
cld
ss
(bad)
rcl
jp
xchg
push
and
add
push
out
adc
xchg
adc
dec
push
repnz
pushf
xor
shr
mov
pop
adc
sbb
jo
cmp
mov
outs
cmp
adc
or
sbb
inc
add
mov
aam
sbb
or
adc
xlat
icebp
inc
test
int3
fs
sub
clc
mov
loopne
sub
or
sti
jb
popa
out
mul
idiv
pop
je
push
inc
push
push
lock
mov
mov
sbb
call
dec
fdivr
dec
in
add
scas
sahf
push
jg
(bad)
loopne
clc
jmp
push
int3
xchg
xor
mov
jmp
test
ror
mov
and
pop
sar
xlat
jno
add
mov
adc
cmp
ins
push
and
pop
ins
rcr
add
add
inc
pop
mov
xor
sbb
sahf
sub
cmp
mov
mov
mov
jo
or
shl
(bad)
pop
jnp
jg
dec
inc
push
add
cwde
inc
xchg
pop
mov
push
das
inc
add
retf
mov
aaa
jno
xchg
mov
shr
adc
jne
add
inc
sub
xor
sub
and
cmp
clc
push
mov
sbb
dec
movs
mov
adc
inc
sbb
cmp
push
aas
or
mov
in
jp
aaa
sub
add
cmps
mov
xchg
call
add
cmp
inc
pop
dec
dec
aas
dec
retf
mov
mov
idiv
xor
or
stc
xor
out
lea
mov
aam
or
and
pop
jno
push
pushf
inc
jmp
xchg
mov
in
int3
sbb
movs
outs
leave
push
call
mov
fisub
or
cld
daa
mov
clc
(bad)
pop
push
dec
outs
and
icebp
cmps
aas
movs
jg
popf
dec
mov
sub
jbe
movs
add
sti
call
xchg
jp
or
mov
and
mov
and
mov
jp
outs
aas
cs
mov
rol
sub
mov
(bad)
mov
sub
push
ret
sbb
adc
sbb
add
ror
or
jl
inc
in
test
sar
or
add
and
test
cmc
cmp
shr
and
adc
retf
aaa
xor
jl
addps
(bad)
je
mov
mov
or
xchg
dec
mov
jmp
(bad)
push
mov
and
shl
add
jmp
fistp
sbb
mov
ins
popa
inc
dec
xor
loope
jp
ret
mov
sub
jmp
mov
jo
retf
and
shr
mov
cmp
cmp
xchg
mov
push
cmp
lods
adc
fmul
movsx
or
dec
imul
push
push
pop
ins
sbb
fcom
jmp
pop
xor
inc
xor
es
mov
and
gs
fwait
inc
jmp
sbb
jne
jl
add
push
cmp
push
adc
cmp
push
and
mov
jnp
popf
push
repnz
or
xor
ficomp
mov
call
add
mov
mov
out
mov
mov
mov
jne
clc
ret
sbb
push
push
sub
mov
push
mov
sti
in
cmp
pusha
cmp
test
adc
leave
add
cmp
mov
loopne
push
sti
cmps
je
jg
scas
or
lea
push
test
mov
jl
imul
loopne
and
adc
push
xchg
push
and
sbb
inc
and
mov
jae
call
mov
inc
or
mov
or
and
add
pushf
inc
cdq
shl
and
cmp
sub
inc
sbb
add
add
mov
xchg
lock
pop
mov
leave
data16
or
jne
nop
dec
or
(bad)
and
add
pop
adc
call
mov
je
add
and
cmp
xor
cmp
pop
loopne
fs
xchg
pop
inc
adc
je
push
xor
jne
test
and
jo
es
jns
lods
or
and
jmp
push
xor
shr
es
xor
inc
add
pop
adc
sub
int3
dec
in
and
dec
or
cmps
adc
and
int3
ret
cmp
sbb
push
push
jbe
jb
xor
sbb
adc
mov
inc
dec
retf
add
or
pop
jmp
stos
push
push
pop
inc
loop
mov
in
jecxz
enter
fwait
into
add
ja
lea
sbb
jb
jp
out
push
push
gs
fisub
push
push
in
dec
add
rcr
push
test
jp
ret
retf
js
daa
popw
mov
mov
ret
push
or
unpcklps
add
nop
push
add
and
test
inc
stos
or
fmul
push
bt
nop
push
add
mov
hlt
add
mov
icebp
out
mov
je
test
adc
dec
lahf
push
jmp
push
cs
jmp
sbb
mov
neg
mov
in
jmp
loopne
in
(bad)
mov
add
cmp
jne
mov
test
loopne
lock
icebp
ror
fst
mov
not
push
iret
int3
sub
in
test
ins
xor
or
stos
add
pop
call
xchg
inc
adc
bound
not
pop
je
mul
clc
cmovnp
sar
lock
adc
imul
cmc
or
mov
or
push
bound
fadd
mov
xor
dec
add
rcr
and
(bad)
ja
mov
call
sbb
rcl
fadd
adc
out
movs
lahf
pop
or
mov
pop
add
push
lea
loope
loopne
scas
add
mov
and
jnp
movs
movaps
push
fisubr
(bad)
sbb
pusha
leave
mov
add
pop
sbb
ins
mov
sti
lahf
fstp
cmp
pop
push
cmp
es
cmp
and
add
xor
mov
retf
adc
enter
retf
retf
retf
out
mov
sbb
out
retf
and
pop
dec
mov
pop
into
mov
push
sub
add
fmul
movs
inc
sbb
fdivr
jbe
sahf
pop
imul
sub
sahf
out
aas
lods
adc
shl
cmp
ins
or
outs
fsub
dec
add
and
mov
in
dec
inc
jo
pop
mov
rcl
mov
data16
xchg
mov
or
add
ror
in
call
addr16
lea
or
ror
sbb
push
or
neg
xchg
xor
cmp
jo
add
fsubr
inc
not
or
push
enter
mov
mov
movs
dec
(bad)
div
hlt
jge
push
loope
xlat
push
in
fist
xor
push
std
int
jle
outs
jne
pop
adc
imul
outs
je
ins
jne
sbb
and
in
in
mov
dec
cmp
and
sbb
jo
call
add
push
add
or
data16
scas
rol
jmp
xchg
xchg
lea
fnstsw
dec
aad
mov
in
jg
mov
xor
or
xabort
mov
jmp
test
sbb
inc
add
(bad)
stos
or
mov
not
ret
cmps
mov
and
data16
out
xor
in
loope
push
mov
cli
dec
(bad)
loopne
xor
pop
sbb
dec
or
xor
mov
mov
loopne
gs
fcom
shr
mov
mov
popf
enter
das
test
movs
shr
into
mov
test
hlt
(bad)
jmp
or
push
push
push
and
dec
add
loopne
sbb
in
pop
ins
mov
adc
push
lock
ficom
inc
sub
push
mov
pop
dec
inc
or
add
bound
loopne
mov
jmp
push
ret
and
(bad)
fwait
add
pop
sbb
add
push
xchg
pop
xor
enter
add
lahf
adc
or
and
leave
cmp
test
neg
jl
push
and
not
add
clc
scas
call
call
in
je
or
xor
xor
or
jle
dec
mov
jno
scas
dec
dec
into
dec
xor
xchg
sbb
jmp
pop
test
jl
inc
and
enter
adc
xor
mov
jo
pop
or
mov
push
jmp
dec
out
popf
mov
push
inc
xor
or
adc
sti
mov
push
push
gs
mov
mov
push
lahf
jle
test
js
loopne
and
fmul
shl
push
ja
test
test
mov
jnp
push
add
adc
and
mov
popa
or
xchg
es
gs
jle
dec
push
jmp
add
mov
cmc
pop
ins
inc
fmul
loopne
je
sub
pop
popa
push
add
fadd
bound
mov
loop
test
retf
push
data16
or
out
and
or
xor
(bad)
ja
adc
adc
or
int
sbb
sub
add
cmc
leave
sar
push
push
movs
mov
call
mov
jns
outs
rol
popa
jo
cmp
mov
and
(bad)
sbb
fiadd
pop
je
jmp
inc
adc
and
rcl
pusha
jo
mov
dec
hlt
dec
aaa
jp
add
(bad)
ficomp
jmp
or
xor
mov
pcmpeqb
jmp
dec
jecxz
fcos
outs
pop
mov
inc
inc
cli
pop
pop
ret
neg
add
sub
push
mov
pop
jecxz
cdq
cdq
das
dec
cwde
arpl
lock
mov
es
and
les
mov
cli
mov
aad
jo
fiadd
push
aam
(bad)
sbb
mov
cmp
and
fnsave
add
mov
pop
inc
data16
shl
jne
cmp
jne
push
jne
fwait
sbb
add
sbb
inc
(bad)
pop
pop
test
arpl
es
inc
jmp
jne
push
add
ss
dec
lea
cmp
mov
add
jmp
add
mov
add
test
lea
addr16
test
xchg
out
enter
mov
loop
pcmpeqd
add
stos
sbb
test
and
loop
push
adc
or
(bad)
fild
or
jne
fmul
mov
jmp
call
and
cmp
mov
xchg
out
shr
loopne
fmul
mov
aas
mov
repz
mov
add
mov
ins
lock
mov
sub
jmp
cmp
ja
movsx
bound
dec
ins
add
mov
dec
pop
sar
ins
in
cmp
mov
or
orps
ja
out
lock
enter
lea
dec
ret
and
ss
mov
repnz
je
cmc
outs
test
or
dec
dec
lahf
or
pop
dec
sub
and
jnp
sbb
add
add
mov
or
add
jecxz
stc
sub
mov
cmp
push
mov
ror
pop
mov
stos
clc
(bad)
fidivr
fsubr
mov
adc
sub
rol
enter
fmul
sbb
outs
jmp
imul
fdiv
jno
test
ror
jmp
fcmove
mov
or
je
or
push
cwde
mov
sub
xor
sub
mov
loopne
mov
cmp
mov
leave
sub
adc
and
movs
iret
sub
jg
add
shr
pop
mov
(bad)
in
leave
xor
outs
cmp
mov
jecxz
dec
fucomi
cwde
aas
fs
pop
cmp
push
mov
outs
call
xchg
mov
xor
(bad)
jge
xchg
mov
xor
int
xchg
cmp
loopne
jg
mov
mov
mov
lock
mov
outs
add
and
test
outs
bound
mov
in
bound
cmp
mov
jl
inc
je
add
sahf
adc
or
rol
ss
int3
hlt
loopne
mov
js
aaa
adc
mov
mov
dec
xor
(bad)
dec
push
mov
mov
test
add
sub
fistp
mov
push
sbb
pop
fimul
mov
mov
popa
call
push
add
jne
mov
or
push
les
mov
xor
dec
cmp
je
push
repz
sar
loopne
sub
fdiv
scas
shl
daa
int3
out
sahf
fist
inc
leave
je
movzx
daa
jmp
lea
push
add
sub
hlt
mov
jmp
mov
sub
inc
xor
jo
fisubr
sub
mov
lods
push
js
icebp
inc
arpl
leave
shl
sbb
push
out
mov
jo
iret
add
mov
inc
outs
sub
addr16
je
or
out
clc
and
cmp
sbb
loope
jns
repnz
dec
inc
call
cli
lods
test
add
pop
test
add
mov
in
push
pushf
pop
imul
mov
imul
push
and
pop
cmc
not
mov
jne
call
jb
xchg
dec
cmp
pusha
ret
aam
ja
xchg
lea
rcl
inc
mov
or
or
gs
pop
jecxz
cmp
dec
xchg
es
test
out
adc
dec
mov
xchg
add
sub
mov
or
add
sub
scas
and
adc
dec
(bad)
sub
sbb
sbb
scas
mov
fiadd
xor
ds
sub
ret
dec
inc
cmps
inc
cmp
push
fsubr
mov
pop
jae
cld
test
sbb
jb
stos
daa
pop
push
sub
adc
jl
jge
hlt
inc
add
and
xor
pop
sbb
mov
xchg
add
mov
or
and
test
cdq
(bad)
cli
(bad)
out
push
and
daa
sbb
(bad)
jg
jl
cmp
dec
jae
neg
adc
neg
jns
nop
mov
xchg
push
xchg
mov
imul
idiv
adc
(bad)
mov
scas
int3
fwait
jne
mov
dec
fdivr
aaa
jl
add
xchg
or
add
sbb
cs
jle
add
jecxz
mov
mov
mov
scas
push
inc
and
fbstp
cmp
add
ss
je
dec
jmp
mov
int3
cmc
push
xor
and
push
pushf
pop
test
mov
adc
sub
jmp
or
sub
or
inc
xor
dec
add
and
add
enter
mov
sub
push
or
push
not
pop
mov
retf
sub
fwait
lea
inc
retf
es
outs
aaa
mov
and
sbb
inc
sub
les
pop
dec
pushf
lods
je
push
jns
into
dec
cdq
jnp
pop
add
push
push
xchg
jp
add
push
add
jne
cmp
je
sbb
iret
je
movs
and
inc
cmp
jmp
retf
inc
lock
push
sbb
inc
xchg
jp
js
xor
je
dec
dec
and
adc
adc
test
and
dec
aad
dec
test
ss
cmps
inc
xor
call
cmp
ja
call
cmc
leave
mov
sahf
rol
mov
sar
jns
rcl
add
add
inc
add
or
add
cdq
shr
xchg
or
sub
dec
xchg
adc
ret
cmp
and
jle
jp
sub
xchg
mov
lds
inc
push
push
out
mov
add
shl
or
imul
dec
xor
stos
inc
push
add
add
add
adc
sub
shl
out
xor
sbb
jmp
mov
mov
inc
or
adc
cmp
sub
sbb
dec
xor
add
pop
adc
loop
sub
add
mov
jp
and
and
add
cmp
pop
hlt
cmp
(bad)
sub
je
call
or
adc
inc
je
outs
(bad)
jp
mov
popf
cmp
sub
dec
add
pop
call
push
push
push
and
popf
mov
jmp
or
out
jmp
sub
or
sahf
push
cmp
mov
push
out
or
push
aas
leave
fwait
and
pop
mov
paddq
jo
rcl
test
or
loop
scas
scas
sar
pop
or
sub
pusha
dec
ins
cmc
inc
and
inc
jl
jo
cmc
lock
pusha
adc
fild
jno
and
out
(bad)
loop
cmp
mov
sbb
cmp
push
jae
sti
add
movs
jno
rol
pop
inc
cmp
mov
and
arpl
loope
push
aaa
jnp
aaa
div
inc
es
dec
or
mov
or
add
cmp
sub
or
(bad)
lock
sar
call
cli
retf
lds
pusha
inc
or
into
xchg
sub
or
or
aad
cmp
inc
js
cmps
jge
stos
dec
mov
jmp
xor
or
adc
mov
mov
pop
inc
fcmovnbe
sti
cmp
mov
xor
test
sbb
pop
stc
mov
jb
cmp
fnsave
out
lods
les
push
adc
add
stos
les
or
add
sub
outs
inc
outs
addr16
test
push
pop
fadd
sub
ins
jb
shl
jne
dec
shl
fidivr
daa
je
test
push
mov
cmp
xor
and
retf
sbb
lea
add
cmp
jmp
push
adc
mov
inc
mov
push
dec
lods
jg
mov
mov
mov
aam
mov
jecxz
dec
cmc
and
pop
ret
mov
inc
jo
xchg
out
sub
add
out
pusha
movs
push
xchg
pop
inc
pusha
ja
int3
cmp
sub
ror
stos
dec
fild
pop
inc
(bad)
cmp
pop
adc
jmp
shl
sbb
lods
(bad)
gs
add
push
mov
and
inc
add
int
or
loopne
and
push
arpl
shl
mov
fadd
pop
mov
jle
ret
mov
mov
fld
xchg
mov
push
scas
mov
add
pop
(bad)
dec
jo
add
retf
dec
sar
jne
(bad)
cmp
pop
ins
cmp
mov
cmp
fsub
out
and
cdq
xchg
mov
xchg
mov
jns
push
or
mov
fist
in
add
inc
out
fwait
or
inc
add
mov
xchg
cmps
add
xor
cmp
fdivr
ja
add
jne
adc
bound
xchg
mov
sub
call
ret
jne
jae
out
xchg
dec
hlt
mov
and
shl
inc
mov
inc
inc
mov
or
pusha
cdq
push
jne
pop
mov
daa
xchg
mov
inc
inc
mov
push
adc
nop
xor
adc
test
fsubr
sub
pop
add
cmp
test
pop
aam
mov
xchg
push
popf
sub
or
adc
pushf
add
(bad)
push
jne
adc
shl
xchg
and
rol
mov
xor
xchg
rol
or
icebp
ret
sbb
scas
sub
push
cmp
loopne
inc
mov
cmc
add
or
mov
(bad)
sbb
pop
pop
ja
cmp
mov
and
pop
adc
fld
shl
retf
cs
stc
test
retf
jae
clc
ds
xor
and
adc
cmps
repnz
imul
rcr
iret
test
shr
push
or
inc
jmp
test
sub
ret
lock
cmp
std
xchg
xlat
mov
leave
sbb
out
je
lea
cmp
mov
pop
je
and
lea
lock
jg
jmp
cdq
mov
lock
mov
push
cs
cmp
(bad)
aad
stc
sub
fnstsw
sti
dec
enter
or
rcr
dec
adc
or
or
lock
cld
mov
ds
adc
jecxz
cs
push
cmc
scas
push
loopne
ss
stos
add
popf
add
cmp
or
mov
or
movs
add
cmp
pop
pop
mov
call
push
test
adc
mov
scas
mov
adc
push
adc
add
xor
jb
je
add
push
mov
adc
push
push
adc
push
lds
inc
inc
lock
movs
mov
inc
ror
add
cmps
cmp
xor
add
or
mov
clc
pop
(bad)
lock
push
add
push
cmp
cmp
add
mov
outs
test
mov
mov
pop
inc
push
adc
enter
sar
adc
mov
pop
fdivrp
fadd
mov
and
cmp
pop
or
bound
pop
mov
push
mov
or
and
adc
dec
add
pusha
ins
dec
pop
mov
loopne
loop
fcom
sub
dec
and
jb
dec
jnp
adc
pop
and
jmp
daa
mov
lock
fimul
sub
call
ins
and
mov
or
or
mov
xor
mov
push
add
int3
pop
push
neg
ret
ins
jnp
jge
mov
iret
add
push
fcom
test
imul
add
hlt
out
xlat
jg
cld
ds
or
mov
jecxz
clc
dec
in
mov
xchg
sub
pop
(bad)
loope
loopne
in
inc
jnp
(bad)
aaa
rcl
test
mov
(bad)
loopne
inc
add
pop
retf
mov
sbb
jmp
mov
sub
idiv
imul
pushf
and
(bad)
inc
xor
ins
imul
jl
xor
pusha
and
and
shr
sbb
sub
imul
xchg
push
sub
mov
test
sub
stos
retf
in
add
add
call
sub
jmp
push
outs
push
cld
or
xchg
inc
pop
fs
(bad)
in
cmp
bound
out
sar
jl
stos
inc
push
and
mov
sbb
inc
movs
ror
sub
sar
sbb
push
rcl
cmp
sbb
jmp
sub
add
push
sub
pop
ins
enter
lea
xchg
adc
xchg
sbb
xchg
imul
sbb
and
cmp
add
cmp
jb
ret
sub
retf
cwde
jge
jmp
push
hlt
xor
sub
dec
add
stc
xchg
idiv
ret
xlat
ja
jnp
fld
inc
jecxz
mov
mov
xor
sub
test
jno
and
jne
cmp
cwde
sbb
lea
aad
cld
cmp
inc
inc
cmp
hlt
jnp
popa
leave
mov
pop
xchg
push
push
jmp
std
loopne
jne
sub
add
add
jb
add
test
pushf
jnp
(bad)
es
pusha
test
jnp
sar
sub
out
inc
test
(bad)
fisubr
out
push
(bad)
adc
sbb
mov
xor
(bad)
sbb
fdiv
dec
test
mov
xor
retf
dec
mov
or
pop
or
and
inc
mov
cmp
cmp
dec
xchg
ss
mov
rol
(bad)
adc
xchg
adc
inc
adc
retf
mov
stos
retf
sub
mov
push
mov
rcl
cmps
ja
push
push
add
cwde
lods
push
sbb
pop
sub
arpl
aam
add
xlat
jmp
cmp
xchg
adc
cmps
adc
sub
rol
xchg
push
daa
sbb
pop
dec
inc
das
sub
ror
ret
call
jbe
push
or
push
stc
cmps
push
dec
mov
adc
push
bound
push
pop
adc
adc
int3
adc
mov
in
add
cld
pop
xchg
add
push
sbb
pop
and
into
ins
ins
jo
xchg
fwait
mov
dec
pop
ds
adc
retf
std
or
and
cs
add
jo
int3
fbstp
and
sbb
or
nop
call
ror
push
stc
int3
mov
pop
mov
or
or
mov
scas
or
test
hlt
arpl
test
mov
add
fcom
lock
add
je
add
lock
add
cmp
test
or
iret
cld
clc
out
test
xchg
mov
or
push
sbb
push
outs
add
pop
pop
jg
cwde
push
lock
and
xchg
out
and
pop
inc
std
dec
push
pop
lea
xor
jnp
or
jnp
cmp
cmp
or
xchg
mov
cmp
or
jnp
and
push
daa
ret
adc
jne
mov
mov
nop
xchg
and
xchg
xlat
and
(bad)
movs
cmp
scas
push
js
add
add
pop
cmp
jne
cmp
pop
sbb
xor
fsub
jmp
push
imul
pop
jl
cmp
mov
fstp
sub
xchg
add
out
sub
add
mov
and
xchg
adc
sbb
cwde
dec
sar
(bad)
adc
pushf
in
cmps
jbe
sahf
mov
(bad)
sbb
js
mov
daa
cmp
mov
xor
jg
jge
retf
inc
or
aaa
ret
sbb
mov
pop
xchg
xchg
mov
inc
jmp
cmp
not
xlat
cmp
xlat
mov
cs
jecxz
push
jb
push
pop
xlat
xlat
jmp
jb
mov
enter
pop
pop
sbb
nop
bound
clc
lods
aas
lock
dec
mov
or
shr
jo
ja
cmp
and
(bad)
je
xlat
xor
mov
rol
mov
mov
adc
xchg
push
xor
xor
test
cmp
push
fldenv
push
(bad)
js
push
mov
sub
mov
loopne
and
stos
inc
pop
pusha
lea
stos
das
sbb
or
jne
xchg
add
ret
push
in
lods
scas
rol
jo
jle
pop
les
xor
fmul
ret
mov
jge
push
push
xor
arpl
icebp
fcom
das
jp
dec
js
mov
and
and
rcr
inc
call
aam
mov
aaa
mov
inc
pop
leave
adc
and
and
cmp
scas
xchg
call
push
gs
add
ror
jns
add
dec
add
and
mov
xor
add
pop
dec
lahf
lods
mov
ins
cld
jo
dec
add
pop
fst
es
jmp
or
cmp
ss
pop
pop
mov
adc
stos
cs
bound
and
clc
dec
into
jge
cmp
xor
pminub
inc
js
or
cmp
jl
jb
inc
out
cmp
and
dec
pushf
sub
jnp
movs
sbb
ds
je
jae
push
imul
dec
add
inc
ins
adc
popa
inc
cmp
mov
add
xor
sti
push
in
lea
or
pop
cmp
aas
pusha
shl
daa
add
lea
push
bound
adc
add
sbb
inc
jecxz
or
xchg
ret
cmp
pop
inc
lea
data16
add
inc
sbb
arpl
pop
bound
inc
aaa
push
push
mov
pop
push
cmp
or
test
add
mov
sub
mov
call
inc
cs
data16
aam
sbb
(bad)
add
adc
mov
cmps
inc
leave
add
adc
xchg
jmp
ds
jno
push
and
loopne
add
pusha
lea
ss
movs
cs
sbb
pop
int3
sbb
push
add
push
mov
fnstenv
(bad)
sbb
cmp
into
loopne
clc
cmp
enter
sub
jmp
imul
fdiv
jne
adc
mov
scas
and
jae
jne
adc
sub
fisubr
cmp
clc
das
mov
mov
into
cld
xchg
inc
sbb
aam
adc
or
or
shr
cmp
push
jle
pop
cmp
les
(bad)
rep
adc
aas
sbb
lock
sub
out
xchg
xchg
inc
cmp
out
adc
lods
sbb
mov
mov
ss
and
push
mov
das
mov
aaa
dec
rol
ds
(bad)
adc
sbb
sbb
push
add
loop
jne
jb
jne
mov
enter
dec
retf
push
(bad)
daa
sahf
mov
jg
sbb
loopne
cmc
cmp
push
repnz
sub
jmp
dec
cmp
push
mov
fistp
call
xlat
push
and
ins
push
fldenv
aaa
push
lock
ins
cmp
pop
xchg
pop
sub
in
xor
dec
sub
ja
mov
or
cdq
sub
mov
sti
and
jp
xchg
push
push
outs
cmp
and
dec
fcmovne
mov
out
jns
and
sbb
lock
push
iret
jg
cmp
and
(bad)
xor
scas
dec
mov
inc
push
test
mov
mov
cmp
jl
adc
mov
xor
shr
pop
add
inc
mov
fnstenv
shr
je
push
jmp
dec
xor
ds
or
data16
add
lods
mov
popf
cmp
ins
cmc
xchg
cmp
(bad)
push
xchg
push
pop
add
push
add
or
pop
repz
test
clc
cmp
jle
bnd
mov
std
fisttp
enter
inc
cmp
jl
mov
or
push
mov
or
test
test
repnz
or
jp
jo
and
push
imul
push
mov
ficom
aad
fxch
sub
test
mov
hlt
sbb
stos
mov
mov
mov
push
mul
mov
lea
movs
rol
ja
mov
fucomp
shl
push
dec
push
push
xchg
adc
iret
rcl
push
ficom
call
cmp
sbb
push
data16
jl
jns
adc
data16
(bad)
pop
popa
or
xor
adc
jge
jnp
test
(bad)
cdq
jb
pop
push
lea
data16
scas
out
inc
cmp
ja
push
and
push
pop
pop
enter
inc
mov
dec
mov
adc
push
add
out
xchg
mov
jb
xor
ins
sub
movs
stos
shl
dec
in
push
mov
push
out
pop
pop
mov
mov
aad
and
je
ror
das
dec
cmp
lea
cs
sbb
and
sbb
or
dec
sbb
mov
mov
pop
cld
aaa
movs
push
jmp
fisttp
mov
stos
adc
test
(bad)
mov
dec
fwait
out
and
add
test
add
cmp
cli
or
mov
adc
or
push
push
jmp
adc
jecxz
pop
ins
(bad)
add
mov
adc
loopne
test
mov
sbb
sti
add
dec
sbb
jg
nop
adc
inc
adc
add
scas
ret
dec
pop
shl
xchg
add
mov
sub
sar
ss
cmp
or
or
das
in
mov
xchg
shr
xchg
push
sbb
jae
clc
js
clc
inc
push
add
cmp
ds
neg
clc
rol
out
test
out
rcr
xchg
repz
xor
fisttp
add
jne
add
jno
call
fiadd
cmp
adc
add
mov
gs
xchg
retf
(bad)
mov
imul
inc
loop
data16
or
mov
and
xchg
div
push
push
cmps
dec
stos
or
push
sbb
rol
cs
push
dec
movs
es
cwde
sahf
dec
sub
fwait
scas
xchg
and
add
and
cs
sti
ror
les
loop
cmps
cmp
jle
mov
pop
call
push
pop
dec
inc
mov
ins
sub
and
inc
jl
or
add
adc
bound
add
std
fwait
pxor
dec
int3
cmp
std
lods
mov
or
ret
jmp
aas
xchg
mov
xchg
in
jo
lea
cmp
jae
lahf
mov
and
(bad)
into
sub
xor
sub
adc
xchg
cmps
mov
cs
adc
inc
xor
lds
xor
push
mov
cmp
jmp
mov
mov
pop
lods
lock
pop
rcr
xor
adc
sub
js
(bad)
cli
add
jne
sub
call
dec
and
or
and
imul
aas
pop
jbe
add
cmp
xchg
xor
mov
cmp
popf
ja
add
fcomp
out
cmp
and
pop
in
out
cmp
leave
cmp
jl
leave
ins
lock
clc
add
mov
ja
sbb
lea
jg
push
jb
push
stos
push
(bad)
push
test
cmc
push
xchg
jnp
and
in
push
and
fcomp
lahf
adc
test
dec
pop
nop
jne
sub
jbe
push
js
inc
rol
mov
and
add
mov
mov
add
lds
sbb
jmp
cmp
jmp
cmp
pop
or
shl
hlt
fisub
xchg
nop
cld
mov
cmps
pop
cld
addr16
je
leave
mov
xchg
fstp
mov
pop
idiv
enter
in
ficomp
mov
outs
cmp
mov
sbb
sbb
xor
adc
sbb
mov
push
sbb
lahf
push
adc
fcmove
jmp
movs
int
mov
inc
test
icebp
and
inc
in
add
test
push
mov
idiv
jne
jmp
sbb
cmp
add
inc
jb
mov
hlt
push
clc
push
loopne
mov
or
test
and
sbb
mov
fdivr
or
or
push
sbb
adc
fadd
inc
ins
and
or
iret
mov
add
push
inc
rol
and
fsub
mov
or
add
add
in
rol
cmp
jne
mov
jo
xor
push
push
add
(bad)
push
pop
aam
cmp
adc
or
test
jmp
cmp
jmp
adc
mov
push
or
mov
pop
test
ja
xor
jo
push
jno
add
inc
inc
push
push
mul
test
stos
jne
xchg
add
or
cmp
sub
ret
jbe
mov
push
mov
ins
push
loop
jmp
dec
clc
mov
retf
or
xchg
adc
mov
push
and
push
sbb
and
fist
jle
les
mov
or
lock
push
adc
out
cmp
in
adc
pop
aam
adc
fcmovbe
xor
jmp
inc
mov
sbb
ja
add
cmps
cmp
inc
jbe
or
repz
test
cmp
dec
mov
push
scas
adc
cmc
dec
test
fsubr
(bad)
sti
inc
fidiv
or
cld
mov
(bad)
cvttps2pi
add
(bad)
cmovne
rol
xor
int
push
ja
dec
pop
or
push
lods
inc
hlt
mov
push
and
mov
mov
mov
sbb
add
or
fcom
out
xor
adc
push
mov
popa
xor
scas
and
jbe
and
add
or
xchg
cmp
add
push
movs
mov
fdiv
mov
push
cmp
loop
add
ret
call
or
sub
xor
movzx
data16
jo
xor
inc
sub
pop
push
jg
out
mov
jmp
jne
adc
pop
jne
mov
and
mov
loopne
(bad)
int
loope
inc
cmc
or
sbb
xchg
retf
inc
cmp
push
stos
cs
mov
pusha
fimul
jb
jge
ret
and
xchg
imul
mov
es
push
in
pushf
outs
push
cmps
add
lahf
call
sub
daa
lahf
sbb
js
sub
sbb
jnp
cmp
cmp
mov
dec
arpl
xor
add
mov
mov
push
mov
inc
out
shr
lods
outs
out
loop
or
mov
inc
mov
or
and
hlt
inc
jne
mov
call
push
inc
cmp
mov
jge
retf
fchs
out
and
jmp
sub
je
adc
cld
(bad)
lock
xor
add
or
push
push
dec
push
or
fiadd
jnp
js
mov
adc
ror
mov
add
loop
sti
mov
jb
aaa
hlt
mov
fimul
cmp
neg
push
arpl
mul
lahf
loopne
add
xor
mov
push
test
add
test
hlt
mov
and
lea
sbb
pop
sub
or
add
ret
mov
ins
jne
push
mov
dec
cld
loopne
push
(bad)
mov
mov
xor
sbb
das
inc
sub
xchg
out
cld
push
inc
ret
jb
sahf
cwde
dec
and
retf
data16
(bad)
out
mov
dec
push
sbb
mov
cmps
je
sahf
adc
test
sbb
push
shr
pushf
adc
outs
mov
xchg
mov
pop
jg
test
xchg
add
add
add
adc
and
or
mov
das
and
mov
imul
mov
sbb
mov
pop
mov
pop
mov
fs
arpl
dec
jo
rol
pop
jg
cs
sbb
xchg
and
add
inc
or
xor
cmp
xchg
xor
dec
inc
add
jnp
inc
push
or
sbb
or
loop
dec
stos
das
or
dec
repnz
inc
jecxz
jo
jae
ja
mov
mov
xchg
test
and
sbb
cmps
sub
mov
mov
rep
xchg
xor
in
imul
loop
ss
lock
mov
jne
and
in
xchg
adc
xchg
jo
(bad)
sub
pop
push
jp
jno
ja
inc
call
fucomi
push
jle
add
sub
push
or
fstp
jae
sub
mov
mov
(bad)
fsubrp
add
xor
inc
jmp
xor
ret
jge
mov
mov
sti
sbb
mov
xchg
aaa
mov
xchg
rol
push
loope
(bad)
icebp
cmp
xor
add
call
jmp
mov
jmp
cmp
inc
data16
aad
lds
aam
arpl
adc
inc
in
or
push
pushw
push
pop
out
pop
fcomp
hlt
pop
jne
and
adc
cwde
push
and
repnz
pop
mov
sub
call
mov
xor
push
jmp
leave
adc
call
mov
pop
inc
cmc
lods
faddp
(bad)
push
sub
mov
cmp
(bad)
pop
call
out
jb
je
mov
rol
add
jmp
mov
stos
sub
jbe
mov
jne
adc
sbb
inc
(bad)
stc
dec
mov
dec
pushf
add
xchg
sahf
mov
jne
or
fstp
cmp
push
je
add
add
shr
dec
push
cmps
pop
call
lea
jae
jg
mov
je
mov
shl
mov
add
dec
add
push
sub
inc
cmp
jbe
hlt
bound
inc
dec
cmp
cmp
sbb
pop
jno
xchg
add
mov
dec
add
ins
popa
jge
rol
push
xchg
(bad)
push
adc
lea
lea
dec
jne
sbb
call
push
adc
and
bound
add
cwde
xor
or
lock
leave
pop
jmp
push
aas
push
clc
mov
cli
pop
add
cld
push
stos
ror
clc
mov
push
and
add
or
push
add
outs
div
push
ficom
inc
or
or
add
pop
mov
in
jae
or
adc
push
jns
xchg
adc
mov
out
adc
adc
jae
imul
int3
shr
sbb
and
push
ret
or
mov
dec
iret
fdiv
loop
jle
shl
cmp
add
or
cmp
xchg
ror
pop
ret
jmp
nop
cmp
sbb
(bad)
cld
sub
and
mov
cmp
lock
lahf
cmp
out
ds
fcomp
cmc
mov
shl
jmp
popa
adc
js
jns
popa
xchg
xchg
cmp
push
nop
add
or
gs
or
fidiv
push
inc
mov
mov
icebp
mov
adc
cmp
cs
inc
jmp
or
lods
push
std
int
enter
mov
lea
popf
or
ficom
shr
push
and
out
inc
mov
or
dec
inc
xchg
cmp
sbb
icebp
xchg
xlat
ins
or
and
push
loope
fwait
pop
cmp
add
je
mov
cmp
je
cmp
inc
cmp
je
hlt
add
mov
or
jmp
mov
inc
add
inc
jl
nop
add
push
xchg
add
mov
movs
cmps
mov
sub
mov
xchg
(bad)
adc
je
dec
je
push
sbb
or
pushf
and
lods
add
mov
push
aam
fdivr
addr16
add
adc
inc
mov
push
repnz
sbb
fdiv
and
cld
cmp
or
test
jge
mov
push
fcom
push
push
je
sbb
imul
pop
sbb
lock
dec
cmp
(bad)
aad
mov
sub
mov
pop
sub
and
xor
push
mov
cmp
leave
pavgb
push
or
and
adc
sbb
cld
push
push
push
je
mov
and
lods
std
jne
pop
dec
cmp
je
push
cmp
(bad)
loopne
push
push
pop
mov
pop
add
jl
cdq
fidiv
pop
push
xchg
loope
inc
pop
add
or
xor
std
pop
adc
add
adc
push
(bad)
(bad)
in
ds
mov
cmp
or
sub
add
add
popa
dec
adc
xor
adc
xchg
call
push
push
push
add
ficomp
dec
cmps
mov
mov
or
test
cmps
mov
xor
xor
fisub
add
xor
call
and
add
bnd
lea
lea
or
mov
sti
int3
in
fdivr
mov
test
shr
pop
mov
nop
fild
loope
xchg
mov
push
jo
dec
daa
pop
push
lock
cmp
push
rcr
mov
sar
sahf
sbb
movs
dec
and
push
add
(bad)
nop
rcr
clc
cwde
stos
lods
inc
out
jmp
or
push
shr
and
shr
cmp
add
xor
out
out
es
inc
sbb
popf
scas
shr
cmps
sbb
or
fwait
js
cmp
and
(bad)
jo
clc
stos
push
xchg
popf
xchg
mov
rol
mov
lock
pop
(bad)
in
out
and
or
mov
sar
dec
xchg
add
pop
adc
in
stos
push
in
adc
rcl
cli
xchg
test
add
shl
jnp
or
dec
ror
mov
cli
add
ss
(bad)
sub
clc
test
rcl
shr
frstor
and
fldenv
sbb
pop
enter
xor
sti
mov
je
popf
add
add
aaa
nop
cmp
ins
dec
push
ret
push
pop
popf
mov
imul
mov
sbb
movs
dec
(bad)
push
shl
xchg
cmps
xor
(bad)
clc
sub
and
jae
sbb
mov
dec
nop
sbb
nop
dec
(bad)
mov
clc
dec
sbb
cmp
add
inc
add
setge
mov
out
arpl
lahf
mov
add
jnp
lods
sbb
inc
cmp
push
push
ins
mov
icebp
popa
scas
jns
push
cwde
or
lock
xor
or
retf
popa
test
int3
xor
into
adc
mov
test
pop
pop
inc
pop
dec
pop
test
stc
nop
or
add
stc
cdq
sub
icebp
stc
jo
sbb
mov
jnp
push
fisub
jo
aad
push
inc
xchg
sar
fcom
adc
add
push
loope
pop
dec
(bad)
sbb
ret
pop
push
test
lahf
test
xor
int
lds
or
sbb
ins
and
pop
cmp
inc
xor
or
dec
add
push
je
int3
mov
push
or
adc
cmp
jne
stos
clc
adc
call
inc
out
mov
lds
ja
pop
jp
sar
jmp
test
mov
pcmpeqb
in
je
dec
je
push
fimul
xchg
xchg
retf
sbb
or
ret
cmps
or
push
cmp
adc
add
jbe
and
and
movs
sti
add
mov
inc
add
add
inc
pusha
out
sbb
jne
sbb
push
or
sub
jmp
push
adc
sbb
div
adc
sar
jge
mov
imul
pop
pop
and
inc
shr
addr16
jmp
imul
sti
scas
cdq
and
fs
neg
test
nop
test
loopne
sar
add
pop
cmp
outs
or
adc
or
xor
pop
add
mov
push
dec
out
mov
or
push
add
retf
and
sub
mov
jne
jmp
push
fldz
fucom
fnstsw
add
or
(bad)
lock
ins
push
xchg
add
test
and
test
popa
jle
fcompp
mov
mov
outs
inc
jne
cmps
mov
inc
push
adc
add
pop
mov
sbb
in
stos
hlt
ror
or
outs
je
movs
mov
xchg
mov
add
pop
fisttp
lock
sbb
or
loopne
fstp
cld
neg
mov
inc
and
fstp
and
add
test
cmp
out
dec
pop
or
mov
push
push
mov
sti
out
int
pushf
pop
clc
lea
and
retf
push
sbb
add
xchg
js
inc
xchg
std
ins
push
test
pop
jae
jbe
sub
sbb
add
arpl
enter
call
nop
cmp
inc
and
mov
or
push
jne
mov
or
cmps
std
add
add
add
pop
jbe
lea
pop
sub
jmp
sub
dec
jae
daa
push
or
push
shr
fldcw
je
dec
leave
adc
mov
test
adc
fucompp
pop
mov
pop
outs
(bad)
cmp
outs
jg
ret
cli
jecxz
pop
fst
dec
add
dec
add
push
cmp
shl
sub
leave
inc
jmp
adc
shr
xchg
aad
sgdtd
cli
dec
or
(bad)
xchg
into
adc
dec
fimul
enter
push
hlt
test
div
mov
shr
sbb
mov
lock
clc
xor
jne
fst
mov
call
push
pusha
pop
cmp
jg
pusha
sbb
std
ja
call
xchg
and
mov
mov
xor
call
xchg
loopne
fnsave
cs
cdq
into
mov
mov
xchg
push
aam
push
mov
mov
mov
or
ficom
sub
je
xchg
xor
add
dec
xor
xchg
add
mov
nop
sub
dec
frstor
loopne
xor
push
pushf
sbb
div
add
and
shr
add
xchg
fild
add
and
and
add
cmps
push
inc
cmps
(bad)
mov
push
add
inc
call
add
adc
push
aam
and
xor
xor
sar
mov
pop
aam
push
loopne
aam
jmp
sbb
std
or
jmp
inc
and
mov
and
or
jecxz
jge
gs
or
stos
add
pop
mov
mov
or
or
and
je
and
daa
mov
add
fstp
cmp
pop
sbb
(bad)
sub
cs
jmp
scas
inc
and
sub
xchg
jecxz
data16
jl
rcl
add
push
iret
add
jp
cmps
pop
test
mov
idiv
add
sti
add
repnz
sahf
test
cmp
push
inc
add
cld
mov
je
add
dec
jne
or
aas
mov
or
sti
push
mov
cmp
and
jle
(bad)
xor
jnp
je
sbb
adc
sub
sub
inc
add
fsubr
or
inc
fld
fld
loope
sbb
add
pop
jns
out
xchg
add
add
push
ja
mov
sbb
add
(bad)
jmp
sbb
jl
jl
dec
dec
js
mov
cwde
mov
xor
or
scas
push
or
in
int
sub
push
lods
jle
sbb
push
rol
and
nop
jnp
pop
mov
and
pop
fnstsw
fnclex
movsx
cmp
fstp
fmul
or
into
or
cs
add
or
fisubr
sub
dec
sbb
fist
fwait
push
and
push
cmp
mov
out
pop
mov
fld1
fdivp
fstp
sbb
fldpi
xor
ffree
(bad)
and
jno
add
fs
aaa
mov
loop
pop
or
pop
data16
pusha
and
mov
ins
pop
or
das
ss
inc
popa
je
inc
je
dec
or
pop
enter
xor
add
jmp
or
iret
jl
pop
popa
dec
jmp
xor
pop
sub
or
stos
(bad)
mov
add
hlt
xchg
push
adc
push
mov
and
cmp
add
pop
add
jbe
call
mov
jne
dec
adc
push
loop
jne
in
js
loope
dec
inc
sbb
lea
push
push
call
outs
imul
mov
cmp
jne
sbb
add
pop
mov
mov
enter
mov
les
inc
add
push
mov
push
dec
adc
rcr
or
jo
mov
scas
xchg
lock
outs
out
mov
push
sbb
fistp
aam
dec
and
add
cmps
(bad)
dec
adc
je
cwde
pop
lock
js
add
pop
loop
or
mov
sar
pop
inc
pop
bound
sar
ficomp
jmp
mov
mov
push
movs
push
mov
(bad)
pop
cmovl
inc
sbb
add
add
sbb
dec
xchg
ret
call
ret
cmps
cdq
cli
xor
jle
xchg
push
add
std
mov
ror
ror
and
lock
dec
push
pop
add
cmp
ret
jmp
cmp
shrd
adc
jmp
inc
dec
pushf
in
in
mov
inc
test
data16
or
mov
mov
cmp
sbb
inc
mov
push
scas
or
adc
cmp
add
sub
or
mov
inc
cmp
(bad)
adc
xchg
push
xchg
xchg
lock
and
inc
loope
push
xchg
sti
or
mov
call
push
and
sub
sbb
js
jg
and
out
and
cmps
add
(bad)
or
xor
xchg
pop
mov
mov
cmp
jl
mov
pop
mov
and
xor
push
or
add
jne
dec
sbb
mov
jg
cmp
jb
fs
call
push
or
or
jbe
inc
dec
pop
test
es
mov
int
push
shr
mov
adc
sbb
adc
xchg
nop
adc
push
ja
add
push
and
cwde
mov
or
pusha
jb
js
or
iret
add
sbb
xchg
sub
cmp
cmp
push
mov
push
cmp
mov
daa
or
je
dec
sbb
cmp
cmc
and
add
adc
dec
lock
and
push
jl
inc
sbb
add
inc
out
dec
or
push
push
sbb
movs
pop
je
dec
add
movs
imul
mov
sbb
or
push
mov
neg
dec
int3
pop
cmp
jl
push
das
add
cdq
idiv
add
sbb
pop
push
add
add
mov
add
jo
push
popf
adc
and
ret
mov
add
ins
and
pop
or
adc
push
mov
jmp
sbb
mov
mov
je
cmp
add
in
add
fsubr
into
ret
xchg
sub
ret
lods
and
fcmovne
jge
push
xor
cmp
xchg
lea
inc
jno
adc
bound
add
sub
ss
add
sub
add
mov
adc
push
push
data16
push
les
cmps
dec
jne
out
cwde
xor
or
pop
js
or
xchg
cmp
sbb
lds
mov
xchg
push
and
push
scas
mov
xchg
jmp
lock
sbb
cmp
sub
in
pop
pop
cmp
fwait
cmp
xlat
push
clc
neg
jmp
gs
xchg
xchg
cmp
jl
push
push
imul
dec
les
push
xor
(bad)
imul
jb
arpl
sbb
fisub
push
das
push
mov
inc
cmps
jno
and
call
fsubr
xor
(bad)
adc
out
push
adc
push
ret
loopne
jge
push
xchg
add
cmp
fs
xor
mov
xor
shr
cmp
or
rcl
add
shl
or
jnp
outs
les
pushf
clc
cld
jl
cmp
es
data16
loopne
mov
inc
or
mov
adc
add
shl
ret
adc
pusha
in
jmp
das
jne
scas
or
sbb
mov
mov
mov
jge
mov
scas
jecxz
std
lock
enter
out
mov
mov
inc
xchg
or
das
(bad)
cmc
xchg
repnz
cmp
cli
imul
mov
add
push
inc
inc
mov
sub
pop
int
scas
add
sbb
add
xchg
movs
sbb
ret
inc
clc
or
repz
aaa
jp
clc
push
jae
imul
call
int
sbb
rol
inc
and
pop
mov
int3
mov
pushf
jmp
inc
movzx
or
push
pop
call
js
add
push
push
fimul
inc
sub
or
mov
mov
ror
cs
fcomp
dec
jp
aaa
dec
stos
and
arpl
sub
pushf
add
push
mov
adc
inc
loope
jno
push
inc
das
push
inc
mov
add
add
and
push
int
cmp
jae
adc
xchg
sub
cmp
jb
pop
sub
add
mov
push
ret
inc
pop
push
sub
pop
cmp
cmp
into
cmp
bnd
lock
mov
sub
xor
lea
aaa
data16
test
jo
(bad)
pop
outs
adc
mov
or
rol
cld
push
xor
jne
pop
fistp
loop
xor
mov
cmp
mov
pop
leave
das
and
cmp
loopne
push
jae
clc
les
stc
cmp
dec
ret
je
clc
mov
mov
(bad)
loop
fnsave
shr
pop
lea
and
adc
jbe
int
xlat
and
cmps
rcr
pop
movs
add
stos
int
push
cmp
movs
xor
xchg
add
add
cmp
adc
popf
or
inc
and
mov
jmp
mov
mov
or
push
test
in
fstsw
or
add
shl
cmp
call
stc
rol
mov
and
xlat
sub
loope
push
movs
scas
test
add
mov
and
jnp
gs
fxch
iret
cmp
and
jmp
sar
rol
mov
mov
or
in
dec
or
mov
test
fadd
adc
test
ret
cmp
fistp
call
test
lods
or
test
lock
outs
mov
ret
stgi
add
jbe
ret
mov
in
sbb
test
adc
cmp
add
(bad)
pop
mov
inc
test
sbb
(bad)
push
(bad)
bound
or
sbb
rol
ret
adc
repz
loopne
push
push
jo
aad
or
fiadd
dec
jmp
fiadd
fld
frndint
fsub
jb
f2xm1
int3
rcl
fstp
ret
call
fimul
or
sahf
sbb
fldcw
adc
push
mov
jo
mov
mov
or
fld
sub
or
fild
push
movs
enter
or
add
cmp
pop
hlt
or
fld
or
ja
and
add
ret
outs
cli
mov
pop
pop
sbb
sbb
data16
jge
into
adc
outs
mov
mov
cdq
push
or
add
in
aam
stos
jmp
daa
je
xlat
pop
mov
sbb
jne
sbb
outs
xor
mov
int3
out
(bad)
loopne
mov
arpl
push
jbe
idiv
dec
push
jae
fmul
push
jl
mov
jbe
fld
rcl
xchg
aas
add
push
dec
pusha
loopne
and
mov
push
hlt
or
or
ret
push
ret
sub
push
dec
cmp
enter
adc
inc
add
mov
mov
cmp
(bad)
jb
inc
sbb
stc
xchg
inc
and
ror
ret
xchg
mov
(bad)
push
mov
xchg
imul
clc
mov
lock
mov
int3
push
or
push
loopne
call
mov
shr
add
add
mov
add
aam
push
push
sub
shl
sbb
pop
mov
push
or
cmp
inc
pop
push
cmp
mov
push
sbb
mov
inc
jbe
xor
and
and
test
push
mul
sub
dec
jne
fs
repnz
out
and
dec
pop
mov
jmp
xor
and
pop
cmp
jne
ja
movs
sub
test
jmp
outs
push
xor
add
fst
sbb
cli
mov
fiadd
push
or
lea
dec
jmp
sub
sub
cmp
scas
mov
dec
sub
dec
dec
inc
in
cmps
jmp
add
fstp
mov
add
push
inc
pop
jmp
out
xor
sub
and
ficomp
xor
xchg
lock
cld
adc
call
mov
jb
cmp
and
in
pushf
sar
idiv
adc
sbb
dec
push
cmp
push
jg
sub
push
enter
lgdtd
fbstp
outs
and
mov
sbb
enter
and
jmp
and
dec
imul
call
cdq
dec
or
js
add
sti
cmp
push
jmp
mov
out
sbb
xor
popf
xchg
mov
adc
jp
mov
lock
mov
call
or
mov
push
push
push
inc
push
call
adc
adc
(bad)
fisub
mov
mov
and
inc
sbb
int3
outs
out
mov
push
xor
and
mov
loopne
test
xor
jp
sbb
ret
xchg
out
and
sbb
add
adc
dec
pop
popa
es
jmp
or
test
sbb
push
sub
cmp
mov
adc
jne
ficomp
pushw
mov
mov
xchg
or
sbb
jno
xchg
mov
adc
addr16
sbb
fld
sbb
jns
loop
jle
sbb
cmp
mov
cld
test
je
mov
clc
pop
sub
adc
(bad)
and
pop
inc
and
cmp
cmp
push
push
lahf
jne
dec
inc
loop
sub
mov
sbb
bound
mov
mov
pusha
je
mov
nop
loop
or
and
loopne
mov
push
sub
nop
dec
mov
or
xchg
or
into
xor
jb
inc
or
mov
mov
shl
mov
cmps
dec
pop
rcl
xchg
into
dec
ja
rcr
rcl
sub
cmp
mov
adc
pop
fimul
les
sbb
and
in
or
lea
rcl
xor
out
pop
test
cmp
scas
call
pop
rol
push
mov
shl
loopne
or
ret
shl
mov
iret
enter
and
push
call
retf
adc
or
adc
pop
xchg
xchg
call
push
mov
cdq
xor
inc
loopne
cmps
inc
shl
loopne
stc
mov
or
mov
lock
sbb
xchg
and
or
mov
adc
adc
js
mov
add
lods
rol
push
mov
shl
cmp
das
xor
sbb
push
add
(bad)
sbb
mov
inc
push
mov
and
int3
int3
dec
add
adc
push
in
loopne
and
in
add
loope
push
nop
retf
call
mov
nop
and
inc
sahf
nop
in
and
mov
pusha
loopne
and
push
push
jb
repnz
jmp
in
jns
enter
add
movs
push
jns
add
in
in
push
xchg
mov
nop
or
push
loopne
fs
sub
mov
push
sbb
sbb
loopne
leave
inc
xor
loopne
(bad)
sub
in
add
mov
test
xchg
push
mov
in
and
add
xor
xor
enter
add
test
es
in
in
add
push
fs
fsubr
shl
ror
sbb
rol
xchg
retf
aam
or
mov
push
int3
push
leave
gs
push
(bad)
iret
push
adc
test
mov
push
dec
adc
xor
or
rol
adc
popf
in
fcom
test
test
test
mov
sub
mov
je
or
ror
dec
sub
cmps
jmp
push
cdq
mov
xlat
inc
sbb
mov
and
test
mov
movs
stos
sub
and
and
add
dec
mov
xor
not
add
adc
fcom
add
cwde
inc
pop
lea
sub
push
aas
aaa
outs
jg
cs
xor
add
cdq
mov
cmp
cmp
sub
or
fdivr
cmp
sbb
or
xlat
shl
js
pop
pusha
or
add
leave
or
push
popf
call
push
push
mov
dec
xchg
movs
mov
loopne
sbb
cmp
add
jo
pop
and
or
pusha
call
mov
mov
xchg
loopne
mov
mov
cs
or
sub
stos
push
xchg
or
pop
mov
sbb
test
push
sbb
mov
pop
add
test
cmp
push
movs
test
cmps
adc
push
xchg
add
xor
das
test
cdq
jecxz
and
push
or
adc
adc
push
and
adc
add
jmp
push
pop
push
push
inc
test
adc
in
std
ins
push
or
cmp
or
xor
and
xchg
adc
or
(bad)
fadd
clc
cdq
aam
mov
aam
pop
ret
add
adc
push
(bad)
aad
popa
pop
push
and
xchg
shl
arpl
clc
and
xor
add
fs
add
fs
pop
fbstp
xor
fisub
or
pop
or
fisubr
and
pop
ret
gs
jge
loope
int3
adc
js
and
stos
or
jno
push
push
push
scas
inc
cmps
loopne
stos
jg
inc
jmp
scas
sub
fdivr
cmp
and
call
ins
mov
inc
sbb
mov
mov
loop
pop
or
push
je
icebp
xor
inc
sbb
add
pop
into
inc
jg
mov
mov
les
movs
bound
loopne
mov
lods
mov
and
mov
pop
or
mov
jnp
add
icebp
sub
pop
(bad)
in
rcr
or
or
movs
enter
dec
std
pop
sub
push
inc
pusha
cmp
jae
mov
sar
inc
bound
push
mov
cmp
dec
loopne
or
add
rcr
xchg
push
xchg
stos
out
push
jmp
or
jmp
neg
add
push
add
or
mov
ror
adc
add
inc
dec
dec
sahf
inc
es
lds
dec
or
ror
cmp
push
pushf
pop
push
jbe
sbb
or
push
pusha
repnz
push
in
xor
rcl
jmp
push
cmc
dec
push
test
xor
mov
cmp
pop
rcr
xor
rol
sbb
in
(bad)
add
mov
adc
(bad)
ret
(bad)
pop
or
adc
mov
data16
or
add
sub
inc
std
xchg
or
cmp
jl
cmovo
add
jne
je
mov
fist
jp
jb
cmp
and
outs
jmp
arpl
sub
push
and
push
dec
push
sub
loope
jecxz
sub
(bad)
test
iret
sub
jge
test
xor
cs
sbb
test
sub
add
js
movs
push
push
sbb
jecxz
add
loop
push
out
outs
ja
add
xchg
mov
es
pop
and
mov
and
aam
push
jbe
add
add
sbb
pusha
and
mov
inc
push
pop
mov
rcr
or
ss
sbb
mov
daa
xor
pop
movs
sbb
loope
loopne
icebp
fmul
and
or
inc
sub
fsubr
in
pop
outs
mov
jge
jmpw
ror
retf
push
cmp
push
fsub
call
out
jmp
xchg
jns
inc
adc
xor
push
push
ret
xchg
and
test
jmp
mov
out
xor
pushw
jae
push
pop
daa
or
mov
xor
sbb
loop
cmp
xchg
jle
aam
lds
ins
inc
sbb
add
sub
int
neg
dec
out
mov
sub
xchg
jmp
inc
js
call
add
jbe
call
and
inc
sbb
sbb
fisub
mov
sub
add
cmc
dec
repnz
and
sbb
out
(bad)
out
pop
push
pop
arpl
inc
pop
pop
dec
mov
push
xor
mov
hlt
pop
je
or
cdq
and
sbb
je
and
sbb
inc
sub
(bad)
add
or
test
jb
mov
inc
sbb
lea
test
and
std
jge
xor
push
push
fstp
pop
push
xchg
mov
sahf
add
mov
into
ja
pop
xchg
stc
mov
test
cmps
out
push
aaa
add
cmps
xchg
adc
stos
or
das
add
add
fiadd
sti
mov
lock
cmp
dec
xor
in
sbb
icebp
or
dec
jbe
mov
mov
xchg
cdq
cmp
add
shr
xor
test
clc
jae
lea
or
nop
idiv
jp
js
mov
js
jle
test
xchg
js
add
jl
or
jl
fisttp
outs
shl
sbb
or
jl
add
std
jmp
mov
out
es
mov
sbb
sbb
adc
jo
cmp
inc
sub
sbb
push
push
fucomp
rcr
jmp
sub
test
xchg
(bad)
and
push
mov
push
inc
pop
mov
xchg
jp
xchg
aam
ret
dec
hlt
and
mov
xor
mov
sbb
lock
int
sub
inc
xor
fcomp
cli
push
lea
cmp
js
adc
bnd
sbb
rcr
sti
sub
fdivp
cs
ins
mov
jl
cmp
sub
inc
sub
jne
es
sub
fsub
and
and
sbb
movs
cli
inc
cli
cmp
es
neg
loope
shr
xor
inc
rol
dec
pop
cmp
je
add
dec
xor
pop
call
sub
shl
mov
adc
lods
mov
or
xchg
lea
cmp
jae
loop
add
sub
je
(bad)
je
cs
mov
sub
pusha
push
pop
std
xor
hlt
pop
mov
shl
inc
push
(bad)
jmp
dec
xor
add
out
pop
cli
mov
in
sbb
adc
xchg
dec
xor
fsub
pop
sub
cs
xor
cld
repnz
or
(bad)
hlt
sub
mov
inc
lock
xchg
fidiv
push
push
cmp
xor
or
push
nop
adc
jmp
adc
retf
shl
push
jmp
por
pop
adc
clc
pop
div
in
xor
stc
and
sbb
pop
mov
loopne
cmp
jmp
test
jl
dec
mov
dec
ret
jmp
xor
test
xor
and
add
cmp
push
pop
cmp
gs
test
neg
mov
and
cli
xor
sbb
test
cmp
add
popa
pop
cmp
jle
jmp
add
test
push
adc
sbb
nop
inc
sbb
and
imul
nop
inc
call
movs
cdq
inc
cwde
inc
pushf
inc
call
adc
stos
repz
adc
ficomp
and
in
in
or
cmp
fmulp
push
mov
stc
clc
ret
sub
js
cmp
push
add
sbb
imul
inc
cmp
xor
popa
dec
leave
sbb
js
jmp
jno
jbe
into
cmp
jecxz
sbb
ss
dec
push
pop
iret
jbe
dec
outs
lods
pop
push
push
push
and
jo
dec
sbb
or
(bad)
sub
add
rcr
push
sub
sbb
les
sbb
lods
push
push
and
imul
ins
push
push
jae
sub
and
sub
rcr
sub
push
pop
dec
jmp
mov
sub
movs
sub
das
push
in
dec
call
pusha
adc
in
inc
add
push
rcr
inc
pop
dec
push
dec
jnp
push
mov
or
(bad)
je
sti
(bad)
and
out
pop
aaa
adc
mov
loopne
shl
adc
psubsw
jl
cmp
jg
sub
mov
inc
cmp
in
jmp
mov
jne
repnz
lea
rcl
inc
jge
repz
xor
popf
sbb
or
push
rol
cmps
cdq
mov
xchg
add
xor
or
inc
sbb
xor
xor
jo
xor
mov
mov
cvttps2pi
hlt
cmp
push
sbb
xchg
jo
mov
inc
js
mov
jge
inc
push
or
push
mov
adc
inc
call
movs
cdq
xor
addr16
or
mov
enter
lods
clc
mov
push
stos
movs
xor
jmp
push
push
pop
mov
dec
mov
retf
int3
aad
sbb
mov
jp
fiadd
(bad)
cmp
mov
out
popa
inc
hlt
imul
scas
xchg
jbe
inc
mov
sbb
jmp
add
call
cwde
xchg
data16
and
mov
sbb
clc
call
sub
xchg
mov
mov
clc
outs
imul
push
sbb
ret
fidiv
mov
add
xchg
loop
jl
inc
cmp
imul
mov
xor
xchg
test
cmp
mov
pusha
pop
pop
mov
mov
mov
clc
inc
and
outs
mov
jg
or
enter
adc
ss
and
and
sub
daa
daa
daa
daa
xor
cmp
dec
ficom
inc
and
inc
cmovs
push
pop
daa
daa
daa
pop
add
daa
daa
daa
daa
ins
jo
js
movs
and
jl
jns
leave
sub
fs
dec
mov
cdq
cwde
pushf
mov
movs
test
es
fs
mov
and
dec
gs
mov
xchg
dec
xor
fcomp
xchg
dec
xor
loopne
call
and
lock
cmp
and
clc
cld
add
fwait
and
add
or
or
leave
and
dec
adc
and
dec
xor
and
dec
xor
sub
xor
xor
and
cmp
cmps
sbb
dec
lahf
dec
cdq
fs
dec
push
push
pop
arpl
sbb
adc
pusha
test
sbb
ins
or
fld
inc
inc
movs
call
inc
sub
xchg
sbb
xlat
ja
pop
cmp
push
inc
jmp
mov
push
jmp
mov
sbb
push
and
sbb
mov
daa
sub
ror
add
cmp
add
add
cmp
je
xchg
push
push
sbb
shl
push
dec
mov
pusha
pop
lock
dec
repnz
rol
or
push
daa
xor
call
sbb
sbb
jge
push
push
push
cs
push
ja
sbb
sub
inc
ror
sub
sub
aam
xor
xor
ror
das
sbb
cmp
inc
ror
xor
inc
inc
int
xor
dec
dec
dec
dec
or
xor
dec
push
xchg
xor
ror
dec
dec
xor
xor
ror
dec
push
xchg
ins
cmp
ror
cmp
inc
ficom
cmp
daa
sub
pop
xchg
xor
ins
and
and
xchg
inc
nop
sub
xchg
xchg
inc
cwde
sub
imul
jl
pop
movs
and
push
sbb
mov
fwait
mov
xor
inc
cs
shl
xchg
outs
dec
mov
mov
sbb
ss
or
in
aam
fsub
and
scas
in
loopne
in
sbb
ror
inc
jb
in
inc
mov
inc
hlt
inc
xor
and
inc
cld
imul
pusha
dec
gs
mov
or
or
dec
or
mov
jl
dec
adc
dec
jbe
xlat
xor
adc
jl
jb
sbb
and
nop
and
cmp
sub
xchg
cmp
xchg
xor
dec
cs
cmp
cmp
mov
inc
in
and
inc
inc
dec
inc
fist
push
popa
sub
aaa
and
sub
and
ins
pop
pop
ret
(bad)
stc
add
push
mov
test
add
ret
pop
add
mov
adc
(bad)
push
pusha
pusha
push
push
and
in
mov
sbb
push
movs
push
push
aam
pop
and
inc
add
add
mov
cmp
cli
clc
sub
push
cmp
js
sub
add
add
sub
add
mov
loopne
mov
rcl
jle
add
mov
shl
or
add
jne
inc
mov
jg
push
or
push
or
add
mov
nop
mov
test
popf
xchg
jo
add
imul
sbb
rol
out
call
and
mov
push
sub
jne
sub
jle
jecxz
cld
ret
push
xchg
mov
in
test
(bad)
nop
outs
pop
jmp
jle
mov
call
add
shl
shl
ins
bound
in
or
mov
adc
nop
sbb
sbb
mov
cld
inc
(bad)
movs
push
shl
aas
xor
jne
test
sar
dec
add
aaa
and
loopne
sub
push
dec
pushaw
xor
dec
inc
and
ret
fdiv
jo
inc
jo
pop
(bad)
or
je
add
adc
shl
lock
push
push
jne
call
add
fcmovb
inc
fild
dec
sbb
sbb
(bad)
cli
mov
jle
or
lea
cmp
mov
xor
inc
test
fimul
xchg
jl
inc
adc
pop
fadd
out
pop
mov
mov
arpl
jle
add
pop
fadd
push
adc
dec
sahf
jno
test
sti
movups
push
test
mov
outs
ins
in
pusha
sbb
out
mov
fiadd
and
xchg
add
mov
mov
or
dec
nop
pop
inc
or
jb
or
or
lahf
add
inc
jmp
mov
and
add
icebp
jae
test
pop
mov
neg
sbb
add
cmp
mov
aas
jmp
inc
or
dec
repnz
fs
pop
shr
push
adc
mov
ficomp
jl
mov
jecxz
mov
lea
imul
cmp
jle
loope
push
lea
clc
sbb
inc
neg
jne
adc
pushf
test
push
adc
jle
push
jmp
xchg
imul
js
jno
cmps
cmp
rol
pop
imul
and
adc
xor
leave
add
push
shr
test
xor
push
test
sub
dec
sbb
inc
inc
xchg
mov
and
xor
dec
sbb
jmp
inc
push
pushf
or
mov
inc
lock
movs
movs
jne
das
mov
or
lock
inc
lock
mov
dec
shl
fld
sbb
inc
or
or
mov
xor
xchg
mov
mov
or
push
sbb
and
bnd
dec
adc
and
add
pop
sbb
test
lods
(bad)
fild
xchg
sar
je
xor
xchg
push
push
rol
cmp
push
scas
add
add
sbb
mov
mov
mov
jb
pop
jmp
pop
add
(bad)
ins
imul
or
lea
push
lock
push
aad
sub
add
lds
or
mov
inc
jmp
dec
mov
inc
jecxz
lea
add
dec
jne
jg
fcom
sti
mov
add
mov
and
adc
push
scas
leave
jne
cdq
pop
push
je
cmp
push
jae
xchg
(bad)
jnp
cmp
jle
pop
add
push
sbb
xchg
aas
push
pushf
loop
aaa
pop
or
xor
inc
lahf
inc
cmps
add
jle
je
adc
mov
dec
sbb
push
push
frstor
mov
push
xor
inc
pop
add
xchg
jmp
or
xor
mov
sub
out
pop
mov
je
or
fsubr
outs
outs
dec
enter
aas
cmp
mov
dec
(bad)
outs
add
push
(bad)
xor
into
mov
call
aaa
lods
dec
sub
ret
jecxz
shr
clc
test
jge
mov
lahf
xchg
popf
dec
push
je
inc
sub
push
sbb
sub
xchg
mov
pusha
jbe
inc
sbb
add
cmp
jecxz
out
xor
jnp
outs
jae
sbb
ins
push
addr16
loopne
add
cmc
and
shl
push
xchg
push
mov
cmps
fmul
mov
pop
mov
test
retf
mov
adc
xor
mov
fldcw
dec
and
mov
inc
mov
stos
adc
mov
in
cmps
push
lahf
popf
or
add
and
mov
lea
ret
pop
ss
add
mov
inc
punpckldq
or
mov
imul
add
and
lods
add
fnsave
test
fcomp
or
popa
jl
(bad)
daa
fdivr
push
imul
iret
imul
add
daa
fmul
push
mov
mov
adc
dec
xor
gs
test
adc
push
mov
mov
test
jge
or
or
sbb
push
loope
mov
popf
cmp
adc
and
in
mov
mov
je
inc
clc
mov
xlat
and
dec
jmp
movs
adc
push
imul
je
dec
or
stos
add
sub
adc
pop
fcomp
adc
or
(bad)
pop
adc
cld
xchg
mov
stc
add
and
fiadd
call
add
and
push
add
inc
or
inc
pop
xor
shr
stos
cmp
jne
xchg
xor
push
push
xchg
push
shl
mov
dec
jg
add
push
sbb
adc
or
pusha
imul
mov
pop
aaa
adc
mov
or
idiv
add
pusha
cmp
call
pop
push
stc
sbb
leave
xchg
shl
icebp
sbb
jno
cwde
int3
pop
push
pop
push
cmp
sub
cmp
jb
and
add
jo
jno
and
in
test
push
pop
aad
leave
cwde
pop
into
leave
jp
jne
ins
mov
jbe
and
xor
dec
popa
mov
test
movs
inc
imul
dec
shr
jne
lea
mov
adc
sub
sub
aaa
xor
mov
push
pushw
mov
movs
adc
mov
scas
test
ins
sbb
lea
xor
xor
sub
sbb
pop
mov
clc
out
dec
push
inc
xchg
outs
in
call
mov
or
in
jcxz
push
stc
jmp
adc
jns
fcomp
jo
je
push
outs
and
mov
dec
jge
test
pop
rol
jmp
inc
adc
mov
rcl
cwde
fist
push
jne
mov
sbb
fbstp
neg
sbb
and
cmps
adc
mov
lods
mov
adc
jne
mov
lea
call
mov
scas
fst
jae
pop
in
nop
fisttp
inc
mov
rol
push
xchg
push
xlat
mov
jl
xor
sub
cmps
test
inc
lahf
sub
nop
fs
sub
mov
sbb
sub
inc
arpl
fild
fiadd
pop
adc
jg
add
mov
leave
sbb
push
adc
or
call
pop
(bad)
add
push
sbb
gs
sbb
mov
mov
mov
or
ss
retf
aas
scas
(bad)
cmps
pushf
jge
xchg
fistp
scas
xchg
fs
test
cld
sbb
inc
sub
rcr
dec
jmp
shr
icebp
sub
pop
inc
sbb
mov
xor
inc
inc
clc
arpl
inc
pop
sahf
push
push
call
lock
push
sbb
jns
sub
adc
dec
rcr
and
dec
jmp
inc
dec
movzx
mov
(bad)
cmp
and
test
push
test
je
in
push
xor
pop
mov
(bad)
mov
jne
mov
and
jmp
mov
pop
add
aad
(bad)
jmp
shl
imul
ins
xchg
pop
mov
ret
inc
xchg
pop
cmp
aad
xor
dec
mov
adc
inc
mov
pop
xor
push
shr
push
imul
dec
xchg
cmp
push
or
push
xchg
jge
pop
xchg
jo
and
pop
sahf
push
push
movs
dec
ret
add
push
pop
fisttp
rol
test
(bad)
or
mov
xor
je
mov
add
add
sbb
sbb
ror
shl
mov
inc
jmp
shl
fadd
sub
aam
cmp
dec
lock
jno
jb
or
jle
jle
ja
add
jmp
and
jb
adc
and
jmp
or
sub
jo
lods
sub
nop
test
fdivr
clc
loopne
outs
or
inc
rol
dec
mov
lock
bound
dec
add
(bad)
fidivr
cld
inc
pop
repnz
iret
scas
mov
and
jb
adc
cmp
into
ja
repnz
rol
test
loop
or
sub
(bad)
div
test
pop
inc
ss
(bad)
hlt
movs
jno
push
out
sbb
add
push
add
mov
rol
ss
push
sbb
xor
sub
or
int3
fwait
pop
or
sbb
or
aas
dec
repz
jmp
or
loopne
sbb
mov
sbb
fisubr
dec
je
mov
shr
inc
or
rol
cmp
sbb
jbe
jp
mov
add
loope
or
mov
adc
rol
and
cwde
(bad)
adc
add
dec
inc
sub
ret
je
sub
xor
add
nop
fisubr
ret
sub
out
or
mov
jp
xchg
add
or
std
or
push
pop
push
cmp
sub
je
leave
std
lahf
out
sub
adc
cmp
push
push
dec
dec
hlt
mov
adc
jl
retf
add
push
mov
into
add
je
cmp
push
add
cmp
js
repnz
jecxz
inc
push
push
xor
jnp
jmp
xor
xor
sub
jmp
push
lock
push
jmp
xor
push
adc
sbb
ret
out
push
outs
pop
and
fst
mov
adc
ficomp
js
cmp
push
mov
adc
cmc
inc
or
add
into
mov
adc
jg
or
out
repz
or
retf
pop
sbb
jo
popf
adc
push
jl
xchg
imul
sbb
pop
adc
or
or
enter
out
hlt
clc
inc
pop
jne
push
out
sub
sbb
in
mov
ret
shl
jg
add
push
pop
inc
add
push
jg
push
sbb
mov
mov
jae
aas
pop
loop
popa
sbb
test
sbb
mov
loop
in
cmp
shl
jp
sbb
inc
pop
mov
pop
aaa
pusha
inc
or
dec
add
retf
push
into
xor
aas
cmp
mov
and
mov
and
mov
jns
mov
or
or
add
enter
push
jne
pushf
push
pop
stc
dec
sbb
cmp
call
or
xor
ss
(bad)
push
sbb
mov
xchg
jne
jle
jbe
dec
das
je
mov
mov
lods
stos
dec
add
inc
sub
add
int
mov
movs
mov
mov
lahf
mov
inc
inc
cmp
push
add
add
add
push
call
bound
pop
add
pop
jp
add
or
jmp
or
add
sbb
rol
test
nop
push
pusha
mov
sbb
and
cwde
mov
xor
fadd
int3
fs
mov
icebp
jbe
add
jbe
or
xchg
push
out
jmp
xor
mov
add
imul
in
test
xor
mov
inc
sbb
aaa
shr
xchg
add
ret
test
pop
dec
xlat
adc
sub
cmp
dec
push
ss
fidivr
sbb
mov
pop
dec
jbe
mov
xchg
dec
add
sbb
in
sti
and
movsx
dec
jne
rcl
or
pop
test
xchg
mov
dec
(bad)
push
call
mov
in
std
fadd
lock
jg
mov
bound
mov
fnsave
add
adc
mov
mov
xchg
push
call
jl
ror
shl
or
mov
cmp
pop
inc
cmp
out
scas
aad
sbb
fisub
cdq
jne
or
sar
scas
push
mov
stos
xchg
cmps
mov
mov
jo
push
ror
mov
retf
lea
or
int3
add
test
and
rcl
test
add
pushf
leave
or
push
adc
ret
(bad)
out
in
icebp
cld
dec
test
int
lock
pop
jmp
mov
or
jmp
test
mov
xchg
mov
test
pusha
mov
daa
add
and
pop
sub
retf
test
add
inc
aas
jmp
add
cmp
xor
div
xchg
and
loopne
and
jne
les
or
sub
sub
(bad)
and
add
sti
sub
jl
call
test
cld
loop
cmp
or
sbb
inc
mov
clc
add
(bad)
fstp
lods
pop
mov
cmp
loopne
stc
xor
dec
cld
imul
ds
rol
je
retf
push
xlat
retf
jne
pop
add
mov
inc
shl
ja
mov
jmp
push
inc
fldenv
fcom
loope
shr
jno
fwait
ror
pop
dec
inc
ret
mov
add
(bad)
aad
aas
jnp
mov
inc
je
inc
sub
or
ret
cmp
lock
lea
inc
push
sahf
sub
mov
rol
mov
loop
mov
and
push
test
daa
xchg
in
bsf
add
jmp
clc
inc
push
repnz
and
add
mov
or
sbb
add
pop
mov
ins
(bad)
cld
ror
push
dec
lahf
mov
pshufw
imul
inc
in
enter
xchg
inc
mov
mov
lea
and
dec
and
inc
sbb
or
rcl
inc
jbe
pop
mov
sar
adc
xabort
std
(bad)
push
js
cmp
jl
sbb
dec
cmp
je
or
add
inc
cli
push
add
retf
outs
inc
fadd
out
pop
xchg
mov
mov
inc
stos
pop
push
add
mov
dec
and
imul
loopne
test
js
mov
es
cli
je
or
mov
in
daa
dec
sbb
adc
add
jl
push
push
test
add
xchg
js
add
add
mov
mov
mov
pop
mov
push
xchg
pop
mov
scas
stos
add
add
and
imul
adc
jnp
and
pop
dec
add
ss
or
adc
mov
repz
push
pop
and
es
aaa
mov
jmp
add
add
mov
icebp
mov
jns
clc
or
push
mov
clc
mov
or
popf
xor
fcom
push
in
jl
shr
xor
xor
adc
loop
inc
add
xor
(bad)
es
or
ror
mov
dec
jmp
and
cmp
(bad)
ret
mov
add
inc
std
pop
push
push
push
xor
xor
dec
jge
inc
inc
push
sbb
fidivr
mov
sbb
inc
ss
inc
cmp
sbb
sbb
retf
adc
push
jmp
dec
pop
push
inc
and
fnstenv
push
sub
adc
add
inc
leave
in
rol
dec
jns
mov
pop
hlt
cmp
jae
or
loope
(bad)
stos
jae
lods
rcl
jmp
pop
shr
movs
je
fsubr
adc
push
add
icebp
cld
adc
xor
gs
add
cmp
add
push
push
ins
sbb
push
inc
out
push
clc
or
add
pop
inc
push
rcl
arpl
or
shl
xchg
data16
or
jne
mov
fcomp
inc
rol
jmp
pop
cwde
out
popf
cmc
adc
adc
sub
sbb
xor
jne
ds
inc
cwde
js
movs
out
add
xchg
add
sbb
rol
sbb
xor
adc
addr16
cld
or
mov
pop
or
inc
imul
cmp
ins
add
pop
sub
jnp
jae
enter
out
cmps
(bad)
les
pop
or
sbb
and
jbe
fmul
in
mov
imul
movs
jo
fiadd
jp
and
dec
push
cmp
call
and
loopne
hlt
xchg
mov
xor
push
mov
xlat
push
mov
ins
push
dec
push
push
std
and
test
outs
leave
out
dec
push
xor
adc
push
je
sbb
(bad)
div
inc
sub
jecxz
pop
mov
enter
movs
shl
sbb
cmps
sub
push
setle
mov
push
aas
add
test
cmp
pusha
mov
lahf
sar
and
inc
lods
push
clc
add
rcl
mov
pop
rcr
aam
mov
pop
cdq
mov
shl
add
adc
adc
stos
and
shl
sub
or
mov
call
add
jmp
bsf
add
jle
xor
cmp
cmovne
dec
out
sub
fimul
movs
or
js
dec
mov
push
push
loope
dec
push
sub
imul
mov
movs
scas
and
aaa
fdiv
xor
add
cli
xchg
xchg
movs
inc
je
xor
not
push
jne
and
or
mov
xchg
xor
ret
push
mov
cli
(bad)
std
inc
cld
cmp
je
lock
in
adc
loop
adc
pop
cli
iret
jmp
pop
mov
or
dec
retf
cld
mov
sbb
dec
lods
mov
xor
adc
jle
mov
movs
add
push
ror
or
or
push
jbe
push
test
adc
or
jb
add
mov
or
push
or
sub
js
xchg
leave
adc
in
adc
int3
or
xlat
mov
mov
add
and
(bad)
out
ret
sub
jns
and
add
cmp
retf
push
jo
adc
or
jle
je
rol
inc
test
jb
add
aam
pop
jb
or
sub
pushf
jbe
push
and
mov
push
sbb
adc
dec
mov
add
loopne
pop
jbe
sub
add
sub
or
in
int
sbb
dec
mov
dec
rol
or
mov
pop
dec
lock
dec
out
fstp
enter
sbb
xor
bound
ss
xor
fcomi
jo
mov
xchg
jmp
sub
nop
clc
sahf
sbb
je
xor
mov
jmp
leave
rcr
or
wbinvd
lea
test
xchg
nop
sub
mov
(bad)
mov
dec
and
sub
jbe
div
xor
mov
sar
push
aam
add
mov
(bad)
pusha
mov
(bad)
test
inc
pop
sub
outs
fcom
cmp
sbb
lea
ret
mov
jecxz
sbb
dec
mov
add
pop
mov
add
jno
cmc
sub
push
cdq
div
cmp
or
pop
inc
cmp
jbe
mov
pop
aam
icebp
sqrtps
lahf
cmp
cld
lock
sub
and
inc
loopne
pop
mov
add
lock
xchg
lods
je
popa
mov
outs
call
dec
xor
inc
inc
and
test
fiadd
(bad)
retf
mov
xor
les
inc
ror
sbb
mov
mov
pop
idiv
sbb
imul
push
mov
or
mov
mov
cmp
ror
jo
fisttp
dec
jl
movs
cmp
or
scas
(bad)
sub
std
cmp
and
pop
push
pop
and
add
jne
xor
or
mov
rcr
movs
mov
cmp
mov
mov
xor
push
fist
inc
or
bound
xchg
fwait
push
dec
cdq
xor
enter
dec
sahf
imul
xchg
out
dec
inc
test
sbb
dec
data16
push
adc
jl
or
sbb
adc
std
cmps
jmp
aaa
xchg
pop
inc
adc
mov
movsx
or
cli
or
or
push
push
dec
sub
and
push
or
mov
icebp
xor
xor
sub
pop
jo
loop
loope
das
jmp
inc
add
push
sbb
and
sub
mov
xor
ficomp
xor
sub
jmp
sbb
arpl
inc
or
cmp
push
pop
inc
add
sub
sub
mov
sub
fs
jge
loopne
ja
mov
sar
outs
fcomp
inc
ss
ss
jl
(bad)
jl
jp
push
gs
int3
stos
add
mov
jo
mov
sbb
movs
push
xchg
dec
clc
dec
rcr
(bad)
add
adc
add
mov
and
dec
jg
add
inc
sub
shl
push
adc
jmp
inc
xchg
add
mov
fwait
add
pushf
push
nop
add
in
idiv
(bad)
jl
fidivr
mov
mov
fidivr
(bad)
in
mov
test
inc
sub
movs
jmp
pop
aaa
fadd
inc
test
enter
add
enter
add
push
push
jae
aam
mov
js
jmp
push
retf
in
xor
pop
jge
mov
push
mov
jmp
inc
and
push
push
xchg
adc
mov
ret
outs
mov
dec
loopne
mov
mov
ret
mov
or
cs
mov
or
ror
in
add
dec
outs
inc
movs
es
data16
mul
sti
shl
sbb
test
pop
iret
loopne
ret
adc
pop
sub
mov
repnz
mov
nop
and
ds
or
gs
jge
cmp
jl
movs
(bad)
in
add
jno
jmp
and
add
test
sub
or
and
mov
jmp
sub
push
mov
sub
lds
repnz
lds
pop
ror
pop
jmp
jbe
ss
in
push
xchg
movs
and
inc
sub
pop
sbb
out
and
mov
bound
dec
pop
xchg
jae
sub
mov
fld
push
inc
push
aam
jno
push
pop
stc
xchg
sub
or
or
pop
add
fsubr
xor
outs
hlt
test
bound
retf
not
in
push
push
xor
call
sbb
(bad)
loopne
pop
xlat
mov
xchg
xlat
int3
inc
dec
pop
jl
hlt
xchg
push
add
out
adc
cmp
jl
icebp
jmp
cmp
jmp
and
mov
fwait
cmp
rol
int3
mov
sbb
and
mov
bound
inc
dec
fdiv
inc
mov
inc
aaa
cmp
xor
xor
aas
inc
inc
loopne
popf
jge
daa
and
loope
nop
popa
inc
jne
mov
inc
xchg
repz
mov
sub
mov
sbb
loopne
cwde
mov
dec
inc
push
sub
xor
and
add
pop
lea
mov
add
pop
adc
jno
jge
mov
lock
jne
add
mov
push
stos
ins
sbb
jne
aaa
fwait
pmulhuw
cmp
mov
xchg
xchg
test
add
adc
push
or
xchg
cmp
retf
dec
and
in
lock
fist
inc
cmps
push
pop
sub
(bad)
mov
pop
pop
sub
shl
sub
adc
add
jp
add
movs
or
sbb
mov
ins
ret
cmp
aaa
cmps
or
or
je
popa
mov
or
out
mov
sbb
jnp
aad
cdq
add
mov
inc
iret
cmp
cld
jno
int3
out
pop
dec
jmp
and
add
cmp
add
out
ret
sub
iret
or
xchg
ins
mov
dec
pop
out
jmp
sbb
pop
fisubr
pushf
scas
jbe
mov
add
lods
sbb
sub
outs
mul
out
je
xor
jle
jle
add
rol
fs
and
mov
cmp
push
xcrypt-ecb
cmps
jbe
add
xor
adc
mov
sub
adc
mov
repnz
mov
retf
ret
int3
xor
pop
inc
dec
sub
fisubr
inc
jge
mov
dec
repz
out
xor
jbe
adc
rol
add
mov
fisubr
cmps
dec
test
in
movs
jb
add
stc
outs
nop
das
enter
add
shl
inc
inc
out
cmp
xchg
push
dec
(bad)
pushf
cwde
xor
add
or
(bad)
les
loop
sub
mov
xchg
and
mov
sbb
rcr
or
pop
iret
je
xchg
mov
xor
add
clc
aam
into
or
stos
leave
mov
data16
cmps
fstp
scas
out
retf
mov
lahf
jno
dec
mov
or
out
push
inc
imul
xor
inc
mov
mov
sbb
sub
test
(bad)
rol
lock
push
adc
inc
loopne
mov
and
or
sub
dec
scas
pop
call
mov
inc
mov
mov
cmp
jl
sub
inc
mov
lods
dec
push
inc
mov
jle
or
mov
xchg
out
push
test
push
or
stc
fimul
push
pop
call
add
jns
imul
add
pop
add
dec
test
sub
fstp
jg
jmp
add
mov
xor
mov
jns
mov
and
jmp
loopne
and
push
mov
adc
dec
pushf
mov
ret
enter
mov
push
mov
jb
mov
sub
mov
dec
mov
push
into
cwde
adc
cmp
pop
mov
movs
and
and
mov
cmp
cli
and
pop
mov
mov
jmp
sub
clc
pop
jns
shl
mov
ja
shr
pop
int3
inc
sbb
push
clc
outs
call
sbb
adc
les
or
push
push
push
int
sub
cmp
cmp
je
xchg
or
adc
fiadd
add
push
jle
lea
adc
pop
lea
mov
pop
jg
jae
sub
clc
mov
jp
mov
cmp
jae
jge
mov
inc
test
push
retf
in
(bad)
add
mov
push
push
and
mov
nop
mov
inc
add
fcmovbe
jg
fisttp
cmp
xor
adc
cmps
push
(bad)
cmp
das
shl
xor
jmp
in
and
fsub
mov
rol
ror
lahf
jbe
adc
fs
jg
xor
in
jne
imul
mov
imul
stos
fmul
or
inc
aam
je
inc
dec
es
xchg
mov
push
shr
or
mov
loope
shr
shr
or
test
into
push
jg
adc
rcr
pushfw
push
jnp
lock
or
stos
aam
jmp
and
loopne
or
rcr
push
and
mov
or
mov
lods
daa
lock
adc
push
push
sahf
in
std
sbb
jmp
inc
mov
push
movq
sub
pop
adc
pop
mov
std
mov
jae
jb
or
dec
les
or
pop
mov
or
sbb
jmp
push
and
mov
cmp
push
enter
cmp
dec
xor
push
ret
(bad)
sub
sub
xor
clc
or
loope
mov
lea
fsub
push
and
adc
or
add
rcr
sbb
test
hlt
(bad)
inc
or
sub
push
cmp
cmps
stc
cmp
add
xchg
push
mov
out
mov
cld
pop
push
push
adc
xchg
mov
mov
les
fisub
inc
inc
and
adc
adc
les
fisubr
or
fdivr
aas
sahf
mov
pop
dec
pop
int3
pop
push
mov
movs
mov
push
cmp
jne
or
cmp
adc
aad
repz
loop
fld
mov
add
add
pop
cmp
les
xor
cmp
loope
push
mov
rcl
mov
adc
jne
dec
push
repz
push
mov
mov
push
in
stc
mov
xor
push
mov
pop
ret
xor
std
add
jmp
push
sbb
test
push
inc
ret
adc
or
sbb
in
mov
imul
xchg
loop
lsl
and
fst
xor
mov
int3
dec
adc
mov
stos
fmul
std
mov
jmp
punpckhbw
movs
push
sub
(bad)
ficomp
inc
rol
mov
js
sbb
loope
lods
jns
pop
push
adc
(bad)
(bad)
xor
adc
pushf
xor
pop
test
pop
ret
nop
or
mov
and
cmp
hlt
cmp
lock
adc
jae
mov
adc
sbb
xchg
adc
pop
call
pop
ins
push
clc
inc
call
test
cmp
dec
mov
and
aaa
pop
jge
mov
out
jo
dec
add
out
shl
push
outs
lea
call
sbb
mov
scas
add
rol
push
inc
add
icebp
lea
mov
jb
ins
add
test
imul
dec
aam
in
sub
xchg
jp
jo
mov
cmp
push
add
xchg
xor
jne
add
mov
imul
mov
add
loope
jae
into
mov
dec
pop
sar
add
cld
cld
xor
jo
sub
jg
add
adc
pop
mov
shl
or
inc
test
call
cdq
jmp
into
mov
or
icebp
frstor
mov
jmp
movs
push
rol
inc
mov
(bad)
data16
lock
movs
rcr
lock
sahf
jl
repnz
cmp
xchg
xchg
lahf
ret
inc
cli
test
jl
mov
mov
or
push
shl
adc
out
sbb
jge
jmp
movs
pushf
loop
push
jo
push
mov
out
adc
jne
mov
test
pop
push
js
xor
pushf
sbb
stos
aas
pmuludq
aas
mov
sbb
mov
stc
mov
jge
mov
(bad)
and
(bad)
adc
int
clc
pop
test
push
call
test
mov
sub
xchg
leave
xchg
inc
call
dec
fadd
xor
or
push
fs
adc
call
pop
sbb
sar
mov
lea
xchg
outs
call
ror
jnp
adc
inc
std
cwde
mov
push
push
mov
or
dec
jbe
dec
test
test
push
or
push
dec
shl
jb
push
push
ror
adc
(bad)
mov
or
aas
fucomi
shl
ret
jne
shl
mov
les
inc
out
movs
dec
lock
loop
retf
or
cmp
stc
mov
xchg
in
sbb
jl
xchg
(bad)
mov
(bad)
jl
cmp
cdq
aaa
xor
not
outs
mov
jmp
or
cs
and
mov
jl
loopne
inc
xrelease
das
scas
mov
lock
ins
nop
and
jne
mov
and
out
mov
lods
push
sbb
nop
mov
adc
push
sbb
jno
js
in
jl
aas
inc
dec
or
mov
lock
pop
add
pop
sbb
(bad)
cdq
pop
xchg
or
adc
and
xchg
or
adc
xor
bound
adc
call
or
(bad)
int
(bad)
shr
cmp
pop
jmp
mov
neg
cdq
nop
rol
sbb
cs
in
loope
ret
xchg
jmp
in
loopne
pop
loope
movs
fs
and
push
jb
(bad)
popa
mov
test
cmp
enter
cmp
sbb
sbb
sub
out
pop
or
das
and
les
ds
xchg
xor
dec
mov
jae
adc
mov
aad
sub
jae
cmp
rcl
(bad)
enter
adc
cli
inc
sbb
mov
mov
mov
dec
lea
mov
push
pop
push
(bad)
add
or
mov
sbb
stos
pop
inc
dec
xchg
sub
lock
jne
or
xchg
xchg
xor
push
mov
outs
sar
fdivr
cmp
jne
mov
dec
ss
push
add
(bad)
fild
nop
nop
sub
sub
mov
movsx
mov
push
dec
xchg
pop
je
mov
rcr
into
sbb
xchg
cdq
or
push
or
ret
add
cmps
std
popa
pushf
loopne
add
(bad)
xor
xor
or
adc
or
mov
add
dec
jg
inc
sub
mov
mov
adc
call
cmp
je
cmp
je
cmp
mov
ficom
or
jo
(bad)
mov
ins
adc
pop
and
pop
pop
cmp
clc
sti
lar
jne
or
mov
pop
pop
(bad)
ret
cld
push
test
add
pop
test
or
leave
or
fmul
scas
add
or
cmps
outs
mov
cmp
sbb
movs
shl
test
sub
adc
or
iret
jmp
repz
mov
div
and
xor
jnp
xor
iret
cwde
mov
or
not
and
in
cmp
cmp
xchg
xchg
xor
clc
inc
rcr
ins
clc
mov
mov
mov
xor
pop
into
into
cmps
lea
or
loopne
sbb
je
push
jno
cmp
retf
jne
or
ror
les
xor
retf
into
jnp
cmps
out
adc
jae
mov
cli
scas
loopne
hlt
rcr
pop
in
sar
jecxz
add
fmul
add
add
loopne
cmc
lods
jmp
sub
ins
cli
add
xchg
jns
leave
out
inc
out
inc
push
mov
sub
icebp
push
retf
sub
jl
jp
mov
and
nop
icebp
sub
imul
setae
adc
pop
pop
mov
or
adc
xchg
and
mov
and
or
cmps
in
lock
or
test
xchg
leave
pop
push
pop
push
test
inc
or
add
add
stos
sub
add
add
and
adc
push
sub
push
sub
push
stos
xor
or
retw
ja
jnp
push
pop
pop
jne
mov
adc
mov
std
mov
pop
in
or
push
cmp
les
xchg
lods
add
sub
or
or
add
fidivr
sbb
add
push
dec
jg
inc
in
cmp
sbb
mov
sub
rol
mov
pushf
mulps
shl
add
adc
dec
and
sub
or
getsec
or
neg
(bad)
outs
dec
jl
adc
jne
sbb
call
or
hlt
pop
push
add
jne
and
dec
push
cli
xchg
add
dec
push
pop
or
inc
scas
xor
es
lea
ja
in
imul
push
mov
xor
mov
ret
(bad)
xchg
dec
pop
lock
fimul
pop
cmp
and
cmp
adc
shl
mov
inc
les
mov
mov
ins
call
add
lods
cmp
cmc
gs
imul
add
or
pop
inc
push
call
inc
shl
outs
ja
rcr
push
out
and
stos
into
in
xor
push
push
loop
sub
mov
mov
dec
or
xchg
leave
inc
adc
mov
mov
lods
jg
push
pusha
mov
mov
mov
mov
or
mov
je
and
pop
push
push
cmp
ja
out
(bad)
adc
jmp
ret
(bad)
cmp
jne
cmp
push
adc
jle
jb
and
pop
out
mov
(bad)
and
or
dec
loopne
not
mov
ins
sub
add
cmp
mov
dec
dec
clc
push
sbb
repz
adc
add
hlt
test
sbb
or
add
or
sub
mov
and
loop
mov
or
ins
sbb
inc
in
push
adc
mov
dec
(bad)
adc
pop
jbe
sbb
lock
mov
add
fs
call
ror
cmp
mov
mov
rol
rcl
jge
or
(bad)
jne
call
lahf
aas
or
adc
ret
xor
call
dec
iret
rol
cmp
mov
lea
and
outs
jno
sub
stc
ss
loopne
jp
fnstsw
pushf
add
dec
dec
retf
lock
add
ja
mov
mov
or
loop
and
mov
xchg
shr
adc
dec
fdivp
fistp
mov
div
fs
adc
sub
cld
or
add
inc
xchg
jl
(bad)
data16
and
rcl
rol
sar
ficomp
xor
cmp
outs
sub
mov
pop
fstp
std
xor
pusha
push
sbb
push
std
and
sahf
ret
inc
jb
mov
daa
mov
push
jbe
pop
or
add
nop
add
test
jns
ror
xor
scas
or
inc
fmul
retf
xchg
das
push
push
jb
pop
lahf
inc
fisub
addr16
out
xchg
push
push
add
jnp
inc
fmul
outs
nop
cmp
daa
jg
dec
movs
jb
(bad)
xor
xor
mov
xlat
xor
jnp
jp
pop
and
test
hlt
fimul
jmp
add
mov
in
adc
add
xor
and
ss
jl
adc
inc
jb
pusha
imul
aam
es
movs
push
cmps
mov
gs
or
daa
xor
jno
mov
push
rol
sub
mov
cmp
gs
dec
sbb
out
in
mov
pop
sbb
cmp
cmp
sbb
nop
sub
lock
out
es
push
dec
leave
sbb
aas
add
clc
enter
sbb
dec
mov
adc
lds
leave
and
jno
dec
sub
push
xlat
rcl
lahf
sub
hlt
nop
arpl
pop
mov
lods
mov
add
fsub
mov
cld
jae
ins
scas
(bad)
mov
pop
cmp
dec
mov
jg
push
mov
and
aam
add
aad
movs
and
inc
mov
shr
(bad)
and
je
jmp
daa
out
cmc
stos
or
dec
inc
inc
push
push
or
cmp
pop
arpl
call
cld
mov
(bad)
fs
enter
and
or
fidiv
ja
xor
xor
dec
push
test
push
push
add
sub
dec
xchg
lahf
pushf
pop
push
inc
call
lods
fs
js
pop
adc
sub
lahf
aam
dec
dec
add
push
push
cmps
in
mov
rol
mov
pop
push
jmp
fwait
adc
out
and
lods
pop
and
nop
add
jno
pop
enter
push
addr16
sbb
outs
adc
jbe
jl
cld
dec
pop
adc
jnp
dec
leave
pop
mov
and
adc
or
cwde
mov
sub
push
clc
jbe
push
or
jno
jp
fxch
imul
ins
adc
push
mov
icebp
fcomi
add
xor
push
stc
popa
cmp
push
and
sub
or
daa
add
cwde
jns
sbb
lds
and
fwait
inc
aad
in
inc
cmp
ret
mov
sti
dec
enter
jns
test
push
and
adc
outs
lods
adc
mov
cmps
je
pop
dec
les
and
lahf
enter
nop
push
hlt
jae
stc
seto
popa
sar
in
and
cld
lods
movs
mov
fbstp
push
pushf
mov
rcr
xor
in
push
jae
test
add
adc
call
loopne
cwde
neg
dec
leave
xor
js
push
mov
and
xchg
jg
mov
adc
jo
test
or
dec
pop
xor
in
loope
adc
mov
test
push
test
repnz
cmp
mov
inc
or
or
(bad)
xchg
dec
ins
mov
enter
iret
push
cwde
push
rol
dec
push
push
jo
adc
xor
or
mov
fbstp
pop
cmps
in
and
and
mov
and
xor
test
mov
jl
and
mov
pop
in
nop
sub
xchg
mov
and
int
arpl
fisubr
mov
mov
jg
mov
push
hlt
jl
lock
sbb
mov
jmp
mov
test
add
scas
inc
push
push
sti
mov
pushf
out
movs
in
adc
ds
add
add
jg
mov
daa
mov
pop
(bad)
jnp
xchg
mov
push
sub
push
push
xchg
pop
cmp
dec
sub
push
and
add
test
adc
add
and
scas
and
push
and
dec
pop
inc
mov
pop
repnz
mov
cli
lock
(bad)
lods
dec
sbb
xor
sti
jns
jmp
pop
cmps
data16
dec
mov
in
scas
and
(bad)
lahf
or
lahf
push
daa
leave
cdq
xchg
add
inc
add
pop
repz
pop
pop
mov
inc
dec
out
cmp
xchg
mov
sahf
out
sahf
jo
push
nop
mov
jns
lock
ins
jg
inc
inc
add
bound
mov
mov
fcomp
in
loop
sbb
popa
add
ja
idiv
pop
pop
push
das
es
popa
ins
ins
outs
arpl
imul
int
dec
push
adc
fistp
jmp
out
aaa
hlt
inc
inc
pop
xor
add
push
nop
ss
jle
pusha
nop
push
jo
inc
aaa
pusha
push
inc
pop
in
mov
shl
aam
shl
in
out
and
and
jns
adc
xlat
fmul
cld
adc
cmp
repz
outs
sbb
leave
mov
repz
inc
hlt
paddsb
jbe
cmc
adc
aaa
(bad)
or
sar
push
push
or
fs
daa
out
mov
mov
daa
or
repz
outs
(bad)
sidtd
test
fs
repz
cmp
and
aam
mov
out
jg
sahf
aam
cmp
xchg
cmps
fcom
fnstcw
outs
inc
daa
int
repnz
jecxz
sbb
push
add
push
dec
aad
jg
pop
and
iret
add
sbb
ja
push
daa
cs
push
pop
inc
iret
repz
push
sbb
repz
inc
aam
call
inc
cld
aaa
adc
push
out
sahf
out
push
cmp
push
jns
out
adc
push
es
mov
jns
out
pushf
cmp
push
call
jns
iret
repz
inc
or
cmp
sahf
out
out
sub
fisttp
cmp
jns
cmp
fdivr
push
add
repz
push
aam
in
sbb
cmp
pop
jle
fsubr
push
iret
repz
push
inc
or
cmp
repz
ins
push
addr16
repz
ins
rol
ja
adc
out
pop
cmp
cs
adc
sbb
cmp
or
sub
repz
push
xor
inc
mov
retf
mov
ficomp
push
iret
frstor
add
out
push
jae
mov
cmp
repz
shl
or
shl
hlt
jns
or
sar
mov
push
sub
jns
mov
push
dec
push
push
pop
push
cmps
jmp
add
sahf
out
ficom
mov
mov
or
sbb
imul
add
shr
iret
lock
mov
test
pop
hlt
cmp
or
cmp
repz
ins
and
mov
jmp
push
movs
jg
out
jns
out
mov
mov
mov
out
cmps
out
push
pop
cld
sbb
out
call
cmp
gs
imul
push
and
imul
and
je
mov
mov
jae
arpl
jbe
arpl
outs
popa
ins
ds
push
packssdw
ins
push
aaa
and
and
jae
jne
int
mov
jae
test
jb
sub
ja
mov
imul
and
je
sub
sbb
ins
imul
outs
cmc
inc
xor
std
fbstp
fwait
outs
out
fadd
arpl
test
push
jne
adc
push
dec
jo
sub
mov
data16
cmp
xor
or
xchg
fsubr
cdq
pusha
int3
inc
arpl
add
cmps
jo
mov
bswap
push
adc
popa
mov
outs
sti
jmp
ins
fistp
sbb
outs
mov
xor
fs
pop
imul
ss
push
das
lods
loopne
ret
data16
es
mov
cs
or
shl
pop
ins
add
xor
pop
adc
jo
ins
cmp
pop
bound
mov
jae
and
mov
and
inc
sub
cmp
test
in
push
adc
fild
faddp
shl
fs
sahf
sub
dec
ret
add
addr16
inc
outs
je
sbb
nop
cmp
pop
mov
daa
(bad)
pop
pop
and
in
ins
pushf
fsub
aaa
inc
xlat
fidivr
dec
pop
pop
dec
mov
add
in
imul
pusha
pop
and
pop
leave
pop
jne
add
xchg
data16
pop
sub
pop
jp
push
ins
lock
popa
mov
xor
pop
cld
lods
imul
mov
ja
lods
cdq
rol
pop
int
jle
jl
pop
cmp
data16
jne
lahf
ja
ins
sub
cmp
cmp
inc
aas
mul
int3
xor
pop
push
mul
and
adc
and
sbb
mov
leave
(bad)
shl
outs
push
and
sbb
add
push
rcl
jo
xchg
sub
gs
and
mov
sbb
aas
sbb
mov
add
cmp
in
add
hlt
ins
push
jge
loopne
pusha
ja
fiadd
pop
dec
mov
outs
xor
jne
push
bound
popf
inc
lock
jns
adc
fild
pop
scas
inc
arpl
jo
add
popa
xor
mov
sbb
je
push
mov
jge
cmp
pop
ins
imul
popa
icebp
fbld
in
cmps
push
fs
and
and
add
and
push
fsubr
add
daa
jmp
in
(bad)
loopne
das
pop
aaa
push
mov
je
ins
aaa
sub
cmp
cmps
mov
push
xlat
add
aaa
icebp
pop
stos
mov
movs
mov
lds
pop
mov
xor
mov
arpl
imul
nop
push
pop
and
xor
xor
sbb
mov
movs
inc
lock
dec
fisub
jns
fwait
jae
add
xor
arpl
sbb
cmp
pop
adc
outs
or
pop
mov
cmp
jb
or
outs
sti
repnz
adc
mov
shl
aas
imul
inc
ins
data16
je
rcr
or
ins
mov
jne
xor
(bad)
cmp
dec
mov
mov
push
push
pop
inc
push
(bad)
loopne
and
mov
mov
push
aas
sub
inc
rcr
rol
call
iret
leave
lock
clc
cld
add
pop
ja
cmps
add
or
xchg
rep
pop
popa
punpckldq
ja
bound
sub
bound
repz
imul
and
repz
xor
add
or
push
cld
out
cmp
test
xor
jbe
push
push
data16
sbb
adc
pop
mov
movs
dec
jl
pop
sbb
imul
pop
pusha
loopne
nop
in
and
jnp
rol
pop
jle
add
dec
inc
fistp
sahf
(bad)
into
fist
push
rcr
push
add
ror
xor
push
mov
adc
out
jns
daa
into
push
push
nop
rol
lock
push
push
pop
jg
cmp
lock
mov
xor
mov
addr16
push
sbb
jno
ins
ins
adc
jb
jne
ja
jns
xchg
(bad)
fbstp
and
or
or
or
pop
inc
and
sbb
push
inc
sahf
cmps
std
adc
adc
adc
push
or
lahf
inc
inc
inc
inc
inc
inc
add
inc
add
add
push
pop
or
or
or
push
ud2
dec
sti
jnp
ret
int3
cmp
xor
and
movs
fdivr
movs
xor
mov
or
bound
inc
adc
call
aas
jp
add
inc
inc
dec
call
(bad)
aas
call
cmp
cmps
dec
add
dec
xor
outs
push
or
push
cwde
iret
sar
xor
jecxz
xor
(bad)
cmp
dec
sar
inc
aam
mov
fistp
(bad)
xchg
sar
out
xor
icebp
rcl
lods
nop
and
xchg
inc
jg
iret
adc
and
cmp
dec
imul
cmps
mov
and
mov
sbb
push
mov
jg
inc
mov
dec
cld
inc
jns
xor
into
push
shl
lods
inc
cld
call
sbb
mov
mov
cli
sbb
adc
dec
jno
hlt
dec
call
push
mov
xor
das
(bad)
dec
leave
(bad)
xor
test
xor
pop
add
(bad)
inc
ficomp
adc
xor
mov
mov
jbe
lahf
mov
pop
in
retf
daa
scas
jns
mov
xor
lock
mov
inc
cmp
cwde
dec
addr16
out
rcr
or
push
push
jno
and
gs
sahf
mov
dec
jo
std
push
xchg
scas
ins
aaa
cs
mov
pop
(bad)
repnz
inc
push
push
sahf
xchg
test
cmps
inc
pop
fwait
cmps
stc
sbb
mov
adc
sbb
push
pop
cmp
push
sbb
push
mov
xor
addr16
rol
cmovbe
outs
imul
test
arpl
add
aas
pop
pop
pop
sar
mov
add
or
pop
and
adc
test
xchg
sbb
adc
pop
adc
add
add
add
adc
fild
fiadd
add
ja
or
mov
je
adc
aaa
add
test
mov
pop
rcr
sub
out
and
(bad)
(bad)
jg
or
xchg
mov
xchg
xchg
xchg
xchg
xchg
xchg
(bad)
(bad)
(bad)
call
popf
sahf
lahf
mov
movs
cmps
cmps
test
stos
stos
lods
lods
scas
scas
mov
mov
mov
mov
(bad)
(bad)
(bad)
(bad)
mov
mov
ret
(bad)
enter
int3
int
iret
rcl
rcl
aam
(bad)
xlat
(bad)
(bad)
(bad)
(bad)
fcomp
fcmovu
(bad)
(bad)
loopne
loop
in
out
call
in
out
out
lock
repnz
cmc
div
test
cli
clc
stc
cli
sti
cld
nop
pop
(bad)
(bad)
call
adc
adc
sbb
sbb
push
pop
and
and
and
es
sub
sub
jg
clc
sub
cmp
or
bound
push
add
jl
jle
call
mov
cmps
icebp
push
inc
dec
dec
dec
dec
dec
dec
dec
dec
push
push
push
pop
xchg
pop
(bad)
aas
js
xor
data16
xchg
or
in
jne
aam
scas
lods
xchg
imul
rol
gs
or
add
sar
add
jae
sar
inc
jb
cmova
push
cdq
cmp
push
dec
outs
imul
adc
push
movs
inc
fnstenv
xchg
fidivr
and
push
ins
popa
jo
outs
push
jg
out
and
jo
push
arpl
inc
jne
and
gs
xor
hlt
outs
outs
ins
push
(bad)
ds
sub
lds
mov
jnp
push
bound
xchg
or
add
sub
pop
ins
xchg
out
jne
push
xchg
push
fisub
xor
dec
dec
imul
outs
push
out
ss
push
mov
jb
inc
js
pop
mov
int3
adc
cmp
cmp
push
xor
dec
outs
addr16
or
mov
dec
movs
jno
outs
push
addr16
jmp
push
inc
add
mov
rol
pop
addr16
imul
adc
test
pop
outs
ins
jo
mov
je
outs
addr16
out
test
retf
jbe
pop
xchg
pop
pop
repz
outs
aas
xor
sbb
push
and
push
dec
in
lods
cmp
push
push
sub
(bad)
adc
dec
inc
dec
jmp
sub
dec
fs
fimul
(bad)
mov
out
sahf
out
sbb
jns
xor
cmp
inc
or
out
dec
or
pop
out
sahf
out
pusha
or
jns
jo
js
adc
sahf
out
mov
nop
adc
adc
adc
jns
mov
mov
sahf
out
enter
fsub
jns
out
loopne
call
sahf
lock
cs
repz
xor
push
or
adc
cmp
repz
repz
daa
xor
cmp
inc
cmp
repz
dec
sub
sub
pop
das
pusha
ss
aaa
jo
js
cmp
cmp
mov
nop
inc
repz
repz
inc
mov
cmp
inc
mov
mov
repz
enter
repz
repz
dec
call
push
lock
clc
repz
jmp
add
pop
or
jnp
jmp
nop
xchg
add
sahf
out
dec
sbb
push
and
xor
sahf
out
cmp
dec
push
push
out
sahf
out
pusha
or
out
sahf
js
test
or
pushf
push
test
mov
jns
out
rcl
adc
adc
adc
adc
cld
push
or
sbb
cmp
repz
sbb
iret
repz
cmp
sbb
repz
pop
push
iret
repz
repz
cwde
and
and
repz
daa
enter
cmp
repz
sub
sub
imul
add
sbb
out
sahf
xor
xor
xor
jns
dec
aaa
pop
cmp
jns
out
cmp
jl
out
sahf
cmp
jns
out
inc
lods
inc
mov
out
inc
fadd
dec
repz
inc
hlt
inc
add
or
iret
repz
sbb
dec
repz
repz
dec
dec
iret
repz
push
push
push
pusha
push
ins
cmp
repz
js
mov
cmp
repz
imul
iret
add
sahf
out
sahf
fadd
call
iret
sar
or
adc
repz
repz
xor
iret
repz
cmp
dec
sbb
repz
cmp
repz
pushf
imul
les
pop
fcomp
call
repz
or
and
sahf
cmps
stc
cmp
add
inc
add
jns
out
pop
pop
or
jmp
jl
adc
push
xchg
jg
movs
adc
xchg
cmps
rcl
adc
adc
movs
test
adc
sahf
imul
add
sbb
adc
jns
out
and
sub
cmp
inc
cmp
mov
sbb
push
test
call
and
and
push
sar
and
dec
movs
fsub
and
repz
push
and
or
adc
sub
repz
and
sub
cmp
sub
movs
test
sub
dec
push
imul
cmps
rcl
xor
dec
stos
xor
cwde
xor
cmp
mov
rcl
mov
cmps
xor
aam
loopne
in
inc
int
test
or
repz
sub
or
cmp
push
inc
(bad)
pop
es
jno
add
iret
jnp
fmul
pop
fisub
repz
jo
jl
mov
cmp
repz
aad
shr
mov
repz
rcr
fadd
int3
pop
pop
idiv
mov
out
repz
aaa
sub
or
push
and
cmps
ret
xchg
and
cmp
mov
out
fdivp
push
dec
inc
pop
push
jge
sahf
aaa
pop
xchg
mov
js
inc
sub
mov
inc
push
nop
xchg
repz
pushf
dec
cmp
adc
push
mov
ss
retf
or
push
mov
stos
out
repz
inc
push
in
xchg
or
hlt
dec
xchg
or
xor
sbb
leave
xor
mov
push
mov
out
sahf
out
ins
sar
adc
jns
test
nop
shl
repz
jns
pushf
ror
test
mov
repz
xlat
ror
mov
cmp
repz
in
lock
jns
iret
repz
lods
or
adc
jns
out
and
sub
jns
jns
cmp
inc
loope
push
fcmovne
repz
push
outs
inc
sub
sbb
out
iret
fwait
mov
sahf
mov
ficom
movs
push
dec
and
cs
mov
daa
iret
repz
aaa
or
mov
aam
iret
repz
loopne
in
mov
adc
repz
mov
out
or
les
out
push
dec
and
das
push
sub
cmp
mov
push
inc
pop
daa
mov
push
dec
dec
xchg
sub
pop
icebp
cmp
repz
pop
fs
cmp
dec
cmp
cmovb
repz
push
mov
test
(bad)
xchg
push
push
pop
aaa
mov
push
jb
xor
fdivr
mov
int
adc
les
sub
push
inc
xor
loopne
cmp
cmp
xor
sub
and
or
jnp
pushf
daa
sub
adc
sbb
out
fwait
adc
cmp
push
sahf
out
sahf
cmp
mov
inc
repz
jnp
push
dec
ja
jne
fwait
sbb
fs
ja
push
jo
data16
jns
jl
push
xchg
cmps
outs
dec
cmp
adc
xchg
lea
int3
js
jle
adc
lods
push
sahf
test
push
push
les
ror
sbb
test
push
sub
pop
sbb
repz
pop
or
out
iret
fwait
pop
cmp
sbb
out
jns
xor
pushf
mov
(bad)
dec
push
pop
pop
push
push
push
cmp
repz
jo
xor
iret
repz
mov
sbb
mov
daa
sbb
rcr
add
ret
xor
sahf
out
cld
cmps
jg
cdq
iret
cmp
push
sub
outs
push
pop
sbb
fwait
sbb
xor
inc
jp
sbb
fwait
xchg
push
mov
cmp
iret
repz
pusha
adc
ins
cmp
dec
mov
inc
sbb
repz
pushf
jl
sbb
sahf
aaa
aaa
sahf
mov
push
xor
rcr
fdivr
daa
mov
mov
adc
add
idiv
repz
nop
xor
outs
cmp
repz
mov
stos
pop
inc
dec
push
ret
jo
cmps
stos
out
shr
(bad)
in
add
jp
push
aas
fs
es
test
sahf
fisub
imul
repnz
call
je
cs
jl
push
add
outs
jbe
popf
fcomp
jo
pop
jb
jb
cmp
stos
imul
jbe
mov
push
es
mov
pop
outs
bound
fbld
cs
pop
data16
scas
lods
sub
mov
inc
fwait
jl
ins
cs
ins
mov
in
outs
outs
imul
popf
jl
lahf
sub
jne
push
outs
ins
cmp
sub
gs
fsubr
mov
das
popa
pop
outs
outs
ins
sbb
fbstp
fild
jns
fs
jbe
sbb
test
jno
xchg
xor
push
pop
ret
inc
push
scas
ds
pop
pop
cs
inc
push
inc
add
inc
movs
in
js
push
sub
push
mov
jle
push
push
inc
add
inc
jno
xlat
pop
push
jne
(bad)
ja
push
pop
je
out
push
ins
sub
dec
ja
retf
jnp
mov
bound
cmp
sub
jo
scas
(bad)
push
xchg
out
shl
inc
push
jb
push
push
aaa
dec
into
aas
dec
cs
imul
jbe
jno
dec
push
ds
pop
jb
call
out
dec
jg
inc
out
jb
mov
out
gs
cmps
mov
dec
pop
mov
je
(bad)
push
pop
je
aaa
cmps
pusha
sar
inc
dec
inc
push
pop
aam
dec
dec
pop
pop
imul
rcl
mov
dec
out
jb
retf
dec
ds
js
ins
inc
fcmovnu
pop
mov
(bad)
pop
cs
pop
sbb
xlat
inc
cmps
outs
dec
pop
mov
dec
mov
sub
(bad)
gs
das
jae
shl
mov
pop
jns
das
xchg
cmp
outs
push
mov
ja
cmps
push
ja
es
sbb
mov
ja
jg
je
shl
and
pop
jb
jae
ucomiss
ins
pop
dec
arpl
xchg
mov
sbb
push
retf
shl
sub
mov
retf
jo
xor
das
jae
ins
add
dec
sbb
push
xchg
add
lahf
neg
xlat
pop
imul
ss
inc
scas
pop
jg
mov
jmp
push
imul
or
inc
fild
cmps
fld
addr16
dec
arpl
adc
pop
pop
nop
(bad)
loopne
inc
mov
inc
add
mov
ficom
add
adc
add
aas
in
mov
add
add
mov
ds
add
fild
sbb
mov
test
imul
push
(bad)
xchg
dec
ds
add
add
fnstenv
mov
pop
(bad)
outs
mov
mov
and
pop
jo
mov
inc
scas
push
das
inc
inc
inc
rcl
outs
scas
popa
(bad)
push
frstor
pop
inc
dec
or
lods
xchg
pop
xchg
inc
jmp
inc
ds
add
pop
xchg
push
dec
fidiv
addr16
aaa
cmp
xchg
cdq
pop
inc
jg
aaa
pop
lea
mov
and
inc
jmp
fdiv
push
out
push
dec
mov
mov
pop
inc
inc
in
or
mov
popw
push
jno
pop
push
aaa
das
inc
mov
imul
push
das
push
iret
nop
psubw
adc
add
add
adc
ficom
dec
(bad)
push
pop
cmp
dec
aas
data16
pop
jnp
push
xlat
or
bound
push
fs
pop
inc
addr16
imul
pop
push
outs
imul
ins
add
jbe
and
or
das
jno
pop
daa
pop
sbb
ja
addr16
rcl
cmp
arpl
das
push
mov
push
mov
imul
jae
ja
rcr
xchg
ja
mov
pop
bound
imul
cs
push
push
in
ins
pop
retf
jne
mov
outs
ins
or
jb
xor
fnstcw
popa
dec
pop
bound
jp
sbb
ins
dec
pop
bound
and
(bad)
outs
addr16
sbb
jo
push
mov
push
ja
(bad)
fisub
inc
pop
jmp
leave
add
fs
leave
pop
out
jae
in
add
add
add
xor
inc
outs
add
in
dec
cmps
pop
gs
xchg
int3
push
xor
das
jne
dec
movd
aaa
gs
sbb
dec
xchg
aas
or
pop
enter
or
pop
pop
push
or
daa
pop
ins
dec
jp
pop
mov
out
pop
dec
fsub
ja
imul
fld
out
popa
pop
or
or
popa
ret
mov
or
shr
dec
pop
or
or
sub
pop
push
jp
(bad)
mov
sbb
dec
jb
fwait
jno
pop
jns
inc
or
inc
mov
pop
lods
les
(bad)
out
xlat
xchg
pop
cs
stos
outs
outs
jb
icebp
ins
mov
pop
inc
jns
jno
fnstsw
out
mov
addr16
or
in
xor
xlat
fisttp
test
mov
mov
push
pop
sti
pop
add
xlat
or
sbb
leave
mov
fnsave
jge
pop
dec
pop
or
imul
mov
not
arpl
imul
arpl
jb
push
sti
mul
inc
popw
jae
iret
ins
pop
pop
mov
cs
mov
jae
jo
fcmovnbe
fisubr
pop
jbe
pop
push
pushf
mov
imul
pop
rcl
sub
mov
jmp
out
inc
dec
or
jl
mov
aaa
jne
jne
and
xchg
and
ja
push
mov
pop
jbe
jne
ja
(bad)
out
mov
pop
xor
je
addr16
fsubr
push
outs
sbb
addr16
inc
ficomp
mov
add
jns
cmp
xchg
lea
xchg
dec
cmp
mov
xchg
pop
xor
mov
mov
xchg
lock
jb
push
sub
outs
jb
js
sbb
push
jmp
cmp
or
jl
je
adc
push
jnp
popa
mov
and
into
ins
push
data16
add
cmp
fstp
fsubr
scas
xor
fidivr
push
scas
jp
outs
inc
sub
add
sub
and
ins
outs
loopne
and
inc
stos
or
dec
xchg
scas
popa
sahf
and
or
aaa
jne
gs
cmp
imul
mov
add
outs
dec
imul
out
push
(bad)
add
stos
mov
cmp
jo
pop
sbb
ins
xlat
sub
and
jo
pop
jae
bound
inc
stos
sbb
add
cmp
(bad)
xchg
sub
scas
or
mov
and
fistp
out
jmp
xor
prefetch
or
ins
iret
(bad)
arpl
xor
xor
inc
sbb
das
es
jge
retf
sti
jae
shr
imul
jg
ffreep
add
fistp
out
(bad)
xor
dec
stos
call
lods
loopne
push
xchg
ins
xchg
inc
pop
sub
ins
adc
popa
(bad)
cmp
out
ins
xor
mov
mov
(bad)
mov
lahf
fs
neg
mov
aas
or
add
out
jo
vpshufd
cs
xor
adc
xor
lds
pop
xor
fld
and
cmp
dec
and
pop
pop
ins
js
pop
addr16
bound
sub
ret
sbb
imul
pop
ficom
out
fucomip
mov
pop
xor
jae
jae
jne
xchg
jb
das
in
add
jb
shl
out
imul
dec
xchg
add
arpl
das
dec
call
lahf
popa
push
lds
(bad)
push
fiadd
inc
daa
dec
jbe
jbe
push
cmp
jl
cmp
aas
and
mov
pop
sub
imul
(bad)
pop
test
aad
add
inc
fidivr
pusha
aaa
push
outs
dec
inc
push
cmp
loope
mov
sti
outs
das
ins
adc
lea
inc
mov
cmp
or
jns
or
adc
adc
je
rcl
mov
das
adc
iret
repz
cmps
adc
push
sbb
sbb
adc
push
out
fdiv
xor
je
das
push
sti
call
and
and
sbb
iret
sar
jns
jp
jmp
mov
out
xor
pop
mov
cmp
jo
imul
mov
dec
mov
adc
inc
addr16
out
nop
inc
and
push
sbb
push
sbb
(bad)
cmp
mov
fwait
imul
or
sbb
ds
add
or
jecxz
jae
aaa
push
xchg
mov
pop
iret
mov
ja
mov
and
dec
adc
jb
or
aaa
addr16
sti
and
dec
arpl
xlat
bound
bswap
scas
jl
gs
arpl
sub
ins
ins
sub
outs
div
sahf
jne
sbb
push
add
pop
mov
push
push
add
add
add
or
cmp
push
xor
fldcw
xor
and
push
add
pusha
push
jecxz
jo
add
pop
sub
add
int
ja
add
push
jne
test
test
jbe
mov
sbb
ins
push
push
cs
ss
fnstenv
fisttp
dec
outs
adc
sahf
fstp
outs
adc
mov
fstp
daa
dec
popa
mov
bound
push
ret
mov
push
ins
push
jne
out
stos
ins
test
dec
arpl
dec
outs
cs
arpl
xlat
xor
jb
pop
outs
lea
push
arpl
imul
ja
aas
mov
test
mov
cmps
outs
adc
and
push
push
dec
mov
das
fs
jns
add
dec
and
lds
dec
dec
cmp
cmp
fistp
retf
push
push
gs
pop
pop
in
arpl
pop
inc
mov
pop
add
int
fst
fidivr
(bad)
jae
lahf
pop
mov
mov
and
pop
mov
dec
daa
dec
mov
cmp
mov
call
jmp
dec
jne
outs
test
(bad)
aas
cmps
gs
lock
jo
outs
jbe
jbe
fisttp
in
or
imul
push
fidiv
sbb
outs
fucomi
pop
idiv
cmp
bound
jb
sub
das
inc
pop
popa
mov
inc
daa
arpl
stc
popf
mov
push
dec
add
add
fisttp
(bad)
add
add
xlat
mov
push
dec
add
mov
xor
and
ds
add
or
dec
clc
cdq
jl
and
inc
add
dec
cmp
cmps
lock
sbb
call
dec
lahf
pop
mov
mov
loopne
push
inc
das
push
pop
neg
push
add
imul
push
jae
das
es
ss
in
fiadd
dec
push
pop
dec
dec
das
add
push
fadd
ins
push
adc
xor
cmp
lock
movd
leave
push
jle
fadd
push
arpl
mov
push
inc
sub
dec
popf
push
dec
dec
cwde
pop
xor
inc
dec
sbb
sti
push
dec
imul
inc
push
cmp
ret
loopne
dec
sti
es
aaa
dec
push
sub
bound
inc
outs
addr16
jmp
imul
fbstp
je
pop
popa
xor
xor
dec
loopne
fnsave
rdmsr
outs
shl
xor
dec
inc
cmp
lgs
mov
pusha
dec
loope
cmp
outs
fldcw
loopne
int
xor
pop
push
repz
jb
jns
push
xor
int
add
daa
outs
ss
mov
adc
sub
add
inc
add
add
pusha
pop
hlt
loop
sbb
retf
add
mov
xchg
fadd
push
call
mov
fimul
leave
(bad)
aas
and
rcl
add
pop
lock
sbb
ds
inc
out
jg
jbe
fwait
aaa
adc
ror
addr16
mov
outs
push
inc
inc
icebp
pop
aam
aaa
dec
mov
add
shl
mov
ret
inc
sbb
mov
sbb
outs
or
daa
push
into
jne
jo
dec
ins
jg
bound
cmps
sahf
movs
fstp
outs
jecxz
adc
imul
cld
or
adc
sahf
out
sahf
sub
inc
dec
push
pusha
iret
xor
mov
adc
inc
push
inc
push
jns
idiv
ins
pop
je
or
xchg
out
mov
nop
xchg
cwde
ds
cmp
outs
test
cmp
loop
mov
push
mov
mov
sar
out
aam
fsub
in
jns
out
in
lock
clc
iret
repz
cld
add
add
or
cmp
repz
sbb
cmp
cmp
repz
pop
push
cmp
mov
inc
sahf
out
sahf
pop
and
idiv
add
mov
out
sahf
dec
pop
je
mov
jge
sub
push
push
js
dec
icebp
or
enter
pop
pop
bound
xor
xchg
es
xchg
fwait
jo
popa
ins
fsub
jnp
xlat
jne
mov
or
sub
or
inc
gs
int
cmps
pusha
xchg
xor
jb
jb
arpl
inc
add
ret
mov
and
sar
ins
pop
gs
ds
add
cmp
pop
lahf
mov
inc
dec
lods
inc
sub
cmp
sub
and
lahf
addr16
out
sub
sub
(bad)
sahf
neg
jae
push
sub
sub
jnp
outs
push
push
fstp
jbe
inc
daa
add
bound
and
out
jnp
outs
data16
data16
sub
inc
lods
and
addr16
popa
data16
das
jae
pop
jbe
sbb
push
es
daa
daa
mov
sbb
hlt
adc
fs
cs
xor
test
fdiv
shl
jae
jg
or
mov
jge
je
inc
dec
(bad)
push
pop
cmp
ins
ror
cli
fs
jo
add
outs
mov
push
loopne
inc
or
or
push
test
fs
sub
jle
mov
push
push
push
dec
ja
adc
inc
fistp
mov
(bad)
pop
pop
adc
outs
ins
adc
push
lock
dec
sub
aaa
add
enter
test
fs
not
push
add
lahf
adc
and
pop
sbb
jns
fsubr
xlat
inc
or
nop
aaa
mov
data16
mov
das
inc
mov
or
sbb
push
stos
inc
pop
scas
pop
je
mov
and
fbld
jmp
inc
cmp
imul
xor
(bad)
in
fiadd
ret
sbb
fadd
mov
daa
xchg
and
call
push
add
inc
xor
add
test
cli
xor
sub
cmp
inc
pop
jmp
(bad)
jge
push
push
mov
push
xor
into
js
jo
add
fmul
sub
cld
cs
mov
les
pop
xor
test
jo
outs
pop
jecxz
mov
das
inc
push
xchg
pop
call
dec
movs
adc
fsubr
nop
pop
daa
stc
inc
dec
and
push
(bad)
dec
xor
fsub
cmp
pop
dec
mov
inc
fdivr
jns
or
sbb
xchg
out
cmp
push
jl
cmp
push
mov
enter
out
loopne
outs
outs
mov
inc
xlat
sbb
pop
inc
mov
cmp
push
js
cmp
out
and
cwde
inc
ror
repnz
jg
sbb
je
loop
mov
mov
dec
jo
jmp
out
pop
xchg
push
inc
mov
cmp
xor
out
cmp
dec
inc
inc
jns
sahf
xchg
ins
inc
movs
inc
(bad)
enter
inc
in
inc
adc
dec
xor
push
dec
iret
leave
jae
je
cwde
inc
mov
pop
fcom
xchg
addr16
push
and
pop
inc
in
ja
push
adc
test
and
inc
xchg
fimul
(bad)
ficomp
or
dec
jecxz
mov
adc
movd
sbb
scas
cs
and
inc
fs
in
jmp
inc
ret
adc
imul
push
mov
fimul
sbb
outs
les
popa
xlat
fild
push
or
bound
jmp
jne
xchg
pop
sub
lods
mov
test
das
mov
outs
jge
lea
push
adc
add
das
push
pop
lock
push
popa
pop
aas
add
push
jnp
jae
mov
xchg
jp
pop
ins
push
scas
iret
xchg
jmp
arpl
(bad)
aad
popa
push
outs
outs
adc
fs
jae
and
inc
ss
aas
and
adc
test
repnz
mov
adc
jae
mov
lds
jg
mov
rcr
aas
jg
jl
sub
sahf
push
gs
mov
and
inc
stos
pop
mov
fbstp
mov
jnp
mov
mov
outs
cmp
imul
fiadd
and
imul
pop
fcomp
add
das
mov
retf
mov
jmp
jp
pusha
dec
jae
das
outs
addr16
mov
ss
popa
fimul
and
into
aas
pop
in
pop
mov
ins
aaa
ja
pusha
out
loope
ret
jnp
cmps
mov
push
fs
jno
(bad)
jecxz
pop
ins
inc
repz
out
inc
stos
cmp
dec
aas
bound
jp
fbstp
jbe
mov
mov
stos
aas
fiadd
push
ret
pop
mov
jne
push
sar
xchg
and
pop
push
dec
jmp
addr16
pop
in
loopne
daa
inc
sbb
ins
shr
add
jg
inc
pop
mov
or
jne
jne
cmp
dec
jne
sbb
or
inc
sbb
stos
outs
jp
cmps
fistp
fadd
mov
inc
out
mov
add
xor
inc
(bad)
dec
mov
cs
daa
dec
add
aam
outs
inc
jl
ror
pop
daa
aas
icebp
fidiv
cmp
jns
sub
cmp
dec
jnp
imul
push
pop
cmp
scas
pop
test
dec
xor
mov
dec
push
lods
fwait
adc
mov
dec
aaa
loopne
dec
test
cmp
dec
imul
xchg
pop
cmp
xchg
add
sbb
lock
or
xor
and
out
ror
fadd
addr16
xchg
ret
out
ins
push
(bad)
sub
retf
into
bnd
(bad)
mov
jo
pop
add
imul
rol
mov
in
cmp
addr16
or
cmp
outs
jne
imul
xor
add
mov
in
sbb
mov
aas
jns
xchg
push
dec
or
sbb
adc
and
sub
adc
sbb
or
inc
inc
xor
into
mul
enter
and
inc
dec
cmovns
add
push
(bad)
out
or
dec
push
outs
jae
imul
ss
(bad)
(bad)
dec
ins
push
push
xor
dec
outs
jp
cmp
outs
inc
inc
jb
jno
xor
jb
cmp
imul
(bad)
push
cmp
xor
jno
je
js
xor
ins
inc
push
dec
dec
xor
(bad)
jmp
imul
cmp
push
push
inc
xor
popa
jb
inc
cmp
xor
adc
arpl
inc
xor
jb
outs
dec
imul
xor
pop
(bad)
jmp
add
jb
loop
push
inc
arpl
inc
jno
push
imul
push
(bad)
jmp
jp
push
inc
dec
jbe
ins
cmp
js
jne
pop
ss
loopne
inc
push
xor
xor
jg
(bad)
(bad)
cmp
xor
push
push
dec
bound
inc
jae
arpl
imul
bound
imul
(bad)
call
push
push
xor
push
jo
bound
push
push
aaa
pop
cmp
or
bound
cmps
dec
arpl
jns
push
xor
jbe
xor
inc
inc
je
mov
push
inc
ja
xor
jns
push
jae
imul
gs
fs
cmp
mov
dec
push
dec
jb
xor
jp
dec
ss
push
push
or
push
pop
inc
bound
js
imul
push
outs
clc
aad
imul
jb
ja
push
dec
(bad)
jg
(bad)
addr16
gs
jp
shl
inc
xor
jno
xor
inc
cmp
jmp
inc
dec
push
jns
dec
dec
inc
bound
dec
gs
jbe
ja
cmp
dec
addr16
inc
call
loopne
gs
cmp
push
pop
jo
xor
dec
pop
ins
xor
(bad)
pop
lock
push
popa
ja
pop
inc
bound
ins
test
bound
je
ins
fs
aaa
add
sub
outs
js
int3
popa
xor
outs
and
mov
dec
add
push
dec
imul
push
lock
das
clc
jo
push
push
jns
pop
inc
ins
inc
outs
ins
inc
es
ins
push
ins
xor
pop
cld
pop
adc
xor
inc
popa
gs
gs
dec
xor
jb
lods
fnsave
dec
xor
jb
dec
ror
jae
mov
dec
gs
xor
push
dec
imul
inc
dec
gs
ins
cmp
push
js
dec
push
pop
inc
inc
inc
mov
ins
imul
push
dec
addr16
dec
js
jbe
ss
jp
popaw
imul
mov
push
xor
pop
retf
aaa
cmp
fadd
xor
push
jne
imul
ins
push
imul
movs
cmp
jl
imul
outs
push
outs
inc
sar
pop
inc
ss
push
pop
inc
inc
push
pushw
pop
lock
bound
push
popa
dec
lock
cmp
sub
xor
push
inc
jl
ss
push
dec
int3
fsub
jecxz
xor
ins
bound
mov
inc
loop
out
jo
inc
jno
inc
jbe
push
inc
jp
push
sar
push
push
jo
dec
aaa
loopne
cmp
xor
hlt
fist
inc
pop
ja
test
(bad)
ja
inc
addr16
push
popa
dec
jo
or
inc
push
dec
inc
inc
(bad)
dec
sbb
dec
dec
dec
in
dec
dec
dec
ss
imul
mov
mov
mul
addr16
aaa
test
ret
or
inc
jns
cmp
(bad)
jg
push
jle
inc
js
pop
dec
dec
jbe
push
ss
dec
push
ins
js
sub
imul
dec
xor
enter
push
scas
loop
dec
xor
xchg
cmp
in
shl
(bad)
jg
jbe
dec
inc
pop
pop
dec
dec
data16
ins
ins
jbe
aaa
ins
inc
push
ins
dec
push
jg
call
pop
dec
push
dec
cmp
imul
scas
pop
cmc
mov
popa
outs
aaa
push
pop
xor
push
or
dec
jo
jp
dec
je
inc
jbe
inc
cs
ins
push
add
outs
dec
xor
arpl
fwait
popa
shr
es
inc
(bad)
lods
push
inc
cmp
imul
and
xor
xor
xchg
inc
inc
pop
je
jns
xchg
jb
add
ja
dec
cmp
jae
xor
inc
dec
cmp
gs
pop
js
jb
jno
or
jp
mov
imul
ss
push
je
lds
pop
dec
dec
jne
data16
inc
inc
push
inc
std
ja
aaa
enter
data16
movs
inc
dec
inc
data16
cmp
push
mov
ins
jno
push
push
inc
xchg
and
sub
into
inc
jae
and
dec
scas
arpl
(bad)
je
xor
push
addr16
push
cmp
dec
push
(bad)
fild
mov
data16
dec
push
js
dec
inc
jne
push
fldcw
or
inc
push
inc
inc
push
push
aaa
inc
pop
dec
xor
hlt
ins
inc
push
jae
pop
inc
ja
dec
dec
mov
shr
loop
fs
lods
ficom
aaa
shl
cmp
push
dec
xchg
adc
pop
pushw
push
dec
push
bound
push
rcr
mov
jbe
push
ins
push
add
outs
add
xor
jno
adc
(bad)
icebp
xchg
imul
inc
cmp
mov
xchg
test
dec
dec
fs
push
es
xor
jns
sub
xor
push
cmp
fdiv
aaa
sub
ins
inc
push
loop
push
push
inc
xchg
xor
push
sub
adc
popa
jns
inc
adc
dec
push
lds
ins
xchg
push
popa
enter
xor
lock
gs
clc
outs
outs
push
dec
arpl
inc
ss
jle
xchg
push
inc
clc
push
inc
jae
xor
add
xor
xchg
dec
data16
xor
xor
mov
dec
cmp
mov
ss
xor
imul
jo
sar
ins
aaa
jo
dec
inc
push
push
ja
js
xor
inc
loopne
cs
js
stos
cmp
inc
push
cmp
inc
ja
push
dec
test
push
push
sahf
mov
imul
push
dec
pop
nop
popa
inc
jae
addr16
cmc
sbb
inc
cmp
jno
dec
cld
jne
jp
outs
sub
bound
push
dec
dec
ins
push
sbb
(bad)
pop
jns
ins
or
pop
push
dec
pop
popa
push
mov
stos
mov
push
and
xor
cmp
sub
stos
pop
cwde
dec
dec
push
imul
push
scas
das
add
pop
inc
ins
xor
inc
dec
call
inc
pop
popa
xor
inc
mov
jae
jp
adc
fld
jbe
xchg
cli
arpl
push
nop
jo
jo
push
pop
xor
inc
mov
cmc
mov
push
outs
dec
int3
loop
jo
sub
fdiv
test
mov
adc
dec
jb
js
les
mov
and
xor
push
inc
data16
mov
jbe
js
data16
outs
aaa
push
dec
inc
dec
or
inc
dec
addr16
xor
mov
xor
push
jo
push
jo
add
dec
call
jle
push
push
push
push
jne
push
inc
dec
dec
pop
gs
ins
(bad)
scas
fsubr
dec
xor
fs
mov
and
xlat
push
loopne
xor
ja
jo
in
pusha
sub
aaa
outs
out
push
ss
cmp
pop
pusha
xlat
ins
imul
cmp
outs
dec
push
outs
push
outs
imul
xchg
dec
jp
push
jl
ss
inc
push
add
xor
rcr
mov
ficom
je
inc
dec
push
jno
adc
test
inc
ins
aaa
in
pop
jmp
cmp
jp
popa
pushf
jb
dec
cmps
(bad)
jg
dec
jo
dec
ins
inc
jne
dec
xor
pop
jo
dec
ja
data16
add
xchg
dec
inc
jae
push
outs
xor
mov
js
push
ja
jbe
pop
arpl
push
fst
cmp
xor
mov
addr16
push
dec
fdiv
push
jb
xor
add
jne
inc
imul
add
loopne
arpl
push
push
pop
outs
push
outs
push
outs
mov
inc
imul
inc
outs
shr
dec
cld
jbe
(bad)
mov
ins
fs
dec
cmp
pop
cmp
push
cmp
ins
xchg
pusha
push
(bad)
dec
xor
push
mov
mov
inc
xor
sub
loope
mov
inc
je
inc
outs
jns
inc
xor
fild
jno
bound
je
jo
imul
xor
xor
gs
dec
ss
lods
fnsave
jp
push
fs
inc
data16
sub
fs
dec
xor
js
xchg
loop
xor
sbb
mov
sahf
xor
inc
jb
inc
jbe
jno
aaa
add
fs
xor
inc
icebp
or
repnz
push
pusha
xor
jne
push
sub
mov
jb
jne
dec
or
outs
xor
dec
inc
bound
loop
mov
xchg
ficom
aaa
add
cli
dec
cmp
jbe
xor
addr16
mov
rol
xchg
mov
push
retf
jno
pop
mov
cmp
dec
inc
jne
add
push
jbe
push
adc
cli
dec
sub
les
jo
ret
cli
pop
sub
je
inc
dec
jno
jbe
sahf
ss
das
pop
ret
cli
inc
inc
inc
imul
ret
xor
dec
adc
call
add
ins
outs
jl
call
dec
dec
idiv
or
push
addr16
push
outs
inc
fs
add
aaa
dec
movs
addr16
push
pop
push
xor
push
shr
pop
push
gs
inc
xor
add
lods
push
jo
xor
adc
jg
aad
outs
fcomp
jns
or
dec
inc
jb
inc
push
dec
sbb
dec
push
add
data16
outs
ss
stos
add
dec
xor
dec
or
lods
jb
or
mov
push
add
xor
xchg
arpl
jp
pusha
jo
cli
mov
out
xchg
inc
ss
ins
cwde
push
ss
outs
scas
popa
jbe
dec
push
push
jo
inc
jae
movs
push
push
push
push
xor
dec
rol
inc
inc
xchg
cmp
ret
shl
aaa
mov
sbb
arpl
imul
dec
cmp
dec
(bad)
call
dec
xor
inc
dec
push
pop
ss
hlt
and
jno
dec
jb
int
loope
loopne
addr16
dec
and
clc
int3
push
shl
inc
dec
inc
mov
inc
jb
jecxz
pop
push
pop
inc
cli
xor
gs
inc
push
push
mov
mov
int3
pop
fdiv
inc
push
(bad)
call
(bad)
xor
push
jbe
pop
pop
push
pop
imul
dec
jp
jo
push
mov
ret
pop
jp
ss
xor
sbb
gs
popa
jo
cmp
ss
ins
mov
inc
push
dec
ins
push
cmp
and
push
popa
cwde
push
push
dec
imul
out
mov
inc
push
pop
inc
jp
addr16
and
ja
dec
mov
jo
xor
push
xor
int3
xor
adc
push
jne
loop
jno
cmp
jae
push
push
dec
nop
data16
aam
inc
popa
jbe
jl
outs
ss
jb
mov
xor
je
aad
(bad)
pop
xchg
je
push
in
pusha
sub
pop
pop
push
push
outs
xor
retf
pop
jp
inc
imul
mov
mov
inc
jns
push
neg
xor
aaa
jne
xor
pop
jp
jle
inc
popa
imul
pop
fisubr
push
sbb
pusha
imul
pop
ror
cwde
inc
bound
jns
cmp
je
inc
push
jbe
arpl
mov
out
dec
push
inc
jb
fwait
and
ins
bound
imul
ja
call
jp
gs
aaa
mov
fs
inc
cmp
icebp
int
cmps
inc
xor
push
mov
xor
dec
jno
fcomp
inc
test
outs
or
shl
sub
ja
cmps
lock
inc
sbb
push
dec
outs
js
jle
dec
xor
sub
aaa
imul
ja
ins
dec
push
add
inc
dec
outs
bound
lods
loope
imul
inc
mov
jae
lock
jns
popa
ins
jno
jno
dec
fs
popa
aam
sub
lds
ins
popa
xor
ror
lds
push
xor
cmp
xchg
bound
aaa
cld
dec
xor
jne
jo
push
jne
inc
mov
jmp
cmp
data16
dec
clc
adc
pop
dec
fs
cmp
mov
xor
into
push
cmp
cmps
push
xor
cmp
mov
push
ja
pop
ss
xor
xor
xor
mov
fbld
dec
dec
push
xor
in
ja
jo
popa
dec
inc
push
xchg
add
pushf
gs
jne
dec
outs
test
bound
dec
mov
js
cmp
test
dec
dec
xor
xor
jecxz
mov
cmp
jo
push
inc
pop
inc
xor
xchg
stos
jo
dec
add
jns
push
cmp
or
je
(bad)
hlt
sbb
jle
fdiv
jbe
arpl
(bad)
hlt
pop
shl
mov
inc
(bad)
data16
jo
dec
adc
in
inc
pop
push
push
inc
jp
inc
jne
or
sbb
(bad)
imul
ja
test
dec
(bad)
jno
dec
dec
push
imul
je
jns
sbb
pop
icebp
imul
out
xor
ss
and
icebp
es
sbb
jno
push
pop
jns
push
fbstp
movs
push
aaa
es
bound
push
cmp
call
popa
int3
sub
imul
loop
pop
xor
or
push
cmp
xor
fisttp
call
cmp
outs
xor
mov
dec
jo
push
xor
fs
xor
es
cwde
imul
out
jo
pop
ins
fisubr
xor
popa
(bad)
jmp
aaa
xor
js
dec
popa
xor
cmps
and
pop
jo
pop
push
js
dec
xor
push
jno
gs
jo
ins
push
pusha
and
inc
out
gs
test
mov
imul
rcl
dec
ucomiss
pop
inc
int3
cmp
add
adc
mov
repnz
es
aas
aaa
mov
jns
dec
popa
scas
stos
mov
pushf
inc
inc
js
jp
dec
bound
add
bound
mov
nop
jne
lds
cli
outs
mov
imul
pop
mov
dec
dec
enter
sub
pop
push
ss
xor
enter
das
inc
xlat
push
add
bound
dec
xor
or
inc
aaa
fs
jne
xor
popa
dec
push
dec
jbe
mov
fdiv
jmp
imul
cmps
inc
push
pop
cmp
dec
je
cmp
std
pop
fwait
jbe
inc
ins
lods
dec
dec
je
jp
push
jae
inc
int
imul
js
jno
push
xor
push
inc
jae
(bad)
cld
mov
push
imul
bound
or
mov
pop
push
push
cmp
fwait
ss
dec
ins
jae
jp
inc
dec
fcom
or
aaa
jp
sbb
jns
dec
inc
inc
cmp
jbe
loop
or
aad
push
jo
retf
inc
dec
jb
mov
xor
push
fs
push
xlat
mov
xor
dec
jbe
cwde
pop
push
add
test
jb
aaa
push
clc
arpl
inc
mov
ret
push
mov
fs
inc
xor
call
jns
ja
dec
dec
dec
inc
dec
dec
ins
push
xor
mov
fiadd
xchg
outs
dec
push
inc
adc
push
jae
mov
push
pop
xor
imul
dec
and
push
push
sbb
jns
cmp
push
fisub
mov
jp
xchg
jno
or
sub
inc
xor
ja
cs
test
cmps
dec
add
js
imul
add
loop
cmp
add
dec
xor
dec
sbb
jb
fs
mov
aam
adc
dec
inc
add
pop
aam
pop
mov
push
dec
push
jno
jp
push
pop
lock
pop
xchg
xor
push
cmp
inc
test
ss
xor
ins
and
clc
stos
movs
inc
dec
inc
dec
jbe
push
into
dec
push
xchg
push
popa
ja
and
fidiv
mov
push
jo
ds
imul
mov
cmp
inc
arpl
dec
ins
stos
xor
or
ja
je
xor
pop
pop
jbe
ja
dec
sub
ins
dec
sbb
mov
cli
stos
adc
inc
pop
dec
ja
outs
jbe
cmp
cmp
out
js
dec
push
dec
dec
outs
jb
push
scas
jg
push
ficom
inc
push
xor
ja
inc
push
dec
push
push
inc
test
push
adc
jne
push
lock
arpl
fisub
push
push
cmp
cmc
sub
adc
push
pop
or
push
imul
push
retf
dec
js
jne
push
dec
inc
xor
adc
xor
aaa
jb
cmp
jbe
loopne
bound
inc
ds
push
sub
in
test
push
je
push
inc
mov
aaa
pop
dec
ins
popa
push
dec
loop
jb
loopne
lock
dec
outs
fdiv
push
mov
push
jp
fs
push
pushf
bound
std
sar
aaa
inc
push
inc
jp
xor
xor
push
ins
arpl
bound
mov
inc
inc
ss
xor
add
jbe
xor
inc
pop
dec
xor
push
cmp
pop
xor
xor
addr16
jp
jl
aad
xor
outs
jno
pusha
test
mov
dec
xor
movs
push
add
cli
cmps
adc
fsub
dec
imul
adc
inc
push
inc
ss
jo
adc
mov
xor
imul
and
dec
sbb
cmp
mov
es
mov
inc
cmp
inc
inc
ins
adc
pop
popa
dec
push
inc
pop
bound
xor
pop
inc
ins
pop
pop
inc
push
aad
mov
ins
adc
inc
dec
push
push
ret
cmp
bound
xor
dec
jp
push
bound
pop
ins
imul
dec
outs
mov
push
dec
jb
js
cli
add
jbe
jmp
ja
loopne
sub
test
arpl
scas
sbb
dec
dec
fs
push
js
xor
or
inc
sub
(bad)
jne
push
into
ss
dec
xor
int
pop
aaa
inc
dec
pop
push
inc
jne
pop
jb
xor
add
and
push
lock
inc
inc
lds
sahf
xor
jbe
inc
push
push
mov
push
jb
dec
inc
push
fisub
ret
jp
push
xchg
inc
imul
loopne
hlt
fist
ss
inc
push
push
cmp
loop
push
inc
dec
je
inc
inc
mov
shl
pusha
inc
dec
addr16
inc
jle
push
jae
fcomip
push
outs
inc
pop
arpl
ins
outs
dec
xor
xor
dec
outs
jbe
adc
dec
pop
jns
dec
inc
xor
jle
jbe
cmp
fs
inc
je
inc
xor
popa
pop
or
outs
sbb
dec
push
xor
addr16
addr16
dec
inc
clc
inc
push
addr16
sub
aaa
std
das
inc
ins
fmul
dec
pop
push
push
inc
xor
cwde
jp
jae
ret
jne
jbe
cmps
inc
dec
dec
adc
push
ins
(bad)
xor
arpl
xor
mov
inc
arpl
push
popa
xchg
pop
push
or
jno
jge
fs
ja
cwde
mov
dec
add
or
ins
data16
pop
push
and
jbe
jno
push
ins
xor
pop
fs
outs
inc
inc
push
pop
shl
ja
arpl
xor
stos
fimul
sbb
jo
push
dec
ret
dec
push
popaw
js
jns
loope
adc
dec
lock
push
arpl
mov
into
push
mov
dec
inc
outs
inc
xor
(bad)
cld
test
inc
dec
ss
test
jle
dec
or
or
ins
imul
xor
ins
ss
sub
fimul
(bad)
stos
(bad)
ficom
dec
push
dec
pop
stos
xor
jns
ja
mov
jae
jns
popa
mov
xchg
(bad)
inc
push
fisub
je
test
inc
js
movs
(bad)
fdivr
xor
inc
jne
arpl
jl
dec
push
pusha
add
mov
push
or
inc
enter
out
mov
aaa
jne
cmp
dec
push
outs
je
aam
mov
inc
dec
ss
push
pop
loopne
push
data16
cmp
dec
xor
sar
push
push
jp
mov
dec
xor
inc
inc
dec
xor
mov
data16
pop
jp
push
ficom
inc
push
dec
dec
push
ins
mov
jg
jns
push
xor
inc
xor
aaa
outs
jo
push
dec
dec
push
jmp
adc
push
push
dec
jl
outs
inc
ss
data16
sub
jno
sub
stos
or
cmp
fdivr
jns
shl
mov
sbb
push
fs
je
mov
push
dec
inc
adc
inc
xlat
mov
push
and
xor
push
pop
jg
stos
and
push
push
js
inc
jp
push
lods
add
repnz
mov
sbb
push
push
dec
imul
push
jp
mov
xor
add
dec
jb
cmp
jno
outs
push
fs
mov
dec
or
push
imul
mov
bound
push
cmp
jne
jp
dec
mov
mov
inc
cmps
dec
fistp
push
push
out
jns
xor
dec
jp
xor
push
push
imul
xor
push
xor
cmp
dec
inc
push
or
push
lock
inc
push
bound
call
cmp
bound
push
inc
dec
jmp
xor
pop
push
aaa
jae
push
mov
imul
adc
mov
or
call
inc
ja
push
push
xor
sub
mov
ins
je
sbb
push
dec
cmp
ins
push
push
popa
dec
and
call
xor
jbe
push
repnz
cmp
jmp
imul
dec
dec
pop
dec
mov
sbb
gs
jns
dec
popa
xor
xor
push
dec
pop
dec
dec
jne
ins
dec
inc
push
outs
je
push
ins
push
imul
jbe
pop
jns
aam
or
mov
sub
mov
push
ins
jo
sbb
dec
sbb
outs
bound
ins
cmp
push
push
add
push
push
loopne
test
dec
add
or
outs
jb
addr16
pop
cmp
loop
or
ss
push
jo
push
mov
jmp
push
xor
jb
xor
data16
bnd
lds
(bad)
push
addr16
jae
jp
dec
pop
jle
fdivp
fs
outs
push
inc
push
jne
test
xor
push
shr
and
stos
fld
jp
nop
ins
arpl
aaa
imul
jp
js
ins
jo
jbe
dec
dec
jae
cmp
mov
imul
jo
cld
addr16
je
shl
jl
outs
xchg
dec
dec
dec
js
inc
pop
cmp
xchg
sbb
sbb
inc
inc
push
imul
push
xor
cli
add
imul
ins
push
dec
dec
dec
arpl
push
adc
arpl
xor
add
loop
dec
jno
xor
xor
dec
bound
cld
mov
push
dec
inc
js
push
imul
je
xor
ins
sub
push
push
gs
sub
cmp
xor
push
dec
dec
add
xor
(bad)
mov
sub
data16
and
jg
outs
dec
ja
push
push
test
jno
ins
mov
or
inc
je
scas
mov
mov
dec
cmp
push
fild
or
outs
ss
loop
push
inc
push
jmp
ins
push
xor
aaa
push
ss
dec
dec
push
xor
dec
push
jns
inc
outs
xor
jno
push
inc
loopne
jle
mov
fs
cmp
cmp
sbb
inc
push
je
fld
push
dec
xor
inc
add
jg
cs
push
aam
dec
xor
arpl
je
not
inc
xor
dec
dec
jne
scas
xchg
push
(bad)
inc
dec
outs
mov
pop
push
inc
push
jno
nop
mov
xor
inc
sub
jbe
adc
dec
test
inc
bound
jmp
je
dec
mov
mov
sub
push
xor
inc
dec
outs
or
or
push
cdq
push
nop
xor
mov
sbb
repnz
xor
int3
dec
push
popf
cli
sbb
push
pop
jne
imul
xor
outs
pop
scas
sbb
xchg
in
jp
arpl
xor
xchg
sbb
jns
je
cmp
imul
(bad)
jle
xlat
fwait
adc
pop
arpl
dec
arpl
ret
push
push
movs
ja
sub
inc
outs
push
xor
push
dec
outs
dec
clc
scas
mov
bound
or
jns
jno
aaa
cdq
cs
pop
cmp
jns
ja
ss
scas
mov
fidiv
and
push
push
fmul
xor
push
ss
imul
xchg
icebp
into
push
cmp
ins
push
hlt
js
inc
jo
push
cwde
lods
adc
push
pusha
inc
pop
or
adc
xor
adc
add
or
pop
jae
jb
dec
imul
push
cmp
scas
dec
dec
pop
dec
dec
pop
xor
push
inc
cmp
cmc
add
push
je
xor
inc
dec
stos
sub
(bad)
data16
jo
outs
pop
data16
push
ja
imul
inc
jbe
dec
imul
pop
hlt
mov
cdq
stos
dec
shl
cmp
outs
xor
cmps
int
push
dec
nop
push
pop
loopne
dec
fwait
push
mov
ins
inc
lods
mov
jo
pusha
add
jle
pushw
xor
mov
xor
mov
inc
push
push
xor
pop
outs
or
adc
jb
mov
adc
outs
jp
xor
xor
sub
fdivr
push
jne
mov
ss
dec
outs
inc
dec
jns
or
cld
je
inc
pop
aas
jge
test
xor
aaa
xor
jns
pop
push
xor
pop
dec
xor
jno
add
mov
pusha
addr16
fs
outs
pushf
ins
pop
ror
add
inc
jo
adc
jno
mov
add
dec
add
jb
xchg
jmp
push
ins
xor
mov
push
les
pop
push
fsubrp
clc
cmc
mov
clc
js
inc
push
jno
sbb
add
xor
popa
jae
xor
and
fs
push
inc
xor
arpl
out
imul
push
add
movs
mov
outs
jae
push
add
sub
xor
ja
mov
rcr
sbb
pop
jbe
shl
push
add
jo
clc
lods
jne
push
sti
sub
push
addr16
xor
inc
jae
out
jp
push
dec
push
push
jne
mov
xor
gs
sub
sbb
rcl
cli
inc
inc
add
sub
xor
xor
pop
test
sbb
inc
jae
dec
push
js
dec
mov
mov
arpl
ss
jne
lock
mov
popa
inc
cmp
pop
xchg
fistp
ja
dec
dec
imul
jne
push
ss
into
inc
dec
inc
add
dec
push
cmc
mov
imul
inc
push
dec
dec
repnz
jp
dec
jg
fs
or
dec
xor
shl
cmp
ins
jp
jne
cmc
cmps
fstp
pop
in
js
xor
imul
or
push
je
sahf
les
push
dec
xchg
(bad)
sbb
je
outs
ins
jno
arpl
add
(bad)
fs
adc
scas
mov
push
dec
cmp
inc
dec
xor
fwait
enter
clc
xchg
or
inc
xor
push
rcl
mov
dec
jns
outs
jle
sbb
imul
loope
pop
bound
sub
popa
ss
test
inc
cli
inc
pop
jp
or
test
jbe
addr16
in
dec
or
xor
loopne
push
inc
jo
int
fs
aaa
neg
xor
ins
ins
fdiv
outs
loopne
data16
js
bound
dec
push
push
ins
add
mov
outs
push
fdiv
adc
pop
push
addr16
outs
into
bound
js
xchg
ret
jbe
push
xor
jp
push
xor
ss
mov
sub
add
push
jp
mov
sti
cmps
pop
push
js
xor
xor
adc
aaa
or
xor
popa
push
cli
xor
js
retw
dec
es
inc
inc
dec
dec
cmp
push
stos
jno
hlt
jp
jp
dec
aam
and
cmp
push
cld
xchg
mov
js
inc
jne
arpl
jns
inc
cmp
ss
jp
inc
push
jb
inc
mov
dec
add
gs
jp
sub
not
push
inc
xor
push
and
mov
sub
push
movs
jbe
push
xor
je
dec
es
add
mov
test
mov
push
push
ss
mov
dec
push
xor
xlat
test
fs
dec
push
sub
data16
dec
jno
jbe
sbb
aad
pusha
xor
push
push
push
je
movs
or
les
outs
bound
push
inc
push
push
sti
jmp
jb
push
inc
push
movs
bound
jno
pop
ss
cmp
xor
loopne
fistp
inc
addr16
xor
push
jp
outs
dec
dec
ja
sbb
cld
les
push
sub
mov
jbe
imul
inc
dec
inc
arpl
inc
dec
adc
pop
push
adc
bound
jae
sbb
cdq
sbb
dec
push
jae
shr
jno
loop
bound
ja
mov
dec
add
inc
mov
or
ins
push
fs
les
js
mov
and
jae
cmp
dec
addr16
mov
sub
push
fstp
call
push
addr16
outs
ret
scas
jmp
mov
sub
mov
jae
loop
shl
jo
xor
push
mov
mov
xor
add
das
adc
retf
mov
cmp
jo
test
nop
jle
push
jo
sbb
mov
ins
ins
dec
push
(bad)
push
inc
push
jg
sbb
inc
cmp
mov
js
dec
xor
dec
jle
xor
push
gs
jb
ins
push
add
ss
inc
ins
cmp
ins
jle
movs
xor
push
pusha
adc
push
inc
inc
or
inc
inc
cmp
stos
fild
je
and
push
inc
loopne
mov
ss
arpl
fs
test
mov
cmp
xor
jp
enter
data16
pop
or
in
adc
push
jle
aaa
dec
xor
mov
and
dec
dec
ss
xor
dec
push
jno
mov
ss
xor
push
gs
push
xchg
mov
dec
push
loop
fidiv
pop
loope
mov
pop
gs
inc
push
into
push
jbe
pusha
mov
and
inc
push
dec
inc
pop
dec
sahf
mov
dec
pop
stos
aaa
xor
ins
adc
jp
mov
add
jmp
clc
or
cld
xor
imul
mov
cmp
cmp
dec
rol
or
fild
ins
push
js
ins
inc
pop
xor
pop
xor
push
inc
sbb
call
lock
sbb
aaa
push
stos
inc
jp
push
xchg
add
push
pop
add
and
sbb
call
push
mov
push
fnsave
sub
xor
cli
inc
jne
dec
cmp
inc
dec
aaa
push
xor
outs
mov
xor
push
ss
xor
xor
ss
stos
jmp
push
je
push
js
ins
dec
sub
adc
test
shl
fsub
ins
inc
inc
inc
xor
shl
push
push
test
mov
push
jno
jb
lods
push
retf
sbb
fs
dec
push
adc
mov
xlat
or
inc
mov
push
popa
inc
xchg
jp
inc
outs
pusha
adc
jns
cmp
(bad)
adc
outs
stos
add
inc
pop
dec
inc
popa
dec
dec
add
into
xor
push
pop
xor
push
mov
jmp
jg
imul
mov
jmp
dec
cmp
imul
js
pop
pusha
inc
dec
arpl
jo
push
popa
push
mov
imul
ror
push
gs
pusha
inc
or
mov
out
rcr
pop
test
jae
dec
mov
loop
add
lods
push
inc
jo
xor
jo
pop
and
je
jno
aaa
xor
imul
sub
ror
sbb
jns
push
mov
inc
inc
mov
cmp
push
je
add
and
pop
push
arpl
jb
push
ss
jo
aam
and
jo
out
xor
push
adc
mov
jbe
jbe
call
dec
pop
out
pop
pop
push
js
dec
dec
mov
push
arpl
xor
mov
fsub
inc
jbe
or
jl
inc
xlat
xor
jno
xor
xor
xor
mov
push
cli
inc
ss
outs
jno
je
fstp
push
aaa
xor
inc
sbb
cld
inc
push
loope
adc
outs
test
jmp
or
push
bound
les
cmp
data16
frstor
cli
xor
test
push
ins
pop
xor
inc
outs
adc
inc
pop
sar
dec
addr16
cmp
inc
xor
xor
push
inc
jno
ja
inc
inc
sub
pop
mov
jb
js
dec
push
loopne
inc
push
cmp
enter
cs
nop
inc
push
push
dec
inc
fcom
or
xor
xor
jp
add
push
or
push
ins
pop
call
das
push
dec
(bad)
ins
pop
jb
inc
pop
push
cmp
sbb
cwde
bound
ja
retf
mov
mov
into
push
xor
jns
jno
dec
mov
dec
jl
push
outs
push
sub
jne
imul
jns
gs
push
push
push
dec
push
mov
fcom
xor
dec
dec
sbb
jle
addr16
inc
dec
jae
gs
jne
jb
mov
cmp
push
inc
xchg
sub
dec
into
rcl
mov
mov
dec
xor
ins
push
cmp
gs
outs
or
inc
add
push
ins
xor
sub
dec
and
scas
pusha
pop
ss
dec
sub
adc
jbe
xchg
fsubrp
mov
sahf
dec
dec
inc
cli
inc
push
dec
je
push
add
push
dec
ins
dec
jae
jmp
push
outs
push
cmp
adc
js
adc
xchg
dec
dec
inc
outs
fcomp
out
lock
bound
xor
mov
test
pop
jo
and
push
or
xor
bound
stos
popa
xor
xor
xor
jp
jo
inc
js
xor
dec
inc
push
rcl
jp
fs
sbb
jle
inc
mov
cmc
ins
xor
inc
add
imul
push
xchg
dec
(bad)
xor
(bad)
dec
dec
inc
outs
add
mov
ds
outs
push
dec
jns
dec
scas
stos
clc
lods
inc
pop
or
pop
gs
fs
sar
mov
ja
or
ja
xor
jae
dec
arpl
xor
push
inc
jae
push
dec
pushf
push
ins
add
pop
arpl
xor
push
cmps
add
inc
inc
imul
mov
dec
data16
inc
inc
xor
push
jae
inc
xor
shl
inc
push
dec
arpl
cmp
pusha
test
push
adc
push
inc
dec
push
repnz
adc
xchg
inc
test
div
hlt
xchg
arpl
push
ins
fs
dec
in
outs
jg
cmp
mov
jbe
push
push
push
arpl
push
push
push
inc
xchg
bound
xor
push
jmp
ja
movs
clc
mov
outs
je
inc
lock
bound
push
loope
mov
or
cmps
push
dec
sub
dec
inc
add
aaa
ss
dec
jno
xor
pop
xor
inc
jne
add
or
or
sub
push
xor
push
or
dec
in
jbe
inc
push
push
and
inc
dec
pop
pop
push
jbe
inc
inc
sbb
jns
imul
jno
inc
ret
inc
xor
fsub
(bad)
mov
push
jp
xor
mov
xor
inc
mul
ja
jae
dec
push
jbe
mov
adc
xor
pop
push
aam
lock
xchg
push
repnz
xor
and
jmp
popa
mov
xor
arpl
in
sub
call
sbb
push
mov
xor
push
push
sar
shr
popa
xor
push
pop
popa
adc
cmp
inc
jns
add
dec
and
clc
jmp
jp
xor
mov
mov
push
inc
inc
dec
dec
push
jae
jno
push
inc
fsub
les
push
mov
dec
push
adc
and
push
xor
ss
imul
das
sar
push
dec
dec
bound
xor
push
push
popa
inc
popa
add
jno
jle
jo
jae
je
ret
push
cmc
push
loopne
push
xor
mov
mov
aaa
sbb
aaa
pop
dec
ss
fs
and
bound
push
shr
nop
inc
outs
push
jno
outs
sub
push
mov
jb
push
cmp
loopne
sar
imul
imul
call
je
dec
data16
dec
lock
push
jp
push
inc
dec
ss
cwde
fcomp
sar
push
inc
jne
scas
sub
dec
push
xor
sub
ja
dec
retf
je
cmp
pushf
js
push
mov
ja
jae
test
fdivr
imul
ins
xor
sub
sti
pop
je
les
xor
je
push
sub
cmp
inc
dec
ins
jo
cmp
rol
push
pop
dec
push
xchg
inc
and
lock
jo
and
jg
push
sbb
jo
je
inc
jo
dec
mov
or
push
gs
js
inc
push
dec
mov
add
jb
call
xor
jae
sub
inc
arpl
dec
arpl
xchg
push
test
push
xor
inc
xchg
addr16
cli
clc
movs
aad
adc
push
mov
cmp
outs
inc
retf
fcom
popa
clc
imul
mov
ins
arpl
inc
gs
movs
retf
inc
outs
dec
jbe
mov
inc
js
xor
mov
adc
jb
mov
inc
dec
mov
popa
inc
push
cmp
into
bound
xlat
jmp
dec
js
scas
loopne
es
outs
jo
dec
popa
mov
add
jo
push
out
imul
(bad)
pop
cmp
inc
jp
jo
push
(bad)
aaa
push
push
xor
push
repnz
outs
push
mov
arpl
adc
ss
add
inc
add
inc
gs
jne
inc
jp
xor
pop
xchg
and
jb
gs
jo
add
inc
js
arpl
adc
xor
dec
xor
xor
mov
scas
cwde
je
ins
dec
ins
inc
jae
cmp
cmp
mov
add
jbe
pusha
push
or
jo
push
les
jb
dec
push
xchg
push
dec
jno
loop
inc
stos
hlt
pop
add
xor
jb
inc
push
add
mov
rol
add
xor
jmp
adc
xor
inc
pusha
addr16
push
xor
push
push
cmp
push
ins
xchg
cmp
inc
arpl
dec
jo
imul
push
ins
mov
popa
jb
ret
or
push
inc
fs
bound
mov
push
cmp
mov
dec
dec
mul
ret
pop
mov
js
popa
push
push
xor
push
mov
dec
dec
push
mov
mov
aaa
and
mov
ja
jbe
jns
inc
jns
adc
inc
or
jne
mov
xor
mov
mov
dec
push
dec
dec
fs
loope
clc
dec
outs
push
dec
push
fcom
cmp
mov
or
dec
jmp
aad
push
add
push
inc
push
je
cmp
addr16
loop
lds
scas
lock
push
dec
or
arpl
jns
ins
inc
je
and
push
ror
je
inc
bound
jb
and
add
je
inc
inc
dec
push
loope
fsubr
jne
fsubr
sub
dec
shl
outs
xor
inc
fs
popa
imul
xor
add
push
push
push
add
xor
dec
push
xor
push
jb
aad
inc
call
ret
in
mov
ja
je
enter
xor
dec
(bad)
fist
xchg
bound
inc
dec
imul
pop
push
mov
inc
aaa
and
addr16
pop
adc
jne
outs
inc
enter
imul
dec
add
fwait
adc
push
push
dec
jp
push
jl
jmp
push
push
bound
mov
dec
cs
ins
jno
xchg
popa
xor
arpl
ret
jbe
stos
push
mov
push
xor
jle
lods
add
sbb
in
dec
dec
fdivr
push
shr
in
push
mov
push
xor
mov
bound
dec
inc
push
xor
gs
jp
ss
xor
popa
ins
push
xor
mov
xor
loopne
push
inc
mov
jg
add
push
push
push
dec
xchg
outs
popa
fs
xor
and
inc
push
dec
jp
dec
xor
inc
inc
inc
push
dec
jne
ss
xor
pop
ss
(bad)
fbstp
dec
sbb
push
bound
push
addr16
ja
imul
add
stos
jae
imul
dec
add
push
xor
push
sbb
dec
inc
(bad)
(bad)
push
movs
push
jbe
inc
adc
push
or
jno
data16
inc
lods
mov
jno
je
inc
mov
imul
jne
(bad)
xchg
out
push
or
add
dec
xchg
pop
pusha
or
mov
mov
cmp
sbb
dec
cmp
cli
(bad)
in
cmp
inc
ins
inc
push
lock
imul
inc
inc
imul
adc
mov
imul
dec
jb
mov
sbb
push
stos
inc
ja
outs
clc
das
jo
ins
push
ss
push
arpl
repnz
cmp
xor
push
inc
or
fsub
pushf
ins
jno
in
jp
push
sbb
push
jne
cld
cmp
es
shl
jo
push
dec
outs
dec
push
jne
cmp
inc
ins
inc
dec
dec
push
sub
mov
gs
bound
push
ss
test
dec
int3
imul
xchg
bound
mov
xchg
imul
pop
outs
push
mov
inc
xor
dec
pushaw
jno
dec
pop
ins
xor
out
dec
bound
ins
inc
dec
outs
xor
pop
je
aad
loopne
push
dec
dec
scas
dec
inc
je
aaa
lods
inc
push
xor
dec
cmp
fdiv
add
fcom
jno
arpl
aaa
sub
bound
inc
dec
cld
add
xor
xor
lods
pop
ins
or
cwde
popa
dec
inc
push
inc
adc
inc
mov
popa
popa
xor
jns
mov
pop
outs
dec
outs
push
inc
push
push
pusha
mov
mov
fs
pop
ins
dec
inc
or
pop
popa
cmp
gs
ins
dec
xor
push
mov
pop
les
push
pop
mov
ret
jns
dec
xor
jb
aaa
mov
push
inc
ret
dec
je
push
sub
or
ret
mov
ins
push
inc
outs
jne
stos
xor
pop
jbe
inc
push
jae
loopne
mov
jp
xor
push
inc
loope
mov
ss
push
bound
inc
inc
dec
xor
jge
movs
gs
bnd
inc
js
ss
dec
sub
jp
pop
callw
push
and
pop
push
add
je
addr16
pop
das
dec
jno
bound
push
fs
push
js
mov
adc
push
dec
mov
jb
xchg
push
xor
cmp
jmpw
(bad)
jae
push
jl
inc
es
dec
gs
mov
clc
jb
scas
cmp
push
xor
sub
movs
jo
les
js
xor
pop
imul
ja
stos
and
jne
ins
xchg
adc
jae
jle
ret
cmp
push
push
enter
dec
imul
push
js
nop
cs
jno
jns
jmp
dec
push
inc
jb
bound
loopne
or
and
push
xor
jo
popa
test
dec
bound
mov
jb
xor
add
ins
into
push
inc
sar
push
dec
inc
pop
push
aad
mov
jno
inc
dec
dec
dec
imul
push
ins
imul
imul
push
xor
fs
out
mov
pop
push
xor
jle
adc
inc
push
inc
gs
in
popa
push
pop
ror
arpl
bound
test
out
js
fwait
or
xor
dec
push
inc
push
push
jbe
dec
inc
xchg
inc
cmc
xor
sahf
retf
sub
xor
dec
sub
clc
add
pop
addr16
imul
popa
push
inc
(bad)
aaa
mov
dec
push
dec
and
idiv
sub
sub
jmp
aaa
js
dec
dec
pop
je
mov
jp
push
jp
jno
push
ret
and
xor
push
inc
push
mov
mov
dec
push
pop
push
pop
imul
and
jno
dec
je
add
fld
call
bound
dec
ins
inc
inc
dec
xor
dec
inc
mov
imul
inc
push
jns
push
(bad)
cs
push
xor
ja
ja
inc
inc
dec
sub
inc
ins
jp
inc
push
les
and
push
test
lds
je
push
data16
pop
dec
inc
dec
retf
in
fs
xor
enter
mov
cmp
push
arpl
ins
mov
pusha
js
pushf
dec
xor
adc
movs
mov
or
pusha
xor
inc
mov
inc
in
xchg
imul
ret
dec
mov
adc
jae
data16
arpl
ss
sub
pop
push
mov
fs
mov
dec
cld
jae
lods
add
pusha
add
xor
inc
dec
dec
mov
inc
ins
add
ss
pop
xor
sub
xor
or
xchg
mov
mov
mov
pop
aaa
mov
outs
test
imul
cs
(bad)
in
test
push
sub
in
sub
test
pop
gs
data16
push
je
fld
inc
js
daa
adc
test
das
call
jae
fs
les
bound
jno
cld
mov
xor
add
aaa
dec
rcl
ficomp
inc
or
pop
aaa
pop
loopne
fmul
mov
jne
push
jmp
inc
ss
(bad)
cmp
jns
push
dec
ins
je
call
xor
dec
cmp
inc
push
mov
inc
mov
cmp
lds
mov
xor
xor
xor
adc
scas
or
imul
rcl
mov
inc
dec
push
jo
outs
arpl
or
jo
push
mov
jb
inc
outs
add
push
popf
shl
ds
div
jmp
mov
dec
push
dec
jne
jmp
push
dec
sub
add
push
aam
adc
mov
push
xor
clc
sbb
or
ss
dec
xor
mov
cli
ins
jb
je
je
gs
sbb
dec
jb
outs
inc
inc
or
ins
rcr
push
sbb
js
hlt
arpl
dec
mov
mov
jp
ja
xor
jp
push
xor
push
or
jne
jne
jae
xor
inc
xor
sbb
ins
jo
jno
inc
push
imul
scas
outs
mov
push
dec
jae
jne
push
loope
fimul
adc
dec
xor
push
mov
test
jecxz
popa
clc
arpl
inc
cmp
push
inc
je
push
adc
jae
pop
es
mov
bound
dec
cmp
js
ret
cmc
dec
addr16
cmp
retf
popa
dec
dec
in
das
xchg
add
dec
xor
dec
push
jne
cs
push
mov
movs
jp
dec
cmps
ins
loop
inc
push
jae
imul
mov
les
or
inc
jo
aam
mov
inc
inc
dec
ins
inc
push
ja
add
push
outs
mov
mov
sub
xchg
pop
push
dec
fwait
inc
dec
lock
inc
jns
jp
push
jne
cmp
push
xor
ins
cwde
xor
inc
bound
push
pop
loope
mov
inc
(bad)
push
sub
fadd
shl
outs
xor
dec
mov
les
jmp
push
aad
jp
jo
fs
sbb
cmp
inc
mov
jp
adc
push
dec
inc
mov
push
fst
ins
fidiv
arpl
outs
xor
cmp
fs
adc
arpl
pushf
push
addr16
cli
(bad)
jg
aaa
xor
js
js
jbe
dec
inc
dec
push
push
aaa
inc
jae
js
test
push
lods
adc
out
jp
dec
dec
push
add
ins
inc
push
cmp
ins
jno
dec
lahf
scas
pop
bound
into
pop
data16
dec
ja
ficomp
dec
test
dec
jp
and
xchg
jae
outs
sar
cli
dec
popa
xor
jns
jno
ror
inc
add
or
pusha
push
imul
retf
(bad)
adc
or
imul
test
push
outs
jle
movs
jo
or
adc
cmp
add
bound
inc
test
jo
outs
ins
mov
jl
add
inc
in
cmp
shl
jns
dec
jp
push
push
jbe
call
dec
sbb
outs
xor
jo
mov
push
push
jno
ss
xchg
and
mov
inc
aad
dec
cmp
inc
xor
outs
dec
ins
lods
and
pop
jl
inc
dec
inc
push
jne
inc
push
jae
(bad)
cmps
or
dec
mov
retf
mov
inc
inc
call
dec
lods
or
stos
mov
(bad)
pop
push
xor
inc
ins
add
xor
repnz
jne
jb
inc
bound
push
sub
inc
jno
pusha
inc
outs
cmp
push
adc
jb
add
stos
pusha
mov
push
jp
pop
ins
dec
bound
dec
dec
test
js
arpl
add
popaw
inc
push
xor
xchg
mov
jb
xchg
je
inc
ins
dec
je
pop
cmc
lds
dec
gs
fs
jbe
add
mov
mov
pop
hlt
xor
pop
mov
dec
ja
push
pop
jns
inc
inc
arpl
or
jg
push
push
jno
pop
inc
into
push
imul
imul
outs
push
gs
inc
sahf
ins
dec
push
push
jo
jo
xor
jge
sbb
sub
push
dec
inc
mov
je
ss
jbe
outs
dec
add
push
movs
dec
(bad)
ss
dec
into
shl
push
pop
dec
cmp
leave
pop
repnz
dec
jno
xor
dec
inc
outs
dec
inc
jne
ss
gs
retf
je
cs
ret
ins
pop
mov
or
xor
cmp
xor
inc
jbe
xor
adc
inc
jp
dec
dec
ins
cmp
inc
dec
fdiv
(bad)
push
push
xor
inc
xor
cmp
inc
cmp
pop
ins
fcomp
push
jbe
aam
retf
jl
bound
push
adc
inc
dec
adc
ins
ss
cmp
jno
jmp
inc
push
xor
xor
bound
pop
cmp
push
outs
imul
pop
push
dec
xor
dec
imul
dec
dec
js
xor
shl
jb
sbb
dec
sub
es
xor
inc
push
pushf
test
inc
push
xor
cmp
jno
or
es
in
mov
pop
pop
adc
inc
pop
push
inc
dec
inc
jp
addr16
inc
arpl
loopne
add
xor
dec
call
jbe
jns
push
inc
aaa
xchg
xor
jb
add
pop
dec
inc
dec
dec
fisubr
jb
push
push
xor
push
loop
mov
dec
jmp
push
je
dec
push
jb
into
push
pop
test
popa
jbe
adc
stos
add
cmps
cmp
dec
xor
je
outs
ja
add
push
push
xor
dec
dec
mov
xor
jp
pop
cmp
cmp
mov
add
dec
(bad)
push
push
ins
in
inc
dec
pop
xchg
mov
jno
push
push
xor
ins
je
out
inc
ror
ins
push
bound
xor
push
mov
push
push
push
jo
xor
push
dec
push
push
jne
ja
outs
imul
xor
inc
or
push
push
dec
mov
xor
xor
inc
int3
push
aaa
mov
stos
or
aaa
ja
xchg
push
cli
push
mov
or
xor
and
cmp
add
cmp
(bad)
lods
retf
loopne
gs
xor
push
sbb
retw
or
fdivr
add
push
jg
cmp
inc
fadd
arpl
push
push
ins
inc
cmp
mov
jns
xor
arpl
retf
in
push
jbe
fmul
pop
sbb
xor
pusha
bound
sbb
dec
cwde
inc
pushf
dec
test
fs
add
adc
outs
xor
stos
aam
jb
loop
mov
js
jbe
jae
inc
fidivr
and
inc
xor
push
push
or
xor
imul
jb
(bad)
aaa
rcl
mov
xor
xor
pop
xchg
adc
popa
mov
fs
push
push
sub
push
adc
popa
mov
adc
rcr
or
jbe
data16
add
xor
inc
jb
dec
aaa
sub
addr16
mov
jae
jns
pop
push
add
jge
lock
ss
jns
inc
and
pop
imul
push
inc
repnz
xor
(bad)
mov
dec
hlt
xor
rcr
ja
popa
pop
sbb
xor
jecxz
fdiv
push
dec
fcom
popa
xor
test
jle
arpl
sahf
stos
dec
imul
dec
icebp
dec
xor
outs
jp
push
xor
dec
cld
cs
dec
push
push
data16
push
or
jne
push
or
xor
gs
push
test
addr16
inc
xor
popa
jle
cmp
jp
or
dec
pop
jo
enter
mov
test
ja
fist
outs
dec
xor
je
dec
dec
push
xor
ret
xchg
push
outs
inc
pop
add
cli
or
ins
pop
xor
or
pop
cmp
inc
push
inc
xor
dec
mov
jns
(bad)
pop
adc
push
sub
push
push
push
jbe
jb
popa
dec
or
sbb
inc
or
fs
or
push
cmp
(bad)
jns
lock
add
imul
dec
bound
inc
jno
in
stos
jp
sar
fs
je
inc
popa
(bad)
aaa
cli
xor
dec
push
add
mov
and
imul
push
mov
ret
sub
dec
fadd
aaa
push
cmp
or
push
push
es
call
bound
jae
mov
fwait
or
imul
outs
inc
push
push
add
inc
push
inc
jb
push
push
rcl
push
push
dec
and
sub
push
gs
jb
jne
mov
adc
and
adc
xchg
push
loop
xor
cmp
in
(bad)
addr16
ins
push
xor
push
and
pop
data16
dec
pusha
fsubr
dec
xor
mov
(bad)
clc
mov
rol
inc
push
outs
push
nop
inc
xor
aaa
adc
dec
cmp
lock
mov
inc
push
lods
ss
push
clc
mov
data16
in
loop
xchg
sbb
xor
inc
push
xor
scas
or
dec
push
pop
call
int3
je
pushf
push
and
push
xor
dec
pop
xchg
loopne
pop
xor
push
dec
addr16
loopne
cmps
idiv
push
inc
ins
popa
je
inc
inc
push
je
push
enter
xor
pop
mov
cwde
inc
arpl
xor
jge
addr16
inc
dec
inc
xor
loopne
dec
jmp
pop
jb
cs
out
in
ins
xor
inc
dec
jb
push
jp
xor
outs
jp
push
dec
dec
ins
push
mov
push
mov
pop
mov
je
outs
sub
xor
outs
inc
gs
dec
fisub
xor
dec
dec
pop
xor
xor
dec
inc
cmp
add
inc
ja
inc
fcomip
add
push
push
xchg
fs
push
jo
xor
push
inc
cwde
jbe
push
xor
jg
imul
cmp
push
dec
les
test
addr16
sub
and
mov
imul
in
in
rol
push
dec
inc
push
ins
ja
dec
hlt
cmp
push
push
mov
jns
xor
sbb
push
lock
fadd
xor
popa
outs
jp
leave
jo
push
cmps
mov
sub
push
les
mov
test
popa
cld
inc
jne
lahf
jo
push
arpl
inc
aaa
jg
sbb
push
daa
outs
xor
imul
cmp
and
call
addr16
arpl
jl
jbe
push
call
inc
push
dec
cmp
push
mov
adc
push
js
push
pop
inc
jl
jb
aaa
jb
xor
(bad)
xor
cmp
jp
jo
ja
or
add
dec
or
data16
jne
lock
jns
xor
cmp
inc
dec
xor
push
mov
rcl
in
ins
xor
sbb
inc
push
pop
xchg
inc
push
mov
jb
gs
xor
(bad)
pop
fadd
dec
jns
imul
xor
jmp
inc
rol
ss
cmps
gs
dec
push
jne
dec
push
scas
mov
outs
inc
push
or
pop
dec
imul
dec
ins
imul
outs
inc
outs
dec
inc
imul
clc
push
and
mov
nop
aaa
in
js
jns
and
(bad)
jg
pusha
dec
imul
addr16
js
push
sub
add
shl
mov
xchg
push
sub
(bad)
dec
pop
sub
lods
or
push
xor
stos
dec
pop
in
push
imul
pop
push
ja
aaa
dec
dec
add
xchg
or
pop
dec
dec
pop
jp
jl
cli
popa
xlat
out
jp
imul
jo
imul
inc
ror
mov
push
(bad)
les
xor
scas
aaa
mov
jp
dec
addr16
imul
in
cmps
push
jo
xor
popa
dec
jb
gs
dec
test
ja
jns
rcr
aad
jae
ja
inc
outs
jbe
inc
cmp
pop
add
jns
jp
mov
ins
inc
or
jb
push
sbb
fs
lock
jp
xor
push
mov
jo
pop
dec
es
push
push
xchg
cmp
fisubr
sub
dec
cmp
es
push
arpl
je
jbe
nop
ss
cmp
out
inc
shl
pop
and
and
mov
sub
push
je
adc
mov
add
pop
inc
inc
je
jbe
dec
push
and
mov
test
inc
xor
push
or
sbb
dec
inc
cmp
ins
test
mov
inc
popa
popa
stos
outs
fs
push
push
xor
cmp
pop
test
xor
outs
ror
pop
aaa
inc
popa
push
test
addr16
mov
sub
xor
xor
adc
sar
xor
jp
xor
aaa
je
push
mov
je
add
jbe
xor
idiv
pop
add
bound
gs
jns
ss
xor
push
jo
rol
lock
xor
out
call
xor
(bad)
in
ficomp
add
aaa
pop
outs
test
push
push
jne
mov
ret
fs
arpl
push
bound
sub
sbb
arpl
fidiv
xor
gs
adc
fs
dec
push
push
ficom
inc
cmp
ja
(bad)
jg
dec
push
call
addr16
inc
arpl
inc
jne
push
aaa
push
push
jecxz
in
push
inc
(bad)
div
ss
data16
js
push
mov
push
imul
xor
pop
bound
push
xor
jae
clc
loopne
dec
inc
jbe
push
jns
arpl
test
bound
gs
addr16
inc
pop
xor
push
data16
push
cmp
jns
cmp
push
(bad)
dec
jno
out
ja
data16
or
js
mov
adc
push
mov
push
jae
or
lock
(bad)
call
inc
xor
push
arpl
inc
add
push
dec
ss
push
aaa
push
(bad)
outs
popa
ja
ins
ja
ss
inc
cmp
or
arpl
cwde
into
xor
data16
xor
dec
dec
gs
je
(bad)
jg
ins
xor
inc
inc
imul
jno
inc
push
push
je
addr16
cmp
es
gs
xor
jle
xor
add
ins
push
jbe
push
xor
jp
xor
bound
jb
dec
dec
bound
inc
push
jmp
dec
outs
bound
xchg
push
ss
mov
repnz
push
cmp
push
inc
ja
imul
push
addr16
pushf
rcr
push
outs
mov
push
stos
jo
pushf
pop
dec
loopne
in
mov
pop
loopne
data16
push
xor
sbb
pop
mov
push
bound
xor
imul
bound
dec
dec
jo
imul
xor
dec
ret
dec
push
inc
je
and
bound
lea
push
sbb
or
imul
outs
and
dec
push
cmp
dec
add
push
jo
ss
jle
imul
aaa
retf
retf
inc
push
inc
inc
je
xchg
push
and
push
jo
inc
push
loope
push
mov
in
inc
inc
dec
push
push
pop
gs
sti
sub
inc
arpl
push
fdiv
pop
xor
movs
mov
dec
pop
cmp
fs
xchg
call
lea
fcmove
ja
mov
sbb
mov
and
es
xor
out
scas
sbb
fs
push
je
inc
push
push
jo
cmp
mov
(bad)
xor
cmp
into
push
mov
add
es
inc
jbe
imul
sbb
mov
and
aam
push
mov
inc
dec
bound
dec
add
inc
fimul
ins
test
mov
ror
pop
pop
(bad)
outs
xor
push
pop
loopne
fiadd
ja
inc
fs
imul
mov
movs
push
jns
jmp
mov
dec
pop
rol
addr16
push
mov
imul
xor
jns
ins
es
xchg
dec
push
stos
add
in
xchg
jb
jo
lods
mov
push
sahf
stos
ins
dec
arpl
(bad)
mov
push
inc
call
pop
pop
add
sub
ja
inc
xchg
sub
jp
jle
ins
data16
pop
in
inc
jp
stos
data16
push
stos
push
push
dec
outs
jb
call
push
inc
shr
shl
adc
ins
ss
fistp
pop
dec
js
xor
movs
xor
addr16
call
dec
inc
inc
inc
inc
hlt
dec
popa
push
js
push
dec
mov
adc
jne
push
xor
not
push
dec
fimul
outs
or
jo
mov
hlt
scas
inc
jp
outs
jg
ror
fs
ins
push
push
inc
aaa
jno
push
loop
cli
dec
fs
dec
mul
push
push
dec
mov
shl
cs
ins
inc
or
cld
push
test
pop
push
cmp
cmp
fiadd
jmp
dec
xor
dec
loopne
ret
icebp
push
inc
gs
addr16
dec
dec
(bad)
xor
push
(bad)
outs
push
dec
les
outs
xor
(bad)
push
test
jno
push
push
xchg
pop
inc
mov
inc
ins
xor
mov
nop
sub
scas
clc
push
jecxz
dec
push
clc
cmp
push
bound
inc
sbb
push
push
and
out
stos
pop
mov
inc
pop
push
jno
pushf
inc
xchg
push
inc
push
popa
(bad)
mov
push
dec
(bad)
in
cmp
xor
inc
outs
inc
outs
push
jno
jp
clc
fidiv
push
aaa
adc
xor
gs
shr
dec
imul
dec
clc
ss
(bad)
push
enter
inc
jne
cmp
inc
inc
xor
sub
xor
into
push
dec
das
fisub
xchg
push
jne
xor
dec
je
mov
jno
jp
dec
dec
push
inc
outs
ins
fdiv
jae
push
inc
jb
je
xor
movs
add
push
and
mov
data16
push
push
dec
adc
mov
jo
mov
inc
mov
sub
inc
js
pop
push
inc
sbb
inc
add
push
ins
sbb
adc
push
out
or
inc
dec
jb
inc
jo
popa
push
cmps
push
push
dec
ss
sbb
inc
jno
dec
push
inc
push
xchg
test
inc
outs
push
fst
push
popa
inc
ds
mov
shl
sahf
xor
dec
out
or
and
push
dec
dec
pop
dec
dec
test
je
push
in
cli
bound
ss
mov
push
enter
pop
lock
xchg
dec
xor
dec
adc
cmp
add
and
or
imul
outs
jbe
inc
jg
inc
movs
mov
imul
ja
mov
inc
jecxz
outs
je
jp
cmp
aam
dec
dec
cmp
push
push
xchg
xor
ds
outs
cli
ins
mov
bound
bound
mov
pop
push
ds
dec
jns
je
xor
movs
push
inc
jno
dec
push
jl
aaa
pop
dec
in
push
ins
dec
mov
xor
jp
adc
inc
(bad)
push
inc
or
(bad)
dec
dec
inc
inc
jp
sub
jae
sub
gs
cwde
push
xchg
rcr
popa
jb
jno
pop
imul
or
outs
imul
jbe
outs
add
mov
sub
sub
adc
jb
sub
test
pop
call
mov
ins
xor
adc
call
jno
add
xor
test
xor
push
pop
push
and
dec
call
jno
ret
jne
es
data16
loope
push
cs
into
imul
arpl
hlt
inc
dec
ja
outs
dec
lods
inc
test
pusha
shr
inc
inc
sub
popa
mov
jno
xchg
(bad)
stos
adc
dec
jl
or
test
adc
ds
ds
shl
loop
outs
xor
fimul
imul
sub
jp
fisub
(bad)
test
jae
push
clc
inc
cmp
cwde
popa
inc
cmp
inc
imul
inc
les
inc
aaa
jo
fs
sub
clc
jae
outs
pop
sub
pop
fs
es
dec
xor
cmp
xor
xor
and
test
inc
xor
fstp
inc
dec
bound
push
lea
dec
jp
mov
xor
je
ins
xor
xor
mov
dec
inc
popa
cmp
dec
in
ja
jno
jb
aaa
cmp
ins
js
or
test
xor
imul
xor
dec
bound
popf
cli
dec
ins
ins
mov
mov
push
popa
inc
imul
mov
xor
mov
xor
lock
dec
data16
mov
dec
xor
fmul
dec
jae
push
imul
popa
sub
push
push
push
imul
sbb
ja
push
je
data16
inc
js
push
jno
xchg
sbb
imul
jbe
inc
outs
jbe
jp
xchg
adc
data16
loope
inc
push
add
jo
ss
jne
add
or
sbb
push
dec
pop
push
push
mov
imul
pop
add
ins
push
push
jns
rcl
jo
xor
outs
xor
push
dec
pop
outs
and
test
and
jb
push
(bad)
scas
stos
mov
aaa
movs
inc
xor
xor
loopne
gs
jno
and
push
mov
clc
jp
xor
clc
mov
push
xor
les
inc
inc
jns
outs
fidivr
(bad)
jmp
outs
xor
dec
adc
jno
push
xor
ins
inc
je
inc
inc
dec
dec
xor
ror
inc
je
int3
inc
mov
inc
jp
jb
jbe
mov
ins
gs
pop
mov
outs
dec
and
push
bound
test
push
lods
push
(bad)
aaa
outs
cmp
js
(bad)
push
push
xlat
pop
push
xor
cmp
sub
inc
mov
dec
pusha
add
cmps
ss
or
or
ss
push
gs
push
xor
popa
jo
sbb
jmp
cmps
dec
jns
push
jb
xor
push
ja
jne
movs
imul
adc
xor
xor
xor
dec
je
js
imul
push
(bad)
push
mov
mov
imul
cmc
push
jp
xor
pop
xchg
dec
ja
and
imul
mov
xor
cmp
shl
sub
mov
into
bound
dec
or
out
push
push
dec
xor
xor
sbb
cld
or
outs
inc
into
cmp
xor
push
add
pop
or
xor
xor
xor
pop
shr
xor
pop
dec
push
les
push
jbe
imul
cli
or
push
dec
push
sbb
push
or
rol
jl
jne
inc
addr16
xor
aaa
push
inc
inc
dec
add
fs
dec
inc
jno
ds
cwde
or
mov
jo
dec
xor
ja
cmp
or
mov
xchg
cmp
xor
dec
imul
sbb
xor
inc
dec
sbb
dec
dec
pop
add
mov
data16
add
push
pop
jno
xor
jp
jne
ds
jb
ja
xor
je
and
jo
js
and
mov
ficom
inc
ins
push
dec
push
push
test
pop
icebp
pop
xor
test
bnd
mov
pop
push
push
movs
add
popa
jns
bnd
test
pop
add
jb
js
mov
inc
pop
fdiv
and
ja
or
outs
push
fmul
xor
outs
inc
jmp
addr16
jne
add
dec
imul
dec
div
popa
jnp
mov
dec
arpl
xchg
dec
inc
dec
add
mov
xor
popaw
bound
fistp
push
rcr
fidiv
cmps
mov
out
stos
push
pop
fs
les
sbb
arpl
mov
sub
dec
cmp
mov
sub
dec
inc
int3
cwde
out
les
jne
ss
jp
cs
mov
pop
dec
xchg
bound
dec
shl
jp
inc
inc
mov
call
stos
cld
dec
ins
ss
ror
jne
adc
aaa
jmp
sub
push
pop
ss
retf
cmp
lock
dec
cmp
imul
pop
or
popa
dec
mov
dec
jae
arpl
jae
sub
jne
call
and
inc
xor
adc
scas
stos
cs
push
arpl
ja
mov
loopne
fidiv
test
jns
push
jns
xchg
dec
dec
xchg
ins
ins
bound
or
or
xor
inc
js
je
sub
xor
xchg
push
push
pop
jns
or
aad
jbe
xor
sbb
xchg
pop
xor
inc
push
push
ins
inc
dec
ss
es
sub
adc
ja
lods
lock
push
pop
push
push
je
mov
mov
push
aaa
addr16
jae
push
cdq
mov
inc
outs
ins
jb
push
push
popa
(bad)
pop
popa
xor
adc
inc
inc
jne
push
ss
ror
inc
aaa
xor
aam
aaa
inc
cmp
inc
sbb
mov
call
inc
ins
inc
sub
outs
mov
xchg
fcmovne
cli
imul
pop
mov
fcmovbe
ins
inc
in
bound
pop
call
dec
mov
inc
cwde
(bad)
or
add
into
push
sub
data16
shl
outs
jno
(bad)
jecxz
jecxz
dec
xor
outs
push
xor
mov
inc
xchg
inc
mov
outs
dec
nop
je
jb
addr16
push
xlat
cmp
jo
ins
push
push
jae
loope
jo
cli
jns
bound
xor
je
push
mov
in
imul
dec
gs
or
dec
cmp
dec
push
dec
pop
and
xor
loopne
inc
test
js
push
or
xchg
fsubr
pop
jo
push
pop
mov
dec
jp
call
gs
pop
mov
push
mov
jmp
add
push
fs
cmp
push
pop
mov
push
xchg
fidivr
jge
test
jb
jno
bound
dec
jbe
mov
xor
ins
jno
movs
mov
das
mov
xor
jne
bound
xor
jp
ins
and
push
push
lock
push
adc
mov
mov
push
jo
imul
dec
push
js
jns
dec
cmp
cmc
mov
stos
push
pop
ins
outs
les
inc
dec
ins
jae
cmps
inc
mov
mov
icebp
sbb
add
jno
xor
jae
bound
xor
pop
or
inc
ja
jns
out
mov
add
arpl
imul
push
ins
inc
xor
popa
xor
xor
push
xor
xor
mov
es
push
push
sbb
dec
xchg
push
or
dec
jb
pop
int3
arpl
shl
sub
xor
cmp
je
pop
imul
xor
test
sub
fmul
mov
aam
jo
jp
imul
xchg
fdivr
mov
inc
cmp
jl
and
inc
push
inc
inc
push
push
xor
jo
mov
stos
sbb
jae
lock
push
je
push
xor
lds
imul
ss
js
into
xchg
xor
imul
pop
aaa
add
arpl
ror
retf
dec
inc
shr
arpl
add
mov
adc
dec
sub
stos
rcl
pushf
dec
cwde
xor
sbb
sar
inc
inc
cvtpi2ps
stos
aad
ret
dec
cmp
loop
push
mov
neg
in
push
dec
pop
push
push
and
push
fimul
xchg
pushw
arpl
push
xor
inc
daa
add
adc
dec
push
daa
fcomp
sbb
sub
add
mov
(bad)
add
jno
jne
adc
add
js
mov
or
sub
jge
xor
imul
bound
dec
aaa
push
bound
cmp
jmp
arpl
inc
jne
jbe
pop
arpl
dec
inc
push
pop
mov
ins
lods
inc
mov
xor
xchg
jp
dec
mov
or
je
jns
jae
bound
and
push
and
xchg
fst
xchg
jp
cmp
xor
push
outs
xor
(bad)
sub
inc
push
ins
cmp
ins
mov
jb
xchg
jno
not
fldcw
and
inc
add
xor
pop
movs
inc
push
jp
and
dec
push
push
dec
pop
or
jae
addr16
pop
dec
ja
aad
out
push
push
dec
xor
dec
sbb
rcl
fsubrp
inc
dec
popa
fmul
sub
xor
bound
cmc
inc
inc
jl
ins
xor
inc
inc
imul
enter
imul
sub
imul
inc
inc
sbb
jp
push
cwde
push
imul
repz
jbe
pop
dec
cmp
ins
ss
push
gs
jno
jmp
push
pop
or
xor
dec
outs
cli
aad
push
xor
push
imul
or
cmp
nop
fs
push
dec
jbe
cmp
inc
xor
outs
outs
aaa
jo
sbb
xor
xor
out
aam
popa
push
dec
pop
dec
in
bound
jne
push
sub
or
inc
jp
inc
aaa
mov
xor
jb
xor
jae
aaa
pop
fs
inc
ss
dec
push
cmp
jbe
addr16
jbe
adc
cmp
movs
jo
cwde
outs
jp
inc
dec
xor
inc
je
push
jo
inc
push
outs
adc
sar
jp
imul
xor
cmp
cmp
xor
clc
addr16
dec
xor
sub
jo
retf
ins
popa
push
sbb
(bad)
jne
ja
push
inc
jns
inc
pop
js
inc
push
lock
xor
push
xor
add
inc
je
inc
ficom
dec
pusha
add
cli
jo
cmp
div
jb
sbb
repnz
movs
and
bound
adc
or
inc
add
es
pop
cmp
data16
push
jbe
test
xor
jbe
js
inc
sub
inc
pop
cs
ins
out
push
dec
ss
jg
pop
sar
dec
xor
ja
outs
push
jp
mov
movs
mov
push
push
xor
adc
orps
push
or
pop
xor
add
jp
arpl
adc
mov
test
sahf
jp
fadd
ret
fisttp
not
add
push
push
dec
outs
imul
jle
pop
outs
inc
xor
mov
pop
xor
xor
adc
mov
add
xchg
icebp
xor
xor
xor
push
test
add
xor
lods
jmp
dec
push
push
jae
popa
push
push
dec
imul
pushw
add
push
dec
inc
push
push
dec
shr
xor
dec
call
mov
inc
push
and
push
push
push
inc
and
add
add
jne
mov
inc
outs
js
dec
test
inc
dec
jp
xor
xchg
jae
xor
or
push
or
xor
clc
jmp
imul
xor
jbe
jae
push
xor
push
jmp
int3
pop
ins
jmp
gs
ins
addr16
jno
ins
dec
ins
jae
cmp
add
out
stos
dec
gs
xor
aaa
inc
pop
bound
inc
push
xor
sub
or
inc
push
(bad)
cmps
pop
xchg
cld
push
push
jo
xor
imul
fisub
sbb
dec
xchg
adc
loop
push
or
sub
xor
bound
std
push
xor
push
dec
push
dec
outs
inc
adc
dec
dec
lods
push
inc
xor
outs
jmp
clc
push
dec
push
addr16
jns
push
imul
jns
jo
xor
pusha
enter
rcl
fsub
outs
xor
je
inc
bound
loopne
je
xor
inc
inc
push
(bad)
(bad)
mov
push
outs
inc
aaa
js
cmp
ins
ins
pop
mov
xor
je
outs
push
mov
mov
add
call
cdq
(bad)
push
inc
cmp
imul
xor
jp
inc
xor
call
jg
add
arpl
jne
inc
dec
xor
xor
and
shl
enter
push
cwde
adc
sub
cli
pop
popa
jbe
dec
push
arpl
jns
jns
fisubr
(bad)
(bad)
xchg
mov
xor
ins
dec
test
mov
push
jp
or
push
ins
outs
push
inc
push
push
cmp
push
lods
adc
movs
imul
inc
dec
fs
adc
adc
push
outs
pop
clc
or
dec
jae
jb
inc
jbe
imul
mov
ss
fidiv
dec
je
xor
dec
cmp
jbe
lods
push
pop
xor
xor
push
push
and
popa
jp
xor
cli
mov
popa
dec
inc
inc
ss
jb
dec
push
jne
jo
jp
jne
loope
cdq
outs
(bad)
popa
gs
cmp
xor
ret
push
call
sub
mov
repnz
jp
cmp
call
xor
jp
jno
add
popa
jb
inc
cmp
dec
in
inc
xlat
mov
inc
pop
ja
shl
shl
callw
inc
(bad)
jmp
pop
add
inc
outs
xor
gs
push
outs
jl
out
nop
inc
add
pop
call
pop
outs
xor
addr16
arpl
mov
add
push
jbe
js
jbe
jno
je
outs
and
xchg
ja
gs
clc
es
mov
xor
pop
mov
fs
ins
stos
push
cld
sub
mov
push
inc
shr
dec
inc
xor
outs
adc
mov
or
loop
sbb
sub
xor
sub
test
push
xor
sub
sub
js
jae
adc
data16
outs
jno
test
test
jb
push
add
jno
pop
mov
inc
inc
xor
pushw
jb
push
xchg
adc
mov
xchg
fisub
sub
xor
adc
mov
arpl
sub
je
or
jne
jnp
and
and
ins
inc
push
cld
push
or
pop
dec
dec
xor
add
es
push
add
js
data16
dec
push
inc
push
mov
push
push
pop
pop
in
sub
stos
pusha
ins
fcomp
pop
jb
dec
imul
jb
cmp
data16
dec
test
jae
inc
push
int3
sub
loopne
jle
xor
cli
mov
fdivr
popa
aaa
cwde
je
add
data16
push
push
cmp
daa
jp
bound
push
mov
ss
push
pop
adc
mov
sub
push
outs
inc
fisub
add
push
inc
jne
sbb
ret
sub
xor
xchg
and
dec
ins
imul
sub
push
pop
inc
push
adc
lock
ins
outs
les
inc
movs
cli
pop
aam
jp
inc
outs
push
scas
add
outs
and
imul
imul
je
jae
mov
dec
je
imul
fimul
imul
addr16
jne
inc
cmp
push
fsub
inc
js
loopne
xor
push
mov
enter
loop
es
add
(bad)
sub
mov
imul
push
jae
imul
xor
imul
pop
push
jg
jo
sbb
push
dec
mov
data16
push
stos
push
outs
xor
addr16
push
dec
jbe
mov
inc
push
xor
inc
xor
xor
mov
mov
dec
push
dec
adc
scas
aaa
cld
jns
arpl
sbb
push
aaa
inc
dec
adc
loopne
dec
push
pop
xchg
rcr
ss
push
nop
pop
jne
ja
inc
es
push
lods
xchg
dec
sub
push
xchg
retf
xor
ja
or
fs
imul
add
push
loopne
and
jp
data16
dec
outs
dec
fistp
pusha
dec
xor
inc
push
jns
dec
jb
push
dec
gs
push
loopne
pop
xchg
es
cmp
call
js
outs
adc
jp
stos
lods
adc
pop
(bad)
xor
add
mov
inc
push
inc
push
add
inc
xchg
ss
inc
dec
jp
ins
bound
inc
gs
sahf
enter
pop
mov
dec
arpl
ins
xor
jg
dec
push
cmp
inc
outs
ins
hlt
xor
std
outs
mov
ins
bound
js
or
hlt
adc
arpl
sub
jb
cmp
ss
clc
jb
jne
pop
pop
cld
inc
dec
cmp
push
mov
xor
push
je
outs
or
data16
mov
pop
dec
fs
xor
pop
push
mov
lods
dec
popa
add
mov
inc
jle
push
imul
xchg
call
jns
adc
or
or
add
dec
mov
push
pop
xor
ins
inc
ja
dec
and
inc
push
data16
and
inc
inc
cld
scas
out
push
lock
outs
jae
xor
gs
cmp
push
stos
ret
adc
outs
push
imul
dec
mov
jp
callw
jo
mov
imul
xor
retf
jo
icebp
inc
xchg
pop
call
jb
pop
and
nop
xor
dec
data16
cmps
mov
sub
arpl
pop
inc
or
int3
cmp
push
add
inc
sub
test
clc
pop
bound
int3
inc
push
fild
pushf
jne
retf
fs
xor
test
bound
aam
sub
test
push
je
cmc
add
xor
inc
jbe
mov
ins
movs
mov
push
rol
inc
outs
cmp
jbe
push
cmp
push
mov
dec
inc
lds
pop
push
les
popa
push
stos
mov
and
dec
push
sbb
inc
mov
sbb
xor
pop
adc
scas
into
inc
push
dec
inc
dec
push
(bad)
cmp
dec
push
hlt
mov
fiadd
imul
adc
inc
aad
inc
xor
mov
sbb
cld
push
dec
je
imul
xchg
cs
nop
cmp
outs
mov
adc
clc
jb
ins
push
jo
dec
ins
dec
addr16
or
outs
gs
ja
mov
xchg
shl
mov
outs
push
cs
dec
pop
aad
add
in
bound
dec
push
mov
pushf
adc
and
xor
call
imul
ja
ja
xor
dec
imul
arpl
jmp
inc
dec
stos
mov
dec
dec
imul
xor
or
rol
inc
lds
mov
jbe
les
inc
push
ja
pop
pop
or
dec
pop
push
dec
jmp
dec
xor
mov
xor
jle
int3
arpl
xor
push
js
inc
or
mov
(bad)
movs
jp
adc
sbb
xor
push
inc
sbb
aad
adc
js
push
pop
or
ins
jbe
push
add
sub
mov
push
push
pop
cmp
imul
outs
mov
xchg
mov
inc
outs
push
inc
data16
popa
cmp
aad
dec
dec
xchg
push
jns
ins
pusha
(bad)
call
push
outs
gs
xor
inc
inc
push
push
ins
js
imul
ret
ret
push
outs
dec
push
movs
add
loope
sub
jno
je
push
push
jbe
xor
lods
ja
lods
enter
bound
xor
movs
mov
dec
push
push
mov
fbld
jbe
inc
push
inc
push
and
aam
xor
fcom
outs
cld
push
dec
clc
lock
(bad)
push
imul
xor
pop
adc
fdiv
sahf
push
and
(bad)
arpl
xor
dec
xor
mov
cmps
push
fwait
and
ins
xor
retf
sub
push
push
dec
dec
jno
add
push
xor
ins
outs
dec
gs
outs
add
add
inc
arpl
imul
dec
dec
inc
inc
xor
jo
dec
ja
mov
jne
js
push
mov
inc
cmp
scas
mov
(bad)
imul
pop
aaa
push
jp
outs
arpl
or
(bad)
call
cmp
xor
loope
push
out
jl
cmp
push
pushf
sub
xchg
mov
dec
push
xchg
fstp
cmp
push
repnz
ins
add
cwde
clc
enter
and
aaa
adc
xchg
imul
inc
dec
dec
dec
inc
push
pop
mov
ins
jae
fdiv
add
fisubr
dec
push
push
fst
sbb
adc
arpl
mov
ins
inc
mov
sub
cs
dec
pusha
push
outs
mov
jne
call
push
jge
ret
jmp
dec
push
stos
stos
ja
push
inc
ss
inc
and
push
hlt
call
gs
test
add
mov
stos
add
push
push
push
jbe
(bad)
popf
nop
jle
jbe
imul
jne
ss
xor
push
jno
div
adc
ins
inc
push
xor
(bad)
test
ja
inc
addr16
cmp
cld
add
sub
dec
push
xor
dec
add
inc
pushf
je
push
cmp
mov
or
inc
in
outs
ja
push
xchg
leave
movs
push
cmp
xor
jo
push
cwde
inc
push
inc
adc
dec
or
dec
sar
es
mov
cmp
ss
imul
scas
mov
cwde
inc
inc
pop
dec
inc
inc
jno
mov
jl
sbb
dec
push
and
outs
dec
jbe
push
push
inc
outs
dec
ins
xor
or
jb
sahf
fwait
pop
movs
adc
shr
rcl
push
dec
push
jb
bound
je
mov
xor
xor
dec
dec
jae
cmp
sub
or
aaa
push
jno
inc
xor
ins
rol
jb
sub
and
data16
push
data16
mov
jne
push
popa
cmp
imul
data16
pop
and
dec
jp
xchg
movs
xor
mov
(bad)
cmp
push
dec
pushw
imul
xor
mov
mov
inc
add
outs
inc
int3
repnz
push
jp
shr
and
je
ins
inc
cmp
jg
adc
aaa
push
jns
bound
cmp
jbe
sbb
js
popa
fs
push
jo
push
dec
dec
jne
ja
je
inc
sbb
cmps
add
pop
inc
fs
xor
cmp
dec
inc
dec
pusha
sub
into
push
fdiv
jns
imul
xor
dec
xor
push
mov
dec
push
push
cmp
mov
out
jb
mov
dec
arpl
inc
test
pop
jno
inc
cwde
or
adc
dec
dec
and
lods
sub
je
jae
gs
push
jbe
ret
icebp
add
push
dec
ss
push
repnz
push
inc
inc
ds
or
aaa
imul
adc
xor
cmp
inc
lods
dec
stos
outs
push
and
xor
fsubr
adc
imul
push
xor
pop
add
adc
ins
test
add
sub
call
dec
push
push
pop
hlt
add
xor
dec
xchg
cmp
push
ins
lock
pusha
push
(bad)
bnd
jo
stos
or
loop
gs
outs
jge
push
push
les
ss
xor
mov
dec
push
(bad)
imul
test
xor
outs
aaa
push
mov
push
jne
jne
ja
lock
aaa
inc
push
dec
ins
fdiv
aaa
int3
inc
stos
ins
inc
inc
mov
nop
cmp
inc
dec
jp
repnz
test
es
stos
push
sub
mov
ja
adc
jns
dec
xchg
mov
hlt
jne
outs
jp
outs
ins
jb
push
loop
dec
fcom
cmp
add
push
xor
push
inc
outs
ins
xor
cmp
push
ins
fmul
inc
push
xor
inc
jo
jo
dec
je
out
jp
fwait
loop
jbe
ins
ja
inc
push
inc
mov
loop
aaa
push
rcl
jno
push
push
xchg
or
push
ja
imul
xor
adc
bound
and
ins
inc
pop
jno
and
push
pop
test
dec
gs
xchg
cdq
push
mov
pop
push
and
dec
inc
mov
pop
mov
sar
outs
xchg
jb
call
sbb
pop
jg
or
mov
push
mov
inc
push
inc
mov
xchg
hlt
pop
jbe
jo
dec
imul
pop
fadd
push
imul
add
fs
mov
scas
inc
xor
inc
dec
bound
pop
cmp
adc
dec
jae
add
fsub
dec
inc
stos
dec
push
dec
add
cmp
inc
ds
imul
bound
xor
dec
mov
xor
push
mov
js
ja
shr
jne
rcl
dec
pushf
imul
loop
push
aaa
sbb
ins
jo
fidiv
pop
mov
jb
dec
xor
js
ins
or
dec
push
shl
mov
je
push
adc
ins
mov
dec
pop
jae
arpl
adc
loope
test
ss
je
sbb
push
jno
mov
jno
inc
ror
inc
les
sbb
popa
push
xchg
fiadd
test
push
(bad)
xor
fdiv
push
aam
ficom
cmp
dec
mov
mov
push
push
inc
push
push
ss
mov
cld
dec
jbe
ins
ss
js
je
inc
ss
jno
cmp
or
jo
inc
cmp
add
call
push
jne
arpl
pop
dec
cwde
sub
pop
dec
ss
dec
pmullw
adc
mov
cmp
arpl
cmp
pop
pop
mov
arpl
jns
dec
imul
cmp
es
shl
xchg
inc
rol
push
jb
ja
push
retf
xor
fidivr
inc
dec
je
fs
or
sub
imul
dec
popa
pop
push
jns
movs
add
adc
aam
dec
adc
dec
hlt
ja
push
jbe
mov
data16
jo
test
mov
arpl
nop
int3
imul
xor
je
jbe
dec
and
imul
dec
jp
inc
shl
rcl
fs
inc
inc
inc
jo
mov
pop
sub
sbb
inc
xchg
inc
inc
mov
dec
ins
jmp
data16
js
pop
mov
sahf
dec
push
dec
arpl
xor
(bad)
push
push
jp
or
pop
and
ins
xor
fidiv
(bad)
pop
pop
arpl
ins
xor
push
pop
(bad)
dec
arpl
cmp
pop
jno
dec
pusha
xchg
mov
js
je
inc
xchg
je
jae
dec
push
push
mov
imul
fs
js
mov
push
mov
jns
imul
adc
jns
pop
mov
jo
sub
ins
pop
ins
fs
xchg
mov
jl
cld
push
outs
mov
push
cmp
clc
pop
xor
sub
adc
jp
jmp
js
addr16
xor
xchg
add
add
ret
test
hlt
push
dec
sub
adc
in
rol
xor
inc
sahf
inc
dec
xchg
pop
int
ds
mov
jb
push
pop
mov
push
and
push
addr16
pop
adc
jl
xor
ins
ins
mov
cmp
xor
imul
sub
fs
sub
pushf
push
jb
test
addr16
aaa
imul
xchg
inc
ss
xor
and
call
test
xor
pop
push
push
inc
jns
neg
jae
push
js
sti
ja
sar
cmp
jmp
outs
inc
lock
and
fwait
adc
pop
xor
arpl
xor
dec
mov
inc
ins
outs
fs
push
cli
jb
ins
imul
inc
mov
jne
rol
ins
bound
pop
push
jp
ins
fsub
inc
xor
add
(bad)
jne
pop
das
fidiv
dec
xor
inc
arpl
jb
adc
into
bound
push
push
in
dec
es
sub
ss
stos
inc
shl
fcom
fs
out
retf
push
scas
push
rol
or
aaa
sbb
ins
jno
xor
add
mov
push
jns
stos
lds
inc
mov
xor
test
add
in
push
jmp
cs
adc
aaa
loopne
xor
dec
xchg
pop
and
or
nop
xor
and
fs
bound
push
cwde
sbb
or
std
fwait
sub
dec
xor
gs
test
out
mov
arpl
dec
addr16
pop
xor
push
shl
xor
ins
add
inc
int3
stos
cmp
icebp
sti
cmp
push
dec
cmp
inc
addr16
push
sbb
(bad)
int3
mov
(bad)
jne
arpl
call
jp
outs
inc
stos
dec
je
add
adc
dec
gs
or
rol
js
outs
push
xor
test
(bad)
xor
push
cmp
mov
into
push
and
loopne
pop
dec
nop
bound
push
mov
or
adc
dec
cmp
pusha
push
mov
js
imul
jp
add
bound
push
mov
addr16
fsub
mov
push
jle
pop
pop
aaa
rcl
adc
xor
ss
jp
jp
jne
fbstp
dec
dec
mov
dec
push
imul
jmp
push
dec
outs
xchg
sbb
ins
jae
cli
push
test
mov
jae
jne
add
push
test
dec
ret
bound
in
add
xchg
fisubr
imul
push
push
inc
push
in
push
jne
cmp
stos
mov
or
inc
push
jno
sub
mov
test
int
dec
outs
adc
gs
jl
add
jo
lods
lock
cwde
push
or
stos
and
push
data16
adc
bound
not
shr
add
adc
inc
addr16
cmp
push
ins
push
add
aaa
inc
enter
cli
sbb
cmp
or
adc
lea
outs
and
inc
mov
(bad)
sub
nop
addr16
inc
cs
jne
sub
push
in
dec
inc
bound
push
clc
push
stos
mov
adc
ss
xor
nop
repnz
ss
js
ins
dec
addr16
shl
jecxz
add
push
xchg
add
dec
scas
ins
xchg
hlt
xor
cmp
popa
inc
in
aad
sbb
mov
mov
xlat
jns
add
mov
add
dec
push
pop
mov
add
outs
pop
and
mov
jbe
mov
adc
sub
push
cmp
adc
push
movs
pop
or
dec
into
inc
gs
xor
fnsave
xor
dec
sub
retf
dec
inc
mov
xor
loopne
xor
pop
inc
mov
dec
stos
ret
dec
hlt
push
enter
xor
rcl
cld
push
jns
xor
mov
xor
mov
push
pusha
push
jo
jno
dec
fs
push
mov
push
div
dec
xor
xor
mov
int3
jns
jo
test
mov
dec
imul
in
or
push
inc
les
add
loopne
mov
push
dec
push
dec
dec
ss
jecxz
adc
ins
cmp
xor
pop
pusha
add
ins
jl
jae
inc
xchg
or
push
adc
cwde
shl
inc
mov
bound
push
out
movs
int3
int3
mov
push
push
and
clc
outs
mov
outs
fs
call
adc
pop
inc
ja
int3
bound
ja
lods
movs
push
mov
jae
dec
push
push
add
xor
je
popa
mov
sahf
push
jne
xor
adc
jl
rcl
stos
push
enter
pop
test
inc
cmp
jl
mov
xchg
repnz
push
aaa
mov
clc
inc
xor
outs
fs
outs
push
ins
mov
cmp
std
xor
inc
addr16
push
mov
stos
jbe
cmp
jbe
jle
mov
jbe
dec
cmp
inc
xchg
outs
pop
xor
inc
(bad)
cld
outs
jb
push
into
dec
inc
push
inc
push
dec
xor
mov
push
pop
pop
jae
mov
ret
dec
mov
adc
xor
aaa
adc
xor
ins
pusha
std
push
mov
push
addr16
imul
popa
inc
dec
xor
loop
xor
es
push
test
add
js
cmps
push
sar
sahf
push
jbe
push
cmp
xor
jb
inc
jns
dec
or
ins
pop
ja
fisub
push
push
pusha
imul
mov
into
div
jo
scas
push
mov
ins
mov
arpl
inc
xor
cmps
hlt
scas
and
ins
push
jns
jns
dec
push
mov
sub
sub
jns
mov
inc
or
in
hlt
fwait
mov
pop
xor
xor
stos
std
push
push
xchg
dec
push
outs
xor
mov
adc
dec
aaa
sbb
jbe
push
dec
inc
sahf
pop
push
jo
xchg
xor
xor
sub
arpl
dec
inc
dec
push
std
pop
lods
adc
data16
xor
jne
jne
mov
enter
push
sar
push
xchg
inc
(bad)
mov
xor
dec
push
arpl
inc
inc
jne
jo
fadd
das
cli
pop
pop
or
dec
gs
jp
push
data16
or
sbb
cmp
push
gs
pop
bound
jp
xor
lock
jbe
xor
push
dec
loope
push
xor
dec
imul
or
push
add
xor
push
jmp
dec
xor
push
jp
rol
imul
ins
outs
push
div
mov
popa
xor
ins
popa
xor
out
and
push
push
mov
outs
xor
ret
popf
add
outs
pop
dec
ss
dec
xor
push
ins
push
push
je
cmp
inc
xchg
jns
push
adc
imul
dec
inc
sbb
fmul
pop
push
loopne
adc
je
rcr
push
cmp
mov
fs
in
ja
push
inc
js
mov
push
dec
push
addr16
dec
loope
mov
cs
dec
inc
cwde
popa
jne
lods
push
stos
pop
push
dec
dec
mov
push
xor
repnz
adc
push
ja
jo
xor
sahf
jb
dec
ds
xor
shr
gs
or
inc
jb
jp
arpl
test
inc
pop
dec
loopne
ins
push
push
popa
xor
dec
push
push
jp
xchg
test
dec
ss
gs
push
mov
push
gs
push
cmc
mov
into
cld
dec
jp
arpl
outs
ins
cmp
sub
cmps
outs
push
(bad)
jb
jne
adc
jns
ins
jmp
dec
inc
jb
popa
loopne
gs
jbe
pop
mov
imul
jp
pop
sbb
aaa
push
je
fwait
retf
push
outs
bound
push
mov
sub
pop
xor
xor
inc
movs
sbb
in
jo
push
inc
ss
jp
dec
(bad)
pop
outs
push
arpl
pusha
mov
add
push
mov
hlt
cld
push
jecxz
stos
add
outs
retf
ret
or
jno
popa
gs
popa
xor
jle
jp
addr16
dec
xor
inc
mov
xor
cli
outs
mov
add
push
push
jbe
dec
cdq
mov
xor
add
inc
gs
push
js
jns
xchg
push
push
push
arpl
js
jno
pop
jno
dec
fwait
push
jne
nop
dec
dec
je
adc
xchg
pop
jbe
inc
jne
rcr
dec
xor
lods
pop
loopne
fwait
mov
popa
ss
dec
fs
inc
push
push
aam
xor
pop
bound
shl
dec
sbb
jmp
jo
arpl
stos
add
dec
dec
ins
ins
cmp
jb
call
push
push
or
rol
out
sub
and
xor
out
clc
dec
push
xor
pop
cs
xchg
imul
inc
adc
gs
mov
push
xor
pop
and
xor
inc
jae
push
pop
les
pop
lock
mov
cld
or
nop
pushf
retf
js
imul
push
add
jp
inc
fwait
add
dec
jns
shl
arpl
retf
ja
jo
movs
fwait
push
or
fs
jbe
enterw
push
nop
pushf
jmp
jbe
imul
imul
dec
dec
xor
adc
mov
ins
ja
or
cwde
test
dec
push
je
push
xor
xor
ins
inc
push
push
push
push
push
je
push
jp
mov
(bad)
xor
xor
sub
ins
out
ins
rol
mov
push
dec
mov
jne
stos
fisttp
pusha
addr16
jp
inc
and
test
adc
dec
icebp
push
sbb
ins
dec
mov
dec
jne
xor
scas
lea
es
arpl
data16
jb
call
dec
push
rcl
(bad)
xor
push
in
fst
push
mov
cmp
pusha
push
inc
add
test
ret
inc
and
imul
test
xor
imul
inc
gs
adc
dec
cmp
jmp
inc
xor
push
scas
call
rcr
xchg
ins
mov
aaa
cwde
push
es
push
je
xor
push
sbb
cmp
push
push
mov
xor
push
mov
inc
inc
bound
xor
jbe
cmp
adc
inc
push
xor
push
cmp
addr16
push
push
jo
and
fcom
sbb
dec
pop
mov
loopne
ja
bound
dec
push
push
test
xor
push
push
dec
inc
daa
add
dec
xor
inc
add
inc
out
jmp
dec
or
pop
and
je
popf
mov
cs
outs
lock
sub
fidiv
xor
ins
add
pusha
cli
jo
in
mov
fdiv
jge
push
aad
push
bound
fs
inc
dec
js
mov
js
dec
sub
or
dec
xchg
adc
add
adc
mov
pop
js
dec
mov
imul
xor
push
outs
pop
popa
dec
cmp
push
mov
push
mov
or
xchg
icebp
add
jno
ins
push
not
ins
add
push
fdiv
sbb
jns
inc
jp
or
sbb
jbe
bound
fs
test
aad
jmp
xor
lds
and
data16
jne
dec
dec
cmp
inc
jb
push
aam
outs
dec
(bad)
sbb
jb
cli
outs
imul
dec
ss
ss
dec
jno
stos
(bad)
push
mov
imul
and
enter
dec
fs
repnz
pop
push
add
inc
inc
into
dec
push
xor
dec
fimul
inc
in
loopne
push
inc
test
jp
ins
data16
inc
dec
dec
fiadd
mov
xor
dec
inc
inc
xchg
das
inc
sub
jno
sub
cmp
ins
jne
imul
loopne
imul
inc
call
jns
inc
pop
jae
dec
add
xor
xchg
xor
jo
xchg
dec
xchg
ret
inc
push
dec
bound
push
inc
fcomip
scas
int3
dec
push
push
jno
arpl
push
inc
data16
rol
push
push
push
daa
add
data16
cmovae
pop
push
jb
push
pop
sbb
out
xor
pop
mov
push
sub
mov
cs
dec
imul
inc
loop
dec
ja
xor
inc
push
push
pop
inc
xchg
bound
outs
dec
dec
jmp
pop
aam
dec
cmp
pop
push
adc
dec
je
int3
dec
push
and
add
les
inc
icebp
mov
inc
cmp
dec
dec
shl
jbe
xor
movs
ss
popa
xchg
imul
push
inc
test
pop
ins
(bad)
pop
xor
push
or
je
push
movs
sbb
push
push
mov
push
bound
jno
bound
push
sub
ss
pop
cmp
mov
inc
sbb
jae
dec
dec
push
jbe
push
or
pop
and
dec
call
push
inc
dec
cmp
je
popa
sbb
and
adc
dec
lods
lock
loopne
je
jo
push
es
jns
pop
in
push
push
inc
dec
mov
pop
push
push
push
imul
ins
shl
inc
dec
shl
imul
fiadd
jne
dec
arpl
dec
xor
aam
scas
clc
adc
inc
xor
inc
dec
imul
imul
mov
jbe
inc
cmp
pop
mov
cmp
xor
pop
push
aad
jo
jns
dec
jp
jle
loopne
int3
pop
push
fs
gs
dec
jne
data16
nop
dec
loopne
rcl
or
mov
dec
or
jno
jno
into
jae
test
xor
xor
test
pop
ret
add
ins
addr16
ret
jbe
ins
ins
xor
push
xor
retf
inc
in
and
xor
push
jp
gs
cmp
mov
cmp
jo
jp
push
jp
xor
add
push
lods
inc
dec
rcl
and
pop
dec
(bad)
inc
jbe
dec
in
sub
and
mov
fld
push
and
dec
rcl
adc
imul
into
push
dec
out
fild
xor
popa
cwde
inc
imul
dec
aaa
push
cdq
jle
in
adc
inc
gs
xor
mov
retf
xor
dec
jo
sbb
je
jne
enter
je
xor
or
aam
push
test
(bad)
cmc
sbb
xor
je
movs
inc
inc
jb
jne
pop
push
inc
xor
cmp
pusha
adc
scas
add
xor
je
aaa
jp
dec
jl
mov
out
ss
push
dec
push
dec
cmp
cmps
outs
fdiv
add
push
ss
inc
inc
fs
sub
push
jae
jae
pushf
sbb
mov
bound
mov
sbb
ja
mov
dec
jmp
stos
sub
les
push
inc
push
ja
jle
ja
inc
xor
pop
cmp
push
inc
jecxz
aaa
push
xor
popa
jbe
shl
dec
mov
jno
xor
xor
sub
push
sub
dec
jne
imul
xor
inc
push
(bad)
in
xchg
ja
push
mov
cmp
dec
outs
inc
xor
fisubr
lods
call
jo
push
or
pop
hlt
ret
jle
mov
dec
enter
sub
jb
push
cmp
mov
xchg
adc
ins
mov
and
dec
ss
push
push
add
ss
dec
inc
mov
and
retf
jg
push
jae
push
cmp
ss
inc
push
inc
cmps
push
cmp
icebp
add
gs
es
ja
push
arpl
push
jno
fs
jno
or
and
xor
loopne
pop
or
dec
bound
arpl
je
adc
mov
dec
jle
ins
push
mov
dec
or
aaa
mov
arpl
cs
pop
data16
push
sbb
jns
inc
push
or
mov
pop
pop
push
das
pop
xchg
inc
popa
imul
retf
xor
add
push
mov
fs
mov
xor
lods
adc
mov
ss
xor
pop
imul
stos
adc
inc
adc
push
pop
sub
jno
outs
xor
push
add
pop
imul
push
sbb
push
jo
mov
adc
fs
outs
xor
dec
ins
aaa
jns
add
push
(bad)
out
mov
dec
jae
dec
dec
fs
adc
dec
xor
push
adc
inc
cmp
push
dec
data16
js
inc
inc
jb
inc
ret
xchg
sbb
scas
push
mov
outs
xchg
aam
bound
sbb
fcmovu
inc
cwde
fsubr
ja
outs
jns
add
and
xchg
mov
xor
ss
into
in
mov
inc
outs
ss
or
test
jbe
xchg
add
pop
jp
mov
and
arpl
xor
pop
lods
or
imul
inc
push
imul
add
inc
cmp
pusha
inc
pop
cmc
add
xor
sub
or
outs
cs
dec
add
sbb
xor
sub
adc
idiv
inc
mov
push
aad
cmp
jae
jp
imul
pop
inc
inc
ins
push
and
dec
addr16
in
xor
imul
sbb
rol
adc
push
clc
dec
pop
push
int3
jno
ins
cwde
mov
dec
xor
cli
outs
js
push
adc
imul
inc
mov
scas
sub
imul
xor
arpl
dec
rcl
xor
sub
dec
out
test
mov
shl
dec
inc
inc
xor
ss
sbb
ins
jbe
scas
pop
je
inc
inc
ret
das
movs
stos
pop
ja
push
xor
dec
push
jo
mov
xor
dec
jns
dec
dec
push
imul
js
cmp
dec
das
test
mov
push
hlt
imul
add
sbb
pop
dec
call
push
cmp
pop
push
mov
imul
imul
ret
scas
in
aaa
inc
jae
xor
and
push
sbb
aam
into
push
outs
loopne
cmp
outs
imul
ror
inc
jae
push
inc
and
cmp
inc
ja
dec
les
bound
lods
mov
addr16
dec
inc
inc
xor
popa
cmp
jb
fld
pop
dec
in
js
and
jb
sbb
cmp
pop
sub
mov
push
popa
mov
add
cmp
jae
mov
loopne
lods
jno
inc
dec
fwait
sbb
xor
jae
push
jae
clc
push
jne
add
sub
fidiv
push
dec
test
pop
rcr
pop
or
mov
pop
inc
inc
je
ins
jae
jno
jbe
pushf
ins
push
fs
xchg
ror
or
icebp
push
cmps
jp
imul
push
mov
xchg
mov
imul
inc
stos
inc
(bad)
dec
dec
dec
xor
push
dec
pop
sub
add
arpl
cmps
aaa
mov
pop
adc
fs
xor
jae
xor
cdq
movs
stos
mov
push
(bad)
hlt
inc
mov
or
dec
imul
mov
push
dec
xchg
xor
xor
mov
ret
inc
push
mov
imul
add
push
arpl
add
push
push
sti
mov
cmps
ins
ins
cs
push
add
fadd
movs
push
xor
adc
dec
mov
add
pop
pop
xor
inc
jp
jns
ins
xchg
pusha
inc
test
aaa
dec
ss
push
sbb
cmp
cmp
mov
cmp
ret
xor
test
push
out
sub
jmp
ds
dec
dec
dec
inc
outs
imul
inc
test
jne
ins
push
jns
jae
inc
stos
and
popa
fisub
shr
inc
inc
jo
sbb
jae
ss
loop
jg
xor
push
dec
inc
push
popa
jbe
or
inc
clc
jne
cmp
and
les
sub
aam
push
shl
jl
inc
arpl
jbe
jno
sbb
push
xchg
mov
push
(bad)
xor
mov
popa
ret
jmp
imul
push
ss
push
jns
stos
or
jne
popf
adc
push
cwde
sahf
jo
pop
aaa
push
push
je
imul
and
aad
dec
imul
ja
xchg
aaa
add
xor
inc
outs
ss
outs
or
sub
in
or
fist
push
push
gs
(bad)
(bad)
and
inc
mov
call
mov
and
dec
pop
shl
jo
jns
xor
imul
(bad)
bound
pop
loopne
push
push
xor
push
ins
push
fs
adc
(bad)
dec
push
mov
cmp
add
dec
addr16
shr
test
sub
outs
or
sub
jns
sub
outs
push
inc
push
dec
jno
inc
inc
popa
jne
call
int3
xor
retf
push
jo
mov
sbb
imul
ins
xchg
jo
push
adc
hlt
or
imul
cmp
jae
inc
push
or
rol
dec
mov
out
xchg
mov
xor
xor
add
cmps
bound
xor
inc
sahf
shl
fs
popa
inc
adc
shr
stos
inc
xor
dec
ret
jo
xor
dec
push
xor
push
jo
(bad)
cld
pop
js
enter
push
jmp
mov
mov
stos
push
mov
jo
ins
cld
das
adc
gs
inc
dec
popa
ins
arpl
cmp
xor
cmp
(bad)
outs
mov
gs
pusha
xor
push
dec
inc
pusha
push
xor
pusha
mov
rcr
dec
push
ss
inc
inc
xor
icebp
mov
fisubr
jp
and
pop
popa
enter
xchg
ret
cld
push
frstor
(bad)
cmp
pop
ror
sub
test
dec
cmp
popf
pop
fs
stos
fmul
dec
push
das
inc
je
xor
mov
mov
popa
aaa
push
ret
push
bound
ins
pop
popa
dec
outs
cmp
jge
add
dec
push
inc
sub
ins
ins
pop
jp
mov
jns
aaa
xor
inc
jmp
popa
je
cmp
gs
inc
bound
xchg
test
jl
pop
dec
push
dec
push
jne
mov
and
add
mov
je
out
or
inc
cmps
mov
ss
xor
dec
mov
xor
push
retf
inc
push
push
adc
outs
mov
adc
mov
jns
xor
ss
imul
xchg
sbb
dec
js
inc
xor
sub
push
inc
jle
data16
imul
scas
pop
dec
hlt
dec
stos
pop
loopne
call
xor
scas
cmps
jp
adc
retf
xor
jp
shr
sbb
and
bound
or
adc
stos
scas
mov
ss
inc
push
mov
ret
dec
cmp
js
jp
xlat
or
adc
inc
inc
dec
sub
and
xor
aam
push
mov
shl
push
jne
pushf
jmp
mov
push
inc
loop
xor
addr16
cmp
sub
jae
xor
loopne
ja
movs
inc
push
clc
jns
xchg
xor
push
outs
cmp
xor
sbb
stos
mov
imul
jno
xor
outs
push
push
cmp
dec
jae
inc
sub
push
dec
aam
lods
clc
fcom
pop
xor
je
shl
and
adc
dec
xor
dec
fs
(bad)
imul
add
and
or
je
or
ss
push
jb
cmp
xor
xor
mov
xor
push
inc
sub
xor
mov
ins
les
push
dec
or
dec
inc
cmp
pop
dec
imul
cmps
or
push
push
inc
push
dec
pop
inc
add
pop
gs
jne
pop
popa
push
xor
arpl
arpl
pop
ret
imul
retf
stos
xchg
inc
xor
retf
gs
push
xor
pop
mov
xor
push
xor
or
push
ins
shr
and
shl
dec
push
inc
mov
dec
pop
inc
ins
xor
outs
call
std
pop
imul
jp
xor
jae
push
push
fs
hlt
in
add
jb
mov
jb
xor
push
push
pop
and
sahf
jb
ror
inc
add
inc
test
inc
xlat
cmp
mov
sub
xchg
xor
ins
adc
mov
aaa
or
push
xor
dec
pop
ss
dec
dec
loopne
fisub
push
dec
mov
inc
or
push
fs
xor
out
jb
push
sar
test
xor
xor
cmp
mov
inc
addr16
inc
jns
dec
jbe
bound
jbe
scas
jae
inc
fs
push
xchg
or
inc
ins
cmp
inc
xchg
cmps
jp
js
xchg
je
cwde
push
aaa
dec
dec
jp
and
inc
imul
inc
inc
cli
retf
jo
cmp
or
bound
sar
cli
push
push
adc
jb
rol
pusha
inc
push
push
and
jne
fisub
ret
xor
cld
ja
test
arpl
dec
push
xor
test
inc
lock
inc
addr16
push
imul
inc
inc
push
pop
fidiv
inc
fs
push
inc
mov
or
inc
dec
test
dec
dec
sbb
pushf
add
imul
(bad)
out
and
ss
xor
pop
nop
dec
sar
jo
dec
push
bound
dec
push
dec
outs
inc
xor
jp
outs
mov
sbb
test
pushf
addr16
imul
(bad)
popa
dec
inc
push
arpl
push
push
dec
popa
pop
inc
(bad)
popa
push
cwde
inc
and
outs
xor
gs
pushf
int3
push
addr16
push
ja
adc
pop
imul
cmp
pop
add
cmp
clc
es
xchg
push
bound
jae
push
dec
dec
push
mov
int3
pop
inc
jbe
jbe
jo
test
jp
(bad)
fidiv
ret
mov
add
ss
cmp
xchg
pushf
push
bound
jbe
push
xor
push
pop
cmp
shl
call
jl
or
dec
inc
dec
pop
add
ins
test
mov
nop
jne
xor
cmps
mov
xchg
inc
pusha
sbb
aaa
inc
dec
dec
je
scas
popa
xchg
jmp
fdivr
xor
add
adc
inc
js
fidiv
shl
dec
adc
cmps
out
js
cmp
outs
mov
(bad)
data16
push
popa
pop
xor
push
jns
movs
push
add
jbe
pop
mov
pop
add
mov
push
dec
push
push
push
int3
xchg
jmp
es
bound
add
push
je
pushf
mov
pop
test
sbb
ja
imul
pop
push
sub
sbb
jae
imul
fld
mov
(bad)
in
lods
out
popf
(bad)
sub
arpl
ja
xchg
das
retf
sbb
push
call
das
dec
mov
rcl
lock
push
retf
inc
add
mov
das
adc
scas
or
jns
lods
xor
ss
inc
ja
cmp
ret
jno
push
push
jbe
dec
ja
xlat
or
ss
jo
jp
push
mov
push
inc
mov
inc
xor
cmp
dec
push
add
ins
mov
aad
call
mov
xchg
dec
mov
and
inc
mov
test
xor
push
jns
scas
xchg
pusha
es
sub
push
xor
bound
inc
push
dec
push
mov
cld
pop
mov
sub
sub
dec
jne
pop
or
jle
xor
xor
push
jns
jns
mov
push
mov
dec
jns
push
dec
cmp
and
pusha
fisub
pop
dec
data16
inc
imul
inc
outs
xor
retf
imul
hlt
in
mov
xor
cli
add
inc
push
call
inc
sbb
daa
xor
jb
mov
pop
xor
dec
loopne
je
mov
mov
pop
das
fidiv
jp
outs
loopne
outs
add
xor
push
push
cwde
lods
out
hlt
ret
cs
ins
pusha
dec
pop
dec
inc
inc
dec
into
pop
sbb
(bad)
inc
pop
ins
xor
xor
push
or
dec
fmul
inc
xor
push
dec
jno
or
cmp
cmp
mov
jne
ins
push
outs
dec
inc
shl
sar
jae
push
xor
xor
test
sub
dec
outs
inc
sbb
or
and
std
inc
pop
je
dec
inc
(bad)
cmc
aaa
dec
fsubr
ss
into
inc
push
outs
pop
sub
xchg
scas
dec
push
inc
jns
pop
push
dec
xor
push
sub
data16
push
je
inc
rcr
loope
fs
xor
inc
pop
imul
jle
push
outs
imul
push
pop
bound
stos
mov
push
jne
push
push
inc
sub
gs
addr16
inc
xor
je
push
stos
jmp
adc
ss
rcl
mov
jb
bound
push
or
push
outs
add
xor
jb
dec
jo
or
push
gs
cli
sbb
js
out
jp
inc
inc
dec
inc
jns
bound
or
xor
outs
add
add
dec
outs
cmp
cmp
inc
or
cmp
push
add
dec
pop
push
les
les
dec
jb
sub
std
push
outs
ss
jb
test
jno
push
outs
pop
out
push
inc
outs
xor
dec
fs
jne
test
in
test
ja
ss
mov
outs
jb
push
ins
arpl
push
xor
cmp
sub
mov
inc
cmp
push
pop
fs
adc
arpl
inc
inc
jne
movs
adc
push
adc
add
outs
pushf
dec
add
jbe
dec
dec
ja
imul
cld
inc
jp
inc
dec
fs
ss
add
mov
jno
mul
inc
popa
xor
push
aaa
in
sub
sbb
xor
jp
retf
inc
(bad)
data16
push
pop
les
xor
es
mov
xor
test
test
push
dec
outs
addr16
push
xor
(bad)
xor
outs
push
dec
dec
sub
lods
mov
push
cmp
imul
inc
xchg
xor
jbe
je
and
arpl
in
js
push
jp
sbb
je
push
retf
test
dec
push
jae
dec
ins
ins
dec
pop
inc
adc
data16
xor
mov
outs
fisubr
imul
mov
sbb
push
fs
inc
push
imul
dec
dec
xor
cmc
dec
dec
loope
jbe
out
aaa
jb
dec
outs
xor
js
jmp
push
mov
mov
js
push
fidiv
xor
stos
sbb
dec
xor
push
rol
dec
mov
jo
push
push
inc
mov
inc
push
ins
loopne
add
push
push
dec
push
jns
cmp
call
inc
test
adc
jg
xor
push
push
push
jb
repnz
xchg
xor
cmp
dec
jp
jno
push
sbb
push
dec
mov
imul
pop
inc
mov
ja
inc
inc
dec
jge
scas
test
pop
inc
dec
jae
ins
pop
(bad)
call
(bad)
push
push
(bad)
pop
xor
add
inc
or
data16
push
mov
cmp
imul
scas
push
or
fidivr
inc
jb
ja
mov
ins
mov
jno
add
jbe
aaa
inc
jnp
cmp
jbe
push
jbe
dec
jne
xor
and
xor
clc
ss
push
push
push
sub
push
push
cwde
pushf
push
and
ror
cmps
movs
sbb
xor
add
mov
push
pop
jbe
dec
xor
mov
dec
int3
ja
xor
popa
xor
push
xchg
jmp
lods
push
cwde
jo
inc
ins
jbe
hlt
imul
xor
bound
cmp
inc
dec
sbb
pop
inc
movs
cs
or
dec
data16
pop
gs
xchg
push
popa
cmp
inc
outs
fmul
fs
es
lock
lock
sbb
arpl
aaa
ins
push
mov
cmp
je
xor
imul
xchg
ds
(bad)
fidiv
fdiv
stos
and
imul
or
xor
jns
dec
jns
inc
ins
inc
out
mov
add
push
xor
jns
nop
outs
adc
loope
dec
outs
push
aam
xchg
adc
lods
loope
cld
xor
pop
inc
push
fs
cmp
ja
(bad)
jg
mov
dec
xor
arpl
push
jae
and
cmps
dec
cmp
(bad)
ins
xor
add
jle
jbe
mov
sbb
mov
stos
movs
pusha
adc
inc
fwait
adc
push
dec
inc
repnz
inc
inc
or
xchg
dec
dec
sbb
mov
xchg
inc
sub
adc
scas
dec
xchg
addr16
cs
fs
imul
pop
lods
mov
adc
push
jl
sbb
bound
mov
aaa
cmc
aaa
daa
xor
sbb
dec
inc
dec
ss
sbb
call
aaa
sbb
xor
nop
push
js
ret
add
push
dec
nop
xor
sbb
push
test
push
pusha
xchg
neg
cmp
je
cwde
sub
ins
inc
test
fsubp
cmp
jb
sub
jo
ins
jne
push
push
aaa
or
shr
nop
mov
aaa
pop
dec
lods
adc
dec
push
mov
mov
and
pop
dec
ins
push
test
inc
adc
jne
bound
sub
inc
dec
push
sbb
pop
push
cld
and
gs
push
cmp
dec
(bad)
inc
inc
push
or
inc
pop
cmp
aaa
out
popa
dec
aaa
jbe
inc
push
xor
jo
jbe
push
sub
fs
pop
mov
sbb
test
jns
adc
pop
jns
jne
fdivr
cmp
cmp
add
and
jle
out
inc
ins
xor
adc
mov
ja
and
es
out
jo
push
pop
dec
jno
or
popa
dec
push
shl
inc
imul
pop
inc
xor
stos
inc
repnz
push
jno
cmps
mov
addr16
popa
xor
out
and
inc
test
dec
jb
jp
push
shr
fs
outs
xor
and
add
cs
push
jne
dec
xor
cmc
lea
push
push
jb
ins
push
ja
sub
cmp
imul
push
loopne
dec
jb
bound
and
adc
mov
adc
dec
fmul
fiadd
dec
jb
xor
imul
inc
xchg
xchg
cmp
bound
sbb
clc
in
lods
mov
je
aaa
dec
mov
push
xor
xor
ins
mov
shl
fmul
or
xor
push
cwde
xor
imul
jecxz
xor
popa
jne
xor
mov
add
cmp
aad
loopne
push
cmps
cmp
shl
add
retf
pusha
sbb
jbe
jae
sbb
sbb
scas
dec
jo
sbb
push
js
pop
ss
mov
push
cmp
les
jl
jbe
aam
je
add
sub
xchg
jmp
cmp
jbe
jns
sbb
xor
gs
pop
aam
sbb
fsub
push
push
ins
xor
test
push
inc
inc
dec
dec
push
cli
(bad)
push
push
(bad)
aaa
sub
ss
dec
jne
aam
cld
ins
inc
jae
dec
je
ins
pop
push
push
pop
ins
out
push
mov
inc
push
je
test
ins
cmp
ret
dec
xor
push
push
fld
call
test
dec
test
push
arpl
stos
cmp
mov
fdiv
ja
call
addr16
imul
mov
aaa
jne
push
jne
jl
dec
sub
xchg
add
push
pushf
inc
pop
test
xor
mov
fbld
shl
pop
je
add
fs
jbe
mov
dec
inc
push
inc
je
fs
inc
bound
ins
xor
push
ret
sahf
mov
outs
push
jb
test
stos
dec
ss
or
and
dec
(bad)
(bad)
push
inc
xor
push
ja
jo
outs
addr16
movs
ficom
in
add
(bad)
call
cmc
test
js
arpl
fs
push
inc
xor
adc
xchg
scas
push
xor
add
pop
xor
gs
cmp
out
inc
sub
xor
push
push
xor
rcl
ins
push
mov
sahf
aaa
adc
pop
xor
mov
adc
imul
loope
adc
dec
push
outs
dec
dec
and
inc
push
jae
cwde
dec
xor
mov
dec
inc
dec
bound
push
add
imul
jl
pop
fbld
pop
imul
popa
inc
adc
aad
cmp
ins
push
lods
mov
hlt
xor
addr16
adc
adc
jp
pusha
mov
dec
cmp
in
add
cwde
xor
je
jb
cmp
or
dec
mov
outs
nop
dec
xor
push
pop
loop
mov
in
push
addr16
dec
pop
push
dec
mov
push
push
jno
ja
push
mov
jbe
stos
fs
clc
outs
add
outs
fs
jns
je
push
gs
mov
sbb
push
mov
shl
and
push
dec
addr16
adc
adc
xor
mov
rcl
gs
push
ret
outs
jge
and
hlt
dec
imul
das
nop
scas
mov
js
inc
arpl
dec
data16
mov
mov
(bad)
mov
dec
inc
xor
js
jo
sbb
and
push
adc
jae
dec
mov
add
xor
jb
pop
mov
mov
mov
xor
adc
xor
in
test
inc
ins
push
cmp
and
add
xor
ficom
ins
cs
les
push
inc
dec
inc
push
int3
push
push
sub
adc
xor
inc
jp
sub
fcmovbe
add
sub
xor
xor
xor
xchg
pop
inc
bound
outs
inc
mov
movs
aad
push
data16
push
push
pusha
jno
or
dec
addr16
cli
sub
jae
nop
mov
repz
dec
outs
data16
jo
dec
imul
push
outs
adc
imul
ret
cmp
rol
ret
shl
push
mov
call
or
xlat
mov
push
push
push
cmp
dec
addr16
cs
mov
data16
ins
outs
inc
push
movs
and
push
cmp
fs
enter
ins
icebp
add
out
adc
pop
mov
cmp
jp
push
xchg
inc
xor
mov
sbb
ss
clc
jl
cmp
xchg
xor
aaa
push
pop
xor
push
pusha
xchg
push
shl
jle
ficom
or
push
jns
xor
inc
inc
stos
int3
jne
ins
xor
push
dec
stos
sbb
jp
push
mov
jo
js
xchg
into
fs
aam
loopne
jmp
mov
ins
jb
ja
push
jp
push
outs
cmp
hlt
and
inc
ja
push
dec
and
or
inc
or
inc
jo
jns
jo
adc
adc
dec
imul
scas
xchg
retf
push
imul
scas
cmps
je
je
push
pop
repnz
shl
adc
push
cmp
or
mov
xor
lods
cmp
push
stos
push
js
xor
sbb
mov
push
adc
xchg
xor
pop
push
dec
push
jmp
js
call
add
pop
ror
hlt
jb
or
xor
arpl
pop
push
jb
push
or
mov
jp
push
cmp
xchg
sub
push
imul
mov
pop
xchg
cld
dec
dec
jbe
mov
xor
xor
push
add
jp
jb
fld
adc
inc
nop
dec
je
nop
test
add
and
xor
xchg
fs
in
test
call
jne
inc
inc
inc
jp
jo
push
xor
js
add
in
addr16
enter
pop
cmps
inc
push
ss
jb
add
mov
cmp
push
ret
dec
pop
arpl
imul
dec
push
or
mov
sbb
inc
cmp
pop
mov
dec
push
fadd
mov
inc
dec
add
fiadd
lock
mov
jno
inc
stos
aam
xchg
mov
ja
xor
js
pushf
jb
ins
and
dec
push
inc
push
xchg
xor
jb
and
sub
call
adc
push
mov
call
outs
add
aaa
cmp
mov
sub
cs
mov
hlt
(bad)
push
xchg
test
mov
xor
dec
enter
in
push
or
cmps
jo
aaa
addr16
jo
dec
jae
mov
dec
mov
push
ror
icebp
mov
ins
inc
dec
cmp
push
sub
push
jb
push
jo
jmp
jae
js
popa
xchg
outs
push
or
ins
aaa
in
into
scas
dec
push
or
jecxz
push
jb
dec
ss
inc
mov
add
aaa
dec
dec
mov
dec
inc
add
(bad)
pop
jns
outs
js
pop
push
dec
in
push
ret
add
jp
pop
mov
add
or
jo
or
xor
jb
outs
pusha
xchg
js
or
pusha
jle
sbb
inc
mov
xor
ss
mov
shl
outs
jae
inc
push
dec
inc
imul
or
int3
(bad)
dec
mov
retf
ret
jo
push
xchg
add
cmps
jae
ss
stos
ror
jo
jne
dec
jae
push
pop
gs
or
retf
xchg
fadd
push
xor
mov
dec
mov
(bad)
int
jbe
dec
int3
adc
xchg
aam
aaa
js
push
inc
xor
shr
inc
pop
mov
sub
inc
arpl
xor
pop
or
dec
cli
push
push
dec
push
mov
add
lea
mul
imul
or
push
xor
xchg
xchg
push
js
add
ss
jb
scas
test
test
inc
push
xor
cmp
jo
inc
xor
cmps
push
push
push
dec
xchg
imul
test
pop
dec
adc
sbb
das
cmp
dec
inc
inc
out
mov
mov
jns
imul
xor
ins
(bad)
or
inc
inc
ins
add
mov
dec
push
inc
sub
rol
fisttp
dec
(bad)
jle
push
aad
rcl
cwde
bound
fs
push
inc
cs
js
pop
dec
aam
push
dec
imul
outs
jo
ret
xor
push
pusha
shl
or
mov
jb
mov
pop
jb
cmp
das
pop
lock
pop
push
push
outs
cmp
xor
add
push
js
dec
cmp
jo
call
aaa
xor
or
outs
inc
pop
jo
inc
mov
aaa
push
cmp
jae
loop
rol
push
js
dec
mov
loopne
xor
push
bound
clc
dec
shl
add
push
xor
outs
or
inc
inc
arpl
outs
clc
je
cmp
mov
popa
outs
xor
cmp
push
int3
outs
jmp
push
add
mov
bound
pop
aaa
inc
inc
jle
dec
test
add
push
ins
inc
cmp
cmp
sbb
and
adc
push
push
dec
push
fs
jg
(bad)
fs
cs
inc
dec
push
inc
adc
pusha
xor
inc
stos
jo
mov
mov
add
push
dec
test
mov
mov
xor
jp
pop
cmp
sub
jl
ins
pop
ins
xchg
sbb
ins
jns
pop
pop
sgdtd
jl
sub
add
shr
test
(bad)
push
or
push
fimul
aaa
jl
inc
imul
arpl
xor
xor
jb
jae
adc
add
mov
ss
jb
push
ins
pop
hlt
add
push
imul
mov
or
hlt
jo
js
fdiv
xor
xor
xor
pop
push
push
dec
push
movs
add
pop
xor
aaa
mov
cmp
inc
xor
in
cmps
or
xchg
mov
outs
inc
aam
push
inc
pop
in
jo
rol
outs
cli
push
ins
sub
outs
xor
dec
ins
outs
jae
jne
sub
je
push
cmps
mov
gs
ror
push
dec
shl
push
jo
jae
ret
or
push
test
shl
push
jle
add
pop
xor
imul
inc
inc
scas
mov
dec
push
dec
push
inc
dec
adc
cmp
push
clc
sbb
inc
aaa
pop
mov
inc
dec
popa
inc
push
ror
xor
add
inc
ja
xchg
test
loopne
ss
xor
movs
lea
inc
mov
fsub
jno
sbb
add
dec
xor
cmps
movs
aaa
inc
aaa
xchg
bound
cmp
jno
mov
aad
pop
hlt
inc
inc
pop
push
sub
add
mov
inc
test
fs
ins
sahf
cwde
loop
push
outs
imul
mov
push
push
jbe
loope
loop
ss
or
sub
cmp
das
ja
cs
out
gs
das
jae
test
jno
jg
sbb
adc
add
ror
mov
ja
inc
icebp
mov
push
cli
sahf
add
clc
push
sub
xor
dec
dec
push
add
xor
jbe
dec
pushf
mov
xchg
dec
jp
push
pop
jp
mov
data16
outs
push
arpl
lock
push
into
pop
inc
dec
inc
sub
jno
xor
nop
jns
popa
jg
push
int
ret
xchg
scas
sbb
ror
and
xor
mov
dec
dec
cld
ja
dec
push
or
shl
popa
rol
data16
lock
jge
ss
jp
outs
jbe
fimul
and
rcl
xchg
jo
xchg
xchg
or
dec
jo
push
add
dec
jo
jae
inc
push
mov
jne
dec
jns
and
addr16
adc
jb
pusha
dec
adc
stos
ins
push
(bad)
movs
ja
outs
dec
addr16
mov
ret
je
retf
ret
sbb
dec
jno
xor
ins
push
dec
ficom
inc
loope
call
outs
enter
xor
jns
gs
mov
and
popa
fs
push
(bad)
fs
pop
outs
pop
rol
call
push
and
jne
push
inc
cmp
fs
add
retf
popa
push
adc
push
dec
pop
fiadd
push
push
or
push
test
dec
jb
push
ja
mov
call
bound
and
sbb
call
ret
arpl
and
xor
xor
outs
add
adc
outs
xor
push
jb
mov
jb
push
cwde
inc
arpl
push
push
bound
mov
test
xor
jbe
push
push
repnz
inc
push
js
test
add
inc
inc
cmp
fs
xchg
push
shl
dec
mov
inc
jno
mov
dec
xchg
inc
aam
loopne
push
popa
mov
stos
add
push
(bad)
je
loopne
xchg
movs
sbb
add
add
dec
fsub
push
ins
push
dec
cs
inc
sbb
mov
enter
ja
imul
cmp
add
jno
dec
pop
pop
push
inc
shl
jne
add
xor
call
dec
inc
cmp
push
dec
pop
pop
sub
mov
pop
inc
clc
push
arpl
dec
shl
cld
push
inc
jl
ss
sbb
or
cmp
ja
push
mov
push
push
sbb
xor
outs
stos
mov
inc
xor
sbb
je
loope
movs
test
dec
xor
outs
outs
dec
outs
inc
ins
fsub
ror
ss
push
or
add
inc
xchg
aaa
ins
push
popa
aaa
pop
add
push
adc
cmps
xor
bound
shl
bound
mov
js
adc
inc
mov
inc
in
scas
fmul
push
inc
mov
js
imul
sub
jo
push
cli
push
aam
pop
js
push
dec
inc
lock
ror
movs
add
push
inc
push
(bad)
(bad)
push
addr16
ss
dec
push
je
xor
jbe
jns
out
fsub
pop
ret
sub
cld
pop
enter
js
stos
or
mov
sahf
es
jmp
dec
inc
stos
dec
jne
mov
inc
push
adc
add
gs
dec
mov
gs
or
jb
dec
and
adc
cmp
and
js
cmp
pop
sub
jp
xor
push
outs
ja
push
xor
push
fs
push
push
mov
inc
stos
rol
dec
aam
xchg
in
dec
xor
dec
js
ins
pop
or
out
dec
sahf
cld
aaa
xor
inc
or
sahf
cmp
ret
jb
push
dec
jmp
fbld
inc
inc
jo
inc
or
inc
inc
test
aam
sbb
inc
js
mov
or
sbb
push
sbb
(bad)
jae
in
or
mov
retf
lods
test
js
xor
ss
dec
dec
inc
or
xor
push
mov
jb
pop
dec
je
jno
js
dec
sahf
lods
mov
mov
xchg
inc
pop
jp
outs
aaa
dec
adc
call
ins
stc
mov
inc
adc
adc
scas
dec
inc
jb
dec
aaa
jb
pop
cmp
jns
gs
cmp
jbe
pop
sub
sbb
jbe
xor
add
or
mov
inc
push
cmp
arpl
jo
jne
ret
and
gs
in
jb
or
xor
push
push
mov
sub
and
push
push
lods
outs
movs
dec
xor
fcomp
aam
outs
push
in
dec
xchg
inc
popa
dec
into
push
ds
les
(bad)
cmp
xchg
xor
aaa
xchg
xor
fisubr
xor
sub
xchg
jns
aad
inc
jo
arpl
js
or
or
push
dec
push
push
dec
scas
aaa
and
push
mov
and
push
dec
mov
dec
bound
pop
jne
jg
rcl
imul
inc
das
(bad)
fwait
add
data16
cmp
dec
jo
pop
jns
call
ins
jae
xor
sub
adc
popa
cmp
or
inc
mov
sub
rcl
xor
mov
movs
xor
cmps
scas
cmp
nop
push
xor
pop
jae
cmp
ins
xchg
or
sbb
nop
popa
out
addr16
pop
mov
inc
call
jo
xchg
inc
push
loopne
out
fwait
and
dec
xor
push
outs
loop
les
dec
loop
push
inc
data16
imul
adc
je
jbe
hlt
js
outs
lds
push
jae
push
jae
dec
inc
inc
dec
push
je
ret
jo
ss
fs
push
outs
push
or
jb
ins
dec
ins
inc
xchg
add
mov
loopne
aaa
push
and
popa
cmp
stos
push
push
aad
push
mov
inc
ss
xchg
aam
cmp
ss
ins
add
sbb
pop
adc
add
inc
outs
pop
jno
scas
call
fidivr
es
adc
cmp
add
inc
push
cdq
dec
pop
and
xchg
inc
hlt
xor
fcomip
gs
xor
dec
popa
and
push
and
outs
jp
and
rcl
jo
mov
push
push
jle
xor
adc
push
or
cmp
fs
push
nop
shl
adc
dec
sbb
inc
mov
mov
sub
mov
xor
ss
mov
xor
shr
dec
push
movs
pusha
adc
aaa
call
pop
push
push
or
dec
push
push
aaa
jmp
ins
ss
dec
dec
inc
ja
inc
xor
mov
inc
push
loopne
jo
dec
je
repnz
inc
xchg
pusha
dec
ret
sub
fadd
lock
xchg
sbb
inc
xor
enter
push
adc
cld
les
push
push
fs
or
xor
test
cs
loop
imul
xor
inc
outs
imul
or
inc
out
bound
xor
pop
mov
sbb
jne
arpl
fisubr
sub
adc
pop
popa
jne
mov
jne
ror
pop
pushf
imul
hlt
pop
inc
jl
ja
dec
dec
imul
add
sahf
cmp
sub
jb
cmp
(bad)
clc
scas
mov
js
popa
addr16
jmp
or
inc
inc
ret
and
dec
mov
push
xchg
inc
arpl
jbe
add
test
xor
pop
xor
push
sbb
ins
jbe
push
fmul
loopne
test
loop
in
push
xor
and
push
test
pop
popa
pop
in
les
les
(bad)
mov
and
mov
pop
xor
cmp
test
ins
cli
fs
inc
je
addr16
or
dec
mov
or
mov
js
adc
mov
nop
xor
push
arpl
popa
push
ja
shl
(bad)
xor
sub
push
movs
xor
xor
xor
loopne
imul
pop
push
test
xor
inc
aad
ds
ss
inc
jae
enter
scas
push
push
fisub
jns
adc
xor
xor
add
scas
add
pop
inc
loopne
es
inc
in
inc
add
inc
push
(bad)
pusha
jp
jbe
fisubr
cmp
sbb
cmps
jbe
jo
pusha
loop
cmp
mov
adc
sub
inc
xor
push
and
push
adc
in
push
sahf
sub
push
mov
ins
stos
clc
stos
and
xor
jno
jae
addr16
add
cmp
pop
jbe
je
push
adc
xor
jns
pushw
dec
ss
(bad)
sub
inc
sub
ja
loopne
push
ins
addr16
fbld
test
inc
xchg
inc
jp
fs
cli
jno
mov
sti
sub
jl
mov
lock
dec
push
ds
jo
dec
push
add
pop
push
inc
call
sahf
clc
(bad)
push
sub
cmp
mov
push
outs
push
dec
jne
fs
xor
rol
retf
add
xor
adc
lock
in
mov
ja
inc
ss
xor
pushw
inc
inc
mov
or
pop
or
jbe
or
ja
loope
fisub
pop
cmp
xor
dec
js
rol
xor
ss
in
enter
imul
clc
push
or
inc
mov
push
xor
ror
dec
bound
pop
push
or
xor
call
jne
imul
mov
outs
jb
inc
test
push
mov
sahf
pop
pushf
outs
push
mov
dec
cmp
cld
dec
imul
inc
jns
xor
ss
xchg
dec
dec
and
add
jb
dec
sbb
inc
imul
dec
mov
xor
aam
and
fadd
mov
cmps
out
test
add
xor
or
cmp
test
add
cmp
adc
aam
outs
movs
mov
or
push
push
fs
dec
bound
inc
in
imul
and
xor
cmps
add
add
retf
or
je
in
xchg
mov
jbe
jns
dec
jb
cli
retf
sub
xor
jo
xor
push
enter
pusha
ins
mov
stos
mov
sar
std
outs
mov
imul
addr16
push
gs
mov
jns
inc
imul
inc
mov
popa
inc
imul
dec
ss
dec
push
js
push
add
mov
cli
push
jbe
push
inc
popa
add
jmp
xor
push
outs
dec
pop
xor
or
test
cli
lods
call
gs
dec
cmp
cmps
pop
xchg
xchg
inc
fs
mov
xchg
cmps
loop
int3
bound
or
loopne
fisub
outs
or
clc
cmp
pop
push
add
push
mov
pop
adc
push
dec
pop
jno
dec
scas
add
in
pushf
add
dec
mov
adc
cmps
inc
xor
sub
or
and
dec
shl
sbb
mov
mov
jae
hlt
sbb
addr16
js
jp
bound
pop
retf
push
push
ins
mov
push
xor
es
int
inc
imul
dec
pop
(bad)
cmps
inc
push
dec
push
cli
push
nop
fs
push
aad
arpl
sbb
arpl
jp
jne
call
pop
dec
cmp
sub
xchg
mov
ins
pop
scas
adc
xor
idiv
jo
jb
outs
cdq
test
adc
inc
sbb
push
inc
push
jmp
or
sbb
push
push
addr16
retf
mov
jbe
je
inc
pop
data16
push
push
adc
cld
fisub
test
or
or
mov
pop
pusha
push
xor
scas
lock
push
retf
jecxz
mov
les
push
push
je
imul
xor
push
popa
data16
dec
xor
test
(bad)
mov
inc
jmp
mov
pop
imul
push
dec
ficom
push
jne
outs
fdiv
push
dec
test
xor
cmp
hlt
mov
pop
add
das
movs
sbb
or
push
push
push
pop
ins
xor
push
cmp
dec
int
test
push
push
lea
gs
dec
ins
jae
dec
ins
adc
js
je
add
movs
nop
jae
adc
mov
add
push
cmp
arpl
fimul
jo
test
cmp
(bad)
cs
pop
jo
inc
gs
push
push
jb
data16
or
mov
jo
add
outs
push
and
cwde
push
jno
xor
pop
sub
aam
cmp
add
jbe
test
sahf
outs
jbe
sbb
jne
and
or
sbb
test
sub
ret
and
and
sub
push
scas
mov
dec
or
inc
inc
inc
outs
enter
jo
adc
xor
mov
stos
shl
pop
push
arpl
jns
clc
test
mov
push
inc
addr16
pop
and
(bad)
ss
push
dec
dec
push
inc
add
add
js
inc
inc
add
mov
mov
push
jae
aaa
ss
xor
stos
inc
or
cld
jne
cmp
loope
or
cmc
sub
cmp
inc
sbb
push
jo
dec
fisubr
sub
mov
inc
mov
jo
xor
rcl
dec
lods
adc
adc
ins
xchg
scas
jbe
mov
push
mov
push
sub
aaa
outs
les
inc
jo
imul
mov
pop
mov
cmp
xor
adc
mov
mov
dec
ficomp
mov
aam
push
aaa
cld
ja
and
dec
inc
inc
jno
push
push
jp
dec
push
or
pop
mov
inc
mov
push
xchg
mov
inc
aaa
push
imul
inc
loopne
ror
fs
push
mov
popa
es
sbb
out
js
inc
pop
dec
inc
pusha
or
rcr
gs
je
push
dec
push
xor
test
push
inc
imul
lock
xor
test
dec
dec
pop
retf
jns
arpl
nop
sar
ins
jo
outs
xor
inc
push
push
pop
jo
sub
dec
and
mov
push
cmp
xor
or
xor
and
ja
push
jns
xor
icebp
jg
mov
pop
push
push
push
js
cmp
fsub
xor
push
inc
jb
je
fcmovbe
dec
loop
fidiv
addr16
inc
jae
dec
mov
mov
push
push
mov
shl
cwde
jno
inc
xor
mov
sub
jmp
loopne
mov
dec
ins
test
adc
add
or
push
inc
add
pusha
aaa
mov
adc
xchg
shr
dec
xor
jecxz
mov
jb
push
inc
jo
xor
data16
nop
push
loopne
pusha
cmp
inc
outs
dec
push
push
sub
ss
cmp
xor
inc
(bad)
ja
je
add
aaa
rcl
je
xor
fcmovbe
inc
rcl
ins
pop
jmp
rcr
xchg
push
test
popa
jae
inc
dec
dec
aam
jbe
ja
js
ins
jns
lock
dec
outs
js
inc
sub
ret
bound
rol
add
out
dec
sbb
stos
dec
retf
push
gs
loope
or
sahf
(bad)
aaa
inc
inc
cmp
pop
and
or
push
data16
mov
ins
ja
inc
jno
and
ja
xchg
sbb
sbb
outs
push
push
ret
stos
sbb
sbb
xor
and
call
push
test
pop
cmp
push
push
inc
and
jne
push
rol
push
cmp
add
push
push
xor
lods
inc
xor
fwait
pop
pop
aam
cmp
or
dec
push
add
adc
sub
xchg
push
adc
or
dec
data16
dec
pop
sar
ret
in
jae
dec
push
push
sub
jge
cmp
inc
xor
or
aam
rcl
or
add
dec
cmp
mov
bnd
push
dec
dec
sub
and
push
lods
dec
inc
sub
cmp
xor
test
retf
fdiv
xor
ja
lods
loopne
test
jns
push
test
jp
stos
mov
ror
and
and
data16
rol
or
pusha
xor
jp
mov
push
adc
xor
xchg
sub
dec
adc
jae
stos
push
shl
dec
mov
rcl
sub
xor
arpl
push
push
dec
call
xor
dec
rcr
jbe
test
push
aam
push
out
pop
ins
sub
inc
dec
(bad)
xor
push
dec
or
imul
or
jb
outs
xchg
bound
dec
push
push
mov
inc
sbb
inc
aad
inc
dec
aam
retf
sub
mov
mov
fadd
inc
xchg
lods
stos
xchg
inc
test
adc
or
popf
jp
pop
inc
outs
push
imul
imul
gs
or
enter
aaa
mov
cli
fs
ds
arpl
xor
cmp
je
fisubr
xor
or
ins
dec
jp
mov
inc
mov
les
push
inc
jo
push
push
push
jp
retf
movs
and
sbb
mov
popa
and
sub
jne
add
stos
jle
dec
jl
dec
pop
push
inc
xor
xor
mov
mov
ja
push
dec
imul
xor
addr16
adc
jns
popa
imul
pop
or
push
jo
push
sub
nop
int3
xor
js
jne
mov
aam
inc
not
or
ja
cwde
pop
push
adc
data16
inc
pop
inc
imul
inc
mov
mov
push
sbb
xor
je
add
adc
jae
mov
adc
mov
les
jbe
xchg
or
lock
inc
mov
mov
mov
popa
and
movs
add
fdivr
ins
pop
in
adc
add
xor
add
popa
loop
add
outs
inc
add
pusha
clc
test
test
jno
ins
outs
mov
(bad)
mov
ins
es
xchg
ins
ret
pop
mov
xor
out
je
xor
gs
jno
sub
inc
inc
fdivr
xor
adc
sbb
xor
mov
or
arpl
test
movs
rol
or
inc
ja
inc
xchg
mov
imul
arpl
inc
push
xor
lods
mov
mov
xor
jb
and
adc
cmp
sbb
lea
ins
or
push
xor
add
test
push
je
popa
scas
push
add
repnz
imul
in
inc
mov
jbe
inc
xor
push
pop
xchg
jb
add
jo
inc
or
dec
in
gs
jno
retf
gs
loop
jae
push
xor
pusha
clc
dec
retf
bound
jp
lods
add
push
and
push
dec
jno
inc
and
enter
push
or
push
cmp
push
pop
stos
mov
push
lods
xor
inc
lds
sub
stos
inc
or
inc
and
push
int3
adc
jbe
dec
mov
inc
out
dec
gs
pusha
dec
push
push
inc
or
push
xor
fwait
stos
test
ins
inc
jbe
inc
int3
inc
add
loopne
or
inc
in
dec
and
jp
push
push
and
jecxz
hlt
inc
js
push
ja
das
dec
jae
inc
addr16
adc
or
inc
outs
outs
fwait
inc
in
push
outs
addr16
imul
inc
not
stos
loope
sbb
push
xor
fs
inc
loopne
sbb
cmp
xchg
push
outs
push
push
jns
adc
jl
mov
inc
ret
jno
imul
retf
pop
push
pusha
(bad)
cmp
mov
jae
mov
add
inc
or
out
xor
dec
push
push
ss
aaa
mov
retf
popa
pop
push
cwde
jge
test
mov
(bad)
clc
push
cmp
jno
adc
and
out
pushf
inc
int
jbe
pop
dec
shl
cmp
cmps
sbb
pop
adc
dec
push
arpl
add
sbb
inc
add
dec
div
rcr
out
imul
and
mov
xor
jnp
or
inc
pop
and
mov
dec
sti
ss
push
inc
test
push
jp
push
bound
mov
adc
ja
push
push
sub
push
mov
mov
js
ins
loope
loope
mov
jne
dec
fcom
push
push
sub
push
jmp
xor
sub
movs
lock
ror
xchg
jbe
and
test
and
adc
bound
aad
aaa
mov
inc
pop
and
aaa
cmp
dec
xor
inc
dec
jp
xor
out
push
mov
push
push
mov
jp
aas
dec
cld
mov
inc
dec
outs
ss
imul
adc
jns
(bad)
jbe
fwait
mov
push
bound
popa
push
inc
(bad)
mov
mov
popa
jbe
push
repnz
cwde
inc
jbe
icebp
cmps
push
push
outs
inc
addr16
push
push
push
xor
imul
scas
mov
sar
push
push
xor
cmp
pop
popa
dec
push
pop
imul
push
bound
dec
pop
push
ins
xor
cmps
mov
loopne
or
push
xchg
add
aam
bound
sub
mov
popa
outs
xor
xor
clc
adc
pop
xor
xor
dec
xor
fiadd
mov
stos
or
push
xor
dec
pop
push
cld
xor
fwait
scas
outs
inc
jno
and
call
pop
xor
pop
test
outs
pop
imul
push
push
test
clc
fwait
test
xor
ja
xor
push
inc
aaa
cmp
xor
xor
mov
pusha
inc
outs
mov
ja
add
std
pop
inc
dec
xor
ins
push
or
mov
push
call
or
adc
dec
push
es
add
bound
aam
rcr
dec
addr16
bound
inc
pop
adc
pop
push
dec
push
jne
sub
imul
push
push
outs
or
adc
jmp
outs
xor
inc
dec
imul
jns
arpl
push
ins
dec
outs
add
inc
push
pushf
arpl
inc
add
push
dec
lea
in
jns
add
xchg
ret
mov
popa
push
mov
js
push
jne
dec
ja
stos
dec
and
xor
sti
jo
inc
gs
pop
pop
inc
pop
inc
add
retf
add
dec
inc
push
adc
jb
push
aam
xor
das
test
add
arpl
mov
adc
es
inc
daa
add
dec
xor
adc
test
ror
xchg
add
and
push
push
push
enter
test
fs
add
movs
dec
les
sbb
cmp
stos
inc
mov
movs
push
inc
add
nop
dec
dec
xor
arpl
xor
inc
xor
es
jo
dec
test
ins
bound
call
jbe
inc
jo
loopne
add
xor
push
xor
push
ja
ja
adc
pop
retf
xor
outs
xor
push
or
adc
es
xchg
test
out
addr16
push
sub
dec
js
inc
adc
xor
xor
jns
jae
adc
dec
dec
cmp
leave
xor
pusha
mov
dec
imul
dec
fs
xor
dec
inc
xor
outs
(bad)
jmp
mov
fwait
pop
xor
popa
ins
hlt
daa
or
and
mov
ret
mov
inc
push
push
inc
movs
jo
mov
push
dec
ret
or
je
cmp
or
jl
cwde
jo
mov
aaa
je
outs
hlt
bound
sub
add
pusha
ds
jne
mov
les
enter
mov
jo
mov
je
dec
push
outs
jbe
cmps
sbb
push
jno
xor
imul
loopne
jno
jno
js
fisubr
test
dec
mov
xor
dec
inc
outs
cwde
inc
or
fsub
js
inc
call
cmp
xor
loope
(bad)
(bad)
jbe
inc
ins
inc
xor
dec
mov
cmp
fmul
dec
outs
(bad)
nop
adc
push
push
dec
dec
push
push
test
push
push
sbb
ror
clc
gs
jb
addr16
dec
bound
call
xchg
sahf
mov
jne
pop
push
push
ins
je
ins
push
jmp
jmp
inc
xor
inc
stos
ret
fsub
dec
dec
inc
push
sbb
xchg
into
adc
ins
cdq
fwait
cdq
adc
shl
push
add
inc
jno
test
scas
pop
je
xor
ja
cmp
ja
push
or
add
nop
pusha
add
out
lods
aaa
dec
push
sbb
cmp
fs
and
push
int
push
adc
shl
jno
push
gs
arpl
push
adc
outs
sbb
xchg
test
arpl
dec
pop
push
or
sbb
cmp
mov
cld
xor
fs
and
ins
xchg
push
adc
fwait
(bad)
imul
sbb
or
and
call
imul
push
jo
dec
jno
mov
sub
cmp
jle
jp
mov
or
(bad)
push
and
das
sbb
xor
jo
clc
sbb
jp
inc
dec
ins
jae
mov
inc
or
push
and
mov
xor
je
mov
dec
pop
or
add
jb
gs
mov
add
inc
dec
cmps
push
jae
push
push
mov
pop
xchg
call
inc
ss
sub
stos
mov
inc
adc
js
push
inc
xor
ss
xor
jbe
inc
mov
inc
jo
inc
xor
add
dec
je
dec
pop
jo
adc
or
add
inc
bound
sbb
je
jp
push
push
push
mov
pop
and
xor
push
ins
dec
push
leave
inc
inc
loope
mov
push
xchg
ss
dec
mov
mov
push
mov
jb
in
jbe
mov
xchg
aaa
imul
stos
xchg
xchg
bound
inc
or
cmp
ret
cld
outs
dec
outs
push
dec
push
mov
jns
inc
movs
sub
inc
xlat
add
jl
js
jb
push
adc
test
pusha
mov
xor
test
js
dec
js
inc
pop
outs
enter
aaa
clc
inc
pop
push
xor
aaa
jo
dec
imul
(bad)
adc
aaa
push
jae
push
mov
dec
ja
dec
xchg
mov
push
ss
push
bound
jno
dec
mov
je
imul
(bad)
xor
push
mov
add
xor
mov
jmp
pop
xor
clc
jo
pop
cmp
sbb
dec
aaa
bound
push
jmp
sub
xor
push
inc
aaa
(bad)
push
imul
dec
popa
pop
les
retf
jp
add
inc
dec
jne
mov
sbb
mov
dec
push
xor
fs
pop
cmp
add
adc
jns
fwait
test
or
bound
pushf
inc
xor
push
test
jmp
push
mov
and
adc
sub
(bad)
jb
aaa
popa
mov
adc
or
mov
retf
gs
leave
push
inc
xchg
dec
jp
push
inc
inc
adc
test
xor
aaa
outs
cmp
cmp
or
inc
dec
pop
inc
dec
inc
es
inc
sub
jae
dec
inc
pop
outs
or
dec
(bad)
mov
shl
arpl
xor
push
pop
jne
mov
xor
dec
jp
push
or
ss
fs
bound
pop
and
dec
call
or
ins
mov
jl
mov
(bad)
dec
imul
adc
or
inc
mov
xor
clc
or
imul
xchg
mov
scas
dec
loop
sbb
mov
or
push
outs
je
cmp
xor
adc
stos
push
lods
shl
push
bound
push
scas
and
and
xchg
mov
out
dec
cmps
data16
dec
mov
mov
jo
push
outs
mov
imul
push
jl
fwait
adc
add
add
adc
cli
jle
add
inc
sub
rcr
js
imul
les
jp
in
xchg
mov
aaa
ins
and
shr
jmp
arpl
xor
(bad)
not
push
enter
push
push
xor
dec
ja
mov
cmp
imul
or
push
cs
inc
push
fmul
adc
adc
inc
mov
dec
jo
push
js
outs
mov
lock
inc
push
jb
imul
inc
push
xchg
dec
or
push
push
ins
popa
jmp
or
call
dec
loopne
ins
adc
push
mov
jae
out
mov
jbe
retf
xor
mov
call
push
push
xchg
mov
push
dec
inc
test
xor
dec
add
xor
pushf
shl
arpl
jb
push
cld
mov
mov
js
pop
push
push
inc
in
dec
push
stos
push
mov
cwde
pop
fmul
add
xor
loop
dec
cmp
or
xor
nop
out
dec
add
inc
aad
push
jb
inc
add
mov
push
popa
rcl
jle
adc
or
stos
test
mov
sbb
mov
or
inc
popa
data16
push
or
push
aaa
ins
push
pusha
sub
movs
jb
js
inc
inc
test
dec
xor
clc
sbb
aaa
push
cmp
mov
push
arpl
cdq
adc
in
xor
call
xor
xor
jo
and
inc
push
shl
sub
mov
outs
ret
push
sbb
call
adc
push
jmp
xchg
add
outs
xor
or
xor
movs
jne
mov
xor
dec
ins
inc
mov
sar
xor
outs
dec
push
cld
add
push
mov
push
jbe
dec
dec
cmp
cmp
inc
mov
dec
jns
inc
jae
or
pop
inc
jmp
lea
push
xor
imul
dec
or
shr
pop
push
and
sub
dec
fcom
jne
(bad)
stos
cmp
push
jne
cmp
gs
leave
mov
xchg
fcom
push
ss
jns
xchg
jns
push
jp
popa
arpl
xchg
inc
dec
push
push
fs
jno
inc
or
hlt
jo
xor
mov
inc
lods
push
stos
sbb
xor
imul
popa
mov
xchg
inc
push
test
loope
xchg
add
sbb
dec
dec
mov
and
mov
jo
xchg
ret
ret
popa
pop
in
push
scas
scas
bound
in
mov
add
imul
pushf
inc
xor
xor
mov
adc
xchg
and
mov
sub
outs
ins
push
ret
pop
inc
jns
jno
inc
ja
pusha
xor
push
dec
adc
xor
pop
jno
and
xor
add
xor
dec
mov
and
(bad)
and
pop
xor
xor
rol
push
js
xor
test
push
scas
cmp
outs
xchg
mov
out
push
ficom
data16
ja
je
inc
cmps
pop
add
push
inc
fs
cmp
mov
dec
inc
push
sbb
js
add
mov
js
or
test
mov
inc
sub
dec
outs
adc
and
in
inc
stos
pop
test
jbe
dec
push
ja
popa
or
les
or
push
ret
dec
jbe
xor
ror
ins
jne
adc
bound
call
dec
aam
push
pusha
mov
call
pop
arpl
stos
mov
test
push
push
jne
ja
mov
xor
sub
and
dec
add
and
inc
movs
xor
dec
push
push
pop
gs
and
and
push
and
adc
jg
push
or
pop
popa
jbe
dec
gs
push
push
fistp
mov
(bad)
adc
push
inc
inc
dec
push
fs
push
push
push
add
mov
test
push
ins
(bad)
and
test
enter
cmp
inc
loopne
inc
dec
push
jp
push
xor
xchg
inc
xor
push
xlat
jbe
push
push
mov
mov
push
push
adc
add
xchg
push
adc
jo
out
adc
xor
aaa
out
xor
mov
pop
jo
push
ins
scas
bound
inc
jns
gs
cmps
dec
xor
enter
dec
test
jg
cmp
ss
push
push
jo
adc
aaa
xor
inc
xor
or
test
jg
cmp
xor
js
scas
aaa
pop
arpl
mov
dec
out
inc
xchg
xor
and
sbb
cmp
inc
xor
dec
jb
je
enter
sub
push
or
cmp
dec
ja
mov
push
bound
jb
add
loop
popa
jo
inc
cmp
push
ins
xor
inc
and
stos
dec
fdivr
pop
and
in
xchg
push
ds
pop
cmp
jb
push
outs
dec
(bad)
dec
ficom
arpl
inc
adc
push
mov
pop
inc
adc
sbb
sbb
xchg
jbe
dec
inc
popa
mov
push
mov
hlt
xor
push
inc
xor
push
mov
mov
inc
jb
pop
and
scas
out
pop
dec
inc
cwde
clc
cmp
inc
jno
adc
xchg
inc
dec
mov
push
inc
inc
xchg
jmp
jae
xor
sub
mov
in
cmp
cld
repnz
mov
je
jp
dec
xchg
sbb
mov
add
xor
in
scas
xor
inc
push
pop
arpl
inc
clc
mov
xor
je
jns
or
inc
push
add
ja
jmp
popa
pop
outs
mov
aaa
add
jno
inc
push
push
push
xor
ja
add
js
push
inc
jmp
stos
or
ins
cmp
mov
xor
jne
xor
push
mov
dec
xchg
outs
push
inc
push
push
inc
cmp
push
push
inc
mov
ins
adc
mov
mov
push
or
xor
cmp
sub
pop
jne
popf
ss
xor
imul
inc
push
adc
xor
js
pop
push
cmp
push
mov
outs
hlt
add
add
clc
sub
push
push
inc
stos
arpl
dec
or
mov
mov
pusha
and
inc
push
add
push
push
push
jg
push
dec
dec
imul
dec
push
adc
ins
push
push
pop
push
or
add
pop
inc
div
adc
add
mov
push
xlat
pop
add
nop
xor
push
sub
push
or
inc
bound
adc
js
inc
inc
xor
push
dec
jae
es
sub
mov
dec
fs
or
movs
fcomp
lods
and
popa
xchg
stos
mov
inc
mov
add
mov
xor
and
inc
jb
jp
jae
nop
and
dec
retf
mov
and
ficom
push
into
dec
fsub
xor
adc
push
dec
dec
xor
and
dec
push
dec
add
jp
bound
pop
push
jp
pop
and
inc
cmp
test
je
mov
jmp
ja
pop
push
push
and
push
and
mov
pushf
add
pushf
push
inc
dec
xor
test
adc
fwait
push
sub
dec
dec
inc
inc
jb
push
dec
xor
mov
inc
enter
xchg
mov
or
loop
imul
sub
pop
mov
or
dec
dec
rcr
sbb
jne
adc
fnstsw
addr16
push
xchg
in
jb
mov
cmp
scas
xchg
inc
add
aaa
adc
cdq
dec
or
mov
or
cmp
adc
or
dec
pusha
inc
loopne
inc
add
push
out
pop
call
xor
js
jb
jne
mov
dec
ins
loopne
scas
mov
and
inc
mov
addr16
bound
es
push
inc
adc
push
bound
js
inc
add
push
add
push
push
push
jb
jle
inc
ret
gs
xor
push
pop
xor
add
sub
test
cmp
inc
xor
dec
jb
call
and
jb
xchg
jp
or
adc
xor
repnz
imul
adc
ficom
cwde
repnz
dec
xor
jmp
push
mov
cmp
jb
jb
sar
sbb
xor
xor
sub
inc
cli
mov
push
pop
jbe
rol
add
pop
add
inc
call
popa
outs
outs
call
es
rcr
lods
mov
push
push
ins
cwde
dec
push
pop
push
and
rcl
mov
xor
loopne
cmp
pop
mov
arpl
(bad)
and
sub
nop
inc
xor
or
sub
outs
out
adc
inc
and
jmp
push
es
xor
adc
ins
imul
inc
call
call
fwait
mov
cmps
xor
popa
inc
xchg
xor
popa
bound
dec
stos
xor
push
push
or
xchg
dec
jbe
ins
dec
arpl
outs
pop
dec
dec
ja
cmp
gs
ss
(bad)
inc
mov
out
push
push
xor
outs
jo
or
fld
(bad)
out
fdiv
imul
ja
imul
sub
clc
pop
adc
pop
ins
pop
xor
xchg
mov
je
jbe
mov
(bad)
ins
dec
add
sbb
and
add
or
clc
stos
dec
push
push
jo
xor
add
inc
push
dec
and
mov
cmp
js
dec
jo
stos
or
xor
arpl
les
es
jae
shl
mov
pusha
xor
mov
inc
dec
jo
js
sbb
xor
dec
push
ja
stos
cmc
xchg
dec
data16
outs
push
pop
cmp
inc
push
fisub
fidivr
rol
dec
fisttp
cmp
pop
dec
jb
push
cmp
lock
push
retf
mov
outs
jmp
dec
jbe
push
push
out
shr
leave
inc
jb
lods
cmps
adc
sub
je
push
lds
test
aaa
jae
addr16
ja
outs
aaa
push
loop
adc
adc
fcomp
adc
jb
mov
dec
mov
xchg
call
stos
je
xor
out
dec
fs
add
dec
push
call
fs
inc
push
outs
mov
push
inc
fsub
shl
arpl
jbe
mov
test
xor
jne
imul
xor
inc
fs
aaa
push
xor
mov
inc
shr
cmp
push
xor
fisub
mov
push
push
fcom
adc
dec
push
inc
ss
fidiv
mov
outs
push
dec
test
fsubr
jbe
pop
arpl
xor
xchg
shl
push
pushf
cwde
adc
sbb
dec
dec
push
inc
fs
movs
add
push
cs
sub
add
push
iret
push
push
dec
push
imul
les
js
aaa
ins
outs
ret
add
xchg
bound
fdiv
je
ss
sub
je
cmp
pop
bound
jb
out
xchg
push
imul
mov
dec
dec
ret
movs
in
or
push
xor
xchg
xor
or
xchg
jb
int3
push
xor
lods
jne
dec
inc
dec
imul
fs
push
add
dec
jne
dec
(bad)
jns
ins
mov
(bad)
xor
es
(bad)
shr
push
sub
sbb
cld
jb
int3
or
push
sub
inc
jne
jns
shl
dec
mov
pusha
test
loopne
inc
outs
and
sbb
push
jbe
push
mov
push
pop
sbb
dec
dec
mov
imul
pop
jmp
vpcmpgtw
repnz
jne
test
pop
xchg
xor
cmp
push
xchg
push
sub
stos
mov
inc
xor
push
jo
nop
dec
dec
adc
mov
ret
adc
push
jns
test
mov
dec
addr16
inc
xor
or
dec
fcomp
inc
cmp
mov
ret
dec
sub
xchg
js
test
(bad)
int3
inc
popa
inc
ds
cs
inc
pushaw
push
hlt
js
add
or
outs
idiv
ja
es
nop
outs
jns
adc
mov
jp
xor
rcr
dec
push
outs
popa
xor
sbb
out
ja
(bad)
out
push
inc
xchg
push
lods
inc
push
xchg
adc
xchg
daa
test
pop
inc
xor
fucom
cmp
push
inc
addr16
movs
(bad)
sub
pop
popa
push
outs
js
bound
jbe
sub
push
sub
enter
or
inc
inc
(bad)
jmp
inc
aam
xor
and
mov
cmp
fs
cwde
js
dec
clc
mov
jo
dec
xor
clc
jne
movs
xor
test
pop
hlt
arpl
dec
inc
dec
xor
ret
inc
stos
ja
inc
mov
jns
popa
ss
mov
push
dec
fs
lock
cmc
dec
xor
push
dec
cli
ja
push
xor
xchg
inc
(bad)
shl
add
movs
add
jbe
bound
mov
push
jp
dec
lock
push
push
jne
je
dec
cmp
dec
mov
adc
jp
imul
cmp
dec
call
jb
xor
lods
inc
inc
or
outs
mov
add
ins
dec
add
or
xchg
dec
pop
imul
add
outs
inc
fs
dec
shr
ss
arpl
jp
adc
push
push
dec
outs
add
call
and
xor
xor
mov
gs
std
sub
push
xor
and
dec
ret
clc
inc
cmp
sbb
inc
cmp
pop
dec
inc
jb
cwde
movs
pop
je
dec
mov
push
pop
and
outs
gs
and
mov
dec
mov
ret
or
(bad)
mov
inc
cmp
gs
cld
xor
js
out
xor
or
xchg
test
inc
sub
or
xor
push
xor
data16
xchg
jle
cwde
fimul
add
push
gs
pop
add
push
scas
push
sbb
push
shl
retf
and
sbb
dec
sbb
scas
mov
les
jae
jb
cmps
cmp
shl
jo
imul
in
adc
pop
fs
stos
or
xor
cs
ss
push
push
cdq
stos
lods
push
xchg
push
xor
int3
outs
mov
imul
adc
xor
imul
mov
bound
push
imul
fs
sbb
clc
xchg
nop
add
push
dec
mov
xchg
mov
inc
aaa
jo
imul
and
xor
outs
retf
push
xchg
sbb
push
dec
push
jg
push
cwde
cmp
push
push
jb
push
dec
outs
or
add
or
ins
inc
inc
cwde
push
loopne
dec
popa
ret
enter
sar
mov
xor
ins
shr
sub
dec
xor
js
add
dec
dec
inc
xchg
jo
cld
push
pop
inc
ja
push
jmp
jp
jle
addr16
dec
jb
jbe
cmp
inc
gs
cmps
popa
push
pop
and
scas
pop
ins
sbb
cmp
ins
addr16
push
ror
mov
inc
scas
test
bound
pop
data16
adc
cmp
xor
jb
test
dec
inc
push
nop
rcr
or
ss
xor
push
mov
xor
add
pop
cli
jb
mov
mov
xor
push
sub
hlt
mov
outs
jne
inc
push
or
dec
cmp
push
inc
test
ss
adc
dec
outs
imul
dec
push
cmp
jnp
push
js
dec
cld
dec
(bad)
push
loop
mov
inc
push
xor
inc
xor
mov
jo
sbb
lock
fadd
add
inc
inc
enter
leave
xor
push
(bad)
js
dec
sub
arpl
mov
dec
js
inc
dec
imul
adc
or
test
or
jo
test
fiadd
xor
data16
fisub
mov
cmp
add
jb
test
push
or
imul
push
ins
inc
test
push
and
mov
loopne
cmps
jno
out
jmp
push
or
and
pop
xor
test
lock
je
popa
dec
xchg
push
jo
pop
sub
push
jne
xchg
xor
lods
stos
imul
imul
xor
(bad)
popf
rol
pusha
push
jno
push
dec
ins
shr
dec
push
dec
push
sub
push
fwait
sbb
fwait
sub
data16
arpl
(bad)
je
cmp
in
cmp
jo
xor
jmp
push
and
clc
dec
jp
jbe
into
jno
xor
bound
or
adc
dec
in
and
or
and
fs
loope
(bad)
push
add
inc
imul
xor
cli
pop
jae
bound
jne
inc
ror
dec
cmp
push
push
gs
push
sbb
push
jp
bound
push
cmp
fs
dec
inc
loope
cwde
outs
jae
inc
outs
jo
and
mov
jb
int3
xor
mov
mov
inc
dec
push
ja
mov
jp
aaa
mov
jp
push
or
pop
sub
aaa
bound
stos
inc
or
push
nop
add
mov
cmp
xor
inc
ins
dec
push
ret
push
bound
test
pusha
sbb
jo
(bad)
dec
enter
ins
jae
ins
mov
xor
imul
mov
bound
fidivr
aaa
push
mov
dec
movs
inc
push
add
dec
push
dec
lods
dec
mov
adc
dec
mov
jle
(bad)
xor
push
push
xor
xor
push
ja
xor
lds
aam
add
sub
add
xor
pop
in
mov
sbb
outs
jo
jno
jns
sbb
outs
popa
add
sub
xor
adc
inc
in
dec
inc
push
gs
xchg
adc
lock
inc
je
fs
push
push
push
jmp
or
lods
adc
data16
cmp
ins
inc
ins
jne
sub
pop
retf
and
ret
xor
inc
sbb
and
cmp
jg
push
or
xor
inc
outs
outs
cmp
push
sub
bound
jmp
jo
xor
xor
or
imul
ins
push
or
mov
xor
dec
dec
xor
imul
mov
cmp
mov
les
ins
push
or
test
mov
push
ins
push
pop
push
push
rol
arpl
adc
ret
xor
cmp
daa
add
(bad)
and
jecxz
push
pushf
xchg
lock
pop
xor
jo
inc
dec
push
mov
adc
xchg
pop
les
inc
shr
mov
ret
jbe
xor
xor
sbb
js
pop
fmul
push
push
sbb
nop
fs
retf
push
push
dec
arpl
ins
mov
push
jp
jb
sub
push
push
jne
inc
add
jns
jbe
jp
ret
and
mov
cmps
or
inc
jns
mov
and
inc
inc
jo
inc
ins
pop
imul
push
xor
pop
and
adc
rol
push
push
add
push
xor
dec
push
sbb
mov
mov
cmp
mov
cmp
ja
arpl
inc
data16
or
(bad)
fidivr
aam
bound
mov
sbb
inc
dec
jmp
push
dec
jp
lods
pop
gs
xor
dec
popa
imul
sbb
mov
in
fs
inc
push
cmps
or
ins
dec
inc
dec
jne
xor
scas
inc
(bad)
fbstp
test
xor
mov
xchg
dec
adc
ins
fdiv
rcl
ins
push
adc
aam
aaa
xchg
cmp
pop
xor
xor
popa
jns
jg
add
jp
sar
push
push
scas
inc
dec
adc
pop
sbb
jne
fs
push
popa
loopne
inc
xchg
and
and
cld
push
jb
push
dec
or
inc
cli
xor
pusha
xchg
inc
pop
and
ficom
pop
into
pop
test
aaa
call
jp
mov
sbb
push
inc
push
int3
push
xchg
mov
and
sub
add
rcl
mov
inc
data16
ins
xor
dec
jge
pop
pop
cmp
je
data16
push
push
pop
inc
fcmovb
outs
xor
scas
ja
xchg
inc
ss
cmp
int3
dec
dec
adc
jae
add
ds
push
je
xor
sub
push
add
inc
ins
jb
test
mov
xor
ss
mov
adc
dec
jb
sub
fs
mov
or
adc
add
xor
or
push
inc
addr16
call
jb
sub
fild
dec
jp
cmp
outs
nop
xor
sbb
pop
push
fimul
mov
inc
test
xchg
pop
push
jp
scas
mov
es
dec
jb
dec
aaa
arpl
mov
inc
push
inc
push
sahf
pop
call
xor
rdmsr
dec
dec
push
outs
nop
les
inc
mov
lods
push
jae
xor
xor
ss
adc
fs
mov
ss
mov
dec
xor
dec
clc
dec
imul
jbe
adc
ja
sbb
pop
xor
cmp
dec
shl
xor
pop
mov
add
mov
or
push
sbb
imul
or
sub
test
add
in
sub
clc
jns
add
mov
data16
push
test
mov
cwde
outs
pop
cmp
push
inc
inc
push
mov
cmp
push
cmp
pop
test
and
lock
dec
inc
inc
push
outs
xor
test
push
pusha
mov
dec
inc
push
push
adc
push
cmp
inc
or
gs
or
ss
dec
test
push
cmp
push
push
mov
jmp
push
push
xor
add
fisubr
dec
inc
inc
jno
mov
dec
outs
ds
dec
mov
ins
add
mov
imul
adc
dec
mov
push
popa
jno
jb
mov
or
push
popa
pop
data16
push
add
lods
xor
fmul
mov
dec
jge
xchg
push
addr16
jo
inc
jns
ins
test
pop
mov
dec
inc
dec
imul
int3
and
push
adc
fisttp
inc
fs
push
pop
loop
sub
adc
imul
adc
dec
or
aaa
inc
loopne
push
jo
shr
and
sbb
pop
(bad)
retf
xor
ja
rcl
pop
(bad)
call
cwde
bound
enter
mov
add
add
lods
add
jbe
or
adc
push
cmp
add
inc
imul
dec
adc
pop
mov
loop
xchg
inc
sub
push
inc
mov
push
ss
or
fsub
sar
imul
sbb
xor
and
cmps
aaa
inc
xchg
addr16
dec
push
fisub
pop
mov
xor
push
cs
ss
and
movs
xchg
aam
push
add
pop
bound
les
int3
js
cmp
push
push
xor
lock
lds
cmp
ins
push
aaa
and
inc
dec
xor
test
xor
dec
dec
fs
add
jo
push
jp
stos
test
jbe
dec
dec
je
inc
mov
dec
ins
push
adc
push
dec
push
gs
or
nop
jmp
ja
ja
mov
sbb
loopne
movs
les
jo
adc
movs
gs
add
and
hlt
push
cmp
scas
xchg
shl
xor
xor
mov
mov
pushf
fadd
push
mov
arpl
shl
pop
push
outs
cmp
xchg
push
adc
mov
pop
js
push
push
xor
xor
cld
and
les
inc
pop
dec
mov
aaa
jbe
js
adc
xor
add
inc
push
jo
aaa
ss
cld
or
adc
jo
jno
push
inc
mov
outs
push
je
fs
ins
inc
loope
loop
add
jo
retf
add
mov
dec
gs
inc
add
inc
call
push
pop
inc
inc
outs
dec
pushf
imul
jns
mov
(bad)
inc
xor
imul
in
xor
xor
adc
outs
fadd
sbb
mov
sbb
adc
push
mov
inc
jmp
add
bound
jb
pop
jb
mov
jb
and
lods
dec
ds
outs
push
bound
xor
push
push
pop
es
xchg
pusha
inc
mov
sbb
retf
xchg
loopne
jl
inc
mov
movs
shl
push
in
or
sbb
cmp
cmps
ss
(bad)
cli
out
push
jno
push
imul
clc
mov
jl
pusha
push
popa
outs
push
dec
data16
test
add
xor
dec
bound
inc
jmp
dec
push
inc
push
dec
push
inc
mov
ss
xor
dec
xor
inc
push
loop
add
jbe
ins
and
das
mov
push
jb
push
js
je
jo
mov
and
ins
ret
test
loope
cmp
add
aaa
dec
inc
mov
mov
outs
mov
call
dec
popa
ja
aaa
bound
jb
push
test
stos
add
or
mov
xor
int3
push
fwait
dec
cld
cmp
push
push
bound
mov
data16
aam
call
mov
arpl
push
or
dec
test
(bad)
shl
movs
adc
mov
mov
push
rol
jb
pop
retf
inc
(bad)
stos
dec
retf
inc
aaa
jle
push
add
fimul
pop
pop
bound
adc
js
ins
sbb
ficom
popa
xor
imul
adc
aaa
push
fs
lock
xor
inc
ins
dec
ja
sub
loop
jp
lods
dec
add
jo
rcl
mov
jne
push
aad
or
jp
or
lock
push
inc
aaa
jae
adc
or
push
in
add
inc
xor
push
sbb
adc
push
bound
cmp
and
lods
jbe
pushf
dec
loop
and
mov
push
jae
and
push
dec
xor
adc
xor
mov
jb
push
add
lds
xchg
sub
ins
push
cmp
xor
jo
fcmovb
push
fucom
mov
xor
jp
inc
xchg
adc
addr16
ins
xchg
outs
pusha
xor
add
push
inc
inc
push
and
lock
movs
adc
jns
mov
add
add
lock
and
or
adc
push
loopne
ins
dec
cld
aad
enter
sbb
push
add
xor
fs
outs
sub
cmp
push
xchg
push
loopne
outs
imul
es
lds
popa
dec
outs
gs
pop
gs
inc
inc
adc
xor
pop
or
mov
ins
jno
cld
inc
data16
xchg
jmp
js
lea
loopne
inc
mov
mov
shr
push
pop
push
or
ja
push
popa
mov
inc
dec
shr
mov
in
mov
push
push
sahf
outs
sbb
add
mov
jo
jp
dec
or
pop
dec
add
dec
inc
cld
dec
push
ins
xchg
dec
add
xchg
jns
inc
xor
pop
jnp
(bad)
inc
inc
push
push
dec
gs
cmp
ja
cmp
adc
push
aaa
jp
dec
mov
sahf
cld
push
xchg
arpl
lods
ss
jb
pop
loopne
push
jne
dec
outs
dec
push
bound
pop
dec
or
jbe
jne
mov
or
je
inc
clc
stos
pop
push
popa
push
ss
pop
xor
mov
imul
shr
push
inc
pop
jae
outs
jae
cmps
push
sbb
push
fsub
xor
shl
ins
jmp
test
dec
xor
and
inc
mov
fs
dec
cmp
cmp
rcr
push
sub
jle
loop
and
test
add
aaa
push
or
adc
push
jbe
and
push
dec
xor
cwde
and
jmp
dec
dec
inc
pop
xor
push
cs
ja
mov
ja
dec
aad
adc
sub
outs
xor
and
and
inc
ja
popa
retf
rol
adc
add
adc
shl
mov
jo
fs
fs
jne
ss
push
jno
xor
in
push
push
lods
push
push
inc
cmp
xor
enter
jo
jbe
inc
test
xchg
mov
sbb
push
push
inc
jb
sub
push
jl
jg
adc
out
ins
xor
ins
push
xor
sbb
jno
jno
imul
xor
cs
push
dec
pop
pop
inc
cdq
cwde
stos
xor
dec
push
dec
push
pop
retf
mov
dec
jbe
shr
dec
push
out
mov
ins
clc
push
xor
fiadd
jl
aaa
push
dec
lods
cmps
and
ins
inc
es
adc
loop
test
push
push
mov
jo
dec
test
push
mov
inc
inc
mov
inc
arpl
mov
fistp
imul
dec
repnz
and
test
inc
aam
stos
jno
sahf
sbb
mov
mov
inc
call
inc
push
dec
push
and
cmp
inc
or
fisubr
mov
dec
mov
sub
push
aad
dec
push
dec
nop
icebp
cmp
es
inc
push
movs
ins
bound
imul
fdivr
adc
add
inc
mov
pusha
sbb
shl
pop
add
ja
inc
jbe
push
rcr
xor
pop
inc
in
je
pop
sub
call
xor
adc
or
xor
xor
push
or
inc
or
fidiv
fdivr
sub
xchg
ror
aam
cmp
lods
jg
sbb
addr16
popa
inc
or
xor
test
jo
inc
and
fsubr
xor
imul
add
outs
add
adc
clc
aam
test
fs
jbe
imul
adc
inc
inc
ds
pop
dec
mov
dec
push
dec
js
inc
int3
jp
push
xor
add
movs
xor
inc
fsub
jo
fsubp
addr16
popa
fld
cmp
rol
ins
outs
dec
sub
add
xor
inc
jbe
push
ror
test
xor
test
jne
xor
xchg
push
and
dec
dec
pop
enter
cld
ins
ss
xor
(bad)
outs
jne
inc
adc
inc
fs
dec
cwde
test
(bad)
jp
or
aam
push
add
push
adc
adc
or
or
fdivr
mov
adc
xchg
stos
mov
push
pop
inc
inc
push
push
cmp
inc
sub
cmp
call
addr16
dec
ja
inc
inc
push
arpl
cld
aaa
push
ins
aaa
sbb
sub
and
add
or
cli
jne
sub
add
push
inc
dec
cmp
adc
dec
sbb
add
fs
dec
push
mov
or
adc
push
sbb
shr
xor
fadd
mov
push
or
inc
add
call
adc
jno
sbb
test
stos
fimul
xor
jno
mov
xchg
inc
inc
xor
sbb
jbe
push
mov
xor
jns
mov
mov
dec
inc
dec
inc
jno
popa
push
xor
inc
retf
jne
cmp
dec
outs
dec
outs
inc
dec
dec
dec
ret
lds
imul
popa
or
push
add
inc
(bad)
fimul
test
sbb
jns
xchg
add
jo
mov
je
xor
bound
dec
mov
mov
outs
push
push
scas
out
push
shr
test
xor
xor
pop
rol
xchg
inc
out
outs
jp
push
aaa
inc
adc
inc
mov
xor
jle
leave
aam
push
jl
lock
imul
push
dec
xchg
xor
aaa
call
mov
ds
push
imul
mov
push
push
popa
cs
add
xchg
add
dec
push
cwde
xor
cmps
dec
sbb
xor
cmp
pop
seta
cld
dec
pop
nop
ret
push
jmp
push
cmp
les
lock
inc
imul
push
add
push
js
inc
mov
add
xor
dec
dec
popa
loopne
es
fwait
mov
cmp
sub
add
ins
sub
push
inc
ja
push
add
dec
jne
ins
jne
outs
or
push
mov
ret
xor
cmp
popa
pop
shl
test
push
xor
dec
lock
ret
or
popa
cwde
retf
aam
mov
mov
xchg
dec
push
jo
xchg
pop
mov
outs
xor
inc
dec
aaa
or
outs
ret
add
adc
shl
sahf
popa
xchg
dec
add
jl
xor
xchg
dec
jb
mov
or
pop
outs
xor
xchg
push
adc
ss
push
xchg
cmp
(bad)
cmp
(bad)
das
xor
dec
outs
inc
cmp
push
aaa
inc
push
lods
cmp
xor
in
sub
jl
push
add
in
xor
ret
sti
sbb
dec
jb
push
fidivr
test
rol
dec
dec
dec
dec
inc
xor
imul
aam
inc
push
push
push
inc
(bad)
outs
popa
nop
lds
jae
dec
icebp
cmps
push
out
fs
jp
sub
adc
out
es
dec
jmp
dec
inc
xor
inc
sub
or
imul
inc
xor
xchg
fisub
push
xor
lods
jo
cmp
mov
outs
mov
inc
test
sbb
or
jp
push
sbb
or
push
jp
xor
(bad)
mov
push
add
nop
mov
pop
outs
jbe
cmp
aam
mov
sub
loopne
shl
loop
imul
mov
jae
push
je
pop
and
pop
data16
ss
xchg
dec
push
dec
bound
xchg
push
mov
and
fiadd
call
and
push
inc
mov
data16
dec
and
repnz
ret
cs
dec
cmps
push
mov
sbb
jae
pop
retf
jo
add
mov
call
jne
push
push
(bad)
xor
ficom
cdq
fsubr
sbb
outs
push
push
mov
imul
jbe
cld
mov
push
bound
dec
jne
addr16
push
or
mov
sub
push
or
pop
xor
sub
inc
mov
inc
xor
inc
ins
mov
dec
mov
inc
inc
cmp
mov
arpl
in
js
fldcw
dec
ins
and
test
and
and
xor
add
jge
mov
fidivr
xor
js
aam
push
add
fcom
pop
or
(bad)
push
dec
je
mov
sub
mov
and
inc
xchg
imul
sbb
imul
mov
scas
mov
retf
mov
ss
dec
mov
sub
js
fistp
xor
push
and
dec
js
dec
or
xor
cmp
sub
mov
bound
ss
cmp
mov
dec
mov
inc
repz
adc
je
inc
push
arpl
sub
mov
push
or
sub
push
je
push
nop
leave
push
in
push
ins
into
ret
cmps
les
push
cmp
jmp
sub
inc
imul
adc
je
(bad)
or
scas
xchg
cmp
pop
push
jb
data16
jbe
inc
dec
push
ins
inc
inc
push
inc
popa
ins
xchg
rol
pusha
and
xor
cmc
lea
push
inc
cli
jno
or
or
inc
inc
push
pushf
popa
aam
jg
rol
inc
dec
inc
jns
pop
add
stos
or
ss
inc
mov
nop
jmp
stos
in
cmp
inc
lock
mov
jbe
imul
jb
push
outs
dec
inc
lods
imul
call
dec
ss
test
cmp
sbb
inc
in
imul
cld
out
add
xor
xor
push
dec
gs
das
(bad)
bound
dec
jle
or
add
fs
jp
imul
inc
test
bound
dec
push
xor
xchg
push
cmp
jecxz
inc
fadd
push
adc
dec
push
pop
dec
push
cmp
xor
dec
inc
inc
and
jl
mov
dec
pushf
cmp
dec
xlat
fwait
dec
dec
push
mov
xor
cmps
inc
dec
bound
dec
outs
jp
cmp
push
bound
push
or
retf
push
dec
js
jno
mov
add
and
rol
dec
jne
push
and
jne
fs
mov
push
fidivr
push
push
test
push
push
pop
cmc
scas
adc
sub
dec
inc
push
cmp
and
ja
xor
inc
shl
mov
cmp
and
dec
mov
pop
push
(bad)
cwde
jbe
shl
pop
mov
(bad)
xor
dec
cmps
sub
loopne
mov
dec
ins
inc
in
and
push
aad
xor
inc
into
cmp
dec
jb
mov
sbb
cmps
cli
inc
push
call
push
outs
push
inc
push
inc
pop
mov
xchg
mov
js
fidiv
lods
loopne
mov
jo
mov
inc
nop
push
jp
cwde
call
cmp
push
adc
dec
and
dec
inc
add
jl
xor
and
stos
add
pop
stos
xor
int3
imul
add
addr16
rcl
push
jns
je
or
pop
xor
mov
xchg
pop
scas
jbe
enter
and
outs
push
ret
mov
sbb
dec
inc
dec
imul
pop
loopne
test
push
mov
outs
js
dec
push
push
je
shl
xor
dec
dec
add
ins
aaa
xchg
cmp
(bad)
outs
js
cmp
pcmpeqw
add
jno
bnd
mov
or
dec
xor
dec
leave
and
add
xor
push
aaa
add
sahf
dec
je
ss
push
shl
mov
inc
add
fidiv
cmp
pop
and
add
push
and
addr16
jne
inc
jbe
jne
ja
mov
in
arpl
adc
adc
inc
ins
popa
sbb
inc
je
xchg
jne
dec
mov
xor
inc
ins
ror
sub
pop
or
nop
jae
add
sbb
cmp
ins
inc
stos
or
jl
bound
dec
cmp
nop
dec
push
mov
mov
fwait
mov
popa
jae
cmp
(bad)
aad
jo
jb
inc
inc
in
xchg
add
sbb
mov
xor
dec
aaa
data16
repnz
ins
inc
bound
jne
add
or
(bad)
pushf
xchg
dec
mov
sub
push
lods
ins
test
dec
sbb
addr16
push
fcmovbe
add
jbe
ins
push
mov
push
test
inc
mov
lea
je
ins
cmp
xor
xor
push
sbb
mov
outs
es
dec
inc
ins
pushf
or
push
loopne
jo
shl
pop
sbb
push
mov
enter
mov
in
add
adc
add
adc
stos
add
je
cmps
in
push
push
xor
xchg
mov
jo
in
xor
bound
jmp
xor
int3
ja
stos
adc
callw
mov
imul
jo
mov
push
loopne
pushaw
sbb
xchg
outs
add
push
cwde
mov
shl
loop
inc
mov
(bad)
popa
jo
dec
dec
push
dec
fwait
jbe
adc
cmp
xor
lods
outs
in
mov
sbb
lods
mov
xor
mov
push
test
mov
imul
dec
add
push
pusha
add
je
jo
sbb
cmps
or
sar
push
or
push
pop
popa
sbb
mov
push
push
push
sbb
mov
sbb
or
cmp
xor
xor
nop
cdq
out
aaa
jbe
push
cmp
xor
(bad)
cld
or
mov
dec
sub
jmp
jne
push
inc
push
push
fimul
cwde
lods
jne
adc
rcl
push
movs
arpl
nop
mov
inc
or
inc
retf
mov
addr16
dec
sub
pop
mul
cmp
call
cs
cld
jbe
dec
ins
dec
outs
sbb
idiv
push
mov
push
inc
stos
xor
or
mov
jno
imul
xchg
and
pop
sub
bound
nop
sbb
das
sub
push
push
aaa
cmp
push
xchg
or
cmp
jne
arpl
cmp
add
sbb
add
push
dec
popf
pusha
push
sbb
xor
lods
test
and
scas
xor
inc
cmps
cmp
push
push
test
hlt
and
pop
jge
mov
dec
xor
popa
dec
push
arpl
dec
cmp
push
pop
outs
jo
add
cmp
xor
adc
dec
xor
fs
bound
push
js
or
pop
shl
jb
pop
inc
dec
pop
inc
dec
dec
inc
dec
sub
push
mov
stos
inc
cmps
retf
dec
dec
rcr
add
push
inc
inc
push
jae
out
test
or
or
sub
test
bound
jo
xchg
mov
or
push
jp
dec
jb
cli
jp
xor
xor
inc
pop
xor
inc
test
cmps
mov
je
inc
push
add
inc
xchg
sub
outs
dec
add
les
cdq
jo
push
je
pop
jno
fwait
gs
adc
retf
stos
push
mov
inc
ins
outs
xor
bound
cmps
push
shl
fs
je
inc
xor
dec
dec
bound
clc
inc
and
jno
dec
inc
outs
jbe
add
imul
cli
jbe
nop
sub
or
push
xor
jno
push
or
js
jo
xor
inc
inc
inc
ss
or
pusha
inc
jp
dec
sar
push
push
jns
jo
push
adc
aaa
ja
dec
and
xchg
aad
push
imul
inc
inc
mov
dec
imul
and
add
push
imul
inc
xor
out
mov
inc
jae
push
xchg
loop
push
pop
xor
pop
push
xor
into
inc
adc
adc
xchg
sbb
cmp
sub
push
sahf
dec
pusha
jl
loopne
xchg
call
pop
push
xor
adc
in
xchg
xchg
inc
arpl
call
push
inc
add
jle
inc
inc
adc
(bad)
push
dec
mov
outs
aad
dec
and
xor
inc
aaa
xor
or
js
or
xor
push
inc
jne
popa
(bad)
dec
stos
and
adc
cwde
dec
sbb
adc
in
imul
cmp
imul
mov
sub
adc
mov
call
out
inc
inc
bound
scas
mov
ja
inc
push
pop
ss
jbe
cld
xor
in
inc
inc
jo
dec
outs
loop
push
mov
push
jp
sbb
mov
adc
or
nop
or
add
dec
adc
dec
push
or
inc
push
ins
mov
sub
xor
sbb
outs
push
imul
mov
call
es
or
push
mov
out
repnz
jp
mov
ja
add
ins
dec
inc
mov
ja
outs
push
xchg
inc
dec
pusha
inc
out
aam
and
arpl
add
sbb
pop
cli
sbb
dec
je
sbb
dec
arpl
adc
add
cld
or
ins
je
fimul
dec
sub
scas
adc
or
or
jo
inc
call
js
jae
jo
sbb
xor
call
adc
push
adc
aaa
cmp
inc
or
push
ss
ret
adc
push
dec
xor
and
dec
lock
stos
pop
mov
sub
inc
push
dec
jne
data16
or
inc
push
data16
gs
mov
(bad)
enter
cld
je
mov
or
mov
les
jmp
xor
sbb
push
add
dec
mov
or
fadd
push
dec
in
push
xor
test
add
inc
xor
push
inc
push
push
jle
add
dec
sub
inc
push
xor
inc
pop
push
jo
push
push
dec
push
popa
ins
xor
dec
inc
pop
jmp
imul
mov
inc
xor
push
xor
das
adc
push
aaa
xchg
push
xchg
push
ret
clc
dec
push
push
dec
ss
dec
sbb
(bad)
sbb
jo
ja
adc
mov
jb
ins
add
push
cmp
dec
enter
(bad)
sub
add
popa
jb
xor
loopne
loope
adc
dec
aaa
inc
push
cmp
mov
push
cmp
xchg
push
pop
jp
xchg
xchg
add
and
je
xchg
inc
and
push
or
cs
scas
pop
add
adc
in
int3
jno
test
jno
or
and
test
mov
add
and
cmp
dec
sbb
jl
dec
clc
or
push
push
loop
inc
ret
ror
dec
loopne
dec
jno
xchg
push
in
(bad)
(bad)
add
mov
and
dec
fs
aam
push
dec
bound
push
push
gs
push
adc
xchg
xor
mov
push
stos
nop
push
fsubr
imul
dec
xor
ins
cmp
and
call
aam
push
call
dec
pop
inc
ss
fs
bound
dec
test
dec
sub
add
add
or
push
xchg
loop
mov
xor
or
mov
ja
movs
jb
push
inc
jno
cmp
inc
inc
fadd
add
inc
dec
push
or
add
push
push
inc
sbb
or
cld
xor
fadd
and
mov
xchg
fwait
rcr
cmp
push
inc
jmp
ret
cmp
push
jns
push
aaa
outs
dec
push
aaa
jno
pusha
mov
dec
add
lock
pop
movs
sbb
adc
sbb
xor
mov
xor
xchg
lea
fs
dec
popa
pop
cmps
xchg
cli
jg
jl
pop
xor
fs
dec
xor
ss
pusha
movs
int3
xor
add
push
gs
js
adc
movs
dec
cwde
dec
jne
xor
in
js
call
push
mov
xor
pop
icebp
sub
outs
xor
(bad)
jb
outs
nop
pop
adc
popa
dec
nop
push
dec
shl
jno
push
or
pop
cwde
sub
push
arpl
shl
push
xor
stos
dec
jae
pop
lods
or
jo
dec
cld
sub
jo
imul
in
ins
js
or
mov
xor
add
jo
ins
(bad)
or
pop
sub
outs
push
add
jb
movs
mov
push
adc
push
add
add
add
pop
xor
ins
jl
popa
sar
dec
push
inc
xor
addr16
test
fs
pop
dec
test
mov
push
xor
je
push
in
mov
push
jne
cwde
sub
add
fdiv
popa
nop
ja
push
jl
pop
add
xor
push
shr
es
retf
xor
push
mov
mov
sbb
sbb
inc
adc
mov
div
ss
loope
mov
cmp
sub
sahf
adc
outs
sbb
push
fmul
mov
shl
xor
sub
add
rcl
loopne
pop
or
outs
ins
dec
xor
or
imul
bound
or
jns
and
loopne
or
jne
jp
pop
inc
fldcw
inc
jae
out
inc
jp
out
ss
jne
in
xor
ins
xor
outs
add
xor
aaa
outs
push
outs
dec
add
add
and
outs
xor
mov
dec
xchg
push
push
int
xor
xchg
pusha
aaa
loopne
mov
lock
shr
push
inc
cwde
ja
push
push
adc
or
push
dec
inc
xchg
mov
dec
test
mov
inc
mov
cmp
push
inc
pop
add
xor
jmp
(bad)
push
inc
arpl
ss
xor
and
movs
nop
dec
dec
div
push
add
pop
jp
dec
push
cmp
dec
and
push
imul
pop
cs
mov
jae
movs
test
dec
jns
sahf
js
test
cmp
int3
ins
jbe
dec
ja
mov
xchg
test
jp
popa
push
ins
push
push
or
inc
xchg
mov
push
cmps
xor
aad
stos
inc
bound
inc
xor
fsub
push
data16
je
adc
xor
js
(bad)
and
xor
bound
out
sbb
dec
jp
outs
push
add
mov
dec
je
call
cmps
js
push
shl
dec
xor
push
cmp
dec
xor
xor
mov
sub
loop
bound
and
leave
push
jno
pop
dec
push
jne
cld
les
mov
dec
pop
adc
ss
dec
adc
dec
inc
data16
arpl
pushf
inc
xor
sub
imul
sbb
ins
add
imul
push
cmp
inc
cli
cs
add
inc
inc
push
loopne
shl
ja
test
jmp
fwait
mov
push
inc
cmp
push
inc
xor
xor
add
sbb
retf
adc
inc
call
pop
data16
jbe
mov
xor
xor
pop
inc
lds
test
jo
ficom
pushf
mov
push
inc
dec
xchg
add
add
dec
jne
dec
cmp
push
mov
xor
mov
jns
ja
inc
xchg
clc
inc
sbb
ins
dec
cs
push
jp
push
ds
mov
dec
popa
push
ins
sbb
sbb
into
aaa
test
movs
inc
inc
dec
and
cmp
imul
or
dec
imul
push
or
fs
jno
gs
mov
dec
mov
loopne
into
mov
jo
loop
inc
xor
(bad)
mov
arpl
shl
arpl
cmp
xor
xor
inc
mov
jp
cmp
sbb
or
mov
xchg
xchg
adc
push
pop
inc
shl
push
push
inc
cmp
ret
(bad)
dec
bound
inc
js
shl
cmp
xchg
inc
test
jmp
stos
cld
imul
jmp
pushw
ins
push
in
mov
mov
jno
dec
adc
scas
mov
sbb
xor
jb
ins
leave
nop
pop
les
inc
inc
adc
xchg
mov
fldenv
cs
cmp
jb
xor
push
imul
add
adc
inc
add
push
pop
jbe
jne
sar
gs
pop
into
xor
inc
adc
or
mov
cmp
ficom
jo
loopne
inc
inc
jae
add
jo
sub
ret
mov
jp
mov
aaa
dec
outs
inc
arpl
push
add
xor
mov
(bad)
mov
jo
ins
mov
inc
jns
imul
xor
jbe
inc
in
int
push
mov
aaa
pop
bound
pop
xchg
test
dec
push
sub
jne
retf
push
push
inc
fs
xor
sbb
jo
(bad)
test
dec
jp
imul
dec
aam
out
mov
jno
sub
push
ins
push
enter
add
loopne
popa
dec
jne
adc
hlt
inc
outs
adc
mov
js
ss
and
pop
push
push
xor
ins
ja
mov
mov
jb
sub
rcr
mov
dec
xor
push
sub
cli
push
addr16
jg
(bad)
jo
pop
push
dec
dec
dec
fcom
adc
fidivr
repnz
cs
push
outs
repnz
push
ror
adc
push
ss
aaa
pusha
cmp
mov
inc
mov
mov
pop
xor
dec
ins
sbb
cmp
(bad)
dec
xor
je
xor
es
bound
sbb
fstp
inc
popa
js
nop
xchg
xchg
push
push
xor
stos
inc
lock
ins
push
push
js
push
xchg
loopne
inc
les
dec
dec
adc
push
xor
js
push
xchg
addr16
add
or
out
xor
cmp
push
outs
inc
stos
adc
bound
mov
ins
inc
inc
push
ror
inc
xor
ss
test
dec
push
pop
push
push
retf
xor
add
or
ss
ins
push
aam
dec
mov
xchg
jo
mov
xchg
sbb
pop
sbb
jl
jno
dec
mov
dec
je
dec
mov
push
jmp
cmp
outs
xor
jbe
ins
dec
adc
or
xor
data16
popa
xor
cmp
pusha
scas
sbb
jne
mov
imul
ins
adc
loopne
push
xor
inc
js
arpl
ins
popa
push
mov
inc
jbe
inc
sbb
rcr
ss
inc
dec
sbb
or
mov
dec
inc
and
inc
test
push
mov
bound
add
ins
jno
push
push
cmp
adc
push
outs
stos
jge
jle
push
pop
xor
mov
sub
scas
data16
and
and
je
and
ja
addr16
pop
fstp
dec
jns
fidiv
push
xor
inc
out
push
push
mov
xor
adc
push
push
fisttp
jo
push
mov
pop
movs
les
xor
cmp
ins
and
jbe
push
inc
push
push
mov
jle
mov
xchg
add
rcl
mov
adc
push
scas
adc
xor
popa
test
xor
lock
push
mov
ret
inc
bound
inc
(bad)
movs
inc
and
arpl
in
movs
mov
jno
cmc
outs
xor
cmp
dec
cdq
mov
add
push
je
push
mov
aaa
nop
imul
inc
adc
mov
aaa
les
pusha
sub
mov
pop
push
ss
retf
adc
and
ret
sbb
cmp
and
dec
call
push
xor
lods
mov
inc
push
add
sub
ins
outs
jg
push
sub
inc
inc
outs
jae
jno
fs
fst
call
mov
(bad)
js
inc
dec
jp
push
or
mul
imul
es
push
out
js
push
push
pop
dec
push
sub
lock
xor
pop
push
cwde
enter
test
dec
xchg
mov
push
xchg
test
adc
push
ins
mov
add
arpl
dec
sar
(bad)
and
jecxz
cmp
(bad)
jmp
cmp
push
fs
add
push
jmp
pop
adc
inc
mov
stos
or
xor
and
hlt
push
push
outs
clc
push
push
inc
push
and
movs
xchg
sar
xchg
push
xor
jmp
push
fidivr
xor
cld
xor
dec
pusha
inc
xchg
mov
cmp
push
xchg
and
imul
jo
add
push
addr16
shr
scas
pop
aaa
push
aaa
dec
inc
or
ret
stos
adc
dec
add
push
fwait
and
dec
inc
fs
shl
push
(bad)
adc
and
mov
shl
loopne
sbb
xor
xchg
dec
push
pop
int3
xchg
cs
xor
cmp
adc
ins
adc
or
xor
xor
fwait
push
or
dec
sbb
ins
ins
push
lods
sahf
cmp
or
cmp
sbb
cmps
jb
shr
fsub
ss
retf
or
shl
or
mov
xchg
outs
push
xchg
mov
xor
push
inc
push
(bad)
and
ja
nop
xor
int
les
add
xchg
neg
inc
data16
dec
inc
inc
inc
push
push
ins
imul
push
xor
inc
push
jns
xor
cld
xchg
sbb
push
mov
loopne
outs
add
dec
enter
ja
push
ss
dec
rol
add
dec
jb
clc
pop
dec
pop
push
add
inc
jp
jae
or
sar
push
sub
js
adc
inc
aad
dec
movs
shr
push
add
dec
inc
retf
sbb
mov
xor
push
or
ds
push
xor
fs
adc
fistp
xor
dec
push
jo
mov
cwde
cmp
cld
mov
inc
ins
jns
push
js
dec
mov
dec
xchg
dec
dec
xor
jp
add
sbb
pop
pop
sub
sbb
pop
addr16
ds
bound
inc
push
ss
pop
and
imul
dec
popa
xor
xor
mov
adc
inc
imul
push
mov
xor
and
in
add
leave
cs
push
jns
mov
dec
adc
imul
test
cmp
xor
add
xor
pop
jno
test
dec
jne
shr
dec
arpl
js
inc
push
jbe
je
jne
add
push
add
dec
(bad)
push
or
ins
xor
dec
push
ds
mov
mov
mov
test
ret
retf
je
and
dec
movs
adc
adc
inc
outs
xchg
jns
inc
dec
aam
xor
js
add
xor
mov
xor
add
xor
xchg
imul
add
xor
outs
clc
imul
ret
(bad)
mov
jbe
push
ret
dec
bound
rcl
aam
rol
hlt
lods
shl
retf
push
push
push
push
outs
imul
dec
xor
imul
dec
in
sub
cmp
dec
ins
loop
in
add
jbe
push
dec
push
sar
push
push
add
fiadd
xor
dec
inc
or
cld
outs
call
xor
cmp
outs
mov
jmp
shr
fdivr
cmp
ja
or
xchg
enter
inc
adc
pop
pop
xchg
test
xor
ss
jns
(bad)
and
dec
gs
xor
push
sub
inc
xchg
in
rcl
addr16
dec
lods
or
dec
je
inc
dec
arpl
push
repnz
xor
dec
ss
pop
js
mov
outs
push
jo
adc
sub
cld
pop
rol
shl
cmps
pop
lock
sub
push
inc
push
dec
scas
cli
push
fidiv
dec
pop
dec
jae
inc
xor
add
ins
inc
cmps
out
xchg
sub
gs
mov
adc
and
data16
mov
adc
or
xchg
test
outs
xor
rcl
jne
cmps
(bad)
fisttp
xor
fidivr
inc
xor
dec
push
push
inc
jns
inc
ss
add
call
add
inc
cs
call
adc
dec
mov
je
dec
arpl
shl
movs
scas
das
xor
imul
cmp
pop
adc
(bad)
pushf
popa
mov
xor
fs
jl
ja
jb
mov
push
inc
inc
dec
xor
adc
pop
sub
aaa
dec
inc
bound
dec
jp
(bad)
dec
push
and
push
add
ja
dec
jb
mov
add
je
add
das
adc
fdiv
imul
push
sub
jp
dec
ret
add
and
gs
in
add
sbb
sub
inc
cld
rcl
add
enter
jb
sbb
or
test
pop
sbb
add
jae
loopne
add
addr16
out
add
dec
push
popa
mov
bound
cmp
sbb
inc
dec
out
fs
test
outs
jo
jns
push
xchg
inc
scas
std
adc
jb
bound
dec
dec
push
dec
push
mov
or
push
jnp
pop
push
push
mov
pop
outs
dec
les
jo
push
inc
dec
xor
jns
adc
call
cwde
push
inc
dec
ins
jl
retf
loopne
pusha
mov
cmps
and
jle
outs
inc
xchg
mov
push
push
js
mov
push
hlt
pop
ins
ja
push
xor
(bad)
arpl
dec
jo
popa
or
call
and
pop
or
mov
push
dec
dec
sar
test
push
pop
pop
dec
jae
dec
outs
retfw
dec
push
dec
fdivr
dec
xor
xor
data16
push
push
imul
pop
xor
mov
fdiv
push
push
jl
add
push
cli
jbe
test
cmp
arpl
adc
bound
inc
popa
or
jns
push
and
test
imul
cmps
pop
je
(bad)
call
pop
push
xchg
sub
int3
add
fs
push
mov
into
jno
push
pop
push
lea
fsub
cmp
jb
pop
sub
jp
jns
xor
dec
data16
outs
jo
jb
test
push
sub
arpl
lods
adc
je
cwde
mov
mov
push
xchg
or
rol
pop
mov
ret
jno
ins
bound
dec
xchg
jae
push
xor
jae
jo
mov
push
xchg
mov
push
imul
mov
pop
popa
sbb
data16
shl
dec
push
xchg
xchg
jae
aaa
cmp
jne
fs
cmps
mov
(bad)
fs
sub
xor
adc
adc
pop
pop
sub
popf
es
xchg
ja
push
xchg
jmp
push
mov
inc
inc
div
loopne
dec
dec
push
or
in
adc
push
xchg
xor
sahf
outs
push
cmp
ins
inc
ins
inc
push
fs
lods
fs
push
movs
cmp
mov
inc
push
pop
xor
inc
pop
mov
jo
je
push
or
mov
or
je
rol
sbb
push
jne
bound
lods
ss
mov
inc
js
jmp
dec
dec
mov
imul
xor
inc
stos
cmp
push
ja
dec
les
add
push
test
inc
push
add
dec
mov
inc
xor
arpl
jb
xor
out
adc
cmp
inc
inc
jp
aam
cmps
add
xor
and
sbb
gs
dec
inc
ds
mov
stos
xchg
test
sub
jp
sub
test
mov
fsub
xchg
imul
outs
sbb
cmps
and
and
inc
scas
adc
add
test
shl
push
fisub
ss
and
or
push
xor
or
pop
or
xlat
je
push
jns
push
sub
pop
aam
inc
gs
pop
push
outs
aam
(bad)
xor
imul
dec
out
stos
jb
cwde
into
imul
dec
add
pop
adc
ja
pop
sbb
imul
cld
arpl
fisttp
xor
xor
pop
out
xor
inc
out
jns
inc
dec
repnz
inc
retf
sub
push
(bad)
out
js
push
push
popf
xor
and
jno
push
mov
xor
inc
jb
xor
sub
jbe
loop
pop
loop
jae
push
inc
les
push
addr16
das
adc
cld
push
mov
jp
xor
push
mov
clc
cmp
push
aaa
inc
cmps
mov
jae
xchg
jns
cmp
add
inc
dec
call
pop
cmp
jns
add
popa
cdq
sahf
cld
ja
mov
sbb
sahf
sbb
mov
jne
je
adc
push
xor
push
gs
leave
sub
call
call
inc
and
mov
pop
jmp
ja
push
inc
cmps
inc
popa
dec
dec
push
lods
stos
pop
xor
inc
pushf
ficom
or
jp
inc
fisubr
mov
inc
int3
test
cmp
addr16
push
xor
cmps
mov
xor
mov
jns
or
mov
cmp
aam
sahf
dec
outs
es
push
sbb
loopne
xor
inc
push
add
outs
dec
inc
outs
and
cmp
ss
jbe
mov
fdiv
pop
out
ja
xor
push
dec
mov
inc
stos
add
pushf
xchg
cmp
dec
repnz
jne
xor
vcomiss
dec
cmp
xchg
push
movs
push
mov
aaa
jbe
push
in
cli
ins
dec
es
mov
dec
aaa
data16
adc
fs
bound
add
loopne
stos
aaa
pop
inc
imul
sub
sub
jae
or
sub
inc
jbe
mov
inc
mov
xchg
and
push
test
cwde
cmp
dec
fld
xor
jl
in
stos
and
mov
popa
dec
mov
xchg
rol
or
push
pushw
pop
and
jbe
icebp
outs
push
mov
push
push
dec
jae
popa
push
inc
(bad)
add
ror
push
push
sbb
inc
lock
popa
inc
pushf
imul
sahf
dec
jp
dec
dec
loopne
inc
mov
jae
out
push
dec
addr16
es
sub
scas
xchg
or
ret
push
fadd
outs
sub
cmp
cmp
cmp
ret
cmp
outs
(bad)
fmul
xor
imul
dec
or
jmp
clc
or
push
ins
bound
push
jne
push
popa
ss
jno
pusha
mov
ins
and
xchg
push
jp
fs
call
loop
out
cmp
sbb
adc
inc
push
loopne
mov
mov
mov
and
shr
mov
jbe
imul
jp
push
add
mov
pop
dec
ins
push
cli
xchg
mov
dec
jae
outs
jp
sub
jb
ja
test
xchg
inc
xor
inc
sub
stos
xor
mov
jl
mov
bound
ins
or
and
dec
pop
rol
inc
adc
outs
in
push
cmp
adc
adc
inc
bound
add
xchg
inc
shr
push
aaa
jl
inc
test
and
cmp
cmp
arpl
js
mov
inc
ins
popa
and
add
add
push
jo
mov
or
bound
ror
inc
cmp
dec
dec
je
push
inc
mov
pop
bound
dec
push
in
jbe
mov
out
and
imul
push
frstor
cli
addr16
inc
cmp
fsub
xor
jb
adc
dec
cmp
ins
loopne
or
inc
sub
jo
xchg
(bad)
call
or
adc
dec
es
aaa
mov
xor
dec
jo
or
jbe
(bad)
addr16
ror
(bad)
push
sbb
in
rol
inc
lds
dec
or
push
rcl
xchg
cld
push
jne
inc
rcl
cs
or
jbe
or
mov
shl
jmp
jo
imul
push
sub
imul
inc
xchg
mov
inc
xor
and
call
sub
push
mov
arpl
push
inc
dec
sbb
inc
rcl
imul
popa
(bad)
cli
cdq
pop
dec
or
dec
imul
inc
or
stos
jp
xchg
xchg
xor
fsubr
adc
and
je
hlt
pop
jne
push
jne
push
imul
inc
outs
jo
ins
jne
inc
xchg
loope
pop
test
xor
shl
sub
push
xor
add
ins
push
into
fs
es
mov
dec
je
int
xor
pop
cmp
xchg
rol
dec
bound
mov
mov
cmp
inc
xchg
cs
js
xor
js
push
aaa
dec
xchg
sub
xor
imul
push
adc
jne
bound
push
imul
and
and
push
es
outs
ror
add
or
int
loop
jle
bound
rcl
jl
push
push
ins
bound
cmp
loopne
test
inc
and
inc
shl
dec
mov
clc
xchg
dec
outs
pop
shr
ficom
mov
dec
push
inc
adc
test
adc
dec
cmp
xor
inc
addr16
cmp
fld
cmp
cmp
dec
nop
add
mov
dec
inc
add
lock
push
push
or
clc
mov
ins
mov
ins
(bad)
xchg
push
pop
outs
dec
inc
arpl
outs
jns
outs
fs
pop
xchg
mov
inc
js
inc
push
gs
cmp
push
or
cld
push
push
jae
dec
inc
push
pop
retf
and
xchg
test
cmp
and
dec
mov
mov
inc
imul
inc
mov
addr16
push
inc
push
adc
pushf
jo
jl
movs
(bad)
dec
dec
aaa
dec
push
xor
sub
sahf
or
ins
sbb
popa
xor
sbb
outs
int
cmp
push
ds
push
dec
sub
fsubr
mov
jbe
cwde
and
xchg
sbb
pop
popa
cmp
test
xor
ds
je
call
imul
retf
dec
test
pop
jbe
xchg
ret
sub
call
push
imul
dec
xor
add
bound
inc
mov
cmps
pusha
adc
inc
test
cmp
pop
adc
out
mov
adc
inc
mov
xchg
xor
movs
jp
xchg
jo
(bad)
into
js
inc
dec
xor
outs
xor
xchg
nop
test
nop
sub
cs
imul
or
dec
outs
inc
inc
xor
leave
shl
jp
imul
ds
outs
push
popa
sub
sub
push
push
sbb
ins
push
das
xor
enter
pop
jno
add
mov
loop
cli
dec
push
xor
push
ret
outs
pushf
xor
shl
dec
push
sbb
add
add
popa
sub
mov
xor
sub
add
retf
popa
jo
jo
pushf
pop
dec
add
and
adc
ficom
fimul
inc
popa
add
fdivr
aaa
add
push
inc
push
push
push
inc
inc
mov
jne
es
add
outs
push
adc
inc
je
addr16
js
ins
ror
shl
xor
movs
add
js
mov
dec
add
jb
adc
test
enter
pusha
mov
mov
xchg
xor
jae
call
pusha
je
jne
pop
jns
jb
dec
xchg
fadd
mov
sbb
push
ss
xchg
outs
push
push
push
inc
js
gs
mov
ret
pusha
xchg
xchg
loopne
or
and
sbb
mov
cs
sbb
mov
push
pop
and
in
sbb
mov
inc
aaa
je
es
lock
aaa
jo
add
inc
dec
xor
cmp
cmp
xchg
push
push
pop
push
dec
cmps
xor
lods
dec
or
dec
xor
clc
sub
add
xor
je
ins
imul
shl
ins
outs
inc
xor
aaa
mov
es
data16
mov
jns
js
xor
js
out
add
add
dec
mov
pop
adc
push
sub
dec
lock
mov
xor
jbe
jl
push
mov
into
imul
inc
add
xchg
bound
push
inc
ins
sub
xchg
push
hlt
and
dec
mov
lock
cmp
xor
or
dec
sahf
xor
ret
icebp
scas
inc
sub
xor
ins
nop
jne
test
push
push
sub
jo
outs
outs
mov
out
jbe
dec
jbe
dec
mov
inc
cs
outs
inc
and
dec
inc
xchg
popa
xchg
adc
cli
ja
push
ins
cmp
inc
in
dec
jbe
push
inc
push
inc
push
jo
jns
clc
or
ss
push
cmp
xor
pop
test
jne
jo
rcl
dec
push
cmp
add
arpl
je
data16
enter
ins
loope
xchg
lock
push
push
and
test
ja
dec
call
push
xlat
das
enter
imul
inc
push
adc
call
fidiv
ror
xchg
pop
dec
sub
or
or
ins
dec
dec
into
pusha
pop
adc
push
or
dec
inc
fiadd
rcl
dec
xchg
stos
jle
dec
dec
cmp
fs
les
pop
push
inc
push
mov
jo
push
sbb
int3
outs
jmp
pop
and
dec
xor
fcmovbe
ss
push
jp
hlt
popa
outs
adc
push
adc
mov
or
dec
or
cmps
je
ins
dec
push
jo
inc
push
rcl
mov
test
data16
add
xor
call
push
ret
addr16
adc
je
push
hlt
push
add
test
(bad)
cmp
xchg
fdiv
clc
inc
xchg
loopne
push
in
jns
or
pop
test
inc
adc
push
xor
inc
rcl
ins
xchg
mov
adc
out
dec
and
call
frstor
dec
mov
cli
inc
push
push
push
ins
dec
popa
or
pop
fcom
xchg
in
inc
jo
dec
je
push
push
dec
pushf
xor
inc
and
cwde
les
push
push
push
mov
adc
cmp
imul
cmp
(bad)
dec
inc
jne
dec
jp
dec
push
push
add
shr
inc
jns
dec
rol
test
xor
push
imul
es
dec
je
inc
and
push
imul
mov
cmp
push
inc
push
and
mov
inc
cmp
dec
test
call
pop
pop
push
jp
xchg
add
sahf
js
mov
pop
dec
outs
dec
inc
xchg
aad
jp
dec
jmp
jne
xor
es
aam
xor
inc
adc
push
push
sbb
test
fs
pop
test
arpl
inc
loop
cmps
dec
je
mov
xor
bound
or
test
add
inc
push
loopne
mov
(bad)
retf
pop
ins
nop
jp
mov
adc
inc
cmp
dec
pop
xor
outs
mov
dec
push
out
mov
ret
add
jo
cmp
js
sub
sub
mov
mov
and
es
test
dec
adc
jne
push
dec
jno
inc
mov
ins
mov
aaa
dec
xchg
mov
ins
pop
jo
pop
pop
push
test
xor
jo
je
arpl
stc
mov
imul
jo
adc
ss
js
xor
xor
and
cmp
xor
push
fnstsw
inc
inc
imul
arpl
mov
pop
dec
pusha
mov
mov
shl
(bad)
test
dec
ins
dec
cmp
fs
sbb
es
aaa
and
dec
fs
pop
nop
or
or
push
cmps
xor
push
lods
ins
dec
jno
arpl
popa
test
ret
mov
ret
jne
mov
push
inc
leavew
shl
(bad)
js
push
mov
or
popa
pop
xor
mov
addr16
bound
jmp
retf
aam
or
sbb
inc
and
imul
jns
dec
xor
lock
in
adc
and
addr16
aaa
js
inc
jb
jns
aam
cmp
jns
imul
ins
add
or
mov
xchg
fcmovb
popf
cmp
inc
inc
jl
and
or
ficomp
push
inc
xor
and
int
xor
fs
and
sar
cmp
sub
bound
hlt
fisub
aad
cli
inc
cmp
test
inc
inc
inc
xor
jp
and
enter
mov
imul
jo
jne
adc
sub
cmc
push
jae
ja
push
outs
ins
call
adc
push
jb
adc
movs
aad
dec
loop
dec
dec
mov
sub
jmp
mov
dec
push
mov
cmp
(bad)
push
and
adc
push
or
ret
add
bound
es
aad
ret
cs
jae
xor
push
dec
jle
aam
add
jbe
push
or
mov
xor
cwde
test
inc
stos
push
xor
hlt
mov
add
sub
sbb
test
scas
and
push
jns
adc
dec
dec
bound
lods
loop
inc
inc
stos
push
fisubr
cmp
and
jae
xor
gs
ins
movs
inc
dec
push
cli
mov
inc
sub
push
xchg
jle
dec
dec
push
cmp
outs
fadd
and
lods
mov
jo
int3
imul
xchg
push
push
aaa
rol
jne
fs
inc
push
add
imul
ins
inc
or
cmp
out
xor
inc
push
shl
cmp
push
jle
dec
pop
mov
(bad)
push
adc
mov
and
adc
adc
pop
mov
int3
add
outs
dec
or
cmp
pop
xor
push
imul
mov
push
fldcw
xor
adc
or
bound
nop
push
addr16
mov
or
js
sbb
enter
enter
and
adc
or
movs
nop
add
(bad)
pop
ret
dec
js
ss
inc
imul
pusha
je
sbb
bound
mov
jbe
xor
adc
or
sub
and
ds
(bad)
out
and
int3
pop
outs
call
jbe
inc
stos
aaa
xor
or
es
mov
push
jo
(bad)
arpl
imul
push
xchg
dec
fmul
mov
or
push
push
inc
add
pushf
bound
jle
inc
add
dec
dec
xor
push
inc
inc
inc
push
cld
add
aam
inc
xchg
dec
je
push
or
int3
add
jb
and
call
dec
stos
cmps
arpl
push
adc
push
adc
je
inc
aaa
push
inc
gs
pusha
daa
or
inc
pop
test
push
inc
xchg
or
imul
jp
push
inc
cs
jne
pushf
inc
aaa
pop
add
jbe
push
inc
mov
outs
dec
jae
outs
adc
pop
adc
push
jmp
jo
dec
mov
retf
dec
cmp
xchg
arpl
and
add
js
jle
outs
inc
adc
xor
xor
push
xor
mov
push
enter
push
push
cmps
and
dec
xchg
add
and
mul
mov
ss
ins
push
inc
gs
pop
je
push
mov
enter
adc
xor
xor
out
push
call
bound
pop
push
movs
ins
enter
dec
arpl
dec
add
mov
xchg
mov
bound
ins
jp
bound
mov
ficom
jb
fadd
imul
in
adc
outs
les
movs
ja
(bad)
push
adc
outs
push
retf
mov
inc
stos
pushf
je
mov
push
push
push
clc
loope
hlt
or
dec
inc
dec
inc
xor
ins
adc
inc
into
xor
xor
push
sbb
cld
dec
aam
push
mov
outs
aaa
test
mov
inc
mov
pusha
inc
fs
add
mov
pop
and
fdiv
jae
popa
jbe
jne
sub
pop
add
sub
ins
aad
xor
xor
or
add
shl
dec
inc
in
fisubr
adc
aam
inc
dec
cld
jbe
stos
xchg
rol
ins
pop
push
ja
call
push
ins
nop
sbb
mov
push
mov
xor
xchg
and
xor
xor
fwait
lock
dec
fmul
in
int3
push
xor
or
scas
push
ret
ins
arpl
popa
add
adc
push
gs
and
push
pop
mov
(bad)
dec
add
dec
push
mov
xchg
adc
push
add
cli
mov
arpl
inc
cmp
mov
sahf
push
xor
outs
jno
pop
push
xchg
inc
pusha
sub
push
lock
jae
jmp
pushf
or
inc
jp
dec
xor
imul
push
mov
mov
movs
push
xor
pop
in
popf
push
xchg
and
fs
outs
push
jno
nop
inc
or
pop
mov
dec
mov
jbe
push
add
push
hlt
push
inc
push
xor
pop
or
xor
inc
mov
outs
popa
je
inc
dec
mov
xor
push
mov
pop
pop
retf
pop
cmp
test
dec
ss
inc
outs
jp
xchg
xchg
cli
cs
arpl
ss
dec
dec
ins
mov
push
ret
mov
inc
inc
ficomp
xchg
cmp
jb
sbb
add
push
xchg
movs
ins
cmp
push
adc
or
mov
call
xor
js
ret
mov
js
push
sbb
mov
sbb
icebp
dec
gs
jae
outs
addr16
inc
inc
add
and
sub
dec
inc
imul
adc
push
addr16
dec
es
xor
add
mov
dec
ins
inc
xchg
mov
push
cmp
mov
bound
test
mov
xor
rol
jb
lods
jmp
je
test
mov
fs
sahf
imul
data16
add
push
mov
sbb
xor
inc
and
adc
cmp
ret
adc
push
jo
mov
inc
je
cwde
sub
fs
dec
les
jp
mov
jmp
fs
xchg
sub
xchg
push
dec
out
push
hlt
mov
add
rol
push
push
sub
pop
push
xor
dec
jne
and
aaa
jo
ins
xor
xor
clc
push
push
imul
mov
shl
gs
addr16
jmp
add
rol
and
adc
inc
pusha
cmp
and
test
dec
push
out
adc
out
in
push
ins
push
xor
jp
cmp
inc
jmp
cmp
je
sbb
push
js
dec
mov
fwait
ins
adc
imul
dec
xor
or
cs
outs
dec
jo
imul
movs
push
xchg
jno
push
js
dec
fmul
mov
call
sbb
cs
test
push
pop
push
xor
es
or
jbe
imul
sub
sbb
push
add
inc
sbb
loopne
dec
and
or
add
(bad)
or
xchg
inc
ins
loopne
je
jae
jne
cmp
sub
dec
push
add
dec
mov
sub
cs
mov
lea
mov
les
pop
mov
inc
or
outs
pop
dec
ja
add
push
jle
dec
push
cmp
adc
xor
mov
jbe
fs
jp
add
vorps
add
dec
pop
inc
ins
xor
adc
imul
mov
jo
ins
imul
scas
mov
(bad)
jbe
lock
dec
inc
pop
jae
enter
pop
dec
add
or
add
outs
adc
mov
xor
jns
push
pop
sbb
and
dec
repnz
in
shl
xor
les
mov
push
inc
push
dec
stos
cmp
jb
jns
adc
mov
jp
mov
jp
cmps
je
ror
test
push
rol
cmp
mov
pop
xor
mov
sub
pop
push
push
push
(bad)
ror
push
or
and
or
and
gs
and
dec
test
scas
nop
push
xchg
mov
ja
push
ss
adc
cmp
sbb
xor
dec
inc
ins
and
adc
scas
add
jo
gs
(bad)
adc
ins
mov
repnz
inc
xor
xor
(bad)
or
inc
arpl
xor
push
dec
inc
or
out
or
je
mov
jo
fcom
inc
cmp
inc
mov
xchg
retf
dec
xor
add
add
pusha
in
dec
(bad)
mov
addr16
scas
xchg
movs
jae
push
push
or
push
inc
bound
addr16
outs
push
dec
mov
jb
dec
jno
ins
push
popf
popa
cmp
sub
dec
stc
jo
lods
push
dec
mov
push
mov
ret
pop
jns
pop
sub
inc
inc
adc
aad
pop
xchg
dec
jo
pop
mov
repnz
add
cmp
test
ins
mov
les
fiadd
inc
pop
dec
jbe
push
int3
ss
test
push
jae
sub
jp
test
adc
push
inc
cdq
dec
push
dec
push
push
rcl
dec
imul
pop
mov
and
out
xor
xor
push
push
test
and
je
sbb
mov
add
mov
push
sbb
enter
outs
inc
ins
pusha
adc
fimul
push
js
ins
adc
push
adc
inc
sub
mov
dec
je
dec
sub
sub
xor
dec
out
rcr
mov
ret
xor
push
sbb
les
adc
sub
or
xchg
add
add
cwde
or
or
jns
dec
mov
gs
push
mov
lods
ins
ins
dec
dec
outs
push
mov
inc
mov
loopne
inc
xor
cmp
cmp
in
shl
imul
data16
dec
jp
fidiv
or
bound
mov
xor
inc
push
add
push
inc
push
dec
out
ret
inc
jo
lock
lahf
pop
nop
push
push
dec
aaa
push
push
dec
push
bound
jp
cs
bound
scas
add
add
sub
sub
in
outs
bound
pop
je
or
dec
test
and
(bad)
sub
push
inc
gs
mov
es
dec
adc
dec
ja
js
mov
push
sar
xchg
xor
gs
lods
cli
data16
jbe
arpl
inc
add
popa
jae
jo
push
xchg
stos
sub
xor
xor
adc
xchg
shl
fdiv
and
arpl
pop
mov
inc
xor
jne
xor
jo
push
inc
cmp
xor
push
push
sbb
inc
jmp
cmp
popa
stos
xor
ss
pop
xor
loop
inc
dec
cld
ret
jb
mov
add
push
adc
jo
mov
bound
call
loop
pop
push
jbe
inc
xor
push
es
test
arpl
jne
push
xchg
loope
lock
push
ins
dec
inc
push
inc
inc
dec
bound
or
mov
inc
and
pop
je
and
xchg
lock
retf
inc
xor
dec
push
push
mov
bound
pop
sbb
into
xor
adc
ins
je
mov
xor
xor
dec
inc
push
outs
or
jb
add
pop
fisubr
dec
fs
xor
jl
outs
push
adc
sbb
out
jmp
xor
jbe
push
test
sbb
mov
inc
and
or
push
add
push
clc
inc
push
lds
call
sub
ins
mov
jp
dec
or
push
pop
dec
jae
push
sti
add
je
inc
push
inc
and
xor
clc
pop
out
ja
bound
enter
and
test
outs
dec
loopne
mov
ins
je
cmp
push
bound
je
xor
xchg
sub
dec
retf
ret
jmp
pusha
loope
inc
mov
xor
inc
adc
outs
dec
inc
add
ret
test
push
imul
cmp
mov
cmp
popa
ja
inc
push
fs
push
jo
jmp
mov
xchg
add
jno
movs
push
dec
cs
ret
add
dec
push
push
dec
push
ins
mov
mov
fadd
ret
xor
push
jp
adc
(bad)
inc
mov
xchg
dec
push
data16
ret
out
dec
dec
cmp
dec
cli
push
and
mov
ss
push
push
shl
pop
xor
jns
adc
fisub
dec
ja
jle
js
adc
pop
push
fs
xor
test
je
hlt
pop
js
mov
inc
mov
ja
inc
push
cmp
or
xor
pop
fs
jne
inc
and
push
or
mov
push
pop
je
and
jp
xor
dec
sbb
push
loop
jb
sub
jne
jns
inc
xor
loop
mov
push
outs
cmp
(bad)
inc
mov
xlat
inc
push
push
outs
push
push
stos
(bad)
cdq
add
rcr
pop
push
js
je
in
add
ret
push
mov
pop
push
push
xchg
je
dec
sub
movs
pop
cmps
mov
imul
dec
xchg
scas
adc
fisub
fidivr
aam
sub
jo
jo
push
dec
or
test
and
sub
(bad)
push
push
xor
inc
pop
hlt
imul
dec
add
xor
push
inc
outs
fs
int3
imul
or
ret
and
shr
shl
push
ror
data16
cmp
push
ins
(bad)
xor
add
jo
jbe
jno
xchg
mov
push
in
shr
inc
jns
je
inc
jp
add
and
(bad)
mov
inc
push
dec
inc
xor
xor
pusha
add
dec
inc
dec
inc
js
or
mov
gs
jb
mov
xor
mov
sub
push
push
mov
test
and
xor
out
mov
dec
xor
mov
sub
lods
dec
xchg
inc
xor
mov
add
loop
in
imul
fisubr
push
jmp
ror
fimul
push
lea
jo
cmp
lock
sub
lods
bound
xor
or
dec
cmp
push
push
out
jp
cwde
jp
dec
jbe
push
outs
mov
pop
sbb
ja
dec
ins
xor
sub
pop
xor
push
ins
pushf
xchg
pop
clc
bound
push
jo
xchg
xchg
sub
xor
dec
popa
fmul
sbb
pop
mov
pop
dec
popa
aaa
xchg
rol
lock
pop
outs
inc
push
ret
pop
and
mov
adc
xor
test
inc
jne
sub
ret
cld
push
push
mov
push
outs
ja
jo
leave
mov
dec
push
and
inc
imul
xchg
mov
jbe
dec
xchg
sbb
js
push
ja
not
loopne
xchg
xchg
xor
repnz
xchg
test
cmp
movs
mov
or
pushf
dec
ret
call
jbe
ror
dec
mov
call
enter
push
inc
rol
xor
dec
mov
movs
push
cmp
dec
dec
jl
xor
je
in
add
inc
add
inc
ret
fs
jmp
sub
enter
adc
mov
xor
mov
sub
inc
fs
inc
xor
mov
push
inc
push
cmp
xor
jb
mov
adc
sbb
mov
push
push
pop
push
push
ins
xchg
bound
push
pusha
mov
xor
retf
ret
xor
call
jge
data16
inc
ins
pop
add
push
mov
xor
jno
mov
push
sub
add
repz
or
push
dec
imul
push
jle
push
inc
xor
push
adc
shl
cmp
or
loopne
cwde
imul
mov
jmp
push
sub
pop
mov
xchg
jbe
push
hlt
dec
mov
dec
mov
xor
xchg
pop
clc
push
inc
cmp
dec
xor
aaa
dec
outs
imul
jae
imul
dec
fs
pop
push
bound
and
leave
cld
add
push
bound
fcom
sbb
movs
inc
fs
pop
push
mov
push
outs
pusha
dec
aaa
jb
and
xor
add
inc
inc
push
cwde
mov
push
cmp
xor
gs
jbe
xchg
push
mov
fisub
pusha
mov
push
popa
and
add
pop
in
xor
dec
jo
inc
add
xchg
xor
ins
xor
sbb
xchg
out
xor
mov
xor
push
mov
and
aam
add
scas
dec
push
adc
dec
inc
push
rcl
dec
inc
sub
cmp
xor
adc
mov
and
add
add
enter
push
popa
adc
dec
push
js
fadd
xchg
push
xchg
outs
xor
xor
mov
sub
push
arpl
loope
shr
jns
inc
cmps
outs
call
inc
sub
adc
xor
ja
adc
and
pop
inc
dec
data16
es
into
add
dec
push
outs
ss
push
mov
push
jbe
inc
aam
cmps
ins
ins
xor
bound
rcr
dec
leave
add
adc
mov
xor
mov
jno
mov
adc
hlt
cmp
push
inc
inc
push
pop
data16
in
dec
ins
jmp
xor
bound
repnz
xor
fmul
ins
dec
push
aaa
outs
test
adc
enter
inc
jno
leave
or
frstor
fdivr
ja
mov
mov
sar
push
adc
push
mov
enter
test
jae
pop
jne
and
mov
inc
pop
sbb
sub
cmp
mov
ins
dec
test
mov
movs
popa
xor
ss
adc
pop
inc
fs
leave
test
mov
mov
retf
loopne
cwde
pop
push
xor
sub
add
mov
xchg
(bad)
jno
inc
out
push
xor
adc
ins
push
inc
dec
push
test
xchg
xor
inc
and
aam
pushf
and
cmps
shl
test
cmps
inc
retf
mov
inc
pop
inc
fadd
ss
push
ins
push
je
jp
add
dec
data16
xor
xor
loopne
cmp
ss
add
jmp
mov
inc
push
out
inc
adc
xor
arpl
mov
and
inc
cmp
inc
jns
inc
mov
mov
mov
fs
push
adc
push
dec
ja
and
push
(bad)
dec
push
adc
dec
push
xor
mov
hlt
inc
dec
adc
sbb
push
ja
cmp
mov
xchg
call
mov
mov
imul
dec
inc
popa
jns
arpl
mov
sub
and
arpl
xchg
ss
push
sub
add
push
mov
xor
out
jno
dec
xchg
fadd
push
dec
sbb
bound
inc
push
or
or
xchg
push
sub
jno
or
test
fiadd
xor
inc
cmps
pop
fsubr
mov
bound
cmp
leave
movs
lea
out
xor
mov
fisubr
add
dec
popa
push
xor
jno
push
aam
xor
ins
push
push
imul
imul
popa
mov
jp
jb
push
(bad)
push
pushf
xor
hlt
js
dec
fwait
add
aam
jno
push
pop
es
inc
mov
xchg
inc
and
inc
jb
xor
push
lock
xor
push
xor
mov
sub
dec
inc
cmp
lods
mov
push
bound
inc
ins
jb
nop
jbe
adc
xchg
fiadd
or
dec
jp
dec
or
stos
push
rol
ja
push
inc
push
imul
jo
sub
dec
jp
push
ins
xor
xor
mov
ins
sbb
inc
inc
push
inc
jl
out
dec
std
xor
js
pop
ins
jae
jle
jbe
dec
dec
jp
ret
clc
addr16
push
aam
test
adc
inc
cmps
sub
push
movs
push
ss
cmp
dec
in
pop
aad
inc
call
xchg
cwde
jbe
sub
jbe
cmp
fcom
adc
push
and
push
xchg
ret
xor
aam
ss
sub
sub
push
cmps
jp
fsubp
xor
stos
fs
inc
ins
push
dec
jno
add
pop
and
mov
xchg
int3
add
pop
dec
adc
dec
push
push
mov
arpl
pop
loopne
push
inc
pop
ja
sub
inc
inc
mov
sub
or
or
ins
mov
sub
ins
push
xchg
dec
push
inc
push
pusha
enter
nop
push
loope
fdivrp
outs
fs
cld
sub
inc
xor
bound
rcl
dec
inc
jns
dec
xor
mov
add
leave
push
xor
or
push
mov
add
lods
fidivr
dec
imul
sahf
push
push
sub
adc
dec
dec
mov
xor
push
jle
jae
push
daa
and
push
sti
fnstsw
push
jae
xor
jns
xor
xor
mov
or
add
pusha
popa
stos
(bad)
mov
or
dec
sbb
jbe
movs
outs
push
mov
add
retf
mov
or
scas
imul
and
and
push
xor
mov
cmp
in
sub
aaa
or
mov
xchg
push
je
adc
dec
sub
mov
inc
sub
mov
ja
rcl
sahf
js
sub
mov
loop
nop
ins
mov
add
cmp
xor
inc
pop
and
inc
fidivr
or
inc
ins
cmp
push
mov
cmp
cmp
sbb
dec
enter
inc
cmp
push
push
mov
fcom
dec
jb
xor
or
(bad)
mov
adc
xor
imul
dec
or
mov
mov
cmp
cdq
push
test
push
jne
push
adc
mov
inc
push
out
inc
movs
call
popa
mov
(bad)
data16
add
mov
fs
push
xchg
push
je
lods
mov
push
jno
sbb
mov
add
outs
xchg
sbb
aaa
pop
add
dec
nop
mov
push
push
fs
fs
popa
es
and
je
inc
cmps
push
push
outs
pushf
sub
or
ja
pop
push
push
mov
call
add
push
adc
dec
push
pop
inc
jl
add
scas
inc
pop
shr
dec
je
jno
shl
sar
aad
popa
push
jns
inc
cs
loopne
sbb
retf
jno
and
enterw
les
and
les
push
push
jae
push
inc
inc
push
retf
add
xchg
test
hlt
push
xchg
dec
shl
dec
add
mov
mov
outs
adc
jno
outs
push
cmp
inc
shl
push
or
jp
xor
and
inc
xor
pushf
mov
inc
push
and
push
nop
ss
add
jb
stos
fadd
dec
shl
add
push
push
call
test
xor
arpl
dec
out
sbb
push
and
jne
sbb
add
xchg
add
xor
push
inc
push
xor
je
cmps
outs
(bad)
inc
test
cmps
push
cmp
inc
dec
and
push
js
dec
aaa
fwait
js
cmp
push
cmp
sub
mov
add
push
and
push
xchg
sub
int3
push
(bad)
push
into
inc
inc
xor
inc
push
sbb
call
push
inc
or
arpl
pop
and
push
mov
je
rcr
jne
imul
sbb
pop
pop
in
lock
xor
ins
inc
or
adc
jns
add
add
xchg
sar
arpl
push
and
or
xchg
ins
fsub
test
sub
inc
dec
push
mov
mov
movs
xchg
or
dec
push
jns
aaa
inc
inc
and
xchg
push
retf
stos
mov
(bad)
inc
arpl
push
(bad)
pop
jecxz
add
ss
int3
dec
gs
push
dec
shl
bound
(bad)
push
jbe
mov
or
xor
push
(bad)
dec
push
cmp
mov
repnz
add
outs
imul
inc
add
push
dec
cmp
jno
enter
dec
icebp
clc
inc
add
cmp
push
xor
and
inc
arpl
test
inc
cmp
jb
leave
ret
push
lock
mov
dec
xor
data16
jb
push
cld
(bad)
push
push
and
cmp
push
inc
lods
lods
push
popa
nop
cmp
ss
shl
ins
rol
push
popa
xor
test
xor
inc
sub
push
add
cmp
(bad)
cmp
sbb
je
dec
ror
call
fwait
loope
test
aaa
outs
fisttp
push
pop
shl
imul
movs
dec
mov
inc
adc
push
jno
xor
push
(bad)
jbe
dec
dec
push
add
adc
jbe
mov
fsubr
sub
mov
xchg
mov
pop
push
jp
push
imul
in
xchg
xor
cmp
fadd
jp
push
cmp
arpl
sub
test
xor
ds
xor
int3
xor
pop
dec
push
jo
(bad)
shl
inc
cwde
ins
jbe
fsub
adc
call
sbb
gs
cmp
loope
ins
test
xchg
pop
inc
outs
xor
js
jo
xchg
retf
test
ret
inc
push
mov
arpl
push
jl
dec
add
dec
pop
lock
mov
pop
loop
outs
imul
add
inc
aaa
adc
sbb
push
mov
sub
cli
cmp
inc
mov
pop
pop
jp
or
data16
jmp
rcr
push
jp
or
adc
in
call
arpl
outs
movs
xor
add
(bad)
inc
cmps
push
jbe
call
mov
popf
dec
jae
pop
addr16
xor
dec
ja
push
dec
mov
test
xchg
inc
xchg
inc
inc
jmp
cs
ja
xor
push
pop
into
inc
adc
ss
ror
inc
push
in
xor
gs
xchg
push
sub
data16
jo
or
shl
dec
pop
push
pop
xchg
mov
rcl
cwde
pop
dec
inc
in
pop
mov
or
push
aaa
hlt
data16
or
mov
jmp
outs
adc
push
je
push
pop
imul
inc
data16
xor
mov
stos
test
cmp
movs
jo
dec
dec
jb
mov
test
sbb
fisub
xchg
cli
mov
mov
dec
xor
je
and
data16
ins
jb
dec
push
mov
cmp
cmp
xchg
jmp
ja
dec
ins
push
cmp
sahf
cmp
add
mov
test
add
adc
data16
push
xor
icebp
mov
je
push
fidiv
loopne
and
ins
inc
js
lods
xor
add
inc
test
dec
push
xchg
fs
dec
repnz
and
jp
outs
outs
enter
sbb
mov
jo
rcl
push
mov
ja
jo
or
sbb
cmp
jo
dec
jns
cmp
mov
in
(bad)
ins
addr16
movs
cs
dec
push
fs
ds
or
aam
inc
sbb
push
inc
outs
dec
or
loopne
mov
test
adc
push
daa
or
or
test
rol
mov
mov
ins
cmp
imul
or
sub
add
inc
jne
push
retf
sar
push
push
xchg
jp
dec
js
and
ss
outs
outs
ret
sub
sub
dec
pop
jae
pusha
push
hlt
cli
imul
add
dec
xchg
push
push
push
cmp
dec
outs
push
adc
and
push
gs
push
sub
dec
sbb
ss
dec
loopne
jl
test
jns
ins
xor
xor
adc
outs
pushf
es
mov
push
mov
pop
loope
rol
push
sub
call
add
inc
jo
add
adc
mov
outs
aaa
inc
sbb
adc
or
xor
jne
sbb
and
mov
push
push
popa
mov
add
push
push
es
jo
dec
adc
adc
or
pop
xor
ja
mov
ror
xor
xchg
adc
cmp
loop
dec
inc
or
push
inc
loopne
test
pop
or
fcom
mov
nop
dec
push
rcl
inc
ins
inc
mov
pop
push
fidivr
test
cs
cmp
or
fidivr
xor
or
sub
xor
jl
push
xchg
aaa
adc
push
jno
sub
imul
ret
ins
push
pop
sub
push
xchg
scas
push
jle
mov
dec
pop
outs
push
pop
mov
es
push
scas
in
mov
arpl
jbe
add
mov
jb
xor
adc
test
adc
jo
and
jae
inc
mov
and
test
js
sub
cmp
nop
mov
jns
cld
js
add
inc
inc
jae
mov
xor
fistp
sub
stos
xor
adc
dec
inc
pushf
xchg
pusha
jo
pushf
pop
sub
dec
arpl
add
or
fs
and
ss
sub
push
or
call
ret
and
xor
dec
pusha
fs
fdiv
pop
jno
retf
pop
pop
ja
pop
pop
push
movs
ins
xchg
outs
adc
or
and
push
mov
push
xchg
dec
inc
inc
in
mov
push
ror
push
dec
xchg
pop
xor
and
ficom
addr16
imul
and
xchg
repnz
push
ss
or
cs
mov
inc
push
bound
dec
nop
bound
fsubr
fs
ins
jo
push
sbb
call
mov
push
bound
xor
lods
inc
dec
in
xor
pushf
sub
jno
add
xor
bound
dec
push
push
adc
push
jp
ins
js
push
add
lock
pop
gs
dec
ret
or
mov
dec
imul
dec
push
dec
outs
mov
mov
fsub
add
push
xor
movs
js
sbb
rol
jb
fs
mov
xor
xor
dec
(bad)
push
test
add
data16
sbb
xchg
data16
add
jp
dec
xchg
push
jbe
mov
adc
repnz
inc
and
stos
inc
inc
sub
repnz
pop
pushf
inc
xor
jo
mov
outs
sbb
xchg
jp
mov
fisubr
aam
inc
inc
fdiv
push
pop
lods
sub
dec
jo
push
dec
inc
and
xor
inc
push
clc
mov
inc
dec
xor
inc
popa
xor
ins
push
pop
and
push
push
adc
inc
dec
imul
out
mov
rcr
xor
cmp
push
arpl
cmp
xor
cmp
inc
in
jbe
ins
dec
add
push
mov
push
or
sub
outs
dec
nop
sbb
jns
ss
inc
outs
mov
js
inc
pop
int
or
inc
repnz
imul
and
jno
xchg
and
add
out
mov
jb
cmp
cmp
push
ret
ja
ss
dec
inc
dec
mov
aam
adc
outs
or
push
or
inc
pop
inc
or
adc
inc
in
stos
or
add
js
pop
popa
xor
inc
push
xor
nop
adc
loopne
js
push
cs
push
sbb
enter
shr
or
dec
inc
push
and
dec
xor
adc
fisubr
jmp
jb
ins
bound
xchg
mov
movs
cmps
gs
outs
add
and
mov
inc
pop
inc
xor
stos
push
jne
data16
dec
shr
jns
stos
inc
cmp
add
xor
push
adc
mov
popa
ja
sub
dec
ja
pop
dec
bound
or
dec
xchg
loopne
inc
inc
inc
mov
cli
inc
xor
movs
add
adc
push
xor
sbb
popa
mov
adc
add
ja
cmp
inc
jne
cld
push
push
loope
xor
jno
int3
jp
push
adc
sbb
push
inc
pop
mov
xchg
pop
ds
push
jb
xchg
in
inc
mov
call
or
push
jne
jbe
es
adc
add
inc
ins
outs
add
push
fmulp
push
lods
adc
gs
into
jb
mov
push
hlt
cmp
mov
sbb
inc
addr16
shl
cli
inc
and
test
mov
xor
fdivr
push
xor
sub
and
mov
xchg
push
sub
and
sub
scas
push
add
dec
jno
mov
sbb
xor
xchg
and
jns
push
mov
es
xor
ins
inc
fs
push
and
and
inc
mov
cmp
dec
xor
push
push
or
(bad)
inc
or
imul
push
add
jo
inc
push
jo
xor
sub
int3
xor
adc
das
inc
dec
push
dec
jbe
jae
xor
add
mov
add
sub
dec
test
inc
push
inc
jno
mov
nop
loopne
fsub
fmul
and
xchg
dec
push
push
dec
push
mov
jns
ins
mov
pop
adc
xchg
add
jae
ja
jge
sub
jo
pop
xor
mov
xor
jp
add
not
xor
mov
inc
(bad)
fld
sub
jp
(bad)
sub
imul
cmp
js
jb
push
leave
fs
push
xchg
loop
mov
ins
pop
addr16
ja
in
scas
sub
xor
push
and
xchg
cli
pop
and
dec
or
jmp
mov
bound
push
mov
or
test
sub
bound
add
je
xor
dec
cmp
push
push
xor
pop
add
int3
ins
xor
cmps
outs
xor
ss
jno
push
pop
push
fld
mov
xchg
adc
push
je
xor
outs
sbb
dec
xor
xchg
dec
outs
stos
xor
jl
ss
push
gs
rol
aas
fadd
ja
(bad)
ins
data16
jo
jbe
bound
ins
imul
push
std
bound
pushf
fs
jp
jo
dec
data16
aad
enter
mov
outs
inc
test
sbb
mov
jbe
ins
lock
or
sub
test
adc
push
mov
dec
push
add
ja
arpl
jno
jns
test
outs
push
mov
aam
mov
aam
push
jno
add
and
mov
or
or
dec
cmp
xchg
adc
test
popa
push
ss
sbb
push
jbe
push
and
and
mov
push
es
xor
xor
fadd
sub
jp
sahf
push
popa
xor
and
call
sub
imul
rcl
es
mov
cmp
cmp
and
cmp
shl
jb
mov
or
outs
push
inc
outs
aaa
push
xor
mov
ret
sub
sub
inc
sub
in
xchg
lods
cmp
and
add
and
inc
popa
and
and
test
mov
jo
or
push
inc
inc
gs
or
bound
add
sbb
jae
dec
sub
addr16
dec
push
dec
add
push
dec
jo
or
inc
pop
outs
or
jno
jp
xlat
xchg
xor
sub
inc
js
dec
mov
adc
mov
push
ja
cmp
int3
je
and
push
imul
dec
cmp
jb
int3
mov
sub
push
jne
inc
mov
and
adc
mov
pushf
push
and
inc
dec
test
bound
mov
cs
sbb
mov
cmp
xchg
jae
pop
pop
out
ss
cli
outs
loopne
es
sbb
push
push
adc
pop
and
int3
jo
pop
(bad)
dec
dec
and
push
dec
push
push
fsubr
inc
dec
je
sbb
outs
xor
jp
outs
xchg
xor
lds
push
pop
dec
dec
add
(bad)
retf
mov
pop
ss
or
cli
xor
add
fidiv
push
sub
push
inc
jne
(bad)
xor
pop
push
movs
bound
sbb
jns
push
push
out
xor
not
outs
imul
push
push
push
xchg
pop
jp
jo
ja
dec
jae
jmp
bound
les
js
cmp
and
cmps
inc
adc
fidiv
lea
mov
scas
inc
jns
pop
std
adc
and
ins
aaa
ja
or
(bad)
in
sbb
pop
adc
push
jne
inc
inc
dec
xor
imul
adc
push
jbe
dec
sub
xor
mov
les
jae
addr16
mov
aam
outs
out
jns
push
add
adc
add
dec
cld
inc
cwde
inc
or
ds
jb
xor
and
dec
inc
je
add
jmp
pop
or
int3
jp
inc
ja
popa
rcr
retf
pop
inc
adc
add
sahf
dec
cwde
sub
cmp
push
xchg
pop
aaa
mov
push
outs
aaa
jle
mov
out
mov
push
jbe
and
xchg
jno
mov
fs
inc
inc
mov
adc
jmp
adc
bound
ins
inc
push
mov
jns
out
xchg
pop
xor
sub
mov
pop
mov
cmp
dec
xchg
push
inc
dec
mov
inc
pop
call
push
mov
adc
clc
arpl
stos
jb
mov
cli
dec
inc
add
xor
xor
sub
stos
add
dec
fcomp
xor
mov
add
retf
popa
push
retf
add
nop
pop
lock
rol
jo
icebp
push
cwde
clc
xor
push
dec
push
inc
push
dec
pop
dec
xchg
mov
mov
js
jb
adc
dec
push
enter
jo
cli
(bad)
xchg
dec
push
and
add
(bad)
mov
call
popa
inc
sub
arpl
push
dec
adc
mov
and
out
add
push
outs
xchg
push
fs
push
movs
xchg
mov
mov
push
shl
outs
enter
add
jne
js
push
dec
dec
push
dec
jae
jns
ret
sub
pop
aaa
push
ja
jbe
mov
je
inc
mov
inc
fadd
movs
push
dec
jb
in
push
pop
dec
mov
inc
je
ja
cmp
inc
fcomp
jb
popa
ds
movs
int
add
push
dec
push
into
dec
dec
xchg
dec
and
sub
pusha
inc
js
je
mov
pop
push
mov
loopne
dec
je
push
bound
popa
and
mov
imul
inc
outs
push
inc
imul
pop
adc
enter
or
jo
in
bound
or
and
dec
jae
inc
push
sbb
retf
sub
dec
aaa
push
cld
push
test
outs
gs
xchg
dec
cmp
enter
into
imul
push
and
jo
dec
inc
and
lock
push
jno
jb
add
inc
dec
into
inc
lea
aaa
ins
jbe
xor
rol
xor
dec
push
je
nop
ds
in
lock
shr
or
lock
cwde
and
mov
inc
bound
xor
jns
adc
aaa
sub
push
je
xor
jno
xchg
xchg
add
sub
cs
xor
xor
inc
shr
jb
mov
add
aam
push
enter
in
push
fs
push
inc
inc
nop
inc
nop
ret
mov
call
cmp
(bad)
inc
arpl
push
xchg
out
push
jno
cmp
cmp
ins
jb
xor
(bad)
aam
inc
adc
push
adc
dec
enter
mov
fdivr
push
xor
ja
jp
ja
pop
inc
push
xor
test
or
or
xchg
loop
add
inc
je
enter
mov
inc
push
outs
ins
push
inc
jno
outs
or
inc
fcom
loop
add
dec
xor
bound
push
mov
outs
push
in
adc
mov
push
xor
push
js
ins
jne
push
adc
push
inc
cmp
retf
mov
mov
movs
in
inc
outs
dec
dec
jbe
je
inc
loope
clc
mov
sub
cld
dec
aaa
ret
adc
pop
and
jno
test
inc
jp
ss
sar
sub
popa
popa
mov
dec
test
js
inc
jo
push
pop
add
loopne
mov
js
outs
ror
bound
inc
or
push
ins
pop
mov
sub
js
ret
jb
dec
push
ss
add
sub
xor
add
cmps
fidiv
sbb
push
xor
stos
jo
outs
inc
and
ins
dec
jne
mov
aaa
bound
dec
imul
ins
push
cld
add
inc
jb
xchg
lods
add
add
into
fs
push
xchg
nop
data16
jbe
test
jmp
nop
mov
cs
call
xor
dec
les
push
add
inc
(bad)
aaa
imul
(bad)
jb
cmp
sbb
outs
imul
sub
add
inc
jo
imul
rcr
ins
ja
(bad)
arpl
push
push
sub
out
leave
mov
mov
xor
dec
je
add
inc
arpl
xor
das
jb
(bad)
data16
dec
inc
inc
inc
es
adc
and
test
test
mov
adc
js
xor
inc
xchg
dec
mov
push
or
cmp
arpl
ins
ins
pop
movs
jmp
pushf
jns
xchg
mov
inc
xor
jmp
jo
or
ret
arpl
push
jne
pop
or
jb
inc
data16
adc
cmps
arpl
jne
xor
mov
push
inc
dec
out
outs
dec
dec
enter
aaa
movs
mov
pop
push
xor
es
jbe
inc
push
jp
push
xor
cs
xor
nop
sbb
adc
test
xor
jp
sbb
and
call
test
xor
sub
add
add
test
call
mov
push
adc
push
cmp
or
lods
sub
xor
clc
jmp
outs
loopne
dec
jbe
inc
dec
or
mov
add
mov
loop
jp
push
jp
pop
(bad)
ins
add
retf
in
xor
dec
jl
add
add
push
popa
fdiv
push
xor
sahf
bound
es
retf
inc
xchg
mov
es
xor
dec
or
xor
push
retf
adc
sub
call
adc
int
outs
ss
and
add
adc
je
jo
push
xor
ins
jne
sbb
xchg
xchg
sub
push
pop
inc
es
inc
jno
dec
push
cwde
lods
add
inc
push
or
adc
ins
xor
fcom
hlt
push
cs
push
inc
push
dec
outs
add
shl
pop
sub
gs
push
jno
dec
xor
es
retf
jbe
je
jp
sbb
pop
ja
gs
into
xor
addr16
rcl
pop
ret
ror
and
push
repnz
hlt
xor
fwait
call
mov
sub
mov
scas
xchg
push
loopne
dec
inc
addr16
sub
sbb
ins
xor
call
cmps
je
dec
inc
and
inc
push
fisttp
pop
and
push
out
xor
outs
inc
push
xor
or
push
pop
push
inc
retf
cmp
dec
and
and
in
popa
cdq
mov
in
adc
ins
cld
lds
test
inc
jbe
test
adc
xor
lods
xchg
cmp
adc
add
dec
or
xor
mov
push
mov
dec
mov
inc
xchg
js
xchg
jecxz
fidivr
pusha
push
test
inc
push
imul
add
jb
xchg
add
rol
or
add
fsubr
pushf
imul
je
mov
bound
js
xor
dec
inc
mov
arpl
bound
or
push
dec
push
adc
dec
push
dec
mov
xor
es
dec
add
dec
inc
es
and
sub
lock
pop
pop
repnz
dec
dec
dec
push
leave
dec
sbb
jbe
pop
adc
lods
xor
ret
popa
jb
inc
dec
push
test
xor
bound
dec
imul
or
test
dec
imul
dec
arpl
sbb
sbb
dec
xor
dec
jns
hlt
pop
inc
dec
add
xchg
movs
or
xor
xor
add
xor
inc
mov
sub
out
and
and
popa
jb
(bad)
or
inc
inc
ficom
jb
mov
inc
ins
fsubr
sbb
dec
sub
mov
and
mov
add
push
xchg
xchg
inc
cdq
adc
inc
cmp
dec
ret
inc
and
loop
xor
pusha
inc
ins
adc
ficomp
mov
ins
dec
cs
fimul
xor
add
mov
bound
(bad)
ins
mov
js
dec
addr16
or
popa
mov
mov
imul
mov
adc
into
mov
add
test
push
mov
outs
or
or
test
mov
js
lods
mov
push
adc
loopne
inc
cmp
imul
cld
mov
inc
aaa
dec
imul
dec
dec
dec
add
mov
or
in
out
cs
pop
pop
test
jmp
pusha
adc
lock
push
add
push
xor
dec
adc
jns
dec
mov
adc
loopne
cmp
sbb
mov
or
dec
lods
ss
adc
mov
das
xor
dec
dec
jp
inc
jae
jno
push
movs
adc
add
adc
push
dec
cld
nop
and
loopne
test
xor
sbb
pop
sub
(bad)
fwait
mov
call
jbe
outs
pop
push
xchg
cdq
clc
push
dec
cmp
loopne
nop
mov
or
fnstsw
and
data16
mov
push
dec
xchg
stos
inc
pop
in
xor
xchg
fisubr
push
outs
popa
jne
dec
push
mov
cmp
xor
xor
add
mov
dec
xor
xor
mov
sahf
daa
fs
push
outs
mov
cmps
fcom
and
add
ins
add
xor
jbe
in
mov
sbb
shl
cmp
(bad)
fs
imul
push
push
mov
push
je
xchg
imul
adc
inc
jp
test
sub
bound
push
aam
jmp
es
mov
outs
test
dec
cs
cli
call
ret
pop
dec
jle
xor
push
pop
inc
adc
pop
inc
pusha
ja
enter
data16
addr16
jae
ins
jbe
aaa
push
dec
dec
adc
inc
push
and
dec
push
mov
sbb
ficomp
imul
xor
jmp
inc
add
xor
inc
loope
lods
dec
xor
test
jbe
or
mov
add
and
dec
pusha
jl
cwde
dec
(bad)
lock
jno
or
jne
mov
cmp
inc
sub
push
and
add
dec
push
and
retf
cmp
add
ret
inc
add
or
xchg
ja
mov
test
imul
pop
xor
mov
dec
pop
retf
sbb
aad
retf
jb
xor
dec
clc
push
sub
ss
dec
mov
pushf
ins
add
movs
nop
cs
repnz
adc
mov
mov
push
adc
cld
mov
js
mov
push
jns
inc
aam
xor
pop
test
ds
inc
dec
pop
shl
xchg
push
xchg
xor
loopne
inc
je
addr16
push
mov
inc
js
inc
mov
mov
adc
push
jne
add
test
and
popf
sahf
ins
dec
jb
sahf
inc
imul
dec
in
xor
outs
xor
adc
jo
jmp
jns
xor
push
pop
arpl
push
xor
dec
enter
pop
dec
or
add
ss
push
add
push
ins
add
push
cmp
mov
xchg
jmp
xor
dec
dec
xor
adc
pusha
xchg
push
sbb
push
adc
sub
pushf
jmp
or
cmp
shl
and
jo
repnz
(bad)
aaa
adc
cmps
xor
inc
push
lods
inc
ss
outs
cmp
mov
jae
dec
add
(bad)
or
test
inc
addr16
inc
stos
inc
ja
out
xor
hlt
pop
lock
js
je
je
fist
popa
outs
jo
jns
pop
in
gs
adc
xchg
shl
cld
fidiv
(bad)
dec
push
inc
shl
push
hlt
(bad)
inc
dec
add
xchg
xchg
mul
test
mov
sub
cmp
push
add
dec
je
dec
and
push
push
xor
pop
add
popa
sub
mov
ss
inc
add
test
sahf
outs
xor
mov
inc
add
loope
sub
mov
test
ss
inc
cwde
adc
pop
movs
sbb
aaa
sub
bound
jl
mov
and
dec
xor
sbb
push
dec
jbe
mov
inc
enter
xchg
xor
cmp
xor
mov
retf
not
(bad)
inc
add
sub
mov
sub
sub
das
imul
add
xor
or
inc
fdiv
mov
jae
dec
and
add
adc
xor
jo
mov
push
dec
or
lock
mov
mov
push
lods
push
ins
inc
jne
loop
add
push
bound
test
xchg
sbb
xor
adc
mov
cmp
dec
dec
(bad)
ja
ror
sbb
push
or
shl
add
jp
dec
xchg
call
outs
mov
pop
leave
mov
dec
sahf
xor
clc
inc
daa
data16
imul
inc
ja
adc
in
dec
dec
gs
or
test
mov
pop
jo
jo
inc
dec
js
jo
pop
dec
push
ret
push
xor
sahf
inc
in
and
push
push
adc
pop
sub
je
mov
mov
dec
xor
dec
jl
add
adc
or
sub
sbb
pop
push
push
add
push
jmp
jno
sub
mov
dec
sub
pushaw
push
or
or
mov
outs
je
loope
push
ds
outs
xor
push
inc
dec
push
xchg
jns
fs
pop
sar
or
xor
and
push
push
es
adc
and
call
js
push
and
add
inc
dec
bound
gs
mov
and
jb
loopne
inc
jo
pusha
xchg
enter
mov
pop
pop
and
aaa
and
push
push
mov
and
inc
aam
pop
add
mov
xor
sub
aam
mov
xor
pop
aaa
pusha
xchg
stos
adc
inc
cli
stos
xor
adc
ins
enter
push
mov
inc
pop
push
ins
dec
rcl
push
outs
sub
and
jbe
arpl
mov
jns
inc
or
xor
push
push
push
cs
jb
aaa
nop
xor
jb
mov
movs
inc
adc
and
in
ins
fadd
adc
adc
mov
jbe
inc
xor
popa
push
cmp
push
xor
sbb
arpl
jns
call
shr
pop
inc
hlt
pop
outs
outs
dec
lock
add
es
push
shl
dec
inc
push
int3
aad
mov
data16
sub
cli
inc
dec
not
bound
pushf
push
pop
popa
jo
mov
xor
push
push
inc
mov
pop
stos
mov
xor
ss
aam
pusha
push
bound
sub
nop
add
sub
sub
mov
adc
sub
and
je
aaa
popa
add
push
and
test
gs
gs
les
ds
je
dec
test
data16
mov
pop
xchg
push
inc
mov
push
cmp
push
or
dec
jbe
in
push
int3
push
inc
mov
aaa
push
es
(bad)
dec
mov
jns
cmps
jo
jbe
or
movs
push
out
inc
add
push
push
mov
cli
xor
ja
outs
xor
jb
sbb
ja
and
ins
cmp
or
cmp
push
jb
xor
or
mov
jbe
gs
and
xor
add
ins
fdivr
push
push
xor
stos
in
dec
sahf
mov
jl
bound
(bad)
imul
pop
sub
xor
xor
push
repnz
push
mov
ins
inc
or
dec
pop
inc
lea
add
jns
pop
push
dec
inc
or
add
or
push
je
bound
imul
adc
pop
call
inc
les
xchg
and
cmps
ss
and
test
cmps
scas
jne
gs
push
push
jne
dec
push
and
icebp
fwait
push
gs
push
xor
inc
clc
fisub
push
xor
push
and
mov
push
push
mov
mov
outs
ja
mov
mov
dec
test
xor
aaa
or
test
inc
jo
pop
jae
inc
test
mov
dec
push
aaa
fcmovbe
xchg
je
stos
mov
add
shl
sbb
aam
add
xchg
(bad)
imul
xchg
jo
xchg
push
sbb
mov
or
and
inc
sub
and
pop
cmp
dec
push
sub
jo
sub
ins
dec
or
lods
cmp
icebp
adc
mov
bound
sbb
inc
outs
mov
test
fcomp
add
mov
fs
push
es
test
dec
outs
adc
jmp
call
lods
xchg
movs
and
aaa
or
push
popf
xor
push
push
xchg
movs
mov
jbe
push
sbb
into
fcom
lock
fs
xchg
cmps
mov
adc
and
xchg
add
adc
mov
push
lock
dec
inc
xor
xchg
dec
fdiv
shl
jae
cmp
push
dec
dec
push
rol
je
test
push
arpl
jp
adc
imul
or
sub
or
xor
pop
imul
test
les
add
push
dec
and
push
cli
clc
retf
dec
mov
pusha
add
inc
mov
popa
clc
mov
ror
ins
xor
push
sub
xor
in
xchg
ins
test
inc
fcom
shr
retf
mov
mov
push
jno
pop
dec
dec
sub
test
inc
ja
call
enter
jbe
add
jo
push
push
or
push
push
imul
mov
push
outs
push
xor
daa
mov
xor
inc
retf
sub
inc
fimul
adc
or
sub
sub
push
jno
int3
and
outs
add
or
dec
dec
push
and
sub
xor
push
add
into
push
test
sub
push
mov
push
imul
push
push
jl
mov
jbe
push
inc
xor
cmps
mov
push
lods
jp
sbb
push
inc
ja
jns
dec
je
adc
ins
mov
lods
xor
bound
jno
add
shl
or
pusha
dec
add
test
faddp
pop
aam
cmps
jp
ficom
and
mov
cmp
push
add
inc
push
inc
push
mov
inc
cli
push
xor
ins
ins
sbb
or
loopne
push
sub
fmul
imul
or
jle
push
sbb
xor
jne
mov
sbb
push
dec
xor
and
ss
out
or
aam
push
dec
adc
jb
jb
or
fwait
mov
dec
mov
inc
js
push
gs
mov
sbb
inc
ss
and
jp
push
sbb
inc
xor
xor
imul
dec
cmp
dec
ret
test
ss
mov
push
rcl
mov
fadd
int3
ins
addr16
add
dec
or
outs
and
addr16
add
inc
xor
mov
popa
arpl
dec
jno
push
(bad)
sbb
push
xor
or
pop
pop
pop
nop
push
xor
repnz
hlt
push
xor
fdiv
cmp
cmp
adc
dec
mov
adc
push
and
or
scas
dec
lds
inc
movs
sub
push
sub
addr16
sbb
mov
dec
adc
clc
inc
push
inc
cmp
xchg
dec
push
inc
dec
xor
(bad)
fs
xor
cmp
lock
jbe
adc
popa
sub
in
mov
pop
and
sub
xchg
lea
hlt
hlt
push
call
es
cmp
shl
and
rol
push
mov
jns
into
cli
dec
add
cmp
xor
gs
rcl
mov
xchg
movs
ins
jmp
data16
xor
sub
inc
sub
add
or
pop
push
push
adc
(bad)
push
xchg
fcom
shl
pop
mov
jle
fild
dec
je
push
and
outs
push
xor
or
xor
push
int3
js
add
(bad)
push
gs
sbb
aam
adc
mov
outs
arpl
jo
test
or
fs
cmp
inc
jns
dec
bound
adc
xor
inc
sub
mov
ja
aaa
inc
or
inc
xor
jo
sub
dec
imul
hlt
xor
inc
push
bound
or
imul
push
addr16
pop
and
add
sub
inc
ins
pop
and
outs
sub
push
mov
pop
cmps
outs
fdiv
in
je
dec
and
inc
push
dec
jp
and
test
sbb
and
dec
out
adc
mov
dec
inc
mov
inc
jbe
dec
in
call
fs
fwait
mov
pushf
sbb
retf
and
and
jns
mov
int3
ds
ja
nop
add
adc
xor
push
inc
sub
stos
scas
push
dec
scas
push
aam
push
or
mov
loop
xor
push
lods
cmp
inc
xor
add
push
sbb
adc
xchg
xor
mov
or
mov
sbb
jp
mov
pop
dec
ins
dec
bound
push
xor
js
xor
cmp
or
inc
inc
test
sbb
mov
xor
dec
dec
aaa
outs
inc
mov
dec
mov
adc
arpl
add
dec
je
adc
jne
cld
inc
pop
add
xchg
ins
jb
dec
push
sub
outs
push
adc
pop
and
xchg
dec
jb
sbb
add
imul
inc
push
cmp
adc
add
ins
and
in
pop
add
bound
imul
fadd
out
cmp
push
sub
mov
data16
retf
enter
fld
xor
je
dec
inc
jne
adc
sbb
jbe
adc
or
adc
js
data16
and
push
sub
jmp
cmp
pusha
xchg
inc
les
je
inc
outs
dec
ret
dec
inc
sub
lods
bound
push
push
movs
mov
pusha
clc
inc
inc
pop
push
xor
or
or
cmp
xor
dec
push
ins
add
cdq
dec
mov
adc
mov
arpl
fadd
push
lods
xor
cs
inc
jae
aaa
dec
les
push
stos
test
call
enter
add
or
dec
inc
ins
popa
loopne
cmp
sbb
push
ins
push
dec
add
sub
arpl
mov
push
push
lods
cld
push
and
aad
enter
jae
jns
aaa
fs
div
pusha
and
pop
push
sub
fsub
xor
mov
inc
pop
push
dec
ins
fidiv
or
jb
pop
imul
inc
call
lods
dec
push
sub
dec
bound
jp
inc
add
int
nop
stos
jbe
xchg
bnd
or
ret
and
push
imul
dec
push
sub
or
popa
rol
outs
sbb
sbb
(bad)
pusha
jo
hlt
add
imul
fs
mov
pop
cmps
dec
xor
cmp
dec
out
adc
aam
jne
inc
dec
les
inc
add
sub
dec
idiv
push
dec
or
fisttp
push
dec
xor
into
imul
sbb
pop
xchg
and
or
jo
add
dec
ins
jo
inc
stos
mov
xor
fwait
jo
out
ret
add
jne
adc
or
and
inc
xor
xchg
dec
fwait
or
inc
or
push
fsub
inc
push
outs
cld
xor
ins
push
aaa
in
inc
adc
xor
jb
stos
push
clc
ins
xchg
mov
je
inc
sahf
ss
sub
mov
test
cmp
cli
or
outs
sub
call
imul
xor
xor
cmp
outs
pop
sbb
push
mov
data16
fsub
add
retf
pop
jns
mov
dec
sbb
xlat
push
ret
dec
cmp
sbb
mov
cmp
push
les
daa
or
ss
ins
es
mov
pop
xor
test
push
jp
sub
cmp
pop
jno
pusha
or
xor
shr
outs
popa
push
inc
xor
sub
xor
push
pop
(bad)
je
imul
jbe
and
jbe
push
dec
fwait
dec
or
or
xor
xor
mov
and
add
test
pop
xchg
aam
dec
jle
lock
mov
dec
and
into
lods
xor
or
imul
xor
int3
pop
sub
imul
int
je
xor
dec
and
sub
lea
sbb
adc
jp
jno
aaa
adc
pop
mov
inc
jns
xor
dec
jmp
xor
clc
pop
add
inc
int
inc
inc
(bad)
add
jae
cmp
jno
mov
mov
inc
ins
ss
jne
sub
push
popa
inc
xor
rol
dec
js
jp
push
add
call
test
fisubr
es
test
push
adc
xor
retf
fs
cmp
cmps
cmp
popa
xor
es
push
inc
call
cmp
dec
xor
add
ret
push
pop
scas
add
push
push
js
loopne
push
push
dec
outs
cmps
inc
sub
inc
dec
ins
inc
mov
je
sbb
arpl
dec
mov
jbe
pop
inc
mov
mov
sahf
inc
xor
or
pop
movs
xchg
enter
jno
mov
pop
dec
div
retf
and
inc
dec
cmp
or
mov
ins
jo
adc
inc
xor
jp
dec
dec
sub
shl
mov
xor
addr16
hlt
push
mov
inc
jo
jne
dec
sub
outs
bound
dec
stos
mov
nop
ss
xor
popa
je
cs
adc
jne
xor
aam
pop
xchg
dec
mov
xor
outs
add
xor
sub
sub
js
inc
shl
dec
dec
push
js
jbe
inc
mov
test
shr
jne
xchg
inc
push
xor
mov
ss
xchg
adc
ss
jb
outs
pop
and
test
in
xchg
outs
pop
dec
fcmovu
aad
pop
dec
(bad)
jns
jns
jno
imul
ins
xor
push
xor
movs
mov
cmp
pusha
xchg
inc
push
xor
push
test
call
js
push
imul
inc
sub
mov
mov
add
xor
push
movs
add
inc
inc
mov
ror
push
sub
push
ins
add
fadd
mov
cmp
mov
pop
(bad)
pop
push
rol
or
sub
inc
adc
and
aam
call
aaa
aaa
sbb
xchg
inc
test
into
pop
and
test
lods
push
ret
loope
push
arpl
xchg
dec
cmp
inc
outs
push
push
jo
push
push
jnp
push
pop
xor
mov
inc
pop
push
add
aam
lock
sub
ins
sub
mov
outs
pop
call
outs
or
jp
rol
adc
cs
addr16
jmp
push
xchg
push
retf
inc
movs
push
fs
push
loope
dec
and
xor
test
inc
or
inc
cmp
aaa
movs
inc
mov
les
ret
jp
dec
mov
shl
scas
inc
(bad)
push
xor
aam
(bad)
jo
test
fisub
je
bound
fs
pusha
mov
inc
push
pop
test
stos
adc
dec
push
sbb
and
inc
dec
and
or
push
jo
sbb
(bad)
dec
(bad)
ja
xchg
push
and
or
push
pop
xor
mov
xchg
sar
inc
xor
dec
sbb
cs
or
push
dec
lock
imul
xor
mov
dec
cmp
mov
inc
xor
xchg
push
inc
dec
(bad)
retf
add
fiadd
test
push
inc
bound
popa
push
push
mov
loop
rcl
adc
inc
retf
(bad)
aaa
sub
jno
inc
arpl
cmps
int
pop
aam
jp
in
add
cmps
call
push
lods
inc
mov
pop
push
(bad)
dec
xchg
ins
dec
test
adc
pop
xor
pop
adc
xor
jne
pop
push
push
imul
gs
cmp
pop
jne
inc
jne
inc
gs
and
es
add
add
mov
push
sbb
js
js
call
xor
inc
test
pusha
movs
and
in
or
ss
add
xor
inc
or
pop
inc
sbb
cmp
dec
stos
ins
call
sub
dec
jp
or
inc
xor
les
int3
je
mov
dec
sub
pop
add
sub
outs
add
dec
add
(bad)
jne
jbe
pop
xor
movs
xor
push
je
fdiv
xor
push
js
ins
fnstenv
jo
sar
push
inc
sbb
adc
sub
data16
dec
scas
jo
aam
loop
stos
adc
add
jne
mov
ss
dec
push
js
xor
push
call
fs
mov
aaa
dec
arpl
out
inc
inc
jb
jo
sub
ret
xor
pop
mov
mov
inc
push
dec
mov
mov
xor
xor
mov
sar
sub
cli
inc
xor
push
dec
pusha
pop
jp
outs
jle
push
or
xor
fidiv
xor
test
cld
dec
adc
mov
sbb
movs
jns
add
or
imul
sub
inc
je
cwde
dec
outs
push
sbb
push
adc
sbb
ins
dec
add
xchg
(bad)
bound
cmp
inc
test
adc
add
test
push
stos
test
gs
shl
dec
nop
inc
mov
aad
mov
lds
outs
xor
sub
or
bound
jae
push
dec
scas
inc
mov
fcomp
push
fst
in
lock
je
inc
je
shl
cmp
bound
pop
ret
jbe
popa
add
inc
xor
sbb
sub
inc
aaa
push
pushf
xchg
dec
inc
push
xchg
rol
mov
imul
dec
out
clc
sub
sub
jp
push
rcl
mov
ins
cmp
pushf
push
jno
shl
jb
or
add
stos
les
enter
loop
xchg
push
jo
imul
sub
xor
gs
jns
dec
pop
rcl
push
sub
xchg
add
popa
adc
fadd
add
pop
scas
mov
inc
inc
push
dec
pop
and
outs
dec
xchg
or
jno
inc
sub
div
xchg
xor
or
outs
imul
add
icebp
mov
push
sbb
retf
aaa
jae
add
jae
xor
jp
arpl
or
std
cmp
dec
arpl
imul
movs
es
dec
push
adc
dec
mov
dec
xchg
retf
and
push
out
push
les
and
add
loop
mov
jns
inc
pop
adc
and
or
and
enter
cli
and
jb
or
cmp
push
bound
and
and
push
mov
adc
jae
jmp
clc
adc
push
and
push
dec
out
and
and
dec
adc
mov
rcl
pop
dec
test
es
jmp
sub
or
lock
pusha
adc
inc
lock
xor
push
je
pushf
inc
push
adc
push
xor
shl
mov
dec
addr16
inc
jo
add
les
xor
inc
inc
pop
cld
sub
ins
mov
push
dec
ss
jno
or
pushf
ss
xor
gs
arpl
pop
fs
push
pop
lods
jbe
dec
mov
neg
or
or
inc
xchg
add
enter
push
dec
mov
idiv
jns
dec
cwde
nop
shl
sub
inc
cwde
repnz
mov
js
or
pop
nop
ins
popa
xor
dec
sub
cwde
ss
jb
fsub
into
sahf
xor
adc
(bad)
xor
dec
popa
jne
clc
dec
dec
adc
push
push
ret
sub
inc
ins
cmps
inc
dec
xor
add
push
xor
test
cmp
ins
xor
or
push
push
fisub
mov
out
push
je
push
inc
or
add
or
and
push
xchg
jo
outs
add
popa
(bad)
pop
bound
jb
inc
sub
xor
int3
and
ja
cmp
pop
imul
test
mov
xor
or
push
jp
dec
mov
ds
adc
dec
(bad)
je
imul
sar
inc
jns
add
ins
inc
inc
scas
es
ss
inc
mov
cli
aaa
jbe
inc
inc
mov
inc
and
outs
aaa
js
mov
sub
push
add
jo
(bad)
gs
bound
test
jp
push
clc
add
inc
mov
inc
push
mov
push
push
aaa
cmp
test
(bad)
push
push
push
fidivr
sbb
dec
push
cmp
push
xchg
lods
mov
data16
add
and
imul
stos
inc
into
mov
ret
pop
mov
sbb
sub
or
xor
pop
dec
push
imul
sub
add
gs
dec
sbb
adc
outs
adc
mov
mov
fwait
mov
addr16
and
dec
inc
rcl
dec
js
pop
ins
je
push
mov
dec
pop
movs
outs
and
xchg
cmps
data16
pop
mov
js
jns
inc
jp
shr
and
pop
aaa
fs
adc
ffree
push
jbe
movs
and
jb
loop
movs
jo
test
test
sub
fdivr
pop
push
cmc
dec
push
cmp
outs
dec
push
pop
add
adc
retf
push
xchg
xor
retf
xchg
enter
imul
sbb
call
or
dec
mov
pop
sbb
ss
dec
inc
dec
dec
push
ja
sub
mov
pop
test
or
fidivr
push
push
push
push
xor
xchg
fcmovbe
pop
inc
fs
or
xchg
jo
push
add
add
inc
pop
add
imul
jecxz
xchg
(bad)
jae
xor
inc
outs
sbb
jne
ins
fisub
push
or
sbb
add
xor
xor
lods
bound
movs
addr16
cmp
inc
out
dec
cmp
mov
sub
inc
je
xor
or
sbb
add
enter
movs
xor
outs
add
dec
mov
xchg
push
cmp
and
cmp
test
movs
xor
in
sbb
sar
jl
dec
je
cld
test
add
push
dec
jp
xor
cli
fld
(bad)
ins
cmp
arpl
adc
and
mov
mov
xor
clc
pop
push
ins
jmp
bound
add
fst
inc
adc
dec
dec
push
pop
sub
mov
or
xor
pop
pop
mov
inc
jmp
pop
or
add
cmps
add
cmp
xchg
add
jbe
cwde
cmp
inc
outs
dec
mov
push
mov
ins
nop
mov
jbe
dec
inc
inc
xchg
mov
push
sahf
dec
sub
nop
ds
mov
dec
adc
scas
or
sub
adc
pushf
ss
push
push
xor
and
sub
pop
jbe
push
ins
add
push
ins
mov
mov
push
outs
js
dec
jb
add
xor
and
cmps
xor
pop
movs
rol
loopne
loopne
les
mov
js
out
fidiv
pusha
and
cmp
leave
dec
test
shl
bound
adc
dec
jns
jne
adc
push
dec
inc
mov
cld
xor
inc
dec
inc
bound
inc
push
push
hlt
mov
inc
or
xor
imul
jmp
popa
inc
pop
cli
dec
xor
adc
call
data16
test
inc
add
jle
pop
inc
push
bound
jo
gs
es
or
repnz
scas
ret
ins
xor
inc
jb
dec
ja
popa
imul
mov
je
push
jbe
or
push
mov
push
inc
jp
imul
movs
dec
sbb
out
adc
or
mov
sbb
push
cwde
in
fcom
outs
push
lock
test
add
out
push
and
mov
sahf
dec
or
add
cmp
xor
push
dec
aam
cmps
push
loopne
add
xor
dec
dec
in
xor
mov
outs
dec
arpl
or
sub
jb
adc
out
xchg
and
clc
mov
aad
push
jbe
ss
sbb
rcl
mov
je
push
fidiv
dec
and
push
xchg
pusha
nop
mov
push
push
pop
aaa
nop
push
das
ins
adc
mul
inc
ja
or
dec
inc
inc
jp
loopne
xor
push
adc
outs
and
sub
mov
lock
cmp
loop
pusha
add
dec
cmp
jno
pop
add
ss
xor
aam
push
push
jns
call
pop
jno
bound
xor
jbe
mov
ds
add
jae
inc
addr16
aam
push
inc
pop
push
pop
jp
fisub
jbe
xor
and
push
cmps
cli
add
(bad)
xor
(bad)
arpl
dec
xchg
sub
test
dec
inc
push
fs
jl
jae
imul
fmul
add
je
add
js
add
jne
jb
loop
and
inc
push
mov
or
cmp
xor
cmp
push
or
or
inc
data16
mov
xchg
fild
test
push
int3
dec
outs
xor
dec
mov
dec
nop
retf
dec
xchg
push
adc
sbb
inc
inc
dec
bound
inc
js
sbb
inc
addr16
jbe
aam
and
ss
add
ss
pop
jp
mov
and
push
imul
loop
and
add
test
movs
shr
push
jns
imul
push
push
inc
dec
inc
jae
push
dec
sbb
inc
movs
dec
sbb
fcomp
or
mov
push
jno
xor
xor
inc
mov
test
sub
retf
push
nop
aad
inc
add
ss
push
jge
or
in
pop
inc
sub
pop
mov
loope
pushaw
inc
push
aad
dec
or
out
dec
xor
outs
inc
rcl
xor
dec
adc
mov
inc
jo
std
or
dec
ja
jo
gs
adc
data16
add
enter
or
dec
add
retf
jp
push
dec
call
add
dec
jne
xor
push
jae
xchg
add
test
or
cmp
add
add
sub
cmp
push
adc
xor
pop
out
inc
outs
sbb
sub
and
push
adc
fisubr
xor
xor
dec
popa
outs
push
pop
shl
xchg
pop
inc
lock
sbb
dec
dec
dec
cmp
jp
or
out
ins
xor
push
add
in
(bad)
outs
inc
xor
and
sbb
movs
and
push
add
movs
mov
inc
pcmpeqd
push
cmp
scas
xchg
push
xchg
gs
push
jle
aaa
movs
or
push
and
add
add
jb
imul
mov
sub
push
jns
xor
push
cs
mov
or
mov
push
lods
xchg
fs
pop
je
mov
xor
mov
dec
cmps
ret
inc
inc
or
mov
jo
fdiv
add
ret
mov
mov
dec
fs
aam
dec
es
push
ins
push
test
stos
bound
sar
inc
or
ins
and
or
pop
jns
imul
mov
dec
arpl
ins
out
ss
sub
sub
aam
add
sub
test
xor
or
test
outs
mov
inc
or
and
imul
sbb
adc
sbb
mov
add
add
inc
and
ds
aad
cmp
mov
mov
fst
inc
(bad)
call
push
inc
cmp
and
push
outs
mov
mov
xchg
inc
inc
ins
cmp
cmp
adc
imul
dec
fs
mov
cwde
jae
sub
pusha
aaa
stos
jbe
adc
mov
imul
data16
in
in
mov
cmps
sub
jae
push
dec
xchg
mov
cmp
or
enter
ja
fsubr
inc
sbb
in
xchg
jbe
dec
inc
inc
push
retf
inc
fisttp
lods
cmp
push
add
xor
rol
in
call
xchg
test
ror
inc
push
mov
mov
jbe
push
ror
fs
dec
push
push
imul
inc
(bad)
and
call
sbb
and
data16
sbb
push
les
and
mov
jle
mov
push
sahf
xor
ja
lock
call
jb
xor
ret
adc
aam
push
pusha
pop
arpl
adc
push
xor
in
inc
mov
jp
inc
es
aaa
cwde
sbb
fs
outs
gs
mov
test
ins
bound
mov
or
dec
inc
xor
xor
fiadd
sub
dec
mov
jae
pop
ins
retf
adc
(bad)
js
ins
arpl
sbb
jp
sub
add
push
xchg
ins
inc
and
je
inc
add
popa
xchg
and
push
rol
nop
neg
or
mov
push
push
cmp
aaa
cmp
push
xor
and
xor
cmp
(bad)
test
loope
dec
push
je
jb
arpl
inc
std
lods
mov
ss
aaa
dec
aaa
push
nop
icebp
mov
cs
in
pop
xor
dec
sbb
pop
pop
fistp
jp
jae
push
push
mul
sub
int3
js
or
add
ror
jbe
or
push
jp
aaa
shl
mov
dec
xor
outs
loop
shl
es
je
push
push
imul
jno
dec
inc
inc
je
fwait
add
xchg
or
inc
leave
add
(bad)
(bad)
outs
pop
xchg
xor
jbe
push
pop
test
add
xchg
(bad)
xchg
imul
push
xor
lds
ins
jae
adc
xor
jne
cmp
cmp
cmp
js
pop
popf
nop
or
inc
jae
push
jno
mov
dec
jl
ret
popa
push
push
rol
push
xor
(bad)
ja
loopne
adc
shr
lods
xor
ss
bound
ins
push
and
aaa
stos
imul
jae
sbb
adc
jb
xor
rcr
dec
imul
test
dec
push
lock
xor
jb
ror
add
adc
add
cmp
dec
pusha
and
mov
xor
inc
(bad)
inc
mov
(bad)
mov
push
and
or
int3
xor
pushf
js
adc
xor
add
push
add
fs
sbb
ins
xor
data16
nop
inc
adc
mov
inc
and
push
jbe
jno
stos
cmp
adc
add
sbb
and
push
add
push
push
inc
sub
arpl
and
dec
push
jl
inc
retf
nop
je
es
add
or
pop
or
(bad)
pop
cli
mov
inc
data16
ins
add
push
jae
jle
xor
and
mov
jp
xchg
je
push
push
jbe
xor
stos
inc
jo
mov
stos
fld
jmp
mov
adc
inc
addr16
inc
outs
xor
dec
cmp
add
bound
ins
dec
xor
into
imul
push
jne
add
pop
xor
pop
pop
xor
ret
test
bound
mov
hlt
retf
sub
aam
jle
imul
sub
sub
call
inc
nop
stos
sbb
ss
jb
std
imul
push
dec
jbe
ret
push
dec
dec
dec
push
movs
and
push
cmps
jge
movs
stos
je
(bad)
mov
imul
push
and
push
jb
sub
inc
add
ins
jp
inc
xchg
ins
bound
dec
dec
arpl
ja
inc
jmp
or
dec
inc
dec
jae
or
dec
jp
or
xor
push
inc
jl
dec
or
in
mov
aaa
jp
push
je
and
dec
stos
xor
aam
addr16
mov
xchg
adc
ins
dec
ror
sub
jns
xor
popa
add
push
inc
pop
in
dec
add
dec
xor
dec
ror
and
xor
fsub
xchg
mov
gs
scas
push
shl
test
sbb
nop
pop
pop
repnz
jae
pop
add
aad
bound
mov
xor
call
not
ds
inc
rol
mov
mov
outs
addr16
pop
inc
add
inc
fcmovu
ins
push
pop
inc
inc
and
and
sbb
push
push
xchg
inc
mov
pop
mov
inc
fs
fcmovb
or
push
push
or
xor
ficomp
xor
push
or
add
fisubr
xor
push
pop
mov
dec
adc
push
inc
dec
ins
inc
or
xor
jo
push
adc
(bad)
xor
imul
xchg
adc
add
dec
add
adc
mov
mov
xor
jns
ret
ficom
and
inc
cdq
sbb
mov
fst
inc
jns
pop
out
dec
data16
cmp
les
test
mov
mov
mov
push
loopne
mov
xor
xor
xchg
xchg
push
xor
sub
adc
jo
test
push
out
and
test
mov
dec
cmp
dec
je
fiadd
and
jbe
nop
dec
popa
xor
and
(bad)
loopne
push
fs
or
nop
adc
push
clc
mov
mov
xchg
pop
adc
mov
jne
jne
xor
pop
dec
and
inc
mov
ins
add
mov
cmp
mov
jb
ss
add
dec
push
lock
jae
push
outs
sar
dec
xor
or
push
xor
add
addr16
push
sbb
call
mov
ret
push
mov
push
inc
cld
data16
test
je
add
inc
pop
pusha
cdq
shl
pop
push
xor
inc
ins
mov
ret
xor
inc
fs
ja
lods
inc
mov
push
dec
add
xor
aaa
ja
sub
pusha
dec
ins
mov
out
push
and
push
sbb
aad
sbb
push
and
gs
in
or
pop
cwde
inc
imul
into
or
push
pop
repnz
xor
sub
xor
nop
repnz
xor
nop
or
jbe
ins
sub
sub
push
scas
push
mov
inc
inc
mov
push
xor
inc
and
sub
sub
push
mov
outs
arpl
sub
sub
push
ins
mov
adc
inc
xor
data16
inc
push
or
push
mov
mul
xchg
retf
mov
sbb
push
dec
cli
and
sbb
or
push
pop
or
inc
inc
jns
jno
dec
cdq
or
and
sbb
addr16
dec
es
int
dec
pop
xchg
loop
shl
jbe
xor
dec
ret
and
sub
pop
cmps
mov
test
adc
push
add
imul
push
push
and
xor
inc
xchg
sub
push
xchg
adc
data16
or
hlt
ret
pusha
xchg
dec
arpl
and
rol
push
or
repnz
sbb
pop
into
push
ja
inc
mov
out
arpl
push
sub
mov
jo
sub
adc
es
add
outs
mov
imul
pop
and
jno
pop
outs
push
push
in
fs
int3
jp
movs
jae
xchg
add
and
add
imul
sbb
adc
inc
sbb
retf
push
mov
imul
stos
xor
push
xor
add
stos
or
cli
dec
aaa
jb
add
jo
test
or
add
xor
add
sub
dec
dec
retf
and
outs
xor
pop
or
pop
inc
pop
mov
cmp
enter
jp
nop
shl
adc
adc
retf
outs
or
ins
outs
or
mov
sbb
and
nop
jo
dec
adc
les
push
ss
add
rol
cmp
mov
ss
ins
cmps
xor
je
ret
inc
rcl
dec
fadd
je
push
and
(bad)
or
xor
sub
add
or
push
test
test
cs
je
push
inc
and
inc
push
or
push
xlat
and
push
ja
or
xor
mov
clc
outs
dec
imul
inc
inc
push
pop
xor
bound
pop
push
mov
dec
ficom
adc
xor
sub
xor
lock
mov
inc
xchg
add
sbb
call
mov
sub
loopne
je
pop
dec
push
js
fs
xor
es
inc
lock
mov
xor
fs
arpl
outs
out
ins
mov
aaa
sub
lods
aas
std
and
dec
inc
push
push
dec
dec
jmp
dec
hlt
jno
pop
xor
xchg
cmp
adc
push
dec
push
mov
mov
push
inc
and
dec
not
jo
cmp
cmp
rcl
adc
dec
add
mov
rcr
xor
fcom
cwde
pop
push
adc
mov
or
push
xchg
inc
mov
mov
dec
inc
jae
arpl
sub
ss
outs
dec
js
fcom
ins
xor
and
cs
je
retf
test
movs
push
dec
pop
mov
inc
adc
inc
nop
xor
aad
or
mov
data16
inc
and
mov
imul
mov
ja
push
inc
imul
jbe
mov
add
push
dec
fs
add
adc
cwde
adc
sbb
push
jb
pusha
sub
add
test
dec
xor
imul
cmp
mov
aaa
ficom
arpl
jbe
dec
xor
fsub
jne
aaa
dec
jbe
sub
push
add
or
push
mov
sbb
lock
add
inc
push
test
dec
jmp
inc
test
adc
push
push
imul
bound
(bad)
mov
add
sub
lock
shl
popf
repnz
imul
sub
leave
in
sub
popa
cmp
add
(bad)
retf
push
sbb
dec
jp
(bad)
sbb
enter
push
dec
pop
inc
add
aam
add
xchg
enter
and
push
add
add
inc
dec
cmp
cmp
or
scas
fsub
aam
push
into
gs
xor
enter
outs
sahf
xor
and
je
fisubr
inc
inc
jne
mov
add
int3
mov
mov
dec
gs
popa
jl
mov
or
test
ja
push
dec
pop
add
scas
push
xor
xor
xor
dec
inc
sub
ins
ja
dec
pop
mov
dec
xor
xor
test
sub
ins
inc
dec
fiadd
jle
gs
push
movs
push
adc
xor
aaa
adc
fidiv
inc
xor
add
and
inc
inc
mov
stos
inc
push
dec
lock
inc
xor
es
inc
mov
xchg
push
arpl
add
mov
xor
dec
cmp
pop
addr16
cmp
jle
sub
ins
push
dec
push
fsubr
fmul
retw
outs
mov
or
imul
adc
movs
pusha
inc
aaa
push
cwde
inc
add
adc
adc
fs
bound
js
cmp
pusha
add
je
and
xchg
mov
sub
(bad)
cmps
xchg
sbb
add
push
adc
jo
mov
or
cmps
push
mov
push
push
inc
sub
push
push
clc
dec
jne
push
push
ds
push
fidiv
xchg
mov
jns
add
and
cmp
adc
cwde
lods
inc
mov
gs
inc
retf
dec
inc
ret
(bad)
mov
ss
pushf
dec
inc
jns
jmp
pusha
aam
jne
js
xor
daa
pop
inc
in
push
mov
mov
push
stos
les
pop
xchg
dec
test
dec
xor
leave
je
in
aaa
cmp
adc
gs
inc
dec
and
jmp
stos
(bad)
out
pop
fcom
mov
jmp
dec
jbe
fs
push
outs
push
xor
push
fsub
ret
jp
fcomp
inc
inc
loope
mov
gs
dec
jae
mov
add
adc
push
dec
jp
inc
and
ror
lock
cld
dec
xor
outs
inc
push
jne
sub
jle
inc
jmp
dec
push
call
push
push
push
dec
outs
adc
dec
jbe
sahf
xor
adc
pop
xor
jo
inc
mov
mov
leave
ins
loopne
jle
dec
push
dec
inc
js
lods
es
and
mov
je
xor
dec
sub
or
or
je
jl
add
nop
dec
xor
cmps
ja
test
out
jno
arpl
and
adc
ins
fsubr
jno
aaa
mov
or
fs
inc
push
push
loopne
add
jmp
stos
and
or
(bad)
mov
dec
shl
jb
inc
cmps
int
jmp
dec
jae
adc
clc
sbb
inc
xchg
or
ja
and
data16
jno
push
and
and
inc
xchg
or
pop
and
add
lods
push
xor
add
rol
adc
mov
adc
add
sbb
dec
ss
mov
outs
inc
inc
cmp
inc
xchg
scas
test
push
pop
adc
inc
test
dec
dec
inc
dec
bound
dec
retf
adc
inc
mov
ja
inc
je
push
test
push
dec
sar
js
pop
shr
dec
inc
ds
xor
xor
lock
jo
mov
mov
mov
cmp
dec
and
jbe
xchg
aam
push
cwde
rcr
mov
push
or
enter
xchg
imul
movs
add
call
add
shr
ret
add
push
dec
dec
sbb
ss
sub
sub
push
or
mov
and
sub
push
fwait
push
mov
adc
inc
sub
xor
sub
push
xchg
adc
shl
jae
push
mov
cmps
xor
pop
movs
mov
sub
and
add
dec
shr
xor
sbb
addr16
xor
and
aam
hlt
pop
add
repnz
pusha
or
push
stos
push
cmp
mov
lea
xor
push
inc
loope
pusha
or
cmp
mov
ss
jo
xchg
mov
adc
(bad)
int3
stos
inc
call
dec
test
into
data16
jo
add
cmp
inc
inc
ret
dec
je
ins
scas
push
sub
dec
mov
aaa
aaa
es
add
and
dec
fdiv
dec
cmps
dec
add
jae
add
retf
data16
or
nop
(bad)
push
jbe
mov
inc
xchg
xor
push
jne
cmp
adc
dec
xor
stos
js
jo
push
jo
pop
loopne
dec
push
push
pop
outs
jb
inc
inc
or
jp
fs
inc
gs
mov
jle
cmp
push
adc
push
mov
ss
xchg
je
jo
add
test
push
aam
js
jbe
ss
ja
jbe
inc
cwde
int3
movs
xor
in
out
popa
add
add
jbe
mov
cs
dec
test
sbb
mov
jp
inc
xchg
pop
xchg
sub
pop
sub
sbb
pop
add
xor
popa
dec
not
sar
dec
mov
mov
add
add
inc
xchg
popa
xor
(bad)
sub
shl
retf
(bad)
cld
pop
xor
test
fsub
jle
inc
cmp
dec
test
inc
adc
xchg
les
add
push
cli
push
xchg
jp
inc
inc
pop
movs
xchg
aam
inc
dec
jne
outs
dec
or
pop
push
out
or
(bad)
sbb
push
push
push
jae
dec
jo
out
fsub
jae
dec
cmp
push
push
dec
push
test
mov
push
sub
je
mov
mov
inc
inc
je
xor
push
and
jae
lods
out
mov
jp
push
inc
aaa
or
or
sbb
add
mov
xchg
adc
daa
push
or
out
pop
push
in
dec
js
cmps
adc
call
ror
push
cmps
mov
out
jns
inc
in
dec
rol
aaa
push
data16
push
dec
xor
sub
test
jno
outs
dec
cs
mov
ins
(bad)
fcom
push
xchg
mov
mov
or
cmp
jns
and
ins
je
repnz
xchg
mov
adc
push
pop
repz
(bad)
movs
iret
int3
bound
jmp
or
dec
popa
and
rol
add
ja
adc
xor
cmp
add
aaa
dec
pop
cld
or
pop
jo
mov
or
cmps
jno
or
loopne
dec
hlt
xor
cdq
push
inc
imul
xor
test
out
mov
dec
sub
or
push
xor
and
pushf
inc
movs
push
jbe
nop
xor
add
fsub
call
dec
jbe
enter
dec
arpl
mov
push
inc
inc
popa
dec
push
imul
retf
popa
ret
pop
push
or
data16
dec
jl
xchg
pop
xor
dec
dec
mov
and
inc
cmp
clc
cmp
jl
pop
(bad)
outs
push
mov
xchg
addr16
add
sbb
dec
mov
mov
xor
or
loopne
jle
sub
and
xchg
inc
inc
cmp
ins
xchg
inc
imul
call
movs
add
sub
adc
mov
add
xor
push
jae
shl
pop
popa
or
jp
jmp
movs
adc
and
jo
dec
or
je
shl
jno
sub
pop
scas
inc
movs
dec
mov
dec
les
js
adc
jno
push
dec
jo
pop
sub
mov
popa
inc
xor
call
and
push
push
dec
inc
bound
adc
or
bound
adc
push
repnz
push
inc
and
dec
push
mov
xchg
ret
and
bound
dec
ja
jne
adc
and
mov
inc
xchg
shr
mov
dec
outs
or
xchg
inc
sar
movs
imul
mov
out
rol
push
dec
es
mov
sub
ds
nop
xchg
pusha
jo
mov
and
mov
add
outs
inc
push
xor
cmp
int
aam
mov
dec
dec
shl
scas
jbe
push
add
add
push
dec
imul
sbb
push
or
pushf
xchg
sbb
pop
mov
cmp
inc
retf
jbe
aaa
dec
out
pop
mov
imul
push
ins
pop
and
imul
inc
add
rcl
jne
and
gs
push
inc
push
sub
mov
adc
sbb
inc
inc
jo
imul
jb
inc
dec
adc
push
popf
cli
popa
push
out
test
outs
inc
jne
fs
in
cmps
pusha
stos
mov
sbb
xor
ret
gs
adc
add
inc
dec
sbb
test
dec
ss
test
dec
cs
mov
inc
mov
inc
cwde
les
add
inc
push
arpl
mov
push
movs
dec
dec
xchg
loope
jo
dec
aaa
aaa
inc
xor
and
mov
je
xor
dec
addr16
sub
inc
or
add
stos
mov
sahf
xor
pusha
jae
(bad)
out
ins
push
fild
das
push
inc
xor
xor
arpl
or
mov
rcr
mov
dec
push
dec
mov
sbb
inc
ret
dec
adc
clc
test
bound
fwait
test
add
inc
ret
fs
lock
jae
js
jb
addr16
dec
dec
mov
add
arpl
shl
inc
xor
rcr
xor
outs
push
pusha
clc
and
add
aaa
push
cmps
dec
into
inc
and
push
xchg
js
je
push
sub
adc
add
loop
aaa
push
imul
ins
enter
jb
adc
or
xor
adc
ret
add
jbe
ins
dec
add
or
or
out
cmp
mov
or
dec
mov
outs
cwde
add
int3
push
lods
push
jp
dec
add
lock
push
push
stos
jp
push
push
aaa
or
sub
or
sbb
ins
inc
and
xor
rcr
xor
pop
out
add
pushf
outs
jbe
mov
and
mov
dec
movs
adc
or
inc
call
lods
mov
dec
cmp
outs
dec
jecxz
push
push
push
fmul
dec
outs
push
add
out
dec
cmp
add
inc
sbb
nop
push
inc
inc
inc
or
or
inc
test
nop
xchg
adc
call
add
dec
inc
jns
out
jne
lods
or
sbb
inc
xchg
cmp
inc
mov
push
ror
dec
cwde
imul
add
ins
jp
add
push
mov
add
and
dec
cmp
outs
ins
pop
cmp
push
test
imul
dec
mov
ss
pushf
dec
jne
mov
shl
inc
addr16
movs
push
sar
imul
inc
push
add
fimul
dec
dec
add
add
jns
in
dec
outs
mov
cs
leave
sbb
dec
cmp
mov
stos
add
push
push
or
jno
(bad)
outs
ja
cmps
and
jo
and
loop
pusha
xor
push
pusha
nop
push
test
sub
push
js
ss
test
xchg
mov
dec
test
fsubr
and
lock
push
push
test
add
cmp
sbb
leave
add
xchg
dec
and
les
inc
xor
ret
xchg
sub
fs
ins
push
xor
push
sbb
popa
jb
xor
xor
les
loope
fidivr
cmp
mov
and
pop
push
pop
or
imul
push
dec
mov
loope
push
inc
inc
cli
imul
add
xchg
js
sub
mov
shr
cdq
and
shl
pusha
inc
test
ret
aam
popa
int3
jp
jae
push
mov
mov
xchg
fstp
ss
mov
imul
imul
push
inc
mov
xor
loope
cmp
push
sub
fnsave
mov
outs
bound
ss
pop
sub
push
fs
push
inc
jb
outs
push
cdq
jo
mov
xchg
cmp
ja
aaa
jne
mov
push
inc
mov
inc
pop
pop
xchg
push
inc
jae
outs
push
pop
inc
ss
push
or
lea
dec
div
push
jbe
xchg
leave
fiadd
add
jo
jmp
ja
xor
adc
addr16
test
mov
sahf
jne
xor
adc
pop
enter
imul
stos
movs
outs
call
out
into
dec
je
xchg
lock
adc
mov
push
add
mov
dec
push
je
jl
or
out
push
into
jp
inc
pop
xor
ja
jns
inc
ins
les
lods
jo
inc
dec
add
add
push
imul
xor
imul
popa
stos
jb
dec
inc
clc
or
push
xor
pop
add
js
push
push
mov
imul
call
mov
xchg
xchg
xchg
push
js
cmps
icebp
fwait
add
dec
push
mov
or
sub
(bad)
and
dec
push
or
push
pop
and
pop
or
sbb
push
cli
outs
inc
adc
inc
loopne
outs
and
xor
xchg
popa
clc
cdq
test
stos
mov
inc
add
inc
push
xchg
xchg
stos
sub
mov
mov
adc
dec
push
inc
adc
adc
ins
movs
shr
or
ja
xchg
adc
repnz
dec
cmp
imul
mov
and
sub
arpl
mov
je
jae
inc
sbb
push
sbb
adc
jne
dec
add
adc
jo
push
dec
cmps
add
or
dec
jmp
add
lods
ja
xchg
mov
and
pushf
pop
xor
add
push
mov
xor
enter
lods
xchg
adc
cmp
xchg
xchg
xchg
ror
add
lods
mov
sub
or
pop
jmp
cmp
outs
xor
pusha
and
push
ss
sub
mov
js
enter
shr
imul
push
call
ss
aaa
fdiv
pop
adc
push
pop
dec
inc
and
outs
dec
dec
jbe
mov
dec
adc
add
stos
cwde
shl
add
xor
sbb
push
jp
mov
nop
cmp
push
add
call
adc
mov
fld
sbb
sbb
pop
push
push
ret
pop
pop
ss
dec
inc
(bad)
ja
sbb
gs
bound
and
or
xchg
xor
ins
cmp
in
test
ds
and
imul
lods
mov
dec
xor
inc
pop
push
gs
jb
js
test
inc
xor
dec
pusha
jbe
xor
sub
dec
xor
sub
jae
inc
sub
or
xor
inc
into
xor
inc
inc
jbe
xor
add
push
jne
push
mov
add
dec
test
dec
xor
test
push
mov
ja
jp
inc
xor
and
pop
xor
bound
or
outs
div
push
pop
inc
push
add
bound
ss
ins
dec
xor
inc
shl
mul
stos
push
aam
xor
dec
jne
jae
js
imul
dec
pop
xor
(bad)
xor
xchg
popa
outs
xor
adc
imul
popa
mov
mov
jb
popa
add
hlt
dec
jno
ins
and
adc
js
addr16
inc
jb
(bad)
dec
sub
add
(bad)
push
and
inc
adc
xor
push
popa
mov
jbe
dec
imul
pushf
aaa
push
and
push
das
xor
dec
pop
push
pop
clc
dec
jle
xor
stos
add
arpl
jns
cmp
les
xlat
stos
inc
or
fs
inc
imul
xchg
(bad)
pop
repnz
inc
adc
mov
or
ins
xor
stos
sbb
xor
imul
sub
sbb
adc
and
xchg
ds
push
dec
xor
test
retf
aaa
retf
jbe
xor
xor
xor
inc
push
stos
stos
fs
bound
ficom
bound
cmp
xor
test
or
mov
inc
mov
loop
gs
cmp
xor
add
and
mov
stos
mov
xchg
(bad)
xchg
or
dec
bound
push
inc
or
jo
dec
mov
inc
into
dec
data16
push
adc
xor
enter
jmp
push
cld
xor
js
lods
xor
jmp
inc
push
dec
aaa
push
xchg
add
push
xchg
stos
stos
jbe
dec
stos
dec
xor
aam
mov
retf
or
mov
ins
ins
cmp
push
xchg
mov
dec
hlt
push
test
inc
bound
dec
add
pop
fwait
pop
pop
push
enter
mov
mov
out
jo
in
dec
inc
adc
inc
xchg
inc
fdiv
xchg
test
gs
mov
or
jae
push
mov
xor
and
pop
les
mov
dec
push
push
out
xchg
loopne
fs
dec
pop
xor
dec
arpl
inc
xor
inc
pop
inc
push
fsub
sub
outs
push
add
add
dec
movs
xchg
push
sub
pop
(bad)
xor
imul
sbb
imul
les
push
cmp
mov
or
xor
pop
mov
mov
int3
jo
mov
jne
dec
js
inc
popa
inc
add
cmp
push
push
std
push
(bad)
push
inc
push
xor
jb
xor
and
inc
dec
inc
jbe
mov
inc
adc
push
pusha
xor
mov
addr16
mov
push
adc
fs
in
sbb
add
dec
push
xor
dec
xor
inc
in
mov
push
xchg
xor
or
xor
aaa
push
pop
add
mov
scas
jns
xor
es
xchg
sub
xchg
push
push
sahf
xor
add
fcom
ins
inc
and
mov
scas
push
rol
(bad)
fdiv
adc
jo
cli
inc
pop
fimul
dec
add
add
dec
cdq
adc
adc
mov
cmp
pop
pop
dec
push
in
mov
ja
and
cli
ins
dec
dec
push
mov
ins
mov
inc
ds
dec
add
inc
sub
dec
or
mov
dec
mov
inc
add
push
add
scas
mov
xchg
push
pop
xchg
mov
add
push
cmp
dec
or
adc
xor
fdivr
add
mov
push
out
push
push
or
xor
and
aaa
mov
and
lods
movs
add
sbb
push
call
mov
add
xor
fwait
jp
leave
dec
mov
pop
aam
push
push
jne
add
adc
sahf
outs
xor
mov
push
jbe
lock
sbb
or
and
jno
jbe
inc
gs
cmp
test
outs
push
adc
loope
(bad)
xor
mov
outs
addr16
jbe
xchg
pushf
adc
or
dec
enter
push
pop
pop
xor
dec
retf
inc
add
imul
mov
fs
in
ret
push
ss
lock
adc
mov
mov
dec
gs
pop
fs
movs
mov
aaa
dec
bound
xor
outs
push
jae
dec
add
xor
sub
js
dec
fdiv
je
sbb
mov
inc
add
add
add
pusha
nop
mov
mov
pop
cmp
and
jo
inc
xor
mov
jo
add
xor
enter
add
out
jno
sub
lea
push
inc
push
sub
aam
and
sub
xchg
dec
test
aaa
retf
popf
xchg
and
inc
idiv
jbe
push
mov
pop
jb
inc
jae
ret
call
inc
scas
mov
dec
gs
js
dec
js
sub
pushw
mov
ins
push
or
and
dec
xchg
add
push
mov
enter
push
retf
sbb
je
rol
mov
loopne
out
adc
lock
ss
push
adc
test
mov
fisub
dec
push
inc
adc
push
dec
stos
rcl
mov
fwait
xchg
dec
bound
dec
arpl
jbe
push
shl
push
sbb
loope
and
and
test
mov
adc
mov
sbb
data16
inc
imul
push
cwde
sub
imul
pop
imul
pop
imul
scas
arpl
push
test
call
xor
adc
pop
xchg
or
or
lods
xchg
test
bound
jae
cmps
add
mov
mov
push
cmp
add
js
push
mov
dec
call
les
js
push
imul
dec
dec
gs
mov
xchg
push
push
imul
nop
dec
(bad)
pop
xor
test
arpl
mov
aam
mov
push
cmp
xchg
ja
add
mov
jo
test
nop
fidiv
adc
cmp
mov
add
data16
xor
sbb
pop
mov
xor
loop
xchg
arpl
and
mov
outs
inc
pop
jae
shl
jne
arpl
add
xor
add
pop
test
xchg
dec
sub
stos
retf
ret
test
push
loopne
dec
sub
not
dec
call
push
adc
inc
scas
mov
je
push
stos
adc
cmp
cld
mov
jo
dec
scas
push
sub
cmp
push
xor
and
push
xchg
xor
jns
retf
mul
addr16
add
add
retf
add
ret
jbe
dec
and
or
dec
or
adc
push
dec
div
xchg
or
sub
je
sub
movs
js
inc
push
imul
or
repnz
jp
push
imul
push
add
out
imul
mov
ins
jne
push
push
ins
hlt
rol
adc
or
or
sub
push
inc
mov
add
pop
sub
lods
push
and
mov
xchg
sub
sbb
xor
inc
dec
dec
or
pop
sub
(bad)
fsub
add
mov
adc
inc
js
ins
aam
rol
imul
cmp
mov
dec
jno
mov
outs
call
loop
mov
mov
or
inc
or
sbb
stos
mov
jmp
inc
push
cld
push
add
add
mov
sub
and
jb
(bad)
adc
cmp
clc
push
or
xor
js
xchg
retf
dec
cs
sub
inc
cwde
ss
dec
push
stos
add
inc
sbb
imul
int3
test
xor
pop
outs
aaa
fcomp
mov
sbb
push
jle
lea
xchg
xor
adc
push
sub
inc
stos
arpl
cld
popa
in
outs
add
call
push
push
popf
dec
or
retfw
imul
sub
add
dec
outs
xor
je
sar
cwde
outs
push
popa
in
sub
push
push
jbe
in
pop
rcl
or
push
push
pop
push
adc
xor
pop
or
pop
call
imul
add
imul
sub
hlt
mov
or
add
ins
loopne
outs
enter
ret
or
sbb
inc
loop
adc
inc
inc
(bad)
xchg
adc
jb
push
push
xor
push
dec
push
inc
jmp
cmp
nop
add
cld
dec
jo
mov
adc
jb
addr16
inc
xor
adc
pushf
imul
sub
imul
popa
add
xor
sbb
add
xchg
xor
adc
mov
loopne
dec
adc
leave
dec
inc
xchg
sub
ret
retf
jno
mov
outs
add
inc
dec
dec
or
hlt
test
add
nop
fwait
dec
mov
xor
(bad)
je
add
sbb
jne
pop
dec
and
dec
fiadd
sbb
xor
cld
inc
jne
sbb
and
inc
inc
dec
xor
ss
js
imul
and
xor
aad
and
das
call
dec
arpl
clc
bound
imul
outs
dec
and
imul
pop
xor
jbe
adc
dec
popa
xchg
out
sbb
fs
or
in
dec
lock
push
xor
movs
xchg
mov
int3
xor
jle
xor
add
add
cmp
and
add
je
aaa
and
lea
add
dec
mov
push
cld
jne
add
rcr
jns
inc
xor
and
cdq
add
jmp
stos
jle
sub
inc
outs
xchg
dec
ja
sub
dec
mov
ss
or
sbb
sbb
call
cmps
fwait
add
sub
dec
data16
xchg
or
jb
fs
test
dec
dec
cwde
movs
or
ror
sub
dec
inc
gs
add
sbb
xchg
pusha
xor
ds
inc
xchg
push
xchg
mov
rol
jp
mov
test
adc
outs
fcmovu
cdq
sub
dec
dec
add
js
xor
push
add
test
dec
aaa
inc
bound
scas
xchg
mov
push
push
out
imul
je
sub
lods
push
add
inc
xor
inc
jo
and
push
pop
mov
in
ins
cmp
push
in
push
jecxz
imul
pop
sub
movs
ss
faddp
sub
rcr
jb
jp
push
inc
inc
outs
nop
add
fcomp
fdiv
mov
xchg
fimul
dec
mov
push
sub
loopne
jp
mov
sub
js
xor
ja
push
cs
jo
xor
or
cs
cmp
xor
push
cli
enter
outs
push
arpl
sub
mov
inc
mov
push
pop
clc
bound
cmp
adc
mov
ss
movs
mov
addr16
jmp
gs
push
push
pop
mov
popa
xor
xor
push
arpl
or
movs
clc
repnz
ins
nop
loopne
push
add
xor
dec
push
ss
mov
fdivr
inc
inc
leave
pusha
jle
jle
add
lods
loopne
lods
push
push
xor
inc
xchg
(bad)
out
push
add
sub
or
sahf
ds
inc
dec
dec
aam
adc
push
(bad)
inc
data16
xor
adc
inc
das
and
bound
outs
xor
movs
lods
or
adc
and
sbb
dec
dec
inc
pop
push
xchg
jecxz
movs
add
dec
test
push
adc
inc
dec
xor
ins
mov
or
mov
sbb
nop
dec
add
ret
and
mov
mov
xchg
sbb
xor
jo
inc
add
scas
movs
fidiv
ss
inc
jae
stos
jo
ins
lock
test
pop
dec
lods
mov
fs
xor
and
jbe
push
xor
or
or
dec
add
and
push
je
sub
xchg
inc
bound
mov
adc
xor
sbb
mov
retf
ja
lods
fisubr
pop
dec
push
addr16
inc
push
inc
add
dec
(bad)
push
and
fsubr
or
mov
pop
push
inc
cmp
pop
je
(bad)
dec
adc
push
adc
ins
add
push
dec
mov
test
inc
stos
dec
push
cmp
adc
sub
popf
xchg
push
pusha
xchg
sbb
inc
adc
push
push
push
mov
int3
jne
ins
cmp
add
xor
mov
ror
mov
push
mov
jne
xor
gs
mov
push
pop
push
or
dec
mov
stos
or
outs
cmp
push
cmps
xor
jns
adc
(bad)
les
inc
xor
xor
add
loope
loop
mov
data16
nop
loope
mov
jbe
xchg
jbe
or
cmp
fsub
stos
je
xor
fs
shl
je
jbe
mov
mov
pop
push
ss
or
(bad)
call
and
jbe
push
xchg
dec
and
cmps
jbe
pop
cmc
adc
push
dec
xor
mov
pop
cld
pop
jae
(bad)
(bad)
push
call
push
add
inc
inc
shl
jb
jp
adc
xor
add
inc
js
test
mov
jo
dec
inc
loopne
jae
aaa
push
aaa
xchg
mov
lods
je
aam
mov
je
xchg
stos
cmps
xchg
xor
cmps
or
or
mov
jp
dec
or
shr
xchg
mov
push
push
dec
mov
outs
ja
dec
inc
scas
test
push
fmul
xchg
fs
test
mov
xor
hlt
xor
mov
xor
dec
mov
push
outs
test
sbb
mov
push
push
sbb
and
sub
sbb
dec
les
sub
fisubr
cmp
cld
adc
xor
xchg
xchg
mov
inc
outs
jne
fsub
jo
dec
fs
or
fcomp
bound
stos
dec
and
pop
js
push
xchg
jmp
push
jb
dec
ret
and
movs
fsubr
sbb
push
inc
pop
push
fdiv
or
inc
mov
ss
inc
inc
rol
test
inc
mov
stos
sub
mov
jno
jp
push
aaa
inc
push
and
add
sbb
test
js
inc
adc
mov
sar
xor
xor
and
test
add
ss
shl
fsubr
inc
push
les
mov
push
jo
push
shr
and
je
ss
xor
jo
cwde
xchg
inc
in
inc
xor
(bad)
or
test
mov
ins
cmp
push
push
add
or
push
in
inc
mov
sub
pusha
ins
ja
add
(bad)
push
cmc
dec
adc
jne
inc
dec
fisub
lea
xor
cmps
add
xchg
jb
bound
arpl
xchg
inc
inc
mov
test
test
mov
mov
push
sar
imul
sub
clc
int
sbb
cmps
push
out
jb
adc
mov
js
cmp
push
lock
dec
push
inc
sub
mov
and
pop
pop
arpl
cmps
nop
xor
adc
push
xchg
add
jle
lock
in
cmp
js
dec
push
pop
dec
pop
jno
push
inc
dec
push
xchg
or
cwde
scas
push
mov
dec
or
jne
outs
aaa
or
dec
nop
mov
loopne
mov
push
push
ins
push
add
inc
cmp
(bad)
enter
inc
sbb
mov
inc
inc
xor
or
mov
bound
jle
cs
dec
es
push
xor
or
add
pop
je
arpl
cmp
les
adc
and
sbb
and
shl
push
jb
int
dec
mov
cwde
pop
call
jb
ss
popa
mov
popa
pop
push
fsub
jns
inc
(bad)
sbb
ins
dec
xor
add
fdivr
jbe
jne
jo
sbb
inc
ror
je
inc
push
test
push
dec
push
jne
mov
or
xor
push
sbb
or
and
arpl
popa
hlt
movs
xor
jp
mov
or
dec
fcom
test
or
or
inc
es
xor
lods
nop
nop
xchg
sbb
data16
push
les
popf
push
push
adc
adc
mov
push
dec
sahf
mov
fimul
inc
fs
in
movs
scas
push
nop
inc
pop
and
inc
or
mov
inc
outs
mov
cs
push
xor
dec
mov
sbb
js
xor
push
loope
sbb
push
push
push
lock
inc
and
push
inc
add
add
mov
cmps
test
js
pop
mov
jns
xor
sub
call
shr
and
mov
xchg
dec
enter
dec
js
mov
inc
mov
push
xor
mov
inc
inc
ja
bound
xor
push
gs
aam
sub
cmps
movs
inc
push
add
inc
dec
dec
mov
xchg
sbb
jbe
pop
ins
xor
out
outs
inc
inc
and
push
jns
gs
nop
add
imul
stos
mov
inc
xor
ins
inc
or
pop
or
mov
mov
adc
xor
imul
loop
push
int
sbb
(bad)
xor
xor
loopne
pop
enter
hlt
sub
cmc
inc
int3
fs
push
xor
push
push
add
outs
mov
sbb
push
xor
mov
mov
push
pop
lods
dec
inc
imul
dec
xor
sbb
cmp
fisubr
call
or
mov
cmps
jns
je
push
cdq
pop
aad
push
movs
dec
xor
push
inc
fs
push
es
aam
data16
push
sub
xchg
xor
sub
or
sbb
adc
ins
enter
inc
mov
or
add
outs
push
mov
xchg
call
je
sbb
pop
inc
imul
inc
inc
js
inc
inc
popa
pop
xchg
and
cmp
dec
inc
inc
jne
push
js
jb
jbe
fisub
inc
ss
dec
pusha
sahf
jno
dec
or
jae
push
bound
push
data16
inc
add
pop
or
jne
lock
xor
aaa
outs
imul
adc
xchg
outs
push
mov
inc
xor
mov
xor
and
sahf
xor
xchg
test
and
or
mov
xor
jb
cmps
xchg
mov
je
or
mov
je
add
push
mov
dec
inc
fild
xor
add
movs
push
inc
rcl
dec
xor
xor
out
mov
pop
fs
pusha
test
and
pop
inc
inc
add
jmp
jbe
inc
dec
mov
dec
add
jp
inc
inc
test
(bad)
jp
aaa
jo
test
xor
cld
push
sbb
outs
ins
cmp
bound
aaa
inc
xor
mov
push
jae
mov
mov
les
sahf
arpl
xor
ss
mov
dec
loopne
mov
sub
push
mov
sub
push
mul
fucomip
push
ss
push
dec
aaa
jno
je
xor
lods
push
push
cwde
ins
mov
inc
mov
shr
xchg
cmp
push
addr16
dec
test
test
push
mov
movs
or
pop
and
cmp
out
or
inc
inc
jb
cmps
cmps
pop
mov
popa
mov
ss
jo
push
ins
xor
cmp
fs
fcom
adc
inc
xchg
add
jo
add
dec
ins
inc
outs
inc
pop
js
test
adc
retf
cmps
push
bound
shl
jne
inc
dec
data16
adc
stos
test
adc
xchg
stos
inc
sar
cs
inc
adc
mov
xor
push
cs
cmp
xchg
test
cmp
jo
inc
push
repnz
push
or
jmp
outs
push
loopne
pop
push
push
pushf
outs
cmp
movs
push
dec
add
imul
aaa
push
push
ret
xchg
mov
push
xor
xchg
ss
or
sub
add
sub
inc
xchg
dec
ret
dec
jb
inc
mov
sub
jp
inc
movs
and
dec
ja
inc
shl
bound
add
sub
add
aaa
and
dec
adc
int
test
ds
enter
outs
and
ds
jmp
adc
add
or
mov
outs
jp
and
mov
mov
xchg
inc
pusha
xchg
int3
je
sub
cmp
inc
jmp
outs
imul
jmp
stos
jbe
inc
rol
dec
shl
inc
imul
sbb
ins
xor
mov
push
jo
add
pop
mov
jns
xor
cs
push
push
push
cs
inc
xchg
dec
es
les
jo
mov
sbb
test
push
dec
jb
mov
je
xor
xor
inc
fdiv
loope
gs
loopne
outs
ins
inc
ins
cmp
in
cmps
add
inc
xor
or
sbb
push
data16
add
fist
pop
dec
test
loopne
inc
ds
push
inc
cdq
lods
(bad)
push
rcl
jae
dec
clc
fwait
les
ins
push
mov
pop
mov
pop
inc
xor
or
(bad)
and
inc
lock
push
cs
call
mov
or
(bad)
aam
outs
outs
fsub
sar
xor
je
test
cmps
dec
je
mov
xlat
add
dec
jno
push
ss
jmp
outs
push
fs
push
xor
ins
rcl
outs
retf
xchg
pushaw
dec
imul
sub
mov
dec
(bad)
inc
add
and
ds
shl
cmp
ficom
push
or
je
push
add
or
add
push
push
into
int3
push
dec
adc
xor
xor
aam
inc
test
jo
sbb
test
rol
push
xchg
mov
dec
mov
xchg
inc
jb
shl
jno
stos
sub
jp
mov
add
fmul
and
mov
and
or
push
xor
movs
inc
add
test
xchg
bound
aam
xor
mov
jo
aaa
rcl
(bad)
hlt
inc
push
push
push
push
inc
sbb
push
stos
jb
lea
inc
xchg
or
mov
dec
mov
gs
arpl
inc
or
lea
dec
add
xor
aaa
or
push
cwde
ins
inc
and
xor
adc
sub
ja
mov
or
add
sahf
mul
or
xor
add
or
xor
sub
ins
or
into
mov
adc
inc
push
pop
push
xor
push
sbb
test
cmp
pop
sbb
pop
pop
add
adc
dec
mov
ret
inc
jne
imul
data16
push
es
and
add
ins
or
push
sbb
push
dec
sbb
xor
xor
and
xor
push
dec
and
push
(bad)
dec
add
jae
xor
inc
je
xor
sub
dec
dec
loop
dec
dec
xchg
aaa
ror
cmp
mov
push
xchg
add
inc
sub
ja
push
push
and
js
dec
sub
ret
fsub
in
inc
push
inc
aad
or
mov
sub
inc
push
inc
hlt
dec
push
dec
jmp
mov
arpl
inc
movs
mov
lods
inc
xor
jbe
inc
hlt
mov
dec
inc
push
dec
arpl
jae
push
pop
or
mov
xor
mov
add
jae
fsub
xchg
and
test
outs
imul
sub
out
and
dec
fs
xchg
scas
or
cmps
jbe
jp
push
mov
inc
sbb
add
sub
data16
popa
xor
ins
ret
xor
jne
mov
popa
ins
retf
ins
dec
dec
jbe
adc
jae
out
pop
xor
and
outs
clc
rcl
sbb
sahf
arpl
cmp
push
sbb
arpl
push
and
ins
or
in
bound
nop
jp
jnp
adc
push
imul
push
lea
nop
pop
gs
xchg
add
sbb
je
or
stos
push
data16
push
js
popa
in
xchg
outs
bound
fs
outs
push
sbb
sub
lock
fwait
neg
push
xor
ds
jo
call
xor
cmp
xchg
push
mov
imul
push
bound
cmp
xor
or
jne
dec
or
nop
xchg
cdq
fiadd
xor
push
pop
sub
xor
dec
test
cmps
and
es
sbb
loopne
jo
push
xor
xor
jo
push
push
xor
push
adc
fsub
xchg
pop
pushf
or
or
push
jo
or
(bad)
push
inc
outs
sub
clc
push
sub
push
cmp
jno
test
cmp
les
daa
add
push
dec
mov
push
jp
jp
scas
pop
or
je
aaa
sub
push
xchg
fld
push
add
add
add
mov
cli
je
push
lods
xor
int3
dec
je
sub
inc
mov
je
lods
ret
add
or
mov
jbe
sbb
inc
xor
push
ss
pop
push
ins
inc
xor
push
or
mov
and
push
and
xor
dec
test
jmp
push
and
jne
or
mov
or
sub
mov
hlt
xor
je
les
loop
js
ss
test
or
add
push
push
bound
lock
sar
add
jns
pop
inc
dec
bound
test
dec
imul
or
inc
push
jns
addr16
outs
bound
les
cdq
or
inc
inc
mov
xor
test
jno
dec
or
or
dec
xor
or
push
mov
sub
(bad)
int3
jne
mov
push
adc
dec
push
arpl
xchg
push
jbe
popa
jle
inc
dec
and
push
or
loop
or
jno
push
call
fs
xchg
sbb
sbb
(bad)
add
sub
bound
push
inc
enter
push
mov
sub
push
pop
inc
dec
sub
(bad)
push
add
push
mov
imul
dec
push
scas
ss
xor
push
cmp
pop
inc
push
pop
dec
push
dec
adc
dec
jbe
ret
or
jne
fsubr
adc
jb
dec
sbb
push
push
ja
xor
inc
add
ins
inc
mov
sub
or
push
js
and
or
popa
and
mov
xlat
add
inc
cmp
(bad)
sub
sbb
call
sar
inc
aaa
push
ret
and
adc
mov
aad
inc
jl
pop
or
push
cmps
push
push
ja
js
popa
inc
loope
mov
xor
or
inc
push
push
and
hlt
test
leave
je
xor
jns
dec
mov
xor
mov
inc
arpl
push
jb
shl
mov
imul
jb
push
xor
jb
inc
sub
inc
aam
sbb
aad
mov
xchg
jbe
push
mov
into
xor
shl
mov
aaa
dec
push
fdivr
xor
sbb
jp
fdivr
xor
data16
ja
shl
mov
in
inc
dec
cmp
inc
sbb
or
pop
dec
push
pusha
adc
inc
pop
aam
sbb
push
push
idiv
ins
ins
ss
das
fimul
pop
arpl
js
or
add
mov
push
test
pop
jle
repnz
jbe
jle
push
jne
dec
ins
fs
dec
dec
leave
and
mov
je
and
pusha
dec
cmp
data16
test
ja
aam
add
jle
ins
sbb
pop
push
cld
addr16
cwde
add
sbb
imul
add
dec
adc
dec
js
sbb
pop
xor
push
add
es
add
add
push
sub
lods
push
test
cwde
mov
push
int
dec
imul
jo
dec
dec
push
sbb
sub
adc
addr16
daa
shr
jns
test
dec
push
data16
rcl
cli
xchg
inc
outs
jno
ss
(bad)
retf
xchg
xchg
test
jbe
test
or
test
xor
test
sub
push
dec
adc
ins
xchg
and
fs
adc
push
add
enter
jmp
sub
scas
and
adc
inc
imul
fcomp
hlt
dec
push
scas
adc
js
popa
arpl
popa
data16
and
fld
inc
and
push
(bad)
jp
jo
xchg
js
push
jb
xchg
jbe
dec
jae
cdq
pushf
and
mov
adc
inc
outs
jle
fcomp
mov
je
jp
add
dec
stos
mov
fbld
push
push
jp
cmps
sub
push
pop
push
nop
in
mov
js
add
(bad)
mov
push
div
pop
and
enter
adc
mov
push
popa
shl
and
ja
inc
xor
popa
outs
push
sub
xchg
jno
shl
cmps
sbb
push
jo
pop
aam
arpl
and
jbe
fwait
xor
jne
cmp
pusha
and
arpl
dec
popf
inc
ins
mov
push
xor
inc
add
shl
push
cmp
add
les
xor
(bad)
jmp
pop
push
dec
cmp
stos
dec
dec
mov
push
push
adc
inc
mov
aam
pop
shr
xchg
add
mov
inc
inc
shl
pop
cmp
(bad)
xor
mov
je
cs
adc
mov
mov
js
aam
add
imul
xchg
push
repnz
in
and
push
xchg
test
pop
int3
jb
shr
xor
or
pushf
in
dec
nop
sbb
add
push
mov
add
xchg
push
adc
data16
cld
popa
inc
inc
xchg
cmp
push
jmp
dec
pusha
fimul
inc
dec
mov
or
cmp
into
jp
lods
inc
clc
push
push
ret
xor
push
adc
jbe
push
push
ss
and
add
or
adc
push
dec
inc
dec
inc
nop
mov
jmp
bound
gs
sub
push
and
cdq
pusha
(bad)
pusha
dec
js
cwde
and
sub
or
aam
add
push
sbb
xchg
adc
es
aaa
mov
imul
or
cmp
std
add
push
dec
xor
xor
nop
fwait
xchg
mov
hlt
or
je
push
jae
mov
stos
inc
loopne
add
xchg
call
dec
dec
dec
test
loopne
loop
inc
jl
push
fdivr
cmp
bound
test
sub
cld
add
push
mov
dec
push
push
or
jg
push
imul
dec
jae
pop
inc
push
push
inc
jp
push
push
sub
sub
xchg
xor
xor
inc
inc
xchg
push
add
ins
popa
inc
les
cmp
lods
arpl
mov
(bad)
fiadd
mov
fs
xor
xchg
push
out
js
add
dec
inc
push
cmp
jmp
jb
jo
dec
jo
xor
push
xchg
dec
je
push
mov
add
xchg
jae
inc
nop
popa
stos
mov
inc
push
scas
jo
scas
add
adc
je
out
sub
shl
push
xor
add
adc
dec
or
ja
pop
stos
and
les
jo
push
add
add
gs
fst
data16
dec
sub
push
ins
pop
xor
sub
adc
rcl
push
pop
mov
aam
test
js
mov
adc
push
push
add
dec
ins
pop
push
xor
rol
retw
and
mov
mov
(bad)
inc
xor
cmp
add
enter
xor
xor
add
sbb
inc
push
pusha
adc
push
push
pop
or
add
and
jne
dec
or
leave
jle
push
cli
mov
dec
or
xor
cwde
(bad)
imul
cmp
sbb
je
and
pop
popa
inc
fisubr
sub
add
xchg
pop
pop
or
imul
sbb
xchg
test
aad
bound
inc
inc
jo
nop
bound
aaa
pusha
add
xchg
dec
xor
xor
cmp
pop
add
cmp
inc
ins
push
adc
jl
xor
inc
or
dec
xchg
or
xchg
inc
icebp
push
inc
dec
xor
sub
mov
adc
gs
mov
dec
jp
jae
dec
add
sub
jl
jb
add
dec
and
clc
jle
out
(bad)
dec
or
inc
jp
inc
push
nop
mov
jo
push
pop
sub
ss
pop
mov
jne
mov
xor
mov
push
or
mov
adc
pushf
push
sub
out
inc
jne
imul
push
(bad)
jmp
dec
jp
pop
jne
adc
loopne
fmul
dec
popa
add
inc
bound
add
call
mov
fcomp
push
outs
cmp
xor
inc
sub
inc
mov
js
jne
mov
imul
jmp
imul
loop
addr16
and
cwde
xor
ins
inc
push
xchg
sub
jae
add
pusha
add
and
and
cwde
ins
fsubr
test
push
dec
test
cmps
add
nop
into
jp
xchg
ins
sub
jo
in
xor
dec
shr
jno
and
mov
push
add
mov
sub
add
xor
test
xchg
aam
dec
push
gs
push
dec
inc
fiadd
adc
jb
inc
outs
retf
ins
fcom
ror
jbe
push
xor
stos
adc
js
push
ins
inc
test
dec
and
add
push
inc
movs
pop
jbe
sub
gs
(bad)
imul
test
and
fidiv
xor
xor
mov
fisubr
push
push
stos
sub
dec
dec
mov
(bad)
push
test
aaa
mov
aam
dec
dec
jno
and
and
dec
aaa
loopne
xchg
sbb
mov
aad
ins
inc
push
dec
jmp
or
push
ins
pusha
dec
and
inc
or
add
inc
call
sbb
jns
adc
inc
test
cmp
cmp
rcl
push
ja
arpl
stos
inc
jb
jb
add
inc
xchg
adc
inc
arpl
dec
push
test
test
mov
aam
sahf
aam
push
push
sub
bound
mov
stos
test
sbb
sbb
inc
push
ja
stos
rol
sahf
pop
cmp
or
in
xchg
fwait
add
xchg
add
mov
loopne
dec
inc
push
sbb
les
(bad)
push
add
push
mov
mov
lods
push
push
push
inc
jo
add
popa
cmp
cli
rcl
and
retf
js
sub
rcr
call
call
in
push
stos
shl
push
jo
cld
cmp
push
fidiv
push
dec
push
mov
adc
jmp
stos
sbb
push
sbb
sbb
popa
xor
jp
pop
push
ins
push
stos
dec
pusha
retf
pop
pop
stos
and
mov
dec
jae
adc
ins
jne
es
jne
xchg
rol
pushf
jbe
mov
jno
push
push
les
inc
inc
je
dec
pop
pop
sub
mov
cwde
mov
arpl
sub
popf
call
push
cmp
push
jo
push
cmp
and
sahf
test
mov
push
js
jns
mov
mov
inc
inc
add
pusha
cdq
jle
repnz
dec
dec
nop
inc
push
sbb
mov
ds
inc
aaa
je
outs
mov
sub
dec
repnz
push
jb
push
cmp
or
cmp
sub
push
push
sub
inc
jb
pop
inc
inc
mov
cmps
xchg
and
inc
outs
cmps
and
call
push
outs
nop
les
add
or
mov
push
mov
mov
or
call
ins
jp
dec
xor
inc
popa
test
sub
dec
dec
dec
test
inc
xchg
mov
lea
inc
mov
jbe
push
xor
push
cmp
xor
xor
sub
stos
mov
repnz
scas
inc
pop
mov
dec
aaa
jmp
test
mov
add
(bad)
push
nop
cmps
xor
push
test
fdiv
push
dec
ins
call
push
mov
xor
ss
jl
lods
adc
in
inc
add
push
dec
sar
imul
js
dec
xchg
adc
push
inc
pop
outs
cli
or
out
xchg
(bad)
call
add
imul
loop
push
jbe
dec
sub
mov
jae
push
add
xchg
add
push
push
out
and
dec
test
push
cmp
(bad)
pop
imul
mov
mov
cli
ss
push
pop
and
dec
sub
inc
xor
dec
xor
loopne
push
pop
mov
outs
mov
push
dec
(bad)
je
add
xor
dec
add
jns
inc
jo
sbb
sub
jne
cmp
ss
jp
push
mov
ja
aam
inc
movs
in
imul
pop
push
or
push
xchg
ds
adc
xchg
lock
or
xor
pop
dec
in
test
test
jo
mov
jns
pop
inc
mov
push
xchg
lods
ja
cs
or
sbb
mov
or
add
xchg
je
jne
outs
inc
popa
mov
call
xchg
retf
dec
jmp
dec
sub
sbb
fwait
test
and
lds
dec
push
pop
movs
mov
cmp
jb
ins
ins
stos
inc
jo
adc
push
push
push
fs
add
dec
xor
dec
je
aaa
fidivr
aaa
jae
retf
add
add
inc
dec
dec
inc
jp
push
rol
sub
and
mov
mov
cmp
inc
push
adc
push
xchg
xchg
pop
inc
push
mov
sbb
arpl
add
out
test
sbb
ss
imul
inc
push
jo
popa
mov
dec
push
outs
jl
add
inc
xor
lock
shl
bound
xor
loop
push
scas
out
dec
shl
and
je
test
mov
dec
push
bound
sbb
fs
outs
adc
xchg
add
adc
lods
xor
add
pop
cli
jp
test
test
push
sub
loopne
push
xor
sbb
test
pop
push
shr
jb
mov
jno
and
outs
xor
and
fs
lods
push
inc
aaa
push
sbb
pop
ins
stos
mov
push
dec
push
add
cmp
popf
pop
and
inc
fidivr
add
cmps
cmp
xor
jb
adc
mov
jle
jge
jb
xchg
pusha
push
xor
dec
xor
adc
test
fs
cwde
xor
inc
arpl
dec
addr16
and
or
ja
inc
nop
add
ins
push
rol
mov
push
xor
pop
mov
cmp
push
imul
imul
dec
jns
push
jno
jp
in
dec
jle
mov
and
push
dec
outs
ss
ins
pop
data16
dec
xchg
push
pop
aaa
pop
rcl
sbb
push
ins
xchg
(bad)
xchg
rcl
dec
je
and
mov
sub
cwde
cmp
cmp
lods
aas
je
push
push
xor
or
repnz
inc
pop
xor
adc
imul
lods
retfw
add
dec
jmp
add
les
push
xor
aam
enter
pusha
xor
je
push
enter
loop
stos
add
or
and
cmp
loopne
or
add
mov
fcom
movs
add
jo
hlt
inc
push
adc
dec
inc
add
xor
and
xor
xor
dec
outs
jb
fiadd
mov
nop
mov
enter
dec
aam
push
mov
mov
add
push
or
mov
clc
mov
dec
push
push
hlt
sub
push
inc
aaa
pop
je
add
jo
xor
push
jp
jp
inc
stos
ret
and
ss
and
push
mov
dec
or
cmp
ins
or
add
push
adc
xor
pop
imul
mov
sbb
pop
mov
add
je
dec
inc
inc
repnz
jp
mov
pop
jb
dec
cmps
dec
mov
jp
jl
xor
mov
cmp
jle
or
mov
mov
dec
(bad)
retf
xor
xchg
ret
mov
cs
push
adc
inc
and
sub
xor
sbb
xchg
jno
dec
mov
pop
lods
dec
addr16
xor
add
adc
push
and
in
xchg
mov
inc
and
or
xor
add
jo
sub
jo
adc
inc
inc
cwde
arpl
aaa
cmp
adc
mov
test
inc
jae
mov
inc
outs
scas
lods
enter
out
dec
push
push
inc
retf
mov
ss
add
out
ins
dec
push
dec
inc
(bad)
mov
and
pop
jp
outs
push
jmp
or
inc
xor
adc
sub
and
int3
jae
pop
ins
test
gs
add
xor
or
or
pop
js
push
adc
sub
adc
int3
inc
(bad)
mov
pop
mov
loopne
inc
arpl
push
push
cwde
dec
inc
sbb
cmp
adc
popa
clc
xchg
sub
inc
jb
movs
test
ret
inc
mov
xor
int3
lods
rcr
or
xor
jmp
xchg
and
mov
shr
dec
jne
dec
dec
test
push
cmp
call
push
or
xor
jo
adc
pop
inc
add
xor
jae
xchg
dec
(bad)
shl
aaa
pop
lods
sbb
or
stos
mov
arpl
ins
adc
ins
popa
cmps
movs
outs
outs
add
adc
ret
retf
sub
push
mov
in
jbe
jb
push
cmp
test
lods
inc
and
int3
dec
les
push
mov
test
inc
pusha
add
or
xor
dec
sub
loop
add
sbb
hlt
sub
and
cmp
mov
jbe
fadd
inc
jns
addr16
jbe
loope
adc
xor
nop
imul
jp
mov
mov
enter
sub
nop
push
add
or
jbe
inc
inc
push
jbe
pop
or
(bad)
nop
xor
dec
inc
mov
ds
add
clc
xor
mov
add
inc
xchg
push
push
bound
push
push
stos
adc
ror
xor
shl
jb
jo
div
pop
retf
js
sub
add
xchg
arpl
mov
add
in
imul
push
push
push
inc
inc
ja
sub
mov
xor
fidivr
xor
jb
or
mov
mov
dec
outs
enter
fs
and
xor
adc
pop
clc
loope
js
push
dec
push
xor
inc
inc
inc
push
xor
jae
push
(bad)
(bad)
les
xor
push
ins
fs
xor
adc
(bad)
cmp
bound
sub
cmps
loope
push
or
xchg
ins
inc
jo
pop
imul
xchg
popa
xor
inc
dec
popa
in
cmp
push
inc
push
ret
and
mov
ins
retf
call
push
xor
popa
test
ss
push
dec
mov
xor
inc
lea
push
pop
ror
sub
adc
sahf
popa
or
xchg
and
adc
xor
jne
mov
in
ins
xlat
mov
xor
clc
sub
call
mov
push
pop
xchg
jmp
push
push
push
push
shl
cld
dec
and
int3
mov
adc
inc
gs
push
xor
inc
add
mov
adc
push
int3
add
sbb
push
int
inc
ss
push
ss
push
inc
jne
scas
xor
push
dec
je
stos
xor
in
sub
xor
dec
test
pop
and
sub
xor
push
movs
push
(bad)
ds
and
add
push
call
sbb
push
push
add
test
dec
(bad)
inc
dec
cmps
ror
inc
pop
or
inc
dec
retf
lds
sahf
clc
fwait
inc
cmp
clc
outs
inc
push
dec
xor
or
adc
aam
dec
or
cmp
jo
inc
dec
add
ins
and
adc
ss
scas
xor
shl
and
imul
pop
data16
push
adc
test
dec
mov
fdivr
jo
push
adc
mov
in
push
ins
dec
dec
je
add
js
mov
mov
stos
push
sbb
outs
imul
push
add
(bad)
push
adc
add
lock
mov
call
je
rol
aaa
call
loopne
(bad)
mov
jle
imul
es
fld
dec
push
mov
int3
dec
push
push
adc
cmp
movs
push
or
push
test
scas
aad
ins
add
dec
inc
js
(bad)
inc
test
adc
push
movs
adc
xor
mov
pusha
adc
jno
add
cmp
push
mov
cli
or
ins
arpl
ins
add
or
push
jl
add
dec
xor
test
push
pop
scas
push
jp
rol
mov
adc
xor
xchg
outs
xor
fmul
test
add
pop
dec
inc
bound
dec
outs
or
sub
xor
push
or
add
xor
popa
dec
gs
sub
mov
cli
push
mov
movs
cmps
ins
cmp
push
ret
bound
inc
xor
push
dec
push
test
push
push
add
pop
inc
cmps
hlt
jbe
xor
js
inc
xchg
retf
xor
and
in
dec
or
in
call
inc
adc
dec
cld
sub
sub
sub
or
(bad)
mov
ret
or
pop
js
js
inc
nop
test
test
jmp
imul
push
jno
mov
pop
push
xor
inc
push
or
ret
jno
and
lea
inc
inc
mov
push
pop
outs
cld
or
cs
ret
and
imul
(bad)
adc
inc
pop
xor
jb
dec
jo
inc
jne
push
inc
push
xor
dec
sub
xchg
and
outs
adc
push
jle
dec
adc
inc
bound
mov
cmp
and
and
sbb
adc
add
jle
inc
or
loopne
lock
cmp
outs
dec
pop
(bad)
push
xlat
je
xchg
push
add
inc
add
mov
call
call
dec
jne
arpl
ficom
inc
inc
pop
dec
mov
outs
movs
ss
addr16
mov
and
mov
xchg
sub
es
dec
add
movs
pusha
mov
ret
js
or
popa
hlt
pusha
pop
cwde
add
adc
sbb
clc
fs
popa
imul
inc
or
xor
mov
pop
dec
cmp
push
mov
and
imul
movs
xor
xchg
add
xchg
push
ja
jo
das
xor
sub
data16
dec
jb
mov
inc
or
pop
mov
mov
sub
push
inc
dec
jle
mov
inc
xor
movs
inc
xchg
dec
fwait
lods
dec
int3
dec
push
ss
add
push
inc
inc
jae
mov
dec
cli
sub
stos
mov
jo
js
out
mov
inc
imul
mov
(bad)
jo
mov
xchg
jmp
push
ss
cmp
dec
inc
xor
loop
push
fisubr
lock
push
dec
ja
push
or
inc
jne
push
js
add
dec
inc
adc
popa
gs
dec
dec
mov
or
call
fsubr
jbe
aaa
xor
jo
stos
stos
xor
bound
or
sub
mov
jo
ins
xor
dec
outs
xor
rcr
and
push
add
inc
pushf
inc
or
es
adc
pop
inc
dec
dec
xor
dec
inc
add
ss
ret
imul
push
mov
bound
dec
data16
add
xor
jo
sub
(bad)
rcl
jb
inc
push
dec
push
sbb
sbb
popa
push
inc
mov
cmp
jb
popa
sub
mov
js
cmp
pop
and
and
mov
int3
or
sub
retf
outs
or
stos
push
sub
cmp
add
test
bound
outs
loopne
mov
ret
test
and
fs
add
push
push
cmp
les
xor
adc
mov
push
inc
add
push
rcl
xor
adc
push
add
sbb
jo
mov
test
jb
clc
mov
jp
inc
inc
je
ja
mov
ins
push
jne
(bad)
popa
jb
cmp
sbb
dec
inc
ins
sbb
jae
push
sub
mov
add
lods
mov
or
in
cmp
dec
arpl
sbb
rol
adc
dec
xor
cld
ja
inc
test
cmp
jo
shl
mov
xchg
pop
add
push
fsubr
hlt
jmp
nop
(bad)
cld
dec
popa
dec
push
add
movs
dec
pop
nop
shr
push
jp
pushf
mov
or
arpl
push
pop
adc
inc
outs
lock
pop
mov
inc
push
push
ja
cmp
adc
imul
jne
inc
mov
jbe
push
fs
mov
dec
jp
pop
or
or
fs
je
push
mov
xchg
data16
shl
pop
popa
xor
xchg
jbe
jp
outs
adc
xchg
add
dec
enter
in
test
or
push
push
mov
fdiv
dec
xor
or
xor
mov
mov
xor
jbe
inc
add
test
es
and
dec
jmp
xor
jb
mov
jne
xchg
push
into
dec
jne
push
mov
sub
adc
repnz
dec
imul
or
xor
adc
xchg
ror
mov
add
jmp
add
sbb
ja
(bad)
je
cmps
in
mov
xchg
xchg
imul
mov
mov
dec
gs
and
stos
push
mov
push
and
or
js
data16
inc
leave
sub
bound
jle
sub
xchg
rcl
outs
call
mov
aaa
inc
pusha
mov
xor
or
inc
call
sub
arpl
scas
push
and
and
or
jno
inc
sub
push
jne
pushw
dec
sub
push
js
jo
inc
cmp
out
inc
pop
xor
imul
js
add
cli
jb
ss
dec
xlat
add
xor
jb
sub
inc
or
mov
mov
sbb
(bad)
(bad)
call
xor
push
cmp
push
jne
xchg
mov
xchg
adc
call
bound
enter
hlt
push
les
adc
lods
fwait
xchg
jl
arpl
popa
push
aaa
push
mov
jae
sbb
pop
gs
dec
nop
dec
test
push
aad
gs
mov
push
push
loope
stos
inc
retf
push
mov
jbe
xor
call
adc
cmp
les
jo
inc
stos
loop
adc
popa
xor
ds
pop
dec
pusha
mov
push
jo
push
xor
dec
bound
mov
add
mov
mov
dec
dec
rol
mov
repnz
and
and
dec
jbe
jo
loopne
adc
inc
inc
test
xor
jp
aaa
sbb
add
cmp
cmp
dec
pusha
rcl
js
push
adc
mov
dec
inc
push
ins
mov
pop
shl
ror
jae
add
mov
cs
adc
fdiv
jo
sbb
push
add
cwde
shl
xor
dec
inc
mov
test
fdiv
jno
push
add
push
sub
and
sbb
cmp
and
popf
add
cmp
xchg
shl
js
ds
jne
mov
outs
inc
dec
loop
dec
sbb
dec
push
mov
popf
add
movs
and
lods
sbb
lods
call
push
je
push
bound
and
push
push
dec
enter
shl
mov
cmp
inc
push
and
mov
test
and
out
cwde
add
in
inc
inc
mov
cdq
sbb
push
outs
mov
mov
mov
retf
add
pop
push
pop
xor
nop
xor
jno
xor
dec
xchg
mov
ss
je
jno
jp
cwde
stos
lea
ins
xor
xor
hlt
fimul
adc
push
pop
ins
push
(bad)
inc
ret
arpl
sub
ins
jbe
es
push
gs
out
dec
dec
sbb
mov
mov
in
mov
movs
sub
fmul
dec
dec
movs
push
push
pop
inc
test
pop
ds
ins
jno
add
dec
push
arpl
pop
dec
es
mov
(bad)
ja
pusha
imul
jl
pop
pop
add
imul
pop
inc
mov
xchg
push
adc
jae
mov
push
loope
movs
repnz
add
adc
adc
sbb
int3
ins
xor
mov
jo
push
push
jb
dec
sub
inc
dec
push
pop
ret
add
test
pop
dec
ins
xchg
mov
inc
xchg
dec
sbb
call
dec
dec
xor
jb
push
inc
xchg
xchg
sbb
je
jo
cmp
ins
xchg
ja
sub
imul
add
pop
and
push
xchg
jbe
inc
dec
sub
cwde
adc
adc
dec
mov
dec
in
mov
add
and
cmps
shl
xchg
add
add
fcomp
mov
mov
aam
test
xor
push
adc
push
lods
inc
popa
scas
and
xor
xchg
cli
xor
cmps
mov
xlat
scas
mov
jo
cwde
add
test
bound
ja
and
sub
arpl
ss
add
dec
pop
ins
jmp
inc
push
adc
fs
push
inc
ins
sbb
daa
test
cmp
sub
push
test
dec
push
or
xor
jbe
dec
or
fsub
aam
inc
xchg
test
fcom
shl
sbb
pusha
xor
bound
ja
push
shr
xor
in
dec
push
add
ret
xor
push
ficom
xor
scas
inc
rcl
adc
xor
js
cmp
fsubrp
ss
push
push
xchg
xor
sub
xchg
outs
jbe
stos
or
inc
(bad)
les
xor
add
shl
outs
or
sahf
push
ins
jns
push
push
bound
cmp
popa
mov
inc
push
mov
or
addps
outs
dec
jne
fld
sbb
mov
js
adc
push
jno
push
inc
dec
mov
xchg
or
bound
sbb
inc
ins
and
outs
cmp
(bad)
aad
dec
inc
jbe
ret
popa
loopne
ins
inc
jp
repnz
dec
and
inc
pusha
mov
imul
add
or
cld
fmul
je
jecxz
ss
in
add
mov
add
imul
xchg
ret
les
div
mov
push
fdivr
loop
retf
xchg
into
jp
cmps
adc
jno
push
adc
lods
or
fs
add
movs
push
out
mov
mov
arpl
ss
and
sub
jns
dec
dec
jo
inc
into
push
cmp
dec
push
dec
dec
call
jns
add
push
mov
push
xor
cmps
mov
inc
in
push
push
data16
add
cld
push
ror
inc
and
push
ins
mov
add
imul
inc
add
mov
push
dec
bound
pushf
add
jp
gs
bound
mov
dec
loop
inc
mov
pushf
push
jo
inc
dec
inc
add
push
cdq
inc
cmc
push
push
in
clc
sbb
inc
js
push
sub
dec
and
enter
loopne
add
dec
inc
dec
mov
mov
es
adc
sub
push
outs
outs
in
fidiv
dec
dec
xchg
bound
adc
retf
and
test
and
ins
or
ret
add
add
add
push
push
cmp
adc
push
cld
push
inc
push
xchg
les
push
inc
mov
retf
outs
xchg
and
(bad)
push
ins
sub
arpl
clc
push
cmp
push
bound
cmp
clc
adc
ds
sbb
ss
mov
xlat
push
add
jns
jno
dec
cmp
pop
enter
shl
gs
fcomp
or
inc
aaa
push
sub
add
push
sub
dec
xor
mov
mov
jp
xor
push
fsub
mov
and
cmp
pop
push
push
dec
cmp
scas
sub
pushw
fsub
push
or
jo
push
push
mov
inc
add
repnz
hlt
mov
push
aaa
jns
xchg
push
jno
push
pop
fwait
out
sub
dec
cmp
in
sub
arpl
add
fdivr
push
scas
push
movs
mov
or
repnz
sbb
nop
and
jo
push
and
into
sub
sbb
dec
loopne
push
xchg
call
imul
jbe
mov
dec
stos
push
xchg
loopne
fcom
and
push
(bad)
cmp
dec
push
mov
call
call
arpl
int3
ins
push
(bad)
imul
inc
push
inc
push
push
jp
ins
bound
jno
xchg
dec
popa
mov
in
(bad)
outs
push
test
outs
or
fs
pop
push
and
inc
and
xor
cs
ss
push
xor
inc
inc
ss
jns
ja
jmp
enter
or
mov
pop
add
add
jns
inc
push
jno
or
cmp
xor
push
push
jns
or
aam
push
(bad)
retf
push
pop
fs
mov
fsubr
xor
push
jbe
cwde
add
ss
pushf
sbb
loop
sub
mov
dec
or
fst
pop
fs
mov
mov
lods
es
push
pop
xor
pop
jne
xor
add
mov
in
inc
ja
aaa
pop
pop
add
jae
sub
es
sub
push
cmp
dec
nop
dec
mov
mov
and
outs
jb
aaa
ficom
push
push
scas
dec
adc
cwde
sub
fs
enter
xchg
sbb
bound
sahf
cld
jbe
and
mov
add
xchg
push
cmp
je
ret
jo
stos
sbb
dec
arpl
push
push
test
jo
ds
adc
jb
inc
jb
aam
inc
scas
sbb
dec
aaa
jne
sbb
push
fwait
mov
imul
shr
bound
and
je
cmps
xor
mov
or
xor
repnz
sbb
fs
inc
movs
inc
ins
xchg
mov
inc
test
lods
dec
push
add
adc
dec
(bad)
es
mov
ins
js
cmp
sahf
xor
mov
bound
jno
sub
sub
inc
lods
jo
imul
push
into
je
int3
adc
mov
jo
xor
loopne
jno
jae
dec
push
outs
jbe
push
sbb
sbb
dec
add
mov
bound
mov
mov
jmp
push
xchg
add
xchg
aam
mov
lods
adc
ret
test
mov
add
mov
pop
push
and
xor
add
movs
xchg
push
fs
cwde
pop
add
push
xor
xor
outs
xchg
rcl
push
pop
mov
popa
outs
(bad)
push
cs
push
xor
ins
xor
adc
adc
inc
jne
inc
push
test
test
xor
test
fsubp
int3
jp
add
rol
mov
data16
mov
ficom
mov
dec
pop
jne
add
adc
xor
fs
xchg
imul
mov
push
movs
test
jmp
aam
repnz
xor
dec
inc
cs
jb
adc
jo
je
jb
mov
add
xor
push
mov
lods
inc
fs
test
mov
or
inc
jle
ins
mov
or
push
sbb
imul
push
(bad)
outs
jo
lods
scas
mov
dec
dec
jle
inc
xor
ins
cmp
leave
or
test
push
xchg
cmps
mov
call
push
shl
xchg
stos
dec
bound
jno
shl
retf
arpl
pop
push
sar
fdiv
adc
pushf
xchg
cld
dec
(bad)
xor
add
dec
sub
jo
and
jnp
dec
push
mov
je
ins
imul
shl
aam
ja
addr16
imul
pop
fstp
sbb
js
dec
push
sbb
pusha
add
push
mov
ror
cmp
mov
and
js
test
es
loopne
popa
sub
outs
push
dec
add
or
pusha
ss
loop
mov
cs
call
push
imul
jmp
mov
je
and
jno
pop
add
mov
push
or
jle
pusha
ins
add
inc
or
fwait
sbb
push
push
push
cmp
dec
cmp
and
(bad)
popa
ret
mov
xor
push
fild
add
sar
rol
push
(bad)
ja
ss
or
shr
adc
inc
int3
xor
inc
push
lods
push
push
push
sahf
aaa
mov
aam
push
lods
inc
xor
or
dec
ins
adc
inc
dec
cli
ss
popa
imul
xchg
mov
cmps
and
xor
sahf
inc
add
and
and
jno
mov
out
gs
pop
cmp
mov
fwait
shl
pop
bound
cmp
xor
or
push
mov
sub
pop
inc
cmp
or
and
or
xchg
push
in
xchg
inc
adc
popa
dec
xor
ss
arpl
and
sub
test
nop
xor
xor
push
jb
mov
fdiv
mov
js
js
fs
xchg
inc
je
push
aad
inc
(bad)
push
ins
cmp
ds
pop
cmps
lods
jmp
dec
popa
push
push
rcl
add
loopne
adc
and
dec
dec
dec
es
in
dec
jp
sbb
inc
push
push
aaa
outs
push
sub
in
sbb
push
mov
dec
cs
xor
inc
cmps
jo
and
pushf
pop
push
leave
and
loopne
sar
push
test
dec
xchg
cmp
clc
sbb
add
call
push
inc
adc
es
mov
dec
ja
inc
loopne
fadd
cmp
and
xor
dec
xor
add
and
fmul
cmp
or
sbb
inc
mov
bound
add
mov
test
fdivr
in
popa
xor
lahf
and
jp
ss
push
inc
xor
push
fcom
fidiv
pop
adc
nop
js
mov
shl
mov
aad
out
gs
inc
xchg
or
add
and
ds
es
(bad)
js
adc
stos
bound
stos
gs
shr
adc
xchg
xor
stos
adc
adc
or
stos
push
dec
or
push
dec
push
add
adc
push
scas
aaa
dec
or
ins
xchg
mov
stos
dec
adc
lock
dec
add
mov
ins
xchg
inc
push
dec
pop
ins
dec
sahf
pop
adc
inc
xchg
test
pushf
add
xor
push
adc
lods
sbb
inc
dec
xor
sbb
cwde
or
scas
movs
sub
sbb
dec
push
and
sbb
push
aaa
xchg
push
or
sub
dec
arpl
xor
repnz
add
inc
xor
arpl
mov
int
call
mov
push
xchg
add
add
les
dec
adc
es
add
jp
lock
adc
push
popa
sbb
sub
lock
inc
mov
nop
jno
dec
dec
push
sbb
or
loop
jne
(bad)
test
dec
dec
xor
ins
add
xchg
jne
xor
xor
pop
and
in
push
xchg
xor
and
jb
pop
ret
inc
cmp
inc
inc
push
inc
rol
xor
test
sub
xor
adc
dec
inc
jmp
adc
cmp
imul
ins
lock
xchg
out
add
or
popf
add
inc
add
popa
adc
push
pop
mov
xor
aaa
push
aad
loopne
mov
or
push
jae
pop
test
add
popa
inc
dec
cmp
sbb
cmp
mov
cmp
repnz
mov
cmp
jp
inc
jo
adc
cmps
popa
push
sbb
adc
push
outs
dec
jo
or
add
xchg
sar
icebp
or
scas
dec
jo
inc
jbe
push
push
xor
adc
push
mov
inc
mov
dec
mov
addr16
gs
push
or
cmp
and
dec
ss
arpl
shr
rcl
xchg
and
pop
sub
fs
fiadd
jb
add
push
bound
bound
cld
not
ret
dec
imul
add
mov
add
cwde
inc
adc
push
xor
or
bound
mov
je
xor
ja
adc
addr16
sbb
in
scas
test
add
fs
fsubr
dec
fs
ins
imul
rol
pusha
je
mov
ret
int3
loopne
inc
test
xor
sbb
xchg
add
pop
inc
xor
shl
push
cwde
jbe
push
outs
stos
xor
ins
push
ss
js
fsub
mov
not
pop
or
mov
mov
push
adc
sbb
cmp
loopne
add
repnz
push
in
sbb
push
in
aaa
imul
hlt
dec
sub
pop
cli
add
mov
jle
sbb
dec
and
add
add
lock
jbe
popf
push
push
cld
xor
adc
and
in
retf
mov
out
dec
add
adc
repnz
outs
jo
loopne
pop
sub
(bad)
mov
les
sahf
xchg
and
mov
push
xchg
stos
add
xor
mov
push
jp
loopne
test
imul
add
ja
js
push
sbb
xor
mov
mov
inc
xor
dec
jle
pop
movs
jne
sub
fdiv
add
cmp
dec
jne
push
jl
dec
dec
add
shr
push
adc
push
pushf
ins
mov
jns
fimul
push
cmp
test
inc
inc
loopne
dec
inc
jo
or
cmps
adc
test
fmul
push
sbb
jns
xor
mov
data16
push
mov
ja
inc
inc
mov
outs
rcr
push
dec
jp
xor
dec
xchg
ficomp
fs
lods
add
gs
mov
ins
les
scas
pop
cmps
push
dec
dec
jne
dec
addr16
adc
adc
sub
nop
dec
xor
and
xor
add
and
inc
add
fsubr
dec
xchg
mov
sbb
inc
sub
or
inc
pop
(bad)
pop
mov
bound
je
dec
and
cmp
push
and
mov
fs
leave
mov
inc
mov
push
popa
cmp
xor
inc
push
stos
push
ret
movs
sub
inc
push
xchg
retf
xor
adc
pop
movs
inc
dec
in
cmps
adc
gs
and
xchg
test
xor
or
dec
or
into
in
loopne
add
add
add
pop
adc
lock
jns
outs
jno
mov
call
xor
(bad)
out
fcomp
test
xchg
sub
shl
pop
imul
outs
sub
push
enter
jae
add
add
pop
pop
mov
pusha
sub
jl
je
xor
cmps
sbb
div
rcl
push
clc
shl
cli
push
nop
pusha
xor
sub
add
xor
pop
popa
push
push
pop
jb
xchg
pop
inc
push
cmp
mov
xor
dec
outs
or
inc
pop
adc
push
or
int3
xor
dec
stos
rol
outs
mov
dec
mov
dec
mov
inc
imul
push
inc
jb
push
inc
in
mov
add
add
lods
retf
push
shr
jb
cld
mov
mov
push
or
pushw
jl
pop
jo
pusha
inc
hlt
push
mov
jo
adc
inc
fiadd
cs
jp
jne
enter
add
ja
(bad)
adc
movs
xor
inc
dec
fisub
cmps
jo
add
mov
rol
sbb
popa
xor
into
jae
cmp
mov
xchg
sub
push
dec
inc
shr
or
push
cs
dec
sbb
fdivr
stos
inc
rol
push
arpl
inc
stos
push
popa
es
add
aam
arpl
mov
push
pop
mov
jae
dec
xchg
dec
dec
fadd
add
sbb
sbb
fiadd
outs
xor
cmp
push
push
dec
add
push
call
dec
dec
dec
adc
aad
cmp
mov
adc
dec
mov
and
fnstenv
xor
cli
jne
or
and
push
call
sbb
outs
push
rcr
add
sub
hlt
mov
add
push
mov
addr16
data16
enter
sbb
inc
xor
xchg
add
out
pop
dec
adc
mov
in
shl
fdiv
xchg
clc
or
mov
outs
mov
fimul
popa
xor
or
or
push
sbb
mov
inc
sbb
or
dec
xchg
adc
cld
push
inc
add
add
pop
dec
add
inc
pop
ds
mov
add
xor
call
dec
clc
push
push
pop
mov
ja
fs
adc
test
mov
pusha
out
outs
sub
pushf
mov
xor
mov
mov
xor
jl
dec
add
push
xor
inc
cmp
jo
sbb
scas
push
test
fs
dec
or
dec
sbb
sahf
or
push
adc
out
outs
arpl
push
xor
push
dec
je
adc
mov
fs
xor
add
retf
mov
mov
sbb
dec
popa
adc
xor
xchg
add
les
mov
push
scas
inc
and
cwde
push
mov
popf
ins
ins
imul
rol
push
sbb
push
cmp
sub
sub
dec
nop
in
xor
xor
sub
jb
push
fs
push
cmp
bound
(bad)
(bad)
bound
add
lods
test
ins
push
inc
mov
outs
stos
sbb
pop
cmp
jo
cwde
jp
outs
mov
and
jno
fs
and
ins
xor
es
sub
pushw
or
clc
pop
cmp
dec
and
sbb
push
clc
nop
enter
es
dec
js
push
xor
inc
push
xor
jae
fcom
xchg
xchg
add
jl
mov
int3
(bad)
jp
xor
pop
xchg
mov
inc
pop
test
xor
inc
outs
ins
sub
or
and
pop
mov
sbb
xor
add
ret
pushf
push
mov
cmp
mov
ret
sbb
dec
pop
xor
and
repnz
adc
in
pushf
ja
xor
cs
stos
sub
arpl
dec
mov
call
xor
cwde
push
inc
imul
cmp
test
adc
or
jb
adc
out
cld
and
push
gs
jo
and
mov
inc
rcl
jo
jo
add
xchg
add
dec
dec
ss
push
pop
inc
aaa
jbe
je
push
leave
popa
xor
shl
add
add
pushf
xor
push
jne
mov
cmp
aaa
add
mov
pop
adc
cmp
adc
sub
fs
jns
or
dec
adc
adc
mov
jns
dec
gs
fsubr
aam
enter
xor
mov
cmp
loop
xor
lea
pop
stos
cdq
shl
outs
inc
inc
xor
dec
push
add
cdq
push
and
inc
les
scas
call
ss
fidiv
xor
xor
sbb
mov
or
push
inc
cmp
shl
and
call
add
shl
aaa
adc
xchg
inc
fs
ins
je
push
inc
sbb
(bad)
bound
pushf
aam
jmp
push
test
jb
fsubr
mov
aam
test
bound
ror
inc
jp
imul
dec
dec
push
pushf
popf
inc
test
inc
bound
sbb
sub
inc
xor
test
mov
xor
test
jns
dec
sbb
imul
add
add
mov
adc
mov
mov
es
jne
fs
dec
cmp
adc
cs
je
nop
dec
or
aaa
add
movs
loope
mov
sub
dec
add
xor
js
enter
cmp
fmul
push
push
jne
inc
push
in
xchg
push
adc
mov
inc
xchg
popa
push
xor
push
ss
dec
xor
not
add
dec
stos
sub
inc
mov
cs
mov
push
sbb
xor
in
cdq
adc
push
(bad)
ins
pop
mov
push
inc
cs
sbb
movs
es
imul
push
add
sbb
into
mov
add
cld
mov
mov
xor
mov
mov
ss
jo
dec
xor
shl
sub
dec
xor
xchg
ret
push
or
and
add
push
adc
call
and
push
call
push
push
imul
addr16
cmp
imul
mov
push
je
inc
(bad)
int
pop
inc
push
and
lods
inc
cmps
or
dec
sub
and
or
lods
fidiv
add
and
aam
imul
sub
cmps
dec
inc
data16
sahf
jae
push
in
inc
push
fdiv
scas
add
popa
mov
xor
test
cmp
adc
into
shr
push
xor
sahf
and
xor
push
xor
push
test
dec
inc
outs
bound
imul
mov
mov
dec
inc
or
ds
xchg
call
stos
jp
mov
xor
sub
test
xor
xchg
jp
or
mov
dec
add
jp
mov
or
dec
jno
sub
das
sbb
out
jbe
xchg
inc
or
test
adc
mov
inc
lods
push
dec
fadd
push
int3
pusha
test
inc
shl
cmps
je
adc
push
rol
test
mov
xor
push
retf
mov
adc
popa
push
push
or
xlat
xchg
push
push
dec
inc
push
push
mov
sub
xchg
jne
cmp
push
test
push
out
xor
push
mov
pop
cmp
addr16
or
popa
cwde
dec
xor
pop
xchg
xchg
jo
movs
inc
dec
pop
or
ins
cmp
inc
xor
cmp
bound
push
xor
mov
addr16
adc
fs
sub
imul
push
inc
or
ficomp
push
inc
test
shl
enter
daa
or
and
dec
(bad)
fcmovu
jo
sub
jae
ins
lods
xchg
int3
ins
jne
jo
add
test
push
nop
inc
xchg
push
xchg
les
adc
xor
nop
adc
pop
ss
xchg
mov
call
mov
xor
ss
test
stos
mov
mov
jb
movs
sbb
add
or
es
mov
push
mov
dec
push
or
(bad)
mov
shl
imul
push
outs
test
ins
test
and
call
mov
push
bound
inc
push
adc
xor
sub
cmp
add
adc
add
push
mov
add
mov
sub
sub
adc
mov
jne
imul
sub
rol
bound
nop
stos
retf
dec
push
push
xor
ins
ror
test
enter
inc
cld
shr
adc
and
loopne
fs
push
data16
push
dec
in
push
cwde
mov
rcr
data16
mov
push
dec
xor
jo
mov
neg
and
pop
cwde
repnz
scas
test
cmp
call
sbb
xchg
add
mov
xor
dec
add
retf
bound
pop
push
jno
fcom
ss
push
xchg
test
jb
xchg
add
pop
or
and
inc
ja
cmp
push
popa
push
cmp
jp
xor
mov
popa
push
xchg
movs
sbb
push
mov
push
dec
xchg
fwait
sbb
push
adc
jmp
dec
movs
jbe
inc
dec
xchg
stos
fld
add
fs
push
jb
mov
sub
xor
aaa
xor
push
or
and
cmp
arpl
lods
inc
inc
push
mul
test
inc
dec
jle
rcl
add
push
ficomp
and
in
xor
ins
inc
and
and
fs
ins
push
mov
retf
pop
arpl
div
aam
or
mov
test
push
push
adc
bound
adc
dec
shl
test
mov
cmp
jbe
add
mov
rcl
cmps
pop
shl
pop
ins
rcl
cmp
cmp
popa
and
popa
sub
xor
mov
outs
jbe
ins
loop
dec
inc
inc
xor
dec
xchg
adc
int3
bound
aas
shr
gs
jno
cli
mov
leave
test
inc
imul
pop
and
sub
mov
fadd
arpl
les
je
cmp
add
into
pop
xor
clc
push
hlt
dec
jae
push
movs
pop
dec
add
cmp
add
adc
ins
imul
hlt
loopne
cmps
test
jae
lods
inc
shl
ins
jno
push
add
add
int3
jo
and
mov
inc
dec
dec
data16
pop
and
and
push
ins
popa
push
push
push
dec
fdiv
bound
and
mov
nop
or
jae
inc
push
dec
or
mov
movs
mov
ss
mov
dec
scas
and
outs
xor
in
call
jne
push
xor
imul
push
cld
shl
mov
mov
dec
loopne
adc
push
and
fs
adc
clc
out
inc
dec
xor
inc
ins
ins
push
popa
sub
sub
test
jbe
test
jne
dec
jo
stos
add
dec
or
jmp
mov
adc
adc
push
fisub
fs
dec
mov
mov
adc
adc
sbb
push
test
in
ss
push
xchg
rcr
jmp
call
enter
ja
fidiv
push
inc
and
push
mov
mov
test
xor
xor
cwde
in
add
jbe
xor
add
addr16
mov
fldcw
xor
ja
int3
imul
add
mov
inc
cmp
push
jns
inc
pop
sub
inc
in
ss
cmp
bnd
cmp
and
out
cli
outs
inc
ins
xor
dec
xor
fsubr
pop
or
dec
test
inc
jle
push
sub
pop
push
jno
out
push
aad
push
mov
xor
jp
imul
inc
jne
clc
jo
push
test
movs
xchg
add
pop
or
data16
jne
xor
dec
xor
push
jo
sbb
pushf
xor
aaa
and
xchg
xchg
mov
clc
inc
push
js
add
jno
sub
push
inc
imul
or
cmp
or
dec
jns
cmps
sub
jmp
add
dec
stos
aad
movs
pop
xchg
inc
jne
ja
and
data16
ret
xchg
push
adc
mov
add
push
mov
ror
inc
int
jo
push
outs
jle
xchg
call
adc
inc
ficom
mov
and
(bad)
ins
ficomp
inc
dec
imul
xchg
add
jne
dec
inc
aaa
test
jb
sahf
push
into
and
cs
jae
out
add
push
dec
adc
mov
fdivr
ins
imul
in
imul
push
and
push
data16
and
add
popa
clc
dec
popa
push
arpl
outs
xor
add
jp
cmps
push
push
adc
popa
ins
or
jns
stos
test
sbb
xchg
nop
jne
add
dec
xchg
cmps
cld
into
xor
and
mov
inc
mov
mov
nop
sbb
sub
popa
lea
test
push
sbb
ins
jmp
inc
jne
fadd
outs
push
ss
inc
ret
dec
call
push
xchg
scas
int3
push
xchg
inc
add
call
push
push
popa
push
lods
ficom
js
mov
call
ins
or
imul
loopne
fs
or
jno
ins
push
call
add
dec
sub
xor
jp
xchg
mov
adc
popa
mov
and
mov
dec
pusha
mov
cmps
xor
rol
dec
loopne
mov
and
aam
aam
and
jno
fidiv
je
int3
add
and
push
fadd
aad
dec
test
push
or
cmp
(bad)
bound
dec
inc
and
inc
aam
es
jbe
inc
shr
outs
sahf
sbb
fs
push
je
jp
outs
jmp
inc
ja
dec
or
mov
adc
push
or
push
adc
popa
and
mov
ins
test
push
inc
add
xchg
jle
dec
shl
cmp
adc
sbb
push
shl
add
xchg
shr
add
dec
mov
mov
push
cmp
outs
push
jae
mov
cmps
add
inc
sbb
pusha
dec
pop
xor
xor
dec
jno
add
test
es
sbb
mov
hlt
je
push
or
jb
mov
outs
push
dec
xchg
inc
adc
mov
dec
sbb
jp
push
adc
push
mov
push
fisubr
xor
cwde
dec
pop
mov
outs
(bad)
movs
call
dec
mov
or
xor
jno
dec
sbb
push
mov
or
push
push
scas
bound
sbb
mov
and
bound
test
sub
jp
dec
push
sbb
push
push
mov
xor
adc
movs
add
ret
dec
ins
inc
xchg
stos
xchg
in
mov
mov
dec
jo
push
lds
adc
jb
and
aaa
(bad)
shl
mov
push
mov
ins
push
adc
bound
sbb
push
dec
pop
add
push
sahf
dec
int3
push
lds
xor
xor
stos
call
push
xor
lods
mov
mov
dec
loopne
jo
outs
dec
xor
dec
dec
data16
push
bound
add
dec
inc
inc
arpl
imul
or
inc
adc
fadd
imul
push
ins
push
lods
dec
lods
fst
(bad)
xchg
or
jo
xchg
cdq
add
and
mov
add
mov
dec
add
imul
mov
fcom
ja
inc
dec
push
retf
pop
movs
js
call
(bad)
cld
dec
sub
cwde
sbb
je
out
push
dec
nop
pop
popf
call
cs
jo
call
jns
or
mov
xor
xchg
add
out
add
push
add
dec
push
sbb
into
inc
push
mov
fld
cmp
mov
jbe
addr16
bound
adc
xor
xor
adc
mov
dec
lock
dec
stos
pop
jb
sbb
adc
add
adc
inc
enter
ins
dec
test
xor
cmp
or
sub
shr
mov
sbb
inc
out
ins
xor
add
xor
es
sub
push
call
push
sbb
call
inc
mov
ja
ret
js
ror
adc
mov
es
dec
ins
jbe
xor
(bad)
jmp
outs
xor
jae
push
xor
cmp
push
push
mov
loopne
push
dec
dec
imul
inc
push
push
test
clc
xor
fisub
aaa
push
xor
or
mov
test
inc
cmp
je
popa
(bad)
sbb
jbe
inc
push
jp
pusha
xor
bound
push
and
loope
cs
inc
js
push
pop
add
out
push
push
ins
loop
jo
mov
xchg
add
dec
and
shl
data16
pop
inc
dec
dec
adc
in
jb
ss
or
loop
jo
xor
push
dec
inc
jmp
ins
push
xor
sub
mov
cmp
pop
adc
test
fdiv
inc
add
call
in
add
loopne
les
ins
xchg
sbb
xor
or
fimul
loopne
dec
adc
dec
push
cmp
add
test
inc
sub
push
ins
popa
xor
outs
dec
enter
and
or
ss
mov
(bad)
jne
retf
jo
test
xor
mov
fsubr
cmp
into
dec
test
mov
mov
sbb
cmp
dec
jbe
movs
adc
lock
mov
cwde
jp
mov
cmp
mov
pop
fiadd
add
and
les
push
adc
push
mov
pop
xor
sbb
mov
mov
cmp
xchg
dec
mov
sub
cli
push
push
imul
xor
add
cld
sub
xchg
or
call
outs
push
test
push
push
jmp
jae
or
sub
inc
popa
out
data16
dec
xor
sbb
sub
inc
hlt
pop
mov
neg
inc
and
pop
push
retf
test
xor
sbb
jo
cwde
mov
test
add
shl
jae
retf
xchg
loope
dec
xor
or
and
push
inc
sbb
into
inc
ss
cmp
(bad)
push
mov
sub
gs
es
dec
xor
dec
or
jb
arpl
lods
and
shr
sub
arpl
adc
xor
pusha
jae
inc
mov
clc
mov
test
mov
add
push
inc
hlt
push
xor
push
sahf
aaa
and
bound
or
mov
add
push
adc
push
sub
push
sub
inc
cmp
adc
push
push
inc
xor
sub
add
inc
dec
cmps
mov
push
add
repnz
dec
ds
imul
clc
bound
jne
fidiv
xchg
and
push
add
es
push
pop
and
out
(bad)
push
cmp
test
call
push
add
stos
int3
ss
jp
outs
xchg
add
pop
inc
inc
xor
adc
bound
push
dec
xchg
fs
add
jno
dec
imul
fs
xor
cmps
push
fwait
adc
mov
ins
sbb
cld
addr16
mov
push
je
aaa
pop
inc
xor
and
(bad)
dec
mov
xor
je
adc
xor
test
xchg
or
mov
cmp
inc
cmp
mov
jp
pop
adc
add
and
fbstp
outs
mov
dec
ja
inc
pop
jbe
dec
adc
push
dec
jns
ins
inc
or
mov
aam
mov
pop
scas
and
xor
inc
jns
add
or
push
push
cmp
out
xor
cmps
fs
dec
sub
jns
aaa
mov
nop
or
test
imul
ins
add
xchg
or
arpl
cs
add
ret
dec
push
xor
mov
inc
sbb
xor
mov
push
push
sbb
inc
jl
add
push
dec
outs
outs
push
popa
fsub
or
test
jo
inc
dec
dec
dec
inc
aaa
ins
loopne
mov
stos
sbb
dec
add
mov
inc
dec
push
xchg
xor
dec
addr16
mov
enter
or
popa
xor
js
cs
or
add
loopne
cli
aad
dec
inc
inc
push
jne
push
data16
je
xchg
push
imul
xor
push
test
imul
shl
dec
add
mov
xor
cs
xchg
jo
ins
inc
fist
sub
aaa
xor
push
popa
leave
sub
mov
sub
dec
cmp
retf
dec
dec
mov
xor
mov
test
push
jp
shr
outs
clc
jbe
cmp
push
dec
jb
dec
in
xchg
xchg
cwde
dec
jl
gs
xchg
mov
xor
push
add
stos
enter
or
test
sub
mov
pusha
push
push
pop
dec
add
popf
ss
dec
inc
push
test
and
loop
lods
dec
data16
bound
add
inc
and
jbe
cli
inc
push
add
pop
sub
or
xor
fild
adc
inc
push
popa
push
je
scas
cmps
xor
dec
sbb
lock
dec
dec
stos
dec
dec
sub
pop
add
movs
dec
dec
push
jbe
xor
data16
bound
add
dec
frstor
jbe
addr16
int3
and
push
mov
jo
inc
add
cmp
add
lods
push
xor
jno
push
or
fsub
adc
add
movs
mov
mov
push
sub
ins
jb
ins
mov
popf
mov
xor
sbb
jbe
pusha
jbe
test
popa
and
dec
inc
out
mov
sub
inc
shl
push
bound
xchg
xchg
data16
sbb
mov
jne
add
xchg
in
test
inc
inc
mov
lods
sub
jb
ins
mov
push
add
js
adc
push
shl
add
shl
out
outs
dec
nop
cs
movs
je
js
push
push
aaa
ins
lods
ror
xchg
fidiv
xor
jmp
pusha
push
mov
into
cmp
and
xchg
ret
dec
dec
nop
xchg
mov
xchg
xchg
add
es
js
jns
inc
test
or
enter
movs
push
mov
cmp
addr16
dec
inc
push
mov
aaa
dec
fdivr
test
nop
xor
xor
push
jne
dec
rol
cmps
jo
dec
push
or
xor
mov
(bad)
xor
retw
add
inc
add
inc
inc
(bad)
and
dec
inc
add
or
push
jp
jmp
xor
dec
imul
mov
outs
bound
jno
pop
or
xor
push
jns
adc
js
or
xchg
ss
mov
jl
xchg
or
mov
aaa
or
sbb
ja
xor
push
dec
push
push
push
(bad)
jb
dec
outs
outs
imul
push
mov
cmp
cmp
cmp
jae
imul
je
pusha
mov
out
in
mov
push
and
shr
aam
pop
bound
xor
dec
and
nop
adc
xor
add
mov
cmp
inc
jbe
nop
popa
add
inc
jo
pop
mov
jne
dec
sbb
ins
push
mov
push
xor
or
cmp
rcr
mov
mov
inc
xor
mov
dec
xor
enter
and
inc
ret
loopne
movs
sbb
inc
adc
inc
ins
xchg
pop
jb
push
cmp
cmp
push
and
xor
ret
enter
shr
dec
push
aam
push
repnz
and
push
dec
push
mov
add
push
jle
imul
cwde
push
inc
or
inc
xchg
xor
popa
sbb
ja
lods
mov
les
inc
dec
jae
fiadd
push
mov
push
inc
xchg
enter
or
fsub
add
mov
cs
inc
xor
test
inc
inc
mov
and
imul
stos
adc
sbb
adc
push
into
inc
arpl
dec
dec
fs
adc
adc
dec
addr16
test
jno
retf
inc
add
push
push
adc
dec
bound
jp
jl
xor
mov
in
push
mov
mov
aam
xor
arpl
ins
xor
shl
pop
imul
inc
or
xchg
inc
fst
inc
or
es
and
xor
in
sbb
dec
in
dec
jl
sbb
push
add
cmc
mov
inc
imul
addr16
jns
jb
xchg
push
test
cwde
push
cmp
inc
push
push
ins
gs
push
xor
imul
inc
nop
dec
(bad)
in
push
adc
push
jp
xor
sub
call
cli
xchg
test
sub
retf
adc
cli
in
adc
mov
dec
(bad)
jbe
test
dec
pop
xor
and
loop
mov
movs
sub
loopne
add
popa
dec
cmp
push
sub
mov
push
mov
cs
ja
aam
dec
sbb
sub
ficom
push
xor
add
push
cmp
xchg
add
jb
push
inc
js
mov
add
adc
fisub
mov
pushf
mov
fbstp
xor
addr16
push
push
addr16
or
inc
dec
jne
mov
mov
jo
push
adc
cs
arpl
and
push
mov
fadd
scas
inc
xchg
inc
add
xchg
pushf
mov
add
fs
popa
inc
jae
dec
xor
mov
xchg
out
pop
xor
dec
test
add
das
loopne
jns
imul
popa
mov
mov
and
mov
and
je
fs
jp
xor
mov
pop
push
je
stos
shr
jp
fs
mov
lock
or
popa
mov
inc
mov
not
sub
(bad)
imul
or
jbe
dec
sub
adc
js
pushf
inc
mov
pop
or
dec
movs
mov
dec
adc
xor
enter
push
or
popa
imul
push
(bad)
xor
lock
add
scas
xchg
mov
sub
imul
pop
jbe
ret
aam
stos
and
adc
ror
pop
mov
outs
inc
sbb
popa
daa
or
pop
stos
sub
xor
inc
ins
push
push
sbb
je
cs
push
push
sub
mov
js
push
sbb
xchg
ror
test
push
pop
cmp
mov
mov
adc
cmp
fidiv
inc
dec
fisubr
cmp
mov
push
xor
push
out
dec
sub
call
push
inc
mov
rcl
mov
add
and
les
bound
enter
inc
mov
aad
mov
dec
add
mov
retf
sub
xor
fwait
cmp
and
dec
gs
ins
inc
xor
inc
sub
jo
outs
jb
les
mov
add
lods
xchg
or
dec
cwde
xor
push
xor
sub
jp
dec
in
(bad)
call
pop
inc
ja
(bad)
inc
cs
ss
push
inc
dec
mov
sub
bound
or
call
xchg
push
push
inc
dec
or
dec
inc
xchg
inc
push
mov
pop
je
push
inc
pop
push
jno
inc
push
pop
fnsave
int3
test
ins
fs
mov
push
sbb
mov
test
in
jno
dec
push
cmp
adc
outs
aam
push
push
xchg
and
retf
mov
sbb
js
and
push
nop
enter
enter
add
xor
fidiv
push
mov
ret
cwde
mov
sub
jmp
sbb
adc
ret
push
dec
dec
mov
push
xchg
add
add
mov
inc
call
add
xor
sub
ss
jb
inc
ins
sub
sbb
mov
hlt
and
cwde
(bad)
lds
and
shl
inc
add
pop
jo
add
dec
mov
sub
inc
add
fmul
rol
test
ss
dec
js
cmp
dec
dec
mov
cmp
dec
ins
sub
or
push
jp
in
push
inc
push
ins
cmp
or
inc
xchg
push
pop
sbb
gs
ds
inc
ss
ins
inc
pop
mov
fsubr
or
push
inc
push
push
cmp
sub
push
lock
test
adc
ins
xchg
mov
dec
xor
movs
add
ins
and
adc
jmp
push
push
xor
inc
mov
sub
cmps
cld
pop
mov
rcl
pusha
dec
sub
adc
mov
ret
mov
push
loopne
mov
test
add
inc
aaa
jb
xchg
fsub
and
ss
inc
in
dec
pop
mov
mov
imul
test
mov
dec
or
bound
xor
adc
or
ins
jno
imul
rcr
(bad)
js
ds
imul
inc
or
adc
push
sbb
cmp
aam
dec
ficomp
inc
mov
xor
ja
jo
dec
xor
or
mov
mov
sbb
sub
movs
ss
outs
ins
inc
popa
and
cmp
jbe
xor
mov
push
cmps
or
push
xchg
pusha
xchg
push
cmp
sub
sbb
xor
jno
inc
popa
cmp
inc
xor
push
xor
or
adc
xor
stos
in
adc
bound
xor
test
push
and
rol
mov
(bad)
dec
dec
dec
js
push
xchg
sub
mov
xchg
xchg
mov
add
adc
sub
(bad)
push
mov
push
cmp
push
mov
xor
jbe
inc
push
add
pop
sbb
(bad)
retf
fcmovu
ror
xor
push
push
pop
sub
je
adc
(bad)
xor
mov
dec
jbe
jo
js
out
add
mov
dec
push
cs
or
cmp
push
pushf
aaa
test
sub
cmp
jle
jecxz
cmp
jp
je
xor
push
aaa
imul
jo
mov
push
out
addr16
sub
mov
jb
add
add
push
mov
and
push
dec
add
stos
adc
fmul
imul
dec
in
popa
call
call
into
dec
inc
adc
adc
mov
lea
sbb
xchg
push
xchg
mov
ficom
loopne
shl
jne
test
push
sbb
es
jmp
loop
pop
xchg
adc
push
data16
jo
mov
push
sub
xor
sbb
dec
mov
xor
push
sbb
jo
or
sub
xor
mov
jo
inc
aad
fsubr
fmul
inc
dec
pop
mov
push
push
scas
imul
cmp
push
push
dec
ins
retf
push
cdq
loopne
movs
int3
mov
(bad)
(bad)
inc
mov
call
or
cmp
inc
mov
fldcw
inc
or
cmp
out
ss
fs
inc
cwde
data16
retf
add
xor
inc
cmps
sahf
dec
dec
cmp
add
dec
mov
push
aam
imul
push
xchg
les
dec
sbb
inc
xchg
xor
and
movs
or
dec
loope
enter
push
aaa
and
and
dec
outs
adc
push
or
outs
out
xor
loop
push
jne
inc
xor
push
adc
dec
jle
adc
dec
push
dec
ja
(bad)
xor
dec
push
dec
xor
out
mov
push
jno
call
nop
jp
cmp
sub
push
mov
xchg
popa
mov
mov
ror
cmp
and
dec
sbb
xchg
push
cmp
je
push
push
cld
inc
mov
pop
mov
push
push
jp
cmps
ja
jo
mov
push
inc
mov
shl
mov
push
cmps
inc
inc
add
xor
jbe
xchg
add
jae
cli
add
les
(bad)
shl
push
push
mov
push
adc
sub
ins
xchg
dec
mov
push
push
xchg
mov
outs
imul
imul
cwde
cli
jae
cdq
fadd
push
jne
push
or
sub
xchg
sbb
inc
jl
push
data16
test
pop
and
or
dec
push
aaa
jne
sub
jo
cld
jns
or
out
pop
push
adc
pushf
test
xor
lods
or
inc
imul
jb
mov
shl
pusha
call
push
pusha
mov
loopne
and
movs
popf
and
xor
je
xchg
call
inc
xchg
shr
js
pop
jns
aaa
push
mov
gs
pop
push
inc
xor
aaa
xor
inc
ss
sub
shl
push
cmps
mov
ret
sub
ret
or
push
shr
push
sbb
hlt
jb
push
inc
xor
je
popa
mov
ins
jb
cmp
mov
xor
dec
inc
mov
movs
xor
dec
push
push
mov
js
dec
sbb
fisub
dec
inc
shl
(bad)
mov
pop
cmps
rcl
adc
or
push
push
jae
mov
and
enter
or
pop
imul
push
cmp
dec
inc
addr16
xchg
adc
mov
outs
xor
xchg
and
cwde
sbb
popa
inc
movs
jb
ret
add
add
imul
jmp
add
mov
xor
bound
pop
dec
je
test
xchg
fmul
dec
mov
pop
dec
bound
xor
or
or
inc
ss
pop
fs
int3
popa
es
inc
push
adc
or
adc
mov
popa
jb
dec
mov
add
pop
xchg
and
aam
add
pop
popa
mov
outs
add
add
imul
shr
lods
mov
shr
dec
jae
mov
dec
test
xchg
popa
movs
push
or
inc
dec
arpl
sub
add
or
imul
pop
cmp
test
xchg
mov
xor
sub
push
data16
or
sbb
push
inc
outs
xchg
mov
push
sbb
addr16
and
and
push
cmps
gs
adc
adc
mov
mov
mov
push
xchg
sbb
ins
pop
mov
dec
cmp
push
xchg
add
cwde
and
in
cs
and
data16
xchg
call
push
and
or
push
jp
sub
(bad)
dec
jne
jp
dec
jns
push
cmp
xchg
ret
loopne
inc
ret
inc
push
push
sub
and
(bad)
aam
mov
push
rcl
(bad)
mov
pusha
in
into
bound
ins
add
aaa
push
pop
xchg
mov
push
sub
bound
jne
cmp
inc
mov
mov
or
inc
xor
cld
pop
xchg
ret
or
es
push
mov
mov
inc
push
aam
retf
push
mov
or
inc
ins
push
push
xor
into
or
push
mul
cmp
shr
inc
adc
mov
cmp
add
mov
and
inc
push
cwde
and
push
inc
mov
jae
mov
dec
cmp
xor
dec
aam
jo
jb
dec
add
inc
mov
cli
nop
inc
and
sub
xor
push
loopne
adc
mov
cmp
push
mov
xor
dec
push
pop
stos
add
mov
xor
xor
imul
mov
push
inc
sub
sahf
push
cld
gs
(bad)
mov
hlt
jb
push
pop
jb
call
dec
cwde
add
mov
mov
cmp
push
push
in
mov
test
or
ja
push
sub
ror
dec
or
and
and
inc
lods
xor
add
inc
xchg
mov
les
(bad)
mov
nop
add
add
and
or
jo
(bad)
(bad)
pop
mov
push
xor
pop
stos
ret
inc
push
push
push
loopne
inc
imul
adc
sahf
cmps
ror
shr
movs
mov
cwde
ins
mov
xor
loope
mov
dec
inc
push
dec
push
sub
xchg
lock
xchg
push
jno
arpl
dec
pop
call
ins
cli
jne
lods
jno
sub
add
xor
push
dec
xor
dec
ins
mov
cmp
ja
hlt
add
add
cmps
call
sub
dec
inc
cs
sub
cmps
stos
outs
xor
bound
mov
and
mov
inc
fs
mov
test
mov
bound
outs
ficom
and
sub
lock
xchg
sbb
inc
nop
out
retf
mov
pop
imul
sub
(bad)
jb
jbe
xor
jb
call
dec
jo
jns
js
dec
nop
cdq
add
and
(bad)
mov
and
inc
and
(bad)
sub
cmps
and
and
and
aaa
shl
push
and
(bad)
add
bound
and
inc
repnz
cmp
push
jb
pop
dec
inc
sbb
pop
xor
adc
adc
inc
mov
shl
jb
cld
push
jbe
cwde
push
repnz
les
mov
sub
cs
movs
push
push
nop
xor
adc
or
cmps
es
xchg
mov
inc
or
sbb
or
xchg
retf
jne
bound
inc
test
mov
dec
xor
push
jns
gs
test
pusha
(bad)
fs
mov
mov
jae
dec
inc
or
pop
dec
dec
imul
jp
fs
push
inc
adc
leave
cs
xor
retf
inc
push
popa
and
mov
jbe
inc
ret
mov
adc
adc
test
xchg
fcom
or
ret
push
sbb
dec
jecxz
rcl
inc
inc
and
js
shl
cmps
pop
xchg
add
test
dec
pushf
dec
and
aaa
inc
ins
jl
adc
mov
adc
retf
mov
pop
add
popa
sar
and
dec
push
addr16
dec
repnz
inc
inc
jns
adc
mov
or
push
or
dec
push
xchg
or
pop
ror
pusha
jp
ss
ss
outs
xor
inc
cli
ret
test
and
dec
inc
cmp
mov
lea
(bad)
imul
jle
in
test
dec
loopne
mov
mov
mov
mov
ins
or
and
ret
dec
or
or
pusha
cdq
add
cmp
push
pop
or
adc
sar
cli
inc
inc
push
dec
jp
cmc
and
mov
inc
push
or
add
fimul
ins
or
xchg
or
push
sbb
adc
dec
xchg
mov
mov
test
adc
mov
xor
dec
xor
bound
je
addr16
cs
cmps
or
push
dec
inc
shr
or
inc
dec
mov
and
pop
push
sbb
xchg
outs
mov
fs
inc
jbe
fidivr
cmp
ror
add
popa
je
in
cmps
xor
cmp
jb
push
inc
cmp
add
and
cld
popa
dec
inc
inc
mov
outs
mov
movs
push
imul
dec
pop
jp
xchg
mov
jb
push
mov
push
adc
adc
in
add
lods
push
inc
xor
xchg
adc
(bad)
movs
inc
inc
mov
push
xchg
jns
add
jo
jl
fs
xchg
dec
push
xor
es
sbb
fidiv
sbb
inc
push
push
call
les
inc
stos
dec
into
mov
bound
push
dec
jmp
inc
xchg
loope
bound
adc
fcomp
loopne
pusha
dec
gs
jb
inc
xor
jo
shl
jo
adc
xor
int3
(bad)
callw
inc
xor
or
and
out
jbe
xor
push
call
data16
in
imul
xor
(bad)
sub
xor
in
sub
dec
mov
push
dec
mov
mov
(bad)
cs
jo
xchg
addr16
push
or
ins
inc
dec
addr16
in
add
push
jl
dec
add
pushf
fmul
jecxz
jp
pop
push
imul
inc
dec
mov
adc
cmp
dec
jae
lds
popa
(bad)
cmp
ja
dec
addr16
push
aam
xor
adc
push
push
sub
inc
sahf
sbb
jb
mov
xchg
dec
mov
dec
pop
sub
xchg
pusha
jecxz
adc
popa
dec
xor
mov
aad
leave
pusha
clc
ins
fisubr
inc
push
sbb
add
cli
xor
or
fwait
inc
xor
dec
push
adc
xor
(bad)
call
cmp
dec
add
and
adc
inc
push
and
popa
push
or
cmp
mov
stos
xor
mov
and
pop
dec
imul
xor
mov
push
push
dec
arpl
jb
dec
inc
mov
or
or
xor
movs
ss
push
and
sub
push
and
aam
dec
mov
pop
retf
dec
dec
push
adc
shr
enter
js
push
dec
or
inc
xor
pop
and
push
mov
cmp
push
mov
xor
stos
and
push
fs
jp
xchg
sbb
(bad)
push
jo
push
push
jno
push
push
out
shr
or
je
scas
dec
test
lods
stos
lea
popa
or
xor
cld
movs
nop
test
inc
inc
pop
jb
or
aas
pop
push
push
jns
es
shl
dec
adc
sbb
and
push
or
rol
imul
add
xchg
pop
add
ja
jo
clc
ins
inc
jb
inc
jmp
neg
es
jp
push
imul
movs
test
dec
push
or
push
pop
xchg
push
in
aam
or
popa
arpl
data16
pushf
inc
inc
add
stos
nop
jbe
js
sahf
popa
jns
jns
stos
and
inc
or
mov
movs
add
(bad)
lods
inc
repnz
nop
adc
call
movs
push
loopne
ja
bound
xor
je
push
inc
inc
fdiv
icebp
or
pop
sub
and
in
push
aad
push
in
xor
xor
mov
shl
inc
dec
pop
movs
imul
sbb
mov
xor
outs
add
lock
push
outs
push
jno
or
inc
push
or
ror
rcl
imul
add
push
push
pusha
push
mov
in
test
pop
jne
test
xchg
inc
mov
dec
push
imul
push
adc
outs
pop
int3
jne
add
dec
(bad)
lds
test
outs
jb
inc
(bad)
and
mov
jbe
xchg
test
push
cmp
xor
push
arpl
pop
inc
test
mov
inc
add
popa
loop
mov
push
imul
push
cli
push
ja
jo
add
bound
jp
and
call
mov
jp
dec
inc
add
or
push
mov
xor
or
inc
sbb
into
dec
movs
push
ins
outs
mov
inc
mov
or
bound
xchg
clc
xor
retf
jne
mov
js
or
mov
mov
ins
inc
jp
sub
jp
jne
inc
js
inc
push
xchg
dec
add
pop
cmp
dec
aaa
adc
adc
mov
and
sar
adc
push
push
fidiv
je
inc
dec
loope
rcr
test
mov
xchg
mov
add
xor
add
adc
test
out
add
ss
ret
and
adc
xchg
fstp
dec
and
mov
call
cmps
sub
xor
pop
xchg
add
or
push
pop
xchg
mov
cs
mov
inc
dec
push
enter
mov
jo
popa
dec
sub
jns
cwde
push
or
call
sub
gs
pop
in
dec
add
xchg
das
xor
or
int3
inc
push
push
jns
inc
sbb
push
test
imul
cld
and
dec
pop
xor
rcl
push
ss
inc
mov
or
loopne
pusha
sbb
bound
cmps
cmp
adc
sub
fdivrp
mov
imul
int3
mov
push
jp
lods
xor
push
mov
fstp
loopne
out
xchg
inc
jb
dec
cs
scas
inc
fisubr
mov
add
mov
fld
imul
dec
sbb
adc
mov
xchg
push
cmp
pop
cmp
mov
sub
dec
fdiv
push
cs
ins
jp
jae
inc
mov
jb
movs
in
sbb
jns
inc
adc
jmp
push
je
test
or
enter
and
and
xchg
lods
rol
mov
mov
bound
xchg
cmps
push
or
add
bound
cs
jo
mov
dec
fs
jae
cld
push
push
pop
test
(bad)
jl
xchg
lods
add
jae
mov
push
add
and
push
sbb
jl
cmp
add
push
mov
push
aaa
mov
mov
sbb
add
(bad)
xor
imul
push
dec
mov
jae
ror
xor
add
mov
add
popa
and
xchg
inc
jecxz
pop
push
ss
dec
sbb
inc
inc
xor
ficom
pop
push
dec
pop
test
or
ds
and
inc
sbb
inc
xor
pop
xor
in
fsubr
div
mov
outs
sub
push
pop
lods
push
add
pop
or
dec
and
aam
bound
cmp
push
loop
nop
xor
rcl
inc
adc
(bad)
push
adc
jbe
push
or
jae
xor
xchg
xchg
inc
hlt
loopne
push
nop
retf
and
sbb
dec
bound
pushfw
dec
mov
add
rol
mov
dec
loope
and
ds
mov
xor
inc
mov
pusha
stos
or
mov
fs
dec
mov
pop
sub
push
add
push
mov
and
imul
cmps
popa
jb
out
inc
push
lods
nop
into
push
inc
push
(bad)
inc
add
push
jb
push
loope
push
(bad)
js
adc
jo
retfw
loop
cli
cwde
push
loopne
repnz
shl
add
sub
push
add
ret
nop
clc
cwde
pop
mov
bound
call
cmp
outs
sub
fs
lock
or
ds
push
xor
add
jbe
in
inc
adc
xor
js
rcr
ins
cs
cs
xchg
push
sbb
inc
xor
xchg
push
dec
push
dec
ss
xchg
and
dec
pusha
xchg
ins
inc
sub
push
push
inc
dec
jo
push
dec
movs
mov
push
int3
call
mov
dec
int3
xor
xor
push
icebp
or
cmp
xor
push
xchg
outs
mov
jo
and
push
cs
pop
and
js
inc
push
dec
pop
outs
dec
jp
and
mov
fs
sbb
test
lods
out
jmp
jb
outs
xor
stos
mov
push
mov
push
dec
enter
xchg
pop
sub
push
inc
add
and
call
cmc
dec
push
outs
jno
xor
pop
xor
adc
dec
inc
xor
xchg
and
add
movs
add
push
(bad)
push
or
hlt
ins
je
aad
xchg
je
inc
arpl
fisub
stos
ret
dec
outs
mov
and
test
inc
dec
dec
out
jp
add
cmp
mov
inc
mov
push
in
mov
mov
jbe
int3
(bad)
push
cmp
add
and
dec
adc
dec
push
outs
adc
ds
jns
pop
ss
push
xchg
mov
push
push
loopne
call
jmp
cli
add
movs
push
or
and
push
sbb
ficom
mov
(bad)
aaa
inc
inc
js
movs
and
loope
div
dec
xchg
add
ja
movs
adc
imul
ret
adc
test
push
lea
and
outs
push
sbb
inc
inc
xor
add
adc
sbb
dec
push
arpl
push
xor
sub
dec
inc
sub
or
mov
add
add
pop
push
add
inc
or
ins
js
ja
mov
data16
sbb
leave
js
mov
dec
push
push
push
mov
mov
nop
shl
push
inc
pop
add
sbb
xor
xchg
arpl
jne
imul
loopne
call
aam
movs
xor
not
add
xor
inc
ret
gs
shl
push
movs
les
fild
shr
add
or
es
mov
xchg
jb
inc
jae
push
cmp
mov
jp
dec
inc
adc
sub
add
sub
ins
xchg
push
xchg
pop
sbb
pop
adc
inc
sub
mov
fs
push
pop
add
ss
pop
mov
in
cwde
jb
mov
push
clc
pop
bound
sub
scas
mov
arpl
sbb
pop
popf
xchg
sub
adc
inc
cmp
add
add
jno
cmc
inc
or
or
movs
mov
sbb
add
xor
jo
mov
mov
and
retw
mov
cmps
mov
bound
push
pusha
xor
sbb
add
sub
push
pusha
mov
xor
in
xchg
ret
sbb
jns
mov
js
enter
add
adc
sub
movs
ja
xor
push
ins
jo
popa
popa
add
xor
xor
inc
adc
sub
ins
movs
xchg
inc
sub
add
mov
push
cmp
inc
test
dec
or
and
jb
inc
and
mov
adc
or
inc
inc
pusha
test
push
pusha
mov
add
jbe
ins
cmp
pop
mov
push
push
hlt
lods
inc
push
xchg
mov
inc
xor
fisub
loopne
adc
xor
jne
popa
mov
or
jns
dec
pop
push
sbb
dec
ins
push
(bad)
push
sub
xor
(bad)
clc
pop
pop
fwait
cmp
xchg
aam
cld
arpl
push
sbb
fsub
xor
fisub
cmp
xor
mov
push
popa
inc
adc
or
push
dec
push
fisubr
push
dec
dec
add
sub
dec
retf
mov
push
je
dec
jo
enter
push
cli
imul
xor
popa
test
adc
les
test
arpl
sub
push
rcr
or
push
dec
aaa
adc
dec
(bad)
inc
dec
pop
xor
mov
push
inc
xchg
adc
js
xchg
inc
jno
ss
bound
pop
jle
sub
xor
dec
push
xchg
xor
cwde
ins
in
movs
add
jne
sub
inc
inc
and
jp
sub
stos
dec
int
mov
or
rol
inc
sub
xchg
or
jo
or
or
stos
dec
sbb
call
ret
cs
xor
mov
xchg
xchg
fs
dec
ins
sub
push
imul
xor
or
add
sub
dec
adc
sub
push
push
ins
inc
icebp
inc
add
xor
xor
lods
add
sbb
pushw
xor
sbb
outs
push
mov
test
int
or
jb
pop
mov
dec
retw
mov
and
xchg
cmp
pop
loopne
push
mov
inc
push
or
mov
ja
dec
or
push
add
xor
sbb
push
or
xor
dec
adc
mov
pop
push
inc
dec
test
mov
inc
xchg
aam
je
xor
fs
inc
leave
dec
ins
test
inc
test
(bad)
adc
xor
mov
inc
inc
add
pop
aaa
xor
cli
cmp
gs
or
jle
jb
push
push
inc
clc
jno
ja
(bad)
(bad)
mov
jmp
popa
add
xor
fadd
jbe
push
loope
(bad)
dec
xor
adc
pusha
clc
into
push
push
jp
enter
fcom
adc
aam
mov
mov
inc
retf
fs
push
jle
ins
imul
adc
xor
enter
adc
ss
test
dec
adc
inc
pop
stos
and
dec
bound
pop
ret
pop
xor
mov
dec
mov
or
push
in
data16
inc
shl
ss
push
xchg
adc
sbb
mov
je
mov
inc
gs
sub
jb
mov
test
inc
dec
test
mov
cmps
inc
cmp
pusha
adc
pop
xchg
sub
adc
ins
popa
or
test
xor
ror
pushf
fdivr
dec
rol
ss
fiadd
or
cld
inc
test
xchg
xor
mov
pop
sub
scas
pop
mov
inc
push
inc
dec
add
jbe
pop
addr16
push
(bad)
xor
fcmovbe
les
mov
dec
add
mov
es
mov
jo
clc
aam
push
dec
inc
pop
mov
call
inc
inc
xor
jae
dec
pop
cwde
add
inc
cmp
sbb
lock
inc
addr16
mov
or
or
inc
mov
xor
dec
or
mov
inc
push
es
shr
icebp
add
jbe
dec
cmps
cwde
mov
xor
xchg
add
arpl
mov
nop
push
dec
xchg
push
jo
inc
fld
xchg
dec
imul
adc
mov
fld
push
or
xor
push
jns
mov
push
sub
sub
loopne
int3
ret
inc
addr16
mov
dec
ret
or
jmp
inc
shl
clc
push
mov
popa
jb
sbb
add
xchg
mov
adc
xor
cmp
pusha
xor
imul
dec
xor
or
inc
xor
xor
push
cs
pop
loop
push
sbb
jecxz
pop
push
adc
pop
add
cmp
retf
call
dec
sbb
test
aaa
sbb
ret
jbe
jb
or
cmp
sub
push
data16
ins
popa
test
dec
test
adc
mov
xchg
mov
dec
mov
in
xor
shl
pusha
add
xor
or
adc
sub
fs
or
mov
fsubr
xchg
and
nop
call
pop
mov
retf
dec
jo
mov
jae
stos
test
push
outs
loop
dec
lods
push
and
mov
adc
imul
adc
adc
xor
mov
test
dec
lods
mov
cmps
add
inc
jo
xchg
int3
xchg
and
xchg
mov
jae
add
push
inc
aam
test
lods
ins
fwait
shl
push
push
push
push
(bad)
push
addr16
jp
adc
and
sbb
cwde
imul
or
mov
inc
fst
outs
xor
and
fs
add
mov
xchg
cdq
loopne
js
int3
add
push
dec
jo
or
int3
or
or
test
add
xchg
and
in
sub
bound
fwait
pop
cmp
xor
fsub
stos
dec
int3
mov
inc
mov
fld
pop
add
xchg
shl
dec
xor
aad
or
add
add
inc
mov
inc
jbe
inc
push
adc
je
outs
mov
mov
xchg
jmp
and
scas
sbb
fs
cmp
popa
fsub
cld
cmp
adc
inc
pop
or
ins
shl
enter
ins
jp
imul
test
pushf
jae
push
xor
pop
pop
or
ja
add
dec
push
push
rcl
mov
dec
dec
jae
fwait
sbb
push
push
cmp
add
pop
jae
inc
sub
or
sahf
push
add
push
dec
sbb
dec
aad
jo
inc
jl
dec
adc
sub
call
cmps
and
push
outs
cmp
mov
add
xchg
xor
add
lods
and
add
fld
mov
imul
mov
dec
jle
outs
or
dec
sbb
mov
aaa
bound
xchg
imul
dec
aaa
inc
or
mov
jae
pop
bound
arpl
dec
sub
inc
or
add
sub
call
pop
call
and
shl
inc
inc
inc
es
sbb
fdiv
pop
dec
je
dec
pop
int
or
test
jmp
and
push
popa
dec
adc
ins
test
fs
bound
or
inc
xor
mov
dec
inc
push
jno
dec
fs
or
aam
push
and
fs
or
inc
push
inc
add
jle
xor
dec
bound
gs
mov
rcl
jecxz
or
push
inc
int3
in
js
imul
dec
inc
sub
push
adc
dec
push
outs
test
inc
je
push
push
rcl
mov
aaa
mov
push
dec
fdiv
fwait
xchg
pop
add
jb
sub
xchg
adc
sub
dec
push
dec
pop
inc
or
retf
imul
xchg
adc
adc
push
cs
shr
dec
inc
add
inc
test
push
shl
mov
add
cmp
gs
sub
sbb
pop
dec
and
hlt
imul
add
add
push
xchg
aam
and
lods
je
dec
fsubr
ret
sub
sbb
call
dec
in
xor
aaa
jmp
rcl
dec
xor
cwde
xor
adc
cwde
add
cmp
push
(bad)
xor
push
ins
sub
lock
lock
sbb
dec
mov
inc
lock
(bad)
pop
inc
sbb
in
jp
je
mov
cs
lea
xor
xor
push
mov
rol
mov
add
xchg
push
(bad)
cmp
in
push
jo
cli
adc
pusha
popa
jns
pusha
scas
adc
jne
push
sbb
inc
bound
push
xor
inc
outs
stos
xor
dec
xor
lods
inc
bound
dec
dec
push
or
add
sbb
and
pushf
push
retf
lock
add
and
inc
stos
in
fiadd
xchg
(bad)
jp
ja
ins
push
inc
ds
data16
and
jno
or
in
mov
or
push
mov
push
adc
test
pop
(bad)
pop
cdq
mov
dec
inc
jns
dec
imul
push
inc
nop
or
hlt
adc
push
sbb
and
xor
inc
inc
or
in
pop
and
test
fsub
inc
dec
fisub
xchg
adc
lea
jne
popa
dec
mov
xor
dec
xchg
inc
ss
and
dec
pusha
jle
push
mov
inc
cs
ss
retf
dec
and
push
(bad)
adc
movs
xor
jl
dec
inc
jo
add
sbb
dec
data16
test
repnz
inc
imul
add
or
push
mov
jo
xor
loope
or
shr
and
pop
in
push
jne
xor
es
js
or
push
push
xchg
add
mov
test
sbb
cmp
ret
push
shl
aaa
aaa
dec
adc
inc
and
push
cld
jl
push
add
mov
add
fadd
add
imul
js
add
push
push
xor
js
adc
(bad)
fisubr
xor
ins
or
inc
and
aad
jb
jno
adc
movs
mov
mov
add
push
push
cmp
les
pushf
inc
jb
push
and
cmp
rol
xchg
adc
cmp
clc
call
fsub
add
inc
cs
add
add
dec
dec
push
xor
outs
push
lea
push
inc
push
add
add
fld
rol
sub
jo
pop
or
sub
cmp
rcl
rcr
ret
sub
dec
and
shl
ins
mov
push
mov
jbe
cmp
ret
mov
ds
hlt
les
xor
jbe
jo
mov
popa
retf
add
ret
popa
xchg
add
mov
mov
fidiv
mov
jp
xor
push
out
jae
add
inc
imul
or
sbb
sub
jne
(bad)
fst
test
mov
or
push
add
js
imul
outs
loop
jb
dec
or
sub
retf
pusha
data16
sub
push
cmp
adc
dec
ss
mov
cmps
ret
scas
jo
sub
dec
xor
dec
jo
adc
mov
fisub
jo
int3
mov
adc
xor
sbb
aaa
xor
jne
xchg
mov
push
aaa
inc
inc
int
rol
ja
inc
adc
je
rol
cmps
jbe
sbb
sub
in
arpl
js
jbe
(bad)
outs
jle
fsubr
push
dec
mov
mov
push
ja
cs
and
jl
jbe
outs
adc
fcmovu
or
test
add
or
push
inc
cmp
and
push
inc
add
les
xor
xchg
add
adc
mov
in
outs
dec
push
adc
dec
or
lods
cdq
push
jno
gs
push
frstor
push
inc
xor
(bad)
mov
mov
mov
jne
adc
loopne
xchg
pop
in
sub
pusha
jle
inc
rcr
xor
ins
cmp
cli
add
bound
mov
cdq
gs
int3
adc
leave
add
mov
add
sbb
push
jo
ins
hlt
mov
sar
xor
call
dec
sub
ja
imul
dec
ins
in
je
dec
dec
dec
cmp
pop
sbb
inc
and
xchg
mov
inc
shl
jno
mov
adc
jns
neg
adc
sub
push
adc
add
push
sbb
xchg
sub
movs
test
ins
ja
adc
pusha
jecxz
aam
adc
stos
mov
add
mov
cmp
push
shl
mul
fs
fimul
dec
cmps
cmp
push
xor
or
push
dec
adc
xchg
add
es
jle
loop
and
push
or
xor
adc
and
dec
dec
push
fcom
pop
nop
cs
bound
dec
dec
shr
sbb
inc
jbe
jb
adc
int
inc
rol
push
add
push
dec
push
inc
mov
push
xchg
in
inc
imul
pusha
ins
sub
inc
loopne
and
add
jp
jb
enter
or
inc
mov
inc
push
adc
test
outs
dec
in
in
adc
push
retf
and
aaa
jp
sub
push
push
xor
push
out
xchg
imul
and
inc
push
nop
dec
push
jbe
cs
out
dec
adc
jb
mov
ins
inc
(bad)
xchg
sub
inc
xor
popa
stos
popa
sbb
mov
stos
and
popa
sub
push
adc
or
cmp
inc
leave
in
cld
xchg
push
xor
add
mov
sbb
sbb
pop
push
push
inc
sub
add
and
xchg
xchg
jmp
sub
sbb
bound
imul
(bad)
lock
and
outs
dec
mov
movs
add
adc
cmps
movs
mov
sbb
jo
outs
push
pop
xchg
shl
inc
mov
inc
cli
sbb
inc
cs
push
pop
jo
pop
xor
fs
xchg
mov
push
adc
je
push
pop
adc
nop
pop
test
hlt
dec
jo
adc
pop
sbb
xor
xor
push
(bad)
stos
stos
mov
js
push
push
dec
retf
xor
mov
push
mov
rcl
fsub
xor
sahf
jp
cmp
pop
inc
test
aaa
or
push
pop
mov
int3
xor
mov
inc
aaa
mov
push
jp
push
aam
xor
jbe
mov
or
jp
mov
push
jns
inc
int
mov
pop
rcl
ror
loopne
add
mov
inc
dec
dec
inc
es
xor
dec
jbe
inc
cmps
jbe
push
push
repnz
rcl
inc
imul
fimul
arpl
push
or
push
aaa
jp
les
call
add
add
scas
and
out
adc
pop
int3
cli
ss
stos
inc
push
pop
mov
gs
lods
push
xor
mov
push
rol
push
pop
sbb
movs
or
repnz
sub
sbb
jo
mov
pop
cmps
dec
fs
gs
xor
loopne
adc
xor
jno
cmps
and
mov
xor
push
inc
dec
gs
les
mov
inc
jne
add
mov
pop
pop
ret
or
ss
bound
xor
adc
es
jno
or
add
push
outs
jae
inc
mov
js
push
fidiv
xor
retf
rcl
pop
inc
fadd
or
add
jp
dec
loop
movs
outs
dec
fdiv
retf
push
add
sub
aaa
pop
xchg
imul
dec
push
fs
outs
in
inc
adc
fimul
movs
mov
xor
or
inc
inc
xor
movs
test
aaa
mov
mov
adc
ds
aam
in
jo
jae
add
pop
and
push
and
inc
rcl
and
xor
xchg
hlt
scas
mov
ins
xchg
movs
dec
jns
pusha
jo
and
aam
xor
popa
xor
cmp
cmp
mov
imul
push
ss
pushf
push
inc
test
xchg
xchg
mov
pusha
pop
and
je
inc
inc
sbb
inc
hlt
mov
xchg
aam
mov
ja
addr16
push
popa
inc
adc
sub
ins
add
call
aad
retf
bnd
int
xor
push
inc
jno
lods
ret
fsub
aaa
daa
fiadd
xor
cli
mov
add
push
add
dec
int3
or
mov
xor
cmp
inc
ja
mov
adc
fdiv
test
sub
call
or
add
add
adc
ret
movs
push
pop
in
push
cwde
add
cmp
mov
sub
inc
and
dec
test
mov
add
mov
push
xchg
movs
pop
ret
aaa
xor
dec
jo
add
ins
inc
outs
push
test
dec
add
xchg
data16
jo
xchg
push
sub
or
dec
data16
xor
inc
xor
push
inc
sub
cs
xor
push
sbb
popa
int
ret
cmp
add
or
dec
dec
push
pop
jne
push
imul
adc
dec
inc
leave
(bad)
and
ror
push
sub
xchg
ins
dec
movs
push
popa
leave
sub
dec
cld
data16
push
mov
push
shl
adc
dec
dec
out
jle
adc
aaa
or
jp
dec
pop
mov
sub
push
pushf
clc
cdq
(bad)
dec
push
inc
dec
sbb
dec
dec
xchg
test
aam
or
add
push
jbe
add
test
fld
out
push
xor
clc
xor
sub
mov
shl
or
sub
and
mov
inc
pop
retf
aam
dec
dec
dec
sub
sbb
mov
out
stos
ret
movs
gs
inc
xor
dec
jo
or
shr
popa
xchg
add
imul
dec
fiadd
pusha
mov
aaa
jb
xchg
sub
jecxz
inc
add
mov
ss
outs
push
movs
gs
push
push
mov
xchg
xor
push
ins
push
out
movs
shl
dec
call
xor
mov
sub
outs
hlt
ds
ss
sub
jbe
or
neg
mov
inc
push
fsub
push
pusha
popa
xchg
mov
jno
add
jo
pop
js
fs
cli
outs
pop
or
jb
inc
adc
add
ret
ret
pop
push
push
push
or
add
jl
and
adc
xor
inc
xchg
pop
push
sub
dec
xor
ret
adc
add
and
dec
(bad)
movs
test
bound
xchg
ror
cmp
cdq
xor
sub
aam
ins
add
ins
mov
xor
inc
dec
jne
inc
sbb
dec
and
push
sub
inc
shr
xor
pop
inc
jbe
mov
gs
push
dec
jo
sub
hlt
mov
stos
push
loop
push
add
bound
push
push
inc
jp
jo
inc
mov
(bad)
nop
and
test
sub
pusha
out
xchg
aaa
les
or
xor
sbb
push
inc
push
cmp
lods
ss
jle
imul
jne
push
add
test
rcl
push
jo
fs
mov
push
push
lock
rcr
ins
je
add
ins
mov
dec
mov
imul
out
mov
pop
pop
mov
inc
xor
ret
outs
sbb
xor
call
mov
push
sbb
test
push
pop
sbb
rol
push
adc
mov
cmps
jl
dec
inc
jmp
jmp
sub
pop
jp
je
cmp
ja
je
aaa
ja
jbe
inc
push
loope
push
or
dec
pop
xor
jbe
cmp
bound
xor
enter
cs
dec
in
mov
movs
sub
push
sbb
jne
fs
(bad)
mov
push
xchg
fmul
popa
jns
xor
mov
add
pop
and
add
adc
cmp
fs
xor
inc
pushw
mov
and
push
xchg
bound
or
retf
jp
clc
add
dec
pop
enter
mov
jne
push
imul
add
out
outs
push
aaa
cmp
xchg
rcl
mov
push
dec
test
dec
lea
outs
outs
xor
push
inc
and
data16
into
xor
or
bound
push
add
fimul
sub
xchg
rol
and
xor
push
push
push
(bad)
sub
lods
stos
mov
popa
dec
jne
div
adc
outs
xor
push
pop
push
test
je
jp
movs
ja
ins
addr16
push
xchg
sub
inc
dec
mov
push
jo
sbb
and
push
push
dec
xchg
push
dec
xchg
sbb
jo
push
popa
sbb
imul
outs
dec
call
mov
test
movs
les
aam
sub
and
jno
dec
lea
stos
or
dec
push
cmp
fs
inc
rcl
push
cmp
inc
ficom
mov
xchg
cmp
cdq
fs
nop
bound
push
dec
es
dec
and
daa
aad
sbb
inc
push
outs
scas
imul
mov
dec
or
push
movs
popa
xor
lock
jne
mov
adc
xchg
xor
inc
test
add
popa
pop
adc
inc
(bad)
arpl
push
fmul
inc
push
cld
daa
and
or
es
dec
addr16
ins
or
push
dec
dec
test
xchg
or
sub
and
shl
jno
outs
inc
xor
ret
xor
into
xor
loopne
jbe
imul
repnz
push
pusha
data16
dec
dec
inc
add
outs
dec
jmp
push
clc
dec
pop
push
adc
movs
or
push
or
push
dec
adc
lods
sub
push
add
cwde
cli
sbb
je
jb
inc
gs
xor
dec
push
rol
push
push
sbb
or
and
adc
pusha
sub
push
push
stos
in
mov
sbb
and
cwde
xor
cmp
inc
dec
(bad)
dec
sbb
scas
push
enter
clc
xchg
les
push
xchg
or
jp
xor
or
scas
and
(bad)
xor
je
fs
sbb
adc
cmc
adc
dec
jno
inc
test
dec
imul
add
int3
xchg
mov
add
test
pop
xor
adc
jo
dec
imul
test
jbe
aam
add
ins
mov
and
lods
bound
mov
out
pop
xchg
lods
sub
inc
outs
mov
xor
in
mov
rcl
inc
jo
and
int3
or
jp
data16
xchg
xor
inc
mov
add
adc
dec
push
ins
retf
int3
inc
aam
adc
jno
cwde
add
arpl
pop
mov
mov
daa
and
inc
jbe
ds
pop
pop
jl
ror
jl
inc
dec
mov
pusha
mov
inc
adc
add
dec
jecxz
je
out
mov
fmul
and
pop
push
xor
dec
inc
jne
cmp
push
xchg
leave
push
in
mov
xor
dec
cmp
mov
push
push
jb
sbb
xor
aad
stos
jae
imul
xor
mov
xor
fs
pusha
loope
push
mov
fs
xor
loop
out
xchg
add
cmp
jle
jae
cmp
dec
adc
xor
adc
dec
inc
add
and
push
push
pop
mov
dec
inc
pop
outs
inc
inc
lea
mov
jbe
ficomp
dec
dec
mov
call
out
(bad)
push
jp
push
push
dec
pop
add
dec
shr
outs
jb
pop
cmp
mov
xchg
jle
inc
inc
pushw
in
push
les
xchg
or
jp
sub
mov
stos
js
or
xchg
dec
inc
jb
sub
ins
lods
jle
or
hlt
add
inc
mov
adc
dec
inc
popa
aaa
mov
inc
dec
mov
imul
dec
fmul
je
or
add
and
push
cmp
cmp
jp
inc
pop
adc
inc
pop
jl
mov
rcl
cmp
int3
call
out
rol
jne
push
xor
sub
sbb
jp
jb
mov
ds
jbe
inc
adc
adc
repnz
imul
mov
push
adc
bound
add
mov
stos
shr
push
fmul
xor
scas
dec
xor
ja
jne
adc
xor
mov
add
xchg
mov
jb
rcl
xchg
sbb
inc
push
neg
jo
ins
push
sbb
dec
push
xor
add
cmp
xchg
inc
xchg
inc
push
fs
mov
out
es
push
mov
fadd
xchg
data16
sub
rcl
xor
add
call
xchg
jbe
stos
das
mov
pusha
fimul
pushf
jae
xor
add
mov
loopne
fs
mov
bound
push
cwde
sbb
sub
ins
add
aam
bound
(bad)
fwait
xor
imul
xchg
gs
(bad)
dec
dec
es
sub
mov
out
push
aam
push
mov
jp
or
push
(bad)
inc
cmp
fst
mov
test
aaa
inc
or
daa
fcomp
xchg
and
lea
dec
je
cdq
imul
mov
sub
push
fcom
inc
fidiv
jne
data16
add
sub
inc
inc
ss
es
or
dec
dec
call
outs
enter
inc
xor
bound
imul
dec
ror
jno
sbb
push
push
jmp
mov
or
mov
xchg
shr
loop
mov
cdq
inc
jp
or
ins
xchg
mov
dec
inc
xchg
adc
xor
and
push
push
rcl
xor
adc
in
or
inc
jo
push
xor
stos
push
xor
adc
cwde
ins
rcr
xor
mov
popa
cld
add
ret
add
or
cwde
fisubr
mov
ss
fcmove
pop
dec
add
push
push
sbb
push
jg
dec
mov
nop
(bad)
mov
push
sbb
cmp
fdiv
fsub
clc
outs
or
mov
mov
inc
adc
sub
push
push
jne
add
push
lock
fnop
dec
ins
js
jo
pop
push
into
je
ins
popa
pop
test
sbb
rcl
sub
inc
test
xor
jp
inc
inc
mov
add
or
xor
ins
xor
pop
push
ret
adc
inc
dec
mov
xor
idiv
adc
(bad)
jo
dec
mov
in
jns
adc
xchg
mov
rcl
mov
mov
(bad)
push
xor
xor
ret
push
sbb
xor
pop
push
inc
jne
push
mov
add
inc
inc
mov
inc
xchg
mov
add
add
in
push
cmp
cmp
outs
or
mov
push
push
xor
push
inc
jp
dec
or
mov
push
enter
inc
out
xor
push
push
outs
bound
int3
sbb
stos
mov
pop
in
push
arpl
sbb
inc
dec
data16
and
outs
xchg
add
adc
cmp
ret
add
hlt
mov
adc
xor
mov
push
xchg
and
rcl
dec
xor
pusha
adc
mov
push
das
xor
push
(bad)
ins
test
push
rcl
shl
test
or
les
fdivr
ret
sbb
je
sub
hlt
loop
inc
xor
cmp
mov
xchg
ss
inc
xor
mov
pop
xor
push
inc
mov
mov
dec
imul
(bad)
or
push
inc
imul
dec
je
dec
or
fsub
push
and
dec
mov
or
je
or
sbb
(bad)
lock
and
xor
repnz
scas
xchg
push
dec
sbb
jno
ja
push
jbe
or
arpl
add
cs
pop
outs
add
adc
addr16
xchg
ss
movs
push
mov
sub
xor
fidiv
jae
jns
mov
xchg
mov
mov
dec
sub
jp
pusha
or
or
je
xchg
mov
retf
cli
pop
les
aaa
outs
dec
es
das
xor
mov
push
aaa
pop
ret
add
aam
inc
stos
bound
popa
js
jno
pop
sub
ins
neg
jmp
pop
loopne
mov
push
or
mov
js
mov
add
push
clc
push
push
inc
or
scas
jno
xor
add
dec
xor
inc
leave
icebp
xchg
jo
inc
outs
pop
push
jo
popa
add
rcr
mov
stos
pushf
jb
ins
dec
dec
xor
xor
xor
in
pop
push
test
add
jbe
sbb
inc
xor
push
xor
xor
jns
inc
movs
adc
xchg
xchg
ret
out
nop
movs
cmps
add
push
adc
retf
xor
push
push
mov
rcl
call
aaa
(bad)
bound
xchg
push
ins
lock
jp
ss
dec
sbb
push
ins
mov
xor
jb
cmp
ja
fld
imul
je
mov
inc
data16
dec
dec
and
call
inc
out
je
cmp
ret
push
dec
adc
dec
xor
or
add
outs
mov
dec
bound
or
xchg
mov
bound
adc
in
inc
inc
ja
inc
clc
xor
inc
push
adc
mov
xor
movs
jne
loope
mov
jae
xor
ss
inc
inc
cmp
pop
dec
push
stos
(bad)
dec
dec
xor
sbb
js
dec
(bad)
jb
imul
stos
add
or
push
adc
mov
xor
data16
adc
div
dec
or
pop
test
push
push
ds
push
enter
popa
outs
jle
or
call
bound
jbe
or
rol
inc
jmp
xlat
retf
jbe
cmp
or
dec
mov
push
sub
ficomp
ins
mov
aam
xor
ins
xchg
or
pop
dec
jmp
pusha
loopne
inc
adc
inc
adc
inc
sbb
jne
pop
or
out
cld
pusha
push
push
ins
xor
dec
inc
jo
js
popa
ss
ret
ja
rol
fadd
test
push
ins
fmul
outs
jns
bound
cmp
fadd
mov
jae
xor
in
loope
pop
mov
mov
es
pop
mov
add
dec
xor
inc
push
push
retf
inc
push
cmp
add
jmp
jb
or
jne
popa
inc
and
pop
dec
addr16
or
nop
clc
jbe
jns
mov
into
es
xor
imul
gs
dec
add
imul
aaa
inc
jbe
outs
ror
xchg
mov
outs
or
xor
dec
imul
xor
imul
cmps
push
test
jo
push
test
gs
pop
push
jl
inc
dec
cmp
push
sbb
dec
lock
bound
(bad)
or
mov
aam
mov
jae
push
push
fcmovb
jp
cmps
and
ins
into
adc
aaa
lods
inc
jbe
mov
and
es
and
dec
push
dec
sbb
pusha
sub
je
inc
adc
mov
pop
popa
stos
shl
cld
pop
push
dec
es
inc
call
push
popa
xchg
mov
inc
ja
ror
mov
stos
mov
push
imul
ror
and
ins
inc
jns
movs
adc
add
or
test
bound
jbe
ds
popa
adc
rol
inc
push
dec
inc
push
ror
mov
jo
adc
push
mov
mov
or
xor
test
loopne
push
nop
ins
push
mov
jbe
cmps
dec
ins
cmp
lods
jmp
movs
push
inc
push
pop
or
add
xor
lods
and
push
add
call
push
in
fst
loopne
push
fs
push
data16
push
xor
shl
xor
add
fadd
cmp
mov
inc
jae
shl
hlt
inc
push
xchg
jne
inc
xchg
cmp
dec
movs
mov
xor
ds
xchg
ins
cmps
lods
xor
xor
inc
push
add
adc
add
dec
or
dec
inc
mov
mov
push
push
gs
sub
cs
cwde
arpl
in
sbb
pop
je
jo
push
xchg
arpl
and
gs
ins
push
inc
loop
ss
xchg
ins
jo
xor
fs
adc
mov
push
mov
xor
daa
add
inc
sbb
xor
and
dec
(bad)
fs
mov
jp
push
ins
sahf
jo
leave
imul
dec
jns
mov
dec
sub
mov
ins
xor
push
xchg
mov
inc
dec
push
cs
xor
xchg
shr
add
sub
dec
mov
sub
sub
retf
xor
jo
inc
or
jp
mov
in
add
fsub
mov
or
js
push
data16
or
enter
dec
pop
ror
adc
sub
hlt
add
adc
loop
push
add
fiadd
mov
jb
push
inc
pop
les
js
push
xor
jns
and
or
inc
cdq
xchg
mov
jbe
add
sub
mov
inc
dec
xor
imul
jo
imul
js
dec
sub
enter
shr
mov
ror
add
adc
sbb
in
and
inc
push
pushf
aad
sbb
ss
dec
mov
arpl
push
adc
rcl
mov
test
mov
add
push
dec
mov
mov
push
mov
pop
mov
imul
push
aam
ror
mov
and
fdiv
mov
test
clc
inc
dec
addr16
push
mov
lds
cwde
push
inc
xor
push
inc
pop
shr
call
add
push
push
sub
or
push
aaa
mov
inc
je
cmp
mov
xchg
push
push
and
sahf
push
jae
and
push
mov
xchg
dec
push
push
jno
aam
in
xchg
or
fimul
pop
jb
cmp
inc
pop
pop
push
jbe
pop
xor
movs
xchg
clc
xchg
les
dec
xor
push
push
cli
push
rol
scas
dec
out
loopne
out
and
jb
jno
les
inc
fsubr
push
mov
cmp
jno
arpl
jmp
dec
mov
push
and
dec
push
aaa
push
inc
xor
test
push
fidiv
xchg
movs
fidivr
inc
je
dec
ins
jb
mov
inc
inc
ret
inc
lock
xor
imul
pop
sub
fwait
imul
dec
arpl
jp
mov
inc
rcl
adc
dec
push
inc
xor
cmp
jns
adc
xor
enter
jns
xchg
and
loop
aaa
inc
popa
inc
cmp
jbe
jae
mov
ss
js
jne
test
pop
dec
adc
fwait
fs
ins
xor
out
(bad)
push
js
dec
cmp
cmp
test
mov
inc
dec
add
dec
mov
inc
inc
push
cwde
cmp
xchg
or
mov
sub
and
les
outs
loop
push
xor
xchg
popa
in
mov
es
imul
(bad)
test
nop
push
xor
sbb
test
and
jp
inc
sub
push
mov
dec
pop
cmp
je
rol
or
push
dec
dec
gs
dec
or
xchg
in
jle
cdq
pop
mov
push
arpl
test
adc
ss
xor
or
lea
sbb
fs
fsub
in
pop
je
mov
xor
push
jo
fs
outs
aaa
sahf
and
add
and
or
push
push
loop
addr16
mov
sub
adc
push
jae
pop
arpl
fcom
xor
rcr
push
push
inc
mov
fs
sub
aaa
retf
add
or
(bad)
inc
or
jno
adc
sbb
mov
mov
mov
test
ins
push
push
inc
xor
jb
ds
xor
jl
call
call
sbb
nop
dec
sub
add
sbb
add
ins
xchg
push
cmps
in
and
mov
inc
int3
add
test
ja
inc
xor
push
inc
mov
cmps
inc
adc
pop
add
int
je
bound
call
pushf
push
or
inc
push
mov
arpl
and
pop
mov
and
push
fidivr
imul
mov
inc
jno
js
shr
jl
and
xor
add
add
inc
fsubr
jo
inc
jno
jo
sbb
mov
or
inc
lods
xor
add
push
js
and
(bad)
adc
xor
push
(bad)
and
popa
cmps
sub
mov
dec
inc
and
inc
push
and
or
test
jb
pop
dec
jb
and
nop
xchg
movs
adc
test
xchg
inc
jp
ficomp
mov
pop
push
(bad)
call
sbb
add
mov
call
pop
push
inc
push
add
pop
test
add
add
dec
pop
sub
popa
inc
xchg
cmp
loope
mov
ins
sub
inc
mov
push
dec
into
imul
shl
mov
jo
shr
clc
push
and
xor
xor
dec
dec
lods
aad
aam
out
ja
push
jl
lods
outs
inc
arpl
out
pop
xor
fild
test
cld
pop
push
add
xor
or
rcl
push
xor
or
inc
adc
adc
dec
push
push
dec
jo
mov
mov
stos
sbb
jle
ds
jl
retf
adc
jb
dec
fs
push
inc
inc
test
ja
fcom
add
cmp
dec
jne
jb
inc
adc
fld
cmp
cmp
movs
test
jbe
push
ins
or
nop
stos
and
xchg
adc
jl
xor
mov
fdiv
loope
jo
fisubr
dec
mov
sbb
xor
(bad)
add
push
pusha
inc
push
rcl
test
outs
inc
outs
imul
sbb
es
mov
sbb
xchg
xor
add
push
mov
dec
push
xchg
int3
dec
les
loopne
fsub
adc
xor
ds
pusha
inc
mov
lock
dec
or
xchg
stos
adc
pop
add
adc
inc
sub
dec
pop
pop
test
inc
rol
sbb
cli
mov
push
pop
add
and
inc
mov
ja
xor
xor
xor
lods
js
inc
sub
xchg
sub
mov
out
xor
std
pop
or
push
addr16
push
push
push
adc
push
sbb
pusha
push
dec
ins
inc
mov
into
dec
les
adc
fs
in
dec
xor
or
loopne
pop
push
arpl
mov
popa
clc
cli
inc
test
mov
test
push
mov
xchg
ret
push
inc
push
and
(bad)
dec
dec
repnz
je
and
addr16
or
or
xor
mov
pop
xchg
or
pop
jno
sahf
out
xor
ins
loopne
test
fs
or
jbe
adc
sub
adc
pop
fcom
or
in
and
and
or
bound
cmp
sahf
dec
add
inc
xchg
sbb
lods
dec
call
retf
rcr
or
mov
jb
pushw
inc
or
dec
push
jbe
mov
xor
add
aam
jp
push
jae
mov
les
cmp
loop
hlt
pop
push
les
mov
lock
adc
xchg
cmp
push
adc
in
mov
push
or
test
inc
xor
and
js
push
push
fs
in
nop
and
enter
pusha
xchg
jp
fadd
inc
pop
mov
add
mov
imul
inc
cmps
out
stos
test
popf
dec
dec
in
aaa
out
or
push
mov
pop
bound
fidivr
hlt
jbe
dec
dec
nop
xchg
add
xor
cs
aad
xor
dec
xor
push
xchg
sub
push
mov
pop
push
sub
stos
pop
adc
dec
xor
imul
push
fcom
and
loop
inc
ss
jp
push
cmp
dec
rcl
mov
or
and
xchg
sub
inc
mov
xor
add
ins
dec
dec
fs
add
and
and
or
push
fs
cmp
pusha
pusha
inc
mov
and
dec
aaa
xor
pop
addr16
and
sbb
je
cwde
cmp
push
jne
xor
cmp
push
aaa
ins
push
cmps
js
xor
bound
mov
outs
xchg
inc
ror
ds
inc
jbe
add
xchg
mov
fisubr
ins
xchg
inc
popa
mov
mov
adc
pop
ret
dec
dec
shl
ret
js
cmp
in
rcr
jb
xor
sub
sub
cli
call
bound
inc
sub
data16
lods
imul
ss
jbe
xor
add
xchg
xchg
cmp
mov
mov
add
inc
push
jo
xor
sbb
push
inc
mov
cmp
enter
push
push
pushf
mov
inc
xor
add
push
xor
mov
outs
nop
je
dec
inc
aaa
add
dec
xor
inc
pop
add
popa
push
imul
push
lods
push
pusha
inc
jns
dec
mov
xor
cwde
sbb
and
fwait
call
outs
shl
enter
add
clc
lods
test
sub
pop
pop
bound
dec
dec
pop
add
dec
pop
fs
mov
mov
pop
cmp
xor
cmp
and
push
dec
pop
sbb
push
dec
fs
xchg
xor
push
es
pop
inc
test
dec
mov
inc
(bad)
ja
pop
pop
cmps
xor
push
dec
inc
xor
xchg
in
push
bound
ja
dec
jne
push
or
cdq
stos
je
add
push
je
or
add
mov
push
loop
sub
pop
mov
or
add
adc
adc
mov
jle
inc
jo
imul
or
xor
dec
cmp
xchg
sub
push
ds
or
pop
mov
cwde
ss
pop
cld
jl
dec
nop
add
sbb
hlt
xchg
mov
mov
or
inc
mov
inc
cmps
aaa
ins
nop
and
mov
sub
sahf
pop
inc
add
xchg
add
xchg
test
in
push
push
or
es
pop
sbb
cmp
inc
nop
jp
pop
mov
js
inc
mov
cdq
fs
data16
dec
dec
mov
adc
bound
mov
add
push
and
and
data16
push
or
dec
not
and
push
xchg
push
scas
cmp
inc
jp
cmps
ds
test
mov
dec
ss
sub
jb
add
pop
sub
inc
adc
lods
outs
or
retf
add
or
jno
rol
jb
push
add
addr16
push
cmps
ja
add
mov
ins
push
call
popa
ret
sbb
scas
inc
jmp
les
pop
fsubr
ja
outs
test
and
dec
dec
inc
or
dec
inc
dec
retf
mov
cmp
jbe
dec
mov
int3
outs
dec
ss
push
sbb
push
inc
push
and
pop
or
scas
sbb
push
dec
aam
or
ins
dec
loope
mov
push
xor
jb
in
cwde
shr
test
fbstp
dec
push
inc
inc
dec
dec
fdivr
stos
push
or
ins
mov
sub
es
js
inc
cld
cs
es
retf
into
dec
xchg
inc
movs
test
or
jecxz
xor
xchg
push
stos
inc
cli
inc
mov
mov
push
xor
add
js
dec
adc
sbb
dec
lds
je
mov
cmp
jne
xor
push
xor
mov
adc
xor
inc
adc
aaa
jbe
imul
push
mov
imul
jbe
jne
and
push
mov
aam
je
and
inc
add
sbb
les
sub
fist
test
ss
inc
into
cmp
test
je
(bad)
cmp
cmps
out
sub
inc
outs
pop
jne
mov
fs
add
das
sahf
inc
push
outs
push
dec
sub
dec
jb
or
lock
mov
cmp
dec
mov
push
stos
push
and
fs
ins
push
inc
xor
mov
add
jmp
pop
enter
pop
mov
shl
add
into
dec
or
sub
arpl
fsub
stos
jo
or
bound
push
mov
xor
ret
into
xor
pop
js
or
rol
push
dec
adc
imul
shl
aaa
loope
dec
push
mov
(bad)
pusha
dec
inc
dec
cs
push
fidivr
dec
adc
xchg
mov
loop
lods
fild
mov
jb
xor
outs
ins
dec
pop
push
ret
dec
ins
cmp
push
sub
cmp
shr
fcmovbe
ret
arpl
dec
mov
scas
ins
jns
ins
xchg
fs
nop
cmps
pop
pusha
cs
or
imul
xchg
inc
and
sbb
and
dec
xor
sub
and
xchg
les
mov
(bad)
loopne
movs
je
xchg
or
rcl
out
mov
dec
mov
cmps
shl
retf
(bad)
sar
pop
ret
repnz
jno
movs
pop
xchg
imul
push
sub
data16
add
popa
sub
cld
out
in
push
dec
les
adc
stos
mov
sbb
fwait
or
jb
cmp
jb
add
movs
add
or
imul
dec
or
sbb
dec
jae
dec
dec
(bad)
or
jle
outs
les
pop
dec
outs
nop
aam
xor
push
gs
imul
xchg
cmp
ficom
popa
ffree
imul
es
adc
cmp
push
mov
je
test
cmp
out
ss
imul
out
inc
arpl
dec
rol
inc
push
dec
push
push
push
js
shr
js
inc
jb
js
push
inc
movs
adc
in
adc
je
jl
mov
add
xor
aaa
sub
push
pop
inc
xchg
pop
xor
clc
es
jae
dec
pop
xor
ins
nop
adc
mov
push
jo
dec
(bad)
fst
mov
push
inc
push
mov
pop
(bad)
xor
or
mov
adc
mov
js
sub
shl
sahf
xor
mov
push
jp
jo
pop
push
xor
dec
push
pop
pop
adc
pusha
cmp
xor
dec
push
add
and
jbe
or
jb
xchg
inc
fiadd
pop
jp
sbb
inc
jbe
imul
add
gs
jmp
inc
xchg
arpl
push
dec
pop
adc
dec
or
inc
jo
fadd
lock
xor
ins
xor
xor
out
pop
and
ret
jl
call
mov
fcomp
cld
jl
shl
jb
mov
mov
jae
or
cmp
add
out
ins
jo
inc
jo
stos
or
dec
cmp
push
sbb
add
in
ret
push
mov
push
dec
aam
add
add
inc
mov
add
mov
or
dec
fbld
mov
inc
push
je
xor
and
mov
inc
xor
push
adc
jbe
xor
cmp
push
add
rcl
sub
jp
add
mov
test
jne
dec
aam
jne
test
aad
fdiv
mov
inc
sub
fmul
jns
push
dec
bound
inc
sbb
push
add
push
or
cmp
push
outs
gs
inc
sub
jb
and
mov
xor
inc
dec
sub
mov
push
push
sbb
add
lods
cmps
xor
daa
and
jbe
imul
popa
retf
sub
push
xchg
and
les
aam
arpl
je
add
jbe
push
mov
cmp
je
inc
jl
push
in
in
xor
jb
jmp
mov
loopne
dec
mov
inc
add
push
dec
data16
push
test
sub
jo
ja
jae
push
jno
mov
adc
sahf
in
mov
test
push
dec
pusha
sub
mov
adc
pop
adc
mov
add
pusha
fmul
aaa
dec
lock
xor
jbe
les
dec
pop
nop
mov
addr16
call
inc
(bad)
mov
adc
inc
ins
dec
sbb
push
movs
jo
dec
push
or
push
sbb
push
xchg
sbb
mov
out
ror
xchg
ret
shl
mov
push
mov
je
sub
fs
jb
inc
mov
outs
pushf
push
gs
add
adc
xor
dec
inc
stos
imul
push
or
into
push
loope
int
ins
dec
fmul
dec
ficomp
imul
or
ins
adc
cli
fidivr
mov
dec
and
in
dec
push
add
or
or
push
fadd
dec
add
push
push
and
sub
fsub
and
add
inc
nop
cld
dec
test
jle
call
cli
pop
pop
xor
push
push
push
sahf
test
aam
sbb
ins
dec
pop
hlt
sub
fs
ret
xor
fmul
bound
cmps
adc
and
and
push
or
call
adc
jp
mov
cld
inc
push
push
pop
mov
je
inc
popa
test
inc
push
adc
bound
push
cmp
cmps
sbb
lods
adc
push
or
and
dec
sbb
shr
and
arpl
mov
mov
retf
inc
jb
mov
popa
cli
sahf
sbb
xchg
test
mov
cmp
jo
push
inc
push
in
sahf
ss
es
call
adc
cli
inc
cmp
inc
(bad)
test
push
inc
sub
push
xor
add
mov
in
outs
push
outs
inc
sub
fadd
xchg
movs
push
loop
push
imul
add
xchg
push
inc
test
loopne
jbe
or
stos
dec
push
push
aam
retf
dec
or
and
ret
adc
jo
add
lock
test
gs
data16
es
mov
addps
movs
sbb
xor
bound
push
ins
jo
ins
jno
and
js
pop
dec
adc
pop
movs
dec
xor
xor
popf
mov
adc
cmps
shl
mov
push
jae
inc
push
rcl
adc
cmp
pop
in
and
push
data16
mov
inc
ds
dec
xor
inc
inc
cwde
sub
outs
jp
push
sub
leave
lock
es
inc
test
call
jbe
mov
ja
inc
xchg
inc
sbb
pop
mov
or
jp
sbb
jge
pop
sbb
addr16
sar
hlt
js
sbb
fdivr
pop
push
fadd
inc
inc
pop
xor
inc
or
add
dec
clc
dec
push
jne
loopne
pusha
es
(bad)
push
inc
sub
or
xchg
clc
ja
bound
inc
xor
adc
xor
sub
rcl
enter
add
and
inc
stos
movs
xor
clc
cmp
push
mov
dec
xchg
add
add
push
test
out
push
and
popa
xor
pop
inc
inc
xchg
jle
stos
(bad)
fisubr
xor
cmp
push
inc
adc
sahf
xchg
add
inc
outs
mov
ss
les
popa
dec
inc
adc
pop
dec
sbb
ss
cmps
mov
or
jns
jno
test
ja
push
and
adc
add
mov
and
xchg
inc
or
test
fiadd
add
cmp
inc
call
je
or
xor
imul
add
inc
or
mov
outs
xor
push
je
push
ins
xor
nop
add
xor
cmps
rol
push
mov
nop
les
push
pop
add
ret
stos
or
or
inc
sbb
inc
xor
or
ja
dec
popa
or
ds
dec
je
push
ret
inc
mov
pop
jb
imul
xchg
jmp
mov
adc
xor
mov
push
aaa
data16
jbe
xor
imul
mov
dec
xor
stos
or
je
dec
(bad)
stos
nop
push
inc
push
push
inc
and
push
pop
es
inc
loop
sub
cmps
dec
push
shr
ja
xor
mov
js
adc
push
ret
loop
and
dec
push
mov
movs
and
or
or
shl
adc
je
push
clc
push
mov
or
add
jne
push
xor
je
enter
aam
pushf
stos
popf
pop
and
inc
push
sub
cmps
gs
loope
push
stos
adc
mov
cmp
jb
jbe
or
pushf
mov
ret
dec
inc
xchg
sbb
sub
imul
push
and
ss
outs
push
pop
dec
mov
dec
cmps
ins
inc
jb
xchg
xchg
xchg
les
dec
mov
push
xchg
(bad)
bound
mov
adc
stos
lods
pusha
push
push
loopne
xor
adc
inc
adc
xor
add
rol
mov
mov
dec
jo
pop
add
xchg
call
dec
test
ror
jns
and
xor
xchg
les
sub
cmp
add
ret
push
pop
les
sbb
xor
cmp
sub
lods
es
xchg
dec
gs
dec
dec
jp
dec
addr16
add
inc
jb
pop
adc
add
cmp
or
xor
je
cmps
push
or
push
mov
mov
mov
or
xchg
mov
inc
js
inc
loope
dec
push
push
or
mov
mov
push
sub
sub
dec
fcmovu
jne
push
sub
pop
in
es
jne
xor
push
gs
test
xor
out
inc
ss
and
add
add
pop
adc
dec
push
jno
xchg
dec
imul
push
mov
xchg
dec
mov
loope
or
outs
mov
mov
mov
ins
imul
cwde
leave
dec
mov
or
inc
and
inc
gs
ds
in
mov
push
push
repnz
shl
lods
push
cmp
sub
add
pop
inc
enter
push
xchg
out
outs
dec
and
fs
add
push
cmp
add
cmp
add
push
cmp
(bad)
cmp
jae
push
test
test
inc
sub
fsubr
jb
push
mov
jb
test
push
ins
inc
popa
adc
or
mov
test
lea
xchg
or
push
sub
dec
mov
add
in
inc
addr16
or
push
fs
mov
fwait
test
push
add
inc
and
inc
in
push
adc
or
and
dec
push
mov
jns
jp
shr
dec
dec
sub
inc
sub
mov
push
inc
push
inc
shl
add
pop
or
je
dec
ins
add
mov
mov
mov
inc
sbb
adc
pop
add
xor
mov
dec
shr
cmps
add
addr16
dec
or
add
xor
dec
add
cmp
xchg
rol
or
xchg
add
dec
jno
into
dec
pushf
dec
pop
and
dec
ins
ja
add
inc
inc
jbe
jmp
adc
ins
ins
outs
jne
ins
push
or
mov
je
add
imul
push
gs
push
push
dec
dec
push
and
push
test
test
loopne
inc
fs
xor
cmp
and
cmp
jbe
add
cmps
cmp
push
adc
jmp
fs
test
jne
or
sbb
mov
fs
push
push
dec
lods
dec
and
mov
cmps
xor
mov
mov
push
mov
xor
fdivr
shl
mov
data16
push
adc
(bad)
jbe
dec
mov
or
loopne
jmp
push
dec
pop
(bad)
js
add
outs
inc
add
push
push
es
xchg
jl
jns
gs
push
add
jns
sub
and
dec
pop
and
adc
scas
jne
outs
jne
sbb
cs
test
dec
je
inc
xchg
mov
sub
sbb
imul
and
push
pop
outs
xor
dec
loope
(bad)
xor
stos
and
call
add
xor
lods
test
xor
fimul
test
push
push
push
mov
mov
stos
xor
and
push
push
sahf
xor
inc
and
jmp
push
test
inc
push
call
push
cmp
xor
jb
ret
mov
push
test
idiv
or
or
dec
and
aam
test
xor
js
push
jge
ror
or
test
xor
pop
or
add
shl
pop
and
fstp
pop
repnz
jno
inc
fisubr
push
cmp
and
cmp
inc
sub
(bad)
fs
fsubr
cmps
add
cwde
mov
mov
sbb
dec
add
push
push
add
xor
push
movs
es
xor
sbb
or
xor
push
mov
fiadd
xchg
aaa
pusha
adc
gs
inc
jbe
xchg
sbb
mov
fmul
jp
jb
mov
mov
push
outs
outs
xchg
leave
and
inc
and
xchg
add
sub
push
sbb
cli
dec
js
into
mov
sub
inc
dec
jo
inc
xor
push
jb
loop
push
cs
pop
popa
jns
in
popa
stos
fisubr
dec
xor
shr
push
or
movs
inc
dec
ja
outs
aad
pushf
xor
push
adc
mov
adc
add
imul
adc
mov
mov
or
adc
out
jb
inc
push
or
call
push
ret
add
jmp
push
add
adc
add
test
in
fimul
dec
sub
data16
adc
pushf
cs
call
push
add
xor
jae
dec
xor
call
fadd
add
sub
cs
push
shl
aad
fnstenv
imul
xor
jle
or
fdivr
loop
xchg
movs
mov
pop
pusha
and
push
jmp
sub
cwde
imul
and
add
inc
(bad)
jb
inc
xor
inc
xchg
ret
xor
jae
push
or
mov
sbb
jbe
loop
adc
inc
je
push
adc
adc
sbb
push
adc
push
fs
and
inc
mov
push
and
push
cmp
ret
jp
cmp
mov
xchg
mov
aam
ret
fdiv
retf
in
cld
scas
int3
push
sub
repnz
sub
and
and
jae
ror
test
xchg
mov
call
test
test
push
push
mov
sbb
lods
cs
ret
leave
inc
xor
xor
mov
ins
icebp
add
inc
jo
pop
dec
test
sub
pusha
call
add
sub
ins
sub
add
popa
mov
push
adc
scas
push
inc
fsub
push
xor
pop
pop
fsub
push
pop
popa
outs
shl
push
push
mov
push
dec
mov
ret
xor
adc
dec
jne
inc
mov
pop
or
sub
mov
cmp
sub
or
out
scas
es
mov
inc
nop
and
call
jb
add
push
data16
pop
add
or
shr
mov
xchg
rcr
pusha
fst
outs
rcl
push
xchg
push
cmps
or
push
add
inc
inc
into
push
push
movs
test
ins
mov
xor
push
ins
mov
mov
and
rol
bound
(bad)
jb
ror
push
inc
outs
bound
mov
sbb
pop
xchg
push
test
jne
push
inc
cmp
outs
adc
and
dec
dec
jbe
in
push
jne
adc
mov
cmp
mov
rol
mov
shl
lods
mov
dec
add
cmp
pusha
push
cmp
mov
test
sbb
push
stos
inc
test
pushf
inc
or
push
inc
pop
ss
add
inc
xor
push
push
ret
sub
mov
cmps
jmp
mov
xchg
jl
push
ret
inc
enter
xor
xor
add
push
nop
jbe
dec
pop
cmps
aaa
les
sar
adc
sub
or
js
neg
push
push
inc
push
gs
test
fadd
mov
addr16
xchg
lods
scas
or
jno
push
or
xchg
movs
add
cmp
inc
xor
xor
xor
or
push
jo
and
dec
add
push
mov
mov
cli
push
imul
adc
mov
dec
call
dec
shr
pop
or
xor
add
clc
cli
mov
mov
bound
and
sub
adc
inc
ret
call
xor
stos
inc
push
es
dec
ins
inc
add
fsub
xor
push
jb
cmp
jns
ins
add
add
xor
test
sbb
mov
inc
mov
and
sub
jns
gs
jae
jb
out
mov
push
mov
pop
(bad)
and
fadd
jl
or
cmp
fild
sbb
bound
call
ja
mov
add
push
mov
dec
in
sbb
xor
push
into
cmp
inc
dec
push
cwde
adc
mov
fisub
mov
cmp
ror
mov
fmul
jbe
jb
and
sub
or
xor
dec
mov
push
dec
xor
xchg
push
in
cwde
movs
mov
inc
(bad)
fs
pop
mov
xor
sub
or
js
jno
push
sub
sbb
mov
pop
ins
xor
mov
push
ds
sub
cs
jae
ss
xchg
call
arpl
dec
(bad)
xlat
or
jno
call
inc
cwde
fs
movs
movs
sub
inc
test
inc
mov
push
lods
fidiv
dec
aaa
js
push
movs
mov
or
mov
dec
popa
push
adc
sbb
or
xchg
nop
mov
pushf
inc
mov
adc
enter
pop
ss
inc
push
aam
inc
jno
rcl
ror
push
xchg
adc
adc
test
pop
stos
dec
inc
push
push
sbb
inc
test
push
pop
push
sbb
sbb
ins
dec
and
in
push
call
mul
inc
sub
dec
inc
test
and
retf
add
or
push
jo
and
jmp
jns
xor
push
pop
sub
gs
lods
or
and
adc
cmp
js
xor
push
pusha
dec
js
push
push
enter
fsub
dec
push
jp
cmp
popa
in
push
xchg
enter
push
or
mov
mov
mov
jb
sub
adc
and
js
cmp
ins
shl
or
dec
mov
test
mov
call
add
stos
ins
pop
xor
test
inc
push
les
shl
xchg
pushf
pop
outs
(bad)
dec
inc
and
ja
mov
adc
dec
push
push
push
jno
js
cli
js
mov
ret
pusha
sti
xchg
sub
fs
push
aam
dec
inc
xchg
enter
sbb
pop
xchg
gs
push
sbb
xchg
pop
imul
fcom
push
dec
push
dec
dec
inc
sub
adc
ss
cmp
dec
mov
jle
rol
adc
cmp
push
in
xor
movs
xchg
push
and
sub
call
sbb
sbb
call
mov
push
inc
dec
int3
or
inc
repnz
or
or
push
enter
sub
mov
shl
ins
pop
add
aaa
fs
clc
popa
xor
pop
add
inc
push
pop
adc
push
push
jbe
sbb
data16
push
test
repnz
jb
ins
movs
popa
mov
inc
js
mov
push
call
mov
es
fnstenv
mov
sub
movs
gs
inc
je
inc
jne
stos
push
mov
dec
push
dec
in
add
or
mov
add
loopne
jne
push
(bad)
int
or
repnz
push
push
or
adc
dec
pop
xchg
push
test
xor
xchg
or
push
fs
mov
imul
or
inc
fsubr
or
hlt
dec
push
xor
jle
scas
ds
or
mov
and
push
add
push
adc
fsubr
test
outs
enter
xor
push
shr
out
xor
fadd
lods
dec
push
mov
sbb
dec
jo
inc
xchg
push
sbb
sub
mov
(bad)
and
test
repnz
push
mov
aam
inc
dec
xor
movs
sbb
inc
or
ret
loop
push
jo
fsub
retf
(bad)
adc
push
mov
sub
mov
sub
sbb
or
xchg
sbb
mov
inc
mov
sbb
push
fcom
mov
cmp
jb
xchg
imul
outs
and
lods
loopne
inc
adc
repnz
sbb
test
push
inc
mov
push
mov
es
dec
push
xor
push
sub
xor
add
sbb
(bad)
(bad)
mov
and
ds
add
adc
dec
and
jl
outs
je
adc
add
gs
xchg
xchg
dec
xor
adc
mov
or
inc
inc
push
cwde
fs
cs
push
sbb
mov
pop
mov
push
ins
jns
mov
xor
push
je
xor
(bad)
push
ja
push
dec
push
adc
or
mov
cmp
push
popa
movs
mov
inc
cmp
push
or
xchg
les
push
call
adc
je
sub
sbb
mov
jecxz
and
push
inc
mov
js
push
daa
test
jbe
jae
out
push
xor
push
je
add
or
aaa
ret
nop
dec
call
je
cmp
sbb
and
sbb
push
fs
dec
popf
adc
dec
and
in
out
jo
inc
imul
add
or
imul
scas
dec
data16
call
or
sbb
dec
dec
dec
lods
inc
push
push
dec
sbb
pop
bound
mov
sbb
xor
push
loope
in
sbb
push
or
cmp
jne
pop
dec
inc
je
jae
mov
adc
mov
push
shr
(bad)
mov
adc
dec
cs
lock
sub
cmps
movs
rol
add
not
mov
xchg
inc
sbb
push
add
adc
cmps
ins
jp
int3
push
stos
clc
test
jae
dec
popa
outs
inc
call
sub
mov
push
ins
pushf
shl
cmp
push
imul
and
sub
adc
add
dec
loop
adc
xchg
pop
push
inc
add
in
es
data16
and
xor
xor
outs
movs
rol
add
(bad)
fmul
dec
xchg
mov
test
aam
pop
outs
dec
clc
xor
push
dec
fs
retf
adc
dec
push
inc
xchg
mov
dec
cwde
sahf
inc
mov
xchg
xor
xchg
push
sub
inc
frstor
and
test
pop
cmp
push
pop
and
mov
or
cwde
pop
xor
adc
les
and
push
(bad)
outs
push
imul
cli
ss
mov
mov
and
push
sbb
cmp
hlt
jmp
xor
gs
in
test
xor
push
push
cmp
bound
sbb
mov
ja
xor
ins
call
jbe
ins
movs
call
(bad)
fwait
data16
push
jb
imul
dec
stos
adc
or
jp
xor
mov
out
mov
adc
or
(bad)
rcl
loope
and
in
test
dec
inc
dec
outs
push
or
push
xchg
mov
sbb
push
or
push
and
add
mov
xchg
or
je
push
aaa
inc
inc
inc
xor
mov
push
adc
or
mov
jno
push
jo
add
jb
jle
fcomp
mov
jp
inc
xor
dec
lea
mov
push
aaa
pop
inc
dec
add
sub
inc
sbb
cmp
je
js
gs
mov
add
or
pusha
and
enter
adc
cli
sub
push
jno
adc
jb
(bad)
pusha
int
sub
dec
int3
addr16
push
pop
sub
sbb
(bad)
push
and
dec
and
xor
rol
les
call
xchg
push
fiadd
mov
push
sub
inc
push
lods
aam
xchg
pop
dec
test
sbb
imul
add
into
stos
xor
mov
cmp
sbb
cmp
or
dec
dec
adc
sbb
dec
xchg
or
and
sbb
push
mov
call
ja
and
nop
mov
add
test
or
nop
int3
mov
aam
test
jb
or
and
test
lock
and
sbb
fidivr
outs
stos
mov
ss
movs
stos
mov
into
inc
jns
jbe
push
push
adc
imul
pushf
clc
enter
push
gs
dec
out
add
arpl
dec
mov
xchg
in
popa
dec
and
add
mov
xchg
push
dec
xor
and
and
call
mov
add
push
mov
popa
mov
adc
dec
or
lods
sub
jp
outs
js
add
add
outs
jb
add
dec
stos
add
mov
inc
ror
je
mov
add
cmp
xor
and
shl
mov
dec
xor
mov
push
pop
sahf
ins
push
inc
js
test
or
add
pop
add
and
test
push
xor
ret
aaa
mov
sbb
or
add
retf
aaa
or
adc
push
ins
ret
xor
stos
ss
xchg
push
ins
xchg
push
push
sub
nop
dec
pop
test
nop
xchg
jb
jbe
pusha
shl
push
push
mov
inc
bound
mov
push
add
imul
or
pop
mov
mov
add
jo
mov
push
ins
push
ins
add
(bad)
xor
push
dec
push
push
(bad)
pop
jmp
popa
sub
inc
xor
adc
outs
jp
push
sbb
enter
jbe
sub
dec
push
imul
add
pop
push
mov
push
adc
inc
fsub
sub
dec
push
ss
sub
jno
test
pop
sbb
xchg
lock
push
inc
dec
jne
or
add
gs
mov
les
push
inc
fsub
call
inc
mov
cdq
adc
inc
add
sbb
inc
ins
cmps
xor
dec
fisubr
xor
push
push
xchg
jae
mov
jno
push
xor
jbe
push
jbe
dec
nop
jmp
jb
xor
fsqrt
push
shl
inc
lea
adc
les
jle
pop
outs
mov
leave
sub
pop
xor
push
je
push
inc
or
movs
clc
and
sub
inc
push
aaa
and
fdiv
jb
fcom
jb
push
ins
shr
into
inc
xor
sbb
ins
xor
mov
jno
push
jb
es
mov
bound
adc
pop
dec
jno
inc
inc
push
inc
aaa
push
cmp
stos
xor
xor
fcom
mov
inc
jmp
test
bound
pusha
mov
mov
imul
inc
mov
les
(bad)
arpl
pop
xor
jb
or
stos
stos
add
ins
mov
jno
add
cwde
mov
jb
adc
push
jae
or
and
imul
test
inc
ins
les
pop
pusha
dec
lea
es
xor
sub
push
push
imul
add
cmp
jno
inc
inc
lea
into
dec
push
cmps
push
xchg
js
bound
and
adc
or
add
xchg
push
adc
xchg
adc
and
xchg
and
popa
pop
push
sbb
and
cmps
fs
sbb
and
cld
stos
dec
pop
test
mov
retf
icebp
sub
xor
and
call
or
sub
inc
dec
jp
push
adc
mov
clc
fs
dec
gs
ret
push
aam
mov
inc
ja
mov
mov
xor
je
xchg
fcom
sbb
movs
pop
add
ss
ins
call
or
scas
mov
clc
inc
or
push
mov
rol
fcomp
ss
cmp
add
loop
push
pop
or
xor
or
scas
or
stos
rol
aaa
dec
inc
dec
loope
inc
mov
or
inc
retf
xor
test
xor
imul
inc
dec
add
sbb
in
ja
push
mov
in
jns
loop
add
push
call
fimul
int
push
push
jae
jp
mov
enter
xchg
inc
push
adc
call
inc
dec
inc
fsubr
inc
push
add
push
mov
xchg
mov
add
pop
sub
mov
add
je
pop
inc
fs
movs
cmps
add
enter
ficom
add
test
add
lods
mov
rol
dec
push
les
adc
mov
xchg
test
cmp
or
stos
pop
out
aam
cmp
mov
push
inc
xchg
add
test
movs
adc
xor
pop
hlt
jno
inc
push
loop
mov
into
addr16
aaa
inc
push
imul
cmps
sub
shl
call
popa
inc
add
xor
pop
xor
xchg
(bad)
dec
mov
push
add
adc
and
es
and
add
sahf
test
mov
sub
pop
or
jl
adc
cs
imul
push
call
dec
dec
adc
push
inc
sub
enter
add
cs
sub
dec
jl
jns
test
xor
fs
mov
mov
aad
add
dec
(bad)
push
or
adc
push
jl
stos
sbb
inc
push
adc
fisub
or
in
jp
jne
or
pop
push
push
jb
add
xor
adc
rol
ror
retf
sub
mov
(bad)
inc
(bad)
gs
adc
mov
mov
mov
inc
test
out
inc
test
arpl
xor
pop
xor
xor
rol
outs
js
or
ror
inc
inc
popa
cs
push
mov
adc
and
add
sub
ins
rol
inc
or
xor
and
mov
sub
cmp
xchg
rcr
outs
jl
mov
aaa
push
pop
sar
inc
cmp
leave
xchg
(bad)
repnz
xchg
jo
lods
dec
jo
test
and
xor
sub
rcl
bound
push
push
dec
cmp
push
inc
sbb
bound
js
out
stos
cmp
jbe
inc
ins
dec
jp
shl
test
pushf
xor
test
popa
inc
sar
push
fcomp
lea
ss
push
dec
inc
push
dec
fmul
mov
shl
je
dec
stos
cwde
popa
inc
cld
gs
push
loop
inc
mov
sbb
lahf
push
pop
adc
pusha
mov
jo
push
add
xor
dec
ret
add
inc
call
fs
enter
push
inc
(bad)
stos
or
pop
xor
adc
and
push
add
popf
out
pop
nop
loope
aam
mov
xchg
cmp
push
or
call
pop
ret
inc
inc
outs
xor
or
xchg
mov
dec
xor
dec
inc
lods
inc
or
adc
inc
push
push
adc
ret
inc
test
dec
fmul
xchg
or
push
(bad)
fs
inc
push
push
sub
pusha
adc
mov
bound
pushf
inc
dec
sbb
es
je
ins
push
and
loopne
test
add
inc
push
ds
adc
dec
push
data16
mov
mov
mov
push
ja
mov
cmps
fimul
data16
xor
jle
test
and
call
mov
or
jne
dec
sub
and
shl
and
or
adc
push
adc
sub
pop
pushf
cmp
retf
add
dec
add
dec
inc
jo
shl
pop
and
jns
or
jmp
mov
aam
pop
mov
push
ins
cmp
call
xor
js
and
pushw
pop
loopne
add
sbb
or
mov
jne
scas
ss
push
ja
fs
and
ins
inc
das
mov
push
push
push
loopne
or
xor
fs
mov
add
add
bound
sub
cmp
sahf
push
adc
addr16
lods
inc
xchg
and
ret
or
or
test
inc
outs
dec
jp
outs
fsub
jns
es
xor
aam
shl
adc
rcl
push
push
inc
out
dec
inc
stos
enter
push
movs
dec
or
pop
sbb
push
sbb
push
inc
inc
pop
es
les
jno
dec
push
jo
cs
retf
adc
cwde
mov
push
inc
push
jb
or
popa
jno
lock
adc
adc
add
xchg
aaa
jne
rol
cmps
sub
outs
jbe
retf
sar
push
dec
retf
dec
js
sbb
and
dec
push
ror
cli
mov
test
push
imul
and
mov
jo
mov
mov
push
jo
dec
adc
dec
cmp
push
xor
pop
fimul
loope
sub
pushw
dec
jbe
aad
push
in
arpl
outs
movs
fs
ss
or
fwait
cwde
push
dec
pop
push
push
xchg
test
inc
dec
xchg
or
sub
push
dec
push
enter
and
push
inc
ins
jbe
jmp
dec
inc
inc
xor
sub
push
in
push
dec
inc
cwde
loopne
add
pop
push
push
and
imul
push
dec
jns
and
add
add
sub
cmp
in
mov
dec
jns
dec
ss
ja
je
sbb
mov
aam
jne
push
ins
adc
dec
movs
push
pop
sub
push
(bad)
push
int3
push
mov
add
mov
dec
(bad)
dec
xchg
mov
xor
mov
or
adc
xchg
add
mov
mov
fcomp
or
pop
mov
sbb
scas
je
shl
movs
test
and
jae
dec
push
adc
push
es
sub
out
adc
adc
dec
je
pop
push
ins
mov
dec
je
or
xchg
xor
sbb
push
add
mov
aaa
(bad)
xchg
clc
cmp
inc
cwde
sub
add
and
push
mov
and
test
inc
inc
mov
jo
pop
scas
je
dec
push
jno
loop
inc
push
add
cmp
scas
push
jmp
pop
repnz
bound
mov
aam
add
dec
arpl
ss
add
xchg
test
inc
or
and
dec
or
bound
jp
call
ins
ss
xchg
or
ins
sbb
bound
stos
or
mov
adc
inc
push
sar
sbb
(bad)
ins
xchg
dec
icebp
int
mov
inc
jns
(bad)
jo
inc
aaa
in
cmp
or
test
dec
push
mov
pushf
test
test
cmp
test
nop
dec
enter
xchg
fnstenv
push
pushw
inc
test
ror
xor
or
xor
sub
add
jp
push
or
adc
mov
aad
mov
test
shl
jle
mov
cmp
inc
cmps
sbb
inc
mov
adc
bound
add
aam
and
jae
xor
scas
mov
xor
pop
inc
push
data16
push
lods
push
or
(bad)
idiv
jo
rol
(bad)
je
xor
ins
sub
dec
push
push
ficom
loop
xor
push
je
add
pop
or
and
mov
int3
in
push
push
pop
ret
dec
push
gs
mov
dec
inc
cmp
aam
add
dec
mov
jae
pushf
jbe
outs
sub
xlat
test
add
lods
jl
stos
movs
inc
push
push
call
or
stos
repnz
gs
call
inc
cwde
popa
scas
sbb
and
ins
popa
inc
inc
out
pop
shl
xor
dec
test
mov
addr16
mov
add
retf
shl
mov
add
mov
ss
jns
adc
adc
push
inc
xchg
add
retf
xchg
push
sub
jb
jo
leave
aam
xor
inc
adc
sub
lock
mov
scas
push
add
fmul
push
dec
dec
sbb
xor
xor
ins
mov
popa
pop
test
inc
dec
call
cdq
mov
mov
fwait
jb
inc
jp
sbb
adc
or
push
push
in
cmp
push
push
dec
jbe
mov
mov
dec
dec
je
call
ja
mov
push
add
and
or
lds
inc
push
imul
aaa
inc
xor
lods
ins
stos
adc
push
scas
jbe
push
push
movs
pop
jo
mov
inc
cdq
sbb
inc
fimul
add
mov
mov
xor
add
inc
jbe
js
mov
dec
push
in
xor
push
into
push
push
adc
and
imul
push
mov
push
cmp
mov
cs
push
add
rcl
stos
pop
pusha
idiv
jns
add
or
or
sub
add
dec
push
pop
fs
enter
dec
ins
inc
cmps
fsubp
cdq
or
adc
push
sbb
fs
inc
pop
pushf
push
sbb
inc
push
adc
call
retf
rcl
inc
ins
pop
xor
ret
xchg
mov
xchg
add
dec
and
popa
shl
fs
xchg
and
jp
or
xchg
adc
mov
fst
nop
xor
outs
imul
addr16
sbb
ss
jb
js
or
xchg
mov
xor
cmp
and
es
jno
sub
add
mov
or
or
pop
cmp
pop
scas
add
push
mov
push
ret
sub
fs
stos
sub
xchg
js
jae
adc
and
inc
add
jbe
adc
xor
popa
fsub
xor
push
adc
add
test
add
ins
cmp
mov
xchg
stos
jo
ss
and
jl
ins
push
test
inc
adc
popa
cld
push
mov
add
cmp
mov
xor
cmps
ss
mov
inc
push
dec
cmp
pushf
xor
push
shl
and
je
or
cmp
hlt
sub
adc
xor
inc
push
pop
cli
sub
js
inc
adc
xor
fwait
push
inc
add
popa
cmp
add
push
jo
push
nop
dec
fimul
mov
jbe
pop
add
out
ins
mov
and
jb
xor
cmp
and
push
push
loopne
jo
popa
add
dec
dec
and
push
and
(bad)
and
push
add
rol
push
outs
pop
inc
or
xchg
push
and
or
mov
clc
jp
adc
ror
repnz
and
dec
dec
dec
inc
inc
jb
data16
push
mov
mov
add
les
aad
dec
pusha
push
imul
xor
js
mov
adc
ret
sub
xchg
ja
bound
sbb
data16
cld
dec
shl
inc
push
fstp
push
mov
jp
lock
aam
xor
and
pop
inc
cmp
fs
push
cmp
fmul
add
dec
lea
je
jmp
test
or
push
cmp
adc
adc
jno
pop
jnp
sub
dec
xor
scas
ret
inc
ja
and
pop
sub
outs
xor
jae
and
gs
xchg
add
push
mov
aam
movs
jne
sbb
pop
fistp
popa
test
je
add
mov
push
push
cbw
sub
inc
dec
mov
outs
bound
xor
fsub
je
push
push
sub
cmp
dec
push
aad
or
xor
add
daa
inc
aaa
mov
jle
push
push
bound
pop
bound
push
or
xchg
or
xchg
int3
dec
movs
mov
cmp
test
call
mov
jp
xchg
push
jp
push
push
inc
js
or
add
mov
inc
adc
push
and
mov
and
xchg
dec
and
test
repnz
jbe
fiadd
imul
jb
inc
arpl
or
xor
xor
dec
imul
inc
and
add
sub
dec
or
add
xor
xor
xchg
push
adc
outs
xor
les
ficomp
imul
dec
xchg
mov
jbe
and
fcom
sbb
clc
jo
rcl
push
push
dec
push
ins
dec
je
dec
stos
add
mov
cmps
mov
jo
xor
imul
sbb
add
mov
mov
cmps
push
int3
inc
ror
repnz
xor
pop
adc
out
les
or
mov
mov
cmp
pushf
ds
jns
cmc
ins
or
imul
dec
add
aaa
outs
add
sbb
js
push
fisubr
push
arpl
dec
push
jo
inc
dec
mov
movs
push
mov
inc
xchg
pushf
jne
jae
pusha
punpckldq
add
jne
add
add
ret
jb
retf
mov
fs
sbb
sbb
xchg
cli
xchg
jae
dec
dec
cdq
adc
adc
jb
outs
jo
loopne
fs
jb
jo
into
xchg
dec
push
scas
push
push
push
ins
and
jbe
and
push
mov
xor
ss
inc
outs
mov
jp
xchg
pop
adc
inc
push
outs
pop
imul
xor
adc
(bad)
xchg
mov
lods
jne
jb
push
or
fisub
shr
enter
xor
xor
test
fs
push
pop
adc
fucom
outs
dec
inc
jl
sub
push
or
rcl
addr16
push
pop
(bad)
dec
mov
xor
mov
es
js
xchg
push
pusha
xor
movs
cmp
inc
cli
mov
add
fidivr
pop
mov
xchg
mov
inc
mov
data16
push
pop
dec
add
cmps
(bad)
enter
rcl
adc
movs
loopne
sub
dec
push
je
dec
push
fisttp
push
imul
dec
push
dec
fisub
push
dec
xor
(bad)
and
add
and
adc
mov
add
and
add
outs
xor
and
inc
imul
cmp
add
push
adc
xor
dec
mov
and
or
inc
add
mov
ins
or
adc
adc
sub
fisub
push
jb
xor
xor
es
cmp
xchg
test
push
loope
test
aam
push
push
sub
inc
inc
data16
push
dec
or
imul
xor
adc
sub
sub
mov
jno
ret
inc
or
mov
mov
pop
jb
inc
rcl
inc
dec
jmp
in
or
repnz
xor
ja
jbe
push
ror
push
xchg
rcr
adc
xor
fnstenv
xor
loopne
push
jb
enter
mov
enter
into
xor
add
fadd
movs
sub
mov
shl
mov
cwde
add
add
push
mov
add
inc
inc
pop
rcl
fisubr
nop
leave
xor
or
loopne
ret
test
xor
dec
shl
retf
lock
push
or
sbb
lods
dec
(bad)
jmp
push
or
daa
inc
xor
sbb
dec
inc
sbb
push
or
jae
and
mov
and
bound
push
pop
ins
push
cmp
jns
fdiv
ds
(bad)
mov
inc
mov
pop
push
jbe
fs
inc
shl
js
adc
ret
in
adc
adc
add
push
xchg
sub
add
or
loopne
sub
movs
pop
inc
ins
dec
add
ss
and
add
imul
adc
push
push
xchg
test
push
retf
je
ficom
push
mov
and
dec
sub
cmp
or
jl
cdq
add
dec
(bad)
jl
cmp
pop
push
xchg
test
mov
inc
jne
inc
pop
jbe
je
int
mov
inc
js
popa
xchg
inc
mov
jb
nop
ss
lods
adc
xor
test
jno
pop
out
dec
inc
dec
jmp
cmp
lock
ja
xchg
xor
ins
pusha
and
dec
jae
test
mov
inc
test
mov
or
aam
adc
inc
adc
sbb
or
inc
imul
mov
xor
add
push
lock
(bad)
push
add
arpl
xchg
mov
xchg
mov
adc
push
je
movs
inc
adc
retf
int3
mov
or
stos
stos
out
sub
fs
popa
jns
pop
push
and
jns
mov
movs
fsubr
imul
arpl
inc
mov
push
push
pop
cmp
push
mov
in
add
push
or
in
or
xchg
retf
test
adc
add
mov
xchg
leave
test
test
cmp
inc
data16
cmp
push
imul
leave
in
sar
xchg
inc
add
or
jo
jne
bound
je
xor
cmp
adc
pop
fisubr
pusha
push
xchg
xchg
sbb
jbe
dec
cmp
jl
mov
add
stos
xor
mov
adc
mov
adc
dec
outs
adc
and
and
and
jns
jbe
xor
inc
loope
fsub
aam
movs
xor
cli
push
jbe
sbb
cdq
add
dec
xor
add
pop
or
sar
inc
jmp
pop
inc
jb
fsub
pop
outs
cmp
add
jl
push
jno
or
add
xchg
stos
push
jo
jmp
dec
outs
imul
bound
and
xor
and
push
mov
cmp
mov
sub
test
inc
retf
or
adc
pop
cmps
pop
arpl
pop
popa
xor
jp
adc
cmp
fsubr
(bad)
or
or
rol
nop
push
rol
or
inc
and
adc
cwde
pop
mov
jno
outs
ss
sub
xchg
adc
and
je
and
xor
jbe
jns
mov
sub
mov
add
sub
ins
push
fcom
push
test
push
bnd
call
sbb
adc
repnz
clc
xor
push
fidiv
or
jle
popa
xor
xor
inc
mov
cs
sbb
xchg
dec
js
js
pop
and
add
push
dec
or
push
(bad)
mov
add
lods
inc
pop
out
dec
xchg
jne
fsubr
and
outs
inc
mov
adc
mov
cmp
dec
dec
adc
pusha
xor
aaa
or
fsubr
ja
mov
xchg
cmp
and
pop
xchg
dec
mov
cld
push
scas
fdivr
ins
mov
add
dec
jo
leavew
mov
mov
add
or
inc
add
or
jp
push
clc
and
sub
outs
jmp
or
push
jns
ss
inc
sti
loop
inc
dec
and
int3
push
pop
add
in
outs
inc
outs
es
shl
pusha
jp
dec
pop
xchg
dec
adc
dec
nop
push
stos
and
cmp
add
retf
mov
cmps
aam
dec
imul
int3
push
dec
fidiv
xchg
rcl
push
or
or
mov
mov
add
add
or
sar
dec
cmp
aaa
or
push
mov
pop
jne
mov
inc
jb
sub
xor
jo
jmp
loopne
ja
push
xor
or
sbb
adc
pop
xor
ror
mov
adc
cs
adc
push
push
or
cmp
dec
inc
dec
outs
ss
(bad)
xchg
sbb
fs
xor
mov
addr16
dec
and
gs
je
inc
nop
leave
or
lds
lods
and
inc
push
add
ds
enter
mov
pop
imul
(bad)
dec
ins
shr
sbb
cmp
clc
pusha
(bad)
inc
inc
bound
pop
push
jb
outs
mov
and
mov
ss
jb
dec
or
bound
ja
or
or
and
push
xor
mov
push
call
or
xor
add
dec
push
and
xchg
adc
or
test
adc
pop
outs
push
jp
scas
shl
ret
pop
les
(bad)
pop
push
test
aam
or
push
adc
data16
fisttp
je
dec
rol
and
movs
les
mov
mov
and
xor
xchg
fisubr
xor
pushf
xor
mov
pop
mov
sub
and
jo
xchg
and
fs
movs
xor
cmp
xor
pusha
xor
or
test
mov
pop
adc
dec
push
mov
mov
pop
test
adc
ins
lods
rol
test
xchg
inc
jb
push
fisttp
dec
ins
cwde
ins
sub
push
or
imul
adc
sub
add
add
fadd
mov
imul
mov
enter
mov
je
push
mov
and
jbe
pusha
pop
imul
push
or
cmp
adc
and
push
loopne
adc
adc
je
enter
out
dec
enter
outs
or
add
bnd
inc
mov
les
adc
inc
push
or
mov
aaa
lods
rol
sub
add
jo
adc
sbb
push
test
sub
cmp
mov
jbe
push
xchg
rol
in
loop
add
mov
jb
or
mov
(bad)
leave
test
fcomp
inc
pop
mov
dec
jb
mov
xor
inc
inc
ins
cwde
mov
pop
mov
mov
bound
dec
push
nop
pop
xchg
push
les
inc
push
call
xchg
sbb
lock
adc
xor
xchg
rol
(bad)
cmp
jp
mov
push
js
dec
ss
dec
add
shl
hlt
dec
add
dec
cmp
dec
and
addr16
rcr
pop
adc
add
and
or
cwde
pop
xor
push
adc
gs
mov
je
sub
lods
outs
dec
xor
inc
je
sub
cld
add
loopne
adc
dec
dec
or
je
aam
sub
push
and
or
mov
cwde
test
mov
push
jp
aaa
call
lods
or
xchg
jp
push
stos
shl
sub
mov
out
inc
push
aaa
pusha
test
pop
inc
xchg
xchg
cli
push
sahf
mov
movs
sub
nop
mov
inc
xor
inc
aaa
imul
push
cld
ja
ror
push
data16
push
imul
add
ds
shl
or
and
inc
push
push
ins
into
cmp
dec
sub
pop
pusha
inc
push
inc
adc
jne
or
push
dec
mov
test
xor
out
add
cdq
movs
add
rol
sub
dec
inc
add
xchg
pushf
(bad)
mov
stos
push
ss
pop
pop
push
add
xor
es
imul
pusha
sub
shr
push
mov
es
add
xor
mov
sub
mov
out
mov
data16
imul
adc
mov
mov
sub
xor
ss
push
sub
and
push
popa
jbe
dec
lea
add
xor
or
mov
and
and
into
mov
test
dec
jl
add
gs
jbe
dec
inc
test
mov
add
jo
xor
and
jle
dec
mov
imul
shl
xchg
mov
cli
ja
jp
inc
cmp
adc
outs
mov
js
ins
dec
jp
xor
xor
(bad)
test
lea
push
dec
sbb
jp
adc
or
dec
push
ss
ins
ins
xor
nop
into
xor
rol
je
leave
and
or
mov
sbb
lock
push
inc
mov
xchg
cmps
sub
sbb
call
imul
sbb
sbb
xchg
xchg
xor
jle
lahf
movs
lock
inc
dec
push
aaa
outs
jae
push
pop
or
aas
dec
cwde
add
ret
inc
pop
add
cmp
add
lods
cwde
jmp
mov
push
dec
fiadd
mov
inc
test
sbb
xchg
or
rol
(bad)
push
dec
cwde
inc
mov
dec
sub
mov
adc
loop
sbb
mov
js
inc
cmp
outs
ins
dec
push
popa
call
pop
and
bound
push
test
jne
gs
(bad)
mov
dec
add
mov
outs
add
sahf
dec
jne
and
test
jae
push
bound
push
sbb
xchg
test
mov
pop
ret
xor
jo
xchg
or
inc
pop
fst
sub
cmp
push
test
jae
pop
cmp
fsubr
(bad)
bound
adc
inc
xchg
fs
inc
add
inc
mov
sbb
sub
nop
push
test
push
add
dec
js
fisubr
sbb
dec
fild
aaa
inc
cli
dec
mov
jne
and
push
fs
nop
mov
jo
push
and
mov
outs
jle
rcl
pop
sub
je
dec
cli
jo
sub
imul
enter
dec
mov
pusha
push
hlt
jno
or
xor
fwait
adc
sub
les
add
cs
sub
adc
cmps
inc
ret
cmp
das
xor
popa
inc
push
and
inc
jne
inc
cmp
adc
call
push
and
mov
inc
inc
ret
stos
dec
movs
xor
jbe
popa
xchg
enter
and
xchg
mov
add
outs
dec
ins
pusha
cmps
and
pop
cmp
jb
and
or
add
push
(bad)
xor
bound
pop
add
xor
mul
mov
dec
dec
test
movs
add
retf
loop
push
rol
or
pop
dec
cs
ja
sub
ins
add
out
je
inc
dec
aaa
inc
aad
jne
push
add
ret
fwait
xchg
push
pop
push
rcl
dec
sub
fadd
in
push
mov
adc
pop
pop
aam
or
stos
pusha
repnz
cmp
cmp
and
cmp
jb
adc
mov
xchg
xchg
push
js
and
imul
and
xor
js
push
push
dec
mov
jo
xor
fwait
push
xchg
pop
push
adc
xor
sbb
or
xor
xor
add
fsub
aam
xor
dec
push
and
push
nop
fs
xor
mov
and
inc
push
arpl
cdq
fiadd
inc
and
fsubr
xchg
nop
mov
push
or
push
add
je
ins
stos
cmp
push
dec
inc
dec
sahf
inc
sbb
test
inc
ins
popa
adc
adc
and
add
pop
jne
bound
push
inc
adc
push
pop
sub
push
push
adc
xor
cwde
int3
pusha
push
fcomp
or
(bad)
fdivr
sub
retf
jbe
sub
and
dec
pop
sbb
xor
pop
cld
and
mov
ins
inc
ins
test
sub
aam
bound
dec
inc
cmp
mov
dec
xchg
imul
dec
and
mov
cmps
and
dec
and
movs
inc
xor
sbb
xchg
push
fwait
mov
cld
pop
jb
push
push
or
jo
add
add
and
inc
mov
jbe
mul
in
push
js
push
inc
cmp
jo
adc
push
gs
bound
and
pop
movs
push
cmc
push
or
push
popa
bound
push
adc
sahf
jns
je
mov
bound
push
test
sbb
push
mov
sbb
inc
sub
push
pop
inc
or
push
adc
mov
test
xchg
sub
inc
fmul
(bad)
mov
inc
dec
cs
xor
dec
xor
cmp
push
xchg
add
xchg
push
mov
inc
addr16
adc
sbb
out
shl
arpl
test
push
push
xor
dec
add
mov
push
jae
add
sar
cmp
inc
mov
fdiv
add
es
and
pusha
ss
jecxz
push
push
pop
cmp
pop
dec
pop
jmp
push
bound
idiv
pop
and
dec
inc
mov
add
mov
mov
call
push
pusha
fadd
sub
push
ins
xor
nop
call
push
dec
clc
xor
inc
ret
push
aaa
inc
gs
inc
and
pop
cmp
not
push
xor
jbe
mov
xchg
test
test
add
push
cmp
push
adc
cs
mov
mov
data16
inc
push
jno
dec
test
inc
ja
add
test
push
adc
cmps
push
xor
cli
jo
xchg
pop
pop
test
data16
pusha
jo
and
xchg
fiadd
dec
and
or
test
jns
mov
xchg
div
dec
jo
inc
xor
inc
imul
not
out
and
inc
xchg
sub
adc
imul
ss
mov
cli
dec
ja
ins
xchg
push
pop
push
pop
dec
inc
clc
pop
enter
push
les
and
jp
push
or
stos
mov
and
cmp
dec
sub
add
stos
sub
dec
add
xchg
mov
imul
mov
call
clc
sub
dec
ror
add
fmul
jp
sbb
dec
inc
jl
inc
je
push
xor
mov
js
adc
or
jo
push
xchg
int3
stos
mov
fs
jmp
dec
xor
jle
dec
outs
push
ss
inc
gs
push
rcl
jne
jns
popa
call
jl
inc
retf
and
sahf
imul
or
push
mov
cmps
xor
push
push
pop
movs
and
add
or
and
pusha
sub
push
push
sub
outs
and
test
add
popf
xchg
int3
or
(bad)
mov
clc
jbe
add
fld
cwde
dec
fidiv
dec
ror
sub
xchg
sbb
addr16
adc
shl
adc
les
jo
xor
sahf
inc
sbb
cmp
xchg
xchg
xchg
or
adc
nop
(bad)
out
inc
inc
ret
jae
sub
stos
dec
ins
in
imul
push
push
mov
loop
adc
xor
add
popa
and
rol
jno
or
push
ror
jbe
jae
push
and
mov
push
cmps
repnz
sub
add
mov
sbb
lods
add
arpl
cmps
sbb
xchg
adc
mov
xor
dec
and
adc
add
inc
dec
pop
sub
pop
push
xchg
push
inc
sub
movs
jl
inc
enter
sbb
push
test
mov
jbe
retf
fisttp
fs
jo
push
outs
jle
dec
adc
rcr
call
bound
pusha
sub
arpl
ins
mov
js
jb
push
adc
rcr
push
push
dec
repnz
cmps
stos
call
add
push
dec
inc
test
dec
jp
push
je
leave
cld
addr16
dec
push
inc
xchg
xor
mov
test
cli
gs
bound
push
xor
or
push
jns
push
test
pop
adc
or
add
push
pop
mov
fcmovbe
imul
sbb
outs
push
hlt
push
add
xchg
and
je
cwde
mov
cli
xor
or
cld
xchg
mov
jl
sub
jae
inc
inc
or
dec
std
imul
ins
fidiv
mov
stos
or
add
inc
mov
or
(bad)
or
loope
or
pop
pop
lods
adc
jno
and
push
inc
movs
or
push
dec
mov
push
push
in
cmps
or
inc
pop
add
dec
fs
mov
movs
cmc
ins
ja
inc
fadd
aad
pusha
xor
xchg
add
out
xchg
es
or
je
enter
dec
scas
stos
jne
inc
inc
dec
ret
in
inc
jb
push
xor
ja
xor
ins
ss
pop
ins
mov
jae
dec
adc
or
jbe
jo
test
mov
pop
adc
or
add
and
or
inc
js
pop
add
adc
push
add
cmp
xor
or
and
inc
ja
sub
push
mov
and
mov
test
inc
mov
mov
or
imul
add
jo
retf
sub
nop
push
imul
push
xor
push
dec
push
or
pusha
or
(bad)
inc
cdq
loope
mov
xor
add
and
test
mov
push
xor
sub
mov
mov
mov
dec
test
jbe
and
add
(bad)
mov
mov
outs
jb
and
or
movs
and
mov
sub
or
push
bound
aam
inc
push
popa
aam
mov
and
and
aaa
jbe
inc
and
(bad)
dec
jb
inc
push
xchg
ret
fidivr
push
inc
jb
cwde
pop
nop
xchg
fwait
mov
push
fiadd
fs
cs
xor
adc
cmp
inc
pop
xor
pusha
xchg
push
mov
enter
enter
mov
push
arpl
shl
adc
pop
mov
xor
sub
mov
pop
jp
sub
push
out
cmps
hlt
add
dec
jno
clc
pop
loop
shl
push
push
push
adc
or
in
xor
hlt
or
rcl
imul
push
sub
and
sahf
and
pop
xor
xor
xchg
adc
add
retf
je
pop
jmp
gs
push
sbb
add
shl
out
xor
add
test
xor
fs
push
outs
jbe
add
ret
movs
cli
push
mov
jo
mov
jbe
adc
sahf
cmps
push
movs
mov
cwde
into
xchg
push
shr
jp
enter
push
jno
test
dec
movs
sbb
mov
push
or
inc
dec
ins
cmp
inc
xchg
gs
fnsave
push
xor
(bad)
clc
imul
mov
cld
je
mov
xchg
outs
and
inc
aaa
add
or
or
xchg
je
or
inc
shr
test
loopne
mov
cmp
xor
mov
push
shl
fsubr
mov
add
add
or
jo
mov
retf
push
in
sub
pop
or
or
mov
and
dec
call
jne
arpl
add
push
pop
arpl
test
fs
aad
pusha
outs
inc
inc
popa
jo
and
jl
jo
dec
adc
cmp
je
mov
mov
cwde
loopne
loopne
shr
rol
adc
xchg
ret
test
xor
add
dec
jle
xchg
push
push
test
bound
push
shr
inc
imul
xchg
rol
movs
dec
out
popa
movs
and
fs
push
mov
add
cmp
and
imul
stos
xor
gs
inc
mov
adc
fld
outs
inc
in
jb
or
(bad)
xchg
push
push
adc
push
mov
add
jns
xchg
adc
inc
inc
in
fild
les
mov
pop
ds
jmp
mov
dec
dec
nop
pop
retf
fsub
add
pop
jbe
popa
ret
bound
jne
dec
xor
call
push
dec
test
add
push
add
mov
test
sbb
cmp
fsub
add
out
or
dec
sub
cmp
xchg
fimul
dec
push
repnz
adc
push
xchg
test
cmp
ss
inc
xchg
jle
xor
pusha
push
retf
ret
push
and
cwde
imul
fsub
push
adc
rcl
fimul
imul
hlt
xor
pop
lods
arpl
sbb
mov
dec
dec
jge
push
push
sub
xor
dec
jne
hlt
ss
bound
retf
repnz
movs
rcl
fsub
mov
cmp
aad
inc
and
xor
and
mov
push
push
les
shl
repnz
aam
retf
sub
mov
int3
dec
dec
jbe
dec
push
bound
inc
add
ror
rcl
jmp
or
xchg
or
xor
adc
mov
push
cmps
xchg
push
mov
cld
jp
dec
mov
dec
sbb
and
xor
pop
adc
outs
scas
mov
and
dec
adc
pop
mov
sub
adc
stos
js
xor
fwait
push
add
popa
jns
xor
jo
add
out
ss
inc
dec
cld
inc
fs
cmp
idiv
cdq
xchg
inc
add
mov
stos
mov
jb
push
add
inc
inc
scas
xor
jp
mov
or
xor
fdiv
ds
fs
clc
jo
push
xor
xchg
xor
inc
ret
xchg
shr
or
or
lock
xchg
inc
loop
xchg
jb
xor
xor
and
loopne
cmp
jns
popa
test
ins
xor
sbb
mov
fcom
imul
rol
push
push
sbb
and
aas
inc
push
jno
xor
shl
xor
(bad)
and
ret
adc
sahf
jne
loop
xor
ror
in
nop
rol
pop
and
or
nop
js
dec
xor
add
cwde
push
mov
cmp
dec
fcomp
dec
push
jo
xor
or
mov
mov
bound
add
imul
sub
arpl
je
sbb
xchg
xor
jl
dec
dec
add
out
add
dec
jp
xor
and
inc
arpl
dec
xchg
loopne
sub
call
out
loopne
scas
dec
push
ret
inc
mov
or
mov
add
mov
loop
bound
mov
call
pop
xchg
pop
je
adc
cmp
imul
jno
outs
ret
sbb
xor
push
es
inc
add
or
adc
lods
inc
xchg
inc
adc
xor
ss
dec
and
jbe
call
push
inc
outs
jle
push
inc
test
call
ficom
xchg
inc
inc
pusha
jb
mov
mov
and
push
test
callw
dec
(bad)
jne
fs
push
test
dec
push
push
xchg
sbb
push
mov
sub
dec
jp
ror
jae
xchg
push
xchg
leave
xchg
cmps
loop
inc
rol
push
push
cld
mov
dec
test
jo
xor
dec
inc
push
or
push
inc
int
mov
add
dec
pop
inc
jb
sub
lock
jb
sub
lods
push
adc
aam
cli
cmp
jecxz
and
cmp
je
xor
dec
shl
loopne
mov
push
and
jb
push
pop
mov
pop
jmp
gs
cwde
xchg
dec
add
or
add
rol
je
adc
ins
gs
and
stos
push
add
add
mov
mov
shr
jo
or
push
(bad)
ja
inc
cmp
and
cld
dec
fs
inc
sbb
mov
les
mov
lods
jo
cld
loopne
ss
or
jmp
loopne
inc
inc
xor
add
add
cmps
xchg
xchg
int3
and
or
pop
inc
mov
(bad)
mov
mov
dec
out
mov
jle
je
bnd
arpl
dec
dec
push
xchg
push
cmp
xor
xor
inc
adc
add
inc
or
add
sbb
fidiv
or
sub
sahf
dec
push
outs
push
cmps
xchg
push
xchg
adc
dec
sub
or
or
push
imul
push
pop
fnstsw
shl
ret
and
ret
inc
stos
push
or
dec
into
mov
out
jb
cmps
or
es
and
mov
enter
gs
loop
ss
mov
xchg
sub
mov
ins
prefetch
es
inc
stos
dec
dec
and
dec
js
xor
push
push
cmp
cwde
je
xchg
or
and
fist
sub
jb
mov
xor
cli
stos
out
sbb
outs
push
inc
dec
test
mov
shl
dec
add
cmp
jne
cmp
push
(bad)
dec
add
or
scas
mov
dec
ins
bound
lock
ss
xor
or
rcl
inc
fs
xchg
sbb
or
(bad)
dec
ins
xchg
stos
in
ja
push
pop
push
imul
jns
lods
pop
jo
cmps
(bad)
(bad)
imul
inc
and
rol
repnz
cmp
test
push
xor
pop
push
dec
test
push
sbb
xor
push
push
mov
mov
js
dec
xchg
fadd
dec
xchg
adc
sbb
sar
ret
pusha
sub
nop
fs
cwde
adc
enter
cmps
gs
je
push
xor
dec
into
push
push
mov
jmp
jb
popf
and
loopne
ss
dec
push
mov
clc
fcom
cmp
movs
dec
loopne
inc
xchg
push
inc
in
xor
in
loopne
ss
cdq
push
stos
inc
in
pop
or
push
jo
mov
call
enter
push
pusha
aad
mov
mov
xchg
jb
retf
or
out
xchg
and
out
(bad)
popa
push
mov
cmp
cmp
icebp
dec
loopne
xor
jne
fmul
and
add
adc
int3
and
imul
fs
call
and
dec
aaa
jo
sub
jo
bound
xor
inc
pushf
mov
xor
cli
add
fs
cs
push
mov
ss
pop
fwait
add
add
scas
xchg
push
dec
ret
xchg
dec
cwde
xchg
inc
inc
xor
imul
push
or
xchg
jb
pop
jbe
sbb
test
jbe
adc
and
push
mov
xor
fiadd
pusha
cli
movs
aam
xor
push
adc
cld
push
sub
fs
push
dec
test
sub
pop
push
or
dec
jp
inc
mov
outs
xor
pop
loopne
jmp
pop
cmp
mov
movs
(bad)
jns
pop
add
test
or
or
xchg
xor
or
inc
(bad)
call
mov
xor
inc
outs
or
mov
mov
add
xchg
rcl
call
jbe
fdiv
mov
scas
dec
out
jo
adc
push
jle
sub
cs
into
adc
add
push
(bad)
push
pusha
or
ss
mov
push
inc
push
pop
inc
dec
dec
adc
cmp
js
mov
int
adc
fisub
outs
adc
call
bound
xor
inc
je
add
add
push
cdq
mov
outs
inc
test
aaa
xchg
jbe
arpl
sbb
xchg
loop
add
bound
xor
push
xchg
(bad)
bound
push
mov
xchg
loopne
inc
inc
aam
adc
inc
jne
push
dec
push
or
imul
out
data16
add
push
xor
jo
mov
imul
sub
out
into
add
addr16
sub
pop
and
xor
cwde
sub
inc
sbb
repnz
inc
inc
scas
xchg
add
xor
sbb
dec
scas
mov
and
mov
rol
add
jge
lods
and
jo
inc
aaa
fs
inc
lds
lods
inc
les
mov
and
dec
add
test
push
xchg
mov
jae
push
inc
retf
add
push
cs
push
cmp
mov
ss
adc
stos
fs
repnz
call
test
xor
add
inc
adc
mov
retf
push
xchg
pop
out
xor
add
mov
popa
adc
add
out
inc
push
ins
movs
and
arpl
jne
push
cmp
add
imul
jne
adc
mov
dec
or
mov
gs
in
pop
jbe
sbb
pushf
cmp
mov
cdq
cld
mov
dec
add
push
dec
fdiv
popa
add
adc
push
ja
add
bound
pop
outs
pop
push
fldenv
push
addr16
(bad)
clc
cmp
test
xor
fwait
jo
or
into
jp
jp
test
call
cld
mov
sub
pop
mov
push
mov
inc
dec
jae
bound
push
and
arpl
sti
and
cmp
shl
dec
xor
cs
jae
jp
mov
shl
push
inc
push
cmp
ss
pop
sub
xor
add
sub
gs
cld
les
mov
ja
ins
cli
in
jne
inc
inc
mov
bound
xchg
add
add
add
in
dec
mov
xor
and
mov
mov
mov
add
inc
movs
gs
inc
shl
les
mov
pusha
dec
xor
or
pop
ss
test
cmp
add
outs
push
and
cld
mov
fmul
push
bnd
pushf
push
lock
inc
push
es
add
adc
pop
add
xor
inc
loopne
adc
push
push
dec
dec
inc
out
push
adc
mov
mul
ror
xor
jns
jns
ins
fdiv
or
test
stos
and
push
mov
(bad)
push
ror
mov
push
dec
test
fcom
clc
inc
mov
xor
fidiv
dec
push
fidiv
cmp
sub
dec
cmp
inc
add
push
adc
cmp
mov
push
cs
mov
sub
mov
push
dec
add
test
fs
xchg
dec
xchg
loope
repnz
adc
xchg
mov
jmp
hlt
dec
aaa
inc
xor
dec
dec
mov
hlt
ins
int3
xchg
jp
sub
loope
mov
add
sub
inc
shr
jbe
inc
adc
fcom
push
jo
sub
clc
leave
sub
inc
fcom
cmps
(bad)
inc
mov
inc
inc
inc
retf
pusha
(bad)
dec
outs
js
inc
xchg
ja
mov
push
dec
popa
add
xor
outs
addr16
push
test
push
adc
push
outs
push
pop
xchg
stos
xchg
add
clc
push
or
xor
push
push
xor
xor
or
mov
ret
cli
dec
imul
push
rol
push
push
inc
add
nop
mov
fs
add
xchg
or
push
call
lock
push
inc
and
test
call
je
or
adc
les
add
push
mov
xchg
scas
mov
ficom
push
ror
jbe
push
mov
les
retf
out
mov
dec
enter
xchg
arpl
dec
pop
adc
lods
adc
and
fadd
add
das
push
inc
xor
push
jo
inc
dec
inc
fs
cli
mov
add
add
call
mov
push
cmp
ret
add
jno
rcr
pop
int
mov
and
fisubr
or
jno
dec
ret
pusha
add
and
call
dec
and
data16
jne
dec
mov
mov
cs
or
push
dec
xor
enter
and
sahf
xor
pop
inc
inc
addr16
inc
adc
js
inc
sbb
jp
xor
adc
or
mov
ss
fs
call
push
adc
ss
inc
inc
gs
outs
pop
inc
add
mov
rcl
test
fs
fdivr
and
push
clc
xor
sti
add
dec
cmp
inc
mov
es
loop
(bad)
bound
ja
or
push
mov
dec
dec
rcl
push
push
in
push
bound
push
arpl
(bad)
dec
jp
jo
sub
repnz
dec
jp
or
adc
retf
fs
loopne
cmp
xor
js
inc
mov
push
mov
inc
cs
mov
inc
fadd
movs
pop
scas
push
add
fs
addr16
mov
adc
(bad)
inc
aam
pop
push
add
jno
pop
adc
adc
out
or
dec
js
sbb
add
mov
xchg
nop
push
jo
push
pop
ins
add
ja
dec
jns
test
add
shr
add
lea
push
div
push
(bad)
jns
test
xchg
ss
loop
inc
cmp
je
push
push
pop
ins
jo
fadd
loopne
je
mov
stos
and
inc
pop
xchg
shl
je
adc
(bad)
pop
aam
imul
xor
stos
adc
test
ins
and
cmp
pop
or
cs
imul
movs
cmps
push
or
pop
and
push
test
cs
inc
sub
inc
addr16
cmps
outs
or
mov
dec
push
and
push
push
inc
jo
dec
jle
add
in
outs
jo
fdiv
xor
gs
sub
pop
add
xchg
push
stos
pop
jb
or
inc
leave
mov
xor
add
or
cmp
jb
into
inc
or
(bad)
pop
pop
test
cli
push
or
popa
in
xor
xor
int3
cmp
shl
cmp
cmp
sub
and
push
imul
mov
inc
test
mov
jnp
xor
or
fcmovnbe
push
call
push
push
data16
xchg
cmp
sub
dec
push
dec
adc
inc
sub
pop
scas
ja
ret
sub
mov
movs
and
push
adc
xor
mov
dec
push
inc
sub
jae
mov
outs
bound
mov
(bad)
cmp
push
hlt
push
out
js
jb
inc
shr
(bad)
jo
or
mov
call
mov
inc
pop
gs
cvtps2pi
pop
push
push
adc
dec
xchg
dec
cmp
aaa
or
mov
xor
loopne
mov
dec
es
adc
mov
push
inc
push
dec
mov
inc
dec
add
jb
push
lods
stos
xor
push
hlt
arpl
add
test
dec
inc
adc
maxps
jmp
stos
sbb
xor
fs
inc
popa
mov
add
adc
(bad)
mov
dec
dec
pop
adc
fidiv
push
pop
repnz
dec
xchg
inc
movs
mov
sbb
and
cwde
shl
in
pop
test
outs
ja
pop
aam
ror
dec
ins
pop
push
or
sub
jno
pop
or
add
push
and
push
ins
xor
inc
shl
mov
xor
retf
cmp
bound
loopne
mov
xor
mov
and
adc
jbe
aaa
push
and
and
add
dec
add
xchg
(bad)
adc
ins
dec
add
add
push
inc
adc
rcl
(bad)
xor
or
dec
and
dec
dec
gs
xor
aaa
adc
(bad)
push
jns
aaa
stos
push
push
inc
cs
push
xchg
lods
fdiv
push
les
data16
ss
mov
cmp
test
sbb
xchg
jl
or
inc
inc
inc
mov
mov
es
ins
fisub
cmp
ins
push
xchg
js
add
cmp
xor
adc
mov
mov
call
mov
cmp
push
je
push
loop
bound
cmp
add
dec
add
fcom
movs
cmp
aad
into
jae
in
pusha
daa
test
dec
or
xchg
xor
mov
xor
push
xchg
pop
add
sub
out
sbb
fs
call
mov
scas
adc
out
fs
jo
imul
mov
cs
movs
mov
push
xor
and
sbb
and
ss
sub
sub
mov
sbb
or
dec
push
add
jae
xchg
push
adc
(bad)
mov
or
popf
loopne
gs
dec
inc
mov
inc
loop
call
push
pop
jns
popa
add
push
xchg
mov
loope
outs
inc
ins
dec
inc
sub
adc
and
and
pusha
and
pop
inc
int3
lock
add
test
inc
xchg
test
cmp
pop
loop
inc
add
imul
sbb
jp
adc
cmp
xchg
mov
cmps
mov
jl
cmp
add
add
rcr
mov
push
or
inc
push
sbb
dec
ins
retf
mov
adc
enter
mov
call
movs
pushf
push
or
or
and
sub
cmps
push
adc
push
shl
adc
inc
xchg
loope
add
leave
rcl
loopne
sbb
(bad)
and
data16
or
dec
inc
add
and
cmp
inc
dec
push
xor
out
pop
ins
dec
popa
ss
outs
aaa
sub
pop
jp
rol
ror
inc
push
and
pop
mov
inc
mov
inc
shl
inc
jb
xchg
mov
dec
mov
inc
inc
xor
adc
ja
push
push
add
sbb
popa
aad
leave
push
push
push
ss
cwde
inc
cmp
xchg
sbb
push
rcl
sbb
xchg
pop
lods
mov
imul
sahf
inc
popa
test
cmp
push
rcl
xor
inc
push
sbb
push
push
push
push
adc
or
in
xor
mov
rcl
push
xchg
popa
ds
lea
movs
inc
rcl
jne
or
(bad)
jns
or
inc
pop
and
or
push
stos
js
bound
mov
fsub
or
loopne
push
or
push
ss
fdivr
dec
nop
xchg
or
sahf
add
clc
dec
pusha
je
or
stos
jae
imul
rol
mov
push
cmp
pushf
ins
add
sub
add
push
xor
and
xchg
jo
mov
inc
mov
addr16
or
fs
enter
sbb
add
xor
xor
and
push
or
outs
fimul
adc
je
adc
test
push
jl
pop
mov
xor
add
cmp
leave
dec
movs
add
nop
pop
dec
ja
pop
xchg
sub
and
dec
adc
push
push
push
cmps
inc
dec
sbb
sbb
imul
imul
dec
mov
push
push
push
and
adc
mov
sub
inc
fidiv
leave
ss
xchg
push
ins
shl
outs
push
lods
push
inc
push
je
jne
dec
fs
push
xchg
add
cs
adc
or
dec
mov
aad
inc
and
arpl
dec
dec
add
fiadd
xchg
xchg
mov
gs
xor
ins
bound
dec
jo
popa
push
and
adc
cdq
push
sbb
inc
dec
xor
push
mov
fs
xchg
imul
ret
stos
mov
or
dec
dec
hlt
out
inc
test
push
js
scas
iret
and
jge
popa
xor
inc
clc
inc
add
push
sub
add
mov
test
pusha
cdq
pop
in
or
push
dec
cmp
inc
(bad)
mov
dec
mov
pusha
popa
dec
outs
jo
adc
cmps
gs
or
mov
cmp
ins
ficom
sub
adc
test
ins
ss
or
add
cs
sbb
jne
pop
adc
push
cwde
xor
dec
retf
xor
add
(bad)
adc
fidivr
cld
inc
push
pop
add
imul
add
es
cld
xor
dec
adc
mov
sbb
xor
dec
push
lods
adc
out
pop
fimul
ins
cmp
add
lods
aaa
inc
loopne
xor
lock
gs
mov
add
cmp
xchg
arpl
inc
push
inc
xor
jo
daa
and
fadd
push
test
xor
mov
mov
ficomp
ja
xor
ja
aaa
dec
mov
xchg
push
mov
sub
push
in
mov
outs
inc
push
sbb
(bad)
push
xor
sub
push
aam
call
sbb
lock
add
movs
mov
ss
dec
xor
mov
pop
mov
xchg
mov
push
mov
ficomp
or
jmp
add
inc
inc
jae
push
adc
xor
push
and
mov
push
clc
xor
push
inc
xchg
loopne
pop
dec
adc
mov
pop
je
loop
inc
and
push
pop
add
or
inc
xor
jbe
adc
add
xor
push
mov
xchg
or
mov
or
call
sub
(bad)
rcl
jmp
jno
jp
inc
add
fs
inc
fiadd
pop
dec
cmp
push
push
push
ins
cmp
and
sbb
lods
pop
clc
cs
arpl
pop
and
inc
and
fs
adc
adc
push
inc
jo
movs
je
inc
pusha
pop
pop
inc
xor
adc
sbb
xor
pusha
adc
dec
imul
and
sub
cmp
movs
sbb
sbb
add
inc
mov
jmp
adc
jae
push
mov
clc
push
inc
xor
jmp
mov
imul
add
mov
gs
fmul
aaa
jne
dec
mov
outs
xor
pop
pop
xor
jp
xor
test
nop
push
outs
test
xor
mov
push
sbb
push
jmp
rcr
test
test
pusha
push
scas
aaa
push
jle
adc
aam
dec
add
shr
push
or
mov
cld
sahf
ss
loopne
jle
bound
push
dec
ss
call
inc
cmps
repnz
mov
ins
xor
or
push
inc
popa
inc
and
mov
or
jb
xor
data16
adc
jae
or
adc
push
dec
in
push
push
xor
and
add
mov
push
sub
mov
xchg
sub
mov
cmp
xor
pusha
adc
xor
(bad)
xor
mov
clc
inc
xor
dec
adc
push
or
inc
(bad)
je
cmp
push
adc
ror
dec
push
jne
push
adc
cmp
mov
push
test
test
outs
xor
xor
mov
mov
jb
push
jae
inc
outs
cld
pop
xor
jbe
mov
mov
movs
mov
enter
push
movs
xchg
ss
imul
fs
and
cmp
or
inc
fs
es
dec
push
xchg
xchg
sub
imul
jmp
sbb
retf
add
lods
inc
ret
pop
adc
sub
xor
jno
and
cld
inc
sub
dec
inc
loop
xor
mov
retf
or
leave
push
test
pop
push
arpl
xor
fcom
inc
jae
mov
mov
push
push
and
lods
dec
fadd
test
xor
push
push
xor
inc
and
push
mov
mov
movs
mov
and
xor
sub
cmps
in
fisubr
dec
lock
outs
ss
inc
dec
inc
imul
push
xchg
add
test
jb
imul
xchg
mov
ret
inc
or
jne
mov
push
fwait
inc
ret
and
mov
enter
int3
scas
push
loop
add
and
out
sbb
cmp
push
mov
mov
sub
aam
test
ins
lods
adc
add
fadd
inc
push
push
in
push
stos
pop
stos
xor
jle
dec
push
sub
xchg
mov
movs
pushf
sub
inc
jecxz
adc
push
push
pusha
fs
pop
sub
ret
bound
xor
pop
or
mov
stos
inc
cmp
js
push
add
and
retf
adc
dec
push
leave
js
xchg
xor
js
test
je
pushf
sub
mov
xor
(bad)
je
adc
inc
push
adc
inc
and
and
add
inc
xor
pusha
mov
inc
push
cmp
je
push
test
mov
inc
imul
cdq
arpl
inc
push
inc
inc
xor
retf
adc
xor
pop
push
fsubr
jp
inc
inc
dec
push
and
push
shr
push
add
sbb
sub
gs
mov
and
xchg
add
lods
je
jns
nop
add
bound
or
bound
jae
cld
ins
dec
adc
mov
addr16
jns
push
xor
nop
cmp
inc
cmp
imul
push
inc
dec
clc
pop
dec
jbe
pusha
popf
inc
jne
data16
push
and
or
fsub
add
inc
int3
xor
scas
sub
push
or
jbe
imul
and
or
push
sbb
mov
and
xchg
sub
cmp
mov
pop
pop
stos
aaa
push
test
test
ss
pop
inc
xchg
or
cld
ins
sub
sbb
cmps
sbb
jp
aad
inc
push
ins
mov
add
and
stos
push
retf
adc
mov
call
push
imul
cmp
inc
mov
mov
inc
or
cmp
jbe
inc
xor
push
inc
mov
sub
arpl
mov
or
add
popa
bound
xchg
pusha
or
adc
(bad)
movs
arpl
xor
leave
pusha
push
push
imul
push
dec
sub
push
and
cld
aaa
add
(bad)
or
adc
outs
(bad)
pusha
and
xor
xchg
add
xor
add
mov
inc
and
add
dec
cmps
ds
or
test
leave
and
jo
mov
mov
sbb
(bad)
and
push
inc
lock
rcl
sbb
repnz
inc
jo
in
xor
aaa
jp
or
or
or
repnz
stos
xor
sbb
sub
xor
xchg
inc
test
mov
int3
cmp
add
dec
inc
mov
ret
mov
cmp
add
test
ins
jb
aam
pop
cmp
ret
add
je
push
dec
lock
mov
xor
hlt
dec
push
sub
cmp
push
cwde
call
pop
ja
outs
ins
popa
jo
and
test
aas
push
xor
adc
cs
cmp
sbb
xor
inc
bound
adc
rol
rcl
mov
inc
xor
test
or
xor
push
cs
dec
add
mov
imul
aaa
add
mov
dec
add
pop
inc
adc
push
inc
ret
ins
jae
inc
call
xchg
mov
mov
aad
push
fs
in
push
add
and
fs
test
test
or
xor
test
and
retf
and
push
les
push
inc
or
xor
mov
add
inc
or
test
add
inc
xor
and
inc
mov
popa
mov
inc
inc
inc
jle
inc
int3
mov
outs
mov
xor
inc
add
ins
jp
sub
add
mov
pusha
mov
cmp
xchg
dec
mov
aam
push
or
cdq
or
ss
cmps
call
mov
dec
ins
jae
adc
fadd
and
shl
xchg
test
fcomp
inc
imul
adc
fisubr
cs
add
aaa
xchg
dec
mov
mov
loopne
push
push
pop
and
inc
rcl
cmp
lods
sub
inc
jp
push
bound
add
js
inc
mov
inc
or
imul
inc
cmp
pusha
in
xchg
aam
ja
or
or
adc
mov
inc
jns
cmp
dec
inc
gs
es
xchg
(bad)
fs
xor
adc
lods
add
adc
mov
adc
movs
lea
mov
mov
jo
test
xor
call
call
dec
lea
pop
fs
pusha
xchg
adc
push
ins
xor
fidiv
(bad)
aad
add
hlt
xor
adc
add
jno
test
push
inc
adc
or
shl
add
in
popa
pushf
mov
push
retf
test
aam
push
js
push
adc
nop
push
dec
push
and
sub
outs
xor
xor
sub
call
jb
xor
pop
or
inc
pop
aaa
js
xor
push
mov
(bad)
jno
xchg
or
ins
mov
cmp
test
arpl
xor
movs
xchg
and
fsub
jae
nop
inc
sub
and
ss
xor
add
xor
or
mov
test
and
gs
add
in
push
pop
add
nop
xor
ret
mov
push
push
cmp
cwde
dec
xchg
call
pop
movs
sub
pop
(bad)
jle
sbb
or
push
mov
test
out
dec
arpl
dec
data16
and
and
add
sub
add
jne
ret
inc
push
out
fisub
jmp
imul
or
int3
or
out
jb
mov
test
push
add
outs
push
and
mov
jb
arpl
pop
pop
push
push
ins
or
push
add
adc
sbb
adc
movs
inc
lds
mov
cwde
push
fisubr
popa
or
clc
je
mov
dec
mov
dec
xchg
push
mov
adc
movs
sub
mov
push
sbb
dec
dec
es
adc
push
sbb
sub
xor
scas
ret
test
jne
outs
dec
add
and
les
add
push
mov
add
pop
push
stos
mov
mov
lods
push
jbe
inc
outs
push
mov
test
adc
push
es
add
push
xchg
add
addr16
xchg
outs
sbb
pop
dec
push
or
sub
mov
pop
into
js
stos
ins
mov
dec
xor
fisub
inc
add
je
pop
mov
je
mov
mov
outs
or
cwde
ja
push
outs
adc
add
data16
inc
mov
push
xor
retf
or
daa
add
xor
adc
cs
push
dec
repnz
test
and
imul
xor
add
dec
pop
adc
jo
cmp
ss
aam
or
sub
push
cwde
inc
ins
xchg
jle
inc
scas
push
push
cmp
lods
push
fdiv
push
dec
mov
xor
jne
test
push
push
cmp
push
push
cmps
mov
xor
ss
dec
xor
loopne
hlt
xchg
xchg
inc
push
call
data16
sub
sbb
popa
dec
dec
adc
dec
push
jbe
push
jp
push
les
push
pop
dec
jno
inc
adc
dec
mov
test
nop
mov
xor
pop
adc
mov
inc
adc
pop
popa
cdq
adc
sub
imul
nop
fimul
aad
out
push
dec
push
push
xor
and
jp
test
(bad)
jp
aaa
push
inc
jmp
jae
mov
xor
inc
jae
mov
mov
xor
add
add
jne
aad
inc
sub
adc
xor
ret
mov
les
dec
pop
loopne
inc
sbb
les
dec
adc
out
xor
jl
rcl
push
jo
leave
adc
shr
dec
aaa
adc
xor
mov
mov
xchg
jne
mov
arpl
or
add
jbe
and
dec
push
adc
movs
pop
dec
ins
sub
pop
call
sub
fiadd
inc
movs
xor
or
inc
jbe
add
outs
pop
lods
dec
xor
push
jns
call
dec
inc
imul
push
mov
and
adc
push
or
push
jno
cwde
clc
mov
bound
push
or
mov
mov
dec
ret
mov
ss
sub
cwde
cmp
mov
add
push
add
or
sub
scas
bound
inc
inc
add
sbb
push
push
push
cwde
sbb
pop
fwait
inc
ins
xchg
adc
bound
mov
sbb
jbe
cs
xchg
les
es
adc
imul
adc
js
retf
add
mov
lock
xchg
dec
sahf
bound
inc
jne
push
push
sar
ja
push
push
bound
gs
mov
jb
je
jo
and
fcom
push
mov
mov
shr
cmp
jns
push
inc
je
nop
or
jmp
cli
scas
dec
push
add
or
push
ins
sub
mov
inc
mov
jecxz
ins
popa
bound
mov
(bad)
test
mov
nop
jb
mov
(bad)
addr16
cmp
in
or
push
addr16
inc
cmp
adc
dec
pop
and
ror
cmp
push
or
outs
bound
dec
pop
xor
inc
mov
sbb
arpl
sbb
dec
pop
or
mov
push
jne
xchg
add
push
jo
push
fidivr
out
inc
outs
adc
jb
xor
adc
dec
mov
outs
bound
call
imul
sub
and
ins
hlt
sub
dec
in
enter
mov
dec
ret
and
and
or
enter
sbb
gs
nop
inc
add
mov
dec
pop
test
outs
push
dec
dec
imul
xchg
adc
sub
and
inc
loopne
adc
inc
mov
add
cmp
bound
movs
mov
les
mov
mov
into
pop
push
ins
ret
cmp
jae
jne
jb
sar
xor
(bad)
imul
dec
xor
(bad)
(bad)
push
inc
into
bound
inc
adc
add
shl
loopne
mov
jno
shl
(bad)
fisubr
mov
jmp
js
cmp
fdiv
or
jno
pusha
ins
shl
mov
je
inc
inc
ret
imul
dec
mov
addr16
push
inc
jno
bound
adc
data16
push
pusha
jb
add
add
mov
push
bound
inc
dec
mov
cmps
and
xor
inc
lods
test
outs
pop
je
rcl
ds
mov
inc
jne
xchg
ret
je
fsub
sub
sub
sub
mov
ins
div
dec
cmps
mov
adc
and
imul
retf
sbb
aaa
fst
int3
test
push
test
add
nop
xor
push
jo
push
jp
or
push
test
ret
gs
je
or
mov
ins
retf
jb
xchg
lods
adc
cli
jp
dec
sub
outs
xor
xchg
shr
loop
pop
cdq
add
mov
loopne
push
test
loopne
dec
cdq
les
ins
inc
adc
push
scas
add
sub
outs
and
mov
push
fs
adc
push
dec
js
sub
mov
in
push
or
bound
ss
outs
arpl
hlt
ret
pop
movs
aaa
dec
mov
xor
push
add
inc
sub
aaa
inc
call
icebp
(bad)
push
ds
out
mov
mov
mov
js
dec
adc
xchg
and
leave
and
add
pop
cwde
retf
and
mov
loop
dec
xor
push
push
mov
xchg
inc
ja
push
loopne
gs
xchg
lods
js
cmc
or
mov
retf
mov
sub
push
out
adc
inc
js
fs
and
cld
ret
jbe
add
sub
and
cmp
push
test
in
dec
pop
adc
or
outs
sbb
jle
xor
adc
xchg
jbe
pop
xor
add
adc
fmul
dec
jo
div
inc
aam
adc
add
push
dec
ret
add
dec
movs
shl
inc
bound
or
adc
inc
fsub
fdiv
into
xor
add
sub
stos
test
mov
or
inc
or
push
cld
xchg
or
(bad)
xchg
ss
mov
je
adc
or
sbb
adc
jp
dec
test
or
xor
mov
add
jbe
cmp
pop
ret
add
dec
or
push
cwde
inc
cwde
cmp
dec
call
xor
and
cs
push
dec
dec
add
jl
sub
cli
fs
or
sub
pusha
xchg
stos
or
ins
cdq
stos
add
mov
push
pop
fild
push
cmp
push
jp
pop
stos
jo
jo
mov
inc
and
xor
pop
xor
mov
outs
xor
xor
mov
jns
movs
adc
je
push
cwde
jl
or
out
clc
retf
inc
xor
mov
data16
js
xchg
xchg
inc
nop
adc
inc
inc
xchg
inc
ds
mov
xchg
sbb
mov
jns
js
inc
mov
pop
push
mov
xchg
imul
ins
pop
adc
jo
jo
mov
gs
xor
inc
inc
ret
movs
adc
push
inc
xor
cmps
xor
push
jb
add
push
lods
jo
ins
clc
inc
js
push
add
mov
inc
in
rcl
sbb
lock
aaa
push
mov
dec
sahf
test
(bad)
push
rol
jo
loopne
push
push
cmps
mov
push
cmp
adc
hlt
xor
push
add
add
adc
inc
push
das
sbb
sbb
mov
add
ret
out
push
cdq
jp
push
xor
inc
xor
popa
and
jb
cmp
shl
jae
jo
mov
push
push
jp
push
fimul
test
int
stos
mov
push
bound
jb
sbb
push
push
inc
xor
inc
imul
sbb
dec
push
adc
mov
jne
push
mov
dec
inc
ds
push
pushf
inc
push
in
inc
dec
fs
xor
mov
ins
add
xor
push
and
repnz
mov
add
les
(bad)
pusha
test
or
or
or
inc
add
outs
shl
xor
clc
mov
add
push
ins
xor
sub
dec
(bad)
stos
mov
sbb
mov
mov
mov
data16
dec
je
pushf
push
xor
gs
push
addr16
pop
ins
inc
inc
pop
sbb
rol
or
ss
mov
jo
push
push
dec
dec
enter
ss
sub
push
outs
je
and
dec
and
bound
add
xchg
xchg
pusha
adc
data16
and
adc
rcr
push
dec
push
push
inc
inc
inc
mov
ror
xor
lea
cmps
jo
data16
adc
push
js
push
cmps
test
loope
sub
and
or
dec
dec
arpl
mov
inc
loopne
cmp
adc
ss
dec
jno
add
xor
mov
stos
gs
inc
sub
mov
jno
dec
call
cmp
int
fisttp
push
rol
xchg
shl
adc
fidivr
imul
pop
add
ins
ins
inc
pop
xor
add
adc
adc
movs
inc
push
push
dec
sbb
ret
nop
int
adc
xchg
scas
xchg
dec
and
push
shl
push
jbe
jp
and
ret
fs
push
in
push
jbe
xor
outs
push
add
or
pop
test
push
mov
mov
add
arpl
sbb
inc
test
out
inc
sub
data16
gs
push
jo
retf
xor
ins
push
sub
xor
ror
xchg
pop
dec
int3
bound
or
xor
inc
enter
dec
inc
inc
gs
and
sbb
sbb
push
pop
or
jne
mov
mov
movs
fmul
inc
mov
inc
xor
inc
lods
bound
fs
and
rcl
rcl
inc
popa
dec
or
xchg
pop
pop
and
jb
call
es
arpl
bound
push
pushf
mov
push
adc
or
push
call
ret
mov
idiv
es
pusha
dec
dec
jo
test
push
push
sbb
lock
inc
inc
add
or
repnz
inc
nop
sub
inc
lods
xor
mov
xor
dec
cwde
or
pop
add
or
and
mov
or
and
and
push
push
dec
dec
push
push
data16
(bad)
int3
push
pop
sub
or
arpl
push
jmp
inc
push
stos
test
ins
outs
sbb
sub
or
push
mov
clc
add
xchg
movs
outs
pop
sub
lods
dec
sbb
jbe
pop
push
imul
sub
(bad)
dec
xchg
pusha
mov
ds
add
mov
or
inc
jbe
push
and
sub
(bad)
and
push
cwde
mov
push
or
adc
mov
in
mov
retf
dec
or
mov
jb
cmps
dec
test
sub
es
adc
push
mov
or
jae
pop
inc
xchg
test
pop
push
adc
test
and
inc
je
dec
add
or
add
sar
mov
dec
add
mov
outs
dec
or
and
ins
pop
adc
add
dec
imul
mov
xor
or
adc
js
sbb
retf
popa
shl
jne
cmp
xchg
adc
inc
xchg
mov
inc
fs
push
les
int3
gs
data16
xor
inc
cmp
xchg
push
push
lock
sub
(bad)
mov
mov
dec
mov
ret
add
xor
mov
sub
jns
add
dec
clc
es
and
xor
movs
xchg
and
ins
push
mov
pop
push
data16
push
jp
jb
aad
test
xor
push
adc
push
push
add
cmps
pop
fcomp
ret
dec
inc
xor
jmp
push
push
push
fisubr
sbb
je
fs
shl
scas
xchg
retf
jp
adc
loop
test
pop
push
add
push
cli
imul
pop
add
mov
push
sbb
dec
inc
test
dec
xor
push
or
add
rcl
and
bnd
xor
inc
xchg
mov
fs
mov
push
fsubr
jno
and
or
outs
movs
xor
pop
push
rol
loop
xor
sub
pop
shl
push
adc
call
out
mov
mov
xchg
mov
push
gs
push
dec
scas
sub
pop
xchg
mov
or
push
add
dec
xor
mov
mov
mov
mov
inc
add
add
sub
repnz
dec
pop
push
jp
sbb
sub
arpl
sbb
inc
adc
test
rcr
jp
add
outs
sub
mov
pusha
adc
add
ins
cmps
and
xor
aaa
xor
aaa
popa
push
rcr
or
add
and
push
or
mov
inc
mov
ins
push
mov
sub
sub
dec
adc
les
or
out
add
xor
rcl
cwde
xchg
test
mov
mov
inc
or
nop
inc
xchg
inc
adc
dec
adc
stos
stos
or
dec
shl
inc
mov
je
outs
jmp
and
push
add
jns
cwde
pushf
xchg
or
jbe
mov
add
fidivr
mov
fist
sbb
stos
add
mov
adc
je
inc
xor
add
ret
jo
js
data16
nop
mov
ss
and
xchg
mov
xor
loopne
mov
xor
or
test
fs
jno
dec
push
es
and
js
sub
push
test
ds
test
jl
ss
stos
sub
xor
xor
jo
dec
xor
adc
and
add
or
fs
pop
aaa
ins
jno
mov
push
movs
push
push
jp
xchg
ins
inc
and
dec
loope
push
mov
push
xor
out
or
xor
xchg
push
in
cmc
aam
clc
xor
sub
xchg
je
add
push
adc
hlt
and
aaa
add
mov
cmp
daa
add
inc
dec
add
push
xchg
into
dec
call
bound
jb
int3
add
adc
xor
imul
adc
adc
push
out
jae
jno
jo
push
cmp
push
and
mov
ja
jbe
dec
mov
mov
outs
mov
dec
jo
bound
sub
cwde
add
add
add
pop
xor
fidiv
xchg
nop
pop
xchg
sbb
dec
cwde
dec
and
mov
cmp
ja
or
dec
into
aam
ja
ss
adc
add
or
xor
xor
adc
mov
push
add
xor
test
sbb
rcl
bound
push
or
cmp
in
fwait
pushf
jmp
dec
xor
push
ins
dec
inc
bound
jmp
gs
or
inc
sbb
int3
pop
jbe
and
mov
outs
add
xchg
mov
ss
stos
push
cmp
or
jo
cmp
(bad)
push
mov
int3
dec
rol
add
outs
jbe
dec
fs
cli
aaa
mov
data16
push
xchg
dec
mov
inc
push
xor
lods
sub
loopne
inc
(bad)
stos
hlt
retf
sbb
jno
inc
sub
fisubr
adc
cmps
xor
push
xor
scas
adc
inc
or
cmp
and
push
or
xchg
mov
xchg
and
or
sbb
fidivr
aad
dec
or
or
inc
jno
inc
fs
dec
push
push
xchg
and
mov
inc
xchg
imul
add
shl
loope
in
sbb
fmul
dec
push
push
xchg
cmps
mov
add
xor
mov
test
ror
pop
mov
mov
push
xor
cmp
xor
inc
add
adc
push
call
mov
add
push
mov
xlat
imul
add
cmp
push
outs
test
imul
addr16
aaa
call
fs
ds
retf
xchg
sbb
inc
xor
mov
popa
inc
loopne
and
inc
test
adc
sub
or
fs
cmc
or
pop
pop
aaa
dec
push
push
lods
addr16
push
es
jp
sub
mov
push
ds
or
mov
fwait
mov
sbb
inc
add
adc
bound
js
add
mov
push
sbb
pop
adc
sbb
outs
sub
push
push
dec
dec
dec
cmp
push
xchg
mov
outs
(bad)
ins
xor
xchg
inc
mov
bound
mov
dec
test
xor
push
fs
xor
pop
push
dec
jns
and
jo
call
push
cmp
imul
imul
mov
into
bound
cmps
in
call
xchg
fcomp
inc
inc
dec
faddp
push
mov
xchg
aam
inc
add
xor
add
inc
push
(bad)
imul
mov
inc
add
ror
and
stos
inc
test
inc
fadd
push
sahf
ins
and
dec
ins
jl
inc
outs
push
dec
popa
mov
daa
xchg
pop
dec
fdiv
dec
dec
inc
mov
cmps
add
xchg
movs
xor
xor
(bad)
xor
adc
push
push
ret
mov
gs
js
sbb
sbb
call
les
add
xor
mov
jbe
xchg
xor
pop
xor
mov
xor
inc
push
add
cli
and
and
dec
and
add
adc
and
mov
cmp
or
or
push
sbb
fisub
add
hlt
addr16
or
push
fidiv
push
mov
and
je
pushf
add
add
jbe
lock
xor
aam
mov
sbb
adc
pop
push
dec
cmp
mov
mov
add
add
fadd
mov
test
mov
or
movs
movs
xor
inc
bound
outs
inc
push
push
push
enter
push
test
into
adc
pop
ins
push
adc
push
test
ds
sub
xchg
push
push
je
(bad)
push
or
test
jno
popa
jbe
test
es
dec
jle
add
retf
dec
xchg
mov
dec
adc
mov
inc
xor
mov
ja
pop
and
adc
sub
jne
xor
clc
mov
xor
stos
xor
mov
and
push
push
push
cmp
rcl
sbb
mov
push
mov
push
stos
data16
imul
fcom
adc
outs
ja
fcom
push
jbe
jmp
push
xor
push
cmp
data16
inc
inc
cmp
or
add
les
sbb
(bad)
outs
jbe
or
pushf
stos
inc
add
xor
sub
pop
fdiv
loopne
xor
or
xor
(bad)
mov
dec
pop
xor
sub
shl
and
mov
mov
push
inc
push
ins
jns
clc
dec
pop
jp
fsub
ds
dec
inc
lods
lods
xor
inc
stos
add
and
test
sahf
dec
test
imul
dec
dec
mov
mov
pop
sbb
add
adc
rcl
pop
inc
push
aam
mov
test
inc
inc
sub
xor
jb
mov
mov
dec
cmp
or
push
and
jle
sub
fs
inc
add
jae
lock
and
(bad)
cmps
adc
dec
mov
pop
stos
add
xor
xor
add
inc
push
enter
aam
dec
and
xor
xchg
mov
into
je
aam
mov
inc
xor
and
(bad)
retf
rcl
xor
call
inc
bound
jb
sub
push
enter
pop
data16
add
mov
dec
popa
or
add
sub
xchg
cmp
add
mov
test
xchg
cmps
push
adc
(bad)
push
push
push
xor
outs
mov
movs
dec
(bad)
mov
fsubr
cs
ins
or
inc
inc
sbb
sub
retf
loopne
addr16
push
xchg
jb
inc
add
mov
mov
xor
test
call
add
(bad)
addr16
outs
ret
and
inc
push
(bad)
sbb
push
cmp
xchg
sub
test
inc
inc
sub
and
hlt
xchg
dec
ss
test
push
aam
adc
inc
mov
es
cmp
jbe
data16
or
cmp
push
inc
(bad)
or
xor
xor
add
in
jns
push
aad
push
add
jbe
in
add
push
mov
jle
jb
xchg
add
xchg
push
jmp
je
js
and
add
je
and
xor
rol
pop
jbe
push
xor
dec
and
mov
sub
inc
xor
push
sbb
jle
inc
inc
into
dec
pusha
xor
and
xchg
or
fwait
xor
or
mov
jbe
or
xchg
push
dec
push
pop
or
ret
and
je
add
dec
clc
push
push
dec
or
dec
add
cld
ins
loopne
xor
cmp
jmp
pop
ins
push
add
call
pop
out
push
sub
fs
test
popa
mov
push
adc
sahf
sbb
push
push
push
adc
push
ret
sub
xchg
ret
and
test
adc
push
mov
dec
retfw
ss
push
adc
shr
jno
movs
movs
test
add
and
in
add
enter
outs
push
inc
jbe
dec
fbstp
or
aaa
dec
jae
push
pop
mov
pop
push
push
xor
push
lods
push
mov
adc
mov
inc
inc
fs
add
cs
dec
call
movs
adc
and
inc
mov
sub
mov
dec
jp
add
mov
or
mov
(bad)
test
mov
mov
stos
cs
and
push
inc
popa
es
or
sub
or
mov
dec
pop
add
xor
(bad)
mov
(bad)
or
inc
(bad)
scas
dec
or
xchg
shl
adc
jb
push
cmp
jae
push
adc
je
bound
imul
inc
inc
jns
fisubr
ins
data16
jo
xor
jmp
push
bound
imul
sbb
xor
test
cs
inc
pop
inc
movs
pop
dec
es
imul
xor
je
cmp
pushf
mov
add
cdq
ins
shl
jae
rol
aaa
xor
sub
ror
rol
inc
push
inc
gs
dec
inc
sub
xchg
js
and
jne
mov
mov
or
push
fs
inc
ja
xchg
mov
push
push
lock
ins
mov
imul
push
fs
dec
jbe
xor
adc
dec
mov
fsubr
dec
jp
pop
and
addr16
push
mov
inc
pusha
test
xor
stos
push
inc
mov
mov
xor
add
or
js
hlt
push
mov
sbb
add
sub
outs
sbb
xchg
xor
jo
rcl
or
push
xor
cmp
adc
fiadd
or
retf
dec
adc
dec
ret
or
or
cmps
inc
xor
push
xor
push
xchg
outs
dec
jno
loope
call
cwde
add
inc
pop
stos
cdq
ins
or
inc
xor
xor
mov
bound
popa
mov
adc
adc
inc
xor
adc
mov
push
mov
dec
jae
xor
in
call
jp
jbe
push
push
xor
jne
jo
sbb
add
xor
les
add
dec
call
inc
add
jp
and
xchg
jle
inc
push
dec
xchg
xchg
cwde
push
ss
pusha
dec
data16
cmps
sub
cmp
xlat
rcr
ficom
push
sbb
xor
sub
sub
mov
dec
or
mov
xor
jb
push
cwde
bound
pop
or
js
test
jmp
outs
cmp
popa
push
cwde
sbb
inc
xchg
push
cmp
and
mov
rcl
push
imul
xor
mov
es
jns
adc
adc
mov
loopne
xchg
or
push
xchg
xchg
dec
cli
sub
inc
jb
sbb
outs
sub
push
add
jb
pop
push
jecxz
loopne
push
jne
jne
xor
dec
sbb
and
cld
cmp
cs
(bad)
cld
push
cmp
jne
push
(bad)
int3
sub
xor
ss
sub
ins
arpl
in
pop
add
xor
mov
jp
xor
addr16
mov
jp
imul
jo
in
pusha
mov
pusha
outs
bound
inc
fsubr
popaw
xor
mov
pop
and
jp
or
shr
push
sbb
in
push
inc
add
loop
cwde
mov
mov
inc
and
(bad)
xor
push
xor
int
or
inc
fcmovu
pop
inc
adc
arpl
and
or
inc
dec
nop
xor
mov
into
push
sbb
sub
inc
inc
dec
cmps
push
cmp
inc
dec
push
cmp
dec
cmp
add
es
movs
sbb
adc
popa
jp
test
fs
mov
push
shr
loopne
push
xor
jge
outs
push
sbb
outs
adc
and
jne
push
sbb
cmps
sub
add
mov
jne
or
push
je
js
fiadd
retf
xor
dec
fwait
int3
ins
out
ficom
pop
or
ins
mov
push
int3
mov
outs
imul
push
cmps
jae
leave
mov
add
xchg
adc
sub
adc
es
daa
mov
push
push
push
push
push
add
push
inc
or
pop
xor
or
push
cs
jbe
or
adc
sub
movs
xchg
mov
popa
mov
or
ss
inc
adc
xchg
retf
push
sbb
pop
imul
adc
dec
cmp
xchg
test
mov
mov
or
fs
pop
push
scas
add
push
hlt
mov
jb
add
push
xchg
add
stos
dec
imul
daa
mov
(bad)
cmp
adc
or
sub
pusha
fadd
pop
dec
jb
sahf
rol
add
outs
xor
(bad)
(bad)
aas
or
xor
jbe
add
xor
retf
jp
mov
sbb
enter
mov
stos
xor
cmp
outs
cmps
push
pop
imul
sahf
xchg
push
bound
fs
add
fcom
push
data16
inc
push
push
call
xor
mov
push
push
add
or
jae
xchg
retf
test
fadd
imul
shl
enter
mov
xor
scas
inc
mov
dec
xor
inc
push
cmp
nop
enter
js
push
dec
stos
and
xlat
jae
fisubr
les
dec
ins
xchg
xchg
and
inc
fsub
pop
dec
cwde
and
ins
pop
xor
fs
fs
and
adc
lods
fdivr
push
call
adc
xchg
dec
fs
and
and
enter
xor
pop
jmp
mov
hlt
dec
lods
push
add
sub
push
push
les
add
and
data16
cmp
dec
ja
push
mov
clc
or
add
sbb
shr
mov
dec
cwde
add
push
xchg
mov
push
in
dec
je
and
jmp
inc
test
push
jl
push
dec
pop
ret
push
add
rcl
mov
stos
cmp
dec
outs
push
pop
sub
popa
cmp
movs
nop
and
fiadd
inc
js
push
inc
or
and
mov
or
and
mov
jne
imul
jbe
add
lods
test
data16
mov
test
push
inc
into
aaa
and
les
add
xchg
mov
inc
push
mov
rcl
in
xor
lods
push
xchg
cmps
push
push
dec
hlt
sub
loop
out
sub
inc
ss
push
mov
add
imul
es
push
hlt
inc
or
mov
mov
pushf
bound
add
push
je
jp
sub
push
cmp
inc
in
mov
stos
dec
cmp
ins
inc
call
add
or
sbb
mov
add
and
xor
or
gs
and
gs
xchg
jb
xchg
mov
sbb
or
and
mov
xchg
movs
fs
xchg
adc
push
push
mov
arpl
inc
cmp
aaa
jne
push
js
push
jp
xor
inc
adc
mov
jae
xor
jne
dec
add
or
push
or
push
into
add
jp
dec
rcl
xor
test
jo
push
es
pop
cmps
xchg
ds
fsub
sbb
sbb
xor
and
xor
pop
mov
div
push
or
push
push
sub
(bad)
enter
push
adc
pushf
or
or
push
bound
dec
push
add
out
aam
stos
add
add
sbb
push
jne
xchg
add
and
mov
jmp
ins
enter
sbb
push
dec
sbb
push
inc
cmp
int3
aam
push
dec
ret
mov
lods
jns
movs
jno
adc
inc
inc
test
gs
push
or
inc
add
or
ss
nop
or
add
cmp
mov
xchg
adc
inc
rcl
dec
ja
jno
adc
sbb
inc
inc
ss
ficom
add
mov
dec
xchg
ins
fiadd
push
sbb
mov
int3
dec
xor
add
mov
push
mov
les
xor
inc
or
stos
stos
pop
jl
push
outs
push
jne
fisub
jns
push
gs
cmps
inc
push
xor
xor
shr
push
inc
ins
xchg
imul
mov
inc
inc
dec
test
or
call
push
inc
fsub
sbb
xchg
sub
adc
mov
ror
je
inc
xor
or
in
add
test
(bad)
mov
dec
and
in
add
mov
adc
xor
mov
cs
adc
xchg
xchg
test
sub
push
xchg
cs
and
rol
fcomp
cmp
sub
push
add
ret
inc
add
push
pusha
cs
and
test
add
mov
push
or
outs
push
popa
push
dec
xor
stos
dec
in
ds
dec
jbe
imul
arpl
sub
xchg
sbb
stos
fs
mov
adc
call
sub
mov
mov
add
scas
sub
loope
shl
retf
xor
push
ret
mov
inc
push
enter
je
sub
pop
pop
push
or
xor
xor
dec
xor
cmp
add
add
cmp
imul
or
add
vphminposuw
dec
shl
or
gs
bound
or
xchg
push
dec
push
mov
inc
mov
fsubr
push
sub
mov
dec
mov
inc
xor
sub
sub
outs
push
dec
imul
call
outs
push
mov
sub
rol
leave
fs
sub
call
popa
push
mov
aam
clc
xchg
mov
add
cmp
movs
adc
sub
cmp
dec
nop
push
aad
sar
adc
out
sub
and
outs
fmul
push
jbe
jb
inc
xchg
lea
arpl
push
fwait
adc
test
fsubp
ja
dec
fld
push
je
cmp
mov
inc
js
popa
xchg
test
xchg
loope
dec
add
xor
test
push
(bad)
fisubr
xchg
mov
aad
or
data16
sub
or
inc
ins
inc
fisubr
xchg
in
lea
mov
sar
sub
inc
daa
and
push
xor
outs
push
mov
xchg
fisubr
sbb
inc
push
sbb
add
je
cmp
xor
out
jne
sbb
dec
hlt
rcr
push
ss
fcom
adc
sbb
in
sub
adc
inc
js
push
push
lods
test
adc
push
lock
test
sub
jbe
mov
popa
cmp
adc
sub
test
cdq
fs
and
rol
push
add
int3
enter
nop
call
jae
or
sbb
push
cmp
test
test
push
or
pop
jo
fiadd
xchg
lods
aas
call
dec
push
sbb
cmp
and
add
mov
sbb
and
or
loopne
jp
xor
dec
dec
outs
push
sub
dec
push
sbb
or
push
sbb
adc
push
adc
test
adc
xor
(bad)
(bad)
lods
dec
data16
push
add
dec
gs
push
dec
icebp
sbb
or
jo
ins
push
cwde
or
imul
hlt
cmp
sbb
add
js
push
dec
dec
or
add
fmul
add
add
data16
jb
jl
inc
pop
adc
push
jl
arpl
ret
push
push
scas
cmp
outs
or
cmps
cmp
sub
stos
es
pop
pop
dec
adc
push
or
cmp
out
pushw
mov
xchg
sub
pop
xor
adc
xor
xchg
mov
xor
lock
push
rol
jne
xchg
shr
sub
je
test
xchg
jne
xchg
xchg
retf
add
cmps
ror
and
pop
mov
mov
call
push
and
ja
xor
rol
mov
push
outs
bound
mov
dec
push
xor
adc
mov
mov
xor
push
pop
mov
ja
gs
inc
imul
popf
imul
push
dec
pop
cmps
dec
sub
inc
push
lods
dec
fwait
test
xchg
dec
add
bound
mov
push
int3
mov
test
call
(bad)
retf
sbb
idiv
push
sbb
or
jo
push
sbb
popa
test
mov
leave
pusha
cwde
aam
jb
jbe
aaa
xor
sub
inc
xchg
sub
mul
stos
sub
gs
clc
sub
loop
cmp
stos
jne
loopne
stc
xor
push
test
retf
and
dec
push
inc
ret
xor
adc
mov
xor
inc
mov
fs
adc
jmp
bound
dec
sbb
loopne
and
sub
mov
inc
jb
dec
ss
inc
je
or
dec
sub
cld
push
push
xchg
enter
stos
mov
jb
and
pop
pop
mov
ins
test
jno
mov
dec
jne
(bad)
cs
mov
dec
cmp
add
inc
hlt
dec
xor
or
push
dec
mov
push
inc
mov
sub
push
adc
dec
js
jp
pop
push
sbb
push
not
int3
or
inc
push
add
sbb
sub
add
or
cdq
adc
clc
rcr
call
xchg
or
xchg
add
dec
call
out
and
add
hlt
dec
push
inc
dec
sub
int3
dec
imul
js
xchg
pop
test
dec
and
gs
cmp
aad
xchg
xor
pop
pusha
rcl
dec
scas
out
ins
adc
mov
push
ss
and
and
push
imul
pop
xor
jb
ins
dec
xor
inc
dec
into
jp
sbb
cmps
test
ret
ret
xor
cmp
mov
je
jo
mov
shl
jno
inc
sbb
les
adc
je
imul
mov
and
js
push
data16
outs
nop
ss
push
arpl
jb
js
push
bound
or
add
push
dec
loop
retf
mov
data16
adc
dec
cmp
push
pop
sub
mov
sbb
nop
adc
dec
push
mov
xor
push
retf
add
dec
dec
push
xor
es
jle
loopne
adc
sub
dec
or
xor
add
enter
jle
xchg
out
mov
(bad)
jns
xor
xchg
or
pop
arpl
inc
cmp
inc
push
fs
int
cmp
push
xor
ret
fadd
cdq
sub
push
mov
pop
dec
add
inc
jno
mov
pushw
and
(bad)
fisub
test
es
add
mov
add
push
mov
bound
mov
bound
xor
clc
inc
push
xor
push
and
and
and
pop
jns
dec
inc
aaa
fsubr
jo
xor
movs
adc
dec
cwde
pop
add
mov
test
or
jns
sbb
sbb
xor
adc
or
push
cs
shr
add
or
inc
and
inc
or
ins
add
dec
dec
data16
xor
or
mov
adc
cs
dec
int
mov
scas
outs
push
rol
mov
ins
add
mov
and
movs
clc
lock
push
mov
xchg
imul
dec
repnz
or
sub
push
ret
jno
int3
sahf
push
cdq
or
sahf
cmps
push
shl
enter
popa
xchg
ss
push
dec
mov
cmp
add
adc
cmp
and
or
and
dec
add
pop
adc
pop
es
retf
rcl
xchg
loope
push
repnz
test
jle
and
or
push
push
push
adc
movs
mov
in
loopne
xchg
mov
test
bound
hlt
xchg
add
outs
inc
js
ror
inc
cmc
xchg
push
add
aaa
(bad)
outs
js
push
test
ss
sub
ins
out
sub
xor
or
and
inc
pop
aad
dec
inc
inc
dec
inc
cs
test
dec
jmp
enter
sub
xor
inc
dec
faddp
push
or
dec
je
mov
ja
ja
dec
and
cmp
inc
ins
jle
ret
and
loop
ret
mov
push
add
pop
mov
inc
add
pusha
ja
xor
xchg
mov
mov
xchg
push
mov
or
mov
xor
and
fs
sub
push
cdq
mov
inc
sub
jp
aad
dec
push
or
mov
push
inc
inc
mov
(bad)
xor
test
lds
stos
mov
or
inc
jp
fidiv
dec
cmp
mov
pop
add
and
and
mov
push
(bad)
sub
push
adc
add
dec
call
pop
js
xor
inc
loope
xchg
call
lock
push
dec
sbb
data16
and
rol
pushf
xchg
sub
add
add
adc
test
mov
push
or
or
inc
stos
push
xchg
mov
inc
jbe
rol
or
push
popa
ret
aad
(bad)
loopne
mov
bound
jbe
sar
pusha
dec
xor
mov
outs
inc
pusha
xchg
icebp
pop
mov
jne
jbe
cmp
inc
jae
pop
es
cmps
dec
xor
fmul
xor
xchg
loopne
cmp
leave
xchg
xchg
pushf
push
or
aaa
lock
test
bound
mov
push
inc
push
nop
and
push
xor
dec
cmp
xchg
jmp
call
and
jbe
or
cmp
inc
das
sbb
and
push
int3
jp
add
(bad)
dec
in
pop
add
les
ins
outs
inc
xor
inc
in
sbb
sbb
shl
xor
sbb
gs
pop
mov
push
into
push
pop
or
mov
sbb
mov
push
dec
xor
fisub
mov
mov
add
mov
mov
dec
xchg
stos
jmp
push
inc
adc
sbb
push
cmp
push
and
xor
adc
xchg
adc
repnz
adc
test
rol
les
or
dec
test
inc
jae
lock
inc
mov
sub
dec
lods
inc
inc
je
lods
bound
dec
xor
or
add
test
push
pop
dec
xor
xchg
test
and
or
adc
xchg
inc
into
xor
(bad)
dec
mov
xor
mov
add
cmp
or
xor
pop
pop
or
fdiv
(bad)
dec
dec
cld
stos
loop
pusha
je
jo
xor
adc
cwde
cmp
push
push
push
xchg
leave
inc
cmp
dec
adc
rcr
imul
inc
adc
aam
xor
and
dec
jbe
or
push
ins
outs
push
inc
inc
xor
cs
xor
sbb
cmp
aaa
test
je
add
jbe
sbb
not
add
inc
test
adc
cmc
add
xchg
fisubr
mov
xor
xchg
mov
xor
data16
and
and
sbb
xchg
les
pusha
aaa
and
or
mov
push
adc
lods
cmp
or
push
jmp
dec
dec
fdiv
inc
push
push
ret
push
inc
loopne
ss
push
pusha
sub
inc
(bad)
ja
jb
dec
stos
mov
gs
xor
ja
dec
dec
push
aaa
fmul
bound
xchg
add
sub
push
aaa
and
ja
jmp
popa
inc
leave
or
sahf
jle
dec
add
sbb
mov
pop
dec
enter
sbb
outs
and
shr
dec
pop
es
push
loop
mov
clc
cmp
xor
(bad)
pop
dec
push
and
and
ins
jo
and
int3
add
loopne
push
popa
xchg
sbb
repnz
pop
inc
imul
retf
add
adc
shl
sub
mov
scas
add
push
cwde
push
js
(bad)
xchg
dec
mov
pusha
xor
mov
test
js
push
imul
or
outs
and
int3
dec
les
retf
outs
push
ins
jne
aam
inc
inc
pop
cmp
retf
fimul
retf
cmp
pushf
sub
push
push
dec
or
jb
mov
data16
dec
cwde
push
push
cmp
stos
ss
or
cmp
mov
ins
add
inc
push
add
jb
jo
sub
mov
push
jmp
movs
mov
or
lds
dec
outs
inc
fadd
imul
push
dec
push
bound
js
mov
jne
bound
jns
xor
test
ret
loopne
mov
push
ins
dec
cmps
pusha
xor
pop
xor
mov
and
test
rol
jo
clc
add
inc
data16
mov
nop
mov
jp
inc
mov
push
jne
xor
into
sbb
sub
sbb
in
or
data16
lods
add
js
push
xor
out
gs
inc
pop
fwait
stos
pusha
inc
dec
xor
sub
jb
stos
sbb
push
test
in
xchg
xor
push
cmp
stos
stos
dec
inc
js
dec
sub
and
gs
add
add
mov
imul
and
xchg
movs
xor
add
popa
mov
retf
or
pop
pop
adc
adc
dec
add
mov
or
dec
stos
lock
inc
inc
sub
push
rol
bound
retf
xor
ret
and
popf
les
adc
pusha
int3
ins
imul
xor
dec
ss
ror
jl
pop
jo
push
and
dec
mov
pop
push
add
ins
adc
push
push
pushf
test
mov
inc
pop
fstp
inc
adc
pop
xor
push
shl
or
xchg
push
pop
ins
(bad)
jmp
pusha
pop
jle
xor
dec
and
lods
or
pop
les
sub
adc
and
push
cwde
pushf
and
imul
int3
call
(bad)
ins
pop
inc
sbb
lods
or
push
aaa
adc
ror
test
adc
cs
int3
shr
inc
aam
adc
xor
add
loopne
push
inc
ds
push
push
and
mov
dec
mov
aaa
push
and
xor
or
sbb
loope
mov
test
out
int3
hlt
mov
jno
or
fadd
rcl
add
sub
mov
fdiv
imul
or
pop
dec
arpl
push
data16
push
and
imul
scas
sbb
inc
and
push
enter
and
pushf
aaa
ins
mov
dec
stos
retf
pop
pop
cmp
mov
in
js
fs
push
push
imul
inc
push
xor
call
pop
dec
push
rol
stos
data16
mov
inc
cwde
add
bnd
pop
outs
inc
or
fs
inc
pop
inc
adc
push
pushf
js
dec
inc
test
mov
adc
push
sbb
fadd
sbb
retf
mov
push
dec
int3
ret
mov
ss
repnz
or
aam
outs
mov
js
jbe
mov
inc
jns
ret
jo
icebp
imul
je
inc
aam
sub
test
dec
xor
cs
addr16
mov
add
pop
push
adc
movs
push
mov
and
inc
or
cmp
push
push
int3
bound
add
jbe
ror
mov
ins
add
pusha
cwde
push
stos
and
sbb
xor
loopne
or
inc
cmp
lods
stos
or
ins
loopne
or
jo
mov
xor
push
add
lods
inc
jo
dec
sbb
and
xchg
cmp
jb
dec
mov
jno
js
inc
mov
xor
cld
aam
xor
push
xor
sub
mov
xchg
fdivr
rcl
inc
fs
jns
rol
test
mov
adc
and
mov
adc
inc
push
js
ins
fcom
cmps
mov
dec
sbb
test
dec
stos
add
hlt
inc
cwde
sbb
enter
inc
popa
xor
and
lods
push
or
(bad)
sub
push
or
xor
add
or
mov
sar
and
retf
jb
inc
shr
mov
and
mov
cld
pushf
jmp
dec
mov
repnz
mov
shr
cs
jmp
add
xor
and
lods
out
push
cmp
mov
inc
mov
push
cmps
cmp
xor
cmps
ds
push
inc
or
out
and
dec
clc
nop
sub
test
cmp
push
adc
cs
inc
xchg
jbe
push
sbb
jp
fs
or
and
rol
mov
mov
mov
xor
js
push
test
and
ins
dec
dec
xor
fdivr
mov
into
pop
dec
xchg
inc
in
inc
dec
adc
cli
loopne
imul
sub
or
sub
push
and
jns
cli
jne
inc
daa
jne
ss
push
outs
or
ds
inc
xor
aaa
dec
xor
test
xor
stos
jo
imul
jae
add
shl
(bad)
adc
xor
out
sub
push
adc
lods
add
dec
push
rcl
sub
sbb
jl
jo
and
push
aam
call
fidiv
xor
xor
and
mov
sbb
dec
mov
call
ret
mov
push
cmp
dec
es
xchg
dec
int3
mov
or
dec
jne
dec
jb
add
push
inc
adc
(bad)
div
mov
dec
lods
inc
popa
adc
sbb
xor
arpl
sub
or
jno
rol
and
call
sub
add
sub
cmp
cmp
fdivr
xchg
loope
sbb
hlt
lods
mov
push
test
test
ds
pop
add
dec
push
add
mov
lods
dec
test
or
xchg
lods
mov
adc
inc
ins
or
push
pop
data16
mov
inc
dec
push
int
test
test
pop
imul
add
push
xchg
shl
cmps
sub
xor
sbb
retf
fldl2e
xor
and
popa
adc
adc
and
movs
mov
xchg
sbb
loop
pusha
dec
imul
lods
and
bound
dec
cmp
mov
jbe
push
or
xor
js
push
dec
mov
mov
ss
push
aaa
hlt
jae
dec
pop
hlt
sbb
push
push
mov
push
jbe
hlt
push
sbb
ror
cld
je
loopne
test
dec
jb
popa
push
mov
ins
retf
mov
(bad)
cmp
xor
jo
sub
mov
push
nop
xchg
mov
ins
xor
push
je
sub
or
daa
mov
add
add
jo
inc
inc
xchg
add
cli
fs
outs
sub
dec
(bad)
fwait
sub
push
cli
pop
rcl
jmp
mov
inc
dec
and
outs
cmp
pop
or
adc
sub
push
add
inc
das
xor
dec
out
out
ss
xor
mov
dec
shr
push
imul
and
les
ss
push
addr16
sbb
or
out
nop
and
push
xchg
aaa
or
dec
fcom
inc
dec
(bad)
xor
data16
cmp
sbb
jmp
mov
cld
inc
push
jbe
sbb
xor
push
or
xchg
test
push
call
xor
push
ins
mov
inc
xlat
xor
ins
xor
inc
jns
adc
push
mov
dec
xor
test
sbb
push
add
push
adc
push
ss
(bad)
xchg
cmps
push
push
test
dec
nop
jmp
dec
xor
dec
mov
sub
mov
inc
arpl
push
inc
adc
ss
js
adc
adc
xor
cmp
xchg
add
daa
dec
cmp
nop
cmp
call
js
popa
test
add
push
adc
pop
dec
fmul
add
add
enter
xchg
pop
in
js
jne
jo
push
inc
dec
pusha
adc
ins
push
ins
test
add
add
sub
cmps
gs
dec
push
loop
fs
stos
push
push
jp
xor
ins
test
cwde
xor
stos
sub
and
and
or
rcl
mov
add
jne
push
popf
add
lock
or
mov
shl
mov
pop
push
dec
pop
xor
push
cdq
mov
inc
ins
imul
mov
call
bnd
xchg
inc
jmp
js
clc
ss
cmp
sbb
mov
sahf
(bad)
push
mov
add
xor
test
dec
xchg
inc
jne
jl
cli
or
add
fcom
inc
dec
dec
jo
add
sbb
bnd
mov
adc
dec
addr16
jno
inc
adc
push
jmp
(bad)
push
jo
mov
push
inc
xor
push
adc
cs
mul
ins
sub
dec
inc
idiv
fisub
sub
adc
xor
add
jns
jo
xor
jb
xchg
add
repnz
add
dec
or
fisubr
mov
inc
and
adc
out
jp
les
ins
add
mov
adc
adc
sbb
adc
adc
call
bound
call
sub
imul
push
fiadd
mov
popa
inc
je
cmp
xor
mov
push
cwde
inc
pop
push
xor
and
add
dec
push
pop
pop
xor
inc
add
cmp
arpl
mov
inc
push
sub
xchg
pusha
add
popa
inc
pop
fcom
add
push
daa
add
retf
dec
push
push
pop
outs
ret
jbe
xor
xor
ss
dec
sub
jne
xchg
sbb
inc
mov
sub
out
sub
inc
and
add
cmps
stos
js
arpl
add
out
js
dec
push
inc
ret
mov
add
aaa
dec
mov
int3
ret
inc
jb
push
int3
push
aam
mov
dec
mov
add
xor
mov
nop
xor
es
ja
inc
ss
cmp
push
xor
aaa
and
push
enter
ja
adc
inc
sub
xor
mov
enter
stos
sbb
jne
push
(bad)
es
jbe
push
hlt
movs
mov
sub
add
popa
push
mov
jbe
lods
ja
add
or
js
jo
dec
xor
stos
and
js
movs
add
inc
xchg
push
or
mov
stos
out
in
and
cmp
and
rcr
pop
aam
inc
out
push
push
xor
sub
mov
fcom
adc
inc
outs
ss
cmp
cmp
jb
push
sub
add
xor
or
inc
inc
inc
dec
dec
gs
sub
jo
scas
dec
jl
add
mov
add
cmps
mov
mov
pop
add
popa
xor
pop
(bad)
cs
xchg
jle
fmul
or
sub
push
lods
adc
inc
push
imul
dec
or
out
shl
xor
dec
in
jbe
stos
scas
outs
pop
xor
and
movs
mov
gs
and
jbe
add
xor
pop
inc
and
jo
jno
mov
xchg
mov
xchg
popa
push
dec
xchg
fs
inc
add
adc
(bad)
js
js
inc
fcom
push
push
dec
adc
ss
retf
adc
in
fadd
addr16
sub
jo
sub
rcr
push
or
ss
jns
imul
cld
xor
push
jbe
les
sub
adc
push
movs
stos
das
dec
hlt
cmps
js
xor
adc
jge
lock
dec
push
inc
gs
jbe
je
push
cmp
sbb
data16
and
jns
and
dec
mov
dec
add
sub
dec
jp
data16
push
add
inc
sub
sbb
ds
lods
frstor
sbb
mov
add
cmps
jns
repnz
pop
test
or
and
mov
js
mov
ins
adc
xchg
aad
imul
cs
call
add
xor
clc
or
inc
push
jle
dec
inc
movs
cli
inc
sahf
jbe
sbb
into
adc
mov
inc
xor
dec
ss
rcl
adc
js
add
or
popa
test
pop
dec
jmp
gs
or
jo
addr16
cmp
xor
push
ror
stos
sbb
jp
ja
test
mov
test
inc
jno
mov
add
add
push
dec
push
dec
inc
jb
push
pop
push
push
inc
inc
xchg
rol
adc
push
bound
sub
inc
inc
xchg
xchg
push
shl
imul
add
outs
or
fs
bound
add
push
jmp
pushf
xor
cwde
and
sbb
push
rcr
cmp
cwde
jb
sbb
pop
mov
test
jo
inc
dec
and
inc
adc
and
pop
and
jns
push
sbb
lea
call
ds
push
ficomp
add
pop
sbb
push
jmp
cwde
bound
inc
xchg
test
cdq
call
outs
jl
and
xor
push
jb
push
mov
push
xchg
push
shl
sbb
push
sbb
call
xor
xor
cmp
push
push
or
adc
int3
lods
mov
or
ror
xchg
pop
dec
push
ins
rcl
je
inc
popa
push
sub
lods
inc
adc
mov
stos
push
mov
mov
sub
retf
xor
pop
add
jp
xchg
or
add
push
dec
jo
jo
mov
popa
inc
mov
mov
enter
test
push
or
xor
mov
cs
sbb
mov
outs
push
or
call
adc
imul
mov
push
ret
push
movs
xor
movs
adc
add
call
pop
mov
call
mov
test
dec
dec
je
ins
inc
cwde
inc
scas
outs
sub
sub
mov
adc
push
mov
cdq
loopne
sub
jmp
fidiv
push
test
cs
and
mov
xor
data16
xor
cmp
and
or
dec
loop
lods
mov
xor
push
stos
cmps
lea
bound
ret
or
cmp
leave
mov
ss
pop
adc
popa
sbb
bound
fadd
rol
xchg
jb
jmp
cmp
outs
push
push
and
push
mov
jns
sbb
cmps
dec
push
rol
shl
adc
dec
xor
inc
dec
or
shr
sub
(bad)
xor
push
fst
adc
gs
dec
outs
fsubr
xor
addr16
test
add
movs
mov
inc
pop
dec
and
xor
push
dec
lea
push
cmp
cdq
sub
jb
adc
stos
push
cmp
les
and
cmp
inc
add
xor
add
jns
aaa
inc
push
sub
pop
mov
or
push
xchg
sub
dec
push
add
cli
cmp
jl
xchg
or
jb
jne
sbb
cmp
inc
xor
xor
jb
or
fdivr
push
add
popa
and
adc
or
or
add
mov
mov
scas
push
retf
mov
cld
push
aaa
add
popa
xchg
push
inc
imul
jns
je
push
inc
cmp
addr16
add
push
add
dec
or
lods
scas
dec
lods
je
adc
cli
ins
dec
mov
xchg
(bad)
into
push
cmp
and
push
jne
push
gs
push
mov
(bad)
cmp
ins
stos
push
fidiv
into
push
ins
pop
add
mov
ror
adc
loop
inc
ret
js
je
inc
sub
rol
or
push
xor
cmp
test
dec
inc
xor
dec
mov
xchg
stos
dec
loopne
fs
inc
or
dec
push
push
call
jbe
push
rol
je
push
inc
push
add
cmp
or
inc
lods
into
sub
fs
dec
push
add
js
add
outs
xchg
pop
xor
add
xor
xchg
aam
and
dec
push
mov
xor
inc
rcl
adc
jb
cmp
mov
push
js
mov
add
sub
fdivr
ror
sub
aam
xchg
or
sub
sbb
sbb
ins
pop
inc
xor
inc
fadd
(bad)
push
cmp
loopne
sub
jo
add
jno
sub
jbe
repnz
push
sahf
xchg
ror
or
mov
pushf
arpl
in
cmp
push
es
push
and
cmp
jb
inc
jno
loopne
and
sahf
push
fs
inc
add
mov
xor
arpl
call
test
shl
dec
mov
add
aaa
xchg
cmp
inc
or
dec
mov
add
xchg
push
aam
cmp
push
add
mov
dec
sahf
inc
ss
cwde
add
outs
inc
jb
push
outs
enter
xor
sbb
dec
int3
sub
jo
fdivr
adc
int3
xor
lock
push
popa
je
ret
aaa
dec
cs
inc
inc
fs
push
sbb
imul
mov
call
pusha
xor
test
or
jbe
push
sbb
mov
dec
push
pusha
and
jp
mov
ins
push
loopne
sbb
retf
pop
imul
and
je
push
dec
or
pusha
push
xchg
repnz
and
xchg
mov
js
call
push
sbb
ret
add
ss
mov
push
pop
loopne
push
cmp
nop
and
aam
ins
enter
xor
fimul
mov
push
cmp
or
mov
js
fsub
shl
fmul
dec
xor
sub
push
scas
sub
cmp
popa
sub
xor
mov
xor
push
dec
push
shl
push
imul
pop
into
xor
(bad)
sub
or
jo
sub
aam
adc
xor
call
sbb
mov
pop
mov
gs
xor
mov
jp
xor
inc
mov
mov
retf
xor
sbb
lods
mov
push
ror
inc
dec
out
xchg
(bad)
or
outs
mov
aaa
mov
aam
push
call
cs
cmp
sub
sub
loopne
push
push
jns
lods
stos
dec
sub
adc
into
inc
pop
aad
push
or
popa
xchg
inc
pusha
mov
xchg
inc
arpl
popa
jb
sbb
xor
neg
jo
xchg
mov
pushf
js
cmp
push
sub
xor
ss
mov
push
dec
or
add
xor
xchg
adc
outs
push
ret
adc
inc
jmp
int3
inc
int
shr
test
pop
aaa
push
add
mov
dec
inc
jmp
adc
push
jns
movs
fwait
cmp
inc
sub
ret
fs
in
imul
mov
cmp
pop
xor
dec
mov
add
push
push
xor
inc
popa
adc
imul
and
js
rol
dec
inc
mov
sub
xchg
push
lock
push
stos
sbb
dec
inc
add
cwde
shl
pop
popa
ins
dec
cmps
je
push
data16
inc
jns
sub
mov
xchg
or
mov
sub
sbb
push
xor
inc
push
ins
and
push
mov
push
xchg
in
scas
pop
fs
inc
movs
test
mov
pop
push
sbb
jne
jno
pop
add
push
or
sbb
push
clc
pop
ss
push
ss
xchg
nop
ret
cmp
test
dec
xchg
sbb
jne
push
adc
xor
adc
js
inc
add
xchg
push
and
dec
mov
or
or
pop
and
xchg
loop
loopne
and
add
add
test
inc
test
push
dec
push
sbb
pop
sub
inc
cmp
int3
adc
push
repnz
test
jo
js
bound
pop
dec
adc
test
arpl
and
cld
and
push
inc
pop
outs
in
sub
jns
adc
adc
or
dec
push
mov
adc
add
pop
mov
push
movs
xor
cmp
retf
push
sbb
fs
ficom
pushf
push
dec
add
dec
and
push
or
pop
test
inc
push
cdq
add
dec
mov
mov
cmp
ins
mov
out
and
jmp
pop
cli
push
ja
inc
jo
retf
add
rcl
or
ins
inc
pop
scas
push
jp
popa
add
xor
out
loopne
jns
add
push
pop
push
dec
cld
jae
sbb
push
push
sub
add
adc
inc
jns
add
cmc
cs
push
cld
imul
jmp
adc
mov
out
dec
push
xchg
mov
xor
les
ss
inc
push
scas
scas
add
popf
adc
dec
js
cli
jbe
inc
push
sbb
in
and
inc
sbb
mov
push
js
dec
and
inc
xor
cwde
and
mov
push
cli
inc
addr16
add
and
cmps
push
or
les
mov
gs
arpl
ss
into
and
fcom
mov
and
or
cmp
retf
push
inc
adc
fs
mov
js
js
push
and
enter
and
bound
sar
out
inc
retf
dec
dec
out
mov
xor
adc
pop
and
es
outs
shl
adc
jne
push
enter
(bad)
ins
inc
add
lods
sub
lods
jno
rcl
imul
jp
inc
sub
sub
push
xchg
push
cmp
imul
and
sub
adc
dec
dec
push
cmp
sub
movs
inc
push
push
inc
loopne
gs
popa
mov
push
sbb
push
dec
pushf
loopne
imul
fadd
es
dec
leave
les
call
test
xor
ja
push
pop
sbb
xchg
sbb
rcr
mov
icebp
mov
bnd
scas
and
adc
repnz
inc
xor
push
les
jl
push
imul
jo
adc
push
mov
ins
sahf
ja
gs
xor
popf
xchg
add
test
mov
movs
push
adc
mov
outs
shl
cmp
les
fmul
dec
and
fist
imul
ja
inc
ins
ret
and
leave
xchg
xchg
lock
jp
push
inc
add
and
push
in
pushf
imul
cli
aaa
sub
mov
into
aas
dec
mov
xor
hlt
add
shl
add
sub
and
nop
rcl
dec
mov
or
or
mov
cmp
adc
stos
push
cwde
add
sahf
sub
push
xchg
pop
push
jle
mov
je
pop
inc
data16
push
add
jne
adc
xor
and
add
cmp
push
shl
sub
sub
mov
outs
pop
jp
ins
add
aam
inc
jno
cwde
add
add
inc
jae
push
push
add
dec
sub
push
fdiv
or
dec
dec
js
jle
inc
dec
(bad)
dec
mov
push
push
lods
fwait
xchg
(bad)
repnz
mov
add
out
test
jno
adc
outs
push
fs
cmps
push
cmps
and
mov
mov
add
lock
and
sub
rol
or
test
inc
movs
sub
pop
lods
dec
fadd
pop
push
mov
dec
xchg
sub
test
pushw
dec
xor
push
adc
sub
int3
mov
cmp
fs
sub
adc
push
add
retf
ins
ins
cmp
sbb
mov
ret
mov
cmp
je
dec
out
sbb
ret
dec
inc
je
and
fisub
pusha
inc
retf
mov
rcl
push
into
sub
xor
jbe
adc
mov
movs
pop
xor
movs
mov
adc
je
push
inc
mov
pushf
dec
sbb
xor
sbb
(bad)
loopne
sub
rcr
or
leave
outs
inc
or
inc
inc
or
cmp
in
add
dec
jle
add
or
mov
mov
jb
push
or
push
test
movs
push
test
call
jp
sbb
out
push
sar
or
xor
rcl
gs
pop
inc
mov
js
je
leave
add
mov
js
or
retf
pushf
outs
dec
cmps
add
mov
dec
sub
inc
movs
mov
push
sub
xor
lock
arpl
cwde
fiadd
cmp
sub
add
inc
or
inc
shl
pop
addr16
mov
inc
xchg
aaa
loopne
and
movs
inc
cli
push
jne
xor
test
dec
dec
push
dec
push
and
inc
push
push
xor
push
sub
adc
xor
inc
inc
shl
arpl
xchg
dec
sub
test
sub
cmp
jl
shl
mov
jb
gs
push
outs
mov
les
xor
xor
and
ss
jp
add
sbb
jb
dec
adc
test
sbb
xor
fidiv
and
fsub
add
push
xor
call
fwait
sub
cmp
sub
call
push
call
imul
jae
loop
push
dec
xor
sbb
mov
bound
test
mov
dec
cmps
pusha
xor
gs
ror
aaa
xchg
and
loopne
fs
fidiv
fs
mov
push
push
pop
outs
add
or
mov
add
mov
ins
add
sbb
sahf
inc
popa
pusha
inc
pushf
jb
push
mov
out
xor
test
scas
xor
ja
rol
and
dec
mov
xor
xor
inc
movs
adc
pushf
push
adc
ins
sub
pop
push
inc
shr
or
fimul
arpl
mov
push
push
into
push
dec
xor
inc
inc
js
add
jbe
add
push
mov
adc
push
cld
ret
add
hlt
call
sbb
test
ins
push
rcr
movs
sbb
outs
daa
add
aaa
push
push
ins
bound
fsub
sbb
sub
test
pusha
out
retf
push
loope
push
and
or
movs
mov
je
or
bound
out
aam
push
test
bound
add
movs
adc
shr
inc
outs
sub
dec
adc
aad
push
push
push
movs
xor
es
adc
nop
mov
cmp
dec
ss
outs
ins
ins
mov
add
inc
mov
test
mov
sub
adc
ins
push
adc
into
mov
cs
push
dec
cs
push
cmps
js
nop
and
dec
aam
push
push
sub
xchg
adc
loop
retf
push
add
ror
inc
adc
add
push
pop
cmp
jne
ins
and
ja
inc
loopne
inc
cli
xchg
push
sub
or
push
pop
adc
daa
or
dec
and
inc
or
call
push
xor
ins
dec
cdq
add
inc
test
dec
sub
aaa
xchg
inc
outs
jne
cmp
mov
jns
adc
push
jl
mov
xchg
add
add
ins
push
sub
(bad)
or
or
add
mov
jo
or
and
out
dec
inc
inc
data16
inc
movs
push
sub
outs
dec
jo
dec
xor
dec
pusha
add
mov
push
add
ss
cs
sbb
adc
and
mov
scas
push
ss
push
xor
dec
add
push
enter
push
and
js
sub
inc
mov
mov
retf
add
outs
pop
or
xchg
inc
cmp
xchg
call
test
mov
dec
pusha
xor
cli
retf
sbb
adc
jne
sub
jb
je
inc
push
js
and
dec
shr
cwde
push
push
stos
nop
add
push
jo
mov
fs
pop
push
cmp
sub
push
outs
into
(bad)
or
jmp
out
xchg
jbe
je
mov
push
adc
shr
inc
xchg
jmp
in
add
inc
out
add
dec
sbb
jb
inc
dec
ja
popa
mov
fs
push
mov
cli
jae
test
test
inc
xor
xor
es
adc
or
and
xor
call
jbe
dec
jp
les
ret
push
inc
inc
inc
ins
inc
add
lods
xor
sbb
and
test
sub
push
pop
aaa
outs
sub
inc
push
pusha
inc
push
jb
jp
rcl
push
inc
or
cmp
add
mov
les
or
ins
xchg
lods
pop
xchg
push
outs
jns
ss
push
push
xor
popa
dec
cmp
sub
mov
or
call
cmp
and
inc
imul
dec
or
dec
and
test
mov
inc
adc
push
idiv
add
and
adc
add
lods
adc
stos
mov
xchg
dec
dec
ret
test
mov
retw
inc
aaa
push
mov
push
pushf
test
sub
sub
clc
stos
dec
popa
xchg
pusha
sub
les
add
cs
test
daa
jl
xor
add
ss
jno
push
push
xchg
mov
xor
dec
push
cs
dec
test
inc
sub
add
shl
cli
repnz
dec
add
or
fwait
dec
sub
dec
xor
mov
sub
inc
adc
fisttp
or
inc
dec
push
add
jl
ins
pusha
(bad)
fisub
ins
add
sbb
lock
add
ror
ins
dec
pop
pop
and
xchg
cmps
ins
dec
inc
stos
or
dec
jns
add
jo
mov
faddp
inc
inc
popa
adc
loopne
fs
mov
add
or
ins
push
ret
push
fadd
inc
and
adc
ret
fidiv
push
cmp
adc
mov
dec
sub
inc
xchg
ins
sbb
mov
js
ror
dec
push
ins
dec
mov
data16
mov
inc
mov
mov
imul
or
inc
jno
inc
inc
cmp
xor
mov
add
ret
or
je
fidiv
sbb
xor
ficom
cdq
add
inc
jns
or
adc
call
xor
arpl
loop
dec
mov
adc
jbe
add
je
call
call
jbe
arpl
add
mov
push
ins
xor
xor
ror
mov
and
cli
push
push
nop
gs
add
adc
ret
into
xor
mov
xchg
ret
inc
cmps
es
outs
rcl
imul
sub
xor
ret
jo
mov
and
dec
dec
and
retf
inc
dec
sub
adc
es
adc
dec
dec
inc
jb
in
ss
fs
stos
outs
outs
bound
dec
dec
adc
dec
sbb
adc
sub
les
pop
push
or
movs
add
in
mov
mov
mov
out
gs
cld
in
ss
add
push
inc
js
sub
xor
cld
push
pop
or
push
aam
fs
push
pop
les
push
add
push
and
xor
inc
cmp
and
jbe
ins
sub
(bad)
loopne
xchg
and
add
inc
mov
loope
icebp
imul
daa
adc
push
inc
jae
and
push
inc
test
add
ror
sbb
out
inc
nop
and
ss
pop
add
xchg
jno
mov
rcr
dec
test
adc
mov
shl
inc
ret
sub
xor
and
and
jae
scas
sub
scas
mov
inc
ss
fs
add
ins
push
xor
inc
xor
or
pop
adc
xchg
gs
bnd
jne
inc
dec
xor
mov
outs
add
adc
pushf
inc
fidivr
outs
popa
inc
cmps
add
adc
mov
popa
push
xor
sbb
les
fcom
xor
dec
push
push
pop
sub
xor
mov
adc
jb
mov
mov
pop
and
cli
jbe
imul
xor
mov
ss
jb
push
push
adc
and
sub
or
cmp
or
push
or
retf
pushf
dec
sub
test
call
adc
es
xor
stos
scas
rol
fadd
jbe
ja
cmp
movs
pop
adc
outs
inc
jns
inc
or
or
jne
stos
pop
(bad)
xor
inc
add
mov
dec
push
movs
lea
bound
jae
ret
inc
ins
push
sub
push
push
loopne
xor
je
fs
sub
shr
or
sub
push
cs
xor
cmp
ss
xchg
or
aaa
or
and
and
nop
xor
test
mov
mov
pushf
push
xor
jno
add
data16
popf
test
sbb
dec
retf
dec
es
dec
aad
cmp
jbe
cmp
fdiv
dec
mov
push
adc
mov
sbb
inc
bound
cmp
movs
lods
rcl
cmp
adc
arpl
sub
outs
xchg
push
xor
ds
(bad)
pop
and
or
inc
push
add
jmp
int3
fs
nop
fimul
or
cmp
push
je
stos
pop
es
jae
mov
mov
not
xchg
and
ret
add
mov
shr
and
or
push
push
and
inc
push
pop
and
jl
jne
sbb
mov
push
or
jp
adc
or
sub
and
imul
pop
sub
scas
xor
mov
adc
pop
sub
mov
ins
dec
push
jno
out
push
dec
les
jne
add
pushf
mov
and
or
cmps
cmp
add
pop
ins
xor
xor
mov
rcr
or
cmp
pop
and
dec
push
test
mov
mov
sub
and
add
dec
js
repnz
xor
and
repnz
pop
(bad)
(bad)
cmp
gs
dec
or
add
sar
inc
imul
or
fs
pop
add
push
imul
(bad)
xor
shr
les
pop
push
nop
push
jp
push
enter
xor
(bad)
mov
out
push
lock
and
and
adc
in
js
add
sub
and
mov
sub
or
inc
mov
add
mov
or
mov
dec
inc
push
mov
ins
daa
cmp
push
addr16
adc
add
and
bound
loopne
inc
fsub
mov
or
or
mov
cmp
dec
mov
ror
mov
jp
push
xor
(bad)
jl
mov
outs
jbe
bound
adc
pop
inc
ins
rcl
mov
mov
imul
push
add
xchg
push
cmp
push
xchg
jb
sbb
xchg
jno
retf
adc
fsubrp
call
outs
mov
adc
movs
jno
aaa
hlt
fs
mov
sbb
push
cld
mov
mov
push
mov
xor
jmp
jb
retf
je
push
enter
add
xor
mov
push
lods
xor
mov
movs
xchg
pop
sbb
aaa
sub
loope
and
loop
je
fsub
mov
pop
mov
and
inc
mov
xor
push
xchg
xor
lods
sub
mov
test
jno
outs
in
xchg
add
outs
jp
or
push
inc
mov
or
xor
push
mov
and
or
sub
xor
jo
sbb
xor
ficomp
push
loopne
lods
inc
add
xor
inc
dec
adc
popa
ss
sub
ds
gs
push
arpl
sub
inc
fdiv
or
retf
fmul
shl
add
push
aam
cmp
jle
mov
and
mov
mov
or
sbb
cmps
mov
pop
inc
mov
sahf
sbb
js
push
push
arpl
retf
xchg
xor
push
inc
pop
sbb
je
stos
add
push
push
sbb
inc
in
adc
cmps
lods
outs
pop
xor
adc
sub
popa
mov
adc
inc
xor
pop
in
pusha
adc
out
mov
int3
xchg
xor
popa
mov
mov
sub
sub
and
lods
pop
enter
ins
mov
adc
es
pusha
pop
lods
mov
push
mov
jno
data16
sbb
inc
or
gs
fs
jns
jb
inc
cmps
and
pop
fcom
push
push
arpl
mov
(bad)
mov
sbb
inc
xor
dec
xchg
push
or
sub
adc
xor
clc
jae
push
sub
and
movs
je
inc
jae
xor
mov
xor
cs
push
add
sbb
ss
dec
push
push
cmp
fadd
dec
mov
xor
aaa
cwde
jo
xor
push
cwde
jp
dec
shr
push
mov
aam
pop
dec
imul
sub
mov
xor
dec
test
clc
es
add
fsubr
pop
ins
and
ret
aad
js
inc
dec
add
and
dec
add
inc
outs
xor
push
scas
push
mov
imul
cmps
movs
xchg
inc
inc
mov
and
xor
je
add
ficom
push
inc
push
sub
repnz
dec
push
push
mov
jp
push
adc
xor
jmp
push
jne
or
inc
xchg
sub
adc
fcom
and
push
fimul
movs
xchg
adc
xor
adc
or
and
in
add
imul
mov
inc
or
add
les
test
add
sbb
fidiv
adc
enter
add
adc
imul
push
in
ficom
pop
and
push
sub
mov
inc
cwde
jbe
and
xlat
xor
stos
push
sub
repnz
clc
jp
cwde
or
mov
adc
sbb
shr
cli
cmp
pusha
popa
add
call
jb
jl
adc
ficom
push
xor
inc
xor
sbb
inc
jmp
dec
inc
push
add
or
fiadd
push
inc
jmp
xchg
dec
jne
ret
and
add
xor
adc
(bad)
push
jns
lods
ins
test
jo
clc
mov
dec
jb
adc
add
aaa
pusha
gs
jo
fs
test
gs
jbe
mov
stos
into
inc
push
jns
inc
inc
les
(bad)
fdiv
adc
xor
shl
mov
outs
push
stos
push
push
daa
or
cmp
cwde
adc
xchg
retf
ins
mov
dec
adc
xchg
div
outs
ret
push
jo
push
push
fsubr
pop
mov
rol
mov
out
cmp
mov
add
jbe
js
fisub
lea
inc
inc
xchg
lea
dec
sub
dec
add
push
add
jo
gs
inc
jle
push
js
pop
fisubr
push
add
inc
and
in
test
inc
leave
gs
mov
mov
pop
inc
retf
xor
jo
inc
xor
and
data16
ss
jbe
jne
fsub
add
adc
movs
push
sar
add
fadd
js
jp
jno
and
sbb
dec
mov
jb
add
xchg
add
mov
dec
adc
dec
or
in
ss
fidivr
je
jb
arpl
retf
ins
xchg
push
inc
dec
sub
dec
imul
and
shl
ficom
add
in
(bad)
dec
and
inc
aaa
sub
xor
dec
arpl
scas
test
inc
gs
cmp
sbb
inc
dec
dec
dec
shl
cld
or
push
and
js
or
fs
jb
push
push
popa
adc
xchg
and
pop
dec
inc
inc
xor
xor
sub
int
cmp
pop
sbb
adc
xchg
xor
cmps
mov
outs
aam
rol
xor
jbe
inc
inc
mov
push
add
sub
mov
push
push
mov
dec
lods
ins
sub
xchg
test
je
dec
inc
jno
push
cwde
push
mov
add
dec
push
xor
jmp
inc
adc
mov
jb
shl
push
scas
dec
xor
cmp
mov
or
fs
add
or
mov
push
inc
jne
dec
and
aaa
adc
cmps
test
dec
or
mov
dec
fdiv
sbb
mov
xor
scas
popa
or
mov
fdivr
push
xor
or
pop
sbb
div
addr16
and
add
adc
and
push
test
mov
bound
or
push
test
jb
hlt
inc
nop
and
sub
and
shl
push
shr
fiadd
cmp
inc
cli
inc
inc
sub
push
js
mov
mov
mov
and
aad
test
ds
cs
mov
sbb
repnz
dec
jp
mov
pop
fs
rcl
pushf
adc
sbb
mov
push
adc
push
and
imul
jmp
aad
fidivr
inc
ror
or
jno
cmps
adc
push
enter
or
add
sbb
pop
jb
test
xor
xor
mov
sub
pushf
mov
fst
fs
dec
or
or
bound
jo
outs
xchg
cmps
mov
cwde
jo
mov
sbb
adc
int3
fdiv
mov
test
fs
push
xor
dec
xor
shl
stos
or
jno
dec
jb
sub
xor
hlt
mov
test
and
add
loopne
adc
jl
lock
mov
int
add
xchg
popa
jb
dec
sbb
sub
dec
xchg
retf
add
add
movs
add
sbb
or
and
fs
add
add
test
(bad)
push
xor
add
into
inc
xchg
inc
push
dec
sbb
jo
(bad)
imul
inc
xor
call
push
fcomp
movs
xchg
inc
inc
xchg
(bad)
and
add
push
dec
mov
push
out
dec
mov
inc
dec
pop
mov
jp
and
push
sub
push
add
pop
data16
rcl
dec
push
add
ins
ins
sahf
inc
push
ds
mov
cmp
ins
popa
pop
call
xor
push
mov
lods
fidiv
xor
dec
int3
pusha
test
jp
retf
dec
and
inc
gs
and
cwde
scas
dec
fisttp
sub
dec
xor
jo
gs
jnp
aam
add
pusha
or
scas
shl
fidiv
test
dec
push
mov
jb
or
or
dec
int
dec
mov
adc
dec
cmp
bound
inc
inc
xor
bound
ja
xor
pop
js
dec
mov
div
and
aaa
push
dec
inc
ins
dec
push
push
push
push
add
push
adc
push
dec
(bad)
push
mov
pushf
inc
inc
inc
inc
inc
ins
stos
mov
mov
push
dec
push
jo
mov
sub
dec
push
imul
jno
push
jbe
cmps
xor
cmp
dec
cwde
sub
cmps
xor
mov
dec
xor
hlt
dec
pop
and
sahf
mov
add
push
je
jo
jne
mov
repnz
xchg
nop
scas
push
dec
dec
cmp
popa
mov
popa
int
pusha
sbb
push
and
loop
push
push
add
pop
fmul
outs
fsubr
or
pusha
mov
xor
mov
retf
inc
xor
sar
jbe
dec
dec
inc
outs
sub
push
jb
js
jo
or
pop
dec
icebp
es
movs
jno
jo
inc
inc
mov
inc
push
cmp
cwde
pushf
push
cmp
xor
cmp
push
xor
sub
bound
add
mov
push
or
cli
adc
shl
dec
icebp
push
and
add
and
movs
push
es
or
sub
inc
shl
cmc
and
stos
mov
inc
jbe
push
mov
inc
or
push
push
inc
inc
(bad)
xchg
dec
mov
jns
aaa
dec
xchg
repnz
mov
mov
pusha
sub
push
cmp
bound
cwde
sub
dec
outs
add
aaa
add
and
jbe
sbb
movs
jl
ins
push
dec
pusha
push
add
sub
or
or
adc
xor
popf
mov
int
jp
loopne
dec
xor
pop
sbb
fadd
mov
inc
outs
test
push
push
test
cli
fild
cdq
dec
retf
cmp
mov
neg
jne
push
outs
sub
mov
pop
mov
jl
enter
inc
inc
push
sub
dec
pop
popa
adc
sbb
sbb
inc
popa
ja
jo
add
outs
shl
sub
xor
ins
sub
hlt
xor
pop
push
push
test
call
mov
sub
adc
aaa
test
outs
add
xor
push
imul
js
xchg
push
add
push
jle
and
and
test
add
mov
leave
movs
adc
ins
push
cs
and
fs
and
add
pop
ja
shl
xchg
imul
stos
inc
cwde
push
inc
xchg
les
jne
add
push
pop
es
add
mov
jb
fimul
test
push
je
imul
cmps
loop
push
dec
or
sub
or
and
jo
jb
pop
sub
add
or
ret
jp
loopne
popa
inc
ret
mov
sbb
and
inc
mov
inc
call
adc
dec
xor
push
loopne
ret
ss
inc
dec
adc
sub
inc
xor
jns
xchg
adc
js
sahf
dec
add
mov
inc
cld
lods
sub
or
inc
adc
mov
pop
push
xor
hlt
push
aam
mov
dec
sbb
and
cld
mov
movs
int3
add
xchg
loopne
call
push
cs
mov
cwde
adc
and
or
jp
inc
push
mov
dec
dec
push
sub
xor
or
les
inc
aam
inc
nop
lock
test
xor
inc
push
mov
in
xor
stos
jmp
push
dec
shr
mov
xchg
or
xchg
sub
add
xor
xor
cmps
sub
cmp
add
and
pusha
in
inc
dec
arpl
dec
push
push
jo
mov
repnz
test
or
pop
cli
add
inc
xor
rcl
int
push
adc
xor
push
ds
stos
dec
rcl
addr16
imul
or
sub
pop
jns
push
shl
outs
adc
jp
pop
and
dec
inc
adc
mov
jno
js
lods
xor
repnz
inc
mov
and
push
push
and
retf
jbe
add
lock
inc
test
mov
test
je
xor
jbe
ret
adc
fisubr
in
mov
bound
xor
in
mov
push
outs
dec
ss
cwde
inc
sub
inc
xor
inc
jne
jb
pop
inc
mov
out
dec
scas
jp
xor
popa
mov
add
retf
pop
mov
xor
xor
jmp
stos
ret
inc
jl
and
xchg
xchg
and
outs
push
ins
sbb
push
add
pushf
nop
xchg
add
ss
dec
lock
cmp
cdq
mov
inc
xchg
outs
cld
mov
dec
jne
push
push
add
jb
jae
push
push
cmps
data16
mov
dec
mov
bound
xor
inc
shl
or
aam
xor
ret
add
ss
inc
pop
rcl
inc
bound
jmp
push
test
xor
mov
cmps
jb
mov
adc
mov
dec
fdiv
sbb
jo
idiv
inc
popf
xchg
aam
sub
add
xor
mov
add
jp
dec
dec
xchg
xchg
leave
lods
push
pop
arpl
add
pop
add
sub
out
rcr
add
jb
or
push
mov
push
push
pop
sbb
bound
imul
inc
xchg
add
add
xchg
add
test
pusha
jmp
and
adc
dec
adc
pop
scas
mov
jo
int3
imul
or
add
sub
or
or
ins
pusha
push
dec
jbe
stos
xor
inc
addr16
cmp
outs
push
cs
jae
and
pop
push
lock
add
dec
ss
and
pop
bound
popa
dec
inc
stos
push
push
mov
(bad)
fisub
inc
ins
xchg
push
aaa
sahf
jl
hlt
test
xor
bound
es
js
dec
inc
sub
push
push
add
add
xchg
test
and
mov
push
xor
jo
fsubr
inc
retf
dec
jo
ror
les
or
pop
fiadd
jbe
xor
outs
jae
jae
add
xchg
sub
movs
push
pusha
mov
mov
and
mov
mov
adc
push
pusha
xchg
mov
dec
xchg
jp
out
adc
stos
or
xor
jo
mov
adc
cli
pop
jl
pusha
or
and
xor
addr16
test
rcr
add
xchg
(bad)
outs
bound
or
inc
sub
or
adc
and
cwde
sub
sbb
xchg
test
xchg
sub
inc
and
lods
fmul
nop
movs
push
add
adc
ss
or
outs
dec
stos
pop
je
push
inc
xor
push
adc
xchg
and
ds
cmp
dec
loopne
or
inc
jo
and
call
push
push
push
adc
adc
pop
push
nop
cli
mov
dec
call
je
inc
inc
push
mov
push
dec
push
push
adc
dec
add
retf
mov
or
push
cs
jne
aam
pop
push
test
mov
fcom
dec
dec
imul
add
dec
push
xchg
add
push
adc
and
test
cli
push
mov
popa
mov
push
sbb
mov
xor
in
push
mov
xor
push
xor
or
inc
dec
adc
int
jns
dec
test
test
add
cmp
addr16
cmp
add
jo
xor
cmps
test
mov
js
mov
test
sub
dec
repnz
jne
ins
mov
add
mov
mov
adc
add
aam
popa
and
pop
mov
adc
cs
push
jns
sbb
shr
retf
dec
push
bound
popa
and
jl
push
inc
lds
xor
jno
sbb
xor
inc
inc
mov
or
inc
pusha
and
jns
add
(bad)
fwait
inc
inc
inc
cmp
inc
dec
aaa
inc
lea
push
or
ret
es
or
mov
in
scas
jno
dec
mov
mov
inc
shr
xor
dec
sbb
pusha
xor
sahf
fsub
dec
sbb
mov
push
stos
hlt
jne
add
dec
clc
or
fs
add
cmp
imul
dec
and
fmul
dec
adc
pop
dec
sub
or
aaa
xor
push
inc
jp
dec
rcl
test
aaa
or
jae
lock
or
dec
dec
outs
pusha
or
imul
adc
add
xor
sub
out
outs
inc
xor
dec
nop
mov
enter
xor
retf
and
mov
inc
jno
or
and
inc
dec
push
call
ins
mov
mov
xchg
nop
mov
jp
dec
jns
xor
nop
jp
cwde
jb
pop
add
imul
sub
lods
cs
push
out
inc
sub
cmp
or
xchg
inc
and
sub
xor
jo
push
movs
test
test
mov
inc
inc
cmp
or
aam
or
sub
xchg
(bad)
clc
sub
jb
xor
fmul
mov
aaa
test
enter
push
gs
popa
lods
dec
mov
arpl
add
sbb
inc
push
xor
or
dec
mov
cmp
popa
sahf
mov
xor
repnz
push
push
imul
xor
push
sub
pop
dec
pop
inc
pop
mov
sub
inc
jp
adc
push
ss
fdivr
mov
xor
fs
add
inc
outs
jns
(bad)
ror
dec
or
cmp
add
pop
dec
hlt
test
mov
(bad)
xchg
and
push
push
mov
mov
and
mov
mov
inc
inc
and
push
retf
out
push
inc
inc
dec
test
push
adc
xchg
add
mov
ins
add
push
ja
cmp
dec
sub
and
inc
stos
add
push
mov
test
test
dec
push
mov
mov
dec
push
add
and
popa
xchg
pusha
ret
adc
and
xor
cs
es
sub
dec
(bad)
ret
je
shl
clc
dec
lods
dec
gs
cwde
xor
sbb
sbb
push
fidiv
inc
inc
push
or
call
or
dec
dec
push
push
aaa
inc
add
sbb
add
and
ficomp
adc
sbb
ins
in
and
xor
arpl
xchg
xor
je
stos
mov
mov
popa
pop
inc
ins
mov
and
ret
dec
and
add
ror
sbb
inc
xor
and
adc
loop
inc
inc
lods
movs
jno
or
mov
sbb
push
or
add
neg
push
dec
aam
mov
es
pop
xor
sub
pop
mov
jbe
call
push
cwde
sbb
pop
add
jbe
dec
pop
inc
mov
and
cmp
push
add
adc
enter
movs
mov
shl
rcl
push
and
jae
push
xchg
pop
adc
loopne
lock
xor
adc
inc
push
or
inc
add
or
popf
and
inc
dec
ja
dec
pop
fld
jo
stos
inc
inc
or
or
inc
push
sbb
inc
movs
or
dec
jbe
push
push
push
loopne
and
cmp
xchg
push
fmul
push
jno
xor
cdq
mov
fwait
sbb
fs
mov
and
loop
mov
ins
test
mov
push
xor
jle
mov
jbe
push
test
sub
adc
inc
mov
jle
aaa
fwait
inc
lods
test
inc
in
pop
outs
lock
push
xor
xchg
call
(bad)
jmp
add
mov
mov
movs
pop
aad
inc
inc
xchg
out
cmp
mov
aaa
dec
xor
xor
pop
mov
ins
jl
push
ja
bound
movs
dec
and
inc
adc
xchg
dec
test
push
xchg
push
dec
lock
sbb
add
adc
les
mov
mov
add
stos
jle
sub
into
bound
sbb
mov
jl
data16
aaa
or
and
shl
and
dec
(bad)
push
pusha
pop
inc
ins
pushf
mov
inc
xor
xor
xor
inc
sub
mov
scas
dec
je
inc
adc
daa
lock
cli
inc
ss
aaa
ins
sahf
and
sub
ins
push
nop
inc
fiadd
cmp
sbb
pop
test
xor
jbe
or
mov
jbe
cmp
push
sub
mov
ss
pop
je
xor
inc
sbb
mov
fadd
call
sub
outs
inc
les
jae
or
popa
adc
dec
fmul
test
xor
lea
fsub
in
imul
inc
sbb
pop
mov
ss
mov
adc
xor
xchg
push
cs
xor
je
aaa
adc
movs
xor
cli
jb
adc
xor
add
sub
inc
into
jp
fcom
sub
xor
fcmove
bound
xchg
pusha
fmul
jp
and
jecxz
ins
push
mov
scas
dec
fwait
and
ja
or
mov
sub
js
sbb
sub
adc
and
push
mov
inc
es
je
stos
mov
pop
xchg
arpl
js
inc
and
or
inc
jb
add
xchg
add
lock
jle
cmp
adc
bound
addr16
push
push
das
inc
fadd
outs
inc
adc
mov
sbb
mov
push
sub
movs
dec
xor
cs
xor
and
dec
push
shl
clc
sub
retf
xor
outs
test
xchg
xor
push
sbb
sar
fsubr
fiadd
je
push
int
adc
mov
mov
mov
or
je
add
bound
test
sbb
ret
adc
adc
xchg
dec
ins
sbb
push
add
push
(bad)
loopne
imul
cmps
mov
gs
sub
xor
or
cmps
mov
hlt
mov
xchg
xor
jae
mov
push
stos
or
push
dec
mov
jle
jbe
rcl
push
jle
push
sbb
stos
popa
loopne
outs
mov
xchg
idiv
push
ss
xor
ret
dec
jo
push
pop
stos
pop
imul
outs
pop
aam
outs
push
pop
js
nop
in
and
adc
loope
dec
inc
sahf
dec
inc
dec
cwde
or
les
loopne
push
mov
pop
add
ss
and
ss
push
and
lods
push
jne
push
xchg
sub
inc
call
pusha
ins
mov
inc
inc
out
dec
je
pop
pop
pop
add
inc
add
fmulp
sbb
add
imul
and
or
in
xchg
xchg
ja
test
gs
mov
ret
mov
dec
sub
aad
bound
clc
push
inc
and
(bad)
ins
arpl
outs
jb
ja
push
push
or
xor
and
add
retf
push
ss
push
push
mov
lods
inc
inc
dec
cmps
call
inc
and
xor
sar
js
and
mov
shl
add
bound
xor
jmp
jns
sub
inc
push
je
add
shr
xor
bound
out
pop
stos
call
scas
dec
inc
inc
adc
mov
dec
gs
dec
pushf
je
dec
push
mov
inc
lea
xor
mov
test
pop
xchg
aam
clc
fsub
scas
inc
jp
xor
mov
les
ror
dec
ins
cli
xchg
add
je
or
cmp
xchg
bound
pusha
push
rcl
xchg
xchg
add
int3
jbe
mov
fsubr
outs
xor
stos
add
push
lock
(bad)
ret
pusha
xor
mov
retf
inc
inc
mov
ja
and
shr
push
xor
test
xor
ss
push
(bad)
push
je
rcl
stos
mov
mov
jbe
or
mov
aad
popa
es
pop
sub
outs
pop
push
adc
clc
call
imul
aam
je
pop
or
inc
xchg
outs
adc
fst
adc
dec
push
cmp
outs
pop
shl
sbb
dec
ins
jp
cmps
mov
dec
mov
dec
xchg
adc
mov
rol
push
pushf
push
mov
mov
loopne
mov
mov
dec
inc
xor
sub
and
push
add
(bad)
int3
push
and
fwait
movs
shl
adc
test
or
push
sbb
and
mov
add
cli
sahf
ins
inc
add
adc
jbe
mov
inc
mov
push
push
dec
cmp
cdq
test
js
push
jmp
adc
push
sbb
les
data16
dec
jbe
js
mov
push
inc
mov
xor
js
xchg
pop
pop
xchg
test
in
push
sbb
push
lea
adc
or
dec
ficom
xor
shr
and
imul
gs
je
ss
rol
pop
ficom
push
add
cmps
test
data16
cwde
sbb
mov
dec
and
inc
push
dec
ja
jb
push
jo
shl
mov
mov
and
xor
adc
fs
sub
movs
ss
add
fdivr
or
add
push
jbe
sbb
dec
or
or
push
xchg
add
call
not
mov
jno
cmp
xor
cs
push
pop
mov
xchg
cli
fiadd
dec
push
inc
cwde
imul
jp
and
stos
sub
ins
out
sbb
and
js
inc
bound
push
xor
xor
xor
pop
popa
pop
sub
jle
aaa
push
arpl
stos
mov
dec
clc
pop
ror
sub
dec
jg
or
aaa
mov
inc
inc
cs
(bad)
inc
lods
leave
ret
jo
enter
or
mov
cmp
inc
add
mov
cmps
dec
cs
mov
pop
jne
inc
jns
dec
push
jo
sub
xor
jecxz
inc
imul
add
push
inc
sub
test
inc
jne
cmp
adc
test
sbb
jb
push
push
dec
stos
cmp
test
xchg
test
clc
xor
add
xchg
pop
push
popa
xor
sub
inc
dec
mov
add
rol
mov
data16
xchg
xchg
push
push
je
shl
popa
mov
repnz
test
js
outs
jb
xor
adc
mov
mov
imul
mov
inc
cmp
jne
dec
adc
mov
push
(bad)
inc
push
mov
jne
nop
arpl
or
sbb
and
add
lods
test
push
sub
adc
and
dec
cmps
mov
lods
adc
hlt
arpl
dec
ins
adc
ss
xchg
push
push
mov
pop
pop
dec
movs
adc
dec
jae
xor
push
push
add
fimul
es
dec
mov
pop
mov
pushf
sub
es
xchg
imul
inc
push
and
call
ret
mov
test
xor
mov
push
inc
inc
push
les
js
jp
adc
ds
bound
cmp
(bad)
dec
sbb
rol
les
lods
xor
mov
push
mov
add
movs
xor
ret
retf
cs
es
sahf
inc
push
mov
and
ins
push
push
mov
mov
or
inc
data16
adc
dec
jae
cmp
and
imul
push
mov
add
outs
jo
xor
test
xchg
adc
aam
test
xor
stos
push
loop
mov
cwde
sub
push
mov
loop
jp
jno
imul
rcl
jmp
and
xchg
add
push
push
mov
retf
loopne
push
sar
adc
push
or
ss
inc
pushf
jmp
mov
add
rcl
adc
add
xchg
and
mov
push
sbb
dec
cdq
mov
inc
popa
data16
sbb
int
pusha
jmp
fs
lea
add
in
xchg
inc
or
js
ss
les
mov
shr
sub
bound
pop
xchg
add
dec
dec
add
adc
test
push
loopne
push
adc
loopne
bnd
fsub
xchg
sub
add
mov
xchg
test
sub
mov
add
xor
cmp
pop
sub
bound
fs
ret
les
mov
dec
inc
or
push
pusha
push
jbe
lods
ror
mov
fs
dec
sub
xchg
push
mov
xor
ds
mov
pusha
sbb
adc
cs
mov
test
arpl
je
shl
fs
or
mov
mov
outs
fcom
mov
ins
add
call
xor
shr
push
adc
adc
adc
adc
test
test
inc
add
dec
test
xchg
xor
and
push
rol
aam
xor
mov
push
mov
push
push
adc
xor
sbb
add
bound
or
xor
movs
aaa
push
inc
adc
out
jbe
gs
addr16
cmp
pop
mov
fadd
adc
ins
test
in
mov
fidiv
xchg
ret
cmps
dec
push
movs
nop
or
in
aam
jno
pusha
or
push
push
or
cwde
or
test
and
push
movs
cmp
ror
aam
ss
and
or
xor
or
nop
jbe
inc
mov
push
add
dec
fimul
sub
mov
xor
push
xchg
ins
mov
adc
push
xchg
into
arpl
inc
out
inc
adc
push
lods
cdq
and
and
mov
inc
rcr
xor
dec
add
adc
and
aaa
ret
bound
je
imul
pop
mov
inc
inc
mov
mov
xor
jbe
jns
data16
loop
add
test
fmul
daa
or
push
mov
jae
mov
nop
pop
mov
das
xor
push
inc
test
xor
jo
mov
mov
xor
and
adc
js
cmps
add
dec
xor
push
add
and
add
push
and
inc
loopne
popa
push
fs
pop
pusha
inc
sbb
cmp
add
inc
mov
ss
mov
inc
lock
or
inc
dec
pop
sbb
jns
sub
mov
arpl
or
clc
push
dec
inc
xchg
add
dec
cli
fisttp
xor
fisubr
test
or
movs
xor
dec
sub
xor
dec
xor
push
or
push
push
xor
and
outs
inc
push
ja
jne
sub
pop
es
pop
dec
mov
aam
xchg
sbb
call
cmps
add
or
mov
inc
cmps
out
push
xor
inc
push
aam
mov
mov
sbb
cmp
push
shl
sub
test
js
mov
xchg
test
sahf
(bad)
ds
xor
pop
mov
popa
xor
xor
push
push
add
dec
jo
add
imul
xor
xchg
push
push
cli
jb
push
push
or
push
or
push
fst
std
loop
push
push
fdiv
popa
test
lea
je
jns
or
cdq
test
mov
dec
push
xor
outs
adc
dec
ins
adc
dec
jo
dec
shl
jns
pushf
test
jb
dec
mov
push
push
dec
test
add
dec
push
int3
imul
mov
sub
ins
ret
xchg
pushf
mov
xor
adc
inc
test
movs
add
scas
xor
jb
jbe
jne
jmp
dec
dec
mov
call
mov
add
imul
data16
arpl
sbb
mov
sub
test
mov
xchg
fwait
cmp
jno
add
pop
in
(bad)
call
cmp
inc
pusha
dec
push
xor
lea
push
inc
adc
push
int
push
mov
ss
add
or
bound
test
aam
adc
push
outs
ja
xor
xor
mov
sbb
add
ins
dec
xor
dec
jl
add
adc
pop
ss
or
enter
ins
leave
popa
add
ss
add
shl
push
sub
hlt
sbb
xchg
add
sar
ins
stos
push
mov
enter
popa
jmp
lods
push
xor
dec
xor
test
dec
and
sub
sub
push
jno
and
in
mov
aam
cmp
xor
arpl
inc
shl
inc
retf
mov
or
jbe
enter
add
pop
xchg
xchg
xchg
mov
mov
inc
ja
dec
sub
xor
xchg
loopne
(bad)
push
dec
sub
xchg
ret
push
pop
test
inc
out
xchg
test
mov
je
rcl
inc
push
outs
es
cwde
gs
and
push
and
(bad)
push
sbb
stos
mov
outs
ins
push
call
sbb
xor
add
(bad)
retf
fs
mov
sub
push
les
xor
ret
xchg
inc
loopne
pop
rcl
lods
fs
enter
popa
push
adc
(bad)
sbb
dec
adc
dec
fs
movs
xchg
and
push
mov
mov
jbe
fdiv
pushf
mov
and
outs
pop
push
retf
and
loop
push
inc
xchg
jmp
add
adc
jo
adc
pusha
push
jp
call
outs
mov
adc
inc
jns
xor
mov
hlt
fdivr
test
jo
aaa
fs
imul
jo
ins
adc
(bad)
dec
fcomp
add
and
inc
dec
imul
xchg
push
cdq
cmp
push
dec
inc
cmp
and
mov
xchg
push
mul
cmps
pop
jo
inc
pop
inc
dec
inc
dec
xchg
mov
or
push
lods
jg
inc
cmps
cmp
and
inc
bound
push
outs
cmp
or
jno
push
jae
dec
xor
retf
call
push
mov
mov
or
push
inc
xchg
pop
cmp
push
pop
pop
mov
and
or
cmps
add
push
jno
xor
shl
arpl
call
pop
ret
and
cmp
push
jl
add
aam
add
dec
push
xchg
adc
adc
outs
dec
or
push
add
push
mov
pusha
mov
test
gs
shl
inc
test
or
cmp
xor
fs
enter
mov
fcom
test
adc
pusha
es
push
sub
jbe
mov
aad
dec
stos
cmp
and
loopne
movs
or
or
sbb
add
loopne
imul
push
scas
(bad)
jo
imul
pop
adc
fidivr
dec
xor
push
arpl
inc
ins
and
ret
pop
push
cmps
cmp
cwde
loope
xchg
push
xchg
lods
aaa
xor
push
mov
popa
test
inc
add
sbb
sbb
pusha
loopne
sbb
push
pushf
pusha
jl
pop
dec
enter
lock
mov
inc
push
push
js
sbb
or
dec
imul
sbb
stos
xor
adc
es
mov
sbb
dec
dec
and
xor
pop
sub
and
cs
add
leave
mov
push
xor
xor
xor
mov
and
jo
push
mov
dec
push
push
pop
push
mov
push
je
ja
movs
mov
xor
or
push
sub
repnz
and
and
jb
cmps
push
or
outs
lods
mov
nop
xor
sbb
inc
pushf
inc
pop
inc
sbb
das
push
test
jbe
sbb
cmp
push
sub
mov
push
sbb
xor
fsubp
xor
inc
xor
inc
arpl
adc
stos
jecxz
sbb
in
ror
pop
add
cmps
imul
jno
call
cmp
sub
push
mov
mov
push
sub
xchg
adc
in
dec
jle
inc
ins
xchg
cli
add
mov
imul
in
push
inc
push
retf
loopne
push
xchg
add
add
jle
test
aaa
cmp
enter
push
stos
inc
aaa
or
shl
cmp
scas
ds
jmp
dec
dec
test
and
les
ror
dec
(bad)
and
adc
mov
and
je
push
call
xchg
push
xchg
popa
adc
mov
jle
sub
ret
cmp
mov
shl
fidivr
push
push
ds
xchg
jne
fidiv
push
test
sbb
rcr
dec
out
pop
jo
cmp
mov
xor
(bad)
and
ds
pop
sub
push
xor
bound
neg
popa
jo
and
or
push
pop
sbb
push
xor
loopne
mov
loopne
xchg
fdivr
jne
cwde
loopne
sbb
fsub
shr
fld
push
dec
xor
push
and
(bad)
or
inc
rol
xor
inc
inc
dec
into
push
jbe
dec
inc
inc
xor
test
cmps
es
sub
adc
cmps
and
push
push
rcl
adc
mov
dec
push
fs
mov
and
aaa
jae
pop
mov
aaa
push
stos
inc
push
fadd
inc
sbb
jae
sbb
cmp
push
call
mov
outs
jne
jp
ja
sub
cmp
dec
in
outs
mov
xor
xor
dec
inc
push
sbb
dec
mov
sub
test
mov
sub
adc
es
test
inc
adc
inc
(bad)
push
sbb
xor
xchg
ror
push
xor
mov
adc
inc
xchg
adc
dec
adc
js
fdiv
push
push
call
(bad)
jno
push
ss
out
imul
or
(bad)
add
js
mov
mov
inc
outs
ins
dec
add
adc
fsubr
jb
push
(bad)
cld
stos
dec
imul
aad
jle
dec
imul
bound
or
or
sbb
push
test
sbb
test
and
in
push
push
add
and
outs
mov
dec
es
sbb
les
xchg
xor
xor
xor
jo
mov
xchg
ins
scas
into
inc
loopne
lods
sbb
sub
add
adc
xchg
(bad)
dec
mov
adc
xchg
adc
or
dec
dec
out
pushf
ja
cmp
xchg
outs
dec
inc
ins
ret
sbb
push
xor
call
or
cwde
outs
enter
add
test
mov
popa
les
addr16
push
adc
call
dec
cs
clc
les
dec
int3
cli
dec
test
and
inc
jb
dec
sbb
test
(bad)
sub
inc
into
xor
add
and
push
gs
pop
adc
fisub
fdivr
xor
sbb
scas
add
sar
push
dec
jae
jno
dec
cwde
add
jp
or
sahf
loopne
dec
loopne
or
or
je
add
ret
sub
movs
push
(bad)
push
xchg
jns
lods
out
mov
cdq
add
cmp
inc
cmp
cmp
push
and
loopne
out
pusha
imul
dec
imul
sub
pop
and
pusha
fld
retf
or
dec
outs
dec
dec
adc
sub
sub
pop
mov
push
ins
clc
push
push
push
aam
test
dec
push
mov
nop
mov
add
stos
test
xor
push
loope
adc
into
inc
lods
nop
xchg
idiv
imul
dec
(bad)
cmp
repnz
aam
lods
aad
imul
gs
movs
push
mov
xchg
jbe
test
and
jne
aam
jo
sbb
lods
push
push
dec
pop
in
push
push
mov
mov
xor
xor
jbe
data16
lods
inc
or
push
mov
xor
ss
mov
inc
lock
inc
movs
add
cmp
add
lods
int
dec
dec
push
mov
mov
nop
pop
stos
inc
mov
(bad)
outs
mov
test
lods
sbb
pop
ins
push
ret
dec
mov
rcr
xor
and
xor
mov
adc
or
dec
xchg
push
jmp
dec
imul
lock
cs
dec
push
test
mov
adc
outs
test
mov
enter
xor
xor
inc
ins
data16
add
loop
sbb
cld
or
fwait
dec
ds
dec
push
add
inc
adc
clc
fisub
enter
sbb
add
nop
push
imul
dec
push
sub
ds
or
in
inc
inc
(bad)
add
push
ss
adc
cmp
dec
xchg
enter
xor
pusha
or
add
xor
dec
jne
sbb
cwde
xchg
js
mov
mov
fs
imul
je
dec
imul
sub
ins
les
ret
test
add
xor
inc
add
rcr
stos
scas
push
pop
ins
push
jo
or
adc
sbb
jbe
xor
aaa
mov
test
bound
and
and
add
and
push
outs
inc
pop
xchg
mov
fidivr
inc
xor
cwde
ror
inc
popa
inc
jbe
xor
hlt
sub
call
push
cmp
aad
and
and
adc
cld
xor
sub
ins
add
pop
jb
push
jo
pusha
inc
test
inc
xor
add
push
ss
js
ins
dec
mov
add
sar
jo
jae
or
dec
add
adc
xor
push
cli
jl
aam
ja
inc
retf
push
dec
imul
mov
and
xor
or
into
pop
dec
inc
push
inc
sub
addr16
shl
inc
cmp
inc
xor
pop
ins
ins
dec
cmp
mov
adc
add
push
or
arpl
adc
adc
jo
and
es
loopne
and
jbe
ins
pop
adc
push
xchg
adc
add
cli
mov
pushf
(bad)
sahf
shr
dec
mov
dec
ins
cmp
or
shl
mov
bound
test
sub
pop
mov
fsub
mov
add
bound
inc
sub
imul
scas
mov
push
jp
xchg
adc
data16
ficomp
ret
or
call
inc
or
mov
cmps
fisub
push
cmps
dec
xor
adc
es
or
pop
cs
pusha
dec
ror
gs
es
dec
scas
dec
jo
add
push
frstor
dec
addr16
push
or
push
cmp
mov
fisttp
mov
je
dec
mov
adc
pusha
push
in
imul
inc
jp
add
in
adc
fsubr
shl
add
loopne
add
inc
push
inc
ins
sbb
xor
rcl
push
push
in
loopne
into
pusha
and
and
fiadd
lock
loopne
stos
adc
hlt
outs
hlt
dec
fidiv
mov
inc
es
cmp
sub
and
ja
aaa
push
sbb
mov
push
push
lods
retf
push
dec
mov
push
add
adc
pop
call
xor
xchg
and
add
into
jo
or
popa
mov
push
push
push
pop
shl
and
jle
aam
shl
dec
add
bound
dec
cmp
push
and
add
mov
dec
ja
and
xor
push
lods
fdiv
mov
dec
xor
xor
popa
dec
push
or
xor
push
fcom
or
mov
jb
es
loopne
(bad)
push
fs
dec
mov
ja
adc
mov
(bad)
mov
dec
add
adc
call
jo
fs
loopne
jb
aam
mov
push
shr
(bad)
dec
pop
jp
or
ds
outs
push
push
push
rol
add
or
or
in
dec
sub
mov
sbb
pop
jno
push
push
xchg
int3
push
addr16
pop
or
call
push
jae
aam
out
jo
adc
int3
jae
xor
ins
cmp
cdq
and
popa
push
cld
adc
cmp
mov
mov
es
repnz
push
je
xor
sbb
shl
sub
dec
mov
or
mov
test
and
loopne
or
fmul
add
and
or
daa
or
jp
push
mov
dec
cmp
inc
dec
push
push
mov
or
and
ins
imul
je
xchg
xchg
es
mov
out
aam
in
movs
jo
mov
pop
add
pop
cli
xor
aaa
out
push
dec
shl
xor
ja
and
jbe
clc
jae
and
add
das
ds
push
jae
add
add
cmp
jo
imul
cmp
xor
and
pop
adc
ficom
dec
jo
cmps
popa
adc
push
cmp
adc
push
push
outs
mov
cmp
inc
(bad)
mov
or
push
xor
lock
push
dec
or
adc
inc
sahf
aam
xchg
mov
and
or
fwait
dec
nop
call
pop
xchg
xor
dec
stos
push
fsubr
popa
inc
fs
bound
jecxz
jno
and
shl
xchg
push
adc
mov
movs
arpl
push
cwde
xchg
sbb
push
loop
gs
push
inc
push
mov
test
sub
xor
addr16
js
mov
scas
push
fs
adc
add
jb
pop
jmp
push
mov
inc
mov
inc
ret
and
data16
dec
sbb
bound
das
pusha
sbb
xor
movs
adc
add
mov
dec
call
jb
xor
mov
dec
mov
stos
popa
loope
add
out
cmp
add
add
or
push
retf
push
pop
inc
pop
inc
jo
push
sub
push
mov
and
push
sub
je
repnz
test
sub
aaa
sub
sbb
sub
out
push
(bad)
mov
gs
pop
jle
mov
ins
mov
xor
call
mov
cmp
dec
jbe
imul
sar
aad
(bad)
xor
inc
enter
mov
or
(bad)
repnz
xchg
enter
xor
xor
test
cmp
aaa
mov
inc
jne
inc
push
ins
cmp
xor
stos
sub
aaa
ss
clc
dec
popa
ret
cmp
imul
and
out
pop
pop
data16
aam
test
mov
dec
dec
jb
sbb
ins
shl
outs
retf
and
mov
dec
scas
dec
push
add
mov
data16
fldcw
push
mov
fiadd
adc
dec
adc
stos
xchg
add
mov
xor
sub
dec
fsubr
and
test
les
dec
movs
jp
push
add
xor
or
jp
inc
dec
inc
xor
enter
(bad)
fadd
dec
fisubr
add
mov
inc
mov
adc
push
xor
inc
xchg
cmp
inc
push
inc
jmp
and
inc
jb
or
loop
neg
test
xor
sub
mov
jbe
dec
dec
sub
popa
inc
mov
cmps
inc
push
mov
xor
mov
or
jb
adc
test
ins
in
and
(bad)
jmp
xchg
inc
into
idiv
inc
inc
add
fadd
xor
sub
mov
or
and
call
push
ja
inc
mov
fs
inc
mov
and
jb
mov
addr16
neg
mov
push
pusha
sbb
pop
clc
dec
pusha
aad
sub
je
mov
sub
ins
jle
inc
xchg
rol
xchg
xchg
gs
adc
adc
sub
xor
add
ins
or
jo
push
push
xchg
mov
jbe
and
adc
outs
jl
add
in
sbb
xor
mov
jae
xor
xchg
jmp
push
sbb
cmp
ins
sbb
jbe
xchg
ja
push
push
xor
push
cmps
dec
jmp
sbb
ins
loop
sub
fs
lods
adc
dec
jne
add
stos
dec
inc
lods
fst
xor
in
push
ss
retf
add
fs
push
or
hlt
test
jne
push
push
adc
fnstenv
xchg
je
dec
push
scas
jp
and
push
test
cli
rcr
xor
dec
and
es
cmp
or
pushf
shr
ret
push
fdiv
dec
mov
push
mov
nop
outs
ss
in
jbe
shl
fs
sbb
mov
sub
cwde
hlt
js
add
jp
xor
test
fs
inc
cmp
push
sbb
into
add
loop
sbb
xor
(bad)
mov
dec
hlt
inc
test
pop
aad
cmp
xor
and
mul
adc
or
jle
fs
adc
loop
xor
push
dec
jb
mov
push
data16
dec
call
adc
push
mov
retf
mov
push
add
dec
mov
popf
adc
add
jmp
add
imul
add
sbb
nop
xchg
imul
xor
jbe
push
add
enter
nop
cmp
aaa
push
add
add
nop
and
push
pop
jns
xor
xchg
xchg
inc
push
cmp
add
and
dec
inc
stos
cmp
dec
pop
pusha
xchg
sub
inc
jp
test
adc
pop
push
cmp
or
shr
ins
hlt
aam
and
push
xor
fidivr
jno
inc
push
bound
xchg
imul
ror
div
push
pop
adc
inc
or
dec
cs
add
loopne
jno
retf
push
push
push
fst
or
ss
ins
inc
add
inc
xor
push
and
ins
sub
or
cli
xchg
xor
pushf
xchg
add
in
or
jmp
loope
cmp
test
xor
imul
push
ss
add
inc
push
push
xchg
xor
mov
dec
js
adc
test
or
outs
mov
loope
jl
js
pusha
mov
add
fadd
mov
xchg
inc
repnz
push
push
xchg
enter
push
push
mov
dec
inc
add
or
mov
pop
test
bound
add
js
cmp
movs
jle
or
rcr
fiadd
test
mov
adc
aad
dec
rcl
loopne
xchg
xlat
push
fwait
call
imul
or
ror
rcl
push
or
sbb
scas
xchg
add
xchg
mov
push
push
push
dec
mov
push
push
mov
cdq
les
dec
cmp
mov
ret
dec
or
mov
mov
add
add
or
or
test
cs
sbb
inc
ror
mov
imul
adc
and
inc
pop
jbe
inc
fdiv
xor
stos
inc
cmp
into
out
sbb
cwde
ins
push
out
push
or
sbb
or
push
sub
push
dec
mov
sub
sbb
mov
pop
inc
jb
xor
inc
(bad)
adc
scas
push
popa
push
push
xor
bound
xchg
cmp
loopne
xor
sub
rcl
stos
adc
inc
pop
push
push
loopne
dec
add
jb
fs
adc
out
add
mov
mov
imul
adc
add
jb
test
gs
aam
mov
add
test
in
inc
leave
ins
adc
inc
mov
gs
jno
pop
push
and
or
dec
add
popa
hlt
js
cld
mov
xchg
dec
jp
ss
add
adc
fs
call
ins
xor
data16
sub
dec
mov
pop
cmp
and
dec
aam
cmp
fsub
inc
or
lds
inc
mov
jo
or
pop
mov
in
sub
push
dec
adc
data16
xor
(bad)
dec
popa
test
push
xor
inc
fist
inc
and
outs
imul
gs
add
ss
test
pop
loopne
mov
dec
jb
test
bound
ins
je
xor
addr16
mov
pop
push
inc
fidiv
loope
mov
call
or
xchg
jl
pop
int3
or
inc
add
leave
push
cli
push
pop
dec
aaa
dec
adc
dec
call
test
xor
push
add
add
push
test
test
sahf
cmps
ins
add
(bad)
push
inc
dec
push
je
push
fld
push
aaa
inc
inc
sbb
mov
xchg
mov
cmp
push
imul
dec
ror
pop
inc
dec
xchg
sub
aam
enter
add
jl
or
sub
gs
cmp
jno
nop
cmp
push
mov
inc
retf
xchg
xchg
retf
lock
rol
xor
adc
dec
add
cmp
add
fadd
jp
jle
inc
adc
or
aam
rol
jle
or
adc
inc
dec
adc
out
mov
lods
ja
mov
ins
cmp
cwde
sub
dec
and
fs
mov
or
cmp
xchg
or
adc
xchg
bound
sub
push
inc
push
add
pop
es
or
(bad)
dec
in
adc
cmp
inc
add
test
jle
sub
jbe
add
rcl
or
outs
int3
mov
pop
int3
(bad)
jae
mov
sar
ins
cld
sbb
pop
pop
cmp
sbb
push
inc
or
movs
inc
pop
jl
popa
sbb
ins
mov
xchg
push
inc
test
push
les
test
test
ret
pop
imul
ins
dec
push
adc
adc
push
(bad)
aaa
mov
add
mov
sub
dec
aad
add
shr
push
ds
add
ss
push
xchg
sub
mov
push
(bad)
push
sub
pop
inc
add
mov
mov
dec
jo
in
stos
pop
inc
jmp
push
jno
add
xchg
clc
jo
dec
xchg
push
and
inc
fldcw
movs
out
mov
push
mov
dec
dec
push
push
sbb
dec
es
jbe
adc
movs
dec
add
clc
test
xor
push
jne
xor
aaa
cwde
pop
jbe
xor
fs
inc
ja
sub
cs
scas
inc
cs
dec
or
ins
and
adc
xor
add
and
xor
xor
push
pop
xchg
inc
jmp
cmp
mov
cs
cli
push
pop
xor
xchg
pushf
adc
adc
fisub
inc
imul
loopne
or
je
mov
add
mov
xor
sub
push
mov
bound
and
shr
in
inc
arpl
imul
push
lea
push
retf
sub
push
mov
ins
test
push
adc
scas
sbb
and
mov
push
sub
inc
cmp
and
or
cmp
je
test
cmps
stos
pop
push
or
and
or
ins
inc
adc
dec
or
jb
and
or
cld
push
mov
nop
add
add
mov
sbb
xor
push
ret
xchg
xchg
repnz
rcr
mov
xchg
adc
dec
inc
movs
xchg
or
inc
or
ss
into
jo
dec
fadd
data16
ins
jb
add
shr
jb
dec
cld
aad
inc
mov
je
dec
push
mov
test
ins
inc
and
dec
sbb
push
inc
call
mov
popa
lock
sbb
push
add
sub
xor
xor
or
imul
xchg
xor
push
aam
xor
pop
mov
bound
loopne
popa
sub
xor
cwde
sbb
jp
inc
sub
ins
ins
inc
push
push
pusha
test
sub
jo
shl
push
mov
test
popa
aas
push
fs
lods
sbb
ins
xor
arpl
dec
retf
mov
add
test
push
cmps
and
sbb
(bad)
into
xor
or
inc
fidiv
into
dec
js
test
hlt
ss
jb
and
test
jbe
push
adc
aam
jb
push
fcom
fcom
push
adc
push
push
or
pop
adc
adc
push
cmp
sub
(bad)
adc
imul
dec
cwde
push
and
xor
(bad)
dec
sbb
or
(bad)
sub
push
imul
adc
dec
push
jno
adc
je
add
and
inc
inc
and
add
inc
test
into
aam
xchg
dec
and
jb
test
outs
pop
cld
xor
jne
jns
jne
test
or
adc
add
push
sub
adc
push
jbe
inc
pop
data16
add
nop
or
and
arpl
push
dec
mov
loope
inc
mov
add
dec
ror
or
sub
ficom
dec
fs
push
mov
aad
push
ins
mov
push
inc
fcmovbe
sub
inc
out
data16
inc
fst
inc
fadd
push
int3
inc
je
or
loope
and
sbb
jl
sbb
xchg
add
enter
fwait
call
fld
repnz
aam
push
mov
daa
rcl
push
xor
js
test
in
pop
test
inc
push
data16
lea
or
je
js
dec
adc
push
xor
cmp
sub
rcl
add
pop
outs
pop
fdivr
push
stos
push
add
dec
loopne
mov
clc
enter
xchg
push
jb
dec
adc
jb
dec
xor
arpl
jb
scas
xchg
popa
push
push
inc
fs
push
inc
aaa
fdivp
or
sub
test
inc
add
pop
cmp
ins
adc
mov
imul
mov
mov
and
push
mov
nop
stos
cmp
or
add
adc
add
and
jbe
jo
fisubr
push
pop
popa
push
cmps
jno
jo
lds
jne
xor
in
sbb
dec
dec
dec
call
xchg
fcomp
mov
dec
push
hlt
push
inc
jae
dec
add
jno
outs
mov
fisttp
adc
popa
mul
inc
inc
test
push
imul
mov
mov
cmovle
pop
mov
push
and
je
mov
sbb
enter
ins
inc
ins
add
xor
add
mov
or
mov
cmp
bound
aam
and
push
or
cmp
in
xor
jno
mov
fisub
mov
pop
jae
cmp
push
xor
cwde
mov
outs
out
mov
xchg
fdiv
adc
dec
ins
aam
mov
dec
push
mov
dec
scas
lds
and
aam
ja
movs
sub
call
inc
fs
inc
jb
fwait
sbb
in
push
or
xor
scas
mov
clc
ins
jno
pusha
mov
repnz
add
add
outs
dec
fadd
mov
loopne
adc
or
test
loop
dec
pop
fwait
or
jo
mov
inc
ss
mov
xchg
ins
ss
push
push
cwde
dec
inc
add
rol
add
xchg
mov
imul
inc
inc
or
cli
inc
add
shr
or
jo
loop
push
fidivr
hlt
call
call
dec
stos
jl
cs
mov
dec
call
test
push
(bad)
adc
test
push
pop
mov
xor
push
xor
mov
push
or
mov
inc
call
es
xchg
add
out
push
xchg
int3
pop
mov
inc
jb
gs
bound
push
test
pushf
clc
cmp
xlat
ins
inc
test
test
data16
movs
movs
add
mov
inc
add
inc
int3
ins
inc
jmp
inc
ret
xor
or
adc
xor
sub
mov
xor
pop
lock
dec
pushf
outs
inc
dec
movs
or
imul
inc
dec
push
push
inc
adc
loopne
movs
add
stos
xor
mov
ins
or
mov
lods
add
fidiv
xor
inc
dec
inc
inc
mov
stos
inc
in
data16
sbb
pop
popa
pusha
scas
sbb
push
retf
adc
add
xor
(bad)
push
push
aam
or
sbb
mov
mov
mov
inc
inc
jb
xchg
mov
push
dec
sub
js
jb
js
jmp
inc
mov
mov
bound
mov
push
cmp
adc
mov
xor
sub
dec
add
push
ss
jp
ror
cdq
test
inc
push
sbb
dec
push
or
test
mov
and
mov
push
mov
outs
inc
push
imul
cmp
rol
push
cmp
cli
dec
data16
add
bound
add
and
pusha
es
pop
movs
shr
inc
lods
inc
add
test
out
gs
pusha
sahf
outs
push
or
imul
fs
mov
cmps
push
popa
and
js
push
retf
xchg
sbb
fs
fadd
add
inc
mov
inc
cld
mov
movs
js
call
cs
jno
test
inc
and
in
stos
bound
or
mov
mov
dec
shl
arpl
sbb
and
and
mov
xchg
jne
mov
outs
mov
sub
pop
xchg
or
(bad)
pop
push
pop
push
inc
cmps
sub
pop
not
xor
adc
jb
fsubr
rcl
popa
sub
adc
push
mov
dec
jo
sbb
dec
xor
imul
fadd
inc
or
jno
xor
add
ret
inc
loop
ret
inc
popa
xchg
xchg
ss
xchg
(bad)
outs
fadd
xor
xor
and
jle
inc
xchg
xchg
mov
jbe
bound
or
test
cli
dec
push
xor
sub
ja
mov
jle
ficom
fs
add
mov
sbb
or
push
fldcw
dec
mov
push
and
xor
push
xor
push
imul
push
pop
push
cmp
push
hlt
ins
mov
mov
adc
inc
mov
inc
ja
leave
sub
cmp
cld
not
test
popa
ficomp
mov
or
loopne
and
fcomp
inc
aaa
in
rcr
sub
sub
ins
cmps
push
adc
xor
jbe
and
push
mov
rcr
ins
xor
test
and
adc
or
mov
sbb
cmp
push
movs
push
js
and
shl
mov
loopne
pusha
adc
in
gs
outs
mov
and
ins
mov
jns
and
(bad)
push
inc
push
push
inc
(bad)
or
push
shl
loopne
rcl
inc
push
sub
fcom
fcom
adc
push
xor
pop
xchg
xchg
sub
adc
xor
sub
loope
jne
pop
js
sbb
or
dec
nop
jo
popa
test
inc
mov
dec
inc
push
jns
add
imul
dec
sub
jp
aaa
cwde
lods
cld
add
jno
mov
mov
sbb
ds
mov
push
xor
sbb
and
dec
inc
in
imul
nop
rcl
mov
in
inc
and
cmp
les
pop
mov
inc
push
(bad)
mov
popa
xor
inc
popa
dec
loopne
pop
dec
xor
push
mov
ins
es
mov
dec
inc
add
xchg
imul
aaa
push
es
mov
fcom
je
inc
out
add
je
push
arpl
mov
(bad)
mov
pop
dec
mov
imul
push
adc
fs
xor
lods
xchg
je
inc
jae
adc
dec
inc
outs
or
inc
adc
dec
outs
cli
or
test
jns
ja
fidiv
dec
nop
outs
sub
inc
test
es
xor
push
or
sar
push
jno
add
bound
pop
sbb
add
xchg
adc
cmp
mov
stos
xchg
and
and
xlat
stos
fwait
test
dec
push
mov
retf
mov
nop
add
rol
ja
ins
ins
pop
aaa
xor
das
data16
js
dec
push
sub
jo
fs
xchg
mov
pop
sub
sub
inc
adc
stos
sub
and
xchg
pop
push
xadd
push
fs
dec
adc
adc
inc
fcom
jo
xor
fidiv
imul
push
(bad)
ret
xchg
add
in
inc
addr16
adc
cmp
sbb
inc
mov
ss
add
fild
sbb
int3
xor
add
scas
sub
mov
pusha
shl
or
dec
jbe
data16
inc
sbb
into
(bad)
push
adc
dec
pop
add
fsub
adc
ficom
mov
shl
adc
inc
outs
dec
sub
adc
adc
and
clc
push
inc
shr
push
hlt
jo
sahf
ss
xchg
enter
xor
mov
sub
test
pusha
cld
cmp
cmc
or
stos
call
mov
inc
lea
push
and
mov
push
outs
test
add
fcomp
inc
pop
les
mov
pop
adc
pop
mov
les
in
push
push
scas
sub
xor
xor
sub
hlt
and
aaa
push
dec
push
imul
push
mov
mov
sbb
and
cwde
call
cwde
or
call
sbb
mov
or
mov
jl
xor
add
dec
add
cmp
adc
inc
sub
pop
xchg
dec
rol
push
pop
dec
dec
outs
push
ret
and
add
frstor
inc
push
adc
adc
push
pusha
adc
inc
je
add
mov
sub
xchg
pushf
inc
mov
outs
pop
inc
inc
push
je
rol
in
sbb
push
outs
in
ss
sbb
inc
fld
xor
jno
test
sbb
sub
loopne
push
inc
ins
inc
sub
dec
add
push
cmp
inc
inc
and
aaa
push
pushf
dec
add
out
xor
add
out
ficomp
sbb
jne
gs
ins
and
fsub
mov
push
imul
dec
fs
loope
movs
sub
inc
push
or
sbb
push
pop
dec
ss
adc
add
ret
cmp
mov
cwde
add
push
xor
es
and
stos
and
js
outs
inc
inc
inc
shr
xor
cwde
inc
inc
or
pop
xor
adc
xchg
mov
int3
or
dec
mov
xchg
fsub
sub
mov
add
push
xchg
mov
mov
rcr
ins
dec
add
xchg
inc
bound
xchg
add
stos
inc
push
xor
push
sub
add
push
inc
daa
enter
dec
loopne
cmp
sbb
hlt
jno
mov
and
and
jbe
dec
xor
test
jae
leave
and
aaa
dec
push
add
int3
je
or
push
push
add
adc
inc
test
sub
mov
add
js
fcomp
pop
jne
fcomp
je
xor
or
sub
dec
sub
xor
jae
cwde
sbb
inc
dec
mov
or
push
cmp
mov
pop
mov
cmp
(bad)
sub
xor
dec
bound
fs
or
or
xchg
xor
dec
add
adc
test
sub
push
xor
stos
xor
scas
push
cmp
and
and
and
pusha
cmp
ror
dec
ins
fsubr
and
push
jo
jns
fs
mov
mov
fcom
mov
sub
div
jae
and
mov
xchg
add
add
popa
sbb
add
fcmovb
push
add
push
fidivr
add
bound
dec
adc
push
imul
and
push
call
cmp
jae
rcr
push
loopne
push
xor
and
add
add
test
xor
test
mov
cmp
or
or
rcl
mov
push
ins
fdiv
xchg
xor
adc
xchg
nop
test
dec
lods
push
push
inc
cdq
xor
nop
call
xor
popa
ins
movs
ins
and
mov
dec
and
cld
push
dec
sar
ss
test
xor
lods
pop
dec
or
or
stos
mul
jmp
movs
push
dec
or
jl
adc
inc
cmp
inc
dec
xor
inc
jb
push
mov
push
sub
dec
popa
inc
call
test
push
sbb
push
push
sub
data16
push
add
mov
nop
inc
xor
and
es
ds
sub
cmp
add
jo
push
xchg
push
pop
inc
in
xor
ret
push
mov
lods
pop
jb
lods
es
adc
pop
xor
lods
js
dec
nop
inc
popf
mov
push
mov
dec
dec
push
inc
sub
push
ins
sbb
and
pop
add
push
push
push
inc
sbb
jno
mov
imul
fimul
xor
inc
adc
push
push
adc
repnz
cmp
pop
jae
or
imul
push
inc
dec
inc
push
inc
aad
addr16
int3
jno
and
add
push
push
movs
cs
and
inc
pop
inc
sbb
xor
enter
adc
xchg
push
mov
or
adc
loopne
xor
inc
ret
imul
movs
sub
ds
adc
adc
scas
loopne
push
pop
(bad)
cmp
mov
cwde
sbb
sbb
pop
push
(bad)
push
xor
jo
xor
push
int3
imul
aam
pusha
inc
(bad)
test
add
mov
push
jmp
dec
sub
adc
ret
arpl
dec
dec
cmp
pop
and
push
xor
enter
cmps
push
sub
and
bound
ins
push
jmp
test
jp
aam
adc
push
test
xor
mov
lea
mov
dec
data16
mov
clc
add
arpl
fs
add
dec
push
sbb
and
add
xor
je
repnz
pop
data16
inc
outs
inc
lea
and
push
add
xor
leave
imul
retf
and
sbb
mov
pop
cmp
push
ins
inc
mov
jl
call
outs
or
sub
inc
dec
dec
push
call
adc
push
int3
dec
cmps
or
sub
loope
add
sbb
push
mov
rcl
in
add
fisub
movs
push
ror
cmp
push
xchg
pop
popa
jo
push
xchg
push
or
ss
sbb
test
add
data16
js
add
push
pusha
sub
pusha
mov
enter
pop
enter
add
inc
xor
sub
movs
mov
outs
cld
inc
ins
push
add
stos
imul
sub
or
or
aaa
movs
push
jl
ds
inc
inc
sub
and
sub
test
ss
(bad)
push
cdq
test
adc
dec
jae
sbb
push
inc
or
leave
fidiv
add
sub
cmps
dec
sub
inc
xor
ret
sub
scas
mov
inc
xor
bound
mov
adc
inc
daa
adc
inc
in
adc
jle
daa
dec
cwde
dec
push
inc
mov
mov
or
or
xchg
or
cwde
stos
inc
imul
int3
(bad)
inc
add
scas
pop
lods
shl
inc
and
dec
cmp
shl
mov
push
adc
je
add
inc
sbb
gs
jb
xor
add
inc
sbb
popa
xchg
sub
data16
clc
shr
xor
sub
nop
mov
mov
xchg
and
fsubp
or
int3
and
dec
cmp
stos
adc
jp
inc
xchg
shl
xchg
enter
movs
push
cwde
push
sbb
int
dec
in
call
or
mov
mov
push
test
mov
xor
xor
cld
ret
jbe
dec
jbe
jmp
dec
fs
pop
mov
sbb
pop
push
dec
sbb
inc
cmp
gs
and
ss
or
adc
mov
out
movs
mov
mov
hlt
pop
add
sbb
ds
dec
les
fadd
mov
rol
xor
or
dec
or
nop
adc
dec
push
jmp
jle
stos
push
mov
xor
push
jb
dec
shl
push
ins
and
mov
cli
cmp
stos
mov
adc
sub
push
inc
fst
add
and
mov
pusha
in
test
dec
fcom
mov
add
xchg
inc
jp
pop
in
push
icebp
ins
push
dec
dec
bound
fimul
ss
pop
js
jbe
data16
xor
inc
movs
(bad)
sbb
or
push
aaa
loopne
test
aam
xchg
sub
loope
ss
aaa
inc
and
add
bound
lock
dec
retf
pop
ins
jae
push
lods
or
and
cmp
fwait
mov
addr16
push
xor
xor
inc
push
add
and
mov
mov
sub
dec
ins
(bad)
add
movs
gs
loop
add
sbb
push
jo
push
push
or
(bad)
hlt
jo
shr
xchg
mov
adc
sbb
mov
inc
jo
push
xor
ss
push
xor
push
dec
stos
xor
or
xchg
sub
dec
out
dec
repnz
inc
or
cld
inc
adc
adc
mul
jle
sub
xchg
je
jbe
icebp
add
xor
mov
loopne
pop
push
(bad)
xor
push
xchg
mov
int3
push
pushf
call
addr16
jp
add
int
inc
push
inc
ret
or
sub
data16
mov
or
arpl
dec
dec
inc
mov
xchg
adc
adc
jo
jp
retf
rol
loop
mov
sub
sub
stos
inc
xchg
mov
xchg
push
inc
and
sub
cmp
push
or
inc
sub
pushf
jb
cmp
dec
test
mov
adc
out
xor
ds
jp
push
push
dec
fsub
add
xor
push
dec
test
cmp
add
jne
ins
dec
rol
arpl
push
mov
ins
bound
les
add
(bad)
dec
ss
dec
mov
mov
scas
xchg
aam
pop
dec
push
into
aaa
push
xor
ds
not
test
into
inc
jbe
cmp
sub
and
mov
test
or
test
xor
outs
sub
xor
int3
ins
aam
movs
cmp
or
es
push
or
cmps
jo
xor
fcom
and
adc
jo
xor
inc
mov
inc
addr16
call
cmp
inc
or
test
lods
inc
test
push
mov
dec
push
push
popa
pop
add
(bad)
imul
sub
ret
sbb
add
shl
test
outs
(bad)
cmp
pop
or
test
cli
inc
or
cs
fs
or
push
sahf
and
push
push
xor
jo
add
ss
inc
sbb
add
xchg
mov
test
je
cmps
stos
mov
ds
push
pop
mov
adc
test
mov
push
pop
sbb
adc
inc
inc
inc
mov
inc
add
test
push
and
push
xor
mov
add
and
and
inc
adc
xor
nop
or
add
pop
and
jae
push
je
mov
push
pop
data16
inc
call
inc
stos
lods
fld
jmp
inc
ds
jp
xor
push
sub
clc
pop
cmp
js
mov
imul
lea
sbb
xor
and
dec
mov
sahf
int3
mov
sub
push
pusha
or
xchg
nop
xchg
mov
call
and
outs
cmps
or
inc
mov
dec
shl
ins
ret
and
call
push
pop
adc
pop
add
add
jae
jle
push
fdiv
or
xor
push
js
push
shl
adc
pop
test
dec
or
and
ins
sub
retf
inc
adc
push
scas
xchg
loopne
mov
dec
pusha
xchg
push
dec
xor
scas
add
sub
aam
dec
or
mov
or
sub
jp
adc
sub
imul
(bad)
enter
ret
jmp
dec
adc
adc
adc
dec
inc
mov
dec
dec
lods
sahf
popa
or
or
jbe
bound
shl
dec
aam
inc
dec
ds
ficom
les
add
js
mov
cwde
js
outs
out
or
mov
pop
add
or
add
xchg
fsubp
push
dec
call
inc
add
cmp
jbe
jb
add
dec
cli
lods
adc
jl
ins
inc
cmp
or
cmp
dec
mov
cmp
xchg
stos
mov
push
pushf
push
js
jo
stos
xor
mov
inc
je
inc
xchg
leave
add
rcl
push
inc
add
ja
test
inc
pop
cmp
fimul
adc
dec
add
xor
mov
mov
xor
push
cmp
(bad)
fdiv
mov
js
(bad)
ss
sub
sbb
enter
int3
test
ds
mov
test
mov
data16
xor
push
and
js
imul
outs
(bad)
adc
push
inc
xor
clc
outs
inc
pusha
cmp
xchg
inc
fisub
adc
sub
xchg
or
add
mov
inc
fsub
push
jp
lea
jp
call
dec
sub
dec
and
add
rcl
je
xchg
or
push
dec
xor
xchg
fdiv
push
jns
dec
sub
pop
icebp
gs
add
jb
aaa
dec
xchg
add
int
test
dec
jo
arpl
scas
imul
inc
or
or
xor
or
inc
hlt
xor
popa
enter
pop
popa
lea
push
cwde
jno
cmp
push
dec
jmp
push
test
and
sub
add
jo
sbb
inc
dec
shl
bound
loop
pop
or
gs
and
popa
pop
fs
dec
xor
mov
dec
ins
stos
pop
cmps
mov
call
xchg
ret
push
jae
test
ins
loopne
sbb
call
push
inc
cmp
xor
fiadd
push
add
xor
xchg
inc
fimul
cmps
xchg
xor
shl
aam
push
data16
xor
add
rcr
jb
xchg
or
sbb
lds
adc
xor
fisub
inc
sub
ss
or
inc
sbb
pop
outs
mov
or
outs
push
xor
es
data16
pop
dec
adc
inc
inc
push
sbb
push
ja
sub
in
or
loop
sub
out
js
sar
cmp
ins
inc
sub
aaa
xor
mov
es
jle
push
push
dec
popa
xchg
dec
mov
jo
or
aaa
push
loop
nop
loop
dec
scas
aaa
dec
xor
dec
or
jl
add
popa
dec
rcr
add
jns
call
sbb
mov
xchg
sub
mov
test
mov
call
outs
sbb
cmp
mov
inc
rcl
inc
imul
and
(bad)
cmps
add
xchg
sub
pop
inc
xor
js
pop
outs
sahf
inc
or
jp
jae
es
push
mov
add
loop
xchg
movs
push
and
dec
ja
push
add
add
mov
mov
pop
xor
bound
xor
adc
(bad)
mov
and
sub
push
test
aam
or
sub
test
inc
xor
dec
xor
pushf
mov
loopne
adc
or
inc
add
aaa
shr
add
lea
push
ret
mov
mov
pusha
jne
dec
inc
dec
jo
outs
sub
sbb
test
sbb
sbb
push
jae
jb
dec
daa
shl
or
or
adc
sbb
xor
and
sub
test
mov
mov
test
sbb
pop
sub
add
bound
rcl
adc
mov
and
adc
mov
out
test
test
in
stos
and
push
mov
add
call
mov
cmp
dec
nop
jb
loopne
push
sbb
inc
sbb
and
cwde
sub
ficom
xchg
mov
outs
sub
adc
pop
jb
xor
push
inc
imul
dec
push
in
cwde
xor
add
div
shl
and
xchg
mov
pusha
sub
add
jp
add
gs
or
push
mov
out
mov
pop
mov
xor
mov
dec
ror
or
cmp
lea
inc
(bad)
xor
data16
loop
lods
mov
sbb
add
adc
jne
sbb
fs
popf
push
or
inc
sbb
je
sbb
pop
enter
pop
inc
xor
mov
xchg
sbb
mov
mov
inc
ss
sbb
ins
push
repnz
stos
jno
fwait
dec
or
js
push
movs
dec
shl
adc
test
(bad)
sbb
adc
popa
and
xchg
in
hlt
add
and
test
ficom
pop
test
or
outs
xchg
ins
or
inc
sbb
add
shl
cmp
retf
leave
add
push
sbb
out
imul
pop
push
outs
or
pop
arpl
mov
cmp
dec
lock
add
dec
rol
call
adc
dec
pusha
mov
mov
xor
push
cmp
xchg
ins
push
push
nop
inc
push
int3
inc
cld
add
inc
mov
push
ins
ret
inc
arpl
mov
pop
add
xor
aad
test
int3
jbe
adc
pusha
xchg
xor
push
adc
or
jb
xchg
mov
xor
dec
dec
pop
sub
bound
or
add
ds
adc
push
add
inc
or
or
jne
adc
dec
mov
ret
inc
inc
jne
ins
mov
cmp
jmp
or
push
leave
cs
jo
push
sahf
outs
sbb
mov
fadd
je
ret
and
xchg
movs
je
add
lods
leave
les
cmp
lods
push
or
pusha
outs
xchg
or
sahf
ins
dec
pop
inc
shl
les
or
or
dec
inc
xchg
and
sbb
or
xchg
sahf
add
sub
xor
cdq
test
nop
xor
jo
push
fmul
mov
inc
xor
imul
inc
ror
add
push
xor
pushf
push
push
adc
or
adc
add
test
add
cmp
out
fst
sub
ins
mov
inc
sbb
inc
mov
sub
mov
sbb
jae
or
daa
or
push
and
or
add
test
shl
cdq
fmul
cmp
ss
ins
mov
dec
xchg
dec
pop
bound
push
enter
and
(bad)
push
gs
xor
adc
add
mov
dec
arpl
dec
data16
xor
fs
dec
and
rcl
add
add
and
adc
inc
xor
movs
scas
cmp
xor
and
adc
popa
mov
xor
add
ret
mov
ss
or
dec
push
add
inc
add
inc
sub
xor
test
mov
adc
nop
push
ror
inc
xor
push
dec
jbe
xor
push
adc
jl
dec
dec
or
movs
inc
or
xchg
inc
in
mov
add
xor
push
xor
fiadd
adc
push
pusha
dec
cwde
fiadd
push
imul
xchg
test
and
and
and
bound
loopne
push
imul
push
xchg
inc
sbb
inc
jb
pop
inc
gs
fdiv
and
mov
bound
test
dec
inc
push
bound
xor
pusha
mov
movs
pusha
cld
push
xor
pusha
test
js
dec
and
push
dec
push
xchg
fisub
test
cmp
jbe
inc
inc
ds
or
es
jmp
jp
cld
push
and
push
pop
aam
loop
push
dec
dec
jp
movs
push
and
jl
shr
and
mov
xor
and
fdivr
sar
mov
scas
je
inc
retf
push
dec
rcl
and
imul
movs
js
add
sbb
and
hlt
push
mov
or
xor
and
inc
adc
cwde
in
inc
jno
mov
cli
ret
pushf
popa
dec
jl
ins
inc
add
aam
sub
je
inc
shl
push
dec
push
xor
inc
xor
adc
shl
sbb
jae
inc
mov
and
jb
jbe
mov
je
jae
dec
sub
sbb
pop
dec
inc
cld
xor
imul
jmp
cmps
push
adc
or
cmps
les
sar
call
dec
add
push
push
push
aam
data16
add
mov
xchg
push
xor
test
add
cs
xchg
cmps
and
mov
adc
cdq
aam
pusha
pop
dec
aam
dec
cwde
add
inc
mov
es
in
scas
inc
xchg
add
(bad)
pop
and
je
inc
les
dec
jo
pop
fimul
push
je
movs
mov
xchg
sub
mov
retf
push
and
aam
int3
mov
nop
pop
pop
inc
outs
inc
jne
jb
xor
jo
push
mov
stos
push
call
pushw
jmp
in
dec
or
push
pop
mov
add
and
cs
xchg
fsub
sub
dec
xchg
adc
add
dec
adc
inc
xor
cmp
mov
addr16
dec
je
xor
and
dec
cmp
add
jp
dec
sbb
or
mov
ins
shl
xchg
or
sbb
addr16
mov
pop
loopne
xor
cld
push
sbb
pop
or
arpl
cmp
xchg
add
xor
sbb
cmp
mov
int3
add
push
pop
adc
inc
or
jp
ja
dec
stos
enter
dec
mov
add
dec
fs
or
mov
or
adc
add
arpl
pusha
add
enter
or
add
inc
ret
repnz
fimul
or
ja
inc
xor
ins
dec
mov
push
push
push
push
push
pop
xchg
add
int3
push
xor
or
adc
xchg
pop
imul
daa
mov
imul
adc
shr
xchg
add
out
xor
xchg
adc
movs
push
inc
enter
xchg
xchg
xor
clc
rol
jne
mov
cmp
pusha
adc
cdq
imul
adc
push
xor
xor
mov
sub
ds
mov
mov
push
mov
adc
mov
adc
gs
(bad)
enter
dec
dec
je
pusha
mov
add
mov
push
test
shr
fiadd
ins
leave
and
icebp
dec
push
ja
or
bound
xor
movs
mov
push
test
adc
fs
sbb
dec
push
push
adc
rol
sbb
pop
rol
or
inc
and
xor
jno
call
fsubr
cmp
retf
push
jo
adc
test
push
sub
sahf
push
movs
popa
and
(bad)
xchg
stos
and
push
and
add
cmp
xchg
shl
xor
inc
imul
push
sbb
lahf
adc
jb
out
outs
adc
inc
inc
jp
imul
ins
test
jo
xor
jp
dec
sub
or
pop
pop
bound
inc
inc
mov
sbb
xor
or
xor
add
sub
jb
jp
mov
cmp
add
inc
mov
mov
sub
fs
push
adc
add
sbb
jb
cmp
adc
ror
push
sub
call
stos
push
jp
push
jne
xor
pusha
dec
dec
aaa
cmp
(bad)
jmp
fild
out
xor
and
dec
mov
dec
push
cwde
push
mov
mov
ficom
test
adc
or
popa
xchg
xor
inc
and
aam
enter
sbb
fcom
je
shl
jle
push
push
inc
loop
cmp
pop
inc
xor
in
adc
rcl
inc
mov
and
fs
dec
and
in
nop
cmp
shl
push
in
cmp
push
jb
(bad)
adc
and
adc
sub
dec
dec
push
call
in
jl
in
loope
into
cld
xor
xchg
inc
push
xchg
dec
xchg
mov
xor
ficom
jo
or
xor
shl
dec
dec
fisttp
add
push
inc
dec
xor
mov
ins
or
push
out
je
xchg
rcl
push
cwde
sbb
push
es
pushw
dec
mov
add
xor
daa
pop
sahf
leave
rcl
push
inc
mov
or
adc
cmps
ret
push
dec
sub
clc
or
push
push
test
retf
and
inc
pop
nop
dec
and
and
or
not
inc
movs
je
sub
imul
xor
xor
sub
jo
or
adc
cmp
jo
test
sub
test
shl
pop
dec
xor
sub
cdq
sbb
test
clc
inc
sub
test
or
push
add
hlt
cli
retf
or
test
inc
cwde
mov
mov
dec
sub
xchg
push
aaa
dec
cmp
sahf
dec
adc
mov
sbb
inc
mov
cmp
push
loop
outs
mov
cli
add
inc
or
cmp
out
push
mov
add
jbe
pop
and
pop
js
jbe
pusha
aam
sub
shr
xor
xchg
mov
outs
ins
push
push
dec
add
cwde
xor
add
add
xor
dec
loopne
add
push
js
sub
pushf
mov
in
xor
add
xchg
dec
mov
bound
inc
div
cmp
ins
lods
mov
ja
outs
dec
ret
and
inc
inc
shl
outs
pop
lods
pop
dec
sbb
(bad)
fs
gs
dec
add
add
inc
mov
mov
ret
jbe
pop
mov
or
mov
xchg
and
es
rcl
fisubr
inc
mov
ror
bound
or
inc
int3
inc
sbb
stos
xor
add
mov
xchg
inc
push
push
sahf
ret
rol
xor
dec
fadd
mov
add
outs
adc
xchg
adc
dec
ins
push
and
es
mov
push
xchg
push
push
push
sub
mov
sub
cmp
cmp
mov
inc
mov
and
dec
je
inc
inc
jp
repnz
jbe
scas
push
inc
add
jae
push
hlt
push
push
or
xor
mov
push
xchg
add
retf
cmps
rol
cs
xor
nop
or
bound
inc
out
fs
popa
enter
xor
movs
adc
dec
ror
push
dec
push
out
cmp
jo
dec
or
push
and
inc
cs
inc
int3
inc
mov
xchg
xor
stos
je
lods
mov
sbb
jne
push
dec
add
stos
popa
adc
sub
push
mov
jmp
xchg
ss
data16
push
loop
pop
cmp
or
or
cmp
sbb
or
mov
aam
inc
mov
aas
ss
push
fs
ss
push
jae
xchg
sbb
push
clc
or
fs
ins
rcl
imul
dec
dec
fcom
rcr
jbe
int3
inc
xor
aaa
sub
dec
lds
bound
pop
imul
ret
dec
xor
inc
int
es
loopne
and
sbb
push
sub
jb
cwde
cmp
ja
xchg
ret
inc
push
movs
dec
dec
add
mov
lea
cs
pop
xor
xor
cmps
movs
into
xchg
fwait
cs
fcomp
push
jae
sbb
(bad)
or
stc
pop
dec
xor
cmp
test
adc
inc
imul
je
push
add
inc
pusha
jmp
cmps
push
je
adc
dec
(bad)
enter
dec
inc
adc
sub
sub
inc
aaa
test
xchg
ret
push
inc
inc
inc
nop
cmp
xchg
lods
cmp
xor
inc
xor
mov
ss
arpl
push
stos
and
xchg
(bad)
ficom
fs
push
retf
in
cmp
mov
cwde
push
or
mov
push
js
ins
fisub
fiadd
bound
push
mov
xor
ja
pop
jo
add
loopne
out
inc
inc
dec
sbb
jbe
sub
dec
cli
jb
dec
jmp
dec
cli
inc
xor
push
sbb
pop
dec
xor
push
pop
push
mov
inc
cwde
pop
mov
test
ss
nop
dec
cs
aam
mov
jp
inc
jne
inc
arpl
mov
xor
xor
out
adc
or
dec
inc
and
sar
push
mov
pop
mov
xchg
mov
mov
and
cmp
sub
or
movs
mov
push
sbb
jp
test
or
(bad)
ja
dec
and
xchg
ror
data16
mov
jns
pop
xchg
or
fadd
cli
fcom
sub
int3
dec
mov
mov
sub
mov
test
les
adc
ss
inc
add
cmp
push
loopne
jp
or
data16
dec
aam
bound
shl
outs
cwde
shr
les
push
xor
dec
push
inc
cwde
add
push
pop
push
pusha
add
inc
or
push
or
shl
jl
js
add
test
sahf
adc
cwde
les
addr16
inc
xchg
sub
pusha
xor
add
nop
xor
es
sub
sub
fimul
pop
push
and
cli
repnz
mov
sbb
ins
ja
or
scas
or
test
mov
mov
jbe
add
pop
scas
xor
xor
inc
or
push
and
push
stos
jb
cmp
int3
mov
call
cmp
sahf
inc
into
add
inc
jle
inc
mov
inc
inc
dec
and
push
dec
and
xor
mov
test
add
pop
js
bound
push
or
mov
and
(bad)
xor
push
adc
mov
push
add
popa
jp
mov
adc
xor
jb
push
stos
nop
inc
or
push
cmp
sbb
movs
push
rol
cwde
bound
xchg
adc
xchg
xchg
push
adc
xor
cmp
fadd
adc
pop
push
mov
mov
jp
jb
xor
dec
push
jl
mov
jns
push
sub
xor
ins
sbb
imul
xchg
push
inc
xchg
outs
and
push
add
ins
adc
push
or
pop
stos
xor
dec
xchg
push
inc
xor
inc
push
add
enter
cld
push
or
mov
mov
add
movs
sbb
sub
or
xor
loopne
xor
dec
aaa
dec
jns
bound
inc
pop
cmp
push
inc
xchg
sbb
dec
inc
pusha
ins
sub
xchg
shl
retf
add
outs
push
sahf
data16
xor
shl
sub
dec
lock
inc
push
inc
adc
arpl
mov
dec
push
or
sbb
rcl
(bad)
aam
sub
mov
jmp
and
push
cmp
rol
sub
push
pop
and
in
push
test
add
fsubr
and
mov
fsub
sahf
js
inc
adc
add
push
push
xor
dec
cmp
inc
sub
xchg
mov
dec
cld
repnz
and
lock
adc
ins
push
jb
dec
add
and
cmp
inc
mov
les
shr
push
(bad)
hlt
popa
inc
xchg
fidivr
push
xor
popa
imul
inc
xor
fidivr
fild
dec
adc
shl
adc
xor
add
fs
mov
and
cmp
js
cmp
inc
dec
bound
out
push
and
mov
sub
ins
or
xor
push
add
ins
push
shl
add
lock
cs
ins
jb
mov
and
jl
add
push
jno
xchg
mov
or
fst
test
sbb
nop
xor
dec
push
sub
and
push
and
out
ins
cmp
loop
(bad)
inc
add
bound
xor
nop
fimul
mov
cs
aam
push
mov
xor
pop
inc
adc
xor
add
mov
scas
add
pop
and
inc
jb
dec
(bad)
das
rol
cld
xchg
imul
push
test
sbb
xor
callw
aam
adc
jb
outs
nop
outs
ins
outs
mov
xchg
es
dec
add
push
sub
test
mov
sub
mov
gs
ds
dec
dec
push
and
dec
add
adc
leave
and
push
pop
xchg
or
push
test
adc
aad
add
aaa
add
ret
and
les
push
or
mov
xor
inc
ret
sbb
pop
mov
jl
gs
cmps
shl
add
inc
sub
xchg
push
dec
pop
dec
adc
push
add
push
call
ret
push
inc
clc
pop
ins
dec
fwait
sub
and
dec
lods
push
push
cmp
xor
sub
add
pop
test
push
jo
or
xor
aam
movs
fidiv
outs
outs
push
dec
push
inc
and
push
retf
dec
mov
add
or
addr16
dec
adc
stos
dec
stos
js
mov
mov
dec
dec
xor
pusha
or
add
push
call
or
bound
aaa
movs
pop
sar
les
dec
and
add
mov
into
jne
mov
inc
inc
ret
push
inc
outs
xor
rol
(bad)
in
adc
push
cmp
test
and
shl
ss
jne
add
dec
sbb
imul
js
inc
xor
adc
sbb
xor
jbe
jns
pop
push
mov
sub
shl
pop
idiv
add
jbe
jp
mov
inc
aaa
mov
push
ss
imul
test
and
cmp
cwde
in
and
inc
add
jne
ror
aam
nop
push
inc
mov
push
push
fs
xor
nop
pushf
nop
adc
sbb
mov
call
sbb
jo
pop
mov
push
jb
test
sub
mov
dec
inc
add
sub
cdq
popa
sub
dec
dec
imul
adc
push
bound
push
mov
rcl
sbb
cmp
jae
jbe
dec
mov
xor
sbb
dec
jo
sub
leave
dec
sahf
push
inc
xor
rol
inc
xchg
mov
mov
xor
xchg
sbb
add
cli
(bad)
pop
push
jne
(bad)
cmp
push
enter
pop
or
cmp
push
in
ss
ins
sub
push
mov
inc
arpl
sub
ss
bound
sub
je
and
or
mov
xor
inc
inc
dec
dec
and
push
adc
push
mov
and
dec
gs
add
push
and
add
mov
or
cmp
add
cmp
test
js
sub
push
or
or
cld
inc
cmp
inc
sub
pop
inc
xchg
inc
test
dec
push
repnz
dec
(bad)
popa
xor
and
pop
int3
jb
and
xchg
dec
dec
aaa
fdivr
add
push
push
adc
test
jbe
push
xor
shl
adc
ins
jmp
push
mov
ss
ret
inc
rol
fs
and
or
or
or
cmp
dec
push
inc
mov
fsubr
bound
add
dec
push
stos
and
ss
outs
add
xchg
mov
shl
cmps
and
shl
or
push
pop
push
mov
mov
gs
mov
mov
and
outs
mov
dec
in
fcom
jno
or
push
dec
and
ins
test
dec
xor
xor
inc
ja
add
dec
es
mov
jl
xor
dec
je
or
inc
xor
ror
and
cmp
dec
xor
bound
xadd
push
xor
pop
mov
mov
adc
push
inc
data16
repnz
inc
xchg
repnz
or
pop
sub
test
mov
fs
dec
imul
pop
lods
ss
aaa
ret
inc
(bad)
xchg
mov
ins
cmp
xor
push
pop
out
shl
dec
repnz
(bad)
push
inc
adc
jbe
dec
sub
xchg
leave
adc
sub
push
aad
retf
adc
sub
je
push
push
xchg
fcom
jae
imul
jne
or
jb
or
push
je
adc
and
call
dec
xor
push
(bad)
push
push
fwait
push
sbb
aam
jo
jmp
ins
jno
dec
push
sub
(bad)
dec
push
ss
add
inc
push
sub
xor
stos
or
cmp
jns
ins
sub
call
sub
addr16
pop
test
(bad)
mov
outs
xor
dec
mov
fsub
inc
adc
cmp
push
mov
popa
mov
push
mov
call
push
add
xchg
cmp
adc
jb
push
push
imul
mov
inc
ins
xor
test
imul
sub
mov
outs
ins
jae
sbb
mov
mov
push
push
pop
ins
sbb
jne
clc
push
ret
cmp
nop
mov
inc
ret
xor
ins
dec
push
leave
or
ins
jbe
bound
xor
xor
fadd
inc
push
or
and
add
cmps
push
pushw
dec
je
shl
push
jl
cmp
ins
push
inc
outs
lods
inc
or
adc
cmp
cdq
stos
push
inc
movs
mov
dec
adc
inc
test
pop
test
inc
jo
or
(bad)
jbe
ret
movs
push
and
add
inc
arpl
out
lock
out
mov
dec
xor
add
dec
cmp
adc
xor
inc
dec
inc
add
inc
or
clc
mov
xchg
cmp
push
push
out
jne
test
ds
stos
or
jns
fs
and
cwde
dec
in
push
mov
outs
int
dec
aaa
inc
xor
js
jo
sub
outs
dec
pusha
test
add
jo
pop
xor
mov
cmp
loop
sbb
dec
or
push
inc
stos
pop
add
dec
xchg
inc
popf
add
push
mov
test
out
in
jp
push
cmp
sbb
cmp
add
fisub
pop
xor
lods
stos
mov
jle
test
ror
cmp
inc
add
push
movs
outs
and
push
inc
push
add
outs
mov
sub
sbb
pop
push
xchg
retf
inc
mov
xchg
and
sub
int3
push
ins
test
ss
dec
push
dec
fs
or
nop
mov
les
rol
pop
dec
dec
xchg
and
adc
add
and
xchg
xchg
in
or
dec
mov
ja
mov
or
jp
cmp
sub
xor
xchg
or
sub
xor
xchg
or
inc
in
mov
inc
xchg
test
push
push
cdq
je
test
nop
adc
dec
test
jbe
mov
jne
enter
pop
outs
ret
dec
dec
jbe
ja
xor
and
sbb
dec
xchg
sub
test
ja
push
popa
sub
ins
push
push
sbb
cmps
pop
sbb
pop
or
pop
sbb
adc
inc
or
adc
adc
add
or
or
loopne
jmp
ja
pop
xor
push
aad
je
jne
adc
lea
inc
(bad)
data16
sub
sub
bound
jmp
cmp
add
mov
xor
xchg
xor
ror
push
or
xor
or
inc
ins
push
out
sahf
clc
xor
xchg
add
into
cli
inc
hlt
sbb
dec
inc
and
cdq
aam
mov
mov
dec
adc
enter
adc
sbb
dec
sub
cld
js
ins
loopne
pop
push
xor
dec
ins
mov
nop
fs
repnz
(bad)
sahf
mov
test
lea
mov
pusha
xchg
cmp
jno
mov
and
inc
mov
xor
inc
jae
mov
cld
bound
dec
mov
popa
ins
(bad)
loop
inc
add
loopne
add
mov
and
js
dec
push
rcl
outs
jno
push
test
mov
retfw
dec
mov
imul
aam
dec
call
gs
adc
jmp
pop
jp
push
inc
retf
shr
or
or
leave
test
scas
gs
and
dec
jb
jmp
jbe
sbb
adc
loope
and
imul
cmp
mov
sub
loopne
xor
shl
bound
dec
sub
xor
jl
jo
adc
sub
dec
inc
push
mov
les
bound
gs
sub
xor
ins
dec
sub
push
popa
hlt
adc
call
jae
stos
mov
inc
mov
sub
cmps
lods
push
xor
or
and
and
add
dec
push
ficomp
add
mov
dec
aaa
jbe
rcr
dec
mov
jo
pusha
shl
cld
enter
sub
mov
dec
add
loopne
arpl
and
jne
xor
es
inc
ror
pusha
jns
loop
mov
dec
adc
inc
add
add
inc
ja
inc
inc
xor
sub
inc
dec
movs
scas
ins
test
xor
js
or
dec
jb
pop
aam
adc
mov
pop
lea
ss
xor
fsub
out
jno
or
add
jecxz
imul
imul
inc
xor
rol
mov
jne
inc
or
xor
mov
mov
xchg
and
ins
adc
xor
mov
push
js
rcl
mov
push
je
je
inc
and
retf
retf
inc
cmp
je
jb
sub
lods
jb
jb
outs
outs
push
push
add
movs
sbb
ins
push
push
push
add
or
inc
rcr
data16
push
ins
dec
aaa
inc
inc
add
inc
sbb
and
arpl
cmp
pop
or
(bad)
pop
push
aaa
int3
shr
sub
fs
in
imul
add
cmp
sbb
test
xchg
push
bound
and
or
cwde
sub
and
or
mov
das
push
sub
imul
movs
adc
add
cmp
push
sbb
ror
add
bound
movs
(bad)
xor
test
jbe
ret
push
sbb
inc
push
add
je
dec
mov
inc
add
call
dec
sub
es
bound
mov
add
inc
pusha
xor
jl
or
adc
sbb
ds
push
push
sub
xor
inc
pop
add
sbb
jo
(bad)
xor
mov
inc
dec
outs
es
and
jb
add
add
inc
loopne
and
xor
sub
aam
call
xor
mov
inc
pop
daa
test
inc
push
mov
imul
xchg
add
inc
xor
data16
or
pusha
xchg
sbb
push
sbb
clc
mov
shl
repnz
ret
dec
push
add
ret
ins
scas
fadd
add
dec
mov
cmp
arpl
jae
hlt
push
pop
test
sahf
jae
push
inc
lods
sub
lods
rol
lock
rol
sub
outs
test
pusha
xor
push
mov
mov
push
or
popa
xchg
sub
mov
shl
dec
inc
cwde
ins
sub
mov
sub
jbe
or
or
mov
xor
shl
and
inc
pop
stos
push
or
ins
popa
clc
and
or
fs
push
or
loope
aam
cmps
outs
movs
dec
adc
push
mov
shl
fiadd
add
xchg
push
int3
push
out
push
jno
add
sbb
sub
or
push
rcr
adc
sub
ja
adc
test
test
mov
xor
sbb
push
mov
loopne
dec
mov
sub
mov
fs
push
test
dec
cwde
inc
fs
add
fimul
cli
ror
mov
push
push
xor
pop
push
or
add
push
mov
push
xchg
push
sar
and
xor
(bad)
mov
in
out
jo
push
sub
imul
cwde
xor
es
fld
jo
add
mov
xchg
jmp
jp
call
push
add
jo
dec
dec
push
popf
cmps
inc
mov
xor
cmp
in
inc
mov
lods
and
ja
inc
jns
dec
arpl
dec
out
or
xchg
pusha
mov
out
enter
pusha
bound
or
stos
adc
inc
xor
push
dec
cmp
add
mov
push
mov
ss
push
int3
add
inc
push
xchg
stos
cwde
add
cmps
shl
sub
or
inc
sahf
add
xchg
in
gs
pusha
dec
ret
ror
push
mov
lock
mov
enter
outs
inc
rcl
fs
int3
push
data16
shr
mov
dec
mov
inc
shr
in
je
jp
jb
add
loopne
pop
xor
xchg
lods
popa
xchg
jno
xchg
rol
inc
mov
inc
dec
fs
ins
xor
push
fadd
popf
push
push
test
dec
sub
cmps
mov
jo
in
mov
adc
cdq
fs
dec
test
add
aaa
push
add
repnz
enter
imul
test
(bad)
ins
sub
or
nop
add
or
sub
ins
xor
and
sbb
mov
push
stos
mov
pop
push
pop
inc
or
mov
push
pusha
fsubr
gs
dec
repnz
fs
adc
push
adc
jns
jbe
jb
adc
or
adc
xor
inc
push
inc
or
mov
xor
adc
push
bound
test
into
xor
push
fcmovb
pop
xchg
dec
push
stos
ror
xor
fs
(bad)
jbe
jo
test
sub
sbb
or
data16
sub
in
add
mov
jp
sub
or
or
call
inc
push
ss
pop
fs
pusha
mov
and
ja
popa
je
or
inc
pop
dec
and
and
xor
aaa
ins
test
xchg
inc
sbb
xor
add
jge
push
mov
push
sbb
dec
push
fmul
mov
sub
es
inc
cmps
out
sub
xchg
imul
push
fidiv
dec
ret
push
fiadd
add
arpl
imul
mov
pop
cmp
mov
movs
xor
jmp
arpl
pop
pop
or
pop
xchg
loop
dec
pop
outs
and
pop
mov
es
sub
sub
add
ror
sub
inc
adc
cs
ficomp
mov
mul
pop
aaa
or
adc
or
aam
ins
jl
xor
push
imul
pop
add
xchg
mov
mov
fiadd
jp
and
loopne
push
or
xor
inc
sub
mov
add
into
outs
ja
jle
mov
or
or
push
adc
mov
mov
or
pop
in
xor
fs
add
mov
push
xor
dec
out
add
outs
pop
dec
in
xor
test
adc
outs
mov
cwde
push
dec
inc
cmps
xor
adc
data16
aam
jo
adc
mov
frstor
pop
imul
xor
xchg
dec
or
add
mov
jns
je
inc
push
cdq
(bad)
cli
fidiv
xchg
sbb
jb
aaa
xchg
push
dec
es
push
fadd
les
mov
xor
and
adc
mov
mov
adc
xor
add
jl
shr
push
inc
mov
dec
and
enter
dec
ins
or
or
test
cmps
add
push
or
dec
jb
test
jb
test
in
fiadd
sbb
pop
fs
pop
sub
ja
or
mov
mov
sub
push
dec
adc
push
add
xchg
jle
fmul
cmp
sbb
and
push
or
repnz
xor
pop
es
and
add
xor
push
retf
jb
movs
call
inc
(bad)
cli
mov
mov
mov
les
jb
loopne
dec
and
push
and
add
dec
xor
dec
or
sbb
push
dec
push
xor
add
jo
sbb
loop
jb
retf
push
cmp
sbb
push
inc
jbe
sub
adc
fimul
push
sahf
dec
pop
dec
pop
ficomp
dec
xchg
pop
push
sub
fcom
mov
mov
lea
loopne
jae
aam
sbb
push
jp
clc
or
inc
pop
or
inc
or
cwde
icebp
fild
or
jne
dec
push
ror
xor
cmp
nop
retf
adc
pop
jae
xor
mov
(bad)
ins
(bad)
ret
imul
xchg
arpl
jbe
fadd
adc
cdq
ss
sub
add
and
push
push
scas
imul
les
add
fcom
xor
add
outs
jp
inc
fwait
push
xor
inc
adc
mov
cs
inc
inc
and
add
aaa
inc
es
push
mov
popa
inc
jb
add
call
mov
fs
add
mov
pushf
add
pusha
mov
ss
in
sub
adc
adc
inc
push
xor
or
fisub
outs
push
adc
push
add
mov
mul
xchg
imul
cli
adc
inc
push
cmc
outs
pop
outs
retf
jp
hlt
xchg
movs
stos
sbb
sub
stos
inc
sbb
push
mov
movs
dec
cmps
push
xor
cmp
cmp
enter
inc
dec
push
js
sbb
lods
inc
gs
jb
adc
loop
and
aam
aad
je
stos
adc
jns
rol
fcomp
or
fucom
addr16
clc
mov
add
enter
sbb
dec
mov
inc
sub
adc
inc
push
push
push
dec
push
push
inc
push
dec
je
in
ss
inc
push
adc
and
cmps
xor
mov
mov
lods
jmp
xor
push
add
ror
add
gs
or
jb
xor
dec
inc
js
mov
popa
and
and
or
and
mov
or
and
and
mov
jno
dec
je
sbb
jae
push
(bad)
leave
xchg
cdq
jb
bound
rcl
cwde
scas
add
push
fiadd
jns
adc
loop
sub
inc
fidivr
adc
push
inc
dec
cmp
imul
int3
xchg
push
xor
cwde
add
push
sbb
popa
and
mov
in
dec
mov
and
push
cmp
mov
outs
dec
and
push
outs
xor
or
mov
ret
push
xor
cmp
mov
add
data16
push
ret
mov
mov
inc
xor
ror
dec
sub
add
mov
dec
inc
lock
hlt
and
add
xor
xor
xchg
inc
inc
lock
mov
push
scas
and
add
xor
push
ret
or
pop
(bad)
popa
or
jo
or
inc
fs
inc
jne
and
push
push
push
cmp
mov
dec
xor
push
sub
push
sub
or
inc
adc
cmp
test
cmp
jns
adc
jb
pusha
pop
mov
movs
and
mov
xchg
shr
pushf
and
adc
stos
push
call
fdiv
xor
enter
mov
xor
nop
pop
mov
out
or
inc
jmp
adc
inc
push
sub
xchg
or
imul
pop
xor
dec
clc
mov
inc
fild
imul
adc
popa
outs
xor
adc
xor
push
cmps
cmp
js
retf
jmp
xchg
adc
(bad)
xor
mov
arpl
adc
pop
stos
sub
cmps
pusha
xor
adc
adc
push
ins
imul
xchg
push
adc
es
fadd
in
fsubr
or
in
call
into
bound
or
ins
cmp
add
or
nop
pop
or
bound
dec
jle
dec
int
outs
loop
inc
push
loopne
outs
pop
sbb
xor
pop
add
ret
or
adc
inc
pusha
nop
push
xchg
sbb
push
add
ret
stos
into
xor
(bad)
gs
and
mov
xchg
ror
dec
cld
cmp
push
mov
push
mov
arpl
dec
push
push
cdq
mov
je
and
mov
dec
jmp
push
pop
gs
adc
dec
ss
and
xor
ins
(bad)
les
pusha
fcom
aam
(bad)
sahf
xor
mov
imul
mov
or
ss
xor
nop
out
fcom
push
stos
inc
xor
inc
jp
xor
and
outs
jle
es
hlt
int3
xor
frstor
loopne
mov
push
dec
push
test
push
inc
jne
dec
sbb
lock
nop
inc
mov
test
mov
mov
popa
dec
pusha
mov
xor
and
pusha
xchg
jno
lods
inc
add
dec
stos
ins
mov
ds
cs
mov
sub
jo
jo
adc
ss
test
jns
push
outs
shl
push
inc
sub
(bad)
call
cmp
xor
xchg
jo
and
mov
ds
add
inc
add
sbb
loop
push
in
movs
call
rol
jmp
push
cmp
push
adc
popa
pop
ja
pop
adc
xchg
add
(bad)
xchg
cwde
nop
cdq
ds
add
jp
fimul
data16
pop
push
xor
xor
mov
es
push
test
adc
adc
inc
dec
xor
js
mov
sbb
sub
pushf
shr
test
cwde
xor
inc
adc
push
addr16
int3
test
and
ds
mov
push
dec
or
push
lods
dec
pusha
cmp
or
sbb
adc
and
cmp
push
adc
push
sbb
add
ins
xchg
add
inc
sub
inc
pop
outs
fwait
and
into
push
xor
cmps
or
test
call
mov
or
sub
push
adc
js
and
dec
or
push
shr
shl
push
xchg
daa
test
loope
add
mov
add
adc
or
push
sbb
inc
js
cmp
jne
xor
cmp
add
(bad)
gs
(bad)
enter
dec
mov
inc
pop
cmp
or
inc
mov
mov
dec
test
push
pop
inc
arpl
inc
inc
fst
inc
inc
or
cs
push
mov
pop
mov
xor
push
loope
and
pusha
inc
add
add
inc
cld
int3
add
sbb
cs
and
inc
cs
or
add
or
cwde
call
mov
dec
pop
push
enter
push
lea
push
test
mov
es
push
dec
movs
movs
inc
sub
sbb
mov
xchg
inc
pop
je
xchg
mov
and
stos
clc
cmp
out
out
mov
ss
add
fdivr
push
dec
add
inc
dec
jbe
jp
enter
push
mov
es
pop
add
sub
adc
or
push
dec
inc
sar
add
or
ss
test
xchg
shl
in
push
jno
and
dec
sbb
mov
(bad)
or
cld
call
add
sbb
pushf
js
outs
mov
or
je
dec
in
add
icebp
loopne
dec
sahf
push
push
test
cmp
ins
push
dec
retf
nop
ins
push
fs
test
xor
lods
sub
loopne
popa
ins
jb
xor
mov
mov
fimul
enter
sbb
inc
and
sub
xor
sub
or
sbb
retf
push
test
pusha
out
lea
jb
push
shl
jbe
call
stos
push
cmp
jb
out
inc
jns
add
add
or
fadd
retf
cmp
ror
call
and
sbb
mov
push
pop
mov
xor
movs
addr16
push
shl
ficom
ror
add
pusha
sub
mov
lods
dec
mov
xor
pop
push
push
mov
fs
inc
push
cs
dec
add
pop
push
jno
data16
add
sub
add
into
xor
dec
jae
and
push
mov
jmp
add
push
pop
or
mov
xchg
xor
cmp
jae
movs
dec
sub
inc
test
xor
inc
mov
fs
cdq
fdiv
inc
bound
push
dec
jbe
and
inc
mov
xor
pop
js
dec
fiadd
xchg
xor
sub
inc
sahf
mov
dec
dec
loop
test
es
mov
imul
inc
cmp
test
push
stos
or
or
inc
push
repnz
and
adc
lock
xor
push
push
pop
push
mov
fcom
cmp
push
jp
pusha
mov
dec
dec
push
je
mov
inc
call
and
add
or
in
push
dec
lods
adc
inc
dec
je
xor
xchg
push
xchg
rol
adc
retf
gs
add
mov
inc
jo
lea
stos
add
data16
outs
test
or
ret
add
adc
(bad)
(bad)
or
data16
movs
movs
jo
sub
loop
and
in
stos
mov
push
dec
dec
or
jle
push
rol
movs
cmp
or
rol
cmps
push
pop
pop
ins
push
cli
stos
xchg
push
jb
lods
arpl
inc
test
dec
xchg
jp
(bad)
mov
pop
pop
test
ss
inc
xor
sub
fadd
(bad)
push
dec
div
cdq
mov
div
add
mov
inc
adc
push
add
add
ss
test
ss
and
aad
add
or
out
bound
push
push
test
test
inc
ins
jo
add
loop
or
je
loopne
adc
jbe
dec
push
dec
es
clc
push
inc
xor
mov
add
inc
dec
inc
gs
dec
and
add
cmp
in
xor
movs
inc
inc
push
push
pop
dec
dec
pop
xchg
ret
push
jle
call
xor
mov
pop
jb
cmp
hlt
xor
sbb
mov
dec
push
dec
cmp
sub
and
cld
inc
mov
mov
dec
js
ror
dec
pusha
je
cmps
xor
pop
cli
jbe
lock
push
ret
dec
mov
sub
dec
and
xor
and
mov
add
loopne
pop
push
ss
pop
xor
pop
mov
mov
bound
or
pusha
int3
imul
retf
add
fs
push
inc
xchg
inc
push
dec
(bad)
ja
adc
aam
inc
jo
shl
adc
jo
les
dec
jp
test
cmp
xor
sbb
push
mov
add
push
and
push
in
xor
enter
add
sar
sub
push
data16
inc
rcl
xchg
test
sub
or
sub
add
inc
fisub
mov
lods
jo
dec
xor
mov
(bad)
or
popa
pop
clc
xchg
or
or
call
push
dec
inc
movs
jbe
mov
jp
mov
popa
push
xchg
xor
mov
xor
into
lock
sar
inc
aad
fisub
pop
inc
push
adc
repnz
fs
push
push
or
mov
jmp
adc
push
ja
test
xchg
pop
jl
stos
dec
aaa
test
mov
inc
jns
js
dec
cmps
mov
jp
xchg
rcl
adc
xor
in
sbb
je
outs
mov
mov
bound
xchg
dec
or
mov
nop
loop
pop
push
xchg
inc
xchg
ja
xor
xor
mov
lods
imul
test
add
or
inc
shr
pusha
inc
cmp
imul
pop
jo
mov
pusha
adc
shl
test
call
sbb
js
push
sub
or
push
inc
adc
rol
and
es
into
sbb
gs
pop
hlt
test
cmp
sbb
mov
xchg
adc
fs
sub
sub
sub
sar
ins
xor
lods
popf
add
popa
add
dec
add
mov
ds
adc
or
dec
push
and
inc
dec
pop
jbe
cwde
adc
jb
push
call
dec
dec
inc
pusha
lods
loop
pop
sbb
jp
xor
push
mov
aaa
mov
dec
and
and
outs
js
inc
retf
mov
dec
jp
inc
xor
imul
int3
and
pop
lock
xor
lods
enter
ins
lock
and
rcl
sub
int3
push
push
xlat
xchg
jp
cmps
bound
dec
mov
ss
ror
ins
les
lea
and
or
cmp
jl
loop
push
leave
jmp
inc
test
push
in
push
sbb
xchg
ja
test
inc
mov
cmps
xor
add
push
(bad)
aam
fmul
cli
outs
adc
sbb
or
and
lods
frstor
imul
(bad)
arpl
ficom
test
push
sub
sub
xchg
inc
add
push
nop
xchg
hlt
mov
xchg
dec
lock
mov
dec
ss
mov
dec
fs
jo
mov
and
jne
adc
adc
call
shr
mov
dec
call
xor
pop
mov
pop
cmp
xor
push
fdiv
push
jp
gs
inc
push
ja
inc
mov
push
add
dec
add
xor
jno
xchg
rcl
mov
add
fwait
add
ins
jo
add
cwde
inc
cmp
data16
xor
cld
sub
dec
test
push
push
out
dec
ins
(bad)
addr16
push
push
pop
pop
xchg
outs
adc
jbe
xor
or
stos
adc
push
movs
or
je
dec
inc
mov
dec
(bad)
popa
rol
add
jle
inc
sub
or
sub
dec
inc
inc
in
mov
push
or
pop
dec
fmul
adc
jo
pop
and
in
push
ins
inc
sub
push
jns
pop
mov
mov
inc
push
mov
push
or
mov
js
push
cmps
movs
or
push
add
cmp
inc
xor
or
dec
cld
dec
fild
jge
sub
add
cmp
or
mov
gs
daa
add
cmp
adc
cmp
je
jo
scas
inc
jle
imul
imul
mov
je
sbb
inc
add
in
push
imul
push
mov
lods
inc
mov
add
sbb
push
pop
push
dec
mov
sbb
jo
movs
inc
fnsave
jo
xor
push
ins
aaa
and
es
dec
inc
pusha
inc
xor
cs
sub
push
dec
adc
jmp
gs
aam
xchg
bound
popa
outs
sub
clc
test
adc
push
xchg
and
adc
je
out
pop
xchg
fild
xchg
mov
inc
inc
outs
push
add
add
and
inc
sub
sub
and
lods
and
ins
jl
inc
jo
push
mov
and
sbb
ins
push
sub
mov
mov
push
dec
push
or
xchg
and
(bad)
aam
cwde
jp
mov
scas
dec
shr
sub
stos
dec
push
adc
pusha
scas
push
test
(bad)
arpl
dec
dec
push
test
dec
cmp
aaa
dec
mov
pop
mov
arpl
push
sub
or
jle
jo
bound
mov
les
push
or
bound
(bad)
outs
jb
sahf
fcmovbe
sub
or
push
lods
sbb
mov
push
add
jo
mov
xor
aad
inc
cmps
gs
push
and
mov
int
xor
outs
(bad)
fisub
cwde
dec
push
inc
or
dec
inc
inc
mov
ins
cmp
add
ja
inc
test
in
inc
scas
dec
jmp
or
push
bound
add
dec
push
imul
or
test
inc
pop
shl
push
mov
inc
adc
adc
xchg
cmps
push
dec
inc
push
push
push
sbb
push
bound
jb
xchg
xor
xor
inc
xchg
push
dec
push
and
aad
rcr
push
clc
dec
and
mov
loopne
sub
pop
or
xchg
mov
les
pop
xor
inc
xor
mov
mov
sub
jp
xchg
mov
push
stos
adc
add
enter
dec
add
dec
neg
inc
add
inc
dec
ret
test
sbb
lock
mov
inc
and
les
mov
adc
and
mov
cmp
popa
dec
mov
and
and
shl
jae
add
test
or
xchg
xor
xchg
cmp
fadd
xor
push
outs
fiadd
xchg
xor
or
sub
cmp
(bad)
test
mov
add
fdiv
rol
sub
push
or
lods
mov
or
xchg
inc
push
inc
jl
enter
xchg
dec
mov
inc
jl
xor
or
pusha
jo
add
jp
dec
fld
pusha
mov
dec
mov
sbb
dec
inc
push
adc
les
cmp
or
xor
call
push
push
mov
push
push
xor
push
ror
xor
inc
(bad)
push
call
(bad)
push
sbb
jo
mov
ja
push
add
je
ins
rcl
inc
jbe
mov
xor
cmp
(bad)
dec
cli
ss
dec
and
inc
add
dec
or
ficom
and
sub
and
jp
push
imul
push
pusha
es
pushf
retfw
push
bound
jb
cs
xor
adc
sub
aaa
inc
je
mov
or
sub
ins
pop
dec
into
mov
or
test
or
push
mov
and
addr16
adc
inc
sbb
and
fist
je
pushf
je
push
xchg
ss
pop
push
call
pop
push
enter
lods
or
adc
adc
js
les
or
or
bound
push
push
cdq
sbb
dec
cmp
mov
xchg
add
movs
push
adc
dec
cmp
cmp
loopne
or
pop
jae
out
mov
es
and
dec
adc
dec
inc
(bad)
add
inc
mov
add
add
xor
shr
mov
shl
push
mov
push
and
in
sub
inc
or
inc
xor
daa
add
cmp
rol
sub
rol
(bad)
and
push
mov
call
mov
test
data16
add
mov
xchg
pop
test
call
mov
jne
cmps
adc
bound
and
stos
cld
sbb
cdq
popa
xchg
jo
js
sub
xor
add
fild
push
push
inc
ret
xor
scas
dec
jo
xor
ins
nop
cmp
lods
je
outs
push
cwde
fs
mov
inc
inc
adc
fnstenv
(bad)
mov
sub
shl
pop
movs
adc
and
movs
dec
push
xor
inc
fsub
pusha
mov
adc
pop
rcl
push
dec
add
xchg
push
xor
fdiv
popa
and
call
sbb
mov
cwde
les
or
jp
sub
add
mov
push
adc
pop
test
adc
push
or
test
enter
dec
mov
adc
pop
cli
sbb
push
push
add
jns
outs
inc
cmp
(bad)
popa
js
inc
inc
mov
addr16
lods
push
xor
xor
push
jmp
cmp
sbb
sbb
js
jbe
fs
sbb
push
pop
pop
in
push
and
push
cmp
inc
hlt
push
mov
jne
repnz
push
jo
and
aad
push
fimul
rcl
push
outs
mov
dec
mov
inc
ficom
sub
sub
add
push
cmps
dec
mov
mov
lods
les
dec
fdiv
or
push
jo
inc
int3
pusha
je
dec
outs
out
inc
inc
stos
mov
cmps
dec
aaa
inc
push
adc
lds
(bad)
jns
or
push
add
push
mov
or
ret
out
inc
and
jo
ret
add
iret
out
xor
sub
dec
inc
dec
dec
add
mov
test
test
sbb
mov
inc
adc
bound
movs
or
lock
sub
retf
jl
inc
push
ss
and
dec
and
push
dec
push
jae
xor
xor
fs
fadd
inc
xor
mov
inc
dec
add
xor
les
loopne
(bad)
imul
add
popa
add
enter
mov
mov
sahf
bound
sbb
pushf
dec
lods
xor
dec
cmp
dec
mov
add
icebp
xor
dec
dec
cwde
call
fisubr
enter
dec
popa
imul
add
sub
inc
pop
or
inc
push
ins
adc
js
push
retf
fadd
inc
push
cmp
push
xor
push
out
dec
add
aaa
je
data16
dec
rol
or
and
xor
data16
jo
fdiv
dec
ss
jne
adc
mov
jmp
or
push
push
mov
int
push
inc
les
push
stos
adc
dec
imul
push
xor
and
inc
aaa
dec
popa
xor
push
mov
mov
in
jo
cmp
inc
outs
xor
ins
cmp
les
outs
enter
jne
jo
(bad)
lods
pop
retf
sbb
rol
stos
add
fisub
push
test
mov
xchg
push
or
mov
and
push
mov
popa
cmp
jg
(bad)
imul
gs
fs
sub
push
xor
dec
sub
ja
call
or
pop
and
dec
test
shl
fs
dec
inc
pusha
or
mov
call
rol
gs
mov
xchg
mov
ss
dec
sbb
and
adc
pop
je
push
xchg
retf
test
dec
push
sub
and
les
fs
dec
inc
adc
add
inc
es
push
pop
scas
push
push
clc
dec
into
rol
push
stos
pop
sbb
xor
push
jns
and
mov
add
or
stos
test
jb
jp
test
jo
xor
into
sahf
pop
sub
es
test
mov
inc
dec
es
push
adc
lock
test
cmps
xchg
sub
pop
gs
sbb
mov
inc
push
push
mov
push
outs
push
loopne
xchg
pusha
aaa
ins
push
inc
xor
dec
xchg
or
test
ds
js
scas
pop
popa
ss
push
xor
cs
adc
dec
inc
dec
jp
and
dec
dec
mov
xor
push
and
and
push
dec
test
or
push
sahf
arpl
jne
or
cs
xchg
adc
inc
ins
sahf
add
arpl
mul
sub
outs
pop
imul
and
xor
and
xchg
push
inc
sub
pop
test
mov
je
dec
sbb
push
shl
push
xchg
or
push
xchg
pop
sbb
cmps
mov
mov
xor
push
dec
je
or
loop
inc
and
or
in
mov
aaa
or
fs
mov
neg
(bad)
jmp
or
pop
js
es
push
cli
popa
je
jo
retf
push
jb
sbb
mov
pop
rol
cmp
ins
inc
or
sbb
add
outs
or
sub
push
mov
mov
push
jmp
imul
dec
push
add
jmp
pop
arpl
dec
inc
push
sub
sar
inc
rcl
push
add
jo
jo
mov
lods
je
dec
pop
inc
mov
push
push
cmp
inc
jl
add
push
ret
outs
fs
sub
inc
loope
mov
dec
es
xor
push
xchg
jo
and
imul
fs
test
xchg
inc
mov
call
sub
cmp
aad
add
mov
pop
and
cmps
mov
add
push
cmp
gs
and
cld
sub
jno
xor
mov
mov
call
jne
ins
push
mov
(bad)
push
clc
data16
jb
sub
test
mov
push
mov
ins
ins
test
push
sub
movs
cmp
shl
add
into
enter
xchg
inc
mov
jo
outs
retf
adc
xor
pop
jne
pop
dec
sub
dec
outs
jbe
push
aam
or
push
adc
or
cmp
jl
push
adc
int3
push
jne
add
adc
push
sbb
adc
push
push
cld
or
rcl
mov
data16
mov
cmp
push
ins
and
shl
dec
push
push
mov
enter
push
push
fcomp
xor
dec
nop
test
cwde
push
sub
fst
push
jb
add
loopne
xor
test
and
xor
shr
dec
xor
push
sbb
outs
xor
sub
inc
dec
inc
jbe
inc
cdq
adc
add
pop
outs
outs
mov
inc
out
inc
mov
cmp
jns
sbb
mov
push
in
imul
mov
(bad)
xor
cmp
or
cmps
aaa
sub
or
sub
loop
and
mov
xor
pop
jno
fst
test
adc
(bad)
stos
dec
call
jb
bound
mov
inc
cmp
adc
pop
or
scas
inc
push
xor
xchg
xor
into
enter
or
ins
xchg
dec
jle
add
stos
mov
add
mov
cmps
inc
xchg
dec
clc
dec
jne
adc
push
cs
jne
add
gs
je
je
xor
mov
inc
or
or
js
(bad)
and
mov
jne
je
push
sub
xor
inc
cld
jns
dec
dec
sub
cdq
sub
xchg
fcmovnb
mov
dec
ss
int3
and
and
cmps
and
bound
pop
dec
fidiv
or
mov
call
push
not
nop
or
add
or
sbb
xor
or
fnsave
xor
inc
imul
stos
mov
mov
inc
xchg
inc
clc
push
xor
add
mov
and
jp
sbb
mov
mov
mov
add
xor
fldenv
xchg
pop
test
push
ins
test
stos
mov
mov
js
push
jmp
sub
xor
mov
push
movs
movs
push
mov
pop
xor
jecxz
call
pop
adc
adc
jb
cmp
push
pop
push
push
ss
call
jo
mov
cmp
inc
or
xor
rcr
movs
dec
push
gs
daa
mov
jmp
repnz
push
dec
nop
fs
jns
call
xor
ret
adc
and
adc
xor
stos
add
(bad)
addr16
dec
inc
adc
cwde
or
push
xor
jle
cs
outs
push
pop
xchg
adc
push
outs
add
add
fs
rol
pop
inc
imul
push
inc
adc
dec
ret
inc
les
add
gs
xor
int
fnstenv
jl
repnz
adc
mov
xchg
push
dec
dec
(bad)
mov
cmp
mov
mov
push
arpl
ret
test
mov
cwde
dec
scas
cmp
push
aaa
xor
mov
inc
mov
into
bound
inc
xchg
or
push
xchg
sbb
aam
add
inc
sbb
pop
nop
adc
mov
push
test
jb
xchg
push
push
add
mov
(bad)
loop
fsubr
sbb
gs
mul
jb
retf
cwde
jne
test
hlt
pop
jmp
mov
cmp
dec
sub
jb
call
and
xchg
imul
push
sub
cmp
dec
jo
stos
and
fmul
ror
sub
(bad)
pop
pop
test
pop
add
xchg
and
sub
aaa
xchg
jp
in
mov
push
jns
xchg
sub
add
adc
fidivr
jb
add
sahf
inc
xor
dec
dec
dec
je
jns
adc
sbb
stos
push
push
xor
jo
xor
push
adc
mov
(bad)
cs
aam
ss
cmp
inc
adc
test
xor
or
sub
add
pop
xchg
add
mov
lea
ret
cmp
outs
inc
push
mov
inc
mov
mov
add
inc
sahf
mov
dec
test
sub
push
ins
mov
imul
sbb
and
cwde
cdq
jle
hlt
push
xchg
aam
retf
xchg
adc
inc
jae
dec
push
mov
loop
aam
push
inc
pop
bound
call
ins
and
mov
xchg
dec
pop
and
inc
mov
xchg
into
ja
and
adc
sbb
jns
cld
and
inc
add
popa
or
adc
cmp
mov
pushf
mov
push
pop
jo
jb
scas
mov
inc
push
fsub
push
movs
sub
push
sub
pusha
xor
cmps
pop
xor
cmp
xchg
push
push
ins
add
test
popa
dec
xor
push
dec
add
mov
(bad)
pop
pusha
cmps
or
adc
push
or
add
push
dec
sub
mov
mov
dec
pop
enter
fcom
add
dec
cmp
ss
xchg
pop
arpl
pop
aaa
loop
movs
xchg
shl
pop
push
xor
xchg
outs
dec
movs
xor
sub
(bad)
shl
push
dec
out
outs
imul
adc
cmp
fimul
jl
test
retf
mov
inc
xor
sbb
cmp
or
and
push
or
dec
add
dec
sub
sbb
push
add
nop
call
fs
shr
mov
cmp
ret
jne
push
jae
dec
sbb
inc
dec
mov
jo
inc
xchg
sbb
pusha
cdq
xchg
inc
or
push
mov
dec
pop
push
dec
les
sahf
sbb
adc
inc
and
rol
sub
mov
inc
jb
test
pop
push
mov
frstor
fcom
jle
dec
inc
dec
pop
mov
push
jbe
xchg
retf
ja
sbb
jo
pusha
mov
enter
sub
push
push
addr16
dec
gs
dec
arpl
and
dec
xchg
scas
pop
add
or
dec
es
push
xor
sub
pusha
jb
or
stos
loope
add
fcom
xchg
adc
sub
jae
cmp
mov
sub
jle
bound
mov
inc
addr16
enter
clc
add
rcr
xchg
dec
jne
mov
xor
dec
inc
sub
adc
cmp
inc
call
mov
dec
cmp
inc
mov
addr16
adc
in
inc
inc
mov
xchg
es
inc
add
adc
adc
xor
sbb
mov
mov
xor
jl
pop
mov
sub
xor
(bad)
inc
adc
xor
popa
xchg
sbb
jbe
adc
mov
add
adc
push
test
call
adc
jb
mov
pop
push
mov
xor
mov
sbb
and
adc
xchg
adc
in
shl
outs
inc
pop
xchg
add
into
ror
inc
mov
inc
mov
gs
push
int3
inc
lods
ins
mov
xchg
adc
fs
in
push
add
mov
aaa
ss
pop
dec
inc
inc
dec
sub
and
xor
stos
or
inc
retf
mov
pop
push
test
aaa
test
push
push
pop
lods
inc
ss
xor
movs
push
inc
sbb
fsub
mov
ins
dec
stos
add
jbe
add
add
fs
dec
loop
xchg
xchg
mov
jp
fdiv
fcomp
test
call
push
jo
push
mov
inc
aam
loopne
or
adc
pop
add
push
je
retf
pusha
adc
adc
test
xor
test
mov
adc
ja
cmp
sbb
or
push
xchg
dec
push
xor
pop
jle
push
push
dec
aaa
jmp
outs
pusha
call
xchg
xchg
outs
ins
je
pop
mov
aaa
adc
inc
sub
aad
and
pushf
xchg
push
and
movs
ins
or
loop
xor
aam
fs
movs
xor
jle
and
int3
xchg
mov
add
movs
mov
cli
mov
outs
dec
push
into
dec
sub
cdq
imul
daa
jbe
into
jbe
or
ins
and
dec
dec
adc
add
mov
add
stos
fadd
scas
loop
dec
adc
sbb
mov
enter
pusha
xchg
pusha
test
gs
movs
xor
jb
or
push
lock
dec
ins
push
sbb
push
push
jne
dec
test
push
addr16
inc
ret
and
data16
xchg
and
mov
mov
inc
pop
mov
xchg
test
add
fcom
push
or
pop
push
call
addr16
pop
inc
not
adc
dec
push
mov
retf
aam
jne
ins
pop
cli
jno
ss
sbb
inc
mov
mov
inc
int3
ins
fwait
inc
inc
ret
push
xchg
jns
mov
inc
add
push
(bad)
jb
inc
sub
push
or
inc
fwait
cdq
and
in
call
ror
hlt
popa
sbb
or
sahf
scas
les
push
jbe
cmps
test
fmul
pop
imul
or
mov
or
shl
or
mov
ficomp
push
mov
add
adc
add
cmp
and
test
add
or
push
dec
dec
xchg
adc
cmp
imul
pusha
inc
and
add
scas
adc
jo
ja
ja
xor
pop
sbb
dec
pusha
inc
sub
sbb
pop
xor
xchg
push
pop
mov
popa
push
jno
test
(bad)
sub
imul
and
cwde
addr16
dec
xor
push
mov
je
sbb
mov
jbe
pop
int3
xchg
sub
xchg
xor
je
or
jbe
pop
sub
add
dec
in
nop
in
sub
dec
dec
or
enter
enter
push
pop
cvtpi2ps
mov
xor
push
hlt
add
xchg
cmp
sbb
mov
push
jb
cwde
push
inc
mov
push
leave
jb
jb
mov
pop
sbb
and
add
mov
push
mov
and
test
in
inc
loop
xchg
or
mov
xchg
retf
imul
(bad)
sub
xchg
imul
jle
bound
movs
pusha
or
jbe
je
cmp
xchg
ins
cwde
dec
add
mov
loope
or
test
mov
call
jp
pop
xor
hlt
inc
dec
push
adc
sbb
sahf
xchg
jo
push
ja
adc
test
ds
js
dec
and
and
cmp
ins
xor
push
pop
int
inc
fdiv
dec
sbb
xchg
push
fdiv
push
inc
xor
add
or
pop
mov
ret
out
xor
xlat
push
fisub
adc
popa
push
mov
out
pushf
ins
push
push
adc
xchg
push
cwde
push
xchg
mov
and
cmp
test
jl
and
cwde
add
popa
pop
dec
push
inc
mov
adc
cmps
movs
es
mov
inc
mov
inc
inc
(bad)
call
inc
and
shl
push
adc
inc
xor
adc
dec
je
leave
push
out
push
inc
ret
jne
xor
add
call
inc
cmps
dec
dec
jbe
inc
movs
jo
xor
sub
int3
and
(bad)
push
adc
push
jbe
and
clc
dec
lods
(bad)
push
aaa
sub
or
popa
push
shl
(bad)
push
push
jmp
int3
or
or
ins
push
add
sub
jmp
jo
adc
push
mov
sahf
xchg
and
jle
ss
sub
addr16
jbe
jecxz
xor
jns
push
ret
xchg
add
jb
fcom
or
adc
dec
push
sub
stos
push
loop
adc
inc
call
les
xor
sbb
inc
dec
ins
xor
cld
push
jo
push
dec
inc
add
dec
adc
stos
retf
jmp
fs
outs
nop
shl
push
push
inc
mov
sub
jp
jb
fdiv
sub
pusha
jp
inc
aam
fcom
mov
inc
cdq
cdq
and
push
cld
movs
sub
mov
mov
and
xchg
mov
pop
push
mov
cmp
cmps
or
sub
and
je
arpl
fadd
push
or
fwait
nop
inc
sub
inc
mov
xor
outs
inc
dec
rol
push
xor
push
lock
outs
or
inc
xchg
dec
sbb
push
imul
sub
stos
adc
cld
push
fiadd
fs
jae
dec
nop
add
cmp
dec
inc
sbb
push
in
jns
outs
sbb
hlt
xchg
pop
mov
dec
pushf
imul
add
xchg
mov
add
mov
ss
or
ret
adc
imul
xchg
inc
adc
gs
sub
inc
pop
inc
dec
xchg
ja
xor
ins
cs
and
aaa
xchg
push
add
add
(bad)
push
dec
sub
pushf
and
outs
fs
test
out
cmps
(bad)
in
add
inc
or
dec
pop
jae
aam
jmp
in
or
cmp
ret
or
lds
addr16
dec
fsub
pop
inc
push
push
fst
sbb
cmps
jbe
jne
sub
inc
or
nop
xor
mov
jmp
popa
push
nop
int3
push
inc
cmps
or
add
fadd
js
cmp
or
pop
inc
xchg
test
cmp
popa
popa
push
add
push
cli
adc
cld
sub
push
shl
xchg
dec
sub
inc
add
ins
cmps
and
(bad)
adc
and
sub
dec
rol
or
push
or
or
and
sahf
sbb
fiadd
dec
add
addr16
dec
sub
inc
test
fldcw
dec
fadd
adc
stos
cs
jb
jle
pop
shr
jmp
outs
push
movs
adc
into
ins
int3
ss
pop
mov
ins
push
jo
and
and
les
jmp
pushf
push
dec
cmc
xor
inc
push
xor
sbb
in
test
push
inc
jne
outs
js
sbb
pop
adc
xchg
dec
push
loop
stos
sahf
stos
outs
push
inc
jl
jae
push
push
push
in
xor
ret
jae
push
push
or
pop
inc
aam
sub
test
cli
ins
push
push
add
push
adc
mov
inc
nop
je
cmp
fs
rcl
inc
push
inc
fimul
dec
cwde
push
aaa
stos
cmps
adc
push
adc
xchg
fsub
test
out
push
in
or
and
es
or
sub
xor
xchg
ds
gs
movs
or
inc
jo
dec
mov
adc
mov
je
add
add
push
mov
and
call
inc
push
ins
cmp
mov
push
lock
and
mov
popa
imul
stos
stos
dec
(bad)
arpl
jne
add
mov
int3
push
jmp
ins
and
in
or
dec
sub
add
test
in
adc
sbb
repnz
imul
rcr
dec
test
test
pusha
outs
xor
and
push
shr
cmp
xor
inc
bound
jo
ret
loopne
xchg
push
pusha
xchg
inc
movs
jno
and
mov
mov
movs
and
sub
loopne
xchg
in
sub
and
dec
cmp
inc
inc
or
add
mov
out
clc
xor
aaa
push
call
push
jb
adc
sbb
add
xor
lods
retf
push
push
mov
inc
jo
xchg
fs
mov
sub
rcl
bound
jae
mov
cwde
sub
call
pusha
cmp
xor
inc
sub
jbe
push
sub
xchg
jno
cs
jo
dec
mov
xchg
cmp
xor
adc
nop
and
inc
ror
jl
push
push
sub
inc
call
rol
add
pusha
jb
pop
popa
push
inc
cmp
jae
jno
sub
and
push
outs
add
mov
jns
addr16
adc
sub
fs
out
fidiv
xchg
sub
and
xor
jp
into
test
xor
jne
pusha
push
enter
movs
or
arpl
push
mov
pusha
bound
bound
xor
mov
add
inc
scas
push
xor
in
fimul
or
xchg
add
test
(bad)
jb
cwde
adc
test
inc
add
data16
xchg
push
mov
inc
fs
xchg
inc
jb
dec
inc
xor
dec
jae
sbb
xchg
push
inc
push
mov
mov
hlt
push
pusha
mov
or
or
inc
pop
imul
retf
mov
test
push
test
push
(bad)
push
jb
jbe
ja
movs
add
cmp
fimul
add
push
es
int3
add
inc
adc
jb
pop
inc
pop
push
mov
les
data16
bound
pusha
imul
hlt
rcl
add
or
dec
js
popa
push
les
imul
or
push
xor
and
mov
sahf
inc
mov
jp
ins
push
sbb
inc
push
adc
pusha
inc
cmp
push
jle
dec
inc
test
push
mov
xor
test
out
xchg
and
test
xor
or
jo
sub
push
pop
stos
push
aam
push
add
in
into
xor
mov
aaa
mov
dec
test
inc
xor
dec
mov
mov
in
xor
mov
add
push
xor
add
and
push
sub
data16
clc
nop
push
nop
lea
lods
xor
cld
mov
fdivr
inc
lods
dec
sbb
outs
sub
movs
adc
push
push
xchg
adc
shr
lods
push
fidivr
pop
add
ja
cmps
mov
popa
mov
xor
leave
add
inc
adc
or
add
add
and
or
dec
push
adc
mov
dec
cs
add
adc
mov
idiv
js
inc
lds
inc
push
nop
adc
aaa
adc
js
inc
xchg
nop
clc
add
into
xchg
and
fld
add
sbb
adc
or
push
xor
jo
cmp
jne
popa
dec
push
es
xor
inc
adc
inc
mov
xchg
aam
cmp
pusha
mov
sahf
pop
inc
or
or
cmp
inc
dec
fdiv
add
ins
test
xor
push
ret
data16
xor
sub
push
pop
add
adc
es
scas
jb
into
movs
mov
je
push
mov
int3
ins
or
push
jl
xor
inc
cmp
push
and
imul
ret
mov
pop
xor
mov
xchg
cdq
or
cld
fwait
inc
or
hlt
popa
push
nop
les
push
push
xchg
mov
fild
xchg
test
inc
test
test
test
nop
add
jbe
push
and
sbb
dec
and
pusha
js
or
cwde
inc
mov
push
push
test
in
dec
test
adc
or
inc
enter
ret
inc
shl
fcomp
mov
or
push
dec
or
es
ss
inc
(bad)
xor
cli
dec
sub
or
inc
call
aaa
dec
add
test
adc
mov
inc
stos
mov
fidivr
fs
add
sbb
push
push
add
mov
push
and
jmp
ins
xchg
dec
ret
inc
inc
add
push
add
sbb
cmp
pop
sub
push
rcl
clc
test
inc
fs
jo
hlt
adc
mov
xor
sbb
dec
test
sbb
inc
loope
cmp
xchg
xor
xchg
shr
ja
push
sbb
sbb
push
cmp
xchg
movs
sbb
push
dec
adc
mov
push
inc
adc
(bad)
mov
imul
cmps
and
inc
sbb
or
xor
jb
fdivr
dec
inc
call
xor
pop
add
cmp
inc
xor
movs
xor
sub
call
test
popa
adc
outs
pop
or
mov
pop
mov
xor
movs
and
inc
xchg
shr
and
adc
xchg
cwde
dec
call
push
or
push
ret
outs
add
je
add
fcmovb
dec
add
mov
mov
add
add
xor
inc
xchg
aam
push
out
pop
cdq
xor
push
xor
cmps
push
bound
mov
imul
call
adc
ror
bound
xchg
enter
xor
add
mov
aaa
and
pop
dec
jno
or
loope
dec
inc
inc
adc
in
or
popa
pop
dec
pop
movs
mov
rcl
inc
mov
and
mov
stos
mov
bound
fst
movs
test
inc
inc
dec
dec
test
inc
dec
mov
add
push
sbb
hlt
mov
push
push
xor
sbb
mov
pusha
push
xor
add
int3
stos
dec
push
xor
inc
inc
and
xor
inc
sbb
js
jbe
fwait
fs
ss
xor
adc
out
retf
mov
fidiv
xor
xchg
loope
inc
fcom
push
push
(bad)
inc
dec
mov
cmps
js
sbb
push
cmp
push
cmp
cli
adc
or
test
add
inc
sbb
sbb
sub
and
dec
adc
mov
push
push
push
fs
jbe
jne
jo
les
push
xchg
test
pop
mov
push
bound
cmp
mov
dec
bound
fist
inc
enter
test
mov
test
push
sbb
stos
in
add
dec
imul
(bad)
dec
test
dec
cld
jae
ins
push
mov
pop
cmp
mov
popa
dec
sbb
call
or
mov
jmp
push
sbb
popa
cmps
dec
retf
and
push
pop
add
mov
dec
add
jmp
jl
push
(bad)
stos
call
pop
test
push
inc
push
sbb
mov
movs
cwde
call
or
add
and
into
bound
inc
push
fs
xor
and
add
add
les
and
xor
dec
push
push
test
inc
xchg
adc
or
mov
or
movs
sub
jns
clc
inc
aad
ret
je
jmp
cwde
xor
in
push
or
or
sbb
pop
cmp
adc
cs
push
push
or
ins
push
jb
jb
pop
cs
enter
dec
je
sub
fs
xor
xor
and
pusha
sbb
sub
outs
xchg
or
or
dec
xor
imul
stos
dec
push
addr16
push
and
shl
inc
cmp
pop
(bad)
outs
es
retf
test
and
jae
sbb
push
test
aaa
mov
movs
imul
jl
mov
xchg
mov
push
imul
sub
dec
lds
rol
xor
dec
cmp
push
ret
or
xor
ret
es
retf
push
inc
push
pop
out
adc
add
call
inc
mov
jmp
cli
sbb
in
mov
sbb
mov
or
add
inc
mov
aaa
adc
xchg
and
adc
int
push
jle
push
push
mov
js
jae
cmp
dec
enter
mov
movs
add
push
loop
pop
sub
and
cwde
sub
or
pop
sub
or
ss
sub
ins
xor
dec
inc
push
loopne
push
xor
mov
add
push
cdq
push
or
fsubr
inc
pop
or
cmp
dec
push
push
retf
inc
pop
out
mov
add
cmp
mov
sub
sbb
and
cmp
add
in
mov
cs
add
push
sub
inc
inc
add
cmp
xor
ret
sbb
xchg
pop
xor
lock
adc
je
push
push
push
cmp
jae
mov
bound
mov
or
jns
ss
in
adc
xchg
jp
enter
loopne
add
ins
inc
push
rcl
and
xlat
mov
dec
inc
clc
xchg
outs
dec
inc
dec
call
or
inc
and
push
push
adc
adc
ficomp
test
dec
inc
xor
or
mov
jo
push
dec
es
cmp
push
adc
inc
ret
outs
imul
mov
or
xor
sub
test
arpl
(bad)
test
adc
movs
ins
add
add
mov
sub
or
sub
dec
aad
xchg
dec
lods
jb
cmps
xor
sbb
push
je
dec
and
ins
add
or
ret
adc
sbb
loopne
mov
fs
dec
push
add
inc
dec
mov
outs
fcom
push
clc
jo
xor
call
xor
mov
or
push
jp
rol
sbb
cmps
xor
lds
adc
pop
jo
neg
popf
les
push
push
sub
add
shr
arpl
test
xchg
les
sahf
loopne
mov
lock
data16
test
xchg
retf
jl
mov
mov
popa
push
and
ss
adc
js
push
inc
shr
shl
and
dec
push
adc
test
lea
jo
retf
fadd
sub
or
and
es
xor
mov
mov
sub
pop
popa
fwait
or
out
push
push
fmul
sbb
mov
mov
xchg
push
jns
inc
sbb
push
mov
xor
push
imul
sbb
adc
dec
mov
mov
mov
popa
test
add
and
loopne
push
fidiv
add
data16
retf
inc
add
inc
add
push
imul
push
les
out
sbb
or
js
nop
cli
adc
pushf
push
pop
xchg
popa
sbb
jne
lds
xchg
or
hlt
jno
ret
mov
sahf
xchg
js
push
or
sub
gs
jo
les
push
push
and
xor
outs
inc
cwde
and
xor
sahf
adc
jbe
xor
inc
and
pop
mov
or
mov
bound
adc
dec
inc
out
shr
push
pop
push
jb
test
push
or
lods
ins
xor
adc
inc
cmps
dec
data16
and
(bad)
mov
xor
popf
xchg
sbb
push
xor
rol
test
in
xchg
dec
pop
adc
inc
shl
data16
dec
push
ds
add
adc
dec
jl
int3
cs
cmp
(bad)
dec
and
push
dec
push
mov
fwait
sub
ja
inc
nop
ss
xor
pop
mov
add
sbb
jne
jp
push
popa
inc
pop
outs
call
jb
add
push
add
mov
adc
and
push
push
inc
mov
dec
pop
jbe
or
xor
push
and
inc
jno
pop
inc
and
es
hlt
sub
(bad)
jb
dec
in
dec
jb
add
inc
push
pop
cmp
mov
mov
cmp
inc
sub
push
pop
xchg
mov
push
xor
and
outs
outs
mov
xor
adc
push
cmp
dec
jne
mov
lds
outs
jo
cmc
add
dec
push
lods
test
dec
push
rol
push
(bad)
mul
or
xchg
sub
cmp
add
push
dec
or
int3
push
dec
push
gs
or
inc
cmps
(bad)
imul
mov
jb
int
inc
cmp
sbb
and
xchg
add
push
and
dec
js
adc
pop
inc
adc
fimul
rcl
add
int
cld
cmp
or
mov
add
(bad)
int
push
or
ja
cmp
and
mov
cmp
and
in
jo
add
fsub
dec
jo
shl
sbb
jp
inc
ret
add
out
retf
fisub
cmp
imul
imul
loope
shl
dec
dec
jbe
loopne
lock
pusha
mov
fs
imul
xchg
pusha
out
pushf
sbb
push
push
inc
inc
shl
or
jbe
jae
inc
add
scas
inc
push
add
cmp
push
or
add
fcom
je
jle
call
xchg
gs
adc
xchg
es
sahf
inc
xchg
push
jno
or
add
sbb
cmp
push
adc
inc
cwde
add
shl
push
or
push
stos
or
pop
dec
adc
enter
fnstenv
mov
shl
add
stos
or
out
or
or
test
or
aam
ins
mov
pusha
test
or
cmp
cwde
sub
int3
movs
push
and
mov
sub
enter
jbe
movs
mov
nop
imul
cmp
jo
imul
inc
inc
jo
mov
rol
jl
sub
add
adc
inc
or
xor
pop
adc
push
shl
imul
and
ds
pop
push
jae
add
xor
sub
cmps
inc
pop
jns
fdivp
adc
push
and
je
xchg
(bad)
or
mov
jne
jo
sbb
or
xor
jb
cmp
stos
fadd
or
dec
cmp
data16
hlt
jno
sub
add
fiadd
test
inc
ins
jo
in
inc
mov
popa
call
add
mov
mov
lods
push
dec
xor
adc
add
shr
inc
sub
push
cmp
scas
dec
es
jbe
fdiv
mov
or
mov
imul
data16
sbb
es
or
sbb
xchg
push
sbb
fiadd
and
enter
dec
mov
rcl
and
add
les
dec
cli
dec
pop
push
sub
sub
enter
sbb
pushf
cmp
mov
dec
in
rol
call
xor
data16
adc
bound
sbb
or
dec
and
cmps
ret
xchg
cs
xchg
xchg
dec
mov
dec
outs
movs
pop
dec
rcl
mov
lock
xor
jae
call
inc
sbb
ss
dec
dec
or
imul
dec
push
xor
and
sbb
arpl
adc
mov
fs
pop
push
mov
(bad)
ins
fdiv
test
mov
les
xor
xchg
(bad)
bound
mov
adc
inc
add
cmp
test
mov
mov
mov
xchg
mov
adc
shl
add
inc
inc
mov
adc
pusha
mov
aaa
and
xor
bound
popa
sub
xchg
les
mov
xchg
inc
jbe
push
add
push
jb
cmp
scas
xor
sub
or
inc
test
gs
call
jp
adc
js
cmp
in
popa
add
rcl
cmc
mov
add
and
push
fs
in
xor
inc
sub
jae
mov
sub
add
sbb
fidiv
sbb
dec
sub
cwde
dec
push
or
dec
ins
xchg
push
or
add
adc
fisubr
dec
xor
inc
push
les
push
hlt
shr
xor
ss
popa
mov
dec
mov
jo
xor
and
mov
dec
cld
push
xchg
adc
nop
(bad)
mov
inc
sub
cwde
aad
in
out
test
xchg
adc
jb
xor
xchg
hlt
scas
imul
mov
pusha
ret
push
or
sbb
jo
dec
fisub
outs
sbb
fcom
imul
fidiv
and
adc
jb
xchg
mov
dec
int
push
jmp
and
aam
or
sub
jno
add
or
pushf
call
push
sub
arpl
inc
add
jbe
dec
les
xor
add
mov
and
add
sbb
mov
push
ss
jns
add
or
sbb
imul
or
bound
add
jbe
mov
push
mov
ja
add
inc
add
ds
inc
sbb
enter
ins
push
test
push
inc
and
jb
arpl
add
ins
(bad)
fisubr
dec
inc
xor
add
add
mov
and
pop
or
adc
inc
js
pop
dec
inc
aaa
fdiv
push
test
mov
arpl
jl
in
mov
adc
dec
sub
fmul
push
sbb
sub
fld
ins
fisubr
inc
pop
and
add
repnz
dec
add
or
dec
inc
cdq
sub
data16
shl
loopne
pop
or
addr16
inc
dec
cmp
pop
push
loopne
cs
ins
cmp
jb
push
(bad)
icebp
adc
dec
aam
ja
adc
dec
ins
cmp
arpl
js
jne
push
mov
rcl
push
cmp
inc
ret
popa
cmp
cdq
inc
shl
loop
aaa
and
gs
data16
aam
imul
jne
inc
push
retf
push
sub
mov
and
mov
mov
shr
and
mov
sub
jmp
push
dec
fs
rol
push
es
adc
or
jo
push
enter
movs
sbb
adc
dec
pop
and
xor
or
shr
xchg
or
(bad)
cli
push
mov
push
sub
cmp
sbb
call
imul
dec
loop
inc
dec
xchg
shl
movs
push
or
popa
push
(bad)
mov
xor
pusha
push
mov
ret
int
adc
sbb
outs
dec
fs
adc
or
stos
inc
or
(bad)
cmp
dec
add
push
arpl
jmp
in
pop
or
xchg
jp
or
mov
aaa
jb
popaw
mov
adc
js
rol
push
adc
je
pop
or
push
ins
push
bound
popa
ret
or
push
jle
sbb
les
sub
lock
or
imul
and
fadd
test
add
pop
push
cwde
or
nop
mov
les
and
adc
mov
test
dec
fs
inc
cmp
push
adc
inc
ret
xor
jae
shl
dec
xor
inc
lods
outs
cwde
sbb
xor
xchg
pop
push
inc
push
sub
mov
jo
js
mov
jb
shl
and
jle
inc
push
xchg
popa
adc
dec
add
test
xor
add
sub
imul
push
stos
inc
jae
xor
add
(bad)
adc
and
or
mov
xor
and
pop
adc
dec
and
rol
dec
fadd
xchg
push
dec
xchg
push
xchg
in
ss
test
dec
xchg
pop
mov
push
sub
lock
retf
and
and
add
pop
or
dec
pop
push
adc
mov
mov
movs
add
jo
sub
xor
ret
shl
loop
xor
and
push
and
push
push
and
cmp
add
enter
fcomp
je
mov
shl
aaa
pop
adc
dec
pusha
sbb
or
sub
or
fistp
dec
je
sbb
call
dec
inc
jns
sub
push
add
push
dec
shr
xor
push
dec
sbb
inc
in
push
inc
ins
push
rol
xor
dec
sub
jle
push
push
push
xor
adc
push
leave
sbb
pop
or
dec
lods
fidiv
aam
outs
into
lock
add
dec
pusha
xor
mov
aam
imul
jo
sub
pushw
jo
pop
js
inc
popa
xor
inc
push
adc
sbb
adc
in
mov
jo
movs
outs
fidiv
repnz
ins
jae
aam
cdq
fidivr
imul
sub
add
fcom
jo
loop
and
test
in
mov
ja
fs
or
or
pop
stos
jl
push
pop
xor
jne
xor
adc
jp
push
enter
push
sub
inc
ret
xor
movs
push
sub
dec
push
push
push
or
push
cmps
dec
in
test
adc
in
adc
enter
sub
cmp
push
dec
aaa
sub
or
inc
xor
sbb
xor
es
pop
adc
aad
retf
push
or
leave
xor
sub
cmp
pop
ss
(bad)
inc
inc
or
jp
(bad)
ret
inc
ins
mov
imul
(bad)
jb
fs
dec
sub
sub
inc
add
dec
push
and
push
push
lds
mov
pushf
push
push
push
mov
inc
aad
xor
arpl
and
add
and
imul
pusha
sub
jmp
mov
push
xchg
and
or
sbb
stos
adc
inc
cmp
rcl
cmp
and
sub
mov
xchg
push
cli
cld
gs
push
sub
enter
add
(bad)
sub
jo
pusha
xchg
sub
pusha
and
ss
jb
test
push
cmps
mov
and
ins
test
or
push
or
or
xor
pop
xchg
jbe
xor
arpl
mov
mov
jb
cmp
xor
cmp
dec
xor
inc
xor
jne
dec
outs
adc
js
inc
xor
jo
inc
push
mov
xchg
xchg
je
lea
xchg
mov
retf
push
jmp
sbb
loopne
xor
adc
push
and
sbb
ss
(bad)
aam
jno
or
push
out
test
pop
push
ins
imul
and
or
hlt
xchg
and
sub
fsub
or
and
sbb
inc
xchg
add
aam
mov
(bad)
jmp
enter
xor
xor
sbb
inc
jge
cmp
aaa
hlt
dec
mov
push
ins
mov
add
inc
push
or
cmps
sub
mov
test
jbe
inc
mov
mov
jb
call
push
mov
mov
arpl
mov
mov
call
or
addr16
add
add
jp
push
mov
push
xor
add
dec
ret
xor
rcl
movs
popf
xchg
cs
outs
int3
dec
sbb
ret
test
xchg
cmp
inc
mov
mov
mov
jo
rcl
push
cmp
dec
popa
jns
or
and
inc
dec
adc
jb
ins
sub
and
dec
jmp
add
enter
push
les
pushf
es
jle
push
jb
call
dec
pop
mov
lods
fcmovbe
jb
fisub
ret
fnstenv
jbe
outs
add
retf
and
or
mov
dec
js
push
adc
inc
pop
fdiv
push
inc
ja
test
dec
lock
add
loope
push
cwde
jbe
loopne
and
test
inc
dec
sahf
and
and
fimul
adc
push
call
xor
shl
add
inc
ins
inc
xor
adc
dec
arpl
in
pop
push
outs
shr
call
inc
add
shl
scas
inc
jae
adc
dec
hlt
data16
mov
xor
pop
push
add
mov
jbe
cmp
inc
push
cmps
push
jne
or
and
jl
and
(bad)
cmps
dec
sub
cmp
sub
movs
xor
fcmovne
and
push
xor
or
mov
xor
fiadd
imul
add
xor
add
js
mov
adc
jl
pop
dec
mov
sbb
fsub
jp
fsub
jmp
dec
xchg
ins
or
xor
and
dec
ret
aas
fisub
es
xor
mov
or
push
lods
cmps
dec
mov
add
cmp
or
jb
push
push
xchg
push
dec
stos
data16
sbb
pop
push
loope
mov
inc
test
xchg
shl
push
cld
and
cli
inc
je
shl
in
jo
pop
fdivr
jno
adc
xchg
int3
ror
push
or
inc
(bad)
cmps
loop
xor
inc
push
xchg
retf
inc
pop
js
push
jbe
add
dec
inc
cs
mov
sar
inc
dec
js
xchg
push
add
js
xor
pusha
jo
inc
or
add
jbe
push
cld
fdiv
test
adc
jb
pop
dec
imul
and
push
or
es
and
mov
jmp
dec
jae
adc
dec
cs
ror
inc
push
sub
or
push
pop
test
jo
data16
test
je
or
sub
call
ret
sbb
sbb
push
rol
sbb
outs
ss
push
cld
aam
xchg
dec
push
and
dec
mov
push
cs
bound
cmp
push
gs
sub
cmp
add
or
sahf
shl
or
imul
jbe
jo
mov
push
stos
popa
adc
xor
sbb
mov
or
xor
add
rol
in
push
inc
test
ins
ret
ror
enter
and
add
cmp
test
push
mov
pop
in
push
or
and
stos
sub
adc
pop
adc
dec
mov
xor
dec
aam
ja
cmp
sub
pop
outs
mov
nop
adc
xchg
ret
out
xchg
inc
inc
xchg
push
jbe
rol
inc
add
test
addr16
nop
popa
xchg
fs
adc
add
xor
dec
ins
sbb
gs
dec
retf
add
inc
or
and
(bad)
ins
test
gs
or
adc
dec
movs
jo
call
add
(bad)
mov
cwde
bound
je
or
rcl
lods
adc
mov
ja
jo
inc
xchg
dec
aam
sbb
les
adc
add
cmps
add
mov
push
fcomp
cs
pop
dec
cmp
fs
xor
push
lea
fadd
mov
push
popa
ror
jne
vrcpps
test
cwde
nop
ficom
pop
fcom
int3
and
add
dec
aad
adc
or
ror
lods
xor
inc
and
cmp
test
mov
xchg
add
adc
mov
add
test
adc
arpl
jae
xchg
test
dec
jmp
jo
gs
push
sub
inc
pop
dec
dec
add
test
adc
cmp
dec
mov
sbb
inc
cmp
cmp
sbb
sub
push
xor
shl
rol
cmp
jmp
inc
jae
stos
and
or
fsubr
jmp
dec
push
xor
xchg
je
mov
pop
cmp
ds
jo
cmps
or
adc
or
and
add
adc
in
and
sbb
pusha
xor
pop
sahf
push
add
int3
movs
(bad)
mov
xchg
sub
movs
pop
dec
inc
sub
xchg
enter
and
inc
pop
lock
push
cs
and
and
fcom
add
mov
and
dec
inc
xchg
rol
jmp
push
xor
xor
aaa
push
adc
sub
xchg
mov
pop
nop
enter
inc
aad
pop
ror
in
outs
pushf
xchg
sbb
test
in
dec
or
es
fdiv
pusha
inc
add
ret
mov
push
inc
ins
jmp
xor
mov
inc
xchg
in
dec
pop
imul
jp
sub
xchg
dec
dec
cmp
adc
lock
rol
inc
jno
xor
stos
mov
dec
mov
push
pop
sub
movs
xor
call
mov
or
adc
mov
pop
mov
xchg
pop
inc
push
js
addr16
push
pop
xchg
mov
push
push
pusha
pop
pop
jbe
cwde
fcmovbe
lods
inc
bound
dec
push
rol
or
retf
and
push
stos
repnz
xor
aad
dec
fmul
popa
arpl
mov
(bad)
(bad)
xor
push
pop
pusha
push
jne
pop
gs
mov
and
aad
dec
inc
add
and
dec
lods
or
add
adc
les
mov
mov
dec
jno
je
pop
pop
jb
xor
xor
push
mov
retf
add
mov
sub
xor
xchg
add
jo
sub
or
ret
cmp
push
dec
cmp
xchg
add
(bad)
stos
or
call
adc
sub
popa
inc
jp
jbe
xor
adc
outs
mov
sub
mov
push
les
jb
inc
and
push
dec
rcl
inc
test
lods
push
xor
push
imul
mov
shl
dec
and
xchg
inc
test
sub
lods
push
jne
test
push
ins
dec
movs
and
push
fdivr
mov
or
arpl
mov
xor
or
push
dec
pusha
dec
xor
rol
add
popa
stos
inc
and
xchg
cs
and
dec
jae
jp
scas
cmps
sbb
jp
and
push
(bad)
mov
mov
inc
pushf
pusha
add
dec
pusha
jp
push
mov
or
test
ret
je
ins
ds
push
mov
add
jb
adc
inc
test
adc
push
lock
ins
jne
ins
aaa
cmp
fs
mov
xor
retf
add
pop
fs
push
dec
jp
cdq
loope
test
mov
shr
or
pop
mov
popf
pop
clc
xor
inc
and
and
test
clc
and
xor
es
jmp
add
push
xor
jns
inc
clc
jne
dec
inc
or
fcomp
jp
pusha
inc
test
jae
add
sbb
xchg
imul
mov
push
push
sbb
push
cmps
push
dec
or
(bad)
int3
xor
push
jae
or
dec
jp
or
lods
sub
jne
xor
inc
or
push
(bad)
xor
adc
pusha
push
mov
shr
lock
add
data16
outs
imul
push
ja
enter
sbb
or
sub
ins
sbb
pusha
dec
push
inc
pop
mov
inc
xor
movs
mov
jecxz
xor
test
push
push
dec
dec
or
jne
(bad)
in
xor
pop
inc
or
jno
aaa
and
nop
aam
xor
jno
outs
dec
add
and
push
pop
stos
test
ins
call
dec
stos
enter
push
xor
jne
ds
or
cli
and
inc
mov
mov
fdiv
imul
pop
or
xor
dec
pop
cmp
ret
push
pop
mov
push
or
xchg
nop
inc
call
pop
push
shr
mov
or
pop
je
and
xchg
inc
and
dec
mov
mov
dec
xor
adc
dec
push
sbb
mov
inc
xor
sub
fs
pop
or
add
mov
add
out
sbb
mov
sbb
test
or
add
adc
or
push
xor
lods
cmp
inc
or
in
xor
add
dec
ja
pop
sub
jb
adc
cmp
jb
mov
mov
push
hlt
inc
movs
mov
inc
dec
dec
je
pop
push
lods
pushf
jno
cmp
cwde
inc
mov
jl
nop
pusha
sub
cmp
fs
push
sub
fstp
push
out
popa
xor
rcr
fs
fmul
xor
inc
or
jb
mov
dec
push
mov
add
sahf
push
mov
cmps
mov
adc
leave
xor
dec
push
aam
and
add
sub
cdq
and
fmul
or
aaa
mov
or
fadd
inc
xor
inc
sbb
test
sbb
and
into
and
adc
dec
mov
ds
inc
or
jb
pop
add
or
push
mov
test
push
outs
(bad)
push
and
js
into
sub
sub
ds
popa
stos
call
mov
add
cmps
jl
pop
mov
or
push
sbb
push
lock
retf
ins
mov
sbb
es
dec
bound
push
push
adc
je
data16
mov
and
mov
push
pop
push
int3
imul
pop
bound
xchg
ret
add
enter
xor
jo
dec
pop
xor
int3
adc
adc
fwait
push
adc
fidivr
test
or
aam
add
adc
lock
inc
xchg
lea
xchg
dec
push
adc
inc
xor
jmp
out
dec
xor
xchg
push
ins
sbb
add
xchg
fidiv
ss
ins
inc
data16
xchg
shl
(bad)
out
jmp
adc
ins
and
xor
inc
fidiv
push
shl
sbb
ds
push
or
lds
dec
dec
push
sbb
imul
call
ficomp
mov
add
in
dec
rol
pop
inc
sbb
ins
div
pop
xor
nop
adc
sub
out
jp
rcl
add
push
xchg
cmp
dec
inc
sub
or
dec
push
adc
and
fiadd
mov
inc
lods
shl
mov
shl
dec
cmp
and
mov
ins
ds
fsub
mov
inc
pop
xchg
ret
inc
or
mov
stos
sahf
fmul
cmp
mov
or
outs
and
adc
retf
push
adc
add
pop
mov
outs
pop
in
inc
pop
sub
test
test
push
mov
xor
xor
and
stos
pop
dec
ins
adc
adc
cmp
inc
dec
or
inc
push
mov
clc
js
pop
xor
xor
xchg
and
sbb
push
xchg
popa
xchg
pop
or
add
jle
add
dec
dec
push
mov
mov
add
(bad)
push
ror
xor
or
aaa
add
and
jbe
mov
sahf
cli
xor
daa
cmp
and
jae
call
sbb
xor
adc
adc
push
ins
int3
mov
arpl
nop
push
push
push
adc
loopne
pop
nop
inc
add
inc
les
arpl
push
add
add
ret
or
(bad)
int3
mov
push
inc
sub
cwde
adc
ficomp
add
jbe
dec
xchg
nop
ret
sub
xchg
mov
adc
pusha
push
cmp
cmp
jmp
push
shl
(bad)
(bad)
dec
or
stos
sub
cli
in
push
push
es
jo
sbb
push
inc
sbb
add
and
loopne
aam
(bad)
je
and
bound
fs
sub
nop
push
dec
mov
inc
je
loopne
mov
push
jno
test
sbb
ret
ss
cmp
push
cmp
xchg
dec
(bad)
xor
shr
pushf
movs
xor
cmps
and
dec
or
push
inc
jmp
clc
imul
push
int3
rol
xchg
test
popa
sub
ss
mov
call
push
push
mov
mov
es
(bad)
sbb
push
or
ss
data16
imul
dec
sbb
cmp
add
and
sbb
bound
sbb
dec
push
cmp
lods
retf
sub
and
fdiv
dec
push
push
sar
movs
fiadd
push
xor
xor
ficom
daa
mov
add
sbb
addr16
mov
fisubr
gs
sbb
cs
push
enter
and
movs
cmp
adc
add
call
loopne
mov
sub
into
push
sbb
push
mov
push
sub
and
out
cs
xor
shr
cmp
xor
sbb
push
inc
xchg
inc
mov
push
nop
lock
fisub
add
push
jb
sub
sbb
xchg
cwde
xchg
ror
imul
add
or
or
push
add
in
xor
push
or
push
fsub
inc
push
dec
push
dec
add
xchg
out
lods
stos
mov
aaa
je
add
push
and
out
or
xchg
mov
pop
jb
dec
(bad)
movs
or
push
pop
inc
pusha
sbb
xor
and
push
pusha
cmp
test
inc
ret
xor
jo
push
test
mov
mov
fucomi
in
push
lock
cmp
gs
arpl
out
add
cld
inc
ss
or
inc
xor
mov
ins
inc
or
dec
int3
or
pop
inc
inc
ins
dec
aam
ficom
dec
dec
dec
inc
ins
pop
mov
bound
xor
aam
push
jno
xor
inc
adc
test
fcom
sub
jo
lds
test
in
dec
jp
sbb
and
xor
push
push
xchg
ret
push
fwait
ror
popa
popa
add
inc
ret
sub
mov
jb
fs
add
scas
sub
jae
or
jb
call
add
lods
mov
and
or
scas
and
push
gs
xchg
cdq
mov
jno
adc
or
xor
ror
push
add
push
ror
retf
or
mov
or
les
push
xchg
hlt
jl
shl
enter
adc
push
es
fsubr
lods
cmps
outs
call
cmp
popa
imul
jo
push
cdq
inc
push
xchg
les
fcom
stos
in
dec
mov
je
xor
mov
dec
jne
popa
mov
jne
mov
or
les
rol
pop
cmp
ss
add
test
imul
push
inc
rol
xor
add
and
aaa
dec
push
add
dec
push
xor
xor
cwd
inc
bound
sahf
pop
sub
rol
mov
push
data16
mov
inc
loopne
xchg
bound
clc
rcr
push
fld
jae
sbb
xchg
jp
adc
xchg
or
in
aad
jle
dec
pop
sub
and
dec
push
or
adc
nop
mov
push
sbb
xchg
test
fs
xor
sub
or
xchg
nop
push
add
mov
movs
sub
mov
shl
cwde
inc
xor
int3
rol
mov
mov
pusha
rcl
sbb
or
add
adc
add
xor
dec
ror
push
in
or
cmp
xor
or
mov
push
mov
dec
jb
dec
test
inc
retf
mov
push
push
test
arpl
push
push
clc
mov
xor
nop
pop
aaa
adc
pop
inc
inc
push
fiadd
jo
rcl
mov
dec
mov
call
arpl
jae
rcl
pop
inc
ficom
test
xor
adc
pop
(bad)
test
add
rcr
xchg
fld
loopne
push
dec
push
fs
mov
loopne
jp
mov
pop
adc
inc
mov
or
in
mov
adc
cdq
xor
rcr
ds
push
add
xchg
sbb
dec
push
jl
and
test
fs
inc
je
pop
and
je
push
dec
jne
movs
dec
cli
outs
add
xchg
dec
mov
sbb
inc
adc
in
push
stos
xor
int3
and
and
push
push
push
data16
mov
push
add
fcom
jo
pusha
ss
or
mov
push
mov
jb
mov
rcl
in
add
(bad)
imul
je
push
cmp
push
pop
dec
xchg
and
add
add
mov
sub
fs
add
test
or
push
inc
cmp
and
imul
call
sbb
ins
je
outs
ss
ins
mov
dec
push
mov
dec
outs
fisubr
jno
loopne
cdq
movs
sbb
mov
mov
xor
pop
mov
data16
adc
sahf
inc
push
dec
mov
push
add
dec
mov
les
dec
gs
arpl
sub
lock
xor
bound
pop
test
mov
inc
test
xchg
and
add
addr16
cmp
ins
push
dec
push
retf
outs
sub
dec
cmps
jne
pop
fiadd
push
test
movs
xor
push
cdq
xchg
cmc
call
jo
xchg
pop
pushf
jns
js
add
sub
loopne
ja
ficomp
xchg
mov
adc
ret
lds
mov
loop
fimul
pop
dec
test
sub
push
add
dec
out
mov
dec
dec
lods
xor
sub
fidiv
xchg
inc
or
bound
push
mov
push
inc
pop
inc
jb
loopne
or
xor
mov
xor
ss
fcom
dec
bound
dec
stos
outs
retf
popa
mov
jns
mov
fsub
in
or
sbb
add
push
mov
jo
test
push
rol
inc
and
popa
xchg
adc
and
jmp
push
push
adc
adc
rcl
loopne
ss
das
sar
dec
aaa
sub
test
inc
xor
test
push
mov
jo
push
call
inc
add
and
add
or
sub
jmp
inc
sub
sbb
or
push
test
xchg
lea
mov
adc
mov
push
and
je
aam
pop
add
add
fcmovb
xor
or
xchg
adc
sbb
je
(bad)
test
push
aaa
and
xor
push
or
mov
jle
push
or
mov
or
and
adc
loopne
push
test
pop
arpl
mov
xor
mov
push
sahf
shr
ss
jb
jb
mov
push
add
dec
pusha
mov
and
push
dec
jb
xor
adc
adc
or
cs
sub
add
sbb
xor
cli
jbe
dec
imul
adc
push
mov
mov
or
dec
adc
xchg
inc
popa
push
jmp
aam
push
dec
pop
add
push
inc
xchg
mov
cmp
jo
ins
xor
stos
mov
outs
dec
inc
test
sub
mov
xor
mov
ss
jb
push
inc
jp
dec
retf
sub
jns
imul
xchg
loopne
sub
or
mov
and
jp
sbb
pusha
push
pusha
xchg
jmp
pop
rol
pusha
sub
push
adc
sbb
ins
fiadd
push
or
push
or
push
es
add
dec
jno
cmps
push
mov
xor
push
lds
dec
xor
mov
inc
mov
movs
add
or
loop
dec
and
xor
data16
push
stos
jmp
sbb
push
xchg
mov
jne
movs
mov
and
jb
shr
mov
adc
scas
add
inc
enter
rcl
adc
jns
and
rcr
outs
cmp
xor
push
xor
mov
mov
xor
nop
pusha
xor
pop
adc
mov
popa
dec
pop
ins
imul
out
dec
jb
or
mov
xchg
mov
push
inc
sub
dec
dec
add
push
or
adc
mov
push
add
mov
and
js
jo
mov
popa
xor
mov
ja
movs
xchg
jne
and
add
mov
jae
cdq
retf
or
mov
test
and
ss
cmp
or
push
out
je
push
xchg
add
dec
fs
xor
xchg
rol
adc
enter
test
dec
ss
push
imul
adc
adc
sub
pop
stos
movs
add
cmp
mov
inc
inc
ja
inc
cmps
or
test
(bad)
popa
lods
mov
mov
outs
push
adc
jno
and
push
xor
sbb
or
jo
cmp
retf
sahf
sbb
dec
test
outs
rol
in
add
push
push
inc
hlt
dec
dec
jo
inc
and
data16
cmps
movs
xchg
push
ins
xor
xor
inc
pop
dec
xor
dec
es
ficom
jb
xchg
xor
test
push
xor
sub
outs
xchg
mov
xchg
or
call
shl
stos
(bad)
aaa
cli
dec
jbe
sbb
xor
cld
push
add
add
nop
adc
xchg
call
add
clc
ins
dec
add
nop
test
nop
push
outs
dec
push
outs
inc
or
es
xor
sbb
inc
xor
mov
dec
inc
inc
aad
ins
inc
xor
inc
repnz
and
sub
or
cs
inc
pop
pop
pop
adc
pop
jmp
xor
int3
mov
fs
xor
cmp
push
(bad)
fimul
xchg
inc
cmp
jne
jno
and
jl
fs
and
imul
xor
inc
jns
dec
test
xchg
in
and
push
fimul
or
push
cdq
popa
cdq
dec
faddp
push
jle
stos
cdq
inc
pop
outs
js
inc
dec
fmul
xor
mov
mul
outs
push
add
fs
test
push
xchg
cs
inc
sbb
(bad)
js
xchg
push
inc
add
pusha
push
adc
dec
es
sub
xor
call
ret
pusha
push
inc
add
xchg
pop
test
mov
inc
sub
inc
rol
xor
pop
in
dec
rol
call
add
jns
pop
push
push
sub
ret
sbb
sub
inc
dec
cdq
into
out
or
or
or
cmp
push
adc
mov
mov
test
(bad)
pusha
adc
js
sub
and
or
fadd
push
mov
xchg
repnz
add
retf
add
sar
pushf
mov
adc
int3
ror
inc
dec
sub
retf
push
jae
push
push
fdiv
fmul
dec
xor
adc
bound
add
data16
or
push
xchg
adc
dec
jl
dec
and
add
mov
pop
push
and
nop
ds
push
shl
in
adc
jb
ins
mov
ficom
adc
xor
fs
push
xor
xchg
pushf
test
nop
dec
ss
dec
aaa
sbb
aaa
xchg
adc
xchg
dec
mov
sub
inc
inc
pushf
lds
outs
add
jo
add
cmp
inc
pop
shl
imul
fs
adc
push
inc
ficom
or
mov
add
retf
mov
mov
enter
mov
jb
test
push
inc
fs
data16
push
push
add
pop
push
bound
mov
or
push
mov
cmp
sub
and
or
mov
je
sbb
int3
ret
lds
mov
(bad)
push
pop
outs
add
add
jmp
xor
(bad)
ja
bound
inc
in
add
mov
test
cwde
xor
inc
and
add
dec
dec
fisub
retf
add
mov
add
push
imul
inc
or
push
mov
add
shr
pop
pop
dec
pop
inc
mov
dec
jp
bound
xchg
inc
push
mov
retf
inc
outs
mov
je
sbb
jno
rol
and
adc
add
rol
and
out
push
jp
inc
mov
je
mov
dec
aam
outs
pop
bound
js
in
and
je
jo
push
inc
cmp
dec
dec
push
lock
loopne
add
add
push
rol
ret
cld
push
xchg
sub
es
push
push
push
sbb
nop
aad
push
and
adc
or
pop
cmp
push
inc
mov
dec
push
adc
xor
pusha
ja
xchg
mov
xor
outs
sbb
aam
sub
xchg
shl
push
jo
push
mov
cs
je
repnz
push
inc
inc
cwde
mov
inc
stos
mov
xor
retf
sub
retw
xchg
adc
hlt
shr
add
push
xchg
inc
push
mov
inc
ins
adc
add
push
jo
xchg
push
sub
arpl
inc
or
push
mov
xchg
mov
inc
mov
inc
inc
push
test
xchg
add
mov
js
adc
sub
cmp
loopne
repnz
xchg
add
mov
fadd
mov
sbb
js
aad
mov
cld
push
dec
outs
and
stos
or
int3
dec
jb
sbb
push
sub
jno
mov
sub
lods
retf
add
inc
xor
nop
adc
les
leave
sbb
push
jp
outs
lods
push
ror
dec
test
sub
cs
and
dec
push
and
push
push
mov
cwde
or
push
push
fadd
push
add
mov
xor
push
and
jne
mov
xchg
pop
call
dec
into
or
fs
jae
jb
adc
push
mov
xchg
or
xchg
dec
push
xchg
loopne
jne
test
jbe
or
es
pop
ror
not
inc
push
and
add
jbe
pop
pop
push
fmul
xor
add
cmps
mov
and
jmp
add
inc
adc
push
bound
cmp
loopne
outs
inc
inc
cli
mov
xor
adc
call
out
js
mov
inc
adc
dec
push
les
sub
pusha
dec
or
gs
popa
sbb
cmp
push
pusha
add
push
rol
lods
cdq
add
outs
call
retf
inc
xchg
fs
inc
lock
dec
jb
shr
cld
mov
inc
cmp
shl
xor
inc
push
shl
push
push
jl
xor
inc
mov
add
sbb
outs
data16
ret
pop
xor
inc
pop
enter
cld
mov
add
xor
ss
jb
xor
adc
shl
sbb
shl
or
gs
jb
xor
fimul
aam
ins
dec
loopne
jb
inc
pop
or
js
outs
push
and
push
push
xchg
ficomp
rcl
fmul
jne
nop
enter
sbb
or
add
push
mov
sbb
and
retf
mov
ja
xor
push
pop
pop
mov
jns
pusha
mov
add
js
test
dec
jo
in
add
mov
pusha
push
je
xor
aad
leave
jle
dec
imul
push
retf
xchg
jo
mov
xchg
cdq
in
cmp
imul
scas
push
bound
aaa
fs
mov
push
div
clc
gs
mov
nop
push
in
not
push
stos
cld
outs
adc
pop
sbb
push
ficom
add
jns
cmp
add
pop
aaa
or
mov
mov
xor
xchg
nop
shl
data16
xchg
add
pop
pop
and
dec
add
push
sbb
dec
xor
call
cmp
xchg
leave
push
or
mov
dec
sbb
pop
mov
aaa
fdiv
xchg
shl
mov
js
and
add
xchg
retf
add
pushf
pusha
lods
adc
pop
jae
inc
jae
dec
push
data16
push
dec
jb
inc
into
xor
hlt
add
or
add
pop
loope
jo
pop
js
rol
jmp
ins
cmp
push
(bad)
push
adc
xchg
stos
ret
(bad)
outs
sahf
jo
rcr
adc
(bad)
fiadd
loope
test
nop
ss
adc
or
scas
imul
bound
or
add
mov
ja
mov
jo
les
aas
push
push
inc
fs
aas
adc
adc
mov
shl
inc
mov
mov
and
or
inc
sub
les
outs
sbb
sbb
adc
mov
ins
lock
cmp
ret
sub
cmp
imul
pop
loop
push
ins
push
or
and
push
xor
mov
and
hlt
cmp
push
sbb
mov
add
out
nop
dec
loope
int3
and
xor
aaa
imul
mov
and
ss
cmps
adc
mov
les
pop
add
pushf
dec
fidiv
sbb
test
loop
and
or
mov
mov
jl
xchg
mov
jo
xor
pushw
in
jae
inc
aad
out
addr16
add
inc
and
xor
dec
push
ja
adc
xchg
ror
into
xor
aad
pop
sbb
xor
aam
sbb
dec
xor
jae
and
leave
sub
inc
xor
add
lock
test
mov
ins
jbe
sbb
int3
sub
dec
jo
fwait
add
inc
cs
sbb
test
dec
adc
gs
dec
add
jo
rcr
or
mov
jl
push
bound
push
xor
add
mov
jns
mov
mov
push
sbb
xor
push
xchg
xchg
jo
imul
rol
enter
ror
sub
jne
test
in
test
or
xor
inc
add
call
xor
inc
push
jo
inc
inc
and
mov
pop
push
in
sbb
nop
jmp
and
out
clc
dec
push
xchg
sbb
adc
or
sbb
mov
adc
inc
fdiv
sbb
cmp
xor
dec
out
sbb
fld
arpl
test
mov
test
push
xchg
jo
nop
sbb
sbb
pusha
pop
sub
xchg
push
dec
retf
push
push
xchg
dec
ins
sbb
imul
xor
jns
shr
dec
inc
mov
inc
and
push
xchg
(bad)
shl
sub
call
sub
cmp
outs
inc
push
mov
call
inc
test
inc
adc
xor
adc
inc
sub
adc
mov
adc
sub
(bad)
and
retf
inc
adc
es
scas
and
add
xor
repnz
dec
adc
jne
mov
pusha
movs
pushf
ss
inc
mov
push
push
cmp
jmp
push
inc
sub
fs
sbb
jns
adc
pop
sbb
aad
push
enter
dec
add
and
dec
js
test
xor
sub
or
jl
js
push
jae
xor
loopne
inc
push
jle
in
inc
dec
ins
and
jo
lods
mov
inc
jne
cs
jbe
adc
add
dec
ss
mov
xchg
bound
sbb
ins
(bad)
adc
fmul
fs
dec
inc
add
xchg
ret
nop
rol
sub
cmps
pop
or
dec
stos
push
push
data16
xlat
nop
loope
nop
ins
ins
dec
jb
loopne
inc
inc
cmps
cmp
movs
and
and
in
xchg
or
mov
enter
les
xchg
sbb
add
add
arpl
bound
aam
stos
ss
push
xor
mov
cmp
pop
xor
cwde
mov
fs
dec
(bad)
inc
call
pusha
cs
mov
and
xchg
arpl
add
push
ja
xchg
js
xor
add
inc
push
inc
pusha
push
mov
jle
nop
ins
xchg
sub
scas
xor
dec
xor
inc
lock
xor
pushf
pop
dec
jns
adc
jae
jne
inc
xchg
movs
js
je
adc
xor
test
dec
push
cdq
pop
xor
xor
xor
mov
cdq
add
or
pop
mov
xor
inc
xor
(bad)
xor
adc
dec
imul
mov
dec
jp
jae
dec
movs
js
cwde
push
ror
cld
and
jne
and
es
xor
push
mov
adc
mov
mov
repnz
adc
test
(bad)
rcl
xchg
cmp
dec
push
push
adc
add
jge
inc
test
aaa
add
xor
and
add
loopne
or
jl
dec
enter
sub
cmp
and
sub
sub
out
push
push
cmp
test
add
push
sbb
or
or
jne
and
adc
icebp
mov
sub
dec
inc
dec
jle
inc
test
push
inc
xchg
and
mov
cwde
add
mov
jb
ror
imul
fs
es
ins
(bad)
mov
call
sbb
aaa
push
push
inc
xlat
retf
and
aad
sub
out
cmp
xor
pop
fcom
jbe
jp
xor
xchg
adc
cmps
dec
inc
loope
jmp
push
pop
dec
int3
push
popa
mov
push
xor
adc
push
sub
sub
mov
push
fdiv
jae
push
aam
cmp
jbe
push
pop
xor
push
dec
dec
inc
or
(bad)
addr16
movntps
push
pop
push
push
dec
fs
mov
sub
xor
xor
jne
fdiv
pushf
mov
push
dec
inc
popf
xchg
outs
bound
es
add
(bad)
sub
mov
jp
adc
jp
xchg
sbb
hlt
push
push
cmp
into
mov
adc
xchg
cmp
popa
xchg
pop
and
inc
cmp
xor
test
inc
daa
and
mov
leave
sub
test
and
push
push
dec
imul
cwde
pop
clc
inc
adc
jbe
xchg
inc
adc
aam
popa
inc
adc
dec
push
and
dec
cmp
xchg
ror
add
jo
add
mov
push
dec
xor
push
xor
pop
shl
xchg
cli
xor
add
add
mov
sbb
xchg
cmp
push
dec
rol
les
sub
call
call
xchg
rcl
into
cmp
sbb
or
push
add
pusha
dec
in
adc
inc
sbb
test
jl
push
call
bound
dec
es
arpl
push
sbb
lods
jb
sub
dec
retf
clc
retf
push
push
enter
nop
shl
mov
ins
pusha
mov
push
pop
enter
in
add
sub
in
cmp
in
es
jbe
ret
sub
mov
in
ins
inc
rcl
cdq
imul
mov
cmps
add
popa
inc
ins
inc
push
add
push
dec
sub
stos
repnz
leave
stos
dec
mov
stos
add
arpl
fist
dec
scas
addr16
add
xor
jp
push
dec
test
push
jo
or
or
sub
mov
jae
loopne
ret
mov
or
js
loopne
adc
ss
push
call
push
loopne
inc
xor
and
fs
xchg
add
dec
in
(bad)
aad
push
inc
jo
inc
xor
and
jbe
dec
cmps
mov
test
and
mov
jb
inc
and
or
xor
jno
xor
mov
movs
dec
je
movs
dec
add
dec
(bad)
dec
xor
push
inc
(bad)
stos
sbb
adc
aaa
push
dec
inc
ins
push
popa
mov
mov
ss
mov
mov
mov
and
adc
add
sbb
push
pop
jle
xor
mov
push
dec
shl
xchg
push
mov
je
cs
dec
mov
dec
xchg
nop
push
aaa
cmp
ret
mov
dec
adc
dec
xor
loopne
mov
inc
jbe
pop
and
push
mov
xor
jae
add
and
add
rcr
test
sbb
push
xchg
push
(bad)
sbb
pop
xor
xor
xor
jne
and
loope
sub
mov
sbb
(bad)
xchg
mov
xor
and
ins
inc
pop
add
outs
pop
ret
mov
add
and
ret
adc
dec
dec
xor
inc
add
cwde
or
pop
or
xchg
cmp
push
fs
test
pop
inc
push
push
call
jo
dec
push
daa
add
jl
pop
imul
and
and
mov
cmps
inc
xchg
mov
push
push
sub
xor
aam
jns
mov
push
push
xchg
sub
adc
ins
or
cmps
movs
xor
shl
ret
pusha
xchg
mov
shl
mov
xor
dec
outs
dec
adc
inc
call
cmp
ins
bound
dec
cmp
xor
and
int3
mov
sub
add
cmp
mov
mov
mov
fs
xchg
outs
js
xchg
call
(bad)
dec
lea
cmp
add
ss
movs
fisubr
(bad)
xor
xor
dec
jp
aam
push
es
mov
xor
xor
jecxz
dec
adc
dec
outs
call
test
jae
dec
test
clc
int3
and
and
mov
je
jb
push
inc
mov
mov
data16
push
pop
imul
nop
ins
sub
pop
jbe
push
shr
inc
pop
or
or
fisubr
inc
pushw
add
test
mov
add
cmp
push
bound
adc
dec
inc
jmp
inc
rcl
fisubr
adc
push
pop
sub
pop
xchg
loopne
aam
dec
call
cmp
or
in
pop
enter
int3
push
add
cmp
adc
in
pop
or
imul
push
pushf
mov
sub
inc
push
ja
dec
push
mov
push
pop
dec
and
push
push
ret
xchg
sbb
xor
test
sbb
dec
inc
push
pop
adc
mov
xor
ins
jmp
ja
es
and
add
data16
push
xor
xor
ins
mov
dec
push
ja
dec
inc
pop
dec
mov
lds
cmps
mov
xchg
push
jbe
es
or
dec
xchg
nop
inc
fs
add
mov
adc
ins
out
adc
ins
cmp
push
inc
retf
mov
in
push
mov
inc
dec
ret
push
js
and
cs
adc
je
xor
xor
stos
add
inc
jb
es
loopne
sub
mov
test
push
jae
inc
push
and
adc
xor
lods
inc
adc
popa
test
mov
stos
arpl
xchg
mov
inc
pop
cmp
push
inc
inc
ins
lods
dec
fs
add
cdq
test
and
dec
push
and
push
gs
push
arpl
xor
int3
inc
dec
cwde
fwait
ds
pop
jl
push
push
jbe
and
and
and
xor
inc
sub
jle
and
div
movs
movs
inc
jle
dec
or
pop
bound
pop
cmps
es
push
cwde
je
sbb
and
sbb
js
hlt
inc
jno
test
fisub
adc
push
nop
xchg
mov
adc
push
and
jb
test
inc
sub
xor
test
bound
es
xor
loopne
dec
repnz
lock
xchg
cs
and
test
sub
mov
test
mov
or
adc
cmp
cmp
cmp
dec
push
ficom
fsub
jbe
test
inc
mov
nop
ins
mov
and
cmp
xchg
call
dec
popa
ins
or
stos
movs
and
test
and
jbe
cwde
dec
and
rol
mov
and
cmp
mov
sub
pop
add
mov
add
popa
cmps
call
sbb
add
mov
nop
call
pop
push
imul
inc
xchg
sub
adc
sahf
jp
js
add
adc
lods
mov
xchg
nop
cdq
xor
lds
inc
rol
pop
add
push
adc
or
inc
pusha
gs
arpl
push
ss
not
in
(bad)
jbe
adc
adc
pop
and
push
and
sbb
into
pop
push
pop
mov
je
into
xchg
les
xor
jecxz
or
inc
push
dec
arpl
mov
outs
push
test
nop
out
jae
push
adc
dec
inc
sub
jp
shl
sbb
ss
fmul
sbb
sbb
fs
dec
jp
mov
imul
test
xchg
outs
jne
sbb
cld
and
fs
jb
xor
pop
nop
(bad)
pop
xchg
loop
adc
adc
call
stos
sub
inc
out
in
dec
sub
push
dec
pop
pushf
pop
push
dec
dec
or
inc
jae
or
xor
push
and
fadd
test
ss
dec
push
add
dec
inc
arpl
adc
inc
mov
mov
aam
dec
adc
jmp
pop
arpl
push
inc
into
dec
ss
add
push
xchg
adc
sub
jp
pop
xchg
add
mov
dec
push
popa
xor
not
push
dec
or
rcl
cmp
call
and
or
aaa
mov
dec
add
add
jo
fs
add
cli
sub
test
dec
dec
je
dec
and
push
in
push
push
xchg
mov
cmp
jbe
cdq
add
adc
pop
rcl
push
jbe
adc
sbb
cdq
jmp
mov
xchg
sub
inc
and
and
xchg
fst
xchg
gs
je
mov
add
mov
xor
test
jo
add
push
adc
adc
xchg
call
push
or
lods
push
inc
test
pop
mov
push
int3
outs
mov
add
or
mov
bound
jle
repnz
sub
shr
ret
mov
adc
add
arpl
jo
add
mov
int3
push
fbld
push
dec
call
inc
loop
fmul
xor
push
add
push
push
push
jl
push
inc
push
and
dec
xchg
leave
sahf
bound
pop
adc
jb
jp
xchg
sar
fdivr
hlt
mov
in
js
xchg
or
sub
fadd
xchg
cmp
jbe
or
xor
push
adc
and
add
dec
dec
sub
push
push
xchg
outs
jl
sub
arpl
inc
aam
adc
shl
dec
dec
and
scas
and
fs
push
xchg
dec
sub
ret
xor
sub
mov
push
int
ret
cld
jmp
aaa
fimul
test
imul
jl
inc
mov
push
and
and
aaa
mov
mov
jo
jnp
js
dec
test
outs
fisub
mov
push
ins
inc
xchg
movs
cmps
cmc
push
push
loopne
int3
push
and
mov
add
movs
or
loope
(bad)
cmp
dec
es
data16
adc
push
add
or
lods
push
inc
aaa
jb
xchg
xor
popa
push
sbb
dec
mov
dec
adc
xor
loopne
inc
inc
push
imul
call
dec
adc
nop
rol
pusha
adc
jle
adc
aam
cmp
arpl
dec
loope
sar
leave
gs
jb
std
add
push
inc
inc
loope
push
nop
shl
push
popa
xor
or
(bad)
repnz
sub
add
loopne
pop
out
mov
xor
adc
sub
and
jne
dec
mov
push
movs
push
and
dec
dec
dec
movs
xchg
cs
push
mov
imul
or
or
pusha
je
mov
add
or
mov
cmps
xor
sub
add
add
sub
mov
and
inc
mov
push
(bad)
outs
mov
mov
sbb
mov
arpl
xchg
test
mov
fsub
inc
xor
mov
and
mov
add
aam
sbb
fidivr
inc
sub
or
cmp
mov
lea
pushf
and
xor
ffree
mov
(bad)
push
mov
dec
add
push
and
dec
pop
add
xor
xchg
out
inc
push
cmp
jbe
ss
push
push
outs
xchg
fisub
test
jo
push
or
retf
adc
jo
in
enter
sbb
xor
in
push
and
inc
ins
mov
xor
mov
and
popa
jns
inc
dec
push
dec
xor
sub
fcom
data16
ret
cmp
push
or
sbb
lahf
pop
xor
loop
add
mov
adc
push
and
xchg
inc
ret
push
cmps
and
(bad)
or
mov
popa
out
push
fs
and
jb
dec
dec
test
test
movs
jo
ins
inc
ficom
push
data16
jne
or
lock
jae
mov
inc
data16
(bad)
xor
jae
push
dec
enter
aaa
xor
sbb
push
pop
add
mov
les
mov
pop
or
xor
mov
xchg
inc
inc
lods
xor
or
adc
xchg
sbb
mov
adc
aam
jl
mov
and
mov
xchg
dec
adc
mov
lods
ror
loop
xor
push
push
dec
pop
push
push
pop
add
ja
inc
enter
ret
dec
sub
or
ins
push
xchg
or
dec
push
add
sub
enter
jns
add
mov
mov
rcl
test
push
aam
inc
sar
aam
adc
xor
(bad)
cs
call
push
inc
outs
add
mov
push
ret
push
or
fs
mov
(bad)
in
xchg
add
add
sar
aam
test
xor
inc
sub
pop
adc
adc
and
sbb
pop
mov
adc
add
push
cwde
dec
clc
enter
push
push
dec
push
ins
inc
outs
inc
push
jo
arpl
xor
dec
xor
(bad)
dec
and
xor
push
mov
push
int3
dec
mov
bound
fs
cmp
inc
or
dec
shl
mov
xor
push
xor
(bad)
adc
add
ret
push
sub
test
or
dec
add
das
cwde
mov
adc
push
inc
mov
inc
xchg
rol
mov
sub
pop
ss
or
push
nop
lock
sbb
jmp
mov
ret
jae
push
push
xchg
add
dec
sbb
fld
(bad)
xor
je
sbb
mov
or
push
xchg
ficom
inc
and
ror
sbb
ins
(bad)
ficom
inc
pop
outs
jno
jne
push
enter
(bad)
outs
mov
les
addr16
dec
inc
xchg
lods
cli
dec
js
dec
or
mov
push
rcl
dec
xchg
dec
push
test
movs
push
dec
push
sbb
popa
inc
xor
push
push
dec
push
inc
or
xchg
shl
xchg
ins
push
mov
imul
test
sub
mov
push
and
stos
sub
je
push
repnz
arpl
loope
sbb
inc
dec
lahf
add
adc
cmps
mov
push
jp
jne
popa
adc
xor
enter
cli
mov
inc
inc
jb
jp
fcomp
mov
xor
push
xchg
dec
cmp
push
retf
add
dec
arpl
dec
fs
dec
and
inc
mov
fs
mov
aad
test
dec
fs
es
push
cli
inc
sbb
cwde
add
adc
dec
inc
pop
outs
adc
or
hlt
je
aam
fdiv
loopne
dec
mov
test
or
pusha
pop
inc
imul
ins
dec
xor
rol
out
mov
mov
xor
(bad)
test
call
or
mov
outs
jo
dec
push
sub
(bad)
push
aam
push
add
test
ins
retf
dec
call
add
mov
ins
pushaw
imul
jae
stos
xor
dec
dec
shl
rcl
mov
je
jo
sbb
xor
mov
add
or
mov
ret
sbb
jbe
sbb
outs
xor
mov
pusha
add
or
mov
sub
popa
add
xor
mov
adc
adc
outs
adc
enter
test
push
shl
cs
fs
movs
dec
ficom
adc
retf
(bad)
or
push
or
add
adc
dec
push
pop
sub
or
mov
mov
ror
call
je
fnsave
fdiv
inc
dec
sub
sub
push
adc
fs
adc
enter
add
push
dec
push
sbb
or
or
je
xchg
popa
xor
sub
and
and
push
xor
and
jne
adc
or
and
push
push
xchg
mov
and
and
ss
movs
loop
stos
stos
xor
inc
call
data16
into
push
fsub
fs
and
jmp
or
xor
fs
push
mov
push
push
fdivr
jbe
xchg
rcr
dec
push
fs
add
and
xchg
retf
ss
push
pop
dec
outs
jns
enter
add
and
and
bnd
add
mov
movs
adc
inc
sbb
es
in
lds
mov
data16
add
add
mov
pusha
push
data16
or
or
push
add
dec
mov
inc
mov
cmp
aaa
push
imul
mov
addr16
inc
ja
arpl
cmp
and
test
leave
loope
mov
dec
popa
sub
loopne
push
push
or
mov
adc
aaa
dec
xchg
push
push
imul
pusha
cmp
leave
call
add
retf
lods
push
cs
shl
fidivr
pop
xor
inc
mov
or
xor
adc
fs
add
and
jbe
or
cmp
popa
pop
sahf
add
inc
dec
dec
ins
push
fs
shl
sub
add
inc
cwde
mov
bound
adc
push
fidiv
inc
gs
and
jl
add
add
dec
xchg
outs
or
push
mov
mov
cmp
mov
sbb
inc
call
fs
ins
xchg
fsubr
push
pusha
imul
jle
in
xor
push
jo
adc
(bad)
push
xchg
add
sahf
jae
inc
mov
mov
sub
sbb
pop
adc
dec
retf
mov
inc
adc
cld
mov
xchg
add
cmp
or
cmp
cs
jo
data16
sbb
sbb
dec
dec
je
sbb
mov
call
in
ss
mov
jne
inc
and
sub
push
dec
ret
enter
sub
and
pushf
and
icebp
ins
add
add
mov
movs
push
daa
ins
add
inc
xchg
ret
rcl
call
aaa
addr16
sub
xchg
aam
fadd
cs
dec
xor
xchg
mov
push
mov
push
xor
retf
inc
dec
or
cmps
xchg
and
push
and
inc
xchg
push
mov
je
and
add
adc
push
jo
mov
inc
mov
fsubr
inc
push
outs
mov
inc
or
inc
out
inc
and
sahf
gs
inc
test
int
adc
inc
sub
inc
cmp
xchg
pusha
daa
ds
dec
les
mov
cwde
es
add
popa
test
jmp
data16
mov
mov
inc
dec
adc
jmp
xchg
inc
mov
js
sbb
cmp
add
mov
bound
and
cmp
dec
outs
stos
mov
xor
mov
jmp
ficomp
adc
add
mov
push
inc
add
inc
push
add
cmp
xchg
arpl
push
add
or
ficom
push
fld
pusha
xchg
push
push
test
test
pop
jo
mov
or
pop
call
call
out
sbb
add
mov
push
adc
dec
mov
and
xor
out
xor
ror
js
pop
ja
push
mov
xchg
imul
stos
adc
and
gs
xchg
push
or
out
xchg
sub
cmp
jno
aam
pop
pop
jae
dec
addr16
stos
xchg
clc
call
inc
adc
mov
(bad)
jno
inc
xor
or
dec
inc
je
aam
dec
scas
sub
push
push
mov
xchg
xchg
inc
xchg
push
shl
xchg
shl
dec
sbb
loopne
in
call
and
pop
inc
xor
dec
popa
test
test
bound
mov
pusha
adc
addr16
ins
and
adc
push
sbb
push
sbb
pop
jne
cmp
push
lods
ins
jl
xor
adc
dec
inc
test
addr16
push
and
loope
or
dec
or
test
dec
inc
inc
je
dec
sub
dec
mov
out
je
and
adc
push
xor
mov
mov
or
aad
jmp
xor
mov
add
fmul
dec
sbb
loop
arpl
adc
mov
xchg
sbb
inc
or
and
jbe
ja
or
lods
popa
or
jb
gs
cmp
rcl
or
or
cmp
dec
push
xchg
or
nop
(bad)
jbe
push
or
pushf
push
ret
mov
inc
js
inc
sub
pop
add
rcr
push
inc
sbb
add
fadd
movs
pushf
xchg
or
imul
test
push
xchg
and
sub
mov
sub
inc
inc
push
dec
sub
scas
pop
xor
push
push
adc
or
dec
or
lods
sub
push
stos
inc
mov
fsub
imul
(bad)
shr
mov
mov
sbb
push
into
add
bound
push
xor
retf
add
fs
and
addr16
and
xchg
fisub
js
ins
mov
and
push
dec
js
outs
lods
test
inc
pop
aaa
push
imul
rol
test
jb
ret
fs
and
push
aam
xor
pop
aam
rcl
outs
push
push
sbb
inc
jb
cwde
sbb
mov
shl
dec
dec
xor
pop
xor
cmps
sbb
cwde
xchg
push
in
inc
sub
gs
hlt
inc
adc
in
fdivr
ins
push
dec
addr16
add
push
fadd
inc
nop
inc
inc
sub
cs
xor
cli
dec
or
shl
fisubr
push
or
or
or
rol
inc
inc
push
imul
rol
inc
sub
and
aaa
jns
inc
in
mov
adc
sbb
adc
mov
cmp
inc
xor
ficom
in
test
push
push
dec
xor
add
add
xchg
mov
push
xchg
dec
mov
rol
fld
dec
icebp
or
xchg
mov
dec
push
jp
sbb
ss
sub
xor
mov
push
js
mov
mov
inc
sbb
xchg
push
sub
sub
inc
bound
pop
add
call
mov
jl
dec
add
or
pop
sub
xchg
push
arpl
inc
fdiv
cmp
addr16
add
xor
call
jp
adc
inc
or
jno
push
sub
in
push
add
sbb
xor
xor
cs
dec
hlt
mov
push
mov
(bad)
xor
push
mov
loope
mov
jne
rol
push
je
jb
or
push
inc
repnz
test
push
mov
cmp
fwait
shl
shl
pusha
ja
xchg
dec
neg
adc
inc
xor
sbb
dec
or
dec
add
sbb
ja
imul
sub
xor
int3
add
in
push
hlt
aad
nop
or
sub
ss
or
inc
ins
fdivr
xchg
test
sbb
and
mov
mov
push
inc
adc
xchg
xor
inc
fisub
jo
inc
push
test
mov
ins
jmp
enter
mov
inc
push
ret
dec
(bad)
inc
dec
sub
jae
shl
adc
pop
push
xor
jb
test
push
jo
add
mov
dec
mov
enter
lods
je
js
outs
jo
jle
jb
es
and
adc
and
sub
fs
imul
adc
push
outs
inc
push
dec
jmp
ins
push
jne
or
dec
pop
adc
ficom
je
es
popa
adc
lods
outs
test
inc
xor
inc
mov
and
aas
and
mov
shr
or
add
gs
and
inc
mov
out
mov
gs
inc
dec
outs
push
jne
dec
lods
cmps
outs
pop
je
inc
xor
xchg
and
add
sbb
xor
cli
nop
pop
nop
mov
or
push
adc
pop
add
ss
and
push
sub
pushf
mov
push
cwde
and
jl
mov
push
and
fs
retf
xchg
or
push
cmp
pop
int
jae
jno
loopne
push
xor
aad
retf
pusha
mov
dec
or
and
popa
mov
jno
mov
adc
xor
and
icebp
xor
xor
or
inc
dec
adc
and
adc
push
push
dec
add
xchg
ror
xor
js
rol
test
pusha
inc
cmp
or
mov
push
ins
jl
fs
adc
push
dec
and
repnz
adc
push
pop
sub
xor
inc
mov
popa
cmp
enter
mov
sub
inc
dec
adc
push
popa
xchg
popa
adc
nop
dec
inc
adc
popa
inc
and
jmp
fmul
xor
(bad)
xor
ins
mov
bound
fdivr
xor
push
ins
add
cmp
adc
and
sub
push
or
fcom
stos
sbb
push
ins
cli
mov
sub
inc
xchg
mov
int3
push
inc
dec
dec
inc
xor
mov
inc
movs
loope
sub
mov
(bad)
xor
or
push
sbb
mov
aad
sub
ins
rcr
add
push
jp
adc
inc
sbb
ret
pop
cdq
add
and
call
and
fcom
push
add
dec
jbe
cwde
and
add
push
and
test
out
add
cld
inc
xchg
pushf
inc
and
jle
fnsave
inc
xor
daa
jb
dec
test
and
jo
push
inc
es
mov
test
inc
cmps
xor
or
add
xchg
xchg
add
ret
stos
scas
inc
add
push
arpl
outs
push
inc
pop
xor
jp
dec
xchg
add
outs
outs
bound
xchg
mov
inc
dec
or
(bad)
in
dec
and
sbb
push
push
adc
call
sub
(bad)
in
call
inc
dec
movs
adc
dec
pop
or
test
dec
mul
or
push
dec
cld
ss
dec
gs
inc
ss
fs
or
outs
fs
data16
push
inc
leave
lock
xor
push
bound
or
cli
dec
and
push
xor
sub
(bad)
jp
ja
cs
push
mov
mov
inc
dec
mov
dec
and
sbb
adc
fild
fcomp
dec
jbe
push
(bad)
test
inc
dec
ds
and
mov
jl
add
bound
add
shl
pop
sub
movs
es
and
jb
and
push
daa
or
pusha
ss
dec
push
add
push
inc
jb
dec
xor
pop
dec
ret
push
xor
dec
jne
or
jae
push
inc
gs
inc
in
mov
dec
push
or
adc
or
fwait
dec
pop
inc
bound
retf
or
mov
inc
rcr
stos
gs
(bad)
sahf
inc
or
imul
dec
outs
stos
test
push
inc
dec
mov
repnz
imul
and
inc
mov
jbe
sbb
inc
xor
out
ins
out
push
mov
arpl
int3
je
sbb
and
je
xor
dec
scas
pop
dec
lods
jo
test
dec
pop
add
adc
sbb
adc
ins
dec
hlt
push
lea
out
in
shl
out
jo
push
dec
cwde
cld
jne
ins
add
push
pop
ror
sbb
js
mov
test
jmp
or
jmp
pop
arpl
xchg
mov
test
nop
ret
xchg
adc
call
sbb
jb
outs
inc
and
js
mov
or
cld
dec
xor
jb
sbb
into
cmp
xchg
jl
in
push
dec
push
mov
cli
mov
inc
call
or
sbb
dec
call
fiadd
sbb
xor
jo
push
dec
jb
fadd
adc
and
mov
mov
push
dec
leave
loope
push
ret
jp
dec
cwde
add
mov
sbb
mov
push
push
cmp
mov
push
es
mov
hlt
inc
or
movs
mov
dec
and
jp
add
mov
ins
(bad)
dec
sbb
jb
daa
lods
push
push
or
cmp
jb
je
push
es
xor
dec
jae
add
pop
loop
loopne
mov
add
cmp
jl
js
sahf
or
xchg
inc
dec
pusha
jb
lea
and
or
cmp
dec
inc
inc
cmp
push
test
push
es
cmp
lock
xor
or
dec
cmp
enter
jbe
clc
jo
sbb
xor
inc
popa
ret
inc
inc
pusha
cld
sbb
push
inc
adc
sub
xor
call
call
add
xor
or
loopne
add
sub
xor
rcl
push
dec
adc
jne
imul
inc
add
push
push
inc
push
nop
fimul
mov
dec
xor
(bad)
shl
xor
fsub
nop
fs
add
xor
xchg
call
push
jp
cli
dec
xor
clc
add
rol
sbb
dec
ja
sub
cwde
jle
push
push
imul
or
inc
ins
inc
repnz
and
outs
sub
push
sub
imul
inc
adc
push
movs
push
imul
inc
jbe
dec
inc
add
pusha
mov
xchg
adc
push
or
fs
fisub
jp
mov
inc
js
cmp
out
jb
xor
sub
inc
fadd
test
add
push
xor
add
and
mov
push
inc
test
dec
popa
inc
sub
(bad)
push
movs
or
fwait
lock
push
xor
aam
or
mov
push
mov
add
xchg
cmc
hlt
scas
(bad)
mov
push
and
dec
inc
mov
sub
scas
arpl
mov
pop
lods
je
xor
xchg
addr16
test
push
and
push
test
mov
and
push
shl
shl
sub
sub
stos
jbe
inc
push
dec
add
repnz
adc
sbb
and
cwde
test
cwde
test
push
arpl
xchg
or
or
inc
adc
aaa
push
add
xchg
mov
and
mov
stos
push
push
jo
xchg
xor
push
push
cmps
and
dec
or
push
pop
ret
or
jo
xor
mov
pop
xchg
sub
popa
sbb
lea
jb
pop
test
adc
add
jns
add
cmp
push
or
sbb
mov
data16
inc
je
add
mov
ins
sub
dec
adc
push
adc
dec
cmp
dec
pop
cmps
aam
jb
in
and
ins
nop
or
xor
dec
xor
aam
push
nop
or
js
push
gs
add
popa
aad
and
fmul
lods
lock
inc
push
pop
outs
das
repnz
addr16
inc
xchg
aaa
and
arpl
mov
popa
in
push
adc
pop
adc
push
or
push
push
add
push
inc
add
xchg
add
or
xchg
dec
mov
(bad)
jno
mov
dec
(bad)
dec
(bad)
imul
cmp
mov
pop
xor
pop
inc
adc
into
je
jmp
popa
dec
sub
outs
inc
gs
jb
test
sub
push
sub
movs
gs
ds
inc
test
xchg
rol
inc
sub
jne
sub
popa
dec
sub
xor
adc
inc
mov
js
inc
gs
pop
inc
aam
mov
ss
push
add
dec
adc
xor
ficomp
fs
and
or
add
rcr
mov
je
mov
sbb
cmp
xor
inc
in
push
xor
cli
xor
shl
add
dec
inc
fs
rol
push
jp
dec
adc
dec
dec
pop
mov
rol
push
dec
inc
sbb
mov
push
sbb
test
fs
push
or
add
add
test
jb
add
adc
inc
loope
dec
in
jl
mov
fild
pop
lds
es
add
test
inc
inc
aam
push
mov
dec
sub
(bad)
add
jae
inc
data16
inc
mov
inc
and
inc
xor
(bad)
lods
ficom
dec
and
adc
cwde
lock
mov
push
dec
cli
retf
stos
or
and
mov
in
mov
inc
or
dec
mov
or
dec
add
push
xchg
pusha
xchg
push
les
cmp
push
ins
aaa
jb
fcmovnu
or
push
cmps
add
int3
sbb
xor
in
mov
xchg
shr
jbe
push
mov
xchg
shl
push
xor
test
jbe
in
test
xchg
and
dec
mov
sub
cli
xchg
data16
push
dec
dec
test
cdq
cmp
ret
into
es
cmp
add
xor
fs
fidivr
mov
data16
and
push
inc
sub
push
rcl
sbb
and
rcl
or
sub
pop
aam
inc
push
mov
ins
xor
(bad)
xor
pop
xor
xor
push
loopne
shl
dec
retf
add
scas
outs
push
mov
ror
jp
adc
adc
test
(bad)
sub
dec
ror
cmp
inc
je
inc
sbb
sub
test
or
sbb
gs
sbb
pop
in
out
imul
add
push
push
aam
dec
mov
add
cmp
pusha
mov
(bad)
outs
inc
adc
clc
mov
inc
mov
push
pop
or
sbb
xor
dec
mov
shl
inc
cwde
pop
bound
jb
imul
dec
mov
add
cwde
sub
push
dec
int3
mov
fldcw
mov
cwde
push
xor
mov
add
loopne
xor
and
sub
push
test
in
fs
(bad)
xchg
test
out
fisubr
xor
bound
cmp
cmp
dec
push
int
xor
xor
push
sbb
mov
mov
inc
xor
stos
xor
adc
inc
push
test
xchg
mov
mov
out
and
mov
pop
inc
inc
dec
push
(bad)
dec
aaa
push
retf
fs
adc
inc
fcmovu
nop
rcl
sub
push
sbb
test
pop
push
mov
fs
adc
sbb
es
xor
enter
dec
in
and
dec
cmp
dec
push
inc
enter
dec
jbe
fadd
call
add
movs
and
loopne
or
es
cld
push
enter
pop
inc
lods
fsub
push
mov
fst
shl
pushf
mov
dec
jbe
adc
fs
mov
inc
dec
or
dec
retf
mov
jno
cmps
and
sub
lods
js
popa
xchg
dec
popa
push
inc
push
jbe
dec
jno
adc
addr16
xor
dec
dec
or
adc
jne
and
adc
test
jbe
lods
mov
inc
cmp
dec
inc
mov
push
jbe
or
sub
xor
adc
jp
mov
add
data16
sar
xchg
adc
test
aaa
and
(bad)
push
out
push
and
mov
jl
test
inc
leave
mov
out
outs
and
sbb
sub
push
aaa
inc
push
cmp
or
xchg
nop
leave
push
add
xor
mov
cwde
jbe
sub
mov
cmps
push
push
push
or
sbb
ret
imul
movs
movs
dec
dec
adc
cmp
push
adc
je
mov
sbb
dec
imul
mov
sub
dec
adc
scas
dec
cmp
sub
sub
add
ss
pop
dec
and
dec
adc
call
adc
dec
mov
pop
test
cld
into
add
dec
mov
pop
xchg
mov
mov
inc
es
out
fidiv
dec
and
pop
adc
and
aam
sbb
sbb
lods
xor
call
enter
ins
add
pop
jb
stos
ja
mov
je
pop
jne
add
xor
ja
mov
pop
or
ret
add
cmp
add
xchg
or
push
push
stos
add
mov
mov
or
jp
pop
xor
xchg
fs
call
inc
mov
xor
retf
inc
dec
fs
push
call
dec
cmp
mov
mov
ins
push
sbb
cli
cmp
xor
mov
add
xor
adc
push
dec
inc
push
mov
add
adc
add
xchg
push
xor
pop
dec
(bad)
in
pop
idiv
dec
ss
add
mov
loopne
pop
mov
push
mov
nop
xor
inc
dec
test
or
call
adc
sbb
sub
jle
or
add
adc
jno
inc
pop
inc
xchg
push
xchg
ja
push
add
mov
inc
add
or
sbb
or
jbe
imul
add
pop
cwde
ins
jbe
and
cmp
cwde
inc
cmp
inc
inc
push
or
dec
out
add
sub
push
inc
inc
test
push
adc
xor
retf
pop
and
jp
sub
adc
inc
es
(bad)
es
and
cmp
mov
inc
or
out
add
push
fiadd
adc
push
pushf
push
mov
stos
jle
mov
inc
and
inc
test
bound
inc
pop
xor
cmp
clc
ret
add
push
dec
movs
dec
lods
mov
xchg
dec
lock
and
push
mov
and
gs
fisubr
add
sub
or
or
rol
bound
cmp
adc
mov
retf
ins
mov
sbb
sub
push
les
sbb
ret
cmp
aaa
mov
and
xchg
or
jl
xchg
sub
jae
loopne
mov
add
shr
mov
jno
test
loopne
mov
dec
dec
enter
and
add
jb
in
mov
ds
jno
xor
sub
mov
jns
add
push
popa
cmp
xchg
mov
jbe
dec
cmps
add
or
loopne
sub
xor
mov
das
jp
jns
into
loopne
fld
cmp
inc
pop
add
mov
nop
rcr
or
jle
mov
mov
adc
jno
bound
dec
push
adc
dec
pop
fdiv
xor
mov
test
jb
push
retf
xor
in
add
mov
inc
mov
or
es
jecxz
dec
arpl
jl
push
es
cmp
mov
test
xor
inc
inc
add
push
enter
fisub
lods
mov
adc
in
pushaw
mov
mov
mov
adc
popa
dec
push
movs
aaa
or
dec
push
cli
xor
push
add
adc
ins
stos
cwde
adc
adc
ror
push
call
inc
push
push
or
inc
inc
enter
loopne
push
add
ds
pushf
js
mov
dec
push
jo
inc
mov
or
adc
sub
sbb
mov
xor
and
add
dec
dec
mov
push
inc
ja
cwde
inc
mov
outs
ins
inc
push
xor
adc
mov
fcmovb
dec
dec
and
mov
push
or
cmps
add
xor
inc
cmp
lea
fiadd
aaa
and
arpl
add
sub
and
push
scas
inc
xchg
xor
sbb
mov
mov
mov
jmp
inc
and
inc
adc
jae
fs
or
pop
xor
jns
jo
and
pop
dec
sbb
inc
je
adc
rcr
les
mov
dec
(bad)
mov
add
outs
ret
xchg
dec
ins
or
loopne
stos
and
je
jo
imul
pop
fadd
adc
push
pusha
and
popa
adc
sub
push
adc
sub
call
stos
fwait
or
and
or
push
adc
sub
je
add
inc
mov
add
imul
or
sub
mov
js
inc
rcl
jae
jo
dec
push
cmp
mov
sahf
adc
push
popa
push
enter
sub
pop
stos
mov
inc
inc
cmps
or
inc
retf
adc
inc
add
sub
out
shr
dec
test
jbe
pop
push
stos
arpl
mov
inc
fcomp
inc
retf
ins
outs
push
add
xor
rol
shl
mov
inc
sub
aad
push
xor
mov
push
rcl
pop
mov
xor
test
inc
push
push
adc
dec
inc
xchg
inc
ins
sbb
sub
mov
xor
test
xchg
xchg
jno
movs
ss
dec
icebp
and
int3
loopne
hlt
cmps
lods
inc
sub
jb
loopne
dec
imul
push
push
jns
add
sbb
cmp
push
xchg
loopne
or
data16
and
ret
dec
imul
clc
outs
jl
add
rcl
xchg
pushf
xchg
sub
dec
mov
pushf
adc
call
push
cmp
cld
push
test
imul
cmp
out
mov
push
test
mov
xor
retf
int3
pop
sub
inc
xchg
xchg
mov
mov
int
or
jo
and
add
xor
loop
add
mov
imul
pusha
adc
je
sub
push
inc
ins
cwde
addr16
pop
cld
sbb
fimul
shl
pop
ss
rcl
mov
outs
and
mov
dec
push
sub
mov
ret
jno
push
not
sub
and
pop
add
enter
es
and
mov
and
pusha
adc
mov
sub
inc
jb
fwait
sub
ja
adc
xchg
cdq
and
cmp
xor
cs
or
or
in
cli
sbb
data16
jl
mov
rol
dec
jb
inc
push
push
push
cmp
js
xor
mov
and
call
push
es
push
inc
adc
popa
popa
push
mov
inc
dec
ins
enter
mov
dec
push
xor
cmp
push
outs
pop
(bad)
adc
inc
ret
fiadd
scas
dec
into
into
inc
mov
mov
dec
jbe
sbb
adc
lea
shl
push
xchg
mov
fsubrp
cmp
test
jno
push
sahf
xor
add
cmps
mov
pop
jae
pop
arpl
retf
and
and
ins
adc
cld
cmp
add
nop
and
xchg
je
xor
adc
inc
push
ins
bound
mov
dec
xor
and
push
and
test
adc
shr
inc
cli
xor
and
lods
and
pushf
adc
xchg
shl
inc
pop
add
nop
inc
enter
mov
int3
call
nop
cwde
push
ins
(bad)
fcomp
bound
dec
ins
iret
inc
sbb
sbb
push
popa
sub
cmp
hlt
and
pop
xor
inc
jle
push
push
xchg
shl
cmp
xor
push
stos
dec
rcl
inc
mov
jbe
mov
popa
push
movs
jae
push
or
dec
jno
dec
bound
popa
dec
pop
test
add
xor
and
or
ins
xchg
dec
add
push
je
inc
outs
aam
sub
mov
pop
and
jo
cmp
xor
push
ror
hlt
add
cli
add
add
add
movs
push
xor
in
test
sub
add
pop
out
or
jae
test
in
pop
in
xor
inc
mov
jbe
pusha
xor
xor
loopne
movs
sbb
sub
cmp
sub
(bad)
cmp
mov
push
ins
mov
sahf
add
and
mov
and
or
add
sub
adc
mov
js
inc
or
dec
push
mov
imul
pop
push
push
mov
xchg
pop
nop
aaa
je
and
jp
pop
pop
push
inc
push
pop
test
loopne
stos
adc
inc
jbe
dec
add
out
movs
mov
test
fld
gs
jns
pop
test
mov
mov
mov
dec
imul
push
ss
or
test
xor
inc
aam
dec
jl
dec
inc
xchg
fwait
or
movs
int3
dec
add
es
cmps
add
and
sbb
jbe
pop
xor
test
push
mov
mov
push
jb
pop
xor
push
and
dec
or
aam
outs
sbb
dec
test
imul
add
xor
gs
nop
push
nop
(bad)
push
push
or
ins
dec
ins
sbb
(bad)
cli
popa
test
mov
enter
adc
js
inc
inc
push
outs
sbb
mov
jle
pusha
dec
pusha
dec
xchg
jno
push
lods
push
test
cwde
pushf
and
and
push
push
(bad)
jmp
es
adc
jg
add
aaa
outs
mov
pop
int3
cmp
and
xchg
mov
push
(bad)
popa
mov
ss
sub
mov
imul
enter
pop
mov
inc
or
dec
bound
inc
jmp
push
ficom
adc
inc
into
sub
and
aam
push
or
repnz
int
push
jp
fadd
add
adc
stos
mov
dec
data16
or
push
adc
in
outs
call
push
or
push
stos
sbb
dec
mov
pop
rol
dec
pusha
repnz
adc
sbb
inc
and
dec
sbb
(bad)
js
jl
inc
xor
aam
imul
mov
inc
adc
push
push
push
outs
xor
push
je
xor
xor
ss
sub
sub
xor
rcl
cmp
and
test
push
or
je
not
xor
je
movs
stos
add
imul
and
fdivr
push
jo
test
ret
and
imul
adc
scas
mov
ja
push
pop
mov
ficom
gs
cdq
(bad)
int3
nop
push
inc
dec
ret
rcr
sub
cwde
xor
jbe
gs
dec
sub
ss
or
add
outs
inc
dec
aaa
imul
add
xor
and
xchg
in
popa
xchg
push
inc
push
add
aaa
cwde
push
add
xchg
adc
adc
push
sub
dec
jp
cs
dec
fldcw
jb
push
or
bound
add
or
cmp
dec
add
and
inc
xor
mov
inc
xor
or
sbb
sub
mov
add
je
mov
inc
pop
sub
aam
je
mov
add
imul
mov
and
dec
sub
loop
in
movs
lds
pop
mov
jno
mov
fdivr
fsub
add
pop
es
in
xor
outs
sub
cwde
xor
xor
es
mov
sbb
(bad)
jl
push
adc
and
mov
add
add
loopne
mov
add
sbb
adc
mov
dec
les
mov
xchg
mov
cmp
jbe
ds
sbb
xchg
mov
cmp
dec
inc
adc
push
arpl
test
or
push
dec
test
rcl
mov
push
aam
inc
push
xchg
or
fs
outs
and
xor
mov
dec
popa
adc
push
aam
(bad)
dec
ret
inc
rol
ds
mov
adc
popa
cld
jno
inc
sbb
inc
inc
shl
mov
js
xor
pushf
rcl
xor
ret
lock
outs
and
adc
sub
xchg
xchg
mov
dec
mov
ins
popaw
dec
adc
sub
xchg
and
in
fiadd
add
xor
xor
lods
xor
ins
add
test
ins
pop
mov
sbb
dec
pop
cld
mov
ins
test
outs
push
popa
sub
dec
sbb
pusha
cmp
data16
fist
adc
inc
inc
dec
fsub
cmp
mov
add
push
pop
aad
es
push
pushf
ja
push
jge
inc
dec
mov
sbb
push
push
bound
push
xchg
mov
add
pusha
jp
add
cld
cwde
test
ins
mov
bound
push
test
add
xchg
shl
dec
xchg
mov
scas
dec
out
or
mov
inc
dec
pop
cmps
aaa
xchg
pop
push
call
mov
nop
rol
sub
test
sub
jb
dec
xor
or
pop
mov
test
jle
xchg
arpl
fidiv
fimul
xchg
test
popa
inc
mov
mov
jb
or
daa
sub
dec
ret
push
aam
mov
stos
add
dec
test
xor
popf
add
xor
xor
adc
xor
call
jp
add
lods
adc
inc
push
mov
push
mov
inc
push
add
push
out
dec
add
jbe
idiv
shl
dec
in
idiv
mov
mov
loopne
adc
es
and
and
movs
dec
push
mov
push
je
cmps
jae
imul
jbe
push
jbe
or
dec
gs
push
or
fmul
adc
push
pusha
or
pushf
inc
int3
inc
sub
add
test
cs
and
cmps
sub
es
jb
xor
mov
pop
or
pop
leave
adc
call
pop
dec
and
add
dec
les
imul
push
stos
scas
pop
inc
in
(bad)
ins
xchg
and
je
jo
adc
cld
loop
add
pop
es
push
sub
sbb
bound
inc
enter
inc
jb
loop
popa
push
xchg
cli
ja
loopne
les
loopne
dec
inc
sub
imul
enter
jb
sbb
movs
xchg
inc
adc
xchg
cld
inc
movs
sbb
pop
push
call
adc
outs
push
xchg
or
sub
and
sub
and
cmp
lds
inc
call
inc
and
cmp
push
dec
xor
or
leave
adc
dec
cdq
ins
mov
dec
mov
sbb
adc
xor
xor
xor
bound
hlt
add
push
xor
js
xor
test
jp
mov
or
outs
add
jmp
and
mov
movs
push
jbe
ins
outs
je
add
add
push
inc
lock
dec
push
xchg
jne
pusha
imul
add
outs
cwde
bound
mov
push
cmp
xor
xchg
fiadd
dec
stos
or
dec
dec
inc
ret
mov
add
dec
inc
xchg
inc
and
test
push
cmp
xchg
pop
xchg
adc
mov
xchg
pushf
imul
push
adc
cs
push
push
stos
stos
outs
push
adc
xor
js
xor
sbb
mov
adc
gs
cmps
mov
or
xchg
push
pop
add
sub
adc
dec
inc
sub
shl
retf
inc
dec
dec
add
js
rcl
test
(bad)
or
addr16
and
inc
jns
dec
jbe
or
add
fsubr
and
adc
xor
inc
stos
and
es
inc
je
adc
and
aaa
out
and
es
or
sbb
push
push
nop
and
loope
ret
push
xchg
sbb
add
call
fisub
into
int3
pop
push
cwde
ror
mov
in
dec
rcr
push
xchg
push
outs
shl
jp
inc
test
or
or
mov
add
add
add
push
mov
dec
or
add
fmul
add
dec
ret
test
nop
mov
jo
or
dec
sbb
jmp
jne
fdiv
ins
out
popa
nop
xor
inc
ins
xchg
ficom
inc
mov
push
or
fs
ins
jo
and
push
jno
adc
xchg
or
cmp
jbe
dec
push
cmp
inc
outs
inc
or
sbb
les
and
mov
rol
cs
or
je
in
and
arpl
and
push
(bad)
cmp
or
shr
imul
imul
cwde
push
sbb
mov
push
or
sbb
inc
js
pusha
mov
outs
je
shl
jle
xchg
nop
xchg
pop
or
and
dec
cld
sub
pop
add
and
xor
or
dec
cmps
or
mov
jns
push
jns
ror
jne
fimul
xor
xchg
push
movs
mov
mov
push
mov
add
and
fdiv
inc
xchg
or
xor
push
push
(bad)
retf
inc
retf
movs
and
xchg
mov
dec
mov
lock
and
sbb
fsubrp
push
jns
or
cdq
xchg
shl
dec
push
inc
inc
mov
sbb
inc
dec
dec
movs
nop
pusha
adc
xor
loopne
inc
mov
add
outs
fs
aad
or
dec
lods
push
jbe
sub
push
dec
pop
cmp
dec
xchg
stos
dec
xchg
jmp
rol
dec
add
add
adc
push
cwde
adc
enter
sbb
add
test
cmps
test
dec
js
pop
sub
dec
cmps
add
cmp
nop
xor
(bad)
jbe
dec
dec
movs
ins
aaa
rcl
add
jns
add
call
sub
inc
clc
and
pop
sbb
dec
imul
or
gs
lods
mov
mov
pushf
mov
mov
stos
inc
inc
xor
adc
jb
xor
sbb
xor
fiadd
dec
outs
ds
shl
sar
add
dec
mov
lock
xor
push
dec
sbb
loope
int3
push
xchg
cli
cmp
nop
push
loope
out
dec
push
inc
cwde
adc
sub
push
inc
ins
adc
(bad)
neg
xchg
adc
shl
and
js
data16
mov
inc
test
retf
adc
movs
adc
xor
fld
push
call
hlt
sbb
add
lock
mov
sbb
adc
xchg
mov
test
dec
stos
inc
push
aam
cmp
stos
ror
jns
sbb
je
xor
xchg
fist
push
mov
push
cmp
inc
aaa
or
dec
mov
cmp
xor
adc
ret
mov
push
sub
(bad)
out
ss
jo
and
cs
inc
mov
cdq
xchg
push
or
daa
add
hlt
jbe
adc
mov
jae
jb
jbe
jne
popa
jne
sub
cdq
add
push
pop
mov
movs
arpl
adc
dec
push
sbb
cld
jns
xchg
(bad)
adc
inc
xor
jo
loop
inc
popa
je
jne
shl
cmp
adc
inc
scas
shl
repnz
and
mov
push
mov
add
dec
mov
push
sub
sub
lods
or
dec
xor
jl
adc
sub
jp
pop
push
xor
(bad)
fadd
sbb
xor
or
push
fs
push
popa
xor
inc
outs
xor
loopne
sub
bound
push
push
call
sub
outs
clc
add
dec
mov
mov
and
mov
lods
stos
cmps
mov
pop
outs
jmp
inc
dec
or
outs
pop
lock
inc
push
dec
mov
xor
push
fs
or
es
ins
sub
add
clc
je
test
hlt
test
test
push
lock
mov
mov
dec
pop
inc
sbb
dec
jb
adc
adc
addr16
ins
inc
ds
ret
test
inc
xor
or
je
xor
jl
xor
mov
or
data16
shl
push
inc
mov
push
call
clc
outs
imul
jl
pop
mov
sub
(bad)
int3
push
dec
inc
dec
jne
addr16
push
push
pushf
movs
out
jae
push
enter
xchg
dec
sub
in
xchg
sbb
test
jae
int3
loope
mov
push
mov
adc
int3
cwde
mov
ret
data16
rcl
or
push
outs
add
push
xor
inc
add
adc
sub
jo
ret
movs
mov
call
push
dec
cmp
mov
xchg
xor
inc
cmps
and
mov
adc
sbb
out
dec
inc
cmp
mov
jae
pop
xor
ds
add
ins
ja
dec
mov
test
outs
mov
dec
push
push
xor
sbb
add
sahf
add
xchg
loop
jmp
push
mov
xor
pop
inc
sbb
mov
and
dec
ror
stos
stos
add
jns
xor
or
mov
aad
ss
int3
popa
mov
push
jle
mov
repnz
dec
lods
mov
sbb
enter
sub
mov
jo
add
pop
jbe
and
and
add
cli
jo
or
mov
inc
and
mov
sub
push
dec
mov
xor
and
mov
adc
xor
dec
sbb
icebp
xchg
jmp
inc
shr
in
pusha
dec
xchg
fs
nop
add
adc
adc
call
push
pop
ss
xor
sbb
push
dec
outs
sbb
inc
xchg
dec
test
inc
mov
dec
cmc
add
or
ror
or
inc
inc
inc
scas
and
wbinvd
push
jo
add
or
test
sub
and
add
adc
adc
sbb
xor
jbe
js
aaa
ret
sbb
and
adc
shl
dec
sub
push
cmp
pop
stos
inc
xor
push
push
xor
push
mov
ret
imul
pop
adc
shl
nop
pop
test
fwait
ins
adc
into
imul
inc
sbb
push
push
mov
cmp
push
or
sbb
je
int3
push
xor
(bad)
xchg
mov
shl
les
and
pop
push
mov
(bad)
cli
ret
xchg
je
retf
push
dec
xor
dec
fs
and
mov
dec
push
dec
ja
mov
or
movs
xor
loopne
ins
clc
add
xchg
call
push
gs
mov
adc
inc
scas
test
xchg
dec
and
clc
xor
adc
sub
push
inc
leave
loopne
ins
in
adc
push
outs
ins
push
cmp
cmp
daa
lods
adc
push
adc
jae
push
enter
xchg
jne
and
jbe
fs
jne
test
pop
and
push
int3
imul
and
xor
mov
cmp
and
or
or
lock
push
nop
push
cli
adc
je
mov
xchg
in
ror
cmp
fwait
(bad)
call
and
push
cmp
lahf
popa
mov
shl
xor
jno
popa
fs
jo
dec
mov
add
mov
add
mov
xor
aad
mov
mov
xchg
and
test
je
lock
cld
xor
inc
test
add
sub
fadd
and
test
test
loope
mov
lods
xchg
je
push
ret
mov
or
je
dec
lock
push
push
imul
mov
cmp
stos
dec
cmp
ret
addr16
or
jmp
add
je
jl
xor
push
ret
sub
jns
push
push
ds
and
push
test
mov
xor
pop
push
and
fs
inc
jo
cs
push
add
adc
mov
mov
push
sbb
inc
inc
stos
clc
or
shr
jo
ror
cli
bound
test
add
test
sbb
xchg
add
stos
and
push
inc
adc
push
xchg
sbb
push
adc
pop
and
add
mov
xor
push
call
or
dec
cmps
inc
push
ja
enter
push
push
or
int3
xchg
test
in
inc
inc
or
pusha
dec
dec
push
mov
inc
pop
(bad)
and
xor
push
mov
push
jle
jb
xchg
xor
jbe
push
sub
fs
mov
jb
mov
sub
call
fst
inc
dec
ja
bound
xor
fwait
inc
mov
rol
mov
mov
test
xor
push
or
dec
cli
and
sbb
aam
inc
adc
mov
sbb
cwde
and
dec
dec
xor
sub
inc
xor
ds
dec
inc
mov
mov
in
xor
sub
mov
xchg
fcom
test
pusha
aam
inc
sub
jle
jns
ret
jp
out
dec
push
ss
sub
rcl
xchg
xor
adc
xor
popa
cmp
cwde
lea
mov
xchg
mov
popa
mov
jl
sbb
xchg
xchg
push
inc
ja
mov
xor
push
fimul
cmp
add
ins
cwde
arpl
jno
data16
mov
dec
call
dec
add
or
mov
jle
cmps
int3
push
pop
push
test
or
and
fbld
dec
call
inc
cmps
and
movs
push
popa
cmp
fiadd
or
mov
adc
add
pop
jmp
clc
pop
adc
ss
ja
jb
or
fist
or
sub
cli
add
adc
sub
push
xchg
sub
(bad)
data16
fs
shl
add
inc
in
add
fmul
dec
cmp
dec
out
fs
mov
push
xor
addr16
or
popa
test
cli
xor
mov
nop
adc
xchg
xor
mov
push
mov
jp
cwde
leave
push
mov
or
or
outs
pushf
sub
sbb
dec
dec
dec
rcl
mov
mov
and
cmp
js
cwde
adc
or
inc
bound
push
push
dec
inc
in
and
sub
sub
add
inc
cmps
push
daa
and
dec
mov
xchg
nop
jle
dec
or
push
cdq
test
jp
xor
push
cmp
jp
adc
cmp
and
popa
outs
mov
and
call
retf
dec
and
inc
addr16
mov
pop
push
push
cmp
sbb
retf
xchg
ret
mov
aam
test
adc
or
cmp
test
or
and
fisub
xchg
dec
jb
es
push
movs
push
fisub
dec
dec
dec
or
pusha
mul
add
add
aaa
push
mov
and
sub
imul
inc
jmp
loop
jae
xor
je
push
enter
mov
fisttp
dec
inc
cmp
arpl
sbb
sub
les
push
sbb
push
les
sub
bound
es
test
push
inc
xor
jae
outs
mov
in
inc
fs
or
xor
int3
add
add
popa
mov
adc
or
push
jo
pop
nop
add
mov
rol
and
cmp
push
pop
add
xor
loopne
or
js
adc
dec
push
loope
xor
pop
retf
sub
adc
data16
xor
dec
test
pop
push
mov
lock
push
retf
inc
xchg
xor
not
mov
inc
aam
ins
outs
dec
jns
adc
test
push
sar
add
shl
movs
and
js
or
sub
add
adc
scas
push
cmp
cwde
sub
sbb
into
inc
push
mov
dec
pop
cmp
sbb
cwde
add
sbb
xor
je
xor
mov
dec
add
and
fdivr
mov
push
popa
sub
push
bound
xor
push
inc
pop
xor
jb
xor
pop
(bad)
or
in
mov
pop
cmp
fs
mov
cwde
mov
and
or
inc
mov
xchg
aam
mov
jb
outs
sbb
add
dec
mov
mov
or
imul
add
adc
and
popa
adc
or
or
push
dec
adc
je
(bad)
dec
(bad)
xchg
inc
adc
jns
xor
mov
inc
xor
and
mov
test
stos
test
fs
pop
clc
xor
xor
adc
xor
push
xchg
xchg
imul
outs
dec
outs
or
movs
xchg
add
aad
dec
mov
aaa
xchg
xchg
push
mov
sub
xor
bound
and
xor
stos
dec
adc
(bad)
ret
xor
or
pop
adc
cdq
xchg
or
push
dec
add
test
in
test
arpl
push
add
dec
or
add
xor
sub
fdivr
or
mov
cld
popa
ret
es
nop
pop
xchg
sub
test
adc
cmps
mov
mov
jae
les
add
xchg
inc
and
xchg
ins
ins
jno
cwde
popa
test
or
push
and
sahf
mov
mov
pop
int3
xor
es
dec
adc
mov
xor
inc
sbb
mov
cmps
adc
nop
rcr
xchg
sbb
cs
mov
test
adc
xor
sub
or
in
hlt
shl
inc
mov
sub
adc
sbb
and
fisub
and
dec
les
xor
dec
ins
fst
push
xor
mov
inc
popa
(bad)
mov
movs
mov
nop
data16
and
leavew
loopne
jbe
xor
enter
test
push
cmp
ins
mov
(bad)
retf
push
or
call
imul
and
and
mov
call
nop
ss
push
xchg
xor
mov
push
inc
sbb
xchg
mov
ins
cmp
and
fs
push
adc
mov
inc
inc
cmp
or
mov
push
enter
dec
retf
add
mov
push
push
push
test
add
jne
ins
call
xchg
sub
add
jp
pop
mov
xor
adc
xor
ins
retf
sbb
cmps
cmps
push
add
pop
outs
addr16
jne
dec
ins
sahf
push
or
rol
jo
test
mov
test
xchg
nop
ds
and
inc
push
pop
sub
jns
or
and
dec
sahf
jle
and
neg
or
fdivr
mov
cs
sub
cli
push
nop
test
mov
jle
adc
je
mov
push
enter
inc
sub
or
and
mov
mov
daa
or
and
add
xor
push
les
pop
jo
ret
inc
gs
retf
shl
retf
inc
jns
mov
push
pop
mov
popf
xchg
(bad)
inc
dec
mov
jbe
xor
rcl
jne
clc
push
push
sbb
xchg
mov
cmps
addr16
movs
loop
fcom
bound
inc
and
mov
fs
les
add
mov
inc
cmps
es
test
or
xchg
sbb
and
mov
xchg
and
call
sub
dec
inc
adc
lea
clc
xor
and
ret
and
or
cwde
add
jo
rcl
and
push
jo
jne
pop
dec
test
outs
mov
xor
shl
or
rcl
dec
js
test
add
inc
ror
xchg
lea
retf
mov
ins
test
xor
rol
push
ss
je
int3
sbb
adc
push
sbb
test
push
fimul
inc
jne
inc
(bad)
adc
push
bound
push
cmp
pushf
inc
mov
pusha
sbb
bound
ret
mov
adc
stos
popa
outs
add
mov
xchg
jo
adc
push
sbb
pop
inc
arpl
sub
dec
pusha
fisub
dec
jne
ret
ins
xor
adc
enter
add
xor
adc
fimul
bound
jno
test
push
push
or
sbb
mov
call
sbb
es
fs
shl
scas
or
jns
fsubr
outs
dec
cmps
add
cwde
mov
mov
adc
or
or
mov
ins
dec
gs
aam
dec
xor
mov
out
mov
add
inc
pop
add
sbb
imul
and
push
inc
je
mov
sub
cmp
xchg
enter
aad
loope
test
arpl
pusha
nop
mov
sahf
dec
mov
loopne
adc
mov
and
sbb
call
nop
or
cld
bound
sbb
push
mov
dec
jo
sub
pop
push
xor
adc
or
shl
test
jbe
dec
xchg
xor
add
dec
dec
nop
push
push
sub
test
push
ins
dec
call
pop
(bad)
or
ins
sub
mov
mov
adc
dec
dec
xchg
adc
cmp
and
das
(bad)
int3
dec
test
sub
push
imul
or
mov
and
sub
dec
sub
inc
and
xchg
cmp
sub
test
arpl
jo
pop
add
pop
push
or
sub
aam
adc
push
push
cmp
loop
push
jae
dec
mov
cmp
ins
add
inc
inc
push
inc
dec
dec
push
xchg
and
(bad)
pop
push
cdq
inc
xchg
cwde
mov
cmp
ins
jo
clc
inc
dec
push
test
cdq
sub
add
outs
nop
mov
dec
fs
xor
js
push
loope
jp
jmp
push
test
imul
or
inc
retf
lods
sub
stos
add
imul
xor
sub
stos
dec
ss
or
bound
inc
ror
imul
mov
add
dec
movs
mov
push
pusha
push
outs
lods
adc
or
jo
mov
mov
or
int3
mov
mov
and
mov
test
pop
sub
call
add
sbb
jo
dec
push
xor
mov
dec
push
add
(bad)
mov
mov
je
int3
jb
mov
loop
int3
and
call
add
and
jo
movs
dec
jmp
and
pop
inc
xor
fmul
loop
jns
aaa
push
mov
mov
(bad)
push
push
xchg
rol
mov
push
push
inc
outs
inc
cwde
pop
les
out
scas
sbb
dec
loopne
es
push
imul
in
push
cmps
inc
pop
xor
xchg
(bad)
call
ss
or
or
or
inc
outs
and
xor
mov
sbb
fs
mov
aaa
call
jns
arpl
push
pushf
or
push
dec
ret
shr
cs
jbe
jle
cmp
sbb
sub
push
inc
ja
jae
xchg
sbb
mov
in
add
xchg
jb
loope
nop
jmp
mov
retf
sahf
xor
test
cwde
fs
shl
push
jo
add
js
mov
xchg
jo
outs
xor
test
dec
sbb
jbe
push
outs
cmp
mov
ror
cwde
push
jp
dec
out
jo
or
xchg
es
bound
aam
sbb
xor
stos
inc
cmp
popa
push
sub
call
clc
repnz
xor
scas
es
cmp
in
test
aad
inc
cwde
sahf
pop
pushf
push
push
imul
cbw
mov
xchg
adc
(bad)
arpl
nop
xchg
out
cmps
shl
rcl
adc
rcl
pusha
inc
arpl
push
sbb
mov
xchg
ror
loope
cmp
inc
add
cmp
adc
int3
mov
test
xchg
pop
push
pop
into
into
dec
add
movs
ds
jbe
add
inc
push
push
mov
push
mov
lods
cmp
js
cwde
ja
ins
dec
js
inc
daa
fs
jbe
adc
ret
bound
push
test
or
daa
ret
add
test
xor
dec
and
xor
add
xor
xchg
adc
mov
dec
pusha
push
push
pusha
dec
push
dec
lock
outs
xlat
test
xor
fisubr
inc
add
and
aaa
xor
imul
adc
or
push
add
push
jns
mov
push
jle
sub
sub
clc
push
adc
ins
xchg
fiadd
bound
add
xchg
mov
pop
push
jp
js
push
and
mov
rcr
imul
push
pop
test
or
push
sbb
ss
dec
adc
adc
jb
mov
jmp
fsub
cmp
push
push
and
es
add
push
inc
dec
push
je
dec
movs
aam
sahf
outs
adc
inc
xor
jp
dec
xor
js
jbe
dec
loop
sub
xor
scas
or
dec
or
jbe
or
mov
pop
xor
xor
xor
adc
sub
test
mov
leave
and
loopne
inc
xor
push
push
je
or
cwde
fadd
and
or
sbb
xchg
dec
mov
sub
test
push
ss
or
mov
lea
dec
add
test
mov
push
or
mov
jns
fs
push
popf
xchg
mov
or
retf
aam
or
dec
bnd
retf
push
mov
push
ins
ss
add
mov
dec
sub
div
inc
xchg
loopne
xchg
inc
scas
adc
sub
inc
push
mov
xor
sub
and
mov
stos
jo
int
loope
mov
push
sub
inc
jb
adc
hlt
mov
retw
sar
and
xor
addr16
into
jno
or
mov
hlt
and
xor
push
push
sahf
xor
xchg
je
or
data16
sahf
xchg
inc
push
lods
sub
push
in
adc
mov
outs
mov
dec
adc
sub
dec
inc
mov
sbb
imul
cmp
xor
in
(bad)
arpl
add
inc
pop
push
add
dec
mov
xor
cmp
sub
ja
popa
inc
je
jb
inc
ins
or
inc
adc
sbb
call
adc
ins
adc
adc
jmp
mov
or
adc
xor
add
push
adc
jb
xor
pushf
add
ins
inc
and
adc
stos
or
or
in
es
xor
cli
test
sahf
dec
push
mov
or
sbb
or
ds
mov
push
jns
test
xchg
and
fdiv
pusha
xor
in
dec
dec
sub
add
inc
mov
cli
dec
jp
add
test
adc
lock
ss
cmp
or
dec
mov
cmp
pop
(bad)
xor
dec
mov
mov
test
je
sbb
mov
inc
push
jae
cmp
inc
sbb
scas
push
push
push
js
push
mov
push
push
and
lea
push
movs
and
push
in
popa
cmps
mov
mov
adc
es
push
clc
inc
or
push
cli
add
sbb
ss
dec
push
inc
xchg
sub
sub
inc
add
xor
aam
adc
stos
cmp
pop
jae
add
mov
cmp
mov
inc
xor
inc
xor
ror
inc
sbb
sbb
jbe
mov
cmp
jb
dec
retf
shl
or
jae
push
mov
adc
inc
sbb
jne
inc
retf
and
jp
sbb
cmp
in
inc
dec
adc
sub
clc
or
sub
adc
outs
mov
dec
dec
jp
cmp
popa
push
sub
test
jo
pop
aaa
leave
push
retf
les
ss
rol
xor
fidivr
lds
push
pop
lock
push
adc
add
adc
ret
push
mov
inc
and
pop
movs
push
xchg
mov
pop
scas
cmp
push
inc
jle
fisubr
push
adc
cmp
cwde
push
add
mov
rcl
jno
push
ror
retf
adc
dec
xor
(bad)
(bad)
ja
mov
dec
cwde
mov
adc
dec
nop
dec
xor
mov
dec
xor
push
pushf
inc
xchg
mov
fcom
enter
pusha
push
bound
ins
call
adc
addr16
add
dec
es
cs
retf
outs
shl
jmp
movs
loop
jp
movs
sbb
dec
jp
xchg
sub
lods
cmp
push
dec
sbb
xchg
sub
hlt
add
es
dec
daa
mov
xchg
adc
cmps
and
mov
dec
mov
inc
ins
push
imul
pop
gs
mov
inc
mov
dec
jae
(bad)
cmp
fisubr
adc
xor
sbb
outs
je
test
ins
sub
jb
lds
stos
adc
jb
push
stos
adc
xor
and
inc
shl
pusha
aas
add
dec
xlat
sub
inc
sub
sub
movs
adc
sub
sbb
lods
inc
push
adc
push
outs
adc
imul
mov
and
inc
dec
loopne
or
movs
scas
sub
dec
mov
add
popa
mov
xor
or
enter
inc
call
xor
ja
xchg
(bad)
or
addr16
dec
imul
data16
inc
jns
dec
push
dec
or
enter
dec
pusha
jno
mov
inc
sbb
rol
and
sub
ret
push
xor
xor
mov
mov
pop
sbb
stos
adc
pushf
rol
push
outs
adc
mov
dec
xchg
sbb
arpl
inc
mov
arpl
inc
sbb
xor
jae
and
pop
push
pop
sub
push
inc
dec
and
xchg
popa
mov
adc
nop
dec
data16
adc
add
ss
clc
outs
ror
bound
dec
push
add
dec
adc
imul
js
bound
inc
test
sbb
and
les
xchg
shl
jmp
xchg
mov
add
inc
cmp
clc
cmps
add
les
int3
out
loopne
push
fadd
pusha
loope
adc
add
inc
push
add
xchg
push
jp
cmp
xor
ss
inc
movs
jne
call
mov
call
jmp
mov
jbe
cmp
jb
push
call
add
push
jbe
sub
test
rcl
push
stos
adc
or
les
mov
scas
sbb
push
adc
ss
mov
dec
adc
dec
sub
xor
add
and
jl
push
or
push
rcr
movs
jbe
xchg
movs
push
push
enter
jne
or
in
aam
js
inc
and
mov
or
aad
adc
out
add
or
mov
pop
mov
jo
dec
jp
inc
and
add
arpl
int3
repnz
xchg
in
dec
xchg
push
mov
push
dec
adc
and
lds
sub
mov
inc
int3
sbb
mov
mov
icebp
push
popa
add
shl
xchg
dec
(bad)
cmp
mov
xor
sbb
(bad)
cdq
ins
cwde
dec
into
mov
add
pop
push
or
mov
out
or
add
mov
and
imul
shl
sub
rcl
or
xor
push
mov
push
xchg
ret
and
mov
xor
xchg
imul
pusha
xchg
push
or
push
pusha
add
push
jo
fmul
loope
dec
or
cmps
adc
call
push
push
mov
mov
or
mov
aaa
scas
repnz
xor
add
bound
or
add
sub
outs
sbb
rcr
push
xchg
jo
and
xor
inc
xchg
or
add
adc
scas
add
xor
inc
cmp
or
mov
and
dec
cld
inc
push
add
sub
jp
push
or
int3
jo
and
xchg
rcl
mov
inc
mov
pusha
test
mov
or
clc
adc
inc
jo
and
mov
pusha
push
xor
or
test
sbb
push
or
inc
or
or
sahf
push
pushf
jo
sbb
popa
pop
adc
out
jo
es
and
pop
(bad)
jns
dec
retf
or
hlt
inc
dec
les
add
pop
mov
inc
pop
shl
ss
mov
xor
sub
aad
es
mov
popa
adc
mov
mov
mov
jbe
push
loopne
push
dec
gs
inc
retf
ds
or
sub
add
dec
stos
fsubr
inc
stos
add
inc
push
mov
sub
push
fiadd
ja
pop
lahf
outs
inc
add
mov
and
push
dec
jmp
xchg
push
dec
shl
mov
dec
ins
xor
test
pushf
inc
inc
stos
and
sbb
gs
or
mov
push
bound
imul
inc
ret
or
fmul
sub
adc
dec
sub
dec
bound
xor
jl
dec
push
and
xor
or
jle
mov
push
push
ins
sub
jbe
push
dec
outs
bound
cdq
jmp
mov
dec
sahf
loop
push
adc
pop
in
dec
add
jbe
ins
push
dec
sbb
ins
dec
or
ins
ror
inc
hlt
hlt
shl
xor
push
add
mov
inc
clc
fdiv
aam
call
mov
xchg
push
outs
shl
ins
dec
ins
mov
add
movs
xchg
loopne
push
lock
push
add
sbb
jo
cmp
adc
adc
pop
lods
push
sub
inc
sub
cmp
xor
test
xor
add
rol
xchg
and
inc
sbb
push
dec
dec
xchg
pusha
xor
xor
fiadd
dec
and
jp
hlt
push
xchg
xor
(bad)
add
mov
push
(bad)
nop
stos
pop
ds
test
dec
enter
push
pop
xchg
inc
add
sbb
add
or
push
push
shr
inc
sub
and
add
lock
xor
push
addr16
add
dec
mov
je
xchg
stos
add
mov
ret
mov
push
or
push
pushf
xchg
mov
or
clc
ins
(bad)
aam
push
dec
shl
test
aaa
add
sub
xchg
jb
push
xchg
add
mov
sbb
ja
add
rcl
xor
and
cmp
scas
mov
adc
push
es
ret
sahf
or
add
push
add
adc
ror
inc
aad
xor
out
cmp
imul
add
fidiv
pusha
and
outs
sub
mov
enterw
dec
cmps
ins
mov
dec
or
or
dec
sub
pop
dec
push
loopne
or
add
mov
ja
mov
sub
scas
push
and
jb
js
inc
add
push
sbb
sub
jmp
dec
dec
sub
dec
ds
mov
retf
sbb
dec
xor
push
sbb
fidivr
xchg
adc
sbb
arpl
mov
dec
pusha
jb
adc
push
jbe
imul
je
or
xor
rcl
dec
sub
shr
inc
dec
nop
int
dec
cmp
inc
push
sub
test
sbb
test
dec
push
pop
push
inc
das
sbb
imul
push
sub
jns
lods
and
mov
add
push
xor
add
add
xchg
fidivr
cwde
xchg
inc
cmp
push
push
xor
rcl
add
ficom
test
inc
jo
add
adc
push
mov
or
push
or
add
ins
mov
or
push
mov
push
test
stos
retf
dec
ret
cld
imul
stos
call
inc
fsubr
rol
pusha
push
jbe
inc
add
sbb
xchg
shl
mov
pop
addr16
(bad)
mov
ret
outs
ja
mov
and
push
shl
ss
xor
inc
xor
xchg
sub
jp
xchg
and
xchg
jbe
js
ins
mov
or
gs
sub
ins
mov
xchg
loop
and
xchg
mov
(bad)
pop
push
dec
ret
pop
xchg
add
jns
jb
adc
and
dec
es
inc
(bad)
or
add
push
sbb
push
shr
sbb
push
inc
sbb
stos
movs
test
loopne
sar
cwde
xchg
xchg
xor
xchg
ret
(bad)
mov
xchg
push
jl
push
inc
retf
jo
ret
pop
push
mov
pop
je
xor
data16
popa
loopne
jmp
xor
data16
adc
pop
adc
and
push
repnz
push
xchg
hlt
jns
(bad)
sbb
push
add
movs
inc
mov
stos
retf
jl
cli
dec
sbb
mov
dec
test
in
adc
je
mov
xor
fsub
int3
add
les
push
sbb
retf
imul
mov
adc
dec
lock
shl
dec
add
mov
push
cwde
sub
mov
sbb
sub
call
movs
push
or
test
call
cld
xor
mov
aaa
adc
inc
dec
inc
out
inc
mov
clc
arpl
xor
dec
mov
xor
or
in
shr
inc
lock
inc
enter
xchg
mov
inc
sbb
bound
ret
int
and
cli
push
inc
outs
inc
xchg
add
push
inc
adc
aam
add
push
xchg
ja
jne
mov
adc
push
dec
push
push
cmp
sub
movs
scas
pop
pusha
movs
xor
mov
xor
push
sub
xor
or
rcl
xor
pushf
dec
jne
test
data16
shl
cmp
lock
mov
loop
sub
xchg
test
push
sub
mov
mov
xor
cmp
dec
(bad)
fsubr
sub
push
loop
mov
arpl
pop
xor
stos
enter
jo
xor
xor
fs
aad
scas
pop
(bad)
aad
sar
les
bound
stos
retf
data16
es
or
inc
and
inc
xchg
add
xchg
mov
dec
inc
inc
jle
add
popa
sahf
js
jno
leave
sub
dec
and
lds
and
stos
xchg
in
inc
popa
inc
xor
stos
jo
push
dec
add
ret
enter
pop
push
mov
inc
call
and
add
sub
leave
xchg
bound
jp
sbb
xor
adc
sbb
dec
mov
mov
mov
jne
push
hlt
mov
xchg
dec
add
xchg
fadd
jo
push
cmp
xor
mov
xor
jecxz
add
mov
cmp
adc
add
nop
xor
cs
sbb
stos
test
dec
push
push
mov
rol
push
pop
sub
push
enter
sub
and
outs
push
xchg
ret
mov
push
sub
popa
(bad)
adc
or
pop
inc
add
push
bnd
adc
fwait
push
push
inc
loopne
or
and
call
xor
fs
test
push
les
mov
in
push
xor
test
bound
and
out
jno
inc
or
sub
jbe
ret
ds
data16
or
repnz
inc
shl
popa
fs
scas
dec
gs
push
sahf
sub
xor
adc
push
or
push
out
outs
jb
and
out
add
aam
scas
ins
pop
and
sub
or
mov
mov
fs
bound
and
pop
jb
lds
sbb
ret
aaa
fmul
mov
and
fwait
inc
and
xor
jl
int3
and
adc
inc
call
ret
or
enter
imul
inc
add
jbe
retf
or
jne
dec
sub
nop
ret
inc
mov
push
shr
inc
outs
or
adc
ds
or
push
push
xor
xchg
mov
mov
repnz
xor
mov
dec
sahf
bound
dec
imul
aam
rcl
js
or
inc
xchg
sub
ja
dec
mov
lds
fsubr
adc
les
add
adc
in
cmp
mov
and
inc
mov
sub
int3
fdivr
data16
or
sub
movs
xchg
cmp
ja
and
and
jae
popa
push
or
dec
add
push
ins
bound
cs
retf
sub
imul
and
(bad)
in
cwde
inc
inc
adc
movs
popf
jo
dec
jle
(bad)
push
inc
mov
add
test
nop
ins
or
pop
adc
xchg
rcr
sbb
add
push
and
shl
shl
dec
adc
and
out
adc
js
jb
inc
hlt
shl
sub
sub
push
sub
sbb
push
dec
inc
cs
cli
jo
jo
nop
test
inc
loopne
add
cmp
inc
xchg
in
loopne
fiadd
pushf
sub
call
sub
mov
push
dec
push
lahf
and
xor
mov
dec
movs
dec
push
mov
mov
pop
jo
jl
aam
movs
push
ss
dec
dec
xor
push
dec
adc
push
push
dec
fidiv
or
data16
push
and
sub
stos
jbe
push
rol
(bad)
xor
je
inc
and
push
mov
test
cli
addr16
adc
dec
inc
nop
and
and
push
xor
loopne
call
inc
jbe
mov
adc
dec
push
mov
nop
push
push
mov
push
data16
sub
ss
nop
and
xchg
cdq
ins
ret
mov
js
faddp
popa
add
sub
xor
fsub
cs
data16
sbb
adc
dec
call
shl
push
push
and
push
xchg
push
sub
mov
and
and
add
js
xchg
inc
sub
mov
stos
cmp
test
shl
sar
push
call
inc
sbb
mov
dec
ja
xor
push
fs
and
or
and
cmps
xchg
pop
imul
inc
inc
ja
push
sub
cli
or
lods
add
xor
dec
jbe
dec
add
rcl
pop
or
and
dec
pusha
xor
push
inc
jae
or
fs
xchg
fs
add
fs
push
or
inc
xor
test
mov
xor
inc
es
adc
gs
movs
and
or
add
inc
retfw
push
or
cmp
and
xor
xor
xor
dec
imul
mov
mov
push
inc
dec
pusha
xor
and
lods
test
add
push
inc
jns
imul
jno
dec
test
(bad)
fimul
jns
hlt
push
push
lods
dec
dec
dec
enter
ins
sbb
test
ror
popa
dec
add
push
mov
popf
inc
add
dec
call
inc
fs
mov
imul
push
pushf
add
rol
mov
add
and
push
hlt
mov
mov
inc
jo
fcom
fcomp
inc
nop
imul
cdq
push
push
push
data16
test
sbb
inc
or
sbb
push
dec
mov
mov
pop
in
xor
dec
or
enter
inc
into
movs
xchg
push
xor
ins
push
or
or
add
loop
je
add
cmps
inc
push
cmp
mov
inc
loopne
out
pop
xchg
inc
pop
dec
cmp
adc
les
mov
dec
mov
or
push
pop
fiadd
inc
jb
add
mov
leave
xchg
call
jl
sub
jle
je
sbb
arpl
es
fadd
add
fmul
or
div
enter
fiadd
add
ror
test
inc
ret
add
and
or
push
(bad)
scas
push
sub
sbb
mov
xchg
dec
cmps
push
ret
push
cwde
and
or
push
or
push
dec
les
sub
sbb
add
mov
cmp
in
cwde
xor
ss
nop
adc
inc
mov
pushf
ins
jp
add
jo
pop
add
xor
mov
fdiv
push
pop
fdiv
dec
dec
xor
mov
sbb
sub
push
and
aam
dec
push
push
pop
or
aam
mov
inc
xchg
push
xor
stos
mov
test
push
xor
push
pop
inc
mov
xchg
mov
sub
ret
or
popa
add
pusha
xor
xor
xor
movs
sub
push
xor
push
inc
gs
loope
cs
popa
dec
scas
mov
and
xor
sbb
push
arpl
inc
sub
sbb
and
push
add
je
(bad)
xor
xor
outs
pusha
cmps
out
lock
out
popa
inc
and
ins
dec
sub
pusha
inc
pusha
ret
cmp
add
and
dec
dec
lods
jmp
xor
add
mov
nop
push
mov
pop
(bad)
sbb
dec
jl
push
inc
adc
push
daa
add
mov
test
mov
or
inc
push
dec
sub
or
dec
and
adc
pop
sbb
cmp
and
mov
(bad)
nop
push
add
ret
inc
xchg
retf
outs
call
add
and
xor
adc
xchg
dec
fdivr
push
or
xchg
sub
xchg
mov
xor
inc
dec
rcl
or
adc
and
inc
fidiv
add
adc
call
xchg
adc
pop
jns
dec
adc
and
add
jp
retf
add
xor
push
es
xchg
in
sbb
cmp
xchg
inc
jb
ins
mov
cmp
xor
push
arpl
sub
push
inc
mov
push
hlt
outs
fiadd
push
pop
sbb
sahf
cmps
mov
push
dec
mov
test
leave
les
fs
gs
bound
or
ins
(bad)
jae
add
mov
add
xor
mov
xchg
cmp
mov
fsub
add
sub
xchg
add
sbb
cmp
and
xor
or
inc
push
mov
repnz
das
adc
xchg
mov
or
inc
in
and
pop
mov
fimul
ss
mov
loopne
add
inc
add
sbb
sar
dec
push
mov
add
and
push
xchg
jmp
push
and
jl
ds
jb
bound
jbe
xchg
cli
inc
shl
in
pop
jp
mov
push
add
cmp
loopne
mov
add
pop
test
mov
add
jbe
push
xor
popa
inc
shl
adc
xor
retf
sub
xor
ss
xor
or
mov
and
xchg
sbb
sbb
sub
gs
adc
inc
push
sub
xchg
push
mov
xor
fdiv
cmp
push
and
js
ins
mov
mov
jo
imul
retf
inc
cs
pusha
cmp
pusha
adc
shl
ins
call
dec
or
ds
add
bound
pop
push
xchg
mov
fisubr
dec
push
jbe
push
pop
add
in
xor
xchg
mov
mov
adc
xchg
pop
push
fst
jbe
ret
bound
shr
cmp
ret
dec
pushf
loop
dec
test
pop
and
add
dec
sbb
xor
ss
mov
movs
and
inc
lock
mov
mov
lea
gs
jae
adc
push
mov
push
mov
or
xchg
mov
shl
mov
and
xor
inc
add
cmp
or
pop
mov
push
add
test
imul
and
mov
push
adc
xchg
inc
inc
and
mov
sahf
dec
add
mov
nop
adc
add
add
and
mov
lods
push
pop
cmp
retf
push
pop
pop
and
inc
and
hlt
(bad)
pop
dec
mov
lea
int3
inc
inc
push
mov
ins
dec
add
jns
or
inc
dec
cmp
add
inc
add
sbb
cli
les
cmp
or
dec
mov
dec
and
adc
ror
mov
scas
pop
push
or
or
add
add
stos
adc
inc
push
sbb
add
pusha
inc
data16
dec
rol
ins
and
and
and
ret
sbb
dec
push
rol
mov
and
xchg
inc
call
mov
lods
jb
sub
mov
xor
popf
adc
jb
repnz
jne
movs
addr16
in
mov
and
dec
cmp
aaa
add
arpl
jo
or
jb
xchg
xchg
call
add
sbb
movs
cmp
call
push
xchg
shl
xor
sbb
inc
pusha
inc
push
test
dec
dec
mov
xor
add
add
or
test
rcl
ror
jno
push
inc
inc
add
add
or
xor
push
push
push
stos
cmp
dec
jbe
add
pusha
adc
and
mov
test
rcr
push
or
add
nop
mov
popa
inc
push
xchg
adc
xchg
and
js
sbb
test
ret
push
lock
inc
xor
lahf
xchg
in
adc
sub
xchg
sbb
lods
pushf
and
pusha
push
jbe
sub
xchg
test
inc
pushf
ret
call
xchg
popa
dec
jno
xor
cmp
add
dec
push
popa
dec
push
dec
push
cmp
inc
imul
retf
push
rol
push
xchg
jp
movs
mov
mov
mov
fsub
mov
fsubr
popa
jne
rcl
mov
dec
dec
pop
xchg
or
inc
xor
outs
mov
out
je
jne
sub
movs
nop
dec
add
and
dec
sbb
lock
and
stos
test
jae
and
fisttp
dec
sub
and
inc
loop
xor
pop
mov
add
sub
dec
ins
stos
pop
xor
ds
push
adc
or
pop
in
mov
lods
xor
outs
outs
imul
sub
or
and
in
outs
inc
push
dec
push
ret
and
cmp
mov
and
retf
xchg
les
popa
rcl
test
into
sbb
mov
or
stos
mov
addr16
adc
mov
aam
leave
retf
mov
mov
mov
ja
sbb
retf
movs
cmp
fisubr
leave
or
mov
push
in
test
and
movs
jle
xchg
bound
xor
adc
and
adc
pop
gs
pop
sub
mov
push
sub
xchg
dec
dec
inc
jb
jo
cmp
sub
jns
mov
or
or
ins
sbb
dec
fs
pop
dec
out
test
add
cmp
push
xchg
lock
mov
dec
and
mov
outs
mov
scas
(bad)
cmp
add
cmps
inc
push
mov
jbe
push
aam
xchg
retf
adc
cld
mov
dec
call
and
sub
int3
xor
ror
mov
sub
outs
ss
push
nop
dec
xor
fdivr
inc
test
pop
add
push
inc
add
ins
bound
inc
dec
xor
pusha
mov
mov
test
daa
or
rol
push
test
pop
xchg
sub
dec
cmp
arpl
or
adc
xchg
add
test
inc
imul
push
cwde
retf
popa
sbb
push
push
xchg
fadd
pop
sbb
xchg
mov
add
ret
or
xchg
add
bound
push
outs
xor
sub
and
push
sbb
add
pusha
mov
xchg
(bad)
xor
push
cwde
mov
mov
fs
push
push
inc
int3
dec
sub
and
jb
mov
mov
push
inc
bound
cli
push
fld
fs
xor
adc
bound
add
stos
push
inc
cwde
xor
xchg
add
test
pushf
ins
frstor
mov
push
pushf
data16
data16
bound
dec
in
jo
test
ss
jle
pop
adc
mov
mov
imul
popa
fadd
es
pop
data16
xor
ja
test
or
xchg
push
inc
mov
add
sahf
push
dec
aam
or
xchg
mov
or
jns
ds
add
push
xor
retf
imul
dec
ror
mov
cmp
adc
leave
sahf
cwde
jae
dec
inc
pop
push
cmp
adc
nop
push
(bad)
or
push
ss
or
dec
push
and
jae
push
mov
mov
mov
les
cmps
test
jp
inc
sub
mov
lea
xchg
enter
sbb
cmps
arpl
dec
adc
push
mov
dec
data16
or
xchg
pusha
inc
push
ror
adc
inc
mov
add
add
rcr
sub
inc
and
jns
xchg
es
and
mov
mov
adc
dec
pop
and
xor
add
mov
push
dec
xchg
nop
xchg
cmp
mov
push
push
xor
push
inc
and
ins
cld
inc
mov
mov
push
sahf
dec
lods
das
add
add
sbb
sbb
xor
(bad)
sub
add
xor
outs
dec
xchg
adc
add
jne
push
imul
outs
aaa
xor
and
or
pop
ins
or
add
fs
mov
(bad)
in
adc
sub
mov
pop
xor
jle
scas
dec
loopne
ss
sub
push
inc
ja
adc
mov
adc
push
hlt
dec
and
add
fsubp
pop
imul
dec
test
dec
push
add
arpl
jo
stos
xchg
(bad)
push
aam
test
lods
sbb
jns
jno
inc
add
pop
add
popa
(bad)
aaa
push
rol
dec
aam
or
push
xchg
movs
adc
in
dec
fldcw
or
inc
es
or
mov
inc
cmp
and
adc
test
push
xor
adc
inc
jo
adc
loopne
sub
mov
inc
dec
and
ret
push
push
je
sbb
add
push
dec
cmp
pop
adc
cmp
inc
enter
or
and
xor
sub
pop
call
jo
and
adc
inc
mov
data16
inc
jno
and
xor
lock
jne
pop
mov
mov
leave
pop
xchg
fs
dec
les
movs
push
adc
inc
idiv
pusha
or
callw
xor
or
dec
inc
dec
mov
fiadd
ss
je
sub
xchg
and
or
sbb
push
xchg
xchg
dec
outs
enter
add
push
xchg
add
inc
inc
add
je
js
mov
test
push
inc
adc
pop
shl
pop
add
push
inc
aam
push
xchg
jecxz
push
je
xchg
jno
mov
jbe
scas
pushf
outs
enter
hlt
sub
fdiv
pusha
push
sbb
test
mov
sbb
cs
loop
xor
sbb
or
and
push
inc
in
xchg
inc
add
scas
inc
mov
dec
dec
inc
jbe
and
mov
test
cmp
inc
inc
mov
arpl
repnz
add
cmp
or
bound
sbb
or
pushf
mov
imul
outs
adc
mov
enter
xor
call
sub
sbb
sub
push
xor
data16
loopne
enter
dec
push
(bad)
inc
jb
jle
cdq
sbb
dec
mov
imul
dec
cmp
dec
push
je
rol
push
outs
add
popa
jo
mov
adc
pushf
mov
adc
push
cs
js
and
inc
xor
(bad)
bound
sub
push
jne
add
sbb
outs
hlt
mov
or
mov
xor
xchg
or
push
dec
jp
fs
shl
enter
mov
mov
xchg
inc
add
shr
pop
enter
push
bound
imul
xchg
jl
push
pushf
pusha
shr
push
push
mov
mov
popa
call
dec
popa
ins
xor
ins
push
movs
push
xor
test
movs
xor
push
sub
xor
ret
sbb
add
and
push
and
ss
mov
mov
sahf
fidivr
popa
(bad)
rcr
jno
dec
jmp
add
or
inc
jp
push
or
mov
jl
dec
add
cmp
arpl
dec
inc
scas
dec
inc
mov
jae
push
outs
push
cs
scas
ins
jb
outs
pushf
add
or
ss
and
fdiv
mov
es
outs
push
mov
push
push
push
dec
in
xchg
cmps
push
push
push
mov
add
mov
or
or
pushf
and
or
movs
adc
cmp
imul
lock
fdiv
push
xor
xor
lea
pusha
mov
jbe
gs
sub
loop
push
mov
dec
pop
push
dec
test
inc
and
test
mov
clc
and
xlat
add
dec
or
leave
stos
inc
ins
sbb
adc
inc
xor
and
ins
inc
enter
sub
rol
ret
dec
xor
xchg
inc
and
mov
imul
test
mov
pusha
xchg
inc
dec
ret
inc
mov
ss
mov
rcl
arpl
adc
scas
jno
pusha
loopne
dec
stos
push
or
inc
and
pop
loope
dec
inc
adc
inc
and
xor
or
cs
retf
test
sbb
fs
mov
or
adc
xor
int3
mov
outs
movs
adc
cmp
rcr
dec
popa
xchg
rcl
in
adc
mov
js
sub
adc
je
push
inc
pop
cld
sub
stos
jb
xor
push
push
push
retf
xor
fsub
and
xor
pop
fimul
dec
dec
inc
pusha
inc
or
leave
add
sub
adc
inc
push
div
mov
adc
cmps
cs
mov
dec
or
dec
aad
es
ss
jecxz
sbb
fimul
pop
sub
sub
and
xor
cs
mov
out
xor
int3
sbb
in
dec
fdiv
push
and
stos
or
jno
pop
or
cmp
(bad)
loope
add
movs
mov
adc
inc
fcmovu
ins
xor
in
add
sbb
mov
lea
mov
pop
and
xor
ror
xor
jo
cs
aad
inc
and
push
push
push
jp
pop
and
hlt
sbb
inc
fs
pop
mov
out
rcl
adc
dec
or
mov
data16
push
inc
mov
xchg
sahf
mov
or
push
inc
movs
push
and
xchg
and
and
aad
mov
add
xchg
pusha
nop
mov
push
shl
in
push
cmp
jb
sub
test
adc
adc
dec
adc
mov
lock
ins
cdq
sub
xchg
data16
mov
adc
push
test
dec
pop
jp
loopne
add
pushf
outs
sahf
adc
cmp
enter
loopne
mov
add
or
out
sub
outs
push
xor
ins
dec
in
dec
shr
dec
sub
inc
push
sbb
or
dec
sub
add
sbb
push
sbb
ret
jmp
xchg
jl
sbb
adc
inc
push
test
mov
cs
cs
adc
pop
cwde
or
inc
mov
outs
cmps
ins
ins
or
pusha
sbb
cmp
popa
adc
ret
pop
ror
enter
xchg
push
or
dec
push
mov
cli
jecxz
push
jno
arpl
add
pop
mov
and
movs
or
mov
adc
adc
push
ret
and
cmp
jo
adc
jns
cmps
adc
mov
call
shl
push
cli
add
dec
cmps
cli
add
or
xor
push
mov
push
cmp
or
sar
or
les
pop
test
push
mov
jp
add
imul
sbb
sub
in
sbb
dec
push
je
gs
dec
jbe
mov
popa
jb
je
imul
jle
ret
pop
mov
sub
push
inc
aaa
test
push
jae
aaa
push
xchg
and
and
xchg
test
cwde
ins
or
mov
xor
mov
gs
xor
pop
adc
(bad)
push
jns
sbb
cld
sub
ja
es
xchg
sbb
inc
sub
inc
or
fadd
retf
outs
mov
dec
push
outs
adc
and
xor
mov
inc
int3
push
or
inc
push
outs
sbb
sub
fdiv
jo
jo
xor
add
inc
cmp
jo
add
test
xor
test
mov
sub
add
push
xchg
mov
push
and
adc
pushf
pop
mov
adc
ss
xor
push
push
ins
push
cmp
cmp
cmp
sbb
or
mov
inc
ret
in
or
dec
bound
add
lods
push
test
dec
xor
cmps
dec
add
in
push
and
adc
or
ror
or
ins
mov
push
outs
enter
push
dec
jl
push
or
test
(bad)
mov
fsub
mov
mov
sub
rcl
inc
add
adc
inc
lods
dec
jp
lds
cmp
or
int3
dec
and
push
les
push
fiadd
pusha
outs
dec
xchg
test
and
test
adc
sub
cmp
ins
sbb
and
pop
mov
fdiv
push
push
push
bound
dec
cmp
add
push
jne
xor
push
pop
push
or
push
ds
fsub
adc
adc
cdq
sub
mov
fs
ins
retf
and
push
(bad)
mov
mov
and
fadd
inc
and
push
xor
inc
or
pop
push
sbb
inc
dec
push
sahf
ins
sbb
dec
dec
sub
add
cmp
fwait
add
and
ss
adc
jmp
cmp
sbb
ss
stos
mov
test
adc
mov
dec
push
and
fmul
push
test
arpl
bound
xchg
imul
xor
mov
push
inc
pop
or
ret
sbb
es
ror
xor
xchg
retf
sub
mov
imul
arpl
and
or
bound
add
mov
jb
dec
push
mov
xchg
hlt
out
xchg
call
mov
dec
inc
fs
sub
push
mov
je
inc
xor
sub
add
shr
outs
out
dec
inc
movs
lods
dec
pop
outs
ja
fist
(bad)
data16
jb
push
sub
dec
pop
xchg
je
add
adc
je
push
ins
or
xor
gs
lods
push
mov
ins
or
and
push
bound
dec
add
push
jne
fdivr
dec
sbb
mov
push
push
push
xor
mov
retf
cli
imul
inc
loope
mov
push
dec
shl
or
inc
sub
sbb
pop
addr16
adc
int
or
push
jne
sbb
test
push
shl
and
dec
shl
mov
jmp
xchg
lock
jae
xor
xor
outs
test
inc
adc
push
bound
int3
jbe
xchg
mov
retf
add
outs
push
shl
add
mov
out
sbb
and
adc
clc
xor
js
gs
xchg
mov
and
imul
rcl
push
stos
test
jmp
cmps
add
push
dec
inc
ss
mov
mov
bound
rcl
in
xchg
movs
sbb
je
push
arpl
ret
add
sahf
dec
ficom
sbb
cmp
(bad)
je
fmul
push
mov
rol
push
sub
add
xor
sub
xor
jb
push
adc
push
sahf
mov
inc
mov
xor
popa
inc
test
mov
call
inc
jo
push
mov
call
cmp
bound
dec
ss
xchg
les
sbb
loopne
out
inc
push
jno
ins
push
mov
not
gs
test
mov
mov
push
gs
dec
push
and
and
nop
sbb
push
rol
xor
adc
(bad)
dec
pushf
js
pop
adc
xor
bound
push
jbe
add
popa
mov
adc
mov
shr
data16
aam
shl
inc
imul
cmps
dec
dec
and
rol
xchg
mov
jmp
xchg
dec
add
call
dec
inc
sub
outs
adc
mov
(bad)
outs
pop
dec
inc
cmps
pop
nop
shl
dec
ss
mov
shr
adc
(bad)
clc
push
jb
xchg
xchg
test
jo
movs
dec
bound
cs
ins
xor
dec
push
daa
sub
cmp
shl
ss
sbb
aam
inc
add
test
cmp
dec
nop
add
mov
pop
push
aaa
call
xor
sbb
cmp
ins
inc
stos
inc
sbb
les
and
cmps
outs
pop
push
jge
data16
mov
push
add
sub
nop
dec
mov
push
pop
xchg
mov
inc
rol
fs
inc
movs
or
add
push
test
jno
inc
je
sbb
hlt
dec
inc
xor
test
dec
cli
or
mov
pop
cli
push
sub
bound
xchg
test
xor
or
js
in
xor
mov
test
inc
fnsave
or
cmp
dec
push
jae
or
or
or
into
ins
xor
add
inc
nop
push
rcl
and
xchg
int3
cmp
hlt
ins
xor
es
or
adc
jl
adc
adc
int3
jo
mov
rcr
dec
sub
xchg
dec
xor
push
retf
adc
movs
inc
sbb
sbb
lock
adc
jmp
xchg
mov
inc
push
mov
xchg
jb
adc
aam
or
(bad)
lds
fs
mov
or
rol
and
push
push
or
and
scas
push
dec
test
bound
dec
inc
ss
xor
movs
mov
inc
xor
add
dec
pop
mov
sbb
adc
retf
fidiv
push
push
jns
inc
mov
pop
inc
mov
bound
inc
and
xchg
into
adc
leave
or
nop
ss
(bad)
es
or
sbb
ins
mov
sub
and
inc
add
dec
push
or
or
xchg
mov
mov
cmp
out
jno
imul
pop
or
push
fwait
adc
xor
(bad)
nop
inc
sub
dec
(bad)
push
stos
mov
cli
cmp
push
bound
lea
movs
stos
or
adc
push
mov
adc
les
adc
add
pop
mov
adc
imul
sub
mov
sub
bound
or
es
dec
dec
sbb
or
dec
dec
test
hlt
jb
out
out
xor
popa
push
push
les
inc
test
xchg
dec
(bad)
mov
inc
cmp
mov
inc
mov
mov
lock
jbe
push
inc
jbe
in
push
push
outs
adc
add
out
gs
push
shr
jl
mov
push
sub
inc
mov
push
push
into
add
push
mov
pop
jo
xor
push
mov
mov
add
inc
xchg
les
dec
add
aad
fld
out
ret
popa
push
and
push
and
and
jb
dec
and
fild
loopne
add
mov
jp
fcom
es
sub
cmp
sub
gs
call
call
cmp
pushf
push
enter
mov
popa
loopne
enter
or
ss
movs
bound
stos
inc
mov
push
xor
push
(bad)
stos
pop
push
push
add
sub
je
adc
ins
inc
and
or
xor
js
hlt
adc
push
push
push
add
mov
jbe
push
lods
xor
jle
mov
fidivr
push
xchg
pop
lods
aad
data16
jp
cmc
push
jo
push
inc
aad
shr
inc
call
push
retf
mov
push
retf
test
shl
push
or
xchg
pushf
push
xor
test
cmp
sub
inc
push
movs
mov
add
in
push
shr
jp
dec
imul
addr16
mov
sub
push
enter
cmp
jbe
push
add
pop
push
inc
imul
fidivr
mov
sbb
movs
sbb
inc
add
dec
xchg
mov
lds
fsub
xchg
jo
sbb
nop
inc
popf
add
xor
stos
add
or
and
xchg
add
push
data16
outs
xor
and
cli
cld
aad
add
adc
or
aam
xchg
ja
enter
xor
mov
data16
mov
shr
push
sub
dec
ins
xchg
jb
ss
add
sbb
pop
push
dec
or
retf
popw
push
pop
arpl
push
dec
mov
ror
cli
jp
pop
movs
stos
dec
not
je
xor
pop
fs
outs
data16
ins
add
jo
or
mov
imul
mov
push
push
je
ret
push
mov
push
cmps
and
push
dec
sbb
outs
dec
sbb
hlt
retf
dec
and
and
mov
push
shr
je
mov
jmp
dec
dec
push
xor
xor
xchg
jmp
cmp
add
jo
sub
cmp
pusha
bound
and
fdiv
push
add
loopne
push
sub
push
xor
inc
dec
or
add
push
push
inc
sbb
les
popa
enter
jns
push
mov
add
add
inc
test
je
loopne
mov
push
enter
sub
dec
push
jmp
ret
push
pop
outs
jmp
outs
push
arpl
fcmove
push
inc
mov
jb
dec
or
call
or
inc
je
popa
test
popa
je
push
jp
call
hlt
or
mov
and
and
jb
and
retf
xor
cs
pop
test
or
push
fiadd
adc
mov
cs
xchg
ret
push
dec
retf
mov
nop
clc
push
pop
xchg
xchg
test
push
mov
outs
jp
jb
call
fs
jp
cwde
add
imul
push
pop
fs
mov
pop
(bad)
add
dec
test
pop
pop
jb
ins
jl
jne
cmp
scas
imul
inc
ins
outs
inc
shl
push
or
and
pop
rcl
inc
neg
jae
xor
or
push
push
out
sbb
dec
cmp
push
ret
jo
out
dec
cmps
popa
movs
mov
push
ins
imul
inc
(bad)
xor
aam
cmp
inc
lock
lock
inc
mov
inc
sub
bound
ret
push
les
clc
adc
bound
mov
mov
push
es
sbb
es
push
fiadd
scas
adc
push
xor
lods
mov
add
mov
mov
and
jb
or
mov
or
dec
data16
add
nop
call
fisub
dec
inc
sbb
add
adc
xor
rcl
fwait
bound
popa
adc
imul
push
xor
rcl
xor
mov
pop
mov
inc
xchg
mov
xor
movs
cmps
pusha
test
xor
mov
xchg
nop
inc
out
cli
dec
inc
frstor
in
pop
ins
xor
adc
ds
adc
adc
mov
pusha
ins
ja
push
pop
or
dec
cmps
(bad)
enter
xchg
ss
and
inc
outs
cwde
into
jns
ret
and
push
dec
sbb
repnz
inc
pusha
in
pop
inc
sbb
add
loop
inc
and
imul
inc
imul
adc
dec
adc
xor
add
mov
les
outs
mov
mov
cmp
adc
repnz
push
push
retf
cld
pop
addr16
add
mov
push
push
test
out
call
xor
adc
dec
pop
mov
fdivr
push
cs
inc
dec
aad
add
sub
cmp
movs
and
push
fwait
loope
jo
dec
push
call
bnd
sub
mov
call
push
push
pop
mov
sahf
inc
pop
mov
push
dec
xor
sbb
mov
mov
cmp
dec
pop
imul
jb
xor
ror
fsubr
fisub
sub
(bad)
cmp
and
test
int3
inc
outs
push
test
in
ins
call
es
push
mov
inc
mov
cs
inc
push
push
push
adc
xor
mov
inc
es
shl
ins
xor
sahf
jb
nop
call
sbb
add
jb
push
push
or
push
push
js
sbb
adc
sub
out
add
xor
dec
mov
dec
sub
inc
cmp
cmp
xchg
xchg
pop
or
add
sbb
test
retf
rcl
mov
loop
push
push
add
sbb
bound
test
dec
inc
idiv
jb
push
add
ss
mov
int3
and
dec
push
out
push
xchg
fisubr
xor
adc
add
push
dec
adc
dec
xchg
pop
pop
inc
enter
dec
pop
mov
call
dec
sub
adc
pusha
and
je
jb
dec
adc
xor
dec
(bad)
push
dec
call
imul
inc
push
data16
into
sub
mov
inc
es
test
push
inc
adc
dec
dec
add
mov
mov
mov
fadd
push
sub
xor
or
stos
gs
add
out
jo
xchg
nop
xchg
dec
jo
outs
nop
and
mov
sub
push
adc
xchg
aam
mov
add
inc
cmp
sub
xor
cmp
pop
or
and
add
ss
xchg
and
ins
test
sub
xchg
or
push
push
push
or
adc
pop
data16
pop
push
movs
inc
inc
enter
rol
xchg
aad
xor
or
xor
stos
add
sahf
push
push
rcl
sbb
push
xchg
push
inc
hlt
js
in
adc
ret
sub
cmp
and
movs
(bad)
sbb
add
retf
cs
inc
mov
retf
lock
bound
fs
jp
sub
sub
cmps
mov
into
pushf
dec
dec
cmp
dec
or
add
adc
push
aam
mov
ror
mov
enter
fiadd
jo
add
adc
inc
inc
cld
lock
xor
pop
push
ret
cwde
or
sub
dec
test
and
pop
sbb
mov
xor
cwde
sbb
push
dec
ins
adc
jbe
mov
xor
out
sub
inc
xor
inc
push
sbb
call
add
sub
push
add
inc
cs
inc
pop
add
lods
xchg
add
add
ja
xor
and
push
dec
lock
push
inc
retf
ret
push
ins
ins
xchg
cmp
push
movs
or
xor
xor
inc
sub
xchg
mov
mov
rol
inc
add
inc
mov
call
adc
lds
xor
jae
test
fiadd
sub
xchg
or
clc
xchg
mov
sub
xchg
xor
xor
test
and
or
xor
lods
movs
or
jne
test
sub
pop
push
test
lds
les
mov
pusha
pop
pop
push
jae
jns
in
jp
sub
les
add
or
inc
xchg
add
push
pop
cdq
push
and
mov
xchg
fs
adc
push
xchg
call
mov
jp
pushf
into
not
gs
retf
cmp
movs
or
imul
cmp
jbe
ins
bound
jmp
jecxz
add
cwde
imul
cdq
push
xchg
inc
cld
dec
outs
addr16
sbb
je
pusha
and
or
fdiv
sbb
push
mov
mov
push
mov
ins
xlat
push
or
jno
xor
inc
dec
mov
jno
adc
mov
dec
sahf
xor
jae
mov
sar
inc
inc
and
add
imul
lock
imul
xor
xchg
mov
xor
int3
mov
aaa
or
dec
add
ss
cmp
push
test
or
sub
jbe
inc
push
adc
rol
sub
cmp
dec
rcr
inc
outs
xor
pusha
dec
adc
add
mov
adc
and
adc
jae
sub
lods
push
push
nop
xor
ret
adc
push
aaa
or
inc
stos
add
or
dec
adc
add
imul
push
mov
les
int3
cmp
and
add
push
ss
mov
mov
pusha
inc
or
adc
inc
mov
xchg
xor
sub
and
xor
xor
push
push
dec
dec
jne
ret
je
cwde
adc
or
push
inc
mov
push
dec
inc
or
into
sbb
pop
or
jb
jbe
inc
push
push
lock
call
popa
aad
adc
sub
adc
sbb
or
dec
hlt
or
push
lods
xchg
jp
adc
adc
retf
sbb
add
or
stos
loopne
cmps
sar
inc
ins
push
sub
xor
lods
inc
pop
dec
xchg
inc
rol
pop
jbe
add
test
pop
add
outs
aam
inc
inc
sub
stos
add
ins
push
mov
and
dec
mov
jl
inc
and
xchg
dec
mov
sub
push
dec
xor
inc
push
dec
inc
sub
or
xchg
mov
adc
inc
test
push
dec
dec
xchg
pusha
mov
sbb
dec
nop
pop
inc
test
xchg
push
push
xchg
or
imul
push
pushf
or
dec
dec
add
popa
sub
(bad)
out
dec
retf
sbb
sar
inc
push
mov
adc
or
test
adc
mov
in
and
rcr
adc
xor
mov
jo
popa
jmp
mov
rcl
enter
jno
stos
imul
or
aam
and
inc
test
pop
mov
adc
jp
nop
sub
dec
imul
data16
sbb
ins
mov
add
cmp
push
mov
jae
lds
pop
imul
inc
dec
or
loopne
sbb
mov
add
dec
sub
ins
add
dec
cdq
adc
and
out
hlt
or
push
inc
or
mov
adc
outs
dec
push
cmp
js
movs
aad
int
cmp
inc
xor
push
push
pop
loope
or
lods
add
ins
push
jns
push
dec
push
add
out
push
js
push
fmul
inc
add
pusha
mov
adc
(bad)
lock
dec
mov
retf
test
inc
in
push
cmp
inc
shl
test
jle
sar
cmp
mov
popf
mov
pop
ficom
mov
or
(bad)
mov
push
xchg
xor
or
add
fiadd
inc
nop
sbb
and
pusha
inc
add
ja
nop
and
or
pop
jno
cwde
adc
cmp
data16
pop
lea
inc
push
push
add
push
inc
jb
dec
pop
sub
dec
call
sbb
push
or
int3
jb
mov
sbb
jmp
inc
fiadd
inc
mov
add
xor
add
jmp
adc
inc
xchg
cmp
jo
lock
mov
cmp
pop
jo
shl
nop
xchg
dec
push
jp
xor
push
dec
add
data16
push
call
mov
sub
mov
cli
xchg
dec
and
xor
adc
push
and
in
pusha
jne
nop
in
xor
jbe
into
popa
jbe
les
lods
or
jl
bound
test
sbb
inc
ja
add
adc
test
test
sub
shl
dec
retf
fisubr
xor
ss
or
call
retf
popa
cmp
dec
xchg
add
movs
je
or
les
sub
push
inc
push
retf
test
pop
mov
aam
fidivr
inc
sbb
push
push
aaa
bound
mov
xor
(bad)
out
jno
scas
adc
pop
aad
ins
test
push
retf
mov
push
dec
inc
inc
push
pusha
mov
fs
jb
xchg
xor
and
or
inc
pop
mov
mov
adc
add
mov
add
scas
mov
push
pusha
sbb
faddp
aam
test
ins
outs
xor
and
pop
push
scas
adc
cmp
jne
mov
ja
fs
mov
push
adc
retf
add
outs
push
dec
movs
mov
push
or
sub
xor
inc
jo
fidiv
push
dec
inc
and
pop
cs
sub
push
js
retf
and
mov
out
je
lea
ins
push
dec
popa
data16
push
daa
sub
xchg
push
inc
add
inc
(bad)
retf
ret
push
xchg
xchg
add
shr
add
push
cdq
jbe
aaa
push
jbe
pop
dec
jb
js
dec
xor
sub
je
push
inc
push
push
outs
jbe
sub
or
mov
pusha
and
xor
jb
push
mov
xor
sub
mov
add
add
mov
xor
inc
push
test
ret
add
outs
js
cmps
dec
add
ins
push
add
and
(bad)
mov
mov
xchg
mov
aaa
mov
adc
push
xchg
push
or
xor
or
ror
dec
add
leave
xor
jo
adc
jp
inc
fidiv
je
(bad)
add
pop
lods
data16
adc
mov
cwde
cwde
dec
jmp
sbb
add
adc
cwde
push
gs
jp
inc
test
popa
adc
data16
and
(bad)
shl
add
add
and
popa
lods
push
dec
push
xor
dec
add
and
outs
fdivr
adc
push
xor
and
bound
sub
retf
fisub
adc
jl
cwde
dec
pusha
push
sbb
jmp
push
fs
jb
xor
pusha
push
mov
stos
cmp
clc
dec
pop
test
xchg
aam
jle
dec
ret
adc
push
aam
push
push
push
inc
ss
cld
ins
cmp
jp
test
popa
or
cmp
and
inc
(bad)
and
jne
lds
or
xor
push
mov
ss
jbe
and
dec
jne
cwde
retf
pop
dec
inc
mov
out
test
and
mov
data16
xor
dec
test
mov
push
push
and
call
mov
push
or
sub
cmp
xchg
adc
push
mov
dec
add
or
sbb
and
mov
call
cmp
mov
xchg
fidivr
and
cmp
push
dec
fsub
mov
sub
bound
inc
push
clc
push
xor
aaa
and
aad
mov
add
pop
mov
(bad)
outs
ss
call
outs
imul
xor
fmul
or
in
dec
cmp
sbb
imul
ror
adc
aaa
or
push
jo
xor
add
sahf
dec
adc
push
out
push
or
movs
pop
push
call
mov
push
jae
shl
mov
jp
xchg
add
ins
add
pop
add
bound
jb
xchg
retf
fdivr
bnd
fsubr
xchg
xor
cwde
xor
push
mov
xor
nop
or
in
cs
push
push
cld
imul
xor
xchg
inc
inc
push
ss
stos
or
jb
mov
pop
inc
shl
jb
adc
push
outs
je
adc
and
test
fs
bound
ins
les
dec
pop
mov
jbe
or
add
ret
inc
mov
inc
dec
stos
popa
les
stos
dec
ret
push
mov
xor
sbb
jbe
into
lock
in
add
or
inc
test
ss
cmp
out
xchg
xor
inc
(bad)
sbb
jecxz
loopne
inc
xor
outs
mov
push
add
or
inc
cs
or
out
add
dec
pop
jo
es
sub
pop
inc
in
fs
inc
add
pop
xchg
jl
and
add
add
dec
cdq
jb
jbe
into
inc
add
mov
xor
dec
add
pusha
jb
mov
ss
jb
push
cmp
int3
cmp
and
sar
push
ins
push
push
inc
mov
ins
imul
dec
cwde
or
push
ins
ss
push
jbe
dec
mov
adc
inc
mov
mov
add
mov
inc
sub
mov
push
pop
cmp
rcl
pop
adc
jo
pop
xchg
add
adc
aaa
dec
and
or
ss
inc
sbb
adc
add
push
inc
mov
mov
push
hlt
add
inc
sub
xor
adc
jb
xor
dec
or
call
adc
cmps
push
xor
sar
aam
fs
mov
sar
inc
add
loopne
call
imul
sbb
pop
push
mov
push
mov
ret
inc
inc
sub
mov
push
push
or
push
bound
jne
jb
add
push
shr
out
dec
lock
or
pop
(bad)
aaa
cmp
pop
push
fs
pop
sub
rcl
xor
outs
add
les
sbb
dec
adc
push
jb
xchg
nop
retf
mov
adc
xor
dec
inc
inc
aaa
adc
sub
enter
inc
imul
push
hlt
add
rol
bound
cmp
fdiv
test
dec
dec
test
cmp
jp
js
cmp
daa
sub
adc
xchg
push
mov
dec
mov
js
nop
or
jb
jbe
adc
aam
pop
rcr
es
pop
adc
sbb
outs
nop
dec
outs
aam
lods
adc
bound
movs
and
mov
(bad)
sub
mov
dec
push
jo
and
xor
in
xor
push
pusha
cmp
fnsave
sahf
push
and
mov
shl
push
add
dec
dec
inc
mov
sub
sub
popa
retf
and
cmps
cli
imul
test
inc
push
or
jp
fsubr
sub
fcom
bound
rcl
fld
jb
addr16
push
push
call
movs
xor
dec
sbb
pop
call
stos
outs
push
add
mov
cmp
adc
in
(bad)
mov
je
inc
sbb
int
shl
add
xor
inc
jne
jnp
adc
dec
lods
pop
push
add
ins
call
or
push
push
scas
bound
push
cdq
xchg
imul
xchg
push
or
fisub
inc
dec
cmps
push
mov
add
fsub
push
inc
xor
push
inc
lds
mov
or
js
mov
push
add
addr16
gs
fs
bound
push
xor
fs
and
fs
cmp
inc
mov
daa
shl
mov
jb
test
push
mov
call
sbb
test
fcmovbe
inc
es
xor
add
xor
data16
cmp
sub
ret
mov
enter
push
mov
and
xchg
jmp
inc
and
push
add
dec
test
pusha
dec
call
gs
push
inc
inc
xchg
xor
push
or
xchg
push
mov
sbb
xor
mov
push
or
push
dec
adc
xchg
adc
dec
call
push
dec
ja
and
(bad)
pop
xor
adc
mov
dec
adc
cld
inc
xchg
inc
xchg
or
stos
stos
stos
or
xor
test
xor
dec
test
pop
inc
dec
mov
push
ss
cmp
mov
push
xchg
sub
fs
mov
mov
ret
mov
adc
mov
inc
xor
and
and
loopne
push
mov
sub
xor
adc
test
jne
mov
mov
and
xor
mov
xor
sub
push
xor
sub
cwde
aam
mov
mov
push
gs
into
push
nop
movs
xchg
jp
call
sahf
push
cmps
int3
xchg
add
pop
xor
inc
jle
push
mov
cmp
cmp
add
test
es
jo
fsubr
xor
adc
movs
rol
sahf
xor
scas
inc
add
sub
call
inc
data16
mov
mov
jae
pop
outs
lods
dec
add
imul
push
ins
rol
into
push
adc
imul
arpl
and
push
fdivr
inc
pop
push
adc
mov
mov
sub
sbb
jle
dec
call
mov
test
or
xor
inc
push
cwde
mov
out
or
sub
inc
xor
xor
je
or
and
or
test
and
sbb
jno
xchg
xchg
xchg
ficom
mov
rcr
mov
jns
inc
mov
xchg
scas
mov
pop
xor
push
add
cmpps
gs
pop
loop
pop
and
sub
ins
mov
mov
shl
aam
(bad)
jmp
shl
call
pop
rol
dec
fmul
fs
test
or
dec
or
push
data16
rcr
dec
adc
push
lods
lods
xor
adc
xor
inc
xchg
push
in
push
mov
js
xchg
push
test
ins
push
add
mov
inc
mov
cmps
add
mov
push
sbb
add
sbb
adc
inc
cmps
rcr
add
dec
xchg
ret
push
and
push
sub
and
xchg
push
nop
mov
int3
push
jb
test
add
sbb
xchg
and
out
adc
shr
xchg
adc
xor
adc
push
push
mov
xor
movs
pop
adc
bound
sbb
fcom
hlt
inc
dec
dec
lods
mov
mov
inc
push
inc
enter
data16
rol
jae
ror
aaa
fiadd
pop
add
mov
sbb
jb
call
shr
gs
cwde
xchg
sub
adc
stos
or
push
jbe
bound
jb
test
push
or
hlt
fs
mov
pop
xor
ret
js
adc
je
or
ins
push
in
push
pusha
push
mov
inc
leave
rol
dec
popa
push
add
ss
jbe
push
adc
inc
mov
pushf
cmp
inc
and
bound
pop
fs
mov
sub
push
mov
sub
push
sub
dec
push
mov
loopne
or
or
dec
aam
adc
xor
jb
or
push
push
push
inc
inc
mov
and
inc
mov
pop
cmp
sub
enter
and
and
mov
add
sub
push
call
pushf
adc
push
imul
outs
ficom
or
push
inc
outs
fsub
or
pop
js
scas
dec
mov
sbb
xchg
mov
and
xchg
inc
add
mov
ror
adc
int3
jl
add
mov
sub
inc
sbb
add
ss
dec
je
inc
inc
sub
in
dec
cmp
nop
cdq
sbb
out
mov
test
into
sahf
cli
push
sub
and
cwde
xor
adc
or
dec
xor
popa
into
mov
xchg
pop
dec
cwde
ret
add
add
in
push
call
lods
popa
adc
mov
pop
sahf
mov
xchg
or
or
fdiv
leave
je
je
add
inc
sub
or
inc
rcr
mov
hlt
sbb
pushf
imul
fwait
gs
cmps
jbe
push
push
mov
mov
xor
fst
xor
out
or
pop
into
xchg
xchg
push
or
mov
adc
ins
fs
jbe
push
outs
mov
outs
nop
mov
inc
mov
enter
adc
mov
adc
inc
je
push
jbe
inc
pop
add
outs
stos
dec
bound
and
jae
xchg
imul
adc
pusha
dec
push
add
sbb
xchg
sbb
shr
shl
inc
sbb
or
dec
inc
es
add
cmps
outs
xchg
jmp
dec
inc
inc
retf
and
adc
arpl
pushf
cld
and
lods
pop
xor
sbb
cmps
and
bound
in
push
mov
dec
inc
add
ss
xor
push
aam
mov
and
pop
pusha
imul
mov
pop
inc
mov
ins
pop
and
and
test
popf
mov
inc
dec
and
bound
pop
cmps
xchg
add
sbb
push
add
jmp
push
in
xor
in
cmp
inc
xor
mov
push
jp
push
xor
dec
mov
imul
je
mov
sub
dec
or
imul
and
push
add
ss
xchg
call
stos
mov
enter
inc
or
mov
inc
outs
adc
push
jo
push
je
mov
jbe
test
dec
data16
add
or
pop
add
mov
inc
outs
push
mov
push
data16
imul
mov
push
imul
pop
or
fisubr
mov
push
mov
dec
xor
cmp
mov
or
sub
sbb
sbb
enter
xchg
test
mov
sub
xor
xor
mov
test
sbb
add
clc
test
jb
fs
cwde
push
jbe
mov
inc
adc
push
push
mov
dec
push
fisubr
push
jo
jo
push
arpl
push
outs
pushf
inc
adc
push
add
pop
mov
cmp
push
ss
push
outs
add
adc
add
add
cmp
jb
adc
add
mov
ds
add
cmp
cmp
aaa
push
cmp
xor
push
mov
cmp
xchg
mov
or
push
push
push
sbb
mov
dec
or
inc
hlt
inc
enter
dec
mov
rcr
ret
sub
xor
movs
xchg
int
push
dec
test
xchg
inc
and
cld
sub
dec
mov
xor
pusha
add
xor
sbb
leave
popa
xor
dec
push
sub
gs
ficomp
xchg
pop
inc
rcl
jno
cmp
and
adc
and
movs
push
push
mov
neg
ins
nop
out
push
adc
add
push
dec
and
and
test
adc
cwde
or
outs
dec
dec
and
inc
push
add
inc
fwait
push
pop
jo
xchg
test
cwde
lods
retf
inc
or
cmp
mov
cmps
aaa
pop
inc
jb
dec
adc
push
loopne
in
cmp
test
in
inc
xchg
inc
fwait
jo
mov
sbb
mov
movs
cwde
cwde
rcl
cmps
inc
xchg
mov
add
xor
gs
or
mov
mov
adc
adc
push
pop
pop
shl
adc
cli
rcl
push
adc
shl
fisub
sub
xor
mov
or
je
movs
mov
lds
xchg
call
xchg
test
int3
lock
push
or
inc
sbb
adc
xor
sub
mov
dec
outs
fsubr
sub
movs
push
arpl
add
xchg
xor
hlt
adc
or
add
xor
repnz
ss
adc
xchg
jo
xor
push
inc
push
xor
push
rcl
or
dec
hlt
mov
add
xchg
sbb
dec
jmp
bound
add
and
ja
dec
push
dec
sub
arpl
sub
push
adc
pop
dec
bnd
(bad)
fiadd
dec
mov
inc
inc
jnp
(bad)
xor
dec
mov
xchg
push
inc
sub
aam
inc
inc
push
jbe
push
pop
inc
adc
or
xor
add
fisub
repnz
dec
mov
jp
xor
fs
test
and
mov
xor
adc
mov
mov
jle
jno
push
lock
and
dec
adc
and
xchg
sub
imul
push
jl
js
xor
enter
push
xchg
pop
es
xor
add
mov
inc
ret
xchg
pop
xor
push
jp
push
cmp
imul
das
pop
mov
or
pushf
sbb
pop
xor
retf
ins
retf
push
and
arpl
dec
stos
inc
sbb
dec
enter
(bad)
adc
loopne
push
ss
cmp
stos
sub
add
push
or
mov
mov
js
call
mov
outs
xor
test
bound
inc
(bad)
fwait
and
cmp
push
inc
pop
aad
mov
push
sub
aaa
inc
cmp
cld
add
or
loope
fdivr
bound
push
xchg
push
push
dec
mov
xor
inc
inc
dec
pop
sub
mov
call
clc
jbe
push
mov
ss
inc
xor
or
jb
repnz
ds
dec
retf
pop
dec
xor
inc
xor
gs
mov
mov
in
inc
push
and
xor
jb
shr
scas
pop
cmp
and
cmp
push
sub
inc
inc
imul
inc
mov
inc
xor
cli
adc
or
loopne
xor
je
or
add
test
xchg
mov
nop
and
out
dec
inc
pusha
retf
lods
and
dec
or
mov
dec
fadd
test
bound
jb
adc
dec
call
xor
xor
push
xor
lods
fwait
add
push
js
ins
outs
push
push
dec
dec
or
jo
xchg
adc
and
loopne
or
fimul
outs
jno
push
and
ins
add
push
jne
aaa
xor
add
add
and
movs
imul
push
fadd
int3
inc
dec
mov
push
lds
xor
mov
push
je
inc
jo
leave
and
hlt
into
leave
ins
pop
mov
xor
gs
push
and
dec
js
xor
lods
push
out
movs
mov
inc
dec
fimul
mov
xor
fadd
dec
dec
dec
xchg
outs
pop
cmps
xor
jo
xchg
or
xor
or
inc
inc
pop
mov
stos
inc
test
loopne
add
imul
push
mov
mov
arpl
or
mov
xor
inc
or
add
bound
mov
cli
jo
rol
push
ins
cs
cmp
arpl
nop
rol
not
cmp
and
or
js
add
aam
push
pusha
enter
mov
and
and
push
pop
push
fs
inc
pop
xor
push
or
push
and
mov
cs
arpl
xor
xor
xchg
nop
jmp
in
(bad)
loopne
and
xchg
sbb
xor
fimul
int
rcr
mov
xchg
push
pop
dec
push
test
xor
cwde
add
outs
ins
push
xlat
sub
xor
outs
repnz
lds
push
arpl
mov
mov
dec
push
mov
push
dec
arpl
xor
lods
jo
adc
jb
call
and
xor
data16
sub
jbe
inc
push
push
jb
imul
pop
xor
cdq
push
add
outs
mov
adc
cs
sbb
cmp
dec
inc
imul
and
inc
or
shr
nop
(bad)
and
xchg
leave
mov
xor
aam
push
add
pusha
xor
inc
inc
cmp
adc
add
loope
mov
jb
push
or
push
inc
jbe
mov
add
inc
dec
imul
jne
repz
cmp
jbe
push
imul
and
mov
es
scas
mov
mov
stos
stos
movs
sbb
inc
arpl
or
dec
int3
mov
inc
mov
cwde
add
or
enter
inc
sub
inc
addr16
fiadd
mov
push
dec
or
inc
dec
mov
outs
add
push
push
push
push
add
aaa
xchg
xchg
sbb
lods
dec
xchg
lock
mov
out
jae
xchg
xchg
les
rcr
dec
add
stos
sub
mov
inc
call
sbb
ja
or
int3
and
adc
fs
cmp
lods
js
pop
xor
push
push
cmp
inc
xor
mov
push
add
push
inc
aam
mov
jbe
test
jb
sbb
popf
and
ss
adc
or
xor
fwait
push
jbe
jo
loopne
push
shl
ret
ins
dec
dec
inc
hlt
xor
pop
inc
adc
xchg
add
dec
or
mov
mov
add
cmp
cwde
aam
into
cmp
je
and
dec
popa
daa
mov
xor
dec
dec
mov
fs
or
adc
into
or
inc
push
dec
jo
add
or
enter
imul
outs
jp
xchg
dec
sub
adc
inc
pop
dec
movs
push
adc
push
dec
ror
pusha
not
movs
push
(bad)
xchg
sub
loopne
ins
inc
push
mov
and
(bad)
jp
dec
retf
mov
push
inc
cli
mov
xchg
mov
dec
nop
bound
test
pop
push
xchg
or
outs
(bad)
xchg
retf
add
mov
mov
push
adc
add
xor
mov
and
je
or
mov
push
inc
dec
ret
cmp
nop
cld
mov
cmp
push
shl
pop
outs
retf
xchg
or
inc
test
shl
mov
xor
dec
push
pop
(bad)
push
js
cmp
mov
cmps
mov
inc
adc
or
add
jb
push
test
cdq
sub
sub
xchg
inc
movs
push
pop
push
outs
movs
test
mov
push
dec
dec
jns
adc
pop
jb
mov
inc
mov
jno
add
xchg
fdivr
xor
and
mov
fcomp
test
inc
js
retf
inc
xchg
mov
imul
cmps
test
or
xchg
sbb
ror
retf
push
cli
nop
adc
dec
xor
or
dec
(bad)
sbb
loopne
and
and
adc
mul
loop
outs
sbb
inc
xor
xor
fimul
xchg
or
outs
inc
adc
add
test
xor
dec
sbb
js
dec
dec
stos
retf
pop
pop
out
mov
je
enter
mov
xor
ficom
cs
ja
push
bound
test
mov
jp
xchg
inc
dec
pushf
inc
je
adc
dec
out
xor
lods
gs
inc
sub
add
loopne
cmp
mov
mov
js
cli
dec
dec
or
ja
mov
inc
popa
mov
push
sbb
jl
push
leave
sub
and
sub
aaa
dec
xor
jp
inc
lods
dec
xor
jecxz
dec
add
cmp
adc
neg
mov
push
shl
sbb
mov
enter
mov
adc
push
adc
jb
or
and
adc
or
xor
push
xor
dec
adc
mov
imul
or
jae
dec
add
rcl
xor
add
sub
pushf
pushf
xchg
pop
(bad)
push
inc
add
stos
push
cmps
sbb
popa
sbb
dec
outs
mov
xor
cwde
ret
sbb
mov
inc
add
mov
xor
scas
push
stos
adc
je
dec
inc
pop
mov
xor
mov
clc
push
mov
and
loop
outs
movs
mov
ror
mov
xchg
pushf
dec
inc
push
jbe
test
fdiv
or
cmp
or
call
adc
inc
or
push
enter
int3
sbb
jno
xchg
xor
mov
div
movs
retf
jns
cmps
or
and
cdq
inc
adc
add
sub
adc
sahf
mov
test
push
push
push
loopne
xchg
or
sbb
es
xor
or
push
dec
jbe
dec
add
in
pop
sbb
sub
push
movs
inc
push
push
test
jae
jb
adc
xor
jae
ret
scas
fisub
movs
mov
out
dec
inc
xor
sub
xor
adc
or
xor
outs
fcom
gs
xchg
cmp
push
sub
cmps
cmc
add
inc
pop
test
les
add
xor
mov
sahf
nop
and
dec
sbb
inc
xchg
dec
inc
add
sbb
push
xchg
add
test
xchg
je
or
push
bound
outs
push
inc
je
cmp
inc
inc
jo
xor
outs
sbb
ss
ja
in
sub
dec
lods
cwde
ficom
adc
or
sbb
or
cmp
add
ja
jb
ins
aam
jbe
dec
sub
adc
xor
adc
xchg
sbb
es
dec
add
dec
loopne
fadd
push
and
jns
adc
dec
pushf
mov
hlt
ret
lds
mov
cli
ja
cmps
xchg
sbb
inc
(bad)
sbb
sbb
lods
sub
dec
outs
xor
push
test
cmp
je
jae
or
je
imul
in
add
sub
movs
mov
sub
enter
mov
out
or
stos
mov
cmp
mov
xchg
pop
add
xchg
inc
xchg
xor
xchg
ins
mov
jne
or
loop
or
or
jbe
xchg
cwde
sar
lea
adc
gs
cmp
fs
lods
add
fcomp
jbe
aam
stos
inc
adc
lods
xchg
adc
xor
mov
(bad)
outs
dec
mov
inc
xor
jo
xor
and
mov
mov
xchg
xor
jb
test
int3
jbe
and
stos
xchg
xor
shr
adc
adc
nop
out
xchg
mov
pusha
push
adc
or
loopne
add
hlt
dec
mov
dec
mov
movs
jle
ins
xchg
shl
hlt
inc
or
sahf
fiadd
retf
adc
stos
mov
adc
xchg
push
push
shl
into
fiadd
push
xchg
adc
fisubr
stos
lock
mov
dec
xor
lock
mov
push
pop
sub
mov
outs
push
in
push
je
xor
xor
cmps
push
js
int
int3
test
or
aaa
(bad)
movs
and
or
nop
or
add
les
out
pop
xchg
adc
push
inc
or
add
xchg
ret
ret
sahf
enter
aam
inc
arpl
mov
je
ins
outs
inc
add
inc
dec
mov
or
sbb
xor
ins
push
mov
xchg
pusha
dec
int3
test
enter
cwde
or
jp
sbb
and
add
xor
pop
dec
add
xor
hlt
and
xor
sub
cmp
data16
pop
lods
and
rol
and
fs
dec
mov
jmp
or
cmps
popa
sub
add
popa
jno
sub
shl
fs
push
jb
sub
mov
out
or
xor
mov
mov
es
lods
sub
mov
in
dec
pop
push
sbb
pop
xchg
into
dec
push
sub
dec
mov
and
jae
es
push
sbb
data16
xor
push
xchg
mov
xor
mov
mov
xor
mov
add
or
int3
ins
les
push
push
push
mov
lea
sbb
inc
cli
ins
pop
add
in
ret
inc
pop
dec
inc
inc
clc
xor
addr16
outs
dec
mov
xor
inc
push
xchg
push
sub
inc
test
xchg
jb
jmp
cmp
ret
mov
add
sbb
mov
xchg
lock
addr16
jb
inc
add
dec
pop
dec
mov
inc
mov
push
mov
dec
and
sub
xor
inc
add
or
add
popa
dec
add
mov
xor
shl
add
jae
scas
jb
sub
cld
inc
jb
xchg
jo
inc
cmp
push
lock
cmps
add
inc
retf
leave
fs
lods
xor
or
call
xor
and
add
mov
call
es
cmp
loop
stos
mov
mov
(bad)
or
arpl
call
add
push
push
test
push
pop
push
(bad)
es
shl
loopne
outs
cmp
xor
es
and
cmp
loop
or
cwde
pushf
dec
sbb
inc
aam
xor
and
shl
dec
or
cdq
pop
adc
aad
cli
push
mov
add
xor
rol
je
sbb
add
shl
test
mov
stos
inc
inc
scas
add
(bad)
out
rol
inc
adc
rol
push
lods
lds
push
push
in
or
mov
pushf
out
add
mov
push
xchg
cmp
popa
push
rcr
push
dec
ins
mov
(bad)
xchg
test
mov
and
sub
retf
and
imul
js
adc
adc
bnd
inc
scas
mov
movs
les
(bad)
sbb
retf
sbb
inc
add
bound
stos
and
dec
nop
hlt
adc
or
inc
push
adc
add
jp
mov
jb
dec
retf
add
nop
shl
adc
test
and
mov
push
push
jb
ins
mov
adc
and
mov
push
dec
dec
lods
dec
sub
xchg
push
shl
cdq
test
or
scas
or
push
or
mov
imul
aam
and
addr16
call
jp
into
dec
popa
xchg
loopne
sub
call
cwde
dec
and
or
cmp
xchg
inc
and
xchg
push
dec
adc
fs
mov
gs
sbb
mov
ret
gs
and
test
jb
jle
dec
dec
mov
mov
sub
fild
(bad)
dec
jne
pusha
sub
pusha
data16
push
ja
mov
sbb
push
inc
mov
shl
mov
inc
adc
arpl
inc
inc
inc
mov
mov
or
jbe
sahf
loopne
outs
or
push
ror
movs
cmps
test
test
bound
cmp
je
sub
add
stos
adc
bound
nop
pop
xchg
xchg
mov
adc
mov
jbe
test
bound
xor
jb
mov
xchg
sub
or
in
sbb
and
sahf
loope
push
or
je
aam
fst
outs
and
and
pusha
xor
arpl
dec
loopne
push
mov
or
jne
inc
sub
dec
(bad)
clc
inc
retf
or
xchg
stos
and
adc
aaa
or
arpl
mov
ret
sub
js
jo
inc
jo
xchg
push
dec
push
cmps
sbb
cmp
rcr
aaa
test
mov
inc
adc
add
or
pop
xchg
into
jbe
call
inc
and
push
push
sbb
sub
and
add
cwde
mov
ins
cmp
aad
dec
lods
pop
push
int
lods
add
gs
bound
inc
addr16
movs
xor
call
mov
xchg
xchg
add
xor
ins
adc
mov
sub
mov
dec
push
xor
push
rol
rol
stos
sub
sub
xor
or
inc
jb
jle
ins
leave
sub
pop
adc
nop
dec
shr
xor
imul
(bad)
push
ins
pushf
jne
mov
xor
push
rcl
mov
bound
fucomp
push
and
ins
cmp
adc
dec
dec
xor
add
mov
xor
ins
inc
inc
or
dec
xor
or
push
sbb
ds
bound
fisub
adc
push
dec
movs
test
outs
xor
sub
aaa
xor
ret
mov
or
sbb
dec
rol
cmp
fs
inc
and
xor
and
jmp
fadd
ret
ret
sahf
push
rcl
or
inc
mov
dec
inc
loopne
sbb
fs
cmp
test
cli
push
nop
pusha
or
dec
jp
inc
sbb
gs
push
pushf
push
enter
adc
sbb
mov
je
repz
jo
mov
not
xor
push
push
inc
call
ins
dec
mov
push
pop
int3
dec
inc
int
or
push
push
mov
test
or
data16
xor
bound
or
xchg
fsubr
sahf
and
inc
pop
cs
push
dec
sub
pushw
xor
sub
ja
push
sbb
ror
pushf
sar
xor
test
add
or
pop
push
add
sbb
adc
xchg
jo
or
adc
outs
sbb
je
mov
adc
je
adc
popa
(bad)
and
mov
dec
push
jae
add
fldcw
add
inc
pop
and
lods
mov
inc
ror
push
and
xor
pop
adc
push
mov
mov
adc
push
pop
stos
dec
xor
data16
or
xor
mov
push
ss
test
nop
dec
sub
adc
data16
popa
add
push
inc
cmp
and
(bad)
jo
or
dec
sub
inc
push
test
inc
push
xor
mov
dec
jp
ret
in
inc
push
jo
rol
stos
inc
rcl
and
lods
and
es
add
sbb
cmp
out
push
push
mov
cmp
shl
inc
push
and
push
adc
cld
leave
jmp
test
xor
jne
mov
movs
cmp
and
inc
push
aaa
test
outs
arpl
or
inc
ins
and
inc
or
rol
pop
ins
fsub
sub
jb
xor
dec
mov
sbb
les
sub
push
ror
add
sahf
inc
or
mov
mov
or
rol
push
add
xor
mov
in
repnz
loop
fwait
and
aam
inc
inc
push
or
dec
es
xor
or
js
xchg
push
inc
mov
adc
inc
pop
xor
xchg
ss
cmp
scas
jo
push
je
jmp
inc
jmp
jno
push
pop
out
je
sbb
bound
push
ins
inc
jbe
xchg
fsubr
ja
jmp
push
inc
mov
and
mov
bound
sub
xor
cmp
adc
lock
dec
inc
dec
sub
adc
xchg
inc
add
xor
or
push
sar
xor
ss
inc
xor
ss
inc
outs
bound
push
xor
(bad)
jns
or
inc
test
jmp
inc
fcom
sub
and
push
adc
and
sub
out
and
jb
cwde
fdiv
push
cmp
adc
cmp
lock
dec
outs
call
xchg
mov
xchg
nop
push
push
dec
mov
adc
xchg
cld
cmp
adc
and
sub
loope
test
inc
(bad)
bound
xchg
push
sbb
test
in
push
mov
xor
push
adc
xor
mov
adc
ins
stos
mov
pushf
or
adc
gs
cmp
and
call
mov
cwde
mov
rcr
xor
pop
lar
je
lods
fisub
jno
or
mov
imul
sub
call
lods
outs
xor
xchg
and
ja
popa
inc
popa
xor
enter
and
leave
lock
cwde
sub
push
mov
add
cmps
out
xchg
pop
inc
pusha
dec
xor
xor
jb
xchg
(bad)
fwait
push
xor
jne
stos
jo
bound
inc
sbb
lods
add
imul
dec
add
sub
mov
jno
pop
ret
sbb
pop
adc
or
ss
outs
fisubr
add
test
loope
sub
ficom
inc
(bad)
adc
push
inc
es
nop
cwde
data16
in
jno
in
push
repnz
xor
inc
mov
nop
ror
scas
add
daa
sub
push
cmp
mov
imul
push
ret
add
retf
sbb
lods
inc
add
pop
rol
xor
mov
add
push
sbb
bound
scas
cli
bound
jns
adc
fwait
dec
mov
xor
leave
inc
sub
fadd
loope
mov
and
or
pusha
and
sbb
xor
cmp
dec
or
or
sbb
xchg
push
call
fcom
fs
mov
push
dec
and
or
rol
mov
jo
ficom
xchg
inc
xchg
fs
in
and
inc
add
inc
and
gs
adc
xchg
mov
inc
add
jo
js
inc
scas
inc
mov
jbe
pop
addr16
mov
mov
push
mov
ss
enter
fcom
or
je
add
cli
sub
or
or
or
pop
inc
and
sub
or
call
and
dec
jo
push
xor
dec
test
push
sub
cmp
ss
push
mov
fsubr
hlt
imul
xor
sbb
fsub
add
adc
hlt
shl
cmp
sub
ins
mov
push
imul
adc
gs
aam
out
dec
inc
xor
mov
stos
inc
xor
inc
xchg
add
adc
call
mov
movs
xor
loopne
movs
mov
and
xor
push
mov
or
and
rol
cmps
sahf
bound
dec
lods
bound
adc
xchg
and
mov
add
mov
int3
je
mov
test
pop
imul
inc
dec
xor
xor
mov
scas
xor
add
push
add
add
inc
mov
push
and
jne
(bad)
push
in
cli
and
call
push
adc
scas
add
or
nop
ins
xor
adc
mov
push
mul
sbb
fsub
jl
or
imul
cmp
dec
clc
pop
rcl
xchg
fs
sbb
push
jbe
clc
or
dec
mov
sbb
or
mov
dec
or
mov
mov
add
mov
push
push
and
and
jmp
sub
add
mov
xor
int3
push
ss
push
movs
push
push
outs
ficomp
mov
mov
jb
adc
outs
xor
push
add
pop
test
bound
and
mov
ins
push
js
ins
popa
mov
sub
aad
xor
aam
call
cmp
ss
inc
xchg
push
push
sub
adc
leave
xchg
test
retf
test
push
sahf
mov
sub
jp
inc
(bad)
push
adc
push
mov
sbb
sub
or
fsubr
adc
adc
jns
push
in
mov
hlt
add
ret
and
ret
cmp
push
adc
cmp
dec
jle
test
push
xor
js
xor
push
sbb
dec
push
leave
mov
data16
mov
(bad)
inc
pusha
mov
out
push
inc
or
inc
dec
xor
scas
test
dec
xor
push
arpl
mov
sub
push
cmps
popa
out
lods
loope
adc
mov
push
movs
adc
out
enter
(bad)
imul
inc
jae
push
test
sub
leave
add
dec
and
or
movs
push
loop
push
inc
dec
in
dec
inc
bound
and
xchg
xchg
and
sbb
mov
push
mov
adc
or
inc
pop
sub
pop
xor
or
stos
add
es
aam
ret
xchg
test
jl
ins
es
adc
data16
mov
test
ss
dec
xor
xor
add
inc
mov
mov
nop
ins
outs
call
test
sbb
sbb
jne
sbb
push
xchg
outs
xchg
and
sar
sahf
and
ret
ret
movs
push
jae
outs
inc
inc
test
sbb
ret
nop
mov
sahf
mov
adc
add
not
mov
aaa
xchg
fdiv
push
adc
inc
add
test
loope
fisubr
add
cmp
ins
imul
mov
and
jno
movs
dec
or
hlt
(bad)
jbe
jp
inc
inc
ja
and
sub
push
sub
mov
dec
ja
mov
loop
xchg
push
inc
xchg
scas
ins
dec
dec
add
test
adc
ror
jb
dec
pop
bound
js
sub
test
dec
and
ins
cwde
mov
xor
dec
add
adc
inc
in
bound
mov
mov
xor
fadd
dec
add
mov
and
xchg
bound
push
adc
push
bound
or
loopne
or
push
lds
or
loopne
or
jl
xor
push
cwde
(bad)
push
sbb
add
mov
dec
out
xchg
add
cs
je
add
(bad)
dec
les
pushf
popf
push
int3
add
push
add
push
mov
sbb
lods
shr
or
aam
mov
xor
repnz
mov
inc
mov
jo
popa
xor
cmps
add
sub
test
xchg
dec
jbe
ret
dec
fidiv
cwde
hlt
inc
pop
add
push
adc
add
sub
inc
cwde
inc
in
test
pusha
cwde
(bad)
mov
inc
cwde
jb
push
push
push
mov
popa
push
jbe
pop
jae
dec
sbb
push
pop
sbb
cmp
mov
jle
adc
dec
pop
pop
xor
push
mov
push
xchg
jae
add
push
inc
mov
adc
jmp
inc
xchg
ja
push
movs
xor
add
adc
push
test
xchg
(bad)
push
movs
or
jb
ret
adc
popa
push
add
add
and
push
xchg
push
add
out
adc
cmp
xor
pop
sub
mov
inc
fstp
adc
inc
daa
and
add
stos
or
inc
push
inc
push
mov
les
mov
inc
mov
shl
cmps
retf
add
ins
nop
adc
popa
push
ror
jb
fisub
pop
inc
es
sub
inc
enter
jo
gs
add
push
(bad)
mov
sahf
sbb
xor
test
cwde
cwde
mov
mov
popf
cmps
loopne
into
retf
push
jne
or
dec
inc
cmps
(bad)
pusha
add
pusha
xor
sbb
push
shl
loopne
ja
xor
or
and
push
jno
arpl
imul
les
bound
inc
sub
gs
push
inc
push
sub
sub
mov
xchg
sub
add
inc
inc
or
lea
jae
mov
scas
popa
inc
inc
or
pushf
adc
data16
and
nop
movs
and
arpl
push
jne
ror
xchg
or
ins
js
sbb
adc
xor
mov
cmps
inc
xor
test
xor
outs
xor
or
push
push
pop
inc
inc
aaa
js
mov
ret
and
mov
cwde
and
hlt
test
ret
jo
test
nop
sbb
int3
mov
jno
in
enter
dec
pop
ins
arpl
rcl
rol
lods
fiadd
cld
inc
push
push
jbe
loopne
sar
mov
in
adc
push
dec
xchg
movs
xchg
test
mov
jmp
or
and
dec
adc
pushf
adc
xor
inc
xor
and
fcmovbe
xchg
fcom
xor
add
int3
pop
js
pop
xchg
call
mov
(bad)
xchg
push
push
push
retf
or
imul
xchg
adc
imul
dec
push
inc
xchg
fdivr
push
dec
fwait
and
aaa
lods
ins
fidiv
sub
pop
fimul
es
mov
push
or
mov
cli
pop
dec
push
push
sub
xchg
add
and
adc
js
dec
add
pop
push
in
inc
mov
rol
dec
jne
xchg
fisub
aam
enter
xchg
dec
cmps
in
xor
nop
ins
(bad)
dec
push
dec
xchg
push
sbb
inc
xor
lods
xchg
adc
or
test
dec
push
and
outs
push
or
pop
push
aad
push
ret
imul
sbb
inc
hlt
dec
addr16
dec
idiv
xor
xor
and
pushf
cld
xor
pop
push
ja
ret
adc
pop
inc
(bad)
clc
mov
bound
sub
and
mov
pop
shl
fcom
sbb
mov
data16
jle
push
ror
push
test
bound
and
mov
retf
xor
sbb
shr
push
loopne
push
xchg
add
ins
dec
mov
dec
push
or
mov
push
dec
mov
sbb
xchg
add
sub
call
shl
adc
push
mov
xor
adc
int3
cmp
add
pop
test
push
je
and
adc
inc
pop
repnz
jno
add
jb
movs
fs
out
sbb
jo
dec
(bad)
stos
out
xchg
inc
test
or
cwde
sub
xor
or
add
cs
inc
aam
dec
mov
dec
(bad)
mov
out
ds
inc
not
push
and
inc
push
push
inc
adc
or
jb
xchg
inc
mov
and
adc
push
mov
and
push
adc
adc
push
rcl
inc
dec
dec
bound
bound
xor
aam
ret
ins
hlt
adc
xchg
adc
xchg
push
add
add
imul
mov
pop
gs
ret
inc
xor
test
aad
add
and
add
inc
inc
lods
movs
dec
mov
xor
dec
push
dec
or
push
retf
test
xor
ror
mov
mov
jmp
add
sbb
add
or
mov
aaa
ss
jno
add
push
sbb
loopne
dec
cmp
mov
xchg
mov
dec
push
call
mov
test
xor
aaa
or
mov
test
sub
jo
inc
cmps
push
xor
inc
ret
ret
or
nop
mov
adc
dec
fdiv
and
mov
push
add
xor
adc
xchg
aad
leave
loopne
push
sbb
mov
lods
scas
pushf
popa
es
xor
jo
mov
inc
test
fcom
adc
dec
push
inc
push
int3
or
push
imul
jns
cdq
sub
inc
inc
push
jo
mov
xor
jl
add
add
gs
sbb
push
sbb
xchg
mov
adc
push
jno
add
ds
and
inc
sahf
dec
sbb
dec
dec
inc
push
outs
(bad)
(bad)
adc
xchg
stos
out
je
fmul
test
xchg
push
mov
ins
xchg
fsubr
add
add
gs
push
add
mov
dec
movs
es
pop
sbb
or
cdq
or
push
call
and
inc
jo
push
inc
or
gs
dec
test
xchg
and
xchg
mov
pusha
movs
sub
inc
ror
jae
movs
fisub
inc
call
push
rcr
mov
fs
xchg
pop
push
jo
test
or
lods
call
xor
dec
sbb
sub
push
push
clc
clc
push
push
adc
ds
ret
or
pusha
mov
loope
gs
sbb
and
or
ins
loopne
aaa
pop
cmps
es
adc
ja
nop
pop
push
dec
push
and
jae
enter
adc
sub
in
rcl
pop
and
and
push
mov
popa
sbb
dec
int
push
xor
js
and
adc
xchg
push
inc
cmp
push
pop
out
push
(bad)
loopne
and
adc
or
push
mov
mov
push
pop
fiadd
outs
dec
hlt
push
jb
push
cmps
out
cli
jae
sub
pop
sub
sub
call
bound
push
cmp
push
arpl
xchg
push
xor
inc
mov
rcr
push
cmps
or
add
mov
jne
ja
xor
push
dec
push
inc
bound
dec
mov
sbb
push
cmp
mov
pop
or
repnz
add
data16
popa
push
and
sub
fcomp
mov
inc
and
sbb
or
inc
and
mov
data16
dec
aaa
mov
ss
inc
mov
push
mov
ins
les
enter
sbb
data16
mov
xor
add
xchg
and
xor
mov
pop
xor
int3
xor
xor
stos
mov
mov
sbb
inc
xchg
add
mov
rol
add
xchg
push
shl
and
fcom
dec
inc
dec
push
xor
push
pusha
in
and
sbb
test
pusha
sub
aam
mov
sub
mov
jp
or
ins
mov
dec
mov
or
jbe
mov
inc
jl
ss
fsubr
push
bound
ins
mov
enter
loopne
mov
push
or
(bad)
xchg
mov
test
in
sbb
pop
dec
les
data16
inc
sbb
not
js
rol
push
sbb
and
(bad)
inc
inc
sbb
adc
push
sbb
outs
les
stos
jbe
dec
inc
push
pop
xchg
(bad)
out
add
or
inc
clc
inc
add
add
sub
sbb
ror
test
clc
xchg
mov
inc
push
mov
in
imul
or
inc
test
ins
lods
aam
arpl
xor
cmps
xor
fs
out
fsubr
test
xor
dec
inc
add
push
or
jo
xchg
dec
jo
movs
push
mov
cmps
cmp
push
push
test
pop
test
outs
ins
pusha
and
push
cmp
jp
sbb
ins
inc
pop
xchg
call
xchg
xor
fisub
add
jb
test
push
push
inc
enter
sbb
sbb
xor
and
test
jmp
dec
les
mov
jb
in
inc
aaa
push
out
push
arpl
in
dec
pop
pop
push
in
adc
inc
in
jp
adc
dec
dec
adc
jo
xchg
je
push
test
push
fsub
ins
mov
xor
jo
and
xchg
push
mov
mov
sub
dec
dec
dec
mov
mov
daa
ss
fidivr
mov
push
shr
push
dec
push
ror
xchg
cwde
adc
add
es
es
jne
push
adc
push
shr
repnz
popa
xchg
or
bound
pop
add
cwde
dec
sub
in
and
mov
push
leave
or
pushf
je
and
mov
sub
popa
xchg
pusha
fadd
or
push
fild
mov
push
mov
aaa
dec
sub
and
ja
inc
xchg
adc
cmps
sbb
ja
add
sbb
add
xor
test
mov
dec
and
pop
mov
shl
jne
sub
push
mov
jne
arpl
push
and
xchg
inc
sub
mov
popa
outs
and
jno
push
adc
xor
fidivr
enter
jmp
add
push
stos
test
inc
jb
push
push
outs
fstp
rcr
outs
push
push
push
push
pop
movs
pop
pop
mov
xor
jb
data16
cmp
dec
stos
ins
data16
outs
addr16
push
xor
daa
outs
data16
jne
xchg
shl
jbe
jl
pop
push
add
es
ret
xchg
xchg
push
fsubr
or
ficom
dec
inc
inc
(bad)
ret
inc
push
add
mov
push
aaa
push
dec
dec
fs
and
xchg
call
dec
imul
leave
mov
add
movs
popa
and
push
and
adc
push
mov
arpl
test
push
and
mov
xor
loopne
inc
add
dec
adc
push
loop
inc
adc
inc
push
jl
xchg
inc
loopne
pop
mov
stos
mov
and
sbb
push
xchg
mov
inc
test
jp
push
loop
dec
mov
push
pop
push
push
mov
mov
in
sbb
sub
jbe
or
push
in
int3
imul
les
xor
scas
adc
xor
push
mov
xor
in
shl
push
jmp
lods
test
cli
je
imul
add
mov
stos
mov
in
ins
add
or
cmp
cld
mov
pushf
or
and
pusha
dec
inc
int
or
lea
outs
movs
sbb
(bad)
ror
daa
or
js
retf
add
push
dec
js
ss
cmp
xchg
dec
push
test
or
sbb
mov
mov
aaa
dec
mov
and
ins
mov
retf
xor
scas
ret
sub
fs
into
xchg
nop
mov
mov
dec
add
int
xor
push
test
pusha
sub
inc
ss
pop
push
popa
sbb
add
leave
clc
jmp
push
sub
and
cmp
push
xchg
adc
push
xchg
sbb
bound
dec
fs
data16
xchg
push
and
shl
adc
pop
xor
pop
inc
nop
xor
jle
add
add
add
mov
cmp
xor
xor
xchg
jl
out
push
dec
fimul
push
push
sbb
loopne
retf
mov
not
adc
push
add
retf
sub
or
push
jae
les
mov
add
inc
mov
xor
fs
pop
push
inc
add
pop
aad
push
in
dec
outs
inc
push
mov
or
xor
push
mov
cmp
or
and
push
add
jno
mov
gs
call
stos
shl
pop
mov
or
mov
xor
push
sbb
xor
add
inc
pop
mov
add
dec
inc
sbb
adc
call
mov
dec
nop
ret
and
push
adc
ror
dec
arpl
xor
push
fsub
pop
popaw
xor
jbe
popa
jo
sbb
push
push
(bad)
or
and
mov
and
mov
add
test
xor
cmp
pusha
movs
shl
dec
add
movs
pushf
adc
push
mov
or
add
push
jne
jbe
jb
ins
mov
mov
or
mov
sub
cmp
ins
into
inc
sub
xor
loop
adc
push
sub
test
sbb
jns
xchg
popa
retw
jo
inc
sbb
add
nop
jne
and
pop
push
lods
jp
push
mov
out
ins
adc
xchg
add
inc
cdq
adc
sub
push
cdq
sub
js
sub
or
inc
add
inc
(bad)
cwde
push
inc
dec
mov
loopne
or
dec
and
xor
dec
in
and
es
aam
data16
je
push
jbe
pop
cmp
sub
js
xchg
push
mov
cmp
push
push
mov
sbb
out
pop
inc
rol
sahf
push
in
ss
push
(bad)
imul
cmp
jne
cmp
inc
out
xor
dec
push
je
push
dec
jae
dec
sbb
xchg
jo
push
mov
xchg
inc
fs
mov
push
adc
adc
(bad)
mov
je
add
dec
add
rcl
add
xchg
enter
mov
xor
mov
and
jno
inc
push
mov
call
xor
es
fsubr
mov
push
fsubr
sbb
out
cmp
mov
mov
loop
ins
add
sub
aad
or
push
ins
push
mov
mov
es
adc
or
push
push
inc
push
rcr
push
push
mov
or
(bad)
lods
adc
shl
mov
aas
or
pop
adc
push
ins
mov
sub
add
sbb
fidiv
push
ret
mov
xchg
mov
inc
inc
test
dec
mov
imul
jbe
xchg
je
add
fcom
add
adc
dec
sahf
jne
add
movs
inc
inc
and
inc
loopne
add
pop
fistp
dec
push
and
push
pop
sub
outs
push
hlt
push
jno
and
push
add
js
jbe
dec
jno
imul
push
mov
inc
add
fs
and
push
xor
sbb
sub
rol
cmp
mov
cmp
(bad)
dec
cs
les
jle
jno
add
xor
and
and
cmp
stos
call
or
add
sahf
ss
arpl
sbb
sub
jmp
add
pop
adc
adc
xchg
call
outs
rcr
pushf
sub
fs
adc
sub
sub
sub
or
ins
xchg
or
je
sub
movs
sub
inc
sbb
and
je
sub
cs
jmp
push
cmp
inc
jb
mov
inc
pop
push
or
(bad)
sbb
jno
adc
and
cmp
dec
push
data16
cmp
push
mov
test
mov
xchg
sub
pop
ficom
adc
push
cmp
inc
mov
or
arpl
popa
ins
adc
into
push
dec
dec
es
add
hlt
fidivr
fnstsw
dec
(bad)
xor
inc
mov
ret
test
movs
and
data16
add
push
aam
movs
inc
inc
adc
inc
inc
inc
scas
enter
test
and
movs
or
dec
xor
or
mov
sbb
jb
mov
outs
bound
and
mov
mov
xor
push
aaa
test
push
inc
pop
rol
xchg
push
ss
push
popa
retf
test
out
ins
and
dec
dec
push
inc
inc
dec
sub
push
aam
adc
xor
pushf
mov
push
add
or
ror
fs
and
add
outs
pop
nop
add
xor
(bad)
push
xchg
mov
mov
loopne
sub
pusha
mov
pushf
rol
nop
inc
adc
dec
inc
and
dec
pop
test
xor
push
pop
aad
dec
repnz
arpl
rol
xor
bound
ret
inc
dec
dec
push
call
push
or
add
mov
push
xlat
add
jp
dec
jl
shl
aad
xchg
mov
or
adc
inc
mov
adc
push
test
pusha
xor
in
inc
xchg
pop
jp
inc
push
jb
xchg
sbb
gs
ins
ss
dec
xor
sbb
in
push
cwde
jp
stos
loopne
shr
push
push
mov
mov
(bad)
xor
jo
pop
push
pop
cmp
xor
mov
xor
xor
sub
mov
add
add
push
inc
shr
add
mov
push
inc
xor
or
pushf
sub
and
inc
and
aaa
clc
dec
popa
add
sbb
inc
inc
mov
add
int3
jno
inc
or
dec
adc
adc
pop
sub
bound
xor
ss
add
test
adc
aaa
push
dec
and
cmp
imul
div
fwait
das
mov
push
inc
je
jp
xor
xor
adc
inc
fisubr
mov
mov
fsub
mov
data16
gs
jle
push
inc
inc
dec
inc
xor
sbb
inc
or
ficom
or
sub
jno
mov
dec
test
cs
push
outs
jmp
dec
inc
xchg
add
(bad)
stos
or
cmp
dec
xor
ss
pushf
inc
xor
xchg
loope
enter
ins
jae
cwde
addr16
shl
fild
push
dec
ins
scas
dec
inc
pop
sub
call
stos
push
data16
push
jbe
xchg
ret
iret
adc
loopne
dec
adc
push
pop
push
fs
je
or
imul
xor
or
sub
xchg
hlt
mov
aad
fcom
xor
ret
hlt
cmp
test
adc
adc
pop
call
xor
push
push
adc
data16
mov
mov
or
imul
push
pop
dec
mov
inc
lods
outs
mov
test
inc
and
and
jo
fmul
xor
sbb
fisub
fidivr
inc
xor
dec
inc
push
pop
push
movs
jb
(bad)
and
adc
xor
inc
xor
adc
and
dec
sub
sub
rol
out
push
or
sub
ss
mov
pushw
inc
cwde
mov
je
jne
dec
add
call
bound
jo
aaa
mov
dec
cwde
nop
sub
add
je
inc
arpl
aad
enter
xchg
test
outs
xor
push
js
dec
xor
sbb
test
inc
push
xchg
add
add
add
lds
mov
mov
shl
jmp
imul
inc
dec
inc
and
adc
inc
bound
cmp
sub
jp
inc
js
pop
adc
mov
and
xchg
adc
pushf
add
and
mov
cmps
loopne
sub
bound
mov
test
xchg
mov
or
inc
inc
aam
add
stos
lahf
mov
xor
xor
pop
ins
or
imul
xchg
add
test
arpl
sub
xchg
add
push
inc
pop
inc
or
dec
scas
xchg
lods
sbb
push
xor
sub
or
cmp
pop
ficom
jo
ins
xchg
ins
jno
rcl
jae
inc
enter
cmp
push
sbb
and
dec
into
ins
nop
xor
cmp
fsubr
mov
and
ret
dec
cmp
push
imul
mov
and
dec
outs
mov
push
ds
mov
mov
and
jae
xor
add
mov
xor
add
adc
mov
movs
stos
or
inc
int3
jne
ret
ret
shl
and
push
jle
adc
mov
jno
inc
xor
out
(bad)
cmp
and
add
clc
dec
loopne
cmp
dec
dec
dec
or
push
and
ror
rcl
es
and
(bad)
mov
xor
and
mov
into
ret
add
in
mov
test
shl
addr16
bound
mov
xor
fidiv
ins
push
xor
test
push
push
inc
xchg
pop
popa
jne
outs
js
sub
fwait
push
nop
xchg
mov
dec
jae
cs
mov
test
add
and
dec
push
xor
sub
add
mov
push
pusha
stos
inc
jp
(bad)
stos
sbb
fimul
jo
xchg
idiv
xchg
and
loop
(bad)
ins
push
test
(bad)
dec
nop
inc
or
ds
jo
push
ficomp
xor
addr16
sbb
mov
call
push
ins
push
sub
retf
mov
int
push
js
push
inc
and
and
and
inc
jns
or
scas
jmp
add
mov
dec
cmps
jle
bound
mov
adc
jo
xor
and
xchg
(bad)
jbe
mov
test
mov
xor
and
and
push
ins
pop
cwde
mov
sbb
or
enter
dec
adc
sub
test
retf
push
loop
mov
xor
inc
cs
adc
xchg
ret
sub
push
mov
dec
xor
adc
inc
inc
pop
mov
mov
xchg
jo
pop
arpl
adc
and
adc
xor
push
inc
js
pop
sub
mov
xchg
adc
jbe
push
xchg
add
outs
test
add
add
je
rcr
jp
or
mov
dec
or
or
mov
xor
xor
retf
nop
aam
lods
imul
dec
mov
xor
int
fsub
jne
cmp
shr
test
rcl
push
mov
or
or
add
dec
pop
inc
aam
xor
push
xor
sub
scas
adc
dec
cmps
dec
mov
adc
mov
jb
pushf
inc
or
gs
lods
adc
pushf
push
xchg
push
jbe
sub
nop
les
push
push
dec
test
and
dec
cld
push
sub
add
fs
in
xchg
icebp
dec
adc
xchg
mov
cmp
in
xor
xchg
mov
imul
inc
fcomp
mov
jmp
(bad)
mov
sbb
movs
adc
mov
add
add
ret
or
sbb
out
movs
xor
les
sbb
jle
in
popa
in
es
sub
jo
xchg
jp
adc
pop
jb
addr16
push
add
cmp
enter
sub
inc
push
dec
test
outs
push
push
ds
pusha
xchg
or
ins
inc
out
dec
and
dec
dec
test
and
cmps
fild
nop
fcom
int3
dec
mov
adc
js
popf
add
dec
jl
push
ja
(bad)
sub
dec
inc
add
aam
scas
pop
dec
dec
add
pushf
xor
push
sub
xor
dec
and
and
scas
xchg
add
cld
add
inc
mov
add
push
mov
pusha
mov
sbb
mov
push
xor
inc
icebp
inc
mov
jno
inc
aam
bound
adc
push
xchg
test
jb
push
sbb
mov
adc
adc
test
xchg
jo
or
or
add
xor
and
push
es
movs
movs
and
data16
out
sub
fld
scas
sbb
test
mov
or
dec
sbb
pusha
cwde
push
js
gs
or
mov
test
stos
adc
cmp
push
jle
dec
dec
or
loopne
or
jae
and
push
inc
mov
retf
test
lea
push
in
dec
cmp
xor
xor
imul
not
push
inc
movs
nop
jne
shl
pop
dec
sub
outs
jmp
aam
dec
push
push
and
mov
mov
sub
inc
lods
push
sahf
jb
test
dec
sbb
mov
sbb
movs
adc
inc
repnz
cmps
outs
or
xor
jbe
or
push
(bad)
out
pop
xor
mov
sbb
adc
and
mov
sub
and
mov
inc
pop
dec
xchg
inc
(bad)
or
add
mov
adc
push
add
in
sub
movs
push
and
xor
cmps
in
dec
fimul
or
jl
add
push
sub
push
xchg
inc
jle
and
jb
mov
push
int
dec
or
add
push
ins
push
lods
test
pop
ins
sbb
pop
test
dec
popa
fwait
and
inc
mov
mov
mov
jne
mov
xor
push
stos
or
fisubr
dec
cs
fdiv
pop
jb
ins
sbb
add
jne
inc
mul
pushf
mov
inc
add
add
test
inc
dec
pop
xor
pop
dec
test
jo
lods
addr16
or
test
scas
ja
aad
inc
fs
cmp
jne
inc
loope
mov
add
sub
test
add
or
push
sbb
inc
jb
fisub
nop
pushf
xchg
pop
sub
loopne
dec
sbb
adc
push
mov
push
and
fidiv
bound
push
pop
js
xor
sub
ret
popf
xor
inc
mov
push
inc
ins
outs
push
hlt
push
ror
xor
dec
xchg
rol
jbe
and
xchg
ins
push
test
outs
outs
and
or
xor
sar
sub
gs
sub
add
add
push
add
push
xchg
add
inc
ins
or
inc
mov
popa
mov
dec
pop
jp
mov
cwde
xor
mov
repnz
ret
jecxz
add
mov
jne
mov
sub
imul
je
add
push
push
push
test
push
ins
int3
push
add
jp
xchg
inc
xchg
sub
jp
inc
into
push
pop
lds
push
inc
dec
push
push
mov
scas
and
push
mov
xor
cmp
or
push
sbb
inc
add
imul
dec
mov
add
push
inc
(bad)
inc
mov
pusha
out
outs
cmp
xchg
xchg
cwde
xchg
pop
(bad)
push
and
jno
dec
enter
test
xchg
dec
aaa
push
fdiv
jp
mov
mov
inc
mov
cs
inc
retf
inc
xor
inc
cmp
mov
jge
pop
inc
mov
imul
data16
xchg
test
inc
imul
and
daa
and
pop
imul
imul
sub
bound
fisub
adc
xchg
adc
shl
addr16
xor
aas
dec
push
sub
pop
and
push
jne
mov
xlat
outs
data16
or
imul
dec
pop
add
push
nop
int3
lock
in
pushf
ins
xor
pop
and
push
loopne
in
jge
outs
push
mov
jno
jae
nop
shl
repz
xor
sub
add
lock
ins
jae
mov
jne
fdivp
mov
cdq
jne
push
push
jbe
daa
mov
test
fs
test
add
mov
adc
or
pusha
ficom
jnp
add
outs
cld
push
inc
ror
pop
lahf
cmc
and
cmp
pop
mov
pop
xlat
push
gs
and
iret
dec
jne
push
ins
jb
outs
jg
jae
jae
ins
jne
mov
inc
loop
(bad)
xlat
sbb
inc
das
in
retf
addr16
sar
jns
dec
sahf
rol
push
adc
(bad)
in
mov
enter
sahf
sbb
iret
pusha
jo
shr
push
lods
mov
mov
movs
out
mov
mov
pop
mov
out
ins
inc
rcr
cdq
add
jp
mov
xchg
stos
cmp
loopne
pop
cmp
add
dec
(bad)
jb
inc
dec
cmp
mov
psubd
jo
ins
sbb
inc
pop
push
push
xor
fsubr
stc
aaa
add
or
dec
add
dec
scas
inc
out
xchg
aas
xlat
cmp
nop
iret
mov
sbb
dec
pop
fiadd
mov
jnp
cmp
daa
add
mov
cmp
xchg
mov
in
pop
and
repnz
pop
in
nop
iret
test
inc
push
nop
xchg
out
push
cmp
loopne
movs
cmp
das
xor
mov
test
jmp
inc
xchg
push
pushf
daa
aas
add
test
test
sub
pop
test
push
add
xchg
int
push
cld
push
pop
test
ss
xchg
sub
push
fs
push
dec
push
inc
xchg
cmps
fnstcw
les
sbb
push
cwde
dec
mov
mov
cld
push
pop
and
adc
cmps
and
add
add
dec
sti
pop
inc
in
test
xchg
cmps
jns
push
ror
cmp
jnp
push
out
or
sahf
out
nop
pop
add
pushf
push
add
cs
repnz
es
and
push
iret
test
cmp
dec
sahf
adc
add
aaa
adc
in
aad
sub
pop
xlat
outs
and
and
mul
fadd
sub
ss
pop
push
daa
adc
pusha
nop
jle
xchg
daa
int3
adc
data16
imul
push
or
cmp
addr16
mov
es
fadd
pusha
(bad)
push
fild
inc
mov
addr16
sahf
add
xchg
movs
scas
push
enter
fcom
cmps
xchg
mov
test
fadd
call
aad
in
add
xor
xor
dec
mov
stos
sbb
daa
fiadd
nop
xchg
mov
in
dec
mov
nop
mov
int3
add
loopne
(bad)
push
sub
pop
leave
add
inc
mov
inc
daa
or
xchg
jnp
or
outs
stos
cmps
add
add
push
pop
ss
add
in
mov
or
sbb
sbb
xlat
adc
and
je
push
dec
mov
push
aaa
mov
imul
push
pop
lods
addr16
adc
xchg
loopne
sub
outs
mov
(bad)
js
outs
clc
pop
bound
test
aaa
inc
jno
pop
imul
cs
lds
idiv
cs
and
pop
xor
adc
pop
inc
ss
pop
enter
pusha
fsub
cmp
add
mov
pop
pop
add
cs
in
add
sahf
dec
add
bound
hlt
xor
call
pusha
fdiv
repnz
jo
pusha
ja
repnz
fdiv
sbb
pop
jmp
pop
inc
mov
lahf
test
je
pop
fs
cmp
mov
pop
into
fadd
fistp
mov
daa
jl
jb
push
shr
mov
push
enter
jns
out
scas
cmp
out
repz
sub
ins
mov
pop
mov
repz
mov
jo
iret
repz
sar
mov
cmp
out
mov
and
iret
repz
push
pusha
cwde
lahf
out
cmp
clc
push
mov
fdiv
inc
mov
imul
sbb
mov
xor
call
lahf
out
push
cwde
enter
inc
stc
cmp
repz
and
sahf
cmps
push
mov
or
out
mov
js
(bad)
into
repz
inc
push
jge
pop
inc
pusha
pop
ins
push
push
gs
and
inc
xor
pop
mov
sbb
in
in
aaa
jmp
scas
jbe
jns
les
adc
in
lock
xor
shr
xor
mov
pop
xchg
xor
cmps
mov
xchg
dec
scas
movs
cmp
pop
push
mov
loopne
lahf
lock
aaa
aaa
adc
xchg
outs
adc
(bad)
fdiv
nop
aas
mov
sub
aas
dec
and
ficomp
jg
jmp
xchg
pushf
dec
dec
push
jb
inc
push
lds
jns
ins
xchg
ins
jg
mov
outs
pop
aas
nop
or
inc
(bad)
xor
pop
enter
js
pop
jns
lea
fs
sbb
mov
test
test
test
(bad)
test
mov
std
mov
inc
je
adc
xor
push
(bad)
cmp
test
pusha
cmp
or
pop
(bad)
(bad)
jnp
dec
test
jle
leave
test
jg
xchg
out
pushf
push
xchg
aas
mov
jnp
dec
push
aas
(bad)
mov
dec
xchg
pushf
in
cmp
js
pop
test
jl
dec
and
push
lods
lea
daa
nop
leave
aas
ror
das
fs
dec
jecxz
enter
ror
sti
fstp
pushf
test
jnp
mov
ss
ds
ins
mov
loop
cmp
and
pminsw
jmp
adc
call
mov
sahf
push
cld
aas
xchg
inc
enter
outs
or
or
adc
adc
scas
cmp
aas
cdq
and
push
out
ret
push
js
or
aas
pop
cmp
js
loopne
cmp
scas
ds
fsubr
out
cmp
aad
jns
imul
test
enter
xchg
daa
rol
in
mov
xchg
ja
mov
push
aaa
ds
jb
shl
push
out
dec
inc
push
scas
out
pop
cmp
fadd
shr
bound
sbb
jg
mov
mov
loopne
hlt
and
push
shr
lahf
iretw
fcmovnb
fsub
pop
or
pop
test
cmps
xchg
inc
push
div
(bad)
inc
pop
add
sbb
js
mov
fmul
push
movs
leave
inc
xor
xor
jb
adc
cmp
jae
ror
push
pop
push
repnz
ja
nop
adc
sbb
add
add
sahf
out
sahf
add
add
add
sbb
in
scas
push
cdq
in
jb
push
sub
mov
sub
das
sub
addr16
lock
push
inc
out
idiv
xor
mov
add
jb
and
imul
pusha
push
imul
aaa
mov
sahf
xchg
mov
push
push
add
imul
fsubr
leave
adc
nop
scas
lods
scas
je
inc
xor
mov
mov
jb
ror
push
xchg
push
pop
jnp
mov
pop
cmps
push
(bad)
adc
push
and
fsubr
push
and
push
imul
push
xor
inc
imul
push
stos
adc
idiv
outs
xor
inc
dec
sahf
and
inc
dec
repnz
in
sbb
adc
cmp
scas
(bad)
sbb
ins
cmp
in
pop
mov
ret
or
inc
xor
in
cs
loopne
mov
jmp
repz
aas
inc
sahf
pop
or
ins
fwait
dec
dec
jb
adc
inc
mov
out
ins
mov
cmps
int3
pop
jmp
sahf
dec
xlat
mov
sahf
inc
cmp
out
outs
cmp
(bad)
pop
pop
outs
xchg
xchg
pop
sbb
inc
mov
in
daa
shl
or
adc
inc
test
in
inc
adc
outs
ds
inc
repnz
outs
push
jb
into
rcr
out
outs
test
outs
cdq
dec
push
repnz
add
and
iret
enter
nop
mov
js
ja
and
xchg
mov
jbe
bswap
mov
in
add
adc
dec
mov
ror
xor
mov
mov
mov
cmps
adc
leave
mov
(bad)
mov
push
jo
add
repz
push
xchg
pushf
cmp
pushf
dec
and
dec
jb
cmp
and
sahf
inc
mov
mov
mov
pop
and
push
mov
mov
loopne
add
sbb
mov
xlat
rcl
iret
lmsw
mov
xchg
mov
iret
pop
das
nop
out
je
lods
push
mov
mov
lds
aam
pop
pop
test
push
daa
in
jns
jl
mov
inc
(bad)
mov
je
and
or
push
je
mov
cwde
push
add
in
pop
pop
fs
sbb
scas
cwde
inc
pushf
cmp
add
add
enter
add
push
add
fild
enter
and
mov
xor
lahf
lds
push
xchg
add
fwait
enter
das
lahf
xor
lds
movs
fist
inc
aad
mov
mov
enter
jbe
and
nop
dec
add
xchg
mov
mov
ins
mov
leave
mov
les
jb
jb
call
xchg
mov
cdq
in
pushf
inc
ja
lahf
je
mov
adc
sahf
int3
fdiv
pop
jb
or
or
xor
dec
js
cmp
mov
leave
or
pop
jb
jb
clc
popa
div
add
jns
jns
pusha
inc
push
push
pusha
mov
jns
add
aas
not
repz
pop
or
mov
pop
fbld
push
push
es
dec
sahf
out
jo
or
mov
or
cmp
sahf
neg
push
dec
outs
push
or
ins
or
or
sub
xchg
mov
xchg
xchg
(bad)
jp
icebp
or
inc
jb
scas
or
sar
jnp
fs
mov
nop
push
je
push
into
mov
xor
rol
retf
xchg
es
mov
add
pop
lock
(bad)
jnp
and
adc
(bad)
add
mov
aas
inc
push
add
push
and
inc
sub
stos
inc
inc
add
sub
pop
pop
cmp
aas
mov
mov
stos
je
inc
dec
add
retf
pop
outs
pop
aas
add
jne
jne
dec
mov
inc
pop
in
add
inc
(bad)
or
sbb
outs
cmps
jbe
jg
cmp
arpl
and
mov
xor
imul
cmps
jbe
bound
push
cs
or
jb
and
gs
or
pop
xor
dec
xor
and
dec
shl
push
push
or
push
ret
cs
repnz
lds
cmp
push
aas
jle
sbb
cmp
inc
iret
(bad)
es
pop
pop
lock
aas
add
les
and
adc
inc
dec
aas
sbb
add
in
adc
or
push
movs
sbb
add
adc
adc
inc
xchg
add
dec
in
inc
fisttp
ins
pop
adc
jl
and
mov
mov
cmps
adc
add
inc
rcl
add
or
cs
ja
push
push
hlt
scas
pop
jg
test
push
mov
pop
cs
mov
mov
mov
mov
int3
aas
adc
inc
add
jmp
add
movs
pop
fdivr
cmps
push
movntq
out
sbb
jns
or
or
or
aaa
or
in
outs
scas
adc
adc
adc
and
outs
daa
xor
in
jbe
frstor
das
push
xorps
sbb
das
ins
push
and
jbe
in
in
push
pop
and
jae
leave
in
cmp
test
xchg
outs
daa
daa
iret
sub
daa
mov
dec
mov
into
aas
xlat
sbb
xchg
data16
fstp
sbb
jae
add
push
or
into
mov
stos
mov
add
mov
push
lods
mov
iret
imul
sbb
cmp
repz
dec
dec
push
pop
out
iret
repz
push
sahf
out
sahf
xchg
cwde
pushf
mov
out
lods
mov
mov
out
(bad)
int3
fsub
cmps
stc
cmp
call
push
or
out
sahf
adc
sub
xor
cmps
pusha
sar
out
push
push
jns
out
push
jo
or
cwde
test
enter
ja
lock
pop
push
sbb
sub
jns
out
cmp
dec
push
cmp
jnp
pop
fs
pop
je
cwde
jns
ja
movs
mov
mov
ds
in
scas
cld
adc
push
sub
scas
iret
out
dec
jo
add
sti
add
dec
pop
imul
push
(bad)
xor
jmp
sbb
adc
mov
addr16
iret
dec
mov
cmps
add
movs
add
pusha
cmp
cmps
fbstp
and
mov
cld
inc
jle
(bad)
imul
test
shl
dec
daa
pop
mov
inc
mov
inc
mov
inc
(bad)
jg
iret
mov
in
call
sub
idiv
adc
push
ficomp
mov
xor
inc
cli
rcr
fsubp
stc
mov
cmp
adc
and
add
adc
and
std
mov
aaa
add
sub
sbb
add
sbb
out
and
adc
pop
and
sbb
pusha
sbb
pop
out
out
jo
js
imul
push
mov
sahf
out
adc
jns
out
adc
sahf
or
or
adc
jns
aam
fcom
out
sahf
out
sbb
push
hlt
dec
repz
pop
cld
and
and
cmp
repz
or
adc
es
test
sbb
adc
in
aam
and
inc
pop
xchg
fmul
enter
jo
das
push
cmp
inc
adc
jmp
and
mov
add
xor
nop
add
jns
dec
adc
repz
cmp
pop
ja
repz
xchg
mov
repnz
repz
jge
das
dec
ins
add
push
pop
iret
repz
js
mov
repz
dec
push
ins
mov
push
mov
daa
add
cld
retf
cmps
jmp
inc
inc
push
pushw
adc
in
sbb
add
repnz
or
ret
(bad)
nop
pslld
adc
mov
in
add
leave
sbb
into
sbb
ror
and
sahf
mov
sub
(bad)
(bad)
jmp
inc
rcr
and
sbb
add
xlat
xchg
inc
push
add
inc
stc
mov
mov
pop
cmp
cmps
iret
dec
js
inc
outs
(bad)
loopne
jmp
(bad)
(bad)
(bad)
mov
test
daa
cmp
inc
mov
popf
sti
jmp
stos
push
inc
mov
(bad)
(bad)
dec
repnz
test
pop
stos
clc
scas
adc
(bad)
inc
jmp
aam
imul
loope
jp
iret
inc
dec
cld
(bad)
jmp
(bad)
xchg
push
cmps
scas
mov
or
add
inc
in
xchg
cmp
xor
dec
cmps
in
cmp
sahf
xchg
pop
(bad)
(bad)
mov
cmp
rcl
popa
sar
mov
fsub
stos
xchg
clc
pop
cli
(bad)
push
daa
mov
sub
fwait
xchg
and
and
(bad)
push
int3
add
sti
(bad)
(bad)
fistp
jo
clc
aas
pop
fs
dec
lea
aas
ret
shr
(bad)
(bad)
call
mov
icebp
aas
ror
and
cmps
out
aas
inc
cmps
mov
ins
scas
add
aas
xor
inc
in
xchg
mov
std
std
into
popa
test
ja
stos
in
das
dec
pop
loope
les
(bad)
(bad)
(bad)
(bad)
aas
xchg
les
jne
int
mov
addr16
push
mov
xchg
aas
and
(bad)
loop
mov
cli
xor
jp
sbb
jle
push
jl
mov
(bad)
aas
xlat
out
das
lea
mov
inc
inc
aas
movs
jmp
jg
sub
jge
mov
(bad)
jmp
rcr
push
arpl
int3
and
call
cmp
jp
and
cmp
(bad)
(bad)
(bad)
dec
xchg
mov
fmul
call
cmp
test
pop
mov
jne
(bad)
(bad)
(bad)
(bad)
fld
cmp
jno
shl
(bad)
out
dec
nop
pop
cmp
fisub
xor
push
sub
call
inc
pop
mov
sub
dec
in
ds
scas
into
imul
pop
add
rcr
jge
call
mov
xchg
cmp
push
and
push
fbld
call
scas
push
xchg
jge
pop
ficomp
frstor
fmul
fisttp
inc
or
iret
add
xchg
mov
test
jb
sbb
jo
xor
lock
add
in
outs
jb
xor
scas
fcom
cmps
lahf
bound
cdq
add
imul
aas
push
cmp
out
add
int3
sbb
cmp
test
lea
mov
xchg
push
jae
pop
rol
(bad)
xchg
cmps
jo
sub
jns
fadd
push
shr
push
inc
outs
adc
mov
jne
inc
sbb
sub
inc
loopne
scas
sbb
movs
(bad)
test
out
lods
mov
shl
mov
mov
aas
inc
lds
pop
inc
sub
rcl
imul
sbb
ffree
add
(bad)
adc
sbb
mov
xchg
movs
bound
aaa
scas
adc
jne
jo
out
jbe
outs
or
dec
xchg
adc
push
out
inc
ja
(bad)
mov
(bad)
lock
xchg
idiv
xor
dec
jo
sub
mov
push
mov
daa
mov
add
test
mov
adc
ret
add
inc
push
movs
cmp
inc
movs
sub
inc
add
nop
adc
add
sti
push
add
sub
shl
add
sub
nop
inc
jns
jne
ja
mov
push
ja
jnp
ret
add
add
aas
dec
jnp
sgdtd
clc
mov
es
adc
retf
fwait
call
out
cmp
jmp
adc
mov
add
push
dec
push
push
cli
add
dec
addr16
test
adc
adc
mov
add
add
out
mov
jb
inc
sti
sub
jbe
inc
add
xor
push
mov
push
repnz
add
inc
xchg
imul
jnp
scas
je
sub
sub
scas
xor
xor
add
cmp
out
aam
push
jo
out
add
and
je
cmp
idiv
push
int
dec
cmp
push
data16
je
cmp
out
cmp
inc
and
fs
jmp
sbb
adc
dec
jbe
xchg
and
mov
and
(bad)
mov
dec
and
sbb
sub
and
jbe
sbb
pop
ins
pop
imul
xchg
mov
dec
mov
sub
iret
pop
push
add
call
add
cmps
js
or
repz
(bad)
mov
sub
dec
aas
daa
cmps
jge
or
das
xchg
hlt
push
iret
aas
(bad)
cld
pop
inc
movs
cmps
mov
mov
ret
adc
jl
mov
add
add
imul
push
arpl
jecxz
pop
and
shl
sbb
int
adc
sar
daa
push
push
dec
cmp
cmp
add
call
mov
outs
fcmovbe
inc
mov
sub
shl
jge
xor
mov
jbe
jbe
scas
and
cmps
shl
lock
repnz
loop
dec
les
add
lods
add
sub
cmp
adc
dec
xor
mov
inc
and
adc
cdq
nop
jbe
push
test
dec
push
bound
mov
adc
outs
inc
adc
add
test
out
mov
xlat
movs
push
sub
sahf
jle
inc
cmp
outs
inc
sti
push
inc
push
sub
mov
cmps
in
jl
inc
mov
and
in
jae
loope
and
mov
aas
dec
add
xor
fild
jmp
pop
mov
rcr
or
aas
aas
stos
jbe
gs
push
add
inc
jl
or
ds
mov
mov
cmps
adc
shl
or
inc
fnstcw
sahf
int
dec
stc
cli
call
ins
jmp
add
inc
gs
and
dec
mov
jg
cld
cmp
push
mov
mov
test
adc
mov
leave
pop
xchg
mov
fbstp
std
inc
fcmovne
scas
jmp
jo
push
xor
sti
push
push
xor
pop
(bad)
mov
cmp
sti
test
loopne
mov
in
lock
pop
call
(bad)
pop
dec
add
xor
lock
mov
or
add
dec
lods
adc
test
call
mov
in
jge
icebp
and
(bad)
mov
inc
int
inc
lds
pop
mov
(bad)
dec
xor
xchg
jbe
scas
add
xlat
cmps
jge
frstor
dec
or
cmp
ffree
inc
(bad)
cmp
pop
retf
inc
daa
pop
ds
cmp
mov
xchg
test
(bad)
(bad)
(bad)
fldenv
adc
aas
sub
pop
push
lods
push
int
inc
sar
cmp
and
mov
movs
xor
push
repnz
dec
or
add
aad
lock
push
fs
stc
pop
(bad)
add
or
pop
test
ds
loopne
ins
inc
popa
add
(bad)
(bad)
cmp
fs
jnp
sbb
in
jge
jg
shl
xor
pop
mov
jg
pop
mov
pop
mov
stos
jecxz
push
fidiv
mov
mov
dec
jbe
stc
add
jmp
jge
(bad)
stc
adc
(bad)
xchg
test
cld
push
iret
in
ss
add
mov
ins
std
aam
nop
(bad)
add
fstp
call
xor
xchg
mov
fisub
push
mov
jle
or
leave
imul
mov
xor
ret
mov
mov
mov
in
stos
push
xor
inc
imul
leave
mov
lea
out
or
push
rcr
push
dec
(bad)
je
pop
scas
cmp
pop
inc
jo
cmp
push
gs
js
repz
(bad)
jmp
enter
inc
dec
cmp
fwait
movs
and
shr
stc
pop
into
stos
push
fwait
jp
cmps
inc
add
iret
pop
xchg
push
test
pop
inc
mul
aas
sub
scas
pusha
sbb
stos
push
push
std
icebp
(bad)
cmps
push
mov
inc
(bad)
jg
adc
mov
xsha1
cmps
push
xor
sbb
cmps
ins
leave
mov
out
sar
add
inc
adc
jae
mov
lods
ss
jg
and
dec
mov
or
mov
mov
call
mov
ror
push
add
and
inc
push
pushf
mov
(bad)
jg
fst
mov
push
mov
shl
sub
out
(bad)
mul
or
(bad)
shr
adc
pushf
(bad)
test
mov
jg
loop
pop
fldenv
(bad)
jno
cmp
rol
in
jp
adc
xlat
aas
mov
shld
(bad)
jmp
cmp
(bad)
push
mov
sub
add
adc
jnp
cmp
push
out
aaa
cld
jmp
inc
mov
xor
adc
scas
mov
(bad)
(bad)
push
in
fnsave
jge
fldenv
add
pop
ins
adc
and
cmp
fnstcw
mov
mov
iret
(bad)
(bad)
push
mov
inc
adc
out
ss
dec
mov
ins
push
outs
mov
cmp
pop
cld
push
iret
je
lods
cdq
pop
xor
xor
pop
pop
movs
clc
push
or
pop
xchg
jmp
inc
add
cmp
inc
fldcw
cmc
out
ret
aaa
outs
movs
xchg
aaa
cld
push
dec
mov
std
pop
retf
call
sti
lock
ror
dec
xor
sar
cs
add
(bad)
sbb
mov
pop
mov
out
call
xor
cmp
pop
mov
cli
cmps
inc
inc
adc
mov
adc
and
mov
sahf
cmps
outs
clc
push
aad
ins
pop
dec
popa
rcr
or
mov
and
push
pop
jge
call
push
pop
push
mov
mov
ror
rol
imul
ficomp
xor
inc
mov
or
push
and
add
push
jns
cmp
pop
inc
ja
jg
mov
(bad)
(bad)
(bad)
push
add
adc
xor
dec
mov
mov
retf
cmp
leave
inc
dec
inc
popa
push
in
ja
mov
adc
dec
into
cmp
in
mov
inc
sbb
inc
sbb
ss
icebp
mov
or
cs
inc
jl
pop
dec
mov
cmp
push
test
ret
retf
das
or
pop
mov
inc
mov
out
cmp
out
dec
add
mov
jle
jns
adc
pop
mov
mov
mov
iret
and
cdq
fiadd
xor
and
out
sbb
lock
dec
xchg
mov
pop
mov
fs
cmp
sub
das
mov
mov
pushf
inc
jb
mov
shl
xor
sbb
jge
aaa
dec
inc
imul
push
ss
and
(bad)
mov
shl
jle
shl
rcr
adc
xchg
and
inc
sbb
imul
pop
push
mov
lods
cmp
add
or
aas
inc
sahf
fsubrp
adc
xor
out
icebp
sbb
ds
je
xchg
xor
push
jb
push
jmp
ret
ja
fnstsw
sbb
std
les
inc
sahf
test
fistp
leave
lods
cmps
cdq
(bad)
sub
mov
jb
add
lahf
icebp
int3
dec
inc
jle
add
xchg
std
cmp
pushf
sub
mov
call
adc
arpl
cmp
popa
and
div
mov
int
mov
mov
pop
scas
test
in
jl
mov
ret
add
into
adc
jl
(bad)
push
pop
pop
cli
sbb
jo
cmp
mov
ss
leave
sahf
out
fs
aas
cld
adc
and
ins
push
ret
mov
or
inc
(bad)
cld
(bad)
jg
push
xor
xchg
dec
or
and
int
mov
add
loope
mov
gs
pop
jns
mov
shr
add
fild
adc
mov
into
fimul
pop
fldcw
xchg
stos
add
ja
aas
sar
and
pop
sbb
ficom
in
jno
das
mov
(bad)
std
das
(bad)
sub
test
call
ja
sbb
test
dec
(bad)
cli
xor
push
jne
nop
push
aad
cli
retf
push
jg
mov
mov
out
mov
dec
fcmovnbe
mov
test
into
push
fxrstor
jg
inc
mov
or
test
cmp
pop
xor
jbe
push
mov
fisttp
ins
leave
daa
outs
test
call
cmp
push
xor
stos
dec
xor
(bad)
jmp
dec
and
arpl
inc
lds
stos
ss
xor
jo
outs
dec
outs
mov
inc
mov
ror
stos
pop
scas
test
ss
popf
mov
mov
adc
aaa
pop
fs
inc
dec
adc
jns
xchg
gs
adc
push
test
(bad)
jmp
push
and
div
inc
jns
retf
dec
add
cwde
fidivr
test
hlt
stos
or
int
pushf
gs
lea
or
aas
fisttp
cmp
inc
inc
mov
inc
cli
(bad)
push
push
inc
adc
push
mov
imul
xchg
pop
outs
js
mov
mov
outs
cli
test
push
es
mov
mov
(bad)
idiv
xchg
ret
push
and
cs
fnstenv
jns
jmp
outs
mov
add
xchg
sbb
mov
sub
stc
xor
lock
movs
or
out
lds
arpl
mov
inc
adc
fstp
or
ffree
pushf
pop
ret
or
fmul
push
sub
push
repnz
xor
or
(bad)
inc
add
rcr
cdq
inc
lock
fcom
fsubr
jp
dec
jne
aas
mov
or
leave
adc
jmp
test
(bad)
ficom
inc
jb
je
(bad)
pushf
test
mov
(bad)
std
loope
push
push
jle
mov
nop
ins
sub
jle
in
in
cmp
retf
stos
dec
add
or
jb
push
sub
clc
dec
repz
jp
mov
add
jmp
or
into
mov
dec
mov
sub
fidivr
das
outs
ror
lds
daa
sbb
sub
cwde
sbb
arpl
pop
xchg
xor
add
ss
cdq
ja
cli
pushf
pop
inc
push
lea
pop
xchg
stos
(bad)
in
cmp
out
push
push
mov
mov
std
pextrw
ror
test
add
lods
adc
mov
dec
ss
dec
or
mov
addr16
stc
push
lods
inc
dec
and
cmp
mov
mov
or
retf
cwde
cld
fidiv
mov
or
scas
add
and
mov
jne
popa
jge
fstp
jmp
pop
faddp
xchg
imul
inc
push
xor
pop
mov
xor
push
dec
cmp
push
in
dec
jge
jp
mov
sub
hlt
cld
inc
xlat
scas
push
jmp
imul
dec
inc
cs
push
pushf
jl
repz
sar
lea
push
in
into
sbb
mov
cmps
cmp
cmp
sub
mov
jmp
push
xchg
push
mov
cmp
adc
test
mov
adc
fscale
fcmovnb
mov
bound
sub
test
or
and
jg
cmp
dec
xchg
mov
out
pop
inc
imul
(bad)
pushf
sar
or
xor
in
adc
mov
lahf
dec
push
ja
xchg
adc
or
lock
mov
mov
out
pusha
push
sbb
jg
es
(bad)
in
adc
dec
psrld
fild
iret
push
out
ja
cdq
inc
popf
inc
pop
and
jp
mov
lahf
add
jnp
cmp
sub
xchg
sub
sub
movs
ficomp
jle
sbb
data16
(bad)
sbb
inc
out
(bad)
(bad)
mov
adc
inc
mov
mov
sbb
inc
and
push
test
or
(bad)
mov
lods
push
mov
xor
out
hlt
pop
push
and
ss
dec
push
scas
inc
addr16
mov
cs
pop
aaa
outs
fdiv
aas
sub
adc
inc
fimul
xchg
xchg
mov
idiv
jp
add
mov
mov
ins
clc
xchg
push
fst
loop
push
mov
iret
ss
mov
cmp
mov
ret
jg
push
imul
iret
fistp
cmp
out
clc
(bad)
fimul
push
mov
ret
sub
jle
add
xchg
sub
or
mov
inc
mov
dec
pop
add
ds
pop
jbe
out
mov
(bad)
clc
call
or
in
out
or
stos
mov
(bad)
mov
mov
sbb
icebp
push
push
mov
xchg
rol
dec
mov
ja
mov
dec
sub
and
test
mov
sbb
sahf
add
inc
ret
iret
xchg
push
pushf
mov
pop
mov
retf
mov
mov
mov
test
stos
push
cs
pop
data16
push
push
add
repnz
fwait
aaa
and
dec
fld
es
sub
mov
push
stos
dec
xor
cmp
stc
(bad)
adc
jecxz
call
ss
mov
jnp
dec
repnz
adc
imul
mov
pop
mov
sbb
loop
mov
fldenv
test
push
mov
lods
fdivrp
aaa
loope
mov
call
in
mov
loopne
retf
jbe
outs
stos
adc
mov
ja
dec
push
ror
(bad)
pop
inc
mov
(bad)
ja
stos
outs
jg
mov
ds
pop
mov
lds
lahf
sub
or
loopne
jmp
mov
call
in
dec
imul
imul
xchg
shr
xchg
inc
rol
fld
jmp
aad
jns
retf
pop
mov
jb
loope
pop
sti
mov
adc
(bad)
(bad)
in
ror
sti
push
mov
jmp
mov
dec
(bad)
mov
call
adc
mov
cmp
mov
pop
into
call
jae
stos
fisttp
xchg
clc
out
scas
ss
inc
data16
adc
mov
stos
mov
jp
xor
aaa
adc
aad
jo
shl
das
rcr
cmp
and
cli
mov
(bad)
xchg
add
clc
mov
add
(bad)
out
jg
es
dec
sahf
push
add
mov
cmps
cld
jns
fwait
add
mov
jl
icebp
inc
sub
dec
mov
push
lea
out
xchg
ss
aas
push
imul
jmp
ret
aas
jl
push
or
inc
jae
add
mov
mov
push
mov
add
cmp
out
fiadd
xchg
outs
clc
mov
push
dec
(bad)
sub
mov
add
pushf
enter
scas
xor
sbb
xor
add
out
loope
js
fisub
and
adc
lods
jmp
js
xchg
and
outs
rcl
adc
aaa
fld
jl
aam
mov
push
jb
test
call
sub
mov
repnz
rol
jecxz
sbb
push
dec
xlat
scas
jne
mov
cld
dec
xor
das
jb
pop
inc
cmp
out
inc
mov
xchg
push
out
scas
mov
inc
cmp
(bad)
fdivrp
pop
loope
adc
pop
mov
repnz
sub
push
push
shl
push
and
xchg
push
fbld
adc
rol
jp
inc
fld
sahf
mov
push
mov
in
and
pushf
dec
and
repnz
mov
inc
xor
xchg
or
hlt
pextrw
lea
stc
mov
sub
stos
lock
xor
dec
lds
pop
jmp
sub
ds
data16
mov
mov
es
ins
test
outs
mov
dec
es
jmp
rol
inc
call
ret
call
inc
mov
in
inc
mov
xor
inc
scas
cmp
xor
pop
das
push
hlt
dec
repnz
bound
xor
pop
dec
aaa
rcl
ror
test
jl
mov
xchg
add
adc
mov
mov
addr16
jecxz
ja
ret
cwde
xchg
jo
mov
mov
shl
pop
clc
mov
cmp
push
(bad)
mov
pop
xchg
push
pop
ss
jge
sub
(bad)
jo
push
leave
fisubr
fisttp
cmp
call
mov
nop
cmc
mov
outs
xchg
mov
daa
xor
cmp
xor
retf
or
jbe
out
and
inc
sub
jge
push
lods
or
test
call
cmp
xchg
mov
push
sahf
pop
push
push
mov
(bad)
mov
mov
rcr
ja
repnz
fcmovu
cmp
adc
imul
sbb
adc
add
(bad)
mov
call
adc
push
pop
gs
or
retf
adc
jge
jae
ret
sub
jbe
movs
rcl
fs
inc
sbb
jmp
push
jp
scas
clc
sti
mov
dec
jp
pop
aaa
push
test
push
push
bound
movs
pop
lea
add
inc
test
jg
add
sbb
std
inc
mov
sahf
push
sbb
aas
mov
pop
sbb
sar
stos
ret
pop
inc
push
push
mov
cmp
push
adc
ds
test
mov
pop
or
xor
pop
fild
std
pop
fs
xchg
rcl
xor
shr
fisubr
xor
cmp
xor
gs
jmp
popf
mov
out
ret
pop
enter
xchg
push
inc
xchg
das
stos
mov
sbb
(bad)
push
std
das
dec
mov
mov
cmp
ret
div
jle
mov
ret
or
in
xchg
push
mov
(bad)
jmp
dec
lods
arpl
rcr
aad
xchg
push
out
pop
and
stos
das
dec
mov
pop
xor
jb
ja
or
push
ror
sub
adc
add
das
movs
retf
stos
inc
push
push
lahf
mov
(bad)
and
xchg
and
inc
push
fstp
mov
movs
rsqrtps
mov
es
or
aaa
and
and
retf
inc
jmp
jne
iret
cli
xor
mov
adc
mov
std
popa
movs
in
xchg
test
arpl
dec
sub
cld
sub
lock
out
or
cmp
les
sub
es
and
push
push
fbstp
mov
test
int
movs
outs
js
and
mov
pop
out
shl
je
xor
fadd
cmp
mov
lds
fnstsw
sahf
cmp
or
push
mov
mov
aas
and
push
push
jne
mov
jns
push
inc
jb
ds
test
push
or
imul
pop
xor
js
test
jae
rcl
mov
aaa
fwait
je
xchg
fisub
jbe
pusha
mov
jg
repnz
sbb
add
shl
add
push
outs
add
sub
adc
repnz
aas
adc
aaa
je
mov
mov
je
lds
sahf
adc
sbb
push
imul
retf
sbb
cmp
ins
and
shl
or
out
mov
in
clc
(bad)
(bad)
dec
lods
cdq
sub
cmp
mov
test
(bad)
sbb
mov
xor
test
and
ins
rcr
test
imul
mov
(bad)
ins
jp
sti
mov
sub
sub
xor
xchg
(bad)
imul
jmp
jne
dec
inc
add
add
sub
sbb
(bad)
xchg
and
xchg
bound
cli
xor
adc
xchg
add
pop
push
mov
aaa
rcr
pop
into
fld
mov
mov
jbe
mov
pop
sbb
dec
xchg
call
ret
dec
rol
jbe
xchg
jno
cld
sbb
push
les
cmp
push
xor
sbb
mov
jne
shl
cmp
and
push
(bad)
ins
push
dec
in
cmp
shl
xor
mov
push
add
mov
lea
cmps
sub
sahf
leave
adc
xor
repz
cs
jnp
(bad)
mov
push
adc
push
test
cmp
inc
js
sti
pop
lods
aam
data16
sub
imul
add
cmp
jle
dec
shr
jl
ret
dec
mov
adc
ds
adc
(bad)
pop
mov
add
sub
mov
mov
mov
adc
jbe
or
int3
std
or
push
retf
sbb
(bad)
sahf
out
cmp
aad
(bad)
mov
ret
mov
stos
xor
dec
ror
ror
inc
push
xchg
jecxz
stos
mov
cli
leave
pushf
out
inc
push
mov
cld
lock
jl
mov
mov
add
imul
mov
clc
sub
or
adc
cli
scas
les
(bad)
ds
adc
pusha
push
xchg
dec
inc
imul
pop
nop
bound
or
loopne
cmp
sub
adc
loop
aas
add
or
aaa
loope
adc
jo
cmp
sbb
adc
mov
adc
out
mov
ja
aaa
pop
mov
dec
or
mov
xchg
dec
imul
or
mov
dec
mov
das
and
sahf
cmp
stos
dec
pop
add
dec
pop
push
or
std
sbb
fbld
addr16
aad
ins
pop
call
adc
es
sbb
sub
pop
push
mov
shl
out
and
mov
movs
pop
fidiv
dec
pop
or
out
gs
inc
add
mov
ds
in
adc
cld
call
sub
test
or
push
mov
inc
(bad)
mov
ds
dec
rol
and
ins
sub
sub
adc
mov
clc
pop
pop
repz
xchg
cmps
loope
push
fisub
push
cli
jmp
int
int
rcr
or
stos
call
pop
loopne
jae
fbld
cmc
cmp
mov
(bad)
adc
mov
inc
mov
inc
jmp
add
cmp
sahf
out
adc
dec
push
mov
retf
enter
jno
sub
adc
jmp
xchg
cld
int
mov
(bad)
jg
sbb
dec
dec
sbb
leave
das
outs
mov
add
lea
cdq
ss
pusha
fidivr
add
stos
into
and
icebp
pushf
(bad)
xchg
(bad)
iret
add
push
mov
lods
adc
aam
gs
shr
clc
outs
clc
add
aas
sbb
mov
or
mov
pop
xor
adc
adc
aas
pop
xor
jo
inc
and
loopne
sar
or
scas
in
je
adc
mov
push
ja
push
dec
pop
pop
test
je
mov
dec
arpl
inc
pop
data16
mov
and
inc
dec
pop
rol
cmp
int
cmp
xor
or
inc
dec
scas
or
or
sub
push
popa
jge
jl
cmp
idiv
(bad)
adc
pop
adc
aas
cs
xchg
jmp
adc
dec
mov
cmps
push
bound
or
mov
adc
add
or
lods
inc
movs
jmp
sbb
fidiv
push
out
dec
jns
and
scas
ins
cmp
push
jle
ds
test
data16
out
test
pop
pop
daa
jbe
cmp
outs
pushf
fsubr
jbe
add
pop
jo
pop
inc
mov
(bad)
cmp
push
test
in
sub
xchg
xchg
out
dec
mov
hlt
out
xor
jmp
imul
inc
push
mov
fild
lea
(bad)
idiv
jp
push
xor
xor
jp
addr16
dec
sbb
push
dec
frstor
shr
mov
call
dec
in
ret
mov
ret
push
pop
xchg
push
and
jmp
mov
sar
and
out
and
add
sar
add
or
mov
je
xor
out
dec
(bad)
ret
jb
repnz
imul
mov
or
inc
std
add
not
cli
sar
xchg
scas
int
mov
(bad)
push
adc
cmp
sbb
jmp
xchg
jb
nop
push
push
pop
imul
mov
hlt
mov
push
fiadd
dec
ins
stos
stc
jae
sbb
into
aaa
popa
mov
pop
out
push
sub
sbb
das
aam
sbb
imul
mov
add
(bad)
div
mov
add
push
mov
pop
mov
sub
jb
push
repnz
jns
cmps
mov
fs
push
mov
fldenv
add
inc
mov
add
(bad)
inc
push
dec
jnp
pop
adc
jb
mov
push
in
inc
pop
fisttp
cmps
jg
or
xchg
jo
ins
(bad)
ret
sub
pop
mov
inc
dec
aad
je
cmp
mov
mov
int
jnp
fldcw
cmp
mov
adc
fist
bound
retf
and
mov
push
add
adc
jae
xchg
adc
inc
adc
jmp
lds
aas
fldenv
mov
jbe
(bad)
inc
loope
and
rol
test
jne
ins
bound
add
dec
(bad)
cmp
inc
dec
xchg
pop
mov
mov
dec
arpl
fs
push
push
rcr
mov
dec
push
mov
mov
imul
sbb
(bad)
inc
xchg
add
fld
jnp
push
adc
daa
push
(bad)
jl
mov
inc
xchg
lock
cmp
dec
pop
jo
and
fcomip
cmp
leave
bound
push
jge
std
dec
mov
jb
add
jg
call
jmp
jbe
jmp
jl
jnp
and
sub
les
pop
cmp
add
push
jmp
pop
push
arpl
call
(bad)
in
shr
popa
ret
push
xor
femms
lahf
inc
mov
jg
je
mov
push
fldenv
push
xchg
jmp
pushf
dec
adc
add
iret
int3
ds
xchg
jecxz
pop
adc
imul
test
sub
fstp
pop
jb
(bad)
mov
inc
mov
jmp
sbb
inc
jbe
data16
clc
ja
mov
(bad)
out
add
push
arpl
or
add
das
xchg
cmp
dec
inc
arpl
call
hlt
sub
in
push
cwde
lahf
inc
es
call
cld
aas
ss
movs
sbb
xchg
repnz
fst
jmp
lea
add
aad
(bad)
push
inc
push
lea
out
fnstcw
retf
in
cli
push
sub
retf
bound
mov
mov
inc
cmp
mov
fild
cmp
stc
jle
scas
data16
in
(bad)
inc
mov
xor
pop
jb
fbld
rol
push
mov
sub
repnz
into
xchg
adc
js
xor
xor
mov
sbb
inc
rol
inc
outs
mov
xlat
mov
stos
(bad)
call
rol
push
icebp
std
jo
or
(bad)
in
fld
push
call
inc
out
sbb
cs
ds
cmp
dec
pop
mov
aaa
sbb
or
add
jae
es
repz
jno
cmp
mov
sub
adc
cmc
std
pop
mov
ret
mov
mov
xchg
fld
(bad)
(bad)
xor
pop
fldcw
xor
dec
loopne
adc
das
jp
fbstp
add
inc
fistp
movs
and
and
ja
cmp
add
inc
shl
je
cli
call
dec
and
push
pop
push
adc
inc
xchg
ja
out
xchg
lock
jp
imul
(bad)
(bad)
aas
in
inc
or
ret
(bad)
std
shufps
dec
fmulp
inc
leave
inc
aas
pop
in
retf
dec
push
or
sbb
ss
xchg
dec
or
(bad)
(bad)
fdivp
mov
jle
pop
mov
jb
call
les
or
call
(bad)
fcmovne
push
dec
and
jb
add
mov
leave
sbb
mov
ins
cli
stos
jge
jne
data16
adc
pop
mov
cwde
cmps
cli
das
(bad)
push
jg
xor
dec
leave
outs
loop
add
pop
nop
inc
sub
mov
mov
mov
mov
cmp
bound
repnz
mov
push
mov
cmp
pop
pop
mov
ds
mov
sar
out
sbb
jb
inc
mov
jae
sahf
add
or
mov
ins
add
cmc
ret
jg
(bad)
adc
cmp
dec
jno
inc
popa
and
pmullw
lahf
mov
jp
mov
loopne
lock
shl
out
xor
je
sub
inc
loope
call
aad
jb
cmp
daa
xor
add
mov
or
retf
shr
mov
sub
fbld
in
ja
icebp
adc
add
inc
out
cmp
std
jae
(bad)
out
sbb
icebp
(bad)
xchg
sar
lea
int
ja
inc
call
mov
bound
mov
push
fs
add
or
xor
stos
test
gs
neg
jg
scas
ds
aaa
push
dec
add
mov
push
mov
pop
dec
stos
outs
jmp
dec
loope
rcr
pushf
lahf
pop
inc
push
out
or
in
add
jmp
imul
cwde
mov
mov
aam
push
int
and
pop
cli
sub
jle
xchg
adc
dec
hlt
stos
shl
out
sbb
in
mov
imul
adc
adc
mov
pop
(bad)
jg
push
sbb
out
es
pop
iret
sbb
scas
(bad)
mov
cmp
nop
ret
ss
sbb
fdivr
(bad)
mov
push
sbb
es
push
mov
bound
dec
mov
push
jg
cld
call
add
jno
aaa
push
aam
xchg
imul
mov
xchg
daa
add
outs
mov
(bad)
scas
pop
push
add
sub
(bad)
(bad)
push
outs
mov
in
fnstcw
or
mov
jne
mov
rol
mov
sbb
sbb
or
cld
(bad)
jmp
inc
jno
ins
inc
mov
les
lods
pop
xor
mov
or
push
adc
ds
fbstp
mov
int
pop
ror
pop
add
test
lds
push
adc
in
mov
sbb
xor
jns
inc
push
mov
and
jle
adc
(bad)
jmp
popf
xchg
xor
push
(bad)
adc
adc
ffreep
fwait
and
fs
xchg
or
jg
ds
imul
inc
imul
push
sub
add
xchg
xor
sbb
sub
fs
and
jo
notrack
pop
int3
test
xor
cmps
sub
das
mov
cmps
mov
pop
gs
ret
sub
xor
sub
jmp
add
jmp
jle
int
test
ja
adc
add
std
or
iret
pop
adc
fild
xlat
xchg
(bad)
shl
push
add
lods
cmp
fs
sub
jle
fild
xchg
sub
inc
fsub
sub
jmp
clc
pop
fcmovb
push
cmp
push
mov
pop
adc
pop
cli
pop
jns
mov
movs
sub
xor
nop
add
or
dec
sar
adc
adc
inc
sub
fwait
movs
add
mov
call
push
stos
jg
push
outs
out
adc
jecxz
sbb
test
dec
cld
inc
push
fwait
xlat
ret
mov
das
lods
jne
or
xor
dec
fbstp
xchg
clc
jo
pop
mov
inc
push
xor
loop
lss
aas
cmc
jg
cmp
adc
out
aas
mov
rcl
pop
or
ss
ja
setne
mov
dec
es
mov
cld
dec
or
or
outs
mov
pushf
xchg
pusha
adc
or
push
rol
jecxz
nop
add
(bad)
push
mov
fiadd
inc
cmp
ret
cld
mov
pop
dec
and
pop
pop
cwde
aas
shl
jmp
jl
jns
jnp
adc
adc
dec
mov
mov
jl
cs
jb
add
adc
call
(bad)
sbb
cmp
call
and
or
adc
(bad)
jg
add
inc
jne
fst
gs
icebp
mov
jo
xchg
sub
add
(bad)
xor
sahf
and
pop
shl
aaa
scas
dec
not
lea
clc
fisttp
fist
sbb
ja
lds
or
jmp
inc
rol
or
mov
stos
ins
mov
or
and
push
dec
adc
push
std
add
dec
inc
fldcw
xor
cld
sbb
repz
fwait
sbb
push
sbb
loop
inc
loop
cli
xchg
add
xchg
mov
addr16
jg
jmp
(bad)
push
jbe
pop
mov
leave
inc
mov
adc
jg
mov
adc
mov
mov
cmc
ins
das
sar
push
cld
movs
or
mov
inc
or
dec
in
ret
xor
add
mov
xor
in
iret
test
mov
lock
inc
ud1
cmc
ret
movs
gs
pop
push
stc
mov
shl
repnz
mov
xchg
or
mov
adc
cmp
sub
push
sbb
add
push
mov
dec
push
das
mov
shr
adc
push
es
adc
cli
cmp
cs
sub
mov
mov
ins
adc
xchg
inc
push
or
mov
jnp
popa
out
push
cmp
xor
pop
sahf
mov
mov
cmp
(bad)
inc
ret
gs
shr
bnd
das
imul
bound
push
ret
xchg
test
sub
jl
not
outs
mov
mov
push
mov
or
jb
cs
inc
pop
push
adc
xor
lods
lock
inc
mov
sub
je
sub
add
das
mov
and
outs
mov
sub
adc
fisub
repz
add
test
test
jg
inc
xchg
fnsave
(bad)
ja
(bad)
std
test
in
inc
gs
mov
cmp
(bad)
retf
sbb
sar
cs
mov
and
js
ss
std
call
and
and
sbb
pop
or
jl
jmp
pop
push
fldcw
add
pushf
fld
adc
push
ss
addr16
mov
dec
adc
inc
popf
aas
add
pop
mov
xor
(bad)
or
or
mov
ds
mov
jnp
add
inc
push
pop
mov
dec
adc
push
mov
ficom
xchg
cmps
or
sbb
test
stos
int
jle
dec
lock
xchg
call
retf
mov
cld
scas
push
push
fs
mov
push
aas
stc
clc
or
adc
and
push
bound
ss
jbe
sub
xor
data16
jne
cli
jnp
add
mov
dec
sbb
(bad)
push
addr16
and
jg
add
loope
popf
add
xor
je
fldenv
cmp
mov
fcmovb
sub
pop
loop
loop
ficomp
aad
dec
pop
mov
and
ss
test
push
es
stos
adc
jne
jmp
(bad)
(bad)
cmp
mov
popa
jge
imul
mov
sub
sub
dec
jp
pusha
and
inc
mov
stos
pop
adc
faddp
xchg
adc
aaa
imul
sbb
lea
jg
and
cli
dec
pop
outs
dec
pusha
add
add
and
loop
jl
and
fbstp
ficomp
cmp
rcr
sbb
or
fist
xchg
aaa
mov
jl
fild
push
aaa
adc
xchg
(bad)
or
(bad)
mov
pop
mov
add
push
gs
pop
(bad)
inc
test
mov
inc
cld
js
imul
rcl
dec
rcr
lea
mov
sub
add
aaa
xchg
add
(bad)
popa
sbb
cs
pop
mov
jmp
fwait
iret
test
loop
adc
pop
mov
(bad)
mov
addr16
shr
dec
mov
and
or
pop
adc
pop
in
call
scas
cmp
leave
adc
add
into
outs
jmp
ja
dec
adc
jle
inc
inc
jno
inc
inc
mov
mov
dec
or
mov
mov
push
loopne
mov
mov
add
and
mov
adc
sbb
xchg
outs
push
mov
xchg
cmps
(bad)
dec
mov
sbb
bound
addr16
(bad)
scas
dec
pop
je
cmp
(bad)
test
xor
inc
sub
push
loopne
shl
adc
(bad)
push
das
or
jo
pop
(bad)
je
sbb
dec
mov
ret
or
dec
inc
das
clc
and
shr
adc
pushf
xor
jbe
jb
test
cli
outs
out
pop
or
cmp
pop
push
iret
or
mov
data16
push
mov
xchg
mov
shrd
mov
cmp
loopne
dec
out
sub
push
jecxz
xor
pop
jo
mov
add
stos
push
jle
loopne
jbe
dec
mov
jb
clc
dec
inc
fild
cmp
mov
push
les
mov
push
ficom
mov
ficomp
mov
push
jo
repz
push
call
cmp
imul
inc
xor
je
lahf
stos
jg
mov
pop
xor
xor
push
lock
or
cs
cmp
adc
cmp
aaa
push
dec
imul
aad
cmp
add
jmp
xchg
push
cli
inc
mov
cmp
test
mov
inc
in
stc
iret
and
mov
jmp
xor
push
sub
les
or
fbld
add
adc
pop
pop
loopne
jmp
pcmpgtw
adc
dec
pop
xor
add
ins
adc
mov
mov
in
pop
pop
mov
mov
test
mov
xchg
daa
xor
(bad)
fistp
mov
add
mov
inc
pop
add
adc
retf
sub
and
out
adc
repnz
fwait
mov
xor
mov
fstp
ins
jno
scas
loopne
push
xor
add
sbb
bound
mov
repz
fidivr
xchg
mov
mov
retf
jno
pop
imul
mov
mov
pop
adc
mov
jle
dec
sar
push
mov
pop
add
out
adc
adc
daa
sahf
mov
pop
es
adc
cmp
and
lahf
sub
mov
test
sahf
pop
test
aaa
call
(bad)
pop
mov
adc
pop
cld
fbld
fimul
call
ds
pop
xchg
push
xchg
cmps
mov
stos
push
xchg
cmp
mov
cmp
data16
or
outs
adc
loop
scas
setbe
mov
call
sub
jp
push
aaa
cmp
sar
out
sar
sbb
jge
and
mov
xchg
jl
mov
jg
daa
call
stos
sbb
mov
jp
outs
movs
in
mov
add
stos
icebp
call
xchg
and
inc
cmp
cmps
push
cmp
jg
mov
mov
xor
test
xor
cmps
xchg
jle
out
adc
lea
push
fidivr
(bad)
jg
add
sbb
dec
push
(bad)
xchg
push
popa
and
shr
cld
ja
mov
push
cmp
jg
jmp
mov
mov
(bad)
cld
and
sbb
lea
in
jb
or
outs
mov
mov
mov
movs
and
fadd
fistp
movs
inc
pop
ds
gs
mov
or
stos
js
or
sbb
pop
dec
sub
pop
dec
push
sub
jmp
xchg
or
push
cmp
inc
scas
adc
dec
mov
and
iret
div
adc
sbb
lahf
fisttp
jmp
imul
(bad)
(bad)
(bad)
sti
ret
mov
jno
frstor
ret
dec
push
fst
sbb
push
call
and
les
ins
adc
sub
lds
push
in
sub
ins
jle
xchg
xor
push
or
push
or
sub
push
(bad)
dec
dec
ins
pop
pushf
in
and
cmc
jb
and
push
xchg
out
sbb
dec
out
mov
inc
xchg
inc
fs
popa
sbb
dec
add
add
push
ins
pop
push
outs
and
adc
outs
adc
pusha
xchg
repnz
scas
outs
jmp
push
mov
(bad)
lea
das
xchg
leave
xchg
fwait
add
xacquire
jnp
push
xchg
and
loop
pop
jle
clc
dec
pushf
push
add
add
int
and
pop
mov
adc
imul
lock
lods
imul
dec
xlat
jmp
push
stos
(bad)
fwait
loopne
cmp
xchg
push
cmp
ss
pop
inc
(bad)
sub
push
addr16
repnz
ret
cld
rol
add
cmp
hlt
adc
mov
mov
push
and
mov
mov
mov
mov
iret
xor
(bad)
fistp
in
inc
push
(bad)
jmp
cmp
cmp
push
inc
or
fist
jg
jp
jmp
cmp
daa
test
xchg
sbb
sub
adc
(bad)
ins
fmulp
xchg
or
mov
mov
xchg
dec
mov
adc
xchg
std
mov
mov
test
punpckhdq
addr16
mov
push
mov
jo
outs
fadd
out
jb
ss
ja
inc
(bad)
lods
adc
(bad)
les
adc
and
ret
push
cld
mov
cmp
sbb
shr
inc
add
push
test
stos
mov
out
push
cld
outs
pusha
rol
test
cmp
jnp
mov
sbb
cwde
mov
adc
sti
inc
test
pop
popf
push
xchg
retf
retf
cmp
jne
loop
pop
xor
dec
pop
out
xchg
stos
push
icebp
int
and
out
push
push
aad
loop
xchg
xor
dec
xor
mov
pushf
sbb
inc
sub
rcr
cmp
jmp
int
pusha
loop
adc
or
(bad)
or
cmp
mov
mov
and
xchg
ja
dec
jle
inc
cmp
ret
mov
push
pop
aaa
jecxz
xor
xchg
jp
mov
push
push
dec
jmp
(bad)
cli
rcr
jp
retf
leave
dec
push
loopne
and
imul
mov
cmps
adc
iret
loop
lea
adc
mov
lock
fxch
sub
ja
add
xor
(bad)
popa
add
add
jge
(bad)
fidiv
mov
imul
xchg
jp
inc
or
cmp
cmp
ins
cs
xchg
test
push
push
ss
loop
inc
popf
sbb
std
and
push
popf
outs
retf
rcl
push
rcl
jg
cmps
add
mov
mov
jmp
mov
mov
xchg
test
das
call
or
adc
stc
pop
out
stos
sub
and
sbb
adc
mov
mov
in
sbb
pop
fisttp
jno
dec
(bad)
cmc
add
mov
inc
inc
mov
sub
lock
jl
cmps
mov
inc
mov
fidivr
std
cmp
xor
fstp
jp
repnz
addr16
imul
cmps
loopne
js
or
out
push
mov
mov
into
sbb
stc
(bad)
pop
(bad)
mov
mov
popf
and
(bad)
test
loopne
out
inc
repz
gs
pop
xchg
test
pop
and
cmps
movs
inc
cdq
add
ret
xchg
mov
mov
dec
push
stos
jo
or
sub
outs
dec
jbe
test
test
cld
xchg
adc
in
dec
sub
pop
mov
ds
push
jnp
pop
xlat
data16
push
inc
mov
shl
cmp
rol
ins
les
mov
xchg
push
mov
(bad)
cmps
fist
jbe
lods
cmp
arpl
or
mov
adc
sub
icebp
cdq
mov
cmp
dec
(bad)
inc
mov
adc
lahf
fisttp
jg
(bad)
ja
leave
ficom
loope
fcmovnu
daa
jbe
mul
bound
or
adc
add
sti
inc
fmul
add
ds
mov
ficom
mov
and
cli
push
popf
or
ss
rol
jnp
jle
inc
push
in
pop
test
ror
xchg
pusha
push
pop
sbb
pop
jg
xor
xchg
add
std
dec
add
mov
xchg
inc
or
rcr
jnp
or
push
call
sub
sub
pop
hlt
and
adc
dec
jo
inc
(bad)
and
ins
fwait
mov
adc
sbb
ins
pop
fstp
and
mov
dec
lea
(bad)
std
aaa
jecxz
jmp
jno
cmp
inc
xor
loope
pop
sub
sbb
movs
lock
movs
push
jge
mov
sbb
lock
mov
and
dec
and
sbb
fucomip
mov
clc
mov
pop
jmp
data16
or
xchg
test
jg
repz
dec
dec
scas
lods
cdq
sbb
cli
xchg
ja
jl
fld
in
mov
inc
pusha
cmps
jmp
in
lds
sahf
leave
push
mov
ins
stos
js
or
je
dec
inc
inc
jl
push
fbld
xor
pusha
adc
jge
sbb
add
out
inc
jge
(bad)
fcomip
cmp
dec
push
rol
call
or
aaa
in
aaa
std
dec
push
mov
mov
mov
adc
cmp
(bad)
add
cs
lds
loop
push
cmp
adc
(bad)
jae
(bad)
xor
aas
inc
jecxz
(bad)
mov
mov
or
mov
jmp
aaa
fstp
popa
jmp
cmp
xchg
cmc
scas
mov
inc
pushf
or
cmps
dec
inc
rol
in
sub
jne
adc
(bad)
pop
(bad)
into
out
ja
and
scas
outs
mov
cmp
xor
sahf
xor
sub
mov
cmp
mov
cmp
mov
dec
stos
adc
jbe
sbb
out
and
dec
mov
popf
adc
cmp
fild
and
adc
sub
(bad)
cmp
(bad)
cmc
mov
imul
not
std
adc
stos
out
pop
scas
and
ret
pop
mov
and
fmul
or
enter
add
fnstsw
popa
sti
xchg
stos
call
pusha
sar
or
inc
jns
cmc
mov
cmp
lods
push
popa
and
push
mov
es
call
sbb
not
pusha
sbb
lods
scas
xor
ins
ins
vmread
daa
out
jge
and
and
jmp
jl
push
fld
lods
push
or
mov
call
aad
ret
addr16
jnp
adc
in
out
loop
movs
pop
div
pop
imul
icebp
sub
pop
jp
mov
dec
fldcw
dec
aad
int
dec
mov
repnz
xchg
xchg
pop
test
mov
xchg
leave
loopne
inc
jle
pop
jb
cmp
stos
xor
jbe
lock
in
dec
ins
out
add
add
xchg
xor
ja
mov
fwait
and
inc
daa
or
push
add
lock
aad
mov
and
ret
ins
add
lock
mov
cmp
mov
pop
test
leave
popf
out
cmp
fnstsw
not
js
test
xor
(bad)
loopne
ficomp
aas
inc
sub
scas
or
jp
mov
(bad)
push
add
test
push
call
movs
je
jg
leave
sbb
inc
sub
adc
pop
sub
stos
add
clc
scas
inc
(bad)
nop
jne
(bad)
lahf
jb
outs
ficom
jmp
xchg
xchg
outs
and
fisub
arpl
pusha
jnp
cmp
stos
jbe
dec
fimul
rcl
cmp
cmc
retf
outs
dec
(bad)
ficom
bound
push
inc
lods
sub
mov
dec
xchg
cmp
xchg
sar
imul
add
push
sub
out
stos
adc
adc
std
das
retf
mov
sub
pop
lock
loop
pop
push
sub
lahf
test
fisubr
rol
or
repnz
dec
sbb
ins
popa
and
aad
add
(bad)
xchg
xchg
mov
lods
fisttp
loopne
scas
mov
push
inc
pushf
inc
lds
mov
(bad)
ficom
iret
pushf
stos
ret
sbb
ins
and
dec
push
or
bound
aas
dec
mov
hlt
sub
pop
adc
cmp
pusha
and
jo
sub
outs
leave
mov
or
xor
cmp
add
stos
or
fmulp
aaa
loop
outs
xor
pop
scas
xor
mov
xor
jg
sub
xchg
cmp
jg
or
jle
imul
stc
test
or
inc
stos
cli
sub
sahf
lods
add
sub
psubb
mov
cdq
ja
out
call
repnz
mov
cmp
test
aad
dec
cli
in
jns
aaa
test
movs
and
ins
push
ds
push
or
fild
dec
jb
fild
cs
paddd
add
mov
mov
lea
scas
ror
sbb
push
mov
mov
call
nop
inc
mov
retf
das
adc
sub
dec
jp
jp
mov
shl
add
aaa
outs
cmp
or
pop
jmp
sbb
test
and
mov
mov
push
xchg
stos
or
cmp
and
sub
mov
mov
lods
cmps
icebp
sub
out
repnz
stos
es
add
push
lock
pop
mov
mov
popa
cld
cmps
inc
mov
pop
push
(bad)
aad
ja
dec
popa
cdq
adc
push
jmp
mov
inc
adc
adc
mov
xchg
add
adc
out
mov
cmc
jle
dec
mov
jb
mov
push
or
dec
mov
or
ret
xlat
jne
add
clc
scas
fisub
jmp
inc
pusha
push
out
sub
pop
xchg
movs
mov
sub
call
(bad)
retf
(bad)
sbb
mov
stos
xchg
daa
cdq
out
lahf
xabort
shl
add
int3
fidivr
addr16
or
cmp
hlt
mov
cld
pmaxub
aaa
fild
xchg
push
test
(bad)
out
loopne
push
outs
cwde
jbe
aaa
push
mov
rcr
data16
out
jp
inc
cmp
push
in
outs
fsub
ret
daa
div
ins
mov
mov
and
cld
popf
push
mov
pop
sahf
inc
add
ret
cld
or
push
shl
aas
jmp
push
out
pop
jle
ror
je
mov
aas
imul
ficom
out
xchg
pop
dec
mul
pop
or
xchg
push
push
sub
sbb
push
test
cmp
and
sar
mov
mov
ja
pop
dec
scas
daa
jbe
scas
clc
cmps
out
retf
cmovb
or
int
(bad)
mov
test
aaa
jb
mov
dec
dec
sahf
and
cmp
inc
mov
test
inc
ficom
mov
push
aad
mov
cmp
stc
bswap
adc
(bad)
dec
stos
dec
mov
(bad)
(bad)
aas
mov
test
jl
mov
fadd
push
xchg
inc
push
adc
push
ficomp
push
sbb
push
or
pop
push
inc
pop
hlt
sub
sbb
out
mov
mov
mov
sub
inc
(bad)
dec
ja
out
and
mov
pop
jle
dec
jne
std
pop
or
cmp
pop
leave
sbb
or
mov
mov
sar
adc
or
add
pop
mov
add
sub
push
and
dec
and
xlat
dec
es
(bad)
out
retf
ja
jnp
loopne
fimul
push
dec
cwde
jg
imul
jg
dec
cmp
cmp
test
icebp
push
add
ds
mov
test
mov
popa
std
add
mov
arpl
sbb
repz
xchg
mov
outs
mov
dec
imul
(bad)
(bad)
pop
(bad)
sbb
test
stos
sub
mov
mov
shl
push
dec
mov
jbe
dec
dec
lods
fdiv
add
jp
inc
inc
sbb
pop
icebp
sbb
push
outs
in
es
jmp
mov
movs
fcomp
inc
or
lahf
sbb
lock
popa
mov
data16
adc
inc
push
fcmovu
mov
mov
fiadd
das
push
inc
fld
es
ss
pop
jle
(bad)
les
mov
and
int
es
pop
rcr
cmp
inc
jo
mov
xchg
loopne
or
ficomp
pop
pop
cmps
retf
lods
ins
call
jmp
into
add
push
inc
and
mov
cld
das
ret
ss
inc
std
ucomiss
cmp
test
fs
inc
push
popa
xchg
and
in
scas
in
xlat
jnp
sub
mov
(bad)
xchg
pushf
xchg
xor
loope
pop
pop
cli
pop
out
int3
push
sbb
into
(bad)
sti
rcr
jecxz
ret
mov
sahf
push
mov
cdq
sub
fiadd
cli
out
add
dec
jo
cmp
dec
inc
push
inc
ret
or
outs
pusha
jae
mov
jmp
add
add
push
push
sub
xor
clc
test
push
jmp
fwait
push
das
retf
(bad)
mov
div
loop
clc
pop
pop
cmp
retf
sub
adc
cmp
(bad)
mov
and
add
test
and
and
sub
push
popa
cld
add
gs
cmp
push
push
or
mov
mov
sbb
xchg
mov
(bad)
(bad)
inc
ss
(bad)
fsub
adc
mov
mov
or
mov
cmp
push
in
lods
pop
xor
pop
mov
inc
xchg
mov
jnp
mov
imul
std
pusha
xchg
mov
cmps
push
clc
icebp
add
(bad)
mov
sar
es
scas
movs
not
add
aaa
lea
cmp
out
dec
jns
pop
outs
fild
push
sub
jb
xchg
push
mov
adc
dec
xchg
ss
cmps
inc
push
test
fidiv
xchg
xor
pop
inc
jbe
dec
sahf
adc
sbb
xor
mov
xor
pop
push
hlt
adc
mov
add
ins
push
arpl
jb
mov
in
out
xor
add
pop
cmps
jmp
cmp
ds
data16
push
scas
shr
jmp
xchg
push
fidivr
imul
std
or
retf
or
jmp
and
sub
pop
mov
sbb
dec
jg
repnz
or
les
mov
add
outs
ins
jo
popa
ficom
out
or
jg
mov
pop
or
rcr
aas
add
xor
cmps
std
mov
loop
xor
adc
adc
inc
movs
icebp
sbb
popf
ficom
jne
and
mov
scas
(bad)
inc
dec
loopne
addr16
push
sbb
ja
out
mov
les
mov
sub
mov
push
cmp
pop
out
sahf
dec
clc
push
fisubr
inc
jmp
pop
lds
daa
mov
jbe
sbb
das
fdivr
call
sub
adc
xor
movs
pop
fidivr
icebp
lods
sahf
hlt
or
inc
in
test
fisub
add
sbb
loope
push
loope
xor
or
enter
cwde
mov
cld
aad
pop
mov
sub
xchg
fstp
dec
ror
jbe
cmps
push
or
mov
daa
inc
clc
mov
pop
jmp
movs
stos
sbb
add
inc
inc
lahf
pop
jg
test
adc
and
test
(bad)
clc
dec
inc
xor
adc
and
fldenv
mov
jb
push
cs
add
dec
adc
test
cs
jl
arpl
test
cmps
retf
sub
xchg
addr16
(bad)
pop
adc
(bad)
(bad)
(bad)
jmp
(bad)
ss
daa
or
or
movs
lock
mov
dec
inc
mov
inc
xor
aas
add
push
push
adc
cwde
xchg
xlat
int
test
pop
(bad)
xor
loop
(bad)
push
jg
cmps
mov
ins
cmp
and
pushf
mov
aas
call
inc
test
sub
push
sub
fwait
icebp
jmp
add
mov
hlt
call
mov
fnstsw
mov
(bad)
mov
or
inc
imul
adc
xchg
mov
scas
outs
sahf
scas
push
inc
ret
cmps
jbe
bound
aad
andnps
or
stc
jno
mov
adc
pop
xchg
mov
push
pop
xor
push
cmp
pop
rol
mov
repnz
sub
or
out
movs
cld
mov
push
inc
ins
leave
stos
xor
test
test
in
movs
stos
lea
adc
sub
pop
mov
movs
or
lods
fidiv
pop
test
dec
inc
imul
(bad)
fwait
out
push
dec
cmp
iret
addr16
inc
sub
arpl
ja
inc
jecxz
mov
sbb
rcr
sub
loopne
add
nop
sub
stos
clc
inc
sti
mov
cmp
dec
ja
test
lea
cmp
mov
movs
jge
shr
mov
ret
dec
push
add
mov
or
(bad)
sub
mov
scas
dec
sub
fld
pop
bound
ror
in
jge
mov
pop
cmp
outs
std
adc
aad
jl
dec
fstp
push
pop
pop
mov
gs
popa
add
(bad)
js
in
and
add
add
pop
dec
test
and
jbe
fld
sub
cli
cmp
fiadd
pop
lock
pop
ficom
sub
mov
mov
or
mov
jbe
sbb
hlt
inc
aaa
or
fnsave
ret
cli
out
push
aaa
dec
in
clc
cmp
push
sahf
push
cmp
sbb
push
(bad)
mov
or
add
cld
ins
push
mov
cs
retf
add
(bad)
inc
(bad)
mov
fsubrp
xchg
fmul
dec
jp
add
xchg
sub
dec
ss
inc
psubq
and
imul
mov
loope
rdtsc
jmp
call
push
cmps
adc
xor
adc
mov
mov
dec
out
jg
add
jg
popa
inc
and
jmp
lods
cmp
and
cmc
cli
gs
pop
add
mov
push
sbb
fisub
push
test
lahf
lock
fst
and
scas
jno
adc
outs
clc
ffreep
dec
jl
jl
daa
imul
and
sbb
mov
scas
dec
ja
hlt
dec
test
cs
aaa
ret
out
ins
les
clc
sub
addr16
div
inc
add
push
cld
das
xchg
mov
test
mov
fwait
icebp
(bad)
(bad)
(bad)
mov
les
scas
(bad)
sub
lods
stos
rol
cmp
mov
out
jno
(bad)
lahf
test
or
jbe
mov
lahf
mov
fistp
mov
mov
push
xor
mov
jne
(bad)
fwait
fwait
mov
(bad)
(bad)
cmps
(bad)
mov
(bad)
int3
xchg
and
dec
imul
(bad)
(bad)
in
(bad)
in
xchg
mov
adc
jns
fldenv
aas
inc
data16
xor
(bad)
jp
jbe
es
adc
(bad)
pushf
(bad)
call
loope
inc
push
add
shr
stos
bound
adc
adc
xchg
jmp
and
push
pop
es
jg
loopne
cmp
sbb
and
(bad)
test
(bad)
dec
aaa
push
or
xor
retf
push
outs
arpl
out
push
sub
std
aaa
into
leave
sbb
sub
push
mov
adc
xchg
dec
or
pop
jg
push
shl
mov
mov
mov
stos
adc
(bad)
(bad)
ficomp
push
popa
lods
fwait
push
dec
jmp
inc
dec
je
loop
pop
pop
xchg
and
jno
cmp
pop
stos
mov
add
(bad)
fsubr
clc
lods
xchg
jecxz
in
outs
pop
add
ja
mov
daa
sahf
push
jmp
cld
jmp
outs
outs
mov
xor
mov
lahf
xchg
push
or
inc
jae
test
test
cmp
jg
dec
arpl
push
add
jmp
rcr
pop
jp
mov
(bad)
push
popf
cmp
ins
sbb
mov
ret
nop
mov
aaa
in
push
mov
mov
bound
cmp
pop
add
cmp
adc
jmp
fs
ror
jmp
adc
or
xor
es
pop
sbb
sbb
out
dec
pop
fild
xor
pop
add
stos
sbb
pop
mov
neg
stos
push
xor
scas
sbb
cmovb
or
loop
add
mov
sahf
pop
fcom
jmp
loop
dec
inc
add
daa
mov
call
adc
pop
or
pop
call
addr16
fiadd
rol
sbb
sbb
das
mov
loop
sbb
call
or
sbb
xchg
es
xor
movs
test
adc
cmp
cmp
pop
mov
sbb
dec
sbb
in
push
mov
cdq
movs
or
aam
les
or
in
and
jle
push
dec
jg
out
outs
pop
push
mov
shl
pushf
add
rsm
mov
inc
push
mov
cmc
or
dec
dec
fbstp
cmps
push
mov
push
sbb
hlt
outs
xchg
mov
bound
out
xchg
or
(bad)
jg
or
jmp
mov
outs
sub
mov
test
jo
movsx
pop
mov
repnz
cld
push
push
mov
ds
inc
cmp
cmps
add
icebp
jmp
hlt
imul
aas
cmp
or
xor
ins
xor
cmps
in
out
push
and
das
test
pop
rcl
adc
inc
ja
pop
scas
pop
pop
mov
mov
fcmovbe
inc
or
and
cmp
lods
xchg
in
cli
aas
xchg
push
xchg
mov
cmp
and
fnstsw
or
mov
cld
(bad)
sbb
retf
mov
jle
cmps
jmp
pop
lea
jmp
mov
das
icebp
jle
jne
xchg
ja
cs
adc
call
aas
sub
leave
imul
out
pop
adc
cmp
mov
mov
mov
pushf
out
sar
sub
cmps
lods
test
ins
sub
aas
sub
cmp
pop
push
push
stc
movs
stos
jbe
xchg
loop
dec
xor
das
sbb
mov
ins
add
cs
mov
sub
add
cwde
or
jge
mov
cld
mov
pop
cmc
jb
mov
fmul
(bad)
in
inc
or
or
and
jge
inc
jg
jbe
jl
(bad)
jmp
outs
bound
push
sahf
or
dec
xor
ss
mov
sar
or
push
sbb
fsubrp
hlt
scas
xlat
jno
aaa
std
ja
fisubr
adc
jp
mov
inc
adc
and
pop
std
fwait
xchg
mov
outs
out
mov
xchg
(bad)
xchg
ja
scas
(bad)
jbe
add
test
mov
or
fist
jnp
inc
push
push
outs
mov
jbe
stos
and
mov
inc
and
jb
sub
fbld
jle
iret
(bad)
dec
ins
jle
jbe
adc
int3
push
inc
(bad)
mov
push
shl
sti
aad
lahf
mov
sbb
pushf
outs
xor
jns
sbb
je
ds
cmp
pop
(bad)
mov
fisubr
dec
mov
lea
push
or
pop
sahf
popf
sar
sbb
xlat
pop
in
(bad)
xchg
sub
cld
iret
cmp
xchg
sbb
data16
inc
fcom
ja
mov
std
addps
test
aad
pop
out
ss
ror
cmps
inc
dec
pop
fidiv
pop
and
pop
push
aaa
ror
and
(bad)
push
mov
in
sub
cmp
shl
jg
push
ja
mov
(bad)
out
dec
mov
jb
stos
cmps
int
imul
push
mov
ss
(bad)
aaa
dec
inc
or
addr16
call
jns
adc
stos
adc
jo
push
xor
loopne
ffree
xchg
loopne
cmp
adc
je
cld
mov
idiv
mov
or
mov
rol
inc
movs
mov
mov
adc
mov
push
cli
mov
scas
fstp
repnz
xchg
push
fisub
pop
xchg
fisub
and
js
xchg
(bad)
stc
xor
lahf
popf
mov
test
adc
cmp
outs
mov
ja
mov
stc
scas
call
rcr
add
jbe
shr
xlat
sub
push
cli
ror
movs
imul
xchg
pop
push
jmp
stos
out
inc
gs
call
hlt
(bad)
cmp
jbe
sbb
daa
popa
sti
sub
pop
call
fbld
xchg
and
mov
jle
mov
fisttp
mov
inc
add
mov
dec
cmp
cmp
lahf
daa
sahf
enter
or
xor
cmp
idiv
mov
inc
mov
pop
pop
sbb
inc
inc
sbb
jle
cmp
loop
mov
lock
in
jge
jns
pop
dec
imul
ret
leave
pushf
ss
into
cli
ss
popa
mov
dec
out
sbb
cmp
imul
sbb
in
mov
push
stos
xor
dec
mov
jne
mov
(bad)
dec
fucomip
cmp
daa
in
(bad)
fmul
add
inc
inc
xchg
adc
mov
shl
mov
sub
loop
fist
in
int
loope
sahf
ret
jmp
scas
xor
dec
cmp
(bad)
or
dec
xor
push
in
mov
stc
xchg
sbb
loopne
pop
mov
or
jle
or
das
inc
cmps
cli
sbb
push
mov
mov
jbe
add
xor
push
mov
pop
push
jno
push
fild
outs
push
adc
cmc
dec
in
ss
ret
call
popa
add
push
xchg
scas
mov
fisub
add
xor
or
add
pusha
fbstp
shl
dec
les
adc
push
push
cmp
or
les
mov
fs
lds
aaa
jmp
(bad)
pop
outs
mov
pop
jmp
push
fs
fist
outs
mov
mov
fdiv
mov
loop
sar
dec
cmps
fwait
shr
shr
inc
outs
jle
cmp
pop
fst
push
and
pushf
mov
mov
push
(bad)
das
sbb
mov
mov
adc
test
and
pop
push
and
shr
xchg
push
mov
inc
js
stc
call
mov
pop
mov
inc
pop
mov
and
imul
iret
sub
or
ss
xchg
adc
cmp
sahf
mov
dec
(bad)
push
xlat
push
out
pop
jns
int
dec
ret
jbe
sub
mov
in
sub
jne
cs
xchg
or
or
adc
cmps
jno
pop
jl
sub
pusha
adc
push
mov
adc
je
ficomp
adc
ficomp
stos
fbld
repnz
pop
stos
push
push
push
ret
push
add
fstp
jno
push
and
nop
fistp
mov
(bad)
in
lea
mov
sar
sub
mov
add
push
pop
push
jns
push
mov
int
cli
into
jbe
push
cmp
pop
mov
mov
out
cmp
sar
fild
mov
mov
and
adc
lock
or
ret
pop
sahf
pusha
dec
cli
jmp
or
pop
mov
retf
pcmpeqd
adc
daa
repz
lods
push
add
aas
jmp
(bad)
mov
psubw
stos
xor
push
out
dec
mov
retf
inc
adc
inc
xor
cmps
or
jnp
test
(bad)
nop
sub
aaa
mov
jle
pop
push
and
ins
imul
inc
test
outs
xchg
mov
(bad)
push
test
stos
rol
mov
lea
sbb
aas
adc
(bad)
jmp
xchg
mov
ficomp
retf
into
xchg
inc
les
std
stos
mov
out
adc
jmp
clc
dec
into
mov
mov
in
jmp
addr16
arpl
jns
add
int
jl
pop
inc
aaa
fwait
test
inc
push
retf
and
adc
rcl
push
and
in
je
xlat
ret
outs
sbb
mov
enter
mov
test
add
add
push
sbb
or
or
scas
movlhps
ins
jno
daa
mov
xchg
mov
sti
das
push
push
(bad)
ror
cwde
push
adc
out
fs
fucomp
inc
lock
(bad)
sub
test
fiadd
mov
xor
pop
add
mov
fst
test
mov
(bad)
inc
ret
mov
lahf
pushf
xchg
sbb
inc
and
mov
cmp
jle
sbb
push
sub
pop
clc
jl
das
rcr
lock
aas
jbe
out
and
movs
and
pop
outs
or
dec
test
cmp
loopne
inc
or
sub
fisubr
push
push
(bad)
mov
lahf
dec
cmp
pushf
test
mov
and
iret
das
call
test
and
cmp
dec
dec
xchg
shl
imul
xchg
repnz
cmp
and
pop
jns
jo
cmc
mov
sti
dec
add
mov
adc
inc
push
or
or
mov
(bad)
(bad)
loop
cmps
jnp
push
pop
dec
push
int
scas
pop
jecxz
test
scas
popa
adc
stos
cmc
and
xchg
jmp
fs
shl
jg
fs
jmp
sub
add
ins
or
int3
or
out
pushf
popa
push
das
add
aas
mov
ss
xlat
cdq
push
imul
inc
dec
inc
xchg
out
ins
jmp
stos
(bad)
pop
pop
mov
aas
imul
sub
or
ins
jmp
test
push
cmp
(bad)
pop
or
popa
(bad)
cmps
call
test
adc
adc
and
test
cwde
retf
dec
xchg
or
test
stos
push
ja
dec
mov
pop
cmp
jle
xor
loope
ret
(bad)
cld
or
imul
scas
sar
ret
push
es
adc
fistp
pop
xchg
and
pop
mov
mov
ins
pusha
and
cli
(bad)
call
sahf
mov
inc
mov
push
(bad)
and
div
rol
mov
lock
sub
scas
add
fst
ins
sti
pop
push
pop
mov
and
add
add
cmp
js
xchg
mov
sbb
test
push
and
add
dec
pop
inc
sub
test
imul
mov
psubusw
mov
test
(bad)
sbb
movs
scas
cmp
xchg
ss
leave
cmp
ja
rcl
mov
inc
scas
mov
in
dec
or
inc
ins
or
jmp
mov
inc
movs
push
fs
push
sbb
hlt
pushf
scas
mov
jl
push
dec
or
aas
(bad)
add
mov
cmp
ret
inc
push
fwait
into
call
adc
sub
sbb
pop
imul
mov
sub
lock
cld
mov
mov
jno
cli
pop
setp
adc
ja
add
pop
xchg
sbb
add
pop
(bad)
loope
lea
or
test
hlt
nop
inc
movs
and
jmp
add
mov
and
or
inc
jo
lds
mov
push
and
inc
dec
mov
loopne
jo
add
imul
clc
push
lock
mov
in
ins
push
gs
mov
add
cmp
outs
shl
cmps
jmp
(bad)
aad
xor
stos
jno
outs
cli
dec
adc
jno
xor
push
dec
ins
stos
dec
loopne
test
ficom
repz
mov
sbb
sub
mov
mov
sub
mov
les
inc
shl
icebp
dec
adc
pop
mov
es
or
mov
push
jg
push
cmp
jno
cmp
dec
and
ret
add
adc
repnz
pop
bound
pop
push
fnstsw
jge
mov
cmp
retf
sub
sar
dec
lahf
(bad)
sar
jne
js
adc
dec
mov
push
dec
popf
push
daa
xchg
fwait
xchg
pop
ss
test
inc
popa
cmps
out
add
mov
pop
pop
adc
xor
sub
push
gs
add
and
sub
adc
or
cmp
dec
add
jge
pop
daa
in
ficomp
jb
fnstenv
add
dec
jg
push
pop
pop
and
shl
jp
and
test
mov
jge
loopne
adc
jb
shl
inc
inc
hlt
or
mov
arpl
ja
sbb
stos
and
mov
ror
addr16
stos
ror
mov
jg
fidiv
enter
push
std
push
out
pop
popa
pushf
std
das
jp
cmp
push
jp
adc
aam
xor
es
int
out
push
and
xchg
daa
inc
imul
dec
sbb
aaa
(bad)
mov
pop
adc
pop
inc
fisub
out
inc
popa
pop
add
(bad)
dec
cmp
sub
(bad)
dec
scas
mov
xchg
jo
test
mov
dec
ret
mov
inc
dec
jbe
or
mov
loopne
adc
addr16
fsub
stos
mov
xchg
sbb
sub
sub
clc
out
xchg
pop
mov
and
movs
lods
mov
mov
xor
out
push
ret
jp
icebp
(bad)
scas
xchg
das
mov
add
rol
dec
mov
lods
adc
ret
jmp
pop
loopne
cmps
fiadd
xchg
and
inc
nop
es
add
ret
dec
xchg
mov
loop
dec
fwait
aam
dec
(bad)
lahf
(bad)
test
je
(bad)
ja
lods
sahf
mov
les
mov
mov
mov
mov
or
mov
add
repz
aam
and
sbb
jmp
fst
and
mov
imul
mov
loop
adc
imul
mov
xchg
call
xor
aas
add
pushf
adc
es
and
push
jns
adc
pop
push
add
loopne
fisubr
dec
jbe
push
jmp
push
sbb
inc
shr
jp
(bad)
mov
ins
add
or
push
clc
inc
rol
add
into
pop
pop
dec
xchg
loope
push
loopne
xor
loopne
and
fimul
sub
pusha
push
pop
jo
push
mov
(bad)
cmp
jmp
inc
push
nop
inc
jns
push
into
or
push
cwde
das
xchg
stos
rol
adc
(bad)
or
mov
sahf
inc
inc
sub
xchg
pop
es
pop
mov
ror
ds
cld
add
js
std
xchg
cmp
rol
add
into
(bad)
outs
call
push
es
inc
jge
jne
xchg
cmp
mov
inc
xchg
sahf
add
fs
dec
cmp
(bad)
or
mov
in
cs
cmp
jo
pop
stos
ret
call
inc
push
stos
add
cli
and
inc
or
loop
cmps
mov
push
sbb
cmp
add
push
inc
mov
cmp
add
test
pop
test
mov
jb
loop
ins
aas
rcl
sbb
sub
push
cmps
sbb
cmc
cmps
nop
or
loope
xor
add
popa
outs
rcl
das
lss
sbb
aaa
retf
lods
dec
cld
aaa
pop
(bad)
out
outs
int
into
xchg
jmp
inc
pop
fldcw
test
out
mov
mov
cs
les
ror
pop
adc
pushf
(bad)
bound
outs
loop
and
sar
std
pop
in
push
mov
jmp
push
inc
sbb
cmp
ret
adc
push
add
sahf
cdq
je
(bad)
and
std
add
pop
fdivrp
inc
pop
mov
jl
xchg
retf
jg
pop
in
nop
sahf
dec
mov
jle
aam
add
cdq
shl
mov
jb
add
(bad)
outs
xchg
jl
pop
fcmove
dec
add
stos
push
add
add
out
and
out
loopne
add
jae
lock
hlt
push
call
add
xor
mov
dec
js
mov
gs
mov
shr
adc
sub
xor
xchg
test
add
push
out
add
shl
jge
mov
dec
ins
pusha
clc
mov
ds
jp
imul
push
pop
dec
mov
jns
stos
xor
mov
mov
sahf
mov
ja
dec
cmp
push
mov
add
xchg
scas
mov
mov
fmul
mov
and
inc
out
push
push
jbe
(bad)
sar
sbb
into
inc
(bad)
jg
add
fnstsw
ficomp
ins
mov
mov
sar
cmovb
aaa
adc
repz
and
pop
xor
and
pushf
out
aaa
push
add
sar
cmps
xchg
das
jle
mov
stos
adc
lods
sbb
jge
(bad)
cmps
inc
mov
ficom
cs
add
leave
pop
push
add
lods
xchg
cmp
cmp
or
inc
mov
dec
sbb
dec
add
ret
dec
mov
push
xor
sbb
adc
and
cmps
scas
ret
mov
xor
cdq
push
or
mov
outs
cmp
pop
adc
or
ret
inc
rcl
or
inc
pop
sub
imul
rol
ret
dec
retf
aam
push
xchg
call
sub
shr
xor
ret
loopne
test
mov
push
imul
popa
add
cld
inc
popf
fsubr
or
shr
rol
(bad)
(bad)
(bad)
fisub
in
out
ret
cli
mov
mov
push
out
inc
sbb
push
inc
es
(bad)
call
call
paddq
pop
xchg
and
jns
dec
in
add
inc
push
xor
in
jg
das
mov
add
sub
int3
jo
loop
movs
fidivr
jle
inc
bnd
(bad)
stc
leave
les
cld
mov
sbb
xchg
push
cmp
fmul
adc
seta
mov
dec
pop
cld
xchg
pop
in
ficom
mov
xchg
xchg
inc
lahf
(bad)
sar
(bad)
(bad)
(bad)
jnp
repnz
lods
ret
jbe
mov
push
mov
sub
push
fist
sets
les
jmp
sub
test
adc
in
jg
lahf
(bad)
sub
push
mov
mov
cmp
jmp
pop
adc
mov
dec
sbb
call
jle
lods
bound
or
add
movs
mov
ficom
neg
jb
mov
push
xchg
jmp
mov
jnp
push
or
sbb
gs
loope
les
push
popa
in
(bad)
aaa
push
cmp
int
(bad)
sub
push
xor
lock
xchg
push
scas
or
add
or
aaa
sub
cmp
stos
sub
mov
into
(bad)
pop
inc
ja
test
stos
mov
add
cmps
jmp
dec
add
push
add
cmc
xor
xchg
dec
sahf
mov
js
push
xor
cmps
mov
or
dec
add
mov
retf
xor
xor
xor
sub
lahf
mov
xchg
retf
leave
ja
push
mov
mov
cmp
mov
loop
sub
fadd
mov
xchg
pop
stos
out
ins
dec
mov
push
jp
add
push
jb
sub
(bad)
lods
test
(bad)
fs
push
cli
jnp
or
ror
retf
and
outs
jbe
dec
pop
jo
inc
imul
jg
sub
push
dec
mov
add
pop
adc
dec
lahf
es
xor
xchg
adc
(bad)
mov
repz
dec
xor
sub
push
and
hlt
xchg
ss
push
or
sub
jnp
ins
push
(bad)
inc
test
pop
mov
xor
ins
repz
jbe
add
mov
mov
xchg
mov
adc
mov
rcr
add
aad
mov
cmp
or
cmps
movs
jo
std
inc
outs
popf
cmp
(bad)
loopne
loop
or
mov
pop
sbb
bound
mov
cmp
xchg
and
sbb
pop
pop
dec
es
dec
out
sahf
std
jg
push
xor
hlt
cmp
dec
out
lahf
repnz
out
push
clc
(bad)
push
data16
xor
or
lods
shr
loope
cld
call
cmp
test
mov
inc
daa
call
pop
sbb
jp
std
(bad)
out
es
nop
repz
inc
pop
jge
adc
add
test
mov
addr16
jp
retf
(bad)
jnp
cmp
fnstenv
out
dec
ror
push
std
out
pushf
repnz
jmp
sti
and
fldenv
xor
mov
jg
pop
jno
push
cmc
(bad)
lods
sbb
(bad)
mov
push
pop
loopne
stos
push
in
das
aaa
cmp
inc
adc
lahf
ins
clc
in
iret
lods
mov
daa
cmp
in
xlat
pop
lock
mov
mov
jg
aad
mov
cmp
add
mov
ds
scas
mov
imul
repz
inc
and
(bad)
push
jmp
ror
mov
mov
xor
(bad)
loopne
and
daa
mov
mov
call
cld
dec
loopne
loope
mov
sbb
pushf
pop
xor
pop
add
mov
ret
xor
dec
call
inc
cmps
div
std
or
mov
or
sub
je
sbb
inc
clc
call
mov
mov
shl
and
cmp
sbb
shr
pop
xor
popa
sub
xchg
cmp
mov
pop
add
jecxz
mov
in
outs
xor
or
add
jle
in
cdq
(bad)
mov
xchg
xchg
test
xchg
and
mov
test
jns
lds
fcom
mov
cli
mov
cli
mov
cmp
aaa
popa
push
adc
and
scas
mov
(bad)
popf
pushf
push
inc
push
jmp
ins
fistp
(bad)
mov
movs
aam
inc
adc
cmp
add
fnsave
daa
rol
inc
jmp
arpl
fs
call
pop
scas
sbb
adc
mov
arpl
retf
pop
inc
out
out
mov
mov
sub
test
sbb
cmp
hlt
jp
push
add
mov
std
mov
fmulp
retf
fstp
mov
cmp
repnz
or
push
not
cmp
pop
push
ret
sub
jp
add
out
mov
fs
push
int
cld
scas
add
das
pop
push
mov
stos
pushf
inc
add
fidiv
and
sahf
loopne
js
ds
(bad)
(bad)
aad
nop
dec
and
add
or
dec
imul
mov
jmp
inc
mov
add
or
loopne
jle
stos
pop
ja
mov
aaa
inc
mov
mov
stc
into
aas
adc
add
nop
mov
sar
mov
inc
push
outs
test
push
lahf
mov
dec
ffreep
push
das
sahf
add
loope
dec
pop
mov
test
sbb
ins
sub
sbb
push
in
push
xor
adc
pop
aaa
mov
add
adc
add
and
(bad)
push
sbb
push
or
xchg
mov
add
sub
and
pop
push
sbb
out
ds
loop
cmp
add
(bad)
push
dec
shr
add
pop
jbe
sbb
dec
clc
dec
inc
pusha
stc
iret
outs
dec
imul
push
stos
in
test
ss
je
pop
xchg
cmps
push
jmp
mov
sbb
push
int3
scas
mov
cmc
mov
(bad)
jmp
inc
adc
push
cld
jg
call
cmp
xor
inc
inc
fmul
dec
or
outs
loopne
aaa
adc
sbb
jg
loopne
sub
pop
data16
test
inc
sub
inc
stos
inc
movs
pop
(bad)
pop
call
adc
mov
push
retf
dec
jb
mov
(bad)
(bad)
(bad)
fist
fsubr
jnp
rcl
sub
arpl
xchg
adc
lods
pop
add
mov
cmc
aaa
aaa
aaa
sbb
sbb
dec
adc
dec
push
imul
scas
arpl
xor
test
push
ds
inc
out
mov
push
jmp
mov
pop
mov
or
push
mov
ss
push
xchg
xchg
xchg
out
scas
rcl
and
arpl
adc
mov
mov
xor
mov
push
sbb
test
adc
outs
repnz
push
adc
jmp
fiadd
int
ds
jno
and
loop
xor
add
jo
pop
sahf
lea
stos
adc
inc
outs
popf
dec
scas
inc
shr
mov
nop
bound
retf
mov
inc
pusha
mov
xchg
add
xchg
jp
xor
add
loope
add
mov
mul
and
outs
sti
push
or
jmp
cmp
fmul
push
pop
aaa
out
mul
(bad)
push
scas
cmps
pop
scas
xchg
fisub
into
popf
dec
inc
ror
loope
lahf
pop
gs
mov
cmp
add
ret
lods
jl
jge
mov
call
pop
push
ds
test
inc
fcmovu
outs
call
ja
xor
jbe
(bad)
adc
or
ret
push
call
xor
mov
push
cld
pop
(bad)
sub
push
pop
ror
dec
pop
dec
(bad)
or
adc
push
jg
sbb
inc
(bad)
movs
adc
(bad)
fnstenv
test
and
hlt
xor
xadd
outs
add
push
jmp
iret
adc
xchg
pop
inc
jo
sub
add
push
pop
call
outs
cmp
pop
inc
and
les
inc
pusha
or
push
rol
ror
(bad)
dec
pop
mov
loope
loopne
(bad)
sbb
bound
and
mov
adc
(bad)
cmp
rol
popf
xlat
inc
test
add
xchg
sahf
sti
inc
test
cmp
add
call
mov
cmp
cmp
dec
sbb
sbb
inc
jno
fimul
or
bound
hlt
push
cs
inc
rcl
dec
rol
or
adc
mov
out
xchg
jmp
and
jmp
or
jbe
push
cmp
push
es
add
test
add
fdivr
lds
push
mov
pusha
or
jbe
(bad)
(bad)
(bad)
jg
std
pop
(bad)
aaa
push
pop
inc
jns
pop
daa
sbb
xor
cmp
add
inc
adc
test
jg
clc
pop
pop
sub
mov
jle
sti
inc
fndisi(8087
addr16
xchg
outs
(bad)
jb
loopne
xor
dec
sbb
mov
xchg
mov
popa
in
es
daa
jmp
xor
add
or
jbe
or
add
push
dec
sbb
adc
rcl
push
shl
push
in
dec
popa
(bad)
pop
mov
push
sbb
lock
stos
inc
jns
pop
push
sbb
mov
jl
sbb
shl
das
and
rcr
sbb
jnp
inc
push
pop
xchg
popa
mov
in
jae
xchg
adc
lahf
repnz
ss
fwait
adc
pop
mov
fdiv
lahf
mov
sar
aaa
xor
retf
shr
into
cdq
mov
mov
mov
push
sbb
repz
bound
add
jge
bound
mov
adc
sbb
jmp
mov
dec
add
xor
enter
aas
xchg
adc
mov
inc
pop
xchg
es
cs
out
sub
je
add
sub
sbb
pop
add
ror
fld
adc
xor
mov
jne
inc
xor
into
imul
cmps
aas
pop
int3
fsubr
xchg
sbb
cwde
xchg
pop
cmp
sahf
retf
mov
mov
out
mov
rol
loop
push
add
jbe
inc
or
sbb
cld
ffreep
or
and
mov
push
std
pop
shl
dec
aas
xor
sub
add
pop
add
push
sub
jb
mov
dec
cmp
push
add
inc
add
inc
(bad)
je
add
push
imul
leave
dec
out
pop
gs
fisubr
pusha
frstor
inc
xchg
mov
stos
in
(bad)
mov
mov
add
lea
adc
push
ficom
and
pop
mov
rcl
xchg
into
jl
mov
imul
aam
and
mov
or
ins
pcmpeqb
dec
sub
outs
fild
jle
adc
add
push
sub
pop
adc
mov
js
arpl
jb
push
fisubr
push
push
loope
and
mov
(bad)
add
or
and
adc
scas
aas
dec
add
adc
fbld
add
pushf
mov
(bad)
fbld
push
cmps
nop
mov
mov
dec
xchg
mov
cmp
pop
mov
xor
mov
add
(bad)
and
fdiv
stos
in
push
jg
(bad)
out
(bad)
stc
adc
adc
outs
and
push
ds
nop
mov
mov
or
das
(bad)
pop
push
scas
push
mov
addr16
pushf
hlt
inc
cmp
stos
dec
push
fmul
loope
call
mov
inc
inc
(bad)
je
mov
pop
or
aas
mov
adc
xchg
sbb
xor
cmp
adc
and
or
xor
mov
push
jle
fist
mov
stos
mov
mov
icebp
rcr
sbb
ss
pusha
add
pop
inc
lds
dec
mov
out
inc
outs
leave
lds
jae
clc
aad
or
push
add
stos
cmp
lea
call
adc
ret
xor
add
ret
cli
push
out
popa
fidivr
mov
int3
inc
adc
sbb
or
adc
mov
pop
adc
jle
js
outs
push
imul
call
sbb
xchg
or
call
pop
call
stc
jle
sbb
add
adc
xor
cs
pop
das
fdiv
push
xor
movs
(bad)
lea
fcmovb
push
and
scas
push
sbb
xchg
add
xlat
push
js
add
pop
cld
mov
sbb
lahf
iret
sub
or
aas
sbb
sbb
xor
clc
mov
ret
imul
pop
std
stos
mov
push
and
mov
retf
clc
retf
cli
pop
jl
lds
xor
xor
aas
push
dec
mov
mov
mov
sub
jl
sub
cmc
jo
jno
rcr
add
(bad)
cs
mov
sahf
xchg
xor
xor
ins
mov
in
ret
call
icebp
into
adc
fisub
and
dec
mov
or
sar
mov
mov
mov
mov
push
and
push
pop
pop
pop
arpl
imul
cmps
push
mov
arpl
mov
outs
mov
aam
push
pop
jg
out
mul
jbe
mov
sbb
mov
retf
inc
xor
push
mov
cmp
push
mov
mov
add
loopne
push
or
mov
add
adc
ins
(bad)
ss
dec
scas
adc
jmp
lods
pop
fdivrp
mov
push
inc
test
ss
scas
push
sub
push
mov
js
ret
and
inc
sbb
daa
jno
mov
pop
(bad)
pusha
push
mov
stos
(bad)
call
bnd
inc
sar
mov
push
lock
jb
xor
mov
stos
push
cmps
or
clc
push
jbe
mov
inc
mov
cli
inc
push
ins
jo
xchg
xor
mov
fs
pop
xchg
mov
push
adc
fistp
xor
icebp
stos
aam
push
xchg
out
and
imul
hlt
imul
mov
popf
pause
fwait
dec
(bad)
test
add
(bad)
fldenv
xor
retf
ds
mov
jle
fwait
stos
(bad)
xor
addr16
push
add
xor
add
mov
call
jecxz
into
mov
enter
mov
or
call
pushf
add
dec
or
cmc
fwait
test
retf
cmps
dec
std
pop
mov
dec
sbb
jg
test
daa
dec
in
dec
pop
fidivr
sub
jmp
push
shl
es
popf
dec
ds
in
(bad)
lahf
and
lea
sub
jb
push
gs
out
cmp
dec
mov
dec
call
mov
sti
loope
mov
retf
or
push
outs
pop
or
or
test
push
nop
xchg
aaa
and
fimul
add
pop
pop
outs
dec
or
sub
ret
repnz
repz
(bad)
sbb
mov
inc
out
inc
add
(bad)
aaa
ja
or
(bad)
in
lock
test
add
lds
push
stc
ror
push
lds
cwde
inc
mov
push
push
popa
jnp
out
call
inc
cmp
sbb
fs
fiadd
(bad)
das
bound
mul
push
ror
clc
push
mov
mov
rcr
or
mov
dec
cmp
inc
push
ds
cmp
popf
(bad)
stos
addr16
aad
test
cmp
xor
pusha
ds
dec
sti
cs
inc
stos
push
xor
mov
cld
cld
sub
mov
out
mov
shl
inc
ins
stos
es
call
imul
retf
push
adc
xor
mov
sti
inc
cmp
test
cmp
adc
mov
shl
sbb
jnp
jns
or
fsub
push
sar
mov
xchg
jae
pop
xchg
jb
inc
push
inc
xor
xlat
out
cld
dec
out
mov
daa
pop
xor
lea
stos
(bad)
js
pop
outs
jns
or
adc
push
out
jge
out
nop
imul
inc
push
adc
push
adc
and
cld
push
add
jp
mov
jne
popa
daa
jle
pushf
sbb
loopne
test
lea
or
or
inc
and
pop
test
call
mov
pop
push
adc
pop
mov
mov
sbb
mov
jge
mov
mov
jge
jg
push
mov
mov
ret
ja
loopne
stos
popa
xchg
pop
ret
data16
xor
cmp
test
or
mov
mov
aad
jmp
push
cwde
jns
in
lods
stos
sbb
mov
loopne
pusha
popf
mov
idiv
stos
outs
loopne
lea
(bad)
addr16
pushf
sbb
add
and
retf
cmp
mov
cmp
mov
push
push
push
ds
leave
mov
int
mov
push
xchg
ret
repnz
cs
or
mov
sbb
push
mov
xchg
imul
jne
and
shr
pop
fimul
pop
aaa
je
arpl
mov
mov
repnz
movs
sahf
push
and
cmp
sub
inc
adc
mul
sub
or
pusha
(bad)
sub
icebp
cmp
loop
pop
dec
stos
js
cs
mov
cmp
mov
push
add
xchg
cmps
pop
push
jbe
jbe
or
mov
inc
(bad)
fbld
adc
add
mov
push
cdq
je
aaa
leave
cld
xchg
test
cmp
in
(bad)
(bad)
jg
out
xchg
push
add
popa
cmps
cmp
mov
inc
mov
mov
xchg
fdiv
std
jmp
shr
jnp
xor
mov
mov
jbe
mov
adc
lock
pop
call
lock
es
cdq
adc
ins
lea
xlat
iret
cmp
fst
inc
imul
and
mov
(bad)
in
push
(bad)
(bad)
or
mov
or
mov
shl
dec
aas
lea
loopne
enter
nop
lds
cmps
push
stos
fdiv
jbe
ds
fidivr
add
lock
cmp
lods
ret
and
das
mov
into
dec
add
stc
(bad)
pop
push
gs
and
dec
or
xor
outs
call
mov
dec
loope
fadd
ja
loope
or
repnz
sub
or
stos
push
mov
mov
push
inc
and
(bad)
enter
inc
popf
fistp
dec
dec
cld
pushf
scas
inc
or
(bad)
jns
nop
stos
dec
repz
inc
xchg
dec
inc
mov
rol
mov
loop
sub
ins
cwde
ret
mov
div
(bad)
push
mov
push
push
rcl
out
push
jle
fimul
push
test
jbe
adc
inc
or
clc
sub
retf
push
push
pop
retf
and
mov
inc
adc
xchg
data16
adc
adc
sub
pushf
sbb
xchg
sbb
mov
adc
fidiv
pop
popf
hlt
pop
push
pop
movs
cmp
add
xchg
and
and
and
lock
pop
jmp
and
sub
mov
pushf
mov
inc
js
jo
push
or
nop
jg
mov
or
mov
(bad)
fist
push
adc
mov
rol
shr
cwde
(bad)
push
add
fld
xchg
add
cmps
xchg
dec
jl
out
jne
sar
adc
or
jns
mov
pop
mov
sbb
pushf
jge
mov
fisubr
ss
sahf
add
add
mov
cmp
ss
sbb
push
xchg
and
jmp
(bad)
movs
sbb
repnz
mov
mov
dec
stos
inc
scas
mov
push
push
add
adc
mov
mov
shl
inc
test
cs
and
or
mov
sar
in
mov
(bad)
dec
mov
push
(bad)
add
movsx
out
lahf
mov
ficomp
cmps
repnz
imul
sub
fsub
adc
push
xchg
cs
adc
icebp
test
jg
xchg
loop
fiadd
dec
mov
outs
mov
scas
arpl
leave
sbb
in
and
shr
sahf
push
fwait
or
jg
cmps
clc
outs
fistp
jno
aaa
push
test
add
mov
inc
sbb
push
popf
gs
outs
je
jae
sub
out
pop
call
sub
mov
sub
and
stos
mov
(bad)
mov
sbb
je
or
mov
aaa
imul
push
les
(bad)
ja
dec
sbb
ss
cld
ja
clc
mov
aas
push
xchg
data16
fidivr
mov
test
add
cs
dec
mov
cmp
test
mov
daa
sbb
sub
mov
mov
cld
cmp
loopne
and
addr16
daa
mov
mov
mov
jne
inc
cmp
push
push
xchg
xor
and
cmp
shl
mov
lods
mov
lods
jno
ss
mov
mov
xor
lods
and
xchg
mov
ret
mov
ucomiss
fxch
cmp
jb
cs
cld
retf
adc
fnstenv
jg
push
in
dec
imul
push
adc
add
jbe
sub
fimul
test
mov
fimul
add
inc
adc
call
dec
mov
fisubr
cmp
outs
push
test
jne
or
out
lahf
pop
data16
ins
fmul
sub
call
jno
sub
cmp
xchg
sbb
sti
retf
std
push
pop
je
lock
mov
lds
jg
shl
pop
shr
ret
sbb
dec
push
lahf
mov
call
mov
cli
mov
ss
loopne
fidiv
cmp
cmps
(bad)
xchg
test
ret
xor
cld
ss
inc
xchg
mov
dec
xchg
aad
test
xchg
out
test
retf
sub
mov
fisubr
add
inc
pop
or
jno
iret
push
int
sub
setle
sbb
test
fild
lds
out
and
out
jo
scas
xchg
mov
push
aas
inc
push
xor
jecxz
repnz
jno
mov
ficom
mov
int
pusha
je
push
mov
jno
jl
test
mov
sahf
mov
xor
cmc
mov
inc
mov
loopne
pop
in
push
push
push
out
mov
xor
pop
pop
fisub
lea
mov
pop
adc
data16
iret
and
addr16
pop
mov
into
mov
pop
dec
adc
jmp
push
stos
push
(bad)
cmps
pop
cmc
pop
sbb
mov
leave
pop
ficom
xchg
sbb
repz
rcl
sub
std
arpl
in
ficomp
(bad)
retf
mov
pop
lock
mov
mov
push
gs
xchg
sbb
rcl
inc
jp
dec
sub
shl
loope
rcr
xor
mov
repnz
mov
clc
and
dec
dec
inc
push
fisttp
popa
jl
xchg
xchg
push
add
pusha
loope
jg
push
bound
mov
in
mov
outs
jp
das
cmp
fild
test
jecxz
lock
push
xor
add
mov
cmp
xchg
out
test
test
mov
ins
shl
add
jne
mov
mov
and
push
out
add
aad
neg
pop
jg
outs
adc
fstp
dec
cld
popf
(bad)
test
ret
jns
mov
cmps
jmp
mov
push
fldcw
aad
jbe
mov
int
or
cld
(bad)
add
push
jle
pop
into
mov
pop
inc
loope
adc
(bad)
jno
dec
dec
add
inc
imul
fiadd
adc
cli
lds
shl
inc
or
xchg
or
dec
jmp
push
cmps
fcomp
sub
fist
or
loop
dec
adc
lock
push
stos
mov
or
sub
jns
mov
leave
repz
mov
leave
fild
stos
and
sti
xor
inc
mov
inc
bound
test
lods
adc
imul
xor
xor
push
ret
pushf
repz
lods
arpl
xchg
test
inc
mov
lds
cmps
repnz
mov
sub
iret
rep
enter
popf
push
xor
popa
xor
out
cdq
dec
loop
lods
cs
ds
pop
push
mov
rcr
repz
arpl
xlat
jns
xchg
cmp
aaa
mov
mov
push
cmp
cmp
push
push
add
mov
jp
cs
ror
fild
push
out
int3
or
mov
test
aam
and
xchg
ficomp
(bad)
call
inc
mov
(bad)
xchg
stos
pop
test
pavgw
adc
cli
xchg
push
cmp
xchg
push
popa
std
pop
ret
push
mov
xchg
mov
mov
sub
es
lock
and
or
add
adc
sbb
xchg
fdiv
ret
shl
push
cmp
fimul
invd
or
push
mov
and
push
sub
stos
shl
push
cld
mov
inc
inc
out
or
movs
lock
pusha
dec
fstp
cli
or
cmc
test
sub
sbb
cmps
cmp
cmp
cmp
or
retf
sub
mov
pop
xchg
jl
push
push
add
cs
fwait
nop
push
pop
and
cmps
pop
cmp
inc
add
jg
or
inc
mov
cmp
stos
and
pop
mov
inc
mov
mov
pop
in
lahf
jg
daa
jne
or
push
out
ins
mov
or
jo
shr
xor
pop
mov
mov
pop
cmp
(bad)
mov
or
jmp
pushf
stos
data16
outs
inc
mov
dec
xor
std
int
mov
(bad)
cli
jb
shr
push
mov
lahf
sbb
xor
sar
add
cmps
mov
int3
mov
push
add
arpl
test
test
inc
inc
jb
daa
addr16
mov
jns
dec
sbb
sar
adc
mov
(bad)
(bad)
fcmovu
fs
xchg
(bad)
sbb
mov
add
test
jmp
and
fwait
sub
punpckhdq
es
jle
mov
(bad)
cmp
sbb
sbb
push
addr16
ret
dec
pushf
cmp
mov
xor
add
pop
mov
and
push
cmps
xchg
fucomi
addr16
shl
jecxz
push
mov
aad
leave
sub
push
add
sub
xor
out
lahf
stos
inc
mov
or
(bad)
jns
adc
out
pop
push
clc
and
push
cmp
cld
mov
ret
push
ins
leave
mov
pop
call
mov
test
jmp
shl
imul
jle
pop
pop
xchg
add
pop
imul
int
or
ds
dec
outs
nop
cs
sub
popf
mov
mov
idiv
test
clc
and
aas
push
cmp
jnp
pop
jecxz
cli
and
jbe
sbb
call
pop
in
xlat
cmps
push
loope
push
or
ja
push
or
add
and
jns
sub
and
sbb
inc
xor
shl
inc
imul
cmc
cmp
(bad)
add
mov
adc
add
cmp
sub
movs
mov
stos
jbe
clc
lea
add
mov
mov
push
aaa
xchg
push
sbb
imul
cmp
xor
(bad)
ins
(bad)
fstp
shl
jp
sbb
and
or
push
fwait
mov
add
jmp
stos
add
or
stc
(bad)
imul
test
adc
dec
push
xor
popa
shl
xchg
ret
ss
pop
js
push
icebp
loopne
cmp
mov
das
mov
jb
lea
loope
jmp
adc
loope
and
lea
fidivr
mov
mov
ja
sbb
pop
fisub
push
dec
and
fwait
js
dec
inc
outs
add
lds
mov
jnp
push
ds
movs
movhps
and
mov
add
jg
(bad)
or
shl
test
xchg
mov
div
out
add
add
sub
sub
lahf
or
xor
jle
fdivr
and
jo
mov
test
aas
xchg
fwait
mov
ss
inc
jecxz
sub
pop
dec
push
mov
mov
cld
loop
not
push
cwde
mov
test
stos
mov
or
jg
or
ss
bnd
sub
jo
mov
jb
push
fld
in
ss
js
pusha
test
(bad)
fisubr
das
xlat
sub
icebp
or
lock
stos
lock
aaa
mov
imul
and
jb
test
inc
sahf
dec
mov
and
out
inc
lods
fs
pushf
in
inc
push
loopne
or
push
mov
adc
jle
outs
push
jmp
mov
mov
mov
xor
fidiv
mov
or
xchg
xchg
retf
pop
outs
add
retf
xchg
cmp
sub
add
xchg
add
cmp
xchg
pop
ja
lods
ficomp
mov
cmps
xor
pusha
ret
push
cmps
repz
(bad)
and
jno
mov
fdivrp
mov
dec
mov
call
imul
fisttp
dec
pushf
popf
scas
xchg
mov
pop
icebp
pop
sbb
pop
iret
sbb
pushf
inc
sbb
mov
push
call
jg
xor
push
loopne
ffreep
pinsrw
ss
add
daa
add
adc
inc
popw
fst
mov
push
pushf
(bad)
(bad)
ror
out
call
pop
loopne
mov
push
dec
iret
sub
and
fild
cmp
mov
es
frstor
dec
jg
xchg
pop
mov
pop
imul
xor
ret
push
cmp
mov
call
in
pop
xchg
repnz
pop
mov
inc
add
(bad)
cs
(bad)
mov
fcmove
sbb
loopne
punpckhdq
fsub
pmaxsw
sahf
je
jge
das
stos
push
call
add
je
push
pop
pushf
add
xor
jge
cwde
into
or
(bad)
into
stos
pushf
popa
daa
jmp
pop
fistp
inc
jl
imul
fsubrp
imul
iret
pop
cli
dec
ficomp
inc
jge
lds
jp
mov
out
push
stos
mov
push
outs
push
cs
mov
jmp
or
jmp
push
xchg
mov
addr16
pop
out
lock
mov
aas
dec
jnp
retf
xchg
adc
xchg
imul
outs
xchg
and
mov
shl
and
imul
xchg
add
cmp
sar
dec
sub
add
push
leave
dec
loope
adc
adc
sbb
xlat
repz
mov
dec
pop
(bad)
adc
int3
inc
adc
dec
jbe
rol
mov
stos
repnz
inc
or
push
ins
pop
mov
(bad)
sar
push
cmc
mov
out
sub
adc
ret
sub
jns
lds
ds
mov
sahf
and
jge
stos
hlt
push
mov
push
push
cmp
xchg
rcr
lds
mov
jp
repnz
push
(bad)
jecxz
outs
fs
pop
jo
pop
push
stc
aaa
mov
scas
popa
ss
mov
push
shl
mov
add
not
enter
lock
pushf
mov
repz
sbb
pop
xor
das
js
test
mov
push
push
sti
sbb
mov
test
jecxz
mov
pop
sti
add
arpl
icebp
movs
dec
add
inc
push
cli
cmps
ret
aad
(bad)
dec
arpl
mov
xchg
sub
jno
push
rcl
and
pop
loopne
add
pop
(bad)
mov
or
sub
ds
loopne
aas
outs
jae
pop
xor
sbb
mov
aas
and
mov
cdq
sub
xchg
mov
mov
cmp
push
push
ret
jb
mov
cmps
mov
push
repnz
movq
sub
fistp
push
push
js
stos
xor
xor
in
lods
adc
shr
mov
aas
rol
in
ficomp
push
pop
ja
pusha
retf
sbb
ss
pop
mov
xchg
push
mov
(bad)
inc
scas
out
mov
js
cmp
inc
loopne
inc
pop
mov
in
retf
and
mov
inc
push
test
addr16
jbe
das
pop
jmp
jmp
pop
gs
push
push
in
stc
add
and
or
in
adc
cmps
test
jbe
ret
shl
cs
ja
ins
(bad)
neg
push
stos
outs
or
es
pop
cmp
push
sub
inc
mov
fcomi
mov
mov
rcr
cmp
push
jge
(bad)
push
call
sub
in
shl
and
xor
xor
add
addr16
add
iret
and
aaa
dec
xchg
imul
out
xor
jle
xchg
adc
arpl
in
push
das
ss
jbe
push
cs
inc
mov
sbb
fistp
ins
mov
dec
and
fisubr
ds
mov
inc
or
bound
xor
fldenv
ror
sbb
pop
gs
pop
mov
hlt
mov
rcr
gs
and
ds
mov
push
mov
ja
out
jle
pusha
ins
jmp
or
sub
stos
xor
ror
push
push
jbe
add
iret
mov
sub
jno
shl
push
mov
jb
jp
inc
shr
push
push
jp
adc
or
push
mov
mov
ja
js
jbe
lods
xchg
and
test
les
in
out
or
xchg
sub
mov
dec
fucomip
movs
inc
shr
rcr
mov
aam
push
xchg
sub
sbb
mov
dec
sti
rcr
push
into
fstp
inc
mov
and
dec
sbb
into
lock
dec
xchg
repnz
inc
push
out
scas
push
repz
mov
adc
retf
push
push
shl
sahf
(bad)
(bad)
jg
repz
push
add
sbb
dec
mov
ror
fild
iret
cli
cmp
inc
mov
add
inc
shl
jmp
sbb
mov
xchg
add
retf
pusha
pop
stc
mov
lds
jne
dec
mov
ss
js
and
call
inc
rol
outs
jae
jle
jle
(bad)
mov
and
mov
mov
fild
dec
dec
mov
xchg
jae
sub
inc
xor
jbe
adc
jecxz
mov
rol
adc
inc
out
mov
jo
pop
xchg
push
inc
pop
or
in
lods
pop
fidivr
hlt
mov
add
or
sub
xchg
jmp
mov
or
xchg
add
or
dec
xor
loopne
jb
add
rol
push
cdq
call
pop
pop
addr16
mov
mov
les
inc
outs
popa
mov
add
dec
arpl
out
sub
je
xor
push
inc
push
loopne
sub
movs
sub
xlat
pop
stos
push
fiadd
mov
adc
mov
das
dec
push
stos
sar
xchg
bound
lods
sahf
and
ret
scas
loope
xor
push
dec
loop
inc
xchg
shr
cli
and
repz
arpl
inc
mov
mov
push
pop
mov
pop
popf
mov
sub
stos
leave
test
aam
push
mov
dec
test
icebp
(bad)
(bad)
int
mov
loop
inc
arpl
adc
or
mov
fbld
or
mov
adc
nop
cmp
pop
pop
sbb
cmp
icebp
push
jbe
mov
cmp
std
mov
mov
jbe
xchg
and
dec
fwait
sub
dec
cmp
dec
and
adc
mov
push
or
push
sub
adc
add
push
retf
es
ins
(bad)
scas
fsubr
mov
fist
icebp
pop
push
arpl
xor
retf
shl
test
sbb
data16
cli
pop
sub
add
and
push
xor
div
cs
icebp
inc
jecxz
jo
mov
push
push
lods
sar
ss
push
bound
lahf
jecxz
xchg
stos
or
mov
bound
in
movs
aam
or
(bad)
sbb
mov
stos
movs
mov
and
int3
repz
lea
or
push
push
mov
jge
add
adc
dec
je
sub
jge
(bad)
jp
adc
inc
fmul
push
mov
cs
ret
add
xor
popa
ss
icebp
inc
call
adc
mov
imul
iret
jmp
add
sahf
pusha
mov
arpl
in
icebp
sbb
xor
(bad)
or
push
mov
aaa
sbb
neg
stos
xor
cmps
ret
jg
xor
add
push
rol
xchg
mov
xor
into
adc
data16
fucomip
add
(bad)
adc
loope
inc
pushf
dec
nop
inc
mov
jno
aad
pop
ss
inc
adc
(bad)
mov
add
(bad)
inc
test
add
shr
cld
jg
and
sbb
and
dec
dec
or
rol
fcom
rcl
retf
sti
in
mov
(bad)
jmp
inc
cmp
mov
and
mov
repz
aad
push
push
xchg
ds
bound
enter
mov
cmps
mov
stos
or
and
mov
outs
int
fisttp
or
retf
push
mov
dec
mov
add
pop
mov
loop
mov
cmp
retf
add
jnp
clc
fwait
cmc
ins
mov
cdq
mov
xor
aam
dec
sub
jnp
(bad)
and
(bad)
dec
cli
int
xor
mov
sbb
xor
push
or
out
mov
mov
iret
int3
adc
and
push
fisubr
sar
(bad)
cld
inc
add
mov
leave
mov
adc
inc
inc
in
cmps
push
es
es
cmp
push
dec
cmp
les
xchg
repnz
popa
xor
and
jl
jnp
jbe
call
mov
and
xor
dec
(bad)
sar
sahf
adc
or
mov
ss
sub
xlat
mov
aas
xor
test
outs
loop
push
call
(bad)
(bad)
sub
shl
scas
ins
pusha
sub
mov
pop
sub
mov
dec
mov
ins
dec
ret
dec
jbe
lods
rol
push
mov
sub
or
jmp
and
xchg
cmp
dec
dec
(bad)
out
mov
(bad)
jb
ror
inc
leave
cld
push
(bad)
fistp
push
out
or
and
add
leave
mov
jmp
mov
cmp
add
xchg
cld
pop
sbb
add
and
lock
cwde
xchg
add
iret
ret
test
fs
and
add
pop
mov
push
into
mov
outs
or
std
xchg
ss
outs
not
add
ins
sub
push
and
jbe
(bad)
aam
rol
(bad)
xor
fidivr
mov
sahf
sub
mov
(bad)
cmp
pusha
sbb
xchg
pop
jle
in
xor
scas
icebp
pop
jmp
push
jmp
fidivr
add
xor
fsub
sar
adc
sbb
push
pop
inc
jo
inc
or
cmps
inc
rcl
add
mov
pop
mov
adc
gs
push
sbb
and
jno
lock
scas
(bad)
data16
jp
mov
(bad)
push
int
adc
xchg
push
popa
inc
into
mov
jle
loopne
ret
pop
mov
imul
out
es
iret
dec
sub
cmp
mov
xor
leave
imul
shl
cmp
mov
jg
or
in
retf
add
ret
stos
(bad)
pop
or
mov
in
push
cmp
jns
call
clc
xor
add
and
ret
or
repnz
add
ret
sbb
adc
pop
movs
loopne
cmp
cmp
lock
lea
retf
dec
gs
push
jmp
inc
push
ja
mov
mov
or
mov
cmps
push
push
fisub
sub
jecxz
cld
adc
mov
bound
imul
jmp
or
xlat
lea
or
adc
sahf
dec
lock
clc
pop
test
retf
adc
lods
gs
cmp
add
pop
ror
xchg
and
adc
pop
pop
stos
pop
push
fisub
jo
inc
(bad)
mov
pop
js
in
leave
stos
sub
sub
retf
add
push
mov
pop
adc
fbstp
xchg
jns
in
sbb
or
push
xchg
repnz
stos
cmp
mov
(bad)
movs
ret
mov
adc
mov
dec
dec
fdiv
fisubr
cmps
push
adc
xlat
pop
int3
cmps
inc
add
inc
bound
hlt
ja
lahf
fbstp
jle
sbb
sbb
and
sbb
shr
cmps
pop
push
int3
or
in
movs
push
fidivr
jno
in
xor
addr16
int3
cmp
clc
push
movs
mov
std
push
sub
pushf
ret
(bad)
xchg
cmps
pop
sub
mov
fiadd
fs
imul
jmp
push
or
out
mov
popa
cmps
aaa
push
ror
sub
ds
outs
imul
sub
cmp
(bad)
daa
mov
xor
cmps
lock
and
pushf
outs
fs
pop
sahf
aad
push
fldenv
mov
mov
repnz
push
mov
jmp
daa
mov
mov
idiv
adc
push
test
pop
jae
es
inc
shr
fld
jmp
mov
or
xor
adc
pop
xchg
out
push
push
pop
sub
push
jl
repnz
imul
fldl2e
sbb
(bad)
call
cmps
dec
addr16
xchg
out
js
jmp
cs
hlt
ds
sub
stc
lds
mov
inc
shl
xchg
push
sbb
scas
das
cdq
mov
sahf
sar
mov
jg
add
lock
mov
dec
(bad)
in
out
mov
clc
sub
(bad)
shl
es
push
mov
dec
inc
dec
sbb
add
cmp
dec
mov
xchg
inc
daa
add
pushf
and
loopne
fwait
cmps
pusha
push
mov
leave
shl
add
mov
pop
and
fstp
push
mov
xchg
adc
xchg
sbb
adc
xchg
and
jbe
ins
xor
add
rcr
add
sub
fwait
and
stc
and
and
add
jb
pop
push
cmp
retf
out
xchg
add
dec
jg
cmp
cmps
jne
neg
push
in
mov
lahf
movs
loop
jbe
mov
xchg
adc
ficomp
push
adc
xor
test
inc
nop
sbb
push
cmps
stc
inc
imul
adc
xchg
lock
cmp
adc
mov
out
fs
int
sub
mov
mov
mov
(bad)
cmps
push
jp
pop
xchg
mov
sbb
fwait
add
movs
inc
and
retf
ja
popa
mov
jbe
pop
shr
pop
pop
inc
mov
push
mov
sub
dec
imul
add
mov
adc
adc
pop
add
mov
call
push
xchg
sbb
jbe
aam
mov
cmps
xor
add
push
xchg
ret
push
pop
inc
push
push
dec
gs
outs
push
in
pop
jb
test
push
cmp
fwait
retf
pop
push
fidiv
mov
lock
mov
lea
setl
mov
push
push
cwde
push
sub
mov
jnp
loop
add
mov
fadd
jne
mov
add
dec
pop
bound
test
add
test
mov
icebp
jg
neg
sub
add
inc
push
pop
dec
in
das
xchg
push
sub
xchg
out
sub
daa
shr
xor
js
and
fwait
ret
inc
cmp
outs
movs
shl
js
pop
push
dec
cs
fistp
retf
dec
inc
dec
cs
repnz
push
xor
push
pop
test
xor
push
mov
std
jmp
adc
cmp
dec
and
jbe
xor
scas
mov
test
push
pop
add
xchg
loope
(bad)
fist
push
and
inc
add
or
push
inc
mov
jge
adc
loop
(bad)
fwait
daa
jns
nop
ds
shl
bound
loope
and
xchg
ds
shl
ficom
mov
not
and
cmps
mov
lock
add
mov
or
call
xor
fadd
mov
push
push
(bad)
mov
jo
add
sub
xor
sbb
add
stc
sar
jmp
sbb
sub
sbb
pop
jbe
mov
adc
jp
dec
or
(bad)
repz
cs
mov
aas
daa
add
adc
adc
out
daa
mov
or
ins
(bad)
sbb
inc
jmp
and
add
outs
jbe
movs
fld
cs
adc
int
inc
adc
mov
pushf
mov
pop
cmp
fwait
iret
or
pusha
and
xchg
ins
sub
mov
sub
repnz
leave
add
outs
cmp
arpl
mov
cmp
das
cli
sub
ja
pop
stc
sbb
ss
hlt
mov
mov
fld
rol
inc
jnp
inc
push
cmp
inc
sbb
pop
fdivrp
loope
mov
sbb
add
das
cmp
jle
cmps
ss
mov
retf
inc
fimul
sahf
bound
in
mov
adc
mov
call
xor
sub
fist
pop
sbb
and
ret
outs
retf
sbb
pop
jo
int3
xchg
mov
scas
xchg
pop
jg
mov
test
mov
aaa
push
dec
mov
and
adc
cmp
stc
add
lahf
pop
sar
clc
sbb
(bad)
mov
das
add
dec
pop
mov
cmps
push
mov
cmps
push
shr
fwait
xchg
(bad)
pop
adc
lea
xor
out
xchg
bound
sar
dec
imul
adc
adc
dec
cmc
(bad)
ficomp
test
das
test
sub
jp
ja
aaa
jmp
mov
dec
pop
test
add
pusha
fidivr
imul
add
mov
fimul
imul
bnd
xchg
jle
out
mov
sbb
push
data16
rol
xchg
cli
mov
add
(bad)
pop
call
(bad)
or
ins
cmp
push
mov
icebp
pop
std
sbb
scas
jmp
lea
stos
sbb
ins
cld
xor
fs
repz
loope
inc
cdq
xor
(bad)
(bad)
in
dec
leave
test
hlt
inc
cmps
ins
sbb
clc
and
xchg
fimul
lds
loopne
jp
iret
(bad)
fst
jnp
and
xchg
test
push
nop
cld
aas
and
add
jb
xor
loope
lahf
xchg
retf
cmp
push
sar
push
ins
bound
mov
mov
ds
pop
jl
jb
jb
inc
ficomp
and
dec
loopne
test
lock
or
daa
pop
pop
ficomp
mov
clc
nop
sbb
mov
call
or
repz
ss
stc
into
adc
mov
stos
and
pop
or
push
sub
jne
push
or
pop
mov
push
pop
and
fbld
or
adc
les
dec
outs
pop
js
cmp
xchg
sbb
das
repz
inc
dec
mov
xchg
retf
stos
pop
jle
sub
retf
xchg
xchg
retf
pop
and
pop
jg
retf
xchg
xchg
arpl
sar
push
cmp
xor
je
scas
retf
lods
fiadd
sub
in
clc
icebp
pop
or
div
test
es
jae
in
or
xor
je
scas
jg
or
pop
cmp
je
jge
test
(bad)
mov
fcmovu
add
stc
sar
test
arpl
adc
jbe
outs
shl
jp
mov
sahf
into
or
push
push
test
adc
std
dec
xchg
sbb
sbb
mov
arpl
xor
das
movs
push
scas
pop
pop
sbb
test
push
cli
or
das
test
aaa
inc
lods
jmp
push
test
pop
or
stos
cmp
les
mov
lds
add
in
pusha
test
mov
mov
into
adc
bound
sub
dec
pop
push
dec
stos
lds
mov
and
ja
jmp
outs
push
push
(bad)
sbb
rol
ds
cmps
and
dec
clc
dec
gs
outs
lahf
inc
cli
inc
sbb
mov
ficom
cli
and
push
jmp
stos
sub
icebp
add
xchg
sub
xor
push
ficomp
sub
mov
outs
ss
push
bound
ds
xlat
jl
(bad)
mov
sub
adc
jo
sahf
or
mov
add
out
mov
loope
ret
out
ins
xchg
ins
sbb
mov
fnstcw
or
pop
loope
sbb
jle
and
and
sub
dec
cmp
mov
and
pop
fwait
les
jmp
push
jp
mov
scas
mov
je
sar
out
cmp
sub
fs
int3
(bad)
(bad)
jb
outs
cmps
out
loopne
repnz
inc
jo
dec
adc
mov
mov
ja
repz
out
fnstcw
pop
fs
pop
mov
xchg
iret
push
jbe
es
js
and
mov
mov
movs
push
inc
loop
fiadd
aas
add
push
jp
mov
jg
mov
fimul
add
call
add
inc
repnz
adc
mov
adc
xchg
mov
mov
cwde
ficomp
push
cli
gs
(bad)
and
xchg
js
sub
xor
mov
test
stos
or
jg
sahf
dec
jbe
in
stos
std
pop
lahf
push
lock
iret
in
cmps
mov
cmps
cmp
into
test
xor
add
push
pop
push
xchg
data16
push
pmaxub
(bad)
and
rol
pop
jb
add
(bad)
jg
and
lods
std
cmp
test
jbe
mov
push
cli
pop
ins
ins
push
adc
jge
mov
mov
push
mov
and
fild
add
fisubr
popa
dec
push
sbb
cmp
mov
sub
pop
shl
inc
inc
scas
fwait
pop
shl
pop
stos
cs
les
cmp
(bad)
std
push
ret
xchg
xchg
pop
scas
mov
lods
addr16
lods
xor
pop
or
pop
or
bound
xchg
nop
or
rol
xchg
ja
jl
push
dec
popa
fmulp
mov
mov
mov
cmp
jnp
pop
mov
pop
jo
scas
psrlq
inc
pop
mov
inc
das
and
scas
mov
cmps
repnz
sub
add
repnz
mov
iret
fistp
push
lahf
sub
fnstcw
addr16
outs
add
pusha
add
and
(bad)
adc
fs
xor
retf
out
xor
inc
jae
into
cld
push
add
das
jmp
dec
push
add
icebp
xchg
mov
loop
jmp
sub
pop
fistp
pop
xchg
mov
mov
push
inc
aad
xor
lea
inc
xchg
into
xlat
jmp
push
sar
(bad)
aas
add
dec
pop
xchg
xchg
push
mov
jle
(bad)
mov
jl
dec
jmp
jb
push
(bad)
rsm
jns
push
add
push
pop
xor
call
xor
pop
push
fiadd
in
mov
mov
cmps
repz
mov
adc
pop
outs
mov
(bad)
push
mov
fst
or
sub
je
cmp
add
mov
push
mov
dec
cmp
cld
out
test
mov
or
je
ja
jmp
push
(bad)
sbb
(bad)
rcr
adc
and
(bad)
and
data16
mov
daa
(bad)
rol
sub
std
inc
pop
out
dec
imul
ret
jb
out
mov
fwait
dec
mov
jge
jg
ret
xchg
bound
jno
js
(bad)
jnp
add
(bad)
pop
add
jmp
push
das
lahf
nop
dec
cmp
pop
push
fidiv
mov
mov
sbb
shl
addr16
retf
das
jmp
add
pop
pop
inc
push
adc
test
inc
push
xchg
(bad)
cmps
jge
inc
sahf
jb
inc
xchg
hlt
sub
or
cmp
xor
sbb
push
sub
ss
push
sbb
xor
outs
dec
push
sbb
pop
in
adc
mov
daa
xchg
(bad)
ret
push
out
repnz
in
push
pop
push
rol
adc
and
pop
pushf
pop
int
pslld
jnp
aas
mov
rol
add
clc
pop
pop
ins
iret
sub
or
cli
test
js
mov
das
sub
(bad)
loopne
fs
pop
(bad)
jg
dec
adc
push
cwde
dec
cld
mov
jmp
xchg
popa
pop
outs
push
cmp
sub
or
add
dec
push
xor
cmps
div
sbb
add
add
iret
sbb
inc
ss
inc
and
pop
push
jne
sbb
xchg
cmp
icebp
or
mov
cmp
not
cli
dec
inc
fcomp
fldenv
and
in
ss
retf
pop
call
push
mov
mov
mov
shl
sar
rcl
hlt
pop
repnz
es
inc
jne
jp
retf
inc
adc
cmp
pop
add
pop
sbb
fbstp
sbb
adc
adc
and
js
mov
jnp
in
scas
push
xor
dec
cmps
pop
cld
inc
ror
pop
dec
jne
aaa
pushf
cdq
push
push
mov
js
jg
(bad)
(bad)
fbld
dec
jp
leave
(bad)
out
jae
fld
hlt
xor
inc
daa
mov
push
dec
mov
push
in
dec
jne
fimul
xchg
clc
jg
xchg
ds
add
bound
ret
pusha
or
sar
(bad)
push
mov
sub
dec
shl
adc
ss
in
inc
add
mov
ss
pop
js
and
in
sub
xchg
sahf
push
mov
fidiv
fild
std
dec
add
inc
adc
xor
aaa
popf
lods
dec
clc
data16
ins
xchg
xchg
and
or
jmp
add
or
call
aas
adc
inc
arpl
lock
aas
jmp
inc
jb
in
in
adc
(bad)
adc
and
hlt
push
sub
and
ins
sbb
std
cmp
mov
add
adc
mov
outs
ret
aaa
add
inc
and
les
cmp
daa
nop
inc
or
mov
push
dec
push
ret
sar
dec
fnstenv
xchg
mov
ret
mov
cli
shr
test
bound
xchg
xor
adc
mov
cld
pop
mov
mov
mov
mov
pop
cwde
jne
jo
retf
pop
pop
arpl
add
push
push
in
jecxz
and
xchg
pop
xor
jg
mov
adc
out
int
dec
rcl
jg
fcomip
stos
push
mov
add
gs
and
pop
scas
dec
test
adc
call
ins
or
arpl
loope
add
imul
add
jns
adc
in
mov
es
and
cld
add
mov
movs
das
and
test
pop
jbe
xor
xor
sbb
out
(bad)
shl
xor
retf
inc
xchg
in
jb
xchg
ret
mov
xchg
mov
mov
fimul
xchg
sub
add
test
stos
outs
dec
pop
adc
retf
out
pop
xchg
jnp
aam
test
mov
mov
jbe
and
jbe
xchg
imul
mov
loop
enter
jo
push
or
push
add
xchg
outs
mov
push
push
inc
(bad)
inc
jecxz
loop
push
adc
cmp
es
jg
scas
jg
fistp
ds
in
and
sbb
data16
bound
(bad)
cmp
jl
pusha
clc
push
or
ja
add
xor
loope
push
arpl
test
sub
push
mov
mov
adc
pushf
aas
(bad)
xor
test
pop
(bad)
(bad)
je
(bad)
sub
mov
add
or
cs
ret
jae
rol
sbb
pop
call
add
adc
scas
inc
adc
push
mov
xlat
test
pop
xor
(bad)
ins
and
out
add
ret
lock
mov
jp
popa
jle
jmp
mov
mov
pop
or
dec
lahf
xor
les
jl
(bad)
push
repz
pop
xlat
sbb
xchg
clc
(bad)
leave
xchg
in
ret
add
pop
in
pusha
mov
inc
add
push
mov
and
outs
jns
inc
pop
xor
dec
mov
in
(bad)
adc
push
jbe
ss
ret
inc
loope
inc
pop
mov
and
fisttp
loope
inc
cmp
jmp
scas
push
jmp
push
xor
push
and
or
pop
xchg
aam
and
cmp
dec
jge
sub
jae
es
lods
push
(bad)
ins
dec
sbb
gs
lea
out
dec
inc
lock
and
xor
retf
mov
and
(bad)
test
ror
xchg
add
cwde
mov
mov
movs
hlt
dec
fild
and
jo
mov
push
rol
and
and
sub
stos
sub
lahf
inc
mov
hlt
jle
xchg
retf
test
retf
sbb
mov
xor
push
repnz
neg
push
jecxz
popa
rcl
sbb
or
adc
fimul
lods
mov
movs
jle
xchg
iret
push
cmp
jbe
push
mov
mul
and
and
sub
mov
push
adc
pop
je
pop
push
(bad)
fucomp
dec
or
push
ss
dec
in
inc
jne
sub
aaa
adc
jle
imul
inc
clc
mov
(bad)
out
sbb
mov
dec
pop
jno
and
std
adc
mov
imul
adc
cmp
jb
adc
jnp
xchg
jno
and
lock
dec
daa
ins
mov
loop
pusha
mov
push
xor
cmp
push
jno
push
ds
int
sub
mov
and
xor
inc
cli
(bad)
sub
mov
mov
cs
into
dec
xor
push
in
jno
mov
dec
cs
mov
adc
inc
int3
not
cmp
adc
add
dec
and
pop
mov
pop
cmp
add
xor
test
mov
adc
mov
cmp
mov
jno
outs
mov
sbb
bound
jmp
inc
cs
mov
sub
int
adc
inc
xor
pop
cmp
jne
rcr
mov
inc
or
(bad)
fcmovnu
mov
push
faddp
cli
cmp
dec
hlt
ss
lock
xchg
clc
cmp
arpl
inc
push
push
xchg
or
lahf
pop
mov
jns
ss
pop
jmp
jp
and
adc
sub
add
push
jle
mov
xchg
imul
pop
pop
aas
sbb
push
cmp
call
dec
inc
mov
or
ret
add
dec
mov
std
pop
dec
clc
xor
mov
retf
jle
outs
fnsave
or
dec
dec
inc
sbb
std
pop
push
mov
mov
(bad)
shr
mov
mov
inc
add
adc
jge
outs
popf
mov
jb
cmp
sbb
push
pop
dec
mov
fnstenv
aas
or
inc
mov
fnstsw
ins
sub
arpl
sbb
das
(bad)
imul
fbstp
lahf
dec
cmp
push
(bad)
jne
add
sar
inc
sahf
cmp
dec
or
lock
adc
rcl
adc
(bad)
push
adc
and
or
ret
add
inc
jae
stos
sub
adc
and
je
inc
outs
ja
into
aaa
das
in
adc
sub
icebp
mov
add
pop
jb
and
frstor
adc
cmp
rcr
push
sti
sbb
add
mov
aas
out
icebp
adc
xchg
(bad)
dec
dec
dec
push
xchg
or
cmp
xchg
sub
sub
inc
mov
push
jmp
add
dec
inc
daa
jno
sub
xor
es
pop
sub
inc
mov
bound
push
push
adc
out
cmp
jecxz
inc
jns
mov
inc
inc
lock
mov
pop
rcr
inc
push
xor
sub
jmp
mov
mov
mov
xchg
dec
sbb
mov
call
pop
shr
imul
mov
jbe
retf
pop
sub
sub
inc
das
movs
xchg
sub
loop
rol
pop
aas
imul
(bad)
pushf
sbb
or
(bad)
mov
push
and
adc
mov
js
xchg
mov
pop
out
sub
inc
cmp
test
arpl
mov
ret
lea
add
in
sub
je
ds
push
xchg
(bad)
in
adc
xchg
adc
and
daa
sahf
mov
es
mov
es
mov
mov
cmp
fs
loop
outs
mov
sahf
cmps
jl
mov
pop
fadd
and
sub
les
and
inc
xor
jle
mov
push
cdq
and
jle
out
(bad)
and
out
xor
sahf
ret
test
push
pop
mov
stc
dec
ins
push
outs
inc
ror
pop
cs
inc
mov
(bad)
repnz
ins
hlt
adc
not
or
xchg
cmp
jg
mov
int
mov
mov
in
add
daa
xchg
int3
aas
xchg
ss
xor
cmp
jl
sbb
mov
cwde
fild
in
adc
add
xchg
gs
dec
push
inc
ins
ret
ret
mov
jae
jle
mov
adc
and
mov
(bad)
aaa
inc
in
ud2
mov
fistp
add
dec
fbstp
xchg
aaa
or
xor
sub
lock
lock
out
or
leave
sbb
arpl
jmp
dec
pop
inc
xchg
inc
sub
popa
sub
push
retf
hlt
adc
sar
retf
push
fiadd
inc
cmc
add
adc
and
gs
xchg
lea
inc
mov
mov
mov
mov
(bad)
nop
inc
xor
mov
xchg
add
mov
stc
fmul
adc
jle
es
out
inc
ret
mov
xor
out
sahf
and
sbb
adc
cmp
and
add
ret
jnp
fadd
jmp
outs
daa
jne
(bad)
sbb
mov
push
jmp
ja
fbld
jp
adc
or
add
fisub
xlat
in
pop
push
sub
pop
push
das
scas
test
imul
cld
jp
rol
fs
xor
je
pop
adc
aas
pop
dec
dec
xor
mov
ss
(bad)
push
inc
scas
mov
jle
loope
fmul
into
rol
(bad)
daa
or
mov
ja
and
popa
sub
adc
xchg
imul
adc
nop
jle
inc
cwde
pop
addr16
or
sbb
xchg
mov
data16
jg
fcmovnb
fist
in
cmp
(bad)
jne
int
xchg
jmp
in
sbb
in
jo
mov
jg
lahf
out
adc
push
loop
sbb
retf
cmp
or
cmp
mov
shr
inc
arpl
mov
xchg
mov
and
ds
sbb
push
cld
or
(bad)
call
inc
ss
iret
jbe
push
cmp
(bad)
loope
iret
test
xlat
out
cmp
repz
idiv
inc
lods
mov
and
mov
cmp
sar
rol
repnz
mov
xor
enter
popaw
cs
push
std
(bad)
mov
lods
shr
sbb
mov
mov
push
pop
xchg
add
mov
adc
inc
mov
ficom
cmp
pop
or
mov
cwde
ds
cld
push
sahf
sub
push
jle
cmps
push
(bad)
cmps
jb
scas
xor
out
sub
je
xor
les
imul
mov
add
leave
sbb
jbe
fstp
mov
outs
add
das
mov
aam
nop
fdivr
fidivr
lea
scas
mov
mov
cmp
or
sti
inc
xchg
orps
mov
and
outs
pop
xchg
out
sbb
inc
mov
xor
in
popf
push
inc
jle
mov
xchg
into
repnz
xchg
es
inc
ins
(bad)
jmp
push
sbb
mov
mov
retf
aaa
icebp
or
das
xchg
add
inc
jge
popf
push
cmps
inc
push
shr
inc
mov
aas
adc
mov
dec
icebp
sbb
or
aaa
outs
gs
sbb
test
iret
mov
ja
adc
xor
inc
call
repz
pop
shl
fiadd
ins
push
mov
iret
out
(bad)
je
dec
mov
int
dec
mov
mov
push
retf
shr
hlt
pusha
mov
and
pushf
sti
mov
xor
jb
cli
jo
xor
push
mov
jp
ficom
shl
push
(bad)
test
or
mov
cwde
(bad)
dec
pop
(bad)
fs
aaa
retf
ins
bound
(bad)
jnp
pop
mov
xchg
iret
fidivr
mov
mov
xor
gs
sub
fimul
adc
imul
or
add
ror
mov
add
bound
mov
or
pop
push
gs
jle
or
imul
mov
mov
lock
sbb
outs
mov
out
push
pop
pop
scas
dec
dec
lods
push
mov
push
jns
iret
push
mov
shl
scas
sbb
and
and
inc
jae
pop
hlt
dec
mov
mov
sub
push
push
fs
mov
sbb
ins
and
test
shl
dec
jno
out
mov
push
mov
in
retf
jmp
stos
call
pop
and
mov
sub
and
mov
fst
(bad)
pop
add
in
fs
out
inc
jmp
mov
adc
mov
mov
fist
xor
sar
or
test
fnstsw
lahf
mov
cmp
sub
(bad)
repnz
adc
fucomi
cmps
xchg
mov
xchg
push
sbb
mov
dec
ficomp
cs
xchg
aas
add
push
push
jb
push
pop
inc
ds
pop
mov
or
cmp
xchg
xchg
sbb
inc
push
hlt
das
adc
dec
mov
mov
(bad)
pop
sub
hlt
punpckhwd
pusha
mov
std
or
or
add
call
sahf
outs
jmp
sub
xchg
cli
inc
stos
adc
lods
ss
jmp
fmul
test
mov
cmps
xchg
mov
xchg
das
jl
scas
call
les
jns
imul
and
xor
mov
pop
push
xchg
push
or
ss
arpl
je
(bad)
jbe
dec
add
xchg
pop
dec
dec
push
pop
or
cmp
pop
cmp
test
mov
xor
xchg
ss
mov
or
or
bound
adc
hlt
mov
outs
stos
mov
inc
mov
mov
jg
jns
out
adc
mov
shl
mov
dec
ds
sahf
mov
sbb
loop
pop
jmp
jge
pop
nop
xchg
fdivr
adc
neg
pop
mov
push
xchg
(bad)
jo
clc
sub
push
int
inc
mov
(bad)
cmps
sub
sbb
rol
in
pop
inc
not
sahf
mov
jbe
out
scas
aaa
and
or
sti
mov
pop
cmps
push
push
mov
(bad)
cmp
mov
add
imul
mov
push
popf
(bad)
nop
push
fcmovu
fidivr
(bad)
mov
xchg
dec
mov
inc
inc
retf
pop
xchg
adc
fs
cmp
push
daa
hlt
mov
jp
push
mov
lds
cmps
mov
xchg
lea
icebp
mov
into
rol
jmp
add
add
leave
fadd
mov
jmp
jg
sbb
adc
jecxz
mov
scas
ret
movs
sar
dec
fmulp
mov
out
mov
sbb
mov
js
xchg
inc
les
or
aas
bound
sbb
or
retf
icebp
mov
adc
lock
loopne
ins
sbb
jp
and
pop
xchg
mov
inc
cwde
xchg
dec
xor
mov
addr16
ins
jle
stos
arpl
shl
dec
xor
mov
xchg
pop
sbb
xchg
push
sub
mov
fld
repnz
sbb
add
adc
stc
iret
mov
cmp
ficom
adc
dec
xchg
mov
je
into
pushf
sti
xchg
out
cmp
adc
(bad)
ins
out
jg
call
sar
mov
xchg
int
(bad)
inc
cs
add
sbb
daa
push
mov
mov
fwait
mov
jo
cvtps2pd
jg
ret
jmp
mov
call
xor
imul
xor
retf
pop
in
xchg
xor
cmp
rcl
ins
test
mov
retf
add
repnz
dec
inc
cmp
sbb
mov
or
(bad)
add
and
cli
push
mov
sbb
pusha
xchg
daa
fstp
shl
and
rcl
pop
(bad)
jo
cmp
adc
bound
scas
test
pop
bound
call
es
clc
pop
mov
stc
cli
mov
rcl
retf
mov
mov
add
ins
retf
jle
popaw
lea
jnp
pop
push
fnstcw
dec
jp
jno
icebp
loope
or
push
jae
retf
out
push
sbb
cmp
dec
gs
jno
mov
inc
cmp
and
idiv
sar
inc
test
sbb
push
or
ret
cmps
dec
dec
ins
mov
js
mov
retf
xchg
shl
push
std
and
xchg
loop
fwait
push
adc
adc
mov
cmps
pushw
and
and
rol
sbb
inc
ror
mov
xor
shl
sti
test
ins
jmp
dec
call
add
and
pop
sub
pop
mov
leave
dec
cli
push
les
mov
push
rcr
test
xchg
jecxz
ds
les
imul
shl
pop
dec
add
add
adc
jg
inc
sbb
push
mov
dec
jns
nop
dec
xor
fiadd
add
pop
mov
int
cmp
inc
jmp
int
(bad)
xor
sbb
inc
adc
(bad)
mov
cmp
and
ss
push
dec
inc
push
test
es
or
(bad)
pop
jb
dec
in
movs
push
ss
cli
pmaxsw
or
imul
push
fsubrp
pop
test
adc
mov
mov
jle
inc
jp
nop
inc
fisubr
in
dec
dec
pushf
dec
xor
push
stos
push
xchg
jno
outs
popf
outs
pop
test
addr16
shr
push
ss
inc
dec
push
add
in
retf
jecxz
inc
xchg
push
xchg
call
mov
adc
shl
fidivr
scas
or
(bad)
jmp
ins
dec
jg
jae
mov
popf
push
dec
call
push
loop
cld
dec
fidiv
add
sbb
adc
cli
mov
sbb
pop
jbe
xchg
loope
aas
imul
dec
jge
mov
mov
dec
push
pop
mov
push
outs
xchg
sahf
xor
jo
and
jmp
xchg
js
lock
arpl
mov
dec
cli
mov
sub
movs
imul
and
jl
jb
test
sbb
add
mov
pop
sub
cli
test
xor
push
mov
js
div
(bad)
sub
mov
mov
inc
cmp
pop
pop
fsubr
sbb
jg
imul
pop
jle
dec
sub
sub
or
push
push
dec
pop
shl
add
jbe
cmps
ret
(bad)
pop
xchg
ficomp
jns
call
push
pop
inc
jl
ss
and
dec
pop
(bad)
mov
mov
and
cmp
inc
pop
sbb
hlt
xchg
shl
fst
push
and
add
fisubr
repz
or
test
jg
je
int3
and
pop
or
xor
mov
scas
push
push
sbb
cdq
(bad)
pop
popf
fidivr
or
or
test
or
movs
mov
jp
jo
outs
and
inc
pop
sbb
cmp
jp
and
push
loop
jp
inc
retf
out
push
or
data16
bound
scas
push
mov
fidiv
test
cld
add
dec
jecxz
xchg
(bad)
xchg
mov
dec
jb
xchg
jl
ss
scas
lods
jo
mov
bswap
dec
jge
ret
or
stc
or
push
sub
add
ss
or
add
pop
popa
fnstcw
cmp
mov
pop
out
push
dec
jb
and
adc
pop
stos
xchg
(bad)
out
addr16
and
sbb
push
inc
sbb
in
jg
ds
mov
sub
pop
jb
push
push
imul
xchg
add
xchg
dec
pop
outs
push
in
jb
bound
push
fnstenv
push
cld
pushf
nop
adc
ins
aad
jg
mov
packssdw
cli
cmp
push
imul
fadd
outs
add
jnp
gs
pop
or
sub
bound
add
pop
mov
dec
or
mov
pop
and
call
dec
dec
cdq
addr16
aad
and
add
jb
push
push
jns
push
sub
test
push
imul
mov
pop
xor
out
repz
or
jg
or
mov
ins
gs
shl
xor
inc
outs
mov
bound
mov
pop
and
bound
js
pusha
iret
test
imul
rcl
mov
das
adc
data16
outs
das
mov
dec
sub
mov
mov
push
fstp
jnp
dec
push
fsubp
movs
repnz
pop
mov
daa
cmps
mov
dec
push
fld
jl
pop
xor
mov
mov
and
cmps
imul
and
in
mov
pop
ds
sub
inc
dec
mov
cmps
shl
into
div
add
push
mov
and
es
or
jns
ds
(bad)
push
and
mov
in
cmp
pop
and
jmp
ror
xor
or
jo
xchg
retf
cdq
sbb
add
test
fisubr
repnz
push
or
leave
loope
push
and
and
add
cmc
es
sti
(bad)
ficom
loopne
fild
mov
ret
shl
pop
mov
ds
lock
inc
mov
lea
retf
ins
jne
(bad)
fsubp
ds
dec
iret
push
std
xchg
mov
fs
jo
or
aaa
xchg
adc
je
mov
xchg
in
test
mov
cmc
leave
sti
dec
push
sbb
adc
fstp
inc
shr
pop
and
in
aaa
rol
sub
dec
sbb
mov
inc
sbb
punpcklbw
(bad)
push
stos
dec
das
mov
push
mov
adc
out
(bad)
add
ffreep
data16
add
push
dec
out
out
sbb
dec
aaa
push
ja
xor
add
aad
or
scas
adc
shr
push
pushf
rcr
aaa
jp
push
add
outs
mov
inc
rcr
jne
sub
or
nop
xchg
dec
dec
pop
leave
out
add
pop
sbb
fnstsw
jp
ins
scas
(bad)
mov
add
lods
ret
push
inc
or
adc
es
xchg
push
pop
push
sbb
push
mov
mov
mov
inc
clc
mov
daa
push
imul
rol
sub
dec
mov
repz
sbb
lods
cld
imul
outs
mov
mov
shl
mov
fild
dec
mov
push
lock
push
push
pop
mov
or
cmp
scas
mov
pop
cmp
fsubr
jbe
adc
scas
sbb
sbb
(bad)
lahf
retf
jp
pop
stos
mov
sahf
and
and
(bad)
mov
mov
scas
(bad)
cld
sub
push
mov
icebp
pop
xor
popa
daa
mov
clc
mov
out
and
fwait
shl
aaa
xchg
ffree
mov
xchg
or
xor
jns
mov
xor
inc
bound
add
je
mov
xor
hlt
xor
mov
jmp
test
inc
ds
sar
ffree
cmp
pop
and
ret
cli
or
cmp
jp
push
adc
add
loop
push
fcmovu
xor
push
out
xor
mov
push
cmp
pop
mov
retf
out
mov
imul
jle
jae
into
dec
dec
ret
ret
jle
inc
aas
sub
dec
lea
in
cmp
adc
push
add
push
ror
pop
pop
clc
iret
adc
std
cmp
add
addr16
sub
call
xor
sub
sbb
add
fild
inc
add
(bad)
dec
add
push
or
pop
xchg
daa
adc
ret
jns
dec
pop
cmp
and
inc
ins
add
inc
and
adc
cs
retf
inc
mov
push
xor
dec
mov
mov
adc
xor
repz
js
fcmovu
in
or
das
jbe
mov
dec
mov
and
xor
sahf
ret
into
pop
pop
dec
shl
xor
leave
mov
stos
shr
jbe
inc
loope
jmp
jle
loop
dec
imul
cmp
push
dec
jo
or
fld
lock
cmp
and
jmp
(bad)
sub
pop
ret
out
xchg
jge
imul
(bad)
retf
or
dec
aas
cld
dec
or
jb
mov
cmp
adc
idiv
sbb
lock
ja
bound
xchg
mov
push
fistp
clc
aaa
adc
cmp
or
add
add
inc
xlat
(bad)
jmp
adc
and
xchg
jno
(bad)
ss
push
add
fucom
push
adc
cmp
out
loope
or
push
adc
dec
push
nop
icebp
cmps
jne
shr
lock
rcl
or
fstp
or
pop
in
lock
mov
fwait
loope
pop
sbb
into
in
inc
adc
sar
cmp
jmp
xor
rdtsc
jo
loop
or
loope
jge
pop
pop
gs
mov
mov
mov
inc
jnp
enter
cs
retf
dec
push
enter
adc
cmp
pop
into
dec
pop
adc
in
push
and
add
cmps
jg
loopne
pop
push
and
or
ror
mov
mov
xchg
push
adc
jmp
or
inc
sbb
inc
jno
pop
mov
cmp
loopne
cmp
cmps
xchg
mul
mov
fnstcw
enter
(bad)
jp
aam
cwde
jle
sub
xchg
retf
mov
shr
pop
jbe
mov
call
mov
push
ja
mov
ins
pop
inc
or
xchg
arpl
fsubr
mov
xor
push
adc
push
xchg
push
cld
cmp
jae
cmp
jb
mov
repnz
jnp
imul
push
mov
js
dec
imul
sbb
inc
outs
or
push
mov
cmp
hlt
lahf
inc
imul
adc
add
pop
sub
rcr
out
(bad)
test
jnp
push
adc
(bad)
push
jne
in
cmp
fbstp
mov
jp
and
dec
loop
xchg
or
dec
mov
pop
mov
jo
and
add
mov
jl
jge
stos
loop
sub
xor
push
out
sar
fistp
ds
adc
sub
push
ss
add
call
shl
fsub
jbe
push
sub
pop
xor
xchg
mov
dec
data16
rcr
mov
or
fstp
cmp
je
push
push
sub
mov
pop
std
pop
jbe
popa
ret
dec
idiv
add
sbb
push
pop
sub
sbb
and
pop
cld
add
push
inc
std
shl
mov
repnz
inc
out
push
jmp
je
add
call
in
push
inc
jp
cs
aas
sub
cmps
loopne
icebp
imul
jne
icebp
js
bound
out
push
mov
inc
mov
stos
ror
push
push
mov
mov
ds
std
jo
cmp
adc
push
add
jmp
ret
mov
ret
popf
xor
cmps
pop
or
mov
mov
jle
outs
push
pop
adc
and
fild
fistp
adc
adc
shr
mov
xchg
je
test
xchg
xor
inc
and
outs
mov
inc
call
jnp
adc
les
mov
loope
ja
hlt
popf
inc
jecxz
xor
cmps
push
ds
mov
test
add
cmp
es
jb
rol
dec
es
neg
es
inc
pop
jg
xchg
push
aaa
outs
icebp
imul
out
inc
xchg
(bad)
mov
sahf
cmp
pop
mov
mov
push
mov
inc
out
mov
adc
add
test
out
add
xchg
jmp
outs
inc
mov
xor
outs
lds
mov
add
stos
scas
sbb
cmp
mov
jo
and
inc
out
call
or
outs
jp
fxch
jne
mov
ss
pop
xchg
int3
pop
dec
aaa
xchg
inc
mov
or
mov
mov
mov
jmp
rol
js
jl
neg
and
into
ror
pop
dec
inc
ja
(bad)
dec
adc
add
xchg
mov
sbb
mov
mov
jmp
push
fisub
cmps
mov
add
ja
xchg
dec
add
adc
jnp
cmp
int3
ret
sub
bound
lock
arpl
or
jle
sub
add
retf
mov
add
inc
xchg
repnz
dec
inc
mov
sbb
jp
pop
or
mov
mov
inc
adc
mov
ret
push
pusha
sbb
ss
or
xor
dec
test
add
jo
mov
pop
ja
sub
je
mov
pop
fistp
dec
or
shl
jo
in
and
add
cmp
add
stos
mov
(bad)
xchg
dec
mov
cmp
and
scas
mov
or
adc
push
jbe
pop
bound
mov
idiv
push
dec
test
pushf
mov
fsubr
xchg
jp
pop
sar
inc
retf
add
jl
mov
cld
push
in
popa
add
dec
retf
cmp
mov
addr16
jp
popa
dec
cld
jle
call
add
ss
ret
rol
cmc
out
xchg
jae
inc
adc
adc
add
inc
or
mov
xchg
aad
inc
iret
add
sub
xchg
mov
push
cmp
(bad)
cmps
jne
jb
inc
xchg
add
jl
shl
(bad)
ja
mov
push
jnp
(bad)
retf
mov
retf
push
aam
mov
aaa
add
icebp
call
mov
fnstsw
push
ja
(bad)
cmp
aaa
and
add
pusha
cmp
xor
pop
sbb
ja
mov
or
sub
sbb
pop
into
(bad)
and
mov
fistp
imul
test
outs
shl
mov
cmp
pop
jp
inc
push
push
shl
xor
bound
dec
cld
mov
inc
sub
dec
loopne
sub
pop
add
ret
mov
sbb
xor
inc
cmp
push
cmp
fisttp
jmp
ret
imul
push
jmp
dec
inc
xor
cwde
add
lds
and
cmp
shr
cwde
add
sti
mov
aas
fwait
es
xor
or
lock
ins
lods
and
mov
pop
push
call
test
outs
add
xchg
lds
inc
ins
adc
xchg
test
xor
xchg
or
loopne
ret
jg
ss
jnp
out
cmps
loopne
jp
mov
mov
scas
aaa
mov
out
mov
xor
push
cmc
ins
push
dec
xchg
dec
xor
jp
(bad)
adc
xchg
dec
adc
mov
add
arpl
xchg
pop
ret
cmp
clc
aaa
inc
std
or
leave
xchg
cmp
dec
loope
cmp
iret
push
pushf
cdq
pop
or
bound
mov
ins
inc
mov
daa
icebp
jns
stc
pusha
mov
xchg
push
mov
adc
test
int
(bad)
push
aaa
jge
and
ds
daa
retf
sahf
xchg
mov
mov
lods
test
loopne
mov
pop
xchg
adc
sub
add
push
inc
dec
or
or
pusha
pushf
lahf
add
cmp
push
clc
leave
(bad)
les
inc
mov
mov
add
push
call
mov
xchg
jecxz
ss
out
pop
pop
fisub
aaa
jmp
adc
dec
inc
js
pushf
adc
outs
mov
add
mov
lahf
xchg
cli
pop
xor
into
mov
gs
xor
std
test
ret
adc
cmps
nop
inc
mov
dec
out
jle
cmp
cmp
push
test
mov
ins
popa
ja
data16
jge
outs
jmp
sbb
or
inc
pop
and
mov
push
push
shr
inc
xchg
inc
popf
jnp
lock
xchg
sahf
cmps
mov
sbb
push
out
pop
pop
add
ins
(bad)
sub
sbb
bound
lds
sub
jae
pop
jle
jmp
(bad)
xor
test
aas
mov
dec
scas
pusha
sahf
pop
mov
dec
cmp
push
inc
sbb
add
pop
mov
(bad)
push
or
dec
adc
bnd
imul
push
data16
jbe
inc
mov
add
das
les
mov
inc
push
inc
xchg
push
xor
sub
inc
jo
inc
fidivr
(bad)
ret
shl
clc
xchg
inc
ss
xor
inc
pop
xor
je
jne
cmp
or
jb
inc
shl
pop
or
das
mov
push
sub
neg
and
jmp
push
stos
pop
mov
enter
push
cmp
xor
add
dec
sahf
lods
outs
and
loop
push
mov
loopne
ss
jns
pop
jmp
or
shl
inc
ret
fsubp
data16
cmp
sub
mov
cdq
mov
inc
scas
fadd
push
out
mov
iret
mov
jb
sub
add
xor
adc
mov
pop
aas
outs
cmp
cmp
xchg
mov
shl
lahf
fidivr
mov
and
(bad)
ror
jae
inc
jo
aaa
inc
and
pop
add
pushf
cs
icebp
pusha
xchg
mov
adc
dec
cmp
mov
sub
and
inc
or
xor
pop
pushf
xor
push
adc
sbb
pop
add
xchg
sub
mov
cmc
sub
pop
jns
fisubr
fild
pop
and
ret
stos
fmul
test
ret
pop
out
ins
adc
sbb
es
sub
add
pop
pop
inc
pop
mov
xchg
test
mov
mov
jecxz
mov
cmp
loopne
fist
mov
sbb
inc
jae
mov
(bad)
imul
or
mov
push
add
mov
ret
pop
sbb
mov
das
or
xor
daa
inc
(bad)
out
nop
mov
(bad)
dec
or
mov
js
mov
je
mov
sbb
cmp
jmp
and
xor
pop
bound
push
adc
mov
je
data16
mov
mov
loop
test
dec
jecxz
int3
mov
sub
call
outs
gs
iret
inc
test
cmps
cmps
loope
inc
xlat
popa
(bad)
imul
pop
cwde
in
out
(bad)
mov
or
rep
push
cli
pop
cmps
push
inc
or
cmp
mov
gs
adc
and
jnp
mov
add
lock
jnp
mov
push
inc
enter
jg
dec
jge
pop
imul
shl
test
mov
mov
or
mov
jle
outs
jle
jmp
jp
aaa
add
repnz
stos
add
add
jg
lods
push
cmc
cmp
rcl
or
mov
push
mov
aas
pop
dec
mov
imul
inc
fs
idiv
mov
mov
adc
mov
js
arpl
hlt
cmp
rcr
arpl
inc
iret
inc
loopne
inc
push
adc
adc
sbb
xor
add
arpl
in
retf
push
mov
cld
aaa
lea
xchg
mov
dec
inc
ffreep
outs
fisubr
push
es
fsubr
inc
jg
mov
shl
adc
cmps
cmps
test
out
mov
movs
xchg
jle
add
pushf
(bad)
mov
sub
repz
ret
gs
mov
pop
mov
sub
cmps
jbe
cld
clc
add
bnd
and
pop
idiv
xor
call
pop
shl
push
push
lods
sub
das
lods
xor
js
xor
inc
pop
(bad)
stc
mov
pop
stos
mov
fiadd
mov
xor
out
call
add
inc
and
cmps
xor
dec
dec
mov
out
xchg
mov
inc
add
jmp
and
dec
sti
jecxz
sahf
mov
movs
inc
cld
inc
dec
and
xchg
jg
stos
jmp
xchg
les
jae
or
add
dec
loopne
std
into
sub
fist
or
inc
push
test
adc
push
mov
sub
ds
stos
sbb
fisttp
stos
inc
ror
push
or
pop
les
dec
or
cmps
push
ds
xchg
push
jbe
xor
add
stos
or
mov
fwait
ja
jno
mov
push
cmp
dec
iret
fwait
(bad)
mov
loop
mov
fwait
sbb
or
fsub
cli
movs
into
imul
cmp
shr
fs
push
fsub
daa
vunpckhps
cmp
pop
arpl
inc
int
mov
add
and
pop
or
sahf
xchg
es
and
xor
stos
dec
xchg
lock
jecxz
and
pusha
lock
and
and
iret
pop
retf
push
and
mov
jmp
jne
fstp
xor
bound
cmps
cmps
sbb
dec
push
(bad)
mov
cmps
data16
push
(bad)
sub
xor
(bad)
aaa
pop
call
sti
imul
mov
outs
push
push
imul
retf
inc
aaa
into
pushf
and
jns
imul
and
mov
fidivr
pop
nop
and
pop
and
pop
mov
mov
xor
mov
mov
nop
scas
jns
sahf
jno
mov
cmps
fwait
aaa
(bad)
adc
cmp
adc
mov
sahf
sbb
dec
outs
inc
test
sbb
jnp
stos
add
pop
inc
gs
adc
sahf
inc
fs
rcr
sbb
push
push
xor
ror
mov
aad
arpl
je
icebp
stos
xor
(bad)
pop
adc
cmps
inc
xchg
inc
shl
mov
imul
shl
loope
(bad)
sbb
push
into
daa
icebp
cmps
test
scas
sub
rol
repz
xchg
mov
rol
jae
adc
call
cwde
stos
in
(bad)
out
das
and
call
adc
sub
stos
ds
mov
push
jp
repz
cmp
cmp
or
add
add
push
push
sar
test
or
out
jns
xor
jp
cmp
stos
mov
mov
ss
jmp
and
outs
mov
neg
icebp
lds
sbb
push
xor
jb
retf
cwde
pop
push
inc
push
lahf
jno
cmp
push
add
xchg
push
das
push
add
sahf
add
adc
push
int
imul
cmc
push
xor
movs
push
jbe
push
mov
out
xchg
test
push
jne
nop
jg
pushf
push
fild
pushf
push
int
(bad)
imul
sub
lock
mov
call
jae
inc
dec
pop
ins
cmp
pop
popa
or
cmps
and
pushf
int3
pop
inc
or
add
sbb
mov
test
pop
mov
or
rcl
mov
rol
out
bound
mov
mov
enter
cwde
imul
cmc
std
xchg
sbb
stc
inc
push
rol
iret
arpl
or
repnz
cmp
out
dec
mov
inc
adc
pop
mov
xor
pushf
aas
int3
push
loopne
pop
pop
dec
mov
test
or
push
xor
sub
cmp
and
cli
mov
adc
xlat
jmp
add
jecxz
out
outs
dec
dec
loope
sbb
movs
xor
xchg
xor
jnp
xchg
jnp
out
iret
sub
ins
hlt
fist
les
pop
ds
add
cmp
adc
mov
add
out
and
rol
shl
repnz
out
xchg
xor
dec
add
out
mov
add
add
add
shl
dec
ja
test
inc
add
aaa
jb
sbb
ins
add
stos
or
inc
ins
adc
cwde
push
mov
ja
pop
add
aas
(bad)
(bad)
data16
or
sub
mov
hlt
daa
push
mov
pop
mov
std
imul
or
inc
ss
sub
fiadd
push
clc
jmp
adc
cvttps2pi
fisubr
fstp
mov
ret
les
ss
pop
jp
inc
and
and
shr
xor
imul
sub
mov
ror
jge
dec
ds
cmp
pop
xor
icebp
or
pop
ret
ins
mov
push
push
iret
mov
cmp
fisubr
pop
sar
dec
pop
xor
xor
inc
rcr
sbb
jmp
cmp
jle
mov
mov
mov
(bad)
mov
push
dec
test
sar
mov
rcl
pop
je
xor
jge
add
jle
div
sub
rcl
pop
shl
inc
fwait
adc
jge
fisub
lods
and
sbb
nop
inc
mov
mov
pop
xchg
lods
xchg
xchg
dec
inc
adc
sbb
and
cmp
ds
ds
sti
push
inc
jl
inc
xchg
sbb
add
cmp
cmp
sbb
lock
cmp
jle
in
out
aas
adc
bound
inc
push
push
outs
loop
or
mov
add
jmp
imul
cmp
sub
(bad)
repz
mov
inc
add
stos
add
retf
enter
sbb
pop
pop
xchg
lods
push
callw
or
test
mov
adc
mov
and
repnz
mov
adc
push
cmp
loope
sub
push
jmp
stos
cmp
pop
cdq
xor
pushf
dec
ret
or
outs
sbb
inc
test
es
fidiv
fisub
arpl
lods
mov
test
outs
imul
xchg
xchg
(bad)
sub
xor
add
sub
dec
retf
fstp
mov
xchg
loope
jne
jp
jmp
pop
xchg
mov
mov
sahf
retf
mov
call
repnz
mov
cs
mov
mov
or
les
fisub
div
and
sub
cli
inc
add
add
xor
mov
in
mov
lods
lock
das
popf
or
pop
or
nop
ds
sub
(bad)
push
ds
pushf
scas
fucomp
loop
sbb
in
pop
loopne
jg
cmp
retf
jle
push
cmp
bound
add
jmp
scas
cmc
pop
push
sar
pavgw
pop
add
push
push
jmp
shr
test
push
idiv
jbe
jge
sbb
dec
in
rol
jle
cmp
sub
movs
mov
scas
pop
(bad)
mov
js
inc
pop
(bad)
ds
pop
push
das
adc
sbb
jnp
jbe
dec
cli
shl
or
(bad)
ja
mov
in
lds
(bad)
mov
pop
dec
jbe
mov
(bad)
in
push
loop
mov
push
jbe
bound
jno
and
scas
mov
aad
in
add
and
push
pop
adc
fild
xor
ret
fild
push
jge
cwde
inc
rol
loopne
inc
jle
call
imul
out
ss
cmps
mov
rcl
push
bound
jbe
ret
fwait
in
ret
sar
shr
or
and
inc
fcomp
scas
gs
xlat
push
dec
mov
(bad)
sbb
and
addr16
daa
mov
cdq
clc
lods
ret
dec
mov
(bad)
push
cmps
stos
jl
mov
add
lods
sub
inc
neg
(bad)
gs
loope
add
outs
mov
xchg
xchg
mov
mov
mov
shl
mov
ins
xchg
mov
push
sub
mov
adc
cs
mov
push
add
(bad)
(bad)
das
mov
add
mov
dec
dec
jmp
in
bound
dec
push
adc
(bad)
outs
ins
out
loop
scas
and
jb
iret
cdq
test
lods
push
dec
mov
cs
cs
leave
jl
repz
push
pop
mov
cwde
pop
jg
adc
pop
imul
mov
ret
out
(bad)
pop
iret
xlat
mov
sahf
out
adc
jmp
retf
mov
lods
and
iret
outs
push
lahf
xchg
push
push
jmp
cmp
ins
leave
cdq
cdq
push
dec
mov
and
mov
xchg
icebp
inc
jno
push
push
sub
fs
pop
outs
add
mov
test
inc
cld
xlat
push
xor
push
pushf
das
xlat
xchg
jns
or
push
add
xor
shr
dec
jecxz
paddsb
aas
ds
xlat
ficomp
cwde
cmp
cmp
sub
add
inc
push
xor
mov
daa
aaa
pop
fist
adc
add
mov
push
push
adc
loope
cs
dec
scas
dec
loop
adc
push
imul
test
pop
pop
mov
pusha
repz
ds
cwde
in
outs
dec
out
inc
call
jecxz
ss
aaa
sbb
jmp
mov
cmp
mov
sbb
cmp
int
arpl
stos
xchg
retf
sub
repnz
push
xchg
push
push
jp
jmp
sub
xchg
push
test
sub
(bad)
xchg
retf
add
push
mov
push
repz
add
addr16
jns
dec
jbe
mov
sub
pop
aas
retf
repz
inc
and
test
jns
dec
jno
mov
push
sbb
movs
pop
add
sbb
pushf
mov
pop
mov
sub
xchg
imul
xchg
xchg
inc
je
xchg
sub
jb
aad
sub
pop
daa
mov
push
ds
loopne
cmp
stc
psrld
test
outs
test
and
iret
das
sub
xor
push
or
fmul
(bad)
push
sbb
addr16
test
(bad)
xchg
add
data16
sbb
mov
cmp
dec
cli
xor
les
push
aaa
outs
test
pop
pop
dec
repz
push
pop
push
inc
retf
pop
(bad)
dec
inc
in
xchg
pop
iret
mov
push
pop
mov
push
dec
add
fidiv
mov
(bad)
push
cs
mov
je
push
xchg
lds
cmps
imul
icebp
std
push
mov
dec
arpl
or
and
fwait
mov
js
ss
xchg
loop
inc
clc
je
retf
sbb
int
push
ficomp
pop
into
(bad)
cs
or
add
gs
jae
(bad)
lahf
shl
ds
push
inc
xor
imul
mov
jbe
mov
and
les
popa
cdq
push
xchg
aas
jle
ds
(bad)
dec
and
(bad)
push
stc
sbb
push
mov
mov
psllw
adc
retf
enter
inc
cs
sub
jne
mov
addr16
mov
add
dec
mov
rdtsc
arpl
jg
or
push
aaa
add
mov
(bad)
mov
jmp
xchg
ret
loope
mov
iret
cmp
mov
loopne
lea
jns
int
xor
stos
cmp
dec
inc
iret
and
adc
clc
add
mov
inc
int
mov
and
xchg
jmp
shl
jp
push
imul
cmps
and
rcl
xor
inc
outs
std
inc
inc
ret
ins
adc
xchg
scas
aad
js
call
inc
out
(bad)
and
mov
push
scas
sbb
dec
jmp
jnp
lea
cmp
enter
lods
iret
stos
pop
fimul
mov
cmc
mov
pop
push
mov
call
sub
cmps
push
mov
push
aas
xchg
cmp
mov
dec
xor
or
fcmove
inc
addr16
les
shl
xchg
adc
das
jecxz
adc
jae
xor
pop
arpl
dec
jge
pushf
(bad)
cmp
add
sbb
(bad)
mov
and
imul
xor
pop
adc
inc
retf
mov
sub
inc
retf
iret
push
mov
in
mov
cmp
cld
mov
into
leave
pop
or
jo
add
and
or
shl
pop
rol
cmp
ins
shl
add
push
add
inc
jle
mov
sbb
daa
call
jg
ficomp
mov
mov
pop
lods
pop
mov
add
neg
jg
sahf
es
leave
xchg
mov
retf
(bad)
sbb
lods
lods
and
push
push
shr
(bad)
push
das
sbb
sub
push
call
rcr
add
push
and
push
out
in
inc
fbstp
ret
or
xchg
sbb
dec
stos
jge
fnsavew
dec
or
and
push
push
(bad)
sbb
loope
xchg
xor
jle
or
iret
and
dec
push
jge
pushf
inc
shl
out
cs
mov
int3
jg
add
fidivr
out
sub
mov
inc
es
inc
pop
fisubr
or
fwait
lea
and
xor
adc
imul
outs
ret
xor
jb
dec
lds
mov
loop
inc
cmp
jo
adc
mov
sahf
(bad)
sub
cmp
pop
idiv
push
sbb
xchg
ss
lock
xchg
dec
pop
mov
adc
das
(bad)
rol
mov
(bad)
cmps
cmps
cmp
and
jle
adc
repnz
push
or
xchg
test
cli
adc
dec
cmps
(bad)
fnstenv
inc
into
sub
push
add
(bad)
mov
jecxz
jbe
jmp
lods
pop
sub
(bad)
call
pop
out
jno
sbb
or
add
jbe
js
mov
test
xlat
mov
sbb
sar
arpl
dec
push
xor
sub
pop
cmp
sub
cmps
adc
pop
mov
ja
xchg
(bad)
inc
xlat
es
sub
sub
add
push
repz
inc
loope
and
add
rol
loop
bound
retf
lods
(bad)
dec
xor
js
fadd
mov
(bad)
loope
mov
ss
dec
cmps
xlat
mov
pop
pop
nop
lahf
scas
in
test
ds
popa
fcom
jmp
cwde
pop
xchg
mov
arpl
ds
push
sbb
call
or
pop
ret
out
adc
and
push
and
lea
stc
mov
stc
(bad)
sbb
mov
pushf
push
rcl
xchg
push
imul
loope
jmp
sti
mov
(bad)
bound
retf
pushw
dec
xor
pop
sub
sub
call
jb
jb
xor
sbb
pushw
jmp
jbe
add
fidiv
in
neg
add
inc
push
inc
out
bound
xor
ret
adc
popa
rol
test
mov
out
cwde
ret
sbb
mov
add
push
out
push
scas
mov
mov
push
mov
adc
or
arpl
mov
dec
test
mov
mov
mov
dec
clc
add
shl
push
sub
test
inc
stos
ds
push
add
xchg
call
and
sbb
jp
or
xchg
pop
dec
iret
pop
stos
imul
cmp
and
and
xchg
pop
cmp
(bad)
fist
rcl
fidiv
aas
xchg
dec
clc
sahf
jmp
dec
test
test
mov
lea
imul
pop
ret
loop
shl
mov
addr16
mov
lahf
lods
adc
and
out
add
jg
popa
movs
add
enter
pop
arpl
fwait
xchg
scas
daa
xchg
iret
push
jns
or
retf
xchg
pop
cmovb
mov
stc
inc
pop
mov
test
inc
out
iret
lds
add
pop
ret
stos
mov
mov
pop
jne
jmp
scas
xor
jmp
rcl
inc
bound
add
mov
jbe
test
lea
sub
call
es
ds
aad
add
mov
xchg
jge
sub
inc
arpl
push
in
xchg
fistp
ja
es
fdiv
jp
cli
test
push
mov
test
inc
jne
cld
mov
movs
lods
ins
mov
imul
out
repz
jb
mov
pop
or
mov
cmp
adc
icebp
pop
shl
loope
fisub
shl
call
int3
in
rcl
loop
sbb
xchg
imul
test
xchg
push
xor
adc
(bad)
iret
and
inc
xchg
pop
(bad)
nop
stos
test
rol
outs
sysenter
adc
sahf
sub
jnp
int
lahf
cli
lahf
retf
jmp
rol
inc
in
mov
std
call
les
out
stos
les
outs
mov
mov
or
or
push
sbb
xchg
stos
sbb
into
jnp
jg
das
fwait
mov
mov
aaa
jnp
jge
shr
push
std
int
jp
das
mov
fucomi
cmp
jnp
sbb
add
ja
and
and
xchg
sub
loopne
dec
inc
mul
mov
or
test
(bad)
push
mov
xchg
fisubr
adc
mov
lods
pop
xor
(bad)
push
adc
cmp
jecxz
adc
pushf
xchg
retf
nop
ja
jg
fsubr
pop
outs
arpl
retf
pop
xchg
push
repnz
inc
xchg
push
push
pop
cli
test
ret
or
and
mov
std
dec
mov
add
cmp
es
push
pop
stos
mov
sti
add
fild
fdivrp
ja
mov
arpl
lods
adc
fld
dec
test
icebp
sub
cmp
clc
loope
dec
jmp
test
retf
cmp
mov
mov
not
fbld
fstp
(bad)
ficom
add
ret
aas
sub
pop
add
test
mov
jno
xor
inc
add
pop
cli
aaa
push
or
xor
lock
jp
mov
mov
add
ins
sti
dec
gs
push
sar
in
adc
dec
mov
push
jle
pop
lahf
gs
ret
lds
ss
fbld
outs
fild
or
sub
or
inc
dec
inc
dec
dec
(bad)
call
cmp
pop
inc
jnp
mov
adc
les
push
jle
mov
outs
jp
or
push
ja
ss
jle
sub
loopne
das
out
xor
bound
lods
or
cmc
jb
pop
or
cs
rcr
imul
pop
mov
(bad)
dec
loop
jmp
lea
ja
inc
push
shl
inc
cmp
cli
or
dec
call
sar
fild
add
jge
ins
loop
jl
sub
test
shl
movs
(bad)
push
lea
pop
gs
in
cmp
aam
cmps
jg
push
add
(bad)
jnp
lds
and
scas
(bad)
xchg
scas
cs
sar
fstp
imul
add
or
cmp
test
dec
bound
jne
adc
and
inc
mov
mov
ds
lea
out
loop
adc
lock
adc
fcomi
(bad)
jmp
data16
or
leave
push
mov
call
mov
dec
gs
jp
ds
inc
lds
shr
ja
mul
or
bound
sub
in
pop
mov
add
mov
xchg
js
jp
fistp
in
in
jmp
test
vmovlps
mov
into
push
ds
data16
add
out
jb
movs
inc
pop
bnd
xor
push
mov
jl
imul
outs
jp
add
xchg
adc
inc
cmps
test
and
pop
scas
cmp
inc
bound
retf
ins
jle
sub
jmp
retf
jb
push
inc
push
clc
jae
(bad)
ins
jecxz
loop
dec
push
push
adc
dec
adc
adc
inc
lea
dec
aam
aaa
push
hlt
adc
adc
jle
cmp
adc
and
stos
ins
stos
daa
cwde
pop
mov
(bad)
repz
push
dec
push
push
add
mov
dec
(bad)
out
dec
pop
adc
outs
mov
xor
dec
clc
xchg
sahf
inc
scas
addr16
in
(bad)
call
and
add
add
pop
or
shr
sar
bound
mov
jbe
or
jnp
push
data16
jl
ficom
jg
mov
nop
mov
and
imul
icebp
pop
ret
xor
rcr
and
cmp
add
clc
imul
xchg
popa
mov
pop
arpl
outs
jmp
push
mov
into
mov
sbb
inc
push
sub
or
pop
inc
jmp
mov
adc
scas
adc
pusha
jns
sbb
jo
sub
and
hlt
scas
adc
push
mov
daa
popa
jp
out
inc
clc
jg
jnp
jle
arpl
add
or
adc
mov
cmps
inc
imul
cli
(bad)
loope
dec
repnz
sub
ja
cmps
mov
jl
add
das
sub
pop
retf
into
inc
sub
mov
pop
xchg
add
pop
jecxz
fild
call
xchg
nop
inc
adc
fs
inc
out
test
xor
les
mov
pop
add
xor
adc
sbb
ret
pop
leave
xchg
and
add
(bad)
xlat
xchg
push
jne
jle
inc
push
fidiv
sbb
ret
dec
mov
cmps
sbb
outs
inc
mov
adc
sahf
adc
ficomp
jge
dec
xchg
es
mov
adc
shl
adc
ss
clc
out
push
outs
scas
or
add
test
xchg
add
sbb
xchg
pop
retf
xlat
xchg
mov
xor
daa
and
and
clc
out
call
outs
dec
dec
xor
push
sub
hlt
mov
pop
or
xchg
add
add
mov
leave
inc
nop
jecxz
sbb
clc
or
inc
sbb
imul
cmps
test
test
add
xchg
mov
mov
push
dec
xor
icebp
scas
mov
or
dec
sub
ss
jbe
cld
sbb
adc
(bad)
call
inc
pop
push
sbb
sub
addr16
adc
fld
stc
lods
mov
mov
test
pop
xchg
push
fsubp
sar
repz
es
outs
xchg
add
jp
push
movs
mov
aas
push
loop
and
enter
inc
and
and
sub
sub
ror
pop
pop
push
sahf
leave
test
scas
dec
sar
adc
cmps
fistp
arpl
adc
in
out
es
push
(bad)
gs
dec
push
xor
jmp
fistp
rcr
jle
pop
mov
loop
and
push
out
out
ins
rol
sbb
jno
scas
sbb
xor
mov
(bad)
push
cmp
sub
fisub
push
vmread
push
imul
mov
push
inc
xchg
sub
fwait
inc
or
and
mov
jg
pop
xchg
inc
xchg
(bad)
leave
xchg
(bad)
repnz
std
ja
popa
cmps
xor
mov
or
add
cld
jne
xlat
retf
ss
ds
adc
mov
and
test
(bad)
out
sbb
cli
fs
mov
dec
mov
dec
loopne
xchg
mov
sbb
lods
call
xchg
or
xor
dec
(bad)
and
or
add
add
mov
or
sbb
add
push
in
or
(bad)
and
push
adc
push
nop
dec
dec
pop
fisub
adc
outs
mov
inc
scas
fimul
(bad)
mov
into
int
cmc
inc
add
adc
push
rol
adc
mov
push
mov
jo
ins
mov
or
pop
adc
xor
adc
fldcw
push
aaa
push
retf
pop
jo
push
ins
das
jmp
push
mov
mov
std
cld
push
arpl
scas
cmp
sub
out
loopne
into
and
ret
fidivr
dec
dec
xchg
js
and
je
fnsave
jno
leave
fimul
iret
mov
mov
(bad)
jl
pop
sbb
mov
mov
or
xchg
adc
or
mov
push
jg
xor
dec
jmp
mov
bound
push
mov
and
push
test
sub
push
mov
shl
xchg
mov
sbb
pop
js
out
push
push
sbb
push
or
xchg
dec
mul
cmc
inc
dec
fild
mov
pop
call
jae
popf
mov
jne
fistp
and
mov
xor
rcr
xor
fwait
xor
pop
xchg
int3
retf
inc
push
cmp
popaw
adc
cmps
dec
ficomp
movs
push
xchg
dec
arpl
jmp
div
push
shl
add
cli
pop
or
test
mov
out
pop
inc
in
or
rcr
ss
cmp
(bad)
mov
loopne
mov
xchg
add
ins
cmp
scas
inc
imul
out
stc
ss
inc
scas
imul
hlt
mov
pushw
push
xchg
cmp
inc
adc
and
ss
dec
ja
pop
dec
std
fs
mov
mov
push
adc
xchg
cmps
lock
leave
cmp
push
mov
inc
mov
pop
mov
or
iret
mov
adc
add
add
sti
add
dec
add
jnp
sbb
and
daa
jno
rol
and
lds
cli
pop
out
sbb
out
xchg
mov
push
call
inc
jo
jle
pop
jno
icebp
aas
push
add
movs
jb
push
jp
push
mov
mov
pop
daa
in
jmp
xlat
xchg
pop
xchg
sbb
test
bound
and
mov
jne
(bad)
and
push
sub
push
lods
xor
pop
loop
inc
inc
jl
leave
repz
stos
sub
push
mov
jno
push
imul
sbb
cmp
push
pop
das
fsub
sub
jp
outs
push
jl
adc
jp
retf
jns
xor
xchg
mov
shl
fs
(bad)
mov
or
jo
pop
pushf
pop
shr
stc
iret
mov
daa
add
faddp
or
dec
lea
icebp
fidivr
dec
or
fnstsw
sbb
lods
repnz
sahf
and
and
sbb
pop
sub
xor
test
mov
push
dec
mov
loope
mov
mov
sahf
inc
sbb
dec
inc
mov
(bad)
jb
mov
adc
cmp
pop
mov
push
or
or
mov
or
cld
xor
(bad)
fiadd
repz
fidiv
sbb
cmps
mov
jle
mov
ja
nop
int
mov
pop
cmp
cmp
test
sub
cld
inc
sar
call
dec
push
test
push
pop
pop
sbb
ds
jno
test
clc
ret
or
push
cmp
or
mov
or
xchg
(bad)
retf
xor
stos
ja
jle
ins
push
push
sbb
cmp
pop
jg
xchg
das
xchg
iret
or
dec
ss
enter
and
add
sbb
inc
jb
or
ds
and
pop
pcmpeqb
out
cs
pop
jbe
mov
push
jno
push
fs
add
xchg
fs
dec
sbb
retf
retf
sub
add
jb
cld
sbb
mov
xchg
retf
out
and
cmp
inc
mov
imul
add
adc
popa
lahf
inc
xor
adc
(bad)
pop
cs
retf
shl
stc
rcr
jp
jl
sbb
sub
pop
and
mov
test
sub
inc
pop
(bad)
sbb
dec
ds
dec
mov
xchg
popa
jo
outs
sbb
inc
outs
sbb
dec
dec
call
fcmovb
inc
cmp
xchg
mov
mov
stc
sub
push
adc
mov
sub
xchg
jbe
xor
cmps
or
jns
jno
out
scas
es
inc
xor
dec
adc
mov
imul
call
mov
xor
es
(bad)
mov
jbe
fs
ror
cs
mov
adc
sbb
daa
lea
push
addr16
call
push
bound
mov
inc
in
add
imul
fild
dec
inc
xchg
jbe
cmp
pop
arpl
scas
fiadd
aas
inc
adc
ret
cli
(bad)
push
(bad)
jmp
add
sbb
push
jmp
sub
xchg
ins
hlt
add
leave
punpckhdq
mov
ds
cmps
pop
dec
ret
jae
push
std
dec
sahf
add
dec
jl
or
add
fcmovb
adc
inc
rol
mov
sub
fwait
mov
stos
mov
loope
xchg
bound
pop
rol
scas
xchg
hlt
call
addr16
retf
call
push
stc
add
ds
imul
scas
mov
movs
mov
dec
cmps
test
and
or
xor
push
gs
inc
add
mov
cmp
loop
scas
pop
test
cmps
test
ror
enter
xchg
jns
daa
ds
lock
repnz
popa
nop
inc
xchg
mov
and
imul
or
leave
and
add
das
push
or
xor
xor
mov
pop
mov
pop
ret
cmps
jo
jmp
cmp
(bad)
fidiv
push
lock
xor
dec
sar
cmp
loop
xchg
mov
ficomp
test
in
mov
push
inc
mov
retf
int3
push
icebp
test
cmp
and
dec
jno
xchg
mov
(bad)
mov
adc
xchg
fldenv
sahf
dec
mov
jae
xor
cmp
add
psrad
push
or
test
es
add
mov
shr
(bad)
mov
mov
sysexit
push
inc
rol
into
lock
add
cmp
dec
shr
mov
xchg
sbb
add
adc
cmp
popf
popf
ss
mov
mov
mov
mov
pop
fadd
cmps
sbb
imul
daa
dec
ficom
scas
pop
ror
lods
movs
repnz
xchg
retf
jb
sbb
stc
cmps
daa
popf
adc
xchg
pop
push
mov
in
bnd
sbb
push
out
pushf
push
adc
call
nop
xchg
push
popa
sub
cmp
jns
lea
test
xchg
daa
iret
dec
jno
test
in
repz
rcr
scas
push
mov
js
jmp
jmp
frstor
repnz
xlat
bound
sub
xor
dec
mov
xor
gs
inc
call
enter
popf
mov
mov
cmp
call
fisttp
dec
push
dec
je
(bad)
jae
rcr
jl
mov
and
popf
xlat
jns
sub
mov
pushf
push
dec
jp
mov
pop
les
test
call
jp
fist
rol
daa
outs
pop
and
jge
popa
jmp
pop
scas
inc
xchg
dec
ja
ds
cmp
ja
dec
(bad)
mov
xchg
iret
push
fadd
in
iret
dec
mov
xlat
stos
fs
test
xchg
jp
test
retf
xchg
iret
dec
into
sbb
mov
test
leave
test
(bad)
push
stc
pop
mov
rol
cs
push
call
dec
push
xor
popf
pop
pusha
ss
and
std
inc
jl
cmps
jne
sub
push
adc
or
fist
cs
push
mov
mov
or
test
int3
mov
adc
jg
mov
aaa
add
gs
adc
xchg
icebp
call
fbld
fnstsw
xchg
es
inc
sub
mov
ja
rcr
and
cmp
bound
(bad)
push
and
and
push
push
cwde
adc
inc
push
mov
sub
ds
pop
xor
xor
adc
retf
test
(bad)
dec
cli
and
jecxz
lds
pushf
mov
xchg
hlt
icebp
movs
call
adc
jl
ret
adc
xchg
int3
lods
and
jae
jo
mov
jno
repz
or
hlt
mov
scas
loopne
xchg
addr16
pop
test
rcr
sbb
scas
jbe
mov
xor
out
in
aad
jo
adc
jecxz
or
push
test
mov
push
adc
out
mov
cmp
nop
or
(bad)
ss
push
ds
ds
sahf
pushf
pop
repz
xor
add
jl
clc
sbb
mov
sub
push
cmp
test
jo
cdq
(bad)
leave
sbb
sbb
add
outs
push
aas
pop
jbe
jne
add
xchg
int3
jp
jmp
lock
mov
push
shl
and
rcr
and
xchg
ja
jecxz
imul
push
retf
(bad)
fs
mov
inc
inc
dec
pop
cmc
dec
xchg
jecxz
pop
mov
dec
and
sbb
xchg
cmp
frstor
or
sbb
std
sub
ja
inc
and
lock
lahf
repnz
ds
push
mov
sub
arpl
pop
stos
in
mov
out
adc
cwde
scas
or
or
inc
loope
mov
or
into
fist
mov
or
push
leave
push
push
xchg
into
shl
push
and
bnd
push
jns
push
jmp
jge
adc
out
inc
leave
sub
sar
sub
cli
pushf
xchg
or
inc
sahf
fidiv
mov
inc
lods
add
int
dec
add
push
add
hlt
cmp
mov
pop
in
enter
loopne
jmp
sahf
pop
push
dec
ret
and
repnz
mov
aam
sub
sti
cmps
test
jno
mov
rol
xchg
cwde
inc
jp
(bad)
outs
sahf
inc
mov
or
add
mov
aas
jb
adc
xchg
aas
imul
rol
test
inc
inc
ss
push
sbb
sub
inc
pop
ss
xor
lds
push
aaa
sbb
pop
push
fdivr
fdiv
lahf
outs
push
and
sub
cmp
mov
and
push
enter
dec
jp
lods
pop
or
cmp
add
push
mov
not
cmps
add
or
xchg
addr16
pop
push
test
pop
mov
ds
inc
push
outs
push
xchg
test
mov
sbb
dec
test
mov
das
mov
jb
mov
or
popa
mov
ss
pusha
rcr
not
leave
push
imul
push
out
push
bound
xchg
mov
test
pushf
nop
retf
or
bound
push
mov
pop
enter
out
push
cmp
push
bound
push
jg
cmps
cmp
iret
mov
shl
xor
into
es
test
mov
mov
push
pop
call
(bad)
mov
(bad)
ror
sub
mov
mov
(bad)
in
aaa
push
fs
and
mov
mov
iret
cs
adc
fs
jae
out
xchg
(bad)
cmp
enter
test
inc
mov
pop
out
sti
(bad)
xor
and
or
jmp
and
add
mov
and
pextrw
xchg
and
(bad)
sbb
das
iret
push
sbb
pop
scas
push
scas
sbb
sti
sar
inc
jle
rcr
push
sbb
cmp
and
pop
repnz
jg
cwde
jo
nop
out
pusha
push
inc
ret
jl
sahf
hlt
xchg
dec
xchg
(bad)
lea
xor
ret
mov
or
adc
ins
inc
test
add
mov
clc
(bad)
jmp
push
adc
dec
pop
inc
and
std
pop
sar
clc
add
cs
stos
cmp
ds
gs
mov
pop
sub
out
test
pop
repz
pop
dec
das
repnz
out
sbb
rcr
or
dec
outs
repnz
daa
sub
pop
pop
add
jg
xor
xchg
inc
sub
cmp
addr16
das
xchg
fidivr
(bad)
test
dec
mov
mov
into
mov
and
sub
or
fcmovne
mov
ret
sti
sbb
xchg
mov
mov
mov
nop
inc
sub
push
inc
mov
xchg
pop
mov
cmp
push
mov
xor
loopne
ret
lahf
push
mov
lea
jp
jecxz
push
xchg
into
mov
icebp
inc
xchg
(bad)
jmp
jl
cmc
push
add
add
jb
mov
inc
(bad)
mov
in
mov
pop
lock
xchg
into
stos
(bad)
call
ss
(bad)
daa
pop
adc
dec
xor
add
mov
call
or
mov
(bad)
sub
dec
push
jmp
call
and
and
shr
jg
push
push
push
push
mov
jecxz
adc
stc
pop
xchg
mov
mov
mov
cmp
jbe
fnsave
imul
jae
out
popa
jmp
and
adc
xor
sahf
adc
cwde
repz
shl
int3
(bad)
call
fwait
mov
shr
mov
imul
add
ds
push
mov
add
retf
add
jno
stos
jo
int3
mov
inc
fimul
ins
pop
push
sbb
out
test
ins
jne
std
ins
rol
and
sbb
dec
pop
dec
in
mov
cmp
push
test
pop
pop
mov
ds
mov
mov
pop
inc
inc
das
(bad)
rcl
xor
addr16
adc
pop
or
scas
cld
outs
(bad)
fisubr
repz
std
scas
loop
sar
add
mov
mov
aam
jle
arpl
dec
jecxz
gs
inc
cmps
mov
enter
repz
jmp
gs
mov
mov
or
add
call
mov
xor
loopne
call
nop
packuswb
lock
sub
fiadd
stos
lods
sbb
xchg
or
mov
mov
mov
inc
dec
push
(bad)
jle
call
inc
and
xchg
loope
or
adc
and
cld
cs
icebp
mov
sbb
pop
inc
aas
pop
pop
lea
xchg
test
adc
shl
mov
push
bts
adc
bound
stos
cmp
inc
add
push
fistp
test
mov
enter
movs
and
or
pop
push
jecxz
iret
xlat
mov
push
and
imul
ja
sub
jl
add
push
pusha
pop
adc
cli
daa
add
add
addr16
outs
adc
add
popf
xchg
into
push
xchg
xchg
xchg
std
fucomip
inc
fs
test
xchg
adc
outs
jp
adc
xchg
hlt
cmps
xchg
loop
rcr
popa
rcl
push
bound
pop
jo
pusha
xchg
shl
jmp
and
pop
ret
(bad)
mov
lock
jecxz
mov
shl
imul
dec
sbb
fidivr
mov
fild
rol
mov
inc
in
fist
pop
es
outs
in
pop
mov
test
dec
dec
cmps
rcr
retf
(bad)
repnz
imul
das
sti
out
popa
lea
gs
jp
hlt
lods
jbe
push
lock
mov
arpl
int3
adc
push
imul
xchg
jle
sub
mov
lea
(bad)
sub
xchg
mov
ficom
sbb
test
icebp
stos
into
nop
pop
adc
adc
inc
sbb
lods
cmc
stos
dec
mov
scas
fdivr
loope
cmc
sahf
(bad)
movs
pop
adc
add
mov
fnstcw
xchg
imul
mov
jno
test
push
add
push
jb
xor
inc
jbe
div
call
sar
push
sbb
lahf
add
add
pop
inc
cmp
sar
mov
mov
xchg
inc
bswap
into
aas
test
and
data16
cmps
shl
data16
lds
jle
(bad)
in
sub
aaa
lahf
jnp
and
push
(bad)
in
int3
fisub
into
mov
push
adc
pop
cmp
retf
fisttp
cmp
add
loopne
cs
shr
inc
jmp
es
jle
and
into
imul
cmp
lock
mov
sub
ret
xor
push
cmps
pop
inc
js
ficom
repnz
imul
pushaw
xor
push
dec
dec
outs
sti
cdq
fidivr
mov
xchg
xlat
les
retf
rcl
outs
shl
aas
jmp
repz
mov
sbb
movs
jg
xor
outs
mov
inc
scas
test
push
lds
retf
ins
pop
jle
mov
js
leave
lock
in
sahf
arpl
rol
or
fisubr
xchg
data16
and
lahf
loop
inc
les
and
(bad)
test
dec
es
cwde
jno
dec
and
lock
shl
cmp
dec
fwait
pop
mov
pop
cmp
adc
aas
lods
aas
pop
lods
mov
into
sar
sbb
push
push
pop
sub
gs
test
fcomi
or
sub
and
adc
add
cmp
or
push
push
ss
pop
push
repz
(bad)
and
cdq
jnp
shr
or
add
xchg
mov
ins
adc
sbb
adc
inc
imul
cmps
pop
lods
lahf
aaa
shr
xor
nop
mov
cmps
add
inc
outs
and
xchg
outs
sub
out
(bad)
(bad)
mov
lahf
xchg
(bad)
aam
add
cmp
xor
(bad)
mov
jle
add
dec
pop
jle
mov
neg
xor
adc
int3
cmps
mov
(bad)
rcr
orps
pop
jno
jnp
adc
add
neg
test
dec
fisub
xchg
pop
mov
cmps
mov
repnz
iret
pop
cmp
xchg
iret
es
dec
push
push
push
cld
and
adc
call
sbb
loopne
outs
pop
adc
mov
lock
or
in
bound
mov
or
mov
sbb
push
out
call
xchg
adc
jmp
out
(bad)
ins
pop
push
xor
or
mov
js
jne
fiadd
adc
xchg
jae
int
mov
mov
or
pop
jno
push
out
add
stos
push
add
xchg
in
ja
fcmovu
cli
cld
neg
inc
adc
cli
fadd
scas
cmp
sub
jns
adc
int3
sub
daa
push
add
mov
jnp
cmps
jae
or
bound
cmp
inc
hlt
sar
inc
jb
sbb
mov
or
in
inc
xchg
dec
add
lds
adc
xor
sub
jbe
jle
push
into
fisubr
repz
and
ins
adc
rcr
adc
mov
inc
mov
ret
stos
sbb
popf
lods
xchg
jp
xchg
scas
ss
dec
call
popa
inc
sbb
fcos
mov
stos
outs
mov
mov
(bad)
pop
test
cli
mov
rcl
fs
test
arpl
iret
ss
sbb
and
loop
xor
scas
xchg
mov
add
aas
data16
and
sbb
data16
inc
mov
hlt
pop
cmps
or
pop
out
mov
xor
les
loop
mov
and
add
and
sysret
aam
xor
or
sbb
sti
or
dec
mov
jb
sahf
xchg
inc
xchg
ja
outs
push
cmp
jb
inc
mov
xor
jb
and
fild
inc
cli
dec
cmp
add
add
cmp
jb
mov
cmp
lods
ret
(bad)
and
scas
jg
mov
mov
add
sub
in
mov
ret
(bad)
jge
mov
adc
(bad)
test
movs
outs
sahf
xchg
out
pop
push
or
fmul
(bad)
outs
sub
iret
ja
fist
aad
and
mov
or
mov
shr
ss
or
sbb
jbe
add
xchg
outs
dec
nop
fistp
jae
mov
xchg
arpl
stos
pusha
cwde
test
add
jle
pop
mov
add
inc
pop
repnz
loop
jp
sbb
(bad)
push
mov
push
es
aas
sbb
div
aas
mov
add
jmp
xchg
xchg
out
repnz
gs
outs
gs
pop
scas
lods
clc
mov
dec
push
mov
jns
mov
sbb
aas
sub
cmp
mov
enter
lahf
xchg
retf
jmp
push
inc
bound
sub
out
pop
sub
jb
inc
repnz
xor
inc
jbe
data16
pop
jg
mov
or
sbb
cmp
mov
fist
mov
mov
mov
xchg
cmc
cld
add
fdivrp
add
sub
pushf
out
push
dec
push
(bad)
into
add
pop
lock
jg
add
dec
push
cmp
movs
mov
ins
push
push
inc
retf
sbb
pushf
add
loope
dec
repz
dec
fisubr
es
les
pop
mov
mov
fbld
push
fs
cmp
adc
sub
ficomp
mov
or
push
pop
adc
push
push
pop
loopne
sbb
ficomp
dec
ret
mov
ja
leave
pop
jb
xchg
add
ss
fimul
adc
xor
sbb
(bad)
adc
inc
scas
push
adc
js
push
push
jle
push
mov
cli
sahf
outs
mov
or
imul
cmp
jnp
adc
gs
arpl
es
adc
ja
mov
data16
sahf
shl
jbe
out
js
fbld
fidiv
or
push
inc
scas
mov
mov
jp
xchg
cmp
test
lods
rol
stos
ss
mov
pop
rcr
(bad)
push
sbb
ds
stos
sbb
cmps
xchg
jle
and
out
fiadd
inc
icebp
and
mov
add
sub
mov
add
sbb
sub
cdq
repnz
mov
int
dec
ret
outs
sbb
lods
inc
push
push
or
jle
mov
cld
mov
jmp
add
jbe
repnz
adc
add
mov
mov
adc
xchg
stos
pop
and
sub
in
fwait
(bad)
mov
jecxz
mov
push
pop
in
xor
pop
mov
sub
xor
bound
pop
cmp
aas
cmp
xchg
xor
fnop
cdq
add
jo
push
imul
gs
loopne
fs
push
and
mov
xor
inc
ltr
jbe
gs
xchg
ret
fist
xchg
cs
fiadd
jmp
std
nop
(bad)
daa
(bad)
push
sbb
sub
push
adc
inc
and
scas
sbb
aaa
mov
mov
cmp
jo
loopne
jmp
stos
mov
into
jmp
lea
cmp
jecxz
loopne
add
mov
push
stos
es
test
sar
xor
pop
stos
rcr
pop
fisub
jo
push
jne
js
(bad)
push
push
adc
ret
rol
out
std
or
fcom
cmps
sub
mov
mov
jb
or
push
ret
xor
mov
sbb
add
ret
and
shl
pop
cs
stos
mov
ja
ret
into
je
fst
adc
adc
sahf
lods
pop
add
sbb
sbb
enter
mov
adc
adc
and
dec
mov
push
cmp
lea
and
pop
xchg
ins
xchg
sbb
sub
pop
adc
nop
xlat
jo
fisttp
dec
ins
js
out
fsub
dec
inc
jb
jp
lods
adc
jns
adc
jle
mov
inc
popa
adc
ds
xor
ror
cmc
(bad)
std
xchg
(bad)
or
ret
dec
xor
xor
fwait
cmp
scas
mov
enter
enter
clc
das
clc
and
push
sub
cwde
dec
dec
fist
pop
call
ss
adc
xchg
jne
dec
mov
sbb
dec
inc
xor
in
add
mov
and
(bad)
ins
ror
add
add
mov
dec
jo
ret
pop
rcr
mov
(bad)
mov
leave
push
jg
cdq
xchg
fisttp
mov
neg
dec
add
xor
test
inc
xchg
cmp
dec
mov
fld
dec
popa
inc
outs
in
or
inc
jb
add
pop
adc
adc
pop
xor
mov
adc
repz
jne
add
pop
ret
or
push
shl
mov
in
mov
jle
out
loop
cmps
out
fidiv
dec
jp
adc
push
or
leave
push
jle
mov
rol
mov
sahf
adc
dec
dec
adc
push
add
cmp
pop
xchg
test
pop
xor
inc
ins
fiadd
jle
movs
jb
ds
mov
(bad)
push
mov
aas
(bad)
sbb
push
jo
es
add
pop
repnz
pop
jg
pop
mov
adc
test
jne
push
mov
aas
test
call
or
in
jo
ss
jne
push
daa
sub
sahf
adc
mov
add
push
jg
hlt
(bad)
sti
dec
xor
rcr
push
push
aaa
push
aaa
or
cld
or
xchg
push
pop
lea
push
and
xor
call
sbb
jg
pop
retf
xor
lods
sti
sbb
push
xchg
test
das
xchg
mov
mov
xor
mov
and
and
inc
xor
and
dec
pop
shl
jg
sub
xor
push
add
xor
and
add
jmp
sub
scas
add
call
adc
mov
adc
xchg
xor
sub
add
dec
adc
jnp
and
dec
cmc
jne
jge
push
push
dec
dec
loope
xchg
xchg
repnz
retf
movs
test
pop
mov
pop
jp
fcom
sbb
sbb
scas
mov
add
dec
inc
adc
out
mov
sub
(bad)
call
sbb
repnz
leave
in
mov
xor
aas
xchg
fiadd
enter
sub
retf
jno
xor
cmps
add
mov
mov
jp
cld
rol
jmp
scas
(bad)
push
retf
sahf
add
cmps
jmp
cdq
inc
dec
pop
mov
dec
loop
xor
outs
mov
ins
aad
adc
push
fs
mov
cs
or
cmp
push
or
lahf
mov
fs
loope
(bad)
fisttp
ja
mov
ds
iret
fwait
sbb
push
mov
ficom
inc
jb
mov
rol
(bad)
aad
xchg
xchg
and
gs
(bad)
mov
jp
push
mov
xchg
mov
mov
adc
mov
dec
or
jecxz
gs
xor
fsubp
sbb
mov
dec
fidivr
mov
or
inc
or
and
jb
cdq
jb
push
sub
arpl
into
mov
and
push
(bad)
imul
push
lds
repnz
dec
add
repz
xchg
pop
xor
lea
add
xchg
scas
jnp
push
add
mov
sub
or
fnsetpm(287
push
fwait
push
hlt
add
sbb
stos
xchg
std
inc
push
add
dec
push
mov
mov
push
(bad)
fistp
adc
and
bound
xor
or
mov
loop
push
or
sub
mov
mov
mov
sbb
dec
imul
fldcw
mov
fndisi(8087
(bad)
ins
jbe
retf
push
inc
or
mov
adc
cmps
js
aas
pop
xor
jmp
push
ss
cmp
(bad)
cmc
je
cmps
out
push
jns
xchg
or
pop
lock
repnz
push
xchg
mov
pop
mov
dec
in
iret
out
push
lds
arpl
(bad)
call
out
xchg
popa
jecxz
dec
xor
cmc
sub
es
fstp
pop
push
enter
xchg
(bad)
sub
pusha
adc
outs
mov
pop
dec
shl
mov
adc
pop
lods
scas
adc
mov
test
or
xor
divps
cmps
arpl
imul
inc
and
jbe
out
or
loop
push
sub
inc
and
mov
jge
jle
data16
je
sbb
lds
ss
clc
punpckhdq
ja
lahf
mov
cmps
xchg
cmc
das
cmp
jle
sbb
outs
hlt
ja
call
dec
rol
mov
mov
jmp
push
imul
pop
cs
xor
or
pop
pop
adc
sub
sub
popf
or
fs
ret
mov
mov
or
mov
or
scas
mov
sub
sahf
leave
sbb
stos
pusha
std
inc
or
mov
dec
push
jb
jle
dec
jp
jle
mov
pop
sbb
xor
movs
xor
xor
and
out
jb
fiadd
outs
ds
(bad)
pop
das
mov
add
push
or
dec
mov
mov
mov
adc
ins
pop
jae
add
test
loop
add
or
cmp
sub
adc
push
inc
ror
mov
add
add
fwait
inc
push
test
mov
loopne
mov
jmp
xor
enter
add
bound
mov
pop
scas
push
lahf
ds
or
or
or
pop
inc
pushf
sbb
sbb
add
aaa
mov
jbe
mov
xchg
and
cs
dec
retf
push
repnz
mov
aam
xchg
mov
leave
pop
movzx
push
inc
and
xor
cmp
outs
xchg
cs
sar
pop
push
adc
rol
cmps
pop
xchg
jle
inc
cli
or
in
push
aaa
dec
jp
add
pop
mov
push
push
or
inc
mov
cmps
add
ins
scas
sbb
mov
or
mov
mov
mov
icebp
int
add
mov
pop
lods
push
mov
mov
ds
push
mov
pop
fdiv
mov
cmps
pop
xor
xor
or
add
jmp
or
mov
xchg
fisub
imul
mov
fs
inc
out
popa
sti
cwde
rcl
ins
mov
pop
pop
iret
cli
fimul
lods
retf
stos
outs
jp
pop
adc
dec
mov
sub
pop
test
push
jmp
cmps
mov
enter
pop
mov
scas
(bad)
cmp
aaa
pushf
xchg
sbb
jge
add
adc
adc
std
sbb
mov
dec
aas
stos
loopne
add
icebp
mov
iret
and
(bad)
or
jmp
jecxz
test
and
pop
imul
test
sub
pop
add
jl
mov
cmps
out
dec
mov
dec
add
xor
add
cmp
in
imul
pop
push
push
adc
xchg
ds
shl
sbb
jmp
jg
cmp
push
arpl
call
inc
cmp
ds
dec
dec
dec
adc
or
ins
sahf
movs
imul
ja
ds
push
cmp
xor
cwde
mov
out
push
jge
add
xor
outs
or
or
out
fistp
dec
add
test
pushf
inc
int
rol
call
aad
jo
adc
and
shr
call
es
aad
scas
mov
ficom
ds
jl
hlt
jmp
pop
lea
out
scas
cmp
dec
push
dec
or
xor
std
out
loop
mov
xlat
xchg
jmp
fs
mov
stos
movs
scas
add
jg
push
inc
dec
adc
mov
out
mov
clc
sub
stos
mov
cmps
push
imul
or
popf
mov
xor
mov
add
push
and
scas
add
mov
mov
fcmove
mov
mov
mov
jo
xchg
cmp
mov
sub
stos
dec
mov
bound
adc
pop
push
sub
sub
and
and
and
or
pop
inc
inc
xor
adc
dec
daa
js
jo
mov
ret
xchg
dec
mov
push
jle
mov
das
inc
frstor
pop
mov
mov
bound
cmp
div
adc
cli
mov
stos
jp
xor
jbe
jp
icebp
pushf
xchg
inc
adc
ficomp
loopne
into
rcl
fst
push
or
test
sbb
leave
pop
loop
mov
xchg
push
test
lds
stos
and
mov
cmp
mov
xchg
ret
sbb
cli
jmp
imul
ss
daa
inc
xor
push
(bad)
adc
jno
and
and
mov
jo
fs
dec
mov
and
jg
dec
or
push
dec
mov
jo
mov
mov
clc
xor
dec
mov
imul
add
jne
clc
lea
mov
inc
cmp
xor
sbb
pop
cli
fdiv
ins
cmp
or
pop
mov
adc
jl
dec
dec
push
pop
scas
or
adc
repz
(bad)
mov
retf
jg
rol
jb
in
xchg
jo
aad
xor
pop
movs
out
outs
push
loope
add
add
ret
inc
add
jmp
mov
cmp
rcr
inc
ins
cli
push
add
xchg
sub
retf
xchg
fnstenv
jmp
add
fidivr
xchg
scas
cli
(bad)
call
jns
and
dec
mov
adc
cmp
add
inc
adc
fnstcw
ret
pop
ficom
push
adc
cmp
movs
adc
add
sub
cmp
xchg
sub
(bad)
ins
cli
xor
adc
mov
or
cmp
in
pop
lahf
dec
mov
stos
pop
push
iret
pop
mov
pop
lock
xor
(bad)
jmp
jmp
lods
(bad)
mov
or
xchg
add
sub
retf
or
inc
sub
(bad)
mov
sbb
(bad)
add
lods
and
push
push
lock
outs
dec
fidiv
xchg
adc
pop
xchg
cmp
dec
inc
push
pop
pop
pop
ds
add
pop
mov
hlt
xchg
fisub
or
test
add
adc
inc
loop
(bad)
dec
sbb
xchg
mov
or
jbe
das
mov
addr16
stos
jg
cmp
aas
adc
mov
add
imul
xor
xchg
mov
bound
xor
inc
add
fwait
into
shl
sbb
je
pop
cmc
je
pop
jo
out
dec
ret
jb
aaa
lds
xor
xor
mov
and
xchg
push
push
push
enter
(bad)
jg
push
adc
mov
dec
mov
jb
mov
jb
bound
das
cli
jp
xchg
xor
jo
pop
mov
mov
mov
cld
pop
shl
sub
xchg
xor
iret
stc
stos
test
jns
jmp
add
aaa
pop
push
shl
dec
imul
pop
fisttp
and
inc
leave
push
push
js
xchg
scas
aaa
(bad)
and
add
cmp
jp
jg
pop
aam
(bad)
jmp
shl
or
stos
mov
mov
outs
adc
inc
or
adc
add
rcl
mov
outs
dec
mov
jle
add
push
test
cmp
daa
add
mov
and
xor
test
movs
inc
cdq
imul
cs
pop
xchg
mov
stos
cdq
imul
ret
adc
and
cmps
int3
outs
lahf
jle
mov
aaa
pop
setg
dec
dec
or
out
cmp
pushf
add
add
(bad)
movs
aas
add
add
mov
mov
rol
xchg
sahf
xchg
fstp
cld
mov
outs
nop
cmp
cli
pop
imul
imul
sub
popa
mov
lock
ins
dec
pop
inc
dec
fistp
adc
pop
pop
jecxz
addr16
or
mov
adc
mov
and
adc
push
xor
mov
add
lods
push
pusha
mov
cmps
lods
scas
cdq
cli
retf
sar
and
xchg
dec
fcom
jb
pop
dec
sub
nop
test
cdq
push
shr
test
mov
push
mov
test
outs
push
data16
jne
call
ret
das
sbb
xchg
cmp
mov
inc
sbb
or
add
add
xchg
icebp
mov
sub
sbb
fidiv
add
test
lahf
mul
fwait
or
dec
mov
(bad)
mov
jbe
call
aam
push
test
out
pop
test
inc
dec
pop
cmps
mov
mov
jg
inc
mov
call
addr16
jne
add
mov
pop
bound
sbb
mov
jecxz
retf
test
and
cmp
jl
jp
imul
ss
dec
sub
bound
or
cmp
jle
pop
or
pop
and
xchg
aad
je
push
sar
es
(bad)
and
jmp
sti
gs
inc
scas
cmp
aam
shl
add
cmp
mov
mov
and
cmp
call
push
retf
push
sar
das
stos
enter
es
in
fidiv
jle
sub
nop
pop
nop
fidivr
mov
xlat
loopne
sbb
outs
enter
xor
jp
jle
ret
aas
add
mov
std
les
inc
pavgb
nop
test
push
dec
and
adc
(bad)
push
out
add
(bad)
fisub
gs
clc
cs
xor
and
ds
imul
bound
sub
inc
(bad)
pop
add
js
push
stos
(bad)
retf
push
add
xchg
xor
inc
inc
dec
sbb
enter
retf
push
fwait
mov
or
add
adc
xchg
fs
in
inc
push
or
jmp
push
jo
fsubrp
ja
pop
mov
(bad)
jecxz
sbb
add
add
pop
pop
mov
sahf
jmp
ss
jb
jmp
jb
aaa
add
shl
pop
pop
imul
imul
xor
mov
aas
cmp
loope
mov
pusha
sbb
(bad)
and
inc
xchg
add
mov
xor
xor
iret
dec
(bad)
clc
fs
or
and
push
jne
repnz
add
mov
mov
and
add
and
xchg
xchg
or
and
retf
out
pop
mov
push
sbb
push
packsswb
mov
call
js
adc
push
dec
ja
data16
dec
(bad)
popa
sub
imul
inc
ret
sub
push
mov
sbb
scas
or
and
sub
arpl
mov
adc
sbb
xor
push
(bad)
in
outs
dec
dec
cld
fld
inc
mov
aaa
push
push
shr
sahf
pop
cmc
pop
sar
test
pusha
cmp
je
mov
ins
fbstp
cld
aas
xchg
pop
mov
jecxz
imul
test
pop
dec
data16
sub
dec
or
or
xchg
dec
mov
inc
add
ret
repz
adc
push
sti
dec
jns
sub
mov
xchg
shl
fisttp
mov
or
dec
mov
fadd
es
push
loope
aad
scas
pop
pop
stos
push
std
ins
pop
dec
clc
push
cs
or
jg
leave
jg
pop
(bad)
loop
push
test
movs
out
fwait
dec
cmp
cli
stos
push
mov
and
mov
fld
ds
xor
popa
add
imul
xchg
pop
retf
sbb
dec
sub
mov
cmp
push
and
sbb
add
adc
add
cmp
ret
pop
and
adc
das
pusha
pop
test
fwait
out
cmp
adc
out
push
mov
mov
adc
dec
add
or
mov
cmps
xchg
mov
(bad)
push
mov
push
sbb
push
add
mov
pop
dec
repnz
fcmovnu
adc
push
adc
lea
mov
aam
pop
inc
test
inc
jns
adc
shr
addr16
retf
dec
xor
cli
add
sub
add
dec
cmp
(bad)
(bad)
jns
jb
jbe
je
shr
mov
shl
cmp
sbb
mov
xor
imul
adc
or
je
out
mov
pushf
mov
push
pop
lock
daa
jno
pop
rcr
mov
clc
add
test
add
pop
sbb
xchg
inc
jmp
jge
out
inc
dec
push
inc
clc
fstp
xor
call
sti
bound
cdq
clc
gs
pop
test
pop
ds
jbe
test
ret
pushf
jmp
add
icebp
pop
mov
push
and
div
jg
cmp
fisubr
sti
cmp
lods
sbb
and
int3
adc
push
adc
iret
xchg
(bad)
mov
push
or
sub
repz
or
mov
fnstenv
adc
sub
add
xchg
fwait
inc
fisttp
aaa
cli
lock
cmp
nop
dec
mov
pop
iret
sbb
jmp
jnp
push
outs
movs
and
jne
cmp
shl
cwde
jno
jle
test
iret
dec
fwait
add
(bad)
hlt
add
jg
and
push
sub
or
push
scas
mov
sar
push
stos
add
add
inc
mov
pop
das
out
call
add
imul
cmp
ja
(bad)
les
adc
pop
push
or
dec
cli
test
jbe
cld
push
jno
bound
dec
pop
ret
jp
cli
mov
or
push
ret
push
sbb
(bad)
dec
xchg
push
into
fidivr
movs
pop
bound
jbe
fild
mov
fs
add
jg
pushf
add
fdivp
jmp
inc
mov
outs
xor
push
sbb
mov
add
test
ud0
sub
dec
mov
sbb
je
dec
cld
shr
dec
push
add
inc
ror
lods
mov
dec
loop
push
dec
pop
je
shl
fwait
adc
ss
dec
out
mov
push
mov
scas
and
sbb
in
pop
cmp
out
add
cs
stos
ss
retf
mov
push
fdivr
cmp
sub
dec
mul
fldenv
mov
sub
sbb
mov
adc
push
inc
sbb
js
js
push
and
call
pop
ss
ja
outs
jg
aas
cmp
push
aas
push
inc
cmovno
loop
mov
or
inc
cmp
jbe
fimul
jmp
sbb
adc
fidivr
out
bound
pop
ja
dec
aaa
push
mov
movs
jmp
push
div
outs
jmp
sbb
pop
xchg
repnz
xchg
and
cli
int3
or
stos
es
bound
jnp
stc
inc
rcl
sbb
aaa
outs
xor
jl
movs
and
inc
xchg
jb
add
sbb
jmp
pop
rol
jb
adc
inc
sub
cmps
pop
sar
add
mov
dec
lahf
test
or
xor
mov
dec
fdivr
sub
jp
xor
cs
cmp
cdq
inc
mov
or
(bad)
sbb
add
mov
test
sub
push
test
stos
and
push
cdq
bound
jl
mov
add
cdq
jmp
test
cmps
xchg
cli
sub
js
out
inc
jmp
add
pop
adc
shl
xor
xor
xchg
imul
sub
jnp
scas
mul
push
mov
jno
inc
daa
jb
pop
call
outs
call
cmp
in
inc
and
xchg
(bad)
les
sbb
test
jmp
inc
cmp
(bad)
out
jl
mov
or
mov
sahf
mov
(bad)
cld
sub
cmp
sti
mov
sbb
int
movs
and
xchg
lock
(bad)
push
mov
dec
add
jbe
inc
clc
add
sbb
ret
jo
data16
mov
pop
push
or
nop
ficom
add
pop
daa
pop
(bad)
sub
(bad)
inc
in
xor
add
dec
push
ror
test
std
jp
inc
jb
push
dec
inc
fpatan
loop
lea
or
es
mov
jb
loopne
lds
jne
adc
in
scas
outs
jp
or
lahf
(bad)
adc
adc
cld
or
add
fimul
ret
sbb
xchg
mov
add
ror
loopne
adc
sar
mov
cwde
cli
outs
add
nop
mov
dec
js
mov
aas
xchg
push
cmp
shr
jno
popf
cmps
and
push
fadd
jmp
and
outs
or
lods
frstor
popa
call
adc
xor
or
or
add
add
call
(bad)
cmp
(bad)
jbe
jb
in
ss
add
inc
loope
pop
push
adc
sub
cmp
inc
bound
call
push
int
push
ins
jmp
(bad)
push
and
div
daa
bound
mov
adc
sbb
and
imul
jg
es
adc
(bad)
push
and
test
and
cdq
and
inc
pop
jne
mov
fidivr
add
dec
adc
add
fbstp
into
out
xor
lds
(bad)
jmp
xchg
fadd
lea
jbe
inc
cwde
scas
clc
es
jmp
aas
stos
mov
ret
repnz
and
cli
pop
jnp
jl
cmps
out
jb
mov
jp
(bad)
inc
sub
or
add
ret
adc
and
sub
jge
leave
les
or
ins
(bad)
cld
sub
sbb
fs
outs
jb
dec
adc
dec
sub
rcr
mov
pushf
lds
bound
inc
popa
xor
push
inc
popf
inc
ret
jg
push
test
out
jle
xchg
xchg
test
lods
mov
clc
push
sub
neg
aam
push
sbb
mov
adc
aaa
popf
add
pop
and
sbb
push
jbe
daa
xor
mov
jmp
cmp
dec
dec
adc
pop
or
test
repnz
xchg
inc
add
and
out
imul
xchg
push
xchg
test
es
icebp
adc
cli
inc
shl
jb
inc
std
xchg
mov
pop
mov
xor
outs
lock
scas
lea
in
mov
mov
xor
pop
aam
dec
adc
(bad)
aad
sub
cmp
and
adc
mov
ins
iret
outs
mov
pop
mov
dec
or
adc
retf
mov
sbb
add
jg
and
retf
pop
push
jmp
mov
dec
add
push
ds
shl
push
cmp
shr
add
out
cmc
inc
dec
jo
daa
cmp
fimul
jmp
push
lds
mov
xchg
mov
hlt
or
dec
pop
gs
jle
add
lock
aaa
fidivr
xor
dec
call
cvtps2pd
adc
pusha
(bad)
sbb
fdivr
and
ds
es
add
loop
outs
mov
js
jmp
push
inc
(bad)
(bad)
jns
sub
mov
add
pop
pop
mov
adc
fidiv
xchg
cli
fiadd
add
or
leave
pop
cld
(bad)
aas
cwde
inc
xor
add
mov
stos
mov
or
retf
adc
dec
cmps
add
outs
adc
adc
ds
pop
push
or
(bad)
dec
mov
pop
inc
lea
sbb
mov
push
pop
sahf
inc
mov
cmp
sub
enter
cmp
sbb
aad
mov
inc
retf
mov
mov
imul
adc
enter
xchg
mov
ret
and
(bad)
(bad)
mov
shl
cmp
cwde
mov
imul
add
push
push
jae
not
nop
mov
dec
imul
push
mov
les
inc
add
pop
fdiv
ins
mov
pop
and
and
pop
fidivr
jmp
add
inc
adc
add
out
neg
call
jmp
mov
sub
jmp
scas
sbb
test
adc
loop
xchg
jmp
or
xor
loopne
adc
and
sahf
jmp
mov
ins
jmp
and
inc
and
in
mov
frstor
xor
pop
sbb
sub
es
retf
adc
es
fidivr
daa
push
sub
jge
data16
icebp
or
adc
aaa
(bad)
jl
es
lahf
mov
jo
sahf
enter
repz
sub
cmps
inc
popa
mov
sbb
pop
push
inc
and
xor
push
add
mov
mov
cli
add
sbb
dec
popa
mov
call
mov
je
mov
aad
dec
ret
fs
sbb
and
(bad)
xor
or
push
inc
jg
mov
loop
jmp
sbb
div
int
inc
lahf
outs
or
push
aad
xor
pop
leave
clc
rcr
mov
shr
mov
mov
add
aas
cli
test
and
bnd
fnsave
cli
add
icebp
dec
shr
stos
jns
aad
push
neg
pushf
sbb
add
cs
pop
push
pop
mov
ja
bound
or
push
(bad)
(bad)
xor
sbb
xlat
mov
(bad)
push
in
xor
out
scas
hlt
test
push
mov
sub
rcr
push
jb
test
or
lock
pop
jmp
xchg
cmp
cmp
sar
sub
fistp
adc
sub
add
sub
sbb
inc
adc
pop
jle
es
cmp
rcl
sub
shl
stos
bound
pop
cs
ins
fist
int
shl
mov
push
fisubr
leave
mov
cmp
sbb
add
push
or
sbb
jmp
jbe
aam
add
adc
fidivr
mov
pop
rcr
shr
push
imul
sub
je
xor
push
fistp
dec
movs
bound
stc
daa
push
jmp
add
repnz
sub
ficomp
std
fstp
dec
pop
or
jle
call
sbb
jl
fucomp
inc
or
imul
test
lahf
ret
xchg
ds
dec
ret
and
jp
jg
add
cdq
dec
(bad)
out
cmps
push
test
pop
(bad)
push
push
push
add
lods
sub
jns
sbb
pop
adc
sub
and
aas
out
push
rol
repz
jo
pop
adc
mov
repnz
mov
add
jg
mov
jmp
daa
lods
aas
sahf
mov
mov
les
add
cmps
mov
push
jb
push
sar
dec
push
retf
mov
add
data16
dec
push
cmp
or
jmp
xlat
mov
cmp
call
and
and
dec
(bad)
call
imul
inc
jmp
dec
in
repnz
shl
leave
popa
aam
mov
aam
push
(bad)
repnz
push
ficom
shr
and
cmp
fstp
retf
add
and
lock
cmps
xchg
dec
rol
fisubr
movs
xchg
mov
icebp
rol
pop
int
mov
cli
or
or
out
(bad)
cmps
push
xchg
adc
mov
stos
push
pop
inc
daa
movs
mov
xlat
scas
cmp
add
(bad)
aas
stos
push
lds
jmp
adc
adc
inc
inc
cmp
push
(bad)
or
pusha
cmps
call
dec
xor
rcr
retf
aas
sbb
mov
stos
or
sub
dec
adc
jmp
dec
rcl
adc
mov
cli
add
dec
jp
push
stos
dec
inc
std
jb
es
xor
(bad)
inc
mov
les
ds
xor
cmp
aas
sbb
ret
mov
lea
(bad)
loop
jmp
adc
aaa
sub
push
mov
jmp
stos
test
movs
in
sub
mov
imul
jne
pop
inc
loopne
outs
icebp
cli
cmp
adc
adc
adc
pop
mov
stos
sbb
mov
mov
sbb
gs
test
mov
mov
mov
fisubr
sbb
xchg
pop
out
pushf
rol
(bad)
aaa
push
sar
test
pop
inc
and
stos
dec
jle
and
fcmovne
inc
aaa
adc
mov
fwait
sub
lods
ss
repz
jns
adc
mov
mov
xor
clc
mov
ins
ror
pop
imul
(bad)
aad
or
popa
and
jle
xchg
push
push
sbb
add
mov
push
add
dec
cmp
loop
bound
jmp
jns
retf
fxch
movs
mov
loop
cs
outs
push
(bad)
js
push
xchg
(bad)
lds
pop
aad
sbb
push
pop
iret
int
sbb
sub
adc
xor
push
cs
sub
add
mov
sub
mov
test
ja
ret
mov
stos
int
out
mov
xchg
add
nop
neg
fnstcw
or
sub
jg
add
push
(bad)
push
cdq
inc
pop
loopne
dec
add
jbe
mov
xchg
ret
add
or
adc
add
out
and
pop
add
adc
cmp
das
mov
out
test
mov
addr16
fwait
cli
mov
xor
fisub
call
hlt
inc
cli
fnstcw
stos
clc
rcl
sub
mov
push
leave
es
fs
mov
add
dec
xor
mov
test
sub
sbb
push
(bad)
fdiv
sbb
arpl
scas
and
pusha
mov
and
retf
scas
xlat
ret
(bad)
cmps
fidivr
jnp
or
leave
add
and
adc
xor
outs
aas
push
aam
enter
pop
ss
das
fsubp
dec
xchg
pop
retf
ret
enter
jecxz
mov
addr16
sbb
sbb
and
adc
mov
cmps
jbe
adc
cmc
leave
bound
pop
push
mov
mov
jl
mov
mov
pop
aaa
aas
sbb
cmc
dec
in
xchg
xor
aas
mov
adc
xchg
cmp
and
or
or
mov
imul
or
imul
sbb
and
add
adc
push
xchg
sbb
pop
inc
jb
inc
push
push
adc
sbb
xchg
jno
das
jnp
call
lds
mov
inc
xor
cmp
push
neg
aaa
lods
daa
or
or
(bad)
jl
test
jle
bound
or
pop
add
sbb
das
test
and
mov
add
mov
ds
push
ds
adc
mov
xchg
xor
jmp
push
outs
adc
bound
jl
mov
or
into
mov
or
mov
imul
lock
arpl
mov
push
adc
pop
dec
inc
cmp
stos
aad
jecxz
sbb
dec
pushw
dec
ds
sbb
sub
mov
dec
add
call
pop
or
dec
mov
fldcw
and
adc
and
ror
mov
mov
ds
cld
stc
adc
retf
call
push
mov
cmp
sbb
cmp
retf
or
xor
sub
jb
out
inc
xchg
ins
leave
lods
popa
outs
inc
call
and
sub
movs
adc
popa
pop
push
mov
call
dec
mov
add
sar
mov
adc
and
sbb
retf
or
pop
ss
pop
retf
xchg
bound
jae
add
pusha
dec
xchg
jg
int
mov
sbb
mov
(bad)
sub
loop
adc
and
mov
mov
hlt
mov
and
xchg
sbb
(bad)
mov
clc
(bad)
out
mov
or
sbb
inc
jmp
imul
out
mov
imul
sub
inc
loop
outs
sbb
add
mov
xor
sub
std
out
mov
jg
cli
cmp
out
add
pop
cwde
dec
rcl
sbb
sar
jp
or
sub
mov
ret
cmp
mov
and
nop
or
dec
mov
push
xchg
out
add
imul
mov
xchg
or
stos
inc
and
setp
jo
jne
pop
mov
mov
push
mov
enter
fld
test
adc
mov
and
push
mov
hlt
adc
push
or
out
jl
mov
mov
lea
push
(bad)
or
popa
popa
jae
fisttp
lahf
(bad)
sub
mov
movs
adc
xor
popa
retf
jg
mov
cmp
mov
int
and
mov
shl
sahf
sbb
or
ss
cli
adc
movs
inc
jecxz
mov
push
scas
pop
mov
dec
adc
cmps
add
push
call
dec
mov
adc
or
fcmovu
pop
cli
push
inc
and
cdq
lahf
push
bound
and
sti
jmp
movs
shufps
mov
shl
(bad)
add
dec
push
nop
inc
popf
push
inc
jnp
scas
jmp
out
ror
cdq
mov
fadd
int3
jecxz
lods
aas
cld
aad
mov
xor
dec
mov
(bad)
push
lods
inc
loop
retf
data16
cwde
ficomp
es
addr16
call
ja
xchg
in
inc
jge
cmp
mov
xlat
stos
ret
mov
or
or
sub
cmp
ss
inc
xor
inc
xchg
cdq
cmp
fild
jmp
ja
call
cmp
test
sbb
sahf
test
cmps
aas
movs
iret
adc
hlt
pop
test
dec
sub
pop
ins
loop
jae
lods
pop
in
neg
jmp
dec
dec
jecxz
sbb
sub
aaa
sub
sub
xor
xchg
mov
or
jmp
call
add
pop
adc
add
pop
stos
jmp
arpl
test
mov
xchg
into
pop
outs
pop
inc
mov
cdq
cli
dec
rcl
inc
(bad)
push
gs
inc
add
popa
jecxz
rol
jmp
rol
add
ret
xor
xchg
pop
sub
js
pop
dec
ffree
cmovl
mov
jnp
movs
mov
add
dec
ss
pop
mov
cmp
cli
dec
and
inc
out
inc
(bad)
pop
lods
or
inc
mov
fstp
push
xor
jns
js
jns
fistp
std
push
retf
mov
ss
dec
clc
(bad)
pop
mov
in
enter
es
mov
jb
mov
add
clc
ficomp
(bad)
xlat
(bad)
mov
push
ficomp
cmps
mov
inc
mov
inc
gs
jmp
mov
hlt
jo
add
inc
or
sub
ds
std
and
inc
xor
sbb
fstp
scas
out
and
cmp
and
js
popf
icebp
pop
jbe
ss
mov
imul
gs
add
cmp
cs
dec
mov
cmp
aaa
push
test
ficomp
bound
retf
push
push
and
xor
pop
mov
lods
mov
jns
pop
loope
mov
add
in
mov
ins
xchg
or
test
call
or
and
inc
pop
jge
ffreep
call
icebp
test
dec
push
in
ret
or
push
daa
or
push
fldcw
push
cli
dec
xchg
pcmpgtb
fwait
dec
mov
retf
lods
jp
sbb
arpl
rol
sub
ret
retf
dec
sar
xor
jg
and
sub
aas
add
hlt
sub
push
dec
push
test
mov
(bad)
(bad)
call
mov
daa
jns
sub
pop
ds
or
dec
push
or
ret
das
sar
adc
adc
sbb
sub
jbe
aaa
call
retf
dec
in
inc
pushf
sbb
cmp
jp
pusha
sub
sbb
push
add
int
and
dec
ins
dec
div
jo
fsubr
sub
leave
pushf
add
sar
mov
push
fisub
(bad)
pop
sbb
out
fs
mov
xchg
add
adc
xor
test
adc
add
xchg
fwait
clc
pusha
and
lahf
dec
mov
xchg
xchg
jmp
dec
dec
push
lea
mov
inc
outs
loopne
ror
lds
mov
scas
jb
icebp
push
gs
push
fisub
mov
inc
popa
ss
shl
mov
inc
cmc
repz
test
inc
test
inc
in
jle
inc
sar
dec
fsub
sub
icebp
adc
test
mov
sub
and
rol
inc
adc
mov
pop
in
fisubr
lods
inc
or
lea
outs
mov
cmp
jmp
or
xchg
mov
inc
dec
push
stos
pop
and
xor
pop
imul
mov
xor
mov
inc
jmp
ror
sub
add
jge
movs
push
retf
pop
or
inc
add
fild
jmp
les
in
inc
add
sbb
ds
sahf
fldenv
call
jecxz
call
pop
xor
pop
sbb
lods
and
pop
sbb
lahf
and
lea
ja
sub
bound
jbe
dec
sub
iret
push
lds
fcom
pop
push
stos
mov
aaa
call
test
mov
dec
adc
dec
retf
add
mov
ret
cmps
and
sbb
cmp
adc
mov
fnstcw
adc
cmps
mov
sbb
bnd
dec
shl
ins
in
pop
lods
es
sbb
mov
inc
mov
leave
iret
add
inc
mov
mov
lods
jno
xor
fadd
pushf
and
push
aas
sbb
add
mov
dec
push
adc
dec
es
or
adc
int
cmp
pop
sub
dec
cmp
or
push
inc
mov
mov
popa
cli
daa
stos
mov
das
sbb
mov
mov
add
cmp
mov
mov
xor
(bad)
or
mov
ds
jmp
cmps
adc
pop
or
(bad)
call
cwde
fdiv
and
pushf
xor
jmp
cmp
pop
fbld
add
inc
sbb
pop
push
aam
and
ds
leave
or
sub
retf
xchg
int3
inc
and
popa
jmp
imul
loopne
or
xor
shl
pop
test
fcom
loop
push
xor
push
cmpps
fldenv
sahf
cmp
jecxz
push
adc
movs
rol
jne
shr
cmp
or
pop
sbb
int3
mov
mov
test
jp
shl
add
stos
push
pop
xchg
and
inc
mov
pop
jg
cmc
jecxz
cmp
mov
scas
cs
ror
jmp
add
jmp
sar
js
mov
xor
xchg
adc
fdivrp
leave
bnd
or
sub
and
aam
pushf
push
push
adc
in
inc
(bad)
ficom
add
adc
(bad)
pop
jle
stos
and
and
cmp
retf
and
sbb
mov
cmps
mov
and
sbb
adc
out
retf
and
xchg
into
cwde
cmps
or
pop
cmc
add
cld
clc
test
out
cmps
pop
popa
movs
lods
cdq
test
retf
(bad)
xor
mov
xor
ret
jle
push
push
aas
cmc
push
cli
push
test
adc
rcl
aas
ds
loope
lock
and
das
xor
mov
add
lods
adc
fist
aaa
lods
inc
inc
arpl
inc
imul
repnz
push
mov
ss
out
xor
mov
xchg
sbb
stos
mov
push
dec
mov
cli
cs
nop
fcmovnbe
add
xor
out
mov
inc
sar
pop
rcr
add
sub
(bad)
mov
js
dec
repz
call
out
xor
ins
fadd
or
adc
pop
mov
jo
jbe
and
pop
daa
cwde
(bad)
dec
jge
dec
xor
ss
add
pop
mov
ja
enter
add
jmp
push
outs
dec
retf
clc
fisub
(bad)
cli
lea
shl
nop
fild
pop
shr
pop
mov
pop
inc
mov
stos
push
iret
add
cmp
icebp
and
je
mov
cmps
and
adc
pop
add
pop
or
pop
imul
mov
add
inc
mov
add
stos
mov
cdq
pop
mov
or
jnp
aaa
es
stos
test
mov
and
stos
mov
iret
fsubr
mov
xor
add
int
push
or
jmp
not
dec
or
jmp
(bad)
cmps
hlt
test
cli
dec
push
sahf
push
je
adc
(bad)
sub
sbb
retf
fwait
mov
cmp
add
mov
push
sbb
arpl
in
pop
sahf
call
pop
push
sbb
out
mov
or
test
inc
pop
add
cmc
in
mov
inc
das
cmps
push
call
je
adc
push
hlt
or
je
inc
out
dec
add
cwde
mov
mov
loope
xor
and
cmps
mov
and
daa
sub
mov
ss
add
into
stc
fistp
sbb
es
retf
inc
mov
jl
cmp
retf
dec
push
pop
jg
xor
sar
ss
test
test
push
adc
inc
push
cmp
cld
sub
push
outs
adc
xor
and
push
inc
inc
cmp
or
or
test
ins
clc
sbb
mov
push
xor
inc
mov
xor
lock
and
pop
pop
jbe
jg
sbb
push
ins
mov
push
or
dec
and
(bad)
cld
and
xchg
daa
and
adc
mov
xor
push
adc
jge
push
rol
popa
and
jno
or
and
lock
inc
ret
jmp
cs
inc
mov
mov
arpl
sbb
xchg
js
cmc
mov
out
mov
xchg
mov
fwait
aaa
dec
sahf
jmp
inc
add
(bad)
jbe
push
mov
jbe
rcl
mov
dec
push
(bad)
jmp
jg
jmp
pop
daa
outs
xor
cli
push
loopne
add
sub
lahf
pop
mov
test
cli
scas
bound
movs
dec
adc
jle
dec
inc
shl
leave
enter
sbb
jle
shl
and
mov
cmp
lods
repnz
sub
mov
data16
mov
dec
and
mov
and
dec
ss
pusha
shr
inc
xchg
mov
adc
mov
and
sub
fcomp
in
add
add
push
rcr
repnz
mov
(bad)
lods
mov
xor
mov
(bad)
popf
xchg
mov
and
call
xchg
adc
mov
mov
add
inc
inc
adc
dec
cmp
pop
push
add
add
fbld
xchg
or
or
inc
mov
and
xchg
(bad)
mov
cmps
inc
cli
test
rol
es
fidiv
mov
outs
push
mov
pop
inc
test
jmp
push
mov
xor
test
(bad)
or
mov
push
int
shl
je
jle
jo
icebp
leave
mov
add
jb
loop
sbb
fsubr
fidivr
ret
jnp
sub
sbb
idiv
adc
repnz
mov
cmps
xchg
adc
cli
jecxz
and
add
xchg
mov
(bad)
cmp
pop
adc
xchg
data16
mov
inc
daa
sub
(bad)
(bad)
push
jl
aas
dec
(bad)
adc
pop
push
stos
and
and
add
cmp
fild
mov
(bad)
inc
rol
nop
mov
lahf
ret
push
fiadd
int
adc
inc
std
lods
inc
loopne
add
out
fild
adc
retf
bound
push
(bad)
test
into
iret
sbb
(bad)
jg
inc
adc
les
mov
xor
add
adc
push
sub
push
(bad)
mov
pop
cdq
mov
sahf
(bad)
pushf
xchg
sti
push
xchg
dec
mov
stos
dec
out
push
js
outs
stos
adc
inc
rcl
lock
mov
pop
div
adc
add
ret
shl
or
push
mov
sbb
(bad)
jmp
pop
mov
mov
cld
push
push
(bad)
push
rol
cmp
iret
cmp
jbe
mov
mov
push
push
loop
stos
xor
mov
mov
push
mov
(bad)
cs
mov
and
(bad)
sahf
inc
clc
mov
xor
mov
jo
test
js
pop
push
dec
add
dec
fucompp
mov
mov
add
xchg
nop
or
aad
sahf
add
rol
into
push
stos
scas
cwde
jg
loopne
sbb
mov
call
shl
repz
adc
push
adc
add
xor
or
inc
bound
add
enter
sti
loop
clc
push
sub
aaa
mov
jle
cmp
or
nop
jns
leave
repnz
dec
test
push
push
mov
inc
pop
aas
aas
cmp
push
jge
sbb
and
jmp
and
or
je
(bad)
jb
fldenv
sbb
adc
mov
jmp
ins
or
jmp
cmp
add
jmp
pop
cli
cmp
stos
out
fisttp
test
mov
in
xor
rol
push
call
fimul
(bad)
stos
stos
sbb
call
mov
shl
dec
fiadd
pop
inc
ja
inc
push
mov
dec
std
or
adc
pop
mov
pop
jae
xlat
push
adc
mov
outs
or
je
pop
(bad)
push
or
aas
add
mov
push
ja
inc
adc
push
pushf
sahf
addr16
inc
jmp
inc
lahf
xor
ss
jbe
jno
push
cmp
inc
or
lock
out
add
stos
lods
xor
adc
sbb
stc
or
(bad)
daa
cmp
(bad)
cli
sub
sar
xchg
push
in
je
inc
(bad)
jnp
adc
pop
xchg
ins
xlat
or
bnd
int
xchg
or
out
aad
xchg
mov
or
mov
xor
mov
movs
test
inc
or
dec
and
adc
iret
sbb
bound
scas
xchg
int
sub
cs
stos
rcl
add
retf
sbb
sbb
enter
lahf
mov
pop
fnstcw
mov
(bad)
jmp
imul
or
pop
(bad)
ficom
lock
adc
(bad)
out
dec
mov
push
inc
jecxz
jle
add
out
inc
push
jae
loop
test
push
out
push
adc
adc
add
out
push
fwait
and
or
pop
daa
jo
iret
sub
das
in
pop
jge
or
fwait
lods
jg
cmp
das
dec
pop
cs
imul
jle
ja
sbb
sbb
mov
bound
loopne
dec
push
inc
jbe
add
cmp
push
add
stc
call
push
shl
sahf
sbb
scas
dec
shl
in
or
adc
shr
xor
loopne
jmp
jae
jmp
add
push
push
jmp
jle
inc
lea
ss
push
xchg
cmp
add
pop
ins
jmp
pop
or
test
nop
pop
test
pop
sub
mov
push
inc
aaa
pop
in
test
les
xchg
inc
dec
cmp
jmp
dec
push
jp
int
into
sti
shl
jo
jp
adc
dec
aas
jbe
mov
bound
cmp
cmp
loopne
xchg
inc
xchg
aas
jl
fcmovne
adc
cwde
and
mov
mov
mov
popa
jl
outs
out
cmps
dec
jmp
mov
xor
pop
ins
fmul
aaa
mov
sahf
addr16
sahf
sub
sbb
aaa
cs
jl
je
mov
adc
daa
pop
xor
add
inc
or
not
pop
or
adc
test
push
xor
push
inc
pop
add
adc
dec
jp
push
in
sub
aas
sub
push
movs
xor
pushf
pop
cmps
adc
fild
xor
inc
cs
and
inc
outs
adc
shr
outs
lea
sbb
mov
repnz
and
div
mov
push
sbb
dec
pop
ret
mov
sub
fisub
and
movs
mov
add
dec
lahf
push
ins
lods
or
jnp
in
jl
or
scas
dec
mov
es
xchg
mov
movs
push
mov
xchg
pop
fwait
out
fst
push
dec
aaa
sahf
mov
push
sar
mov
sbb
or
jmp
leave
pop
pop
or
pusha
pop
and
nop
sbb
inc
(bad)
les
jle
push
in
mov
xchg
call
fidiv
dec
rcr
xor
mov
int
nop
(bad)
inc
(bad)
mov
mov
mov
or
jno
outs
cs
jge
sbb
imul
sbb
cmp
std
inc
dec
mov
js
cs
sbb
mov
iret
sub
push
test
add
(bad)
add
movs
push
rcl
(bad)
imul
push
stos
pop
xchg
mov
into
pop
icebp
stos
cmp
mov
mov
inc
(bad)
ja
push
es
mov
repnz
int
ret
mov
test
outs
or
mov
ffree
aaa
jp
(bad)
scas
cmps
ds
sub
add
or
mov
lods
std
or
sub
cs
and
and
aad
cwde
es
pop
shl
cmc
jo
ror
cmc
aam
fwait
xor
data16
mov
add
js
aaa
add
or
inc
(bad)
test
dec
add
sbb
lods
test
call
dec
xchg
push
push
mov
pushf
repnz
outs
nop
ds
clc
pop
push
push
bound
push
bound
ins
jo
push
adc
jne
jns
jbe
nop
pop
add
add
and
xchg
les
mov
repnz
movs
movs
bound
push
pop
or
inc
push
ret
jae
repz
add
bound
jp
mov
imul
add
icebp
and
bound
dec
cwde
call
ror
movs
mov
or
jae
std
push
pop
and
add
lock
xchg
cmp
inc
test
rol
adc
cmp
loope
mov
pop
mov
and
sahf
cli
pop
adc
nop
pop
mov
or
mov
int
mov
and
mov
xchg
(bad)
and
mov
scas
xor
aas
add
mov
xor
fwait
cmps
sbb
push
shl
fisubr
out
or
add
test
cld
test
adc
loop
imul
outs
pop
stc
test
ret
int
add
xor
imul
mov
inc
mov
stc
push
cmp
pop
add
pop
mov
mov
mov
adc
inc
into
mov
fisub
test
loopne
les
scas
cmp
aam
push
xor
dec
push
cmp
inc
arpl
jmp
jb
mov
jae
sbb
push
add
xchg
iret
jl
es
push
loopne
push
inc
aad
xchg
outs
cmp
inc
mov
xchg
(bad)
mov
hlt
adc
push
cmp
xchg
es
mov
mov
mov
fnstenv
xchg
mov
jmp
jle
fadd
add
mov
arpl
cld
inc
fcmovu
cmps
dec
in
sub
add
push
and
pop
(bad)
daa
add
aam
cld
inc
(bad)
adc
inc
and
push
call
push
jp
call
mov
sub
jge
rcr
or
idiv
mov
test
or
sub
pop
mov
xchg
pop
int
ficomp
outs
(bad)
cmp
mov
mov
mov
mov
xchg
push
ret
adc
enter
and
adc
cmp
jne
sbb
lea
push
add
cmp
or
dec
imul
mov
inc
push
mov
adc
push
mov
mov
fiadd
(bad)
push
sahf
add
pop
jns
inc
xchg
mov
sub
dec
je
fstp
repnz
sbb
pop
mov
mov
dec
sub
int
jbe
sub
aad
test
pop
jbe
outs
test
aaa
sub
retf
popf
inc
fimul
pop
dec
repz
ss
loop
outs
mov
sub
mov
fwait
and
xchg
mov
mov
or
adc
retf
in
cmovs
adc
iret
add
add
test
popa
xchg
add
add
dec
xor
sub
ret
cmp
lock
add
test
xchg
pop
jne
fiadd
or
ja
cmp
inc
sub
scas
pop
sub
ret
cmps
bound
xchg
jmp
mov
sub
aaa
and
xchg
arpl
out
mov
or
mov
mov
popf
sbb
sub
cmp
push
repz
inc
repz
xchg
icebp
rol
aas
pop
add
iret
in
ror
inc
cli
imul
and
adc
add
adc
test
xchg
sbb
js
(bad)
stos
stos
add
sbb
or
xlat
pop
aad
ins
add
xor
pop
add
mov
cmp
xor
mov
inc
dec
aaa
retf
sbb
mov
clc
stc
mov
mov
fwait
sbb
in
pop
in
pop
or
push
stc
or
retf
push
pop
aam
and
cmp
mov
retf
xchg
jns
adc
popf
dec
call
jle
add
movs
cmp
mov
jmp
add
repnz
add
push
test
je
dec
xor
jbe
mov
inc
sbb
icebp
ret
shr
stos
or
rcr
push
push
push
jle
add
aas
inc
je
hlt
pop
in
dec
jne
cmp
retf
cmc
push
cmps
push
div
cld
xchg
mov
add
es
sti
aas
inc
sbb
stos
retf
ret
sbb
jg
and
mov
add
and
xchg
cs
push
jl
xor
outs
sub
push
jbe
mov
lock
(bad)
pusha
(bad)
imul
xchg
xchg
adc
(bad)
ins
(bad)
fstp
add
cld
hlt
sub
push
cs
mov
loope
add
in
adc
mov
add
cmovo
call
daa
sahf
sar
mov
push
push
into
ret
cli
les
add
inc
scas
xchg
and
inc
sbb
mov
jg
pop
bound
les
ret
mov
jae
inc
cmp
mov
adc
call
or
or
mov
movs
or
fdiv
fmul
cdq
push
mul
jnp
push
loope
add
popa
shr
pop
sbb
jb
or
add
mov
and
repz
daa
push
xor
mov
aas
cmp
jecxz
add
mov
and
std
pop
pop
pop
sti
sbb
ds
adc
call
jo
and
shl
repnz
scas
adc
lock
push
mov
bound
xchg
fisubr
js
(bad)
sbb
mov
sbb
inc
cs
sar
push
inc
test
int3
test
lods
sub
cmps
ror
mov
pop
jl
imul
push
mov
dec
ins
xchg
mov
xchg
iret
ins
(bad)
xor
xchg
xchg
cmp
aaa
cs
(bad)
es
shr
add
out
sub
sbb
or
xchg
(bad)
mov
mov
arpl
cli
das
xor
pop
add
fdivr
xor
add
pop
daa
push
dec
jnp
test
push
sbb
push
fiadd
popa
mov
xor
bound
clc
dec
jb
jbe
outs
xchg
bound
push
mov
xor
dec
mov
lds
cli
mov
xor
popa
leave
and
stos
bound
(bad)
xlat
repz
mov
sub
ss
push
mov
(bad)
push
arpl
fs
add
adc
mov
outs
pop
fbstp
ins
repz
rep
inc
in
cmp
dec
xlat
mov
outs
sub
fcmovnb
jp
mov
dec
out
adc
pop
push
rcr
mov
(bad)
ja
inc
rol
into
mov
mov
pop
mov
push
repz
shl
jle
push
inc
dec
sbb
xor
dec
or
inc
xchg
pop
sub
add
pop
(bad)
(bad)
jmp
pop
mov
repnz
dec
mov
inc
xor
div
pop
adc
mov
enter
mov
out
aas
mov
add
sbb
addr16
mov
adc
fist
push
add
xor
adc
lea
and
or
cmps
and
xchg
pop
add
pop
and
ds
aas
inc
out
sub
aam
push
out
vpavgb
clc
stos
jb
jmp
int3
sub
mov
outs
stos
add
mov
dec
stos
addr16
cld
xchg
ret
xor
cmps
sbb
ja
mov
add
xchg
inc
push
out
xchg
pop
cmp
aam
mov
shl
adc
out
or
pop
mov
(bad)
in
mov
cmp
mov
inc
mov
(bad)
lahf
(bad)
into
add
jno
lahf
sbb
jl
xor
outs
in
and
cmp
and
bound
aam
add
(bad)
pop
inc
jmp
fisub
or
pop
pop
leave
hlt
std
or
(bad)
repnz
pop
ret
cmp
(bad)
scas
jp
adc
mov
out
gs
retf
jle
add
(bad)
ds
stos
imul
fucomi
dec
into
in
xor
cli
daa
loope
shl
inc
scas
and
adc
ret
or
mov
stos
add
jmp
xchg
sar
rol
pop
inc
cmp
or
push
and
shl
pop
mov
fnsavew
ret
pop
das
or
pop
lahf
dec
pop
cmps
xor
pop
cmps
ret
imul
xor
cmps
mov
repnz
cld
xchg
test
stos
adc
push
xchg
push
pusha
push
push
movs
or
push
mov
pop
dec
dec
rcr
adc
xor
cs
(bad)
cmps
test
dec
pop
xor
dec
mov
fmul
loope
adc
pop
inc
ret
fstp
mov
clc
aaa
into
or
shr
movs
(bad)
scas
mov
fild
(bad)
adc
adc
mov
ds
dec
mov
lea
arpl
sbb
mov
and
cli
or
jo
push
fnstsw
test
mov
pop
rol
cmp
jbe
cli
(bad)
fild
inc
adc
sub
adc
inc
hlt
xor
cmp
or
xchg
mov
pop
or
aad
call
adc
in
in
add
xchg
es
(bad)
cld
pop
imul
bound
jp
jg
stos
fdivrp
pop
jle
xchg
pop
push
add
fisttp
loop
ror
mul
mov
sahf
dec
or
pop
dec
fst
popa
push
dec
outs
out
mov
cmp
add
adc
(bad)
xchg
arpl
bswap
mov
imul
dec
int3
shl
inc
test
cli
call
inc
and
jmp
mov
repnz
and
or
stos
mov
push
arpl
push
lock
mov
in
test
mov
mov
rcr
je
icebp
es
stc
cmp
ja
fdivr
push
int3
fnstsw
mov
not
mov
neg
(bad)
retf
call
mov
sbb
push
loopne
cmp
mov
cs
mov
test
inc
ds
adc
fldcw
pop
pop
sar
pop
fimul
jg
pop
aam
ins
inc
push
call
inc
cmp
inc
stos
pushf
ret
jg
adc
or
aaa
test
fisttp
aam
xor
mov
add
push
out
jbe
cs
inc
mov
and
loopne
add
adc
or
push
adc
dec
cmp
out
mov
movs
adc
xchg
push
loopne
push
and
push
mov
inc
xchg
das
pop
add
jle
mov
ja
xchg
daa
inc
pop
fnsave
imul
rol
lock
out
test
pop
stos
(bad)
dec
mov
repnz
addr16
jbe
mov
es
(bad)
inc
rcr
daa
mov
or
push
pop
movs
mov
dec
ins
leave
ins
lea
xchg
jp
popf
mov
inc
add
jp
xor
lock
outs
mov
pop
xor
leave
shr
add
hlt
mov
add
and
cmc
or
push
mov
jl
add
push
dec
stos
and
int
test
sar
or
int
inc
mov
push
pop
xchg
loopne
inc
leave
inc
dec
outs
lock
push
jmp
into
call
cmp
rcr
neg
sub
mov
adc
fs
repz
inc
cwde
inc
repnz
pop
sbb
loopne
scas
movs
ss
cdq
mov
mov
add
lods
aas
(bad)
in
mov
data16
into
imul
cld
int3
or
(bad)
push
cmps
(bad)
jmp
into
stos
lods
lahf
pcmpgtd
xchg
push
cmp
xchg
or
cli
xchg
sbb
out
pop
jmp
xchg
pop
push
in
call
mov
stc
int3
bound
jmp
int3
xchg
jne
mov
add
push
pop
shl
cmc
inc
jecxz
sub
inc
jo
inc
lock
pushf
fistp
popa
rol
cmp
fld
push
mov
retf
mov
les
push
es
inc
mov
cmps
nop
rol
scas
cli
push
cdq
xor
pop
mov
jl
mov
mov
jl
cwde
sar
adc
out
xor
push
mov
cmp
mov
out
add
(bad)
jg
pop
je
icebp
retf
adc
xor
bound
(bad)
mov
cmp
dec
fld
xor
bound
arpl
je
inc
add
(bad)
cmp
retf
pop
stos
stos
fistp
sub
cmp
jb
arpl
xor
mov
test
xor
add
test
adc
dec
test
es
dec
ret
add
xchg
inc
daa
push
retf
lods
(bad)
inc
mov
out
lahf
adc
xchg
and
daa
pop
jmp
rcr
inc
push
rcr
dec
dec
mov
cmp
das
mov
test
popf
add
cli
adc
clc
add
mov
pop
xchg
and
ins
clc
outs
add
sub
std
or
test
add
mov
pushf
rol
call
push
push
call
jb
repnz
cld
and
cli
leave
das
push
sbb
adc
(bad)
jne
outs
arpl
ins
adc
mov
xchg
or
nop
push
add
and
adc
push
mov
pop
shr
(bad)
retf
pop
sahf
lods
mov
xchg
jmp
jmp
out
iret
mov
add
es
sub
(bad)
cmc
jmp
out
retf
das
mov
pop
stos
cmps
inc
or
movs
xchg
mov
daa
stos
xchg
ins
xchg
jl
fld
sbb
jmp
cli
scas
jbe
jl
pop
and
add
mov
test
push
test
call
test
fisubr
cmp
data16
dec
mov
dec
or
push
fimul
rol
push
pop
(bad)
mov
jbe
daa
adc
movs
fidivr
das
enter
cs
mov
cmp
adc
mov
out
out
stos
or
sub
inc
scas
add
ror
mov
cdq
clc
packuswb
and
jnp
test
out
mov
loope
cmp
test
scas
pop
rcl
pusha
push
xchg
cli
pop
jl
aaa
enter
inc
adc
dec
dec
mov
adc
pop
jbe
bound
adc
or
cmps
add
mov
dec
gs
and
xchg
pop
idiv
or
nop
fimul
adc
(bad)
jo
lods
xchg
cmps
jmp
adc
sub
jle
jbe
mov
jb
cs
test
mov
ins
add
jne
mov
inc
jb
pop
sub
mov
inc
psubd
add
(bad)
ins
dec
fs
jg
ror
push
rcr
mov
movs
call
jle
cld
pop
outs
push
rcr
dec
jno
dec
push
test
ror
aaa
sub
push
in
call
push
mov
js
bound
aas
iret
sbb
jmp
out
xchg
fdivr
pop
call
data16
movs
repnz
ss
out
daa
xor
fsub
or
cmp
jb
aas
dec
push
cmps
mov
lods
pop
mov
push
adc
xor
mov
cmps
mov
out
or
scas
les
ss
fimul
clc
call
jbe
out
ret
push
jnp
into
push
rcl
cdq
shr
imul
test
clc
xor
dec
shl
fadd
aaa
jbe
push
add
outs
pop
cdq
add
pusha
dec
add
sub
inc
xor
mov
adc
jnp
sbb
loop
push
xlat
sbb
pop
jb
rcr
or
inc
adc
outs
push
mov
and
cld
loop
dec
mov
test
xor
pop
inc
shl
clc
mov
dec
(bad)
jbe
in
(bad)
int
iret
lods
mov
or
add
ins
pop
mov
mov
daa
pop
push
loopne
push
(bad)
adc
pop
mov
ret
mov
stc
mov
sar
fwait
addr16
mov
(bad)
int
mov
add
mov
mov
mov
xchg
pop
mov
push
mov
fldcw
lods
outs
loop
jmp
imul
and
adc
jle
push
jmp
dec
add
pop
push
inc
packuswb
or
cli
inc
jge
xchg
hlt
lods
cmp
jl
xor
inc
shl
loopne
and
jmp
imul
jle
sbb
and
xor
std
add
mov
in
out
(bad)
pusha
xor
push
add
pop
sbb
fs
retf
add
mov
add
(bad)
mov
shl
call
adc
mov
add
and
std
xor
not
cwde
xchg
not
loopne
std
and
add
lds
add
dec
jmp
fwait
addr16
adc
test
popf
sbb
fist
ja
xor
rcl
pop
fisubr
loopne
bound
popf
(bad)
dec
and
and
jb
xchg
es
popf
enter
ss
inc
pop
sub
dec
aad
push
bound
and
xor
sub
adc
dec
jg
cmp
mov
test
pcmpeqb
cmp
add
cmc
outs
jmp
and
fmul
and
mov
outs
in
dec
scas
and
psllw
push
sub
or
fbld
(bad)
(bad)
adc
pop
and
dec
mov
iret
stc
imul
ss
jne
test
pop
sub
lods
or
sub
into
aaa
pop
or
add
push
push
jmp
or
mov
and
jge
ss
mov
leave
fwait
and
shr
clc
pop
mov
loopne
adc
dec
rol
fs
pop
loop
inc
shl
mov
inc
nop
push
add
stos
mov
xchg
xor
fwait
jb
or
iret
aad
dec
bound
pop
xor
push
jp
xchg
add
neg
dec
mov
push
or
dec
repz
call
jp
inc
in
sbb
xchg
or
(bad)
aas
leave
aaa
mov
or
mov
shl
adc
mov
(bad)
out
pop
pmaxsw
jbe
inc
xchg
mov
das
mov
das
lock
into
mov
jmp
add
push
sub
inc
std
stos
push
popa
fld
dec
scas
pop
jg
jge
mov
cmovb
adc
dec
adc
loopne
(bad)
jg
mov
add
add
shl
test
stos
pop
and
fdivrp
inc
jp
cwde
scas
inc
cs
popf
inc
sub
div
lods
inc
jmp
ins
cwde
mov
in
xchg
add
sahf
jg
stc
and
gs
mov
add
ins
dec
xor
aam
fwait
or
pop
pop
scas
dec
xor
lahf
and
and
(bad)
push
sti
and
outs
xchg
out
into
call
xor
and
mov
into
iret
inc
xchg
cmp
jge
jnp
bnd
dec
gs
mov
cmp
cmc
add
jae
cmp
out
cmp
enter
stos
popa
sbb
sbb
adc
dec
mov
neg
out
mov
cmp
jbe
add
into
jle
xchg
xchg
lock
imul
mov
lea
fnstsw
mov
ret
test
add
push
inc
retf
sar
repnz
xor
(bad)
scas
push
mov
dec
dec
out
add
test
in
xchg
dec
ins
cwde
jo
mov
rol
push
adc
das
dec
xor
sub
add
sar
or
sub
arpl
push
or
ds
dec
test
out
sbb
retf
js
sbb
add
aas
iret
adc
jle
dec
ds
push
out
test
push
mov
xchg
ret
adc
mov
push
sahf
xchg
retf
jb
aas
sbb
adc
imul
and
mov
adc
push
dec
daa
xchg
lock
dec
or
aaa
out
fidivr
vpmacsdd
ds
(bad)
(bad)
out
es
dec
xor
jo
mov
sti
mul
(bad)
jnp
sub
je
inc
sahf
fwait
scas
xchg
push
test
pop
sub
mov
mov
sbb
sub
and
jle
int
int3
pslld
mov
scas
dec
js
jecxz
mov
cmp
cs
xchg
jns
or
sbb
adc
pop
arpl
es
push
(bad)
cmp
or
inc
or
dec
mov
add
out
xor
jp
mov
ds
outs
mov
ss
ror
dec
xchg
xchg
aaa
xchg
push
inc
outs
mov
xor
mov
cmp
push
dec
call
clc
pop
sbb
loop
popa
and
rol
push
pop
dec
pop
jecxz
or
xchg
dec
es
cmp
or
cli
inc
mov
sbb
cs
cmp
dec
jmp
outs
cmp
inc
push
xor
cli
jb
or
adc
scas
jp
inc
pop
mov
sbb
pop
outs
shl
jnp
lock
lahf
sub
push
jnp
mov
or
inc
inc
sbb
and
sbb
sahf
push
aaa
fisub
sbb
fstp
loopne
mov
mov
fucompp
cdq
ret
outs
addr16
jle
sar
add
aam
jecxz
out
adc
sbb
imul
sbb
dec
jg
add
les
adc
into
jl
inc
pop
iret
jae
pop
mov
push
inc
adc
jns
add
dec
jmp
mov
mov
pop
add
mov
dec
and
sbb
fld
and
push
sahf
nop
retf
data16
mov
or
test
outs
dec
sbb
retf
inc
mov
icebp
cmp
sbb
(bad)
inc
push
sbb
rol
cmps
xchg
int
xor
push
mov
dec
add
loope
push
mov
jle
js
sub
pop
sbb
das
push
(bad)
out
ret
aas
ficomp
fcomp
gs
in
cmp
lock
adc
mov
push
push
and
imul
and
push
cli
mov
adc
sub
es
ds
xlat
add
pusha
push
add
push
nop
mov
inc
outs
ja
push
call
test
pop
xchg
jmp
pop
in
in
dec
sbb
sbb
sub
mov
jp
push
(bad)
xor
pop
jmp
push
pop
std
or
(bad)
stc
dec
inc
(bad)
add
cmps
mov
clc
ror
push
(bad)
sbb
inc
ss
fld
cmp
or
out
dec
out
sub
mov
mov
mov
jb
or
xor
stos
sub
push
add
add
sub
push
ds
(bad)
retf
and
add
pop
pop
mov
pop
push
and
inc
or
jmp
loopne
shr
cmp
out
sub
add
sbb
arpl
dec
and
(bad)
mov
imul
(bad)
es
mov
enter
push
push
and
retf
inc
xchg
fwait
iret
inc
cmps
test
push
lods
pusha
int3
xor
repz
cld
add
fidivr
mov
push
push
scas
je
jp
dec
or
sub
inc
mov
inc
cmp
mov
lods
dec
cmp
pop
out
stos
lock
jae
push
(bad)
mov
push
cld
pusha
jecxz
cmp
loopne
mov
repnz
repz
cwde
jns
ds
arpl
add
popf
mov
and
xchg
outs
mov
dec
inc
jmp
pop
dec
jmp
push
jb
neg
pop
xor
sub
inc
mov
pop
jge
ss
lock
cli
bsf
ins
stos
and
ficom
and
cs
jl
int
ret
pop
es
xlat
int3
aam
sub
retf
(bad)
xchg
shl
nop
sahf
shl
pop
clc
sbb
daa
mov
shl
xchg
push
lahf
and
pop
arpl
les
les
add
mov
and
out
cmps
ror
and
xchg
push
xor
psubsw
cmp
adc
es
pop
into
pop
clc
dec
add
adc
lock
test
sbb
ins
sahf
les
dec
in
popa
mov
jmp
pop
jae
test
mov
and
cmp
mov
bound
push
and
push
loop
dec
ja
lods
pop
push
mov
cmp
jbe
dec
fisttp
ds
stos
inc
fimul
mov
xor
arpl
inc
adc
ss
fisttp
rol
out
inc
sub
adc
fcom
(bad)
and
popf
cmps
cmp
sub
pop
popa
arpl
stc
ficom
ja
data16
cmps
xor
popf
ss
mov
push
xchg
icebp
adc
mov
add
and
nop
ror
nop
lods
or
xchg
into
adc
mov
xchg
addr16
(bad)
movs
repnz
(bad)
(bad)
mov
adc
add
das
mov
jp
jp
push
mov
mov
inc
xchg
jbe
sub
(bad)
(bad)
sahf
mov
push
leave
cmp
cmp
scas
mov
stos
sbb
test
cmp
mov
xor
and
dec
dec
imul
xchg
rol
fs
jle
add
nop
retf
sub
inc
fs
sub
inc
dec
mov
inc
inc
ret
fcmove
xchg
fcom
adc
and
iret
xor
gs
mov
add
xchg
outs
mov
sahf
push
pop
cmps
loop
or
pushf
add
retf
inc
add
movs
jae
sub
jnp
fisub
bound
out
mov
dec
sbb
push
sub
dec
push
retf
inc
mov
add
pusha
(bad)
movs
mov
sub
(bad)
aam
sbb
imul
enter
imul
pusha
les
mov
mov
jb
dec
adc
jb
inc
pop
add
add
(bad)
jnp
mov
cmp
cmps
cmps
mov
dec
out
outs
loope
and
ja
stc
cmps
out
call
jl
dec
inc
pop
aad
int
int3
mov
and
daa
push
and
adc
jmp
call
hlt
loope
add
adc
bound
pop
cmp
push
sub
lahf
pop
sti
inc
mov
dec
xor
out
pop
cmp
data16
repnz
outs
push
mov
mov
aaa
push
inc
aaa
add
dec
pop
jbe
push
popf
xor
loopne
sub
push
jg
movs
call
or
test
in
out
dec
add
shl
pop
pop
mov
ss
mov
clc
arpl
imul
sbb
paddw
dec
mov
xor
rcl
mov
int3
sbb
and
shr
jbe
in
xchg
mov
or
ret
jg
pop
pop
cdq
and
mov
xchg
cdq
add
push
inc
mov
sbb
or
xchg
push
(bad)
push
cwde
mov
jmp
(bad)
daa
dec
out
mov
outs
outs
xchg
inc
js
mov
and
push
jecxz
call
cmps
bnd
arpl
sbb
mov
xchg
or
pop
call
sbb
ins
cmp
cld
dec
inc
mov
mov
jb
iret
sub
cmp
stc
push
movs
repnz
repnz
add
mov
not
mov
inc
push
outs
jmp
push
jp
mov
in
ss
adc
sahf
mov
inc
jle
and
out
mov
cmp
and
aaa
add
movs
sbb
aaa
sbb
push
xchg
sub
data16
push
push
push
test
inc
xchg
cwde
dec
add
in
dec
ret
sub
dec
fld
mov
out
sbb
add
jns
pop
jae
and
in
movs
jnp
add
and
in
(bad)
movs
mov
jb
fwait
dec
mov
dec
aam
sub
inc
push
cmp
mov
fild
xor
(bad)
cmp
sub
push
dec
adc
repnz
ins
mov
push
push
mov
addr16
sti
nop
out
add
mov
pushf
mov
rcl
retf
lods
or
aaa
jle
inc
cmp
add
mov
call
cmps
jbe
lock
mov
dec
out
pusha
push
xchg
call
add
ret
stos
mov
inc
lea
and
mov
jp
rdmsr
fstp
jb
ret
lods
xchg
pop
loopne
xor
jb
lds
or
push
test
cmp
repnz
(bad)
cmp
and
pop
pop
mov
hlt
les
mov
test
ja
xchg
cmp
or
jmp
push
(bad)
pop
push
add
imul
xor
(bad)
xor
dec
pop
cmp
sbb
sbb
aad
sub
sbb
bound
repz
xchg
stos
lahf
imul
xchg
and
add
jb
mov
shl
sbb
xor
popf
mov
ss
jecxz
add
or
ret
inc
cmps
adc
add
xor
(bad)
mov
dec
mov
scas
xlat
add
cmp
pop
in
dec
dec
mov
mov
scas
cli
xchg
sar
and
dec
in
push
xor
and
cmp
ds
push
cmp
pop
nop
sbb
xchg
dec
outs
and
jl
xchg
dec
outs
jle
sub
jnp
pop
mov
dec
sbb
enter
dec
(bad)
xchg
add
jb
call
mov
xchg
pop
mov
pop
mov
push
add
ret
(bad)
jae
(bad)
add
xor
or
shl
cmp
movs
push
rcr
jno
std
test
aaa
repnz
sub
ss
in
add
rcr
push
sbb
(bad)
and
movs
mov
es
sbb
jg
addr16
jp
in
cmps
lock
ret
outs
or
push
push
mov
movs
repnz
and
cld
inc
cmps
and
daa
out
dec
cmp
xchg
sbb
sub
retf
into
fidiv
sahf
inc
jl
ret
push
adc
inc
jecxz
lds
(bad)
mov
dec
in
sub
sbb
imul
retf
lahf
sub
and
cli
enter
movs
sbb
pop
pop
sub
mov
cmp
aas
mov
dec
cmps
addr16
mov
add
mov
cwde
and
mov
sub
jmp
aam
pop
add
outs
fisub
test
mov
xchg
call
stos
and
sub
mov
aaa
add
or
xor
imul
bound
repnz
inc
jb
stos
das
test
and
in
mov
enter
shl
bound
inc
sbb
ja
and
push
(bad)
addr16
loope
pop
cmps
mov
and
rcr
clc
dec
dec
data16
(bad)
mov
mov
arpl
into
out
inc
dec
and
imul
inc
mov
loop
cli
xchg
jg
and
or
adc
mov
movs
pop
push
arpl
mov
popf
out
mov
(bad)
(bad)
(bad)
(bad)
xor
popa
xchg
xchg
add
cmp
out
pop
js
int
inc
xchg
cdq
mov
dec
push
jle
cmp
pop
pop
pop
xor
xchg
retf
pop
cmps
fild
imul
add
jp
test
call
gs
xor
lock
rcl
fisub
and
jmp
cmp
outs
mov
sub
xchg
adc
neg
cli
rcr
cmps
sbb
adc
ficom
dec
sub
mov
pop
ror
(bad)
(bad)
mov
xchg
pop
and
ins
into
xchg
and
jo
pop
ds
sbb
inc
div
mov
lea
mov
add
out
sar
aam
jo
out
hlt
mov
inc
push
mov
call
pop
mov
xchg
ret
or
pop
neg
adc
cmp
add
dec
add
dec
or
icebp
and
ss
retf
lea
xchg
(bad)
stos
retf
js
(bad)
dec
lahf
sahf
xor
stos
dec
add
retf
sub
sahf
mov
xchg
sar
cmp
and
sub
cmps
push
push
call
aas
daa
pushf
mov
cmp
jle
(bad)
dec
shl
clc
mov
ds
iret
jmp
push
or
push
adc
adc
lock
inc
shl
jbe
push
jo
pop
ss
fcmovu
and
add
jmp
sub
jle
xor
(bad)
icebp
psubsw
jb
loopne
ss
out
mov
jg
add
push
(bad)
in
sahf
sahf
mov
inc
push
and
add
sub
push
(bad)
stos
in
(bad)
sbb
ss
mov
mov
adc
pop
mov
inc
push
fisub
xor
ds
pop
into
(bad)
mov
add
cmps
ja
jecxz
dec
sub
retf
mov
and
mov
lds
inc
mov
jge
scas
push
sub
int3
sahf
sub
out
cmp
sbb
xlat
into
xor
mov
sbb
sub
lahf
xchg
sbb
or
ror
fcomp
inc
(bad)
inc
pop
ds
inc
imul
retf
pop
gs
push
push
and
xchg
and
ret
pushf
mov
mov
push
xchg
lea
fs
pop
jmp
mov
jmp
les
ins
stos
xchg
mov
pusha
mov
dec
add
iret
stc
call
xchg
push
repnz
xchg
xchg
(bad)
mov
sub
ja
mov
scas
sbb
out
or
jbe
repz
cmp
movs
aas
mov
leave
push
xchg
jae
fldenv
xchg
push
dec
xchg
ja
pop
xchg
mov
outs
push
mov
adc
popf
jno
ins
adc
aad
mov
mov
xor
inc
ss
xchg
jmp
push
test
ins
and
ja
aad
daa
xchg
mov
movs
fstp
or
movs
jl
xchg
ja
jmp
repz
sahf
cmp
mov
scas
test
popa
imul
mov
outs
xchg
rol
js
xchg
mov
fisubr
dec
es
inc
ficom
les
xor
sub
scas
pusha
sbb
rcl
mov
rcr
xchg
movs
sbb
movs
call
add
daa
and
repnz
xor
jo
and
daa
jno
adc
loope
aaa
bound
fwait
or
or
pop
iret
xor
xchg
inc
movs
shr
lods
push
(bad)
mov
mov
outs
fisub
mov
mov
add
xor
push
pop
add
fld
es
test
push
jle
xor
call
lock
jo
cmp
push
out
sbb
xchg
push
and
std
setle
loop
adc
or
das
fwait
div
es
add
dec
lods
imul
bound
push
xchg
jle
ss
outs
dec
das
push
cmp
add
mov
push
test
fstp
test
icebp
mov
call
mov
jae
mov
ins
mov
mov
leave
enter
test
jae
xchg
gs
add
inc
mov
iret
mov
(bad)
push
leave
cli
mov
add
stc
lods
sahf
pop
lock
add
push
xchg
loope
push
mov
shl
mov
add
invd
pop
imul
inc
loopne
ins
sbb
retf
clc
imul
aas
push
imul
sub
movs
sub
leave
xchg
dec
mov
pop
adc
stos
lods
dec
jmp
and
fist
xor
jmp
lds
retf
push
push
test
outs
cli
jmp
(bad)
sbb
pusha
out
inc
or
jb
and
test
js
xor
rcl
push
jns
dec
xor
inc
(bad)
dec
jle
add
xor
xchg
pushf
jp
add
mov
hlt
call
adc
sbb
add
imul
dec
mov
and
ss
inc
(bad)
outs
pop
mov
mov
sbb
mov
or
pop
push
jns
fisub
or
xchg
daa
pop
(bad)
stos
call
cmp
jns
clc
or
fs
dec
and
or
sar
and
mov
mov
stos
inc
scas
jne
mov
pop
pusha
push
xchg
xor
mov
mov
outs
fisttp
and
pushw
es
dec
xor
mov
push
xor
add
xor
add
sub
pop
cli
mov
mov
into
xchg
dec
ret
dec
push
add
nop
pop
lea
sbb
jnp
pop
jmp
sub
mov
xchg
mov
jno
and
or
bound
jae
xchg
outs
dec
push
mov
imul
sar
jb
inc
cmp
push
sub
retf
addr16
mov
mov
pop
stos
xchg
jecxz
mov
mov
fild
push
sbb
int3
push
mov
push
iret
pop
fild
or
lahf
sahf
xor
ret
cli
sub
xchg
cli
add
xchg
rcr
out
cli
icebp
push
cmp
(bad)
pop
jg
test
(bad)
inc
mov
pop
repz
mov
out
sub
inc
lahf
or
(bad)
jbe
lods
pop
fiadd
mov
fnstsw
pop
pop
hlt
pop
shl
inc
push
push
jecxz
jbe
cmp
jmp
je
add
mov
sub
outs
fisub
(bad)
dec
push
fadd
push
add
lea
out
push
sbb
and
jmp
rcr
inc
sub
int3
dec
or
pushf
add
push
push
jle
dec
pushf
or
cmp
and
adc
mov
pop
adc
dec
fsub
retf
sbb
mov
and
sub
outs
inc
fisubr
push
mov
or
inc
mov
push
lea
(bad)
adc
retf
cmp
and
or
and
sar
pop
lods
stos
xchg
inc
jl
lock
in
fldenv
clc
adc
mov
cli
xchg
loope
or
bound
mov
imul
out
xchg
icebp
adc
mov
mov
lods
dec
ja
sub
into
imul
iret
pop
push
test
outs
inc
mov
leave
repnz
adc
sbb
sub
ret
dec
cld
and
xchg
mov
pop
xchg
jle
mov
jnp
adc
adc
mov
out
mov
cli
push
out
inc
mov
call
push
xchg
inc
js
fwait
addr16
cmp
pop
push
bndstx
sti
cld
fcom
aaa
pop
ss
mov
cmp
lea
push
add
inc
lahf
mov
xchg
mov
inc
push
fdivrp
pop
adc
jp
xchg
cmp
jmp
push
imul
xor
gs
ret
test
mov
sbb
pop
xchg
js
retf
rcl
shl
scas
hlt
fistp
push
sub
push
out
and
sub
cmps
mov
cli
das
data16
popf
jl
cmp
call
mov
push
inc
lds
and
inc
mov
or
or
cmova
mov
mov
mov
out
cmps
mov
cmp
dec
push
lods
sub
and
xchg
mov
jno
push
out
inc
jp
jecxz
sahf
test
data16
jge
in
pop
ss
lods
push
outs
adc
or
mov
or
xchg
jg
mov
and
pusha
adc
rcl
adc
and
cwde
jecxz
add
dec
lahf
dec
and
push
cmps
inc
inc
loopne
sub
adc
mov
data16
in
push
cmp
outs
sub
out
push
pop
and
rcl
sbb
(bad)
repnz
cmp
sti
fisub
and
jae
call
adc
inc
push
outs
push
iret
lea
mov
lods
mov
adc
mov
mov
adc
add
ja
pop
mov
xchg
fs
loop
inc
imul
add
xchg
push
aas
iret
xlat
dec
outs
push
adc
sub
mov
lock
adc
adc
hlt
mov
adc
dec
shl
adc
aad
jb
pop
add
mov
aaa
pop
in
push
pop
push
mov
adc
loope
cwde
jb
cmp
or
add
iret
fild
cdq
inc
xchg
stos
adc
xchg
xor
stos
(bad)
and
out
lock
mov
cwde
push
push
mov
xchg
xor
dec
in
icebp
bound
jp
dec
or
inc
mov
cli
pushf
and
and
rol
add
pop
lods
cmc
adc
sbb
mov
mov
mov
jbe
dec
or
inc
outs
jle
cmc
inc
rcl
xor
pop
rcl
pop
inc
adc
(bad)
scas
xor
jl
push
repnz
cmp
jne
fstp
repnz
icebp
dec
add
cmps
repnz
lea
pop
mov
bnd
retf
repnz
adc
cld
in
(bad)
mov
push
lods
pop
jge
xchg
fcmovnbe
bound
ds
jmp
lock
das
adc
mov
push
inc
loop
push
add
dec
push
and
aas
mov
mov
mov
dec
xchg
push
sub
jae
outs
dec
lahf
cmp
xchg
pop
loop
test
lahf
dec
pushf
(bad)
cld
xchg
jo
pop
jge
ret
test
cmp
(bad)
lahf
pop
fisubr
les
sub
add
mov
push
cmp
cmc
cdq
mov
aam
call
cmp
popf
repnz
imul
rcl
mov
icebp
repz
pop
or
out
cs
(bad)
mov
jne
push
sar
push
mov
test
mov
jne
mov
scas
das
out
cmp
push
mov
and
jge
out
inc
jg
stos
fldenv
mov
adc
add
lds
test
cmp
(bad)
aas
xor
outs
rol
(bad)
cld
mov
cmp
or
test
cmp
lahf
fstp
mov
cmp
sahf
xor
mov
loopne
loopne
or
in
lea
xchg
int
retf
sub
cmp
and
push
push
add
mov
jl
bound
daa
sub
(bad)
(bad)
xchg
mov
mov
js
add
adc
les
out
fcmove
sub
int3
pop
cli
pushf
(bad)
jmp
cs
push
int
in
jne
scas
mov
cmp
iret
into
add
icebp
xor
loop
mov
cmp
add
jae
mov
inc
mov
cmps
lahf
gs
sbb
add
jl
retf
dec
mov
xchg
xchg
(bad)
scas
pop
arpl
outs
sub
and
pop
jo
sub
xchg
xlat
loop
push
xchg
xor
ret
xchg
sti
into
sbb
and
push
or
or
out
out
scas
mov
pop
or
fs
add
add
push
and
ret
or
inc
xor
mov
cdq
gs
jne
xchg
sub
mov
mov
add
adc
imul
(bad)
jmp
rcl
pop
inc
add
aaa
mov
mov
adc
enter
fiadd
retf
mov
(bad)
cmp
sahf
addr16
test
add
and
(bad)
loop
pop
mov
and
cmps
outs
or
adc
xchg
jp
mov
push
and
rcl
sbb
popa
xchg
or
push
mov
push
lahf
inc
jp
add
cmp
imul
cmc
mov
in
mov
mov
mov
repnz
imul
adc
scas
add
mov
push
or
jle
dec
(bad)
icebp
add
cmp
fsubr
and
pop
mov
jp
pop
not
push
mov
jns
cdq
daa
imul
(bad)
shl
bound
shl
inc
pop
and
mov
push
mov
(bad)
and
test
pop
cmp
xchg
cld
jb
xor
imul
int
pop
mov
daa
cmp
xchg
repnz
jns
dec
test
push
cmp
leave
aas
retf
aas
imul
xchg
cmps
ds
(bad)
cmp
cli
fwait
push
fwait
imul
fiadd
mov
sub
xchg
int3
mov
mov
xor
jbe
and
cli
xchg
daa
rol
dec
xchg
dec
xor
outs
sahf
pop
addr16
inc
(bad)
push
xor
arpl
cmp
cli
fs
cs
push
aam
inc
rol
xor
ret
js
ret
mov
push
cmp
adc
pop
nop
xor
stc
pushf
xchg
or
in
movs
jns
push
or
cmp
retf
jo
pop
xor
test
push
test
and
outs
out
pop
ds
nop
es
mov
addr16
aaa
inc
(bad)
out
ss
or
xor
mov
cmps
jo
sahf
fidivr
add
fidiv
jle
xor
mov
mov
pop
and
mov
mov
addr16
into
call
add
outs
scas
stc
dec
add
out
in
jmp
mov
inc
or
or
stc
aaa
popa
jle
(bad)
jmp
or
ja
adc
data16
fimul
out
(bad)
mov
sbb
pop
stos
push
mov
pop
das
sar
push
cmp
(bad)
xchg
sbb
cmp
sbb
(bad)
or
sahf
fld
fsubr
sub
add
cs
(bad)
mov
ror
xchg
mov
pusha
xchg
ja
lahf
loop
jecxz
(bad)
mov
xor
mov
retf
shl
jmp
cmp
or
push
mov
and
pop
rol
cmp
(bad)
sbb
dec
cld
das
xor
pop
test
add
loop
jb
add
push
adc
dec
mov
jb
gs
or
push
mov
mov
or
(bad)
xlat
or
xchg
jl
out
arpl
je
push
fidivr
cmp
sahf
inc
sar
jbe
add
add
fld
bound
loopne
push
pop
inc
pop
not
mov
add
jle
call
add
or
xor
add
mov
fs
mov
jmp
add
dec
lock
xor
arpl
nop
push
les
xor
push
pop
fs
in
int
jl
and
sti
pop
ja
jl
cmp
adc
popa
stos
add
addr16
sti
ficom
jb
add
push
inc
shl
ja
stos
or
cmps
cmp
push
add
mov
pop
pop
test
aam
adc
push
stos
inc
pop
pop
dec
cmp
daa
mov
inc
xor
sbb
lods
outs
sub
push
jbe
outs
jg
sub
(bad)
dec
gs
pushf
mov
inc
or
inc
lods
mov
dec
sbb
loopne
xor
scas
add
mov
repnz
or
pushf
aas
cmp
inc
shr
push
test
mov
leave
lds
dec
or
outs
jae
add
push
cmp
int3
lea
cmp
and
dec
cmps
das
ret
cmc
cmovo
shr
add
int3
sub
mov
add
data16
cmp
(bad)
ror
test
fild
aas
jnp
and
data16
ror
rcl
bound
inc
adc
jecxz
xchg
push
mov
xchg
inc
loop
retf
(bad)
sbb
push
imul
push
inc
dec
es
sub
jno
cmp
xor
add
inc
test
cld
xor
fiadd
xchg
(bad)
sub
arpl
(bad)
adc
(bad)
mov
and
cmps
sub
ror
(bad)
call
mov
bound
cmp
fsub
sar
ins
repz
pop
inc
and
outs
scas
mov
retf
pushf
bsf
xor
dec
cmps
mov
mov
xchg
out
fild
dec
mov
adc
add
inc
adc
out
sub
push
fisttp
inc
nop
dec
pop
cmps
ret
cld
push
cmp
mov
mov
es
addr16
push
fcomi
es
dec
adc
inc
xor
(bad)
xchg
or
or
pop
push
or
pop
inc
pop
(bad)
xor
aaa
mov
and
push
shr
and
bound
mov
call
test
adc
inc
xor
outs
xchg
cmp
inc
cmp
stos
sbb
out
cmps
inc
push
(bad)
stos
mov
or
jb
mov
shl
cmp
push
bound
setbe
dec
xor
adc
jb
das
add
push
mov
push
push
mov
add
cmp
and
mov
mov
imul
dec
push
enter
or
adc
inc
mov
pop
fwait
dec
mov
inc
pop
repnz
not
cs
lahf
int
fdivr
cmp
and
push
cmp
test
mov
jle
clc
add
dec
mov
ret
into
mov
out
arpl
dec
dec
mov
cmp
dec
inc
ins
leave
pop
jb
mov
push
repnz
xor
imul
sar
dec
push
jle
adc
mov
mov
cmp
and
aam
ret
jmp
stos
sub
cmp
push
mov
mov
push
js
pop
movs
cmps
inc
jle
push
sub
fs
stos
dec
pop
jno
(bad)
fiadd
mov
xor
pop
pop
scas
sahf
daa
(bad)
aas
test
ss
sub
test
add
lods
pop
aaa
inc
pcmpgtd
sub
aaa
mov
dec
outs
bound
jne
pop
out
add
sbb
cmp
cld
xchg
jle
push
in
test
std
jecxz
sbb
adc
mov
leave
inc
stos
call
xchg
pusha
adc
xchg
dec
aaa
shl
inc
add
es
fwait
sub
in
lahf
aad
(bad)
add
sahf
adc
adc
add
add
or
mov
inc
cmp
push
mov
retf
push
pop
in
add
cmp
dec
out
les
ret
pop
adc
out
cmp
ds
pop
popa
add
and
or
pop
jmp
ds
or
cli
jl
mov
int3
je
pop
adc
clc
cmp
mov
sub
je
or
pop
mov
mov
add
leave
aaa
jne
loopne
xchg
mov
es
sub
adc
jns
(bad)
xor
mov
sub
mov
nop
ret
add
dec
xchg
xor
dec
jge
push
dec
cld
add
or
pop
jbe
inc
add
aas
mov
es
jl
jl
adc
and
gs
iret
cmp
push
fdivr
aaa
bound
pop
gs
jbe
ucomiss
fdivr
sub
out
add
lahf
or
lock
mov
inc
mov
and
fisttp
xchg
(bad)
adc
rcl
loop
xchg
test
xchg
pop
rcr
cmp
data16
in
stos
loope
out
cli
(bad)
jg
adc
mov
inc
push
mov
inc
dec
loopne
cmp
das
enter
xchg
push
mov
and
push
inc
xor
cld
dec
adc
call
or
or
retf
cld
retf
jle
mov
or
add
lock
mov
dec
and
add
push
bound
nop
dec
call
mov
jae
jmp
test
mov
(bad)
xchg
out
data16
push
inc
jne
out
ss
xor
dec
jae
push
adc
jl
xor
dec
push
and
xchg
push
ds
and
cmp
out
jo
inc
popf
inc
cmps
test
adc
xor
push
jns
test
cs
jecxz
sub
cmps
push
daa
xchg
and
pop
jmp
cmp
jp
rcr
lock
enter
ret
add
daa
dec
and
mov
out
add
repnz
push
add
pop
adc
test
add
add
push
cli
je
icebp
mov
sbb
add
sub
ror
stos
xor
cmp
imul
jbe
dec
fimul
lods
(bad)
jle
sub
mov
outs
enter
adc
out
pop
cmp
sbb
out
fnstenv
ins
ds
jmp
push
test
sub
pop
mov
repz
adc
stc
xor
mul
arpl
movs
bound
jmp
xchg
add
into
mov
test
add
jmp
add
adc
psrld
jg
push
jle
mov
js
mul
inc
cmp
xor
stos
jmp
push
neg
(bad)
mov
hlt
je
shl
sub
cmp
mov
mov
aaa
mov
movs
je
push
sahf
outs
pop
imul
(bad)
test
pop
jmp
mov
and
xchg
mov
mov
scas
cmp
jo
sbb
addr16
fiadd
ins
stos
mov
jbe
dec
cwde
cli
in
fisttp
pop
test
data16
lahf
jle
mov
pop
ds
sbb
cld
and
ins
push
mov
cmp
push
mov
rcl
fisubr
sub
mov
inc
mov
(bad)
(bad)
xor
and
es
pop
data16
(bad)
inc
push
pop
out
dec
dec
pop
adc
inc
mov
xor
stos
mov
out
push
jmp
inc
cmc
lahf
push
cmps
pop
push
dec
ds
fwait
sub
fisub
pusha
mov
adc
loopne
push
or
xor
fisub
nop
push
ss
(bad)
push
push
and
add
adc
sub
push
xchg
js
(bad)
out
sahf
fsubr
cmp
mov
pop
jl
mov
adc
aas
pop
add
fdiv
mov
inc
mov
add
mov
cmp
adc
jb
ret
adc
dec
inc
fstp
or
loopne
pop
out
mov
(bad)
call
push
shr
mov
adc
xor
aam
jmp
mov
push
xor
(bad)
fcom
mov
js
test
mov
jle
rol
or
retf
(bad)
adc
stos
rcl
(bad)
cmp
cmp
mul
jecxz
call
push
cmp
ret
jl
jb
(bad)
in
dec
cmps
ret
adc
arpl
fs
in
xchg
cmp
int
push
pop
mov
push
mov
xor
jmp
cmp
hlt
out
test
je
mov
je
inc
push
add
and
adc
and
retf
std
in
(bad)
and
lea
xchg
jb
test
cmp
js
add
xchg
and
retf
pop
or
pop
(bad)
out
adc
dec
xor
adc
sahf
test
push
mov
adc
cld
pop
retf
push
nop
adc
adc
cli
jb
add
icebp
ins
into
adc
dec
mov
(bad)
fidiv
retf
inc
and
fstp
xchg
icebp
xor
bound
and
adc
pop
(bad)
mov
adc
sbb
push
dec
aas
sahf
dec
mov
fwait
inc
ja
inc
mov
inc
fistp
inc
push
dec
out
pop
add
pop
test
push
cmp
leave
xor
xchg
cmp
mov
in
pop
in
xor
add
xor
inc
fmul
jmp
mov
in
jb
inc
cmps
movs
xchg
and
jp
and
adc
or
inc
ret
inc
sub
test
mov
fs
imul
pop
into
adc
addr16
pop
mov
or
add
and
sub
push
ds
add
add
and
stos
sub
sub
add
mov
out
fs
push
ds
and
scas
(bad)
pop
ins
push
xchg
imul
inc
shr
push
sub
add
mov
ss
mov
jmp
stos
sar
push
push
jbe
pop
dec
or
jg
ror
ret
add
cwde
pop
xchg
adc
test
mov
sahf
jp
xchg
push
jcxz
and
imul
dec
and
(bad)
retf
scas
fiadd
gs
mov
mov
pop
add
fwait
mov
jbe
movs
icebp
sbb
test
mov
into
push
js
cmp
mov
or
pop
pop
outs
jp
or
jae
mov
xchg
or
push
inc
mov
(bad)
push
pop
aaa
mov
scas
cwde
pop
ret
cmp
inc
sub
pusha
loopne
inc
cmp
add
jp
data16
mov
push
push
aad
lods
add
dec
sbb
shr
push
jmp
outs
xor
jle
pop
or
and
jg
adc
or
aas
cmp
and
sahf
mov
(bad)
mov
adc
sub
inc
pop
and
bound
jmp
bound
push
dec
jns
jmp
mov
sbb
cmp
rol
and
aaa
adc
adc
pop
sub
inc
movs
adc
icebp
test
cmp
cli
add
stc
xchg
inc
sub
push
imul
sahf
and
xchg
sbb
aas
dec
pusha
aaa
call
xlat
shl
sar
pop
mov
dec
mov
push
in
ret
xor
jle
pop
mov
jbe
xor
cs
xor
dec
mov
mov
lods
ss
loopne
bound
and
stos
out
inc
inc
xor
and
mov
fcomp
xchg
ja
add
test
xchg
lock
or
lods
sahf
fisub
aam
and
dec
aam
lea
aaa
je
stos
mov
repnz
ss
cli
inc
mov
sbb
pop
dec
and
mov
daa
ins
fsubr
mov
mov
pop
push
mov
and
mov
shl
ret
inc
adc
cmps
jmp
fild
cmc
shl
in
es
(bad)
test
test
mov
and
sahf
lods
inc
push
test
adc
inc
pop
pcmpgtw
(bad)
push
sbb
or
xlat
das
mov
inc
(bad)
jle
mov
dec
pop
dec
iret
sub
mov
lock
xchg
dec
push
call
sbb
pop
mov
data16
inc
mov
mov
ret
rcl
inc
push
mov
or
sub
je
pop
pusha
in
cmps
(bad)
sub
mov
or
cmps
dec
push
push
and
test
cmps
(bad)
fdiv
jb
xchg
inc
int
jb
pop
add
mov
sbb
cmp
mov
ds
xor
cmc
addr16
sahf
xchg
push
cld
out
ins
sbb
ins
data16
js
mov
(bad)
pop
movs
or
not
jae
pop
test
bound
jo
and
in
xor
adc
test
popa
and
inc
popa
hlt
pop
enter
pop
sub
fidivr
add
mov
add
(bad)
outs
mov
ror
lea
mov
out
pop
mov
mov
jbe
lock
pop
loop
pop
ds
push
cmp
push
or
fcomp
and
es
inc
mov
or
call
test
ret
bound
xchg
and
ins
inc
jmp
pop
add
cmp
imul
iret
dec
add
push
pop
inc
mov
loope
ss
pop
mov
mov
inc
imul
jle
and
xchg
cmp
dec
inc
jns
push
mov
or
inc
stos
add
and
dec
loopne
inc
dec
adc
int3
inc
or
cdq
aam
xchg
and
icebp
aad
push
push
adc
bound
sub
lock
add
outs
nop
mov
add
adc
popa
repz
mov
mov
mov
les
ret
sar
fld
cs
sub
or
clc
ficom
mov
dec
sub
add
sub
inc
sbb
sbb
out
ss
jno
(bad)
(bad)
pop
cs
pop
add
xchg
jmp
lahf
jmp
ja
ret
adc
out
sahf
ss
shl
add
mov
add
retf
pop
cmp
js
adc
dec
aas
xchg
jmp
mov
xchg
icebp
int3
fimul
fbld
jmp
sbb
fs
ror
(bad)
fidiv
cmp
dec
add
xor
cs
sar
inc
ins
sub
jno
aas
dec
outs
xor
sbb
cmps
cs
inc
(bad)
stc
dec
sbb
adc
adc
(bad)
fild
mov
inc
mov
xor
(bad)
sbb
dec
(bad)
retf
and
or
ja
lock
cmp
aaa
iret
inc
cmp
test
(bad)
mov
bound
mov
fadd
fdivr
ins
mov
outs
outs
je
mov
out
movs
int
mov
jnp
jle
inc
imul
or
mov
sub
push
push
pusha
clc
add
xor
sub
(bad)
ins
and
pop
mov
push
in
mov
mov
stos
mov
jmp
mov
jmp
mov
xchg
cmps
in
iret
push
loopne
inc
ror
push
outs
sbb
lds
mov
mov
cmp
mov
adc
sbb
repnz
ins
jecxz
mov
mov
cmp
sbb
movs
lahf
fst
mov
leave
pop
and
add
retf
movaps
push
mov
or
add
mov
inc
repnz
push
sub
jmp
out
(bad)
fs
fdivr
ins
arpl
jl
icebp
movzx
push
pop
out
sbb
mov
mov
ret
movs
jno
scas
xchg
cmps
jmp
ins
add
add
push
mov
pop
cli
xor
stos
out
jg
(bad)
test
sti
add
fwait
pop
mov
jns
xor
or
inc
ret
mov
repz
or
add
add
ret
pop
lods
xlat
xchg
push
out
loop
(bad)
lds
ret
mov
test
push
icebp
xchg
das
fnstenv
fsubp
or
jl
adc
dec
sbb
test
cmp
jg
cmp
xor
cmp
mov
sub
rcr
push
ret
and
fwait
les
ss
mov
movs
cmp
jge
inc
movs
cld
daa
mov
sar
fwait
add
jb
fimul
dec
aad
xchg
xchg
js
retf
call
jo
fs
mov
and
lds
int3
(bad)
push
mov
dec
mov
(bad)
popa
scas
dec
pop
mov
sar
and
adc
xlat
cdq
mov
xchg
jl
mov
xlat
mov
mov
pop
aad
mov
scas
scas
dec
jle
add
inc
repz
test
cld
push
repz
(bad)
retf
sti
push
ds
adc
(bad)
add
rcl
inc
(bad)
cli
inc
xchg
jb
in
nop
xchg
aas
mov
inc
outs
dec
cmp
rcr
fisubr
mov
pop
adc
aad
sbb
push
outs
mov
inc
xor
retf
das
mov
inc
shl
add
into
aaa
pop
fs
outs
mov
or
jo
jmp
(bad)
jl
xor
daa
push
xor
xchg
lock
jbe
fcom
or
jbe
out
fs
jno
jnp
je
aaa
lahf
retf
inc
stos
cwde
and
pop
(bad)
rcr
pushf
nop
out
mov
mov
scas
dec
ja
out
cli
jmp
aam
push
xchg
test
mov
cs
les
push
mov
adc
stos
call
out
pop
rol
or
inc
gs
sbb
mov
movs
imul
xchg
inc
stos
and
dec
mov
(bad)
adc
scas
push
imul
fiadd
pop
fnsave
add
(bad)
fidivr
sbb
xchg
sbb
mov
sub
and
push
pop
cmps
out
xchg
jle
stos
mov
xlat
dec
sbb
push
xchg
fistp
sbb
adc
ds
mov
std
pop
cmc
pop
xchg
fucomip
out
sub
mov
sub
movs
movups
push
cmc
(bad)
pop
sar
xor
cdq
adc
inc
jp
pop
stos
mov
mov
dec
fbstp
fnstcw
(bad)
push
aad
mov
and
pop
push
mov
inc
mov
repnz
or
or
or
mov
cwde
pop
out
inc
stos
dec
cmps
ror
lock
mov
movs
sahf
mov
(bad)
sbb
pop
push
sbb
or
mov
or
jbe
test
outs
sbb
mov
repz
(bad)
(bad)
call
cmp
add
(bad)
jmp
xor
fwait
ret
imul
out
iret
pop
sar
aaa
adc
iret
into
jnp
mov
repz
icebp
test
mov
aam
or
jg
hlt
ret
outs
es
sub
stos
test
jbe
stos
sbb
jbe
mov
into
bound
adc
cli
mov
ret
mov
pop
jmp
mov
mov
xchg
shl
out
xchg
sbb
sbb
stos
dec
loop
push
inc
cld
and
dec
(bad)
stos
jns
mov
sbb
or
mov
sahf
sbb
clc
xor
mov
addr16
cmp
jmp
(bad)
mov
sahf
pop
pusha
xor
sub
pop
jmp
cmps
mov
pop
inc
jmp
lods
mov
pop
inc
into
scas
je
call
pop
clc
add
and
or
movs
iret
fadd
xor
mov
add
aas
aad
cmp
mov
cdq
add
push
jmp
hlt
ja
out
pop
jecxz
js
loopne
fisub
and
lahf
mov
inc
ret
push
add
and
and
inc
test
rcr
mov
cmp
jle
(bad)
mov
shr
bound
push
cmp
fs
(bad)
ficom
into
jg
add
xor
loope
(bad)
mov
mov
lock
pop
lea
ss
and
enter
iret
ffree
ss
inc
sahf
das
and
mov
xsaves
mov
pushf
outs
enter
sar
test
in
adc
hlt
imul
sbb
xor
inc
out
ficomp
loop
xchg
cmps
into
inc
mov
adc
sbb
gs
push
adc
sbb
cld
sbb
jnp
push
pop
pop
mov
xchg
push
and
int
cmps
(bad)
retf
int3
xchg
cmp
or
ror
push
movs
ror
push
jmp
(bad)
xor
adc
cdq
xor
mov
mov
push
cmp
mov
rol
bswap
(bad)
xchg
mov
and
sbb
iret
xchg
jp
stos
sbb
jg
imul
push
in
addr16
cmp
ins
jbe
or
loop
xchg
jp
ret
test
mov
out
popa
xor
mov
pop
cmp
push
(bad)
stos
ja
xor
pop
adc
mov
out
bound
stc
mov
in
ss
xor
popa
(bad)
xor
sahf
mov
cmc
inc
or
aas
lea
lahf
push
push
dec
outs
jg
mov
or
repz
mov
aad
mov
repnz
add
add
sbb
(bad)
push
or
sub
push
jno
or
shr
jg
and
sub
cs
ds
out
xchg
mov
fnstcw
xchg
cmp
sbb
sbb
add
xchg
inc
push
aas
pslld
lock
cmp
add
scas
pop
les
repnz
adc
aas
adc
in
nop
repz
sbb
xchg
sub
push
icebp
and
mov
pop
icebp
and
pop
cld
or
sbb
fistp
(bad)
jle
aaa
sub
nop
pop
or
ins
jbe
imul
das
repz
or
(bad)
repz
add
ja
add
mov
jle
and
push
pop
pop
imul
dec
(bad)
or
icebp
fld
and
cmp
push
push
pop
cmp
xchg
adc
in
(bad)
rcl
inc
add
or
fidivr
pop
ss
cmp
pop
mov
ss
xor
into
cmp
pushf
sbb
mov
ins
rol
add
sbb
add
add
cmp
popa
adc
and
pop
aaa
cmp
div
push
aas
shr
iret
rol
call
in
mov
mov
adc
sbb
mov
ds
ds
repnz
or
xor
sub
aad
or
retf
mov
adc
inc
mov
cmp
xchg
add
ss
pop
add
and
mov
scas
jg
add
(bad)
xor
mov
sub
scas
dec
and
aam
or
dec
cmps
or
inc
mov
inc
dec
jmp
call
or
fisub
outs
mov
mov
adc
mov
xor
sub
jp
xor
mov
lds
cli
pop
cmp
out
dec
test
push
call
mov
and
imul
fwait
mov
fisubr
xchg
xchg
add
mov
push
push
int3
sub
es
lock
icebp
inc
xchg
fld
inc
clc
cmps
and
mov
mov
push
push
inc
fidivr
pop
shl
push
dec
pop
mov
imul
and
arpl
mov
jp
mov
pop
gs
mov
out
push
shr
and
inc
mov
adc
pusha
add
ds
xchg
xor
bound
xchg
jle
jg
test
push
cmc
xor
fisubr
push
mov
stos
mov
inc
std
das
lock
mov
(bad)
pop
jns
mov
test
jg
cmp
loopne
add
pop
test
adc
es
nop
aas
jecxz
cmp
or
push
(bad)
call
push
pop
popa
dec
scas
out
es
mov
mov
(bad)
cmps
sub
ins
mov
mov
call
xor
cmp
mov
mov
popa
or
stos
push
and
dec
push
fisub
inc
enter
xchg
retf
adc
je
repnz
mov
jg
inc
sahf
std
adc
lods
or
pop
cmp
sub
nop
sbb
out
jne
movs
mov
enter
xchg
xor
mov
sub
push
sahf
sub
cmp
push
xchg
retf
cmp
outs
(bad)
sti
call
mov
lahf
push
cmp
movs
mov
or
in
mov
push
jo
jecxz
movaps
data16
xchg
dec
ja
repnz
mov
push
ret
jo
mov
mov
nop
daa
xchg
xchg
and
cmp
gs
dec
stc
add
mov
cmp
sub
not
mov
pop
jmp
xchg
xchg
add
push
jp
push
lds
data16
adc
jb
sbb
jbe
cmp
inc
ja
cld
add
ins
push
mov
ja
jmp
push
cdq
dec
jno
mov
mov
and
sbb
sahf
(bad)
ror
jmp
dec
jecxz
cmps
dec
xchg
mov
ret
mov
mov
sahf
and
jb
jecxz
and
inc
std
or
jle
sbb
xor
(bad)
dec
clc
pop
xor
adc
ror
leave
es
das
add
ins
fisttp
adc
rcr
(bad)
sub
test
adc
retf
jb
jmp
sahf
add
sbb
push
adc
into
lea
fwait
lea
ss
rcl
cmp
fcmovnb
and
push
pop
retf
mov
aas
pop
(bad)
xchg
scas
cdq
or
push
sbb
daa
fcomp
repnz
xor
mov
pop
mov
clc
into
test
bound
scas
pusha
push
push
pop
and
arpl
add
add
scas
mov
es
icebp
jne
add
es
shr
pop
ret
lahf
(bad)
xor
mov
mov
mov
or
add
cli
adc
or
mov
scas
xlat
sub
mov
or
pxor
xor
in
mov
shl
cmp
sub
push
add
mov
sub
mov
push
cmps
stos
jne
sbb
pop
pushf
mov
and
xchg
cli
jae
add
push
dec
push
mov
jg
push
adc
push
lods
inc
jle
xor
lods
push
int3
cmps
push
fimul
clc
or
add
(bad)
retf
jle
jle
sbb
inc
out
xchg
pop
pop
ss
xor
cmp
add
pop
xor
cs
adc
lahf
xor
push
lods
mov
xor
retf
mov
sub
ins
call
add
shl
fisub
add
jae
mov
aam
clc
dec
sahf
mov
call
and
outs
and
mov
push
rcr
test
retf
add
ins
pop
mov
and
mov
int
xchg
scas
mov
jae
xchg
popa
retf
xor
and
mov
cmp
cwde
nop
jmp
stc
nop
fild
movs
hlt
sub
mov
push
add
xor
or
ss
fimul
iret
and
es
push
jo
call
retf
repz
add
push
dec
mov
iret
push
jl
cmps
pop
add
xor
xor
pop
ss
pop
imul
call
popf
sub
add
lock
push
pop
ins
inc
bound
mov
es
fisttp
push
daa
inc
jmp
sahf
rcr
cmp
imul
icebp
retf
rol
sbb
inc
outs
cmp
cmps
cmc
push
fs
dec
jp
dec
mov
jg
out
jb
mov
aas
cmp
dec
jae
ins
dec
fldenv
mov
dec
or
cld
jmp
push
sbb
inc
mov
in
add
enter
push
push
sbb
rcl
int
dec
and
mov
jp
push
adc
mov
test
dec
mov
shl
scas
add
cmp
dec
and
(bad)
and
adc
dec
dec
es
sbb
xchg
pop
ds
sub
fisubr
pushf
adc
mov
jnp
push
std
dec
xchg
retf
retf
sub
outs
mov
lea
test
sub
fwait
lea
adc
out
add
mov
mov
jg
fimul
add
pop
pop
int
jl
ja
rcr
movs
out
(bad)
(bad)
jns
mov
push
aas
or
pushf
icebp
call
pop
mov
sbb
inc
pop
xchg
push
sbb
stos
pop
mov
es
push
sub
mov
adc
add
xchg
sbb
pop
loope
sbb
inc
sbb
fimul
out
stos
repnz
(bad)
(bad)
mov
sub
dec
movs
retf
stos
sbb
mov
inc
cmp
or
mov
jmp
arpl
adc
push
add
jmp
xchg
sub
jl
jmp
not
mov
imul
or
mov
clc
dec
adc
test
mov
pop
push
jmp
out
or
mov
add
mov
cdq
mov
pop
pop
jg
or
sbb
mov
fsubr
inc
nop
jmp
sahf
retf
stos
stos
xor
out
add
imul
or
rcl
xchg
rcl
pop
aaa
jp
xor
out
adc
sbb
cmp
pop
and
imul
loop
xchg
(bad)
xchg
mov
and
pop
push
ret
xchg
lock
pop
imul
fwait
aaa
pop
mov
mov
xor
dec
inc
(bad)
jae
jnp
shl
ret
and
xor
daa
inc
or
(bad)
cmp
ins
xor
pushf
mov
ret
fild
aas
loope
ror
and
lods
mov
dec
in
push
push
push
add
push
movs
(bad)
pop
or
xchg
repz
adc
add
lods
adc
rcr
enter
dec
icebp
lock
push
cs
xchg
jnp
mov
or
lods
mov
jle
sub
enter
sahf
addr16
pop
cmp
loopne
bound
add
adc
cwde
cmp
das
shl
fwait
or
push
sub
pop
bound
mov
test
nop
jmp
and
or
mov
outs
sub
lock
mov
fs
out
mov
es
cli
push
xchg
xchg
test
retf
scas
jg
mov
xor
outs
test
out
nop
seta
sub
pushf
mov
xchg
loope
mov
cmp
(bad)
jge
push
mov
dec
push
adc
inc
xchg
xchg
pop
dec
and
pop
or
adc
stc
cmp
mov
xchg
adc
ret
(bad)
dec
sbb
add
iret
in
outs
sar
pop
fistp
add
adc
xor
add
adc
and
(bad)
(bad)
fbld
sbb
lahf
inc
sbb
sbb
mov
in
nop
sub
dec
push
sahf
shr
or
stos
sub
inc
repnz
int
push
pop
cmp
test
test
in
cmp
cmp
jg
mov
pop
dec
jp
or
out
dec
dec
repz
fldcw
das
pop
cs
cmp
sub
imul
sbb
lea
out
jae
adc
es
fldenv
or
add
pop
dec
(bad)
dec
clc
sub
imul
retf
ja
add
pop
mov
adc
push
mov
mov
inc
adc
pop
sub
jp
mov
aas
movs
mov
(bad)
out
push
cmp
pop
pop
repnz
shl
test
or
inc
and
sbb
mov
xor
outs
ss
xor
or
rcl
dec
and
cmp
fwait
mov
cld
ja
dec
mov
xor
sub
xchg
iret
add
ror
dec
ja
movs
cs
mov
stos
sub
nop
retf
inc
leave
cwde
push
fisttp
mov
mov
std
mov
xor
cmps
dec
pusha
add
and
jg
(bad)
jg
add
into
ucomiss
ins
mov
cld
xchg
prefetch
push
retf
lahf
add
icebp
xchg
push
ret
sub
fild
imul
repz
jb
push
push
ficom
sub
aas
aad
(bad)
aaa
pop
push
dec
jbe
xor
rol
bound
pop
fist
xor
pusha
sub
sbb
xchg
clc
dec
jne
jg
jle
jbe
stos
jg
cmp
repz
inc
or
add
bound
pusha
das
mov
out
pop
hlt
or
cs
jmp
or
dec
test
ss
repnz
vxorps
add
js
loope
ret
sub
add
out
call
jb
inc
cmp
adc
iret
in
xchg
cli
pop
fcmovne
fs
push
mov
ds
inc
add
dec
loope
xchg
ds
inc
sar
mov
pop
add
js
fdiv
(bad)
mul
imul
js
lahf
pop
jnp
pop
push
sub
test
aaa
inc
int3
pop
add
daa
inc
stos
sub
daa
or
jle
fnstenv
fidiv
clc
add
and
or
xor
push
pop
fild
sbb
ins
xchg
fild
push
fdiv
lea
cmps
push
jnp
gs
cmps
sub
jns
inc
pop
sub
or
loop
rcr
je
es
adc
mov
jbe
arpl
push
pop
mov
das
and
test
or
mov
inc
jno
push
sub
test
and
in
out
sbb
and
pop
add
enter
and
jge
or
cmp
and
adc
into
sbb
push
dec
aas
call
adc
jle
inc
out
data16
dec
inc
adc
adc
jns
cmp
fwait
xor
es
ins
mov
fcmovnu
dec
sahf
push
adc
mov
int
mov
mov
jae
inc
fldcw
fwait
dec
dec
adc
sbb
jo
dec
inc
cld
push
mov
ds
jo
cmps
jnp
dec
cmc
or
jge
mov
jno
movs
mov
jle
fcmovb
push
out
sub
and
xlat
dec
shl
scas
scas
out
into
sub
ficom
mov
js
mov
adc
pop
add
push
pop
ss
push
(bad)
jo
adc
aaa
ins
dec
(bad)
sbb
sbb
pop
pop
mov
icebp
mov
xchg
rol
ja
jge
ja
sbb
add
or
push
sbb
jge
jmp
and
add
rcl
or
push
sbb
and
adc
inc
add
mov
and
xchg
cli
push
jns
sbb
bound
adc
(bad)
xor
push
aaa
mov
inc
sbb
push
mov
or
fadd
outs
push
push
mov
add
cdq
jo
and
or
movs
jmp
xor
rol
out
nop
out
imul
or
jmp
inc
xor
ds
je
mov
stos
push
sub
inc
inc
jnp
adc
jle
add
adc
imul
mov
push
pop
lea
pusha
pop
pop
jnp
add
sub
adc
ins
jp
in
mov
pop
cmp
inc
mov
hlt
rcr
addr16
imul
into
push
and
inc
dec
loopne
repnz
dec
popa
mov
into
ins
pop
fdivr
leave
push
cli
mov
add
nop
jle
adc
scas
xchg
sub
shld
mov
inc
out
ja
fdivr
or
xchg
jb
cmps
lock
pop
mov
ds
jecxz
iret
pop
mov
stos
sti
js
adc
bound
inc
test
fmul
xchg
loope
or
mov
jne
and
nop
push
mov
sahf
xchg
clc
(bad)
call
fisttp
inc
push
fistp
pop
in
dec
retf
ss
pop
clc
and
bound
and
xor
shl
sti
into
jmp
sub
mov
mov
mov
test
sahf
stos
lds
ins
inc
clc
loopne
inc
xor
sbb
les
js
rol
imul
push
push
mov
sahf
mov
in
outs
cmp
test
jecxz
mov
add
mov
cmp
xchg
jmp
repnz
xchg
idiv
push
in
(bad)
ins
push
clc
wbinvd
movs
dec
ficom
sub
or
mov
jnp
into
(bad)
push
xchg
and
outs
sbb
mov
cmps
ds
push
mov
test
pop
jbe
xor
stos
scas
mov
jp
sub
adc
xor
jne
cmp
pop
lods
sub
mov
popf
mov
mov
adc
inc
mov
(bad)
pop
jbe
call
iret
loop
sbb
push
sbb
adc
xchg
je
pop
xchg
pop
fimul
les
mov
ja
idiv
dec
fs
push
add
outs
fstp
add
pop
add
xchg
aas
add
xchg
cwde
inc
ss
lock
(bad)
fwait
ins
lahf
adc
jnp
mov
mov
in
js
push
ss
mov
outs
repz
ins
lock
push
test
mov
jnp
and
adc
mov
ins
stos
add
sbb
pop
add
faddp
push
into
test
rcr
ins
loopne
pop
or
add
pop
mov
and
sub
stos
sub
ds
jmp
pop
pop
sbb
mov
sub
sub
dec
or
fild
cmp
rcr
or
xchg
inc
fnsave
push
push
sbb
push
daa
sbb
ror
ficom
pop
or
lea
mov
sar
mov
jle
xchg
imul
pop
gs
or
leave
cli
mov
dec
test
mov
(bad)
(bad)
cmp
dec
int3
iret
inc
jg
loopne
bound
(bad)
or
jmp
push
mov
gs
fld
(bad)
sub
xchg
or
adc
dec
mov
jb
inc
push
in
sbb
inc
repnz
nop
(bad)
popf
mov
retf
xor
add
sbb
loope
shl
xor
jae
sbb
ja
mov
scas
cld
mov
mov
daa
or
outs
pop
sbb
jl
and
fdivp
outs
push
sbb
jg
rcl
mov
adc
hlt
(bad)
mov
or
mov
rol
out
mov
lock
add
pop
jbe
movs
and
mov
mov
aas
dec
clc
mov
ins
ret
mov
repz
int
gs
sbb
push
cli
hlt
and
sbb
sub
jp
retf
add
es
pop
repnz
shl
xchg
pop
test
jno
sbb
xor
dec
leave
addr16
push
lds
pop
and
pushf
adc
clc
push
xor
cmp
xchg
loopne
mov
les
iret
and
ror
js
mov
adc
in
push
enter
imul
fwait
dec
jmp
mov
enter
stos
and
stos
xchg
frndint
ret
sbb
inc
xchg
xchg
movs
sub
out
mov
jnp
push
dec
es
pushf
call
push
jp
adc
out
mov
ss
in
pop
cmc
fdivr
and
bound
mov
scas
push
ss
xchg
pop
dec
cs
pop
add
imul
mov
xor
jp
out
rep
push
test
test
mov
pop
add
xor
popa
jp
addr16
(bad)
push
outs
add
adc
dec
adc
dec
imul
js
mov
and
sbb
push
sbb
add
cmp
arpl
mov
pop
xor
nop
test
add
fwait
inc
cmovs
or
fadd
adc
ret
xor
fnsave
pop
add
add
cmp
outs
(bad)
ss
add
and
test
adc
jb
push
pop
mov
inc
cmp
fs
jmp
outs
adc
push
dec
or
mov
iret
lahf
aaa
mov
pop
das
mov
out
sub
pop
test
call
pop
(bad)
cmp
icebp
cmp
sub
jle
inc
sbb
mov
(bad)
cmp
dec
mov
fist
adc
cmp
fwait
nop
ror
movs
stos
adc
(bad)
sbb
push
pop
lea
les
add
repnz
xchg
or
and
cmp
jle
test
add
inc
xchg
sar
(bad)
inc
mov
cmc
sar
(bad)
pop
or
test
and
adc
ins
dec
imul
dec
or
loop
adc
push
jp
enter
ss
in
pushf
imul
jge
js
es
mov
int
call
push
test
or
rcr
jecxz
mov
cmp
cs
inc
fimul
cdq
xor
fld
xor
sti
xor
bound
mov
mov
inc
stos
cmp
popa
dec
call
mov
(bad)
outs
call
mov
lahf
mov
dec
sub
mov
shl
jecxz
jmp
jmp
and
sbb
mov
push
out
aad
aam
adc
outs
out
ficom
mov
mov
push
aas
adc
gs
(bad)
cli
mov
sbb
int3
push
xor
xchg
lea
add
add
loopne
cs
fdiv
(bad)
xor
mov
pop
pop
dec
imul
or
mov
pop
lods
pop
and
add
pusha
push
rcl
sub
mov
or
push
pop
adc
dec
nop
mov
add
and
movs
(bad)
rol
or
shl
and
add
dec
push
xchg
es
loop
addr16
aas
lods
cmp
inc
inc
add
jmp
mov
(bad)
sti
add
fwait
(bad)
jnp
and
cmps
and
xor
inc
clc
mov
(bad)
xchg
loopne
out
adc
mov
fidiv
popa
jg
cmp
lock
mov
xor
test
lahf
dec
ja
cli
add
das
scas
sbb
repnz
add
sub
add
lahf
push
inc
or
sbb
addr16
jmp
ss
lods
xchg
mov
ds
inc
(bad)
sbb
inc
iret
jb
ror
push
push
xchg
pushf
xchg
lock
dec
and
and
and
lock
mov
loope
jnp
jno
mov
or
pop
mov
out
mov
sub
jns
mov
sbb
inc
int3
nop
sahf
or
out
jmp
xor
mov
(bad)
or
das
rol
mov
push
lods
mov
imul
mov
rcr
bound
adc
xchg
into
xchg
jge
add
fcmovu
add
push
imul
ss
es
xor
imul
imul
add
test
push
cmp
xchg
out
iret
xlat
cmp
dec
retf
sub
mov
dec
bound
mov
retf
cwde
adc
sub
xchg
xchg
mov
je
jmp
inc
mov
cli
ss
mov
ins
push
or
cmps
pop
pop
outs
(bad)
dec
jae
cmps
das
inc
pop
mov
imul
ss
pop
dec
aas
(bad)
cli
(bad)
sub
retf
xlat
ret
xor
(bad)
push
mov
or
retf
or
add
xchg
xchg
mov
daa
jmp
jno
pop
mov
push
iret
es
cmp
mov
dec
stc
dec
loop
and
loop
jae
cld
pop
jg
jecxz
ret
(bad)
(bad)
pop
scas
imul
and
fidivr
xchg
jmp
or
das
push
sbb
cs
lea
fwait
pusha
cld
sbb
(bad)
push
pop
retf
push
adc
xor
push
and
movs
dec
mov
mov
and
scas
out
add
push
push
and
sbb
xor
pop
movs
inc
push
jb
or
aaa
push
cli
xchg
out
repnz
mov
and
jecxz
lahf
int
push
jecxz
mov
enter
mov
out
sbb
pop
ss
or
pop
stos
imul
xor
daa
and
mov
inc
in
sbb
cmp
jmp
dec
loop
je
mov
mov
fst
enter
out
stc
ds
add
mov
addr16
retf
mov
push
popf
pop
and
and
sbb
stc
das
add
stos
pop
ins
ret
fs
aaa
add
xchg
sbb
hlt
adc
mov
retf
cmp
movs
xor
shl
sbb
mov
scas
sub
ja
push
jno
pop
into
cmp
jno
cmp
push
push
iret
fild
or
jp
arpl
movs
loop
leave
das
inc
jb
push
es
mov
imul
or
mov
arpl
addr16
xor
cmp
hlt
inc
mov
push
mov
fsubr
push
inc
and
retf
data16
outs
inc
jg
(bad)
mov
hlt
cli
mov
sbb
and
sahf
ror
das
cdq
add
(bad)
outs
(bad)
jl
push
sar
ja
fucompp
ss
das
pop
xor
push
jmp
jns
bound
js
outs
sub
call
mov
push
mov
jmp
js
or
out
jns
xchg
lea
mov
adc
mov
cli
dec
xchg
xchg
add
xchg
dec
lds
push
lock
inc
sahf
mov
ss
repnz
dec
xchg
iret
mov
jg
jns
sub
dec
inc
cmc
adc
sub
mov
clc
add
ror
shl
pop
pop
sar
iret
pop
in
mov
inc
sub
and
dec
cmp
sub
test
rcl
or
xchg
ins
cld
push
add
pop
or
mov
nop
lock
imul
sub
push
dec
clc
pop
inc
and
popf
and
repnz
adc
neg
lock
cmps
jecxz
adc
bound
inc
push
(bad)
jne
mov
push
test
imul
shl
das
hlt
stos
push
mov
das
mov
pop
imul
add
sub
push
jb
dec
repz
dec
dec
imul
push
sub
mov
xlat
push
add
lods
cwde
and
cli
and
lock
out
call
mov
xor
retf
ret
pushf
clc
(bad)
mov
lods
stc
cwde
xlat
nop
test
mov
push
cmp
dec
test
pop
inc
lods
cdq
and
xor
xor
push
sub
push
or
inc
mov
adc
mov
lds
adc
std
nop
mov
mov
sahf
in
xchg
stos
jle
xchg
loop
sub
std
into
sbb
push
push
arpl
xor
cmovge
push
fidiv
lock
lods
dec
test
xchg
aas
movs
and
push
fs
dec
add
mov
jl
or
mov
xchg
mov
(bad)
cli
add
cld
cmps
inc
inc
call
mov
ins
cmc
add
mov
dec
sub
js
or
xor
and
je
fisubr
aad
fisub
or
and
mov
sahf
fisubr
les
jl
mov
repz
imul
pop
movs
push
jecxz
ret
out
dec
ficom
jbe
pop
sbb
pop
add
cmps
fimul
cmps
jno
add
xor
stc
add
adc
pop
sbb
add
movs
mov
rcl
xchg
jle
mov
dec
call
les
mov
call
mov
loop
bound
push
push
adc
fidiv
push
loop
(bad)
mov
sub
add
ret
pop
inc
rcl
mov
add
out
push
loope
xchg
jl
mov
(bad)
int3
mov
mov
dec
xchg
push
inc
pusha
movs
add
sbb
sub
test
dec
stc
jb
mul
cmp
and
jo
jmp
dec
cs
fisubr
dec
mov
lock
movs
mov
ret
ds
retf
ins
leave
jae
arpl
mov
cli
cmps
push
int
mov
ins
loopne
lea
ret
(bad)
stos
inc
push
push
mov
mov
test
cdq
add
ins
cmps
adc
fidiv
cli
nop
cmp
cmp
rcl
retf
call
dec
mov
inc
push
pop
sbb
cmp
(bad)
sbb
popa
test
sbb
cld
add
pop
into
test
xchg
out
iret
or
push
ret
je
lds
lock
xchg
xor
inc
lds
mov
adc
xchg
bound
cmps
cmc
data16
in
test
add
ins
shl
and
adc
dec
sub
dec
cmps
xchg
psllq
add
dec
sbb
fdivrp
xchg
sbb
add
add
mov
add
sub
jp
fwait
sub
ds
inc
clc
add
es
sbb
or
js
xchg
dec
pop
mov
add
dec
cmp
rol
push
stos
mov
fwait
pop
push
push
loope
jge
pop
retf
jge
jns
add
push
or
in
lahf
and
and
dec
inc
fs
cmps
dec
ja
or
push
popf
pop
mov
and
(bad)
in
popf
ret
mov
dec
cmp
sbb
loop
push
mov
sub
sbb
xchg
popa
cmp
xlat
push
clc
add
stos
fs
push
xchg
mov
mov
outs
mov
inc
es
hlt
aaa
xor
je
cs
dec
push
out
cmps
mov
push
addr16
cmc
xor
push
mov
or
push
js
shl
lock
cmp
(bad)
cli
mov
loope
sbb
xchg
jbe
or
push
mov
push
test
into
(bad)
test
stos
sbb
shl
xchg
xor
adc
out
xchg
inc
jl
movs
jle
psrad
cmp
pop
lds
mov
inc
jb
add
ror
js
push
pop
sbb
daa
or
sbb
out
lahf
bound
jp
push
test
hlt
mov
sbb
xor
jne
push
inc
xchg
stos
sub
push
inc
sahf
mov
mov
sahf
aad
mov
add
imul
add
scas
shr
loopne
sar
cmps
xchg
mov
dec
cmps
int
dec
mov
mov
mov
xchg
dec
push
push
mov
fld
dec
pop
loopne
mov
cmc
xor
adc
jmp
in
dec
pop
clc
stc
pop
pop
mov
push
mov
pop
xor
jp
push
loop
inc
arpl
xor
sbb
sub
cs
mov
movs
mov
xor
ss
rcr
jbe
call
out
pop
inc
out
add
pop
gs
sar
(bad)
pop
mov
mov
push
cdq
(bad)
jp
pop
retf
push
ret
popf
push
and
sbb
xchg
loop
adc
push
sub
mov
loope
jmp
cmp
adc
mov
leave
pop
push
add
mov
mov
loopne
pop
push
pop
jo
mov
add
out
push
test
cwde
fild
dec
bnd
pop
jbe
or
xor
enter
mov
repnz
jl
je
jnp
and
dec
cs
jns
pop
ret
pop
pop
ja
add
sub
gs
dec
cld
dec
(bad)
loop
inc
sbb
pop
in
mov
add
rcr
dec
popf
push
scas
rcl
sub
lea
push
pop
inc
mov
imul
jg
push
dec
daa
stos
add
jbe
lods
cmp
mov
mov
adc
test
pop
inc
outs
lods
add
jp
jo
std
rol
ds
out
pop
sub
shl
cld
and
test
lds
adc
mov
adc
dec
and
retf
or
jae
popa
repz
push
dec
lods
shl
test
xchg
sbb
sbb
mov
sahf
sub
inc
and
(bad)
shr
add
imul
cwde
add
push
stc
sbb
xchg
(bad)
fwait
sbb
fiadd
jns
push
out
repnz
xor
jne
sub
pop
je
and
mov
or
loopne
ret
jg
mov
dec
push
aaa
dec
adc
sub
inc
cli
clc
sbb
ret
scas
lea
sbb
in
cmp
aaa
jmp
and
outs
repz
or
into
add
mov
adc
ds
inc
push
mov
ror
(bad)
jo
iret
in
mov
push
mov
cmp
dec
ins
sub
xchg
mov
mov
call
popa
aas
sub
mov
cmp
push
mov
pop
fcomip
or
ja
in
cmp
repnz
shl
sbb
add
call
xchg
mov
push
test
pop
and
(bad)
lahf
fild
pusha
js
outs
or
ret
push
xor
xchg
in
push
fwait
mov
mov
add
xchg
dec
repnz
ss
fs
shr
sti
jns
clc
inc
xchg
dec
fidiv
pushf
pushf
add
repz
sub
stos
repnz
sub
push
jbe
mov
mov
jmp
cs
stos
push
scas
test
imul
mul
cwde
cmc
xor
dec
jmp
pop
lea
cli
cmp
ret
(bad)
dec
out
sar
add
jmp
push
fs
mov
ins
outs
aaa
mov
jmp
scas
fld
repz
popa
inc
mov
(bad)
(bad)
inc
add
arpl
inc
and
daa
inc
push
popa
(bad)
sub
mov
xchg
add
shl
mov
(bad)
pop
pop
xchg
add
cld
and
call
push
icebp
xor
fisttp
jbe
stos
loope
dec
lods
xchg
xor
inc
or
mov
ror
pop
xor
mov
stos
stos
mov
or
jo
sbb
pop
or
fist
data16
ss
mov
cdq
xor
scas
addr16
mov
or
hlt
out
mov
gs
imul
int3
frstor
jle
stc
fwait
loopne
push
xchg
scas
int3
dec
imul
xor
add
pop
cmp
cmp
popa
or
(bad)
jmp
shl
sbb
jbe
neg
xchg
push
xchg
xchg
and
xchg
mov
gs
add
pusha
dec
loopne
xchg
jnp
jp
(bad)
lea
imul
sbb
push
sub
jp
je
mul
xchg
mov
shl
pop
test
call
ret
xor
das
movs
rcr
sbb
shl
adc
cli
inc
inc
cli
adc
mov
mov
adc
xor
mov
sar
and
jg
mov
push
or
test
loope
dec
arpl
add
popf
push
add
je
pushf
mov
cmp
mov
pop
add
or
push
mov
push
repz
das
pop
push
int
inc
jbe
ds
inc
shl
inc
cdq
imul
cmp
scas
cdq
das
push
ds
push
adc
(bad)
pop
push
pop
push
xor
mov
push
cmp
fld
cmp
(bad)
cwde
cmp
cmp
xchg
jmp
prefetch
rcr
dec
in
lahf
out
pushf
(bad)
call
pushf
addr16
es
inc
jmp
add
out
add
pop
sub
push
dec
neg
jb
rcr
out
xor
leave
push
add
xor
adc
arpl
out
int
xchg
loopne
add
cmp
add
cmps
fisub
cmp
test
psrlq
mov
mov
jmp
fisub
popa
xor
repz
ficom
test
out
inc
and
fcmovnbe
shr
cmp
aaa
and
push
jg
dec
(bad)
not
mov
aas
(bad)
(bad)
lock
das
mov
add
mov
sbb
loope
loopne
sbb
mov
outs
jecxz
movs
dec
sub
mov
inc
js
sub
aaa
dec
ret
xlat
push
xor
push
std
fidivr
sub
adc
push
inc
pop
fild
ror
stos
or
sbb
jbe
xchg
xchg
mov
push
lahf
cmp
loopne
inc
icebp
mov
iret
dec
inc
sar
je
jmp
call
cmp
push
imul
loopne
clc
es
inc
aad
push
cmc
outs
pushf
mov
test
xor
mov
arpl
adc
fnstsw
or
sub
and
outs
inc
sub
cs
scas
shld
(bad)
lahf
and
jmp
imul
push
adc
cs
and
xor
imul
adc
out
mov
jp
cld
aaa
or
add
pop
dec
jge
cmp
ret
sub
and
sub
jne
ds
xlat
ins
and
mov
xor
jg
dec
ds
push
adc
sbb
jo
cmp
outs
add
dec
jnp
mov
sbb
frstor
dec
(bad)
dec
push
dec
push
out
sub
cmp
rcr
or
(bad)
jnp
imul
aas
stos
fiadd
bound
add
mov
xor
dec
jb
and
cmps
scas
lock
cld
movs
sub
mov
jg
inc
popa
test
out
test
and
cmp
mov
shr
out
mov
xlat
std
add
(bad)
pop
(bad)
mov
sbb
test
aas
test
and
push
inc
inc
imul
mov
jp
mov
sti
imul
fsub
jmp
sbb
pop
dec
mov
and
popa
ja
mov
in
pop
repnz
or
mov
es
mov
inc
xchg
out
push
sub
pop
push
mov
aad
mov
inc
mov
cli
jb
sub
mov
dec
add
pop
loopne
inc
inc
(bad)
jne
push
mov
aam
div
xor
es
iret
pop
sub
mov
into
fidivr
into
bound
push
or
mov
mov
ret
xchg
inc
inc
fstp
sbb
jmp
aaa
add
mov
mov
xchg
jo
lock
jmp
inc
retf
xor
cmp
rol
dec
and
pop
cs
jns
mov
add
and
fidiv
push
cmp
add
xor
sahf
push
lahf
addr16
push
cmp
add
jg
add
push
xor
mov
pop
xor
cmp
popa
std
outs
mov
jmp
sbb
jb
cmp
cmp
inc
data16
(bad)
and
push
push
push
push
push
inc
mov
test
fild
cmp
in
(bad)
scas
jmp
adc
bound
loopne
jae
in
dec
sub
je
sub
mov
cmovs
in
ss
mov
or
aas
jno
dec
fsub
jo
outs
outs
nop
or
mov
dec
push
and
shr
gs
pop
pop
mov
loopne
arpl
mov
sub
add
push
push
jle
add
push
sbb
mov
cmp
adc
dec
icebp
leave
pcmpeqd
adc
call
bound
or
xchg
test
sbb
fst
out
mov
mov
push
mov
enter
mov
push
xchg
push
pmulhuw
sbb
push
out
dec
jge
jmp
imul
scas
dec
loope
ss
shr
movs
lea
push
jne
repz
sub
push
outs
mov
cmp
mov
xchg
(bad)
mov
test
stc
jb
push
mov
not
sub
pop
hlt
fisttp
xor
and
push
dec
adc
jle
inc
add
dec
dec
inc
dec
pop
in
adc
sub
cmps
and
pusha
and
sub
sbb
inc
loope
pop
in
mov
sbb
or
adc
add
pop
push
outs
es
jecxz
xchg
loopne
push
mov
or
pop
(bad)
mov
fld
mov
dec
leave
movs
arpl
push
push
mov
mov
push
popa
sbb
out
jbe
bound
xor
rcr
cwde
lock
mov
in
jg
inc
ret
aam
aam
jmp
adc
cmp
inc
fbld
(bad)
xchg
rcr
rol
jns
icebp
and
pushf
push
aam
xor
jns
daa
nop
iret
pop
sti
cmp
lock
popf
mov
push
adc
adc
or
jns
loope
stos
mov
xchg
fiadd
jg
sub
jecxz
jecxz
lds
mov
pop
jecxz
(bad)
(bad)
add
inc
add
fidiv
mov
push
cmps
mov
loop
outs
xlat
arpl
mov
jmp
sbb
add
jnp
and
and
push
jb
fild
mov
sbb
pop
push
sbb
rol
mov
pushf
inc
add
call
sub
movs
scas
ins
cmp
pop
call
xchg
addr16
sbb
and
stos
rol
bound
jbe
test
push
and
outs
adc
out
mov
pop
sbb
cmps
in
iret
shl
pop
loop
es
xchg
call
inc
ror
jecxz
shl
dec
in
inc
sar
dec
inc
out
sbb
inc
gs
dec
adc
or
xchg
aad
cli
je
jmp
push
or
push
fmul
and
gs
mov
pushf
inc
inc
in
push
mov
push
in
jnp
push
pop
adc
adc
dec
jecxz
cli
cmp
rcr
(bad)
pop
es
pop
sbb
mov
pop
mov
loopne
cwde
inc
dec
push
bound
mov
sbb
rol
clc
pop
adc
rol
scas
pop
ror
enter
sar
sahf
push
pop
je
mov
jbe
repnz
jp
mov
repz
aam
js
cmp
outs
or
pop
push
repnz
mov
cmps
pop
jecxz
pushf
sub
das
repz
xor
or
call
ds
mov
mov
or
jo
cmp
jbe
aas
and
xchg
push
cmp
dec
sbb
xchg
stos
lea
and
lods
call
cmp
mov
pop
out
or
dec
ds
inc
xor
add
and
test
das
mov
retf
dec
jnp
or
aad
jbe
pop
sahf
movs
mov
mov
(bad)
xor
push
test
sub
dec
call
inc
add
inc
inc
(bad)
fisttp
sbb
adc
nop
xchg
nop
int
xchg
dec
xor
lock
dec
or
mov
fidivr
xor
dec
xchg
jp
push
and
dec
(bad)
push
jno
push
push
add
fwait
std
mov
sub
mov
sbb
sar
enter
adc
fisub
jo
jbe
mov
xor
mov
inc
faddp
mov
jg
dec
je
push
cmp
push
(bad)
(bad)
es
mov
add
mov
push
fs
fcomip
mov
scas
ins
mov
inc
mov
adc
movs
ss
inc
inc
mov
push
jbe
inc
mov
sub
inc
outs
(bad)
(bad)
scas
ja
les
es
xchg
push
xchg
les
xchg
inc
xlat
and
pop
add
mov
iret
enter
mov
mov
mov
cmp
dec
adc
dec
xor
idiv
ret
cmp
inc
mov
loop
je
sub
outs
push
mov
outs
add
int
xchg
js
inc
sti
or
dec
cmp
gs
dec
imul
fstp
mov
sahf
loop
les
retf
pop
cmp
rcr
or
data16
sbb
mov
adc
inc
jle
ror
add
int3
les
jl
loop
es
adc
inc
adc
out
call
mov
mov
es
call
inc
cmps
ins
push
dec
fldln2
(bad)
push
repz
jne
aad
jge
sbb
ins
fdivrp
xchg
(bad)
adc
sub
fs
adc
dec
pop
cmp
fwait
aaa
das
cmp
inc
xor
aaa
sbb
cmps
and
rcr
inc
mov
int3
pop
(bad)
out
ret
cwde
sub
enter
inc
out
jecxz
sbb
push
mov
xor
adc
push
lock
push
out
lods
fs
push
mov
pushf
stos
xchg
pop
adc
push
jbe
pop
mov
xchg
push
inc
xor
inc
cli
pusha
imul
jmp
ffree
lahf
out
cmps
das
(bad)
push
fdivr
add
sbb
pop
aad
pop
push
(bad)
cmp
ja
fnstenv
push
add
add
iret
fcomip
call
leave
lods
inc
sub
add
or
js
and
sub
mov
sub
add
pop
jp
jp
test
add
inc
adc
mov
sbb
dec
popa
loope
sub
ds
out
cmp
push
and
test
mov
lock
add
ds
push
stos
jbe
retf
ss
lea
xor
mov
dec
jp
sbb
movs
mov
pushf
int3
pop
or
les
loop
sbb
adc
imul
jne
ds
xor
xchg
sub
adc
shl
idiv
mov
mov
fdivr
fldcw
jmp
movs
mov
add
mov
xor
xor
jbe
retf
add
clc
nop
nop
test
jmp
dec
fldenv
add
sub
cmc
add
push
out
sahf
mov
mov
add
and
and
push
add
(bad)
and
and
dec
bound
pop
es
push
add
repnz
js
movs
xchg
push
ss
inc
pop
push
shr
mov
ret
add
imul
push
sub
dec
daa
ds
xchg
clc
and
ds
stos
mov
nop
(bad)
in
ss
add
shr
sbb
xchg
aam
stos
(bad)
out
jg
pop
clc
or
pusha
fcmovnb
daa
inc
je
mov
ss
stos
xor
inc
mov
add
or
popa
in
js
repnz
adc
loope
or
(bad)
adc
or
push
call
outs
or
jae
jbe
aas
adc
push
pop
push
adc
cmp
cmps
pop
add
imul
sbb
mov
jp
ss
push
fimul
retf
out
xchg
inc
pop
repnz
pop
sbb
or
mov
test
pushf
in
and
test
ds
mov
js
mov
xchg
add
movs
or
mov
push
lahf
inc
jb
jmp
mov
sub
mov
iret
popa
int3
pop
in
add
ss
into
es
rcl
out
adc
dec
psubusw
mov
daa
push
push
test
ret
(bad)
stos
jmp
les
bound
push
jg
aam
sub
push
in
enter
into
cli
dec
inc
xor
out
stos
test
inc
data16
or
pop
fdiv
daa
pop
push
xchg
cmp
mov
dec
lds
mov
xchg
jnp
ret
lods
lods
cmps
aas
mov
int3
repnz
push
lods
jecxz
inc
lds
loop
dec
je
inc
mov
add
inc
fild
nop
or
enter
ret
jp
mov
js
pop
imul
mov
add
xchg
(bad)
pop
das
cwde
inc
xchg
pop
or
fwait
xor
pop
cmp
loopne
sub
xchg
inc
dec
call
dec
clc
ja
(bad)
imul
cs
shr
sbb
adc
aaa
add
(bad)
inc
pop
mov
call
aam
test
ret
xlat
pop
mov
mov
mov
sbb
ss
and
push
ret
cli
call
iret
adc
pushf
mov
leave
test
dec
mov
pop
fbstp
outs
dec
out
inc
jmp
ss
sub
sbb
jae
sahf
xchg
mov
inc
add
inc
dec
jmp
aaa
mov
loope
inc
in
adc
xchg
stos
lds
mov
dec
rol
fwait
(bad)
bound
cmp
jle
push
cwde
fcomip
sub
xchg
or
mov
mov
cli
ret
(bad)
shl
inc
clc
mov
sbb
pop
int
xchg
adc
add
adc
sahf
push
pop
(bad)
shl
and
cdq
push
call
inc
mov
push
clc
jnp
mov
dec
ss
rcl
push
ret
fwait
or
ja
scas
imul
cmp
and
xchg
bound
add
add
mov
lea
add
mov
pop
jmp
xchg
into
rcr
pop
ss
shr
das
shl
leave
bound
inc
and
mov
into
push
in
and
or
inc
dec
and
lock
in
das
mov
repz
(bad)
xchg
adc
ds
cmc
or
or
outs
pop
cmp
mov
clc
ins
call
or
sub
jg
cmp
push
add
das
ds
inc
arpl
ret
(bad)
cld
lock
outs
mov
aad
into
xchg
aaa
push
adc
fidivr
aas
sub
and
repnz
mov
movs
mov
adc
sbb
dec
in
adc
xor
add
push
and
jmp
sar
mov
retf
add
mov
(bad)
mov
add
jb
scas
inc
ret
outs
and
and
lock
dec
inc
jp
inc
inc
(bad)
(bad)
das
into
dec
rcr
mov
push
arpl
jb
cmp
arpl
fcmovnbe
mov
fisub
repz
push
inc
cmp
dec
js
loopne
adc
xchg
add
dec
rol
sbb
add
es
sub
leave
jle
jle
(bad)
push
inc
push
stos
push
sub
adc
adc
or
jle
pop
popa
cli
jno
jbe
out
or
leave
cli
push
adc
ja
fcmovb
cmp
shl
cmp
inc
or
xor
jg
mov
pushf
out
dec
call
xchg
adc
inc
cmp
fs
test
fs
fcomip
neg
jmp
jl
mov
mov
dec
mov
retf
imul
mov
mov
fs
(bad)
dec
ss
sub
or
(bad)
int3
test
jmp
add
jg
mov
mov
in
push
sbb
cli
xchg
ret
(bad)
ffreep
mov
cli
mov
inc
sahf
inc
(bad)
std
xchg
push
mov
fdivr
cmps
add
inc
out
(bad)
dec
cmp
stos
push
shr
loop
push
lock
jge
push
adc
scas
jae
stos
push
pop
push
or
sub
cdq
aam
cmp
pop
adc
mov
sbb
jl
scas
fld
jno
push
add
jmp
pop
push
cmp
pop
gs
xlat
into
sub
jge
xchg
and
adc
or
fst
ffree
inc
pop
push
xchg
mov
fisub
aad
sub
or
or
loop
int
cmps
sub
and
ins
lods
adc
adc
(bad)
addr16
sub
retf
add
cli
add
fdivp
test
push
inc
pmaxsw
mov
jbe
test
int
outs
mul
in
adc
cmp
jb
shl
int
inc
pop
pop
pop
xchg
or
xchg
loope
dec
mov
(bad)
aaa
push
test
mov
loop
add
lods
fild
ret
sbb
fstp
in
rcr
mov
mov
adc
pop
add
inc
add
cmps
test
cs
add
add
movs
mov
(bad)
call
jmp
dec
jmp
inc
mov
icebp
jg
mov
push
aad
aam
nop
fnstcw
mov
(bad)
xchg
popa
adc
push
cli
stos
xchg
push
ror
xchg
das
adc
ins
(bad)
ja
jae
repz
jg
mov
cmp
pop
inc
inc
and
sub
inc
jns
dec
and
jmp
fst
xchg
mov
fild
sar
jno
mov
ins
mov
fs
add
mov
out
cwde
repnz
loope
hlt
jmp
push
aam
out
pop
pop
jo
add
jnp
pop
or
add
mov
cmp
push
mov
adc
rcr
adc
(bad)
movs
mov
sub
xor
out
xor
mov
dec
pushf
inc
jle
mov
push
aas
out
(bad)
jmp
inc
xor
rcr
popf
pop
pop
and
mov
loop
fs
outs
das
sub
test
lods
aas
cmp
sub
push
ss
pop
mov
pop
dec
adc
sub
in
test
xor
ins
(bad)
movs
mov
adc
xor
imul
and
bound
retf
jle
outs
or
jecxz
cmp
pushf
xchg
mov
and
(bad)
mov
ja
lock
ds
call
stos
xchg
pop
push
or
cmp
sub
fbstp
sbb
xor
xchg
cmp
xchg
lods
pop
pop
enter
jle
xor
cmp
push
loope
and
add
fstp
cmovle
mov
shl
not
out
cmp
or
sbb
push
cmp
add
ret
mov
mov
stos
pushf
das
mov
push
jns
pop
call
(bad)
or
leave
dec
addr16
pop
adc
xchg
or
pop
pop
out
lea
sti
cmp
leave
nop
dec
xchg
outs
jmp
call
pop
or
xor
repz
dec
mov
xchg
(bad)
outs
imul
pop
rol
jns
wrmsr
mov
lahf
xlat
cs
gs
scas
inc
xor
xor
test
out
sbb
ins
pop
(bad)
mov
or
and
pushf
js
push
pop
stos
push
xor
ins
pushf
add
popf
enter
and
adc
mov
cdq
jno
aam
mov
fistp
adc
mov
es
jns
lock
fnstcw
push
add
(bad)
ins
stos
cmps
mov
retf
loope
call
xchg
repnz
mov
or
and
xchg
das
add
and
mov
movs
mov
icebp
dec
dec
repnz
push
aad
push
ret
xlat
mov
imul
push
not
push
inc
sahf
dec
mov
out
mov
sbb
jb
clc
add
je
pop
pop
add
mul
pop
ins
sub
jbe
shl
sub
push
mov
fist
inc
dec
cld
adc
pop
shl
cmp
imul
add
or
fiadd
xor
inc
cmp
xchg
jl
sub
mov
mov
fcmovb
daa
mov
mov
lods
mov
adc
lahf
lock
ror
pop
stos
adc
inc
repnz
push
rcr
ds
sub
fs
push
xchg
pop
ret
(bad)
jnp
js
sub
and
mov
add
gs
jp
repnz
cmps
fistp
(bad)
jmp
mov
ret
int
and
mov
leave
ret
mul
stos
ror
sub
lods
fs
xchg
sbb
adc
or
aaa
dec
mov
stos
cmp
repnz
mov
mov
sub
jns
sub
sbb
inc
int3
out
mov
retf
jbe
add
add
mov
mov
pop
dec
fs
and
cmp
or
(bad)
(bad)
jbe
inc
ins
xchg
fwait
bound
mov
in
cmps
and
add
mov
fnsave
popa
xchg
xchg
fisubr
dec
mov
mov
cs
outs
mov
add
jb
fldcw
lock
and
mov
mov
bound
mov
add
push
mov
ja
in
and
mov
dec
xchg
sbb
or
vphaddbd
ja
and
push
leave
xchg
pushf
dec
adc
loopne
addr16
ret
lods
lods
pusha
pop
(bad)
fcomp
inc
aaa
int3
add
jp
cmp
pop
ds
cmp
addr16
daa
sbb
or
scas
fwait
mov
pop
pop
mov
(bad)
rcr
ret
push
adc
jmp
ret
jle
xor
fnstcw
sbb
jle
mov
out
aas
nop
inc
rcl
mov
mov
ds
rcl
addr16
hlt
add
data16
pop
sar
mov
cs
push
mov
dec
push
es
xor
push
js
xlat
push
cld
xchg
mov
and
repnz
cli
test
mov
push
mov
(bad)
and
lods
and
fdiv
xchg
(bad)
scas
jp
repnz
jbe
cmps
jns
imul
mov
test
xchg
out
loopne
ss
mov
xchg
cmp
fldenv
sar
dec
push
sbb
data16
mov
lea
pop
aaa
xchg
imul
push
or
sub
mov
ror
data16
movs
mov
push
repnz
sahf
jl
push
imul
rol
call
push
movs
xchg
jo
ret
pop
loopne
fcmovb
mov
ja
das
inc
fwait
or
retf
cli
pop
(bad)
lock
add
mov
ror
push
clc
not
lahf
sbb
pop
mov
fwait
xchg
ffreep
mov
push
xchg
mov
int3
pop
push
xchg
bound
xor
inc
je
adc
push
inc
(bad)
sub
fidivr
aad
pusha
(bad)
push
add
out
dec
and
pop
pop
es
jmp
cmp
imul
sahf
jnp
mov
outs
xor
pop
fisub
mov
push
data16
idiv
dec
xor
mov
ret
bound
fs
jo
fisubr
xor
in
mov
inc
addr16
cmc
push
rcl
imul
adc
mov
pop
xchg
ret
hlt
fdivr
sub
loop
push
clc
dec
pop
fidiv
pop
mov
rol
and
leave
loop
imul
xor
dec
mov
add
push
sahf
mov
cmp
ss
out
ss
and
push
adc
xor
jl
dec
loope
sub
aaa
push
and
sbb
clc
pop
das
xor
adc
xchg
test
mov
je
jecxz
pusha
ret
mov
pop
inc
ja
dec
push
mov
mov
pop
or
xchg
push
(bad)
icebp
cs
rcr
jne
jge
pop
jmp
mov
xchg
pusha
add
add
retf
cmp
ret
retf
push
nop
clc
les
mov
jmp
clc
adc
pop
xchg
jb
mov
push
lahf
push
mov
loope
inc
mov
and
lahf
jl
ins
add
dec
jl
pop
xchg
jbe
not
ficomp
mov
cmps
rol
dec
mov
mov
cmp
pop
dec
data16
sbb
and
mov
cmp
push
mov
in
cmp
pop
inc
dec
les
aas
pop
pop
pop
data16
sbb
sahf
mov
dec
xchg
dec
pushf
sbb
in
out
jl
pusha
rcr
jp
and
cmp
ja
jbe
sub
or
mov
clc
pop
or
pop
ja
xchg
xchg
fild
jge
out
ja
adc
mov
ja
push
popa
mov
(bad)
movs
cmp
mov
or
shl
dec
sbb
push
xor
outs
cmp
je
inc
ficom
loopne
xchg
add
jg
inc
jecxz
sub
dec
xchg
mov
jmp
test
in
mul
xchg
out
inc
sbb
(bad)
push
dec
in
inc
push
cli
sbb
mov
xchg
push
popa
add
pop
xchg
out
mov
sbb
(bad)
gs
mov
aas
xchg
pop
das
mov
or
jle
dec
dec
(bad)
mov
cmps
outs
add
xchg
stos
inc
cmp
jmp
(bad)
adc
out
pop
out
es
sbb
ja
adc
or
aas
xchg
into
xor
dec
and
jo
(bad)
lods
dec
pop
daa
and
(bad)
push
push
fadd
test
inc
shl
mov
popa
daa
cmp
ret
xor
cs
fdiv
aas
loopne
and
pop
xor
iret
adc
mov
sub
jb
leave
cmp
out
xor
out
pop
and
adc
dec
and
loope
lahf
push
retf
add
and
iret
ret
jmp
dec
adc
mov
pop
fdiv
push
adc
mov
lds
dec
cmc
out
imul
neg
cld
out
adc
xlat
fwait
stos
int
add
lods
pop
add
sbb
out
sti
dec
mov
ficom
in
(bad)
fimul
mov
call
stos
sbb
push
scas
cmp
mov
test
and
or
pop
push
stc
jmp
dec
sub
in
pop
jmp
arpl
jl
sub
push
pop
mov
ret
cmp
(bad)
xchg
xor
cmp
mov
jl
push
repnz
adc
mov
stc
adc
push
fucomip
jp
lea
sub
retf
call
or
mov
xchg
and
dec
dec
out
and
or
add
adc
sub
dec
dec
dec
out
test
add
or
std
mov
ss
push
cdq
mov
jge
add
inc
push
clc
jmp
mov
cld
xor
cmps
and
jae
aaa
imul
cdq
jp
mov
pop
cmp
into
add
and
adc
mov
dec
loope
inc
out
fs
or
into
push
xor
mov
or
bound
or
jno
cmc
xchg
dec
jns
mov
and
pop
mov
dec
cmp
cld
push
or
pop
mov
inc
in
pop
xor
clc
mov
push
dec
std
outs
cmp
add
bound
jmp
mov
loop
(bad)
or
sbb
jo
push
sub
adc
pop
adc
jb
push
inc
push
xor
or
mov
pop
mov
mov
inc
outs
or
ret
xlat
es
or
add
push
or
mov
daa
retf
pop
fcmovnbe
imul
xchg
dec
push
rcr
clc
(bad)
push
jl
jbe
ds
push
call
addr16
pushf
or
loop
push
arpl
or
sub
xchg
or
jno
sar
jecxz
ret
xor
clc
lahf
sar
jle
aas
(bad)
mov
cmps
daa
fwait
and
mov
add
and
fild
pop
mov
sub
leave
test
pop
or
(bad)
mov
popa
pop
sub
inc
cli
sbb
inc
pop
ret
(bad)
dec
stos
jb
dec
xor
cs
and
push
lods
or
pop
call
cmps
leave
imul
adc
rcl
mov
fcom
jg
sbb
(bad)
jno
and
call
sti
dec
(bad)
(bad)
ds
push
add
mov
les
fbstp
mov
test
jmp
xor
and
inc
sub
mov
push
push
test
call
loope
out
cmc
mov
imul
addps
loopne
es
and
jg
scas
mov
pop
inc
shr
jg
push
data16
(bad)
push
inc
mov
popa
mov
test
ins
mov
xlat
add
into
add
dec
push
div
jmp
jecxz
sub
or
outs
daa
push
push
push
cmp
lahf
sar
add
(bad)
js
imul
lods
xor
sub
mov
fs
call
add
mov
fcomp
cmp
adc
pop
mov
daa
mov
dec
out
inc
sub
pop
ret
lock
add
mov
and
cmp
cmps
mov
cmp
aaa
and
dec
push
pop
test
bound
ret
add
wrmsr
sub
push
retf
aas
sbb
adc
es
jmp
ins
jbe
cwde
movs
pop
mov
mov
loopne
stos
mov
stc
(bad)
stos
xor
jbe
in
mov
cmps
pushf
mov
mov
aaa
xor
xor
scas
sbb
pop
mov
fs
inc
pop
(bad)
push
test
mov
popa
(bad)
int
cmp
jbe
test
fild
cdq
test
inc
mov
cmp
iret
adc
mov
push
test
push
stos
add
bound
dec
and
int
push
mov
push
jae
mov
xchg
shr
mov
xchg
sbb
jmp
mov
out
or
sub
pop
or
cmp
inc
shl
adc
inc
push
test
hlt
add
(bad)
bound
test
scas
mov
adc
xchg
cmp
xor
ret
add
in
lods
mov
mov
dec
gs
jmp
and
jbe
sbb
enter
pushf
cmp
loopne
mov
dec
int3
ja
cwde
fimul
sbb
fs
push
(bad)
sahf
mov
aas
inc
cmp
dec
push
jbe
fwait
cli
mov
shl
in
add
push
adc
push
imul
push
es
mov
neg
(bad)
fwait
jo
pop
xor
pop
retf
adc
sbb
sti
jbe
adc
sub
jp
mov
bound
ins
jle
pop
mov
pop
repnz
mov
sbb
(bad)
or
pusha
cmp
pop
sbb
in
mov
jo
psrld
sbb
push
dec
add
pop
cmp
or
xor
sti
xor
push
and
jno
jno
pushf
and
inc
aas
(bad)
retf
jne
mov
mov
inc
or
in
shl
idiv
btc
xchg
pop
(bad)
mov
pop
stos
inc
sub
ds
es
rcl
je
test
bound
lods
outs
jge
mov
inc
loop
mov
sbb
push
clc
and
jb
adc
repnz
pop
idiv
sub
bound
stos
cmp
in
add
mov
iret
xchg
xchg
pushf
push
mov
enter
lahf
lahf
cld
xchg
mov
add
push
cmp
bnd
jae
dec
hlt
jle
mov
jb
dec
out
outs
fiadd
pop
jmp
daa
pop
jo
lods
jl
push
mov
sub
into
pushf
movs
push
push
fidivr
mov
sbb
shr
and
test
sub
(bad)
xor
fidivr
stos
push
inc
retf
loop
mov
test
adc
or
push
mov
iret
xchg
mov
das
(bad)
int3
mov
mov
out
or
sub
movs
or
sahf
cmp
cmp
mov
test
addr16
(bad)
mov
push
jns
mov
jmp
inc
mov
mov
dec
loop
inc
shl
mov
cmps
not
sbb
(bad)
mov
ds
sbb
pop
repz
les
test
test
or
jo
adc
jb
adc
push
sub
and
xor
iret
and
scas
sahf
or
jl
inc
fisub
stc
iret
xchg
mov
inc
rcr
stos
jno
cld
xchg
xchg
rcr
fidivr
mov
pop
pop
jne
cs
jg
repnz
sbb
jo
cli
jb
loopne
repnz
mov
sbb
and
jmp
xchg
das
(bad)
sub
out
pusha
sbb
or
jbe
inc
mov
add
cwde
xchg
mov
loopne
dec
imul
js
or
cmps
bnd
jle
jecxz
fiadd
adc
loop
xor
sub
pop
test
ds
ss
pop
test
lahf
cmps
mov
jmp
adc
sub
dec
pop
scas
fst
jl
jbe
cmp
dec
(bad)
inc
mov
(bad)
add
sbb
cs
sub
jecxz
xor
mov
lods
xchg
mov
push
sbb
sbb
add
mov
jge
sar
add
xchg
mov
push
sbb
cld
sahf
mov
stc
sub
call
leave
in
jb
push
(bad)
cli
cmp
and
pop
lods
movs
imul
or
lds
lock
xlat
mov
add
dec
xchg
call
inc
push
and
jle
pop
mov
add
or
push
xchg
mov
push
dec
mov
cmc
sub
and
push
test
mov
cmp
int
outs
pop
(bad)
xor
sbb
fdivr
pusha
inc
inc
push
hlt
popa
dec
sbb
pop
(bad)
aaa
je
xor
lahf
dec
mov
aas
mov
cli
jns
xchg
gs
shl
shl
mov
cdq
sahf
sub
iret
popa
mov
outs
pushf
pop
mov
call
inc
sahf
aas
outs
sar
out
jp
or
push
and
pop
(bad)
test
in
mov
push
sub
pop
(bad)
mov
fnstcw
jle
pop
lds
mov
mov
clc
pop
pop
ja
int3
(bad)
xchg
adc
dec
mov
or
mov
add
or
call
mov
jp
jns
xor
push
stos
gs
retf
and
inc
adc
push
(bad)
mov
cmps
inc
ret
pop
aad
fnstcw
int
pushf
adc
retf
leave
out
pop
ins
jge
mov
idiv
push
pop
add
add
dec
mov
aam
sub
mov
jmp
push
sub
jp
adc
ret
(bad)
(bad)
push
sub
into
out
retf
inc
int
xchg
mov
xor
lahf
mov
pop
jl
mov
aad
mov
pop
cmp
lock
adc
xchg
mov
mov
fild
wbinvd
mov
es
ds
push
add
sub
setp
mov
jp
bound
loopne
xchg
stos
mov
jp
dec
pop
aad
pop
jno
lea
sti
pop
pop
fs
xchg
nop
pop
shl
push
add
inc
loopne
cli
cmp
les
shl
daa
je
jle
ret
inc
mov
xchg
sahf
or
inc
loopne
ret
outs
test
push
inc
mov
pop
cs
and
dec
shl
mov
push
addr16
dec
cmps
sub
push
ficomp
js
dec
fld
das
test
retf
loope
xchg
add
ficomp
arpl
shr
mov
xchg
mov
xchg
push
dec
jge
mov
sub
pop
dec
sbb
xchg
fild
jae
test
pop
pop
sbb
and
jbe
sbb
sub
jo
mov
mov
jb
out
dec
or
xor
push
jmp
jnp
cld
pop
daa
sahf
push
ds
(bad)
push
push
mov
mov
cmp
pop
add
mov
dec
add
mov
sbb
and
fs
fld
pop
xor
adc
nop
cmp
mov
inc
pop
dec
lods
retf
cmps
jb
and
mov
add
repz
addr16
lock
fbld
pop
xchg
cmp
sahf
retf
out
mov
sbb
(bad)
(bad)
ror
call
imul
es
pop
sar
add
jo
int3
inc
xor
int
ss
push
ret
sub
ins
pop
dec
mov
mov
pop
xchg
pop
repnz
pop
dec
rcl
cwde
push
xor
inc
sahf
mov
mov
xchg
jo
das
pop
jle
inc
loopne
pop
sbb
jbe
ficomp
addr16
jmp
jno
push
ss
xor
ds
rcl
push
and
mov
loopne
sub
outs
or
jmp
jns
mov
adc
add
mov
div
jg
stos
pop
add
fisttp
call
pop
clc
dec
dec
add
sub
das
adc
mov
and
aaa
pop
jbe
dec
loopne
gs
or
xor
into
mov
popa
inc
cs
sti
hlt
imul
mov
scas
rcr
push
repnz
popa
xchg
jno
mov
and
lea
jbe
rcr
outs
lods
fld
push
and
jl
cmp
mov
pop
sub
call
jge
push
icebp
lock
movs
out
arpl
push
add
stos
lods
shl
popa
jg
retf
or
add
shl
pop
add
push
mov
sbb
movs
scas
sbb
dec
pop
jmp
daa
push
arpl
pop
sbb
(bad)
cld
and
pop
push
push
adc
add
lock
(bad)
bnd
push
pop
sub
popa
out
add
(bad)
cmps
iret
arpl
push
loop
and
into
dec
out
nop
into
dec
mov
push
cmps
xchg
push
xor
push
ss
jb
mov
lahf
fist
mov
stos
or
pop
sub
mov
adc
jl
xchg
mov
and
add
not
xchg
push
cmp
cmovnp
scas
daa
(bad)
push
cmps
rcr
mov
add
pop
or
pop
inc
and
outs
dec
(bad)
mov
mov
mov
out
daa
mov
jg
inc
ret
or
inc
jmp
pop
or
mov
and
sub
add
adc
adc
dec
xor
xchg
(bad)
dec
cmps
inc
adc
lods
and
xchg
or
sub
mov
scas
jl
ss
sub
mov
sub
das
das
popa
push
lea
addr16
arpl
pop
pop
cmc
pop
fisttp
out
(bad)
dec
iret
xchg
nop
retf
pop
cmp
imul
nop
pop
and
imul
mov
add
out
push
outs
ds
fsubr
imul
punpckhwd
cmp
adc
xchg
fdivr
mov
add
mov
pop
mov
cld
mov
jo
mov
inc
test
xor
popa
sbb
pop
add
cmp
(bad)
mov
fidivr
xchg
in
add
or
pop
leave
xor
cmps
and
xlat
cli
mov
int
pop
mov
enter
pop
cdq
rol
repz
adc
loopne
fimul
and
imul
xchg
movs
xor
sub
cli
test
loop
ss
pop
xchg
loopne
mov
xor
jp
outs
(bad)
push
aam
mov
lods
push
and
shl
loope
sbb
dec
cmp
push
jmp
push
push
ret
push
mov
jmp
mov
adc
sub
iret
dec
xor
mov
sbb
stos
dec
or
pop
inc
mov
or
sub
lods
xor
clc
sub
cmc
jmp
dec
or
test
mov
mov
movs
(bad)
inc
loope
sbb
sub
imul
sbb
imul
jnp
mov
shl
and
stos
mov
popf
pop
mov
mov
xchg
aam
xchg
out
xor
ret
pop
push
test
bound
push
cmovnp
push
iret
add
sbb
push
fld
add
and
es
scas
pop
adc
push
mov
stos
lods
cmps
retf
clc
jns
push
dec
into
sbb
mov
test
out
out
sub
or
sahf
pop
inc
sahf
das
retf
pop
mov
fwait
sub
mov
xchg
xor
xchg
aaa
or
sbb
repz
jb
adc
jns
mov
cld
mov
mov
xchg
jnp
loopne
dec
push
adc
out
xchg
push
(bad)
jmp
xor
(bad)
push
std
mov
pop
xor
daa
loop
mov
mov
sbb
adc
jp
fwait
mov
test
aaa
(bad)
in
rol
dec
push
add
pusha
mov
pop
mov
out
movs
call
neg
retf
mov
and
add
mov
ss
inc
in
std
cs
cld
scas
ins
pop
push
jecxz
push
push
mov
subps
add
sbb
aas
xchg
cwde
and
repnz
mov
push
sbb
inc
dec
mov
stc
mov
je
mov
mov
call
sbb
mov
cmps
pop
call
pop
iret
mov
mov
(bad)
pushf
or
sti
push
jg
rcr
dec
mov
jb
sub
xor
out
out
pop
jmp
(bad)
not
dec
jle
mov
mov
pop
cmps
stos
fst
das
unpckhps
repnz
stos
jmp
sbb
das
psrad
adc
xchg
adc
ret
add
stc
iret
call
loop
(bad)
movs
jo
movs
daa
(bad)
pop
enter
dec
mov
pop
pop
cwde
ins
rcl
mov
call
cmp
adc
and
pop
sub
(bad)
imul
lods
aas
lds
pop
xor
inc
sar
es
adc
dec
pop
ficomp
cmp
inc
or
jmp
fiadd
cmp
inc
nop
add
sbb
sub
lods
ds
addr16
jbe
or
inc
mov
push
ins
shl
xor
nop
and
dec
test
push
out
sbb
adc
jmp
add
lahf
add
push
aaa
inc
jl
fs
sti
repz
pop
xor
pop
into
imul
mov
jg
add
mov
sub
xor
cmps
mov
mov
add
mov
pop
shr
lods
fs
cmp
loope
push
sub
xchg
scas
sbb
mov
mov
xchg
dec
push
mov
leave
dec
ins
push
mov
stos
es
jmp
out
test
xchg
popa
xchg
aad
inc
cli
les
adc
jge
adc
xlat
and
jb
dec
enter
adc
psrlq
dec
add
loope
pop
out
cmp
loopne
pop
icebp
add
cld
or
xchg
fidiv
mov
mov
mov
fucompp
pop
cmp
mov
cmp
call
jae
fs
outs
jb
add
add
sbb
push
jo
sub
cmp
test
dec
daa
push
xor
inc
popa
loope
jno
add
(bad)
call
and
popf
out
xor
(bad)
mov
jp
loopne
pusha
dec
pop
ja
mov
pop
sub
sbb
mov
sbb
js
test
stos
sahf
mov
dec
adc
xchg
inc
jge
adc
fild
mov
bound
xor
jo
inc
ins
cmp
push
cmp
(bad)
arpl
rcl
loope
sub
pop
mov
fcmovnbe
je
fmul
aaa
push
outs
xchg
fs
adc
push
dec
jp
xor
fsqrt
ins
out
int3
dec
push
dec
or
sbb
add
xchg
mov
ret
adc
int3
(bad)
(bad)
xchg
scas
aas
mov
mov
cli
ret
or
cmps
stc
setb
mov
psrld
dec
loop
inc
mov
outs
in
jb
xchg
data16
xchg
arpl
enter
xchg
aaa
retf
xchg
sub
sub
cdq
popa
pushf
outs
mov
jb
(bad)
jmp
and
mov
mov
mov
dec
sbb
inc
pop
fst
fld
sbb
outs
cmp
fist
sbb
mov
add
xchg
push
mov
or
xchg
call
mov
movs
adc
inc
lods
dec
loopne
mov
(bad)
jp
push
cs
ds
and
mov
and
jae
dec
sub
cdq
aas
mov
adc
pop
repnz
js
dec
les
aas
cmp
sbb
pop
adc
inc
sbb
xor
test
bound
adc
or
sub
aas
dec
jo
dec
and
call
jge
or
adc
in
inc
ja
or
xchg
lock
ss
pop
adc
jo
cmp
add
clc
lods
cmps
cs
and
ss
fwait
loopne
sbb
dec
pop
push
add
pop
and
fisub
add
mov
cs
xchg
or
mov
pop
sbb
aaa
pop
sbb
adc
jmp
into
and
imul
aas
push
jne
xchg
add
imul
or
and
mov
js
mov
(bad)
loop
add
ret
sub
inc
xor
lods
loope
das
pop
test
mov
sahf
std
test
or
mov
sub
stos
shr
stos
jp
pop
inc
das
stos
cmp
sub
ret
xchg
(bad)
das
jb
loopne
ss
retf
ror
xor
daa
and
xchg
iret
cld
lds
inc
jnp
out
dec
rcl
and
iret
bound
repnz
mov
push
das
maxps
pop
add
ds
fst
imul
jle
das
sub
mov
lods
(bad)
add
xchg
out
stos
or
es
mov
or
and
mov
adc
jmp
xor
sbb
(bad)
mov
ret
(bad)
and
cld
push
out
dec
mov
mov
mov
sbb
push
repnz
inc
inc
imul
cmp
test
test
inc
pusha
cmp
loop
retf
sub
inc
shr
out
pop
xlat
adc
add
push
(bad)
adc
add
pop
iret
daa
mov
ds
add
stc
xchg
sub
sbb
(bad)
out
rcr
mov
out
std
mov
popa
into
push
cmps
xor
mov
dec
iret
test
fisub
cli
xor
adc
jmp
xchg
imul
bound
lods
mov
add
push
pop
and
or
mov
repnz
push
cmp
and
xchg
jae
lods
mov
call
mov
bound
lods
xor
xchg
iret
retf
xchg
cmps
push
test
jbe
lods
push
retf
jb
sub
sub
es
cdq
aas
jb
lods
pop
dec
retf
add
retf
add
sbb
mov
xchg
add
(bad)
mov
inc
movs
xor
lods
mov
and
retf
pusha
cmp
cmp
jns
sub
lahf
push
shl
add
xchg
inc
loop
loop
in
sbb
outs
inc
mov
out
ins
out
into
fisub
sbb
ja
pop
iret
ret
sub
pop
sbb
ins
inc
movs
ins
repnz
add
adc
(bad)
repnz
sub
xchg
xor
stos
cmc
jmp
add
mov
es
inc
test
dec
ja
ja
sub
shl
pop
inc
movs
or
shr
push
sub
(bad)
jmp
dec
mov
aaa
outs
mov
inc
arpl
add
mov
test
mov
sbb
int3
js
push
inc
add
lods
loop
mov
jbe
ins
nop
push
mov
dec
and
data16
jmp
adc
ss
xchg
mov
dec
loopne
jne
adc
cmp
mov
add
rcr
add
adc
and
mov
(bad)
mov
out
repz
adc
ss
and
mov
push
dec
jmp
out
pop
mov
jmp
lods
inc
(bad)
outs
mov
mov
jmp
sbb
fnsave
pop
mov
lock
mov
fwait
pop
mov
and
push
out
test
cld
sbb
xchg
cmps
push
leave
add
call
inc
xchg
mov
call
mov
ja
(bad)
jo
sar
sahf
or
push
mov
iret
fild
pop
adc
cmp
xchg
pushf
mov
shr
dec
imul
cmc
push
and
cmps
repnz
mov
rol
fidivr
add
push
mov
ret
and
xor
add
xor
bound
aaa
sbb
das
sub
sbb
xor
scas
cmp
add
xchg
mov
jns
push
and
jne
not
mov
jl
jbe
lahf
mov
scas
jle
es
xor
mov
sbb
xor
adc
je
inc
sbb
and
add
fisubr
push
sub
xchg
lea
add
xor
lock
jp
or
stc
add
out
or
daa
sbb
mov
pusha
jnp
jmp
jg
push
pop
popf
inc
popa
movs
push
jnp
adc
xchg
sar
mov
fcmovu
(bad)
iretw
jae
in
outs
push
push
mov
add
mov
sub
xor
mov
lock
push
add
add
xchg
or
repz
jg
mov
add
les
sub
es
imul
jmp
pop
dec
cli
mov
pop
push
xchg
(bad)
ror
jle
loop
retf
retf
pop
ins
xor
jo
addr16
xor
sub
test
sub
jle
clc
pop
mov
xor
add
add
int
xor
ins
xchg
jp
inc
add
xchg
pop
sahf
cmp
hlt
mov
test
addr16
mov
push
add
mov
out
lahf
sbb
or
clc
add
xor
mov
lock
mov
aad
ja
rcl
shl
dec
push
cli
leave
push
add
gs
mov
mov
test
loope
pop
push
adc
ror
sub
test
jg
fimul
pop
out
out
fidiv
dec
jnp
ins
popa
mov
cmp
mov
ror
jge
pushf
mov
xor
pop
into
cli
add
outs
call
repz
or
jle
xor
jno
ss
sub
push
jns
(bad)
dec
jmp
adc
test
add
cmp
mov
pop
or
adc
fcmove
sub
in
dec
sbb
dec
push
push
sub
and
in
xlat
adc
ret
(bad)
jb
inc
ficomp
jmp
fcmovnu
add
pop
jne
pop
aam
dec
and
xor
test
es
or
or
dec
add
cmp
mov
into
mov
and
mov
cmp
dec
sub
retf
dec
rcl
push
(bad)
xlat
(bad)
daa
push
clc
ins
cmp
inc
or
push
xchg
lods
and
add
jmp
lds
in
outs
push
pop
jmp
fdivr
inc
add
push
aaa
dec
mov
or
push
mov
(bad)
mov
cwde
cmp
jbe
ret
push
add
xchg
jbe
mov
jecxz
inc
(bad)
push
add
add
ror
(bad)
jecxz
ror
test
retf
(bad)
rcl
sbb
sbb
(bad)
jmp
ds
ja
push
inc
inc
fwait
(bad)
inc
xor
ror
sub
in
sub
fisub
mov
xor
(bad)
mov
push
jle
adc
push
push
stc
mov
sbb
cli
push
rol
and
pusha
cmps
fiadd
mov
sub
mov
dec
jmp
jp
sub
cmp
pop
iret
push
mov
sub
sub
outs
cmp
ror
xchg
dec
inc
mov
xor
gs
popa
es
fcomip
leave
add
mov
stc
leave
adc
scas
cmp
lods
adc
mov
push
mov
ror
mov
push
imul
sub
and
mov
shl
cmp
test
out
push
call
sbb
xlat
scas
jbe
gs
pop
add
mov
and
jmp
int
mov
mov
stos
cmp
(bad)
xor
outs
mov
ins
call
addr16
sbb
add
dec
xchg
jmp
ret
scas
stos
in
add
sbb
pop
cmp
cmps
mov
stc
cmp
pop
add
icebp
push
sar
and
rcl
mov
les
in
inc
pop
dec
adc
pop
pop
rcr
arpl
pop
and
repnz
popa
in
punpckhdq
ror
push
mov
ins
pop
xchg
cdq
cmp
inc
inc
push
add
sahf
adc
icebp
push
retf
dec
cmp
dec
ja
cmp
pop
xor
push
ins
sbb
mov
sbb
ror
dec
mov
mov
rol
push
push
and
ja
jle
imul
add
ficomp
jbe
mov
das
jmp
cmp
ins
jo
jg
and
clc
push
mov
ins
stc
imul
mov
xor
adc
add
push
pop
mov
aaa
add
frstor
dec
lock
push
add
test
ja
xor
cs
push
jg
inc
push
jmp
stc
jge
push
push
push
gs
outs
sbb
pop
loope
jg
mov
cs
sub
jns
push
dec
mov
cmp
addr16
outs
push
fcom
or
data16
loopne
(bad)
xchg
adc
cmp
adc
push
adc
outs
add
fidivr
pushf
fsub
mov
jno
push
push
sbb
inc
or
mov
pushf
gs
les
adc
xchg
adc
mov
cmps
and
mov
push
in
or
adc
outs
mov
jg
mov
xchg
push
popa
or
or
clc
daa
xor
adc
xor
add
bound
cld
ja
adc
unpcklps
ja
or
test
rol
pusha
adc
xor
inc
lods
push
add
shl
sub
lods
add
or
xchg
pop
lea
jbe
mov
cwde
leave
inc
add
dec
inc
nop
xchg
dec
imul
mov
sub
and
aad
and
or
lds
cmp
adc
arpl
rol
jmp
pop
pop
aas
neg
icebp
or
pusha
pop
or
xchg
sbb
or
dec
and
jecxz
pop
adc
scas
mov
dec
push
jmp
(bad)
xor
pop
rol
xchg
dec
adc
arpl
jmp
test
scas
inc
lea
adc
ins
inc
mov
inc
ins
fbstp
sub
repz
push
bound
xchg
ins
pusha
cdq
imul
mov
and
sub
cmps
pop
leave
add
xchg
sbb
sbb
push
add
das
inc
pop
add
inc
and
clc
call
rol
jmp
rcr
popa
add
jns
lea
mov
neg
add
cmp
arpl
mov
dec
push
arpl
outs
sbb
cmps
inc
and
iret
das
sahf
stos
jbe
mov
and
not
cwde
pop
outs
sahf
gs
call
dec
inc
sti
xchg
mov
push
xchg
inc
sub
test
inc
int3
push
bound
pop
mov
mov
cmp
out
je
ss
mov
inc
(bad)
(bad)
cmp
inc
pusha
ss
push
push
dec
add
out
out
(bad)
in
inc
mov
add
ins
jmp
cmps
call
add
pop
rcr
sbb
xchg
es
add
add
mov
cmp
imul
aas
inc
pop
in
les
cmp
rol
psrlw
fldenv
movs
or
pusha
xor
cdq
add
int
mov
cmps
rcl
push
out
(bad)
int3
xchg
xchg
outs
test
(bad)
mov
nop
sub
inc
or
adc
bswap
rcl
cmp
mov
popf
push
aas
mov
dec
sub
ss
and
scas
sub
fdiv
xchg
loope
lds
adc
js
adc
or
cmps
push
call
loop
test
scas
cmp
sbb
mov
mov
inc
ret
in
mov
xor
sub
stos
or
push
and
mov
jmp
(bad)
push
and
jle
loopne
mov
lahf
cmps
enter
jbe
sub
add
adc
test
fiadd
(bad)
pop
ss
inc
jo
ret
retf
or
add
loopne
xchg
dec
pop
ret
sub
jle
sahf
jbe
imul
pushf
fimul
or
fnstsw
or
inc
or
je
cmp
xor
in
stos
out
jp
jp
cmp
adc
not
xor
movlps
adc
add
sub
jl
mov
hlt
xor
add
stos
mov
mov
jle
push
ss
adc
fcomp
mov
cmp
sbb
dec
xor
shr
fwait
int
sub
xor
jecxz
xor
and
lock
pop
sti
xor
and
cmps
imul
jl
imul
(bad)
imul
(bad)
(bad)
cmps
mov
add
imul
push
xchg
xor
rcr
stos
jo
mov
adc
test
test
cs
dec
add
or
jp
pop
push
add
popa
dec
mov
cmp
push
sub
mov
sbb
sbb
jg
sub
stc
or
mov
mov
add
cmps
mov
add
ss
lock
(bad)
(bad)
and
cmp
push
retf
mov
stc
int
push
cmp
push
iret
aad
lds
pop
cld
mov
fimul
mov
mov
lock
mov
jmp
pop
or
fdivr
leave
mov
rcr
call
outs
mov
push
push
cmp
jmp
lea
(bad)
stos
ins
jmp
fcomp
add
mov
call
mov
jmp
push
fdivr
sahf
inc
aam
test
pusha
sub
cmp
fidiv
pop
std
pop
mov
mov
jp
(bad)
mov
test
(bad)
xchg
ja
(bad)
and
scas
je
mov
xchg
push
jnp
mov
dec
push
dec
cmp
out
rcr
mov
and
ja
mov
inc
or
std
xor
ds
mov
push
stos
cmps
rol
(bad)
push
sub
push
icebp
dec
or
out
icebp
mov
mov
fild
cmp
jb
aaa
mov
aam
mov
loopne
out
mov
lds
add
sub
xchg
pop
inc
mov
mov
aas
mov
push
in
pop
xchg
add
popa
push
test
out
inc
into
aaa
movs
or
imul
adc
jb
popa
ret
bound
xor
call
fbstp
mov
inc
movs
xchg
add
and
mov
mov
outs
mov
and
mov
out
inc
xor
or
cmp
test
xor
mov
jno
cmp
push
test
imul
push
loop
pop
and
lock
inc
push
popf
add
add
js
add
cmps
inc
pop
jmp
mov
jns
mov
mov
jl
mov
cmp
mov
lods
rcl
sbb
imul
xchg
repnz
imul
push
xchg
dec
xor
ja
cmps
push
out
and
mov
push
jp
cmp
pop
pop
pop
or
adc
jge
jp
sub
pop
addr16
ret
or
out
add
add
inc
push
jmp
cmp
xchg
vpcomd
ret
add
or
ret
pop
mov
fisttp
adc
and
inc
mov
dec
xchg
cmp
mov
ficom
outs
bound
cmp
push
inc
push
mov
adc
aad
jmp
adc
jle
cmp
fisubr
push
pop
rol
(bad)
inc
jg
add
ss
cs
pop
ret
push
es
lods
scas
xor
stos
cmp
mov
xchg
retf
inc
adc
mov
inc
cmp
pop
sbb
mov
shl
inc
rcl
ret
mov
(bad)
cli
jnp
jnp
(bad)
xlat
add
rol
outs
jge
mov
bound
mov
or
sub
ret
xchg
cmp
stmxcsr
popa
fcompp
ret
pop
cmps
fdivrp
mov
cli
push
inc
sbb
adc
cs
cmps
jp
add
or
adc
or
not
test
sti
add
popa
mov
adc
jnp
cli
jnp
push
out
xor
jg
imul
pusha
fbstp
add
adc
add
xor
jle
aam
dec
scas
mov
mov
mov
sub
rcr
ins
pop
popf
xor
sbb
stc
push
sub
jns
sub
mov
mov
pop
enter
hlt
iret
sar
retf
mov
inc
mov
dec
dec
adc
jmp
cmp
dec
pop
jb
adc
push
lea
pop
jg
call
leave
rol
popa
dec
sbb
adc
mov
push
lea
bnd
sbb
imul
out
xchg
push
sahf
add
mov
push
aam
or
adc
mov
push
mov
add
mov
bound
cmp
int
out
pop
adc
pop
sbb
enter
cmp
ret
repnz
gs
cmp
ficom
mov
call
push
outs
mov
fst
add
jmp
pop
pop
or
add
test
pop
push
(bad)
jle
pop
lea
xor
lds
test
outs
inc
bound
das
push
test
push
jb
add
and
(bad)
jns
lahf
dec
mov
push
jg
sbb
adc
aad
jp
fs
mov
cld
ret
call
fs
addr16
neg
ret
(bad)
shr
jmp
pop
lods
retf
mov
out
xchg
inc
out
add
into
outs
outs
ss
push
inc
push
mov
and
das
call
popa
int
arpl
xchg
or
xchg
(bad)
loopne
call
mov
fcmovnb
out
or
loopne
or
in
pop
xchg
mov
mov
dec
jg
retf
adc
push
jns
popf
adc
je
add
loop
jmp
test
fidivr
inc
out
fdivp
aad
or
cmp
in
es
jbe
lea
out
mov
popa
adc
int
sahf
int
movs
imul
mov
scas
test
pusha
push
sub
add
imul
push
fnstcw
lock
pop
out
push
pop
mov
lods
rcl
add
mov
fcmovnb
mov
xor
cdq
ja
add
push
fimul
adc
clc
into
mov
push
xlat
xlat
int
inc
popa
repz
xchg
pop
ret
fwait
enter
arpl
jnp
or
das
or
imul
pop
gs
add
cmp
fs
aam
or
sbb
or
bound
jo
fstp
add
rcr
jno
aaa
dec
xor
arpl
sub
cdq
mov
mov
push
call
ins
xchg
cmc
pop
sbb
and
test
ss
push
cmp
add
jo
out
cmp
mov
xor
ss
push
mov
imul
fbstp
or
repnz
je
adc
cmps
sub
shl
adc
mov
jnp
cmps
pop
sar
pop
mov
xchg
pop
dec
ds
jmp
or
inc
adc
jp
cld
inc
or
adc
jge
and
stos
ror
dec
js
jmp
add
jmp
push
add
mov
xor
es
pop
ins
mov
sub
retf
imul
pop
gs
test
into
pop
dec
or
xchg
and
push
inc
shl
inc
push
bound
push
push
mov
mov
and
push
(bad)
jae
into
xchg
fistp
cmps
jbe
das
add
sti
push
add
(bad)
mov
inc
add
sub
movs
cmp
test
inc
lahf
arpl
adc
repz
retf
cdq
cli
dec
repz
mov
sbb
sbb
adc
in
dec
retf
pop
jl
pop
ret
test
rol
add
scas
jbe
mov
mov
dec
sbb
pop
dec
shl
outs
pop
mov
daa
ins
dec
into
jp
ds
jle
scas
pop
mov
dec
dec
movs
fldenv
ret
lods
loop
mov
data16
shl
or
dec
mov
es
adc
dec
or
pop
ret
mov
(bad)
fst
jbe
adc
loopne
and
cdq
sub
cmc
xor
shl
adc
push
dec
in
xor
out
popfw
inc
cmps
mov
stc
es
aam
and
push
(bad)
ja
mov
sbb
xor
xchg
mov
add
xor
mov
xor
cmovbe
sub
aas
sub
and
(bad)
sbb
in
or
hlt
ret
test
inc
popf
pop
ficom
(bad)
lods
dec
stos
cld
cld
(bad)
xchg
stc
aam
pop
es
rol
cmp
inc
add
sar
push
jp
adc
dec
xor
jnp
loopne
mov
daa
stc
jae
pop
aam
push
or
shl
repz
pop
repnz
or
fsubr
adc
jp
cmp
add
iret
xchg
in
stos
add
out
retf
cmp
arpl
mov
mov
pop
inc
cmps
icebp
jns
or
mov
fistp
dec
jb
lock
stos
push
imul
adc
cdq
pop
scas
cmps
leave
cmp
ret
dec
and
and
loop
lds
aaa
pop
sub
shl
cmp
push
addr16
inc
call
sbb
jmp
and
dec
rcr
inc
cs
jle
out
fld
cmp
(bad)
jae
sbb
adc
and
add
ds
sbb
mov
cs
aam
jo
movs
and
test
es
sub
push
daa
pop
push
mov
mov
adc
scas
pop
loop
sub
fidivr
sbb
ss
jecxz
ins
jae
pusha
stos
ins
test
ins
push
pop
xchg
or
psubw
and
cmps
and
(bad)
or
pop
jmp
sbb
sbb
push
mov
daa
mov
retf
jbe
inc
pop
xor
sbb
mov
mov
ret
xor
out
push
in
adc
call
xor
push
cdq
ins
addr16
(bad)
xor
cmp
push
xchg
ret
cmp
mov
push
cmp
jo
pop
loope
cmp
xchg
xchg
loopne
(bad)
cs
(bad)
(bad)
stc
scas
aas
aas
xchg
jbe
cmps
mov
lahf
cmc
mov
xchg
fbstp
push
dec
sbb
pop
pop
mov
mov
ds
adc
add
std
(bad)
loop
mov
shr
(bad)
push
push
in
fst
xor
mov
jmp
sbb
(bad)
push
xor
push
jo
inc
add
xchg
cmp
lock
or
out
dec
add
imul
pop
dec
adc
inc
add
out
push
std
jg
inc
jae
mov
inc
leave
rol
loop
dec
mov
push
inc
in
imul
xor
daa
jbe
sub
cld
adc
dec
stos
rcr
das
or
iret
test
push
sar
mov
jecxz
adc
shr
mov
jns
loope
jo
outs
dec
(bad)
inc
mov
jl
retf
push
bound
aam
es
sahf
push
or
fild
add
mov
ss
(bad)
mov
mov
fisubr
inc
pusha
inc
inc
(bad)
adc
fiadd
mov
dec
int
loope
addr16
pop
jo
sti
push
xor
jb
mov
(bad)
adc
ja
lods
push
repnz
sbb
int3
inc
jecxz
xchg
mov
sub
cmp
ret
sahf
jl
test
push
xor
push
pop
rol
fist
sbb
xor
fcomi
mov
ret
sub
cmp
push
pop
ror
out
fld1
mov
scas
mov
cmc
aad
jns
stos
jmp
or
xchg
aas
mov
sbb
push
inc
fdivrp
iret
push
jns
and
inc
test
adc
(bad)
cli
mov
icebp
popf
jmp
lahf
mov
lods
cmp
dec
adc
div
je
int
loop
cmp
cs
or
call
push
jae
fcomi
js
push
call
cld
clc
and
stos
fstp
les
inc
test
(bad)
gs
sbb
pop
xchg
retf
add
jb
pop
sbb
js
loop
mov
pop
lea
sub
sahf
(bad)
pop
mov
dec
sbb
or
imul
les
inc
adc
es
push
scas
stos
lods
inc
xchg
push
push
outs
scas
mov
ss
xchg
push
add
adc
aaa
jb
push
jle
mov
add
out
jno
inc
xchg
popf
jge
pop
(bad)
int
xor
or
stos
mov
outs
rcl
mov
pop
xchg
ret
icebp
add
int
ds
out
xor
mov
sbb
(bad)
xchg
xchg
cmp
aas
outs
es
std
mov
(bad)
jns
(bad)
sahf
xlat
mov
aaa
sub
jae
pusha
call
or
out
xchg
test
mov
ret
push
call
mov
bound
push
cmp
and
les
adc
cmp
dec
or
sbb
mov
inc
mov
popa
retf
push
pushf
mov
sahf
and
popa
fs
mov
push
jbe
jp
jmp
(bad)
mov
(bad)
aaa
cs
and
(bad)
sbb
dec
es
cmp
push
add
inc
(bad)
test
call
jnp
fldcw
test
dec
popf
jp
and
call
mov
dec
push
outs
adc
and
loopne
repnz
pop
adc
sub
iret
(bad)
fcmovb
sbb
jbe
xor
inc
bound
retf
aam
sahf
push
repz
mov
adc
inc
push
je
mov
ret
jge
rcl
dec
jnp
or
cld
inc
or
sub
repnz
sbb
fdivr
sahf
adc
fs
mov
or
int
retf
add
out
mov
jno
(bad)
cs
loopne
adc
in
(bad)
lea
test
fimul
pop
call
and
and
cmp
repnz
scas
hlt
mov
add
mov
jl
push
out
xchg
add
sub
xor
sub
mov
and
xchg
sub
scas
dec
es
inc
(bad)
ds
jno
or
mov
or
inc
dec
adc
xor
or
push
pop
repnz
sub
jl
adc
test
(bad)
mov
fist
mov
dec
dec
xchg
mov
div
xchg
mov
xor
ror
pop
mov
adc
shl
sbb
pop
push
pop
int3
repz
xchg
retf
in
in
popf
mov
rol
inc
in
dec
retf
in
loop
or
mov
nop
out
test
loope
jg
fisttp
inc
fistp
imul
outs
push
push
cmp
and
sahf
sub
enter
iret
pop
mov
in
lods
fwait
sub
not
or
xchg
sahf
rcl
out
sti
sub
pop
sbb
adc
mov
push
inc
or
sahf
pop
rcr
lods
xchg
pusha
add
and
mov
lahf
test
push
cmp
jge
mov
call
add
sbb
(bad)
adc
inc
(bad)
shr
xor
xor
retf
in
lock
retf
mov
mov
xlat
and
rol
xchg
push
lods
aaa
jg
mov
cmp
mov
retf
clc
xor
pop
adc
rol
fimul
mov
jbe
and
or
out
push
in
scas
push
adc
add
outs
mov
mov
sbb
mov
jmp
sbb
scas
repnz
and
sub
sbb
fcmovnb
test
add
outs
or
adc
xchg
mov
out
jb
jmp
add
jmp
aaa
jmp
cld
(bad)
inc
fldenv
ja
jl
push
jnp
jp
cmp
idiv
cmps
add
fmul
(bad)
loopne
jbe
fild
push
ins
pop
clc
mov
(bad)
jg
(bad)
adc
movs
fistp
(bad)
(bad)
cmp
add
dec
in
add
adc
xor
call
mov
stos
mov
xchg
cmp
mov
jb
(bad)
xor
add
stos
daa
xor
scas
iret
dec
pop
(bad)
aam
bound
mov
and
jne
mov
jne
ss
call
aas
bound
pop
(bad)
pop
add
add
adc
mov
repz
sub
add
dec
mov
mov
cmp
lods
and
mov
xchg
sbb
clc
xchg
dec
sub
mov
add
out
lods
mov
add
imul
jmp
fsub
inc
rol
out
mov
lahf
xchg
inc
sar
cmps
jg
lea
mov
jle
pop
outs
ds
sbb
movs
addr16
hlt
fnstsw
mov
inc
cmp
icebp
xchg
sbb
or
cmps
xchg
push
(bad)
inc
jae
dec
test
or
in
push
adc
sub
dec
pushf
or
mov
mov
push
or
mov
adc
inc
cmp
dec
add
popf
mov
cwde
shr
mov
les
xor
sbb
adc
iret
and
adc
add
out
push
adc
fs
mov
dec
pop
call
mov
push
inc
(bad)
popf
scas
and
inc
test
loop
adc
add
ss
mov
mov
mov
nop
movs
addr16
loopne
pop
push
(bad)
adc
ins
add
sbb
dec
rep
call
push
cli
nop
mov
adc
cmp
push
add
in
addr16
inc
push
pop
(bad)
and
pop
fucomp
fsub
les
adc
ret
xchg
push
int3
stos
add
div
adc
push
jmp
push
adc
cld
add
pop
push
inc
and
and
ror
smsw
(bad)
push
xor
arpl
lahf
xchg
scas
cmp
adc
jge
test
push
in
lea
nop
and
pop
fst
pop
js
sbb
dec
dec
push
ret
mov
fs
les
mov
enter
dec
xlat
mov
xor
push
lods
test
adc
sbb
add
or
inc
cli
sbb
and
repz
lods
or
cmps
or
shl
adc
imul
or
rcr
lahf
and
push
xor
xchg
sub
adc
xor
inc
push
out
cmp
push
add
sbb
out
or
mov
test
call
add
push
add
jns
ins
xor
add
vmovsd
adc
dec
or
adc
adc
neg
xchg
cmp
loopne
or
ds
add
pusha
stos
fimul
inc
or
nop
pop
push
xchg
jbe
jnp
adc
lahf
inc
out
cmp
xchg
mov
xchg
sub
repz
inc
call
push
add
push
pop
adc
imul
mov
out
or
mov
cld
movs
outs
push
xor
dec
call
mov
ja
sar
enter
fiadd
cmp
cmps
push
sbb
nop
xor
stos
xchg
(bad)
xchg
mov
and
adc
dec
mov
bound
and
xchg
data16
stos
scas
sbb
push
popa
shl
mov
(bad)
sar
adc
lahf
cs
mov
shl
and
add
dec
ds
adc
retf
dec
mov
es
sub
es
fistp
cmp
push
mov
pop
push
repnz
test
loopne
fisub
pushf
mov
mov
push
mov
mov
fs
shl
dec
aas
mov
jb
mov
push
call
ds
adc
cmps
mov
or
jb
inc
xchg
and
xchg
xchg
movs
aas
pop
pushf
inc
movs
iret
fistp
inc
rcr
call
adc
mov
dec
scas
imul
or
retf
scas
(bad)
xlat
ret
fucom
stc
jp
push
imul
mov
pop
loop
inc
pop
xor
xchg
mov
xchg
lods
xchg
stos
xor
and
fwait
pop
inc
nop
inc
repnz
outs
or
push
cmp
push
push
inc
or
pop
int
mov
xchg
ss
jg
stc
jecxz
inc
outs
push
stos
ss
adc
addr16
pop
(bad)
jg
pop
dec
push
add
xchg
dec
pop
or
or
sahf
mov
push
jmp
test
inc
aas
mov
inc
xor
inc
scas
push
loope
ss
mov
sahf
or
mov
cdq
pop
inc
je
add
push
les
cmps
adc
and
stos
lods
xchg
test
dec
sar
aaa
dec
into
mov
cmp
test
push
adc
sub
xchg
cs
inc
adc
and
sbb
mov
jmp
test
fisttp
mov
repnz
mov
(bad)
cs
mov
addr16
inc
add
leave
adc
lods
imul
rcl
mov
(bad)
mov
jno
aaa
stos
cdq
jb
mov
or
mov
mov
inc
or
std
cmp
aam
clc
sub
adc
jle
adc
cli
bound
and
fwait
sahf
xor
and
pop
and
jo
loope
nop
mov
cmp
and
pop
add
rol
mov
pop
xor
scas
es
clc
inc
cmp
shl
aaa
add
adc
dec
stc
cmp
add
je
add
cmp
jge
jl
(bad)
push
adc
jmp
mov
in
inc
test
and
mov
pop
mov
repnz
push
add
test
out
gs
cmp
js
mov
(bad)
je
and
cmp
leave
cmps
cs
jmp
xor
pushf
cld
stos
mov
out
cs
js
push
add
popa
mov
les
adc
lods
aas
xchg
bound
cdq
jmp
mov
dec
sub
test
dec
sar
stc
test
mov
mov
loope
sbb
inc
(bad)
mov
sub
jmp
cdq
outs
xchg
fld
jp
mov
mov
mov
push
mov
mov
pusha
rol
adc
push
mov
std
dec
ret
mov
iret
inc
xor
xchg
movs
(bad)
push
and
jg
out
dec
cmps
sbb
cmp
popa
outs
cmp
jp
jb
mov
sub
outs
mov
sbb
fucompp
mov
bound
pop
sbb
stos
and
add
cs
pop
rcr
or
pop
and
or
mov
imul
add
arpl
stc
adc
sti
aas
jns
push
dec
dec
sbb
pusha
ror
add
mov
(bad)
xchg
test
pop
adc
push
out
add
and
add
cmc
sbb
mov
sub
adc
test
or
test
sar
add
jne
sub
push
loope
test
rol
cmp
js
cmp
mov
xor
mov
stos
bound
push
(bad)
cmp
xchg
das
es
and
adc
xlat
pop
cmp
sbb
mov
bound
cli
mov
mov
es
add
pop
jbe
mov
test
add
imul
inc
mov
push
mov
repnz
std
pop
and
adc
jge
(bad)
mov
into
pop
jl
pop
jg
xor
dec
xor
sub
add
inc
pop
sub
adc
pop
mov
adc
aaa
push
pop
mov
ss
cmps
not
pop
cli
and
sub
cmp
dec
and
and
sbb
mov
push
jmp
sbb
les
mov
dec
sub
ret
jecxz
pop
adc
jmp
add
pusha
sub
test
daa
int
xchg
movs
(bad)
mov
mov
imul
push
jb
inc
add
dec
das
ror
sub
ds
push
nop
push
shl
push
scas
mov
out
xor
push
(bad)
out
dec
inc
clc
pop
or
mov
fadd
adc
div
adc
outs
call
mov
and
stc
out
or
push
push
cli
scas
and
add
sbb
xor
mov
mov
add
add
adc
or
adc
arpl
das
and
mov
out
movs
ins
or
fdivrp
pop
sub
test
mov
and
icebp
mov
xor
jnp
loop
arpl
push
daa
or
scas
sar
adc
adc
inc
xor
shl
(bad)
mov
adc
dec
bound
mov
ror
das
(bad)
mov
and
cld
call
addr16
fst
nop
jae
pushf
sbb
mov
xchg
sbb
sub
loopne
test
stc
call
fiadd
sub
aas
pop
adc
fdivrp
fwait
dec
push
pop
pusha
cmp
sbb
repnz
nop
jl
dec
iret
pop
inc
sahf
xchg
fwait
push
mov
mov
and
mov
adc
push
jbe
jmp
loope
daa
sub
mov
and
dec
and
pusha
mov
(bad)
in
xchg
jl
ins
mov
push
or
and
mov
mov
dec
jo
int
inc
les
out
xor
dec
stc
jo
xchg
lahf
adc
inc
arpl
and
call
sbb
push
ficomp
std
xchg
and
adc
cld
test
jbe
inc
lock
cs
jecxz
nop
mov
xor
push
jnp
push
xor
mov
push
cmp
jl
pop
push
push
call
cmp
sub
ficom
xor
inc
xor
adc
inc
cmp
daa
xor
movs
and
scas
not
mov
mov
cli
mov
pop
adc
movs
push
sub
clc
and
xchg
out
dec
or
jmp
imul
jmp
lods
pop
jae
mov
clc
repz
mov
stc
adc
mov
ret
lods
jo
lock
sahf
ds
outs
dec
sbb
cmp
jg
cmp
jno
inc
retf
int3
cmp
inc
scas
and
jne
inc
inc
sub
mov
push
pop
inc
cmc
cmc
push
aaa
cld
(bad)
xor
bound
adc
fimul
jg
(bad)
mov
fs
sub
cmp
jp
xchg
jne
dec
or
data16
inc
cmp
mov
jl
sbb
jmp
inc
xchg
and
mov
gs
jnp
jbe
cmovbe
push
fs
aaa
mov
mov
or
adc
add
aas
xor
cmp
push
call
daa
sbb
retf
xchg
fs
add
rcl
inc
shl
int
ss
cmp
(bad)
scas
push
imul
shr
mov
les
push
inc
rcl
cli
sbb
xchg
pushf
add
cmps
sbb
loopne
mov
pop
into
jbe
rcl
out
test
or
xchg
push
or
cmp
ss
jg
cmc
(bad)
adc
mov
bound
jmp
(bad)
sahf
jp
data16
retf
ss
cli
ret
or
dec
jl
mov
mov
ins
call
xchg
xchg
xor
sub
mov
aad
scas
fstp
ror
test
inc
bound
rol
leave
addr16
cmps
mov
pop
pop
sahf
pop
ins
dec
mov
inc
add
(bad)
in
mov
ret
retf
xchg
mov
hlt
sahf
mov
pop
lea
mov
push
push
bound
punpcklwd
xor
outs
mov
xor
xchg
inc
out
cmp
xchg
scas
cmp
add
jo
cmps
mov
xchg
xchg
xchg
adc
add
out
dec
dec
shl
mov
inc
push
movs
repz
cmps
xchg
inc
and
jle
pop
adc
adc
dec
into
pop
or
xchg
or
ss
inc
cld
jp
inc
rcr
adc
push
jecxz
inc
push
add
leave
dec
imul
push
jl
shr
shl
shl
push
sub
or
popa
push
xor
dec
(bad)
stos
imul
cdq
mov
cmp
add
dec
dec
test
mov
fisubr
nop
(bad)
adc
fldcw
jne
inc
jle
push
push
inc
addr16
jns
test
push
sbb
pop
inc
or
mov
push
adc
add
in
push
dec
popf
sar
adc
into
adc
mov
jl
sbb
pop
xchg
pusha
stos
and
xor
inc
(bad)
dec
sbb
mov
sub
or
loopne
sbb
fist
fwait
dec
cmp
jno
pop
(bad)
jle
xchg
dec
outs
mov
cmp
repz
outs
ds
ficomp
and
stos
or
xchg
pop
out
mov
out
add
cmps
fmul
xor
out
jnp
jno
and
and
dec
pusha
movs
rcl
fiadd
pop
jecxz
in
test
arpl
cmp
push
adc
scas
rcr
jne
js
ret
scas
mov
mov
ja
ins
cld
xchg
mov
xchg
mov
aaa
and
scas
pop
ret
ds
mov
addr16
push
mov
clc
push
call
idiv
test
pop
fs
inc
mov
xor
jp
or
mov
sub
or
jno
mov
enter
test
daa
push
sub
movs
sub
jnp
imul
(bad)
push
stc
ins
jle
jge
lahf
and
unpckhps
jmp
adc
js
dec
xchg
pop
sbb
dec
or
cmps
nop
add
mov
scas
add
dec
jbe
gs
add
loop
sti
pusha
shr
cmc
into
xlat
mov
and
adc
(bad)
push
aas
or
jmp
cwde
mov
popa
pop
or
jge
and
adc
push
cmp
shl
push
or
ret
push
mov
adc
call
jge
leave
inc
(bad)
out
movs
mov
ret
retf
arpl
popa
in
pop
dec
loope
aaa
mov
das
mov
icebp
push
xchg
sti
and
add
test
shr
mov
(bad)
cmp
jae
or
ins
xor
mov
stos
pop
jo
sbb
out
out
mov
scas
popa
mov
stos
movs
sbb
adc
inc
cmp
jae
inc
scas
mov
jle
repnz
adc
bound
scas
mov
mov
jp
imul
mov
pusha
dec
xor
dec
loopne
retf
psubsw
movs
pop
cmps
ficomp
add
bound
outs
aas
adc
inc
imul
push
push
mov
push
jg
push
mov
ins
(bad)
add
xor
cmp
mov
or
mov
mov
imul
mov
inc
cs
cmp
dec
sbb
repnz
sbb
rol
(bad)
and
mov
xchg
clc
xchg
and
push
leave
ja
xchg
test
cmp
inc
inc
sbb
cmp
adc
inc
inc
or
sti
cmp
das
adc
outs
pop
mov
push
cmp
clc
jae
pushf
hlt
cmp
pop
or
dec
sahf
repnz
adc
call
out
adc
add
inc
mov
ins
dec
into
sub
dec
mov
pop
mov
js
movs
add
and
test
xchg
stos
(bad)
jle
fs
scas
xchg
sub
cmp
xchg
gs
mov
psubd
mov
push
cmps
adc
scas
inc
adc
or
call
pop
mov
mov
inc
dec
cmp
mov
cmp
adc
sbb
add
pop
push
mov
(bad)
dec
or
shr
cmp
jo
jmp
pop
mov
pop
push
sub
fild
aaa
push
pop
inc
dec
lahf
inc
mov
inc
icebp
retf
sbb
aam
popa
cmp
push
iret
jge
jb
gs
lahf
sbb
mov
xor
sbb
dec
jno
stos
int
stc
jb
or
mov
psubw
inc
(bad)
mov
scas
retf
adc
xor
test
inc
jns
jp
cmps
push
nop
push
out
jbe
add
jp
add
mov
xchg
push
jecxz
mov
jno
lock
es
cmp
jle
inc
pop
stc
pop
je
repnz
and
cmp
push
mov
scas
sbb
pusha
and
pop
adc
stos
imul
pop
xor
fisub
inc
stos
arpl
sub
push
xor
cld
mov
adc
iret
pop
in
scas
sbb
push
dec
pop
and
or
in
pop
adc
pusha
rcl
ins
push
push
sub
mov
rcl
js
add
loopne
or
out
das
jbe
pop
push
stos
(bad)
gs
jb
adc
scas
dec
cmp
ja
push
sub
inc
pmaxub
mov
add
iret
enter
xor
dec
xor
jge
dec
shl
cmp
pushf
push
fwait
push
inc
push
xor
mov
xor
xlat
enter
arpl
into
fiadd
xor
adc
ins
mov
pop
nop
push
jl
js
jbe
mov
and
and
je
xchg
movhps
fiadd
fadd
xor
inc
pop
cld
dec
sahf
cld
inc
mov
cmp
cli
push
cmp
popa
jle
sbb
add
pop
cmps
jle
gs
inc
outs
and
and
mov
sub
int
stc
cmps
js
sbb
out
mov
push
xchg
sahf
and
jnp
pushf
jecxz
sub
jno
pusha
pop
jno
sub
rcl
cld
and
mov
cs
cli
xor
dec
nop
push
ror
and
repz
pop
sar
dec
mov
add
and
fiadd
cld
mov
and
cmp
je
clc
and
xchg
or
gs
or
push
push
mov
dec
cmp
sub
adc
rcl
out
outs
inc
clc
ss
aas
call
pop
sbb
arpl
lds
dec
ror
cmp
add
lock
and
fdiv
shl
sbb
mov
cli
and
pop
mov
xchg
jecxz
or
push
cmc
imul
leave
sbb
mov
mov
popf
inc
repz
mov
jae
lods
xchg
cwde
jne
repz
(bad)
cmp
inc
bound
dec
sar
adc
daa
mov
loop
cmps
mov
ror
dec
es
inc
mov
scas
xlat
and
imul
dec
loope
(bad)
lock
fld
je
jp
and
outs
push
clc
sbb
jo
das
(bad)
clc
adc
pop
repnz
repnz
xchg
lahf
jl
inc
inc
stc
cmp
test
imul
stos
dec
int
lock
push
dec
ret
cmp
dec
movs
push
inc
scas
xchg
scas
and
adc
iretw
mov
push
push
(bad)
ins
.byte
ss
popf
