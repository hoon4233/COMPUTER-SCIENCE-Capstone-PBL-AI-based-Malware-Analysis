add
aad
jb
xlat
adc
pop
movs
sbb
mov
pop
imul
pusha
jbe
inc
pop
cmps
mov
jbe
ins
rcl
xor
fwait
push
pop
rcl
xor
xchg
ss
mov
mov
cmps
movs
xor
sub
pop
es
rcr
mov
mov
jmp
adc
push
(bad)
aam
xor
xchg
not
dec
push
or
js
xor
jae
cmp
xor
dec
ins
add
outs
call
cmp
xchg
ror
mov
inc
inc
mov
aaa
pop
rcl
xor
scas
xor
fwait
jbe
pop
push
and
xchg
out
nop
leave
popa
push
xor
xchg
jmp
pop
imul
fnstsw
xor
push
inc
fisubr
outs
gs
jns
rcl
nop
imul
mov
sbb
cdq
jno
jb
sbb
inc
or
xor
lahf
push
gs
push
xor
in
sbb
loope
aam
sbb
fwait
push
ins
popa
push
xor
mov
pop
push
outs
pop
pop
dec
aas
push
adc
and
cdq
dec
push
cmp
cmps
cs
mov
aad
pop
dec
xchg
call
mov
(bad)
pop
push
aas
cmps
test
mov
(bad)
cmp
cmps
cs
mov
inc
mov
or
xchg
cmps
cs
not
adc
pop
shl
pop
mov
adc
ficom
xor
push
pop
and
xchg
adc
pop
rcl
pop
push
cmp
pop
rcl
inc
pop
imul
adc
sub
inc
jae
in
push
dec
popa
push
xor
push
(bad)
cmp
sar
pop
and
aad
xor
adc
(bad)
mov
mov
std
mov
xor
rcl
xor
cli
xchg
jne
push
xor
(bad)
rol
imul
in
jo
xor
inc
mov
inc
popa
push
xor
dec
add
xor
pop
push
(bad)
and
xchg
cmp
inc
jmp
adc
cmp
mov
aad
xor
sar
jmp
popa
push
xor
icebp
mov
dec
pop
shr
push
jno
push
xor
shr
push
jns
push
xor
hlt
push
sbb
cli
inc
das
rcl
mov
leave
and
rcr
xor
rcl
rcl
xor
adc
xor
sub
cmps
adc
or
inc
inc
shr
in
rcl
cmps
cs
hlt
xor
js
xor
js
xor
jp
pop
rcl
xor
pop
ror
scas
ss
mov
(bad)
in
int3
rcl
xchg
enter
add
pop
xchg
(bad)
jmp
xor
xchg
retf
jmp
inc
pop
rcl
xor
cmp
inc
pop
shl
lds
sar
sti
xchg
adc
cmps
cs
fstp
adc
ficom
adc
sub
cmp
mov
shr
mov
das
in
mov
jmp
ins
pop
mov
lock
mul
xchg
mov
sbb
fdivr
jne
pop
rcr
jbe
cmp
pop
mov
adc
sub
in
inc
push
cmp
cmc
fcom
pop
adc
sub
out
in
inc
inc
cs
cmps
movs
push
pop
pop
and
fistp
pop
in
inc
movs
cmp
lds
(bad)
xchg
dec
mov
rcl
xor
sbb
pop
loopne
jae
(bad)
fcomi
or
div
out
xor
pop
shl
aam
xchg
jmp
mov
js
cmps
movs
push
int3
sub
cli
addr16
adc
pop
loopne
fsubr
sub
int3
sub
js
cmps
movs
add
sub
cli
jae
rcl
mov
mov
imul
fsub
inc
pop
loopne
fcom
shl
fcomp
jbe
pop
aad
pop
sbb
data16
fisttp
inc
shl
and
lds
add
aam
xchg
rcl
push
movs
sar
pop
push
pop
shl
fwait
pop
inc
retf
cmps
aam
xchg
shl
int3
mov
cdq
jbe
shr
mov
pop
rcr
jecxz
rcl
test
fcmove
sbb
xor
jmp
call
jbe
call
cdq
jbe
cmp
xor
and
ret
in
jae
in
adc
sub
sub
sub
jbe
pop
push
cmp
adc
addps
addr16
out
cmp
stos
in
int3
cmps
imul
ins
add
shl
xor
and
adc
bound
inc
mov
dec
push
xchg
iret
cmps
das
in
push
push
sub
rcr
fwait
pop
xchg
cmps
das
in
int3
pop
movs
cmps
jno
pop
push
cmp
adc
addps
addr16
cmp
cs
adc
fmul
jmp
lds
mov
cmps
cs
or
sub
xchg
retf
cmps
das
in
mov
cmps
es
cmps
das
in
mov
cmps
pop
xchg
iret
cmps
das
in
mov
fst
adc
cmps
adc
cmps
mov
adc
mov
xchg
add
aad
movs
je
dec
push
imul
push
movs
pop
push
retf
rcl
fld
adc
shr
and
pop
rol
mov
call
sbb
adc
add
call
push
cmp
xchg
out
mov
test
xchg
(bad)
mov
add
shl
xor
arpl
xchg
add
aad
movs
jecxz
iret
push
pop
push
iret
rcl
and
rol
fist
lods
sbb
or
les
sub
push
adc
add
call
retf
add
movs
pop
push
retf
rcl
jno
pop
push
cmp
vpshad
shl
jbe
push
sub
iret
rcl
and
rol
jno
pop
in
inc
pop
push
cmp
push
or
sub
rcl
push
cmp
lds
or
xchg
stc
cmp
mov
xchg
adc
push
sbb
data16
arpl
xchg
sub
lods
out
inc
inc
mov
sahf
cs
inc
in
xchg
adc
sub
jp
mov
xchg
out
int3
cmps
pop
push
iret
ror
rcr
rol
sub
int3
or
iret
sbb
in
int3
ficom
jmp
push
dec
ins
add
shl
xor
arpl
xchg
add
lods
mov
sar
fwait
jbe
pop
aad
sub
cli
pop
sub
mov
in
sub
rol
cmps
movs
sbb
mov
adc
loope
sbb
pop
es
mov
lahf
aad
xor
and
add
shl
xor
pusha
jbe
popa
add
ror
nop
sbb
adc
jo
nop
sbb
inc
mov
rcl
cdq
sub
cs
inc
cs
cmp
sub
aam
xchg
out
mov
pop
ror
add
shl
xor
fild
inc
shl
adc
sub
retf
rcl
xchg
adc
pop
mov
adc
aam
loop
xor
repz
cmp
lock
adc
rcl
and
push
or
fist
ud1
sar
xor
lahf
jbe
cmp
mov
sbb
repz
mov
or
cdq
xor
cmps
lds
xor
adc
adc
adc
cdq
fmul
cmp
adc
inc
pop
loopne
jae
ficomp
hlt
(bad)
pop
int3
cmps
cs
add
adc
mov
sar
xchg
rcl
pusha
jbe
cmp
cmp
das
dec
in
xchg
adc
cmps
rcl
inc
pop
push
aaa
dec
in
xchg
adc
clc
test
push
aas
push
push
fidiv
pop
rcr
xchg
rcl
xor
in
mov
inc
jo
nop
sbb
inc
mov
fdivr
cwde
bound
xchg
push
lds
xor
in
int3
pop
rcr
int3
or
addr16
mov
pusha
xor
adc
xor
aam
repz
cmps
cs
(bad)
in
int3
ficom
adc
sub
xchg
push
lds
xor
dec
xor
xchg
shr
pusha
pop
rcr
jbe
pop
push
aaa
or
int3
push
int
jbe
push
outs
(bad)
pop
ficom
mov
sub
adc
pop
push
ja
pop
push
das
dec
in
xchg
adc
cmps
rcl
inc
jne
retf
pop
xchg
jmp
das
in
mov
in
xchg
adc
and
(bad)
xchg
push
and
jo
xchg
rcr
ss
rcl
pop
pop
cmp
inc
pop
ror
and
aad
mov
sub
xchg
rcr
inc
mov
ss
aaa
pop
rcl
sar
outs
cmp
scas
push
fs
in
fs
push
iret
ror
in
rcl
cmps
cs
lock
scas
cli
xchg
adc
xor
rcl
daa
rcl
xor
push
iret
push
adc
ror
cmp
rcl
lahf
mov
cs
int3
or
nop
sbb
inc
mov
pop
rcl
mov
sub
aad
and
adc
rcl
int
movs
sub
xor
das
scas
cli
xchg
adc
sub
xchg
adc
loope
gs
cs
retf
rcl
mov
cs
int3
(bad)
mov
sbb
adc
scas
xor
int3
rcl
dec
ins
add
shl
xor
fisttp
inc
fs
pop
cmp
std
ret
adc
scas
pop
loope
scas
repz
xor
ja
pop
pop
push
cmp
in
and
push
push
xor
rcr
call
movs
rcl
xor
loope
mov
sub
ret
jo
pop
mov
shl
xchg
sbb
ins
movs
sbb
ins
movs
push
mov
sub
lahf
ja
rol
leave
jae
xor
push
(bad)
cmp
sub
aam
xchg
jmp
xchg
adc
mov
in
cmps
fcom
inc
pop
push
ja
pop
push
outs
iret
pop
movs
inc
xchg
or
mov
jno
cmp
mov
push
ja
pop
loopne
mov
sbb
fwait
hlt
mov
sbb
sub
sar
and
xchg
sbb
es
add
fwait
retf
push
pop
push
cmp
in
and
push
push
and
cmps
cs
push
movs
rcl
cmp
movs
sbb
dec
push
xor
cmp
sahf
inc
add
pop
mov
push
pop
pop
mov
adc
ror
pop
rcr
pop
pop
mov
jge
pop
pop
push
cmp
adc
addps
addr16
js
aam
out
or
cmp
(bad)
mov
lahf
jbe
cmp
pop
cs
mov
jge
pop
pop
jmp
xchg
loop
sahf
cs
mov
jg
pop
mov
adc
mov
sar
pop
xor
adc
xchg
mov
cmps
adc
scas
xor
int3
rcl
xchg
lock
fist
xor
adc
xor
mov
jle
pop
pop
xchg
(bad)
cmps
das
in
mov
cmps
cmp
push
adc
xor
or
jmp
adc
mov
arpl
pop
cmp
pop
rcr
int3
ror
adc
rcl
in
xchg
push
(bad)
int3
cmps
cs
(bad)
adc
mov
pop
shl
loope
push
xor
icebp
mov
cmps
pop
sar
cmps
xor
adc
iret
push
adc
ror
in
rcl
cmps
cs
lock
into
int3
cmps
cs
pop
cmp
push
xor
push
repnz
cmps
cs
mov
pop
rcl
xor
xchg
out
cmp
rcl
mov
jns
xor
xchg
repz
das
in
arpl
dec
mov
pop
sbb
repz
push
adc
pop
sar
stc
nop
adc
in
adc
int
cmp
retf
xchg
not
aad
shr
cmps
cs
mov
cs
int3
cli
test
sbb
outs
in
int
xor
fs
adc
xor
push
scas
lea
push
popf
xor
xchg
mov
xchg
scas
pop
rcl
pop
pop
mov
lahf
mov
cs
int3
or
mov
cmps
cs
not
aad
shr
cmps
cs
lock
adc
push
xchg
xchg
cmps
das
in
push
cmps
adc
push
push
sub
pop
rcr
int
xchg
inc
mov
cmps
cmp
mov
adc
mov
cmps
cs
pop
xor
int3
pop
push
das
pop
in
xchg
adc
push
push
shl
pop
rcl
xor
sar
mov
jno
xor
push
(bad)
aas
fs
xor
xor
rcr
rcr
int3
push
cmp
lds
in
in
int3
pop
shl
sahf
push
mov
xor
js
xor
bnd
mov
cli
fld
das
int3
cmps
rcl
inc
jle
adc
xor
aam
out
int3
cmps
cs
fist
adc
adc
sub
cs
int3
pop
rcl
xor
sar
mov
jno
xor
push
(bad)
aas
fs
xor
xor
rcr
rcr
int3
push
cmp
not
in
int3
pop
shl
sahf
push
mov
xor
js
xor
jno
mov
cli
push
lods
cs
mov
(bad)
int3
cmps
rcl
inc
jle
adc
xor
aam
out
int3
cmps
cs
fistp
and
int3
ficom
adc
sub
cs
int3
pop
rcl
xor
or
rcl
push
mov
cmps
cs
lock
jp
mov
jno
xor
push
(bad)
aas
fs
xor
sbb
fdivr
int
rcl
xor
adc
xor
xor
jecxz
cmps
cs
not
in
int3
pop
shl
sahf
push
mov
xor
js
xor
inc
xchg
sbb
cli
jmp
(bad)
int3
cmps
rcl
inc
sbb
xor
aam
out
int3
cmps
cs
fcomi
and
push
push
cmps
adc
sub
js
xor
scas
into
cmps
das
in
fs
out
cmps
push
(bad)
aas
fs
xor
sbb
fdivr
int
rcl
xor
loope
push
rcl
mov
jns
int
shl
lahf
aam
xchg
rcl
mov
cmps
cmp
push
rcl
sub
xor
inc
xchg
sbb
mov
in
xchg
adc
call
xor
push
loope
pop
rcl
mov
cmps
sbb
int3
push
lea
cmp
es
xor
xchg
mov
push
retf
cs
mov
rcl
mov
pop
ficom
mov
add
xchg
shl
adc
fidiv
cmps
adc
cmps
rcr
xor
adc
dec
pop
shl
dec
in
int
(bad)
adc
fdiv
int
rcl
xor
xchg
mov
aam
mov
cmps
cs
mov
cmps
sbb
mov
cmps
pop
sar
cmps
cmp
fadd
int
sbb
mov
push
push
sub
pop
rcr
int3
or
out
das
in
arpl
jmp
adc
rcl
mov
pop
ficom
mov
cmps
sbb
int3
push
jmp
sar
sbb
xor
loope
push
adc
jbe
xchg
(bad)
push
into
int3
cmps
cs
mov
rcl
xor
cs
int3
rcl
xchg
dec
movs
rcr
xor
push
test
cs
mov
cmps
sbb
jmp
or
xor
jbe
pop
rcl
xor
je
int3
cmps
cs
in
sub
int
mov
lahf
mov
cs
int3
or
and
rcl
fbld
rcl
xor
adc
mov
adc
fsub
fidiv
shr
xchg
push
out
int3
cmps
cs
pop
cmp
push
xor
push
out
int3
cmps
cs
(bad)
adc
ficom
retf
mov
mov
cs
int3
pop
rcr
int3
rcl
cmps
cs
mov
cs
int3
or
cmps
das
in
mov
rcr
pop
and
int
push
(bad)
and
ss
aaa
pop
rcl
sar
scas
(bad)
out
in
fs
push
iret
push
adc
xor
je
int3
cmps
adc
pop
pop
xchg
xchg
cmps
das
in
arpl
push
repz
pop
xchg
scas
cmps
das
in
arpl
jmp
adc
pop
pop
push
iret
push
adc
xor
and
rcr
int3
or
xchg
cmps
das
in
arpl
jmp
push
iret
push
adc
xor
je
int3
cmps
cs
mov
sar
iret
xor
adc
or
jmp
adc
mov
adc
cmps
pop
xchg
dec
cmps
das
in
mov
cmps
sbb
mov
pop
shl
xchg
aam
(bad)
int3
cmps
cs
fisttp
cmc
mov
adc
stos
je
mov
cs
int3
push
pop
sub
jbe
imul
rcl
cmps
cs
lock
xor
xchg
xchg
(bad)
in
int3
pop
pop
xchg
mov
das
in
arpl
mov
xchg
mov
das
in
arpl
jmp
adc
pop
pop
push
iret
push
adc
xor
ins
xchg
int3
cmps
adc
pop
xchg
push
cmps
das
in
arpl
shr
xchg
push
xchg
int3
cmps
cs
mov
rcl
mov
pop
ficom
push
fisubr
cmps
sbb
sbb
xor
scas
pop
cmps
das
in
xor
shl
pop
rcr
int3
or
cmps
pop
cmps
das
in
(bad)
and
int3
ficom
fwait
mov
cs
int3
fcom
mov
pop
rcl
int3
pop
ficom
hlt
fsub
in
int
rcl
xor
push
int3
in
jns
int
pop
xchg
into
cmps
das
in
arpl
mov
jno
pop
xchg
into
cmps
das
in
arpl
push
(bad)
daa
aam
out
int3
cmps
cs
sti
cmps
xchg
xchg
addps
addr16
jmp
int3
adc
cmps
fs
int3
movs
cs
mov
cs
int3
or
retf
cmps
das
in
mov
cmps
cs
fcmovnb
mov
push
pop
pop
pop
xchg
into
cmps
das
in
arpl
mov
jno
pop
xchg
into
cmps
das
in
arpl
push
(bad)
and
and
pop
rcl
int3
pop
movs
adc
cmps
sbb
mov
cmps
pop
ror
fdivr
int
pop
xchg
xchg
cmps
das
in
or
jns
int
ficom
mov
cmps
sbb
int
sbb
int
pop
xchg
xlat
cmps
das
in
or
cmp
nop
frstor
and
int
shl
lahf
push
out
int3
cmps
adc
scas
xor
int3
rcl
cdq
mov
cs
int3
or
int3
psubusw
int3
pop
movs
push
mov
cmps
sbb
int
shl
rcl
cmps
cs
mov
rcl
cmps
cs
mov
rcl
cmps
cs
mov
ror
and
rcl
cdq
mov
cs
int3
or
int3
psubusw
adc
cs
ins
pop
mov
lock
neg
mov
jp
dec
xchg
adc
rcl
xor
jbe
jl
adc
pop
push
(bad)
daa
or
aad
mov
push
jg
neg
out
xor
adc
pop
sar
pop
rcl
fist
adc
ficom
in
int3
(bad)
xchg
xchg
rcl
inc
xchg
and
sbb
in
int3
cmps
cs
sbb
rcl
mov
cmp
aad
test
jb
pop
pop
outs
out
shr
and
shl
iret
cmps
cs
int3
push
vphaddubd
xor
fcomi
pop
rol
mov
mov
data16
in
rcl
xchg
sar
xor
jp
jl
adc
mov
adc
rcl
inc
fstp
sbb
data16
fisttp
inc
mov
outs
jno
test
cs
inc
in
xchg
adc
leave
xchg
adc
shl
adc
rcl
xchg
push
inc
dec
push
xor
aaa
or
nop
adc
(bad)
sbb
pop
cmp
adc
pop
push
pop
ja
nop
adc
pop
rcl
mov
sti
xchg
mov
fisub
push
adc
xor
xor
popf
inc
pop
rcl
int3
jge
add
dec
push
xor
cmp
pop
shr
ss
adc
repz
aaa
sbb
retf
pop
aam
lods
sbb
sti
or
rcl
mov
leave
lea
xchg
in
popa
ficom
lds
jb
shl
clc
cmp
pop
or
nop
adc
pop
cs
or
nop
adc
sbb
fwait
cmc
mov
adc
pop
cs
or
nop
adc
mov
aam
xchg
shl
ss
dec
push
xor
adc
xor
xchg
lds
fmul
lods
sbb
add
sti
rol
cmps
cs
inc
dec
push
xor
adc
xor
xchg
lds
rcl
(bad)
or
cs
int3
scas
aam
lods
sbb
sbb
loopne
fidivr
pop
jae
pop
rcl
xor
push
stos
sbb
mov
stc
nop
adc
mov
aam
lods
sbb
adc
loopne
(bad)
rcl
xor
and
ret
rcl
xchg
ds
dec
push
xor
pop
ffreep
nop
adc
pop
rcl
(bad)
das
in
int3
scas
aam
lods
sbb
adc
loopne
fcmovbe
rcl
xor
aas
sbb
rcl
xor
pop
ja
nop
adc
pop
rcl
fcmovbe
das
in
int3
cmps
aam
xchg
shr
ss
dec
push
xor
and
ret
rcl
xchg
ds
dec
push
xor
cmp
xor
mov
les
lea
imul
rcl
sub
nop
adc
xor
xor
(bad)
scas
sbb
xchg
repz
rcl
or
nop
adc
xchg
rcl
xor
xchg
mov
rcl
cmp
xchg
adc
out
adc
clc
cmp
pop
or
nop
adc
not
adc
cmps
aam
xchg
rcl
xor
mov
pop
rcr
cmc
fcmovbe
sub
rcl
xor
sti
std
pop
rcl
mov
leave
lea
icebp
xchg
cmc
adc
adc
rcr
push
mov
sbb
sbb
jno
fcom
dec
or
(bad)
in
pop
fadd
jno
in
xchg
xor
outs
jb
push
adc
pop
scas
sub
jge
rol
inc
dec
push
xor
cmp
jno
cmp
xor
sub
aam
lods
sbb
fwait
ret
push
fmul
lods
sbb
push
fcom
fimul
rcl
xor
daa
mov
ss
aam
lods
sbb
push
cmp
adc
fidiv
shl
mov
lahf
fisub
jl
adc
pop
pop
push
enter
inc
clc
xchg
adc
mov
in
shl
pop
rcr
xor
lods
jmp
ss
inc
push
xor
aas
or
test
das
mov
rcl
inc
push
jo
stos
sbb
adc
push
inc
push
xor
in
push
stos
sbb
adc
push
outs
enter
mov
sub
adc
xchg
adc
mov
xchg
dec
mov
fmul
lods
sbb
xchg
mov
lahf
pop
fidiv
shl
cmp
aam
scas
sbb
xchg
rcr
push
leave
fldcw
dec
mov
aam
mov
test
push
aaa
aas
leave
xchg
adc
mov
fwait
sti
sbb
aas
leave
xchg
adc
popa
dec
push
xor
shl
or
jae
mov
xor
pop
push
aaa
aas
leave
xchg
adc
mov
fwait
sti
sbb
aas
leave
xchg
adc
icebp
jb
xor
shl
or
jae
mov
cmps
jno
pop
ficomp
xor
repz
fwait
(bad)
or
data16
dec
imul
aad
xchg
out
mov
in
xchg
adc
imul
cmps
dec
xor
aad
dec
imul
cmp
outs
stc
xchg
adc
imul
cmp
pop
shl
mov
ficom
xor
pop
aam
imul
cmp
pop
shl
pop
adc
xor
cmp
pop
shl
pop
pop
imul
cmp
ins
pop
shl
ins
pop
sbb
data16
fild
add
and
daa
pop
retf
pop
ror
pop
movs
cmps
jno
mov
lahf
jbe
sub
xor
rcl
mov
call
fwait
rcl
xor
xchg
fcomp
in
adc
fidiv
xor
rcl
jmp
or
xor
rcl
hlt
sbb
adc
pop
shr
les
adc
xor
xchg
repnz
pop
movs
cmps
jno
push
push
sbb
xor
mov
icebp
mov
sahf
xchg
cmps
xor
adc
and
lahf
inc
mov
xor
loope
aam
cli
arpl
rcl
xor
or
pop
mov
loopne
mov
or
inc
pop
pop
mov
adc
sub
cli
scas
cmp
adc
sub
lahf
jbe
cmp
pop
cs
inc
in
xchg
adc
cs
xor
js
xor
js
cmps
movs
neg
and
push
xor
icebp
mov
cmps
movs
neg
mov
adc
cmps
aam
xchg
rcr
inc
jmp
cs
mov
xor
mov
pop
ror
add
shl
xor
fistp
push
iret
jl
push
jl
xchg
out
mov
mov
xchg
into
mov
push
pop
push
ret
rcr
push
lods
shl
loope
test
mov
xor
js
aam
jmp
movs
jmp
mov
in
imul
fcomp
jg
dec
xchg
adc
nop
adc
mov
mov
sub
sub
retf
rcl
in
ss
movs
sbb
cs
and
nop
adc
scas
ss
jbe
pop
aad
nop
adc
mov
xchg
sub
cdq
outs
push
cs
inc
in
xchg
adc
cmps
fisub
pop
shl
push
addr16
add
in
in
xor
sbb
push
add
in
in
xor
addr16
push
addr16
add
in
in
xor
and
push
add
in
in
xor
sbb
xor
xchg
add
dec
out
call
fisub
pop
mov
jno
fisub
fadd
xor
call
and
rcl
adc
shr
xchg
fstp
movs
daa
dec
call
call
test
sub
sub
fwait
retf
fidivr
push
cmp
aad
push
mov
adc
sub
sbb
repz
pop
push
xor
xor
cmp
pop
rcr
loope
pop
push
mov
xor
cmp
mov
cmps
pop
inc
and
test
ss
sub
xor
xchg
fistp
push
(bad)
rcl
xor
test
mov
pop
sar
adc
push
int3
xor
push
mov
aam
(bad)
sbb
adc
push
push
int3
pop
cmp
ss
in
sub
sub
fwait
retf
adc
xor
mov
in
adc
sub
fwait
retf
fidivr
adc
ins
pop
jmp
xlat
cs
sub
rcl
inc
push
pop
jmp
cmc
addr16
dec
pop
inc
or
aaa
ficom
adc
xor
xchg
packuswb
addr16
shr
pop
mov
xlat
adc
pop
jmp
shl
shr
xchg
fistp
cs
mov
addr16
xor
pop
movs
adc
xor
xchg
sti
cmps
pop
inc
and
test
ss
sub
xor
xchg
jmp
aam
retf
fidivr
push
mov
pop
rcl
xor
cs
mov
shl
shr
xchg
fistp
cs
mov
in
adc
sub
fwait
retf
fidivr
push
cmp
aad
pcmpgtb
adc
sub
rcl
inc
inc
cmp
dec
pop
inc
and
mov
aad
aaa
dec
rcl
xor
xchg
int3
pop
aad
xor
movs
into
cmps
cs
ins
add
shl
xor
fist
inc
cmps
aam
xchg
rcr
add
out
adc
xchg
xchg
int3
mov
adc
das
and
xor
ret
push
mov
pop
rcl
or
rcl
xor
pop
sbb
pop
movs
cmps
jno
fisub
shr
pop
adc
xchg
adc
sbb
add
xchg
rcr
fistp
adc
in
sti
xor
adc
mov
xor
xchg
out
mov
pop
cs
iret
clc
aad
jae
call
stc
adc
aad
mov
inc
rcr
mov
mov
xor
and
cdq
lods
pop
add
inc
aad
jae
push
jmp
sti
cmps
pop
loopne
cmp
mov
mov
aaa
rcl
mov
or
fwait
and
rcl
mov
mov
aaa
rcl
aaa
rcl
xor
inc
cmp
test
repnz
mov
iret
cmps
cs
not
dec
push
mov
sar
inc
rcl
pusha
jbe
in
cmc
fdiv
int
cmps
sar
mov
rcl
push
pop
rcl
mov
(bad)
aam
mov
pop
xchg
shl
xchg
rcl
int3
cmps
shl
push
addr16
shl
jb
sbb
adc
push
scas
rol
ret
fsub
std
int3
cmps
push
cs
xor
adc
pop
fisub
rol
cmps
cs
push
pop
push
ds
ins
push
xor
cmp
cmps
icebp
paddsw
rcl
xchg
nop
adc
inc
loope
cmps
cs
inc
pop
push
xchg
xor
adc
xor
inc
mov
cmps
cs
pop
dec
or
cmps
std
paddsw
rcl
pop
adc
xchg
adc
cmps
rcr
int3
cmps
mov
pop
in
loop
adc
push
push
pop
int3
cmps
cs
stos
ds
int3
pop
fisub
cwde
xor
mov
les
mov
fisttp
xor
movs
cmps
stos
ds
int3
cwde
xor
mov
sbb
fwait
cmps
lea
in
int3
cmps
aam
xchg
rcl
int3
pop
ficom
(bad)
in
int3
rcl
cmps
cs
ss
inc
(bad)
in
cmps
cs
loopne
cmp
mov
rcl
jae
pop
xchg
(bad)
mov
in
add
rcl
or
mov
cmc
fisub
adc
mov
sub
int3
cmps
xchg
xchg
lock
rcl
bound
cmps
cs
push
xchg
in
cmps
cs
fild
mov
xor
rcl
int3
pop
cmp
int3
cmps
rcl
int3
in
cmp
cmps
jmp
cs
fist
in
int3
ficom
sbb
sub
paddsw
pop
pop
(bad)
mov
cs
fcomp
loopne
mov
cwde
xor
xor
hlt
aaa
bound
retf
mov
in
inc
push
xchg
xchg
int3
pop
aad
xor
or
int3
cmps
rcl
xor
ficomp
xor
xchg
mov
cs
fcom
push
shl
dec
rcl
mov
shl
xor
movs
int3
sub
cli
cmp
push
(bad)
fsub
rcr
int3
je
in
xor
xchg
fbstp
mov
int3
cmps
cs
inc
in
xchg
adc
in
or
int3
cmps
cmp
fs
sar
jae
rcl
cmp
inc
loope
cmps
cs
pop
pop
push
es
push
xor
inc
out
cmps
cs
xchg
lods
ds
int3
pop
pop
xchg
mov
in
repnz
cmp
repnz
pop
push
and
pop
pop
fild
and
lock
or
ficomp
repz
out
xor
push
out
cmps
cs
mov
aad
xor
in
ss
ins
icebp
in
cmps
adc
mov
cli
fwait
psrlw
mov
cmps
pop
shl
dec
aam
xor
fwait
cmps
lds
in
int3
ficom
push
pop
pop
xchg
stos
xchg
in
mov
cmps
pop
xchg
fwait
int
xor
push
xchg
cmps
cs
mov
paddsw
rol
cmps
adc
rcl
cmps
cs
mov
push
in
int3
rcl
cmps
cs
mov
push
in
int3
xor
lahf
mov
push
in
int3
or
cmps
out
xchg
in
fstp
xchg
xor
push
(bad)
in
cmps
sub
sub
cdq
mov
push
in
int3
rcl
cmps
adc
fldcw
cmps
adc
mov
js
rol
cmps
cs
push
sbb
cwde
cmp
popa
xor
adc
pop
xchg
ret
inc
in
xchg
adc
inc
loope
cmps
cs
pop
pop
lahf
out
xchg
in
sbb
add
push
imul
mov
in
repnz
icebp
xor
xchg
mov
in
pop
pop
rcl
or
das
gs
rcr
int3
push
adc
xor
lods
sbb
push
push
sub
pop
rcr
int3
push
adc
adc
sub
rcr
xor
pop
xchg
(bad)
mov
in
mov
pop
rcl
xor
xchg
xlat
xchg
in
cmc
fdiv
int3
cmps
rcl
int3
pop
pop
cmps
xlat
xchg
in
mov
pop
movs
cmp
fldl2t
adc
pop
loop
mov
xchg
or
push
mov
fldl2t
adc
pop
loop
mov
xchg
or
sbb
sbb
ss
xchg
in
repnz
jne
int3
cmps
push
xchg
nop
xchg
in
xor
adc
mov
adc
sub
cdq
aaa
ins
rcl
xor
cli
int3
aam
and
rcl
cmps
cs
mov
es
cmp
push
out
cmps
cs
jo
cwde
and
rcl
xor
sti
mov
jb
int3
cmps
rcr
int3
cmps
adc
xor
ins
pop
xchg
sub
cmc
pop
rcl
xor
addr16
in
das
xor
adc
sub
xchg
pcmpgtb
adc
pop
shl
fldln2
das
aaa
pop
rcl
xor
xchg
pcmpgtb
adc
pop
shl
push
cmp
cmp
push
mov
cmps
cs
es
dec
push
shl
push
addr16
shl
into
in
cmps
cs
xchg
cmps
jmp
cmps
push
(bad)
aas
fldcw
cmps
adc
push
mov
mov
in
xor
inc
out
cmps
cs
pop
pop
retf
repnz
rcl
pop
rcr
rcl
fild
shr
lods
ds
int3
fsubr
cmps
adc
pop
shl
cmps
aam
xchg
sar
sbb
fsub
std
int3
cmps
rcr
int3
cmps
mov
pop
in
loop
adc
push
push
cmp
ins
add
shl
xor
fbld
inc
ror
add
ret
jbe
pop
pop
push
int3
pop
pop
outs
aam
in
mov
shr
sar
push
retf
rcl
push
xchg
pop
push
not
xchg
jmp
ins
push
xor
ficom
xor
mov
and
lahf
push
int
push
xor
(bad)
adc
pop
and
or
xchg
or
movs
sbb
xor
xchg
jmp
sub
jbe
sar
and
or
sub
ss
mov
xchg
jbe
rcl
xlat
lahf
xchg
out
xor
pop
adc
test
or
pop
adc
pop
push
push
retf
fist
in
xor
push
xor
xor
jo
out
xchg
adc
cdq
rcl
xor
sub
pop
push
push
int3
pop
fisub
mov
movs
sbb
fisubr
push
dec
pop
push
push
int3
pop
fisub
cdq
movs
push
mov
(bad)
xchg
retf
pop
movs
push
mov
adc
jo
fwait
mov
hlt
shl
pop
shr
mov
rcl
inc
pop
push
push
int3
pop
fisub
pop
movs
sbb
sbb
sub
push
push
int3
pop
push
push
into
pop
push
outs
into
push
ficom
cmc
sbb
adc
dec
pop
adc
test
or
push
push
int3
pop
cmp
mov
sub
adc
retf
repz
adc
push
adc
adc
sub
xchg
jbe
rcr
ins
add
shl
xor
gs
pop
addr16
popa
add
pop
push
stc
ja
rcl
pop
cmps
rcl
xor
mov
adc
shl
xchg
sti
cmps
xchg
xchg
addps
addr16
stc
cmp
sub
aam
outs
rcl
fcomp
xchg
int3
pop
scas
(bad)
mov
call
mov
pop
sar
adc
rcl
gs
outs
stos
pop
inc
clc
fwait
retf
scas
ss
mov
push
in
int3
rcl
cmp
rcl
lahf
inc
push
xchg
inc
push
pop
xchg
xor
mov
cs
arpl
push
(bad)
and
sub
retf
rcl
and
push
(bad)
fcomi
or
mul
or
push
rcl
pop
pop
mov
js
mov
inc
xor
dec
lock
div
push
outs
mov
les
sar
pop
rcl
pop
pop
mov
adc
pop
push
in
inc
push
cmp
popa
pop
rcr
inc
inc
push
outs
aas
pop
movs
adc
sbb
xchg
adc
jmp
push
and
mov
js
(bad)
pop
bound
lock
add
xchg
cli
test
sub
adc
xor
xchg
dec
push
shl
rcl
xor
sbb
in
inc
lods
sub
movs
xchg
sti
or
adc
cmp
pop
pop
push
iret
mov
fwait
retf
jo
fwait
hlt
push
vpshad
fs
cmp
jae
jmp
mov
js
xor
js
xor
adc
cdq
cmp
xor
aam
sahf
cwde
sbb
pop
push
in
int3
sub
and
mov
js
xor
js
(bad)
xchg
bound
cdq
jbe
pop
shl
rcl
inc
mov
pop
inc
iret
or
cli
dec
rcl
pop
pop
pop
push
iret
or
push
xor
cmp
les
cmp
pop
shr
ins
pop
mov
lock
div
out
pop
xchg
dec
imul
aam
xchg
jmp
rcl
xor
aad
xor
sar
pop
rcl
int3
sub
cli
ror
rcl
mov
mov
push
xchg
int
movs
push
add
mov
cli
xlat
or
adc
pop
push
iret
or
and
gs
inc
xor
jmp
pop
pop
xor
shl
(bad)
fcomi
or
mul
xchg
sub
aad
movs
cmp
sbb
iret
(bad)
not
xor
fwait
in
mov
sbb
lock
jmp
sub
jp
mov
adc
fsub
pop
bound
push
xor
push
(bad)
and
stc
and
push
sub
sbb
cli
addr16
adc
add
outs
fld
stc
cmp
in
sub
sub
aam
call
and
outs
ret
ud1
rcr
sar
pop
or
adc
movs
pop
shl
fwait
pop
inc
iret
push
vpshad
ror
jbe
add
iret
popf
not
xor
jmp
pop
ror
cmps
cmp
cmp
aad
arpl
in
jno
cmp
popa
pop
rcl
les
cmp
mov
adc
add
iret
rcl
adc
rol
lock
div
push
push
jl
out
jmp
or
rcr
xchg
push
mov
xchg
push
mov
xchg
push
mov
pop
daa
test
xchg
adc
stos
je
scas
cmp
adc
mov
adc
xor
inc
rcr
jae
pop
push
int3
mov
stos
fnstsw
rcl
les
adc
test
iret
adc
push
outs
int3
pop
movs
push
mov
cmp
xor
jg
pop
push
outs
int3
pop
movs
fnstcw
sbb
call
aaa
sbb
pop
fisub
pop
and
fcmovnu
lods
in
xor
xchg
pop
cmps
rcl
in
or
rcl
xchg
retf
pop
push
aas
push
data16
dec
clc
ret
mov
movs
mov
icebp
pop
xchg
idiv
call
jbe
fisub
mov
mov
push
xor
out
adc
fisub
icebp
pop
xchg
idiv
sbb
cdq
push
fisub
xor
adc
adc
dec
push
leave
inc
and
inc
test
mov
add
xchg
repz
inc
and
inc
and
leave
inc
and
inc
push
mov
sbb
mov
leave
inc
and
inc
addr16
loope
mov
jecxz
xchg
adc
sbb
repz
inc
and
inc
and
leave
inc
and
inc
sub
leave
inc
and
inc
jae
leave
inc
and
rcl
inc
and
rcl
imul
and
rol
xor
pop
or
adc
and
inc
add
inc
and
inc
or
inc
and
inc
xor
push
sub
leave
inc
add
and
inc
adc
into
cmps
rol
jae
push
pushf
jae
test
mov
jno
xchg
sbb
sbb
jb
leave
inc
and
inc
js
leave
inc
and
inc
xchg
retf
pop
inc
and
inc
test
mov
leave
inc
cmp
leave
inc
and
inc
inc
mov
rcr
and
inc
and
inc
dec
mov
out
or
add
inc
and
inc
lock
and
inc
xchg
retf
pop
inc
and
inc
test
mov
leave
inc
cmp
leave
inc
and
inc
inc
mov
rcr
and
inc
and
inc
dec
mov
out
sbb
sbb
add
inc
and
inc
lock
and
inc
jne
(bad)
shr
call
sub
xchg
add
cdq
jbe
mov
jbe
push
push
iret
mov
sub
rcl
mov
aas
push
push
ret
pop
sar
call
adc
in
cmps
mov
mov
sub
inc
pop
pop
push
leave
pop
cmp
fisttp
sahf
adc
rcl
xor
(bad)
adc
pop
fisub
mov
retf
cdq
jbe
dec
in
rcl
call
shl
push
movs
pop
push
fcmovnbe
xchg
out
mov
sub
cs
rcr
out
rcr
rol
sbb
rcr
adc
pop
retf
xchg
sbb
jle
clc
fdivr
call
fnstcw
pop
rcl
mov
neg
push
enter
xor
fisub
mov
pop
xor
adc
sbb
inc
mov
mov
pop
xor
(bad)
pop
ficom
adc
sub
and
pop
shl
and
or
cs
ins
pop
mov
lock
div
push
push
and
out
sti
adc
mov
pop
xor
pop
xor
inc
mov
xchg
adc
ds
sub
push
adc
mul
xchg
adc
sub
and
mov
adc
pop
pop
push
ror
cmp
int3
cmps
push
(bad)
cmp
pop
sbb
push
push
cmp
pop
rcr
aam
pop
push
push
cmc
ins
push
xor
das
fwait
in
adc
mov
sbb
aam
cs
icebp
ins
push
xor
adc
popf
ins
push
xor
cmp
jle
sar
xor
fwait
ret
pop
aam
mov
rcl
jbe
cmp
mov
leave
mov
in
adc
fcom
jp
pop
rcr
mov
pop
loopne
mov
sub
push
xor
fimul
movs
mov
push
xor
xchg
jmp
shl
rcl
xchg
into
mov
sbb
cdq
test
push
aad
out
xchg
adc
pop
or
retf
sub
cli
pop
adc
adc
adc
adc
cmps
pop
sar
add
ror
lds
pop
push
stc
sub
sbb
(bad)
adc
shr
icebp
push
data16
rcr
shr
into
mov
sar
xor
jno
pop
loop
pop
adc
rcl
fnsave
mov
fdivr
test
rcr
mov
pop
loopne
mov
and
push
xor
fimul
lods
mov
push
xor
xchg
loop
dec
pop
loop
sbb
cdq
test
push
aad
out
xchg
adc
pop
or
ret
sub
fwait
les
(bad)
mov
rcr
rcl
lds
mov
pop
pop
push
or
adc
popf
ins
push
xor
inc
fmul
xor
pop
out
in
adc
jge
adc
fldcw
pop
mov
sbb
mov
in
adc
jl
int3
cmps
push
(bad)
cmp
sar
xor
js
xor
jp
pop
rcl
sub
cli
cmp
rcl
mov
and
adc
xor
lahf
jbe
sub
inc
mov
shr
inc
mov
rol
cdq
adc
push
imul
rcl
xchg
(bad)
mov
nop
adc
mov
rcl
pusha
jbe
popa
mov
test
xor
sub
int3
rcl
xchg
ss
rcl
xor
int3
in
in
sbb
fwait
ret
push
outs
pop
xor
sar
inc
mov
mov
clc
fdivr
ficom
push
mov
cmps
cs
cmc
sbb
adc
ja
cmp
sbb
loopne
mov
(bad)
rcl
in
cwde
sub
stc
rol
dec
mov
rol
int3
cmps
cs
mov
adc
das
sbb
mov
cs
int3
pop
cmp
pop
rcr
inc
push
pop
xchg
cmps
cs
add
and
pop
pop
xchg
int3
cmps
cs
arpl
inc
mov
pop
mov
lahf
mov
sub
int3
or
daa
js
sar
xor
js
xor
js
xor
adc
sbb
movs
cs
arpl
pop
xchg
(bad)
movs
cs
int3
sub
stos
mov
mov
pop
xor
adc
cmps
cmp
mov
fs
cmps
cs
add
rcl
mov
lahf
cmps
(bad)
movs
cs
fistp
aam
xchg
rol
test
push
xor
push
in
int
cs
(bad)
fwait
adc
aam
jmp
pop
test
push
xor
push
in
int
cs
pop
pop
rcl
mov
adc
pop
imul
into
cmps
cs
cmc
cmps
aam
xchg
sar
xchg
push
xor
push
in
int
cs
pop
pop
rcl
mov
repnz
pop
cmp
xchg
adc
push
push
xor
rcl
xor
cmp
pop
rcl
ins
and
mov
lock
div
push
pop
addr16
out
imul
pop
aad
pop
movs
cmps
jno
pop
jmp
push
xchg
push
movs
rcr
jbe
cmp
pop
mov
adc
sub
in
inc
push
cmp
jp
rcr
jae
in
adc
sub
fwait
jbe
cs
btc
pop
pop
and
(bad)
adc
fdivr
sub
inc
movs
cmp
jnp
ror
add
shl
xor
mov
cli
jo
fdivr
add
shr
inc
dec
cmp
je
sar
or
addr16
cmps
movs
add
sub
in
inc
push
cmp
xor
xchg
test
mul
outs
cmc
punpckhdq
fwait
retf
scas
ss
jbe
pop
aad
pop
mov
inc
int3
sub
in
inc
push
cmp
xor
(bad)
sub
sbb
data16
arpl
outs
stos
fs
fwait
retf
push
xchg
jmp
sar
pop
rcl
pop
pop
mov
addr16
cmps
movs
sbb
add
data16
push
movs
or
sub
in
inc
inc
mov
in
inc
movs
cmp
pop
rcr
repz
cmp
jnp
shl
repz
fwait
retf
jo
fwait
hlt
cmps
movs
out
(bad)
adc
push
adc
mov
xchg
sub
pop
push
sub
push
cli
jg
in
pop
rcl
cmc
pop
rcr
hlt
aam
out
arpl
enter
mov
in
inc
push
cmp
je
rcr
repz
out
lahf
jbe
add
shr
movs
cmp
je
rcr
repz
cmp
je
shl
repz
in
inc
movs
cmp
test
stc
aas
loope
add
mov
push
(bad)
fcomi
or
mul
xchg
push
push
push
pop
rcl
xor
xor
pop
xchg
adc
or
mov
pop
rcr
add
add
xor
jmp
xchg
js
xor
adc
pop
mov
adc
push
push
xor
jb
out
rcl
xor
addr16
push
in
out
sar
jnp
rcl
mov
fsub
cmc
sub
dec
ins
nop
adc
mov
cwde
pop
push
pop
pop
pop
pop
push
xchg
shl
xor
pusha
jbe
dec
aas
sahf
xchg
out
outs
sbb
mov
jo
fwait
movs
pop
int
ins
push
cs
mov
and
jmp
and
xor
(bad)
aas
shr
cmp
rol
mov
mov
xchg
jbe
add
xchg
packuswb
not
data16
in
sub
sub
fwait
retf
adc
xor
sbb
aam
pop
push
push
iret
fdiv
adc
ror
push
fsubr
loop
add
push
iret
(bad)
data16
adc
or
and
xor
push
iret
rcl
cmp
rol
fcomp
shr
fcomi
or
div
push
pop
dec
cmp
pop
adc
sub
add
inc
fisttp
xchg
adc
rcl
mov
fld
sbb
xchg
jo
rcr
fmul
movs
aaa
push
loop
push
adc
push
addr16
add
and
pop
loop
or
pusha
(bad)
fdivr
push
sahf
xchg
in
xor
pop
cmp
lods
in
cmp
in
sub
pop
ror
mov
mov
mov
pop
shr
les
test
mov
push
pop
outs
(bad)
push
mov
inc
(bad)
xchg
adc
ficom
in
cmp
xchg
in
or
pusha
pushf
rcl
lock
test
pop
add
push
iret
arpl
hlt
aaa
fidiv
cmps
adc
cmps
rcr
int3
or
addr16
mov
loop
cmps
push
(bad)
cmp
adc
cmc
push
or
push
rcl
mov
sub
int
shl
or
mov
repz
sbb
pop
cs
mov
push
xor
xchg
jmp
sub
mov
adc
scas
je
int3
cmps
cs
mov
cs
int3
shr
movs
cs
sub
xchg
cmps
sub
mov
pop
rol
sbb
inc
jno
rcr
int3
fcom
cdq
inc
pop
shr
inc
push
mov
cli
mov
rcl
mov
lahf
pop
push
cmp
push
ret
cs
repnz
in
jae
in
adc
sub
fwait
hlt
xor
cdq
cmps
mov
out
int3
pop
sub
ss
int3
ficom
push
xor
xchg
adc
ficom
push
xor
cs
imul
mov
fsqrt
or
adc
shl
mov
aam
and
and
jno
cmps
iret
cmps
das
in
fisttp
xchg
adc
ficom
loop
lahf
cmp
jbe
shr
stos
scas
sub
(bad)
mov
xor
in
or
iret
cmps
das
in
fs
int
pop
xchg
retf
sbb
sar
sbb
rcl
xor
es
mov
and
jno
cmps
iret
cmps
das
in
fld
adc
push
xor
cs
xlat
sbb
fsqrt
xchg
sbb
rcl
xor
es
mov
and
jno
cmps
iret
cmps
das
in
(bad)
xchg
adc
ficom
adc
loopne
adc
pop
dec
in
fisubr
pop
dec
jp
jnp
pop
shr
stos
scas
sub
in
in
int
xchg
xchg
push
xor
(bad)
and
push
push
xor
push
out
int3
cmps
cs
pop
js
push
xor
cmp
pop
rcl
test
adc
jp
adc
loopne
adc
pop
dec
in
fisubr
pop
dec
dec
mov
in
xchg
xchg
push
xor
(bad)
cmp
fcmovne
jno
cmps
iret
cmps
das
in
(bad)
adc
ficom
adc
loopne
adc
pop
dec
in
fisubr
pop
dec
dec
mov
in
xchg
fist
pop
push
(bad)
cmp
ror
jno
cmps
iret
cmps
das
in
fld
adc
adc
loopne
adc
pop
dec
in
fisubr
pop
dec
jp
mov
pop
shr
stos
scas
sub
in
in
int
xchg
xchg
push
xor
(bad)
and
movs
jg
pop
es
mov
cmps
pop
aam
ss
adc
loopne
adc
pop
dec
in
or
lahf
mov
cmp
pop
rcr
int3
or
addr16
push
out
int3
cmps
cs
pop
mov
push
xor
cmp
pop
rcl
jo
shr
stos
scas
sub
fild
adc
loopne
adc
pop
dec
in
or
iret
cmps
das
in
fs
int
pop
xchg
das
sbb
adc
scas
aaa
fwait
mov
cs
int3
rcl
cli
ret
sbb
adc
shl
mov
aam
and
and
jno
cmps
iret
cmps
das
in
fist
adc
ficom
adc
loopne
adc
pop
dec
in
fisubr
pop
dec
dec
mov
in
xchg
cmp
pop
push
(bad)
cmp
push
mov
mov
ret
mov
sub
xlat
jno
rcl
add
(bad)
xor
sub
jp
xchg
push
xor
(bad)
daa
mov
push
xor
sbb
pop
ror
ss
jp
xchg
in
int
cmp
pop
rcl
jno
shr
stos
scas
sub
pop
test
fs
int3
cmps
cs
imul
adc
sbb
adc
shl
mov
aam
adc
push
mov
mov
cs
int3
push
mov
inc
(bad)
adc
adc
push
mov
cmps
sub
xor
pop
xchg
xor
in
xor
aas
inc
inc
pop
rcl
int3
pop
cmp
fcom
xchg
repz
sub
or
sub
int
mov
in
into
cmps
shr
cmp
in
sub
pop
ror
push
or
mov
adc
jecxz
(bad)
not
es
fwait
cmps
in
out
int3
rol
xchg
hlt
cmp
in
int3
push
mov
lahf
mov
in
int3
push
cmp
pop
rcl
pop
shl
aad
push
stos
int3
movs
cs
cmc
cmps
push
ror
movs
cs
mov
rcl
xor
arpl
cmps
cs
xchg
movs
or
cmps
sbb
in
sbb
inc
fild
adc
ficom
adc
loopne
adc
pop
dec
in
fisubr
pop
dec
dec
mov
in
xchg
iret
push
xor
(bad)
cmp
push
mov
mov
ret
xchg
in
int
cmp
jae
rcl
add
xchg
adc
loopne
adc
pop
dec
in
fisubr
pop
dec
dec
mov
in
xchg
pop
push
xor
(bad)
cmp
push
(bad)
int3
movs
cs
xor
in
mov
cs
int3
rcl
cmps
sub
push
push
(bad)
int
cs
mov
cs
int3
shl
in
rcl
movs
cs
cmc
mov
adc
pop
pop
push
das
rcl
cmps
cs
jp
rcl
mov
rcl
int3
cmps
rcr
xor
and
ret
rcl
cdq
jbe
aam
sti
pop
shr
mov
cs
int3
push
push
push
xor
cdq
mov
cs
int3
rcl
movs
cs
inc
dec
mov
lahf
mov
cs
int3
or
or
rcl
(bad)
cmps
sub
mov
cs
mov
rcl
inc
mov
ins
aam
movs
cs
ret
push
push
adc
cmps
cs
cmp
push
aam
movs
cs
mov
and
cli
pop
(bad)
adc
cmps
cmp
mov
aad
mov
cs
int3
cmps
fs
cmps
cs
inc
inc
cmps
ret
cmps
sub
mov
cmps
cmp
mov
sub
sub
push
mov
mov
ret
xchg
in
int
cmp
not
loop
test
out
adc
loopne
adc
pop
dec
in
fisubr
pop
dec
dec
mov
in
xchg
stos
sub
cmp
push
mov
mov
ret
mov
sub
inc
or
rcl
ret
cmps
sub
fistp
pop
push
and
lods
cs
int3
aam
adc
cmps
cs
int3
in
sub
int
cmp
scas
cs
mov
fstp
int3
push
adc
int3
xor
int3
jno
cmps
iret
cmps
das
in
fistp
adc
ficom
adc
loopne
adc
pop
dec
in
fisubr
pop
dec
dec
mov
in
xchg
xor
pop
push
(bad)
cmp
push
mov
mov
ret
xchg
in
int
cmp
not
loop
mov
sub
mov
pop
shr
stos
scas
sub
pop
test
fs
int3
cmps
cs
mov
popf
fnstcw
xchg
in
int
cmp
pop
rcl
or
pop
rcl
stos
scas
sub
fstp
adc
loopne
adc
pop
dec
in
or
iret
cmps
das
in
fs
int
pop
xchg
adc
adc
rcl
mov
adc
shl
mov
aam
and
mov
jno
cmps
iret
cmps
das
in
fild
adc
ficom
cmp
pop
cmp
push
pop
shr
stos
scas
sub
pop
xchg
(bad)
xor
cs
(bad)
rcl
mov
fsqrt
and
push
rcl
xor
es
mov
and
jno
cmps
iret
cmps
das
in
fist
adc
adc
loopne
adc
pop
dec
in
fisubr
pop
dec
jp
imul
shr
stos
scas
sub
in
in
int
xchg
xchg
das
xor
(bad)
and
clc
int3
jno
cmps
iret
cmps
das
in
fcmovnu
in
adc
ficom
loop
lahf
cmp
push
pop
shr
stos
scas
sub
pop
test
fs
int3
cmps
cs
outs
rcl
mov
fnstcw
xchg
in
int
cmp
pop
rcl
push
pop
shr
stos
scas
sub
pop
test
fs
int3
cmps
cs
pop
rcl
mov
fnstcw
xchg
in
int
cmp
push
pop
rcl
xor
sahf
in
adc
loopne
adc
pop
dec
in
fisubr
pop
dec
dec
mov
in
xchg
aaa
xor
(bad)
cmp
push
int3
int3
movs
cs
mov
cmps
cmp
mov
xor
(bad)
and
push
mov
mov
ret
mov
sub
mov
pop
rcl
in
sbb
in
xchg
inc
xor
(bad)
cmp
push
mov
mov
ret
mov
sub
jg
pop
rcl
dec
pop
shl
aad
push
ror
movs
cs
cmc
mov
xor
cli
xor
mov
mov
shl
movs
cs
int3
push
mov
inc
fist
adc
ficom
adc
loopne
adc
pop
dec
in
fisubr
pop
dec
dec
mov
in
xchg
fild
xor
(bad)
cmp
bswap
jno
cmps
iret
cmps
das
in
(bad)
adc
adc
loopne
adc
pop
dec
in
fisubr
pop
dec
dec
mov
in
xchg
pop
sub
pop
push
(bad)
cmp
daa
popa
jbe
sar
mov
push
rcl
xor
es
mov
stos
sub
pop
push
mov
mov
cs
int3
push
mov
inc
fld
jmp
mov
xor
cs
mov
popf
fnstcw
xor
js
xor
js
xor
adc
sbb
cmp
xor
xchg
(bad)
dec
outs
xor
cmps
iret
cmps
das
in
fcmovnu
jmp
lahf
mov
sub
int3
cmps
fs
int3
movs
cs
push
popa
rcl
int3
in
cmp
into
cmps
cmp
add
movs
cs
int3
mov
and
xor
inc
and
fbld
mov
lock
div
pop
xchg
mov
fsubr
in
int3
cmps
pop
aad
sbb
adc
(bad)
fisub
test
in
int3
cmps
cmp
mov
sahf
mov
push
xor
push
in
int
cs
pop
pop
rcl
mov
es
cmps
push
(bad)
das
fst
subps
sub
sbb
jp
test
adc
cmps
mov
jp
test
push
xor
rcl
xor
cmp
idiv
std
outs
adc
adc
inc
mov
pop
rcl
pusha
jbe
bound
sahf
push
mov
movs
cs
xor
xchg
sbb
cdq
push
repnz
push
or
cs
jbe
pop
push
ss
rcl
xor
push
sahf
into
cmps
cs
retf
jo
fwait
hlt
push
pop
aam
lahf
aam
fist
out
xor
test
mov
rol
cmps
cs
fld
adc
rcl
cmps
cs
xchg
sub
int3
mov
and
cmp
pop
outs
into
cmps
cs
addr16
aam
addr16
rcl
int3
dec
out
int3
cmps
pop
jmp
shl
dec
movs
cs
int3
in
jno
int3
cmps
cmp
add
sub
fs
cmps
cs
shr
adc
and
rcr
cmps
cs
addr16
rcr
mov
cmps
push
in
imul
pop
pop
pop
push
xor
pop
xchg
cmps
movs
cs
mov
cmp
add
pop
xchg
xchg
movs
cs
arpl
cmp
pop
rol
callw
xor
adc
pop
pop
xchg
xchg
into
jno
mov
jp
pop
rcl
int3
ficom
pop
gs
daa
xor
rcr
pop
rcl
xor
mov
lahf
mov
das
in
int3
or
movs
cs
arpl
cmps
cmps
movs
cs
int3
in
inc
out
int3
cmps
cmps
mov
in
pop
out
int3
cmps
cmps
stos
movs
cs
int3
in
jno
int3
cmps
xchg
int3
or
pop
shl
xchg
scas
movs
cs
cmp
out
daa
xor
rcr
scas
rcl
xor
jno
jno
pop
xchg
iret
cmps
cs
arpl
pop
jmp
gs
int3
cmps
sbb
or
cli
ret
in
mov
cmps
mov
xchg
mov
(bad)
sub
pop
push
(bad)
das
shr
cmp
rcl
aad
loope
in
int3
sbb
push
test
adc
pop
shl
cmp
int3
cmps
rcl
mov
push
out
int3
cmps
shl
aas
push
xchg
(bad)
push
aad
sbb
adc
cmps
cmp
push
push
mov
cmps
cs
mov
cmps
cmp
xor
js
xor
lahf
mov
das
in
int3
or
adc
push
adc
xor
cs
mov
adc
sahf
cmps
cmps
movs
cs
pop
dec
push
push
xor
lods
into
jno
pop
xchg
iret
cmps
cs
arpl
push
(bad)
and
cs
ja
in
add
adc
cmps
cmp
jp
adc
rcl
sbb
sub
jp
pop
rcl
(bad)
in
xor
push
popa
into
cmps
adc
cmps
in
pop
inc
xchg
fmul
inc
or
adc
sar
jg
rcl
mov
inc
out
int3
cmps
shl
xor
loop
pop
cmp
pop
pop
sar
pop
rcl
mov
cmps
add
xor
jp
test
in
int3
cmps
cmp
mov
(bad)
int3
cmps
rcl
inc
jl
mov
movs
cs
xor
sub
int3
pop
push
aad
rcl
fcom
scas
movs
cs
xor
push
mov
pop
rcr
int3
or
dec
pop
pop
shr
les
cs
mov
push
adc
cmps
xchg
movs
cs
fistp
fs
cmps
cs
xchg
imul
mov
cmps
cmp
xor
sub
int3
rcl
dec
ins
add
shl
pop
test
pusha
jbe
xchg
cmp
push
movs
sbb
xchg
loop
xor
adc
das
fwait
retf
push
movs
push
fnclex
loop
xor
adc
sub
mov
icebp
aas
pop
inc
lds
cmp
icebp
aas
pop
inc
(bad)
push
push
int
inc
iret
pop
add
jecxz
inc
(bad)
aam
add
or
adc
rcl
xchg
fmul
lahf
adc
push
rcr
ret
rcl
js
aam
or
and
mov
daa
xor
(bad)
aas
cmps
movs
sbb
or
sub
pop
shr
inc
push
fisub
xor
jle
adc
shr
cmp
rcl
in
inc
dec
fisub
xor
movs
pop
push
and
cli
cmp
adc
push
int
xchg
adc
push
inc
iret
pop
add
ja
rol
mov
adc
aam
jmp
adc
sar
mov
and
pop
pop
aam
mov
xor
in
gs
and
pop
pop
push
retf
or
adc
mov
xor
push
retf
push
vpshad
xor
xchg
add
inc
gs
pop
dec
cmp
xor
jmp
fst
xor
xor
int3
rcl
aad
in
in
int3
sbb
adc
aam
scas
shl
adc
int3
cmps
cmp
call
repz
push
xor
rcl
xor
cmps
idiv
in
xor
adc
or
int3
cmps
cs
mov
and
pop
pop
jmp
cs
mov
mov
aad
in
in
int3
sbb
adc
aam
scas
shl
adc
int3
cmps
add
adc
shr
cmp
rcl
inc
int3
in
adc
daa
pop
pop
rcl
inc
inc
cmps
sti
mov
(bad)
out
rcl
add
ds
cdq
push
sbb
data16
daa
jns
adc
retf
xor
xchg
add
lods
cwde
add
icebp
and
pop
pop
loop
test
aad
xor
dec
add
fwait
jmp
adc
sub
fwait
hlt
xor
fwait
jmp
jp
in
int3
ficom
push
xor
cmp
pop
rcl
movs
xor
adc
lahf
mov
lahf
mov
xor
int3
or
adc
pop
rcl
add
stos
cmp
adc
pop
lods
push
pop
test
push
adc
cmps
cs
(bad)
adc
adc
loopne
adc
pop
dec
in
fisubr
pop
dec
jo
mov
push
pop
rcl
stos
scas
sub
in
repnz
cmps
xchg
test
repnz
cmps
xchg
xchg
push
adc
push
adc
shl
mov
aam
daa
xor
bnd
pop
xchg
xor
dec
and
pop
push
(bad)
cmp
and
ret
rcl
jp
xchg
repnz
cmps
cmp
mov
fsqrt
jae
rcl
mov
adc
shl
mov
aam
daa
xor
bnd
pop
xchg
xor
(bad)
and
pop
push
(bad)
cmp
push
mov
mov
clc
cli
cmp
adc
shl
popa
aam
adc
cmps
cs
pop
add
adc
cmps
cs
(bad)
adc
jp
xchg
repnz
cmps
cmp
(bad)
repnz
cmps
cmp
mov
lds
mov
push
in
int3
rcl
cli
sub
mov
adc
shl
mov
aam
daa
xor
bnd
pop
xchg
xor
pop
and
pop
push
(bad)
cmp
fcmovne
jno
pop
xchg
xor
imul
pop
push
(bad)
cmp
push
mov
mov
lds
mov
shl
int3
cmps
cmp
mov
fnstcw
xchg
repnz
cmps
cmp
mov
fstp
mov
push
in
int3
rcl
cli
add
adc
shl
mov
aam
sbb
push
mov
mov
xor
int3
push
mov
lahf
mov
in
int3
push
cmp
add
xchg
test
lahf
mov
xor
int3
or
aaa
add
xchg
not
repz
stos
cmp
adc
pop
lods
push
pop
test
push
adc
cmps
cs
(bad)
adc
push
xor
push
adc
cmps
cs
(bad)
adc
loop
lahf
cmp
cmp
adc
pop
lods
push
pop
test
push
adc
cmps
cs
(bad)
loopne
xor
adc
push
xor
push
adc
cmps
cs
fcomi
loopne
xor
adc
adc
loopne
adc
pop
dec
in
fisubr
pop
dec
dec
mov
lahf
mov
xor
int3
or
xchg
add
xchg
not
in
jne
adc
sub
lahf
mov
xor
int3
or
lahf
mov
xor
int3
or
das
add
xchg
test
stos
cmp
adc
pop
lods
push
pop
test
push
adc
cmps
cs
(bad)
adc
ficom
push
xor
push
adc
cmps
cs
fstp
adc
ficom
adc
loopne
adc
pop
dec
in
fisubr
pop
dec
dec
mov
lahf
mov
xor
int3
or
adc
pop
rcl
pop
pop
shl
aad
push
(bad)
in
cmps
cs
cmc
mov
and
pop
push
mov
mov
shl
pop
xor
int3
push
mov
lahf
mov
in
int3
push
cmp
test
stos
cmp
adc
pop
lods
push
pop
test
push
adc
cmps
cs
fcmovnb
loope
xor
adc
push
xor
push
adc
cmps
cs
fcmovnu
loope
xor
adc
push
xor
das
add
stos
cmp
adc
pop
lods
push
pop
test
push
adc
cmps
cs
fild
loope
xor
adc
adc
loopne
adc
pop
dec
in
fisubr
pop
dec
jo
pop
add
stos
push
pop
rcl
stos
scas
sub
in
repnz
cmps
xchg
test
repnz
cmps
xchg
iret
jbe
adc
test
repnz
cmps
cmp
mov
fnstcw
xor
js
xor
js
xor
adc
sbb
adc
cmps
push
aam
dec
rcl
mov
cmps
cmp
pop
pop
pop
scas
retf
xchg
in
or
mov
fs
in
cmps
cs
xlat
jne
adc
in
sub
outs
sbb
and
sbb
adc
test
mov
adc
mov
rcl
pusha
jbe
jns
mov
push
jmp
mov
dec
out
int3
cmps
shl
vmovhps
pop
rcr
xchg
jne
adc
pop
rcr
int3
shr
in
rcl
cmps
cs
hlt
mov
cmp
pop
cmp
(bad)
in
int3
fcom
ret
push
pop
sar
(bad)
xchg
adc
cs
adc
rcl
cmps
cs
xor
lahf
mov
sub
int3
or
rcr
pop
rcl
mov
cmps
cmp
in
or
adc
fnstcw
repnz
cmps
cs
idiv
sar
mov
lahf
mov
das
in
int3
or
movs
cs
arpl
pop
jmp
jno
int3
cmps
sbb
or
cmp
cmps
cs
not
sar
mov
lahf
mov
das
in
int3
or
mov
mov
sub
int3
or
cmps
cs
arpl
cmp
(bad)
cmps
cs
mov
sub
int3
shr
adc
rcl
js
xor
lahf
mov
das
in
int3
or
pop
sbb
inc
push
aad
pop
rcl
hlt
fsubr
int3
cmps
xchg
adc
pop
push
xchg
xlat
cmps
cs
xor
adc
cmps
shl
aas
push
xchg
(bad)
push
aad
xor
adc
cmps
cmp
push
push
mov
cmps
cs
mov
cmps
cmp
xor
js
xor
lahf
mov
das
in
int3
or
adc
push
adc
xor
cs
repz
adc
sahf
cmps
xchg
movs
cs
pop
dec
push
push
xor
lods
into
jno
pop
xchg
iret
cmps
cs
arpl
push
(bad)
and
cs
ja
aad
popa
rcl
mov
cmps
cmp
jb
adc
rcl
sbb
sub
jp
pop
rcl
fld
sti
adc
fst
cmps
adc
cmps
in
pop
inc
xchg
fsub
cmp
fcom
xor
adc
pop
sar
arpl
adc
sahf
mov
lahf
mov
sub
cli
sti
jae
adc
mov
lahf
mov
sub
inc
and
in
int3
pop
rcr
xor
push
sahf
enter
pusha
mov
in
cmps
push
(bad)
cmp
sbb
xor
shr
xchg
sub
int3
aam
sahf
enter
fist
clc
adc
fsub
ins
pop
pop
rcr
int3
or
cmps
cmps
movs
cs
fist
pop
in
xchg
sub
int3
mov
cmp
pop
mov
cli
das
jae
adc
fcmove
jno
xchg
retf
jne
adc
sub
jp
test
adc
ror
cmps
cs
fsub
fwait
lock
and
in
inc
out
int3
cmps
cmp
cmps
cs
not
or
int3
cmps
push
cli
add
xchg
xchg
sub
int3
mov
retf
push
(bad)
aas
fdivr
neg
rol
clc
adc
sahf
push
mov
cmps
adc
pop
rcr
int3
or
fistp
pop
rcr
hlt
xor
in
xchg
sub
int3
mov
cmp
pop
cmps
xchg
movs
cs
fild
adc
rcl
cmps
cs
xor
pop
ror
add
shl
pop
test
pusha
jbe
in
js
xchg
hlt
cmps
xchg
xor
cmp
pop
rcr
aas
mov
cmp
pop
pop
inc
retf
aam
adc
or
adc
rcl
inc
gs
xor
jge
shl
aam
xchg
out
sahf
cmp
jo
adc
sub
lahf
addr16
rol
pop
not
xor
cmp
pop
rcr
xor
mov
js
xor
cli
and
adc
mov
cmp
pop
pop
jmp
push
lahf
jbe
add
cmp
pop
rcr
push
mov
sar
cmps
jg
adc
outs
fs
not
xor
aam
inc
push
cmp
sbb
fwait
cmc
shr
cmp
rcl
sbb
sub
and
mov
jp
push
rcl
mov
cmps
add
shr
inc
push
pop
xchg
xor
xchg
mov
aas
fs
xor
push
mov
scas
iret
je
pop
mov
cmp
pop
pop
aam
test
(bad)
fidivr
push
movs
inc
push
in
and
adc
xchg
in
xor
jo
out
xchg
in
arpl
xlat
into
jno
pop
push
(bad)
or
ret
sbb
xchg
les
adc
aam
out
xor
jp
pop
rcl
int3
ins
push
mov
pop
cmp
sbb
sbb
repz
cmp
sbb
inc
fcmovnb
sti
adc
ficom
inc
pop
pop
mov
in
push
jne
push
xor
mov
jbe
fisub
ds
test
gs
outs
data16
stos
ficom
adc
mov
pop
js
xor
js
xor
js
xor
js
xor
js
xor
xor
adc
mov
das
sbb
fwait
hlt
loope
sbb
pop
es
mov
xor
inc
pop
imul
adc
(bad)
stc
adc
xor
inc
pop
imul
adc
es
adc
xor
inc
pop
imul
adc
ss
adc
xor
inc
pop
imul
adc
push
stc
adc
xor
inc
pop
imul
adc
push
stc
adc
fdivr
mov
sar
push
mov
lea
cmp
sbb
js
push
mov
lea
cmp
sbb
js
push
mov
mov
pop
cmp
sbb
js
push
mov
mov
pop
cmp
sbb
fwait
ret
push
rol
imul
adc
stos
not
xor
rol
imul
adc
mov
rol
imul
adc
mov
adc
xor
inc
pop
imul
adc
call
xor
hlt
mov
push
(bad)
fcomi
push
outs
shr
or
adc
xor
push
xor
jb
cmps
sbb
jp
ficom
daa
fcmovnb
nop
adc
(bad)
not
xor
sub
push
xor
jb
lods
sbb
jp
ficom
daa
mov
xchg
adc
dec
not
xor
es
cmp
js
cmps
in
lods
sbb
cli
retf
jg
adc
xor
xchg
jae
mov
lea
cmp
adc
cmps
in
cmps
sbb
cli
out
rcl
nop
pop
inc
push
xor
rcl
ins
int
jae
cmp
adc
cmps
in
lods
sbb
cli
cmp
nop
and
xor
rcl
ins
stc
lea
cmp
iret
cmps
in
lods
sbb
cli
mov
jne
push
xor
rcl
ins
icebp
lea
cmp
retf
push
sub
push
xor
jb
lods
sbb
jp
ficom
daa
mov
xchg
adc
push
not
xor
adc
mov
xchg
mov
or
xor
out
sbb
in
inc
push
cmp
cmc
xor
cli
mov
cs
mov
shl
pop
cmp
mov
xchg
push
xor
push
ret
or
adc
cs
pop
(bad)
nop
adc
xchg
(bad)
or
retf
jb
loop
xor
js
xor
adc
sbb
jp
adc
xor
jb
xchg
sbb
js
cmps
in
lods
sbb
js
or
cmp
push
cli
push
or
adc
fld
adc
or
xor
cli
cmp
adc
shr
cmp
rcl
js
cmps
in
lods
sbb
js
cmps
in
xchg
sbb
jp
pop
rcl
mov
test
mov
sbb
fld
adc
or
xor
cli
idiv
nop
cmp
xor
sar
xor
js
xor
js
xor
js
xor
jp
pop
rcl
pop
pop
mov
push
fistp
adc
rcl
js
btc
int3
ins
aad
jb
cmp
pop
sar
cmps
in
lods
sbb
js
cmps
in
xchg
sbb
js
xor
adc
pop
mov
adc
pop
cmp
or
xor
sar
imul
and
and
sar
cmps
in
lods
sbb
js
cmps
in
xchg
sbb
js
xor
adc
pop
mov
adc
pop
cmp
or
xor
sar
das
jl
adc
xor
in
push
ins
dec
push
xor
shr
push
sbb
sar
rcl
pop
stc
rcl
xor
stc
jp
pop
rol
xchg
or
xor
leave
jno
mov
adc
cli
fisttp
int3
ins
in
jb
mov
mov
pop
mov
adc
xor
xor
cmp
rcl
arpl
pop
enter
enter
js
mov
xor
push
lods
sbb
js
cmps
in
lods
sbb
js
cmps
in
xchg
sbb
js
xor
adc
mov
jp
xchg
push
xor
sar
inc
jge
adc
fcom
cwde
pop
pop
sar
adc
xor
inc
fld
adc
xor
pop
sbb
adc
cmps
in
scas
sbb
cli
das
jge
adc
cs
pop
(bad)
nop
adc
cs
push
stc
xchg
adc
rcl
xor
jecxz
cdq
pop
rcl
pop
and
jp
xchg
push
xor
sar
aas
jge
adc
fcom
dec
je
sar
cmps
in
lods
sbb
js
cmps
in
xchg
sbb
jp
pop
rcl
pop
gs
jp
pop
rcl
pop
pop
rcl
jno
mov
js
mov
xor
pop
jb
lods
sbb
cli
sbb
cs
pop
(bad)
nop
adc
cs
ja
nop
adc
mov
adc
xor
adc
pop
cmp
or
xor
sar
mov
leave
jb
xor
sub
aam
xchg
(bad)
mov
ins
in
jb
mov
mov
pop
mov
adc
xor
adc
pop
mov
jp
pop
rol
or
push
xor
or
jno
mov
adc
cli
movs
mov
pop
mov
lea
mov
mov
pop
mov
or
pop
sar
pop
rcl
pop
pop
rcl
arpl
xchg
enter
enter
js
mov
xor
pop
jb
stos
sbb
js
cmps
in
lods
sbb
js
cmps
in
xchg
sbb
js
xor
xor
and
pop
sar
xor
adc
or
jp
adc
adc
mov
les
daa
pop
(bad)
nop
adc
cs
ja
nop
adc
mov
adc
xor
xor
adc
pop
cmp
or
xor
sar
scas
jnp
adc
xor
in
push
ins
dec
push
xor
shr
push
cmp
xor
leave
jp
pop
rcl
pop
enter
xor
jp
pop
push
inc
pop
test
push
xor
ror
jno
mov
cli
push
jnp
adc
xor
in
push
ins
dec
push
xor
shr
push
cmp
xor
leave
jp
pop
rcl
pop
call
xor
inc
pop
leave
jae
xor
ror
jno
mov
cli
pop
jnp
adc
shr
cmp
rcl
js
cmps
in
lods
sbb
js
cmps
in
xchg
sbb
js
xor
jp
pop
rcl
pop
dec
mov
jp
xchg
push
xor
rcl
xor
not
pop
shl
pop
pop
cs
pop
(bad)
nop
adc
cs
push
stc
xchg
adc
mov
adc
xor
jp
pop
push
inc
pop
test
push
xor
ror
jno
mov
cli
lahf
js
adc
xor
in
push
ins
dec
push
xor
shr
push
sbb
(bad)
jp
pop
rcl
pop
lock
xor
iret
jp
pop
push
inc
pop
mov
sub
jno
mov
adc
cli
dec
mov
pop
cmp
cmps
cs
retf
jo
fwait
hlt
mov
jmp
cmps
mov
test
gs
outs
and
retf
push
and
jno
cmp
int3
cmps
pop
aam
mov
push
xor
cmp
les
jb
lods
sbb
fwait
retf
jo
fwait
hlt
xor
in
push
push
dec
push
xor
pop
push
ret
or
adc
cs
pop
(bad)
nop
adc
xchg
(bad)
or
retf
jb
loop
xor
js
xor
adc
sbb
jp
adc
xor
jb
xchg
sbb
js
cmps
in
lods
sbb
js
or
cmp
push
cli
push
or
adc
fld
adc
or
xor
cli
scas
jns
adc
fdivr
jg
pop
sar
cmps
in
lods
sbb
js
cmps
in
xchg
sbb
jp
pop
rcl
mov
test
mov
sbb
fld
adc
or
xor
cli
imul
nop
cmp
xor
sar
xor
js
xor
js
xor
js
xor
jp
pop
rcl
pop
pop
mov
push
fcmovnb
icebp
adc
rcl
js
btc
int3
ins
aad
jb
cmp
sub
sar
cmps
in
lods
sbb
js
cmps
in
xchg
sbb
js
xor
jp
pop
push
inc
pop
test
push
xor
push
enter
adc
mov
adc
cli
cmp
sub
adc
or
xor
jp
pop
rcl
arpl
mov
js
xor
daa
fcmovnb
nop
adc
into
into
adc
fldlg2
adc
mov
pop
xor
in
push
mov
push
xor
cmp
pop
pop
mov
adc
cmps
in
scas
sbb
cli
push
inc
rcl
pop
pop
cs
pop
(bad)
nop
adc
cs
push
stc
xchg
adc
rcl
xor
jecxz
daa
xor
inc
pop
test
push
xor
push
enter
adc
push
into
adc
cli
push
mov
pop
pop
jmp
cs
pop
(bad)
nop
adc
cs
push
stc
xchg
adc
rcl
xor
in
js
xor
xor
adc
fld
adc
or
xor
cli
sub
adc
mov
out
cmps
mov
lea
mov
mov
pop
mov
adc
xor
adc
rcl
arpl
or
pop
mov
js
mov
or
pop
jb
xchg
sbb
js
cmps
in
lods
sbb
js
cmps
in
xchg
sbb
js
xor
adc
rcl
xor
rcl
xor
mov
jp
adc
sub
rcl
xor
pop
aad
pop
cs
pop
(bad)
nop
adc
cs
ja
nop
adc
mov
jp
pop
rcl
pop
cmp
cmp
or
xor
sar
outs
inc
rcl
nop
test
shr
push
ins
dec
push
xor
shr
push
sbb
sar
push
mov
pop
sar
pop
rol
pop
or
xor
leave
jno
mov
adc
cli
inc
mov
pop
mov
lea
mov
mov
pop
mov
adc
xor
adc
pop
mov
adc
scas
retf
jno
mov
js
mov
rdpmc
pop
jb
xchg
sbb
js
cmps
in
lods
sbb
js
cmps
in
xchg
sbb
js
xor
xor
in
xor
js
xor
adc
or
jp
adc
cs
shl
pop
pop
cs
pop
(bad)
nop
adc
cs
push
stc
xchg
adc
mov
js
xor
jp
pop
push
inc
pop
leave
jae
xor
ror
jno
mov
cli
dec
inc
rcl
nop
inc
inc
push
xor
es
dec
pop
sar
cmps
in
lods
sbb
js
cmps
in
xchg
sbb
js
xor
js
xor
jp
pop
push
inc
pop
test
push
xor
ror
jno
mov
cli
cmove
adc
xor
in
push
ins
dec
push
xor
shr
push
cmp
xor
leave
js
xor
adc
sbb
jp
adc
xor
jb
lods
sbb
js
cmps
in
lods
sbb
js
cmps
in
xchg
sbb
js
xor
xor
push
xor
js
xor
adc
sbb
jp
adc
das
pop
shl
fucomi
and
int3
loope
inc
xor
cmc
mov
mov
out
cmps
mov
test
pusha
jbe
push
mov
sbb
fwait
hlt
xor
jp
pop
rcl
pop
pop
mov
adc
pop
push
in
inc
push
cmp
cmc
fisubr
in
cmp
inc
adc
pop
mov
or
pop
pop
shl
or
pop
push
ja
pop
push
push
(bad)
pop
rcl
xor
sub
aam
xchg
cli
mov
or
or
or
and
in
cmps
jno
mov
cli
jp
cs
mov
leave
sub
mov
addr16
xor
inc
jmp
cmp
int3
cmps
push
(bad)
sub
xchg
jmp
mov
inc
int3
sub
jp
in
xchg
adc
rcl
mov
scas
mov
cmps
push
(bad)
sub
sub
retf
rcl
dec
ins
add
shl
xor
fist
adc
or
jbe
test
push
cld
sbb
adc
popa
push
xor
push
adc
cmps
cs
fild
leave
adc
mov
push
xor
sbb
les
cs
dec
cmps
shl
xor
pop
pop
xchg
xor
out
xor
loop
test
adc
mov
lahf
mov
cs
int3
or
or
pop
rcl
and
and
jno
pop
xchg
xor
ror
xor
outs
int3
pop
movs
add
pusha
push
xor
push
adc
cmps
cs
(bad)
and
ret
rcl
xchg
dec
cmps
aam
and
loope
jno
pop
xchg
xor
pop
add
int3
pop
movs
add
pusha
push
xor
push
adc
cmps
cs
fucomi
(bad)
adc
fldcw
push
call
shr
int3
cmps
cmp
mov
sbb
mov
lahf
mov
cs
int3
or
fwait
and
rcr
cmc
fldcw
xchg
call
shr
int3
cmps
cmp
mov
sbb
mov
lahf
mov
cs
int3
or
inc
and
rcl
and
shl
xor
out
add
int3
push
movs
add
arpl
aam
adc
cmps
cs
fstp
adc
fldcw
or
xchg
adc
cmps
cmp
mov
fsubr
aam
and
sbb
dec
mov
lahf
mov
cs
int3
or
jmp
xor
jp
adc
xor
push
adc
cmps
cs
pop
pop
dec
push
xor
mov
jp
call
dec
push
xor
mov
cli
ret
inc
rcl
mov
stc
fwait
ret
scas
aaa
fwait
mov
das
in
int3
rcl
sti
adc
add
shl
pop
test
mov
pop
inc
inc
mov
sahf
pop
in
mov
or
pop
pop
dec
xor
push
ds
int3
ficom
sbb
xchg
addr16
rcl
ins
pop
mov
pop
rol
mov
rcl
pusha
jbe
sub
scas
movs
jle
pop
push
cld
adc
adc
arpl
aam
inc
cmps
cs
(bad)
adc
mov
or
pop
push
mov
mov
cs
mov
and
int3
cmps
shl
xor
jno
pop
xchg
fisubr
das
pop
xor
scas
shl
jp
jmp
adc
cmps
cmp
mov
and
int3
cmps
shl
xor
mov
fisubr
sbb
xor
mov
pop
shl
aad
push
test
cs
cmc
fldcw
cmps
cs
inc
dec
mov
lahf
mov
es
int3
or
mov
pop
rcl
int3
pop
movs
add
bound
aam
inc
cmps
cs
fcmovnu
les
xor
ins
loope
cmps
cs
dec
mov
lahf
mov
es
int3
or
jg
pop
rcl
int3
pop
movs
add
bound
aam
inc
cmps
cs
fisttp
les
xor
and
ret
rcl
xchg
mov
movs
add
bound
aam
inc
cmps
cs
fld
adc
fldcw
cmps
sbb
mov
lahf
mov
es
int3
or
or
pop
rcl
int3
push
movs
add
bound
aam
inc
cmps
cs
(bad)
ins
loope
cmps
sbb
mov
lahf
mov
es
int3
or
mul
pop
rcr
mov
es
int3
rcl
xchg
mov
movs
add
bound
aam
inc
cmps
cs
(bad)
lds
xor
ins
loope
cmps
cs
inc
dec
mov
lahf
mov
es
int3
or
mov
pop
rcl
int3
push
movs
add
gs
xor
push
inc
cmps
cs
fcmovnbe
lds
xor
mov
xchg
fisubr
(bad)
cmps
pop
loop
mov
cs
mov
sbb
jp
jmp
adc
mov
adc
in
cmps
push
scas
shl
xchg
mov
ficom
mov
push
sbb
pop
pop
loop
mov
cs
mov
lahf
loopne
pop
pop
mov
cli
jb
cs
mov
fstp
int3
push
adc
xor
push
scas
iret
movs
cs
xor
(bad)
pop
rcl
int3
arpl
xchg
or
adc
cmps
jmp
mov
rcl
xor
adc
scas
aaa
fwait
mov
es
int3
rcl
lahf
mov
sub
int3
or
lahf
mov
sub
xchg
sub
xchg
not
scas
retf
mov
clc
cli
jae
rcl
mov
pop
rol
mov
call
sbb
push
push
or
sub
int3
cmps
ficom
mov
mov
jb
shl
xor
jno
mov
lahf
mov
das
in
int3
or
pop
sub
fwait
ret
jo
fwait
cmc
xor
jno
mov
lahf
mov
sub
int3
or
jmp
pop
rcl
pop
pop
aad
xor
push
out
retf
cmps
cs
fstp
adc
loope
dec
xor
hlt
mov
cmps
pop
aam
fsubr
jp
adc
int3
cmps
cmp
pop
pop
or
aam
out
retf
cmps
cs
fist
adc
in
int3
cmps
cmp
mov
cmps
push
shl
or
mov
sub
jno
pop
xchg
iret
mov
stos
add
and
rcr
int3
or
mov
pop
sar
xor
xchg
iret
movs
cs
arpl
push
(bad)
aas
push
adc
xor
push
out
iret
cmps
cs
repz
cmp
push
push
jmp
aaa
fwait
mov
es
int3
rcl
xchg
mov
ficom
in
sub
int3
cmps
mov
jp
adc
cli
xor
adc
jmp
adc
cmps
cmp
mov
cmps
cmp
mov
cmps
cmp
fadd
scas
movs
das
in
int3
jbe
add
cmps
pop
xchg
movs
das
in
int3
pop
cmp
int3
cmps
push
scas
out
cs
xor
add
mov
es
int3
rcl
in
xchg
push
out
int
cs
pop
(bad)
aam
out
int
cs
(bad)
(bad)
adc
ficom
jmp
rcl
mov
cmps
pop
scas
iret
cmps
cs
fs
add
pop
pop
scas
sti
scas
cs
mov
xor
adc
cmps
push
in
dec
rcl
mov
cmps
sub
int3
mov
add
pop
pop
xchg
iret
mov
cmps
add
pop
pop
scas
iret
cmps
cs
shr
cmps
cs
dec
pop
rol
or
adc
aam
jmp
cmps
(bad)
mov
mov
js
mov
add
pop
cmp
mov
cmps
add
cmps
cmp
(bad)
cmps
cs
not
sar
cdq
ficom
int3
in
cmp
dec
and
xchg
fnsave
adc
xor
daa
es
ror
hlt
sub
int3
push
vpshaq
adc
xor
push
dec
rcl
fnclex
rcl
or
out
adc
rcl
jp
jmp
mov
cli
adc
adc
cmps
fcom
inc
dec
cmp
pop
pop
cmp
es
ror
mov
sub
pop
pop
push
cmp
in
jb
push
pop
arpl
nop
adc
and
dec
cmps
pop
rcr
dec
push
xor
mov
jp
clc
xchg
adc
jp
adc
mov
add
pop
cmp
mov
adc
xor
lahf
mov
aas
in
int3
or
cmp
xor
adc
jo
xor
push
mov
fist
in
int3
ficom
adc
push
push
or
pop
rcl
xor
aaa
inc
in
xchg
adc
pop
movs
cmps
jno
push
rcl
rcl
(bad)
lds
xor
add
dec
sbb
pop
adc
sub
sbb
mov
nop
fwait
leave
rol
cmps
cs
jmp
fld
lds
xor
scas
xor
and
pop
rol
mov
call
sbb
pop
xchg
cmc
cmp
mov
cmps
cs
mov
cmp
int3
pop
pop
xchg
xor
mov
lods
xor
xchg
cwde
mov
in
xor
pop
rol
fwait
shl
lahf
push
mov
cmc
fdivr
int3
cmps
jecxz
mov
cmp
int3
or
jp
adc
cli
aas
dec
rcl
mov
xchg
add
pop
mov
dec
cmps
sbb
and
lahf
mov
cmp
push
mul
cmp
int3
or
(bad)
cmps
cs
test
dec
cmps
cmp
pop
pop
cmp
cmp
rcl
xor
ins
retf
mov
jp
adc
add
pop
pop
scas
push
mov
in
mov
pop
push
loope
cld
mov
jp
clc
xchg
adc
or
xor
and
fwait
jmp
or
frstor
pop
push
xor
int3
adc
pop
and
jp
jno
mov
jp
adc
add
pop
pop
scas
shl
les
push
loope
cld
mov
jp
clc
xchg
adc
or
xor
mov
cmp
and
xchg
neg
pop
scas
lea
les
push
loope
ror
cmp
rcl
js
xor
js
xor
js
xor
adc
sbb
cli
stos
push
rcl
mov
xor
js
or
mov
jbe
cs
mov
pop
xchg
xchg
sbb
pop
lahf
xchg
cs
mov
rcl
inc
mov
imul
cs
int3
sub
cli
out
push
rcl
pop
pop
pop
push
mov
mov
push
xor
ficom
xor
cmp
loope
sbb
mov
pop
xchg
xchg
mov
lahf
xchg
cs
mov
rcl
inc
mov
imul
cs
int3
sub
cli
mov
rcl
pop
pop
pop
push
mov
mov
push
xor
ficom
xor
fist
xor
add
icebp
mov
cmps
pop
xchg
xor
rol
xor
mov
mov
xchg
rcr
scas
adc
xor
cli
(bad)
push
rcl
mov
rcl
pop
pop
cmp
jbe
push
stc
out
rcl
hlt
sbb
adc
pop
sar
mov
add
pop
pop
push
jmp
xchg
scas
xor
adc
call
xor
rcl
mov
retf
xor
shr
push
ins
dec
push
xor
sar
xor
js
xor
js
xor
adc
pop
mov
jp
adc
and
mov
(bad)
nop
adc
popa
push
xor
sar
mov
sbb
pop
mov
in
int3
ficom
adc
rcl
xor
mov
push
xor
mov
inc
fstp
adc
rcl
cmps
cs
fdivr
(bad)
adc
mov
push
xor
adc
inc
mov
mov
aas
in
int3
pop
rcl
xor
or
jmp
adc
int3
or
mov
in
arpl
mov
imul
sar
in
xchg
adc
rcl
mov
pop
test
cmps
push
(bad)
sub
addr16
hlt
jle
sbb
adc
pop
mov
adc
pop
cmp
jmp
or
frstor
mov
push
xor
sar
mov
sbb
pop
cmp
mov
cmps
cmp
sub
adc
mov
adc
or
jnp
pop
sar
xor
adc
ins
ror
cmp
aam
mul
imul
push
ror
rcl
mov
out
fist
xor
sar
xor
lahf
jbe
cmp
cmp
mov
icebp
dec
rol
mov
rcl
pusha
jbe
jb
sahf
mov
xor
push
aas
fisubr
add
scas
sbb
mov
rcl
xor
in
add
pop
rcr
xor
xor
or
dec
rcl
xor
mov
or
adc
cmp
push
xor
xor
xchg
out
rcl
pop
lods
or
cmps
in
xchg
sar
or
cs
mov
cmps
pop
jmp
or
cmps
fs
cmps
cs
adc
rcr
aam
retf
cs
int3
in
cmp
int3
cmps
cmp
ds
rcr
repz
push
xchg
xor
lahf
mov
sub
int3
or
daa
ja
nop
adc
scas
fst
xor
pop
rcl
cmps
cmp
fidivr
push
mov
cmps
cli
xchg
movs
cs
or
xor
xchg
out
movs
cs
mov
aad
cmps
lea
into
cmps
cs
sub
push
test
cmp
or
shl
out
int3
cmps
cmp
sbb
jnp
xor
in
push
rcl
mov
mov
jno
rcr
xor
mov
jno
jb
xchg
rcl
xor
hlt
jbe
sbb
adc
pop
shl
or
in
fsub
mov
sbb
xor
sar
dec
mov
stos
adc
xor
dec
push
xor
sbb
mov
xor
adc
pop
fcom
xor
jo
lods
sbb
sub
movs
sbb
sub
cli
daa
push
rcl
mov
adc
scas
ss
mov
sub
int3
rcl
sti
push
pop
rcl
mov
mov
es
pop
shr
ss
jb
xor
jo
xor
dec
push
xor
dec
push
xor
jb
xor
jo
xor
jb
xor
dec
push
xor
dec
push
xor
enter
js
cmps
movs
add
mov
push
jmp
jo
xor
jb
xor
dec
push
xor
jp
dec
rcl
sub
cli
mov
adc
cs
xor
fst
xor
cld
xor
cmc
mov
cmps
pop
aad
cld
or
xchg
xchg
mov
pop
xchg
out
movs
cs
arpl
pop
xchg
(bad)
or
pop
cmp
rcr
hlt
xor
adc
pop
pop
xchg
xor
in
scas
sbb
cli
fist
adc
cmps
shl
xor
js
xor
adc
push
ficom
xor
sar
aaa
push
rcl
fisubr
sub
retf
rcl
cwde
mov
cs
int3
rcl
cmps
cs
scas
sub
int3
pop
push
das
inc
in
xchg
adc
push
push
mov
pop
sar
pop
rcl
mov
cmps
sub
xor
pop
lahf
xor
cs
mov
rcl
inc
mov
int3
js
xor
(bad)
xor
das
or
push
(bad)
aas
fs
xor
xor
mov
push
xor
sar
sti
push
rcl
int3
ins
push
mov
pop
cmp
pop
sar
push
pop
rcl
mov
in
adc
scas
ss
mov
sub
int3
rcl
lahf
mov
cs
int3
or
movs
cs
arpl
cld
retf
pop
xchg
(bad)
movs
cs
arpl
push
(bad)
and
adc
pop
pop
xchg
xor
in
cmps
sbb
cli
fist
adc
cmps
shl
xor
js
xor
retf
mov
adc
cmps
in
cmps
sbb
cli
aaa
push
rcl
fisubr
pop
adc
cmps
cs
sti
cmps
xchg
xchg
addps
addr16
add
mov
cmc
in
sar
mov
sbb
pop
cs
das
int3
xchg
adc
xchg
fcom
xor
pop
xchg
xor
in
sbb
int3
cmps
pop
xchg
ss
cs
int3
gs
aaa
gs
js
xor
lds
mov
adc
cmps
in
cmps
sbb
cli
mov
fcmovnbe
adc
fst
cmps
adc
cmps
in
add
pop
jmp
shr
int3
cmps
sbb
jmp
rcr
int3
or
xchg
pop
rcl
xor
lahf
mov
cs
int3
or
daa
mov
xchg
adc
cmps
fst
xor
ins
adc
cmps
adc
mov
aad
sbb
js
mov
sbb
pop
cs
mov
xchg
adc
dec
fcom
xor
push
std
cmp
rcl
mov
cmps
sbb
jmp
rcr
int3
or
aas
cmp
xchg
test
lahf
mov
cs
int3
or
daa
pop
(bad)
nop
adc
into
fst
xor
ins
adc
cmps
adc
mov
mov
xor
cs
pop
(bad)
nop
adc
neg
adc
mov
adc
pop
pop
jmp
shr
int3
cmps
sbb
in
rcr
int3
or
xlat
cmp
xchg
test
lahf
mov
cs
int3
or
daa
sbb
nop
adc
jbe
adc
fldcw
cmps
adc
mov
jns
sbb
js
mov
sbb
pop
cs
sbb
nop
adc
push
fst
xor
pop
lahf
xor
cs
mov
rcl
inc
mov
icebp
js
xor
jp
mov
ja
pop
shr
push
jno
push
xor
cmp
xor
aam
cmps
das
in
int3
pop
cmp
cmp
push
in
int
cs
mov
shr
int3
cmps
in
and
in
sub
mov
ds
sar
mov
sbb
pop
cs
sbb
nop
adc
mov
adc
mov
adc
pop
push
xchg
int3
cmps
cs
xor
push
in
int
cs
push
fwait
hlt
aam
adc
cmps
cs
mov
cmps
cmp
fsub
int3
cmps
cmp
mov
sar
rcl
mov
cmps
sub
xor
push
scas
xor
icebp
js
xor
jp
mov
mov
push
jns
push
xor
cmp
pop
rcl
mov
das
in
int3
pop
cmp
cmp
push
in
int
cs
mov
shr
int3
cmps
in
and
in
sub
mov
cld
in
sar
mov
adc
adc
nop
adc
inc
(bad)
adc
mov
adc
pop
push
xchg
int
cs
xor
pop
adc
cmps
cs
sti
cmps
xchg
xchg
addps
addr16
xchg
cmps
cs
or
loopne
mov
cmps
cs
arpl
push
out
cmps
cs
pop
je
push
xor
push
out
cmps
cs
fist
adc
ficom
adc
scas
ss
mov
sub
int3
rcl
cmps
cs
hlt
xor
js
xor
js
xor
jp
pop
rcl
sbb
xor
pop
xchg
(bad)
cmps
cs
pop
pop
mov
cmps
(bad)
cmps
cs
(bad)
aam
xor
in
bound
push
pop
pop
add
xchg
adc
rcl
inc
mov
pop
xchg
movs
cs
popa
or
in
xchg
or
xor
adc
cmps
cmp
pop
cmps
(bad)
cmps
cs
(bad)
aam
xor
pop
out
cmps
cs
sti
cmps
xchg
xchg
addps
addr16
lahf
cmps
test
sbb
(bad)
cmps
cs
fcmovne
aam
xor
rcr
int3
or
push
xor
cs
dec
pop
rcl
int3
in
and
add
pop
shr
push
sbb
outs
adc
pop
mov
push
pop
pop
mov
adc
icebp
xor
stos
aaa
pop
rcr
int3
shr
in
rcl
cmps
cs
mov
sub
int3
rcl
js
xor
js
cmps
fs
cmps
cs
xchg
adc
pop
push
fcmove
sbb
xor
jmp
call
int3
cmps
add
jae
xor
cs
(bad)
pop
rcl
pop
pop
pop
xchg
ret
movs
cs
arpl
sar
(bad)
xchg
adc
in
and
retf
aaa
pop
shr
xchg
mov
pop
pop
in
xchg
adc
pop
rcl
mov
sahf
mov
jle
sbb
jp
adc
adc
fnstcw
xchg
mov
inc
mov
lea
cmp
ss
shr
les
cs
mov
sub
in
inc
dec
cs
cmps
movs
sbb
mov
vpshaq
adc
xor
fisttp
inc
shl
push
shr
adc
rcl
cdq
jbe
in
adc
pop
rcr
xor
lods
add
push
push
aad
pop
shr
push
fnsave
xor
in
push
mov
push
xor
pop
jmp
push
sub
mov
push
xor
in
push
fnstenv
xor
jmp
push
cs
pop
(bad)
nop
adc
ss
xor
lods
sbb
cmp
cmps
sbb
cli
outs
pop
rcl
mov
sbb
fwait
hlt
(bad)
in
cmps
sbb
cmp
lods
sbb
cli
jae
rcl
or
jb
movs
sbb
ins
icebp
lea
cmp
aaa
pop
shr
push
jns
push
xor
push
xor
sbb
ins
cmp
aaa
pop
shr
push
jns
push
xor
xchg
push
sub
xor
add
ins
push
mov
pop
cmp
xor
stc
cmp
sub
aam
xchg
loop
sahf
loopne
or
jb
movs
adc
inc
icebp
xchg
jmp
pop
pop
pfcmpge
adc
ins
std
lea
movs
adc
inc
cmc
lea
push
std
inc
adc
ins
int
jae
movs
adc
inc
rol
sbb
nop
adc
pop
cmovnp
xchg
adc
ins
icebp
lea
movs
adc
inc
std
mov
jmp
pop
pop
comiss
nop
adc
and
inc
dec
cs
jb
adc
pop
push
aad
inc
rcl
ins
pop
mov
icebp
dec
rcl
int3
jl
loope
pop
inc
xor
rcl
int3
jl
loope
pop
inc
xor
rcl
int3
jl
loope
pop
inc
xor
rcl
int3
jl
loope
pop
inc
xor
rcl
int3
jl
loope
pop
inc
xor
rcl
int3
jl
loope
pop
inc
xor
rcl
int3
jl
loope
pop
inc
xor
rcl
int3
jl
loope
pop
inc
xor
rcl
data16
fs
adc
pop
pop
aad
data16
repz
retf
sbb
adc
movs
fcom
inc
jo
aad
mov
push
mov
icebp
leavew
mov
push
cmp
(bad)
sbb
sub
movs
loope
pop
xchg
sbb
inc
pop
push
jmp
pop
adc
pop
mov
inc
(bad)
in
int3
push
sbb
push
cmp
aas
xor
adc
dec
rcl
inc
mov
(bad)
mov
cmc
in
rcr
adc
cdq
push
xchg
leave
stos
jg
jmp
sbb
stos
jne
mov
pop
push
pop
pop
adc
xor
adc
jl
loope
pop
inc
xor
rcl
int3
jl
loope
pop
inc
xor
rcl
int3
jl
loope
pop
inc
xor
rcl
int3
jl
loope
pop
inc
xor
rcl
int3
jl
loope
pop
inc
xor
rcl
int3
jl
loope
pop
inc
xor
rcl
int3
jl
loope
pop
inc
xor
rcl
int3
jl
loope
pop
inc
xor
rcl
int3
jl
loope
pop
inc
xor
rcl
int3
jl
loope
pop
inc
xor
rcl
int3
jl
loope
pop
inc
xor
rcl
int3
jl
loope
pop
inc
xor
rcl
int3
jl
loope
pop
inc
xor
rcl
int3
jl
loope
pop
inc
xor
rcl
int3
jl
loope
pop
inc
xor
rcl
int3
jl
loope
pop
inc
xor
rcl
int3
jl
loope
pop
inc
xor
rcl
int3
jl
loope
pop
inc
xor
rcl
int3
jl
loope
pop
inc
xor
rcl
int3
jl
loope
pop
inc
xor
rcl
int3
jl
loope
pop
inc
xor
rcl
int3
jl
loope
pop
inc
xor
rcl
int3
jl
loope
pop
inc
xor
rcl
int3
jl
loope
pop
inc
xor
rcl
int3
jl
loope
pop
inc
xor
rcl
int3
jl
loope
pop
inc
xor
rcl
int3
jl
loope
pop
inc
xor
rcl
int3
jl
loope
pop
inc
xor
rcl
int3
jl
loope
pop
inc
xor
rcl
int3
jl
loope
pop
inc
xor
rcl
int3
jl
loope
pop
inc
xor
rcl
int3
jl
loope
pop
inc
xor
rcl
int3
jl
loope
pop
inc
xor
rcl
int3
jl
loope
pop
inc
xor
rcl
int3
jl
loope
pop
inc
xor
rcl
int3
jl
loope
pop
inc
xor
rcl
int3
jl
loope
pop
inc
xor
rcl
int3
jl
loope
pop
inc
xor
rcl
int3
jl
loope
pop
inc
xor
rcl
int3
jl
loope
pop
inc
xor
rcl
int3
jl
loope
pop
inc
xor
rcl
int3
jl
loope
pop
inc
xor
rcl
int3
jl
loope
pop
inc
xor
rcl
int3
jl
loope
pop
inc
xor
rcl
int3
jl
loope
pop
inc
xor
rcl
int3
jl
loope
pop
inc
xor
rcl
int3
jl
out
pop
inc
xor
rcl
int3
jl
out
pop
inc
xor
rcl
int3
jl
out
pop
inc
xor
rcl
int3
jl
out
pop
inc
xor
rcl
int3
jl
out
pop
inc
xor
rcl
int3
jl
out
pop
inc
xor
rcl
int3
jl
out
pop
inc
xor
rcl
int3
jl
out
pop
inc
xor
rcl
int3
jl
out
pop
inc
xor
rcl
int3
jl
out
pop
inc
xor
rcl
int3
jl
out
pop
inc
xor
rcl
int3
jl
out
pop
inc
xor
rcl
int3
jl
out
pop
inc
xor
rcl
int3
jl
out
pop
inc
xor
rcl
int3
jl
out
pop
inc
xor
rcl
int3
jl
out
pop
inc
xor
rcl
int3
jl
out
pop
inc
xor
rcl
int3
jl
out
pop
inc
xor
rcl
int3
jl
out
pop
inc
xor
rcl
int3
jl
out
pop
inc
xor
rcl
int3
jl
out
pop
inc
xor
rcl
int3
jl
out
pop
inc
xor
rcl
int3
jl
out
pop
inc
xor
rcl
int3
jl
out
pop
inc
xor
rcl
int3
jl
out
pop
inc
xor
rcl
int3
jl
out
pop
inc
xor
rcl
int3
jl
out
pop
inc
xor
rcl
int3
jl
out
pop
inc
xor
rcl
int3
jl
out
pop
inc
xor
rcl
int3
jl
out
pop
inc
xor
rcl
int3
jl
out
pop
inc
xor
rcl
int3
jl
out
pop
inc
xor
rcl
int3
jl
out
pop
inc
xor
rcl
int3
jl
out
pop
inc
xor
rcl
int3
jl
out
pop
inc
xor
rcl
int3
jl
out
pop
inc
xor
rcl
int3
jl
out
pop
inc
xor
rcl
int3
jl
out
pop
inc
xor
rcl
int3
jl
out
pop
inc
xor
rcl
int3
jl
out
pop
inc
xor
rcl
int3
jl
out
pop
inc
xor
rcl
int3
jl
out
pop
inc
xor
rcl
int3
jl
out
pop
inc
xor
rcl
int3
jl
out
pop
inc
xor
rcl
int3
jl
out
pop
inc
xor
rcl
int3
jl
out
pop
inc
xor
rcl
int3
jl
out
pop
inc
xor
rcl
int3
jl
out
pop
inc
xor
rcl
int3
jl
out
pop
inc
xor
rcl
int3
jl
out
pop
inc
xor
rcl
int3
jl
out
pop
inc
xor
rcl
int3
jl
out
pop
inc
xor
rcl
int3
jl
out
pop
inc
xor
rcl
int3
jl
out
pop
inc
xor
rcl
int3
jl
out
pop
inc
xor
rcl
int3
jl
out
pop
inc
xor
rcl
int3
jl
out
pop
inc
xor
rcl
int3
jl
out
pop
inc
xor
rcl
