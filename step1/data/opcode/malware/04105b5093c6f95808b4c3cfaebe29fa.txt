push
mov
push
push
push
and
sub
jmp
push
ret
jmp
push
jmp
push
jmp
call
jmp
push
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
mov
or
add
mov
and
xchg
or
jo
add
mov
mov
mov
push
test
je
fs
rol
mov
mov
jg
movs
add
xchg
xor
push
jnp
xchg
sub
mov
jg
jmp
mov
sub
mov
punpckhbw
fld
add
jmp
sub
pop
mov
add
(bad)
mov
add
jmp
(bad)
test
fwait
add
aam
mov
test
mov
je
clc
lds
add
add
add
mov
inc
(bad)
fiadd
add
add
add
add
sub
mov
mov
add
add
(bad)
lods
push
test
add
cmp
sub
mov
dec
add
add
and
mov
jmp
mov
add
mov
jg
jmp
jmp
sub
xchg
test
jne
sti
add
add
add
add
xchg
add
cld
pop
mov
jne
add
xor
and
add
add
mov
xchg
mov
dec
je
pop
test
sbb
repnz
jnp
add
test
nop
mov
add
test
push
xor
cmp
mov
jg
push
add
add
mov
sub
mov
sub
add
je
push
pushf
add
and
add
add
mov
add
aas
jg
jmp
and
sub
mov
add
mov
and
add
add
test
add
add
(bad)
lahf
add
add
popa
add
add
add
sub
mov
mov
aas
jmp
mov
sub
mov
jg
in
add
mov
test
add
add
pop
test
add
stos
and
xor
mov
add
mov
sub
mov
inc
sti
pop
add
(bad)
jmp
retf
cdq
and
add
add
mov
jg
jmp
mov
mov
mov
push
(bad)
sub
add
adc
add
mov
sub
xor
popa
dec
psubq
inc
add
sbb
rol
add
mov
jg
pop
add
add
mov
and
add
repz
and
por
add
adc
mov
sub
mov
jnp
repz
inc
hlt
add
add
add
shr
mov
add
jmp
mov
sub
mov
cvtdq2ps
add
add
add
sub
mov
sysret
xor
mov
add
push
fs
enter
repz
add
mov
add
add
pop
add
xlat
push
(bad)
cmp
add
sub
add
add
test
add
ins
jne
cmp
add
psubq
add
inc
add
add
sub
mov
add
dec
mov
pop
and
add
add
lea
xor
cmc
mov
jg
popa
add
add
aaa
test
add
add
aam
mov
(bad)
jmp
mov
pop
push
and
test
jns
add
jg
and
repz
mov
sub
mov
and
add
jne
(bad)
loopne
add
jmp
mov
push
pop
scas
cmp
xchg
inc
lock
or
jmp
mov
sub
mov
jp
add
test
add
jmp
mov
sub
pop
das
and
lea
jne
test
or
in
jmp
mov
movs
cld
pop
in
in
test
add
add
test
pop
add
mov
dec
add
add
sub
mov
mov
add
xchg
add
jp
mov
mov
pop
out
add
mov
add
movs
test
jns
jne
mov
and
add
add
mov
mov
test
add
push
pop
add
add
add
ins
icebp
jns
stc
mov
and
add
ror
test
jbe
add
cmp
test
or
add
test
push
aam
add
jmp
push
icebp
fwait
push
add
scas
add
add
add
mov
leave
and
add
add
xchg
xor
sar
add
xor
add
jecxz
mov
mov
jo
fdiv
pushf
add
add
test
add
jne
test
add
add
mov
outs
test
jno
add
cdq
xchg
push
and
cdq
add
add
add
mov
inc
ja
push
xchg
cmp
daa
test
adc
add
push
jmp
mov
add
call
add
je
jmp
mov
sub
mov
add
test
pop
add
jmp
mov
sub
add
push
test
pushf
pop
add
in
add
fwait
test
push
add
mov
je
jmp
mov
add
sub
sbb
and
je
pop
fadd
add
(bad)
dec
and
add
add
pop
rcl
inc
and
je
push
mov
test
add
add
mov
inc
and
je
jmp
mov
sub
mov
rsqrtps
add
test
ds
and
add
add
mov
and
cmps
test
pop
retf
aam
stos
cmps
test
add
fwait
pop
mov
and
je
add
fwait
or
push
dec
test
and
fld
ss
add
mov
sub
repz
and
je
jmp
mov
and
retf
add
sub
mov
je
jmp
jmp
mov
push
sar
fwait
pop
mov
loopne
dec
je
inc
adc
push
and
add
add
xchg
mov
call
jae
pop
in
mov
mov
or
(bad)
cmove
mov
and
add
add
pop
in
(bad)
fiadd
xchg
cwde
je
add
int3
cli
repz
add
add
mov
and
add
add
scas
jae
add
and
mov
jmp
int
and
xchg
mov
mov
add
mov
mov
add
add
scas
repz
cmp
push
add
shl
scas
xor
ret
pop
add
inc
shl
and
mov
add
dec
mov
add
mov
mov
enter
cmp
sete
and
enter
add
add
mov
in
add
mov
sub
sub
add
imul
xor
pop
add
retf
add
aam
sete
xor
(bad)
ret
mov
ins
test
mov
xor
xor
add
(bad)
pop
popa
and
mov
imul
dec
fdiv
les
jb
test
xlat
jb
test
push
je
push
cmovne
test
jmp
mov
ins
mov
arpl
sbb
jge
mov
cwde
push
add
imul
push
mov
adc
add
mov
call
mov
inc
sbb
ret
cdq
and
pop
jne
(bad)
sub
add
pop
dec
inc
add
repz
push
dec
add
add
pushf
ret
mov
sbb
or
std
addr16
add
or
add
fnstenv
and
or
or
xor
retf
dec
or
popf
div
or
je
dec
add
inc
aam
out
lahf
add
add
jl
add
xor
mov
mov
mov
mov
mov
addr16
sub
mov
mov
imul
mov
dec
je
sub
dec
xchg
ret
or
add
setl
mov
and
test
aaa
test
inc
jno
test
add
add
jno
add
adc
(bad)
xor
sub
pop
add
mov
mov
xchg
add
lea
(bad)
xor
xor
in
add
sub
mov
add
imul
and
xchg
dec
xchg
ret
or
add
paddw
mov
ins
repz
or
inc
ror
add
pop
pop
jp
mov
mov
mov
mov
cld
add
dec
add
rol
jp
mov
push
jmp
setne
pushf
and
add
add
add
mov
mov
jnp
adc
loopne
add
sub
adc
add
cmp
sete
cmp
setl
mov
and
test
add
mov
jmp
in
test
cmp
add
xchg
and
add
sub
and
mov
out
push
add
(bad)
sub
push
cs
es
lock
mov
mov
(bad)
call
add
add
call
add
or
ud1
or
jg
add
setl
mov
cli
xor
or
not
add
test
ins
push
mov
je
(bad)
rol
pop
add
add
add
mov
mov
pop
add
inc
and
pop
xchg
add
test
xchg
sbb
repnz
add
mov
xchg
jns
jecxz
ds
mov
test
and
mov
xchg
adc
mov
mov
add
mov
cmp
dec
and
arpl
imul
and
cmp
sete
mov
add
pushf
push
mov
xor
and
xor
xor
mov
aad
and
jmp
nop
pop
sub
inc
and
mov
mov
or
mov
and
mov
mov
or
inc
imul
inc
or
xor
popf
retf
add
fmul
loopne
add
xchg
cmc
mov
jmp
adc
fwait
push
mov
mov
test
cmovne
add
jmp
mov
mov
mov
(bad)
xor
sbb
nop
cli
pushf
cmc
mov
enter
add
add
mov
sub
mov
mov
add
(bad)
clc
sub
mov
add
add
xchg
mov
setl
mov
pusha
mov
cmp
out
out
cmp
out
fsub
mov
mov
and
or
mov
popf
retf
xor
or
xor
sub
add
(bad)
repnz
cmovne
mov
ins
add
add
mov
mov
pushf
cmc
fucomp
loop
ss
mov
mov
cwde
pop
cmp
adc
ret
mov
or
vmwrite
shl
mov
add
add
add
xchg
retf
sub
or
add
setl
mov
xor
mov
and
aad
xor
dec
repnz
and
and
and
or
fadd
mov
ins
(bad)
xchg
test
xlat
sbb
add
daa
leave
mov
fld
add
cmp
test
or
test
jmp
mov
jmp
mov
mov
mov
mov
mov
mov
add
sub
ins
ret
fistp
repz
out
mov
jno
add
(bad)
cmc
dec
(bad)
inc
add
pushf
ret
mov
sub
cmp
and
mov
in
xor
mov
cli
in
and
mov
and
jns
rcl
fcomp
fdiv
les
mov
cld
test
mov
bswap
(bad)
xor
popa
add
mov
icebp
cmp
stc
mov
mov
mov
mov
mov
mov
aaa
sub
add
nop
fsub
add
add
dec
inc
add
add
xchg
mov
movups
mov
add
mov
add
and
pushf
(bad)
mov
and
ins
ror
hlt
or
inc
les
mov
cld
not
mov
call
add
test
pop
mov
jmp
int
mov
sar
adc
out
and
add
mov
sub
cmp
adc
scas
mov
add
cmp
mov
push
(bad)
xor
or
and
xor
sti
or
test
cld
inc
rcr
ins
add
stos
jmp
sub
add
dec
mov
mov
jo
bsf
std
push
ror
in
or
data16
add
mov
mov
and
add
add
mov
add
sbb
sub
sub
add
pslld
out
add
add
jmp
nop
add
setl
mov
sbb
cwde
int3
and
xor
cmp
xor
and
mov
and
inc
ffreep
xor
mov
and
mov
sbb
xchg
sbb
mov
and
mov
or
and
jns
mov
lock
ins
xor
jl
sbb
mov
mov
test
invd
mov
add
aas
add
add
(bad)
xor
pop
in
mov
add
test
add
add
lock
out
add
add
add
in
add
push
pop
add
add
add
mov
jmp
mov
mov
mov
xchg
sbb
add
mov
call
sub
jb
and
add
jp
xchg
xor
mov
jmp
(bad)
test
add
pop
add
mov
(bad)
test
sbb
add
add
pop
add
enter
add
pop
retf
xchg
inc
xchg
(bad)
and
xchg
add
test
ins
add
add
adc
add
and
add
retf
jns
jmp
or
add
mov
mov
adc
adc
mov
jo
add
xor
mov
jo
loope
rol
and
add
sbb
add
dec
jmp
data16
push
mov
push
push
push
and
sub
jmp
push
jmp
call
jmp
push
ret
jmp
push
jmp
push
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
or
out
adc
push
retf
or
jne
data16
mov
mov
mov
mov
mov
xchg
add
sbb
and
jae
inc
adc
rol
aad
and
mov
and
jg
jmp
mov
jge
mov
and
je
int
add
add
jl
pop
xchg
mov
jg
push
add
add
mov
cmp
outs
adc
inc
add
inc
out
enter
mov
sub
mov
and
test
lods
sub
push
adc
sub
add
loopne
dec
add
sbb
aaa
add
aam
inc
and
lods
xchg
jl
mov
bswap
sbb
test
jmp
mov
sub
add
xchg
pop
je
jmp
or
sub
fild
jg
jmp
mov
xchg
inc
adc
(bad)
fld
add
add
push
xchg
mov
pop
punpckhbw
test
push
add
cmp
ret
dec
je
jge
add
mov
inc
movs
js
xor
mov
punpcklbw
jecxz
jmp
xchg
jmp
js
xchg
test
mov
je
jmp
int3
inc
and
sub
and
cmp
iret
popa
mov
add
mov
sub
mov
and
setno
mov
push
dec
sbb
add
sub
add
xor
add
jmp
ins
inc
and
sub
mov
je
jmp
lock
and
sub
mov
rcl
sbb
add
xchg
xchg
inc
adc
test
add
add
xlat
inc
arpl
cmps
mov
and
ud0
xor
mov
lods
lods
sub
fild
packssdw
add
or
scas
add
mov
stc
inc
aam
pushf
fadd
je
jmp
scas
mov
xor
mov
inc
mov
cmp
(bad)
rol
and
jmp
mov
add
mov
mov
add
inc
adc
and
cmp
cmove
mov
jl
imul
cmp
stos
mov
mov
add
mov
sub
mov
pop
ror
dec
pop
shl
add
xchg
add
jnp
xchg
ret
mov
pushf
(bad)
mov
and
xor
mov
test
cmovne
mov
sahf
add
out
mov
mov
pop
add
add
mov
dec
aam
add
(bad)
jecxz
mov
(bad)
shl
add
mov
cmp
imul
add
xor
xchg
call
add
nop
(bad)
and
and
ret
add
inc
ror
scas
push
add
mov
mov
and
add
cmovne
and
jl
enter
mov
cmp
push
rol
inc
aam
jnp
test
jecxz
mov
push
push
mov
movs
mov
mov
in
push
add
add
inc
(bad)
repz
imul
add
cmp
sete
add
pushf
xchg
mov
xchg
fnstenv
jae
shl
xchg
add
inc
aam
inc
and
jmp
pop
xchg
js
mov
cmp
aas
pop
add
inc
mov
mov
sub
and
mov
lock
push
add
inc
sub
add
xchg
mov
setl
mov
xor
mov
(bad)
repz
and
and
inc
and
mov
cmp
pop
inc
ret
adc
ror
stos
mov
dec
(bad)
ss
fadd
xchg
imul
ins
not
adc
inc
icebp
mov
jmp
mov
arpl
fadd
push
add
and
add
push
mov
mov
add
mov
test
add
fidivr
or
push
or
add
cmp
shl
add
add
aam
jnp
add
add
out
jecxz
gs
icebp
pop
inc
pop
ret
mov
jmp
mov
jmp
nop
push
mov
push
push
push
and
sub
jmp
call
jmp
push
jmp
push
jmp
push
jmp
push
ret
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
inc
inc
or
dec
or
jge
mov
xchg
test
add
mov
mov
enter
(bad)
cwde
add
and
mov
add
mov
or
pop
out
add
jmp
mov
and
add
icebp
or
add
test
add
add
fild
add
popf
test
add
bound
mov
(bad)
and
jns
jmp
inc
test
sub
and
mov
into
add
add
mov
test
shl
add
mov
jg
jmp
mov
push
xchg
das
mov
js
test
ins
das
add
xchg
test
add
add
mov
and
es
and
add
cmp
add
add
add
outs
jge
cmp
mov
xchg
sub
jmp
mov
add
fist
ins
ror
mov
add
into
test
sub
or
mov
rol
inc
add
add
add
add
sub
mov
and
jbe
je
add
xchg
sub
cmp
sub
int3
inc
and
pop
(bad)
rcl
add
inc
add
add
cmp
nop
add
add
mov
psadbw
out
enter
add
add
and
sub
sti
pop
push
mov
ror
add
sub
mov
(bad)
loope
fld
retf
jmp
dec
pop
add
add
add
add
mov
add
(bad)
mov
jg
jmp
mov
sub
mov
setns
add
add
xor
jecxz
add
add
mov
je
jmp
and
add
add
mov
je
jmp
sbb
and
add
add
mov
pop
add
sub
repz
rcr
add
xor
inc
and
nop
test
add
dec
and
add
add
inc
test
mov
cmp
loopne
add
add
add
mov
cmp
push
retf
inc
jmp
jecxz
je
jmp
mov
nop
add
add
ins
sti
pop
push
push
inc
or
imul
sub
add
rol
cmp
inc
sahf
inc
ss
and
enter
add
inc
outs
jns
out
mov
add
add
nop
inc
inc
out
test
push
sub
or
add
dec
inc
and
je
jmp
mov
add
fwait
jns
inc
and
je
les
add
add
into
add
mov
pop
test
add
shr
add
inc
add
mov
adc
and
add
enter
add
add
push
movs
test
sub
and
add
add
icebp
test
add
adc
pop
push
mov
dec
je
sbb
mov
jmp
mov
mov
mov
add
add
inc
ror
add
pop
inc
add
mov
out
push
add
push
add
test
inc
add
in
inc
adc
push
jge
add
and
sub
mov
mov
mov
mov
mul
mov
add
mov
gs
scas
jnp
out
or
add
inc
psadbw
dec
add
add
pushf
(bad)
adc
and
repnz
test
cmovne
mov
and
enter
pusha
add
add
push
das
mov
jne
imul
mov
popf
mov
add
call
add
bound
xchg
mov
adc
add
mov
fadd
push
add
add
add
inc
and
mov
add
psrld
and
cwde
inc
add
fs
xor
hlt
xor
mov
sbb
xor
xor
add
aaa
inc
jecxz
mov
add
inc
and
and
and
rol
div
pop
hlt
sub
scas
add
aam
out
add
je
adc
inc
stc
mov
xchg
add
add
scas
pop
add
sti
or
fidivr
mov
and
add
add
ret
cmp
mov
jmp
lea
mov
mov
jmp
scas
(bad)
std
mov
jge
test
mov
mov
inc
jmp
add
imul
add
dec
inc
add
sete
adc
imul
shl
mov
cli
fcmovnbe
not
add
mov
jmp
mov
mov
mov
cmps
xor
mov
add
in
cmp
in
add
adc
mov
repz
cmp
sete
cmp
cmps
pushf
ret
mov
xor
mov
data16
xor
pop
cld
lods
std
add
int3
and
and
and
or
mov
or
xor
or
pop
test
or
cmp
mov
xchg
sub
add
mov
loope
add
add
test
xchg
inc
add
jae
pop
push
jmp
cmp
add
mov
repnz
retf
add
mov
mov
mov
call
dec
xchg
or
test
add
test
add
into
pop
inc
adc
lods
add
push
and
push
add
gs
pop
pop
pop
pop
ret
(bad)
cmp
add
mov
or
jns
sub
add
stc
(bad)
call
push
push
and
sub
jmp
push
jmp
call
jmp
push
ret
jmp
push
jmp
push
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
and
mov
js
lods
data16
cmp
pop
or
sub
mov
mov
adc
inc
dec
add
add
adc
add
pop
push
inc
test
inc
pusha
imul
add
ret
sti
and
sub
mov
je
jmp
cmp
jle
sub
cwde
inc
mov
paddq
add
jmp
mov
sahf
int
aad
mov
cvtdq2ps
add
jmp
jmp
cmps
push
nop
jmp
call
cmp
je
dec
imul
inc
retf
and
mov
lea
mov
mov
jmp
mov
mov
mov
mov
out
rol
and
sbb
pop
inc
sub
add
add
and
lea
hlt
pop
pop
pop
pop
ret
loop
(bad)
(bad)
dec
pop
add
add
push
mov
push
push
push
and
sub
jmp
push
ret
jmp
push
jmp
call
jmp
push
jmp
push
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
adc
shl
add
mov
mov
mov
arpl
mov
mov
mov
sub
dec
and
or
add
add
and
stos
(bad)
lea
inc
jbe
sbb
xchg
add
add
xor
inc
and
punpckldq
add
shr
loopne
add
mov
sub
mov
and
inc
(bad)
sbb
add
add
mov
dec
(bad)
sahf
les
sar
add
mov
mov
mov
and
call
and
psadbw
add
lods
add
jmp
js
adc
or
adc
test
add
cli
mov
inc
and
sub
mov
pop
test
add
xchg
add
xchg
(bad)
mov
jbe
and
scas
xchg
jmp
mov
retf
ja
cmps
push
les
fidiv
sbb
sbb
add
js
xchg
lock
dec
je
pop
and
add
stos
push
(bad)
cmp
sbb
add
add
mov
imul
bswap
dec
add
add
lock
arpl
mov
adc
adc
or
add
inc
jg
pop
mov
xor
sub
sbb
mov
add
shl
mov
inc
and
mov
mov
push
add
add
add
add
mov
mov
mov
xor
mov
add
add
and
sub
(bad)
cmp
sbb
scas
xchg
add
sub
cmp
test
pusha
add
dec
mov
sub
mov
je
jmp
into
inc
sbb
hlt
inc
retf
cmc
and
je
jmp
bnd
js
push
pop
jge
mov
and
punpckldq
mov
add
mov
add
jl
or
call
inc
add
jmp
jmp
aas
mov
shr
mov
cmp
cmove
outs
repz
jmp
(bad)
jle
and
mov
call
mov
mov
mov
cmp
cmovbe
mov
and
jmp
sbb
(bad)
clc
mov
mov
add
add
cli
xchg
scas
(bad)
ror
scas
add
mov
ds
mov
dec
dec
add
mov
pop
cmp
lds
cmp
mov
mov
sub
or
mov
add
in
mov
jmp
mov
push
sbb
mov
add
mov
jmp
adc
(bad)
pop
or
xchg
out
add
sbb
mov
sub
int3
jmp
add
cli
and
out
cmps
or
add
mov
xchg
(bad)
and
or
add
nop
aas
div
mov
and
xor
xor
fst
add
and
mov
and
xchg
ror
hlt
or
jecxz
mov
inc
mov
add
xlat
or
test
mov
dec
jp
mov
and
jmp
or
(bad)
pop
or
xchg
lock
mov
add
mov
repnz
sub
mov
mov
add
add
mov
cmp
sete
int
imul
rcr
ret
or
add
repnz
xchg
mov
mov
and
mov
mov
and
or
mov
or
mov
mov
das
retf
aam
out
mov
movups
xchg
and
jmp
mov
push
pop
popf
push
jmp
mov
call
add
mov
add
mov
or
and
(bad)
mov
mov
and
pusha
or
inc
dec
scas
out
mov
and
rol
add
cmps
mov
sbb
jb
jmp
data16
push
mov
push
push
push
and
sub
push
jmp
push
jmp
push
ret
jmp
call
jmp
push
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
xlat
inc
and
mov
push
inc
and
movs
adc
sub
int
loop
pop
cmp
and
xchg
sbb
add
add
add
add
arpl
and
mov
jmp
mov
sub
mov
test
add
add
jp
add
mov
cmp
mov
dec
add
add
add
add
xchg
es
mov
and
je
jmp
mov
sub
mov
test
inc
jmp
retf
das
and
sub
mov
psubd
pushf
xchg
add
enter
inc
clc
push
je
jmp
push
and
sub
mov
cmp
add
xor
inc
mov
sub
loop
and
punpcklbw
daa
jmp
lods
inc
call
mov
je
jmp
in
arpl
pop
add
add
mov
mov
and
jns
cmove
mov
jmp
mov
and
mov
mov
mov
scas
aad
jmp
icebp
mov
sub
mov
scas
repz
cmp
syscall
retf
cmp
add
setl
mov
or
mov
xor
mov
in
cld
and
and
mov
mov
and
or
or
pop
les
xor
lods
retf
push
or
test
mov
or
sbb
je
cmp
mov
xchg
add
mov
mov
mov
mov
xor
leave
xlat
add
(bad)
out
add
in
cmp
scas
xlat
and
adc
or
jo
(bad)
jmp
add
prefetchw
or
cli
xor
cmp
test
cmovne
scas
inc
and
pop
xor
inc
imul
and
gs
jmp
add
inc
mov
push
add
loop
or
rol
and
jns
or
sbb
pop
mov
inc
and
lea
pop
pop
mov
test
add
add
arpl
xchg
out
mov
test
(bad)
jmp
data16
push
mov
push
push
push
and
sub
jmp
push
jmp
push
jmp
push
ret
jmp
push
jmp
call
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
nop
add
add
out
test
add
add
mov
ret
test
add
in
sub
rol
add
test
retf
xor
add
jp
dec
mov
test
icebp
add
rol
and
and
add
add
cmp
mov
(bad)
and
add
jmp
fadd
sub
and
and
add
in
nop
sbb
mov
mov
xchg
movs
add
add
das
inc
lea
add
inc
(bad)
and
add
jmp
mov
and
add
add
mov
fadd
add
xlat
in
sbb
pop
add
repz
scas
add
sub
mov
or
test
add
mov
sub
mov
jg
jmp
mov
into
cmc
scas
cmp
mov
jmp
dec
xchg
add
add
mov
and
add
js
stos
and
ret
and
add
add
(bad)
pop
adc
add
add
and
add
retf
test
jns
add
jle
adc
dec
jp
add
add
add
sub
les
mov
add
dec
add
test
add
add
sbb
adc
add
add
jp
jmp
mov
in
add
cmps
gs
and
add
mov
pop
out
movs
jg
add
call
fnsave
and
add
adc
add
add
add
sub
mov
jg
jmp
mov
imul
test
xchg
add
jg
movs
add
add
hlt
xlat
and
add
add
push
mov
fs
add
jg
jmp
lea
sub
or
mov
mov
jp
add
mov
sub
sbb
jg
jmp
mov
and
mov
add
mov
inc
xchg
and
js
mov
add
movs
out
add
sub
mov
add
test
sub
mov
into
movs
add
icebp
test
repnz
and
fimul
add
xor
jmp
mov
inc
add
add
mov
inc
test
xchg
adc
mov
scas
add
sub
mov
xchg
(bad)
and
add
jmp
mov
fsub
repnz
or
add
mov
mov
mov
add
mov
sub
mov
inc
inc
scas
in
call
jmp
mov
sub
mov
je
jmp
mov
and
add
add
mov
nop
add
add
mov
sub
mov
and
add
addr16
and
add
adc
add
mov
sub
ds
and
repnz
jg
jmp
mov
sub
outs
test
add
add
or
jmp
mov
ror
cmp
add
add
pop
test
and
add
add
mov
and
dec
add
movaps
sbb
add
add
mov
mov
movs
dec
add
push
mov
and
add
add
mul
add
inc
in
add
add
add
sub
mov
bswap
stc
pop
ds
sub
add
mov
sub
mov
punpckhwd
dec
add
dec
add
add
add
push
in
pop
xchg
movs
gs
and
add
jge
add
pop
out
xchg
mov
icebp
test
add
jmp
mov
leave
and
add
add
add
mov
movs
add
add
mov
bswap
sbb
lods
adc
mov
and
add
mov
mov
add
and
add
jmp
mov
and
dec
add
adc
push
stos
push
xchg
add
add
je
jmp
mov
jle
mov
stos
mov
mov
in
add
jmp
lea
mov
daa
mov
cld
add
and
loopne
add
test
sub
mov
clc
add
add
ret
and
add
add
dec
xchg
test
add
stos
mov
hlt
add
add
test
(bad)
adc
add
test
lods
mov
jg
jmp
mov
sub
mov
unpcklps
out
ret
add
add
jle
add
scas
ret
test
sbb
add
(bad)
and
lods
jmp
mov
sub
mov
push
xchg
mov
test
pop
add
jmp
mov
sub
mov
jg
jmp
mov
dec
pop
add
scas
outs
test
add
je
jmp
mov
sub
mov
push
add
add
add
test
ds
test
test
add
cmp
jmp
mov
sub
mov
jg
add
pop
add
add
sbb
call
jnp
call
int3
add
mov
push
jmp
mov
sub
mov
enter
nop
add
add
add
add
mov
cmp
(bad)
mov
adc
ins
add
jmp
mov
sub
out
test
jg
jmp
or
test
das
pop
mov
test
add
add
test
pop
str
test
add
add
add
adc
mov
(bad)
and
add
pop
nop
add
dec
hlt
test
dec
push
js
and
shl
add
mov
add
mov
sub
sbb
jg
jmp
cmp
retf
ret
push
ret
call
pop
mov
in
add
adc
cs
mov
inc
mov
jg
sbb
dec
add
sbb
sbb
xchg
cmp
mov
jg
jmp
mov
dec
add
mov
mov
jns
pop
add
add
mov
and
add
add
js
ins
pushf
add
mov
add
mov
sub
mov
jg
jmp
mov
and
add
aas
mov
jg
jmp
jp
and
add
sub
mov
psubsw
add
pop
add
add
add
out
cli
jge
xor
add
or
call
test
(bad)
loop
inc
sbb
jg
jmp
mov
adc
add
sub
mov
inc
(bad)
mov
js
jmp
mov
movs
add
add
pop
(bad)
jae
jp
jmp
mov
aaa
add
add
mov
jecxz
(bad)
aaa
or
jmp
sbb
movs
add
jg
adc
cmp
add
push
add
add
add
mov
sub
or
(bad)
mov
jp
jmp
mov
imul
add
pop
jecxz
add
mov
sub
mov
jg
jmp
xchg
cld
and
add
push
or
push
jg
jmp
or
and
add
sbb
test
add
add
(bad)
iret
or
icebp
mov
mov
sub
mov
jg
jmp
mov
jle
jb
adc
add
add
add
add
or
sbb
repz
shufps
add
jmp
mov
pusha
jno
test
add
(bad)
dec
loope
add
fmul
and
sbb
in
imul
mov
add
add
mov
sub
mov
mov
add
jp
ins
movs
nop
add
lds
mov
loope
add
and
out
add
add
sub
fiadd
ja
jae
add
add
call
mov
xchg
cmp
add
inc
and
add
jmp
(bad)
mov
sub
xor
jge
add
test
push
dec
jmp
repz
movs
scas
add
sub
mov
add
jmp
icebp
add
add
test
sub
mov
mov
mov
into
or
add
add
sub
mov
inc
(bad)
and
add
add
add
mov
sub
mov
pop
and
add
add
add
mov
test
sub
dec
add
(bad)
and
add
add
add
sub
mov
sysenter
hlt
mov
dec
xchg
out
push
add
call
push
cmp
ret
mov
jg
out
add
xor
add
sub
js
mov
add
add
test
xor
add
add
mov
sub
outs
test
add
(bad)
and
add
jmp
mov
and
add
add
icebp
jecxz
adc
add
xchg
test
outs
or
add
xor
sub
bound
pop
xchg
add
inc
mov
add
add
data16
add
bound
dec
add
shr
ret
test
sbb
add
cld
ins
sbb
addr16
addr16
and
sbb
fwait
(bad)
mov
and
add
add
cmp
add
sbb
add
sbb
sub
out
test
add
mov
test
add
out
add
mov
sub
mov
and
jp
add
and
add
add
add
sub
aas
test
add
or
add
mov
test
add
sub
out
test
add
add
(bad)
and
mov
jmp
mov
addr16
inc
push
enter
xchg
lods
add
xchg
test
add
jmp
mov
sub
mov
jg
sbb
add
add
add
jg
mov
in
add
add
mov
add
jmp
mov
sub
fiadd
ja
inc
add
add
add
add
bound
in
add
bswap
xchg
ins
add
xlat
push
or
lods
mov
mov
mov
jg
jmp
mov
and
add
add
cmp
xchg
cld
inc
fadd
lods
add
push
jmp
mov
add
mov
jg
jmp
mov
aaa
add
sub
and
(bad)
aam
add
je
jle
test
add
js
sub
mov
rol
add
add
add
icebp
dec
sub
sbb
je
jmp
mov
sub
(bad)
fwait
add
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
shl
jg
jns
add
add
push
sub
mov
je
mov
pop
add
mov
sub
mov
(bad)
(bad)
and
mov
jmp
mov
sub
mov
and
add
jmp
test
add
jmp
mov
sub
push
and
add
add
jg
dec
add
add
test
add
add
(bad)
out
push
and
add
add
(bad)
jnp
add
jmp
cmp
add
test
xor
rol
jmp
movd
dec
xchg
add
dec
add
mov
and
add
jecxz
jo
sbb
sbb
jo
dec
add
push
jmp
in
test
add
pop
add
add
jg
jmp
mov
add
mov
jg
pop
add
add
add
add
lods
in
(bad)
add
nop
add
add
add
jle
js
push
icebp
test
add
lods
jecxz
mov
add
jmp
mov
call
and
dec
add
mov
pop
nop
out
add
add
jmp
mov
add
and
add
add
mov
sub
mov
jg
add
icebp
dec
xchg
mov
sub
mov
je
pop
nop
add
out
test
push
dec
push
sub
icebp
jecxz
sub
test
pop
add
jmp
mov
fwait
lods
add
pop
mov
inc
cli
add
mov
cmp
add
hlt
mov
xchg
js
add
je
jmp
mov
push
jmp
jne
ret
call
cld
sub
add
add
add
add
or
jnp
test
mov
add
jmp
push
add
and
add
add
les
je
jmp
mov
sub
mov
je
add
lea
sub
mov
je
ins
icebp
add
and
add
icebp
sub
les
movaps
cwde
xchg
add
mov
jle
mov
pop
pop
add
add
jecxz
pop
add
jmp
mov
sub
mov
add
test
adc
add
in
add
add
add
call
aad
add
dec
pushf
test
into
dec
add
mov
add
addr16
mov
and
add
jg
xlat
xchg
pop
dec
add
mov
add
mov
sub
test
(bad)
mov
call
pop
and
dec
add
sub
mov
imul
mov
push
jb
mul
add
add
xchg
add
add
mov
sub
mov
inc
lock
add
test
add
jmp
mov
sub
mov
je
jmp
mov
xor
mov
and
add
add
add
mov
sub
mov
rdpmc
add
add
fiadd
add
jp
mov
dec
add
adc
test
xor
nop
jmp
dec
jmp
mov
and
add
shl
mov
pop
or
bound
add
jmp
int
movs
nop
add
push
add
mov
xchg
sub
nop
add
test
or
dec
jmp
mov
sub
mov
inc
and
add
je
jmp
mov
sub
mov
je
jmp
mov
(bad)
fcom
mov
add
dec
(bad)
pop
push
add
jmp
push
add
popf
ret
outs
mov
dec
dec
push
js
test
out
add
add
sbb
test
add
add
test
xchg
dec
jmp
mov
and
add
jecxz
jecxz
add
add
sbb
dec
jmp
mov
xchg
mov
mov
add
mov
add
mov
movs
add
add
mov
mov
add
xchg
add
icebp
mov
mov
mov
and
add
add
add
adc
add
cmp
sub
mov
ja
dec
add
je
jmp
repz
out
add
mov
add
cmp
push
add
test
stos
add
ins
cmp
add
add
add
mov
mov
add
mov
jecxz
sbb
add
cmp
sub
mov
ja
add
add
mov
lods
retf
mov
inc
test
add
jp
outs
popa
adc
add
loopne
add
add
add
mov
in
loop
sbb
add
add
add
add
sub
ret
test
call
test
adc
js
or
add
test
ds
fisubr
ret
and
add
jp
test
iret
xchg
add
mov
adc
jns
mov
and
add
mov
test
or
out
push
test
add
add
or
fdivr
lods
je
jmp
lea
sub
mov
inc
mov
test
loopne
sub
mov
xor
psubq
push
add
add
test
add
push
sub
and
and
add
add
test
pop
add
jmp
push
test
add
cmps
mov
inc
test
or
add
rcl
and
loopne
popfw
aaa
mov
mov
enter
je
jmp
mov
sub
mov
pavgw
adc
add
xchg
add
in
adc
add
mov
and
add
add
jp
xchg
icebp
dec
add
test
add
add
mov
jo
and
add
pop
add
js
sub
out
add
jae
test
test
add
add
cmp
add
mov
fs
mov
push
add
mov
add
add
add
add
sub
mov
and
add
ja
lods
or
add
add
add
jmp
and
dec
(bad)
or
cmp
cmovne
mov
jmp
mov
jmp
cmc
cmc
retf
xor
jb
test
mov
push
add
add
lods
jae
sub
shl
(bad)
xchg
and
adc
sete
cmp
mov
add
and
add
dec
mov
cmps
add
arpl
add
(bad)
mov
xchg
xchg
(bad)
rol
mov
mov
or
test
xlat
or
les
mov
add
inc
jno
add
sbb
add
lea
mov
mov
add
mov
test
and
add
lds
call
mov
lock
js
(bad)
mov
and
add
xchg
sub
and
add
add
mov
or
add
sub
aaa
out
aad
jbe
cvtpi2ps
and
cmp
sete
jo
inc
add
and
mov
stos
add
add
xor
(bad)
sti
and
push
add
mov
and
and
ret
test
push
add
add
and
mov
and
push
add
mov
and
test
add
add
mov
or
icebp
add
rol
pop
and
add
lods
jmp
mov
jl
mov
or
and
fmul
loopne
add
inc
lods
mov
and
add
add
sbb
add
mov
cmp
and
add
mov
ret
inc
ror
add
and
add
mov
mov
mov
mov
lods
add
int
push
add
mov
add
imul
stc
out
add
addr16
add
call
mov
jno
rcr
xor
or
test
inc
inc
ror
add
adc
stos
(bad)
in
mov
mov
sbb
mov
push
add
add
push
call
add
push
add
inc
mov
sbb
add
(bad)
sub
add
inc
ds
test
add
mov
xor
xor
mov
(bad)
mov
and
add
lods
mov
out
xchg
dec
xchg
mov
or
sub
sub
test
mov
mov
repz
test
add
jmp
mov
movs
pop
sbb
mov
mov
mov
(bad)
xor
mov
add
(bad)
sub
sub
sub
sub
ret
scas
repz
add
add
add
add
add
dec
or
add
pushf
ret
mov
add
rol
dec
xor
xor
mov
(bad)
mov
lods
and
and
outs
hlt
or
xor
cmp
or
retf
xlat
or
test
mov
psubsb
gs
test
call
mov
mov
bound
add
mov
and
jo
add
add
pushf
push
out
mov
mov
mov
mov
(bad)
pusha
add
xchg
sub
shl
bswap
(bad)
and
cmps
push
add
add
xchg
inc
aaa
dec
add
test
pushf
sar
imul
jns
and
add
add
xor
mov
imul
fild
inc
xchg
add
xchg
add
test
add
mov
and
add
add
mov
add
xchg
call
daa
xchg
add
mov
mov
or
mov
xor
lock
and
add
add
cld
cmp
fmul
loopne
add
inc
retf
and
cmp
push
jecxz
fidiv
scas
enter
fsub
add
push
test
test
add
lods
add
pop
test
stos
xor
xchg
xchg
std
icebp
add
sub
add
mov
push
add
cmp
mov
add
or
lock
scas
repz
dec
add
xchg
fdivr
dec
add
setl
mov
xor
test
add
add
repnz
and
mov
add
and
or
lea
les
ins
sbb
dec
add
mov
cld
mul
mov
and
add
add
aad
mov
jmp
lea
jmp
add
jg
adc
movzx
mov
xchg
xchg
and
add
sub
test
mov
or
xor
add
mov
mov
mov
mov
add
add
add
add
add
mov
add
and
mov
and
mov
icebp
dec
inc
adc
clc
inc
add
lea
mov
movzx
add
adc
add
jmp
mov
rdpmc
mov
loop
lea
and
add
add
jmp
jp
add
push
add
and
add
add
ret
add
mov
add
mov
mov
mov
mov
lds
and
mov
and
xchg
xor
ja
sti
cmp
add
add
add
inc
add
movs
add
adc
pop
add
mov
cmp
(bad)
(bad)
int
lods
mov
test
add
mov
mov
mov
cmp
out
add
add
shl
(bad)
and
cmp
setb
cmp
setl
fsub
clc
xor
(bad)
fsubr
repz
add
icebp
mov
mov
mov
mov
inc
ret
aad
mov
and
add
jg
dec
adc
add
mov
mov
mov
mov
mov
adc
in
call
scas
clc
and
test
jmp
dec
sysret
mov
mov
mov
xor
outs
ret
xor
int3
lea
fld
mov
sub
add
add
fsub
add
add
or
movs
addr16
lock
add
add
sub
xor
or
and
or
sbb
jecxz
add
icebp
mov
test
add
adc
push
mov
mov
mov
mov
and
xor
out
add
add
test
and
jo
add
add
(bad)
xor
add
mov
and
xor
or
inc
push
add
mov
test
jg
mov
mov
jmp
fadd
push
add
add
and
call
mov
mov
cmp
jne
retf
and
add
dec
jmp
mov
jmp
lea
lea
mov
mov
call
mov
fsub
add
out
rdpmc
cdq
mov
mov
mov
add
mov
dec
xlat
jmp
lea
lea
or
cmc
mov
mov
mov
add
add
add
loope
out
mov
add
add
jno
add
dec
jg
sub
push
xlat
xchg
popa
jne
add
add
add
and
call
mov
mov
cmp
mov
mov
mov
test
add
jmp
mov
inc
sbb
add
lea
add
cmp
add
loop
mov
ja
call
repz
jae
je
rcr
sti
sahf
cmp
mov
enter
add
in
add
add
xlat
pop
aad
jp
(bad)
out
test
push
add
add
and
call
hlt
(bad)
cwde
aas
cmp
cmp
imul
add
jmp
mov
mov
mov
add
mov
mov
add
shr
dec
add
push
adc
loop
call
add
dec
or
icebp
inc
cmpxchg8b
sti
or
idiv
add
call
into
add
add
inc
adc
add
or
add
data16
push
add
add
daa
add
inc
add
add
sbb
das
inc
and
cmp
in
aaa
enter
add
pushf
rol
mov
sub
and
out
push
add
and
jns
ror
xchg
or
xor
daa
inc
enter
xor
or
and
or
test
or
cmovne
mov
pop
test
add
jmp
mov
or
adc
add
add
add
jnp
mov
call
mov
mov
cmp
mov
enter
push
jmp
cmp
xor
add
mov
mov
mov
sub
mov
add
setno
out
add
mov
inc
add
add
jb
(bad)
lods
or
add
setl
mov
jo
imul
cmovne
mov
jmp
cmp
clc
addr16
shl
add
jp
lods
add
shl
jmp
cmp
add
add
retf
cmovl
add
adc
add
out
jo
mov
add
ret
mov
xor
mov
xor
add
dec
sbb
ins
jae
add
sahf
ss
or
xor
mov
or
xor
add
or
test
mov
jo
icebp
fidiv
jmp
mov
jmp
mov
mov
mov
mov
push
cmp
sbb
repz
imul
add
sub
cmp
(bad)
dec
add
data16
inc
and
xor
sar
ror
push
jmp
lea
lea
gs
mov
and
call
mov
mov
cmp
movntps
pushf
and
repnz
xchg
mov
(bad)
xor
mov
sub
and
jo
sub
add
lahf
scas
mov
ja
add
push
ja
ret
cmp
jecxz
(bad)
mov
and
stos
sti
or
stos
or
mov
sbb
mov
xchg
xlat
mov
mov
test
in
inc
ror
add
push
add
mov
pop
jnp
ss
jle
xor
mov
fidivr
or
in
call
imul
out
add
cmp
sete
xor
leave
xor
mov
mov
push
add
add
pop
test
add
shl
or
les
and
push
les
inc
add
or
mov
add
or
sbb
jmp
mov
mov
mov
in
test
cmp
sbb
push
push
int
add
add
fnsave
push
jbe
scas
pop
or
add
mov
add
mov
or
add
setl
mov
xor
mov
imul
xchg
add
and
mov
and
(bad)
repnz
inc
arpl
adc
xlat
or
test
mov
pextrw
inc
mov
jmp
sub
ins
test
add
jmp
lea
lea
mov
and
dec
and
call
mov
mov
cmp
cmovl
mov
test
add
pop
add
(bad)
into
and
sbb
dec
mov
pop
or
call
cmc
pop
push
cmp
add
add
add
mov
mov
and
pusha
sub
add
sete
cmp
setl
mov
and
adc
shl
ret
add
or
mov
jmp
fimul
add
lea
xchg
add
out
dec
and
call
mov
push
jnp
xchg
mov
add
add
cmp
setl
and
pushf
and
add
push
add
add
add
add
imul
aam
add
add
sete
sub
les
loopne
push
adc
dec
cmovne
mov
and
push
dec
add
adc
mov
and
rol
add
and
add
jmp
mov
dec
dec
test
dec
mov
mov
push
add
add
in
adc
jmp
add
add
adc
dec
repz
add
sete
stc
jmp
lods
in
setl
icebp
xor
or
aas
mov
lock
in
and
or
mul
and
(bad)
mov
mov
cld
test
mov
cmovne
add
js
pusha
ins
lods
in
mov
mov
lea
mov
mov
add
mov
fiadd
add
cmp
xlat
adc
cmp
inc
xchg
ret
adc
or
add
setl
xor
or
test
cmovne
mov
test
mov
jmp
mov
xchg
icebp
or
add
mov
mov
in
xor
mov
sub
and
add
imul
and
cmp
(bad)
xchg
je
dec
or
add
ins
(bad)
mov
and
xor
add
inc
ror
add
add
lea
lea
mov
push
inc
add
mov
pop
add
mov
int3
add
setl
mov
add
mov
mov
stc
mov
jno
pop
sub
add
nop
and
cmp
in
mov
mov
mov
and
xor
out
add
loopne
add
adc
inc
and
and
mov
fld
and
mov
mov
or
mov
push
mov
mov
xor
push
xor
mov
pop
or
xor
or
fmul
loopne
add
inc
dec
mov
jmp
sub
xchg
push
inc
loop
xchg
inc
rol
add
aad
mov
jmp
mov
xchg
in
or
add
add
popa
xchg
lock
add
movs
mov
stos
iret
pop
add
mov
cmp
inc
test
add
xlat
push
or
lods
mov
jmp
mov
rol
dec
mov
call
lea
add
add
test
add
add
push
mov
out
sbb
add
cmp
ins
push
adc
cmp
pslld
mov
sbb
or
dec
sub
ins
pop
adc
sub
add
push
add
data16
test
in
add
aad
dec
add
mov
push
cmp
add
add
add
add
(bad)
sub
add
add
ins
push
adc
inc
or
call
or
mov
mov
aas
sub
add
jmp
mov
les
call
mov
mov
jmp
mov
mov
xor
add
add
ins
mov
test
add
add
or
call
jno
sbb
push
add
add
add
and
add
jmp
aam
aad
sbb
add
cmc
imul
mov
mov
mov
sbb
add
(bad)
out
push
dec
push
add
and
jp
loop
in
call
add
xchg
ret
cmp
mov
and
dec
sti
jecxz
test
cmovne
mov
jmp
mov
adc
mov
and
in
add
add
add
xchg
ret
dec
mov
mov
mov
mov
rol
jo
push
add
add
lods
imul
and
add
add
mov
add
setl
mov
and
mov
std
add
inc
shl
test
add
inc
pop
add
mov
pop
or
pop
rol
add
ret
inc
rcl
add
pop
pusha
lods
in
mov
mov
mov
mov
mov
push
(bad)
in
jne
out
dec
xchg
dec
add
sahf
cmovl
out
mov
add
cmp
sete
sbb
setl
mov
and
arpl
add
call
test
add
jmp
mov
mov
pop
add
mov
adc
out
add
xchg
xchg
and
xchg
int3
and
add
push
add
add
push
mov
mov
add
(bad)
sbb
push
jnp
jmp
jo
add
add
inc
xchg
mov
setl
mov
xor
mov
adc
mov
and
and
mov
fist
and
mov
dec
pop
mov
mul
and
push
lds
hlt
add
or
test
pusha
je
push
cmovne
mov
jmp
mov
pop
mov
push
js
xchg
mov
add
add
ror
add
push
pop
call
lea
add
mov
or
aaa
jmp
add
add
add
add
scas
mov
lock
xchg
add
add
cmp
add
test
xor
xor
mov
dec
mov
(bad)
and
movs
ror
hlt
or
(bad)
lock
and
or
jno
dec
adc
dec
push
xlat
movs
cld
adc
and
bt
(bad)
loop
js
inc
pop
add
add
adc
add
inc
mov
test
add
add
retf
mov
mov
mov
mov
mov
push
add
cmp
mov
add
mov
sub
pop
scas
lock
xor
or
add
setg
or
hlt
add
add
pop
mov
and
rcr
rol
or
ds
mov
daa
cmps
and
nop
fmul
inc
and
ja
mov
cmp
inc
and
in
jmp
mov
xor
mov
or
xor
or
mov
add
and
jns
add
push
test
add
add
scas
pusha
mov
add
mov
xor
rol
add
add
dec
(bad)
mov
cmp
dec
test
and
add
and
leave
xor
and
xchg
add
xor
icebp
mov
and
add
add
mov
cmp
lods
mov
mov
mov
mov
hlt
cmp
fcomp
and
lahf
lods
lock
jge
add
add
mov
xchg
jno
sti
jo
add
setl
mov
cmp
add
repnz
and
mov
and
mov
mov
and
or
mov
or
xor
or
xor
call
stc
test
mov
cmovne
add
addr16
mov
mov
mov
cmp
add
add
sti
out
adc
fwait
jmp
add
mov
cs
jmp
test
mov
add
add
mov
add
pmulhuw
mov
movs
ss
ret
inc
ror
add
push
add
add
and
xchg
add
enter
push
add
add
jp
lea
pop
ret
lea
lea
(bad)
stos
and
add
add
retf
in
cmp
es
add
test
dec
and
call
(bad)
xlat
outs
mov
add
test
jmp
(bad)
sub
add
call
add
add
test
add
add
mov
add
add
ds
add
test
test
add
jns
sub
test
add
add
push
add
adc
add
mov
mov
sub
mov
(bad)
jmp
sub
in
adc
movzx
mov
mov
add
add
add
add
mov
mov
out
add
add
mov
add
mov
add
inc
mov
in
or
xor
mov
mov
add
add
mov
out
cmp
add
add
push
add
retf
add
lods
icebp
mov
jne
std
or
pop
and
add
add
add
add
xchg
and
loopne
add
jb
add
nop
mov
and
mov
mov
mov
and
mov
mov
and
mov
call
pop
add
lea
mov
mov
pop
push
mov
mov
add
dec
add
add
mov
test
add
add
mov
(bad)
sub
add
add
inc
push
add
pop
add
lea
pop
mov
test
xor
pop
add
test
xor
pop
add
or
dec
add
test
add
(bad)
sbb
jns
out
add
add
add
push
outs
xchg
dec
pop
add
test
add
jecxz
inc
add
add
add
imul
add
dec
test
jmp
lea
lea
mov
ds
pop
add
mov
test
call
adc
and
or
add
add
test
mov
add
xchg
cld
daa
jmp
(bad)
call
aas
mov
jmp
mov
mov
add
inc
add
or
inc
jb
add
call
sub
mov
mov
inc
push
add
mov
mov
mov
mov
xchg
lea
lea
push
nop
nop
lea
mov
lea
lea
push
lea
push
mov
lea
push
nop
lea
lea
and
mov
sub
mov
mov
lea
mov
mov
mov
lea
lea
mov
lea
mov
lea
lea
lea
mov
mov
lea
mov
mov
mov
mov
mov
nop
mov
lea
call
mov
mov
lea
mov
nop
lea
mov
mov
mov
mov
lea
sub
lea
lea
mov
nop
nop
mov
mov
mov
lea
je
jmp
mov
lea
mov
lea
sub
lea
mov
mov
lea
je
jmp
nop
mov
nop
mov
sub
lea
mov
mov
lea
mov
lea
mov
je
jmp
mov
mov
lea
jmp
lea
lea
mov
nop
mov
mov
mov
mov
mov
nop
lea
lea
cmp
lea
cmovne
mov
mov
mov
mov
mov
jmp
call
nop
lea
lea
mov
nop
mov
lea
lea
jmp
lea
mov
call
nop
call
xor
mov
lea
mov
mov
mov
lea
mov
call
nop
nop
mov
nop
mov
lea
lea
mov
nop
nop
pop
nop
nop
mov
lea
pop
mov
mov
pop
lea
mov
pop
ret
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
sub
mov
mov
mov
mov
mov
mov
mov
sub
mov
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
jmp
mov
mov
mov
cmp
cmovge
mov
jmp
mov
mov
cmp
cmovle
mov
jmp
mov
mov
sub
add
add
sub
add
mov
mov
jmp
mov
mov
mov
mov
mov
add
sub
sub
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
cmovne
mov
jmp
mov
mov
mov
mov
mov
mov
mov
sub
sub
add
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
cmovne
mov
jmp
mov
jmp
mov
add
pop
pop
pop
pop
ret
mov
mov
mov
jmp
data16
push
mov
push
push
push
and
sub
jmp
push
ret
jmp
push
jmp
push
jmp
call
jmp
push
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
inc
test
leave
add
xor
add
mov
stos
test
add
add
add
aam
test
add
add
add
add
push
test
mov
add
add
test
dec
add
add
add
test
test
ja
add
enter
js
add
mov
mov
lea
mov
mov
mov
call
shr
or
mov
test
add
mov
push
pushf
out
add
test
add
jb
jmp
jo
add
mov
mov
and
add
inc
add
add
add
add
add
mov
daa
push
add
sub
mov
je
jmp
mov
sub
mov
cmp
jmp
mov
and
or
add
pop
adc
add
test
or
xchg
test
test
add
aam
out
aam
ret
pop
add
out
and
add
jmp
mov
sub
popf
test
add
add
aam
or
dec
jmp
mov
xor
cs
lods
mov
fcmovnb
and
call
add
add
dec
mov
js
inc
push
enter
add
add
add
out
ror
add
jg
mov
mov
retf
jb
or
mov
push
je
movs
out
add
add
add
mov
daa
jg
jmp
mov
sub
mov
and
adc
dec
or
push
sbb
mov
test
ja
inc
in
adc
add
add
call
add
xchg
out
and
add
add
and
xlat
and
jmp
mov
jbe
add
cmp
sub
les
(bad)
(bad)
and
xor
jmp
push
test
add
inc
xor
sub
add
je
jmp
mov
and
add
add
mov
push
movq
dec
or
ins
add
enter
jns
add
adc
aam
pop
xor
ja
cmovl
add
test
push
add
sub
test
push
call
(bad)
and
add
cld
add
and
mul
add
mov
pop
test
add
jmp
mov
sub
add
mov
lock
add
add
xchg
in
and
mov
je
jmp
arpl
sub
mov
and
add
add
(bad)
xchg
adc
add
add
add
mov
jge
int
jns
add
test
inc
add
test
test
leave
add
sbb
cmps
loope
mov
and
add
add
test
add
jmp
pop
pop
cmp
test
xor
add
test
push
lock
push
or
in
ins
xor
(bad)
clc
mov
and
add
test
and
daa
add
add
add
mov
sub
mov
add
add
push
inc
jno
add
xor
mov
mov
sbb
jno
test
add
add
(bad)
and
dec
add
add
or
mov
sbb
dec
hlt
add
add
test
xchg
add
add
call
aaa
repnz
jg
jmp
mov
and
add
add
je
jno
test
enter
test
pop
add
test
add
fwait
aaa
js
and
call
out
add
add
add
mov
xor
add
sub
mov
add
add
ja
add
inc
test
add
add
mov
add
add
test
add
daa
jmp
ins
lods
xchg
ud1
and
add
add
add
jno
mov
and
add
add
repz
add
add
(bad)
(bad)
inc
test
xor
inc
mov
add
lods
or
mov
mov
outs
fimul
add
lods
and
mov
add
ss
add
add
mov
mov
push
(bad)
(bad)
push
add
add
adc
mov
mov
mov
call
mov
mov
mov
mov
jg
add
inc
and
dec
push
add
mov
add
add
stos
push
or
mov
mov
out
aas
mov
nop
add
mov
push
add
add
popf
sub
cmp
enter
pop
pop
mov
xchg
mov
add
xchg
add
arpl
jp
je
dec
push
mov
jmp
and
and
add
add
(bad)
(bad)
inc
test
add
mov
add
xchg
push
jecxz
nop
leave
add
mov
xor
inc
and
add
aam
mov
call
jmp
add
mov
mov
add
and
mov
mov
call
mov
mov
mov
lahf
mov
add
adc
mov
mov
mov
add
call
mov
mov
int
(bad)
push
add
add
pop
adc
mov
and
mov
mov
cld
jl
or
mov
mov
push
aam
push
add
add
adc
mov
add
add
add
adc
or
aad
add
add
mov
jge
lock
add
add
and
inc
int3
or
mov
mov
sbb
add
mov
mov
jnp
imul
and
mov
mov
mov
mov
mov
dec
loopne
push
add
add
(bad)
adc
outs
inc
and
(bad)
div
cmp
les
call
jno
adc
add
mov
push
xchg
and
add
add
adc
mov
loopne
and
add
add
ret
inc
add
xchg
add
mov
mov
add
popf
adc
mov
add
inc
and
add
add
enter
dec
or
sub
add
add
push
in
(bad)
push
add
add
and
das
inc
and
mov
add
mov
and
add
add
and
add
add
mov
mov
lahf
mov
or
adc
inc
mov
sbb
and
add
daa
call
mov
mov
repnz
(bad)
push
add
add
mov
add
ret
inc
xor
xor
fsub
add
lock
ret
dec
or
mov
add
push
add
inc
xchg
adc
adc
mov
xchg
stos
inc
ror
add
add
scas
mov
add
add
dec
or
mov
mov
mov
(bad)
xchg
and
add
add
and
(bad)
xor
mov
fnstcw
add
add
popa
dec
or
mov
mov
add
xor
call
mov
mov
jg
add
mov
and
call
mov
out
adc
xor
add
mov
mov
mov
aam
add
add
adc
mov
mov
mov
fdivr
dec
or
mov
iret
push
add
push
or
push
add
daa
add
outs
push
mov
mov
call
mov
mov
mov
mov
mov
and
mov
add
inc
imul
mov
and
add
add
popf
dec
or
mov
mov
mov
call
push
xchg
and
add
adc
pop
emms
add
lods
and
add
xchg
xchg
add
add
ins
dec
or
mov
mov
mov
push
add
rol
xor
js
inc
popf
mov
mov
enter
and
xchg
add
add
add
cmp
pop
and
add
add
add
test
dec
inc
nop
and
add
add
pop
aam
jmp
cmc
add
add
add
xchg
push
mov
enter
xor
sub
add
daa
add
outs
das
call
mov
cmps
inc
add
mov
mov
mov
cmp
mov
mov
mov
mov
mov
mov
mov
or
and
inc
and
repz
and
add
adc
je
mov
add
aam
add
mov
mov
mov
add
inc
and
add
add
mov
pop
dec
or
mov
mov
and
call
mov
and
leave
xor
sbb
and
inc
and
mov
mov
dec
or
jmp
add
mov
mov
add
ja
adc
mov
jne
and
adc
xor
push
add
add
mov
mov
add
rol
in
add
in
mov
xor
mov
dec
mov
test
mov
add
add
add
inc
retf
and
add
push
jmp
dec
repz
add
add
retf
aam
je
add
(bad)
mov
adc
add
mov
out
add
adc
mov
mov
mov
or
mov
mov
mov
mov
sbb
sub
mov
scas
dec
je
inc
mov
cmp
cmove
inc
mov
je
add
add
mov
add
mov
call
add
or
mov
add
cld
or
mov
popf
and
and
mov
pushf
inc
and
test
dec
or
lea
js
add
mov
ret
call
mov
mov
mov
and
add
and
add
add
sub
ds
add
adc
fadd
add
add
clc
mov
enter
je
dec
add
add
add
add
inc
rcr
jmp
jg
adc
add
add
mov
add
das
inc
mov
or
add
rol
and
add
or
add
or
test
test
add
test
add
add
test
je
adc
mov
test
aam
fld
ins
sahf
loop
jle
loope
mov
in
push
add
add
and
jmp
adc
xor
mov
and
cmp
pop
(bad)
mov
or
xor
add
fdiv
shl
add
pop
jmp
and
hlt
or
and
mov
mov
cld
jae
add
adc
shl
mov
shl
aam
add
add
mov
mov
mov
mov
xor
inc
and
push
add
add
dec
and
call
mov
mov
mov
mov
mov
inc
inc
adc
inc
and
xchg
add
add
dec
and
call
mov
mov
mov
pop
xchg
and
add
dec
mov
mov
and
mov
mov
dec
or
mov
mov
mov
mov
les
mov
mov
mov
and
call
dec
add
daa
aam
movs
add
mov
mov
mov
mov
(bad)
lods
and
add
mov
(bad)
and
cld
lds
add
repz
push
add
mov
add
add
push
add
inc
in
or
add
add
xchg
inc
or
sub
add
ins
push
mov
mov
push
add
dec
add
and
das
inc
scas
jg
add
add
imul
adc
mov
xchg
mov
push
add
add
mov
mov
retf
inc
mov
add
and
call
mov
(bad)
xchg
adc
add
add
cwde
add
(bad)
xlat
and
add
push
add
loopne
push
add
pop
push
scas
sbb
sbb
inc
mov
add
cmc
add
cmp
sub
add
xor
xor
mov
cmp
adc
and
mov
mov
and
mov
mov
rcl
mov
or
mov
inc
and
mov
or
mov
in
shr
xor
cld
push
add
fmul
loopne
out
push
retf
and
add
sbb
mov
add
add
or
mov
xor
adc
add
add
and
pop
pop
mov
mov
mov
ja
adc
outs
dec
and
jne
xor
mov
call
mov
mov
mov
mov
mov
and
rcl
inc
and
add
add
add
adc
nop
add
mov
out
add
adc
mov
and
mov
mov
(bad)
xlat
inc
or
into
out
mov
mov
add
mov
mov
jns
and
inc
and
retf
inc
and
add
ja
inc
dec
and
call
lea
add
add
xor
(bad)
push
add
xchg
and
add
add
add
inc
lock
push
add
add
dec
and
call
mov
mov
mov
mov
mov
mov
xchg
or
add
add
dec
inc
or
jmp
mov
mov
mov
test
and
mov
sbb
and
test
inc
or
mov
mov
mov
mov
dec
ficom
and
inc
and
(bad)
into
and
ja
add
outs
dec
and
pop
icebp
inc
or
mov
add
mov
mov
jmp
nop
push
mov
push
push
push
and
sub
jmp
push
jmp
push
jmp
push
jmp
push
ret
jmp
call
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
or
std
in
fsubr
push
add
add
mov
mov
mov
mov
mov
jle
mov
jae
(bad)
and
sub
add
mov
pop
stos
in
push
xchg
mov
(bad)
(bad)
fild
add
jns
dec
mov
retf
mov
jns
mov
and
fild
jg
jmp
mov
sub
je
shr
inc
add
test
nop
add
push
add
add
retf
stos
add
sub
mov
jno
and
fild
test
test
add
add
sar
popa
lods
cwde
add
inc
xlat
test
jp
jmp
and
sub
mov
jg
jmp
mov
jae
pop
sbb
loopne
test
add
add
fdivr
add
mov
mov
addr16
add
sub
mov
jae
add
jne
and
add
stos
add
add
add
sub
mov
mov
add
je
mov
mov
sub
mov
bswap
and
add
jmp
icebp
test
stos
add
sub
mov
psubd
add
jmp
mov
and
add
add
sub
jg
jmp
mov
sub
jo
and
dec
test
fadd
jns
jnp
stos
mov
into
add
add
mov
jg
call
and
add
add
cmps
push
cs
fst
add
jmp
mov
mov
add
sub
sbb
lock
and
add
mov
add
das
sbb
test
add
mov
mov
std
sub
add
bswap
and
fadd
jmp
mov
push
pop
retf
pusha
jmp
mov
adc
mov
mov
add
sub
mov
jp
add
add
add
lds
sub
mov
rol
repz
jae
cmps
shl
pop
add
(bad)
and
mov
jg
stos
add
add
mov
sub
mov
movs
test
jecxz
inc
jmp
mov
sub
mov
jg
jmp
sub
sub
mov
prefetchw
add
xchg
nop
add
mov
add
arpl
adc
inc
jg
xchg
fild
push
mov
sub
mov
je
jmp
outs
test
add
xchg
cld
cmp
jnp
jp
add
mov
sub
mov
and
xor
add
add
and
add
dec
jl
pushf
mov
lock
add
jp
stos
out
inc
xchg
mov
add
mov
mov
rcl
sbb
bsf
add
add
pop
add
nop
mov
mov
cld
add
add
out
cmp
cmc
sbb
sub
mov
mov
add
out
add
sbb
xchg
mov
xchg
add
xor
push
out
out
and
mov
and
ja
pop
add
inc
and
and
and
and
or
xor
xlat
fcomp
add
aam
retf
add
adc
add
add
call
xchg
inc
sbb
mov
cmp
syscall
ret
dec
mov
and
add
cmc
xor
mov
mov
add
sub
(bad)
jmp
xor
push
imul
jl
add
add
cmp
cmovl
cmp
jne
mov
xor
or
fadd
ficom
inc
ror
sub
add
mov
add
fcmovnu
add
test
lock
ror
add
dec
add
add
and
test
add
cs
push
pop
loopne
xor
add
mov
mov
mov
mov
sar
mov
aam
push
add
add
inc
(bad)
clc
add
(bad)
clc
jle
add
add
add
jmp
add
xor
mov
xor
xor
mov
and
js
mov
mov
and
mov
and
outs
inc
and
and
dec
das
sbb
test
xor
or
pop
call
xchg
and
jno
icebp
push
stos
push
cdq
add
add
mov
pop
ds
and
add
add
mov
mov
add
push
xlat
adc
out
add
add
sub
imul
sbb
stos
out
xchg
ret
(bad)
dec
add
cs
mov
jmp
inc
sti
or
fist
sar
add
inc
add
or
add
xor
pop
jmp
mov
mov
ret
xchg
mov
inc
add
cmp
inc
and
push
add
add
aaa
and
adc
sub
ja
jbe
sbb
stos
sub
and
in
mov
jge
mov
inc
add
sbb
mov
mov
mov
call
sub
ret
in
fdiv
adc
cmp
call
fild
push
add
cmovne
mov
mov
adc
sahf
add
add
inc
repz
out
mov
mov
mov
mov
aam
push
add
dec
and
mov
add
out
add
add
add
(bad)
mov
jmp
add
adc
dec
outs
(bad)
and
mov
and
mov
pop
push
mov
ror
test
test
cmp
aam
out
add
and
cmovne
mov
mov
add
adc
add
mov
inc
imul
add
add
add
mov
add
add
mov
scas
jmp
add
out
add
add
add
sbb
add
add
pushf
(bad)
mov
and
repnz
mov
add
inc
rol
mov
fild
mov
jmp
mov
add
jmp
and
add
push
add
add
mov
(bad)
adc
mov
add
imul
cs
push
add
rol
lea
hlt
pop
pop
pop
pop
in
mov
jmp
mov
mov
push
mov
jmp
outs
or
inc
mov
mov
mov
jmp
nop
push
mov
push
push
push
and
sub
jmp
push
jmp
push
jmp
call
jmp
push
ret
jmp
push
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
add
jmp
and
jb
and
mov
and
ins
rol
cmp
dec
cmps
dec
and
jg
xlat
add
rol
inc
and
sub
scas
loope
inc
mov
pop
jmp
mov
sub
mov
inc
setae
rol
mov
shl
pop
mov
sbb
add
or
in
mov
mov
mov
jg
jmp
mov
sub
mov
setl
add
movs
sub
add
ds
xor
enter
(bad)
sbb
add
add
mov
sub
sub
mov
je
jmp
mov
lahf
sbb
and
pop
(bad)
sbb
add
mov
inc
and
sub
mov
cwde
test
add
jmp
mov
xchg
dec
sub
dec
pop
add
stos
(bad)
sbb
add
add
mov
jle
sub
mov
sets
dec
add
add
enter
dec
inc
and
setl
movs
imul
test
outs
mov
pmaxub
add
add
and
sub
mov
adc
test
add
shr
mov
add
inc
add
add
mov
mov
sbb
inc
ror
pop
add
mov
mov
mov
xchg
mov
sub
cmps
out
add
imul
and
cmp
mov
cmp
pop
mov
inc
xor
push
shl
ret
add
inc
and
enter
int3
add
dec
add
sar
mov
mov
lahf
in
add
mov
mov
add
sub
out
xchg
pop
pusha
sub
scas
and
fadd
add
add
sbb
(bad)
or
add
setl
cmp
and
sti
or
xchg
add
test
mov
jmp
inc
test
mov
pop
push
xchg
fadd
adc
or
add
mov
in
add
mov
mov
add
cmp
(bad)
(bad)
clc
and
call
add
xchg
(bad)
fdivrp
or
add
add
cmp
mov
xchg
mov
scas
repz
mov
sub
mov
mov
or
ror
test
fadd
add
aam
out
(bad)
daa
cs
icebp
ins
je
push
mov
pop
mov
mov
mov
xchg
xor
mov
mov
mov
call
xor
adc
add
xor
cmc
dec
(bad)
adc
out
add
add
add
xchg
mov
pop
pushf
ret
scas
push
jmp
jnp
mov
mov
nop
(bad)
mov
xchg
and
and
adc
or
xor
dec
inc
and
test
or
movs
xlat
enter
add
sub
cmp
and
jmp
pop
push
and
and
fistp
aas
shl
inc
and
enter
iret
or
and
cmp
mov
dec
pop
inc
add
in
push
push
sub
mov
mov
mov
mov
mov
mov
mov
sub
mov
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
jmp
mov
mov
mov
mov
mov
sub
mov
add
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
cmovne
mov
jmp
mov
mov
mov
mov
cmp
setne
and
mov
mov
mov
mov
sub
sub
add
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
cmovne
mov
jmp
mov
mov
mov
test
cmovne
mov
jmp
mov
mov
mov
movsx
mov
xor
mov
xor
xor
mov
and
and
mov
and
mov
and
or
or
xor
or
xor
mov
or
and
or
mov
sub
add
add
mov
mov
shl
mov
mov
jmp
mov
mov
mov
sub
mov
sub
add
sub
mov
mov
jmp
mov
add
pop
pop
pop
pop
ret
mov
jmp
nop
push
mov
push
push
push
and
sub
push
jmp
push
jmp
push
ret
jmp
call
jmp
push
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
or
adc
jne
add
mov
mov
and
mov
mov
rol
add
add
inc
and
jo
rol
and
mov
or
retf
or
test
lods
add
add
mov
sub
mov
paddw
add
add
mov
sub
mov
and
je
aam
addr16
or
sub
mov
and
jg
jmp
mov
inc
sub
mov
test
or
and
cli
call
sbb
test
data16
jmp
jnp
and
sub
mov
arpl
test
add
push
jmp
mov
sub
stc
inc
and
jb
jmp
mov
xchg
mov
jo
inc
and
data16
xlat
inc
cmp
add
mov
jmp
pop
cmps
out
inc
push
and
cmp
or
mov
add
add
mov
jo
(bad)
repz
lock
add
pop
sub
add
add
add
pop
cli
inc
push
and
mov
push
mov
xor
sahf
and
data16
aaa
mov
mov
(bad)
out
mov
test
mov
and
and
xor
and
pop
scas
mov
mov
dec
dec
and
mov
mov
and
jbe
mov
add
add
inc
cmp
add
add
inc
sbb
lock
and
call
add
mov
mov
and
sub
add
add
and
shl
test
xor
cmp
into
jmp
lea
pop
ret
cdq
aaa
(bad)
(bad)
jmp
data16
push
mov
push
push
push
and
sub
jmp
push
jmp
call
jmp
push
jmp
push
ret
jmp
push
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
mov
fsubr
mov
adc
xchg
and
add
add
add
(bad)
inc
mov
add
mov
test
add
push
test
add
add
test
test
mov
cwde
add
add
inc
ds
sbb
add
jg
(bad)
sbb
add
into
mov
mov
sub
mov
mov
mov
jg
jmp
inc
test
add
add
mov
arpl
cmp
add
add
mov
jp
fadd
sub
mov
rcl
add
add
mov
sub
mov
je
jmp
mov
test
(bad)
and
add
jmp
mov
push
aaa
mov
pop
js
test
add
add
sbb
add
mov
xchg
add
add
mov
pop
(bad)
rol
iret
add
add
add
mov
xor
xor
cmovbe
add
add
mov
outs
sub
mov
xor
cmp
add
sbb
push
add
mov
jg
sbb
and
jg
push
leave
add
add
adc
fmul
(bad)
clc
add
add
pop
jp
repz
and
sbb
add
inc
push
and
ror
pop
mov
into
mov
sub
inc
inc
stos
pop
jg
inc
add
add
inc
test
outs
repnz
mov
push
cmc
and
push
add
mov
add
mov
sub
rol
je
jmp
mov
and
adc
popa
retf
mov
je
xchg
add
repz
add
sub
xchg
inc
and
je
jmp
mov
popf
test
cwde
iret
mov
je
jmp
inc
test
add
fisubr
mov
je
jmp
in
cmps
scas
pushf
add
jne
mov
xlat
inc
je
icebp
mov
test
add
push
loop
or
cs
inc
and
je
jmp
mov
inc
fwait
sahf
ret
xor
ja
add
jmp
fld
sub
mov
mov
mov
ficom
inc
push
add
add
add
inc
retf
fimul
(bad)
cmp
repz
mov
loop
call
and
push
xor
add
mov
add
add
sub
mov
and
std
test
add
jmp
mov
mov
mov
mov
mov
fstp
add
add
repz
repz
cmp
pcmpgtd
cmp
xor
sahf
mov
and
div
add
inc
ror
sbb
inc
add
push
mov
mov
mov
and
retf
in
mov
jnp
and
shl
and
jp
imul
push
mov
mov
mov
dec
(bad)
pushf
fnsave
add
add
mov
add
add
add
xchg
dec
cmp
setl
mov
and
and
mov
add
inc
dec
mov
add
cmp
add
(bad)
sar
add
jmp
mov
loope
mov
mov
mov
mov
jmp
iret
and
ficom
test
in
inc
pusha
pop
jo
out
pushf
add
fld
xchg
mov
setl
test
xor
cwde
stos
add
and
mov
in
pop
stos
add
ror
cs
xor
and
shr
pop
and
or
je
and
leave
icebp
mov
retf
add
sahf
add
add
or
mov
add
movs
add
add
pop
std
cmp
in
and
add
push
mov
xchg
sbb
or
iret
mov
xchg
clc
add
push
pop
ss
cmp
add
add
adc
shl
jb
add
xor
mov
and
and
mov
jnp
and
mov
and
mov
and
or
push
mov
xor
adc
add
aam
out
jge
mov
and
push
inc
pop
inc
(bad)
add
add
out
add
repnz
mov
and
add
add
xor
cmovne
mov
and
add
add
add
add
dec
and
push
add
add
add
(bad)
dec
and
add
pop
add
in
push
add
add
movs
add
add
jo
mov
sahf
mov
and
pushf
add
addr16
push
add
cvtps2pd
mov
jmp
jbe
gs
iret
mov
mov
pushf
mov
add
nop
mov
add
sub
mov
mov
std
mov
push
mov
mov
push
mov
aaa
mov
or
xor
jbe
or
mov
pop
jp
mov
mov
iret
mov
mov
cmp
cmove
test
cwde
add
add
out
add
add
and
fiadd
add
adc
test
add
add
aam
add
cld
test
add
pop
push
or
jns
les
add
mov
and
add
add
sbb
sub
mov
mov
jmp
inc
jmp
lods
add
mov
mov
shr
mov
mov
call
mov
mov
mov
call
lea
out
xchg
pop
pop
ret
add
mov
add
mov
xchg
add
mov
sti
jmp
sub
mov
mov
inc
inc
and
call
mov
mov
jmp
mov
jmp
nop
push
mov
push
push
push
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
mov
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
jmp
mov
mov
mov
cmp
cmovb
mov
jmp
mov
mov
mov
mov
mov
mov
mov
jmp
mov
sub
add
add
mov
mov
jmp
mov
mov
mov
mov
mov
mov
sub
sub
add
imul
and
cmp
sete
cmp
setl
mov
xor
mov
mov
xor
xor
mov
and
and
mov
and
and
or
or
xor
mov
or
xor
or
and
or
test
mov
cmovne
mov
jmp
mov
mov
mov
mov
mov
mov
mov
mov
sub
sub
add
imul
and
cmp
sete
cmp
setl
mov
xor
mov
mov
xor
xor
mov
and
and
mov
and
and
or
or
xor
mov
or
xor
or
and
or
test
mov
cmovne
mov
jmp
mov
add
pop
pop
pop
pop
ret
mov
jmp
data16
push
mov
push
push
push
and
sub
jmp
push
ret
jmp
push
jmp
push
jmp
call
jmp
push
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
mov
sbb
repnz
and
push
add
add
dec
mov
and
test
mov
jo
add
jno
inc
and
add
add
and
pop
aad
mov
mov
jb
inc
and
mov
jae
jg
jmp
mov
sbb
mov
sysret
popf
call
add
mov
inc
push
pop
jg
jmp
mov
inc
mov
push
jg
jmp
mov
sub
mov
mov
add
jmp
mov
sub
jb
cmp
xchg
add
add
fwait
mov
and
sub
clc
inc
and
in
test
add
add
sbb
pop
(bad)
mov
push
mov
inc
fmul
fld
jne
jmp
mov
pop
je
mov
mov
out
add
jmp
add
sub
mov
cvttps2pi
sbb
add
mov
sub
mov
jg
jmp
dec
mov
sub
mov
je
jmp
mov
xchg
imul
and
cs
add
add
add
mov
adc
and
sub
mov
je
jmp
mov
sub
pop
add
add
add
add
cmp
adc
mov
(bad)
fadd
add
mov
mov
(bad)
cmp
hlt
test
lods
and
pop
sbb
xchg
add
add
adc
mov
fcmovnb
push
xchg
add
inc
pushf
dec
lea
add
and
sub
mov
and
hlt
test
add
jmp
mov
mov
push
adc
test
(bad)
jmp
mov
and
sub
es
and
punpckldq
add
add
pop
clc
add
pop
cwde
movs
das
jbe
adc
cmp
and
adc
jge
and
jmp
pop
push
push
nop
stos
mov
mov
ins
add
lea
add
xchg
(bad)
push
add
add
inc
and
mov
clc
and
xor
xchg
(bad)
pushf
(bad)
jno
dec
setnp
dec
and
std
ret
xor
or
and
and
inc
and
mov
fwait
add
(bad)
and
mov
fcmovne
sub
je
or
lods
xor
sub
imul
and
or
or
inc
icebp
mov
test
add
mov
mov
mov
mov
xor
jae
xor
inc
dec
cmp
mov
in
jne
add
out
fucomip
lock
inc
and
into
icebp
and
scas
add
invd
push
loop
inc
dec
fidiv
jmp
(bad)
or
mov
mov
and
xchg
jl
je
mov
cli
inc
and
cmp
enter
out
pop
mov
mov
add
mov
mov
(bad)
push
add
ret
sub
sub
add
inc
scas
cmp
cmp
sete
pushf
or
add
setl
mov
cmp
retf
and
std
push
out
and
mov
mov
and
mov
mov
and
or
imul
or
xor
and
add
leave
or
div
add
inc
ds
jl
push
add
inc
cmps
mov
fidivr
add
add
add
adc
mov
mov
mov
(bad)
pop
and
inc
cmps
mov
add
mov
mov
mov
jg
xchg
(bad)
push
add
xlat
or
out
add
add
and
scas
xlat
and
cmp
push
in
add
mov
and
test
cmovne
ret
push
add
sbb
fs
(bad)
push
add
add
or
add
add
inc
(bad)
std
(bad)
fist
jl
and
cs
add
add
sub
add
xlat
cmp
fidivr
jns
ret
inc
sar
outs
outs
cs
rol
xor
jl
xorps
add
mov
outs
jo
add
sbb
dec
and
mov
jb
add
add
pop
test
(bad)
dec
push
and
or
out
mov
xchg
sub
sub
inc
hlt
(bad)
xchg
mov
and
mov
pop
mov
in
mov
jmp
and
xor
add
xlat
sub
adc
ret
xlat
xor
mov
mov
popa
je
cld
xchg
out
mov
jmp
cmp
and
(bad)
push
sub
jmp
nop
push
mov
push
push
push
sub
mov
mov
mov
mov
sub
mov
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
jmp
mov
mov
mov
mov
mov
sub
mov
add
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
cmovne
mov
jmp
mov
mov
mov
mov
cmp
setb
and
mov
mov
mov
sub
mov
mov
add
imul
and
cmp
sete
cmp
setl
mov
xor
mov
xor
xor
mov
and
and
mov
mov
and
mov
mov
and
or
mov
or
xor
or
xor
or
and
or
test
mov
cmovne
mov
jmp
mov
mov
mov
test
cmovne
mov
jmp
lea
mov
mov
mov
movzx
mov
mov
sub
sub
mov
mov
movzx
mov
mov
mov
mov
add
add
mov
mov
add
mov
imul
add
mov
mov
mov
mov
mov
call
mov
jmp
mov
mov
sub
sub
mov
mov
jmp
add
pop
pop
pop
pop
ret
mov
jmp
data16
push
mov
push
push
push
sub
mov
mov
mov
mov
sub
mov
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
jmp
mov
mov
cmp
cmovb
mov
jmp
mov
mov
mov
mov
mov
mov
sub
mov
mov
add
imul
and
cmp
sete
cmp
setl
mov
xor
mov
xor
xor
mov
and
and
mov
mov
and
mov
mov
and
or
mov
or
xor
or
xor
or
and
or
test
mov
cmovne
mov
jmp
lea
mov
mov
mov
movzx
mov
mov
mov
sub
mov
sub
add
sub
mov
mov
movzx
mov
mov
mov
mov
add
add
mov
mov
add
mov
mov
shl
add
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
add
sub
sub
imul
and
cmp
sete
cmp
setl
mov
xor
mov
mov
xor
xor
mov
and
and
mov
and
and
or
or
xor
mov
or
xor
or
and
or
test
mov
cmovne
mov
jmp
mov
jmp
mov
add
add
sub
mov
mov
jmp
add
pop
pop
pop
pop
ret
lea
mov
mov
movzx
mov
mov
sub
mov
mov
movzx
mov
mov
mov
mov
add
add
mov
mov
add
mov
mov
shl
add
mov
mov
mov
mov
mov
call
mov
jmp
xchg
push
mov
push
push
push
sub
mov
mov
mov
sub
mov
add
imul
and
cmp
sete
and
mov
cmp
setl
and
mov
mov
mov
mov
sub
mov
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
jmp
mov
mov
mov
mov
mov
and
xor
or
test
cmovne
mov
jmp
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
call
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
sub
mov
add
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
mov
mov
cmovne
mov
jmp
mov
jmp
mov
mov
mov
cmp
cmovb
mov
jmp
mov
mov
mov
mov
mov
mov
add
sub
sub
imul
and
cmp
sete
cmp
setl
mov
xor
mov
mov
xor
xor
mov
and
and
mov
and
and
or
or
xor
mov
or
xor
or
and
or
test
mov
cmovne
mov
jmp
lea
mov
mov
mov
movzx
mov
mov
mov
mov
sub
mov
mov
mov
movzx
mov
mov
mov
mov
mov
mov
mov
mov
add
add
mov
mov
mov
add
mov
mov
mov
mov
shl
add
sub
mov
mov
mov
mov
mov
call
add
mov
mov
mov
mov
mov
sub
mov
add
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
cmovne
mov
jmp
mov
jmp
mov
mov
mov
mov
mov
mov
sub
sub
add
imul
and
cmp
sete
cmp
setl
mov
xor
mov
mov
xor
xor
mov
and
and
mov
and
and
or
or
xor
mov
or
xor
or
and
or
test
mov
cmovne
mov
jmp
mov
mov
mov
mov
sub
add
add
mov
mov
mov
mov
mov
sub
sub
add
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
cmovne
mov
jmp
mov
jmp
lea
pop
pop
pop
pop
ret
mov
call
mov
mov
mov
jmp
lea
mov
mov
mov
movzx
mov
mov
mov
mov
sub
mov
mov
mov
movzx
mov
mov
mov
mov
mov
mov
mov
mov
add
add
mov
mov
mov
add
mov
mov
mov
mov
shl
add
sub
mov
mov
mov
mov
mov
call
add
mov
jmp
mov
mov
add
add
sub
mov
mov
mov
jmp
nop
push
mov
push
push
push
sub
mov
mov
mov
mov
mov
mov
sub
mov
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
jmp
mov
mov
mov
cmp
cmovne
mov
jmp
mov
mov
mov
jmp
mov
mov
mov
mov
mov
mov
add
sub
sub
imul
and
cmp
sete
cmp
setl
mov
xor
mov
mov
xor
xor
mov
and
and
mov
and
and
or
or
xor
mov
or
xor
or
and
or
test
mov
cmovne
mov
jmp
mov
mov
lea
mov
mov
mov
call
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
sub
add
imul
and
cmp
sete
cmp
setl
mov
mov
and
xor
or
test
cmovne
mov
jmp
mov
jmp
mov
mov
mov
mov
mov
add
sub
sub
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
cmovne
mov
jmp
mov
mov
mov
mov
mov
mov
mov
mov
sub
mov
mov
add
imul
and
cmp
sete
cmp
setl
mov
xor
mov
xor
xor
mov
and
and
mov
mov
and
mov
mov
and
or
mov
or
xor
or
xor
or
and
or
test
mov
cmovne
mov
jmp
mov
add
pop
pop
pop
pop
ret
mov
mov
lea
mov
mov
mov
call
sub
mov
mov
mov
mov
mov
mov
jmp
mov
jmp
nop
push
mov
push
push
push
and
sub
mov
mov
mov
mov
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
mov
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
jmp
mov
mov
mov
mov
mov
mov
sub
sub
add
imul
and
cmp
sete
cmp
setl
mov
xor
mov
mov
xor
xor
mov
and
and
mov
and
and
or
or
xor
mov
or
xor
or
and
or
test
mov
cmovne
mov
jmp
mov
mov
mov
cmp
setb
and
mov
mov
mov
mov
add
sub
sub
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
cmovne
mov
jmp
mov
mov
mov
test
cmovne
mov
jmp
mov
mov
mov
mov
mov
mov
jmp
mov
mov
mov
sub
mov
sub
add
sub
mov
mov
jmp
mov
mov
mov
mov
mov
sub
mov
add
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
cmovne
mov
jmp
mov
mov
mov
mov
mov
mov
mov
mov
sub
sub
add
imul
and
cmp
sete
cmp
setl
mov
xor
mov
mov
xor
xor
mov
and
and
mov
and
and
or
or
xor
mov
or
xor
or
and
or
test
mov
cmovne
mov
jmp
mov
lea
pop
pop
pop
pop
ret
mov
jmp
mov
jmp
xchg
push
mov
push
push
push
and
sub
jmp
call
jmp
push
jmp
push
jmp
push
jmp
push
ret
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
mov
and
mov
jmp
add
and
mov
call
mov
cmps
jmp
mov
(bad)
fistp
add
and
sub
mov
xchg
test
xor
loop
lock
sbb
mov
push
arpl
jmp
mov
push
xchg
mov
je
jmp
loopne
add
scas
cmc
fistp
cmc
in
aaa
(bad)
fld
sub
mov
sub
mov
xchg
add
add
out
and
sub
dec
inc
and
jg
iret
add
add
mov
jnp
sub
mov
jg
jmp
mov
sub
mov
je
call
mov
and
lods
in
cmps
push
adc
and
xor
xchg
add
and
or
or
inc
and
pand
add
push
jmp
mov
iret
repz
je
jmp
mov
pop
sub
sub
sbb
dec
test
add
and
mov
repnz
inc
xchg
aas
mov
test
sbb
add
lods
inc
and
pusha
inc
movs
fistp
and
je
jmp
jmp
mov
mov
mov
jo
pop
add
add
clts
ror
add
add
and
add
mov
mov
mov
xchg
rol
ret
mov
mov
cmp
cmovne
mov
jmp
(bad)
pop
and
cmc
add
add
inc
and
dec
hlt
fistp
or
add
and
mov
xor
sar
add
add
in
push
add
add
(bad)
adc
cmp
inc
and
mov
and
call
mov
(bad)
jp
pusha
(bad)
fistp
add
mov
mov
inc
push
add
add
mov
mov
mov
shl
mov
add
imul
add
mov
add
add
(bad)
(bad)
arpl
jno
aas
add
pushf
shl
sti
pop
add
repnz
mov
and
loopne
mov
sbb
inc
and
mov
and
and
std
(bad)
pop
neg
hlt
add
or
inc
mov
cmovne
mov
pusha
jmp
mov
mov
mov
mov
mov
lock
push
add
add
jge
lea
add
inc
nop
inc
arpl
out
add
sar
add
cmc
imul
(bad)
aad
sub
or
test
xor
xor
popa
cld
and
and
inc
and
sbb
and
pop
(bad)
cmps
fdiv
les
mov
cld
test
mov
and
pop
inc
jmp
imul
lods
dec
and
lea
pop
pop
pop
mov
inc
sbb
pop
outs
push
leave
jmp
data16
push
mov
push
push
push
and
sub
jmp
call
jmp
push
ret
jmp
push
jmp
push
jmp
push
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
sbb
fmul
adc
add
js
and
mov
mov
mov
mov
mov
add
inc
je
push
and
mov
sub
mov
pop
ds
jg
jmp
sbb
ficom
call
push
fild
cwde
add
add
and
sub
mov
jg
jmp
mov
pop
push
sti
adc
dec
psubsb
add
add
inc
rcr
jns
push
jno
push
dec
(bad)
add
add
(bad)
add
aam
inc
and
pop
mov
or
add
add
push
add
add
inc
sti
adc
inc
je
jmp
mov
sub
sti
out
and
paddb
add
add
mov
sub
mov
out
push
icebp
jmp
mov
sub
mov
push
ror
add
scas
add
out
add
inc
and
pop
lds
test
rol
stos
mov
sub
mov
jg
jmp
mov
jne
jnp
inc
mov
sub
test
xchg
add
pop
mov
pop
push
cmps
ins
add
neg
add
and
sub
jno
push
mov
aam
mov
jbe
push
mov
adc
mov
pop
ret
jo
add
push
add
add
sub
jl
and
je
jmp
mov
sub
mov
movs
or
cmp
pop
add
sbb
add
inc
and
sub
pop
ins
jp
inc
and
mov
add
add
add
jmp
mov
mov
in
shl
mov
xor
add
mov
jmp
mov
mov
jmp
ss
mov
add
and
out
jmp
mov
mov
xor
out
data16
add
cmovne
and
out
mov
and
xchg
mov
mov
mov
and
mov
mov
jmp
mov
mov
add
std
fadd
dec
fimul
inc
and
and
out
jmp
mov
pop
shl
fcmovnb
xchg
add
fimul
dec
and
mov
mov
inc
xchg
js
inc
and
mov
inc
add
add
mov
mov
mov
jae
in
push
add
cs
jp
aas
add
pop
add
call
add
add
add
xchg
cwde
cmp
setl
mov
xor
cmp
inc
cdq
mov
xor
stc
repnz
cmp
(bad)
mov
and
and
or
lock
xor
and
or
test
xlat
fsub
and
inc
mov
and
jmp
mov
out
adc
loop
mov
and
add
xchg
mov
repnz
add
repz
sub
add
jae
cmp
scas
daa
cmp
add
adc
add
ret
mov
inc
and
cmp
bnd
cld
cmp
(bad)
mov
mov
and
xor
mov
or
fdiv
add
retf
xlat
or
test
mov
inc
and
and
fs
add
add
add
lea
pop
pop
pop
pop
test
inc
xchg
pusha
in
inc
(bad)
sti
(bad)
jmp
pop
test
add
add
push
mov
push
push
push
and
sub
jmp
push
ret
jmp
call
jmp
push
jmp
push
jmp
push
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
add
or
push
adc
jne
mov
xchg
add
add
mov
add
cmps
clc
inc
test
test
hlt
jns
add
jno
mov
add
and
mov
pusha
or
add
mov
add
pop
call
mov
add
retf
xor
in
add
mov
and
mov
inc
test
mov
sub
mov
je
dec
inc
cmc
int
mov
movs
push
jbe
lahf
mov
jg
stos
add
and
and
add
cs
and
add
add
test
(bad)
repnz
mov
pop
les
movs
mov
add
add
dec
add
add
and
xchg
add
cmp
jns
add
je
stos
mov
mov
movs
and
cmps
add
sub
mov
jg
jmp
mov
pop
hlt
and
les
fmul
add
and
xchg
add
mov
sub
mov
xor
and
add
add
and
add
add
jg
and
add
add
test
or
add
add
add
pop
out
int
xlat
sbb
jg
lods
lock
(bad)
mov
and
add
add
mov
sysenter
(bad)
sub
add
jg
add
inc
test
add
sub
test
add
add
(bad)
pop
add
test
and
xchg
fcmove
jb
mov
ud2
lea
add
jp
js
add
mov
mov
dec
xrelease
jg
jmp
mov
mov
test
add
pop
add
jmp
mov
sbb
test
add
nop
(bad)
cwde
add
add
movs
add
inc
mov
sub
add
je
jns
inc
mov
scas
movs
and
add
sub
mov
jg
jmp
mov
and
test
jno
cmp
mov
(bad)
xchg
add
call
test
add
add
mov
and
add
add
jmp
sbb
in
add
sub
mov
sysenter
sti
and
mov
add
add
mov
and
jno
aaa
cmc
(bad)
and
nop
add
add
add
and
sub
mov
pcmpeqb
add
add
add
add
ss
mov
add
add
add
inc
add
mov
in
add
sub
mov
add
inc
add
rol
add
add
sub
mov
jg
fdivrp
nop
add
movs
add
or
je
pop
xchg
jle
mov
mov
in
add
sub
mov
imul
add
add
mov
in
add
jmp
xor
inc
mov
or
add
retf
add
add
add
sub
mov
movs
(bad)
and
add
pop
add
mov
je
jmp
mov
or
mov
cmovs
add
scas
test
add
add
dec
mov
je
jmp
mov
sub
mov
and
jg
pusha
add
bound
sbb
in
add
sub
lods
inc
and
test
and
into
jmp
mov
sub
mov
cmp
jns
add
add
add
adc
test
iret
add
mov
bound
ror
and
add
jmp
int3
jb
in
add
in
aad
arpl
mov
xchg
stos
add
push
add
add
movs
add
xchg
out
mov
and
xchg
jnp
mov
add
mov
loope
lods
inc
and
shld
add
or
add
psrlw
cmp
mul
add
add
add
test
add
add
mov
mov
jecxz
add
lods
push
add
add
and
int
xchg
sub
mov
je
jmp
mov
or
enter
jecxz
je
jmp
mov
push
daa
adc
inc
push
sub
test
add
add
add
aaa
add
mov
mov
sbb
mov
mov
and
add
mov
add
add
mov
inc
ror
add
rol
add
dec
test
xchg
add
jnp
mov
mov
jmp
inc
test
add
call
jg
and
jns
add
test
in
cli
nop
add
(bad)
pop
add
mov
mov
jmp
mov
popf
daa
xor
adc
mov
fdivr
push
add
add
out
add
add
sbb
rsm
scas
and
cmp
lahf
xchg
ret
sub
or
add
fisub
mov
test
dec
addr16
jnp
jmp
sub
cmp
cmp
mov
movzx
jb
js
test
setne
and
mov
add
add
add
sbb
add
add
mov
xlat
and
lock
jne
xchg
jnp
sete
or
push
pushf
(bad)
mov
and
mov
or
test
cmovne
mov
and
ret
mov
mov
mov
div
sti
lahf
out
ror
add
cmc
int
mov
mov
mov
mov
mov
cmp
inc
mov
add
(bad)
repz
cmp
sete
dec
pushf
xor
bnd
test
jle
ror
nop
inc
pop
add
jmp
xchg
mov
mov
mov
mov
sbb
data16
add
out
retf
aaa
and
cmps
mov
loopne
push
add
add
add
add
and
clc
test
imul
add
cmp
sete
or
stos
fadd
js
dec
hlt
add
ret
xor
xor
mov
mov
mov
inc
mov
retf
and
inc
and
mov
and
out
or
mov
or
or
xor
test
out
mov
cmovne
sbb
jmp
mov
mov
mov
gs
ds
mov
jmp
out
jecxz
add
add
add
(bad)
jb
call
xchg
pop
jb
push
test
(bad)
xor
pop
add
add
mov
mov
mov
mov
mov
sub
int
aam
mov
add
scas
clc
xor
add
nop
add
add
add
cmp
mov
xor
mov
cmp
out
loop
and
mov
mov
and
mov
and
fcmovbe
or
je
sbb
(bad)
mov
or
adc
retf
aam
out
mov
pushf
inc
icebp
mov
xchg
dec
popa
add
mov
out
stos
xchg
and
mov
add
cmc
xor
outs
mov
enter
and
add
std
push
add
add
js
push
sub
cmp
add
add
and
mov
inc
xor
add
setl
jle
and
(bad)
ret
inc
ror
aaa
jmp
mov
jmp
mov
je
cmp
add
loopne
push
add
add
jle
add
add
clc
add
imul
add
cmp
sete
cmp
rcr
iret
add
xor
xor
sbb
(bad)
mov
pusha
adc
and
mov
icebp
inc
lods
jno
ror
dec
mov
mov
fadd
add
aam
out
mov
cmovne
mov
fisub
add
mov
mov
and
add
inc
mov
mov
in
mov
mov
add
jmp
add
mov
rol
add
and
dec
xchg
jmp
and
add
mov
mov
mov
or
imul
or
mov
lahf
sub
xlat
add
cmc
out
mov
cs
push
add
xor
mov
sub
and
push
xlat
clc
(bad)
jns
scas
mov
cmps
enter
dec
pushf
inc
mov
and
push
add
inc
retf
and
nop
stos
add
jne
add
(bad)
and
add
xchg
out
jmp
mov
mov
mov
mov
std
push
add
dec
sub
sub
sbb
scas
jo
sub
add
or
or
aaa
cli
(bad)
(bad)
mov
mov
xor
ficom
add
inc
ror
add
pop
add
xchg
ret
xor
arpl
add
iret
dec
mov
mov
add
add
lods
mov
adc
and
push
add
std
push
add
add
add
imul
sbb
aaa
add
xchg
ret
lock
add
setl
rcr
and
push
add
inc
ror
add
mov
add
add
pop
pop
pop
jns
mov
jmp
mov
jmp
mov
mov
add
and
sub
shl
icebp
pop
sub
test
add
add
test
add
jnp
(bad)
ss
xchg
add
mov
mov
mov
add
sub
sub
add
jmp
add
add
jge
and
add
lock
add
sbb
xchg
shr
rol
mov
clc
add
add
add
push
xor
mov
mov
mov
and
popa
pop
out
(bad)
jmp
shl
add
popf
outs
sar
fisttp
and
add
into
mov
jmp
(bad)
std
and
add
add
int
xlat
jmp
nop
push
mov
push
push
push
and
sub
jmp
push
jmp
push
jmp
push
jmp
push
ret
jmp
call
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
jns
imul
jns
add
add
inc
and
add
loop
inc
rcl
ret
cmp
mov
xor
dec
movs
xor
(bad)
mov
add
shl
xor
xchg
dec
movs
call
daa
add
jmp
mov
jg
sub
fcom
mov
je
addr16
add
mov
lods
lock
and
(bad)
jge
add
push
shl
add
add
jg
sbb
add
add
scas
xchg
pusha
movs
mov
inc
test
add
add
out
into
cmps
mov
stos
sbb
test
sub
mov
inc
jge
iret
fimul
outs
lahf
add
add
dec
lock
mov
add
loop
(bad)
pop
je
jmp
cmove
sub
mov
adc
sbb
add
mov
sub
mov
je
cli
add
add
jmp
mov
mov
mov
cmp
je
inc
cmp
xadd
mov
and
xor
adc
cmp
add
sub
pop
jmp
std
push
add
aam
push
add
pop
mov
add
imul
retf
add
add
test
pop
add
and
mov
and
pop
repnz
test
mov
and
cli
sub
add
mov
mov
xchg
add
add
add
popa
das
rol
add
push
imul
and
add
add
repz
adc
mul
jmp
mov
add
fdiv
sbb
mov
and
pop
mov
sub
cwde
inc
hlt
or
xor
mov
and
or
xor
add
add
rol
mov
adc
or
jmp
(bad)
mov
cmp
imul
sub
add
add
mov
mov
sub
mov
stos
cmps
add
add
es
aam
and
mov
or
mov
(bad)
jmp
pop
pop
pop
dec
faddp
inc
and
icebp
xor
(bad)
jmp
nop
push
mov
push
push
push
and
sub
push
jmp
push
jmp
push
ret
jmp
push
jmp
call
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
dec
inc
jns
dec
outs
mov
mov
mov
dec
dec
and
mov
mov
iret
dec
add
push
call
in
or
inc
and
and
inc
dec
and
cmp
lods
and
fisttp
psrld
lds
jmp
mov
sub
mov
ja
jmp
mov
and
mov
add
popf
mov
add
add
aad
sbb
int3
sahf
push
or
shl
add
pop
rcr
add
mov
sub
mov
sub
add
add
mov
ds
add
add
mov
push
pop
ins
mov
cmp
addr16
mov
jmp
(bad)
sbb
call
(bad)
inc
inc
push
and
retf
inc
add
add
add
mov
jmp
mov
adc
ds
pop
pop
ret
jmp
data16
push
mov
push
push
push
and
sub
push
jmp
push
jmp
push
ret
jmp
push
jmp
call
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
inc
and
adc
mov
mov
inc
cmps
push
ror
cmps
sub
jle
call
and
or
inc
and
sbb
push
pop
mov
popf
mov
mov
or
(bad)
cmp
(bad)
in
data16
jmp
mov
sub
mov
je
jmp
mov
out
sbb
add
mov
clc
(bad)
sbb
add
aad
mov
cmp
cmp
jecxz
mov
ja
cld
add
icebp
add
adc
das
xor
scas
xor
add
jmp
retf
inc
and
sub
dec
inc
and
je
adc
add
aad
inc
and
aaa
sub
inc
lea
jg
jmp
mov
dec
adc
jge
mov
je
enter
add
fimul
mov
sbb
test
add
jmp
sub
sub
pop
inc
push
adc
test
add
fucomp
and
add
pop
(bad)
dec
dec
outs
mov
je
jae
add
add
jl
add
mov
mov
sub
inc
cli
test
ror
mov
push
dec
jmp
scas
and
inc
and
loope
jecxz
xchg
sbb
add
jo
(bad)
dec
add
add
(bad)
and
in
jecxz
jmp
cdq
sub
loope
mov
sub
sar
push
add
add
das
inc
dec
jnp
add
mov
das
mov
imul
and
and
sete
test
setl
mov
xchg
or
sti
stc
mov
inc
ror
add
loope
mov
jno
mov
mov
mov
mov
int3
std
push
add
loope
and
add
sub
pop
scas
repz
cmp
sete
cmp
std
pushf
ret
jns
xor
out
inc
and
mov
add
and
or
or
and
or
jmp
xor
sub
sub
or
and
aad
test
(bad)
je
or
inc
add
adc
or
jnp
hlt
pop
call
ret
add
and
je
fstp
inc
std
(bad)
dec
pop
inc
add
in
push
push
and
sub
jmp
push
jmp
push
jmp
push
jmp
call
jmp
push
ret
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
push
jne
shl
mov
jae
mov
mov
and
add
add
adc
test
xor
test
add
dec
mov
dec
test
mov
cmps
js
scas
ret
inc
mov
mov
dec
jmp
mov
push
jo
(bad)
out
jmp
mov
and
sub
leave
cmp
jg
sub
adc
add
in
adc
and
mov
fucomp
and
nop
add
je
das
mov
and
jl
sbb
out
add
add
pop
cli
stc
rol
lds
xor
test
les
sub
mov
and
mov
xor
add
and
sub
mov
maskmovq
add
add
mov
add
mov
ret
sub
push
jg
xchg
dec
lds
add
mov
sub
mov
nop
add
jmp
mov
xchg
fwait
and
comiss
jae
add
mov
sub
mov
adc
inc
mov
add
push
add
mov
sub
push
inc
and
sbb
sbb
add
add
fidiv
sti
inc
(bad)
test
and
imul
sub
mov
(bad)
pop
add
cmps
add
add
mov
jnp
push
adc
shl
jmp
mov
sub
clc
inc
and
jg
jmp
mov
sub
inc
adc
bswap
mov
add
jmp
cmp
je
les
mov
and
inc
(bad)
sbb
add
add
sbb
sub
or
je
jns
add
add
mov
ins
jg
jmp
loop
and
sbb
jl
cmp
or
out
lahf
jno
add
jmp
mov
and
call
mov
sysexit
jbe
cwde
add
add
sbb
inc
adc
sbb
(bad)
scas
test
add
jmp
mov
sub
mov
je
sbb
add
mov
sub
mov
test
dec
add
or
add
sbb
add
add
stos
lods
lea
mov
and
fild
add
add
mov
inc
ror
add
add
test
nop
add
xor
add
js
pushf
je
jmp
mov
mov
call
cmps
dec
pop
mov
mov
mov
cmp
inc
sbb
push
mov
pop
mov
add
mov
mov
in
mov
xor
mov
mov
mov
sub
outs
jmp
ins
mov
cmp
repz
std
add
dec
add
fistp
xchg
(bad)
adc
add
add
cmp
push
in
or
nop
xor
xor
(bad)
cld
and
and
mov
and
and
or
or
xchg
or
or
adc
cld
not
add
inc
inc
mov
imul
adc
mov
std
mov
mov
inc
add
mov
push
and
mov
push
add
jae
jne
mov
add
add
push
and
scas
add
add
sub
imul
and
cmp
sete
xor
add
add
lods
(bad)
sbb
and
(bad)
sti
xlat
(bad)
ret
in
mov
pop
add
lods
cmp
jmp
mov
mov
test
add
sub
dec
and
mov
jmp
ja
add
fisttp
ret
mov
sub
add
and
mov
sub
add
mov
nop
loope
add
inc
aas
js
pushf
aam
test
mov
mov
mov
mov
mov
sbb
xor
inc
and
mov
xchg
lock
and
cmp
or
imul
hlt
xor
imul
repnz
out
out
pusha
(bad)
mov
imul
fsub
mov
mov
and
and
nop
test
(bad)
xor
or
add
adc
out
mov
(bad)
icebp
mov
jmp
mov
mov
mov
loope
mov
add
imul
push
add
xor
dec
xlat
pop
shl
out
add
add
sub
imul
xor
cdq
add
xor
and
paddq
xor
popa
xor
ret
inc
ror
add
loope
lahf
xchg
pushf
add
lea
and
adc
dec
inc
(bad)
jl
mov
add
add
and
mov
or
(bad)
cdq
adc
cmp
or
add
mov
jmp
data16
push
mov
push
push
push
and
sub
jmp
push
ret
jmp
push
jmp
push
jmp
push
jmp
call
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
int
mov
mov
mov
pop
xchg
and
mov
fs
mov
inc
dec
lahf
inc
jg
jmp
mov
ss
daa
hlt
mov
addr16
je
jmp
mov
sub
pop
inc
and
je
jmp
mov
in
dec
popa
dec
mov
cmp
jmp
test
not
enter
mov
and
test
add
jmp
cmp
add
mov
nop
mov
fwait
cmp
mov
cmp
add
inc
test
cmp
inc
(bad)
sbb
mov
hlt
jmp
mov
sub
add
add
mov
sbb
inc
and
push
sbb
mov
movs
add
sti
mov
test
pop
dec
pop
pop
adc
sbb
(bad)
dec
pop
add
in
push
push
and
sub
push
jmp
call
jmp
push
jmp
push
ret
jmp
push
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
rcr
cli
jns
adc
push
xlat
mov
and
loop
add
and
test
add
add
mov
mov
mov
mov
xchg
xor
fiadd
jmp
jecxz
jg
jmp
mov
sub
mov
shr
jmp
dec
test
add
test
sbb
add
je
jmp
mov
out
cmp
lahf
scas
sahf
and
add
add
(bad)
and
add
jmp
mov
add
xchg
mov
mov
add
je
jmp
mov
and
add
mov
mov
add
test
(bad)
and
add
repz
xchg
enter
les
add
sub
mov
das
test
add
and
add
sbb
sub
mov
jg
jmp
mov
sub
mov
mov
data16
add
ret
cld
sbb
add
pop
sub
mov
sub
jmp
mov
sub
mov
and
add
cld
je
jmp
mov
sub
mov
shr
jmp
mov
add
mov
lds
jmp
mov
sub
mov
add
(bad)
and
add
mov
mov
and
add
repnz
popa
push
scas
ret
mov
add
(bad)
je
and
add
add
add
or
mov
jg
add
add
add
add
sub
mov
add
pop
(bad)
out
push
add
jmp
push
test
add
mov
pop
mov
jl
movs
movs
add
psubsw
test
pop
add
sub
mov
das
test
jne
add
mov
add
dec
fdivr
dec
fnstsw
add
add
add
jge
(bad)
les
add
sub
mov
and
je
call
mov
add
cwde
fnstenv
mov
nop
add
add
add
mov
sub
mov
stc
push
add
jmp
rol
sub
mov
lods
ins
and
add
jmp
mov
sub
mov
pusha
(bad)
mov
pop
pop
add
mov
sub
arpl
cmps
(bad)
and
jecxz
jmp
mov
jb
mov
and
jbe
push
movs
loop
jmp
je
add
and
inc
in
bound
js
add
jmp
mov
sub
mov
in
test
add
inc
push
add
mov
sub
mov
jg
jmp
mov
sub
mov
cvtdq2ps
add
loop
sgdtd
ror
test
mov
jg
jmp
rol
(bad)
jno
adc
mov
pop
test
add
fadd
pop
add
and
add
repnz
push
inc
and
jg
jmp
mov
add
test
stc
sub
inc
inc
inc
and
(bad)
into
add
add
mov
test
add
add
mov
and
xor
add
add
sub
jg
(bad)
xor
test
ins
add
add
test
les
add
sub
mov
add
mov
add
add
add
sub
mov
sub
cld
jmp
mov
fcmovnu
mov
push
push
inc
and
(bad)
outs
add
add
add
add
sub
mov
and
mov
jmp
mov
mov
mov
xchg
xor
mov
mov
xor
xlat
jmp
cld
add
shr
or
mov
adc
(bad)
loop
add
sete
cmp
setl
mov
xor
mov
or
xor
call
leave
push
(bad)
mov
and
and
sub
or
xor
mov
add
sub
retf
jle
cld
test
mov
or
push
add
mov
add
add
cdq
mov
jae
pop
or
mov
add
xchg
ret
add
add
sbb
sar
add
add
mov
in
mov
add
add
test
repz
cmp
sete
(bad)
dec
push
cld
add
pushf
(bad)
mov
jb
push
or
inc
arpl
and
add
add
(bad)
add
out
addr16
lods
and
push
mov
xchg
test
nop
mov
jmp
mov
push
cmp
ret
lahf
mov
in
mov
rcl
add
mov
mov
push
test
add
add
add
add
mov
cmp
test
add
fdiv
or
and
imul
add
add
add
push
sete
(bad)
or
pop
add
pushf
(bad)
mov
and
test
cmove
dec
scas
mov
jmp
mov
mov
mov
sahf
(bad)
(bad)
(bad)
inc
and
add
sbb
mov
mov
add
movzx
outs
fisttp
dec
(bad)
mov
mov
mov
std
push
add
push
add
add
and
imul
or
cmp
adc
fwait
add
ss
mov
and
scas
ret
add
ror
add
mov
add
test
cli
add
mov
int3
push
add
mov
jmp
mov
loope
add
add
add
add
xor
add
mov
mov
sub
and
adc
add
enter
mov
pextrw
hlt
adc
mov
sub
xor
mov
sub
add
(bad)
mov
mov
jb
mov
mov
and
or
mov
and
or
hlt
add
retf
aam
cmp
add
inc
icebp
mov
add
add
xor
add
mov
mov
jp
mov
add
add
in
int3
retf
andps
mov
test
xchg
mov
fild
pop
add
add
sbb
ja
add
add
lock
sti
or
clc
add
scas
clc
and
cmp
jle
xchg
enter
ror
ret
xor
sub
retf
mov
or
inc
(bad)
or
inc
and
(bad)
or
mov
and
or
hlt
add
mov
test
mov
cmovne
mov
jmp
mov
mov
mov
test
(bad)
ror
and
xchg
and
and
add
add
add
jmp
add
inc
add
add
shl
push
pop
add
pop
enter
add
add
add
pushf
xchg
sbb
and
add
mov
mov
test
mov
mov
add
sbb
sub
imul
fwait
or
test
add
add
xchg
aas
sub
(bad)
cli
xor
or
test
movzx
lock
fild
add
ret
loop
or
aad
mov
mov
mov
mov
add
mov
mov
fadd
pop
and
daa
xchg
mov
add
xor
fist
(bad)
jmp
pop
mov
or
bnd
loop
std
push
add
add
mov
mov
add
imul
and
cmp
movups
cmp
setl
mov
hlt
leave
mov
xor
mov
cmp
and
mov
and
mov
mov
ror
pop
mov
or
xor
jl
push
and
or
je
pop
cmovne
mov
pop
mov
add
add
test
das
icebp
dec
ret
and
add
test
pop
add
retf
jmp
push
(bad)
repz
jmp
mov
lea
pop
pop
pop
pop
ret
(bad)
std
sti
enter
pop
iret
addr16
add
add
mov
mov
shrd
add
movzx
cmp
(bad)
ror
add
add
stos
aaa
add
jmp
xchg
test
enter
test
xchg
add
int3
add
add
sub
add
add
mov
xor
add
add
test
pop
add
mov
sub
add
aaa
shl
mov
js
aam
add
fidivr
test
and
cwde
cmc
(bad)
jmp
nop
push
mov
push
push
push
and
sub
jmp
call
jmp
push
jmp
push
jmp
push
jmp
push
ret
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
or
adc
mov
dec
mov
fnstcw
mov
xlat
xchg
and
add
or
test
add
add
fnstsw
mov
retf
push
lahf
mov
jl
dec
and
jg
mov
add
add
sub
inc
mov
inc
and
mov
jmp
mov
add
mov
jl
mov
mov
jo
les
lea
add
adc
jae
push
mov
push
scas
je
jmp
imul
popf
(bad)
pusha
jle
mov
(bad)
sbb
pop
add
add
out
sbb
je
jmp
mov
sub
mov
mov
add
jmp
mov
ret
ffreep
mov
je
jmp
mov
sub
mov
jg
ja
add
dec
mov
sub
mov
and
add
add
add
inc
or
pop
jb
mov
jb
(bad)
mov
or
add
test
aam
mov
aam
stos
add
add
mov
xor
and
ror
pop
add
jmp
cmps
push
jl
das
pop
stos
repnz
in
cmp
pop
add
jmp
mov
push
jl
mov
jae
mov
ins
xchg
jg
jmp
mov
sub
mov
cmovbe
fidivr
push
cmp
add
repnz
int
mov
cmp
sbb
(bad)
add
mov
mov
jae
mov
sbb
test
add
jmp
mov
sub
mov
jae
jmp
mov
sub
rol
test
add
add
push
dec
add
mov
sub
mov
jg
jmp
mov
add
sub
and
pop
(bad)
je
in
add
lods
and
div
loope
sub
inc
and
jg
aas
add
add
pop
and
mov
mov
and
mov
inc
and
sub
imul
sbb
pop
add
jmp
mov
and
sub
push
inc
jge
je
jmp
mov
mov
mov
and
je
jmp
push
inc
and
sub
xlat
inc
and
je
jmp
mov
scas
inc
movs
ret
pop
je
fs
pop
add
lds
adc
aam
mov
mov
mov
mov
std
push
add
and
jmp
add
sub
imul
cmp
dec
pop
sete
mov
int
mov
add
test
xor
mov
sbb
and
mov
and
sbb
shl
or
and
or
xor
or
and
or
test
mov
inc
inc
icebp
mov
mov
add
add
mov
mov
cmp
seta
cmp
jmp
mov
cmp
sub
pop
mov
mov
add
and
xchg
ret
or
add
(bad)
(bad)
mov
and
xor
retf
ret
add
inc
mov
add
add
xchg
add
or
shl
sub
das
mov
dec
pop
add
inc
ror
add
outs
aam
pop
mov
and
pop
int
cmps
mov
add
mov
mov
psubsw
cmp
cmovne
mov
jmp
arpl
add
mov
mov
test
add
cmp
add
movzx
cmp
cmovl
cmps
test
add
add
test
add
add
add
jg
outs
sub
out
mov
mov
or
add
mov
cmp
movd
rcr
and
add
aas
xchg
add
pop
(bad)
or
cdq
add
add
sub
test
add
add
rol
add
pushfw
sbb
mov
jae
jmp
mov
mov
lahf
add
mov
repnz
pop
add
add
add
xlat
ffreep
imul
jo
ss
loop
cmp
icebp
fild
add
jmp
(bad)
xchg
add
add
pushf
(bad)
mov
imul
mov
ror
add
inc
add
jb
mov
xchg
add
add
mov
add
mov
and
or
cmp
add
pop
lahf
pushf
add
pop
jmp
add
add
cdq
sub
pop
adc
ins
pop
outs
add
add
add
add
mov
les
add
dec
scas
xlat
cmp
enter
dec
add
mov
or
xchg
pop
add
cmpxchg
mov
and
xor
or
idiv
mov
mov
add
(bad)
fsub
add
add
jns
add
mov
mov
sub
add
mul
nop
add
pop
fs
mov
mov
jmp
mov
ror
rol
cdq
add
add
mov
mov
add
add
add
mov
imul
jb
rol
pop
retf
mov
mov
add
std
test
sbb
sub
inc
mov
lahf
stc
(bad)
dec
pop
inc
add
in
push
push
and
sub
jmp
push
jmp
push
jmp
push
ret
jmp
push
jmp
call
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
mov
mov
mov
call
mov
inc
xchg
and
jnp
add
jno
or
add
add
call
pop
add
repnz
mov
inc
add
add
add
idiv
sub
sub
mov
mov
pop
test
add
add
stos
add
outs
add
test
mov
add
repz
mov
sub
add
cli
mov
jg
jmp
jmp
sub
add
cmp
add
jae
test
add
jmp
mov
sub
sub
xor
test
xor
cli
add
add
add
add
test
inc
xor
add
mov
jg
push
jmp
add
mov
sub
mov
inc
out
(bad)
push
push
add
jmp
ins
test
add
add
mov
jg
jmp
lods
or
inc
add
add
mov
and
add
jp
(bad)
loope
outs
sub
mov
test
inc
repz
int
or
and
add
add
jmp
jp
push
mov
rcl
mov
or
(bad)
outs
add
repnz
leave
test
mov
jp
xchg
das
mov
jg
jmp
mov
add
jl
add
sub
and
add
jmp
mov
outs
aas
mov
and
add
add
test
push
add
mov
mov
add
mov
mov
jg
jmp
mov
enter
cmp
out
test
out
jmp
mov
sub
cmc
test
jg
jmp
outs
test
add
add
cmps
cmps
in
retf
(bad)
fiadd
add
add
mov
add
add
add
sub
mov
cld
out
add
jg
jmp
icebp
test
add
add
mov
add
(bad)
fiadd
in
jmp
mov
add
mov
push
(bad)
mov
add
icebp
xor
add
inc
dec
sub
add
(bad)
lea
add
fiadd
add
ins
jle
inc
add
add
mov
movd
out
add
ror
stos
add
mov
jg
jmp
outs
scas
and
add
repnz
loope
pusha
ror
out
inc
(bad)
mov
add
jmp
mov
sub
mov
punpcklbw
sar
jp
outs
add
add
xchg
loopne
hlt
xchg
mov
je
jmp
mov
sub
outs
test
add
cli
movlps
add
add
out
dec
add
add
jle
call
add
add
xchg
inc
add
add
test
sub
out
inc
mov
dec
pop
add
pushf
jmp
shl
inc
add
add
scas
test
mov
out
fadd
sub
and
add
add
sub
mov
add
pushf
jmp
popa
sbb
add
add
out
add
mov
je
jmp
mov
xchg
xchg
adc
add
add
(bad)
and
add
jmp
mov
push
cs
and
add
cli
(bad)
in
add
in
add
add
add
sub
mov
movs
(bad)
and
add
xchg
add
add
mov
sub
mov
std
mov
or
add
push
inc
add
mov
retf
out
loop
dec
mov
and
add
out
(bad)
and
add
mov
mov
or
inc
stos
data16
add
add
test
adc
test
stc
add
add
xor
test
add
jg
adc
and
add
add
mov
mov
test
in
add
jmp
mov
push
dec
not
or
popa
push
add
add
(bad)
and
add
jmp
mov
mov
sar
sar
and
add
xor
mov
jmp
mov
xchg
or
jmp
add
movs
and
xor
jmp
mov
mov
and
(bad)
dec
add
je
jmp
add
sub
mov
jae
stc
or
stos
xchg
outs
add
sub
outs
and
add
add
mov
punpckldq
add
add
mov
retf
dec
test
mov
test
mov
xor
je
jmp
add
(bad)
movs
aad
ror
jp
je
jmp
mov
push
add
test
add
add
jle
or
add
add
add
popa
add
push
int3
and
packssdw
mov
jp
mov
enter
test
add
xor
add
add
sub
ret
inc
and
je
fstp
mov
fs
and
add
shl
cld
mov
popa
test
mov
add
mov
outs
push
lea
pop
adc
in
hlt
xor
iret
inc
add
add
add
sub
mov
je
jmp
mov
cmp
jp
inc
dec
sti
sbb
test
add
jmp
add
mov
fisttp
ror
mov
adc
popa
add
add
add
imul
add
or
inc
popf
pop
je
jmp
mov
push
mov
fs
inc
and
xchg
test
add
jmp
jmp
sub
mov
je
jmp
cmps
test
add
mov
jnp
inc
and
pcmpeqd
push
xor
stos
popa
add
add
cli
pushf
retf
mov
and
inc
ins
add
add
add
movs
sbb
inc
and
je
xchg
push
add
mov
sub
mov
bound
add
cli
mov
and
add
dec
sub
mov
(bad)
sti
or
add
sbb
add
mov
sub
and
je
jmp
push
or
add
loop
mov
imul
dec
mov
add
cli
add
repnz
inc
shr
push
add
add
push
or
mov
mov
mov
jmp
(bad)
(bad)
and
add
add
add
mov
push
push
or
add
mov
jns
mov
push
add
add
iret
stos
out
sbb
add
out
imul
and
cmp
sete
cmp
setl
mov
je
pop
ret
inc
scas
mov
push
push
or
add
mov
jns
and
add
add
cmps
and
add
inc
(bad)
cmp
ret
dec
popa
jp
mov
push
add
add
cmp
cmp
add
add
mov
scas
xlat
and
cmp
sete
cmp
and
(bad)
mov
and
jb
repnz
ret
inc
ror
add
inc
or
mov
mov
mov
test
stos
adc
jp
jmp
mov
pop
inc
pop
retf
adc
mov
mov
jae
xor
add
add
add
addr16
std
jno
loopne
scas
xlat
addr16
dec
add
loopne
icebp
add
add
xchg
ret
mov
or
add
setl
mov
and
xor
or
mul
mov
inc
shl
dec
add
add
pop
add
call
ret
mov
jp
outs
jp
add
mov
mov
fcomi
jmp
and
out
add
mov
add
icebp
xor
pushf
mov
add
mov
sub
mov
add
(bad)
(bad)
and
cmp
popa
mov
mov
and
repz
mov
out
or
mov
sbb
out
fisttp
rol
mov
add
mov
or
dec
scas
sbb
fmul
out
(bad)
jmp
into
mov
adc
and
mov
mov
not
add
inc
mov
add
add
jne
add
mov
add
add
sub
mov
jp
and
inc
add
and
cs
div
es
mov
idiv
mov
std
push
add
jnp
mov
push
add
jmp
fs
data16
scas
xlat
and
cmp
(bad)
xchg
add
add
jp
mov
and
xor
or
mov
ror
add
ja
add
add
imul
ins
add
xor
cdq
idiv
cmp
setne
stos
adc
mov
cli
pushf
mov
mov
outs
(bad)
retf
(bad)
stc
mov
arpl
add
arpl
scas
(bad)
and
cmp
(bad)
ret
sti
xchg
or
add
cmpxchg
mov
clc
xor
jecxz
test
mov
cmovne
mov
xor
sub
bound
leave
cdq
cmp
mov
test
cmovne
test
add
add
stos
add
inc
pop
sub
push
in
and
std
push
add
sbb
add
sub
sub
imul
add
cmp
sub
add
setl
xor
or
fcmovb
add
and
sub
bnd
cli
aas
inc
pop
jp
rol
(bad)
and
add
add
sub
hlt
adc
jg
loopne
mov
fimul
sub
mov
xor
lods
std
push
add
or
sbb
dec
ins
cmc
scas
neg
add
lahf
add
icebp
xor
mov
cmp
(bad)
adc
and
movs
popa
xor
xor
ins
cld
or
and
mov
out
dec
or
or
xor
or
xor
or
and
stc
cld
test
mov
cmovne
mov
jmp
mov
jmp
mov
mov
mov
mov
jns
lods
std
push
add
js
inc
sub
ret
ret
cmc
js
mov
jp
add
out
inc
popa
add
sete
mov
or
mov
setl
hlt
pop
cli
test
movs
fdiv
sbb
mov
add
and
mov
xor
ror
mov
fdiv
les
(bad)
jp
add
inc
cld
mul
and
inc
ret
mov
jmp
xor
idiv
mov
add
add
jg
cwde
inc
xchg
stos
(bad)
movs
add
inc
sub
adc
mov
mov
xor
mov
scas
test
add
sub
out
call
and
jae
xor
inc
add
xchg
and
or
pushf
add
(bad)
mov
xor
fdiv
outs
repnz
cld
in
and
mov
and
and
and
xor
mov
and
or
stos
test
xlat
or
test
mov
and
cmc
fst
mov
jmp
mov
jmp
les
push
xchg
adc
add
sub
mov
mov
sub
mov
add
jmp
xor
cmp
or
add
xchg
pushf
and
mov
lock
lods
dec
add
shr
aam
jl
adc
and
xchg
xchg
pop
pusha
pop
xchg
mov
outs
push
mov
push
add
lods
std
push
add
push
mov
sbb
add
push
imul
and
xor
xchg
(bad)
std
dec
stos
add
setl
repnz
test
ins
fcomp
add
inc
mov
and
and
mov
and
out
hlt
or
aad
cmp
adc
add
cmp
das
test
and
(bad)
lahf
movs
mov
cmc
add
in
inc
add
add
test
add
add
pop
icebp
movs
jmp
pop
jnp
xchg
das
mov
mov
mov
push
add
push
lods
std
push
add
adc
sub
add
imul
or
add
out
add
add
sete
sub
or
jp
and
fistp
and
test
cmovne
jnp
and
add
add
xor
jnp
xchg
das
mov
mov
shl
mov
pop
add
add
and
xor
add
mov
push
add
add
sub
sub
jnp
outs
add
sbb
scas
sbb
sub
add
inc
jmp
or
out
paddw
jns
add
scas
int3
and
mov
xor
push
mov
and
and
and
mov
and
and
and
or
fcmovnb
outs
outs
and
or
mov
add
or
test
pop
xchg
and
outs
mov
mov
add
add
imul
add
sub
sbb
add
add
sub
(bad)
sub
mov
jmp
add
mov
cmps
test
dec
xor
es
in
sar
out
jl
lea
hlt
pop
and
ret
mov
jmp
ret
push
adc
inc
add
jg
add
add
mov
jmp
call
mov
mov
and
jmp
mov
add
div
xor
sub
mov
jb
and
add
add
xor
push
retf
mov
add
pop
jge
add
add
sub
xor
mov
push
add
add
test
add
add
add
inc
add
test
add
out
lds
into
jmp
jmp
and
lock
mov
lods
xchg
lods
pusha
add
add
or
test
add
jl
enter
jnp
(bad)
call
in
push
push
and
push
jmp
call
jmp
push
jmp
push
ret
jmp
push
jmp
push
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
cwde
inc
or
and
hlt
jmp
add
pop
pop
ret
data16
push
mov
push
push
push
and
sub
jmp
push
jmp
push
jmp
push
ret
jmp
push
jmp
call
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
mov
add
add
mov
jmp
mov
int3
add
add
aaa
xchg
dec
add
fisttp
(bad)
(bad)
jmp
adc
add
add
or
lods
add
add
cdq
mov
div
add
sub
mov
mov
and
add
xor
in
add
add
jl
mov
add
test
add
add
xchg
outs
out
mov
mov
sub
mov
mov
or
push
icebp
add
jmp
cwde
clc
and
adc
add
mov
cmovae
add
add
add
add
mov
add
mov
stc
test
sub
sbb
adc
pop
in
push
test
add
add
(bad)
and
add
rol
add
add
mov
sub
mov
cli
stos
inc
or
add
lock
add
add
sub
mov
and
(bad)
and
add
mov
mov
ds
mov
add
add
add
jle
or
add
add
xor
movs
add
add
jmp
mov
sub
test
test
jecxz
add
imul
mov
fadd
and
add
push
int3
add
add
add
lods
imul
mov
bound
outs
add
add
cmp
sbb
fild
sub
ins
test
jl
add
mov
add
add
add
add
add
int3
sub
mov
mov
lods
jmp
jl
and
add
jnp
das
jmp
and
add
add
and
add
jmp
jle
and
xor
in
sar
pop
fwait
mov
push
cmovs
add
add
jmp
lods
add
add
sub
jmp
and
add
add
(bad)
imul
add
add
push
add
add
sub
mov
(bad)
xor
add
jmp
mov
sub
mov
jg
jmp
mov
jp
xchg
(bad)
inc
and
ret
jno
pop
add
inc
push
scas
test
add
add
xor
adc
jg
pop
add
add
mov
sbb
leave
cmp
seta
push
add
jmp
mov
call
sub
mov
jg
jmp
mov
sub
mov
bswap
out
sbb
out
push
add
rol
xor
add
call
add
add
add
add
add
add
adc
das
sbb
pop
je
jmp
mov
sub
mov
jg
out
add
mov
jle
adc
sub
call
push
add
jmp
mov
add
mov
mov
and
add
jmp
jmp
add
sub
mov
push
adc
loopne
add
jmp
jle
rcl
jl
sub
mov
pop
inc
and
add
mov
cmp
add
add
mov
je
jmp
mov
sub
pop
(bad)
and
add
jmp
idiv
add
mov
or
add
rcr
lods
lods
test
add
push
inc
aas
cmp
(bad)
and
add
jmp
cmp
and
xor
add
mov
and
sbb
sub
add
outs
cmc
add
mov
add
mov
or
jmp
jmp
add
sub
mov
jb
jmp
mov
sub
mov
je
and
mov
sub
inc
and
or
ss
xor
add
sub
mov
je
jmp
mov
and
add
loope
jmp
je
jmp
jmp
mov
mov
mov
lea
and
cmc
add
or
sbb
ror
jl
(bad)
aas
add
cwde
test
jl
and
das
add
push
and
add
add
mov
jmp
movs
test
add
add
add
rol
jmp
add
in
ss
add
add
xchg
mov
and
add
adc
daa
and
push
int3
add
dec
xor
stos
and
cmp
add
fild
add
int3
or
xor
mov
pop
mov
mov
cdq
idiv
mov
cmp
fild
cmovl
jns
shl
adc
jmp
stos
mov
add
inc
jns
repz
cmp
sub
data16
mov
ret
ror
add
or
mov
mov
mov
mov
std
push
add
add
fstp
add
jl
rol
clc
repz
je
add
add
sete
adc
pushf
outs
mov
xor
jle
and
mov
xor
xor
jmp
fadd
pop
and
and
or
mov
inc
and
std
mul
add
or
not
add
mov
mov
rol
add
jmp
inc
int3
or
add
cmps
in
fld
add
add
ds
shl
cdq
adc
std
cli
add
adc
das
add
cmp
mov
mov
add
movs
add
inc
scas
(bad)
and
cmp
add
sbb
xchg
ret
cmp
bswap
(bad)
mov
and
xchg
or
test
mov
cmovne
mov
xchg
ret
adc
add
mov
mov
test
cli
inc
out
mov
add
aad
add
mov
mov
mov
xor
mov
shr
aaa
mov
add
das
sub
jne
(bad)
mov
add
rol
add
test
mov
add
mov
mov
mov
mov
mov
mov
movs
std
push
add
mov
pop
fsin
add
prefetcht0
add
cmp
sete
or
retf
ror
ret
xor
add
mov
scas
out
and
mov
and
mov
lods
jg
and
pop
inc
cwde
paddsb
jb
or
div
imul
iret
xor
mov
or
add
and
cmovne
mov
jmp
adc
dec
sub
pop
add
mov
add
xor
cmp
mov
jne
jmp
(bad)
int3
cmc
add
es
sub
mov
not
or
add
bound
add
xchg
ret
adc
add
setl
mov
and
xor
add
and
in
add
mov
jl
(bad)
xchg
and
add
add
retf
push
int3
add
test
sar
lods
add
push
mov
(bad)
add
add
add
mov
add
add
jo
adc
adc
das
std
jmp
mov
add
add
sub
mov
(bad)
sub
test
cs
mov
mov
mov
cmp
test
push
add
add
add
scas
repz
xchg
inc
mov
add
xchg
ret
or
das
cmp
xor
and
repnz
test
cmovne
mov
jmp
mov
icebp
cmp
fnstcw
mov
std
push
add
add
add
mov
add
inc
cmp
add
xchg
jno
dec
push
int3
add
mov
mov
repz
and
xor
mov
add
add
cmc
mov
dec
and
call
mov
mov
jae
and
mov
fadd
add
add
test
add
add
data16
arpl
ins
rcr
add
xchg
adc
sar
jae
ja
cmp
mov
jmp
nop
push
mov
push
push
push
and
sub
push
jmp
push
jmp
push
jmp
push
ret
jmp
call
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
(bad)
hlt
and
mov
mov
pop
or
mov
add
loope
or
cmp
mov
or
add
add
add
add
mov
xchg
inc
and
mov
call
sub
mov
(bad)
adc
jecxz
dec
mov
mov
sub
cmove
xor
(bad)
rcl
add
jg
add
mov
sub
mov
(bad)
add
add
aas
add
push
mov
and
jg
jmp
xor
dec
call
fld
add
xor
inc
and
sub
mov
and
cmp
jmp
mov
adc
sbb
inc
jg
imul
mov
sub
xchg
pop
xchg
xchg
mov
int3
mov
inc
(bad)
dec
add
xchg
add
pop
sub
mov
test
out
add
add
clc
mov
cmp
test
add
add
call
mov
js
mov
test
mov
add
add
xchg
pop
pop
int3
mov
test
out
add
jmp
mov
cmp
lea
or
sub
test
js
popf
add
dec
mov
xor
and
je
jmp
mov
sub
mov
push
add
add
sub
mov
je
jmp
mov
mov
or
lar
add
add
sbb
xor
mov
nop
pop
ja
push
inc
and
je
add
jg
mov
stos
test
les
jmp
push
add
and
and
fild
popf
add
iret
jmp
lods
(bad)
push
movaps
sbb
(bad)
mov
jmp
mov
or
cmc
cmp
pushf
ret
mov
xor
mov
or
cld
add
mov
and
and
mov
les
mov
cld
test
mov
mov
mov
je
push
add
xchg
pop
jmp
je
dec
and
setb
and
mov
mov
mov
repz
and
add
add
(bad)
ret
mov
inc
mov
add
test
add
setl
mov
test
mov
add
jne
add
and
mov
and
pop
sar
jae
inc
and
or
and
aas
or
test
mov
and
(bad)
icebp
mov
and
jmp
mov
mov
mov
mov
add
inc
jno
inc
adc
dec
hlt
add
mov
movzx
mov
jo
ret
dec
(bad)
(bad)
jmp
into
jbe
add
cld
or
mov
push
inc
and
or
add
xor
xchg
mov
dec
mov
add
and
sub
add
add
mov
fadd
push
ror
jmp
mov
mov
push
adc
mov
std
push
add
mov
mov
(bad)
call
scas
xlat
and
or
sete
inc
dec
add
add
mov
cli
xor
(bad)
fld
mov
and
pop
mov
add
add
pop
ja
push
popf
add
add
mov
enter
mov
mov
sub
pop
repz
out
add
aas
mov
push
fld
add
repz
mov
push
test
inc
and
jmp
lea
loop
pop
imul
icebp
mov
add
add
mov
and
pop
mov
sti
(bad)
dec
pop
inc
add
in
push
push
and
sub
push
jmp
push
ret
jmp
push
jmp
push
jmp
call
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
dec
(bad)
mov
mov
mov
mov
mov
and
mov
mov
mov
and
pop
inc
and
call
inc
retf
pop
repz
mov
pop
mov
sub
mov
mov
ins
add
add
pop
add
inc
and
in
retf
cmps
push
ret
(bad)
sbb
add
add
mov
pop
sub
mov
outs
test
out
add
xor
and
mov
in
ins
dec
pmullw
add
add
add
and
sub
dec
inc
mov
rol
cmps
repnz
mov
vpacksswb
push
and
jg
pop
add
and
sub
mov
je
jmp
mov
sub
mov
jne
lods
add
add
adc
add
mov
sub
mov
jg
jmp
pop
inc
and
repnz
mov
pop
jg
jmp
mov
sub
mov
jnp
add
jmp
fs
fwait
push
sub
mov
and
je
jmp
or
ss
sub
mov
cmove
add
jmp
push
inc
and
stos
pop
repnz
inc
and
je
sub
mov
add
and
sub
mov
and
add
push
xor
add
add
jle
mov
in
and
pmaxub
sbb
ss
pop
jns
enter
xlat
and
test
add
rol
sbb
retf
test
es
js
je
xchg
cmp
cmovb
inc
and
jmp
(bad)
dec
stos
pop
dec
pop
jle
test
dec
add
inc
and
mov
call
mov
mov
add
add
inc
ss
cmp
aam
pop
fiadd
xchg
mov
mov
sbb
mov
mov
sub
sub
or
into
repz
cmp
(bad)
stc
pop
add
pushf
inc
mov
or
mov
xor
xor
cld
cld
inc
jo
and
mov
and
and
or
or
xor
mov
sahf
rcl
test
mov
adc
jnp
mov
cmovne
mov
aam
jmp
mov
jecxz
out
xchg
xor
and
dec
je
pusha
rsqrtps
and
mov
mov
cwde
std
push
add
add
pop
or
sub
sub
vmwrite
out
add
add
xchg
mov
(bad)
aad
dec
jne
in
mov
mov
xor
hlt
repnz
loopne
sbb
and
and
and
jb
fdiv
les
and
aas
(bad)
adc
add
or
les
mov
repnz
and
retfw
sub
add
mov
mov
mov
ins
fld
add
je
add
inc
mov
out
js
rol
(bad)
(bad)
(bad)
call
mov
popf
dec
mov
cmp
and
mov
into
shl
inc
and
jnp
dec
push
add
mov
xor
add
mov
sub
add
add
mov
(bad)
fwait
and
cmp
ficom
add
xchg
lea
pop
add
pop
(bad)
cmp
sub
dec
pop
inc
add
in
push
push
and
jmp
push
jmp
push
jmp
push
ret
jmp
call
jmp
push
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
cdq
cmp
(bad)
fistp
imul
inc
mov
(bad)
mov
add
out
mov
shr
add
es
pop
pop
pop
pop
ret
xchg
push
mov
push
push
push
sub
mov
mov
mov
mov
mov
sub
sub
add
imul
and
cmp
sete
and
mov
cmp
setl
and
mov
mov
mov
mov
mov
mov
sub
mov
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
jmp
mov
mov
mov
mov
mov
and
xor
or
test
cmovne
mov
jmp
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
call
mov
mov
mov
call
mov
mov
mov
call
mov
mov
mov
call
mov
mov
mov
call
mov
mov
mov
call
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
movzx
cmp
setne
and
mov
mov
mov
mov
sub
sub
add
imul
and
cmp
sete
cmp
setl
mov
xor
mov
xor
mov
xor
mov
and
and
mov
and
and
or
or
xor
or
xor
or
and
or
test
mov
mov
cmovne
mov
jmp
mov
mov
mov
test
cmovne
mov
jmp
mov
mov
add
mov
mov
mov
jmp
mov
mov
mov
mov
mov
mov
sub
mov
mov
add
imul
and
cmp
sete
cmp
setl
mov
xor
mov
xor
xor
mov
and
and
mov
mov
and
mov
mov
and
or
mov
or
xor
or
xor
or
and
or
test
mov
cmovne
mov
jmp
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
movzx
cmp
sete
and
mov
mov
mov
sub
mov
add
imul
and
cmp
sete
cmp
setl
mov
xor
mov
xor
xor
mov
and
and
mov
mov
and
mov
mov
and
or
mov
or
xor
or
xor
or
and
or
test
mov
cmovne
mov
jmp
mov
mov
mov
test
cmovne
mov
jmp
mov
mov
mov
mov
mov
sub
sub
add
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
cmovne
mov
jmp
mov
mov
mov
mov
mov
mov
add
sub
sub
imul
and
cmp
sete
cmp
setl
mov
xor
mov
mov
xor
xor
mov
and
and
mov
and
and
or
or
xor
mov
or
xor
or
and
or
test
mov
cmovne
mov
jmp
mov
jmp
mov
jmp
mov
mov
mov
movzx
mov
movzx
cmp
cmovne
mov
jmp
mov
mov
mov
mov
mov
add
sub
sub
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
cmovne
mov
jmp
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
cmp
setne
and
mov
mov
mov
sub
mov
add
imul
and
cmp
sete
cmp
setl
mov
xor
mov
xor
xor
mov
and
and
mov
mov
and
mov
mov
and
or
mov
or
xor
or
xor
or
and
or
test
mov
cmovne
mov
jmp
mov
mov
mov
test
cmovne
mov
jmp
mov
jmp
mov
mov
add
mov
mov
mov
jmp
mov
jmp
mov
mov
mov
mov
mov
mov
add
sub
sub
imul
and
cmp
sete
cmp
setl
mov
xor
mov
mov
xor
xor
mov
and
and
mov
and
and
or
or
xor
mov
or
xor
or
and
or
test
mov
cmovne
mov
jmp
mov
mov
mov
mov
mov
sub
sub
add
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
cmovne
mov
jmp
mov
jmp
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
cmp
cmovne
mov
jmp
mov
mov
mov
mov
mov
mov
add
sub
sub
imul
and
cmp
sete
cmp
setl
mov
xor
mov
mov
xor
xor
mov
and
and
mov
and
and
or
or
xor
mov
or
xor
or
and
or
test
mov
cmovne
mov
jmp
mov
mov
mov
mov
mov
sub
mov
add
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
cmovne
mov
jmp
mov
jmp
mov
mov
mov
mov
mov
add
sub
sub
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
cmovne
mov
jmp
mov
mov
mov
movzx
mov
movzx
cmp
sete
and
mov
mov
mov
mov
sub
sub
add
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
cmovne
mov
jmp
mov
mov
mov
test
cmovne
mov
jmp
mov
jmp
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
movzx
cmp
cmove
mov
jmp
mov
mov
mov
mov
mov
add
sub
sub
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
cmovne
mov
jmp
mov
mov
mov
mov
mov
sub
mov
add
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
cmovne
mov
jmp
mov
jmp
mov
jmp
mov
mov
mov
mov
mov
mov
sub
mov
mov
add
imul
and
cmp
sete
cmp
setl
mov
xor
mov
xor
xor
mov
and
and
mov
mov
and
mov
mov
and
or
mov
or
xor
or
xor
or
and
or
test
mov
cmovne
mov
jmp
mov
mov
mov
mov
mov
sub
mov
add
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
cmovne
mov
jmp
mov
jmp
mov
mov
mov
movzx
mov
movzx
cmp
cmovne
mov
jmp
mov
jmp
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
cmp
cmovne
mov
jmp
mov
jmp
mov
mov
mov
movzx
mov
movzx
cmp
cmovne
mov
jmp
mov
mov
mov
mov
mov
mov
sub
mov
mov
add
imul
and
cmp
sete
cmp
setl
mov
xor
mov
xor
xor
mov
and
and
mov
mov
and
mov
mov
and
or
mov
or
xor
or
xor
or
and
or
test
mov
cmovne
mov
jmp
mov
mov
mov
mov
mov
mov
sub
mov
mov
add
imul
and
cmp
sete
cmp
setl
mov
xor
mov
xor
xor
mov
and
and
mov
mov
and
mov
mov
and
or
mov
or
xor
or
xor
or
and
or
test
mov
cmovne
mov
jmp
mov
jmp
mov
mov
mov
mov
mov
add
mov
mov
mov
add
mov
mov
movzx
mov
mov
mov
mov
mov
mov
mov
movzx
cmp
cmove
mov
jmp
mov
mov
mov
mov
mov
sub
sub
add
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
cmovne
mov
jmp
mov
mov
mov
mov
mov
mov
sub
mov
mov
add
imul
and
cmp
sete
cmp
setl
mov
xor
mov
xor
xor
mov
and
and
mov
mov
and
mov
mov
and
or
mov
or
xor
or
xor
or
and
or
test
mov
cmovne
mov
jmp
mov
jmp
mov
mov
mov
movzx
cmp
cmove
mov
jmp
mov
jmp
mov
mov
mov
mov
mov
add
mov
mov
movzx
mov
mov
mov
add
mov
mov
mov
mov
mov
movzx
cmp
cmovne
mov
jmp
mov
jmp
mov
mov
mov
movzx
cmp
cmove
mov
jmp
mov
jmp
mov
jmp
mov
mov
mov
mov
mov
add
mov
mov
movzx
mov
mov
mov
add
mov
mov
mov
mov
mov
movzx
cmp
cmove
mov
jmp
mov
mov
mov
mov
mov
mov
sub
mov
mov
add
imul
and
cmp
sete
cmp
setl
mov
xor
mov
xor
xor
mov
and
and
mov
mov
and
mov
mov
and
or
mov
or
xor
or
xor
or
and
or
test
mov
cmovne
mov
jmp
mov
mov
mov
mov
mov
mov
add
sub
sub
imul
and
cmp
sete
cmp
setl
mov
xor
mov
mov
xor
xor
mov
and
and
mov
and
and
or
or
xor
mov
or
xor
or
and
or
test
mov
cmovne
mov
jmp
mov
jmp
mov
mov
mov
mov
mov
mov
sub
mov
mov
add
imul
and
cmp
sete
cmp
setl
mov
xor
mov
xor
xor
mov
and
and
mov
mov
and
mov
mov
and
or
mov
or
xor
or
xor
or
and
or
test
mov
cmovne
mov
jmp
mov
mov
mov
mov
mov
mov
mov
movzx
cmp
sete
and
mov
mov
mov
mov
add
sub
sub
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
cmovne
mov
jmp
mov
mov
mov
test
cmovne
mov
jmp
mov
jmp
mov
mov
mov
mov
mov
mov
sub
sub
add
imul
and
cmp
sete
cmp
setl
mov
xor
mov
mov
xor
xor
mov
and
and
mov
and
and
or
or
xor
mov
or
xor
or
and
or
test
mov
cmovne
mov
jmp
mov
mov
mov
mov
mov
mov
sub
mov
mov
add
imul
and
cmp
sete
cmp
setl
mov
xor
mov
xor
xor
mov
and
and
mov
mov
and
mov
mov
and
or
mov
or
xor
or
xor
or
and
or
test
mov
cmovne
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
mov
mov
mov
mov
jmp
mov
mov
mov
jmp
mov
mov
lea
pop
pop
pop
pop
ret
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
jmp
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
jmp
mov
jmp
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
jmp
mov
jmp
mov
jmp
mov
mov
mov
mov
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
mov
mov
mov
mov
mov
mov
jmp
mov
jmp
nop
push
mov
push
push
push
sub
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
sub
mov
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
jmp
mov
mov
mov
mov
cmp
cmova
mov
jmp
mov
mov
jmp
mov
mov
mov
mov
mov
mov
add
sub
sub
imul
and
cmp
sete
cmp
setl
mov
xor
mov
mov
xor
xor
mov
and
and
mov
and
and
or
or
xor
mov
or
xor
or
and
or
test
mov
cmovne
mov
jmp
mov
mov
mov
mov
mov
shl
add
mov
mov
sub
add
shl
add
mov
mov
mov
sub
mov
add
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
cmovne
mov
jmp
mov
jmp
mov
mov
mov
cmp
cmovae
mov
jmp
mov
mov
mov
mov
mov
mov
call
mov
mov
cmp
cmove
mov
jmp
mov
mov
mov
jmp
mov
jmp
mov
add
mov
mov
jmp
mov
mov
mov
mov
mov
mov
sub
mov
mov
add
imul
and
cmp
sete
cmp
setl
mov
xor
mov
xor
xor
mov
and
and
mov
mov
and
mov
mov
and
or
mov
or
xor
or
xor
or
and
or
test
mov
cmovne
mov
jmp
mov
mov
mov
mov
mov
mov
add
sub
sub
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
cmovne
mov
jmp
mov
jmp
mov
add
pop
pop
pop
pop
ret
mov
mov
mov
shl
add
mov
sub
sub
add
shl
add
mov
mov
jmp
mov
mov
jmp
nop
push
mov
push
push
push
sub
mov
mov
mov
mov
mov
mov
mov
sub
mov
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
jmp
mov
movzx
mov
call
mov
movzx
mov
mov
call
mov
mov
mov
cmp
cmove
mov
jmp
mov
mov
mov
mov
mov
sub
mov
add
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
cmovne
mov
jmp
mov
mov
mov
mov
movzx
cmp
sete
and
mov
mov
mov
mov
sub
sub
add
imul
and
cmp
sete
cmp
setl
mov
xor
mov
mov
xor
xor
mov
and
and
mov
and
and
or
or
xor
mov
or
xor
or
and
or
test
mov
cmovne
mov
jmp
mov
mov
mov
test
cmovne
mov
jmp
mov
mov
mov
mov
mov
mov
sub
mov
mov
add
imul
and
cmp
sete
cmp
setl
mov
xor
mov
xor
xor
mov
and
and
mov
mov
and
mov
mov
and
or
mov
or
xor
or
xor
or
and
or
test
mov
cmovne
mov
jmp
mov
mov
mov
mov
mov
mov
add
sub
sub
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
cmovne
mov
jmp
mov
jmp
mov
mov
mov
mov
mov
mov
add
sub
sub
imul
and
cmp
sete
cmp
setl
mov
xor
mov
mov
xor
xor
mov
and
and
mov
and
and
or
or
xor
mov
or
xor
or
and
or
test
mov
cmovne
mov
jmp
mov
mov
mov
mov
mov
add
mov
mov
add
mov
mov
mov
sub
mov
mov
add
imul
and
cmp
sete
cmp
setl
mov
xor
mov
xor
xor
mov
and
and
mov
mov
and
mov
mov
and
or
mov
or
xor
or
xor
or
and
or
test
mov
cmovne
mov
jmp
mov
jmp
mov
movzx
mov
call
mov
movzx
mov
mov
call
mov
sub
sub
add
mov
mov
jmp
mov
mov
mov
mov
mov
sub
sub
add
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
cmovne
mov
jmp
mov
mov
mov
mov
mov
mov
mov
mov
add
sub
sub
imul
and
cmp
sete
cmp
setl
mov
xor
mov
mov
xor
xor
mov
and
and
mov
and
and
or
or
xor
mov
or
xor
or
and
or
test
mov
cmovne
mov
jmp
mov
add
pop
pop
pop
pop
ret
mov
jmp
mov
mov
jmp
mov
add
mov
mov
add
mov
mov
jmp
mov
jmp
nop
push
mov
push
push
push
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
mov
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
jmp
mov
mov
cmp
cmovne
mov
jmp
mov
mov
mov
mov
mov
mov
sub
mov
mov
add
imul
and
cmp
sete
cmp
setl
mov
xor
mov
xor
xor
mov
and
and
mov
mov
and
mov
mov
and
or
mov
or
xor
or
xor
or
and
or
test
mov
cmovne
mov
jmp
mov
mov
mov
mov
mov
mov
mov
cdq
idiv
mov
mov
mov
mov
mov
mov
mov
add
sub
sub
imul
and
cmp
sete
cmp
setl
mov
xor
mov
xor
mov
xor
mov
and
and
mov
mov
and
and
or
or
xor
mov
or
xor
or
and
or
test
mov
cmovne
mov
jmp
mov
jmp
mov
mov
mov
sub
mov
sub
add
sub
mov
mov
mov
mov
mov
cdq
mov
idiv
mov
mov
jmp
mov
add
pop
pop
pop
pop
ret
mov
mov
cdq
idiv
mov
mov
mov
mov
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
and
sub
jmp
call
jmp
push
jmp
push
jmp
push
jmp
push
ret
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
out
inc
or
dec
adc
push
call
add
cdq
mov
mov
mov
out
add
(bad)
cmp
add
cld
out
xchg
add
aaa
add
gs
mov
xchg
test
lods
cmp
and
add
mov
sbb
aad
jg
jl
dec
mov
(bad)
sbb
cdq
add
popf
fild
mov
mov
adc
sbb
add
add
fwait
mov
and
dec
ins
nop
scas
add
jmp
cdq
add
sub
mov
setno
js
pushf
add
ins
xchg
leave
adc
(bad)
sbb
add
add
mov
add
aam
add
add
add
add
and
and
je
jne
xor
add
test
sbb
je
jmp
mov
sub
mov
and
je
jmp
out
addr16
xor
dec
(bad)
jmp
add
mov
add
popf
add
cmove
fld
jmp
and
cmps
repnz
mov
mov
mov
add
mov
sub
sub
or
jnp
push
add
cmp
sete
cmp
setl
adc
and
add
(bad)
ret
or
mov
add
pop
add
add
fmul
dec
add
lea
add
mov
(bad)
scas
xor
add
add
inc
and
or
add
inc
pop
jmp
fs
(bad)
mov
mov
mov
lds
mov
mov
adc
stos
dec
arpl
call
mov
lea
add
and
mov
add
jg
es
dec
adc
dec
add
mov
call
mov
mov
mov
popa
and
mov
mov
xor
mov
mov
and
mov
and
call
mov
mov
xchg
and
add
add
add
mov
xor
(bad)
sbb
push
mov
cs
and
add
add
pop
add
mov
mov
mov
push
imul
and
mov
mov
mov
mov
inc
in
add
add
rol
xchg
outs
inc
xor
dec
push
pop
mov
mov
add
in
xor
adc
xchg
gs
sub
add
imul
and
cmp
xchg
xchg
(bad)
sbb
or
add
setl
fdiv
hlt
jmp
inc
and
xor
xor
popf
inc
and
mov
and
inc
inc
mov
inc
and
and
mov
mov
ins
jecxz
jmp
or
(bad)
jl
xor
inc
les
xchg
(bad)
fiadd
xor
mov
or
xor
add
ss
test
cmovb
mov
add
mov
add
test
add
add
cmp
loopne
cld
hlt
ret
pop
pop
pop
ret
mov
mov
lea
add
and
add
add
(bad)
or
or
add
jmp
and
mov
call
mov
mov
push
push
in
mov
xor
mov
mov
mov
and
mov
and
push
(bad)
(bad)
(bad)
mov
and
add
pop
and
movs
and
or
add
adc
and
mov
data16
(bad)
jmp
and
pop
add
mov
(bad)
(bad)
out
test
mov
and
add
dec
mov
mov
mov
mov
mov
dec
and
adc
and
call
mov
lea
mov
add
mov
inc
movs
sahf
xor
pusha
add
xchg
ss
mov
imul
jecxz
add
pop
or
mov
and
mov
mov
je
push
(bad)
mov
add
dec
add
jno
add
add
or
adc
rol
mov
dec
test
jmp
jmp
data16
push
mov
push
push
push
and
sub
jmp
push
ret
jmp
push
jmp
call
jmp
push
jmp
push
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
mov
cmp
adc
ret
mov
and
add
add
add
mov
int3
hlt
add
add
add
adc
pushf
add
add
(bad)
xlat
and
add
add
add
add
mov
loopne
add
mov
mov
cmp
lds
add
add
inc
adc
add
mov
inc
or
add
add
inc
nop
add
xchg
add
mov
adc
rol
and
mov
add
add
mov
mov
mov
mov
sub
mov
mov
jg
cmp
add
add
and
push
jmp
(bad)
and
mov
add
test
add
je
add
add
add
mov
jg
jmp
fadd
sub
repz
and
add
add
test
mov
add
mov
sub
mov
(bad)
and
add
rol
shr
adc
add
add
dec
dec
add
jmp
mov
mov
pushf
sub
mov
ud2
and
add
add
add
sub
mov
je
jmp
mov
add
call
add
add
(bad)
and
add
jmp
mov
sub
adc
inc
add
test
std
xor
add
add
in
test
popf
add
jg
jmp
push
test
add
pop
mov
dec
retf
(bad)
mov
and
add
movzx
add
shl
fsubr
add
fwait
sbb
add
pop
add
jg
jmp
retf
test
xor
push
push
lds
mov
add
add
add
pop
add
mov
jg
jmp
mov
and
add
cmp
outs
mov
mov
packuswb
add
add
add
and
add
test
adc
inc
add
(bad)
add
jmp
cmp
sbb
jp
dec
sub
adc
and
add
add
cmps
add
add
add
add
mov
mov
sbb
mov
xchg
or
add
add
scas
test
add
add
mov
and
add
add
add
add
add
mov
and
add
add
mov
sbb
test
rol
xlat
and
add
add
mov
xor
jmp
mov
and
add
jnp
mov
xchg
or
add
add
add
stos
adc
pop
add
sub
(bad)
push
and
add
add
add
cmp
sbb
jp
mov
add
je
test
add
test
mov
je
sub
pop
test
add
add
and
add
cmp
and
add
sbb
mov
ins
mov
test
mov
sub
mov
je
mov
mov
add
mov
fs
outs
add
add
popf
mov
aaa
mov
and
je
jmp
mov
and
rol
inc
jle
in
jmp
pop
je
jmp
mov
push
pop
adc
cmp
inc
and
je
je
add
add
add
sub
mov
mov
test
inc
jmp
mov
push
jne
mov
pop
push
getsec
das
add
call
mov
sub
mov
xorps
add
jmp
mov
sub
mov
je
jmp
mov
fwait
cmp
dec
jno
inc
and
je
ins
add
test
jmp
mov
popf
mov
adc
shl
mov
cmp
cmove
xchg
mov
add
mov
or
add
mov
test
mov
jne
add
pop
les
add
mov
mov
mov
mov
mov
mov
or
fdiv
(bad)
inc
test
pop
add
adc
cmp
jno
xchg
mov
scas
mov
or
add
or
and
add
add
xor
lods
add
pushf
mov
and
add
add
add
mov
add
mov
mov
inc
or
inc
adc
add
add
rol
pusha
dec
jno
mov
fs
mov
in
add
add
cmovne
xchg
ror
pop
and
jmp
test
mov
popf
jb
mov
mov
mov
arpl
loopne
push
add
add
jge
lock
clc
and
jmp
add
mov
mov
add
xor
pusha
fld
test
and
mov
mov
and
mov
idiv
ror
movs
scas
inc
and
mov
nop
xor
and
cmp
or
mov
nop
mov
and
add
and
mov
mov
mov
mov
mov
and
call
jg
js
scas
push
add
add
add
cmp
fcom
add
sub
xor
mov
cmovne
mov
add
mov
jmp
mov
mov
popf
ror
add
and
inc
add
mov
add
add
mov
cld
cmp
rcr
xor
fidivr
adc
add
test
pop
adc
pusha
jg
loop
rol
test
add
add
add
and
test
add
add
jmp
dec
add
mov
mov
mov
mov
or
mov
xor
add
xor
rep
out
add
add
cmp
dec
dec
add
vmresume
mov
sbb
mov
mov
test
and
and
cmove
test
or
xor
or
add
mov
jb
test
mov
out
icebp
mov
pop
test
jbe
int
mov
mov
cmp
fcom
mov
add
add
add
mov
sub
add
imul
out
add
add
add
and
sbb
add
pushf
ret
mov
sub
mov
je
xor
mov
rol
xor
(bad)
aas
jns
cwde
push
out
or
pop
mov
lea
retf
xchg
pop
cld
rol
xor
inc
icebp
mov
and
mov
dec
je
add
add
mov
mov
test
inc
ror
inc
jmp
mov
ds
add
stos
xor
add
sbb
add
sbb
dec
sahf
adc
aas
add
add
mov
popa
add
add
add
add
add
sar
add
int3
and
scas
dec
and
fdivr
add
pushf
add
xchg
mov
setl
mov
rcl
add
mov
and
and
mov
mov
push
nop
repnz
movs
ror
jb
sub
xor
or
xor
sbb
and
mov
and
inc
icebp
mov
pop
cmps
add
fstp
mov
mov
and
popf
call
mov
mov
add
mov
mov
add
push
fdivr
sub
add
imul
xor
cmp
sete
add
jne
(bad)
mov
xchg
mov
sti
xchg
(bad)
ret
inc
fstp
test
jmp
rcr
mov
int
hlt
jp
pop
outs
je
test
fdivr
dec
lods
popf
jb
add
add
fadd
fcomi
jmp
mov
add
jnp
jmp
data16
push
mov
push
push
push
and
sub
jmp
push
jmp
call
jmp
push
jmp
push
ret
jmp
push
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
pushf
inc
adc
dec
adc
push
xchg
mov
mov
mov
sbb
mov
or
mov
lock
xor
add
add
mov
mov
test
mov
dec
xor
mov
and
add
add
test
add
and
retf
sbb
push
shl
cmps
je
and
jnp
add
mov
add
inc
jmp
mov
sub
pop
and
add
fstp
jmp
xchg
sub
mov
and
add
add
(bad)
and
jns
jmp
stos
test
add
add
jle
jg
add
pop
je
jmp
adc
add
sub
push
test
xchg
(bad)
and
add
fadd
add
add
add
je
and
xor
add
test
mov
add
(bad)
or
add
add
sub
mov
jg
mov
add
add
test
add
add
pop
test
(bad)
mov
mov
or
fadd
(bad)
sahf
das
test
sub
jns
(bad)
and
add
leave
mov
test
cmc
add
outs
sub
add
int3
test
je
retf
xchg
or
add
test
add
add
mov
jg
jmp
mov
add
xchg
mov
data16
add
xchg
xlat
pop
add
jmp
mov
sub
mov
jg
jmp
mov
sub
das
mov
adc
std
xor
movs
test
add
out
add
dec
cmc
add
sub
mov
add
cmps
add
add
add
sahf
add
and
and
add
sub
adc
add
jb
add
add
sbb
test
add
(bad)
and
add
stos
pop
add
add
add
sub
mov
sub
add
pop
and
add
add
mov
test
add
add
(bad)
pop
add
add
add
add
mov
sub
mov
setae
and
add
mov
mov
add
lock
add
(bad)
and
add
jmp
mov
(bad)
dec
call
add
add
std
push
sbb
add
or
add
mov
dec
mov
add
mov
add
jg
jmp
mov
mov
fsubr
test
add
add
test
xor
add
mov
sub
sub
(bad)
and
add
nop
add
add
jbe
add
add
add
xor
add
(bad)
jae
pop
inc
add
outs
or
add
add
push
mov
jg
jmp
add
jnp
mov
mov
and
add
add
es
add
dec
add
movs
cwde
dec
add
lods
cmps
push
retf
mov
add
add
cwde
and
inc
test
add
add
add
add
mov
je
jb
or
add
add
sub
mov
std
add
mov
jmp
mov
outs
cmps
push
nop
mov
add
add
test
or
test
mov
pop
and
add
sub
mov
and
add
(bad)
and
xor
leave
add
dec
xor
jbe
dec
(bad)
mov
test
add
sbb
push
cmps
add
jle
add
mov
sub
mov
jg
fidivr
add
mov
dec
and
mov
ss
and
pop
add
xadd
pop
sahf
add
inc
or
add
and
sub
mov
and
or
fwait
jg
dec
add
(bad)
add
mov
mov
add
je
mov
dec
test
and
xchg
and
mov
xorps
mov
aaa
jns
mov
and
xchg
mov
test
add
or
mov
or
pop
into
test
add
outs
int
test
jg
retf
fst
cmovl
fwait
add
mov
cmps
add
jbe
test
xor
mov
and
test
iret
rol
bswap
cmps
sahf
add
dec
add
add
mov
add
outs
cdq
outs
push
mov
je
jmp
mov
and
add
std
sub
test
add
paddq
add
add
add
mov
mov
sub
stos
test
add
add
test
add
jmp
sbb
(bad)
mov
test
add
jns
mov
jmp
out
add
dec
add
add
rol
je
jmp
mov
add
mov
jg
jmp
mov
sub
mov
shld
add
jmp
jl
dec
pop
pop
inc
sub
mov
sub
add
or
add
mov
or
sub
mov
cmp
sbb
std
xor
mov
mov
js
inc
pop
sbb
jmp
mov
sub
mov
je
jmp
mov
sub
mov
dec
jns
aas
(bad)
and
add
push
add
add
mov
outs
push
mov
repnz
add
add
mov
or
sub
das
test
push
scas
and
inc
add
xchg
and
add
add
mov
je
jmp
mov
fisttp
sub
mov
(bad)
adc
cmps
add
(bad)
adc
add
jmp
mov
sub
mov
(bad)
adc
add
stos
jb
pop
add
add
mov
jg
retf
add
add
mov
sub
sub
jbe
inc
add
add
add
sub
mov
and
xor
add
pop
add
test
add
add
sbb
xchg
add
add
mov
add
add
mov
and
add
add
(bad)
dec
add
add
jbe
add
add
add
mov
and
add
add
add
mov
sub
mov
(bad)
dec
mov
fst
dec
push
fsub
imul
and
add
add
cmps
add
add
add
mov
sub
mov
sahf
jg
dec
add
add
mov
sub
mov
xchg
(bad)
pop
or
add
add
fadd
mov
and
movs
add
sub
mov
mov
jecxz
xor
add
add
cmps
sub
mov
sub
xchg
or
(bad)
cmps
add
add
sub
fwait
add
add
cmc
popf
repnz
sub
add
(bad)
pop
and
add
add
dec
add
add
mov
sbb
das
xchg
add
mov
and
sub
fwait
and
test
fldenv
add
add
add
and
add
sub
rol
jg
ja
and
(bad)
or
sub
push
test
add
add
sub
fiadd
add
mov
and
sub
or
jg
lods
add
and
pushf
add
mov
push
add
or
(bad)
add
add
add
cmps
add
mov
and
add
std
movsx
add
add
dec
inc
pop
add
add
test
sub
xchg
jmp
mov
add
pop
retf
sub
jg
fld
add
add
sub
test
add
add
adc
add
rol
push
sbb
hlt
aas
jne
pop
mov
jg
jmp
mov
sbb
aaa
out
test
add
je
jmp
mov
test
retf
mov
jg
jp
sub
fwait
xchg
add
cmps
sbb
jb
mov
je
leave
hlt
data16
mov
sub
mov
sbb
jmp
sbb
sub
sub
adc
fwait
jmp
sub
and
xor
push
and
test
add
and
gs
jl
jg
adc
sbb
and
add
add
add
rol
xchg
or
or
sub
das
mov
fadd
std
add
test
add
and
dec
add
sub
mov
and
add
setae
add
add
add
inc
add
test
movs
add
hlt
jns
jno
mov
add
je
jmp
mov
and
add
cmps
aad
test
add
add
jmp
mov
outs
call
int3
add
sahf
je
jmp
mov
mov
xchg
dec
cmp
add
test
add
sub
add
xor
or
mov
clc
test
adc
add
inc
add
test
add
pop
push
mov
minps
add
add
loopne
add
add
add
mov
or
pop
sbb
add
add
add
mov
inc
mov
mov
and
add
movs
add
cmp
add
sub
sahf
test
add
inc
lmsw
xchg
cmps
and
xchg
and
add
add
mov
add
test
pop
fsub
add
add
mov
dec
test
adc
add
mov
test
xor
test
add
je
jmp
adc
(bad)
bound
add
repnz
add
mov
lods
fidivr
retf
test
add
pop
je
jmp
mov
and
add
cmps
sub
push
pop
sub
sub
fwait
add
rol
add
sub
rcl
add
test
or
lods
mov
add
add
cmps
sub
mov
and
icebp
or
jmp
mov
sub
lock
add
xor
test
or
mov
cmp
add
add
mov
and
sahf
cmps
add
add
adc
add
loop
ds
test
mov
jl
jns
jmp
mov
sub
mov
and
add
pop
push
inc
add
mov
sub
mov
(bad)
pop
mov
sub
add
jmp
mov
mov
mov
and
add
add
add
dec
ror
add
jnp
add
mov
mov
retf
pop
sub
cmovl
pop
and
add
fnstcw
cmp
add
mov
sub
clc
pop
xor
add
cmove
mov
jmp
cmp
scas
(bad)
pop
push
rol
add
test
dec
rcl
and
add
add
rcl
add
sub
sbb
mov
fadd
add
sbb
cmp
push
and
add
pop
sldt
mov
mov
and
add
mov
mov
fstp
xor
mov
mov
and
push
out
cmp
retf
and
inc
cld
add
and
mov
jmp
fcmovb
add
add
xchg
test
daa
je
mov
pusha
inc
and
and
fst
call
mov
mov
mov
pop
cmp
add
add
mov
add
jns
pop
aas
and
mov
mov
mov
pushf
cmp
mov
add
add
adc
scas
repz
out
add
add
add
xchg
xabort
test
jg
test
xor
xor
mov
and
jnp
mov
xor
and
or
mov
and
or
test
xlat
or
das
les
cmovge
mov
add
(bad)
push
add
jge
aad
mov
mov
mov
mov
sub
mov
add
add
add
mov
mov
loop
add
add
or
push
xchg
aam
mov
(bad)
(bad)
stos
fisub
cli
xor
ror
ret
dec
jmp
add
push
pop
and
add
add
adc
jae
pop
ja
add
add
mov
aaa
test
mov
ins
add
mov
mov
mov
mov
ins
pusha
sub
call
and
add
add
sub
jo
adc
fwait
or
outs
sbb
mov
mov
sbb
aaa
add
mov
mov
clc
out
add
add
mov
mov
and
clc
in
add
add
cmp
sete
cmp
setl
mov
ret
xor
add
add
and
mov
mov
sub
inc
and
mov
imul
or
mov
sub
xor
or
xor
xor
idiv
mov
cmovne
mov
and
add
add
jl
add
std
add
mov
add
add
(bad)
enter
movzx
sbb
mov
and
lods
push
inc
out
rol
jns
jl
lods
mov
mov
and
add
add
push
add
mov
or
add
mov
(bad)
jmp
and
push
leave
xchg
push
sub
inc
and
add
and
dec
xor
add
mov
mov
mov
add
add
add
cmp
punpckldq
stos
and
add
add
push
cmp
pop
out
add
add
cs
push
mov
and
imul
or
cmp
sete
cmp
setl
mov
and
add
cmps
add
jne
and
mov
cwde
add
mov
or
and
mov
mov
and
rcl
pop
mov
and
or
mov
mov
js
popf
mov
or
mov
clc
push
jl
pop
or
ret
add
retf
add
fdivr
loopne
mov
mov
push
add
add
jecxz
dec
(bad)
mov
(bad)
mov
test
psrad
mov
jmp
mov
jmp
mov
movzx
mov
(bad)
ror
mov
inc
add
sbb
add
sub
movzx
mov
aas
mov
or
add
or
paddsw
add
push
add
mov
pop
push
or
add
movzx
mov
add
std
mov
add
mov
add
and
mov
mov
mov
call
sub
push
js
add
mov
je
or
mov
mov
mov
mov
and
je
add
push
adc
mov
in
(bad)
rcl
call
mov
mov
cmp
cvtdq2ps
int3
mov
dec
std
or
add
test
and
add
in
or
add
test
jecxz
sub
add
mov
and
jnp
add
add
xchg
shl
pop
add
mov
pop
xchg
and
push
push
fisttp
inc
mov
call
mov
add
add
cmps
add
jg
sar
std
add
mov
mov
mov
call
add
mov
mov
add
sbb
push
add
add
add
inc
retf
and
pop
pop
inc
ins
int
cmps
add
test
ret
add
or
dec
jae
inc
or
mov
mov
sub
add
mov
ins
add
add
add
and
mov
push
mov
mov
jmp
mov
mov
sbb
mov
and
fiadd
mov
xor
and
inc
and
test
dec
and
in
inc
and
pop
cld
stos
push
add
mov
js
add
add
and
movs
add
jmp
mov
pusha
sbb
sbb
mov
add
mov
sbb
out
add
add
add
cmp
sub
add
add
(bad)
cwde
sub
setl
mov
scas
fcmovbe
ret
inc
sbb
add
jmp
mov
mov
mov
add
mov
mov
add
or
push
sbb
scas
repz
cmp
dec
iret
(bad)
xchg
dec
add
test
xor
pop
repnz
and
mov
or
rcl
push
or
xchg
repz
and
or
or
or
and
or
test
mov
pop
mov
jmp
mov
jmp
mov
mov
mov
mov
mov
pop
jmp
xor
imul
cmp
add
inc
add
cmp
ret
push
add
add
pushf
or
sub
test
cmovne
mov
push
add
or
dec
and
add
popa
js
jle
test
mov
mov
mov
add
add
clc
add
adc
add
inc
and
or
ror
ret
adc
or
sbb
add
mov
push
jp
cmps
mov
mov
or
mov
or
xchg
mov
ja
inc
fcmovne
push
and
or
test
push
jmp
mov
push
add
xchg
jmp
mov
xor
and
std
jnp
repnz
add
pop
mov
arpl
mov
cmc
mov
mov
mov
mov
add
sub
inc
and
push
clc
add
(bad)
clc
sub
(bad)
(bad)
fsub
mov
setl
mov
xor
mov
xor
stc
repnz
and
mov
mov
and
mov
mov
xlat
ror
mov
arpl
or
xor
add
sub
das
mov
cmovne
mov
add
sti
push
or
mov
sbb
(bad)
bound
add
mov
add
retf
push
and
add
and
pop
mov
out
add
xchg
mov
xchg
xor
cmp
setl
mov
xor
add
xor
mov
cmp
(bad)
mov
xor
ss
or
or
dec
cmp
inc
xor
or
and
add
inc
icebp
int3
mov
push
xchg
add
mov
jmp
mov
xchg
sub
mov
sub
add
mov
add
add
or
out
add
inc
and
call
loope
fs
sub
dec
and
sub
add
sbb
fstp
add
and
or
fdiv
les
inc
ja
pop
xchg
retf
xchg
or
test
rol
sub
(bad)
icebp
mov
jmp
mov
xchg
fsubr
nop
jle
fs
mov
add
xchg
ret
xor
add
mov
out
mov
mov
sbb
add
ret
mov
scas
repz
cmp
sete
adc
or
sub
xchg
nop
(bad)
mov
clc
repz
push
aas
ror
ror
add
push
mov
dec
fisttp
add
test
cmovne
mov
dec
syscall
add
mov
push
add
call
in
pop
and
push
add
push
mov
add
mov
mov
jmp
fisttp
int
jecxz
mov
into
xor
push
mov
sub
mov
add
(bad)
scas
repz
cmp
sete
cmp
(bad)
(bad)
mov
repz
or
idiv
mov
mov
retf
push
cld
fcmovnu
dec
adc
mov
xor
lods
xchg
(bad)
rol
mov
and
inc
xor
add
add
add
js
lock
adc
cmp
sti
dec
test
add
add
mov
xor
mov
adc
xor
mov
and
stc
(bad)
sbb
sbb
add
inc
sub
clc
shr
and
movs
jge
add
mov
test
mov
cmovne
mov
jmp
mov
mov
mov
push
shr
and
add
and
(bad)
fiadd
xchg
mov
add
add
push
push
add
ret
mov
add
add
mov
mov
mov
add
add
imul
add
add
imul
and
xchg
cli
add
inc
add
xchg
inc
cmp
setl
mov
stc
cli
xor
fwait
shl
jmp
push
es
add
add
add
aaa
ror
pop
mov
add
cmp
add
and
setne
and
in
mov
pop
add
push
add
add
mov
inc
jle
jmp
add
add
imul
cmp
fadd
add
(bad)
xchg
(bad)
adc
or
add
setl
mov
xor
adc
mov
xor
mov
and
mov
and
and
mov
ins
fdiv
les
(bad)
ja
add
or
test
pushf
xor
xadd
adc
push
add
add
or
add
mov
mov
xchg
add
cmovne
lock
push
add
and
add
and
jmp
add
and
imul
cld
jmp
add
inc
add
mov
mov
jmp
mov
mov
adc
or
sub
cmovne
mov
jmp
mov
mov
dec
adc
add
add
and
inc
xor
fs
mov
inc
test
retf
jmp
sub
mov
mov
xor
push
add
add
out
call
xor
sub
imul
add
add
movups
pop
pop
or
fld
pushf
pushf
iret
mov
mov
(bad)
pusha
cmps
cmovne
mov
jmp
mov
mov
mov
test
add
xchg
jg
add
inc
push
adc
adc
add
mov
add
add
or
scas
xlat
pop
loop
add
add
std
shld
(bad)
mov
add
pushf
inc
mov
xlat
cli
jb
push
(bad)
aad
cmovne
add
add
add
(bad)
idiv
pop
pop
jo
ret
(bad)
pop
and
add
or
mov
mov
add
jns
add
xor
das
mov
and
add
add
push
add
mov
retf
iret
and
add
add
adc
add
add
add
call
jg
add
mov
push
enter
(bad)
or
mov
mov
sub
daa
test
add
rcr
pop
sub
add
xor
mov
call
retf
test
adc
popa
push
xchg
sahf
pop
retf
retf
imul
fld
pop
and
add
add
pop
pop
iret
jmp
(bad)
pop
and
add
and
jnp
add
mov
leave
cmp
add
(bad)
cmp
test
test
xor
(bad)
sbb
add
in
test
add
add
cwde
cmps
sub
add
add
test
add
mov
dec
shl
(bad)
dec
pop
add
in
push
push
and
sub
push
jmp
push
jmp
push
ret
jmp
call
jmp
push
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
mov
ds
adc
cmp
mov
and
test
xchg
push
add
add
or
imul
xor
add
add
xchg
sbb
add
add
add
test
pop
add
(bad)
hlt
jbe
loope
lods
and
add
add
ret
xor
test
add
mov
add
out
add
add
mov
add
add
push
test
add
sbb
add
mov
add
xchg
mov
add
lahf
mov
call
jmp
or
and
add
push
jbe
pop
and
add
add
jmp
xchg
adc
add
mov
add
(bad)
add
add
and
add
cmp
ds
add
(bad)
stos
add
movs
add
pop
ds
add
mov
mov
setbe
add
int3
add
add
mov
and
mov
add
mov
xchg
(bad)
cmp
add
mov
int
add
mov
xorps
add
add
movs
in
pop
and
add
sbb
mov
add
(bad)
fisub
add
jmp
mov
sub
adc
adc
add
add
js
add
add
sub
mov
jg
jmp
mov
add
nop
mov
add
(bad)
sbb
add
add
add
sub
mov
nop
add
add
mov
add
imul
das
mov
aam
cmps
add
add
sbb
add
mov
add
mov
jg
int3
push
add
lea
add
sub
mov
femms
das
add
add
add
and
add
add
jbe
loope
pop
and
add
add
sbb
add
or
add
add
mov
add
(bad)
xchg
sbb
add
add
and
add
add
mov
(bad)
add
add
add
add
sub
mov
push
add
fild
add
mov
int3
int
ds
push
or
add
add
mov
add
mov
paddb
or
add
adc
add
mov
sub
push
sahf
and
add
xchg
jg
jmp
scas
test
mov
add
sub
mov
je
jmp
or
and
imul
sbb
test
pop
add
movntps
add
add
addr16
sbb
mov
add
loope
or
sahf
test
je
pop
pushf
add
add
call
mov
(bad)
add
mov
add
add
test
add
add
hlt
sar
enter
je
jmp
mov
add
mov
push
(bad)
and
add
add
add
sub
cmp
and
add
push
je
jmp
mov
sub
mov
psubsb
add
sbb
add
cmp
and
mov
mov
mov
jmp
mov
and
add
sub
mov
and
add
add
(bad)
and
add
xor
add
xchg
xchg
sub
mov
sub
lods
pop
add
test
sub
push
adc
mov
jg
jmp
or
dec
cmp
add
sub
mov
aam
mov
sbb
jmp
mov
sub
mov
and
add
mov
test
add
add
add
test
pop
mov
js
add
je
xor
add
mov
add
push
into
imul
mov
add
test
or
add
mov
sub
mov
je
jmp
mov
push
in
and
push
test
xchg
add
sbb
js
loopne
sbb
lea
sub
mov
je
jmp
mov
and
test
jbe
push
mov
je
dec
stc
add
add
xchg
or
add
pop
sbb
mov
pop
test
add
mov
sub
sbb
add
je
jmp
mov
sub
mov
aam
sbb
add
inc
add
loope
test
push
add
sub
mov
sub
movs
add
cmp
push
cmp
sbb
test
or
add
push
add
add
add
fstp
and
jecxz
or
sbb
repz
add
add
and
inc
and
sbb
(bad)
lea
mov
xchg
and
fwait
add
test
push
xor
xor
mov
lds
add
mov
sub
mov
repnz
add
mov
test
add
loope
es
and
add
sub
add
call
mov
and
je
jmp
das
jecxz
add
add
inc
lds
adc
sbb
int3
push
add
push
mov
cwde
xlat
aas
adc
pop
je
jmp
mov
mov
loope
cld
push
or
cli
add
xor
add
xchg
mov
xor
cmp
jl
inc
and
sub
jmp
pop
inc
or
add
scas
push
add
add
add
add
setne
inc
add
add
jecxz
or
test
stos
inc
ror
add
mov
mov
mov
loope
mov
add
mov
movs
out
add
add
xchg
inc
and
mov
add
sub
sub
xchg
inc
add
cmp
mov
pushf
ror
cmp
ret
pop
repz
cmp
(bad)
mov
mov
and
sbb
imul
rcr
out
mov
or
xor
or
or
add
aam
out
(bad)
fwait
and
fwait
inc
inc
mov
jmp
sar
test
adc
mov
mov
movzx
push
cmps
and
nop
or
mov
inc
push
sbb
(bad)
dec
add
push
add
cmp
mov
sub
sub
adc
and
scas
jb
mov
js
add
add
xchg
mov
setl
mov
xor
mov
dec
mov
xor
adc
mov
cdq
rol
(bad)
add
sub
ror
hlt
or
xor
mov
and
or
adc
or
add
xlat
or
test
mov
mov
jmp
sbb
ds
add
xchg
hlt
jnp
loope
cmps
or
add
mov
mov
adc
mov
call
sub
add
add
shl
push
data16
mov
mov
mov
or
mov
mov
cmp
mov
or
mov
mov
ds
push
add
push
mov
mov
sub
xchg
add
mov
xchg
pop
or
add
test
push
add
jg
test
jmp
mov
mov
mov
mov
add
add
in
add
mov
xchg
test
inc
and
mov
inc
ja
add
add
add
cmp
cmp
setl
xor
mov
add
jl
lock
and
and
mov
sub
and
out
inc
and
push
pop
and
and
or
mov
xor
or
xor
movs
retf
aam
out
mov
rcpps
mov
jmp
or
dec
and
add
mov
mov
inc
inc
add
add
add
sbb
mov
push
popa
and
call
mov
mov
add
add
mov
pop
and
add
add
fisubr
fmul
push
movs
add
mov
iret
mov
sahf
inc
cmp
sub
imul
mov
aaa
in
and
test
add
add
add
call
push
jecxz
mov
cld
movs
add
mov
mov
add
mov
out
or
ret
out
or
add
add
imul
and
sbb
lea
add
xchg
ret
cmp
setl
mov
ss
xor
or
test
cmovne
mov
inc
adc
inc
movs
cmp
xchg
cld
movs
add
test
cmovne
mov
mov
xlat
and
or
xchg
adc
mov
lods
xlat
lahf
bound
out
add
add
mov
test
scas
xlat
adc
add
add
xchg
ret
cmp
setl
mov
test
xor
adc
and
add
or
add
mov
push
mov
mov
add
je
jg
out
add
mov
pop
ja
xlat
and
sbb
outs
pop
loope
add
pushf
(bad)
lahf
fisub
jecxz
sti
or
test
cvtdq2ps
mov
ror
mov
xchg
add
test
push
sbb
rcr
fild
add
add
add
add
scas
repz
cmp
jge
add
add
pushf
(bad)
mov
ds
test
ret
add
inc
jmp
pop
add
jmp
mov
mov
jecxz
repz
cld
inc
add
movs
sub
dec
enter
inc
jge
ret
and
nop
add
add
sbb
inc
and
lea
xchg
or
pop
cmp
mov
mov
mov
call
mov
or
mov
and
jns
fadd
jmp
add
mov
mov
push
dec
push
add
nop
mov
pop
add
push
mov
mov
mov
jmp
imul
mov
add
rdrand
and
cmp
cmovl
cmp
setl
push
inc
and
mov
and
sub
aad
loopne
inc
retf
cmp
not
add
mov
jmp
mov
mov
mov
mov
mov
repz
jmp
add
stc
ret
js
rcr
cmp
fwait
(bad)
xchg
or
(bad)
xchg
dec
add
and
test
xor
xor
mov
xor
sbb
mov
mov
and
and
or
xor
mov
pusha
mov
cld
test
das
je
inc
cmovne
push
mov
pop
add
add
mov
mov
mov
push
mov
push
mov
add
add
cmp
out
mov
pop
xor
mov
mov
add
jmp
add
js
jmp
nop
adc
push
push
and
pop
in
add
xchg
out
add
add
pushf
ret
mov
inc
add
fdiv
sbb
test
add
and
and
xchg
and
or
xchg
sub
test
pushf
ins
and
adc
inc
mov
jmp
and
mov
xchg
and
add
cmp
mov
jmp
xchg
test
add
add
call
(bad)
mov
add
xor
mov
scas
repz
fldenv
mov
mov
add
inc
ror
add
call
ds
hlt
in
add
mov
call
xlat
and
sub
xor
(bad)
ficom
pop
imul
and
cmp
sete
cmp
setl
push
fimul
xor
or
popf
ror
add
cmp
and
add
add
(bad)
add
mov
pushf
or
add
mov
call
pop
xor
out
add
add
sbb
push
lds
inc
imul
push
add
add
push
cmp
setnp
mov
test
push
sti
rol
not
cmovne
sahf
popf
add
push
lea
add
mov
jmp
(bad)
in
and
add
fadd
add
add
and
add
add
in
retf
add
pop
loopne
add
pop
pop
ret
mov
add
mov
mov
mov
mov
add
adc
jo
movs
inc
add
mov
stc
add
add
test
add
sbb
inc
add
add
add
xchg
mov
jl
xchg
inc
stos
or
(bad)
mov
or
add
mov
mov
add
movs
in
adc
ds
add
xchg
mov
mov
xchg
adc
and
add
add
mov
or
mov
call
mov
mov
mov
sub
movs
addr16
jmp
xor
rol
xchg
mov
mov
push
push
sbb
or
add
push
cmp
mov
sub
xchg
ret
and
add
mov
dec
sub
add
mov
push
mov
push
add
mov
mov
push
dec
ds
test
call
mov
inc
add
sbb
inc
and
add
add
add
adc
fadd
mov
mov
or
and
jns
add
add
test
add
add
je
mov
or
sub
add
add
pop
pop
cwde
rol
push
push
test
mov
rol
add
push
and
xchg
add
jp
cs
jmp
xchg
push
mov
push
push
push
and
sub
jmp
call
jmp
push
jmp
push
jmp
push
jmp
push
ret
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
or
add
mov
(bad)
sahf
add
add
add
add
(bad)
fdiv
fld
add
cmp
add
mov
mov
mov
mov
repnz
mov
mov
mov
add
pop
add
add
cdq
sbb
or
pop
add
jge
les
test
add
add
(bad)
mov
add
ins
add
add
or
or
mov
sbb
jmp
mov
sub
add
in
lea
and
add
add
(bad)
fist
pushf
sbb
add
add
mov
sub
mov
leave
shl
add
ins
popa
mov
es
jp
push
mov
(bad)
adc
add
adc
add
add
mov
sub
add
add
jp
pop
add
jmp
xchg
mov
add
mov
push
jecxz
add
add
in
test
sub
pop
add
dec
test
add
adc
pop
ins
jmp
mov
mov
xlat
hlt
sub
add
(bad)
mov
add
add
mov
sub
mov
je
or
(bad)
adc
sub
mov
mov
inc
jno
jl
and
add
add
(bad)
and
add
jne
add
sbb
pop
sub
adc
add
fdecstp
gs
add
xor
add
in
test
add
add
mov
psrld
add
add
loop
add
dec
xchg
test
lahf
add
jb
adc
and
add
add
daa
jmp
mov
mov
xchg
mov
in
add
pop
jg
jmp
mov
and
add
add
mov
je
cli
mov
test
add
add
mov
xchg
shl
add
ins
jmp
jle
in
add
cwde
mov
setb
lahf
add
aad
add
pop
mov
and
pusha
add
dec
outs
mov
sahf
aam
(bad)
cmps
add
add
(bad)
scas
add
sahf
mov
ins
add
test
mov
adc
into
cdq
add
xor
or
add
in
(bad)
and
add
add
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
xchg
test
add
add
lahf
test
je
jmp
mov
and
add
add
enter
and
add
setl
add
add
add
add
mov
sub
add
out
xor
shl
mov
verw
add
add
rol
and
std
mov
add
(bad)
and
add
add
add
add
add
pop
or
mov
je
jmp
out
and
jecxz
add
add
add
pavgw
add
add
add
add
jle
and
adc
add
mov
and
add
cdq
(bad)
cwde
add
lds
mov
inc
sub
rol
and
push
shl
test
add
add
shl
add
adc
jnp
add
mov
sub
add
sub
mov
add
add
add
and
adc
add
mov
cdq
jg
jmp
mov
sub
mov
dec
mov
test
or
add
mov
test
add
loop
lahf
push
sub
mov
mov
mov
xchg
(bad)
and
add
sldt
add
in
add
pushf
sub
mov
je
jmp
mov
sub
aam
and
ins
add
pmaxsw
add
add
add
add
(bad)
and
add
sub
mov
je
jae
add
jmp
pop
test
add
sub
mov
into
popf
and
pushf
add
add
add
mov
mov
inc
jo
aam
and
add
add
stc
or
add
mov
sub
mov
jg
jmp
mov
add
mov
xchg
add
add
jmp
mov
adc
loope
inc
mov
and
pmaxsw
rol
loop
add
pop
mov
sub
xacquire
hlt
nop
add
pop
test
rol
test
sub
pushf
add
mov
inc
and
sbb
jo
mov
mov
sub
add
(bad)
add
add
inc
add
add
ret
adc
mov
or
add
and
add
push
push
in
daa
mov
push
sbb
jmp
popf
test
outs
pop
(bad)
call
outs
test
add
jmp
in
(bad)
and
ins
pop
adc
cmp
ins
aaa
dec
inc
xor
test
add
mov
sub
adc
rol
je
jmp
mov
and
add
add
mov
outs
test
add
jmp
mov
jo
jp
push
mov
je
or
test
cmp
add
mov
mov
and
je
sbb
add
adc
add
jne
xchg
push
addr16
inc
mov
pop
add
test
add
test
fst
and
psubusw
add
add
add
push
mov
je
sub
add
add
pushf
add
lahf
shl
rol
setb
add
add
add
add
jo
or
(bad)
mov
fcom
xchg
and
ins
add
aad
adc
add
(bad)
out
jae
ja
and
add
ror
add
sbb
rol
and
mov
sahf
mov
adc
mov
les
push
add
jmp
add
leave
xchg
dec
in
out
add
popa
add
dec
add
xlat
or
loop
sete
cmp
fisub
cli
mov
ret
sbb
add
cmc
jmp
lea
xchg
mov
pop
add
lea
lea
(bad)
fldenv
pusha
add
rol
or
add
adc
add
repnz
mov
dec
inc
test
pop
je
or
add
(bad)
(bad)
mov
mov
jb
mov
ds
add
add
add
add
pop
add
or
mov
and
add
(bad)
enter
mov
add
adc
adc
add
(bad)
xchg
inc
jbe
(bad)
(bad)
and
push
pmaddwd
add
xchg
mov
xchg
xchg
scas
cld
fdiv
add
add
and
adc
and
and
dec
inc
and
mov
dec
ds
jmp
dec
and
and
in
and
cdq
cmps
pop
dec
clc
mov
mov
push
inc
mov
inc
sar
and
and
or
xor
or
fmul
loopne
add
fdiv
dec
mov
add
add
jns
xchg
push
ins
mov
mov
jnp
ret
inc
ror
pop
jmp
enter
rol
retf
push
jmp
mov
lods
mov
pop
add
mov
mov
out
and
or
out
and
add
adc
and
mov
and
mov
or
sub
(bad)
cmp
jl
and
call
mov
mov
sbb
add
pop
cvtps2pd
mov
jmp
mov
sub
add
cmp
js
out
mov
mov
adc
jnp
add
push
dec
pop
test
ins
verw
and
add
mov
mov
mov
adc
mov
les
push
add
pop
jns
or
jns
push
mov
jnp
adc
add
sete
add
setl
mov
jne
add
fdiv
sbb
add
and
and
sbb
or
or
xor
xlat
inc
and
or
retf
xlat
or
je
xor
inc
in
sub
add
test
ds
add
add
add
call
scas
loope
pop
out
outs
pop
les
mov
mov
add
add
mov
mov
or
bound
loop
add
cmp
sete
dec
add
add
and
xor
pop
shl
ss
push
pop
mov
pop
jmp
add
xor
lahf
mov
add
add
aam
mov
sahf
mov
(bad)
xor
cwde
ffreep
add
mov
sub
sub
cli
add
(bad)
push
imul
add
add
xchg
aam
dec
add
pushf
setl
mov
xor
mov
mov
cmp
cld
and
jge
mov
and
and
and
or
mov
mov
cld
(bad)
(bad)
and
cmovne
jmp
aas
add
add
das
add
add
mov
cmp
xor
mov
mov
mov
les
push
add
dec
cmps
pusha
sub
or
imul
or
add
pcmpeqd
add
and
xor
add
inc
sar
add
adc
and
add
mov
sahf
xchg
xlat
mov
mov
idiv
add
sbb
add
repnz
(bad)
test
add
add
add
add
add
add
add
xchg
and
add
adc
add
add
mov
cdq
adc
pop
xor
mov
sub
fwait
out
add
daa
pop
adc
(bad)
jmp
loop
add
add
pop
psubb
loopne
or
add
icebp
call
or
xor
ror
pop
jmp
mov
mov
mov
dec
daa
enter
pop
cmp
mov
cmps
mov
fiadd
sub
fsubr
imul
and
mov
add
add
sete
add
setl
mov
inc
and
mov
xor
mov
and
jg
mov
and
and
or
mov
or
sub
retf
xlat
or
scas
les
popf
in
and
cmovne
mov
and
add
add
mov
jmp
mov
mov
or
add
mov
mov
cmp
cmovne
adc
add
jmp
lods
test
add
mov
and
sahf
dec
add
test
add
add
push
sub
jmp
mov
mov
aad
xor
pusha
les
push
add
jg
outs
cli
sub
add
adc
cli
lea
scas
repz
add
andnps
and
mov
test
xor
xor
mov
fucom
add
test
and
and
outs
hlt
add
xor
mov
gs
ret
xchg
les
mov
cmovne
mov
jmp
mov
mov
cmp
sub
ret
cwde
mov
loop
add
add
add
add
repz
ret
adc
xor
add
cmp
scas
repz
inc
inc
add
adc
mov
setae
mov
and
xor
or
in
add
(bad)
mov
add
add
push
sub
enter
dec
push
add
popa
test
into
inc
ror
addr16
mov
in
and
push
dec
add
fldenv
add
adc
rol
add
add
lea
pop
pop
xlat
pop
pop
(bad)
(bad)
push
cmc
add
mov
xchg
and
pop
add
adc
sbb
add
mov
ins
add
add
add
add
add
and
aam
and
mov
sti
cld
fdivrp
jmp
pop
inc
ret
ror
mov
sti
out
pop
pop
jmp
mov
add
std
or
mov
mov
das
jbe
ins
popa
mov
jmp
mov
jmp
mov
jmp
data16
push
mov
push
push
push
and
sub
jmp
call
jmp
push
jmp
push
jmp
push
ret
jmp
push
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
xor
add
or
lea
mov
mov
mov
retf
ror
add
test
add
mov
mov
(bad)
stos
and
add
xchg
add
and
inc
and
add
add
(bad)
jg
or
add
add
lea
add
dec
mov
call
mov
mov
lea
mov
xlat
lods
mov
mov
mov
and
add
or
add
mov
and
add
pop
call
mov
mov
(bad)
sar
test
mov
dec
inc
push
jmp
add
add
add
mov
mov
call
dec
add
add
mov
sbb
mov
js
scas
inc
add
add
dec
mov
into
test
mov
push
mov
xchg
and
sub
or
rcl
dec
xchg
add
add
and
jns
stc
dec
or
add
add
mov
aad
into
mov
sbb
mov
or
or
add
inc
inc
(bad)
mov
xor
xchg
and
sub
add
test
push
add
fld
shl
add
add
popa
cmp
add
mov
nop
or
test
mov
mov
mov
lods
sahf
mov
sub
aas
cld
(bad)
push
sbb
aam
add
fisttp
and
or
add
ins
mov
mov
or
ds
lea
mov
das
sub
inc
mov
or
stc
lods
add
add
add
call
xchg
int3
sub
push
inc
add
mov
(bad)
mov
lea
lea
add
lock
cmp
and
and
or
dec
add
inc
and
mov
data16
dec
add
mov
lea
mov
mov
sub
add
push
pushf
aam
aad
add
fadd
pop
xor
adc
add
je
or
test
add
add
mov
or
adc
pop
out
push
mov
mov
add
rol
and
or
xchg
mov
mov
pop
mov
imul
test
dec
add
mov
jg
jmp
add
add
sub
mov
clc
add
stos
inc
add
add
add
and
add
add
xor
mov
add
jg
jmp
mov
add
(bad)
and
add
add
add
jns
add
add
clc
lock
test
add
jg
sbb
fnstsw
add
add
ja
pop
ror
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
dec
jmp
mov
and
jmp
add
in
test
(bad)
arpl
or
xchg
add
sub
mov
clc
jg
push
xchg
add
cwde
fadd
cmp
mov
jg
mov
int3
test
push
add
push
push
push
test
add
clc
mov
sub
jns
and
add
add
mov
push
pop
add
add
add
mov
sub
rol
(bad)
mov
add
add
mov
mov
push
lods
fadd
sub
add
ret
repnz
jmp
mov
aam
add
add
in
test
add
jb
outs
mov
add
add
mov
test
dec
add
add
add
cmp
jno
call
and
inc
lea
mov
jnp
add
add
add
sub
add
jg
jmp
mov
sub
mov
(bad)
retf
add
add
add
add
add
sub
mov
test
jg
jmp
mov
add
mov
jg
jmp
mov
sub
mov
aam
add
add
(bad)
jecxz
pop
add
add
fs
test
cwde
add
sub
je
add
add
add
add
mov
cwde
add
add
mov
and
jmp
mov
jno
sbb
enter
xor
add
dec
(bad)
das
mov
mov
push
sub
sub
mov
jg
jmp
mov
fucomp
fimul
enter
sub
add
jg
jmp
mov
sub
mov
test
jg
jmp
mov
sub
mov
je
jmp
jnp
pop
cwde
pop
add
dec
repnz
mov
or
add
enter
add
add
mov
cwde
add
mov
mov
les
or
add
js
xchg
add
jl
add
lock
cwde
add
les
mov
add
(bad)
mov
add
add
cmp
sub
mov
add
emms
and
add
mov
test
add
add
mov
or
add
je
jmp
popa
loopne
cwde
sbb
push
xchg
mov
or
and
add
jmp
mov
or
add
mov
add
add
adc
push
hlt
add
mov
js
jmp
add
nop
test
add
add
(bad)
and
add
add
test
add
add
mov
je
jmp
mov
sub
mov
test
add
add
add
mov
sub
mov
add
movs
add
add
add
add
mov
add
mov
and
add
add
(bad)
and
add
add
and
or
add
mov
je
jmp
mov
sub
mov
imul
add
add
test
sub
push
and
add
add
add
xchg
mov
sub
mov
and
add
fs
in
add
add
add
movs
dec
mov
sub
add
je
jmp
mov
sub
sub
je
jmp
mov
(bad)
in
jo
mov
add
add
test
add
lock
add
test
stos
jmp
xlat
ror
mov
test
cmp
add
adc
test
push
cld
mov
add
xchg
call
idiv
add
and
jmp
add
rol
test
inc
add
fld
xchg
add
sub
mov
les
add
test
mov
and
add
add
mov
psubusb
add
add
lea
stos
(bad)
push
push
fmul
add
add
pusha
jg
add
or
sub
mov
clc
test
add
add
popa
add
xchg
push
test
cwde
add
add
jl
cmp
mov
je
jmp
mov
stos
xchg
lahf
dec
cmc
mov
mov
test
add
jmp
mov
add
add
adc
lods
add
fisttp
test
pop
pop
add
out
test
add
add
mov
mov
jmp
addr16
add
xchg
mov
je
jmp
mov
mov
inc
call
and
add
add
test
add
mov
mov
inc
mov
mov
xchg
(bad)
cmp
add
add
into
inc
ins
lea
mov
(bad)
xchg
sub
clc
loop
add
test
int
ror
add
test
or
jmp
test
add
cmp
test
cmp
add
or
jmp
mov
(bad)
jo
mov
je
push
add
add
test
pop
add
add
add
sub
mov
and
add
je
jmp
mov
sub
add
pop
fild
add
mov
mov
mov
add
add
test
add
add
popf
and
add
dec
sub
into
inc
and
mov
sub
add
mov
sub
mov
test
xchg
cmp
and
add
sbb
mov
dec
or
mov
jmp
mov
cwde
add
add
mov
shrd
or
jmp
mov
mov
mov
and
je
mov
mov
sub
mov
in
test
add
jmp
mov
sub
mov
call
add
pop
jmp
vcmpss
mov
mov
add
add
leave
ror
add
icebp
or
cmp
lods
in
add
call
icebp
add
lea
cmps
repz
lods
push
add
mov
mov
mov
and
popf
add
cmp
cmove
mov
into
sbb
add
cmps
or
call
push
mov
pop
fild
adc
mov
mov
mov
out
mov
cmp
push
xlat
and
xor
packsswb
cmp
call
xor
or
test
cmovne
mov
in
add
jmp
lock
xchg
mov
sub
add
push
add
add
add
and
mov
das
lock
cmp
adc
add
add
pop
inc
add
add
xchg
call
setl
mov
xor
and
(bad)
push
jle
mov
mov
mov
mul
shl
fcomp
add
or
cmp
pusha
dec
inc
icebp
add
and
add
add
or
mov
mul
mov
test
push
add
cmp
add
pop
add
mov
mov
mov
fwait
rol
test
in
lahf
pop
ret
cmc
cmp
xchg
mov
jmp
mov
jmp
mov
mov
jmp
dec
mov
test
call
mov
cmp
shr
mov
mov
jmp
mov
(bad)
cmc
or
or
mov
(bad)
outs
and
add
add
add
mov
cmp
xchg
test
add
cmp
rol
jecxz
mov
xor
mov
jle
lahf
or
cmps
add
add
add
inc
popf
mov
in
sbb
jmp
mov
jmp
mov
add
add
mov
push
add
add
or
mov
mov
mov
mov
mov
aad
into
ins
mov
call
mov
std
lods
sub
jmp
add
add
mov
cmp
inc
retf
and
mov
add
sub
add
test
add
clc
jecxz
ja
jmp
mov
mov
clc
jmp
add
add
add
add
cmp
pop
add
push
inc
or
fmul
add
mov
jmp
add
push
mov
and
(bad)
push
sub
or
push
add
add
add
add
jno
das
add
push
or
fldenv
(bad)
mov
mov
cmp
cmovne
mov
jmp
fdiv
cmp
popa
lea
add
add
add
mov
add
add
add
add
fld
add
test
or
ret
mov
sub
mov
bound
test
and
and
mov
and
and
test
push
xor
mov
jmp
xor
retf
das
or
test
mov
and
jle
and
add
add
(bad)
xchg
add
add
add
stc
mov
mov
and
call
add
add
adc
mov
mov
mov
push
inc
and
mov
call
mov
mov
mov
mov
mov
xor
mov
and
outs
add
add
adc
clc
cmp
adc
add
cmp
add
lock
test
(bad)
test
leave
and
mov
add
repz
and
or
and
fcomp
or
add
xor
jge
and
or
test
retf
add
fimul
hlt
sub
add
inc
xchg
mov
inc
xor
and
mov
add
stc
fcomp
test
add
mov
mov
jns
and
or
add
add
cmovne
push
test
jmp
mov
mov
call
(bad)
fsub
jmp
add
push
push
fmul
mov
mov
or
add
add
mov
add
sub
mul
add
or
(bad)
xor
add
setl
mov
or
test
cmovne
in
test
jg
add
mov
mov
cmp
test
add
add
test
or
add
mov
or
jae
mov
out
add
add
clc
add
(bad)
adc
and
sti
or
add
setl
mov
xor
mov
xor
cmp
inc
lods
(bad)
push
inc
lods
das
push
fsub
mov
mov
or
hlt
or
(bad)
sub
popa
add
or
neg
xor
inc
icebp
mov
sub
add
add
fadd
mov
popa
int3
add
add
mov
cmp
cmovne
mov
jmp
mov
cs
out
dec
mov
jnp
mov
push
mov
jmp
add
movntq
out
sub
cmp
sete
dec
(bad)
mov
and
xor
or
test
in
int3
ror
clc
jmp
mov
mov
jg
jmp
sbb
pop
out
add
add
add
repz
ret
jno
add
jmp
add
add
inc
sub
add
cmp
sete
dec
xchg
in
jg
pop
(bad)
adc
xor
adc
add
(bad)
mov
pusha
test
hlt
or
xor
and
or
xor
or
sbb
jmp
test
and
packssdw
mov
mov
add
lock
pop
add
mov
add
sbb
add
mov
mov
mov
mov
add
cmp
(bad)
out
neg
and
add
clc
add
or
xchg
ret
scas
dec
add
add
pushf
xor
outs
or
test
inc
mov
and
add
add
add
add
mov
mov
mov
mov
mov
mov
add
(bad)
jmp
sub
jns
mov
pop
repz
push
fld
cmp
sete
add
add
add
mov
(bad)
mov
and
mov
out
add
ror
hlt
or
push
les
mov
cld
not
jnp
and
cmovne
mov
jmp
(bad)
loopne
std
add
dec
push
mov
pop
jmp
mov
mov
mov
add
add
adc
sub
or
inc
jno
add
add
cli
xchg
lock
bswap
ret
cmp
setl
in
fisub
jecxz
mov
(bad)
iret
add
inc
ror
mov
jmp
pop
in
jo
aas
nop
test
inc
and
or
add
mov
fs
xor
xchg
sub
xchg
add
add
add
xchg
ret
or
sub
setl
jo
sub
xor
inc
add
inc
sbb
mov
add
retf
add
pop
add
aas
pop
fcmovb
test
add
add
sub
clc
jmp
add
add
lods
mov
call
mov
mov
mov
jle
and
mov
mov
pop
adc
rol
test
in
add
leave
ins
jmp
inc
add
or
or
add
add
add
test
xchg
add
outs
int
jmp
mov
mov
call
(bad)
jl
in
add
jle
sbb
es
add
mov
mov
dec
add
mov
mov
test
cmp
jecxz
and
ds
nop
push
mov
push
push
push
and
sub
jmp
push
jmp
push
jmp
push
jmp
call
jmp
push
ret
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
shl
lahf
push
inc
pcmpgtb
pop
mov
lahf
mov
add
add
add
mov
mov
sub
pushf
in
mov
bswap
sbb
add
cwde
add
test
fist
and
jg
xor
inc
and
in
and
push
ins
cmp
jg
jmp
rol
sub
mov
jg
jmp
xchg
mov
sti
scas
mov
jg
xor
add
and
push
inc
lods
std
add
(bad)
lods
and
pop
jmp
push
xor
fmul
fimul
(bad)
jge
add
add
inc
punpcklbw
mov
cld
jg
jmp
mov
or
pop
mov
arpl
test
fadd
add
mov
dec
test
jmp
add
add
mov
and
call
test
add
add
add
add
dec
inc
arpl
sub
mov
test
add
mov
add
dec
mov
cdq
or
int3
out
sub
punpcklwd
add
jmp
sbb
sub
push
inc
and
inc
jmp
pusha
add
add
cmp
sbb
inc
and
push
push
jmp
cli
inc
popa
pusha
sub
fldenv
movhps
add
add
jmp
push
ins
mov
or
jmp
mov
bound
add
je
jmp
jmp
xchg
lahf
inc
lods
std
mov
mov
cmp
cmovne
dec
inc
and
jmp
mov
mov
ficom
pop
cld
jmp
add
add
add
test
mov
jmp
mov
pop
cmc
sub
dec
mov
add
xor
push
xlat
sub
jle
inc
add
cmps
pusha
imul
mov
and
mov
rcl
add
setl
and
sub
(bad)
ret
outs
push
mov
jmp
mov
mov
mov
mov
xor
sbb
push
add
add
add
pop
mov
mov
push
add
add
jno
inc
(bad)
adc
clc
sbb
add
sub
adc
add
fiadd
or
cmp
pand
xor
mov
xor
mov
and
and
mov
and
mov
push
pcmpgtw
or
and
or
xor
in
fadd
add
aam
out
ret
je
ror
add
mov
jmp
mov
mov
mov
vtestpd
rol
jmp
mov
mov
call
mov
ins
dec
ror
and
inc
in
inc
mov
mov
mov
mov
sub
mov
mov
add
sub
pop
add
into
inc
add
add
in
cmp
movs
pushf
rol
ret
xor
xor
mov
out
and
sbb
and
mov
test
and
test
xor
hlt
fdiv
retf
aam
out
mov
cmovne
mov
or
add
in
mov
xchg
repz
add
mov
mov
push
add
add
mov
popf
xlat
cmp
fld
sete
cmp
setl
mov
gs
or
pop
ret
add
inc
shr
add
add
pop
pop
pop
pop
ret
mov
jmp
(bad)
mov
in
test
xchg
sti
mov
int3
push
mov
push
push
push
and
sub
jmp
call
jmp
push
jmp
push
ret
jmp
push
jmp
push
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
lea
push
jo
fsubr
add
(bad)
pop
and
add
add
add
jb
mov
add
add
idiv
(bad)
mov
mov
mov
sub
jbe
test
add
inc
sub
bound
iret
fadd
add
mov
mov
push
add
mov
add
add
call
pop
inc
fcmovbe
add
add
test
inc
and
add
add
test
cmp
pushf
(bad)
hlt
add
xor
and
add
mov
mov
add
add
(bad)
and
inc
ror
and
add
add
or
xor
sub
add
add
and
add
fisubr
pop
jecxz
fisttp
add
prefetch
add
add
rol
sub
pushf
test
add
add
(bad)
gs
add
add
add
mov
idiv
push
cmp
add
add
jmp
jne
and
add
pop
cld
push
int
popa
mov
setno
fadd
sbb
mov
sub
mov
jg
pop
rol
rol
test
inc
cmp
pop
inc
jg
add
add
test
lea
add
mov
sub
mov
jns
jmp
mov
in
movs
and
add
add
test
add
add
add
add
adc
xchg
xor
clc
add
(bad)
stc
add
push
fwait
mov
rol
mov
sub
dec
test
pop
add
retf
add
add
data16
test
add
sub
mov
jg
jmp
mov
sub
mov
je
jmp
dec
test
add
in
inc
cs
sub
js
(bad)
loopne
add
jmp
mov
sub
mov
aad
add
add
ret
inc
mov
and
add
add
xor
shl
add
add
hlt
jmp
test
clc
add
sub
sti
cmc
and
fld
add
add
jne
and
add
adc
(bad)
call
add
mov
sub
pop
jge
add
add
add
rol
mov
sub
rol
retf
add
pop
jmp
mov
sub
push
inc
and
sti
(bad)
clc
add
add
add
add
jae
and
push
add
sub
mov
jg
jmp
or
sub
dec
pop
and
cmovg
adc
and
add
add
mov
andnps
add
add
add
cmp
sub
mov
je
jmp
rol
cmp
inc
and
je
add
add
add
add
sub
mov
orps
add
rcl
add
mov
add
sub
rol
je
jmp
rol
test
add
mov
sbb
add
jmp
mov
sub
mov
orps
add
add
mov
test
add
repnz
mov
je
jmp
rol
sub
mov
in
test
add
fld
rol
mov
scas
in
fiadd
retf
pop
rol
mov
sub
push
inc
and
psadbw
rol
shr
add
add
and
add
shr
inc
and
andnps
les
jmp
mov
sub
push
inc
and
je
fwait
add
mov
sub
inc
add
fs
mov
cmp
push
inc
ror
test
test
add
mov
inc
sbb
add
jb
add
pop
xor
mov
sub
mov
add
imul
sbb
cmp
sete
cmp
(bad)
(bad)
dec
shl
jbe
out
shl
sbb
cmovne
push
add
jmp
mov
retf
repnz
jmp
rol
add
and
add
add
add
pop
xor
mov
in
add
sub
pushf
sub
shl
scas
repz
add
fiadd
cmp
cmovbe
cmp
setl
mov
and
test
inc
ror
add
sahf
add
add
test
add
shl
sbb
add
mov
mov
jg
lock
pusha
cmp
sub
mov
add
imul
and
cmp
sete
cmp
nop
mov
and
imul
ror
inc
mov
jmp
mov
mov
adc
add
add
add
test
add
add
add
push
adc
mov
pushf
jno
push
xor
lods
nop
and
cmp
into
xchg
call
push
pop
(bad)
mov
and
mov
or
neg
add
inc
ror
hlt
add
fiadd
shl
mov
inc
dec
and
add
mov
arpl
mov
dec
cmp
mov
jnp
sub
sub
imul
pop
out
push
add
(bad)
rol
sar
xchg
mov
push
pushf
adc
xor
mov
mov
xor
xchg
repnz
and
and
arpl
fadd
cli
ror
xchg
test
add
leave
movs
not
inc
jne
mov
sbb
ins
and
dec
push
sub
or
add
add
xchg
add
setb
pushf
and
add
ror
add
in
add
xor
bts
adc
add
add
add
xchg
ret
or
add
setl
jo
and
jmp
fld
mov
jge
add
jmp
mov
mov
mov
test
aad
ror
jb
pop
ret
inc
mov
mov
je
add
add
ror
pop
mov
mov
mov
jg
iret
rol
fimul
add
dec
dec
cmps
rol
add
mov
pop
sbb
add
add
mov
or
and
mov
call
mov
jno
and
fwait
adc
or
cs
outs
mov
mov
sar
mov
in
add
sub
mov
in
adc
lock
pop
loope
add
jb
dec
add
add
fst
add
setl
mov
inc
hlt
add
push
repnz
and
popf
inc
and
jl
iret
clc
push
inc
and
mov
and
push
test
fadd
add
int
mov
iret
inc
fiadd
push
jmp
mov
mov
jne
cmps
int3
rol
sub
add
add
mov
and
add
adc
clc
fiadd
stc
mov
les
add
add
call
sub
mov
mov
lock
mov
in
add
mov
inc
sub
pop
out
arpl
push
inc
in
xlat
pop
loop
add
add
add
xchg
ret
or
and
xor
neg
je
rcl
pop
test
add
pop
sub
adc
mov
inc
dec
psubsw
add
add
add
mov
inc
test
add
hlt
or
fcomp
add
pop
pop
ret
mov
add
fdiv
test
inc
add
fiadd
jg
jb
mov
mov
mov
jmp
mov
out
cmp
add
add
add
mov
sub
rol
ror
dec
call
fadd
add
add
pusha
ins
and
push
add
pop
enter
inc
and
add
add
push
in
pop
rol
cs
jmp
sbb
test
dec
inc
jno
pop
jno
jl
stos
adc
mov
or
repz
popw
in
or
mov
add
and
call
cmp
cmp
gs
mov
int3
push
jno
(bad)
pushf
xchg
pushf
aam
xchg
movs
scas
mov
adc
xor
add
aad
enter
popa
sqrtps
sub
mov
cdq
jmp
and
dec
pop
cmp
jno
cmp
je
std
push
adc
xor
push
push
stc
pop
lea
add
test
fisttp
call
jo
dec
dec
sub
fldenv
int
jbe
mov
ror
add
or
stos
jno
xchg
jmp
retf
xchg
push
mov
sahf
xchg
pop
ss
mov
ds
stos
(bad)
ja
sub
inc
stos
leave
sbb
fdiv
mov
xchg
loopne
imul
addr16
pushf
cmp
xchg
sub
lea
popf
adc
and
sbb
sub
into
pop
dec
push
push
sub
ss
fwait
push
retf
mov
adc
inc
pop
mov
xchg
pop
add
sbb
shl
add
pop
push
rcr
js
and
outs
mov
stos
mov
mov
add
add
fmul
inc
add
sbb
rol
loope
addr16
(bad)
retf
inc
hlt
dec
push
adc
xor
sbb
xchg
inc
add
mov
and
xor
cdq
mov
aam
adc
pop
mov
xchg
cmp
int
f2xm1
push
aam
push
pop
cmp
cmp
xchg
cmp
outs
lds
repz
fstp
call
and
pop
and
(bad)
mov
dec
out
xor
sub
ins
es
enter
pop
and
ret
mov
fsubr
jne
out
test
mov
pop
jne
sub
cmp
or
mov
cdq
add
sub
dec
mov
sbb
nop
pop
retf
inc
int
mov
lods
jmp
mov
adc
inc
sub
mov
or
ins
ins
repz
jb
imul
or
not
mov
pop
adc
jno
call
sub
scas
jno
pop
jns
inc
xchg
pop
add
stos
ret
cmps
sbb
imul
push
dec
test
(bad)
fild
or
lods
repz
sti
push
mov
xor
cmc
push
lea
jle
dec
jbe
retf
mov
aaa
xchg
or
inc
push
cld
sub
xchg
push
outs
sar
je
xchg
mov
int3
push
fs
push
addr16
xor
daa
ins
cld
ret
aaa
fstp
test
jae
stos
xchg
inc
inc
mov
xchg
cmps
and
lds
dec
adc
(bad)
int3
(bad)
popf
pushf
push
jns
sub
sbb
pop
mov
pop
dec
pusha
mov
xor
scas
mov
es
aad
inc
dec
push
out
xchg
pop
push
or
mov
mov
dec
in
test
and
aam
mov
push
jmp
xchg
dec
cmp
push
inc
push
hlt
mov
dec
xor
adc
cs
and
outs
in
xchg
movs
inc
mov
inc
cmp
out
jmp
add
(bad)
mov
fisttp
push
inc
sub
pushf
xchg
push
push
ja
(bad)
mov
shl
stos
xchg
jg
jnp
jl
shl
ret
push
jbe
fsub
loopne
mov
add
or
push
dec
out
jne
inc
add
test
sar
cmp
bound
jg
lods
mov
mov
sahf
mov
bnd
pop
jb
mov
jecxz
in
mov
lds
fcmovnu
sahf
xchg
std
inc
mov
test
retf
sub
mov
jno
fisttp
mov
dec
push
inc
jg
ror
xchg
mov
mov
pop
shl
out
xlat
mov
inc
ficom
add
and
shl
(bad)
adc
xchg
cmp
xchg
jp
ins
dec
pop
out
sbb
xchg
mov
call
pusha
(bad)
inc
pop
(bad)
(bad)
rol
daa
sbb
iret
mov
rol
out
jl
scas
and
in
pop
jno
push
mov
jbe
inc
adc
push
aad
jecxz
cmp
addr16
mov
in
scas
loop
mov
lock
dec
push
fwait
stos
pop
fistp
jle
icebp
adc
sbb
cmp
popa
push
repnz
lods
std
add
sub
scas
sbb
inc
pop
adc
inc
xor
imul
push
push
loopne
mov
ins
dec
adc
arpl
mov
mov
ficom
test
lods
sub
add
mov
add
jnp
icebp
mov
cmp
fiadd
or
icebp
adc
xor
test
ins
fnstcw
pop
xor
adc
retf
ins
pop
mov
cdq
sub
mov
adc
sbb
fs
test
mov
lds
retf
inc
mov
ja
nop
cs
cmp
cld
mov
cmp
push
pop
retf
je
fwait
adc
jnp
ret
fisttp
outs
leave
mov
mov
mov
dec
dec
(bad)
in
nop
aad
inc
cmc
xor
xchg
pop
sbb
jne
clc
mov
adc
and
push
mov
xor
pop
push
mov
das
or
(bad)
xor
mov
test
pop
outs
loop
dec
call
ror
enter
mov
shr
test
out
add
ins
mov
adc
out
repz
sub
ficomp
fbstp
xchg
cmp
sbb
mov
sub
add
cmp
add
popf
inc
push
pop
inc
jnp
leave
mov
and
mov
cmp
mov
in
test
pop
outs
ins
inc
call
add
mov
cmc
mov
std
mov
addr16
pop
jmp
mov
aam
xlat
inc
(bad)
pop
(bad)
repnz
jo
and
stos
sbb
enter
(bad)
lea
dec
ins
in
cli
cmp
xlat
lods
xor
in
sub
hlt
aaa
iret
inc
lods
div
or
lea
and
or
scas
mov
mov
addr16
or
add
loopne
sahf
add
xor
pop
dec
push
add
cwde
rcr
jp
add
pop
and
adc
arpl
cmp
xor
test
xor
fiadd
ins
push
pop
xchg
mov
pusha
icebp
mov
aad
rcr
cld
gs
and
sbb
mov
(bad)
popa
or
mov
and
xchg
enter
sahf
cmp
lahf
add
stos
cdq
repz
sub
push
addr16
push
enter
out
sbb
sbb
add
(bad)
mov
ins
cmp
pop
retf
mov
icebp
xchg
push
out
push
pop
mov
cli
mov
mov
fadd
xchg
fwait
lds
xchg
inc
xchg
mov
fadd
jle
punpckldq
xchg
rol
and
mov
loopne
es
pop
mov
in
mov
xchg
test
cdq
fwait
pop
pop
rol
sbb
jecxz
rcl
fld
out
out
aas
and
lods
fldl2e
dec
lods
ret
add
dec
add
cwde
aad
jo
push
leave
pushf
mov
cmp
int
mov
sbb
inc
push
pop
enter
aas
sbb
push
cmp
(bad)
or
sahf
pop
ret
sbb
push
xor
fadd
and
mov
add
inc
or
mov
jb
loopne
pop
imul
lahf
retf
adc
xchg
cmp
in
loop
sbb
push
mov
aad
push
and
adc
pop
loope
(bad)
cmp
fstp
fucomip
jne
mov
ss
or
sub
mov
je
pop
push
jno
(bad)
inc
cmp
sbb
and
mov
mov
jmp
dec
jno
adc
pop
rol
test
jnp
dec
and
nop
fistp
ds
xor
outs
lahf
or
arpl
and
sub
repnz
mov
(bad)
ds
sub
das
xchg
lods
repz
fldenv
jno
out
sbb
stos
fs
and
sub
(bad)
pop
xchg
cmps
aad
pop
xchg
mov
or
jbe
adc
repz
das
jge
(bad)
(bad)
adc
mov
loopne
rcl
jne
dec
lahf
push
cli
fdiv
aaa
fcmovbe
scas
xlat
or
jg
pop
movsx
jne
pop
fstp
out
cmp
inc
mov
psrlw
push
adc
sti
xlat
xor
push
(bad)
neg
sub
ror
sbb
cmp
push
or
jecxz
aaa
and
lds
and
add
mov
imul
stos
and
or
out
mov
cmp
or
mov
mov
push
ret
mov
test
dec
jge
pop
out
shl
ins
out
imul
(bad)
aam
inc
fs
add
push
scas
out
in
sbb
and
xlat
cmps
dec
mov
sbb
call
mov
cmc
push
cmp
cmps
aam
mov
push
and
arpl
jmp
jmp
call
jbe
fstp
out
js
cwde
ficomp
sbb
xchg
in
out
sbb
pop
or
inc
mov
clc
jg
push
dec
xor
sub
es
scas
std
(bad)
sahf
jae
cmp
inc
out
scas
cmp
fs
push
imul
pop
push
push
leave
xor
or
mov
xlat
mov
adc
pop
cmp
mov
scas
jo
cmp
xchg
mov
rcl
fisubr
bound
out
pop
mov
dec
int
and
jne
mov
and
add
stc
shr
dec
test
cmp
jo
lods
mov
ret
mov
jb
dec
mov
imul
fcomi
rol
cld
or
mov
mov
inc
movs
dec
je
pop
push
pop
fstp
push
loope
inc
iret
icebp
ins
inc
mov
mov
into
repz
and
add
lea
cmps
jne
fcomp
test
jmp
dec
mov
cmp
movs
rol
add
add
add
push
add
push
add
leave
add
add
add
add
add
or
cs
aaa
xchg
push
cmp
out
pop
scas
xor
jb
mov
jbe
push
aaa
outs
loopne
xor
xor
sub
stos
popf
inc
dec
inc
and
aam
iret
xor
add
mov
mov
aad
(bad)
xor
push
outs
mov
imul
(bad)
in
or
push
scas
clc
cs
adc
mov
(bad)
aam
adc
sub
inc
arpl
shr
nop
pop
xchg
lods
not
lds
sub
(bad)
sbb
push
ins
push
push
sar
loopne
xlat
test
dec
ret
add
out
xor
push
in
sbb
sahf
mov
mov
jmp
inc
pop
pop
inc
fwait
mov
lahf
retf
mov
je
cld
loope
xchg
mov
outs
sub
(bad)
js
test
xlat
xor
inc
cli
mov
dec
int3
enter
ins
inc
inc
int
hlt
inc
or
inc
add
lea
mov
pop
bound
call
adc
cli
mov
adc
pop
add
leave
cmp
jge
xor
cmps
test
jle
mov
adc
das
cdq
ins
int
jb
mov
push
cmp
les
cmp
or
mov
jns
and
xlat
sub
mul
enter
jmp
aas
(bad)
mov
sbb
scas
add
jns
xchg
(bad)
or
cmp
ret
retf
pop
pop
mov
push
scas
push
pop
arpl
mov
jnp
adc
cli
xchg
in
mov
jmp
and
add
pop
inc
lods
daa
repnz
jmp
not
arpl
or
and
xchg
cli
cmp
add
dec
or
jg
bound
and
mov
adc
outs
je
iret
cmp
xchg
mov
pop
mov
movs
fldenv
or
sbb
mov
leave
pop
add
sub
inc
loop
jmp
stos
aam
and
mov
adc
add
nop
loopne
cmp
pop
sub
psadbw
mov
lods
pop
fistp
xor
ret
adc
mov
add
xchg
call
sbb
add
hlt
rcl
dec
and
push
adc
push
pop
inc
mov
cmps
sub
ficomp
inc
aam
xchg
mov
lock
xor
shl
sbb
gs
mov
and
adc
mov
rcr
mov
push
pusha
in
in
std
es
arpl
(bad)
mov
push
inc
inc
(bad)
pushf
mov
repnz
or
xor
dec
sub
sar
xor
xor
test
int
dec
jb
sub
sub
and
stc
adc
gs
jp
retf
shl
sub
daa
into
lea
mov
ret
pop
and
xchg
mov
and
add
lock
push
aaa
test
cmps
fs
out
out
aas
scas
mov
cwde
popf
call
push
idiv
mov
cmp
inc
pop
xchg
or
jl
mov
cmp
es
jmp
call
das
fisub
jmp
test
dec
and
lods
retf
xchg
je
sti
mov
and
test
out
sahf
clc
(bad)
rcr
daa
xchg
mov
xchg
rol
mov
out
fnstsw
arpl
test
inc
xor
repnz
lock
pop
bswap
cmps
or
jmp
sti
(bad)
pop
jge
xor
leave
neg
pop
rol
mov
pushf
jbe
push
cwde
pop
and
or
cdq
hlt
js
fdivr
jnp
xlat
cmp
xor
retf
cmp
push
jl
jnp
mov
jl
test
bnd
dec
(bad)
or
ror
dec
pop
cdq
mov
jnp
arpl
aaa
fistp
(bad)
mov
dec
aas
inc
aam
mov
mov
retf
xchg
mov
sbb
cmp
jl
push
es
retf
stos
repz
aad
or
jns
push
outs
mov
push
adc
fild
retf
loopne
retf
stos
dec
repz
lea
in
clc
(bad)
stc
dec
cdq
cli
jae
(bad)
imul
add
jp
rol
cmp
mov
fbld
xor
int3
xchg
dec
and
test
xor
lods
out
mov
add
dec
push
pushf
add
mov
stos
mov
mov
daa
cmp
out
retf
outs
ret
stos
mov
and
cmp
xchg
and
aad
cmp
nop
dec
push
fnstenv
imul
in
pop
push
(bad)
scas
outs
xchg
scas
cmp
mov
call
ss
and
push
pushf
sub
cli
popf
retf
xchg
std
add
xchg
pop
lods
or
outs
enter
sub
outs
inc
sub
dec
(bad)
loop
dec
lods
jbe
xor
es
push
and
xchg
sti
or
adc
mov
cmc
cli
cmps
inc
xor
cmps
mov
xchg
stos
push
idiv
jle
fucom
popa
mov
inc
ja
lds
xor
sti
outs
xor
pop
jge
test
xchg
test
adc
dec
sahf
hlt
mov
in
test
sbb
retf
jnp
push
int3
gs
xchg
icebp
push
pop
jae
xchg
pop
xchg
mov
sub
stos
mov
cmps
mov
mov
pushf
ret
pop
mov
and
dec
popf
retf
pop
add
add
jbe
push
pop
call
hlt
sbb
mov
jne
ins
scas
sub
fs
repz
mov
(bad)
fsubr
call
mov
loopne
iret
scas
retf
ficomp
inc
not
js
loopne
pop
inc
mov
or
mov
daa
pop
push
push
mov
aad
gs
(bad)
and
cmp
std
jne
scas
loope
data16
cwde
push
fisubr
sub
stos
sbb
shr
call
inc
mov
mov
aad
push
xchg
int3
mov
scas
dec
dec
jp
movs
data16
mov
xlat
mov
add
out
mov
pop
cmc
ss
arpl
cmp
std
fs
xchg
push
lds
add
(bad)
jge
ins
(bad)
push
xchg
jp
and
push
mov
es
xlat
cld
sbb
cmc
jne
jno
mov
inc
mov
int
scas
iret
int3
pop
sub
mov
addr16
xchg
dec
inc
call
pop
mov
cmp
loope
xchg
push
sub
sbb
(bad)
repz
std
std
scas
mov
sbb
inc
(bad)
call
mov
xchg
add
call
adc
icebp
dec
add
xor
out
and
pop
dec
jns
out
pop
jb
das
sahf
inc
rcl
mov
adc
jecxz
cmps
in
mov
dec
jae
xor
ss
cmp
movs
and
call
sbb
(bad)
test
sbb
mov
bound
call
pop
xor
xchg
xor
cmp
add
jge
pop
aas
lahf
mov
push
inc
rcl
in
mov
cli
add
xchg
mov
je
enter
dec
ret
mov
inc
fwait
or
fsub
xor
lock
movs
cmp
xor
mov
jnp
inc
push
xchg
movs
dec
cli
movs
dec
mov
pop
inc
leave
in
inc
dec
addr16
xor
push
adc
in
cmp
cmp
mov
call
mov
dec
adc
mov
push
adc
in
or
out
pop
inc
cdq
(bad)
bound
movs
sub
xchg
ins
and
stos
shl
xchg
mov
adc
sub
push
dec
lds
push
mov
jle
cli
cmps
mov
pop
pcmpgtd
rcl
sbb
sub
mov
cs
jge
add
pop
mov
mov
idiv
mov
jae
push
pop
xchg
xchg
les
dec
imul
rcr
(bad)
pop
inc
aas
cmp
sbb
or
(bad)
test
jnp
cs
xchg
push
stos
cwde
lods
xchg
jmp
repnz
push
pop
xchg
ins
jecxz
xor
in
add
mov
cli
stos
stc
jmp
imul
out
mov
jo
dec
(bad)
and
pop
xchg
fdivr
dec
pop
(bad)
popf
adc
cwde
popf
hlt
mov
in
in
xor
inc
push
ins
lock
dec
cmp
aas
adc
pop
call
add
pusha
adc
clc
retf
int3
es
xor
outs
dec
push
mov
pop
cmc
or
inc
xor
jle
push
out
cmp
push
aas
fmul
cmp
mov
jns
scas
stos
ins
mov
aas
pop
or
in
jl
dec
sub
movs
xchg
sbb
jmp
sbb
mov
pop
test
ins
jns
js
xchg
jo
sub
jo
repnz
imul
fsubr
sbb
add
call
aas
push
xor
fwait
add
sub
std
stos
sahf
mov
or
cwde
xor
outs
push
test
push
inc
mov
cmp
in
out
or
test
cmp
fsub
loope
mov
call
mov
add
or
pop
cs
cmp
add
fidiv
ret
pop
ds
and
(bad)
loop
jp
mov
int3
jno
stc
or
leave
cmp
call
daa
jne
nop
xchg
popa
pusha
cmp
out
xor
adc
jmp
sub
popa
xor
pusha
or
rol
cmp
stos
xor
sahf
test
repz
push
fisubr
js
and
test
jne
jle
movs
push
adc
pop
push
adc
add
pop
mov
sub
nop
mov
test
xor
(bad)
std
stc
std
push
pop
xor
sub
sbb
adc
pop
aas
mov
sub
xor
jle
xor
addr16
das
pop
les
cdq
in
xor
inc
pop
(bad)
xor
cmc
outs
cmc
jle
lgdtd
mov
pop
loop
cmp
fdivr
jmp
xchg
pop
or
in
jecxz
lds
xchg
in
and
mov
leave
xchg
addr16
popa
add
jge
gs
cdq
pusha
mov
inc
outs
daa
or
push
imul
jl
retf
scas
jo
out
arpl
in
sub
int
add
pop
es
cmp
mov
cmp
add
add
add
add
add
add
add
add
add
add
add
add
push
in
add
add
push
add
add
enter
add
add
add
add
loope
add
add
add
rol
das
add
add
rol
add
add
or
add
add
rol
outs
add
add
add
mov
mov
add
add
add
aaa
add
add
add
add
in
sub
add
add
data16
mov
mov
add
add
add
add
outs
add
add
add
inc
fld
add
add
test
add
add
add
add
add
add
add
add
add
add
add
add
add
mov
add
add
add
add
add
sahf
add
add
lahf
add
out
add
add
add
lods
add
add
add
mov
add
add
push
add
add
add
add
add
pop
add
add
add
add
add
add
add
add
add
sub
mov
cmp
adc
and
adc
enter
aam
imul
outs
outs
sbb
test
or
mov
push
pop
pop
sbb
dec
or
xlat
pop
sti
adc
gs
sub
or
push
hlt
cmc
sub
mov
neg
ror
inc
pop
xor
cld
lea
repnz
jl
pop
xchg
and
std
cld
test
push
dec
fsubr
or
je
sub
shl
xor
xchg
stos
das
ins
sub
call
jp
hlt
out
je
pop
mov
leave
cmp
outs
aam
iret
push
sbb
jae
loope
retf
xchg
push
and
mov
add
mov
or
mov
stos
sub
daa
mov
hlt
jmp
mov
idiv
enter
(bad)
sub
xchg
call
cmps
pop
shl
pop
inc
shl
sti
clc
jmp
cli
adc
xor
push
xor
jg
mov
int3
(bad)
fsub
(bad)
and
cmp
fisubr
loope
xchg
sub
inc
mov
icebp
push
push
test
xchg
sar
and
mov
jge
das
in
or
xchg
mov
nop
pop
and
jnp
and
call
xlat
dec
xor
pop
dec
cmp
jecxz
ja
loop
gs
cli
test
out
loopne
shl
sbb
lods
rol
jae
ins
inc
jmp
fadd
je
cmova
mov
cli
cmp
mul
lock
push
xor
jne
sbb
adc
out
mov
adc
or
jns
mov
cmp
mov
xlat
lock
sahf
lahf
sub
push
jle
sub
repz
add
xor
or
cmp
loop
(bad)
mov
pop
sub
cli
push
adc
jnp
imul
cmp
(bad)
push
cmc
inc
dec
mov
outs
sar
icebp
cwde
xor
dec
push
dec
das
iret
outs
rcr
std
xchg
ja
push
and
leave
xor
nop
fidivr
pusha
div
popa
jg
and
movs
ror
cmp
rcl
cdq
xor
xor
add
lahf
dec
inc
mov
jmp
dec
mov
xchg
out
add
mov
sahf
mov
movs
out
mov
daa
loopne
or
mov
into
arpl
(bad)
imul
in
mov
mov
or
dec
xor
test
sbb
sub
neg
sbb
sub
popa
cld
sbb
mov
shr
mov
mov
pop
xchg
push
adc
sub
dec
sbb
arpl
pop
out
es
sbb
cmps
mov
jmp
jne
adc
cmps
ins
push
fld
rcr
inc
int
gs
stos
push
cmps
sbb
sbb
scas
scas
and
mov
xchg
jp
leave
mov
add
mov
lds
cmp
mov
mov
test
add
enter
mov
lds
adc
call
into
sahf
retf
fldenv
test
cmp
scas
popf
ficomp
fadd
cwde
push
clc
dec
sbb
sbb
xor
jno
leave
adc
jne
dec
out
sti
fs
add
sbb
jge
fs
mov
inc
(bad)
loope
dec
sbb
push
fdivr
pop
inc
and
cdq
jmp
push
pop
add
arpl
inc
xor
mov
jne
push
xor
fwait
dec
sub
cli
sti
jb
sub
sub
not
mov
test
dec
jns
iret
gs
xchg
clc
in
mov
jp
cwde
in
jns
push
cmc
sbb
mov
movs
dec
int3
out
fwait
scas
mul
or
scas
or
loop
inc
popf
fnsave
mov
mov
(bad)
mov
cmps
pop
mov
jbe
add
rcr
mov
jle
daa
pop
mov
in
dec
fwait
imul
inc
sbb
pop
adc
push
int3
test
push
inc
mov
sti
loopne
jmp
mov
jle
out
add
sbb
jne
pop
mov
or
dec
fcom
xchg
fidivr
out
retf
add
pop
mov
ret
push
and
gs
adc
cmp
or
xor
dec
xor
or
inc
jp
pop
retf
xor
xor
dec
mov
in
or
lahf
outs
(bad)
push
and
pop
mov
xchg
pop
push
not
push
in
jle
cmps
mov
adc
mov
pop
(bad)
jbe
stc
shr
dec
mov
outs
jmp
adc
sbb
xchg
adc
inc
jo
cmp
mov
mov
jg
mov
push
fst
jmp
cli
aad
lock
icebp
push
leave
pop
cli
push
aam
jo
in
push
int
xchg
inc
xchg
xor
mov
add
lods
inc
mov
push
arpl
(bad)
test
mov
ins
pop
out
mov
xchg
sub
ficom
rol
adc
clc
into
dec
movs
in
jne
dec
mov
(bad)
mov
icebp
jg
mov
int
or
ja
out
xor
dec
bound
push
call
xchg
xor
dec
mov
pushf
push
ret
push
adc
sbb
dec
xchg
cmc
(bad)
mov
mov
icebp
(bad)
test
pop
mov
or
mov
popa
mov
fadd
les
aam
addr16
cmps
xchg
pop
jp
fdiv
pushf
dec
fisttp
outs
jo
imul
push
ror
test
pop
push
aad
dec
inc
call
sub
add
test
mov
les
push
in
iret
add
add
ret
addr16
aas
aam
inc
std
daa
loopne
fbld
gs
jg
jns
pop
das
adc
loope
shr
(bad)
es
fnstsw
stc
ret
dec
mov
pusha
sar
mov
daa
jl
pop
fild
ror
jg
out
(bad)
in
mov
jbe
dec
sub
scas
in
xchg
js
fsub
test
stc
ficom
inc
sub
sbb
mov
rol
jmp
inc
mov
pop
and
aam
add
hlt
xchg
(bad)
test
xchg
pop
fs
cs
jge
into
jmp
xor
fimul
dec
push
call
or
mul
pushf
push
push
jnp
int
xor
cmp
cmp
pop
xchg
test
les
mov
mov
push
sub
dec
test
lds
cmps
stos
ficom
xor
dec
pop
outs
sbb
and
xor
sub
popa
pop
inc
jo
add
lods
jo
sub
or
aaa
dec
enter
in
(bad)
dec
test
pop
or
and
call
pop
mov
loop
adc
add
call
xlat
shr
std
jmp
pop
ficomp
push
mov
ffreep
sbb
cmp
shr
call
ficom
xor
inc
pop
push
jb
cmc
jo
hlt
push
pusha
inc
push
sbb
push
add
js
mov
inc
bound
and
xchg
scas
jo
inc
aaa
mov
fisubr
popa
xor
dec
sub
cmp
sbb
jmp
push
or
rol
stos
mov
and
arpl
add
neg
cld
inc
movs
leave
add
(bad)
xchg
push
adc
adc
movs
stc
cmp
push
push
adc
scas
sbb
sar
or
jnp
push
cwde
mov
add
fist
fs
fdiv
scas
stos
in
add
or
(bad)
lea
jbe
xchg
daa
mov
add
jne
dec
ficom
mov
(bad)
lods
imul
aas
imul
imul
loope
dec
and
dec
or
cld
rol
or
pop
or
adc
push
sbb
cmp
js
rol
stos
push
fs
sbb
pusha
adc
xchg
out
dec
push
(bad)
jl
xchg
cmps
out
mov
jnp
adc
push
mov
pop
mov
mov
cli
inc
leave
cmp
(bad)
xchg
mov
pop
dec
xor
inc
fwait
pushf
mov
sahf
add
(bad)
or
shl
leave
movs
loop
or
outs
or
xor
and
stc
test
push
push
sbb
shl
cmps
xchg
jg
pop
or
loopne
push
inc
dec
mov
jl
aam
leave
pop
xor
and
push
mov
fsub
inc
sbb
into
sub
stos
retf
pop
push
push
adc
mov
add
cmc
vminpd
ds
aas
sub
loopne
jno
jmp
and
adc
jbe
ret
imul
mov
fcmovbe
lock
imul
gs
das
cmps
les
or
adc
dec
stc
in
inc
jno
dec
popa
bound
cli
jg
mov
mov
outs
(bad)
fdivr
or
in
icebp
push
fstp
(bad)
sbb
fwait
iret
test
mov
jmp
add
sar
(bad)
jne
inc
enter
punpckhwd
adc
pop
icebp
movs
je
fsubr
out
mov
cmp
dec
pop
and
mov
jno
inc
sar
dec
int
and
(bad)
loop
popf
shl
outs
lods
xor
jmp
add
or
xchg
dec
rcr
aas
aad
cmp
aas
fisubr
mov
fld
push
cmc
cli
ins
mov
(bad)
xlat
stos
aas
adc
(bad)
or
cmps
and
push
ds
(bad)
sub
fldpi
clc
cli
ror
test
or
ror
je
in
cli
pop
popa
mov
scas
fld
inc
nop
dec
sub
sti
jo
call
cmp
inc
jae
lods
stc
cmc
cmp
dec
enter
lods
mov
out
mov
push
cld
mov
add
and
sar
and
sbb
adc
gs
shr
sub
cmp
mov
cmp
xor
cdq
sbb
pushf
xchg
or
fadd
(bad)
fidivr
cmps
lea
jecxz
pop
xrelease
add
add
xor
add
add
add
add
test
leave
retf
add
add
add
push
fadd
add
add
add
add
clc
add
add
add
add
add
add
rol
add
sldt
add
add
add
add
sbb
add
add
add
outs
les
add
add
add
add
add
add
add
add
adc
mov
add
jns
mov
out
add
add
add
xchg
add
add
add
add
dec
add
add
add
add
add
jbe
add
test
add
add
pusha
add
jl
ss
arpl
cmp
xor
stc
imul
iret
pop
mov
push
inc
imul
daa
and
jmp
call
es
mov
jge
aam
test
int
mov
jbe
out
sahf
inc
movs
(bad)
loope
jmp
mov
push
cvttps2pi
sbb
cmp
cmc
xchg
rol
or
call
xor
pop
(bad)
mov
inc
fisub
xchg
push
lock
and
sub
jmp
mov
xchg
mov
pop
sub
not
bound
mov
jnp
xor
mov
ror
imul
sub
adc
or
nop
xchg
push
adc
les
mov
sar
out
pop
xchg
repnz
mov
xchg
sub
xchg
or
and
add
push
adc
pop
pop
pop
cmp
mov
push
fucom
xchg
sub
pop
out
push
ror
aaa
xchg
lock
in
xchg
je
sub
int3
cmp
ins
mov
cmc
mov
xor
mov
adc
cwde
and
cmp
jno
cmps
pop
add
retf
out
inc
popf
stc
retf
cmc
xchg
xchg
cmp
or
xor
stc
pop
cmps
stos
mov
pushf
movs
xchg
test
and
fbld
cli
cmp
xchg
scas
adc
cs
mov
es
in
movs
fld
pop
out
mov
sub
jno
clc
mov
fild
inc
mov
push
inc
retf
shl
retf
pop
clc
push
sti
ss
xor
shr
and
fsubr
dec
jae
adc
pop
pop
out
mov
out
shl
add
jp
cli
push
push
mov
(bad)
push
mov
add
xor
mov
pop
ja
and
inc
int
cwde
es
and
movs
mov
movs
cwde
stos
loopne
rcr
fldcw
stos
dec
xor
daa
mov
sbb
test
dec
outs
loopne
out
retf
inc
bound
mov
cmp
and
xchg
mov
in
push
in
cmp
cmps
or
push
(bad)
jb
jne
pop
push
push
xor
(bad)
(bad)
scas
movs
fxch
mov
in
inc
pop
cmp
adc
clc
mov
int3
cmp
int3
mov
popa
ret
sbb
scas
mov
mov
lods
loop
push
xor
mov
cld
dec
rol
xor
cmp
fcomp
loope
mov
dec
int
xchg
push
adc
ret
iret
push
inc
mov
and
adc
daa
cmp
shl
sar
cmps
jmp
push
push
sar
leave
cmps
sbb
push
stc
mov
push
adc
dec
cmp
shr
outs
add
and
ret
popf
ja
int3
sub
push
je
mov
ds
mov
add
mov
paddsw
push
jo
gs
push
in
sbb
sbb
fiadd
inc
push
popf
add
add
inc
cmp
imul
sub
cmp
mov
stos
call
(bad)
xor
mov
int3
dec
ds
dec
push
test
xlat
test
or
xchg
mov
xchg
(bad)
fisttp
pusha
pop
and
fcom
ror
pop
test
ret
and
test
or
lods
adc
pusha
pop
movs
neg
test
(bad)
es
mov
loopne
mov
cmp
jo
in
jns
mov
jle
ins
(bad)
out
add
mov
popf
test
movs
mov
push
xor
std
mov
xor
mov
lods
dec
aad
mov
add
xchg
mov
repnz
mov
push
or
cli
pop
into
out
pop
cld
pop
and
repz
lahf
sbb
addr16
mov
sub
in
mov
cmp
mov
xchg
inc
lea
push
mov
cs
in
fs
and
dec
jo
(bad)
movs
xchg
fsub
push
call
xor
mov
fucomip
cmp
or
dec
mov
aaa
xchg
movs
dec
xchg
imul
adc
lods
js
leave
iret
data16
fldcw
fiadd
int
retf
cmp
mov
push
mov
lea
dec
pop
gs
test
les
sub
sub
push
sub
loopne
dec
in
(bad)
cmp
jne
xor
(bad)
into
cwde
iret
push
gs
enter
xchg
push
xchg
add
shl
sahf
hlt
aam
or
icebp
dec
xchg
add
inc
jne
xor
mov
xchg
dec
add
jle
clc
jmp
je
sbb
mov
or
(bad)
mov
jb
pushf
add
cs
jmp
xchg
mov
inc
and
push
cmp
pop
and
inc
inc
das
adc
icebp
mov
les
js
cmp
in
pop
test
int
aad
(bad)
syscall
push
jb
mov
cmp
xchg
iret
push
jmp
rcl
mov
mov
movs
add
dec
scas
push
mov
pop
lods
loope
mov
or
rol
stos
cmp
out
push
xchg
popf
inc
in
mov
ja
test
cs
push
add
retf
aas
(bad)
data16
pop
das
inc
jnp
inc
and
out
push
push
imul
adc
lds
pop
ret
test
cmp
or
adc
(bad)
and
push
shl
mov
dec
pop
sub
jecxz
leave
push
sbb
fstp
iret
fnstsw
mov
and
mov
sbb
stos
mov
int
mov
repnz
mov
xor
movs
div
cs
ins
cdq
dec
jns
dec
(bad)
sub
je
dec
jge
xor
mov
inc
add
cs
ror
mov
add
repz
and
push
xor
das
cmp
pop
adc
imul
test
cmp
jmp
sub
mov
scas
push
inc
loop
mov
clc
je
mov
(bad)
retf
stos
jne
mov
in
adc
scas
stc
cmp
push
cdq
inc
div
mov
mov
jnp
add
mov
add
push
or
cmc
or
sub
dec
(bad)
mov
(bad)
stos
or
and
mov
adc
fcomip
fucomip
lock
inc
js
or
(bad)
push
cmp
call
cmc
sbb
int
shr
(bad)
mov
ja
cmps
(bad)
mov
mov
push
and
push
dec
and
sbb
addr16
push
scas
fidiv
cmp
xchg
fdivr
loop
cmp
jno
lahf
add
fcom
inc
inc
push
adc
mov
shld
repnz
jae
or
ins
cmp
pop
sbb
mov
leave
dec
pusha
mov
lds
bound
jne
outs
out
mov
mov
inc
fnstenv
cmp
jp
mov
popa
sbb
and
ins
aad
call
mov
add
mov
int3
inc
sub
pop
vpmullw
jl
cs
cmp
mov
das
inc
pop
sbb
xor
movs
out
call
enter
cwde
sbb
adc
cdq
leave
push
xchg
jnp
aaa
pop
int
stos
push
leave
and
out
out
sar
loop
mov
(bad)
data16
aad
adc
fcomp
stos
retf
movs
xor
enter
cmps
rcr
(bad)
push
add
jge
outs
in
cmc
jmp
inc
push
xchg
pushf
pusha
xor
mov
pop
movs
inc
stc
fldenv
xlat
sub
push
add
leave
jo
and
(bad)
(bad)
push
inc
adc
pop
iret
jo
and
push
std
xchg
test
in
nop
sub
lds
add
pop
nop
add
arpl
lods
xchg
mov
jb
les
cmc
fbld
push
ret
and
(bad)
add
das
and
(bad)
out
imul
dec
cmp
ss
push
cmc
int
fldcw
jmp
mov
test
jg
call
sti
and
mov
or
fcom
enter
mov
xlat
faddp
or
aam
call
ror
dec
jnp
mov
xchg
mov
retf
sahf
repz
dec
push
sbb
cli
xor
setno
fdivr
mov
stos
scas
push
fmul
mov
and
retf
(bad)
sahf
dec
out
dec
(bad)
or
dec
xor
cmps
adc
pop
(bad)
fistp
inc
or
jae
test
cmp
push
loopne
popf
push
int
js
fcomp
mov
mov
lahf
leave
fwait
xchg
and
fwait
jmp
jmp
icebp
mov
pop
or
and
push
ret
adc
mov
(bad)
loope
xchg
pop
into
ds
dec
jmp
push
inc
movs
mov
pop
or
stc
les
pop
xchg
call
popa
daa
in
mov
xchg
fbld
adc
sub
(bad)
and
fidivr
ins
push
or
or
test
cdq
dec
and
stos
fwait
ins
mov
jmp
xchg
push
fwait
sahf
sbb
inc
mov
fucomi
out
dec
das
adc
mov
pop
inc
xchg
nop
push
ret
cli
stos
pop
sahf
imul
sub
sub
les
jne
sub
(bad)
ja
pop
cmp
dec
add
js
mov
sbb
inc
xor
mov
lods
sbb
and
or
fst
add
add
mov
in
idiv
int3
daa
mov
adc
loope
sbb
inc
mov
pop
js
imul
mov
mov
sahf
sbb
push
daa
mov
push
sub
push
cmp
(bad)
or
jo
outs
mov
mov
lahf
sti
xor
repnz
mov
lahf
inc
mov
out
jp
out
lods
pop
jno
cmps
push
loopne
mov
aam
scas
cwde
ja
xor
fldcw
adc
mov
(bad)
sub
push
inc
mov
test
ins
inc
mov
scas
ja
dec
retf
loop
scas
data16
test
xor
fst
push
(bad)
pop
and
push
push
xchg
sahf
dec
jmp
xchg
hlt
push
push
or
push
dec
add
aas
es
(bad)
(bad)
bound
movs
push
(bad)
jne
fisttp
call
clc
sub
pusha
xlat
add
jl
int3
mov
loop
into
pop
jecxz
jmp
mov
pop
bnd
push
mov
xchg
and
mov
lahf
hlt
ins
(bad)
mov
fadd
add
add
add
add
std
sub
test
add
push
dec
add
add
aad
add
add
pop
add
add
add
jnp
add
add
hlt
add
add
add
add
add
add
daa
add
add
add
add
add
add
add
add
add
xor
or
xchg
dec
repnz
cdq
adc
lock
add
arpl
out
xor
jne
inc
sbb
mov
ror
pop
jno
mov
xchg
fldcw
push
int3
not
aaa
ss
xor
jg
sub
out
mov
(bad)
jns
xlat
mov
aad
iret
aad
lods
mov
mov
push
loope
mov
popa
add
test
xor
repz
xor
lahf
out
mov
ss
mov
push
adc
xchg
mov
jns
mov
push
mov
imul
inc
repnz
ror
cld
or
mov
inc
mov
out
push
in
test
scas
mov
add
out
ret
pop
xchg
cmps
push
aad
dec
push
and
inc
mov
mov
ds
cmp
shr
mov
xchg
loope
bound
sbb
jbe
jne
push
std
lds
pop
aad
inc
jecxz
xchg
or
fld
or
cmp
shl
dec
jmp
movs
outs
pop
ficom
adc
je
sub
mov
jg
add
xchg
mov
and
push
sub
icebp
hlt
out
sahf
jle
dec
int3
into
inc
xchg
sub
ss
es
nop
sti
shl
shl
rol
aad
shl
ds
cmp
out
aaa
dec
add
mov
imul
or
pop
pop
xor
adc
or
sub
inc
sbb
cmps
es
adc
and
sub
jo
ins
inc
dec
xchg
cmps
mov
(bad)
imul
sbb
jmp
dec
mov
aaa
or
jmp
out
xor
imul
das
ins
push
mov
idiv
pop
(bad)
and
(bad)
cmp
mov
cmc
out
sub
sub
sbb
test
xchg
nop
inc
shl
in
jmp
sti
pop
ficom
popf
js
adc
adc
sbb
nop
xor
jg
and
mov
ret
xchg
mov
call
sub
(bad)
mov
call
xchg
push
pop
lahf
dec
test
cmp
gs
xchg
leave
jecxz
push
in
cmp
push
das
inc
adc
or
not
mov
ror
inc
sub
stos
daa
jns
sbb
ret
jmp
inc
test
jnp
inc
in
int3
jp
retf
or
fcmovnbe
aas
lea
mov
adc
sbb
sbb
xor
cmp
inc
pusha
mov
xchg
cmp
jge
push
mov
aas
adc
ins
mov
cld
dec
sar
or
mov
push
arpl
jle
xlat
dec
mov
xchg
fisubr
xor
inc
jp
ja
xchg
xchg
jno
adc
sbb
enter
fcomp
jl
leave
les
sbb
inc
enter
cld
push
inc
push
sbb
pop
adc
cmps
lods
xor
jnp
xlat
add
xor
rol
test
mov
lods
int3
movs
pop
inc
jl
push
retf
movs
(bad)
xor
psubsb
cdq
shr
mov
sbb
loopne
lock
sbb
loop
xchg
mov
xchg
or
shl
adc
or
or
mov
cmp
(bad)
imul
(bad)
rol
jno
dec
in
int3
or
mov
fisubr
dec
int3
pushf
arpl
add
push
xor
bnd
jecxz
xchg
cmp
mov
sub
push
pop
push
push
shl
aaa
xlat
jno
jmp
or
adc
and
iret
cli
add
or
stc
push
sub
in
mov
ret
in
xor
pushf
clc
sbb
add
push
loope
mov
mov
lock
fiadd
cdq
fld
neg
test
repnz
clc
mov
fimul
rcl
lods
adc
iret
or
xor
nop
mov
add
retf
adc
(bad)
adc
sbb
addr16
test
repnz
mov
pusha
mov
mov
adc
clc
loopne
(bad)
in
arpl
repnz
dec
sahf
jns
mov
push
into
sub
jecxz
inc
adc
and
movs
int3
in
ret
or
cmp
jle
mov
out
cmp
dec
shl
aam
in
jnp
xchg
pop
add
xor
dec
xchg
or
xchg
xchg
ja
in
add
cmp
xchg
enter
leave
fwait
ds
lock
mov
xchg
retf
cmps
mov
xchg
(bad)
push
sub
lea
pop
ficom
in
daa
sbb
leave
xchg
xchg
pop
out
mov
mov
pushf
mov
lea
pop
out
adc
cmp
arpl
sub
mov
push
std
xor
ret
push
jne
and
mov
xchg
aaa
sbb
test
pop
or
xchg
sub
(bad)
arpl
gs
push
jl
out
and
daa
jle
jge
sub
inc
pushf
enter
mov
imul
add
dec
add
shl
sar
dec
ret
push
out
mov
retf
adc
xchg
clc
ret
int
and
ja
jp
fiadd
(bad)
fld
mov
sub
fldcw
gs
push
test
fidiv
addr16
call
jns
cld
mov
dec
xchg
sahf
retf
pop
popf
fwait
jle
cmp
(bad)
ins
xor
int
push
test
dec
xor
fcom
push
jle
push
dec
out
mov
outs
push
int3
or
aad
retf
mov
jl
and
repnz
dec
in
pop
lahf
push
mov
xor
push
or
mov
test
push
(bad)
aaa
mov
mov
adc
cmp
pushf
movs
hlt
mov
mov
mov
or
add
add
stc
pop
and
mov
and
dec
pop
jge
sbb
add
pop
dec
repz
enter
cdq
iret
ror
call
inc
mov
or
xchg
pop
fiadd
cdq
jo
int
xchg
dec
mov
mov
sub
in
stos
mov
inc
pop
ins
add
hlt
clc
or
icebp
sub
add
mov
sub
or
dec
jbe
test
inc
lea
xchg
pop
sub
lock
mov
xchg
push
rcr
cmp
add
int
sti
xor
adc
movs
xchg
jo
push
cmp
cli
mov
fwait
pop
lea
adc
dec
push
pop
push
dec
cli
adc
cmps
les
(bad)
leave
jecxz
jmp
(bad)
fcom
and
add
jge
fimul
sub
sbb
in
fidivr
sub
xor
cmps
xor
dec
neg
out
mov
cdq
pushf
js
pop
imul
sbb
shl
cmp
add
cmps
mov
fcomip
sbb
mov
(bad)
jle
xor
scas
or
xchg
dec
or
(bad)
popf
adc
jne
in
mov
mov
or
sbb
ins
(bad)
sbb
sub
xchg
(bad)
(bad)
jmp
mov
cmp
jns
int
pop
je
or
dec
mov
pop
xor
mov
cmp
push
sub
adc
jmp
cli
xchg
dec
addr16
adc
cmp
add
pusha
aaa
adc
sbb
fistp
mov
fidivr
dec
cmps
test
scas
ins
xor
call
xchg
inc
xchg
out
adc
pop
push
inc
jae
push
out
pop
add
adc
mov
pop
jle
lods
vpackssdw
mov
lahf
mov
xor
loopne
xlat
mov
jg
iret
or
aam
sar
adc
mov
cwde
add
inc
sub
sbb
inc
jg
ss
bound
adc
sub
pop
shr
pop
loope
add
inc
dec
repz
mov
sub
mov
cmps
xor
xchg
fadd
jb
mov
stos
rcl
sbb
rol
sub
fsub
xor
test
mov
sub
cmp
xchg
leave
cld
sbb
or
inc
lock
xchg
and
mov
mov
cmp
and
jmp
and
stos
dec
xchg
stc
xchg
outs
stc
ror
movs
cld
mov
xor
mov
pop
inc
xor
hlt
in
inc
inc
fs
cmp
mov
pop
shl
mov
push
aas
fucomp
test
ret
and
dec
cmp
jns
dec
xor
pop
lock
mov
dec
es
mov
loope
jp
ja
inc
out
or
mov
lahf
leave
add
mov
push
pusha
icebp
jbe
inc
into
add
cmp
(bad)
fdivr
fistp
sub
scas
push
test
int
into
inc
out
jg
je
pop
movs
lods
call
mov
fld
xchg
dec
add
adc
push
sub
inc
rcr
cdq
cmp
mov
push
test
add
add
push
popa
or
mov
(bad)
xchg
lds
sar
jne
sbb
xchg
and
popf
cmp
cdq
addr16
rol
enter
cmp
sahf
jo
sub
jnp
and
aas
lds
xchg
ds
iret
mov
add
aaa
or
gs
(bad)
int
fnstcw
push
mov
cs
rcl
mov
xchg
js
adc
int3
mov
ror
mov
mov
cld
pinsrw
(bad)
cld
fdivr
or
sub
mov
ins
sbb
xor
sbb
push
stc
jne
and
rol
xchg
nop
inc
push
repz
test
mov
push
add
sub
div
jmp
lea
and
cmp
sub
inc
push
aas
sbb
pop
adc
nop
adc
cmp
out
aam
or
sti
clc
(bad)
add
push
inc
pop
inc
test
shl
or
add
mov
cmc
push
outs
std
retf
repnz
sahf
das
jae
cld
pop
jno
add
xchg
jmp
push
push
dec
sub
cmp
popa
sbb
test
out
xchg
add
sub
add
mov
add
add
lea
add
test
mov
add
xlat
add
add
call
sbb
add
es
add
add
add
add
add
add
add
retf
pop
add
add
mov
lock
add
add
xor
loope
add
add
add
add
scas
int3
pop
add
test
sti
add
jbe
ss
outs
rcr
cmp
std
fisubr
mov
adc
scas
ror
pusha
xlat
not
dec
push
outs
pop
mov
mov
add
lahf
inc
push
out
jge
xor
adc
jb
or
xchg
jmp
mov
adc
sub
dec
dec
sub
and
pusha
cli
push
sub
dec
mov
ins
jecxz
out
ja
lock
or
test
jns
or
cmps
sub
xor
and
cmp
xchg
outs
mov
push
ret
jp
and
(bad)
or
push
sub
cmps
adc
jae
cmp
addps
sub
sbb
fnsave
sub
arpl
push
popf
mov
retf
mov
push
cmp
xor
push
jmp
mov
push
mov
cld
repnz
xor
fmul
inc
jns
int3
mov
mov
pop
mov
inc
pushf
mov
cmps
imul
mov
inc
or
movs
fs
pop
leave
or
push
jmp
clc
push
fdivr
dec
or
mov
cld
sub
ud1
pop
call
cld
stc
dec
sbb
cmp
ss
lods
das
fwait
mov
pop
(bad)
xchg
fs
add
inc
cld
lea
repnz
sub
pop
jnp
jmp
addr16
jl
mov
jo
loopne
mov
adc
vmread
add
or
(bad)
and
xor
or
push
xchg
aaa
mov
push
retf
xor
fwait
cmp
out
daa
hlt
mov
mov
adc
mul
ficom
in
(bad)
das
adc
jp
cli
imul
pop
das
and
sub
mov
rcl
mov
jge
std
in
popf
(bad)
cs
mov
bound
out
iret
pop
push
inc
movd
aam
or
dec
(bad)
fs
ret
movs
cdq
int
int
inc
les
daa
dec
xchg
fadd
inc
xor
loope
loop
ds
jmp
and
push
hlt
sti
adc
push
sub
jo
dec
fstp
adc
mov
iret
imul
dec
jnp
rcl
push
inc
jne
jnp
lods
aas
in
xchg
mov
dec
jmp
gs
test
xchg
jo
js
scas
push
stos
mov
mov
pop
cmp
xchg
jl
mov
ins
xor
sbb
jmp
xor
fs
dec
stc
dec
mov
pop
jne
pop
pop
mov
ficom
jle
lods
lods
sub
dec
sti
sbb
test
in
push
sub
shl
jo
sub
(bad)
inc
and
xchg
dec
into
hlt
jp
ds
mov
cmp
cmp
sub
pusha
adc
loopne
int3
and
pusha
inc
sti
lods
push
neg
aas
pop
and
fxtract
in
lock
sar
fs
fwait
cwde
mov
cld
add
movs
push
xlat
sbb
fwait
mov
add
out
call
sbb
fild
mov
test
jae
imul
test
pop
push
leave
mul
movs
sti
imul
push
xor
dec
lahf
popf
cmp
pop
pushf
cmp
cmp
neg
js
push
ins
pushf
shr
cmp
rcr
(bad)
dec
push
cld
outs
jmp
fs
xor
jne
pop
icebp
and
cs
mov
(bad)
fisttp
xor
sahf
and
xlat
aam
sahf
je
inc
push
(bad)
ds
xor
inc
cdq
sub
fbld
and
jns
bound
jb
or
mov
mov
mov
test
mov
call
data16
cmp
dec
pusha
sub
xchg
push
sbb
test
mov
jae
ss
jge
out
(bad)
out
xchg
pop
repnz
and
jb
inc
test
mov
jle
mov
xchg
jae
pop
pop
cld
mov
jnp
push
or
and
aam
fiadd
and
jb
xor
ins
out
xchg
jae
sahf
out
pop
mov
sub
sbb
pop
cmps
jmp
lods
sub
dec
add
cmps
ja
pop
sub
sub
popa
mov
les
xor
cmps
cmp
mov
sti
in
jg
ficom
inc
cmp
xchg
inc
inc
cmp
and
dec
push
test
or
jbe
adc
cmp
dec
or
es
daa
mov
loop
jmp
add
mov
xor
adc
(bad)
in
xor
push
mov
retf
mov
das
mov
xor
inc
xchg
jge
fsubr
les
xor
pop
dec
inc
push
std
sbb
sbb
pop
clc
mov
cmp
(bad)
out
cmp
adc
or
mov
aad
bnd
dec
and
stos
fwait
or
jl
rol
ins
adc
in
fimul
inc
mov
repz
sub
mov
or
dec
daa
dec
retf
mov
outs
push
ss
inc
mov
sbb
setnp
cmps
loopne
pop
mov
pushf
push
rcl
jbe
fsub
adc
popf
and
pop
inc
cmp
cmp
jns
fnsave
fsubr
pop
cdq
or
repnz
loop
dec
push
fs
and
pop
add
dec
cdq
scas
out
mov
div
ror
popf
mov
fst
ins
xchg
lock
mov
sti
lods
dec
sub
in
jmp
daa
imul
dec
xlat
xor
and
lahf
push
xchg
int3
sar
cmps
dec
test
fdivr
dec
jmp
pop
sbb
sub
mov
or
mov
bound
push
xor
scas
pop
jp
xchg
out
stos
aas
and
xor
addr16
xchg
lods
xchg
pop
xchg
mov
mov
cmp
das
adc
sub
popf
in
div
imul
repnz
add
clc
sbb
adc
add
mov
cmp
cwde
fcmovbe
mov
pop
je
add
out
and
outs
lods
add
add
fist
inc
push
fnsave
xor
in
mov
hlt
data16
addr16
mov
clc
ins
xlat
jmp
xor
pop
sbb
into
mov
ss
movs
jb
pusha
pushf
sti
ret
cmp
call
xchg
sbb
mov
pusha
out
sub
idiv
jbe
push
jae
sbb
pop
or
sbb
aad
lea
sar
bound
test
mov
stc
dec
push
aam
jg
sub
cmp
loopne
(bad)
nop
test
mov
xchg
gs
mov
call
pop
cdq
repz
bnd
push
jne
pop
xchg
and
xchg
sub
mov
jmp
mov
int
pop
or
pop
cmp
jb
fcomp
leave
sbb
fstp
xor
movs
mov
js
mov
(bad)
cmp
retf
je
push
aaa
jmp
mov
mov
and
out
ret
mov
outs
(bad)
jl
add
cli
imul
stos
xor
mov
push
movs
cmp
mov
enter
lods
adc
sti
scas
inc
aas
xchg
push
or
movs
push
push
rcl
xor
and
mov
lods
jno
sub
jg
cmp
mov
and
jns
lea
push
add
inc
or
or
mov
frstor
jecxz
sbb
pushf
lods
aam
pop
inc
daa
push
sbb
arpl
mov
or
in
clc
data16
mov
(bad)
xchg
stos
call
xor
ds
loopne
call
xchg
xchg
cld
cmp
pop
repz
dec
lock
xor
sub
int
rol
ret
push
dec
mov
xchg
xchg
xchg
inc
mov
ins
xor
fiadd
idiv
lahf
jmp
mov
push
sub
cmp
retf
aas
loope
mov
xchg
retf
fstp
imul
push
sbb
mov
stos
or
hlt
push
mov
icebp
gs
mov
mov
jno
fs
jl
fwait
xor
ins
adc
add
or
in
push
add
stc
sahf
lods
inc
fdivr
mov
out
scas
pop
mov
pop
mov
imul
rcl
in
mov
mov
stc
(bad)
mov
or
push
aaa
pop
xlat
push
xchg
enter
jo
retf
mov
xor
dec
pushf
pop
stos
xchg
mov
xor
pop
stc
call
mov
daa
pop
ss
sbb
xchg
loope
mov
pop
test
push
mov
jae
mov
stos
inc
jge
loopne
in
sbb
push
dec
popa
pop
push
inc
jecxz
fidivr
sahf
sub
sbb
push
cmp
je
gs
dec
cld
les
mov
push
imul
addr16
pop
pop
mov
test
test
popf
or
cmc
sbb
test
xlat
ins
jmp
lahf
test
and
jge
jbe
jge
xor
cmps
(bad)
mov
xor
sti
lods
xchg
mov
xchg
movs
xchg
ins
inc
xchg
jb
and
les
fldpi
xor
sar
pop
shl
push
cmp
add
out
movs
mov
aad
push
js
fld
inc
popa
neg
xchg
in
mov
cmp
arpl
hlt
mov
dec
jmp
jmp
sub
pop
rcl
mov
fist
out
push
ins
xchg
sbb
xchg
ret
(bad)
jp
xchg
mov
add
pop
mov
mov
loope
mov
mov
movs
push
xchg
jbe
cmp
lods
dec
push
sub
int3
loopne
xchg
outs
cs
test
inc
xor
nop
test
pop
dec
repnz
pop
xchg
cmp
push
stc
loope
movs
jmp
(bad)
mov
fwait
in
mov
fisubr
mov
es
dec
das
test
mov
xchg
jge
in
retf
cs
or
sbb
sub
arpl
push
pop
mov
jmp
loopne
aaa
xchg
sbb
cmp
out
push
mov
cli
in
out
ja
stos
iret
pushf
mov
scas
or
push
mov
loop
pop
or
lahf
mov
loop
inc
add
and
loop
or
cmp
jne
inc
xchg
nop
ins
std
test
mov
xchg
mov
hlt
xor
inc
add
add
add
add
pop
sub
add
add
add
add
add
add
add
add
or
add
add
add
add
add
fild
add
fld
add
add
add
cmp
add
sti
add
add
push
mov
add
add
cld
add
add
pop
mov
add
add
add
dec
add
add
add
add
add
dec
add
add
mov
aad
add
mov
add
add
sub
add
mov
add
lea
add
add
add
add
add
add
mov
add
add
add
xchg
add
add
add
sbb
add
add
add
ins
fadd
cmps
outs
add
add
add
add
xor
add
fiadd
add
add
fidivr
add
int3
loopne
movs
inc
addr16
imul
shl
sbb
sar
mov
jl
and
xchg
loop
div
fst
dec
ret
or
dec
clc
xchg
test
sub
mov
retfw
cmp
dec
xchg
pop
fcmovu
inc
(bad)
sbb
shr
jnp
add
xchg
test
mov
mov
mov
jl
push
loope
mov
xchg
bnd
fs
loop
jle
fucomp
ins
ins
pop
jne
adc
ins
inc
fcom
add
inc
add
lea
mov
movs
mov
dec
out
movs
sahf
out
cld
sti
push
clc
adc
or
mov
pusha
dec
inc
jo
shr
repnz
iret
imul
imul
out
mov
push
xchg
pop
and
cmp
mov
add
rol
jne
imul
fsub
mov
(bad)
xchg
xchg
outs
xchg
out
and
cmp
data16
push
addr16
fst
pop
xchg
jmp
and
dec
push
ret
xchg
ins
jle
and
push
fnstsw
ret
push
shr
stos
(bad)
push
fwait
pusha
loopne
pop
loope
dec
int3
sahf
and
imul
std
xor
imul
shl
lahf
movs
jbe
add
es
fistp
and
mov
push
jne
xchg
push
loop
outs
imul
ret
lock
jge
pop
pushf
fwait
scas
dec
lock
cmp
xlat
sub
bound
or
sahf
dec
lds
pop
and
sub
adc
mov
cmp
call
push
fwait
iret
xchg
mov
inc
loope
inc
and
mov
push
sbb
mov
paddd
mov
xchg
shl
xor
scas
jle
inc
add
push
(bad)
push
dec
pusha
push
dec
adc
call
test
inc
jecxz
fwait
add
fdivp
enter
dec
pop
pop
(bad)
add
mov
cmovae
cdq
and
popa
pop
movs
cli
sbb
pop
out
sub
jge
jmp
mov
(bad)
call
sub
mov
mov
ror
inc
mov
lods
jno
int
scas
adc
mov
pop
ins
mov
sub
mov
cs
(bad)
add
loope
sbb
sub
daa
test
(bad)
fbstp
jmp
mov
or
test
lods
add
or
mov
nop
pop
lea
idiv
jno
sbb
sar
ror
(bad)
ror
mov
(bad)
movs
xchg
push
or
jmp
out
push
out
push
dec
mov
std
mov
gs
ins
and
ret
fsub
sti
pop
iret
push
cmps
xchg
fistp
call
imul
inc
cmp
outs
test
sbb
dec
aas
xchg
inc
repnz
push
dec
xchg
repnz
cmps
fidiv
adc
push
call
std
jns
mov
loop
pop
sbb
out
adc
xchg
mov
shr
xchg
cmps
mov
in
jmp
movs
dec
imul
jb
cmps
jo
scas
mov
call
pop
int3
mov
std
xchg
inc
ret
les
es
daa
sub
pop
sub
test
fisttp
call
cld
pop
jp
fs
retf
scas
sbb
je
sub
push
iret
pop
cdq
push
push
out
mov
push
mov
cs
add
(bad)
out
cmp
cld
lock
mov
push
mov
push
adc
xchg
popf
imul
and
sub
pop
push
(bad)
mov
stos
shl
mov
mov
xchg
sub
(bad)
pop
mov
das
fst
inc
xor
das
stos
cmp
jge
cdq
or
mov
or
and
call
out
mov
call
jnp
pop
int3
push
test
jp
(bad)
in
mov
daa
sbb
data16
inc
inc
(bad)
mov
jb
mov
push
addr16
jbe
adc
call
mov
ror
inc
cs
pusha
inc
fiadd
lahf
dec
and
ror
and
clc
adc
scas
add
adc
cs
push
jbe
movs
arpl
shl
inc
mov
inc
sub
pop
push
daa
adc
push
sbb
leave
fidiv
cli
xchg
arpl
retf
mov
cmps
stos
cs
cmps
xchg
sub
mov
dec
pop
enter
sbb
push
lock
into
scas
jge
inc
jp
jecxz
outs
jl
xchg
pop
inc
cmp
sbb
out
shl
ds
test
sar
pop
test
and
push
mov
and
and
stos
dec
outs
jo
fild
rol
ins
mov
cmp
sbb
mov
lea
mov
jnp
scas
dec
out
mov
mov
imul
das
mov
in
add
adc
lea
mov
dec
sahf
test
in
mov
in
aas
xor
jg
jmp
aam
push
out
lahf
scas
add
inc
(bad)
test
pop
and
dec
jl
lock
repz
(bad)
fld
add
mov
adc
inc
xchg
les
and
xchg
popa
adc
jle
leave
xchg
dec
sbb
or
add
pop
xor
loop
lds
add
les
cs
sbb
test
xchg
mov
pop
mov
mov
push
pop
mov
ins
shl
xchg
adc
and
cdq
scas
add
rcr
sub
aaa
pop
push
pop
jle
data16
fisubr
jle
fsubr
scas
push
(bad)
les
scas
mov
(bad)
ficomp
cs
push
inc
lock
scas
ret
rcl
mov
sub
cld
xor
fidiv
test
mov
dec
or
mov
fs
cmp
popf
jle
int
(bad)
dec
je
icebp
mov
jmp
loop
cmp
and
ret
aad
push
mov
mov
jns
push
popf
jmp
mov
stc
cli
cdq
sub
ja
cmc
js
ret
pop
jl
inc
or
dec
shl
imul
rcl
test
push
and
stos
add
ret
lods
push
repz
test
repz
popf
rcr
sbb
sbb
jbe
ret
cmps
pop
nop
test
test
pop
dec
call
and
push
push
or
add
jno
lahf
push
xchg
loopne
or
enter
test
jmp
movs
push
xchg
or
push
imul
sbb
mov
in
xchg
aaa
and
(bad)
fs
mov
popa
or
mov
popa
iret
jge
pop
leave
inc
dec
inc
fst
xor
xor
enter
and
fisttp
pusha
loope
cli
inc
adc
mul
aad
add
sbb
pushw
xchg
lods
lock
pop
or
xlat
inc
call
xchg
cmp
into
das
or
shl
sub
call
add
ins
cwde
and
out
pop
fild
stc
out
imul
lods
sub
aad
dec
in
push
sahf
xlat
and
mov
jne
jmp
popa
pushw
jae
push
cwde
xchg
pop
pusha
mov
fcmovu
retfw
in
mov
or
jle
mov
pop
aam
mov
mov
adc
ffree
mov
mov
mov
or
jge
sbb
push
(bad)
sti
mov
(bad)
lea
out
ret
push
inc
sub
test
cs
into
sbb
fcomi
add
(bad)
aad
and
mov
in
xor
repnz
dec
test
clc
test
inc
pushf
pusha
sub
lea
push
push
stc
push
test
es
mov
inc
sub
sbb
push
dec
cmp
sub
repnz
lock
repz
lock
sub
or
mov
jl
bound
push
pop
mov
test
xchg
stos
fcmovnb
inc
call
push
xchg
inc
dec
adc
jns
sar
sbb
sub
push
mov
dec
xchg
or
sub
shl
retf
inc
(bad)
pop
aam
cdq
push
push
xchg
pop
push
loopne
sar
pop
lahf
sub
sahf
dec
dec
cmp
lods
or
inc
cwde
sub
pop
push
jb
in
(bad)
mov
mov
outs
mov
int3
pop
sbb
inc
jge
cmc
test
ror
stc
fimul
test
and
and
pop
sub
(bad)
xchg
xchg
sbb
and
mov
pop
push
add
loopne
push
(bad)
mov
loope
sti
inc
mov
pop
call
sbb
cmp
push
mov
mov
cdq
in
aas
stc
dec
add
push
cmc
sti
repz
sbb
jge
xchg
ds
add
rcr
nop
dec
push
or
lods
mov
lock
xchg
push
cwde
and
pop
ja
cmc
adc
mov
pop
mov
or
(bad)
fnstenv
scas
ins
sbb
mov
push
shl
mov
jecxz
push
jmp
inc
dec
inc
or
mov
mov
cmp
mov
test
or
cmps
inc
mov
in
(bad)
sub
sub
test
addr16
ret
push
jmp
xor
or
shl
adc
pop
add
inc
sbb
ret
cmps
imul
sbb
lock
mov
(bad)
fiadd
repz
popf
adc
shl
or
jmp
push
lds
add
or
or
in
inc
fst
(bad)
repz
lock
adc
sub
or
dec
inc
add
cwde
mov
jmp
daa
push
aad
sub
imul
cmp
mov
dec
adc
std
idiv
and
cwde
and
xlat
pop
add
mov
push
mov
xor
cmp
jno
push
mov
adc
cs
mov
jne
jnp
sbb
push
ret
cmp
scas
je
xchg
xchg
leave
fst
or
mov
jns
mov
lea
test
and
cli
cmp
(bad)
popf
clc
sbb
inc
push
(bad)
retf
in
cwde
pop
pop
adc
bnd
push
xor
sub
sbb
pop
sbb
bound
fs
mov
pushf
cld
aam
xor
add
nop
add
add
add
add
add
bound
add
add
add
add
add
leave
add
scas
add
mov
add
add
add
add
add
add
mov
sub
add
add
add
add
add
add
add
add
imul
and
add
add
fld
push
add
add
add
mov
add
add
add
add
cmp
inc
add
push
add
add
movs
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
add
cmp
add
add
add
and
add
add
add
add
add
add
inc
add
add
add
add
add
add
lea
add
jge
mov
add
add
in
add
add
add
cmps
add
add
add
add
add
shl
add
add
mov
add
pop
add
add
add
add
add
add
add
mov
push
add
add
add
test
add
add
add
add
add
cmps
add
add
add
and
popa
add
pop
pop
add
add
add
add
add
xor
add
add
add
add
add
rol
add
add
add
mov
add
add
add
add
add
add
add
add
add
in
cmp
add
add
add
add
add
add
data16
add
push
add
rol
add
xchg
add
imul
add
add
add
add
add
cwde
add
add
add
add
add
add
add
rol
add
cmp
sub
mov
add
add
mov
add
je
add
xor
das
add
add
add
add
add
add
add
add
mov
add
add
add
xor
mov
jnp
jg
fisttp
imul
js
pop
or
sbb
sti
mov
mov
xchg
and
shl
xchg
mov
cmps
int3
mov
add
mov
xlat
cmp
mov
push
add
push
cld
adc
xchg
and
in
xlat
and
in
and
sbb
cmp
xor
inc
test
and
inc
push
xor
js
jns
retf
repnz
lds
cld
ret
mov
inc
into
pusha
push
and
sbb
addr16
iret
(bad)
pop
aam
adc
in
xchg
or
mov
stc
inc
add
mov
int3
pop
adc
fnstsw
xchg
out
jg
pushf
xor
pop
(bad)
xchg
js
sbb
pop
sbb
out
cwde
cmps
push
pop
dec
fwait
repnz
test
push
loope
test
sbb
or
dec
out
je
or
pop
push
hlt
aad
jns
loop
adc
jle
pop
cmp
ss
push
xchg
stc
aaa
call
cwde
adc
pop
loopne
test
cs
icebp
jge
add
xchg
retf
xchg
je
lods
(bad)
pop
sub
call
movs
cmc
sti
pop
retf
jmp
es
lock
ficom
out
bound
aam
mov
add
scas
lods
mov
or
xor
fistp
sub
fisubr
cli
pusha
popa
xor
test
iret
mov
sbb
vaddps
cmp
arpl
lahf
xchg
scas
icebp
pop
adc
xchg
in
cs
xor
mov
mov
mov
out
jg
dec
dec
loope
mov
fwait
xor
je
pop
cli
fiadd
mov
mov
loop
lock
sub
mov
int3
mov
cmps
mov
mov
movs
ja
ftst
clc
cmps
cli
inc
jb
ins
(bad)
shl
in
sub
shl
ja
mov
ja
mov
daa
and
inc
int3
adc
pop
sbb
ret
push
es
loopne
adc
ds
pop
mov
sti
inc
cli
fimul
ror
stc
jge
jb
nop
pop
fsub
jmp
cli
dec
ret
fs
sub
mov
adc
jnp
je
cmp
retf
mov
mov
xchg
sahf
sub
mov
movs
rcl
add
popa
sub
mov
mov
call
idiv
loope
jecxz
cwde
xchg
cmps
mov
icebp
cwde
fdivr
pop
ss
test
adc
leave
xchg
jl
scas
ret
gs
mov
fwait
push
iret
aaa
mov
ret
lods
mov
sub
xlat
adc
pop
and
xor
mov
sbb
iret
popa
xor
xchg
ds
fidiv
or
cmp
dec
mov
pop
stc
test
imul
or
pop
popa
xchg
ret
xchg
aas
jmp
test
xor
pcmpeqb
out
jne
icebp
push
bound
js
jmp
arpl
mov
mov
inc
aaa
mov
add
push
mov
pop
sub
fstp
rol
arpl
daa
enter
dec
lods
dec
cmp
shr
fdiv
aas
mov
dec
adc
call
mov
fsubrp
pop
(bad)
cmp
jmp
mov
xor
call
les
mov
push
out
add
dec
sub
cmp
mov
mov
test
repz
mov
pop
add
dec
lods
dec
int
gs
sub
fwait
out
sub
mov
push
out
push
adc
jl
sub
fisttp
loopne
cmp
sub
adc
out
das
and
pop
adc
inc
adc
ins
push
pop
sub
repnz
in
movs
leave
je
aaa
mov
mov
repnz
xchg
adc
cmp
cli
popf
ror
inc
jns
and
cmovb
and
cmp
popf
add
push
mov
out
jns
out
(bad)
xor
iret
mov
mov
add
pop
popa
loop
or
jl
arpl
cmp
js
xchg
stos
cmp
in
ins
leave
jbe
(bad)
sar
push
mov
fst
xchg
add
popa
or
jle
fstp
add
inc
dec
std
push
les
xchg
jp
mov
sbb
and
in
dec
adc
movsx
xlat
stos
mov
ins
cld
sbb
sub
mov
lahf
std
and
adc
pop
arpl
pop
data16
dec
test
test
sti
iret
nop
pop
mov
and
mov
cmp
mov
and
das
bound
ror
sahf
lds
in
call
mov
shr
cmp
test
ret
add
imul
mul
fisub
les
add
enter
sub
mov
sub
(bad)
fwait
push
aam
push
pop
sub
retf
fild
xchg
loope
jno
aaa
xor
adc
cli
(bad)
data16
push
push
inc
mov
retf
pop
jmp
cmc
outs
(bad)
jnp
sub
(bad)
repnz
cmp
sahf
adc
loope
es
dec
sub
into
jae
sti
adc
fadd
cs
xchg
dec
xchg
mov
scas
out
inc
js
pop
pop
add
rcl
sahf
add
call
call
es
dec
enter
lahf
test
es
ja
div
pop
rol
ja
mov
push
ds
leave
js
sar
hlt
add
xchg
mov
xor
sbb
pop
fadd
je
fidiv
in
add
push
jge
inc
cmc
test
test
sbb
cli
xor
jne
cmp
pusha
ss
mov
stos
lods
mov
xchg
push
sbb
fnstsw
lock
aam
xchg
out
mov
pop
xchg
adc
fwait
xchg
inc
mov
gs
aas
xchg
jb
push
stos
adc
movs
(bad)
mov
add
xchg
aas
xlat
jmp
mov
xor
xchg
or
shr
lods
fpatan
(bad)
sti
cmp
jnp
retf
out
fisttp
aam
dec
add
xor
push
test
lds
lods
loopne
in
dec
lods
out
cmc
cdq
in
adc
sub
stc
or
lods
test
sub
sbb
das
push
ja
in
stos
jg
push
mov
sub
sbb
mov
mov
fmul
or
sahf
push
push
pop
and
bound
mov
mov
push
sub
push
sbb
jb
or
aaa
pusha
inc
xlat
scas
scas
mov
ins
(bad)
int
mov
popf
mov
or
or
aam
add
dec
add
not
gs
stc
xchg
mov
(bad)
and
aam
push
add
or
jge
gs
inc
dec
sub
push
in
cmc
mov
or
aam
pop
out
(bad)
jl
loope
test
(bad)
sbb
int3
dec
mov
aam
xor
cmps
icebp
add
cld
addr16
cli
pop
adc
jl
sub
adc
xor
pop
adc
ds
push
sar
pop
sti
scas
pushw
xchg
sbb
pop
cmp
push
ss
xchg
push
sbb
clc
call
int
add
push
or
adc
test
sub
call
add
rol
and
xchg
movs
in
pop
das
mov
pop
xchg
aad
stos
mov
mov
shl
icebp
in
sub
in
(bad)
test
shr
std
pop
adc
jbe
shl
lods
(bad)
sbb
xor
xor
into
xor
mov
push
dec
fsubr
arpl
jnp
ja
adc
or
xchg
ret
add
push
cmp
scas
inc
xor
mov
sub
or
icebp
add
xor
ins
loop
dec
add
mov
rcl
cmp
xor
loopne
dec
lea
repz
and
jb
fnsave
daa
lahf
in
jb
(bad)
ficom
hlt
jo
add
inc
jae
or
push
xchg
cld
xor
sub
inc
ror
aad
xchg
xor
int
dec
in
pop
mov
sbb
xor
pop
icebp
adc
jbe
cmp
mov
dec
xchg
xchg
adc
jmp
rcl
and
cmp
sahf
push
push
lock
imul
(bad)
cmp
outs
sbb
sub
ins
loop
out
dec
lock
adc
mov
fld
loop
data16
out
scas
dec
push
out
inc
shr
mov
idiv
sbb
scas
sahf
js
jb
mov
mov
xchg
cmps
hlt
popf
arpl
and
xchg
and
pushf
imul
adc
xchg
mov
aas
jo
dec
or
in
xchg
sbb
outs
sahf
mov
out
xor
test
adc
push
movs
cmps
(bad)
fxch
adc
icebp
cld
dec
into
mov
test
jl
sub
sbb
mov
sti
xchg
cmp
mov
cmp
in
movs
and
pop
retf
mov
int3
and
loop
les
pusha
xor
jne
sti
jae
push
lock
in
std
push
ss
lods
mov
shr
xor
test
mov
lahf
mov
ins
xor
push
mov
add
(bad)
jbe
xchg
arpl
das
mov
popf
out
or
dec
sbb
mov
sub
jae
cmp
adc
out
cli
fidiv
rcr
test
and
cmps
popa
pop
test
xor
push
es
(bad)
hlt
mov
fnsave
imul
adc
cmp
inc
fistp
fs
cli
call
pop
push
push
xchg
cmc
sub
iret
cs
jmp
ja
push
dec
jbe
(bad)
mov
cmp
add
(bad)
(bad)
fld
add
out
or
in
jae
mov
push
dec
and
xchg
nop
call
cmp
hlt
xor
das
inc
inc
js
repnz
fiadd
mov
xor
loop
push
push
addr16
cmp
mov
sti
xchg
adc
jae
and
jno
xchg
cmp
sub
mov
and
les
and
or
mov
push
jmp
out
jnp
iret
sub
xor
cmp
icebp
sub
cmp
movs
cld
and
shl
cwde
cdq
stos
or
repnz
movs
inc
adc
mov
mov
add
xchg
add
add
add
add
add
add
add
add
loope
add
push
add
sub
add
add
add
add
add
add
add
add
pop
add
fadd
mov
add
add
add
je
add
fadd
add
add
add
add
fld
add
(bad)
add
add
add
add
add
retf
add
add
add
add
add
data16
add
add
lea
add
add
add
add
fiadd
add
add
add
add
add
aas
add
add
add
add
add
add
add
add
add
add
add
add
mov
add
add
movs
add
add
add
int
dec
add
add
add
add
add
add
sub
add
add
add
add
test
add
sbb
pop
cs
call
aam
mov
sbb
push
adc
jno
imul
cmc
(bad)
push
lods
sub
cmp
jge
inc
xchg
jg
cli
mov
daa
jb
clc
pop
push
(bad)
jp
dec
adc
popf
daa
aam
lock
jne
cmp
popf
add
xchg
mov
test
mov
(bad)
mov
js
js
sar
movs
jno
jns
mov
(bad)
outs
push
sbb
das
stos
mov
rol
(bad)
cmp
pop
jae
inc
xchg
movs
not
pop
cmp
mov
push
out
pop
push
sete
push
mov
jp
(bad)
adc
push
clc
movs
sti
sti
fs
pushf
jb
jl
(bad)
or
cli
dec
push
cmps
retf
in
repz
cmp
sbb
or
adc
cdq
mov
push
test
call
mov
pop
cmp
fnsave
jl
in
or
sahf
xchg
nop
mov
shr
or
cld
aam
shl
sbb
xor
jmp
dec
sbb
scas
enter
pop
ror
pop
clc
popf
addr16
stos
jo
cwde
jnp
enter
jo
shr
shr
pop
fwait
pop
shl
sub
xor
mov
bnd
cmps
iret
jbe
lock
jbe
enter
cwde
das
dec
cmp
cs
rcl
lock
mov
xchg
mov
inc
jns
inc
repz
push
pop
aam
jo
repnz
pop
out
aad
dec
sbb
jmp
add
xchg
or
jg
inc
ja
fisttp
aam
xchg
scas
and
and
call
add
or
ins
xor
sti
inc
push
out
sbb
xor
push
cmp
or
dec
push
pop
imul
push
cli
clc
popf
push
sbb
lods
push
mov
inc
sti
push
es
pop
mov
ror
in
cld
pop
inc
xlat
xlat
mov
mov
jne
bound
add
mul
push
mov
add
fstp
xor
mov
xor
cmp
test
pop
jnp
xchg
inc
vmovntdq
shl
nop
jle
mov
push
aas
es
in
(bad)
xchg
xchg
jmp
add
inc
jg
aaa
out
lods
loope
xchg
ret
stc
pop
inc
repnz
and
popa
aas
jmp
(bad)
imul
or
mov
enter
adc
xor
adc
(bad)
mov
jl
imul
sbb
and
jmp
pop
sub
shr
pop
or
inc
mov
push
mov
inc
inc
dec
dec
in
movs
bswap
loopne
push
jl
dec
sub
shl
retf
fstp
mov
popa
add
icebp
popf
and
icebp
cli
xor
ja
xchg
movs
cmps
push
or
or
stc
lahf
mov
or
outs
cmp
seto
lea
jge
add
retf
mov
pusha
sbb
mov
ins
sahf
pop
add
iret
xor
jmp
lahf
sahf
jbe
and
push
mov
dec
aas
pop
sbb
xchg
lahf
bound
mov
push
imul
sbb
mov
outs
es
push
repnz
jo
xchg
cmp
mov
or
pop
jno
pop
dec
xchg
cmp
fs
xchg
cmp
loopne
out
ins
cwde
and
out
xchg
aaa
rcl
inc
add
aam
or
test
nop
ja
loopne
sub
xchg
cld
inc
push
inc
xchg
mov
in
hlt
xchg
xchg
cmp
jne
es
push
fdivr
fs
and
and
arpl
jge
xor
imul
sbb
mov
shl
ins
pop
pop
daa
popf
nop
daa
sub
jecxz
pop
test
mov
stos
bound
mov
fsubr
mov
in
cmp
es
data16
add
pop
loopne
inc
(bad)
sar
ret
pop
stos
jo
adc
loope
fst
mov
and
leave
mov
in
lea
cmp
enter
call
and
sub
push
push
call
sbb
lods
and
dec
add
mov
xchg
pop
mov
ins
pop
cmp
movs
mov
pcmpeqw
sar
push
adc
push
outs
adc
cli
(bad)
mov
and
gs
ja
mov
dec
sbb
test
ds
in
leave
push
jp
(bad)
sub
sbb
sbb
sub
adc
stc
inc
aad
add
inc
sub
cmp
test
iret
lods
pushf
xor
fstp
mov
mov
push
aam
lods
int
pop
adc
jbe
into
je
cmp
cmps
clc
add
(bad)
in
idiv
pop
rcr
rcr
sub
and
mov
and
mov
pop
sbb
and
out
mov
fcomp
jp
les
push
int3
push
sbb
mov
push
cmps
int3
push
mov
sahf
mov
leave
jge
outs
adc
stc
pop
sbb
or
adc
les
stos
push
aad
icebp
pop
lods
popa
repnz
dec
mul
imul
inc
mov
xchg
mov
(bad)
addr16
push
jecxz
push
gs
or
jge
dec
pusha
ins
nop
jno
fidivr
adc
xchg
pushf
int3
pop
daa
mov
shr
int
addr16
call
sbb
pop
jne
int
xchg
dec
pushf
std
jne
add
and
cmp
pop
sub
pusha
mov
jae
adc
inc
div
fidiv
loopne
and
in
or
stc
data16
mov
ss
push
popf
leave
enter
pop
dec
(bad)
dec
fidivr
sahf
aaa
mov
stc
ret
ror
add
repnz
aas
xchg
popa
inc
sbb
jle
ss
cli
sbb
clc
mov
rcr
xlat
outs
sbb
(bad)
cwde
mov
sbb
mov
add
int
cmps
scas
lock
and
cwde
movs
mov
cld
xor
(bad)
xchg
les
jo
xchg
jae
mov
pop
or
push
mov
test
sub
push
fs
cld
inc
into
and
add
stos
and
ss
push
and
and
sti
push
les
add
test
jbe
push
fs
mov
fisttp
cwde
push
fsubr
mov
xlat
mov
and
call
add
loopne
mov
aad
outs
jae
sub
leave
xor
mov
rol
gs
adc
leave
jnp
scas
je
xor
or
jmp
jno
mov
cld
jno
add
dec
push
ins
inc
sub
inc
sbb
cmps
out
dec
paddusw
mov
retf
loopne
(bad)
cmp
inc
cs
arpl
add
mov
test
rcr
call
enter
xor
inc
xor
addr16
cs
xchg
xchg
lds
fimul
daa
or
outs
mov
pushf
call
jle
pop
dec
pusha
rep
jae
add
inc
leave
xchg
mov
mov
clc
push
out
push
test
dec
loopne
stc
xor
jge
or
std
or
lea
pop
pop
in
jbe
adc
add
js
lods
je
jbe
and
(bad)
xor
xchg
push
dec
fst
hlt
sbb
mov
jg
imul
lock
push
imul
fs
retf
sbb
aaa
retf
into
push
jb
iret
push
cli
mov
(bad)
in
xor
push
jmp
into
loop
aas
push
mov
dec
mov
data16
jle
push
add
mov
sbb
aam
jle
push
jb
imul
(bad)
test
push
cli
jl
sub
test
mov
mov
jno
mov
loopne
and
sub
or
sar
aam
mov
loopne
jp
mov
xor
xor
aad
in
clc
mov
imul
cmc
sub
ror
scas
mov
jmp
push
fs
dec
jne
xchg
cdq
dec
pop
fstp
movs
mov
scas
mov
(bad)
(bad)
xchg
clc
xchg
imul
mov
pop
cs
or
cld
outs
jmp
test
mov
cmp
in
ret
cmp
adc
int
jge
test
inc
pop
imul
cmp
mov
mov
into
add
(bad)
xchg
mov
and
in
pop
imul
call
dec
lods
add
ret
outs
into
ja
iret
cmps
cmp
pop
inc
les
inc
sbb
jle
ss
xor
call
adc
test
jno
shr
jle
rcr
push
and
xchg
mov
rol
mov
cli
fistp
cmp
arpl
push
xor
test
adc
xor
fimul
jmp
mov
stc
out
das
test
push
xor
and
retf
data16
inc
jbe
cmc
fxch
out
addr16
xor
push
jo
jnp
js
loope
mov
xor
mov
pop
loop
es
jns
or
sbb
xchg
add
jo
adc
js
fisub
das
xlat
cdq
or
xchg
sbb
fisubr
jo
xor
stos
jmp
not
ror
bound
loope
sub
je
push
das
dec
add
clc
mov
loopne
out
inc
jb
xchg
xchg
movs
fisubr
xor
sub
jae
mov
adc
jnp
lds
mov
call
inc
movs
arpl
aad
xor
ret
fs
(bad)
in
mov
and
jae
inc
nop
lods
ret
mov
jne
adc
pop
jmp
pop
cs
push
out
out
dec
scas
fidiv
push
popa
ret
inc
add
and
dec
xchg
repz
cmc
test
cmps
stos
and
mov
inc
or
dec
inc
jbe
ror
push
jl
push
jge
pop
sar
cmps
push
movs
stos
mov
shl
stos
retf
or
cmp
inc
sar
fidivr
cld
dec
lods
or
bound
test
sub
sub
movs
in
mov
imul
cmp
ss
das
lds
(bad)
cdq
mov
into
jmp
push
in
add
add
ret
add
add
add
add
mov
das
fs
push
inc
fstp
add
push
add
mov
and
add
add
js
movs
add
loop
dec
mov
add
add
loopne
fcomp
jmp
jmp
cmp
sbb
jbe
and
xchg
iret
ja
test
inc
arpl
or
rol
dec
pop
add
clc
push
ret
js
adc
push
push
pop
(bad)
mov
sbb
mov
inc
sahf
lods
ss
mov
sub
sbb
xor
push
lock
outs
call
call
add
pop
jp
push
fs
push
ins
icebp
in
jecxz
push
sub
lahf
push
popa
dec
test
(bad)
lock
stc
fldln2
sar
push
pop
dec
dec
push
aaa
pop
and
add
jmp
adc
mov
dec
jle
inc
dec
test
mov
mov
test
out
jno
aad
mov
bound
ret
inc
add
lea
daa
jns
cs
push
pop
inc
pop
in
jo
dec
cmp
lock
adc
rol
or
add
mov
sbb
sahf
int
jg
cli
dec
clc
movs
cmp
mov
bound
mov
inc
push
jb
clc
jl
jns
je
cmp
ror
adc
int
movs
setbe
xor
mov
dec
test
jb
into
in
dec
(bad)
pop
lods
popf
mov
data16
int
mov
push
sub
(bad)
fisub
mov
mov
xor
mov
sub
xchg
mov
popf
leave
mov
shl
push
(bad)
mov
inc
std
movs
sbb
push
mov
in
lahf
add
push
xchg
fisub
repnz
sub
push
out
retf
out
and
mov
or
jb
cmc
iret
inc
shr
mov
cmp
mov
std
cdq
mov
push
push
and
mov
or
add
inc
js
sbb
into
sub
dec
push
push
mov
popf
test
mov
sub
movs
pop
cmp
jge
or
loopne
cmc
dec
sbb
(bad)
cmps
mov
sbb
(bad)
fbld
inc
add
js
add
jnp
mov
sbb
hlt
cmp
or
shr
cmps
xchg
xor
pop
mov
inc
stos
inc
or
dec
lea
popa
das
imul
xchg
repnz
xchg
push
movs
and
xchg
push
test
xchg
jo
scas
jo
fisub
imul
cmp
add
sbb
ss
test
aam
fstp
int
test
jne
mov
(bad)
lock
inc
adc
adc
or
(bad)
cmp
pushf
mov
cmp
into
mov
and
fmul
jle
jb
add
lods
fisttp
into
dec
sbb
sti
jo
xchg
dec
je
mov
pop
adc
call
int
sar
and
sbb
dec
sahf
sbb
repnz
or
cmp
fwait
gs
fs
dec
cmp
or
imul
aam
jecxz
jp
jne
outs
cmc
pop
out
ret
out
push
cmp
push
sub
mov
sbb
jo
popa
out
mov
or
and
sbb
and
xchg
xor
shr
cmp
push
push
popf
xchg
dec
xor
sbb
push
arpl
pop
jecxz
dec
add
xchg
imul
les
or
mov
push
or
push
aaa
dec
inc
fisttp
iret
mov
js
dec
cmp
dec
stos
adc
dec
dec
das
mov
imul
mov
push
add
ret
sub
xor
add
and
ins
adc
iret
fnsave
data16
test
adc
cmp
scas
movs
ret
lods
cwde
repz
mov
nop
mov
movs
and
jecxz
sbb
into
pop
dec
adc
lea
fistp
mov
or
pop
or
and
add
fwait
mov
mov
jne
jmp
loopne
mov
cdq
out
scas
adc
clc
cmp
movs
out
pop
nop
mov
push
shr
scas
cmp
in
sub
push
mov
ds
stos
ds
out
addr16
lods
adc
xor
xchg
or
pop
ds
sbb
cmps
cmps
arpl
aam
inc
mov
ficomp
add
fcom
push
dec
push
les
int3
or
ss
adc
inc
sub
adc
pop
jl
inc
in
fnsave
sar
js
hlt
lds
aas
jmp
or
cmps
in
rcl
lahf
call
cdq
shl
dec
push
icebp
jg
lods
dec
mov
sub
mov
out
jne
enter
mov
arpl
scas
xchg
push
adc
test
cmp
sub
pusha
xchg
mov
jne
mov
test
(bad)
and
xor
jecxz
push
ins
addr16
mov
push
movs
jb
in
inc
push
das
scas
rcl
cdq
lock
call
and
fimul
cmp
or
cmp
ins
(bad)
sub
pop
pushf
sbb
cmp
repz
add
xchg
call
popa
mov
sbb
nop
lods
js
or
fwait
pusha
shl
mov
dec
push
adc
jno
and
sbb
daa
ins
add
ins
or
xlat
outs
mov
out
xchg
sub
pop
jmp
or
out
outs
dec
fistp
inc
cmp
mov
bound
jae
add
jle
int
pop
dec
scas
jle
xchg
jo
movs
xchg
cld
lock
jnp
rcl
repz
pop
out
xchg
call
and
retf
repz
mov
ficom
push
int
pop
cmp
gs
pushf
mov
mov
or
xchg
call
xlat
sbb
mov
pop
pop
cmp
fisttp
add
mov
mov
out
movs
push
lea
mov
or
loope
pop
jp
mov
jl
and
icebp
pop
bound
ss
rol
aaa
jae
and
rcl
push
out
lock
adc
and
mov
stos
movs
mov
or
push
cmp
test
jae
and
test
cmp
ins
inc
aas
sbb
jns
test
call
pop
xor
out
jb
cdq
pop
inc
ret
push
jmp
sti
ins
mov
or
mov
adc
add
cmp
mov
jno
in
jle
and
pop
sub
cmc
sbb
pop
stos
mov
push
dec
popf
aaa
adc
sbb
loope
(bad)
adc
inc
jecxz
cmps
pop
push
dec
sbb
retf
fisubr
std
sbb
mov
mov
lea
scas
inc
das
inc
cmp
mov
jge
or
jno
or
sub
or
push
stos
sub
leave
lods
or
and
add
push
je
out
jle
pop
mov
mov
add
bound
pop
mov
push
or
dec
cmps
mov
xor
(bad)
ss
jno
push
or
dec
mov
jge
push
sub
jmp
lods
jmp
xor
aad
push
lods
push
mov
or
in
repz
movs
pop
push
dec
jmp
mov
mov
sbb
scas
lahf
add
mov
(bad)
xchg
xlat
daa
adc
push
(bad)
mov
lods
sti
retf
xor
rol
enter
mov
ret
or
dec
cdq
or
fbstp
dec
jle
xchg
pop
popf
xor
add
adc
shl
das
mov
ret
push
inc
dec
daa
cs
jns
sahf
outs
cmps
out
outs
imul
jne
push
dec
out
inc
add
test
add
shr
mov
mov
clc
or
jae
imul
mov
adc
lods
sub
jecxz
test
popa
arpl
sub
jnp
push
iret
das
cdq
dec
xor
test
xor
sti
jne
popa
sbb
sbb
in
adc
mov
jge
push
xchg
daa
arpl
push
mov
sti
adc
out
push
mov
cmp
adc
mov
js
mov
and
retf
lahf
mov
sub
pop
adc
push
pop
jno
xor
icebp
xchg
das
int3
scas
stos
xor
repz
mov
imul
rol
mov
mov
sbb
icebp
std
daa
lahf
fstp
xor
loope
sahf
cwde
xchg
or
outs
test
(bad)
mov
xchg
dec
sub
ins
push
mov
add
leave
movs
or
icebp
adc
jb
jnp
xor
xchg
jge
xchg
loop
dec
inc
xor
inc
xor
xchg
(bad)
pop
cld
inc
pop
icebp
mov
shl
push
out
fistp
enter
sub
xchg
xor
jle
fdiv
popa
push
neg
sub
adc
sar
inc
add
jmp
dec
loopne
(bad)
jl
rcr
jge
or
push
rol
cdq
jbe
pop
cmp
sub
ja
jle
dec
pop
imul
push
jns
scas
in
pop
cmc
push
sahf
ins
mov
lods
pop
mov
add
xor
mov
mov
lock
add
popa
jmp
fst
not
pop
push
sbb
pop
jmp
push
xor
(bad)
push
mov
or
lock
xchg
(bad)
xchg
adc
push
mov
or
jle
out
add
and
cs
(bad)
adc
xchg
fcmovb
or
(bad)
pop
xchg
sbb
inc
xchg
test
enter
jbe
je
mov
cmp
cmps
add
adc
mov
dec
adc
mov
add
in
dec
mov
stos
xchg
mov
lods
cmp
imul
retf
and
dec
mov
lock
push
pop
or
xchg
or
inc
cmps
mov
pusha
push
xchg
aas
ds
icebp
rol
add
and
jg
adc
(bad)
cmp
jns
ret
outs
mov
jae
mov
pushf
mov
jne
sub
js
mov
in
mov
jnp
mov
cmp
sub
and
fdiv
outs
in
xor
(bad)
adc
aad
movs
or
add
add
sbb
add
add
add
ret
add
add
add
inc
add
add
cmp
add
add
outs
int3
add
add
(bad)
loop
xchg
add
je
add
and
add
add
add
add
jl
cmc
test
mov
add
add
add
data16
add
add
add
add
inc
add
add
add
pop
add
add
add
add
add
add
add
add
add
add
fadd
add
add
add
cmp
add
outs
add
add
pop
sub
xchg
cmp
inc
enter
cmp
sub
movs
or
loope
imul
sub
mov
inc
movs
in
mov
xor
sub
jge
cwde
retf
adc
mov
mov
push
fimul
mov
xor
jns
add
aas
loop
aas
xlat
mov
cwde
(bad)
jmp
les
out
adc
adc
sbb
add
clc
adc
cmp
cmp
mov
or
sahf
stos
add
inc
inc
in
fidiv
inc
dec
inc
mov
mov
stos
add
push
xchg
pop
xlat
repz
jae
push
mov
add
lds
pusha
in
xchg
(bad)
fisub
add
pop
scas
retf
xchg
fdiv
ins
(bad)
push
push
in
mov
scas
xlat
jge
(bad)
movs
scas
stc
out
sahf
or
lds
outs
jae
inc
sub
add
in
cmps
loop
jl
outs
fisttp
and
inc
mov
add
in
or
sbb
xchg
sub
mov
xchg
mov
clc
mov
sub
dec
inc
(bad)
je
rol
fwait
xchg
cmp
ins
daa
push
push
inc
sar
mov
pop
ds
add
retf
xor
mov
dec
in
lods
xchg
mov
or
cmps
retf
movs
mov
repz
sub
push
enter
push
(bad)
not
stos
or
aas
add
(bad)
cs
imul
pop
push
pop
clc
js
test
xchg
adc
add
mov
pushf
fimul
cwde
aam
scas
jmp
lods
sbb
and
push
xchg
fcomp
xchg
mov
xor
out
lahf
adc
xchg
lds
adc
cli
cli
enter
enter
adc
mul
mov
mov
sbb
cdq
or
adc
xor
rcr
push
adc
popa
xor
fild
jbe
in
xchg
not
and
mov
in
sbb
(bad)
pop
push
aam
xchg
mov
mov
adc
xchg
call
mov
xor
rcr
mov
mov
aas
dec
out
xchg
ror
(bad)
(bad)
je
pop
jne
xchg
cmp
dec
jmp
out
adc
mov
pop
neg
movs
inc
out
or
imul
(bad)
pop
(bad)
xlat
ror
hlt
pop
add
aad
outs
lahf
inc
adc
push
push
mov
lock
add
push
nop
(bad)
repz
dec
lock
in
pop
aad
adc
sub
je
mov
mov
jns
sbb
fucomip
xor
test
and
fs
or
sbb
mov
and
retf
hlt
push
neg
rol
int3
inc
sub
xchg
loopne
sar
(bad)
inc
std
cdq
cmp
or
xlat
lea
mov
mov
add
aaa
test
inc
das
outs
test
shl
dec
mov
out
into
jno
inc
mov
jmp
pop
cld
mov
pop
out
pcmpgtw
xor
loope
dec
xchg
xlat
jno
test
movs
mul
pop
xor
xor
pop
int3
sbb
pop
push
ss
lahf
bound
fist
xor
loope
mov
shl
in
fwait
xor
mov
neg
pop
loop
push
aam
in
pop
scas
pop
outs
stos
jp
imul
scas
pop
sub
add
popa
outs
xor
ret
shr
pop
or
ret
xchg
xor
test
sbb
jbe
or
push
pop
inc
icebp
call
rcl
rcl
dec
and
outs
sbb
jmp
mov
rol
outs
or
pop
test
rcl
add
in
mov
retf
pop
(bad)
jb
cmp
(bad)
fimul
imul
jo
sub
rol
data16
xchg
(bad)
mul
inc
sbb
add
jp
xor
outs
repnz
rcl
mov
dec
loop
(bad)
retf
or
xchg
in
pop
test
sbb
jno
add
mov
aad
gs
inc
add
jge
jno
xchg
ins
push
sbb
pop
das
fdivr
out
scas
mov
lds
clc
sub
das
dec
jecxz
out
out
cmp
mov
ds
les
push
sub
jmp
sub
aam
sbb
or
adc
xor
outs
jg
loopne
and
(bad)
dec
cdq
cs
sysexit
in
jp
cmp
pop
pop
pop
loopne
loopne
or
movs
push
inc
jae
xchg
(bad)
and
cmp
or
xor
sti
xchg
push
popf
inc
pushf
je
iret
pop
mov
sub
sbb
inc
or
mov
jl
lods
inc
mov
sub
mov
ja
push
or
pop
sub
sbb
out
loope
dec
pop
dec
aas
sbb
xchg
xchg
mov
dec
ffreep
jns
mov
mov
and
xlat
jmp
push
rol
movs
cmp
push
inc
fisubr
scas
js
stos
add
arpl
jnp
int
sbb
inc
test
rcr
sahf
sub
or
xor
sub
(bad)
sti
repnz
inc
fbstp
rcr
pushf
outs
add
mov
lods
imul
retf
stos
sar
dec
fistp
or
rcl
in
and
mulps
jo
pop
adc
dec
ja
xchg
inc
outs
neg
xchg
stos
xor
call
imul
fistp
xchg
hlt
jl
xor
data16
lds
js
cmp
pop
adc
ins
out
nop
push
sti
xlat
mov
fdivrp
push
test
(bad)
xchg
mov
jb
or
ss
jmp
adc
jb
inc
das
popf
ss
mov
xlat
dec
push
je
inc
and
rcr
popf
inc
enter
xor
inc
push
push
sbb
adc
jmp
add
lahf
xor
mov
adc
test
loope
and
jb
mov
je
cmps
mov
xchg
inc
xor
xchg
pop
jp
adc
mov
push
call
xor
pop
xchg
mov
xor
dec
gs
push
dec
push
push
lock
xchg
cwde
fdiv
popf
clc
inc
add
imul
fwait
ds
call
inc
les
cmp
test
rol
xchg
xchg
and
out
out
cmp
jo
out
add
movs
mov
add
pop
adc
(bad)
lahf
jns
ins
sar
lods
(bad)
ins
jg
frstor
xor
jmp
xchg
aad
or
inc
and
retf
cwde
sbb
sti
cmp
adc
sbb
and
mov
jmp
sbb
shl
pop
lods
ret
pop
or
sbb
sub
ficom
jb
add
push
push
inc
xchg
cmp
mov
fdivr
or
xor
inc
xchg
loop
ds
fdivr
ret
test
ftst
ror
push
fs
in
xlat
mov
xor
das
push
shl
test
gs
pusha
loopne
ret
ds
and
mov
xchg
cmp
mov
push
adc
adc
je
aaa
jnp
ds
cmc
inc
test
neg
jecxz
pushf
(bad)
mov
or
bound
inc
mov
adc
aad
test
sbb
int
cmp
cmp
mov
test
mov
leave
jne
rcr
adc
sub
xchg
jmp
bound
xor
push
and
out
or
pop
data16
and
addr16
sub
inc
cdq
out
repnz
icebp
shl
mov
(bad)
fbld
retf
push
xlat
imul
cmp
mov
xor
in
js
inc
out
into
cmps
mov
cld
xor
ds
inc
pop
int
cmp
jne
les
fadd
aas
shl
mov
in
and
push
jge
pushf
push
stos
add
or
xor
test
add
and
fs
fidivr
pop
cdq
xchg
push
out
sub
sbb
sub
jo
outs
xchg
out
ins
mov
aaa
in
in
pushf
cmps
scas
(bad)
aam
cmp
in
ret
xchg
mov
cmp
and
push
mov
ret
mov
dec
pop
add
push
mov
out
stc
add
push
stos
imul
adc
in
repnz
mov
movs
cdq
popa
add
cld
cli
cmp
aad
fcomp
or
pop
test
(bad)
xchg
pop
into
into
mov
or
sbb
je
mov
inc
or
sti
push
fwait
sbb
retf
mov
sbb
stos
adc
dec
cdq
cmp
ret
dec
xor
cmp
jle
stos
leave
call
arpl
mov
xor
mov
in
inc
jae
mov
jmp
jle
or
sbb
mov
sbb
adc
dec
(bad)
mov
cmp
pop
pop
dec
shl
mov
pusha
cmp
test
ror
loope
int3
pop
loope
aas
xchg
xchg
and
dec
out
sub
pop
dec
push
pop
adc
xor
inc
push
xor
push
ds
call
sbb
clc
std
push
mov
fcomp
imul
aas
ins
(bad)
(bad)
mov
addr16
or
jae
test
(bad)
(bad)
cmp
sbb
call
ret
mov
(bad)
push
cs
push
scas
push
inc
gs
xor
ins
jmp
inc
mov
mov
and
mov
(bad)
es
dec
fisub
jbe
bound
(bad)
sbb
sbb
or
mov
cmp
loop
pop
mov
inc
mov
mov
hlt
iret
rcl
(bad)
xlat
sub
inc
pop
push
dec
mov
fdiv
xor
or
inc
sub
mov
and
and
pop
fmulp
inc
fisub
jnp
movs
fwait
add
sub
cmp
sbb
ins
xchg
out
cmp
ins
pop
mov
mov
outs
and
sar
mov
mov
lods
push
adc
repz
out
sbb
jmp
and
adc
xchg
icebp
mov
and
adc
jo
lahf
(bad)
ja
xchg
imul
add
add
add
add
add
stos
cdq
or
add
add
add
add
add
add
mov
add
add
xchg
add
add
xchg
add
and
xchg
add
add
add
jp
add
iret
add
outs
add
add
jae
add
add
add
add
sub
add
repz
add
add
std
out
sbb
add
pop
mov
jae
pop
sahf
mov
addr16
push
movs
cmps
sub
and
cli
xchg
cli
xor
xchg
xor
xor
mov
adc
test
adc
daa
mov
and
ror
stos
cmps
mov
adc
jge
or
(bad)
mov
adc
xor
stc
jmp
ret
mov
mov
ret
mov
cmps
push
(bad)
jmp
test
in
outs
xchg
xor
or
dec
mov
rcl
fsubr
add
scas
jmp
mov
dec
and
je
adc
jno
sub
xor
add
inc
lods
sbb
pop
cmc
adc
pop
sub
mov
rcl
xchg
mov
shr
mov
push
xchg
xlat
inc
xchg
dec
(bad)
ja
and
sbb
mov
push
hlt
arpl
(bad)
fcmove
xchg
adc
stos
mov
adc
jmp
xor
sbb
hlt
or
popa
mul
mov
js
mov
scas
push
icebp
(bad)
mov
dec
fcompp
mov
pop
mov
idiv
mov
xor
sub
xor
add
dec
cmc
jl
pop
or
mov
je
mov
mov
add
int
cmp
cmp
nop
or
ja
xlat
loope
sbb
add
stc
(bad)
sar
imul
add
popa
jae
add
pop
xor
sub
test
mov
inc
add
mov
cmp
mov
xor
and
mov
or
mov
aaa
mov
add
push
add
and
mov
cli
xchg
test
cdq
lods
out
nop
mov
mov
pop
pop
loope
mov
cpuid
out
sub
mov
add
push
or
adc
jge
or
out
xchg
dec
fwait
cmp
cdq
dec
shl
cs
mov
or
adc
das
add
pop
int3
inc
lock
aad
pop
add
jg
push
ins
lods
sar
mov
or
xchg
and
cdq
fst
iret
iret
xor
and
in
loop
xchg
fadd
inc
dec
xchg
and
add
and
jae
les
bnd
adc
inc
xor
sbb
and
ja
pusha
adc
push
push
loop
out
cmp
cmp
push
or
ror
xchg
or
aam
call
rcl
std
outs
test
lds
bound
mov
fs
out
mov
jno
xchg
into
jo
jmp
(bad)
xchg
movs
mov
xor
les
and
mov
shl
ret
in
jnp
dec
pop
pusha
push
jecxz
mov
mov
xlat
xor
and
dec
sti
dec
test
out
add
cwde
retf
and
jle
dec
sbb
add
or
mov
enter
xchg
call
daa
adc
inc
and
jne
ror
loope
add
mov
push
jns
ja
dec
xor
pusha
pop
jnp
inc
out
stc
sub
push
xor
lock
popa
jne
out
mov
pop
sub
movs
outs
shl
clc
leave
jmp
jns
adc
jg
int3
bound
add
(bad)
xor
jg
mov
or
fmul
sahf
lahf
cmps
mov
hlt
call
cwde
push
inc
in
out
scas
adc
ficomp
or
shr
leave
sub
iret
pop
pop
mov
add
or
(bad)
pop
mov
pop
jns
dec
in
ins
sbb
or
pushf
push
jp
add
mov
fsubr
mov
and
push
xchg
daa
inc
inc
xchg
mul
stos
push
xchg
pusha
out
movs
dec
and
clc
cdq
sbb
sbb
(bad)
loop
js
cli
ja
jb
or
add
inc
mov
(bad)
ficom
add
fild
(bad)
jmp
shr
mov
fisubr
xchg
js
sbb
xor
mov
ret
ret
popa
data16
ret
push
into
js
pop
and
clc
lock
cmp
cmp
arpl
inc
mov
loope
mov
pop
adc
dec
(bad)
mov
adc
jmp
mov
fidivr
call
cmp
mov
pop
out
cmp
mov
xchg
push
inc
sti
xchg
mov
jge
dec
mul
ret
mov
xchg
xlat
adc
mov
enter
jmp
mov
fistp
dec
movs
and
mov
jmp
mov
aaa
mov
jae
mov
(bad)
repnz
jmp
movs
sub
xchg
lahf
mov
xchg
jno
mov
in
mov
jecxz
push
popf
cmp
push
push
adc
pop
loop
mov
sub
movs
mov
add
mov
mov
fwait
add
fnstenv
cmps
nop
sub
push
mov
test
xchg
fdiv
ficom
or
xchg
xchg
loop
add
add
mov
inc
push
rol
ror
add
mov
sbb
inc
jle
fsubp
lahf
or
popa
ret
bound
pusha
cmovae
adc
cdq
xchg
xchg
jb
push
pop
ds
push
and
ins
cld
and
xor
(bad)
addr16
mov
retf
out
sbb
mov
call
dec
mov
and
mov
xor
gs
jb
add
popa
(bad)
fmul
or
cld
nop
retf
jbe
pop
push
xchg
cmc
add
enter
stos
fild
cmp
out
test
cmp
idiv
mov
xrstor
lods
jl
cld
pusha
test
fistp
or
inc
push
ret
or
sar
push
inc
jns
ins
pop
mov
gs
pop
add
xchg
inc
lock
push
jecxz
push
mov
pop
sti
cmp
cli
push
std
aam
sub
cmc
cmps
stos
dec
mov
dec
enter
fst
je
arpl
dec
cld
cli
adc
and
mov
retf
and
mov
pop
jmp
in
dec
push
ficom
push
clc
push
stos
xchg
xor
mov
cdq
push
(bad)
(bad)
push
fs
cwde
pop
lock
mov
dec
jo
add
test
mov
retf
fnstcw
ins
xor
fiadd
andnps
retf
pop
cmp
ds
cmp
test
mov
sbb
int3
jmp
pushf
lahf
and
jecxz
mov
scas
cld
(bad)
cmc
xchg
sbb
mov
dec
add
cld
cwde
fild
repnz
int
push
xor
rcl
lock
cmp
cmp
imul
and
mov
test
stos
adc
adc
fs
inc
aas
shr
pop
xor
stos
mov
jl
mov
in
xchg
sbb
inc
inc
push
jl
(bad)
push
ror
push
out
test
and
or
or
test
cmps
stos
push
adc
aad
jne
jns
push
jnp
aaa
aas
outs
movs
or
fidivr
push
pop
fbstp
jne
sbb
aaa
jmp
mov
daa
ret
lahf
pop
dec
not
inc
sub
fnstsw
lea
xor
pusha
jnp
mov
push
or
push
and
and
fst
mov
int3
data16
dec
add
lock
jl
outs
call
imul
push
inc
clc
and
ds
mov
cwde
das
dec
push
xchg
and
push
sub
sbb
sub
add
fcomp
sbb
jo
mov
and
cmps
add
add
fsub
ins
add
int
xor
hlt
cmp
(bad)
int3
push
(bad)
call
popa
dec
or
iret
fs
retf
aaa
xchg
push
xchg
iret
fnstcw
pop
pushf
ins
adc
xor
pop
mov
enter
loope
daa
lea
shl
add
push
cwde
add
scas
movzx
mov
sub
mov
dec
fsubr
mov
sub
sub
push
add
push
imul
pop
nop
inc
adc
daa
or
add
pusha
mov
mov
pop
stc
dec
xchg
and
sub
cmp
xchg
and
xchg
pop
jecxz
cmps
mov
jmp
cmps
fcomp
push
sahf
push
add
mov
xor
jp
pop
in
inc
fptan
cmp
into
sahf
sbb
mov
outs
lds
nop
mov
xchg
mov
mov
inc
cmc
cdq
push
test
push
dec
jno
mov
call
pop
icebp
rcl
aam
sbb
inc
sbb
repnz
pop
adc
ret
and
pop
sub
sbb
outs
ja
pusha
outs
iret
addr16
xchg
enter
mov
pop
sub
sbb
addr16
inc
jmp
imul
in
ss
addr16
mov
xor
add
mov
repnz
rcl
pop
pusha
sahf
adc
inc
loope
pop
mov
or
push
pushf
mov
push
lock
xchg
stc
and
fsubr
xchg
cmps
scas
and
(bad)
gs
clc
pop
scas
cs
inc
fst
dec
dec
and
dec
out
js
gs
int3
and
mov
mov
dec
in
xor
aas
imul
jg
cli
pop
or
leave
addr16
int3
bound
test
fcom
std
and
dec
push
pop
cwde
dec
pop
test
bound
xchg
sub
test
imul
aad
movs
push
adc
push
xor
adc
xor
pop
adc
adc
mov
fidiv
cmc
push
(bad)
int
pop
div
jmp
pushf
mov
adc
cwde
popa
ss
pop
ds
pop
imul
fwait
mov
popa
fwait
enter
popf
xchg
pop
add
add
cmp
pop
hlt
rol
mov
leave
mov
jge
mov
dec
ret
push
enter
add
mov
jns
and
clc
inc
gs
xor
ins
cmp
(bad)
cmp
inc
out
cmc
mov
or
xchg
(bad)
es
mov
pop
test
jnp
cli
jae
(bad)
out
or
add
pop
add
mov
add
jo
add
add
add
aas
add
test
add
add
add
add
add
jno
add
repz
add
add
add
cld
add
add
add
add
enter
add
add
pop
add
add
add
add
add
add
enter
add
lock
add
add
add
push
sbb
inc
xchg
add
add
lock
add
mov
add
cmp
add
add
add
jl
add
add
add
add
add
add
adc
add
jae
add
add
sub
icebp
add
add
add
cmp
add
add
xchg
add
add
lock
jg
add
pop
add
add
add
adc
ins
je
ja
xchg
mov
jns
in
fild
mov
sub
adc
xor
fdiv
jns
daa
fisttp
jmp
jno
das
mov
shl
popf
xchg
cdq
fsub
test
mov
sub
iret
ins
mov
push
mov
dec
fisubr
aaa
or
outs
push
jno
mov
sub
dec
loopne
lods
mov
shr
inc
inc
fiadd
nop
push
push
cmps
ds
xor
ins
fild
or
add
and
imul
stos
push
pop
dec
retf
das
mov
fadd
(bad)
jecxz
cli
jnp
push
aas
jmp
sub
loop
xor
fwait
enter
mov
inc
add
loop
int3
or
pop
stos
mov
(bad)
rol
pop
jmp
popa
adc
ja
cli
xchg
jl
loope
aas
outs
or
sti
mov
sbb
inc
adc
fwait
movs
mov
jp
push
adc
idiv
adc
fst
div
jl
sub
sbb
pop
pop
push
sub
jecxz
mov
lds
dec
mov
mov
fld
pop
clc
mov
shl
mov
cmp
mov
fwait
int
inc
mov
add
lds
in
xor
jb
mov
cld
mov
jmp
pop
sbb
icebp
push
daa
jns
lods
xor
inc
and
jp
outs
js
fmulp
add
mov
shr
xor
mov
adc
test
adc
mov
dec
push
mov
out
or
mov
test
test
push
mov
scas
xor
lds
or
cmp
int
push
or
outs
or
pop
test
or
adc
pop
mov
push
mov
in
pushf
jo
sti
cli
ins
call
arpl
mov
and
xor
fidivr
or
out
pop
cmp
cmp
add
dec
std
cmp
gs
jl
fwait
push
std
jmp
pushf
test
push
gs
(bad)
fprem1
add
jle
jo
ins
mov
mov
cld
jb
jl
sbb
sbb
push
sbb
and
popf
mov
cdq
xchg
push
or
mov
pop
leave
ja
retf
push
jbe
out
mov
add
out
jnp
fist
pop
popa
out
inc
aam
mov
into
adc
xchg
sub
sbb
jp
jnp
mov
pop
pusha
out
aam
popa
aam
loope
sub
xchg
ret
scas
or
adc
cli
js
out
cmp
std
outs
push
gs
mov
sbb
push
mov
xchg
inc
jae
push
ror
ret
mov
inc
inc
mov
repnz
and
adc
shl
faddp
push
add
jle
movs
jo
popa
or
and
sbb
stos
cmc
cld
adc
pop
jg
cdq
sbb
xor
aam
push
ins
inc
outs
mov
nop
push
jmp
jmp
add
mov
sbb
sub
add
push
cmp
in
mov
aas
adc
popf
test
retf
mov
mov
imul
pusha
daa
in
mov
neg
mov
out
or
xchg
bound
addr16
rol
rcr
mov
sub
add
es
lahf
add
sub
data16
jae
inc
adc
addr16
lods
jns
push
fild
jmp
test
bound
push
and
rol
mov
out
xchg
out
call
push
add
ds
(bad)
lahf
add
cli
data16
jno
mov
cmps
add
into
punpcklbw
inc
inc
jmp
xor
sub
xchg
adc
daa
sub
iret
mov
add
outs
mov
jnp
pop
pop
popf
aaa
iret
out
cli
iret
or
cmc
pop
jae
mov
dec
sbb
je
loop
dec
fstp
ficomp
idiv
stos
popf
cmp
mov
dec
cmp
sbb
adc
dec
outs
sar
std
lea
lahf
stc
dec
sub
mov
shl
push
inc
jb
lock
push
inc
inc
sub
or
enter
mov
imul
sahf
movs
bound
mov
dec
xor
mov
out
sbb
pop
movs
mov
inc
xor
lahf
mov
(bad)
pop
cmp
sbb
cmps
aaa
pushf
lods
js
adc
aaa
out
and
data16
rcr
mov
adc
mov
dec
sar
pop
cld
dec
fst
inc
retf
mov
sbb
inc
xchg
sbb
add
mov
in
push
xlat
dec
scas
nop
icebp
inc
jbe
jo
out
pop
aaa
sub
fnstenv
jo
add
inc
jl
jmp
cmp
dec
and
scas
out
pusha
pop
bound
fidivr
js
dec
sub
and
adc
adc
loope
popa
inc
inc
xchg
or
cmc
push
or
(bad)
das
fdivr
call
add
out
retf
call
adc
push
cld
dec
(bad)
jp
out
inc
hlt
add
adc
push
sbb
or
xchg
jbe
(bad)
sti
cmp
scas
lea
xor
fnstsw
mov
xor
arpl
cld
pop
fcos
mov
cli
enter
inc
inc
inc
std
xchg
rcl
imul
idiv
pop
or
es
test
dec
movs
into
jns
test
jno
outs
push
dec
or
cwde
rol
xchg
mov
cmp
je
pop
cmp
jno
(bad)
dec
mov
in
les
adc
sbb
push
inc
dec
lock
inc
cmp
sti
or
mov
sbb
mov
jbe
xchg
cmc
fisub
pop
shl
outs
xor
sbb
pop
push
sahf
mov
jg
dec
or
jge
shl
pop
mov
jae
xchg
adc
test
mov
dec
inc
jb
adc
dec
xor
pop
repz
cwde
inc
jns
jmp
ins
xchg
add
popf
pop
xchg
rol
(bad)
xor
fist
cwde
xchg
jne
push
mov
sbb
xchg
retf
popf
enter
jo
fcmovu
std
fisubr
dec
jns
stc
pop
rcl
ins
jle
outs
stc
popf
jl
ins
inc
mov
push
movs
or
xor
push
fdivrp
sub
push
js
xchg
into
mov
mov
cmps
add
cmp
addr16
jno
aad
popa
lds
into
dec
pop
mov
cdq
es
mov
inc
sub
ins
shr
idiv
mov
out
mov
dec
cmps
push
cwde
jb
das
icebp
mov
clc
jnp
sub
or
push
test
outs
mov
mov
sub
xchg
jae
xlat
aam
pushf
sub
xchg
dec
jge
inc
xchg
push
adc
cld
aas
daa
(bad)
sub
ror
jns
dec
jb
data16
and
mov
add
retf
in
dec
fisttp
(bad)
mov
and
and
mov
sub
mov
stos
xchg
sub
and
mov
mov
and
and
mov
xchg
push
retf
jno
xchg
movs
into
adc
dec
cmp
pop
outs
adc
sub
out
nop
test
adc
mov
daa
add
aaa
pop
sti
push
in
mov
dec
cmp
mov
ins
movs
mov
or
lock
ss
xchg
lods
lods
stc
js
jmp
or
fcomp
mov
or
adc
sub
xor
jecxz
cmp
mov
ficomp
cmp
lds
mov
lods
inc
pop
cwde
dec
push
jmp
add
mov
jmp
mov
sub
or
cmps
xor
std
out
and
arpl
scas
test
cmc
call
mov
mov
mov
xchg
fldlg2
imul
dec
mov
scas
xor
jnp
sbb
jae
cmps
sub
fimul
das
push
shl
fucomp
mov
outs
les
in
in
adc
push
fbstp
lock
std
fimul
inc
ret
xchg
jne
lds
xchg
loop
adc
or
les
fstp
push
xchg
fs
mov
xor
dec
fsubr
in
dec
test
cld
adc
push
cld
push
pop
in
xchg
inc
push
add
xor
rcl
or
dec
je
push
out
jl
aad
jnp
lods
mov
add
push
imul
jbe
jno
mov
sub
and
mov
jmp
fidiv
mov
add
inc
aas
add
fiadd
dec
cmps
ret
pop
jae
xchg
sub
neg
sub
stos
and
jmp
ror
pop
out
xchg
xchg
xchg
mov
es
aam
mov
xor
mov
cmp
adc
iret
pop
shl
jmp
popa
dec
pop
and
cld
test
(bad)
pop
or
cmp
addr16
sbb
xor
mov
xor
mov
daa
mov
out
mov
jo
sbb
nop
test
rcr
or
call
pusha
jo
sahf
and
adc
(bad)
mov
or
inc
ret
imul
scas
ss
js
js
out
dec
mov
fst
arpl
mov
(bad)
sahf
in
repnz
fs
movs
ss
jae
jp
jbe
scas
xor
or
pop
shl
push
aaa
mov
mov
jp
(bad)
std
xor
retf
jb
xchg
hlt
mov
add
gs
stc
(bad)
sbb
and
or
xlat
movs
pop
mov
repnz
out
xchg
ror
jno
test
lahf
loope
inc
jle
cmp
test
sbb
xchg
stos
(bad)
jge
mov
jecxz
mov
sub
xchg
ins
cdq
dec
movlps
xor
inc
push
stos
icebp
and
dec
jbe
scas
cmps
pop
jb
fdivr
loop
sbb
loopne
xchg
sbb
shl
cmps
xchg
mov
push
xor
outs
jg
and
gs
or
call
loope
stos
out
and
sbb
fdivr
std
js
stc
sbb
push
sub
cli
add
and
cmovbe
dec
bound
pop
xor
jg
retf
mov
sbb
popw
jmp
mov
add
adc
test
add
mov
add
add
add
add
add
add
add
add
add
add
fadd
add
xlat
add
add
add
add
xchg
add
add
cld
add
add
sub
add
add
dec
add
add
jg
add
add
add
add
add
mov
add
add
add
std
add
int3
add
mov
loope
scas
add
add
add
add
add
sub
repz
add
add
inc
add
inc
push
add
add
jne
mov
add
add
add
add
add
add
add
add
add
add
add
push
add
add
stc
add
out
aad
add
add
add
add
add
add
add
push
add
add
add
add
add
add
add
add
and
out
add
pop
add
add
dec
add
mov
add
add
int
add
add
outs
add
add
add
jecxz
add
mov
add
sbb
test
mov
fadd
add
add
dec
add
add
push
add
loop
add
add
add
xchg
add
push
add
add
add
add
add
push
add
add
add
push
add
add
add
add
add
mov
add
add
add
cmc
add
and
add
add
add
add
xchg
movs
cmp
retf
add
add
add
add
add
add
rcr
add
add
add
add
sldt
add
add
rol
add
add
add
dec
add
add
add
add
fiadd
movs
add
push
inc
add
mov
add
or
add
add
add
mov
add
push
jo
add
add
add
add
add
jne
add
or
add
inc
add
cmps
add
add
add
add
and
add
add
add
add
add
add
add
xchg
add
add
push
add
add
add
out
jae
inc
aaa
mov
mov
test
pop
daa
loop
out
cmps
mov
xchg
les
loope
enter
or
fnstenv
outs
jne
adc
pop
inc
arpl
cmp
lods
inc
push
sub
adc
mov
fwait
into
dec
ins
call
aaa
shl
push
idiv
inc
xchg
or
xlat
sbb
xchg
stc
shr
clc
aam
sbb
mov
add
or
lea
dec
adc
outs
bound
sbb
mov
push
xchg
outs
sbb
inc
cld
das
out
pop
jmp
addr16
scas
das
mov
fist
mov
and
mov
push
sub
sahf
add
cmp
stos
movs
out
sub
loop
or
lods
stos
mov
scas
or
xchg
add
ja
adc
fcmovu
mov
cmps
fadd
adc
xchg
xchg
test
add
xor
dec
scas
and
cmp
dec
hlt
test
xchg
enter
jmp
cmp
add
adc
out
(bad)
push
jmp
dec
imul
lds
ja
test
push
mov
mov
pusha
jg
hlt
jecxz
cld
push
or
and
xor
cli
inc
push
idiv
or
jge
add
(bad)
neg
inc
pop
sub
imul
xor
(bad)
cli
sub
(bad)
cmps
int
daa
pusha
shl
not
mov
adc
aad
add
and
inc
jnp
and
repnz
mov
push
les
(bad)
retf
dec
xor
sub
push
test
ins
sub
fidivr
ret
repnz
ds
mov
std
mov
ror
adc
push
and
push
ror
loop
(bad)
cdq
mov
add
jecxz
or
hlt
and
ins
mov
(bad)
pusha
inc
shl
out
add
dec
gs
arpl
cmp
mov
mov
mov
cmp
stos
in
adc
neg
out
mov
loop
loopne
add
iret
xchg
nop
ss
mov
imul
aas
sar
aad
xchg
idiv
push
fnstenv
add
lock
mov
dec
faddp
inc
loopne
adc
in
dec
mov
add
sub
mov
sub
jg
push
ins
add
cmp
adc
(bad)
pop
not
cld
ret
dec
inc
jmp
das
add
loope
pop
or
or
or
pop
loop
out
sub
or
bound
add
mov
call
dec
dec
scas
iret
xor
call
sar
xlat
fwait
fwait
add
add
(bad)
daa
cmp
aam
cmp
jecxz
pop
call
xor
mov
pop
or
inc
jo
jp
cld
push
and
pop
idiv
outs
jo
dec
pusha
xchg
add
add
iret
retf
push
out
mov
scas
mov
dec
outs
sub
cmps
dec
mov
aam
sbb
mov
pop
push
cli
pop
add
aam
sahf
je
out
repz
mov
fisub
fld
mov
cmc
sub
scas
fisubr
push
cmp
mov
or
mov
or
fnsave
xor
shl
push
imul
outs
push
inc
cld
jge
les
in
adc
and
movs
jae
lea
adc
cli
dec
clc
fdivr
scas
and
adc
fild
pusha
aaa
sub
outs
mov
loop
mov
jb
pusha
int
(bad)
outs
jae
sahf
std
push
sar
xor
sbb
gs
and
push
pop
sub
sahf
or
pop
cmp
push
retf
gs
cdq
sahf
and
dec
adc
jg
mov
fdiv
aad
fcom
mov
and
dec
das
cmps
(bad)
pop
(bad)
movs
ss
xchg
cs
mov
nop
pop
icebp
dec
or
pop
mov
(bad)
out
mov
pop
jb
lods
daa
push
jnp
or
(bad)
pop
dec
sub
shl
push
popf
sub
test
mov
mov
ret
mov
cmp
pop
xchg
dec
mov
call
outs
mov
sub
xlat
es
mov
or
clc
pop
mov
cmp
and
and
test
fidiv
popa
xchg
stc
stos
sbb
xor
pop
push
add
in
and
push
dec
in
pushf
in
pushf
dec
std
fadd
sub
pop
pop
dec
retf
inc
std
add
fmul
dec
add
ret
repnz
jecxz
or
sbb
mov
mov
dec
(bad)
je
mov
(bad)
sbb
push
xor
pop
outs
xor
jle
push
leave
adc
(bad)
pusha
dec
pop
sbb
sbb
addr16
loop
sbb
mov
push
sub
mov
outs
aas
mov
mov
push
stos
or
push
imul
mov
loopne
mov
into
(bad)
aam
xor
fbstp
scas
push
xchg
retf
sub
push
pop
adc
mov
sahf
arpl
je
pop
adc
rol
sbb
xor
mov
(bad)
xor
xchg
cmp
dec
shl
mov
fst
sub
dec
scas
or
icebp
cmp
fimul
jnp
jnp
push
sub
mov
dec
dec
jne
mov
enter
xor
cli
mov
cli
int
out
or
xor
mov
push
call
aas
jns
jecxz
int
mov
cmp
pop
stos
jecxz
xlat
add
xchg
or
adc
(bad)
and
or
(bad)
xor
inc
fcomp
into
sbb
xchg
retf
int3
push
test
addr16
movs
dec
ret
fcomp
jb
cmp
pop
cmp
cdq
jecxz
mov
xchg
xor
sub
sub
mov
int
nop
dec
xchg
shl
inc
hlt
int3
adc
pop
cmc
out
pop
dec
icebp
ds
add
cmp
dec
out
addr16
mov
dec
xchg
pop
jecxz
push
jmp
hlt
les
jae
mov
outs
shl
sub
and
das
gs
mov
pop
adc
in
pop
mov
jmp
ret
pop
xchg
iret
pushf
cmp
pop
or
icebp
loopne
inc
aaa
xor
scas
cld
mov
jp
mov
cmp
sub
retf
cmps
push
jl
ror
fwait
push
or
call
scas
xor
mov
sar
cmp
adc
leave
cs
and
imul
lea
daa
mov
call
pop
or
sti
je
mov
adc
push
push
pop
sbb
pop
cs
sbb
push
data16
in
or
push
pushf
jmp
jo
daa
(bad)
and
retf
push
out
test
xchg
movs
sub
shl
pusha
inc
out
mov
dec
sub
push
das
cld
add
inc
mov
out
data16
das
pop
push
push
jns
retf
ins
xchg
jbe
cmc
cmp
ret
jle
pop
pop
(bad)
xor
jle
adc
call
(bad)
and
out
imul
idiv
mov
lock
push
nop
xchg
pop
loope
add
(bad)
imul
push
add
cld
loope
in
push
dec
repz
add
mov
xor
xor
cmp
xor
cmp
dec
sti
inc
mov
sbb
mov
jb
mov
sbb
dec
int3
pmullw
pop
inc
mov
cwde
fld
outs
stos
repnz
imul
xor
les
cmp
and
fstp
jmp
out
stos
ins
jl
inc
xor
gs
aas
cmp
aaa
jp
pop
stc
sbb
adc
push
popa
mov
add
mov
mul
mov
xor
or
pop
mul
xchg
sbb
(bad)
mov
sbb
retf
mov
jmp
jns
in
adc
pop
sti
sbb
sub
cli
int3
in
cmp
ss
mov
cli
or
mov
mov
scas
add
cwde
ror
mov
in
jns
ror
jae
jae
xlat
int3
xor
jnp
push
enter
jle
(bad)
aad
sbb
lods
lea
mov
mov
mov
xchg
cmp
(bad)
(bad)
mov
popa
mov
push
seta
xor
loope
mov
inc
mov
and
popf
dec
adc
pop
push
xor
mov
sbb
pop
dec
mov
xchg
aaa
mov
pop
sub
xor
(bad)
xchg
popa
cdq
(bad)
xor
dec
pop
pop
mov
or
add
inc
lds
push
xor
ja
adc
iret
xor
inc
and
inc
mov
out
or
xchg
arpl
jne
int
mov
in
pushf
fadd
es
xchg
adc
xchg
cmp
xchg
xchg
pop
push
retf
xchg
je
scas
int
in
mov
movs
icebp
cmp
sub
call
scas
jle
lds
fmul
sbb
mov
cmp
inc
lea
gs
cmc
(bad)
pushf
xchg
mov
adc
(bad)
stos
in
push
rcl
jg
jge
cmp
stos
sar
ins
js
pop
repnz
pop
mov
cwde
in
aad
add
scas
sbb
rol
xor
std
sub
ds
sti
sub
je
jo
shr
push
mov
(bad)
sub
hlt
jmp
aad
cmps
out
je
jae
lods
pop
cld
rcr
fwait
dec
sub
in
mov
mov
sahf
arpl
sub
jns
shl
jmp
dec
jne
loope
retf
push
xchg
xor
push
sub
cld
mov
div
lods
add
jl
xchg
mov
out
sbb
inc
cmp
pushf
sub
or
xor
repz
dec
ds
aam
mov
(bad)
dec
mov
stos
in
out
adc
and
shl
aaa
loop
movs
sbb
fisub
cmp
push
sbb
test
fst
and
mov
retf
popa
adc
mov
gs
and
in
dec
fucomp
lods
(bad)
(bad)
dec
push
xor
adc
xor
inc
dec
jmp
inc
xchg
pop
imul
fadd
add
add
xor
add
add
xor
add
add
add
add
add
add
add
add
add
mov
add
add
add
add
add
pop
add
add
add
add
add
add
push
add
add
add
add
add
add
iret
add
add
add
add
add
jae
add
add
add
add
add
ret
add
add
lods
in
add
add
add
add
or
add
add
xchg
add
cmp
mov
add
add
add
add
add
add
add
jl
rcl
lods
mov
cmp
jne
clc
out
test
fistp
and
jno
push
aaa
cdq
fnsave
div
and
rcl
lds
sub
push
adc
repnz
mov
inc
js
movs
add
lods
test
jge
mov
sub
sbb
in
xor
aaa
pop
ror
xchg
cli
inc
inc
ror
test
mov
pop
mov
push
mov
jge
push
ins
imul
out
mov
sub
cmp
test
clc
xchg
arpl
pop
fisub
inc
cmps
cmps
enter
and
jo
ins
mov
sahf
fild
rcl
int
shl
mov
ret
cmps
dec
(bad)
push
rcl
fs
aaa
cmp
add
adc
mov
and
icebp
ss
mov
cdq
in
scas
into
push
call
mov
pop
not
xor
lahf
test
rcl
in
xchg
push
inc
add
pushf
add
lahf
jb
xor
leave
popa
bound
sbb
xlat
sub
xlat
xchg
test
mov
xor
aas
sbb
ds
ret
xchg
nop
shl
mov
sub
push
sbb
outs
adc
sbb
(bad)
fst
jae
imul
jnp
or
test
xor
stos
inc
das
mov
lahf
sbb
jecxz
cmp
lods
sub
push
mov
imul
out
stos
pop
out
js
out
sub
ins
test
addr16
jecxz
in
push
imul
mov
ds
ins
jl
add
jb
int
ffreep
ror
and
and
bound
jle
cmp
cmp
mov
popf
mov
add
loope
sub
jmp
fidivr
cld
mov
jmp
mov
adc
jmp
jp
mov
movs
sub
xor
lahf
aad
xchg
mov
gs
push
sub
out
push
mov
push
adc
inc
add
cli
test
out
jmp
cld
movs
fisttp
pusha
int
sbb
scas
mov
icebp
out
mov
adc
xor
mov
iret
add
push
sahf
pop
jle
(bad)
lds
mov
repnz
daa
shr
std
jne
sbb
sti
xor
jbe
push
mov
je
sbb
mov
cmp
jo
fs
dec
and
hlt
rol
push
sub
loopne
push
jmp
lds
fucompp
dec
pop
add
inc
jno
lea
out
cmc
repnz
jbe
int
adc
lahf
inc
sahf
ret
add
and
or
jmp
lods
mov
mov
test
jg
cdq
and
and
cs
popf
(bad)
retf
lock
mov
bound
loopne
sub
sti
ror
popa
mov
in
or
mov
cwde
mov
idiv
add
ds
jge
mov
sar
mov
shl
fwait
lods
ret
inc
mov
add
dec
in
dec
inc
jnp
jae
sbb
(bad)
jne
jl
or
push
enter
jge
inc
xchg
retf
bound
ficomp
mov
mov
out
pcmpgtd
ja
xchg
dec
in
adc
mov
fld
lds
imul
int
dec
mov
xchg
push
cli
mov
(bad)
cmc
out
les
jl
mov
mov
fisubr
mov
add
or
retf
pop
dec
ja
cmc
jbe
dec
repz
lods
inc
out
hlt
mov
aas
sar
jbe
test
jge
xchg
mov
pop
leave
jae
iret
or
jne
mov
push
jnp
push
adc
out
jne
scas
jle
xchg
sbb
sbb
(bad)
shr
lock
mov
jle
mov
and
neg
es
dec
mov
repnz
cmp
push
(bad)
mov
jno
jle
das
pop
jns
ins
dec
data16
data16
int3
iret
rol
test
and
je
cmp
xor
mov
jno
sahf
push
adc
fild
xor
leave
xor
in
mov
adc
mov
add
dec
jmp
int3
mov
cmp
xor
mov
dec
sbb
and
push
jne
call
fst
int
scas
sar
and
popa
add
fnstenv
in
sahf
or
mov
xchg
je
int3
out
xchg
mov
and
mov
sbb
and
out
pusha
mov
xchg
add
mov
leave
adc
retf
test
lods
fld
xor
jmp
in
or
sbb
adc
dec
dec
add
fcomp
outs
test
arpl
loope
and
dec
fcom
mov
stc
sub
sbb
pop
not
pop
sar
or
jp
lea
xor
xlat
ret
(bad)
mov
adc
xor
push
test
jbe
jmp
mov
push
sbb
adc
loopne
or
cs
xor
jp
mov
pop
jp
jmp
rol
and
sbb
out
mov
xchg
add
xchg
dec
les
rol
inc
mov
pushf
loope
jecxz
adc
retf
adc
sub
imul
enter
and
xchg
test
es
dec
pop
test
jmp
dec
dec
stc
in
cwde
sbb
stos
inc
stos
ins
cmp
icebp
xchg
jle
lods
push
popa
inc
(bad)
jp
xor
out
or
inc
movs
and
movs
xchg
into
jecxz
cdq
jmp
mov
outs
ja
aad
stc
cmc
fstp
jle
sbb
cwde
pop
mov
xlat
lods
or
arpl
jno
ror
cmp
cmp
imul
xor
outs
mov
cs
into
push
inc
sub
test
adc
mov
sub
sub
std
or
cmp
ds
mov
jmp
mov
movs
push
enter
jns
hlt
jae
pop
mov
cmps
pop
or
std
pop
sbb
mov
leave
and
adc
mov
jae
xor
mov
xchg
dec
jp
arpl
cmp
fs
and
mov
inc
and
mov
fld
scas
lods
fidiv
imul
push
jmp
repnz
les
mov
fidiv
xchg
call
test
sbb
xchg
add
mul
xor
das
pandn
adc
(bad)
fldcw
das
dec
mov
sub
add
adc
sub
add
jmp
jg
xchg
xor
mov
jo
dec
mov
das
call
jle
mov
and
repz
icebp
push
add
xchg
enter
rol
push
mov
jle
test
pusha
lods
shl
jle
arpl
jo
popa
aas
enter
stos
and
test
in
in
test
ret
inc
popf
cdq
rol
xchg
push
sbb
stc
bound
inc
push
fmul
retf
daa
inc
clc
icebp
push
mov
mov
cmp
and
jo
add
imul
ret
mov
mov
(bad)
cwde
scas
push
cmps
push
ret
push
push
nop
fisub
jb
aad
sbb
rcr
cmp
out
repz
cmc
and
cmp
dec
inc
jecxz
sub
add
pop
repz
div
fisubr
retf
pop
ins
sub
rol
mov
push
das
leave
ret
or
sub
inc
mov
pop
stos
loopne
inc
sbb
(bad)
lock
aas
pusha
xor
and
xchg
xchg
mov
mov
xlat
xchg
not
or
sub
sbb
leave
xchg
mov
enter
jp
(bad)
cmp
test
inc
jo
mov
movs
cmps
mov
push
mov
(bad)
enter
out
lods
mov
add
and
sbb
cmp
push
mov
xchg
les
cli
pop
jnp
shr
mov
mul
and
push
push
push
mov
bound
xchg
mov
mov
mov
adc
ss
pop
cmp
in
mul
rcr
mov
jbe
mov
popf
stos
jne
pop
ret
pop
js
scas
aad
rol
arpl
arpl
ins
pop
push
ds
dec
xchg
pusha
push
sub
int
push
mov
repnz
cmp
dec
mov
js
aaa
sub
mov
test
inc
int
mov
out
cmp
adc
test
cmp
add
fcom
pusha
arpl
mov
or
and
scas
lods
sbb
mov
pusha
jmp
daa
fcomp
mov
add
mov
xchg
push
ffreep
push
shl
and
cmp
(bad)
xor
retf
inc
cmp
js
pop
iret
test
leave
stos
jno
ret
fs
inc
mov
xor
push
movs
inc
pusha
dec
out
add
retf
sub
dec
pop
jno
cmp
add
inc
adc
clc
xchg
mov
adc
cdq
(bad)
add
pop
dec
or
mov
ins
xchg
(bad)
pop
jecxz
cmp
pop
sar
pop
repnz
adc
pop
lock
outs
fcom
inc
mov
sub
jmp
and
push
cmp
shr
push
aad
xrelease
data16
or
data16
dec
int3
jae
jl
call
loop
mov
xor
div
popa
inc
(bad)
out
ror
retf
xor
fnstenv
cli
cmc
push
push
(bad)
mov
jg
(bad)
or
(bad)
shr
mov
cmp
xor
scas
xor
loopne
xchg
adc
sahf
fnstsw
lds
add
aam
add
or
inc
rcr
(bad)
fmul
sbb
adc
retf
jmp
cmp
pop
sbb
sahf
loop
mov
stc
mov
sbb
jnp
stos
cmp
rcl
stos
cmp
mul
(bad)
xchg
add
dec
pop
ret
test
pop
jle
sub
add
movs
mov
cmps
mov
sub
hlt
mov
jnp
xchg
lahf
rcr
int
push
jno
and
arpl
mov
pop
push
jl
dec
add
add
add
add
add
add
add
loope
add
push
add
add
add
add
add
add
add
add
add
add
add
mov
add
add
pusha
or
mov
dec
fs
movs
or
jg
push
lods
push
je
pop
pop
mov
addr16
imul
xlat
in
push
retf
in
sub
ins
mov
push
(bad)
mov
mov
and
clc
inc
shl
pop
or
dec
call
mov
pop
inc
popf
jmp
call
jns
mov
aaa
inc
sbb
xchg
loopne
lea
aaa
ins
(bad)
outs
mov
xor
mov
nop
jmp
pop
xchg
aas
inc
jge
mov
mov
gs
in
cmp
xchg
inc
adc
call
icebp
mov
pop
add
ss
fld
pop
mov
xchg
icebp
inc
add
xchg
sub
test
cmp
dec
cmp
int3
out
icebp
fld
ins
pop
stos
iret
mov
lahf
mov
sub
ss
scas
jnp
loope
push
jmp
xor
ja
jmp
adc
jmp
jp
lea
pop
pop
pop
jns
lods
or
xchg
jle
retf
aam
cmp
mov
adc
dec
call
push
icebp
mov
pop
and
fidivr
out
movs
xchg
xor
ror
jbe
in
rcl
(bad)
xchg
mov
and
cmp
imul
(bad)
frstor
mov
sbb
ret
adc
movs
add
cmp
es
inc
cmp
pop
inc
jnp
sbb
mov
(bad)
push
and
xchg
xor
outs
xor
jecxz
stos
test
test
fdivr
cmp
xor
inc
out
jno
loopne
push
lds
sub
mov
push
sbb
mov
sbb
hlt
out
mov
sbb
test
out
fwait
movs
mov
mov
and
ror
mov
jns
mov
(bad)
lods
or
xor
shr
mov
push
push
push
scas
cmp
call
nop
sub
adc
js
sbb
push
adc
xchg
out
mov
test
jo
(bad)
je
retf
stos
jae
sbb
stos
pop
pop
popf
xchg
icebp
jmp
dec
mov
dec
sub
mov
mov
or
retf
xchg
or
mov
jmp
push
clc
iret
jbe
sbb
lods
inc
xor
dec
dec
mov
fs
pop
mov
push
and
jl
and
mov
dec
xchg
in
add
adc
in
enter
pop
xchg
cmp
inc
push
leave
hlt
sub
gs
adc
sahf
jle
shl
xchg
sub
cmc
dec
fld
and
jg
xchg
mov
fs
div
mov
jmp
cmp
sbb
jnp
sar
mov
mov
push
dec
adc
mov
mov
outs
ret
xor
pusha
out
adc
ja
xchg
or
add
(bad)
fndisi(8087
std
cmp
cmc
ret
sub
inc
or
pop
sub
jbe
cld
imul
jo
xchg
scas
(bad)
jb
scas
push
cmp
jno
adc
lds
repz
adc
repz
dec
arpl
nop
push
daa
and
stos
jg
outs
pop
mov
fs
jmp
fadd
xchg
cmp
xchg
push
mov
mov
push
retf
sub
shl
pop
test
(bad)
adc
adc
push
and
xchg
call
pop
popa
outs
mov
sbb
repz
jbe
sbb
push
sar
sub
cmps
out
ins
dec
add
jmp
and
jge
dec
call
(bad)
imul
imul
cmp
adc
or
lock
dec
test
shl
mov
push
or
add
xor
enter
into
dec
dec
jmp
stos
cdq
addr16
and
push
cmp
adc
cmps
sbb
jle
sti
movs
mov
jno
cli
or
loope
add
rcl
pop
test
das
arpl
dec
adc
(bad)
jne
add
mov
fldenv
scas
mov
adc
fidiv
dec
cmp
push
mov
ins
adc
daa
std
mov
jl
sub
mov
(bad)
not
in
ins
fucom
cmps
ja
add
pop
mov
loope
retf
add
clc
test
mov
not
and
popf
dec
mov
(bad)
retf
jecxz
call
adc
daa
inc
adc
test
add
and
inc
or
cmp
mov
bndldx
xchg
and
sahf
nop
dec
push
cmp
in
push
fdivr
xchg
and
pop
push
or
cmp
push
je
ja
mov
sbb
mov
dec
ret
imul
psubsw
fldcw
cli
xchg
fadd
add
jbe
call
pop
movs
call
sub
xchg
mov
or
sub
push
mov
add
add
mov
shl
std
test
adc
idiv
mov
in
iret
adc
mov
mov
xchg
test
in
xchg
inc
ror
inc
outs
jnp
xchg
je
xchg
aam
cmp
add
add
cmc
xor
jns
jns
retf
pop
adc
jmp
xchg
movs
data16
js
stc
loopne
or
fucomp
cli
test
lods
pop
mul
ror
in
cmp
pop
mov
test
inc
or
gs
fwait
jo
mov
jbe
push
(bad)
in
dec
push
mov
out
mov
shr
or
cli
jp
xchg
lods
nop
aas
mov
arpl
jae
mov
and
cmp
sbb
pop
push
cdq
repz
dec
sti
add
jg
mov
loope
add
jbe
mov
pushf
das
fs
into
loopne
cmp
jbe
shl
jecxz
xchg
clc
daa
cwde
test
jmp
mov
xchg
in
test
shl
je
sbb
cmp
jmp
mov
rep
sub
sbb
loop
stos
pushf
xchg
(bad)
aam
add
xor
jg
sbb
xchg
xchg
dec
fst
frstor
xor
mov
popa
movs
sub
mov
cmps
stos
movs
jo
mov
hlt
dec
or
mov
loop
xlat
mov
dec
sar
push
push
retf
loop
lds
fsubp
jl
imul
mov
cs
pop
cli
mov
shr
mov
adc
jnp
ins
cmp
cmp
mov
add
rcl
adc
aam
pop
sub
and
imul
out
(bad)
cmps
hlt
push
es
mov
lods
mov
mov
adc
outs
mov
(bad)
fidivr
fsub
test
sbb
push
(bad)
in
pop
dec
xchg
shl
cmp
add
add
sub
push
pop
push
sub
mov
sub
and
ss
and
jge
fcomi
fsub
gs
fsubr
bsr
pushf
lea
in
loope
sbb
test
lock
mov
in
adc
xchg
sub
int
sbb
fimul
std
push
stos
sbb
int
mov
cmc
gs
pop
ins
pop
imul
xchg
and
mov
bound
call
push
mov
test
fisub
jo
push
jbe
rol
call
mov
adc
mov
mov
aas
mov
leave
stos
loop
mov
repnz
mov
jns
stos
cmp
retf
dec
cs
sbb
dec
xchg
psraw
sbb
in
rcr
cmp
jne
adc
and
jno
addr16
rcl
push
or
jp
dec
test
xchg
jg
lds
and
mov
jnp
mov
xor
xchg
dec
sub
sbb
fdivr
pop
pop
outs
div
pop
mov
cmp
daa
add
stc
sub
aaa
mov
inc
inc
fwait
xchg
pop
fistp
aas
cmp
(bad)
jo
jge
popf
pusha
bound
fisub
pop
cmp
xor
inc
pop
aam
jo
adc
mov
mov
popa
xchg
ds
fisttp
mov
sub
jb
sbb
cmp
test
inc
loop
nop
imul
test
outs
xchg
xchg
shl
mov
add
out
repz
loop
cmp
push
ins
add
(bad)
in
call
loop
sbb
inc
retf
out
cmps
pop
mov
pop
adc
add
sub
inc
fcmovnbe
out
xchg
pop
pop
jmp
stos
cmp
sub
sub
outs
popf
inc
retf
cmp
lds
pushf
imul
fdiv
ins
inc
dec
(bad)
daa
adc
mov
xchg
push
cmp
sti
call
data16
div
xor
sub
test
mov
dec
popf
and
mov
xchg
push
adc
and
ins
fadd
dec
(bad)
out
or
lds
fs
stos
inc
cmp
add
mov
jno
add
hlt
lods
cld
stos
mov
ret
inc
mov
xor
imul
cdq
and
(bad)
mov
adc
add
fcomp
dec
loop
test
jae
ret
aad
cmp
icebp
adc
enter
inc
fnstsw
jae
mov
loop
movs
data16
sbb
icebp
dec
dec
fwait
retf
push
push
call
cmp
pop
or
mov
call
pushf
mov
mov
sahf
adc
fimul
push
dec
mov
repz
cmp
loop
popa
mov
jg
push
popa
out
pop
xor
xchg
not
test
fs
add
xor
out
xchg
sbb
push
(bad)
lock
mov
dec
jp
add
and
aam
add
inc
adc
lahf
out
ins
outs
repz
popf
mov
lods
fistp
aad
dec
jno
arpl
xchg
mov
into
pop
jno
mov
lahf
cmp
and
xchg
sub
inc
movs
mov
ror
mov
fwait
pop
push
sub
pop
adc
xor
test
es
dec
arpl
fnstsw
or
lods
xchg
cli
mov
push
inc
add
xor
(bad)
mov
iret
cwde
sub
aad
xchg
shl
mov
pop
(bad)
ret
imul
repz
or
je
shl
cli
push
sub
or
add
add
hlt
add
jle
add
add
add
add
adc
add
add
je
mov
cmps
add
add
lea
add
retf
add
add
add
cmp
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
add
add
add
add
add
add
add
aam
add
add
add
lds
add
add
add
icebp
sbb
mov
add
add
arpl
add
or
xlat
add
add
jecxz
add
inc
into
pop
add
pop
ss
leave
pop
jb
les
sbb
leave
xchg
or
adc
push
retf
icebp
push
sub
or
cmp
xor
xchg
(bad)
lods
sbb
fwait
inc
cmp
rol
shl
data16
outs
lock
daa
cmps
ins
push
sub
in
lods
sbb
cmps
popf
(bad)
push
cli
ffreep
retf
fiadd
xchg
in
cmps
cwde
xchg
dec
pop
bound
or
mov
sti
aaa
sbb
movs
mov
daa
xchg
inc
or
ja
cmp
lds
or
pop
push
add
jmp
or
rcl
xchg
dec
mov
mov
out
retf
mov
into
mov
push
push
cmp
rol
enter
jmp
dec
and
fcom
outs
xchg
scas
retf
or
and
(bad)
ficom
cmc
push
cmp
push
(bad)
cli
mov
imul
jae
jge
test
imul
stos
adc
dec
test
push
mul
push
push
sub
mov
popf
imul
js
mov
stc
jl
ficom
xor
xor
push
into
jl
jbe
cmc
mov
aas
xor
sbb
dec
inc
ins
dec
aas
fld
xchg
clc
mov
xor
cdq
push
sub
mov
or
inc
mov
mov
fsubp
or
or
mov
js
fistp
sahf
or
repz
sbb
fnsave
mov
ja
icebp
push
mov
xor
inc
dec
xchg
adc
les
mov
push
sub
pop
int
xchg
in
or
ja
ret
sahf
(bad)
pop
pop
or
xchg
mov
mov
mov
pusha
popa
cwde
(bad)
iret
pop
mov
outs
xor
inc
call
dec
sbb
xchg
jo
dec
inc
scas
add
jg
xlat
push
mov
js
lea
cmp
retf
inc
in
add
add
inc
xor
xchg
imul
or
and
es
xchg
xor
addr16
mov
or
aam
jno
cdq
neg
sti
std
mov
push
cmp
and
dec
jmp
pop
fist
mov
and
mov
out
mov
enter
pop
imul
push
ror
cli
xor
repz
jl
xchg
adc
scas
sti
mov
scas
mov
idiv
cmp
sub
(bad)
in
jb
shr
push
mov
cwde
or
push
dec
inc
sbb
ja
repnz
xor
sbb
xchg
movs
test
stos
(bad)
test
sahf
sub
mov
test
hlt
je
sbb
shl
jbe
and
mov
and
pop
xor
sar
add
out
lock
call
sub
and
xchg
inc
and
sbb
inc
stc
ja
fwait
inc
xchg
dec
adc
pop
sub
cmp
(bad)
test
sub
sub
clc
dec
add
iret
into
in
mov
pop
ins
push
or
sbb
cdq
lock
cmp
mov
jmp
inc
mov
mov
stos
out
jl
in
add
sbb
and
cmp
fild
enter
loopne
xor
das
mov
scas
mov
jmp
cmp
lds
mov
jg
loope
jne
call
xlat
mov
out
and
leave
cli
rcr
fisubr
jmp
aad
jmp
sti
jg
xchg
call
jg
jbe
add
sbb
lods
pop
(bad)
iret
adc
imul
mov
jp
mov
cmps
and
inc
mov
mov
mov
test
pop
test
(bad)
repnz
cs
sti
daa
mov
inc
dec
or
sbb
push
jle
mov
sahf
lea
dec
call
inc
push
cmp
jmp
lock
test
mov
loop
xchg
jne
cmp
add
fiadd
ror
xchg
or
adc
mov
aas
rcl
dec
repnz
mov
inc
push
outs
sbb
pusha
fadd
std
inc
xor
fild
jmp
nop
in
xchg
push
movs
inc
clc
pop
cmp
ror
pop
stos
sub
add
cwde
adc
xor
stos
lahf
pop
lahf
push
jp
lea
sub
xchg
stc
and
loopne
vhaddpd
xchg
xchg
dec
out
push
cmp
in
daa
lock
mov
xor
pop
popf
cmp
dec
add
inc
(bad)
mov
mov
adc
and
(bad)
iret
ds
pop
cmp
mov
add
std
pop
retf
add
cmps
ret
mov
push
and
sub
adc
push
call
fdiv
or
adc
xor
fimul
arpl
adc
jbe
loope
push
shl
mov
push
popa
test
cs
jnp
pop
xor
xchg
ins
dec
das
pop
rcl
bound
jmp
psraw
push
or
inc
fs
adc
jecxz
shl
into
cmp
add
loope
popf
jecxz
jne
cmp
sbb
popf
xlat
mov
sub
shl
jmp
dec
mov
hlt
cmp
sahf
mov
mov
in
jae
xchg
xchg
inc
adc
test
aas
mov
push
pop
rcr
jp
xchg
mov
or
fild
lods
loopne
push
mov
and
inc
xlat
jo
loope
push
leave
cmps
rcr
add
jae
push
pusha
adc
fbstp
jecxz
(bad)
xchg
mov
jae
adc
jo
adc
or
out
mov
out
pop
push
xchg
xor
cmp
call
dec
push
aas
sbb
in
scas
adc
push
adc
mov
push
js
or
sahf
outs
in
cmp
sti
and
mov
and
in
mov
stos
jp
or
mov
dec
es
mov
jle
loop
pop
lods
inc
pop
data16
mov
sub
sub
xchg
xor
or
or
xchg
(bad)
xchg
jg
xchg
cmps
enter
into
dec
movs
push
or
pop
mov
js
je
stos
dec
fnsave
xor
xor
add
jno
cmp
push
sti
mov
or
push
test
mov
or
(bad)
loope
js
(bad)
cli
jge
xchg
dec
imul
out
adc
popf
fidivr
imul
fld
mov
(bad)
fnstcw
xor
cmp
inc
add
lock
dec
mov
pop
push
rcr
out
mov
cli
add
in
push
jns
outs
popa
fadd
js
sar
jb
xchg
cdq
aaa
(bad)
push
mov
loope
dec
test
out
and
imul
rcl
hlt
in
(bad)
sbb
adc
sub
sbb
cld
imul
movs
test
fdivr
sahf
sbb
push
xchg
mov
fidiv
sahf
test
scas
shr
in
xchg
mov
lds
mov
pop
aaa
fld
or
es
sbb
jl
push
cs
test
scas
push
sbb
in
retf
mov
mov
sti
(bad)
pop
repz
adc
dec
fwait
imul
fstp
xor
inc
clc
adc
fiadd
push
out
mov
jl
jge
mul
pop
jo
sbb
stos
hlt
fimul
shl
pushf
jbe
jp
int3
pop
jmp
pop
add
dec
mov
adc
sti
cmp
js
jl
cmovs
js
sbb
push
dec
ret
or
adc
iret
and
in
xchg
inc
mov
push
jg
test
data16
sub
inc
inc
repnz
sbb
lea
cmps
xor
(bad)
scas
jp
cs
call
mov
push
jle
push
xchg
xor
(bad)
jns
dec
or
and
or
rcr
sti
or
popa
int
popf
or
cld
rcl
sub
retf
test
mov
pop
push
add
sub
and
pop
jns
mov
adc
hlt
fiadd
test
inc
(bad)
movs
(bad)
xor
stos
cdq
cld
stc
into
pop
pop
outs
ds
loope
jg
adc
and
or
xchg
inc
(bad)
aam
pop
sbb
sbb
imul
test
sub
push
repnz
nop
test
mov
rcr
cmp
push
mov
ins
sub
test
xor
ror
shl
xor
push
arpl
xor
imul
xor
rol
push
jno
sbb
fs
into
sub
test
dec
imul
fsub
int
int3
sub
mov
ins
jb
aas
dec
(bad)
out
mov
pop
pusha
lahf
not
mov
arpl
ret
daa
fist
popa
xchg
fsub
and
mov
xchg
or
push
dec
fwait
test
imul
ins
pop
dec
xchg
jg
rcl
jl
(bad)
sub
mov
mov
sbb
cmp
adc
sub
mov
(bad)
adc
inc
mov
jge
int
mov
jg
mov
push
pop
clc
lods
dec
imul
test
xchg
fs
sbb
cmps
(bad)
jne
icebp
sbb
mov
movs
pushf
push
pusha
addr16
(bad)
xchg
call
out
jb
ins
rsm
adc
or
outs
sahf
fmul
pop
data16
out
cmp
cmp
sub
mov
push
frstor
ja
imul
xchg
push
add
or
and
mov
xor
push
or
shl
(bad)
out
nop
gs
xchg
std
dec
es
jg
sahf
lahf
mov
and
test
push
adc
push
mov
fldenv
push
ficomp
shr
shr
sub
sub
imul
adc
ss
rcr
loop
cmp
data16
iret
shr
jae
(bad)
and
adc
jb
jg
nop
test
lds
or
pop
(bad)
xchg
enter
pop
out
ret
int3
into
fidiv
cmps
mov
push
push
aaa
jbe
mov
mov
std
jb
or
push
add
int3
popf
jo
dec
push
mov
scas
xor
ror
adc
(bad)
(bad)
cmp
xor
jns
sbb
scas
push
mov
loopne
add
mov
add
add
add
adc
add
add
add
xchg
add
adc
add
add
add
add
add
add
add
add
add
add
add
sub
hlt
add
and
inc
add
add
add
add
push
add
mov
add
add
mov
add
add
add
add
add
add
add
ss
add
add
arpl
add
add
add
or
add
add
add
add
add
in
adc
add
add
stos
add
add
jp
arpl
adc
pop
jnp
xlat
or
outs
mov
lea
sti
xor
jmp
cld
int
cli
mov
imul
test
jns
xor
mov
push
inc
mov
xor
or
cwde
adc
or
(bad)
push
sub
out
inc
hlt
xor
cli
std
xchg
je
imul
not
js
xchg
xor
sub
aam
(bad)
(bad)
pop
xchg
test
adc
add
addr16
ss
lock
adc
data16
inc
imul
jb
nop
push
fs
shr
int
mov
(bad)
test
sbb
ret
mov
ins
inc
mov
shl
jbe
loopne
daa
jae
dec
jge
into
out
fstp
jbe
and
cmp
in
xchg
lahf
mov
pop
pop
test
or
cmp
inc
sbb
cli
mov
mov
imul
aas
popa
and
aam
inc
call
mov
jg
push
xchg
mov
in
xchg
push
icebp
mov
(bad)
mov
mov
shl
or
mov
data16
movs
push
test
rcl
cmps
pushf
pop
sub
vpaddw
popa
sub
mov
jmp
and
cmps
jo
pop
inc
jnp
jp
retf
or
stos
fsub
js
jmp
push
in
pop
sub
cmps
rol
sub
xor
dec
xor
dec
scas
scas
ret
inc
fidivr
frstor
mov
fucom
bound
or
mov
clc
add
jge
jge
cmp
in
push
aad
jne
ret
pop
test
or
inc
mov
gs
push
jb
test
in
not
lds
mov
jb
ins
ficomp
call
fistp
mov
mov
jb
mov
cmp
(bad)
and
inc
inc
lea
push
adc
js
into
lods
jns
iret
ficom
hlt
and
(bad)
das
inc
ds
and
mov
movs
add
mov
les
pop
pushf
xchg
cmc
jbe
sub
pop
outs
retf
and
mul
pop
and
bound
mov
pop
or
(bad)
cmc
mov
jno
mov
inc
in
mov
repnz
jns
stos
int
adc
inc
sub
dec
out
les
movs
cmp
(bad)
aas
xor
(bad)
dec
das
adc
scas
data16
repz
je
sub
mov
sbb
mov
push
xlat
mov
test
and
dec
cdq
xlat
jnp
xlat
loop
adc
pop
dec
retf
push
mov
cmp
cmp
inc
add
shl
jecxz
into
and
push
pop
xchg
mov
sub
iret
ror
sbb
call
jno
mov
outs
test
sbb
adc
add
fcom
sbb
mov
or
cmps
les
push
iret
pop
sub
test
xor
xchg
lods
xor
lods
inc
mov
ja
push
inc
aas
jmp
mov
push
adc
jmp
jmp
pop
xchg
jne
add
push
push
(bad)
std
add
sub
call
jmp
std
ja
repnz
sar
or
adc
rcr
mov
dec
pop
retf
rcr
dec
mov
inc
mov
add
sbb
cwde
or
push
(bad)
(bad)
xor
hlt
(bad)
mov
jmp
inc
(bad)
iret
dec
xlat
loope
sub
(bad)
scas
retf
mov
jge
int3
add
fstp
leave
repnz
cmp
cli
ror
dec
fiadd
inc
sub
or
push
jge
cdq
stos
stos
mov
fstp
or
adc
shr
add
mov
dec
mov
or
in
mov
vcvtpd2ps
(bad)
in
ds
sbb
cmps
adc
mov
dec
pop
jecxz
icebp
pushf
adc
mov
aaa
outs
retf
xor
add
inc
pop
lahf
icebp
mov
xlat
cmp
rol
imul
cmp
inc
mov
fimul
(bad)
out
mov
sub
mov
inc
sub
jo
(bad)
shl
mov
mov
mov
fwait
loop
js
jmp
dec
xchg
test
adc
push
int
loopne
or
mov
xlat
pop
in
in
mov
out
ret
xlat
loopne
out
cmp
dec
sbb
loop
ja
lahf
push
xchg
popf
lahf
cdq
jne
dec
inc
enter
repz
inc
cld
mov
dec
xchg
xor
cdq
xor
add
loop
xchg
mov
xchg
xchg
pop
pop
or
pop
sar
(bad)
fiadd
test
mov
js
xchg
daa
aad
push
adc
sti
mov
into
xor
stc
dec
es
es
stos
out
cs
sbb
mov
data16
das
push
retf
icebp
cmps
lahf
ss
sti
xchg
nop
jmp
push
data16
mov
rcl
aaa
add
mov
dec
mov
aad
xchg
adc
dec
dec
add
retf
mov
push
out
cmp
xor
jp
sub
out
sbb
dec
or
jmp
loope
popf
xor
repz
pop
push
sbb
xrelease
push
jbe
mov
mov
mov
fiadd
sbb
pop
pop
into
xor
cwde
mov
jp
les
push
fistp
or
loope
pop
(bad)
arpl
push
mov
push
call
pop
pop
in
add
mov
jb
arpl
mov
(bad)
sahf
ins
je
loope
mov
pop
fs
mov
sbb
inc
fnsave
xchg
adc
jle
test
imul
sbb
enter
lahf
imul
xchg
sbb
cwde
xchg
leave
mov
popf
mov
test
fistp
cmp
retf
ins
push
stc
cmc
mov
push
fisttp
fld
loope
fisubr
(bad)
je
mov
cmp
sbb
pushf
add
in
ret
or
or
stc
jle
mov
std
mov
icebp
les
or
ds
fs
mov
imul
push
sub
lods
loopne
sbb
jge
xchg
stos
cmp
arpl
push
xchg
in
stc
pop
stc
jge
sbb
mov
inc
push
pop
xchg
out
xor
in
adc
cmp
push
xor
in
jg
pop
sub
jmp
imul
(bad)
das
sbb
sbb
paddd
xchg
repnz
jb
adc
sti
lock
ret
adc
dec
repz
or
gs
mov
or
xor
mov
mov
push
push
mul
jle
cmp
inc
(bad)
stos
mov
cmp
out
sbb
cmp
daa
stos
mov
mov
enter
(bad)
mov
add
imul
mov
ret
dec
ins
dec
xchg
cmp
mov
add
sbb
retf
push
mov
aad
test
retf
fbld
icebp
mul
or
jnp
aad
add
and
(bad)
fisub
or
outs
ret
mov
pushw
push
pop
pushf
ficomp
repz
mov
and
je
dec
fild
stos
adc
neg
in
adc
xchg
call
push
mov
sub
in
fmul
xchg
xlat
pop
icebp
sbb
cld
lahf
mov
bound
scas
(bad)
out
adc
push
or
lods
es
sub
xor
lods
out
imul
or
pop
pop
in
sar
gs
and
cs
cmps
push
stc
push
popf
jg
inc
pop
(bad)
inc
jecxz
jmp
cmc
fidiv
sbb
xchg
shr
test
retf
mov
mov
mov
and
into
add
stc
lahf
cs
mov
out
stos
outs
aad
pop
xor
dec
jg
adc
not
mov
inc
push
inc
retf
cmp
cli
mov
jge
rol
mov
out
je
jle
or
nop
sbb
mov
popa
or
push
hlt
jp
adc
ins
lds
xchg
test
in
cmp
sub
lods
xchg
or
inc
or
sub
sahf
sbb
mov
jg
dec
out
stos
ret
sti
jecxz
or
out
sub
sub
scas
mov
and
ins
push
jle
(bad)
cmp
out
push
pop
inc
push
stos
jbe
xor
dec
pop
jae
adc
dec
pop
test
inc
imul
shl
clc
jge
pop
fidiv
cmp
add
xor
out
outs
scas
inc
fdivr
cmps
pop
inc
les
aas
pusha
retf
sbb
in
ss
xchg
adc
inc
jge
add
xor
(bad)
outs
stos
imul
sub
addr16
sbb
rcl
add
fisub
test
jg
push
sub
pop
mov
sbb
adc
push
jmp
add
sub
ret
(bad)
sbb
addr16
xor
loop
inc
or
mov
fcmove
cmp
ins
cmps
aaa
xchg
mov
mov
cmp
stos
sub
das
sbb
ins
push
in
call
out
jns
xchg
jg
jmp
sbb
jmp
cmp
(bad)
outs
mov
bound
popf
or
adc
and
xchg
pop
fld
nop
or
in
daa
inc
test
inc
loope
mov
stos
test
jae
shl
lods
sub
int3
inc
loopne
pop
cmp
jmp
cmp
and
cmp
or
test
or
adc
sub
les
add
dec
push
sbb
mov
dec
shr
xchg
cwde
mov
fisttp
retf
sub
scas
mov
repnz
adc
or
lds
adc
cmc
adc
inc
sub
sub
push
fnstsw
lock
lock
jmp
out
push
xchg
scas
cmp
add
add
add
xor
add
inc
cmps
sub
add
adc
add
add
lahf
xor
add
sbb
out
add
add
xor
add
add
test
mov
pop
ja
add
add
add
add
add
add
add
(bad)
out
arpl
add
add
add
lock
add
add
add
add
jbe
and
add
into
xchg
add
add
add
add
sbb
sbb
add
add
add
add
add
add
add
add
add
add
push
add
add
add
add
add
mov
add
call
pop
add
sub
imul
add
add
jge
add
jo
add
add
add
jmp
lods
add
add
add
mov
jno
sub
aam
xchg
sub
stos
jecxz
pop
sahf
loop
dec
fldcw
movs
(bad)
mov
inc
stc
push
pop
pop
cmp
fisub
neg
or
cmp
fisttp
lock
mov
mov
adc
jmp
and
fidivr
push
and
enter
ret
loope
(bad)
addr16
cwde
adc
add
mov
add
mov
leave
xchg
inc
mov
pop
add
add
cdq
jae
and
xor
js
or
sub
cwde
xchg
add
mov
lea
dec
fidivr
push
imul
outs
fisttp
sub
or
sbb
cwde
test
pop
fs
mov
or
push
push
jno
xor
and
cld
(bad)
(bad)
aam
adc
scas
xchg
jne
add
sbb
jae
pop
nop
lea
or
sbb
add
inc
repnz
add
lea
sbb
pop
inc
or
add
pusha
mov
out
lods
add
shl
jg
add
and
test
push
stc
cld
aas
mov
adc
mov
aad
and
je
fs
pop
mov
ret
loopne
call
pextrw
mov
sbb
or
pusha
push
mov
lods
jl
dec
loop
dec
cdq
(bad)
push
ins
fwait
shl
ret
bound
adc
fwait
popf
dec
pop
clc
fwait
adc
sub
fstp
popa
es
or
and
sub
mov
inc
cmp
jecxz
inc
pop
jnp
pop
add
loop
popa
add
and
jle
and
jnp
out
jno
dec
xor
sbb
test
dec
xor
aaa
jo
mov
nop
sti
pop
and
adc
mov
mov
add
mov
gs
ds
frndint
jmp
push
aad
xchg
retf
retf
popf
stc
pop
xchg
mov
nop
ins
jmp
xor
hlt
pop
sub
adc
retf
xchg
mov
ins
(bad)
pop
pusha
add
test
out
out
mov
or
ins
xlat
xchg
xchg
sbb
mov
out
cmc
inc
or
(bad)
push
or
dec
push
ins
jle
xchg
das
lods
mov
js
adc
add
das
pop
xchg
sbb
xchg
loopne
movs
add
push
sub
inc
push
pop
push
cdq
dec
daa
scas
ret
aaa
push
push
sbb
stc
(bad)
adc
fwait
rcl
enter
mov
in
mov
nop
push
pop
cmovb
pushf
iret
xchg
aaa
mov
arpl
outs
(bad)
pop
sbb
sub
pusha
iret
inc
es
add
ficomp
push
xor
xchg
(bad)
jp
dec
inc
loopne
inc
outs
mov
call
mov
xchg
add
cmps
popf
das
mov
dec
int3
xchg
mov
jb
sbb
ret
ins
das
and
shl
cmp
jnp
pop
cmp
movs
call
xchg
xor
call
scas
xchg
sahf
nop
adc
sbb
sub
and
cwde
rol
cmovp
ss
mov
sti
fadd
movs
retf
addr16
(bad)
fwait
jae
jbe
aas
mov
xchg
mov
sbb
in
adc
mov
ja
push
cwde
jge
pop
xchg
adc
les
outs
lahf
adc
mov
push
popf
cmp
lods
jecxz
and
jmp
xor
mov
pop
das
jo
pop
into
outs
cmp
cli
inc
push
lods
sub
arpl
inc
je
pop
pop
cmps
xor
rcl
xlat
lods
out
inc
sub
sub
push
mov
inc
fimul
sbb
fcomp
xchg
out
es
and
mov
inc
pop
in
mov
inc
loope
push
cmp
test
mov
mov
stos
adc
xor
retf
add
sub
into
mov
fst
ficomp
xchg
jmp
push
mov
aad
mov
shr
dec
ror
imul
int3
imul
jg
pop
movs
xlat
or
push
push
inc
push
aas
cmp
pop
mov
inc
lods
int3
imul
xchg
sbb
push
or
sub
mov
mov
xor
cmp
jmp
popf
fmul
jp
sbb
ins
je
out
mov
jmp
mov
adc
ficomp
sbb
std
rol
sub
pop
out
dec
push
jp
popf
ins
pop
inc
sbb
les
jo
leave
inc
fild
inc
or
and
dec
iret
inc
test
test
or
cli
cs
je
adc
nop
repnz
pop
push
div
xchg
call
(bad)
outs
push
jmp
cmp
jns
lahf
sbb
push
repnz
and
nop
repnz
mov
mov
in
shl
dec
adc
sbb
outs
test
mov
xchg
mov
xchg
arpl
enter
rcl
push
hlt
je
fnstenv
fs
push
pop
cli
sar
retf
cld
daa
iret
sub
mov
push
jnp
xlat
retf
fstp
aaa
test
adc
xor
mul
dec
popa
das
xor
mov
push
cmp
add
or
paddusw
pop
nop
outs
adc
xor
stos
push
sub
cmp
dec
sti
mov
test
sub
xchg
call
mov
int3
push
jo
fidiv
adc
(bad)
in
xchg
jmp
push
lahf
mov
mov
pop
xor
shl
mov
pop
(bad)
jb
stc
imul
ret
test
xor
push
mov
mov
imul
or
jecxz
cmc
push
jne
cmps
jae
rol
jle
mov
push
rcr
stos
mov
sbb
rcl
inc
div
repnz
or
loop
mov
idiv
outs
rep
je
and
bswap
in
mov
lar
xor
cld
cs
xor
lds
popa
dec
and
bound
mov
test
or
test
fs
push
cmovno
cmp
mov
dec
lds
mov
arpl
movs
push
sbb
mov
add
sub
xchg
mov
xor
mov
inc
lahf
jmp
sti
xor
cli
stos
int
add
add
leave
out
(bad)
out
int
enter
std
pop
mov
sub
cld
fisttp
or
push
dec
fwait
add
xor
pop
push
movs
cwde
(bad)
or
lahf
mov
inc
sbb
pop
mov
adc
sbb
movs
sub
divps
xchg
push
inc
(bad)
call
mov
or
lds
pop
test
xchg
dec
stos
les
jmp
in
push
shl
xor
add
inc
jbe
pmulhw
dec
or
aad
inc
mov
stc
or
repnz
inc
push
repnz
pop
scas
lds
cmps
mov
(bad)
repnz
sbb
sub
xchg
out
cmps
xchg
fcmovb
sub
in
aaa
fimul
pop
test
sbb
cmp
fdiv
push
or
push
outs
cmps
mov
pop
and
inc
fld
jne
dec
cld
xchg
xchg
sub
mov
add
fwait
or
xchg
sbb
jp
(bad)
fidiv
sbb
xchg
jp
(bad)
les
or
(bad)
jnp
pushf
fsubr
jge
shr
ja
imul
inc
pop
(bad)
scas
push
stos
add
js
(bad)
scas
mov
sbb
xchg
and
cmc
idiv
or
pop
inc
and
repz
sub
and
push
push
pushf
pop
lods
push
xchg
xchg
jne
scas
adc
mov
sub
adc
movs
je
xchg
mov
push
pop
xchg
mov
pop
push
sbb
rcl
pop
shl
push
idiv
and
adc
lods
xchg
add
dec
fadd
mov
add
sub
loope
pop
lods
cs
jbe
shl
jg
pop
ss
pop
and
adc
fidiv
aas
sub
(bad)
ss
mov
pop
test
retf
xchg
int3
xchg
call
sbb
jo
or
fisub
jne
int3
push
sar
mov
fist
mov
repz
jnp
into
xchg
cmps
int
xor
pop
sub
mov
mov
mov
xor
dec
js
mov
pusha
(bad)
mov
push
mov
mov
js
cmp
sbb
jmp
ret
int
sti
cmp
adc
xchg
movs
iret
imul
push
ret
(bad)
sbb
xor
dec
dec
lahf
dec
inc
lods
call
adc
mov
scas
adc
(bad)
and
and
jge
test
cli
xchg
mov
(bad)
clc
pusha
cmp
mov
xchg
xor
sbb
(bad)
mov
pushf
or
dec
int3
mov
leave
cld
jae
(bad)
les
in
(bad)
pusha
retf
adc
xchg
rcr
and
enter
mov
sbb
and
xchg
sub
leave
mov
xlat
jge
sub
sbb
pop
(bad)
dec
pop
cdq
cmp
lods
bnd
mov
jmp
ja
sub
jge
cmc
out
mov
cmp
rcr
js
cwde
iret
(bad)
cmps
push
or
cmp
mov
push
inc
xor
mov
aad
call
push
out
mov
scas
mov
test
push
or
pop
outs
scas
std
clc
inc
ds
sub
ja
jne
ds
dec
cmp
rcr
into
or
push
adc
push
ins
lds
push
inc
jp
retf
js
xor
fidivr
push
stos
sub
xor
int3
idiv
lods
push
inc
mul
stc
out
pop
mov
dec
stos
inc
add
and
mov
movs
(bad)
mov
test
int3
jae
cmp
xchg
sub
lods
cmp
jo
xchg
dec
xor
mov
in
scas
mov
mov
(bad)
in
push
xchg
int3
mov
push
push
dec
test
test
xor
jnp
and
jecxz
jae
test
out
and
xlat
cmp
cs
addr16
push
jno
in
mov
out
add
add
add
ret
add
xchg
mov
add
add
add
add
add
add
add
add
add
add
add
add
add
cmp
add
loope
add
add
add
add
add
add
add
repz
push
add
add
fwait
add
add
add
fadd
add
add
test
popa
rcr
adc
add
adc
jae
in
stos
rcr
pusha
pextrw
scas
shl
(bad)
jb
daa
or
loope
test
rol
(bad)
out
mov
mov
out
add
jecxz
fcomp
stc
and
mov
add
sbb
ss
dec
pop
fnstsw
inc
out
or
es
jmp
inc
xor
inc
inc
je
imul
dec
mov
in
iret
sub
pop
xchg
or
js
aas
call
jmp
mov
xor
jecxz
jp
call
push
shld
mov
stc
ds
aad
je
dec
dec
jo
ficomp
test
popa
xor
(bad)
mov
push
xor
xor
mov
cmc
jl
push
mov
sbb
(bad)
out
jmp
mov
push
sbb
mov
mov
mov
mov
rcl
into
(bad)
ins
mov
ins
outs
clc
inc
xchg
stos
mov
xor
pop
lods
xor
enter
mov
jmp
mov
or
jmp
adc
fdiv
loopne
sub
dec
mov
nop
inc
mov
inc
enter
movs
div
dec
dec
jp
hlt
dec
outs
jo
outs
or
xlat
xor
add
cmovg
ins
js
ins
pop
add
shr
cwde
mov
sbb
pop
ds
lahf
ret
xchg
xchg
popf
xchg
jle
pushf
sti
syscall
sub
aas
int
fsubr
in
dec
out
into
(bad)
cmp
in
inc
lods
cmps
mov
leave
mov
lds
dec
push
dec
ins
xor
xor
imul
dec
xor
(bad)
stos
movs
sbb
cmp
(bad)
fwait
cmp
dec
(bad)
sub
dec
ja
jl
adc
into
push
fst
cmp
in
adc
jle
inc
jl
pop
cmp
pop
xchg
into
xchg
ror
cmp
or
je
cmp
push
lds
inc
and
or
enter
fild
clc
lea
ficom
push
jns
add
add
gs
jns
shr
cmp
mov
cmc
and
push
xor
dec
int3
ss
mov
xor
repnz
sbb
js
push
mov
push
inc
sbb
mov
cs
jmp
loop
jbe
(bad)
hlt
mov
iret
mov
inc
sub
mov
xor
push
mov
enter
adc
jp
jmp
mov
lods
div
cmc
cmp
daa
int3
xchg
mov
xchg
arpl
inc
mov
mov
ret
sti
lahf
jg
arpl
cmp
mov
scas
push
ss
(bad)
in
add
into
(bad)
push
adc
xor
mov
and
fs
or
mov
shl
or
dec
test
cmp
mov
jl
or
push
pushf
xor
test
dec
out
or
or
mov
pop
pushf
mov
cdq
cmps
mul
xchg
mov
mov
cs
adc
hlt
out
int
gs
jbe
test
rcr
push
xor
out
mov
xchg
ins
push
gs
mov
inc
popa
aaa
push
dec
ret
and
js
push
or
and
dec
push
hlt
jge
mov
or
jno
push
xchg
mov
jmp
and
shr
jmp
push
pop
pop
and
lock
push
fiadd
repz
xlat
mov
movs
add
loope
xchg
jmp
retf
jmp
jb
add
or
mov
shl
in
push
in
mov
xor
cmc
sbb
mov
outs
add
fsubr
or
mov
loop
shl
fwait
push
leave
push
jno
mov
arpl
cwde
adc
jge
out
adc
push
sbb
adc
xchg
mov
sbb
fild
js
scas
ret
pop
xchg
out
push
push
nop
inc
ret
loope
jns
repz
pop
pop
xor
stc
out
push
pusha
scas
or
cmp
outs
rol
loopne
add
xchg
cld
cmp
clc
mov
cmp
mov
inc
imul
inc
(bad)
pop
arpl
push
jo
or
or
jae
pop
push
cmps
or
popa
adc
loope
sub
call
loop
out
sbb
mov
sub
in
sub
repz
rcl
retf
push
out
sbb
cmp
or
jge
mov
je
rcr
rcr
sbb
mov
adc
jnp
(bad)
sbb
stos
sbb
or
imul
mov
test
out
jg
and
es
sahf
les
dec
sub
cld
fisub
test
aad
mov
pop
rcr
lahf
pop
sbb
ss
jmp
and
int
mov
mov
mov
jecxz
repz
xchg
clc
push
ret
mov
ja
adc
or
adc
pop
cmps
mul
ret
mov
pop
push
in
out
sub
push
and
mov
push
pop
sbb
scas
addr16
xor
and
or
or
div
loope
and
sub
ret
test
(bad)
pop
ror
retf
push
mov
jecxz
push
xchg
lock
adc
mov
sub
out
test
shl
xchg
inc
icebp
sub
in
in
jmp
mov
and
test
push
inc
sbb
add
fbld
xchg
int
mov
sub
loope
aad
lods
cmp
shr
int
mov
das
adc
push
(bad)
lods
push
mov
dec
sub
fiadd
xchg
mov
outs
movs
push
ret
imul
test
clc
jle
jbe
ins
mov
fdiv
les
pop
xlat
mov
jnp
sbb
dec
pop
or
inc
xchg
pop
jb
dec
aas
cmps
clc
test
cmp
jnp
in
call
push
fucompp
sbb
xchg
pop
xor
loope
cwde
outs
push
(bad)
jns
repz
or
sbb
mov
sahf
outs
mov
sbb
mov
pop
cli
mov
xor
or
cmps
xchg
inc
cli
jbe
gs
in
mov
fistp
hlt
cwde
inc
in
leave
clc
loope
inc
jb
mov
sbb
ret
pusha
or
sbb
xlat
pop
int
loopne
and
outs
out
arpl
dec
cs
dec
in
ss
scas
jp
(bad)
aam
add
rcl
sub
pop
sub
in
jge
jno
jae
add
push
jnp
int3
xor
lock
jbe
hlt
dec
mov
iret
push
xchg
xchg
jbe
dec
test
(bad)
dec
lahf
jo
fidivr
dec
mov
push
hlt
push
std
pop
les
test
and
sahf
ins
mov
sub
div
aaa
inc
dec
ret
cmp
and
out
(bad)
lods
cmps
cmp
scas
push
dec
pop
mov
sub
push
int
sub
jnp
inc
mov
jge
dec
jns
sahf
movs
ins
adc
cdq
cmp
sti
addr16
sbb
and
adc
jno
fisttp
pushf
xchg
dec
into
cmp
(bad)
pop
daa
in
ja
mov
and
fs
fimul
xor
adc
loope
movs
xor
clc
rcr
adc
mov
pusha
jae
loope
jmp
lea
mov
dec
stos
pop
(bad)
add
jo
jnp
out
clc
arpl
mov
xor
imul
jae
jmp
mov
push
hlt
jmp
sbb
popa
sub
xchg
sbb
jmp
cdq
aas
adc
sbb
std
aam
(bad)
sbb
out
out
dec
rol
retf
xchg
xchg
mov
dec
icebp
inc
cdq
add
cld
cmps
loopne
es
jne
xchg
or
xlat
adc
inc
movs
sbb
xchg
xchg
arpl
push
ja
loopne
dec
inc
pop
(bad)
jae
pop
sub
retf
jmp
xchg
test
and
out
jg
push
retf
in
sbb
mov
es
xchg
and
add
movs
pusha
loop
push
jmp
les
aaa
into
aad
pop
mov
test
sbb
aad
xor
outs
fsubr
ja
xchg
inc
mov
retf
pop
(bad)
and
add
movs
jae
mov
xor
inc
(bad)
ins
fdivrp
and
push
aad
in
xor
(bad)
call
dec
mov
js
mov
sbb
into
popf
add
scas
loopne
cmps
add
mov
(bad)
cmp
mov
sti
out
sbb
inc
jg
mov
and
fmul
arpl
rol
aad
jno
inc
ins
xlat
mov
xchg
sub
adc
dec
test
ss
adc
mov
sub
jg
mov
ror
je
jge
adc
sub
loop
leave
leave
jne
jmp
mov
shl
mov
push
fnsave
into
push
mov
test
adc
cmp
mov
imul
push
das
jge
cld
sub
xlat
inc
mov
add
jg
pushf
push
ret
xchg
pop
cmp
push
jl
jge
bnd
fcmovnu
(bad)
push
mov
mov
push
push
mov
ja
sbb
clc
ror
adc
cwde
dec
std
xor
cmp
lods
pusha
int
mov
(bad)
hlt
and
mov
adc
xchg
add
lods
mov
or
std
ja
sub
sar
lds
jg
daa
das
fs
rcl
addr16
push
imul
cmp
xor
pop
dec
add
std
xor
add
rcl
aad
mov
scas
in
sub
dec
push
pop
jmp
loopne
mov
icebp
jns
js
sbb
jns
add
pop
cmps
rcr
data16
je
mov
int
clc
xchg
push
or
cmp
daa
cmc
sbb
mov
je
in
in
jmp
fild
popa
inc
jnp
div
loop
mov
ja
inc
sar
jmp
mov
cmp
xchg
aad
test
dec
out
adc
jmp
ins
(bad)
inc
(bad)
push
addr16
in
shr
push
mov
(bad)
cmp
out
mov
pop
repz
jg
test
stc
nop
(bad)
fcom
outs
test
ja
scas
test
fisub
and
leave
cmp
sbb
add
arpl
cmp
add
add
add
xchg
cmp
add
add
jne
add
add
mov
add
add
add
adc
add
add
add
push
add
add
add
add
or
push
push
mov
add
add
add
add
add
dec
add
pusha
add
cmps
add
xor
adc
or
mov
cmps
mov
pop
jl
pop
adc
imul
xor
pop
cmps
or
jle
retf
imul
mov
out
push
movs
mov
lods
xchg
retf
daa
sti
lds
bound
jbe
or
cmp
dec
xchg
out
or
div
mov
adc
fdivr
mov
daa
jmp
mov
jg
fidivr
adc
fidivr
shl
dec
in
lea
stos
mov
jle
inc
movs
retf
movs
inc
fstp
lds
div
ror
lds
fidivr
mov
test
enter
repz
lds
mov
pop
out
pusha
leave
xchg
clc
je
add
arpl
xchg
pop
push
and
mov
jae
ja
cmp
add
push
sahf
and
(bad)
inc
jns
mov
mov
xlat
jae
leave
daa
sub
les
cvtdq2ps
sub
retf
mov
add
dec
mov
mov
dec
dec
sbb
pusha
into
cmp
mov
mov
push
jnp
outs
in
into
dec
ret
push
rcr
xor
ins
mov
pop
inc
sub
aam
cli
cmp
pop
push
cli
out
call
es
mov
xchg
sahf
inc
ja
cli
mov
leave
pop
aad
mov
jle
push
add
xor
test
adc
or
mov
dec
jmp
nop
push
mov
lods
jecxz
jp
adc
push
push
mov
push
sbb
nop
mov
jge
movs
pop
mov
sbb
and
mov
cdq
imul
fisubr
nop
or
in
xlat
mov
and
(bad)
div
iret
repz
inc
or
sbb
lds
and
inc
fwait
sub
add
push
stos
and
jnp
sbb
popf
loope
enter
sub
xchg
in
mov
ret
add
mov
mov
xlat
test
es
rcl
push
movs
ins
xor
mov
pop
mov
and
mov
cmp
dec
cmp
adc
shl
aas
xor
inc
(bad)
push
fisttp
sahf
inc
out
cli
jge
sbb
dec
push
fild
mov
cmp
call
stos
out
jnp
les
ja
cmp
push
aas
cmp
mov
push
and
les
xchg
dec
leave
push
push
push
enter
jbe
aaa
rcr
movs
ins
xchg
stos
or
and
mov
daa
pop
cld
mov
xchg
mov
or
int
sub
pop
outs
outs
jle
out
cmc
cmp
xchg
mov
mov
push
push
aas
or
mov
jecxz
and
ja
cmp
pcmpeqb
jmp
test
imul
retf
xor
and
pusha
sub
sbb
rol
add
fisubr
stos
std
xor
retf
push
pop
fcom
or
outs
pop
and
les
jecxz
jmp
mov
jns
sbb
lods
ins
out
arpl
add
lea
sbb
mov
add
jg
push
mov
fs
push
stos
ret
add
je
and
test
mov
jae
or
pop
cld
mov
pmullw
push
sar
sbb
xor
sbb
dec
sub
inc
fld
outs
call
out
mov
repz
cli
xchg
sub
push
sbb
or
stos
dec
int3
aam
or
adc
repz
mov
xchg
jecxz
add
pop
lds
imul
fmulp
ja
inc
adc
scas
adc
inc
rcr
ds
cmps
(bad)
ins
adc
pop
repnz
add
fidiv
jbe
rcr
rcl
pop
mov
sahf
out
add
push
adc
push
adc
fisttp
inc
pop
mov
adc
loop
adc
inc
fwait
xchg
mov
xor
push
(bad)
mov
mov
loop
ja
jl
sti
xchg
call
xor
sub
push
pop
sub
repz
daa
jge
call
enter
out
push
xor
mov
retf
js
fwait
jp
inc
or
inc
push
jne
in
mov
leave
sub
(bad)
jp
es
pop
xchg
xchg
xlat
and
push
loop
aas
jno
mov
sar
sbb
imul
cmp
push
(bad)
mov
cdq
std
jne
sahf
pop
ret
adc
xchg
cmps
xor
xor
add
jl
ins
call
(bad)
test
and
sub
aad
sub
bnd
fwait
inc
jle
out
ja
ins
fimul
(bad)
sbb
pop
xchg
pop
jbe
out
lea
inc
cmp
xor
push
mov
aam
iret
imul
int
out
sbb
or
jl
xor
or
dec
add
cmps
mov
cmp
iret
test
jmp
jne
mov
imul
cmp
jecxz
or
iret
mov
dec
mov
adc
xchg
mov
or
js
rol
fld
aam
aam
jne
repz
(bad)
xchg
inc
(bad)
div
jp
das
mov
sbb
out
pusha
pop
dec
pusha
scas
inc
mov
dec
sti
shr
sbb
and
push
daa
mov
inc
jnp
push
add
sub
adc
mov
movs
arpl
adc
(bad)
scas
in
nop
push
js
(bad)
retf
scas
inc
mov
sbb
movs
add
aas
pop
pop
fadd
shl
jo
jmp
(bad)
cdq
sti
aad
push
sub
pop
sbb
test
jae
into
pop
add
ds
in
push
je
inc
(bad)
mov
pusha
dec
sub
ficom
mov
loopne
add
(bad)
xor
loope
lods
mov
out
aaa
(bad)
pop
(bad)
fld
popf
iret
cmc
jo
enter
(bad)
in
imul
outs
and
cli
lahf
xchg
ret
cmp
or
fxch
xchg
out
dec
retf
adc
fdivrp
pop
push
ret
(bad)
jmp
inc
jne
imul
ins
push
or
(bad)
loope
inc
adc
ret
test
jo
jae
leave
push
jo
jle
pop
(bad)
cmp
lock
xlat
xor
inc
dec
xchg
xor
jo
pop
pop
inc
mov
or
in
scas
call
int
ret
les
sti
and
xchg
sti
idiv
add
(bad)
push
int3
jns
sbb
mov
xchg
pop
jbe
out
(bad)
mov
sub
test
mov
(bad)
icebp
(bad)
xchg
and
push
lahf
loopne
dec
dec
or
ret
into
sti
ins
stos
cdq
cmp
dec
or
repz
lea
cmps
push
sti
jmp
cmc
or
or
dec
adc
xor
xor
jmp
int3
lods
jle
and
mov
xchg
les
xchg
test
sti
cld
push
adc
retf
mov
cmp
mov
mov
dec
sub
ss
push
in
inc
inc
pop
(bad)
adc
push
or
ret
jl
mov
int3
mov
mov
dec
jecxz
add
es
aad
jp
sub
aaa
idiv
or
mov
fldcw
rep
pushf
cmp
adc
out
sub
inc
cmps
(bad)
sub
icebp
mov
ss
shl
push
jge
jl
mov
out
mov
(bad)
and
movs
dec
mov
pop
xor
mov
je
movs
test
lock
xor
in
adc
cli
sub
and
fist
xchg
cmc
ins
into
or
pusha
push
xchg
gs
fimul
cwde
xor
jae
ret
sub
fs
or
fild
add
enter
xchg
out
rcr
mov
push
xchg
jne
int
mov
xchg
or
(bad)
out
and
pusha
lahf
loope
push
xchg
sbb
dec
cwde
(bad)
mov
xchg
retf
movs
add
sub
mov
inc
fwait
lock
jo
mov
or
xchg
inc
retf
dec
sub
jne
ins
in
add
inc
je
in
pop
ret
imul
test
mov
pusha
(bad)
push
retf
loop
push
push
mov
out
fptan
hlt
mov
call
dec
pop
cmps
lahf
cmps
and
mov
in
mov
add
dec
mov
jnp
jno
in
cmp
jne
cwde
lock
call
push
cmps
sub
cmp
jno
outs
mov
and
ins
mov
fwait
dec
sub
hlt
push
daa
ins
xor
ss
lahf
fnstsw
xor
pop
adc
scas
mov
into
mov
aad
dec
in
daa
cmp
sub
dec
enter
outs
retf
mov
je
mov
addr16
popf
sub
lea
hlt
adc
mov
call
sbb
mov
loope
add
fistp
adc
xchg
push
mov
mov
std
jo
in
jge
lahf
lock
mov
pusha
out
cmps
lods
nop
and
or
xchg
xchg
sbb
push
lahf
ss
xchg
imul
aam
ret
push
in
imul
mov
ss
xchg
inc
sbb
mov
aaa
xor
(bad)
push
jmp
dec
mov
cmc
cmp
rol
push
jo
shl
xor
addr16
mov
out
cmps
ins
sbb
(bad)
push
stc
into
adc
xchg
push
cmps
fwait
dec
movs
sub
out
frstor
ds
sbb
fisubr
push
mov
push
adc
adc
cli
lods
fistp
mov
sbb
cmp
outs
push
sbb
js
xor
add
in
retf
dec
mov
add
iret
arpl
call
xor
js
bound
out
test
mov
pop
mov
pop
scas
aas
sbb
fsubr
out
(bad)
div
add
fs
xchg
sahf
test
out
(bad)
mov
sub
fwait
push
popf
cs
or
data16
rcr
inc
mov
and
dec
enter
pop
push
push
adc
lods
fidiv
cmp
retf
daa
ins
sbb
gs
ffree
out
das
xor
mov
sub
xor
mov
mov
inc
pop
mov
cdq
ja
bound
jmp
jne
out
xchg
inc
sub
aad
mov
test
aad
mov
repnz
push
pop
sub
jle
adc
add
mov
popa
add
call
mov
iret
xor
add
add
add
add
add
dec
add
lea
adc
add
daa
add
add
sub
add
add
add
add
add
retf
add
lods
add
cwde
add
add
add
add
xchg
add
jnp
out
add
add
jbe
add
retf
add
lods
add
add
add
pop
lea
add
add
pop
push
(bad)
adc
jmp
xchg
in
mov
dec
sbb
lods
inc
sub
mov
loopne
jb
mov
fsubrp
ins
out
fs
xchg
dec
dec
adc
mov
adc
loopne
sub
ret
jg
jecxz
pop
pop
push
jmp
aas
sbb
cmc
inc
cmp
mov
shl
int
xchg
xchg
(bad)
in
pushf
data16
popa
sbb
cli
fwait
dec
xor
mov
add
inc
fld
mov
std
retf
icebp
popa
dec
out
mul
cmp
int
jb
loopne
les
jno
mov
cdq
xor
or
sbb
mov
xchg
stos
add
sub
xchg
(bad)
and
sub
loope
out
or
mov
dec
les
leave
push
cdq
jg
iret
test
inc
and
push
and
mov
lds
xchg
xor
inc
inc
cs
jmp
lock
(bad)
fsubrp
sub
jmp
add
addr16
xor
inc
pop
jl
mov
mov
jle
sbb
xor
out
pop
fdecstp
pop
jle
(bad)
es
inc
out
dec
and
mov
xchg
xor
sub
push
or
jl
xor
dec
dec
adc
or
push
xchg
mov
cmps
sub
xchg
nop
cmp
inc
lahf
or
ins
mov
call
mov
sbb
or
and
sbb
push
xchg
mov
mov
jp
in
movs
ror
xlat
xchg
sbb
adc
jo
sbb
inc
mov
cdq
int3
xchg
out
jns
shl
dec
ins
(bad)
cdq
xchg
jg
cli
cmp
mov
cmp
jl
call
cmp
jne
aas
mov
(bad)
ja
push
push
fcmovnu
js
pop
and
jl
fwait
ss
adc
call
das
pop
xlat
cmps
jg
call
or
sbb
(bad)
pop
movs
cmps
cmps
and
pushf
ror
jmp
leave
std
dec
xor
fnstsw
call
(bad)
mov
fst
or
ins
mov
inc
sahf
dec
leave
pop
mov
dec
leave
push
lds
inc
stos
cmp
jp
jmp
out
imul
cmp
cmc
loope
mov
jmp
arpl
add
shr
jecxz
pop
movs
or
xchg
stos
retf
push
push
nop
jns
in
sbb
mov
mov
push
dec
jns
in
cmp
mov
test
xor
jmp
push
das
lods
dec
in
(bad)
addr16
adc
mov
dec
ror
dec
repnz
or
sbb
or
loop
rol
mov
xchg
mov
imul
jp
out
push
jae
mov
inc
inc
retf
movs
ret
mov
pop
shl
adc
or
jle
inc
or
in
jno
lea
je
leave
xchg
push
dec
push
mov
sar
adc
push
nop
push
xor
jbe
sbb
jle
outs
xchg
mov
lea
push
clc
mov
call
fisttp
stos
sbb
add
xor
sar
cmp
mov
imul
fimul
aaa
pop
pushf
repz
stos
mov
dec
cmp
adc
sbb
dec
jmp
adc
push
mov
sbb
shr
int3
jmp
adc
sar
dec
mov
jl
pushf
gs
hlt
call
fdiv
dec
clc
stc
inc
and
iret
int3
es
das
jns
add
iret
cmp
mov
sbb
aas
mov
movs
dec
inc
arpl
push
aad
pop
sbb
adc
xchg
add
fdivr
mov
jnp
lea
cmc
mov
cld
or
test
mov
pop
cmp
mov
pop
cwde
out
inc
pop
push
and
jmp
das
loop
lds
push
xchg
daa
jg
mov
cmp
jno
lods
ror
jmp
xchg
lods
mov
into
inc
push
push
jmp
out
(bad)
nop
and
jmp
pop
dec
into
dec
add
scas
push
and
ins
pop
xor
sbb
lea
mov
call
mov
jp
movs
repnz
repnz
or
mov
in
cld
and
(bad)
sub
pop
lods
fwait
stos
ins
cmp
dec
cmps
jp
xor
mov
fcomp
lods
pushw
sar
iret
dec
and
std
xchg
hlt
sub
sbb
push
popa
lock
sbb
jns
dec
dec
test
dec
cmp
mov
sub
jge
or
jns
sub
jl
jb
inc
cmps
ins
adc
clc
mov
push
movs
or
int3
out
stos
iret
sbb
lods
mov
clc
and
std
imul
push
mov
cmp
xchg
mov
ret
mov
in
dec
xchg
jmp
pop
hlt
xor
int
mov
mov
mov
test
cmps
out
test
add
(bad)
mov
xor
sbb
bound
dec
mov
cmp
push
jl
and
shl
mov
and
dec
mov
xor
adc
add
sbb
mov
retf
pop
loopne
das
scas
add
in
adc
cmp
fst
jmp
jp
addr16
push
pop
and
loopne
dec
scas
adc
not
pushf
call
mov
ins
jmp
sbb
dec
ins
xor
rol
test
pop
or
and
stos
pop
lods
sbb
pop
mov
jbe
call
int
sbb
add
sbb
add
test
leave
sub
xor
test
xchg
xlat
cmp
pop
adc
cmps
je
jo
(bad)
loope
sbb
(bad)
out
dec
cmp
inc
xchg
sbb
test
mov
cmp
cli
or
in
and
cwde
in
inc
cmp
sub
xlat
out
jo
lea
xchg
or
sub
fwait
ja
test
daa
movsx
or
out
sub
rol
icebp
or
sahf
push
mov
in
and
xchg
(bad)
clc
stc
push
outs
adc
imul
xchg
jns
and
out
inc
jp
jge
cmp
jb
inc
arpl
ss
adc
lods
mov
and
pusha
cld
sbb
mov
and
mov
pop
mov
fmul
rcr
or
mov
mov
jnp
in
not
sub
pop
cmp
or
rcl
popa
inc
mov
and
repz
pop
in
fucompp
jmp
add
cwde
(bad)
sbb
pop
mov
adc
lods
pushf
and
movs
sub
sub
leave
in
fadd
xor
xchg
cmp
sub
jae
leavew
or
ret
pop
into
or
push
xor
or
movs
enter
jg
push
sbb
repz
mov
add
stc
or
pop
mov
movs
jecxz
dec
or
stos
cmc
mov
les
sbb
add
xchg
adc
add
jg
sub
fwait
adc
cld
loopne
pop
pop
arpl
(bad)
enter
mov
movs
fcomp
fistp
or
dec
cli
sub
adc
adc
(bad)
xlat
js
push
jle
das
xchg
mov
mov
mov
xchg
daa
adc
ret
add
sbb
fild
int
mov
test
mov
dec
fadd
int
pop
inc
mov
sbb
in
je
data16
mov
mov
or
xor
cmp
or
movs
ss
and
cmp
jnp
mov
fsub
jge
daa
in
push
push
(bad)
xchg
aas
mov
or
and
mov
ret
pop
sbb
jmp
xchg
dec
mov
rol
inc
and
out
or
pop
push
mov
dec
in
push
inc
mov
ror
mov
outs
push
and
rcr
xchg
rcl
sti
movs
xor
hlt
push
push
push
stos
sti
ins
mov
jno
lea
call
movs
push
(bad)
cmp
fild
mov
fisubr
in
xchg
ins
dec
pop
jp
dec
in
push
jae
pusha
sbb
pushf
dec
or
pop
xor
movs
movs
je
xchg
stc
lods
push
push
adc
or
(bad)
mov
stos
mov
mov
or
or
xchg
xchg
ss
shr
inc
fist
xchg
mov
jg
shl
loop
pushf
out
out
(bad)
repz
ret
out
std
(bad)
into
and
ror
push
test
je
xor
xchg
cmps
adc
ja
out
fadd
adc
enter
xor
jp
mov
test
cmc
adc
stc
dec
cmp
in
mov
push
and
cwde
add
xchg
adc
icebp
mov
imul
xor
xor
icebp
movs
in
sahf
xchg
jns
cmps
jmp
mov
stos
and
in
push
cmp
adc
scas
in
(bad)
int
(bad)
inc
gs
popa
rcr
pop
or
and
and
xor
and
inc
cmp
bound
mov
je
add
xor
imul
mov
xchg
out
dec
ret
inc
test
mov
mov
arpl
hlt
and
(bad)
jmp
jbe
pushf
jb
inc
aam
xor
mov
retf
xlat
out
push
adc
scas
jb
fild
jecxz
sub
push
das
cmp
xlat
or
das
test
shl
sbb
xor
pop
sub
neg
jecxz
mov
adc
clc
mov
pop
(bad)
ficom
call
inc
push
dec
icebp
or
mov
ins
cli
stc
mov
add
pop
in
fwait
(bad)
and
popf
imul
lods
jmp
int
dec
shl
aad
not
dec
push
push
movq
xchg
scas
ds
daa
push
inc
sbb
fsubr
inc
xlat
sbb
cs
fwait
clc
or
dec
pop
adc
inc
and
jno
call
cwde
xor
stos
jecxz
mov
pop
sub
or
test
arpl
jl
in
inc
mov
add
add
add
add
add
add
add
add
add
stos
dec
aad
add
add
xchg
add
add
add
and
add
add
arpl
add
add
add
add
add
popa
add
sbb
add
add
add
add
fld
fstp
add
add
add
add
add
add
add
add
add
add
add
add
add
add
xor
add
add
add
pop
add
add
mov
add
pop
add
add
add
movs
add
add
add
add
add
or
inc
pop
add
adc
add
add
jmp
cli
add
stos
add
jno
add
add
push
add
cmp
jb
pop
popa
add
add
add
add
pop
add
cmps
add
add
cmp
add
jbe
mov
test
in
aam
dec
das
mov
rcl
gs
fwait
xor
daa
pop
hlt
shr
inc
fimul
mov
mov
dec
pop
jne
je
pop
fsubr
xor
mov
in
pop
pop
sahf
cld
jmp
adc
pop
pop
mov
and
xchg
scas
(bad)
retf
lods
sub
mov
lods
mov
mov
dec
cmp
outs
cmp
test
je
push
out
pop
lods
mov
mov
push
scas
cmp
xchg
sub
das
push
push
ret
(bad)
xchg
sub
ret
dec
out
inc
bound
test
pop
repz
sub
jecxz
adc
and
dec
test
push
into
lahf
arpl
cmp
adc
das
call
retf
fidiv
sub
dec
shr
adc
inc
pop
xchg
les
sbb
jae
jno
jmp
add
push
das
xchg
or
jge
mov
ficomp
jae
jecxz
or
sbb
(bad)
loopne
test
loop
out
repnz
pop
jl
cli
dec
lods
push
sar
fiadd
add
inc
loopne
(bad)
and
jge
xor
jno
cli
push
mov
mov
jb
out
push
and
in
push
repz
adc
push
and
jo
push
add
fwait
or
adc
xchg
sub
mov
push
lods
(bad)
loope
push
leave
mov
fs
push
xchg
(bad)
mov
cdq
sbb
mov
sahf
push
call
pop
cmp
mov
test
loope
lock
cmps
(bad)
stos
stos
sbb
cmp
inc
sub
jge
xchg
js
not
(bad)
adc
add
push
lahf
mov
icebp
xchg
push
out
push
movs
inc
or
cs
cdq
xchg
add
outs
cwde
adc
or
ins
and
adc
adc
mov
cs
inc
mov
test
adc
hlt
nop
dec
pop
mov
jbe
aaa
into
lods
adc
stc
adc
jg
and
shr
jp
dec
cwde
loopne
or
not
mov
jge
cmp
mov
lock
lock
dec
dec
sub
sub
cwde
push
and
add
xchg
cmp
push
mov
jp
ss
jmp
mov
ror
in
ins
mov
mov
into
and
scas
push
jbe
aaa
arpl
cli
fwait
cmp
add
push
ds
loope
pop
jno
push
pmuludq
pop
cmc
push
adc
xchg
in
(bad)
cmc
inc
pop
cs
aas
sahf
ja
mov
mov
cmps
repz
aaa
cmp
dec
pop
inc
add
icebp
loopne
fcmovnb
jl
adc
and
or
adc
cmps
popa
sub
shl
aam
mov
js
in
mov
xchg
fistp
mov
adc
pop
push
jbe
mov
data16
dec
dec
push
mov
xor
adc
clc
mov
btc
inc
and
xchg
cmp
push
addr16
mov
jg
adc
cmp
push
xchg
scas
sub
test
push
dec
sub
sub
shl
mov
aam
es
in
lods
push
jbe
movs
pop
data16
loopne
ds
and
aas
mov
pop
xor
cmp
int
icebp
mov
mov
xor
and
test
in
stc
jp
jg
push
mov
(bad)
cmp
sub
pop
ins
test
pop
into
pop
sar
pop
mov
fnsave
out
inc
dec
or
ins
push
push
push
fcom
in
ds
or
fidiv
scas
out
pop
jg
stos
lods
push
and
mov
rol
or
or
(bad)
cmps
sub
cmps
lods
test
jno
retf
xor
aaa
in
adc
outs
(bad)
dec
push
sbb
shr
pop
cmps
fmul
xchg
scas
loope
mov
cmp
adc
xor
xor
outs
mov
aas
mov
cdq
outs
inc
(bad)
jae
int
aaa
mov
cmp
jmp
(bad)
imul
daa
loop
push
xlat
push
mov
jns
pop
and
pop
shl
sub
jae
ret
push
adc
add
push
stc
mov
jb
ja
mov
ds
xchg
adc
adc
test
std
loopne
shl
in
mov
jmp
push
stc
mov
dec
lahf
sbb
std
icebp
(bad)
lds
xor
mov
push
movs
std
ins
push
(bad)
imul
xchg
xchg
out
stos
aam
leave
adc
rcr
push
jecxz
mov
repz
in
in
mov
cli
ret
adc
sub
push
jnp
fstp
cmp
sahf
ins
call
dec
(bad)
mov
add
jmp
sti
xor
jns
jne
ja
jmp
imul
cli
idiv
aam
or
fsub
mov
es
ss
push
cmp
push
in
stos
lock
cmp
xor
push
fs
data16
dec
push
repz
jnp
cmps
dec
xchg
out
xor
das
mov
sbb
imul
inc
pop
ds
and
xchg
sbb
pop
imul
shl
jb
cmp
repz
mov
das
pop
jmp
addr16
or
sbb
out
cmp
shl
fdiv
pop
outs
ja
jmp
adc
cmp
popa
push
das
adc
cmp
ror
jge
adc
mov
outs
outs
popa
loop
imul
repnz
outs
jnp
xor
lahf
iret
mov
fs
cmp
hlt
test
(bad)
cld
and
xchg
in
into
cmp
dec
lahf
ret
jmp
and
inc
dec
lods
jmp
inc
hlt
aaa
pop
pop
shl
xor
jecxz
lds
(bad)
std
sbb
pop
sub
sbb
xlat
into
stc
push
int
shl
cmp
enter
inc
sbb
dec
adc
pop
add
push
cmps
push
lock
jg
or
in
fild
sub
xor
push
sub
sbb
(bad)
mov
pop
mov
and
enter
call
xchg
shl
int
xchg
push
pop
loopne
adc
sti
outs
dec
clc
inc
push
push
(bad)
mov
mov
cmp
jg
add
in
in
inc
adc
pop
leave
rcl
sub
(bad)
lock
xor
mov
ja
iret
jbe
xor
xchg
or
in
int3
sti
(bad)
in
pushf
push
repnz
stos
xchg
jp
push
mov
rcl
fistp
scas
push
dec
push
outs
fwait
xchg
mov
cmps
mov
sti
inc
adc
in
jo
jecxz
and
dec
ret
(bad)
or
imul
sti
ret
test
sbb
or
push
mov
iret
ret
shl
xor
iret
mov
pop
out
mov
daa
pop
pop
leave
shl
cli
fisub
not
das
mov
pop
adc
xchg
repnz
xchg
(bad)
cmc
int
mov
loopne
sub
dec
sar
lahf
sub
clc
and
pop
(bad)
out
call
nop
bound
inc
fsubr
jo
cmp
or
into
jg
cmps
push
fs
mov
cmc
loopne
fdivrp
ds
xadd
add
loope
xchg
mov
movs
pop
bound
adc
adc
push
gs
jbe
pop
pop
sbb
test
xchg
(bad)
fidiv
inc
xchg
les
inc
jmp
add
and
jb
scas
sub
push
cdq
sub
aaa
inc
aam
add
push
imul
cmps
xchg
das
sahf
and
gs
lock
mov
xor
stos
xchg
cdq
add
xchg
dec
daa
and
pop
jle
sub
cmp
adc
or
enter
rcl
cdq
dec
leave
into
imul
adc
xchg
ins
cmpxchg
jl
pop
not
adc
mov
inc
fsub
push
dec
lods
or
outs
pop
out
arpl
push
ret
mov
mov
add
mov
aaa
xor
mov
addr16
in
xchg
adc
or
fwait
sub
mov
movs
test
jp
inc
fdivr
xchg
loope
ss
sub
pop
xchg
inc
inc
arpl
or
add
mov
pop
leave
sar
jnp
mov
lock
push
dec
fild
lea
imul
mov
aam
out
sbb
mov
in
cmp
iret
sub
into
sbb
pop
mov
dec
push
xor
dec
dec
cmps
or
adc
mov
jmp
push
jmp
adc
stos
or
stos
lods
and
dec
pop
add
pop
mov
jmp
push
or
jg
cmp
push
jbe
loop
xor
loopne
arpl
popf
dec
add
add
push
lods
jnp
mov
in
pushf
xchg
push
cmp
imul
mov
arpl
imul
jp
inc
xchg
cvtps2pd
and
sub
ds
fwait
movs
cmp
mul
inc
or
jecxz
xchg
jp
sbb
pop
sbb
xchg
push
shl
pop
xor
retf
xor
cdq
out
test
stos
out
pop
jecxz
call
test
push
ret
xlat
mov
jno
cmp
stos
idiv
cwde
jle
sbb
mov
cmc
mov
jae
in
jp
sub
sbb
and
(bad)
ja
js
inc
sub
stos
int
fwait
mov
pop
sub
mov
div
sbb
(bad)
pop
adc
push
xchg
fwait
(bad)
std
jmp
mov
int
jmp
sbb
aaa
xchg
xchg
sahf
and
outs
cmp
and
inc
cmp
ins
(bad)
adc
rcr
sub
push
xlat
pop
mov
mov
fwait
mov
js
dec
in
push
xchg
movs
adc
adc
cmc
mov
adc
adc
or
test
call
xchg
test
sbb
dec
es
loopne
sub
mov
lock
fidiv
xchg
lds
int3
fsub
hlt
adc
(bad)
ja
pushf
aas
mov
and
xor
ja
fadd
lahf
sbb
and
add
nop
ins
in
xor
add
add
mov
sbb
add
add
xor
add
add
add
add
add
imul
add
add
add
add
jle
add
add
add
add
add
add
add
xor
add
add
loope
push
add
add
add
add
mov
popf
add
add
add
add
add
add
jmp
add
add
add
dec
add
add
add
arpl
add
add
mov
push
add
add
add
add
add
add
add
add
add
add
add
mov
add
add
mov
add
pop
mov
add
add
out
add
push
add
add
add
rol
inc
int
das
and
add
add
add
dec
add
xchg
lea
daa
add
add
add
popa
and
jno
add
add
in
inc
add
pop
add
add
add
add
add
add
(bad)
or
add
rol
inc
add
add
add
add
add
add
add
add
adc
add
pop
add
add
add
add
add
in
add
xchg
mov
add
add
add
add
push
add
add
add
add
add
add
add
add
add
add
mov
add
add
sbb
out
add
add
add
add
add
add
leave
mov
add
std
add
add
add
sub
add
add
add
add
add
add
add
mov
add
add
sub
add
add
add
add
add
jl
add
add
add
add
add
add
scas
add
add
add
xor
add
add
sbb
add
add
add
add
adc
add
add
add
add
add
cmc
add
add
add
cmp
add
xor
in
mov
repnz
mov
dec
shr
pop
in
lahf
mov
mov
scas
arpl
enter
jae
rcl
push
pusha
inc
and
jle
sbb
jl
in
mov
jbe
shr
xchg
mov
and
ss
daa
imul
gs
push
cwde
icebp
fsub
div
aad
xor
sub
adc
xor
in
aas
inc
loopne
ret
sub
ja
mov
pop
ret
das
pop
or
ss
call
out
mov
movs
das
arpl
cmp
nop
jo
jnp
scas
pop
cmp
jne
cmp
mov
test
xchg
dec
add
ret
in
fstp
je
ss
mov
aam
sub
in
xchg
cmp
(bad)
inc
push
scas
mov
ja
ret
call
fwait
jbe
mov
movs
xlat
or
add
add
jbe
(bad)
stos
mov
jecxz
push
fdiv
mov
dec
std
stos
fcmovnu
outs
cmp
xor
mov
sbb
arpl
mov
xchg
into
mov
out
sub
dec
pushf
push
mov
ret
ficom
adc
lock
pop
adc
cmp
push
push
loope
fs
inc
aam
dec
lock
aam
daa
ja
jg
in
pusha
mov
ins
xor
in
aaa
outs
hlt
aam
aam
push
xchg
push
jne
mov
clc
jmp
call
add
lock
mov
fsub
sub
cmc
mov
addr16
push
cmc
cmp
and
mov
sbb
call
ja
mov
aam
std
pop
sub
jbe
cmp
repz
gs
push
shr
aad
mov
mov
fst
cmps
lds
mov
shl
or
out
loop
aaa
add
mov
fwait
mov
lock
jae
shl
sahf
sub
mov
ffreep
inc
push
adc
jmp
ret
mov
dec
icebp
dec
pop
js
loope
ficomp
push
je
push
(bad)
faddp
(bad)
sub
fs
fst
dec
mov
enter
es
mov
iret
call
movs
xor
(bad)
mul
in
leave
scas
inc
push
loopne
cmp
popf
jae
mov
leave
push
pop
pop
out
xchg
mov
dec
fnstcw
icebp
cmp
mov
dec
lds
iret
pop
jbe
jbe
dec
xor
push
jmp
inc
mov
pushf
and
je
push
stc
cmp
leave
sub
mov
mov
dec
dec
xchg
dec
jo
xor
xor
xchg
add
das
mov
fs
lods
scas
and
dec
data16
cmps
cs
mov
movs
or
dec
xor
in
and
scas
mov
add
and
mov
scas
call
test
mov
fdivr
retf
or
ret
inc
aad
xor
push
xchg
mov
sub
fst
sbb
jno
out
sbb
inc
push
jge
jg
xchg
push
jmp
loope
cmc
ins
aam
jg
xchg
fcos
in
sahf
mov
sbb
mov
sbb
mov
pop
imul
and
sbb
jmp
pop
imul
mov
outs
push
or
jp
loopne
outs
mov
pop
mov
(bad)
clc
out
mov
jge
(bad)
scas
cdq
or
movs
push
je
ins
cmps
pop
push
mov
(bad)
dec
les
inc
mov
mov
in
(bad)
dec
cmc
imul
and
(bad)
(bad)
ror
lds
loop
es
ret
jl
call
daa
sbb
and
imul
cwde
dec
jl
pop
fs
cmp
xchg
or
(bad)
ds
ds
jb
mov
repnz
loope
mov
xor
imul
ret
ins
sbb
inc
mov
imul
std
sar
fnstcw
sbb
jno
jecxz
(bad)
fcmovbe
inc
cmps
push
inc
outs
lds
loope
push
in
lea
ret
cmp
scas
push
xchg
cmps
cmp
cmp
loope
lods
jle
leave
mov
add
pop
std
cdq
dec
jne
int3
enter
rcl
pusha
sub
stos
dec
jae
icebp
std
mov
dec
gs
js
push
in
jo
xchg
jg
sub
add
and
clc
aad
scas
ja
lds
jge
sub
mov
pop
stos
out
mov
mov
sti
add
test
xchg
mov
adc
sbb
xchg
retf
shr
jecxz
mov
mov
mov
test
push
cmps
enter
les
pop
and
jmp
daa
dec
rcr
popa
pop
rcr
xchg
xor
push
jmp
add
pop
dec
pop
mov
mov
les
or
push
sub
xchg
pop
icebp
push
jecxz
sub
cmp
jno
cmps
cmps
sbb
push
xchg
mov
(bad)
push
adc
mov
clc
mov
or
jp
mov
mov
cmp
ds
iret
popa
loop
inc
lods
outs
cdq
enter
sbb
inc
not
xor
jne
int3
add
fcomip
mov
jecxz
xchg
into
movs
mov
jno
mov
cmp
xor
test
sbb
xchg
xor
fimul
xor
cdq
mov
out
aaa
outs
jbe
inc
sbb
div
mov
mov
xor
pop
mov
sti
cmp
or
addr16
mov
or
xchg
fs
ret
pop
add
pop
addr16
out
fstp
ds
cli
xlat
dec
cmp
mov
daa
jmp
or
or
mov
xor
rcr
pusha
mov
rcl
shl
and
mov
aas
dec
int3
mov
adc
nop
sbb
clc
dec
ss
mov
push
jb
lea
cmp
lds
xor
push
in
test
(bad)
pop
mov
cdq
sbb
loopne
iret
out
pop
pushf
into
imul
push
lea
(bad)
je
add
popf
pushf
imul
jnp
popf
cmp
into
pop
mov
cwde
iret
lock
sub
pusha
ficom
lahf
(bad)
xchg
mov
cmps
mov
mov
sub
cmp
adc
inc
aas
lahf
repnz
retf
movs
(bad)
pop
(bad)
push
mov
inc
jp
xor
cmp
xchg
xchg
adc
push
es
stos
sbb
(bad)
push
xchg
push
(bad)
jp
call
pop
and
(bad)
(bad)
test
loop
xor
call
out
shl
inc
pop
dec
test
cmp
movs
(bad)
test
mov
in
scas
dec
add
cmp
popa
ja
leave
icebp
movs
(bad)
push
push
retf
jmp
jbe
sbb
sub
call
es
jnp
add
inc
retf
inc
test
sbb
mov
in
dec
ficom
add
or
adc
jbe
daa
std
cdq
mov
push
ins
add
enter
scas
stc
xchg
cmc
cmp
shl
sub
retf
dec
jne
mov
out
pop
dec
add
scas
stc
sbb
repnz
add
test
movnti
mov
mov
adc
fs
inc
and
mov
cmp
cli
imul
sti
dec
jl
or
imul
icebp
sub
sti
xor
clc
loop
jecxz
nop
push
mov
and
jecxz
fcomp
(bad)
lock
mov
add
adc
jmp
pop
lock
fimul
bound
cmp
sahf
push
enter
std
pop
retf
test
imul
imul
pop
pop
push
cld
xchg
xlat
shr
shr
je
mov
push
inc
call
and
cs
sbb
pop
or
jno
mov
aam
or
leave
arpl
jg
sti
hlt
out
and
loop
icebp
out
outs
adc
mov
pop
loope
in
enter
fwait
adc
in
mov
mov
sub
ror
scas
mov
push
push
js
mov
outs
xchg
nop
ss
fidiv
aas
enter
ds
sbb
leave
aad
jl
call
nop
or
sbb
fisttp
movs
inc
or
add
int
(bad)
dec
ins
jne
mov
or
pop
add
sub
loope
clc
xor
xchg
inc
fiadd
sub
not
adc
pop
js
stc
mov
mov
popf
cmps
mov
sti
stos
add
and
xor
outs
cwde
stos
stos
popaw
les
mov
ss
inc
pop
in
jge
push
sbb
icebp
mov
inc
cdq
inc
pop
mov
aas
inc
fstp
outs
dec
adc
pop
dec
clc
add
sbb
and
je
or
fbstp
jl
dec
mov
fld
xor
xor
je
inc
aad
pusha
xlat
in
push
mov
fadd
jmp
and
or
aaa
outs
xchg
sub
pop
add
pop
xchg
jae
push
push
icebp
aam
dec
or
sbb
test
xor
or
pop
mov
dec
ret
inc
mov
std
jmp
jae
adc
dec
aad
mov
call
pop
sbb
pop
dec
retf
movs
(bad)
cwde
neg
int3
aad
jecxz
sub
es
fwait
or
jecxz
scas
mov
cmp
ins
clc
cli
cmp
push
dec
aaa
jl
jl
cmp
fsub
pusha
cmp
sub
clc
xor
aaa
mov
pop
add
and
xor
in
sub
inc
in
sbb
dec
fcomip
cld
adc
fcom
sbb
retf
cmc
in
or
pop
or
retf
icebp
xchg
cmps
pop
cwde
cmp
out
dec
data16
jmp
push
sar
aam
or
enter
in
leave
mov
sbb
pop
mov
dec
rol
or
add
xchg
cmp
iret
sbb
inc
jg
dec
(bad)
call
dec
rol
out
addr16
in
cmp
dec
xor
xchg
xchg
jne
inc
cld
jns
dec
(bad)
lods
xchg
dec
lds
je
pop
sbb
cmp
fcmove
test
sub
pop
movs
push
aad
jge
adc
pop
and
dec
rcr
push
adc
rol
pop
aad
(bad)
in
mov
fwait
aaa
out
leave
idiv
dec
add
add
add
add
add
mov
add
add
add
pushf
add
add
add
add
mov
add
add
add
add
and
add
call
pop
add
add
add
add
in
add
xor
add
add
add
add
add
xor
addr16
jbe
add
add
add
add
jmp
pop
or
mov
add
add
add
add
je
add
push
add
add
add
jns
add
add
add
dec
add
lahf
add
add
or
add
add
add
add
add
test
add
add
add
add
add
add
dec
add
add
jne
add
add
hlt
add
mov
add
add
add
adc
add
add
add
add
add
sbb
add
sbb
add
mov
add
add
mov
mov
add
add
add
add
add
add
add
push
add
add
add
das
add
add
add
add
mov
add
add
add
add
mov
add
add
add
cwde
add
add
add
add
add
add
xchg
add
fistp
add
jne
add
add
test
add
add
add
add
add
test
add
icebp
add
add
add
add
add
dec
add
ds
add
add
add
add
add
add
add
push
mov
inc
mov
(bad)
adc
imul
pusha
mov
scas
mov
(bad)
sbb
mov
cdq
test
mov
push
pop
dec
dec
sbb
sub
ins
cwde
(bad)
fdiv
imul
jg
inc
add
mov
repnz
out
xchg
and
and
stos
dec
shr
xor
jmp
je
jmp
inc
repz
pop
ret
and
test
test
xchg
fcmovnb
xchg
mov
mov
stos
pop
out
and
mov
mov
push
adc
cs
push
getsec
lds
nop
cmps
lds
push
test
jns
movs
add
movs
lds
add
int3
mov
es
push
(bad)
mov
cwde
retf
retf
mov
xchg
jmp
dec
cld
bsf
(bad)
dec
push
sub
out
movs
out
xor
cmps
adc
add
imul
(bad)
rcl
fs
mov
cwde
test
dec
inc
popa
addr16
lds
clc
shl
unpckhps
sub
popa
js
mov
sub
pop
mov
imul
cmp
shr
scas
adc
xor
cmp
popf
xor
sti
xor
(bad)
xor
outs
into
jle
lds
mov
add
fimul
inc
loope
dec
ror
fld
jg
adc
jl
sub
sbb
test
dec
jo
or
xchg
push
pop
jl
in
adc
rcr
sbb
xchg
(bad)
jmp
sti
icebp
jne
and
inc
fst
push
xchg
push
push
outs
es
sbb
sbb
mov
inc
ss
adc
xor
mov
xor
jnp
call
(bad)
cmp
std
add
rcr
mov
jecxz
daa
and
push
js
or
mov
cli
xor
push
mov
push
xor
inc
xchg
push
push
aam
sub
ins
mov
sti
push
iret
mov
bound
inc
cmp
ins
jmp
xchg
dec
fwait
add
ret
iret
dec
jmp
mov
or
mov
mov
retf
mov
cmp
(bad)
push
push
cmp
xchg
adc
std
in
ret
adc
sub
in
sbb
fdiv
retf
and
lods
sbb
sbb
icebp
sub
addr16
inc
(bad)
mov
sbb
inc
pop
pop
ds
sti
mov
sti
mov
and
call
adc
xlat
lods
aad
lahf
dec
je
or
outs
mov
addr16
ret
xchg
sub
and
cmc
add
xchg
xchg
test
sbb
imul
inc
mov
leave
test
vminps
xchg
or
push
mov
cmp
jns
mov
mov
lock
sub
ret
and
loopne
add
pusha
cli
scas
iret
sub
push
data16
loopne
jno
pop
add
pop
fist
lea
mov
cmc
cmp
mov
ja
mov
mov
dec
mov
sahf
daa
pop
pop
cwde
mov
clc
lods
cmp
inc
out
adc
shr
shl
lods
out
mov
jnp
sbb
jmp
int
mov
(bad)
pop
xor
ja
adc
xlat
xor
out
adc
das
xchg
mov
rcr
cmp
out
pop
and
stos
(bad)
inc
gs
xchg
sar
enter
and
pusha
adc
xor
mov
or
bound
jl
push
vmovapd
cld
in
call
sub
fist
and
inc
mov
jne
pop
lods
inc
jo
(bad)
pop
xchg
test
and
push
dec
xor
aad
das
sti
(bad)
sbb
(bad)
(bad)
sbb
dec
ja
ficomp
rcl
push
pushf
das
ret
push
adc
and
sbb
dec
cwde
mov
push
pop
arpl
sbb
pusha
cld
sub
idiv
pop
jmp
add
cli
jbe
aad
aaa
fisub
(bad)
push
xor
fld
lds
dec
data16
test
out
ds
fdivr
xchg
xchg
test
jp
jmp
inc
pop
sar
loope
daa
mov
pusha
xlat
loop
movs
hlt
sbb
mov
ja
jo
dec
push
and
add
inc
into
mov
mov
adc
push
int
jl
js
(bad)
scas
and
cmp
test
test
mov
daa
ficom
loope
sbb
xchg
sub
pop
jle
(bad)
mov
adc
sbb
clc
mov
sub
mov
add
inc
cmps
xchg
ja
sahf
(bad)
jb
cdq
out
sahf
arpl
ds
jecxz
and
rol
pop
and
hlt
shl
neg
ins
fcmovu
sub
push
inc
sbb
not
jb
ret
movs
push
je
shl
pop
xchg
div
pusha
lods
movs
hlt
add
stos
cmp
cmc
into
ret
aad
inc
cmovns
pop
es
jno
(bad)
shr
cmps
adc
xor
push
xchg
shl
mov
sub
punpckldq
repnz
fistp
cmp
jne
add
xchg
fwait
ret
adc
cld
in
std
mov
clc
or
cmps
mov
in
mov
ret
fst
loopne
lods
in
stos
or
and
add
movs
mov
mov
add
sahf
in
cwde
in
and
inc
sti
sbb
jmp
xchg
repnz
dec
mov
aas
sar
out
push
adc
(bad)
into
mov
and
mov
dec
sub
sbb
pop
outs
and
icebp
xlat
jge
or
cs
jb
inc
inc
inc
adc
mov
hlt
lods
sbb
mov
div
push
xchg
jne
inc
(bad)
mov
shr
fild
xchg
xchg
cmp
cmp
into
into
in
pop
adc
repnz
jmp
cmps
xchg
dec
pop
repz
jecxz
sbb
sbb
pop
or
jmp
fadd
adc
imul
ds
sub
mov
cld
xlat
and
fcom
dec
dec
mov
fimul
dec
into
lahf
imul
jb
or
jl
jno
xchg
aad
dec
mov
cmps
sub
lock
sub
or
jns
add
test
cmp
mov
adc
jge
cwde
mov
sbb
div
jl
inc
mov
mov
out
stc
add
and
enter
and
cmp
push
lds
sar
fisttp
loope
mov
cld
into
repnz
adc
imul
push
mov
cmp
add
adc
push
loope
mov
and
fld1
pop
enter
mov
test
loope
aad
mov
int3
pop
adc
(bad)
test
repz
push
cdq
bound
jno
push
add
sbb
inc
or
imul
add
inc
scas
int
stos
ret
jge
adc
cmp
and
outs
jae
mov
adc
adc
loop
adc
jecxz
out
mov
and
xor
add
fs
inc
rcr
aas
outs
mov
fs
jecxz
and
test
dec
mov
call
and
leave
das
hlt
cmp
lds
mov
inc
add
ds
les
xor
int3
inc
and
mov
push
lea
retf
mov
dec
gs
xchg
pop
adc
xor
cmps
adc
inc
inc
test
adc
push
pop
push
cmp
xchg
mov
es
ins
sbb
in
int
jne
dec
(bad)
loopne
cdq
leave
sub
jne
jl
push
bound
mov
int3
mov
mov
bound
pop
leave
pop
std
shl
mov
aam
push
cld
mov
xor
jo
cli
add
neg
pop
or
pop
adc
aad
or
inc
mov
stc
mov
inc
and
push
add
dec
dec
and
adc
call
ss
xor
(bad)
sbb
mov
xchg
popf
icebp
retf
sub
outs
mov
sahf
fdiv
cmc
push
ror
int
das
add
dec
ja
push
into
mov
frstor
mov
push
gs
cmps
adc
and
retf
(bad)
mov
hlt
push
jae
sbb
cmp
ret
and
push
mov
mov
fiadd
retf
es
adc
mov
shr
adc
cdq
and
lods
stos
dec
fist
mov
add
(bad)
lock
es
xor
xchg
sahf
cmp
fwait
sub
sahf
shl
inc
xor
bound
xchg
je
pop
adc
adc
data16
scas
pop
dec
ficom
push
mov
adc
pop
sbb
sub
pop
mov
or
lds
mov
jle
add
dec
mov
jecxz
nop
popf
scas
fdiv
add
sbb
push
adc
int3
out
pop
call
xchg
cs
rol
adc
and
pop
adc
pop
aad
xchg
cmp
pop
xor
mov
ins
sar
mov
nop
mov
lds
add
adc
inc
cmp
add
lahf
(bad)
ss
or
aas
sti
mov
test
add
lds
mov
mov
shl
popa
add
outs
lea
cmp
cmp
sub
push
jo
outs
mov
mov
std
xchg
push
ficom
(bad)
push
push
xor
mov
movs
ins
inc
mov
retf
mov
mov
pop
aaa
sub
inc
jmp
ja
sbb
sti
sbb
sub
popa
dec
xor
enter
sbb
fild
mov
cmp
or
xor
cmp
sbb
mov
int3
and
jl
mov
ds
jp
pop
mov
lods
adc
hlt
in
(bad)
or
adc
imul
jge
push
xchg
leave
cld
test
aas
repnz
pop
pusha
cmp
in
xchg
push
mov
sub
push
mov
vrsqrtss
dec
cmp
push
das
int3
dec
pop
out
ret
pushf
aas
pop
add
(bad)
cli
inc
inc
and
or
pushf
shr
mov
outs
push
out
and
xor
add
add
add
xor
add
aam
out
add
sahf
add
add
jmp
add
add
add
push
add
imul
push
add
add
add
add
add
add
add
add
add
add
ins
add
add
add
add
add
hlt
scas
sahf
add
add
jb
add
lea
add
jmp
add
xchg
stos
add
add
add
add
dec
sub
add
add
add
add
add
add
jmp
add
add
add
pop
add
add
add
dec
add
jp
add
add
add
add
add
add
add
add
add
adc
dec
cdq
push
call
ins
ds
leave
mov
outs
aad
mov
addr16
lds
dec
aad
clc
enter
push
gs
cwde
mov
dec
icebp
jg
mov
pusha
retf
addr16
mul
daa
fwait
sub
cmp
test
lock
fwait
and
popa
mov
push
add
mov
retf
rcl
xchg
or
jmp
call
xor
lods
pushf
dec
loop
pop
sub
in
leave
and
pop
push
dec
add
out
jb
lock
jle
mov
dec
jmp
xchg
inc
sub
test
xor
mov
imul
sub
add
stos
ror
and
add
push
mov
inc
leave
scas
mov
pusha
out
(bad)
ret
mov
push
fidiv
pop
or
push
clc
std
movs
or
pusha
cdq
pop
adc
jbe
add
mov
das
sar
loop
stos
cmc
addr16
call
mov
jo
std
xchg
mov
std
pop
dec
lods
and
into
jl
call
pop
jmp
fisttp
lahf
popf
rol
cli
pop
call
outs
scas
xchg
pop
sub
out
ins
mov
aad
jmp
pushf
add
bound
inc
push
add
std
cmp
xor
push
push
inc
(bad)
jno
dec
adc
(bad)
dec
push
and
cmp
pop
div
dec
pop
add
push
pushf
inc
mov
std
fild
outs
aaa
add
cdq
aaa
cmp
add
shl
(bad)
xchg
push
mov
and
fsub
fcom
sbb
dec
fild
sbb
aad
vmovntpd
lods
xor
inc
push
scas
jno
jle
shl
in
cmc
div
(bad)
push
adc
aad
arpl
and
dec
scas
test
outs
cmp
test
cs
cmp
mov
sar
sbb
fistp
lods
stc
test
int
ins
or
mov
leave
test
fsubr
test
dec
cmp
inc
xor
in
inc
mov
idiv
xor
imul
pop
mov
sbb
in
jmp
stc
adc
ds
cmp
fst
jle
inc
movs
dec
and
(bad)
je
popf
push
jns
and
push
dec
mov
mov
pop
sub
and
mov
push
push
in
fcom
sub
icebp
aad
scas
jae
mov
clc
test
cdq
call
shl
mov
inc
add
cwde
in
dec
addr16
or
sahf
(bad)
or
mov
jbe
in
sbb
and
push
popa
mov
ss
dec
mov
and
fisub
fmul
jmp
and
out
mov
fidivr
adc
les
scas
mov
addr16
fistp
fs
xchg
(bad)
jb
push
data16
adc
push
imul
mov
dec
sbb
xor
scas
icebp
jns
ss
pop
jno
mov
pop
cmp
push
jecxz
repnz
sub
inc
dec
xchg
cwde
stos
push
ret
pop
(bad)
sbb
mov
addr16
pop
test
icebp
bswap
jmp
push
cmp
push
fisubr
cmp
test
rcr
and
jge
cmp
ins
xchg
push
adc
cmp
adc
adc
hlt
push
clc
dec
loop
lods
jmp
(bad)
jle
mov
rcr
jg
dec
lock
push
sub
sqrtps
inc
imul
jmp
mov
xchg
mov
sbb
(bad)
push
bound
(bad)
mov
lock
shl
adc
loope
xchg
xchg
jno
out
in
sbb
jp
sbb
cmp
inc
dec
aaa
stos
or
dec
arpl
ds
js
inc
in
lahf
daa
pop
mov
call
outs
mov
(bad)
inc
cmp
pop
inc
ror
dec
push
sti
pop
out
vpunpckhdq
mov
mov
mov
(bad)
out
in
rcl
xor
or
aad
inc
jb
das
inc
popf
outs
mov
leave
aam
into
fbld
in
shld
cli
addr16
fisub
lahf
push
mov
mov
xchg
cli
fcmove
out
and
ror
inc
pop
dec
clc
call
je
adc
(bad)
out
sbb
call
adc
(bad)
adc
rol
xchg
aas
push
or
sar
es
or
add
mov
ja
adc
cmps
or
fidivr
xor
in
push
pop
add
inc
sbb
das
scas
push
pop
out
ja
shl
test
sbb
pushf
jle
jb
add
in
and
jo
ins
sbb
sahf
dec
pop
cmp
xor
sub
neg
fisttp
pop
add
sahf
lock
int3
in
pushaw
lods
inc
push
pop
jbe
or
not
mov
test
push
int3
mov
xchg
jp
inc
jmp
mov
data16
cwde
jo
dec
push
push
lods
movq
es
or
jb
inc
das
inc
push
xor
inc
pop
ror
xchg
mov
fld
push
or
mov
mov
out
loop
pop
push
les
dec
(bad)
test
out
shl
test
jne
push
call
xchg
adc
int3
and
loop
stos
lock
iret
cmp
gs
int
mov
pop
jg
add
add
sbb
adc
ja
fsub
ins
repnz
xchg
pushf
(bad)
xor
shl
bound
push
pmulhw
cmp
ins
mov
or
shl
xor
adc
cmp
ss
push
aaa
mov
out
add
xchg
ins
jl
out
jnp
mov
mov
mov
dec
mov
lahf
dec
mov
in
leave
leave
out
js
mov
fwait
jle
out
sti
dec
cmp
scas
aad
aam
(bad)
sub
aaa
mov
cmps
addr16
cmp
scas
fcomp
mov
lods
iret
inc
out
jecxz
ja
xchg
push
or
mov
lods
pushf
xchg
mov
aad
leave
xchg
sbb
imul
hlt
or
push
inc
jmp
and
cmp
adc
enter
jne
xlat
int3
pop
dec
push
(bad)
and
xlat
mov
aaa
xchg
mov
or
add
dec
xor
adc
or
rol
or
loope
or
add
push
(bad)
xlat
jl
pop
test
jmp
sbb
daa
sbb
leave
arpl
aam
xor
call
jbe
out
cmp
mov
dec
sub
jbe
or
lods
ja
cld
adc
dec
clc
pusha
std
adc
and
test
xor
sti
movs
retf
jecxz
movs
sub
fprem
mov
lahf
or
stc
jne
loope
loope
cli
cmp
ror
movs
mov
xchg
or
leave
dec
lock
mov
arpl
jne
push
rol
pop
rcr
aad
gs
in
push
and
pop
jnp
gs
pop
outs
adc
pusha
shl
sub
and
or
int3
pop
repz
and
lods
sbb
jle
pop
add
xchg
clc
fwait
scas
(bad)
push
mov
sub
and
adc
iret
outs
adc
xchg
cmp
inc
jp
dec
push
dec
stos
push
sub
xor
shl
stos
repz
mov
icebp
std
pop
push
pop
jmp
mov
inc
(bad)
std
dec
fnstsw
xchg
out
inc
cld
ds
ret
loope
jp
repnz
jnp
pop
jns
fs
test
in
in
bound
add
lock
jle
fcmovnb
mov
in
sub
mov
outs
cmp
jmp
inc
icebp
and
xor
push
sbb
pushf
(bad)
pop
loop
(bad)
pop
popa
mov
xor
out
mov
pusha
shl
cmp
jmp
sahf
push
mov
daa
retf
mov
sbb
dec
jnp
vpshufhw
stos
mov
inc
adc
mov
nop
xchg
mov
scas
das
cmp
repz
aas
retf
test
push
ss
(bad)
pop
adc
call
(bad)
jecxz
into
mov
aaa
push
loopne
into
push
adc
jg
enter
dec
mov
ret
mov
sub
cmp
and
(bad)
fsub
nop
sub
loope
loope
dec
adc
lods
inc
push
inc
fs
add
mov
sbb
xchg
xor
add
into
ret
popa
adc
lods
loopne
xor
mov
jbe
mov
(bad)
stos
add
ret
push
add
test
or
mov
lods
mov
push
cmps
or
fsub
sub
ins
dec
push
fsubr
popf
(bad)
sbb
pop
repz
shl
mov
pop
ror
nop
add
mov
jp
push
mov
ja
add
jno
dec
aas
daa
repz
shl
mov
sbb
add
fsub
ja
pop
repnz
push
push
fdivr
stos
dec
pop
dec
cmc
ins
sub
mov
sub
xchg
xchg
or
cli
clc
jecxz
xor
movs
ss
lock
or
pop
xchg
and
mov
nop
mov
push
pusha
bswap
push
pop
xchg
sub
(bad)
sbb
or
jmp
and
and
(bad)
mov
jp
dec
aad
cmps
xor
(bad)
(bad)
or
xor
jns
xor
adc
mov
daa
lock
push
mov
or
add
mov
sbb
stc
cwde
not
jmp
(bad)
data16
out
sub
mov
mov
pop
test
rcl
lock
xchg
pop
mov
jns
mov
inc
push
inc
out
or
and
repz
setbe
scas
imul
jbe
dec
pop
pop
jp
ret
mov
shl
test
inc
mov
xchg
pop
push
xchg
bound
clc
retf
lea
lock
daa
dec
daa
inc
sbb
xchg
add
cdq
jmp
add
ror
ins
mov
cld
push
mov
mov
dec
out
xor
pop
cmp
mov
loope
cs
shl
popf
fistp
pop
int
shr
mov
movs
cmp
or
retf
cmp
iret
push
imul
sub
jmp
lds
repz
ds
xchg
mov
jg
out
(bad)
(bad)
mov
add
add
add
add
xchg
jmp
add
aad
add
add
add
movs
add
aas
add
add
add
add
add
add
add
add
add
add
add
add
stos
add
push
add
add
add
or
add
idiv
aaa
ror
and
nop
pop
lahf
pop
mov
mov
add
sti
(bad)
fwait
nop
pushf
mov
xchg
(bad)
test
dec
and
add
fdiv
mov
mov
jmp
mov
pop
fs
push
lahf
pop
ins
sub
push
into
stc
cwde
sar
aad
(bad)
cwde
imul
xor
pop
push
and
out
pop
mov
ins
xor
mov
enter
test
push
jge
xchg
outs
add
mov
push
mov
dec
push
push
xor
sbb
es
mov
pusha
mov
arpl
mov
cmp
mov
adc
cmp
mov
inc
mov
cmc
into
adc
push
jo
jle
inc
xor
(bad)
ficomp
fs
pop
push
jnp
jo
and
push
mov
fisubr
shr
imul
sbb
scas
loopne
mov
inc
mov
jg
mov
mov
pop
jae
or
pushf
jmp
in
call
test
daa
push
push
(bad)
mov
(bad)
jmp
enter
daa
ins
push
mov
cmp
popa
adc
neg
adc
mov
cmp
int3
loope
out
jp
dec
and
pop
and
ins
push
les
(bad)
and
call
mov
mov
xchg
popa
jl
test
sbb
mov
clc
mov
(bad)
movs
xor
sbb
arpl
mov
dec
pop
fnstcw
push
fisubr
and
xchg
rcr
(bad)
(bad)
jmp
pop
dec
sbb
icebp
(bad)
lahf
inc
mov
push
push
adc
pop
repz
neg
cmps
mov
cld
js
xchg
in
push
sti
ins
(bad)
xor
test
xchg
lea
imul
or
mov
scas
cmps
fcomp
outs
imul
stos
mov
hlt
and
jp
jnp
push
sahf
mov
nop
push
cmp
movs
or
mov
pusha
fild
shl
cli
or
aad
sti
stc
(bad)
push
push
jnp
xor
lods
adc
or
add
scas
sti
mov
mov
mov
fwait
xor
shr
shr
mov
jbe
push
cmps
add
iret
fs
aas
not
js
sub
jbe
out
loopne
push
movs
imul
mov
mov
pushf
inc
(bad)
sbb
aas
out
loope
shr
pop
sub
test
aaa
xlat
xchg
iret
sbb
in
sbb
iret
jge
inc
std
dec
pop
pop
push
mov
fisttp
jg
pop
mov
dec
call
int
call
mov
aam
dec
(bad)
fwait
mov
pop
cmps
or
sbb
add
pop
adc
pop
and
or
push
xchg
cld
addr16
int
stc
xor
scas
arpl
out
fistp
sar
mov
fst
cli
ja
out
sub
cmp
fnsave
xor
pusha
sbb
cmp
jl
xor
in
cmp
bnd
inc
inc
mov
leave
adc
ja
push
fisubr
outs
aaa
pop
adc
je
rcr
loop
imul
mov
fiadd
stc
sub
mov
pop
shl
push
cwde
cmp
into
test
int
out
sub
and
rol
test
sbb
inc
pop
lods
paddb
jmp
outs
cld
adc
pop
jle
inc
scas
mov
sub
mov
push
mov
dec
(bad)
dec
jno
or
mov
cdq
and
test
dec
jl
xchg
or
pop
or
mov
pop
or
and
fistp
pop
or
jo
inc
jmp
or
cmps
mov
cmc
and
mov
fild
loopne
mov
jg
and
jno
sub
and
ror
repz
test
jns
jmp
inc
or
mov
mov
adc
and
fs
inc
adc
dec
push
jbe
loop
mov
and
pop
inc
push
push
xor
retf
mov
cwde
test
jmp
int3
xchg
aam
sti
fs
jne
inc
mov
lock
mov
scas
push
inc
(bad)
lock
fist
nop
ins
loope
lahf
aad
xor
scas
adc
pop
xchg
xchg
ret
jnp
adc
lds
xchg
outs
dec
xchg
imul
fsubr
in
mov
stos
scas
leave
fs
pusha
in
dec
dec
jb
out
push
pop
pop
es
xor
pop
add
(bad)
shl
mov
push
sub
shr
ffree
in
push
out
into
popf
(bad)
call
inc
pop
dec
cmp
xchg
or
test
dec
push
pop
xor
jge
pop
sub
ins
out
pop
das
lods
jb
fcom
stc
cmps
mov
sbb
or
lea
lods
cli
not
rol
daa
ret
inc
push
ins
sbb
pop
mov
xchg
stos
xchg
jbe
mov
jne
and
sbb
mov
dec
scas
push
aam
add
push
fst
mov
ror
dec
jno
and
cmp
sbb
fcmovne
lea
xchg
mov
add
adc
stc
xchg
and
test
push
push
sub
adc
or
(bad)
pop
nop
arpl
xchg
dec
jmp
pop
cmp
lods
fcmovbe
and
push
scas
mov
imul
mov
jg
pop
lods
mov
mov
out
pop
adc
in
outs
sti
pop
jg
(bad)
enter
sub
inc
les
push
or
imul
ror
dec
add
fbstp
mov
cmp
aad
ins
mov
mov
xchg
sti
ror
rcr
sbb
aam
js
scas
ffree
pop
xchg
sub
jae
or
fldcw
imul
outs
out
jge
fcomip
adc
xor
repnz
push
xlat
xchg
out
and
mov
ss
dec
push
mov
pop
inc
aam
ja
int
mov
dec
jno
mov
je
add
xchg
and
out
loop
dec
movs
stos
dec
test
mov
add
retf
imul
sub
(bad)
push
ror
mov
sahf
push
imul
xor
ins
or
popa
inc
lock
std
cmps
cs
cdq
popa
cmps
pop
out
pop
jle
arpl
rol
into
xor
add
and
sahf
stos
test
jno
inc
pop
or
in
ss
mov
adc
push
int3
call
and
jge
dec
rol
aaa
fs
shr
adc
xchg
xchg
mov
cld
adc
mov
adc
or
sub
das
mov
fs
into
mov
dec
xchg
test
(bad)
rol
pop
xchg
fild
inc
pop
jmp
mov
cmp
and
leave
sbb
jle
arpl
mov
fisubr
stos
shr
scas
and
adc
inc
fs
repz
pushf
and
xor
jae
push
inc
repnz
lods
dec
aad
es
mov
test
dec
(bad)
mov
clc
ins
xchg
and
cdq
out
test
mov
enter
dec
repz
and
and
cmp
pop
jmp
xor
adc
add
or
sbb
ror
aas
popf
jbe
test
mov
jno
jne
push
jp
push
and
aas
jo
cld
scas
inc
fadd
pusha
push
lock
fsub
mov
or
jge
mov
and
or
sbb
sbb
sbb
jp
pop
mov
in
push
fisttp
fnstenv
test
pushf
loope
popf
data16
add
sub
clc
xlat
push
add
xchg
xchg
iret
add
mov
xchg
push
or
out
arpl
push
in
jp
repz
mov
les
loopne
or
ss
sub
add
fscale
pop
xor
dec
jae
out
mov
ret
dec
pop
mov
fsub
jmp
dec
xchg
popf
sahf
(bad)
fst
test
shr
aad
jns
mov
int
in
push
jbe
sub
jbe
inc
bound
mov
mov
inc
mov
adc
ins
ja
sbb
cwde
cmp
or
push
outs
cwde
ds
add
cmps
cwde
inc
jbe
scas
stos
mov
dec
test
je
lods
dec
add
movs
mov
jmp
mov
pop
aad
scas
cmp
pop
xchg
ds
add
sub
adc
stos
jno
and
sti
and
retf
dec
stc
imul
xchg
xchg
or
jb
in
or
je
inc
cmps
sbb
dec
cmps
das
mov
jg
add
(bad)
(bad)
sub
jne
adc
rcl
fimul
mov
pop
pop
(bad)
sub
repz
sub
movs
clc
jl
fisttp
adc
xor
lods
xchg
aad
iret
sub
mul
xor
jns
cmp
in
lock
aam
mov
mov
jle
mov
jl
fbstp
push
ror
out
fwait
push
sbb
popa
xor
push
loope
je
shl
pop
(bad)
outs
stc
mov
and
or
fisub
mov
cli
jnp
bound
retf
scas
jle
add
pusha
(bad)
out
rcl
sub
or
nop
or
and
inc
aas
fnsave
jmp
push
popa
daa
retf
mov
mov
fxch
jne
fimul
jmp
jns
mov
or
outs
je
cs
cld
jg
xlat
mov
pop
inc
xor
mov
clc
lds
ins
(bad)
movs
inc
shl
fild
icebp
xor
adc
mov
gs
mov
push
jle
xchg
adc
push
ret
add
jle
sar
scas
cmp
mov
sbb
adc
xor
sbb
sbb
retf
cmc
mov
mov
jle
cli
pop
or
test
mov
in
inc
dec
movs
std
or
sahf
and
cmp
inc
jecxz
dec
mov
dec
stos
mov
imul
pop
cmps
ins
adc
out
sahf
adc
test
std
pop
scas
lea
cs
mov
sub
sbb
(bad)
and
add
ins
loope
cmps
push
out
jae
and
add
std
(bad)
cwde
add
enter
add
add
ins
add
ss
add
add
ret
xor
xchg
add
push
sub
add
add
add
add
add
add
add
add
add
add
add
add
or
add
add
add
add
cmc
aaa
add
add
add
add
add
add
push
add
add
rol
aam
add
add
add
fwait
cli
add
add
xchg
add
and
add
add
add
dec
add
add
add
add
add
scas
add
add
add
add
add
add
add
add
add
add
add
add
add
sub
popa
popa
sbb
mov
xor
int
fld
add
(bad)
nop
mov
fstp
pop
sbb
mov
jne
test
push
test
scas
mov
icebp
mov
mov
inc
mov
jmp
dec
popf
fnstcw
shr
inc
clc
jecxz
jns
ret
inc
jl
call
out
jns
or
push
adc
retf
pushf
push
adc
fcomp
sbb
or
fidivr
mov
and
push
sub
mov
inc
stos
arpl
inc
aam
jmp
xor
jecxz
mov
int3
or
jg
lea
inc
aas
dec
mov
shr
imul
fld
je
dec
mov
ss
lock
pop
fidiv
cs
sbb
int
inc
push
(bad)
xchg
ret
outs
ins
or
sbb
push
jbe
mov
sbb
sbb
xchg
test
xor
push
sub
into
mov
pop
pop
cld
fnsave
jnp
enterw
cmp
lock
jo
dec
and
enter
out
mov
cli
xchg
bnd
dec
arpl
mov
addr16
repnz
inc
jbe
xchg
mov
(bad)
outs
xor
popf
add
stos
mov
push
std
mov
out
iret
int
mov
pop
mov
jne
rol
das
pop
push
repnz
pusha
in
jnp
mov
mov
fstp
jae
add
mov
call
cld
jmp
daa
sbb
mov
push
and
popa
(bad)
xchg
clc
leave
mov
mov
lods
mov
sbb
cmc
mov
jae
sub
xchg
cmp
je
call
scas
add
jbe
cmps
pusha
inc
xor
stos
cmp
dec
cmp
in
cs
mov
test
test
cmc
dec
dec
xor
and
mov
jmp
lods
sub
inc
xchg
pop
pop
push
add
dec
mov
push
sbb
jo
int
sahf
jo
mov
adc
lahf
sub
sti
xchg
scas
dec
mov
sbb
les
add
loop
push
or
stc
push
retf
cmc
ja
cli
jge
shl
and
inc
adc
mov
jo
push
jae
retf
sti
fcom
mov
and
fsub
push
es
daa
mov
jnp
neg
nop
in
xchg
add
icebp
pop
mov
cmp
nop
dec
icebp
sahf
mov
push
popf
pusha
cmp
inc
and
lods
mov
sbb
jbe
dec
das
jo
or
jns
call
push
cmp
jo
dec
loope
inc
inc
fidiv
inc
lahf
mov
mov
jecxz
in
xor
mov
jmp
std
dec
push
mov
shl
js
push
jmp
sub
mov
retf
test
jbe
inc
test
add
mov
adc
bound
xor
(bad)
aad
cwde
sub
inc
mov
sar
stc
adc
ja
mov
cld
dec
cmp
int3
mov
mov
dec
mov
out
popf
xchg
mov
add
popa
push
jmp
pop
ret
mov
dec
outs
movs
hlt
pop
lods
(bad)
cdq
adc
sbb
cdq
add
mov
mov
lods
lahf
xor
scas
mov
push
ja
jg
xchg
mov
movs
es
mov
test
xchg
cmp
into
fisub
iret
mov
out
sbb
pop
xlat
jg
inc
cmc
dec
pop
or
not
mov
jb
mov
arpl
outs
jns
push
in
mov
outs
fdiv
jmp
or
std
sbb
sahf
push
popf
jle
mov
in
test
fsubr
repz
lods
test
sub
das
test
xchg
movs
add
dec
push
lock
and
(bad)
aad
mov
and
add
mov
scas
adc
xor
pop
shl
cmp
sbb
pop
mov
pop
sub
mov
dec
retf
loope
out
and
gs
push
cdq
aaa
ds
or
dec
push
cdq
pop
stos
iret
mov
mov
out
add
lea
ror
jns
enter
shl
(bad)
sub
(bad)
cli
(bad)
stos
arpl
out
jle
ja
pop
jno
cmp
jne
clc
pop
add
repnz
and
sti
repnz
js
outs
sbb
lock
fld
ret
loop
sub
pop
mov
sbb
test
dec
retf
scas
(bad)
push
xchg
sbb
sbb
mov
or
xchg
jbe
xchg
in
mov
mov
leave
mov
in
mov
out
mov
bound
jle
push
inc
and
xchg
fadd
add
nop
xchg
inc
add
mov
mov
cdq
push
sub
movs
popf
ret
dec
dec
lods
data16
sbb
mov
or
in
dec
ror
jle
pop
out
fldenv
mov
xchg
cdq
retf
scas
scas
inc
pop
imul
test
jp
dec
xor
dec
pop
test
and
cmp
lods
in
dec
or
mov
jne
mov
push
test
cmps
inc
pop
nop
xor
jmp
dec
call
inc
xor
popa
sbb
adc
adc
lea
ret
jbe
inc
int
cld
or
sbb
pusha
movs
mov
xor
mov
(bad)
jle
in
clc
loopne
sub
mov
inc
cmps
push
mov
xchg
clc
lods
aam
sar
push
pop
je
les
inc
xor
jne
es
sti
xchg
sbb
push
in
test
add
inc
mov
xor
cwde
and
pop
pop
arpl
adc
lods
lahf
fsubr
fwait
int3
int
or
rol
loop
fistp
pop
in
mov
inc
sub
fwait
mov
pusha
adc
inc
cmc
xchg
xchg
aaa
xchg
call
mov
mov
movs
popf
bound
mov
ss
out
push
(bad)
sbb
mov
pop
cmp
imul
dec
push
push
loopne
mov
xor
jg
or
dec
inc
adc
retf
dec
dec
imul
dec
test
adc
fist
push
mov
rol
cli
hlt
sub
mov
mov
lds
fwait
push
fwait
loopne
sahf
adc
dec
sbb
add
call
nop
iret
fistp
in
test
mov
fstp
lods
mov
sahf
repnz
sbb
or
add
push
retf
rcr
cdq
mov
sbb
call
out
movs
aam
xor
sbb
into
fwait
mov
push
test
add
or
ror
lds
jae
ins
inc
xchg
test
test
nop
sahf
sub
and
imul
dec
scas
dec
enter
sbb
inc
fisttp
pop
outs
sbb
ins
out
or
sar
retf
mov
add
xchg
stc
jle
leave
fbld
xchg
pop
rcl
adc
scas
adc
mov
mov
jmp
shl
pop
dec
or
out
xlat
mov
mov
sbb
mov
rol
lock
mov
sub
and
(bad)
enter
in
cli
out
pushf
lods
aas
or
aad
popa
inc
xchg
jae
ins
or
pop
xchg
js
cmps
stos
cwde
dec
cmc
cld
(bad)
mov
push
mov
int
sub
push
push
fidiv
cld
cli
call
pop
lea
sub
and
push
repz
cmp
pop
call
xlat
test
and
push
adc
cmp
push
int
clc
lea
addr16
push
jb
mov
dec
push
ror
xor
in
icebp
nop
sbb
and
in
xchg
rcl
inc
retf
mov
push
fimul
cwde
js
outs
push
jg
adc
loope
cli
shl
stc
call
xor
clc
jg
bound
out
push
xor
mov
jbe
ja
pop
dec
fist
jbe
pop
xchg
jle
icebp
sahf
mov
(bad)
fiadd
(bad)
(bad)
push
mov
popa
xchg
popa
fimul
cwde
les
adc
and
sti
add
js
stos
xor
add
mov
jl
sub
push
sub
rcl
sub
ins
call
jne
jbe
mov
repz
xor
test
cwde
mov
ret
loopne
mov
or
mov
pop
dec
mov
sub
mov
add
das
inc
movs
je
pop
es
fdiv
inc
lods
or
mov
add
cmps
adc
and
jge
cwde
sti
retf
fdiv
mov
fild
aad
js
xchg
jns
mov
jns
enter
mov
mov
pop
push
sbb
clc
les
inc
jnp
inc
mov
mov
mov
dec
xor
cld
or
test
cdq
clc
cld
lea
jb
mov
fstp
scas
mov
movs
sbb
cwde
sub
movs
addr16
cli
pop
stos
mov
and
xchg
mov
mov
out
scas
add
shl
rol
fwait
out
xchg
dec
not
lahf
mov
inc
fistp
ins
gs
arpl
lock
pop
imul
pop
xor
push
js
aas
rcl
mov
push
jle
aam
clc
cmp
mov
jge
data16
adc
out
sbb
into
jns
xchg
jp
xchg
dec
adc
stos
into
cwde
iret
xlat
cmp
(bad)
stos
invd
adc
scas
pop
ins
push
cmc
pop
jne
int3
fnstenv
cmp
mov
push
adc
movs
inc
inc
inc
in
je
jnp
arpl
xchg
adc
in
(bad)
neg
xor
mov
sbb
mov
(bad)
cmp
add
lds
icebp
jb
push
adc
xor
mov
add
out
adc
in
sbb
inc
outs
cmps
inc
push
fsubr
(bad)
mov
xlat
xchg
inc
jle
or
test
outs
jmp
call
and
(bad)
sbb
(bad)
mov
loopne
adc
cmp
xchg
mov
ret
hlt
imul
or
arpl
fiadd
add
xor
add
add
mov
(bad)
into
pop
push
dec
movs
mov
and
cwde
and
scas
push
pop
or
xor
push
and
jnp
adc
lods
jo
mov
add
retf
inc
mov
gs
jbe
adc
out
push
cmp
and
push
(bad)
xor
retf
aaa
xor
test
ins
clc
cmps
pop
imul
jmp
loopne
sub
jne
(bad)
sti
pusha
sub
sbb
cld
sahf
mov
jmp
in
mov
adc
jp
(bad)
sar
(bad)
pop
inc
xor
xchg
je
mov
push
mov
pop
mov
push
jmp
sub
add
call
fmul
(bad)
xchg
dec
dec
and
call
inc
setl
mov
pop
cmp
std
pop
out
inc
sub
pop
inc
int3
cmp
ins
mov
out
push
adc
inc
adc
rcr
cmp
mov
sub
(bad)
mov
jbe
add
and
sbb
out
popa
or
pop
loope
or
jmp
dec
pusha
stc
push
(bad)
int
mov
fcmovne
xor
push
pusha
movs
jmpw
aad
cmps
cs
clc
fs
cmc
jle
retf
cmp
mov
mov
fs
cwde
mov
and
mov
imul
jle
daa
sbb
xor
fimul
shr
cld
pop
pop
arpl
xor
rol
pop
in
movs
(bad)
sti
addr16
jge
add
mov
mov
jne
sbb
aam
popf
push
stos
inc
imul
stc
data16
(bad)
aad
sub
cmps
cmps
scas
(bad)
cmps
or
or
stos
test
lea
and
ficom
shl
fnstsw
aam
sub
out
jbe
cmps
push
imul
inc
loope
mov
ins
or
jbe
fwait
cmp
ss
inc
in
stc
cs
mov
stc
inc
dec
out
and
les
cmc
pop
pop
adc
adc
loop
ss
mov
nop
pusha
pop
xchg
enter
xor
retw
(bad)
xlat
inc
mov
in
mov
dec
scas
outs
mov
lock
jl
adc
adc
jg
adc
pushf
dec
fstp
ins
rol
popf
clc
fwait
iret
sbb
das
sub
in
sub
push
pop
in
jae
iret
sbb
loop
dec
cmp
pop
sub
adc
mov
int
dec
push
push
push
adc
push
lea
adc
adc
sar
mov
cmc
neg
xor
push
cmp
cs
ss
fldenv
cmps
gs
push
adc
fisttp
lahf
sar
retf
daa
rol
xchg
adc
dec
bound
dec
mov
sbb
mov
cmp
mul
push
sub
jmp
fistp
jp
(bad)
fdivr
jo
cwde
pop
popf
cmp
fidivr
test
cdq
ins
addr16
inc
push
inc
les
movs
popa
mov
inc
into
adc
sub
lods
fs
fidivr
outs
pop
not
sbb
xor
push
(bad)
aaa
and
loopne
popf
adc
pop
xchg
or
push
in
sbb
sar
sbb
sbb
ins
adc
sahf
jmp
sbb
sar
mov
or
fdivr
int
push
or
es
add
sbb
push
sub
jo
rol
retf
dec
inc
dec
adc
mov
stos
jg
sbb
addr16
iret
out
inc
hlt
xchg
add
xor
push
rol
xchg
cmp
mov
pop
and
inc
sbb
pop
fisttp
bound
idiv
mov
push
push
jle
push
scas
ror
inc
and
aaa
jnp
mov
dec
sub
outs
outs
cdq
inc
cmp
sub
mov
and
stos
sub
pop
xchg
(bad)
scas
loopne
inc
or
rcl
sti
in
fimul
xor
pusha
out
call
ret
movs
das
xor
jge
js
sbb
pop
loopne
imul
push
adc
pop
hlt
test
imul
xor
fsubr
stc
mov
inc
das
loop
jmp
jle
inc
sub
jns
jmp
out
jg
dec
cmp
fmul
js
jne
ins
cmp
ins
fidivr
mov
cli
cmp
call
mov
mov
mov
jl
inc
pop
sub
movs
lds
push
add
(bad)
jns
daa
neg
jmp
dec
push
push
icebp
neg
and
lods
pushf
dec
jbe
aad
lea
aam
add
ins
sub
pop
scas
jb
ds
pop
leave
xchg
dec
sahf
dec
sbb
pop
or
and
hlt
dec
cli
push
(bad)
dec
inc
ins
in
push
sahf
push
xor
out
aam
push
xchg
loope
xlat
xchg
sbb
rcl
jg
jb
or
rcr
fs
and
(bad)
imul
aad
mov
mov
adc
lea
pop
xchg
adc
ins
mov
jle
es
out
arpl
les
ss
pop
pop
sub
les
pmullw
and
pop
push
jg
lds
mov
fdiv
push
pop
(bad)
mov
mov
jge
or
pop
les
inc
out
push
mov
clc
push
mov
retf
push
dec
xor
push
push
ret
enter
sub
rol
loopne
cmp
adc
and
mov
add
jns
xchg
rcr
shl
mov
scas
push
dec
(bad)
fld
mov
lods
push
pop
or
dec
sbb
out
mov
call
mov
loope
mov
push
push
and
jb
sub
idiv
or
fcom
push
push
js
jecxz
out
add
mov
(bad)
out
add
call
jns
xchg
jge
outs
push
mov
mov
mov
push
or
mov
test
mov
imul
push
sbb
ret
pop
loop
mov
idiv
add
pop
pop
sub
adc
xchg
jno
xchg
adc
mov
sbb
dec
mov
cmps
xchg
pop
add
add
mov
inc
xor
(bad)
push
inc
add
retf
xor
jnp
cli
hlt
dec
aam
jmp
shr
and
aas
mov
outs
test
jge
sub
pop
sbb
push
seta
pop
shl
adc
cwde
and
lahf
fdivp
fs
mov
pushf
sti
add
rcl
push
call
seto
jo
mov
nop
and
arpl
pop
dec
mov
mov
cmp
repnz
or
stc
je
imul
cmps
pop
pop
or
out
xchg
xlat
mov
sub
dec
cmp
repz
imul
scas
jbe
cmp
and
lds
xor
pop
inc
repnz
div
imul
shl
into
gs
fsubr
push
fwait
add
jmp
adc
sbb
adc
or
push
ret
push
cmps
mov
das
cdq
stos
pushf
add
int
push
fsub
sub
addr16
jp
mov
lods
dec
aaa
inc
cmp
push
in
into
pop
or
dec
(bad)
repz
icebp
out
test
or
sub
inc
and
jecxz
push
add
lods
add
jb
and
push
pop
pop
cmp
push
adc
pop
(bad)
fsub
cwde
sbb
mov
retf
sub
xor
test
fisubr
pop
fadd
pop
xor
scas
fisub
rol
sbb
imul
dec
das
mov
retf
cmc
ss
inc
and
repnz
pop
(bad)
movs
les
out
push
jnp
fsub
paddusb
shl
push
call
fwait
dec
aad
cmps
xor
int3
cmp
mov
stos
fld
ja
push
push
shl
loopne
scas
ret
sbb
pop
test
fsub
call
push
fwait
push
push
mov
cmp
add
not
cmp
add
sbb
bound
cmp
fsubr
cld
adc
clc
mov
movs
inc
aaa
pop
jnp
jmp
adc
retf
pop
dec
stc
lahf
mov
lea
add
into
shr
add
aas
push
sbb
rcl
scas
inc
inc
push
xor
inc
add
jge
mov
inc
jb
ss
loopne
sbb
ss
jae
lds
xchg
out
sti
xor
cmp
inc
pop
cdq
jg
pop
sub
lods
cwde
mov
mov
pop
fyl2xp1
ins
and
xor
retf
dec
test
mov
cli
int3
xchg
jns
imul
ficomp
iret
retf
in
adc
jmp
scas
lea
das
jp
retf
sub
fs
mov
popa
mov
ror
(bad)
jl
test
and
inc
aaa
sbb
data16
jge
scas
imul
push
or
sub
(bad)
jnp
pushf
popa
push
mov
cs
aas
cwde
jl
or
clc
inc
cwde
jne
enter
and
out
pop
and
and
sbb
es
das
cmp
or
fld
pop
adc
pop
cdq
in
popf
or
fisttp
dec
loopne
mov
jmp
jns
xor
mov
scas
ds
aad
xchg
inc
push
jmp
mov
jns
scas
stc
outs
shl
es
add
lods
pop
(bad)
jmp
pusha
add
pushw
push
jmp
test
es
mov
in
cmps
mov
imul
cdq
mov
jbe
cmc
mov
nop
inc
imul
mov
or
je
inc
cld
sahf
push
arpl
(bad)
dec
mov
nop
push
aas
lahf
adc
leave
and
sub
mov
fcomp
mov
out
hlt
pop
call
and
jl
sti
shr
psubw
push
in
mov
pop
mul
(bad)
cmp
shl
out
dec
call
jmp
xor
pop
and
in
ja
or
push
cmps
cmp
xchg
pop
and
in
out
sub
es
in
aam
cmc
inc
outs
jle
mov
jle
es
push
clc
test
fidiv
lods
(bad)
hlt
iret
enter
xor
cmp
pop
inc
js
out
gs
ret
data16
das
sbb
adc
lea
std
sbb
dec
add
repnz
cmp
pop
sub
add
test
xor
cmp
retf
cdq
mov
add
add
add
lods
add
add
add
add
mov
add
mov
add
add
cmp
add
add
add
hlt
clc
add
add
add
mov
add
cmp
add
add
add
add
add
add
add
and
add
dec
lahf
add
rol
add
add
add
add
add
add
mov
add
jp
loope
rcl
fs
cwde
mov
loope
mov
cmp
jmp
shl
jecxz
ins
jbe
jecxz
push
jae
scas
mov
call
or
iret
dec
sti
rcr
mov
retf
dec
rcr
out
pop
xchg
shl
sbb
xlat
cmp
xchg
push
js
pop
daa
mov
lods
mov
xchg
dec
mov
jmp
add
or
popf
add
xlat
loope
mov
and
pop
data16
cmp
jg
icebp
adc
test
mov
dec
enter
ds
push
(bad)
pop
and
test
test
out
aad
cli
imul
sub
and
jge
or
inc
ins
mov
pop
mov
adc
jge
pushf
adc
pushf
iret
add
push
pushf
lea
cmp
push
xor
cmp
xor
daa
inc
mov
sbb
pop
cwde
pop
sbb
dec
xor
xchg
(bad)
loope
ins
loop
cmps
cmp
out
icebp
xor
call
js
xchg
jp
gs
dec
fiadd
test
jo
cmp
mov
fwait
ins
pusha
or
xor
sub
ss
std
sub
clc
test
mov
lods
cmp
cmp
(bad)
lock
sbb
add
push
add
cdq
rcr
mov
add
or
cdq
retf
sti
stos
lea
push
out
or
imul
loopne
xchg
sub
sbb
push
aad
xchg
fwait
shr
into
std
inc
pop
mov
adc
outs
xchg
imul
mov
push
add
push
fs
jno
hlt
and
out
stos
sub
cmc
xchg
dec
pop
mov
enter
lods
pop
fbld
lods
fldcw
adc
mov
inc
cmps
les
jmp
add
jl
mov
mov
mov
leave
loop
jae
es
inc
mov
cmp
shl
(bad)
aad
and
sti
mov
cli
pop
adc
fist
add
inc
mov
jne
or
icebp
cli
mov
rcl
add
pop
jg
fisub
dec
fisub
fcom
cmp
scas
fdivr
sub
xor
push
jb
or
sbb
fwait
push
xor
sbb
mov
out
loope
dec
arpl
mov
jle
sti
sti
mov
pop
daa
cs
stos
add
adc
or
jle
push
or
popf
pop
adc
movs
jge
fnsave
out
pop
ror
cs
sbb
and
ja
mov
push
sbb
sbb
lahf
test
imul
sti
mov
(bad)
in
retf
xchg
call
mov
scas
mov
into
push
push
sahf
sub
shl
div
or
add
push
sbb
adc
call
jb
or
dec
mov
aad
add
mov
pop
add
fidivr
retf
xor
or
pop
fistp
repnz
add
and
inc
pop
lods
fwait
adc
fist
jg
push
jb
aad
xchg
ficom
rcl
jbe
(bad)
xor
push
daa
jbe
jge
xor
mov
inc
cmp
aam
popa
push
pusha
stos
lea
cmps
call
rol
jmp
cs
mov
rol
fucomi
xor
(bad)
cmp
mov
stos
mov
loope
push
xchg
sub
dec
pop
or
xor
inc
inc
cmp
ret
inc
pop
fisttp
cmp
das
mov
fld
(bad)
pop
in
xor
mov
jne
movs
shr
(bad)
in
add
iret
(bad)
fidivr
sub
fnstenv
jne
test
sub
aam
xchg
shl
dec
or
or
enter
and
adc
sti
jo
cdq
(bad)
js
or
mov
mov
xor
movs
cmp
repz
mov
xchg
jo
cmp
aaa
fwait
cmp
adc
and
fnstsw
jmp
inc
cmp
scas
pop
dec
mov
es
cwde
ret
xchg
fwait
mov
icebp
sbb
cli
mov
xchg
add
outs
mov
jo
xor
lahf
jp
outs
in
icebp
jge
mov
sti
sahf
repz
xchg
inc
sub
fadd
clc
cmp
push
xlat
lock
out
jg
mov
arpl
pop
stos
cmp
push
pushf
std
pushf
or
jp
inc
inc
mov
sub
sub
adc
sqrtps
fwait
gs
push
xor
cmp
pop
adc
fwait
mov
rol
pop
shl
imul
fbld
sbb
(bad)
mov
mov
xlat
lahf
sub
xchg
lea
xlat
mov
int3
push
add
or
das
pop
dec
fcom
cmps
pavgb
ds
mov
ror
mov
sub
mov
iret
fs
iret
stc
cmps
mov
push
sub
call
xlat
mov
outs
push
pusha
test
into
icebp
jle
retf
mov
in
xchg
pop
mov
jns
(bad)
movs
cmc
xor
test
push
jge
or
push
std
dec
mov
inc
or
pop
mov
inc
mov
and
sub
sbb
push
lock
dec
repnz
loope
arpl
or
sub
lds
xchg
loop
jnp
lods
sub
inc
dec
js
mov
and
mov
xchg
movs
inc
jmp
repnz
push
pop
jne
cmp
pop
popf
out
mov
lock
mov
dec
sbb
sub
push
mov
add
pusha
pop
out
jmp
pop
ror
das
xchg
pop
into
and
clc
xor
or
pop
dec
sbb
pop
aaa
repz
retf
out
mov
sbb
ja
add
pop
jne
mov
std
movs
push
nop
jae
or
test
sahf
xchg
loopne
in
pop
aam
rol
inc
jnp
adc
xor
inc
mov
test
and
pop
pop
call
(bad)
adc
test
push
dec
xor
push
xchg
or
outs
ds
mov
popf
cmp
or
stos
cmp
cmps
adc
stc
jmp
sbb
adc
hlt
add
pop
push
mov
enter
loop
jecxz
adc
mov
loope
adc
fwait
push
fs
data16
ret
popa
push
pusha
fidivr
repz
xchg
ss
and
dec
shl
in
jp
xchg
or
retf
dec
fistp
rcl
stos
xchg
inc
xlat
xor
cmp
mov
xor
push
and
pop
retf
ret
pop
mov
popf
mov
sahf
jns
ror
adc
jo
cli
into
enter
mov
mov
xor
inc
enter
repz
jg
sbb
cmp
stos
les
cmp
add
xor
scas
stos
xchg
add
jmp
mov
adc
sahf
cmp
enter
sub
clc
and
add
jo
sbb
cmp
retf
pop
sub
push
pop
(bad)
out
mov
adc
xor
mov
mov
inc
lods
shl
daa
cli
push
sub
mov
std
clc
cmp
mov
cmp
retf
mov
in
jb
cwde
aam
daa
cmp
and
or
fxch
lahf
ror
adc
imul
adc
xlat
out
jmp
test
xchg
pusha
pop
mov
sar
fwait
cmp
hlt
es
(bad)
fistp
push
out
repz
pop
bound
xchg
mov
(bad)
xlat
out
test
das
inc
stos
ror
mov
sar
outs
jo
sbb
pop
or
or
xor
dec
lock
inc
xor
jge
sub
call
(bad)
aaa
inc
push
add
imul
ror
std
std
lds
je
cmp
std
mov
sub
ins
pop
add
fwait
out
cwde
jge
inc
fdivr
and
or
jnp
pop
dec
push
dec
xchg
popf
push
xor
hlt
cmc
stos
fidiv
ja
and
push
imul
jb
push
push
xor
dec
(bad)
out
dec
sbb
fs
mov
iret
mov
push
jb
out
pop
pop
pushf
je
ret
imul
sbb
and
add
in
pop
xor
push
jge
push
mov
cmp
mov
repnz
dec
cs
(bad)
jmp
mov
xor
or
in
fist
dec
pop
loope
inc
cmp
sub
push
cmp
mov
dec
movs
in
into
lods
(bad)
daa
xor
test
fwait
jns
ror
stos
mov
mov
mov
idiv
xor
mov
xchg
cmps
sbb
xor
(bad)
sbb
gs
cmps
retf
in
fild
jns
jle
fdivr
fwait
push
scas
adc
test
test
movs
lods
push
pop
mov
pop
div
pop
(bad)
jno
mov
mov
cmp
fisttp
inc
into
inc
sub
cmp
sub
loopne
push
(bad)
sbb
(bad)
addr16
mov
das
mov
daa
data16
push
loope
adc
adc
fadd
cmp
mov
jb
out
push
movs
cmp
or
lds
cmp
add
mov
push
shl
mov
push
sbb
dec
inc
jl
mov
test
add
or
inc
shr
push
push
sub
push
sbb
mov
mov
sub
iret
shr
lods
xor
pop
rcr
fwait
repz
mov
mov
sbb
cmp
mov
adc
fistp
addr16
shl
mov
inc
cmps
pop
mov
(bad)
lods
xchg
in
loope
jns
adc
repz
cmp
push
push
cdq
fsub
data16
cmp
hlt
push
push
and
leave
repz
pusha
cmp
scas
jge
push
mov
inc
(bad)
outs
pop
jp
cmp
mov
es
mov
jecxz
mov
fidivr
sbb
std
dec
lea
retf
fs
push
add
out
pop
outs
sub
adc
dec
cwde
or
jp
inc
pop
cmps
(bad)
pusha
mov
push
retf
cmp
icebp
adc
or
stos
xchg
jo
pop
jb
inc
push
mov
lea
js
repz
mov
pop
lea
add
add
jmp
add
add
add
inc
clc
add
add
add
add
scas
add
add
add
add
hlt
add
add
lahf
mov
lds
pop
add
ins
add
add
add
lock
inc
add
test
add
add
jns
add
add
add
add
add
mov
cmps
xchg
add
jnp
cmp
add
add
stos
add
add
add
add
add
add
add
jb
add
add
add
add
add
add
add
inc
add
add
add
add
jo
add
add
sub
pmullw
cld
(bad)
mov
shl
pop
call
adc
pop
aas
div
or
mov
es
mov
and
mov
mov
fwait
jecxz
sbb
lahf
aaa
outs
jo
cmp
or
pop
mov
xchg
lods
sbb
dec
dec
popa
pop
mov
xchg
dec
dec
je
or
add
cdq
in
or
dec
push
ficom
jmp
sub
dec
clc
pop
pusha
loop
ficom
ret
out
mov
and
mov
jno
int
js
stos
into
xchg
stos
xchg
mov
cmp
dec
or
pop
pop
mov
push
jnp
imul
retf
adc
fnstsw
xchg
push
push
out
sub
pop
dec
je
xlat
leave
mov
sbb
cmps
sub
sub
mov
aam
jnp
xchg
sbb
imul
ficomp
fild
aas
push
data16
scas
mov
inc
xlat
mov
pop
daa
inc
outs
xor
stos
cwde
(bad)
ja
add
adc
add
lods
rol
pop
xchg
or
and
test
dec
jmp
jmp
call
nop
sub
sbb
data16
mov
adc
test
stc
xor
fwait
rcl
mov
xchg
mov
jge
push
cwde
adc
pusha
ins
inc
jnp
jne
mov
push
mul
cmp
adc
push
mov
jge
pop
push
and
and
call
cmp
xor
push
xchg
or
or
es
imul
stos
inc
dec
pop
loop
jmp
gs
xor
popf
imul
cdq
lahf
loope
add
push
fwait
jnp
dec
ins
aaa
int3
xchg
fdiv
es
rcr
pop
loope
(bad)
movs
jecxz
in
sub
push
add
retf
arpl
out
inc
sub
ja
add
ja
jns
jle
(bad)
xlat
or
retf
pop
call
dec
in
iret
int
outs
outs
js
push
int
pop
add
pop
xor
cmp
(bad)
mov
sbb
movs
cmp
fistp
add
push
xchg
dec
fmul
sub
lods
lahf
aam
aad
in
ret
call
cmp
je
in
repnz
test
lea
and
mov
inc
push
add
cdq
mov
cld
cmp
push
js
(bad)
ror
jne
mov
cmp
iret
mov
ds
xchg
xchg
outs
inc
mov
mov
ret
js
addr16
bound
add
inc
pop
out
dec
xchg
mov
lods
inc
mov
sub
or
push
adc
jmp
adc
stos
fsub
dec
inc
mov
dec
(bad)
int
xor
es
jnp
loope
lods
cli
add
inc
add
ins
fs
and
repnz
jo
adc
pop
jbe
push
mov
cmps
xchg
dec
inc
sub
mov
and
mov
sti
pop
cmp
dec
in
or
and
ds
nop
pop
into
dec
mov
call
inc
mov
cmp
xor
outs
sub
mov
hlt
call
rcl
fs
and
jnp
pop
or
enter
add
and
cmp
dec
jg
fcomi
adc
inc
out
xchg
or
ins
xor
xchg
pop
mov
rol
addr16
sti
or
xor
in
iret
pop
iret
cmp
dec
mov
aaa
inc
dec
pop
pushf
mul
cmp
push
(bad)
retf
movs
fst
stos
push
push
add
les
xor
(bad)
es
fwait
inc
call
movs
test
ret
pop
std
jo
add
sbb
xor
ja
pop
add
imul
fldenvw
jg
mov
inc
es
loopne
and
mov
out
pusha
test
mov
push
and
sub
cmp
jnp
test
pmaxub
jbe
out
cdq
and
pop
jne
clc
bound
dec
scas
and
add
xor
inc
xchg
push
jl
cmps
mov
fld
jge
ficom
add
push
gs
fiadd
push
jecxz
xchg
add
fwait
xor
out
mov
push
jmp
or
enter
aaa
jbe
cmp
mov
lock
add
mov
lahf
jae
jae
pop
fsubr
aam
(bad)
in
ins
das
inc
add
sub
or
retf
arpl
(bad)
shl
pop
cmp
dec
movs
vunpckhps
mov
mov
sbb
pop
fwait
pop
push
int
push
das
addr16
fdiv
dec
jl
pop
cli
cmp
push
rol
nop
adc
and
mov
loopne
xlat
pop
xor
cmp
pop
cs
inc
add
ins
inc
jae
lods
and
xchg
push
ret
jb
xor
xor
into
lock
arpl
cmp
push
int3
jbe
in
cmc
in
pop
nop
loopne
pop
int3
push
adc
clc
into
and
sub
gs
or
imul
es
ja
test
jmp
pop
cmp
mov
pop
ss
add
inc
sbb
mov
clc
mov
push
mov
shl
cli
xchg
pop
cmp
shl
pop
add
jnp
pushf
cmp
jmp
push
cdq
in
cwde
jbe
or
sbb
mov
inc
movs
xor
sahf
sbb
je
inc
sub
(bad)
rcr
out
mov
jle
sar
mov
mov
iret
out
sar
adc
outs
ins
cmp
or
inc
movs
xchg
test
outs
shl
sbb
jbe
loope
push
(bad)
stos
int
inc
mov
mov
lds
xchg
cmp
sbb
push
xchg
fnstenv
push
out
lods
or
and
jae
add
imul
rdmsr
ss
xor
adc
mov
or
nop
addr16
inc
xor
dec
jl
cli
inc
repz
in
mov
outs
adc
out
jmp
repnz
(bad)
adc
inc
mov
inc
add
sbb
js
stos
ret
pusha
fiadd
mov
push
stos
sub
inc
in
sbb
shr
cmp
cs
jmp
mov
in
in
xchg
test
xlat
int3
adc
sahf
je
addr16
nop
lods
dec
movs
movs
mov
ret
sub
sahf
es
int3
sub
bnd
inc
xor
or
stc
or
adc
outs
mov
mov
add
mov
xchg
cdq
add
pop
ficom
inc
bnd
pop
shl
jl
mov
call
daa
jp
es
dec
xchg
inc
test
sbb
adc
jae
je
out
cmc
ret
mov
mov
es
push
shl
sbb
mov
jno
inc
sbb
retf
out
movs
dec
int3
movs
pop
mov
cli
sub
xor
rol
and
and
or
shl
mov
out
xchg
les
lds
add
shl
sbb
mov
les
not
pop
mov
lock
ins
jmp
dec
xchg
inc
jge
mov
mov
sbb
sahf
jmp
sahf
mov
xor
jnp
and
outs
leave
shl
xchg
retf
push
cmc
sub
int
mov
push
dec
hlt
or
or
cmp
shr
xor
push
cli
jp
jge
test
push
jg
pop
fwait
aam
ds
xor
in
loopne
ins
jne
sbb
ins
inc
and
(bad)
ins
xchg
jmp
pop
bound
add
pop
sar
retf
and
jle
jle
jbe
ror
xchg
hlt
jno
sbb
and
bound
add
or
call
jmp
shl
cdq
adc
shr
femms
(bad)
mov
push
mov
movs
outs
into
es
push
push
jecxz
jle
cmps
jb
mov
or
push
hlt
(bad)
ins
cs
sub
push
xchg
and
inc
bound
stos
ffree
jl
je
or
bound
addr16
xor
out
and
out
cmps
call
clc
xor
mov
test
xor
sahf
or
push
(bad)
jmp
pop
xchg
mov
xlat
and
sahf
gs
mov
mov
test
ficomp
fistp
ror
jge
or
in
cwde
mov
scas
and
jb
or
(bad)
adc
sahf
pusha
mov
es
lahf
push
adc
mov
or
fistp
mov
inc
mov
and
aam
call
mov
xchg
(bad)
call
or
outs
(bad)
in
cdq
jecxz
sahf
clc
or
cmc
vmovntps
shl
arpl
dec
cli
push
in
arpl
adc
loop
sahf
je
ror
jmp
in
rcr
jae
jmp
jg
add
sub
xor
stc
sub
pop
outs
popf
imul
push
sub
xchg
mov
out
std
fnstcw
cmp
cmp
mul
call
in
pop
icebp
pop
imul
or
jne
pop
rcr
out
test
jnp
rcl
add
shl
sub
inc
pop
mov
sbb
add
jp
clc
push
loopne
pop
mov
xor
pop
xchg
pop
cmp
jle
jae
leave
(bad)
or
out
add
popf
fxch
dec
mov
fs
sti
jb
jecxz
jo
push
clc
xchg
cdq
mov
inc
push
xor
sti
mov
call
xor
or
sub
outs
pop
stos
xchg
hlt
leave
mul
mov
xor
call
sub
push
test
hlt
out
push
xor
call
adc
outs
mov
stos
cmp
repz
push
and
adc
daa
mov
pop
and
pop
leave
inc
cs
sbb
inc
call
loopne
adc
mov
popf
ror
pop
and
test
add
cli
adc
mov
add
sub
movs
add
xchg
mov
mov
int
stos
in
xchg
jl
cmp
sub
jmp
mov
push
xor
jmp
aaa
sbb
lods
mov
rol
add
mov
mov
add
add
add
add
add
lock
rcl
fs
pop
mov
dec
inc
in
lods
and
in
mov
sub
xchg
sub
fisttp
sti
shr
jno
sbb
nop
into
sbb
fcomp
in
push
rcl
stos
sub
sub
outs
cmps
ret
inc
jmp
sbb
or
pop
fucomi
nop
fnstenv
call
es
inc
out
loope
iret
cs
mov
scas
pop
imul
mov
ja
mov
dec
ds
ins
outs
cdq
mov
xchg
cmp
push
pop
sbb
hlt
pusha
arpl
scas
cmp
or
add
sbb
adc
pop
xlat
mov
test
jno
sub
push
imul
and
push
test
push
(bad)
cmp
out
enter
stos
xchg
call
ja
or
adc
dec
mov
mov
ficomp
mov
ins
xor
inc
(bad)
mov
add
popf
aad
lock
jns
dec
pusha
pop
mov
adc
and
and
mov
cs
inc
jns
iret
fs
jecxz
pop
test
xor
ret
mov
lahf
cwde
pcmpeqb
js
jp
pop
or
adc
das
ficomp
or
xlat
jmp
mov
xchg
(bad)
aas
lock
push
repnz
sub
(bad)
pop
sbb
lea
mov
jno
cmp
adc
call
jnp
imul
fcmovnu
mov
add
pusha
mov
int
fcmovb
adc
add
mov
test
and
retf
repz
adc
and
jnp
test
dec
xchg
xchg
cwde
or
pop
mov
iret
and
cmp
js
jmp
sahf
scas
lahf
pop
shl
ds
mov
jge
fs
push
cmc
popa
xchg
xchg
mov
and
fisubr
adc
sub
nop
out
jmp
jg
fcomp
add
add
fld
sub
and
cli
retf
popa
xlat
cmp
nop
jle
sub
int3
mov
pop
and
int
popf
and
jmp
cmp
ins
and
stos
out
pop
push
call
mov
mov
push
cs
mov
mov
sbb
and
sbb
inc
lahf
outs
dec
pop
pop
ja
mov
jecxz
mov
mov
jns
push
jae
and
mul
adc
repz
(bad)
mov
jno
inc
mov
or
cmp
push
dec
or
sub
dec
lods
xor
ror
push
sub
in
call
cmc
hlt
cwde
ins
stos
lock
or
and
pop
lods
inc
in
xchg
xchg
jp
std
shl
xor
out
inc
xchg
loop
fidivr
jae
or
std
out
nop
loop
add
mov
fistp
inc
dec
ror
enter
in
xor
lods
ss
inc
mov
adc
mov
mov
push
and
std
mov
inc
ja
in
jl
add
cmps
adc
imul
je
xchg
loope
loop
lock
sub
das
dec
or
mov
gs
repnz
jg
aaa
cmp
std
pop
cmp
sbb
xchg
std
aad
daa
inc
cmp
or
lea
fs
inc
dec
stos
hlt
pop
dec
cmc
scas
jae
lea
test
add
ins
cmc
cmp
out
pop
js
imul
(bad)
adc
and
aaa
in
cmp
jmp
shl
in
ja
inc
sti
packsswb
mov
popa
mov
mov
mov
pop
test
(bad)
sbb
jmp
dec
leave
pop
leave
pop
xor
inc
int
sbb
jnp
out
es
inc
or
test
test
fs
cmp
dec
push
jnp
sub
jns
pop
xor
out
jmp
jne
mov
(bad)
xor
int3
fimul
fmul
leave
(bad)
pmaxub
jae
jmp
pop
push
retf
jb
jns
fstp
xor
push
sub
xlat
pop
sub
in
std
sahf
idiv
loope
dec
mov
jmp
es
xchg
pop
add
sbb
fld
and
inc
adc
mov
add
xchg
js
inc
mov
lds
mov
or
test
imul
outs
ret
cmp
mov
and
leave
(bad)
dec
pop
pop
and
xchg
stc
push
dec
mov
inc
push
pop
sahf
jecxz
cdq
repz
xchg
ins
or
imul
outs
jg
push
pop
out
push
push
rcl
call
je
cmp
test
shr
pusha
add
or
xor
jmp
or
dec
jne
call
std
fidiv
cmp
cmp
dec
mov
mov
pop
aam
xlat
call
scas
dec
mov
and
data16
in
and
aaa
sub
mov
int3
aad
jnp
mov
push
addr16
repnz
aam
(bad)
jb
mov
push
ja
test
frndint
rol
xor
retf
(bad)
fmul
cld
mov
and
icebp
inc
xchg
outs
ins
lahf
pop
mov
iret
aas
aas
in
inc
fist
pop
imul
loop
sub
push
jae
xchg
ffree
jge
(bad)
fistp
sub
xchg
call
jmp
pusha
add
push
lods
rcr
lahf
test
mov
add
leave
fldenv
retf
in
cmc
add
aad
sbb
push
push
jnp
and
push
inc
cmp
std
lahf
dec
leave
xor
pop
rcl
neg
scas
pop
mov
mov
in
sub
arpl
mov
(bad)
ds
inc
sbb
fidivr
and
pop
xor
adc
test
jge
sbb
leave
cmps
adc
das
lds
xchg
popf
ret
or
stos
jp
aad
mov
stc
stos
sbb
div
(bad)
adc
cld
rol
int
addr16
retf
mov
inc
and
add
js
loope
push
sbb
dec
adc
test
aad
inc
xchg
inc
xor
push
fisub
stos
popa
push
cmp
scas
(bad)
and
in
scas
cmp
sbb
lahf
pop
das
in
out
mov
push
xchg
add
inc
test
push
cmp
loopne
adc
fisubr
test
pusha
or
and
jbe
in
repnz
fstp
fild
inc
mov
sbb
retf
adc
push
neg
xor
mov
xchg
jl
ret
xchg
cs
and
dec
push
pop
movs
ret
and
and
mov
repnz
xchg
inc
movs
cmp
xchg
pop
ret
dec
jp
adc
sub
jp
cmp
imul
js
ficom
lahf
sub
lods
cdq
in
test
aaa
xlat
mov
popa
repnz
clc
frstor
and
mov
xchg
stos
mov
sbb
test
add
ja
xchg
aam
cs
test
and
dec
outs
mov
cwde
lahf
xchg
out
sub
ins
sub
aam
xchg
add
js
mov
mov
lock
mov
sub
sti
cld
xor
enter
adc
movs
nop
aas
and
mov
adc
pop
imul
mov
mov
(bad)
cmp
mov
adc
je
das
imul
sbb
push
and
dec
rcr
stc
cs
lods
jo
outs
addr16
add
arpl
or
and
dec
mov
mov
jae
repz
pop
ds
les
xchg
or
adc
sbb
sub
sar
push
test
dec
cmps
sbb
and
sbb
push
loope
dec
(bad)
jge
adc
(bad)
(bad)
xchg
mov
adc
xor
xor
xchg
or
pop
and
outs
cdq
push
in
aaa
dec
push
jl
cmovae
out
ret
sbb
es
imul
stos
cli
pop
push
sbb
lea
repz
mov
(bad)
pop
add
dec
or
or
sbb
loope
out
mov
add
and
jae
outs
cmp
jge
sbb
out
adc
jbe
cli
ins
cli
inc
inc
xor
cld
push
(bad)
stos
lea
xchg
les
pop
sub
mov
sub
and
push
or
push
cs
imul
stos
cmc
or
pop
fndisi(8087
and
jno
in
dec
push
sbb
inc
jo
aaa
int3
cld
cmp
pop
mov
test
les
retf
push
push
fwait
push
xlat
jne
mov
xor
inc
push
sub
pop
neg
mov
mov
mov
movs
loope
ret
retf
mov
enter
inc
inc
addr16
ss
stos
mov
jg
cld
jmp
xchg
jo
mov
into
xchg
cmps
or
mov
fadd
push
ret
xor
scas
xor
mov
add
in
xchg
aaa
lods
popa
push
or
(bad)
ins
jle
mov
and
out
sbb
(bad)
ja
fs
nop
sub
push
pop
mov
mov
jnp
aad
cmps
imul
dec
mov
inc
lods
div
jnp
test
arpl
add
xchg
cmp
movs
imul
push
xor
mov
or
and
dec
adc
xor
mov
cs
add
push
fwait
push
test
add
sbb
mov
ror
mov
xor
dec
and
xchg
movs
inc
cmp
movs
pop
pop
push
psubd
dec
push
cwde
mov
je
xor
out
in
mov
pusha
mov
jle
rcl
pop
jp
stos
inc
cwde
pushf
(bad)
ficomp
clc
and
mov
mov
jle
mov
aam
int3
mov
mov
iret
sub
scas
jbe
jg
inc
retf
cld
imul
sbb
push
jmp
pop
ins
rcr
leave
movs
(bad)
arpl
or
sub
(bad)
bts
dec
out
(bad)
push
mov
mov
es
sub
mov
mul
jl
daa
(bad)
dec
sbb
push
cmp
dec
xor
and
jmp
add
inc
add
add
add
add
add
cmp
add
mov
add
add
add
add
add
add
pop
add
ret
add
add
add
add
add
add
add
add
add
add
add
sbb
jp
add
add
add
add
add
add
add
add
add
and
add
add
add
add
add
add
add
add
add
add
pop
add
mov
add
add
add
rol
or
add
add
add
shrd
add
mov
add
pop
add
jg
add
add
add
inc
add
add
lock
push
add
pop
add
xchg
inc
mov
retf
retf
cld
mov
cli
jae
jne
pushf
sub
sub
mov
or
or
hlt
jge
sub
adc
jl
cmp
and
or
lds
mov
ror
and
loop
mov
outs
int
xlat
scas
inc
or
xor
adc
ret
test
dec
cwde
sti
test
dec
pop
jge
sahf
xchg
and
push
dec
aam
add
push
pop
pop
jae
repnz
xor
stos
mov
std
jns
jmp
dec
mov
xchg
enter
pusha
xchg
iret
lods
add
dec
stos
adc
dec
mov
jae
iret
in
xchg
add
clc
sbb
ret
pop
(bad)
cmp
xor
ins
movs
push
imul
fnstsw
sbb
pop
push
jl
daa
cdq
out
loopne
xor
push
call
xchg
outs
ins
jge
mov
fisttp
pop
nop
stos
jecxz
jno
sbb
jae
add
lock
out
(bad)
pop
bound
cwde
mov
push
jno
jmp
cs
mov
pop
int3
retf
dec
mov
pop
dec
into
jmp
dec
dec
(bad)
sub
pop
mov
add
mov
cmp
mov
dec
jp
mov
and
(bad)
mov
inc
and
sti
fcom
push
sub
mov
popf
push
gs
xchg
mov
lock
addr16
push
xor
arpl
fild
mov
mov
aam
sub
std
mov
mov
or
stos
jne
cs
ins
sub
xchg
cld
xchg
sub
xchg
push
inc
add
and
pop
pushf
ins
xor
mov
mov
cwde
fcomi
push
sub
mov
gs
test
xchg
inc
rcl
sbb
jp
dec
ret
pop
jecxz
aaa
jmp
int3
outs
jp
jno
pop
test
adc
jecxz
movs
js
mov
lock
jmp
es
mov
mov
push
pop
mov
mov
repz
push
test
fs
in
or
adc
adc
rol
sub
jl
push
pop
ins
sub
std
cmp
push
adc
in
cmp
addr16
inc
xchg
dec
pop
das
(bad)
pop
repnz
ss
sub
and
pop
cli
aaa
dec
inc
mov
dec
test
sub
inc
mov
fcomi
mov
out
mov
popa
pop
pushf
dec
aaa
or
adc
sub
adc
xor
outs
aaa
xchg
mov
cli
dec
sbb
mov
fs
jge
div
ins
pusha
cdq
call
movs
cmp
adc
scas
das
das
sbb
lock
ret
call
mov
push
xchg
and
dec
sub
sub
push
push
addr16
out
sub
mov
(bad)
ins
sub
xchg
jbe
hlt
aad
not
dec
ret
and
inc
jo
mov
dec
xor
int3
movs
rcl
arpl
sub
stc
and
rcr
lea
lahf
sbb
jbe
fcomp
or
iret
or
mov
movs
in
and
mov
adc
push
sar
mov
mov
lods
call
int
cwde
fcomip
lahf
mov
addr16
shr
lock
pop
test
mov
mov
sti
cwde
jae
mov
xor
lock
jmp
ins
adc
sub
ins
mov
xor
and
dec
ins
leave
mov
mov
lock
sti
mov
pop
mov
sti
retfw
dec
or
and
xchg
loope
pushf
shl
sbb
jg
xor
add
push
jns
(bad)
ins
push
cmp
cmp
xchg
pop
mov
test
arpl
nop
out
add
dec
out
add
add
xor
test
sub
stos
pop
inc
in
xchg
sbb
pop
dec
xchg
ins
scas
lods
and
adc
out
outs
adc
ins
fsubr
test
ror
mov
inc
movs
leave
call
inc
xor
cmc
push
mov
ret
loopne
mov
pop
call
repnz
hlt
lods
dec
lds
mov
rcr
repz
xor
fisttp
test
ror
ss
jb
in
into
test
jnp
jnp
arpl
xchg
stos
jns
xor
xchg
adc
lods
retf
add
lods
push
neg
mov
loope
mov
cdq
mov
sbb
fsubr
(bad)
mov
ins
dec
leave
mov
pusha
arpl
ins
(bad)
mov
mov
stos
iret
mov
jns
lods
xchg
out
push
cmc
cmp
jge
mov
(bad)
(bad)
pop
add
pusha
(bad)
sbb
xchg
or
sbb
addr16
mov
ja
ss
mov
adc
fs
and
mov
sub
add
dec
outs
sub
cmc
push
cmp
xor
mov
shr
push
shl
pop
test
mov
cwde
adc
aad
inc
or
aaa
sub
stos
xchg
scas
xor
call
xor
clc
or
rep
mov
mov
jecxz
push
retf
or
call
scas
jnp
nop
mov
sahf
jl
xor
mov
leave
leave
mov
stos
mov
mov
sub
push
and
mov
mov
xchg
or
or
push
das
or
ins
push
push
or
cmp
sbb
mov
ins
inc
adc
data16
add
rcr
add
ja
ins
stos
fcomp
dec
add
in
inc
cdq
idiv
sub
je
mov
cwde
fcomi
mov
out
mov
lahf
xlat
add
loope
jbe
jecxz
aaa
inc
mov
xor
xor
add
in
xchg
ja
call
push
and
xchg
out
call
xor
push
sbb
ret
push
jne
test
push
mov
inc
inc
pop
je
int3
cmp
mov
in
ret
js
movs
cmp
mov
daa
ret
inc
xor
sbb
shl
add
jb
sbb
loope
(bad)
es
mov
sub
ret
dec
cmp
stos
int3
outs
inc
mov
pop
mov
imul
hlt
(bad)
fld
mov
mov
push
sub
cmp
out
jne
loopne
ins
or
(bad)
es
cmps
push
movs
pushf
test
adc
or
adc
mov
or
nop
es
push
fsubr
fcmovnb
jl
adc
scas
mov
jg
or
xchg
int3
les
(bad)
sahf
mov
cmp
adc
sub
mov
add
push
repnz
sti
adc
rcr
fwait
mov
sub
data16
enter
inc
call
mov
icebp
sti
and
rcr
nop
and
dec
jecxz
xchg
fwait
pop
pop
add
xor
jbe
and
(bad)
jo
add
dec
jo
adc
out
rcr
shl
sbb
dec
shl
mov
dec
cmp
scas
es
xor
adc
cmp
and
ins
retf
pop
cs
and
or
test
shr
dec
jo
les
push
int
and
inc
xor
outs
dec
mov
and
sti
adc
popf
gs
in
xchg
add
or
or
and
test
mov
les
arpl
inc
neg
push
xor
dec
enter
(bad)
or
push
mov
mov
daa
push
jmp
xchg
je
mov
jb
mov
adc
call
cs
(bad)
cld
xor
stc
lahf
pop
mov
push
dec
push
lock
cdq
shl
sti
jnp
movs
das
push
loopne
mov
xchg
xchg
xor
pop
repnz
jbe
mov
mov
mov
movs
fwait
dec
or
clc
mov
jnp
mov
loope
cmps
and
cmps
add
jbe
jb
les
in
dec
out
push
add
jecxz
dec
xor
and
sti
jge
jmp
mov
jl
idiv
into
loop
dec
mov
(bad)
cmc
lods
movs
je
push
fisub
cmp
jmp
mov
cmp
out
mov
jns
xchg
dec
dec
int
in
mov
test
int
cwde
xor
or
jmp
rol
repz
adc
(bad)
stos
mov
mov
jecxz
push
retf
mov
fidiv
ror
jnp
xor
(bad)
add
mov
(bad)
dec
pop
int
xchg
ins
in
dec
movs
push
jl
popf
test
xor
stos
sbb
mov
or
push
dec
bound
xchg
lods
sbb
cmp
xor
add
pop
or
jae
push
lahf
sbb
mov
sbb
push
sbb
dec
pop
dec
mov
add
jle
jmp
or
out
mov
popa
pop
pushf
dec
leave
int
stc
cmps
mov
imul
cmp
or
mov
mov
adc
xor
jbe
sub
movs
jge
inc
xchg
sbb
fs
pop
hlt
xchg
shl
dec
or
shl
adc
aas
cmps
fsubp
les
(bad)
jne
mov
mov
aam
pop
push
adc
mov
es
pop
push
jmp
or
shl
xchg
in
push
std
mov
mov
sub
out
js
mov
push
jmp
popf
shl
into
inc
neg
sbb
add
dec
psubd
std
mov
cmps
inc
push
fdiv
add
inc
push
and
popa
mov
out
std
mov
test
repnz
cwde
xchg
sbb
nop
mov
pop
mov
xchg
add
add
mov
and
inc
icebp
mov
push
and
xor
(bad)
lahf
inc
fld1
shr
jmp
sbb
xor
pop
adc
cmp
lea
(bad)
lods
mov
cmp
sti
movs
jl
lock
mov
mov
dec
enter
pusha
retf
mov
push
test
jne
and
retf
lds
movs
icebp
ret
and
pop
mov
xor
imul
shr
jg
shl
and
cmps
mov
ret
ja
adc
pop
cmps
lahf
inc
les
mov
lea
jne
sar
loope
aaa
std
cld
jmp
push
test
xchg
movs
sub
movs
add
push
add
add
add
iret
add
add
add
add
stos
add
add
jns
add
add
adc
add
add
add
sub
add
repnz
add
add
add
add
add
add
add
add
add
add
add
mov
add
repz
add
add
add
add
rol
add
in
add
add
jb
add
out
add
test
add
add
outs
add
add
push
add
add
adc
add
add
add
in
add
add
(bad)
xor
add
add
sbb
leave
add
add
mov
out
add
add
add
add
add
add
jg
sahf
xchg
add
add
stc
mov
add
push
ja
adc
out
in
xor
dec
or
in
pop
xchg
mov
cmp
call
lods
fist
or
jne
nop
dec
dec
jge
fucomip
sub
in
aaa
nop
mov
jl
mov
inc
test
mov
(bad)
xor
call
repz
in
jb
xchg
std
out
popf
shl
ret
dec
(bad)
adc
out
sub
movs
stc
xchg
lahf
aas
inc
sbb
jo
ret
cmps
xchg
or
jb
or
(bad)
jmp
push
sbb
rcr
das
xchg
or
aam
push
stos
out
jle
mov
sub
mov
xor
add
mov
and
rdmsr
push
je
cmc
test
rol
push
(bad)
ror
xchg
dec
call
jecxz
jg
inc
call
jle
aad
not
mov
into
lds
cmp
imul
jle
adc
xchg
pop
mov
jne
mov
dec
mov
inc
pop
or
or
and
or
clc
call
xchg
sbb
jmp
cmp
or
fiadd
loop
fdiv
sub
je
repz
push
(bad)
jecxz
movs
jmp
add
add
and
add
js
or
arpl
lods
pop
xor
sbb
aad
out
jle
jecxz
jae
adc
push
hlt
sub
scas
arpl
fucom
sub
rcr
int3
(bad)
mov
dec
aas
sub
and
(bad)
pop
popa
repz
sbb
pop
pop
dec
adc
pusha
int3
fsub
mov
and
in
in
mov
ret
xlat
push
int3
aad
sbb
fwait
inc
idiv
jmp
sbb
outs
push
in
jo
or
fwait
jne
and
xchg
cmp
pop
movs
adc
mov
call
jmp
ss
jne
(bad)
pop
scas
pop
in
mov
js
das
retf
pop
inc
fldcw
sub
sub
outs
into
(bad)
in
push
inc
jnp
mov
lds
mov
bound
pop
mov
pop
pop
xor
clc
(bad)
push
xchg
fild
(bad)
mov
pop
sub
fnstcw
cmp
xor
jge
leave
sti
test
cmp
sahf
out
sub
jo
into
sub
adc
jg
repnz
in
mov
dec
fbstp
sub
cs
aad
xchg
(bad)
xchg
sub
or
pop
out
shl
jne
mov
sub
inc
and
out
pop
sbb
test
cli
sbb
test
cmps
shl
scas
rcl
jno
aad
ins
add
ss
mov
fwait
and
jp
inc
call
mov
mov
ds
mov
push
clc
mov
mov
or
add
sub
or
jne
gs
cmps
stos
inc
push
rcr
mov
or
mov
pop
icebp
jle
jno
fwait
cmp
dec
mov
and
or
pop
cld
cmp
mov
repnz
mov
mov
(bad)
test
ins
out
jmp
xchg
mov
adc
add
lds
hlt
mov
movs
test
sub
dec
loop
push
stos
pop
or
mov
movs
sub
test
test
outs
mov
mov
or
test
jbe
sbb
push
jmp
hlt
mov
(bad)
pop
xchg
sub
sbb
sub
or
les
mov
sar
clc
or
adc
ror
fdiv
adc
bound
in
lds
lods
int3
inc
pop
(bad)
jle
icebp
icebp
and
or
mov
pop
xchg
mov
call
jp
ins
jnp
cmps
adc
and
mov
les
xlat
ja
mov
or
call
call
ss
fcomp
push
pushf
jmp
les
fcom
add
stos
xchg
pop
push
add
fadd
call
sbb
adc
dec
scas
mov
mov
js
ja
pop
ss
and
push
pop
call
lahf
sub
xchg
aam
mov
(bad)
gs
movs
xor
sub
push
cdq
(bad)
out
xchg
fbstp
mov
movs
fxch
adc
dec
in
mov
mov
mov
icebp
aad
push
sub
stos
xchg
mov
ja
sub
retf
mov
xchg
and
jae
inc
popa
stc
adc
push
ja
fs
mov
push
pop
cmp
std
xchg
add
jmp
ins
pop
xchg
push
das
dec
cmps
jle
std
and
pop
aam
hlt
leave
mov
cmp
sbb
rol
adc
sub
adc
hlt
fstp
xchg
fisttp
pop
inc
repz
and
pop
pandn
test
add
adc
xchg
lock
mov
pop
xlat
adc
cmp
mov
aam
add
pop
mov
loop
movs
dec
fs
iret
dec
xchg
mov
fstp
pop
sti
js
sbb
xlat
mov
das
pop
push
in
jno
ror
cmp
std
inc
xchg
imul
mov
sbb
shl
inc
jecxz
mov
xor
aad
cld
and
add
arpl
ds
loop
mov
jbe
fcom
mov
push
sbb
jg
in
ficom
(bad)
jg
xor
rcl
mov
adc
retf
add
(bad)
jle
cli
sti
mov
mov
cmps
ja
fsubr
movs
and
nop
pop
jmp
mov
push
inc
xchg
cmp
add
in
lock
xor
mov
add
mov
cmp
sahf
and
in
xlat
cmp
stos
mov
lea
pop
fnstenv
pop
mov
aaa
sub
mov
(bad)
cmps
in
xchg
test
xor
mov
mov
add
test
(bad)
and
pop
daa
call
pusha
jo
mov
(bad)
stos
fxch
or
daa
into
pop
sub
pop
ret
jecxz
jle
xchg
in
push
jae
inc
dec
or
test
cmps
xchg
fcmovnbe
add
lea
test
scas
(bad)
hlt
gs
cmps
ja
adc
inc
dec
inc
mov
ins
adc
daa
or
scas
dec
dec
push
dec
sbb
xchg
(bad)
iret
xor
out
stos
ins
push
or
es
fidivr
pop
stos
out
pusha
imul
fdivrp
push
dec
aad
pop
xor
repz
nop
lds
xchg
or
pop
fs
movs
mov
les
fcmovne
push
cmc
fst
dec
cdq
addr16
pop
test
push
or
popa
cmp
xor
shl
and
das
xchg
inc
xor
cmp
add
scas
inc
dec
and
pop
jmp
add
push
jbe
aaa
imul
ja
xor
pop
ss
(bad)
shr
xor
out
jno
and
aas
jp
shl
hlt
push
scas
dec
adc
jno
cdq
imul
push
jmp
shl
(bad)
jl
into
xor
test
popf
(bad)
scas
mov
fadd
add
or
inc
in
mov
inc
ja
and
pop
ins
add
leave
jmp
fdivr
push
shl
cmp
dec
pop
and
in
sub
mov
into
and
arpl
xchg
xchg
ficomp
popf
mov
jmp
(bad)
retf
xchg
jae
inc
hlt
mov
cli
pop
fs
in
popf
dec
xor
sbb
push
popa
mov
inc
cdq
push
(bad)
nop
dec
(bad)
cmp
dec
imul
(bad)
adc
xor
test
cmp
(bad)
push
sbb
call
pop
mov
cdq
loopne
aam
push
jno
push
and
add
mov
add
or
dec
(bad)
mov
rol
jbe
xchg
mov
or
pop
and
push
sbb
dec
jb
dec
ret
icebp
jge
pop
fadd
jno
(bad)
sub
push
xchg
push
mov
sub
inc
jb
repnz
std
mov
out
pop
fisttp
or
jo
lock
mov
pop
push
add
test
icebp
mov
int
fidivr
xor
mov
movs
ja
sub
shr
mov
lahf
mov
add
fdiv
mov
mov
iret
push
(bad)
push
mov
mov
xchg
inc
lods
ret
mov
cmp
popf
int
push
in
div
jno
push
mov
pusha
retf
in
xchg
mov
enter
jno
jmp
addr16
test
push
rcr
int3
test
xchg
pop
(bad)
jns
cmc
jmp
enter
xchg
mov
adc
nop
aam
push
add
in
push
js
mov
push
out
rcl
(bad)
icebp
xchg
xchg
cmp
pop
mov
inc
dec
adc
lods
push
xor
push
inc
dec
ret
mov
movs
mov
mov
out
outs
jae
jb
mov
fsubr
jecxz
dec
mov
add
mov
fimul
enter
movs
test
out
adc
pop
xor
inc
clc
ins
dec
xchg
or
std
idiv
push
sub
mov
inc
and
arpl
jno
call
data16
cli
lahf
stos
(bad)
jg
inc
sar
nop
dec
xchg
add
cmp
jo
push
cwde
add
pop
push
sub
jo
in
rol
push
adc
push
cld
mov
sbb
in
add
addr16
xlat
dec
inc
ret
or
sub
push
std
(bad)
lahf
dec
sub
mov
xor
sahf
jp
inc
mov
jmp
in
nop
pop
test
imul
jae
push
jns
out
stc
sub
cmp
icebp
ss
outs
add
loopne
adc
rcr
adc
test
sti
push
or
mov
mov
(bad)
daa
aam
imul
mov
daa
cwde
mov
sub
loop
add
aam
fadd
xor
sar
jno
data16
fwait
xor
addr16
mov
call
fwait
and
jmp
jge
sub
push
je
dec
mov
ret
add
mov
stos
sbb
add
cld
test
sub
lea
neg
inc
mov
clc
sbb
out
sub
add
add
inc
add
add
add
add
outs
jnp
add
add
push
add
add
and
add
add
add
cmp
add
xor
add
add
cmp
add
add
add
add
add
add
cmp
add
add
add
add
cmp
add
add
add
add
add
add
add
mov
in
add
inc
add
in
add
pushf
mov
add
add
add
add
dec
add
add
pop
add
add
push
add
add
add
sahf
add
jnp
add
add
add
add
cwde
add
add
lds
in
add
add
xchg
add
add
sbb
add
add
add
xchg
add
add
fld
add
add
add
add
add
add
add
rol
add
add
cmp
add
fiadd
add
sub
adc
add
sti
xchg
add
add
add
pop
add
lods
cmovs
jmp
add
add
pop
add
add
add
rol
add
add
ins
push
jns
add
add
add
add
add
add
nop
add
add
add
pop
add
jae
add
jp
cmp
mov
add
add
add
add
add
xor
add
push
xor
fadd
and
add
add
add
mov
add
add
pop
imul
int
add
add
add
add
add
aad
add
xor
sbb
fwait
add
lods
hlt
jo
loop
pop
imul
sub
std
and
cli
ret
inc
mov
aam
sub
push
lods
lea
sub
and
mov
stc
sbb
outs
lock
(bad)
cwde
dec
inc
dec
pop
gs
dec
jbe
xchg
cmp
in
arpl
outs
pop
cmp
xchg
xchg
mov
jmp
mov
fisttp
xchg
les
jae
fwait
lea
retf
lahf
pop
push
adc
xor
jp
pop
call
mov
pushf
mov
dec
xlat
jno
cli
cmp
dec
cli
je
sbb
adc
inc
cmp
in
mov
(bad)
aaa
push
push
or
adc
mov
pop
(bad)
sti
sti
inc
or
or
adc
cs
enter
add
test
cmp
aad
sbb
mov
fwait
(bad)
leave
aas
sub
mov
int
loopne
mov
popf
push
inc
ss
jno
les
mov
popa
fwait
retf
mul
lods
jo
fist
mov
lock
inc
xchg
inc
add
leave
cmps
xor
stc
cld
adc
mov
mov
push
enter
popf
add
mov
je
js
fs
dec
aad
out
xchg
push
jnp
xchg
cwde
mov
ins
inc
fidivr
pop
outs
jmp
stos
lods
push
out
test
pop
int3
cmc
lods
and
(bad)
and
add
inc
jg
cmp
sbb
aam
or
mov
(bad)
adc
xchg
mov
jg
shl
jecxz
mov
sbb
stos
push
jecxz
sbb
push
push
daa
fcomp
lock
sub
mov
jne
loope
or
jle
sub
or
jno
je
es
hlt
ds
(bad)
jg
ds
cmp
(bad)
adc
dec
mov
in
call
jno
inc
ja
push
add
sbb
loope
cmp
jl
js
jo
pop
mov
pop
cmp
aaa
jmp
pop
xchg
and
push
frstor
jecxz
dec
in
int3
xchg
je
(bad)
inc
call
or
push
out
cmc
dec
mov
jnp
mov
sbb
sub
imul
cld
lahf
add
cdq
sub
out
cmp
shr
aas
xchg
push
stos
cli
jo
mov
pop
push
int
popf
in
(bad)
pop
xor
inc
jbe
push
sub
cmp
mov
into
sti
popa
rol
mov
ja
xor
movs
mov
sahf
enter
jbe
and
inc
cld
push
les
js
aam
stos
ss
mov
or
push
iret
cwde
mov
stc
push
xor
pop
rol
dec
aam
sbb
retf
cmp
enter
nop
ds
xchg
(bad)
out
pop
adc
xor
adc
out
int3
sbb
sahf
data16
push
fdiv
iret
jmp
push
mov
movs
aad
retf
inc
call
lahf
adc
loope
push
sbb
jmp
imul
popa
sbb
jl
add
dec
adc
mov
cs
loop
pop
jmp
sub
lods
es
(bad)
data16
cld
dec
pop
aad
out
ror
or
mov
dec
lahf
push
and
ins
test
gs
mov
push
jb
jp
push
int3
lds
jmp
ds
aas
out
stc
xor
xchg
fwait
push
das
in
sub
add
xchg
je
xchg
movs
pop
sub
pop
jg
fbld
mov
pop
mov
aad
std
xlat
call
cli
jl
popf
pop
mov
ins
sub
fs
movs
fist
jmp
mov
cmps
fs
packuswb
push
xlat
sub
mov
jae
into
(bad)
retf
fadd
pop
call
ins
mov
scas
mov
mov
sub
bound
push
mov
outs
jnp
mov
jnp
mov
outs
fst
cmp
xchg
inc
mov
and
test
mov
sub
mov
iret
xchg
dec
jne
jmp
ficom
and
mov
int3
push
loope
push
mov
sbb
cmp
xchg
stos
add
repnz
pushf
test
inc
dec
or
xor
not
xor
popa
imul
sub
push
std
add
jmp
xchg
adc
cmp
or
mov
loope
pop
(bad)
sub
leave
mov
cwde
data16
test
xchg
stos
pop
add
dec
rcr
lods
stos
test
mov
mov
dec
cmps
cmps
inc
cmp
mov
and
int
adc
je
adc
cmp
mov
dec
sbb
mov
ins
push
lock
nop
rcr
cmp
iret
xor
stos
pop
jne
js
jo
inc
mov
iret
mov
scas
test
popa
push
outs
jmp
mov
stos
dec
inc
pop
test
sbb
mov
push
movs
cmp
jg
and
rcl
pop
push
je
call
je
sub
imul
(bad)
jnp
icebp
rol
adc
clc
mov
mov
hlt
cmp
mov
push
xchg
cmp
push
mov
add
mov
xor
sbb
jns
sub
or
lods
pop
mul
jbe
add
xchg
push
pusha
inc
pusha
aam
mov
or
sbb
jne
aaa
sahf
inc
xor
aad
push
dec
pop
shl
sbb
scas
and
ss
and
mov
shr
loope
sti
ret
mov
mov
inc
add
icebp
mov
arpl
push
icebp
mov
clc
or
jmp
ds
mov
pop
fdivr
fimul
and
adc
add
imul
cmp
xchg
and
xor
test
call
and
jno
add
hlt
pop
jmp
pop
clc
jp
sbb
mov
and
fstp
imul
sbb
in
mov
scas
adc
push
test
inc
or
out
adc
ja
jle
rcl
xchg
push
in
shl
addr16
push
jns
jb
inc
call
outs
call
or
in
jo
lods
out
jg
push
mov
mov
test
dec
retf
jmp
mov
inc
cmps
pusha
stos
shl
fwait
arpl
add
push
hlt
push
ds
adc
ret
cli
inc
aaa
mov
and
std
jge
jg
in
push
clc
push
adc
jne
adc
jecxz
mov
xlat
push
cmc
or
std
mov
pop
inc
dec
fiadd
and
mov
mov
pop
int
loope
jne
pop
mov
add
mov
xor
xchg
mov
popf
test
loopne
ins
push
fstp
sahf
inc
jmp
ja
fstp
repnz
add
adc
or
sbb
sti
fcom
xor
scas
das
push
pop
sub
fistp
test
das
mov
test
loop
imul
xor
(bad)
hlt
sub
push
push
pop
mov
sub
ins
ins
jno
sar
test
mov
test
xchg
into
sub
fbld
les
das
adc
inc
push
pop
xchg
enter
mov
and
ins
imul
in
and
or
mov
(bad)
ins
and
in
ret
push
push
jne
adc
or
and
pushf
out
xor
cmp
addr16
iret
je
(bad)
sbb
adc
xchg
shl
lahf
xchg
add
cmc
in
push
shr
mov
inc
sub
outs
pop
js
mov
or
add
fs
adc
je
or
(bad)
sbb
loopne
mov
adc
repz
ret
fldcw
mov
stc
stc
js
xchg
mov
test
outs
mov
cld
lea
jns
mov
mov
es
das
cs
xchg
add
gs
push
dec
jg
push
mov
imul
xchg
jae
sub
jnp
xchg
or
cmp
mov
ds
mov
pop
int
inc
lahf
enter
arpl
push
xor
dec
cmp
addr16
add
test
test
daa
ror
xchg
jecxz
sbb
push
dec
sbb
int
(bad)
cli
push
cmp
xor
mov
xor
inc
add
or
test
jl
js
cdq
xchg
or
dec
push
pop
(bad)
fldcw
pusha
cmp
les
clc
int
addr16
jne
mov
push
xor
dec
psrad
in
test
xchg
stc
fiadd
push
and
mov
shl
in
das
test
inc
int3
mov
sub
pop
gs
sub
push
(bad)
fldcw
in
movs
mov
push
lds
mov
outs
dec
cld
mov
ins
jp
sub
dec
inc
mov
arpl
inc
stos
cmp
in
rcl
or
cmp
dec
jns
mov
stos
popf
xlat
adc
aad
bound
shl
imul
add
push
enter
sub
mov
or
aad
jecxz
cmp
adc
loopne
ror
fstp
pop
outs
mov
add
jle
pop
dec
fcomp
iret
(bad)
jns
xchg
and
ins
popf
into
jmp
fdiv
test
fldenv
sbb
xor
nop
(bad)
cmp
adc
bound
not
bound
leave
call
rcl
sti
dec
xchg
push
dec
pop
(bad)
nop
out
fist
nop
push
dec
pusha
into
fwait
cli
inc
inc
mov
add
pop
enter
lods
dec
dec
in
call
and
(bad)
sub
sub
mov
icebp
sbb
mov
sar
ret
mov
outs
mov
test
jbe
xchg
pand
inc
sbb
mov
cmc
inc
int
dec
fcom
outs
sbb
adc
loopne
dec
dec
int3
jp
xchg
push
mov
dec
ins
(bad)
sub
mov
jge
lds
cmp
in
dec
das
sahf
add
add
sbb
mov
pop
loope
mov
push
jnp
fisttp
mov
jp
arpl
xor
inc
ja
pusha
cmp
xchg
repz
xor
fs
add
fs
push
jo
and
jno
ja
lods
lods
mov
rcl
jl
mov
adc
fnstcw
add
push
add
add
add
add
add
add
add
sbb
add
add
add
mov
add
add
rol
add
add
xchg
add
add
add
cmps
add
add
add
add
add
add
add
add
mov
add
add
or
loop
add
add
add
add
add
add
add
add
retf
add
add
popa
add
add
add
add
add
push
add
add
add
add
add
add
add
add
push
add
mov
add
add
add
add
push
add
add
add
add
add
add
add
rol
push
add
add
add
add
add
add
add
add
mov
add
inc
push
add
mov
push
add
add
add
jae
add
add
add
add
add
call
add
add
add
add
inc
add
add
add
add
add
add
add
add
add
add
add
add
mov
cmps
add
add
pop
add
add
rol
add
add
add
inc
stc
jae
mov
adc
adc
(bad)
jbe
out
cmp
ja
lea
inc
and
jle
es
and
xor
inc
mov
xchg
xchg
iret
pushf
dec
iret
lods
mov
into
or
shl
test
pop
leave
inc
popa
daa
jl
adc
dec
outs
mov
mov
xor
jg
add
mov
or
mov
or
ret
fldcw
cmp
jno
cmp
cwde
adc
in
cmp
add
cmps
pop
xor
and
pushf
pop
pop
push
sbb
xor
xor
mov
pushf
int3
xchg
pop
or
mov
fistp
xor
ficomp
(bad)
adc
enter
loop
sbb
adc
dec
(bad)
sub
stos
sub
std
dec
test
fsub
xor
test
add
test
and
(bad)
xlat
stc
inc
sub
add
mov
mov
fadd
ds
mov
test
js
ins
repz
sbb
jge
add
mov
mov
cmp
xor
imul
(bad)
push
sub
test
jae
xchg
sahf
imul
jp
in
enter
fwait
mov
aad
jecxz
movs
pop
lds
sub
arpl
pop
sbb
dec
xor
mov
jno
out
and
jmp
add
shl
movs
fcom
leave
add
or
scas
lods
cli
daa
scas
cmp
cli
das
pmullw
sub
adc
jmp
mov
mov
retf
(bad)
daa
int
xor
icebp
pop
in
lahf
ret
lods
push
in
mov
lahf
sub
rcr
dec
jp
or
mov
mov
fs
sub
and
ins
ss
shl
jge
or
xlat
add
mov
dec
adc
xchg
xor
lods
dec
retf
xor
mov
in
xor
pop
jae
enterw
xchg
ins
mov
dec
data16
mov
stc
bnd
mov
xor
rcr
mov
add
lahf
ja
push
dec
push
and
(bad)
stc
test
pop
mov
push
test
pusha
in
sbb
mov
mov
sbb
rcr
push
pop
jg
xchg
repz
stc
push
pop
xchg
add
pop
rol
sar
ja
jge
add
adc
popf
scas
std
(bad)
nop
cmp
jb
cwde
lods
les
gs
jne
(bad)
fcmove
data16
dec
(bad)
test
xchg
xchg
jmp
push
in
clc
cmps
push
cli
ficom
push
repz
xor
add
lds
push
pushf
cmp
jl
leave
rcl
out
mov
sub
push
stos
push
popa
loopne
bound
cmp
sahf
retf
xor
pop
mov
mov
xchg
xchg
shl
cmps
mov
ror
dec
ds
cdq
ins
mov
sahf
rcl
mov
sahf
ret
and
in
fisttp
lahf
jne
in
mov
sub
add
push
jns
aam
mov
pop
fs
aam
jg
mov
adc
mov
jnp
and
ins
or
pushf
repz
test
push
fs
xor
pop
jmp
xor
add
inc
out
(bad)
ins
rcl
stc
nop
cdq
dec
stos
outs
pop
std
and
mov
xlat
aas
call
imul
xchg
(bad)
push
ficomp
retf
int3
jmp
pushf
neg
out
mov
push
data16
call
lock
or
push
hlt
cmps
pop
fisub
stos
jge
aam
jp
stc
and
push
jns
cwde
and
into
or
cmps
xor
sub
or
sbb
mov
das
dec
xchg
mov
lock
sub
into
or
adc
adc
shl
jmp
not
sbb
mov
lahf
adc
or
adc
add
xor
jbe
ds
lock
mov
not
xchg
sub
push
dec
mov
mov
mov
lds
imul
aam
sub
ret
cmp
retf
jo
or
loopne
adc
popf
pushf
mov
imul
sub
cld
pop
cmp
cmp
xor
out
out
cld
xchg
mov
inc
fldenv
mov
xor
movs
pusha
and
sbb
dec
arpl
cmp
mov
pop
xor
dec
outs
gs
xor
sub
inc
rcr
mov
inc
xchg
cmp
xor
test
test
fbstp
sbb
pop
dec
outs
out
retf
dec
ret
inc
rcl
int3
push
je
outs
and
lods
arpl
cmp
inc
call
in
add
(bad)
pop
jg
add
push
test
push
test
adc
jmp
(bad)
jle
js
nop
adc
sub
push
fcmovnu
inc
cmc
xchg
or
sub
inc
push
imul
and
mov
ret
pop
popf
scas
push
cli
(bad)
mov
jecxz
pop
(bad)
inc
popf
imul
xor
and
fisubr
push
shl
inc
xchg
in
test
xchg
outs
inc
sub
rcr
cmp
inc
gs
arpl
push
add
xchg
int
rep
pop
dec
adc
je
lods
push
dec
inc
popa
shl
xchg
int3
mov
ja
std
cmp
sub
out
push
xor
(bad)
mov
xor
rcr
mov
daa
pop
dec
mov
mov
cld
(bad)
fwait
popa
add
js
jmp
mov
sti
jno
adc
sub
push
jmp
pop
mov
jnp
cmp
push
imul
pop
test
push
inc
test
es
les
es
and
pop
push
dec
(bad)
mov
hlt
push
or
je
or
clc
retf
add
mov
imul
pop
ret
mov
cwde
inc
mov
push
in
jecxz
movs
add
movs
psrlq
js
call
mov
(bad)
pop
ins
sub
xor
xchg
pop
mov
dec
mov
loopne
rol
adc
fnsave
int3
dec
(bad)
cmp
retf
adc
sbb
popa
aas
mov
mov
add
out
dec
jge
add
xchg
or
push
mov
inc
(bad)
sub
inc
movs
jge
sbb
or
sub
or
push
push
or
jbe
es
add
add
ret
sub
add
test
xlat
sbb
test
dec
cs
xchg
pop
mov
loope
add
mov
inc
std
daa
outs
test
sbb
rcl
ror
inc
mov
retf
enter
and
add
cld
ja
cmp
ins
test
fcomp
cmps
ja
out
leave
ins
adc
or
in
sar
setle
in
adc
pop
pop
js
xor
or
(bad)
fwait
jno
imul
bound
push
lods
retf
ja
pushf
xchg
loope
ins
ins
push
pop
lds
adc
pop
std
adc
add
lahf
or
cmps
jne
mov
pop
(bad)
cmc
(bad)
dec
cwde
dec
and
scas
test
dec
je
mov
jb
mov
pop
push
(bad)
clc
inc
xchg
push
out
outs
shr
fnstcw
(bad)
xlat
xor
out
xor
inc
out
cld
add
(bad)
and
mov
test
inc
js
pusha
scas
xor
scas
loope
shl
movs
xor
mov
dec
lods
add
mov
dec
xchg
je
add
scas
into
out
clc
inc
sbb
shr
xor
ret
pop
jne
repnz
push
mov
icebp
arpl
sub
fwait
daa
mov
dec
mov
sbb
push
fs
rol
dec
mov
repnz
xor
push
cs
mov
pop
mov
sub
test
mov
mov
ins
scas
and
dec
and
dec
cmp
add
inc
ins
adc
in
cmps
dec
or
jno
jge
sub
jae
and
sbb
mov
test
inc
sub
js
push
ja
ja
jne
stc
inc
sbb
inc
sbb
aas
(bad)
mov
mov
and
dec
mov
add
push
out
xor
xchg
dec
or
fwait
and
inc
loop
dec
loopne
stc
mov
pushf
push
(bad)
shl
repnz
mov
and
outs
sahf
dec
es
xchg
adc
xchg
loope
xchg
fmul
shl
mov
push
fcomp
loopne
dec
and
(bad)
aaa
fs
pusha
cmp
mov
add
jae
aam
or
dec
loop
inc
jnp
and
mov
retf
or
jae
or
ficom
ret
add
fisub
rcl
stos
popa
xor
adc
call
cbw
cdq
int
xor
inc
call
ins
push
shr
push
popf
cmps
sub
ror
imul
cmp
mov
loop
cmc
movs
mov
push
xchg
mov
aam
addr16
pop
jo
bound
inc
ja
ins
cmp
popa
jmp
mov
lods
pop
cmp
movs
xchg
rol
jmp
push
popa
mov
cmp
jmp
mov
inc
outs
stos
imul
mov
xchg
or
lds
test
jno
cmp
push
xchg
call
hlt
ret
out
daa
xchg
rol
xor
cmp
ret
push
jno
xor
or
test
sbb
dec
or
push
dec
retf
adc
fucom
pop
sub
ror
push
pop
jno
fwait
mov
mov
jnp
icebp
int3
cdq
(bad)
jl
and
daa
test
mov
and
hlt
push
xlat
mov
jmp
xor
rol
ins
mov
retf
adc
xchg
je
and
bound
cmp
mov
in
jecxz
push
xlat
in
and
aam
ficom
pop
ret
fld
aas
iret
mov
and
jae
outs
fdivr
(bad)
cld
sub
div
and
and
mov
xchg
leave
adc
push
xchg
(bad)
(bad)
in
shl
aas
jnp
jp
push
sahf
outs
sub
shl
pop
inc
dec
jp
jle
pop
jmp
aam
fldcw
inc
push
leave
xor
mov
add
add
add
add
scas
add
stc
ins
add
add
pop
jo
add
add
add
inc
add
add
add
add
add
add
fild
or
add
add
and
add
add
add
add
add
add
add
sldt
add
inc
add
xchg
add
add
mov
add
add
add
add
add
les
add
add
add
add
or
add
add
add
std
add
jae
pop
add
add
add
xor
add
add
mov
ret
nop
add
add
add
xlat
maskmovq
test
add
add
add
add
add
add
add
add
inc
popa
xchg
outs
stos
ror
pusha
push
sbb
pop
push
je
out
add
imul
inc
mov
mov
inc
sub
icebp
cmps
jecxz
mov
inc
push
cmp
std
in
div
add
push
xchg
loopne
aas
xchg
adc
cli
mov
sbb
jecxz
fs
xor
(bad)
ds
push
push
mov
fstp
test
pop
cld
sub
(bad)
xchg
fst
scas
movs
mov
xchg
or
push
clc
sbb
cdq
xor
jp
jnp
push
stos
dec
in
outs
in
pop
repz
into
sub
cmp
jnp
lock
mov
int3
mov
lods
push
sbb
xchg
movs
test
xor
into
ins
retf
imul
cmp
mov
(bad)
dec
jg
and
test
inc
xor
pop
xor
mov
scas
xor
cmps
lea
inc
iret
lds
push
mov
rcr
mov
inc
xchg
(bad)
cwde
mov
rcr
sbb
mov
mov
add
xor
mov
sub
mov
call
ret
push
test
sbb
mov
addr16
jnp
cli
cld
xchg
adc
pop
pop
shr
add
movs
hlt
mov
add
push
dec
icebp
xlat
outs
push
xchg
push
sbb
outs
dec
ss
(bad)
cmp
gs
push
pop
dec
xchg
ret
dec
or
stos
and
pop
sub
push
cmp
jge
mov
in
pop
jnp
dec
mul
shl
push
xor
movs
retf
dec
mov
int3
loopne
jg
adc
ror
cmp
arpl
add
cld
push
rcr
add
dec
push
xor
add
jg
test
mov
outs
(bad)
cmp
aam
bound
in
dec
(bad)
lds
test
mov
push
adc
dec
ins
aam
mov
pop
mov
cmp
xchg
retf
push
int3
arpl
std
call
xor
adc
(bad)
mov
nop
daa
iret
lahf
push
inc
mov
test
pop
sahf
add
mov
outs
jp
xchg
pop
add
stc
fiadd
add
dec
je
xor
add
inc
jg
jne
xchg
fstp
mov
dec
jns
test
ins
ror
xlat
dec
push
jb
retf
pop
cli
lods
stos
fs
bound
cmp
push
(bad)
ins
xchg
stc
mov
loope
mov
adc
fmul
(bad)
fbld
mov
stos
fst
ins
fmulp
and
clc
fst
ret
and
jp
cmps
sbb
or
pop
and
popf
inc
inc
xor
sub
icebp
ret
(bad)
and
retf
adc
xchg
cwde
pusha
imul
jp
jb
sbb
je
out
inc
dec
jp
int
add
add
adc
nop
les
hlt
dec
push
ret
mov
mov
ja
iret
xchg
rcr
mov
lods
cmp
iret
push
mov
xor
push
sbb
and
addr16
stc
inc
push
ret
push
inc
pop
mov
sub
push
int3
dec
xchg
mov
adc
jg
jmp
stc
mov
xchg
xor
mov
lock
out
cmps
call
daa
popa
push
lahf
xchg
fs
pop
jo
mov
xlat
out
add
and
sub
adc
or
popf
inc
xor
scas
push
or
out
mov
inc
cmps
mov
ror
ret
sbb
dec
aaa
mov
lods
xor
push
div
cli
in
inc
lods
xor
pop
or
xchg
jge
fsub
mov
mov
pop
xor
mov
pop
jne
les
push
adc
add
jb
outs
mov
enter
outs
nop
stos
ret
nop
clc
mov
fcom
div
sub
enter
mov
lds
fs
cwde
xchg
outs
jnp
cdq
mov
ja
jmp
xchg
lds
xor
cdq
pop
push
data16
pop
xor
and
cmc
mov
sub
ja
rol
enter
pop
pusha
and
pop
mov
pop
mov
jno
push
jns
jle
sub
adc
mov
rcr
xchg
push
aas
add
add
pop
xlat
dec
mov
clc
out
mov
(bad)
cmp
leave
push
inc
mov
jbe
aam
dec
outs
stos
cmc
jb
pop
jo
movs
mov
jg
mov
jo
sbb
push
sahf
clc
push
iret
test
jbe
cli
out
je
fcomp
adc
pop
loop
pop
sub
aas
scas
adc
jle
push
pop
adc
shr
jo
cmp
into
xchg
xchg
adc
clc
mov
pusha
jle
pop
data16
and
in
call
dec
cdq
xchg
int
(bad)
sub
int
cmp
push
push
sub
ins
sbb
adc
lods
pop
in
inc
fimul
pop
jo
push
in
iret
push
popf
adc
adc
je
movs
in
or
ss
rcr
div
imul
adc
inc
pusha
and
sbb
stc
loope
pop
iret
mov
in
or
jo
push
xchg
mov
mov
xor
mov
xor
dec
inc
(bad)
frstor
sti
shl
fisttp
cmp
in
sbb
jecxz
lahf
mov
cmp
call
cmc
movs
lods
cmp
mov
xchg
mov
sar
xlat
outs
adc
mov
sub
mov
fsub
jp
mov
test
inc
pop
enter
pop
fcom
iret
or
das
(bad)
xchg
mov
mov
cwde
repz
fcomp
movs
adc
repnz
outs
cmp
fwait
jb
retf
cwde
pushf
add
into
sub
rcl
and
jmp
pop
push
cs
popa
mov
sbb
movs
dec
push
mov
ja
and
xor
(bad)
inc
xchg
mov
mov
(bad)
add
jae
outs
inc
mov
pop
add
pop
movs
pusha
add
fwait
xchg
pop
inc
xchg
jmp
shr
nop
mov
pop
lea
dec
fcomp
jb
(bad)
xor
into
js
mov
mov
(bad)
sbb
cli
cmp
pop
mov
xor
or
mov
xor
add
mov
stc
imul
jp
call
ss
je
inc
sbb
pop
scas
sub
mov
(bad)
and
mov
retf
(bad)
test
adc
mov
(bad)
jmp
fs
inc
lock
mov
pop
loop
cmp
xor
cmp
mov
rcl
cld
add
sub
les
jb
ja
mov
into
dec
call
scas
mov
stos
imul
dec
add
adc
xchg
cmp
xor
add
ret
mov
push
lods
or
push
xor
sub
je
mov
cmp
sahf
in
fisttp
sub
jb
mov
add
loope
mov
enter
sbb
inc
movs
mov
fwait
xchg
lock
loopne
sbb
pop
out
data16
cmp
ins
scas
sbb
push
test
xor
pop
jne
stos
and
mov
dec
push
cmp
adc
mov
mov
and
js
ja
jecxz
sub
lods
xchg
(bad)
std
push
jae
or
and
inc
or
cdq
addr16
push
rcr
(bad)
jg
inc
ja
mul
cld
pop
mov
inc
loopne
jo
fmul
out
ror
jp
push
lahf
mov
sahf
mov
xchg
mov
pop
(bad)
cmps
push
adc
sbb
(bad)
shl
inc
xchg
movs
mov
mov
pop
sbb
xchg
pop
fadd
(bad)
jge
dec
dec
into
xchg
xor
push
mov
sti
mov
cmp
jmp
push
mov
add
jno
cli
fcomip
mov
outs
les
mov
jg
sbb
mov
mov
push
add
xlat
jmp
addr16
pushf
popa
hlt
push
or
les
scas
pop
leave
and
dec
cmp
pop
cmps
fwait
jmp
sbb
xor
adc
inc
push
sub
popf
sbb
and
cmp
mov
cdq
push
add
xor
cmps
outs
aad
mov
add
inc
adc
icebp
ds
inc
lea
xor
stos
push
sub
lea
pop
add
pop
pop
popf
mov
adc
inc
mov
arpl
pop
rcr
pop
and
(bad)
fcomp
xor
mov
sahf
addr16
outs
cwde
nop
dec
push
mov
cmps
jne
xor
dec
js
add
das
xor
or
mov
mul
sbb
or
or
pop
pop
jo
fild
bound
or
push
loopne
adc
xchg
push
pop
bound
dec
mov
mov
push
(bad)
das
xchg
push
jns
ret
or
push
pop
mov
leave
fwait
retf
mov
push
rcl
out
inc
cld
mov
fwait
push
jge
add
in
addr16
xchg
push
mov
jmp
xchg
popa
imul
sub
xor
sub
(bad)
mov
and
das
push
cmc
rol
lods
or
add
pop
cmp
jg
inc
mov
jmp
mov
push
xchg
xor
xchg
xlat
mov
xor
es
test
jno
outs
cmp
or
cmp
cld
arpl
retf
xlat
clc
dec
out
inc
and
fsubrp
retf
adc
pop
fldenv
shr
inc
iret
mov
pop
jge
sbb
inc
aad
scas
cmps
stos
xchg
jnp
xchg
std
ins
(bad)
test
sti
adc
jmp
xchg
adc
dec
add
xchg
push
sub
or
jne
pop
imul
mov
xchg
pop
pop
stc
pop
adc
pop
xchg
pop
mov
ret
into
pop
dec
sub
jno
jg
jo
inc
and
(bad)
cli
pusha
mov
push
add
fistp
loopne
sbb
frstor
sub
jae
aas
and
sti
lods
nop
mov
imul
pusha
jbe
bndstx
into
jb
in
cmp
or
xchg
sbb
mov
nop
outs
out
sub
int
inc
daa
jge
(bad)
jle
mov
xchg
das
test
lods
loopne
les
loope
mov
mov
(bad)
sub
loop
adc
add
in
add
cmps
add
add
pop
std
add
add
add
add
add
add
add
mov
add
add
sub
jle
add
add
add
add
add
add
add
add
add
add
add
sub
add
add
or
add
add
add
add
inc
add
rol
add
add
mov
lods
add
add
add
add
add
add
add
das
add
add
sbb
add
mov
add
leave
add
add
add
add
add
jecxz
add
xchg
add
add
test
add
add
add
add
add
add
add
sbb
mov
add
add
add
add
in
out
push
add
fild
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
scas
add
add
add
add
bound
add
add
add
add
xchg
add
add
add
aas
add
mov
bound
add
cwde
add
add
add
add
rol
add
add
sbb
add
add
add
addr16
add
add
xchg
add
add
mov
jbe
add
jb
js
mov
aas
push
rcr
fistp
mov
stos
mov
lods
cs
clc
sub
mov
mov
cmc
out
push
jge
out
ins
lods
pop
outs
mov
push
dec
ds
add
inc
rcl
(bad)
jp
pop
add
mov
add
je
inc
les
ret
jns
sub
aaa
pop
cmp
cwde
jo
adc
mov
push
iret
imul
loopne
cdq
mov
mov
xchg
(bad)
or
jmp
mov
lock
popf
dec
jmp
stc
pusha
cmp
jge
fsubr
push
or
in
xor
mov
(bad)
sbb
psrlw
jae
push
pop
out
into
xor
lods
in
jb
pop
daa
outs
fadd
lods
nop
stos
test
ins
fucom
mov
scas
test
sbb
fild
pop
mov
shr
es
mov
gs
mov
stc
xchg
dec
hlt
push
or
stos
adc
fs
cmp
out
push
dec
xchg
fimul
mov
ja
jnp
jmp
ret
jmp
fnstsw
int3
add
ins
adc
xchg
pushf
push
pop
cmp
xchg
sar
retf
test
hlt
pop
jecxz
or
jo
dec
aaa
inc
and
xor
data16
cmp
inc
es
jecxz
sub
cmps
mov
mov
fdiv
popf
push
sub
add
add
adc
repnz
das
add
jmp
ror
sbb
ror
outs
stc
dec
lahf
and
mov
lea
shl
add
pushf
shl
popa
arpl
and
sbb
imul
jno
xchg
pusha
or
cli
push
add
mov
xchg
push
scas
movs
in
fwait
cmc
dec
and
add
into
adc
ret
int
movs
leave
fs
pop
cld
add
inc
in
mov
pop
nop
sub
inc
or
push
inc
mov
mov
mov
out
xor
test
(bad)
fmul
xor
sbb
sbb
pop
xor
jl
mov
mov
sahf
adc
cmps
or
mov
pop
ror
cmps
in
(bad)
sti
dec
pushf
leave
push
lock
mov
imul
inc
sub
in
lods
and
jb
pop
loop
fwait
pop
movs
pop
test
cmp
sar
adc
add
jno
mul
(bad)
cmp
in
cmps
outs
cmp
aaa
xchg
jge
rcl
jb
sub
push
fs
jns
out
add
fidivr
pop
fadd
jbe
(bad)
and
mov
imul
int
mov
gs
jmp
pop
shl
and
mov
out
ja
sub
or
or
and
xor
pop
popa
aad
push
mov
ret
stos
push
lods
(bad)
jbe
push
fldenv
pop
jle
dec
cmp
push
bound
add
shl
test
cmc
push
test
mov
add
clc
int3
jb
push
jnp
push
repz
and
mov
aas
bound
add
rol
mov
(bad)
sar
lds
jne
ins
jnp
sub
retf
cmp
push
sub
jno
ret
xor
js
call
cld
test
push
mov
movhlps
pop
or
cmp
hlt
icebp
loope
sbb
and
or
int3
in
pop
loop
mov
out
in
inc
xor
cmp
fcomp
pop
ret
stos
rcl
scas
outs
xchg
mov
mov
div
aad
cli
fs
test
fs
lock
call
pop
push
jp
clc
dec
shl
nop
jno
cmc
shr
jle
xchg
sub
daa
xchg
push
pushf
ret
dec
test
xor
adc
clc
repz
leave
sbb
mov
and
stc
out
(bad)
sbb
jg
dec
push
dec
push
fs
push
mov
retf
push
out
or
mov
and
icebp
ja
sbb
js
pop
push
pop
lods
sahf
int3
mov
sub
loopne
shr
ror
leave
scas
jns
fmul
inc
cld
fdivr
inc
inc
das
(bad)
fs
xchg
mov
inc
jno
adc
push
jnp
lods
jns
sbb
mov
mov
mov
push
sahf
and
aas
sub
xlat
xor
out
sbb
enter
or
cdq
sub
cwde
adc
imul
mov
sbb
sbb
sub
mov
or
lea
mov
cdq
or
push
sub
repnz
lods
shl
outs
(bad)
add
push
push
into
popa
hlt
jg
or
stos
adc
cs
stos
bound
mov
sub
mov
es
add
mov
ins
adc
inc
cld
and
mov
test
push
push
mov
lods
push
rcr
xchg
lea
push
jle
ins
jmp
push
fstp
test
hlt
mov
test
mov
mov
aam
test
mov
pop
in
mov
jnp
es
call
call
push
xchg
hlt
int3
mov
xor
pop
mov
push
addr16
cmp
leave
dec
push
lock
pop
(bad)
push
stos
xchg
dec
jg
aad
jl
xchg
mov
or
mov
lds
pop
sbb
jecxz
mov
mov
cmp
movs
adc
sub
pop
xchg
test
mov
jne
xchg
pop
jo
add
sub
cvttps2pi
push
lds
jo
pushf
mov
outs
cwde
cmp
stos
gs
mov
in
pop
push
imul
lods
shr
xchg
fwait
mov
add
inc
lahf
test
xchg
arpl
adc
push
icebp
and
movs
mov
add
(bad)
lods
dec
ins
jmp
cmp
sbb
jecxz
jb
adc
repz
ds
mov
repnz
pop
xor
mov
fsubr
arpl
cmp
adc
mov
push
cmps
and
jle
adc
out
sahf
sbb
retf
out
xchg
loop
call
xchg
inc
(bad)
sub
clc
push
ins
in
jb
out
movs
stos
lock
dec
loop
mov
add
xlat
stos
lods
fistp
xor
fs
lods
leave
xor
push
ins
mov
pop
pop
mov
inc
xchg
mov
(bad)
aaa
adc
nop
nop
es
test
add
neg
nop
in
js
in
push
add
repz
add
(bad)
add
adc
mov
repnz
jmp
imul
sar
nop
cs
addr16
arpl
fwait
mov
sbb
(bad)
leave
fiadd
mov
xchg
je
sbb
xor
xchg
int
mov
ds
xchg
fld
ret
test
mov
cmp
xchg
mov
jmp
sub
retf
add
nop
dec
sub
jne
push
sub
js
cli
lea
rol
sar
cmc
je
pop
or
dec
and
inc
hlt
add
pop
cmp
cmp
int
dec
sbb
jl
rol
mov
imul
(bad)
cmp
and
lahf
xor
into
xor
dec
xor
push
ret
ss
xchg
call
cs
stc
loop
inc
jne
dec
sub
mov
and
loopne
test
add
jae
mov
loope
fild
sahf
pop
adc
jle
jmp
add
ret
movs
pop
outs
dec
repz
jns
mov
cmp
xchg
(bad)
stos
ds
vpmaxub
fild
in
das
addr16
cmc
in
sbb
pusha
clc
xchg
xchg
and
mov
cli
dec
outs
nop
das
pop
adc
and
into
push
ins
loopne
mov
loop
adc
in
push
inc
stc
pop
pop
into
retf
into
mov
bound
sbb
and
push
in
icebp
mov
out
mov
jp
and
mov
xchg
jne
jmp
out
sbb
and
out
push
dec
add
pushf
add
mov
ins
inc
mov
ficom
lock
dec
jp
push
dec
adc
add
je
mov
push
add
fisub
push
jae
xor
inc
imul
mov
mov
fsub
outs
dec
inc
fidiv
les
adc
call
dec
mov
and
inc
inc
mov
push
imul
push
or
ja
outs
mov
neg
dec
int
cld
idiv
fs
loope
(bad)
mov
sub
dec
pop
sub
jns
jns
inc
loope
cmp
mov
add
movs
test
je
or
dec
ins
ins
jmp
int3
fscale
loopne
fcom
neg
and
inc
push
xlat
jnp
movs
adc
outs
call
inc
and
pop
jo
push
or
hlt
(bad)
fcmovu
ficomp
int3
inc
pop
fwait
mov
dec
mov
aaa
les
and
scas
jno
jae
lea
push
mov
ins
aad
cmp
fs
or
dec
xor
int
je
xchg
sub
retf
rol
push
pop
and
pop
ror
jo
and
shr
or
repz
inc
ficom
mov
ins
shr
mov
aad
pop
mov
or
inc
(bad)
pop
pop
ds
stc
mov
leave
jg
test
lea
int3
or
call
mov
(bad)
or
sbb
sub
aam
add
xchg
loop
(bad)
pop
rol
push
test
(bad)
mov
push
push
sub
les
(bad)
jmp
lahf
aaa
sub
adc
cli
jnp
dec
pop
loop
repz
sbb
mov
popf
lea
fnstsw
push
push
cld
or
xchg
(bad)
mov
mov
xchg
xchg
mov
js
pusha
aad
in
cmp
jl
mov
jl
mov
das
pop
pop
jbe
enter
jge
mov
xchg
push
mov
mov
mov
les
add
clc
test
dec
sbb
imul
arpl
pop
out
xor
rcr
xor
mov
inc
add
adc
push
icebp
shl
retf
aam
mov
icebp
dec
jmp
iret
and
cmp
mov
add
jmp
add
add
add
add
add
adc
add
add
add
add
jb
add
add
inc
add
add
add
add
rol
add
add
add
pop
cs
or
add
add
add
add
add
add
add
std
add
add
sub
add
add
add
add
add
or
add
clc
add
mov
add
add
test
add
add
jnp
add
add
add
add
add
ins
pusha
sbb
push
cmc
adc
pop
push
mov
scas
mov
icebp
imul
cmp
jo
pop
push
je
ror
imul
shl
mov
mov
xor
std
push
and
ss
(bad)
fcomp
pop
dec
fimul
push
push
retf
xchg
retf
xchg
mov
mov
aaa
adc
out
add
mov
sub
mov
sbb
xchg
shl
ja
icebp
mov
test
mov
jne
pop
in
fbld
es
lahf
aaa
push
cmp
xchg
fucomp
loope
faddp
syscall
arpl
inc
dec
push
adc
or
ins
movs
xlat
push
mov
xchg
push
stc
cmc
jge
mov
push
js
ror
ficomp
lahf
sbb
fstp
lods
xor
lods
fbld
push
ror
out
bnd
dec
cwde
imul
cwde
cmc
or
popf
in
ficomp
stc
jg
sub
xchg
mov
js
mov
lahf
mov
adc
or
std
bound
dec
ds
ret
iret
out
mov
push
lods
arpl
out
stos
(bad)
ins
mov
xor
test
daa
xor
outs
repz
lahf
rcr
pop
xor
mov
pop
aas
ins
add
dec
ror
mov
pop
ret
mov
sbb
ret
(bad)
sbb
cli
pushf
ins
test
adc
loope
daa
es
push
je
aas
or
std
cmp
icebp
mov
or
inc
jp
dec
jmp
mov
mov
out
dec
or
hlt
add
aaa
dec
mov
call
lods
out
xor
mov
xor
(bad)
adc
ds
push
cdq
and
sub
lock
push
xchg
call
mov
inc
inc
lahf
aas
mov
cld
jns
(bad)
sub
xor
rol
(bad)
inc
push
out
jbe
jae
repz
add
push
in
(bad)
xor
mov
xchg
xor
cld
out
stc
inc
(bad)
test
in
adc
pop
je
stos
sub
call
fdiv
dec
jecxz
out
xchg
sbb
xor
push
cmp
xchg
cs
or
jno
push
adc
retf
pop
lods
sbb
je
xlat
xor
and
jno
inc
xchg
sbb
out
mov
dec
jle
loopne
out
pop
push
and
push
pop
jo
pop
das
(bad)
in
inc
sub
lahf
jns
retf
cmc
mov
xchg
pop
pop
and
fimul
stos
sbb
push
mov
sub
retf
xchg
lods
xchg
pop
popa
cmp
inc
jmp
lods
jne
dec
pop
popa
xchg
movs
inc
inc
cmps
mov
xor
push
and
pushf
ja
xor
mov
or
pop
ror
movq
outs
jmp
adc
mov
ds
test
call
add
ret
mov
daa
mov
mov
push
mov
ja
test
push
cld
fst
(bad)
jo
std
cmp
mov
dec
add
cmp
jbe
neg
mov
leave
lahf
or
push
pop
ins
push
mov
sub
or
mov
mov
mov
jo
mov
movs
jmp
cmp
xor
xor
add
mov
aam
test
retf
push
jns
das
fwait
in
pop
and
xchg
arpl
mov
(bad)
js
xchg
pop
(bad)
push
xchg
repnz
dec
xchg
jbe
inc
fldcw
stc
into
pusha
mov
in
mov
loope
adc
add
xor
outs
outs
mov
call
cmc
pop
loopne
call
pop
dec
ins
sbb
stc
push
daa
mov
test
ja
xchg
retf
sbb
dec
push
cmp
jns
sar
out
inc
push
cmps
cmp
aad
mov
nop
sub
ins
cmp
cmp
cmp
jmp
cmc
repnz
add
outs
or
cli
loope
ins
push
ficomp
jae
clc
jp
and
mov
cmp
cmp
pushf
ds
ja
and
pushf
ja
inc
dec
cmp
lock
imul
scas
ins
push
mov
xor
push
dec
clc
push
aad
add
pop
cs
add
loope
xor
scas
stc
sbb
hlt
ss
aaa
jbe
push
jl
mov
aas
push
mov
pushf
xor
push
stc
mov
call
shl
cmp
lods
add
outs
mov
inc
xchg
mov
test
push
sbb
test
xor
push
out
push
stos
mov
or
rcr
adc
xor
inc
push
(bad)
jb
sbb
das
mov
test
dec
and
mov
lea
add
lock
jbe
xchg
or
jns
cld
popf
adc
xchg
xor
imul
ror
add
jl
xor
push
mov
movs
push
(bad)
xchg
mov
popa
pop
test
mov
and
(bad)
mov
sahf
mov
js
mov
popf
out
inc
mov
aam
pop
xor
lods
stc
mov
jb
or
cmps
scas
loop
pop
(bad)
(bad)
es
into
pop
and
or
leave
packuswb
je
or
into
dec
push
repnz
and
jb
lahf
push
xchg
mov
div
loopne
cmp
pop
mov
std
mov
sbb
cmp
sbb
sub
cs
add
jmp
inc
imul
xor
or
or
sbb
call
ret
lock
test
mov
dec
push
and
cwde
cmp
push
sbb
add
adc
movs
shl
sbb
sbb
push
xchg
imul
fdiv
add
lock
call
(bad)
dec
sub
jmp
inc
cs
push
push
push
hlt
mov
dec
sbb
sbb
ins
jno
adc
xchg
cli
mov
js
mov
mov
test
imul
or
push
cld
dec
and
sbb
cmps
jb
xor
adc
sub
aaa
in
add
sbb
test
pop
mov
(bad)
clc
movs
mov
stos
lock
inc
xchg
(bad)
dec
arpl
out
shl
data16
(bad)
cmp
fld
xor
arpl
add
mov
pop
scas
mov
fwait
sub
hlt
(bad)
movs
(bad)
pop
mov
jg
push
sub
adc
(bad)
mov
cmps
repz
push
(bad)
int
shl
ja
and
into
mov
enter
mov
push
inc
mov
xchg
pop
fistp
call
test
aam
pushf
arpl
int3
pop
retf
(bad)
(bad)
adc
loope
jo
mov
fnstcw
xlat
fsub
retf
jbe
sbb
jmp
in
retf
mov
mov
call
jo
pop
mov
es
push
mov
cmp
adc
push
jmp
sbb
jns
add
dec
xchg
cwde
or
loopne
cmp
pop
outs
jecxz
mov
cmps
and
add
cmp
mov
imul
es
je
xchg
push
int
or
cld
mov
sar
dec
push
xchg
inc
bound
push
dec
jp
out
and
push
(bad)
mov
std
mov
addr16
pop
mov
adc
js
add
inc
cmc
test
cmp
mov
fcom
mov
or
psubq
retf
mov
cmp
adc
stc
enter
movs
call
test
jecxz
push
enter
sbb
sbb
loop
les
fs
mov
sbb
or
inc
jnp
call
(bad)
stos
in
mov
das
inc
imul
xor
inc
or
or
xlat
push
and
pop
mov
das
mov
mov
scas
loopne
sti
push
outs
ror
adc
inc
xor
outs
(bad)
push
lea
test
jno
inc
ret
add
popf
test
pop
xor
adc
xchg
adc
and
pop
(bad)
rcl
inc
test
jno
sti
stos
mov
mov
movs
cmps
xor
mov
adc
mov
ds
imul
push
sub
stc
push
loope
lea
ja
dec
fistp
push
mov
shl
pop
mov
pop
dec
mov
push
lods
xor
xchg
sub
cmp
push
fsub
test
adc
(bad)
out
repnz
inc
in
sub
jl
movs
fld
imul
adc
xor
nop
(bad)
xchg
inc
out
sbb
push
dec
adc
cdq
iret
and
push
retf
test
push
call
dec
dec
pop
fild
sahf
lods
pop
cmp
nop
in
add
imul
es
shr
repnz
or
test
adc
pushf
dec
cmp
or
scas
sub
dec
add
test
or
add
leave
mov
or
aam
int3
sub
in
sbb
xchg
and
rol
cmp
push
inc
scas
cdq
and
lods
sti
dec
add
addr16
cmp
(bad)
jmp
mov
mov
push
adc
mov
sahf
sub
(bad)
and
stos
xor
xor
repz
xchg
mov
mov
adc
out
or
rol
das
add
movs
sub
adc
movs
jae
pushf
sbb
mov
fadd
mov
gs
int3
(bad)
ss
icebp
inc
ror
xchg
jl
xchg
xor
mov
jo
push
inc
ss
ja
push
in
mov
jg
or
jg
out
fstp
adc
rol
fsubr
mov
pop
lods
inc
enter
fcmove
jge
or
(bad)
neg
jge
push
sbb
dec
into
(bad)
std
mov
inc
pop
cmp
jecxz
inc
lahf
push
dec
int
in
imul
sbb
add
daa
sub
add
dec
xchg
xchg
xchg
ror
and
test
jbe
add
mov
cmp
aas
in
push
(bad)
mov
adc
cmp
ja
cli
scas
xchg
jno
test
push
hlt
xor
pop
out
rcl
jge
push
xchg
and
push
xchg
jmp
sub
or
std
movs
add
call
fist
rol
push
fmul
cdq
mov
xchg
mul
inc
ret
push
scas
stos
sbb
dec
jmp
loope
mov
lods
push
jns
jbe
push
pop
int3
sahf
call
cmp
lea
in
add
jns
add
add
add
loop
add
add
add
add
add
cmc
or
lahf
add
add
add
mov
adc
mov
add
add
xchg
add
add
fld
mov
add
add
add
add
add
add
pop
fild
dec
add
add
loope
pop
cmp
add
add
add
add
and
mov
sbb
loop
out
mov
and
popa
xor
arpl
arpl
sub
and
pop
sub
in
cld
sbb
fnstenv
sub
popa
fs
jb
add
push
mov
popf
sbb
js
or
sbb
mov
rcr
movs
lock
mov
push
loop
add
aam
mov
ins
mov
daa
fld
loopne
mov
jl
mov
sti
nop
add
(bad)
stos
fisubr
push
ins
inc
xchg
xor
fistp
call
xlat
xor
pop
and
push
imul
mov
xchg
or
jo
dec
loopne
xchg
sbb
pop
dec
stos
pop
jl
xchg
pop
add
pop
push
xor
and
and
lds
or
lods
add
jle
js
push
inc
or
sar
leave
adc
ins
add
lahf
in
or
or
inc
enter
add
stos
and
pop
jne
iret
dec
jp
movs
pop
mov
daa
xadd
ja
adc
sbb
push
(bad)
xor
xor
inc
add
ins
xchg
cmps
mov
jmp
pop
xchg
push
xor
adc
inc
ja
add
std
gs
push
jmp
es
push
and
fbstp
stc
inc
inc
imul
mov
sti
hlt
pop
jle
fincstp
or
cmp
out
rcl
jae
cld
cwde
xlat
rcr
pop
test
mov
fcom
fistp
stos
out
pop
(bad)
mov
jo
mov
ss
sub
sahf
fdiv
push
xchg
cmp
cmp
or
movs
cmp
jno
test
sub
xchg
loope
popf
mov
ret
out
idiv
sbb
(bad)
sahf
aas
add
mov
push
(bad)
jmp
aas
push
leave
or
mov
mov
repnz
(bad)
call
scas
sbb
mov
sub
sub
imul
(bad)
xor
dec
ins
pop
or
mov
loop
out
shl
dec
sahf
popa
jo
dec
add
loope
std
(bad)
push
cmp
popf
ins
mov
ja
mov
test
dec
jp
in
pushf
retf
pop
xor
inc
sbb
mov
dec
or
bound
adc
and
inc
outs
js
push
sub
cmp
xor
(bad)
rcl
fcom
rol
xchg
add
nop
js
leave
mov
in
(bad)
imul
out
xor
or
lock
loopne
movs
xchg
dec
pop
mov
(bad)
lods
lea
aaa
pop
mov
sub
push
cmp
xchg
sbb
xchg
ins
lahf
inc
mov
pop
and
scas
adc
mov
fwait
pop
sbb
out
sub
dec
aaa
mov
call
movs
jecxz
push
sbb
std
push
sbb
sub
out
push
mov
pop
stos
pop
pop
(bad)
mov
sbb
push
or
jae
pop
pop
mov
outs
pop
test
xor
cmp
sbb
jecxz
ja
cmp
jns
loopne
neg
pop
adc
ret
test
cmp
ret
out
not
retf
xchg
(bad)
(bad)
enter
call
xor
or
ins
ja
cld
imul
rcr
pop
test
(bad)
xchg
stos
ds
punpckhwd
xchg
mov
cmp
mov
je
pop
loop
jnp
sub
test
mov
mov
loop
cmp
xor
ja
or
inc
jbe
js
mov
iret
outs
div
mov
pop
mov
cmp
mov
shr
ret
sbb
sbb
aaa
int3
cmovbe
leave
mov
stos
fld1
pop
ins
ror
cmp
fist
in
mov
push
or
sar
icebp
xchg
xlat
jle
iret
and
mov
xor
mov
push
xchg
and
(bad)
sub
mov
or
add
int
push
in
mov
xchg
push
sahf
push
cld
loop
ret
fucom
mov
dec
ins
mov
pop
sbb
xchg
inc
sbb
and
loope
sti
imul
leave
xchg
jmp
in
aad
mov
inc
(bad)
imul
pop
std
cmp
mov
data16
adc
dec
sbb
cs
adc
inc
mov
imul
bound
(bad)
std
add
xchg
out
or
jge
mov
jp
sbb
xor
adc
cli
or
mov
and
jnp
jmp
jnp
arpl
lock
push
mov
(bad)
gs
xadd
inc
xchg
aaa
cmp
lahf
inc
dec
and
retf
in
call
or
(bad)
out
sub
loope
cdq
inc
mov
cmp
jo
jns
or
jnp
and
movs
mov
and
mov
jge
arpl
xchg
inc
xchg
ja
pop
sbb
popf
hlt
pop
jmp
adc
ror
pop
cdq
les
in
inc
or
xor
ja
cmp
fmul
and
cwde
(bad)
cmp
mov
xchg
pop
rcr
push
cli
es
and
xor
add
mov
cmp
pop
pop
rcl
scas
ja
ds
mov
mov
mov
call
push
xor
loope
lahf
retf
movs
aad
xlat
dec
jmp
jle
iret
popf
inc
les
sar
out
sub
fdiv
pusha
fistp
rol
add
fcomip
int
add
push
jno
xor
and
sbb
fldcw
adc
jmp
int
xor
lock
mov
inc
sahf
mov
pop
jl
imul
and
add
mov
add
jnp
in
fdiv
push
adc
mov
(bad)
jne
mov
addr16
aam
xchg
test
sbb
xor
push
movs
idiv
push
mov
jle
mov
sbb
movsd
mov
gs
mov
dec
aad
mov
shl
test
push
iret
dec
jns
(bad)
lahf
cli
js
pop
pop
pop
cmp
jns
icebp
aam
jmp
loop
jle
pop
or
cdq
xlat
push
cld
lahf
arpl
jb
mov
xchg
sar
xor
movs
es
(bad)
pop
fst
stos
stc
aam
stos
lea
cwde
xchg
lds
adc
(bad)
jmp
popa
dec
test
add
mov
loopne
(bad)
xchg
call
xor
std
icebp
daa
mov
cmp
cli
sar
cli
movs
jg
add
shl
ja
mov
mov
mov
mov
push
or
gs
cmps
mov
in
push
and
sti
scas
scas
cli
jae
test
out
lahf
and
lods
shl
cmp
adc
jno
loop
dec
push
cld
xchg
loop
call
mov
pop
es
adc
iret
mov
arpl
mov
cmp
mov
and
xchg
iret
mov
pop
movs
les
jnp
pop
inc
repnz
test
scas
or
test
sub
jno
jge
mov
xlat
out
aaa
push
xlat
add
or
xor
push
ret
in
aaa
ror
sub
cmova
adc
mov
and
cmp
ds
dec
adc
adc
jnp
jp
pop
xchg
shr
cdq
imul
cmp
and
cmp
rcl
xchg
mov
mov
push
(bad)
or
push
mov
cdq
das
and
sbb
repz
xor
adc
stc
sub
stos
sahf
and
jns
je
mov
xchg
mov
cmc
push
lea
and
out
cmp
mov
dec
lea
push
cmps
fadd
mov
push
ret
inc
cmps
add
loop
scas
test
push
pusha
dec
sbb
in
mov
push
xchg
jg
adc
mov
out
out
mov
jae
jmp
xchg
ins
push
aas
in
in
sub
repz
shl
inc
mov
(bad)
push
(bad)
mov
xlat
test
lock
mov
(bad)
and
test
jle
or
jecxz
mov
test
xchg
cmps
adc
test
jbe
adc
jmp
loopne
ficom
movs
push
push
pop
cs
ins
hlt
pop
mov
jne
cmp
xor
jbe
leave
inc
fisubr
sbb
shr
pop
mov
pop
jns
push
adc
test
sbb
jmp
stc
and
jae
in
out
lds
jl
pop
mov
xchg
mov
cmp
pop
iret
std
jg
sub
push
pop
pop
pusha
sahf
je
xchg
cmps
pusha
or
enter
fwait
mov
and
push
cmp
inc
xor
adc
test
jae
cmp
mov
pop
stos
movs
xor
xlat
test
push
fwait
mov
stos
not
into
add
icebp
cmps
jmp
cmp
pop
cwde
inc
or
mov
mov
(bad)
test
sbb
lock
push
add
sbb
sub
jp
aas
pop
mov
enter
stos
dec
jl
pop
nop
mov
shl
inc
sub
and
in
(bad)
xchg
ja
mov
inc
imul
pop
push
aad
into
popa
lahf
fild
push
repnz
imul
call
lods
push
mov
fbstp
push
cmp
inc
addr16
and
xchg
or
dec
out
icebp
jo
push
out
cmp
cmp
xchg
or
test
and
adc
xor
sub
push
sub
or
cli
lods
or
ficomp
iret
ror
shl
pop
add
and
push
clc
dec
adc
out
or
xchg
clc
dec
adc
ret
idiv
mov
(bad)
pop
xor
dec
lods
cmc
aam
iret
adc
fs
jg
mov
fisubr
cmc
fnstenv
dec
out
pop
and
out
push
xchg
sbb
dec
shl
mul
lods
stos
loopne
mov
test
je
test
hlt
push
cmps
pop
sahf
imul
xor
xor
rcr
sub
add
xchg
add
add
add
add
add
add
add
adc
jmp
add
add
dec
add
push
add
add
add
add
add
add
add
mov
add
jg
add
push
loop
add
add
add
ret
add
add
add
add
js
add
add
add
add
int3
dec
add
add
add
add
mov
add
inc
add
add
mov
add
add
mov
add
add
add
pop
sti
int
add
add
add
ja
add
add
add
push
inc
add
add
add
add
add
xchg
add
add
outs
add
add
loop
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
xchg
add
add
add
add
add
add
add
pop
add
add
add
add
add
add
loopne
outs
rol
add
add
add
add
add
adc
add
add
stos
and
add
add
jmp
(bad)
add
add
add
add
add
add
add
add
add
loope
add
add
add
mov
add
add
add
add
add
add
ss
rol
add
add
add
add
sub
add
test
add
add
mov
add
add
add
add
push
fwait
add
add
add
dec
add
add
add
add
add
pop
add
add
add
add
mov
add
cmc
add
add
add
add
mov
add
add
sbb
fsubr
scas
mov
mov
(bad)
fmul
rcr
cmp
mov
(bad)
lock
inc
sub
repnz
xchg
jg
xchg
(bad)
xchg
scas
mov
adc
movs
jo
mov
cmp
into
aas
pop
aas
mov
mov
add
mov
and
mov
push
jecxz
ins
imul
mov
fwait
mov
xor
sub
jno
and
cmp
cmp
jnp
add
lock
(bad)
add
push
fnstenv
inc
xlat
mov
mov
push
mov
fistp
in
ret
push
pop
inc
cmp
xchg
add
mov
bound
adc
mov
test
mov
repz
sbb
add
imul
jns
daa
and
mov
cmp
xchg
enter
mov
sbb
mov
icebp
or
xchg
add
jns
adc
mov
xchg
mov
sbb
xchg
pop
jae
dec
dec
clc
sub
pop
xor
mov
sbb
(bad)
in
mov
outs
cs
(bad)
push
call
push
pop
jg
lea
xchg
add
repnz
push
pop
out
stos
xor
push
add
movs
test
jns
(bad)
fwait
push
jb
in
or
(bad)
push
popa
data16
xor
shl
(bad)
(bad)
repz
xchg
sbb
mov
push
xlat
mov
xor
sahf
and
stos
pop
fdiv
test
sub
pop
ds
sbb
sbb
add
sbb
or
xor
in
and
push
mov
sti
pop
mov
data16
add
dec
mov
icebp
cmp
xchg
cwde
(bad)
push
leave
daa
jae
xchg
loop
cmp
jno
add
cmp
sbb
or
out
fcomp
dec
movs
imul
adc
fwait
inc
dec
lea
aad
enter
push
cmp
adc
or
sbb
jae
xchg
xchg
cli
loop
sub
retf
into
inc
stos
sub
mov
(bad)
push
fdiv
adc
hlt
icebp
fdiv
out
les
outs
pop
jmp
call
(bad)
push
out
add
xchg
outs
xchg
mov
or
packssdw
fimul
leave
ins
sar
ret
xchg
clc
xchg
add
in
pusha
cmps
test
or
mov
push
cmp
hlt
stc
(bad)
out
sub
add
in
mov
rol
sbb
ds
pop
movs
cmp
sbb
test
adc
sub
cmp
inc
in
adc
adc
mov
pop
mov
mov
inc
add
add
mov
repz
cmc
stc
icebp
loopne
loop
daa
mov
add
push
adc
mov
daa
pop
cwde
(bad)
xchg
hlt
and
jmp
sbb
push
xchg
xchg
fld
xchg
les
call
sbb
dec
or
cmc
sub
xor
sti
es
test
xor
mov
in
imul
adc
and
lods
mov
sub
ins
js
mov
aas
bound
(bad)
pop
mov
cmp
data16
sub
push
jecxz
mov
cmc
sub
push
pminub
arpl
ins
neg
mov
inc
loopne
push
popf
mov
mov
sub
xor
push
xor
stos
sti
aaa
pop
pop
xchg
push
sbb
mov
fcom
dec
div
pop
and
rcl
sub
adc
mov
xor
jmp
cmps
and
fiadd
mov
fisub
inc
sar
push
jecxz
in
xchg
adc
in
jb
inc
cmps
int3
sbb
out
ja
xor
(bad)
pushf
jle
push
xor
cdq
or
cmp
sub
int
xor
pop
xchg
push
das
xor
shr
es
xchg
lods
shr
popf
adc
ins
cwde
fild
and
icebp
das
mov
cmp
fdivr
enter
jge
retf
xchg
ret
repz
xchg
mov
cmps
inc
aad
dec
jmp
faddp
mov
jno
shl
fstp
gs
js
bound
and
(bad)
ror
add
out
cmp
in
jle
fwait
rcr
repnz
dec
dec
and
sub
push
addr16
jl
or
inc
pop
data16
jb
push
pop
or
pop
mov
test
pushf
fld
add
ret
loope
xchg
stc
xor
fs
lahf
ss
retf
mov
outs
cmps
jae
adc
dec
nop
inc
pop
jmp
push
or
fcomip
and
stos
js
stos
jle
cmp
mov
lahf
jns
and
dec
cmps
cmps
enter
rol
(bad)
xchg
dec
xor
out
xchg
cmp
outs
mov
pop
push
ins
test
jnp
mov
push
sub
test
cs
jge
rcl
mov
hlt
push
sbb
fwait
jns
inc
pop
push
xor
call
xor
dec
or
fidivr
sub
out
(bad)
fild
sbb
xchg
mov
enter
sahf
ret
mov
cwde
or
arpl
and
jae
xchg
or
xchg
popf
inc
add
pop
xchg
(bad)
pop
out
dec
pop
cmp
sar
js
das
call
sbb
pusha
add
cs
mov
mov
test
bound
adc
jae
xchg
shl
das
(bad)
sbb
jbe
icebp
fs
sbb
shl
mov
(bad)
jnp
xchg
sahf
repnz
jbe
mov
push
mov
stc
push
mov
call
and
arpl
fsin
ret
mov
pop
add
test
popf
sbb
cmp
ja
cdq
xor
sub
pop
pop
sbb
fmul
cmp
lods
or
shl
adc
mov
mov
xor
mov
xchg
rcl
mov
faddp
rcl
mov
test
js
call
dec
jns
jb
push
ret
fcom
adc
inc
loop
adc
sub
lahf
inc
push
adc
fldpi
cmp
inc
ins
ds
pop
xor
mov
pop
sbb
std
xchg
mov
xlat
std
jo
mov
loope
loop
ret
(bad)
fiadd
shl
fisttp
pop
loopne
imul
js
pop
mov
ds
rcl
pop
in
adc
fmulp
pop
jl
pop
cmc
cmp
cmp
setno
xchg
inc
sahf
popa
jmp
rol
dec
adc
adc
cli
adc
inc
mov
mov
inc
sar
fwait
push
les
in
xchg
fdivr
in
jmp
adc
cmp
add
shl
jg
pushf
adc
sbb
push
jg
xor
jae
pop
dec
fs
pop
test
sub
jae
inc
lahf
or
mov
and
jne
jno
popf
test
dec
lods
stos
inc
dec
adc
pop
fstp
imul
(bad)
pop
mov
fxsave
pop
jbe
clc
mov
adc
fsubp
sahf
push
les
gs
or
fisttp
or
test
out
hlt
jns
xchg
mov
sbb
test
lea
sti
scas
adc
loop
pusha
dec
jecxz
lahf
sti
xor
dec
inc
sbb
imul
call
movs
push
and
je
fmul
cmp
pop
xlat
bound
sub
mov
mov
jg
pop
push
mov
add
cs
mov
xor
mov
movs
enter
int3
xchg
sbb
in
fstp
stc
mov
mov
and
push
push
push
xchg
clc
(bad)
pop
clc
outs
jl
xor
rcl
push
mov
inc
inc
cli
enter
sahf
push
mov
xor
or
repnz
sbb
jnp
xchg
je
push
imul
push
sti
cmp
cwde
xchg
jle
icebp
xchg
arpl
clc
sub
std
call
call
fst
jg
sar
in
lahf
push
jg
fistp
clc
retf
cmps
inc
fst
outs
in
fisub
(bad)
in
popf
jmp
(bad)
loope
push
adc
jg
popa
jnp
aam
inc
dec
xchg
sbb
mov
or
and
dec
into
fisttp
xchg
nop
lods
das
pop
(bad)
pushf
push
or
push
fwait
and
xchg
sbb
out
call
dec
cmp
xchg
stos
pop
loop
pushf
iret
cmp
cdq
jmp
sbb
dec
mov
xor
in
dec
scas
stos
dec
nop
ret
jbe
inc
fiadd
shr
fcom
mov
cwde
rcr
in
fbld
pop
inc
xchg
ins
push
sbb
aas
(bad)
in
in
leave
(bad)
or
xchg
push
arpl
dec
icebp
aad
xlat
mov
inc
cmc
(bad)
mov
call
sub
es
mov
add
jg
pop
push
adc
adc
jle
xchg
fsub
test
test
xchg
out
aam
pop
inc
mov
cmp
(bad)
bound
test
and
pop
data16
jl
cmps
cmc
mov
push
fbld
or
stc
les
and
in
pop
ds
pop
outs
out
std
ret
xor
or
add
adc
and
jb
fwait
aam
cli
sbb
fxrstor
pop
mov
pop
pop
add
dec
dec
inc
adc
xchg
sub
loopne
in
xor
mov
(bad)
fild
stos
arpl
(bad)
in
push
mov
jmp
test
cs
cmp
and
mov
adc
push
cld
cmp
sbb
sub
test
retf
and
sub
mov
(bad)
int3
mov
sub
mov
cmp
stos
sbb
test
cmp
add
ret
je
cmp
xor
fsub
sar
sbb
imul
jp
sub
je
xchg
dec
push
push
sbb
lods
lock
inc
aaa
xor
jmp
test
out
and
xchg
ins
and
mov
pop
mov
mov
out
mov
mov
push
cmps
out
add
add
add
stos
add
(bad)
cmp
add
cmp
loope
add
add
add
add
add
add
add
and
add
add
add
xor
mov
add
add
or
fiadd
add
add
add
loope
add
ja
add
add
push
add
add
add
add
out
add
push
add
add
add
add
add
jns
add
add
add
aad
add
add
scas
add
add
add
add
add
add
loop
lahf
out
pushf
add
add
add
add
add
sub
add
cmp
add
add
add
add
pop
fmul
int
xchg
sbb
or
mov
cli
dec
out
rcr
pop
mov
andps
lock
adc
xchg
test
xor
sub
pusha
xchg
fcom
pop
in
retf
ins
neg
adc
shl
ins
sbb
pop
imul
fsubr
sbb
call
sub
jo
cmp
repnz
cmp
in
push
jae
xlat
mov
push
call
lods
in
push
stos
xchg
and
aam
or
fbld
jae
je
fcomip
xor
mov
mov
cmp
push
fwait
mov
das
or
sbb
add
xor
ss
test
ds
mov
scas
pusha
(bad)
xor
dec
ins
pop
in
pop
mov
(bad)
inc
pop
jb
sub
xchg
pop
mov
in
lods
pop
movs
mov
push
arpl
pop
mov
stos
xor
jmp
add
xchg
xor
push
or
or
retf
pop
mov
scas
mov
jnp
dec
sub
or
test
jne
repnz
sbb
cmp
pushf
pop
int3
add
out
retf
add
out
mov
sar
lds
out
inc
cmp
xlat
cmc
or
mov
or
add
pop
rcr
cmps
mov
fst
or
pop
jb
sub
std
cmp
xchg
jecxz
push
and
or
mov
je
stc
cmp
and
adc
and
xor
and
ret
dec
es
(bad)
loopne
dec
out
inc
jne
out
sub
not
jge
inc
sub
jmp
pop
xchg
mov
in
xlat
call
ret
xchg
out
ins
aam
in
push
dec
xchg
inc
dec
push
repnz
push
(bad)
push
xor
xor
inc
dec
fstp
stc
mov
ret
mov
cwde
movs
enter
adc
leave
mov
xor
add
cmp
mov
dec
lahf
xor
data16
push
pop
not
mov
jle
fsub
ret
fdivr
imul
mov
retf
loope
test
(bad)
xchg
cli
mov
mov
add
mov
adc
xchg
jp
xor
adc
cmp
or
adc
cld
out
bound
push
add
fcmovbe
imul
xchg
inc
sbb
xchg
xchg
test
out
dec
push
(bad)
(bad)
enter
push
push
lds
push
sub
cmps
scas
out
or
inc
in
xchg
fcomp
xchg
pop
mov
or
out
jl
dec
push
pushf
xor
xor
jge
(bad)
inc
mov
cmp
jl
xor
sar
icebp
cmp
jae
jo
dec
jae
pop
push
enter
addr16
(bad)
ror
mov
jecxz
cmp
mov
inc
movs
add
pop
cmp
outs
xchg
fwait
fs
jno
pop
xchg
inc
inc
jp
popf
(bad)
xchg
push
clc
je
in
or
lock
fild
mov
add
clc
in
cwde
push
inc
dec
(bad)
push
push
div
jmp
xor
arpl
mov
or
jg
stc
pop
stos
mov
cmp
inc
push
arpl
ins
out
stos
or
and
jmp
mov
jp
dec
icebp
or
fcomi
or
or
outs
adc
sub
hlt
and
mov
xlat
aaa
sub
cli
xchg
mov
sti
rcr
fwait
(bad)
aam
mov
inc
stos
dec
mov
or
adc
add
cmps
xor
loop
sub
test
add
adc
(bad)
lods
je
ss
sbb
pop
dec
jmp
fnstsw
fsubp
dec
mov
dec
ins
adc
mov
mov
inc
sub
daa
pop
cwde
mov
addr16
or
add
(bad)
out
(bad)
aas
push
pop
mov
scas
aas
sbb
daa
pop
or
and
dec
inc
and
jae
jg
mov
or
mov
sbb
adc
nop
call
outs
dec
xor
pushf
in
fnsave
movs
out
punpckhwd
mov
inc
outs
push
movs
shl
gs
scas
outs
test
dec
dec
mov
loope
and
mov
push
add
or
sub
sub
push
dec
and
inc
movs
inc
mov
mov
movs
and
aad
sub
(bad)
and
fmul
jl
mov
repnz
mov
push
cmp
cmps
popf
inc
loop
fwait
jb
retf
or
add
pop
sbb
jae
in
(bad)
bound
or
sbb
jmp
sbb
(bad)
cdq
jge
ficom
inc
sub
sub
cmp
inc
mov
popf
enter
aad
cmp
test
adc
jle
es
add
loop
dec
cmp
addr16
pop
sar
push
mov
sub
gs
gs
cmp
sub
xchg
mov
test
scas
push
dec
adc
xchg
outs
add
int3
fild
push
stos
jo
jl
add
jg
leave
or
cmps
jle
sar
lock
mov
mov
mov
cmovb
fld
hlt
push
test
call
sbb
sbb
push
push
pop
pop
jno
test
retf
lods
or
jns
mov
aam
pop
xor
dec
mov
push
adc
retf
and
(bad)
lods
or
adc
fwait
or
pop
ret
lea
or
mov
fs
nop
daa
(bad)
int3
out
mov
ss
jbe
sbb
gs
iret
bnd
loope
xchg
ins
daa
in
ds
dec
add
adc
cmps
mov
sub
movs
dec
sub
dec
xor
add
push
xor
(bad)
fidivr
inc
xchg
out
mov
shl
and
in
push
jmp
sub
sub
ret
jge
pop
adc
je
jmp
and
mov
jo
xchg
addr16
int
sbb
push
fmul
fistp
lds
mov
data16
jbe
repnz
xor
icebp
sar
inc
(bad)
lods
xchg
imul
add
or
(bad)
jg
in
and
into
mov
pop
mov
mov
jge
js
cmps
mov
ins
cmps
scas
sbb
bound
push
cmp
movs
call
or
scas
(bad)
cmp
ss
test
push
inc
push
rcl
aad
rsm
rcl
jp
aad
scas
outs
out
cmp
int
cs
shl
nop
popf
mov
sub
int
pop
ins
test
in
xchg
fwait
mov
sbb
clc
sahf
sub
je
pushf
adc
pop
clc
push
mov
rol
pushf
jp
iret
rcl
xor
aad
enter
test
call
push
int3
pop
stc
push
mov
cmp
aam
adc
fild
dec
xchg
mul
cmp
cmps
cwde
pop
push
jmp
mov
mov
or
lods
adc
sub
call
fld
jnp
dec
rcl
add
mov
popa
ret
add
movs
add
sbb
aad
push
mov
and
ins
dec
popa
sbb
jo
or
jle
sub
mov
fdivr
popf
bound
aad
sti
iret
jg
dec
icebp
xchg
retf
sti
repz
mov
shl
cmp
js
in
idiv
mov
jp
xchg
fdiv
scas
shr
pushf
dec
sub
ret
inc
movs
test
jo
push
inc
leave
adc
add
dec
mov
jmp
dec
lea
jns
xchg
adc
jne
ret
ds
in
inc
mov
push
in
lahf
pop
in
sbb
call
int3
add
push
les
sub
push
in
dec
sar
fidivr
popa
add
mov
retf
imul
jne
fcmovne
aaa
inc
cmp
mov
push
int
xlat
mov
pop
jp
test
inc
push
aaa
jmp
and
push
ins
and
scas
xor
test
cmc
xor
ror
mov
shl
not
mov
lock
push
(bad)
out
xor
mov
and
push
and
mov
and
out
stos
and
ins
adc
pop
sbb
imul
mov
sub
xchg
add
mov
pop
mov
in
fcom
gs
imul
jg
jo
mov
inc
or
xchg
or
aas
jge
ret
and
pop
je
pop
test
sbb
pop
aaa
mov
inc
cwde
adc
add
int3
lds
push
sbb
outs
pop
push
(bad)
(bad)
xchg
sbb
aam
dec
pop
inc
je
stos
xor
repnz
movs
mov
jle
pop
adc
jb
popw
ret
pop
js
adc
sub
and
in
shl
mov
push
mov
imul
pusha
push
fwait
add
or
and
jo
ins
xchg
int
fwait
bound
int
xor
add
jl
mov
clc
or
iret
xchg
out
je
push
js
jo
out
inc
add
data16
pop
call
pop
mov
ret
es
daa
lods
nop
pop
rol
xor
jo
cli
gs
into
mov
lock
aas
movs
mov
mov
push
push
and
stos
not
pusha
or
test
sti
call
out
sub
inc
xor
mov
ret
in
xchg
cmp
pusha
mov
add
sub
pop
cdq
mov
fimul
xchg
gs
fwait
les
xor
sbb
les
sub
or
aas
bound
add
jecxz
adc
xchg
out
in
fidiv
cmp
and
loop
xchg
in
mov
add
xchg
sti
xor
fstp
pop
push
inc
mov
stos
xor
idiv
inc
xor
lea
inc
inc
mov
mov
enter
fist
push
push
mov
add
fld
es
outs
xchg
cmp
dec
and
popf
pop
cli
jne
xor
pop
cmp
fwait
add
ins
cmps
daa
add
mov
cmps
add
sub
add
add
add
add
add
add
dec
add
add
add
add
add
out
add
loopne
add
add
add
add
add
jmp
add
add
outs
add
add
add
add
mov
add
cmp
add
add
jecxz
add
add
add
xor
add
ins
xchg
add
add
add
scas
add
add
add
add
add
add
bound
add
mov
add
add
add
add
add
add
add
add
add
add
into
add
add
add
jo
add
add
add
add
add
add
cmp
add
push
add
add
add
das
pop
fild
inc
add
add
add
fwait
add
add
add
add
or
add
cmp
add
dec
add
add
lea
inc
add
dec
add
add
add
ins
add
add
add
add
add
add
add
lds
pushf
mov
add
add
add
xor
cld
add
add
add
add
aad
add
add
add
ret
dec
add
add
jae
sbb
call
add
fild
add
add
test
mov
add
add
sbb
add
sub
add
add
add
retf
add
repnz
mov
add
add
in
add
add
add
xchg
rol
add
mov
add
add
add
add
add
add
add
adc
fld
add
add
jge
add
add
int3
add
bound
dec
cwde
add
add
add
fld
add
add
add
jmp
fucom
push
add
add
add
add
add
ins
add
add
or
add
add
add
add
add
add
add
add
add
add
add
add
push
xor
add
pop
popf
add
pusha
add
add
add
and
push
add
js
add
add
loop
(bad)
rol
jb
pop
sbb
jg
cdq
cmp
(bad)
xchg
push
test
inc
xor
imul
or
(bad)
daa
cs
inc
daa
(bad)
and
in
(bad)
adc
std
clc
fucomp
scas
ficom
test
or
out
mov
out
push
les
mov
and
fsub
adc
inc
dec
mov
shl
mov
out
retf
aaa
arpl
cmp
test
movs
hlt
mov
jmp
mov
sar
mov
adc
or
dec
retf
sti
enter
stos
add
inc
dec
pop
or
(bad)
xlat
add
add
sbb
inc
jecxz
pop
icebp
shr
inc
xchg
enter
(bad)
sub
fdivr
sti
xchg
dec
mov
push
and
mov
xor
pop
dec
daa
sahf
js
sub
inc
hlt
sbb
jp
iret
(bad)
cdq
retf
inc
cmc
push
addr16
push
add
mov
cmps
leave
es
jae
out
mov
cld
mov
out
pop
jns
xor
inc
rcl
fsubrp
sbb
into
outs
out
sbb
cwde
cmp
shr
es
xchg
mov
fdivr
jo
push
int
in
sub
repnz
pop
push
sub
pusha
pop
jp
pusha
imul
out
xlat
jmp
mov
arpl
xor
jno
add
jno
push
out
mov
xchg
xchg
mov
test
and
pop
call
ja
pop
icebp
mov
jp
outs
movs
cwde
aaa
mov
sub
lods
aad
inc
adc
push
icebp
arpl
pop
cli
dec
jge
cli
hlt
cdq
or
inc
in
or
mov
dec
cmc
ret
popf
rcr
sub
jmp
and
aad
daa
cmp
xor
push
(bad)
es
add
ss
inc
icebp
pop
mov
mov
xchg
inc
push
inc
mov
shl
lds
mov
cmc
push
mov
mov
mov
cmp
popa
add
lods
adc
sbb
pop
mov
lahf
and
sub
add
inc
sub
pop
test
xchg
pushf
movs
aam
cmp
pop
bound
(bad)
and
mov
adc
inc
sbb
fidivr
ret
pop
iret
cmp
jno
(bad)
(bad)
jmp
mov
ret
adc
adc
call
dec
sub
or
sbb
mov
jle
and
out
scas
or
pop
hlt
sub
mov
and
(bad)
aaa
mov
dec
lods
or
cmc
jnp
aaa
fisttp
xor
scas
fwait
iret
rol
cld
pop
jg
and
mov
mov
jp
out
(bad)
arpl
mov
add
mov
cli
cmc
dec
jo
mov
and
dec
test
cmps
xchg
mov
popa
(bad)
xor
dec
jb
mov
add
ins
xchg
lods
mov
mov
sub
add
cmps
xor
imul
push
mov
shl
sub
test
cdq
in
sahf
xor
mov
sbb
or
mov
(bad)
leave
adc
push
fxam
out
repnz
adc
adc
fild
push
dec
push
loopne
shl
inc
mov
and
dec
dec
out
call
push
lea
ret
xor
xchg
lods
jb
adc
(bad)
push
and
(bad)
pop
into
mov
jmp
sbb
imul
add
inc
xor
popa
jg
sar
cmp
sub
outs
jmp
or
das
and
mov
adc
inc
fimul
fdivr
xchg
repz
fnsave
push
adc
ds
mov
(bad)
cmps
rcl
pop
in
ja
stc
cmp
pop
push
scas
mov
fwait
adc
xor
mov
mov
loop
mov
jmp
je
xor
dec
mov
fldcw
or
pop
pop
inc
iret
jle
or
mov
mov
cmp
fwait
scas
icebp
pop
cmps
adc
nop
jne
jg
js
into
cdq
fs
in
jle
popf
inc
sbb
cmp
scas
lock
or
jo
adc
jns
xchg
sub
inc
xchg
je
test
mov
xlat
mov
dec
in
jbe
shr
repz
ds
sbb
(bad)
in
cmp
xchg
fld
shl
xchg
lock
sub
and
and
mov
inc
shr
or
inc
cli
jno
fbld
fild
stos
mov
movs
pushf
in
pop
dec
imul
mov
inc
or
xchg
hlt
(bad)
stc
fs
adc
add
(bad)
stos
stc
das
cmp
cdq
cmc
(bad)
xor
inc
add
inc
adc
fsubr
sub
pop
mov
adc
xchg
stc
dec
sbb
jmp
sub
cwde
das
(bad)
push
dec
jo
outs
test
lods
dec
adc
fiadd
adc
stc
call
add
mul
movs
jb
jl
jb
in
daa
jmp
je
(bad)
push
fsubr
mov
das
and
jmp
(bad)
scas
cmp
jp
inc
adc
sbb
pop
push
sub
out
(bad)
mov
pop
clc
int
xchg
(bad)
retf
mov
push
in
xor
xor
ror
dec
pusha
mov
pop
jb
test
rol
lock
or
sbb
ds
sahf
leave
ins
and
pushf
leave
lds
lahf
cwde
or
xlat
xchg
out
icebp
(bad)
add
add
call
inc
sbb
dec
out
ins
pop
daa
push
sbb
jecxz
dec
ret
call
inc
cmp
fsub
lock
add
jp
xor
rcr
mov
xchg
mov
cmps
jmp
fmul
inc
sbb
mov
jge
jl
sahf
jno
inc
push
sbb
test
fidiv
int3
(bad)
jmp
mov
cmps
loop
fwait
pop
pushf
add
xor
push
and
sbb
add
call
sbb
or
das
cmp
mov
sbb
loop
hlt
push
or
(bad)
mov
fbld
jnp
shl
add
std
nop
add
xor
sbb
sub
pop
movs
mov
and
xchg
(bad)
sub
ds
mov
scas
enter
retf
mov
lds
mov
(bad)
ret
xchg
xor
sub
ficom
adc
and
sub
lods
cld
mov
xor
aam
mov
rol
xor
stos
adc
test
sar
cwde
test
cmps
and
inc
ret
repz
mov
sti
xchg
mov
div
(bad)
adc
rol
mov
xchg
jge
mov
shl
add
mov
leave
add
test
jmp
jmp
mov
jns
fwait
int3
aaa
loopne
stos
push
out
jge
mov
cs
test
sub
jmp
daa
add
add
retf
pop
mov
pushf
retf
lods
push
cmp
jnp
push
test
push
test
jno
push
(bad)
(bad)
adc
das
xchg
sbb
sbb
push
dec
xor
and
jnp
inc
and
jmp
pop
aam
shl
mov
cmp
icebp
xchg
stc
loope
xor
(bad)
push
rol
add
jecxz
shl
cwde
aas
jg
(bad)
mov
rcl
push
je
push
mov
fdivrp
lods
mov
call
jecxz
cmp
xor
inc
mov
pop
inc
cmps
xor
jns
shr
cmc
mov
mov
pop
mov
and
pop
pusha
push
and
xchg
and
nop
jnp
ds
out
fs
xor
imul
xor
retf
dec
sbb
mov
sbb
iret
jno
shr
test
mov
cmp
mov
shl
cmps
fst
mov
mov
lea
fild
sar
into
xor
fistp
lahf
jecxz
dec
push
mul
popf
sub
pop
pop
dec
fidivr
rcl
jmp
es
dec
hlt
dec
jne
sub
or
mov
out
loop
jb
mov
sub
push
pushf
out
inc
cmp
fidivr
adc
gs
pop
push
cmp
xchg
pop
add
cmps
clc
jno
jo
mov
sbb
add
mov
(bad)
in
or
jp
das
into
jmp
dec
in
test
xchg
hlt
lahf
or
shld
sub
inc
enter
fwait
pop
popf
outs
repnz
iret
push
mov
cmp
mov
les
mov
dec
mov
cmps
sti
fsub
cmc
pop
rol
int3
stos
adc
push
pop
das
stos
stc
sub
push
mov
ret
cmps
nop
les
adc
mov
xchg
rcr
adc
jae
loope
inc
add
fs
or
scas
push
ror
pop
out
retf
(bad)
std
push
push
mov
ins
nop
inc
sub
mov
xchg
mov
test
push
cmc
add
and
pop
sub
cmp
scas
mov
sahf
popf
push
push
pushf
or
std
push
inc
pop
shl
aas
push
out
(bad)
adc
leave
in
data16
nop
lock
adc
jg
and
outs
push
movs
mov
push
push
and
mov
stos
in
neg
pop
adc
je
sub
or
dec
xchg
xchg
jmp
adc
cdq
jno
adc
pop
mov
xchg
inc
je
ja
int
pop
stc
jae
out
mov
cs
xor
and
adc
stos
fdivr
dec
mov
jne
out
mov
dec
adc
lods
adc
xor
push
or
bound
jge
mov
test
adc
sub
mul
std
cmps
std
clc
rol
fdivr
push
mov
js
fcmovb
outs
sbb
mul
imul
repnz
js
xchg
pusha
fsub
sub
(bad)
rol
pop
mov
stos
mov
adc
dec
inc
inc
sti
push
inc
jb
mov
neg
out
push
jg
mov
xor
sar
push
inc
cmp
mov
or
rcl
fisttp
xlat
sbb
(bad)
outs
and
or
in
mov
jecxz
push
mov
inc
push
sub
fwait
jp
or
inc
ja
mov
(bad)
outs
fcomi
mov
add
add
imul
stos
sub
add
add
add
add
add
add
add
add
add
add
je
add
add
retf
add
add
xor
jle
add
add
add
add
add
cmp
add
add
and
cmp
add
add
rol
add
mov
add
add
sbb
mov
and
add
xor
add
add
add
outs
add
add
add
add
add
add
add
lahf
add
xchg
add
add
add
add
add
add
add
add
add
add
mov
add
xor
add
add
fld
jecxz
add
add
(bad)
add
add
add
add
add
fiadd
add
leave
add
in
add
add
add
push
data16
jmp
jne
pushf
call
movaps
es
add
inc
dec
in
inc
aad
push
loope
sub
imul
outs
xor
stc
sub
ret
mov
sbb
lods
adc
mov
inc
inc
mov
(bad)
aam
cdq
sub
mov
inc
xchg
dec
fsub
into
cmps
or
test
xchg
cli
cwde
out
jecxz
jae
or
mov
pop
dec
cmps
push
fldz
jno
mov
lock
sub
out
shl
nop
xor
setnp
jnp
dec
or
mov
fisttp
stos
jo
xor
rol
and
sti
fisubr
in
ret
ret
scas
data16
cmps
cmp
xchg
pop
test
and
div
clts
out
xor
push
inc
scas
loope
ins
and
and
fs
pop
fld
jnp
xor
gs
ss
fidivr
andnps
and
movs
sti
repnz
xor
enter
sbb
hlt
jb
adc
inc
outs
sbb
push
enter
lea
and
cmp
call
mov
mov
mov
icebp
dec
cmp
mov
test
pop
lock
in
out
sub
pop
in
fs
je
ret
pop
dec
mov
rol
movs
jg
ret
test
aas
jg
sahf
shl
xchg
and
xor
sbb
(bad)
mov
not
mov
cli
sbb
inc
and
and
pop
pop
pop
adc
addr16
mov
adc
sahf
js
cmp
dec
mov
test
or
lock
sub
add
mov
fisttp
add
push
inc
iret
push
and
inc
push
cmp
call
sub
int3
or
cmp
lahf
mov
sub
mov
mov
push
loop
aaa
xor
jg
mov
jmp
jmp
xor
mov
mov
imul
das
arpl
mov
sub
pop
dec
shl
aad
xchg
push
inc
sub
sub
fistp
pop
inc
call
imul
push
jl
daa
lock
pop
lods
push
jg
fiadd
jo
fadd
inc
add
adc
loope
mov
popf
shl
push
pusha
sub
push
adc
and
in
jl
and
or
pop
mov
mov
and
or
mov
repnz
xor
or
jo
das
pop
(bad)
push
push
push
pop
and
in
add
sbb
outs
mov
mov
stos
adc
mov
test
jge
mov
pop
mov
lahf
pop
imul
jns
ss
mov
push
movs
or
addr16
div
stos
or
pop
test
or
and
xchg
loope
shl
scas
pop
dec
add
jne
add
scas
xchg
ret
pop
mul
movs
jle
push
mov
ret
aad
cmp
jecxz
jns
fisubr
(bad)
mov
(bad)
sti
ins
sbb
inc
ret
mov
pop
mov
(bad)
sub
mov
mov
mov
cmp
push
sub
jl
adc
out
fist
icebp
mov
sbb
(bad)
mov
push
and
or
sahf
cs
sti
fimul
ins
add
push
or
pop
push
fwait
adc
jmp
inc
loop
dec
scas
mov
cdq
ret
inc
arpl
xchg
(bad)
xchg
shr
xchg
retf
aad
movs
int3
adc
mov
push
cld
dec
jp
pop
test
dec
cwde
dec
cmovbe
push
xchg
push
jmp
arpl
inc
stos
nop
cmp
add
xchg
and
mov
sahf
mov
mov
pop
push
xchg
adc
inc
sahf
movs
rol
pop
sub
lods
in
mov
mov
jns
(bad)
pop
mov
int
jmp
pop
sbb
jno
mov
(bad)
push
int3
sbb
sub
push
inc
push
xor
sbb
mov
in
mov
stos
xchg
pop
(bad)
ror
call
jge
nop
sti
push
ins
icebp
mov
call
sub
jl
les
fstp
sbb
sub
jmp
jg
lds
jne
cmp
mov
(bad)
cmps
in
mov
jmp
sbb
lahf
sti
push
xchg
mov
and
inc
je
retf
pop
adc
lea
(bad)
jnp
add
ins
jle
jmp
sahf
pop
enter
call
mov
mov
adc
mov
(bad)
xchg
test
mov
(bad)
dec
push
sbb
jno
cmp
inc
push
sbb
(bad)
repnz
mov
mov
out
mov
pop
pop
xor
mov
pop
ds
cmp
ins
xchg
es
fld
scas
(bad)
jl
test
push
popa
(bad)
mov
frstor
push
out
cmp
pop
out
dec
mov
adc
mov
mov
push
mov
xor
pop
sbb
cli
and
shr
call
mov
adc
inc
jne
(bad)
add
inc
js
fild
inc
add
sahf
scas
call
mov
inc
pop
in
out
sub
mov
fst
aad
ins
xor
punpckldq
xchg
dec
mov
sub
aad
xor
into
or
sub
or
cld
xor
ficomp
jp
push
dec
jmp
adc
or
je
pop
xor
mov
and
imul
inc
mov
jae
mov
pusha
or
fdiv
sbb
rcr
jbe
aas
fwait
or
movs
popf
mov
sbb
xchg
pop
add
xchg
test
cli
adc
in
mov
xchg
in
test
lea
pop
outs
jl
ret
rcl
ffree
loopne
cmp
lods
sbb
xchg
loop
loop
or
add
addr16
dec
imul
call
adc
stc
lock
xchg
jns
xchg
and
jl
data16
icebp
out
push
xchg
adc
stos
dec
pop
jge
jnp
clc
ins
sbb
sub
add
and
fild
scas
std
fwait
sbb
pop
sub
pop
mov
into
push
loopne
mov
jno
sbb
and
mov
inc
test
inc
jb
fistp
(bad)
sbb
inc
or
cmp
sti
fwait
es
aas
addr16
in
rcl
das
jnp
add
ror
adc
clc
mov
cwde
mov
repnz
(bad)
jge
in
cmp
pusha
das
mov
xchg
jae
sbb
jmp
out
mov
aas
cmps
cld
jns
dec
retf
or
pop
sbb
repnz
jl
pop
repnz
mov
aad
dec
sub
inc
imul
cs
arpl
in
or
jmp
cmp
lock
inc
icebp
or
inc
test
shl
inc
test
js
add
aaa
cmc
popf
cli
jne
cmc
inc
popf
outs
arpl
loope
pop
inc
or
push
mov
js
imul
inc
cmps
mul
loopne
or
(bad)
into
cld
mov
adc
fs
js
ret
pop
mov
add
jmp
dec
and
daa
xchg
stc
dec
jle
inc
and
in
fs
mov
repz
pop
call
and
pop
imul
and
call
test
pop
stc
pop
ficomp
mov
rcl
mov
mov
pusha
push
sbb
jae
push
sub
dec
sub
jno
jbe
sub
pop
pop
in
xchg
call
mov
pop
jb
xchg
push
sub
hlt
(bad)
neg
jno
popf
sub
mov
sti
fld
fbld
sub
push
mov
fstp
cli
dec
dec
dec
inc
adc
add
inc
enter
mov
pop
pop
xor
xchg
push
aad
mov
mov
jne
xchg
les
fdiv
sbb
jae
in
sbb
mov
and
jns
aas
rol
adc
add
imul
movs
xlat
stos
bound
inc
scas
pusha
or
js
mov
push
cmp
sbb
les
movs
xchg
inc
out
pop
lahf
dec
je
mov
(bad)
mov
or
xchg
and
(bad)
fcmove
loop
fstp
inc
and
pusha
out
rcl
lahf
xchg
add
(bad)
mov
stc
pop
and
sub
xchg
out
mov
js
imul
xchg
adc
jmp
cwde
add
push
jecxz
push
cwde
jge
sahf
gs
pop
jne
mov
jl
pushf
inc
adc
mov
ds
push
pop
sti
pop
ins
and
mov
xor
push
mov
jp
fstp
mov
nop
push
jnp
je
add
cmp
imul
(bad)
sbb
jbe
mov
psadbw
repz
sub
cwde
loope
pop
cli
out
mov
jb
call
sbb
icebp
das
in
hlt
fst
add
idiv
inc
mov
repnz
pop
retf
movs
xor
vaesenclast
and
inc
popf
jmp
or
inc
cmp
out
(bad)
inc
mov
stos
hlt
xchg
sub
and
mov
pushf
adc
fild
mov
adc
push
cwde
mov
adc
mov
sahf
sar
jbe
xor
movs
icebp
gs
outs
jmp
inc
out
dec
test
jmp
mov
(bad)
adc
fadd
mov
mov
push
or
cmp
loop
xor
add
in
dec
mov
xor
adc
xchg
mov
or
jge
shl
inc
push
cmp
mov
adc
jb
or
sahf
mov
sbb
cld
ror
cmp
dec
stos
xchg
xlat
outs
popa
sub
mov
sub
data16
out
(bad)
arpl
jmp
cmc
sbb
sub
out
xor
bound
cmp
stos
ret
mov
int
test
(bad)
xor
in
ins
in
mov
xor
lds
sbb
adc
xor
pop
xor
mov
cmp
mov
sbb
arpl
out
add
add
rol
add
add
sbb
sbb
in
add
aam
add
add
add
ja
add
test
mov
add
fsub
add
add
add
mov
add
jg
add
add
add
xchg
add
add
add
add
add
fild
ins
add
add
aaa
cmp
add
add
add
add
add
add
dec
add
add
add
inc
add
mov
cmp
add
add
add
xor
pop
add
inc
mov
cs
cmp
inc
fsubr
add
repnz
inc
mov
daa
cmps
shl
xchg
inc
pushf
dec
ror
mov
outs
dec
xchg
and
mov
cmc
stc
mov
es
adc
and
cmp
xor
jmp
jnp
add
push
xchg
push
dec
inc
jle
lods
in
nop
sub
ror
ret
(bad)
bound
xor
outs
sbb
sti
pop
out
sub
pop
inc
jae
cs
or
fadd
lods
inc
movs
pop
arpl
pop
dec
dec
imul
lahf
jo
mov
pop
out
jp
in
pop
sub
adc
sub
mov
dec
inc
add
shr
test
mov
retf
bound
test
mov
sub
outs
sbb
retf
cmp
test
outs
adc
jl
add
and
mov
add
fwait
ins
pop
mov
sbb
daa
ss
xor
outs
mov
ds
adc
std
xor
imul
dec
xchg
fst
mov
inc
addr16
jo
sub
xlat
js
mov
repnz
jp
jno
sti
push
sub
add
mov
xor
mov
and
xlat
rol
(bad)
mov
xchg
scas
popa
jg
lods
cmps
sub
sub
mov
scas
sbb
cmc
ins
jb
div
movs
lock
xor
push
mov
add
icebp
inc
jo
dec
in
arpl
ins
ins
pop
in
xchg
lahf
aam
shr
les
lods
scas
outs
adc
push
xor
or
xor
mov
mov
shl
into
stc
or
cs
out
imul
outs
and
xchg
mov
ret
shl
(bad)
ins
cmove
and
or
pop
mov
fldln2
fdivrp
stos
scas
scas
test
outs
sub
mov
jp
enter
xchg
popf
mov
test
in
aas
nop
jns
clc
rcl
add
push
fild
call
cmp
inc
jge
shl
xor
xchg
ins
out
sbb
ja
pop
ds
cmps
daa
dec
mov
xchg
lods
and
push
stos
jl
fdivrp
push
inc
cwde
mov
jne
adc
out
mov
mov
test
sub
and
sbb
push
es
outs
add
xchg
fstp
and
push
sbb
int3
js
in
pop
jg
xor
fcomp
and
ins
out
mov
and
and
mov
imul
dec
xor
pusha
jecxz
sub
pushf
cmp
pusha
or
mov
aad
push
ja
push
xchg
gs
jae
(bad)
xchg
dec
add
xlat
mov
pop
adc
mov
outs
sub
and
push
xchg
es
xchg
mov
fs
push
push
icebp
repz
jl
inc
ret
fld
xor
cmp
outs
loop
add
shl
fsubp
sbb
push
cmps
sbb
sub
mov
clc
pop
xor
add
cmp
iret
mov
xchg
stos
lods
adc
sahf
jmp
ss
push
add
in
popf
jbe
jecxz
outs
mov
mov
jmp
jmp
cli
lods
add
cmp
pop
out
xor
cwde
add
movs
and
rcl
add
pop
adc
fcom
xor
dec
fnsave
das
fdiv
xchg
or
outs
and
outs
clc
div
es
jb
mov
popa
jno
rcl
fiadd
adc
popf
loop
clc
mov
cmp
mov
cmp
test
push
xchg
rol
call
push
jge
xor
ja
pop
adc
push
adc
adc
and
push
outs
je
iret
fadd
ucomiss
das
dec
movs
adc
pop
(bad)
(bad)
out
and
scas
jae
fnstsw
xchg
mov
xchg
jne
(bad)
call
sahf
push
cs
in
mov
jecxz
sub
sub
cld
mov
ds
(bad)
not
fs
arpl
mov
mov
sbb
nop
in
mov
mov
push
out
pop
and
scas
inc
cmp
jmp
dec
ret
sbb
mov
stos
jmp
push
xchg
lods
out
sar
cmp
jns
inc
inc
or
sti
xor
ret
xchg
mov
aad
cmps
ja
imul
popf
imul
push
adc
shr
pop
(bad)
fisubr
fcom
add
aas
std
pop
adc
imul
mov
scas
pop
mov
js
into
(bad)
fistp
retf
xchg
sbb
xchg
fwait
xlat
aas
push
cmp
inc
pop
sub
mov
iret
mov
mov
inc
into
cmps
mov
inc
imul
jmp
sahf
or
xchg
iret
call
retf
sbb
mov
out
(bad)
push
(bad)
call
mov
and
sbb
scas
mov
push
push
pop
hlt
imul
mov
out
jmp
(bad)
into
ins
iret
dec
sub
mov
push
inc
pop
sub
clc
not
clc
rol
pop
movs
mov
mov
cmp
jbe
pop
fisubr
jnp
cmp
in
xor
fld
xor
fild
(bad)
mov
not
sti
mov
pop
cmp
pushf
xor
fidivr
loop
test
inc
stos
pop
inc
adc
pop
les
jecxz
mov
sub
jb
sub
(bad)
fsubr
cmc
fst
lods
mov
push
imul
aaa
pop
(bad)
fstp
inc
add
pop
sbb
retf
dec
sub
ins
jg
or
ret
imul
jmp
ins
mov
jmp
sub
repz
lock
rcr
cdq
jns
or
pop
xor
adc
xor
sbb
cmp
pop
add
pop
fidivr
shr
add
aad
loope
cmp
and
shr
xor
inc
xlat
xchg
adc
or
repz
mov
lds
into
fcomp
sbb
jecxz
call
cmp
loope
aas
retf
add
xchg
jno
inc
and
dec
stos
add
(bad)
lock
sbb
sub
add
dec
jb
lds
mov
jle
add
das
in
lahf
bound
mov
or
mov
ja
lahf
popf
inc
mov
push
std
int3
test
loop
cwde
ja
int3
sahf
inc
test
js
shr
xchg
call
stos
cmp
mov
jge
in
add
hlt
loop
push
push
xor
jbe
mov
lods
add
hlt
mov
or
shr
lock
adc
fmul
cmps
xor
mov
mov
push
sub
xor
xchg
mov
mov
std
cli
test
cld
inc
xchg
out
adc
and
(bad)
mov
mov
xchg
cmps
or
jns
(bad)
mov
push
jne
pop
mov
popf
loop
fs
cmp
in
mov
retf
mov
orps
mov
imul
pop
add
inc
pop
push
arpl
es
inc
sub
sbb
cmp
adc
inc
add
or
cmps
loop
div
ret
add
pop
mov
rol
in
fwait
test
mov
push
jmp
scas
xchg
(bad)
dec
cmp
and
out
ficomp
adc
jno
xor
mov
or
(bad)
mov
jmp
fnstsw
mov
out
shl
call
sar
pop
jae
inc
test
jo
dec
sub
jl
daa
div
xlat
and
xor
push
movs
cmp
cmp
mov
js
mov
mov
jb
push
or
mov
mov
pop
jbe
dec
(bad)
pop
and
xor
pop
sbb
hlt
xchg
cmp
dec
ins
arpl
cmps
adc
xor
int3
in
and
pusha
push
lds
les
mov
cmp
xor
xchg
xchg
shl
shl
test
xor
int3
xchg
jge
enter
dec
pop
sub
test
call
xor
daa
xor
popa
retf
cli
inc
fiadd
and
mov
pop
xchg
inc
bndldx
cli
jge
jne
jns
push
or
adc
inc
sti
jmp
pusha
mov
std
scas
mov
dec
aad
imul
into
stos
es
dec
mov
movs
sbb
inc
ds
jmp
test
and
cmp
lea
and
mov
or
inc
(bad)
dec
xchg
dec
sbb
xchg
sub
dec
repnz
mov
cs
xchg
daa
mov
add
les
add
popa
mov
sbb
push
pop
scas
xchg
cdq
adc
retf
mov
test
cmp
aam
adc
dec
das
ds
loope
mov
gs
movs
add
inc
outs
in
es
adc
(bad)
aaa
mov
pop
jne
aad
mov
out
xchg
cmp
xchg
pop
mul
(bad)
out
adc
cmp
out
cmps
sub
lahf
dec
aam
je
(bad)
xchg
mov
int
mov
jbe
cs
push
sub
sbb
popf
jns
sub
cmp
popa
lods
adc
cmps
repnz
fstp
les
out
lods
enter
sub
cwde
inc
jns
mov
jl
and
jnp
loop
mov
or
jmp
mov
lahf
jnp
enter
or
daa
push
push
out
pop
inc
push
xor
cmp
loopne
mov
in
push
add
fdivr
cmp
mov
lods
data16
fbstp
inc
push
jne
in
xchg
iret
adc
xor
fmul
scas
stos
cmc
jnp
in
cmp
sar
cdq
push
adc
hlt
test
loope
mov
int3
dec
movs
inc
das
pop
jp
pop
sar
ins
sbb
xchg
xor
and
cmp
push
jb
in
fs
iret
scas
xchg
ficomp
cmp
jno
hlt
fcomp
lods
das
call
jns
push
(bad)
std
lahf
out
ret
(bad)
(bad)
out
jae
xchg
dec
loopne
pop
fimul
adc
jae
push
sub
pop
mov
ret
out
iret
sub
jp
jnp
pop
and
jno
push
iret
and
bound
mov
push
adc
je
cmp
repz
pop
cmp
push
mov
and
add
add
jo
mov
add
add
add
add
adc
add
add
add
add
add
dec
add
add
add
add
add
add
add
nop
cmc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
ins
add
add
add
add
add
add
fild
sldt
add
add
add
add
add
test
add
add
add
add
add
add
add
add
add
add
add
add
add
aaa
sti
lods
cmps
dec
fldcw
mov
cmp
jne
add
xor
fs
or
or
idiv
mov
sbb
inc
popw
mov
jne
inc
out
sub
das
mov
or
add
mov
add
xchg
xchg
outs
(bad)
je
add
or
mov
mov
shl
push
leave
push
ror
sahf
or
add
aaa
and
ret
cdq
scas
pushf
add
xchg
push
aam
out
sub
aaa
xchg
dec
std
xchg
push
pop
out
enter
pop
sub
xchg
add
test
lea
icebp
cdq
pop
out
sbb
mov
fimul
jae
sbb
xor
sub
jmp
pusha
cld
mov
xchg
int
xor
lods
mov
mov
mov
jmp
call
loopne
sub
inc
sub
hlt
sahf
in
bound
gs
sti
pop
push
das
mov
push
xor
hlt
mov
dec
(bad)
cs
js
jge
pop
in
and
sbb
pop
enter
cs
xor
es
cs
add
int
aam
xchg
fdiv
push
in
fcmovnb
dec
add
or
(bad)
xchg
add
into
xchg
cmc
or
xchg
dec
stos
(bad)
xor
call
xchg
aaa
icebp
jne
gs
(bad)
lea
push
das
retf
push
cmp
xor
enter
les
push
pop
fidivr
inc
cmp
out
inc
movs
imul
stos
add
inc
fmul
pop
lahf
and
iret
div
sub
lods
lods
shl
inc
lea
call
push
jge
mov
add
out
jge
pop
add
sbb
cmp
imul
add
cmp
lods
jg
cmp
mov
pop
inc
inc
jmp
mov
movs
call
inc
ss
add
mov
dec
das
xor
shl
mov
clc
dec
inc
jns
push
jae
sub
and
imul
mov
push
call
xchg
shr
mov
push
xchg
lea
sub
aas
loopne
push
jnp
add
sub
jno
xchg
dec
jo
arpl
aad
adc
pop
jg
add
arpl
js
clc
sti
inc
sbb
push
or
fs
inc
jmp
push
je
fs
inc
aas
outs
mov
and
cmp
shr
jl
cmp
xchg
movzx
mov
cmp
fdiv
nop
cmc
scas
sbb
dec
cdq
loopne
add
enter
xchg
adc
js
inc
cdq
repnz
movs
aam
or
push
cmp
mov
dec
xlat
sub
push
icebp
jmp
imul
cwde
xchg
in
adc
push
sub
popf
xor
lahf
je
clc
out
sub
add
sub
or
pop
xor
stos
pop
stc
mov
test
into
rcr
inc
mov
mov
push
sbb
sub
jbe
cmc
push
xlat
pushf
jge
mov
sbb
fidivr
int3
sub
scas
dec
rcr
mov
xchg
push
in
mov
cld
sti
in
sub
fxch
fdiv
add
sub
add
jmp
mov
pop
arpl
sub
adc
mov
inc
adc
jg
add
loopne
rep
movs
push
movs
les
scas
or
nop
jno
fisub
xchg
inc
popf
push
aam
std
jnp
cmp
pop
test
dec
add
int
fwait
dec
push
movs
push
jmp
add
cs
adc
pop
push
(bad)
inc
leave
adc
leave
adc
outs
dec
ds
scas
xor
adc
adc
pushf
(bad)
jo
call
test
mov
mov
aad
jg
adc
jnp
fidivr
test
sub
or
dec
add
(bad)
or
pop
iret
push
jecxz
push
dec
stc
and
fwait
pop
fist
mov
test
push
mov
jle
or
sub
in
jns
push
sahf
mov
es
dec
xor
cli
retf
mov
test
fs
mov
push
(bad)
test
add
pop
jle
mov
jl
mov
push
addr16
movs
mov
popa
in
adc
cmp
dec
mov
js
jno
sub
add
popa
jmp
jp
enter
js
outs
xchg
inc
pop
sbb
push
push
and
lods
mov
xchg
loope
jge
icebp
sub
stos
add
pop
popa
adc
pushf
jbe
push
sahf
fdiv
pop
lods
adc
test
sub
xchg
outs
mov
mov
mov
jmp
push
mov
mov
cld
cwde
adc
or
idiv
sub
xor
or
xchg
cdq
mov
mov
scas
in
loop
sbb
out
scas
inc
pop
mov
sar
fwait
and
sar
test
popf
(bad)
stc
jge
(bad)
mov
pop
mov
dec
xor
xor
fild
mov
out
jecxz
ret
xchg
(bad)
fs
cmps
sub
call
int
rol
out
fiadd
inc
xchg
cld
lods
sub
dec
xchg
mov
mov
jae
pop
mov
mov
mov
fcom
shl
inc
pop
(bad)
jbe
(bad)
loop
mov
lea
ror
fst
les
aad
cmp
adc
pop
jmp
popf
mov
and
fsubrp
cmps
pushf
pop
dec
div
add
xchg
pop
dec
js
dec
push
jecxz
sbb
fstp
loop
lea
fistp
or
or
out
cdq
mov
push
dec
in
int3
mov
cli
cs
lods
test
jbe
dec
push
mov
lods
mov
xchg
std
xor
jecxz
out
fwait
aas
ret
rol
sub
xchg
or
xor
loop
(bad)
mov
sub
mov
cmps
(bad)
pop
dec
push
rcl
arpl
into
in
or
pop
fist
or
and
leave
and
call
or
push
sbb
pop
jge
dec
add
dec
mov
jo
into
(bad)
sbb
es
sbb
sub
fwait
push
cmp
out
cmp
sti
cmc
and
imul
mov
in
cli
sahf
repnz
(bad)
jb
test
popf
push
into
mov
mov
xor
js
lahf
pop
xor
pop
xor
xor
or
push
adc
dec
loopne
mov
dec
inc
jg
jl
ins
nop
nop
rcl
mov
mov
dec
inc
mov
push
or
sbb
sbb
xchg
stos
pop
iret
mov
sub
out
aas
xchg
rcr
adc
pop
dec
adc
rcl
aam
mov
pop
lea
(bad)
in
gs
and
stos
bound
sub
stc
call
adc
push
mov
cs
cdq
data16
push
and
mov
adc
mov
std
sub
inc
push
nop
xor
add
ja
aad
das
sub
aam
push
jmp
mov
cdq
jb
int
mov
push
rcl
stos
add
out
inc
fs
cs
jmp
imul
in
push
iret
add
(bad)
cmps
or
mov
sbb
leave
jnp
pop
jp
lods
xchg
aaa
mov
es
push
call
cs
push
loop
fld
mov
aad
iret
dec
push
add
fcomp
inc
test
je
pop
nop
loope
fidiv
sub
jb
inc
or
mov
jo
pop
data16
cmps
std
aaa
lea
xchg
out
idiv
and
mov
das
mov
push
test
loop
mov
repz
in
fdivr
fmul
(bad)
arpl
arpl
push
jg
mov
adc
retf
cdq
shl
push
outs
fidiv
push
fs
sub
push
in
ins
int3
jecxz
cmp
call
push
aas
sbb
repnz
dec
add
pop
pop
sbb
fcom
sub
xchg
push
and
and
(bad)
add
dec
imul
xchg
push
and
jg
mov
ins
popa
push
data16
cmp
nop
stc
mov
vfrczss
jbe
ja
fnstenv
fisub
ror
retf
out
push
sub
sub
mov
scas
mov
sbb
cdq
push
mov
rcr
fwait
jnp
iret
inc
xchg
jae
sub
sbb
cli
cs
fsub
aas
pop
mov
jle
loop
jp
pop
test
xchg
or
jmp
mov
pop
lock
sahf
hlt
jns
sti
movs
repz
xchg
pop
(bad)
fwait
dec
int
aaa
mov
(bad)
stc
les
or
aad
adc
mov
xchg
test
xor
push
xor
pop
or
mov
jb
jb
and
pop
adc
adc
pop
cdq
into
stc
test
mov
imul
push
outs
test
jno
movs
aas
or
xlat
stc
(bad)
mov
sbb
dec
xchg
mov
inc
aas
bound
push
sbb
cdq
xchg
sub
neg
xor
popf
dec
adc
mov
adc
mov
repnz
jle
test
and
sub
ret
mov
jb
ret
je
add
pop
add
mov
int
push
das
stc
stc
in
inc
jmp
adc
cmp
inc
sub
in
pop
ss
loope
scas
fidiv
pop
ins
in
mov
scas
mov
mov
mov
adc
fsub
and
pop
and
adc
ins
lods
add
pop
hlt
mov
xchg
pop
cmps
mov
or
push
mov
repnz
shl
adc
repz
adc
lahf
iret
popf
dec
icebp
lods
and
stos
or
mov
test
sub
cmp
scas
xor
jns
lds
jmp
push
(bad)
xor
test
call
pop
dec
push
cs
mov
mov
jo
xor
ret
sub
cs
xchg
cmp
scas
les
inc
cs
or
imul
lods
pop
bound
push
popa
adc
xor
out
cdq
add
add
add
add
add
mov
add
add
movs
int
add
or
add
ret
add
or
add
add
add
add
add
add
mov
add
adc
add
dec
add
add
add
add
rol
imul
add
inc
and
xor
sub
fild
add
and
add
add
xlat
add
add
sbb
add
add
sub
add
jge
cmp
das
or
jge
scas
adc
popa
ret
ror
sahf
cli
inc
jp
shr
sub
pushf
mov
mov
xchg
adc
push
cwde
sti
stc
(bad)
cmps
or
add
jno
push
add
xchg
xchg
aam
push
or
xor
cmc
lods
pop
lds
xchg
xor
addr16
pop
fild
dec
xor
out
mov
std
pop
into
rcl
mov
sub
mov
mov
js
popf
jle
or
sahf
lahf
(bad)
jmp
dec
pushf
outs
pop
sub
test
mov
and
scas
jg
inc
adc
les
mov
cmps
jg
lods
push
jmp
mov
outs
popa
push
xchg
int3
sar
(bad)
jl
cmps
sbb
out
xor
leave
sub
aaa
xlat
pop
das
cmc
(bad)
jmp
jno
in
out
stos
gs
add
ins
and
mov
js
mov
ins
lock
mov
lds
outs
imul
fwait
ins
into
jne
dec
sbb
mov
out
jne
cwde
mov
ja
add
and
adc
repnz
ins
adc
sub
jnp
nop
int
push
or
and
mov
cld
out
mov
test
cmp
xchg
inc
fs
je
popa
jl
lgs
dec
or
xchg
and
inc
jmp
mov
ss
dec
push
cmp
retf
add
scas
mov
enter
scas
lock
iret
lock
cmp
in
or
ins
sub
push
and
sbb
cld
leave
int3
std
mov
or
cmp
xor
adc
cmps
repnz
pop
aam
into
aas
outs
push
and
inc
mov
adc
mov
out
aam
jg
xor
xchg
mov
mov
cs
xor
xchg
mov
or
sub
lahf
stos
(bad)
push
sbb
ja
rol
scas
xor
and
outs
gs
and
cli
mov
jnp
fwait
push
pushf
or
or
cmp
dec
add
lahf
js
imul
pop
inc
mov
out
stos
out
shr
jecxz
ds
test
inc
movs
and
test
xchg
hlt
xlat
jl
jmp
cmp
cwde
sahf
sahf
xchg
mov
gs
out
mov
popa
add
cli
add
cli
call
movs
cdq
cmps
xchg
inc
push
leave
xchg
bound
adc
add
(bad)
int
(bad)
xor
mov
aaa
sbb
test
jno
movs
out
and
push
in
mov
loope
cmps
ror
xchg
clc
arpl
out
jmp
adc
xor
add
ficomp
mov
push
mov
aam
or
mov
fst
adc
pop
vpacksswb
adc
mov
add
inc
lea
int
sub
add
repz
loop
pop
xor
(bad)
stc
leave
xor
data16
xor
lahf
pop
enter
push
push
ja
sti
add
xor
xchg
xor
into
push
and
inc
inc
cli
imul
mov
pop
fstp
mov
push
jae
js
cld
and
adc
adc
fwait
std
pop
pop
ficomp
xchg
dec
sbb
ficom
cwde
jl
mov
or
scas
dec
push
xchg
xchg
push
sbb
xor
shl
sub
mov
jb
pusha
inc
push
mov
xor
mov
dec
scas
sbb
inc
pop
aad
test
add
mov
outs
sub
sbb
enter
sbb
pusha
add
xor
retf
adc
sbb
cli
sahf
sbb
sub
outs
mov
(bad)
adc
iret
mov
jecxz
mov
aaa
inc
cmp
rdpmc
loop
sti
sahf
cmps
lahf
aas
leave
(bad)
out
test
fldcw
adc
outs
lods
iret
or
adc
imul
jbe
test
jecxz
cs
xor
les
pop
adc
ins
popf
mov
retf
add
(bad)
mov
lds
xchg
cld
out
inc
fild
mov
imul
int3
or
ins
mov
dec
iret
dec
sbb
inc
and
mov
xchg
sub
add
xor
(bad)
test
sbb
cmp
lahf
hlt
fst
call
xchg
adc
imul
sub
(bad)
pop
and
rol
mov
sbb
lds
retf
outs
fimul
cmps
inc
push
mov
jo
jnp
cs
mov
popf
ins
cmp
cwde
push
mov
mulps
mov
mov
inc
mov
add
xchg
push
adc
mov
mov
cmp
test
xchg
mov
adc
(bad)
test
cdq
push
xchg
hlt
(bad)
cmc
aaa
daa
test
js
push
gs
fnstcw
cdq
scas
fwait
(bad)
out
cwde
jae
stos
xchg
mov
lods
lods
push
add
xchg
inc
test
mov
cmp
lods
lahf
repz
nop
out
js
lods
dec
mov
dec
mov
push
out
xchg
fdiv
cdq
adc
inc
fdivr
movs
je
fisubr
dec
into
mov
push
push
add
ss
xchg
je
stos
dec
int3
pop
out
ret
retf
xor
jae
repz
sub
cwde
stc
movs
push
in
adc
mov
mov
out
add
(bad)
in
call
mov
stos
inc
dec
shr
lahf
and
in
or
das
nop
and
xor
test
and
pop
mov
or
or
repnz
sete
sub
dec
retf
lea
aad
mov
jmp
fimul
ss
cs
ss
fist
push
jns
rol
cmp
sub
dec
(bad)
and
cld
cdq
gs
mov
js
cmp
cmp
int
and
mov
jo
fistp
(bad)
xchg
cdq
or
cmp
ret
mov
xchg
mov
test
mov
mov
lahf
inc
test
xchg
(bad)
sbb
mov
mov
pop
xchg
movs
pusha
sbb
xchg
mov
mov
mov
mov
int
call
dec
sbb
adc
add
div
(bad)
das
(bad)
sub
pop
mov
rcl
js
mov
cmp
nop
aad
jae
and
inc
cld
or
dec
xor
fsub
arpl
jle
repz
jl
les
out
jmp
xchg
push
ret
fcomp
pusha
icebp
jne
push
xchg
sahf
pop
pop
outs
cmp
out
repz
stos
out
pop
fwait
sahf
bound
cli
sbb
sub
fist
xor
sar
cmp
data16
xor
fst
sahf
mov
pop
out
jge
add
loopne
neg
scas
stos
call
inc
xor
mov
mov
sbb
daa
add
in
ficom
cld
retf
enter
rol
icebp
js
push
test
jmp
cmp
(bad)
std
js
clc
retf
jne
push
fldl2e
cmp
mov
(bad)
sub
jmp
scas
aam
dec
jl
out
call
lods
jmp
sahf
xor
xchg
inc
jnp
iret
stos
outs
scas
ret
gs
aam
mov
mov
sub
es
inc
jle
adc
dec
movs
sub
fidivr
fadd
fwait
shl
jg
outs
call
xchg
aaa
and
push
cs
imul
adc
push
jne
sbb
call
cmps
(bad)
xchg
cmp
fcomp
xor
push
xchg
mov
sti
aaa
jbe
sub
adc
lock
sbb
adc
shl
add
pop
call
leavew
xor
xchg
pop
adc
in
xchg
les
push
inc
mov
or
cdq
cmps
scas
outs
jmp
movs
out
sbb
mov
sbb
push
fcmove
loope
out
cdq
std
fld
add
dec
mov
sti
inc
push
ss
cmp
mov
jmp
inc
dec
sti
dec
mov
repz
fcomp
jae
retf
and
push
mov
dec
movs
cmp
iret
pop
sub
aaa
ret
into
imul
repz
call
inc
jg
daa
in
mov
jae
mov
sbb
test
es
(bad)
adc
mov
lods
cmps
icebp
jmp
dec
inc
jno
bound
xchg
dec
sub
out
add
test
or
frstor
xlat
shl
or
mov
add
push
aas
(bad)
fldcw
scas
xchg
test
jmp
fcomp
mov
push
pop
aas
or
mov
inc
lea
ins
daa
add
dec
push
dec
test
cmp
xchg
daa
xchg
cmp
cld
mov
jecxz
mov
js
adc
push
ins
das
lea
test
dec
fnstsw
data16
pop
dec
cmp
pushf
inc
or
cmp
aaa
pop
pushf
push
xchg
cmp
icebp
out
fsub
jmp
add
(bad)
loopne
pop
cdq
or
xchg
push
inc
cs
pushf
pop
pop
sub
and
int3
mov
pop
(bad)
cdq
sub
retf
mov
mov
pushf
pop
paddusw
pop
xchg
repz
test
adc
test
aad
dec
nop
xchg
mov
fld
sti
aaa
scas
ds
cld
mov
mov
int3
not
lods
int
and
loop
mov
call
mov
ds
or
and
adc
jle
dec
sub
das
scas
dec
add
mov
lahf
in
mov
movs
int
inc
push
(bad)
ficomp
inc
mov
hlt
icebp
aaa
sti
cmp
inc
sti
les
add
jno
popa
aas
dec
bound
arpl
hlt
aam
jb
rcl
push
dec
jge
pop
adc
ror
xchg
ss
mov
sbb
xor
out
sbb
movs
in
in
inc
js
cmps
mov
stc
mov
mov
lods
sub
pop
xchg
(bad)
cmp
add
mov
push
mov
dec
pop
not
gs
scas
inc
ret
sub
loopne
sbb
aam
push
mov
push
push
rcr
jecxz
fadd
not
add
add
ins
add
add
cmp
(bad)
add
add
jae
add
inc
add
add
add
mov
sbb
add
add
add
jnp
add
add
add
add
add
lods
add
in
add
add
fucomi
call
repnz
popf
(bad)
shl
xchg
(bad)
bound
into
jne
popa
das
ret
sbb
jp
and
xchg
mov
push
sub
into
pop
xor
imul
sub
xchg
jmp
mov
dec
arpl
cmc
mov
mov
add
jge
jge
popa
fwait
push
push
bound
jle
and
dec
in
les
inc
push
clc
push
(bad)
icebp
cmp
dec
cdq
sub
dec
inc
jnp
out
xchg
mov
sub
pop
hlt
faddp
dec
dec
jmp
ficom
nop
mov
jb
test
mov
lods
cmp
dec
jo
adc
mov
ficom
mov
clc
adc
add
fist
push
add
mov
xchg
dec
add
out
sub
ret
aas
inc
mov
aad
out
push
pop
cli
in
fucom
sub
push
pop
sar
xor
loope
repnz
(bad)
ror
in
movs
mov
ins
scas
xor
sub
or
jmp
sbb
adc
mov
xlat
icebp
enter
test
cmp
xor
ficomp
stos
fistp
adc
loope
sub
adc
bnd
call
push
cmps
mov
inc
lods
pop
dec
xchg
test
dec
out
add
cli
add
xchg
cmps
cmp
dec
mov
mov
movs
inc
adc
and
enter
xchg
rcr
inc
mov
push
sub
ins
aas
xchg
(bad)
(bad)
std
adc
jp
ret
inc
xchg
and
daa
in
jp
jecxz
or
jge
cwde
fwait
xchg
ret
ret
lock
or
adc
jp
jo
xor
mov
adc
stos
out
mov
int
mov
imul
aad
or
inc
stc
(bad)
(bad)
test
inc
and
mov
mov
push
mov
xor
sbb
aad
enterw
fcom
fnstcw
cmova
cmp
(bad)
sub
imul
adc
push
(bad)
std
mov
jmp
sub
sbb
cmps
cmp
inc
fwait
into
xor
stc
xchg
shl
xchg
xor
jle
in
jno
mov
pop
jb
leave
fisubr
cmps
std
jns
mov
movs
mov
(bad)
mov
int
dec
cmc
lds
pop
jae
shl
addr16
inc
retf
pop
push
loope
xlat
mov
sar
(bad)
pop
xchg
movs
xchg
aad
cdq
inc
xchg
mov
pop
(bad)
loopne
jns
jnp
xor
fs
dec
adc
ficomp
es
cmp
fild
sub
outs
xor
dec
clc
xchg
aas
xchg
mov
dec
mov
xchg
adc
adc
add
mov
mov
gs
in
test
xchg
pop
ret
add
push
clc
std
mov
mov
std
leave
jbe
lahf
and
sahf
jnp
push
iret
push
sbb
pop
fmulp
jbe
jle
ss
js
pop
push
mov
cs
lock
aam
add
out
push
vpcmov
cmps
movs
loopne
jae
sub
cmps
mov
lahf
mov
sar
mov
(bad)
sub
pop
mov
xchg
inc
dec
push
pop
movs
gs
push
jne
mov
xchg
cmp
mov
cwde
popf
loopne
mul
in
shr
stos
jge
(bad)
in
jmp
mov
pop
in
mul
retf
sub
dec
cmp
cmp
xchg
call
sbb
loopne
cmps
(bad)
cli
jl
rol
cmp
je
xchg
pop
in
adc
fwait
mov
adc
scas
in
mov
jbe
frstor
test
inc
mov
inc
repnz
frstor
dec
lock
fnstsw
js
pop
xchg
dec
mov
cs
or
jg
enter
repnz
fstp
add
not
cwde
data16
retf
in
mov
adc
push
xor
fs
shl
sub
or
sub
xor
cld
inc
imul
adc
es
and
jp
std
pop
enter
lds
arpl
sar
ret
lock
cmp
fld
rcr
push
jo
sub
pop
call
movs
cdq
xor
dec
lock
ficomp
sbb
or
and
test
call
addr16
or
adc
hlt
sub
test
jns
arpl
sbb
push
int3
cmc
loopne
fs
popf
mov
ds
rcr
sbb
jl
ss
in
fbld
stos
imul
inc
cmc
in
call
jns
jnp
sbb
ret
pop
enter
push
sbb
or
nop
cdq
aas
xor
je
bound
push
movs
sub
enter
pop
mov
push
ret
push
popw
sbb
movs
pop
mov
inc
adc
or
xchg
js
jl
jae
lahf
sbb
in
mov
push
xchg
inc
cmp
add
adc
jae
in
call
popf
jge
or
or
fdiv
inc
push
dec
push
icebp
sbb
cmp
mov
add
cmc
popf
clc
or
sbb
add
dec
or
inc
ret
int3
fcomi
enter
xor
leave
and
add
mov
and
in
mov
mov
sti
rcl
mov
fisttp
xchg
ins
mov
mov
enter
adc
fisubr
lea
inc
(bad)
jmp
jbe
shl
fxch
pop
mov
or
cmps
clc
pop
inc
sbb
(bad)
pop
jo
and
mov
scas
cli
repz
push
int3
cli
jle
jp
mov
addr16
mov
pop
daa
and
dec
mov
jnp
sub
fadd
inc
push
dec
cmp
mov
mov
ror
ja
sti
sub
mov
push
out
stos
sub
pop
pop
fcmovnbe
lahf
repz
or
and
or
sbb
xor
jmp
arpl
frstor
mov
andnps
add
(bad)
lds
sti
in
pop
cwde
repz
cwde
call
pop
in
pop
pushf
out
in
fild
mov
jg
pop
test
scas
cmps
nop
xor
inc
clc
or
pop
fimul
ret
shl
mov
dec
lea
jb
daa
aaa
xchg
ficomp
dec
outs
xor
add
add
pop
dec
arpl
adc
xchg
and
imul
push
ins
call
ss
sub
not
mov
repnz
std
movs
or
js
cmp
addr16
jecxz
sbb
jbe
push
cmp
jmp
add
adc
push
xchg
cdq
daa
mov
cmp
jne
dec
fild
dec
ins
and
add
mov
icebp
and
fs
jne
sbb
scas
xchg
mov
test
rcr
push
xchg
fimul
ret
push
loop
imul
cmp
(bad)
mov
inc
lds
jmp
into
mov
enter
scas
iret
adc
dec
loope
cwde
inc
stos
or
jno
xor
dec
loopne
hlt
scas
shr
xchg
scas
hlt
dec
stc
cmc
push
adc
or
cdq
xor
push
fcomp
cmps
hlt
sub
add
nop
mov
mov
mov
aas
xchg
sub
pop
in
xor
cmps
in
mov
cdq
lahf
xchg
xchg
outs
dec
inc
dec
pop
jae
daa
popa
push
in
pop
aad
push
js
fcom
sbb
dec
scas
xchg
push
dec
add
xor
push
rcr
cld
mov
jmp
inc
iret
test
mov
pop
nop
mov
cmc
das
jle
test
cli
and
fdiv
cmovne
dec
call
dec
aam
dec
jle
fld
push
in
int
push
jbe
aas
and
jne
loope
pop
clc
mov
mov
mov
sar
adc
cdq
(bad)
rcr
les
add
adc
mov
add
mov
lahf
push
pop
sbb
cld
add
inc
retf
dec
sub
sbb
push
loope
call
lock
int3
adc
fwait
mov
ret
push
int3
retf
and
jb
dec
dec
les
add
loop
and
not
sub
inc
inc
mov
popf
xor
ror
enter
cmp
add
dec
xlat
test
push
fchs
mov
adc
push
aaa
(bad)
add
xlat
ret
cmp
or
fbstp
(bad)
sbb
adc
imul
sbb
and
sub
scas
es
mov
int
add
add
pop
add
mov
pop
mov
or
or
addr16
push
clc
mov
push
add
xor
mov
push
in
retf
sub
or
add
mov
sbb
out
das
(bad)
fisttp
lock
or
mov
rcr
ficomp
cmps
popa
dec
push
xchg
pop
push
pand
imul
ins
jns
mov
addr16
sar
iret
dec
shr
mov
(bad)
push
loopne
jne
loop
sub
pop
mov
ja
stc
in
in
test
jg
shl
test
xor
jne
jg
jg
sub
stos
dec
sti
or
adc
mov
mov
stos
mov
scas
fs
sahf
outs
push
jo
mov
clc
mov
jnp
xchg
mov
and
dec
test
idiv
mov
or
sbb
ror
in
jmp
lea
arpl
das
cmp
ret
xchg
fdiv
dec
mov
mov
add
(bad)
mov
adc
mov
or
add
in
retf
ja
push
xor
cdq
sahf
push
ds
enter
lea
shr
pop
in
je
cmp
cmp
aad
cwde
xchg
mov
out
push
xchg
push
pusha
int
mov
cmp
mov
lods
leave
jl
stos
mov
push
mov
cwde
push
xchg
and
jg
sub
mov
int
xor
jne
cmc
push
rcl
sbb
xchg
imul
mov
add
je
add
add
add
add
add
add
add
add
add
adc
add
add
add
add
jmp
add
add
add
add
mov
enter
add
add
add
add
add
add
mov
add
and
add
add
xchg
xchg
add
add
add
movs
add
add
add
add
add
add
add
mov
add
add
add
add
add
push
daa
add
add
add
aad
cdq
jle
add
add
add
mov
add
add
add
add
add
add
add
add
add
add
add
test
add
lock
add
add
add
add
jmp
add
arpl
inc
add
jbe
add
outs
add
int3
add
jg
and
add
add
shl
add
add
add
add
add
add
add
add
add
adc
sbb
sbb
push
ss
aam
inc
out
cmp
mov
and
jp
movs
in
and
cmc
das
pop
xchg
scas
and
(bad)
je
jns
mov
je
scas
push
clc
xor
aaa
pop
(bad)
push
pop
pop
(bad)
cmp
or
cmp
ror
add
jns
pushf
jne
aaa
xchg
mov
sahf
mov
ret
(bad)
ret
ret
aad
mov
dec
sub
xchg
outs
mov
shl
jb
in
mov
sub
addr16
in
shr
sbb
dec
mov
lods
xor
std
dec
ins
mov
dec
dec
inc
test
sbb
or
cli
div
mov
and
cld
scas
dec
inc
shr
iret
jg
cmp
inc
fild
fcomp
mov
or
pop
sbb
mov
mov
in
ins
ret
in
shr
(bad)
push
pand
and
mov
imul
dec
(bad)
out
jg
jns
outs
pop
push
mov
and
daa
lock
push
xchg
inc
dec
add
jmp
or
push
fs
xor
xchg
call
pop
push
movs
mov
xstore-rng
cmps
xchg
or
loopne
fiadd
stc
std
mov
popa
aad
rol
retf
cmc
aas
movs
rol
es
mov
cwde
inc
sub
rcr
jl
in
arpl
ins
loopne
and
pop
add
(bad)
jge
mov
(bad)
data16
and
pop
inc
and
cwde
cmp
cdq
or
rol
adc
out
xlat
xchg
inc
retf
pop
stos
imul
movs
lock
cdq
push
loopne
or
pand
in
sti
pop
add
jecxz
pusha
or
loop
cdq
xor
push
xor
pusha
bound
aam
daa
imul
push
xchg
xlat
mov
prefetcht0
stc
aaa
cmp
(bad)
pusha
dec
mov
scas
mov
repnz
xor
xchg
(bad)
cs
add
fdivr
loopne
dec
dec
xor
push
mov
fucomp
aam
jbe
inc
adc
ins
dec
or
cmp
stos
adc
stos
shl
mov
pop
cmps
rol
dec
pop
test
pop
sbb
sbb
add
out
pop
jmp
cmp
sub
add
(bad)
stos
mov
mov
xchg
mov
sub
je
jl
add
icebp
jle
(bad)
fcom
packssdw
loop
jle
xchg
push
in
and
mov
jns
es
cmp
sbb
(bad)
xor
mov
gs
jmp
fwait
in
inc
pop
jnp
or
xor
dec
inc
test
push
scas
adc
add
add
test
push
aam
nop
sub
adc
cmc
jne
mov
push
call
sbb
xor
mov
fisttp
dec
add
(bad)
call
jmp
div
stc
sti
nop
inc
push
mov
inc
or
mov
loop
clc
sub
es
nop
gs
mov
sbb
loope
outs
movs
push
push
pop
pop
mov
int3
dec
add
cli
pop
dec
clc
movs
je
xchg
mov
movs
out
scas
push
or
mov
fist
push
jns
cwde
pop
movs
mov
push
stos
pop
in
xor
add
push
xchg
stos
and
not
xor
or
test
(bad)
in
jbe
in
cs
mov
in
sbb
in
inc
idiv
xchg
push
sub
sti
mov
or
aaa
jns
adc
jmp
lea
adc
mov
dec
sub
pop
loopne
pop
pop
out
stos
mov
xor
(bad)
jmp
shl
sti
xor
ja
out
ret
daa
mov
int3
iret
jmp
stos
inc
dec
ins
dec
(bad)
xor
and
(bad)
adc
xor
sahf
xor
int
das
test
sbb
pop
(bad)
out
in
xlat
jle
or
mov
(bad)
call
mov
pop
inc
loope
test
sar
jp
les
xchg
fdiv
loopne
cli
xor
xlat
lahf
inc
add
retf
gs
add
sub
mov
(bad)
xlat
mov
xchg
push
ins
mov
std
(bad)
outs
sub
cli
and
retf
fild
lds
ins
dec
jns
mov
out
stc
mov
cwde
loopne
push
shl
push
sub
jge
mov
fpatan
sbb
xor
jle
sub
loop
adc
mov
imul
dec
xchg
out
dec
(bad)
mov
aad
popf
xor
gs
xchg
add
jbe
dec
ror
outs
adc
push
dec
xchg
jmp
clc
pusha
in
retf
into
fucomi
gs
enter
pop
mov
stos
mov
push
xor
clc
out
nop
push
ins
inc
arpl
dec
mov
retf
call
or
sub
sbb
inc
dec
pop
lahf
in
je
leave
jle
fstp
icebp
daa
jnp
int
scas
scas
mov
jno
mov
aaa
ins
mov
or
xchg
outs
imul
fdiv
xor
jne
js
mov
fstp
pop
fidiv
mov
movs
pop
push
push
mov
(bad)
fnsave
test
je
xchg
and
jo
mov
scas
call
cli
xlat
or
fs
lahf
test
cmp
fst
das
mov
into
gs
fwait
xchg
ret
push
add
jl
cmp
cmp
and
test
ja
in
cmc
sbb
sahf
pop
inc
outs
inc
add
or
dec
adc
fs
lods
xor
cmp
lea
(bad)
pop
or
push
shl
push
jmp
in
sbb
xor
(bad)
in
cwde
jns
ror
dec
dec
ja
dec
cdq
das
fsubr
ins
hlt
pop
das
mov
xchg
in
aam
rol
aam
dec
pop
xchg
popa
add
mov
pushaw
hlt
ss
add
lods
add
ja
dec
mov
ins
movs
adc
mov
mov
je
or
mov
aas
or
push
jmp
mov
psubusw
cmp
movs
fstp
scas
lods
sbb
(bad)
bound
jmp
retf
sahf
jp
dec
push
scas
push
imul
icebp
jp
pop
repnz
push
add
cmc
int
mov
cs
mov
out
xchg
call
push
fwait
mov
cmps
cmps
mov
call
dec
fwait
mov
and
scas
(bad)
pop
mov
add
bound
mov
jg
add
out
fstp
inc
rol
mov
lea
adc
lds
cld
loope
xchg
repz
rol
stos
xchg
mov
and
cmp
lods
inc
(bad)
scas
xchg
out
das
cmp
fsub
cmps
retf
loopne
mov
jns
inc
pop
dec
mov
clc
in
xchg
test
fstp
ja
xchg
(bad)
pop
addr16
mov
push
aaa
shl
sbb
je
and
lock
inc
push
inc
ja
ret
xchg
leave
leave
jbe
mov
and
scas
ja
ins
dec
ret
add
and
push
mov
jp
jl
test
cmp
jg
fisttp
test
retf
dec
cli
or
jb
mov
pop
sti
ja
popw
dec
gs
mov
xor
enter
xlat
cmc
popa
and
test
dec
nop
mov
push
les
or
sbb
sar
mov
dec
mov
les
add
xchg
lods
inc
jne
jns
aaa
das
sbb
popa
xchg
sbb
push
int
sbb
jmp
call
cmp
pop
(bad)
repz
jmp
inc
adc
call
rol
dec
outs
std
or
(bad)
and
xchg
ret
xlat
in
fidivr
cld
jecxz
dec
dec
adc
std
lds
in
fcmovnbe
inc
in
cmc
sbb
mov
not
call
add
ins
inc
sub
push
scas
sub
sbb
or
in
mov
into
inc
cdq
ja
push
dec
add
xor
js
jb
out
das
or
pop
retf
imul
dec
sub
(bad)
or
mov
enter
dec
movsx
ins
dec
cdq
jl
cwde
test
inc
xor
xchg
test
stos
mov
icebp
pop
int3
dec
lds
pop
ret
aad
sbb
and
add
(bad)
int3
sar
push
loopne
vcmpfalse_ospd
sbb
cdq
test
cmp
push
sub
jo
and
movs
retf
and
test
cld
adc
test
mov
sbb
jp
mov
mov
jae
jg
sub
cmp
je
int
ss
mov
aaa
sar
div
mov
outs
jl
test
sti
(bad)
fisttp
mov
test
mov
out
sbb
inc
pop
xchg
ins
mov
add
adc
mov
dec
push
mov
es
sti
icebp
pop
xchg
out
jmp
push
out
pop
inc
(bad)
inc
jle
pop
pushf
inc
dec
imul
mov
or
std
jge
sub
in
adc
popa
cmp
push
inc
sub
icebp
add
pop
adc
push
movs
cmps
pushf
mov
mov
inc
retf
mov
je
jmp
mov
sub
dec
imul
mov
and
push
push
xchg
cmps
and
adc
(bad)
add
mov
or
leave
mov
outs
mov
xlat
movs
sar
xchg
jmp
(bad)
fild
xchg
pop
or
push
std
or
mov
adc
xlat
cmp
in
and
xor
sub
data16
push
jge
adc
lahf
cmp
xchg
sub
xchg
mov
jbe
imul
dec
iret
or
and
fnstcw
dec
popf
xchg
in
jmp
mov
push
loopne
test
sbb
push
inc
test
in
add
dec
stc
xchg
pop
push
dec
mov
fild
cmp
in
test
repz
and
das
lock
movs
mov
xor
xchg
test
popa
mov
or
push
inc
jns
or
(bad)
push
cmp
clc
inc
xor
sub
std
loopne
push
sub
fadd
cmp
addr16
xor
dec
adc
cdq
push
push
ds
xlat
pcmpeqd
add
jae
or
sub
lods
jmp
mov
add
repz
pop
adc
and
jp
push
push
arpl
add
leave
add
add
add
in
stos
add
add
add
(bad)
jmp
add
add
add
add
jge
add
or
add
cmp
cmp
add
add
add
add
add
add
add
add
add
add
(bad)
add
push
add
add
repnz
add
add
add
add
dec
push
add
add
add
sahf
add
inc
add
or
add
inc
dec
add
add
add
pop
add
add
sub
add
add
je
and
jbe
mov
lods
pop
jb
xor
push
adc
je
pop
mov
jae
xchg
sub
mov
scas
and
and
jmp
push
fild
js
aaa
pusha
mov
add
jbe
ja
xchg
int
mov
aaa
sbb
int3
inc
push
and
mov
cdq
xor
adc
mov
jne
mov
adc
mov
mov
aas
sub
daa
(bad)
js
sub
pop
loopne
imul
aam
mov
ja
mov
dec
(bad)
lods
mov
add
(bad)
push
imul
(bad)
test
sub
push
push
(bad)
movs
inc
scas
jle
push
mov
ds
or
cdq
inc
(bad)
imul
and
(bad)
outs
outs
mov
call
push
sbb
mov
std
sub
xor
push
ret
stos
fld
ins
inc
push
mov
(bad)
adc
adc
es
cmp
add
pop
mov
aaa
repz
cmp
sbb
add
mov
lods
hlt
or
out
push
mov
pop
fimul
dec
jmp
xor
retf
inc
xchg
xlat
xchg
cli
pusha
add
or
inc
inc
inc
fwait
jnp
aad
xor
pop
(bad)
xor
mov
lods
push
dec
dec
popa
bound
mov
xchg
sub
stos
nop
clc
das
clc
push
sub
or
xor
push
xor
in
enter
pushf
xchg
pop
push
mov
and
push
sub
sbb
in
cwde
xchg
mov
jns
xchg
cmc
jg
adc
sub
ja
xchg
popf
mov
dec
inc
sub
add
sti
test
cmps
in
leave
rol
repz
jno
or
jno
add
inc
or
mov
test
xchg
jae
cmp
aas
cmps
pop
stos
es
ja
push
(bad)
lods
push
cmp
sbb
test
test
sbb
in
pop
aad
or
scas
sbb
jno
inc
(bad)
icebp
aaa
and
cs
repz
and
mov
mov
mov
es
icebp
loopne
std
xchg
(bad)
push
popa
adc
dec
sbb
pavgb
push
add
ins
(bad)
mov
fldcw
jmp
mov
ins
(bad)
mov
or
push
lock
inc
jne
add
out
shr
shr
adc
jg
pushf
push
popf
pop
mov
icebp
inc
jmp
mov
adc
jecxz
mov
push
adc
jns
fistp
push
sub
mov
sbb
test
fcom
mov
sbb
daa
inc
rcl
lock
add
dec
and
fucomp
cmps
fcmovnbe
popa
addr16
inc
push
xor
mov
inc
sti
xchg
and
or
sbb
adc
mov
xor
neg
pop
das
je
fisttp
jmp
jns
sbb
jmp
jg
pop
out
(bad)
adc
dec
outs
retf
and
xchg
mov
cmps
and
dec
(bad)
neg
movs
and
out
cwde
ja
jmp
inc
inc
push
idiv
xlat
mov
or
cmps
out
mov
mov
or
fs
xchg
cmp
movs
pop
jne
jnp
fstp
pop
mov
je
adc
ins
sahf
inc
jnp
jae
jae
jns
xchg
lods
jg
aaa
test
pusha
scas
xchg
jae
jge
stos
out
xlat
dec
jmp
push
push
sub
in
mov
xor
repnz
jl
jae
das
dec
mov
into
ss
retf
fcmovnu
sbb
jg
shl
xchg
pop
int
pop
xor
int
or
ret
popa
sub
stc
cdq
lock
icebp
push
je
sub
movs
cdq
shr
into
aad
sub
fadd
cmp
dec
adc
jmp
mov
test
gs
fwait
shl
xor
mov
xor
(bad)
sub
addr16
and
pop
dec
std
sti
mov
std
je
push
adc
push
popf
pop
fidivr
imul
or
test
das
xlat
in
in
mov
aad
retf
xchg
jmp
xor
jl
add
xor
dec
shr
jmp
fwait
add
outs
mov
push
pop
jg
sub
cmp
mov
hlt
mov
mov
fidivr
aam
jno
cmp
test
sub
xchg
test
cli
(bad)
push
mov
je
(bad)
dec
jecxz
adc
sbb
pop
lock
mov
push
rcl
jae
lds
stc
popa
out
push
jmp
ror
int3
and
mov
adc
jp
or
test
inc
sbb
cld
fld
add
mov
jbe
test
sbb
test
pop
and
stos
push
sti
outs
sub
jle
pop
push
adc
mov
ins
pop
iret
inc
dec
sbb
pop
popf
aaa
out
rol
inc
in
mov
jae
jnp
out
pop
gs
clc
inc
repz
mov
imul
adc
xchg
mov
pop
and
fcomp
(bad)
mov
cmp
push
adc
fistp
push
add
dec
mov
add
movs
(bad)
mov
cmp
mov
(bad)
or
aas
pop
adc
out
jle
inc
mov
sub
mov
rcl
bound
test
daa
mov
push
push
dec
push
mov
clc
push
sbb
add
inc
fwait
xchg
inc
loopne
scas
and
sbb
push
neg
pop
sub
inc
mov
adc
in
repnz
jmp
movs
push
xchg
(bad)
repnz
iret
xor
jge
test
test
xor
int3
shr
pop
(bad)
cmps
xor
fwait
sub
fst
movs
jp
repz
sub
or
xor
lods
add
sbb
mov
xchg
out
(bad)
cwde
inc
pop
(bad)
aam
push
push
das
cmc
mov
push
push
test
adc
repz
xlat
mov
ret
std
jae
bnd
mov
xchg
mov
and
mov
fs
mov
mov
push
pop
sar
test
enter
pop
pop
add
leave
or
into
sub
imul
mov
or
(bad)
cs
mov
sbb
sbb
test
inc
pop
mov
(bad)
icebp
pop
movs
inc
adc
pushf
fisubr
sub
mov
fmul
ins
push
dec
xchg
cld
pop
jns
popa
mov
adc
push
sub
push
or
cwde
adc
sub
mov
cmp
jbe
lods
pop
pusha
or
ret
add
jo
aad
shr
in
inc
xor
push
mov
mov
dec
test
push
push
out
es
shr
mov
arpl
and
cmp
adc
inc
mov
add
addr16
or
mov
scas
shl
retf
cmp
cmp
mov
cmp
lea
jp
(bad)
js
xor
add
pop
mov
nop
jle
stos
or
inc
out
repnz
int
mov
stc
cwde
and
clc
mov
sbb
jno
adc
dec
push
jecxz
mov
cmp
repz
mov
pop
aam
xchg
jmp
inc
mov
mov
enter
rcl
in
add
in
xchg
mov
fwait
push
ret
push
loop
sbb
pusha
in
movs
jo
jmp
or
inc
out
inc
xchg
rcl
sub
mov
ins
dec
outs
and
movq
jge
popf
mov
mov
(bad)
rcl
add
sub
or
sbb
out
push
shl
inc
enter
jns
sub
xchg
add
xor
pop
mov
or
pusha
pushf
adc
sti
(bad)
int
mov
adc
imul
ret
and
jp
lea
loope
rol
das
mov
dec
mov
inc
xor
les
(bad)
lods
test
cmp
mov
(bad)
cs
imul
xor
ja
cmps
mov
dec
sub
mov
in
out
(bad)
or
sbb
ret
adc
hlt
jmp
inc
in
shr
(bad)
xchg
out
mov
out
or
bound
call
ins
imul
leave
xchg
xor
lea
mov
ror
test
shl
adc
shr
xor
ins
lods
push
test
jmp
outs
mov
call
pop
pop
mov
pop
or
inc
dec
out
dec
aad
push
imul
(bad)
mov
sar
repnz
sub
sub
adc
and
mov
xchg
mov
fild
cmps
jne
test
sbb
ret
or
cli
mov
mov
dec
lea
cwde
icebp
scas
imul
push
loopne
xor
inc
int3
loope
add
lahf
push
pop
push
push
shl
iret
popa
dec
imul
xor
adc
loop
inc
adc
add
jnp
or
out
push
adc
xor
inc
xor
adc
xor
std
jmp
mov
dec
mov
or
retf
xor
jmp
mov
and
bound
xchg
sbb
xchg
jno
xor
and
mov
jmp
mov
jne
shr
and
pop
push
jo
jne
je
cmp
out
xchg
inc
mov
pop
test
jnp
sbb
xchg
jnp
push
mov
mov
test
xor
mov
add
popf
stc
(bad)
(bad)
ds
mov
in
ror
mov
cmp
test
mov
pop
sub
pop
xor
inc
out
pop
mov
stos
sti
cli
jbe
ret
xchg
call
pop
push
pop
push
popf
scas
ins
sbb
or
add
dec
movs
or
sbb
lock
(bad)
aaa
in
cdq
lods
sbb
shl
ds
call
fcomp
rcr
lahf
xchg
sbb
or
pop
dec
push
jno
(bad)
pop
dec
stos
pop
inc
xchg
cs
mov
call
rcr
mov
lods
lods
or
pop
adc
sbb
test
add
repnz
xor
rcr
and
test
cmp
cmp
add
add
add
add
add
in
add
add
mov
add
add
add
add
add
add
add
add
add
sbb
jmp
add
add
add
jae
add
add
add
add
sub
rol
add
add
add
add
add
xor
add
in
add
aam
out
add
add
add
add
fiadd
add
add
add
add
fsubr
lahf
add
add
inc
add
add
add
add
add
add
mov
jg
add
push
add
sbb
add
imul
add
add
add
inc
test
rol
add
add
sbb
add
add
add
bound
add
add
xchg
add
pop
cmp
ins
sbb
popa
mov
loopne
out
stos
mov
and
dec
lock
mul
fwait
lock
das
(bad)
arpl
stos
push
mov
xor
mov
pusha
div
fstp
push
fld
adc
mov
je
js
jne
cmp
mov
call
adc
xchg
call
jge
jne
div
fisub
xor
retf
jmp
out
enter
push
sbb
(bad)
fwait
std
out
lods
jg
gs
jecxz
and
push
mov
scas
aas
mov
mov
cmps
push
and
push
dec
adc
(bad)
and
or
mov
jo
mov
mov
in
xor
pop
cmovg
enter
fucomip
outs
or
(bad)
jl
jp
jp
das
frstor
sbb
outs
iret
movs
xlat
repnz
enter
mov
imul
out
push
loopne
mov
cmp
xor
es
push
push
push
or
pop
mov
mov
mov
fidiv
push
xor
stos
xchg
scas
jle
dec
not
pop
mov
dec
inc
popf
cmp
jecxz
shl
sbb
xor
xor
push
push
inc
(bad)
cmp
pusha
jle
call
lahf
loope
and
mov
push
dec
push
jb
and
xchg
or
(bad)
mov
xchg
push
in
jno
js
stos
ins
add
pushf
loop
popa
not
movs
test
leave
fsub
pop
mov
dec
sub
movs
fsub
sub
into
mov
and
push
cmps
jo
add
sahf
rcr
cmp
inc
mov
sbb
or
popf
sub
jb
cmc
ds
pop
es
aad
call
out
ret
pop
mov
push
out
es
xor
outs
xchg
sti
in
lahf
retf
mov
in
jno
iret
pop
cld
call
movs
aas
xor
mov
mov
jle
mov
sbb
or
cmp
and
mov
in
push
pop
in
pop
xchg
mov
mov
dec
out
fstp
push
add
sbb
push
lahf
push
shl
xor
adc
lahf
xor
cmp
js
pop
aad
mov
lods
out
aam
daa
cmp
out
mov
push
dec
or
test
mov
cmp
mov
dec
sub
fnclex
push
xchg
shl
push
cmp
mov
(bad)
in
mov
or
jl
test
popa
fnstcw
mov
iret
in
or
ja
add
lods
fwait
out
das
movs
fdiv
pop
outs
adc
jo
lahf
ins
movs
jno
inc
push
popf
or
or
mov
jmp
out
ins
jecxz
and
dec
addr16
or
xor
lea
cli
stc
mov
out
jmp
std
xchg
mov
add
enter
pop
cmp
jmp
ins
xchg
mov
mov
or
in
fdiv
jecxz
hlt
scas
cmp
cmp
dec
addr16
jnp
and
popf
dec
and
test
pop
pop
mov
test
lods
call
mov
je
mov
sbb
sub
mov
add
lods
xchg
in
xchg
(bad)
lods
fistp
and
mov
jl
adc
mov
or
inc
inc
or
or
cmp
fs
and
aas
je
push
dec
inc
jmp
mov
neg
fmul
outs
inc
push
sbb
add
stos
rol
lds
push
xchg
scas
cmp
xor
test
inc
xchg
mov
mov
aaa
xor
inc
int3
cwde
push
repnz
test
int3
enter
push
cdq
sub
xchg
inc
jb
imul
out
cld
xchg
jecxz
dec
xlat
into
(bad)
jns
movs
pusha
test
icebp
or
out
fwait
enter
lds
add
xchg
or
mov
sbb
arpl
mov
push
jo
ds
jge
fstp
push
add
fst
dec
or
jns
pop
push
retf
sub
lods
pop
popa
lds
push
mov
jge
add
pusha
jl
cmp
dec
outs
int
mov
loop
in
add
inc
cmp
cmps
cwde
ret
sahf
ficomp
scas
mov
pop
out
das
or
push
xchg
jno
adc
and
xchg
dec
add
aad
xchg
mov
add
pop
movs
cmp
loopne
cmc
xchg
mov
lea
cli
jmp
das
pushf
add
fiadd
xchg
and
bound
aaa
loopne
js
sub
xor
rcr
xor
or
scas
(bad)
xchg
and
call
fst
fwait
addr16
push
fisub
outs
sub
aas
add
mov
mov
loopne
fwait
outs
repz
fdiv
lahf
shl
mov
sbb
test
test
jle
xchg
dec
popf
adc
mov
jo
imul
lahf
mov
add
mov
fidivr
push
jecxz
jle
jmp
(bad)
xchg
mov
push
pop
call
mov
ins
cmc
(bad)
push
pop
mov
inc
add
loop
mov
and
cmps
loop
xchg
aad
cs
(bad)
adc
sbb
(bad)
pop
lods
imul
inc
xchg
jns
ins
xchg
lods
test
sub
cmp
adc
push
inc
xor
mov
shl
adc
xlat
push
sbb
cmp
das
inc
gs
pop
mov
mov
cmp
lds
add
test
sub
push
or
jmp
fisttp
je
(bad)
xor
xor
out
ud0
push
add
loope
in
mov
inc
sbb
pop
jb
test
(bad)
adc
pop
xor
mov
sti
inc
outs
es
lock
scas
ret
pop
rcr
add
inc
outs
jl
or
cmp
pop
out
cld
sbb
mov
ja
loop
sbb
into
mov
xchg
(bad)
loope
test
fimul
repnz
push
jp
mov
gs
mov
pop
fs
mov
mov
and
rcr
loope
popf
mov
aaa
dec
dec
lock
jb
inc
pop
fwait
xchg
adc
xchg
xchg
cmc
mov
(bad)
fnsave
loope
int3
inc
push
pop
add
xor
and
loop
call
enter
jno
mov
mov
push
and
jmp
inc
in
hlt
std
fnsave
std
add
or
js
enter
xlat
ins
xchg
inc
cmps
cmp
cwde
add
outs
xor
push
push
out
mov
gs
jle
data16
cwde
fnstenv
jp
push
test
add
mov
dec
mov
shr
cmp
es
adc
add
sar
mov
int3
jg
push
fcom
popa
dec
clc
addr16
pop
mov
cmp
inc
popa
mov
sbb
xchg
jmp
por
xchg
push
or
jl
push
(bad)
cs
imul
push
jne
mov
(bad)
out
mov
jnp
sub
ficomp
imul
push
repnz
pop
(bad)
fcom
cli
loop
sti
sub
and
adc
push
dec
add
pop
cdq
call
mov
inc
dec
cmp
jbe
and
lahf
sub
adc
jnp
test
repnz
or
enter
pop
test
and
adc
(bad)
imul
and
push
inc
das
and
add
push
sub
fiadd
(bad)
ret
das
inc
jae
jno
jne
or
js
push
sub
test
push
inc
add
(bad)
dec
jge
mov
in
mov
outs
ss
ficomp
pop
cli
mov
inc
mov
xchg
dec
mov
or
sub
call
stos
inc
sbb
mov
(bad)
adc
xor
push
lea
lods
cs
pop
inc
leave
mul
mov
int3
pop
into
mov
push
mov
hlt
inc
in
jne
sti
or
inc
mov
xchg
mov
sub
xchg
stc
or
aaa
add
stc
rcr
jl
mov
xchg
adc
jb
jb
mov
movs
dec
(bad)
and
mov
dec
ret
inc
push
dec
test
dec
mov
push
packssdw
adc
cmp
test
jmp
iret
jmp
bound
xor
es
mov
iret
rcr
int3
lahf
sub
les
ins
jmp
loopne
push
mov
ss
sub
and
add
je
jns
das
sbb
add
ret
je
das
xchg
aas
lahf
fs
mov
stc
enter
xchg
push
lock
(bad)
stc
push
rcr
lods
cmp
mov
inc
in
ja
(bad)
call
cdq
jno
mov
push
or
ss
cmp
mov
or
shl
mov
pop
mov
mov
out
test
in
jo
dec
cld
mov
cmp
inc
popa
mov
xor
pop
or
push
mov
mov
call
(bad)
cmc
push
or
mov
je
push
or
std
jo
ss
mov
or
sub
fdivr
jns
adc
push
btc
cmp
movs
xor
or
in
not
stos
rcr
push
xchg
test
inc
push
ins
movs
xor
sar
or
push
inc
imul
add
xor
xor
out
mov
mov
mov
aad
inc
jbe
call
push
add
xlat
inc
mov
call
scas
scas
mov
arpl
jns
jb
xchg
xlat
shl
ret
ds
pop
mov
and
clc
mov
shr
push
cmp
in
xor
jnp
aaa
adc
xchg
and
push
loop
xor
mov
lea
cmp
pop
pop
jo
push
mov
inc
sub
call
retf
enter
pop
dec
inc
movs
vrcpps
push
loop
inc
add
add
nop
test
fld
dec
inc
cmc
inc
mov
(bad)
lods
jmp
mov
or
enter
or
rol
repnz
call
dec
xor
cmp
fisttp
cmp
lock
adc
sbb
dec
fwait
lds
add
add
add
cmc
add
fiadd
test
add
push
add
add
add
jmp
add
loop
add
cli
add
add
add
mov
jnp
add
add
add
add
add
add
sar
inc
add
add
add
add
cmc
repz
add
add
add
or
add
add
add
add
add
add
jne
push
add
add
add
add
add
xor
add
add
sbb
outs
cwde
add
add
add
add
add
add
add
test
add
lds
cdq
jle
add
add
add
mov
add
add
add
pushf
add
add
add
add
add
add
add
add
add
add
add
and
xor
xor
inc
rcl
ins
in
push
dec
xor
jne
sahf
std
xlat
out
xor
xor
daa
scas
arpl
add
push
add
or
mov
movs
fild
cmp
scas
jge
aaa
push
xchg
jae
inc
aas
movs
jg
jae
mov
inc
pop
iret
jmp
lods
ins
test
outs
mov
cmp
add
inc
mov
push
test
loopne
ja
xor
pop
mov
jno
mov
push
sar
aas
ficom
ss
or
in
or
cmc
icebp
aas
dec
stc
lds
or
push
test
retf
mov
data16
cmp
xchg
jae
shr
and
aas
push
iret
push
leave
jno
sbb
out
inc
inc
and
jl
pop
test
push
mov
arpl
jmp
imul
shl
add
xor
sub
xchg
in
popa
mov
ror
mov
mov
test
out
loopne
inc
or
mov
cmps
mov
sbb
ret
aam
clc
loop
xchg
xor
inc
sub
sub
sbb
fst
add
sub
mov
sahf
repnz
pop
pop
or
or
call
jmp
popa
mov
dec
inc
add
or
ret
fwait
cmp
pop
out
cmps
and
aam
add
adc
adc
ja
int3
icebp
in
cmp
gs
adc
loope
dec
adc
pop
fisub
int
mov
or
imul
add
mov
pushf
arpl
cld
repnz
dec
push
mov
cmp
xchg
or
mov
push
add
into
jecxz
ret
xchg
cwde
jl
pop
cmp
nop
push
data16
fs
mov
xor
pusha
sub
jmp
add
(bad)
retf
xchg
scas
sahf
data16
jo
hlt
movs
mov
arpl
loop
push
mov
fmul
jp
or
sub
aam
in
(bad)
jnp
pushf
rcr
mov
sub
mov
ds
mov
push
pop
cdq
pop
fdivr
mov
inc
(bad)
shl
stc
xchg
(bad)
aad
dec
mov
std
lahf
jle
xor
cmp
sub
fld
push
push
jae
or
mov
add
std
scas
sbb
xor
(bad)
rol
shr
or
or
(bad)
out
stos
imul
lods
imul
cwde
(bad)
sub
pop
sub
push
ss
and
xor
push
dec
fmul
fiadd
shl
hlt
fwait
or
mov
mov
inc
fst
rol
movs
stc
jl
sub
ds
sahf
out
or
lea
pop
cwde
fisubr
je
xor
inc
pusha
mov
cmp
or
add
pop
test
mov
inc
sbb
sub
mov
repz
stos
out
outs
retf
(bad)
mov
out
icebp
pop
out
adc
bound
and
in
or
shl
or
push
cwde
mov
dec
pop
cli
xor
mov
inc
xor
arpl
jge
shl
mov
mov
pop
push
xor
adc
mov
lahf
pop
rol
jnp
pop
push
cli
gs
(bad)
adc
sub
inc
cmp
cli
es
jp
dec
rol
test
lea
iret
xor
popf
push
dec
ja
icebp
push
clc
add
ror
dec
inc
push
sbb
sti
daa
jp
cmp
mov
mov
scas
inc
mov
xchg
pop
sbb
es
retf
xchg
int3
outs
mov
xchg
aad
aam
retf
test
mov
gs
add
and
xchg
mov
inc
jmp
and
test
xor
ins
in
out
jno
xor
xor
mov
xor
(bad)
xlat
int
xor
or
push
cmps
cmps
xchg
movs
unpcklps
sar
test
mov
inc
and
mov
add
sub
push
jns
mov
sub
sub
test
inc
sbb
push
(bad)
push
sbb
pop
inc
pop
enter
inc
hlt
or
les
push
pop
and
test
lds
ins
jo
push
sahf
call
adc
jle
cmp
push
dec
adc
mov
mov
hlt
out
xor
adc
dec
dec
outs
ins
fdivp
mov
sub
cwde
sub
mov
push
mov
cwde
outs
jle
nop
aaa
gs
or
lahf
jae
inc
inc
push
sahf
out
bound
(bad)
scas
dec
movs
push
jb
pop
mov
je
mov
push
int
sub
mov
pop
dec
mov
inc
xlat
jmp
test
inc
xchg
nop
mov
not
push
into
aas
sbb
pop
or
xchg
rol
test
add
fidiv
dec
cmps
and
int3
loop
leave
je
xchg
fnsave
enter
add
mov
mov
mov
jno
outs
jnp
retf
aam
push
aaa
mov
xchg
mov
jecxz
gs
or
das
cmp
mov
xchg
call
test
xor
jg
mov
push
std
idiv
jne
sahf
inc
mov
push
aad
ds
rol
jae
std
and
not
and
xor
test
add
cmp
mov
(bad)
push
mov
and
outs
test
outs
fidiv
(bad)
jecxz
loope
outs
repz
arpl
test
call
inc
test
xor
repnz
adc
pop
inc
dec
mov
add
les
push
rol
dec
cdq
loopne
mov
adc
sti
add
adc
clc
out
in
cmc
ret
out
out
adc
mov
test
shr
xchg
into
sti
fs
sbb
aaa
xchg
add
jp
(bad)
pop
gs
fiadd
cmps
and
fmul
xor
inc
aaa
stos
mov
cmp
mov
mov
or
ficom
nop
mov
pop
test
xchg
cmp
and
pusha
movs
mov
mov
sbb
xchg
adc
jmp
cld
leave
jnp
adc
cmp
retf
ffreep
into
fistp
cmps
scas
inc
xlat
jmp
ret
pop
test
and
lods
es
shr
xchg
push
fs
cmp
jmp
out
sbb
out
pop
int3
adc
cmps
pop
dec
or
fisubr
xor
mov
aaa
cmps
mov
fimul
movs
in
gs
mov
outs
and
mov
jle
xchg
rcr
out
jae
addr16
jmp
cmp
xchg
mov
xchg
ja
popa
xor
mov
and
and
jg
retf
scas
and
jmp
or
jp
popf
xchg
and
push
sbb
add
shr
or
dec
hlt
jecxz
add
sar
pop
mov
sub
adc
push
push
es
fscale
pop
in
jmp
push
cmc
inc
sqrtps
in
sub
cmp
dec
adc
pop
stos
ins
add
mov
stos
jmp
bound
xchg
cld
or
or
xchg
scas
cli
push
(bad)
leave
pop
loop
mov
cmp
(bad)
mov
add
xchg
ds
push
cmp
pop
jnp
jmp
or
jl
lahf
or
aad
les
jp
cmp
cmps
aad
mov
sbb
dec
sbb
jbe
inc
rcl
test
rcr
jle
xor
xchg
mov
das
add
pop
mov
jecxz
pop
jmp
adc
mov
into
mov
adc
pop
mov
adc
mov
jbe
mov
and
lahf
in
cmp
retf
push
ss
cmp
popf
mov
cmp
push
je
xchg
jno
mov
mov
push
aad
jmp
retf
cmps
mov
aad
ins
add
cld
sub
sub
das
test
lea
out
adc
cmc
iret
xor
movs
(bad)
je
cmp
adc
adc
ja
cmps
icebp
pop
shr
mov
ret
push
push
lods
and
sbb
xchg
int
cmp
and
(bad)
adc
retf
xchg
outs
and
arpl
stc
cmp
xchg
movs
ror
push
mov
repnz
inc
mov
push
push
ror
shl
scas
mov
add
pop
mov
sub
(bad)
mov
xor
pop
xchg
jmp
xlat
lods
or
xchg
sbb
and
inc
repz
stc
movs
bound
jo
cmp
push
sub
mov
imul
mov
dec
mov
xchg
lahf
sbb
test
sbb
mov
xchg
stc
or
inc
bound
dec
mov
inc
mov
inc
inc
mov
mov
adc
sbb
repnz
mov
rcl
ret
test
and
stc
sbb
ror
rcl
mov
cmp
cmc
mov
sub
movs
into
repz
or
pop
sub
mov
inc
aad
ficomp
fisubr
ret
(bad)
outs
or
inc
test
mov
and
(bad)
sbb
popf
and
aaa
shl
popa
xchg
repz
data16
into
inc
sub
arpl
or
ja
mov
sub
(bad)
add
dec
and
cmp
ss
mov
jae
inc
in
jl
dec
xor
out
sbb
retf
sbb
outs
add
call
pop
jne
sub
jle
or
fist
cmp
mov
cmp
pextrw
jl
mov
inc
xor
aas
mov
rol
jecxz
arpl
inc
xor
pop
retf
pop
pusha
aaa
lahf
int3
add
test
mov
retf
frstor
inc
nop
mov
cmp
mov
jp
adc
mov
and
mov
lea
sahf
mov
jle
mov
push
jl
icebp
push
lds
inc
sahf
pushf
fdivrp
mov
in
xor
mov
xchg
call
sub
rcr
dec
mov
sub
jne
jnp
shl
stos
add
mov
call
xor
mov
jle
stos
mov
imul
add
add
jecxz
add
add
add
sti
add
add
add
add
pop
pop
add
add
add
xchg
add
add
add
add
add
loop
add
add
pop
add
add
add
add
add
add
add
sub
in
add
out
add
cmps
sub
jg
xor
add
ret
adc
add
add
add
add
mov
add
test
add
inc
add
add
add
add
retf
add
xchg
add
push
pop
add
add
add
mov
add
xchg
add
imul
aaa
out
xor
add
add
add
add
add
add
add
add
add
add
bound
mov
lods
fldcw
(bad)
js
pop
jb
adc
pop
hlt
xlat
sbb
shl
ret
pop
push
gs
sub
dec
cmp
xchg
(bad)
ret
push
ret
cmp
out
adc
push
jl
or
push
test
mov
pop
pop
out
(bad)
ds
(bad)
jle
mov
or
into
arpl
icebp
test
jmp
cmp
jg
fimul
mov
(bad)
sub
outs
dec
xchg
jbe
jmp
popa
pop
add
lods
inc
xchg
outs
push
jge
sub
pop
sbb
out
mov
int
push
ds
adc
loop
jbe
dec
shl
or
pop
movs
test
ins
add
cmp
fnstenv
or
push
push
sbb
outs
call
leave
out
xor
inc
les
imul
repnz
mov
(bad)
retf
mov
retf
test
ss
push
mov
retf
xor
jae
int
(bad)
(bad)
and
js
fiadd
rol
cld
inc
stos
mov
out
cmp
or
sbb
sub
xchg
mov
jmp
cld
lock
daa
inc
mov
sbb
adc
shr
add
dec
jle
(bad)
xlat
js
repnz
das
call
mov
jp
sar
and
test
scas
push
add
xor
out
in
cld
fs
xchg
and
jno
sbb
ins
retf
ds
mov
stos
pushf
neg
dec
mov
push
dec
xor
push
out
scas
ja
dec
pop
das
(bad)
fnop
or
retf
sbb
out
(bad)
cmps
mov
or
ds
pop
mov
in
sysenter
dec
ret
ds
lds
cmp
mov
dec
ss
sbb
idiv
mov
arpl
lea
fimul
and
xchg
out
stos
jmp
mov
mov
sar
inc
sbb
adc
into
mov
pop
cmps
pop
and
leave
fiadd
cwde
push
inc
jmp
inc
pop
aaa
pop
ins
ins
test
cmp
and
aaa
push
sbb
jo
xchg
retf
jle
sub
pop
dec
pop
iret
mul
cmp
nop
stos
push
addr16
rcr
push
data16
hlt
sub
add
shr
jmp
cmp
and
push
and
sub
data16
in
push
pop
pop
jne
mov
jecxz
sbb
push
lds
mov
int3
data16
xchg
test
popf
pop
dec
in
nop
fwait
dec
lock
ins
ret
xor
mov
icebp
add
scas
ds
std
out
sar
push
push
or
pusha
pop
add
shl
pop
(bad)
aas
loopne
xchg
fs
call
lahf
add
jmp
bound
cs
in
dec
jne
cmp
test
push
popf
xor
mov
xlat
sub
push
push
mov
into
adc
cmp
shl
mov
jge
mov
into
mov
sub
mov
int3
ja
xchg
mov
and
sbb
sar
outs
mov
mov
mov
xchg
xor
cwde
mov
pop
sbb
cmp
adc
inc
cmc
cmp
push
imul
daa
scas
rcr
sbb
xchg
daa
jecxz
push
push
xchg
lods
enter
mov
leave
mov
rol
inc
out
retf
shl
stc
jp
xchg
arpl
cmp
inc
fld
test
sahf
xor
aas
mov
xor
xor
sub
data16
sahf
cmp
dec
stos
cmp
pop
fnsave
and
rol
lea
sar
movs
popa
test
and
xchg
outs
xchg
(bad)
xor
inc
pop
(bad)
stos
add
xchg
pop
pop
push
push
cli
cmp
jmp
adc
pop
inc
popf
mov
stos
les
add
(bad)
sbb
enter
jnp
inc
push
and
stos
int
aam
mov
aaa
mov
icebp
(bad)
cmp
xchg
pop
jmp
lods
movs
call
das
xchg
fistp
pop
cmp
fisub
and
mov
mov
daa
mov
push
pop
jmp
sub
frstor
call
lock
imul
jae
test
popf
pop
div
adc
xchg
dec
add
call
xor
xchg
das
dec
js
xchg
pop
mov
adc
xor
aaa
pop
mov
mov
lods
mov
cmps
movs
xor
clc
jnp
dec
std
xlat
in
or
pop
mov
push
inc
pushf
mov
push
lods
adc
pop
fwait
ror
adc
push
adc
leave
cmc
cmp
mov
sub
jle
retf
sub
xchg
ret
outs
mov
(bad)
sub
xchg
dec
mov
push
or
push
adc
push
cmps
les
cdq
push
pop
add
mov
sti
mov
xor
or
ins
push
call
xchg
add
loop
rcl
cmps
cmps
repz
mov
sbb
sbb
sahf
push
aaa
sbb
xchg
jecxz
cmp
adc
cmp
je
neg
xchg
gs
mov
stc
cmp
shr
push
rcl
dec
(bad)
loopne
mov
imul
arpl
xchg
clc
call
mov
in
cwde
xchg
sub
pusha
ins
add
(bad)
std
stos
jo
shld
or
or
fs
mov
sub
mov
pop
(bad)
jp
ins
inc
pop
mov
sahf
adc
pusha
xchg
mov
inc
lahf
clc
ror
push
add
jp
pop
call
dec
aaa
test
stc
std
out
sti
scas
stos
retf
sbb
sub
in
push
lods
push
mov
cwde
fdiv
int3
mov
retf
retf
(bad)
fadd
retf
dec
cmps
push
addr16
mov
imul
retf
mov
int
push
cmp
dec
push
adc
ins
push
inc
sar
ds
xchg
mov
scas
or
int
(bad)
(bad)
add
leave
inc
xchg
add
cs
icebp
out
xchg
push
bound
enter
retf
ins
or
dec
retf
and
adc
xchg
jo
aas
rcl
fstp
add
jecxz
sub
mov
cmp
xor
test
mov
inc
xchg
(bad)
fst
add
cmps
stos
and
and
xchg
rcr
rcr
outs
(bad)
movs
push
addr16
xor
push
xchg
sub
fwait
inc
in
scas
xchg
sub
rcl
movs
ss
mov
inc
jp
rol
test
jne
cmp
sbb
cmc
ja
bound
dec
outs
pop
into
or
jns
and
inc
jle
mov
xchg
mov
lods
lods
add
loopne
and
inc
add
js
xchg
aas
pop
cli
mov
outs
jecxz
jns
fild
cmp
pavgb
int
or
in
aam
cmp
xchg
sbb
lods
xchg
call
sub
dec
add
pop
jae
mov
jp
retf
rol
add
(bad)
cmp
cmp
mov
cmp
mov
adc
jecxz
ss
fsubr
jmp
sbb
into
xor
jp
add
das
ret
test
and
or
sub
add
mov
pop
sub
mov
jle
push
pop
daa
pop
xlat
xchg
inc
inc
shl
ror
cdq
cwde
rol
jns
pop
call
xchg
xchg
test
mov
shl
fcmovnb
imul
sbb
push
pushf
or
jae
into
stc
movs
cld
inc
bound
mov
xchg
repnz
int3
or
mov
js
add
and
sbb
lea
push
scas
sub
mov
(bad)
and
mov
dec
aam
addr16
das
mov
xchg
movs
inc
dec
ffreep
std
cmps
mov
dec
push
and
pop
(bad)
out
push
push
leave
mov
out
pop
push
pop
mul
dec
lea
mov
xor
adc
pop
add
mov
xor
adc
or
inc
adc
outs
loop
sub
cli
sti
push
aad
push
push
loope
lods
pop
sbb
pop
pop
fstp
xchg
popf
rcr
in
mov
out
and
add
pop
mov
inc
and
imul
push
pop
add
push
shl
icebp
cmp
adc
std
mov
push
shl
pop
mov
fldl2e
push
inc
js
adc
fsubr
pop
mov
retf
stos
xchg
pop
sub
imul
push
xchg
sar
inc
fld
cwde
ins
call
pop
and
push
inc
dec
div
xchg
jo
lods
test
ins
add
and
xor
fldcw
les
jmp
lock
xchg
push
sub
int
sub
cmc
mov
dec
mov
pop
push
lods
inc
addr16
dec
in
jecxz
jo
sbb
pop
push
js
xchg
ja
in
sbb
out
retf
and
xor
ret
jl
push
cmp
dec
inc
idiv
fdiv
mov
cwde
inc
(bad)
int
in
jge
add
imul
xor
sub
clc
ss
pop
push
(bad)
ja
lea
and
loope
into
pop
fdivr
sub
pop
sbb
push
mov
pop
sbb
jnp
hlt
mov
test
jne
addr16
sub
pop
lahf
loop
mov
shl
mov
imul
call
sub
fdivr
inc
faddp
sbb
mov
jmp
into
adc
iret
rol
lds
in
xor
hlt
mov
out
cs
fwait
int3
xlat
xor
leave
(bad)
add
(bad)
cmp
lods
cmp
sbb
ins
pop
cdq
cmp
retf
pop
retf
les
sub
and
pop
imul
ds
push
hlt
push
in
dec
mov
inc
fidivr
int3
jmp
mov
lea
or
jns
sahf
jb
add
mov
push
xor
and
xchg
test
cmp
inc
jae
dec
push
mov
scas
xor
mov
ins
sbb
dec
ins
stc
lock
jne
xor
adc
or
xor
pop
nop
xchg
or
into
push
call
pop
mov
gs
sbb
mov
jmp
popf
pop
xchg
cwde
mov
mov
sti
movs
cld
push
adc
mov
push
repz
fbld
test
(bad)
dec
and
test
mov
inc
lds
gs
int
add
add
add
add
dec
add
add
add
add
call
add
add
add
pop
add
add
add
add
xchg
add
fld
add
add
mov
add
add
or
cmp
add
add
add
add
add
add
add
adc
add
add
dec
add
add
add
add
add
add
add
retf
add
mov
retf
add
add
add
add
mov
xchg
out
add
jl
stc
add
add
lds
add
test
add
add
add
add
add
add
add
add
add
add
add
add
add
mov
add
add
add
stos
and
ss
dec
leave
cmp
cmp
ror
add
hlt
fdivr
sbb
fsub
outs
iret
add
ret
jle
mov
pop
dec
fisttp
stos
scas
xchg
icebp
cld
outs
je
test
push
lahf
shr
movs
sbb
sub
mov
pop
pop
pop
dec
scas
ror
xor
jo
icebp
xor
fld
xchg
or
mov
outs
cwde
and
cs
inc
jns
cmc
xor
enter
ss
mov
push
push
dec
js
xchg
add
leave
mov
xor
and
xor
int
cld
pop
int
ror
add
or
clc
dec
cmps
xchg
pop
cmc
out
mov
adc
mov
rcl
adc
add
sub
mov
push
popf
frstor
pushf
pop
cs
int
ja
ret
mov
pop
cmp
pop
jnp
aaa
movs
cli
mov
sbb
cmp
or
lea
ret
ret
cmc
add
xchg
bound
jmp
idiv
sub
loop
add
mov
int3
pop
jae
cmp
xlat
shl
sbb
lods
push
mov
sub
aad
add
mov
pop
cld
fistp
pop
dec
jns
push
mov
cmps
jns
aam
inc
mov
movs
(bad)
jae
int3
push
mov
sub
fadd
sti
test
xchg
inc
xchg
push
in
ins
(bad)
cmps
(bad)
xchg
mov
add
push
lock
repnz
jg
sbb
push
cld
mov
data16
jg
aam
iret
stc
ret
jb
inc
shr
mov
mov
cmp
ror
mov
add
loop
mov
loope
stos
mov
hlt
xchg
mov
xchg
dec
mov
and
in
cmps
sti
push
sahf
mov
jne
sub
shl
sbb
mov
int3
fwait
je
jmp
mov
shl
addr16
mov
dec
cld
jnp
ret
pop
in
js
loopne
jl
pusha
les
in
mov
mov
mov
scas
or
mov
ins
or
nop
pop
in
jb
mov
or
push
add
loopne
pop
inc
dec
fwait
out
cmp
cdq
lahf
adc
test
mov
cwde
sbb
int
or
fs
inc
gs
jl
add
call
stos
and
dec
mov
add
cmps
inc
pusha
xor
in
stc
push
arpl
stos
mov
sbb
iret
push
movs
jns
aad
sbb
ins
pop
in
fcomp
out
es
adc
adc
mov
cli
lods
stc
stc
inc
rol
cmp
jbe
or
add
in
test
xor
mov
leave
push
push
mov
push
jl
call
cmp
sub
or
jmp
push
je
mov
std
and
jle
fwait
inc
sub
enter
rcl
xchg
xchg
nop
call
dec
(bad)
loope
mov
cmp
inc
jl
cmp
inc
xchg
and
and
adc
pushf
dec
jmp
inc
aaa
(bad)
cmp
cdq
sti
int
pop
push
test
xchg
and
popa
dec
inc
(bad)
pop
sub
outs
out
adc
pusha
aam
clc
inc
mov
repnz
into
and
mov
fxch
lea
push
pop
dec
es
dec
retf
scas
pop
test
mov
loope
or
push
pop
jmp
or
add
dec
mov
test
outs
(bad)
iret
in
dec
fcomp
js
cmp
mov
ds
xor
push
pusha
fmul
sub
xchg
dec
pop
cwde
mov
jb
pop
sbb
cmp
push
sbb
dec
jp
or
and
iret
and
inc
pop
rcl
jbe
pop
sbb
jnp
ret
je
dec
mov
mov
jmp
xor
and
je
dec
in
mov
mov
add
push
cwde
sbb
fild
divps
dec
inc
sbb
mov
lea
imul
sub
jecxz
inc
hlt
cmp
div
fldenv
sbb
mov
jmp
xor
(bad)
std
and
xor
cmp
xor
or
scas
(bad)
cmp
mov
cwde
cmp
dec
push
sbb
ins
push
ds
xor
push
mov
mov
cmc
cmp
leave
push
fdiv
add
mov
adc
test
or
ret
cdq
sub
add
xchg
das
push
jg
cwde
adc
mov
xchg
retf
(bad)
iret
sbb
inc
stc
cld
push
(bad)
mov
jl
dec
mov
xchg
aas
rcr
jae
and
das
push
(bad)
ja
mov
sti
cmp
pusha
ret
jb
sbb
movs
pop
sbb
mov
lea
jbe
outs
xor
mov
addr16
into
mov
push
add
out
iret
push
inc
pop
arpl
or
jb
loope
fst
aas
jb
inc
ins
cmp
fstp
repz
add
mov
packuswb
pop
int
mov
lods
xchg
repz
scas
pop
inc
loop
mov
mov
stc
xchg
mov
outs
sub
push
cwde
dec
cmc
sub
push
and
lock
mov
loope
(bad)
int3
out
jge
mov
shl
or
js
mov
adc
mov
xchg
cmp
sbb
icebp
outs
mov
and
mov
xor
cdq
dec
cmp
ret
cmp
and
cdq
fcomi
add
sbb
push
or
inc
inc
ret
cmp
dec
adc
cmps
stos
add
dec
or
outs
fild
inc
dec
pop
jmp
add
pop
add
sti
inc
dec
adc
scas
sbb
ret
dec
mov
retf
add
mov
inc
push
dec
pop
jns
fistp
stos
test
out
movs
xlat
ret
adc
mov
add
aaa
mov
sbb
inc
hlt
ffreep
ret
in
mov
sbb
test
bound
ins
mov
adc
gs
or
sub
jae
push
xor
leave
mov
out
call
jnp
sar
pop
xchg
cli
loop
loope
xchg
popf
mov
mov
call
add
or
sbb
inc
dec
in
xor
xor
add
and
sub
xor
cwde
ds
cli
shl
daa
fs
push
rol
mov
cmp
arpl
pusha
mov
movs
or
fld
jb
enter
xchg
sub
in
add
pop
inc
fnstcw
cmp
xchg
das
test
fcomp
outs
jg
xchg
fidivr
(bad)
hlt
scas
push
pop
lods
sbb
xchg
jg
retf
pop
pop
cwde
sbb
sub
xchg
dec
add
or
ins
pusha
(bad)
pop
cmp
cli
cmp
push
fstp
jne
into
xchg
xor
shl
dec
jmp
imul
fidiv
call
out
jp
mov
pop
enter
xor
inc
and
enter
rcr
pusha
call
pop
mov
rcr
je
fwait
add
push
jb
pop
(bad)
jae
es
sti
mov
fst
rcr
frstor
or
sti
xlat
push
in
pusha
mov
and
mov
pop
mov
fsubr
fistp
pop
mov
xor
(bad)
loop
xchg
shr
cmp
add
sbb
or
(bad)
sbb
ret
in
ds
jmp
jmp
xchg
mov
clc
xchg
mov
fsubr
or
xchg
jge
mov
cmps
xchg
in
lods
xchg
sub
rol
jmp
sub
sbb
or
repz
sbb
cli
mov
cdq
mov
sahf
(bad)
fwait
cmp
cmp
shl
dec
jecxz
call
cmp
imul
push
fwait
in
loopne
mov
fdivr
test
mov
icebp
stc
mov
xchg
out
add
jbe
retf
xlat
xor
xchg
pop
aaa
xor
dec
popa
push
mov
mov
sbb
and
imul
mov
lea
cmc
jb
cmp
dec
xor
dec
adc
shl
call
sub
int3
retf
test
lods
hlt
idiv
inc
cmps
and
clc
xchg
enter
lods
loope
sbb
add
cld
hlt
mov
out
jb
mov
jns
je
cmc
push
mov
xchg
or
retf
test
inc
lock
mov
pop
popa
pop
std
dec
cmp
xchg
imul
mov
mov
or
push
mov
push
sar
adc
dec
cmps
or
jae
xor
mov
cmp
mov
out
cli
xchg
lods
std
ret
or
mov
jae
push
test
fst
popf
add
pop
push
(bad)
xchg
push
xor
adc
scas
js
sbb
scas
sbb
gs
push
test
movs
je
jmp
or
loopne
mov
add
js
push
dec
dec
lods
xor
xor
js
push
movs
movs
aad
pop
in
inc
mov
adc
add
out
pusha
(bad)
pop
test
sub
mov
jnp
push
jp
cmp
and
out
and
push
mov
ins
sub
inc
lods
sub
jnp
add
lock
popa
fst
jmp
or
push
in
call
(bad)
or
stos
daa
dec
and
dec
push
push
pusha
into
in
and
and
add
(bad)
ds
arpl
mov
xchg
call
mov
movs
xchg
and
sbb
push
lods
mov
and
clc
scas
test
retf
or
sbb
std
and
mov
stc
ins
popf
out
test
(bad)
or
pop
fisubr
into
pop
clc
sbb
jmp
push
sub
mov
(bad)
call
mov
call
and
sbb
xchg
pop
jle
push
add
lahf
sub
cmps
ror
xchg
dec
std
jg
sub
add
add
or
lahf
in
rcl
mov
repz
es
aaa
add
mov
hlt
dec
add
jnp
xchg
sahf
(bad)
sub
push
int
repz
xchg
add
add
add
add
add
and
add
jl
add
add
push
inc
out
add
add
add
add
add
add
inc
add
add
add
add
cmp
add
pop
add
add
add
or
add
push
ret
add
add
add
add
cs
pop
add
add
dec
pop
stos
add
pop
add
sbb
add
add
add
add
push
add
add
add
mov
add
add
add
add
add
add
pop
add
add
add
add
add
add
add
add
add
add
add
sbb
push
cmp
(bad)
popf
mov
mov
cdq
hlt
arpl
js
test
arpl
(bad)
adc
(bad)
fld
fstp
jg
mov
sub
fucomp
xchg
adc
adc
jbe
xchg
retf
jmp
pop
scas
aaa
bound
(bad)
scas
xlat
inc
call
mov
test
sub
movs
inc
jno
add
mov
push
cld
mov
or
pop
push
pop
sub
jmp
hlt
push
repz
stc
std
xchg
sub
call
mov
cwde
mov
jg
dec
gs
mov
cli
xchg
add
jge
adc
mov
out
push
in
ror
rcr
cmp
cmc
mov
cmp
(bad)
test
adc
mov
out
and
add
cmps
fstp
ds
pusha
or
loope
popa
ss
mov
mov
lods
popf
adc
and
inc
int3
enter
mov
mov
aad
and
stos
mov
jge
in
outs
jge
or
cmp
dec
arpl
mov
pop
enter
in
add
test
push
pop
pop
pop
push
std
sbb
mov
je
ret
sahf
sbb
int
mov
sub
or
in
or
xchg
push
adc
movs
push
cli
daa
pusha
test
dec
aam
cs
add
cmp
push
jecxz
sub
sub
lods
mov
xchg
sbb
(bad)
xchg
aaa
arpl
rol
and
mov
mov
inc
push
inc
(bad)
adc
jb
cmp
adc
xlat
(bad)
sub
dec
pop
(bad)
mov
mov
pop
push
mov
push
in
fild
push
jns
jle
push
in
jae
jmp
ins
dec
sahf
jns
sbb
fsub
shl
(bad)
test
mov
push
clc
clc
pusha
inc
and
fsubr
push
mov
or
xchg
leave
xchg
sub
imul
push
jmp
(bad)
cmc
inc
repnz
outs
dec
in
adc
add
adc
ins
push
dec
push
jns
nop
je
ficom
pop
mov
lods
jmp
aam
xor
xchg
push
mov
ret
leave
aaa
sti
cmp
pusha
dec
loope
repz
out
and
push
in
xchg
push
loop
jae
cmp
xchg
addr16
outs
dec
and
sub
and
add
cli
fs
test
sahf
xor
pusha
push
sbb
add
mov
sar
inc
(bad)
adc
pop
inc
sub
in
jae
or
(bad)
dec
inc
cmc
movs
or
pop
cmp
add
jno
xlat
push
jmp
movs
inc
xchg
out
scas
add
push
stos
mov
mov
push
push
sub
(bad)
jmp
(bad)
icebp
mov
inc
retf
jge
mov
cdq
and
mov
add
test
cwde
dec
ins
adc
sub
pop
jge
fld
aam
stos
(bad)
jge
shl
xlat
cmp
jno
xor
and
mov
add
sar
mov
xor
cmps
jne
fistp
les
jl
test
in
and
xchg
mov
xchg
fcmovb
call
pop
add
sub
test
repz
mov
or
pop
rcr
shl
push
retf
mov
cld
inc
mov
retf
mov
inc
xor
in
sub
in
mov
push
mov
cmp
ins
jae
lahf
xchg
jmp
jne
es
retf
push
shr
cmps
gs
pop
inc
aam
or
sub
mov
mov
add
push
jno
rol
xchg
sub
adc
mov
arpl
into
das
push
sbb
xchg
jmp
push
mov
loopne
sub
pop
adc
sbb
add
ss
mov
daa
mov
cld
push
mov
test
repnz
sbb
shl
leave
jb
mov
out
dec
int
xchg
sahf
stos
cmp
and
and
mov
scas
adc
out
loop
call
cs
cwde
cmps
pop
scas
gs
xor
je
sub
dec
inc
mov
rcr
bound
or
iret
mov
test
push
lds
pushf
mov
mov
idiv
ret
dec
inc
repz
jl
imul
mov
mov
out
xchg
out
es
or
ret
mov
mov
scas
(bad)
adc
jns
in
loope
retf
addr16
ds
in
imul
inc
adc
or
pop
push
ret
mov
iret
(bad)
mov
movs
(bad)
cli
push
jno
js
mov
dec
je
shr
loope
repnz
xchg
jmp
jo
hlt
xchg
cmp
neg
call
cmp
popf
push
cmp
ins
in
mov
jnp
(bad)
lea
xchg
lds
outs
out
dec
and
mov
fild
stc
je
jno
jae
or
sbb
push
sbb
int3
jmp
jae
pushf
push
xchg
loopne
fwait
cli
(bad)
dec
repz
push
scas
mov
scas
not
ret
cli
dec
loopne
call
mov
scas
call
pop
inc
push
push
fcomip
mov
sbb
sbb
sub
ja
sub
ret
inc
sbb
add
les
pop
je
inc
loop
add
lods
in
mov
dec
push
adc
fsubr
pop
mov
idiv
retf
pop
idiv
pop
mov
lods
les
aad
ins
dec
bound
xor
pop
cld
loop
pop
into
add
imul
jmp
pusha
scas
jmp
div
hlt
into
jmp
mov
(bad)
sti
fwait
push
adc
in
jae
lea
outs
popa
arpl
out
cmps
cmp
inc
mov
sbb
push
push
test
mov
jns
jno
pop
retf
xchg
test
or
push
aad
es
cmp
mov
fadd
xor
das
mov
lea
(bad)
lods
fwait
lock
inc
adc
inc
call
ss
out
push
adc
hlt
pop
pop
push
hlt
adc
inc
jp
ret
sbb
mov
mov
shl
in
lods
sbb
pop
mov
push
pushf
jmp
rol
mov
and
lods
adc
movs
fwait
out
mov
xchg
test
loopne
scas
pop
in
and
mov
push
mov
xchg
xor
xchg
sar
arpl
and
fdivr
cmp
fs
cmp
sahf
fxch
pop
xchg
mov
xchg
xor
inc
imul
mov
lods
mov
arpl
stos
nop
cmp
mov
push
(bad)
pop
xchg
movs
in
adc
ds
add
out
adc
in
jnp
dec
sbb
cmp
mov
shl
cmps
push
jae
push
xor
pop
stc
cmp
test
cmp
jnp
xchg
mov
(bad)
pop
shl
mov
or
pop
cdq
sub
jp
jmp
or
fcomp
adc
jb
into
dec
xor
jae
jne
in
dec
std
stos
test
and
(bad)
and
ret
ja
cld
idiv
inc
fld
scas
(bad)
mov
xlat
mov
cmps
inc
add
xlat
into
xchg
repnz
jnp
addr16
push
ret
dec
sbb
mov
ret
pop
inc
hlt
adc
cmp
mov
and
push
sahf
sub
pop
cmc
pop
mov
mov
pop
adc
or
adc
mov
cmp
rcr
xchg
ds
loope
ret
mov
sbb
or
fs
cmps
loopne
dec
add
mov
mov
and
pop
or
outs
mov
imul
push
in
stos
pop
not
mov
push
test
push
dec
xlat
xchg
add
xchg
out
adc
lods
mov
scas
jmp
mov
fcmovbe
jg
adc
in
sbb
adc
sub
inc
icebp
loopne
dec
add
push
in
stos
xchg
mov
das
aaa
fild
fs
paddq
xor
clc
out
add
ficomp
and
adc
sub
cmp
je
test
cld
pop
ins
and
in
xchg
shr
ret
mov
cs
dec
rcr
inc
dec
das
arpl
fwait
xchg
xor
jmp
test
ret
fldenv
fsub
rcr
cmp
cmp
add
mov
test
outs
nop
imul
lock
aam
or
inc
(bad)
sbb
jl
leave
push
loop
pop
cmp
cwde
aaa
and
pop
pop
into
and
mov
and
cmp
stos
call
add
repz
hlt
inc
out
mov
inc
push
out
cmp
mov
mov
pop
jb
(bad)
cmps
out
fwait
inc
sbb
sub
mov
mov
mov
int3
or
lock
jp
adc
sub
aaa
out
or
jne
adc
cmps
pop
jo
dec
sti
sbb
and
mov
mov
rcr
mov
xor
sub
(bad)
call
or
mov
sub
mov
lods
xor
jecxz
das
jmp
rep
and
mov
mov
cmp
xor
pop
sbb
fs
ret
or
fs
das
pop
int
or
adc
jmp
cli
stc
cld
stos
imul
mov
sbb
(bad)
cmp
repnz
mov
cmp
jno
ss
out
mov
sub
bnd
push
jb
mov
sahf
dec
or
sub
rcr
out
in
add
push
mov
xor
add
mov
in
jmp
cld
es
xor
jnp
xchg
loop
ins
jg
mov
xchg
imul
les
out
cld
lock
mov
fist
dec
sub
cmp
cld
push
je
(bad)
dec
jno
add
dec
inc
mov
adc
fdiv
add
fsub
mov
jmp
pop
int
add
add
add
add
add
add
stos
and
add
add
add
aas
mov
sub
add
mov
add
add
add
adc
add
add
add
add
bound
pushf
add
add
add
add
fcomp
sub
add
add
cmp
add
add
add
add
add
stos
mov
add
push
add
add
cmp
inc
ins
jno
ins
test
fiadd
inc
es
push
jne
sbb
add
xor
mov
lock
clc
mov
mov
mov
icebp
xchg
mov
dec
mov
shr
pop
push
(bad)
dec
mov
aas
cwde
enter
or
or
fwait
add
or
ret
sub
std
fld
loope
sbb
cwde
xor
mov
push
in
push
ins
(bad)
jb
jle
scas
fwait
in
push
sbb
xchg
mov
adc
or
fld
push
ret
dec
mov
and
retf
stc
in
jae
add
xor
arpl
and
cld
fidivr
cmp
stos
mov
inc
xchg
mov
imul
mov
stc
out
loop
ror
or
mov
mov
daa
mov
cs
xlat
repz
and
mov
in
sbb
mov
sub
mov
jl
mov
cdq
mov
pop
inc
jnp
out
repz
mov
push
dec
mov
sub
ficom
retf
add
fimul
or
out
add
cmp
std
cmp
adc
jb
retf
cmp
stc
dec
test
ins
sub
inc
pop
push
mov
test
outs
jge
mov
xchg
add
pushf
dec
test
sti
imul
int3
ja
xchg
not
daa
lods
or
sbb
dec
cli
xor
rol
addr16
fwait
std
in
cld
dec
xor
push
cmp
movs
mov
int3
mov
sbb
test
ficomp
pop
pop
mov
pusha
mov
aaa
cmp
imul
xor
inc
adc
out
cmp
bswap
xor
lahf
into
inc
stos
push
mov
add
cmps
sub
inc
or
fsubp
push
xor
pop
inc
sbb
ret
sbb
jo
out
lods
mov
push
stos
out
xor
push
jno
in
mov
pop
ret
inc
scas
test
xchg
(bad)
and
fistp
fisub
and
sub
aaa
pop
xchg
test
outs
popa
cld
call
jp
fimul
mov
imul
test
and
leave
sbb
pop
iret
jnp
xor
and
dec
adc
(bad)
retf
inc
pop
and
adc
dec
xor
aas
jb
stos
out
add
or
mov
arpl
push
add
xor
cmpxchg
int
xchg
loopne
out
in
jmp
xor
lods
fidiv
adc
scas
(bad)
cwde
adc
(bad)
imul
or
ret
in
test
jo
inc
push
inc
call
movs
inc
push
das
dec
ror
adc
fiadd
adc
jle
or
dec
add
in
add
movs
enter
je
pop
in
cmp
call
xlat
pop
nop
jge
pop
add
adc
imul
test
fcomip
and
lock
sahf
and
cmp
sub
(bad)
mov
aas
cdq
mov
or
and
lea
add
lea
cmps
mov
sysret
or
push
inc
dec
xor
or
idiv
sub
mov
pusha
xor
scas
gs
pusha
or
sbb
ja
std
clc
test
fisttp
jns
outs
(bad)
sbb
adc
pop
fwait
(bad)
fdivr
lods
mov
jb
movs
xor
add
xchg
clc
jmp
mov
pop
add
movs
js
mov
pop
sbb
jg
icebp
and
stos
call
pop
or
repz
js
xchg
dec
(bad)
sub
push
js
inc
int
inc
jge
push
sub
out
inc
repz
push
(bad)
ins
adc
inc
repnz
inc
sbb
jo
rol
add
and
daa
pop
inc
enter
xchg
or
add
stos
ror
scas
sbb
into
ins
push
adc
jmp
mov
inc
in
mov
pop
dec
adc
les
iret
xor
jecxz
cli
movs
dec
sbb
add
ret
mov
sub
pop
div
mov
das
push
sahf
or
jbe
mov
int
push
adc
sbb
xor
cli
std
xchg
arpl
mov
push
imul
nop
and
(bad)
icebp
jo
inc
ret
(bad)
mov
xchg
shr
mov
add
mov
cmps
mov
cwde
or
in
ret
shr
dec
pop
inc
and
or
jge
dec
clc
imul
loop
jl
call
imul
jl
add
(bad)
sti
cmp
inc
jb
and
adc
sub
push
(bad)
or
adc
hlt
fs
xchg
pop
or
stos
and
cmps
xchg
adc
dec
mov
xor
adc
pop
enter
bsf
push
(bad)
jmp
push
pop
push
mov
(bad)
mov
xchg
cmp
mov
rcr
scas
test
fstp
jecxz
lods
xchg
push
daa
mov
das
xor
xchg
mov
mov
lods
fwait
ja
adc
(bad)
bound
outs
mov
cmc
push
mov
push
ja
mov
dec
pop
add
and
int
in
mov
or
pop
in
or
pop
push
mov
or
fisttp
sbb
pop
popa
xor
stos
pusha
inc
test
jo
mov
lods
sbb
call
and
mov
and
sbb
je
repz
jnp
and
hlt
jp
xchg
loop
es
(bad)
dec
and
mov
sub
adc
sar
cli
inc
inc
xchg
daa
dec
xor
add
mov
pusha
inc
jne
rol
mov
(bad)
sbb
mov
test
fs
lods
repz
push
frstor
sub
cmp
out
in
jmp
aas
bound
mov
js
in
push
test
mov
mov
iret
pop
add
les
pop
mov
mov
test
jns
iret
into
push
jbe
push
adc
sub
imul
adc
imul
movs
gs
cmc
retf
pop
mov
gs
aad
sbb
mov
push
dec
test
xchg
cmp
clc
inc
nop
and
add
pushf
jae
or
add
scas
inc
adc
cmp
jecxz
loope
dec
not
pushf
pop
jmp
xchg
(bad)
dec
mov
cmc
push
xor
scas
(bad)
lahf
adc
ret
mov
pop
mov
pop
imul
adc
pop
mov
or
cmps
dec
push
test
mov
std
cwde
js
push
and
xlat
cmp
xchg
mul
scas
call
lods
pusha
stos
les
and
mov
sti
xor
(bad)
jle
out
shl
aas
dec
pop
ds
mov
mov
data16
loop
icebp
pusha
mov
lds
sub
xor
addr16
and
add
cs
adc
sub
adc
retf
jecxz
add
ins
jne
mov
movs
dec
and
in
xchg
and
sub
(bad)
adc
add
push
fisttp
int
inc
enter
popf
mov
sub
into
repz
xchg
lock
pop
pop
dec
push
lea
add
lods
xchg
(bad)
jmp
into
sbb
icebp
std
(bad)
dec
das
mov
mov
aas
mov
(bad)
das
dec
or
and
xlat
icebp
sbb
dec
sbb
xchg
sbb
mov
and
pop
sub
popf
jmp
mov
pop
cli
fdivrp
xor
dec
xor
mov
pop
(bad)
sbb
mov
popf
push
fdivrp
sbb
inc
sbb
dec
push
add
in
test
mov
and
call
cld
sahf
ja
cs
ja
test
mov
test
movs
imul
(bad)
and
test
cmp
out
add
lds
loopne
loop
mov
test
bound
(bad)
xchg
aas
cmp
mov
scas
sbb
mov
cmp
sti
sbb
out
mov
stos
dec
mov
push
leave
dec
adc
jb
jns
dec
and
xchg
xor
jle
mov
and
popf
mov
mov
cmp
movs
sbb
pop
push
push
fist
add
ror
adc
sub
jge
sbb
add
outs
bound
loop
cmp
pop
sti
xchg
adc
aad
add
daa
mov
add
mov
fisubr
iret
dec
ror
shl
xor
add
sub
jno
fistp
mov
(bad)
subps
adc
mov
and
cmps
call
mov
xchg
nop
sbb
push
pop
xor
mov
cmp
add
inc
mov
(bad)
mov
pusha
push
dec
push
sub
cmp
arpl
add
inc
sbb
mov
dec
mov
rcr
shr
pop
mov
das
mov
push
loope
adc
cmp
out
jno
test
retf
lds
movs
sub
jmp
call
cmp
mov
in
inc
lahf
stos
inc
fdiv
scas
inc
adc
jns
jne
mov
into
jl
inc
add
push
ss
gs
call
push
push
stc
and
sub
mov
(bad)
jo
xor
mov
jmp
xorps
data16
and
stc
les
loope
xor
stos
mov
cmp
jge
movs
jle
int3
popf
sti
adc
fwait
or
xchg
cmps
je
dec
les
mov
neg
in
int3
vpshlq
push
retf
(bad)
pop
popf
(bad)
repz
pushf
fbstp
stc
or
push
jbe
cmps
xchg
bound
inc
cli
fnstenv
sub
mov
jbe
je
js
sbb
mov
test
jmp
xchg
xor
imul
add
inc
adc
in
pop
xor
aam
in
pop
xor
rol
xor
lods
jp
in
in
pop
mov
or
sbb
cmp
pushf
icebp
call
add
out
push
pop
cmp
push
retf
or
xchg
int
retf
out
ret
lea
mov
ss
test
dec
fcom
test
jle
jne
aam
mov
jge
cmp
ins
cmp
hlt
out
jns
push
push
pop
pop
mov
cmc
or
repnz
xlat
div
pop
nop
std
sbb
cmp
add
mov
lock
mov
push
sub
repnz
movs
fadd
cmps
jbe
imul
inc
cmp
add
add
add
add
add
add
add
add
add
ret
cdq
aaa
dec
add
cmp
add
add
add
add
add
add
add
add
add
add
add
lods
add
add
add
mov
add
add
add
pop
add
push
push
jo
add
add
nop
cmp
mov
jno
out
xchg
imul
add
loop
fidiv
jl
xor
mov
push
fisub
sub
test
xchg
adc
not
xor
adc
mov
rcr
ds
les
sbb
test
xchg
sub
outs
sbb
lods
sub
xor
xchg
xor
cmps
cwde
loopne
mov
jl
jmp
or
mov
or
jnp
imul
fwait
das
mov
or
stc
hlt
loopne
enter
repz
push
inc
outs
aad
adc
int
mov
add
ret
nop
rcr
(bad)
pop
sti
push
fnstenv
sub
je
push
test
lods
aam
pushf
imul
(bad)
xor
loopne
rcr
ret
outs
addr16
dec
scas
push
cmp
pop
jae
inc
mov
call
add
test
aad
popa
fisub
lock
pop
inc
inc
or
(bad)
jno
inc
fs
lea
push
xor
imul
leave
mov
dec
push
icebp
mov
sbb
shl
jb
inc
(bad)
out
sub
or
xor
push
mov
retf
aaa
lea
cmp
jno
(bad)
sub
enter
daa
add
aas
add
(bad)
adc
add
ss
mov
jbe
jmp
mov
ror
clc
mov
mov
add
mov
mov
out
pand
out
xor
mov
fistp
ror
xchg
test
inc
sahf
mov
out
(bad)
loop
lock
pop
iret
icebp
sub
jecxz
xchg
stos
and
(bad)
xchg
sub
inc
mov
ss
xchg
(bad)
(bad)
adc
pop
xchg
pop
jns
fild
dec
jp
jae
sbb
adc
dec
enter
test
and
dec
xor
push
sub
cdq
jmp
jb
pushf
sub
mov
dec
mov
xchg
sbb
sub
jl
ins
sbb
js
sbb
mov
add
jg
call
add
inc
ret
movs
mov
and
in
mov
sub
(bad)
fnstenv
or
pop
push
xor
arpl
outs
call
in
push
cmp
or
cmp
jmp
nop
cmp
xchg
pop
and
int
jmp
sub
addr16
and
or
imul
pop
cs
es
xchg
aad
mov
shl
rcl
dec
call
imul
popa
adc
add
and
arpl
shl
fbld
cwde
cmp
xor
arpl
push
rcr
push
or
inc
pop
sub
imul
xchg
nop
mov
inc
outs
inc
idiv
(bad)
mov
push
cmps
iret
mov
fidiv
mov
call
retf
outs
add
cmp
push
lds
call
rcr
cmp
adc
push
adc
and
and
pop
mov
push
(bad)
fisttp
cwde
add
addr16
mov
push
push
pop
cwde
loope
(bad)
popf
adc
jbe
(bad)
mov
mov
and
push
push
pop
iret
loop
sub
dec
(bad)
iret
jne
and
add
sub
inc
sub
push
sbb
loope
fcmovu
repz
cmp
imul
or
mov
cld
bnd
and
dec
sti
daa
push
call
and
dec
pop
mov
leave
sti
push
popf
and
mov
xchg
dec
in
cmps
and
cmp
lods
mov
push
add
mov
and
hlt
and
mov
stos
test
add
int
sub
imul
repz
test
fs
push
mov
mov
pushf
jp
push
iret
les
xor
shl
adc
jmp
add
sub
aad
add
bound
push
inc
js
in
rcr
jb
loopne
xor
mov
pop
mov
add
push
adc
sbb
mul
out
(bad)
adc
mov
or
scas
(bad)
push
ss
sbb
sub
call
inc
pushf
lods
push
push
xchg
xchg
scas
cmc
add
xchg
in
mov
add
cmp
imul
in
je
mov
inc
jbe
push
je
cmps
and
cwde
jg
(bad)
and
inc
and
popf
daa
(bad)
mov
pop
test
daa
push
xor
xlat
je
sti
xor
pop
and
sar
les
(bad)
jmp
push
into
or
fisub
jb
cmp
iret
mov
pop
xchg
and
jp
aas
push
pop
in
or
lods
ficom
pop
in
(bad)
xchg
mov
dec
dec
xchg
and
stos
sbb
mov
and
mov
dec
push
dec
imul
test
nop
nop
add
lock
jg
sbb
(bad)
sbb
push
fwait
test
jle
dec
test
adc
into
out
jae
lds
or
(bad)
lods
mov
or
push
js
test
pop
sub
nop
adc
jge
fsub
jmp
xor
aaa
enter
std
dec
mov
aad
cmp
neg
jmp
into
fsubr
push
mov
mov
repnz
jns
seta
inc
loopne
test
imul
sbb
jb
pop
lods
cli
sbb
xchg
push
cmps
xchg
retf
addr16
in
xchg
xchg
jb
enter
(bad)
(bad)
imul
sub
cmps
push
push
mov
outs
loope
clc
jmp
and
adc
jns
in
pusha
cmp
cmp
loopne
cld
xchg
repnz
mov
call
sbb
mov
jb
lea
clc
and
bound
cmp
test
mov
fild
repz
outs
or
stc
mov
popf
icebp
mov
inc
jns
imul
or
dec
jg
jb
test
lods
hlt
xchg
adc
adc
mov
push
inc
pop
and
or
test
fild
ds
xor
pushf
das
mov
mov
in
jnp
or
lds
cmp
ror
je
shl
lock
sub
fdiv
mov
xor
mov
adc
sar
stos
imul
add
pop
push
mov
imul
mov
jp
(bad)
arpl
movs
add
xchg
fnstcw
sbb
adc
lds
(bad)
hlt
mov
fnstcw
dec
sbb
dec
mov
pop
add
arpl
mov
push
jmp
popa
ss
mov
int
mov
loopne
loope
push
sbb
pop
daa
cli
not
std
mov
int
pusha
cmp
add
retf
sbb
inc
push
mov
dec
fwait
mov
jmp
ins
shl
fwait
and
cmc
sub
aas
push
and
gs
rol
movs
push
inc
xchg
mov
leave
jl
jne
push
rcl
push
push
cmp
loopne
mov
out
cmp
retf
pop
inc
jl
adc
ror
shl
fwait
adc
popa
cmps
imul
xchg
jmp
cld
retf
and
xlat
adc
cmp
jb
push
movs
xor
xchg
imul
dec
(bad)
xlat
inc
or
cmps
ss
xchg
es
repz
inc
sbb
xchg
das
ss
xchg
test
retf
pop
dec
mov
push
mul
(bad)
aaa
loope
(bad)
leave
xchg
dec
stos
ret
out
bnd
cmps
push
fs
(bad)
xchg
mov
test
sar
int3
ja
loopne
int3
mov
(bad)
fwait
push
cdq
repnz
ret
adc
outs
loope
inc
aam
movs
dec
mov
xchg
out
les
arpl
pop
pop
(bad)
xchg
mov
add
cmp
cmp
lea
jecxz
shr
mov
aaa
icebp
in
in
mov
mov
call
push
pop
xor
mov
xchg
je
outs
jle
les
test
pushf
or
and
xchg
into
fcomp
addr16
repnz
in
fmul
std
xor
pushf
fdiv
mov
div
dec
adc
push
nop
and
hlt
popa
xchg
mov
pusha
rcr
xchg
es
or
dec
js
int3
inc
pop
popf
mov
pusha
mov
mov
dec
aaa
das
ja
xchg
jae
or
or
ins
bound
pop
bound
sbb
adc
mov
xor
sub
mov
das
retf
jmp
and
jae
arpl
(bad)
lahf
movs
xchg
jns
movs
adc
cmps
stos
xor
pop
(bad)
mov
mov
out
pop
mov
pop
jns
adc
popa
cli
out
and
cmps
lds
retf
inc
into
pop
leave
mov
add
mov
mov
xlat
mov
sti
add
test
and
sar
dec
and
shl
sbb
inc
div
xor
ret
push
mov
inc
xchg
and
retf
add
sti
add
jae
jge
mov
popf
enter
and
fmul
sti
xchg
in
(bad)
inc
out
pop
push
jecxz
pop
scas
lock
pop
test
push
mov
push
aad
or
fistp
repz
pop
in
adc
(bad)
adc
sub
adc
popa
jle
xor
cmps
aas
lea
jnp
shr
nop
cmc
add
retf
dec
das
stc
popf
pusha
cwde
xchg
dec
and
(bad)
jb
xor
enter
jns
out
mov
mov
cwde
sub
je
and
xor
enter
mov
retf
out
ins
fcmovbe
mov
mov
lea
mov
call
mov
or
or
or
xchg
sar
bound
and
or
sbb
fidivr
call
adc
retfw
aam
pop
pop
movs
stos
or
inc
retf
inc
icebp
lea
xor
push
shr
stos
xchg
shl
mov
das
cmp
test
push
call
imul
xchg
sbb
dec
pusha
jbe
mov
stc
and
retf
inc
jmp
je
fs
enter
dec
and
data16
(bad)
mov
movs
out
mov
iret
ret
fidiv
push
add
add
mov
aam
add
add
add
add
add
add
add
add
cmp
add
add
add
loop
add
inc
add
add
add
cmps
add
add
add
test
adc
test
jbe
xchg
push
sbb
inc
aam
dec
pop
inc
(bad)
push
outs
call
fidivr
and
adc
ja
std
repz
push
icebp
int
(bad)
add
jno
mov
and
mov
shl
mov
ss
ret
shl
add
mov
inc
sub
and
xchg
out
xchg
pop
pop
fild
data16
(bad)
or
in
push
xor
rcr
arpl
test
mov
or
push
xchg
shl
add
(bad)
adc
shr
push
clc
add
mov
mov
gs
popf
aad
add
out
and
sbb
retf
imul
mov
fisubr
jle
dec
in
sbb
mov
mov
test
mov
out
(bad)
jp
idiv
movs
mov
loop
dec
imul
call
cmp
dec
xchg
cwde
shl
fld
inc
pushf
add
call
pop
inc
xor
cmp
retf
loope
ja
jns
jnp
lds
repnz
jae
sbb
sub
xchg
pop
dec
push
push
pop
fistp
mov
nop
mov
(bad)
pop
retf
jb
outs
adc
pop
in
jb
mov
ja
fistp
and
in
cmp
inc
or
int3
mov
stos
(bad)
push
outs
(bad)
out
les
lahf
mov
jo
lods
(bad)
push
cmp
xchg
bound
and
repnz
nop
cmp
add
mov
add
cmp
jo
xchg
sbb
mov
mov
xchg
fld
sub
ins
mov
out
stos
mov
cwde
stos
push
pop
dec
xor
stc
std
fistp
dec
idiv
fcom
test
mov
lods
dec
mov
ret
cmp
shl
pop
mov
adc
add
pop
(bad)
cmc
mov
ror
mov
dec
jns
or
aam
sub
cmps
pop
out
push
mov
mov
ret
(bad)
xchg
lds
add
push
cmp
movs
lahf
and
xor
xor
repnz
outs
pop
cmp
ss
lods
pop
pop
push
inc
mov
adc
xchg
div
addr16
or
je
cs
dec
mov
shr
adc
jae
hlt
dec
scas
cmp
mov
jmp
ret
xor
cld
repz
fs
sbb
int
push
call
(bad)
out
inc
pop
sbb
mov
xchg
rcr
xlat
(bad)
call
and
call
adc
sbb
ss
leave
xlat
ja
mov
popf
lds
int3
mov
push
in
dec
dec
outs
cmp
cdq
call
push
mov
dec
mov
pop
aam
dec
sar
mov
cdq
add
or
push
inc
mov
mov
and
outs
mov
add
push
add
repz
dec
pop
inc
aam
fnsave
push
shl
call
ja
jg
imul
xor
mov
cdq
mov
hlt
inc
mov
loopne
repnz
add
dec
dec
cld
sahf
pop
cmp
ss
arpl
pop
jle
ficomp
test
jmp
clc
jno
push
inc
sbb
push
dec
push
mov
xchg
push
fwait
aaa
fucomp
sbb
iret
dec
cdq
inc
gs
leave
outs
pusha
and
div
mov
loope
mov
rcr
sahf
sahf
xchg
mov
add
jp
sti
mov
rcr
cmp
scas
push
xlat
fnsave
xchg
movs
jge
fdiv
(bad)
pop
lahf
outs
aas
stos
push
into
and
add
retf
data16
inc
outs
clc
scas
sub
fnstcw
(bad)
push
or
mov
or
out
adc
nop
add
sub
sti
and
aad
jmp
in
out
test
popa
inc
in
xchg
sub
pop
fcomp
outs
fcomp
lea
dec
and
(bad)
test
jge
and
jp
dec
jo
add
leave
fisub
push
xchg
sub
sub
cmp
add
push
dec
inc
inc
gs
aas
lods
fisub
call
jmp
shr
adc
rol
adc
mov
aam
outs
cmc
or
push
mov
nop
and
mov
push
ror
mov
jmp
out
adc
push
pop
gs
push
inc
mov
inc
(bad)
cmp
ss
sub
stos
dec
xor
xchg
xchg
lds
push
jno
pop
out
jns
dec
and
mov
jo
mov
mov
sbb
ds
shl
inc
push
pusha
jo
sbb
push
jmp
fdiv
repnz
lods
adc
jmp
pop
dec
sub
mov
sub
iret
fisubr
leave
rcr
rcl
cmp
test
mov
mov
push
or
ficom
xchg
in
sub
cmp
dec
pushf
push
es
mov
rcr
pop
xor
mov
jg
xor
aam
fdivp
dec
adc
test
ret
xchg
cmps
mov
jge
sub
das
fistp
or
ins
and
div
pop
test
jmp
mov
fmul
mov
or
lock
iret
adc
stos
daa
pop
xchg
into
mov
loope
hlt
mov
mov
jp
xor
mov
xchg
mov
dec
jecxz
cmps
lock
aas
addr16
mov
mov
sbb
das
stos
pushf
and
mov
cmp
adc
sbb
(bad)
out
inc
push
xlat
adc
xor
or
cld
sbb
es
pop
dec
pop
inc
and
adc
xor
daa
sub
sub
aaa
jnp
sbb
(bad)
imul
add
movs
mov
push
lods
leave
xor
daa
pusha
retf
pop
aam
test
xor
pop
pop
fwait
inc
call
fnsave
call
mov
outs
pop
cmc
aas
outs
mov
mov
cmp
pop
adc
mov
es
pop
ds
jmp
mov
sahf
sbb
xchg
jnp
shr
cli
push
cmp
out
mov
cmps
mov
sbb
push
iret
sti
inc
int
aas
add
enter
into
cld
int
mov
pop
push
icebp
imul
outs
aas
xor
jae
aaa
sub
mov
push
adc
and
pop
dec
and
pop
int
pushf
ja
mov
js
push
mov
lods
pop
xchg
mov
fld
mov
jg
test
cmp
fimul
sub
cs
and
and
and
test
ins
sbb
je
adc
shl
cld
js
ins
mov
mov
jo
sub
scas
pop
(bad)
jmp
fbstp
(bad)
push
jns
dec
dec
test
fs
mul
call
cmc
retf
sbb
inc
push
jmp
mov
mov
outs
sbb
push
stos
mov
retf
adc
retf
jae
jnp
test
cdq
push
jmp
jae
mov
fst
sbb
mov
data16
and
ins
or
push
mov
(bad)
out
or
popf
or
sub
sub
call
arpl
aaa
mov
dec
shr
retf
lahf
mov
mov
nop
loope
and
pop
jmp
ja
mov
aad
lahf
sti
adc
push
leave
inc
lods
and
repz
fcom
retf
xor
scas
or
test
and
push
loope
add
lahf
sbb
(bad)
stc
lods
inc
fs
std
sti
xor
mov
mov
sbb
js
or
dec
hlt
arpl
icebp
rol
inc
inc
ror
icebp
(bad)
mov
add
fs
iret
jbe
arpl
mov
lock
inc
jg
push
pusha
or
add
and
ret
xor
inc
aas
mov
sub
push
fisttp
pop
xchg
mov
popf
aas
and
mov
lds
cmps
(bad)
fist
mov
mov
push
cwde
out
stos
or
not
int3
add
jmp
(bad)
std
in
sbb
xor
popa
pop
push
out
jl
push
dec
ds
jmp
jle
lods
js
sbb
jmp
in
ds
xor
adc
adc
ins
inc
jnp
dec
enter
int3
loopne
in
outs
sti
inc
and
ja
xchg
test
push
ds
(bad)
cmp
jno
shr
or
pushf
dec
inc
aad
int
imul
fimul
leave
popf
and
aas
pushf
jns
inc
(bad)
add
jb
push
fisubr
ds
inc
inc
(bad)
enter
ret
or
cmps
mov
std
xor
cmp
push
mov
popa
mov
push
repz
stos
fwait
jp
pop
sub
fwait
cmp
dec
or
xor
push
jb
int
jl
out
and
pop
sbb
btc
daa
(bad)
sar
int3
or
sub
sub
mov
mov
xchg
mov
xchg
sbb
ror
sub
pop
test
pusha
jnp
inc
loopne
lods
push
mov
jge
pusha
mov
popa
jo
pop
jnp
data16
in
stos
fwait
mov
cmp
xchg
add
push
(bad)
sahf
inc
mul
fimul
imul
enter
lock
in
lock
pop
es
fwait
es
or
test
fiadd
outs
mov
or
sub
mov
ret
xor
push
aam
or
mov
add
add
jne
jnp
cmp
cmp
jmp
adc
ret
out
adc
loopne
fdivr
leave
jae
pusha
ss
pop
xor
ins
mov
pop
adc
in
xchg
or
mov
loopne
ror
jbe
sbb
sbb
pop
fistp
xchg
dec
arpl
js
aad
sbb
retf
cmp
movs
addr16
mov
stc
jmp
add
push
mov
scas
(bad)
xlat
xchg
scas
lods
outs
pop
into
xor
xor
ret
enter
add
adc
xchg
ja
add
leave
je
lods
les
xchg
fadd
add
add
add
add
rol
add
ja
add
adc
add
add
add
jle
add
add
push
add
adc
xlat
add
add
add
add
add
add
add
add
add
add
add
ret
add
add
pop
add
(bad)
cmps
les
movs
pusha
push
loop
sti
xchg
pop
mov
xchg
retf
cli
pop
pop
scas
cmp
or
inc
clc
xor
(bad)
dec
iret
jbe
fnsave
xchg
les
out
and
in
xchg
xchg
stc
xchg
stos
cmp
sub
add
test
add
mov
std
pusha
mov
jge
out
and
ins
movs
test
stc
pop
adc
leave
(bad)
call
mov
jb
inc
and
push
(bad)
add
out
mov
dec
mov
int3
sub
pop
or
sbb
std
mov
packsswb
ret
mov
int3
clc
es
les
mov
xchg
mov
cmps
dec
hlt
call
and
xchg
mov
ds
xor
xchg
pop
ror
add
sub
out
sub
outs
jl
(bad)
bnd
xchg
push
pop
push
rcl
outs
xchg
js
xor
sub
inc
xor
xchg
push
fmul
(bad)
(bad)
sbb
cmp
add
or
nop
aas
or
dec
add
sbb
mov
es
adc
xor
pop
dec
repz
jnp
jmp
lods
cmp
and
stos
test
popf
stos
push
mov
jecxz
(bad)
(bad)
mov
pop
xor
xor
fld
leave
pop
test
mov
rcr
jnp
push
in
(bad)
cli
inc
adc
icebp
mov
push
push
les
inc
icebp
ror
in
rcl
sbb
icebp
cdq
sub
pushf
xchg
push
(bad)
mov
je
adc
jp
dec
push
test
adc
pop
adc
aaa
sar
out
or
mov
dec
mov
sbb
push
sbb
pop
daa
ficom
mov
leave
xor
cmp
bound
stc
ret
mov
sbb
mov
pop
je
sbb
int3
pop
inc
and
or
push
ss
ins
aam
dec
xchg
pop
jmp
mov
pushf
jns
dec
ja
outs
xchg
cwde
ret
mov
adc
adc
outs
xor
sbb
jno
push
fcmovnbe
cli
dec
cli
not
call
push
xor
(bad)
mov
iret
add
mov
pop
test
adc
cmp
outs
imul
mov
push
xchg
scas
mov
or
add
scas
xchg
ret
sbb
jns
stc
mov
iret
jb
sbb
xor
jge
push
cmc
call
lods
mov
lea
mov
jecxz
loop
jno
je
add
jle
jbe
sbb
les
icebp
call
jge
jb
mov
jmp
(bad)
dec
pop
jmp
sub
pop
clc
test
push
or
cmp
cmp
mov
(bad)
fnstsw
stc
lahf
das
fst
into
mov
pusha
leave
ret
sbb
adc
cs
cmc
retf
pop
data16
push
ja
dec
(bad)
jecxz
mov
xlat
cli
call
fcos
xor
mov
pop
add
cmp
mov
(bad)
fwait
loop
push
sub
lods
sbb
cmp
or
xchg
mov
jb
mov
popa
outs
cmp
stos
sbb
stos
or
les
(bad)
pushf
jno
mov
sahf
dec
cmp
push
sbb
xor
pop
outs
jmp
imul
xchg
cmc
cli
xchg
mov
fcom
sahf
aaa
or
imul
inc
cmp
in
jg
pop
xchg
out
stos
pmulhw
dec
aam
mov
es
imul
out
sub
lahf
dec
cmps
fsubr
push
jbe
fisubr
jns
aad
add
ins
xor
stos
cdq
mov
shl
mov
jge
jecxz
js
and
push
or
ja
and
jns
data16
dec
je
dec
test
leave
std
mov
mov
lea
mov
stos
nop
cwde
mov
xor
rcl
xchg
mov
add
retf
cld
movs
xchg
or
xor
(bad)
pop
pop
adc
jle
push
mov
data16
lock
push
leave
inc
jmp
mov
fsubr
jl
aad
pushf
lock
in
jns
pop
dec
push
ss
push
or
rcr
pop
test
pop
mov
adc
push
aas
outs
clc
js
loopne
mov
les
pop
add
jle
xchg
int
and
mov
mov
or
push
lods
pushf
cmp
int
shl
sbb
mov
(bad)
inc
inc
fiadd
inc
mov
xlat
mov
push
adc
xlat
push
add
xchg
out
cld
jb
adc
sti
into
pop
test
cli
cmp
cdq
retf
gs
sub
push
out
xchg
jecxz
push
sub
sub
push
mov
cmp
int3
(bad)
sub
rcr
pcmpeqd
mov
sahf
dec
js
mov
push
inc
stc
test
push
mov
mov
xor
mov
ss
cmp
sub
xor
(bad)
push
ins
gs
fadd
jae
mov
cs
cmc
cmps
sbb
movs
shl
mov
fsub
enter
out
rcl
xchg
adc
mov
sub
mov
pop
xor
in
cmps
mul
jp
xor
lea
out
cmp
fsubp
test
out
pop
fdivr
pop
jnp
pop
fstp
push
movs
xor
mov
inc
pushw
add
out
jno
sbb
push
jnp
in
fistp
jmp
retf
mov
scas
sbb
retf
pop
mov
sbb
sub
cmp
mov
in
mov
outs
in
add
dec
bound
rol
scas
jge
in
sti
cmp
push
cmp
mov
mov
dec
mov
add
pop
scas
cli
retf
retf
stos
push
and
nop
cmp
in
dec
(bad)
xor
pop
dec
xchg
cmp
dec
call
inc
sbb
popa
enter
push
test
loopne
add
call
scas
adc
xor
sub
(bad)
fs
pop
cld
mov
adc
push
sbb
cmp
cmp
jge
adc
outs
stos
mov
int
pop
cmc
inc
sub
sub
int
int
xchg
pusha
adc
jge
popf
mov
jmp
fsubr
std
inc
scas
js
shl
or
fadd
mov
rcl
push
arpl
aas
fsubrp
xchg
fcomp
lds
xchg
push
(bad)
mov
test
cmpxchg
test
daa
bound
loopne
dec
imul
push
out
xor
push
xor
mov
cld
movs
add
mul
mov
mov
inc
shr
inc
or
repz
shl
repnz
lahf
mov
mov
sub
daa
out
(bad)
ins
xchg
imul
xor
xor
adc
inc
jecxz
mov
add
in
out
daa
sub
(bad)
cmp
inc
in
mov
sbb
xchg
scas
cs
push
jmp
pusha
fbld
mov
mov
dec
mov
xchg
shr
push
jmp
call
xor
test
aad
sub
adc
and
icebp
push
lds
imul
adc
aas
cli
outs
(bad)
jmp
mov
mov
imul
adc
call
fs
pop
xor
js
sub
sbb
mov
call
rol
or
sub
push
sbb
jb
retf
scas
jo
rcr
popf
push
clc
mov
test
xor
dec
mov
fnstenv
mov
push
xchg
in
inc
inc
jecxz
cmp
loop
inc
mov
adc
je
rol
out
shl
mov
movs
movs
mov
cmps
and
jns
clc
shl
push
push
je
push
inc
ins
ds
dec
inc
out
mov
dec
jmp
xchg
xor
int
rcl
leave
ja
call
lods
sbb
pop
add
sbb
in
push
(bad)
mov
sub
out
loop
jp
push
push
stos
fld
cmp
mov
xchg
(bad)
in
mov
and
out
jg
js
push
push
cmp
(bad)
pushf
and
xchg
outs
sbb
das
jmp
cmp
pop
call
aad
adc
ret
aas
mov
outs
jns
scas
dec
enter
aas
sbb
push
push
fs
lock
jmp
sub
cmp
push
(bad)
cmp
outs
push
adc
adc
dec
cwde
hlt
mov
mov
push
cmp
std
scas
adc
int
mov
cmp
mov
stos
sbb
pop
lods
js
ins
pusha
sub
jge
ret
hlt
jo
cs
mov
shl
popa
cmp
(bad)
imul
cmp
cmp
nop
xchg
inc
pop
retf
cwde
lods
mov
sub
sbb
jb
out
mov
pop
push
test
je
inc
and
mov
sub
sbb
push
addr16
rcl
fst
pop
adc
mov
je
cmp
pushf
xor
xchg
inc
push
pop
nop
adc
(bad)
push
inc
fcom
es
(bad)
lock
mov
jecxz
sbb
add
and
out
iret
int3
outs
jo
ins
aas
pushw
popf
sar
hlt
(bad)
jecxz
fs
std
retf
cmp
test
aas
adc
pop
sub
ins
test
push
cmp
repnz
pop
adc
mov
retf
inc
mov
dec
(bad)
loop
pop
jge
rcl
lods
cmp
into
shr
or
add
inc
mov
mov
sti
mov
xchg
sahf
xor
add
and
jp
pop
je
js
cmc
leave
test
or
in
hlt
enter
shr
cmp
cmp
push
cmp
pop
(bad)
xchg
push
lds
sbb
pop
xor
jb
lods
xor
std
shl
jp
mov
imul
addr16
inc
xor
nop
pusha
shl
pushf
leave
add
test
or
int
dec
fwait
push
in
pushf
xlat
xlat
sub
jmp
inc
sbb
fmul
cmp
scas
sbb
inc
adc
inc
xchg
xchg
stos
lods
(bad)
test
xor
gs
sub
hlt
jmp
shl
adc
rcr
inc
dec
data16
xlat
cmp
add
adc
add
add
pop
add
add
inc
add
add
mov
add
sub
add
jmp
add
add
add
add
add
add
add
add
add
add
stc
add
add
inc
or
add
add
add
adc
add
add
jno
and
add
add
lods
or
add
sbb
add
add
add
add
add
add
add
xchg
add
cmc
add
add
add
add
add
add
add
add
add
popa
add
add
out
add
add
add
add
add
add
add
push
add
add
add
add
cld
add
add
add
pop
add
add
add
pop
add
add
mov
add
mov
add
rol
pop
xchg
fld
add
mov
add
add
add
add
add
add
xor
add
add
add
add
adc
add
add
add
hlt
call
add
add
add
or
add
add
add
add
add
xchg
add
add
add
cmp
add
repnz
add
add
aam
pop
cmc
add
add
mov
add
add
add
add
push
bound
add
add
add
sub
mov
mov
ja
call
xor
dec
and
not
cmovs
daa
inc
fstp
cli
push
jns
ins
dec
dec
rcr
mov
or
push
or
inc
jl
aas
std
sbb
(bad)
shl
aaa
cli
inc
scas
fwait
bound
punpckhwd
(bad)
sbb
dec
int
xor
scas
push
jmp
mov
in
in
jbe
mov
fldcw
stc
int
xchg
add
loope
sub
in
mov
fstp
cs
(bad)
push
jae
pcmpeqw
fsubr
mov
inc
and
sub
dec
js
fs
sbb
pop
xor
xor
mov
test
sbb
(bad)
arpl
mov
or
add
mov
mov
sbb
sbb
cli
icebp
jmp
inc
fld
in
sbb
mov
cmps
enter
movs
out
cmps
lods
retf
aaa
(bad)
push
pop
adc
cmp
and
jg
dec
loope
mov
cwde
fwait
inc
(bad)
mov
lahf
ror
imul
addr16
jne
dec
ret
mov
(bad)
jge
bound
jecxz
xor
sub
mov
pop
scas
xchg
cmp
sub
mov
lea
mov
fimul
mov
imul
div
popf
je
enter
in
js
add
push
mov
pop
ins
mov
adc
push
out
sub
fs
addr16
jmp
inc
pusha
lock
pushf
cmpxchg8b
mov
fimul
xor
ins
mov
jbe
in
sub
push
cmps
in
mov
ins
js
push
mov
mov
nop
sysexit
xchg
mov
jns
or
mov
cmp
xchg
call
js
pusha
push
test
das
jmp
into
jge
(bad)
fsubrp
mov
sub
mov
sub
sti
shr
pop
xchg
inc
sahf
add
fadd
cmp
outs
leave
lods
dec
push
mov
cwde
js
fldenv
mov
mov
stos
sub
mov
std
pop
iret
inc
sub
mov
(bad)
xchg
sbb
outs
push
mov
fadd
shl
jle
shr
mov
and
ficomp
(bad)
sbb
xchg
sub
nop
cvtdq2ps
ins
pop
mov
sahf
mov
xchg
loopne
jo
sub
rcr
fidivr
hlt
xchg
or
cmps
add
inc
cmpxchg
xchg
or
dec
cmp
pop
jmp
rcl
jmp
jp
(bad)
cmp
call
fdiv
add
cmp
jcxz
loope
jl
mov
dec
fstp
shl
cmp
adc
pop
jecxz
retf
jno
int3
shr
(bad)
jle
nop
je
pop
cmps
xchg
lods
sbb
adc
or
jb
rcl
mov
jo
pop
and
scas
enter
inc
fs
jmp
dec
sar
call
in
pushf
xor
push
xchg
xor
dec
push
jmp
div
fisttp
das
inc
pop
xchg
adc
or
mov
pop
and
mov
int
pusha
addr16
stos
sar
cmps
mov
hlt
scas
rcl
dec
(bad)
outs
jge
mov
sti
jnp
enter
adc
or
in
out
std
push
das
push
xor
dec
jg
cld
loope
cmp
cmps
jne
retf
inc
mov
ja
inc
and
mov
jecxz
(bad)
pop
mov
pop
inc
mov
push
ja
mov
xchg
mov
add
lahf
add
xor
adc
pop
rcl
push
sub
or
mov
cmp
mov
mov
out
add
or
dec
push
mov
cmc
jl
xchg
jbe
jns
shr
out
or
outs
adc
fld
ins
fwait
xchg
add
ins
ret
add
js
fcomp
pop
or
and
pop
imul
sub
xchg
and
cmp
adc
imul
in
push
and
cli
and
out
div
sub
in
and
into
(bad)
xor
retf
xor
and
repnz
inc
jecxz
cmp
retf
shl
push
pop
sbb
sbb
sbb
push
xchg
mov
jae
xor
xor
mov
or
sbb
cmp
xchg
movs
test
lea
and
out
mov
push
das
gs
scas
mov
jnp
dec
loop
out
ror
pop
jmp
inc
pop
cmps
sbb
xchg
pushf
test
add
push
and
das
retf
into
aad
pop
fsubr
dec
or
in
xor
je
cmps
pop
sbb
mov
cmp
mov
cld
xor
or
lahf
cmps
sbb
add
mov
inc
iret
cmp
cmp
inc
ja
mov
outs
or
inc
cmp
mov
call
mov
fiadd
or
loop
push
jno
imul
js
pop
and
xchg
fcom
por
stos
dec
push
jbe
sbb
sub
mov
add
cld
fs
and
adc
push
out
ins
in
lods
daa
add
cmp
inc
(bad)
mov
in
out
push
test
sub
test
data16
shr
popa
inc
pop
(bad)
adc
mov
mov
pop
push
dec
push
adc
mov
inc
call
cmp
add
pop
or
retf
fdivr
pop
xchg
mov
das
push
in
jmp
sub
(bad)
pop
rol
(bad)
in
xchg
mov
mov
cmp
inc
into
jg
arpl
sbb
mov
jb
popa
in
cwde
das
mov
sbb
fsub
div
and
pusha
ret
mov
xor
js
js
fcomp
xor
cmp
neg
mov
rcr
lds
int3
ins
into
adc
sbb
xor
into
add
pop
outs
das
call
pop
mov
mov
imul
xchg
lahf
jmp
mov
loope
and
xor
popf
sub
idiv
mov
sbb
enter
mov
mov
inc
pop
fisub
jns
cwde
xlat
pusha
hlt
jne
jno
add
pop
dec
stos
out
push
mov
cmp
out
out
pop
cld
imul
fidivr
retf
mov
dec
add
aad
add
mov
mov
fstp
call
push
cmps
dec
sar
push
sub
ins
sbb
aam
aad
or
(bad)
sub
xlat
std
jecxz
push
std
push
sbb
push
push
lock
or
enter
xchg
out
inc
push
sub
jae
lea
outs
push
dec
pop
cli
jne
es
inc
movs
shr
imul
int3
fsub
inc
addr16
out
mov
scas
sub
pop
call
cmp
gs
or
sub
mov
xor
(bad)
test
inc
shl
(bad)
dec
stc
rep
pop
mov
fidiv
(bad)
stos
fdivr
and
pop
sub
mov
repnz
mov
jbe
stos
pushf
mov
lock
loopne
cmp
xchg
lds
aad
sar
outs
push
fwait
out
add
mov
repz
cmp
push
push
int
cmc
jg
(bad)
rcl
hlt
and
test
pop
adc
ins
stc
in
out
out
seta
cmp
cld
rol
sbb
pop
outs
pop
enter
fdiv
rcl
gs
retf
cmp
adc
data16
dec
stos
sbb
fwait
add
pop
or
jecxz
inc
xchg
cli
adc
inc
clc
sub
lock
adc
xchg
cmp
sbb
movs
shr
cmps
add
adc
lds
mov
jl
sbb
ins
push
sti
(bad)
stos
cs
lea
in
cmp
hlt
mov
sbb
mov
xchg
jl
push
sub
pop
cmp
in
scas
neg
xchg
sub
push
test
movs
mov
stos
sub
and
mov
pusha
loope
je
sbb
in
add
push
dec
fdivr
not
pop
push
loope
ds
inc
mov
std
adc
or
std
xchg
cmp
add
push
mov
jmp
xor
sbb
sbb
pop
das
or
mov
loop
jmp
sub
xchg
adc
fild
and
test
fmul
stos
push
sbb
pop
mov
imul
imul
bound
push
mov
mov
jecxz
repnz
fistp
popf
cdq
and
xor
cmp
mov
ss
xchg
fwait
shl
sub
dec
mov
cwde
xor
mov
arpl
add
popf
lods
mov
rcr
outs
push
jb
inc
and
fisttp
sbb
add
push
jecxz
cld
jnp
add
push
addr16
lahf
sub
adc
and
and
mov
inc
ficomp
push
imul
xchg
dec
js
xchg
mov
lods
xchg
enter
push
or
pushf
sbb
mov
test
sbb
rcl
xchg
dec
inc
fsubr
lahf
jmp
dec
stos
das
daa
pop
out
cmp
xchg
jp
fst
repz
sar
add
out
mov
shl
add
push
push
cmp
dec
pop
idiv
stc
fist
and
and
add
ret
add
adc
sbb
add
mov
push
(bad)
mov
stos
mov
xchg
inc
mov
outs
jp
stos
(bad)
mov
or
aam
and
loopne
pop
dec
lock
add
jo
xor
jae
call
aam
scas
mov
stos
ins
ins
les
stc
mov
jge
loop
lds
sub
std
xchg
fcomp
ret
jl
retf
loop
mov
mov
dec
jecxz
push
(bad)
and
fwait
adc
adc
test
loop
mov
adc
mov
retf
add
push
lods
clc
cwde
int
fisttp
cmp
mov
mov
mov
push
outs
fistp
xchg
in
xor
fisubr
fscale
imul
push
rcr
push
je
pop
in
pop
sbb
cmps
push
cdq
ret
jb
cdq
sub
sub
mov
xchg
jae
call
sbb
into
stos
add
add
enter
add
add
add
add
add
mov
das
add
pop
dec
add
dec
add
add
add
add
add
add
loope
add
add
add
dec
add
add
aam
add
add
dec
add
sub
add
test
add
add
add
add
les
dec
or
add
jb
add
add
add
add
add
jg
xchg
add
add
out
dec
adc
add
add
add
add
add
call
add
or
add
add
add
add
add
add
mov
ins
add
ja
add
add
add
add
add
add
add
cmp
cmps
stc
cli
test
and
push
ins
push
cli
cld
addr16
push
outs
mov
icebp
xchg
pop
pop
loope
daa
into
ret
popf
(bad)
(bad)
pop
xchg
push
enter
jp
ins
sbb
enter
pop
jae
dec
imul
out
neg
sbb
cli
es
add
inc
(bad)
mov
add
icebp
test
rcr
jl
pop
and
or
xlat
xchg
push
repz
ret
add
xchg
cwde
sbb
push
push
xor
rcl
or
xor
test
arpl
jge
sti
jmp
and
enter
cmp
out
mov
fistp
push
dec
(bad)
jge
mov
and
retf
inc
jbe
dec
pop
xor
mov
scas
lds
push
pusha
(bad)
pop
mov
pop
or
and
dec
pop
add
and
aad
mov
cmp
cmp
ins
cli
cmp
cmp
pop
jno
xor
push
sti
cmp
test
jno
and
outs
push
pop
dec
mov
mov
(bad)
inc
mov
xlat
js
movq
out
lods
cmps
(bad)
mov
stos
add
fcmovnbe
sub
in
xchg
hlt
inc
mov
stos
bound
inc
push
or
dec
pop
ja
or
fild
mov
int3
gs
push
pop
aas
in
hlt
cmp
push
dec
jmp
jg
movs
jp
pop
(bad)
cmp
test
shr
adc
scas
or
mov
leave
mov
test
ficomp
push
dec
sub
gs
add
shl
dec
cmc
adc
and
mov
sbb
cdq
leave
mov
(bad)
mov
popf
mov
inc
and
ja
(bad)
aad
push
xor
cmp
jle
hlt
(bad)
cld
or
adc
pushf
inc
xchg
fldcw
mov
sub
pop
adc
(bad)
fs
lea
cli
inc
sub
jmp
icebp
cmp
pop
mov
xchg
fdivr
pop
mov
pop
int
les
or
in
jae
rol
dec
sbb
xor
sbb
loopne
sahf
and
mov
dec
sbb
jb
jno
push
inc
fucomip
sub
dec
pop
sbb
add
outs
cld
xchg
ins
aas
mov
out
ds
dec
mov
lods
xchg
ss
sub
addr16
inc
add
push
(bad)
xlat
pop
xchg
out
fist
add
jge
push
xor
cmp
(bad)
test
aam
dec
add
pop
push
or
mov
push
cmp
std
out
mov
adc
movs
test
sub
repz
mov
retf
pop
test
mov
pop
in
cmps
test
popf
in
cdq
dec
inc
and
dec
int
pusha
inc
dec
jle
inc
mov
push
and
jp
int3
(bad)
cmp
push
clc
jbe
xchg
fisubr
imul
loop
stc
mov
daa
mov
xchg
adc
mov
or
call
fmul
pop
jp
cmps
xor
and
lods
xor
push
imul
mov
mov
add
scas
fwait
adc
imul
cmp
cmp
lds
xchg
ss
pop
xor
dec
imul
aaa
fld
sub
pop
mov
jbe
mov
jle
outs
test
cli
(bad)
retf
lods
jnp
inc
push
rcl
lahf
fdivr
pusha
xchg
sub
sbb
xchg
dec
mov
rcr
ds
sbb
in
add
js
push
mov
stos
add
aad
jl
in
mov
dec
sahf
cmp
pushf
cmps
sub
rol
xor
xchg
movs
adc
pop
loop
jle
add
sbb
xor
aaa
rcr
out
arpl
pushf
fwait
or
icebp
mov
es
dec
es
cwde
leave
pop
fcomp
rcr
sub
or
dec
mov
outs
xchg
(bad)
mov
repz
cdq
not
and
mov
pop
inc
fsub
shl
fwait
cld
push
xchg
dec
nop
or
out
jp
out
pop
sbb
fsubrp
pop
jno
shl
push
std
push
ficomp
cli
sar
cmps
mov
cmp
adc
or
daa
enter
push
adc
inc
mov
pop
in
call
xor
outs
mov
enter
mov
push
(bad)
popa
fcomp
out
mov
or
dec
push
xchg
sub
scas
and
lahf
add
std
fstp
int
sub
stc
adc
ret
pop
mov
xchg
cdq
das
mov
xor
xor
popa
icebp
wbinvd
(bad)
pop
push
in
out
xchg
jne
fsubr
std
jge
sub
daa
sahf
mov
jecxz
jmp
xor
adc
xor
jmp
inc
stos
and
and
push
cmp
sub
pop
sbb
lds
(bad)
je
sbb
fistp
dec
sub
or
imul
jae
fist
into
out
inc
mov
mov
sub
xor
ja
enter
not
sub
xor
mov
bound
cmp
sub
mov
inc
inc
aam
call
retf
adc
(bad)
fs
mov
mov
dec
xchg
ret
push
sahf
mov
outs
paddsw
popa
std
pop
mov
add
pop
rcl
les
bnd
clc
pop
(bad)
stos
mov
fisub
les
push
fisub
sar
scas
sbb
ds
xor
sbb
dec
pop
in
and
add
in
or
es
add
jnp
aas
scas
popa
add
adc
in
js
inc
cmp
ds
int
xchg
push
movs
xchg
dec
popf
inc
xor
xchg
or
sub
ret
pop
cmp
push
xchg
mov
dec
out
mov
adc
call
cmp
push
adc
ret
bound
sub
push
or
xchg
cmp
push
xchg
xor
mov
pop
sti
jne
(bad)
push
outs
nop
mov
jp
push
fcom
pop
dec
icebp
cmps
or
jb
sbb
into
das
cmp
int3
movs
cmp
xor
xchg
movs
jmp
add
mov
xchg
out
js
or
add
push
sub
repz
(bad)
inc
sbb
pop
xchg
and
imul
xor
bound
fmul
dec
xchg
push
cmps
add
mov
mov
movs
hlt
outs
(bad)
in
ins
push
in
loopne
mov
enter
inc
or
in
aaa
ror
popa
adc
or
scas
mov
add
scas
mov
rol
jno
mov
test
rcr
inc
ds
out
push
fadd
sbb
call
out
rcl
add
aas
fbstp
aas
fldcw
pop
out
lods
push
add
loopne
(bad)
or
sub
cmp
aaa
imul
pop
or
pop
cs
jnp
xor
aaa
inc
cld
dec
and
(bad)
fstp
cmp
xlat
data16
ror
(bad)
fisttp
adc
sub
aaa
jge
dec
and
push
jns
lods
bound
xchg
xor
jmp
fdivr
in
xor
adc
jmp
mov
push
mov
and
pop
call
xchg
bound
out
popf
sbb
cmp
inc
test
push
sub
(bad)
(bad)
pop
cld
mov
(bad)
mov
or
mov
scas
jae
jl
jo
sub
sti
clc
pop
jae
sbb
xlat
mov
aam
int
pop
sbb
jae
ins
pushf
dec
pop
jo
xor
fimul
call
inc
cli
dec
and
dec
sub
push
sub
sub
fcomp
popa
cmp
or
push
das
jmp
sub
jl
dec
inc
dec
test
enter
stos
inc
push
gs
sbb
aad
cmp
inc
mov
test
into
xchg
pop
into
arpl
in
cdq
adc
add
dec
movs
lahf
in
push
inc
add
out
pop
or
jbe
adc
dec
pop
js
ins
pop
jmp
lock
shl
xchg
lods
sahf
pushw
xchg
imul
out
xchg
mov
inc
dec
inc
pop
mov
sub
and
push
and
xor
cli
xchg
pushf
mov
ret
cli
xchg
adc
jge
sub
pop
idiv
dec
rcr
push
mov
jmp
jmp
mov
int
cmc
stc
mov
loop
mov
cmp
loope
jmp
sbb
cmc
or
cs
xchg
push
jmp
fsub
imul
sbb
sbb
arpl
sub
inc
jo
sbb
cdq
fs
jmp
lods
aas
int3
xchg
inc
xor
les
popa
pop
sub
xchg
xor
in
adc
add
ins
repz
mov
push
xchg
data16
(bad)
cmp
push
pop
xlat
pushf
mov
cs
mov
mov
push
int3
xchg
in
mov
and
pushf
in
cmp
adc
sbb
push
fist
cmp
mov
stos
add
dec
jl
scas
mov
outs
mov
lahf
push
repz
dec
ss
ja
cmps
fiadd
loop
or
cmps
mov
outs
jmp
scas
mov
dec
push
mov
aas
mov
inc
ds
arpl
sbb
aam
mov
sub
adc
jbe
jmp
pop
add
mov
xor
js
sbb
jae
popa
add
inc
(bad)
out
mov
and
les
push
xchg
pop
push
fidiv
mov
out
add
pop
stc
mov
and
imul
mov
ins
pop
movs
dec
pushf
imul
daa
add
mov
fidivr
xlat
cmp
mov
(bad)
mov
mov
scas
xor
repnz
xor
xchg
test
jne
push
mov
and
(bad)
iret
xor
call
adc
mov
mov
push
mov
pop
sub
inc
jg
jne
xor
xchg
mov
jmp
or
jno
adc
dec
fcomp
cli
scas
pop
and
or
sti
repnz
adc
ror
or
fstp
ret
or
rcr
test
push
call
xchg
(bad)
test
pop
in
xchg
and
call
std
or
fs
std
repz
push
xchg
ror
fiadd
xor
add
mov
add
push
add
add
add
xor
add
add
add
adc
dec
test
add
add
add
xlat
add
add
add
jbe
add
add
add
add
add
add
add
add
add
sbb
add
or
add
and
jbe
add
add
add
movs
add
call
add
add
add
jae
add
add
add
add
mov
add
mov
add
add
add
movs
mov
add
add
fild
retf
add
test
lea
add
test
add
mov
add
add
lods
mov
xchg
sub
dec
fucom
outs
or
inc
sub
xchg
mov
dec
xor
and
mov
pop
xor
loopne
popf
inc
pop
dec
daa
cmc
inc
inc
outs
jnp
loope
mov
iret
mov
div
je
retf
dec
call
inc
lds
pmulhuw
xlat
cmp
(bad)
(bad)
(bad)
les
sbb
and
ins
jbe
xor
les
dec
arpl
mov
(bad)
dec
mov
clc
fistp
and
imul
in
adc
mov
mov
(bad)
mov
cmc
adc
pop
xlat
test
mov
loopne
sahf
repz
pop
repz
jns
xchg
push
cld
into
adc
xor
push
int3
xchg
inc
add
xor
out
adc
outs
jmp
cmps
mov
sub
pusha
gs
lods
sahf
xchg
xchg
test
addr16
or
imul
mov
enter
sti
data16
cmp
fdiv
div
cmp
jge
lea
pop
jl
icebp
adc
out
lock
loope
adc
je
push
push
mov
jb
adc
daa
push
cs
stos
lds
xor
mov
dec
xlat
pop
mov
add
pop
and
push
jbe
xchg
mov
dec
dec
inc
out
loop
jl
retf
int3
out
fldcw
mov
ja
ins
addr16
inc
je
icebp
xlat
jnp
push
arpl
dec
xchg
retf
add
popf
xor
mov
sar
dec
les
xor
mov
cs
cmp
retf
mov
adc
mov
xchg
cmp
sbb
xchg
cmp
push
imul
and
movs
addr16
maxps
cmps
jg
sub
mov
mov
pop
mov
sar
dec
and
pop
int3
inc
jbe
dec
mov
jnp
loopne
iret
(bad)
push
jge
pop
push
xchg
jns
(bad)
out
pop
nop
cmp
or
jl
mov
outs
loopne
cs
push
es
and
movs
test
mov
das
dec
and
push
mul
icebp
pavgb
jnp
rcl
dec
push
cmp
cmp
push
iret
jl
push
aad
xchg
out
pusha
jmp
xchg
adc
mov
pop
scas
mov
enter
pop
jge
jmp
outs
das
in
fst
inc
cmp
mov
jp
cli
enter
cld
hlt
shl
outs
mov
retf
inc
lahf
rcl
pushf
jbe
cmp
xchg
lea
lds
xchg
add
and
rcr
fdiv
sbb
jmp
pop
clc
dec
das
push
push
mov
and
stc
add
xor
outs
xchg
xchg
and
addr16
fadd
push
daa
xor
sub
sub
fiadd
out
xchg
xor
jne
les
es
mov
or
(bad)
push
jmp
data16
mov
clc
pop
inc
add
lods
mov
mov
cmp
clc
cmp
pop
cmp
push
div
jbe
bound
rcl
inc
sub
sbb
pop
push
popf
fisttp
rcr
add
push
arpl
push
jg
lods
loop
jns
out
mov
push
lods
mov
cmp
pusha
jne
shl
dec
sbb
inc
inc
nop
int
les
sbb
xor
mov
mov
fisub
mov
out
out
sub
mov
(bad)
adc
into
cmc
and
jbe
nop
cli
into
out
cs
add
pop
push
or
cmovbe
mov
ret
sbb
sub
pushf
and
xlat
(bad)
xchg
arpl
mov
jae
cwde
push
clc
pop
add
(bad)
rcr
push
push
inc
lock
mov
sub
mov
push
mov
aad
jle
cmps
arpl
cmp
dec
adc
push
(bad)
and
sub
push
inc
fwait
inc
add
push
repnz
sbb
pop
into
xchg
fwait
sub
add
mov
jge
lods
es
sbb
sahf
sub
or
add
mov
leave
scas
adc
push
pop
cmp
add
sbb
inc
sbb
test
add
cwde
clc
cmp
aaa
sub
and
pop
int3
test
jmp
shl
inc
inc
in
mov
inc
add
mov
in
mov
xchg
jg
xchg
(bad)
test
cli
xchg
inc
bound
xlat
cmp
jp
cmp
mov
and
mov
jmp
cmp
xor
and
jne
push
add
out
dec
sbb
test
xchg
call
jecxz
(bad)
ror
lock
sub
aad
aam
push
into
es
mov
out
and
retf
ins
std
mov
jle
add
fs
aad
rcr
out
xor
sbb
repz
fsub
js
cs
cmps
jns
in
jbe
adc
aad
test
mov
mov
pop
pushf
inc
mov
jp
das
lock
push
sahf
sub
int
jae
movs
(bad)
mov
retf
cld
clc
jns
cdq
std
and
mov
pop
push
in
ins
hlt
push
sbb
scas
pop
jle
mov
jle
adc
jmp
fimul
pop
sub
pop
jp
pop
sbb
sahf
xchg
cld
push
fild
jle
sar
fild
or
stc
(bad)
xchg
cmp
mov
mov
mov
jae
xchg
sub
push
push
jmp
out
lods
and
sbb
jmp
loopne
daa
or
into
ss
iret
or
lock
xchg
repz
test
mov
(bad)
inc
lods
xchg
mov
xchg
mov
inc
mov
ss
mov
mov
imul
cmp
ficomp
push
(bad)
shl
adc
sub
leave
pop
fbld
popf
mov
mov
data16
cmp
pop
jb
aas
sbb
cmp
loopne
iret
les
mov
loope
in
sahf
mov
and
add
mov
xor
fisttp
xchg
(bad)
shl
lea
jns
jmp
pushf
push
add
and
jbe
pop
mov
jae
jg
and
sub
mov
push
aas
jmp
add
xor
mov
pop
(bad)
and
cmc
or
enter
xor
retf
shr
and
xor
push
neg
cmp
movd
jae
mov
sub
mov
loope
sub
or
mov
cmp
imul
out
and
mov
loopne
stos
enter
mov
(bad)
aas
inc
xchg
call
push
dec
clc
je
push
cmp
push
jbe
pop
pop
jge
inc
ret
(bad)
addr16
mov
inc
xchg
cmp
jl
movs
mov
jecxz
test
in
dec
inc
or
cmp
out
repz
inc
loopne
icebp
adc
fstp
mov
mov
mov
out
mov
jecxz
pop
repnz
call
sub
sti
mov
xor
push
bound
dec
addr16
mov
stc
adc
test
inc
mov
ret
cwde
cmp
mov
js
or
and
pop
inc
icebp
cwde
cmc
xchg
pop
mov
pop
pop
mov
js
imul
jmp
cwde
mov
loope
mov
cmps
repz
movs
and
in
cmps
jmp
mov
into
sub
es
out
stos
repnz
mov
mov
test
push
mov
sub
lahf
mov
fadd
popf
dec
mov
fdiv
rcl
fadd
(bad)
and
sbb
aad
sub
bsf
int
jne
jbe
mov
sub
outs
and
outs
test
out
clc
outs
shr
retf
or
jnp
adc
inc
cdq
bound
or
test
add
or
mov
ja
leave
and
rcr
mov
fdivrp
(bad)
aad
icebp
aaa
adc
add
xchg
jp
or
ss
jbe
add
fcomip
lds
add
pop
les
jo
mov
cmp
in
lgs
outs
pop
jle
and
cld
dec
add
bound
fbstp
xor
push
(bad)
sahf
cld
sub
and
adc
sbb
and
div
shl
mov
(bad)
and
or
cmps
in
retf
mov
sbb
cld
ds
sbb
out
test
sbb
es
dec
and
cmp
test
dec
adc
pop
xor
and
mov
jbe
lahf
mov
imul
sub
cmp
out
xor
popf
(bad)
rol
mov
add
fs
les
dec
and
adc
sub
push
dec
dec
mov
add
in
call
cs
add
ret
fcmovu
es
xor
or
cli
cmp
repz
jg
pusha
out
or
dec
mov
push
cmp
cmp
repnz
sti
enter
(bad)
push
dec
fwait
xchg
ds
cmps
call
sub
inc
add
inc
ds
into
push
xchg
mov
push
sbb
adc
xchg
cmc
mov
or
mov
dec
sub
in
in
push
jo
cmp
mov
mov
imul
push
scas
sti
out
neg
sbb
adc
lahf
scas
cs
sahf
adc
pop
std
push
or
test
enter
fmul
pop
bnd
aam
clc
mov
inc
adc
xchg
(bad)
test
or
xor
mov
pushf
loop
mov
arpl
ficomp
stos
jl
jmp
mov
mov
dec
or
mov
arpl
stc
dec
adc
xor
jle
mov
mov
mov
mov
mov
mov
and
ror
pop
jo
or
fisub
js
icebp
shl
jb
jb
jge
mov
ja
jnp
xchg
sub
ins
ret
jmp
jl
dec
add
addr16
(bad)
sub
out
daa
ret
adc
or
jno
mov
cmps
(bad)
mov
push
push
(bad)
mov
retf
(bad)
sbb
stc
mov
mov
jo
cmp
cmp
sbb
inc
mov
push
mov
call
(bad)
fiadd
add
pop
add
loop
add
add
add
jle
add
add
icebp
add
fild
add
pop
add
fld
add
push
add
sbb
add
dec
add
add
add
add
add
add
jge
add
add
add
add
add
add
add
add
add
add
add
cmc
add
ins
add
add
add
and
mov
add
add
add
add
add
add
add
push
add
add
iret
add
add
add
xlat
pop
js
fild
enter
add
add
add
add
add
add
add
add
add
add
add
ret
icebp
xor
and
jns
call
cmp
sbb
jae
loopne
es
sub
inc
jo
sbb
xor
outs
or
pop
test
jo
movs
mov
fstp
pop
loop
rcl
repnz
or
push
mov
fidivr
fild
aas
dec
fisttp
inc
lahf
xchg
and
sub
sahf
cmp
pop
fmul
stos
out
cwde
call
test
out
jns
cli
icebp
test
out
mov
push
div
mov
jg
sub
push
sbb
jge
std
push
cmp
cmps
sbb
lods
push
inc
jle
xchg
enter
nop
les
ins
lock
sub
int
pusha
sahf
stc
sbb
movs
ss
xchg
xchg
xor
xlat
mov
outs
adc
xchg
dec
in
push
cmc
arpl
(bad)
lods
jl
sub
cmp
test
dec
cmc
mov
mov
adc
mov
into
inc
(bad)
sbb
xchg
mov
into
fiadd
xlat
mov
sbb
cmp
ins
out
xchg
xchg
and
fcom
test
sub
les
popa
pop
dec
mov
jno
xchg
leave
pop
call
sbb
sub
fxch
fwait
in
in
dec
out
lds
aad
nop
pop
cmp
mov
add
xchg
xor
gs
movs
lahf
call
jno
or
ret
getsec
or
sahf
dec
add
in
pusha
cmp
movs
cmp
push
mov
loope
lds
aaa
(bad)
jecxz
adc
loopne
inc
push
pop
cli
mov
into
add
jp
outs
jle
sahf
arpl
sbb
pushf
stos
outs
ins
cmp
sahf
push
retfw
les
mov
mov
cmp
inc
int3
data16
test
nop
pop
pop
xchg
push
popf
mov
jnp
mov
xor
iret
pop
repz
mov
xor
dec
cwde
mov
into
popf
jge
inc
inc
stos
lods
mov
stc
stos
push
mov
push
xchg
push
fwait
push
mov
lahf
repnz
outs
(bad)
int3
into
inc
xchg
mov
push
jb
xor
or
mov
cdq
cwde
shl
jo
xorps
imul
xchg
ss
aas
shl
add
push
int3
scas
call
push
jge
or
outs
dec
and
sbb
into
test
and
iret
les
(bad)
mov
sub
call
jmp
(bad)
xchg
or
pusha
jbe
cmp
mov
push
mov
xchg
mov
push
ret
aas
shl
test
loop
push
ror
and
fs
adc
or
stc
mov
jb
loop
ret
sub
adc
mov
mov
inc
popf
dec
mov
aad
jb
lahf
adc
push
fnsave
outs
mov
or
dec
mov
add
pop
mov
inc
mov
loopne
push
aas
and
in
adc
pop
gs
push
adc
in
rcr
adc
pusha
push
jo
mov
cmps
xchg
add
mov
call
jbe
gs
xchg
mov
test
call
popa
jne
les
xchg
jmp
imul
popa
mov
dec
test
test
shl
cmp
and
punpckldq
(bad)
in
mov
mov
hlt
mov
inc
sahf
addr16
ret
push
fdivr
sbb
scas
retf
sub
cli
and
mov
xor
inc
push
adc
ja
pusha
inc
lahf
jmp
pop
test
fs
jb
scas
mov
mul
push
add
icebp
dec
xor
mov
lods
sbb
shl
mov
add
cmp
pusha
cmp
sahf
aas
push
(bad)
inc
test
aad
add
xor
inc
gs
and
aam
test
xchg
xor
rcl
add
call
dec
xchg
xchg
fstp
sub
outs
pop
dec
out
jbe
adc
sbb
and
popa
adc
lods
out
inc
mov
sub
(bad)
xor
cmp
je
data16
or
ficomp
xchg
sub
rcr
xor
sar
repnz
icebp
popf
mov
(bad)
and
cwde
(bad)
sbb
(bad)
stos
jl
lods
shr
std
cmp
pop
retf
imul
lods
inc
mov
cs
push
call
es
push
xor
mov
ja
(bad)
rcl
repz
push
int3
pop
aad
xchg
test
mov
push
scas
cmc
pop
sti
jle
pop
and
add
sub
jmp
pop
out
(bad)
je
dec
int3
pop
mov
inc
fdiv
sbb
test
clc
push
stc
stos
test
mov
mov
sub
mov
nop
pop
das
not
les
mov
not
jge
xchg
cmc
jno
and
ins
daa
jae
adc
cmp
cmp
mov
xor
out
push
push
add
jmp
in
test
ret
jno
das
sub
aas
mov
sub
je
iret
test
add
scas
popf
fidiv
daa
xlat
pop
inc
mov
hlt
xchg
(bad)
sub
js
push
inc
stc
les
mov
in
mov
out
sbb
dec
mov
jmp
shl
int3
in
push
fwait
pop
(bad)
jmp
adc
mov
sahf
(bad)
stos
das
add
jae
cmp
adc
mov
imul
or
or
icebp
xlat
xchg
inc
pop
jmp
and
ret
das
out
out
(bad)
mov
ins
and
mov
sbb
(bad)
pop
in
push
jmp
mov
jmp
enter
mov
ja
mov
out
stos
inc
inc
and
sub
or
loop
aad
fdivrp
mov
cmp
and
mov
out
test
jbe
jns
xchg
(bad)
cmc
xchg
cmps
xor
imul
scas
fld
inc
loope
dec
adc
xchg
add
mov
test
jae
pop
mov
scas
jns
adc
or
push
add
xor
outs
pop
in
push
leave
fstp
push
stos
fmul
cmp
pop
bound
div
dec
retf
dec
cdq
not
test
aad
outs
icebp
adc
les
repnz
arpl
xchg
jne
mov
and
dec
movs
out
out
ins
or
mov
cmp
nop
retf
mov
and
iret
jne
xchg
fdiv
push
shl
push
cmp
adc
pop
push
fxch
jns
and
and
das
adc
sub
das
out
push
mov
outs
popf
mov
jmp
aam
(bad)
pop
lds
dec
xor
sbb
push
ss
jno
in
sbb
dec
jo
inc
(bad)
aas
dec
lods
std
inc
(bad)
pop
js
pop
cmp
idiv
cmp
gs
popa
call
mov
xchg
dec
pop
es
and
loop
call
fwait
cli
pop
div
cmp
push
mov
lods
and
int
xchg
sub
adc
mov
jg
icebp
jmp
dec
push
inc
xor
lods
cmp
push
push
and
mov
loop
inc
loopne
rcr
cli
add
fidivr
movs
mov
or
loop
fcomp
dec
stc
push
adc
in
fisttp
sub
sub
push
push
xchg
test
mov
and
and
cmp
call
sbb
mov
xchg
jae
fmul
pop
pop
je
dec
mov
push
and
and
(bad)
test
add
pop
fs
jo
pop
xchg
jp
adc
jo
jno
pop
mov
xchg
jnp
jmp
lea
ja
repz
and
add
and
ins
mov
cs
je
sar
pop
dec
fld
mov
mov
loope
mov
bnd
and
movs
adc
out
add
sub
(bad)
sbb
push
push
(bad)
push
fbld
mov
sahf
lea
or
outs
scas
sbb
mov
jecxz
dec
push
lahf
movs
jns
push
and
sbb
xchg
clc
mov
xor
mov
fadd
mov
push
ins
add
inc
pop
dec
sti
repnz
push
add
pop
pop
cmp
shl
test
arpl
(bad)
imul
sbb
xor
out
loop
mov
dec
lea
dec
add
pop
xor
pop
(bad)
je
push
inc
gs
inc
loop
sub
mov
dec
imul
add
outs
mov
dec
int
cmps
xor
out
sub
xchg
lods
and
cmps
pop
mov
xchg
fld
sti
ror
(bad)
out
push
cmp
push
mov
pop
xchg
cmp
jno
sbb
imul
push
mov
inc
rcl
jp
and
pop
les
repz
out
mov
dec
in
and
add
shr
out
(bad)
cmp
mov
lock
leave
popf
mov
adc
jns
aam
mov
inc
std
movs
jbe
pop
sub
lds
jp
call
repnz
mov
sbb
push
sbb
ins
ins
aaa
inc
xor
inc
push
inc
jecxz
push
(bad)
xlat
(bad)
stos
out
aaa
and
fiadd
cdq
nop
int3
aas
xchg
les
sub
sbb
push
add
aas
xor
movs
xlat
jle
inc
push
(bad)
in
loope
int3
inc
ds
in
push
outs
test
dec
test
test
or
push
les
fisub
push
ret
cmp
pop
jle
cmp
fstp
lea
call
pop
(bad)
fcom
adc
xlat
lods
push
jo
and
in
mov
movs
les
sub
retf
outs
into
fsub
pop
jo
pop
scas
js
inc
cmps
fdivp
mov
pop
repnz
mov
mov
das
mov
pop
mov
pop
or
aam
sub
sub
retf
xchg
hlt
in
push
jb
les
out
leave
push
ins
pop
or
and
jmp
es
dec
sub
push
dec
dec
mov
sbb
mov
test
lds
gs
ror
dec
xchg
sbb
push
ret
test
xchg
lea
lods
out
xor
xchg
ds
addr16
out
sub
cmp
mov
shl
ds
mov
push
jne
hlt
xchg
aas
imul
push
pop
or
call
sub
es
out
mov
popf
fldenv
fwait
jmp
inc
dec
push
xchg
cs
std
outs
je
movs
inc
jae
add
add
add
add
add
add
pop
add
add
add
pusha
xor
add
add
test
add
inc
add
add
add
add
adc
fild
add
add
add
pop
add
add
inc
add
lock
add
add
les
add
add
add
add
add
add
add
add
add
add
inc
add
add
add
add
sub
inc
mov
lahf
iret
add
add
add
add
add
add
add
add
pop
dec
add
add
icebp
add
add
daa
add
push
add
cmp
push
add
mov
add
pop
xor
add
mov
push
add
and
add
inc
sbb
add
xchg
jmp
sbb
xchg
addr16
add
into
xchg
xor
mov
test
and
inc
push
adc
aas
sbb
mov
push
cmp
mov
in
xchg
stos
push
rcr
or
pop
mov
add
xchg
jl
cmp
pop
outs
xchg
push
jno
pushf
aad
ja
jmp
aaa
xor
pop
fmul
sti
int3
fistp
outs
jp
add
movs
jb
mov
xchg
ds
js
inc
xchg
cld
shl
xchg
addr16
mov
mov
sub
loop
jmp
test
push
ins
ret
(bad)
fadd
mov
es
dec
mov
mov
scas
test
test
movs
sub
jmp
adc
dec
add
sbb
mov
push
in
push
pop
push
xchg
sub
mov
call
addr16
or
push
xor
mov
lds
(bad)
xor
mov
nop
aam
(bad)
adc
inc
jmp
dec
mov
xor
aas
cli
je
rcr
jg
leave
mov
jecxz
sbb
jns
push
xchg
stc
xchg
dec
pusha
je
cs
in
push
dec
and
push
(bad)
retf
rol
mov
std
icebp
(bad)
shr
and
inc
jp
arpl
jge
push
aaa
sbb
pop
sti
xchg
mov
mov
cdq
stc
jns
adc
xchg
xchg
gs
stos
push
cmp
sbb
push
add
mov
test
xchg
clc
js
bswap
adc
push
jg
retf
jns
sub
jp
and
test
mov
add
push
rcr
mov
cmps
mov
jle
es
shl
out
sub
mov
xor
add
icebp
lods
xor
jle
gs
popa
bound
lods
xchg
scas
mov
dec
pop
out
xor
push
and
mov
scas
push
iret
push
arpl
into
ins
ds
ins
test
push
clc
jecxz
xor
fs
ret
push
loopne
outs
(bad)
pop
fist
jns
mov
outs
and
call
pop
scas
pop
xchg
stos
push
fmulp
xchg
xchg
(bad)
(bad)
pop
mov
cs
int
xchg
push
push
int
cmps
ficomp
adc
dec
sub
mov
pushf
ret
mov
pop
(bad)
jmp
adc
ins
cld
scas
mov
repnz
jns
pop
add
cmp
push
in
int3
jle
xor
jge
adc
add
jl
mov
xchg
test
push
pusha
cmp
add
data16
sbb
pusha
push
bound
or
push
mov
xor
pop
add
in
dec
add
push
xchg
aas
inc
mov
inc
std
mov
adc
in
lahf
int
(bad)
cmp
gs
sub
mov
inc
xlat
enter
lods
loop
stos
mov
daa
cmp
xchg
outs
ins
pop
mov
pop
repz
shl
inc
xor
xchg
pop
scas
out
sqrtps
push
push
mov
repz
jmp
cmp
jne
dec
mov
xchg
nop
add
adc
pop
fstp
and
fcmovu
jmp
sub
into
mov
jl
add
sub
mov
ss
ins
sbb
loope
hlt
das
dec
pusha
(bad)
cwde
loop
or
movs
rcr
mov
adc
mov
stos
push
push
clc
xor
and
dec
ds
mov
div
aad
xor
jp
cmps
cld
dec
ret
jmp
mov
aad
mov
or
add
cdq
xor
fisub
mov
or
retf
cmp
mov
(bad)
daa
or
enter
pop
pop
fistp
aaa
sbb
bound
adc
push
and
push
push
xchg
in
xor
neg
push
fimul
into
cmp
clc
add
jns
in
xchg
scas
rcr
cdq
inc
jle
pusha
xchg
push
mov
mov
xchg
jl
in
in
dec
mov
sbb
xlat
xlat
dec
sbb
mov
dec
test
stos
pop
imul
shr
ror
icebp
mov
outs
call
xchg
mov
outs
xlat
dec
cmp
xchg
mov
mov
pusha
mov
nop
adc
cmp
les
lds
or
sbb
xor
dec
outs
and
xchg
sbb
das
mov
adc
jns
bound
adc
in
xor
push
cmp
cs
fisubr
aas
or
movs
stos
cmc
jl
cdq
cdq
aas
sahf
jns
xor
pop
mov
lahf
sub
ret
pop
ret
xor
add
jmp
xchg
in
in
mov
lods
ss
sub
movs
sar
retf
sbb
sub
test
xchg
movzx
shl
pop
pop
out
push
pop
hlt
mov
push
clc
outs
(bad)
jg
mov
cmp
add
les
lods
test
out
xchg
sub
out
mov
push
js
or
and
loop
mov
enter
dec
retf
xchg
(bad)
rcr
sbb
(bad)
mov
lods
jns
xor
inc
inc
(bad)
cmp
sub
cdq
test
(bad)
cmp
(bad)
call
fucomip
sar
pop
adc
sub
push
push
ja
imul
in
and
(bad)
cli
pushf
sub
pop
(bad)
cli
out
ds
out
lahf
sbb
enter
rol
adc
cdq
mov
movs
push
push
mov
cld
pop
jg
jge
push
mov
les
mov
ja
jl
xchg
push
jne
or
cli
call
push
dec
sub
or
jl
call
or
ret
and
out
mov
sti
mov
dec
mov
sbb
or
push
mov
jecxz
icebp
bnd
imul
out
xchg
enter
movs
(bad)
mov
jbe
xchg
aaa
inc
sti
pop
dec
cs
pop
or
retf
push
in
maskmovq
test
mov
rep
add
mov
dec
xor
loop
ja
les
fsub
or
push
gs
xchg
xor
retf
mov
(bad)
xor
add
adc
mov
mov
xor
rcl
pop
ja
stos
(bad)
fwait
push
adc
pushf
add
mov
pusha
mov
std
js
adc
lahf
sti
push
cs
push
dec
loop
jmp
push
gs
mov
mov
and
dec
or
mov
push
inc
mov
sti
jp
out
arpl
aam
jp
out
lods
in
lods
ss
lods
add
ret
mov
sbb
sbb
not
cmp
jecxz
mov
dec
ret
(bad)
scas
neg
push
rcr
test
jb
add
shl
pop
cmps
js
pop
mov
outs
jg
sub
xchg
dec
add
push
mov
mov
xchg
jns
cmp
(bad)
fsub
jmp
cs
or
and
cs
(bad)
stos
push
jmp
cmps
sar
add
int3
xchg
mov
mov
push
inc
xor
rol
sbb
push
mov
mov
in
(bad)
add
imul
(bad)
test
mov
push
popf
test
loope
into
ins
mov
sbb
movs
test
jecxz
stos
aad
or
(bad)
mov
mov
loopne
cld
jmp
jg
sbb
mov
mov
cmps
test
cmp
dec
jl
movs
push
inc
pminsw
lods
fcomip
mov
xchg
adc
in
(bad)
dec
add
add
jecxz
cwde
jne
in
or
sub
push
xchg
push
dec
pushf
inc
sub
data16
popa
out
nop
stc
(bad)
pushf
add
pop
aam
loope
cmp
daa
mov
pop
fs
add
aas
test
add
fstp
pop
hlt
and
jecxz
lds
shr
inc
fiadd
sub
imul
sbb
call
or
in
push
cmps
xchg
mov
or
jp
jno
loope
jae
or
adc
(bad)
adc
cmp
mov
mov
sar
enter
or
pop
rol
movs
push
mov
cs
scas
cli
sbb
cdq
mov
clc
ins
inc
push
xchg
push
dec
add
lods
ja
in
in
out
fsubr
sub
nop
mov
scas
or
jl
hlt
push
imul
out
les
(bad)
(bad)
and
outs
add
mov
clc
ss
test
inc
push
and
aas
aad
es
or
int3
jecxz
mov
cmp
jl
pop
or
ficom
jge
leave
adc
sub
adc
xlat
pushf
sbb
ret
nop
popa
mov
mov
xor
inc
int3
jnp
stc
hlt
push
sti
push
xor
sbb
bound
pop
pop
movs
retf
inc
retf
sub
mov
adc
and
mov
xor
or
cmps
push
push
xchg
ins
imul
jmp
or
mov
in
mov
cdq
push
sbb
(bad)
pop
leave
loop
sahf
pop
cdq
scas
out
push
sahf
xchg
xor
add
xchg
add
xor
cmp
jmp
mov
dec
(bad)
jmp
pop
jnp
rol
xor
retf
push
icebp
addr16
lahf
pop
mov
sbb
mov
inc
mov
sub
(bad)
jecxz
arpl
arpl
mov
adc
mov
out
movs
push
daa
or
or
mov
or
fsubr
mov
add
ja
out
cdq
add
sar
xor
and
pop
(bad)
retf
pop
call
out
xor
or
xchg
pop
xchg
lea
sub
outs
mov
mov
pop
mov
sbb
ror
and
jmp
xor
in
sbb
fild
dec
and
mov
jnp
or
dec
dec
push
imul
lock
bound
fcmovne
add
jg
or
das
ja
pop
or
aas
or
loope
or
cld
sbb
sub
fcomip
scas
aam
cli
lds
pop
adc
jge
imul
sbb
push
ins
or
sahf
pop
mov
mov
ja
into
mov
sub
or
xchg
cmp
add
add
add
add
add
or
add
and
add
add
add
add
add
add
add
add
stos
add
add
mov
add
add
xchg
add
add
add
mov
add
add
add
add
add
add
add
add
adc
add
add
add
outs
add
add
add
jbe
fpatan
dec
mov
cli
clc
nop
jmp
xchg
jle
int
cmp
jb
add
mov
adc
fld
mov
test
ja
jbe
xchg
sar
mov
into
push
jbe
es
mov
sbb
gs
retf
and
out
or
imul
xchg
inc
or
mov
ins
fmul
push
ret
or
ficomp
fistp
push
shl
pushf
xchg
xlat
arpl
push
xchg
add
cwde
push
nop
lock
mov
xor
imul
rcr
gs
jmp
mov
push
clc
pusha
imul
(bad)
pusha
push
or
popf
in
in
push
push
ror
cdq
and
(bad)
lods
ds
and
pop
cmps
xchg
(bad)
jle
xor
push
and
sar
popf
shr
sub
add
mov
xor
ror
adc
xchg
cmp
mov
jmp
mov
nop
call
push
adc
rcl
jmp
rcl
jns
sahf
mov
inc
loope
sub
jge
push
test
mov
repz
adc
jne
sbb
mov
cmp
push
repz
ret
inc
pop
push
sbb
xor
repnz
adc
(bad)
retf
or
adc
call
stc
xor
inc
jno
push
jns
cmp
sub
push
push
pop
(bad)
sub
jne
inc
inc
sbb
mov
xor
sbb
imul
mov
les
lds
scas
imul
call
mov
xor
cmovge
test
push
add
lods
sti
sahf
xor
or
push
dec
mov
inc
dec
push
xor
clc
out
retf
add
ret
jle
sbb
mov
or
scas
popf
cdq
mov
arpl
xor
out
mov
icebp
imul
mov
cmp
cli
push
movs
cmps
fisubr
inc
jp
sbb
lods
mov
bsf
dec
gs
push
sbb
inc
or
pop
push
nop
adc
ss
arpl
daa
ret
push
pushf
ror
clc
lods
xchg
pop
mov
or
ficomp
dec
sub
sbb
fs
imul
aas
xchg
pop
adc
mov
loope
int
mov
jno
cmps
out
jecxz
out
jp
ror
add
in
xchg
adc
inc
daa
outs
in
xor
mov
adc
ins
outs
dec
in
(bad)
and
jns
push
and
in
mov
push
icebp
shr
mov
icebp
aaa
jge
dec
stos
scas
js
pushf
aad
lahf
int3
or
ins
ss
xchg
pop
jmp
nop
aas
sbb
pop
adc
in
loop
imul
call
jp
and
out
ja
jb
and
xlat
inc
xor
or
rcl
stc
cwde
ror
aam
aas
pminsw
or
jmp
scas
fimul
test
loop
sub
inc
sbb
and
loop
mov
pop
mov
and
jae
in
sub
(bad)
mov
sbb
aas
out
test
pop
ret
es
mov
sbb
mov
inc
xchg
sbb
aam
pop
daa
nop
or
or
inc
inc
xor
repnz
enter
mov
xor
and
pop
jo
shr
cmc
jo
in
cmp
movs
nop
mov
sub
mov
pop
mov
clc
pop
aaa
dec
push
js
pop
mov
div
jl
jo
cmp
imul
rcl
int3
mov
bound
iret
cmp
cli
imul
test
sub
push
je
in
popfw
and
mov
jg
ins
fmul
jb
fisubr
punpcklwd
test
push
out
ja
inc
shl
dec
stos
sub
imul
xchg
sub
cmp
lahf
jno
jecxz
sub
mov
mov
call
add
daa
into
mov
pop
cmp
mov
pop
mov
and
js
or
fcom
clc
sbb
push
in
jl
adc
ds
fistp
leave
and
movs
and
push
sti
add
lds
pop
lods
and
sbb
xor
call
mov
mov
inc
stc
ss
enter
je
(bad)
dec
jmp
cdq
push
push
mov
or
ja
popa
xchg
dec
mov
les
mov
pop
adc
icebp
les
jb
add
(bad)
mov
add
push
cs
pop
cmp
pop
mov
rcl
mov
loop
out
data16
retf
loop
das
cmp
and
ss
and
not
out
rol
inc
jl
or
call
adc
out
inc
popf
outs
rcr
dec
ds
rcr
lods
ins
retf
dec
jp
jmp
dec
jno
jp
outs
out
nop
xchg
not
call
fild
and
mov
push
retf
add
stc
xchg
pop
arpl
retf
lods
test
repz
add
sub
retf
push
inc
jne
std
add
(bad)
loope
cmps
xor
sbb
stc
mov
xchg
mov
and
mov
jecxz
pop
fnstcw
outs
xchg
push
test
add
test
outs
cmp
add
outs
or
sub
arpl
sbb
mov
jl
push
lods
or
mov
aad
cwde
cmp
ret
inc
js
xchg
xchg
dec
in
test
ret
xor
adc
cwde
arpl
xor
sbb
or
mov
imul
or
mov
jp
add
sbb
ins
mov
mov
xor
add
aam
jg
jb
aaa
mov
je
mov
dec
add
cmpxchg
bound
push
mov
jnp
std
aam
rol
or
retf
arpl
stc
pop
cld
sub
fstp
out
int
dec
dec
pop
or
inc
or
xchg
push
les
mov
dec
retf
cmp
dec
or
fwait
leave
call
outs
lea
xor
sub
sbb
cmp
xchg
pop
dec
jbe
pop
lock
(bad)
cwde
mov
or
outs
pop
push
mov
sbb
mov
mov
in
loop
xchg
jnp
mov
mov
in
rcl
mov
aas
cmp
mov
lock
test
jge
push
push
push
arpl
popa
outs
das
sbb
shr
outs
jb
xor
jns
pop
xor
or
in
push
jl
(bad)
in
adc
jge
push
stos
cld
lds
mov
cs
mov
mov
xor
mov
pop
sbb
jb
out
or
adc
inc
fwait
push
and
daa
test
sti
out
cmp
jp
test
mov
out
call
mov
push
mov
jmp
mov
push
dec
test
inc
pop
call
fisttp
pop
jp
pop
fs
push
mov
mov
or
ja
add
hlt
aad
sar
mov
inc
jge
mov
fidivr
adc
daa
fmul
and
addr16
sub
mov
scas
gs
dec
(bad)
jmp
adc
jle
sahf
sub
cmc
mov
pop
ficom
imul
pushf
loopne
and
xor
sub
adc
and
xadd
jmp
mov
fiadd
lock
adc
cld
nop
sbb
pop
shl
and
mov
(bad)
das
push
(bad)
jne
sbb
loop
xchg
out
mov
mov
mov
jmp
xchg
dec
dec
mov
fsubr
cli
fcmovnb
call
rcl
push
inc
mov
mov
jmp
xor
inc
(bad)
pop
imul
clc
out
jno
dec
sub
mov
mov
jno
bound
stc
push
pop
mov
jmp
ret
icebp
sub
dec
pmullw
inc
in
bound
pavgw
jmp
call
mov
in
and
mov
popf
mov
and
pusha
stc
jp
imul
or
add
pushf
mov
int3
mov
out
inc
jae
jp
data16
and
mov
or
jge
or
lods
dec
mov
cdq
fwait
push
dec
daa
stos
cmp
fdivr
aad
pop
mov
jnp
fistp
enter
dec
adc
dec
ja
mov
push
or
mov
icebp
scas
cmp
xchg
out
rcl
xchg
leave
mov
jns
pop
push
lea
loopne
je
(bad)
shr
pushf
cwde
pop
sub
sub
mov
mov
jno
dec
xor
das
sub
add
jmp
cmp
jmp
jb
cmc
sub
dec
sub
inc
mov
inc
sub
and
(bad)
sub
jmp
pop
cli
int
aas
es
test
sub
stos
mov
(bad)
pop
and
loop
or
sbb
inc
imul
call
test
push
mov
scas
lock
outs
adc
push
add
and
mov
scas
mov
inc
inc
push
inc
push
mov
sahf
(bad)
adc
jno
sub
fdivr
dec
and
cmp
xchg
sub
retf
in
cmc
iret
xor
inc
sub
sbb
data16
out
ja
dec
popf
and
cs
sti
aaa
daa
dec
fist
inc
ins
ret
(bad)
jge
cmp
(bad)
js
fist
inc
sbb
mov
cwde
and
jl
das
ins
in
jl
cwde
lock
ret
mov
xchg
sbb
add
add
or
mov
clc
mov
mov
push
add
and
pop
xor
add
jnp
inc
push
mov
test
xor
dec
pusha
lea
js
mov
push
dec
pop
dec
jns
fldenv
inc
mov
into
aaa
mov
or
xchg
outs
jno
aas
cmp
or
xchg
mov
xchg
or
jne
mov
jecxz
jg
add
add
out
add
add
add
add
add
add
add
or
clc
add
mov
add
add
add
add
add
add
or
fwait
stc
sbb
repz
enter
jge
pop
push
push
loopne
or
fnstenv
sbb
sti
and
mov
jg
js
xor
xor
add
mov
std
mov
jl
or
enter
mov
mov
mov
jmp
aad
ins
lods
popa
or
xor
popf
lds
ins
pop
loope
shl
and
cmp
xlat
and
outs
cmp
fs
and
xor
dec
(bad)
push
loopne
add
js
and
inc
mov
movs
arpl
inc
push
les
dec
jae
cmp
dec
or
push
dec
shl
pop
sub
jle
into
daa
adc
(bad)
jo
sub
xchg
adc
lods
(bad)
ja
sub
loop
mov
inc
fiadd
jge
cmp
mov
jg
pop
mov
fld
and
imul
inc
and
dec
or
dec
fistp
pop
cli
push
push
(bad)
xchg
push
push
mov
sub
cmp
dec
popa
cmp
and
scas
and
test
(bad)
dec
pusha
or
popf
xor
mov
mov
out
pushf
mov
(bad)
fistp
or
pop
fcom
push
cdq
jmp
adc
fnstenv
sar
xchg
mov
sbb
or
jp
ret
shl
sbb
dec
and
xchg
mov
test
sti
mov
push
dec
stos
mov
les
aad
sub
aas
or
or
les
mov
add
das
push
cmp
pop
iret
jno
dec
cmp
fucomip
das
push
test
retw
xchg
push
sbb
mov
fdivr
dec
inc
adc
sar
aaa
daa
shl
imul
lods
mov
pop
push
iret
stc
xor
imul
cs
and
bound
lea
es
fdiv
movs
push
pusha
adc
xchg
int
lds
dec
stc
pop
adc
jbe
jns
dec
push
shl
call
push
dec
scas
fs
aam
aad
add
inc
xor
cmps
adc
mov
sub
pminsw
fs
(bad)
push
and
je
cmps
loopne
jmp
cmp
cdq
xlat
fisttp
popa
retf
push
ret
test
sub
scas
xlat
pop
(bad)
mov
inc
mov
ret
jmp
retf
call
push
push
and
push
fdivr
daa
inc
sti
jmp
call
sbb
je
mov
xor
cmp
fimul
retf
fs
sbb
sub
call
and
enter
popf
dec
mov
int3
std
cmp
sar
iret
add
pop
dec
sbb
lods
pushf
lock
repnz
test
aas
stc
fldcw
ins
aaa
sbb
inc
xor
cmc
(bad)
jae
(bad)
data16
dec
int
push
hlt
js
inc
fst
mov
movs
lods
jp
jp
xchg
and
xlat
int3
movs
test
cs
fild
cmc
xchg
scas
pushf
call
push
and
in
dec
cs
jl
imul
xor
ja
push
or
shl
es
pop
out
push
cmp
addr16
inc
push
cmps
mov
sbb
mov
push
mov
jae
call
push
add
dec
xchg
mov
movs
adc
test
inc
adc
xchg
push
in
ja
dec
add
jge
mov
xor
shl
ja
nop
lods
mov
int
pop
sub
loop
mov
mov
into
bound
mov
mov
jo
inc
imul
pop
inc
mov
(bad)
push
movs
cmp
test
sub
cs
mov
inc
lods
sbb
dec
call
(bad)
mov
jmp
scas
push
sar
js
pop
arpl
outs
and
xlat
(bad)
jge
mov
push
xchg
sub
sbb
in
cmp
mov
push
cmc
btr
popa
inc
enter
(bad)
cmp
cmp
xchg
outs
repz
push
call
scas
int3
inc
xchg
cli
pop
scas
rol
sub
lea
mov
cmps
sar
jp
lods
push
xchg
sub
lods
inc
scas
imul
mov
into
and
movs
hlt
inc
fidivr
fs
xchg
lods
add
je
les
and
mov
add
call
jns
ins
test
xchg
cmp
mov
rol
xor
test
sbb
out
es
aas
cli
sahf
outs
add
stc
int
mov
inc
mov
neg
movs
cmc
nop
sub
inc
mov
push
into
xchg
cmps
test
adc
jno
cs
inc
jne
push
ret
les
repnz
stos
inc
test
out
lods
pusha
mov
leave
mov
scas
mov
(bad)
je
lods
pop
jl
sar
pop
cmps
and
xor
mov
xchg
lea
adc
lods
fisub
push
mov
jo
outs
push
loopne
push
pop
dec
aam
sub
jmp
jle
scas
lods
add
out
xchg
in
lahf
jae
xchg
in
add
add
sbb
dec
jge
jmp
shl
push
or
sbb
xchg
loope
mov
dec
pop
pop
ficom
inc
(bad)
subps
mov
icebp
jecxz
scas
stos
sub
and
stos
ffree
jb
xchg
xlat
in
loop
(bad)
and
push
shl
sar
cdq
shl
mov
test
scas
xchg
push
mov
or
xor
(bad)
mov
mov
xchg
aad
rcr
sahf
cdq
repz
jecxz
jno
test
cmp
mov
add
add
rcr
repz
cdq
popa
lea
dec
jge
and
inc
mov
mov
mov
lods
fdivr
jecxz
xchg
imul
mov
jns
push
cmp
push
in
mov
(bad)
sub
cmc
pop
cmp
mov
sbb
xlat
mov
xchg
jno
jg
mov
and
(bad)
mov
aad
lock
dec
xchg
push
jmp
push
ja
pop
es
and
ins
xchg
inc
mov
mov
mov
das
leave
nop
scas
(bad)
inc
jne
out
dec
add
(bad)
std
cmp
ja
fidiv
out
pop
mov
mov
int3
mov
sub
movs
test
(bad)
scas
and
sahf
mov
and
xchg
mov
ret
enter
pop
or
xchg
ret
int
popa
addr16
pop
mov
xchg
arpl
push
mov
cmp
mov
dec
jecxz
add
arpl
cmp
xchg
or
pushf
mov
(bad)
(bad)
repz
popf
mov
not
sub
inc
bnd
sub
ss
push
push
cmp
sub
pop
mov
fstp
pop
mov
aas
stos
(bad)
enter
ficomp
mov
fiadd
fistp
adc
dec
mov
sti
aam
dec
sbb
mov
inc
pop
xor
scas
inc
inc
aaa
push
jmp
mov
add
add
jg
iret
mov
cmp
aas
mov
xchg
pop
fdiv
jo
loop
push
mov
and
adc
fbld
pop
pusha
inc
loopne
jae
std
inc
mov
add
sbb
stos
cmovns
lods
push
out
xchg
rol
inc
fisub
call
rol
sub
mov
adc
dec
leave
aas
and
jb
adc
xor
mov
into
or
loop
jmp
les
rcr
in
rcr
add
in
cld
ins
cdq
jge
dec
jns
ficomp
retf
mov
cwde
and
lods
(bad)
imul
fstp
in
xor
jmp
out
cdq
out
stos
xchg
push
stos
call
push
ret
and
in
mov
inc
stos
pop
adc
and
add
mov
(bad)
mov
add
lds
xchg
imul
clc
xchg
adc
pop
pushf
rcr
cmps
dec
sub
jg
out
adc
rcr
jnp
sti
repnz
push
js
les
cmp
cmp
jb
pop
neg
jmp
sub
aas
fcom
dec
and
push
rcr
add
les
or
sti
adc
mov
gs
pusha
mov
xor
scas
mov
jp
add
xor
enter
xor
shl
dec
fcom
and
cmp
in
test
dec
out
sbb
dec
dec
inc
mov
loop
arpl
(bad)
sahf
lahf
dec
pop
in
or
adc
or
cmc
cmp
mov
aam
pop
add
push
pusha
mov
inc
nop
aad
and
mov
into
es
push
out
xor
sbb
mov
test
fnstenv
pop
cmp
popf
sbb
cmps
sbb
cmps
mov
jnp
cs
cwde
std
fistp
std
sub
add
inc
push
fadd
or
dec
sub
inc
inc
cmp
mov
adc
stos
dec
out
jno
inc
imul
shl
lahf
adc
call
jg
ins
inc
pop
xchg
into
nop
push
mov
sbb
(bad)
xor
jae
mov
inc
fwait
cmps
aaa
sbb
mov
aas
scas
push
mov
mov
ins
mov
arpl
push
sbb
dec
xadd
outs
lds
pop
add
ins
outs
es
addr16
punpcklbw
icebp
jge
cmc
(bad)
xchg
stos
int
xor
icebp
dec
dec
mov
cmp
inc
addr16
(bad)
adc
in
rcr
and
xor
fisttp
sbb
stos
jne
cmp
xor
cmc
aaa
arpl
add
jecxz
and
loop
mov
ja
mov
popf
mov
xchg
mov
cmp
lods
xchg
mov
pop
stos
sbb
or
pop
adc
shl
mov
inc
jle
push
pop
push
shl
cdq
push
sub
cmp
cmc
in
xor
lea
fidivr
mov
or
in
push
stos
cmp
addr16
adc
cmps
mov
inc
ja
mov
push
les
ja
addr16
repnz
inc
lods
ret
arpl
xchg
pop
inc
mov
dec
inc
repz
mov
cwde
fs
and
test
dec
push
inc
fcmovnu
fnstenv
mov
cmp
jp
stos
stc
cdq
mov
movs
sub
cld
add
add
add
add
add
or
add
add
add
add
loop
fiadd
push
inc
add
add
add
add
jl
add
add
add
add
daa
add
add
sahf
add
add
lahf
add
add
dec
add
add
add
add
pushf
add
add
add
add
inc
add
pop
add
add
inc
add
add
mov
movs
add
sbb
add
push
add
add
add
add
add
xchg
add
fild
add
pusha
add
in
add
add
nop
add
add
add
add
ds
add
cdq
add
add
add
aas
add
add
cmps
add
add
add
les
add
add
add
add
add
add
fadd
push
add
add
mov
dec
add
add
or
xor
add
add
dec
add
cmp
add
add
add
add
add
push
add
add
mov
add
add
add
add
add
add
add
add
add
add
add
add
add
add
data16
add
add
add
add
add
cwde
add
adc
xchg
add
add
out
and
add
add
aas
add
add
add
add
add
add
add
add
add
push
add
sbb
aaa
aad
add
add
add
inc
and
add
pop
and
add
add
add
add
add
add
add
add
add
add
push
add
add
add
clc
add
add
mov
imul
add
add
adc
add
pop
add
add
mov
inc
js
and
sar
xchg
jle
retf
cmp
retf
mov
fwait
retf
add
enter
lods
fdiv
movs
mul
sbb
pop
mov
cld
push
cmps
inc
ret
push
adc
popa
xor
xchg
mov
cmp
sbb
inc
outs
std
out
pop
push
dec
or
out
sbb
aas
outs
or
div
loope
and
stos
adc
les
into
cmp
inc
push
or
dec
imul
movs
adc
jb
sub
aaa
arpl
and
xchg
das
cdq
adc
das
mov
sbb
jle
scas
and
mov
or
mov
jp
pop
rcr
loopne
cmp
mov
aaa
(bad)
lods
mov
das
jl
pushf
jb
jle
mov
sbb
jmp
ss
sti
cmps
xlat
mov
test
cmps
ins
loop
imul
jae
aaa
dec
retf
nop
pop
push
inc
add
cmp
and
jne
std
mov
cmps
mov
cld
mov
mov
ficom
test
dec
pop
stos
cmc
jmp
test
cs
ror
pop
xor
xchg
jb
mov
icebp
scas
stos
pop
lock
pop
mov
(bad)
cmp
cmps
iret
push
rcr
(bad)
cdq
ss
push
push
shr
xor
mov
enter
jg
int3
sbb
dec
(bad)
mov
outs
out
push
call
scas
sbb
and
ret
push
ins
mov
(bad)
in
xchg
mov
mov
xlat
push
cmp
mov
movs
dec
andnps
dec
sub
stc
dec
dec
push
or
dec
das
jge
adc
arpl
push
retf
mov
mov
repnz
div
adc
sub
cmps
outs
push
(bad)
and
rcpps
xor
push
pop
and
jecxz
mov
(bad)
test
cmp
push
data16
sub
std
icebp
xchg
mov
(bad)
jle
add
enter
dec
stos
mov
pop
lahf
add
sbb
in
fisubr
inc
cmp
push
sub
mov
sahf
pop
or
cmps
push
ins
popf
les
mov
adc
pop
aad
jns
lods
xchg
adc
xchg
mov
cmp
call
dec
mov
jno
mov
and
mov
cmp
fld
pop
push
mov
lea
mov
int3
ret
in
jbe
cmc
cld
icebp
pinsrw
xchg
sub
into
xchg
enter
jmp
popf
cmps
shl
mov
rol
jecxz
jge
lds
adc
xlat
inc
inc
pop
pop
mov
test
test
or
popa
aam
sbb
push
and
jae
mov
push
ret
push
leave
mov
and
loope
test
cmc
lods
add
mov
push
or
mov
and
call
fwait
xchg
mov
nop
jmp
and
push
push
clc
fisubr
call
dec
fsub
cs
iret
out
int3
dec
out
not
test
lods
fbld
repnz
fild
lods
(bad)
or
add
imul
xlat
mov
xor
xchg
dec
shr
jae
xchg
enter
popf
push
fsub
test
loope
lods
outs
xor
jb
push
jg
push
xchg
inc
in
add
cmovno
in
push
jno
retf
pop
mov
and
mov
and
sbb
sbb
push
sbb
cmp
mov
aam
in
or
ret
add
push
je
gs
cli
pop
scas
stos
pop
mov
jl
dec
cmc
jno
adc
mov
jge
jo
dec
push
stos
jmp
popf
ror
mov
out
or
pop
cmp
shr
aas
dec
inc
xchg
aas
dec
fcmovnbe
rol
push
jb
dec
and
xchg
lods
pop
in
inc
mov
or
outs
or
inc
xchg
push
mov
outs
retf
pop
repnz
mov
dec
inc
xchg
cmp
mov
mov
(bad)
aad
fiadd
ss
dec
jmp
inc
loope
rcl
mov
push
cmp
sbb
pop
mov
fidivr
out
cmp
add
fdivr
add
jp
or
mov
xlat
and
jl
fsubr
cmps
xchg
popf
add
mov
shl
in
cmp
adc
adc
mov
data16
jmp
and
rol
movsx
mov
div
test
fwait
call
int3
clc
outs
leave
cmp
mov
mov
jmp
sub
mov
mov
xlat
dec
xor
xchg
cmps
jmp
cmc
mov
xchg
iret
inc
mov
jl
(bad)
(bad)
xchg
stc
mov
stos
stos
xor
enter
sbb
sbb
data16
inc
aam
or
int
popf
pop
dec
add
retf
cmp
(bad)
out
rcl
out
fistp
loopne
mov
xchg
sahf
dec
ffree
mov
arpl
in
loopne
xchg
and
and
mov
outs
imul
rol
xchg
xchg
sbb
out
daa
add
ret
add
clc
scas
arpl
inc
push
(bad)
clc
in
push
mov
out
gs
push
pop
daa
xchg
jg
xchg
inc
pushf
dec
and
fs
sar
mov
dec
pop
jno
jp
sub
or
ins
jae
cmp
xchg
pop
inc
cmp
mov
rcr
or
ret
mov
mov
loopne
cmp
adc
adc
jmp
test
xor
es
adc
xchg
arpl
test
ret
fcmovbe
mov
pop
mov
outs
fidivr
jbe
cmp
call
inc
mov
repz
sub
dec
pop
pusha
jmp
sahf
test
xchg
pop
in
jmp
push
rcr
mov
dec
cmp
mov
addr16
js
or
add
out
(bad)
and
leave
mov
or
ins
xchg
fistp
and
sbb
and
fwait
jle
int
or
xchg
push
mov
lock
bound
and
inc
pop
jnp
retf
das
pusha
out
ror
int3
fs
mov
fdivr
push
pop
jbe
or
push
jmp
out
lock
leave
mov
fwait
push
repz
movs
pop
jns
div
mov
sbb
arpl
fistp
adc
jns
inc
fidiv
add
les
cdq
inc
jns
cmp
mov
mov
stos
ret
add
cld
inc
jns
outs
clc
adc
lahf
push
test
mov
cmp
jae
out
leave
mov
jo
or
call
xor
repnz
or
aaa
sar
movntq
out
retf
xor
stos
ja
cmps
mov
loopne
into
addr16
push
aas
sub
(bad)
and
push
sbb
xor
jo
dec
fisttp
into
lds
jecxz
shl
outs
or
jle
pop
cld
cmc
dec
cs
arpl
into
cdq
jns
pop
add
mov
int
push
dec
loopne
sub
xchg
pusha
add
cmp
in
push
jbe
mov
out
retf
jo
js
or
push
xchg
adc
out
jbe
into
shr
push
cmp
xchg
dec
(bad)
and
mov
and
pop
xor
ret
pop
ins
xor
xor
movs
push
and
test
adc
in
dec
in
add
push
fisttp
cmp
sub
adc
cmp
xchg
pop
inc
js
cmp
jg
(bad)
xlat
cmp
aaa
dec
jns
sahf
cmp
push
cmp
rcr
or
loop
inc
imul
ins
retf
mov
sbb
mov
stc
in
lds
mov
test
retf
sub
cs
xchg
cmp
and
adc
pop
stc
sbb
add
(bad)
out
and
add
xchg
retf
pop
outs
sbb
push
sub
dec
nop
movs
sub
pop
cdq
hlt
daa
and
test
mov
(bad)
data16
inc
fimul
mov
jo
push
add
jp
movs
push
xchg
outs
fsub
shl
adc
jmp
clc
jo
add
mov
xor
mov
dec
inc
dec
jecxz
loopne
imul
push
std
xor
xor
fsubr
into
loopne
add
cmp
sub
dec
ss
out
push
cmp
adc
(bad)
shl
jns
cld
in
xchg
dec
call
push
(bad)
cwde
push
rcr
dec
es
push
xor
ds
fist
jmp
ret
xchg
pop
adc
mov
push
bound
loop
adc
icebp
mov
mov
push
jle
fist
outs
xor
add
and
cmps
mov
pop
dec
js
add
pop
jle
sti
sub
call
add
aam
nop
push
rol
inc
or
nop
lds
test
pop
jle
or
fs
add
rcr
(bad)
js
sbb
lds
fcomp
iret
sub
(bad)
xchg
popf
pop
ret
dec
and
and
pop
stos
icebp
jmp
xchg
ret
pop
in
adc
mov
push
test
xlat
jg
mov
cmps
mov
sub
sub
fcomp
mov
outs
xlat
sub
xor
sbb
sub
xlat
cmp
mov
cmps
pop
(bad)
push
int
ficom
loopne
push
bound
push
add
fiadd
and
call
out
stc
fild
lods
sbb
fdivr
jp
outs
push
test
jae
out
retf
pmaxsw
sti
push
(bad)
int3
out
mov
scas
jp
xchg
std
cld
cmc
outs
mov
clc
pushf
(bad)
adc
mov
mov
push
mov
push
sti
fild
push
cmps
or
ficomp
aam
sar
(bad)
sub
in
leave
push
jns
inc
fxch
inc
loop
int
xchg
mov
sar
or
adc
sahf
pushf
lahf
shr
in
adc
mov
fwait
rcl
mov
mov
mov
xor
adc
mov
adc
mov
sub
adc
inc
pop
dec
in
hlt
jns
jns
clc
mov
aad
adc
xor
add
add
add
xor
or
add
xchg
or
clc
add
add
out
add
add
add
add
pop
sbb
add
add
add
add
mov
mov
pop
mov
clc
jp
xchg
jecxz
add
rol
add
test
mov
mov
add
(bad)
mov
add
push
add
add
add
add
push
cmp
gs
or
pop
xor
fidivr
or
adc
xor
or
jge
mov
clc
xor
pop
std
cmps
(bad)
cmps
(bad)
dec
jmp
retf
pop
jmp
mov
aaa
fidivr
mov
pop
data16
xchg
cmps
mov
lahf
mov
sbb
xchg
outs
mov
(bad)
mov
mov
sbb
rcl
pop
jae
js
in
jnp
jl
xchg
imul
mov
mov
and
and
xchg
push
fwait
cs
dec
cwde
out
dec
jg
jg
pushf
cmp
and
fst
into
aaa
mov
mov
mov
stos
xor
aam
sub
xor
and
fbstp
(bad)
adc
jmp
push
dec
and
dec
xor
inc
(bad)
sar
xchg
push
jge
jns
rcr
in
adc
test
dec
loopne
dec
xlat
jmp
lods
nop
(bad)
shl
aam
pop
aam
xchg
xor
mov
sub
cmc
retf
shr
jmp
dec
mov
add
adc
jmp
push
fimul
jg
arpl
test
pop
jo
inc
(bad)
aaa
push
in
jne
mov
inc
push
hlt
or
in
sub
out
push
mov
mov
add
push
inc
aam
jl
inc
fld
xchg
movs
outs
stos
ficom
movs
dec
out
mov
dec
sar
dec
ret
outs
aad
xchg
jle
mov
movs
or
shl
xor
lock
xchg
imul
add
add
mov
icebp
cli
push
(bad)
repz
lods
mov
cwde
inc
sub
push
inc
in
inc
xor
sahf
pop
cwde
dec
jg
movlps
in
ret
sbb
cmp
sbb
or
stc
xchg
push
bound
sti
jns
scas
inc
sbb
add
ss
test
push
fcmovnbe
out
jnp
adc
sub
je
or
jo
push
mov
and
lods
pop
dec
jo
in
sub
cmp
push
loope
or
mov
vmwrite
or
aam
xchg
mov
push
adc
fstp
aaa
je
or
dec
push
ins
ss
mov
pusha
push
mov
jb
call
ja
mov
jno
xchg
stos
push
jmp
mov
fisubr
and
retf
mov
mov
ja
mov
mov
push
jo
(bad)
xlat
fild
push
and
sub
mov
lea
pop
add
pop
in
and
icebp
inc
sbb
pop
aas
shl
jns
je
inc
call
mov
jge
push
loopne
(bad)
dec
push
(bad)
or
adc
and
adc
jbe
aaa
or
xlat
pop
add
xchg
ja
mov
shl
out
aas
adc
mov
cmps
retf
test
xor
loopne
loop
dec
inc
jl
jbe
inc
adc
dec
mov
mov
or
call
loop
mov
xor
daa
repnz
movs
pop
jo
test
shl
jbe
aaa
stos
xchg
scas
mov
dec
mov
mov
push
pop
inc
sub
inc
(bad)
sahf
adc
imul
or
sbb
addr16
cli
das
in
mov
push
xchg
out
mov
in
sub
pop
jmp
ret
add
mov
pop
pusha
shr
add
add
add
jo
rcl
push
shl
xchg
sub
mov
xlat
push
jne
fcom
pop
es
movs
xchg
cdq
sbb
xor
lss
xchg
and
arpl
or
add
outs
jecxz
fmul
imul
xchg
xchg
nop
xchg
fwait
sub
and
out
(bad)
pop
dec
or
sub
and
add
dec
clc
jle
xchg
out
lods
jmp
into
dec
in
mov
sub
push
hlt
out
sbb
mov
int
iret
and
jge
jmp
adc
cmp
xlat
aad
add
cmp
leave
sbb
mov
mov
mov
pop
or
fwait
imul
stos
scas
cmp
mov
icebp
mov
or
push
inc
cmc
stos
scas
push
jne
and
jns
shr
es
mov
je
in
movs
pop
loop
inc
jge
cmp
pop
inc
in
mov
loopne
push
pop
mov
loop
mov
sub
cmps
imul
je
xchg
test
mov
xchg
sbb
call
movs
cmp
popa
or
or
cs
dec
aaa
dec
icebp
jmp
inc
push
pop
cmp
and
lahf
mov
unpcklps
ss
(bad)
sub
inc
adc
mov
aaa
fstp
xlat
fidiv
scas
pop
scas
adc
or
fldcw
mov
loope
mov
push
out
pushf
pop
popa
jp
sahf
adc
nop
xor
cdq
mov
repz
adc
shl
mov
mov
loope
xchg
push
push
shl
in
in
stc
dec
fld
in
out
call
mov
push
add
adc
rcl
(bad)
rcr
call
test
movs
lea
dec
retf
sbb
lea
cmp
mov
pop
or
adc
xor
sub
sbb
xchg
loop
push
jmp
or
xlat
xchg
mov
ja
cmp
lea
push
mov
jns
stos
jmp
mov
out
adc
push
jmp
fstp
sbb
popf
mov
ss
js
mov
mov
in
(bad)
jge
pop
retf
out
xchg
rcr
mov
rcl
test
imul
fdiv
std
cmp
imul
popf
sbb
cmp
pop
inc
cmp
call
jmp
movs
cmp
dec
inc
pop
ins
outs
mov
rcr
add
(bad)
sub
mov
push
leave
push
jb
inc
je
push
scas
loop
lods
int3
cld
stc
push
mov
cmp
dec
mov
fisttp
div
add
adc
jmp
setg
xlat
add
pop
xchg
iret
cmp
mov
aam
aam
xchg
push
inc
in
pop
mov
dec
cmp
jae
mov
mov
cmp
(bad)
jp
pop
sbb
lock
inc
imul
lds
mov
jg
test
mov
dec
out
mov
sub
stos
inc
adc
int3
int3
dec
mov
out
jp
mov
sahf
push
and
cwde
cs
and
add
and
xor
aaa
mov
mov
sub
call
test
scas
sub
adc
movs
fld
clc
and
jmp
scas
test
sub
add
xchg
cld
xchg
inc
repz
retf
pop
(bad)
movs
das
lods
leave
mov
test
mov
add
xchg
and
sub
xchg
(bad)
mov
outs
mov
and
sbb
and
test
lock
imul
addr16
fdivr
out
movs
mov
sbb
jbe
add
mov
int3
adc
add
cwde
aaa
xor
adc
std
imul
xchg
mov
xor
adc
popa
mov
dec
pop
cmp
fistp
fcmovnb
(bad)
dec
or
in
pusha
xor
outs
sahf
xchg
adc
icebp
ss
mov
leave
(bad)
jmp
shl
ror
cmp
pop
sub
xor
jmp
cdq
cmp
test
push
js
fst
movs
(bad)
pop
imul
adc
pop
cmp
inc
add
scas
cmc
xchg
jbe
call
fimul
push
addr16
shl
cdq
jns
jae
imul
retf
ja
das
add
scas
sbb
inc
push
add
jb
cmp
sub
cld
mov
in
cs
mov
mov
and
mov
xchg
lea
stos
popf
aas
and
bound
pop
mov
scas
test
add
loope
cmp
cmp
push
fbld
push
enter
jnp
ja
cmp
outs
neg
nop
mov
xor
int
fistp
xor
fsub
lock
test
mov
ret
inc
xchg
mov
cs
jg
mov
jo
cmp
pmulhw
out
xor
sub
adc
stc
rcl
pop
inc
loop
scas
push
add
pushf
push
mov
xor
pop
enter
clc
movs
jbe
lock
(bad)
jmp
test
fadd
test
movsx
sti
sub
inc
push
daa
stos
push
addr16
cdq
mov
aad
cli
adc
daa
pcmpgtb
mov
adc
movs
lea
adc
adc
(bad)
aad
imul
cli
nop
jmp
dec
fsubr
jmp
fxch
jl
sub
xor
int
call
adc
stc
fsub
and
push
sub
mov
loopne
sbb
mov
imul
sub
jmp
inc
cmp
in
outs
addr16
icebp
push
ret
popf
sahf
outs
cwde
cld
cld
mov
shl
xchg
(bad)
arpl
inc
or
mov
lock
add
dec
test
mov
xchg
sub
pop
sbb
(bad)
stc
(bad)
ja
sub
add
jae
inc
push
add
jg
adc
imul
dec
fisub
mov
in
popa
jg
mov
xrelease
jb
fist
mov
mov
push
adc
in
push
pop
or
push
sub
test
or
mov
sub
xchg
adc
push
push
pop
int
inc
xchg
scas
cmp
cmps
test
mov
xchg
sti
aas
das
fsubr
test
int3
mov
dec
fisttp
and
cmp
lds
shr
pop
mov
and
and
xchg
movs
inc
push
jbe
sub
push
outs
sub
gs
popf
mov
or
ror
(bad)
sbb
inc
(bad)
repz
and
pop
popf
scas
jp
int
les
pop
push
add
push
hlt
and
sahf
fidiv
test
loopne
cmps
push
jne
int
cmps
fdiv
addr16
int
(bad)
lods
addr16
iret
fcom
cmp
add
add
mov
add
add
add
add
fild
add
add
repz
xor
pop
add
add
push
mov
cmps
add
push
push
add
add
cmp
mov
add
add
add
arpl
add
add
add
add
dec
push
add
add
add
add
mov
add
jg
add
xchg
add
xchg
add
add
add
mov
test
add
add
add
add
add
add
add
fadd
add
add
cmc
adc
mov
int
ins
icebp
cmp
cmp
or
sbb
cmps
and
sti
les
out
test
push
push
dec
test
pushf
not
pushf
xchg
push
out
stos
std
aad
xor
retf
leave
and
sub
add
mov
nop
sbb
leave
dec
add
pop
and
fisttp
sub
and
add
leave
add
jmp
jmp
xor
into
mov
mov
(bad)
lock
jg
imul
fucomip
dec
inc
mov
loopne
adc
lods
sub
dec
fs
mov
int3
dec
cmps
mov
cwde
or
test
add
mov
stos
stos
dec
adc
add
fld
jmp
pop
fistp
cmp
fadd
nop
dec
or
movs
xchg
(bad)
stc
fcmovu
or
cmp
(bad)
cmp
(bad)
std
mov
fld
push
mov
clc
rcl
adc
out
xchg
or
imul
dec
dec
or
sar
call
xor
data16
pop
dec
iret
fmul
fcom
mov
mov
xor
hlt
cmp
add
jmp
sbb
in
mov
movs
(bad)
les
out
xchg
or
rol
xlat
sub
inc
cmps
jl
push
mov
add
out
and
mov
sub
dec
aaa
pop
into
rcl
cmp
loopne
out
pop
cmp
pop
xchg
pop
retf
xor
xlat
cmps
fcmovnb
test
fs
fdiv
pop
sbb
int3
push
loope
mov
pushf
ror
add
stos
mov
inc
mov
in
and
pop
test
outs
mov
or
jne
cmps
lods
pop
and
add
mov
cmp
out
(bad)
sbb
fs
mov
mov
inc
out
cwde
dec
leave
int
stc
mov
or
mov
int3
add
jns
stos
inc
pop
loop
xor
jns
ror
fwait
int
popa
enter
into
shl
pushf
mov
hlt
add
aad
push
cmp
xor
not
int
shl
xchg
push
movs
mov
call
and
ss
repz
mov
popf
outs
adc
iret
push
ds
inc
add
cmp
ficomp
ja
inc
jae
mov
pop
or
ret
pop
push
sar
jle
jb
inc
(bad)
jg
aas
retf
icebp
sub
cs
or
dec
imul
xchg
push
pop
pop
fsub
pop
icebp
push
or
in
ss
sub
push
mov
sub
inc
or
mov
out
mov
addr16
cmps
jecxz
(bad)
lods
pushf
or
bound
sbb
push
pop
or
push
jo
imul
icebp
popf
jp
fcmove
ins
hlt
cwde
out
and
out
stc
mov
cmp
inc
popf
xor
in
xlat
add
imul
sub
xchg
sar
pop
xor
enter
jp
ds
pop
cmc
and
shr
xchg
xlat
add
clc
cld
cmps
dec
mov
repz
in
dec
cmp
arpl
adc
push
dec
loopne
pop
pop
or
imul
cmc
inc
aad
ins
(bad)
movs
pop
arpl
seto
out
mov
mov
in
test
into
movs
sbb
into
xchg
adc
adc
fisttp
lds
std
test
in
sti
stos
ins
xor
ins
inc
and
outs
jnp
ja
mov
ror
ja
mov
xchg
call
aaa
sbb
addr16
sbb
jle
aaa
loop
xchg
icebp
movs
retf
sub
fwait
mov
pop
(bad)
dec
add
js
hlt
popa
pop
inc
pop
mov
dec
push
mov
or
pusha
jno
cmp
push
lahf
(bad)
in
dec
pop
stc
mov
fldlg2
mov
mov
enter
jns
loopne
(bad)
cmp
ret
mov
fnstcw
and
dec
and
cmp
adc
punpcklwd
pop
loopne
push
jbe
ja
sub
dec
xchg
dec
push
into
rcr
mov
(bad)
jmp
push
xchg
mov
sub
push
shr
pop
repnz
cwde
jecxz
or
jno
fdiv
inc
xor
pop
stc
cmp
cwde
mov
nop
pop
dec
(bad)
ret
xchg
call
jo
mov
retf
(bad)
adc
xchg
sti
or
ds
adc
lea
add
jo
adc
fwait
clc
bound
cdq
in
jmp
jae
rol
jne
test
out
scas
mov
movs
mov
mov
add
jns
mov
out
ss
xor
dec
cmps
ins
and
test
cwde
jb
xor
sbb
(bad)
loop
scas
sahf
stc
inc
icebp
mov
movs
test
ror
add
inc
or
and
(bad)
pusha
imul
cmc
test
push
into
ror
mov
sub
pop
jo
test
std
mov
hlt
ds
call
and
cwde
cli
or
cs
mov
popa
cmp
leave
int
stc
stos
inc
mov
std
jle
aam
scas
pop
mov
mov
push
mov
popf
pop
mov
int3
sahf
and
push
dec
int
movs
xchg
inc
(bad)
lock
arpl
and
mov
ffreep
test
mov
fcomi
xchg
sub
lods
cmp
push
cmp
xchg
inc
mov
test
add
and
xor
push
mov
pop
aaa
xchg
scas
das
cmp
popf
xor
or
cmp
jb
pop
cwde
or
jne
ins
pop
sbb
pop
pushw
ja
or
popf
ficom
sbb
gs
mov
add
push
arpl
int
stc
mov
cwde
fisttp
jb
lahf
push
movs
add
ret
aas
pop
sub
pop
add
adc
and
pushf
fld
ret
add
imul
test
lock
(bad)
push
outs
sbb
sub
(bad)
mov
popa
ins
imul
lea
and
repz
add
xchg
lods
sar
add
sbb
out
(bad)
or
xor
out
(bad)
pop
mov
sub
mov
div
imul
sub
inc
cmps
(bad)
push
or
sbb
imul
mov
iret
mov
jl
pop
movs
jns
imul
dec
div
fistp
mov
jecxz
inc
sub
enter
jnp
gs
pop
jecxz
lods
pop
stc
push
inc
pop
and
add
push
pop
or
mov
jb
inc
xor
movs
xchg
mov
dec
call
idiv
jnp
(bad)
cmp
push
adc
mov
test
mov
pop
leave
mov
das
aaa
or
pop
xor
lea
stos
jb
cmp
jp
bound
lods
out
mov
std
mov
sub
arpl
dec
jbe
mov
jmp
jmp
add
loope
sbb
sbb
dec
out
das
iret
dec
and
add
call
mov
xor
hlt
loopne
mov
dec
cs
ret
sub
loope
push
mov
into
jge
mov
ins
mov
inc
inc
jle
lods
rcl
or
jo
or
or
push
out
jmp
and
outs
stos
add
pushf
push
dec
retf
xor
sbb
jnp
sbb
xchg
sub
mov
in
push
sub
push
sbb
sbb
jmp
test
mov
mov
mov
mov
and
jecxz
jmp
mov
mov
in
inc
push
jbe
sub
addr16
out
or
(bad)
retf
jnp
and
popf
pop
jns
dec
(bad)
cmp
push
call
sbb
mov
sti
cmp
mov
iret
maskmovq
div
retf
cmp
int3
dec
rcl
idiv
cmps
lahf
dec
(bad)
fnsave
jp
push
or
mov
aam
mov
pop
pushf
dec
mov
dec
fsub
add
jp
dec
ret
pop
jecxz
aaa
jmp
iret
imul
lds
add
into
adc
push
jmp
scas
jl
mov
loop
adc
in
stc
test
mov
jns
sbb
sbb
sbb
aaa
in
outs
push
inc
jno
mov
inc
pop
push
shl
dec
inc
push
pop
cmp
cmp
push
adc
clc
and
outs
inc
push
xchg
pop
inc
and
out
mov
jae
es
cld
in
pop
push
xor
dec
pop
lods
sti
dec
lahf
daa
sbb
jl
neg
fs
adc
popa
pop
pushf
dec
leave
int
stc
mov
sbb
arpl
lods
adc
hlt
adc
or
push
repnz
call
add
rep
cmps
in
dec
(bad)
sub
adc
inc
xor
cmp
inc
xor
fiadd
je
loop
cmp
shr
mov
jmp
sbb
add
push
mov
ins
pop
movs
aam
jbe
or
loop
test
pop
lahf
(bad)
push
and
fbld
leave
dec
pop
fdivr
into
xchg
loop
jl
lods
fst
out
add
sub
into
mov
fld
cmp
ins
(bad)
mov
ja
add
(bad)
in
inc
sahf
adc
add
stc
push
jnp
jae
out
mov
dec
dec
xchg
iret
les
retf
in
mul
and
in
xor
push
retf
aad
jo
or
nop
rol
sbb
adc
cmp
adc
fst
jnp
mul
outs
inc
push
test
movs
cmp
int
fwait
and
(bad)
or
xor
mov
shl
test
or
sbb
loop
mov
cmps
mov
push
loop
(bad)
(bad)
adc
(bad)
mov
ret
dec
pop
(bad)
mov
inc
inc
jnp
loopne
call
push
sahf
pushw
stos
retf
das
push
jmp
dec
xchg
mov
xchg
lock
out
jmp
outs
inc
(bad)
call
fnstenv
je
shl
xchg
dec
and
fnstsw
test
pop
mov
imul
js
xor
mov
mov
jno
push
movs
dec
jmp
mul
dec
jae
enter
popa
outs
test
sbb
fistp
dec
fsub
add
add
xchg
add
add
add
add
add
add
add
fiadd
add
jb
add
loop
add
add
add
add
add
add
add
and
movs
add
clc
add
outs
add
push
cli
or
das
scas
mov
les
scas
xor
cmp
push
dec
push
dec
jle
jp
inc
inc
into
adc
les
leave
dec
add
cmps
dec
popf
push
push
and
inc
nop
or
shl
repz
loop
call
fisttp
or
or
sbb
lods
pusha
ror
push
fild
pop
les
mov
test
adc
pop
sub
int3
call
mov
xchg
mov
cmp
jecxz
push
pop
enter
add
xchg
out
add
inc
push
(bad)
daa
imul
js
in
pop
mov
pusha
jo
aaa
mov
push
and
xor
pop
xor
scas
fisubr
sub
jp
aaa
inc
mov
xor
pop
cli
cld
adc
inc
hlt
mov
jbe
les
push
pop
mov
lahf
mov
mov
push
mov
(bad)
dec
push
popa
sbb
adc
and
aad
mov
mov
imul
sbb
out
pop
and
imul
test
pop
xor
xor
je
jg
mov
das
(bad)
xlat
cmp
nop
nop
stc
adc
sbb
push
jb
call
xchg
iret
cmc
imul
and
scas
lea
sub
push
aam
dec
pushf
pop
push
xor
cmp
pop
in
push
cmp
mov
cmp
std
sub
bound
xchg
mov
in
and
neg
cli
push
jmp
mov
pop
xor
push
test
outs
sbb
inc
int3
mov
or
lea
in
ror
inc
inc
cmp
movs
xor
repz
or
mov
mov
mov
mov
lods
out
sbb
mov
not
data16
sub
inc
int
or
jecxz
(bad)
xor
push
pop
push
fisubr
pop
dec
adc
aad
outs
mov
jecxz
das
add
or
push
call
mov
repnz
push
xor
add
xchg
adc
sub
sbb
loop
push
or
enter
in
sbb
and
or
inc
popa
fidivr
push
in
leave
cmp
div
mov
add
pusha
pusha
hlt
es
cmp
popf
and
cmp
mov
das
lock
xor
add
jmp
dec
dec
je
sbb
push
out
(bad)
cmp
mov
mov
push
adc
mov
(bad)
sbb
(bad)
mov
xor
ins
repnz
sar
mov
mov
cld
retf
stos
ds
(bad)
std
data16
movs
movs
mov
jo
in
data16
xchg
mov
jno
jmp
data16
push
das
int3
fwait
aas
adc
xor
test
stc
mov
jnp
xchg
fild
sbb
push
pop
push
dec
adc
mov
or
and
or
add
outs
scas
je
movs
and
mov
cli
or
mov
retf
adc
out
enter
loopne
lods
xchg
push
add
sbb
data16
test
clc
jge
add
sbb
sahf
cmp
adc
pusha
not
jg
sbb
push
and
stc
into
cmps
pop
jno
xchg
iret
out
(bad)
mov
cmp
enter
pop
(bad)
push
test
pop
push
icebp
fdivr
faddp
cmp
pushf
lods
sbb
(bad)
mov
and
sbb
mov
frstor
adc
fldcw
rcr
dec
xchg
clc
icebp
shl
gs
ja
sbb
repz
cmps
sbb
retf
mov
ins
inc
sbb
jmp
cmps
ret
jecxz
mov
in
cmp
aas
push
push
mov
mov
and
inc
sub
xchg
push
mov
shl
inc
jle
ud2
sub
std
push
call
call
pop
sub
aad
into
mov
mov
lahf
repz
or
les
mov
pop
lahf
pop
jmp
cmp
es
or
inc
stos
inc
out
shl
inc
mov
scas
adc
dec
test
mov
sub
push
cs
sti
inc
loopne
int3
mul
cmp
jo
and
add
xchg
pushf
(bad)
jecxz
int
(bad)
in
nop
push
fs
cmp
xchg
ror
push
shr
jbe
ss
ror
push
imul
push
outs
cmps
(bad)
sub
test
xchg
cdq
shr
add
outs
jecxz
adc
pop
cmp
pop
jbe
outs
sbb
ret
push
(bad)
xchg
call
dec
call
fmul
xchg
stc
push
jmp
int
ja
lods
adc
(bad)
sbb
push
pushf
mov
out
mov
test
jns
jl
add
hlt
adc
mov
push
lahf
enter
icebp
adc
pop
dec
xor
add
imul
popf
cmc
and
inc
call
movs
sub
test
add
cwde
jge
in
sub
fwait
clc
cld
jmp
inc
jl
jbe
adc
xor
sti
cmp
movs
pushf
shl
xor
data16
jb
scas
ins
jnp
mov
jle
and
pop
out
xor
scas
icebp
fisubr
js
es
push
jmp
test
sub
inc
imul
pop
xchg
add
adc
mov
dec
imul
fwait
jl
pop
pop
int
pop
cs
call
jno
add
sbb
jae
xchg
jno
jmp
xchg
dec
mov
sar
fisubr
and
pop
sbb
aas
mov
and
sub
cmp
jb
out
fdiv
jg
ds
jns
fiadd
in
adc
(bad)
push
repnz
int
mov
sbb
sbb
push
loope
xor
push
adc
xor
clc
mov
dec
inc
push
jb
cmps
jns
add
sbb
nop
mov
loop
mov
jle
mov
jne
mov
test
scas
outs
enter
and
fcomi
mov
fld
xchg
xchg
in
adc
cmp
ja
xlat
dec
add
xor
jb
and
cmp
outs
pop
adc
mov
stos
mov
rcl
stos
out
outs
add
add
mov
and
in
jl
sbb
fwait
imul
fwait
cmc
cmp
mov
lock
(bad)
xchg
xor
pop
cmps
or
jmp
sbb
sbb
add
fldenv
loop
inc
(bad)
adc
fst
jb
sub
enter
iret
mov
cs
jnp
pop
push
or
push
stos
jae
lds
sbb
pop
add
movs
push
cdq
xchg
movs
ror
inc
push
dec
mov
cmp
mov
aaa
inc
scas
dec
mov
push
hlt
cmp
sub
push
jns
xchg
and
dec
mov
mov
sbb
fs
xchg
push
mov
add
pop
into
cmp
jbe
xchg
jl
out
outs
sbb
outs
(bad)
jg
jnp
sti
fs
mov
push
into
call
loop
adc
inc
pop
daa
out
sub
gs
inc
rol
push
shl
mov
mov
add
jno
dec
inc
mov
shr
push
mov
mov
cmps
gs
xchg
xor
fistp
mov
out
(bad)
xchg
or
nop
cdq
add
lods
cmc
or
push
loop
cmp
clc
mov
test
push
clc
mov
sar
out
sahf
test
xchg
es
shr
or
fdivr
push
mov
dec
inc
scas
in
retf
inc
adc
mov
test
adc
loope
cmps
(bad)
ret
into
test
sbb
movs
pop
jge
in
add
lods
ja
hlt
pop
aaa
push
jns
popa
mov
jno
mov
cwde
and
test
in
ret
xchg
stc
je
sahf
fadd
mov
push
inc
fadd
cmp
pop
stos
ins
dec
push
ds
dec
xchg
jl
adc
or
jns
jnp
cdq
es
imul
test
inc
test
mov
stos
mov
retf
and
jae
sub
add
test
out
or
addr16
jge
push
mov
xchg
mov
push
add
not
jl
ins
xor
adc
pushf
xor
dec
xor
inc
dec
cmp
lods
lea
out
cmp
push
mov
aad
push
sar
xor
stos
ret
sbb
icebp
aad
cmp
xchg
jmp
iret
adc
push
cmp
mov
outs
adc
cmp
aas
add
mov
loope
out
adc
push
icebp
xor
mov
xor
push
loopne
movs
mov
or
or
not
fsub
pop
in
inc
gs
fiadd
mov
pop
mov
ffreep
cmp
loope
pop
add
bound
xor
cmp
(bad)
cld
and
push
push
js
sub
dec
xor
pop
cld
repz
adc
ret
dec
xor
lahf
sbb
jl
jno
xacquire
push
jae
push
xchg
sahf
push
repnz
popa
cmp
mov
push
cmp
sub
mov
call
into
push
mov
fld
fwait
add
mov
or
dec
out
xchg
and
scas
rcr
pop
sbb
out
push
xchg
ds
mov
loopne
stos
cs
push
mov
sbb
mov
and
repnz
mov
cmc
sub
mov
xor
lods
add
fld
cdq
jmp
(bad)
mov
mov
adc
fwait
out
data16
jecxz
sub
mov
mov
and
(bad)
sub
les
adc
jge
mov
scas
jb
dec
mov
cwde
ins
and
push
ins
sbb
sar
pop
cli
mov
dec
(bad)
ss
fcom
cli
pop
add
mov
fstp
and
or
shl
sti
call
outs
rol
jo
push
outs
mov
push
mov
mov
xchg
je
call
or
mov
cmp
fwait
in
xor
or
xchg
mov
movs
std
push
jle
sbb
cmc
mov
icebp
jns
dec
xchg
mov
mov
jge
inc
cwde
push
bts
pop
mov
adc
sub
fsub
cmp
jge
add
movs
add
add
cdq
add
add
xchg
add
add
add
add
add
add
add
add
add
add
add
sub
add
add
add
add
add
add
inc
add
add
add
add
add
add
fiadd
add
add
pop
mov
add
add
mov
add
jp
add
inc
add
add
add
add
std
scas
add
sub
add
in
add
add
add
add
add
add
add
dec
add
add
add
loop
add
add
add
pop
add
add
add
add
add
xchg
add
xor
add
add
add
inc
and
outs
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
dec
add
add
xchg
xchg
add
mov
add
add
bound
add
ja
add
add
add
xchg
xor
fsubr
add
add
add
add
add
dec
add
add
jbe
cmp
cmp
test
rol
adc
retf
xchg
call
xchg
cmp
mov
push
mov
js
pop
into
pop
jbe
(bad)
xor
out
and
lods
mov
es
fistp
je
shl
int
pop
js
adc
dec
cmp
test
pop
fst
shrd
pop
inc
out
hlt
dec
fwait
jnp
sub
pop
sbb
push
sub
into
mov
hlt
bnd
ss
mov
mov
je
int3
xor
cmp
sbb
adc
cdq
xlat
sub
sub
sbb
lods
and
int3
push
shl
sub
inc
cwde
pop
and
sti
and
sbb
aad
cmc
adc
mov
mov
mov
or
jle
xchg
add
dec
and
jns
sahf
and
xor
arpl
bound
fwait
test
stos
nop
mov
outs
dec
mov
fdivr
and
xor
adc
xor
cdq
dec
sbb
xor
rcl
or
test
out
je
add
fimul
sahf
cmp
lods
mov
stos
(bad)
push
fdiv
sub
xor
push
lods
ror
fcomp
dec
or
retf
and
fnstenv
mov
sar
push
fmul
push
(bad)
ds
cli
jbe
test
jg
bound
sub
ins
jns
dec
out
mov
mov
dec
pop
int
fldcw
jp
repnz
push
in
fldcw
dec
cld
scas
sub
jmp
ror
sbb
dec
fidiv
scas
test
push
sbb
xor
sub
xchg
jge
xchg
mul
idiv
inc
mov
stos
cdq
inc
sbb
jg
aaa
ja
fadd
cli
call
lods
or
rcl
cmps
ins
aam
xchg
imul
(bad)
sub
retf
add
xor
imul
inc
sbb
(bad)
sbb
adc
push
jl
popa
mov
fcmovne
cmc
sbb
sub
outs
and
leave
cwde
mov
jle
aaa
sti
and
es
aas
(bad)
mov
mov
mov
js
leave
sub
out
mov
les
and
fcom
cmc
into
or
xor
xchg
and
jae
jg
sbb
and
dec
cs
jl
int3
lods
sbb
adc
push
xor
sbb
scas
adc
pop
xchg
cwde
(bad)
pop
and
mov
push
test
sti
jp
out
mov
dec
inc
cdq
iret
mov
pushf
aam
(bad)
mov
push
jge
xchg
mov
jno
(bad)
mov
fcomp
add
mov
add
repz
mov
and
retf
pusha
mov
ins
adc
test
outs
cdq
pop
cld
xchg
pusha
out
lds
aad
mov
sbb
es
jno
pop
cmp
dec
push
adc
push
daa
out
cmp
or
push
gs
fist
out
push
jle
aas
jg
jmp
jmp
xor
mov
xchg
data16
imul
fisttp
pop
mov
iret
test
pop
dec
sbb
jmp
psubsw
jb
inc
sahf
fs
cli
pop
loopne
fiadd
add
repz
jo
xchg
std
adc
iret
enter
fwait
push
pop
or
out
adc
loop
icebp
mov
out
lock
test
sub
or
push
pop
pop
idiv
ss
popa
mov
mov
nop
inc
xlat
ins
mov
or
int3
mov
cmp
and
jno
pop
mov
ss
push
jmp
mov
lahf
push
std
xchg
push
or
mov
popf
push
shl
leave
lahf
mov
fsub
pop
cmps
jne
mov
push
jge
jns
xchg
mov
pop
pop
lods
out
and
popa
and
pop
out
inc
les
pop
add
sub
inc
ins
ja
pop
or
data16
dec
mov
and
jo
imul
sub
mov
mov
push
add
test
cli
adc
popa
push
(bad)
cmp
les
sbb
jbe
add
pop
aam
ins
gs
jmp
retf
xchg
or
mov
ret
mov
xor
jmp
push
pop
fld
sbb
dec
pop
dec
and
lds
push
jp
or
sub
pop
pop
push
dec
iret
fucomip
mov
xlat
neg
out
pusha
push
test
xchg
dec
outs
idiv
cdq
loope
mov
addr16
cmp
enter
and
mov
pop
mov
sub
cmp
adc
stos
xor
shl
xor
(bad)
mov
xor
cmc
(bad)
push
pop
push
mov
js
icebp
mov
inc
mov
dec
push
arpl
xchg
stos
mov
xchg
sub
push
inc
mov
adc
ss
add
push
cwde
push
push
aaa
mov
sub
cmp
inc
cwde
add
cmp
ror
xor
mov
mov
lods
idiv
cmp
bound
ds
dec
mov
fsub
xchg
rcl
cmp
pop
lea
sbb
dec
loop
xchg
ja
adc
stos
mov
inc
aas
and
ficomp
xchg
fstp
sbb
imul
add
push
jns
bound
and
mov
rol
and
pop
out
in
hlt
or
cdq
pop
ss
pop
add
mov
push
pop
xrelease
(bad)
mov
push
cmp
ds
mov
cmp
dec
mov
and
fisttp
rcl
fcmovu
sub
cwde
aaa
or
mov
sti
ins
dec
push
xchg
inc
imul
sub
jne
lods
xor
test
movs
mov
dec
jge
and
jae
pextrw
dec
rcr
xchg
cmc
push
xor
mov
popa
jmp
pop
cli
mov
jmp
xchg
clc
mul
dec
sub
call
push
jl
popf
rcr
and
xchg
ins
in
or
ins
(bad)
dec
sub
arpl
imul
xchg
fiadd
mov
inc
je
jb
adc
movs
cmp
jmp
jns
cld
cmps
sub
stos
cmp
(bad)
sar
ins
sbb
stos
sar
mov
cdq
add
cmp
adc
lock
fsub
je
sub
mov
sub
push
xchg
and
xor
movs
out
inc
inc
or
mov
sar
mov
mov
(bad)
sbb
int3
ins
or
push
sbb
dec
mov
ficomp
in
(bad)
gs
hlt
push
(bad)
xlat
out
mul
jge
inc
jp
and
dec
aas
sub
jmp
jns
cmps
jns
popa
dec
or
mov
push
data16
xor
movs
xchg
cdq
xchg
sbb
adc
fwait
(bad)
pop
jno
ret
and
sbb
and
in
adc
xor
and
clc
out
jmp
retf
lods
jno
mov
cmp
and
rcr
dec
xor
pop
inc
movs
push
dec
sbb
lods
mov
bound
dec
call
test
inc
hlt
test
xchg
pop
call
js
xor
add
ret
mov
shr
call
sub
hlt
jne
pop
mov
add
dec
les
xchg
std
jmp
mov
(bad)
jbe
fisub
mov
test
xchg
nop
inc
mov
xor
sbb
cld
into
lds
adc
mov
sti
ret
imul
pop
cli
in
(bad)
out
inc
sub
stc
aam
scas
push
dec
cmp
pop
sub
sub
sub
mov
ja
stos
xlat
iret
jmp
(bad)
cli
icebp
nop
test
sub
stos
mov
and
ja
sbb
xor
xlat
ror
shl
aad
mov
out
cmp
je
push
jb
mov
mov
fiadd
cmp
dec
or
movs
call
cwde
pop
xchg
inc
push
push
xchg
sbb
retf
cmp
mov
aam
mov
mov
les
mov
mov
out
inc
cmp
cmp
xor
inc
adc
imul
mov
leave
adc
lds
fdiv
imul
push
daa
sbb
clc
or
and
(bad)
data16
adc
std
inc
pop
scas
add
test
(bad)
lahf
shl
aam
cs
xchg
push
mov
arpl
jno
in
fbld
lods
hlt
mov
cmp
cs
jb
dec
jle
ins
add
sub
jecxz
rol
xor
push
fistp
sub
leave
xlat
imul
daa
jg
add
jb
add
jo
cdq
or
sar
hlt
les
add
and
or
fsubr
inc
jp
add
fst
data16
mov
sbb
fwait
mov
xchg
jnp
and
pop
xor
aam
jge
inc
jmp
pop
je
xor
or
movs
cdq
pop
cmp
mov
and
jmp
leave
pop
cmc
out
icebp
xor
call
clc
cmp
enter
rcl
ds
div
add
sbb
sub
and
push
cmp
jmp
sub
inc
movs
cmp
fsubr
or
in
ds
scas
pushf
mov
lock
(bad)
or
pop
cmp
iret
(bad)
pushf
popf
push
mov
cmp
les
xchg
xor
pop
icebp
push
mov
fnsave
pusha
jmp
cmp
or
add
mov
adc
in
data16
xor
pop
jbe
cmps
xchg
cli
mov
in
je
mov
jle
pushf
rcl
int3
sar
xchg
xchg
sub
push
sbb
fst
pushf
push
pop
(bad)
or
repz
into
sub
dec
push
(bad)
adc
in
mov
adc
js
push
jns
mov
dec
js
dec
std
in
leave
test
xchg
pushf
push
cmps
jne
ror
xchg
je
inc
rol
mov
jl
cdq
sbb
jmp
mov
out
movs
add
add
add
jecxz
add
add
add
add
add
add
add
add
mov
add
add
jbe
add
add
mov
add
add
add
repnz
add
add
sbb
add
add
add
pusha
add
fild
cs
add
add
add
add
add
add
mov
loope
add
push
cli
mov
cmps
sub
pop
aam
jo
sbb
pop
cmp
lods
mov
xchg
pop
and
sub
xlat
retf
and
mov
pop
arpl
fcom
cmps
iret
call
outs
and
sbb
mov
or
ja
add
mov
fiadd
cmp
inc
jmp
mov
(bad)
(bad)
mov
je
sub
dec
push
xchg
jecxz
sar
mov
aam
xlat
jne
cmps
cmps
xor
push
cmps
jae
pop
retf
jbe
add
dec
ror
into
(bad)
sbb
jl
cmp
cmp
xchg
adc
push
cmp
pop
inc
lahf
repnz
or
adc
xchg
int
ins
aad
xchg
call
aaa
cmp
push
mov
adc
inc
cmp
dec
sbb
cmp
or
cmp
pop
in
emms
call
enter
mov
pop
arpl
push
cmp
fldcw
cli
fisttp
and
mov
sbb
sbb
int
cmc
xchg
ret
movs
rcr
retf
jl
mov
xor
test
or
or
(bad)
xlat
arpl
test
mov
jae
adc
fs
into
sub
ja
adc
jae
xchg
xchg
jp
jp
dec
mov
mov
push
gs
dec
mov
imul
adc
and
xchg
sbb
stos
cmp
mov
jb
add
mov
adc
push
cmps
int
aas
xchg
fsub
push
(bad)
sbb
in
jmp
cld
pushf
nop
cs
in
cmp
add
shl
loope
arpl
in
mov
mov
xchg
xchg
push
mov
push
add
mov
cmps
push
dec
test
push
mov
and
mov
add
in
outs
frstor
pop
popf
cmc
mov
jnp
test
into
dec
xchg
add
call
dec
stc
test
mov
std
or
or
mov
loopne
push
pop
mov
inc
mov
add
cmp
lock
inc
ins
lds
cdq
inc
stc
out
addr16
fist
int
movs
rcl
call
leave
dec
or
mov
out
ins
lods
and
sub
xor
sub
push
or
popa
xchg
sbb
sub
sar
test
or
sub
and
test
out
push
call
in
mov
stos
je
push
jle
stos
mov
sahf
scas
in
bound
xor
js
mov
add
sub
pop
fcomp
rcl
in
xchg
out
es
add
addr16
scas
mov
dec
add
cs
fwait
mov
push
in
adc
and
mov
mov
add
push
ret
inc
in
(bad)
retf
adc
and
jmp
aam
cmps
je
ss
mov
or
scas
inc
in
rol
dec
mov
mov
rol
mov
push
adc
adc
test
cmp
sub
(bad)
mov
xchg
jp
push
xchg
adc
pop
cmp
aaa
xor
xchg
push
mov
outs
test
mov
xor
(bad)
ja
ror
scas
xchg
sti
sub
dec
sbb
mov
adc
inc
loope
xor
sti
stos
(bad)
dec
jne
sbb
gs
shl
ds
in
ins
(bad)
xor
xlat
test
mov
lock
adc
mov
pop
or
mov
jg
cli
imul
xchg
js
push
add
repz
loopne
js
pushf
iret
loopne
mov
push
pop
loopne
mov
in
mov
rcl
push
es
or
sbb
xor
push
sub
setle
xchg
ret
aas
bound
aam
(bad)
test
fwait
mov
icebp
dec
jl
les
pop
ds
sbb
xor
test
imul
pop
pop
mov
add
and
ret
outs
fst
mov
cmp
(bad)
aas
call
xchg
movs
pop
add
scas
rcr
and
mov
and
lock
adc
outs
sbb
outs
mov
xchg
xchg
inc
jbe
dec
sub
push
or
stos
std
je
out
adc
je
cmp
inc
sub
inc
add
ins
push
ficomp
xchg
inc
ds
mov
mov
lods
in
ret
sub
cwde
mov
pop
adc
fst
jp
pop
mov
lock
and
ins
jne
dec
push
mov
xchg
(bad)
pushf
sar
mov
cs
ins
retf
jne
loope
jno
xchg
stos
rol
adc
outs
fistp
and
stos
dec
push
es
fdiv
loope
xchg
and
clc
xchg
dec
js
sbb
enter
cmp
test
les
scas
dec
adc
in
into
push
mov
jmp
dec
fld
int
fisub
loopne
inc
push
sub
jmp
xrelease
in
push
sub
pop
xchg
popa
pop
fild
mov
scas
mov
fnstenv
push
enter
xor
repz
fiadd
inc
mov
and
lock
mov
std
cwde
mov
adc
jne
push
push
loop
rcr
inc
push
inc
mov
das
pop
leave
pop
sbb
sahf
pop
arpl
cs
cmp
loopne
lock
add
cli
lods
mov
mov
test
xchg
ja
add
movs
jns
(bad)
loope
lock
xchg
jne
(bad)
js
pop
pop
ret
jmp
stos
push
addr16
jo
cmp
dec
push
scas
shr
sbb
push
in
lea
mov
cs
or
sbb
sti
mov
sbb
icebp
cmp
ror
inc
outs
sub
xchg
sti
icebp
icebp
lea
add
ffree
das
sti
in
dec
pop
xor
cli
xchg
retf
fild
je
sar
or
or
retf
js
add
jg
dec
bound
pop
sysret
sbb
ja
call
scas
inc
sbb
xchg
jp
test
dec
addr16
ror
push
shl
or
cmp
jbe
mov
clc
push
pop
popf
push
push
call
mov
ja
js
pop
fsubrp
xchg
jbe
and
jb
stos
xchg
lahf
test
and
retf
loopne
test
jmp
fwait
or
and
mov
add
jbe
das
movs
mov
cmp
mov
push
dec
lock
fnsave
jb
pop
mov
and
inc
sub
lods
cmp
icebp
popf
jp
je
xor
movs
jb
xor
push
jmp
lods
movs
add
outs
(bad)
pop
mov
dec
and
stos
imul
dec
adc
(bad)
or
jmp
imul
sbb
push
outs
data16
call
and
std
bnd
dec
int
push
jnp
or
test
or
and
mov
sbb
ret
mov
popf
bound
ret
jmp
movs
and
scas
lahf
mov
arpl
xor
mov
or
js
mov
lods
add
mul
add
fbstp
scas
xor
rol
enter
es
dec
push
int3
stos
jg
bound
add
xchg
pop
sti
test
lds
iret
mov
mov
sar
out
loop
(bad)
and
xor
in
jno
or
cmps
or
mov
jbe
stos
sub
cmp
pop
icebp
sti
xchg
adc
das
and
in
xchg
xor
xor
jns
or
push
push
lea
pop
add
es
mov
dec
bnd
aas
rcl
push
bound
push
inc
ss
xor
cs
gs
scas
movs
out
or
xor
shl
jecxz
pop
and
add
jne
repz
cmp
mov
out
pushaw
pusha
mov
rol
push
xor
rol
inc
pop
(bad)
dec
mov
in
push
hlt
fisub
rcl
xchg
ss
js
shl
pop
or
inc
(bad)
cdq
fstp
or
xchg
jmp
aad
ret
fdivr
sysret
add
or
fnstenv
fcomp
jmp
(bad)
cmc
mov
aam
test
or
inc
xchg
test
fwait
das
and
pop
pushf
fsubr
sbb
push
xor
sti
mov
lea
in
add
push
and
ins
mov
mov
(bad)
xor
cmc
scas
sti
fdiv
gs
cmps
fbld
cmps
add
in
sbb
ss
xlat
mov
int
loope
(bad)
call
sbb
repz
mov
das
pop
aad
lock
fwait
xor
call
lds
sub
or
pop
add
pop
xor
(bad)
cmp
or
sahf
test
mov
push
pop
push
xchg
adc
mov
aas
js
fcom
push
int
add
mov
mov
cmp
or
push
scas
pop
movs
pop
call
movs
mov
cmp
jecxz
and
mov
fistp
scas
int3
arpl
retf
int
mov
adc
mov
icebp
jle
xlat
loop
sub
sahf
dec
gs
jne
call
push
outs
or
dec
nop
div
dec
retf
call
ficom
outs
js
mov
shl
jecxz
push
pop
out
jge
js
xchg
test
ffree
clc
push
mov
jmp
cli
call
cmp
mov
in
push
lahf
lds
mov
cdq
pop
and
push
push
mov
inc
inc
scas
xor
mov
(bad)
loope
pop
int3
or
es
mov
sub
icebp
xor
std
adc
aam
mov
popf
je
test
mov
or
mov
jge
pop
cmp
jecxz
rol
mov
mov
cdq
push
pop
xor
stos
pop
dec
push
xor
mov
addr16
mov
sub
mov
mov
mov
pusha
arpl
in
outs
push
jae
icebp
mov
test
rcr
pop
pop
mov
add
add
add
add
add
adc
add
add
add
fwait
add
add
add
cmp
xor
jmp
sahf
add
add
add
add
add
(bad)
add
add
jle
add
add
movs
add
add
add
add
add
add
sub
add
add
jnp
add
add
add
add
add
loope
push
and
adc
inc
shl
and
rcr
sub
cwde
dec
push
test
add
ds
cld
adc
pop
iret
push
js
push
out
jmp
lods
adc
push
pop
test
mov
popf
jl
inc
in
movs
mov
mov
sub
pop
and
push
jge
aam
push
sti
jns
xchg
mov
add
cld
xchg
jp
dec
mov
aam
adc
mov
daa
sbb
retf
repz
(bad)
mov
popf
dec
mov
sub
push
mov
(bad)
lock
sub
(bad)
mov
pop
mov
adc
call
xchg
(bad)
outs
lods
mov
pop
mov
inc
lahf
jmp
lahf
xchg
test
jl
dec
push
inc
(bad)
fcomp
std
mov
out
xor
dec
push
pop
mov
dec
adc
add
jne
ja
push
retf
lods
dec
push
sub
test
cmp
mov
jle
cmove
jg
mov
mov
vpshufhw
cld
les
adc
inc
loope
jp
cmp
mov
and
push
add
xchg
add
aad
or
add
test
loope
sbb
inc
add
outs
popa
call
pextrw
jle
leave
fs
sub
push
ret
cmp
pop
(bad)
shr
dec
xchg
retf
stos
pop
add
cdq
test
(bad)
xchg
xchg
pop
std
int
icebp
iret
dec
mov
clc
cwde
dec
aas
pop
fxam
sbb
adc
cmps
jmp
push
rcr
or
cwde
arpl
push
push
dec
popa
scas
pop
add
into
mov
cmp
add
cdq
push
xchg
sti
cmp
ds
out
cld
xchg
ja
dec
pop
jmp
mov
mov
in
and
jne
and
pop
outs
pusha
xchg
dec
push
sub
mov
stos
into
loope
xchg
pop
das
retf
add
jge
sub
aas
pop
push
ds
and
(bad)
dec
add
inc
idiv
add
mov
into
loope
sbb
sub
sbb
mov
xchg
sahf
(bad)
idiv
jmp
pop
hlt
pop
fild
loope
mov
ror
mov
hlt
fidiv
es
add
(bad)
jle
and
das
sahf
ins
pop
int
fs
cmp
retf
pop
loop
aad
jae
adc
mov
out
add
jp
inc
and
stos
sbb
jp
and
xchg
js
lock
mov
stos
int
sbb
jg
ja
scas
std
sbb
fwait
add
int3
loop
jbe
sbb
fs
mov
idiv
push
repz
cmp
nop
mov
cli
push
fstp
jmp
sbb
pop
inc
mov
fstp
jae
lahf
shr
dec
aad
shl
ins
mov
sub
out
out
mov
mov
cmps
push
call
in
pushf
dec
aaa
xchg
stc
ficom
push
rcr
xor
dec
pop
enter
lods
clc
or
sbb
loope
aam
mov
cmp
das
adc
or
add
icebp
add
xchg
dec
adc
xor
pop
mov
adc
cmp
sub
add
loop
idiv
fisub
sbb
out
dec
ja
sbb
test
xor
les
loopne
push
sbb
xchg
retf
sti
hlt
push
fiadd
sar
mov
lock
inc
xchg
lock
sbb
xor
mov
das
dec
fild
call
in
push
jecxz
jge
push
jbe
sub
test
jmp
or
xor
cmps
shr
jb
movs
outs
leave
dec
ret
add
out
ins
sbb
push
push
addr16
dec
in
mov
pop
in
xchg
dec
pop
add
mov
and
ins
push
push
ror
xchg
mov
mov
xchg
iret
arpl
out
inc
adc
push
imul
shl
mov
push
xchg
loope
mov
loope
pop
lods
in
mov
das
inc
pusha
mov
shr
add
dec
icebp
or
aas
dec
xchg
sub
std
mov
popa
cmp
push
out
fs
sahf
sbb
mov
and
jne
in
aas
dec
cmps
sbb
loop
movs
inc
mov
mul
fmul
mov
jg
and
aas
sbb
or
xchg
cmps
les
in
(bad)
imul
ds
and
or
xor
sti
sbb
xchg
sbb
push
ja
lea
push
push
aaa
mov
hlt
inc
pop
lock
cmp
addr16
cmps
pop
inc
push
imul
outs
push
imul
add
ja
fsub
mov
inc
mov
cmp
cld
loope
(bad)
movs
ret
mov
cmps
imul
push
push
cs
idiv
jnp
popa
mov
jle
push
dec
rol
(bad)
bswap
inc
(bad)
fwait
gs
out
add
and
ins
push
push
imul
or
inc
dec
jno
dec
mov
fs
push
cmp
xchg
out
jmp
call
push
imul
sbb
xor
movs
mov
cwde
das
inc
sar
lods
pop
call
pushf
sub
cmp
sbb
mov
scas
lods
jno
enter
jmp
hlt
pop
dec
xlat
stos
dec
pop
inc
aas
or
loope
dec
mov
mov
test
fst
sbb
(bad)
es
fisubr
or
test
arpl
jg
dec
and
lods
mov
sahf
loopne
cmp
inc
sbb
dec
pushf
sahf
in
and
imul
inc
add
mov
mov
sbb
push
and
test
fucomip
(bad)
pop
xchg
sbb
pop
xchg
aad
mov
xchg
js
retf
int
shr
(bad)
dec
jg
ds
daa
xor
cs
rcr
cmp
xor
xchg
imul
xor
fs
stos
and
arpl
cmp
call
sub
mov
add
mov
sti
mov
ins
adc
out
jle
ins
rol
stc
cmps
les
shl
dec
mov
sub
in
or
push
ror
call
icebp
call
mov
xor
dec
mov
dec
in
pop
mov
cmp
dec
or
jne
hlt
and
cmps
call
retf
loopne
adc
bound
mov
dec
fisttp
cli
push
pop
mov
scas
outs
inc
gs
mov
sbb
fwait
out
jb
mov
sub
lea
push
test
fidivr
cld
popf
pop
pop
sti
out
lods
inc
xor
mov
adc
cmp
jg
mov
add
ror
scas
push
stos
rcl
dec
push
xor
xor
or
pop
cwde
fist
pushf
xchg
push
lock
sti
fisub
fwait
std
adc
mov
mov
pushf
cmp
arpl
rcl
pop
aam
out
jne
(bad)
jo
push
and
cmp
push
lds
hlt
repnz
sub
push
shl
aam
inc
mov
es
cs
out
push
loope
and
cld
fnstenv
or
sbb
dec
test
sbb
in
je
out
xchg
pop
dec
loop
sbb
rcl
push
pop
mov
leave
xchg
out
stos
xchg
loope
cmps
cmp
je
test
add
stos
sbb
add
sbb
cld
int
add
test
sahf
ret
retf
or
xor
xchg
sbb
push
xchg
scas
int3
movs
fwait
mov
mov
shl
lahf
hlt
sbb
push
repnz
push
push
xchg
mov
int3
mov
sar
jb
(bad)
push
gs
xchg
out
ret
jecxz
enter
sbb
inc
std
mov
out
mov
jmp
adc
xor
retfw
(bad)
jno
push
stos
mov
cmp
push
or
call
mov
mov
jmp
rcr
push
repz
sub
pop
mov
loop
outs
xor
movs
xor
ja
push
jbe
mov
jb
pop
enter
fbld
cmp
sub
ret
call
ds
fs
test
call
mov
ins
xchg
sbb
pusha
jnp
mov
mov
pop
jl
dec
inc
mov
rol
movs
sbb
or
popf
mov
add
ret
pop
mov
mov
push
pop
and
stos
or
mov
mov
mov
les
sub
int
outs
add
jmp
loop
xchg
scas
hlt
test
mov
jg
sbb
int
fidivr
lahf
jo
jg
out
sbb
push
pop
mov
and
stc
push
daa
fist
popf
test
mov
cs
jle
mov
enter
in
dec
mov
sbb
mov
jae
inc
hlt
inc
jne
int3
jmp
out
ja
frstor
pop
xor
fld
jl
stos
sbb
ja
dec
aas
lea
out
call
dec
sti
(bad)
ins
sub
leave
mov
arpl
stos
push
add
je
cmp
dec
mov
movs
xor
adc
or
dec
and
outs
add
xchg
inc
rcl
inc
push
in
lods
xlat
stos
or
cld
push
fild
mov
xor
mov
fs
mov
cmps
fbld
sti
jge
xor
pop
(bad)
and
jmp
outs
fldl2e
scas
hlt
mov
shl
push
imul
imul
push
arpl
loopne
inc
fldl2e
sbb
pop
push
jg
lods
pop
mov
scas
int
mov
jp
dec
jp
pop
pop
push
and
jmp
sub
mov
out
dec
shr
pop
and
movs
int3
ror
shl
mov
js
pop
lahf
jle
xor
iret
sbb
cmp
daa
sbb
add
sti
lea
xchg
and
(bad)
and
loope
fist
bound
sahf
xchg
popf
cmp
and
ficom
fisub
adc
ds
mov
mov
mov
xchg
popa
rol
rcr
addr16
movs
add
in
fnstsw
dec
pop
pusha
inc
add
add
add
mov
add
add
repnz
icebp
lds
add
add
loope
js
add
xor
add
or
add
add
add
xor
add
add
add
add
add
stos
add
add
add
mov
sbb
add
add
add
add
add
mov
add
add
enter
add
cld
add
add
scas
add
aad
xor
sub
inc
add
cmps
xchg
cmc
popa
xlat
and
jmp
js
nop
sub
pop
leave
in
pop
fnstsw
ret
mov
sub
imul
shl
(bad)
out
xchg
and
stos
lods
xchg
das
out
in
add
addr16
ja
push
xchg
ins
pop
cmp
or
call
mov
js
test
dec
mov
pop
call
cdq
mov
sahf
sub
pop
out
test
mov
jmp
jmp
inc
pcmpeqb
push
(bad)
ss
ror
(bad)
mov
xchg
xchg
mov
xchg
(bad)
cwde
mov
xlat
imul
dec
fsubr
ss
mov
mov
int3
nop
pusha
add
pop
jl
cs
dec
pop
xchg
arpl
lock
mov
mov
pop
call
cdq
retf
push
mov
sbb
call
sbb
mov
or
mov
fadd
movs
not
push
xchg
mov
adc
mov
inc
fsub
test
lahf
pop
les
pop
loopne
and
adc
(bad)
(bad)
xlat
iret
adc
popf
test
nop
add
mov
stos
fisubr
sub
scas
xchg
sub
push
sbb
fwait
shl
xor
sub
iret
out
cs
and
xchg
jmp
movs
push
(bad)
mov
push
test
out
movs
lds
icebp
(bad)
jmp
inc
mov
pop
mov
rol
push
jno
int3
jns
xor
mov
movs
cli
cmp
pop
add
jge
and
cmp
outs
fsub
mov
push
imul
push
jge
mov
fcomp
mov
adc
push
cmp
out
aaa
fnstenv
das
add
xchg
rcr
aad
mov
add
mov
(bad)
retf
sub
iret
fcomp
shr
mov
mov
xor
fbld
retf
call
test
mov
(bad)
and
out
jne
les
xchg
inc
ret
hlt
lods
adc
or
je
and
(bad)
mov
sbb
adc
ret
shl
cmp
stc
cli
push
jae
xchg
mov
xor
push
cdq
cmp
data16
push
or
dec
mov
dec
movs
pushf
cmp
pop
mov
sub
retf
test
mov
out
cmp
xor
mov
push
(bad)
in
adc
ins
loop
sbb
mov
call
call
cmp
adc
pop
outs
add
jne
and
out
and
xor
jb
loope
or
dec
fcmovb
mov
pop
icebp
mov
pop
add
(bad)
pop
aam
call
(bad)
adc
mov
ja
and
aaa
xchg
push
cmp
jp
fistp
pop
jecxz
mov
mov
jge
lds
cmp
cmc
cmp
sub
lods
cmp
repnz
sub
push
xor
mov
sbb
mov
adc
imul
sbb
dec
inc
cmps
stos
test
aas
or
xor
out
(bad)
retf
lock
mov
pop
mov
or
cmp
jbe
inc
aas
add
cmp
add
retf
loop
aaa
nop
outs
xchg
jg
jns
aam
gs
inc
inc
jp
cmp
pop
test
pop
jnp
pushf
dec
fist
pop
push
es
ds
retf
push
in
movs
cwde
in
shl
dec
lds
dec
jbe
dec
jle
mov
cwde
push
dec
xor
cli
adc
jmp
sub
pop
mov
out
(bad)
adc
fwait
adc
cmp
mov
sbb
mov
mul
fcom
fisubr
jno
xchg
stos
fist
mov
push
pop
add
push
jno
fst
ja
adc
mov
rcl
adc
cmp
retf
pusha
and
xchg
fisubr
sbb
inc
pop
repz
pop
inc
pop
cmp
in
fadd
jne
adc
sbb
not
cmp
cdq
push
adc
ss
test
movs
add
xchg
mov
xchg
ret
mov
in
inc
mov
jae
movs
out
jbe
mov
cwde
sub
sbb
dec
nop
(bad)
stc
inc
js
pop
sub
jae
ficom
aaa
or
out
leave
xchg
loopne
add
xor
sbb
push
xchg
xor
in
inc
imul
das
xchg
or
repnz
mov
xor
push
(bad)
sahf
aad
shl
cmp
loope
idiv
push
xor
scas
add
std
lods
cmp
pop
stos
jne
and
test
add
fdiv
std
push
or
fadd
leave
and
cdq
cmp
loopne
push
cdq
inc
add
pushf
jb
and
jmp
pop
fs
nop
mov
sub
jne
add
jbe
adc
in
xchg
or
add
retf
mov
pushf
stos
add
or
loope
pop
dec
inc
loopne
push
ja
xor
nop
in
add
leave
push
inc
jg
inc
fwait
es
and
daa
nop
cmp
movs
aas
jmp
ds
ds
mov
sti
pop
add
stos
jmp
enter
enter
adc
test
in
mov
add
mov
lock
jg
sbb
ret
in
lods
rcl
jno
lds
pop
out
movs
push
sti
ins
stos
aas
push
push
mov
sub
pop
push
sbb
ret
sbb
out
xor
sub
mov
xor
ret
(bad)
dec
dec
std
loope
mov
inc
iret
ss
mov
imul
nop
and
cmp
out
scas
or
jnp
pop
fs
stos
lds
loope
inc
leave
jne
je
(bad)
push
std
aam
inc
sub
sbb
fs
js
in
push
(bad)
jno
stos
std
mov
push
daa
rcr
fadd
inc
inc
or
retf
mov
int
or
pop
push
bound
adc
jbe
pop
xchg
pop
sub
mov
xchg
push
inc
sbb
loope
adc
adc
mov
mov
adc
gs
jnp
ret
cmp
fist
dec
sub
xlat
xor
imul
jle
sub
xchg
ins
repnz
lds
push
cmp
stos
call
fld
pop
adc
and
icebp
(bad)
jecxz
xchg
int
mov
clc
test
mov
push
mov
adc
in
add
jnp
pop
xor
cmps
lds
jge
fwait
adc
cmps
fidivr
jg
xchg
pop
dec
mov
pop
shl
lock
mov
mov
je
enter
jge
out
and
push
and
rol
push
pop
rcr
pop
push
xchg
es
and
ret
js
arpl
fsub
cmp
dec
popa
adc
sti
mov
or
inc
daa
retf
ror
cmp
mov
push
mov
imul
mov
repnz
lock
and
lods
iret
imul
jle
in
ror
(bad)
xchg
mov
mov
xchg
(bad)
push
jg
xchg
enter
jbe
int
mov
pop
push
xchg
jno
(bad)
out
repnz
and
test
outs
fwait
je
popa
xor
sub
es
or
mov
push
mov
pop
pop
aas
retf
xlat
int3
mov
jecxz
inc
cmps
sahf
push
dec
fs
test
sbb
adc
mov
sbb
rcl
rcl
js
jl
jecxz
xchg
loope
lds
mov
jmp
(bad)
dec
(bad)
imul
lock
div
stos
sub
fwait
dec
mov
push
inc
dec
int3
push
mov
ret
iret
mov
int
and
sbb
imul
dec
(bad)
lods
push
add
mov
xchg
and
rcl
adc
pop
push
sub
in
add
inc
jg
lods
mov
push
popf
lods
pop
pop
dec
and
dec
pop
retf
mov
pop
jae
dec
xchg
loopne
popa
out
add
add
inc
mov
mov
adc
dec
adc
rol
xchg
bnd
out
push
push
int3
test
pop
(bad)
sbb
test
ds
inc
int3
xor
mov
inc
push
es
pop
pop
cmp
popa
mov
call
stc
and
mov
xor
mov
cmp
cmp
sti
and
popa
push
in
lahf
push
xor
test
push
pop
and
(bad)
jge
adc
les
mov
pop
ss
mov
mov
mov
mov
test
inc
mov
cmp
daa
and
test
xor
lahf
fstp
out
fwait
jmp
sub
jae
aaa
adc
fistp
pop
(bad)
shl
into
pop
push
(bad)
xchg
push
mov
and
loop
aas
sub
aas
or
or
mov
enter
repnz
dec
sbb
push
dec
mov
pushf
cmp
shl
mov
in
shl
dec
cmp
ret
enter
in
cmc
sahf
adc
add
jg
in
dec
cmc
leave
imul
pop
jae
imul
rsqrtps
ja
outs
ror
outs
scas
out
inc
adc
sub
ret
sub
pop
fldcw
mov
shl
int
js
test
jl
xlat
pop
mov
(bad)
jns
mov
xor
sub
sub
outs
cmp
mov
mov
les
cmp
test
mov
pop
jp
dec
in
mov
xchg
sub
ja
inc
ins
sar
mov
ret
int3
mov
sahf
cdq
inc
pop
mov
ficom
jbe
adc
add
push
scas
or
sub
clc
push
or
adc
loope
ins
mov
pop
mov
pushf
xlat
pop
ins
mov
gs
movs
(bad)
jo
lock
jae
and
xchg
push
repz
out
scas
and
nop
test
fisubr
data16
fld
dec
adc
ret
dec
pop
das
inc
push
mov
inc
scas
inc
xchg
jg
xlat
cld
pop
icebp
loope
push
inc
jb
xor
stos
mov
test
test
add
pop
daa
test
(bad)
and
mov
(bad)
jne
inc
add
add
or
jae
and
add
add
add
jge
inc
add
add
adc
xchg
add
add
add
adc
add
add
adc
add
add
add
add
add
inc
add
add
push
add
xchg
add
sub
dec
add
add
add
cmps
add
sbb
pop
mov
sbb
add
add
add
add
add
inc
add
add
add
add
add
cmp
xor
test
mov
add
add
add
add
cmp
add
xchg
add
sub
fcmovnb
icebp
push
lea
xchg
mov
fcomip
sub
and
sub
sbb
mov
dec
ja
push
idiv
repnz
sbb
jmp
clc
xlat
push
scas
push
test
add
cld
mov
sar
mov
leave
push
sub
sbb
into
in
daa
fcmovnb
ja
sub
iret
cwde
cld
and
std
push
out
cdq
jnp
shl
mov
mov
addr16
in
xor
lea
xchg
inc
(bad)
aaa
std
das
popf
xchg
adc
and
mov
retf
mov
not
pusha
jl
inc
jl
push
test
xchg
rcl
and
push
mov
stos
inc
and
or
or
shl
jo
repz
scas
pop
inc
add
mov
gs
push
add
mov
iret
lea
retf
mov
jb
pop
xchg
jnp
aas
dec
push
push
rcl
push
pop
mov
add
add
nop
xor
add
mul
test
clc
add
(bad)
adc
aad
sub
mov
jg
jns
mov
dec
inc
ins
je
cmp
push
push
pop
maskmovq
test
or
clc
fnstenv
adc
mov
cld
sbb
jnp
mov
sub
imul
lods
and
hlt
mov
xor
push
sti
push
adc
push
das
ret
scas
ins
les
cld
(bad)
cmp
jmp
mov
icebp
add
dec
js
mov
imul
pushf
jno
das
fsub
into
cmp
imul
outs
jb
push
aas
dec
sar
cmps
shl
sahf
mov
enter
retf
cs
cmp
out
ins
and
add
xchg
shr
xchg
pop
or
fld
inc
sub
into
mov
xor
ficomp
xlat
fwait
xchg
push
push
nop
or
in
repnz
(bad)
mov
xor
mov
pop
retf
in
test
ins
xchg
sbb
mov
retf
xchg
sub
jp
in
enter
mov
sbb
dec
mov
adc
jbe
(bad)
push
push
cmp
push
inc
pop
pop
mov
pop
inc
add
fcom
out
dec
stos
clc
out
lea
jl
inc
xchg
dec
xor
(bad)
push
jecxz
or
test
cmp
sub
mov
pushf
cmps
fstp
sbb
in
xchg
cmp
cld
and
xlat
stc
dec
mov
sub
into
mov
pop
imul
(bad)
rol
(bad)
cmps
jb
jg
mov
mov
jne
ret
push
adc
mov
hlt
pop
(bad)
sbb
nop
pop
push
mov
into
cdq
mov
das
mov
fxch
sub
mov
mov
xor
and
retf
mov
ins
push
out
ja
mov
retf
js
popa
stos
mov
inc
rol
std
aas
hlt
outs
and
fwait
sub
push
push
mov
gs
daa
dec
stos
cmp
ror
fnstenv
jecxz
shl
push
sbb
mul
imul
sub
xchg
push
mov
fld
clc
hlt
not
and
inc
push
cmc
xchg
mov
xchg
mov
inc
push
mov
enter
or
jle
imul
fist
sub
pop
xchg
ss
sub
pop
aaa
xchg
fsubr
clc
test
mov
(bad)
jle
push
and
xchg
shr
pop
and
cmps
mov
movs
dec
sub
test
hlt
sub
push
mov
inc
ins
mov
adc
sub
call
outs
xchg
push
(bad)
lahf
enter
xlat
jmp
std
or
ret
std
push
jle
pusha
cmp
mov
dec
les
ret
mov
arpl
push
jmp
test
fwait
push
pop
cmps
cmp
jae
into
(bad)
push
fs
mov
xor
jo
mov
dec
mov
scas
mov
push
pop
pusha
leave
add
call
mov
aam
fistp
test
and
cmps
loope
test
in
xchg
sahf
push
fcom
cmp
imul
sbb
test
fisub
aam
sbb
clc
mov
push
mov
cmps
retf
fistp
pop
hlt
in
mov
mov
aam
out
xor
xor
pop
jle
xor
sub
cmps
hlt
cmc
add
push
test
or
mov
hlt
mov
jp
adc
mov
aaa
call
jle
add
ja
mov
xor
mov
retf
or
jo
inc
jg
sbb
pop
adc
(bad)
je
jo
loop
mov
sub
fstp
nop
dec
cmp
int3
ins
push
(bad)
test
xlat
or
mov
xchg
retf
cdq
mov
cwd
mov
jbe
sbb
(bad)
push
out
mov
cmps
mov
shr
xlat
sti
xchg
rcr
shl
jo
mov
dec
sbb
addr16
adc
and
popf
add
dec
jge
push
add
sub
jae
popa
out
sbb
sub
cwde
xor
in
test
in
mov
mov
mov
mov
jbe
mov
cmp
or
dec
push
fbld
enter
xchg
push
add
adc
cwde
mov
(bad)
aam
add
outs
jle
fmul
pop
fst
daa
sbb
jle
adc
xor
test
jb
cli
out
add
lock
push
mov
out
push
int3
ds
jp
jae
sub
inc
cmps
pop
imul
sahf
jecxz
dec
mov
cmp
jp
and
inc
daa
push
scas
push
call
jno
xlat
dec
cmp
mov
push
jnp
pop
xor
push
or
test
cli
mov
fnsave
xor
(bad)
dec
movs
gs
push
int
paddq
add
push
sbb
cli
add
shr
mov
cmp
push
sub
scas
push
jle
mov
icebp
and
sub
mov
sub
aam
xor
sbb
add
adc
ins
rcr
rcr
popf
inc
mov
ror
fnstenv
add
mov
aas
mov
int
jl
cmp
mov
sub
shl
adc
sahf
jo
js
push
in
int
jle
jl
ins
sub
sahf
mov
sub
push
rol
or
mov
aaa
sub
pop
sub
sub
pop
cld
int
jg
xchg
int
inc
jmp
jb
fcmovnbe
leave
or
call
push
xor
leave
(bad)
cmp
retf
stos
jnp
and
jno
cs
fsub
jo
ins
xchg
push
push
ins
sbb
xchg
bnd
into
mov
leave
pop
pop
fwait
addr16
arpl
dec
inc
pop
xchg
add
shl
mov
arpl
xchg
sub
inc
pop
scas
mov
inc
and
or
xor
loope
sub
mov
jnp
(bad)
xor
mul
mov
repnz
inc
add
sbb
test
push
push
jne
loop
stos
daa
inc
cmp
and
jns
push
jno
jae
jno
loope
stos
add
push
imul
ss
daa
mov
(bad)
in
sub
ins
popf
and
in
addr16
mov
inc
xchg
pusha
es
and
cmc
mov
dec
popa
dec
outs
jge
mul
in
shr
clc
xchg
fild
or
test
movs
outs
adc
xchg
sbb
data16
inc
xchg
fwait
xchg
stos
xchg
mov
dec
scas
js
xchg
lds
pop
inc
sar
pop
repnz
sbb
rcr
jmp
sub
jne
ds
aam
fs
inc
out
cmp
mov
fldenv
mov
adc
add
les
mov
mov
jbe
jmp
xchg
dec
outs
xor
int
stos
mov
pop
mov
add
mov
xor
shr
jae
mov
jbe
inc
test
into
sub
sar
and
(bad)
shl
xor
lods
fs
lds
fwait
pop
es
aad
jl
outs
pop
cmp
dec
pop
repz
icebp
repz
or
sbb
cmp
loopne
sahf
popa
xor
out
je
cmp
cmps
shl
adc
cli
inc
push
mov
int3
icebp
sbb
add
mov
dec
mov
cdq
mov
adc
inc
push
xor
mov
or
jmp
lds
fmul
hlt
mov
loope
ja
imul
mov
sbb
jbe
bound
sub
les
rcl
(bad)
out
stc
bound
ficomp
pop
je
mov
mov
mov
imul
adc
push
inc
je
adc
stc
(bad)
sbb
xchg
inc
sbb
(bad)
shl
pop
and
(bad)
jmp
ja
pop
int
rcl
jp
adc
fwait
sub
rcl
mov
(bad)
and
sub
ins
imul
sbb
call
pop
out
dec
sbb
sbb
dec
(bad)
aaa
div
fist
stos
dec
cmp
push
inc
push
lods
jbe
mov
pop
and
xchg
loopne
in
enter
sbb
mov
shr
retf
sub
or
ficomp
test
pop
lahf
mov
xlat
ficom
(bad)
ss
loopne
jo
daa
pop
push
cmps
and
dec
rcr
sahf
scas
stos
cmp
ja
jb
aaa
sar
in
cmp
(bad)
cmp
inc
sahf
mov
fisubr
fld
pushf
cmp
push
test
mov
add
aam
cs
lods
xchg
lahf
ss
das
sbb
ins
pop
push
das
and
sub
cmp
in
jbe
hlt
dec
fst
adc
pop
jb
xor
(bad)
push
xor
in
mov
es
ret
jnp
out
lahf
fs
gs
stc
pop
ret
cmps
mov
cmp
jne
out
test
mov
imul
mov
jae
add
inc
pushf
xchg
or
dec
clc
xchg
xor
adc
cmp
xor
dec
jle
dec
sub
scas
aas
jo
mov
inc
sub
add
cmp
cmc
jle
fstp
and
pushf
mov
add
xor
add
add
add
add
add
push
add
add
add
sbb
add
and
sti
add
add
add
sldt
inc
add
add
add
mov
add
add
add
add
cmp
add
push
adc
loop
mov
inc
push
mov
(bad)
jmp
lods
call
sub
adc
(bad)
fcomp
loopne
hlt
pushf
and
xchg
sbb
ins
scas
jge
push
inc
push
stos
aaa
std
jns
jns
and
xchg
sbb
xor
jmp
lods
push
out
xchg
pop
jle
inc
bound
push
inc
ret
iret
jmp
or
xor
pop
iret
stos
jmp
inc
in
mov
add
jo
cmp
repnz
outs
inc
test
adc
cmp
lods
in
fnstcw
mov
jb
es
sub
das
mov
sbb
xor
(bad)
or
subps
enter
fld
in
cmp
jbe
clc
mov
and
ins
sbb
xor
aaa
cmc
aas
rcr
pop
add
sub
ins
or
arpl
pop
dec
cmp
dec
(bad)
push
stos
and
mov
icebp
out
mov
arpl
cdq
sbb
push
mov
mov
lods
(bad)
out
cld
add
jne
jmp
sar
xor
sar
shl
push
or
and
xor
jmp
cmp
sub
push
pop
xor
mov
inc
cmp
repnz
and
xchg
cmps
or
push
jns
push
jmp
addr16
inc
aad
xchg
sbb
add
push
(bad)
test
push
das
push
adc
hlt
mov
mov
hlt
(bad)
pushf
mov
mov
dec
js
imul
adc
loopne
out
fmul
retf
add
scas
jne
test
jne
int3
sub
jge
ret
mov
mov
jle
rcl
jb
(bad)
mov
inc
xchg
mov
adc
cwde
jne
adc
pop
mov
call
fwait
mov
ret
xchg
push
cmps
call
repnz
loop
retf
out
lock
and
cmc
enter
fild
les
cmp
and
cmc
out
outs
xor
cmp
dec
rcr
add
jl
cmps
dec
pop
movs
inc
cmp
pop
push
ror
mov
sub
jle
pop
jge
nop
mov
dec
push
mov
fucomi
pop
dec
or
push
ins
or
cdq
xchg
xor
push
pop
ds
xor
jle
fnstenv
ds
xchg
add
jmp
ficom
or
mov
push
fwait
outs
xor
xor
sub
adc
mov
jns
data16
jnp
mov
cwde
push
pop
rcl
mov
mov
outs
xor
stc
sysenter
push
add
mov
pop
sbb
or
ins
cmps
repnz
jp
mov
je
xchg
imul
lods
and
and
mov
ret
or
mov
dec
nop
pop
dec
shl
mov
test
in
xchg
(bad)
sti
mov
inc
sub
pop
inc
cmp
mov
or
add
inc
jg
in
adc
xchg
mov
dec
jne
repz
adc
adc
mov
arpl
loopne
mov
lods
sub
dec
push
mov
ja
sar
xchg
dec
fisubr
cmp
movs
aaa
fmul
xchg
sbb
sbb
push
test
ficomp
fdiv
mov
add
xchg
(bad)
jb
xchg
aaa
jle
enter
inc
push
push
mov
xchg
add
imul
adc
mov
lods
dec
(bad)
adc
call
add
pop
adc
inc
xlat
adc
fdiv
push
push
mov
(bad)
fcom
inc
fcom
out
push
jmp
or
movs
xlat
dec
push
push
push
outs
cmps
sub
pusha
lock
sub
jns
push
btr
lds
aam
dec
adc
dec
cmp
(bad)
cmp
mov
xor
dec
mov
scas
xchg
imul
fistp
mov
push
and
jecxz
into
jmp
or
ss
mov
xor
pop
jecxz
loopne
and
mov
xchg
test
cli
jb
mov
sar
cmp
pop
loop
or
inc
and
je
pop
in
sub
cdq
xchg
jg
or
add
retf
push
xchg
ja
js
fsubr
cmp
cmps
mov
(bad)
fist
outs
mov
sbb
jg
in
push
jns
mov
inc
shr
test
out
adc
sub
(bad)
cli
push
xchg
pop
mov
aad
movs
sbb
adc
mov
int3
cli
cdq
fs
sahf
test
xchg
iret
cwde
sbb
mov
and
push
ins
test
rcr
pop
dec
dec
pusha
add
mov
cmp
aam
pop
or
popa
rol
xchg
frstor
fbstp
push
loope
xchg
sub
pop
or
push
add
jl
aad
jp
lods
pop
(bad)
dec
(bad)
ffree
jmp
hlt
mov
cmps
xchg
push
mov
loop
nop
or
xor
div
and
ja
fmul
pop
aad
dec
add
pop
jl
mov
push
out
ss
dec
arpl
mov
jae
je
mov
popa
pushw
stc
retf
das
test
cdq
inc
fdivr
push
fld
call
lock
mov
cwde
mov
fwait
mov
test
add
mov
or
dec
fwait
inc
add
rol
in
fidivr
call
xchg
repz
mov
or
dec
sub
mov
dec
and
pop
scas
pusha
dec
xlat
dec
cmp
popf
fild
dec
mov
in
sub
mov
inc
adc
repz
ja
call
pop
fxch
xor
xchg
add
cmp
jo
push
fsub
sub
cmp
dec
pop
lahf
test
xchg
cmp
pop
repnz
push
dec
ds
in
push
(bad)
xchg
ds
mov
cmp
call
ds
cmp
mov
scas
sbb
pop
add
dec
outs
xor
xchg
ds
push
icebp
sbb
cdq
or
not
push
inc
imul
sub
jle
and
leave
test
inc
movs
cli
pop
add
mov
js
mov
mov
loope
mov
fwait
cwde
pop
push
mov
mov
pop
fwait
dec
and
retf
pop
sbb
xor
cwde
xchg
xlat
jae
enter
imul
dec
mov
std
push
push
mov
cmp
lods
push
jmp
cld
ror
jl
sbb
inc
sar
inc
test
rcr
test
loope
inc
cmp
mov
mov
out
pop
stc
idiv
in
xchg
ins
xlat
arpl
ss
xchg
dec
pop
jp
pop
out
mov
jae
xor
xor
jge
add
in
push
add
sub
test
inc
dec
mov
test
les
stc
adc
sub
jno
sbb
jmp
xchg
cld
push
lahf
arpl
xchg
dec
xchg
dec
jecxz
mov
pop
das
cmp
mov
popa
mov
test
jb
fs
daa
int
push
sbb
pop
fucomi
mov
loop
xchg
pop
add
mov
add
mov
ss
add
push
adc
sub
sbb
pushf
in
mov
enter
push
jne
loop
(bad)
lea
mov
imul
shr
test
or
or
pop
dec
iret
das
xchg
or
push
out
push
push
jl
fwait
cmc
fld
xor
stc
mov
pop
call
outs
inc
out
div
or
popa
pop
jecxz
jae
push
xor
jg
mov
lock
or
inc
repnz
inc
and
mov
rcr
sub
add
xor
and
ret
aam
call
fscale
ins
call
pop
pop
mov
movs
scas
adc
xchg
cmp
or
ins
cmc
xchg
repz
je
dec
pop
push
xchg
and
pushf
pop
aad
sbb
out
mov
loop
mov
mov
xchg
fwait
lahf
mov
test
movs
mov
(bad)
and
imul
jns
fld
es
fist
inc
je
mov
push
imul
mov
fdiv
ja
push
mov
je
shl
xchg
xchg
leave
push
scas
xchg
mov
jnp
fcom
loopne
mov
cwde
call
test
popa
jns
jno
sbb
sub
or
(bad)
push
dec
stos
and
mov
cmc
push
mov
fucomp
add
sbb
dec
mov
push
fs
out
inc
and
ja
lods
cld
mov
adc
xor
pop
(bad)
fld
in
fwait
push
into
jmp
or
cmp
add
ret
push
mov
cdq
or
mov
ret
push
clc
adc
jmp
shl
push
sub
jne
mov
(bad)
fwait
push
mov
test
in
scas
aas
sub
pop
(bad)
mov
mov
cmps
(bad)
dec
fisttp
push
jmp
cld
push
enter
pop
retf
and
int
pushf
fldcw
push
repz
rol
push
dec
and
imul
lss
mov
ja
mov
mov
push
cmps
adc
xor
lea
sub
in
hlt
test
and
mov
mov
pop
mov
jp
call
pop
push
dec
dec
push
jmp
adc
sub
fsub
mov
xchg
fidivr
js
sub
aaa
dec
js
jne
inc
outs
jbe
fnsave
shr
mov
arpl
js
inc
inc
loop
stos
and
xor
pop
push
push
cli
cwde
hlt
push
(bad)
mov
add
rcl
imul
lea
jmp
fwait
jmp
push
push
jmp
add
mov
push
cdq
arpl
sub
test
pop
mov
ret
cmp
lods
jo
push
sbb
mov
or
cmovns
stos
xchg
or
cmp
in
popf
out
fbld
fidivr
pop
pop
xchg
sub
xchg
push
jo
pop
pop
xchg
and
sub
mov
sub
fiadd
ret
or
daa
imul
sti
jp
adc
sbb
mov
mov
xchg
(bad)
fsubrp
sub
hlt
add
scas
cld
sti
inc
pop
es
or
mov
add
add
add
add
add
push
add
sahf
add
add
sbb
ins
add
cli
add
sbb
add
call
add
stc
add
add
pushf
and
add
add
add
js
lock
clc
add
add
dec
add
inc
add
lock
pop
add
dec
add
add
cmp
adc
add
add
add
add
add
add
add
add
add
imul
push
icebp
add
je
add
add
add
add
add
sar
add
add
add
add
add
les
add
leave
add
add
add
mov
add
add
cld
call
push
add
add
pop
add
sub
ds
mov
clc
add
add
add
add
add
add
add
add
lds
add
add
add
add
add
mov
and
add
add
sub
je
inc
add
clc
ret
add
add
add
add
add
add
add
mov
add
add
add
add
add
and
add
cmp
jae
add
add
adc
add
fwait
add
add
add
sub
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
in
add
icebp
add
add
xchg
add
add
add
imul
add
add
add
add
add
add
add
add
add
add
add
add
or
add
push
add
add
add
data16
add
add
add
(bad)
add
add
add
add
add
add
add
cs
mov
in
and
aas
aas
mov
cmp
xchg
dec
mov
into
inc
push
icebp
dec
sahf
lods
scas
or
xor
jecxz
mov
jmp
mov
arpl
push
xchg
sub
fdiv
xor
ins
scas
(bad)
mov
jecxz
stc
sbb
sbb
inc
mov
jns
jmp
jl
adc
popa
inc
mov
test
adc
sub
push
inc
adc
sub
pop
mov
nop
sub
inc
or
push
mov
ja
ss
out
jp
loope
pusha
sbb
inc
and
cmps
xchg
push
dec
(bad)
stc
sbb
fs
imul
jmp
push
repnz
(bad)
aas
clc
icebp
inc
add
iret
jp
aam
add
push
in
or
test
outs
cdq
pop
sbb
and
xchg
jns
add
adc
ror
fimul
std
bound
push
add
inc
dec
mov
daa
jecxz
push
cmp
hlt
pop
sub
cmps
pop
dec
add
dec
mov
push
aam
jl
enter
fisttp
fwait
mov
loop
mov
jb
sub
stos
sbb
push
rcl
mov
dec
mov
into
or
test
das
push
xor
xchg
adc
mov
sub
sub
in
stos
data16
jnp
cmps
jne
dec
mov
(bad)
mov
cmp
push
jmp
sbb
sub
mov
mov
inc
ret
inc
out
xchg
rcl
shl
mov
(bad)
je
or
or
fdiv
shl
lods
scas
call
jmp
ret
mov
sbb
xlat
adc
mov
ds
mov
jl
xor
and
cmps
mov
jb
jo
outs
xor
popf
pop
and
adc
or
icebp
nop
arpl
stc
popa
inc
int3
inc
sub
std
out
jl
out
mov
stos
(bad)
mov
sub
jne
xchg
sub
add
(bad)
pop
sbb
out
pop
out
mov
fisubr
xor
pop
movs
cmp
jne
sub
test
pop
mov
mov
aad
scas
add
ds
fsub
movs
(bad)
cmp
jno
mov
call
push
popa
mov
sub
add
jo
or
add
cli
aas
push
xchg
dec
or
das
mov
pop
pop
cmps
repz
or
pusha
cmp
test
popf
pop
mov
cld
mov
ret
fidiv
xchg
jecxz
dec
xor
int3
out
cmps
repz
ds
jo
in
mov
aas
cmp
jb
test
lds
sub
cli
stc
dec
jecxz
lods
shr
xlat
scas
jbe
mov
fsubr
data16
sub
ficomp
push
iret
add
out
mov
fs
jge
xor
mov
mov
xchg
jge
imul
cdq
pop
xchg
mov
jl
or
fwait
repz
sub
js
mov
push
loope
loop
sub
cmp
loope
or
inc
xlat
sbb
mov
pop
ja
stc
cli
adc
jecxz
mov
xor
mov
push
sub
and
sub
xor
add
adc
dec
fild
cmp
push
les
push
inc
cmc
mov
aad
pop
and
int3
and
xchg
(bad)
stos
jns
jb
or
(bad)
sbb
cwde
or
cli
push
sahf
pop
pop
pop
(bad)
xchg
mov
clc
sub
lock
call
dec
bound
jle
std
test
int3
movs
jbe
push
sbb
fmul
and
and
inc
xor
inc
mov
add
add
xor
pop
mov
mov
stos
and
aad
pop
pop
xor
jne
xchg
aas
stc
sub
test
aad
out
cdq
pop
or
sbb
ja
mov
mov
pop
arpl
mov
daa
popf
pop
adc
sbb
in
es
les
in
(bad)
fistp
jl
cmp
fld
retf
test
sub
scas
out
mov
add
push
ss
sbb
shl
popf
fstp
cmps
push
xor
scas
dec
call
mov
xor
jmp
mov
test
mov
dec
xor
add
dec
std
push
pop
das
mov
test
in
mov
and
retf
movs
push
xor
jo
jnp
and
push
cmc
sar
add
add
xor
pop
sub
out
scas
fs
jne
mov
fwait
daa
xchg
or
(bad)
fptan
xor
add
aaa
inc
inc
push
aad
xchg
fistp
sub
test
scas
sar
ins
xor
sub
stc
sahf
sub
or
ins
jmp
fcmovnb
cmp
sbb
shl
call
xor
clc
jle
push
arpl
jg
mov
inc
repnz
push
ss
outs
add
adc
inc
rcr
or
std
cli
or
xchg
jge
xchg
sbb
fs
mov
jbe
out
sbb
popa
dec
daa
es
adc
clc
adc
fisubr
jecxz
sub
sbb
mov
repz
push
sub
adc
icebp
pop
pop
sub
imul
ins
jle
push
jg
sbb
pop
inc
retf
mov
cmp
jmp
addr16
(bad)
int
xlat
push
int3
pop
sub
mov
add
mov
adc
dec
sbb
sbb
fs
pop
mov
loopne
mov
add
sbb
nop
retf
shl
scas
cmp
jne
std
dec
out
shr
lds
cdq
lea
shr
test
sub
mov
lods
pop
add
in
pop
mov
dec
nop
lods
rcl
adc
loop
pop
dec
mov
in
popa
xor
mov
sub
out
jno
dec
test
imul
inc
mov
in
aam
mov
sbb
movs
fst
mov
and
hlt
or
repz
sub
cli
adc
dec
add
shl
sub
lea
cli
and
xchg
push
dec
jb
dec
add
ror
movs
xlat
sbb
adc
jae
aam
(bad)
(bad)
mov
aad
js
cmp
xor
mov
arpl
dec
jle
xor
lods
add
sub
add
pop
jl
jge
push
xchg
imul
mov
mov
sub
(bad)
std
pop
or
popf
mov
(bad)
mov
loop
push
aaa
pop
dec
jge
icebp
sub
dec
ss
retf
popf
and
xor
jb
cmp
pop
pop
stos
mov
bound
push
xor
push
dec
mov
sbb
and
lods
xor
test
adc
sub
push
mov
es
ror
sbb
mov
fcom
ret
adc
sub
jecxz
sbb
lahf
pushf
loope
dec
and
xchg
aaa
popf
inc
cli
movs
movs
jns
stc
fwait
in
dec
test
movs
or
mov
mov
cmp
(bad)
mul
test
stos
imul
fcom
adc
mov
mov
mov
nop
cmp
ret
out
add
mov
mov
adc
mov
(bad)
(bad)
xrelease
pop
mov
and
push
dec
les
lea
jle
repz
test
adc
sbb
mov
adc
daa
sbb
pop
push
imul
cmp
pop
hlt
inc
fsubr
mov
add
and
mov
mov
xchg
mov
int3
mov
or
loopne
fdivr
retf
retf
sub
fwait
rcr
xchg
lods
fist
test
bound
push
lods
mov
push
and
cmovne
lods
fdivr
sub
cld
ret
ds
mov
ins
mov
test
imul
sbb
int
sub
jp
cs
sub
dec
jmp
dec
adc
mov
out
add
xor
cli
pop
rol
mov
ret
sbb
ja
(bad)
sbb
mov
inc
fwait
rcl
bound
or
cmps
clc
xchg
push
dec
outs
adc
mov
cld
mov
add
mov
mov
out
xor
test
mov
lds
cdq
push
and
iret
dec
or
add
pop
lock
jb
fnstsw
jno
cwde
cmp
inc
pop
cmp
inc
jbe
jle
push
fchs
push
xchg
mov
add
retf
cmp
aaa
repz
rcl
xlat
(bad)
mov
jo
sub
mov
out
mov
add
pop
out
sbb
xchg
dec
xor
pop
and
(bad)
jecxz
lods
mov
jecxz
cmp
xchg
adc
jnp
mov
or
xor
sar
xchg
xchg
cmc
in
pop
dec
(bad)
mov
xor
ja
bnd
xchg
jbe
stc
sub
sbb
jns
cli
cmps
cld
xlat
xchg
outs
sbb
xor
ds
and
rcl
push
out
sti
pop
pop
cmps
xchg
cmp
inc
pop
ja
jmp
cdq
push
xor
mov
jle
gs
or
stos
xchg
out
retf
xchg
sub
(bad)
in
aad
and
pop
jge
dec
test
jmp
sbb
iret
xor
clc
push
int3
pop
push
sub
aas
sti
(bad)
(bad)
(bad)
movs
xchg
cmps
push
ror
and
or
jle
in
pop
xchg
mov
inc
hlt
pop
arpl
push
loopne
jns
adc
icebp
and
pop
iret
fistp
sbb
icebp
fisubr
jge
stc
enter
adc
cmps
mov
cmps
push
rcr
jns
xor
cmps
fdiv
pop
xor
out
icebp
clc
sub
test
sub
add
adc
lahf
arpl
movs
and
xchg
lea
movd
push
shr
ret
sbb
shl
mov
mov
outs
retf
xor
sub
popf
pushw
cwde
mov
dec
ret
xor
cmp
xlat
mov
adc
add
or
mov
cmp
scas
mov
pop
mov
cmp
lds
int
arpl
cwde
ins
add
mov
or
xchg
mov
cmp
rcl
imul
and
add
add
add
add
add
add
rol
add
mov
add
add
add
add
add
add
in
add
and
add
add
(bad)
xchg
rol
add
add
add
add
jle
add
add
adc
sti
add
add
add
add
add
xlat
(bad)
pop
js
add
add
add
lock
call
add
mov
add
add
cmp
add
shl
add
loopne
icebp
fwait
xlat
loopne
es
addr16
sbb
movs
and
inc
push
sbb
jnp
fld
bound
retf
push
(bad)
cmps
inc
cmp
jp
test
push
add
adc
loopne
pusha
cdq
pushf
xchg
mov
loope
xchg
xlat
add
or
popf
pop
pop
dec
test
das
ins
sub
cli
sbb
hlt
xchg
cmp
mov
in
xchg
mov
sub
sub
aas
dec
push
xchg
imul
adc
push
into
mov
jge
sbb
xor
shr
sub
dec
ficomp
push
loopne
test
xor
jae
mov
xchg
shl
xchg
push
pushf
imul
into
lods
mov
xor
push
mov
jo
movs
bound
pop
out
fmul
or
nop
xor
mov
xchg
popa
retf
adc
mov
dec
push
add
xchg
push
popf
add
mov
push
aad
enter
pop
ins
aad
std
arpl
pop
mul
jmp
dec
call
lods
hlt
dec
xchg
cmp
inc
ret
popa
pushf
adc
imul
stc
nop
mov
xor
out
inc
xor
iret
pop
inc
mov
fwait
outs
loop
int
das
push
or
icebp
push
or
jbe
adc
call
mov
mov
pop
or
xor
aaa
mov
jecxz
lods
loopne
clc
lea
add
cwde
pop
mov
leave
jmp
stc
mov
jns
sub
mov
jo
ds
test
pop
ror
(bad)
scas
call
adc
sbb
sub
das
inc
inc
jg
out
or
in
dec
sbb
ror
sysexit
stos
mov
dec
sti
int3
pop
and
xchg
mov
cmp
or
push
inc
and
mov
cmps
mov
xchg
adc
lock
test
pop
jbe
or
sbb
imul
sub
jae
fsubr
push
cwde
dec
dec
leave
aad
fisub
push
shr
pusha
xchg
in
fadd
stc
pop
cmps
cmps
fmulp
iret
pop
sbb
(bad)
lods
scas
mov
(bad)
pop
test
push
nop
outs
jp
mov
add
inc
jmp
jns
rcr
pop
adc
cmps
hlt
adc
pop
add
jp
in
out
pop
ss
aas
pushf
xchg
lahf
sub
sub
or
adc
out
icebp
or
mov
xchg
aad
jecxz
sahf
xor
stc
adc
pop
(bad)
rol
loopne
popa
sub
cmp
or
dec
int3
imul
rcl
cmp
test
dec
rcr
in
ins
mov
sub
jno
dec
lds
mov
xor
cs
push
add
fidiv
in
sar
add
pop
sub
push
xchg
out
dec
popa
xchg
nop
test
shl
rcl
sbb
jno
sbb
inc
and
fmul
psrld
jle
ds
inc
inc
sub
out
rcr
rcr
lahf
dec
cmp
jbe
or
dec
lds
jp
sbb
(bad)
or
pop
push
push
sub
xor
cmp
gs
jae
push
arpl
push
pop
mov
push
dec
repnz
jmp
pop
fs
fs
fst
xor
ret
adc
or
or
jg
mov
jmp
shr
sbb
adc
gs
xchg
mov
mov
mov
ins
outs
inc
ficom
adc
in
pop
push
cmps
adc
mov
push
mov
mov
or
jnp
mov
xchg
inc
jne
mov
and
div
sub
les
adc
icebp
ins
sbb
cmc
or
mov
inc
enter
imul
and
add
sti
xchg
adc
cmp
sub
iret
pop
daa
dec
es
inc
push
jne
scas
jle
test
xor
or
aas
pop
dec
or
(bad)
loopne
jb
sub
sbb
shr
mov
lods
test
mov
lods
fs
mov
int3
mov
jne
fsub
xor
lea
sar
or
add
(bad)
fwait
aam
rol
imul
sub
xchg
sar
jge
or
mov
fwait
mov
outs
dec
adc
sub
or
xchg
adc
add
sub
fadd
stos
cld
scas
mov
popa
sbb
jno
gs
hlt
add
pop
dec
test
cmps
in
and
dec
popf
repnz
ins
lds
jge
xor
shr
mov
cmps
(bad)
push
jo
shl
xor
mov
imul
outs
add
mov
dec
adc
jecxz
xlat
xchg
add
xchg
add
call
and
mov
add
jge
(bad)
cld
dec
xor
aas
add
inc
dec
dec
repz
xchg
pop
sbb
sbb
popf
lods
sahf
dec
into
and
enter
int3
dec
cmp
adc
stos
bound
push
pop
jle
mov
dec
xchg
or
jg
dec
mov
loopne
in
and
sub
cs
adc
(bad)
xlat
enter
test
scas
push
shl
mov
pop
add
push
stos
sub
adc
ficomp
xor
loopne
stc
adc
or
popf
push
scas
jns
jg
out
pop
loop
ret
ja
and
sbb
add
arpl
mov
mov
mov
adc
adc
push
les
adc
jle
cmp
cld
jno
lock
xrelease
rol
in
dec
retf
sub
push
jns
pop
jmp
ins
rcl
xchg
mov
xchg
add
mov
xchg
or
fild
int3
cmp
lahf
fcomi
lahf
nop
or
mov
sbb
adc
nop
xchg
mov
and
dec
cs
push
cmp
rol
push
aad
xor
loopne
call
xchg
loopne
dec
icebp
xor
sar
cwde
retf
loop
in
xor
getsec
mov
hlt
and
cmp
jnp
push
sbb
shl
mov
icebp
push
push
loopne
mov
and
dec
neg
mul
data16
test
jae
mov
fisubr
adc
sti
mov
(bad)
push
lock
cmp
sbb
js
ror
push
ss
mov
dec
fs
dec
ja
rcr
add
push
cmp
fnstenv
or
inc
mov
jecxz
popa
inc
pop
loope
ins
push
cmp
push
push
mov
pop
stos
adc
sbb
fistp
xor
jnp
xchg
cdq
xchg
aam
fisttp
mov
or
cmp
mov
add
mov
add
cmps
push
sub
test
call
ret
(bad)
mov
adc
xchg
out
cmp
jecxz
in
add
sbb
xor
aad
arpl
fidiv
mov
fisub
retf
in
les
push
pop
cs
jg
aad
or
lods
and
sbb
sbb
mov
dec
out
pop
xchg
fisub
jb
add
cdq
adc
bound
into
rcr
xchg
sub
in
test
pop
jg
leave
bound
push
jbe
mov
fidiv
rcl
xchg
inc
frstor
ds
adc
add
and
ins
fcomp
fwait
mov
cld
(bad)
repz
cs
cmp
push
dec
test
sahf
push
and
enter
adc
sub
(bad)
(bad)
popa
mov
clc
or
lods
es
mov
and
rcr
pop
ja
fiadd
std
pusha
inc
mov
call
xor
mov
or
(bad)
data16
mov
nop
or
cmp
ret
and
pushf
aas
or
cmps
jnp
mov
mov
das
push
retf
pop
jo
in
push
mov
sbb
push
rcr
adc
and
mov
cld
pop
xor
cmp
jnp
sbb
mov
mov
mov
inc
xor
push
push
lods
push
gs
test
dec
shr
inc
cdq
cld
call
sub
sbb
aaa
shl
outs
cmp
adc
shr
inc
out
cmp
fwait
pop
lds
jle
xchg
cwde
mov
bound
xchg
cmp
pop
push
jle
sub
out
add
and
mov
sub
leave
(bad)
adc
inc
adc
mov
push
mov
inc
es
xchg
mov
imul
addr16
arpl
cmps
mov
inc
adc
adc
mov
fisub
xor
pop
ret
mov
enter
(bad)
xor
ins
cmc
and
cmps
or
stos
jmp
push
or
loope
outs
shl
sbb
cmp
xor
stc
adc
dec
push
jno
lds
sti
popa
movs
dec
add
xor
aad
(bad)
push
retf
ret
hlt
or
and
stc
pushf
mov
sbb
cmp
iret
out
sub
sbb
inc
fs
jmp
sbb
punpcklwd
fidivr
sbb
stc
cmp
pushf
cmp
(bad)
loopne
inc
cmp
lods
inc
sbb
shl
data16
jge
nop
cld
push
pop
sub
mov
into
adc
mov
mov
sti
push
push
stos
pusha
or
lahf
dec
xor
cmp
mov
mov
pop
pop
adc
adc
and
mov
xlat
push
sub
shl
pop
test
push
cmp
addr16
leave
lea
aam
int
cli
loop
sbb
push
adc
jge
push
sbb
sub
clc
cdq
adc
pop
aad
push
ror
cmps
lahf
or
jb
mov
xchg
test
xor
add
jecxz
adc
inc
mov
pop
test
dec
icebp
dec
movs
mov
inc
mov
mov
sub
mov
idiv
jle
(bad)
enter
push
pop
and
out
adc
mov
rcl
cmp
mul
xchg
pop
fild
push
stos
fimul
mov
ss
dec
or
call
jp
mov
add
add
add
add
scas
jmp
pop
add
add
adc
sbb
add
add
add
les
sti
add
add
mov
add
inc
add
add
push
add
or
stos
add
add
add
add
add
add
add
mov
add
pop
mov
add
sbb
mov
add
add
sldt
add
add
add
add
fadd
add
add
add
add
add
add
call
add
add
add
add
sbb
pop
retf
add
add
add
mov
add
add
add
add
pop
pop
cmp
inc
ja
xchg
test
jo
or
popa
retf
xor
mov
add
rol
ret
call
pop
push
bnd
in
popa
or
(bad)
xchg
dec
(bad)
imul
outs
jmp
movs
dec
ret
pop
scas
mov
and
or
jnp
sub
fild
sbb
stos
jg
jle
repz
sbb
pushf
push
mov
xor
push
sub
sub
pop
and
xchg
retf
xor
in
mov
mov
sar
mov
mov
dec
sub
pop
test
xor
dec
cmp
test
and
mov
std
cmp
sbb
ins
scas
inc
(bad)
out
sub
mov
xor
dec
test
mov
and
add
ins
les
add
(bad)
push
imul
xchg
mov
mov
fnstcw
xchg
jmp
rcr
jnp
fs
leave
xchg
add
rol
sub
mov
retf
pop
add
bound
fild
jb
stc
mov
scas
sub
fsubr
jg
je
mov
sbb
and
xchg
or
sbb
scas
adc
out
arpl
cwde
add
out
retf
mov
sub
lahf
mov
push
adc
rep
in
aad
pop
push
or
inc
cmp
js
push
das
cmp
or
cmc
inc
es
or
lds
stc
sar
pop
jge
jno
and
fadd
loop
xchg
or
daa
test
(bad)
jp
fldenv
lods
lods
stos
(bad)
sbb
adc
mov
fnsave
mov
jnp
fsubr
jno
xor
imul
xchg
add
inc
cmp
lock
xchg
pop
jp
mov
add
imul
jns
push
in
scas
xchg
cmp
mov
ins
neg
lods
inc
outs
cmp
push
bound
adc
fs
cs
int
fisub
sbb
xchg
pusha
or
pop
out
dec
xlat
ret
js
sub
(bad)
shl
test
std
push
lods
or
out
mov
push
cmp
sbb
or
pop
jle
push
push
inc
ror
idiv
adc
lahf
(bad)
pop
mov
arpl
sub
(bad)
sub
push
call
mov
adc
aaa
pop
mov
push
jecxz
add
push
pop
fs
repnz
js
mov
popa
mov
repnz
aam
aam
out
ds
dec
mov
call
retf
scas
add
outs
xor
(bad)
add
popa
xor
fst
addr16
push
sti
loope
mov
dec
dec
retf
mov
mov
arpl
and
repz
jns
sub
in
xchg
mov
add
aaa
les
mov
xor
mov
sbb
dec
bound
retf
fiadd
add
push
jbe
sub
es
mov
sbb
ror
mov
mov
mov
sbb
jmp
xchg
(bad)
mov
xor
mov
clc
movs
add
push
xor
jmp
call
inc
stos
sub
mov
pop
std
(bad)
(bad)
pop
inc
out
std
xor
adc
mov
xor
popf
pushf
out
loope
and
xor
jl
mov
fwait
pop
lock
jg
inc
cmp
std
cli
cmp
fdivr
cwde
mov
jl
add
in
adc
sub
and
ds
add
adc
cwde
fs
add
jecxz
mov
push
pop
ins
xchg
push
dec
(bad)
cmp
dec
nop
pop
adc
push
xor
mov
jns
xchg
clc
test
outs
jae
inc
mov
or
push
ror
mov
sub
jg
sub
push
fisub
bound
xchg
or
pushf
inc
or
mov
sub
dec
cdq
and
mov
inc
or
ret
ficomp
cmp
dec
push
or
push
repnz
sbb
and
cmp
fwait
push
iret
xor
add
cld
mov
jp
pop
rcr
mov
inc
mov
cmp
adc
lahf
je
icebp
test
jge
aaa
shl
mov
push
cmp
test
inc
into
imul
add
and
cmps
jge
sub
outs
pop
pop
push
mov
std
scas
or
(bad)
push
mul
(bad)
adc
push
and
mov
cmp
push
jae
jbe
ret
fisttp
pop
rol
inc
ret
adc
hlt
cli
adc
jo
xor
jns
ins
inc
(bad)
mov
pop
jb
std
lahf
scas
dec
inc
lods
in
leave
test
(bad)
(bad)
(bad)
imul
mov
xchg
sbb
repnz
xor
sub
xchg
shl
mov
ins
fisttp
cmp
push
jae
push
les
xor
jns
pusha
hlt
bound
icebp
call
mov
into
and
out
stc
mov
nop
cmps
mov
popf
je
xchg
mov
xchg
icebp
jle
xor
pop
mov
ds
test
jg
push
push
test
cmovno
rcl
add
(bad)
mov
mov
(bad)
mov
pop
(bad)
in
ror
call
adc
cs
jl
enter
add
push
out
and
mov
mov
jb
adc
fadd
repz
repnz
jo
out
out
mov
aad
xchg
and
dec
sbb
push
jmp
aaa
xchg
pop
js
inc
mov
outs
push
xchg
stos
mov
sub
retf
sbb
adc
mov
daa
dec
sbb
mov
mov
adc
xchg
arpl
or
mov
int
or
sbb
ret
ret
inc
std
cdq
dec
cli
cld
push
cmp
push
leave
ret
in
or
xchg
jno
loopne
imul
sub
hlt
cmp
psrlq
fstp
ja
mov
cld
je
mov
pop
pop
(bad)
test
ror
or
and
push
and
aas
repnz
repz
mov
inc
cmp
lock
out
add
out
xlat
in
stc
das
sub
adc
pop
enter
lea
sbb
mov
pop
mov
mov
in
ds
stc
jmp
retf
cmp
fwait
idiv
cmp
xor
(bad)
cld
mov
add
inc
test
call
jecxz
imul
add
data16
stc
stos
pushf
push
or
dec
daa
inc
call
add
mov
and
mov
mov
push
loopne
dec
sti
ds
dec
push
xchg
mov
dec
mov
lahf
cld
mov
xchg
mov
fild
mov
icebp
out
stc
mov
icebp
stos
sub
mov
ret
mov
leave
mov
sbb
mov
or
out
add
pop
jg
pop
xor
inc
xor
mov
mov
jp
pop
sbb
jp
inc
push
dec
sti
in
int3
fcomp
push
in
mov
mov
xchg
adc
xchg
xchg
adc
lock
sub
fucomi
dec
xor
jmp
fld
stos
sbb
(bad)
or
fadd
pushf
mov
push
xchg
mov
jp
pop
arpl
push
add
and
push
retf
add
fstp
xor
in
fsub
jbe
ins
mov
xchg
push
mov
(bad)
mov
jae
sub
xchg
mov
jge
xchg
jno
sbb
(bad)
sub
cmp
mov
scas
inc
inc
sahf
mov
push
dec
pop
sub
int3
xor
outs
mov
mov
out
std
loope
dec
sbb
mov
cmp
push
adc
mov
ret
ja
xor
mov
push
mov
and
addr16
dec
jle
and
jo
icebp
popf
lods
stc
mov
adc
xor
repz
xor
fld
sbb
sbb
mov
add
rcl
and
and
xor
lds
rol
aam
je
push
mov
popf
les
hlt
push
stos
pop
test
(bad)
cmps
jl
(bad)
mov
mov
cli
inc
and
push
das
xor
call
mov
push
in
cmps
mov
pop
scas
jle
mov
ret
call
inc
cmp
mov
fldenv
fisttp
xchg
test
push
jg
jl
inc
loope
rcl
cwde
sbb
dec
neg
lods
xchg
add
icebp
inc
jns
jecxz
or
jns
outs
iret
mov
xchg
sbb
enter
dec
sbb
out
ins
ret
cmps
add
in
inc
enter
add
xchg
imul
dec
imul
jl
and
int
jns
xor
pop
adc
mov
(bad)
and
in
fild
ins
sub
call
and
out
enter
dec
inc
mov
imul
cmp
cmp
mov
sub
cmp
jge
push
(bad)
xor
lahf
jl
xor
ja
in
sti
vmread
popa
imul
(bad)
mov
xor
fist
ins
stos
xchg
fadd
in
das
mov
sbb
or
cli
ret
or
(bad)
mov
(bad)
xlat
fmul
jmp
xor
stos
pushf
add
jne
and
lods
outs
cmps
cmp
out
and
jns
pop
loope
adc
popa
loop
dec
ret
mov
mov
pop
dec
sbb
pushf
loope
dec
cwde
adc
retf
dec
aam
scas
jo
aam
mov
adc
in
push
out
fidiv
sti
dec
cmp
mov
jno
cmp
jnp
cmp
sbb
dec
iret
icebp
pusha
mov
(bad)
adc
cmp
fwait
xlat
(bad)
gs
inc
clc
outs
inc
movlps
adc
or
popf
inc
add
mov
xchg
cmp
and
cmps
shr
jb
mov
popa
jle
xchg
leave
lock
sub
dec
inc
movs
sbb
mov
xchg
adc
push
add
add
add
jne
add
add
add
add
add
add
add
add
add
fiadd
add
add
add
enter
add
push
add
jecxz
add
add
add
add
in
add
out
add
add
add
add
add
add
add
add
cmp
mov
add
add
add
add
or
mov
stos
mov
inc
mov
in
jne
stos
mov
shr
jae
sub
jecxz
test
das
aam
bound
ss
sub
mov
retf
push
sbb
mov
outs
push
sbb
sahf
je
mov
repnz
lods
jb
sbb
or
cmps
or
mov
jg
cwde
mov
shl
ss
or
cld
cmp
push
retf
adc
dec
jb
into
fld
pop
adc
cld
adc
inc
mov
fdiv
cs
jmp
and
lahf
dec
in
test
mov
cmp
aaa
loop
loope
inc
push
mov
ror
mov
push
loope
cmps
inc
mov
sub
popf
add
pop
xchg
shr
xor
enter
xchg
dec
test
(bad)
push
add
inc
mov
lods
int
lahf
jnp
shl
and
sbb
fild
lea
repz
fcmovu
repnz
push
jmp
rcl
clc
xlat
aad
adc
ror
movs
add
stos
enter
aad
das
mov
mov
lods
call
and
inc
pop
js
mov
jno
push
test
inc
stos
cmp
mov
into
push
and
and
jne
mov
ins
movs
mov
idiv
les
push
dec
(bad)
jmp
cli
ss
in
shr
shl
rcr
or
les
outs
inc
icebp
pop
cli
dec
pop
fst
in
pusha
xchg
loope
out
movs
popa
in
xor
fwait
sub
or
mov
mov
test
or
mov
movs
imul
out
sbb
cld
in
pop
test
mov
pop
adc
and
adc
and
inc
jnp
xchg
adc
mov
loopne
(bad)
cdq
data16
mov
stos
out
sbb
shl
daa
cmps
jne
dec
inc
loop
adc
push
pop
and
push
aad
pop
in
lods
sti
xchg
mov
bswap
in
call
rcr
jecxz
jmp
xchg
(bad)
mov
fadd
mov
loope
mov
adc
mov
dec
cmp
push
cmps
and
leave
jbe
dec
jae
outs
mov
adc
outs
(bad)
push
add
push
sar
jae
cmp
push
ss
in
(bad)
jns
cmps
xor
sbb
pop
push
call
scas
pop
pushf
(bad)
repz
adc
mov
mov
inc
mov
in
fidivr
lock
bound
lock
cmps
cmp
shl
movs
mov
lods
or
dec
mov
pop
stc
xchg
inc
adc
dec
retf
push
call
fisttp
pop
jbe
sub
nop
stc
shl
jns
outs
pop
retf
mov
cs
data16
xor
fwait
cmps
enter
ss
mov
adc
mov
fcom
jo
out
push
daa
lods
dec
xchg
mov
repz
xchg
xchg
aam
sub
mov
xchg
enter
xchg
pop
push
pushf
jl
ins
mov
and
out
jmp
xchg
pop
mov
dec
mov
xchg
mov
movs
addr16
dec
(bad)
mov
and
call
xor
aam
mov
lds
add
into
push
aad
sti
in
retf
clc
je
dec
jno
repz
jecxz
ins
xlat
mov
dec
repz
sbb
stc
xchg
fimul
es
push
sbb
movs
gs
sti
das
popa
ss
inc
nop
dec
loop
outs
sbb
scas
test
mov
pushf
adc
hlt
xlat
retf
jg
mov
fisub
sub
pop
cli
push
add
ins
call
repz
mov
push
or
dec
xchg
xor
sub
ret
jle
add
mov
call
mov
mov
mov
inc
sub
or
cmp
mov
add
cld
or
jb
in
jecxz
das
in
mov
jecxz
fnsave
pop
daa
hlt
inc
mov
sbb
fwait
iret
retf
push
(bad)
cmp
stos
pshufw
bound
repz
fcomip
lock
or
adc
adc
mov
outs
aas
pop
xor
push
fdiv
and
mov
push
dec
mov
fwait
repz
pop
lea
mov
sub
xor
inc
mov
rcl
das
es
cmps
ret
jge
hlt
and
jecxz
xor
shl
out
add
imul
xlat
jle
pop
movs
push
push
ds
cmp
aas
ja
pop
push
in
or
test
add
push
lods
stos
pushf
and
jns
shl
fwait
lds
(bad)
cmp
fild
cmp
pop
test
xchg
cwde
sub
pop
mov
scas
inc
mov
ss
xor
test
pusha
jle
mov
cld
sub
mov
jmp
push
sbb
clc
out
add
cwde
rcr
mov
mov
int3
pop
or
stc
sub
jmp
xchg
xchg
in
push
fdivr
xchg
jo
icebp
(bad)
mov
out
dec
int
je
mov
pushf
xor
xchg
push
cmp
ins
cmp
mov
jle
js
sub
mov
test
cmp
pop
shl
imul
fldcw
ret
pop
jg
retf
scas
loope
cmp
mov
push
inc
fdiv
loopne
ss
in
pop
or
bound
mov
inc
sub
mov
xor
and
mov
inc
mov
pop
cmp
out
mov
fucom
in
jg
ins
rcl
stc
ret
or
mov
test
int
popa
test
sub
push
jp
push
pop
cmps
in
push
mov
mov
(bad)
mov
sub
out
mov
lods
adc
xor
push
dec
pusha
adc
movs
sub
lock
je
inc
cmp
xchg
xchg
or
hlt
cli
sbb
imul
cmp
pop
jp
ds
push
xor
movs
out
stc
jns
ret
call
retf
mov
adc
in
sbb
outs
mov
xchg
dec
inc
adc
imul
mov
retf
mov
sub
iret
jb
out
cs
std
jne
cli
inc
xor
mov
inc
jmp
sub
sub
xor
(bad)
and
inc
iret
dec
xor
sbb
not
repnz
mov
mov
mov
test
sbb
add
mov
in
push
out
dec
sbb
push
pop
cld
xchg
rcr
mov
icebp
pusha
jmp
add
outs
cli
out
add
xchg
cmp
sbb
mov
and
sub
xor
pushf
pop
mov
popa
stos
sub
jl
dec
push
(bad)
push
mov
sub
push
shr
into
mov
loopne
(bad)
and
pop
out
cld
dec
ficomp
inc
push
mov
cmp
(bad)
xchg
pop
leave
fidiv
movs
loop
inc
pop
mov
sahf
push
lea
mov
repz
sub
(bad)
out
mov
and
int
sub
stos
loopne
dec
js
loop
in
int3
test
pop
or
arpl
add
mov
call
xchg
adc
rcr
cdq
mov
shl
push
xor
(bad)
mov
pop
outs
cli
mov
inc
mov
(bad)
push
mov
or
jmp
outs
out
inc
es
test
push
xor
pushf
push
xor
hlt
ss
repnz
cdq
out
mov
mov
adc
in
ret
add
inc
jle
inc
std
xor
xor
fsub
sub
mov
cmp
xchg
rcl
jmp
xchg
or
cmps
jp
push
sbb
mov
mov
sub
push
test
jl
shr
repnz
xor
push
mov
(bad)
out
ja
jge
mov
out
mov
inc
cmp
arpl
lods
cmp
jo
sbb
xchg
jg
leave
xor
sub
out
inc
in
and
xor
sahf
dec
and
arpl
pop
adc
jns
sbb
imul
test
add
adc
lock
rol
push
jbe
in
daa
loop
jecxz
mov
lock
and
adc
stos
xchg
cmc
cdq
icebp
pusha
jo
retf
xor
in
inc
fiadd
add
dec
dec
les
xchg
call
mov
mov
and
sbb
sbb
xchg
push
inc
sbb
mov
inc
out
push
jno
lds
daa
inc
adc
xchg
(bad)
gs
nop
push
(bad)
lock
in
neg
xchg
sbb
arpl
mov
aam
clc
sbb
jl
test
repz
mov
and
repz
arpl
jge
inc
outs
stc
xchg
mov
mov
jmp
inc
iret
mov
enter
cwde
pop
xchg
inc
sub
test
ds
xchg
mov
cs
movs
pop
add
mov
out
cmp
in
xor
gs
ja
cmp
cmps
mov
push
add
icebp
jnp
add
out
mov
(bad)
xchg
add
inc
jnp
xor
sub
fnstsw
dec
cmp
fdiv
lock
mov
cdq
pushf
cmps
cmps
mov
(bad)
scas
adc
cwde
xchg
cmova
(bad)
sti
enter
test
cli
iret
xchg
call
retf
or
ins
movs
out
adc
div
or
cmp
dec
out
je
in
inc
mov
push
movs
cmc
xor
aas
lds
jnp
push
adc
pop
mov
jnp
sbb
int3
or
out
and
in
fcomp
mov
jo
cmp
jl
daa
add
jae
bound
iret
call
xor
loop
daa
or
repnz
pop
psubb
or
or
xlat
adc
pop
fs
adc
imul
jg
pop
sbb
rol
adc
dec
dec
sbb
cmovs
or
cmc
add
adc
jno
outs
mov
push
out
xor
movs
sbb
addr16
dec
nop
jmp
jp
inc
adc
xchg
and
(bad)
push
mov
xchg
jle
xor
add
nop
in
add
in
mov
add
add
add
mov
dec
add
add
add
cmp
mov
sub
ins
pop
cld
lds
test
div
jb
int3
xor
mov
or
or
mov
push
(bad)
or
sub
popf
xor
sar
lds
test
jae
xchg
outs
mov
(bad)
outs
ds
ret
push
dec
test
dec
xchg
sub
xchg
mov
dec
and
jmp
sti
mov
jae
sbb
mov
jne
sbb
dec
pushf
mov
jmp
adc
and
cld
fldpi
inc
lock
pop
push
arpl
pop
add
add
add
jo
fild
aad
jg
rcl
sbb
jl
dec
mov
xor
push
out
xlat
movs
cmp
test
lods
ds
loop
mov
f2xm1
cmp
or
dec
jecxz
pop
dec
mov
mov
rcr
std
pop
xchg
xchg
dec
(bad)
mov
dec
shl
pop
int3
xor
inc
imul
mov
idiv
sbb
mov
or
xchg
xlat
movs
addr16
out
lea
inc
shr
pop
or
outs
enter
stc
mov
jbe
pop
or
scas
mov
je
nop
and
ds
cmp
fistp
mov
xor
dec
xchg
and
in
movs
pop
loopne
push
sub
push
imul
lahf
cdq
jmp
jg
cmp
mov
(bad)
pop
lock
ins
cdq
mov
add
imul
jbe
push
sub
or
lods
or
fidiv
dec
push
sub
pop
adc
sub
clc
push
and
push
add
leave
pop
retf
or
mov
rol
pop
push
repz
repnz
push
inc
xchg
popf
sbb
lea
mov
sbb
mov
ja
dec
call
call
aam
pop
imul
stos
xor
out
aaa
and
fs
sahf
iret
rcr
cwde
cmp
out
pusha
lahf
adc
ret
pop
inc
js
fild
mul
mov
dec
cmp
mov
movs
sub
shr
into
add
xchg
adc
fstp
sbb
cmp
ret
or
mov
sbb
jg
cdq
sbb
jb
sub
(bad)
(bad)
out
sahf
sbb
das
xor
nop
push
fwait
test
cmp
mov
pop
mov
in
lds
cmc
mov
xchg
sub
mov
inc
repz
mov
arpl
cdq
push
mov
sbb
mov
(bad)
pop
sbb
cmp
ins
mov
cli
hlt
jmp
xor
(bad)
dec
fisubr
cmovb
adc
fs
push
jae
movs
sub
push
retf
scas
in
dec
mov
arpl
shr
pop
(bad)
ins
scas
scas
inc
dec
pushw
xor
inc
push
les
xchg
push
daa
cmp
mov
in
cli
xor
fidiv
popa
push
mov
xor
pcmpeqw
or
scas
mov
mov
in
cmp
fisubr
dec
xlat
jl
dec
adc
inc
aas
shl
data16
out
int
call
loop
sub
jmp
jno
and
nop
loope
sub
push
lods
pop
movs
cdq
jns
fsubrp
add
push
jbe
lahf
test
xor
sbb
fs
add
pusha
add
xchg
jae
pop
arpl
imul
ret
mov
lods
cmp
inc
pop
sbb
add
(bad)
mov
test
and
mov
dec
test
out
in
sub
adc
jg
dec
pop
xor
xchg
jo
jbe
rol
xor
(bad)
inc
inc
cmps
dec
iret
push
jns
pop
push
sub
retf
leave
mov
loop
push
pusha
xor
aas
cmp
mov
ror
rcr
scas
xor
push
adc
leave
pop
push
xlat
and
mov
push
ins
pop
cmp
iret
imul
jl
and
adc
stc
lds
mov
xlat
jecxz
mov
inc
sbb
push
out
sar
mov
cwde
jns
ins
cmp
call
scas
jns
ss
inc
dec
das
mov
and
cwde
sub
in
test
shr
rcr
or
int3
mov
dec
mov
mov
bound
pushf
cmp
pushaw
push
dec
in
xchg
outs
fprem1
mov
hlt
arpl
movs
out
or
mov
ja
hlt
aam
pushf
inc
ret
push
xchg
and
push
jb
pop
out
push
adc
dec
dec
shr
dec
adc
or
movs
movs
add
test
cmp
mov
mov
mov
nop
cli
add
mov
push
test
call
cmp
jmp
in
cmp
xor
test
mov
inc
or
js
aaa
add
pop
mov
sbb
mov
div
in
mov
jno
cld
out
scas
mov
fwait
aaa
js
mov
into
in
xor
xchg
xor
push
ror
lods
stc
pop
xchg
cmp
ret
sbb
sbb
fneni(8087
xchg
mov
fidiv
mov
xchg
jae
pop
mov
sar
movs
and
repnz
adc
inc
mov
mov
popa
aad
xor
into
inc
cwde
clc
pop
dec
jae
movs
mov
xor
sub
jae
stos
jmp
outs
add
push
pop
mov
int3
cmps
cmps
xchg
fisttp
jle
aad
rcr
dec
xlat
dec
mov
sub
jge
sbb
add
cmc
push
in
test
jge
stos
(bad)
sti
jae
or
lods
popa
into
jno
stos
xor
xchg
pushf
iret
xchg
push
pop
call
fst
push
inc
pushf
jmp
fwait
ds
sbb
jmp
movs
fnstsw
push
pop
add
dec
nop
mov
jecxz
imul
inc
(bad)
loopne
and
repnz
lods
mov
mov
test
mov
loope
sub
mov
repnz
push
fldcw
and
in
sbb
test
adc
pop
mov
pop
rol
das
das
neg
mov
out
inc
add
fmul
clc
pop
bound
stos
cmp
add
shl
mov
sub
dec
stos
xchg
pop
cmc
je
stos
jl
and
xor
cmp
nop
mov
out
jns
hlt
add
inc
inc
xchg
fwait
and
fdiv
fnsave
in
gs
jp
fcomp
outs
jmp
cwde
sbb
xchg
lods
aam
call
das
std
and
(bad)
adc
(bad)
xchg
je
es
fistp
sub
dec
mov
dec
or
inc
js
popf
inc
aam
inc
dec
xor
repnz
aas
pop
aas
jmp
push
fadd
lahf
xchg
jbe
and
loop
sbb
ss
xchg
repz
ds
mov
jnp
cmp
ficom
movs
es
mov
pop
pop
loope
pop
and
push
push
jb
nop
ds
dec
inc
sub
dec
aam
into
sti
mov
fild
pusha
nop
and
jo
in
adc
mov
loope
sub
gs
test
mov
and
repz
inc
and
repnz
ss
fcmovu
mov
div
(bad)
jmp
push
xor
jo
lahf
xor
in
rcr
sbb
jo
or
in
popa
add
dec
jns
dec
aam
scas
sub
jne
into
cmp
push
or
dec
push
add
test
scas
test
stos
adc
push
fwait
ja
sahf
aas
cmp
mov
mov
jo
rep
pop
mov
adc
cmp
cmc
jnp
and
push
movs
xor
pop
xor
inc
scas
jno
or
fisubr
inc
out
jne
fcomp
(bad)
je
loope
mov
mov
and
adc
mov
les
push
fnstsw
std
jnp
retf
pop
sbb
push
call
push
sub
test
jns
pop
retf
jo
scas
mov
loopne
jbe
sub
mov
push
dec
xor
adc
(bad)
or
sub
rcr
repnz
or
fwait
sub
movs
cmps
sahf
not
xchg
pop
clc
fnsave
mov
jns
fs
add
mov
mov
pop
sub
mov
fwait
sahf
(bad)
mov
xor
jp
ins
xor
scas
iret
icebp
push
sti
lods
clc
mov
setae
xlat
outs
out
(bad)
pop
int3
imul
ror
enter
inc
and
(bad)
mov
push
popf
sbb
cmc
jecxz
xchg
enter
icebp
fcomp
popf
xlat
fild
mov
sub
mov
xchg
and
pop
sub
cmps
and
scas
mov
aam
mov
aaa
(bad)
adc
sbb
cli
rol
xlat
bswap
and
jl
das
push
cmps
fsub
stc
xor
outs
retf
jb
ja
out
das
mov
div
cs
repnz
(bad)
push
or
xlat
(bad)
fs
enter
iret
in
aam
or
mov
cmp
pop
repnz
xchg
inc
xchg
or
cmp
cwde
clc
mov
dec
cmp
je
loopne
loope
mov
mov
or
jecxz
(bad)
pop
or
ret
jb
hlt
(bad)
pop
lea
xor
sub
dec
push
mov
popa
sub
and
stos
test
shr
adc
and
push
aad
xchg
mov
fnstcw
cmp
sahf
mov
fcmovbe
sti
addr16
shl
dec
sti
jle
outs
sub
inc
icebp
pusha
inc
adc
mov
mov
jnp
sbb
rcr
lds
jmp
iret
pusha
sub
jl
add
pop
cwde
inc
cmc
xchg
or
stos
pop
adc
repnz
pushf
pusha
movs
repnz
test
mov
or
fnstcw
call
mov
sbb
xchg
inc
pop
cdq
mov
pop
shl
stos
lahf
mov
jge
scas
call
enter
or
punpcklbw
mov
or
test
jmp
imul
adc
add
add
pusha
push
pop
sub
sub
repnz
mov
push
test
aas
fsubr
xor
pusha
cld
fsub
loop
mov
mov
inc
mov
aaa
repz
sbb
(bad)
cdq
push
add
(bad)
jo
push
jnp
cmp
or
xchg
cmp
clc
cli
fnsave
rcl
push
sbb
xor
fsubr
pop
add
add
add
add
add
cmovs
add
inc
add
add
add
cld
add
add
iret
add
add
sti
add
add
sub
or
add
add
add
loop
xlat
add
add
sub
add
add
add
xchg
add
add
pop
add
add
add
add
cdq
clc
mov
add
add
add
add
jo
add
add
add
add
icebp
add
add
add
add
add
add
jecxz
add
add
scas
nop
add
out
add
xchg
add
jmp
xor
jecxz
dec
add
add
add
mov
add
sub
mov
popa
add
loop
add
into
add
stos
add
add
xchg
or
add
adc
add
add
add
add
add
xor
add
out
add
add
mov
jns
add
add
xchg
add
add
add
add
add
add
add
pop
add
add
add
rol
add
add
add
add
add
movs
or
test
add
add
add
add
add
add
cs
mov
cld
cdq
aaa
push
adc
inc
jl
pop
lahf
out
add
cmp
inc
cmc
xchg
stc
ins
add
lods
test
stc
dec
jo
mov
push
or
icebp
pop
mov
gs
xor
add
cs
arpl
in
hlt
inc
cmp
jo
call
mov
inc
clc
frstor
loopne
lods
add
test
inc
xchg
dec
nop
push
push
inc
ficomp
dec
cs
daa
and
fmul
lock
test
xchg
pop
cdq
enter
imul
cmps
cmp
not
and
xor
cdq
or
dec
adc
int
push
mov
jbe
clc
adc
call
ins
lods
mov
sub
stc
and
adc
cdq
pop
test
rol
cmp
mov
add
adc
cmc
repz
xchg
sub
fbstp
add
mov
xchg
ror
push
nop
inc
xor
inc
aas
int3
scas
repnz
pop
retf
dec
popa
mov
daa
test
(bad)
cli
inc
test
ss
sbb
add
bound
data16
sub
sub
dec
jno
jmp
fs
xor
daa
mov
ins
or
cld
loope
retf
icebp
nop
mov
mov
mov
inc
or
jbe
lods
pop
and
sahf
dec
pop
adc
js
mov
into
mov
push
retf
sbb
adc
sbb
sar
pop
push
push
imul
push
cmp
xor
inc
sbb
ins
xor
fs
dec
rol
mov
js
enter
in
push
(bad)
dec
pop
cwde
fucom
adc
xlat
dec
imul
loope
dec
or
xchg
popa
fimul
(bad)
sub
push
dec
and
js
rol
or
(bad)
jmp
sbb
or
iret
jmp
push
add
aas
push
in
jbe
dec
int3
xchg
cmp
in
mov
test
dec
mov
icebp
stos
jo
pop
popa
aam
popf
add
and
stos
pop
out
or
(bad)
dec
ds
xor
and
mov
xor
mov
jo
mov
enter
cmp
int
push
jb
cmp
push
pop
clc
pop
jmp
loope
dec
(bad)
leave
and
mov
mov
es
daa
xor
lea
pop
(bad)
repz
push
mov
inc
in
mov
push
push
or
mov
shl
add
(bad)
jb
ret
xchg
push
aam
phaddsw
mov
sub
stos
mov
sub
pushf
adc
ja
sbb
push
data16
cmovno
adc
leave
inc
push
xchg
xchg
dec
jmp
out
mov
nop
xor
push
mov
mov
mov
dec
xchg
adc
adc
hlt
call
(bad)
(bad)
lods
les
inc
push
js
in
int
jnp
fwait
dec
xchg
jl
xor
enter
pop
push
dec
mov
test
mov
or
ja
mov
or
sti
loop
jmp
inc
sub
dec
(bad)
mov
out
xchg
ds
mov
and
enter
nop
in
sub
rcl
adc
add
retf
jg
scas
cli
test
and
daa
dec
add
icebp
sahf
add
push
pop
bswap
lahf
push
cld
sbb
stc
stos
mov
jmp
fadd
int
jno
mov
pop
fwait
mov
(bad)
int
test
xchg
loop
and
gs
or
pop
cli
stos
fwait
push
sahf
dec
ret
xor
sub
lods
outs
mov
imul
scas
add
inc
imul
mov
sbb
jae
push
out
int3
mov
xchg
dec
add
(bad)
pusha
movs
(bad)
push
lods
js
pusha
fistp
mov
jns
hlt
(bad)
mov
and
out
xchg
scas
mov
pusha
dec
mov
lods
jne
jecxz
popf
dec
xchg
mov
mov
pop
ret
cmp
bound
shl
loopne
mov
jg
hlt
sbb
mov
xor
lods
xor
adc
mov
imul
xchg
div
retf
xchg
xor
dec
retf
test
icebp
lods
inc
cli
imul
cmp
or
sbb
mov
pop
mov
xchg
mov
pop
retf
(bad)
out
mov
lea
cmp
push
jp
inc
out
mov
mov
cmps
jo
adc
push
pop
mov
fsubr
mov
movs
ds
sbb
call
lods
ds
(bad)
fimul
rol
xchg
and
jmp
gs
shl
mov
cli
leave
call
sbb
fistp
cmp
jecxz
sbb
shl
push
mov
daa
adc
pusha
dec
jge
jecxz
inc
mov
loope
mov
adc
pop
lahf
(bad)
cmp
retf
dec
pop
sbb
mov
mov
jp
mov
and
mov
stc
cdq
xchg
xor
les
call
inc
jp
jl
or
test
int3
dec
sub
or
add
sbb
pop
in
pop
mov
(bad)
test
sbb
test
cmp
pop
pop
jg
sub
cmc
inc
adc
stos
jg
mov
ficomp
cmp
mov
dec
ficomp
and
pop
scas
shl
sbb
nop
nop
dec
sbb
dec
and
push
jmp
rol
cld
jp
push
add
inc
cmps
and
jl
aam
mov
xchg
enter
fdiv
xor
cwde
fcom
movs
add
jle
sbb
arpl
xor
fsubr
daa
and
push
xor
or
push
cmp
xchg
imul
xor
cdq
aam
shl
push
clc
jne
stc
movs
pop
iret
add
std
lahf
jb
mov
test
push
(bad)
mov
aad
imul
lods
fwait
sbb
xchg
jecxz
cmp
sti
jb
dec
hlt
sti
ret
and
mov
add
mov
(bad)
pop
mov
sbb
popf
test
ret
loopne
clc
push
movs
pop
lds
inc
sub
mov
into
gs
daa
shr
(bad)
adc
push
mov
pop
jnp
pabsd
outs
daa
mov
(bad)
jge
mov
inc
outs
lods
sahf
xchg
mov
aad
pop
dec
push
(bad)
into
call
sub
je
push
mov
mov
aad
(bad)
adc
lock
inc
and
or
and
stc
sar
xor
pop
sub
fild
in
lahf
mov
mov
mov
arpl
gs
adc
push
mov
outs
adc
div
lahf
sbb
add
in
test
inc
ins
outs
push
ret
retf
mov
push
pop
mov
sbb
and
idiv
push
test
jecxz
jns
push
js
mov
fadd
fcom
pusha
cmp
stos
push
sub
dec
dec
shl
pop
jbe
inc
mov
and
mov
fsub
sub
cld
fbld
test
rcl
shl
mov
and
retf
xchg
mov
cmc
push
fidiv
sbb
cdq
icebp
rcr
or
jne
in
int
das
mov
sar
iret
mov
jecxz
sub
pop
scas
xchg
push
xlat
cmp
jp
cmps
arpl
mov
int
hlt
mov
xchg
add
sub
adc
imul
test
ja
xor
dec
mov
cmp
addr16
inc
rep
or
cmp
shl
cmc
mov
mov
loope
rcr
cmp
sbb
dec
sub
popa
dec
mov
scas
out
or
dec
adc
sahf
sbb
shl
test
lahf
pop
mov
sbb
shl
hlt
dec
cmps
lods
popf
in
pop
jne
pop
es
(bad)
out
(bad)
jno
inc
inc
xchg
adc
jp
repz
xor
movs
sbb
js
pop
xor
push
jl
push
in
add
rcr
mov
aam
cmp
arpl
loope
das
inc
imul
dec
cmp
lahf
sbb
xor
push
sub
adc
lods
rcr
and
adc
push
outs
je
(bad)
stc
push
push
retf
or
repnz
mov
sbb
in
pop
cwde
jmp
inc
push
stos
cmps
jmp
sub
scas
out
mov
jae
aas
in
cld
and
imul
mov
loop
(bad)
pop
pop
add
mov
or
mov
mov
mov
or
push
mov
mov
aaa
arpl
sbb
jmp
popa
test
test
pop
push
shr
xor
in
or
test
sub
jb
(bad)
scas
clc
(bad)
adc
sbb
or
jns
je
popa
mov
and
fs
jl
std
arpl
and
push
mov
sbb
stc
pushf
sub
xchg
in
outs
idiv
cmp
and
xor
and
sar
cli
std
mov
rcr
cmp
loop
inc
jmp
xor
mov
pop
inc
inc
outs
(bad)
(bad)
popa
and
in
aaa
fiadd
xchg
je
xchg
lock
add
test
mov
dec
(bad)
stos
pop
fnstcw
adc
test
mov
ins
gs
fisttp
inc
stos
lea
ins
mov
pop
mov
out
push
fmul
push
pop
mov
xchg
and
fimul
std
sub
or
in
mov
hlt
lods
sub
adc
out
cmp
fimul
icebp
aaa
mov
xor
push
adc
cmp
loope
and
mov
outs
mov
xor
ss
or
fdivr
push
loope
movs
jmp
scas
fdecstp
xor
add
dec
pop
add
jne
inc
imul
lods
mov
xchg
fcomp
sbb
pop
mov
mov
retf
pop
adc
das
enter
lea
int3
inc
xor
dec
xor
repnz
mov
hlt
pop
shr
imul
(bad)
out
mov
shl
sbb
mov
lock
xchg
push
xchg
mov
jl
jmp
add
sub
add
sbb
add
add
add
xor
inc
add
add
add
add
add
add
add
add
add
add
add
sub
add
add
or
add
add
and
sub
push
int
add
add
add
dec
add
add
add
call
add
add
add
add
add
sahf
add
add
add
add
add
add
xchg
add
add
xor
add
add
mov
add
add
add
add
add
add
add
add
add
jb
add
add
add
imul
add
add
add
add
icebp
add
add
add
scas
add
add
add
add
loop
add
into
fsubr
mov
mov
mov
retf
push
fidiv
inc
stos
popf
push
push
dec
adc
bswap
in
xor
ret
sbb
pop
lods
pop
xor
sbb
mov
test
pop
call
sub
lea
push
xchg
iret
xlat
lods
pop
mov
mov
jae
and
mov
jae
(bad)
aam
mov
shl
cmp
dec
bswap
aaa
ins
mov
aam
aad
movs
sbb
mov
pop
mov
test
mov
jge
stc
aas
push
scas
adc
jae
(bad)
adc
aam
xchg
mov
daa
xor
loop
mov
hlt
pop
mov
scas
enter
mov
outs
and
jp
outs
add
xor
and
push
mov
mov
int3
push
push
mov
es
and
adc
cmps
repz
cld
mov
xchg
sub
jl
icebp
add
inc
mov
add
fidiv
cmps
out
cmp
pop
ret
cmc
xchg
les
push
xchg
cld
int
into
cmp
aas
jmp
cdq
lea
leave
gs
pop
fldcw
fild
stc
mov
iret
push
jns
push
or
loop
xchg
ds
push
sbb
scas
mov
dec
sbb
les
push
ds
ins
add
int3
pop
int3
repz
lods
push
sti
fmul
lahf
in
or
ins
dec
stos
cmps
fiadd
mov
or
push
repz
popa
push
pop
cmc
retf
lds
retf
mov
div
cli
inc
mov
or
push
jmp
cmps
xor
in
fs
pusha
mov
test
popf
fldenv
fs
dec
jmp
int3
add
int3
or
push
popa
test
mov
in
pop
(bad)
jbe
dec
retf
inc
mov
dec
cmps
stos
(bad)
xchg
dec
and
test
mov
mov
pop
jmp
out
push
sbb
loop
xchg
mov
ss
sub
test
test
pop
mov
aas
movs
mov
dec
push
xor
bound
fnsave
pop
lahf
sahf
inc
loopne
sbb
lds
repz
mov
xchg
inc
jne
dec
mov
aaa
adc
or
mov
jbe
ds
pop
outs
push
test
inc
das
pop
pmaddwd
dec
jg
loop
pop
(bad)
ss
cmp
pop
outs
inc
lods
mov
mov
sub
icebp
aas
inc
rol
repz
mov
stos
xor
(bad)
dec
frstor
mov
add
dec
push
push
into
mov
pop
jg
mov
es
mov
sti
fld
jae
(bad)
ja
inc
das
out
(bad)
jp
fld
test
or
sub
xchg
mov
ins
inc
in
push
pop
aad
jl
jmp
push
adc
or
pop
es
and
popa
sbb
push
or
je
cmp
push
fs
mov
sub
xor
pop
inc
fwait
sti
les
dec
cmp
movs
sbb
call
mov
add
sub
shr
sbb
popf
out
adc
lock
das
or
xlat
call
(bad)
jno
push
(bad)
bound
xor
mov
mov
jbe
fmul
ret
fisttp
mov
push
into
sub
jae
(bad)
lods
xor
xchg
cld
sahf
sahf
and
ds
mov
adc
aaa
xor
fmul
jo
dec
pop
fcomip
cmp
add
inc
sbb
aad
aad
ins
cmp
push
neg
mov
sbb
sub
in
movs
cmp
adc
int3
into
adc
fidivr
aad
stos
lds
scas
aad
sbb
sub
in
push
pop
push
sub
push
das
aaa
(bad)
es
pop
in
aam
mov
or
sub
jecxz
push
jle
push
mov
sub
cmp
mov
and
add
adc
or
sbb
scas
idiv
xchg
(bad)
jmp
mov
pop
mov
adc
push
jecxz
int3
adc
jo
fiadd
and
xchg
jo
jns
mov
data16
nop
cmps
add
data16
out
sahf
xor
sysenter
scas
loop
sub
ins
(bad)
xor
shl
fdivrp
dec
push
push
ret
jmp
ror
mov
xchg
inc
fisubr
icebp
or
in
or
jl
(bad)
cli
shr
cwde
ins
inc
add
out
pop
pusha
fisubr
out
in
push
mov
cld
jmp
mov
clc
mov
in
pusha
cwde
(bad)
call
push
sub
ins
jne
imul
or
xchg
sar
rcr
jmp
fadd
adc
lods
ds
pop
xor
adc
add
push
and
pop
and
fneni(8087
retf
xchg
sub
pop
inc
test
shl
inc
mov
int3
add
leave
sub
pop
jno
fild
pop
jo
sbb
out
dec
mov
pop
js
rcr
stos
fsubr
jmp
jmp
call
or
pop
sbb
xchg
ins
add
out
cli
mov
stc
mov
xchg
ds
fild
mov
push
aad
sub
popf
stos
jns
out
xor
adc
pop
mov
pop
xchg
or
ja
and
sti
loop
out
cwde
out
in
mov
cld
jns
sub
mov
mov
imul
mov
(bad)
retf
(bad)
xchg
enter
dec
loop
push
ds
mov
ror
cdq
dec
mov
pusha
push
out
fsub
rcr
mov
(bad)
xchg
sbb
xchg
push
add
push
xchg
sti
scas
jp
cmp
xor
retf
push
nop
jl
jg
sbb
push
mov
push
cld
lahf
fdivp
mov
jmp
stos
jp
pop
shl
mov
pavgb
or
fidivr
pop
pop
stc
inc
stos
pop
sub
jmp
shr
clc
jae
lods
jle
mov
enter
fisttp
(bad)
xor
adc
rol
fisttp
ror
xchg
(bad)
arpl
mov
fmul
addr16
mov
mov
test
push
mov
outs
cmp
xor
or
push
(bad)
out
xor
jmp
mov
xor
cmc
fisttp
adc
sub
out
addr16
jae
pop
sti
and
pop
or
jl
push
aas
cmp
fistp
mov
mov
popa
pop
cmp
outs
cli
dec
adc
(bad)
sub
in
pop
inc
mov
lahf
push
(bad)
pop
aas
inc
(bad)
lods
adc
enter
call
jbe
pushf
loop
leave
nop
cmp
pop
inc
lea
cmp
xchg
cmc
aaa
push
rcl
and
lods
sbb
mul
push
inc
(bad)
test
mov
dec
inc
pushf
stc
pop
sbb
je
push
ins
cmp
mov
jg
ins
xchg
inc
imul
ins
inc
ret
push
scas
sahf
jg
sbb
lea
adc
jle
(bad)
and
jne
(bad)
lods
push
call
scas
pop
imul
dec
loope
out
dec
jp
jle
in
mov
imul
daa
loopne
call
cwde
jecxz
xchg
mov
mov
sbb
xchg
dec
rol
call
mov
stos
mov
inc
dec
fbld
pop
mov
in
nop
mov
shl
pop
mov
pushf
mov
nop
push
dec
retf
push
shr
xor
dec
xor
sub
lods
imul
js
mov
pop
cdq
xor
arpl
and
ror
fcom
sub
pop
xchg
data16
js
push
scas
pop
sub
push
sti
sbb
mov
clc
stc
jecxz
xchg
bound
pop
jo
cld
cmp
jp
ret
addps
sbb
sbb
mov
stos
or
adc
push
es
inc
dec
sbb
dec
sub
std
mov
dec
mov
pop
std
push
sub
pop
pop
dec
jae
dec
movs
mov
rcl
mov
je
imul
adc
mov
add
movs
loopne
mov
dec
mov
sub
ret
adc
call
inc
xor
xor
add
cdq
cld
pop
cmc
cmc
test
jae
push
pop
rcr
into
push
add
(bad)
(bad)
call
cdq
lods
sub
aaa
ss
mov
sub
sbb
cmp
mov
add
cmps
rcr
test
add
addr16
test
pop
pop
test
sbb
mov
mov
bound
mov
cmps
lahf
pusha
test
retf
push
iret
dec
sbb
jb
jp
iret
sub
adc
(bad)
push
repnz
movs
xchg
pop
fbstp
push
(bad)
sbb
fsub
xchg
xchg
mov
pop
leave
or
inc
pop
mov
adc
or
dec
int3
mov
or
stos
jg
cmp
shl
add
push
xchg
or
fisttp
jg
ds
xor
inc
pop
les
test
xor
mov
push
pop
(bad)
js
in
jmp
xchg
sub
push
es
int
xchg
push
sbb
mov
call
scas
mov
adc
xlat
xchg
inc
jb
inc
pop
xor
jo
and
mov
cmp
loop
aad
(bad)
push
push
add
xchg
inc
cli
push
test
shl
push
sub
xor
sub
and
xchg
and
sahf
lods
retf
jp
cdq
jne
adc
sti
dec
fdiv
jge
stos
adc
xchg
fimul
push
add
out
rcr
loop
adc
fld
pop
hlt
sahf
in
dec
fbstp
pop
cmp
xor
sub
lods
inc
xchg
sti
call
sbb
push
loop
dec
push
daa
ja
(bad)
pop
add
pop
je
cwde
lahf
mov
test
sub
push
xor
scas
dec
enter
sub
dec
inc
jb
mov
outs
or
xchg
in
jb
in
xlat
mov
retf
xchg
mov
js
std
or
ins
test
pusha
add
pop
sub
xor
cwde
lock
repnz
add
add
add
xor
scas
add
add
and
add
add
sti
add
mov
add
or
add
add
add
add
add
mov
add
add
add
add
add
add
add
add
add
fnstenv
add
add
cs
sub
iret
cmp
dec
sub
lock
xchg
rcr
mov
loope
fstp
jmp
fdivr
cmp
jo
adc
jnp
pop
into
xchg
lea
clc
(bad)
mov
pop
and
cmps
or
es
sbb
cmps
pop
cmp
jnp
add
cmp
rcl
cmp
mov
retf
mov
push
sbb
mov
mov
xchg
icebp
sar
or
add
and
inc
dec
cld
mov
adc
frstor
xor
sbb
lock
imul
in
push
fidivr
mov
push
pop
sbb
in
jbe
pop
lahf
cmp
(bad)
push
mov
xor
jmp
fs
or
mov
inc
test
in
(bad)
loopne
fcmovnbe
loopne
xchg
and
rol
fdivr
xor
leave
mov
pop
call
xchg
cmp
push
(bad)
call
mov
fist
mul
and
xor
xchg
xchg
xchg
ins
ins
pop
jbe
cmp
pusha
xor
(bad)
jae
sbb
stc
test
arpl
or
mov
cld
and
adc
push
mov
inc
inc
loope
mov
jbe
je
imul
ror
int
icebp
inc
jnp
jns
mov
sub
sbb
lahf
push
pminsw
xchg
mov
ds
jecxz
mov
aaa
adc
aad
sbb
pop
sti
or
call
shl
xchg
inc
popf
int3
mov
dec
retf
add
sahf
sbb
mov
pop
xchg
cmp
lea
data16
inc
mov
mov
je
shld
adc
shl
and
push
mov
fsub
shr
fcomp
ret
jns
xor
nop
movs
push
sub
jbe
shl
xor
int3
test
js
cld
les
mov
loopne
test
(bad)
mov
aad
ins
daa
jb
pop
cmc
div
fisub
stc
sahf
repnz
jbe
add
inc
aaa
cmp
fwait
mov
or
mov
test
pop
cmp
add
(bad)
push
cmc
loopne
mov
jecxz
test
or
retf
mov
repnz
xchg
popf
jo
hlt
pop
daa
movs
sbb
jnp
cli
icebp
mov
(bad)
clc
pushf
xor
sub
pushf
enter
jmp
loope
inc
iret
jmp
int3
test
imul
nop
mov
cmp
es
gs
out
enter
popa
xchg
idiv
sbb
daa
or
mov
or
mov
dec
stos
adc
and
pop
ret
cmp
push
xchg
retf
scas
cmp
loopne
jp
hlt
iret
sahf
ret
out
mov
mov
push
inc
dec
mov
icebp
push
adc
push
mov
cli
mov
test
test
test
sbb
fisubr
rcl
out
test
out
aaa
scas
mov
fsubr
adc
xchg
mov
adc
out
stos
std
test
aas
pop
mov
lods
cmp
sub
(bad)
gs
les
movs
mov
mov
sbb
jnp
addr16
mov
cmp
dec
mov
into
jb
cmp
mov
jne
pushf
mov
adc
cs
mov
pop
outs
xor
es
push
mov
je
cmp
jns
xor
mov
cmp
lock
push
idiv
out
mov
cs
lock
jmp
and
stc
add
int
push
pop
cmps
jge
and
dec
fisub
dec
pop
frstor
fs
cmc
aas
movs
test
popf
ins
test
sub
stc
jmp
add
jnp
outs
add
scas
fwait
pop
lods
push
jmp
cmp
xor
jp
fsubr
sar
ins
mov
inc
lds
mov
sbb
xor
in
pop
jae
lds
cmp
xchg
fist
cwde
push
nop
mov
in
scas
xchg
pop
and
out
movs
mov
scas
loopne
adc
adc
cmp
into
mov
xchg
mov
inc
call
aaa
jl
xchg
dec
inc
gs
ret
mov
loop
or
mov
int
(bad)
loope
or
fsubr
cdq
pop
outs
shl
sbb
and
xchg
sub
enter
aam
pop
into
lahf
dec
cmps
xchg
sbb
adc
bound
(bad)
jmp
xchg
mov
xlat
adc
fs
sahf
dec
ja
inc
xor
sub
mov
mov
xchg
mov
into
imul
or
dec
sub
test
pop
and
scas
pop
jnp
fsubr
(bad)
arpl
cwde
rcl
or
xchg
in
lock
scas
jmp
pop
cmps
mov
sub
mov
enter
mov
jno
fldenv
dec
lea
xor
sbb
mov
test
nop
rcr
icebp
bound
or
mov
dec
or
push
xchg
xchg
jl
adc
div
sub
leave
and
xor
fs
sar
jb
xchg
mov
adc
sbb
addr16
clc
push
je
xchg
ins
xor
in
push
test
pop
inc
sti
xchg
mov
int3
aaa
pop
rcl
inc
pop
shr
mov
pop
loope
mov
fs
imul
repz
inc
xor
test
mov
push
shl
pop
into
cmps
mov
in
repnz
jmp
gs
adc
(bad)
stos
lds
mov
es
lods
pop
jbe
shl
shl
jmp
popf
xchg
pop
add
sahf
loope
xchg
loope
je
or
and
xchg
repnz
cwde
scas
retf
cld
nop
jne
mov
sbb
or
adc
cmp
addr16
ds
stc
in
(bad)
std
aam
cmp
xlat
imul
(bad)
data16
hlt
or
fimul
out
movs
mov
pop
push
mov
or
jb
dec
or
push
enter
ds
jb
movs
push
out
push
gs
adc
xchg
mov
fcom
in
pop
lods
cmc
int3
mov
aam
sbb
or
sbb
ret
outs
gs
jecxz
sbb
and
xor
ror
js
xor
xchg
jns
in
adc
push
call
call
xor
push
dec
jno
push
push
pop
push
fist
lahf
push
push
mov
add
mov
test
outs
xchg
into
mov
sub
xlat
cmps
icebp
mov
sub
cwde
retf
sbb
aaa
add
fisub
mov
shl
gs
mov
sbb
mov
jg
and
cli
daa
lods
ror
mov
dec
aaa
sub
in
mov
mov
xchg
xlat
lods
idiv
jle
out
mov
xlat
adc
icebp
data16
and
popf
ret
push
mul
fist
push
cli
mov
sub
xor
jl
sub
mov
in
sbb
inc
sbb
mov
and
mov
out
sub
out
in
jle
or
ins
ret
push
ret
mov
fsubr
lods
cs
daa
in
jbe
ret
pop
or
and
mov
popf
xor
or
inc
jl
popa
dec
movs
xor
lock
and
cdq
cmc
loopne
lods
jb
add
stos
mov
mov
jno
pop
xor
jns
out
jno
mov
jle
ffreep
cmp
sbb
retf
pop
test
mov
rol
ret
fldcw
xchg
xchg
or
sbb
jecxz
push
jmp
adc
hlt
aam
call
mov
mov
mov
aad
pushf
adc
mov
std
lods
shl
cwde
movs
jo
or
mov
lahf
jl
(bad)
jl
stos
sbb
es
test
sub
imul
imul
out
icebp
jp
cdq
lahf
dec
rol
mov
push
and
inc
imul
sbb
data16
xor
jl
pop
mov
call
popa
dec
imul
dec
(bad)
xchg
ins
pop
retf
int3
test
dec
gs
push
jnp
jl
push
idiv
loope
adc
jp
movs
and
or
ret
fwait
shl
inc
(bad)
mov
out
fs
ret
mov
in
jo
jns
pusha
es
jp
aas
popf
mov
mov
cmp
fisub
in
ins
dec
aaa
add
dec
xchg
adc
test
xor
pop
or
scas
add
out
push
pop
test
in
mov
inc
clc
sub
xchg
jp
pushf
loop
xchg
xlat
pop
in
push
add
out
jnp
jae
sbb
fdiv
std
popw
jl
shl
lods
mov
inc
pop
sbb
xchg
fs
jae
pop
and
dec
fsub
cmps
cmp
and
outs
sub
sbb
pop
enter
(bad)
repnz
xchg
cdq
add
movs
imul
pop
mov
sub
nop
sub
arpl
mov
jl
test
inc
cld
shr
and
cld
and
xchg
jae
or
mov
lods
lahf
dec
mov
xor
push
add
and
cmp
jo
(bad)
stos
in
popa
dec
call
cdq
jge
jo
in
shl
dec
sti
ja
add
sbb
inc
das
or
lahf
in
mov
mov
not
xchg
inc
mov
mov
xchg
mov
and
or
mov
cld
sub
jne
xchg
inc
sti
push
jno
push
addr16
sub
inc
xchg
sbb
in
mov
jae
dec
les
dec
adc
ins
or
adc
sbb
mov
push
jp
push
fwait
es
adc
enter
inc
sbb
fnstenv
mov
test
cmp
fwait
sbb
sbb
pop
add
sub
fidivr
add
xchg
xchg
mov
xchg
cwde
pop
sahf
jae
fist
push
mov
xchg
xchg
and
in
imul
fsub
pop
jl
lock
push
mov
cmps
outs
inc
jmp
out
in
je
xor
nop
xor
push
fwait
sub
inc
pop
cmp
stc
div
fdiv
inc
and
bound
shr
xor
xor
bound
inc
jg
push
jg
jne
ins
sahf
in
mov
add
clc
add
repnz
add
add
add
add
add
add
add
mov
or
add
add
add
add
rol
add
add
add
add
add
add
add
add
mov
add
add
add
push
or
add
cmp
add
add
mov
add
daa
add
add
add
add
mov
add
rol
add
add
and
add
sbb
add
ins
add
add
add
add
add
add
add
add
add
add
pop
rol
add
add
add
imul
add
add
int3
add
add
sti
jmp
add
add
add
scas
test
into
add
bound
add
add
add
add
add
add
mov
mov
add
cmps
add
pop
add
add
rol
add
dec
cld
add
add
add
add
movs
add
add
jo
add
push
add
add
add
add
add
mov
add
or
jle
adc
pusha
jg
stos
mov
xlat
in
cmp
(bad)
push
pushf
push
push
mov
fs
jge
add
int
in
adc
pop
jl
xchg
scas
rdmsr
dec
sbb
jns
(bad)
inc
test
popa
sahf
dec
pop
and
test
popa
push
xchg
xchg
dec
cmps
(bad)
fidivr
dec
iret
fwait
lea
sbb
fdiv
and
push
fst
push
push
jg
mov
pop
scas
mov
pop
outs
je
jle
jnp
adc
cdq
and
dec
xchg
mov
or
cmp
lds
stos
push
lds
push
dec
test
xor
aaa
pop
xchg
mov
loop
mov
leave
inc
in
sti
hlt
or
jno
push
shr
mov
ins
lds
ss
hlt
fst
dec
pop
or
add
mov
cmps
dec
imul
sbb
mov
rcl
das
dec
loopne
cmp
add
pop
xlat
(bad)
push
loop
test
sbb
stos
out
xchg
jmp
push
enter
test
push
cmps
in
sti
and
sbb
bound
mov
cmp
jge
test
test
js
cmps
je
xchg
aaa
outs
sub
mov
lahf
mov
push
cdq
adc
shr
pop
not
dec
sbb
icebp
cli
push
lds
or
pop
mov
imul
ja
ret
loopne
mov
mov
inc
mov
sub
pop
inc
cmps
in
cmc
jl
das
pop
jno
mov
or
adc
cmc
pop
arpl
cmp
jecxz
mov
and
shl
mov
nop
dec
xchg
and
and
add
scas
push
mov
jle
push
or
aaa
icebp
int
add
pop
mov
dec
inc
loopne
and
mov
sbb
jecxz
sub
xchg
inc
push
push
push
mov
push
jae
gs
ss
fcmovbe
cmp
ins
dec
imul
push
outs
pop
add
dec
xchg
fldcw
sbb
mov
jb
(bad)
xor
push
pop
push
cmp
out
mov
push
adc
and
adc
lea
jo
gs
push
out
test
call
sub
mov
pop
cli
aad
xor
xchg
out
test
mov
inc
sbb
mov
repnz
push
cmp
outs
es
idiv
in
lea
push
sahf
fstp
aaa
gs
jns
(bad)
jne
push
jbe
fwait
xor
mov
xor
xchg
pop
test
pop
and
retf
xchg
jb
push
mov
xlat
add
or
int3
int3
data16
pop
fwait
mov
and
out
xor
dec
scas
int
leave
neg
cmp
add
xchg
xchg
adc
add
mov
sbb
icebp
cmp
retf
inc
stc
hlt
cmc
scas
scas
(bad)
adc
fs
sbb
sbb
dec
inc
(bad)
arpl
sbb
cmp
out
fbld
cs
into
push
ins
mov
movs
(bad)
adc
or
cmc
jo
out
cmp
pop
fld
jnp
sar
repnz
jl
call
cld
mov
and
jno
or
dec
mov
push
xchg
adc
test
jne
jp
sbb
nop
sbb
in
sbb
ins
shl
or
cs
xchg
dec
jne
adc
out
fidivr
pop
add
loopne
nop
cli
jns
push
mov
inc
lods
cdq
std
leave
inc
xor
scas
adc
cmp
mov
mov
(bad)
or
lods
push
push
pop
and
jmp
(bad)
lock
rcr
adc
ins
sti
cs
sub
gs
inc
mov
pop
adc
cld
ins
xchg
int
in
nop
shl
pop
sbb
jmp
call
retf
retf
pop
mov
adc
jb
int
sar
jbe
retf
call
sbb
stos
push
js
nop
inc
mov
xor
inc
ins
dec
neg
adc
popf
aas
fild
jae
inc
scas
mov
mov
add
pop
or
and
mov
mov
push
into
cli
pop
arpl
sar
movs
ficom
jmp
imul
loopne
mov
lea
jl
fistp
push
dec
sub
clc
inc
scas
pop
icebp
sub
imul
mov
ins
jo
inc
(bad)
push
cli
jnp
push
jno
lahf
scas
out
mov
push
addr16
jmp
xchg
cwde
(bad)
add
pop
enter
push
mov
cmps
ret
into
sahf
aas
inc
jne
fwait
dec
add
scas
shl
push
xchg
into
jle
shr
add
popa
mov
call
not
pop
jne
cwde
call
fild
push
fsub
retf
ss
movs
cmp
cmp
addr16
mov
out
push
movs
leave
(bad)
in
mov
cld
sub
loop
fstp
sub
mov
jbe
xor
add
in
add
dec
push
aas
cs
push
push
je
into
retf
and
popa
pop
(bad)
jnp
mov
mov
cdq
aam
cmp
sbb
aaa
stc
push
xlat
jns
ret
cmp
and
cmp
popa
pop
test
not
adc
(bad)
out
xchg
loope
sub
in
xchg
fucom
xchg
or
iret
add
push
jl
cmc
xor
push
push
mov
xchg
push
aas
jp
push
loopne
and
sub
xlat
or
add
push
mov
gs
mov
inc
mov
inc
call
in
outs
jae
in
xor
or
cmp
and
fucomi
rcr
inc
push
fwait
mov
ret
add
shl
mov
fwait
fs
inc
xchg
(bad)
out
or
and
or
xor
fstp
stos
sbb
xor
sub
call
test
or
inc
lods
or
in
cmp
mov
mov
lahf
cmp
jb
shl
push
cmps
clc
xchg
int
std
jne
and
xor
push
push
sar
push
out
sbb
adc
jae
or
dec
pop
jle
mov
mov
outs
push
ror
ds
jae
add
xor
cmp
lods
dec
sbb
adc
mov
mov
fs
mov
push
int3
outs
nop
push
xchg
loopne
xchg
xchg
cmp
cs
retf
jecxz
dec
add
fbld
rcl
mov
adc
pushf
movs
test
(bad)
xor
aaa
inc
movs
sbb
ja
cmp
adc
jmp
add
cmp
outs
popf
add
jb
cmp
outs
jp
je
das
test
xor
xor
jns
je
push
adc
addr16
mov
daa
dec
outs
cld
ss
add
je
xor
xor
test
ficom
(bad)
outs
sub
hlt
(bad)
popa
ja
mov
int
mov
gs
and
rcr
cdq
mov
jns
jno
xor
shr
dec
scas
fwait
push
rol
popf
sar
or
sahf
sub
cs
add
in
sbb
adc
adc
sub
pop
sub
mov
inc
mov
inc
rcr
mov
sbb
or
inc
(bad)
jmp
and
(bad)
dec
xchg
lods
jo
inc
jb
popf
adc
and
add
cmp
sub
lock
xchg
es
fcomp
xchg
cli
pop
mov
aam
sti
cmps
sbb
fnstenv
mov
dec
add
icebp
(bad)
xchg
in
adc
movs
mov
test
out
xchg
mov
mov
ds
add
xor
aad
or
sbb
enter
sub
test
push
mov
fdiv
dec
push
popf
cwde
add
cmp
jecxz
sbb
mov
xor
popa
and
scas
sub
sub
sti
and
mov
xchg
mov
test
mov
xchg
fisttp
cld
and
push
mov
mov
cmp
mov
jb
dec
jmp
lahf
(bad)
ja
jmp
(bad)
js
lahf
stos
jns
jmp
cwde
xor
(bad)
fsub
inc
movs
cmps
adc
mov
or
inc
test
stc
loopne
pop
jecxz
outs
outs
pop
pop
aas
pop
xor
fucomip
inc
cmps
dec
hlt
ins
mov
and
mov
mov
daa
add
movs
ficomp
inc
xlat
sbb
std
sub
test
jmp
sbb
call
xlat
les
mov
addr16
test
jle
icebp
aaa
or
dec
cs
inc
js
(bad)
stc
mov
lahf
mov
shr
cmps
aas
dec
out
xor
cld
cdq
add
js
pop
jecxz
pop
es
sub
ss
xor
and
adc
push
repnz
daa
sbb
push
into
mov
cld
add
outs
mov
ins
test
xlat
jmp
cmp
sbb
mov
sub
or
push
cli
xchg
loop
retf
jmp
stos
bound
cdq
cld
add
in
adc
adc
outs
jns
iret
retf
push
sahf
inc
jmp
sbb
adc
jmp
in
cld
rcl
dec
push
scas
xchg
mov
cmp
test
lea
hlt
push
inc
or
jne
in
cmps
sub
nop
xor
push
xchg
test
fwait
mov
fwait
cmp
pop
add
add
mov
inc
div
jb
push
and
sub
out
stos
into
mov
fisub
leave
arpl
inc
les
test
cmp
push
sbb
call
dec
movs
dec
inc
fild
jl
in
dec
push
in
rcr
and
shl
lock
add
xor
neg
mov
int3
test
scas
test
jge
xchg
in
sbb
movs
cmp
inc
test
pushf
pop
fchs
xchg
inc
add
sahf
int
cmp
stos
pop
ror
cmc
or
je
ss
(bad)
lods
mov
inc
xchg
cmp
in
call
dec
retf
jo
sbb
mov
jmp
mov
pop
pop
push
adc
mov
retf
repz
aam
ret
movzx
jge
or
in
xchg
popa
mov
enter
pop
mov
xchg
add
add
test
add
add
add
push
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
fnstenv
xchg
add
add
add
add
add
add
add
pop
add
add
xchg
add
aam
add
add
add
add
add
add
add
add
mov
add
add
add
aad
add
add
add
enter
mov
add
dec
add
cld
adc
add
add
ja
add
sub
add
add
pop
inc
add
add
add
add
jmp
add
add
dec
mov
push
es
pop
pop
push
jb
test
push
mov
xor
popa
cmc
std
dec
comiss
add
(bad)
ror
push
xor
and
in
mov
pextrw
dec
popa
test
in
add
(bad)
outs
imul
iret
xor
pop
lds
jae
arpl
inc
in
push
enter
cmp
aaa
xchg
mov
mov
and
pop
das
push
cli
mov
pop
jns
sub
xchg
or
fbstp
lea
inc
mov
xor
in
mov
stos
push
mov
and
lahf
and
je
pop
out
jp
imul
xchg
jmp
jge
loope
xchg
aad
xchg
enter
jae
es
or
aas
cld
mov
arpl
or
mov
jbe
and
lods
mov
sub
push
(bad)
fsub
mov
inc
ret
test
shl
shr
das
inc
jge
add
mov
ins
or
sbb
mov
jbe
cmp
xlat
ret
in
xchg
fidivr
call
int3
pop
mov
out
sar
imul
xchg
and
aam
hlt
lods
out
or
outs
movs
sub
scas
xchg
retf
(bad)
repnz
jbe
dec
xchg
add
iret
sbb
mov
pop
or
pop
jno
lods
xchg
pushw
push
inc
imul
pusha
or
sbb
test
xor
clc
lock
daa
jp
push
adc
popa
dec
ja
sti
xlat
repnz
fnstenv
inc
mov
push
sbb
out
arpl
pop
sub
es
dec
xor
add
in
push
adc
int
or
sar
or
push
push
mov
ss
mov
inc
jp
dec
(bad)
out
push
mov
fistp
sahf
retf
fist
stos
or
xchg
enter
cvtps2pd
daa
mov
push
(bad)
cmc
jmp
push
ins
arpl
mov
sti
mov
lahf
mov
jp
mov
cmp
dec
es
jmp
xlat
sub
pop
lods
loop
call
lods
popf
fisttp
jns
sbb
hlt
pop
and
retf
mov
rcl
std
call
inc
ror
shr
icebp
out
cmp
adc
and
fld
(bad)
cmps
(bad)
cs
in
loop
cwde
sbb
(bad)
fsubr
mov
fyl2x
xchg
fcomp
mov
pop
ins
ja
pop
aaa
add
add
cmp
dec
inc
fld
push
ret
add
mov
push
push
shr
jb
cmp
jmp
xor
inc
sub
mov
or
xor
mov
(bad)
out
mov
mov
int3
xchg
ins
jno
sbb
push
adc
and
repz
call
add
mov
sub
inc
add
int3
cli
cmp
xchg
jo
retf
dec
sub
cmp
mov
aas
sti
push
mov
jnp
and
inc
mov
ficomp
mov
sub
mov
dec
dec
or
sahf
fcmovbe
xor
stos
lahf
sar
leave
or
sub
pop
mov
mov
xchg
pop
(bad)
sub
jmp
sub
cmp
or
(bad)
xchg
shl
sbb
nop
retf
rcl
lods
cmp
sti
jmp
mov
push
lock
ins
cdq
lods
push
out
in
sbb
adc
sub
cmp
nop
inc
mov
test
(bad)
push
std
mov
or
std
test
jl
jl
mov
xchg
pop
and
xor
or
or
push
xchg
cld
inc
ds
inc
push
xchg
cld
sub
mov
dec
mov
sbb
add
mov
jb
or
inc
xor
iret
test
out
fstp
sbb
cmp
dec
xor
je
retf
pop
cmps
mov
cwde
mov
js
sbb
mov
dec
pop
mov
das
fld
sbb
mov
or
push
and
adc
and
add
mov
lahf
push
int3
jo
les
dec
(bad)
call
push
push
nop
mov
pop
sahf
mov
ins
rol
enter
add
add
mov
std
cdq
mov
aad
pop
jl
xchg
mov
cli
outs
fucom
mov
or
loopne
repz
les
aad
push
aam
inc
cdq
mov
or
pop
jmp
fnstsw
test
(bad)
jecxz
(bad)
adc
sub
add
out
push
push
retf
jne
or
shl
(bad)
inc
jo
sar
mov
cmp
lods
stos
jo
add
and
in
cmp
and
push
xchg
popf
xchg
cdq
dec
js
and
push
jnp
out
data16
or
mov
lods
pop
adc
cs
inc
mov
into
jle
inc
pop
out
sub
daa
jae
test
mov
les
movs
jne
into
dec
cmc
in
inc
push
nop
adc
retf
retf
add
and
in
mov
mov
mov
fist
inc
ret
sti
push
test
movs
cmp
push
fbstp
jg
or
mov
les
mul
jp
push
in
movs
dec
xor
into
int
shr
mov
push
test
inc
sub
cdq
(bad)
loope
sub
mov
gs
sub
push
scas
ins
and
mov
shl
sub
cmps
push
stc
pusha
push
push
jnp
mov
loope
outs
mov
sub
mov
inc
das
mov
xchg
jg
mov
xlat
add
mov
push
lahf
inc
lods
retf
cmc
push
xchg
call
in
mov
mov
fmul
pop
xchg
xchg
imul
mov
push
out
pop
push
pop
fsub
pop
fwait
jae
mul
or
icebp
inc
cmp
push
xchg
push
push
clc
mov
mov
lahf
(bad)
leave
js
adc
and
inc
stos
xchg
addr16
icebp
jmp
sub
push
push
lock
xchg
jns
fnclex
cmp
jg
jb
adc
cmp
(bad)
push
retf
xchg
xchg
inc
jl
xchg
sub
cmc
ins
mov
fldenv
into
cwde
rol
mov
push
jno
adc
pop
nop
or
or
or
icebp
mov
retf
mov
shr
fsub
mov
sbb
sub
mov
cmp
retf
xchg
mov
push
aaa
adc
sub
out
outs
enter
mov
repnz
int3
ret
lods
fld
or
inc
aad
pop
sub
jp
mov
or
leave
xchg
data16
mov
mov
and
in
iret
and
and
sbb
(bad)
sbb
inc
sbb
xor
and
(bad)
pop
pop
mov
sar
inc
mov
jae
xor
jae
sti
adc
and
jmp
cmp
(bad)
mov
sar
imul
add
fs
in
ror
adc
xchg
sbb
leave
in
outs
add
fild
rol
xchg
sub
fisttp
inc
aaa
cwde
and
inc
popf
cld
xchg
rcl
or
add
jo
cdq
rol
popa
mov
jne
jns
mov
and
int3
cmp
jge
mov
popa
mov
push
sar
sbb
dec
mov
mov
lock
xchg
repz
(bad)
jge
mov
jns
inc
sbb
fst
out
dec
shl
sbb
std
pop
push
(bad)
das
or
hlt
sbb
push
daa
adc
(bad)
jno
jnp
(bad)
sbb
test
xor
outs
leave
cld
out
push
outs
dec
or
sbb
jae
or
(bad)
jne
sub
jo
rcr
das
mov
lds
sbb
sbb
les
add
(bad)
pop
ja
cmps
adc
js
out
pop
mov
(bad)
cmp
xchg
(bad)
add
in
(bad)
adc
neg
test
mov
jae
repz
ja
xchg
call
daa
mov
sti
dec
shl
dec
push
dec
mov
adc
lds
dec
dec
cmp
loope
xor
or
fsub
(bad)
cmp
push
nop
shl
and
enter
outs
bound
jo
push
inc
and
push
mov
imul
js
movsx
hlt
mov
pop
add
push
dec
inc
lods
repz
mov
inc
sbb
pop
cli
sub
push
in
shl
repz
fsubr
mov
in
mov
lods
inc
and
push
je
jo
(bad)
sti
out
bound
iret
lods
push
sub
mov
leave
in
sub
jne
cdq
shl
das
mov
pusha
adc
xlat
std
div
ja
adc
jae
dec
push
dec
inc
jl
out
add
neg
adc
daa
push
shr
mov
adc
aaa
pop
in
push
not
mov
mov
ins
mov
ficomp
sub
jle
inc
or
or
jecxz
aaa
mov
xor
out
xor
ret
inc
mov
out
or
mov
movs
add
xor
data16
mov
enter
movs
jno
inc
mov
pop
in
lea
adc
mov
mov
pusha
and
mov
iret
ror
add
and
jns
mov
loop
pop
int
jns
mov
(bad)
jno
xor
cmc
dec
inc
sahf
inc
ja
arpl
out
add
lods
sub
jne
ss
out
push
jmp
jmp
inc
es
adc
ror
retf
mov
adc
and
fsincos
lods
and
cmps
dec
xchg
stos
lea
dec
xchg
pop
rcr
aad
pop
mov
pop
sbb
adc
call
dec
movs
mov
div
inc
inc
mov
xor
mov
les
fistp
popf
push
not
pop
fdiv
inc
shl
dec
push
dec
sub
std
out
sub
ret
jo
stos
rol
inc
cmc
and
lea
sbb
dec
and
(bad)
movs
mov
cmp
xchg
cmps
mov
add
add
push
add
add
add
add
add
jb
add
add
lods
popa
add
add
add
add
add
add
jg
add
add
add
add
add
pusha
add
add
add
popa
add
add
inc
add
add
fild
add
add
add
rol
add
push
and
push
test
pop
xor
push
xchg
sub
fsubr
es
jno
adc
jle
daa
xor
test
sub
movs
xchg
sub
xchg
movs
mov
je
addr16
jo
cdq
scas
mov
shl
xchg
out
daa
loopne
inc
pmaddwd
mov
icebp
ins
popf
jo
and
sahf
ja
add
pop
add
ficom
mov
inc
hlt
sti
xchg
lods
fdiv
xlat
int
imul
test
or
push
cmp
sbb
popf
pop
pop
fimul
or
adc
call
mov
rol
bound
cmc
push
jmp
fstp
add
jns
mov
pop
scas
lds
icebp
jae
jl
xchg
cld
jnp
dec
mov
cmps
test
push
inc
gs
mov
sub
test
jbe
dec
or
scas
fbstp
retf
ja
mov
xchg
pop
pop
or
in
pop
inc
(bad)
cwde
int3
jmp
cld
mov
not
je
xor
jns
or
add
or
mov
inc
pop
scas
lahf
inc
lods
imul
imul
xlat
mov
inc
cwde
jg
jae
nop
pop
movs
call
xchg
mov
nop
das
mov
push
cmps
cli
bound
leave
adc
mov
bound
(bad)
jmp
pop
cmp
ret
loop
enter
dec
bound
(bad)
xor
fwait
mov
pop
mov
je
(bad)
clc
xchg
(bad)
adc
imul
and
call
clc
xchg
push
test
push
xchg
retf
xor
aaa
pop
cmp
sbb
sbb
cmp
xchg
cdq
cmp
pop
std
and
cld
jne
dec
and
push
adc
shl
xchg
movs
hlt
sbb
jl
mov
pop
int
aad
jo
std
ds
aam
xchg
je
mov
fs
jb
xor
clc
mov
daa
aad
mov
mov
dec
jo
addr16
mov
add
sar
retf
loope
push
xor
adc
icebp
or
bound
int3
push
(bad)
aas
out
fs
out
aad
movs
(bad)
fucomp
(bad)
retf
jbe
(bad)
int3
retf
cmp
cli
pop
cli
mov
push
and
pop
ucomiss
stos
mov
add
shl
push
daa
aad
sub
sahf
jbe
fisubr
fsubrp
mov
ins
push
jl
dec
mov
jns
iret
jp
cs
xor
cld
fdivr
mov
aas
repnz
sub
mov
push
adc
ror
push
mov
push
inc
add
fidiv
add
push
retf
fist
ret
pop
mov
in
or
push
cmp
iret
and
aad
push
xchg
pop
scas
clc
sti
add
daa
xchg
cli
jmp
es
fwait
call
mov
inc
movs
int3
add
mov
cwde
xchg
f2xm1
inc
sub
mov
adc
pop
f2xm1
push
in
inc
call
pushf
xchg
mov
jo
adc
popa
call
icebp
lods
dec
popa
mov
cld
cld
stos
lods
and
aas
inc
and
ror
jb
xchg
inc
retf
sbb
dec
and
adc
fwait
sahf
pop
mov
jl
add
push
cli
push
add
xchg
adc
addr16
movs
add
mov
add
inc
cmp
out
neg
out
in
pop
dec
cwde
imul
fwait
test
mov
retf
jge
and
ffree
repnz
xor
or
or
enter
sahf
dec
data16
pop
sahf
add
das
pop
sbb
aaa
test
xor
and
xor
ret
lods
nop
icebp
and
push
outs
fisub
mov
stos
pop
mov
pushf
aas
mov
dec
not
xor
test
push
scas
adc
add
daa
cwde
adc
arpl
shr
jge
mov
ror
popf
mov
or
mov
sbb
sub
inc
hlt
int
test
imul
pop
mov
ret
es
aaa
mov
push
das
aaa
adc
in
push
outs
add
xlat
and
adc
jp
sbb
fs
push
dec
nop
cmp
fcomp
push
mov
iret
mov
add
mov
dec
test
stc
cmp
pushf
xor
(bad)
aad
sub
push
test
push
sub
sbb
xchg
jo
add
pop
or
sbb
push
stos
dec
push
add
pop
pop
sbb
rcl
lea
dec
popf
adc
mov
jmp
gs
add
fiadd
mov
sub
repnz
dec
jae
into
fidivr
sti
adc
jbe
xchg
enter
outs
test
mov
aas
aaa
ret
adc
push
push
lock
xchg
cmps
xor
in
xchg
mov
sahf
mov
int
out
or
mov
hlt
lea
pop
jmp
jae
add
and
cmp
retf
rol
fsubr
pusha
test
push
(bad)
rcl
nop
mov
lock
add
and
lods
cmp
aam
push
dec
movs
scas
and
loope
and
cmp
aas
icebp
and
stos
jno
call
es
idiv
xchg
lods
push
test
lahf
mov
out
repz
pop
or
addr16
or
data16
das
pop
sub
adc
mov
push
cmp
cdq
sub
jns
pop
pop
ja
pusha
test
cmc
push
sub
push
in
sub
stos
repz
adc
imul
jns
das
or
retf
pop
mov
mov
push
mov
adc
das
and
mov
cmp
jp
ret
test
stc
add
lock
(bad)
lea
xchg
repz
xchg
iret
imul
neg
(bad)
cld
cmp
lods
pushf
lahf
in
lods
(bad)
push
lods
loop
arpl
mov
lds
push
xor
sub
xchg
mov
ror
mov
imul
fld
xor
mov
shl
adc
fs
adc
mov
fisttp
jae
nop
push
xchg
mov
mov
pushf
jg
mov
test
popf
out
or
dec
push
popf
stc
cmps
not
iret
shl
jno
test
ins
test
out
cmc
sub
or
scas
add
and
aas
and
out
sbb
jo
pop
imul
sub
or
(bad)
clc
push
pop
test
jp
cli
fcomp
push
mov
ins
test
jmp
mov
xor
test
dec
sti
dec
in
jge
pop
outs
or
out
push
jb
imul
mov
push
mov
stc
in
aas
jmp
fs
mov
xor
shl
clc
inc
fwait
dec
lods
fisubr
shl
neg
or
loop
scas
popf
ins
sub
mov
pop
lods
aaa
fsubr
adc
retf
dec
cld
xor
cdq
fs
das
dec
push
push
push
cmp
push
cmps
(bad)
aam
pop
loop
jecxz
pop
into
mov
mov
pop
retf
shr
pop
jae
rcr
into
dec
enter
cmp
pop
fistp
icebp
pop
or
and
add
adc
mov
icebp
fild
jp
and
cmp
xor
ret
mov
dec
pushf
lock
cmp
test
shl
das
ret
mov
fmul
lea
es
dec
sbb
sbb
daa
call
push
test
ror
fisubr
rcr
leave
pop
add
cmp
sbb
(bad)
cmp
repnz
push
jg
inc
xchg
in
cmp
jnp
cs
cdq
or
sbb
fisttp
icebp
ins
add
and
hlt
pusha
cmp
or
pushf
cmp
pop
push
js
es
push
sahf
popf
jne
mov
jnp
sar
add
sub
fnstcw
shr
ret
xchg
fbld
enter
loope
aam
stc
ss
addr16
(bad)
mov
sub
fnstsw
sbb
stos
pop
xor
dec
dec
mov
dec
and
pop
sub
ss
push
inc
jecxz
rol
ja
cmp
mov
jns
jp
and
dec
les
shl
and
sub
pop
lahf
fiadd
or
cdq
and
sbb
adc
popf
shl
and
mov
jb
mov
imul
push
inc
fcmove
loopne
push
and
pop
scas
(bad)
jmp
test
loop
adc
push
mov
sub
ret
mov
retf
lea
mov
cwde
(bad)
in
adc
daa
mov
xchg
and
xchg
mov
arpl
xchg
retf
mov
mov
jno
mov
ret
pop
repnz
push
add
pop
int
sub
pop
lea
(bad)
dec
jno
add
mov
sbb
mov
dec
inc
test
or
push
scas
jmp
xor
loopne
lods
cmps
(bad)
rol
cmp
mov
sbb
or
movs
add
pushf
int3
rol
jnp
mov
dec
sbb
shr
inc
mov
or
add
add
test
dec
aad
scas
mov
cmp
xlat
cmp
sbb
out
adc
ins
stos
xor
mov
mov
or
shl
add
test
ror
mov
mov
push
or
mov
pop
shr
ss
into
mov
outs
in
sub
mov
loop
push
retf
fdiv
jecxz
sti
clc
retf
add
ficomp
pop
lea
mov
ins
adc
xchg
loope
cld
xchg
xchg
inc
xor
mov
or
pop
fcmovb
leave
and
dec
aaa
jnp
dec
cmp
(bad)
jmp
add
dec
mov
jecxz
xchg
adc
aas
lock
mov
imul
je
nop
jmp
cmp
adc
aaa
(bad)
leave
pop
mov
jle
dec
mov
sbb
and
cs
call
jbe
movs
sub
pushf
out
and
adc
push
xor
aas
mov
popa
dec
xor
fisubr
push
ja
cdq
or
sbb
mov
adc
test
cmp
add
into
je
mov
and
add
rol
add
add
jno
mov
add
add
add
mov
add
add
add
pop
add
add
add
mov
mov
inc
add
add
add
push
add
cmp
add
add
pusha
add
pop
inc
add
add
add
add
add
jbe
add
xchg
pop
add
mov
add
add
or
add
add
add
add
add
add
add
add
add
or
add
add
add
std
call
add
add
add
inc
add
add
mov
add
popf
add
pop
imul
add
add
add
ret
add
add
pop
add
add
add
add
add
add
add
add
add
int
add
add
add
add
add
add
add
loopne
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
in
in
call
adc
nop
add
test
add
add
add
pop
add
add
add
add
add
add
cmp
add
add
add
mov
lods
add
add
(bad)
add
push
fiadd
add
add
add
xchg
test
add
add
mov
add
add
and
add
add
add
inc
add
add
sub
add
add
add
add
add
add
jns
add
add
add
add
add
add
add
add
add
jge
add
add
sbb
add
add
movs
add
dec
cmp
add
sbb
add
add
add
add
pop
add
add
cmp
add
add
xchg
data16
push
add
jno
rol
add
add
add
xor
add
add
push
add
pop
add
add
add
add
add
and
add
aam
mov
add
add
and
xchg
xchg
add
out
add
add
push
bound
push
mov
shr
add
add
mov
in
add
add
fmul
add
arpl
dec
adc
out
pop
ret
mov
and
out
pop
pop
aaa
add
in
and
mov
mov
inc
repz
push
mov
stos
call
pop
add
adc
in
xlat
rcr
loopne
pop
mov
xchg
out
sar
je
adc
or
mov
js
in
push
sbb
push
popf
les
inc
pusha
imul
lock
test
mov
jmp
adc
push
xor
sbb
scas
mov
pop
addr16
outs
sbb
mov
sahf
mov
mov
aad
sbb
fwait
stos
mov
push
mov
aad
pop
mov
sbb
add
(bad)
icebp
fidivr
hlt
add
aam
arpl
sub
(bad)
js
cmp
outs
adc
xchg
pushf
sbb
hlt
push
mov
cld
outs
sbb
add
shl
test
gs
call
sub
jb
pusha
popf
xor
mov
mov
dec
mov
pop
test
cmc
mul
jle
mov
push
movs
aaa
aaa
sub
icebp
sbb
ins
cmp
and
fstp
sbb
and
jae
lods
pop
inc
jp
mov
dec
mov
xchg
adc
add
fadd
sbb
inc
jg
es
dec
ds
push
repz
xchg
and
xor
fdiv
mov
pusha
out
rol
cmp
jmp
cmp
fbld
inc
dec
ret
sub
sub
fmul
jmp
push
or
dec
inc
fnsave
add
mov
jne
cs
popf
mov
into
mov
(bad)
push
and
mov
mov
pop
mov
ja
cld
out
sbb
clc
hlt
fdivp
imul
push
cmps
dec
neg
(bad)
jle
adc
fdivr
inc
add
pusha
enter
jecxz
sbb
add
out
xor
mov
scas
sahf
and
cld
sbb
outs
dec
bound
sbb
mov
cld
xchg
and
push
add
sbb
add
jae
and
les
sbb
inc
jmp
mov
rol
fld
cwde
xchg
pop
pushf
jno
xor
mov
fmul
cmps
jno
lahf
out
mov
pop
push
mov
mov
and
adc
push
bound
out
out
jmp
movs
scas
pop
hlt
out
adc
add
push
jmp
fmul
push
pushf
rcl
mov
cmps
fs
(bad)
aas
jns
push
cmp
aas
std
fdiv
pop
(bad)
int3
rcl
hlt
add
sub
div
dec
dec
pusha
loopne
adc
loopne
cmp
mov
mov
pop
jmp
outs
dec
pop
lods
sbb
xchg
pop
fistp
mov
jge
push
ja
inc
fwait
daa
pushf
vmread
mov
or
(bad)
hlt
mov
fst
lds
xchg
dec
test
(bad)
cmps
adc
into
add
cmps
push
and
scas
int3
xchg
or
mov
pusha
rcl
jnp
jb
in
pop
lea
adc
enter
mov
pop
mul
aaa
pop
scas
and
inc
hlt
cmp
sbb
add
(bad)
or
lods
in
inc
repnz
scas
sub
xchg
jb
sub
mov
inc
cli
inc
cli
dec
push
mov
xchg
jmp
pop
inc
jnp
pop
imul
movs
xlat
nop
xor
dec
xchg
cli
sub
sbb
dec
bswap
ror
cmps
mov
in
cmps
inc
test
mov
cmp
cmp
test
push
pop
sbb
cmp
cmp
into
clc
xchg
icebp
pop
adc
test
loopne
sub
loope
in
xchg
into
fcomp
sbb
repnz
jecxz
adc
xor
push
(bad)
fiadd
add
push
out
fidivr
jmp
mov
xor
or
pop
and
outs
pop
jnp
pop
cli
cmp
jmp
add
inc
mov
cmp
cmp
sbb
bound
mov
jp
(bad)
push
neg
push
add
sub
lds
push
ins
xor
hlt
mov
cli
test
arpl
xchg
retf
sbb
push
mov
hlt
arpl
mov
fsubr
pop
dec
bound
mov
push
mov
loop
push
add
xor
or
out
sub
mov
sub
sar
fimul
rcr
daa
into
call
scas
jmp
mov
push
aaa
aam
fwait
ins
sbb
sub
retf
in
data16
out
push
inc
jmp
lods
icebp
mov
mov
lods
hlt
enter
repnz
adc
dec
cmc
xchg
jo
sub
rcr
push
fisubr
pop
and
adc
mov
repnz
outs
mov
mov
xchg
push
mov
push
pop
div
gs
mov
dec
lahf
in
scas
data16
sub
hlt
call
cld
inc
mov
adc
push
sbb
push
jmp
outs
out
movs
mov
mov
pop
mov
bound
loopne
mov
inc
sbb
pushf
or
rcr
jno
sub
dec
cld
mov
jmp
push
dec
dec
adc
and
xlat
(bad)
aas
push
aaa
jae
sbb
hlt
pop
loopne
fs
push
in
dec
xchg
push
lea
push
inc
sar
nop
xor
aam
out
aas
sub
rcl
daa
xchg
hlt
xchg
sub
xchg
xor
pop
call
jo
xchg
mov
mov
xchg
cli
outs
and
push
cwde
int
stc
std
(bad)
cmp
mov
test
sub
xchg
sub
inc
mov
lods
arpl
neg
or
push
mov
pminub
into
add
je
xchg
or
sbb
xchg
add
(bad)
fist
aad
pop
pusha
jl
jmp
mov
and
and
pop
adc
xor
in
and
push
push
sub
sub
out
mov
push
push
cmc
mov
mov
adc
sbb
in
bound
pop
ret
pop
and
add
mov
sar
aad
sar
sub
jns
mov
int
lods
jne
or
jbe
or
mov
jmp
movs
xchg
in
mov
scas
or
adc
jecxz
aaa
jns
push
mov
imul
push
lods
dec
mov
inc
ds
dec
jp
cmps
xor
or
mov
xor
sti
mov
scas
clc
mov
ficom
jnp
jg
(bad)
sbb
dec
dec
popf
add
jp
or
add
adc
fisubr
call
jge
ret
fstp
inc
jmp
icebp
out
and
add
mov
mov
adc
leave
jmp
xor
xor
mov
add
pop
lds
mov
shld
xor
popf
add
push
dec
nop
xchg
jno
sub
movs
cmp
inc
ss
xchg
or
jne
jmp
imul
add
aas
iret
test
pushf
add
lea
mov
fisub
out
fidivr
gs
jno
mov
popa
fwait
int
fcmovu
clc
sbb
mov
jmp
mov
dec
(bad)
aas
(bad)
push
test
add
add
iret
daa
inc
mov
into
jp
int3
arpl
test
push
movs
sub
fild
mov
jbe
rol
dec
mov
bound
jmp
lea
loopne
or
xchg
repnz
pop
cdq
pop
xchg
pop
jb
arpl
mov
fs
dec
sbb
mov
cli
sub
dec
mov
adc
popf
cwde
jbe
mov
jns
(bad)
xor
int
in
dec
or
add
(bad)
mov
push
iret
sub
sbb
jmp
cmp
mov
mov
out
jmp
add
inc
pop
push
xchg
sbb
inc
jle
scas
cs
retf
xchg
enter
sbb
repnz
(bad)
fild
popa
jge
fcom
mov
jne
shl
in
jo
sbb
pop
mov
dec
dec
and
push
pop
cmps
inc
add
jbe
inc
fldcw
cmp
jge
into
sub
fucomi
adc
out
add
fwait
cmps
pop
dec
jmp
xor
xchg
jb
scas
leave
dec
adc
lods
mov
push
fldenv
or
sti
xor
sub
cwde
pop
div
push
(bad)
loopne
xchg
mov
cmp
sub
lahf
pop
gs
or
jmp
sub
cmp
pop
jmp
mov
xlat
mov
mov
test
mov
xchg
jno
cmc
addr16
out
or
adc
jnp
call
inc
sbb
or
mov
cs
push
cmp
cwde
movs
fucomi
dec
scas
push
aaa
mov
and
jbe
not
out
imul
fwait
or
sahf
je
bound
dec
stos
push
sub
mov
push
mov
out
push
jnp
and
mov
pop
loop
pop
inc
inc
daa
mov
pop
inc
sub
jae
cmp
movs
dec
cmp
cdq
jnp
push
and
push
sbb
pusha
sbb
jg
movs
pop
adc
cmp
cli
cli
sub
cmp
jmp
sub
mov
retf
out
jmp
jno
pop
rol
aam
cmps
inc
dec
pusha
retf
or
js
xor
mov
pop
aas
stos
add
and
loope
mov
sub
push
push
jmp
cmp
imul
pop
cld
sbb
cmp
dec
sub
dec
jecxz
repnz
and
repnz
popa
inc
pop
jb
pop
(bad)
(bad)
std
mov
jbe
mov
sbb
pushf
cmps
inc
jecxz
or
ds
ins
sub
pushf
mov
pop
mov
jae
and
dec
imul
(bad)
sar
pop
(bad)
jle
lahf
rol
jno
jno
push
cmp
sar
mov
mov
or
pop
mov
in
cmp
sbb
or
pop
clc
pop
or
push
adc
(bad)
stos
xor
inc
mov
out
adc
xor
movs
inc
mov
out
dec
xchg
sbb
add
jns
add
ins
jnp
add
add
add
in
mov
add
add
add
add
cmp
add
add
add
add
add
stos
add
add
add
cmp
add
add
mov
add
add
add
add
popa
add
add
add
add
add
add
add
add
cwde
add
outs
add
add
cmp
xchg
cmp
retf
fidiv
or
xchg
cmp
hlt
(bad)
and
stc
cli
mov
js
pop
dec
outs
push
enter
movs
enter
out
jmp
lods
je
aad
dec
or
mov
push
aas
lahf
icebp
or
lahf
mov
xchg
inc
xchg
stos
test
fldcw
xor
dec
ins
test
sbb
fiadd
push
fcmovnbe
and
add
push
push
pushf
sbb
arpl
leave
pop
mov
pop
jno
or
pop
mov
imul
movs
xor
dec
bound
arpl
xor
idiv
push
mov
movs
out
cmp
pop
(bad)
mov
xchg
xchg
mov
pop
push
dec
and
xchg
push
addr16
mov
movs
mov
pop
and
popa
push
mov
push
test
jecxz
adc
fidivr
shl
sub
add
ret
and
nop
(bad)
rol
cmp
retf
dec
xchg
fwait
mov
enter
fbstp
add
jns
xor
and
and
sbb
push
lock
sbb
(bad)
test
mov
jge
loop
ja
or
mov
gs
sbb
or
das
cmp
dec
fstp
adc
sub
popf
mov
rcr
daa
jl
cmp
rcr
inc
lds
xor
sbb
jecxz
jne
stos
xchg
xchg
(bad)
mov
ret
xchg
mov
in
es
(bad)
add
cmp
in
and
ins
ss
loop
fld
fs
and
neg
fdivr
or
jmp
push
loope
faddp
fist
or
and
mov
jnp
(bad)
cmps
(bad)
cmc
and
mov
popf
sbb
xchg
pop
cmps
cli
jmp
fsub
pushf
jb
push
mov
lock
adc
dec
paddsw
cmp
repnz
sar
into
lahf
push
push
xchg
mov
pusha
jle
nop
mov
(bad)
xchg
and
xchg
nop
xor
adc
bound
pushf
std
sti
and
mov
push
add
arpl
js
jge
icebp
lock
loopne
add
and
aam
jge
outs
cld
push
mov
jmp
ins
push
iret
add
inc
xor
into
fwait
mov
cmp
stos
and
in
jmp
out
(bad)
rcr
sbb
cli
jp
ins
cs
cdq
xchg
test
repnz
test
jo
jl
shl
not
push
test
ins
cwde
dec
pop
push
push
ret
push
cmp
xchg
retf
push
sub
or
test
cmp
pop
arpl
sti
imul
in
fistp
push
inc
je
jo
push
adc
ins
pop
test
push
dec
sti
imul
popa
mov
idiv
jg
aas
daa
loop
daa
sahf
cwde
jmp
stos
jae
jmp
jmp
pusha
(bad)
xchg
shr
adc
test
sti
mov
fdiv
mov
sbb
and
mov
push
ss
push
cmps
lea
xor
push
push
jne
pop
movs
call
mov
sbb
add
retf
into
add
cmc
xchg
repnz
es
jl
inc
pusha
jg
stc
xchg
and
mov
adc
jecxz
mov
jl
mov
pop
(bad)
lock
xchg
fidiv
xor
or
scas
mov
nop
mov
daa
and
out
pop
dec
and
and
test
lea
test
add
popf
jnp
add
(bad)
call
pop
arpl
arpl
jmp
mov
sbb
cmp
dec
imul
leave
sti
xchg
out
repnz
outs
std
clc
out
mov
xor
xchg
(bad)
sti
out
and
xchg
dec
push
pusha
mov
dec
dec
leave
inc
retf
and
adc
push
dec
jg
cmps
pop
mov
dec
jge
test
xor
mov
(bad)
inc
mov
push
cmp
aaa
or
xchg
je
stc
push
mov
sbb
dec
fld
and
mov
xor
dec
jecxz
shr
addr16
inc
push
loop
inc
and
aas
cmps
dec
xchg
stos
push
test
sahf
pop
or
adc
clc
dec
mov
sub
mov
dec
jmp
test
push
pop
in
ins
pop
test
ja
pop
(bad)
test
xchg
lea
mov
jl
mov
pop
cs
push
popf
shr
cwde
test
mov
stc
inc
aas
bound
pushf
in
mov
or
mov
(bad)
repz
mov
cld
mov
in
pop
test
mov
pop
out
ja
mov
add
xor
(bad)
push
punpckldq
push
push
cmp
dec
mov
in
(bad)
ss
jle
popf
jb
inc
aam
adc
leave
mov
shl
sbb
cld
rol
sub
call
rcl
dec
retf
leave
lock
xchg
jbe
mov
mov
fld
jmp
mov
push
push
fprem1
pop
add
sub
or
cmps
imul
mov
out
jae
jl
and
not
mov
ret
sub
into
pop
es
jae
jle
nop
test
es
jle
xchg
gs
mov
in
adc
jmp
mov
jecxz
or
cmp
(bad)
pop
pop
fwait
xchg
pop
cld
out
jns
cmps
inc
ret
aad
or
out
fstp
add
cmp
fs
jne
(bad)
sub
retf
aad
and
movs
jecxz
dec
retf
stc
mov
imul
ds
dec
mov
arpl
add
les
idiv
(bad)
and
lahf
mov
mov
add
inc
mov
test
call
popa
mov
mov
shl
and
ret
scas
mul
jecxz
movs
ds
pop
adc
test
sub
cmp
retf
cmp
je
ja
cld
addr16
outs
fld
dec
xor
jmp
sahf
iret
cs
jbe
pop
sbb
cmp
outs
icebp
and
cmp
cmps
fist
and
rol
push
rol
ins
int3
movs
jnp
xor
mov
or
retf
sbb
mov
ffree
pop
fisub
mov
and
addr16
push
jge
or
(bad)
cld
add
(bad)
test
and
sub
movs
popa
add
push
imul
add
sar
sbb
jne
(bad)
add
sbb
adc
ins
xlat
rol
into
adc
jbe
sub
mov
inc
cmp
xchg
xchg
rol
ficomp
fcomp
xchg
dec
sub
push
sub
jno
pop
or
or
ret
cmp
xor
inc
nop
cli
rep
and
mov
sub
mov
mov
sub
clc
aaa
dec
lea
pop
aas
test
and
lods
bound
cmp
rcl
fld
mov
sar
mov
jb
rcl
push
adc
push
in
sti
or
or
xor
jne
jns
jo
fdivr
sub
push
data16
mov
dec
inc
xchg
pop
leave
cmp
jle
movs
sub
inc
hlt
test
push
pushf
movs
push
cmp
mov
mov
nop
jecxz
jmp
jl
cs
shr
push
pop
jns
mov
test
arpl
repnz
adc
dec
pop
gs
test
(bad)
cli
jmp
test
hlt
adc
xchg
xchg
in
repz
test
sbb
cs
(bad)
cmc
inc
and
ret
(bad)
bound
jmp
mov
bndstx
push
xlat
pop
push
inc
shl
sub
enter
out
and
retf
mov
aad
lds
(bad)
lahf
mov
pop
dec
or
es
xchg
sbb
mov
seta
push
sbb
nop
stos
cmp
and
mov
jo
cmp
stc
bound
pop
fstp
pop
loope
in
iret
fdivr
jp
mov
(bad)
pop
adc
(bad)
into
call
xor
pop
dec
jae
fld
shr
inc
imul
call
mov
pop
pop
mov
in
bound
xor
shl
(bad)
outs
(bad)
sub
xchg
(bad)
cwde
pop
cs
aaa
mov
adc
sbb
push
sbb
fstp
leave
add
hlt
fild
and
add
or
lods
mov
sahf
adc
scas
test
xchg
dec
adc
push
pop
xor
loope
sbb
ss
ds
cmp
fstp
xchg
ja
outs
and
in
cmps
dec
and
mov
jae
or
jmp
cli
push
sub
data16
pop
ja
or
jmp
dec
xchg
and
enter
sub
push
(bad)
pop
out
in
data16
and
leave
mov
xchg
sub
stos
pop
fwait
inc
inc
movs
and
lds
xchg
loope
idiv
push
add
adc
imul
sti
lock
sti
pop
add
or
daa
fst
add
push
xlat
mov
xchg
out
xor
loop
jp
lock
int
retf
js
cli
das
mov
(bad)
jmp
adc
fsubr
mov
icebp
dec
jecxz
dec
jns
xchg
rcr
and
jns
dec
test
xlat
repnz
inc
imul
pop
xchg
ror
inc
sub
ret
xchg
add
jl
fcom
ins
jne
inc
(bad)
mov
dec
cmp
dec
xchg
iret
mov
adc
sbb
and
inc
(bad)
les
pop
int
(bad)
in
cmp
pusha
xchg
push
sbb
mov
xor
dec
pop
in
sahf
ja
xchg
mov
movs
pop
pop
scas
scas
and
xor
mov
add
pop
rcr
sbb
rep
sbb
nop
ds
xor
repz
dec
adc
fwait
xchg
pop
mov
hlt
add
pop
mov
scas
(bad)
mov
inc
enter
inc
xor
ja
in
xor
push
das
int
stos
loop
dec
jae
int3
cmp
int3
pop
adc
xor
mov
xor
das
mov
cmc
xchg
jne
or
mov
aad
mov
out
aad
fsubr
mov
leave
jo
push
push
das
pushf
ret
dec
in
xchg
ret
add
add
lock
add
add
add
add
mov
add
sbb
add
add
and
add
fadd
add
add
mov
add
fadd
add
add
daa
nop
add
add
add
add
jmp
add
sbb
add
add
add
mov
add
add
lea
add
add
cmps
add
add
add
lea
add
add
add
add
xchg
add
add
sbb
add
call
add
jnp
add
add
mov
loopne
add
mov
add
add
add
add
add
dec
add
add
push
add
add
add
add
(bad)
add
add
mov
add
add
add
add
das
add
lods
add
add
add
add
mov
mov
add
add
add
add
mov
add
add
add
add
add
add
add
add
add
add
adc
add
or
xor
add
popa
add
mov
push
repnz
inc
fstp
es
pop
mov
jl
jl
fadd
push
sbb
sub
mov
mov
clc
lods
jmp
and
mov
cld
lods
addr16
sbb
jecxz
push
add
dec
dec
push
clc
xchg
xor
adc
xor
repz
or
cs
jno
pop
mov
pop
dec
(bad)
jno
dec
xor
push
jnp
adc
or
jp
xchg
and
repz
stc
jmp
adc
repnz
sahf
mov
pop
inc
pop
int3
or
jne
inc
cmp
add
inc
adc
jle
test
fsub
hlt
or
(bad)
push
arpl
mov
mov
pop
mov
shl
push
xchg
shl
pop
stos
pop
pusha
push
mov
mov
inc
mov
adc
loopne
xor
test
cwde
push
shr
(bad)
sub
ror
std
mov
lods
adc
std
dec
lods
std
jmp
adc
fwait
push
ret
jo
xchg
out
dec
daa
push
mov
xor
dec
add
ret
rol
xchg
jo
cli
clc
shr
mov
std
(bad)
and
inc
int3
ficom
stos
cwde
mov
pop
and
lds
jno
pop
inc
mov
add
movs
push
sbb
lea
pop
cwde
sti
cmp
mov
call
fcmovne
fdivr
push
test
and
mov
in
push
push
mov
inc
jecxz
sub
sbb
push
add
mov
inc
xor
loop
push
push
mov
xchg
or
push
push
xchg
mov
std
inc
fst
pop
mov
cmc
mov
mov
pop
pop
dec
fisttp
jl
mov
sahf
cmp
xchg
xor
pusha
adc
mov
ds
cmp
add
int
scas
in
lds
scas
aas
mov
inc
nop
fdiv
jnp
les
fwait
xor
rcl
in
shl
in
out
mov
fwait
pop
mov
push
sbb
adc
out
jge
mov
cmp
les
sub
(bad)
jle
call
lahf
fdivrp
cwde
shr
jl
cs
fadd
mov
inc
push
js
xor
sub
and
shl
scas
adc
stos
nop
rcr
movs
or
inc
arpl
ss
daa
std
add
dec
cdq
nop
and
movs
rcr
rcr
(bad)
pushf
stc
outs
xchg
sub
mov
dec
adc
loopne
or
sbb
out
mov
push
xchg
sbb
xor
pop
fimul
xchg
and
mov
jno
xor
xor
(bad)
xor
into
pop
mov
pusha
pop
lods
and
lds
jo
cs
hlt
test
arpl
retf
fistp
outs
aam
push
ja
bound
ja
sbb
mul
xchg
mov
lods
lea
pusha
in
mov
add
xor
std
or
(bad)
test
movs
pop
addr16
push
mov
lea
mov
(bad)
adc
stos
imul
push
test
sub
inc
push
mov
adc
icebp
and
cmp
ret
add
inc
xchg
scas
cmps
seta
pushf
push
lahf
je
add
shl
jb
add
cmps
sub
in
scas
outs
add
icebp
adc
dec
ror
out
cmp
(bad)
inc
fcom
cmp
jnp
cmps
mov
xor
pop
out
scas
adc
repz
sbb
int3
sahf
or
pop
mov
(bad)
mov
aam
pop
jl
mov
das
push
or
mov
adc
fwait
cdq
mov
stc
add
cmp
outs
ficom
test
mov
cmp
ss
es
(bad)
outs
mov
push
dec
jnp
jp
cmp
fwait
icebp
sub
or
vpackssdw
imul
in
cmp
imul
cmp
lods
inc
mov
imul
mov
(bad)
jns
fcmovb
test
mov
repz
mov
sti
xor
scas
add
push
jmp
cdq
out
aas
(bad)
xchg
lahf
dec
pop
mov
(bad)
push
cdq
dec
sbb
lods
mov
fucom
sub
xchg
in
imul
mov
popa
or
(bad)
imul
repnz
xchg
fnstenv
fcomp
and
xchg
arpl
mov
mov
cmps
nop
jge
or
cmp
mov
mov
pop
add
scas
shr
dec
sub
mov
popf
pop
mul
push
dec
pop
or
xchg
gs
sub
cwde
mov
add
dec
fstp
fdivr
adc
addr16
dec
sub
cmps
cdq
push
jmp
mov
adc
hlt
nop
jecxz
arpl
mov
ror
xchg
mov
scas
xor
sbb
push
loopne
push
inc
sar
pop
repz
(bad)
aad
call
(bad)
sti
mov
mov
(bad)
das
pop
add
cmp
arpl
mul
dec
push
outs
fsqrt
out
shl
jbe
dec
(bad)
jns
xchg
or
cwde
jo
mov
cmp
call
(bad)
lock
and
scas
clc
jg
into
lods
cmp
jg
mov
mov
ficom
jge
mov
dec
push
das
loopne
cmp
mov
hlt
mov
imul
dec
ins
lds
mov
outs
in
pop
out
cmp
and
loop
shl
sbb
xchg
xor
xchg
cld
aaa
mov
sbb
leave
xor
inc
jge
je
push
jae
xchg
adc
popf
imul
imul
fucomi
mov
out
xchg
data16
jge
adc
mov
mov
inc
aaa
mov
mov
fsub
(bad)
mov
sbb
clc
fwait
ucomiss
ss
jp
sub
and
mov
mov
cdq
in
enter
pop
shl
inc
test
inc
icebp
outs
xchg
movs
inc
mov
add
pop
shr
enter
push
mov
fst
ins
cld
jl
mov
cmps
popf
scas
fwait
das
push
sub
cmp
jl
mov
call
sub
stc
xchg
inc
(bad)
bound
mov
jge
push
add
mov
lahf
(bad)
cmovno
mov
inc
les
lahf
push
loope
cmc
xchg
sub
mov
mov
pop
jmp
fist
rcl
or
mov
imul
cmp
shl
ins
fcomp
pop
shl
pusha
es
xchg
cmps
push
sub
mul
push
mov
fbld
shl
adc
jne
mov
and
pop
adc
lahf
std
out
mov
adc
jno
xchg
daa
(bad)
xchg
inc
mov
pushf
dec
xchg
imul
(bad)
test
ror
cmp
retf
mov
fimul
cmps
push
push
pop
lahf
lea
(bad)
push
pop
push
adc
xchg
push
inc
mov
out
add
cmp
mov
mov
or
aad
or
shl
mov
int3
shr
dec
or
data16
push
ja
jns
aad
pop
cmp
sub
out
adc
in
rcr
fld
inc
pop
xor
retf
push
cld
xchg
mov
and
aas
shr
sti
dec
mov
and
fs
xchg
test
(bad)
call
dec
aam
popf
xor
xor
mov
sbb
xchg
cmp
xor
pop
or
pop
lea
sar
or
dec
and
dec
call
repnz
mov
movs
push
xchg
cld
sub
fwait
sbb
xor
ins
sahf
fmul
xor
adc
xchg
dec
or
rol
(bad)
xlat
ins
loopne
mov
loop
(bad)
xchg
cmp
mov
xchg
cmc
dec
jo
cmp
mov
jnp
bnd
scas
scas
pop
rol
adc
cs
(bad)
and
ins
pop
outs
(bad)
inc
mov
inc
sub
adc
es
jg
push
fisubr
cmps
mov
add
rol
(bad)
das
pop
mov
cwd
adc
mov
test
jp
xchg
push
sbb
xor
mov
pushf
mov
xchg
push
je
xchg
mov
imul
cmp
daa
out
jp
cld
fimul
xor
and
mov
and
aas
pop
mov
inc
mov
in
dec
je
ins
xchg
cmps
retf
and
xor
and
scas
ins
sub
imul
pop
and
in
sbb
xor
add
or
adc
stc
das
aas
jle
(bad)
adc
mov
xchg
mov
adc
ins
mov
cmp
shl
dec
mov
dec
int3
inc
int3
stos
movs
lock
pop
push
data16
gs
jg
push
int3
pop
cs
lods
push
or
xor
push
jg
aaa
xchg
mov
call
sub
or
cmps
out
bound
ss
call
push
push
mov
imul
cld
push
leave
mov
and
(bad)
lsl
lods
inc
xor
push
sbb
shl
sbb
xchg
fwait
dec
ret
push
fcomip
mov
adc
fld
cmps
push
mov
mov
loope
sbb
mov
inc
lods
xchg
ss
adc
fiadd
call
cmc
mov
adc
fild
xor
mov
sbb
xchg
and
adc
(bad)
imul
cmp
and
outs
sbb
jno
jp
jns
clc
cmp
xchg
inc
adc
mov
sbb
out
jg
rcl
push
lahf
or
movs
pop
psrlq
(bad)
cmp
pop
jo
jnp
xor
into
push
lea
fdivp
add
jmp
mov
mov
pop
ret
cmc
or
lea
gs
mov
xor
add
lds
int
or
mov
lods
push
mov
inc
fdiv
fwait
push
dec
cdq
mov
cmp
jp
cmp
aam
xchg
or
mov
sbb
jle
mov
dec
sub
ins
cmc
mov
stc
mov
add
mov
sub
fild
rol
aam
add
(bad)
add
add
stos
popf
sbb
add
add
add
add
add
aam
add
or
mov
add
add
jge
add
add
(bad)
xchg
add
add
add
or
add
add
dec
add
add
add
add
add
add
add
add
add
add
add
cmps
add
add
add
add
push
ret
add
fiadd
add
add
add
loop
outs
add
add
add
add
sbb
add
mov
add
add
add
jo
dec
in
test
or
add
daa
add
add
retf
add
add
add
add
rol
add
add
retf
add
add
add
add
outs
add
add
or
add
add
ins
add
push
add
add
add
add
add
add
add
sub
add
add
push
les
popa
mov
inc
sbb
es
mov
push
addr16
dec
in
mov
cmp
mov
sub
jns
loope
(bad)
push
inc
pusha
dec
mov
mov
adc
les
out
mov
pusha
ret
hlt
inc
mov
rcr
pop
mov
out
leave
mov
xor
fimul
jg
add
cmp
loope
in
and
jo
jb
and
pop
add
not
imul
mov
cli
sub
fs
divps
in
xchg
iret
cld
lods
jcxz
ficomp
xchg
aad
test
xchg
es
sub
daa
mov
push
pop
(bad)
ja
push
push
(bad)
mov
fcom
repz
xchg
and
out
sub
loopne
(bad)
rol
mov
jo
fisttp
or
jl
or
stos
jb
in
retf
movs
push
daa
fistp
adc
out
scas
pop
ret
(bad)
ret
(bad)
cmp
rol
pop
fs
aam
sub
cmp
fcomp
push
push
add
and
ins
cld
(bad)
sar
cli
out
jmp
test
imul
sub
jmp
not
popf
in
adc
xchg
sahf
cld
and
aam
sbb
bound
mov
dec
jbe
call
or
sub
mov
cmp
fst
arpl
mov
add
sub
test
inc
cli
cmp
in
sbb
sub
cmp
loope
fcmovnu
fsubr
es
jne
mov
or
fidivr
push
les
test
jbe
jl
pushf
mov
dec
cmp
dec
lahf
cmp
cmp
or
or
pop
jns
inc
mov
mov
add
jp
sbb
mov
and
aaa
xor
sub
sub
dec
xchg
jne
push
jb
mov
sub
jo
cmps
and
out
scas
scas
call
pop
dec
in
or
xchg
xchg
adc
retf
xchg
outs
out
inc
adc
xor
cld
(bad)
sbb
add
mov
add
push
shr
mov
fst
fwait
test
xchg
movsx
push
xchg
pop
scas
sub
jmp
out
(bad)
js
pop
sub
sub
or
push
shr
hlt
jo
or
or
sahf
sbb
xor
add
test
sbb
sti
push
pop
fcom
and
and
xor
pop
fs
out
mov
mov
lods
ja
outs
mov
mov
das
retf
add
or
lods
scas
sbb
push
into
aas
test
jge
cmp
std
sbb
dec
mov
mov
or
mov
xchg
jg
mov
pop
sbb
mov
addr16
mov
mov
adc
stos
xchg
adc
imul
push
rol
ins
xor
pushf
push
retf
xor
push
pop
sub
mov
aaa
int3
outs
inc
daa
or
sbb
sahf
jns
push
jmp
ds
pop
das
mov
inc
inc
and
and
ror
add
retf
jb
push
lods
jno
xchg
sub
bound
mov
scas
inc
push
ret
(bad)
sbb
xor
jae
mov
ins
fild
jb
xchg
fidiv
xchg
or
iret
scas
jmp
mov
cmps
dec
adc
fs
lods
aam
xchg
and
sbb
repnz
mov
add
cmp
lea
jg
hlt
cmp
and
jns
push
stos
lods
shl
in
mov
rcr
fnsave
jnp
ret
les
in
push
in
push
imul
imul
xor
(bad)
das
jl
xchg
pushf
push
xchg
and
adc
scas
pusha
fisub
mov
ret
pushf
push
push
in
aam
mov
jae
adc
cmp
loope
ds
cld
pop
inc
das
dec
and
pusha
inc
daa
imul
sub
cli
test
cmp
fcos
aaa
outs
loop
test
test
lahf
arpl
xchg
pop
add
fwait
das
add
and
ds
sti
mov
pop
outs
adc
xor
pop
imul
out
jmp
mov
pop
or
or
cmps
sbb
cmp
ret
(bad)
out
mov
loop
adc
mov
(bad)
mov
mov
mov
mov
popa
shl
pop
mov
mov
pop
dec
stos
inc
mov
mov
xor
hlt
(bad)
push
add
mov
icebp
dec
fdivr
test
pop
cwde
movs
mov
addr16
pop
xchg
fs
push
loop
fwait
inc
js
lock
mov
inc
push
mov
lock
jmp
fisttp
push
jmp
in
mov
es
mov
sti
and
icebp
mov
push
sbb
sti
int
or
sbb
leave
(bad)
xlat
in
sbb
imul
mov
and
jmp
push
push
cmp
mov
aad
xor
(bad)
and
test
and
cmps
cld
div
cmc
repz
xor
(bad)
scas
test
scas
xor
lods
test
cmps
cmp
cdq
popa
xor
add
mov
push
lds
sti
adc
mov
add
inc
cmps
(bad)
arpl
ins
cli
inc
je
sahf
sahf
xchg
movs
pop
fbstp
adc
mov
outs
aaa
fdiv
sub
repnz
ds
sti
xor
pop
jl
mov
dec
fild
add
div
mov
fnsave
xchg
(bad)
repz
rol
adc
std
mov
cmp
addr16
fadd
sub
add
mov
arpl
mov
pop
add
jns
jge
jne
and
f2xm1
sbb
sub
ds
xor
adc
sub
jno
movs
ins
ret
call
cmp
sbb
jp
push
cmp
in
cmp
imul
bound
stc
mov
aaa
vmovdqa32
push
dec
sub
cmp
ins
lods
mov
cmp
add
pcmpgtw
cdq
sbb
pop
and
cwde
jb
ret
outs
ret
data16
stos
pop
and
movs
push
call
sbb
shl
sbb
pop
pushf
(bad)
daa
dec
icebp
dec
aam
dec
ss
fmul
mov
call
jmp
pusha
jge
mov
imul
inc
dec
jne
push
(bad)
cmp
outs
sbb
repz
jbe
retf
or
or
loope
dec
out
(bad)
pop
dec
and
dec
mov
dec
ss
les
nop
push
mov
jmp
and
ss
clc
out
xlat
xchg
loop
cmp
or
into
mov
ficomp
mov
or
cmp
js
push
into
fisub
sub
add
sbb
daa
push
fdivr
pop
push
xchg
aas
pushf
rcr
(bad)
(bad)
fstp
mov
jno
inc
and
mov
stos
add
inc
shl
clc
es
lods
push
pop
and
js
retf
pusha
adc
gs
popa
shl
xchg
xchg
push
aam
test
clc
(bad)
lahf
dec
mov
jg
jns
ss
out
push
jmp
in
pop
jo
sti
adc
sbb
aas
jge
test
jge
das
mov
int
in
gs
fadd
mov
test
cmp
fidivr
xor
and
cmp
das
jle
test
fcmovu
jg
add
shl
in
cmps
inc
or
jl
mov
jnp
mov
movs
mov
shl
lea
lods
ds
fwait
cld
sar
stc
mov
sbb
mov
fcmovnb
nop
icebp
frstor
into
adc
into
jbe
mov
pop
(bad)
(bad)
repnz
scas
daa
jp
enter
std
jg
scas
hlt
les
or
rol
test
xchg
jg
xchg
dec
fnstenv
movs
push
mov
push
sbb
pop
gs
jns
cmp
icebp
sbb
pop
or
(bad)
(bad)
in
scas
popa
adc
sbb
push
mov
enter
push
por
loopne
aas
push
or
cmp
push
fsubp
mov
mov
inc
cmp
mov
dec
jg
xor
push
mov
sub
test
mov
mov
ds
jno
xchg
out
cmp
pop
pop
sub
sbb
outs
mov
sub
(bad)
(bad)
jmp
xor
push
pop
mov
mov
aad
retf
retf
sub
dec
xlat
mov
push
call
sar
xchg
test
(bad)
pop
xor
out
data16
inc
dec
ja
push
sub
aaa
fstp
stos
pop
mov
nop
cmps
gs
lock
mov
push
call
cmp
fst
cmps
scas
xor
mov
mov
mov
ret
xlat
fst
mov
dec
out
leave
sti
std
push
cmp
out
mov
xchg
xor
outs
cmps
iret
int3
shl
ret
sbb
mov
int
test
mov
add
loop
por
mov
cli
push
fdivr
out
mov
mov
ins
sbb
add
jge
mov
into
pop
jae
mov
mov
and
std
cmp
lahf
into
shr
mov
out
into
mov
cmp
shl
xchg
pop
in
and
scas
outs
cwde
push
sbb
mov
out
(bad)
in
jae
fwait
xchg
out
adc
push
cmps
and
jg
aad
adc
enter
je
int3
pop
dec
cli
call
mov
and
xchg
sbb
sbb
push
in
mov
nop
or
or
int
idiv
fs
ins
mov
pop
retf
fist
inc
pop
(bad)
push
mov
xchg
aam
xchg
cmp
inc
jns
(bad)
and
ror
icebp
or
aad
loop
imul
mul
mov
(bad)
lahf
xor
sar
jbe
(bad)
lock
jmp
dec
imul
lea
mov
lods
shr
test
int3
and
pop
pusha
lds
sub
mov
xor
dec
ins
iret
inc
push
fbstp
lods
hlt
enter
jg
jns
inc
push
and
movs
adc
lea
cmp
inc
jae
mov
ins
dec
aas
mov
movs
movs
sahf
jns
add
add
aaa
cmp
add
add
add
test
add
lea
add
add
lds
add
add
inc
add
add
inc
add
mov
add
add
add
add
bound
add
pop
add
add
add
jo
jo
add
mov
add
std
add
add
add
add
add
add
add
add
add
mov
jecxz
add
add
retf
add
sub
add
add
xchg
add
add
push
add
add
jnp
add
add
add
add
(bad)
xchg
sbb
daa
mov
adc
mov
test
test
cmp
sbb
mov
fmul
test
mov
ficom
inc
aam
add
sti
and
icebp
fistp
adc
int3
push
stc
inc
mov
arpl
outs
into
or
mov
ret
and
or
shl
(bad)
pop
popa
push
jb
push
mov
out
cli
adc
sub
test
mov
hlt
pop
adc
ins
out
aam
xor
lock
rcr
jl
repz
sub
cld
jl
jp
pop
mov
mov
(bad)
fisub
iret
inc
mov
jae
pop
jecxz
inc
sub
mov
pop
add
out
mov
retf
repnz
cs
dec
and
retf
rcl
and
add
xchg
push
push
icebp
out
cmp
pop
adc
lods
pop
dec
mov
imul
inc
rcr
pop
mov
ss
popa
pop
fisttp
retf
pop
test
iret
(bad)
out
xlat
mov
mov
and
es
adc
jg
adc
sbb
out
jmp
jb
adc
adc
pop
mov
loopne
dec
add
jb
xor
clc
xlat
fs
mov
push
shl
sub
xchg
movs
sti
ja
lods
xchg
add
out
sar
xor
sti
sbb
dec
jo
xchg
orps
inc
xlat
aaa
into
cmp
add
push
pop
retf
push
bnd
cs
add
scas
push
mov
push
sub
xchg
sbb
bnd
add
sar
add
or
imul
mov
out
fdiv
lahf
sub
push
sbb
lahf
push
xor
mov
mov
fisttp
fadd
and
mov
retf
adc
mov
ret
in
pusha
div
xchg
xchg
xchg
dec
mov
mov
pop
aam
outs
sbb
lods
adc
jl
inc
test
mov
inc
push
push
(bad)
std
adc
or
mov
cmp
(bad)
lock
mov
xor
jns
or
pop
xchg
sbb
test
add
sbb
stc
mov
fcmovu
pop
sbb
xor
dec
scas
xchg
aaa
dec
jmp
mov
mov
cmc
fnstcw
dec
repnz
fwait
pop
ss
push
cmps
jge
mov
imul
adc
xor
jbe
add
sbb
pop
pop
xchg
add
repz
jecxz
cmps
sbb
lea
mov
out
xor
imul
add
shl
call
pushf
int
xchg
xchg
(bad)
mov
in
or
arpl
mov
inc
jmp
aam
xchg
loopne
mov
mov
mov
int3
and
cdq
cmp
fwait
mov
inc
pop
aas
dec
mov
ins
sub
xchg
xlat
pop
sbb
cmp
mov
mov
jg
sbb
mov
xchg
retf
mov
sahf
xor
adc
sti
out
cld
call
push
xchg
outs
aaa
inc
es
or
retf
adc
data16
sub
jmp
inc
inc
(bad)
mov
mov
ficom
rol
pop
cli
call
lods
mov
lods
cmp
jl
push
call
fcom
lock
cwde
inc
popf
jo
into
(bad)
jb
fs
lahf
mov
loop
aad
bnd
sub
cli
dec
pop
dec
xchg
mov
ss
mov
jnp
sbb
and
test
bound
loope
mov
push
data16
jmp
mov
cwde
int
sbb
adc
pop
rcr
adc
stos
icebp
retf
test
adc
adc
pop
shl
dec
outs
push
sub
ins
in
ret
out
push
lock
loopne
pop
repnz
fisubr
mov
fist
out
and
retf
mov
lock
retf
xchg
mov
(bad)
in
cmp
fwait
cmps
cdq
adc
inc
xchg
or
sub
test
pop
cmp
sbb
mov
dec
lds
pop
adc
jle
mov
fbstp
sti
fcmove
push
xchg
jl
push
outs
clc
fadd
jmp
and
pusha
mov
adc
mov
pusha
pop
retf
push
xchg
imul
fnstsw
sbb
call
not
push
addr16
lea
nop
fwait
cli
push
pusha
imul
sub
mov
mov
ficomp
shl
test
xor
(bad)
sbb
add
scas
sub
cmp
repz
push
test
dec
adc
jae
ficom
(bad)
xlat
(bad)
mov
ins
adc
mov
jge
xchg
jno
shl
jae
in
fild
cmps
jo
jp
js
mov
sub
clc
into
cli
push
and
and
mov
cmc
pushf
or
pop
mul
icebp
sbb
mov
mov
call
adc
mov
fs
mov
fbld
test
pop
add
aas
std
cmp
cmc
inc
mov
cmc
out
dec
mov
sub
fisttp
jae
dec
mov
(bad)
pop
scas
leave
mov
data16
ins
sbb
xchg
out
enter
push
cdq
sub
xchg
loopne
fwait
leave
retf
mov
call
jp
mov
mov
loopne
ins
jge
lock
setae
lods
lea
push
cmp
(bad)
cmp
push
jns
les
test
pop
inc
pop
cmc
aam
push
int
push
(bad)
and
cmp
cmp
rcr
jmp
mov
cmp
dec
mov
mov
mov
ss
add
popa
sbb
inc
sub
cld
or
mov
jl
(bad)
and
jb
or
inc
arpl
pop
xor
add
jno
in
imul
xchg
and
add
jmp
test
pop
push
mov
inc
lock
mov
fs
sub
aam
adc
dec
inc
xchg
push
sbb
inc
push
mov
loop
shr
mov
mov
mov
test
or
xchg
iret
test
push
add
pop
(bad)
xlat
(bad)
mov
pusha
clc
dec
or
adc
lods
lock
aas
push
nop
je
and
dec
push
dec
movs
dec
and
pop
in
leave
loopne
mov
into
mov
std
jne
xchg
retf
int
xor
nop
lea
out
sub
cmp
cmp
int
pop
stos
cmp
add
sub
xchg
scas
mov
int
xchg
or
jb
scas
push
pop
and
not
mov
bound
sub
stc
pop
push
inc
sub
fwait
shl
sbb
pop
lahf
mov
cmp
test
and
pop
adc
mov
mov
test
push
mov
xchg
repnz
push
or
test
push
pop
fdivr
cs
mov
aaa
push
xor
and
into
mov
sub
mov
jb
mov
jno
(bad)
fcomip
fdivp
ret
fwait
push
fld
mov
pop
movs
add
cdq
add
mov
sbb
sbb
cmps
fs
sub
mov
int3
mov
xchg
sbb
fs
and
shl
push
nop
pop
xchg
xchg
cmp
orps
addr16
addr16
add
mov
ret
leave
leave
in
sbb
cdq
lods
stos
and
cmp
inc
arpl
cmp
popa
mov
push
movs
out
inc
sub
call
(bad)
test
pop
inc
adc
pop
mov
(bad)
mov
cmp
ret
pop
fwait
xor
std
inc
sub
sti
dec
imul
cmp
push
push
cmp
add
rcr
je
xor
add
cmp
cmps
push
push
pushf
mov
loopne
inc
sbb
jg
lods
ret
iret
test
jle
xchg
in
hlt
test
dec
mov
outs
mov
and
retf
ja
loope
push
std
add
stos
fwait
mov
fwait
mov
push
outs
popa
ficom
cmp
pop
pop
in
push
push
pop
sbb
scas
xor
inc
repnz
pop
mov
sahf
mov
jge
inc
mov
imul
add
xor
mov
add
add
(bad)
xchg
cmp
dec
dec
jmp
in
jne
ret
add
push
bnd
push
pop
push
mov
and
mov
mov
sub
push
jmp
jnp
inc
sbb
test
mov
stc
xchg
jmp
jns
mov
bound
and
dec
popf
mov
jo
jb
push
pusha
jle
or
xchg
inc
cmp
or
jbe
call
jae
cmp
jmp
push
add
jb
adc
mov
cmp
inc
fist
sbb
pusha
stos
aas
cmc
jmp
xor
dec
enter
dec
jmp
cmp
cdq
repz
cli
jne
push
mov
push
cli
mov
push
adc
fsubr
mov
fwait
outs
or
cmp
dec
pop
inc
xor
das
fisubr
fwait
lock
mov
xchg
pop
iret
pop
jnp
(bad)
arpl
cmp
test
fs
mov
ins
push
mov
daa
jns
pop
sub
pop
pop
aad
inc
or
sar
out
test
sbb
lds
ss
stos
inc
jecxz
aaa
(bad)
aad
stc
xchg
push
push
out
mov
cmps
mov
push
or
out
dec
xchg
cmp
cli
stos
data16
outs
out
in
jmp
mov
push
loope
jae
fimul
cmp
int
xchg
xlat
jno
dec
sub
mov
dec
call
lods
cmp
pop
pop
inc
lock
push
cdq
and
push
xchg
pop
ret
ss
adc
ja
(bad)
outs
sti
mov
lock
pop
pop
lock
or
adc
push
dec
xor
or
outs
push
iret
(bad)
stc
adc
or
sbb
fild
cs
loope
inc
push
into
sti
mov
sub
lds
sub
dec
xchg
js
adc
sbb
mov
or
mov
fsub
mov
std
adc
jo
mov
dec
push
mov
bound
not
cmps
(bad)
repnz
fcomp
mov
ret
pop
popf
push
(bad)
mov
test
aad
imul
cwde
cmp
mov
cmp
xor
mov
add
add
add
add
add
add
add
add
add
cmc
add
add
add
add
cdq
add
add
inc
add
add
add
add
cmps
push
inc
add
add
add
add
add
add
add
shl
pop
add
add
add
inc
add
add
add
add
xchg
add
cdq
add
add
test
and
int
xchg
ins
pop
les
dec
mov
jbe
(bad)
lods
mov
push
cmp
je
loopne
enter
xchg
imul
les
aaa
xchg
cs
and
in
mov
into
loop
cs
mov
rol
mov
test
add
jo
sub
out
jle
ins
adc
mov
and
and
inc
xchg
jl
sti
call
cmp
push
inc
loope
and
inc
sub
push
xor
fild
ret
or
js
adc
dec
outs
xchg
subps
mov
xor
jl
sbb
ins
int3
add
dec
sbb
adc
lea
in
arpl
in
(bad)
mov
push
pop
sub
leave
add
int3
add
mov
add
ret
in
push
add
movs
sahf
cs
mov
mov
push
mov
ja
cmc
into
jns
mov
daa
lods
sub
push
sub
jp
lods
xor
adc
and
or
fxch
sahf
adc
push
lds
xor
jae
adc
jae
das
(bad)
imul
add
add
aas
lds
lahf
push
cwde
je
std
mov
push
adc
mov
ror
mov
outs
adc
cmp
sbb
xor
cmps
adc
cmp
addr16
lea
or
push
call
add
and
mov
ror
mul
arpl
pop
icebp
iret
push
test
pop
shr
mov
cli
ret
sbb
or
push
add
and
in
addr16
enter
out
cs
scas
jmp
sub
inc
xor
cs
add
out
mov
pushf
(bad)
push
jno
ret
mov
inc
jne
mov
in
nop
nop
and
jb
jmp
cmps
cs
inc
jecxz
xchg
sbb
int3
cmp
out
dec
inc
ret
aad
mov
pop
fdivr
fcom
push
shl
push
retf
and
pop
mov
jne
fs
jne
mov
jp
fadd
mov
mov
dec
cmc
lock
jg
test
ins
mov
dec
and
jmp
das
or
jge
imul
or
movs
aas
mov
jno
repz
(bad)
sub
pop
shl
mov
sbb
add
mov
mov
imul
sub
push
bt
push
lds
loope
push
xchg
cmp
out
pushf
es
mov
mov
adc
repnz
jbe
dec
cmps
dec
mov
rcr
sbb
xchg
sahf
pop
out
pop
fnstcw
fld
cs
repz
push
cmps
(bad)
or
jge
mov
adc
out
add
add
xchg
jnp
data16
adc
mov
jg
fwait
retf
ja
xchg
sti
cmp
add
jmp
dec
xor
jg
test
xchg
stos
call
dec
mov
jbe
mov
mov
sahf
out
lea
add
addr16
xchg
popf
loopne
fst
push
popf
sub
ins
pop
pop
cld
repnz
jg
jl
xchg
imul
out
(bad)
je
dec
cwde
add
daa
lds
and
xchg
adc
sar
xor
sar
in
test
outs
jge
(bad)
xor
inc
in
xchg
leave
adc
jbe
cs
or
out
jge
mov
adc
icebp
in
xchg
mov
add
nop
movs
xchg
cli
mov
lea
cwde
cli
jae
ss
(bad)
sar
(bad)
out
or
jle
pop
mov
adc
jp
(bad)
add
es
clc
popf
scas
mov
xor
pop
in
js
(bad)
nop
jecxz
mov
push
clc
jecxz
adc
xor
cmp
xchg
sub
xchg
jno
test
stos
pop
xchg
mov
(bad)
not
mov
xor
dec
loopne
vpcmpeqw
push
sahf
xor
jae
add
mov
jge
rcl
call
xchg
loope
jle
ins
or
jp
pop
pusha
cmp
ds
repz
jo
test
(bad)
ds
ret
and
pop
jo
pop
ss
push
xor
or
or
sbb
dec
add
inc
iret
lock
out
pusha
int3
scas
addr16
in
daa
xor
jne
xlat
retf
(bad)
cmps
adc
ret
or
pop
jecxz
inc
mov
cmp
inc
jns
sbb
mov
int3
adc
cmp
or
push
lds
adc
stos
cmc
stos
addr16
pop
scas
pusha
ds
xlat
adc
jnp
pop
adc
rcr
cmp
pop
rcl
mov
push
loop
pop
add
(bad)
fistp
cwde
mov
sbb
pop
enter
ins
mov
stc
xchg
out
shl
push
shl
fs
repnz
xchg
ins
outs
dec
mov
cmp
cmp
fwait
movs
nop
in
inc
imul
popf
dec
jge
pop
stos
ret
(bad)
jns
and
and
adc
pop
push
push
dec
push
dec
and
test
sti
adc
pop
mov
or
pop
ins
pop
adc
xchg
jecxz
test
out
jbe
inc
mov
xor
push
mov
scas
pop
add
xchg
dec
repnz
adc
cmp
lods
test
sar
dec
shl
in
cmps
jmp
in
sti
sbb
data16
cdq
mov
or
add
cdq
adc
sahf
add
push
pop
push
loopne
cmps
adc
bound
sub
mov
dec
push
sbb
cmps
pop
scas
xor
sbb
mov
inc
lods
sbb
ds
xchg
movs
int3
addr16
je
int3
aas
retf
sbb
cwde
sbb
xor
mov
cmps
xchg
into
mov
xchg
cmps
sbb
out
in
inc
sbb
lds
call
cli
push
pushf
jg
sbb
(bad)
jmp
and
jno
jns
leave
xchg
and
mov
mul
pop
and
nop
push
sbb
in
cwde
shl
pop
cmp
fcmovnb
clc
es
or
stc
jg
mov
xor
or
out
push
gs
xchg
in
pusha
test
icebp
iret
rdtsc
jno
jg
data16
add
dec
lahf
test
and
(bad)
sahf
fnstcw
fdiv
and
inc
add
pushf
mov
out
mov
mov
cdq
push
jbe
xchg
jmp
jge
adc
mov
sbb
icebp
pandn
mov
mov
mov
adc
pop
shl
test
pop
out
mov
cmps
push
push
mov
imul
lods
aaa
rcr
or
int
fbld
cmps
jmp
call
mov
in
adc
imul
stc
cmp
push
cmp
mov
je
int3
add
jl
in
dec
jnp
push
fcom
popf
sbb
pop
dec
mov
xor
dec
push
mov
push
ins
mov
sbb
push
sbb
mov
enter
adc
(bad)
xchg
inc
repz
(bad)
jmp
pop
push
test
dec
rol
jl
add
pop
frstor
test
cld
adc
inc
out
push
add
cld
or
adc
test
mov
xor
ss
sbb
test
push
push
push
adc
inc
adc
cmp
data16
xchg
mov
idiv
cs
inc
int
xor
and
or
ret
lea
fsubr
mov
arpl
adc
jle
jecxz
fcmovne
add
sbb
cmc
xchg
movs
jmp
mov
push
add
xchg
outs
dec
add
fwait
cmps
cmp
xor
jl
mov
fist
push
jle
push
shr
push
mov
sub
mov
xor
outs
dec
movs
in
mov
outs
dec
and
sub
mov
pop
push
sub
mov
xor
sahf
sbb
rcr
jne
clc
xor
mov
or
repnz
ret
cmps
stos
mov
icebp
iret
dec
inc
dec
into
shl
movs
aam
adc
fild
aaa
in
icebp
movs
xchg
xchg
pop
shr
mov
jnp
dec
push
jmp
push
loopne
nop
sbb
lahf
out
pop
xor
cwde
popf
fwait
sub
shr
sahf
scas
add
inc
pop
cmp
lds
pop
cs
retf
lds
and
mov
fistp
mov
push
or
ins
cwde
mov
fs
imul
repnz
sub
ss
mov
call
cwde
push
lods
xor
push
lea
jp
xlat
cmp
ins
jl
or
push
cmps
jb
leave
loop
pop
pop
or
and
shl
mov
scas
xchg
hlt
mov
cli
mov
mov
mov
ins
or
into
push
mov
call
lock
push
mov
aad
xchg
dec
iret
xor
or
adc
cdq
mov
jp
inc
jno
and
clc
pop
jnp
pop
sub
fdiv
mov
and
fld
sbb
(bad)
(bad)
ins
pop
mov
cmp
out
push
nop
jl
push
sahf
mov
(bad)
mov
ficom
and
pop
pop
xchg
fwait
pop
js
ret
mov
dec
jg
out
sub
and
sub
xchg
mov
cmp
or
push
in
mov
jmp
or
mov
mov
push
jne
mov
pusha
movs
js
and
retf
jae
inc
xlat
dec
push
addr16
stos
jge
jae
retf
mov
jp
into
fld
mov
loopne
lods
test
ret
in
xchg
dec
mov
push
ror
sub
dec
loope
or
(bad)
leave
jno
jae
mov
pop
push
pop
and
hlt
movs
add
mov
push
mov
jo
mov
xchg
shl
mov
add
call
imul
pop
fistp
cdq
jnp
pop
sysret
cld
popa
or
xor
scas
in
inc
pop
mov
cmc
mov
pop
neg
push
sti
repnz
retf
xor
pop
mov
cwde
mov
mov
pop
pop
add
out
push
jbe
scas
xchg
add
add
add
movs
add
add
add
add
add
jne
add
sbb
add
add
test
add
add
and
add
add
add
mov
sbb
add
daa
lahf
add
add
mov
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
dec
add
add
add
add
add
add
and
add
pop
add
jno
add
add
add
add
add
add
add
add
add
add
add
cdq
add
add
add
jns
add
add
add
xor
and
add
add
ltr
add
loop
add
add
add
test
add
add
pop
add
add
imul
test
adc
sahf
(bad)
mov
pop
pop
xor
mov
push
pusha
cdq
repnz
mov
mov
cmc
adc
pop
xchg
in
out
xor
sub
ins
sbb
jbe
out
test
xchg
xchg
mov
xor
inc
and
cmp
sub
fmul
in
mov
pop
jg
sub
xor
into
jno
ret
pop
mov
jg
and
fwait
xor
data16
sub
pop
aad
enter
out
mov
inc
and
repnz
dec
mov
push
scas
je
(bad)
pop
sbb
mov
ret
xchg
jno
jbe
mov
sbb
in
and
dec
sar
or
test
lock
adc
jbe
loopne
sahf
les
in
sahf
or
push
sub
clc
push
lahf
dec
shr
dec
mov
adc
mov
jno
cmp
pop
mov
in
mov
nop
or
jns
dec
in
xchg
es
sti
pop
adc
je
mov
bound
mov
cs
ret
sahf
std
cld
sbb
xlat
es
inc
xchg
xor
xchg
adc
jns
and
sub
push
jbe
pop
mov
pop
dec
sub
pop
loope
push
dec
sub
popf
and
test
and
push
cli
push
sub
out
(bad)
out
push
ins
hlt
pop
call
repnz
fimul
mov
or
mov
mov
jae
and
push
sub
sbb
cmps
and
mov
fiadd
pop
aas
mov
xchg
pop
mov
cwde
test
repz
cli
sub
jp
rcl
nop
into
push
pusha
stc
xchg
ss
pusha
int
rcl
push
jnp
movs
cdq
call
rcr
mov
push
std
retf
push
xchg
scas
add
push
aaa
mov
repz
rcl
mov
adc
pop
inc
in
xchg
or
pop
sahf
inc
pop
and
aam
arpl
cwde
cmc
mov
lds
sar
push
les
xchg
test
(bad)
stc
cmps
fbstp
inc
mov
pop
push
int3
xor
shr
retf
(bad)
daa
dec
cmp
push
xchg
sbb
hlt
xor
test
aaa
push
mov
idiv
(bad)
pop
scas
loope
loopne
stos
std
jbe
sbb
pop
sub
(bad)
fstp
cld
mov
sbb
arpl
jo
pop
xor
mov
out
add
cmp
sbb
mov
pushf
pop
push
xchg
mov
je
add
ret
add
stos
sub
test
inc
out
out
popa
icebp
frstor
gs
and
(bad)
cmp
sbb
mov
pop
out
dec
icebp
das
sbb
mov
(bad)
std
xchg
cmc
xchg
mov
ins
xchg
inc
and
lods
movs
pushf
pop
ins
das
repnz
shl
mov
les
aas
ss
out
(bad)
xchg
and
adc
jmp
test
les
sub
popf
mov
jmp
sbb
add
mov
ror
movs
test
xlat
cli
jnp
(bad)
push
mov
inc
std
dec
das
pop
mov
in
fucom
fs
jo
scas
xchg
push
ins
inc
fnsave
pop
je
daa
jl
xor
loope
xor
out
js
add
cmp
inc
adc
push
scas
pop
cli
add
out
lock
ss
mov
add
ins
add
aam
xchg
rol
fwait
out
sbb
push
sbb
ins
cmp
repnz
and
cs
xchg
and
out
pushf
in
std
(bad)
lahf
fwait
cmp
mul
bnd
and
dec
xchg
retf
pop
inc
xor
arpl
jae
xor
mov
and
sbb
stos
xchg
mov
test
pop
outs
push
fisttp
nop
add
xchg
out
cs
inc
shl
mov
mov
cmp
frstor
(bad)
pusha
fdiv
into
mov
xor
push
mov
stos
js
mov
push
sbb
fwait
cdq
call
loope
aas
push
xchg
fnstcw
ins
lock
push
and
pop
nop
mov
cmps
jp
pusha
sbb
pop
push
sub
je
or
push
cmp
rcl
cdq
jl
mov
inc
push
cmps
inc
cmp
fisubr
cwde
mov
jae
jecxz
jnp
out
outs
mov
or
movs
jmp
adc
call
or
mov
dec
retf
add
or
push
movs
(bad)
fist
out
mov
and
push
pop
daa
test
dec
mov
aam
bound
in
outs
call
pop
cmp
push
cmp
(bad)
lock
scas
call
ds
push
sti
fistp
mov
add
(bad)
rcl
fwait
sbb
cmps
sub
iret
xlat
bound
pop
inc
test
cld
aas
outs
imul
mov
sub
pop
hlt
and
mov
cmp
and
lods
arpl
sub
cmp
inc
push
jmp
scas
jl
and
mov
xchg
cwde
and
leave
sub
push
xchg
sub
mov
sub
sub
adc
add
jns
mov
mov
movs
call
xor
mov
xor
xor
inc
repz
pop
and
icebp
cmp
xor
pop
mov
pushf
scas
retf
dec
pop
jl
sub
jg
aad
cmp
pop
pop
in
xchg
jns
bound
and
cmp
(bad)
push
fdiv
cmps
cmp
xchg
scas
iret
or
movs
xor
jg
repz
fadd
xchg
fwait
inc
fwait
lods
sub
bound
cmp
in
ss
fcmove
push
outs
mov
add
cmc
retf
aam
mov
xchg
xlat
(bad)
ins
xlat
xor
and
movs
cmp
pop
mov
mov
sbb
nop
popa
mov
add
cmp
daa
int
int
(bad)
pop
jae
loop
cmc
repnz
fstp
mov
dec
sub
or
cwde
enter
or
push
dec
xor
test
mov
(bad)
mov
xchg
or
pusha
rcr
and
sub
push
in
adc
pop
ss
and
addr16
mov
inc
movs
dec
loop
lds
pop
call
dec
test
test
adc
sbb
test
add
test
loope
ret
imul
popf
inc
mov
sbb
xchg
push
dec
test
icebp
xchg
mov
aad
mov
mov
mov
dec
add
ja
sub
(bad)
stc
mov
mov
fsubr
fist
sbb
sti
test
adc
les
call
pop
adc
ja
mov
or
mov
les
out
xor
pushf
test
(bad)
lock
lds
pop
jb
jmp
inc
lock
ret
pop
iret
sar
fld
xchg
fcomp
or
cmp
stos
pop
mov
add
jecxz
cli
dec
bound
mov
ins
jp
icebp
mov
fimul
lods
mov
cmps
push
pop
mov
pusha
push
mov
addr16
dec
sbb
sbb
push
pop
ror
sbb
add
sub
cld
xchg
sbb
aaa
pop
push
js
sahf
nop
mov
xchg
ins
test
cwde
cld
into
fldenv
pop
pop
xchg
lock
mov
jno
fcomp
jmp
xchg
cmp
mov
sti
adc
inc
xchg
xchg
movs
jecxz
xchg
mov
fucom
outs
xchg
push
cmp
dec
shr
ja
xor
gs
jae
and
mov
adc
out
fidivr
imul
outs
enter
dec
stos
mov
sbb
and
push
dec
adc
rcl
xchg
aas
or
out
test
fs
jae
jnp
xchg
cmp
aam
cmp
pop
mov
and
ficomp
addr16
daa
int
cmp
(bad)
and
xchg
popf
push
or
movs
lock
jae
dec
fldcw
mov
jnp
rcl
xchg
or
mov
xchg
dec
dec
push
and
movs
xchg
mov
xor
fdivrp
stos
mov
sahf
mov
pusha
(bad)
jns
push
mov
mov
mov
(bad)
jle
pusha
bound
adc
mov
jns
jb
sub
ds
scas
(bad)
jae
ret
aas
call
sbb
mov
ja
test
jg
add
das
dec
xchg
xor
lds
dec
xchg
pop
mov
ret
(bad)
ds
mov
xchg
xchg
mov
cmp
add
mov
(bad)
gs
into
sub
mov
mov
xor
cmp
loope
hlt
jg
adc
aas
in
test
mov
xlat
rcr
lods
xchg
inc
mov
jmp
int3
cdq
std
lods
xor
xchg
mov
jbe
jmp
(bad)
add
add
cmps
in
inc
imul
addr16
(bad)
es
cmp
pop
ret
mov
jbe
iret
add
jecxz
xor
mov
cli
adc
shl
je
jno
sub
fcomp
and
add
mov
aas
cmps
arpl
js
shl
pop
push
jae
popf
(bad)
nop
iret
add
cmp
(bad)
cli
jno
cdq
test
mov
and
call
jno
popa
push
jp
add
jl
icebp
mov
fs
cdq
scas
ss
jno
sar
fimul
adc
shl
mov
mov
adc
movs
cmps
sbb
mov
push
mov
in
xchg
rol
push
dec
mov
cs
xchg
or
jne
sbb
aaa
rcl
push
scas
or
mov
xor
sbb
sbb
push
imul
and
dec
rol
mov
xor
dec
sub
inc
jae
push
jge
mov
fdiv
pop
fst
jns
retf
xchg
jb
mov
mov
inc
mov
jl
or
mov
idiv
pop
jg
fsubr
add
test
and
es
mov
stos
mov
jno
in
cmp
pop
pusha
retf
xchg
nop
out
or
dec
or
cmp
add
add
add
add
add
add
add
add
stos
out
dec
add
add
add
add
or
add
xchg
add
add
add
add
add
add
mov
dec
add
add
add
add
add
jbe
add
add
add
mov
jp
add
add
add
add
jne
add
add
add
add
inc
add
add
test
jp
add
add
add
add
add
add
add
add
add
push
das
add
add
add
add
add
add
cmp
add
add
add
mov
xor
add
add
push
add
inc
add
add
stc
add
add
out
xor
jp
add
add
add
jb
add
add
add
add
add
add
out
add
add
xor
pop
out
and
test
add
sbb
add
add
ss
add
ss
add
add
add
push
add
add
add
add
add
add
add
add
mov
add
add
add
add
stos
add
adc
add
jmp
add
add
add
add
add
add
add
add
add
mov
mov
jnp
sub
adc
sub
pop
lock
loopne
cmc
sub
or
xlat
sub
dec
xchg
xchg
inc
popa
mov
loopne
jl
stc
ret
xchg
(bad)
xlat
lods
(bad)
lods
mov
mov
(bad)
aam
iret
clc
jmp
pusha
adc
fisubr
xor
mov
adc
dec
push
dec
addr16
into
sbb
jecxz
and
sti
push
mov
xchg
cmovne
clc
int3
add
cmp
and
adc
arpl
mov
xor
arpl
jbe
pop
data16
dec
add
scas
xchg
ss
loope
hlt
test
mov
ret
jae
jge
mov
push
ds
in
rcl
push
adc
mov
pop
rcr
pop
xor
pop
aaa
cwde
lahf
or
loope
movs
xchg
pop
dec
sahf
sub
retf
add
xor
xchg
lods
ds
jmp
ret
sahf
and
mov
pop
push
jmp
in
cmps
ja
jmp
sbb
(bad)
out
dec
das
jns
push
lds
mov
inc
div
(bad)
fisub
lea
ins
mov
adc
popa
adc
ins
push
dec
push
fisubr
cmp
imul
call
add
pushf
jg
jg
lds
test
xor
xchg
dec
ja
in
xor
outs
mov
not
ret
xor
and
push
(bad)
jnp
inc
push
lahf
mov
pop
xchg
int
fcmovu
movs
pushf
mov
sub
xchg
sub
shr
fistp
ins
sbb
enter
sbb
mov
aaa
dec
and
icebp
push
push
lds
call
pop
popf
fwait
leave
mov
fucomi
mov
retf
push
ins
paddq
hlt
jp
cmp
(bad)
jle
(bad)
jecxz
jo
shl
outs
mov
and
out
inc
xor
movs
or
addr16
pop
mov
es
inc
push
xchg
xchg
xchg
ror
mov
sub
cmp
sub
call
test
rol
loopne
dec
test
add
push
scas
cmp
add
rcl
aaa
es
addr16
xchg
gs
gs
out
add
das
cmp
sbb
xchg
arpl
in
dec
mov
leave
cmp
sub
pushf
cld
xor
jb
cmp
mov
mov
sbb
(bad)
sbb
inc
inc
fimul
rcl
mov
cwde
add
dec
scas
mov
mov
adc
mov
fcomp
mov
rcl
rcr
fcomp
cld
shl
add
fisttp
icebp
xchg
xor
mov
stc
sti
stos
shr
ss
cld
xchg
and
ss
pushf
fs
cmp
adc
add
inc
mov
cwde
mov
pushf
jnp
sbb
outs
push
cmp
sub
adc
loop
mov
xchg
mov
adc
movs
ret
retf
jnp
ret
jge
sahf
xchg
jbe
inc
mov
pop
inc
xchg
mov
or
jmp
adc
and
push
shl
or
mov
(bad)
js
sbb
mov
imul
dec
je
fwait
mov
adc
jae
push
lock
sub
gs
loop
test
hlt
add
mov
stos
cmp
push
push
pop
mov
dec
pop
sub
xor
xchg
cld
(bad)
cli
add
pusha
outs
rol
jmp
xchg
xchg
imul
jno
or
sar
mov
in
push
(bad)
in
add
lods
mov
push
adc
sub
push
sahf
push
push
cs
dec
daa
push
xor
dec
test
aam
cmp
out
mov
mov
mov
add
les
(bad)
fild
dec
adc
sbb
imul
test
out
loope
mov
adc
mov
rcl
mov
xor
loope
fbstp
stc
outs
(bad)
mov
dec
mov
pusha
sti
pop
fwait
jnp
cld
ret
imul
fstp
inc
into
mov
sub
add
enter
es
out
push
mov
loopne
in
cld
out
pop
mov
mov
cld
or
dec
fucom
out
add
mov
sub
and
push
mov
aam
lods
(bad)
(bad)
mov
push
fxch
jo
mov
outs
mov
mov
test
stos
cmp
stos
xchg
dec
cmp
push
cdq
retf
mov
xchg
xor
push
sbb
sbb
mov
sub
jmp
out
cs
cmps
cmp
dec
mov
cwde
sti
cmp
sti
ja
lods
pop
(bad)
sbb
jmp
sbb
xchg
push
push
sbb
or
and
fsubr
mov
pop
scas
pop
das
imul
mov
sbb
sub
in
jge
vcvtsi2ss
and
adc
cmp
out
dec
sbb
out
outs
ss
cld
rcr
mov
mov
lods
outs
adc
lods
loope
jne
or
aad
add
out
xchg
adc
ja
test
jmp
(bad)
jmp
cli
int3
ss
xor
adc
dec
out
mov
mov
add
out
push
mov
cmp
std
xchg
or
jnp
dec
mov
add
add
mov
inc
arpl
push
shl
jmp
xchg
jb
mov
push
pop
call
mov
jecxz
psubsw
or
cld
push
mov
iret
int
aaa
rcr
jg
mov
fisub
sub
ja
mov
fidiv
and
fld
pop
xchg
mov
loopne
popf
push
out
sbb
add
mov
push
pinsrw
xor
in
adc
in
fs
dec
icebp
mov
int
icebp
je
test
in
add
push
dec
arpl
cmp
popa
daa
inc
in
lods
jge
sub
pop
dec
jo
inc
lea
sub
or
mov
into
rcr
mov
cs
xor
jg
pop
in
push
cmps
xchg
loop
cmps
dec
stos
jns
and
mov
pop
aam
xchg
adc
sahf
sbb
sub
test
xlat
mov
push
xchg
in
cmp
stos
shufps
sti
and
jmp
and
sbb
mov
push
jo
adc
or
add
xor
inc
inc
pop
sbb
push
bound
xchg
std
push
fs
mov
test
cld
call
es
jmp
cli
sub
lea
fs
cmps
daa
sahf
lahf
push
mov
(bad)
aam
lods
push
xchg
retf
jae
rol
dec
rol
mov
cld
push
int3
imul
in
xor
repz
dec
xor
or
std
jo
mov
lahf
in
es
mov
addr16
pop
dec
call
mov
dec
jmp
push
mov
inc
mov
mov
das
sar
sub
mov
xchg
cld
jno
shl
push
lahf
sub
adc
mov
dec
or
hlt
das
jns
cs
test
loopne
test
gs
mov
mul
int3
das
and
jge
(bad)
adc
es
outs
das
in
cli
or
or
ins
imul
sbb
pop
repnz
xchg
pusha
syscall
push
or
jno
inc
jmp
cmc
pop
pop
adc
(bad)
cli
test
jl
mov
(bad)
push
ret
pop
ret
js
pop
xchg
ror
xchg
cmps
mov
repz
cmp
push
cmp
lds
xor
cli
and
sub
and
mov
inc
dec
jl
mov
movs
imul
repnz
repnz
shl
cli
ret
dec
pop
pusha
rcl
ret
(bad)
in
gs
ror
ins
mov
retf
or
xchg
mov
jnp
xchg
push
scas
jb
adc
les
mov
fsub
dec
xor
add
or
loopne
jge
aam
push
in
mov
shr
xor
adc
pop
bound
push
jle
hlt
ins
int
cdq
xchg
lods
pop
and
cmps
dec
pop
pop
dec
fild
push
sub
hlt
sbb
or
inc
jbe
mov
xor
and
sbb
cmp
inc
movs
jecxz
cmp
pushf
ja
sahf
loopne
mov
sbb
adc
fimul
adc
test
aaa
inc
fwait
inc
pop
mov
jl
xchg
jmp
xchg
mov
sar
(bad)
es
cmp
leave
in
sub
leave
xchg
push
stc
les
aas
mov
test
int
mov
rol
and
xchg
imul
rcr
fimul
or
(bad)
mov
loopne
sub
cmp
mov
fstp
sbb
loope
inc
clc
dec
adc
mov
jmp
in
in
js
dec
leave
push
push
outs
sbb
mov
sbb
pop
nop
outs
adc
addr16
cdq
jge
cmp
mov
add
shr
test
aad
sbb
or
adc
repnz
and
jge
(bad)
repz
xchg
add
inc
cmp
mov
fwait
popf
mov
mov
ins
not
(bad)
cmp
cli
mul
outs
xor
aaa
xchg
pop
xchg
es
xor
adc
in
push
pop
ss
call
iret
das
xor
push
pushw
lods
popf
fmul
mov
pop
xchg
xchg
js
push
inc
push
pop
inc
adc
les
retw
cmp
lahf
mov
lds
sub
mov
mov
and
mov
sbb
add
and
cmps
pop
jmp
sbb
test
inc
dec
sub
xor
in
jmp
push
lods
xor
jge
outs
movs
and
push
sbb
scas
int
mov
add
stos
popa
arpl
outs
pusha
das
mul
pop
xchg
or
fcmovu
mov
mov
add
repz
and
leave
pop
inc
sbb
add
(bad)
xor
loope
loope
sbb
std
std
mov
aad
jmp
jae
pop
and
add
add
mov
push
add
add
fiadd
add
add
add
add
add
add
add
add
add
add
add
sldt
add
pop
fnsave
add
sbb
add
add
add
add
and
std
add
pop
add
add
adc
add
add
add
add
pop
add
add
add
add
cmp
add
push
add
mov
add
add
add
add
add
add
add
add
pop
add
add
mov
add
mov
push
add
or
xchg
in
add
add
add
outs
and
add
add
inc
add
add
add
or
add
add
mov
add
add
add
mov
add
add
add
add
cmp
jg
sbb
mov
cs
sub
jmp
pop
mov
push
in
dec
push
ret
lds
push
xchg
adc
das
arpl
stos
jmp
inc
inc
cmp
mov
add
push
push
mov
mov
add
sbb
jne
cmp
mov
push
sbb
jmp
dec
pusha
xchg
jl
lahf
loope
cli
(bad)
inc
rol
mov
jmp
les
xchg
jne
fxtract
add
ins
pop
sub
movs
push
push
or
(bad)
mov
push
jo
fdiv
ficom
push
imul
xchg
add
or
ins
mov
inc
mov
mov
sbb
retf
add
mov
add
adc
jl
xor
ins
mov
push
and
std
clc
daa
or
(bad)
leave
and
movs
cld
cdq
mov
jge
aaa
pop
adc
aam
stc
dec
push
(bad)
icebp
movaps
mov
jnp
shr
out
dec
sbb
mov
mov
lock
dec
sbb
repnz
test
scas
add
jbe
aad
cmp
and
nop
test
add
mov
push
in
outs
sar
mov
cmp
inc
push
fs
in
and
fldcw
ja
iret
inc
xchg
clc
inc
dec
adc
shr
shl
les
xchg
hlt
iret
repz
into
xor
aaa
sub
ins
ror
dec
daa
les
out
jno
icebp
push
xchg
and
mov
int
jae
cmp
mov
mov
lahf
imul
outs
sahf
hlt
and
jae
xchg
push
dec
jno
icebp
push
sti
cdq
rcl
cmc
jno
cwde
pmulhuw
inc
hlt
add
xchg
out
cmp
xacquire
cmc
inc
pop
dec
mov
pop
mov
cmps
add
xchg
and
jb
mov
imul
(bad)
mov
mov
xchg
jp
stos
sub
or
sbb
dec
into
out
or
jo
mov
xchg
mov
sub
xchg
inc
jb
fisubr
mov
sbb
jl
pop
or
inc
pop
and
imul
or
push
mov
dec
fwait
aam
add
mov
add
ret
mov
leave
in
test
and
mov
pop
xor
aad
cwde
(bad)
jp
fnstcw
sti
cmp
mov
jns
int3
mov
jmp
add
cs
mov
push
fs
(bad)
cmp
xchg
adc
sbb
mov
adc
and
inc
mov
xor
jnp
xor
int
sbb
out
rcl
fisttp
mov
leave
cmp
cmps
fwait
push
ret
push
fild
dec
push
push
retf
lods
outs
mov
cdq
retf
mov
pushf
push
mov
mov
push
sbb
xchg
dec
dec
xchg
or
outs
adc
pop
lea
adc
movs
dec
shl
add
pop
(bad)
or
mov
mul
out
repz
add
sub
xor
mov
nop
mov
adc
cdq
cmc
sbb
pusha
(bad)
jmp
and
inc
aam
pop
xlat
jg
(bad)
cmp
push
call
adc
jg
std
or
stc
jp
into
xchg
xchg
fwait
pop
lods
dec
add
lock
push
cmp
enter
pushf
mov
fcos
scas
jmp
push
xor
ds
dec
lods
scas
icebp
mov
lods
ins
sub
cli
sub
sub
rcl
les
fistp
fidiv
push
cwde
cmp
(bad)
and
mov
cmps
adc
out
cwde
inc
cdq
or
call
aaa
(bad)
mov
jge
pop
pop
sbb
retf
inc
inc
shl
ret
pop
loope
xor
out
shl
addr16
rol
sbb
loopne
add
cmps
mul
fs
dec
cmps
fild
mov
sub
(bad)
in
sub
cli
call
mov
into
cld
sahf
imul
mov
mov
mov
inc
dec
push
add
push
out
fsubr
sti
xor
mov
in
mov
xlat
mov
dec
fwait
mov
jp
pop
imul
lods
test
imul
clc
push
mov
adc
lds
push
inc
arpl
inc
push
imul
dec
and
add
mov
mov
push
inc
add
imul
in
pop
jnp
cld
sub
mov
inc
fcom
cdq
mov
mov
or
add
lds
inc
ins
jnp
pop
jne
and
push
stos
jne
add
cmp
inc
bound
xor
ins
mov
xchg
xchg
jo
cwde
jb
mov
ins
jne
sbb
add
xchg
out
popa
mov
ret
cdq
mov
sub
mov
shl
inc
sub
sub
sbb
or
loop
and
enter
fisttp
in
fadd
pop
call
sbb
xor
inc
fld
scas
jbe
inc
mov
push
jmp
xor
add
cs
pushf
cmp
inc
mov
push
int3
push
push
jbe
add
cmps
push
mov
xlat
jnp
shr
xor
cwde
lahf
sti
dec
mov
stos
mov
clc
outs
inc
nop
mov
pop
fs
mov
jle
scas
jg
fistp
adc
dec
int
fnsave
ret
mov
rcr
movaps
cmp
mov
mov
mov
iret
gs
mov
jb
mov
xor
jae
push
fidiv
and
sbb
outs
scas
jnp
nop
(bad)
int
and
pop
sbb
push
xchg
xchg
fdivrp
xchg
cmp
pop
add
jecxz
int
iret
inc
call
jno
loope
mov
or
repnz
std
inc
fwait
outs
shl
ins
sbb
mov
dec
pop
(bad)
jp
nop
xchg
or
aas
push
mov
mov
mov
test
mov
or
dec
cli
fidiv
mov
(bad)
cmp
(bad)
xchg
push
in
mov
loopne
push
adc
inc
arpl
ficomp
cmps
add
cmc
sbb
int
inc
stc
cli
mov
inc
sar
jg
enter
or
jl
sbb
pop
inc
das
hlt
popa
mov
sbb
jne
cmp
stos
xor
std
addr16
lods
hlt
mov
and
repz
mov
test
rcl
imul
call
xor
xchg
stos
mov
fstp
sar
sbb
cmp
pusha
mov
scas
sub
sbb
mov
mov
jmp
(bad)
dec
xor
mov
add
push
fistp
mov
xor
cmp
outs
cmp
adc
into
hlt
xor
(bad)
sub
out
jnp
mov
(bad)
in
mov
int3
xchg
mov
lea
or
or
jp
xchg
gs
pop
outs
in
cmps
push
push
(bad)
(bad)
dec
or
jmp
sub
or
enter
cli
mov
dec
cmp
bound
fsubr
jbe
sbb
je
jne
xor
scas
pop
ss
lock
and
xor
jne
lods
xchg
pop
adc
xor
add
mov
push
xor
ficom
sar
stos
movs
jmp
retf
push
jbe
fstp
lahf
ds
jne
call
mov
dec
(bad)
mov
dec
lahf
xor
pop
jne
(bad)
popa
ss
xchg
adc
not
sbb
cmp
sbb
pop
shl
fnsave
(bad)
lds
xchg
sti
xchg
dec
fcmovbe
loop
mov
out
test
ret
fcomp
nop
in
ss
jg
in
scas
jecxz
repnz
es
das
xchg
mov
scas
push
pop
cdq
(bad)
and
fcom
retf
push
sub
loope
or
push
repnz
pop
or
ret
out
pushf
call
loope
cdq
pop
in
out
mov
ins
imul
ret
enter
loope
xchg
out
(bad)
jl
fnsave
xor
xor
xchg
push
cli
dec
cmps
das
retf
pop
aam
idiv
jo
mov
lea
lds
loope
push
xchg
dec
gs
add
(bad)
push
add
neg
pop
stos
stc
add
std
or
pop
out
icebp
mov
ja
outs
jno
sbb
cs
aas
shr
or
fiadd
loopne
mov
push
cmp
jmp
das
(bad)
popa
or
shr
pusha
xchg
cmp
test
jg
jmp
aas
out
pop
stc
(bad)
cld
imul
cdq
pop
jg
aam
repz
in
stos
jmp
leave
adc
rcr
xchg
scas
icebp
and
xor
add
mov
and
cld
inc
adc
popf
or
(bad)
jnp
push
idiv
ror
inc
movs
and
vmovdqu
scas
jbe
sub
xor
pop
or
inc
repnz
into
inc
cdq
(bad)
pusha
(bad)
hlt
mov
sub
jae
jb
neg
pushf
das
iret
bound
jbe
adc
enter
imul
outs
adc
pop
sbb
sub
add
loop
cli
xchg
and
(bad)
jo
push
ins
mov
mov
pop
nop
cmp
out
pop
out
cmps
xchg
cmp
(bad)
fistp
frstor
add
or
cmp
mul
pop
or
sbb
std
test
daa
addr16
mov
cdq
outs
icebp
dec
sti
test
pop
adc
push
icebp
imul
outs
inc
adc
scas
ret
call
or
int
mov
push
pop
nop
jmp
xchg
icebp
sar
or
and
das
inc
mov
mov
hlt
shl
nop
mov
mul
jecxz
or
adc
enter
aas
rcr
xchg
pop
mov
in
gs
lahf
outs
dec
mov
clc
adc
in
dec
adc
pop
sbb
mov
or
mov
shr
push
mov
(bad)
mov
and
push
js
repz
push
mov
sub
std
xor
pop
test
sub
add
bnd
movs
pushf
mov
call
pop
add
add
add
add
add
add
add
cmp
jmp
add
xchg
add
add
add
add
add
add
cmps
xchg
add
add
add
add
add
js
add
add
add
lea
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
inc
add
add
add
add
add
add
add
add
jle
add
add
add
add
jmp
add
sti
stos
add
mov
jb
call
out
add
add
push
add
fiadd
add
or
lahf
lods
add
add
cmp
adc
add
jno
add
pusha
adc
add
add
inc
add
add
add
add
push
cli
add
add
add
ret
dec
div
add
rol
fcmovnbe
add
add
add
dec
imul
fstp
add
add
mov
add
add
add
add
add
(bad)
in
add
add
add
loope
add
test
add
add
add
add
add
lds
add
add
add
call
add
add
add
add
mov
add
add
mov
add
add
mov
add
add
add
jl
jle
add
pop
add
add
(bad)
add
add
xor
add
add
add
add
add
add
add
add
add
add
xor
add
add
add
mov
add
xchg
add
add
add
add
add
add
add
or
add
add
add
add
inc
add
add
ins
add
add
add
add
add
add
add
pop
pop
add
add
add
add
add
add
add
add
add
add
add
test
push
add
add
add
cmc
add
inc
add
add
add
push
add
add
add
add
add
add
xchg
push
add
add
fiadd
add
add
add
repnz
add
add
add
add
add
pop
add
add
add
aaa
ins
mov
retf
dec
jb
mov
out
jl
imul
sub
cli
(bad)
pop
or
sbb
cmps
add
jg
sub
loop
jl
cld
es
mov
dec
sub
fld
or
aas
ss
add
jl
shr
push
push
nop
xor
pop
in
xor
cmp
xchg
mov
adc
dec
push
popf
int
jae
mov
lea
sbb
fsubp
scas
cmp
jnp
cmps
or
jp
js
inc
adc
sahf
dec
imul
add
push
mov
inc
loope
inc
mov
xlat
jge
call
loope
jg
mov
cmp
jo
ins
fist
add
arpl
cmp
sbb
aas
loop
sbb
adc
out
(bad)
call
cs
pop
dec
and
sub
jns
(bad)
xchg
pusha
xor
lahf
test
mov
jmp
cmp
cmp
pusha
dec
pusha
push
leave
inc
je
fs
test
mov
fadd
xor
in
out
push
int3
fild
pop
je
mov
nop
mov
(bad)
aam
cwde
mov
add
iret
xlat
jp
adc
cmp
popa
adc
jle
mov
xchg
mov
jo
mov
sub
inc
mov
ds
pusha
cmc
xor
fsub
(bad)
scas
pop
sub
or
dec
or
jnp
stos
xor
imul
dec
mov
setp
hlt
and
out
jge
stos
push
out
cmps
or
cmp
mov
pop
adc
dec
call
push
sar
or
push
or
inc
out
cmp
enter
(bad)
in
add
push
push
test
fucomip
jp
mov
inc
pop
aaa
mov
or
daa
(bad)
mov
scas
or
jp
loop
jmp
cmps
add
arpl
dec
or
aaa
push
xor
mov
cmp
and
(bad)
retf
mov
loopne
dec
arpl
mov
adc
inc
and
inc
je
outs
stc
cwde
pop
pop
or
xor
adc
pop
mov
enter
inc
xor
xor
in
mov
xchg
inc
pop
push
push
aad
jge
inc
push
mov
shr
(bad)
or
mov
inc
dec
lock
sbb
std
jb
pop
and
out
adc
or
lods
pushf
jae
repnz
fisttp
xor
mov
xchg
clc
mov
mov
fs
ins
iret
mov
sbb
rol
mov
cmp
fsubr
addr16
and
inc
outs
rcr
xor
iret
leave
jmp
mov
lods
jp
pop
lods
enter
repnz
mov
xchg
mov
aam
pop
(bad)
scas
pop
mov
mov
pop
sbb
aas
push
pop
pop
stos
ins
and
cwde
dec
and
sbb
jge
push
inc
ret
movs
cdq
sbb
arpl
mov
fcmovu
imul
or
ret
adc
fstp
not
jg
dec
or
in
xchg
shl
push
mov
clc
dec
pop
dec
xor
push
or
push
(bad)
gs
pop
push
cmp
mov
sub
fbstp
cld
inc
adc
push
xor
push
adc
xchg
pop
test
arpl
xchg
mov
sbb
mov
xchg
ds
(bad)
sub
jl
fsubr
neg
js
adc
sahf
lods
inc
sub
mov
sub
sub
pop
shl
fcmovnbe
jmp
imul
outs
mov
xlat
stc
jbe
push
pop
imul
fs
xchg
mov
push
or
loopne
hlt
bound
sub
or
adc
das
push
adc
ss
mov
hlt
mov
dec
cmp
sbb
sbb
jle
pop
mov
inc
mov
sahf
mov
inc
mov
pop
test
xlat
dec
pop
mov
cmps
inc
sti
retf
clc
jp
mov
xchg
sbb
mov
and
jo
push
repnz
sti
sbb
das
cmp
aaa
mov
lods
out
pop
mov
jge
mov
or
int
sbb
cwde
ror
cmc
les
dec
mov
imul
mov
lock
jle
and
fstp
push
mov
lahf
sar
adc
sahf
xchg
iret
(bad)
mov
popf
repz
aad
sub
shl
cmps
es
xchg
rcl
lods
mov
cwde
in
cmps
ret
sbb
outs
push
ret
xor
repnz
jmp
xchg
jl
push
mov
mov
sbb
cwde
iret
adc
cmp
arpl
jmp
pop
int3
dec
cmc
fisttp
jns
jecxz
dec
sbb
mov
lds
std
or
lods
pusha
out
or
mov
das
mov
daa
sbb
mov
popa
cs
adc
int
test
outs
aad
adc
cmp
xor
int3
inc
mov
(bad)
jmp
out
mov
add
jno
test
sbb
sbb
fcom
dec
push
loop
sub
jp
pop
sbb
inc
ss
aam
iret
sub
loopne
fcmovnu
stos
cs
push
movs
jecxz
repnz
or
in
or
jg
and
imul
adc
mov
aam
xor
add
and
retf
cmp
mov
pushf
cmp
dec
add
sbb
aam
test
movs
fild
int
pop
(bad)
fadd
jae
xchg
dec
dec
ds
bound
sub
int3
mov
call
jl
mov
pop
jb
stc
jl
sbb
mov
ficom
push
inc
cmp
stc
mov
mov
mov
mov
xchg
fs
ins
(bad)
pop
sbb
or
cdq
cmc
fcom
stc
push
cli
outs
pop
adc
fstp
(bad)
xchg
mov
(bad)
add
aad
mov
fnsave
in
jmp
hlt
sub
fdivrp
sti
cmps
mov
mov
jnp
jne
(bad)
jl
das
gs
adc
out
jle
inc
mov
sub
mov
icebp
xor
xor
pushf
or
scas
inc
and
std
xchg
ins
ja
push
sahf
mov
pop
xchg
mov
push
cs
loop
movs
push
arpl
daa
jns
add
in
lds
arpl
inc
mov
push
adc
inc
push
and
inc
mov
and
icebp
sbb
mov
lock
pop
iret
sub
(bad)
push
jo
mov
scas
sbb
data16
mov
push
xor
ja
icebp
inc
adc
inc
adc
fwait
cs
pop
mov
ss
cmp
out
add
mov
sti
xor
bound
adc
cmp
les
or
aam
xchg
leave
data16
xor
mov
je
jbe
jl
xor
int3
aam
les
fidivr
mov
loop
push
xor
dec
inc
call
mov
fdivr
fwait
push
xchg
push
cmp
add
cmp
ret
rcr
movs
adc
aaa
dec
sub
sub
jp
ss
xchg
or
mov
mov
(bad)
mov
fucomi
inc
sub
mov
cdq
xchg
je
sbb
popf
imul
repz
(bad)
jb
(bad)
or
mov
lahf
inc
lds
or
add
mov
mov
mov
test
ret
dec
loopne
push
aaa
rdpmc
mov
scas
mov
xchg
jg
std
daa
rcr
mov
sbb
jne
fst
dec
ins
pop
push
(bad)
cdq
mov
push
jbe
call
sbb
mov
sbb
test
aas
int
dec
scas
push
jmp
clc
mov
jbe
pop
fdivp
mul
mov
repz
dec
gs
xor
in
add
jbe
ins
sbb
popa
int3
not
adc
scas
std
sbb
mov
jne
shr
push
cld
mov
jecxz
cmps
mov
(bad)
shl
cdq
mov
fsqrt
(bad)
idiv
push
je
ficom
(bad)
pushf
out
or
and
imul
les
and
lahf
adc
mov
stos
fcomp
dec
mov
sub
(bad)
stos
push
dec
lock
out
mov
dec
mov
out
rcr
sar
xor
leave
adc
jecxz
push
mov
pop
sub
push
jecxz
inc
loope
pusha
mov
jo
mov
sub
out
fistp
test
push
lea
inc
push
sbb
dec
rcr
test
fld
or
lahf
imul
jnp
int
mov
push
aaa
gs
mov
shl
je
ins
pop
pop
dec
adc
cmp
jb
and
lea
and
aaa
or
jle
add
imul
ret
mov
jmp
pusha
mul
cwde
rol
sub
add
jae
add
pop
cmp
or
mov
jmp
shr
leave
in
dec
cmp
mov
imul
cmp
mov
jnp
and
and
sub
jbe
jecxz
push
call
sub
push
mov
pop
add
data16
(bad)
out
add
imul
cmp
ficom
mov
jge
and
push
pop
ins
mov
and
mov
add
out
add
retf
sbb
jp
gs
jle
dec
imul
mov
xchg
add
dec
shr
sbb
in
shr
pop
jns
xchg
sbb
bound
imul
jbe
cmps
pop
jmp
rol
xchg
movs
retf
sbb
jecxz
pop
dec
das
xor
push
jmp
call
cld
lods
mov
clc
and
(bad)
pop
pusha
stos
add
sbb
loop
xchg
das
ret
lahf
fimul
movs
inc
movs
iret
add
ins
add
add
adc
mov
add
dec
icebp
cmp
and
(bad)
or
fwait
and
scas
sub
loope
sahf
xchg
cmc
sub
push
jg
pusha
sbb
adc
out
movs
daa
mov
out
push
cwde
dec
dec
adc
(bad)
in
lods
adc
icebp
push
das
mov
loop
sub
mov
adc
div
adc
add
add
add
lea
add
add
mov
loopne
add
add
add
pop
add
popf
add
add
add
add
in
add
or
add
mov
push
add
mov
add
add
add
jl
add
test
jl
add
push
add
jl
add
add
adc
add
add
add
add
add
add
add
jmp
add
daa
add
add
add
add
add
add
add
and
add
push
add
add
or
add
add
add
add
add
add
add
in
sub
sar
xchg
mov
test
inc
aad
int
inc
mov
bound
mov
push
dec
sbb
and
xor
loope
ja
aaa
fldcw
movs
push
repz
out
ja
pop
movs
sub
repz
mov
xor
jmp
mov
cmp
dec
push
(bad)
jmp
mov
fbstp
pop
out
or
xchg
xlat
arpl
mov
or
or
aas
and
xchg
rol
cmp
and
scas
dec
imul
pop
mov
push
push
pop
dec
ret
ins
cld
or
int
pop
repz
mov
ret
jnp
adc
and
pop
pop
jbe
lea
xlat
cmp
rcl
loop
fcmovnbe
mov
adc
jb
mov
(bad)
mov
scas
(bad)
pop
pop
mov
and
inc
or
and
pop
pop
sbb
and
dec
aas
stos
xchg
ret
scas
jg
xor
push
xor
lahf
pop
aam
not
(bad)
pushf
rcl
inc
push
dec
jae
in
push
cmp
cmp
ins
in
arpl
loope
mov
sbb
mov
xchg
aad
repnz
cli
popf
adc
cwde
xchg
jg
inc
dec
je
rcr
mov
mov
cli
mov
push
stc
out
icebp
dec
lds
inc
or
imul
add
xor
mov
hlt
lock
and
data16
xlat
ret
cmp
pop
(bad)
dec
xchg
add
cs
bound
iret
hlt
repz
test
fisttp
(bad)
mov
pop
test
movs
stos
cmp
(bad)
and
cmp
mov
loop
dec
imul
jbe
sub
cmps
aam
das
inc
dec
sbb
cmp
mov
lock
retf
into
xchg
(bad)
mov
pop
or
cmp
shl
(bad)
jp
cmps
pushw
push
aam
lods
repnz
mov
stos
aad
mov
fs
and
mov
mov
out
add
push
cmp
or
retf
sbb
inc
aaa
mov
lods
mov
adc
push
jmp
xor
test
cmp
cmps
dec
hlt
iret
jo
or
call
fimul
xchg
and
mov
sub
xor
(bad)
ja
or
addr16
daa
pop
mov
mov
or
adc
iret
adc
aam
add
dec
lods
test
ror
xchg
nop
outs
and
and
mov
and
jae
call
xchg
jle
fcom
outs
mov
or
lock
rol
sbb
or
dec
xor
jmp
and
add
sub
jno
lea
(bad)
sysret
rcr
sbb
sbb
int
stos
in
sar
loopne
mov
lahf
lock
push
fst
sub
test
pop
test
pop
retf
retf
adc
mov
shr
arpl
lahf
movs
outs
loop
mov
in
ret
popf
mov
xor
xchg
(bad)
sbb
jne
outs
neg
out
div
cmovo
mov
pushf
fldenv
syscall
or
inc
add
mov
rol
jbe
jg
mov
repz
loope
mov
cmp
inc
dec
lods
popf
pop
add
arpl
inc
call
inc
add
mov
xchg
inc
xor
outs
xchg
add
sub
jne
jmp
cmp
and
add
adc
add
stos
(bad)
outs
ret
jl
mov
jb
leave
adc
push
add
mov
adc
(bad)
rcr
lods
xchg
aaa
popf
or
cmp
test
ss
mov
pop
mov
stos
dec
stos
pop
mov
pop
call
lds
fdiv
add
mov
or
mov
add
pushf
add
(bad)
mov
call
jb
jmp
and
retf
es
shl
(bad)
pop
push
std
test
out
(bad)
cmp
cmp
out
jb
fld
cmp
fdivr
dec
xchg
and
mov
inc
push
mov
jmp
fidiv
sbb
dec
sbb
(bad)
in
push
sub
and
xor
clc
stos
cmp
ins
push
call
dec
mov
pop
sub
push
xchg
out
test
mov
dec
in
iret
push
or
popa
push
jl
mov
mov
aas
ds
loop
dec
xor
mov
fwait
xchg
lea
and
scas
in
xchg
pop
popf
sub
adc
adc
jne
adc
stos
fst
repnz
sub
adc
sbb
inc
push
enter
jmp
xchg
ror
cmp
jb
push
jge
lods
iret
mov
lea
mov
movs
lahf
out
dec
sbb
loopne
fwait
test
push
inc
test
lea
xor
xor
out
(bad)
sub
rcl
movs
mov
fwait
mov
pop
add
and
lods
xor
gs
cmp
lods
or
neg
sbb
inc
sub
(bad)
fnstenv
lea
pushf
in
test
gs
inc
call
cs
js
adc
loopne
push
cmps
neg
add
pop
stos
push
sub
je
retf
lea
or
pop
mov
mov
test
scas
jmp
out
scas
loopne
mov
lds
push
mov
sub
je
in
and
sub
add
das
loopne
add
mov
push
pusha
sbb
cmp
and
stc
push
push
push
pop
(bad)
push
inc
xchg
jp
pop
or
pop
jg
(bad)
add
int
(bad)
popf
push
mov
ja
leave
push
mov
xchg
sub
dec
imul
out
outs
pop
xor
push
loop
jmp
lods
pop
stos
push
or
bound
or
cwde
rcr
call
iret
int3
inc
dec
and
pop
inc
test
loop
(bad)
push
movs
neg
push
ret
jnp
xor
jno
(bad)
and
dec
mov
or
push
gs
(bad)
aam
pushf
push
stos
mov
xor
mov
or
pop
dec
in
(bad)
pop
cmpxchg
sub
pop
into
jg
mov
sub
adc
fxch
std
add
icebp
aas
mov
test
ret
adc
(bad)
jmp
cmp
dec
sub
jp
sub
pop
add
mul
pop
test
or
cmp
xchg
sahf
jb
jg
cmps
push
loop
pop
adc
loope
fpatan
xchg
call
test
add
movs
enter
add
cmp
push
cwde
sahf
call
rol
xor
loop
mov
dec
stos
jmp
add
fiadd
xor
gs
test
or
mov
inc
mov
jge
test
add
sti
test
and
gs
jne
xchg
retf
pushf
pusha
sub
mov
add
shl
outs
jecxz
pop
mov
mov
(bad)
adc
js
(bad)
jg
or
dec
jmp
movs
mov
jg
or
ins
loopne
xchg
pop
test
enter
pushf
adc
gs
mov
pxor
sbb
shl
sbb
cmc
xchg
data16
mov
popw
out
out
outs
fisubr
xor
(bad)
(bad)
pop
xchg
test
jle
out
mov
jl
scas
or
fsubr
mov
add
shl
mov
pushf
scas
push
jo
ins
mov
sub
push
cmp
stos
shl
mov
retf
outs
adc
cmp
mov
cwde
scas
mov
jmp
xchg
push
mov
push
xchg
in
ins
xor
nop
dec
inc
mov
jo
xor
int3
call
mov
push
(bad)
add
xor
lea
sub
cmp
std
add
ins
aad
fs
push
or
push
jo
and
test
xchg
jle
jb
and
dec
push
push
test
xor
mov
mov
and
or
aas
or
(bad)
repnz
jnp
mov
and
jge
in
call
rcl
scas
mov
xor
pop
loope
and
mov
push
fnsave
jecxz
pop
shl
xchg
xchg
push
fs
mov
mov
pop
jle
mov
add
gs
sahf
jge
and
sub
adc
mov
push
cpuid
dec
add
fiadd
ret
stos
push
into
enter
push
shr
test
sub
les
sar
cdq
jle
(bad)
jp
std
imul
test
inc
mov
int
fst
fdivr
loopne
(bad)
lods
popf
dec
sbb
jo
test
jecxz
cmp
(bad)
sti
mov
sti
ficom
xchg
and
cmp
(bad)
pop
or
dec
jl
ja
mov
jo
int
adc
sbb
gs
fstp
lods
outs
(bad)
loopne
std
mov
dec
jp
push
fdivr
dec
in
dec
stc
not
leave
jp
pop
sbb
test
xlat
sbb
add
pop
lea
adc
popa
xor
or
cmp
out
js
jecxz
sbb
jmp
sub
data16
arpl
lods
pop
or
inc
dec
xchg
sbb
(bad)
ror
push
cmp
aaa
mov
out
fst
scas
stc
sub
cld
outs
pop
in
lods
(bad)
dec
inc
and
cmp
sub
xchg
std
fdivr
and
dec
add
retf
mov
arpl
fwait
mov
mov
fidiv
adc
out
mov
cmps
or
outs
xor
stos
push
loope
out
dec
adc
ja
cmp
adc
pop
scas
adc
outs
sub
sbb
les
sbb
pop
cmp
in
sub
jp
push
jecxz
leave
mov
push
jl
cmc
cmps
outs
jmp
test
lock
xchg
xchg
xchg
push
adc
dec
movs
test
xor
(bad)
mov
out
xlat
mov
pop
adc
pop
push
loope
je
push
jmp
push
add
add
add
add
mov
add
add
add
add
add
add
fild
add
add
daa
sbb
mov
dec
jle
add
add
add
add
add
add
add
add
add
dec
jnp
add
add
add
add
stc
add
sub
add
add
add
loop
add
add
add
add
add
add
add
xlat
add
jmp
add
bound
enter
call
pop
int
stc
cld
bound
popf
icebp
std
in
ins
popa
clc
or
sbb
lods
or
fldenv
cmp
fistp
inc
cli
add
adc
movs
aad
lods
sahf
popf
pop
jmp
imul
scas
mov
add
mov
ror
cli
fst
cmp
clc
jl
or
xchg
dec
push
xchg
daa
pop
(bad)
addr16
cmp
inc
and
std
xchg
outs
pusha
sti
cmps
in
mov
inc
sti
stc
jno
imul
nop
jecxz
imul
outs
and
or
ss
or
out
push
pop
xor
and
sub
xchg
popf
jnp
lods
ss
nop
sbb
aam
into
push
add
pushf
ficomp
cld
sub
idiv
add
cmc
ret
jge
sub
lock
and
push
(bad)
cmovne
daa
jnp
dec
inc
cmps
ret
cmp
inc
sahf
fcom
mov
out
(bad)
push
or
sub
cwde
cdq
mov
nop
rcr
cdq
pop
push
pop
aas
imul
sti
jle
rcl
aas
xlat
inc
iret
pop
push
mov
mov
adc
hlt
loop
pop
rol
dec
xchg
jnp
jl
xchg
loop
(bad)
imul
movs
pop
or
sbb
in
dec
popf
out
cmp
jp
aad
mov
cmp
or
addr16
fxch
aas
mov
retf
pop
push
loop
xor
data16
and
mov
pop
repz
xor
or
or
(bad)
icebp
scas
rol
and
(bad)
fidivr
sbb
inc
push
loop
addr16
das
cmp
and
mov
sub
pop
adc
or
jb
movs
stc
retf
int3
push
push
adc
test
mov
mov
xchg
mov
ror
popf
mov
cmp
cmp
pop
pop
or
(bad)
fnsave
push
mov
loopne
mov
(bad)
movs
and
sub
and
inc
and
push
in
jo
cmp
hlt
sub
retf
dec
leave
lds
or
(bad)
aas
leave
lock
dec
(bad)
push
inc
and
daa
mov
test
cmp
idiv
jne
sbb
out
and
push
push
sahf
ret
sub
lods
cwde
jmp
aad
(bad)
or
rcr
pop
fwait
mov
mov
jae
sub
in
jmp
pusha
dec
stos
mov
adc
sub
inc
cmc
dec
mov
mov
cmc
push
mov
xor
imul
test
das
gs
adc
push
dec
jb
daa
push
pop
mov
jno
(bad)
out
stos
xor
sub
fs
push
fsubr
pop
and
in
xor
or
mov
daa
mov
rcl
imul
nop
(bad)
or
xor
movs
jo
cmp
push
clc
scas
xor
xchg
push
repz
inc
in
hlt
sub
mov
mov
ins
shl
pop
ja
lahf
rol
ja
mov
inc
inc
repnz
out
or
retf
outs
inc
imul
add
fsubr
xor
aam
mov
sub
movs
pop
xor
cmp
das
inc
je
ficomp
sahf
clc
movs
lock
and
pop
and
test
inc
adc
imul
outs
std
push
inc
mov
push
sbb
mov
rcl
test
dec
arpl
fild
push
lea
(bad)
xchg
mov
rcr
aaa
in
adc
arpl
mov
shl
ror
sub
mov
and
aaa
fstp
pop
inc
rcl
repz
mov
add
jnp
popf
mov
fstp
std
push
fstp
dec
add
dec
mov
push
push
imul
xchg
ror
fistp
dec
push
cmp
repnz
in
rol
stos
lods
jns
and
add
aaa
cmp
stc
add
mov
xor
addr16
sbb
xchg
cwde
xchg
rol
cmps
pop
enter
stos
imul
and
xor
pop
cmp
icebp
mov
or
jae
sahf
nop
addr16
lods
ds
jbe
cmp
sub
aaa
dec
cmp
pusha
sub
test
dec
es
mov
lahf
push
in
stos
pop
loopne
mov
(bad)
lock
jmp
push
out
shl
jb
mov
inc
(bad)
sub
int3
loop
aas
mov
sub
or
fisubr
inc
lea
aam
inc
cmps
aad
mov
adc
xor
push
or
out
mov
dec
pop
mov
sbb
push
mov
repnz
rol
adc
pop
jo
xor
dec
shl
loopne
pop
test
cli
add
bound
rcl
pop
dec
mov
sbb
(bad)
(bad)
rol
shr
ja
mov
ret
aam
xor
in
mov
stc
int3
mov
pusha
push
add
sub
cmp
jmp
jno
xor
stos
xor
pop
call
lock
push
add
out
add
imul
mov
mov
dec
shl
scas
sub
call
inc
push
adc
inc
cmps
dec
icebp
add
in
dec
dec
dec
sbb
inc
dec
test
add
jl
movs
stos
cmp
dec
clc
jl
push
(bad)
fnsave
lock
xor
push
cmc
dec
iret
mov
sti
out
sahf
xchg
mov
les
or
std
xor
dec
or
daa
outs
cs
icebp
mov
sbb
xor
adc
test
add
or
xor
adc
xor
(bad)
xchg
xchg
rol
adc
sbb
je
xlat
aad
xor
cld
cmps
sbb
xchg
aad
test
push
push
and
add
add
call
(bad)
xlat
mov
aam
fild
jnp
adc
mov
aam
push
daa
jp
and
out
pop
clc
push
and
(bad)
iret
push
sub
adc
adc
movs
sbb
mov
retf
pop
stos
sbb
jge
ror
dec
shld
(bad)
mov
push
enter
int3
rcl
jg
and
sbb
ins
xor
cmp
sbb
outs
or
push
xor
sbb
inc
add
retf
xchg
adc
ds
out
in
das
mov
pminub
add
xchg
fist
push
je
xchg
imul
push
(bad)
sbb
mov
xor
ss
cmp
setl
daa
pop
fst
ret
xor
xchg
mov
xlat
cmc
push
push
or
mov
sub
imul
pop
pusha
icebp
rcr
lods
mov
imul
ss
jp
ds
mov
fucom
out
jb
dec
push
xlat
test
lock
shr
push
test
push
and
mov
pop
popf
fiadd
adc
or
mov
fs
mov
mov
mov
push
pusha
and
jmp
or
sahf
aaa
jmp
cmp
mov
ss
cmps
jmp
pusha
adc
mov
adc
test
xchg
jp
mov
mov
ds
xor
push
fld
ret
fisttp
jbe
rcl
pop
push
(bad)
sbb
adc
popa
mov
subps
les
xchg
(bad)
mov
xchg
in
cmps
mov
js
inc
jae
sub
pusha
test
jle
movs
in
and
gs
jmp
mov
mov
(bad)
stc
mov
in
and
or
or
cmc
inc
sub
and
(bad)
sbb
lea
out
enter
aad
dec
cwde
shr
sub
push
dec
or
xlat
mov
cmc
or
cmp
pushf
movs
ja
and
mov
jnp
(bad)
push
cwde
pusha
cli
mov
f2xm1
retf
sbb
call
jl
push
sbb
sub
mov
test
adc
aad
rol
ret
sbb
aad
mov
int
pop
sbb
or
shl
movs
mov
sbb
cmps
(bad)
xor
push
dec
hlt
ds
mov
mov
fwait
(bad)
(bad)
clc
(bad)
inc
or
das
xor
mov
sbb
push
das
lods
xchg
sahf
mov
in
cmps
mov
in
fisubr
(bad)
movs
cmp
inc
aad
add
xor
push
daa
xor
jp
dec
sbb
xlat
jbe
pop
sub
add
enter
cmp
nop
mov
or
dec
popa
jns
push
sbb
retf
(bad)
shl
xor
js
mov
push
clc
in
xchg
inc
mov
rcl
sub
imul
bound
adc
es
lods
push
test
sub
pop
or
dec
out
data16
sar
int
mov
jecxz
dec
and
sar
sub
stos
in
sti
ja
(bad)
mov
shl
or
aad
sti
gs
push
retf
or
xor
dec
mov
jbe
pop
in
jmp
push
lods
xchg
rol
xor
movs
pusha
call
cmc
icebp
jne
mov
ds
mov
popa
daa
lods
shl
and
out
call
inc
inc
jecxz
sub
mov
inc
in
cmps
std
pop
scas
idiv
xchg
ja
into
add
lea
add
cmp
inc
bsr
(bad)
int3
mov
or
pop
in
mov
mov
cs
enter
xchg
add
add
ret
dec
cmp
or
fsubr
mov
pop
in
jl
test
mov
xor
fs
mov
aam
aaa
inc
jp
lds
std
sar
mov
sti
data16
jae
and
call
push
jb
sti
push
aas
cmp
xor
xor
mov
stos
and
pop
adc
add
ret
fiadd
dec
dec
xor
cmps
fstp
push
fnsave
ss
jne
push
fcmovbe
popf
jp
add
sub
shr
loope
sub
or
jge
and
cmp
jl
retf
in
ret
push
cmp
call
dec
stc
xchg
cmps
mov
sub
aam
pushf
cmp
popf
inc
(bad)
fdiv
inc
jg
mov
ins
(bad)
pusha
fidiv
scas
std
test
xchg
cmp
ror
jle
dec
in
dec
in
jnp
cmp
push
repz
mov
push
imul
(bad)
pop
lea
mov
add
add
inc
add
add
popf
add
push
add
add
add
xor
add
jmp
mov
mov
add
add
add
add
movs
push
or
add
add
add
add
add
add
ret
add
add
add
add
jae
add
add
add
add
add
add
add
inc
add
add
dec
add
add
add
add
push
sub
jo
test
dec
retf
xchg
test
ins
ss
(bad)
stos
dec
xor
fadd
sbb
sbb
int
and
add
out
lods
ins
mov
lods
pusha
out
sti
adc
mov
sbb
mov
popf
jmp
sub
mov
and
mov
sub
pop
imul
dec
test
ins
and
pushf
(bad)
and
cdq
mov
shl
pop
xchg
dec
repz
or
xchg
jg
add
out
jge
hlt
or
scas
pushf
pop
push
es
or
in
lahf
push
sbb
xor
sti
push
outs
dec
retf
enter
sbb
fisub
mov
dec
int
xchg
in
lea
out
outs
push
scas
lahf
xchg
addr16
pop
daa
or
push
pushf
xor
call
test
mov
jmp
out
outs
push
inc
jns
sbb
movzx
loop
cmp
sub
add
inc
in
loop
mov
es
fisubr
adc
shr
add
cmc
repnz
or
sub
out
pop
mov
shl
das
daa
mov
rcl
xor
retf
(bad)
jmp
aam
(bad)
shl
mul
xchg
sbb
pop
xchg
and
rol
or
pusha
or
sti
clc
mov
jl
pop
cmp
ins
sub
ja
jmp
ficom
jmp
bound
cmp
(bad)
adc
inc
sub
cs
sbb
jecxz
lds
(bad)
stc
jbe
push
push
bnd
in
rcl
mov
mov
xchg
scas
cmp
jmp
add
in
sar
inc
inc
pop
lea
add
shl
mov
imul
mov
mov
fidivr
xor
mov
xor
xor
clc
sub
sub
das
and
fsubr
dec
pusha
jns
hlt
dec
jno
or
sar
jg
xchg
sbb
mov
jmp
(bad)
mov
mov
out
or
cdq
ins
das
(bad)
adc
dec
pop
push
pusha
pop
pinsrw
dec
retf
adc
inc
ja
das
and
pop
test
cmps
and
adc
dec
rcl
pop
clc
and
dec
imul
(bad)
mov
inc
sub
loope
adc
add
(bad)
jg
dec
adc
les
mov
pusha
pop
cmp
fadd
sahf
jmp
data16
jne
hlt
or
out
fmul
fisubr
xchg
pop
jp
mov
shl
test
xchg
cmp
sbb
out
shl
aad
mov
or
pusha
popf
xor
push
call
pop
popa
xchg
push
cmc
das
bound
sbb
mov
add
push
fstp
mov
fild
jg
js
ret
fld
test
inc
add
cmp
sub
mov
sar
dec
int
or
cmc
add
test
and
lds
sub
adc
stos
popf
scas
in
fs
ins
in
nop
adc
and
clc
loopne
dec
iret
(bad)
out
loopne
adc
fimul
adc
js
(bad)
ins
mov
push
push
mov
hlt
push
jmp
inc
mov
scas
mov
push
xchg
mov
mov
add
aam
outs
arpl
xchg
cwde
adc
daa
dec
adc
out
dec
mov
ins
ja
ins
retf
cs
push
popf
push
cmp
addr16
daa
fild
jp
ret
aaa
fst
push
sub
push
jmp
into
clc
mov
fld
xchg
add
and
pop
sub
into
jmp
mov
mov
jmp
sub
mov
cmp
xchg
add
cmp
sbb
xor
lock
icebp
mov
(bad)
or
xor
(bad)
jmp
xor
ja
jb
cmc
div
into
rcr
xor
jle
xchg
xchg
inc
fistp
nop
in
(bad)
cmps
lock
mov
mov
inc
mov
sub
xchg
leave
or
jae
int3
xor
and
in
movs
xchg
add
sbb
sub
xor
ins
push
dec
sub
cmp
or
ins
fld
out
push
cmps
in
pop
jmp
ret
call
xor
fild
xor
ins
imul
xchg
adc
add
mov
adc
fcom
lock
mov
pop
jno
(bad)
push
scas
dec
pop
mov
push
and
aad
xchg
add
push
mov
ins
les
adc
push
and
mov
adc
test
jecxz
pop
dec
fimul
add
mov
gs
or
jae
and
mov
push
repz
pusha
inc
adc
jle
mov
popa
jae
adc
int
arpl
xchg
in
pusha
pop
cwde
xchg
leave
sti
mov
add
jmp
aaa
jge
mov
jbe
pushf
loope
fidivr
movs
(bad)
jle
mov
push
inc
or
ror
(bad)
jp
adc
je
push
rcr
jo
sub
cli
sub
loop
adc
sub
rcr
icebp
cmps
cmp
jg
lea
scas
sar
ins
xor
stc
fiadd
add
mov
imul
aaa
(bad)
test
push
out
or
cmc
lea
adc
xor
sbb
rep
and
popa
loopne
ror
daa
mov
push
dec
mov
cwde
pop
adc
push
pop
ret
mov
cmp
mov
das
ds
or
mov
cmp
jae
jo
fldcw
dec
rcl
or
ret
pusha
or
int3
cmp
icebp
out
outs
or
xor
mov
mov
mov
push
mov
mov
xor
xor
(bad)
push
fbstp
xchg
lds
repz
mov
fld
mov
fimul
shl
cmp
pop
lods
cmp
jne
lods
into
push
push
popf
out
sub
inc
adc
xchg
add
or
or
mov
push
add
or
outs
in
outs
pop
mov
popf
mov
or
loope
sub
adc
es
ins
or
fs
adc
dec
mov
popa
stos
and
adc
add
sbb
inc
(bad)
xchg
xor
xlat
pop
stos
ins
movs
push
aaa
hlt
dec
dec
sbb
push
fmul
push
cmp
dec
pop
imul
icebp
retf
xchg
mov
mov
dec
mov
jns
and
cs
inc
pop
mov
jb
test
or
fs
mov
data16
adc
(bad)
sub
test
out
add
xchg
repz
lods
xchg
stos
pop
adc
cmp
dec
add
add
mov
sub
xchg
and
je
push
jp
les
inc
ins
iret
push
outs
ror
les
cli
mov
push
rol
inc
gs
xchg
es
cmp
sbb
js
sub
cmp
mov
popa
sbb
(bad)
cmp
cli
loopne
sbb
adc
mov
std
arpl
dec
sub
xchg
mov
out
das
repnz
int
xchg
movs
rol
(bad)
(bad)
inc
xor
mov
aad
jne
mov
inc
or
fld
fsub
out
mov
push
bound
aaa
lods
mov
jmp
ffreep
shl
(bad)
leave
mul
inc
test
mov
mov
cmps
sub
sub
push
out
out
mov
das
pop
shl
pusha
addr16
push
xor
sub
shl
lock
add
loopne
rol
inc
repnz
dec
push
dec
push
dec
imul
xchg
pop
and
mov
add
(bad)
jmp
adc
xor
pop
sar
xchg
ins
int
push
adc
fs
add
xor
dec
fild
es
lock
push
mov
cwde
hlt
repnz
iret
jge
push
cld
imul
popf
add
sbb
hlt
adc
mov
jmp
mov
les
retf
or
xor
rol
popa
and
cli
mov
mov
add
xchg
and
and
inc
shr
push
aaa
aaa
pop
cmp
push
and
dec
xor
idiv
retf
mov
stc
jno
push
dec
xchg
mov
mov
adc
(bad)
pop
fst
pop
ins
ret
xchg
sbb
(bad)
cs
inc
push
iret
in
inc
add
(bad)
push
mov
cmp
rcl
mov
gs
and
or
outs
xor
(bad)
in
aad
jnp
icebp
mov
fs
mov
cmps
push
icebp
mov
popa
xchg
clc
cwde
push
add
imul
pusha
ins
push
jecxz
(bad)
mov
clc
into
jae
add
int
sub
mov
cmp
(bad)
xchg
ret
vdivss
mov
shl
mov
mov
push
add
adc
push
inc
jge
stos
stos
jecxz
mov
dec
aaa
js
popf
in
fsub
hlt
lahf
adc
popf
ins
inc
repz
jmp
push
mov
xchg
fucomp
mov
inc
mov
lds
xchg
xchg
mov
and
dec
lea
retf
adc
adc
aas
and
pop
mov
push
or
jns
xchg
stos
adc
cmps
or
ds
jl
outs
mov
xchg
(bad)
pushf
imul
ret
push
sub
cli
icebp
or
aad
sbb
mov
push
test
lahf
sbb
lock
mov
mov
cmp
push
cmp
imul
cmp
mov
adc
cmp
fmul
mov
sub
mov
push
sub
ins
and
mov
jge
mov
lods
out
xchg
in
cdq
dec
pop
adc
dec
add
mov
loope
clc
xchg
lods
imul
ret
sub
pop
inc
mov
iret
sbb
lods
out
xor
mov
mov
mov
xchg
(bad)
sub
retf
(bad)
in
jb
push
xor
mov
(bad)
out
push
jno
mov
add
iret
cmp
popf
jg
sub
sbb
xchg
les
sbb
pop
pop
and
xchg
jb
sahf
nop
adc
loop
add
sub
mov
jp
dec
sub
in
mov
sbb
jl
ins
jae
sahf
cmp
clc
inc
sti
mov
jno
jmp
test
inc
add
add
add
add
add
loopne
sub
add
or
add
add
add
add
inc
add
add
scas
add
adc
add
pop
add
add
pop
add
leave
add
add
iret
add
add
add
add
add
add
add
add
repnz
jg
add
add
add
add
add
add
add
add
add
inc
add
popf
add
add
and
int
inc
add
add
adc
add
add
add
add
add
add
add
add
add
mov
add
add
add
add
add
out
add
add
add
add
add
add
add
iret
push
cmp
add
add
add
add
push
add
add
lahf
add
adc
add
shl
bound
fldcw
aam
out
neg
mov
mov
movs
nop
repz
mov
xlat
cmp
ret
sysret
sbb
push
adc
retf
jne
push
int
pusha
mov
xor
jb
xchg
cmp
cli
xchg
gs
or
(bad)
pusha
push
adc
fdiv
fstp
ss
int3
jno
xlat
push
cwde
mov
out
mov
jp
mov
cli
adc
lods
jmp
mov
ret
push
movs
dec
popa
cmp
pusha
das
(bad)
xor
jo
cmp
pop
pop
inc
out
pop
mov
cld
pop
loopne
fmul
mov
cmp
test
nop
jnp
add
es
(bad)
shl
xchg
or
in
sar
lea
push
fsubr
sar
inc
js
aas
(bad)
dec
add
sbb
mov
stos
retf
sbb
pop
inc
test
(bad)
push
add
pminub
mul
nop
rcr
or
out
add
or
cmp
sub
addr16
cli
pushf
ret
arpl
sub
mov
fsubrp
pusha
inc
sbb
fdivr
sub
sbb
dec
xor
repnz
js
in
pop
cmps
pop
call
movs
adc
test
ins
xlat
cdq
jmp
rcl
stc
call
mov
iret
(bad)
cli
cmps
or
popa
mov
in
loope
outs
iret
mov
dec
(bad)
push
retf
mov
loop
sti
dec
std
pop
push
outs
std
jno
idiv
movq
push
inc
push
cmc
repnz
and
mov
mov
in
cmps
icebp
nop
xchg
dec
push
cld
mov
ins
jmp
sub
(bad)
fisub
aas
(bad)
in
cmp
adc
stc
jo
scas
inc
push
dec
xchg
xor
(bad)
pop
mov
in
xchg
mov
out
sbb
ror
arpl
ins
pusha
in
in
test
xlat
add
jb
xchg
push
in
ficomp
or
jg
xchg
and
shl
jae
pop
dec
daa
ror
shl
push
imul
sub
lea
in
clc
dec
shr
mov
loope
push
loopne
push
xchg
xchg
pop
call
and
add
jge
and
pop
jns
das
popf
pushf
fs
sbb
push
jg
adc
mov
pop
jge
lds
sub
popf
aam
inc
or
mov
scas
enter
adc
dec
into
mov
push
adc
add
int
cmp
loop
mov
inc
push
call
pusha
stos
dec
loope
add
aaa
or
jmp
cmc
je
mov
xchg
les
xor
ins
jge
stos
(bad)
lahf
repnz
cdq
out
jno
push
lock
ret
fdivr
and
int
mov
xchg
bound
cmp
aaa
mov
sub
jno
jno
xchg
lods
xchg
mov
in
push
aaa
or
sar
push
fisttp
and
retf
inc
fwait
cmp
popf
or
lea
out
out
and
jae
std
inc
scas
sub
adc
lea
push
mov
clc
adc
pop
(bad)
mov
mov
adc
mov
cmc
add
jb
stos
mov
mov
sbb
or
push
and
dec
sbb
rcl
adc
cmc
ins
push
lahf
inc
mov
shr
not
outs
shl
adc
xor
mov
mov
cmp
ins
inc
xchg
jmp
cli
leave
ror
(bad)
les
cmp
cmps
ins
jl
clc
and
ins
lea
pop
cmps
xchg
leave
mov
out
push
cdq
xor
int3
push
cdq
gs
jo
push
dec
cmp
mov
addr16
mov
push
push
imul
jnp
js
sahf
out
neg
shl
fstp
lods
xor
dec
cmp
xlat
mov
mov
aad
sar
jae
mov
mov
ins
dec
jbe
das
pmaxsw
rcr
pop
into
or
leave
pop
sbb
sub
adc
pushf
dec
inc
push
fld
xchg
sar
repz
lods
aaa
hlt
fs
rcr
jp
adc
daa
cdq
push
shr
adc
pop
dec
dec
cmp
cwde
mov
popf
pop
push
lock
mov
lds
xchg
xor
inc
inc
or
outs
cwde
sbb
ror
setl
mov
add
fiadd
xor
pop
rol
xor
mov
outs
aam
in
call
xor
pusha
jmp
outs
jbe
pop
int
jecxz
jp
std
mov
jnp
inc
inc
jp
jge
iret
and
and
pop
inc
pusha
mov
repz
pop
inc
inc
xlat
scas
pop
sub
sar
mov
pop
dec
adc
ss
out
fld
out
fisubr
add
(bad)
pop
(bad)
popa
ret
jl
movd
add
fsubp
add
mov
lods
stos
lds
adc
and
jbe
dec
jmp
hlt
neg
sbb
js
push
mov
push
inc
ins
daa
mov
scas
mov
pop
mov
popa
mov
jecxz
push
add
addr16
xchg
aad
mov
or
(bad)
push
adc
lea
cmps
leave
and
dec
or
or
pop
or
mov
push
call
ret
aas
pop
(bad)
js
loopne
in
fild
or
repz
test
fcom
pop
test
push
push
mov
js
std
mov
mov
arpl
add
cmps
and
and
xchg
jns
dec
clc
mov
cmp
bt
inc
cmc
aas
repnz
sahf
sub
xchg
(bad)
mov
out
sti
lods
je
adc
cmp
adc
pop
cmps
lods
enter
xchg
pop
pop
push
outs
mov
je
daa
lods
inc
jmp
jmp
in
pop
(bad)
cmp
xchg
add
imul
push
retf
div
shl
pushf
mov
pop
push
or
gs
fisub
mov
(bad)
sysexit
sub
js
les
dec
dec
mov
leave
daa
cmp
mov
cmps
dec
cmps
mov
fcom
add
ja
shr
add
push
cmc
inc
and
bnd
dec
cmp
jp
test
xchg
ret
push
sbb
out
dec
sub
ds
add
out
inc
sbb
scas
pop
pop
pusha
mov
jno
add
push
mov
test
lea
(bad)
cmp
push
mov
outs
repz
sub
int3
sub
dec
repz
jns
gs
cli
xchg
rol
dec
and
popf
or
aad
sub
loop
xchg
lds
mov
movs
aam
repz
inc
xor
mov
aas
add
cs
and
pop
xchg
(bad)
out
test
xor
pop
and
rcl
rcr
movs
mov
xor
inc
movs
xchg
inc
(bad)
stos
adc
std
fsub
js
mov
clc
cmovo
add
jmp
jle
aad
dec
inc
fsub
sub
xor
add
out
je
or
retf
fsubrp
pop
fiadd
mov
add
push
inc
inc
push
adc
movs
pusha
fistp
jp
in
(bad)
pop
and
je
popa
inc
pop
fwait
or
inc
stc
lahf
xor
test
push
lods
push
test
cmc
or
add
add
mov
mov
pop
fcomp
xchg
dec
std
or
cld
and
jecxz
xchg
dec
jne
add
xlat
mov
and
(bad)
jge
(bad)
mov
and
(bad)
cmp
mov
mov
and
ss
dec
test
or
jmp
repz
int
push
in
xlat
fst
pop
outs
sub
and
jg
and
scas
jg
xor
call
jmp
push
sbb
lds
sbb
and
scas
inc
(bad)
stos
mov
ret
mov
into
dec
dec
or
and
pop
mov
push
mov
pop
or
imul
sar
je
stos
adc
pushf
adc
pop
mov
xchg
fiadd
cmp
call
rcl
rep
cmps
or
repz
mov
call
jns
add
xchg
mov
das
or
fcomp
retf
inc
popf
pop
mov
adc
in
cmps
shl
aas
adc
repnz
sbb
(bad)
call
jmp
imul
popa
mov
pop
jmp
cmp
pop
add
or
pop
mov
push
cmp
dec
rcl
clc
sar
xchg
xor
mov
mov
sbb
cs
lds
mov
outs
mov
and
cmps
mov
or
or
xchg
jecxz
shl
(bad)
pop
outs
retf
cmc
call
mov
test
xor
adc
jne
stos
repz
js
iret
pusha
inc
jb
cmp
sub
and
in
and
retf
push
sar
adc
ror
cmp
cmp
fwait
ds
fld
and
push
sbb
dec
cmovns
adc
cmp
jge
push
je
cmp
outs
jmp
pop
les
jl
and
fstp
sub
fs
inc
mov
dec
test
xor
fiadd
sti
jb
ja
movs
xor
mov
mov
adc
out
fistp
and
fstp
add
push
xlat
add
test
fnstcw
mov
sbb
xor
call
lock
repz
rcl
push
and
pmaddwd
mov
ss
dec
idiv
out
arpl
push
or
mov
mov
(bad)
xlat
scas
(bad)
or
outs
out
shl
pop
cmp
jae
dec
shr
sbb
xchg
sahf
push
mov
(bad)
lock
adc
xchg
jmp
xor
adc
dec
cwde
xlat
fcomip
in
test
or
lahf
dec
push
and
pop
inc
or
fstp
xchg
sub
fadd
mov
jnp
and
retf
clc
xor
sbb
ss
addr16
push
nop
mov
mov
lahf
add
or
mov
dec
cld
mov
sbb
xor
inc
inc
stc
ret
mov
inc
sub
xor
ret
push
xor
cmp
sbb
(bad)
dec
push
xor
sub
inc
mov
pop
mov
hlt
mov
add
or
fsub
inc
shl
ret
jge
rcl
sbb
pop
rcr
(bad)
(bad)
into
jp
inc
sar
sbb
inc
std
call
cmps
das
xor
stos
rol
add
scas
add
add
add
add
jg
inc
add
pop
add
add
jmp
mov
add
add
push
add
mov
add
add
add
loopne
add
add
fiadd
add
dec
xor
add
add
add
add
pop
add
xor
add
add
inc
adc
add
and
movs
add
add
inc
add
pop
add
add
inc
add
add
add
mov
mov
mov
add
adc
pop
(bad)
lea
fist
mov
in
xor
mov
daa
cmc
bound
xchg
cdq
shl
inc
das
mov
sub
cwde
(bad)
mov
mov
adc
aam
add
in
xor
arpl
jae
jnp
loop
retf
aas
mov
stc
xchg
jbe
xor
bound
in
mov
sub
leave
pushf
and
push
inc
add
jne
aad
jne
aaa
mov
fstp
outs
mov
mov
pop
inc
leave
cmp
push
sbb
and
xor
dec
pop
pop
push
call
and
pop
pop
in
adc
imul
push
in
pop
sbb
or
sbb
inc
gs
xor
fld
mov
sbb
les
add
out
jno
push
jmp
aaa
mov
jp
aaa
stos
aaa
mov
aaa
loopne
sub
jo
xchg
bndldx
xchg
mov
ds
pop
bnd
lock
sbb
sbb
enter
fldenv
lds
fisttp
mov
mov
push
cmp
ret
arpl
dec
es
cmp
xchg
(bad)
cdq
std
sub
dec
sbb
and
push
fadd
inc
inc
sub
pop
fcom
in
xchg
mov
xor
ss
(bad)
cli
lahf
inc
xchg
dec
mov
neg
inc
in
rol
push
dec
jb
ret
lods
pop
aas
mov
mov
xchg
ds
popf
pop
mov
arpl
xchg
loop
add
mov
push
gs
xor
call
adc
stos
arpl
add
add
ds
xor
or
inc
dec
push
jb
pop
int3
sbb
jge
scas
or
pop
xlat
ins
sti
pop
xchg
fiadd
mov
or
gs
ins
push
pop
and
cmp
sub
jl
xor
shr
fwait
mov
(bad)
xlat
pushf
test
jnp
add
rcl
pop
sbb
jle
fs
ror
sub
pop
int3
adc
sub
jp
xor
daa
ret
inc
in
(bad)
(bad)
sbb
lods
lahf
or
pop
pop
mov
lea
cmp
retf
jns
cmp
mov
jbe
shr
es
neg
imul
or
push
xor
outs
pop
bound
gs
sti
inc
out
mov
sar
sbb
sbb
jnp
dec
push
push
aas
ficomp
fchs
push
repz
mov
mov
mov
jb
stos
mov
test
inc
pop
cmp
inc
push
adc
dec
add
out
loop
aas
dec
rcr
enter
and
hlt
jmp
add
cld
or
popf
es
push
out
mov
push
ins
sbb
dec
cmc
(bad)
mov
inc
xor
in
pop
retf
test
inc
shl
sub
lea
adc
ds
mov
jb
pop
add
xchg
stos
cmp
inc
push
and
retf
push
test
imul
popa
loop
call
outs
xchg
jae
xchg
ret
int3
jno
push
rol
and
xor
add
jno
enter
loope
int
add
aaa
mov
loop
pop
or
adc
xchg
xchg
mov
dec
in
aaa
(bad)
cld
shl
inc
daa
loope
lea
clc
xor
stc
nop
cdq
sub
cli
xor
lods
rcl
test
fs
cs
adc
sub
mov
push
push
inc
dec
lds
ret
jb
iret
inc
jle
sbb
test
adc
jns
dec
sbb
inc
aas
scas
out
pop
in
ja
hlt
mov
stos
fsubr
pop
pop
or
pop
in
add
mov
mov
(bad)
stc
sub
push
das
mov
jecxz
imul
cmps
sub
inc
jb
test
movd
dec
jl
rcr
outs
ins
push
test
int
sahf
hlt
mov
jbe
mov
add
sub
jb
(bad)
jmp
out
jge
shl
adc
inc
sti
cmp
jp
enter
push
addr16
mov
xor
mov
xchg
lahf
loop
xor
xor
enter
push
shl
mov
mov
dec
cmp
mov
data16
inc
ror
xor
mov
cmps
fsubr
test
xor
lahf
inc
call
dec
ret
mov
and
aaa
push
mov
pop
lods
adc
fimul
mov
in
or
fst
adc
out
out
jnp
or
stc
ror
arpl
ret
mov
inc
or
sub
xchg
int3
xor
out
inc
js
inc
popa
mov
inc
add
lds
sub
dec
sub
mov
jae
std
and
jge
xlat
pushf
call
(bad)
repnz
dec
and
sbb
fild
jo
test
aam
aad
ror
mov
add
cmp
xchg
or
daa
out
xor
dec
cmp
mov
call
jecxz
dec
pop
loopne
test
lahf
imul
pop
sub
mov
dec
xchg
loope
movs
shl
or
adc
mov
arpl
repnz
aam
or
pop
cmp
xchg
xor
jae
data16
icebp
mov
nop
in
pcmpeqw
xchg
adc
xchg
inc
sbb
jl
dec
jb
or
and
sub
out
sbb
cmp
fwait
bnd
dec
in
rol
int
cmc
push
popa
fwait
xchg
sbb
(bad)
jns
cmps
fsub
sbb
outs
pop
mov
sub
sub
xor
test
pop
jb
int3
xchg
mov
arpl
or
lahf
enter
retf
jmp
imul
ins
loop
jb
in
mov
mov
scas
movs
adc
sbb
neg
fwait
outs
sbb
mov
cmp
adc
or
retf
or
or
sar
and
rcr
lock
sahf
cmp
jg
rcl
pushf
cmp
jmp
pop
movs
int
mov
mov
outs
mov
in
cmp
fsubr
xchg
leave
loopne
ins
repz
dec
nop
ror
and
pushf
out
adc
call
or
ins
outs
retf
or
jg
cmp
mov
cmp
push
inc
push
outs
inc
mov
xor
and
daa
outs
pop
jg
les
xchg
jmp
ja
shr
test
daa
jns
inc
ja
mov
aad
cmc
sbb
jo
pop
loopne
fwait
dec
movs
ins
or
sti
add
ror
icebp
xchg
bound
outs
cmp
fstp
xor
lods
or
or
mov
sbb
mov
call
push
popa
out
inc
(bad)
int3
pop
jo
jg
dec
lods
sub
ins
xor
pop
test
xor
pop
and
mov
cmp
call
push
stc
movs
pop
movs
hlt
popf
das
fstp
movs
adc
adc
and
cmp
popa
scas
outs
adc
sub
ret
pop
cdq
and
and
xchg
popa
and
movs
mov
out
mov
mov
imul
cmp
or
add
lahf
ret
repnz
pop
lock
sti
daa
in
mov
ror
je
daa
cmps
mov
ins
mov
out
popf
xchg
push
fcmovu
push
clc
jne
sub
add
cs
std
adc
inc
(bad)
dec
or
xchg
in
pop
mov
mov
inc
sbb
out
dec
fwait
inc
pop
add
cld
icebp
add
xor
sub
enter
retf
dec
mov
mov
lods
in
adc
mul
cmp
mov
sub
and
retf
sti
xchg
and
leave
inc
sub
jle
ret
sbb
mov
push
xchg
sub
pop
dec
adc
fimul
fsub
or
enter
xchg
cmp
push
fs
in
test
push
mov
int
sbb
shl
xchg
imul
dec
repnz
push
ss
add
aas
mov
dec
push
lds
cmp
shl
inc
cmp
and
or
inc
loop
cmps
and
imul
jmp
pop
sub
mov
fsubr
and
mov
mov
sahf
jbe
xchg
outs
lock
pop
dec
add
xor
push
lods
add
ins
xchg
xadd
dec
pop
xchg
call
out
jl
sbb
xchg
ins
cwde
mov
mov
in
loope
dec
xchg
add
jg
and
xor
sub
mov
fcomip
int
mov
das
cdq
outs
inc
mov
xchg
mov
dec
mov
and
cmps
ins
cld
movs
popf
jno
imul
jae
push
pop
mov
xor
or
gs
jl
in
mov
fsub
mov
inc
movs
adc
std
push
add
sbb
jmp
data16
mov
int3
mov
in
push
inc
loopne
pop
mov
dec
push
mov
xchg
icebp
adc
inc
adc
dec
ins
fs
psubsb
sbb
push
and
jmp
jns
pop
jo
jnp
frstor
pop
hlt
es
cmc
idiv
aaa
ins
dec
fidiv
jle
dec
pop
cmc
inc
dec
leave
js
out
push
pusha
pushf
mov
jp
xchg
inc
adc
out
mov
push
pop
scas
jbe
(bad)
fbstp
dec
es
inc
adc
lods
and
sar
cmp
int
in
(bad)
add
xor
call
scas
mov
jno
jns
div
adc
fcomp
sub
sub
inc
fwait
fwait
rol
jecxz
int3
mov
mov
sahf
mov
ss
ins
push
es
icebp
out
icebp
lds
mov
jne
and
push
inc
adc
jecxz
sbb
mov
stos
xor
pusha
cmp
dec
in
mov
pop
or
xor
bound
ins
fisub
mov
add
add
in
lds
pop
add
cmp
ja
adc
jnp
jae
jb
imul
sbb
dec
push
mov
jns
push
inc
dec
jl
fistp
pop
mov
fimul
scas
daa
aad
loope
add
bound
adc
repz
jbe
rcl
mov
sbb
add
mov
scas
add
fild
add
add
add
add
add
out
add
psrld
sbb
fs
inc
pop
sub
jne
gs
jle
das
movs
pop
xor
icebp
mov
in
adc
bound
cmp
adc
call
sbb
repnz
jnp
fisttp
sbb
popa
sbb
leave
or
and
add
mov
call
jb
cdq
jmp
push
mov
out
je
cmp
sub
pop
xor
fst
mov
leave
or
fwait
js
mov
movs
retf
lea
adc
scas
sbb
aam
sahf
pop
sub
ret
mov
and
and
sub
aam
cdq
retf
icebp
loop
repz
aas
pop
cs
xor
push
fisub
inc
push
mov
push
in
clc
mov
xchg
fimul
outs
call
clc
clc
(bad)
pushf
push
or
adc
aas
dec
cmps
(bad)
out
dec
in
repz
sub
scas
jg
in
mov
leave
dec
scas
lahf
pushf
mov
xor
pop
push
mov
inc
imul
(bad)
pusha
jo
mov
pop
int
js
pop
push
inc
jbe
repz
cli
das
lahf
fcom
mov
dec
bound
xor
pop
xor
cdq
mov
sbb
out
adc
in
test
or
daa
mov
xor
bswap
popa
mov
and
test
das
dec
call
scas
inc
jmp
xor
lea
out
cmp
bound
jno
es
pushf
xchg
test
fdiv
out
cmc
aad
mov
adc
repnz
fmul
cs
test
mov
jae
stos
fimul
pop
dec
in
outs
aas
pop
dec
mov
jmp
js
pop
cli
shl
out
mov
stos
mov
push
adc
sbb
jno
inc
pop
mov
push
stos
out
xor
inc
sbb
pop
mov
lock
gs
loope
add
loope
xchg
jmp
dec
add
cs
sbb
mov
mov
xor
push
pusha
xor
and
mov
mov
shl
mov
hlt
sub
pusha
push
out
inc
stc
mov
xchg
cs
dec
fdiv
lock
jno
ss
push
push
add
mov
or
nop
cmp
outs
in
fldenv
xlat
ret
and
jnp
lahf
gs
or
jecxz
repnz
cmp
dec
mov
addr16
fwait
adc
pop
xchg
mov
sub
mul
outs
cmp
or
daa
ror
inc
mov
in
cdq
or
or
sbb
test
dec
aaa
adc
jle
push
sub
movs
mov
in
mov
dec
push
call
pop
pop
jae
cmp
push
or
test
(bad)
or
sub
xchg
dec
call
mov
mov
psllq
hlt
ins
pop
je
inc
leave
cwde
popa
xchg
mov
push
sbb
add
in
jo
je
jbe
retf
or
out
inc
ret
repnz
fcmovne
cs
jae
loope
xor
scas
push
fsubr
mov
inc
mov
sbb
test
sub
jnp
xchg
retf
movs
push
into
sub
inc
cs
jp
mov
idiv
jg
rcl
cmp
xor
and
dec
push
fwait
je
push
push
pushf
(bad)
mov
dec
inc
lock
jbe
xor
jp
sub
sar
mov
sbb
lea
jge
std
iret
lods
(bad)
push
js
out
xor
xchg
ds
mov
sub
cdq
je
jmp
or
pop
xchg
jb
popf
int
adc
or
push
and
push
imul
xchg
push
push
fcomip
mov
test
rol
push
jo
cmp
mov
and
or
in
fidiv
ret
ss
lods
or
jle
int3
push
xor
jbe
popf
xchg
sub
adc
jne
ins
out
in
mov
(bad)
fsub
dec
es
(bad)
push
pop
int
xchg
pop
sbb
mov
lea
adc
es
xor
out
pushf
xor
mov
fisttp
jno
inc
push
jb
add
cmc
mov
test
or
ins
mov
leave
pop
jg
or
mov
fcomip
jge
int
xchg
inc
pop
(bad)
es
fs
mov
mov
inc
mov
shl
xchg
adc
push
loopne
ret
mov
in
pop
mov
ret
pop
cld
mov
aad
sti
cmc
mov
push
mov
jmp
mov
sbb
add
pop
pop
pusha
cmp
push
dec
sub
cmp
cwde
jae
sbb
ins
les
aaa
jns
sub
push
push
lahf
xor
mov
mov
jecxz
cmps
inc
pop
popf
pop
xchg
stos
sub
dec
cdq
jb
pusha
xchg
enter
mov
popf
pop
jp
inc
xchg
add
outs
bound
dec
clc
int
xor
jno
inc
push
push
add
or
xor
ins
shr
add
loopne
xor
sbb
(bad)
lds
xchg
aam
mov
and
adc
inc
rol
xor
sbb
push
mov
and
ret
aad
arpl
aam
cmps
into
adc
sar
xchg
adc
pop
mov
shl
and
adc
inc
sub
xchg
test
pop
lods
repnz
jbe
add
inc
dec
(bad)
mov
shl
and
into
mov
aas
inc
pop
pop
mov
jge
mov
xor
div
and
sub
or
mov
mov
or
imul
sub
enter
add
daa
ficom
leave
adc
pop
mov
and
jb
inc
popa
call
aad
mov
cmp
das
jnp
jl
mov
push
mov
(bad)
jns
movzx
cmp
add
daa
inc
push
jne
dec
push
outs
test
jb
and
gs
clc
outs
pop
fwait
nop
mov
adc
mov
std
call
jns
fcomp
cwde
inc
scas
in
inc
add
out
outs
mov
nop
hlt
in
adc
jne
xchg
lods
lea
cdq
push
xchg
scas
pop
sbb
add
call
and
mov
rol
or
push
data16
jge
retf
lods
sub
xchg
rcl
xchg
dec
jo
loopne
fiadd
cmp
in
and
lea
sahf
mov
fnstenv
(bad)
push
jle
mov
shl
or
arpl
jmp
es
cmp
jne
fldcw
push
retf
and
cmp
cmc
(bad)
nop
shr
push
adc
call
rcr
pop
nop
outs
jp
mov
int
sbb
psrlw
in
mov
sub
and
pop
dec
xchg
fisubr
je
jmp
(bad)
cdq
movs
nop
sbb
test
mov
mov
add
pop
or
test
xor
(bad)
sub
xchg
test
adc
sub
out
mov
cmp
fisttp
pusha
add
jo
sahf
xor
adc
xor
jecxz
call
loopne
data16
inc
in
pop
imul
lds
stc
jnp
mov
inc
or
pop
jo
sbb
xor
jmp
jg
cmp
psubsb
aas
data16
arpl
push
adc
(bad)
sub
aaa
mov
mov
sar
inc
and
mov
sub
mov
inc
xchg
inc
xor
in
jmp
and
pusha
ret
pop
aas
adc
fs
pop
mov
sti
loope
pop
inc
sub
mov
cmp
pop
or
inc
hlt
cmp
(bad)
mov
add
sahf
fsubr
add
fldenv
outs
mov
sbb
js
inc
call
jmp
out
ins
loop
mov
jb
(bad)
scas
leave
mov
pop
inc
jbe
cmp
imul
cmp
dec
clc
js
mov
dec
loopne
cmp
inc
mov
out
sbb
and
out
movs
pop
or
xor
cmp
add
jmp
movs
and
cmp
mov
jbe
pop
fist
(bad)
and
(bad)
mov
arpl
hlt
push
movs
movs
xchg
push
cmp
fwait
dec
out
addr16
rcr
aad
loopne
pop
rol
fldenv
add
test
int
and
loope
aaa
xchg
iret
and
jnp
xor
jecxz
inc
lods
out
stos
fsubr
sbb
cli
(bad)
outs
lahf
lods
stc
pop
adc
mov
lds
loopne
ret
jo
adc
cmps
pop
(bad)
adc
dec
iret
mov
fwait
clc
xchg
retf
inc
mov
pop
pop
test
dec
sub
xor
mov
push
scas
mov
mov
mov
mov
cmp
pop
ret
sbb
xor
outs
ds
repz
(bad)
mov
mov
inc
mov
add
sub
sbb
cmps
out
push
ins
jmp
pop
sbb
outs
int
out
mov
(bad)
cwde
cmc
inc
mov
lea
push
fst
ins
mov
adc
out
jbe
dec
leave
push
pop
sbb
mov
stos
retf
adc
xor
cmp
cmc
loope
and
mov
dec
fdiv
(bad)
cmc
div
test
xchg
push
out
jl
cmpps
lahf
jo
add
inc
int
fdivr
jo
outs
sbb
fild
cmp
and
pusha
sar
in
add
enter
push
inc
lods
mov
inc
and
adc
xchg
pop
pusha
shr
xchg
ret
shl
xor
mov
and
xchg
inc
mov
mov
aas
push
movs
add
daa
mov
pushf
jmp
add
dec
xchg
or
dec
ret
fsubr
mov
ret
adc
shl
push
xor
and
mov
repz
in
in
loopne
sbb
loope
std
jmp
test
movs
out
cs
sbb
mov
call
pop
jbe
jmp
mov
mov
das
fcmove
and
add
clc
mov
loop
pushf
lods
mov
stc
push
out
mov
imul
mov
mov
xchg
xor
mov
cs
adc
or
add
das
add
add
add
mov
add
add
add
add
add
add
and
or
add
add
adc
add
arpl
add
inc
add
adc
xchg
add
lods
add
add
add
fsubr
add
add
or
add
add
enter
add
xor
add
add
add
xchg
add
add
add
pop
sahf
add
inc
es
sub
pop
sbb
retf
dec
push
adc
jb
outs
push
outs
adc
int
cwde
shr
retf
in
rol
push
inc
mov
loop
mov
dec
out
jg
arpl
stos
adc
push
mov
xor
out
jmp
adc
nop
outs
mov
add
out
cmp
jge
nop
dec
pop
pop
dec
mov
aaa
addr16
aaa
add
inc
lds
push
loope
(bad)
retf
and
xchg
out
fs
in
fbstp
arpl
xchg
cmp
sbb
fnstcw
mov
stos
inc
xchg
lds
mov
push
enter
xchg
cmc
lock
or
iret
loope
mov
sahf
jbe
push
add
fcomp
inc
cdq
in
add
ss
sub
xchg
inc
mov
ret
push
in
or
lds
out
push
xor
jbe
sub
push
xchg
aam
xor
mov
pushf
cli
scas
jmp
mov
cdq
add
imul
sub
add
and
pop
mov
add
xor
xor
inc
pop
jnp
dec
ret
pop
xlat
mov
cmp
ins
stc
xor
adc
das
xchg
mov
mov
fsubr
xlat
fist
and
push
icebp
icebp
int
cld
(bad)
jo
pusha
out
mov
out
int3
pushf
add
or
int3
iret
in
dec
fpatan
ror
push
and
or
mov
dec
sbb
sbb
dec
das
mov
fst
mov
cmc
and
out
fwait
cmp
cmp
xchg
stc
test
xchg
pop
push
dec
jae
or
cmp
pop
dec
inc
fsubr
lods
loope
(bad)
xor
shl
(bad)
mov
hlt
add
imul
and
or
push
test
mov
push
in
dec
inc
mov
sub
test
mov
mov
or
xchg
fsub
stos
psubd
shl
test
outs
push
(bad)
ficom
jae
pop
cmc
mov
jle
xchg
xchg
stos
cmp
(bad)
shr
dec
test
xor
in
pop
movs
js
out
mov
and
sub
sbb
cmp
icebp
fldenv
mov
add
cmovb
inc
(bad)
inc
sub
out
cmp
stos
jae
add
test
push
sub
rcr
mov
and
inc
xchg
or
neg
cs
xchg
scas
inc
sbb
call
pop
sub
xlat
xor
test
call
movs
xchg
sbb
inc
mov
xor
mov
pop
push
mov
xchg
mov
jp
mov
sar
add
into
mov
icebp
cmp
jo
or
ret
or
shl
dec
jne
ins
in
call
repz
leave
scas
dec
std
popf
add
cmp
jbe
add
fnstenv
mov
fs
cmps
xchg
push
jbe
repnz
sbb
in
mov
xchg
xchg
pushf
lock
inc
mov
(bad)
stos
pop
aam
dec
push
mov
dec
or
call
shl
xchg
out
cmp
mov
xlat
pop
hlt
mov
ret
fwait
jge
ds
test
lock
pop
or
xor
sti
sti
pusha
int3
sar
or
sti
arpl
xchg
and
jmp
call
cmp
mov
inc
mov
fwait
mov
dec
in
mov
nop
sbb
push
mov
and
out
xchg
xchg
adc
add
sbb
xchg
lock
cs
xchg
adc
das
ret
mov
ret
dec
shl
xchg
cwde
iret
movs
loope
jne
xlat
xor
lods
dec
ss
jnp
loop
and
lods
cmps
in
pop
out
add
sbb
stos
into
js
mov
dec
in
outs
pop
clc
pop
pop
in
icebp
inc
repnz
mov
jns
sti
repnz
loope
sub
sahf
bound
dec
retf
mov
stos
xor
add
out
imul
pusha
mov
or
ret
inc
aam
add
pop
daa
push
mov
push
fstp
and
add
aaa
dec
(bad)
jbe
or
outs
and
mov
push
test
mov
dec
dec
jae
(bad)
sar
and
call
xor
das
jg
fdivr
test
xchg
xchg
mov
mov
jne
push
out
cmps
push
cmp
movs
outs
popa
mov
and
mov
enter
ins
shl
adc
ins
adc
enter
adc
fisub
mov
sbb
test
push
jp
jbe
stos
adc
cmp
test
push
call
setne
inc
mov
or
out
push
jns
loop
inc
push
cmp
mov
xor
popa
mov
cmp
lods
sbb
sar
stos
jnp
inc
mov
mov
sbb
push
dec
js
inc
xchg
cmp
push
fs
outs
into
inc
dec
jno
mov
imul
test
adc
das
dec
setge
xchg
aad
sub
xchg
pop
push
hlt
not
iret
mov
jbe
jmp
sbb
into
xchg
pop
rol
mov
jmp
cmc
or
sbb
add
ins
sub
movs
jecxz
add
scas
into
je
xor
test
or
pop
sub
mov
lahf
or
loop
dec
test
xor
sbb
and
ins
rcr
pop
cmp
sar
pop
ja
aad
pop
jns
into
retf
sub
mov
sbb
xor
and
jbe
xor
mov
and
push
sbb
std
xor
mov
shr
push
push
mov
mov
cmp
loope
add
aam
dec
inc
sub
scas
test
aaa
rcr
rol
sbb
mov
(bad)
xor
shl
out
cmp
rol
sub
cmp
imul
je
(bad)
clc
jge
retf
inc
and
sub
ins
inc
pop
jecxz
cwde
cmp
cmp
out
dec
stos
int3
(bad)
(bad)
fild
aad
cs
lea
out
das
leave
xor
mov
out
cmp
or
jae
fdiv
jo
shl
clc
push
je
xlat
(bad)
push
arpl
jecxz
add
dec
and
and
cmp
outs
push
aaa
mov
hlt
jb
repz
jle
pop
pushf
sbb
xchg
mov
xlat
jmp
or
adc
mov
cmp
push
addr16
cmp
mov
sbb
mov
mov
lds
cmp
sbb
ja
and
mov
pushf
(bad)
sbb
pusha
dec
xor
ins
jecxz
dec
lods
adc
mov
in
lock
mov
jo
into
adc
adc
cmp
add
sub
test
sbb
aaa
je
mov
test
jp
enter
scas
sbb
pushf
or
push
sbb
dec
xchg
test
loopne
fs
xchg
xor
xchg
scas
clc
scas
js
mov
daa
or
fsubr
pop
loopne
add
outs
mov
fwait
mov
es
push
pop
lods
jnp
nop
ja
or
and
(bad)
outs
pop
cmp
mov
cmp
cdq
pop
push
pop
mov
xor
int3
xchg
mov
add
inc
mov
test
js
das
add
lahf
sbb
mov
xor
lds
fbld
adc
repz
mov
ret
mov
repnz
aad
jnp
sub
ja
or
sbb
nop
iret
popa
jecxz
retf
ss
cmc
in
sbb
mov
aas
inc
pushf
iret
iret
mov
and
mov
out
push
cwde
cmps
add
mov
dec
and
inc
daa
mov
retf
sub
and
jmp
in
(bad)
scas
ret
mov
mov
mov
aaa
jns
push
add
xchg
cmp
lods
call
pop
idiv
xor
pop
or
unpckhps
retf
movs
cmp
mov
dec
stc
cmp
retf
lods
push
in
leave
pop
cmp
or
ficom
push
mov
cli
push
test
cmp
in
stc
sbb
int
loop
jnp
in
pushf
into
retf
and
pop
ja
cs
mov
adc
lea
lahf
ins
cmp
mov
sti
mov
and
adc
sub
xor
imul
inc
test
xlat
out
inc
xor
add
jo
cmp
stc
mov
push
mov
xchg
aam
and
dec
mov
repnz
or
addr16
pop
repnz
push
add
dec
xchg
fwait
mul
mov
push
mov
xor
call
mov
mov
sub
test
add
xlat
fild
or
sbb
mov
xor
addr16
rol
cmp
jg
push
test
mov
fdiv
adc
popf
ins
sbb
or
mov
stos
jmp
outs
dec
push
ss
lods
cmc
clc
(bad)
fadd
(bad)
cmps
ret
out
in
mov
stc
fcom
mov
js
test
xor
or
arpl
adc
jne
loope
lea
das
cmp
lods
push
mov
push
xchg
push
lahf
push
jae
push
stc
and
add
sar
xlat
push
ret
jmp
arpl
pushf
adc
arpl
pop
aaa
loope
push
mov
inc
pushf
xchg
push
xchg
jb
out
adc
cmp
js
sbb
sub
loopne
mov
shr
lock
das
cmp
out
sahf
rcr
adc
pop
pop
xchg
mov
adc
lods
fs
mov
inc
mov
popa
dec
push
xchg
mov
xchg
(bad)
out
cmc
cwde
shr
out
xchg
jle
fsub
iret
fsub
out
push
iret
mov
cmp
cmp
mov
cmp
pop
adc
cmc
loopne
xchg
adc
ins
xchg
in
pop
add
das
mov
neg
iret
xchg
mov
pop
add
push
add
js
sar
add
mov
(bad)
int
popa
inc
test
inc
sbb
test
sbb
dec
or
ins
ins
xchg
dec
or
(bad)
mov
sbb
push
mov
add
add
add
xchg
add
fist
add
add
add
xchg
add
add
aad
stc
add
add
add
add
add
add
add
adc
or
add
add
add
add
sub
add
add
add
add
add
jae
add
add
add
add
add
add
mov
add
add
add
add
add
loop
retf
add
add
add
mov
pop
add
push
add
add
add
add
add
add
add
ins
inc
or
add
add
pop
add
add
imul
add
add
add
add
add
add
pop
stc
mov
dec
lock
cmp
imul
mov
outs
push
pop
pusha
push
pop
ins
fucomi
xchg
cs
jl
cdq
leave
xor
jl
jg
fst
or
hlt
xchg
and
xchg
xchg
inc
loopne
data16
js
cwde
scas
ins
xor
push
mov
jnp
cdq
retf
mov
sub
mov
mov
in
mov
cmc
mov
in
es
add
xchg
pop
mov
add
stos
or
cs
dec
jae
mov
out
mov
sub
push
js
pop
push
gs
pushf
sbb
in
stos
mov
test
xor
daa
sahf
aaa
popa
mov
push
jb
pop
loope
les
mov
mov
pop
cdq
jne
sub
cmp
out
xchg
(bad)
jne
jle
test
idiv
mov
or
add
mov
lahf
cmp
aam
mov
(bad)
int
div
lahf
jle
xchg
pop
repnz
mov
je
adc
movs
xchg
aaa
push
aaa
pop
lods
sub
das
scas
rcr
pop
mov
outs
adc
inc
mov
xchg
or
jb
xchg
mov
mov
xor
jmp
push
loope
push
shl
mov
inc
idiv
retf
cmp
cmp
daa
rcr
dec
scas
mov
add
sbb
and
aad
and
inc
(bad)
pop
pop
ret
adc
push
jo
xlat
dec
mov
stos
clc
cwde
push
icebp
xchg
dec
cdq
pop
retf
jae
push
(bad)
es
test
inc
out
or
js
fs
in
mov
in
jg
sub
jno
pop
dec
ret
mov
js
repnz
jl
cli
ja
das
jle
add
or
jae
retf
sub
mov
enter
jmp
mov
push
fisubr
and
push
(bad)
jge
outs
ins
addr16
das
pop
push
lahf
mov
test
sub
adc
push
xchg
mov
movs
jae
push
repz
popa
jne
jae
cmp
xor
and
jecxz
mov
cmp
add
mov
xor
or
or
push
jae
bound
pop
push
rcr
call
aaa
mov
fmulp
cmp
addr16
test
jmp
test
xor
mov
xor
and
mov
or
sbb
or
mov
int3
mov
dec
lods
inc
lea
add
push
test
sti
push
add
mov
test
aam
push
add
add
aas
inc
mov
mov
or
cmp
pop
cmps
jmp
and
dec
and
sbb
cld
and
js
jecxz
mov
sub
outs
xchg
fsubr
dec
xor
sbb
dec
pop
div
mov
dec
jnp
fdiv
imul
push
lods
cmp
jl
mov
mov
jns
mov
inc
mov
and
dec
xchg
dec
mov
sbb
out
xchg
adc
mov
push
jo
xchg
js
jge
push
pop
add
cli
xchg
adc
mov
push
xor
mov
call
je
cs
pop
in
aam
ds
adc
imul
cmp
es
cmp
shr
lea
xor
xchg
je
aas
es
outs
dec
mov
pop
push
cmp
pop
mov
out
inc
push
cmps
dec
mov
mov
mov
inc
xchg
adc
dec
fiadd
imul
daa
add
push
int
(bad)
adc
(bad)
out
jnp
cmp
mov
and
stos
cs
jb
or
imul
mov
push
stc
mov
and
loop
aaa
lods
fwait
mov
popf
sbb
jae
add
pop
and
adc
push
mov
daa
jae
mov
leave
lods
pop
rcl
ret
and
inc
(bad)
sub
enter
mov
(bad)
push
jne
mov
inc
jbe
arpl
and
icebp
push
and
mov
cs
dec
adc
enter
mov
out
je
cmps
test
xor
pusha
jb
fdiv
mov
and
ret
je
lock
add
mul
clc
sti
sbb
push
cdq
jnp
lds
retf
cmps
les
call
jge
sbb
xchg
sbb
cwde
pushf
mov
lea
cmps
aaa
mov
mov
leave
mov
jno
hlt
mov
pop
call
js
xchg
push
push
test
mov
jecxz
loopne
inc
xchg
xor
adc
or
mov
movs
push
fsubr
xchg
sub
jnp
mov
fldcw
pop
adc
aaa
dec
inc
adc
int3
lds
cmps
push
jnp
jo
sar
adc
xchg
sbb
sbb
sbb
pop
fdivp
out
mov
int
sub
add
sub
lahf
xchg
sbb
pop
mov
mov
retf
adc
jmp
sbb
aas
mov
sbb
fst
pop
sub
jmp
push
iret
jno
adc
fsub
cmp
mov
out
jno
inc
sub
test
jmp
inc
cmp
leave
enter
sbb
pop
mov
pop
fadd
stos
jl
sub
leave
imul
(bad)
cwde
xchg
inc
pop
stos
outs
test
xor
bound
imul
rcr
pop
cld
mov
cmps
leave
dec
nop
fidiv
push
cmp
scas
sbb
ret
rol
test
rcl
imul
repz
add
ror
add
addr16
fwait
xor
fiadd
ds
mov
pop
call
or
repnz
pusha
fbld
leave
and
ror
mov
push
mov
pusha
scas
(bad)
xor
and
pop
sbb
loope
fyl2x
aad
mov
loop
cmp
loop
lea
mov
sub
cmps
movs
stc
jmp
stc
inc
push
sub
push
add
push
enter
push
ret
and
test
es
cmp
dec
fisttp
nop
push
cmp
dec
and
jmp
mov
add
xchg
adc
xor
rol
sti
das
daa
out
sahf
imul
repz
cmps
cld
jp
bound
mov
cmp
push
pop
leave
mov
pop
cld
jl
or
jne
inc
mov
sti
dec
mov
mov
or
sub
jmp
cmp
cmp
adc
mov
sub
cmp
stos
cmps
setnp
ret
push
into
movs
stos
xor
dec
mov
dec
sub
jmp
ret
icebp
icebp
jnp
add
fucomip
ret
repnz
repnz
or
lods
add
gs
jne
add
push
jg
dec
adc
fisttp
lods
inc
js
lods
mov
jg
ret
jle
outs
scas
xor
mov
and
test
cmps
dec
mov
popf
sar
xor
jle
and
ja
and
push
jnp
jne
xor
dec
test
xchg
dec
xor
into
jb
xchg
in
shufps
sahf
xchg
mov
sbb
cli
jbe
jmp
push
jns
pop
jns
(bad)
pop
pop
int
rcr
in
shl
xor
or
jge
aas
pop
clc
outs
repnz
(bad)
inc
loop
inc
or
sbb
in
dec
repz
test
xor
and
push
(bad)
mov
lahf
dec
jmp
stc
test
loope
add
xchg
in
imul
(bad)
iret
push
(bad)
aaa
add
mov
mov
push
mov
mov
mov
movs
push
ret
lds
call
rcr
cmps
ja
mov
mov
(bad)
rcl
stc
pop
ins
mov
sub
movs
test
sub
sbb
repnz
sub
mov
lods
imul
mov
pop
xlat
dec
test
les
mov
xor
cs
int3
sti
aaa
sbb
fstp
das
cmp
cmps
add
xor
xor
dec
out
in
xchg
jmp
pushf
movs
ret
mov
xor
(bad)
icebp
mov
icebp
adc
les
dec
hlt
aas
pop
pop
xor
fs
add
cli
cmps
enter
jmp
test
xchg
mov
pop
faddp
jne
cdq
into
sub
mov
push
inc
or
shl
sbb
leave
mov
enter
jmp
inc
mov
frstor
jb
jge
fs
es
iret
cmc
ja
addr16
adc
xor
push
dec
xor
or
daa
jbe
cmp
xchg
inc
cmp
dec
pop
repnz
mov
lods
fcom
mov
sub
or
les
mov
xchg
add
inc
popa
inc
hlt
aad
mov
ds
sbb
mov
ins
ss
enter
xor
in
cli
punpckhbw
mov
mov
clc
popf
cmps
sub
mov
or
dec
push
sbb
cmps
std
cmp
push
xchg
sbb
cwde
mov
push
retf
lds
fs
popf
bound
push
cmp
push
inc
clc
arpl
add
xor
xchg
lahf
or
bnd
cmp
(bad)
xchg
jb
bound
cld
mov
sbb
adc
sub
jb
xor
sub
mov
shr
add
inc
add
dec
xchg
int3
add
mov
mov
loope
mov
loopne
fs
sub
outs
push
xchg
push
jnp
mov
or
xor
retf
and
cli
jns
dec
leave
cwde
hlt
jo
into
mov
adc
dec
retf
std
adc
call
add
inc
cmc
mov
xchg
bound
movs
and
lods
add
dec
cmp
sub
mov
int
jmp
push
inc
call
cmp
sub
data16
and
ss
fst
add
pop
movs
mov
xchg
sbb
ins
test
popa
xchg
pop
adc
pushf
pop
lods
rcl
call
adc
sbb
shr
and
inc
retf
in
sub
das
fwait
(bad)
mov
pop
sub
inc
push
jl
adc
xor
push
dec
sub
push
push
inc
push
add
(bad)
imul
add
add
add
push
push
add
add
add
add
sub
add
str
add
out
mov
add
add
add
mov
add
add
add
add
add
adc
add
add
add
xchg
add
dec
add
add
add
add
inc
add
std
add
add
add
xchg
adc
add
add
cmp
add
add
add
sub
add
add
add
add
xor
add
add
add
sub
add
add
leave
stc
add
jmp
add
add
add
jns
add
add
fwait
sub
jae
add
add
add
add
add
add
fld
add
sub
ficomp
test
ret
loope
repz
pop
arpl
and
stc
inc
push
push
rcl
pop
pop
fnsave
shl
add
or
aas
xchg
vmovhlps
xor
(bad)
out
js
mov
or
add
in
xchg
add
jo
jp
lods
mov
or
ret
cmp
add
in
in
or
xchg
mov
aam
lods
(bad)
rcr
daa
bound
jno
cs
das
jg
pop
dec
imul
(bad)
mov
xlat
or
lods
stos
push
movs
dec
or
mov
pop
mov
sbb
inc
add
fmul
mov
jne
(bad)
std
xor
jnp
jns
jmp
das
cld
icebp
add
sahf
bound
fdivr
add
inc
stos
mov
xor
adc
cmp
int3
repnz
ins
mov
fld
dec
mov
sbb
dec
clc
sbb
jmp
cld
xor
inc
xchg
rcl
dec
push
fild
or
or
cmps
pushf
pop
ins
xor
sbb
sahf
cdq
xchg
sbb
pop
mov
daa
scas
(bad)
int
add
cli
ret
xlat
adc
popf
sub
and
imul
aas
movs
cmp
sbb
test
lock
pop
out
scas
ss
ret
inc
sbb
push
lods
repnz
cmp
in
test
pop
mov
mov
jb
cmp
scas
sahf
pushf
imul
mov
es
dec
icebp
or
ror
jg
xchg
pushw
sbb
pusha
cmp
lods
xchg
hlt
(bad)
or
pop
mov
enter
sub
jb
fimul
sar
mov
xchg
sub
xchg
sub
mov
fdiv
repnz
xor
cmp
(bad)
mov
test
xor
or
jle
(bad)
mov
jmp
(bad)
ins
pushf
aad
jnp
adc
or
pop
sbb
retf
mov
push
adc
pop
or
add
aas
shr
into
hlt
cs
pop
push
aad
jle
jmp
pushf
and
test
cmc
lods
push
(bad)
sahf
mov
push
div
xchg
sub
xchg
imul
std
pop
aas
shr
inc
inc
mov
jb
xchg
xchg
in
jae
dec
jb
xor
mov
fisub
aaa
jnp
pop
push
outs
jne
mov
aaa
lock
and
add
sar
sub
out
jmp
dec
cmp
xor
scas
push
loopne
int3
jmp
cmp
fs
mov
lds
std
inc
mov
jmp
inc
mov
ret
pushf
clc
std
outs
cmp
iret
inc
inc
inc
ror
(bad)
pop
sar
call
jmp
scas
lea
cmc
xchg
addr16
cmp
adc
push
int
add
push
push
mov
jg
out
push
mov
icebp
mov
in
aam
ins
cmp
movs
pop
call
enter
in
leave
addr16
hlt
sar
dec
mov
repnz
mov
int3
das
int3
fs
ffreep
iret
retf
popf
lahf
in
cdq
loop
inc
pop
ror
add
inc
sbb
pop
movs
fdivr
sahf
ret
push
test
rcr
jp
push
aaa
out
add
xor
dec
adc
mov
enter
sbb
and
mov
loop
ja
inc
cdq
not
jge
hlt
cmp
dec
dec
hlt
in
cmp
rcr
pop
fst
push
fsubr
push
push
xor
es
in
jns
test
inc
pop
iret
dec
lea
retf
or
or
mov
or
sbb
mov
sub
shl
push
xchg
mov
mov
fisub
sbb
pop
aad
sbb
nop
cmp
inc
mov
and
stos
mov
cmps
ficomp
xor
imul
sbb
mov
and
dec
dec
jge
fdivr
shl
cmp
out
imul
call
and
and
jbe
pop
cmp
fcmovne
sub
sub
test
adc
jp
(bad)
push
push
das
and
mov
fdiv
cmp
(bad)
mov
clc
imul
jmp
lods
pop
sub
iret
sub
pusha
sahf
or
add
inc
jno
sub
icebp
pop
pop
push
(bad)
mov
push
and
sbb
outs
add
pop
xchg
push
int
aam
sub
adc
or
jnp
lock
add
sbb
imul
jae
loopne
aad
in
lock
adc
sub
jno
jb
das
int
dec
ja
xchg
or
push
jg
sar
hlt
mov
jge
jb
jo
into
jecxz
jo
stos
inc
(bad)
aaa
mov
sbb
aaa
add
stos
push
jmp
fidiv
mov
and
xchg
and
nop
push
sbb
push
imul
jge
mov
mov
xchg
je
movs
cdq
cmps
ud2
push
inc
loopne
adc
cmps
mov
pop
pop
mov
div
add
mov
ja
sete
inc
jnp
loopne
push
xor
xchg
jno
push
inc
pop
popf
jmp
push
les
adc
fndisi(8087
int3
fbld
push
push
mov
ins
xchg
push
xchg
int3
(bad)
js
inc
inc
call
push
dec
repnz
test
jl
test
sbb
shr
clc
cmp
cmp
je
pop
cmps
cld
and
push
pop
cwde
pop
jae
cmps
cmp
mov
cmps
cmp
mov
ins
mov
jb
enter
iret
fwait
inc
jge
mov
xchg
int3
out
inc
dec
sahf
popf
or
mov
(bad)
and
pop
xchg
push
mov
inc
sbb
pop
movs
sub
clc
out
sub
dec
xchg
mov
cmp
les
stos
and
mov
jecxz
fisub
add
pop
adc
jecxz
dec
aad
adc
mov
mov
sub
adc
jmp
jb
sub
pop
xor
add
push
imul
mov
push
scas
mov
sbb
jo
jns
and
pop
lods
call
sar
push
into
adc
push
or
das
push
fstp
sub
mov
ins
outs
pop
adc
movs
jns
mov
test
add
je
cmc
sub
aam
cdq
rol
xchg
pop
dec
icebp
inc
das
pusha
jb
jge
repz
mov
shl
lods
retf
scas
das
xchg
xchg
enter
dec
lea
add
lods
(bad)
push
xor
pop
and
xchg
stos
mov
cmp
retf
mov
xchg
repz
sti
movs
or
into
popa
call
gs
xor
lahf
or
ret
ins
push
sbb
mov
cmp
jne
shl
lods
pop
xor
dec
cmc
(bad)
cdq
enter
ret
adc
mov
ds
nop
sbb
jne
fidivr
mov
not
jmp
(bad)
adc
sbb
sar
rcpps
jne
mov
sub
mov
adc
pusha
adc
xchg
cmp
inc
sub
sbb
shl
jae
rcl
aas
out
add
ret
add
mov
push
imul
mov
and
aaa
sbb
jg
fidiv
mov
inc
fidiv
push
sub
xchg
in
pop
xchg
push
pop
mov
iret
and
js
mov
and
cmp
push
mov
jmp
xor
(bad)
ins
jle
mov
fwait
xor
mov
jb
pop
pop
sti
dec
mov
mov
sub
dec
outs
in
mov
out
cld
jg
mov
jnp
adc
in
(bad)
mov
pop
and
mov
pop
enter
mov
or
(bad)
fsub
inc
push
outs
or
neg
add
mov
ffreep
jae
sub
popa
rcr
gs
mov
push
mov
sub
cmp
dec
dec
cmc
(bad)
loope
imul
sub
inc
retf
xor
dec
xor
mov
mov
daa
adc
dec
or
call
fldcw
jp
sbb
mov
adc
in
cmp
push
in
ja
push
mov
daa
repnz
popf
loop
push
and
and
es
xor
pop
pop
cmp
cmp
xchg
in
or
jg
imul
xor
sbb
sub
ret
outs
mov
mov
cmp
fld
inc
stos
stos
outs
mov
shr
ret
add
push
adc
jle
fdiv
ins
dec
jp
fs
jmp
push
cli
icebp
add
mov
aad
in
and
ja
xchg
xor
push
pusha
into
mov
add
xor
dec
dec
sbb
fstp
pop
pop
retf
or
lods
jns
xor
in
nop
call
or
std
test
mov
mov
retf
inc
adc
push
inc
aas
mov
jnp
inc
loope
xchg
xchg
mov
mov
mov
add
shr
imul
jmp
dec
fwait
inc
fsubr
jb
xrelease
cmp
add
sub
jo
xchg
pop
xchg
and
or
clc
and
retf
mov
ins
push
in
in
mov
loop
and
int3
or
mov
rcl
sbb
js
or
stc
mov
jp
loope
dec
ror
out
fldenv
(bad)
jg
mov
addr16
cmps
dec
adc
mov
and
push
(bad)
mov
mov
cmc
push
out
or
pop
push
lds
es
adc
cmps
jl
data16
cmp
vpaddd
es
mov
fist
retf
mov
and
out
pop
sub
xor
outs
mov
xor
or
jnp
in
mov
jae
pop
test
std
icebp
test
and
sbb
ffreep
or
add
and
mov
lods
mov
and
test
xchg
ret
cmp
push
pop
pop
push
(bad)
push
arpl
and
in
mov
movs
stos
pop
xor
cmp
adc
jl
(bad)
mov
mov
fcom
push
fwait
jnp
xchg
sub
inc
dec
adc
add
add
push
stos
movnti
popf
jo
pop
jle
cli
aaa
pop
adc
add
add
lds
add
sti
add
lahf
add
add
add
push
add
sbb
leave
add
xor
add
add
add
add
pusha
add
add
add
add
pop
add
add
mov
jno
add
add
add
aas
call
add
push
out
add
add
add
add
add
add
add
add
mov
or
sub
or
stc
mov
scas
jb
pop
mov
stos
rcl
mov
out
pop
cmp
ret
in
test
mov
cmp
pop
add
mov
sbb
(bad)
loope
pushf
jo
out
std
xchg
repnz
inc
leave
mov
xor
ficomp
sbb
rep
pop
ins
(bad)
or
adc
mov
sti
aaa
movs
imul
aas
ror
cmps
push
jno
sbb
mov
rcr
aad
push
adc
rcl
sar
(bad)
mov
add
push
lahf
xchg
pop
or
ret
aam
mov
and
push
ret
xor
xchg
gs
fs
dec
jg
add
mov
icebp
lock
ss
adc
push
dec
std
push
lds
repz
sbb
imul
mov
push
js
mov
aaa
mov
sbb
(bad)
xchg
popf
lds
pop
aad
jge
adc
dec
xor
xchg
(bad)
mov
stos
push
idiv
mov
popa
mov
jle
popf
lds
pushf
push
aam
daa
xchg
leave
repnz
sti
mov
sbb
jp
mov
jno
add
cmp
es
ins
sub
mov
lds
repz
xor
jge
mov
jbe
push
test
add
(bad)
mov
stos
loop
stos
imul
xchg
add
sahf
dec
xlat
push
test
pop
push
inc
mov
push
push
pop
inc
add
movs
sti
cmp
cmp
ins
enter
sbb
xchg
cmc
daa
cld
clc
mov
jo
popf
pop
xlat
xor
cmps
in
sti
push
xchg
add
test
ret
adc
pop
ins
jo
mov
scas
cs
mov
xor
dec
sbb
outs
inc
call
out
or
mov
repnz
add
mov
jae
adc
ret
loop
movs
mov
int3
stc
test
xor
fsubr
push
and
push
add
mov
pop
jne
aas
xor
neg
stos
aaa
call
cmp
mov
dec
gs
(bad)
js
dec
push
scas
add
(bad)
xor
ror
sbb
loop
cdq
ja
inc
enter
fs
cmp
push
(bad)
sbb
dec
xchg
loop
or
movs
(bad)
daa
or
adc
bound
adc
invd
aas
dec
lds
dec
add
loopne
adc
mov
sub
aaa
loop
popf
inc
repz
out
push
and
bound
retf
in
and
mov
add
in
xchg
inc
xlat
pop
adc
adc
movs
add
cli
dec
lods
or
sahf
mov
adc
or
inc
sar
add
mov
sbb
sbb
dec
ficom
imul
mov
test
jo
scas
xchg
shl
add
adc
add
dec
in
pop
mov
fs
frstor
cmp
outs
mov
push
call
pop
je
push
arpl
sub
imul
and
and
inc
jg
in
and
xor
cmp
and
pop
cmp
stc
mov
jmp
aaa
lds
in
imul
adc
xchg
stos
mov
cmp
out
sub
jge
xlat
and
push
xor
sub
cdq
clc
mov
fdivr
js
jge
scas
(bad)
ja
mov
retf
inc
daa
cmp
(bad)
mov
push
xor
mov
pop
pushf
xchg
loop
sub
loop
lahf
aad
jle
mov
arpl
push
aam
mov
fs
out
repnz
je
stos
or
mov
icebp
cmp
or
jp
sub
std
adc
pop
mov
cmc
aaa
inc
sub
mov
xor
xchg
fucomp
mov
out
push
xchg
or
fistp
cli
dec
out
mov
and
mov
mov
mov
jns
sbb
adc
dec
fist
sub
fist
inc
sub
push
call
jnp
jae
fnstsw
rcr
in
mov
pop
imul
mov
add
dec
push
dec
shr
pop
(bad)
jle
(bad)
retf
cmp
fwait
cmp
adc
cld
fcmovnbe
jle
aaa
aas
shl
(bad)
mov
std
add
lea
or
sar
mov
aas
or
cmps
pop
iret
into
(bad)
jmp
lds
ret
xlat
push
cli
bound
cmp
adc
jns
dec
sbb
mov
scas
push
test
mov
push
xchg
push
out
test
adc
(bad)
cli
sub
stc
cli
mov
call
add
leave
xchg
fsub
rcr
and
mov
loopne
movs
add
push
call
iret
adc
or
inc
lahf
dec
inc
neg
leave
inc
std
movs
addr16
sub
pushf
and
pop
jne
push
imul
repnz
shr
dec
je
(bad)
sbb
(bad)
pop
into
mov
cli
push
mov
pop
les
test
outs
adc
mov
cmp
inc
(bad)
push
mov
jnp
mov
sbb
xchg
lahf
call
pop
mov
dec
push
sbb
push
pop
cmp
pop
adc
int3
jmp
inc
pop
pop
cmc
in
add
add
jecxz
iret
out
sub
dec
shl
mov
lods
pusha
imul
mov
sti
cmp
das
fs
push
xor
push
pop
sahf
scas
test
out
stos
xor
gs
call
ja
inc
loopne
cli
loope
cmp
in
push
mov
(bad)
pop
xchg
mov
popf
jnp
dec
mov
retf
gs
sbb
pop
mov
xlat
or
out
pop
jmp
adc
imul
mov
or
adc
mov
lahf
out
nop
mov
and
mov
lds
or
movs
mov
loop
push
and
(bad)
lea
(bad)
cmp
sti
cmp
pusha
xor
in
inc
cmp
lods
jbe
outs
cmp
mov
sti
loope
mov
sbb
cld
ficomp
leave
scas
push
ror
adc
adc
mov
jne
fisttp
retf
in
fstp
jne
add
mov
pop
int
repnz
mov
stos
sbb
add
jp
sub
lds
je
fcmovne
mov
cmp
and
shr
push
add
pushf
add
and
add
das
xor
sub
push
inc
adc
pop
xchg
cmp
pop
nop
sbb
xor
add
sbb
loop
shr
bound
or
call
pop
inc
xchg
pop
push
in
fcom
sub
xchg
jne
push
out
jecxz
(bad)
jl
or
aad
leave
mov
stos
dec
shr
loope
aas
dec
pop
jge
xor
test
fsubr
sbb
mov
mov
mov
add
cwde
xor
loopne
in
mov
mov
or
mov
int
adc
mov
mov
pop
cmps
mov
mov
cld
or
mov
(bad)
cmc
mov
xchg
fsubr
add
stos
mov
cmp
mov
xor
lods
ret
jg
cld
out
pop
rol
cmp
scas
adc
add
fstp
sbb
repnz
mov
adc
mov
sbb
test
mov
sub
sahf
fbstp
push
xor
xchg
fimul
pop
cmps
ret
(bad)
stc
pop
dec
and
ficomp
push
cmp
mov
xchg
or
rol
fmul
push
mov
mov
jmp
xchg
and
dec
sbb
ret
sub
out
xor
or
stc
inc
fs
xor
jecxz
sbb
push
sbb
and
rcl
outs
sub
xchg
mov
lock
aam
mov
je
xchg
jp
cmp
aam
sub
jnp
pushf
mov
jo
add
leave
add
adc
pop
inc
dec
clc
dec
sbb
add
mov
sub
sar
repnz
and
scas
imul
iret
dec
push
xchg
xchg
div
ds
dec
(bad)
loop
push
jno
sub
test
icebp
in
inc
ins
retf
mov
ficom
test
mov
pop
addr16
mov
inc
popa
test
add
cli
fwait
ja
and
leave
inc
sbb
adc
aam
(bad)
lods
test
sub
sub
out
push
retf
mov
mov
add
hlt
dec
ds
mov
xchg
(bad)
call
hlt
push
mov
or
pop
xor
retf
in
add
out
add
sbb
mov
mov
pop
hlt
add
ret
fldcw
dec
mov
mov
add
sbb
cmp
sbb
hlt
mov
push
lea
jo
xor
ror
int
pusha
sub
(bad)
lods
inc
mov
lahf
fwait
movs
and
lods
adc
mov
or
xchg
or
inc
lods
adc
adc
ja
push
dec
gs
xor
inc
push
push
out
pop
cmps
stc
mov
and
or
pop
pop
retf
lods
xchg
test
xchg
cmp
cmp
sub
ret
das
inc
cmps
popf
jge
jo
or
mov
rol
gs
push
push
sub
mov
jg
mov
inc
sub
or
retf
push
inc
jl
sub
pop
idiv
retf
add
aaa
call
ffree
sub
fsubr
dec
shr
movs
jb
jns
pusha
adc
int
call
dec
test
das
pop
(bad)
push
inc
push
xchg
in
mov
loop
or
sub
dec
pop
xchg
mov
(bad)
ins
mov
pop
out
or
fcomp
mov
aaa
fistp
ror
aaa
and
adc
cli
fsubr
pop
xor
ffreep
add
icebp
mov
cmp
ret
jnp
inc
xchg
xchg
iret
lods
ins
in
movs
xchg
aad
aaa
adc
imul
jl
aam
mov
xor
push
fcom
test
fsubr
push
push
sub
pop
lock
xchg
jl
cmp
mov
out
lods
adc
inc
sar
xchg
out
ja
mov
stos
xor
add
jecxz
mov
arpl
cmp
pop
add
add
add
add
loope
add
add
add
jnp
add
add
add
add
add
in
in
xchg
add
add
add
add
add
add
add
add
sub
in
add
add
ins
add
add
add
add
add
add
add
add
sti
out
mov
add
mov
add
add
add
loope
add
add
add
int
mov
mov
sti
xchg
aam
sub
mov
mov
mov
xchg
std
add
mov
jge
retf
lea
or
mov
pushf
sbb
faddp
(bad)
scas
dec
je
jge
in
mov
mov
xchg
sbb
xchg
stc
sti
cmps
enter
mov
xchg
or
xchg
mov
cmc
mov
dec
enter
cdq
fcomp
(bad)
sub
ret
(bad)
xchg
mov
fcmovnu
pop
mov
arpl
jmp
xor
iret
mov
fs
mov
and
retf
mov
fdivp
getsec
out
sub
lods
jmp
lods
(bad)
mov
add
jno
movs
dec
mov
cmc
xchg
(bad)
inc
(bad)
shl
mov
sti
(bad)
xchg
imul
cwde
fiadd
(bad)
in
rol
hlt
out
jecxz
aam
xor
ror
aad
dec
je
and
mov
mov
cmc
mov
nop
or
out
cmp
das
jge
xchg
mov
rcl
push
jne
bound
es
aam
jmp
sar
stc
dec
inc
stc
aas
cmps
mov
ins
call
fistp
hlt
out
add
call
xchg
int3
jp
iret
xor
xchg
call
mov
addr16
test
mov
mov
inc
aaa
icebp
cmp
xor
mov
mov
iret
icebp
adc
cmc
and
xchg
add
mov
adc
xchg
push
push
movs
jge
mov
mov
repz
xchg
in
rol
repz
call
lahf
enter
(bad)
mov
jle
jbe
mov
shr
stos
test
pop
fisttp
stc
cmc
mov
out
dec
mov
mov
xchg
(bad)
sub
cmps
or
dec
cld
mov
sti
xchg
jns
shl
test
call
lods
popf
cmc
stos
fcmovnu
inc
mov
jl
dec
iret
nop
jne
mov
sub
movs
pop
push
fidivr
cli
int
loope
sub
xchg
retf
mov
aam
or
repnz
sub
xor
fdiv
lods
push
and
jp
push
int3
fsubr
stos
icebp
stos
and
fimul
mov
movs
mov
pop
mov
cmc
adc
and
xor
lahf
mov
or
cwde
in
outs
icebp
cmp
test
cwde
sahf
addr16
sahf
xlat
pop
iret
shl
add
out
mov
mov
arpl
or
fcomp
inc
push
and
dec
lods
loopne
add
adc
push
push
inc
mov
adc
cs
fstp
dec
or
jl
and
fistp
or
dec
cmp
mov
pop
and
dec
or
movs
cs
jns
and
daa
dec
aas
jge
push
mov
cmp
mov
rcl
adc
rcr
jp
cmps
arpl
call
dec
or
(bad)
jbe
cwde
in
(bad)
retf
push
cwde
shr
fs
cmp
int3
sub
out
(bad)
mov
(bad)
cld
ds
rcl
xchg
shl
mov
mov
xlat
sub
or
push
dec
mov
movs
out
mov
xlat
sub
std
movs
xlat
lea
movs
int3
mov
rcl
inc
or
loopne
push
pop
fwait
icebp
mov
in
and
mov
inc
into
retf
movs
inc
or
mov
out
fistp
aaa
lea
add
adc
xor
sub
and
cmps
add
pop
sub
jp
xor
push
xchg
loopne
add
push
lds
aaa
sbb
mov
add
push
fs
scas
jnp
sbb
and
push
addr16
out
sub
cmp
push
adc
int
adc
xchg
stc
mov
cmp
xor
pop
mov
dec
xor
ret
push
adc
arpl
lods
jge
adc
and
cwde
jmp
adc
cdq
inc
mov
cmp
mov
adc
retf
popa
adc
push
cmp
movs
mov
ds
sub
ds
or
xchg
mov
inc
pop
push
aad
jge
das
sub
cwde
fbld
retf
(bad)
sub
aaa
pop
pop
adc
inc
or
pop
mov
test
dec
dec
dec
push
clc
pusha
push
sub
and
xchg
aam
xor
pop
mov
test
sar
in
retf
jno
es
out
lock
(bad)
movs
test
bound
sub
pop
xlat
pop
sbb
es
cmp
mov
sub
jo
cmp
or
push
push
adc
push
xchg
(bad)
pusha
(bad)
mov
jle
push
add
mov
adc
nop
push
test
xchg
daa
push
fdivp
push
into
lods
aad
push
idiv
mov
into
adc
mov
push
(bad)
add
iret
jbe
std
xor
icebp
xchg
ins
push
pop
adc
sahf
xor
dec
(bad)
adc
dec
shr
out
(bad)
sbb
cmp
les
xor
jne
gs
lods
dec
int3
pop
mov
cmp
shl
stos
mov
clc
ficom
shl
sti
jns
sbb
pop
aad
or
iret
mov
enter
mov
sbb
arpl
je
gs
sub
and
mov
(bad)
imul
rcl
jg
into
pop
hlt
dec
ds
in
(bad)
lods
mov
bound
jne
push
ss
ins
cmp
fsub
pushfw
mov
dec
or
in
outs
inc
dec
les
pop
push
ror
(bad)
ds
arpl
add
addr16
or
dec
push
mov
xor
mov
jecxz
inc
not
adc
cmp
dec
push
xchg
adc
cmp
mov
or
and
int3
movs
enter
pusha
test
loopne
add
push
push
cld
jo
sbb
pop
in
sub
jmp
mov
or
shl
in
shl
jae
sub
adc
in
pop
repnz
imul
cmp
jge
mov
mov
cli
dec
in
dec
or
inc
sbb
int
retf
push
fincstp
ficom
int3
mov
xchg
call
sbb
xor
mov
mov
cwde
fcomi
sub
in
sbb
mov
sub
push
cmc
shl
les
push
rcl
adc
out
aam
dec
mov
pop
cld
xor
mov
loopne
xchg
test
xchg
js
sbb
adc
adc
ds
or
mov
ror
adc
add
cmp
fsubr
inc
inc
jne
pop
mov
cmp
in
fidivr
fscale
ds
jno
push
inc
test
sub
lock
cmp
or
pop
ins
pop
xor
daa
dec
push
lods
sti
dec
lahf
daa
sbb
jo
cmc
push
cmp
adc
adc
popa
pop
pushf
dec
leave
int
stc
mov
cwde
fcomi
mov
out
mov
popa
pop
pushf
dec
aaa
lea
mov
imul
push
cmp
cmp
in
addr16
pop
xor
imul
sbb
pop
das
jns
and
and
and
sub
push
and
push
mov
ja
mov
pushf
mov
pop
cmp
jmp
sti
sbb
std
dec
fwait
adc
pop
pop
adc
cmp
into
and
push
xchg
push
or
or
outs
ret
mov
inc
(bad)
repnz
(bad)
in
std
mov
cmp
packsswb
int3
(bad)
xchg
jne
sti
mov
or
cld
jp
push
setae
adc
popa
in
in
sub
and
xchg
mov
xor
xchg
fimul
(bad)
shl
in
lock
inc
out
arpl
subps
(bad)
or
xchg
mov
push
je
inc
sub
aaa
or
xor
dec
call
ja
int3
in
pusha
push
sub
cmp
pop
fcomi
in
mov
out
cld
leave
dec
int
add
add
bound
mov
fs
lds
aad
inc
adc
data16
jecxz
loop
clc
jns
and
xchg
sbb
xor
movs
sub
enter
mov
cdq
pop
outs
iret
sbb
mov
(bad)
sub
or
mov
xlat
imul
and
cmp
scas
leave
mov
stos
sbb
pushf
sahf
test
outs
mov
xchg
int
adc
xchg
mov
aam
rcr
sahf
inc
pop
xchg
ins
mov
jo
push
cwde
jle
cmp
jmp
loope
xor
dec
(bad)
xchg
xchg
shl
nop
or
mov
xor
dec
push
cmc
dec
in
cmps
stos
repnz
sbb
aad
or
mov
dec
jmp
es
shr
xor
std
mov
leave
sub
push
mov
xchg
xchg
sahf
xchg
div
mov
or
ss
out
pop
push
clc
in
pop
rcr
pop
clc
dec
scas
fwait
sbb
add
push
jmp
adc
repnz
scas
(bad)
dec
mov
imul
(bad)
je
fadd
jmp
ds
lahf
dec
and
aad
addr16
or
mov
(bad)
mov
leave
mov
pop
inc
or
in
fcmovnu
mov
out
mov
popa
sbb
leave
ret
add
pop
iret
or
movs
out
xchg
push
dec
xor
loop
into
int
or
push
mov
cmp
jnp
inc
inc
daa
cwde
sbb
lods
dec
sub
cmp
jbe
jae
cmp
cmp
addr16
add
shr
jmp
cmp
lea
adc
and
jae
jbe
or
dec
out
gs
adc
push
sub
inc
sub
mov
push
jmp
cmp
sbb
pop
add
stos
inc
mov
dec
inc
push
or
cs
and
jg
ds
fisub
push
aaa
push
daa
pop
cmps
in
jae
addr16
mov
out
mov
popa
pop
pushf
dec
leave
int
call
xchg
loopne
mov
jp
mov
jle
and
cmp
stos
das
lock
js
frstor
dec
mov
test
cmp
or
dec
outs
push
sub
cs
pop
loopne
shr
mov
mov
daa
lea
add
add
test
add
add
add
add
mov
add
sldt
add
retf
or
add
add
pop
push
add
add
add
add
pop
add
in
add
add
add
add
add
add
add
add
add
inc
add
add
add
dec
add
add
add
dec
add
add
add
add
add
add
gs
add
jbe
add
add
add
add
add
mov
add
add
sub
add
add
add
xor
add
add
add
cli
add
add
add
stos
add
pop
xor
add
add
ret
add
add
add
add
add
add
ret
add
add
add
mov
and
add
add
out
add
add
stos
add
sbb
adc
add
add
add
add
add
and
and
add
add
and
add
add
mov
add
fadd
sahf
add
ret
mov
add
lds
add
aaa
add
add
add
add
add
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
xor
add
dec
add
add
add
add
inc
add
push
add
fdivr
cmps
test
sbb
cmp
clc
mov
mov
dec
shr
and
mov
push
mov
xchg
inc
pop
push
push
push
loope
in
jne
(bad)
aam
xchg
mov
out
mov
hlt
jae
fld
xchg
mov
jo
dec
je
sub
cmp
add
push
test
pop
into
test
mov
gs
mov
sti
jecxz
ret
jbe
ud2
jns
inc
dec
in
mov
cmp
sbb
(bad)
and
sbb
jne
es
xchg
push
rcl
movs
pusha
cmp
out
add
rcr
add
mov
jle
sub
call
jb
pop
sub
cs
push
pop
xor
cmp
dec
in
jmp
xor
pop
or
xchg
pop
or
or
out
into
mov
in
jecxz
xchg
imul
inc
fs
cmps
mov
lahf
(bad)
aam
sbb
pop
js
xchg
mov
dec
jno
lock
sbb
out
ror
sbb
push
imul
mov
cmp
std
dec
lahf
dec
loope
call
xor
test
stc
es
pushf
movs
movs
sahf
(bad)
jp
add
push
aad
xchg
sub
and
cmp
mov
(bad)
aaa
push
sar
push
daa
add
or
pushf
push
bnd
mov
adc
sbb
sti
adc
test
(bad)
or
(bad)
rcl
sbb
add
xor
mov
call
sbb
shr
aam
sub
lods
lock
call
(bad)
cmps
pusha
repnz
movs
mov
sub
(bad)
call
mov
aaa
jns
xor
xchg
or
xor
pop
mov
jne
push
hlt
dec
or
in
cs
xor
dec
jo
xor
xchg
data16
mov
mov
push
out
(bad)
jg
cmps
fadd
mov
push
mov
out
jb
data16
call
and
xor
push
push
sub
add
cmp
mov
fcom
jae
rcl
xchg
pop
fild
dec
popf
mov
jo
popf
inc
mov
jne
jae
mov
rcr
sbb
pop
mov
jl
cmp
inc
inc
fst
int3
dec
xor
test
daa
push
cmp
jns
push
call
neg
sbb
sub
xchg
sahf
cmp
retf
in
sbb
mov
enter
jecxz
ja
mov
push
sub
cld
pop
jg
repz
aas
jno
lds
aam
test
xchg
pop
mov
imul
das
std
and
and
dec
inc
adc
lock
xchg
repz
push
cld
cwde
cli
dec
out
mov
mov
add
pop
imul
(bad)
out
loope
xor
sbb
scas
dec
pushf
mov
mov
push
xor
es
jle
jecxz
arpl
cmp
push
(bad)
lahf
adc
popf
out
arpl
repz
mov
mov
mov
call
sbb
(bad)
or
(bad)
dec
fld
test
ffree
push
lea
xor
and
push
call
sti
clc
leave
outs
add
loopne
sbb
mov
sub
sbb
mov
cmps
(bad)
jge
add
dec
gs
push
sbb
xchg
cmp
add
xchg
mov
xlat
pop
adc
test
shl
shl
adc
adc
add
sub
enterw
add
mov
fcmovb
retf
sti
push
dec
leave
cmp
fdiv
pop
sub
push
mov
aam
sbb
mov
dec
nop
dec
jae
rol
mov
xchg
inc
pushf
push
outs
push
stos
lods
push
repnz
xor
bound
and
mov
mov
jne
xchg
and
(bad)
loop
jno
push
and
pop
push
mov
in
sub
cs
mov
jae
mov
xchg
mov
or
dec
mov
mov
jne
jnp
push
ficom
inc
iret
mov
dec
repz
mov
(bad)
jl
add
lods
cmp
out
fwait
mov
mov
fisubr
mov
add
and
sbb
bound
add
inc
in
in
cmp
dec
dec
je
push
and
or
push
imul
dec
cdq
icebp
fst
jae
adc
(bad)
and
loope
repz
sub
pusha
jnp
stos
sub
mov
mov
adc
pop
cwde
add
scas
sbb
adc
outs
push
std
sti
add
pusha
xchg
(bad)
sbb
lods
out
xchg
fadd
and
cwde
pop
adc
aas
mov
xor
sahf
xchg
adc
(bad)
std
jge
pop
push
inc
xor
mov
(bad)
xchg
push
dec
das
outs
or
shl
sub
cmp
pop
adc
push
jnp
into
add
jge
xor
fldz
sub
test
jecxz
(bad)
test
out
mov
repnz
pop
pushf
inc
xchg
push
xor
sub
stos
retf
dec
sbb
push
fcomp
xchg
jae
inc
aad
dec
push
fsubr
cmp
ds
mov
xor
stos
mov
ja
inc
adc
scas
stos
sahf
push
dec
dec
imul
jb
pop
add
fdivr
mov
push
rol
add
adc
movs
popa
sbb
or
test
dec
and
push
mov
lods
or
push
push
ror
sub
jnp
and
sahf
push
fstp
xor
or
fist
inc
movs
popf
and
adc
addr16
dec
push
cmp
movs
xchg
repnz
or
mov
fisubr
scas
aam
dec
sbb
sbb
push
inc
or
in
mov
out
push
add
mov
xchg
dec
test
xlat
lea
js
dec
test
test
ret
(bad)
push
xchg
push
push
cmps
retf
pop
inc
xor
cwde
data16
rcl
mov
jg
pop
arpl
push
(bad)
ins
sub
dec
xchg
lods
sub
out
imul
add
mov
jmp
jnp
jecxz
stos
imul
fmulp
daa
jge
jbe
adc
pop
call
je
(bad)
stos
lahf
stc
mov
lock
cmp
or
xor
popa
mov
cmps
les
mov
inc
push
mov
sar
cmc
push
retf
sub
mov
add
sub
stos
aad
pop
cmps
add
push
mov
cmp
test
mov
bound
popa
pop
push
je
sbb
sbb
inc
loop
bound
mov
div
stos
or
dec
add
sbb
pop
lea
cmp
or
ins
mov
mov
dec
popa
pop
sbb
mov
add
shl
cmp
fldenv
test
push
inc
in
scas
shr
(bad)
add
dec
adc
mov
pop
jo
inc
mov
xchg
mov
fcmovne
push
xchg
stc
std
bound
ret
push
inc
mov
icebp
mov
xchg
lock
into
jl
ds
add
adc
add
add
retf
pop
movs
mov
(bad)
cs
mov
(bad)
bound
and
pushf
and
push
add
enter
sub
push
add
and
enter
aam
and
jmp
sbb
das
and
call
pop
mov
dec
cmps
mov
mov
call
jle
dec
sub
repnz
dec
imul
lods
adc
loope
movs
out
rcr
pop
stos
push
out
test
dec
out
adc
test
cmp
cs
jp
and
inc
aas
lock
ds
aad
fisttp
and
lock
lea
daa
sbb
fwait
test
pop
jecxz
pop
sahf
scas
or
cli
sbb
pop
mov
pop
fst
dec
add
les
dec
out
lods
out
mov
cmc
ss
imul
mov
(bad)
ins
into
punpckhwd
loope
rcr
(bad)
in
adc
pop
push
adc
and
jns
rcr
movs
xchg
xchg
mov
inc
and
fwait
test
in
fwait
scas
into
into
stos
push
(bad)
into
jo
fisubr
xlat
test
fisttp
xor
adc
mov
stos
pop
mov
push
repnz
push
sub
mov
movs
outs
cmp
(bad)
(bad)
fiadd
dec
lock
mov
(bad)
cmp
add
mov
daa
jae
and
inc
push
clc
or
mov
dec
ret
popf
mov
and
xlat
mov
dec
mov
into
sub
bound
jns
pop
xchg
iret
mov
add
sbb
je
cmp
inc
dec
in
shl
std
dec
mov
xchg
adc
loop
adc
outs
sub
repz
mov
test
iret
imul
mov
add
xchg
push
mov
fnsave
rcr
adc
push
jmp
pop
push
jnp
es
out
mov
add
fimul
mov
in
and
out
mov
cmps
adc
call
inc
rcl
xchg
add
xor
jb
ins
sub
mov
loope
xor
sub
pop
mov
sub
stos
dec
(bad)
mov
mov
std
add
xchg
imul
int3
xor
push
(bad)
test
mov
push
jo
ja
adc
push
push
cld
xor
test
test
dec
sbb
addr16
std
cs
and
imul
mov
ds
loopne
pop
sti
popf
stos
push
nop
mov
imul
out
repnz
aaa
nop
mov
inc
xchg
fcomp
rcr
aaa
shl
leave
adc
mov
or
mov
fdiv
dec
fisub
mov
mov
imul
mov
mov
sub
gs
cmc
add
out
ret
std
ds
lds
pop
mov
aaa
js
movs
retf
bound
sub
fwait
xor
mov
loope
rcl
cmps
sub
test
sub
call
xor
mov
pushf
xchg
xchg
xchg
inc
pshufw
push
jg
jb
stc
sbb
loopne
add
add
pop
add
add
add
add
add
inc
and
add
add
add
cwde
add
add
cmps
add
add
add
add
add
add
stc
add
add
in
add
int3
mov
add
add
add
add
add
add
add
hlt
add
les
add
add
jae
add
add
add
iret
add
add
and
add
add
add
add
add
add
fld
add
cdq
add
add
add
add
cdq
sub
add
add
add
pop
add
add
add
pop
add
add
add
add
stc
add
add
add
add
add
add
add
add
add
add
fild
inc
jle
inc
add
fild
add
clc
add
icebp
add
add
add
cmps
add
add
inc
add
add
popf
add
add
add
or
add
add
or
add
add
add
(bad)
add
mov
add
arpl
add
add
add
scas
add
add
add
add
add
add
pop
add
add
xchg
add
add
add
add
add
add
add
add
add
add
add
add
add
add
mov
add
call
int
stc
lds
ja
addr16
shl
aaa
jne
mov
test
cld
sbb
leave
in
inc
pop
dec
push
fnstsw
inc
retf
in
(bad)
rcl
dec
jbe
ins
jb
sub
test
sub
sahf
jmp
call
hlt
mov
repz
mov
clc
mov
inc
test
adc
scas
cmp
das
xor
cmps
dec
mov
push
loop
add
jne
pop
add
mov
jbe
sub
int
dec
push
sub
pop
add
jne
cs
popa
sub
out
add
ins
(bad)
in
pop
aad
add
xcrypt-ofb
cmps
in
sar
mov
daa
mov
ja
dec
mov
sub
bound
and
cmps
cmps
cwde
and
pop
shl
inc
sbb
je
int
push
sahf
(bad)
mov
jmp
mov
xor
outs
pusha
add
xor
add
loopne
sbb
jmp
xchg
or
dec
test
pop
arpl
repz
xor
fsubr
stos
or
jno
xchg
jb
inc
jp
push
cmps
ret
sub
sub
xchg
pextrw
inc
inc
jmp
outs
inc
out
fisub
pop
out
test
retf
xor
and
mov
mov
sbb
jne
dec
not
repz
pop
inc
cmp
cmp
(bad)
xchg
adc
xchg
adc
pop
movs
les
pop
cld
push
loope
mov
jmp
xchg
push
pop
dec
mov
or
sbb
lahf
mov
sub
ss
sti
or
dec
or
nop
dec
imul
push
loope
jo
push
dec
xchg
or
cdq
in
jbe
pushf
push
popf
sbb
arpl
push
inc
sar
dec
mov
pushf
sqrtps
cmc
lock
shl
inc
cmp
daa
in
xlat
test
lds
pop
cmc
jbe
or
xchg
pop
adc
inc
in
outs
or
push
and
xchg
sub
test
pop
arpl
test
les
repnz
xchg
inc
int3
xchg
xchg
aaa
lods
push
add
test
popf
sub
mov
jbe
sbb
loopne
mov
inc
scas
mov
sub
ins
xor
loope
jne
mov
cmp
inc
push
(bad)
and
popf
neg
cmps
mov
mov
(bad)
in
xor
cmc
repnz
test
into
sub
sbb
rcr
push
or
scas
inc
cmc
pop
mov
mov
dec
push
(bad)
std
jnp
dec
fstp
sub
stc
xchg
fcom
xor
mov
jno
std
mov
add
(bad)
jne
jmp
loope
and
mov
push
leave
pop
test
mov
movs
loop
mov
mov
inc
dec
movs
bound
mov
fdiv
adc
mov
xor
xor
mov
xor
dec
mov
hlt
pop
dec
mov
push
lahf
sub
enter
mov
inc
xchg
jmp
add
ds
pop
push
pop
jl
and
mov
inc
iret
jmp
xchg
lods
repnz
jp
xchg
int3
loope
push
js
(bad)
xor
jp
xchg
xchg
jp
mov
(bad)
sub
pop
popa
push
push
stc
mov
pushf
sub
cmp
jecxz
add
sub
outs
mov
ds
adc
add
cli
retf
jne
repz
or
mov
int
ja
mov
jge
pop
sub
ficomp
sti
mov
aaa
push
mov
test
pop
mov
mov
enter
or
in
gs
adc
push
arpl
jns
add
dec
pop
push
jo
add
sbb
aaa
sub
cmps
dec
sahf
inc
(bad)
call
out
or
fs
iret
mov
psllq
mov
in
out
adc
sti
pop
pop
xchg
jbe
fcom
lahf
js
into
imul
inc
jb
sub
mov
shl
push
push
stc
sbb
sbb
xchg
mov
push
cld
cmp
jle
fucom
xchg
and
mov
ret
mov
pop
sub
xor
cmp
mov
xor
mov
out
pop
sub
pop
mov
into
call
loop
clc
movs
cli
ja
jns
in
or
dec
jne
mov
add
pop
mov
xchg
shl
(bad)
cmc
shl
xchg
into
inc
les
adc
in
jmp
cmp
add
jb
std
dec
std
(bad)
aam
cmc
rol
jo
push
jmp
and
clc
push
dec
xor
xor
test
and
test
test
jle
test
xor
arpl
ret
inc
adc
cmp
rcr
jae
mov
adc
xchg
jae
loopne
pop
and
jbe
out
sub
movs
outs
loopne
jmp
adc
je
add
fldlg2
jle
call
xor
test
mov
jb
clc
and
outs
inc
test
add
repz
inc
movs
ins
pop
fcmovnb
shl
pop
retf
fwait
jg
mov
mov
mov
xor
xor
mov
jmp
and
movs
cs
je
jmp
mov
mov
add
out
mov
mov
rcl
int
mov
loope
push
pusha
sub
cwde
imul
js
(bad)
cmovle
ficom
pusha
and
add
ret
rcl
sbb
call
cmp
test
fucomp
repz
outs
mov
mov
inc
(bad)
mov
movs
jp
gs
enter
ins
shr
rol
dec
push
repz
aad
adc
fnsave
in
mov
test
xchg
xor
mov
add
je
fmul
adc
pop
ffree
mov
mov
int3
pop
out
xor
inc
lock
stos
mov
rcl
xor
fmul
push
pusha
pop
pop
jno
mov
pop
jae
sub
leave
mov
mov
and
xchg
xor
arpl
add
push
sub
fst
or
mov
in
dec
cs
aaa
test
dec
add
daa
cmp
pop
mov
mov
cmps
mov
scas
push
faddp
jp
dec
retf
jge
ror
vlddqu
dec
sub
inc
mov
gs
inc
cmps
jl
xchg
std
jle
mov
pop
push
xor
enter
lahf
sbb
mov
jge
fbld
loop
xor
int
dec
ins
sti
sbb
jg
aaa
mov
mov
adc
ficom
stc
daa
inc
and
dec
push
fdivr
cmps
sar
xchg
call
xchg
cmp
inc
push
out
push
fcom
push
dec
rcr
enter
pop
jl
iret
dec
sub
xchg
jp
push
pop
mov
mov
jge
pop
ins
(bad)
je
dec
or
cmps
test
shl
out
call
jae
in
and
xchg
sbb
hlt
add
sar
or
aas
jns
outs
sub
js
les
retf
ret
lock
pop
arpl
jne
push
mov
not
ret
add
cmp
jecxz
int3
bound
jae
lods
fnop
pusha
pop
std
sbb
xor
xchg
test
xor
inc
lods
and
or
repnz
ds
xchg
shl
mov
pop
adc
movs
aaa
fwait
hlt
imul
hlt
dec
jge
outs
daa
shr
xor
out
mov
clc
loop
inc
fimul
gs
das
(bad)
ficomp
jnp
popa
or
ss
mov
dec
test
push
or
mov
adc
and
shl
push
fwait
inc
pop
push
inc
rcr
and
pop
cmovo
sub
sbb
cwde
fwait
pop
add
fdiv
push
add
and
dec
pop
popf
mov
ja
and
sahf
push
(bad)
push
imul
push
ficomp
aas
or
sub
sub
jecxz
out
movs
xor
loopne
popf
mov
fcom
(bad)
inc
mov
std
mov
call
sub
sar
out
into
movs
sti
les
fisub
inc
scas
push
call
xor
adc
xor
data16
fsub
mov
push
out
data16
bound
sub
push
or
sar
xchg
xor
jo
mov
cwde
inc
in
mov
(bad)
pop
fbld
adc
in
or
mov
mov
inc
pop
push
push
retf
push
into
sub
aaa
in
mov
adc
fst
mov
jge
fldcw
setnp
shl
adc
pushf
cwde
add
mov
test
and
mov
imul
in
xchg
cmp
iret
fiadd
repz
lods
push
fcmovb
ins
cwde
pop
cmp
movs
dec
mov
jb
fsubr
xor
pop
dec
outs
clc
mov
or
sbb
jns
cdq
ret
(bad)
(bad)
cmp
mul
inc
sbb
jb
dec
cmp
std
fs
repnz
fidivr
or
xor
call
fcom
or
jmp
adc
lods
sub
jmp
add
mov
sbb
mov
jno
ja
xor
fld
xchg
mov
jb
adc
cmp
jl
jns
movs
push
aad
push
jl
neg
cmp
cli
rcl
call
xchg
stos
aaa
mov
fisttp
dec
std
mov
(bad)
leave
pusha
test
pop
inc
push
bound
mov
adc
inc
test
and
call
inc
into
hlt
inc
cmp
xchg
and
xchg
add
pusha
inc
adc
sbb
xor
cdq
xchg
stos
and
push
pop
fidiv
lds
shr
stos
mov
(bad)
mov
fs
sub
xchg
pop
hlt
xchg
fld
mov
es
and
jle
inc
pop
lds
aas
jmp
push
pusha
(bad)
sub
dec
xchg
xchg
pop
mov
(bad)
xchg
jae
cmp
push
addr16
out
fmulp
ja
in
add
add
add
add
add
dec
add
add
add
add
add
add
add
add
add
add
test
add
add
(bad)
add
add
add
sbb
add
or
pop
add
add
add
cmp
add
clc
add
add
add
add
add
add
inc
cmp
add
push
add
add
add
add
out
add
xchg
add
jmp
add
add
add
jg
int
add
add
add
add
add
add
add
add
add
add
push
add
add
add
aas
lods
add
add
sbb
cli
add
add
add
add
add
add
add
add
je
fmul
sbb
je
in
jns
mov
outs
adc
fild
dec
inc
or
xor
add
xchg
sbb
jmp
adc
movs
test
adc
ret
js
add
retf
leave
add
cmp
cdq
jl
pop
sbb
icebp
pop
push
push
stc
adc
push
and
sahf
push
push
mov
pop
mov
ret
lds
test
sub
aam
xchg
and
mov
cld
sbb
loop
ins
xchg
sub
sar
out
test
jb
lahf
lea
int
fsubr
hlt
add
jb
inc
and
repz
pop
int
add
(bad)
mov
loop
inc
push
or
das
add
lock
leave
add
mov
or
fsub
out
jbe
cmc
ins
loopne
inc
clc
push
outs
call
push
inc
xchg
aaa
lahf
xor
mov
mov
dec
pushf
pop
aaa
mov
movs
jne
mov
add
ins
leave
xchg
push
aaa
daa
mov
mov
mov
es
mov
pop
cli
add
dec
pmaddwd
pop
mov
call
addr16
dec
mov
sub
xchg
dec
outs
adc
xchg
lahf
inc
xchg
or
movs
(bad)
int3
ret
ins
dec
outs
jg
add
loope
retf
xor
arpl
test
push
adc
out
popf
adc
cli
mov
loopne
pop
lahf
add
xchg
jmp
pop
lods
xor
mov
lock
pushf
cmps
xchg
mov
mov
adc
rol
pop
push
cmp
arpl
push
mov
xlat
dec
popa
mov
scas
rol
fistp
(bad)
movs
ins
mov
or
nop
jmp
cmp
clc
rcl
cmp
inc
sbb
mov
sub
call
aas
cmp
sub
dec
mov
jae
mov
lods
xchg
xlat
ins
xor
fcom
pop
xor
fdiv
test
(bad)
and
movs
test
push
sub
bound
cmp
cld
js
clc
fadd
mov
jo
jle
fsubp
inc
inc
int3
add
mov
lods
mov
cmp
cmp
cmp
sbb
push
jmp
sahf
jbe
jne
mov
jnp
sar
imul
lods
inc
xchg
xchg
hlt
fs
dec
stc
popa
aad
mov
adc
(bad)
rcr
loopne
(bad)
cmp
rcr
jmp
jne
sbb
sbb
cld
bound
and
test
addr16
xchg
jbe
dec
adc
fisub
out
ins
or
adc
(bad)
mov
mov
jns
sub
in
in
pop
mov
and
mov
pop
dec
fadd
mov
lea
push
add
sub
ins
mov
int
jl
xor
icebp
cmp
cmc
les
add
xor
dec
dec
lds
test
cmp
xchg
idiv
mov
pop
movs
jnp
adc
sbb
nop
call
push
scas
les
mov
xchg
sti
or
add
(bad)
nop
xchg
rcl
dec
imul
cmc
push
out
fdivr
(bad)
sbb
xor
cmp
stos
test
jl
pop
jp
mov
fsubr
cmps
cmp
adc
fdivr
xchg
lock
hlt
mov
jno
jno
jmp
in
pusha
das
jno
xchg
int3
loopne
or
inc
out
mov
push
sub
punpcklwd
dec
pop
fld
xchg
ror
in
cdq
cli
sbb
xor
je
dec
mov
mov
sub
nop
xor
dec
push
and
add
addr16
adc
mov
arpl
jb
leave
shl
push
jge
cdq
ss
sub
jecxz
xor
mov
pop
add
mov
jg
push
inc
sub
jl
jae
adc
push
pop
or
popa
push
pop
and
push
cmps
cs
sub
in
popa
test
in
adc
jae
jmp
jg
xchg
pop
push
mov
jo
push
aas
ss
cmps
fdivr
adc
push
adc
out
shl
inc
or
pop
psubusb
sub
inc
ds
es
mov
inc
pusha
push
xchg
inc
xor
pop
dec
dec
xlat
push
loop
fsubr
test
ret
test
push
cwde
xor
outs
mov
mov
xor
fnstcw
add
cmp
jbe
retf
inc
add
xrelease
xor
out
js
adc
sub
pop
sub
je
mov
aas
gs
jp
repz
sbb
push
or
jno
into
popa
inc
pop
dec
fstp
xor
adc
xchg
lods
adc
mov
inc
or
les
jmp
fstp
jo
jmp
std
adc
sbb
imul
lds
(bad)
cmp
xchg
inc
sub
inc
mov
lods
leave
dec
xor
aam
cwde
mov
dec
in
call
ins
jle
sbb
adc
xor
push
or
pop
jnp
lods
iret
(bad)
push
ins
cs
jmp
in
psrld
rcl
inc
(bad)
jnp
xor
inc
and
mov
(bad)
shl
sub
arpl
xor
into
imul
cli
pop
xor
and
rcl
iret
adc
rcr
xchg
imul
xchg
std
mov
sub
add
push
(bad)
cmp
inc
pop
sbb
in
inc
inc
pop
aaa
sti
push
cmp
test
(bad)
repz
int3
std
leave
bound
xchg
ffreep
fucompp
(bad)
dec
loop
pop
pop
dec
fs
dec
lds
jno
lea
xchg
shl
(bad)
cld
xchg
dec
push
push
and
fstp
xor
scas
push
push
pop
shl
mov
scas
lock
push
fldenv
or
outs
pushf
and
cmp
into
pop
repz
popf
inc
iret
inc
jge
ja
or
(bad)
xlat
in
hlt
cmp
xor
push
lahf
xchg
outs
mov
ds
xchg
mov
pop
xor
out
xor
js
jp
pop
mov
pop
pop
adc
mov
ja
fistp
jmp
dec
push
sti
sbb
inc
lods
imul
adc
and
rol
popf
add
retf
and
imul
xchg
scas
out
bound
dec
mov
pop
aas
stos
xchg
mov
ins
(bad)
sti
shr
or
frstor
mov
mov
sub
enter
sbb
mov
je
cli
xor
sbb
push
xchg
into
xlat
outs
mov
cmp
jmp
addr16
fild
jne
in
fld
outs
mov
(bad)
out
lock
idiv
cmps
imul
mov
mov
xor
jns
sbb
push
out
rcl
aas
outs
ficomp
dec
pusha
pop
jne
adc
cmp
sub
sbb
inc
mov
stos
dec
sbb
pop
loop
shl
ins
cmp
jle
pop
cwde
add
mov
loop
dec
cmc
sti
inc
push
push
mov
ins
xor
jp
les
dec
mov
and
push
(bad)
sbb
repz
ins
repnz
stos
jge
leave
cmp
mov
adc
sysenter
mov
mov
daa
pop
test
call
cmc
pop
push
add
or
popf
mov
and
adc
test
jp
in
and
test
jmp
mov
dec
fwait
pop
adc
rol
jmp
and
mov
loopne
sahf
mov
repnz
xor
mov
mov
cmp
addr16
bound
adc
out
jnp
ret
sbb
push
push
sbb
ret
mov
push
inc
mov
outs
lock
in
out
pop
out
jmp
add
cmps
sub
(bad)
call
mov
hlt
adc
iret
rol
sub
imul
neg
inc
mov
clc
pop
rol
ja
cmp
retf
mov
xor
jo
test
(bad)
mov
xchg
repnz
fidiv
jnp
xchg
cmps
mov
lods
gs
dec
in
inc
add
shl
inc
pop
fistp
cmp
pop
jl
fwait
(bad)
jmp
mov
ret
shrd
mov
test
sbb
inc
aam
jl
mov
pop
add
cmp
aas
xor
jl
adc
cs
sbb
pop
call
scas
arpl
out
push
push
hlt
xchg
out
(bad)
pop
dec
push
dec
sbb
bound
push
push
xor
adc
pop
icebp
xor
or
pop
sbb
mov
jecxz
mov
lods
cmp
mov
ss
or
fisttp
ins
cdq
and
xchg
test
test
dec
test
ret
and
jnp
fisubr
je
pop
out
sub
ins
dec
test
xchg
fwait
dec
mov
sub
out
dec
jbe
inc
add
lods
push
sti
lods
aaa
in
test
dec
sbb
pop
adc
mov
push
add
gs
ret
(bad)
pushf
test
push
leave
mov
outs
data16
int3
ds
ins
and
les
mov
mov
push
jp
cmp
arpl
movs
repz
inc
mov
add
je
or
push
rcr
test
sti
pop
out
mov
daa
test
inc
cmp
or
and
lods
inc
jmp
cmps
cmc
rol
xchg
ret
aam
fwait
xchg
push
out
xor
add
aad
into
sbb
add
sub
push
adc
jnp
or
xor
add
sub
mov
mov
or
or
jge
sbb
adc
mov
(bad)
xor
into
mov
mov
fwait
ss
xor
lods
std
in
push
repnz
repnz
adc
xlat
es
lea
push
mov
fmul
fwait
pop
pop
mov
push
xchg
out
aaa
add
jno
add
push
jae
push
jne
inc
repz
aaa
mov
test
sti
mov
push
adc
jmp
test
(bad)
mov
in
jne
mov
leave
fist
sbb
lock
daa
xlat
shl
dec
cli
jge
loope
xchg
xlat
(bad)
lea
xchg
out
fist
js
pop
mov
add
add
bound
call
popa
add
add
add
in
add
add
add
and
add
add
pop
add
add
add
add
add
pop
add
or
add
repz
add
add
add
clc
add
add
lds
add
add
sldt
add
add
add
mov
add
sahf
add
add
sub
add
add
fadd
add
add
add
add
push
sbb
lea
xlat
dec
cmp
inc
and
jae
nop
cdq
stos
mov
in
retf
bound
jno
cmps
sub
adc
int
pop
loopne
sbb
jp
jge
pop
mov
js
dec
push
add
xrelease
mov
(bad)
not
adc
xchg
arpl
sar
pushw
mov
mov
push
sub
sbb
mov
push
adc
mov
into
cmp
xchg
shl
dec
retf
jae
mov
cmp
jbe
call
xor
aad
fistp
shr
xor
push
jmp
js
mov
stos
push
sbb
push
addr16
aad
adc
je
in
inc
mov
mov
out
pop
add
mov
lahf
xchg
imul
sub
loop
je
mov
aaa
mov
cmp
js
jg
cdq
scas
pop
pop
xchg
fistp
add
mov
shl
or
leave
addr16
add
or
dec
mov
inc
mov
retf
lods
add
adc
mov
sar
cmp
cmp
and
xchg
dec
or
leave
jecxz
push
test
repz
jp
aad
dec
fwait
(bad)
lds
add
jge
retf
mov
in
int3
fcomp
and
mov
in
mov
icebp
int3
xchg
cmc
mov
jmp
cmp
mov
rol
sub
pop
adc
sbb
fldenv
adc
sub
fadd
mov
cmp
add
fucomi
jg
cdq
push
mov
jns
adc
or
mov
jecxz
mov
mov
loopne
mov
or
clc
mov
mov
ror
push
sti
or
imul
jmp
retf
js
push
cmp
rcr
and
lock
daa
icebp
sbb
mov
dec
std
xchg
out
popa
and
pusha
ror
adc
es
leave
or
cwde
neg
mov
ret
es
push
inc
scas
add
sar
mov
adc
sbb
sbb
dec
and
sbb
iret
cli
int
stos
int
cli
push
or
push
xchg
mov
jmp
cmps
xchg
dec
jle
push
mov
mov
dec
ret
dec
cli
or
popf
push
and
mov
cmp
pop
adc
jp
mov
cmp
adc
out
scas
inc
cmp
out
inc
mov
sub
xchg
cmp
test
lea
push
pop
xor
mov
in
sub
cld
xchg
leave
mov
mov
stos
sar
jg
imul
cld
adc
jecxz
push
add
inc
nop
pop
sbb
dec
gs
xor
out
aad
add
push
add
sbb
inc
dec
ficomp
xchg
outs
iret
test
lock
dec
push
int
and
push
rol
aaa
rdpmc
inc
push
xor
and
jbe
iret
sbb
adc
test
mov
ret
inc
je
scas
dec
daa
mov
inc
sbb
or
xchg
inc
mov
mov
add
jns
loopne
movs
push
mov
inc
sub
aas
ja
add
or
push
adc
sbb
adc
fsubr
push
cmps
dec
fsubrp
or
lds
sub
inc
in
or
adc
aas
in
(bad)
test
jmp
jmp
popa
and
nop
loope
test
sar
es
lds
aam
mov
std
push
out
test
pop
xchg
cmp
jno
mov
enter
leave
cli
mov
imul
repz
nop
add
(bad)
and
jne
das
and
xor
xor
into
cld
xchg
fdivr
fcom
lds
mov
rcl
aaa
imul
ret
sub
rcr
ret
imul
cli
test
inc
mov
cmp
cwde
cmps
jmp
sar
gs
movs
arpl
test
aaa
push
adc
xchg
daa
das
not
push
mov
retf
xchg
push
aad
sub
sti
push
pop
push
mov
leave
sahf
fld
dec
mov
pusha
bound
jns
push
or
push
xor
and
cdq
rcr
mov
lods
in
mov
jl
(bad)
mov
xor
test
loope
neg
loope
sub
xchg
icebp
dec
cmp
mov
sub
xchg
inc
retf
and
jns
clc
mov
daa
out
cmp
stc
push
shl
adc
ss
pushf
shl
outs
(bad)
push
jnp
test
dec
loop
out
(bad)
cmps
add
lock
test
xor
and
and
jbe
enter
mov
mov
dec
pop
cmp
scas
cmps
cmp
xor
cmp
add
cmps
(bad)
dec
inc
cld
hlt
dec
mov
adc
int3
lods
xor
add
sbb
add
stos
jne
outs
inc
imul
jl
mov
jecxz
push
jg
mov
dec
loope
adc
adc
rcr
or
cmp
es
lea
lea
(bad)
stos
imul
fwait
sub
mov
test
sub
mov
jne
fstp
test
aad
std
fadd
mov
adc
mov
dec
jbe
leave
or
sbb
fwait
jo
dec
fbstp
outs
or
(bad)
fcmovnu
jp
sub
cli
loop
call
xor
jo
(bad)
shr
cld
mov
mov
xchg
hlt
repnz
jl
imul
jbe
mov
(bad)
jp
jg
(bad)
cmp
retf
or
sti
adc
inc
in
fnstsw
mov
daa
mov
inc
sbb
dec
cmp
sub
jle
jp
out
cmp
imul
sub
sti
in
adc
idiv
pop
dec
movs
or
mov
cmp
lods
jnp
sbb
mov
imul
and
xchg
les
cmps
xchg
repnz
popf
xor
xor
adc
mov
sub
lds
out
arpl
dec
mov
shl
call
inc
aad
dec
sbb
cli
je
sub
sub
fisub
cwde
adc
clc
fst
movs
pop
int
mov
push
xor
(bad)
pop
mov
int
and
cdq
les
push
mul
shr
pusha
xor
popf
jle
in
sub
std
push
mov
pushf
ds
sbb
addr16
push
mov
sahf
xchg
(bad)
aaa
cmp
cmps
test
pushw
mov
adc
inc
arpl
sbb
xchg
bound
jbe
stc
xor
inc
or
ss
stc
cmp
xor
fst
push
adc
xor
mov
cmp
retf
pusha
xchg
daa
inc
sbb
icebp
jb
(bad)
out
aad
sbb
(bad)
cmc
inc
push
mov
sbb
clc
xchg
sub
les
int3
add
outs
inc
int3
adc
call
ins
push
inc
arpl
mov
xchg
int
retf
aam
rol
out
dec
sub
mov
mov
cmp
lods
and
cli
mov
xor
push
(bad)
ss
into
cwde
inc
fadd
jl
sbb
pop
add
cmp
enter
rol
(bad)
jae
xchg
xor
aaa
pop
push
jnp
mov
cld
dec
fnstenv
xchg
sub
jle
stos
cmc
sbb
mov
xor
mov
jmp
cli
scas
les
mov
movs
jmp
or
inc
xchg
sahf
jo
or
clc
pop
retf
cmp
adc
dec
jmp
aam
pop
jbe
aas
aad
push
mov
xor
pop
xor
push
cs
mov
iret
fcmovne
mov
push
mov
mov
xchg
xchg
clc
xchg
cmc
aam
push
sub
cdq
cmp
jnp
xor
shr
aad
dec
repz
mov
fs
mov
outs
popa
test
inc
mov
scas
jae
sahf
cmc
mov
scas
lods
sar
scas
int3
mov
add
lahf
adc
xchg
icebp
or
mov
out
rol
mov
sub
mov
cmp
adc
mov
cli
add
xor
lahf
test
gs
mov
out
in
call
(bad)
jb
ds
pop
jb
jno
sbb
sub
pop
aas
ficom
jecxz
fisttp
xchg
mov
gs
dec
call
jmp
repz
fmul
or
xor
push
clc
call
cmc
inc
push
mov
xchg
mov
mov
rcr
inc
sbb
lods
ror
pop
fiadd
jb
mov
cmp
pop
sbb
sbb
inc
or
push
popa
add
daa
mov
gs
mov
mov
lahf
pop
xchg
ds
fstp
mov
imul
leave
and
imul
mov
xchg
inc
out
test
arpl
jp
and
sub
loop
jbe
dec
cmps
ffreep
imul
jnp
inc
mov
lea
aad
push
pop
mov
cmp
push
mov
popa
into
aam
and
mov
loopne
pop
div
sti
mov
push
pushf
jp
ror
test
sbb
nop
es
(bad)
adc
push
sub
pop
int3
sahf
and
fldcw
nop
scas
pop
add
xchg
mov
out
dec
fs
(bad)
(bad)
xchg
test
jle
and
bound
icebp
inc
push
xchg
ins
fs
scas
and
cmp
retf
or
jno
imul
mov
mov
cdq
stos
out
sbb
adc
shr
jo
xchg
dec
inc
dec
sub
mov
xchg
stos
ja
mov
les
mov
ja
jns
dec
mov
xchg
sbb
lahf
sub
stos
xor
fnstcw
sub
aaa
push
je
cmps
mov
hlt
cld
data16
push
retf
sub
sub
mov
test
out
jo
shl
add
call
add
push
rcl
cmps
ds
push
push
adc
nop
jae
inc
mov
inc
add
mov
stos
xor
jl
rcl
pusha
ret
cmp
iret
and
cmp
leave
or
ret
push
fild
fcom
and
xchg
xor
sub
sub
adc
cdq
sbb
xor
push
or
add
add
in
add
add
add
add
add
add
push
jns
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
inc
add
add
add
xchg
add
add
add
add
add
add
sti
pop
sub
add
add
lea
add
add
add
add
lock
add
add
mov
add
add
xor
add
add
movs
add
sub
add
add
add
add
mov
add
add
add
add
add
or
add
add
add
add
add
add
add
and
add
and
out
xchg
out
je
fsubr
cmp
push
mov
(bad)
imul
jge
loopne
or
sub
mov
add
sub
push
loop
jno
jecxz
dec
mov
sbb
jecxz
jo
push
call
xchg
cmps
sbb
std
xor
mov
bound
mov
or
sub
push
jg
inc
mov
jl
and
mov
in
ds
xor
xor
add
leave
mov
int
repnz
mov
cmp
pop
out
lds
stc
outs
mov
sbb
and
out
dec
dec
mov
mov
add
test
out
dec
mov
test
push
pop
mov
sub
and
imul
xchg
pop
mov
retf
push
rcr
mov
and
push
xchg
push
les
mov
test
jno
push
jnp
mov
pop
xor
sbb
dec
leave
cs
ret
in
xchg
pop
loopne
int
test
jnp
cdq
mov
cmps
repnz
pop
mov
mov
aaa
add
pushf
rcl
idiv
std
jnp
outs
shl
int
mov
mov
dec
mov
xor
mov
dec
xor
jecxz
cmp
fwait
xchg
mov
jecxz
cmp
push
push
jp
sti
xchg
sbb
jle
(bad)
retf
adc
aam
stos
dec
add
pushf
cmp
or
inc
adc
(bad)
jbe
outs
outs
inc
and
mov
push
loop
cmp
sbb
out
enter
divps
sar
inc
pop
mov
inc
jnp
mov
clc
jp
push
ror
jo
mov
imul
and
push
push
inc
jnp
mov
pop
stos
adc
ror
jnp
and
fcomp
inc
inc
mov
dec
adc
(bad)
lods
sub
out
jns
jbe
cwde
jno
jmp
adc
mov
push
add
push
loopne
call
or
pop
sti
movs
and
push
int3
inc
add
ror
sub
mov
jle
bound
jb
popa
xor
call
daa
aad
add
xchg
test
mov
lods
out
push
ror
pop
leave
jp
adc
out
xchg
adc
(bad)
ins
xchg
add
pop
imul
dec
into
popf
push
aad
aas
push
inc
daa
mov
stc
cmp
ds
sahf
push
jmp
inc
push
(bad)
clc
ins
std
and
jmp
jecxz
push
vmovaps
add
pop
push
cmps
daa
loopne
mov
fimul
icebp
push
iret
sbb
or
mov
inc
leave
xchg
mov
adc
jl
gs
out
dec
add
jmp
xor
mov
jl
in
mov
mov
int
rol
aas
pop
dec
mov
jnp
repnz
mov
and
or
jns
and
call
jmp
js
fcomip
gs
fsub
ror
cmp
xor
in
and
push
sbb
xchg
jl
in
(bad)
out
mov
iret
(bad)
pop
mov
cmovle
xchg
pop
xchg
repnz
aas
cdq
mov
inc
dec
add
inc
add
jle
addr16
xor
movs
mov
sti
mov
lods
ja
cmp
pop
sbb
mov
shl
mov
iret
ret
ret
inc
and
in
aas
aas
gs
adc
pop
lahf
das
(bad)
das
aas
imul
(bad)
call
jmp
jl
es
push
mov
push
stc
sbb
xchg
mov
daa
cmps
adc
sbb
test
add
test
mov
aad
sti
(bad)
pop
ret
retf
sbb
adc
sbb
xchg
das
dec
cmp
dec
pop
test
iret
xchg
rcl
sbb
cli
test
or
inc
lods
mov
frstor
fsubr
into
xor
push
fcmovne
push
pusha
jmp
cld
iret
pusha
dec
iret
push
cwde
dec
inc
pop
pop
sbb
cmp
imul
xor
out
push
sub
xor
sub
nop
repz
stos
mov
cmp
or
cli
jge
and
retf
inc
xor
sub
cmp
(bad)
mov
mov
mov
(bad)
and
scas
and
push
mov
dec
add
movs
nop
loope
jge
mov
mov
add
push
cmp
add
adc
imul
sbb
(bad)
xchg
pop
fincstp
es
pop
test
mov
cli
pop
and
nop
sub
jecxz
mov
jne
jle
rcl
in
adc
mov
ret
into
ja
(bad)
popf
icebp
push
mov
mov
(bad)
jge
inc
scas
ficomp
or
adc
outs
inc
jo
ins
sub
sbb
ins
push
jp
cmp
pop
and
retf
retf
push
sub
out
add
iret
test
pop
scas
sub
movs
(bad)
cmp
outs
xor
test
dec
mov
fwait
push
loopne
int
(bad)
aam
jo
jno
pop
lods
and
and
xchg
shl
mov
or
or
pop
sbb
ins
rol
call
mov
pop
outs
into
retf
sbb
or
mov
arpl
xchg
adc
(bad)
jp
jg
nop
bnd
fimul
retf
imul
dec
dec
mov
xor
mov
imul
cld
xor
xlat
pop
out
or
iret
imul
xor
pusha
mov
push
xchg
xchg
dec
arpl
imul
mov
(bad)
lods
jmp
iret
pop
popf
aad
add
or
adc
push
add
add
jmp
mov
pop
mov
pop
push
add
clc
push
push
fdivr
adc
xchg
movs
push
out
arpl
movs
push
add
das
inc
fcom
push
push
int3
shr
mov
das
push
xchg
adc
pop
shl
nop
adc
fiadd
adc
mov
retf
dec
mov
xchg
cld
loop
sbb
xor
ss
ins
repnz
mov
hlt
sbb
cmp
out
(bad)
pop
push
outs
or
icebp
jp
movs
xchg
dec
bound
jp
push
or
push
add
mov
add
cwde
xchg
pop
bound
mov
fsubr
mov
xchg
pop
test
mov
out
pusha
adc
sub
pushf
jge
jmp
js
ds
or
pmaxub
ret
outs
mov
mov
fiadd
in
rol
mov
mov
pop
xor
mov
mov
ja
dec
test
xchg
xor
movq
shr
mov
push
inc
inc
mov
xchg
sbb
dec
or
add
ja
xor
sub
test
lods
stc
mov
fistp
mov
xor
(bad)
fadd
jb
fisttp
jmp
mov
cmps
gs
in
add
pop
stc
pop
sub
daa
pop
das
push
add
fwait
push
and
(bad)
retf
addr16
and
xchg
test
outs
push
cmp
push
xchg
mov
(bad)
dec
and
ja
dec
popf
sbb
push
xor
fchs
pop
sysexit
mov
lahf
cwde
mov
jl
xchg
mov
jo
cdq
dec
xchg
pop
cld
pushf
fist
(bad)
xor
mov
pop
inc
dec
int3
inc
xor
inc
nop
les
and
mov
sub
test
cs
jb
sub
jbe
pop
idiv
jnp
push
dec
sbb
add
xchg
ret
push
stos
xor
mov
jl
and
push
mov
pushf
orps
icebp
out
cmp
xor
(bad)
mov
fcmovbe
xchg
mov
sbb
inc
xor
push
sahf
test
in
cmc
fadd
jno
bound
jl
cmps
test
call
adc
adc
adc
sub
nop
inc
cmp
ror
adc
and
inc
push
mov
rcl
push
lods
pop
inc
mov
stos
push
sbb
lods
adc
iret
loopne
stc
inc
mov
jno
movs
inc
in
cmc
dec
jb
icebp
scas
mov
neg
inc
jp
cdq
sub
mov
mov
sub
popf
adc
addr16
in
hlt
(bad)
add
and
sbb
jo
je
mov
pop
inc
jb
pop
xor
imul
mov
js
adc
imul
rcl
dec
aas
fnstsw
imul
dec
les
fcmovne
push
test
dec
(bad)
cmp
call
mov
inc
xor
pop
and
xchg
and
xchg
gs
or
jmp
sub
xchg
(bad)
bound
xchg
bound
sti
loopne
int3
inc
inc
out
nop
xlat
ja
test
pop
lea
pop
shr
xor
mov
push
cmps
icebp
in
mov
push
push
fsub
call
imul
cmp
fcmovbe
in
jecxz
push
xor
inc
ffree
inc
xchg
jge
lea
pop
inc
daa
xlat
cmc
ja
shl
mov
mul
test
ins
xchg
mov
push
retf
lods
test
loopne
mov
daa
cmp
dec
cmp
mov
std
xchg
or
dec
pop
loope
aas
jp
nop
enter
push
jbe
mov
retf
mov
hlt
push
fisttp
push
imul
ins
jnp
call
and
sub
cmp
ret
pop
in
je
pop
jno
mov
stos
push
fwait
pop
rol
lock
xchg
fdiv
ret
iret
out
or
or
je
and
aad
inc
sub
mov
fwait
push
or
pop
mov
mov
push
movs
in
bound
lahf
shl
cmp
es
stos
mov
mov
fist
push
cdq
call
inc
push
scas
mov
test
and
dec
test
jg
test
div
test
adc
lds
mov
stc
mov
and
fisub
add
xlat
xlat
lds
and
dec
jns
sahf
movs
dec
sahf
popf
rcl
popf
xchg
sbb
test
pop
pushf
in
mov
push
ret
sbb
push
stc
xchg
sub
ror
add
add
add
jl
add
in
xor
add
add
add
jmp
mov
add
add
add
add
add
sub
xor
add
push
add
add
add
add
add
add
add
add
inc
or
add
pop
add
push
add
add
add
add
dec
add
leave
rcl
add
xchg
add
inc
pop
dec
push
inc
call
repz
lahf
pop
adc
mov
xchg
push
mov
push
pusha
and
dec
jns
popa
jmp
je
sub
sub
shr
mov
mov
(bad)
jbe
mov
mov
dec
mov
cld
or
cmp
add
xor
jmp
sub
cdq
adc
or
call
loop
ffreep
out
inc
mov
and
jmp
sti
fiadd
jns
xor
subps
ds
aas
in
and
inc
inc
xchg
jge
xchg
sub
mov
jle
mov
mov
js
fst
push
int3
dec
(bad)
div
cdq
dec
jg
mov
inc
dec
das
sub
push
dec
sar
sbb
imul
jbe
pcmpeqw
add
add
std
sub
dec
and
or
stc
jne
sbb
pushf
lahf
icebp
push
xor
icebp
retf
(bad)
mov
push
jmp
or
fwait
loopne
or
xchg
sbb
and
in
(bad)
mul
jecxz
arpl
(bad)
cli
shl
add
out
lods
mov
in
(bad)
mov
pop
fld
dec
sub
push
in
sub
cmps
in
and
js
add
mov
shr
mov
bound
mov
lods
stos
mov
xchg
into
mov
xor
and
mov
jp
in
and
in
nop
rcr
xchg
or
pop
cs
adc
push
mov
dec
in
xor
movs
neg
div
aad
ja
push
shl
daa
xchg
sbb
add
scas
dec
cmp
adc
stc
imul
retf
mov
jne
shl
jns
push
push
data16
push
pop
imul
div
mov
and
ror
add
push
or
push
cli
dec
jecxz
fidivr
retf
leave
retf
mov
aad
retf
neg
mov
cvtpi2ps
xor
std
or
loopne
lock
gs
call
(bad)
sti
ins
xor
out
sbb
pop
cwde
jne
movs
scas
out
jp
dec
adc
xchg
aaa
imul
addr16
xchg
xchg
lods
and
push
fsubrp
pop
ret
mov
shr
xchg
sub
aad
cmp
push
addr16
cmc
or
arpl
xchg
retf
add
adc
(bad)
in
inc
xchg
lea
rol
es
daa
mov
bound
sbb
sbb
out
xchg
pop
mov
cmp
test
enter
sar
cmp
fbld
test
retf
scas
mov
sub
mov
test
bound
test
mov
sar
mov
jl
mov
fsub
xchg
(bad)
dec
xor
lods
ins
mov
sbb
xchg
movs
fmul
mov
or
rcr
icebp
out
sub
xor
dec
jae
gs
ret
mov
xchg
pop
or
imul
mov
pop
cli
adc
mov
and
jae
loop
pusha
xchg
fdiv
sub
ficom
inc
adc
ins
not
stos
push
xor
mov
pop
jnp
jns
mov
loop
inc
outs
test
dec
pushf
add
cmp
cdq
movs
ins
fcmovbe
push
jne
ret
cs
cmps
ins
or
fmul
inc
xor
push
push
mov
pop
jb
jnp
push
sbb
aam
addr16
jg
test
add
or
pop
cdq
int
add
push
cmc
into
call
xchg
jo
mov
jne
mov
mov
xor
int3
ret
enter
(bad)
test
stos
out
pop
cmp
into
aam
rol
ror
rcr
loopne
add
inc
xchg
scas
popf
outs
sahf
(bad)
xchg
test
fdiv
in
dec
jl
popf
and
iret
add
push
push
sub
and
(bad)
scas
add
sub
adc
into
loope
inc
sub
addr16
mov
adc
xor
in
cmp
rcr
mov
mov
inc
arpl
cld
test
lods
sti
pusha
int
mov
out
pop
icebp
mov
aas
enter
inc
push
out
nop
jb
mov
cmps
sahf
imul
(bad)
fisttp
(bad)
(bad)
jp
and
inc
mov
cmp
jns
pop
scas
xor
xor
adc
mov
retf
int3
fld
xchg
jge
repnz
shl
retf
inc
xchg
mov
scas
leave
dec
cmp
fwait
leave
xor
mov
aam
cmc
rol
cmp
mov
push
pop
ret
mov
jp
dec
ret
cmp
fcomip
(bad)
out
mov
sub
push
push
jle
(bad)
retf
cwde
push
es
cmp
jo
xchg
dec
shr
push
xchg
imul
push
mov
push
pop
int3
cmp
int3
xchg
imul
mov
sbb
icebp
mov
jbe
inc
fistp
jl
shl
test
out
inc
(bad)
rcr
sbb
pop
xor
push
clc
ret
mov
test
jge
mov
fsub
push
or
repz
je
or
sub
inc
pop
out
arpl
add
mov
push
test
cmps
inc
cmp
inc
popa
xchg
hlt
retf
fsub
sub
sbb
mov
jl
sbb
pop
push
add
retf
loope
and
imul
int3
mov
pop
adc
sbb
scas
dec
xchg
add
jl
fcomp
xchg
pop
mov
sub
and
outs
fisubr
xor
repnz
scas
dec
jnp
mov
pushf
or
out
ins
cmp
(bad)
je
lods
fild
xchg
mov
aaa
jbe
push
push
cmp
push
add
inc
jge
popf
or
pop
xor
lods
and
adc
icebp
outs
mov
push
and
jmp
push
or
or
in
shl
mov
sub
mov
inc
push
inc
imul
pop
ins
mov
(bad)
jecxz
inc
int
cmc
add
dec
fdivr
movs
and
out
stc
leavew
push
stos
in
inc
in
pop
xor
lock
jge
pop
pop
jmp
fsub
pop
push
int3
sbb
add
jns
push
dec
fistp
and
or
pushf
sbb
xlat
sub
xchg
or
mov
and
add
test
dec
cli
cmp
aad
fnstenv
mov
jae
mov
add
mov
or
ss
xchg
rcl
jge
mov
push
movs
pop
fbld
out
sbb
ja
add
pushf
addr16
lock
les
imul
sub
(bad)
cdq
xlat
neg
test
stc
mov
or
pop
add
ss
jb
popa
add
ins
movs
test
gs
aad
and
sub
push
mov
mov
dec
mov
jae
xchg
mov
push
push
cdq
cmps
mov
push
mov
jmp
sbb
mov
sbb
cli
push
ds
out
fmul
pop
pop
or
or
jae
or
pop
call
clc
fidiv
dec
sub
pop
test
inc
jle
repz
int
and
add
sub
and
das
cmc
out
pop
fidivr
loop
out
add
popa
jo
and
xchg
mov
dec
push
jmp
(bad)
leave
test
outs
mov
sahf
sti
xlat
mov
(bad)
pop
mov
ret
sub
pop
cwde
pop
jnp
push
call
or
addr16
jmp
ins
sub
call
pop
call
gs
cwde
xchg
repz
adc
ins
or
mov
push
jp
jmp
mov
dec
add
and
and
outs
jns
into
adc
test
mov
je
in
ins
sti
cdq
loopne
daa
loope
xchg
cwde
xor
les
jb
mov
outs
push
int3
test
add
mov
hlt
(bad)
and
xor
dec
pop
adc
jl
call
(bad)
neg
mov
sti
test
adc
enter
mov
not
popf
dec
xchg
lock
sbb
xchg
addr16
xlat
xchg
enter
adc
jp
fwait
pop
stos
dec
dec
fucomi
pop
jmp
pop
xchg
mov
and
imul
cwde
sub
jne
sbb
je
imul
sub
cli
sub
add
jne
stos
cmp
call
xor
and
addr16
leave
iret
mov
mov
jnp
sub
loop
mov
mov
sbb
outs
icebp
cmps
or
xor
int3
push
lock
je
mov
sar
mov
xor
into
inc
stos
retf
js
rol
xchg
(bad)
shl
mov
push
sahf
ror
std
mov
ror
cmp
imul
pop
jle
dec
and
mov
ins
fs
fwait
xor
nop
clc
jne
and
lock
stos
pop
cmp
test
aas
ror
data16
mov
cmc
add
cmp
mov
xlat
shl
add
jne
int3
mov
test
in
mov
pop
cdq
mov
jbe
ror
mov
mov
add
mov
sub
out
sub
in
dec
push
inc
pop
cmps
stos
mov
in
pop
or
daa
xor
leave
les
mov
(bad)
and
imul
clc
mov
pop
call
mov
xlat
loop
in
adc
add
nop
xchg
out
xchg
xor
ds
pop
xchg
movs
push
push
sbb
xlat
fidiv
icebp
je
ror
push
or
jl
push
add
xor
xor
sbb
pop
repz
outs
arpl
aaa
cmps
pop
push
in
aam
mov
test
jae
pusha
inc
cmp
add
leave
dec
fs
jle
jge
and
jnp
xchg
mov
cs
jmp
jp
jecxz
mov
xchg
jb
jge
push
mov
retf
inc
mov
dec
dec
(bad)
int3
rcl
pop
or
push
jg
xlat
mov
stc
cmps
pop
sbb
mov
icebp
mov
dec
das
inc
mov
enter
inc
iret
jmp
mov
mov
jle
rcr
push
xchg
adc
add
add
add
add
add
add
add
add
sub
add
int
lds
add
add
cmp
add
add
add
add
add
add
rcl
add
add
add
add
(bad)
add
push
add
add
inc
add
or
add
add
add
add
add
add
popa
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
sub
mov
mov
mov
mov
mov
add
sub
sub
imul
and
cmp
sete
and
mov
cmp
setl
and
mov
mov
mov
mov
mov
mov
sub
mov
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
jmp
mov
mov
mov
mov
mov
and
xor
or
test
cmovne
mov
jmp
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
sub
add
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
cmovne
mov
jmp
mov
lea
pop
pop
pop
pop
ret
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
mov
mov
mov
mov
call
mov
mov
mov
mov
jmp
nop
push
mov
push
push
push
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
sub
add
mov
mov
mov
mov
imul
and
cmp
sete
and
mov
mov
cmp
setl
and
mov
mov
mov
mov
mov
mov
mov
mov
sub
mov
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
jmp
mov
mov
mov
mov
mov
mov
xor
mov
mov
xor
xor
mov
and
and
mov
and
and
or
or
xor
mov
or
xor
or
and
or
test
mov
cmovne
mov
jmp
mov
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
call
mov
mov
mov
call
mov
mov
mov
call
mov
mov
mov
call
mov
mov
mov
call
mov
mov
mov
call
mov
mov
mov
call
mov
mov
mov
call
mov
mov
mov
call
mov
mov
mov
call
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
mov
mov
call
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmp
setne
and
mov
mov
mov
sub
mov
add
mov
imul
and
cmp
sete
cmp
setl
mov
xor
mov
xor
xor
mov
mov
and
and
mov
mov
and
mov
mov
and
mov
mov
or
mov
mov
mov
or
mov
xor
mov
or
xor
or
and
or
test
cmovne
mov
jmp
mov
mov
mov
test
cmovne
mov
jmp
mov
mov
mov
mov
mov
mov
add
sub
sub
imul
and
cmp
sete
cmp
setl
mov
xor
mov
mov
xor
xor
mov
and
and
mov
and
and
or
or
xor
mov
or
xor
or
and
or
test
mov
cmovne
mov
jmp
lea
mov
sub
mov
mov
call
add
mov
mov
mov
mov
mov
mov
mov
cmp
setne
and
mov
mov
mov
sub
mov
add
mov
imul
and
cmp
sete
cmp
setl
mov
xor
mov
xor
xor
mov
mov
and
and
mov
mov
and
mov
mov
and
mov
mov
or
mov
mov
mov
or
mov
xor
mov
or
xor
or
and
or
test
cmovne
mov
jmp
mov
mov
mov
test
cmovne
mov
jmp
lea
sub
mov
call
add
lea
mov
mov
mov
sub
sub
add
mov
mov
sub
mov
mov
mov
mov
call
add
mov
mov
mov
mov
mov
sub
mov
mov
mov
mov
call
add
mov
mov
cmp
cmovne
mov
jmp
mov
mov
mov
mov
mov
sub
mov
add
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
cmovne
mov
jmp
lea
mov
mov
mov
mov
sub
mov
mov
call
add
lea
mov
mov
sub
mov
call
add
lea
mov
mov
mov
sub
add
mov
mov
sub
mov
mov
mov
mov
call
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
sub
add
imul
and
cmp
sete
cmp
setl
mov
xor
mov
xor
xor
mov
mov
and
and
mov
mov
and
mov
mov
and
mov
mov
or
mov
mov
mov
or
mov
xor
mov
or
xor
or
and
or
test
cmovne
mov
jmp
mov
jmp
mov
jmp
mov
mov
mov
mov
mov
mov
sub
sub
add
imul
and
cmp
sete
cmp
setl
mov
xor
mov
mov
xor
xor
mov
and
and
mov
and
and
or
or
xor
mov
or
xor
or
and
or
test
mov
cmovne
mov
jmp
mov
mov
mov
mov
mov
add
sub
sub
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
cmovne
mov
jmp
mov
jmp
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
cmp
cmovne
mov
jmp
mov
mov
mov
cmp
cmovne
mov
jmp
mov
mov
mov
mov
jmp
mov
mov
lea
pop
pop
pop
pop
ret
mov
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
mov
mov
mov
mov
call
add
mov
mov
mov
mov
mov
mov
mov
mov
jmp
lea
mov
sub
mov
mov
call
add
mov
mov
mov
mov
mov
jmp
lea
mov
mov
mov
mov
sub
mov
mov
call
add
lea
mov
mov
sub
mov
call
add
lea
mov
mov
mov
sub
add
mov
mov
sub
mov
mov
mov
mov
call
add
mov
mov
mov
mov
jmp
mov
jmp
data16
push
mov
push
push
push
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
sub
lea
mov
mov
mov
movzx
mov
mov
mov
sub
mov
sub
add
sub
mov
movzx
mov
mov
mov
add
add
mov
add
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
sub
mov
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
jmp
mov
mov
mov
cmp
cmovne
mov
jmp
mov
mov
mov
cmp
cmove
mov
jmp
mov
mov
mov
mov
mov
sub
sub
add
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
cmovne
mov
jmp
mov
mov
cmp
setne
and
mov
mov
mov
mov
add
sub
sub
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
cmovne
mov
jmp
mov
mov
mov
test
cmovne
mov
jmp
mov
mov
call
mov
mov
jmp
mov
mov
cmp
cmovne
mov
jmp
lea
add
movzx
mov
mov
add
add
mov
mov
mov
mov
mov
mov
mov
mov
call
mov
mov
jmp
mov
mov
mov
mov
jmp
mov
add
pop
pop
pop
pop
ret
mov
jmp
data16
push
mov
push
push
push
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
sub
mov
mov
mov
mov
mov
mov
sub
mov
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
jmp
mov
mov
mov
cmp
cmovne
mov
jmp
mov
mov
mov
cmp
cmove
mov
jmp
mov
mov
cmp
cmove
mov
jmp
mov
mov
mov
jmp
mov
mov
mov
mov
mov
mov
sub
sub
add
imul
and
cmp
sete
cmp
setl
mov
xor
mov
mov
xor
xor
mov
and
and
mov
and
and
or
or
xor
mov
or
xor
or
and
or
test
mov
cmovne
mov
jmp
mov
mov
mov
cmp
sete
and
mov
mov
mov
mov
sub
sub
add
imul
and
cmp
sete
cmp
setl
mov
xor
mov
mov
xor
xor
mov
and
and
mov
and
and
or
or
xor
mov
or
xor
or
and
or
test
mov
cmovne
mov
jmp
mov
mov
mov
test
cmovne
mov
jmp
mov
mov
mov
sub
sub
mov
mov
jmp
mov
mov
cmp
cmove
mov
jmp
mov
jmp
mov
mov
mov
mov
mov
sub
sub
add
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
cmovne
mov
jmp
mov
mov
mov
mov
mov
mov
sub
sub
add
imul
and
cmp
sete
cmp
setl
mov
xor
mov
mov
xor
xor
mov
and
and
mov
and
and
or
or
xor
mov
or
xor
or
and
or
test
mov
cmovne
mov
jmp
mov
jmp
mov
mov
mov
mov
mov
sub
mov
add
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
cmovne
mov
jmp
mov
mov
mov
mov
mov
mov
sub
mov
mov
add
imul
and
cmp
sete
cmp
setl
mov
xor
mov
xor
xor
mov
and
and
mov
mov
and
mov
mov
and
or
mov
or
xor
or
xor
or
and
or
test
mov
cmovne
mov
jmp
mov
jmp
mov
jmp
mov
add
pop
pop
pop
pop
ret
mov
jmp
mov
jmp
mov
jmp
data16
push
mov
push
push
push
sub
mov
mov
mov
mov
mov
sub
mov
add
imul
and
cmp
sete
and
mov
cmp
setl
and
mov
mov
mov
mov
mov
mov
sub
mov
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
jmp
mov
mov
mov
mov
mov
and
xor
or
test
cmovne
mov
jmp
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
call
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
cmp
setne
and
mov
mov
mov
mov
sub
mov
add
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
mov
mov
cmovne
mov
jmp
mov
mov
mov
test
cmovne
mov
jmp
mov
mov
mov
mov
cmp
cmove
mov
jmp
mov
mov
mov
mov
jmp
mov
mov
mov
mov
mov
sub
mov
mov
mov
call
mov
mov
mov
jmp
mov
mov
lea
pop
pop
pop
pop
ret
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
jmp
data16
push
mov
push
push
push
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
sub
mov
mov
mov
mov
mov
mov
sub
mov
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
jmp
mov
mov
mov
cmp
cmovne
mov
jmp
mov
mov
mov
cmp
cmove
mov
jmp
mov
mov
mov
jmp
mov
mov
mov
mov
mov
sub
mov
add
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
cmovne
mov
jmp
mov
mov
mov
mov
mov
mov
mov
mov
sub
mov
mov
add
imul
and
cmp
sete
cmp
setl
mov
xor
mov
xor
xor
mov
and
and
mov
mov
and
mov
mov
and
or
mov
or
xor
or
xor
or
and
or
test
mov
cmovne
mov
jmp
mov
add
pop
pop
pop
pop
ret
mov
jmp
push
mov
push
push
push
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
mov
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
jmp
mov
mov
mov
cmp
cmovne
mov
jmp
mov
mov
mov
cmp
cmove
mov
jmp
mov
mov
cmp
cmovne
mov
jmp
mov
mov
call
mov
mov
jmp
mov
mov
cmp
cmovne
mov
jmp
lea
add
movzx
mov
mov
add
add
mov
mov
mov
mov
mov
mov
mov
mov
call
mov
mov
jmp
mov
mov
mov
mov
mov
add
sub
sub
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
cmovne
mov
jmp
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
sub
add
imul
and
cmp
sete
cmp
setl
mov
xor
mov
xor
xor
mov
mov
and
and
mov
mov
and
mov
mov
and
mov
mov
or
mov
mov
mov
or
mov
xor
mov
or
xor
or
and
or
test
cmovne
mov
jmp
mov
jmp
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
sub
mov
mov
jmp
mov
add
pop
pop
pop
pop
ret
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
jmp
int3
int3
int3
int3
push
mov
push
push
push
sub
mov
mov
mov
mov
sub
mov
add
imul
and
cmp
sete
and
mov
cmp
setl
and
mov
mov
mov
mov
mov
sub
mov
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
jmp
mov
mov
mov
mov
mov
and
xor
or
test
cmovne
mov
jmp
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
sub
mov
mov
mov
mov
call
add
mov
mov
mov
sub
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
mov
add
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
cmovne
mov
jmp
lea
pop
pop
pop
pop
ret
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
sub
mov
mov
mov
mov
call
add
mov
mov
mov
sub
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
jmp
nop
push
mov
push
push
push
sub
mov
mov
mov
mov
add
sub
sub
imul
and
cmp
sete
and
mov
cmp
setl
and
mov
mov
mov
mov
mov
sub
mov
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
jmp
mov
mov
mov
mov
mov
and
xor
or
test
cmovne
mov
jmp
mov
mov
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
cmp
sete
and
movzx
mov
mov
mov
mov
add
sub
sub
imul
and
cmp
sete
cmp
setl
mov
xor
mov
xor
mov
xor
mov
and
and
mov
and
and
or
or
xor
or
xor
or
and
or
test
mov
mov
cmovne
mov
jmp
mov
lea
pop
pop
pop
pop
ret
mov
call
mov
mov
mov
mov
jmp
nop
push
mov
push
push
push
sub
mov
mov
mov
mov
mov
mov
mov
mov
call
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
mov
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
jmp
mov
mov
mov
cmp
cmovne
mov
jmp
mov
mov
mov
mov
mov
jmp
mov
mov
mov
mov
mov
mov
sub
mov
mov
add
imul
and
cmp
sete
cmp
setl
mov
xor
mov
xor
xor
mov
and
and
mov
mov
and
mov
mov
and
or
mov
or
xor
or
xor
or
and
or
test
mov
cmovne
mov
jmp
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
mov
mov
add
imul
and
cmp
sete
cmp
setl
mov
xor
mov
xor
xor
mov
and
and
mov
mov
and
mov
mov
and
or
mov
or
xor
or
xor
or
and
or
test
mov
cmovne
mov
jmp
mov
jmp
mov
mov
mov
mov
mov
add
sub
sub
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
cmovne
mov
jmp
mov
mov
call
mov
mov
mov
sub
sub
mov
mov
mov
mov
mov
call
sub
mov
mov
mov
mov
mov
mov
mov
mov
add
sub
sub
imul
and
cmp
sete
cmp
setl
mov
xor
mov
mov
xor
xor
mov
and
and
mov
and
and
or
or
xor
mov
or
xor
or
and
or
test
mov
cmovne
mov
jmp
mov
add
pop
pop
pop
pop
ret
mov
mov
mov
mov
mov
jmp
mov
mov
call
mov
mov
mov
mov
sub
mov
sub
add
sub
mov
mov
mov
mov
mov
call
sub
mov
jmp
nop
push
mov
push
push
push
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
mov
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
jmp
mov
mov
mov
cmp
cmove
mov
jmp
mov
mov
jmp
mov
mov
mov
mov
mov
mov
add
sub
sub
imul
and
cmp
sete
cmp
setl
mov
xor
mov
mov
xor
xor
mov
and
and
mov
and
and
or
or
xor
mov
or
xor
or
and
or
test
mov
cmovne
mov
jmp
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
cmp
setne
and
mov
mov
mov
mov
sub
sub
add
imul
and
cmp
sete
cmp
setl
mov
xor
mov
xor
xor
mov
mov
and
and
mov
mov
and
mov
mov
and
mov
mov
or
mov
mov
mov
or
mov
xor
mov
or
xor
or
and
or
test
cmovne
mov
jmp
mov
mov
mov
test
cmovne
mov
jmp
mov
mov
jmp
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
sub
mov
mov
mov
cmp
cmovne
mov
jmp
mov
mov
mov
mov
mov
jmp
mov
mov
mov
mov
mov
sub
sub
add
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
cmovne
mov
jmp
mov
mov
mov
mov
mov
mov
mov
cmp
sete
and
mov
mov
mov
sub
mov
add
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
cmovne
mov
jmp
mov
mov
mov
test
cmovne
mov
jmp
mov
mov
mov
mov
jmp
mov
mov
add
add
sub
mov
mov
mov
mov
mov
call
sub
mov
mov
jmp
mov
add
pop
pop
pop
pop
ret
mov
mov
mov
mov
mov
mov
call
mov
mov
jmp
mov
mov
mov
mov
jmp
nop
push
mov
push
push
push
sub
mov
mov
mov
mov
mov
add
sub
sub
imul
and
cmp
sete
and
mov
cmp
setl
and
mov
mov
mov
mov
mov
mov
sub
mov
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
jmp
mov
mov
mov
mov
mov
mov
xor
mov
mov
xor
xor
mov
and
and
mov
and
and
or
or
xor
mov
or
xor
or
and
or
test
mov
cmovne
mov
jmp
mov
mov
call
mov
mov
mov
call
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
sub
sub
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
cmovne
mov
jmp
mov
jmp
mov
mov
mov
cmp
cmovne
mov
jmp
mov
mov
mov
mov
mov
mov
mov
cmp
cmove
mov
jmp
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
mov
call
add
mov
mov
mov
mov
mov
mov
cmp
cmove
mov
jmp
mov
mov
mov
mov
cmp
cmovne
mov
jmp
mov
mov
mov
mov
mov
sub
mov
add
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
cmovne
mov
jmp
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
sub
add
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
cmovne
mov
jmp
mov
jmp
mov
mov
mov
mov
mov
mov
mov
jmp
mov
jmp
mov
mov
mov
mov
mov
mov
sub
sub
add
imul
and
cmp
sete
cmp
setl
mov
xor
mov
mov
xor
xor
mov
and
and
mov
and
and
or
or
xor
mov
or
xor
or
and
or
test
mov
cmovne
mov
jmp
mov
mov
sub
mov
call
add
mov
mov
mov
mov
mov
mov
mov
sub
sub
mov
mov
mov
mov
sub
sub
add
imul
and
cmp
sete
cmp
setl
mov
xor
mov
mov
xor
xor
mov
and
and
mov
and
and
or
or
xor
mov
or
xor
or
and
or
test
mov
cmovne
mov
jmp
mov
jmp
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
jmp
mov
mov
mov
sub
mov
mov
call
lea
pop
pop
pop
pop
ret
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
jmp
mov
mov
mov
mov
mov
mov
mov
jmp
mov
mov
sub
mov
call
add
mov
mov
mov
add
add
sub
mov
mov
jmp
nop
push
mov
push
push
push
sub
mov
mov
mov
mov
sub
sub
add
imul
and
cmp
sete
and
mov
cmp
setl
and
mov
mov
mov
mov
mov
sub
mov
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
jmp
mov
mov
mov
mov
mov
mov
xor
mov
mov
xor
xor
mov
and
and
mov
and
and
or
or
xor
mov
or
xor
or
and
or
test
mov
cmovne
mov
jmp
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
cmp
setne
and
mov
mov
mov
mov
sub
sub
add
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
mov
mov
cmovne
mov
jmp
mov
mov
mov
test
cmovne
mov
jmp
mov
mov
mov
mov
mov
add
sub
sub
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
cmovne
mov
jmp
mov
mov
mov
mov
mov
add
sub
sub
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
cmovne
mov
jmp
mov
jmp
mov
mov
mov
mov
cmp
cmovne
mov
jmp
mov
mov
mov
mov
mov
mov
add
sub
sub
imul
and
cmp
sete
cmp
setl
mov
xor
mov
mov
xor
xor
mov
and
and
mov
and
and
or
or
xor
mov
or
xor
or
and
or
test
mov
cmovne
mov
jmp
mov
mov
call
mov
mov
mov
mov
mov
add
sub
sub
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
cmovne
mov
jmp
mov
jmp
mov
mov
mov
mov
mov
sub
mov
add
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
cmovne
mov
jmp
mov
mov
sub
mov
call
add
mov
mov
mov
mov
mov
sub
mov
add
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
cmovne
mov
jmp
mov
jmp
mov
mov
mov
mov
mov
add
sub
sub
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
cmovne
mov
jmp
mov
mov
mov
mov
mov
mov
sub
sub
add
imul
and
cmp
sete
cmp
setl
mov
xor
mov
mov
xor
xor
mov
and
and
mov
and
and
or
or
xor
mov
or
xor
or
and
or
test
mov
cmovne
mov
jmp
lea
pop
pop
pop
pop
ret
mov
call
mov
mov
mov
mov
jmp
mov
jmp
mov
mov
call
mov
jmp
mov
mov
sub
mov
call
add
mov
jmp
mov
jmp
nop
push
mov
sub
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
sub
mov
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
jmp
mov
mov
mov
cmp
cmovne
mov
jmp
mov
mov
jmp
mov
mov
mov
jmp
mov
add
pop
ret
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
mov
mov
mov
call
lea
mov
mov
mov
mov
call
mov
mov
mov
mov
call
sub
mov
mov
sub
mov
je
jmp
jmp
add
pop
ret
jmp
nop
push
mov
push
push
push
sub
mov
lea
mov
mov
mov
mov
mov
movzx
mov
mov
mov
sub
mov
sub
add
sub
mov
movzx
mov
mov
mov
add
add
mov
add
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
add
pop
pop
pop
pop
ret
nop
push
mov
push
push
push
and
sub
jmp
call
jmp
push
ret
jmp
push
jmp
push
jmp
push
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
out
or
frstor
add
test
lds
add
add
adc
icebp
add
(bad)
shl
xor
add
add
mov
add
mov
mov
mov
and
jle
add
xchg
call
cmps
mov
mov
push
xor
add
hlt
add
add
call
mov
mov
mov
(bad)
and
cwde
add
movd
pop
test
add
cmps
mov
sub
mov
mov
jg
sbb
mov
sub
mov
cmovno
mov
add
add
mov
das
fldenv
add
jmp
mov
and
ins
add
sub
mov
je
jmp
mov
js
es
mov
bndstx
popf
imul
mov
dec
dec
out
push
pop
in
and
jg
jmp
mov
sub
sbb
retf
inc
jle
jge
add
mov
add
mul
push
imul
cli
add
add
ins
hlt
add
xor
inc
rcr
pop
ror
and
add
jmp
cmc
adc
add
cmps
sub
mov
jmp
add
retf
ins
add
mov
sub
dec
in
pop
jg
jge
popf
add
mov
and
add
jbe
inc
mov
pop
je
jmp
mov
int
inc
fcmovnbe
mov
jne
lds
jmp
mov
sub
mov
or
test
add
add
lock
std
test
add
push
sbb
mov
out
(bad)
and
add
add
add
lea
mov
and
je
jmp
mov
sub
mov
fnstenv
add
add
add
mov
das
mov
inc
and
jg
jmp
mov
ins
arpl
and
add
jmp
mov
add
stos
cld
mov
inc
and
popf
test
add
add
add
add
mov
sub
mov
and
xchg
in
shl
add
jmp
jmp
and
add
add
mov
data16
push
add
jmp
retf
cli
mov
add
cmps
mov
mov
and
je
mov
mov
and
add
add
clc
jecxz
mov
je
jmp
loop
and
xchg
add
cwde
or
and
(bad)
ss
add
add
add
test
inc
push
xor
mov
and
test
hlt
add
sbb
add
mov
xchg
sbb
popf
jno
inc
and
retf
add
inc
jmp
xchg
push
xchg
cmps
add
mov
mov
and
add
adc
fs
add
add
das
add
int
add
stos
cld
mov
dec
pop
add
inc
mov
mov
cmps
add
add
mov
sbb
mov
lods
repz
add
out
xchg
jns
xchg
or
(bad)
mov
and
xor
int
push
cmp
rcr
popf
xor
add
mov
cld
add
ins
mov
mov
xor
mov
mov
mov
sub
call
(bad)
sub
daa
sub
cmp
bound
mov
add
fdivp
aam
push
add
sub
add
mov
and
cmp
sete
aam
or
add
paddb
mov
sub
xor
mov
mov
mov
hlt
shl
and
mov
and
mov
and
mov
push
dec
or
mov
call
inc
and
or
mov
pop
clc
jle
les
mov
jmp
lds
fmul
inc
call
sbb
add
adc
add
mov
mov
jmp
test
sti
inc
ror
mov
add
add
cld
sbb
jmp
mov
mov
mov
mov
mov
xor
add
movs
psubd
and
cmp
bound
add
setl
mov
and
repnz
add
test
inc
add
xchg
shl
in
push
pop
mov
fisub
mov
add
xchg
(bad)
fadd
push
add
add
xor
add
add
sub
test
add
add
cmp
sete
cmp
setl
mov
dec
cli
xor
or
mul
add
inc
ror
add
add
add
test
cwde
add
add
ins
inc
sbb
mov
xchg
add
mov
cmp
pop
inc
ror
add
cmps
xor
mov
jge
and
pop
xchg
add
(bad)
fs
add
mov
jmp
mov
mov
jmp
mov
sub
ret
pop
pop
pop
ret
mov
mov
mov
mov
mov
mov
or
icebp
adc
add
cmps
popf
movs
enter
inc
and
jmp
mov
add
in
and
add
add
test
add
mov
jmp
data16
push
mov
push
push
push
and
sub
jmp
push
jmp
push
jmp
push
jmp
push
ret
jmp
call
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
(bad)
sub
add
jg
and
add
add
add
mov
add
add
add
test
add
add
inc
add
adc
push
inc
retf
bound
inc
rol
and
add
add
jg
inc
mov
add
pop
(bad)
nop
add
add
in
and
nop
add
jmp
and
add
inc
and
bound
add
jmp
mov
out
dec
add
je
add
jmp
add
add
add
cmp
sub
sti
shr
bound
mov
add
jmp
hlt
dec
and
add
add
lods
aam
jl
popf
out
add
jmp
mov
mov
add
mov
and
jg
fwait
inc
retf
bound
aaa
sub
add
fisubr
and
jg
jmp
mov
sub
jnp
and
movq
add
add
add
and
test
and
and
jg
jmp
mov
sub
mov
rsm
ret
retf
add
repnz
sub
jns
and
jmp
add
add
dec
mov
aam
(bad)
pusha
bswap
popf
bound
add
add
pushf
mov
lds
add
add
mov
mov
lock
mov
mov
add
jb
inc
add
and
add
mov
lahf
test
add
add
mov
test
mov
out
sub
loop
and
mov
add
mov
test
bound
add
and
je
jmp
inc
test
and
mov
and
test
add
add
mov
sub
jns
and
je
pop
cmp
add
add
ds
mov
cmovg
add
jmp
mov
mov
cs
fisttp
test
sbb
add
ins
test
mov
mov
and
movaps
cmp
inc
jmp
mov
add
add
sbb
(bad)
pushf
mov
xchg
and
add
add
add
ffreep
mov
nop
add
lock
add
sub
adc
add
lods
mov
mov
call
jmp
inc
ror
scas
cmp
out
add
add
add
jne
add
setl
inc
rol
inc
cmp
add
inc
ror
add
data16
add
pop
fld
test
mov
jo
add
mov
mov
dec
mov
sub
and
sub
add
add
sbb
fwait
add
data16
add
mov
xor
mov
sub
lods
mov
mov
or
repnz
mov
and
and
mov
pop
retf
add
fcom
xor
(bad)
cdq
test
xlat
cli
cld
div
mov
cmp
and
imul
jmp
mov
jmp
mov
mov
mov
push
(bad)
push
or
ror
sub
add
retf
out
jnp
and
jmp
mov
or
adc
jb
inc
add
retf
add
daa
jge
test
add
test
add
add
mov
mov
mov
push
cmp
and
add
fwait
arpl
sbb
mov
add
mov
mov
mov
mov
mov
pop
sub
repz
add
inc
dec
mov
(bad)
repz
(bad)
inc
retf
sete
cmp
setl
mov
xor
mov
adc
xor
xor
jp
adc
(bad)
mov
push
add
arpl
lahf
or
xor
mov
or
sub
aas
or
and
dec
aaa
mul
and
inc
icebp
mov
jmp
mov
mov
mov
adc
jns
call
add
js
fwait
jb
inc
add
add
sub
js
fwait
mov
scas
repz
or
or
or
sbb
mov
xor
dec
repnz
and
mov
mov
adc
fdiv
les
mov
cld
pop
ins
lods
mov
sbb
aaa
icebp
mov
and
retf
add
jmp
lea
pop
pop
jle
ret
loop
mov
add
add
add
sbb
pop
and
repnz
push
cmp
push
jmp
data16
push
mov
push
push
push
and
sub
jmp
call
jmp
push
jmp
push
jmp
push
jmp
push
ret
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
fisttp
and
mov
mov
mov
and
mov
movs
mov
jl
and
adc
daa
call
mov
sub
pop
inc
and
mov
jg
jmp
pop
inc
loope
sub
mov
jmp
jmp
mov
pop
sub
mov
movaps
add
stos
pop
sub
mov
jg
jmp
mov
sub
sub
sbb
add
push
pop
sub
mov
inc
ret
test
add
mov
mov
mov
mov
jg
dec
add
fwait
loop
inc
sbb
lea
xchg
loope
and
js
rcr
add
sub
mov
or
add
add
mov
mov
mov
inc
and
xor
test
mov
pop
sub
mov
and
je
jmp
mov
and
sub
repz
stos
clc
sqrtps
add
fwait
add
and
sub
mov
je
cmp
sub
loop
jl
adc
mov
call
add
jmp
mov
sub
mov
je
jmp
mov
sub
mov
and
cmovno
add
mov
sub
mov
mov
lods
add
mov
cdq
add
add
ins
rcr
dec
cmp
cmove
mov
jmp
mov
mov
iret
jl
ins
add
add
(bad)
or
jmp
jl
and
(bad)
(bad)
(bad)
inc
inc
and
push
xor
add
aad
inc
and
add
imul
inc
cmc
add
mov
add
jl
arpl
add
ins
mov
inc
or
mov
jno
ret
lock
jmp
pop
inc
and
(bad)
(bad)
(bad)
inc
jp
pusha
push
xor
mov
call
(bad)
mov
dec
and
mov
jo
add
cmps
imul
xor
add
aad
clc
cld
in
xchg
and
mov
mov
mov
and
mov
clc
add
or
and
cmp
ficom
add
xchg
pushf
ror
std
adc
repnz
and
dec
push
mov
and
mov
adc
ins
call
test
fcom
add
xchg
add
je
adc
sti
icebp
test
jmp
add
pop
in
xchg
pop
in
jmp
pop
mov
add
pop
jl
jo
jl
jecxz
(bad)
add
mov
les
push
add
out
rol
add
mov
mov
add
pop
add
add
add
xchg
(bad)
test
mov
cmps
add
pushf
shl
dec
add
ret
xor
cmp
out
xor
adc
inc
and
adc
and
mov
and
mov
icebp
adc
sub
inc
(bad)
xor
and
or
retf
aam
dec
dec
mov
or
inc
push
adc
xlat
mov
rol
mov
lea
fwait
pop
pop
xor
pusha
dec
fs
cli
and
data16
push
mov
push
push
push
and
sub
push
jmp
push
jmp
call
jmp
push
ret
jmp
push
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
or
and
pop
add
mov
sbb
add
mov
mov
and
add
add
and
push
jmp
add
test
xlat
add
(bad)
call
inc
mov
mov
mov
(bad)
test
mov
mov
add
fld
mov
(bad)
add
add
(bad)
(bad)
mov
add
add
test
add
add
mov
add
add
jmp
mov
leave
add
add
cli
shr
xchg
mov
jg
cmps
add
xor
test
add
pop
push
test
add
loop
push
add
add
add
add
sub
mov
scas
add
out
rdtsc
push
add
add
add
add
sub
cmps
dec
mov
and
add
add
(bad)
xor
add
add
jae
data16
add
fsqrt
fbld
and
add
add
add
mov
pop
popa
lea
push
mov
push
(bad)
mov
add
add
clc
imul
add
and
mov
push
add
mov
and
add
sub
aam
and
add
sahf
jg
jmp
mov
sub
mov
loop
xchg
fild
add
xor
add
xor
sub
mov
and
dec
add
jg
jae
add
adc
add
ret
sbb
jb
mov
je
jmp
clc
test
add
fldcw
mov
sbb
sub
mov
and
add
jmp
aam
and
out
mov
fist
add
nop
call
add
add
adc
les
add
jg
jmp
mov
jb
(bad)
or
add
mov
add
jmp
(bad)
sbb
add
jmp
inc
scas
push
test
add
(bad)
jg
jmp
mov
mov
xchg
adc
test
test
add
jne
push
outs
pop
sahf
add
imul
push
add
add
pop
xor
gs
test
add
mov
add
jmp
mov
and
add
add
mov
je
jmp
mov
add
add
les
test
add
in
(bad)
(bad)
and
xlat
(bad)
jmp
xor
jmp
pop
mov
test
pop
add
add
jmp
fild
ja
add
sub
xor
jg
pop
add
and
je
add
mov
punpckhwd
pop
add
aas
push
(bad)
add
add
mov
and
xor
jg
jmp
mov
and
push
add
sub
cli
imul
mov
mov
add
push
add
mov
add
add
sub
mov
add
xchg
(bad)
jle
out
add
clc
imul
mov
iret
out
mov
push
call
mov
sub
mov
fmul
jmp
mov
sub
mov
je
jmp
mov
push
add
jmp
sbb
pop
and
(bad)
add
and
retf
add
add
jne
sub
mov
(bad)
test
in
add
xlat
(bad)
sub
mov
inc
and
pop
add
out
add
mov
add
dec
push
cmps
cmps
icebp
cld
fisub
push
test
cmc
add
mov
sub
mov
jg
jmp
test
add
sub
mov
je
mov
add
add
add
sub
cli
inc
and
punpckldq
xlat
(bad)
sub
pop
add
xor
add
ret
or
mov
je
jmp
mov
sub
mov
jg
call
and
add
add
adc
inc
mov
je
cmps
dec
je
add
test
lahf
out
add
pusha
inc
and
jg
jmp
mov
add
sub
mov
add
add
(bad)
test
lahf
add
jns
xchg
mov
push
xchg
repnz
jg
ret
add
add
retf
pop
add
mov
call
fild
sub
mov
in
push
xlat
add
(bad)
add
add
add
sub
mov
je
jmp
inc
test
out
mov
mov
xor
out
jmp
clc
imul
loopne
mov
inc
fadd
mov
test
add
pop
ret
xchg
ds
cmp
icebp
push
lahf
pop
add
add
add
jmp
das
call
in
int3
add
jmp
test
add
mov
sbb
test
iret
add
add
add
sub
mov
je
jmp
pop
test
add
sub
sub
mov
push
push
pop
add
push
sbb
add
mov
and
add
add
mov
je
jmp
jmp
mov
retf
pop
push
dec
and
add
sub
add
inc
rcl
retf
add
jmp
mov
mov
sbb
and
add
add
stos
rcr
int
add
add
bound
add
mov
mov
mov
mov
mov
mov
and
mov
dec
mov
out
add
test
imul
sahf
add
add
rol
push
or
in
setl
pop
not
add
inc
and
mov
add
and
mov
and
and
and
xchg
hlt
or
retf
mov
cld
imul
add
inc
icebp
mov
jmp
mov
add
add
add
add
outs
icebp
jno
jno
sahf
add
sub
imul
and
and
and
or
add
push
pushf
sub
dec
mov
mov
add
adc
mov
and
and
jnp
or
xor
mov
or
and
or
and
or
test
mov
and
cmovne
mov
push
ds
add
hlt
test
add
add
cs
add
movs
retf
push
outs
mov
mov
mov
clc
sar
jmp
xlat
ror
scas
fld
retf
add
out
sete
or
add
psubsw
adc
or
ret
add
adc
mov
or
add
call
and
add
add
add
inc
and
call
mov
in
add
add
add
test
xor
add
add
call
outs
jecxz
mov
and
call
add
mov
sub
mov
add
fdivr
sgdtd
add
cmp
cvttps2pi
cmp
setl
mov
jg
xor
or
test
bts
mov
and
add
xor
xor
jb
or
arpl
sbb
add
inc
rcl
(bad)
add
jmp
cwde
test
mov
rol
mov
add
sbb
xchg
push
fisub
in
fld
pop
xor
pop
cmp
stos
push
add
add
mov
add
imul
add
inc
add
cmp
pop
fsub
add
pushf
(bad)
mov
and
xor
add
inc
ror
add
mov
add
mov
mov
ds
and
inc
and
call
mov
hlt
loope
pop
shl
add
clts
(bad)
fucom
add
add
aas
mov
xor
mov
out
call
(bad)
dec
fnstcw
and
jmp
(bad)
outs
dec
mov
sar
xor
imul
loopne
add
fisttp
xchg
and
and
pop
inc
and
mov
and
mov
sbb
or
mov
mov
mov
or
mov
clc
xlat
jl
xchg
cld
outs
hlt
add
or
sbb
add
add
add
add
jp
pop
push
push
sub
cwde
mov
div
pop
test
or
add
mov
sub
or
add
mov
dec
aad
adc
add
or
mov
add
test
xor
add
mov
dec
test
push
adc
pop
xor
pop
xlat
add
stos
out
add
rol
lea
scas
xlat
cmp
dec
xor
pop
cmp
pop
pushf
cs
push
pop
xor
or
and
xlat
and
and
mov
add
mov
pop
jge
xor
hlt
es
add
pop
sahf
add
add
xchg
ret
add
add
mov
bound
add
sub
push
cmp
and
push
push
imul
and
outs
inc
add
dec
xor
xchg
ret
or
add
setl
xor
or
stos
pop
add
inc
xchg
pusha
mul
mov
and
data16
cmps
data16
pop
mov
add
or
inc
ror
add
xchg
xor
jne
xor
jecxz
daa
movs
push
mov
add
mov
mov
xlat
repnz
leave
inc
mov
out
add
add
add
and
add
add
fdivrp
out
mov
pop
fdivr
or
add
xchg
pushf
sub
sti
jnp
imul
add
inc
sbb
sub
push
ss
test
mov
and
hlt
jle
add
add
retf
jb
jo
das
dec
mov
mov
add
mov
sub
cmps
call
ins
aas
add
add
cmp
sete
cmp
setl
mov
dec
or
cmp
add
inc
das
mov
pushf
push
add
add
test
pop
add
jmp
mov
mov
mov
xor
push
add
push
fdivrp
cmp
and
loop
add
dec
cmp
cmp
mov
(bad)
nop
pop
add
xor
xor
or
das
ret
xchg
ror
add
pop
pop
add
mov
neg
add
mov
fst
sub
add
cmp
push
add
add
add
sub
cmps
outs
pop
dec
add
xor
add
add
or
cmp
pcmpeqw
sti
hlt
sbb
mov
fld
cmp
add
and
mov
mov
call
sbb
and
or
mov
or
fs
or
add
aam
out
adc
mov
and
and
add
mov
add
test
add
add
pop
pop
ret
mov
pop
cdq
add
add
add
popa
and
add
add
and
xchg
and
call
mov
mov
jmp
mov
retf
add
dec
add
mov
and
call
mov
mov
add
add
add
add
jo
jmp
mov
mov
call
jns
and
add
xor
and
or
add
test
add
add
in
jb
jmp
nop
push
mov
push
push
push
and
sub
jmp
push
jmp
call
jmp
push
jmp
push
ret
jmp
push
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
inc
inc
or
dec
or
into
sbb
scas
mov
in
and
mov
inc
adc
cli
out
ss
and
mov
mov
mov
fbld
dec
and
mov
mov
call
mov
xor
mov
adc
sbb
mov
lock
dec
pop
pop
ret
nop
push
mov
push
push
push
and
sub
jmp
call
jmp
push
jmp
push
jmp
push
ret
jmp
push
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
inc
mov
mov
mov
and
inc
and
push
add
mov
cmp
add
dec
and
call
sub
or
mov
sti
or
outs
mov
hlt
pop
pop
pop
pop
ret
nop
push
mov
push
push
push
and
sub
jmp
push
jmp
call
jmp
push
jmp
push
ret
jmp
push
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
mov
aad
and
sub
mov
mov
mov
rcl
jge
jb
inc
inc
and
mov
sub
mov
mov
sbb
add
movs
mov
inc
push
jno
jmp
lods
mov
add
add
push
rcl
sub
(bad)
inc
and
stos
(bad)
and
add
jmp
mov
sub
popa
inc
and
je
sub
add
add
sbb
sub
(bad)
or
add
add
jecxz
adc
frstor
inc
xchg
(bad)
fld
xor
test
add
mov
sub
(bad)
inc
sbb
add
cmp
add
into
add
inc
(bad)
xor
mov
cmovle
add
call
and
sub
mov
xor
(bad)
dec
movs
add
mov
sub
mov
lidtd
add
add
mov
sbb
enter
sub
mov
add
call
leave
mov
sub
rol
test
add
add
js
push
lock
mov
imul
mov
push
sub
jge
and
je
jmp
mov
jge
(bad)
sbb
jmp
xor
mov
cmp
shl
mov
imul
mov
sub
mov
test
add
add
in
add
add
mov
cs
sbb
add
add
sar
int3
pop
and
shl
inc
shl
mov
in
inc
cmp
add
(bad)
lods
inc
ror
push
add
mov
mov
pop
push
in
jmp
daa
mov
in
pop
gs
jo
mov
cmp
push
add
xor
mov
sub
jmp
add
push
imul
and
push
add
pop
add
sete
cmp
shld
(bad)
cli
or
cmp
imul
enter
cli
or
add
add
or
add
js
mov
mov
in
add
mov
mov
mov
mov
and
mov
add
xchg
ret
dec
jecxz
mov
push
mov
xchg
(bad)
push
add
out
add
add
rol
repz
popf
push
add
add
sete
or
add
les
dec
nop
mov
and
jmp
mov
mov
mov
test
jl
ror
push
and
pop
fwait
call
push
sub
fiadd
pop
push
inc
shl
aam
and
add
or
jge
mov
mov
add
movs
and
mov
mov
(bad)
xor
pop
push
out
add
add
rol
jecxz
mov
shl
mov
les
bswap
add
mov
and
lea
pop
pop
pop
xchg
add
mov
push
pusha
mov
mov
and
call
mov
mov
mov
imul
jmp
pop
inc
add
push
mov
push
push
push
and
sub
push
jmp
push
jmp
push
ret
jmp
call
jmp
push
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
pop
inc
pushf
mov
mov
mov
or
imul
test
add
sub
(bad)
bound
add
add
test
rol
add
ins
(bad)
(bad)
inc
mov
cmps
sbb
add
add
add
add
fmul
outs
mov
(bad)
fiadd
add
and
mov
add
(bad)
xchg
add
add
add
sahf
sub
add
retf
xchg
add
pop
repnz
mov
cs
add
add
fild
add
fmul
test
outs
push
add
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
sbb
aam
add
push
mov
add
add
(bad)
and
add
jmp
mov
and
add
add
mov
test
add
add
push
movs
add
add
add
es
cli
add
sub
mov
jg
jmp
mov
inc
mov
and
mov
add
arpl
xchg
add
add
test
sbb
sub
mov
add
(bad)
and
add
mov
add
add
pop
jne
test
add
add
in
add
test
add
mov
sub
mov
jg
jmp
lods
test
add
add
pop
mov
fisub
test
inc
bound
sbb
sub
mov
jg
les
loop
add
add
sub
scas
test
add
add
(bad)
and
add
jnp
add
add
into
add
mov
je
jmp
push
test
ins
loop
daa
push
fnstsw
mov
and
add
add
loop
add
and
add
add
mov
(bad)
mov
add
push
fwait
push
je
jmp
mov
mov
mov
arpl
jmp
out
and
add
add
pop
test
add
add
in
pop
lods
test
inc
add
je
stos
cmp
and
into
popa
add
add
add
ins
loop
mov
ins
mov
sub
mov
and
aaa
loopne
xchg
mov
sub
mov
fimul
jmp
mov
push
aam
add
sub
mov
unpcklps
add
jmp
mov
sub
mov
(bad)
and
add
jmp
mov
mov
jne
sbb
mov
push
add
jne
add
add
sub
mov
jg
daa
popa
pushf
add
mov
aam
add
nop
in
(bad)
fs
addr16
lahf
add
mov
sub
mov
jmp
add
add
add
and
add
je
out
out
inc
and
lahf
add
push
jmp
out
and
or
add
mov
xchg
(bad)
clc
sub
add
loop
push
ret
add
sbb
and
cvtps2pi
add
add
add
add
jno
inc
aam
pushf
add
or
add
add
add
add
mov
sub
mov
popf
(bad)
mov
add
jmp
mov
and
add
sar
sub
je
jne
add
add
fadd
inc
jnp
mov
mov
arpl
or
add
and
loop
add
nop
inc
and
push
test
(bad)
mov
and
add
add
call
adc
add
add
xlat
add
or
loop
push
pusha
cmp
inc
and
je
jmp
mov
sub
mov
xor
(bad)
add
es
add
add
je
sub
inc
and
sub
jmp
mov
mov
movs
cmps
and
je
jmp
mov
sub
mov
lods
jle
add
popa
jmp
jmp
mov
mov
mov
aaa
push
add
add
add
fsubr
retf
mov
and
add
add
lea
adc
bound
xchg
add
add
add
inc
call
add
dec
add
sub
cmp
inc
mov
mov
nop
(bad)
push
add
mov
mov
add
or
sub
rdtsc
fiadd
add
add
xchg
mov
(bad)
adc
sub
inc
mov
add
xor
mov
and
and
and
or
or
and
mov
cld
test
mov
add
add
add
xlat
add
add
mov
mov
mov
mov
sbb
bswap
repz
sub
xchg
xchg
cmp
jle
mov
and
xor
or
cld
ret
add
inc
ror
add
add
add
test
fadd
add
dec
add
outs
jmp
sub
inc
mov
push
add
add
push
daa
cdq
jnp
iret
popa
pushf
nop
add
scas
xlat
and
cli
add
add
sete
sbb
pushf
(bad)
mov
dec
je
sti
or
imul
add
inc
and
pop
add
push
add
add
add
sbb
and
mov
and
fsub
call
mov
mov
push
test
add
mov
add
mov
sahf
sete
lods
jecxz
push
mov
add
out
nop
(bad)
push
add
add
fucomip
jno
out
mov
adc
outs
scas
(bad)
mov
cmp
pop
xchg
ret
add
or
ins
loop
pushf
(bad)
mov
and
lahf
cmovne
movs
mov
loop
add
jp
add
mov
mov
mov
je
pusha
add
inc
ror
cli
daa
add
add
sub
jp
dec
inc
nop
(bad)
push
add
in
mov
push
add
adc
out
in
add
add
jns
scas
xlat
lods
loop
loop
out
cli
add
add
xchg
ret
sbb
setl
mov
icebp
cli
mov
ret
mov
mov
jns
push
add
mov
aad
mov
(bad)
push
add
mov
mov
sub
mov
add
out
xchg
add
add
cli
into
sete
loopne
xchg
add
dec
hlt
shl
mov
xor
xor
in
and
and
mov
push
and
mov
add
pop
or
mov
or
xor
or
xor
or
and
jmp
and
cmovne
mov
jmp
mov
and
add
outs
mov
nop
ret
mov
cmps
lock
add
loop
mov
pop
fisub
call
xchg
sbb
arpl
add
push
dec
xchg
mov
add
int3
add
test
dec
xchg
outs
jmp
mov
mov
jmp
mov
loop
int
mov
cs
in
add
(bad)
pop
mov
sbb
push
add
leave
add
mov
mov
fiadd
xor
scas
nop
(bad)
push
add
add
add
inc
add
mov
add
(bad)
mov
add
add
cmc
pop
sub
pushf
sbb
in
(bad)
add
and
and
cmps
and
sbb
and
mov
rol
and
or
lods
je
adc
(bad)
xor
jle
hlt
add
or
or
add
inc
ins
mov
jmp
mov
mov
call
pop
icebp
jmp
bound
mov
mov
mov
add
add
add
inc
and
mov
add
imul
and
sub
iret
mov
(bad)
cmp
mov
xor
adc
ret
fsub
and
xor
inc
and
mov
and
mov
and
mov
and
and
or
mov
call
hlt
sbb
or
test
mov
packsswb
pop
mov
fcom
add
jle
push
add
add
fst
jmp
fild
lea
pop
pop
aaa
pop
and
call
add
pop
inc
jmp
cmps
test
loop
out
mov
add
add
and
cmp
(bad)
dec
add
add
inc
je
daa
sub
add
je
add
adc
xchg
sbb
add
mov
mov
call
dec
test
add
popa
jmp
nop
push
mov
push
push
push
and
sub
jmp
call
jmp
push
jmp
push
ret
jmp
push
jmp
push
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
mov
loopne
adc
and
mov
mov
dec
push
adc
inc
and
gs
and
mov
mov
mov
xor
mov
and
repnz
and
mov
call
add
dec
push
adc
inc
(bad)
mov
dec
and
mov
call
lea
hlt
mov
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
and
sub
jmp
call
jmp
push
jmp
push
jmp
push
jmp
push
ret
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
mov
mov
mov
mov
(bad)
in
and
add
call
pop
add
mov
inc
pushf
pop
push
in
add
mov
iret
mov
(bad)
mov
ins
mov
jmp
(bad)
movs
or
out
push
mov
mov
mov
push
rol
int3
fadd
test
or
stos
in
shr
or
es
mov
sbb
xor
jmp
cld
jle
enter
xchg
sub
je
jmp
loopne
stos
pusha
lods
xor
aad
ds
or
mov
add
or
mov
rcl
jno
inc
fisttp
add
add
inc
and
sub
mov
and
jg
jmp
mov
and
sub
pop
inc
loope
je
fadd
mov
cmc
call
inc
punpckhdq
add
rcr
sub
mov
jmp
test
add
mov
add
imul
inc
and
jg
jmp
mov
mov
inc
and
je
sub
or
and
sub
mov
add
cmp
inc
and
sub
mov
je
jmp
mov
sub
mov
psllq
cmp
test
add
add
das
inc
and
sub
or
add
add
mov
add
into
jmp
xor
and
xor
add
jo
add
jmp
adc
nop
jne
sbb
mov
mov
add
and
jmp
inc
(bad)
(bad)
push
mov
pop
icebp
add
add
mov
enter
add
sar
sub
add
add
add
xchg
fcmovu
xor
mov
mov
jo
inc
and
mov
mov
data16
mov
mov
mov
cld
jo
ss
mov
add
mov
repnz
out
cmp
jmp
sub
mov
mov
lea
shr
mov
repz
add
add
jo
cmps
adc
mov
push
xchg
nop
dec
cmp
cmovne
dec
dec
and
jmp
ss
sub
or
ror
mov
mov
mov
mov
add
mov
add
or
imul
add
in
(bad)
test
mov
or
mov
int
test
mov
xor
sbb
mov
push
sub
pop
and
and
or
add
les
inc
add
fimul
inc
div
aam
and
cmpxchg
mov
and
jmp
mov
inc
fwait
mov
in
mov
(bad)
mov
xchg
add
(bad)
(bad)
(bad)
(bad)
sti
xor
mov
dec
sub
sub
add
imul
and
cmp
add
add
pushf
mov
add
imul
mov
mov
and
and
mov
and
xlat
shl
hlt
push
fdiv
les
(bad)
lock
and
and
mov
mov
cmovne
pop
je
imul
(bad)
pushf
and
xor
jp
add
mov
jg
pop
ins
add
sub
sub
(bad)
dec
adc
cmp
ins
mov
sub
jmp
mov
and
mov
and
add
ret
mov
mov
stc
mov
mov
mov
add
sub
xor
mov
not
mov
mov
sbb
sub
mov
mov
repz
add
add
add
add
inc
push
adc
xchg
jbe
mov
jmp
das
test
mov
add
hlt
pop
push
pop
pop
ret
mov
pop
inc
and
or
call
(bad)
dec
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
and
sub
mov
mov
mov
lea
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
mov
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
jmp
mov
mov
mov
cmp
cmovne
mov
jmp
mov
mov
mov
jmp
mov
mov
mov
call
mov
mov
mov
mov
mov
cmp
cmovae
mov
jmp
mov
mov
mov
mov
mov
add
sub
sub
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
cmovne
mov
jmp
mov
mov
mov
call
mov
lea
mov
mov
mov
mov
call
sub
mov
mov
cmp
setne
and
mov
mov
mov
mov
add
sub
sub
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
cmovne
mov
jmp
mov
mov
mov
test
cmovne
mov
jmp
mov
mov
mov
mov
mov
mov
mov
lea
mov
mov
call
sub
mov
mov
cmp
cmovne
mov
mov
jmp
mov
mov
mov
mov
mov
call
mov
mov
mov
cmp
cmove
mov
jmp
mov
mov
mov
mov
mov
add
sub
sub
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
cmovne
mov
jmp
mov
mov
mov
mov
call
sub
mov
mov
mov
mov
mov
mov
mov
mov
add
sub
sub
imul
and
cmp
sete
cmp
setl
mov
xor
mov
xor
xor
mov
mov
and
and
mov
mov
and
mov
mov
and
mov
mov
or
mov
mov
mov
or
mov
xor
mov
or
xor
or
and
or
test
cmovne
mov
jmp
mov
jmp
mov
mov
mov
mov
mov
mov
mov
lea
mov
mov
mov
call
sub
mov
mov
cmp
cmovne
mov
jmp
mov
mov
mov
mov
mov
mov
lea
mov
mov
call
sub
mov
mov
cmp
cmovne
mov
jmp
lea
mov
movzx
mov
mov
add
add
sub
mov
movzx
mov
mov
mov
mov
shl
add
add
mov
add
mov
mov
mov
mov
mov
mov
call
lea
mov
mov
movzx
mov
mov
sub
sub
mov
movzx
mov
mov
mov
mov
shl
add
add
mov
add
mov
mov
mov
mov
mov
mov
call
lea
mov
mov
mov
call
mov
mov
cmp
cmovne
mov
jmp
mov
mov
mov
mov
mov
sub
sub
add
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
cmovne
mov
jmp
lea
mov
mov
mov
call
mov
mov
mov
mov
cmp
setne
and
mov
mov
mov
sub
mov
add
mov
imul
and
cmp
sete
cmp
setl
mov
xor
mov
xor
xor
mov
mov
and
and
mov
mov
and
mov
mov
and
mov
mov
or
mov
mov
mov
or
mov
xor
mov
or
xor
or
and
or
test
cmovne
mov
jmp
mov
mov
mov
test
cmovne
mov
jmp
mov
mov
jmp
mov
mov
mov
mov
mov
mov
sub
mov
mov
add
imul
and
cmp
sete
cmp
setl
mov
xor
mov
xor
xor
mov
and
and
mov
mov
and
mov
mov
and
or
mov
or
xor
or
xor
or
and
or
test
mov
cmovne
mov
jmp
mov
mov
mov
mov
mov
mov
sub
sub
add
imul
and
cmp
sete
cmp
setl
mov
xor
mov
mov
xor
xor
mov
and
and
mov
and
and
or
or
xor
mov
or
xor
or
and
or
test
mov
cmovne
mov
jmp
mov
jmp
mov
mov
mov
mov
mov
mov
add
sub
sub
imul
and
cmp
sete
cmp
setl
mov
xor
mov
mov
xor
xor
mov
and
and
mov
and
and
or
or
xor
mov
or
xor
or
and
or
test
mov
cmovne
mov
jmp
mov
mov
mov
mov
mov
mov
sub
mov
mov
add
imul
and
cmp
sete
cmp
setl
mov
xor
mov
xor
xor
mov
and
and
mov
mov
and
mov
mov
and
or
mov
or
xor
or
xor
or
and
or
test
mov
cmovne
mov
jmp
mov
jmp
mov
mov
mov
mov
mov
add
sub
sub
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
cmovne
mov
jmp
mov
mov
mov
mov
mov
add
sub
sub
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
cmovne
mov
jmp
mov
jmp
mov
mov
mov
mov
call
sub
mov
mov
jmp
mov
jmp
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
mov
mov
mov
call
sub
mov
mov
cmp
cmovne
mov
jmp
mov
mov
mov
mov
mov
mov
call
sub
mov
mov
cmp
cmovne
mov
jmp
mov
mov
jmp
mov
mov
mov
mov
mov
mov
sub
sub
add
imul
and
cmp
sete
cmp
setl
mov
xor
mov
mov
xor
xor
mov
and
and
mov
and
and
or
or
xor
mov
or
xor
or
and
or
test
mov
cmovne
mov
jmp
mov
mov
mov
mov
call
sub
mov
mov
mov
mov
mov
mov
mov
add
sub
sub
imul
and
cmp
sete
cmp
setl
mov
xor
mov
xor
xor
mov
mov
and
and
mov
mov
and
mov
mov
and
mov
mov
or
mov
mov
mov
or
mov
xor
mov
or
xor
or
and
or
test
cmovne
mov
jmp
mov
jmp
mov
mov
mov
mov
mov
mov
sub
mov
mov
add
imul
and
cmp
sete
cmp
setl
mov
xor
mov
xor
xor
mov
and
and
mov
mov
and
mov
mov
and
or
mov
or
xor
or
xor
or
and
or
test
mov
cmovne
mov
jmp
mov
mov
mov
mov
mov
mov
sub
mov
mov
add
imul
and
cmp
sete
cmp
setl
mov
xor
mov
xor
xor
mov
and
and
mov
mov
and
mov
mov
and
or
mov
or
xor
or
xor
or
and
or
test
mov
cmovne
mov
jmp
mov
jmp
mov
mov
mov
mov
mov
sub
sub
add
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
cmovne
mov
jmp
mov
mov
mov
cmp
setne
and
mov
mov
mov
mov
add
sub
sub
imul
and
cmp
sete
cmp
setl
mov
xor
mov
mov
xor
xor
mov
and
and
mov
and
and
or
or
xor
mov
or
xor
or
and
or
test
mov
cmovne
mov
jmp
mov
mov
mov
test
cmovne
mov
jmp
mov
mov
call
mov
jmp
mov
mov
mov
mov
jmp
mov
lea
pop
pop
pop
pop
ret
mov
mov
mov
call
mov
lea
mov
mov
mov
mov
call
sub
mov
mov
jmp
mov
mov
mov
mov
call
sub
mov
mov
mov
jmp
lea
mov
mov
mov
call
mov
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
mov
mov
mov
call
sub
mov
mov
jmp
mov
jmp
mov
jmp
nop
push
mov
push
push
push
sub
mov
mov
mov
add
sub
sub
mov
mov
mov
mov
sub
mov
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
jmp
mov
mov
mov
cmp
setne
mov
xor
and
xor
and
or
test
cmovne
mov
jmp
mov
mov
mov
mov
jmp
mov
sub
add
add
mov
mov
jmp
lea
lea
mov
mov
add
add
movzx
mov
sub
sub
add
add
mov
mov
add
movzx
sub
add
mov
mov
movzx
mov
mov
mov
mov
mov
mov
mov
call
mov
mov
cmp
cmovl
mov
jmp
mov
mov
jmp
mov
mov
jmp
mov
add
pop
pop
pop
pop
ret
jmp
nop
push
mov
push
push
push
sub
mov
mov
call
call
call
call
mov
mov
mov
mov
sub
mov
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
jmp
mov
mov
mov
cmp
cmovl
mov
jmp
mov
mov
mov
mov
mov
mov
sub
sub
add
imul
and
cmp
sete
cmp
setl
mov
xor
mov
mov
xor
xor
mov
and
and
mov
and
and
or
or
xor
mov
or
xor
or
and
or
test
mov
cmovne
mov
jmp
mov
mov
mov
mov
mov
mov
mov
sub
mov
mov
add
imul
and
cmp
sete
cmp
setl
mov
xor
mov
xor
xor
mov
and
and
mov
mov
and
mov
mov
and
or
mov
or
xor
or
xor
or
and
or
test
mov
cmovne
mov
jmp
mov
jmp
mov
mov
mov
mov
mov
mov
sub
mov
mov
add
imul
and
cmp
sete
cmp
setl
mov
xor
mov
xor
xor
mov
and
and
mov
mov
and
mov
mov
and
or
mov
or
xor
or
xor
or
and
or
test
mov
cmovne
mov
jmp
mov
mov
mov
call
sub
mov
mov
mov
mov
cmp
sete
and
mov
mov
mov
mov
add
sub
sub
imul
and
cmp
sete
cmp
setl
mov
xor
mov
xor
xor
mov
mov
and
and
mov
mov
and
mov
mov
and
mov
mov
or
mov
mov
mov
or
mov
xor
mov
or
xor
or
and
or
test
cmovne
mov
jmp
mov
mov
mov
test
cmovne
mov
jmp
mov
mov
mov
mov
mov
add
sub
sub
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
cmovne
mov
jmp
call
mov
mov
mov
mov
cmp
setl
and
mov
mov
mov
sub
mov
add
mov
imul
and
cmp
sete
cmp
setl
mov
xor
mov
xor
xor
mov
mov
and
and
mov
mov
and
mov
mov
and
mov
mov
or
mov
mov
mov
or
mov
xor
mov
or
xor
or
and
or
test
cmovne
mov
jmp
mov
mov
mov
test
cmovne
mov
jmp
mov
mov
jmp
mov
add
mov
mov
mov
mov
jmp
mov
mov
mov
mov
mov
sub
mov
add
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
cmovne
mov
jmp
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
sub
sub
add
imul
and
cmp
sete
cmp
setl
mov
xor
mov
xor
xor
mov
mov
and
and
mov
mov
and
mov
mov
and
mov
mov
or
mov
mov
mov
or
mov
xor
mov
or
xor
or
and
or
test
cmovne
mov
jmp
mov
jmp
mov
add
pop
pop
pop
pop
ret
mov
mov
jmp
mov
mov
mov
call
sub
mov
mov
jmp
call
mov
mov
jmp
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
jmp
nop
push
mov
push
push
push
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
sub
mov
mov
mov
mov
mov
mov
sub
mov
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
jmp
mov
mov
mov
cmp
cmove
mov
jmp
mov
mov
mov
mov
mov
sub
mov
add
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
cmovne
mov
jmp
mov
mov
mov
mov
mov
sub
sub
add
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
cmovne
mov
jmp
mov
jmp
mov
mov
mov
mov
mov
mov
mov
mov
call
sub
mov
mov
mov
cmp
cmove
mov
jmp
mov
jmp
mov
mov
mov
mov
mov
mov
mov
call
sub
mov
mov
mov
mov
mov
mov
call
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
sub
mov
mov
mov
cmp
cmove
mov
jmp
mov
mov
mov
mov
mov
mov
sub
sub
add
imul
and
cmp
sete
cmp
setl
mov
xor
mov
mov
xor
xor
mov
and
and
mov
and
and
or
or
xor
mov
or
xor
or
and
or
test
mov
cmovne
mov
jmp
mov
mov
mov
mov
mov
sub
sub
add
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
cmovne
mov
jmp
mov
jmp
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
sub
mov
mov
mov
cmp
cmove
mov
jmp
mov
jmp
mov
mov
mov
mov
mov
sub
sub
add
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
cmovne
mov
jmp
lea
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
sub
sub
mov
mov
cmp
setne
and
mov
mov
mov
mov
add
sub
sub
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
cmovne
mov
jmp
mov
mov
mov
test
cmovne
mov
jmp
mov
mov
sub
add
add
mov
mov
mov
call
mov
mov
mov
cmp
cmove
mov
jmp
mov
jmp
mov
mov
mov
mov
mov
mov
mov
sub
sub
sub
sub
add
mov
add
add
sub
mov
mov
mov
mov
mov
call
mov
mov
jmp
mov
mov
mov
mov
mov
add
sub
sub
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
cmovne
mov
jmp
mov
mov
mov
mov
mov
mov
sub
mov
mov
add
imul
and
cmp
sete
cmp
setl
mov
xor
mov
xor
xor
mov
and
and
mov
mov
and
mov
mov
and
or
mov
or
xor
or
xor
or
and
or
test
mov
cmovne
mov
jmp
mov
jmp
mov
mov
cmp
cmovne
mov
jmp
mov
mov
mov
mov
call
sub
mov
mov
jmp
mov
mov
cmp
cmovne
mov
jmp
mov
mov
mov
mov
mov
mov
sub
mov
mov
add
imul
and
cmp
sete
cmp
setl
mov
xor
mov
xor
xor
mov
and
and
mov
mov
and
mov
mov
and
or
mov
or
xor
or
xor
or
and
or
test
mov
cmovne
mov
jmp
mov
mov
mov
mov
call
sub
mov
mov
mov
mov
mov
sub
mov
mov
add
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
cmovne
mov
jmp
mov
jmp
mov
mov
mov
mov
mov
mov
sub
sub
add
imul
and
cmp
sete
cmp
setl
mov
xor
mov
mov
xor
xor
mov
and
and
mov
and
and
or
or
xor
mov
or
xor
or
and
or
test
mov
cmovne
mov
jmp
mov
mov
mov
mov
mov
add
sub
sub
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
cmovne
mov
jmp
add
pop
pop
pop
pop
ret
mov
jmp
mov
jmp
lea
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
sub
sub
mov
mov
mov
mov
jmp
mov
jmp
mov
mov
mov
mov
call
sub
mov
mov
jmp
mov
jmp
data16
push
mov
push
push
push
sub
mov
mov
lea
lea
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
call
mov
mov
mov
mov
sub
mov
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
jmp
mov
mov
mov
cmp
cmovl
mov
jmp
mov
mov
mov
mov
mov
mov
add
sub
sub
imul
and
cmp
sete
cmp
setl
mov
xor
mov
mov
xor
xor
mov
and
and
mov
and
and
or
or
xor
mov
or
xor
or
and
or
test
mov
cmovne
mov
jmp
mov
mov
mov
mov
mov
mov
sub
sub
add
imul
and
cmp
sete
cmp
setl
mov
xor
mov
mov
xor
xor
mov
and
and
mov
and
and
or
or
xor
mov
or
xor
or
and
or
test
mov
cmovne
mov
jmp
mov
jmp
mov
mov
mov
mov
mov
add
sub
sub
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
cmovne
mov
jmp
mov
lea
mov
mov
mov
call
mov
mov
call
lea
mov
mov
call
lea
mov
mov
mov
mov
call
mov
mov
mov
mov
cmp
setne
and
mov
mov
mov
mov
add
sub
sub
imul
and
cmp
sete
cmp
setl
mov
xor
mov
xor
xor
mov
mov
and
and
mov
mov
and
mov
mov
and
mov
mov
or
mov
mov
mov
or
mov
xor
mov
or
xor
or
and
or
test
cmovne
mov
jmp
mov
mov
mov
test
cmovne
mov
jmp
mov
mov
lea
mov
mov
mov
mov
mov
call
mov
jmp
mov
mov
mov
mov
mov
mov
add
sub
sub
imul
and
cmp
sete
cmp
setl
mov
xor
mov
mov
xor
xor
mov
and
and
mov
and
and
or
or
xor
mov
or
xor
or
and
or
test
mov
cmovne
mov
jmp
mov
mov
mov
movzx
movzx
cmp
sete
and
mov
mov
mov
mov
add
sub
sub
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
cmovne
mov
jmp
mov
mov
mov
test
cmovne
mov
jmp
mov
add
mov
mov
jmp
lea
mov
movzx
mov
mov
add
add
sub
mov
movzx
mov
mov
mov
mov
shl
add
add
mov
add
mov
mov
mov
mov
mov
mov
call
lea
mov
call
lea
mov
mov
mov
mov
call
mov
mov
cmp
cmovne
mov
jmp
mov
mov
mov
mov
mov
mov
sub
mov
mov
add
imul
and
cmp
sete
cmp
setl
mov
xor
mov
xor
xor
mov
and
and
mov
mov
and
mov
mov
and
or
mov
or
xor
or
xor
or
and
or
test
mov
cmovne
mov
jmp
mov
mov
mov
mov
mov
mov
sub
mov
add
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
cmovne
mov
jmp
mov
jmp
mov
jmp
lea
mov
call
mov
mov
cmp
cmovne
mov
jmp
mov
mov
mov
mov
mov
add
sub
sub
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
cmovne
mov
jmp
mov
lea
lea
mov
mov
mov
mov
mov
mov
call
lea
mov
mov
add
sub
sub
mov
mov
mov
mov
mov
mov
mov
call
sub
mov
mov
mov
mov
cmp
setne
and
mov
mov
mov
mov
sub
sub
add
imul
and
cmp
sete
cmp
setl
mov
xor
mov
xor
xor
mov
mov
and
and
mov
mov
and
mov
mov
and
mov
mov
or
mov
mov
mov
or
mov
xor
mov
or
xor
or
and
or
test
cmovne
mov
jmp
mov
mov
mov
test
cmovne
mov
jmp
mov
mov
mov
mov
mov
mov
sub
sub
add
imul
and
cmp
sete
cmp
setl
mov
xor
mov
mov
xor
xor
mov
and
and
mov
and
and
or
or
xor
mov
or
xor
or
and
or
test
mov
cmovne
mov
jmp
mov
call
mov
mov
mov
cmp
sete
and
mov
mov
mov
sub
mov
add
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
cmovne
mov
jmp
mov
mov
mov
test
cmovne
mov
jmp
lea
mov
call
mov
lea
lea
mov
mov
mov
mov
mov
call
lea
mov
call
mov
mov
mov
mov
call
sub
mov
mov
jmp
mov
mov
mov
mov
mov
mov
sub
sub
add
imul
and
cmp
sete
cmp
setl
mov
xor
mov
mov
xor
xor
mov
and
and
mov
and
and
or
or
xor
mov
or
xor
or
and
or
test
mov
cmovne
mov
jmp
lea
mov
lea
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
sub
mov
mov
add
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
cmovne
mov
jmp
mov
jmp
mov
mov
mov
mov
call
sub
mov
mov
jmp
lea
mov
lea
mov
mov
mov
mov
mov
mov
call
mov
mov
jmp
mov
mov
jmp
mov
mov
mov
mov
mov
mov
sub
mov
mov
add
imul
and
cmp
sete
cmp
setl
mov
xor
mov
xor
xor
mov
and
and
mov
mov
and
mov
mov
and
or
mov
or
xor
or
xor
or
and
or
test
mov
cmovne
mov
jmp
mov
mov
mov
cmp
setb
and
mov
mov
mov
mov
sub
sub
add
imul
and
cmp
sete
cmp
setl
mov
xor
mov
mov
xor
xor
mov
and
and
mov
and
and
or
or
xor
mov
or
xor
or
and
or
test
mov
cmovne
mov
jmp
mov
mov
mov
test
cmovne
mov
jmp
mov
jmp
mov
mov
jmp
mov
mov
mov
call
sub
mov
add
pop
pop
pop
pop
ret
mov
jmp
mov
lea
mov
mov
mov
call
mov
mov
call
lea
mov
mov
call
lea
mov
mov
mov
mov
call
mov
mov
jmp
mov
jmp
mov
mov
jmp
mov
lea
lea
mov
mov
mov
mov
mov
mov
call
lea
mov
mov
add
sub
sub
mov
mov
mov
mov
mov
mov
mov
call
sub
mov
mov
jmp
mov
call
mov
mov
jmp
lea
mov
lea
mov
mov
mov
mov
mov
mov
call
mov
mov
jmp
mov
jmp
data16
push
mov
push
push
push
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
mov
mov
mov
mov
add
mov
imul
and
cmp
sete
and
mov
mov
cmp
setl
and
mov
mov
mov
mov
mov
mov
mov
mov
sub
mov
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
jmp
mov
mov
mov
mov
mov
mov
xor
mov
mov
xor
xor
mov
and
and
mov
and
and
or
or
xor
mov
or
xor
or
and
or
test
mov
cmovne
mov
jmp
mov
mov
call
mov
mov
mov
call
mov
mov
mov
call
mov
mov
mov
call
mov
mov
mov
call
mov
mov
mov
call
mov
mov
mov
call
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
call
mov
mov
mov
call
mov
mov
mov
call
mov
mov
mov
call
mov
mov
mov
call
mov
mov
mov
call
mov
mov
mov
call
mov
mov
mov
call
mov
mov
mov
call
mov
mov
mov
call
mov
mov
mov
call
mov
mov
mov
call
mov
mov
mov
call
mov
mov
mov
call
mov
mov
mov
call
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
call
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
call
mov
mov
mov
call
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
call
mov
mov
mov
call
mov
mov
mov
call
mov
mov
mov
call
mov
mov
mov
call
mov
mov
mov
call
mov
mov
mov
call
mov
mov
mov
call
mov
mov
mov
call
mov
mov
mov
call
mov
mov
mov
call
mov
mov
mov
call
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
mov
mov
mov
mov
call
add
mov
sub
mov
mov
mov
mov
call
add
sub
mov
mov
mov
mov
mov
call
add
mov
sub
mov
mov
mov
mov
call
add
mov
sub
mov
mov
mov
mov
call
add
mov
sub
mov
mov
mov
mov
call
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
mov
mov
mov
mov
call
add
mov
mov
mov
mov
sub
mov
mov
mov
mov
mov
mov
mov
call
mov
mov
inc
mov
mov
sub
mov
mov
mov
call
add
mov
sub
mov
mov
mov
call
add
mov
mov
sub
mov
mov
call
add
mov
mov
call
mov
imul
sub
mov
call
add
mov
mov
mov
mov
mov
mov
add
sub
sub
imul
and
cmp
sete
cmp
setl
mov
xor
mov
mov
xor
xor
mov
and
and
mov
and
and
or
or
xor
mov
or
xor
or
and
or
test
mov
cmovne
mov
jmp
mov
jmp
mov
mov
mov
mov
mov
sub
sub
add
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
cmovne
mov
jmp
mov
mov
mov
mov
sub
mov
mov
mov
mov
mov
call
add
mov
mov
mov
mov
mov
sub
mov
mov
mov
mov
mov
call
add
mov
mov
sub
sub
add
mov
mov
sub
mov
mov
mov
call
add
mov
mov
sub
mov
call
add
mov
mov
mov
mov
mov
mov
mov
mov
sub
mov
mov
mov
mov
mov
call
add
mov
mov
mov
mov
mov
mov
mov
sub
sub
add
mov
mov
mov
mov
shl
add
sub
mov
mov
mov
mov
mov
call
add
lea
mov
mov
mov
mov
sub
sub
add
mov
mov
sub
sub
add
mov
mov
mov
mov
shl
add
mov
mov
shl
add
sub
mov
mov
mov
mov
mov
mov
call
add
mov
mov
mov
mov
mov
mov
mov
sub
mov
mov
add
imul
and
cmp
sete
mov
cmp
setl
mov
xor
mov
xor
xor
mov
mov
and
and
mov
mov
and
mov
mov
and
mov
mov
or
mov
mov
mov
or
mov
xor
mov
or
xor
or
and
or
test
cmovne
mov
jmp
mov
jmp
mov
mov
mov
mov
mov
mov
add
sub
sub
imul
and
cmp
sete
cmp
setl
mov
xor
mov
mov
xor
xor
mov
and
and
mov
and
and
or
or
xor
mov
or
xor
or
and
or
test
mov
cmovne
mov
jmp
mov
mov
mov
mov
sub
mov
mov
mov
mov
mov
call
mov
mov
cmp
sete
and
mov
mov
mov
mov
add
sub
sub
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
cmovne
mov
jmp
mov
mov
mov
test
cmovne
mov
jmp
mov
mov
mov
mov
mov
mov
sub
mov
mov
add
imul
and
cmp
sete
cmp
setl
mov
xor
mov
xor
xor
mov
and
and
mov
mov
and
mov
mov
and
or
mov
or
xor
or
xor
or
and
or
test
mov
cmovne
mov
jmp
mov
mov
mov
mov
mov
mov
sub
sub
add
imul
and
cmp
sete
cmp
setl
mov
xor
mov
mov
xor
xor
mov
and
and
mov
and
and
or
or
xor
mov
or
xor
or
and
or
test
mov
cmovne
mov
jmp
mov
jmp
mov
mov
mov
mov
mov
sub
mov
add
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
cmovne
mov
jmp
mov
mov
mov
sub
mov
mov
mov
mov
mov
call
add
mov
mov
mov
mov
mov
sub
mov
mov
mov
mov
mov
call
add
mov
mov
sub
mov
mov
mov
mov
call
add
mov
mov
mov
mov
mov
mov
sub
mov
mov
mov
mov
mov
call
add
mov
sub
mov
mov
call
add
mov
mov
mov
mov
sub
add
mov
mov
mov
mov
shl
add
sub
mov
mov
mov
mov
call
add
mov
mov
mov
sub
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
sub
sub
add
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
cmovne
mov
jmp
mov
jmp
mov
mov
mov
cmp
cmove
mov
jmp
mov
mov
mov
mov
mov
mov
sub
mov
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
sub
mov
mov
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
sub
mov
mov
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
sub
mov
mov
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
sub
mov
mov
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
sub
mov
mov
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
sub
mov
mov
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
sub
mov
mov
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
sub
mov
mov
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
sub
mov
mov
mov
call
mov
mov
mov
call
and
sub
mov
mov
mov
mov
mov
call
add
mov
sub
mov
mov
mov
call
add
mov
mov
mov
mov
mov
mov
inc
mov
mov
mov
mov
mov
mov
mov
mov
call
sub
mov
mov
lea
mov
mov
and
mov
mov
call
add
mov
sub
mov
mov
mov
call
add
mov
mov
mov
mov
mov
inc
mov
mov
mov
mov
mov
mov
mov
lea
mov
call
sub
mov
mov
mov
and
mov
mov
call
add
mov
sub
mov
mov
mov
call
add
mov
mov
mov
mov
mov
inc
mov
mov
mov
mov
mov
mov
mov
lea
mov
call
and
sub
mov
mov
mov
mov
mov
call
add
mov
sub
mov
mov
mov
call
add
mov
mov
mov
movzx
mov
mov
mov
mov
mov
movzx
mov
mov
mov
mov
mov
mov
mov
lea
mov
inc
mov
mov
mov
sub
mov
mov
mov
mov
mov
mov
call
add
mov
mov
mov
mov
sub
mov
mov
mov
call
mov
mov
mov
xor
mov
mov
mov
mov
sub
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
sub
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
sub
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
sub
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
sub
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
sub
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
sub
mov
mov
mov
call
mov
mov
mov
mov
mov
sub
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
sub
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
sub
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
sub
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
sub
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
sub
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
sub
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
sub
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
sub
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
sub
mov
mov
mov
mov
call
mov
call
mov
xor
div
mov
mov
mov
mov
mov
movzx
mov
mov
mov
mov
movzx
mov
mov
mov
mov
sub
mov
mov
movzx
mov
mov
mov
mov
mov
mov
mov
mov
shl
add
add
mov
mov
add
mov
mov
mov
sub
mov
mov
mov
mov
mov
call
add
mov
mov
mov
mov
mov
mov
sub
mov
mov
mov
mov
mov
call
add
lea
mov
mov
mov
mov
add
sub
sub
mov
mov
mov
mov
shl
add
sub
mov
mov
mov
mov
mov
mov
call
add
mov
mov
mov
mov
mov
sub
mov
mov
mov
mov
mov
mov
call
add
lea
mov
mov
mov
mov
add
sub
sub
mov
mov
mov
shl
add
sub
mov
mov
mov
mov
mov
mov
call
add
mov
movzx
mov
mov
mov
mov
sub
mov
movzx
mov
mov
mov
mov
mov
mov
add
add
mov
add
mov
mov
mov
sub
mov
mov
mov
mov
mov
mov
call
add
mov
mov
mov
mov
sub
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
sub
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
sub
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
sub
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
sub
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
sub
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
sub
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
sub
mov
mov
mov
mov
call
mov
mov
movzx
mov
mov
mov
mov
mov
sub
mov
sub
add
sub
mov
movzx
mov
mov
mov
mov
mov
mov
mov
shl
add
add
mov
add
mov
mov
mov
sub
mov
mov
mov
mov
mov
mov
call
add
mov
mov
mov
mov
sub
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
sub
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
sub
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
sub
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
sub
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
sub
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
sub
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
sub
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
sub
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
sub
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
sub
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
sub
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
sub
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
sub
mov
mov
mov
mov
call
mov
mov
mov
sub
mov
mov
mov
call
lea
pop
pop
pop
pop
ret
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
mov
mov
mov
mov
mov
mov
call
add
sub
mov
mov
mov
mov
mov
call
add
sub
mov
mov
mov
mov
mov
call
add
sub
mov
mov
mov
mov
mov
call
add
sub
mov
mov
mov
mov
mov
call
add
sub
mov
mov
mov
mov
mov
call
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
mov
mov
mov
mov
call
add
mov
mov
mov
mov
sub
mov
mov
mov
mov
mov
mov
mov
call
neg
mov
mov
mov
sub
mov
sub
mov
mov
mov
mov
call
add
sub
mov
mov
mov
mov
call
add
mov
mov
sub
mov
mov
call
add
mov
mov
call
mov
imul
sub
mov
call
add
mov
jmp
mov
mov
mov
mov
sub
mov
mov
mov
mov
mov
call
add
mov
mov
mov
mov
mov
sub
mov
mov
mov
mov
mov
call
add
mov
mov
sub
sub
add
mov
mov
sub
mov
mov
mov
call
add
mov
mov
sub
mov
call
add
mov
mov
mov
mov
mov
mov
mov
mov
sub
mov
mov
mov
mov
mov
call
add
mov
mov
mov
mov
mov
mov
mov
sub
sub
add
mov
mov
mov
mov
shl
add
sub
mov
mov
mov
mov
mov
call
add
lea
mov
mov
mov
mov
mov
sub
sub
add
mov
mov
sub
add
mov
mov
mov
mov
shl
add
mov
mov
shl
add
sub
mov
mov
mov
mov
mov
mov
call
add
mov
mov
jmp
mov
mov
mov
mov
sub
mov
mov
mov
mov
mov
call
mov
mov
jmp
mov
jmp
mov
mov
mov
sub
mov
mov
mov
mov
mov
call
add
mov
mov
mov
mov
mov
sub
mov
mov
mov
mov
mov
call
add
mov
mov
sub
mov
mov
mov
mov
call
add
mov
mov
mov
mov
mov
mov
sub
mov
mov
mov
mov
mov
call
add
mov
sub
mov
mov
call
add
mov
mov
mov
mov
add
sub
sub
mov
mov
mov
mov
shl
add
sub
mov
mov
mov
mov
call
add
mov
mov
mov
sub
mov
mov
mov
mov
call
mov
mov
mov
jmp
data16
push
mov
push
push
push
and
sub
mov
mov
mov
mov
mov
sub
mov
add
imul
and
cmp
sete
and
mov
cmp
setl
and
mov
mov
mov
mov
mov
sub
mov
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
jmp
mov
mov
mov
mov
mov
and
xor
or
test
cmovne
mov
jmp
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
sub
mov
mov
call
add
mov
mov
mov
mov
mov
sub
sub
add
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
mov
mov
cmovne
mov
jmp
mov
mov
lea
pop
pop
pop
pop
ret
mov
call
mov
mov
mov
mov
sub
mov
call
add
mov
mov
mov
jmp
nop
push
mov
push
push
push
and
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
mov
call
sub
mov
mov
mov
mov
sub
mov
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
jmp
mov
mov
mov
cmp
cmovne
mov
jmp
mov
mov
mov
mov
mov
mov
add
sub
sub
imul
and
cmp
sete
cmp
setl
mov
xor
mov
mov
xor
xor
mov
and
and
mov
and
and
or
or
xor
mov
or
xor
or
and
or
test
mov
cmovne
mov
jmp
mov
mov
mov
mov
mov
mov
mov
add
sub
sub
imul
and
cmp
sete
cmp
setl
mov
xor
mov
mov
xor
xor
mov
and
and
mov
and
and
or
or
xor
mov
or
xor
or
and
or
test
mov
cmovne
mov
jmp
mov
jmp
mov
mov
cmp
cmovne
mov
jmp
mov
mov
mov
mov
mov
mov
sub
mov
mov
add
imul
and
cmp
sete
cmp
setl
mov
xor
mov
xor
xor
mov
and
and
mov
mov
and
mov
mov
and
or
mov
or
xor
or
xor
or
and
or
test
mov
cmovne
mov
jmp
mov
mov
mov
mov
mov
call
sub
mov
mov
mov
mov
mov
mov
mov
sub
sub
add
imul
and
cmp
sete
cmp
setl
mov
xor
mov
xor
xor
mov
mov
and
and
mov
mov
and
mov
mov
and
mov
mov
or
mov
mov
mov
or
mov
xor
mov
or
xor
or
and
or
test
cmovne
mov
jmp
mov
jmp
mov
mov
jmp
mov
lea
pop
pop
pop
pop
ret
mov
mov
jmp
mov
mov
mov
mov
mov
call
sub
mov
mov
jmp
nop
push
mov
push
push
push
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
sub
sub
imul
and
cmp
sete
and
mov
mov
cmp
setl
and
mov
mov
mov
mov
mov
mov
mov
mov
sub
mov
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
jmp
mov
mov
mov
mov
mov
mov
xor
mov
mov
xor
xor
mov
and
and
mov
and
and
or
or
xor
mov
or
xor
or
and
or
test
mov
cmovne
mov
jmp
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
call
mov
mov
mov
call
mov
mov
mov
call
mov
mov
mov
call
mov
mov
mov
call
mov
mov
mov
call
mov
mov
mov
call
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
mov
mov
mov
call
add
mov
mov
mov
mov
mov
mov
shl
mov
mov
cmp
setne
and
mov
mov
mov
mov
sub
sub
add
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
mov
mov
cmovne
mov
jmp
mov
mov
mov
test
cmovne
mov
jmp
mov
sub
mov
call
add
shl
mov
mov
mov
jmp
mov
mov
mov
mov
mov
sub
mov
sub
mov
sub
mov
sub
mov
mov
sub
sub
sub
add
add
mov
mov
mov
mov
sub
mov
call
add
mov
mov
mov
mov
sub
mov
mov
mov
mov
mov
call
add
mov
mov
mov
mov
sub
mov
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
cmp
cmove
mov
jmp
mov
mov
mov
jmp
mov
mov
mov
mov
mov
mov
sub
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
cmp
cmove
mov
jmp
mov
mov
mov
mov
mov
add
sub
sub
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
cmovne
mov
jmp
mov
mov
mov
mov
mov
mov
mov
mov
sub
sub
add
imul
and
cmp
sete
cmp
setl
mov
xor
mov
mov
xor
xor
mov
and
and
mov
and
and
or
or
xor
mov
or
xor
or
and
or
test
mov
cmovne
mov
jmp
mov
jmp
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
sub
mov
mov
mov
mov
call
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
sub
mov
mov
cmp
cmovne
mov
jmp
mov
mov
mov
mov
mov
mov
add
sub
sub
imul
and
cmp
sete
cmp
setl
mov
xor
mov
mov
xor
xor
mov
and
and
mov
and
and
or
or
xor
mov
or
xor
or
and
or
test
mov
cmovne
mov
jmp
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
mov
sub
mov
sub
mov
sub
add
mov
sub
add
sub
mov
mov
mov
mov
call
add
mov
mov
mov
mov
mov
sub
sub
add
imul
and
cmp
sete
cmp
setl
mov
mov
and
xor
or
test
cmovne
mov
jmp
mov
jmp
mov
mov
mov
mov
mov
sub
mov
add
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
cmovne
mov
jmp
mov
mov
mov
mov
mov
mov
mov
mov
sub
sub
add
imul
and
cmp
sete
cmp
setl
mov
xor
mov
mov
xor
xor
mov
and
and
mov
and
and
or
or
xor
mov
or
xor
or
and
or
test
mov
cmovne
mov
jmp
mov
jmp
mov
mov
lea
pop
pop
pop
pop
ret
mov
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
mov
mov
mov
mov
mov
call
add
mov
mov
mov
mov
mov
mov
shl
mov
mov
jmp
mov
mov
mov
jmp
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
mov
sub
add
add
sub
add
sub
mov
mov
mov
mov
call
add
mov
mov
jmp
mov
mov
mov
jmp
nop
push
mov
push
push
push
and
mov
call
push
jmp
push
ret
jmp
push
jmp
call
jmp
push
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
lea
or
add
cwde
xchg
movs
ds
add
mov
pushw
add
and
add
jecxz
adc
or
add
add
into
fmul
add
jp
xor
add
add
mov
mov
lea
mov
cmp
mov
int3
les
lea
push
inc
and
arpl
add
cmp
mov
inc
test
adc
add
push
and
add
mov
add
(bad)
lods
out
rcr
add
add
mov
and
inc
and
add
add
cmps
ja
or
add
add
add
mov
or
adc
add
mov
mov
add
sbb
test
add
sub
and
add
add
mov
retf
push
test
add
pusha
mov
mov
mov
call
or
add
and
add
add
mov
call
mov
push
add
mov
hlt
inc
and
or
add
mov
test
add
mov
push
inc
push
or
add
add
or
add
ret
add
mov
(bad)
mov
or
add
ret
retf
jmp
and
aas
add
mov
(bad)
lea
add
add
inc
jmp
jae
call
mov
or
les
add
and
into
add
add
inc
and
je
add
call
(bad)
mov
leave
(bad)
jmp
mov
add
and
add
add
xchg
jmp
and
mov
mov
adc
mov
clc
or
add
add
inc
jp
pop
int3
add
mov
push
add
add
outs
and
call
mov
inc
mov
add
add
and
or
and
xchg
add
call
lea
mov
mov
mov
add
add
loop
ror
inc
and
fld
add
add
mov
out
add
pop
int3
arpl
pop
jmp
and
add
add
das
out
mov
lods
add
lods
or
jg
jmp
dec
test
repnz
or
xchg
add
pxor
add
cs
add
adc
add
add
lods
test
add
add
mov
dec
clc
lods
rol
sub
jmp
add
jg
and
test
add
add
mov
and
add
sub
inc
jns
add
jmp
mov
lods
add
add
mov
jg
jmp
test
add
sub
test
add
ret
outs
out
add
pop
str
add
add
push
test
add
bsf
add
(bad)
jmp
or
sub
mov
mov
add
push
leave
pop
add
pusha
xor
pushf
mov
push
mov
mov
add
sub
add
fild
add
sub
mov
je
mov
push
add
shl
imul
inc
xchg
and
add
jg
imul
add
sub
add
mov
and
add
add
test
sub
cmp
mov
lods
jno
dec
push
mov
lea
jmp
mov
and
sub
add
mov
jo
add
je
jmp
mov
add
sub
mov
jg
pop
add
ret
fisub
add
add
mov
je
jmp
mov
sub
mov
jg
imul
test
add
lods
scas
aad
pop
test
adc
add
xor
sbb
sub
cwde
retf
mov
add
sub
outs
mov
jg
add
add
mov
sub
inc
test
add
and
lods
jmp
mov
sub
mov
push
pop
add
add
daa
add
add
mov
outs
arpl
cmp
sub
dec
lods
dec
test
add
add
test
push
add
or
jae
push
das
es
test
add
jg
jmp
mov
and
add
add
inc
test
dec
add
prefetch
or
add
mov
add
or
jne
test
int
add
(bad)
xchg
ins
add
fiadd
add
mov
mov
push
xchg
pop
outs
mov
mov
jo
add
(bad)
jmp
xchg
dec
mov
and
mov
add
(bad)
fisttp
add
jmp
inc
test
add
icebp
repnz
mov
(bad)
mov
add
add
or
jae
dec
in
or
add
jg
jmp
mov
add
mov
wrmsr
hlt
movaps
jmp
mov
sub
inc
test
add
add
push
loope
add
add
add
mov
sub
mov
je
imul
test
add
jbe
mov
jg
in
add
add
fadd
sub
mov
mov
or
add
add
repz
mov
add
(bad)
push
sub
add
jmp
mov
mov
mov
add
xlat
add
cs
add
aad
and
add
fsubr
mov
cmp
(bad)
(bad)
and
adc
lods
add
test
hlt
ficom
cmp
(bad)
pop
jns
jmp
mov
lods
add
ret
cmp
or
add
jg
aad
(bad)
leave
add
add
push
xchg
add
maskmovq
mul
sub
sub
(bad)
pop
mov
sub
mov
add
ret
pop
add
jmp
mov
sub
mov
clts
retf
mov
jae
enter
mov
and
add
ret
jnp
retf
and
pop
add
jg
in
add
add
into
add
loope
(bad)
(bad)
mov
xor
mov
add
sahf
test
add
sub
mov
jg
jmp
mov
add
mov
cmovp
or
add
test
lods
add
sub
inc
test
add
lods
add
imul
and
add
jae
loop
sub
mov
in
into
add
inc
dec
cmp
add
rol
adc
lods
add
xor
sbb
jg
jmp
mov
lods
add
pop
sub
mov
pmulhuw
push
xor
aad
rcl
add
sub
test
paddb
add
add
add
add
mov
out
mul
xor
mov
sub
int3
fadd
int
cmp
pusha
fisub
test
mov
sub
ja
mov
and
mov
add
(bad)
and
mov
add
mov
int
add
ss
adc
mov
enter
add
jmp
or
sub
cmp
(bad)
pop
jg
jmp
xchg
sub
mov
movzx
add
aad
or
leave
sahf
test
sub
out
sbb
nop
les
ret
(bad)
jge
or
add
push
test
add
add
mov
je
aad
rol
sahf
test
jecxz
cs
mov
(bad)
and
add
sub
pop
add
xchg
icebp
cmp
out
mov
xor
lods
or
leave
mov
sub
mov
and
xchg
jae
mov
add
add
add
dec
test
les
add
mov
int
int3
push
pusha
add
inc
or
add
(bad)
leave
sub
mov
jg
jmp
mov
sub
test
test
add
je
jmp
mov
push
and
sub
mov
sbb
inc
adc
imul
sub
test
mov
test
clc
pop
pusha
add
add
adc
and
std
mov
add
and
mov
sub
mov
sub
mov
cmovbe
pop
add
mov
sub
mov
jg
js
add
add
test
sub
mov
nop
add
fmul
test
jnp
xor
inc
into
add
mov
sub
mov
and
xchg
add
jg
jmp
mov
lods
pop
add
sub
inc
test
add
ret
ret
add
inc
pop
cmp
mov
lods
add
adc
or
add
cld
and
add
mov
lods
add
add
mov
and
add
add
test
and
ret
xor
add
add
sub
mov
prefetch
sub
(bad)
pop
mov
ret
bound
jmp
add
je
jmp
inc
xchg
and
sub
adc
add
jg
jmp
mov
sub
mov
mov
or
or
add
mov
push
icebp
in
sub
add
add
(bad)
and
add
jmp
mov
lods
add
cmps
cmp
mov
add
add
add
sub
mov
and
add
add
(bad)
and
add
fidivr
add
inc
test
push
sub
mov
je
jmp
dec
test
add
add
mov
ror
add
add
add
add
add
mov
and
add
mov
test
aaa
add
jmp
mov
sub
inc
test
fiadd
ret
adc
add
(bad)
leave
adc
add
pop
sbb
add
je
mov
add
sub
adc
and
xor
btr
(bad)
leave
adc
and
and
add
cmp
and
add
add
test
dec
mov
bound
add
out
pop
repz
test
xor
add
(bad)
pop
add
add
add
adc
add
add
dec
int
and
xor
sub
add
test
add
jmp
mov
and
add
adc
add
add
(bad)
in
add
jmp
mov
sub
test
add
jae
test
in
add
add
and
add
add
push
mul
add
add
(bad)
and
add
jmp
mov
and
xor
sub
mov
je
jmp
mov
and
add
mov
cmp
mov
jg
in
into
add
mov
sub
mov
je
fimul
add
mov
add
adc
cmps
mov
cmps
and
add
jg
jmp
mov
cdq
adc
mov
je
in
add
add
clc
outs
add
pusha
push
jns
(bad)
das
mov
add
(bad)
and
add
lods
add
xchg
sub
cli
test
add
mov
test
cld
add
add
and
les
sub
dec
test
add
add
out
adc
add
mov
and
scas
add
das
mov
or
add
add
inc
xchg
mov
add
or
out
cmp
test
xor
(bad)
and
add
jmp
mov
lods
pop
inc
cmp
mov
cmps
or
add
sahf
div
add
(bad)
aad
and
fild
add
cmp
add
test
mov
add
jmp
sbb
and
add
add
mov
out
bound
ret
push
sbb
add
dec
add
cmp
test
retf
lods
lea
and
nop
jae
mov
add
ret
(bad)
mov
jecxz
pop
rol
and
add
add
test
cs
jmp
mov
lods
or
sbb
hlt
lods
add
add
jmp
mov
sub
test
cmovp
push
ret
rol
add
jmp
and
aas
add
jmp
movs
inc
adc
jae
jmp
mov
pop
add
mov
rol
imul
add
mov
add
mov
int
and
mov
add
add
dec
in
not
test
cmp
sbb
add
jmp
mov
scas
rcr
push
mov
mov
add
add
add
mov
sub
test
je
jmp
mov
dec
in
and
test
mov
jg
jmp
test
xchg
add
sub
mov
or
ret
add
enter
add
mov
add
or
fild
add
jmp
add
jg
jmp
mov
and
add
or
test
enter
je
jmp
mov
sub
mov
and
add
cmp
(bad)
and
add
jmp
or
and
add
(bad)
pop
mov
je
jmp
dec
test
add
add
mov
jg
sub
add
add
add
sub
dec
test
mov
test
add
add
add
add
sub
sbb
int
add
add
jmp
xchg
jo
pusha
add
mov
je
cld
add
or
ret
arpl
mov
test
loope
add
inc
test
push
add
arpl
add
unpckhps
add
mov
add
mov
add
add
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
dec
inc
jp
add
fmul
inc
aaa
push
xor
jmp
dec
test
retf
cmp
mov
js
add
xor
test
add
(bad)
mov
sub
mov
fmul
test
push
add
cmp
inc
in
mov
shr
and
add
mov
test
sldt
jmp
jmp
jg
int
out
mov
mov
or
vmread
dec
test
add
leave
jmp
(bad)
sub
sar
jno
jmp
mov
mov
mov
add
sahf
(bad)
lahf
int3
ret
cmp
rol
call
and
add
add
jae
sub
add
push
dec
add
mov
ffreep
pusha
jmp
jno
(bad)
mov
cmp
add
add
add
add
inc
ror
add
leave
sbb
add
add
mov
fisubr
out
add
mov
mov
mov
mov
mov
push
add
in
mov
add
pop
(bad)
gs
scas
xlat
xor
add
add
xchg
ret
cmp
add
dec
fiadd
xor
or
retf
sbb
shl
in
add
jmp
mov
mov
lea
test
(bad)
cwde
and
add
ret
inc
and
or
xor
mov
mov
mov
add
(bad)
mov
lea
jo
mov
movs
jle
or
or
add
add
add
inc
and
xor
add
xor
and
add
add
add
call
sbb
and
adc
add
and
add
sub
out
call
add
push
cmp
lea
or
sbb
(bad)
lock
sub
add
dec
mov
or
out
add
add
xlat
(bad)
idiv
lea
add
add
and
mov
ret
and
add
pop
add
pop
ret
ret
jmp
cmp
push
add
mov
push
inc
xchg
xor
add
clc
add
or
sbb
mov
add
(bad)
add
inc
cmp
pop
mov
cld
and
add
cmp
or
mov
and
and
mov
cli
push
nop
cmp
add
call
(bad)
fisub
push
add
mov
mov
mov
mov
hlt
add
add
mov
cmp
xchg
ins
mov
das
mov
shl
mov
fistp
fadd
add
sete
and
adc
add
mov
sbb
mov
add
mov
jns
sub
mov
ret
dec
push
mov
mov
xor
mov
xor
or
mov
mov
dec
cmps
add
dec
mov
mov
and
(bad)
test
push
dec
and
add
ret
mov
mov
or
mov
and
add
adc
test
add
ret
mov
xor
mov
and
add
add
or
inc
fdivr
loopne
cmp
mov
rcr
add
mov
mov
mov
cdq
sbb
into
neg
add
inc
mov
aas
add
jmp
push
xchg
and
add
sbb
and
nop
nop
adc
add
ret
xchg
jecxz
or
add
clc
pushw
ret
mov
add
and
pushf
aam
movs
or
mov
and
ror
retf
push
xchg
repz
add
cmovl
mov
xlat
aas
add
jmp
rol
in
lods
add
lds
aaa
sbb
jae
mov
cmp
xchg
hlt
ficom
nop
(bad)
push
add
cmp
mov
and
sub
inc
ret
popa
push
lds
out
(bad)
leave
add
add
or
xchg
add
pushf
ret
sti
test
ret
repz
(bad)
repnz
and
mov
out
adc
or
or
xor
inc
test
pop
add
test
push
or
not
clc
mov
dec
ret
mov
jmp
inc
aad
pusha
lea
mov
mov
inc
sbb
(bad)
mov
pop
add
add
add
mov
sub
retf
add
add
add
sub
mov
movzx
add
add
add
push
xlat
inc
sbb
mov
push
out
add
adc
mov
add
mov
mov
mov
and
mov
dec
xchg
and
mov
call
mov
mov
mov
lea
lea
lea
mov
mov
or
mov
(bad)
aad
movs
sub
add
mov
xlat
test
pop
add
add
add
inc
xchg
clc
push
add
add
add
(bad)
(bad)
(bad)
repz
mov
mov
add
add
add
pushf
mov
adc
add
add
add
xchg
add
cmp
and
add
add
scas
fadd
add
add
cmp
sete
cmp
add
add
add
xor
xor
dec
and
adc
add
fisttp
add
mov
jp
mov
mov
loop
mov
and
add
add
add
shr
mov
add
add
mov
add
(bad)
mov
xor
mov
or
sub
or
and
or
enter
test
add
add
jnp
mov
call
rol
mov
mov
test
add
add
inc
lds
jmp
cmp
jmp
mov
cmp
mov
add
test
add
adc
scas
repz
out
add
add
add
xchg
mov
cvtdq2ps
mov
xor
mov
mov
xor
sub
repz
and
mov
and
and
or
push
aad
les
out
add
add
mov
cld
test
sahf
xor
in
add
sbb
jmp
mov
mov
add
add
in
mov
dec
or
add
add
mov
and
inc
and
add
add
inc
imul
shl
add
xchg
adc
add
add
sbb
fcmovu
ret
mov
mov
and
add
add
and
add
(bad)
call
mul
mov
adc
add
movaps
test
ret
mov
mov
inc
xor
mov
add
sub
mov
cmp
scas
(bad)
and
cmp
sahf
out
cmp
setl
mov
xor
dec
test
add
add
fdivrp
add
add
mov
out
inc
fisttp
mov
add
add
mov
mov
and
mov
jae
test
clc
dec
mov
add
add
test
in
add
or
dec
test
xor
or
mov
or
xchg
hlt
add
retf
add
jno
jno
add
inc
mov
add
add
pusha
adc
add
dec
or
sub
push
inc
fwait
adc
xor
ret
inc
ror
add
call
lods
add
mov
mov
mov
aas
adc
mov
inc
ret
cmp
and
jmp
add
add
cld
(bad)
repz
xor
leave
cmp
sete
add
or
add
rdtsc
inc
mov
xor
mov
mov
repz
(bad)
in
out
or
add
inc
add
ror
(bad)
or
xor
mov
or
or
or
test
sahf
mov
and
add
mov
in
jae
jmp
or
cmc
and
push
mov
nop
(bad)
push
add
add
add
add
loope
not
jl
imul
and
add
dec
add
jl
jae
repnz
xor
iret
test
ret
inc
int3
mov
in
add
mov
(bad)
leave
mov
jmp
mov
mov
mov
dec
xor
mov
mov
push
add
add
das
inc
out
add
cmp
sbb
lods
or
(bad)
mov
mov
enter
test
add
add
adc
jl
push
add
clc
mov
add
loop
cmp
inc
add
inc
(bad)
call
sub
mov
scas
popf
mov
popf
mov
cmp
setne
sub
and
adc
add
nop
(bad)
push
add
add
out
add
add
scas
ret
and
cmp
int
shl
setl
mov
sbb
xor
rcl
ret
add
and
add
xchg
call
xor
fnsave
mov
adc
add
mov
mov
jmp
mov
mov
mov
mov
mov
sub
mov
mov
into
add
add
cmp
setns
cmp
cmovo
mov
and
xor
or
test
cmp
ror
add
push
adc
add
mov
lods
jae
mov
(bad)
push
add
xor
mov
test
and
add
(bad)
out
xor
add
inc
add
add
mov
cmp
mov
dec
add
add
sbb
mov
(bad)
cli
xor
(bad)
ret
ss
lods
and
les
add
jmp
test
sub
add
add
jmp
add
add
mov
lea
cmps
push
or
mov
add
(bad)
faddp
pusha
mov
mov
call
mov
lea
ds
add
push
mov
out
and
add
mov
or
add
test
add
xor
add
inc
mov
or
add
dec
add
mov
mov
jns
fdivp
(bad)
mov
lea
lea
add
mov
jmp
ret
je
or
mov
add
add
and
idiv
mov
scas
add
lods
mov
sbb
and
adc
mov
pushf
or
or
add
add
test
or
into
mov
mov
mov
pop
or
add
leave
mov
mov
mov
and
add
cmp
add
dec
xchg
and
mov
(bad)
(bad)
mov
mov
cmp
xor
inc
and
add
add
add
movs
lds
inc
int
add
test
add
into
add
add
cmps
test
add
sahf
inc
jae
jmp
mov
mov
mov
mov
es
or
ret
shl
sub
inc
jmp
jne
int3
add
add
add
inc
add
add
cmps
cli
cmp
jns
test
add
sbb
xor
xor
sti
cld
adc
(bad)
dec
test
mov
add
or
or
movs
mov
or
xor
add
and
cld
test
es
lock
sahf
ss
mov
mov
add
into
lea
pop
or
add
cmp
dec
add
mov
in
aaa
lea
mov
inc
sbb
sbb
adc
add
jo
add
pop
add
add
push
xor
shl
add
outs
test
mov
mov
sahf
mov
sbb
es
xchg
shl
add
xor
push
add
add
add
mov
test
mov
and
mov
dec
test
add
add
mov
add
add
add
add
add
mov
movs
mov
add
and
add
or
or
inc
and
add
mov
mov
movs
in
lods
add
jae
cmp
add
call
mov
mov
jno
mov
pop
xor
add
pushf
(bad)
dec
out
mov
and
dec
mov
push
add
add
jp
or
mov
int
lock
inc
inc
add
add
xchg
mov
mov
hlt
or
add
repz
add
mov
out
jle
inc
test
test
add
add
test
aam
add
mov
and
test
sbb
or
mov
mov
mov
or
mov
xor
mov
add
or
and
loopne
add
inc
retf
and
add
(bad)
jmp
mov
lahf
daa
out
sbb
and
daa
add
or
cmovne
mov
inc
outs
or
add
adc
add
mov
sbb
pop
or
add
out
xchg
test
nop
(bad)
push
add
add
add
xor
add
clc
add
imul
and
test
add
push
(bad)
(bad)
pop
into
add
setl
mov
xor
call
xor
mov
and
and
inc
test
add
adc
or
mov
mov
or
stc
mov
retf
add
mov
faddp
add
aam
sub
sbb
mov
vmwrite
dec
jge
in
add
jae
lea
retf
mov
aad
nop
(bad)
push
add
add
sub
loope
xor
add
cmp
(bad)
mov
adc
add
int
cwde
xor
rsqrtps
push
test
les
cmp
dec
fdiv
cmp
mov
add
lods
mov
ret
jae
add
out
or
push
fdiv
leave
mov
pop
add
add
mov
iret
test
mov
adc
sbb
add
sub
add
or
push
jmp
mov
js
inc
xor
add
add
xchg
rol
sub
imul
loop
add
add
cli
add
mov
daa
xchg
ret
cmp
setl
mov
(bad)
push
add
inc
ror
add
(bad)
cmp
add
cmp
add
add
add
sbb
ret
sub
punpcklwd
and
cmp
push
mov
sbb
add
add
sbb
mov
cld
and
or
mov
jl
add
and
and
or
mov
jmp
iret
mov
cld
not
or
icebp
mov
jmp
(bad)
fisubr
in
add
pop
sahf
mov
mov
xor
xchg
imul
push
sub
cmps
add
add
add
out
add
add
mov
mov
mov
mov
lahf
rol
in
icebp
add
in
mov
mov
imul
add
outs
stos
cmp
loope
pop
mov
leave
adc
mov
imul
and
adc
add
adc
dec
add
rol
or
add
ret
popa
adc
test
mov
add
jmp
mov
mov
mov
dec
xor
inc
ret
cmp
xchg
add
sub
(bad)
xlat
and
cmp
cvtps2pd
cmp
setl
xor
cmp
test
xor
mov
jmp
cmp
cmp
cdq
push
add
ret
add
add
push
mov
push
adc
ret
nop
(bad)
push
add
add
jge
xchg
sub
ret
or
scas
repz
add
sub
add
sete
dec
pop
add
add
popa
mov
add
mov
xor
and
mov
and
mov
mov
and
hlt
jnp
xor
mov
or
xor
or
jle
(bad)
cld
test
dec
aam
lods
cmp
leave
sbb
mov
imul
mov
repz
mov
sti
ret
inc
jns
add
jmp
mov
jo
pop
and
mov
mov
nop
(bad)
push
add
add
ret
ror
jmp
add
sub
jl
repz
cmp
add
add
xchg
mov
setl
mov
dec
neg
mov
mov
repz
and
and
mov
and
and
or
or
mov
mov
mov
add
or
test
mov
data16
add
icebp
mov
add
cs
pop
add
adc
add
adc
dec
add
push
cwde
(bad)
sahf
jge
dec
cmp
mov
jo
add
add
add
and
add
add
mov
push
add
add
mov
imul
and
adc
push
(bad)
mov
add
daa
pushf
ror
test
add
add
sub
call
add
loopne
add
fild
movs
xchg
add
add
add
cmps
nop
sti
test
mov
and
mov
mov
or
dec
mov
pusha
mov
mov
iret
(bad)
mov
xor
lahf
cmp
xchg
lods
add
or
xor
mov
and
nop
mov
jmp
mov
jmp
mov
mov
mov
mov
mov
out
aaa
cdq
cmps
fld
ret
aaa
or
fst
xlat
mov
add
add
cmp
sete
pop
dec
add
add
pushf
cmps
mov
sti
or
test
jb
in
adc
add
mov
retf
(bad)
cmp
add
add
mov
add
add
pop
add
add
add
mov
mov
sub
mov
mov
add
iret
ret
mov
into
fadd
int
cmc
add
setl
mov
xor
add
xor
cmp
test
add
adc
test
into
add
push
sbb
mov
(bad)
mov
mov
add
mov
mov
mov
hlt
add
or
mov
ret
cmovne
dec
mov
jmp
mov
mov
cdq
mov
mov
and
adc
add
ret
lds
and
add
mov
mov
add
test
mov
outs
adc
dec
add
or
mov
test
add
cmp
mov
stos
mov
jmp
lea
jo
add
mov
mov
add
rol
adc
add
and
add
add
add
add
cdq
retf
inc
in
xor
mov
jmp
mov
add
leave
add
dec
add
rol
inc
pop
pop
pop
pop
ret
nop
add
ret
push
add
add
add
mov
mov
add
adc
jl
dec
and
call
mov
sbb
clc
fist
or
add
add
add
mov
add
add
add
sbb
push
into
add
mov
mov
mov
fild
dec
and
add
mov
push
shl
(bad)
mov
lea
lea
xor
add
and
add
add
mov
and
inc
dec
and
call
lea
jp
add
adc
je
cld
add
add
leave
add
jnp
inc
nop
add
jae
pop
add
mov
aad
cmp
push
add
imul
xchg
and
arpl
xor
add
mov
cmp
push
add
add
shl
jl
(bad)
xchg
jae
sub
cmp
push
add
add
xchg
and
int
fmul
and
mov
mov
mov
mov
and
das
inc
lahf
idiv
lea
inc
hlt
mov
sbb
mov
mov
add
add
ret
mov
add
mov
jmp
and
shl
and
retf
jmp
lea
or
lea
hlt
jo
add
add
inc
jmp
inc
rcr
add
jmp
inc
sbb
shl
add
je
aaa
add
add
sub
add
jae
ror
add
add
mov
or
dec
fsub
add
add
and
mov
inc
push
and
mov
call
mov
mov
mov
lea
lea
rcl
fmul
out
mov
mov
add
add
and
add
lods
add
inc
mov
mov
and
dec
push
and
call
mov
push
inc
and
jmp
fdiv
add
add
jge
add
add
add
lea
sbb
mov
mov
and
inc
add
fadd
inc
and
popa
add
add
inc
and
add
(bad)
mov
pushf
dec
movs
in
push
and
call
mov
mov
jmp
jae
and
add
add
inc
sub
mov
or
add
mov
mov
jmp
(bad)
(bad)
(bad)
(bad)
call
inc
in
or
test
in
add
cmp
js
les
jmp
mov
mov
add
add
add
dec
or
inc
in
add
cdq
movs
or
add
or
sahf
les
add
add
or
fidivr
add
sub
dec
cld
inc
sbb
movzx
mov
mov
mov
or
jne
add
inc
add
add
add
add
add
mov
pop
sbb
mov
pushf
hlt
mov
push
and
mov
call
mov
mov
mov
cmp
les
lea
add
and
adc
jl
or
aad
or
inc
add
mov
mov
mov
test
inc
sub
sar
jecxz
add
add
shl
imul
jae
and
add
add
pop
xor
add
mov
jmp
(bad)
in
in
add
pop
movs
call
mov
mov
xor
dec
add
mov
test
add
ret
in
mov
sub
or
add
(bad)
dec
clc
in
pusha
add
aas
jmp
(bad)
call
and
add
arpl
xchg
addr16
xchg
shr
int
(bad)
fisubr
aad
sbb
nop
jl
push
dec
pusha
hlt
scas
loop
xor
or
rol
cmp
push
add
or
mov
ret
mov
repnz
jge
ins
mov
cmps
lea
adc
ins
call
cmps
pusha
ja
call
cmp
aas
sub
cdq
or
mov
sbb
push
test
in
aam
aam
ret
and
ret
pop
ficom
popf
push
mov
jp
in
loop
and
fdiv
add
push
lock
and
push
add
cmp
call
outs
xor
aaa
jecxz
add
sub
cwde
mov
mov
pop
push
(bad)
retf
cmp
loope
mov
pop
inc
dec
jnp
sbb
and
push
inc
and
jb
repz
xchg
mov
clc
jp
pop
pusha
das
sub
iret
mov
sbb
cmp
inc
mov
push
jb
push
xor
mov
xor
call
enter
imul
and
or
mov
fidivr
or
gs
add
xchg
xchg
sub
cmps
and
sbb
mov
aas
sbb
inc
push
aad
push
cmp
dec
lock
imul
mov
clc
push
test
sbb
dec
xor
mov
cmp
xor
xor
leave
adc
and
out
imul
pop
mov
dec
cli
test
and
shr
int
or
xor
inc
adc
fwait
in
or
pop
inc
shr
jno
(bad)
es
fisubr
retf
repz
jmp
(bad)
jmp
or
ja
pushf
fs
fcomip
inc
push
jae
or
cmc
repnz
icebp
and
(bad)
popa
stos
push
inc
test
mov
jbe
sbb
in
out
fistp
in
adc
jns
cmps
imul
xchg
jle
push
adc
add
xor
ja
outs
stos
push
popa
sahf
cmc
inc
inc
mov
mov
push
push
pop
push
cli
fucomi
xor
pop
lock
rol
xor
scas
mov
sbb
cmp
add
ret
movs
(bad)
cwde
jmp
sbb
pop
or
shr
loopne
(bad)
push
add
mov
dec
nop
adc
pop
xchg
out
pop
cmps
inc
mov
jg
jo
mov
mov
in
(bad)
cmp
push
(bad)
arpl
mov
sub
xor
or
hlt
and
fwait
mov
test
aam
inc
div
js
(bad)
cwde
xor
xchg
sahf
ret
inc
inc
lds
sbb
sub
(bad)
fdivr
ins
mov
adc
or
adc
in
dec
les
jge
mov
mov
xor
cmc
repnz
jge
mov
mov
stos
jecxz
push
enter
shl
push
inc
push
pop
inc
xor
idiv
ins
fsubr
add
inc
(bad)
dec
push
mov
shl
div
ds
or
adc
sbb
adc
in
or
test
xor
inc
xchg
les
push
inc
add
ret
mov
jg
add
ja
mov
inc
mov
mov
sar
jo
adc
loop
cwde
jl
repz
fist
aam
retf
adc
movs
jge
xchg
lods
dec
call
adc
test
adc
inc
rcr
mov
stos
shl
mov
add
add
adc
add
pop
push
popa
cmps
addr16
push
jmp
sbb
inc
dec
rcl
inc
aaa
retf
inc
sub
xor
adc
js
jmp
push
lahf
sub
pop
outs
jnp
loopne
xchg
data16
xchg
xor
sub
int
mov
cmp
cmp
mov
aaa
sub
call
(bad)
mov
in
(bad)
dec
sub
pop
out
out
push
test
xchg
pop
fcom
push
sbb
jge
add
lahf
ins
lock
shr
xor
dec
and
cmp
push
dec
(bad)
retf
addr16
mov
lds
push
jae
xor
scas
in
outs
push
ret
mov
sub
pop
ret
jae
cmp
inc
rcr
pop
mov
(bad)
jge
jmp
dec
mov
pop
scas
push
inc
push
sub
cmc
stc
jle
ja
int3
call
stos
pop
nop
mov
frstor
add
aad
in
jnp
sub
mov
into
es
lods
mov
jp
inc
xor
pushf
sub
sahf
ret
xor
xor
adc
sub
fcom
mov
rcl
xchg
xor
hlt
shl
mov
xor
inc
inc
cld
inc
jbe
ss
adc
out
xrelease
adc
pop
push
inc
shl
xchg
ffreep
loopne
push
jbe
push
inc
in
imul
dec
jo
in
neg
add
xchg
ss
js
dec
dec
in
dec
inc
std
xlat
inc
gs
in
jle
fcomip
in
inc
scas
fadd
xor
bnd
push
add
mov
push
call
or
cmc
retf
lea
pushf
jae
in
jecxz
adc
ins
gs
cdq
loope
mov
jg
lods
inc
push
adc
ret
dec
pop
bnd
cld
fdivr
aam
xor
push
push
sti
mov
inc
out
inc
dec
stc
add
pop
aam
adc
test
retf
mov
mov
sbb
jmp
xor
mov
fs
std
adc
fild
retf
pop
(bad)
std
or
pop
dec
ror
sbb
and
shl
dec
or
push
ficomp
inc
or
push
(bad)
cdq
imul
pop
in
inc
mov
jl
stos
imul
fdivr
lods
pop
jo
jns
out
out
int
add
in
fmul
sub
repnz
(bad)
into
cmp
cmp
or
push
jno
in
es
ret
xchg
ret
idiv
scas
arpl
mov
sbb
ud0
cs
iret
(bad)
pop
sbb
cld
and
cmp
in
mov
inc
add
test
mov
test
movs
mov
add
adc
shl
pop
cmc
mov
(bad)
js
cmp
mov
stos
imul
cmps
xchg
mov
jmp
mov
xchg
mov
cmp
stos
js
cli
pusha
stc
mov
add
lods
lahf
sahf
add
imul
repz
adc
sbb
jmp
shr
nop
test
repnz
adc
scas
sbb
mov
mov
mov
mov
retf
and
(bad)
repz
mov
es
sbb
push
sti
sub
addr16
push
loop
add
addr16
out
mov
(bad)
sub
dec
rcr
cmp
dec
test
fcom
fs
ja
scas
cld
call
int
jmp
xchg
push
adc
aaa
pop
jne
pop
pop
pop
in
jp
cmc
cmc
mov
enter
scas
pop
mov
into
out
ss
rcr
pop
push
lahf
add
test
push
sbb
(bad)
sbb
and
xchg
std
sbb
repnz
mov
inc
cmps
shl
movs
movs
jnp
jg
into
repnz
cli
and
mov
xchg
int
cdq
sbb
int
add
mov
pop
or
test
ret
inc
sub
mov
sbb
xchg
dec
dec
je
cmp
push
outs
inc
sbb
adc
push
dec
in
hlt
mov
and
jmp
xchg
cmp
xchg
xchg
xlat
adc
and
stos
inc
xchg
test
dec
mov
mov
push
dec
lahf
out
cmps
pop
sti
stos
and
push
cmc
shr
pop
loope
pusha
kandnw
jg
dec
(bad)
div
push
mov
dec
fmul
xor
stos
call
add
cmp
ja
and
and
(bad)
icebp
xchg
das
sub
jge
cmps
cmp
sbb
pushf
test
xor
mov
pop
fadd
stc
shr
jae
imul
dec
repz
fld
push
dec
dec
cmp
xchg
retf
inc
lds
xchg
xor
cmc
mov
in
mov
(bad)
inc
jb
pop
fisttp
(bad)
fld
movs
retf
inc
and
bound
sub
fiadd
jo
das
neg
and
hlt
add
cwde
(bad)
ds
popf
lea
jnp
sbb
fadd
push
fs
cmp
fsubrp
js
icebp
out
adc
jg
(bad)
jo
cmp
outs
inc
or
(bad)
loope
xrelease
popf
ins
jno
dec
ins
pop
adc
sub
test
cmp
movs
stos
pop
or
jnp
test
sar
stos
push
loopne
mov
sidtd
jbe
sbb
cmp
pop
loope
shr
sbb
in
fisttp
fidivr
xchg
push
out
or
sbb
inc
inc
mov
push
add
(bad)
adc
aad
pop
stos
scas
jge
mov
mov
out
pop
inc
out
mov
xor
xchg
and
inc
mov
iret
xchg
arpl
mov
cld
std
inc
(bad)
idiv
mov
daa
cmc
mov
jbe
into
or
mov
jl
dec
mov
mov
push
jae
or
dec
push
hlt
outs
pop
mov
pusha
push
sbb
ret
and
mov
sbb
push
mov
ret
add
adc
push
push
dec
add
neg
shl
in
inc
jmp
mov
cmp
outs
mov
jl
shl
stos
outs
pop
mov
adc
sub
or
mov
pop
jno
push
outs
dec
loopne
ja
jbe
pop
into
(bad)
mov
inc
jle
push
mov
xchg
movs
jl
sahf
movs
cwde
xor
add
xchg
out
pop
(bad)
jmp
dec
jno
aad
repz
arpl
call
and
lahf
push
pushf
loopne
pusha
shl
xchg
aas
cli
test
in
xor
out
repnz
xor
mov
push
xor
xor
dec
loop
imul
dec
pop
push
inc
aam
test
sbb
inc
jae
sbb
ja
aas
push
jo
inc
inc
mov
pop
mov
cmc
and
stos
add
test
shl
push
cmp
mov
jno
sub
jmp
sbb
add
mov
pop
add
mov
xor
xchg
movs
jno
(bad)
fadd
add
mov
fidivr
push
stos
inc
push
out
sub
mov
add
(bad)
mov
dec
sbb
mov
adc
sub
cmps
in
sub
retf
pusha
int3
(bad)
test
outs
out
adc
cmc
cmp
dec
stos
sar
rcl
push
mov
xchg
out
clc
push
xor
jmp
retf
aaa
push
xchg
add
inc
ins
sbb
(bad)
cwde
xchg
gs
cmp
adc
add
mov
adc
push
movs
sub
les
cmp
(bad)
repnz
mov
adc
outs
lods
das
xchg
ja
es
jle
jne
add
mov
add
jo
cs
xchg
or
adc
out
push
aam
test
fcmovnbe
int
(bad)
aam
jecxz
adc
outs
dec
daa
lea
inc
iret
jbe
cmps
out
and
je
ret
shl
int3
sub
out
ret
push
in
enter
jge
pusha
popf
sbb
lds
pop
lods
dec
cdq
inc
cmps
xor
cmp
xor
mov
outs
mov
cmp
xchg
ja
ret
cmps
sti
mov
outs
sbb
sbb
test
dec
jo
popf
into
fdiv
jnp
inc
adc
inc
retf
out
xchg
inc
sbb
jnp
stos
lds
rol
sub
xlat
jl
jo
lock
mov
fdiv
cmp
xor
out
(bad)
mov
shr
sti
or
jne
mov
cli
push
call
add
shl
pop
pop
mov
and
ret
jge
push
mov
test
mov
or
outs
call
push
shl
ins
ret
(bad)
mov
cmp
xchg
xor
push
push
dec
push
sub
arpl
add
xor
add
adc
out
fdivp
adc
iret
rcr
and
jp
sahf
add
cld
ds
test
test
or
test
fldcw
pushf
inc
dec
shr
enter
xor
xor
call
xchg
or
int3
sub
pop
inc
mov
mov
inc
jle
je
or
fmul
ss
cmps
xchg
push
or
in
pop
out
lock
and
into
sub
adc
push
out
jo
mov
test
mov
loopne
push
xor
imul
xchg
dec
out
sbb
cmp
aaa
or
(bad)
mov
test
mov
out
push
lods
frstor
into
sar
test
push
jmp
(bad)
in
push
pop
mov
sbb
jl
ds
outs
sbb
inc
imul
xor
jecxz
std
cld
into
or
pop
pop
adc
mov
loopne
jge
mov
dec
int3
jne
imul
lahf
std
out
add
scas
dec
xor
cld
mov
adc
adc
call
pop
int
in
cmp
imul
es
pop
and
test
clc
jl
or
pop
xor
xchg
sti
cs
dec
and
xchg
xchg
xchg
cmp
mov
aaa
and
xor
outs
or
repnz
hlt
fcmovu
(bad)
fs
shr
out
inc
sub
mov
retf
call
dec
jle
in
dec
pop
nop
xlat
mov
bnd
xchg
movs
je
rol
fcom
scas
push
cmps
bound
inc
and
jnp
pop
das
retf
sbb
adc
(bad)
cmp
dec
mov
xor
pop
jp
into
jns
das
loopne
fidivr
mov
pop
dec
and
adc
inc
nop
cmp
mov
inc
mov
stos
daa
sub
xor
sbb
cmps
mov
fmul
push
dec
leave
shl
out
mov
mov
mov
mov
mov
aam
xchg
pop
fld
dec
mov
lds
out
mov
and
jge
daa
cmp
push
(bad)
call
or
cdq
sub
lock
fcomp
aad
push
add
in
fs
mov
lock
shl
cmp
sbb
sub
gs
loope
in
push
test
push
(bad)
jne
cld
push
or
xor
or
jb
or
cld
aas
fxch
out
hlt
and
gs
mov
push
(bad)
pop
push
test
mov
out
leave
sahf
iret
rol
xor
cmp
nop
ss
fild
loope
into
cmp
mov
mov
xchg
and
ror
mov
mov
in
inc
jl
and
jns
and
mov
out
cld
(bad)
xor
push
test
xor
into
icebp
popf
fwait
mov
icebp
jo
pushf
mov
cmp
jl
inc
xchg
int3
sbb
out
test
pop
test
inc
aad
iret
sbb
inc
add
jp
adc
cdq
popf
js
sub
push
jg
adc
lock
pusha
ins
push
and
fistp
stos
add
test
jne
push
or
call
xchg
xchg
addr16
loope
sub
pusha
and
mov
sub
fst
stos
inc
into
scas
jle
adc
cmps
(bad)
gs
mov
call
cmps
imul
js
mov
retf
pop
(bad)
cmps
(bad)
push
push
ror
mov
int
jmp
retf
enter
ret
outs
mov
push
ins
fimul
mov
jl
mov
dec
call
pushf
sbb
jge
xlat
cmp
loope
or
rcr
ror
mov
dec
std
jns
pop
mov
stos
int3
sbb
jecxz
int3
pushf
inc
adc
adc
fistp
push
sub
pusha
mov
xchg
mov
xor
int
sbb
(bad)
adc
mov
sub
stos
jle
xchg
fidivr
and
sbb
sub
cwde
add
jp
adc
xchg
lds
call
mov
scas
cmp
popf
sub
fs
std
push
outs
sub
pop
xor
je
in
dec
sbb
test
in
aad
iret
mov
fild
and
rcr
inc
mov
fdiv
mov
mov
push
and
cmp
pop
sub
mov
pop
in
pop
shl
aam
sbb
mov
push
dec
mov
add
add
nop
push
mov
xchg
(bad)
cli
fiadd
hlt
iret
jnp
dec
stos
daa
ret
jecxz
pop
out
jge
inc
lea
in
jo
cmc
xchg
daa
dec
push
mov
pusha
sub
mov
xor
inc
fsub
test
loopne
shr
add
jl
sub
xchg
cmps
pop
mov
xor
xchg
scas
inc
inc
(bad)
cmp
aas
dec
sahf
jl
xor
gs
arpl
hlt
sub
jbe
mov
adc
in
cwde
mov
fadd
nop
push
loop
movs
push
test
mov
in
mov
cmp
cmc
sbb
fcom
test
mov
fisubr
xchg
push
out
fcomp
mov
and
mov
xor
lods
and
mov
int3
xchg
mov
inc
retf
mov
cli
ins
push
shl
dec
push
sub
push
gs
mov
pop
lea
jbe
dec
mov
es
adc
sbb
mov
mov
or
neg
sub
ja
test
fld
push
stos
push
jbe
jle
xchg
into
retf
mov
inc
cmc
iret
stc
fcomp
(bad)
sbb
hlt
xchg
xabort
loope
fmul
dec
sbb
aas
stos
leave
sub
aas
retf
dec
cmp
add
jns
sub
dec
pop
mov
hlt
or
hlt
loope
mov
repz
into
in
dec
leave
movs
add
(bad)
push
out
adc
dec
sbb
sub
retf
jae
xchg
add
lods
loop
mov
add
pop
cmp
dec
ja
push
xor
je
sbb
outs
cmp
cmp
add
mov
or
stc
movs
pop
mov
fxch
movs
loop
jecxz
lea
sub
push
ins
xchg
fisttp
movs
xor
add
xor
xor
inc
mov
xlat
sub
sbb
cmp
(bad)
fs
cmp
cld
arpl
shrd
popa
or
add
dec
dec
les
and
pushf
xchg
jno
or
xor
hlt
push
mov
mov
pop
icebp
xor
rcl
std
cmp
pop
out
adc
or
retf
inc
inc
sub
adc
(bad)
and
push
inc
mov
imul
stos
xor
aaa
sbb
(bad)
jb
(bad)
pop
jb
das
dec
mov
adc
cmp
pop
aas
ficom
mov
rol
xlat
mov
int3
aaa
sbb
or
mov
xor
outs
inc
shl
adc
inc
cmp
push
add
sahf
dec
mov
call
shl
std
and
call
or
inc
int3
xchg
add
call
sbb
(bad)
mov
and
out
jae
mov
in
xchg
lock
ror
sar
mov
das
fstp
xor
movs
ss
loop
sub
mov
daa
push
test
mov
(bad)
scas
std
pop
push
movs
cmp
push
ret
call
in
pop
fs
jl
test
in
fdiv
aas
mov
inc
stos
pop
(bad)
rep
mov
cmp
imul
retf
jmp
ja
out
pop
adc
jo
xchg
fist
inc
push
in
enter
bound
out
pop
fs
in
leave
ss
or
jecxz
ss
or
sub
lahf
dec
xchg
mov
loop
sbb
mov
xchg
jnp
outs
inc
ficomp
mov
imul
cmp
push
(bad)
mov
call
jb
cld
mov
idiv
call
popf
push
int3
in
push
iret
pop
bnd
jp
mov
addr16
fwait
fs
mov
sti
in
scas
pushf
or
xor
pop
enter
xchg
and
int
xor
jae
push
add
pushf
sbb
push
jo
repz
dec
jmp
movs
arpl
in
sub
lods
push
in
sahf
cmps
adc
jo
aas
sbb
cmps
mov
jp
cs
or
out
push
pushf
nop
cdq
lock
xor
push
popf
clc
jo
and
xcrypt-ctr
cmps
sbb
ja
pop
ja
xchg
fist
test
jne
dec
rol
call
inc
pop
arpl
iret
xchg
push
test
pop
inc
repnz
mov
xchg
jl
out
jp
push
xchg
mov
xor
aad
aas
in
clc
iret
cmp
cmp
ret
pop
mov
add
shr
test
leave
inc
cmp
push
test
data16
adc
mov
mov
call
add
enter
loope
aaa
pop
sub
add
pusha
call
je
push
sbb
pop
adc
xor
mov
inc
mov
xchg
cmps
xor
call
gs
pop
jecxz
fnsave
hlt
movs
mov
dec
or
xchg
(bad)
cmp
loope
jns
loopne
add
ins
dec
outs
inc
ficom
inc
loopne
xchg
leave
into
mov
jo
daa
ja
cmp
in
inc
cmps
xchg
jno
jmp
cmp
stos
xchg
and
std
mov
xchg
jbe
mov
sti
arpl
call
inc
in
lods
xchg
in
pop
pop
xchg
icebp
loop
mov
cmp
(bad)
fldenv
inc
cmp
xchg
pop
push
xchg
jecxz
mov
cld
les
dec
cld
cmps
fsub
stc
(bad)
cdq
test
fbld
jb
mov
push
loope
(bad)
mov
jmp
mov
ja
repnz
or
jle
loop
xchg
add
stos
rcl
es
add
icebp
xor
jmp
sahf
fadd
out
add
dec
sub
push
mov
pop
fcmovnbe
xor
je
js
mov
sbb
std
jo
stos
mov
rcr
leave
xchg
pop
shl
mov
clc
sbb
dec
fmul
jp
and
adc
mov
or
and
sub
push
lods
(bad)
sti
in
fisttp
sbb
icebp
mov
mov
add
retf
aaa
sar
arpl
inc
inc
jno
xchg
jmp
and
mov
loopne
xchg
push
cwde
cwde
out
mov
dec
cmp
pusha
inc
jmp
adc
neg
adc
push
pop
ins
js
ins
dec
cmps
or
cmp
xchg
data16
in
and
retf
in
or
and
(bad)
mov
imul
push
jb
scas
sahf
pushf
int
pushf
mov
and
cmp
stc
xchg
lods
lock
ret
mov
gs
pusha
mov
or
mov
or
out
popf
loopne
jle
sub
shl
xor
adc
add
loop
push
cwde
or
pop
(bad)
aaa
and
adc
inc
(bad)
lock
fs
add
jbe
addr16
lea
jmp
push
mov
push
daa
cmp
imul
dec
push
inc
and
or
mov
jne
mov
sub
inc
xor
call
xchg
stos
aas
pop
mov
push
xor
push
call
or
mov
push
sbb
inc
push
sub
sub
fprem1
dec
sub
imul
test
jbe
pop
clc
mov
jp
out
pop
sbb
mov
cld
xor
je
adc
push
(bad)
jmp
imul
dec
mov
aad
dec
popa
movs
and
stc
sub
(bad)
or
push
push
xor
pushf
in
ins
xor
add
scas
(bad)
or
sbb
out
xchg
push
sub
imul
(bad)
cs
pop
xchg
and
push
cmp
pop
mov
outs
jmp
jg
out
out
and
icebp
imul
push
xchg
mov
sub
cmps
add
jnp
ficom
or
fwait
clc
pop
popa
mov
mov
cli
jb
ud1
test
in
ds
(bad)
cli
adc
(bad)
rcl
sar
clc
adc
popf
movs
jb
cmp
or
cmps
repnz
aas
loopne
mov
sbb
mov
test
idiv
adc
pop
add
sub
mov
hlt
das
outs
mov
and
aad
pop
movs
ins
push
cdq
xchg
mov
imul
mov
(bad)
adc
cmp
ds
(bad)
lahf
arpl
pop
or
mov
fucomip
pushf
cmp
ins
mov
mov
in
mov
sbb
in
data16
setno
adc
mul
in
sbb
add
mov
dec
inc
repz
pop
mov
loop
in
lea
mov
sti
lock
aad
les
iret
xchg
sbb
shl
fild
test
sti
ficomp
dec
mov
gs
fadd
ja
loop
fs
mov
mov
xchg
cwde
icebp
sbb
das
mov
cmp
in
int
out
sub
stc
gs
xchg
jbe
cmps
add
xchg
cmp
dec
add
outs
ins
jge
retf
pop
mov
xchg
add
into
das
xor
or
out
ds
xor
mov
dec
data16
stos
bound
sub
test
inc
cmc
inc
enter
std
push
cmc
mov
sbb
jo
sti
xor
in
ja
clc
push
pop
dec
adc
gs
aam
push
xor
pop
test
out
sar
lds
fist
add
xchg
jmp
repz
and
test
jno
pop
xor
mov
not
inc
fnstcw
inc
stos
loopne
cmp
(bad)
push
inc
push
mov
scas
mov
loope
dec
jo
imul
dec
and
div
cwde
and
aad
cmc
fsub
repz
add
adc
scas
clc
xchg
call
mov
push
cmp
adc
mov
loopne
ret
daa
pop
xchg
pop
mov
jmp
mov
fcmovu
ja
xor
sbb
pop
repz
mov
(bad)
aas
cmp
mov
leave
call
gs
das
inc
cmp
test
cmps
lea
xor
and
lods
sbb
int
mov
xor
jp
jns
loopne
cs
pop
cmp
push
add
mov
adc
mov
(bad)
sbb
rcr
sbb
mov
loope
call
inc
jns
call
outs
fidivr
jb
adc
adc
mov
lds
dec
mov
inc
mov
popf
push
jo
cmp
mov
(bad)
mov
jb
mov
xchg
jmp
pop
jbe
(bad)
cs
imul
push
sub
and
enter
arpl
neg
stc
int
jns
enter
mov
dec
adc
icebp
or
mov
cmp
jno
ja
sahf
aas
inc
aam
sbb
test
jle
inc
data16
imul
push
repz
ss
arpl
mov
mov
push
lahf
sbb
xchg
jmp
cmps
cmp
sub
aas
(bad)
sub
mov
cmp
jmp
sub
push
jl
ffreep
fs
nop
lods
fwait
pop
mov
inc
out
pop
adc
out
call
jno
scas
popa
mov
mov
xor
bound
test
pop
adc
adc
(bad)
mov
jnp
(bad)
aam
inc
adc
cmp
rol
mov
ds
dec
out
jp
pop
(bad)
in
jno
push
(bad)
aam
repnz
cmp
or
cld
adc
lods
into
pop
int3
imul
fwait
xor
push
inc
int3
push
jnp
loopne
inc
jns
jmp
test
hlt
(bad)
in
lahf
xor
mov
cld
imul
sbb
shl
les
daa
data16
sbb
add
pop
add
or
retf
sub
jae
iret
push
xchg
sbb
gs
jno
pop
mov
push
push
test
add
scas
mov
add
ja
add
pop
mov
std
xor
dec
cmps
js
mov
in
mov
adc
xor
jno
std
adc
dec
cmps
loope
mov
push
sti
iret
add
or
mov
or
movs
pop
adc
fdiv
test
sbb
sti
cmp
jbe
outs
jb
les
mov
retf
pop
mov
sub
pop
call
into
sbb
push
call
push
jle
clc
jmp
cli
push
js
int
mov
cwde
sbb
xchg
xor
add
repnz
sub
mov
jg
adc
xor
mov
mov
inc
sbb
and
in
enter
out
dec
mov
cmp
mov
fnstcw
enter
pop
inc
fst
outs
sub
dec
arpl
mov
clc
rcl
and
inc
sbb
pop
movs
loopne
pop
leave
dec
mov
fdivr
mov
lods
pop
ret
out
sub
xor
les
cdq
and
pushf
inc
call
inc
retf
addr16
push
jne
adc
dec
jb
inc
xor
cmp
ror
add
mov
xchg
and
mov
or
aas
and
sub
int
call
mov
jmp
xchg
gs
jnp
cmp
or
add
xor
fild
ins
mov
xor
enter
lods
mov
(bad)
and
inc
jns
add
ss
mov
jg
mov
xor
push
call
push
mov
push
add
out
sbb
dec
lahf
(bad)
jl
das
jmp
out
imul
sbb
repnz
retf
int
(bad)
es
push
push
or
mul
cmp
jl
pop
mov
mov
jnp
cwde
call
js
dec
fstp
push
lock
jnp
adc
push
arpl
mov
inc
adc
pop
fdivr
push
out
adc
xor
std
je
(bad)
adc
lods
shl
pop
sub
mov
mov
jp
repz
nop
rol
jo
pop
ins
jne
icebp
ja
sbb
inc
and
(bad)
cmp
jg
cmp
or
push
push
dec
repnz
xor
add
outs
hlt
sbb
or
mov
and
dec
sbb
or
pop
adc
popf
cmp
inc
div
scas
aas
fwait
pop
xchg
mov
lea
test
in
mov
ffree
jmp
cmp
in
lea
cmp
mov
or
xor
xor
sbb
pop
fidivr
dec
jge
ja
pop
sub
lahf
fstp
mov
or
(bad)
les
cdq
cmp
jmp
fwait
push
push
and
imul
call
xchg
and
mov
dec
adc
lahf
fsin
sbb
aad
(bad)
mov
sahf
lahf
mov
push
xor
mov
ins
push
xchg
in
enter
lds
shl
aam
push
xchg
cmp
jns
(bad)
cdq
bound
push
adc
lds
sub
sub
xor
ja
cli
(bad)
cmp
jmp
cmp
call
out
xor
jbe
pop
retf
add
dec
xchg
aas
and
icebp
call
jmp
pop
jecxz
sbb
(bad)
adc
fiadd
mov
daa
int3
popa
mov
jp
rol
sub
retf
repz
cmp
jo
mov
test
call
jmp
icebp
inc
scas
jns
sub
adc
mov
aam
jl
in
lock
test
mov
adc
mov
jns
nop
std
movs
in
setnp
int3
sub
xor
sub
test
push
jns
ret
mov
xchg
pusha
pushf
fldenv
mov
sub
gs
rol
daa
xchg
hlt
ja
xchg
test
sti
in
scas
(bad)
(bad)
sbb
aad
mov
stc
jbe
add
xchg
fimul
movs
sub
rcl
adc
cmps
test
xchg
xchg
sbb
ja
push
mov
lods
or
adc
loope
call
test
mov
sub
mov
out
data16
mov
xchg
repnz
imul
icebp
(bad)
cmc
and
adc
ss
mov
(bad)
mov
ins
fdivr
push
mov
sahf
scas
mov
outs
cmc
xor
mov
add
add
push
inc
jbe
push
call
cmps
mov
imul
and
ins
scas
leave
fcomp
ret
loope
sub
fld
ja
(bad)
pop
mov
mov
aaa
outs
test
lods
(bad)
mov
sub
cmp
fmul
jecxz
idiv
xchg
cld
lds
mov
sbb
inc
push
push
mov
jge
in
xchg
fisttp
mov
pushf
jb
aas
ins
jne
adc
xor
cmp
push
aas
mov
push
imul
sub
cmp
push
or
sbb
add
and
pop
movs
inc
cmp
movs
outs
and
and
nop
jne
jbe
nop
jne
jp
dec
mov
push
retf
mov
push
adc
retf
mov
and
scas
(bad)
stc
jbe
ret
pop
and
push
pushf
xor
add
sub
pop
adc
enter
imul
mov
call
adc
sti
sbb
je
fiadd
das
outs
mov
push
sar
shl
movs
and
cmps
das
mov
sahf
and
jecxz
int
dec
push
test
iret
pusha
out
push
cmps
in
ret
fisttp
mov
pop
imul
dec
pop
retf
pop
outs
adc
(bad)
aad
cmp
mov
push
jmp
enter
xchg
repnz
fistp
out
test
pop
arpl
push
xor
jl
lods
dec
inc
pop
pop
inc
aad
outs
retf
sar
dec
mov
and
int
mov
lahf
repnz
fimul
pop
call
retf
inc
loope
not
(bad)
js
cmps
and
outs
jl
pusha
mov
cld
adc
or
mov
and
jecxz
loopne
push
leave
sub
mov
aad
gs
or
fld
and
xor
std
je
cs
lods
push
popf
jbe
aaa
mov
js
push
nop
or
outs
mov
test
aaa
dec
and
(bad)
add
mov
ja
(bad)
jne
loop
xor
aas
adc
gs
jb
cmps
loopne
or
popf
xor
pop
pop
jp
add
cmp
push
adc
mov
pop
out
ja
mov
lea
mov
and
cs
adc
jb
pop
pop
sub
mov
xchg
adc
xor
mov
fs
(bad)
or
sbb
daa
rcr
inc
pop
fsubr
scas
xchg
pop
mov
fsub
out
xchg
xchg
or
cdq
jns
and
xchg
xchg
push
push
ret
pop
in
test
mov
inc
pop
push
test
es
mov
mov
sub
sub
pop
repnz
lea
or
mov
test
ret
pop
mov
fnop
cmp
xor
add
push
rol
push
pop
clc
xor
outs
nop
add
nop
dec
inc
pop
mov
inc
(bad)
push
sbb
and
add
mov
cli
jmp
pop
ds
inc
dec
add
xor
push
movs
xor
dec
inc
jae
mov
xchg
push
pop
or
lds
cmp
jae
aad
adc
pop
sub
daa
je
rol
mov
aam
inc
mov
pop
cmp
sub
pushf
and
cmp
rcr
jmp
ins
mov
fisttp
pop
cmps
mov
dec
jae
xchg
in
jmp
push
stos
outs
test
repnz
frstor
jmp
das
jo
aaa
mov
sub
cmp
or
jb
xchg
or
in
mov
cmc
cmc
push
xchg
xchg
jg
mov
rcl
xchg
pop
(bad)
jne
push
fst
adc
nop
arpl
mov
pop
mov
je
mov
pop
xor
lods
lea
mov
mov
in
js
push
and
inc
fwait
push
dec
sub
shl
js
mov
jmp
and
out
ja
xchg
bound
dec
mov
cs
(bad)
into
add
mov
and
jb
jno
retf
sbb
paddsb
lds
mov
jge
imul
out
xor
mov
sub
jmp
js
test
xchg
jbe
and
cdq
bswap
adc
enter
push
xchg
pop
mov
sub
in
fs
retf
shl
sub
(bad)
xchg
ins
fs
or
add
and
(bad)
leave
or
sbb
pop
push
test
sub
xor
imul
movs
mov
ja
inc
pusha
(bad)
adc
xchg
loop
std
cmps
lock
jge
or
xchg
sbb
das
adc
mov
add
and
xor
inc
push
scas
repnz
retf
nop
sbb
push
push
jecxz
sahf
clc
dec
sub
ds
in
test
js
test
mov
jb
scas
jmp
and
or
test
aad
movs
inc
mov
jbe
int3
fwait
js
push
add
push
add
and
adc
adc
pop
pop
fsqrt
push
imul
mov
and
lds
or
or
jp
push
mov
xchg
fild
inc
pop
xor
aaa
ins
jg
mov
iret
and
dec
lods
mov
add
and
xchg
cs
shr
sbb
mov
out
out
movs
cmp
and
jge
pop
pop
mov
cld
fcomp
dec
sbb
or
jae
jno
mov
aaa
stos
cwde
ja
call
jnp
add
daa
add
mov
sub
les
sub
pop
xchg
aaa
sbb
dec
shr
mov
xor
push
adc
xchg
sbb
fbstp
enter
pop
daa
loop
(bad)
shl
mov
pop
mov
jb
loopne
or
xor
pusha
stc
dec
rcr
lods
in
jmp
ror
stos
mov
xor
or
dec
fisttp
cmp
cs
test
scas
in
add
jmp
jle
(bad)
in
call
lods
xor
jns
in
(bad)
mov
dec
mov
push
popf
pop
outs
lods
into
inc
jmp
movs
sahf
shl
jg
xor
inc
call
xchg
mov
mov
fwait
outs
leave
sbb
fldcw
into
(bad)
call
nop
mov
jb
in
mov
inc
mov
and
into
dec
arpl
mov
add
popf
ret
xchg
jnp
and
dec
cli
jmp
mov
jb
adc
mov
ss
xchg
mov
out
jle
push
fisttp
mov
push
sbb
(bad)
je
mov
sar
rcr
xchg
mov
test
push
pop
ins
mov
jge
inc
into
int
jmp
test
pop
mov
shl
pop
pop
es
mov
sub
inc
dec
sbb
push
test
xchg
push
xchg
fcom
aam
popf
call
(bad)
push
cmp
dec
repz
mov
add
cld
sbb
dec
mov
aad
bound
and
push
xchg
add
fistp
popf
jmp
(bad)
retf
or
xchg
mov
sbb
cdq
je
adc
dec
pop
sahf
pop
or
push
add
mov
sbb
sbb
scas
push
pop
(bad)
in
push
pop
cmps
or
sbb
adc
loop
dec
sbb
ret
push
cs
pusha
pop
mov
dec
popf
push
les
dec
and
jae
fnstcw
scas
out
pop
rcl
pushf
leave
in
dec
jo
mov
dec
add
inc
js
dec
js
and
outs
div
fidivr
shr
xchg
mov
xor
xchg
pop
mov
mov
push
sbb
cmp
sub
mov
push
pop
mov
scas
jmp
movs
out
(bad)
push
xchg
aad
add
xchg
lahf
and
mul
imul
dec
fisub
gs
cmp
test
loope
xlat
fwait
xchg
arpl
inc
popf
cwde
push
mov
jno
mov
ret
inc
add
jo
pop
cmp
jge
jo
push
mov
add
movs
in
ins
fld
cmps
dec
and
fldenv
cmp
or
mov
cmp
stc
imul
pop
mov
scas
adc
add
inc
push
mov
iret
sahf
rol
pushf
inc
or
shl
lods
std
cmp
pop
mov
jmp
and
sub
aam
push
sar
cmp
push
and
and
bound
jbe
retf
aam
mov
or
sbb
mov
sbb
stos
pop
cmp
out
ds
jg
pop
retf
test
xchg
pop
jno
aam
dec
arpl
adc
jecxz
fdiv
fisttp
cmp
inc
push
pop
cmp
cwde
cwde
adc
cmp
push
sbb
or
push
imul
fldcw
call
xlat
sub
add
sar
fsubr
dec
ret
lds
popf
adc
jae
or
jecxz
jmp
jae
mov
add
jae
mov
lods
mov
adc
shr
and
aad
loop
xchg
fmul
int3
mov
emms
dec
clc
mov
out
mov
mov
leave
jge
aam
xchg
(bad)
fist
ret
icebp
lahf
jbe
sbb
cwde
inc
and
mov
jne
mov
in
ret
xor
dec
jbe
aam
and
pop
inc
imul
push
sar
dec
xchg
fisttp
shl
mov
add
xchg
ss
arpl
(bad)
fstp
cdq
or
cmp
pop
ins
pop
push
sbb
pop
dec
cmc
adc
mov
lods
push
xor
ss
fs
jb
nop
jecxz
leave
mov
test
mov
sbb
test
xchg
and
(bad)
adc
mov
sbb
jb
into
xor
cmp
lods
push
ds
push
sar
(bad)
mov
(bad)
pop
fstp
mov
cmc
xchg
iret
xor
add
pop
pop
out
leave
or
add
(bad)
mov
stc
inc
push
jo
xlat
cmps
lahf
add
mov
jno
mov
xor
(bad)
arpl
cmps
cmp
and
movs
add
ins
ret
les
xor
pushf
jmp
ja
adc
inc
leave
dec
test
cli
push
xor
and
xor
(bad)
adc
mov
jae
dec
in
or
sbb
jg
pop
sti
int
arpl
pushf
push
retf
aaa
jmp
ins
cmp
sbb
punpckhbw
adc
mov
in
in
iret
mov
loope
out
cmp
and
fs
loopne
in
mov
iret
test
xor
sub
jp
push
push
sti
push
cld
xchg
jns
in
push
leave
sub
add
inc
and
dec
ss
cmps
hlt
ret
mov
inc
jge
xchg
adc
jp
push
xor
or
test
call
add
sbb
cmp
mov
xor
sti
inc
ret
jmp
or
dec
in
(bad)
add
out
or
mov
pop
into
or
xor
dec
in
test
gs
sbb
repz
mov
mov
mov
int3
add
jo
mov
mov
jae
and
add
mov
mov
add
sbb
shl
xor
repnz
(bad)
retf
popa
loop
inc
and
inc
movs
add
mov
shl
js
cmps
jb
clc
or
xchg
test
or
je
push
push
dec
and
add
add
mov
lea
push
xchg
outs
pop
mov
sub
out
in
xor
scas
xor
stos
inc
adc
mov
nop
ficomp
adc
mov
add
repnz
push
movs
jb
ror
mov
pop
dec
popf
daa
nop
sub
dec
(bad)
clc
jae
pop
enter
leave
and
inc
vpshuflw
imul
mov
loopne
ror
xlat
mov
jo
(bad)
inc
add
pop
push
ror
or
test
scas
cmp
dec
(bad)
rcl
push
push
inc
ins
jecxz
fxrstor
or
push
lahf
adc
ins
aaa
mov
inc
bound
adc
in
dec
js
in
mov
retf
sbb
xchg
add
(bad)
pushf
cmp
jmp
mov
jnp
pop
pop
leave
fwait
mov
xchg
pand
cmc
mov
mov
(bad)
pop
retf
sub
cmp
jo
popf
jecxz
loopne
addr16
and
dec
and
jb
sti
fwait
daa
in
and
cmp
add
sub
stc
sahf
pop
lods
(bad)
aaa
dec
daa
das
fs
outs
test
out
mov
jecxz
stos
sub
push
(bad)
std
or
and
in
mov
in
scas
imul
xchg
dec
rcr
addr16
in
xchg
iret
out
mov
dec
(bad)
ja
pop
mov
ds
call
mov
repz
stc
cmp
stos
jns
or
push
mov
icebp
dec
retf
outs
repnz
dec
(bad)
xchg
ins
jecxz
xor
iret
ins
inc
nop
xor
inc
popa
imul
lods
cmp
rol
das
sub
mov
xchg
out
cmps
(bad)
retf
jns
pop
js
pusha
xchg
out
mov
jp
pop
sbb
icebp
push
es
popw
scas
adc
scas
dec
je
cwde
jne
and
fstp
pop
mov
dec
cdq
push
sub
and
sbb
cmc
push
scas
xor
cmp
mov
add
xchg
(bad)
mov
clc
mov
inc
add
mov
test
daa
ss
or
pop
(bad)
call
jbe
xor
in
out
fld
xchg
rcr
push
outs
pop
pushf
pushf
fdiv
inc
dec
or
jbe
pop
mov
clc
cmp
add
jmp
loope
jmp
mov
lds
jne
sbb
push
xor
inc
xor
pop
fsubp
int3
push
push
or
add
(bad)
jl
xor
in
adc
out
jmp
jmp
scas
pop
int3
xchg
dec
fild
jne
xchg
adc
cli
pop
mov
scas
int
push
add
pop
mov
fdivr
mov
sub
rcl
mov
mov
into
sbb
adc
push
adc
and
sbb
cmp
mov
inc
out
call
mov
push
push
mov
addr16
ret
nop
data16
arpl
pop
sub
mov
pop
mov
shr
mov
test
add
adc
push
(bad)
pop
cld
dec
pop
ret
mov
xor
ret
push
inc
loop
retf
pop
inc
mov
jmp
pop
pop
(bad)
cwde
mov
stc
test
aas
sbb
daa
dec
loopne
outs
ds
pop
dec
inc
fst
repz
push
pop
push
out
add
mov
and
int
out
stos
jbe
fst
loop
cmp
fwait
and
push
and
mov
mov
inc
xor
adc
scas
dec
jp
pop
adc
xor
xor
mov
adc
or
jle
iret
jne
pop
push
adc
iret
cmp
dec
pop
retf
sbb
dec
inc
pop
cmp
cs
and
rcl
mov
shl
xchg
inc
aas
pop
out
std
jno
jp
pop
and
and
add
test
xchg
dec
ret
push
in
or
rol
cmp
hlt
xchg
push
jnp
mov
dec
push
imul
mov
lods
mov
sub
xchg
jle
call
gs
sbb
test
xchg
jne
lods
lds
ja
in
retf
daa
lock
lods
fstp
pop
or
dec
cmps
sub
jno
and
push
pop
jg
into
out
dec
repz
stc
push
xchg
sub
jno
sub
jno
ffree
cmp
sub
mov
xchg
fsubr
repnz
aam
in
lds
clc
cli
sbb
repnz
pop
es
xchg
das
(bad)
fdiv
fcmove
les
xor
mov
mov
mov
cdq
mov
mov
jge
ss
cdq
push
setae
adc
into
les
mov
movs
cmc
cs
mov
cmp
mov
jge
add
ins
(bad)
nop
(bad)
fdiv
stos
(bad)
xchg
inc
add
mov
js
out
and
std
push
hlt
inc
jbe
aad
arpl
jnp
jo
gs
pusha
ins
cmp
mov
sbb
cmps
pop
out
lods
movd
mov
adc
inc
ror
inc
inc
dec
cmp
stc
cmps
stos
stos
sbb
jmp
mov
push
ss
mov
repnz
dec
push
jle
mov
bnd
and
and
or
sub
mov
pop
sub
pop
jg
dec
adc
in
fldcw
call
pop
dec
cwde
add
push
sbb
movs
mov
inc
stos
div
sbb
dec
aas
mov
mov
aam
jbe
xchg
or
clc
jae
push
xor
dec
cli
ins
xor
outs
enter
mov
call
jle
cmp
cmp
shl
jmp
cs
es
push
neg
mov
in
push
sbb
jbe
sbb
pop
stos
mov
retf
push
adc
adc
stos
(bad)
xchg
out
bound
cmp
cmp
iret
mov
jae
sub
jb
jns
(bad)
jbe
inc
and
lea
or
test
sub
pop
ins
jle
jle
pop
rol
scas
inc
mov
das
aaa
jl
mov
js
jg
add
pushf
test
mov
jle
sahf
sbb
dec
sbb
inc
jae
je
add
jae
and
test
data16
fnstenv
dec
xor
stc
mov
pop
test
mov
es
xchg
mov
xor
sti
sbb
or
lea
sbb
push
loope
adc
stc
add
sbb
push
cmp
(bad)
aaa
mov
js
cmp
mov
outs
fild
rol
adc
sahf
adc
adc
xor
adc
fidivr
rcr
test
(bad)
imul
mov
or
push
pop
movs
push
add
ror
mov
lahf
shr
cmc
out
sub
or
data16
pushf
or
cs
in
out
dec
je
adc
stc
fsub
fist
jmp
inc
mov
xor
jnp
mov
lds
out
lods
inc
shl
jg
iret
mov
enter
mov
test
fcomp
push
mov
adc
lods
pusha
into
and
aad
sbb
pop
push
retf
mov
or
jb
pop
xlat
icebp
adc
push
push
mov
stc
cli
cmc
stos
dec
add
das
scas
mov
popf
mov
test
loope
pop
mov
pop
cmp
out
fs
outs
call
xchg
cmps
arpl
int3
mov
pop
out
hlt
(bad)
cli
mov
rol
test
inc
out
out
sub
movs
mov
in
fiadd
pop
hlt
inc
mov
dec
cmp
xchg
retf
sbb
or
jbe
mov
ret
inc
jle
data16
sub
data16
sbb
bndldx
idiv
pushf
arpl
imul
mov
sahf
dec
inc
jae
nop
ret
rcl
jnp
xchg
push
pop
retf
repnz
loop
mov
retf
mov
pop
mov
repnz
dec
das
std
dec
and
mov
xor
dec
cmp
jae
and
jge
sti
mov
inc
frstor
repz
loopne
and
or
mov
sub
es
out
or
test
cdq
and
sti
lds
lods
rcl
imul
jns
out
addr16
push
push
sti
addr16
icebp
mov
dec
adc
fist
leave
jbe
cmp
dec
xchg
jg
loopne
(bad)
fld
int
loop
(bad)
movs
cmp
xor
add
inc
stos
inc
mov
lahf
sub
sub
mov
xchg
mov
es
sbb
outs
and
mov
iret
jge
lahf
xor
or
push
and
dec
stos
push
aaa
push
inc
jp
mov
test
gs
xor
mov
add
jg
mov
outs
nop
lods
jnp
jnp
dec
xor
imul
das
fninit
in
and
jle
bound
(bad)
fdivr
neg
sub
inc
ins
pop
je
enter
jecxz
mov
ins
jmp
pmullw
sbb
jmp
dec
rcl
mov
and
ret
jge
xchg
imul
cmp
or
xor
sbb
add
sbb
mov
sub
les
jp
mov
into
pushf
mov
pop
into
jns
test
imul
fidiv
(bad)
pop
xor
in
cli
jge
cmps
jmp
out
fiadd
mov
mov
popf
idiv
in
shr
test
add
aaa
xor
pop
addr16
out
mov
dec
ins
cmps
xchg
gs
shr
mov
int
popf
call
call
addr16
fisttp
aas
or
lods
push
fild
loopne
fistp
pop
clc
in
(bad)
imul
out
jle
in
and
fnstcw
outs
sar
sub
or
jmp
pop
or
xchg
push
mov
inc
xchg
pop
stos
add
xor
out
and
inc
lods
repnz
xor
cmps
arpl
xchg
push
add
adc
inc
je
icebp
std
sbb
add
or
ss
jg
cli
inc
test
cmp
pop
add
sub
inc
or
ret
into
je
mov
lods
and
or
sahf
mov
cmp
iret
int
ror
jle
cld
mov
fadd
popa
in
sahf
bound
out
pop
aad
mov
and
lea
in
into
jge
push
mov
xor
ja
inc
or
shr
mov
jge
sub
ror
ret
mov
and
jnp
mov
scas
sub
mov
cmp
daa
dec
stos
aad
stc
ret
xchg
inc
mov
pop
adc
xchg
cmc
mov
sub
(bad)
jbe
and
call
pop
scas
adc
out
pop
rcl
fiadd
aas
sub
push
mov
cmp
dec
pop
enter
jg
imul
adc
xchg
xchg
mov
pusha
jle
push
shl
mov
push
xchg
mov
mov
add
and
lds
or
xor
or
movs
ret
mov
dec
add
mov
aad
daa
xchg
add
retf
js
ins
cli
scas
call
or
into
jbe
sbb
inc
ins
xor
add
mov
fistp
sbb
sbb
xor
popa
je
add
xchg
and
sub
in
imul
popa
jnp
and
jnp
sbb
sbb
ror
xlat
aam
mov
daa
retf
jl
push
cli
adc
call
pop
mov
les
or
int3
pop
xchg
mov
push
in
imul
nop
mov
hlt
sbb
push
into
mov
jmp
cmps
(bad)
mov
mov
mov
in
add
lahf
imul
sbb
sub
lock
sbb
xchg
nop
daa
push
jno
sub
push
xor
in
or
lods
inc
sub
icebp
clc
fmul
push
adc
retf
jne
adc
fsubr
popf
mov
xchg
scas
jp
int3
sub
xchg
or
add
mov
sub
mov
pusha
clc
test
add
jns
jmp
pushw
movs
js
ins
and
das
dec
sbb
sub
and
pop
es
sbb
adc
dec
out
mov
in
in
into
int3
mov
pop
jge
out
push
adc
pop
adc
(bad)
jg
mov
addr16
sub
fsubr
fmul
jecxz
pop
xchg
cmps
add
adc
movs
jl
inc
scas
bound
cmps
and
nop
test
jle
lods
xor
adc
push
add
in
dec
mov
add
lds
enter
fmul
mov
pop
push
lock
jg
cmp
cmp
and
mov
pusha
mov
movs
xchg
retf
push
cld
push
call
(bad)
shl
ins
es
xor
cmc
in
and
xor
push
dec
in
ja
push
pop
adc
jge
cld
ss
loop
inc
cmc
shl
ret
add
ret
dec
outs
jge
ds
leave
scas
pop
imul
push
icebp
sbb
imul
dec
stc
addr16
inc
iret
xchg
mov
jl
adc
push
nop
cmps
aaa
bound
inc
mov
mov
jo
lock
es
adc
jae
jecxz
jp
mov
test
jp
cmps
pop
cmps
mov
js
cmp
leave
scas
mov
mov
sub
test
sti
sub
dec
(bad)
into
mov
bound
push
jb
xchg
add
es
shr
jbe
xchg
pushf
jnp
arpl
das
lahf
in
adc
xor
jmp
test
sub
mov
mov
adc
mov
lock
fs
add
mov
adc
xchg
push
cmps
lods
test
push
lods
jge
imul
retf
pop
cmp
and
xor
out
and
jl
sub
sbb
test
inc
lock
mov
fisubr
loop
cmc
pop
jp
mov
sub
adc
push
hlt
movs
mov
ja
xchg
xchg
ja
shr
or
and
jle
bound
sub
scas
test
lods
mov
inc
pop
mov
aaa
in
ret
pop
mov
mov
mov
xchg
sbb
dec
cld
icebp
xchg
sub
cmp
jae
dec
leave
jnp
ret
dec
clc
(bad)
sub
(bad)
mov
repz
cmp
fnsave
clc
pop
push
jg
dec
fist
shl
ins
in
mov
and
add
dec
pop
sar
in
in
inc
div
push
push
(bad)
or
mov
adc
sbb
dec
xchg
fimul
mov
xlat
mov
cwde
fnsave
add
jne
cmp
mov
stos
push
rol
es
adc
xchg
shr
into
mov
mov
ss
repz
inc
movs
adc
pop
dec
jecxz
ds
in
dec
xor
pop
xchg
and
xor
(bad)
(bad)
mov
fiadd
cmovg
push
gs
(bad)
scas
jecxz
cmp
jmp
dec
jge
push
pushf
hlt
or
ds
sbb
push
adc
and
cmp
jl
(bad)
gs
(bad)
hlt
and
mov
mov
repz
or
or
pop
mov
repz
aas
je
es
xchg
inc
retf
jge
(bad)
mov
adc
dec
mov
dec
cmp
imul
loop
sbb
sub
jae
xchg
inc
mov
in
xor
lea
(bad)
repnz
xadd
and
and
xchg
mov
pusha
inc
jmp
ins
aas
add
loope
jp
retf
adc
into
push
das
push
mov
loope
into
sbb
loop
(bad)
loope
xor
mov
add
push
stos
mov
les
cmps
mov
xlat
arpl
dec
aam
aas
sahf
hlt
mov
mov
push
enter
xchg
jae
jo
shl
les
enter
jp
dec
(bad)
std
xchg
call
sub
cwde
push
add
jg
leave
adc
pop
shr
inc
and
dec
xchg
xchg
lds
inc
jb
imul
test
test
pop
sub
jg
sbb
add
dec
mov
das
cmc
xchg
ror
test
or
jmp
and
cmp
bound
adc
lds
ret
sub
cmp
sbb
int
ss
inc
out
pop
int3
lahf
in
loope
mov
ins
jo
mov
pushf
and
push
jg
(bad)
mov
vpsubsw
sub
cmp
mov
pop
outs
ret
out
xchg
imul
inc
mov
xor
popa
jle
mov
test
jns
cmc
cmp
int
xor
sub
clc
jb
out
fs
hlt
scas
adc
push
mov
add
push
in
lea
and
xchg
mov
icebp
clc
and
adc
stc
push
cmp
cmp
xor
dec
xchg
cmp
mov
je
iret
cmp
jb
(bad)
adc
jbe
mov
and
xor
mov
xchg
bound
rcl
dec
jmp
add
addr16
arpl
retf
push
frstor
xor
and
mov
pop
lods
xchg
test
lahf
lahf
push
xor
mov
or
lods
fisubr
ins
scas
repnz
or
mov
mov
sub
aaa
push
or
imul
popf
or
jo
das
cmp
ret
loop
popf
test
iret
xor
add
xchg
dec
jl
mov
or
dec
test
dec
adc
xor
arpl
dec
rcl
pop
stos
sti
xor
and
pop
icebp
shl
mov
nop
xchg
jb
movs
es
sbb
es
cmp
jns
push
jmp
or
enter
imul
push
mov
jmp
into
fwait
pop
inc
adc
pop
xor
dec
pop
cmp
lods
push
lods
and
enter
mov
mov
je
(bad)
sbb
xchg
mov
sbb
aad
cmp
xor
mov
daa
ret
pop
xchg
addr16
les
fisub
xor
loopne
daa
mov
jns
inc
das
cmp
jnp
xor
or
xchg
dec
arpl
cmp
scas
xlat
adc
daa
inc
dec
sar
rcl
jmp
mov
and
dec
xor
daa
std
sbb
push
cli
and
inc
ins
pop
jmp
sti
fcompp
call
add
cmp
pop
nop
movs
mov
mov
mov
xchg
cmc
aam
inc
or
cwde
inc
std
sahf
ret
into
enter
les
pop
dec
in
mov
loope
or
ror
fisttp
cmps
push
dec
call
wrmsr
xor
and
mov
push
loope
(bad)
jae
mov
and
sbb
jge
dec
dec
xchg
or
arpl
lock
not
out
lods
aam
jb
or
xchg
jnp
aas
push
imul
ror
push
movs
(bad)
or
sub
inc
dec
sub
sbb
out
pushf
adc
xchg
pop
out
ins
pop
cwde
addr16
xlat
lock
test
pushf
out
sub
push
jb
dec
clc
in
das
sahf
adc
(bad)
jbe
fwait
and
pop
xchg
mov
call
mov
(bad)
mov
rcl
dec
jae
and
pop
cli
cmp
mov
adc
inc
pcmpgtb
ss
cmps
fcmovnb
fwait
leave
pop
xlat
cmp
rol
(bad)
adc
fxch
(bad)
nop
pusha
(bad)
dec
out
dec
pop
push
mov
hlt
ret
outs
mov
shl
dec
sbb
and
sub
test
dec
sbb
add
adc
mov
mov
loope
and
fld
or
mov
sub
test
push
inc
popa
pop
scas
sbb
cmp
sub
lahf
xor
out
je
inc
push
push
jmp
jns
popf
xor
out
test
push
sbb
shl
sti
(bad)
push
int3
add
push
xlat
pop
bound
sub
int
pop
mov
add
dec
imul
cdq
jne
nop
push
xor
mov
ss
add
sbb
repnz
(bad)
jle
cmp
fmul
jne
(bad)
out
test
sub
sub
leave
aam
push
gs
push
rcl
or
fcmovne
(bad)
jae
cmp
loope
icebp
jne
stc
bound
and
(bad)
stc
shl
rcl
jns
outs
mov
push
aad
pop
out
jl
or
mov
pop
mov
pop
pop
or
cmp
adc
daa
mov
mov
bound
sbb
rcl
gs
inc
not
or
scas
lods
mov
xor
call
and
adc
sub
mov
or
dec
ins
sub
sub
cwde
dec
sub
mov
lds
jp
ins
inc
inc
das
jle
inc
mov
clc
hlt
push
xor
(bad)
(bad)
add
push
mov
(bad)
mov
adc
jecxz
fucom
push
test
lods
xchg
jnp
shl
mov
je
pop
in
or
sar
out
jne
aaa
or
rol
mov
or
inc
je
sbb
shl
pop
cmps
jle
jns
jae
data16
adc
sub
ret
inc
add
inc
and
cdq
pop
enter
add
js
fwait
enter
(bad)
inc
inc
dec
test
mov
pop
pushf
add
sar
ret
idiv
lahf
xor
movs
in
cmp
loope
(bad)
or
loope
jnp
fwait
xchg
loop
inc
int
jl
call
push
fcom
mov
(bad)
push
aam
pop
aad
test
mov
hlt
dec
mov
je
mov
sub
cmp
(bad)
loop
jmp
(bad)
shl
cld
gs
shr
dec
jmp
fwait
or
xchg
xchg
repz
push
sbb
aas
mov
jl
mov
jmp
fist
fbstp
movd
data16
aad
enter
sub
mov
xchg
sub
outs
(bad)
cmp
jnp
fsubr
jg
test
dec
das
cmp
mov
mov
fild
sub
rcl
arpl
repz
xor
or
lods
lock
stc
in
or
(bad)
into
(bad)
cld
xor
cmp
dec
outs
sar
lds
or
std
pop
(bad)
fmul
gs
cli
inc
and
adc
aas
pop
sub
(bad)
push
ins
xor
in
lahf
pusha
jecxz
mov
mov
ds
inc
sub
shl
dec
mov
iret
add
adc
mov
jg
stos
call
adc
pop
mov
jbe
pop
pop
jmp
retf
pop
sbb
xchg
lea
sbb
and
popf
or
(bad)
daa
pop
repz
test
in
fld
test
mov
mov
stos
ss
inc
fs
or
iret
pop
xor
retf
inc
xlat
cdq
enter
cs
scas
cld
das
xor
in
add
test
stos
xchg
adc
sbb
mov
push
mov
xchg
mov
cld
fs
jmp
inc
int3
push
fidivr
mov
(bad)
cmp
daa
or
mov
imul
out
popa
mov
ror
or
loop
fwait
lods
and
es
mov
retf
lahf
(bad)
aaa
sbb
mov
in
jae
daa
inc
mov
fimul
repz
pop
js
ins
in
mov
jmp
lahf
(bad)
inc
adc
pop
lds
sub
pop
dec
sahf
loopne
mov
test
adc
leave
cmp
or
xor
pop
push
pop
gs
inc
arpl
bound
jp
test
lock
in
outs
xchg
retf
xor
cmp
xchg
push
mov
fdiv
jno
push
es
data16
fnstsw
rcl
loope
push
std
ror
fwait
sahf
jae
retf
cdq
je
out
adc
test
(bad)
jle
mov
in
push
aaa
dec
mov
out
enter
xchg
pop
test
sub
pushf
rcr
adc
cld
arpl
lahf
das
push
dec
push
xchg
dec
xchg
cmp
push
sub
rol
dec
imul
mov
shl
mov
fsubr
xchg
pop
pusha
cmp
mov
sahf
push
dec
ins
cmp
lds
pop
cmp
cmp
ds
dec
ja
jae
jmp
inc
dec
jmp
cmp
mov
pop
cmc
push
fucomp
cmps
xchg
aas
out
jb
adc
jno
pop
and
ins
jecxz
mov
mov
stos
mov
xchg
cs
jp
scas
in
out
mov
adc
pop
xchg
pmulhuw
push
(bad)
dec
ins
int
mov
jns
sub
jbe
jae
ins
inc
mov
lods
jb
jge
shl
stos
fs
lahf
mov
pop
mov
neg
xchg
mov
popf
lock
mov
push
mov
arpl
pop
mov
fwait
mov
jne
outs
jns
bound
sub
add
fldcw
xor
hlt
pop
pop
repnz
lahf
xchg
dec
sti
xor
jmp
add
pop
stos
inc
xor
(bad)
mov
mov
and
enter
outs
cmp
mov
clc
xor
cmp
mov
ret
int3
iret
xchg
stc
and
and
addr16
cmp
push
fist
xchg
push
cmp
test
xlat
pop
aas
pop
lods
and
ret
sub
scas
je
cld
push
jae
ret
sub
jg
xchg
sbb
fild
cld
mov
rcl
or
data16
xlat
mov
add
and
jo
inc
jb
dec
(bad)
push
adc
sub
jmp
inc
sub
std
sub
into
jp
mov
cmp
fs
test
retf
nop
inc
out
test
cmps
mov
lods
and
jbe
adc
xor
xchg
mov
fdiv
jns
sub
shr
or
mov
data16
es
add
ja
adc
cmp
addr16
bound
push
movd
repz
std
gs
pusha
mov
sub
mov
aad
adc
loope
(bad)
xor
cwde
jno
xor
ds
jbe
(bad)
xor
jbe
ins
xchg
adc
repz
cmp
sub
loope
xchg
xchg
out
call
mov
mov
daa
aaa
int
xor
push
rcr
jl
mov
call
mov
scas
pop
and
cmp
jl
ins
jle
fsub
push
xchg
retf
lea
and
inc
mov
sub
(bad)
fwait
jp
xchg
cmp
cli
test
pusha
inc
add
jmp
std
mov
inc
adc
cld
loop
call
lahf
fiadd
ins
mov
pop
sub
enter
call
mov
adc
jmp
(bad)
push
cmp
(bad)
mov
aad
movs
test
ins
mov
adc
mov
jb
sbb
mov
jmp
sub
jg
sahf
retf
(bad)
(bad)
dec
or
xchg
aam
sub
inc
mov
test
mov
fisub
or
mov
mov
daa
fstp
jnp
push
xchg
sahf
inc
push
xchg
mul
sahf
lods
push
or
clc
mov
ins
jnp
mov
cld
cmp
data16
mov
outs
ins
sbb
add
mov
xchg
mov
mov
cmp
test
adc
mov
inc
leave
push
stos
xchg
jne
inc
sbb
adc
pusha
std
mov
fwait
mov
ficom
mov
jo
pop
mov
in
into
(bad)
push
mov
cmp
mov
pop
pop
push
outs
mov
fstp
ins
mov
adc
push
jecxz
mov
idiv
icebp
js
sahf
sbb
ret
aaa
jecxz
xor
dec
nop
outs
inc
test
inc
fwait
cmp
call
in
(bad)
(bad)
sub
cs
cmp
xor
pop
xchg
das
jmp
xor
inc
push
add
or
lahf
sbb
shr
(bad)
inc
pop
addr16
rcr
push
dec
lea
xchg
pop
fsubr
mov
or
mov
cmp
mov
push
inc
mov
sbb
ret
mov
movs
(bad)
les
dec
push
push
push
push
mov
ret
pop
inc
push
retf
movs
jae
push
lods
stos
pop
aam
mov
mov
je
mov
inc
inc
jns
retf
and
ds
icebp
inc
inc
push
adc
inc
dec
ss
xor
sahf
sub
into
xor
push
adc
int
jnp
jecxz
push
mov
sbb
clc
ins
push
xchg
aad
cmp
aam
stc
lods
sar
mov
cld
pusha
arpl
fldenv
xor
test
movs
xor
push
inc
shr
xor
fld
std
imul
loope
loop
leave
adc
je
push
xchg
fadd
pop
mov
dec
cwde
iret
(bad)
std
cs
sbb
cs
fs
enter
add
dec
je
jns
xor
imul
or
pop
sub
jbe
sub
mov
stos
scas
aaa
loopne
ror
jecxz
lahf
dec
mov
xor
test
retf
cdq
pop
add
enter
xchg
(bad)
cmc
ins
fstp
pop
xchg
push
jp
ins
fld
(bad)
(bad)
cmp
mov
push
bound
push
fidivr
add
stc
neg
bound
ror
lods
jmp
stc
dec
mov
mov
sub
call
jbe
sub
xor
mov
xor
cs
test
clc
int
lods
and
in
clc
push
and
iret
idiv
data16
mov
out
or
jmp
idiv
jne
mov
jmp
loopne
mov
stc
mov
call
jne
mov
das
fdiv
inc
lock
retf
dec
xor
xor
in
dec
pop
scas
(bad)
dec
ds
cmp
xlat
test
dec
push
(bad)
dec
push
push
lahf
pop
(bad)
loop
sub
and
and
rcl
cmp
sub
push
sbb
in
pop
add
xlat
mov
inc
xchg
cmps
cmp
pop
inc
cmc
pop
mov
sbb
gs
rcr
pop
sar
mov
lahf
ss
cmp
sbb
dec
jns
sbb
outs
hlt
daa
retf
cmps
out
mov
cmp
repz
fst
sub
lods
dec
inc
out
dec
push
int3
int3
inc
(bad)
les
jae
popf
stos
push
imul
mov
push
fdiv
addr16
loopne
jmp
xor
aas
cmp
jp
shl
retf
inc
popf
repz
in
mov
xor
push
es
in
adc
leave
push
pop
psllq
inc
or
(bad)
aaa
adc
mov
inc
fldcw
sti
pmulhw
lea
mov
iret
sbb
sbb
test
fnstsw
les
in
jae
sbb
jmp
dec
imul
inc
and
xor
push
fs
ror
nop
push
sub
sub
jecxz
into
das
in
mov
mov
mov
push
lea
dec
sub
mov
loopne
sub
jnp
cmc
xchg
(bad)
(bad)
pop
(bad)
push
push
push
test
add
aam
(bad)
scas
dec
dec
dec
ret
push
push
push
fdivr
pushf
cmp
(bad)
jecxz
jo
or
fcmove
in
push
or
cmp
add
mov
mov
shl
les
(bad)
cmps
mov
mov
jb
iret
xor
fsub
out
dec
test
addr16
lds
stc
mov
inc
sub
or
xchg
sbb
pop
adc
out
jl
mov
fbstp
dec
jne
js
adc
inc
lea
ret
pop
or
cmp
cmc
xchg
push
popa
mov
fstp
icebp
les
enter
jne
retf
cmps
add
pushf
push
sub
sbb
push
sbb
in
mov
fwait
or
mov
das
rcl
test
leave
add
xor
shr
jo
jmp
in
jno
int3
pop
js
ss
jbe
test
int3
arpl
inc
jb
or
leave
loope
aad
mov
movs
add
stos
test
lods
adc
ret
jg
xchg
push
sar
imul
retf
sub
adc
out
mov
mov
cmp
into
loop
jg
je
pop
mov
in
jmp
and
or
in
mov
pushf
loope
cmp
mov
xchg
sub
js
(bad)
pusha
test
push
or
bound
sahf
push
nop
in
imul
outs
lods
or
xchg
mov
cld
(bad)
(bad)
pop
xor
push
pandn
imul
sub
and
dec
fldenv
mov
sbb
cwde
mov
loop
cmps
sub
xor
fstp
popf
(bad)
repz
inc
jmp
mov
push
imul
out
jne
mov
add
mov
inc
mov
sub
enter
lods
mov
xchg
push
xor
mov
pop
pop
mov
fnstcw
mov
xchg
or
jns
push
jle
pop
jo
in
dec
adc
add
push
jb
fwait
cli
push
sub
movs
std
mov
test
call
test
(bad)
aad
mov
(bad)
cdq
or
push
or
mov
xchg
js
iret
cmp
cmp
xchg
sub
(bad)
jns
inc
sti
fistp
push
je
sub
inc
dec
mov
jnp
lods
ret
mov
push
adc
mov
inc
xchg
loop
jo
hlt
inc
xor
or
pop
call
test
pop
mov
jmp
cmps
push
test
mov
call
sub
stos
inc
in
std
pop
test
ror
pop
aaa
movs
cmps
arpl
lock
jge
call
and
mov
dec
fs
xchg
adc
xor
addr16
test
cs
adc
cmp
aaa
shl
mov
lods
add
jo
or
icebp
lock
xchg
push
ss
clc
nop
dec
into
push
rol
sahf
repz
and
sbb
scas
ds
pop
mul
enter
sbb
mov
inc
add
dec
mov
sbb
scas
push
fild
inc
add
sbb
jmp
lea
sti
in
aaa
cli
outs
xchg
dec
pop
stos
jmp
jmp
jge
test
dec
xor
jns
xchg
retf
lods
dec
lock
jecxz
test
pop
adc
mov
push
call
jl
jno
mov
mov
fs
jmp
add
inc
sbb
mov
sbb
stos
out
pusha
mov
jnp
stc
fidiv
ja
(bad)
mov
fstp
cmc
xlat
mov
jecxz
cs
cmps
jg
adc
ja
push
inc
js
dec
ret
(bad)
push
leave
lahf
push
call
aas
mov
jmp
jp
add
push
jno
adc
cwde
sbb
mov
hlt
mov
sub
pop
push
dec
pop
fbstp
clc
loop
cwde
inc
dec
icebp
movs
das
loope
xchg
(bad)
dec
movs
sbb
mov
jmp
retf
iret
push
jmp
(bad)
es
cmp
mov
jp
repnz
scas
lds
arpl
add
push
lods
sub
jmp
outs
lock
xor
inc
jge
in
btc
push
shl
add
bswap
js
mov
adc
cli
cmp
pop
fidivr
add
push
dec
add
cmps
test
dec
retf
enter
shl
gs
sub
or
mov
push
movs
pop
dec
inc
aam
loopne
push
dec
and
loope
xor
and
cdq
mov
adc
xchg
xchg
and
jno
push
loop
mov
push
fmul
sbb
scas
mov
pop
and
outs
ins
cmp
xlat
out
out
aas
sub
mov
mov
inc
rol
aaa
mov
cs
xchg
in
jg
pusha
inc
lods
test
into
add
fst
daa
mov
and
adc
aas
mov
pop
jg
push
stos
int
mov
sub
(bad)
shl
stos
adc
rol
test
das
cmp
hlt
stc
retf
mov
push
sbb
dec
shr
fisttp
rcr
hlt
mov
enter
or
cdq
out
inc
sub
ja
xor
jmp
or
xchg
pop
and
pop
mov
inc
cmp
dec
mov
and
add
bnd
fsubr
daa
sti
test
out
dec
scas
adc
dec
mov
and
mov
bt
push
adc
xor
cld
adc
dec
jb
(bad)
jg
movs
popa
mov
adc
sub
cld
popf
cmp
fimul
jae
push
mov
lahf
out
call
gs
dec
sbb
jp
sbb
js
mov
sbb
inc
loope
xor
or
jns
leave
mov
jecxz
outs
rol
or
div
mov
cwde
jle
fldenv
sbb
imul
loope
sbb
inc
sbb
call
jno
dec
mov
inc
cli
(bad)
jmp
xchg
stos
ss
xchg
dec
push
(bad)
lahf
int
sbb
mov
(bad)
loop
pop
mov
mov
or
in
push
xor
(bad)
pop
jecxz
inc
fisubr
inc
out
jnp
inc
shl
push
idiv
rol
xchg
xor
add
ds
mov
mov
cli
mov
xchg
and
cdq
int3
cdq
adc
mov
(bad)
rcr
dec
cmp
sbb
popf
xor
vmaxpd
xchg
mov
lock
add
sub
inc
jns
sub
mov
push
jcxz
fwait
mov
cmp
imul
xor
sbb
(bad)
outs
and
loope
inc
adc
mov
jb
jmp
out
outs
xchg
das
gs
jno
inc
outs
push
sub
jo
cdq
movs
add
loopne
dec
mov
cwde
fxch
pop
jle
cmc
and
jns
cs
cdq
clc
jb
scas
in
dec
xor
cmps
jle
mov
test
push
mov
shl
fyl2x
xor
ja
jge
sub
jecxz
inc
mov
inc
push
jle
hlt
pop
cmc
sbb
scas
inc
(bad)
jnp
leave
dec
retf
xor
pushf
icebp
and
pop
jno
cdq
and
lea
add
add
out
jp
jns
in
jb
cmp
sahf
in
push
mov
jmp
push
in
mov
ror
repnz
(bad)
mov
sub
jne
jbe
std
in
mov
jge
cmps
sar
popa
cld
jae
push
mov
add
push
mov
cmp
idiv
(bad)
cs
fxch
jge
pop
stc
sahf
rcl
or
sub
sub
sbb
sbb
sti
fs
aad
xor
jns
test
or
add
data16
sub
dec
in
imul
(bad)
jecxz
xor
int
inc
push
inc
out
mov
adc
call
adc
cmc
mov
or
ror
or
iret
push
xchg
mov
dec
pop
xor
daa
mov
pop
lods
dec
push
pop
(bad)
mov
jmp
and
lock
iret
fmul
mov
xor
aaa
pop
pop
adc
xor
and
in
or
add
repz
xor
mov
cli
aam
cmp
sbb
call
xchg
sbb
inc
imul
nop
int
rcl
test
pop
ins
mov
xor
and
test
repz
and
movs
outs
add
jge
jo
push
popf
or
out
xchg
les
inc
push
(bad)
stos
ret
lahf
idiv
mov
jb
push
vphadduwd
push
push
mov
mov
stos
ins
mov
jg
adc
(bad)
icebp
in
aam
push
mov
add
sub
les
mov
cmovp
ins
or
xchg
repz
and
fs
mov
movs
push
movs
pop
inc
xchg
add
sbb
and
lds
push
aam
sub
sbb
(bad)
mov
push
xor
jmp
push
into
dec
call
mov
add
sbb
and
jno
xor
add
mov
adc
int
aad
sbb
movs
mov
jp
mov
push
imul
cmp
jno
mov
mov
call
and
clc
sbb
call
pop
sub
push
mov
cmp
xor
mov
test
jbe
test
pop
sbb
jle
jge
(bad)
loopne
pop
stc
ins
dec
cmps
fdiv
arpl
cmps
loope
pop
adc
push
imul
and
fscale
(bad)
aad
pop
ror
hlt
ins
fsubr
ret
lahf
out
setle
mov
push
adc
xlat
dec
push
sub
mov
arpl
cmps
xchg
mov
lahf
pop
jg
mov
icebp
test
lea
mov
fs
xor
jmp
sti
mov
inc
pop
loopne
fst
shl
int3
cmc
mov
call
shr
adc
mov
mov
or
and
sar
xchg
(bad)
movs
inc
jns
sub
sbb
mov
iret
pop
and
xor
int3
mov
movs
data16
bound
push
not
push
sbb
ss
xor
je
push
sar
inc
or
loopne
adc
push
out
pop
jo
in
bound
lods
ins
mov
jle
cmp
xchg
jg
mov
push
ds
cld
jo
cmc
nop
xchg
or
sti
sbb
pop
fwait
ja
xchg
pusha
loopne
xchg
rcl
push
bound
cld
test
ret
lock
cmp
sahf
(bad)
cmp
out
repz
cmp
ss
test
cli
inc
ret
add
inc
test
cmps
or
mov
mov
xchg
sbb
adc
adc
xchg
cdq
mov
movs
iret
dec
dec
add
outs
cs
into
adc
outs
outs
into
test
mov
lock
aam
out
push
retf
lods
adc
mov
and
or
out
adc
mov
sub
in
cmps
rol
test
pop
ins
push
jl
mov
xor
cmps
repz
sub
out
dec
ss
in
ins
dec
pop
mov
or
sar
push
stos
cmp
jbe
into
loope
and
movs
mov
fstp
in
leave
inc
pop
outs
sub
cli
addr16
not
loopne
add
or
mov
mov
fwait
shl
dec
sbb
(bad)
inc
sbb
sbb
cmp
ins
mov
xchg
out
push
jnp
adc
test
lock
rcl
mov
cmp
lods
jecxz
xor
shr
dec
cmps
(bad)
and
pop
mov
mov
push
in
outs
cmp
cmps
ins
imul
nop
push
ds
pop
out
and
push
clc
jb
pop
loope
scas
mov
mov
push
cli
cmps
push
push
jle
sub
mov
out
lds
(bad)
icebp
retf
adc
cmp
es
mov
je
mov
out
fild
std
pusha
mov
cld
test
jmp
push
sbb
or
shr
adc
(bad)
out
shl
pop
sbb
dec
ret
aad
jb
icebp
fdiv
sbb
inc
aas
push
inc
jae
lock
ret
leave
neg
test
sub
repz
xchg
sbb
push
int
push
sbb
or
cmps
inc
push
sub
mov
xchg
mov
inc
fimul
sbb
dec
cmps
sub
loop
pusha
pop
daa
push
mov
add
add
inc
jle
test
fist
cmp
dec
and
adc
pop
fld
sbb
sub
ss
mov
push
jns
add
fsubr
xchg
push
xor
clc
push
dec
mov
scas
gs
cdq
pop
or
push
xchg
fcom
loope
mov
stc
pop
call
xchg
mov
int3
pop
and
pop
dec
daa
(bad)
(bad)
shr
sub
sbb
xor
cmp
int
push
(bad)
push
push
stc
sahf
es
call
out
dec
xor
into
shl
push
icebp
into
clc
cwde
add
loopne
add
stos
jne
mov
call
inc
lock
(bad)
sbb
je
fnstcw
ja
fnstsw
xor
sbb
mov
out
hlt
std
adc
xchg
and
cmp
mov
loope
adc
mov
imul
fild
test
sub
add
mov
jno
inc
xor
lahf
fnstsw
call
es
xchg
xor
adc
fwait
add
movs
jp
mov
cmps
fs
cmps
xor
sbb
push
pusha
xor
mov
xor
movs
mov
xchg
pusha
and
addr16
(bad)
rcr
sbb
sahf
(bad)
adc
leave
pmulhuw
mov
out
or
movs
retf
add
(bad)
scas
mov
mov
push
xchg
test
fsub
retf
lea
xchg
mov
out
sub
xor
xor
pop
mov
test
out
dec
pop
call
or
loop
(bad)
sti
aas
mov
sub
mov
test
add
loop
mov
sti
adc
adc
dec
test
pop
stc
out
push
test
xlat
sub
push
retf
inc
and
inc
inc
frstor
in
mov
(bad)
rcl
in
fld
inc
add
mov
outs
push
xchg
pop
fs
dec
rcl
jl
xor
jns
test
mov
cmp
dec
mov
inc
int
arpl
add
mov
inc
xlat
inc
jo
or
cli
push
rcl
jmp
jbe
pop
push
xchg
int3
inc
mov
out
adc
clc
mov
cmp
lahf
ret
push
arpl
sbb
(bad)
imul
rcl
mov
dec
sbb
dec
or
loopne
cmp
mov
jmp
mov
ss
in
or
jns
xlat
ja
sti
xor
jb
mov
sbb
pop
jno
add
and
in
jb
adc
rcl
pop
(bad)
xor
aad
scas
pusha
jno
mov
mov
imul
cmp
arpl
dec
push
sbb
mov
int
stc
xchg
xchg
dec
lea
cmps
retf
fstp
push
xor
lods
(bad)
or
call
(bad)
out
(bad)
sar
test
or
into
mov
fwait
clc
popa
lods
push
mov
repz
and
cwde
out
lock
sahf
sbb
retf
jns
push
(bad)
mov
xchg
mov
add
jno
imul
sub
cmp
fsubp
pop
cmp
icebp
sub
add
fs
mov
jnp
cmp
pop
xor
jbe
aaa
add
mov
mov
aaa
scas
xchg
ja
pop
dec
mov
and
push
int3
inc
stos
mov
mov
push
loop
pusha
mov
pop
inc
sbb
test
rcr
adc
inc
xchg
in
or
lock
hlt
pop
xchg
enter
sahf
sahf
mov
retf
or
dec
pop
and
push
lds
inc
mov
out
loopne
mov
add
pop
aaa
cwde
mov
adc
mov
in
mov
mov
and
loope
cmp
leave
repnz
mov
dec
in
ja
fs
movs
inc
sub
inc
lock
aas
mov
not
ss
xor
jnp
push
fcmovu
retf
sbb
cmp
fsubr
inc
mov
sti
imul
cmp
out
dec
mov
nop
adc
add
or
ja
or
xor
lock
add
fs
daa
push
fisttp
aam
xor
fmul
jno
in
ret
scas
(bad)
fistp
ss
lahf
cmp
xchg
mov
xor
inc
sbb
test
jle
and
js
(bad)
mov
popa
fist
cs
aaa
bound
mov
repnz
jle
icebp
arpl
pop
imul
pusha
sti
sub
jno
adc
lods
(bad)
cli
test
mov
shl
or
adc
xor
call
sbb
cdq
(bad)
(bad)
ds
push
addr16
sbb
mov
shl
(bad)
data16
loope
pushf
jecxz
hlt
and
xchg
mov
dec
xor
pop
add
sub
mov
imul
popf
xchg
aaa
and
and
or
add
ror
pushf
pop
xchg
stc
cmp
sahf
fpatan
(bad)
lea
lds
nop
ja
sub
test
test
aam
ins
push
adc
sub
mov
inc
mov
adc
mov
div
(bad)
or
or
add
xlat
stos
in
out
pop
les
sub
movs
inc
pop
mov
xchg
inc
arpl
shl
cmp
sub
or
mov
jno
jb
pop
out
shl
nop
pop
loop
cmp
(bad)
cmp
and
test
push
or
xor
mov
movs
mov
push
add
(bad)
dec
add
and
inc
test
fidiv
sub
movs
ret
or
dec
lock
inc
enter
fisub
js
xor
inc
cmp
popa
aam
mov
test
push
push
stc
push
ret
pop
adc
or
call
scas
dec
cld
aas
xor
xor
rcl
cmps
test
lods
mov
and
push
adc
or
lahf
daa
fs
xchg
js
push
xlat
jo
imul
sbb
mov
mov
fcomp
sti
inc
jae
pop
sub
mov
movs
or
sub
clc
pusha
shl
aaa
iret
ja
add
imul
ss
mov
push
push
retf
mov
mov
daa
outs
rol
aam
or
(bad)
(bad)
dec
lods
fimul
and
inc
test
xchg
fmul
mov
pop
arpl
push
cmp
inc
push
mov
push
pop
mov
pop
inc
or
push
fild
or
and
sahf
sbb
mov
loop
adc
in
aam
fisub
push
arpl
lea
(bad)
dec
sbb
or
mov
jg
into
sbb
push
dec
std
mov
std
push
rol
inc
in
fbstp
and
lods
fistp
les
push
out
mov
push
dec
mov
lock
pop
adc
fdivr
loop
dec
jbe
cmc
add
adc
xor
add
mov
test
or
push
pop
mov
sbb
fsubr
pusha
out
pop
pop
adc
push
push
ja
sbb
xchg
(bad)
retf
rcr
cli
jae
xor
adc
mov
test
pop
mov
loopne
xchg
adc
je
clc
inc
xor
sbb
jle
rcr
sub
dec
xchg
push
ret
in
jg
xchg
in
adc
outs
repz
mov
out
add
sub
mov
loopne
in
xchg
ja
inc
xchg
call
push
pop
call
or
or
ds
lods
or
(bad)
mov
test
and
ror
add
push
jno
dec
sub
js
jns
not
pop
lock
jp
sahf
(bad)
js
cmp
cmp
push
cmp
pop
and
bound
adc
add
std
push
and
mov
sub
popf
push
das
(bad)
pushf
push
rcr
pop
jnp
push
pop
jbe
and
ret
rcr
cmp
xchg
jno
adc
push
into
dec
xor
mov
jmp
and
mov
cmp
and
pusha
xchg
sbb
add
pusha
xchg
sbb
xchg
sbb
jo
xchg
jns
sbb
ja
fdiv
adc
and
les
add
idiv
arpl
addr16
mov
sub
in
sahf
add
mov
sahf
(bad)
test
mov
xchg
fcom
adc
sub
cld
dec
fnstsw
scas
push
ror
in
pop
aad
aam
mov
aam
mov
mov
push
inc
mov
adc
push
loopne
iret
shl
outs
hlt
ret
aaa
xchg
mov
add
push
scas
jmp
out
xchg
pop
into
jne
ret
inc
out
jmp
cmc
addr16
cmp
or
push
stos
loopne
mov
sub
adc
xlat
jmp
pop
and
(bad)
rcr
cdq
mov
add
dec
jmp
lods
stc
jae
std
cwde
cmp
mov
adc
pop
xchg
cmp
and
pop
scas
scas
xor
or
pop
adc
push
lock
adc
int3
ins
mov
shr
stc
and
xor
in
test
pop
mov
icebp
mov
icebp
xor
pop
(bad)
jecxz
lahf
sbb
bound
rep
mov
loope
popa
xor
pushf
mov
aam
popa
cmp
int3
mov
mov
ja
xor
push
pop
mov
push
scas
sbb
xchg
in
adc
add
pop
pushf
retf
add
cdq
popf
xor
retf
mov
dec
mov
cmp
dec
pop
inc
fcompp
jmp
in
mov
add
push
and
mov
mov
ror
(bad)
loope
test
repz
fidivr
xor
aad
mov
(bad)
jecxz
jnp
cmp
push
sub
xor
fxch
pop
popf
pusha
mov
jmp
pop
popf
add
dec
cdq
jbe
or
movs
ret
xor
in
push
jb
xor
dec
stc
sahf
lods
or
push
jb
xor
clc
das
ja
mov
adc
dec
lods
out
ror
fsubr
jge
movs
mov
dec
loop
cmp
sub
jge
sbb
xor
call
rol
lods
leave
adc
mov
or
add
jle
jl
in
or
(bad)
fcom
out
imul
xor
outs
or
cmp
dec
pushf
int
or
jno
fdivp
add
pop
jmp
test
ins
pop
xor
and
xor
mov
jle
mov
stos
sbb
test
adc
xor
leave
xor
ret
xlat
ficomp
nop
push
mov
mov
cmp
ins
cdq
or
xor
movs
aad
mov
arpl
push
mov
aaa
cmp
sub
add
shl
sbb
in
mov
ret
(bad)
mov
fs
mov
mov
mul
mov
jmp
mov
and
cmp
je
int
lods
pushf
jne
mov
sbb
aaa
shr
hlt
out
lea
ret
jecxz
mov
xor
xor
popa
pop
mov
arpl
push
xchg
scas
rcr
cdq
xor
and
daa
pop
push
sbb
mov
(bad)
rol
cs
mov
bswap
stos
xchg
mov
mov
and
mov
sbb
test
sbb
and
xabort
dec
xor
xchg
imul
pop
pop
add
std
mov
xchg
fild
into
ja
mov
movs
jbe
out
cwde
test
push
xchg
push
xor
jp
dec
sar
or
dec
bound
push
in
xor
(bad)
push
and
pop
pop
(bad)
mov
jb
lods
inc
ja
dec
je
jns
xchg
mov
test
std
mov
scas
dec
sub
xor
add
inc
int
rcl
ja
loope
and
cmp
push
(bad)
pop
arpl
in
les
adc
es
(bad)
jmp
repz
mov
xchg
aaa
mov
ficomp
adc
sub
je
mov
(bad)
lods
or
push
js
or
(bad)
and
call
hlt
daa
lock
cmp
xchg
fwait
mov
xor
pop
mov
xchg
jge
call
mov
retf
int3
push
sub
xchg
jnp
jge
hlt
jae
loopne
xor
mov
mov
adc
xchg
imul
cs
ja
scas
cli
movs
cwde
inc
jae
ret
or
(bad)
or
cs
ret
sub
push
arpl
leave
push
ficomp
sbb
ds
jae
das
mov
enter
cmp
xlat
ror
push
jmp
mov
xchg
xchg
dec
add
(bad)
xchg
push
sbb
dec
sbb
cld
ss
cld
cli
push
je
mov
in
cmc
and
pusha
add
sbb
loop
cmp
pop
cmp
mov
ins
movs
push
mov
stos
adc
sbb
in
fnstsw
xor
ds
jno
jns
adc
scas
out
adc
movs
iret
mov
mov
xchg
xlat
cwde
mov
ss
fsub
lods
sbb
jne
hlt
ins
push
rcl
xor
ja
pop
cli
add
inc
and
inc
cmps
xchg
dec
pop
mov
fidivr
test
lods
xlat
fmul
push
jnp
cld
pop
scas
movs
or
in
je
jne
and
repnz
bound
sub
iret
icebp
push
dec
or
mov
sbb
sar
scas
dec
shr
dec
mov
sahf
(bad)
rol
push
imul
aas
(bad)
and
std
arpl
push
dec
loope
sub
addr16
mov
and
lock
(bad)
xchg
nop
sar
mul
cmp
mov
out
aas
sub
adc
inc
int
dec
or
movs
xlat
cwde
push
cmc
mov
fistp
xor
push
jno
add
imul
or
popf
jl
or
and
or
cli
push
movs
add
xchg
add
rcl
fcmovbe
inc
sub
popf
jae
lds
adc
jbe
inc
dec
sbb
mov
gs
xor
and
add
sbb
cmp
rcr
jp
xchg
pop
jecxz
ret
sub
mov
test
jl
sbb
arpl
clc
retf
xchg
push
push
std
mov
and
inc
icebp
and
inc
popf
out
scas
into
pop
dec
pusha
xor
lods
adc
out
popa
ds
or
gs
jb
add
add
xchg
lea
cmp
pop
pop
cdq
aad
xor
pop
aam
mov
push
pop
mov
out
adc
mov
cdq
push
cmp
(bad)
add
mov
mov
xchg
shr
pop
add
inc
adc
ds
out
push
dec
lds
and
add
push
adc
and
jl
or
fwait
inc
out
jle
hlt
mov
or
add
inc
inc
cwde
sbb
popf
daa
das
add
mov
movs
aad
add
sub
mov
sti
jecxz
iret
pop
iret
std
push
xchg
mov
daa
in
jecxz
add
outs
pop
ja
dec
sbb
retf
in
int3
adc
inc
mov
or
jnp
add
jb
mov
jg
pop
mov
lods
(bad)
out
pop
cmp
fmul
in
mov
add
addr16
(bad)
stos
push
xor
xlat
dec
fs
pop
dec
pop
ja
push
xlat
pop
cmp
clc
aad
adc
inc
fadd
jnp
and
leave
ficomp
pop
jmp
dec
repz
xor
in
push
rcl
pop
sub
mov
out
and
and
sbb
test
push
retf
shl
lods
pop
ret
mov
popa
sbb
mov
push
cmp
call
outs
movs
or
out
inc
test
mov
rol
mov
dec
pop
add
lea
shl
push
sub
push
rcr
pop
sbb
popa
dec
mov
jg
mov
or
mov
ror
or
imul
xor
lods
pop
mov
leave
push
leave
shl
pushf
in
ins
push
and
jge
int3
xchg
lea
aad
xchg
mov
xor
and
cmp
adc
out
fsubr
js
pop
adc
gs
inc
repnz
sub
mov
pusha
popa
jecxz
movs
mov
inc
cwde
pop
add
adc
mov
or
mov
mov
pushf
cmc
mov
fwait
inc
jle
fnstenv
mov
pop
in
sbb
sub
jno
pop
fadd
ins
mov
jmp
add
imul
or
jmp
xor
and
fsubr
xor
repz
clc
jmp
hlt
cwde
loope
je
dec
loopne
mov
mov
cmc
mov
je
nop
add
cmc
sbb
push
nop
nop
jle
jecxz
clc
sbb
mov
fmul
les
fild
not
je
dec
std
push
sub
adc
data16
icebp
scas
stc
out
push
gs
or
cmp
out
sub
test
stc
sub
adc
mov
mov
xor
shr
mul
retf
test
dec
popf
and
js
scas
shl
jo
clc
xor
adc
mov
(bad)
push
lea
cmp
push
retf
add
cmp
ins
cmp
(bad)
fsub
and
lahf
xchg
xchg
cmp
xor
mov
push
sbb
pop
push
mov
xchg
jne
mov
leave
push
and
cmc
sbb
cmp
and
pushf
and
cmp
jp
mov
pop
and
push
fsubr
js
xchg
aam
or
cmp
mov
mov
les
xor
xor
sbb
dec
adc
test
xor
sahf
xchg
cld
xor
push
pop
popf
push
inc
xor
cld
je
xchg
out
xor
mov
mov
mov
stos
test
cmp
or
jmp
cli
int3
xchg
sbb
add
icebp
xchg
xchg
jge
and
mov
cmp
push
mov
add
xchg
xor
add
cmp
xchg
scas
jmp
ret
sub
and
ret
mov
dec
add
inc
loopne
mov
cli
mov
ror
inc
mov
hlt
pop
jecxz
pop
ins
mov
pop
mov
push
int
push
sub
add
std
das
fldcw
int
pop
ss
and
out
add
add
jg
xchg
in
mov
inc
pusha
int
mov
xor
add
fxch
lds
cs
rol
adc
xchg
add
sahf
pop
cs
lods
xor
fnstcw
sbb
pop
lock
fdivr
adc
jmp
xor
gs
mov
push
and
popa
call
xchg
sbb
arpl
cmp
fcomp
int3
push
xchg
push
outs
popf
arpl
mov
jb
dec
(bad)
ret
pop
pop
xor
aam
(bad)
push
push
mov
mov
retf
in
out
xchg
outs
iret
leave
jmp
outs
retf
lds
sbb
paddsw
push
std
cmps
lods
inc
jb
cmp
mov
mov
push
shl
jno
mov
pop
cli
sar
aad
dec
movs
xor
push
adc
ss
outs
and
adc
push
jne
sub
fadd
stos
js
aaa
inc
jns
adc
dec
pop
inc
jmp
push
fwait
lock
popa
mov
cli
mov
mov
mov
mov
pop
out
ins
mov
pop
add
mov
iret
inc
xchg
fldcw
push
scas
shl
mov
scas
jns
mov
dec
repz
pop
ins
inc
mov
clc
in
xchg
aad
fsubr
jecxz
mov
push
mov
es
mov
imul
movs
sti
popa
or
sbb
xor
push
pop
lahf
sub
xlat
cmps
fldcw
pop
inc
xchg
mov
popa
mov
lock
pushf
xchg
sti
and
or
aad
ret
sbb
push
cmps
lea
out
inc
stc
xor
sub
xchg
and
jmp
cmp
mov
sbb
popa
pop
cmps
mul
imul
pop
pop
xor
add
mov
push
pop
(bad)
jns
xor
xor
bound
(bad)
sbb
sub
mov
mov
fucompp
inc
in
adc
fdivr
add
sub
loope
pop
mov
dec
push
cdq
inc
mov
in
push
aaa
jno
xchg
(bad)
push
cmp
mov
jmp
push
loop
jmp
push
adc
mov
enter
mov
pop
and
add
or
jp
and
jmp
push
inc
sbb
and
idiv
lahf
dec
push
xchg
sahf
mov
nop
movs
lods
xlat
call
mov
fisttp
sbb
add
shl
pop
aas
and
or
inc
push
sbb
imul
and
clc
xchg
sbb
ds
(bad)
dec
loope
movs
stc
inc
push
fisub
fisub
adc
push
or
stos
jns
popa
or
jmp
jmp
push
xor
sub
mov
aad
cmp
call
fucomip
pop
mov
loopne
(bad)
jne
and
jae
adc
scas
hlt
mov
fcomi
jecxz
les
mov
retf
data16
(bad)
iret
jg
pop
test
fistp
sar
mov
pop
lods
adc
dec
movs
int
std
push
movs
add
pop
add
dec
jmp
adc
les
dec
or
jbe
popa
jmp
mov
or
xchg
inc
sbb
or
scas
sbb
stos
mov
fistp
jle
mov
xchg
fs
loope
movs
idiv
outs
cdq
aam
push
inc
push
fldcw
int3
(bad)
or
sub
mov
fnstenv
sar
jp
pop
push
aam
or
xor
arpl
repz
adc
or
push
xor
push
adc
jecxz
sbb
movs
mov
or
adc
xchg
pop
movs
clc
rol
fsubr
mov
add
jmp
mov
js
adc
test
clc
or
mov
push
ins
aad
in
in
ins
arpl
xlat
dec
adc
sbb
stc
popf
(bad)
pushaw
inc
pop
inc
mov
adc
inc
mov
adc
(bad)
fwait
ins
test
adc
stc
push
popa
xor
push
cmp
mov
adc
push
ja
sub
fldenv
outs
packuswb
xchg
xchg
or
and
repz
dec
jae
lods
or
xor
sbb
pop
pop
add
fstp
int3
or
dec
les
pop
push
dec
adc
enter
loopne
(bad)
arpl
xor
loop
sbb
pop
mov
vminps
xchg
and
cli
sub
mov
lds
mov
push
mov
sar
mov
xchg
lods
test
jns
js
jnp
rcl
cld
dec
jae
mov
into
dec
sub
and
(bad)
or
stc
imul
dec
cmp
stos
jecxz
dec
(bad)
adc
cld
push
lds
and
cdq
push
jns
sbb
or
movs
pop
and
pop
dec
ins
pop
cwde
fdivrp
cwde
fstp
mov
(bad)
and
in
jecxz
xchg
jno
ds
lahf
xchg
ja
gs
popf
jne
or
pusha
cmps
mov
jbe
push
pusha
adc
cdq
xor
xchg
cmp
in
mov
movs
mov
mov
fwait
and
pop
sub
inc
enter
clc
xchg
rol
ins
dec
sbb
fwait
dec
cmp
mov
fwait
push
mov
jge
push
inc
push
lock
dec
xor
imul
and
cwde
add
sbb
sbb
mov
xchg
pop
std
and
hlt
fidiv
ds
scas
repz
push
and
pop
repnz
sub
out
push
jo
or
xchg
adc
loop
add
int3
xlat
popf
lds
cs
or
push
(bad)
mov
sbb
dec
ins
sbb
add
jbe
scas
shl
enter
mov
mov
clc
cs
sar
scas
cli
xor
inc
push
imul
jle
js
pushf
aaa
push
in
int3
xchg
mov
mov
pushf
ret
je
(bad)
push
aaa
xor
stc
jo
cld
xchg
enter
mov
push
xchg
mov
daa
mov
mov
outs
xchg
sahf
cld
int
or
mov
jg
mov
jg
sbb
aaa
sub
cmp
ja
dec
sub
push
push
cmps
jno
scas
push
js
jle
inc
ss
aam
mov
push
test
xchg
sbb
jb
fs
xchg
and
and
push
loop
and
jge
mov
jle
stos
addr16
das
fist
ds
push
dec
xor
cmp
mov
adc
dec
dec
ret
int
sbb
out
les
xor
dec
sbb
or
hlt
cli
sbb
jb
fimul
sbb
inc
jo
data16
push
or
xchg
and
aad
mov
not
xchg
aas
imul
test
fdiv
jl
in
inc
adc
cwde
xchg
xchg
mov
xchg
and
pop
in
mov
pop
out
addr16
push
lea
stos
dec
push
(bad)
sti
cmpxchg
enter
adc
xor
jmp
movs
push
mov
xchg
shr
movs
dec
out
cmp
adc
mov
pop
xchg
loop
out
dec
fisttp
in
in
test
shl
cmp
or
scas
into
retf
inc
ds
cmp
out
pop
into
aad
and
int
add
adc
ret
adc
ror
fs
(bad)
or
adc
dec
into
and
mov
push
jecxz
mov
in
shr
sub
ret
call
xchg
sub
std
mov
xchg
adc
aam
(bad)
fild
sti
lahf
dec
fcom
pushf
push
push
movs
push
jecxz
popf
xchg
mov
sbb
imul
mov
cmp
xor
scas
pop
jo
push
ret
push
fcomp
push
bnd
inc
xchg
pop
inc
int
(bad)
ins
cmps
test
ins
jecxz
out
shl
inc
cmc
stos
outs
xchg
add
ins
in
dec
mov
jnp
or
inc
inc
aam
sbb
cs
jnp
mov
pop
mov
jecxz
push
jno
pop
pop
stc
pop
jl
aas
pop
inc
pop
xor
imul
fdivr
(bad)
sbb
movs
jb
dec
mov
adc
mov
aaa
out
xor
cmp
dec
fadd
jmp
inc
xor
out
cmp
or
mov
and
inc
adc
(bad)
icebp
pop
cmp
dec
inc
pop
ins
sbb
cmc
mov
loopne
and
and
inc
push
xchg
bsr
xor
test
dec
hlt
int3
add
(bad)
mov
iret
dec
and
mov
test
aas
call
xchg
imul
loopne
jb
xchg
inc
pop
push
dec
idiv
(bad)
fld
add
test
inc
loop
or
daa
sub
mov
outs
or
sbb
pop
daa
repz
in
pop
mov
or
mov
sub
(bad)
out
out
cdq
jl
loope
sbb
sbb
sbb
repz
push
jmp
adc
fsubp
call
mov
jb
pop
adc
and
adc
xchg
rol
mov
je
into
inc
repnz
adc
inc
stos
popa
mov
movs
add
jecxz
(bad)
mov
ror
mov
leave
lahf
fimul
je
sahf
pop
mov
jl
movs
cwde
shr
mov
mov
mov
loopne
scas
dec
sub
and
cld
mov
cmp
jo
and
mov
xchg
add
inc
out
cs
and
xchg
pop
scas
and
sar
jnp
sbb
xor
mov
mov
mov
inc
call
(bad)
clc
mov
je
cmps
ror
mov
push
mov
sub
mov
and
out
fidiv
cmp
cmp
neg
xor
mov
leave
xor
add
or
sar
fild
pop
pop
adc
pushf
xchg
push
ficomp
scas
pop
adc
lock
pop
hlt
popf
push
ret
lahf
daa
sahf
sbb
loop
pusha
in
in
scas
xchg
mov
adc
or
mov
mov
(bad)
leave
add
cmps
loope
push
cmp
fsub
scas
xchg
dec
adc
mov
xchg
add
retf
sti
mov
mov
inc
aaa
pushf
out
inc
imul
jmp
and
xchg
dec
dec
neg
sub
xor
sbb
jb
(bad)
mov
sbb
bound
div
arpl
ins
sar
iret
bound
xor
out
cld
sub
(bad)
out
aaa
cmp
mov
inc
xor
mov
adc
retf
jns
cmp
ins
ins
loop
push
test
rcl
cwde
sub
mov
pop
xchg
dec
inc
icebp
inc
rcl
jno
(bad)
mov
pop
arpl
mov
add
mov
jbe
push
jo
sub
jnp
js
loopne
pop
pusha
lock
ret
scas
add
out
xchg
loope
pop
call
push
mov
xchg
sbb
js
jmp
push
sub
jecxz
xor
jmp
mov
mov
pop
je
push
mov
outs
imul
ret
cmp
mov
int3
cmps
loopne
cs
mov
dec
sbb
into
push
popf
ins
mov
jns
sbb
clc
sub
(bad)
stos
stos
addr16
out
or
das
lea
hlt
popw
mov
or
call
ss
xor
mov
sub
xor
push
xor
in
ja
outs
push
call
dec
adc
std
add
mov
inc
out
push
shl
lock
outs
ret
pushf
call
jg
mov
cmp
sub
cmp
and
xchg
cwde
fcom
test
add
dec
jb
sbb
mov
jg
stos
xchg
scas
imul
jmp
and
(bad)
(bad)
add
fst
push
cmps
neg
call
or
adc
mov
or
push
cdq
push
sub
mov
add
lahf
int
jecxz
aad
cld
pop
mov
pop
outs
mov
cwde
sbb
inc
mov
shl
ds
enter
jo
sbb
mov
imul
jmp
ds
aaa
cmp
out
sub
shl
nop
and
mov
lahf
sbb
daa
pop
or
xlat
sbb
mov
dec
pushf
mov
mov
jae
adc
je
mov
addr16
loop
cld
and
imul
hlt
or
xor
xor
add
je
sub
inc
mov
retf
pop
lea
cmp
ss
cmp
das
mov
push
mov
(bad)
cmps
mov
fstp
in
dec
xor
dec
jg
push
int3
cli
xor
mov
ficomp
fs
mov
aam
jmp
movs
mov
outs
adc
jecxz
push
fimul
pop
bound
cwde
adc
mov
and
mov
leave
mov
mov
inc
dec
addr16
adc
sub
mov
sbb
push
dec
jnp
test
(bad)
mov
xor
cmp
inc
aas
jmp
retf
sti
or
bswap
mov
stc
scas
pop
pop
cld
call
test
push
bound
sbb
push
and
and
lds
(bad)
js
(bad)
cld
pop
or
stos
(bad)
xlat
or
(bad)
jae
(bad)
stc
lahf
iret
xchg
into
inc
cmp
jmp
mov
pop
retf
push
arpl
cmp
retf
bound
shr
push
lods
adc
fidiv
hlt
mov
pop
cs
aam
into
test
xchg
popf
(bad)
arpl
mov
loop
sub
jbe
iret
js
fsin
or
dec
cmp
mov
(bad)
mov
and
scas
jne
enter
fs
pop
add
daa
cmp
jmp
lods
mov
xor
sub
scas
enter
daa
ret
cmps
fisubr
sub
sub
adc
fcom
sbb
scas
(bad)
cmp
mov
in
bound
leave
inc
scas
in
jmp
add
or
es
(bad)
inc
sub
ror
imul
dec
mov
pop
in
xchg
dec
xor
fwait
mov
ins
je
cwde
mov
and
add
push
mov
adc
repz
lods
jo
ret
sub
idiv
add
repz
ror
mov
sbb
in
jp
aam
test
add
push
sbb
aam
inc
aas
adc
or
movs
sysexit
push
jb
call
out
mov
push
inc
cli
les
(bad)
fadd
inc
stc
add
inc
xchg
mov
sub
add
(bad)
out
cmp
(bad)
jnp
test
and
add
mov
(bad)
(bad)
sub
imul
daa
movs
pop
xchg
jp
pop
es
fcmovu
popa
add
(bad)
xor
(bad)
int
mov
addr16
addr16
dec
pop
ret
xchg
dec
cmp
cdq
rcl
out
lods
outs
cld
xchg
imul
push
fxch
cmp
pop
ins
mov
and
clc
or
(bad)
mov
ret
add
jno
pop
and
pop
xlat
retf
loope
sbb
ss
js
mov
xor
test
push
les
test
lods
loop
je
mov
lea
fadd
scas
cli
lds
sar
cmp
dec
adc
test
sar
adc
push
ds
push
leave
ins
(bad)
jnp
inc
jne
(bad)
stc
aaa
(bad)
adc
shl
sub
cmp
aam
imul
ret
xchg
aas
(bad)
fsubr
daa
mov
push
pminub
adc
and
shl
add
inc
add
sub
in
fsub
inc
mov
dec
sub
out
mov
fdivr
ficom
jg
sar
mov
jno
adc
cmc
sbb
lds
jnp
movs
jl
bound
or
fisubr
xor
popa
pop
cmps
jp
inc
stos
arpl
mov
je
repz
in
inc
cmp
push
mov
cdq
icebp
xlat
adc
imul
(bad)
lock
cmp
fs
enter
jns
xor
cwde
retf
fnstcw
nop
leave
mov
jb
and
xlat
cdq
and
call
cmp
es
add
rcl
ret
cmp
jno
ret
(bad)
out
daa
call
or
dec
fadd
hlt
shl
mov
test
ins
or
movs
sbb
sahf
rcl
jmp
xchg
gs
add
into
cmp
call
xchg
ds
in
rcr
dec
cmp
mov
xlat
popf
fidivr
add
xchg
movs
out
or
xchg
dec
jno
cmp
jmp
add
movs
in
shl
add
push
sbb
inc
test
(bad)
push
or
cmps
xchg
data16
repnz
cmps
adc
sbb
mov
mov
mov
mov
xchg
inc
cmp
mov
push
and
aad
push
push
cmp
sub
aam
nop
addr16
cs
scas
das
lahf
mul
test
push
dec
arpl
test
xchg
js
or
pop
scas
xchg
lods
movs
push
xchg
or
cs
push
add
dec
jnp
inc
fucom
nop
rcr
inc
stos
or
jne
dec
out
outs
lea
push
adc
jge
pop
add
idiv
adc
test
push
iret
sub
inc
adc
mov
test
pop
mov
push
or
pop
cmp
cmp
jo
sub
inc
xor
into
jp
and
clc
jne
ds
xchg
test
xchg
pop
scas
or
dec
leave
xor
or
inc
fsub
ins
add
stos
out
out
xor
and
cmp
ins
cdq
aad
cs
add
(bad)
xchg
loopne
add
mov
push
inc
push
pop
jno
jnp
stos
arpl
push
retf
inc
lock
loope
push
cmp
cmc
push
pop
inc
adc
fcomip
std
mov
push
xchg
adc
jl
cmps
into
pop
ds
sbb
cld
lods
ror
(bad)
push
sbb
add
les
pop
lea
mov
out
cmps
in
rol
inc
hlt
xor
jmp
jnp
sbb
sub
sar
lods
movsx
les
cmp
mov
sbb
(bad)
xchg
imul
daa
out
or
(bad)
nop
cmps
jmp
repz
mov
sub
pop
cmp
and
scas
pop
mov
lock
test
lahf
sub
mov
cmp
(bad)
popa
lahf
daa
movs
push
xchg
xor
int3
lods
ror
dec
out
cmp
rcr
pop
xchg
pop
mov
je
xor
mov
into
mov
mov
jg
cli
(bad)
rol
mov
rol
rcr
cmp
cmp
jmp
mov
retf
into
lea
addr16
data16
sbb
jecxz
cmp
jecxz
sub
mov
ins
arpl
in
xor
in
(bad)
(bad)
dec
sbb
sbb
pop
or
ror
jmp
and
sti
mov
push
push
xchg
outs
cmps
jl
das
mov
push
adc
xchg
int3
inc
lds
jbe
loop
jp
call
adc
xchg
xchg
shl
mov
cmp
retf
xchg
sbb
xchg
fsubr
aaa
mov
add
jbe
adc
fcomp
jge
pusha
addr16
mov
push
push
out
js
shr
cli
cld
xor
fcomp
sub
fs
mov
jb
inc
les
mov
lahf
inc
movs
and
adc
ds
push
pushf
push
dec
sbb
push
out
add
scas
and
pop
mov
and
imul
cmps
sub
push
call
leave
fild
in
mov
mov
sub
pop
call
nop
jb
fidivr
cmps
retf
loope
jbe
out
mov
and
sahf
movs
fisubr
add
out
mov
push
mov
xchg
xchg
dec
js
push
pop
sar
popa
mov
in
adc
sub
aad
push
adc
mov
push
or
inc
ret
loopne
or
dec
pushf
inc
dec
adc
mov
aam
jg
sub
cs
push
cwde
sahf
jl
add
div
outs
xor
clc
sub
ds
sbb
stos
dec
jbe
je
mov
out
mov
cmp
or
sub
cld
push
je
sbb
mov
fsubr
cli
test
std
call
sub
fld
pop
sbb
ret
xor
xchg
mov
pop
mov
(bad)
sbb
sub
mov
cdq
in
jae
lods
xchg
nop
push
ss
lahf
mov
mov
cmps
outs
mov
test
push
test
jo
fcomi
cwde
dec
mov
lods
adc
dec
xlat
ins
pop
mov
scas
stc
mov
mov
push
stos
int3
push
pop
nop
(bad)
aas
xor
test
sbb
dec
repnz
inc
call
jl
xchg
lahf
imul
sbb
iret
bound
cdq
outs
test
fyl2xp1
iret
sbb
les
jge
xor
(bad)
push
fdiv
xlat
inc
jno
xchg
fisubr
ret
and
stc
jns
lahf
xor
cmp
mov
enter
inc
test
popa
and
cmps
inc
in
int3
jmp
fwait
pop
addr16
retf
aad
pop
mov
and
inc
loop
adc
aam
das
test
xor
mov
cmc
test
inc
retf
imul
rcl
movs
cmp
clc
or
or
lds
retf
add
pop
jns
clc
pop
jmp
sbb
push
test
or
sbb
jecxz
lock
not
add
aad
cmc
jns
xor
not
push
test
les
cmps
inc
pop
jmp
pop
sbb
add
ficom
into
add
aaa
rol
rcr
shl
mov
push
mov
push
ins
jge
data16
(bad)
cdq
mov
mov
jne
jbe
mov
ja
jno
pop
cmp
div
(bad)
push
or
jns
(bad)
cmp
pusha
das
inc
fnstcw
out
aaa
xor
ror
stos
or
into
out
cld
mov
cmp
mov
mov
iret
call
fstp
xchg
in
cmp
mov
xchg
in
mov
scas
push
push
mov
dec
arpl
sub
inc
rcr
inc
das
out
sbb
inc
stos
cmps
setg
push
mov
or
cli
ror
jl
pop
sub
xchg
push
and
cmp
ret
xor
stc
loopne
push
dec
es
std
xchg
daa
loope
fdiv
sub
and
xchg
jmp
lds
rcr
not
cdq
inc
xchg
add
xchg
xor
aaa
mov
repnz
repnz
dec
test
das
dec
dec
mov
mov
fadd
dec
sub
pop
test
(bad)
jmp
rcl
push
xchg
sti
push
pop
call
in
or
add
push
in
pop
les
push
or
hlt
add
xchg
(bad)
push
pop
dec
xor
movs
mov
dec
mov
fdiv
mov
cmp
pop
dec
fnstcw
sbb
pop
dec
adc
pop
and
push
addr16
sahf
jae
sub
fnsave
push
pushaw
push
inc
add
pop
sahf
push
jp
addr16
call
outs
jge
not
jae
inc
mov
cdq
fcmovnbe
mov
stos
pop
adc
add
loopne
add
loop
jno
cmp
xchg
mov
dec
inc
xor
add
pusha
inc
or
(bad)
mov
xchg
cld
loopne
cmc
jecxz
adc
xor
mov
mov
sar
mov
push
or
fld
xlat
inc
cmps
lock
or
test
xchg
mov
scas
cmc
add
push
xor
mov
inc
add
push
mov
fsqrt
test
inc
jp
cmp
out
mov
pop
or
icebp
aad
inc
cmp
cmps
cmps
mov
pop
movs
aad
scas
mov
aas
mov
dec
add
div
loopne
cmps
lods
(bad)
add
je
sbb
mov
fsub
in
out
jge
nop
jp
cli
imul
adc
mov
bound
mov
jmp
dec
or
scas
or
xor
test
inc
add
pop
stos
jmp
jl
stos
mov
nop
fild
loope
into
inc
ror
ins
int3
pusha
add
xchg
push
xchg
movs
outs
pop
shl
mov
xor
mov
stc
and
inc
loopne
inc
imul
es
and
aas
inc
rcr
(bad)
sbb
popa
push
loopne
sbb
sub
sti
cmp
xchg
mov
popa
mov
aad
jb
xchg
and
jmp
jnp
jge
mov
mov
sbb
add
add
movs
sbb
arpl
ss
dec
(bad)
jo
sar
or
cmp
cmp
add
push
lods
or
mov
and
xchg
cmp
sbb
xor
fwait
or
sbb
or
dec
mov
pop
push
stc
inc
addr16
rol
jmp
or
or
int3
add
mov
add
jmp
std
push
xor
mov
xchg
movs
in
outs
push
in
mov
and
popf
jmp
xor
jge
xor
and
aas
sbb
or
addr16
mov
outs
cmps
mov
mov
dec
xchg
call
std
sub
and
cmp
lods
add
popf
xchg
push
dec
hlt
xor
xor
shr
leave
sub
lock
or
adc
inc
push
loope
xor
or
cs
popa
ds
(bad)
bound
jb
clc
jns
stos
sbb
inc
je
cmp
mov
ins
int
stc
sbb
dec
add
frstor
arpl
lea
mov
sbb
aad
and
xor
popa
rcl
mov
adc
in
cdq
and
and
mov
mov
mov
mov
inc
xchg
adc
ss
add
dec
cwde
pop
jne
mov
jle
sbb
push
mov
and
sub
sub
xor
aas
and
jmp
int
xchg
jns
mov
adc
mul
call
adc
mov
xchg
inc
rcl
fucomi
xchg
aad
aaa
mov
clc
imul
push
xchg
pop
adc
xor
cmp
cmc
xlat
push
pop
retf
push
hlt
inc
or
inc
jmp
cli
fld
repz
(bad)
sbb
in
imul
add
mov
mov
xchg
xor
pop
dec
loope
pop
cmps
xchg
lahf
int3
jp
lods
loope
pop
or
mov
das
lds
xchg
fwait
xor
lahf
add
hlt
inc
ds
or
push
outs
or
push
inc
and
popa
xchg
inc
in
call
enter
add
fidiv
rcr
dec
pop
jl
sbb
stos
adc
retf
dec
loopne
aam
mov
push
inc
loop
or
fs
cwde
lahf
mov
fxch
mov
push
cmp
push
inc
push
sbb
push
repnz
(bad)
fstp
xchg
shl
scas
push
icebp
sub
test
mov
jo
ins
repnz
ss
shl
aad
xchg
stc
repnz
mov
and
iret
les
xor
xchg
movs
stos
outs
out
fcomp
pop
dec
xlat
jmp
addr16
sub
xlat
data16
and
scas
cmps
inc
ror
add
sub
in
(bad)
jo
add
jecxz
pop
mov
or
int
xchg
fsubr
pushf
or
hlt
inc
xchg
mov
sar
repnz
inc
push
pop
xchg
or
pop
das
lahf
mov
loop
xor
(bad)
int
lods
jbe
add
sbb
mov
sub
int3
retf
cmps
sahf
pop
mov
mov
aam
push
mov
std
jnp
mov
sub
pushf
add
xor
les
scas
(bad)
aaa
adc
std
fst
shl
bswap
sbb
mov
int3
or
and
(bad)
lods
xchg
icebp
inc
jnp
mov
lods
inc
xchg
imul
cmc
scas
call
ja
repz
(bad)
cmp
test
pop
mov
push
fs
movs
pop
scas
mov
pusha
inc
jmp
mov
daa
xor
mov
jecxz
mov
adc
fisttp
dec
lods
mov
imul
and
sub
rcl
lock
hlt
dec
add
loopne
adc
xor
out
imul
test
sub
sbb
mov
repz
xchg
cs
outs
rol
push
dec
leave
std
jge
dec
pusha
and
and
or
je
xchg
(bad)
idiv
call
mul
rol
adc
mov
push
clc
imul
mov
scas
jecxz
(bad)
pop
imul
ror
int3
cmp
xor
xor
jmp
cmc
pop
inc
movs
mov
mov
cmp
not
fucomip
adc
or
pop
pop
pop
shr
xor
inc
addr16
loope
pushf
dec
dec
jo
sbb
enter
mov
push
cld
cdq
bound
out
div
and
or
adc
int3
sbb
mov
bnd
arpl
lahf
popf
ja
loop
push
pop
sbb
add
push
stos
cmp
mov
cmp
push
movs
or
mov
mov
fs
ret
sbb
shl
dec
sbb
popf
sub
out
xchg
inc
popf
jl
int3
cmp
push
jbe
sbb
pop
jbe
in
call
lds
das
push
sbb
cmp
jne
sbb
in
push
clc
jmp
loop
mov
push
dec
inc
add
sbb
test
imul
punpcklwd
icebp
imul
outs
daa
clc
adc
or
clc
dec
out
imul
test
push
cmps
(bad)
fst
or
push
pop
clc
loopne
(bad)
(bad)
enter
xchg
into
cdq
fstp
or
pop
test
cmc
xor
out
mov
and
mov
inc
xor
pop
fwait
daa
jmp
push
call
adc
cli
ja
jno
gs
or
pop
xchg
out
hlt
inc
jmp
fild
inc
jle
adc
cmp
jp
cmp
stc
gs
push
mov
jo
inc
add
cmps
fnstsw
mov
pop
cld
(bad)
test
jle
lock
and
in
bound
(bad)
mov
cmps
ins
sbb
or
es
and
js
sbb
lods
mov
or
popf
inc
push
mov
lods
lds
loopne
hlt
cmc
call
add
cmps
and
xchg
mov
bound
mov
or
icebp
sahf
pusha
and
jge
adc
(bad)
pop
lea
mov
call
retf
cwde
mov
dec
mov
(bad)
sub
cwde
xchg
or
es
pop
xor
mov
mov
mov
jo
push
adc
call
shr
sbb
push
xchg
mov
(bad)
mov
out
sub
push
pop
and
push
xchg
mov
(bad)
pop
add
loopne
cld
sbb
pop
xchg
loopne
mov
imul
mov
xchg
test
mov
lods
aas
cmp
jmp
dec
pop
and
dec
sti
dec
adc
das
fwait
lods
push
push
cmps
sub
jno
icebp
dec
movs
jmp
daa
push
(bad)
pop
xor
dec
clc
push
sub
mov
sti
jne
and
inc
out
scas
sbb
cmp
imul
pop
scas
jp
pop
mov
mov
dec
push
mov
mov
and
mov
scas
sbb
jmp
aad
xor
stc
sbb
lds
jae
ror
fist
pop
int
repz
jne
mov
xchg
pushw
imul
outs
push
xor
pop
xlat
stc
push
gs
in
cmp
je
sbb
pop
sbb
jb
iret
fs
es
inc
out
xor
xchg
pusha
jnp
jne
adc
idiv
cmps
sub
out
lods
clc
fs
push
lods
jnp
dec
fadd
mov
fidivr
data16
dec
push
shl
jp
call
xchg
shl
mov
dec
inc
mov
mov
dec
out
sbb
fsubr
xchg
add
cmp
pop
mov
imul
dec
fwait
sbb
fimul
sub
inc
xor
ins
pusha
aam
and
adc
sbb
jmp
pop
pop
lods
jo
dec
fadd
add
add
xor
mov
push
(bad)
fdivr
push
push
xor
scas
mov
sahf
xlat
mov
imul
rcr
sub
cli
dec
sahf
or
inc
cmp
mov
inc
push
hlt
pop
xlat
mov
jl
ins
retf
inc
push
ja
cmp
mov
daa
mov
call
enter
mov
in
dec
aaa
xchg
enter
adc
pop
fisub
jle
and
int
imul
cmp
pushf
in
xor
sti
retf
sar
cmc
push
paddsw
mov
mov
cmp
imul
lock
lods
ror
jns
jge
scas
dec
(bad)
out
or
ja
lea
jp
pop
adc
or
aam
ins
retf
and
loop
mov
dec
dec
mov
sbb
and
mov
jle
shr
cld
fidivr
jmp
jmp
test
outs
(bad)
out
into
and
gs
ins
frndint
xor
in
mov
cdq
scas
push
jae
mov
push
mov
inc
js
cmp
push
pop
push
adc
pop
mov
outs
aaa
push
xchg
jle
dec
mov
clc
aam
xor
sar
sbb
and
movs
pop
fdiv
inc
pop
inc
sahf
jecxz
mov
xlat
add
jno
mov
hlt
adc
mov
and
call
sub
test
imul
pop
das
pop
inc
inc
xor
sahf
mov
cld
or
xchg
pop
iret
into
repnz
adc
aaa
add
ret
imul
lods
inc
(bad)
(bad)
fcom
dec
jno
retf
mov
popa
mov
(bad)
mov
sub
cdq
daa
jno
pushf
repz
outs
sub
sahf
inc
mov
in
push
loope
imul
or
push
mov
bswap
rcr
packuswb
fidivr
mov
dec
mov
push
sbb
into
push
dec
or
cs
mov
(bad)
int3
(bad)
aaa
sub
mov
shl
cld
scas
mov
push
and
cmp
inc
adc
lock
cmp
cmps
xchg
aam
retf
out
leave
repz
lock
int
and
rcr
into
pop
and
scas
sub
jne
jo
sub
ret
sbb
or
popf
sti
inc
ds
icebp
leave
and
fucom
shr
mov
imul
in
dec
stc
cld
aam
push
jmp
mov
pop
sbb
push
xor
dec
inc
ja
dec
addr16
loop
xor
in
jae
pop
cmc
data16
and
pop
xlat
(bad)
ds
mov
es
scas
push
lock
ret
ds
mov
and
cdq
fcom
call
lods
outs
mov
adc
rcl
or
fidivr
not
arpl
nop
(bad)
into
and
sahf
loope
dec
clc
test
dec
or
clc
(bad)
leave
pushf
aad
nop
push
lahf
xchg
sub
inc
jge
inc
xchg
adc
fsub
push
push
jmp
aas
sub
mov
out
mov
shl
jnp
ins
add
test
jl
pop
shl
lods
movs
push
pop
retf
mov
xchg
mov
xor
jecxz
mov
push
lods
xor
jmp
test
jo
add
je
xor
inc
nop
xchg
loop
mov
loope
iret
pop
(bad)
ja
xor
add
stc
sub
cmp
into
cld
pop
cmp
ret
adc
push
les
add
out
add
mov
sub
sub
fimul
mov
xchg
mov
stc
inc
dec
sbb
inc
ss
xchg
leave
ins
add
dec
or
xchg
pop
test
xor
sar
(bad)
jmp
ins
in
jmp
rol
loopne
mov
inc
repz
sub
sub
mov
dec
cld
js
xchg
pop
xchg
sub
call
(bad)
sti
sub
jecxz
call
out
test
out
and
aad
jae
or
mov
outs
or
std
aad
and
das
cmps
into
jno
push
call
or
adc
push
xchg
mov
inc
test
inc
call
ror
jns
inc
mov
and
leave
mov
inc
ja
das
sar
sbb
sar
pop
and
mov
std
into
sub
jno
mov
lea
xor
and
not
movs
fsub
add
sbb
rol
mov
mov
sub
pushf
push
cld
push
rcl
push
mov
jae
dec
xchg
sub
nop
add
cmp
and
test
fs
(bad)
cmp
pop
retf
jno
bound
xchg
jae
dec
jb
loopne
lds
div
xchg
sahf
mov
jno
cmps
sub
dec
test
mov
sbb
and
jmp
shl
cld
test
dec
pop
pop
sar
imul
xor
lods
mov
ins
sub
pop
inc
push
mov
fmul
dec
test
dec
(bad)
sbb
jmp
push
mov
cld
adc
int
mov
test
fnstcw
hlt
ret
jno
(bad)
adc
daa
sub
fistp
or
xor
jmp
or
pop
movs
mov
xchg
push
mov
jmp
ror
outs
lahf
inc
fimul
imul
pop
cmp
test
push
mov
into
or
xchg
arpl
sahf
ja
and
mov
pop
jmp
nop
fadd
add
mov
repz
or
or
xor
stos
xchg
xchg
fsub
sub
push
pop
lods
into
test
mov
sub
stos
mov
adc
adc
popf
add
dec
cmp
or
hlt
mov
xor
in
inc
jg
sbb
mov
sti
sbb
gs
mov
mov
jo
ss
mov
mov
push
dec
adc
test
test
test
call
adc
mov
sub
jns
cwde
into
push
add
mov
mov
sar
push
sub
hlt
std
aad
outs
xchg
or
cmp
mov
retf
nop
xchg
xor
pushf
pop
sub
sub
pop
shl
cmps
jns
cdq
sub
jne
test
add
push
lahf
dec
dec
cld
mov
cdq
ja
rol
int
test
daa
mov
fstp
fldenv
mov
cld
jge
aaa
stos
mov
mov
ds
loop
cmp
fisttp
xchg
call
fwait
mov
jg
jne
shl
add
sbb
jl
and
sub
gs
mov
jns
bnd
dec
inc
push
mov
imul
mov
hlt
cmc
dec
xor
inc
sub
sbb
mov
sbb
jg
dec
repnz
inc
adc
add
sbb
dec
sbb
or
mov
cmps
imul
call
pop
cmps
bts
jle
jo
cmp
xor
mov
jge
mov
push
add
cmp
inc
mov
and
lea
sbb
arpl
jne
push
cmp
(bad)
cmc
cmp
sbb
imul
dec
jbe
iret
xchg
xchg
lods
hlt
in
sbb
or
das
jecxz
jmp
leave
test
test
in
jne
popa
and
fs
gs
test
aam
and
iret
fnstsw
lods
imul
jecxz
rcl
bound
shl
inc
adc
push
les
dec
inc
mov
dec
adc
(bad)
jnp
cmc
in
scas
add
mov
aad
fcmovnu
add
lods
rcl
pop
sbb
shl
out
xchg
adc
es
add
inc
dec
into
shr
xor
pop
jl
dec
mov
out
xor
aam
cmp
out
pop
stc
fimul
xor
push
mov
pop
jp
loope
add
add
aaa
mov
shl
sub
sub
rep
xchg
daa
enter
push
inc
sub
sbb
push
push
adc
pop
aas
pop
or
pop
xor
mov
xor
ins
pop
pop
mov
or
call
xchg
pop
fimul
popf
inc
movs
ins
rcl
sub
jp
out
jmp
aas
aas
jae
pushf
stos
into
out
cmp
out
dec
in
or
xlat
out
gs
aas
int
not
push
jo
(bad)
(bad)
pop
mov
or
jp
sub
popf
retf
aaa
push
sub
fadd
pop
jb
imul
mov
push
iret
or
out
and
icebp
push
jmp
aaa
mov
sub
inc
xchg
in
and
mov
mov
inc
outs
sbb
loope
stos
nop
popf
xor
jle
ret
xor
add
mov
dec
addr16
pop
fld
js
(bad)
jo
xor
(bad)
loope
mov
xor
in
aas
add
xor
cmps
sbb
fnsave
(bad)
ret
mov
xchg
outs
add
mov
push
or
add
es
popa
pop
enter
popf
xchg
dec
arpl
push
ins
lock
or
pop
fnstsw
xchg
mov
lock
xor
sbb
arpl
loope
xor
mov
push
pop
outs
(bad)
in
bound
push
dec
or
inc
pop
inc
xchg
in
imul
pop
fcomp
or
push
mov
mov
test
xlat
(bad)
(bad)
xlat
imul
test
nop
cmp
xor
mov
xor
retf
mov
inc
pop
sub
sub
add
bswap
jno
sbb
xor
loopne
das
xchg
mov
mov
mov
or
stos
lock
jbe
outs
mov
lock
cmc
pop
mov
fld
imul
cmp
(bad)
push
das
js
int3
(bad)
fcomp
out
cmp
mov
std
push
mov
int3
mov
mov
xchg
lds
inc
imul
jae
fcmovb
sub
aam
enter
pop
nop
mov
jp
cmp
cmp
cwde
dec
loop
add
lods
mov
arpl
out
adc
push
pusha
push
inc
in
into
pop
push
xchg
ins
(bad)
pop
cmps
xchg
fmul
sbb
add
lock
outs
in
lods
(bad)
cli
out
pop
jmp
mov
daa
cli
mov
mov
sbb
sbb
stc
ins
neg
cmp
imul
jecxz
fs
out
addr16
mov
icebp
push
push
or
dec
fs
stos
xlat
(bad)
hlt
add
mov
mov
outs
mov
aaa
stos
retf
ins
sub
stos
icebp
inc
aad
out
sbb
mov
das
retf
pop
jo
std
mov
jne
(bad)
out
call
inc
push
loop
leave
loope
lds
jnp
jo
cld
imul
test
cmp
sub
aas
icebp
jnp
add
in
push
loope
icebp
and
fcmovne
(bad)
mov
(bad)
ret
push
neg
int3
sub
xor
sub
or
les
push
sbb
shr
push
jle
jne
fstp
lahf
shl
in
repnz
mov
xchg
push
cmp
mov
test
test
cmp
dec
xor
push
push
test
mov
mov
sub
out
lock
mov
and
clc
out
rcr
pop
nop
dec
lock
sbb
dec
push
pop
std
mov
aas
dec
ds
cli
mov
push
gs
sbb
sbb
dec
mov
jb
dec
(bad)
fild
cmp
movs
jp
and
lahf
sub
push
bound
pop
jecxz
stos
icebp
in
dec
loopne
cmp
sub
add
pop
xchg
cli
pop
mov
pop
adc
mov
in
jnp
(bad)
adc
mov
lea
xchg
test
fist
mov
lahf
mov
push
lea
and
mov
add
movs
jno
xor
imul
sbb
mov
mov
jl
jae
push
ins
cmp
jno
clc
(bad)
fnstsw
pop
adc
sub
sub
jle
xchg
ja
mov
(bad)
mov
inc
mov
and
xchg
lds
xchg
push
cmp
lods
stc
ret
jns
fmul
(bad)
mov
(bad)
xchg
dec
adc
dec
push
inc
in
dec
or
pop
sbb
fdivp
hlt
test
bound
adc
mov
push
sahf
test
xor
xor
cld
mov
xor
popa
repnz
gs
and
mov
mov
xor
xchg
hlt
mov
inc
mov
and
add
sbb
popf
sub
and
mov
add
mov
mov
xchg
pop
jo
adc
shr
fsub
bt
aad
inc
enter
mov
mov
and
pop
cmp
fldenv
or
sbb
stos
dec
mov
adc
int3
and
adc
cwde
xchg
dec
stc
retf
xchg
mov
push
stos
(bad)
cmp
mov
mov
cs
fadd
jge
test
dec
ss
rcl
sahf
dec
add
call
cmps
sti
and
iret
gs
push
xor
sbb
shl
mov
xor
and
dec
xchg
cs
retf
mov
adc
mov
pop
adc
lahf
dec
ret
push
ins
mov
mov
popf
(bad)
xor
dec
add
fidiv
cmps
adc
repz
ficom
(bad)
cmc
shr
sbb
add
call
mov
xchg
loopne
sbb
adc
dec
ins
popa
dec
shr
mov
daa
cmps
test
(bad)
mov
(bad)
inc
jmp
test
pop
icebp
adc
punpckldq
pop
jl
loopne
cdq
pop
pop
not
popf
or
dec
add
xlat
dec
dec
inc
pop
adc
cmp
aam
icebp
push
sahf
mov
jmp
cwde
sahf
popa
int3
push
std
cmc
mov
inc
in
and
fisub
popf
and
add
loop
and
push
adc
aam
xor
sar
dec
adc
shr
leave
fstp
push
es
ror
les
or
mov
xor
fdivr
loope
lods
repnz
bound
pop
neg
sub
jl
sub
adc
ja
mov
(bad)
out
das
movs
stos
push
dec
or
jns
call
stc
cmps
test
test
sbb
loope
push
cdq
rol
cmp
pop
jne
cmps
pusha
sub
dec
mov
jb
jmp
dec
dec
jmp
jl
test
sbb
cs
mov
or
loop
arpl
loopne
mov
repnz
ret
push
sahf
loope
shl
dec
arpl
jb
test
cmp
mov
jb
and
mov
pop
mov
dec
fistp
mov
push
iret
lods
fimul
dec
sahf
dec
mov
xchg
jae
xchg
outs
jns
jbe
cmps
inc
cmc
std
ja
aam
cmc
mov
out
inc
movs
outs
dec
mov
add
pop
adc
xchg
into
mov
xlat
ins
push
push
mov
fidivr
test
cmps
fisub
sub
imul
xchg
dec
mov
mov
les
adc
cmp
push
and
mov
mov
and
inc
(bad)
add
push
dec
add
xor
jge
dec
add
inc
movs
out
(bad)
jg
add
mov
and
call
repnz
xor
mov
enter
imul
outs
jecxz
popf
cmp
shr
les
out
jl
out
(bad)
jl
jno
scas
mov
popf
scas
fwait
ds
mov
dec
jae
push
icebp
test
push
adc
pop
stc
push
cmp
adc
xor
or
dec
xchg
pop
adc
cwde
dec
and
mov
pop
push
aad
mov
mov
scas
or
and
mov
in
mov
and
inc
loope
test
in
add
add
add
call
add
mov
gs
jae
clc
add
xor
xor
(bad)
cmp
cmp
jb
dec
jns
add
adc
outs
outs
sbb
xchg
enter
jns
sbb
xchg
mov
imul
mov
cmp
sbb
aaa
mov
inc
in
pop
dec
sub
cld
pop
cmp
xchg
out
(bad)
jmp
xchg
imul
ss
inc
iret
iret
dec
call
dec
dec
mov
mov
ins
adc
inc
push
sub
sub
or
push
cmc
call
inc
loopne
or
xchg
xor
icebp
and
(bad)
aaa
or
jmp
dec
jno
or
ja
dec
cli
xchg
lds
or
add
xchg
into
(bad)
shr
rcl
or
pop
sub
outs
(bad)
aas
shl
mov
adc
xor
sub
mov
mov
cwde
in
loop
icebp
mov
retf
(bad)
arpl
mov
add
in
aam
jg
lods
test
popf
inc
sti
pop
jnp
xchg
shl
mov
sub
cmc
mov
lahf
and
add
cmp
stos
cmp
xor
ret
dec
xchg
jmp
jo
ret
popf
xchg
dec
popa
retf
inc
fild
cmps
sub
ret
mov
pop
or
mov
dec
cmps
push
jmp
mov
push
dec
imul
sub
pop
ds
test
push
test
mov
test
dec
(bad)
jne
and
xchg
in
popf
cld
ror
mov
push
aaa
mov
mov
xor
adc
pop
or
mov
sub
inc
and
(bad)
mov
push
in
xchg
push
out
pop
mov
pop
push
xchg
add
(bad)
rcl
mov
jle
and
sub
movs
lods
enter
lds
sub
mov
jecxz
jne
ss
fcom
add
jno
push
adc
jge
aaa
adc
jno
and
pop
add
fbstp
cmps
mov
and
jns
mov
cmps
test
test
ins
xlat
inc
cmp
pop
ds
pop
push
dec
mov
cld
adc
mov
mov
in
mov
in
icebp
sbb
into
es
mov
jns
pop
les
xor
push
adc
shr
imul
add
retf
cmc
cmp
popf
adc
jo
(bad)
not
icebp
xchg
jl
mov
rcl
test
or
sbb
dec
retf
inc
inc
cmp
lods
aad
jbe
sub
add
pop
sbb
jle
xor
xchg
pop
mov
push
fbstp
jge
ficom
jo
in
mov
jle
(bad)
mov
out
xchg
out
movs
adc
jp
cmp
mov
mov
mov
ja
or
jno
mov
inc
dec
and
out
xchg
les
xor
call
push
lea
and
popf
les
(bad)
xor
div
rcr
adc
mov
mov
sub
cmp
push
jg
push
adc
stos
push
lds
push
aam
(bad)
call
test
xor
mov
xor
jle
fnsave
adc
sahf
out
mov
add
xchg
xor
and
mov
jbe
ret
aad
clc
or
adc
cmps
jbe
leave
nop
cmc
loopne
push
xor
int
add
adc
outs
pop
ds
push
lock
add
and
add
call
mov
enter
out
pop
fimul
mov
dec
stos
hlt
in
test
cmp
data16
inc
adc
push
mov
sub
xlat
loope
sub
lds
add
and
or
mov
push
div
cmp
cmp
jmp
inc
add
jbe
test
retf
pop
enter
mov
mov
jge
fsubr
push
adc
add
(bad)
jae
rol
test
sub
cmp
outs
les
adc
cmp
dec
loopne
sub
sti
add
mov
cmp
(bad)
cmp
inc
aam
shl
xchg
xchg
xlat
popf
mov
scas
xor
ret
xchg
jp
sar
inc
add
out
div
fadd
mov
and
inc
push
rcr
xrelease
mov
into
xchg
xlat
(bad)
fisttp
xor
cmp
(bad)
(bad)
(bad)
pop
pop
cmp
mov
inc
mov
push
xchg
jnp
dec
push
outs
bound
ror
adc
sub
sub
mov
enter
xchg
adc
mov
arpl
push
stc
cli
jbe
or
fnstcw
repz
shl
loop
sar
push
and
push
imul
adc
fisubr
cmp
mov
inc
adc
rol
jnp
fild
aam
sub
jecxz
test
sub
neg
cmc
cld
out
cwde
sub
not
xor
sbb
mov
sbb
pop
xor
lods
out
mov
scas
jle
jmp
jae
call
mov
js
fstp
and
div
cdq
invd
movs
popf
xchg
mov
arpl
adc
sbb
out
add
or
mov
(bad)
fsubp
retf
(bad)
loop
cdq
adc
fstp
jns
jne
pushf
in
and
outs
(bad)
xchg
xchg
adc
loop
rcl
mov
popa
retf
(bad)
or
cs
in
pop
mov
popa
sub
aaa
aam
mov
aam
gs
nop
inc
movs
jo
pop
js
(bad)
or
inc
pop
fstp
sub
cmp
gs
into
dec
pop
sub
sub
xchg
loop
jb
fucomp
xor
mov
mov
add
pop
fsubr
mov
mov
movs
mov
in
add
call
clc
or
mov
ja
(bad)
mov
inc
jg
or
adc
jle
imul
call
inc
cmps
sub
mov
lahf
pusha
pop
sub
(bad)
pushf
and
cmp
idiv
cs
inc
lock
pop
xchg
into
jne
call
or
sbb
imul
loope
inc
xchg
sbb
sbb
test
idiv
add
mov
mov
into
adc
xor
scas
mov
xchg
add
pop
xchg
mov
inc
jbe
rol
xlat
sub
push
pop
fist
jmp
pop
sub
pop
dec
(bad)
cdq
adc
int3
int3
repnz
cmp
add
jge
popa
gs
adc
mov
cmp
stos
adc
call
dec
inc
aam
mov
push
sbb
loop
pop
mov
add
es
in
xor
dec
in
inc
sub
xchg
das
enter
mov
inc
add
cmp
(bad)
mov
aad
dec
sbb
push
add
cmps
iret
adc
sub
test
jl
stos
dec
pushf
xchg
inc
inc
daa
xor
jecxz
mov
cld
jb
add
mov
xchg
inc
fsubr
sub
add
in
mov
movs
push
idiv
or
lea
cmp
int
cpuid
loope
nop
pop
jb
or
mov
inc
in
mov
mov
pop
fmulp
mov
xor
or
xchg
jmp
mov
sub
jbe
mov
xchg
ins
xchg
mov
and
and
arpl
push
dec
fwait
dec
shl
fdiv
and
and
sub
dec
in
mov
clc
sbb
cmps
mov
shr
pop
mov
pusha
mov
aad
rol
popa
mov
or
into
sbb
dec
or
push
test
jp
jp
(bad)
scas
cwde
cmps
push
ins
and
mov
repnz
inc
sahf
inc
jecxz
scas
mov
xchg
iret
call
inc
cmp
inc
mov
and
out
jl
inc
pop
scas
in
mov
(bad)
pop
test
pop
ins
pushf
in
xchg
icebp
loop
mov
pop
movs
repz
(bad)
cmps
lods
idiv
div
sar
pop
mov
pop
pop
dec
ds
imul
bound
jbe
push
leave
mov
in
cli
mov
jecxz
jbe
sahf
jno
iret
enter
jmp
iret
js
pop
push
jae
dec
dec
mov
das
test
repz
test
and
mov
clc
push
ins
pop
jnp
(bad)
pop
es
xchg
mov
and
inc
dec
and
add
push
imul
xchg
adc
jae
mov
cli
xlat
and
xor
inc
mov
xchg
movs
cmps
icebp
sbb
lods
imul
sub
iret
add
or
aam
(bad)
jl
in
push
mov
std
dec
test
pop
mov
jl
int3
sub
mov
mov
not
sbb
mov
jmp
(bad)
xchg
add
sbb
push
mov
sti
mov
push
dec
enter
int3
inc
inc
xchg
loope
ret
pop
loopne
pop
call
mov
add
sbb
jno
enter
imul
fsubr
push
repz
outs
dec
jge
fcomp
xor
inc
jmp
scas
pop
mov
push
jo
aas
lea
jg
ins
adc
pop
add
bound
test
outs
and
push
repz
xchg
jecxz
or
lahf
and
(bad)
aas
sbb
mov
push
or
push
xor
lds
shl
xchg
movs
mov
sub
and
push
out
sub
movs
and
sti
adc
sbb
sbb
xor
xor
dec
add
test
mov
out
aaa
sbb
fild
sub
xor
jge
dec
fsubr
fsub
push
outs
dec
sub
cwde
cmp
xchg
in
loope
jb
mov
push
lods
fmul
cld
push
mov
fld
xor
mov
sub
adc
call
adc
imul
fwait
cli
xor
xchg
mov
iret
addr16
xchg
cdq
cwde
and
jecxz
fdivr
or
and
sub
mov
dec
loop
aas
add
mov
pop
inc
mov
dec
jg
push
test
or
lock
or
stc
out
out
sub
lods
sub
stos
dec
mov
pop
cld
mov
inc
sar
fisub
mov
jnp
jne
and
or
jb
adc
les
cmps
ins
addr16
rcl
repz
outs
jp
mov
add
push
add
sbb
pusha
inc
movs
cmps
adc
popf
cli
pop
sbb
call
repnz
out
push
in
lahf
sub
or
xchg
xchg
shr
xor
adc
es
loop
adc
mov
ret
mov
cmp
iret
cmp
pop
out
bound
add
(bad)
out
rcl
loope
mov
mov
movs
lea
cdq
xor
popa
test
(bad)
sahf
push
mov
xchg
or
retf
rcl
das
push
shr
jne
lods
(bad)
sahf
(bad)
mov
les
pusha
dec
and
sahf
loop
inc
push
jp
mov
add
jge
lds
sahf
cmp
and
pop
jns
outs
jnp
mov
or
leave
daa
xor
jge
rol
(bad)
pxor
or
cmps
adc
test
out
pusha
retf
jecxz
xchg
gs
fld
bound
imul
out
fdivr
push
push
mov
mov
loopne
push
ja
mov
ins
mov
xchg
outs
or
jno
je
test
fwait
stos
outs
jmp
sub
add
push
cdq
scas
push
out
push
and
push
retf
cmp
addr16
(bad)
jne
add
leave
dec
sahf
jmp
inc
pop
cwde
repnz
xchg
lea
mov
xlat
sub
sar
push
fidivr
jg
cmp
jae
or
fild
push
arpl
lock
dec
jnp
(bad)
xor
jg
adc
int3
xchg
push
cmp
adc
jno
out
movs
cld
mov
mov
adc
mov
gs
dec
stos
pop
xor
dec
(bad)
ficom
jbe
dec
pop
sbb
(bad)
shr
mov
xchg
mov
aaa
xchg
jne
and
jg
jmp
arpl
inc
retf
sbb
or
into
push
xor
ins
ror
mov
retf
push
push
lds
cmp
and
or
shl
mov
mov
imul
inc
sbb
jo
xor
retf
push
movhps
xchg
sahf
daa
popa
mov
dec
stc
aam
aad
movs
cmp
adc
or
jle
adc
scas
sub
and
inc
cmp
into
add
in
push
mov
xlat
pop
push
push
cmp
mov
sub
cmps
retf
mov
fcomp
mov
sub
call
jno
aaa
cmp
mov
cld
cmps
imul
inc
fsubr
and
rol
mov
dec
imul
sbb
push
push
mov
pop
(bad)
sub
fidiv
sub
bound
test
ja
sub
mov
inc
or
mov
jecxz
push
mov
out
pop
enter
mov
xchg
ret
fnsave
pop
ret
push
in
sbb
mov
mov
add
dec
xor
adc
pop
in
mov
xor
and
push
jnp
sub
mov
xchg
dec
clc
hlt
movs
xor
xor
nop
fmul
cmc
or
push
and
add
mov
aam
cli
ror
mov
das
ins
dec
(bad)
repz
int
sbb
out
test
(bad)
sti
jns
sub
in
mov
push
lds
ins
push
movs
push
test
cmps
mov
mov
aam
and
jne
(bad)
movs
fnstsw
in
cmp
pop
mov
or
mov
add
push
mov
sbb
cmc
xor
(bad)
mov
pop
xchg
adc
movs
mov
xchg
pop
push
xchg
popa
push
and
and
les
stos
or
dec
pop
add
inc
mov
gs
inc
xor
mov
mov
adc
jne
(bad)
adc
stc
cld
pop
mov
sbb
lock
xchg
xchg
sub
(bad)
movs
lds
adc
outs
sub
mov
sbb
jno
xchg
or
adc
in
and
les
retf
outs
je
push
in
stos
test
(bad)
cld
add
jg
or
movs
outs
stos
xchg
jb
ins
iret
sub
cld
aas
int
lahf
xchg
ret
cmps
outs
aas
sahf
mov
add
das
imul
pop
xchg
shl
js
sbb
add
fwait
test
jecxz
dec
out
xchg
push
inc
jmp
push
cmp
xchg
mov
fiadd
mov
lods
popf
pop
sub
jno
(bad)
and
mov
add
sub
ret
pop
xchg
test
mov
imul
test
inc
cli
in
ja
sbb
mov
xor
test
ror
fadd
popa
and
scas
lods
std
sbb
jae
or
sub
test
fbstp
js
(bad)
(bad)
xchg
jmp
push
mov
pusha
inc
xchg
clc
mov
jmp
xor
and
pop
jl
dec
aaa
data16
pop
sub
inc
push
dec
ror
(bad)
test
ret
sub
sub
push
xchg
adc
xchg
lock
and
ror
idiv
sbb
push
addr16
sbb
shl
sub
sahf
hlt
cmp
mov
and
icebp
jl
dec
jb
adc
lds
int3
xchg
push
sahf
or
mov
imul
aad
scas
fsubr
pop
or
or
pop
je
mov
pop
pusha
push
lods
retf
mov
jbe
inc
ss
inc
add
sub
sbb
inc
test
cmp
js
pop
dec
sub
fs
sbb
cmp
retf
pop
sbb
dec
sar
or
dec
daa
pushf
inc
leave
out
jle
cmp
pop
pushf
mov
sbb
inc
ins
pop
mov
mov
inc
jmp
xchg
fiadd
jne
sub
dec
fild
push
neg
xor
mov
mov
pop
sub
test
loope
sahf
push
pop
scas
pushf
xlat
lods
inc
inc
cdq
xor
mov
in
fisttp
pop
pop
in
out
cmp
jb
(bad)
mov
and
inc
fsubrp
mov
stos
add
sar
lock
data16
sub
call
sub
push
push
mov
mov
jmp
and
xchg
movs
mov
adc
loop
add
or
and
mov
aaa
inc
fdiv
xchg
mov
jp
icebp
xor
mov
mov
jle
mov
in
mov
popf
ficomp
mov
push
xchg
cmps
retf
mov
retf
push
xor
push
push
add
jne
dec
jmp
jg
into
jmp
pop
idiv
shr
pusha
mov
mov
ins
loopne
jne
dec
xor
mov
pop
cmp
(bad)
dec
stos
pop
and
fwait
iret
jle
loopne
hlt
enter
xlat
inc
in
sbb
mov
in
scas
outs
sub
jbe
sub
pop
and
ret
dec
and
lock
lds
mov
aaa
push
into
pop
clc
inc
xchg
jbe
loope
cli
(bad)
shr
outs
(bad)
push
jnp
push
ret
movs
enter
sbb
fbld
aam
cmps
pop
retf
in
jl
fdivr
aam
dec
xchg
lahf
in
push
clc
test
cmp
loop
dec
(bad)
loopne
in
not
adc
mov
fdiv
adc
xlat
test
add
mov
push
push
ret
jne
cwde
mov
enter
clc
lds
add
movs
push
xor
mov
xor
mov
add
mov
or
scas
jp
cmps
nop
ret
and
cdq
pushf
das
xchg
ja
ret
inc
push
dec
cld
icebp
push
xchg
aas
ja
cmp
popf
les
jb
mov
outs
and
scas
cmps
or
xchg
inc
scas
loop
push
inc
pop
shl
jge
fidivr
sbb
dec
aam
or
repz
and
or
jo
xor
out
sub
aad
mov
cmp
xchg
mov
aam
ficom
jb
or
mov
(bad)
dec
movs
hlt
sub
pop
mov
inc
(bad)
jle
mov
pushf
xor
push
xchg
mov
inc
mov
sub
enter
sbb
and
repnz
mov
enter
std
in
shr
cmp
stos
test
(bad)
adc
addr16
xchg
sbb
(bad)
mov
(bad)
mov
push
leave
aaa
clc
(bad)
jbe
adc
out
lahf
inc
popa
(bad)
dec
stos
push
(bad)
ficom
lods
pop
into
jae
push
dec
mov
pop
inc
push
repz
data16
cmp
clc
jp
jecxz
fidiv
fistp
push
mov
(bad)
or
inc
lds
sub
jecxz
cmp
add
sahf
xchg
and
stos
rol
xor
pop
cs
sub
dec
loope
mov
mov
out
fwait
cmp
fldenv
jge
lahf
and
inc
pop
arpl
aad
dec
inc
loop
or
jmp
mov
inc
pop
cmps
add
scas
mov
push
xchg
push
mov
jl
push
out
hlt
ss
cmp
data16
in
mov
movs
aaa
lea
pop
imul
cs
fmul
lds
cmp
ret
add
outs
test
pop
cmp
dec
mov
ja
leave
cdq
in
lds
xor
fdivr
ja
fwait
repz
jmp
jl
add
xchg
jbe
outs
fmul
mov
(bad)
retf
push
inc
adc
sbb
jmp
(bad)
push
test
call
mov
xchg
mov
jbe
mov
push
call
xor
js
xor
lahf
and
sar
push
xor
mov
sbb
outs
mov
push
dec
add
cmp
and
cmp
outs
jl
fsubr
add
mov
cld
inc
pop
test
stos
out
test
mov
sbb
imul
jge
jno
mov
mov
lods
adc
ds
mov
cmp
popa
and
push
mov
cmps
pop
in
mov
sbb
adc
mov
mov
stos
cmovp
movs
xor
(bad)
stc
and
ins
imul
adc
pop
stos
add
lea
xchg
add
push
ins
xchg
popf
pop
pushf
das
leave
es
adc
ins
jge
repnz
jle
jne
or
jecxz
mov
ss
stos
cmp
call
fwait
(bad)
pop
lods
outs
cwde
dec
ficomp
xchg
mov
dec
mov
pop
in
addr16
mov
sub
pop
jo
xor
mov
retf
loope
cmps
fisubr
xchg
lea
sti
ret
in
shr
jbe
aaa
das
xchg
call
test
sub
xchg
mov
shl
fsubrp
call
(bad)
(bad)
or
imul
ret
test
aad
repnz
stos
mov
inc
fisub
cmp
fsubr
or
jmp
jp
adc
lods
mov
push
adc
leave
mov
clc
js
(bad)
mov
mov
adc
jmp
rcl
imul
push
jne
sbb
sub
ret
or
hlt
xchg
out
xor
xor
push
outs
add
add
xchg
ins
fwait
mov
fnstcw
ins
mov
mov
inc
vmovaps
add
pop
sub
ds
sahf
cmp
dec
jbe
cmps
ins
iret
dec
adc
jl
imul
stos
(bad)
(bad)
ds
call
enter
jle
xchg
aaa
jg
or
pop
mov
ficom
lds
ds
xor
stos
in
xchg
push
test
dec
fwait
popa
fs
rcl
(bad)
adc
xor
dec
mov
and
inc
sti
sub
cmp
jo
stos
movs
pop
push
pop
add
sub
mov
test
test
nop
lahf
mov
push
or
outs
sbb
clc
test
xor
shl
mov
fadd
fcomp
pop
jge
div
clc
pusha
cld
inc
xchg
imul
movs
repz
push
inc
push
ins
or
call
jmp
inc
push
sbb
push
mov
(bad)
sbb
out
lahf
popa
add
push
es
push
push
jmp
sbb
outs
xchg
mov
or
loop
rol
adc
mov
retf
fwait
cwde
(bad)
pop
call
sbb
pop
xor
inc
loop
fcomp
xchg
mov
adc
and
or
mov
xchg
cmp
pop
ret
pop
sub
in
mov
mov
sub
sub
inc
cmp
mov
cmp
xlat
jo
in
fndisi(8087
(bad)
sbb
lock
lock
mov
mov
leave
shl
(bad)
ss
jl
les
lods
mov
int
test
push
mov
rol
imul
(bad)
adc
std
rcl
mov
push
test
mov
cmc
(bad)
xor
mov
pop
sbb
mov
popf
or
sar
fisttp
mov
les
cmp
jecxz
mov
mov
in
jmp
cmp
jle
and
mov
stc
lahf
jnp
sub
xor
inc
xor
sub
imul
call
retf
sub
pop
ins
and
inc
pop
add
icebp
call
jge
sysret
js
pop
adc
loope
sbb
xchg
addr16
ins
aad
push
jmp
mov
mov
rcr
stos
out
mov
adc
xor
test
nop
adc
jmp
mov
movs
mov
dec
inc
cdq
jne
mov
mov
out
rcl
xchg
dec
push
pause
add
mov
sbb
jne
imul
(bad)
(bad)
xchg
mov
jne
mov
cli
dec
retf
push
mov
(bad)
jecxz
in
mov
mov
jecxz
call
mov
fcom
push
cmp
je
push
jmp
ror
outs
xchg
inc
xchg
popa
imul
push
fsubr
lahf
fbld
add
push
(bad)
dec
or
(bad)
mov
xchg
data16
shl
add
jmp
iret
mov
push
stc
mov
cmps
lods
arpl
xor
add
adc
sbb
mov
mov
xlat
dec
fldenv
or
or
or
daa
jp
outs
std
and
frstor
mov
mov
mul
sbb
mov
aas
out
cs
push
mov
jg
in
sbb
inc
leave
xchg
xchg
call
inc
mov
idiv
inc
(bad)
nop
jo
jb
icebp
jne
scas
xchg
arpl
out
cmp
dec
add
mov
pop
sbb
or
fnclex
cli
jae
jg
or
and
inc
xchg
fwait
lock
adc
scas
add
jmp
jmp
dec
mov
mov
adc
out
ret
cld
fdiv
dec
gs
fisubr
stos
adc
(bad)
pop
push
cmp
mov
(bad)
test
and
add
dec
push
push
sub
add
adc
outs
shl
pop
fs
cmp
(bad)
cmp
cmp
pop
mov
call
xlat
mov
fstp
js
test
inc
sbb
test
push
inc
mov
imul
loop
shl
mov
loope
push
cmp
push
test
sub
cmp
ret
adc
test
push
sti
mov
test
ins
pop
popf
cmps
ins
fdiv
cmp
and
repz
ror
imul
arpl
sar
xor
mov
ins
cwde
mov
push
jno
ffreep
scas
push
popf
inc
mov
daa
fsub
mov
adc
push
vpaddsw
jle
adc
dec
mov
mov
adc
mov
fs
pop
pushf
test
ret
movs
xor
(bad)
cmp
mov
xchg
popf
out
inc
clc
and
push
mov
jmp
jl
push
inc
cmc
pop
push
and
push
mov
mov
std
test
xor
xchg
mov
mov
sahf
sbb
imul
in
mov
sbb
dec
ret
dec
(bad)
dec
mov
(bad)
gs
movs
xchg
mov
push
out
fimul
push
aaa
sti
mov
ins
and
jne
add
inc
jg
cmp
pop
mov
in
xor
jae
sub
lahf
retf
ret
push
fld
sbb
cs
fcom
push
jge
fucomip
mov
cmc
add
aas
gs
pop
dec
pop
and
sbb
call
outs
bound
sub
retf
jns
clc
xor
jl
gs
cwde
cmp
jecxz
xlat
mov
clc
es
mov
jns
jmp
mov
jg
xor
cld
inc
retf
call
or
repz
or
rol
add
test
fidivr
inc
adc
adc
jp
test
inc
xchg
sti
pop
mov
lea
outs
mov
mov
fwait
push
mov
imul
cs
pop
xchg
sahf
sbb
push
pop
ss
pop
es
xchg
add
in
adc
retf
fwait
aaa
mov
push
popa
mov
clc
xchg
jg
mov
repz
sub
pop
repnz
add
push
and
repnz
cmp
mov
mov
retf
mov
out
lahf
cmps
icebp
adc
js
neg
cmps
xsha1
cmps
dec
hlt
add
jl
inc
or
aad
dec
sahf
jnp
xchg
leave
in
jmp
xchg
xchg
nop
fdivr
or
jl
pop
push
lods
aaa
add
iret
into
jne
int
cs
jmp
inc
ss
or
and
sbb
outs
ret
out
int
push
add
add
jle
mov
mov
sbb
(bad)
and
in
retf
xor
stc
xlat
push
and
pop
push
repnz
test
cmp
jg
jmp
jno
and
sub
mov
sub
dec
test
xor
push
enter
aam
mov
stos
scas
inc
int3
out
retf
xor
inc
aas
call
out
(bad)
sbb
sbb
sub
or
cmps
xchg
retf
jb
call
arpl
repz
mov
inc
out
xchg
ja
(bad)
(bad)
std
xor
int3
stc
int
fld
and
or
mov
sub
iret
push
popa
cmp
jno
mov
repnz
push
out
int
pop
cs
rcl
push
call
in
leave
repz
sbb
retf
cdq
sub
adc
sub
mov
sub
xchg
sbb
test
inc
out
stos
rol
jmp
xor
test
jmp
fs
mov
sub
loop
fwait
adc
add
mov
add
rcl
test
icebp
fwait
adc
or
add
sahf
loope
fnstcw
fisttp
mov
retf
mov
cli
and
mov
test
out
mov
pop
sub
add
xor
repz
bound
mov
add
xchg
ret
inc
dec
cmp
ja
adc
cdq
dec
ficomp
jbe
jle
loope
(bad)
xchg
gs
push
scas
mov
in
dec
jge
test
inc
imul
pop
add
mov
sub
mov
and
int
push
mov
add
enter
adc
loop
cdq
xchg
jnp
mov
out
add
xchg
das
cmp
xchg
pop
iret
mov
push
xor
imul
dec
(bad)
je
mov
mov
adc
mov
and
xchg
cmp
and
in
cmp
test
in
ret
leave
loopne
repz
push
repnz
inc
xor
adc
cwde
fmul
inc
inc
sub
inc
mov
popf
cwde
jmp
es
push
ret
push
cdq
shr
gs
sbb
aas
and
adc
(bad)
cli
ins
xchg
cmps
pop
out
retf
call
and
or
xchg
leave
pop
not
push
sbb
and
sub
pop
pop
adc
mov
nop
push
cmp
into
fadd
jge
jbe
push
cmp
mov
ss
popa
pop
(bad)
mov
inc
mov
and
jnp
lock
pop
push
pop
mov
push
shl
pop
add
test
mov
xlat
jno
xchg
dec
daa
jae
(bad)
enter
nop
mov
xchg
xchg
dec
shl
inc
pop
xchg
sub
repnz
and
ret
lahf
mov
jnp
retf
scas
sub
or
dec
lock
movs
dec
adc
xor
xchg
mov
in
sti
add
push
aam
cs
int
xchg
scas
aas
push
fnstsw
pop
inc
inc
or
inc
int3
out
rol
into
push
es
dec
rol
pop
movs
cli
or
adc
fist
out
out
cs
enter
scas
mov
mov
out
pop
push
dec
aas
and
xchg
icebp
inc
adc
cli
mov
or
hlt
bound
fsub
xchg
int3
rol
sub
mov
movups
adc
mov
cmp
inc
neg
sub
addr16
in
pop
mov
pop
adc
loopne
popf
fmul
and
push
lock
sbb
xchg
test
push
push
push
add
js
sti
in
adc
lods
xlat
xchg
pop
xor
push
retf
ins
jns
movs
rol
outs
(bad)
idiv
adc
push
cmp
ficom
in
push
movs
in
and
add
xchg
mov
ficom
sahf
fld
ds
(bad)
sub
call
xor
aas
lahf
movs
fiadd
inc
cmps
paddq
fcmovbe
hlt
jmp
mov
xor
inc
dec
dec
add
jb
mov
fidivr
xchg
jns
fs
scas
xor
clc
push
dec
adc
int
fmul
scas
in
add
aad
cmp
test
and
ja
mov
(bad)
adc
jmp
push
mov
jp
cmc
pop
clc
mov
cmc
cmp
cmp
sub
and
or
mov
sar
jbe
dec
retf
fist
ret
push
rcl
lods
mov
iret
jecxz
cdq
cld
int3
and
pop
stos
and
cmp
dec
in
cs
mov
xor
icebp
call
ds
push
mov
sbb
inc
(bad)
in
pop
cmp
push
xor
mov
nop
lods
cmp
xor
ins
xchg
xchg
mov
push
inc
add
sub
jb
ret
cwde
fstp
sbb
repnz
in
fcmovu
hlt
ins
test
inc
push
xchg
fdiv
mov
out
out
rcl
mov
aaa
push
lock
out
dec
lods
dec
inc
jg
out
movs
or
(bad)
xor
inc
sub
and
jne
shl
cmps
xor
or
fidivr
mov
or
stc
mov
mov
mov
outs
jae
pop
pop
cmps
inc
mov
mov
stc
jbe
push
outs
lock
add
mov
dec
dec
int3
daa
out
mov
or
xor
sbb
out
push
sbb
sub
test
dec
push
xor
into
ins
std
aaa
aaa
in
(bad)
cmp
inc
inc
stos
outs
dec
in
test
das
(bad)
mov
cmp
loope
push
xchg
mov
adc
mov
xlat
repnz
ins
add
or
sub
pop
mov
cld
out
mov
fsub
gs
ret
sbb
xor
sub
xchg
sbb
cmp
xor
sub
jae
pop
outs
sbb
adc
mov
pop
loope
mov
fcomip
aas
arpl
rcr
std
dec
adc
and
inc
ficom
les
aaa
adc
push
sbb
mov
mov
jae
mov
lea
and
gs
xor
rcr
jno
enter
js
sbb
in
pop
pop
xor
sar
outs
bound
stc
inc
and
ret
mov
ja
jae
add
xchg
repz
arpl
jmp
in
call
sti
imul
ds
sbb
test
and
pop
adc
push
mov
scas
(bad)
cmps
cmps
adc
iret
pop
add
jp
test
bound
in
je
bound
aam
repz
cmp
and
das
pop
push
imul
in
xchg
sub
jo
sbb
adc
cmps
test
mov
fadd
fld
xor
popa
jle
shl
retf
pushf
mov
rcl
ja
mov
cmp
into
inc
jns
movaps
pop
loopne
sbb
in
cwde
dec
hlt
fstp
jle
aas
(bad)
(bad)
jns
aaa
cmps
mov
lock
popa
scas
fiadd
pop
test
xor
gs
mov
pop
xchg
inc
cmp
jb
rcr
clc
fild
and
mov
add
pop
imul
(bad)
mov
cmp
(bad)
mov
in
sub
fstp
ins
pop
daa
call
cmp
inc
inc
add
inc
jo
test
pop
(bad)
hlt
adc
loopne
(bad)
cmp
call
xor
adc
pop
movs
xchg
mov
cld
(bad)
xchg
xor
adc
(bad)
cmps
sub
pop
pop
jne
dec
pop
test
(bad)
je
cmp
nop
out
(bad)
mov
pushf
mov
or
dec
xor
xlat
jo
call
add
jns
bound
xchg
or
data16
push
sti
mov
xchg
jne
shl
and
mov
sub
jnp
ds
dec
shl
call
int
inc
(bad)
jp
cld
jmp
mov
jg
mov
jg
(bad)
xchg
inc
fimul
push
jmp
or
or
loope
push
scas
arpl
clc
(bad)
jl
ret
cmp
ds
test
lods
and
mov
ss
mov
popf
test
mov
jp
icebp
out
push
div
mov
fwait
fwait
xchg
aaa
not
imul
mov
push
stos
cmp
push
ja
inc
pop
test
or
jnp
imul
add
mov
push
loope
in
fs
xor
or
xlat
nop
daa
bound
mov
hlt
mov
jno
call
mov
pushf
mov
jb
mov
and
add
(bad)
cmp
dec
adc
fisubr
stos
in
mov
and
xor
mov
lods
sub
clc
xchg
fnstcw
(bad)
imul
jmp
adc
or
cdq
(bad)
test
lahf
xchg
out
adc
sahf
ins
jno
js
aad
mov
sbb
in
pop
imul
loop
mov
ror
push
loop
ss
retf
je
jmp
push
jge
addr16
jb
movs
cmp
dec
sub
arpl
pop
fadd
popa
popf
ss
xor
lea
daa
sar
push
jns
adc
cmp
cmp
cmps
retf
xchg
mov
cmc
test
sbb
pop
pop
loopne
mov
lods
dec
int
sbb
stos
adc
mov
lahf
cmp
and
into
mov
pop
dec
test
and
dec
xor
dec
mov
(bad)
sub
mov
mov
mov
inc
xchg
jno
movs
pop
cmp
pop
sar
xor
mov
std
adc
cmp
and
test
not
xor
sti
not
fidivr
iret
or
cmps
and
sub
ret
xchg
sahf
or
add
xchg
mov
or
cmc
pusha
add
das
push
dec
jbe
movs
jmp
sbb
popa
xchg
ds
dec
push
ret
xchg
sub
das
imul
ficomp
clc
push
mov
mov
inc
aam
jg
cmp
jo
xor
mul
lods
je
dec
and
test
xlat
jge
test
mov
pop
mov
(bad)
push
xor
sbb
cld
xchg
cmps
out
inc
ins
sbb
mov
add
hlt
loopne
xor
pop
sub
and
mov
xchg
jl
iret
push
push
loope
into
jle
in
xchg
cmps
fnstenv
xchg
xlat
repnz
dec
jl
popf
push
cmp
xor
ins
ror
push
rcr
sbb
setb
out
mov
icebp
xchg
jge
adc
aam
xchg
inc
fidiv
aad
cmc
mov
aaa
xchg
dec
mov
in
fcom
in
pop
sbb
push
jmp
xchg
mov
aad
jl
out
stos
add
mov
popa
repz
mov
dec
call
cmp
fidivr
fmul
xor
adc
add
push
xchg
stc
push
sbb
jns
(bad)
adc
pushf
cs
rcr
sbb
sbb
mov
cmp
repz
sub
test
inc
mov
dec
loopne
sub
shl
inc
fcomp
fst
mov
out
add
xchg
bound
shl
popa
fld
call
dec
mov
adc
adc
adc
push
adc
cdq
icebp
dec
dec
shl
mov
add
test
jbe
int
fimul
sub
daa
(bad)
std
dec
cmp
ret
mov
sbb
retf
stos
xchg
clc
xor
sbb
mov
sbb
adc
lock
cdq
fiadd
xor
or
popa
call
push
push
mov
add
inc
push
cld
shr
mov
mov
aad
jmp
test
sar
jno
xchg
pop
iret
aad
push
jg
icebp
pop
rcl
aam
mov
call
inc
pop
jg
jmp
retf
sbb
movs
or
scas
and
sbb
jmp
pop
jl
mov
inc
jp
sub
call
sahf
in
push
into
push
in
mul
aaa
push
sbb
stos
push
ins
mov
nop
mov
fild
push
popa
mov
mov
out
mov
cmp
inc
ss
daa
(bad)
and
das
cmp
or
dec
sbb
mov
test
repnz
xor
(bad)
mov
int
int
cmc
cmp
mul
jp
xchg
ja
out
or
imul
jns
in
sti
loopne
dec
add
pushf
or
sub
and
pop
push
outs
or
xchg
jne
gs
aad
mov
push
xchg
lea
adc
test
push
pop
add
sar
sbb
in
xchg
imul
imul
and
stc
test
out
scas
sbb
out
popf
mov
mov
hlt
adc
sub
xchg
push
push
movs
dec
mov
mov
sbb
dec
icebp
push
push
std
aam
add
retf
sbb
popa
sbb
push
add
pop
inc
addr16
jae
xor
dec
and
cmps
pushf
pop
mov
push
mov
daa
fdivrp
inc
lock
(bad)
iret
imul
pop
call
std
cmp
mov
sbb
jp
mov
xchg
js
leave
jbe
cmp
ins
icebp
pop
xchg
lods
pop
mov
int
cs
imul
(bad)
sub
cmp
push
pop
xchg
fidiv
shr
ror
pop
cmp
pop
xor
sub
mov
jecxz
imul
cmc
addr16
sub
add
idiv
aad
arpl
lahf
push
adc
adc
leave
adc
daa
cs
xchg
jb
add
adc
cmps
(bad)
fnstsw
mov
iret
or
mov
mov
pop
xor
mov
sub
sti
xchg
mov
std
fidiv
cmp
mov
mov
pop
cmps
adc
retf
(bad)
cmp
pop
dec
fnstenv
cmp
xor
pop
mov
shl
adc
xchg
mov
mov
pop
je
sahf
mov
mov
push
cmp
push
push
cmp
cmc
enter
or
jb
jp
ins
xor
mov
mov
scas
(bad)
les
sub
jp
movs
mov
mov
mov
loop
inc
dec
fistp
xchg
fxch
cmp
vmovntps
mov
mov
int
push
jmp
outs
jl
cld
push
sti
jae
clc
push
cmp
in
mov
mov
inc
mov
in
scas
cmps
jnp
cld
mov
push
fcom
pop
push
nop
jae
mov
jecxz
sub
fnstsw
clc
sti
sbb
dec
mov
lahf
cmp
(bad)
stc
and
mov
cmp
adc
das
dec
pop
dec
(bad)
out
ficom
cmp
mov
neg
cmc
das
cdq
ins
and
(bad)
xor
int3
mov
ins
mov
ins
jecxz
cmp
lods
stos
mov
cmp
pop
xchg
cmps
jnp
enter
call
cmp
xor
or
mov
test
aaa
lock
stos
lea
scas
xor
cmps
aaa
fnstsw
mov
jle
inc
mov
(bad)
cmp
(bad)
(bad)
ins
or
call
add
in
imul
inc
dec
ror
test
mov
pop
in
test
and
ins
je
pop
pop
clc
imul
js
jecxz
jo
(bad)
repnz
mov
nop
jmp
pop
fdiv
push
ror
shl
xor
repz
push
call
aad
(bad)
mov
adc
mov
and
int
shr
jle
xor
rcl
pushf
or
out
ds
gs
clc
dec
dec
fdiv
data16
sar
sbb
jmp
mov
imul
aam
notrack
jmp
ins
out
test
mov
movd
push
xchg
mov
xlat
sbb
fild
or
retw
adc
lds
sti
data16
add
xor
into
pop
jns
dec
ret
in
jne
pop
call
test
add
mov
imul
ret
lahf
ins
jge
add
sub
(bad)
pop
sbb
push
mov
xor
inc
mov
dec
add
int3
pop
test
sahf
mov
fstp
mov
call
leave
add
adc
push
in
test
imul
sbb
movs
imul
mov
enter
inc
in
in
push
jmp
dec
adc
adc
cmps
sahf
int3
scas
lods
mov
enter
lods
push
cmp
sbb
xor
popf
sub
cmp
and
jl
and
jmp
cmp
(bad)
fsubr
mov
xor
shl
call
mov
ins
dec
cmp
sbb
jne
mov
sub
sbb
sub
inc
out
sahf
or
mov
jbe
jb
popf
mov
fldcw
(bad)
dec
mov
enter
push
pop
outs
jp
fst
jecxz
and
xor
pop
movs
mov
xor
cmp
cmps
(bad)
push
xlat
(bad)
bnd
xchg
push
pusha
lock
mov
xor
ficomp
aad
stos
rcl
ins
sub
jle
popw
js
stos
xchg
je
pushf
cwde
stos
movs
std
out
pop
xchg
leave
sbb
outs
dec
xchg
push
aad
push
test
je
out
(bad)
cmp
test
mov
sub
in
(bad)
pop
mov
or
mov
vmread
mov
and
imul
sbb
adc
cs
xchg
out
mov
xchg
cs
movs
popf
aam
mov
lock
pop
pushf
rcr
fdivr
push
sub
stos
into
adc
push
mov
loopne
pusha
fwait
adc
pop
clc
out
sub
dec
aaa
lahf
fist
stos
xlat
pop
pusha
hlt
vucomisd
sbb
test
or
mov
jp
push
and
lea
loop
lock
gs
adc
arpl
or
scas
xchg
cmps
out
neg
jl
cmp
pop
leave
mov
enter
pop
add
stc
push
mov
xchg
mov
in
push
or
loope
mov
in
pop
mov
inc
adc
xchg
push
adc
push
mov
retf
or
pop
and
mov
push
jb
xor
fsubr
cmc
jne
add
add
pop
xchg
fidivr
loop
in
adc
pop
fbstp
shl
cmp
inc
or
rol
les
push
mov
aam
jle
fldenv
mov
push
jo
jecxz
pop
or
retf
xchg
jmp
movs
int
icebp
lock
cs
or
and
fcmovbe
mov
or
jmp
pushf
out
sti
jge
add
mov
cmp
mov
add
popf
push
data16
pop
movups
sub
jmp
dec
sub
mov
jle
test
and
pop
adc
adc
sub
push
xchg
ror
sar
or
mov
ja
mov
sbb
xchg
jg
js
clc
mov
movs
mov
cmp
addr16
fldcw
int3
jno
jl
mov
and
inc
stos
ins
sbb
or
push
addr16
fld
lods
mov
mov
ror
sbb
adc
adc
jo
inc
adc
mov
int
jnp
adc
sbb
mov
popw
adc
sub
shl
arpl
das
call
push
push
pop
mov
xor
and
in
push
sub
ss
je
cmp
(bad)
out
inc
xchg
ja
fmul
dec
inc
call
out
ret
add
int
test
ds
mov
push
idiv
imul
mov
not
mov
je
or
xchg
pop
ss
gs
ret
mov
mov
mov
xchg
inc
ror
jge
jge
jae
jge
sub
dec
push
xchg
movs
outs
pop
cwde
inc
sbb
in
(bad)
div
sub
push
mov
lea
lods
aam
(bad)
and
mov
xchg
je
shl
call
(bad)
lods
stos
in
push
lods
popa
movs
cdq
push
(bad)
mul
sub
push
cmc
xor
and
shr
clc
cwde
add
cld
in
not
cld
mov
or
mov
fmul
cwde
repnz
adc
jnp
and
packuswb
ror
add
out
fidiv
(bad)
das
pop
jb
and
mov
mov
(bad)
outs
or
push
ds
sub
das
dec
mov
movs
push
in
xlat
mov
fmul
sbb
sbb
in
shl
jns
int
fistp
int3
and
popf
int3
test
push
adc
xchg
xor
add
mov
inc
aam
xchg
arpl
movs
into
je
xchg
cli
mov
inc
push
(bad)
loopne
retf
imul
inc
mov
jbe
jbe
jl
mov
imul
fsubr
std
fwait
jmp
dec
push
imul
dec
call
cmps
popf
and
mov
cli
test
out
pop
jg
repnz
ret
xchg
mov
aad
shl
cmp
mov
mov
pop
xlat
fwait
cmp
mov
scas
aas
fsub
push
test
pop
nop
xor
sbb
pusha
cdq
into
push
ret
cwde
jg
dec
xor
mov
cmp
mov
adc
stc
clc
fsub
enter
push
xor
or
scas
dec
(bad)
movs
add
fucomi
push
mov
sbb
in
aad
sub
xchg
cmp
jns
icebp
dec
xchg
jb
loop
es
push
rep
(bad)
aad
cld
in
and
cmp
xor
xchg
pop
mov
(bad)
jmp
dec
xor
loope
dec
dec
xchg
pop
rcr
das
rcl
jle
aas
sub
pushf
mov
leave
pop
ja
imul
test
ins
fwait
movs
pop
lods
adc
loopne
stc
adc
fwait
push
mov
popa
sub
clc
test
sub
mov
out
mov
sub
(bad)
dec
popf
aas
ret
jne
and
retf
lods
popa
or
push
test
into
mov
jge
dec
dec
pushf
jmp
inc
push
ins
or
movs
adc
retf
aam
mov
jp
cdq
int
mov
mov
ss
jmp
outs
scas
repnz
dec
inc
add
jge
cmp
data16
call
xor
test
push
sbb
jle
lock
(bad)
fld
fwait
jp
inc
mov
mov
cmp
dec
out
inc
or
ss
or
shr
sbb
or
push
jl
adc
cwde
adc
xor
mov
mov
push
push
ficomp
mov
sub
dec
jnp
hlt
or
je
adc
push
popf
push
dec
shl
push
sahf
ja
nop
les
gs
rcr
adc
xchg
jg
fst
adc
mov
pop
mov
cmp
or
xor
jg
(bad)
lea
push
inc
xchg
imul
mov
or
rol
ins
sub
in
mov
and
sbb
xchg
push
pop
pushf
(bad)
mov
mov
frstor
stos
pusha
je
outs
cs
mov
adc
popf
fst
mov
sbb
popf
adc
bound
in
daa
out
xchg
cmp
cs
scas
add
jge
adc
and
mov
fimul
push
outs
mov
loope
aas
pop
push
outs
inc
xor
gs
fdivr
in
cwde
mov
inc
pop
sub
ss
cwde
pop
ja
pop
test
retf
mov
sti
push
movzx
xor
clc
pop
add
arpl
pushf
test
shl
loopne
out
adc
sbb
fld
mov
sbb
int3
lahf
add
pop
lea
mov
sub
mov
adc
mov
xchg
pop
pop
cmp
pop
(bad)
adc
enter
dec
dec
repz
ss
mov
jmp
add
repnz
sub
out
pop
inc
mov
inc
popf
aam
push
push
(bad)
(bad)
or
jge
xchg
inc
std
push
out
sub
and
push
xor
arpl
push
lea
jle
shl
push
sub
jne
mov
(bad)
mov
xchg
sbb
ja
add
pxor
dec
xor
pop
sbb
ffreep
(bad)
jp
mov
pop
lods
sbb
rcr
ins
enter
mov
or
or
mov
push
push
sti
inc
call
jb
loop
(bad)
es
mov
jmp
cmc
mov
into
xor
mov
jle
adc
jo
pop
push
and
inc
mov
test
pop
fbld
jae
xchg
or
scas
movs
push
sub
pop
test
push
adc
or
test
fucomp
xor
or
xchg
je
test
iret
imul
int3
inc
and
mov
ret
cmp
sub
push
icebp
mov
jecxz
inc
and
adc
lock
sbb
sub
mov
xchg
inc
loopne
fcomp
(bad)
call
retf
cmp
pop
jge
inc
cli
and
idiv
push
xchg
pop
inc
sub
scas
adc
minps
push
cli
lahf
pop
es
pop
sbb
push
add
sbb
push
add
adc
out
jp
jne
dec
sub
enter
add
jl
xor
sub
pop
inc
lods
popa
pop
pmaxub
leave
stos
mov
xor
jl
icebp
inc
ret
ds
bound
popf
cmp
repz
cmc
ret
fmul
call
add
or
inc
lahf
push
shr
outs
xor
lock
pop
jecxz
das
fidivr
addr16
sub
mov
mov
jle
inc
cmp
xchg
and
add
icebp
rcr
pushf
add
sbb
test
daa
into
inc
push
fld
ds
pop
mov
ror
out
pop
inc
sbb
fs
popa
fs
cmp
push
lods
mov
mov
test
in
cmp
mov
or
push
push
push
out
push
es
dec
scas
inc
sbb
push
frstor
sar
(bad)
fst
xrelease
mov
xor
or
(bad)
sbb
fstp
sbb
adc
mov
and
pop
mov
retf
ins
sahf
mov
push
ss
cmp
cli
test
addr16
and
fwait
(bad)
mov
mov
(bad)
and
lods
or
push
and
mov
mov
jne
mov
mov
and
ret
or
dec
lock
fbld
mov
iret
mov
sbb
not
test
pusha
dec
sbb
and
retf
pop
rol
scas
mov
pop
fidivr
mov
xor
or
or
inc
ror
and
sahf
push
mov
(bad)
pmullw
retf
js
inc
div
push
xchg
pextrw
fs
gs
lock
cmp
out
pop
(bad)
xlat
pop
or
in
dec
dec
jno
iret
imul
or
mov
pushf
mov
jno
(bad)
fucomip
cwde
in
les
ds
test
retf
inc
push
push
jge
lods
test
fild
pop
and
mov
fist
retf
pop
test
mov
retf
jmp
sbb
(bad)
movs
es
inc
ret
inc
arpl
fwait
push
add
mov
pusha
xchg
xchg
mov
std
(bad)
std
sub
sub
dec
gs
cld
fdiv
mov
jle
shl
sub
mov
test
inc
xchg
jmp
aad
sti
movs
lahf
dec
icebp
fstp
lods
and
movs
xchg
inc
xchg
icebp
rcl
(bad)
dec
and
out
inc
arpl
imul
cmps
cmp
je
stos
sbb
int
jmp
js
mov
pmulhuw
xlat
adc
mov
cmp
mov
paddusw
lock
ds
pop
cs
push
jb
cli
sub
out
in
cmp
minps
jns
mov
in
(bad)
adc
inc
sub
addr16
mul
popf
(bad)
add
hlt
loop
xor
out
push
add
dec
sub
push
hlt
popa
or
test
jle
and
(bad)
sub
(bad)
mov
cmc
popf
inc
nop
cs
add
push
(bad)
jg
sub
cmp
lock
push
mov
add
push
and
loop
xchg
sar
mov
scas
ret
popf
mov
push
sbb
movs
mov
inc
xor
arpl
int
push
mov
push
or
scas
js
xchg
fs
push
xor
push
int
push
in
xor
mov
outs
ds
inc
xor
leave
sub
mov
and
xor
inc
popf
dec
pop
jbe
pop
cmp
in
fld
scas
outs
xchg
jmp
adc
mov
aam
popf
sub
mov
cmp
loope
add
sbb
xchg
sub
les
mov
and
mov
adc
and
pop
mov
push
aas
push
mov
outs
dec
sbb
inc
iret
(bad)
adc
jp
cs
stos
mov
ins
mov
adc
mov
push
imul
sbb
sub
and
or
add
imul
push
and
cli
or
xchg
mov
sti
mov
jg
aaa
dec
pop
ror
fisttp
cmp
sbb
mov
lods
ins
jb
jae
arpl
loop
test
push
cmp
push
sbb
inc
mov
jb
push
inc
or
ret
push
mov
xchg
das
retf
stos
ret
mov
aam
(bad)
lock
push
mov
pop
(bad)
jmp
ret
push
or
test
enter
cli
mov
pop
mov
jbe
cmp
cwde
mov
pushf
adc
cwde
add
(bad)
(bad)
popa
icebp
aad
inc
shl
test
inc
mov
(bad)
and
repz
or
imul
enter
inc
clc
push
adc
add
jg
mov
add
data16
sbb
adc
lahf
out
aaa
nop
push
sbb
jnp
mov
xor
xchg
ret
jno
and
jno
daa
fistp
cmp
in
mov
mov
dec
dec
pop
inc
jle
aas
std
cmp
popf
fdiv
movs
rcr
aad
mov
imul
cwde
addr16
cmc
not
scas
mov
mov
push
pop
stos
js
push
in
and
push
xchg
cmp
loop
and
imul
(bad)
retf
xchg
jo
xchg
sar
push
call
adc
shl
inc
fcmove
inc
mul
in
inc
mov
xchg
daa
lea
and
jl
(bad)
dec
test
imul
inc
sub
fcmovnbe
adc
push
pop
fist
mov
ja
je
push
xor
xchg
inc
jbe
pop
push
xchg
adc
push
fisttp
jno
fbstp
int
nop
add
fcom
dec
inc
push
aam
and
mov
jns
jmp
lea
jmp
pop
out
pop
pop
ja
fucomi
mov
push
xlat
add
mov
inc
jmp
les
jle
mov
pop
lods
and
out
push
cwde
cmps
jg
dec
(bad)
scas
add
das
mov
rol
in
add
cmp
pop
sub
push
mov
sub
or
fnstcw
lods
push
not
out
mov
push
mov
jle
mov
adc
fdiv
outs
push
int3
test
adc
lahf
pop
dec
ret
std
dec
jle
jbe
mov
push
pop
add
push
jp
retf
data16
mov
cmp
ja
popa
mov
mov
cmp
retf
pop
scas
dec
add
push
jecxz
sbb
fidiv
mov
sbb
and
retf
fsub
retf
or
das
shl
aam
mov
sub
xor
enter
adc
iret
sub
outs
out
cmp
aaa
ret
in
hlt
xchg
out
mov
(bad)
sar
dec
mov
dec
add
std
jo
pop
mov
jo
sbb
ja
movs
shl
sti
xchg
push
in
sub
movs
(bad)
ja
inc
cld
pop
jae
adc
sub
dec
and
dec
cli
cmp
add
test
adc
xchg
xchg
pop
ret
repnz
sub
test
xor
or
movs
shl
movs
cmp
nop
mov
out
push
xchg
stc
enter
cld
cld
jmp
and
into
jl
(bad)
mov
lds
adc
dec
jae
ficom
retf
add
mov
mov
sbb
out
ret
sub
(bad)
pop
cwde
push
add
pushf
sub
mov
pcmpeqw
in
jmp
sbb
pop
sbb
and
mov
mov
mov
lods
inc
or
shl
or
cmp
fmul
fisub
dec
push
adc
icebp
mov
add
in
xchg
sub
mov
in
out
cli
icebp
mov
mov
and
jmp
stos
repz
rcl
add
mov
out
iret
xor
mov
cs
lods
push
mov
add
ficom
int
nop
test
sbb
arpl
jl
xor
lock
jg
adc
jl
aaa
in
std
sbb
fnstsw
lea
call
and
mov
and
adc
scas
mov
mov
lock
add
push
and
and
scas
push
mov
ret
repz
pop
popf
push
in
ror
inc
out
movs
add
or
rcr
mov
ss
dec
movs
jbe
nop
mov
into
or
loop
ror
jno
push
xor
inc
jbe
faddp
push
pop
jno
popf
inc
aaa
and
test
mov
mov
jno
adc
(bad)
clc
test
rol
loope
jl
and
mov
les
lock
and
outs
mov
dec
ins
adc
test
xor
jl
addr16
sub
mov
fcmovb
inc
fsubr
rcr
ss
add
ss
push
add
std
jae
push
fs
mov
clc
dec
sub
pop
por
aas
adc
movs
fidiv
jb
sbb
sti
jbe
cmps
mov
sbb
cdq
inc
mov
loope
inc
retf
and
cmps
xchg
dec
xchg
ds
imul
add
xchg
or
int
sbb
scas
in
sub
lods
in
add
sbb
in
test
inc
cmps
mov
xor
or
pop
push
frstor
inc
sbb
xchg
jl
mov
jnp
test
push
outs
jo
mov
sbb
xlat
fwait
adc
or
aas
sbb
ror
or
scas
mov
arpl
or
pop
jne
outs
jo
add
and
scas
pop
in
add
pop
fs
mov
push
or
jno
xlat
bound
xor
data16
and
imul
add
and
mov
fld
xlat
test
xlat
mov
cs
in
cmp
icebp
adc
push
and
mov
jbe
inc
inc
inc
jmp
sbb
push
push
(bad)
sahf
dec
jmp
scas
mov
rcr
mov
dec
dec
fs
cmp
cmp
add
sub
sub
idiv
push
push
push
mov
(bad)
jnp
mov
mov
or
jno
leave
push
and
xor
lods
pop
fistp
jle
pop
loope
mov
pushf
loope
(bad)
xchg
ficomp
enter
cwde
(bad)
push
push
xlat
fdivr
rol
aas
in
push
lods
imul
ins
sub
(bad)
repnz
push
inc
aaa
jp
sbb
call
cwde
ret
movs
mov
scas
imul
mov
mul
cmps
push
dec
outs
and
inc
jno
(bad)
outs
sahf
xor
dec
pop
dec
mov
and
add
mov
icebp
add
adc
hlt
in
(bad)
adc
movs
and
sbb
int
sbb
sub
dec
bound
adc
ja
xchg
fsub
hlt
pop
mov
nop
sbb
or
cmps
jge
aad
ins
add
push
les
pusha
jae
mov
fwait
jns
dec
mov
mov
icebp
jmp
jecxz
test
cmp
fisttp
(bad)
sbb
cmp
add
sub
pop
adc
cmp
lds
xchg
test
pusha
mov
xchg
fwait
mov
sti
shr
fucom
aaa
cmp
pop
and
out
fidiv
popf
mov
movs
push
ficom
fs
push
jle
pusha
mov
daa
inc
dec
(bad)
pop
and
inc
mov
in
sbb
adc
jb
repz
shl
xor
mov
mov
add
xor
pop
mov
popa
mov
push
sbb
inc
je
mov
das
std
in
fdivr
jns
xchg
and
mov
cmp
and
pop
aas
jb
sahf
rcl
ja
mov
jnp
jmp
push
cmp
shl
or
sub
cld
dec
das
or
pop
rcl
mov
es
sub
xchg
push
sbb
mov
adc
add
call
xlat
push
jo
or
push
(bad)
popf
add
lahf
mov
pop
repnz
lock
retf
cmp
pop
stos
movs
arpl
push
icebp
pop
imul
call
loop
cmps
jmp
lahf
push
push
push
lea
adc
out
jmp
jge
jns
mov
fldl2t
in
mov
xor
push
pushf
pop
into
mov
jmp
add
lods
out
mov
in
clc
push
sub
and
int
repz
(bad)
cs
mov
lahf
jno
mov
push
dec
test
fs
jns
out
xsha1
cmps
dec
shl
jle
mov
inc
pop
aad
jmp
xor
jl
sbb
jp
fstp
mov
call
pop
in
cmp
push
test
mov
add
fiadd
xchg
mov
xor
jae
mov
adc
std
add
push
call
stos
sub
mov
cwde
ss
adc
cld
dec
lahf
test
push
js
jmp
mov
jae
into
mov
mov
int
clc
pop
lods
sub
dec
call
and
xor
sub
xor
clc
xchg
ror
les
repz
lods
stc
out
jnp
shl
test
mov
pusha
addr16
ficomp
cmp
icebp
movs
call
inc
mov
push
bound
in
ins
sbb
sub
cmp
nop
mov
mov
mov
repnz
pop
add
movs
aas
mov
mov
repz
mov
fwait
jp
pop
pusha
out
and
adc
stos
xchg
lods
cmovo
icebp
in
push
lock
mov
loopne
push
mov
add
mov
and
xor
movs
jae
sub
clc
pop
adc
pop
xchg
xor
mov
movs
ins
jb
xchg
adc
ror
inc
fidivr
push
jno
cmp
int
pop
retf
stos
js
push
dec
jbe
lds
add
pop
inc
sbb
(bad)
mov
xchg
out
or
jle
jbe
mov
in
xchg
in
pop
mov
mov
sbb
inc
lahf
(bad)
loop
and
and
or
scas
scas
ror
mov
pop
pusha
pop
je
scas
fwait
add
(bad)
sbb
test
mov
out
jo
and
and
jmp
mov
jo
fisubr
ins
cmps
sbb
in
aaa
sub
dec
jg
mov
lock
jle
cdq
shl
jle
lock
lds
xor
and
xor
add
xor
cmp
or
int
mov
sbb
inc
mov
push
dec
sbb
xlat
xor
sbb
jo
js
in
push
and
data16
out
xchg
popf
popf
jecxz
or
mov
mulps
pop
call
lea
repnz
sahf
add
fwait
retf
das
jmp
push
or
ins
jge
ret
(bad)
popf
xchg
add
int
cwde
xchg
neg
mov
and
cmp
mov
shl
dec
pushf
push
cmp
and
dec
jne
xor
and
pop
pop
int3
std
ret
fisttp
cmp
test
inc
int
pop
imul
lds
mov
mov
sub
add
ja
mov
rol
les
test
adc
fild
pusha
stos
sub
adc
les
fimul
mov
inc
mov
pushf
sbb
pop
pusha
lea
in
stos
sti
jmp
adc
dec
ret
cmp
aad
pop
nop
mov
mov
xor
add
and
inc
outs
fmul
xor
pop
jo
mov
ja
mov
sub
cmp
sub
bound
ror
outs
lods
mov
scas
pop
and
jb
nop
enter
push
dec
(bad)
imul
sbb
add
adc
fnstenv
bound
fisubr
cmps
dec
inc
in
imul
mov
shr
leave
pop
pop
nop
into
cmp
arpl
fcom
xlat
cwde
cs
js
movs
mov
retf
out
sbb
xor
(bad)
sti
es
mov
(bad)
dec
inc
mov
push
dec
cmp
fisubr
mov
sub
das
adc
mov
pop
sbb
mov
jecxz
xor
fsubr
cmps
ret
xor
outs
icebp
adc
iret
cmp
or
outs
xchg
das
fsubr
sbb
mov
xchg
call
jmp
pop
fst
loop
inc
rcr
fcmovnb
inc
mov
cmp
inc
mov
push
push
cmps
dec
mov
cmp
push
xlat
cmp
push
aaa
jle
sti
and
pop
xchg
sbb
cs
call
(bad)
xchg
nop
cs
pop
test
retf
push
sub
sub
icebp
lea
inc
mov
xchg
shl
jge
into
mov
jecxz
out
mov
imul
outs
movs
shl
sub
retf
and
lds
or
add
jl
push
fdivr
mov
jmp
xchg
in
jno
sub
fidivr
stos
jp
inc
dec
imul
mov
test
cwde
movs
pop
xchg
cwde
(bad)
mov
in
xchg
mov
mov
cmp
adc
(bad)
inc
mov
xor
(bad)
or
in
jb
retf
mov
inc
int3
addr16
fisub
out
fwait
push
dec
fiadd
repnz
repnz
jno
mov
cmp
add
or
push
cmp
push
ss
sub
jecxz
cmps
test
pop
outs
leave
test
and
dec
push
jo
loop
int
loopne
aas
add
push
push
mov
iret
int3
scas
jp
add
jo
mov
addr16
xchg
jecxz
or
jno
xchg
xlat
jbe
lock
xlat
retf
jge
sti
mov
and
fbstp
iret
adc
out
sub
cmp
xor
pop
fdiv
mov
(bad)
add
push
xchg
jl
xchg
inc
cmp
in
aaa
rsm
in
scas
pop
jle
mov
push
mov
jle
lock
and
cmp
std
mov
je
imul
cmp
lock
ror
jmp
cmp
pop
jbe
int
and
xchg
(bad)
push
ins
sbb
cdq
out
out
neg
xchg
test
retf
lea
push
sbb
aaa
and
dec
mov
outs
jl
sbb
add
jp
leave
lods
inc
mov
mov
loopne
or
dec
cmp
pop
xchg
mov
mov
loopne
inc
mov
mov
das
pop
movs
inc
pop
dec
mov
mov
retf
shl
inc
add
or
inc
pop
add
dec
sbb
stos
cmp
push
(bad)
les
push
jnp
inc
ja
pop
(bad)
in
out
xor
ret
cmp
push
inc
jb
lods
sti
xor
repnz
loopne
popf
les
jno
out
and
lock
fdivr
icebp
call
sbb
ins
fcom
leave
mov
les
popf
dec
adc
sti
dec
jbe
outs
sub
mov
mov
cmp
sbb
push
ret
xchg
inc
test
adc
mov
fcmovu
xor
dec
mov
jo
(bad)
std
retf
movs
ins
mov
popa
jmp
adc
leave
pusha
cmp
jo
xor
movs
out
cmp
cmp
cmc
leave
adc
scas
fdiv
clc
push
rol
add
cmp
ins
icebp
sti
in
fs
daa
and
cmps
(bad)
mov
scas
cmps
dec
xchg
sub
lea
cmp
fisttp
ss
push
movs
fdivr
pop
and
lock
dec
inc
ss
xchg
setne
fwait
inc
clc
fisubr
mov
xchg
nop
jb
out
in
mov
mov
xor
popa
int
int
into
dec
pop
xchg
jne
pop
aaa
sub
jp
das
xor
cs
mov
jp
dec
xchg
add
sub
xchg
int
fidiv
(bad)
clc
add
repnz
inc
pop
out
ss
mov
add
xor
push
leave
and
aam
mov
comiss
aam
dec
dec
xchg
push
fwait
mov
or
xchg
ins
cdq
jge
hlt
daa
mov
mov
mov
stc
cwde
std
sbb
cmp
data16
mov
inc
push
jns
push
xor
rcpps
imul
xchg
test
neg
inc
rcr
popf
clc
dec
sub
jmp
loop
xor
dec
sub
sub
and
dec
inc
enter
lock
mov
adc
sub
es
arpl
shr
push
iret
imul
mov
cmp
adc
cmps
(bad)
cmp
dec
or
xchg
push
xor
adc
lahf
jmp
rol
jp
xchg
inc
dec
(bad)
int
dec
or
or
leave
xor
sbb
sub
ret
inc
pop
fistp
push
add
mov
rcr
cmps
iret
fdiv
push
shl
ret
xor
push
mov
dec
jge
mov
repnz
sti
ja
lds
aas
add
sub
into
pop
sar
mov
ins
dec
test
dec
sub
aad
pop
test
adc
call
scas
inc
div
outs
fadd
inc
in
mov
xchg
aam
es
mov
xor
mov
mov
sub
fadd
mov
rol
cmp
or
loop
cld
adc
add
jne
cld
loop
imul
nop
test
fbstp
pop
inc
lock
sti
out
pop
add
(bad)
jmp
and
adc
jo
jne
retf
dec
mov
and
mov
jne
nop
push
sub
(bad)
mul
pusha
mov
shr
and
fisttp
jo
add
call
les
push
dec
add
shl
ret
fist
cmps
cmps
mov
or
fisubr
stc
addr16
repnz
movs
outs
mov
out
loopne
std
add
xchg
inc
push
fstp
add
idiv
shr
jne
mov
inc
push
loope
pop
test
push
arpl
sbb
imul
dec
dec
sub
fbstp
in
nop
pop
jle
and
enter
mov
or
inc
pop
(bad)
mov
sub
jge
xor
call
cmp
inc
(bad)
xor
popf
push
lods
or
sub
ds
into
mov
es
mov
test
cld
mov
and
mov
and
(bad)
mov
call
jg
loopne
xor
sbb
sub
cmp
in
pop
mov
stc
push
cs
cmp
push
dec
and
push
lods
repz
std
add
sub
and
(bad)
fdivr
stos
xchg
mov
jecxz
or
mov
pushf
xchg
mov
aas
es
out
xor
xchg
ins
inc
or
cwde
jmp
inc
cmp
inc
pop
push
pop
add
adc
mov
movs
pop
mov
cwde
int3
ss
jmp
inc
jo
sti
adc
xchg
outs
mov
jae
or
mov
cmp
cmp
mov
jnp
(bad)
dec
sub
cmp
movs
inc
sub
inc
fnstenv
add
pop
(bad)
mov
in
dec
inc
test
mov
js
lods
mov
push
into
aad
ins
in
mov
jp
adc
stc
frstor
cmc
dec
movs
mov
jl
mov
dec
cmps
retf
ud0
mov
jno
bound
cmp
rep
mov
fcmovu
or
inc
test
mov
int
mov
pop
sar
lock
sbb
pop
jle
popf
and
mov
sub
jns
movs
test
mov
pop
push
sub
jg
aaa
jp
mov
mov
pop
loopne
imul
push
neg
pop
jns
ja
push
jno
dec
ds
stos
push
ret
rol
mov
js
imul
jl
in
sub
test
arpl
jno
and
or
dec
xor
(bad)
push
adc
push
push
mov
movs
aam
iret
je
pop
clc
cmp
mov
ja
adc
fmul
popa
mov
(bad)
push
mov
inc
mov
dec
adc
test
outs
mov
into
jbe
(bad)
mov
push
xor
out
or
pop
add
sub
cmpxchg
xor
lods
div
aad
pop
dec
sbb
pop
pop
test
mov
enter
mov
add
dec
dec
sbb
pusha
movs
xor
bound
das
ror
xor
sbb
push
fdiv
sti
jne
and
cmp
gs
div
jecxz
data16
daa
and
dec
sub
das
into
loopne
jmp
in
das
inc
hlt
jecxz
mov
inc
cli
inc
pop
pop
pop
int3
or
cwde
dec
xor
xchg
in
fist
call
cmp
push
sbb
(bad)
cdq
dec
(bad)
fld
jnp
sbb
popa
nop
jl
into
pop
mov
and
mov
rol
or
push
dec
mov
retf
add
retf
sub
call
cs
std
dec
adc
aaa
into
shr
cli
push
repnz
imul
mov
mov
sbb
test
in
mov
daa
jns
sub
sbb
outs
mov
xor
jne
push
dec
mov
std
out
test
or
jns
mov
out
mov
imul
fnstenv
pop
sub
mov
push
adc
fwait
call
ret
(bad)
adc
xchg
push
sbb
sbb
not
popa
je
fldenv
adc
xor
fcomp
cmps
std
and
dec
outs
std
adc
and
mov
or
jae
sbb
mov
ficomp
mov
sub
cld
scas
mov
ror
jae
sti
mov
jmp
adc
jo
(bad)
aam
(bad)
mov
movs
adc
pop
jge
and
shl
adc
mov
sbb
retf
loop
xor
rcl
xor
stc
mov
lea
stc
mov
push
pop
std
sbb
mov
movs
sbb
dec
mov
mov
sub
and
inc
jecxz
sub
call
dec
jmp
pop
ja
mov
retf
inc
test
ret
and
les
clc
ja
mov
fcom
addr16
mov
test
sbb
inc
in
fnstsw
and
jnp
inc
aaa
cwde
(bad)
fcmovbe
in
mov
stc
movs
stc
lea
stc
scas
jmp
pop
and
inc
mov
inc
pop
outs
sbb
pop
xor
inc
fist
mov
push
sbb
add
pop
leave
xchg
loope
in
mov
jmp
jecxz
adc
inc
jnp
sbb
fisttp
jge
out
dec
jno
jno
and
iret
adc
stos
sbb
lds
stos
iret
inc
lahf
pop
mov
inc
jecxz
mov
retf
add
cmc
xchg
std
or
jmp
jno
add
add
xchg
xchg
lea
mov
out
xchg
adc
cld
and
sub
pop
add
adc
sub
mov
jg
arpl
xor
mov
dec
mov
loop
faddp
into
mov
pop
out
movs
inc
lahf
or
lock
xchg
mov
pop
inc
cmp
lds
cld
cld
mov
adc
imul
addr16
push
jne
inc
clc
jo
leave
outs
loop
ds
popf
mov
cld
xchg
push
adc
das
mov
sub
scas
(bad)
gs
fiadd
mov
es
xchg
pusha
cs
dec
push
dec
mov
mov
out
(bad)
jp
push
inc
sub
cs
push
jbe
and
sti
outs
mov
adc
ss
je
lds
daa
pop
jae
mov
int3
push
inc
adc
jne
test
rcl
mov
and
lds
out
shl
jns
inc
test
das
loopne
xchg
pop
push
xchg
inc
jnp
xchg
pop
into
imul
cwde
out
mov
retf
or
or
das
jno
xlat
jns
scas
out
mov
cld
inc
in
cdq
mov
cmp
aam
ss
add
xor
movs
pop
das
xlat
cmp
pushf
xor
dec
push
pop
and
sub
jmp
pop
cld
xchg
sbb
dec
xchg
add
adc
and
hlt
xchg
and
clc
jnp
push
inc
push
adc
fisub
push
sub
pushf
cmp
dec
fisubr
stos
cmps
scas
dec
xlat
mov
jno
(bad)
mov
mov
in
mov
pushf
retf
mov
or
jmp
sub
scas
out
and
sbb
add
push
xchg
dec
mov
adc
xchg
jo
inc
retf
jo
mov
lods
mov
test
fcomp
iret
xchg
mov
jbe
stos
xor
lods
test
add
push
jnp
dec
lds
cld
out
adc
js
or
in
fcom
sbb
outs
pop
out
rol
outs
cmp
clc
xchg
outs
inc
push
es
or
sti
or
xor
test
lea
into
repz
sub
jne
cmp
jbe
cmp
retf
aam
jl
cdq
sbb
cmp
adc
ins
lahf
adc
mov
xor
push
mov
ins
jl
cmp
sub
fcomp
or
push
ja
add
arpl
repnz
dec
imul
push
xchg
push
repz
sbb
pop
jnp
sbb
pop
dec
test
mul
adc
mov
xchg
and
in
pop
jl
movs
mov
sbb
lock
lods
rcl
and
test
cmps
in
daa
mov
cmp
or
push
and
je
retf
ins
sbb
les
out
fld
iret
leave
loopne
inc
lds
cmp
push
fsub
es
pop
outs
cmc
popf
dec
aad
aas
in
jo
fs
not
inc
idiv
mov
or
daa
add
sub
add
cmp
push
cmps
lahf
or
xchg
jle
movs
aad
mov
or
rcr
call
cmc
add
pop
mov
cmp
sub
push
sbb
add
adc
or
sub
(bad)
(bad)
cmp
je
js
pusha
popf
test
add
in
lods
jg
test
fld
adc
imul
push
fisub
mov
mov
outs
xchg
pop
jbe
or
fld
(bad)
cs
and
das
je
add
mov
pop
inc
mov
or
cdq
inc
ror
pop
fld1
cmps
fwait
and
mov
adc
mov
cmp
and
imul
adc
sbb
jae
xchg
jge
(bad)
out
inc
test
outs
ja
pop
std
call
xor
jno
mov
adc
out
mov
es
sbb
push
arpl
adc
lods
sbb
mov
imul
push
aam
xor
mov
and
rcl
ret
pop
xchg
xchg
popa
or
push
ins
xor
mov
into
push
inc
and
fistp
dec
dec
jno
xchg
jne
dec
fisubr
shr
jb
daa
jmp
pop
mov
repz
inc
dec
(bad)
xor
test
mov
icebp
push
push
mov
scas
jg
xor
mov
stos
xor
in
mov
sub
in
adc
mov
pushf
add
or
adc
sub
in
stc
mov
or
xchg
or
push
xor
out
xor
jge
sub
xchg
leave
mov
mov
(bad)
les
pop
jl
dec
mov
mov
leave
neg
xor
xchg
push
fs
adc
inc
pop
js
jge
cdq
ins
push
sub
push
mov
and
pop
js
repz
push
in
rcr
(bad)
sub
cmp
mov
out
xchg
pop
mov
mov
push
sbb
sbb
jb
packuswb
cmp
loop
sbb
xchg
mov
jae
movs
repnz
xchg
xchg
mov
mov
inc
adc
jg
jecxz
and
jb
jg
jno
shr
call
cs
jbe
xlat
mov
test
mov
bnd
push
es
std
mov
push
jp
jne
adc
inc
fyl2xp1
add
fbld
lahf
ins
add
nop
mov
movs
outs
mov
pop
mov
mov
sub
fsubr
iret
jmp
out
in
shr
pop
fisubr
fisubr
dec
lods
dec
dec
sbb
in
in
jbe
mov
jl
iret
sub
push
lods
mov
push
mov
adc
nop
aas
sub
sets
xchg
jecxz
push
sub
cmp
pop
cmp
push
adc
scas
cmps
into
inc
aam
mov
xchg
jl
inc
mov
mov
daa
jns
and
test
mov
out
jmp
add
cmp
js
dec
std
pop
add
stc
test
and
inc
mov
fmul
pop
(bad)
jle
fisttp
jno
nop
shr
cwde
imul
mov
or
mov
and
push
ins
or
mov
pop
and
dec
fcmovnbe
adc
add
mov
into
in
cmp
pop
push
iret
xor
outs
and
cmp
jns
sub
outs
retf
pop
retf
popa
and
jae
jg
sbb
mov
cmp
mov
daa
dec
push
sub
dec
inc
xchg
sub
test
fbstp
xor
dec
dec
loope
fs
(bad)
retf
cmps
pop
dec
jmp
push
(bad)
imul
pusha
out
sbb
inc
test
mov
dec
loop
es
jb
ret
push
fs
frstor
sub
mov
mov
add
push
sbb
add
mov
jle
sub
mov
add
sub
cmp
pop
mov
dec
xchg
add
mov
fwait
xor
fcom
xor
call
xchg
cmp
(bad)
xchg
popf
sahf
mov
mov
imul
pop
hlt
xor
mov
outs
in
(bad)
mov
cmp
jne
push
gs
cli
jle
sti
(bad)
imul
cwde
cmp
cli
or
push
iret
aaa
pop
sbb
push
int3
je
pmaxsw
mov
push
punpckhbw
jecxz
cmp
add
sahf
xchg
sti
ja
test
jle
dec
daa
gs
ret
and
sti
inc
jmp
shl
inc
jnp
idiv
xchg
sbb
stos
pop
pop
cmp
push
test
pop
push
xor
hlt
sub
popa
stos
fisttp
mov
sub
dec
ret
cmp
stc
mov
test
retf
xchg
pop
test
hlt
mov
mov
test
ficom
dec
retf
js
mov
rol
shl
ds
pop
stos
fldenv
out
push
cmc
(bad)
lods
fs
lock
sbb
sub
ja
bound
fistp
ret
jecxz
addr16
js
push
sub
add
sub
stos
iret
jbe
out
js
xor
pop
clc
pop
dec
jge
popa
daa
dec
xchg
not
adc
push
jle
xor
push
mov
jbe
sar
cmps
mov
cdq
pop
es
in
repz
and
retf
test
add
fstp
or
in
pop
mov
addr16
pop
retf
jnp
fcomp
inc
iret
adc
clc
push
cmps
mov
in
ds
mov
cmps
ins
adc
addr16
adc
xor
inc
outs
xor
pop
jns
mul
cmp
xchg
or
adc
mov
ss
push
(bad)
fs
ss
jns
or
cvttps2pi
push
cmc
or
out
stos
inc
stc
outs
nop
arpl
sbb
adc
or
bound
repz
jmp
pusha
jne
pop
div
mov
ss
ins
ins
movs
xlat
fdivr
(bad)
jmp
or
or
jae
imul
pusha
or
test
fsubrp
out
enter
pusha
push
xchg
test
arpl
jl
imul
xor
in
adc
pop
xor
cmp
pop
cmp
sbb
stos
adc
pop
repz
pop
dec
mov
mov
(bad)
sahf
inc
nop
jmp
or
mov
inc
xchg
jle
add
jo
xor
pop
mov
scas
or
imul
mov
cmp
jbe
or
jmp
xchg
popa
pop
inc
fidivr
inc
stc
xchg
mov
retf
push
rol
cdq
popf
sar
fmul
mov
lds
and
sub
jp
mov
retf
cld
call
dec
push
dec
cmovbe
xchg
dec
hlt
and
sub
inc
dec
or
mov
test
pop
dec
std
mov
(bad)
outs
aad
adc
test
(bad)
inc
xchg
jmp
inc
xchg
pop
ds
test
leave
out
nop
sub
clc
mov
shl
push
push
cmp
(bad)
fsub
pusha
test
jge
(bad)
pushf
fdivrp
dec
xchg
cmp
int
gs
mov
pop
outs
pop
jp
fsub
shr
cs
sbb
dec
dec
mov
cmp
push
lods
and
mov
scas
sub
mov
loop
scas
cwde
xchg
clc
adc
inc
icebp
adc
mov
icebp
ja
cmp
mov
and
and
or
in
fucom
pop
cmps
jge
nop
push
jb
pop
dec
jae
fild
jge
dec
pop
sar
push
js
sahf
jl
mov
adc
jne
dec
in
push
xchg
push
adc
movs
or
cmps
dec
ins
movs
dec
or
xor
(bad)
fs
sub
xchg
mov
popa
jo
sub
mov
int3
out
pusha
arpl
push
(bad)
fst
xor
pop
jge
jmp
mov
jle
and
aas
or
sbb
jg
scas
outs
add
sar
cwde
jg
ss
mov
pusha
mov
lods
or
pop
pop
int
xchg
out
data16
mov
inc
les
jne
push
lea
pop
popa
mov
mov
(bad)
cmps
dec
sub
push
ja
in
ret
or
fst
add
mov
outs
popa
sbb
inc
cmp
cmps
jp
retf
in
mov
mov
push
adc
sub
mov
ss
ret
bound
outs
cmps
pusha
mov
adc
(bad)
jg
dec
das
mov
push
adc
(bad)
std
xchg
add
dec
ret
push
inc
inc
adc
(bad)
xor
mov
clc
pop
int
mov
push
mov
fld
sub
sub
or
clc
gs
mov
ja
int3
(bad)
add
add
cmp
test
jle
push
cmp
rcl
cmp
ror
rcl
mov
jo
mov
sub
xor
stos
push
mov
push
jmp
or
out
add
jecxz
js
call
repz
pop
test
pop
shl
jnp
pop
(bad)
cmp
retf
mov
sbb
jbe
call
mov
sub
add
or
in
or
xchg
dec
sub
sbb
call
xor
cmp
adc
and
aaa
mov
dec
test
pusha
and
cli
jnp
cdq
xor
mov
dec
aam
adc
cdq
mov
jle
fild
(bad)
inc
(bad)
loope
pop
mov
lods
sub
in
fisubr
jge
iret
lods
pop
mov
and
xchg
(bad)
(bad)
inc
mov
(bad)
fsub
mov
inc
(bad)
lock
sub
mov
mov
movs
dec
retf
or
gs
cmp
xlat
dec
in
outs
imul
mov
adc
fdivp
ds
jl
xor
(bad)
fidivr
into
imul
mov
bound
nop
jmp
pop
mov
mov
ret
push
pop
mov
loope
int
test
adc
fist
fidiv
ds
jns
jge
frstor
cs
pop
sub
imul
popa
push
push
pop
sbb
rol
out
rcl
inc
aam
out
sbb
aaa
xor
stc
jmp
mov
push
(bad)
hlt
or
loopne
push
stos
pop
jmp
or
sub
scas
xchg
fbstp
lods
scas
std
inc
ds
pushf
mov
push
sti
in
(bad)
fnstsw
ret
sbb
pushf
mov
(bad)
push
dec
jae
cmps
mov
mov
mov
stos
pop
aas
adc
dec
sbb
mov
mov
outs
jp
or
adc
mov
jb
std
sbb
mov
xchg
sub
mov
xlat
mov
clc
and
mov
push
daa
jp
xor
sbb
sbb
popa
in
dec
fcom
cld
retf
and
pop
push
daa
pop
pusha
popa
and
xchg
pop
xchg
leave
repnz
lods
lods
js
xchg
dec
lahf
push
sub
mov
add
and
imul
pushf
pop
popa
test
adc
scas
xor
xchg
mov
fidivr
movs
mov
jbe
enter
sbb
or
mov
mov
sar
cmp
enter
fiadd
mov
sub
xor
retf
fbld
aas
xchg
add
call
int
inc
out
cmc
jl
adc
enter
inc
adc
in
femms
clc
sahf
fisttp
push
cmp
ror
pushf
or
inc
shl
dec
adc
jmp
xchg
scas
pop
inc
aaa
push
sbb
ret
rep
ins
mov
sahf
lds
mov
rcl
inc
sti
jb
push
test
inc
jo
test
call
dec
(bad)
fstp
test
test
mov
mov
out
and
fmul
sub
sub
mov
cwde
add
push
sahf
call
js
mov
popf
test
xchg
mov
enter
mov
int
xchg
sahf
push
vunpckhps
mov
cmps
mov
jo
xor
popf
cli
fidiv
ins
cdq
les
adc
ds
mov
mov
xor
push
sbb
daa
and
hlt
mov
or
jno
or
shl
adc
test
sbb
push
xchg
sbb
lods
xchg
push
cs
ficom
ins
inc
cmp
test
adc
test
pop
out
adc
dec
add
jge
xchg
push
jg
mov
iret
jle
xchg
xor
out
xchg
enter
add
cwde
sar
repnz
push
aas
xchg
mov
outs
cli
push
hlt
xor
mov
or
fs
das
or
jge
push
aam
fwait
mov
daa
outs
fsub
mov
lahf
adc
push
in
xchg
lods
or
push
push
ja
and
aam
cmp
sbb
out
sub
les
inc
pop
cs
dec
sbb
xor
sbb
inc
push
test
and
mov
mov
xor
xor
rcl
iret
inc
dec
in
les
mov
fisubr
xlat
out
(bad)
push
(bad)
scas
or
sbb
in
test
or
sub
sti
in
xchg
and
add
movs
ret
shl
add
test
jg
repnz
lds
ror
call
call
dec
into
cld
(bad)
xchg
and
loop
mov
test
pop
idiv
std
cmp
stc
enter
adc
fcomp
and
push
out
dec
xor
sbb
loopne
xor
imul
mov
movs
xchg
and
call
mov
ins
ds
xchg
mov
ins
rol
pop
xchg
lock
fldenv
and
xchg
jno
popa
arpl
retf
jl
fist
lahf
jl
and
and
mov
push
bnd
fld
movs
mov
push
sub
cld
mov
sti
and
mov
jne
jae
inc
fisttp
add
add
jl
loope
gs
mov
neg
cmp
adc
fs
daa
(bad)
jecxz
ss
popf
add
mov
bound
or
pop
outs
mov
es
jb
dec
fimul
inc
dec
retf
ror
hlt
lea
inc
cmp
jo
mov
or
dec
retf
cwde
sti
(bad)
fisub
add
jp
icebp
ja
and
call
adc
in
jmp
popa
shl
mov
shr
mov
dec
fcmovnb
mov
rol
imul
sub
stos
jbe
into
cmp
or
inc
movs
jbe
shr
sub
fisubr
and
div
xor
ret
imul
push
dec
mov
mov
lods
xchg
xor
inc
mov
mov
pop
aas
adc
mov
out
push
inc
dec
sbb
(bad)
sub
repz
cmp
fcom
jg
out
pop
test
dec
mov
push
mov
jae
mov
(bad)
hlt
into
ss
push
and
push
mov
repz
fadd
push
mov
into
cmc
xchg
mov
imul
lea
test
and
shl
mov
push
inc
mov
mov
imul
aad
inc
nop
outs
in
pushf
jnp
jbe
cmp
int3
dec
or
fcom
add
cmp
mov
mov
add
in
pop
push
ds
ficom
(bad)
cmp
push
outs
mov
retf
or
ret
pmuludq
outs
gs
mov
add
cmps
scas
or
add
out
jle
or
jns
and
adc
xchg
mov
dec
or
in
in
mov
std
push
cmps
clc
rcr
test
inc
fidivr
(bad)
push
sbb
rcl
mov
retf
ret
and
cmp
in
inc
call
jo
pushf
cmp
xchg
jmp
pop
xor
(bad)
mov
lock
out
(bad)
call
xlat
fcmovnb
test
pop
jmp
jp
and
dec
aas
or
je
jmp
inc
mov
xor
fdivr
lds
in
inc
push
leave
loop
sbb
rcl
ins
inc
dec
mov
repz
xor
retf
ja
pusha
shr
push
xor
fiadd
xchg
mov
scas
push
sbb
popf
sbb
ret
inc
adc
or
mov
sub
mov
lods
into
loopne
adc
xchg
scas
adc
cwde
jns
xor
shr
dec
add
pop
jmp
test
push
and
sub
pop
mov
mov
jecxz
cmc
inc
rep
or
sbb
dec
clc
jp
lea
dec
mov
cli
enter
in
loopne
std
mov
loop
or
imul
pushf
ins
(bad)
push
sbb
xchg
sbb
adc
sub
cmp
leave
mov
sub
scas
jno
call
add
(bad)
push
add
mov
cmps
push
call
popa
xor
stc
dec
lods
mov
xchg
or
ret
sbb
adc
pop
mov
clc
inc
pop
cmp
in
lods
sub
sub
push
inc
sub
and
sub
cmp
pop
(bad)
xor
jbe
mov
xchg
dec
sbb
sar
(bad)
xchg
cmp
or
push
or
and
xchg
sub
(bad)
cld
mov
setg
jbe
ret
ret
push
neg
or
and
pop
cmp
and
xchg
leave
pop
enter
int
loope
test
(bad)
adc
test
out
pop
jmp
iret
inc
jbe
mov
pop
jl
xlat
retf
into
retf
(bad)
test
push
loopne
inc
jp
sub
sar
outs
js
push
jp
mov
loop
xchg
sbb
pushf
movs
loope
add
mov
cmp
imul
jl
into
and
add
daa
ss
xor
or
cmp
dec
pop
fwait
jae
push
jecxz
and
mov
nop
jbe
inc
sub
and
sbb
enter
xor
mov
jle
and
inc
sbb
jl
repz
test
mov
mov
inc
out
mov
jecxz
xor
cmp
std
mov
outs
add
lock
fistp
add
daa
fucomi
xchg
mov
mov
in
jl
sub
adc
lahf
xor
es
jge
mov
and
push
dec
mov
loope
cmp
(bad)
adc
in
test
and
loopne
aas
(bad)
push
fnsave
jbe
aaa
jg
leave
xchg
xlat
ja
mov
std
(bad)
mov
test
add
mov
(bad)
adc
or
stos
pusha
mov
je
retf
or
mov
imul
sbb
adc
loope
stos
jecxz
mov
arpl
dec
in
xlat
jb
or
arpl
inc
push
xor
les
call
cmc
int
sbb
es
ds
xchg
rcr
test
jmp
in
sbb
mov
pop
js
sub
iret
mov
push
inc
jmp
mov
hlt
mov
data16
int3
cmp
fild
in
stos
add
push
fst
pop
add
rcl
xor
test
fbstp
dec
mov
cmps
cmp
jecxz
ins
mov
add
mov
dec
dec
mov
gs
ins
fnsave
pop
(bad)
cmps
sbb
mov
loope
jg
push
sub
xchg
xchg
xchg
mov
jle
and
aaa
in
shr
mov
ds
or
and
daa
dec
(bad)
cs
rol
fiadd
mov
jne
push
mov
ret
adc
sub
add
enter
inc
jl
jo
call
xchg
mov
sub
cmps
jnp
sbb
inc
leave
arpl
inc
cld
lahf
xor
sbb
dec
xchg
add
shr
sub
sub
mov
fsub
mov
test
lahf
mov
(bad)
or
outs
mov
inc
and
sub
hlt
mov
xor
cmps
mov
add
mov
scas
test
dec
sbb
clc
ds
xor
mov
in
mul
push
aad
ja
stos
adc
jp
mov
ins
cmc
pusha
push
mov
jb
addr16
cmp
push
mov
dec
aaa
push
aas
xor
imul
cmc
add
out
add
mov
(bad)
sbb
jge
dec
imul
cmps
pop
das
dec
xchg
std
shl
cmc
pop
outs
(bad)
jmp
or
popf
rol
jge
data16
jb
xchg
fiadd
sub
fs
stc
repz
add
call
je
fld
inc
jmp
lock
in
mov
imul
nop
int
cmp
xchg
mov
stc
(bad)
bound
sub
and
jg
push
add
mov
inc
imul
cmp
jb
sahf
sub
mov
cmp
xor
call
adc
pop
hlt
(bad)
loope
and
xchg
cmc
out
cld
sub
scas
push
mov
mov
and
shr
adc
push
dec
mov
sar
jl
pusha
imul
fbstp
test
inc
xchg
add
sbb
cmps
into
xor
je
pop
repz
popf
xchg
jp
mov
mov
(bad)
mov
dec
outs
std
pop
jle
adc
std
pop
jo
into
jno
leave
adc
int
scas
push
(bad)
dec
xchg
and
cli
push
mov
pop
(bad)
adc
lods
(bad)
and
xchg
and
vcmpss
mov
data16
sub
shl
adc
and
jmp
clc
and
pop
(bad)
ficomp
fld
push
and
rcl
enter
es
call
out
into
inc
mov
adc
adc
cmp
sbb
sti
outs
inc
inc
xor
add
and
push
mov
adc
fnsave
cmp
mov
push
cmp
lods
mov
test
aas
mov
sbb
repnz
mov
das
iret
fistp
or
adc
pop
out
xchg
add
add
je
pop
push
xchg
fcmovne
sbb
mov
cmp
das
pushf
fwait
sub
es
jmp
imul
sbb
dec
jl
dec
hlt
or
ja
mov
enter
call
pop
pop
mov
ja
stos
pop
and
push
mov
dec
fisttp
xor
push
inc
jb
icebp
push
gs
sbb
loop
cmc
sub
pushf
push
shr
lds
cmps
daa
out
jp
dec
call
fld
sbb
daa
iret
pop
mov
int3
shr
std
push
(bad)
jae
int3
push
ja
shr
das
and
outs
cmp
dec
mov
cmp
out
lods
out
push
or
xchg
leave
cmc
mov
pop
sbb
retf
inc
mov
repnz
push
jl
mov
or
daa
jno
pop
ja
mov
out
inc
leave
(bad)
sbb
repnz
mov
xchg
(bad)
and
popaw
aad
adc
cmp
loopne
(bad)
push
pushf
cmp
pand
push
add
inc
les
idiv
mov
ffree
ja
cmp
in
dec
push
int3
mov
std
cmps
cmp
xchg
rcl
in
add
aam
vminps
jmp
retf
cmp
shl
xor
xchg
sar
xor
cmp
lock
mov
out
mov
jno
aam
cmp
(bad)
and
xchg
sbb
js
idiv
pusha
xor
pop
mov
mov
pop
mov
imul
pshufw
adc
cmp
outs
ins
fidivr
pop
jmp
cli
outs
ins
add
sub
inc
sub
sub
retf
enter
dec
sub
jb
mov
mov
test
inc
out
jo
pop
fdiv
push
or
push
stos
std
out
xchg
jl
stos
or
jns
mov
add
cmp
nop
fs
jbe
pop
sbb
(bad)
fwait
pop
dec
inc
sbb
js
dec
jg
(bad)
adc
inc
rcl
lahf
cld
mov
add
sub
call
arpl
xchg
inc
mov
xchg
shr
add
cmps
outs
sbb
mov
dec
dec
mov
loop
xlat
cmp
and
test
(bad)
or
push
imul
hlt
cmc
popa
jns
pop
mov
xchg
push
(bad)
loopne
xchg
adc
int
mov
js
out
mov
scas
pop
lahf
sub
sub
data16
(bad)
daa
xchg
leave
aam
movs
movs
xchg
rep
ja
sahf
test
inc
mov
(bad)
in
and
fcomp
aam
jo
imul
adc
(bad)
(bad)
std
out
in
imul
xor
cld
xchg
jbe
in
repz
repz
pop
cmp
retf
mov
and
cmp
sbb
mov
xlat
jecxz
add
rol
ror
inc
dec
enter
xchg
jecxz
call
sbb
int3
push
retf
cmp
std
add
loop
xchg
(bad)
and
cli
(bad)
pop
sub
nop
js
add
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
sub
mov
mov
mov
add
sub
sub
imul
and
cmp
sete
and
mov
cmp
setl
and
mov
mov
mov
mov
sub
mov
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
jmp
mov
mov
mov
mov
mov
and
xor
or
test
cmovne
mov
jmp
lea
add
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
call
mov
mov
mov
mov
mov
sub
mov
mov
mov
mov
call
add
mov
mov
mov
sub
mov
mov
mov
mov
call
add
mov
mov
mov
mov
mov
cmp
sete
and
mov
mov
mov
sub
mov
add
mov
imul
and
cmp
sete
cmp
setl
mov
xor
mov
xor
xor
mov
mov
and
and
mov
mov
and
mov
mov
and
mov
mov
or
mov
mov
mov
or
mov
xor
mov
or
xor
or
and
or
test
cmovne
mov
jmp
mov
mov
mov
test
cmovne
mov
jmp
mov
mov
mov
jmp
lea
mov
mov
mov
mov
sub
mov
mov
mov
mov
call
add
mov
mov
cmp
cmovl
mov
jmp
mov
mov
mov
jmp
mov
mov
mov
jmp
mov
mov
lea
pop
pop
pop
pop
ret
lea
add
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
sub
mov
mov
mov
mov
mov
call
add
mov
mov
mov
sub
mov
mov
mov
mov
call
add
mov
mov
jmp
data16
push
mov
push
push
push
sub
mov
mov
mov
mov
sub
sub
add
imul
and
cmp
sete
and
mov
cmp
setl
and
mov
mov
mov
mov
mov
sub
mov
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
jmp
mov
mov
mov
mov
mov
mov
xor
mov
mov
xor
xor
mov
and
and
mov
and
and
or
or
xor
mov
or
xor
or
and
or
test
mov
cmovne
mov
jmp
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
call
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
sub
add
imul
and
cmp
sete
cmp
setl
mov
xor
mov
xor
mov
xor
mov
and
and
mov
and
and
or
or
xor
or
xor
or
and
or
test
mov
mov
cmovne
mov
jmp
mov
jmp
mov
mov
mov
mov
mov
add
sub
sub
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
cmovne
mov
jmp
mov
mov
mov
mov
cmp
setb
and
mov
mov
mov
mov
sub
sub
add
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
cmovne
mov
jmp
mov
mov
mov
test
cmovne
mov
jmp
mov
mov
lea
mov
imul
add
mov
mov
cmp
cmove
mov
jmp
mov
mov
mov
mov
mov
mov
add
sub
sub
imul
and
cmp
sete
cmp
setl
mov
xor
mov
mov
xor
xor
mov
and
and
mov
and
and
or
or
xor
mov
or
xor
or
and
or
test
mov
cmovne
mov
jmp
mov
mov
mov
mov
lea
mov
imul
add
mov
mov
mov
mov
sub
mov
mov
add
imul
and
cmp
sete
cmp
setl
mov
xor
mov
xor
xor
mov
and
and
mov
mov
and
mov
mov
and
or
mov
or
xor
or
xor
or
and
or
test
mov
cmovne
mov
jmp
mov
jmp
mov
mov
mov
mov
mov
mov
add
sub
sub
imul
and
cmp
sete
cmp
setl
mov
xor
mov
mov
xor
xor
mov
and
and
mov
and
and
or
or
xor
mov
or
xor
or
and
or
test
mov
cmovne
mov
jmp
mov
mov
mov
mov
mov
mov
add
sub
sub
imul
and
cmp
sete
cmp
setl
mov
xor
mov
mov
xor
xor
mov
and
and
mov
and
and
or
or
xor
mov
or
xor
or
and
or
test
mov
cmovne
mov
jmp
mov
jmp
mov
mov
mov
mov
mov
sub
mov
add
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
cmovne
mov
jmp
mov
mov
mov
mov
mov
mov
sub
mov
sub
add
sub
mov
mov
mov
mov
mov
add
sub
sub
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
cmovne
mov
jmp
mov
jmp
mov
mov
mov
jmp
mov
mov
lea
pop
pop
pop
pop
ret
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
jmp
mov
mov
mov
jmp
lea
mov
imul
add
mov
mov
mov
jmp
mov
jmp
mov
mov
add
add
sub
mov
mov
mov
jmp
nop
push
mov
push
push
push
sub
mov
mov
mov
mov
mov
mov
sub
sub
add
imul
and
cmp
sete
and
mov
cmp
setl
and
mov
mov
mov
mov
mov
mov
mov
sub
mov
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
jmp
mov
mov
mov
mov
mov
mov
xor
mov
mov
xor
xor
mov
and
and
mov
and
and
or
or
xor
mov
or
xor
or
and
or
test
mov
cmovne
mov
jmp
mov
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
call
mov
mov
mov
call
mov
mov
mov
call
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
sub
add
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
mov
mov
cmovne
mov
jmp
mov
jmp
mov
mov
mov
mov
mov
mov
add
sub
sub
imul
and
cmp
sete
cmp
setl
mov
xor
mov
mov
xor
xor
mov
and
and
mov
and
and
or
or
xor
mov
or
xor
or
and
or
test
mov
cmovne
mov
jmp
mov
mov
mov
mov
mov
cmp
setb
and
mov
mov
mov
mov
sub
sub
add
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
cmovne
mov
jmp
mov
mov
mov
test
cmovne
mov
jmp
mov
mov
mov
mov
mov
add
sub
sub
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
cmovne
mov
jmp
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmp
sete
and
mov
mov
mov
mov
sub
sub
add
imul
and
cmp
sete
cmp
setl
mov
xor
mov
mov
xor
xor
mov
and
and
mov
and
and
or
or
xor
mov
or
xor
or
and
or
test
mov
cmovne
mov
jmp
mov
mov
mov
test
cmovne
mov
jmp
mov
mov
mov
mov
mov
mov
add
sub
sub
imul
and
cmp
sete
cmp
setl
mov
xor
mov
mov
xor
xor
mov
and
and
mov
and
and
or
or
xor
mov
or
xor
or
and
or
test
mov
cmovne
mov
jmp
mov
mov
mov
mov
mov
mov
shl
add
mov
mov
mov
mov
mov
add
sub
sub
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
cmovne
mov
jmp
mov
jmp
mov
jmp
mov
mov
mov
mov
mov
add
sub
sub
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
cmovne
mov
jmp
mov
mov
mov
mov
mov
mov
mov
sub
mov
sub
add
mov
sub
mov
mov
mov
mov
sub
mov
mov
add
imul
and
cmp
sete
cmp
setl
mov
xor
mov
xor
xor
mov
and
and
mov
mov
and
mov
mov
and
or
mov
or
xor
or
xor
or
and
or
test
mov
cmovne
mov
jmp
mov
jmp
mov
mov
mov
jmp
mov
mov
lea
pop
pop
pop
pop
ret
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
jmp
mov
mov
mov
mov
mov
jmp
mov
mov
mov
mov
mov
mov
mov
jmp
mov
mov
mov
mov
shl
add
mov
mov
mov
jmp
mov
mov
add
add
sub
mov
mov
mov
jmp
data16
push
mov
push
push
push
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
mov
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
jmp
mov
mov
mov
cmp
cmovb
mov
jmp
mov
mov
mov
mov
mov
cmp
cmove
mov
jmp
mov
mov
mov
mov
mov
mov
sub
mov
mov
add
imul
and
cmp
sete
cmp
setl
mov
xor
mov
xor
xor
mov
and
and
mov
mov
and
mov
mov
and
or
mov
or
xor
or
xor
or
and
or
test
mov
cmovne
mov
jmp
mov
mov
mov
mov
shl
add
mov
mov
mov
mov
sub
sub
add
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
cmovne
mov
jmp
mov
jmp
mov
mov
mov
mov
mov
mov
sub
sub
add
imul
and
cmp
sete
cmp
setl
mov
xor
mov
mov
xor
xor
mov
and
and
mov
and
and
or
or
xor
mov
or
xor
or
and
or
test
mov
cmovne
mov
jmp
mov
mov
mov
mov
mov
add
sub
sub
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
cmovne
mov
jmp
mov
jmp
mov
mov
mov
mov
mov
mov
sub
mov
mov
add
imul
and
cmp
sete
cmp
setl
mov
xor
mov
xor
xor
mov
and
and
mov
mov
and
mov
mov
and
or
mov
or
xor
or
xor
or
and
or
test
mov
cmovne
mov
jmp
mov
mov
mov
add
add
sub
mov
mov
mov
mov
sub
sub
add
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
cmovne
mov
jmp
mov
jmp
mov
mov
jmp
mov
add
pop
pop
pop
pop
ret
mov
mov
shl
add
mov
mov
jmp
mov
jmp
mov
sub
add
add
mov
mov
jmp
nop
push
mov
push
push
push
sub
mov
mov
mov
mov
mov
mov
add
sub
sub
imul
and
cmp
sete
and
mov
cmp
setl
and
mov
mov
mov
mov
mov
mov
mov
sub
mov
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
jmp
mov
mov
mov
mov
mov
and
xor
or
test
cmovne
mov
jmp
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
call
mov
mov
mov
call
mov
mov
mov
call
mov
mov
mov
call
mov
mov
mov
call
mov
mov
mov
call
mov
mov
mov
call
mov
mov
mov
call
mov
mov
mov
call
mov
mov
mov
call
mov
mov
mov
call
mov
mov
mov
call
mov
mov
mov
call
mov
mov
mov
call
mov
mov
mov
call
mov
mov
mov
call
mov
mov
mov
call
mov
mov
mov
call
mov
mov
mov
call
mov
mov
mov
call
mov
mov
mov
call
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmp
sete
and
mov
mov
mov
mov
sub
mov
add
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
mov
mov
cmovne
mov
jmp
mov
mov
mov
test
cmovne
mov
jmp
mov
mov
mov
mov
mov
mov
sub
sub
add
imul
and
cmp
sete
cmp
setl
mov
xor
mov
mov
xor
xor
mov
and
and
mov
and
and
or
or
xor
mov
or
xor
or
and
or
test
mov
cmovne
mov
jmp
mov
mov
mov
mov
cmp
sete
and
mov
mov
mov
mov
sub
sub
add
imul
and
cmp
sete
cmp
setl
mov
xor
mov
mov
xor
xor
mov
and
and
mov
and
and
or
or
xor
mov
or
xor
or
and
or
test
mov
cmovne
mov
jmp
mov
mov
mov
test
cmovne
mov
jmp
mov
mov
mov
mov
mov
sub
mov
add
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
cmovne
mov
jmp
mov
mov
mov
cmp
sete
and
mov
mov
mov
mov
add
sub
sub
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
cmovne
mov
jmp
mov
mov
mov
test
cmovne
mov
jmp
mov
mov
mov
jmp
mov
mov
cmp
cmove
mov
jmp
mov
mov
mov
mov
mov
add
sub
sub
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
cmovne
mov
jmp
mov
mov
mov
mov
sub
mov
add
imul
and
cmp
sete
and
mov
cmp
setl
and
mov
mov
mov
mov
mov
sub
mov
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
jmp
mov
mov
mov
mov
mov
mov
xor
mov
mov
xor
xor
mov
and
and
mov
and
and
or
or
xor
mov
or
xor
or
and
or
test
mov
cmovne
mov
jmp
lea
add
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
call
mov
mov
mov
mov
mov
sub
mov
mov
mov
mov
call
add
mov
mov
mov
sub
mov
mov
mov
mov
call
add
mov
mov
mov
mov
cmp
sete
and
mov
mov
mov
mov
sub
sub
add
imul
and
cmp
sete
cmp
setl
mov
xor
mov
xor
xor
mov
mov
and
and
mov
mov
and
mov
mov
and
mov
mov
or
mov
mov
mov
or
mov
xor
mov
or
xor
or
and
or
test
cmovne
mov
jmp
mov
mov
mov
test
cmovne
mov
jmp
mov
mov
mov
jmp
lea
mov
mov
mov
mov
sub
mov
mov
mov
mov
call
add
mov
mov
cmp
cmovl
mov
jmp
mov
mov
mov
jmp
mov
mov
mov
jmp
lea
add
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
sub
mov
mov
mov
mov
mov
call
add
mov
mov
mov
sub
mov
mov
mov
mov
call
add
mov
mov
jmp
mov
mov
mov
mov
mov
mov
mov
cmp
setl
and
mov
mov
mov
mov
sub
sub
add
imul
and
cmp
sete
cmp
setl
mov
xor
mov
mov
xor
xor
mov
and
and
mov
and
and
or
or
xor
mov
or
xor
or
and
or
test
mov
cmovne
mov
jmp
mov
mov
mov
test
cmovne
mov
jmp
mov
mov
mov
jmp
mov
jmp
mov
mov
mov
mov
mov
mov
sub
mov
add
imul
and
cmp
sete
and
mov
cmp
setl
and
mov
mov
mov
mov
mov
mov
sub
mov
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
jmp
mov
mov
mov
mov
mov
mov
xor
mov
mov
xor
xor
mov
and
and
mov
and
and
or
or
xor
mov
or
xor
or
and
or
test
mov
cmovne
mov
jmp
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
call
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
mov
add
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
mov
mov
cmovne
mov
jmp
mov
jmp
mov
mov
mov
mov
mov
sub
mov
add
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
cmovne
mov
jmp
mov
mov
mov
mov
mov
cmp
setb
and
mov
mov
mov
mov
sub
sub
add
imul
and
cmp
sete
cmp
setl
mov
xor
mov
mov
xor
xor
mov
and
and
mov
and
and
or
or
xor
mov
or
xor
or
and
or
test
mov
cmovne
mov
jmp
mov
mov
mov
test
cmovne
mov
jmp
mov
mov
lea
mov
imul
add
mov
mov
cmp
cmove
mov
jmp
mov
mov
mov
mov
mov
mov
sub
mov
mov
add
imul
and
cmp
sete
cmp
setl
mov
xor
mov
xor
xor
mov
and
and
mov
mov
and
mov
mov
and
or
mov
or
xor
or
xor
or
and
or
test
mov
cmovne
mov
jmp
mov
mov
lea
mov
imul
add
mov
mov
mov
mov
mov
add
sub
sub
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
cmovne
mov
jmp
mov
jmp
mov
mov
mov
mov
mov
mov
add
sub
sub
imul
and
cmp
sete
cmp
setl
mov
xor
mov
mov
xor
xor
mov
and
and
mov
and
and
or
or
xor
mov
or
xor
or
and
or
test
mov
cmovne
mov
jmp
mov
mov
mov
mov
mov
mov
sub
sub
add
imul
and
cmp
sete
cmp
setl
mov
xor
mov
mov
xor
xor
mov
and
and
mov
and
and
or
or
xor
mov
or
xor
or
and
or
test
mov
cmovne
mov
jmp
mov
jmp
mov
mov
mov
mov
mov
mov
sub
mov
mov
add
imul
and
cmp
sete
cmp
setl
mov
xor
mov
xor
xor
mov
and
and
mov
mov
and
mov
mov
and
or
mov
or
xor
or
xor
or
and
or
test
mov
cmovne
mov
jmp
mov
mov
mov
mov
mov
mov
sub
mov
sub
add
mov
sub
mov
mov
mov
mov
sub
mov
add
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
cmovne
mov
jmp
mov
jmp
mov
mov
mov
jmp
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
jmp
mov
mov
mov
jmp
lea
mov
imul
add
mov
mov
mov
jmp
mov
jmp
mov
mov
mov
sub
sub
mov
mov
mov
jmp
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmp
cmove
mov
jmp
mov
mov
mov
jmp
mov
mov
mov
add
mov
mov
call
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
shl
mov
mov
add
shl
add
mov
mov
mov
mov
mov
shl
mov
mov
mov
shl
mov
sub
mov
sub
add
sub
mov
mov
add
shl
add
mov
mov
mov
mov
sub
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
cmp
cmove
mov
jmp
mov
mov
mov
mov
mov
mov
sub
sub
add
imul
and
cmp
sete
cmp
setl
mov
xor
mov
mov
xor
xor
mov
and
and
mov
and
and
or
or
xor
mov
or
xor
or
and
or
test
mov
cmovne
mov
jmp
mov
mov
mov
mov
mov
mov
mov
add
sub
sub
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
cmovne
mov
jmp
mov
jmp
mov
mov
mov
mov
mov
sub
mov
add
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
cmovne
mov
jmp
mov
mov
mov
mov
mov
mov
cmp
setne
and
mov
mov
mov
sub
mov
mov
add
imul
and
cmp
sete
cmp
setl
mov
xor
mov
xor
xor
mov
and
and
mov
mov
and
mov
mov
and
or
mov
or
xor
or
xor
or
and
or
test
mov
cmovne
mov
jmp
mov
mov
mov
test
cmovne
mov
jmp
mov
mov
mov
mov
mov
sub
mov
add
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
cmovne
mov
jmp
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
mov
mov
add
imul
and
cmp
sete
cmp
setl
mov
xor
mov
xor
xor
mov
and
and
mov
mov
and
mov
mov
and
or
mov
or
xor
or
xor
or
and
or
test
mov
cmovne
mov
jmp
mov
jmp
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
add
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
jmp
mov
mov
mov
mov
mov
cmp
cmovb
mov
jmp
mov
mov
mov
mov
add
add
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
sub
sub
imul
and
cmp
sete
and
mov
cmp
setl
and
mov
mov
mov
mov
mov
mov
mov
sub
mov
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
jmp
mov
mov
mov
mov
mov
and
xor
or
test
cmovne
mov
jmp
mov
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
call
mov
mov
mov
call
mov
mov
mov
call
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
sub
sub
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
mov
mov
cmovne
mov
jmp
mov
jmp
mov
mov
mov
mov
mov
mov
sub
sub
add
imul
and
cmp
sete
cmp
setl
mov
xor
mov
mov
xor
xor
mov
and
and
mov
and
and
or
or
xor
mov
or
xor
or
and
or
test
mov
cmovne
mov
jmp
mov
mov
mov
mov
mov
cmp
setb
and
mov
mov
mov
mov
sub
sub
add
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
cmovne
mov
jmp
mov
mov
mov
test
cmovne
mov
jmp
mov
mov
mov
mov
mov
mov
sub
sub
add
imul
and
cmp
sete
cmp
setl
mov
xor
mov
mov
xor
xor
mov
and
and
mov
and
and
or
or
xor
mov
or
xor
or
and
or
test
mov
cmovne
mov
jmp
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmp
sete
and
mov
mov
mov
mov
add
sub
sub
imul
and
cmp
sete
cmp
setl
mov
xor
mov
mov
xor
xor
mov
and
and
mov
and
and
or
or
xor
mov
or
xor
or
and
or
test
mov
cmovne
mov
jmp
mov
mov
mov
test
cmovne
mov
jmp
mov
mov
mov
mov
mov
sub
sub
add
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
cmovne
mov
jmp
mov
mov
mov
mov
mov
mov
shl
add
mov
mov
mov
mov
mov
sub
sub
add
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
cmovne
mov
jmp
mov
jmp
mov
jmp
mov
mov
mov
mov
mov
mov
sub
sub
add
imul
and
cmp
sete
cmp
setl
mov
xor
mov
mov
xor
xor
mov
and
and
mov
and
and
or
or
xor
mov
or
xor
or
and
or
test
mov
cmovne
mov
jmp
mov
mov
mov
mov
mov
mov
sub
sub
mov
mov
mov
mov
mov
sub
sub
add
imul
and
cmp
sete
cmp
setl
mov
xor
mov
mov
xor
xor
mov
and
and
mov
and
and
or
or
xor
mov
or
xor
or
and
or
test
mov
cmovne
mov
jmp
mov
jmp
mov
mov
mov
jmp
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
jmp
mov
mov
mov
mov
mov
jmp
mov
mov
mov
mov
mov
mov
mov
jmp
mov
mov
mov
mov
shl
add
mov
mov
mov
jmp
mov
mov
sub
add
add
mov
mov
mov
jmp
mov
mov
mov
mov
mov
mov
mov
mov
cmp
cmovne
mov
jmp
mov
mov
mov
mov
mov
mov
sub
add
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
mov
sub
add
mov
sub
mov
sub
mov
sub
add
mov
sub
sub
sub
add
mov
mov
mov
mov
mov
mov
mov
mov
sub
mov
sub
add
sub
mov
mov
mov
mov
add
add
sub
mov
mov
mov
jmp
mov
mov
mov
mov
mov
sub
sub
add
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
cmovne
mov
jmp
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
sub
add
imul
and
cmp
sete
and
mov
cmp
setl
and
mov
mov
mov
mov
mov
mov
mov
sub
mov
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
jmp
mov
mov
mov
mov
mov
mov
xor
mov
mov
xor
xor
mov
and
and
mov
and
and
or
or
xor
mov
or
xor
or
and
or
test
mov
cmovne
mov
jmp
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
call
mov
mov
mov
call
mov
mov
mov
call
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
mov
add
imul
and
cmp
sete
cmp
setl
mov
xor
mov
xor
mov
xor
mov
and
and
mov
and
and
or
or
xor
or
xor
or
and
or
test
mov
mov
cmovne
mov
jmp
mov
jmp
mov
mov
mov
mov
mov
sub
sub
add
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
cmovne
mov
jmp
mov
mov
mov
mov
mov
mov
cmp
setb
and
mov
mov
mov
mov
add
sub
sub
imul
and
cmp
sete
cmp
setl
mov
xor
mov
mov
xor
xor
mov
and
and
mov
and
and
or
or
xor
mov
or
xor
or
and
or
test
mov
cmovne
mov
jmp
mov
mov
mov
test
cmovne
mov
jmp
mov
mov
mov
mov
mov
mov
sub
mov
mov
add
imul
and
cmp
sete
cmp
setl
mov
xor
mov
xor
xor
mov
and
and
mov
mov
and
mov
mov
and
or
mov
or
xor
or
xor
or
and
or
test
mov
cmovne
mov
jmp
mov
mov
mov
mov
mov
mov
mov
mov
cmp
sete
and
mov
mov
mov
mov
add
sub
sub
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
cmovne
mov
jmp
mov
mov
mov
test
cmovne
mov
jmp
mov
mov
mov
mov
mov
sub
sub
add
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
cmovne
mov
jmp
mov
mov
mov
mov
mov
mov
mov
shl
add
mov
mov
mov
mov
mov
add
sub
sub
imul
and
cmp
sete
cmp
setl
mov
xor
mov
mov
xor
xor
mov
and
and
mov
and
and
or
or
xor
mov
or
xor
or
and
or
test
mov
cmovne
mov
jmp
mov
jmp
mov
jmp
mov
mov
mov
mov
mov
mov
sub
sub
add
imul
and
cmp
sete
cmp
setl
mov
xor
mov
mov
xor
xor
mov
and
and
mov
and
and
or
or
xor
mov
or
xor
or
and
or
test
mov
cmovne
mov
jmp
mov
mov
mov
mov
mov
mov
mov
sub
sub
mov
mov
mov
mov
sub
mov
mov
add
imul
and
cmp
sete
cmp
setl
mov
xor
mov
xor
xor
mov
and
and
mov
mov
and
mov
mov
and
or
mov
or
xor
or
xor
or
and
or
test
mov
cmovne
mov
jmp
mov
jmp
mov
mov
mov
jmp
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
jmp
mov
mov
mov
mov
mov
jmp
mov
mov
mov
mov
mov
mov
mov
jmp
mov
mov
mov
mov
shl
add
mov
mov
mov
jmp
mov
mov
sub
add
add
mov
mov
mov
jmp
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmp
setne
and
mov
mov
mov
sub
mov
add
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
cmovne
mov
jmp
mov
mov
mov
test
cmovne
mov
jmp
mov
mov
mov
mov
mov
add
sub
sub
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
cmovne
mov
jmp
mov
mov
mov
mov
mov
mov
mov
sub
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
add
sub
mov
mov
mov
mov
add
add
sub
mov
mov
mov
mov
mov
add
sub
sub
imul
and
cmp
sete
cmp
setl
mov
xor
mov
mov
xor
xor
mov
and
and
mov
and
and
or
or
xor
mov
or
xor
or
and
or
test
mov
cmovne
mov
jmp
mov
jmp
mov
jmp
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
mov
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
jmp
mov
mov
mov
cmp
cmovb
mov
jmp
mov
mov
mov
mov
mov
cmp
cmove
mov
jmp
mov
mov
mov
mov
mov
mov
sub
mov
mov
add
imul
and
cmp
sete
cmp
setl
mov
xor
mov
xor
xor
mov
and
and
mov
mov
and
mov
mov
and
or
mov
or
xor
or
xor
or
and
or
test
mov
cmovne
mov
jmp
mov
mov
mov
mov
mov
shl
add
mov
mov
mov
mov
add
sub
sub
imul
and
cmp
sete
cmp
setl
mov
xor
mov
mov
xor
xor
mov
and
and
mov
and
and
or
or
xor
mov
or
xor
or
and
or
test
mov
cmovne
mov
jmp
mov
jmp
mov
mov
mov
mov
mov
mov
sub
sub
add
imul
and
cmp
sete
cmp
setl
mov
xor
mov
mov
xor
xor
mov
and
and
mov
and
and
or
or
xor
mov
or
xor
or
and
or
test
mov
cmovne
mov
jmp
mov
mov
mov
mov
mov
sub
sub
add
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
cmovne
mov
jmp
mov
jmp
mov
mov
mov
mov
mov
mov
sub
mov
mov
add
imul
and
cmp
sete
cmp
setl
mov
xor
mov
xor
xor
mov
and
and
mov
mov
and
mov
mov
and
or
mov
or
xor
or
xor
or
and
or
test
mov
cmovne
mov
jmp
mov
mov
mov
mov
sub
add
add
mov
mov
mov
mov
add
sub
sub
imul
and
cmp
sete
cmp
setl
mov
xor
mov
mov
xor
xor
mov
and
and
mov
and
and
or
or
xor
mov
or
xor
or
and
or
test
mov
cmovne
mov
jmp
mov
jmp
mov
mov
jmp
mov
mov
shl
add
mov
mov
jmp
mov
jmp
mov
sub
add
add
mov
mov
jmp
mov
mov
mov
mov
mov
cmp
cmovne
mov
jmp
mov
mov
mov
mov
mov
sub
mov
add
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
cmovne
mov
jmp
mov
mov
mov
mov
mov
mov
mov
mov
sub
mov
mov
add
imul
and
cmp
sete
cmp
setl
mov
xor
mov
xor
xor
mov
and
and
mov
mov
and
mov
mov
and
or
mov
or
xor
or
xor
or
and
or
test
mov
cmovne
mov
jmp
mov
jmp
mov
mov
mov
mov
mov
sub
sub
add
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
cmovne
mov
jmp
mov
mov
mov
mov
mov
mov
cmp
setb
and
mov
mov
mov
mov
sub
sub
add
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
cmovne
mov
jmp
mov
mov
mov
test
cmovne
mov
jmp
mov
mov
mov
mov
mov
mov
add
sub
sub
imul
and
cmp
sete
cmp
setl
mov
xor
mov
mov
xor
xor
mov
and
and
mov
and
and
or
or
xor
mov
or
xor
or
and
or
test
mov
cmovne
mov
jmp
mov
mov
mov
mov
mov
mov
mov
mov
movzx
mov
mov
sub
mov
mov
sub
mov
mov
mov
mov
movzx
mov
xor
mov
and
xor
and
or
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
movzx
cmp
sete
and
mov
mov
mov
mov
sub
sub
add
imul
and
cmp
sete
cmp
setl
mov
xor
mov
xor
xor
mov
and
and
mov
mov
and
mov
mov
and
or
mov
or
xor
or
xor
or
and
or
test
mov
cmovne
mov
jmp
mov
mov
mov
test
cmovne
mov
jmp
mov
mov
mov
jmp
mov
mov
mov
mov
mov
mov
add
sub
sub
imul
and
cmp
sete
cmp
setl
mov
xor
mov
mov
xor
xor
mov
and
and
mov
and
and
or
or
xor
mov
or
xor
or
and
or
test
mov
cmovne
mov
jmp
mov
mov
mov
mov
mov
sub
mov
add
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
cmovne
mov
jmp
mov
jmp
mov
mov
mov
sub
sub
mov
mov
mov
mov
sub
add
add
mov
mov
mov
jmp
mov
mov
mov
mov
sub
add
add
mov
mov
mov
jmp
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
mov
sub
add
sub
mov
mov
mov
jmp
mov
mov
mov
mov
mov
mov
sub
mov
mov
add
imul
and
cmp
sete
cmp
setl
mov
xor
mov
xor
xor
mov
and
and
mov
mov
and
mov
mov
and
or
mov
or
xor
or
xor
or
and
or
test
mov
cmovne
mov
jmp
mov
mov
mov
mov
mov
mov
sub
mov
mov
add
imul
and
cmp
sete
cmp
setl
mov
xor
mov
xor
xor
mov
and
and
mov
mov
and
mov
mov
and
or
mov
or
xor
or
xor
or
and
or
test
mov
cmovne
mov
jmp
mov
jmp
mov
mov
mov
mov
mov
jmp
mov
mov
mov
mov
mov
sub
sub
add
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
cmovne
mov
jmp
mov
mov
mov
mov
mov
mov
mov
mov
sub
sub
add
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
cmovne
mov
jmp
mov
lea
pop
pop
pop
pop
ret
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
jmp
mov
mov
mov
jmp
mov
mov
mov
jmp
mov
mov
mov
mov
sub
sub
add
imul
and
cmp
sete
and
mov
cmp
setl
and
mov
mov
mov
mov
mov
sub
mov
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
jmp
mov
mov
mov
mov
mov
mov
xor
mov
mov
xor
xor
mov
and
and
mov
and
and
or
or
xor
mov
or
xor
or
and
or
test
mov
cmovne
mov
jmp
lea
add
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
call
mov
mov
mov
mov
mov
sub
mov
mov
mov
mov
call
add
mov
mov
mov
sub
mov
mov
mov
mov
call
add
mov
mov
mov
cmp
sete
and
mov
mov
mov
mov
sub
sub
add
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
cmovne
mov
jmp
mov
mov
mov
test
cmovne
mov
jmp
mov
mov
mov
jmp
lea
mov
mov
mov
mov
sub
mov
mov
mov
mov
call
add
mov
mov
cmp
cmovl
mov
jmp
mov
mov
mov
jmp
mov
mov
mov
jmp
lea
add
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
sub
mov
mov
mov
mov
mov
call
add
mov
mov
mov
sub
mov
mov
mov
mov
call
add
mov
mov
jmp
mov
mov
mov
mov
mov
jmp
mov
mov
mov
jmp
mov
mov
mov
jmp
mov
mov
mov
mov
mov
mov
jmp
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
sub
sub
imul
and
cmp
sete
and
mov
cmp
setl
and
mov
mov
mov
mov
mov
mov
mov
sub
mov
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
jmp
mov
mov
mov
mov
mov
mov
xor
mov
mov
xor
xor
mov
and
and
mov
and
and
or
or
xor
mov
or
xor
or
and
or
test
mov
cmovne
mov
jmp
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
call
mov
mov
mov
call
mov
mov
mov
call
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
sub
add
imul
and
cmp
sete
cmp
setl
mov
xor
mov
xor
mov
xor
mov
and
and
mov
and
and
or
or
xor
or
xor
or
and
or
test
mov
mov
cmovne
mov
jmp
mov
jmp
mov
mov
mov
mov
mov
mov
sub
sub
add
imul
and
cmp
sete
cmp
setl
mov
xor
mov
mov
xor
xor
mov
and
and
mov
and
and
or
or
xor
mov
or
xor
or
and
or
test
mov
cmovne
mov
jmp
mov
mov
mov
mov
mov
cmp
setb
and
mov
mov
mov
mov
sub
sub
add
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
cmovne
mov
jmp
mov
mov
mov
test
cmovne
mov
jmp
mov
mov
mov
mov
mov
mov
add
sub
sub
imul
and
cmp
sete
cmp
setl
mov
xor
mov
mov
xor
xor
mov
and
and
mov
and
and
or
or
xor
mov
or
xor
or
and
or
test
mov
cmovne
mov
jmp
mov
mov
mov
mov
mov
mov
mov
mov
cmp
sete
and
mov
mov
mov
mov
sub
sub
add
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
cmovne
mov
jmp
mov
mov
mov
test
cmovne
mov
jmp
mov
mov
mov
mov
mov
sub
mov
add
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
cmovne
mov
jmp
mov
mov
mov
mov
mov
mov
mov
shl
add
mov
mov
mov
mov
mov
sub
sub
add
imul
and
cmp
sete
cmp
setl
mov
xor
mov
mov
xor
xor
mov
and
and
mov
and
and
or
or
xor
mov
or
xor
or
and
or
test
mov
cmovne
mov
jmp
mov
jmp
mov
jmp
mov
mov
mov
mov
mov
add
sub
sub
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
cmovne
mov
jmp
mov
mov
mov
mov
mov
mov
sub
mov
sub
add
mov
sub
mov
mov
mov
mov
sub
mov
add
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
cmovne
mov
jmp
mov
jmp
mov
mov
mov
jmp
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
jmp
mov
mov
mov
mov
mov
jmp
mov
mov
mov
mov
mov
mov
mov
jmp
mov
mov
mov
mov
shl
add
mov
mov
mov
jmp
mov
mov
sub
add
add
mov
mov
mov
jmp
mov
mov
mov
mov
mov
mov
mov
jmp
mov
mov
mov
mov
mov
add
add
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
add
sub
mov
mov
mov
mov
mov
sub
mov
sub
add
sub
mov
mov
mov
jmp
mov
mov
mov
jmp
mov
mov
mov
mov
mov
jmp
mov
mov
mov
mov
movzx
mov
mov
mov
add
add
sub
mov
mov
mov
mov
movzx
mov
xor
mov
and
xor
and
or
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
jmp
mov
jmp
mov
jmp
mov
mov
mov
jmp
nop
push
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
and
sub
jmp
push
ret
jmp
call
jmp
push
jmp
push
jmp
push
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
or
dec
adc
and
add
add
add
xchg
stos
lds
add
(bad)
pop
and
add
jg
adc
mov
and
fiadd
add
jns
xor
ret
add
jmp
std
js
add
mov
mov
js
and
add
add
pop
add
add
add
add
movs
fsub
pop
mov
test
jle
add
xchg
test
add
popa
add
int
add
add
add
mov
mov
cmp
add
sbb
ja
add
xor
sti
xor
mov
add
mov
pusha
add
pcmpgtd
pop
add
jmp
clc
test
and
out
xor
add
jg
dec
push
add
add
add
sub
mov
mov
add
or
mov
mov
sub
mov
jg
xor
add
mov
adc
test
add
add
(bad)
sbb
add
mov
fwait
pop
sub
add
sub
cmp
je
jmp
mov
ret
add
mov
jg
jmp
mov
sub
mov
je
jmp
mov
jle
mov
movs
mov
jg
jmp
mov
sub
add
jns
aas
test
or
push
popa
add
int
add
sub
mov
cmc
(bad)
and
add
jmp
mov
and
add
jecxz
mov
and
add
add
fwait
mov
dec
fiadd
add
add
adc
std
add
add
jg
jmp
scas
test
mov
dec
movs
mov
push
loopne
je
jmp
mov
sub
mov
psadbw
popa
ret
add
jmp
test
jb
add
mov
cmc
ficomp
test
add
add
mov
push
test
add
add
(bad)
cmp
adc
jmp
mov
sub
lock
popa
ret
add
test
or
add
push
cmp
add
or
mov
into
mov
psrlw
add
add
mov
sub
xchg
sti
and
mov
add
test
mov
add
or
test
add
popa
out
cmp
test
pop
add
add
add
add
mov
into
mov
nop
rol
add
push
loopne
in
ins
cld
fisttp
mov
add
test
jg
mov
sub
cmp
je
jmp
mov
sub
mov
jg
jmp
mov
pop
in
leave
cld
fisttp
add
pop
fs
or
add
add
pop
cmp
add
jg
popa
push
mov
add
add
jg
mov
add
add
and
add
add
sub
clc
repnz
je
jmp
xor
fidivr
add
add
mov
add
(bad)
and
loopne
jmp
mov
sub
mov
je
jmp
pop
xor
cmp
add
sub
dec
ins
and
add
fnstcw
add
and
aas
add
add
cli
add
push
dec
mov
and
add
add
xlat
adc
add
pop
hlt
test
lea
add
mov
int3
(bad)
and
jmp
add
push
test
and
sub
test
add
add
test
push
add
add
add
sub
push
test
lods
jg
adc
(bad)
and
jns
jmp
sub
mov
test
add
je
jmp
xor
and
pop
add
mov
cmps
fwait
and
add
out
(bad)
and
mov
jmp
mov
sub
not
mov
add
icebp
add
add
add
sub
mov
and
add
add
(bad)
and
add
jmp
dec
test
add
add
mov
cwde
fld
add
div
add
jmp
mov
cli
sub
adc
and
cmp
add
sub
add
push
jmp
mov
xchg
loop
add
sub
cdq
or
add
cmp
add
jns
add
mov
sub
mov
orps
add
jae
and
add
mov
mov
xor
movs
add
xlat
adc
add
addr16
add
mov
push
mov
cmp
add
jbe
adc
add
add
add
mov
and
add
and
mov
cmc
test
push
add
cmp
xlat
and
add
add
mov
jl
(bad)
and
add
mov
cmp
add
dec
mov
ror
test
pop
add
jmp
mov
and
add
add
mov
mov
push
add
jmp
mov
and
fild
add
mov
sete
or
xor
mov
and
add
jmp
dec
pusha
popf
and
jg
jmp
mov
or
add
mov
push
add
mov
pushf
add
mov
sub
fiadd
jg
jmp
mov
jg
jo
push
cdq
inc
and
add
pusha
add
mov
les
lds
pusha
popf
and
jl
add
add
(bad)
mov
test
add
add
mov
pop
test
loopne
jmp
xchg
test
jle
mov
mov
(bad)
jecxz
jmp
add
mov
sub
mov
jl
xchg
or
add
mov
test
add
add
popf
cmp
push
inc
and
stos
(bad)
and
add
mov
pop
sub
jge
arpl
test
popa
add
inc
jmp
and
fadd
jae
out
mov
sbb
test
add
add
add
and
add
push
sub
mov
je
xor
add
add
add
sub
mov
je
gs
add
and
add
sub
dec
lods
int
(bad)
test
and
add
mov
sub
fldenv
je
or
cmp
jg
mov
mov
mov
cmp
cmove
mov
and
add
fucomi
add
popa
jnp
adc
mov
sbb
jp
mov
mov
lock
mov
in
add
mov
ds
push
mov
add
add
ins
imul
out
add
add
add
xchg
mov
setl
test
sub
repnz
sti
(bad)
mov
inc
add
adc
hlt
or
fld
mov
add
aaa
cld
test
mov
cmovne
mov
mov
retf
or
pop
bound
lds
push
mov
add
add
fild
mov
movzx
inc
cli
movs
pop
jmp
add
mov
mov
lock
mov
ss
jmp
add
add
fmul
scas
test
pop
mov
cmp
sete
or
mov
pushf
(bad)
mov
and
test
cmovne
mov
jmp
mov
xchg
fst
test
popf
test
movq
ja
add
mov
add
fdivr
and
lea
mov
lock
xchg
jmp
mov
mov
mov
mov
mov
or
repz
push
xor
and
sbb
xchg
xchg
sbb
aad
fincstp
shl
repz
test
div
cmovne
push
std
and
add
add
mov
retf
or
xchg
add
mov
ins
add
add
ja
mov
mov
and
movs
add
cmp
setne
and
push
add
xchg
dec
lock
fwait
cmp
mov
ret
test
xor
jmp
add
add
test
sbb
add
add
cmp
jl
mov
mov
ret
mov
inc
and
mov
xor
xor
adc
rcr
and
inc
and
pop
hlt
or
and
or
xor
add
or
test
mov
out
icebp
mov
jmp
mov
mov
mov
add
ret
inc
ror
cli
jmp
mov
mov
fdiv
add
sbb
mov
cmc
sbb
add
jmp
jnp
xchg
dec
xor
mov
mov
lock
mov
mov
sub
sub
add
xchg
scas
repz
cmp
pcmpeqb
xor
pushf
ret
mov
lahf
idiv
enter
fdiv
xor
mov
xor
ficomp
mov
and
and
or
loope
fstp
sub
or
retf
mov
cld
test
mov
cmovne
and
push
add
jmp
mov
mov
xor
add
add
add
add
add
add
mov
jle
imul
or
xor
add
xchg
ret
jecxz
add
setl
push
rcl
xor
or
mul
add
inc
dec
pop
add
pop
cwde
add
mov
or
add
add
add
add
mov
js
fwait
and
add
dec
xor
cmp
add
jge
ret
xchg
jmp
mov
ret
add
add
add
mov
xor
and
add
add
push
in
add
add
add
mov
add
cmp
(bad)
push
add
add
add
mov
add
mov
pop
add
add
mov
inc
pusha
ret
add
add
add
pop
push
cmp
and
les
mov
add
pop
pop
ins
mov
pop
arpl
add
add
mov
(bad)
sbb
out
aaa
mov
daa
pop
scas
xlat
and
and
aas
xchg
mov
jmp
mov
and
xor
or
das
mov
cmovne
mov
jmp
mov
mov
mov
mov
mov
les
mov
add
add
xchg
fld
and
add
push
add
add
sub
push
inc
and
mov
and
sub
add
mov
add
sete
and
hlt
xor
push
ret
xor
push
mov
(bad)
mov
mov
xchg
push
arpl
or
mov
or
maskmovq
test
jp
pushf
sbb
or
mul
mov
bswap
inc
push
stos
and
add
gs
mov
jns
sub
cdq
repnz
mov
hlt
add
add
ret
inc
ror
and
mov
cli
aad
push
push
add
inc
mov
fimul
add
add
mov
mov
call
mov
mov
or
mov
and
sti
add
aad
mov
cmp
pop
inc
sub
add
add
adc
mov
mov
movzx
push
xchg
and
add
add
mov
add
cs
and
fadd
add
lds
push
jmp
xchg
cmp
das
add
add
add
jge
ds
jmp
add
add
ret
mov
shr
scas
repz
out
add
add
add
xchg
mov
adc
movups
test
push
ret
add
and
mov
and
and
or
or
adc
scas
inc
and
aaa
(bad)
aas
test
xlat
or
les
mov
adc
and
add
mov
cmps
shr
mov
mov
mov
mov
mov
xor
fwait
in
jmp
add
sub
imul
repnz
and
add
sete
add
xchg
pushf
stc
mov
mul
mov
mov
add
nop
in
and
cmp
(bad)
jns
ror
hlt
or
xor
mov
mov
and
loope
das
mov
mov
(bad)
icebp
mov
and
add
add
loope
add
(bad)
sbb
cmp
add
inc
cmp
add
add
mov
sub
add
add
cmp
mul
and
ret
sub
add
jae
cmps
add
mov
xchg
je
add
add
and
loope
add
test
jle
add
lds
jmp
mov
mov
rol
mov
mov
mov
add
mov
jb
sub
pop
popf
add
sbb
and
pop
dec
pop
jg
pop
pushf
(bad)
mov
and
xor
or
test
bswap
jno
test
add
xor
std
popa
add
jnp
hlt
cmp
dec
jmp
sub
add
mov
and
sti
add
adc
mov
mov
aad
or
sub
mov
imul
xor
push
add
cmp
je
mov
add
pushf
mov
add
add
inc
add
and
call
add
add
add
test
pop
(bad)
mov
and
add
add
test
(bad)
mov
push
and
jmp
mov
mov
add
mov
add
mov
mov
add
ret
(bad)
ins
int
fadd
add
sbb
int
add
mov
pop
xchg
jge
arpl
add
add
add
mov
adc
or
pop
jg
test
add
mov
push
mov
jmp
nop
push
mov
push
push
push
and
sub
jmp
call
jmp
push
jmp
push
jmp
push
jmp
push
ret
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
icebp
ins
inc
or
mov
mov
test
pop
test
or
popf
and
mov
mov
mov
jo
and
add
fist
and
mov
add
and
mov
mov
mov
xlat
js
inc
and
pop
inc
imul
std
add
inc
and
push
dec
sbb
mov
scas
ss
scas
mov
(bad)
jg
jmp
mov
test
call
dec
je
jmp
jbe
and
sub
cmps
fwait
dec
rcl
add
mov
sub
mov
mov
icebp
or
jmp
pop
inc
and
sub
mov
push
add
add
mov
(bad)
ja
and
aam
ins
inc
add
jmp
mov
inc
jae
adc
cmp
(bad)
call
add
mov
pusha
mov
out
mov
bswap
inc
add
mov
aaa
add
add
add
sti
xor
(bad)
push
add
add
add
mov
jne
call
repnz
test
add
add
add
mov
fidivr
test
sub
(bad)
xchg
add
fisttp
and
(bad)
inc
and
jg
jmp
out
xchg
push
sub
mov
and
jg
loope
add
imul
push
mov
jg
jmp
push
inc
imul
mov
mov
maxps
out
add
mov
mov
fisubr
inc
and
cld
test
add
add
ror
add
outs
fsubr
ds
and
rsm
sub
add
xor
dec
add
movs
push
jp
ja
and
dec
test
add
ins
jmp
mov
stos
adc
pop
jp
sub
fiadd
das
add
add
ins
fstp
ja
push
add
test
add
add
mov
idiv
add
(bad)
test
add
add
add
vmwrite
add
mov
push
addr16
add
dec
sbb
inc
enter
xchg
pop
(bad)
push
(bad)
add
mov
mov
arpl
and
movzx
cmp
cmovne
mov
pop
sub
pop
lock
fisub
push
rol
add
pop
ins
and
ja
push
and
mov
add
jo
push
and
cmp
inc
inc
rol
and
jmp
arpl
sub
cmp
sbb
mov
sbb
test
mov
add
dec
(bad)
cmps
and
lock
fisubr
mov
push
pop
push
add
add
mov
and
je
adc
jmp
mov
mov
js
cmc
and
mov
fnstenv
ror
fild
add
inc
and
lock
add
add
mov
add
arpl
inc
and
mov
add
sbb
shl
movzx
pop
sbb
movzx
mov
pop
and
add
test
cs
inc
call
mov
xchg
pusha
daa
add
inc
test
test
inc
add
out
add
inc
and
hlt
xchg
mov
test
mov
and
add
add
fisubr
(bad)
jmp
push
mov
push
push
push
and
sub
jmp
call
jmp
push
jmp
push
jmp
push
jmp
push
ret
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
sbb
push
jmp
or
add
test
inc
add
loopne
repz
out
add
test
inc
and
mov
add
add
add
add
loopne
iret
or
add
mov
mov
movzx
mov
popf
jne
push
add
dec
mov
or
movzx
mov
mov
jb
inc
add
mov
add
add
sub
in
dec
add
add
add
jb
and
jl
add
pop
and
mov
inc
and
call
(bad)
jae
sub
add
push
add
add
test
add
adc
loop
call
iret
and
test
push
test
or
add
mov
jmp
popf
jne
adc
xchg
add
mov
add
test
add
and
jmp
add
jg
mov
and
add
and
add
jmp
mov
fist
add
add
arpl
cld
mov
add
loopne
je
jmp
sbb
and
add
adc
mov
and
imul
shrd
add
jg
out
inc
add
add
sub
mov
and
add
sti
je
fild
test
sub
imul
add
add
pusha
add
mov
jg
jmp
mov
sub
mov
punpckhbw
add
jmp
mov
sub
mov
and
sti
or
cmp
jmp
mov
sub
mov
jno
(bad)
xchg
add
add
add
add
call
add
sub
mov
(bad)
or
out
lods
add
and
adc
add
dec
in
test
jae
jmp
mov
sub
mov
jg
jmp
inc
test
add
add
mov
jg
jmp
mov
mov
test
add
or
jmp
mov
add
inc
lds
and
add
add
(bad)
add
add
add
mov
and
bound
sub
mov
pop
pop
in
and
mov
add
add
mov
test
add
sub
pop
add
xor
add
loopne
mov
sub
fwait
test
pusha
add
jg
jmp
mov
push
xchg
mov
mov
test
inc
add
je
jmp
and
test
or
or
push
ror
add
vmread
add
jmp
mov
sub
mov
jg
retf
loopne
add
mov
ret
adc
add
sub
mov
jg
jmp
je
ss
jb
cli
mov
and
add
add
(bad)
fwait
add
add
add
add
imul
sub
mov
jg
cwde
arpl
add
loopne
and
add
add
mov
add
add
sti
push
add
add
mov
add
add
div
sti
add
js
rol
push
adc
add
sub
fwait
test
add
test
or
add
mov
int
dec
test
cwde
and
push
add
add
fld
add
mov
and
test
add
mov
add
std
add
add
add
add
sub
mov
and
add
add
in
je
add
mov
fs
push
add
sub
mov
dec
test
xchg
add
jmp
mov
sub
mov
add
test
add
push
add
and
add
add
xor
(bad)
stc
mov
add
cmp
add
mov
iret
add
add
int
aas
(bad)
cld
mov
and
add
add
arpl
add
add
add
sub
in
inc
and
je
jmp
jo
and
add
add
xchg
jo
mov
paddsb
loop
add
in
add
mov
adc
pop
push
mov
pxor
fsub
loopne
mov
and
push
add
sub
mov
je
jmp
out
test
sub
mov
ins
je
jmp
mov
sub
mov
je
jmp
mov
sub
int3
popa
and
cwde
test
add
add
add
mov
lock
add
jmp
mov
adc
push
add
mov
(bad)
fld
add
jmp
mov
sub
mov
je
jmp
fld
mov
mov
imul
add
jmp
dec
or
adc
fsub
inc
inc
jo
arpl
imul
inc
rol
adc
add
retf
xor
test
inc
add
ins
mov
inc
add
es
or
loope
add
xchg
mov
mov
mov
repz
arpl
xchg
shl
cmp
dec
mov
add
add
pusha
add
jle
mov
and
add
fld
add
mov
mov
mov
add
or
rol
add
push
add
imul
sub
lahf
iret
jo
add
sub
mov
push
dec
add
mov
mov
out
push
add
add
mov
mov
std
xor
mov
push
xchg
mov
mov
mov
mov
aam
push
add
add
clc
sub
imul
add
cmp
(bad)
xchg
mov
setl
mov
test
repz
dec
lds
rcl
cmp
mov
mov
dec
and
test
fadd
add
add
sub
adc
loopne
jmp
stos
push
add
das
das
mov
mov
mov
add
adc
and
inc
and
xlat
add
and
add
xchg
mov
cmp
fadd
push
add
add
add
dec
in
out
xchg
add
cmp
sbb
or
arpl
setl
mov
dec
repz
or
ret
add
movs
ror
add
or
inc
add
mov
add
retf
jp
add
mov
mov
dec
mov
mov
cmp
cmovne
mov
dec
adc
iret
and
pop
push
push
add
mov
mov
mov
mov
sub
in
inc
pop
(bad)
daa
jp
add
add
jmp
pop
lock
imul
and
cmp
sete
sub
sbb
icebp
mul
inc
and
mov
add
shr
add
inc
test
mov
or
rol
retf
jecxz
cld
sahf
les
jl
and
sbb
mov
ss
add
jmp
mov
mov
lds
mov
cmp
out
mov
xor
sub
xor
add
add
xchg
ret
and
mov
mul
mov
mov
mov
sub
sbb
add
imul
add
sbb
test
add
out
pushf
(bad)
mov
and
jne
or
popa
ret
inc
pusha
mov
jmp
mov
inc
push
rcl
push
aad
adc
add
shl
jmp
and
loopne
mov
out
into
test
add
cmp
add
test
add
add
add
mov
mov
mov
dec
add
rol
and
add
add
add
add
push
add
cli
scas
cmps
cmc
(bad)
mov
(bad)
int
sahf
mov
mov
cmp
cmove
add
add
pusha
test
lea
mov
mov
jmp
dec
je
imul
mov
mov
mov
mov
xchg
out
add
pusha
add
clc
add
(bad)
add
add
sti
or
add
(bad)
ror
ret
xor
and
add
arpl
mov
mov
and
test
mov
adc
or
mov
or
shl
or
add
mov
out
(bad)
jo
je
pop
fs
icebp
inc
mov
add
loopne
lods
add
jg
ret
push
mov
mov
mov
mov
int3
repz
sub
and
icebp
fmulp
xor
scas
repz
cmp
movq
cmp
setl
mov
xor
mov
fdiv
sbb
in
and
mov
and
and
xor
push
cmps
mov
jmp
sub
jmp
and
add
je
xor
inc
icebp
or
sub
fnsave
test
pop
add
inc
inc
(bad)
cld
sbb
add
add
stos
ret
xor
(bad)
add
mov
mov
mov
add
and
lods
outs
add
femms
clc
and
cmp
hlt
cwde
mov
setl
mov
mov
imul
repnz
and
mov
sub
fadd
jecxz
push
sub
ror
div
je
sub
xor
or
(bad)
sub
and
in
(bad)
gs
fbld
cmovne
mov
push
jb
add
mov
mov
mov
icebp
dec
xor
xor
jmp
xchg
ret
xor
and
data16
into
movzx
scas
mov
add
jecxz
mov
mov
push
jae
mov
cmp
jmp
add
add
test
add
mov
jl
aam
push
add
add
outs
cdq
jl
and
ficomp
and
sbb
cmpxchg
cmp
setl
cld
xor
in
inc
and
mov
or
mov
and
fistp
shl
and
mov
mov
rcr
mov
mov
or
mov
mov
mov
mov
jmp
xor
mov
or
mov
add
pop
pop
test
cmovne
mov
jmp
les
inc
inc
jbe
in
sub
add
lea
add
and
lock
pop
inc
add
inc
and
jne
arpl
loop
and
call
test
add
add
mov
scas
mov
add
add
add
or
add
add
mov
add
add
sbb
mov
and
hlt
push
rol
add
add
data16
nop
push
jmp
test
add
jg
shl
add
inc
ja
mov
jle
add
add
pop
pop
ret
mov
mov
xchg
imul
xor
add
mov
mov
add
mov
mov
jmp
xchg
test
inc
add
mov
pop
in
jo
mov
adc
add
stc
pop
push
ss
mov
mov
mov
add
loope
xor
xor
or
or
and
rol
mov
mov
mov
jmp
inc
inc
add
rol
and
out
add
add
jmp
data16
push
mov
push
push
push
and
sub
jmp
push
jmp
push
jmp
push
jmp
push
ret
jmp
call
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
stc
inc
or
dec
sbb
sti
sbb
add
or
cmps
add
add
and
add
pop
mov
mov
fmul
add
div
jge
fwait
xlat
mov
jg
jmp
mov
add
mov
mov
(bad)
and
add
jmp
fadd
sub
mov
je
jmp
mov
and
add
clc
mov
add
jg
jmp
mov
and
add
dec
mov
mov
call
shr
push
add
mov
push
popa
je
mov
jg
jmp
test
cdq
pushf
arpl
mov
in
add
or
mov
add
mov
std
(bad)
je
or
jmp
mov
sub
mov
fadd
add
je
jmp
mov
sub
add
mov
add
add
add
add
cmp
retf
and
dec
test
push
add
je
in
mov
test
add
add
repnz
test
add
add
(bad)
and
or
and
sub
add
add
sti
retf
test
adc
pop
add
sysenter
add
add
fild
add
fmul
add
into
test
add
jge
(bad)
and
add
jmp
stc
test
and
adc
fisttp
(bad)
add
test
dec
mov
add
mov
retf
push
or
add
add
scas
jns
add
test
sub
mov
je
jl
add
add
pop
add
mov
punpckhbw
add
bnd
mov
sub
lock
and
add
fwait
je
jmp
daa
test
(bad)
add
add
in
dec
or
add
rol
mov
out
dec
test
add
add
mov
(bad)
lods
add
jmp
int3
test
add
add
mov
and
fwait
add
jge
and
add
jmp
mov
sub
mov
je
jl
add
add
add
mov
jg
push
add
add
mov
sub
mov
cmps
nop
lahf
inc
add
nop
mov
add
neg
repz
add
sub
sti
test
or
add
(bad)
and
and
jmp
mov
add
add
daa
sahf
mov
push
sbb
and
add
add
add
mov
add
test
add
add
test
jg
nop
add
add
test
push
push
outs
mov
cvtdq2ps
add
jmp
mov
mov
cmp
dec
repnz
and
test
inc
jns
stc
and
add
add
gs
add
add
push
jl
or
cmps
scas
xchg
add
mov
out
add
sub
test
sbb
jmp
mov
sub
stc
cmp
xchg
push
repnz
add
jmp
mov
sub
mov
call
mov
add
mov
fild
push
jnp
dec
lods
je
test
sar
fwait
mov
add
add
sub
push
inc
and
jg
jmp
mov
retf
call
cmp
test
ins
add
inc
add
pop
std
inc
test
and
je
jmp
mov
sub
pop
inc
cs
(bad)
add
add
mov
sub
mov
into
xor
push
out
jmp
mov
cmp
div
pop
je
xchg
add
fwait
add
cmp
add
mov
mov
scas
xchg
and
add
lods
cmp
setae
or
add
add
jmp
mov
push
mov
sbb
shl
add
shl
shr
mov
adc
ret
and
add
add
hlt
test
add
add
xlat
jb
jns
ret
int
pop
add
adc
aas
ds
mov
mov
push
xor
mov
xchg
jns
lock
sub
imul
and
cmp
sete
(bad)
push
add
jbe
mov
fisub
cli
dec
sti
xchg
(bad)
adc
sti
test
and
pop
(bad)
add
mov
mov
cmp
add
xchg
mov
das
add
mov
add
sub
add
mov
add
clc
jmp
add
jo
jmp
ins
cmp
sysenter
repz
out
add
or
lods
rcl
dec
add
pushf
ret
mov
xor
mov
sbb
inc
out
cmp
(bad)
and
and
xor
or
or
ja
repz
and
js
xor
or
pop
xlat
or
neg
mov
cmovne
mov
jmp
pushf
movs
sub
mov
mov
xchg
test
mov
and
add
add
push
push
or
dec
test
add
add
std
push
adc
jge
data16
adc
jmp
mov
mov
jmp
div
pop
adc
mov
or
stos
ror
add
mov
jne
mov
mov
lahf
shl
cli
add
add
push
and
jae
add
add
sbb
leave
sbb
add
cmp
fld
test
add
add
sub
js
push
fdivp
mov
(bad)
add
add
or
int3
ror
add
fild
add
add
xchg
(bad)
in
or
mov
mov
add
mov
data16
pop
inc
mov
sub
pcmpgtd
push
fnstenv
(bad)
stc
stc
xor
mov
rol
xor
xor
mov
add
sub
mov
mov
mov
movsx
test
imul
mov
mov
jmp
xor
and
movzx
in
mov
add
inc
and
add
or
mov
xor
fwait
cmps
cmc
inc
test
inc
add
mov
cmp
jmp
mov
data16
(bad)
test
(bad)
push
mov
push
pushf
and
add
add
mov
adc
mov
mov
data16
(bad)
(bad)
dec
xor
mov
mov
mov
out
and
dec
icebp
and
movzx
movzx
mov
shl
(bad)
dec
inc
xor
push
pop
repnz
mov
xchg
fst
retf
add
sbb
jmp
fisttp
mov
cmp
aam
mov
js
fwait
add
adc
add
sbb
xlat
or
push
mov
mov
cmps
xor
(bad)
jmp
mov
dec
xor
mov
and
jb
mov
mov
je
or
mov
idiv
lea
sti
mov
mov
and
push
and
(bad)
xchg
and
or
dec
add
test
xchg
add
add
(bad)
mov
inc
and
jmp
dec
retf
in
sbb
mov
cmp
mov
mov
lahf
pop
call
xchg
add
add
mov
cmp
scas
clc
and
cmp
sete
or
pop
pop
hlt
add
push
clc
add
out
out
and
ss
and
sbb
inc
and
mov
or
mov
xor
sbb
pop
add
call
cmp
inc
icebp
adc
jmp
mov
mov
lea
or
dec
mov
dec
add
mov
out
add
add
ins
mov
mov
mov
push
jns
bswap
popf
or
mov
mov
sub
div
xor
and
pextrw
mov
aaa
scas
mov
fisttp
sti
mov
add
mov
or
sti
mov
jbe
adc
jo
sbb
add
mov
add
mov
mov
add
pop
(bad)
sub
add
add
ds
sbb
and
xor
fmul
xor
ss
or
add
fisttp
mov
add
mov
jge
inc
push
jne
fwait
add
pop
ss
loopne
movs
cmc
(bad)
mov
mov
add
add
add
lock
outs
adc
push
mov
add
mov
or
inc
add
test
xchg
add
psraw
cld
xor
mov
inc
add
and
mov
repnz
fisttp
inc
and
and
mov
xchg
(bad)
inc
and
fld
or
mov
and
push
mov
or
xor
repz
push
or
std
outs
add
or
add
setp
pop
xchg
mov
add
add
test
mov
add
mov
jmp
mov
std
mov
test
add
jo
jg
add
mov
and
add
add
add
add
and
(bad)
(bad)
inc
mov
mov
sub
out
ror
add
or
add
adc
push
test
xor
dec
mov
(bad)
push
push
add
add
outs
in
sub
sub
add
lea
repnz
test
mov
jmp
push
add
add
lea
out
add
sar
test
(bad)
dec
test
sbb
jns
jae
mov
mov
data16
call
pusha
and
mov
dec
ins
mov
and
mov
xor
inc
in
(bad)
mov
mov
data16
and
pop
enter
and
data16
leave
cmps
ss
xor
enter
jb
add
stc
pushf
sub
and
(bad)
(bad)
jmp
mov
push
icebp
cmc
mov
xchg
xchg
loope
scas
retf
or
xor
and
dec
fisttp
mov
sub
cld
add
mov
mov
and
add
test
adc
add
retf
mov
xor
fmul
and
movzx
mov
mov
in
push
and
(bad)
dec
and
stos
adc
add
(bad)
std
push
jns
fwait
xlat
xchg
sub
or
std
repnz
dec
pop
add
add
push
mov
push
push
push
and
sub
jmp
push
jmp
push
jmp
call
jmp
push
ret
jmp
push
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
adc
and
add
add
test
pop
add
mov
dec
test
push
add
add
add
inc
addr16
cmps
add
add
push
and
add
retf
sub
mov
call
movnti
add
pop
add
add
sub
data16
inc
add
add
lds
add
test
add
mov
movd
add
add
add
add
mov
ds
adc
nop
mov
and
add
add
or
add
sahf
pop
pop
add
add
xchg
test
add
add
add
add
add
mov
mov
pusha
addr16
push
and
add
movs
cmovne
add
add
fcom
add
jmp
jg
push
add
add
mov
sub
mov
sub
fiadd
jg
or
add
dec
xor
test
mov
jg
jmp
mov
sub
aad
and
mov
add
pusha
dec
test
jmp
push
fs
call
or
add
(bad)
adc
add
mov
mov
jno
icebp
faddp
mov
movq
add
inc
add
add
add
adc
jg
jmp
mov
adc
mov
push
(bad)
cdq
data16
add
mov
mov
jns
jo
mov
jg
jmp
mov
and
add
add
sub
and
add
jg
mov
add
and
bound
out
scas
sbb
imul
add
(bad)
push
jmp
fisubr
and
add
add
sub
out
add
add
or
add
add
add
push
add
add
dec
and
sbb
(bad)
punpcklbw
add
inc
mov
and
add
add
mov
ror
jmp
mov
add
mov
or
xlat
pop
add
mov
test
dec
add
add
mov
push
push
and
add
sub
fist
test
add
add
and
add
test
dec
add
add
lds
psrlq
add
add
fs
dec
add
sub
mov
call
jb
or
fimul
sub
and
movs
retf
test
leave
cmps
mov
into
ret
lods
add
jmp
mov
and
out
add
sub
enter
add
add
test
in
fiadd
add
add
int
adc
cmps
mov
jg
jmp
mov
int3
stos
dec
sub
dec
pop
ins
test
mov
(bad)
out
mov
sub
mov
stc
push
pop
add
fadd
add
call
add
xchg
iret
enter
rol
add
jg
jmp
mov
mov
push
dec
loop
mov
sqrtps
loopne
jb
add
add
add
sub
mov
jg
jmp
mov
sub
lds
jg
jmp
mov
and
add
add
mov
jg
jmp
mov
dec
add
add
sbb
call
jg
jmp
mov
and
icebp
add
sub
jg
and
loopne
add
jmp
pop
sub
mov
jg
jmp
add
inc
adc
pop
or
inc
fiadd
add
(bad)
xlat
add
add
add
and
add
retf
test
add
push
sbb
xlat
add
add
add
add
bound
pop
sub
push
test
out
add
bswap
pop
add
add
mov
int
mov
cmps
mov
add
je
jmp
cs
dec
add
cs
and
add
add
test
add
add
add
js
mov
add
mov
(bad)
mov
out
add
add
fwait
xor
adc
out
cwde
add
add
test
push
loope
jmp
mov
stos
dec
add
arpl
mov
packssdw
or
add
mov
inc
add
fiadd
sub
mov
and
call
add
jmp
mov
sub
mov
je
jmp
call
add
sub
mov
and
out
add
dec
test
neg
jmp
mov
add
sub
sti
inc
mov
add
je
jmp
mov
and
add
add
mov
add
or
add
sbb
add
mov
sbb
mov
and
je
jmp
fadd
ds
out
mov
ud2
inc
or
add
test
add
add
sub
punpckhdq
add
add
retf
add
loopne
test
sub
mov
and
je
jmp
mov
sub
mov
pop
test
add
shr
add
add
pop
add
inc
and
ud2
pop
or
lock
mov
sub
jg
les
cmp
add
jmp
mov
sub
inc
inc
and
add
jmp
dec
test
dec
(bad)
arpl
push
inc
and
inc
sub
mov
xchg
add
add
mov
je
jmp
mov
loope
add
aaa
push
cmovne
add
data16
add
add
mov
xchg
mov
inc
and
(bad)
movs
in
test
fadd
fiadd
imul
dec
icebp
loop
inc
inc
and
add
push
cli
mov
enter
add
mov
mov
je
jmp
add
and
icebp
inc
add
sub
add
add
aaa
xchg
add
fwait
add
sub
mov
or
push
add
cli
ins
add
add
add
sub
mov
ud2
xchg
add
add
push
pop
add
mov
add
jns
and
scas
test
add
add
fadd
add
mov
sub
adc
mov
retf
jmp
mov
sub
fiadd
cmovne
add
add
dec
pop
add
add
add
ss
scas
sbb
add
jp
and
add
add
inc
pop
imul
movs
jmp
pop
jmp
lea
dec
add
add
add
add
mov
inc
add
out
btr
mov
jmp
mov
mov
mov
idiv
jmp
test
and
xor
sbb
inc
ret
mov
and
xor
inc
and
and
test
sub
ret
jmp
jmp
inc
and
or
and
call
mov
jne
pop
pop
add
(bad)
or
bound
pop
mov
shl
test
add
add
test
inc
add
jmp
mov
mov
aas
or
inc
xchg
and
add
cmp
cmovl
mov
and
add
add
mov
pushf
adc
test
jecxz
add
or
prefetch
or
lock
out
jmp
dec
test
mov
mov
dec
cli
push
add
cmovl
mov
jmp
mov
mov
dec
xchg
and
add
add
add
inc
ror
add
mov
ss
push
iret
mov
cmp
stc
dec
ror
add
and
xor
xor
inc
mov
out
ins
add
add
cli
loopne
add
cmovl
mov
and
add
add
ds
add
mov
lods
add
add
pop
inc
cmovl
mov
jmp
mov
mov
imul
ins
xor
call
cmove
push
add
jmp
mov
mov
jmp
(bad)
fsub
add
add
test
inc
mov
aas
aaa
popf
sahf
add
mov
mov
inc
adc
add
push
les
push
add
xlat
xchg
cs
pop
test
ret
cmp
imul
and
and
jnp
cmp
setl
mov
and
xor
loope
inc
rcl
and
fwait
add
dec
aam
add
mov
mov
les
and
add
cwde
adc
mov
mov
or
add
sub
xchg
and
adc
cmp
sete
or
out
pushf
(bad)
mov
mov
jg
or
cmovne
mov
jmp
and
add
add
movs
add
(bad)
push
adc
xor
pop
mov
mov
mov
les
push
add
add
add
mov
add
imul
add
sbb
add
(bad)
pusha
dec
add
add
pushf
xchg
fwait
adc
repz
add
inc
ror
cdq
movs
hlt
add
mov
mov
mov
mov
imul
xlat
sub
sub
add
pop
scas
les
pop
add
xchg
ret
push
(bad)
in
add
call
xor
or
ret
inc
ror
fsubrp
add
add
pop
mov
cmc
add
add
sub
in
xor
add
les
sub
sahf
jmp
mov
jmp
dec
test
add
add
test
add
out
cmp
jo
jmp
mov
mov
pop
loope
add
xor
mov
add
add
loope
mov
add
ja
mov
mov
xchg
add
aad
or
push
mov
in
push
mov
mov
cmp
stos
inc
retf
out
push
add
add
add
add
mov
(bad)
dec
inc
or
(bad)
out
repnz
out
sbb
add
sbb
xor
mov
or
in
inc
mov
mov
mov
adc
mov
out
(bad)
pop
or
shl
aam
imul
and
cmp
maskmovq
(bad)
or
cdq
add
pushf
ret
mov
prefetchnta
mov
add
and
and
inc
and
and
(bad)
shr
hlt
or
les
(bad)
sbb
movs
dec
retf
xlat
jmp
cwde
je
and
test
lds
jmp
mov
mov
mov
ja
or
mov
add
add
push
add
add
xor
add
add
movs
dec
pop
(bad)
cld
add
add
inc
mov
imul
and
and
(bad)
cli
add
add
pushf
(bad)
leave
fisub
pop
xor
out
add
add
inc
ror
add
in
cdq
add
test
xchg
cwde
push
in
std
loopne
add
add
adc
mov
mov
outs
jmp
add
push
push
add
add
test
push
add
fwait
dec
icebp
inc
dec
jmp
test
add
add
xchg
add
shl
cli
out
jmp
mov
mov
cmp
add
retf
add
mov
jae
sub
mov
add
repz
sub
fadd
push
jmp
add
setl
mov
inc
and
mov
xor
xor
mov
and
iret
(bad)
mov
and
rcl
xor
and
inc
xor
pop
retf
dec
or
test
mov
cmovne
and
add
jmp
mov
mov
mov
mov
call
mov
add
les
push
add
cmp
push
xor
adc
jp
imul
add
cmp
femms
arpl
add
pushf
ret
mov
xor
call
add
and
iret
(bad)
mov
and
popa
shr
les
repz
add
retf
xlat
or
cmp
add
push
icebp
mov
jmp
call
out
lock
(bad)
test
test
add
add
add
add
and
movs
add
dec
jns
cmps
jmp
and
rol
dec
add
add
test
add
pop
jmp
mov
cmc
or
mov
inc
add
add
movs
mov
jmp
in
mov
adc
(bad)
call
in
push
push
and
sub
jmp
push
jmp
push
ret
jmp
push
jmp
push
jmp
call
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
mov
mov
mov
jmp
add
mov
push
add
xor
or
mov
pop
add
pop
add
mov
add
mov
and
add
pop
test
bound
add
add
sbb
popa
mov
add
mov
xchg
aas
arpl
add
or
(bad)
repnz
pop
add
mov
mov
pushf
rol
and
add
add
add
mov
and
add
add
test
add
pop
push
popa
mov
test
add
mov
xchg
in
pop
cmps
inc
mov
add
(bad)
and
add
in
add
add
mov
sub
cmp
pcmpeqb
(bad)
dec
add
add
and
add
add
mov
and
sahf
add
jg
push
add
add
inc
add
add
mov
cmp
add
or
test
and
add
mov
lock
push
add
jg
test
add
sub
mov
jg
jmp
mov
add
mov
jg
xor
add
add
add
sub
mov
and
add
jp
addr16
mov
sub
out
test
add
xor
(bad)
cmp
inc
add
add
jbe
xchg
sub
test
jg
jmp
xlat
test
icebp
dec
(bad)
sub
out
cli
and
add
add
(bad)
mov
xor
add
sub
(bad)
xchg
dec
icebp
dec
add
(bad)
xchg
add
add
add
arpl
test
add
add
mov
call
pop
add
add
add
xor
mov
and
add
add
mov
ror
jmp
mov
sub
jns
and
add
lock
add
jmp
mov
mov
xchg
push
add
add
(bad)
cmps
add
add
add
jne
lea
sub
mov
add
push
iret
add
add
mov
lock
dec
add
out
test
lahf
pusha
add
(bad)
das
add
mov
add
xor
sub
mov
push
clc
add
add
(bad)
repz
in
add
add
test
and
add
add
mov
and
or
add
add
add
pop
inc
sahf
pusha
add
mov
or
jnp
or
add
test
add
sub
mov
jg
mov
lock
mov
sub
mov
and
add
jg
jmp
mov
sub
mov
jbe
pop
add
and
add
add
mov
and
or
js
mov
ins
(bad)
hlt
data16
jmp
mov
sub
mov
and
xor
add
(bad)
or
and
add
sub
aad
and
add
add
(bad)
jecxz
pop
jmp
mov
inc
cmp
add
mov
test
add
addr16
push
add
jmp
retf
test
add
and
xor
add
add
shr
add
(bad)
arpl
cli
and
sahf
pusha
mov
mov
and
add
(bad)
pop
add
add
mov
sub
mov
das
enter
mov
add
add
add
mov
sub
jmp
je
jmp
in
test
add
add
mov
push
add
dec
jp
add
and
add
addr16
add
aad
and
add
add
jno
add
jns
jle
mov
and
add
sub
mov
add
test
add
call
test
add
or
jns
and
add
or
add
mov
add
test
sahf
add
sub
out
test
add
add
pop
add
mov
sub
test
add
movs
or
pop
sbb
add
add
add
sub
test
test
jo
add
mov
sub
mov
add
add
mov
and
add
sub
mov
je
push
xor
add
mov
and
add
add
mov
dec
repnz
or
or
add
and
mov
aad
inc
mov
je
jmp
mov
sub
mov
and
mov
or
add
call
inc
add
sub
sub
add
add
jmp
mov
sub
neg
inc
mov
add
je
jmp
mov
sub
mov
push
mov
pop
and
jmp
das
test
add
add
cmp
ud2
xor
arpl
jmp
adc
and
add
sub
mov
mov
(bad)
xor
add
inc
add
mov
and
add
add
mov
mulps
movs
add
sub
add
mov
sbb
add
sub
push
inc
inc
pop
push
add
push
add
mov
sub
mov
je
jmp
mov
pop
push
push
mov
mov
je
jmp
mov
fstp
inc
inc
adc
or
add
mov
cmp
add
sub
mov
or
mov
test
add
add
mov
fs
add
in
cli
mov
sub
out
inc
push
pusha
je
jmp
mov
sub
stos
inc
and
rol
push
add
or
add
fld
push
pop
mov
inc
daa
je
jmp
jmp
inc
xor
xor
sub
mov
je
jmp
retf
test
add
add
ror
stos
cdq
and
add
cdq
add
lock
jmp
mov
(bad)
adc
push
popa
mov
add
cmp
sub
add
jmp
mov
jmp
mov
fiadd
add
add
mov
mov
or
add
sub
psubusw
mov
and
add
sbb
enter
or
pavgw
out
idiv
test
mov
popa
ds
cld
and
push
in
inc
and
and
and
or
dec
fdiv
les
(bad)
mov
add
pop
mov
mov
jmp
mov
mov
sub
push
mov
jne
lea
mov
add
mov
test
pop
jmp
add
movs
sub
mov
add
dec
add
add
xchg
mov
setl
add
inc
and
ss
add
and
dec
inc
and
and
or
or
xor
push
inc
and
or
xor
and
or
addr16
test
mov
push
inc
add
arpl
pusha
or
mov
jmp
mov
push
push
mov
push
ja
or
add
add
push
or
test
fadd
add
or
add
mov
mov
mov
push
xlat
loop
xor
mov
add
sub
imul
jmp
sahf
add
cmp
push
or
add
or
cmp
ret
ror
or
outs
mov
add
arpl
mov
hlt
jmp
pop
add
jle
rcl
and
add
add
mov
pop
add
jne
add
and
mov
and
in
xchg
(bad)
mov
mov
mov
mov
add
mov
pop
add
pop
add
mov
add
add
add
add
lock
cmp
add
cmp
and
mov
add
mov
mov
add
jle
repz
cmp
mov
and
mov
cmp
mov
cmp
aad
inc
and
mov
or
mov
mov
xor
(bad)
mov
cmp
mov
or
cmp
fsubr
test
cmovne
mov
pop
dec
add
add
gs
add
add
add
addr16
add
mov
add
add
sub
mov
(bad)
fsub
dec
pop
in
sbb
jmp
mov
and
popa
add
aas
cmps
add
jne
mov
add
test
mov
sbb
and
mov
mov
call
dec
sbb
iret
mov
addr16
test
lahf
(bad)
(bad)
dec
mov
mov
(bad)
mov
xor
mov
dec
or
mov
sar
adc
(bad)
push
jmp
jle
cmovne
data16
mov
jmp
mov
mov
mov
mov
mov
mov
repz
or
or
scas
jmp
add
add
jle
xchg
cmps
cmp
setl
mov
sub
inc
mov
test
and
or
add
ror
test
xchg
xor
mov
or
test
mov
cld
test
in
je
sub
(bad)
mov
push
syscall
add
push
add
inc
std
mov
add
add
inc
add
movs
add
aam
movs
inc
(bad)
(bad)
(bad)
mov
mov
mov
hlt
xor
in
inc
mov
jne
add
pusha
mov
add
movups
push
cmp
sete
cmp
cmovno
sub
nop
rep
repnz
push
(bad)
mov
mul
and
jg
lahf
jmp
(bad)
cmp
data16
push
sub
jmp
mov
mov
mov
retf
ret
add
mov
add
div
inc
add
or
test
bound
jmp
fadd
add
mov
xor
push
retf
xchg
and
add
lock
cmp
add
add
mov
add
pop
jnp
and
add
dec
mov
inc
pop
add
add
inc
data16
mov
add
mov
mov
cld
jle
add
dec
aam
dec
and
dec
jnp
pop
fld
add
in
sub
stos
mov
inc
add
mov
cmp
mov
cmp
jle
je
jb
adc
scas
repz
hlt
inc
add
add
xchg
mov
dec
pushf
mov
test
xor
and
add
and
mov
js
and
or
clc
xchg
mov
pop
or
retf
mov
cld
test
mov
cmovne
mov
jmp
xchg
mov
and
mov
mov
mov
mov
add
daa
and
call
mov
(bad)
fwait
sbb
add
setl
mov
add
inc
jbe
mov
cmp
mov
mov
ret
add
imul
add
ins
xchg
sar
or
add
add
mov
and
push
loopne
jge
ret
je
ja
leave
mov
add
add
mov
add
mov
mov
add
pop
add
and
add
pop
sbb
test
add
outs
sbb
add
add
cmp
data16
mov
jmp
mov
mov
cdq
add
frstor
add
cmp
sub
mov
add
imul
adc
xor
xchg
ret
or
(bad)
mov
and
inc
repnz
test
cmovne
mov
jmp
clc
fldenv
mov
inc
mov
add
add
jmp
ja
lock
add
mov
add
mov
loop
enter
sub
sub
imul
and
cmp
sete
cmp
dec
pushf
(bad)
(bad)
fisub
shl
enter
jno
test
add
add
mov
mov
mov
imul
jmp
add
jmp
mov
mov
(bad)
loop
inc
inc
add
add
add
call
mov
mov
add
add
pop
test
add
add
test
jg
add
mov
lahf
pusha
mov
mov
jmp
xor
jne
lea
pop
pop
pop
outs
ret
mov
mov
jmp
push
and
or
add
sbb
mov
add
add
jg
repz
jg
add
add
adc
leave
cmp
add
addr16
call
mov
das
in
pop
add
xor
in
xchg
and
sahf
pusha
add
dec
mov
add
mov
inc
jmp
mov
mov
add
mov
cmp
mov
out
aaa
data16
cs
jmp
mov
and
add
xor
jbe
add
mov
mov
mov
push
add
add
and
mov
call
aaa
test
add
dec
mov
mov
adc
ins
add
jle
in
dec
add
add
out
mov
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
and
sub
mov
mov
mov
mov
mov
lea
mov
mov
mov
mov
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
mov
lea
lea
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
sub
mov
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
jmp
mov
mov
mov
cmp
cmovne
mov
jmp
mov
mov
mov
mov
mov
mov
sub
sub
add
imul
and
cmp
sete
cmp
setl
mov
xor
mov
mov
xor
xor
mov
and
and
mov
and
and
or
or
xor
mov
or
xor
or
and
or
test
mov
cmovne
mov
jmp
mov
mov
mov
mov
mov
mov
add
sub
sub
imul
and
cmp
sete
cmp
setl
mov
xor
mov
mov
xor
xor
mov
and
and
mov
and
and
or
or
xor
mov
or
xor
or
and
or
test
mov
cmovne
mov
jmp
mov
jmp
mov
mov
mov
mov
mov
mov
sub
sub
mov
mov
shl
mov
sub
sub
shl
mov
call
mov
mov
mov
cmp
cmovne
mov
jmp
mov
jmp
mov
mov
mov
mov
mov
mov
sub
sub
add
imul
and
cmp
sete
cmp
setl
mov
xor
mov
mov
xor
xor
mov
and
and
mov
and
and
or
or
xor
mov
or
xor
or
and
or
test
mov
cmovne
mov
jmp
mov
mov
cmp
setne
and
mov
mov
mov
mov
add
sub
sub
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
cmovne
mov
jmp
mov
mov
mov
test
cmovne
mov
jmp
mov
mov
mov
mov
mov
add
sub
sub
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
cmovne
mov
jmp
mov
shl
mov
call
mov
mov
mov
mov
mov
cmp
setne
and
mov
mov
mov
sub
mov
add
mov
imul
and
cmp
sete
cmp
setl
mov
xor
mov
xor
xor
mov
mov
and
and
mov
mov
and
mov
mov
and
mov
mov
or
mov
mov
mov
or
mov
xor
mov
or
xor
or
and
or
test
cmovne
mov
jmp
mov
mov
mov
test
cmovne
mov
jmp
mov
jmp
mov
jmp
mov
mov
jmp
lea
mov
mov
add
sub
sub
mov
mov
mov
mov
jmp
mov
mov
cmp
cmove
mov
jmp
mov
mov
cmp
cmovne
mov
jmp
mov
mov
mov
mov
cmp
cmova
mov
jmp
mov
mov
mov
jmp
lea
mov
mov
add
mov
mov
mov
call
lea
mov
mov
mov
sub
add
add
mov
mov
mov
sub
add
mov
mov
mov
mov
mov
mov
jmp
lea
lea
lea
cmp
sete
and
movzx
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
sub
sub
add
mov
mov
mov
add
mov
mov
mov
sub
add
mov
mov
mov
add
mov
cmp
cmove
mov
jmp
mov
mov
mov
mov
mov
mov
sub
mov
mov
add
imul
and
cmp
sete
cmp
setl
mov
xor
mov
xor
xor
mov
and
and
mov
mov
and
mov
mov
and
or
mov
or
xor
or
xor
or
and
or
test
mov
cmovne
mov
jmp
mov
mov
mov
mov
mov
cmp
seta
and
mov
mov
mov
mov
sub
sub
add
imul
and
cmp
sete
cmp
setl
mov
xor
mov
mov
xor
xor
mov
and
and
mov
and
and
or
or
xor
mov
or
xor
or
and
or
test
mov
cmovne
mov
jmp
mov
mov
mov
test
cmovne
mov
jmp
mov
mov
mov
mov
mov
mov
sub
mov
mov
add
imul
and
cmp
sete
cmp
setl
mov
xor
mov
xor
xor
mov
and
and
mov
mov
and
mov
mov
and
or
mov
or
xor
or
xor
or
and
or
test
mov
cmovne
mov
jmp
mov
mov
mov
mov
mov
mov
mov
sub
mov
add
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
cmovne
mov
jmp
mov
jmp
lea
mov
mov
add
mov
mov
mov
call
mov
mov
mov
mov
sub
add
add
mov
mov
mov
add
sub
sub
mov
mov
mov
cmp
cmova
mov
mov
jmp
mov
mov
mov
jmp
lea
mov
mov
jmp
mov
mov
cmp
cmovne
mov
jmp
mov
mov
mov
mov
mov
sub
mov
add
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
cmovne
mov
jmp
mov
mov
mov
mov
mov
mov
sub
sub
add
imul
and
cmp
sete
cmp
setl
mov
xor
mov
mov
xor
xor
mov
and
and
mov
and
and
or
or
xor
mov
or
xor
or
and
or
test
mov
cmovne
mov
jmp
mov
jmp
mov
jmp
mov
mov
mov
mov
mov
add
sub
sub
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
cmovne
mov
jmp
mov
mov
mov
cmp
setne
and
mov
mov
mov
mov
add
sub
sub
imul
and
cmp
sete
cmp
setl
mov
xor
mov
mov
xor
xor
mov
and
and
mov
and
and
or
or
xor
mov
or
xor
or
and
or
test
mov
cmovne
mov
jmp
mov
mov
mov
test
cmovne
mov
jmp
mov
mov
jmp
mov
mov
mov
mov
mov
sub
sub
add
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
cmovne
mov
jmp
mov
mov
cmp
setne
and
mov
mov
mov
mov
add
sub
sub
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
cmovne
mov
jmp
mov
mov
mov
test
cmovne
mov
jmp
mov
mov
call
mov
jmp
mov
mov
mov
mov
mov
mov
add
sub
sub
imul
and
cmp
sete
cmp
setl
mov
xor
mov
mov
xor
xor
mov
and
and
mov
and
and
or
or
xor
mov
or
xor
or
and
or
test
mov
cmovne
mov
jmp
mov
mov
cmp
setne
and
mov
mov
mov
mov
sub
sub
add
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
cmovne
mov
jmp
mov
mov
mov
test
cmovne
mov
jmp
mov
mov
mov
mov
mov
mov
sub
mov
mov
add
imul
and
cmp
sete
cmp
setl
mov
xor
mov
xor
xor
mov
and
and
mov
mov
and
mov
mov
and
or
mov
or
xor
or
xor
or
and
or
test
mov
cmovne
mov
jmp
mov
mov
call
mov
mov
mov
mov
mov
mov
sub
sub
add
imul
and
cmp
sete
cmp
setl
mov
xor
mov
mov
xor
xor
mov
and
and
mov
and
and
or
or
xor
mov
or
xor
or
and
or
test
mov
cmovne
mov
jmp
mov
jmp
mov
mov
mov
mov
mov
add
sub
sub
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
cmovne
mov
jmp
mov
mov
mov
mov
mov
mov
mov
sub
mov
add
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
cmovne
mov
jmp
mov
lea
pop
pop
pop
pop
ret
mov
jmp
mov
jmp
mov
shl
mov
call
mov
mov
jmp
mov
mov
jmp
mov
mov
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
mov
call
mov
jmp
mov
jmp
push
mov
push
push
push
sub
mov
mov
mov
mov
mov
mov
add
sub
sub
imul
and
cmp
sete
cmp
setl
mov
mov
and
xor
or
test
mov
mov
jne
jmp
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmp
setl
mov
mov
mov
mov
add
sub
sub
imul
and
cmp
sete
cmp
setl
mov
xor
mov
xor
mov
mov
xor
mov
mov
and
mov
mov
and
mov
and
mov
mov
mov
mov
and
mov
or
mov
or
xor
mov
or
xor
or
and
or
test
mov
mov
jne
jmp
mov
test
jne
jmp
mov
mov
jmp
mov
mov
mov
mov
mov
movzx
cmp
jl
mov
mov
jmp
mov
mov
mov
mov
movzx
cmp
jl
mov
mov
mov
sub
sub
add
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
jne
jmp
mov
mov
mov
mov
sub
mov
add
imul
and
cmp
sete
cmp
setl
mov
xor
mov
xor
xor
mov
and
and
mov
and
and
or
or
xor
or
xor
or
and
or
test
jne
jmp
jmp
mov
mov
mov
sub
add
add
mov
mov
movzx
sub
sub
add
mov
mov
jmp
mov
mov
mov
mov
movzx
cmp
jl
jmp
mov
mov
mov
add
sub
sub
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
jne
jmp
mov
mov
mov
mov
mov
sub
sub
mov
mov
movzx
add
sub
sub
mov
mov
mov
mov
mov
mov
add
sub
sub
imul
and
cmp
sete
cmp
setl
mov
xor
mov
xor
xor
mov
and
and
mov
and
and
or
or
xor
or
xor
or
and
or
test
jne
jmp
jmp
mov
movzx
mov
mov
mov
mov
mov
mov
mov
mov
cmp
jge
mov
mov
mov
mov
sub
sub
mov
mov
movzx
mov
shl
mov
shl
mov
mov
mov
add
add
sub
mov
mov
mov
mov
add
sub
sub
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
jne
jmp
mov
mov
mov
mov
sub
add
add
mov
mov
mov
sub
mov
add
imul
and
cmp
sete
cmp
setl
mov
xor
mov
xor
xor
mov
and
and
mov
and
and
or
or
xor
or
xor
or
and
or
test
jne
jmp
jmp
mov
mov
mov
mov
sub
sub
add
imul
and
cmp
sete
cmp
setl
mov
xor
mov
xor
xor
mov
and
and
mov
and
and
or
or
xor
or
xor
or
and
or
test
jne
jmp
mov
mov
mov
cmp
sete
mov
mov
mov
add
sub
sub
imul
and
cmp
sete
cmp
setl
mov
xor
mov
xor
xor
mov
and
and
mov
and
and
or
or
xor
or
xor
or
and
or
test
mov
jne
jmp
mov
test
jne
jmp
mov
mov
mov
mov
mov
mov
mov
lea
pop
pop
pop
pop
ret
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
jmp
jmp
mov
mov
mov
mov
sub
sub
mov
mov
movzx
add
sub
sub
mov
mov
jmp
mov
mov
mov
sub
sub
mov
jmp
jmp
data16
push
mov
push
push
push
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
shl
add
sub
sub
mov
mov
mov
shl
mov
sub
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
mov
sub
mov
add
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
jne
jmp
mov
mov
mov
mov
mov
add
sub
sub
imul
and
cmp
sete
cmp
setl
mov
xor
mov
xor
xor
mov
and
and
mov
and
and
or
or
xor
or
xor
or
and
or
test
jne
jmp
jmp
cmp
jne
lea
mov
mov
mov
mov
mov
cmp
jne
jmp
mov
mov
mov
mov
add
sub
sub
imul
and
cmp
sete
cmp
setl
mov
xor
mov
xor
xor
mov
and
and
mov
and
and
or
or
xor
or
xor
or
and
or
test
jne
jmp
cmp
seta
mov
mov
mov
sub
sub
add
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
mov
jne
jmp
mov
mov
test
mov
jne
jmp
mov
mov
mov
sub
mov
add
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
jne
jmp
mov
cmp
setl
mov
mov
mov
sub
sub
add
imul
and
cmp
sete
cmp
setl
mov
xor
mov
xor
xor
mov
and
and
mov
and
and
or
or
xor
or
xor
or
and
or
test
mov
jne
jmp
mov
mov
jmp
mov
test
jne
jmp
mov
mov
mov
add
mov
mov
mov
mov
sub
mov
sub
add
sub
mov
mov
mov
mov
mov
add
add
sub
mov
mov
add
add
sub
mov
jmp
cmp
jge
mov
mov
mov
mov
mov
cmp
cmovne
mov
jmp
mov
mov
mov
mov
sub
sub
add
imul
and
cmp
sete
cmp
setl
mov
xor
mov
xor
xor
mov
and
and
mov
and
and
or
or
xor
or
xor
or
and
or
test
jne
jmp
mov
mov
mov
mov
mov
mov
mov
sub
mov
sub
add
mov
sub
mov
mov
shl
mov
sub
mov
sub
add
mov
sub
mov
mov
mov
mov
mov
sub
sub
add
imul
and
cmp
sete
cmp
setl
mov
xor
mov
xor
xor
mov
and
and
mov
and
and
or
or
xor
or
xor
or
and
or
test
jne
jmp
jmp
mov
mov
mov
sub
mov
add
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
jne
jmp
mov
mov
cmp
setb
mov
mov
sub
mov
add
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
mov
jne
jmp
mov
test
jne
jmp
mov
mov
mov
mov
mov
mov
mov
sub
mov
add
imul
and
cmp
sete
cmp
setl
mov
xor
mov
xor
xor
mov
and
and
mov
and
and
or
or
xor
or
xor
or
and
or
test
jne
jmp
mov
add
add
sub
mov
mov
mov
mov
add
sub
sub
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
jne
jmp
jmp
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
sub
mov
mov
mov
mov
mov
cmp
jge
mov
shl
mov
mov
add
mov
movzx
mov
and
xor
or
mov
mov
mov
mov
mov
sub
sub
add
imul
and
cmp
sete
cmp
setl
mov
xor
mov
xor
xor
mov
and
and
mov
and
and
or
or
xor
or
xor
or
and
or
test
jne
jmp
mov
mov
mov
sub
mov
sub
add
sub
mov
mov
mov
mov
sub
sub
add
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
jne
jmp
jmp
mov
jmp
mov
mov
mov
sub
mov
add
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
jne
jmp
mov
cmp
setne
mov
mov
sub
mov
add
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
mov
jne
jmp
mov
mov
test
mov
jne
jmp
mov
cmp
setb
mov
mov
test
jne
jmp
mov
mov
add
sub
sub
mov
mov
cmp
jb
mov
mov
mov
sub
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
mov
sub
add
sub
mov
mov
mov
mov
sub
add
add
mov
cmp
jne
mov
mov
mov
sub
mov
add
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
jne
jmp
mov
mov
mov
mov
add
sub
sub
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
jne
jmp
jmp
mov
mov
mov
mov
add
sub
sub
imul
and
cmp
sete
cmp
setl
mov
xor
mov
xor
xor
mov
and
and
mov
and
and
or
or
xor
or
xor
or
and
or
test
jne
jmp
mov
mov
sub
sub
mov
mov
mov
mov
add
sub
sub
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
jne
jmp
jmp
cmp
jne
mov
mov
mov
mov
add
sub
sub
imul
and
cmp
sete
cmp
setl
mov
xor
mov
xor
xor
mov
and
and
mov
and
and
or
or
xor
or
xor
or
and
or
test
jne
jmp
mov
mov
sub
add
mov
mov
mov
mov
mov
mov
add
sub
sub
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
jne
jmp
jmp
mov
sub
sub
mov
mov
mov
mov
mov
mov
add
sub
sub
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
jne
jmp
mov
mov
mov
mov
sub
sub
add
imul
and
cmp
sete
cmp
setl
mov
xor
mov
xor
xor
mov
and
and
mov
and
and
or
or
xor
or
xor
or
and
or
test
jne
jmp
jmp
mov
mov
mov
add
add
sub
sub
mov
mov
mov
sub
add
cmp
jge
mov
mov
mov
sub
add
mov
cmp
jge
mov
jmp
mov
mov
cmp
jge
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
mov
sub
add
sub
mov
jmp
mov
add
mov
mov
cmp
mov
jbe
cmp
setl
mov
mov
mov
mov
mov
add
sub
sub
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
mov
jne
jmp
mov
mov
mov
mov
add
sub
sub
imul
and
cmp
sete
cmp
setl
mov
xor
mov
xor
xor
mov
and
and
mov
and
and
or
or
xor
or
xor
or
and
or
test
jne
jmp
mov
test
jne
jmp
mov
mov
mov
sub
mov
add
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
jne
jmp
mov
mov
mov
mov
add
mov
mov
mov
mov
sub
mov
sub
add
mov
sub
mov
mov
mov
mov
mov
add
add
sub
mov
mov
add
add
sub
mov
mov
mov
sub
mov
add
imul
and
cmp
sete
cmp
setl
mov
xor
mov
xor
xor
mov
and
and
mov
and
and
or
or
xor
or
xor
or
and
or
test
jne
jmp
jmp
cmp
jge
cmp
jne
jmp
mov
mov
mov
mov
sub
mov
add
imul
and
cmp
sete
cmp
setl
mov
xor
mov
xor
xor
mov
and
and
mov
and
and
or
or
xor
or
xor
or
and
or
test
jne
jmp
mov
mov
mov
mov
sub
sub
add
imul
and
cmp
sete
cmp
setl
mov
xor
mov
xor
xor
mov
and
and
mov
and
and
or
or
xor
or
xor
or
and
or
test
jne
jmp
jmp
mov
cmp
jb
jmp
mov
mov
add
add
sub
mov
xor
mov
xor
and
mov
mov
mov
shl
shl
add
mov
shl
add
mov
cmp
jae
mov
mov
shl
mov
mov
shl
mov
mov
add
mov
movzx
mov
xor
mov
xor
xor
mov
and
and
mov
mov
and
mov
mov
and
or
mov
or
xor
or
xor
or
and
or
mov
mov
shr
mov
movzx
imul
mov
mov
cmp
jae
mov
mov
mov
mov
sub
sub
add
imul
and
cmp
sete
cmp
setl
mov
xor
mov
xor
xor
mov
and
and
mov
and
and
or
or
xor
or
xor
or
and
or
test
jne
jmp
mov
mov
mov
mov
mov
mov
mov
movzx
sub
sub
add
sar
mov
movzx
mov
sub
mov
sub
add
mov
sub
mov
mov
mov
add
mov
mov
mov
sub
sub
mov
xor
mov
xor
and
mov
mov
mov
shl
movzx
mov
mov
sub
add
sar
mov
sub
sub
imul
shl
add
mov
cmp
setge
mov
mov
mov
add
sub
sub
imul
and
cmp
sete
cmp
setl
mov
xor
mov
xor
xor
mov
and
and
mov
and
and
or
or
xor
or
xor
or
and
or
test
mov
jne
jmp
mov
test
jne
jmp
mov
mov
add
sub
sub
mov
mov
cmp
jb
mov
mov
mov
add
sub
sub
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
jne
jmp
mov
mov
mov
mov
mov
sub
mov
sub
add
sub
mov
mov
mov
mov
add
sub
sub
imul
and
cmp
sete
cmp
setl
mov
xor
mov
xor
xor
mov
and
and
mov
and
and
or
or
xor
or
xor
or
and
or
test
jne
jmp
jmp
mov
mov
movzx
mov
mov
mov
shl
mov
mov
xor
mov
xor
xor
or
or
xor
and
mov
mov
add
mov
shl
add
mov
shl
add
mov
cmp
jae
mov
mov
shl
mov
mov
shl
mov
mov
add
mov
movzx
mov
xor
mov
xor
xor
mov
and
and
mov
mov
and
mov
mov
and
or
mov
or
xor
or
xor
or
and
or
mov
mov
shr
mov
movzx
imul
mov
mov
cmp
jae
mov
mov
mov
mov
sub
sub
add
imul
and
cmp
sete
cmp
setl
mov
xor
mov
xor
xor
mov
and
and
mov
and
and
or
or
xor
or
xor
or
and
or
test
jne
jmp
mov
mov
mov
mov
mov
movzx
mov
sub
add
sar
mov
movzx
mov
sub
mov
sub
add
sub
mov
mov
mov
shl
mov
cmp
setne
mov
mov
mov
add
sub
sub
imul
and
cmp
sete
cmp
setl
mov
xor
mov
xor
xor
mov
and
and
mov
and
and
or
or
xor
or
xor
or
and
or
test
mov
jne
jmp
mov
test
jne
jmp
jmp
mov
mov
mov
sub
sub
add
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
jne
jmp
mov
mov
mov
sub
sub
add
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
jne
jmp
jmp
mov
mov
mov
add
sub
sub
mov
mov
mov
sub
add
mov
mov
movzx
sar
mov
movzx
sub
sub
add
mov
mov
mov
mov
sub
add
add
sub
add
add
mov
cmp
jne
jmp
jmp
jmp
cmp
jl
jmp
jmp
mov
mov
mov
mov
add
sub
sub
imul
and
cmp
sete
cmp
setl
mov
xor
mov
xor
xor
mov
and
and
mov
and
and
or
or
xor
or
xor
or
and
or
test
jne
jmp
mov
cmp
setl
mov
mov
mov
sub
sub
add
imul
and
cmp
sete
cmp
setl
mov
xor
mov
xor
xor
mov
and
and
mov
and
and
or
or
xor
or
xor
or
and
or
test
mov
jne
jmp
mov
test
jne
jmp
mov
mov
shl
add
mov
cmp
jae
mov
shl
mov
mov
shl
mov
mov
add
mov
movzx
mov
and
xor
or
mov
mov
shr
mov
movzx
imul
mov
mov
cmp
jae
mov
mov
mov
mov
movzx
sub
sub
add
sar
mov
movzx
sub
add
add
mov
mov
mov
shl
mov
jmp
mov
mov
mov
mov
sub
add
mov
mov
mov
sub
sub
add
mov
mov
movzx
sar
mov
movzx
sub
sub
add
mov
mov
mov
mov
add
add
sub
mov
sub
mov
sub
add
sub
mov
jmp
mov
mov
mov
mov
mov
mov
sub
add
add
mov
mov
mov
mov
cmp
jae
mov
mov
mov
sub
mov
add
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
jne
jmp
mov
add
add
sub
mov
mov
mov
mov
add
sub
sub
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
jne
jmp
jmp
mov
mov
mov
mov
mov
sub
add
add
mov
cmp
jne
mov
mov
mov
mov
sub
mov
add
imul
and
cmp
sete
cmp
setl
mov
xor
mov
xor
xor
mov
and
and
mov
and
and
or
or
xor
or
xor
or
and
or
test
jne
jmp
mov
mov
mov
mov
mov
sub
sub
add
imul
and
cmp
sete
cmp
setl
mov
xor
mov
xor
xor
mov
and
and
mov
and
and
or
or
xor
or
xor
or
and
or
test
jne
jmp
jmp
cmp
jge
mov
jmp
cmp
jge
mov
add
sub
sub
mov
jmp
mov
add
sub
sub
mov
jmp
mov
mov
mov
mov
add
sub
sub
imul
and
cmp
sete
cmp
setl
mov
xor
mov
xor
xor
mov
and
and
mov
and
and
or
or
xor
or
xor
or
and
or
test
jne
jmp
mov
mov
mov
mov
sub
sub
add
imul
and
cmp
sete
cmp
setl
mov
xor
mov
xor
xor
mov
and
and
mov
and
and
or
or
xor
or
xor
or
and
or
test
jne
jmp
jmp
mov
mov
mov
mov
sub
add
mov
mov
mov
sub
add
mov
mov
movzx
sar
mov
movzx
add
sub
sub
mov
mov
mov
add
mov
shl
add
mov
cmp
jae
mov
shl
mov
mov
shl
mov
mov
add
mov
movzx
mov
and
xor
or
mov
mov
shr
mov
movzx
imul
mov
mov
cmp
jae
mov
mov
mov
mov
sub
mov
add
imul
and
cmp
sete
cmp
setl
mov
xor
mov
xor
xor
mov
and
and
mov
and
and
or
or
xor
or
xor
or
and
or
test
jne
jmp
mov
mov
mov
mov
mov
mov
movzx
mov
sub
add
sar
mov
movzx
sub
add
add
mov
mov
mov
mov
mov
mov
mov
mov
cmp
cmovl
mov
mov
add
mov
mov
mov
mov
sub
sub
add
imul
and
cmp
sete
cmp
setl
mov
xor
mov
xor
xor
mov
and
and
mov
and
and
or
or
xor
or
xor
or
and
or
test
jne
jmp
jmp
mov
mov
mov
sub
sub
add
mov
mov
mov
add
sub
sub
mov
mov
movzx
sar
mov
movzx
sub
add
mov
mov
mov
add
mov
shl
add
mov
cmp
jae
mov
shl
mov
mov
shl
mov
mov
add
mov
movzx
mov
and
xor
or
mov
mov
shr
mov
movzx
imul
mov
mov
cmp
jae
mov
mov
mov
mov
mov
movzx
add
sub
sub
sar
mov
movzx
sub
sub
mov
mov
mov
add
mov
shl
shl
add
mov
shl
add
mov
cmp
jae
mov
mov
shl
mov
mov
shl
mov
mov
add
mov
movzx
mov
xor
mov
xor
xor
mov
and
and
mov
mov
and
mov
mov
and
or
mov
or
xor
or
xor
or
and
or
mov
mov
shr
mov
movzx
imul
mov
mov
cmp
jae
mov
mov
mov
mov
movzx
mov
sub
add
sar
mov
movzx
mov
sub
mov
sub
add
sub
mov
mov
cmp
jne
mov
jmp
mov
mov
mov
mov
sub
mov
add
imul
and
cmp
sete
cmp
setl
mov
xor
mov
xor
xor
mov
and
and
mov
and
and
or
or
xor
or
xor
or
and
or
test
jne
jmp
mov
cmp
setb
mov
mov
mov
sub
sub
add
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
mov
jne
jmp
mov
test
jne
jmp
mov
add
add
sub
mov
mov
mov
mov
mov
add
sub
sub
imul
and
cmp
sete
cmp
setl
mov
xor
mov
xor
xor
mov
and
and
mov
and
and
or
or
xor
or
xor
or
and
or
test
jne
jmp
mov
mov
mov
mov
cmp
cmovl
mov
mov
mov
sub
add
mov
mov
cmp
setae
mov
mov
mov
sub
sub
add
imul
and
cmp
sete
cmp
setl
mov
xor
mov
xor
xor
mov
and
and
mov
and
and
or
or
xor
or
xor
or
and
or
test
mov
jne
jmp
mov
test
jne
jmp
mov
mov
mov
mov
sub
mov
sub
add
sub
mov
mov
mov
mov
mov
sub
mov
add
imul
and
cmp
sete
cmp
setl
mov
xor
mov
xor
xor
mov
and
and
mov
and
and
or
or
xor
or
xor
or
and
or
test
jne
jmp
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
add
add
mov
cmp
sete
mov
mov
sub
mov
add
imul
and
cmp
sete
cmp
setl
mov
xor
mov
xor
xor
mov
and
and
mov
and
and
or
or
xor
or
xor
or
and
or
test
mov
jne
jmp
mov
test
jne
jmp
mov
mov
mov
mov
mov
sub
mov
sub
add
sub
mov
mov
mov
jmp
mov
mov
mov
sub
sub
add
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
jne
jmp
mov
mov
mov
mov
sub
add
mov
mov
mov
add
sub
sub
mov
mov
movzx
sar
mov
movzx
sub
sub
add
mov
mov
mov
mov
sub
mov
add
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
jne
jmp
jmp
jmp
mov
mov
add
sub
sub
mov
mov
mov
sub
sub
add
mov
mov
movzx
sar
mov
movzx
sub
sub
add
mov
mov
mov
add
mov
shl
add
mov
cmp
jae
mov
mov
shl
mov
mov
shl
mov
mov
add
mov
movzx
mov
xor
mov
xor
xor
mov
and
and
mov
mov
and
mov
mov
and
or
mov
or
xor
or
xor
or
and
or
mov
mov
shr
mov
movzx
imul
mov
mov
cmp
jae
mov
mov
mov
mov
movzx
sub
add
sar
mov
movzx
sub
add
add
mov
mov
mov
mov
jmp
mov
mov
mov
sub
add
mov
mov
mov
sub
sub
add
mov
mov
movzx
sar
mov
movzx
add
sub
sub
mov
mov
mov
add
mov
shl
add
mov
cmp
jae
mov
mov
shl
mov
mov
shl
mov
mov
add
mov
movzx
mov
xor
mov
xor
xor
mov
and
and
mov
mov
and
mov
mov
and
or
mov
or
xor
or
xor
or
and
or
mov
mov
shr
mov
movzx
imul
mov
mov
cmp
jae
mov
mov
mov
mov
mov
movzx
add
sub
sub
sar
mov
movzx
sub
sub
mov
mov
mov
mov
jmp
mov
mov
mov
add
sub
sub
mov
mov
mov
sub
add
mov
mov
movzx
sar
mov
movzx
add
sub
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
mov
add
imul
and
cmp
sete
cmp
setl
mov
xor
mov
xor
xor
mov
and
and
mov
and
and
or
or
xor
or
xor
or
and
or
test
jne
jmp
mov
mov
mov
mov
mov
mov
mov
mov
sub
mov
add
imul
and
cmp
sete
cmp
setl
mov
xor
mov
xor
xor
mov
and
and
mov
and
and
or
or
xor
or
xor
or
and
or
test
jne
jmp
jmp
mov
mov
cmp
cmovl
mov
mov
add
mov
mov
mov
mov
mov
sub
mov
add
imul
and
cmp
sete
cmp
setl
mov
xor
mov
xor
xor
mov
and
and
mov
and
and
or
or
xor
or
xor
or
and
or
test
jne
jmp
mov
mov
cmp
setb
mov
mov
mov
add
sub
sub
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
mov
jne
jmp
mov
test
jne
jmp
mov
mov
shl
mov
mov
shl
mov
mov
add
mov
movzx
mov
xor
mov
xor
xor
mov
and
and
mov
mov
and
mov
mov
and
or
mov
or
xor
or
xor
or
and
or
mov
mov
shr
mov
movzx
imul
mov
mov
cmp
jae
mov
mov
mov
mov
movzx
sub
sub
add
sar
mov
movzx
sub
add
add
mov
mov
mov
add
mov
shl
shl
add
mov
mov
mov
jmp
mov
mov
mov
mov
sub
add
mov
mov
mov
mov
sub
add
mov
mov
movzx
sar
mov
movzx
sub
add
mov
mov
mov
add
mov
cmp
jae
mov
mov
mov
mov
add
sub
sub
imul
and
cmp
sete
cmp
setl
mov
xor
mov
xor
xor
mov
and
and
mov
and
and
or
or
xor
or
xor
or
and
or
test
jne
jmp
mov
mov
mov
shl
mov
mov
shl
mov
mov
add
mov
movzx
mov
xor
mov
xor
xor
mov
mov
and
and
mov
mov
and
and
mov
mov
or
mov
or
xor
or
xor
or
and
or
mov
mov
mov
mov
sub
mov
add
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
jne
jmp
jmp
mov
mov
mov
mov
sub
mov
add
imul
and
cmp
sete
cmp
setl
mov
xor
mov
xor
xor
mov
and
and
mov
and
and
or
or
xor
or
xor
or
and
or
test
jne
jmp
mov
mov
shr
mov
movzx
imul
mov
mov
cmp
setb
mov
mov
sub
mov
add
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
mov
jne
jmp
mov
test
jne
jmp
mov
mov
mov
mov
movzx
mov
sub
add
sar
mov
movzx
sub
sub
mov
mov
mov
add
mov
shl
shl
add
mov
mov
mov
jmp
mov
mov
mov
mov
sub
add
mov
mov
mov
sub
add
mov
mov
movzx
sar
mov
movzx
sub
sub
add
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
sub
sub
add
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
jne
jmp
mov
mov
mov
mov
sub
sub
add
imul
and
cmp
sete
cmp
setl
mov
xor
mov
xor
xor
mov
and
and
mov
and
and
or
or
xor
or
xor
or
and
or
test
jne
jmp
jmp
mov
mov
mov
mov
mov
shl
add
mov
cmp
jae
mov
mov
shl
mov
mov
shl
mov
mov
add
mov
movzx
mov
xor
mov
xor
xor
mov
and
and
mov
mov
and
mov
mov
and
or
mov
or
xor
or
xor
or
and
or
mov
mov
shr
mov
movzx
imul
mov
mov
cmp
jae
mov
mov
mov
mov
movzx
add
sub
sub
sar
mov
movzx
add
add
sub
mov
mov
mov
shl
mov
jmp
mov
mov
mov
mov
add
sub
sub
imul
and
cmp
sete
cmp
setl
mov
xor
mov
xor
xor
mov
and
and
mov
and
and
or
or
xor
or
xor
or
and
or
test
jne
jmp
mov
mov
mov
mov
add
sub
sub
mov
mov
mov
mov
sub
add
mov
mov
movzx
sar
mov
movzx
add
sub
sub
mov
mov
mov
mov
mov
sub
mov
sub
add
mov
sub
mov
sub
mov
sub
add
sub
mov
mov
mov
mov
add
sub
sub
imul
and
cmp
sete
cmp
setl
mov
xor
mov
xor
xor
mov
and
and
mov
and
and
or
or
xor
or
xor
or
and
or
test
jne
jmp
jmp
jmp
mov
mov
mov
mov
sub
mov
add
imul
and
cmp
sete
cmp
setl
mov
xor
mov
xor
xor
mov
and
and
mov
and
and
or
or
xor
or
xor
or
and
or
test
jne
jmp
mov
mov
mov
mov
sub
mov
sub
add
sub
mov
cmp
setne
mov
mov
mov
sub
sub
add
imul
and
cmp
sete
cmp
setl
mov
xor
mov
xor
xor
mov
and
and
mov
and
and
or
or
xor
or
xor
or
and
or
test
mov
jne
jmp
mov
test
jne
jmp
mov
mov
mov
mov
mov
mov
shl
mov
sub
sub
add
mov
mov
mov
mov
sub
mov
sub
add
sub
mov
cmp
jge
mov
sub
add
add
mov
mov
add
cmp
mov
jge
mov
mov
mov
mov
add
sub
sub
imul
and
cmp
sete
cmp
setl
mov
xor
mov
xor
xor
mov
and
and
mov
and
and
or
or
xor
or
xor
or
and
or
test
jne
jmp
mov
mov
mov
mov
mov
sub
mov
add
imul
and
cmp
sete
cmp
setl
mov
xor
mov
xor
xor
mov
and
and
mov
mov
and
mov
mov
and
or
mov
or
xor
or
xor
or
and
or
test
mov
jne
jmp
mov
mov
jmp
mov
mov
jmp
mov
shl
shl
mov
add
mov
mov
mov
mov
mov
shl
add
mov
cmp
jae
mov
shl
mov
mov
shl
mov
mov
add
mov
movzx
mov
and
xor
or
mov
mov
shr
mov
movzx
imul
mov
mov
cmp
jae
mov
mov
mov
mov
movzx
mov
sub
add
sar
mov
movzx
mov
sub
mov
sub
add
sub
mov
mov
mov
shl
mov
jmp
mov
mov
mov
add
sub
sub
mov
mov
mov
add
sub
sub
mov
mov
movzx
sar
mov
movzx
sub
sub
add
mov
mov
mov
mov
mov
sub
mov
sub
add
sub
sub
add
add
mov
mov
mov
mov
mov
add
sub
sub
imul
and
cmp
sete
cmp
setl
mov
xor
mov
xor
xor
mov
and
and
mov
and
and
or
or
xor
or
xor
or
and
or
test
jne
jmp
mov
mov
mov
mov
sub
sub
add
imul
and
cmp
sete
cmp
setl
mov
xor
mov
xor
xor
mov
and
and
mov
and
and
or
or
xor
or
xor
or
and
or
test
jne
jmp
jmp
mov
sub
add
add
mov
cmp
jne
mov
add
sub
sub
mov
cmp
jl
mov
mov
mov
sar
sub
add
mov
mov
mov
xor
mov
xor
and
mov
xor
mov
xor
xor
mov
and
mov
and
mov
mov
and
mov
mov
and
or
mov
or
xor
or
xor
or
and
or
mov
cmp
jge
mov
mov
mov
mov
sub
mov
add
imul
and
cmp
sete
cmp
setl
mov
xor
mov
xor
xor
mov
and
and
mov
and
and
or
or
xor
or
xor
or
and
or
test
jne
jmp
mov
mov
mov
mov
mov
mov
shl
mov
mov
add
mov
shl
add
mov
mov
sub
add
shl
add
add
mov
mov
mov
mov
sub
mov
add
imul
and
cmp
sete
cmp
setl
mov
xor
mov
xor
xor
mov
and
and
mov
and
and
or
or
xor
or
xor
or
and
or
test
jne
jmp
jmp
mov
add
sub
sub
mov
cmp
jae
mov
shl
mov
mov
shl
mov
mov
add
mov
movzx
mov
and
xor
or
mov
mov
shr
mov
mov
shl
mov
mov
cmp
jb
mov
mov
mov
add
sub
sub
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
jne
jmp
mov
mov
mov
mov
add
sub
sub
mov
mov
mov
xor
mov
xor
xor
mov
and
and
mov
mov
and
mov
mov
and
or
mov
or
xor
or
xor
or
and
or
mov
mov
mov
mov
sub
mov
add
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
jne
jmp
jmp
jmp
mov
sub
add
add
mov
cmp
jne
mov
add
mov
mov
shl
mov
mov
mov
mov
mov
mov
mov
mov
sub
sub
add
imul
and
cmp
sete
cmp
setl
mov
xor
mov
xor
xor
mov
and
and
mov
and
and
or
or
xor
or
xor
or
and
or
test
jne
jmp
mov
mov
mov
shl
add
mov
cmp
setb
mov
mov
mov
sub
sub
add
imul
and
cmp
sete
cmp
setl
mov
xor
mov
xor
xor
mov
and
and
mov
and
and
or
or
xor
or
xor
or
and
or
test
mov
jne
jmp
mov
test
jne
jmp
mov
mov
mov
add
sub
sub
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
jne
jmp
mov
shl
mov
mov
shl
mov
mov
add
mov
movzx
mov
and
xor
or
mov
mov
mov
mov
sub
sub
add
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
jne
jmp
jmp
mov
mov
mov
add
sub
sub
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
jne
jmp
mov
shr
mov
movzx
imul
mov
mov
cmp
setb
mov
mov
mov
sub
sub
add
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
mov
jne
jmp
mov
test
jne
jmp
mov
mov
mov
mov
movzx
add
sub
sub
sar
mov
movzx
add
add
sub
mov
mov
mov
shl
mov
jmp
mov
mov
add
sub
sub
mov
mov
mov
sub
sub
add
mov
mov
movzx
sar
mov
movzx
add
sub
sub
mov
mov
mov
mov
add
add
sub
sub
add
add
mov
mov
mov
mov
and
xor
or
mov
mov
shl
mov
mov
mov
mov
mov
sub
sub
add
imul
and
cmp
sete
cmp
setl
mov
xor
mov
xor
xor
mov
and
and
mov
and
and
or
or
xor
or
xor
or
and
or
test
jne
jmp
mov
mov
add
add
sub
mov
cmp
setne
mov
mov
mov
add
sub
sub
imul
and
cmp
sete
cmp
setl
mov
xor
mov
xor
xor
mov
and
and
mov
and
and
or
or
xor
or
xor
or
and
or
test
mov
jne
jmp
mov
test
jne
jmp
jmp
mov
mov
mov
mov
sub
sub
add
imul
and
cmp
sete
cmp
setl
mov
xor
mov
xor
xor
mov
and
and
mov
and
and
or
or
xor
or
xor
or
and
or
test
jne
jmp
mov
mov
mov
mov
mov
mov
sub
sub
add
imul
and
cmp
sete
cmp
setl
mov
xor
mov
xor
xor
mov
and
and
mov
and
and
or
or
xor
or
xor
or
and
or
test
jne
jmp
jmp
mov
mov
sub
sub
mov
cmp
jne
mov
jmp
mov
mov
mov
mov
add
sub
sub
imul
and
cmp
sete
cmp
setl
mov
xor
mov
xor
xor
mov
and
and
mov
and
and
or
or
xor
or
xor
or
and
or
test
jne
jmp
mov
mov
mov
add
sub
sub
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
jne
jmp
jmp
mov
mov
mov
mov
sub
sub
add
imul
and
cmp
sete
cmp
setl
mov
xor
mov
xor
xor
mov
and
and
mov
and
and
or
or
xor
or
xor
or
and
or
test
jne
jmp
mov
sub
add
add
mov
mov
cmp
seta
mov
mov
mov
sub
sub
add
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
mov
jne
jmp
mov
test
jne
jmp
mov
mov
mov
sub
mov
add
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
jne
jmp
mov
mov
mov
mov
sub
mov
add
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
jne
jmp
jmp
mov
mov
mov
mov
add
sub
sub
imul
and
cmp
sete
cmp
setl
mov
xor
mov
xor
xor
mov
and
and
mov
and
and
or
or
xor
or
xor
or
and
or
test
jne
jmp
mov
mov
mov
sub
sub
add
cmp
seta
mov
mov
mov
sub
sub
add
imul
and
cmp
sete
cmp
setl
mov
xor
mov
xor
xor
mov
and
and
mov
and
and
or
or
xor
or
xor
or
and
or
test
mov
jne
jmp
mov
test
jne
jmp
mov
mov
mov
mov
sub
mov
sub
add
sub
mov
jmp
mov
mov
jmp
mov
mov
sub
sub
add
mov
mov
cmp
jb
mov
mov
mov
sub
sub
mov
mov
mov
mov
sub
mov
add
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
jne
jmp
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
sub
mov
cmp
sete
mov
mov
mov
add
sub
sub
imul
and
cmp
sete
cmp
setl
mov
xor
mov
xor
xor
mov
and
and
mov
and
and
or
or
xor
or
xor
or
and
or
test
mov
jne
jmp
mov
test
jne
jmp
mov
mov
mov
mov
sub
mov
sub
add
sub
mov
mov
mov
mov
sub
add
add
mov
mov
mov
mov
cmp
mov
je
mov
mov
mov
sub
mov
add
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
jne
jmp
mov
mov
cmp
setb
mov
mov
mov
sub
sub
add
imul
and
cmp
sete
cmp
setl
mov
xor
mov
xor
xor
mov
and
and
mov
and
and
or
or
xor
or
xor
or
and
or
test
mov
jne
jmp
mov
mov
jmp
mov
mov
mov
mov
sub
sub
add
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
mov
jne
jmp
mov
mov
mov
add
sub
sub
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
jne
jmp
mov
test
jne
jmp
jmp
mov
mov
mov
add
sub
sub
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
jne
jmp
mov
mov
mov
sub
sub
add
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
jne
jmp
jmp
cmp
jae
mov
shl
mov
mov
shl
mov
mov
add
mov
movzx
mov
and
xor
or
mov
mov
mov
mov
sub
sub
add
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
jne
jmp
mov
mov
mov
add
sub
add
mov
sub
sub
add
mov
cmp
setl
mov
mov
mov
add
sub
sub
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
mov
jne
jmp
mov
test
jne
jmp
mov
mov
mov
mov
sub
mov
add
imul
and
cmp
sete
cmp
setl
mov
xor
mov
xor
xor
mov
and
and
mov
and
and
or
or
xor
or
xor
or
and
or
test
jne
jmp
mov
mov
mov
mov
sub
mov
add
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
jne
jmp
jmp
mov
mov
cmp
jge
mov
mov
mov
mov
mov
mov
mov
mov
sub
sub
mov
jmp
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
add
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
pop
pop
pop
pop
ret
mov
jmp
jmp
jmp
mov
mov
mov
mov
mov
mov
sub
sub
mov
mov
mov
shl
mov
sub
mov
sub
add
sub
mov
mov
jmp
jmp
mov
mov
mov
sub
mov
sub
add
sub
mov
jmp
mov
mov
mov
sub
mov
sub
add
sub
mov
jmp
jmp
mov
jmp
mov
sub
add
add
mov
jmp
mov
mov
sub
add
mov
mov
mov
jmp
jmp
jmp
mov
mov
mov
add
mov
mov
mov
mov
sub
add
add
mov
mov
mov
mov
mov
add
add
sub
mov
mov
mov
sub
mov
sub
add
sub
mov
jmp
jmp
mov
mov
mov
mov
mov
mov
mov
movzx
sub
sub
add
sar
mov
movzx
mov
sub
mov
sub
add
mov
sub
mov
mov
mov
add
mov
mov
sub
sub
mov
xor
mov
xor
and
mov
shl
movzx
mov
add
sub
sub
mov
sar
sub
add
add
imul
shl
add
mov
jmp
mov
mov
sub
add
add
mov
jmp
mov
mov
mov
mov
mov
movzx
sub
sub
add
sar
mov
movzx
mov
sub
mov
sub
add
sub
mov
mov
mov
shl
mov
jmp
jmp
jmp
mov
sub
add
add
mov
jmp
mov
jmp
jmp
mov
mov
mov
mov
mov
mov
movzx
add
sub
sub
sar
mov
movzx
mov
sub
sub
mov
mov
mov
mov
mov
mov
mov
cmp
cmovl
mov
mov
add
mov
jmp
jmp
mov
mov
cmp
cmovl
mov
mov
mov
sub
sub
add
mov
jmp
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
add
add
mov
jmp
mov
mov
add
sub
sub
mov
mov
mov
sub
sub
add
mov
mov
movzx
sar
mov
movzx
sub
sub
add
mov
mov
jmp
mov
mov
mov
mov
jmp
mov
mov
jmp
mov
shl
mov
mov
shl
mov
mov
add
mov
movzx
mov
and
xor
or
mov
jmp
mov
shr
mov
movzx
imul
mov
jmp
jmp
mov
mov
mov
mov
sub
add
mov
mov
mov
add
sub
sub
mov
mov
movzx
sar
mov
movzx
mov
sub
add
mov
mov
mov
mov
mov
sub
mov
sub
add
mov
sub
sub
sub
mov
jmp
mov
sub
add
add
mov
jmp
jmp
jmp
mov
mov
mov
shl
mov
mov
add
mov
shl
add
mov
sub
sub
add
shl
add
add
mov
jmp
mov
mov
mov
mov
sub
add
mov
mov
mov
xor
mov
xor
xor
mov
and
and
mov
and
mov
and
or
or
xor
or
xor
mov
or
and
or
mov
jmp
mov
mov
shl
add
mov
jmp
mov
shl
mov
mov
shl
mov
mov
add
mov
movzx
mov
and
xor
or
mov
jmp
mov
shr
mov
movzx
imul
mov
jmp
mov
add
add
sub
mov
jmp
mov
mov
jmp
jmp
mov
mov
mov
sub
mov
sub
add
sub
mov
jmp
mov
jmp
jmp
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
sub
mov
jmp
jmp
jmp
jmp
mov
mov
mov
add
add
sub
sub
mov
sub
add
mov
jmp
mov
jmp
push
mov
cmp
je
push
push
push
call
test
jne
push
call
mov
call
push
call
pop
mov
pop
pop
ret
push
mov
push
and
push
lea
push
push
push
call
mov
add
test
jne
cmp
je
call
test
je
call
mov
mov
mov
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
lea
sub
sbb
not
and
mov
and
cmp
jb
mov
pop
xchg
mov
mov
ret
sub
test
jmp
call
jmp
push
push
call
call
movzx
push
call
pop
mov
cmp
je
xor
jmp
mov
cmp
jne
mov
cmp
jne
xor
cmp
jbe
cmp
setne
mov
call
test
jne
push
call
pop
call
test
jne
push
call
pop
call
and
call
test
jns
push
call
pop
call
mov
call
mov
call
test
jns
push
call
pop
call
test
jns
push
call
pop
push
call
pop
test
je
push
call
pop
call
push
push
push
push
call
mov
mov
test
jne
push
call
call
jmp
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
mov
mov
cmp
jne
push
call
call
mov
mov
call
ret
push
mov
cmp
jne
call
push
call
push
call
pop
pop
pop
ret
int3
int3
int3
int3
mov
mov
test
je
movzx
bt
jae
mov
push
mov
rep
jmp
mov
cmp
jl
bt
jb
push
mov
cmp
jb
neg
and
je
sub
mov
add
sub
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
add
sub
jne
mov
pop
ret
mov
ret
call
mov
imul
add
mov
shr
and
mov
ret
push
mov
call
mov
mov
pop
ret
push
mov
push
push
lea
push
call
mov
mov
push
add
push
adc
push
push
call
cmp
jl
jg
cmp
jbe
or
mov
mov
test
je
mov
mov
leave
ret
push
mov
push
mov
cmp
ja
push
push
mov
test
jne
call
push
call
push
call
mov
pop
pop
test
je
mov
jmp
xor
inc
push
push
push
call
mov
test
jne
push
pop
cmp
je
push
call
pop
test
jne
jmp
call
mov
call
mov
mov
pop
pop
jmp
push
call
pop
call
mov
xor
pop
pop
ret
call
test
jne
mov
ret
add
ret
push
mov
push
call
mov
push
mov
call
pop
mov
call
mov
pop
pop
ret
call
test
jne
mov
ret
add
ret
push
mov
mov
xor
cmp
je
inc
cmp
jb
lea
cmp
ja
push
pop
pop
ret
lea
push
pop
cmp
sbb
and
add
pop
ret
mov
pop
ret
call
xor
test
setne
mov
mov
ret
push
mov
push
mov
test
je
push
xor
pop
div
cmp
jae
call
mov
xor
jmp
imul
test
jne
inc
xor
cmp
ja
push
push
push
call
mov
test
jne
cmp
je
push
call
pop
test
jne
mov
test
je
jmp
mov
test
je
mov
mov
pop
pop
ret
push
mov
mov
mov
cmp
jne
cmp
jne
mov
cmp
je
cmp
je
cmp
je
cmp
je
xor
pop
ret
call
int3
push
call
pop
xor
ret
push
mov
push
call
mov
test
je
mov
push
mov
mov
cmp
je
add
lea
cmp
jb
lea
cmp
jae
cmp
je
xor
test
je
mov
test
je
cmp
jne
and
xor
inc
jmp
cmp
jne
or
jmp
mov
push
mov
mov
cmp
jne
push
pop
mov
add
and
cmp
jl
cmp
mov
jne
mov
jmp
cmp
jne
mov
jmp
cmp
jne
mov
jmp
cmp
jne
mov
jmp
cmp
jne
mov
jmp
cmp
jne
mov
jmp
cmp
jne
mov
jmp
cmp
jne
mov
jmp
cmp
jne
mov
push
push
call
pop
mov
jmp
push
and
call
pop
mov
or
pop
jmp
xor
pop
pop
pop
ret
push
push
call
mov
test
je
cmp
je
push
call
pop
cmp
je
push
call
pop
cmp
je
push
call
pop
cmp
je
push
call
pop
cmp
je
push
call
pop
cmp
je
push
call
pop
cmp
je
push
call
pop
cmp
je
push
call
pop
push
call
pop
and
mov
test
je
push
call
test
jne
cmp
je
push
call
pop
mov
call
push
call
pop
mov
mov
test
je
push
call
pop
cmp
je
cmp
je
cmp
jne
push
call
pop
mov
call
push
call
pop
call
ret
mov
push
call
pop
ret
mov
push
call
pop
ret
push
call
mov
test
jne
push
call
pop
mov
pop
ret
push
push
call
push
mov
call
mov
pop
test
jne
push
push
call
mov
pop
pop
test
je
push
push
call
pop
pop
test
je
push
push
call
pop
pop
call
or
mov
jmp
push
call
pop
xor
push
call
pop
mov
pop
ret
push
push
call
mov
mov
and
xor
inc
mov
mov
push
pop
mov
mov
mov
and
push
call
pop
and
push
call
mov
call
push
call
pop
mov
mov
mov
test
jne
mov
mov
push
call
pop
mov
call
call
ret
xor
inc
mov
push
call
pop
ret
push
call
pop
ret
call
call
test
jne
call
xor
ret
push
call
pop
mov
cmp
je
push
push
push
call
mov
pop
pop
test
je
push
push
call
pop
pop
test
je
push
push
call
pop
pop
call
or
mov
xor
inc
pop
ret
call
xor
pop
ret
mov
cmp
je
push
call
or
pop
jmp
push
mov
push
lea
push
push
push
call
test
je
push
push
call
test
je
push
call
leave
ret
push
mov
push
call
pop
push
call
int3
push
mov
call
push
call
pop
push
call
int3
push
push
push
call
add
ret
push
push
push
call
add
ret
push
mov
cmp
je
push
call
pop
test
je
push
call
pop
call
push
push
call
pop
pop
test
jne
push
push
push
call
pop
mov
mov
jmp
mov
test
je
call
add
cmp
jb
cmp
pop
pop
je
push
call
pop
test
je
push
push
push
call
xor
pop
ret
push
mov
push
push
push
call
add
pop
ret
push
push
call
mov
push
call
push
call
push
call
push
call
push
call
push
call
add
pop
jmp
push
mov
push
mov
jmp
mov
test
je
call
add
cmp
jb
pop
pop
ret
push
mov
push
mov
xor
jmp
test
jne
mov
test
je
call
add
cmp
jb
pop
pop
ret
push
call
pop
ret
push
call
pop
ret
push
push
call
push
call
pop
and
cmp
je
mov
mov
mov
cmp
jne
push
mov
call
mov
mov
test
je
push
call
mov
mov
mov
mov
sub
mov
cmp
jb
push
call
cmp
je
cmp
jb
push
call
mov
push
call
mov
call
push
mov
call
mov
push
call
mov
cmp
jne
cmp
je
mov
mov
mov
mov
mov
jmp
push
push
call
pop
pop
push
push
call
pop
pop
mov
call
cmp
jne
mov
push
call
pop
push
call
cmp
je
push
call
pop
ret
call
ret
push
mov
push
push
push
call
add
pop
ret
push
call
pop
cmp
je
push
call
pop
test
jne
cmp
jne
push
call
push
call
pop
pop
ret
push
mov
mov
xor
cmp
je
inc
cmp
jb
xor
pop
ret
mov
pop
ret
push
mov
sub
mov
xor
mov
push
mov
push
push
call
mov
pop
test
je
push
push
call
pop
cmp
je
push
call
pop
test
jne
cmp
je
cmp
je
push
push
push
call
add
xor
test
jne
push
push
push
mov
call
mov
test
jne
push
push
push
call
add
test
jne
push
call
inc
pop
cmp
jbe
push
call
lea
mov
sub
push
sar
push
sub
push
push
call
add
test
jne
push
push
mov
push
call
add
test
jne
push
push
push
call
add
test
jne
push
push
push
call
add
jmp
push
call
mov
test
je
cmp
je
xor
mov
mov
mov
cmp
je
inc
cmp
jb
push
lea
push
lea
push
mov
call
pop
push
lea
push
push
call
pop
mov
pop
xor
pop
call
leave
ret
push
push
push
push
push
call
int3
push
push
call
push
call
pop
xor
mov
push
push
pop
push
call
pop
pop
mov
mov
test
jne
push
lea
push
push
call
add
or
jmp
mov
mov
add
cmp
jae
mov
or
mov
and
mov
and
mov
mov
mov
mov
add
mov
mov
jmp
lea
push
call
cmp
je
mov
test
je
mov
mov
add
mov
add
mov
mov
cmp
jl
mov
mov
xor
inc
mov
cmp
jge
push
push
call
pop
pop
mov
mov
test
jne
mov
mov
mov
mov
mov
mov
cmp
jge
mov
cmp
je
cmp
je
mov
test
je
test
jne
push
call
mov
test
je
mov
sar
mov
and
shl
add
mov
mov
mov
mov
mov
mov
push
lea
push
call
inc
mov
mov
inc
mov
mov
inc
mov
add
mov
jmp
mov
add
mov
add
cmp
jae
mov
or
mov
and
mov
mov
mov
add
mov
jmp
inc
mov
mov
jmp
mov
cmp
jge
mov
shl
add
mov
cmp
je
cmp
je
movsx
or
mov
jmp
mov
test
jne
push
pop
jmp
lea
neg
sbb
add
push
call
mov
cmp
je
test
je
push
call
test
je
mov
and
cmp
jne
movsx
or
jmp
cmp
jne
movsx
or
mov
push
lea
push
call
inc
jmp
movsx
or
mov
mov
mov
test
je
mov
mov
inc
jmp
mov
call
xor
call
ret
push
call
pop
ret
push
mov
push
push
cmp
jne
call
push
push
push
push
mov
xor
push
push
mov
call
mov
mov
test
je
cmp
jne
mov
lea
push
lea
push
push
push
push
call
mov
add
cmp
jae
mov
cmp
jae
lea
cmp
jb
push
call
mov
pop
test
je
lea
push
lea
push
lea
push
push
push
call
mov
add
dec
mov
mov
xor
jmp
or
pop
pop
pop
leave
ret
push
mov
mov
push
mov
push
and
mov
mov
mov
push
mov
test
je
mov
add
mov
xor
mov
cmp
jne
xor
test
sete
inc
mov
mov
mov
jmp
inc
test
je
mov
mov
inc
mov
mov
movzx
push
inc
call
pop
test
je
inc
test
je
mov
mov
inc
inc
mov
test
je
mov
test
jne
cmp
je
cmp
jne
test
je
mov
jmp
dec
and
cmp
je
mov
cmp
je
cmp
jne
inc
jmp
cmp
je
mov
test
je
mov
add
mov
mov
inc
xor
inc
xor
jmp
inc
inc
cmp
je
cmp
jne
test
jne
cmp
je
lea
cmp
jne
mov
jmp
xor
xor
cmp
sete
mov
shr
jmp
dec
test
je
mov
inc
inc
test
jne
mov
test
je
cmp
jne
cmp
je
cmp
je
test
je
movsx
push
call
pop
test
je
test
je
mov
mov
inc
inc
inc
mov
mov
inc
jmp
test
je
inc
inc
inc
inc
jmp
test
je
mov
inc
inc
jmp
mov
pop
pop
pop
test
je
and
mov
inc
pop
ret
cmp
jne
call
push
mov
push
xor
test
jne
or
jmp
cmp
je
inc
push
call
inc
pop
add
mov
test
jne
lea
push
push
call
mov
pop
pop
mov
test
je
mov
push
cmp
je
push
call
cmp
pop
lea
je
push
push
call
pop
pop
mov
test
je
push
push
push
call
add
test
jne
add
add
cmp
jne
mov
push
call
and
and
mov
xor
pop
pop
pop
pop
ret
push
call
and
or
jmp
xor
push
push
push
push
push
call
int3
push
mov
mov
mov
pop
ret
push
mov
mov
test
js
cmp
jle
cmp
jne
mov
jmp
mov
mov
mov
pop
ret
call
mov
call
or
pop
ret
push
mov
sub
mov
and
and
push
push
mov
mov
cmp
je
test
je
not
mov
jmp
lea
push
call
mov
xor
mov
call
xor
call
xor
lea
push
call
mov
xor
lea
xor
xor
cmp
jne
mov
jmp
test
jne
mov
or
shl
or
mov
not
mov
pop
pop
leave
ret
push
push
mov
mov
jmp
mov
test
je
call
add
cmp
jb
pop
pop
ret
push
push
mov
mov
jmp
mov
test
je
call
add
cmp
jb
pop
pop
ret
push
mov
push
push
call
mov
xor
test
je
push
mov
cmp
je
add
cmp
jne
add
cmp
jne
push
push
push
push
sub
push
sar
inc
push
push
push
push
call
mov
test
je
push
call
mov
pop
test
je
xor
push
push
push
push
push
push
push
push
call
test
jne
push
call
pop
xor
push
call
mov
jmp
push
call
xor
pop
pop
pop
leave
ret
push
mov
mov
xor
je
push
call
pop
ret
pop
jmp
push
mov
mov
xor
push
je
call
pop
ret
call
pop
ret
push
mov
mov
xor
push
je
call
pop
ret
call
pop
ret
push
mov
mov
xor
push
push
je
call
pop
ret
call
pop
ret
push
mov
sub
lea
push
call
test
je
movzx
leave
ret
push
pop
leave
ret
push
mov
push
push
mov
test
jns
mov
xor
xor
mov
je
push
lea
push
call
cmp
jne
inc
mov
xor
test
setg
pop
leave
ret
push
push
push
call
mov
mov
push
push
call
xor
push
push
mov
call
xor
push
push
mov
call
xor
push
push
mov
call
xor
push
push
mov
call
xor
push
push
mov
call
xor
push
push
mov
call
xor
push
push
mov
call
xor
push
push
mov
call
xor
push
push
mov
call
xor
push
push
mov
call
xor
push
push
mov
call
xor
push
push
mov
call
xor
push
push
mov
call
xor
push
push
mov
call
xor
mov
push
push
call
xor
push
push
mov
call
xor
push
push
mov
call
xor
push
push
mov
call
xor
push
push
mov
call
xor
push
push
mov
call
xor
push
push
mov
call
xor
push
push
mov
call
xor
push
push
mov
call
xor
push
push
mov
call
xor
push
push
mov
call
xor
push
push
mov
call
xor
push
push
mov
call
xor
push
push
mov
call
xor
pop
mov
pop
ret
push
mov
push
call
pop
ret
push
mov
push
call
push
call
pop
ret
push
mov
push
call
push
call
pop
ret
push
push
xor
cmp
jne
call
mov
test
jne
mov
mov
cmp
ja
test
je
test
je
cmp
jne
xor
test
sete
mov
movzx
push
call
pop
test
je
inc
inc
jmp
cmp
ja
inc
mov
test
jne
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
push
mov
mov
lea
sub
push
push
push
mov
xor
xor
push
mov
push
mov
mov
mov
lea
mov
ret
mov
mov
pop
pop
pop
pop
pop
mov
pop
push
ret
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
push
mov
push
push
mov
xor
mov
mov
mov
lea
cmp
je
mov
add
xor
call
mov
mov
add
xor
call
mov
test
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
lea
mov
mov
lea
mov
test
je
mov
call
mov
mov
test
js
jle
mov
cmp
jne
cmp
je
push
call
add
test
je
push
push
call
add
mov
mov
call
mov
mov
cmp
je
push
push
mov
call
mov
mov
mov
cmp
je
jmp
mov
mov
mov
cmp
jne
test
je
jmp
mov
jmp
cmp
je
push
push
mov
mov
call
mov
cmp
je
mov
add
xor
call
mov
mov
add
xor
call
mov
pop
pop
pop
mov
pop
ret
mov
add
xor
call
mov
mov
add
xor
call
mov
mov
mov
call
int3
test
jne
pxor
jmp
movd
punpcklbw
punpcklwd
pshufd
push
push
mov
and
test
jne
mov
and
shr
je
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
lea
dec
jne
test
je
mov
shr
je
jmp
lea
movdqa
lea
dec
jne
and
je
mov
shr
je
movd
lea
dec
jne
and
je
mov
inc
dec
jne
pop
pop
ret
neg
add
sub
push
mov
and
je
mov
inc
dec
jne
shr
je
movd
lea
dec
jne
pop
jmp
push
mov
and
sub
push
xor
inc
or
push
call
test
je
xor
mov
mov
cpuid
push
mov
push
lea
or
mov
mov
mov
mov
test
mov
je
or
mov
mov
test
je
or
mov
mov
push
xor
pop
cpuid
lea
mov
mov
mov
mov
test
mov
je
or
mov
xor
xor
cpuid
lea
mov
mov
mov
mov
cmp
jne
cmp
jne
cmp
jne
xor
inc
xor
cpuid
mov
mov
mov
mov
mov
and
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
cmp
jne
or
mov
pop
pop
xor
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
push
mov
or
jne
mov
mov
xor
div
mov
mov
div
mov
jmp
mov
mov
mov
mov
shr
rcr
shr
rcr
or
jne
div
mov
mul
mov
mov
mul
add
jb
cmp
ja
jb
cmp
jbe
dec
xor
mov
pop
pop
ret
push
mov
push
call
test
je
push
call
pop
test
je
xor
inc
pop
ret
xor
pop
ret
push
mov
mov
mov
pop
ret
push
mov
sub
mov
xor
mov
cmp
push
je
push
call
pop
and
push
lea
push
push
call
lea
mov
lea
add
mov
mov
mov
mov
mov
mov
mov
data16
data16
data16
data16
data16
data16
pushf
pop
mov
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
mov
lea
push
call
pop
test
jne
test
jne
cmp
je
push
call
pop
mov
xor
pop
call
leave
ret
push
mov
mov
mov
pop
ret
push
mov
push
call
test
je
pop
jmp
push
push
push
push
push
call
int3
xor
push
push
push
push
push
call
add
ret
push
call
test
je
push
pop
int
push
push
mov
push
push
call
push
call
add
pop
ret
push
push
call
call
mov
test
je
and
call
jmp
xor
inc
ret
mov
mov
call
int3
push
call
mov
ret
push
mov
push
mov
cmp
jne
push
call
pop
test
jne
push
call
pop
push
call
pop
pop
ret
push
push
mov
mov
push
mov
test
je
cmp
je
push
call
push
call
and
pop
add
cmp
jl
pop
cmp
je
cmp
jne
push
call
add
cmp
jl
pop
pop
ret
push
push
call
cmp
jne
call
push
call
push
call
pop
pop
mov
cmp
jne
push
call
pop
mov
test
jne
call
mov
xor
jmp
push
call
pop
and
cmp
jne
push
push
call
mov
jmp
push
call
pop
mov
call
xor
inc
call
ret
push
call
pop
ret
push
push
mov
mov
cmp
jne
mov
push
push
add
call
add
cmp
jl
xor
pop
inc
pop
ret
push
mov
mov
push
call
pop
ret
push
mov
push
push
xor
push
push
push
call
mov
add
test
jne
cmp
jbe
push
call
lea
mov
cmp
jbe
or
cmp
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
xor
push
call
mov
pop
test
jne
test
je
push
call
mov
lea
mov
cmp
jbe
or
cmp
jne
pop
pop
mov
pop
pop
ret
push
mov
push
push
xor
push
push
call
mov
pop
pop
test
jne
cmp
je
cmp
jbe
push
call
lea
mov
cmp
jbe
or
cmp
jne
mov
pop
pop
pop
ret
push
mov
push
push
mov
push
mov
push
call
cmp
je
push
call
mov
test
je
push
call
cmp
je
push
call
mov
test
je
push
call
push
pop
lea
mov
cmp
je
cmp
je
push
call
mov
cmp
je
cmp
je
push
call
mov
add
dec
mov
jne
mov
add
push
call
pop
pop
pop
pop
ret
push
mov
push
push
mov
xor
mov
push
test
je
cmp
je
mov
test
je
cmp
jne
mov
test
je
cmp
jne
push
call
push
call
pop
pop
mov
test
je
cmp
jne
push
call
push
call
pop
pop
push
call
push
call
pop
pop
mov
test
je
cmp
jne
mov
sub
push
call
mov
mov
sub
push
call
mov
sub
push
call
push
call
add
mov
cmp
je
cmp
jne
push
call
push
call
pop
pop
push
pop
lea
lea
mov
cmp
je
mov
test
je
cmp
jne
push
call
push
call
pop
pop
mov
cmp
je
mov
test
je
cmp
jne
push
call
pop
mov
add
add
dec
mov
jne
push
call
pop
pop
pop
pop
pop
ret
push
mov
push
mov
test
je
push
push
mov
push
call
cmp
je
push
call
mov
test
je
push
call
cmp
je
push
call
mov
test
je
push
call
push
pop
lea
mov
cmp
je
cmp
je
push
call
mov
cmp
je
cmp
je
push
call
mov
add
dec
mov
jne
mov
add
push
call
pop
pop
mov
pop
pop
ret
push
push
call
call
mov
mov
test
je
cmp
je
call
mov
test
jne
push
call
pop
mov
call
ret
push
call
pop
and
push
lea
push
call
pop
pop
mov
mov
mov
call
jmp
mov
push
call
pop
ret
push
mov
push
mov
test
je
mov
test
je
push
mov
cmp
je
push
mov
call
pop
test
je
push
call
cmp
pop
jne
cmp
je
push
call
pop
mov
pop
jmp
xor
pop
pop
ret
cmp
jne
push
call
pop
mov
xor
ret
push
mov
push
mov
mov
mov
test
jne
call
mov
mov
mov
mov
mov
mov
mov
cmp
je
mov
test
jne
call
mov
mov
cmp
je
mov
mov
test
jne
call
mov
mov
mov
test
jne
or
mov
mov
jmp
mov
mov
mov
mov
mov
pop
pop
ret
push
mov
mov
sub
je
sub
je
sub
je
dec
je
xor
pop
ret
mov
pop
ret
mov
pop
ret
mov
pop
ret
mov
pop
ret
push
mov
sub
lea
push
call
mov
and
cmp
jne
mov
call
jmp
cmp
jne
mov
call
jmp
cmp
jne
mov
mov
mov
cmp
je
mov
and
leave
ret
push
mov
push
mov
push
push
push
xor
lea
push
push
call
xor
movzx
mov
mov
mov
mov
shl
or
lea
stos
stos
stos
mov
add
sub
mov
mov
mov
inc
dec
jne
lea
mov
mov
mov
inc
dec
jne
pop
pop
pop
pop
ret
push
mov
sub
mov
xor
mov
push
push
mov
push
lea
push
push
call
xor
mov
test
je
mov
mov
inc
cmp
jb
mov
mov
lea
jmp
movzx
movzx
jmp
cmp
jae
mov
inc
cmp
jbe
add
mov
test
jne
push
push
lea
push
push
lea
push
push
push
call
push
push
lea
push
push
push
lea
push
push
push
push
call
add
lea
push
push
push
push
push
lea
push
push
push
push
call
add
mov
movzx
test
je
or
mov
jmp
test
je
or
mov
mov
jmp
mov
inc
cmp
jb
jmp
push
lea
pop
sub
mov
mov
add
add
mov
add
cmp
ja
or
lea
jmp
cmp
ja
or
lea
mov
jmp
mov
mov
inc
lea
cmp
jb
mov
pop
pop
xor
pop
call
leave
ret
push
push
call
call
mov
mov
test
je
cmp
je
mov
test
jne
push
call
pop
mov
call
ret
push
call
pop
and
mov
mov
cmp
je
test
je
push
call
test
jne
cmp
je
push
call
pop
mov
mov
mov
mov
push
call
mov
call
jmp
mov
push
call
pop
ret
push
push
call
or
call
mov
mov
call
mov
push
call
pop
mov
cmp
je
push
call
pop
mov
test
je
mov
mov
mov
mov
rep
xor
mov
push
push
call
pop
pop
mov
mov
test
jne
mov
push
call
test
mov
jne
mov
cmp
je
push
call
pop
mov
mov
push
call
mov
test
jne
test
jne
push
call
pop
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmp
jge
mov
mov
inc
jmp
mov
mov
cmp
jge
mov
mov
inc
jmp
mov
cmp
jge
mov
mov
inc
jmp
push
call
test
jne
mov
cmp
je
push
call
pop
mov
push
call
mov
call
jmp
mov
push
call
pop
ret
jmp
cmp
jne
cmp
je
push
call
pop
call
mov
jmp
xor
mov
call
ret
push
mov
sub
mov
xor
mov
push
push
push
mov
call
mov
pop
mov
test
jne
push
call
pop
xor
jmp
push
xor
mov
mov
mov
cmp
je
inc
add
mov
cmp
jb
cmp
je
cmp
je
movzx
push
call
test
je
lea
push
push
call
test
je
push
lea
push
push
call
mov
xor
inc
add
mov
cmp
jbe
cmp
lea
je
mov
test
je
movzx
movzx
jmp
or
inc
cmp
jbe
add
cmp
jne
lea
mov
or
inc
dec
jne
push
call
add
mov
mov
jmp
mov
xor
movzx
mov
shl
or
lea
stos
stos
stos
jmp
cmp
je
push
call
jmp
or
jmp
push
lea
push
push
call
mov
add
imul
lea
mov
cmp
mov
je
mov
test
je
movzx
movzx
jmp
cmp
jae
mov
or
movzx
inc
cmp
jbe
add
cmp
jne
mov
inc
add
mov
cmp
jb
mov
push
mov
mov
call
add
mov
push
lea
lea
pop
mov
mov
lea
lea
dec
jne
push
call
pop
xor
pop
mov
pop
xor
pop
call
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
mov
push
mov
add
push
movzx
movzx
add
xor
add
push
test
je
mov
mov
cmp
jb
mov
add
cmp
jb
inc
add
cmp
jb
xor
pop
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
mov
push
sub
push
push
push
mov
xor
xor
push
lea
mov
mov
mov
push
call
add
test
je
mov
sub
push
push
call
add
test
je
mov
shr
not
and
mov
mov
mov
pop
pop
pop
pop
mov
pop
ret
mov
mov
xor
cmp
sete
mov
ret
mov
mov
xor
mov
mov
pop
pop
pop
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
push
mov
mov
mov
cmp
je
xor
pop
ret
mov
add
xor
cmp
jne
mov
cmp
sete
pop
ret
push
push
push
call
pop
pop
mov
push
call
mov
mov
test
jne
push
pop
pop
ret
and
xor
pop
ret
push
push
call
call
and
push
call
pop
mov
mov
mov
call
mov
call
ret
mov
call
ret
push
mov
push
push
push
mov
push
push
call
push
mov
call
mov
mov
cmp
jb
mov
sub
lea
cmp
jb
push
call
mov
lea
pop
cmp
jae
mov
cmp
jae
mov
mov
add
cmp
jb
push
push
call
pop
pop
test
jne
lea
cmp
jb
push
push
call
pop
pop
test
je
sar
push
lea
call
mov
push
call
lea
push
mov
call
mov
mov
jmp
xor
pop
pop
pop
leave
ret
push
mov
push
call
neg
sbb
neg
pop
dec
pop
ret
push
xor
push
call
mov
add
cmp
jb
pop
ret
push
mov
mov
mov
pop
ret
push
mov
mov
mov
pop
ret
push
call
ret
push
mov
mov
mov
mov
mov
mov
pop
ret
push
push
call
xor
mov
xor
mov
mov
cmp
jg
je
mov
push
pop
sub
je
sub
je
sub
je
sub
jne
call
mov
mov
test
jne
or
jmp
mov
mov
jmp
push
push
call
pop
pop
add
mov
mov
jmp
mov
sub
je
sub
je
dec
je
call
mov
call
jmp
mov
mov
jmp
mov
mov
jmp
mov
mov
xor
inc
mov
push
call
mov
cmp
je
test
jne
push
call
test
je
push
call
pop
and
cmp
je
cmp
je
cmp
jne
mov
mov
and
cmp
jne
mov
mov
mov
cmp
jne
mov
mov
mov
mov
add
cmp
jge
mov
imul
mov
and
inc
mov
mov
jmp
push
call
mov
mov
mov
call
cmp
jne
push
push
call
pop
jmp
mov
mov
mov
test
je
push
call
pop
ret
push
call
pop
cmp
je
cmp
je
cmp
jne
mov
mov
cmp
jne
mov
mov
xor
call
ret
push
mov
mov
mov
push
mov
cmp
je
mov
imul
add
add
cmp
jb
imul
add
cmp
jae
cmp
jne
mov
jmp
xor
pop
pop
ret
int3
int3
mov
test
je
mov
add
test
je
test
jne
add
lea
lea
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
push
mov
push
push
mov
test
je
mov
test
je
mov
test
jne
xor
mov
call
push
pop
mov
call
mov
pop
pop
pop
ret
mov
cmp
je
add
dec
jne
test
je
sub
movzx
mov
lea
test
je
dec
jne
xor
test
jne
mov
call
push
jmp
push
mov
push
mov
test
je
mov
test
je
mov
test
jne
xor
mov
call
push
pop
mov
call
mov
pop
pop
ret
push
mov
sub
movzx
mov
lea
test
je
dec
jne
xor
pop
test
jne
mov
call
push
jmp
push
mov
mov
mov
add
test
jne
sub
sar
dec
pop
ret
push
mov
mov
mov
push
test
jne
test
jne
cmp
jne
xor
jmp
test
je
mov
test
je
test
jne
xor
mov
jmp
mov
test
jne
xor
mov
call
push
pop
mov
call
mov
pop
pop
ret
push
push
mov
mov
cmp
jne
sub
movzx
mov
lea
test
je
dec
jne
jmp
sub
movzx
mov
lea
test
je
dec
je
dec
jne
test
jne
xor
mov
test
pop
pop
jne
cmp
jne
mov
xor
push
mov
pop
jmp
xor
mov
call
push
jmp
push
mov
sub
mov
xor
mov
mov
push
mov
push
push
mov
mov
xor
push
mov
call
mov
mov
call
mov
cmp
jne
push
push
push
call
mov
test
jne
call
cmp
jne
push
call
mov
test
je
push
push
call
test
je
push
call
push
push
mov
call
push
call
push
push
mov
call
push
call
push
push
mov
call
push
call
mov
test
je
push
push
call
push
call
mov
mov
call
test
je
mov
test
je
push
call
cmp
je
push
pop
jmp
cmp
je
push
call
push
jmp
mov
mov
cmp
je
cmp
je
push
call
push
mov
call
mov
mov
test
je
test
je
call
test
je
lea
push
push
lea
push
push
push
call
test
je
test
jne
mov
or
jmp
mov
cmp
je
push
call
test
je
call
mov
test
je
mov
cmp
je
push
call
test
je
push
call
mov
mov
push
call
test
je
push
push
push
push
call
jmp
xor
mov
pop
pop
xor
pop
call
leave
ret
cmp
jne
repz
jmp
int3
int3
int3
int3
int3
push
push
push
mov
mov
mov
push
push
push
push
push
push
push
mov
xor
mov
mov
mov
mov
mov
xor
mov
cmp
je
mov
cmp
je
cmp
jbe
lea
lea
mov
mov
cmp
jne
push
mov
call
mov
mov
call
jmp
pop
add
pop
pop
pop
ret
mov
test
mov
je
mov
mov
xor
call
push
mov
push
push
push
call
add
pop
mov
mov
mov
mov
ret
push
mov
mov
push
push
push
call
add
pop
ret
push
push
push
push
mov
xor
xor
xor
xor
xor
call
pop
pop
pop
pop
ret
mov
mov
mov
push
call
xor
xor
xor
xor
xor
jmp
push
mov
push
push
push
push
push
push
push
call
pop
pop
pop
pop
ret
push
mov
push
push
push
call
add
pop
ret
mov
push
push
pop
test
jne
mov
jmp
cmp
jge
mov
mov
push
push
call
pop
pop
mov
test
jne
push
push
mov
call
pop
pop
mov
test
jne
push
pop
pop
ret
xor
mov
mov
add
lea
cmp
jge
mov
jmp
xor
pop
ret
call
cmp
je
call
push
call
and
pop
ret
push
mov
push
mov
mov
cmp
jb
cmp
ja
mov
sub
sar
add
push
call
or
pop
jmp
lea
push
call
pop
pop
ret
push
mov
mov
cmp
jge
add
push
call
mov
pop
or
pop
ret
mov
add
push
call
pop
ret
push
mov
mov
mov
cmp
jb
cmp
ja
and
sub
sar
add
push
call
pop
pop
ret
add
push
call
pop
ret
push
mov
mov
mov
cmp
jge
and
lea
push
call
pop
pop
ret
add
push
call
pop
ret
push
mov
sub
push
push
lea
call
movzx
mov
mov
test
jne
xor
cmp
je
mov
mov
movzx
and
jmp
mov
test
je
xor
inc
cmp
pop
je
mov
and
mov
leave
ret
push
mov
push
push
push
push
call
add
pop
ret
push
mov
push
mov
test
je
mov
test
je
mov
test
jne
mov
call
push
pop
mov
call
mov
pop
pop
ret
push
mov
sub
mov
mov
inc
test
je
dec
jne
pop
test
jne
mov
call
push
jmp
xor
jmp
and
ret
call
test
je
push
call
pop
test
je
push
call
test
je
push
pop
int
push
push
push
call
add
push
call
int3
push
mov
cmp
jne
push
call
pop
pop
ret
push
mov
test
jne
push
call
pop
xor
jmp
push
jmp
test
jne
inc
push
push
push
push
call
mov
test
jne
cmp
je
push
call
pop
test
je
cmp
jbe
push
call
pop
call
mov
xor
pop
pop
pop
ret
call
mov
call
push
call
pop
mov
jmp
call
mov
call
push
call
pop
mov
mov
jmp
push
mov
push
mov
test
je
mov
cmp
je
push
call
pop
mov
cmp
je
push
call
pop
mov
cmp
je
push
call
pop
mov
cmp
je
push
call
pop
mov
cmp
je
push
call
pop
mov
cmp
je
push
call
pop
mov
cmp
je
push
call
pop
mov
cmp
je
push
call
pop
mov
cmp
je
push
call
pop
mov
cmp
je
push
call
pop
mov
cmp
je
push
call
pop
mov
cmp
je
push
call
pop
mov
cmp
je
push
call
pop
pop
pop
ret
push
mov
push
mov
test
je
mov
cmp
je
push
call
pop
mov
cmp
je
push
call
pop
mov
cmp
je
push
call
pop
mov
cmp
je
push
call
pop
mov
cmp
je
push
call
pop
pop
pop
ret
push
mov
push
mov
test
je
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
add
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
add
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
add
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
add
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
add
push
call
push
call
push
call
push
call
push
call
push
call
push
call
add
pop
pop
ret
push
mov
push
push
mov
xor
mov
push
push
mov
push
test
jle
mov
mov
dec
cmp
je
inc
test
jne
or
mov
sub
dec
cmp
lea
jl
mov
mov
xor
test
jne
mov
mov
mov
mov
mov
xor
cmp
push
setne
push
push
push
lea
push
push
call
mov
mov
test
jne
xor
jmp
jle
push
xor
pop
div
cmp
jb
lea
cmp
ja
mov
call
mov
test
je
mov
jmp
push
call
mov
pop
test
je
mov
add
mov
jmp
xor
test
je
push
push
push
push
push
push
call
test
je
mov
push
push
push
push
push
push
call
mov
add
test
je
mov
test
je
mov
test
je
cmp
jg
push
push
push
push
push
push
call
add
jmp
test
jle
push
xor
pop
div
cmp
jb
lea
cmp
ja
call
mov
test
je
mov
jmp
push
call
mov
pop
test
je
mov
add
jmp
xor
test
je
push
push
push
push
push
push
call
add
test
je
xor
push
push
cmp
jne
push
push
jmp
push
push
push
push
push
push
call
mov
push
call
pop
push
call
pop
mov
lea
pop
pop
pop
mov
xor
call
leave
ret
push
mov
sub
push
lea
call
push
lea
push
push
push
push
push
push
push
push
call
add
cmp
je
mov
and
leave
ret
push
mov
mov
test
je
sub
cmp
jne
push
call
pop
pop
ret
push
mov
push
mov
xor
mov
mov
push
push
push
xor
test
jne
mov
mov
mov
mov
mov
xor
cmp
push
push
push
setne
push
lea
push
push
call
mov
test
jne
xor
jmp
jle
cmp
ja
lea
cmp
ja
call
mov
test
je
mov
jmp
push
call
mov
pop
test
je
mov
add
jmp
mov
test
je
lea
push
push
push
call
add
push
push
push
push
push
push
call
test
je
push
push
push
push
call
mov
push
call
pop
mov
lea
pop
pop
pop
mov
xor
call
leave
ret
push
mov
sub
push
lea
call
push
lea
push
push
push
push
push
push
call
add
cmp
je
mov
and
leave
ret
push
mov
cmp
jne
call
mov
call
or
pop
ret
push
push
push
call
pop
ret
push
call
pop
ret
push
mov
push
push
push
xor
mov
lea
cdq
sub
mov
sar
push
push
push
call
add
test
je
jns
lea
jmp
lea
cmp
jle
or
jmp
mov
pop
pop
pop
pop
ret
push
mov
cmp
je
push
call
pop
test
js
cmp
jae
mov
pop
ret
xor
pop
ret
push
mov
mov
xor
je
xor
push
push
push
push
push
push
push
push
push
call
pop
ret
push
push
push
push
push
push
call
pop
push
call
pop
ret
push
mov
push
mov
xor
test
je
mov
push
push
mov
push
pop
push
pop
sub
mov
jmp
push
pop
movzx
cmp
jb
cmp
ja
add
movzx
jmp
mov
movzx
cmp
jb
cmp
ja
add
movzx
add
dec
je
test
je
cmp
je
movzx
movzx
pop
sub
pop
pop
pop
ret
int3
int3
int3
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
bt
jae
rep
jmp
cmp
jb
mov
xor
test
jne
bt
jb
bt
jae
test
jne
test
jne
bt
jae
mov
sub
lea
mov
lea
bt
jae
movq
sub
lea
movq
lea
test
je
bt
jae
movdqa
lea
movdqa
sub
movdqa
movdqa
lea
cmp
movdqa
palignr
movdqa
movdqa
palignr
movdqa
movdqa
palignr
movdqa
lea
jge
lea
jmp
movdqa
lea
lea
movdqa
sub
movdqa
movdqa
lea
cmp
movdqa
palignr
movdqa
movdqa
palignr
movdqa
movdqa
palignr
movdqa
lea
jge
lea
jmp
movdqa
lea
mov
movdqa
sub
movdqa
movdqa
lea
cmp
movdqa
palignr
movdqa
movdqa
palignr
movdqa
movdqa
palignr
movdqa
lea
jge
lea
cmp
jl
movdqu
sub
lea
movdqa
lea
jmp
bt
jae
mov
sub
lea
mov
lea
bt
jae
movq
sub
lea
movq
lea
mov
jmp
test
jne
shr
and
cmp
jb
rep
jmp
nop
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
dec
jecxz
add
dec
add
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
add
shr
add
cmp
jb
rep
jmp
lea
pop
in
add
dec
add
dec
add
jecxz
add
jecxz
add
jecxz
add
jecxz
add
jecxz
add
inc
(bad)
in
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
cmp
dec
add
dec
add
add
dec
add
pop
ret
nop
mov
mov
mov
pop
pop
ret
nop
mov
mov
mov
mov
mov
pop
pop
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
fsub
dec
add
in
add
add
ror
add
jmp
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
js
dec
add
in
add
in
add
in
add
inc
mov
inc
(bad)
sbb
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
aam
dec
add
in
add
in
add
out
add
pop
ret
nop
mov
mov
mov
pop
pop
ret
lea
mov
mov
mov
mov
mov
pop
pop
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
ret
lea
push
mov
and
test
jne
mov
and
shr
je
lea
nop
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
lea
lea
dec
jne
test
je
mov
shr
test
je
lea
movdqa
movdqa
lea
lea
dec
jne
and
je
mov
shr
je
mov
mov
lea
lea
dec
jne
mov
and
je
mov
mov
inc
inc
dec
jne
lea
pop
pop
pop
ret
lea
jmp
int3
int3
int3
mov
sub
sub
push
mov
mov
and
je
mov
mov
inc
inc
dec
jne
shr
je
mov
mov
lea
lea
dec
jne
pop
jmp
push
mov
mov
test
jne
call
mov
call
or
pop
ret
mov
pop
ret
push
mov
mov
cmp
jne
call
mov
jmp
test
js
cmp
jae
mov
sar
and
mov
shl
movsx
and
pop
ret
call
mov
call
xor
pop
ret
push
mov
push
mov
test
jne
push
call
pop
jmp
push
call
pop
test
je
or
jmp
test
je
push
call
push
call
pop
neg
pop
sbb
jmp
xor
pop
pop
ret
push
mov
push
push
mov
xor
mov
and
cmp
jne
test
je
push
mov
sub
test
jle
push
push
push
call
pop
push
call
add
cmp
jne
mov
test
jns
and
mov
jmp
or
or
pop
mov
and
mov
pop
mov
pop
pop
ret
push
call
pop
ret
push
push
call
xor
mov
and
push
call
pop
and
xor
mov
mov
cmp
jge
mov
mov
test
je
test
je
push
push
call
pop
pop
mov
mov
mov
test
je
cmp
jne
push
call
pop
cmp
je
inc
mov
jmp
test
jne
test
je
push
call
pop
cmp
jne
or
and
call
inc
jmp
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
call
cmp
mov
je
mov
call
ret
mov
mov
push
call
pop
ret
push
mov
call
push
mov
call
push
call
cmp
pop
pop
jne
push
call
pop
push
call
pop
pop
ret
push
mov
sub
push
call
test
je
push
pop
int
mov
mov
mov
mov
mov
mov
data16
data16
data16
data16
data16
data16
pushf
pop
mov
mov
mov
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
push
pop
imul
mov
push
pop
imul
mov
mov
push
pop
shl
mov
mov
push
call
leave
ret
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
push
push
push
push
push
call
pop
pop
pop
pop
mov
pop
ret
mov
test
mov
je
mov
mov
xor
call
push
mov
mov
push
mov
push
call
add
pop
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
push
push
mov
xor
push
lea
mov
mov
mov
mov
cmp
je
cmp
je
cmp
jbe
lea
mov
mov
mov
cmp
jne
push
mov
call
mov
call
jmp
mov
mov
add
pop
pop
pop
ret
xor
mov
cmp
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
push
push
push
pop
pop
pop
pop
pop
ret
call
ret
push
push
call
xor
mov
push
call
pop
and
push
pop
mov
cmp
jge
mov
mov
test
je
test
je
push
call
pop
cmp
je
inc
mov
cmp
jl
mov
mov
add
push
call
mov
push
call
pop
mov
and
inc
jmp
mov
call
mov
call
ret
mov
push
call
pop
ret
push
push
call
mov
cmp
je
push
call
pop
and
push
push
call
pop
pop
mov
mov
call
call
ret
push
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
lea
sub
and
add
sbb
or
pop
jmp
push
lea
sub
and
add
sbb
or
pop
jmp
push
push
call
mov
cmp
jne
call
mov
jmp
test
js
cmp
jae
mov
sar
mov
mov
and
shl
mov
movsx
and
je
push
call
pop
xor
mov
mov
mov
test
je
push
call
pop
push
call
test
jne
call
mov
mov
test
je
call
mov
call
mov
or
mov
mov
call
mov
jmp
mov
mov
push
call
pop
ret
call
mov
call
or
call
ret
push
push
call
mov
cmp
jne
call
and
call
mov
jmp
test
js
cmp
jae
mov
sar
mov
and
shl
mov
movsx
and
je
push
call
pop
and
mov
test
je
push
push
push
call
add
mov
jmp
call
mov
call
and
or
mov
mov
call
mov
jmp
mov
mov
push
call
pop
ret
call
and
call
mov
call
or
call
ret
push
mov
mov
call
mov
xor
mov
mov
mov
xor
push
mov
mov
mov
mov
mov
cmp
jne
xor
jmp
test
jne
call
and
call
mov
call
or
jmp
push
push
mov
sar
mov
and
shl
mov
mov
mov
mov
add
sar
cmp
je
cmp
jne
mov
not
test
jne
call
and
call
mov
call
jmp
mov
test
je
push
push
push
push
call
add
push
call
pop
test
je
mov
mov
test
je
call
mov
xor
cmp
lea
push
mov
sete
mov
push
mov
call
test
je
cmp
je
test
je
call
mov
and
mov
mov
mov
cmp
jbe
xor
mov
mov
test
jne
mov
xor
cmp
sete
mov
mov
mov
cmp
je
mov
mov
push
lea
mov
and
push
jmp
movsx
push
call
pop
test
je
mov
mov
sub
add
cmp
jbe
push
push
lea
push
call
add
cmp
je
mov
inc
inc
jmp
push
push
lea
push
call
add
cmp
je
mov
xor
push
push
inc
inc
push
mov
lea
push
push
lea
push
push
push
call
mov
test
je
push
lea
push
push
lea
push
mov
mov
push
call
test
je
mov
mov
add
cmp
jl
cmp
je
push
lea
push
push
lea
push
mov
mov
mov
push
call
test
je
cmp
jl
inc
inc
jmp
cmp
je
cmp
jne
movzx
xor
cmp
mov
mov
sete
add
add
mov
mov
mov
cmp
je
cmp
jne
push
call
pop
cmp
jne
add
cmp
je
push
pop
push
mov
call
pop
cmp
jne
inc
inc
mov
mov
cmp
jb
jmp
mov
mov
mov
inc
mov
mov
mov
mov
jmp
mov
jmp
mov
mov
test
je
mov
xor
mov
test
jne
mov
mov
cmp
jbe
xor
sub
mov
lea
mov
cmp
jae
mov
inc
inc
mov
cmp
mov
mov
jne
inc
mov
inc
inc
mov
mov
mov
inc
inc
mov
cmp
jb
mov
lea
sub
push
lea
push
push
lea
push
mov
mov
push
call
test
je
add
mov
cmp
jl
mov
sub
cmp
mov
jb
jmp
mov
cmp
jne
mov
cmp
jbe
mov
and
mov
mov
sub
mov
lea
cmp
jae
movzx
add
add
mov
cmp
jne
push
pop
mov
mov
add
add
add
mov
add
add
cmp
jb
mov
lea
sub
push
lea
push
push
lea
push
mov
mov
mov
push
call
mov
mov
test
je
add
mov
mov
cmp
jl
mov
mov
sub
cmp
jb
jmp
mov
mov
test
je
mov
and
mov
sub
mov
lea
cmp
jae
movzx
add
add
mov
cmp
jne
push
pop
mov
mov
add
add
mov
add
add
cmp
jb
xor
push
push
push
lea
push
lea
sub
cdq
sub
sar
push
mov
push
push
push
call
mov
mov
mov
test
je
xor
mov
push
sub
lea
push
push
lea
add
mov
push
mov
mov
push
call
test
je
mov
add
mov
mov
cmp
jg
jmp
call
mov
mov
mov
mov
cmp
jg
mov
mov
mov
sub
mov
cmp
jb
jmp
push
lea
push
push
push
push
call
test
je
mov
xor
jmp
call
mov
mov
test
jne
test
je
push
pop
cmp
jne
call
mov
call
mov
jmp
push
call
pop
jmp
mov
mov
mov
test
je
cmp
jne
xor
jmp
call
mov
call
and
or
jmp
sub
mov
pop
pop
mov
xor
pop
call
leave
ret
push
mov
push
mov
push
or
test
jne
call
mov
call
or
jmp
test
je
push
call
push
mov
call
push
call
push
call
add
test
jns
or
jmp
cmp
je
push
call
and
pop
and
mov
pop
pop
pop
ret
push
push
call
or
mov
xor
mov
test
setne
test
jne
call
mov
call
mov
call
ret
test
je
and
jmp
push
call
pop
and
push
call
pop
mov
mov
mov
call
jmp
mov
mov
push
call
pop
ret
push
push
call
mov
mov
sar
mov
and
shl
add
cmp
jne
push
call
pop
and
cmp
jne
push
lea
push
call
inc
mov
call
mov
sar
and
shl
mov
add
add
push
call
xor
inc
call
ret
mov
push
call
pop
ret
push
mov
mov
push
push
test
js
cmp
jae
mov
sar
mov
mov
and
shl
test
je
cmp
je
cmp
jne
xor
sub
je
dec
je
dec
jne
push
push
jmp
push
push
jmp
push
push
call
mov
or
xor
jmp
call
mov
call
and
or
pop
pop
pop
ret
push
mov
mov
cmp
jne
call
and
call
mov
jmp
test
js
cmp
jae
mov
sar
and
mov
shl
test
je
mov
pop
ret
call
and
call
mov
call
or
pop
ret
push
mov
mov
mov
and
sar
shl
mov
add
add
push
call
pop
ret
push
mov
sub
push
lea
call
mov
movzx
mov
movzx
and
cmp
je
mov
and
leave
ret
push
mov
push
push
call
pop
pop
pop
ret
push
mov
push
push
push
mov
push
push
call
or
pop
cmp
jne
call
mov
mov
mov
jmp
push
lea
push
push
push
push
call
test
jne
call
push
call
pop
jmp
mov
sar
and
mov
shl
and
mov
mov
pop
pop
leave
ret
push
mov
sub
push
push
mov
test
je
mov
test
je
cmp
jne
mov
test
je
xor
mov
xor
pop
pop
leave
ret
push
push
lea
call
mov
cmp
jne
mov
test
je
movzx
mov
xor
inc
jmp
lea
push
movzx
push
call
pop
pop
test
je
mov
cmp
jle
cmp
jl
xor
cmp
setne
push
push
push
push
push
push
call
mov
test
jne
cmp
jb
cmp
je
mov
jmp
xor
cmp
setne
xor
inc
push
push
mov
push
push
push
push
call
test
jne
call
or
mov
cmp
je
mov
and
mov
pop
jmp
push
mov
push
push
push
push
call
add
pop
ret
push
mov
push
mov
cmp
jne
call
mov
cmp
jne
mov
leave
ret
push
lea
push
push
lea
push
push
call
test
je
mov
leave
ret
push
push
call
mov
cmp
jne
call
and
call
mov
jmp
test
js
cmp
jae
mov
sar
mov
and
shl
mov
movsx
and
je
push
call
pop
and
mov
test
je
push
call
pop
mov
jmp
call
mov
or
mov
mov
call
mov
jmp
mov
mov
push
call
pop
ret
call
and
call
mov
call
or
call
ret
push
mov
push
push
mov
push
call
pop
cmp
je
mov
cmp
jne
test
jne
cmp
jne
test
je
push
call
push
mov
call
pop
pop
cmp
je
push
call
pop
push
call
test
jne
call
mov
jmp
xor
push
call
pop
mov
sar
and
mov
shl
mov
test
je
push
call
pop
or
jmp
xor
pop
pop
pop
ret
push
mov
push
mov
test
je
test
je
push
call
and
xor
pop
mov
mov
mov
pop
pop
ret
mov
cmp
je
cmp
je
push
call
ret
xor
push
push
push
push
push
push
push
call
mov
ret
int3
int3
push
mov
or
jne
mov
mov
xor
div
mov
mov
div
mov
mov
mul
mov
mov
mul
add
jmp
mov
mov
mov
mov
shr
rcr
shr
rcr
or
jne
div
mov
mul
mov
mov
mul
add
jb
cmp
ja
jb
cmp
jbe
dec
sub
sbb
xor
sub
sbb
neg
neg
sbb
mov
mov
mov
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
mov
or
mov
jne
mov
mul
ret
push
mul
mov
mov
mul
add
mov
mul
add
pop
ret
jmp
jmp
