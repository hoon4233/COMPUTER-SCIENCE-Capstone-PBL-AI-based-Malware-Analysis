mov
pop
add
add
add
add
add
add
add
add
add
add
add
push
mov
add
adc
or
add
add
add
adc
add
push
sub
es
and
add
add
and
add
cmp
fwait
add
add
and
jbe
xor
and
enter
cmp
add
sub
add
and
add
add
jp
add
and
add
and
pusha
enter
or
pop
inc
add
add
loopne
(bad)
(bad)
mov
(bad)
(bad)
jmp
add
add
cmp
add
and
add
add
and
add
add
add
adc
add
push
add
add
sub
add
and
add
add
and
add
add
add
sub
add
add
pop
add
add
push
add
dec
add
add
add
(bad)
call
(bad)
inc
add
add
add
add
(bad)
(bad)
call
add
add
add
cmp
and
add
add
cmp
(bad)
(bad)
jmp
sub
add
push
sub
add
push
sub
add
cmp
(bad)
(bad)
jmp
and
add
add
cmps
(bad)
(bad)
(bad)
cmp
(bad)
(bad)
jmp
and
add
and
xchg
(bad)
(bad)
jmp
add
adc
sldt
add
add
add
sub
es
pop
sub
add
cmp
add
and
add
cmp
add
add
fwait
nop
pop
hlt
cmp
add
or
or
add
and
add
add
and
add
cmp
add
add
mov
pop
add
cli
and
add
icebp
cld
jle
and
rol
cmp
sub
add
push
and
add
add
pop
add
or
sub
push
add
add
and
add
cmp
add
and
mov
sub
and
add
add
arpl
add
adc
and
out
sub
ficomp
add
add
and
sub
sub
lea
add
add
add
add
rol
push
add
push
mov
add
push
or
or
add
cmp
arpl
add
and
sub
retf
add
sub
adc
lea
add
add
add
and
add
add
sub
add
push
mov
add
push
sub
add
push
cmp
(bad)
(bad)
jmp
or
add
cmp
add
add
dec
sbb
add
and
adc
and
movs
ds
pop
popa
cmp
add
or
push
add
push
and
add
cmp
and
adc
mov
es
popa
cmp
add
add
push
add
add
jae
add
or
or
add
or
jmp
and
add
add
outs
add
add
inc
ror
and
cmp
mov
push
pop
inc
or
add
jmp
jmp
(bad)
jmp
(bad)
(bad)
call
(bad)
(bad)
call
add
xor
add
adc
and
and
cmp
or
add
sub
cmp
(bad)
jmp
add
add
dec
pop
add
or
add
add
add
(bad)
jmp
call
(bad)
jmp
(bad)
(bad)
dec
(bad)
jmp
std
(bad)
dec
(bad)
(bad)
cmp
(bad)
dec
(bad)
(bad)
call
(bad)
(bad)
dec
add
add
add
add
cmp
add
add
xor
add
add
add
add
sub
es
and
add
add
cmp
or
dec
and
add
xchg
aam
aas
and
add
adc
sbb
add
and
add
add
cmps
xlat
loopne
cmp
add
add
adc
add
sldt
add
inc
add
add
mov
sbb
fs
fs
and
inc
or
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
and
add
add
sti
add
add
and
cmp
mov
cmp
pop
sub
add
push
and
add
cmp
add
add
pushf
add
add
push
add
add
jae
add
or
sldt
push
or
push
add
add
mov
add
push
sub
add
push
sub
add
push
push
sub
add
push
cmp
add
add
and
add
cmp
push
(bad)
push
xor
add
and
sti
or
cmp
(bad)
(bad)
jmp
call
sbb
add
and
imul
add
cmp
add
add
pop
add
add
cmp
add
and
mov
cmp
(bad)
(bad)
call
push
add
push
and
add
add
aas
add
add
jne
add
add
and
add
add
add
add
and
and
stos
add
(bad)
(bad)
jmp
hlt
add
add
adc
add
cmp
(bad)
(bad)
jmp
or
add
dec
add
dec
add
add
add
(bad)
(bad)
jmp
(bad)
(bad)
jmp
(bad)
(bad)
dec
add
(bad)
(bad)
(bad)
(bad)
cmp
add
jne
(bad)
(bad)
jl
(bad)
dec
add
sub
add
sar
inc
(bad)
dec
(bad)
(bad)
jmp
add
and
add
add
cmp
pop
and
pop
cmps
sub
xor
retf
popa
cmp
jmp
adc
add
cmp
(bad)
(bad)
(bad)
cmp
(bad)
(bad)
jmp
and
add
add
cmp
inc
and
push
stos
pop
and
gs
cmp
(bad)
(bad)
inc
sub
add
push
cmp
std
(bad)
jmp
add
add
sub
add
cmp
(bad)
jmp
and
cmp
add
add
imul
and
dec
mov
pop
popa
cmp
std
(bad)
(bad)
cmp
add
adc
or
or
add
add
add
sub
es
add
sub
adc
or
or
add
add
add
sub
es
add
add
push
sub
adc
or
or
add
add
add
sub
es
add
add
push
sub
adc
or
or
add
adc
add
push
add
add
add
add
sub
add
adc
or
or
add
add
add
sub
es
add
sub
add
push
sub
xor
add
add
adc
add
push
add
add
sub
add
sub
add
adc
or
or
add
add
add
sub
es
add
outs
add
add
sub
xor
add
add
add
add
sub
es
add
sub
add
sub
adc
or
or
add
add
add
sub
es
add
add
or
add
xor
add
add
add
add
sub
es
add
sub
add
push
sub
xor
add
add
add
add
sub
es
add
sub
add
push
sub
xor
add
add
add
add
sub
es
add
add
or
add
xor
add
add
add
add
sub
es
add
sub
add
push
sub
xor
add
add
add
add
sub
es
sub
add
sub
add
xor
add
add
add
add
sub
es
add
sub
add
push
sub
xor
add
add
add
add
sub
es
add
sub
add
xor
add
add
add
add
sub
es
sub
add
push
sub
add
xor
add
add
add
add
sub
es
sub
add
push
sub
add
xor
add
add
add
add
sub
es
add
sub
add
sub
adc
or
or
add
add
add
sub
es
add
xor
add
sub
adc
or
or
add
add
add
sub
es
add
sub
add
sub
adc
or
or
add
add
add
sub
es
add
sub
add
xor
add
add
push
and
add
add
test
add
and
cmp
add
add
int
ins
dec
and
add
or
add
add
pop
aas
pop
bound
and
add
add
push
add
add
or
xor
add
and
add
cmp
add
adc
and
and
stos
push
popa
cmp
add
add
add
push
or
or
add
pop
cmp
add
add
adc
and
fwait
repz
and
cmp
push
adc
adc
or
xor
add
cmc
add
add
or
jmp
and
ror
cmp
imul
(bad)
(bad)
jmp
and
add
add
leave
add
add
retf
add
add
push
pop
jae
add
or
pop
and
add
add
mov
add
add
add
or
and
add
add
lahf
add
add
adc
add
add
cmp
or
rcr
xor
popa
cmp
add
push
sub
add
push
adc
add
cmp
add
and
xchg
inc
dec
cmp
add
add
or
sbb
xor
add
es
sub
add
cmp
(bad)
jmp
and
cmp
add
adc
and
in
mov
std
test
and
add
sbb
or
add
add
sub
add
push
cmp
add
add
push
push
cmp
(bad)
jmp
add
add
dec
or
dec
add
add
add
add
sbb
(bad)
(bad)
jmp
call
add
add
(bad)
(bad)
call
(bad)
(bad)
mov
add
add
(bad)
(bad)
call
(bad)
(bad)
call
(bad)
jmp
(bad)
(bad)
(bad)
aas
add
add
(bad)
(bad)
inc
jmp
push
add
add
movs
(bad)
(bad)
call
or
test
lods
pop
pop
and
dec
cmp
cmp
add
add
add
aas
adc
(bad)
jmp
push
add
add
cmp
call
add
pop
adc
adc
add
cmp
(bad)
inc
sub
add
push
pop
or
and
add
add
cmp
(bad)
jmp
and
arpl
push
push
popa
and
pop
inc
or
add
test
std
(bad)
dec
(bad)
(bad)
push
(bad)
push
(bad)
(bad)
call
(bad)
inc
(bad)
(bad)
jmp
add
adc
add
cmp
(bad)
call
or
cmp
and
pop
pusha
out
popa
cmp
push
sub
xor
add
add
adc
add
push
and
add
add
jo
add
adc
xchg
mov
cli
ret
popa
cmp
add
add
adc
add
add
dec
add
pop
movups
pop
setne
pop
setne
and
add
add
and
add
cmp
add
add
and
sbb
pop
and
shl
cmp
pop
pop
push
adc
pop
push
xchg
or
push
xchg
popa
sahf
and
add
add
inc
add
or
mov
add
cmp
add
adc
pop
or
pop
pop
or
popa
sahf
and
rol
add
or
pushf
repnz
es
and
cmps
imul
cmp
add
adc
adc
and
adc
push
rcr
cmp
pop
sbb
or
and
add
sub
add
cmp
xchg
add
adc
add
adc
pusha
mov
or
fnsave
dec
das
popa
cmp
add
add
sbb
lea
add
add
or
pop
add
add
cmp
add
adc
retf
fcomp
push
push
xor
aam
add
adc
sbb
pop
sbb
or
add
add
cs
add
or
mov
and
or
stos
add
add
or
or
popa
or
add
or
add
or
pop
push
adc
and
mov
les
xchg
add
adc
adc
xchg
adc
and
add
add
and
add
cmp
add
add
and
add
add
or
pop
adc
and
add
add
mov
add
pop
pop
or
pop
pop
or
popa
sahf
and
add
add
lods
add
add
pop
pop
adc
pop
xchg
or
xchg
popa
sahf
and
add
add
xchg
add
add
or
push
and
adc
pop
sbb
and
jge
add
push
adc
and
add
add
jo
add
adc
pop
or
pop
pop
or
or
or
popa
sahf
and
add
add
push
add
add
fcom
aas
repnz
add
aad
dec
xchg
and
add
push
adc
and
add
add
xor
add
and
data16
add
pop
sbb
pop
sbb
sahf
and
add
add
adc
add
adc
add
and
retf
popa
cmp
pop
adc
pop
adc
sahf
and
add
add
jmp
je
inc
jmp
popa
cmp
add
adc
pop
pop
adc
and
mov
add
sahf
and
add
cmp
or
cmp
(bad)
data16
popa
cmp
and
and
add
and
and
add
add
mov
add
pop
adc
adc
and
add
add
jne
add
and
in
(bad)
fbld
inc
iret
repz
adc
and
inc
and
add
mov
std
(bad)
jmp
(bad)
(bad)
(bad)
mov
add
add
add
add
add
add
std
(bad)
inc
(bad)
(bad)
inc
add
add
add
sub
add
clc
(bad)
(bad)
dec
add
iret
(bad)
(bad)
jmp
cld
(bad)
jmp
add
in
(bad)
call
add
add
add
add
std
(bad)
call
std
(bad)
(bad)
stc
std
(bad)
(bad)
fdivr
(bad)
push
add
lea
add
in
add
add
add
add
(bad)
jmp
sbb
add
cmp
add
add
and
and
add
add
mov
or
adc
add
pop
je
popa
cmp
pop
pop
or
pop
pop
or
popa
sahf
and
add
add
mov
add
and
adc
(bad)
call
pop
sbb
pop
sbb
sahf
and
add
cmp
add
or
and
xchg
sbb
imul
popf
popa
cmp
(bad)
(bad)
call
add
pop
adc
and
add
cmp
add
and
loopne
and
add
and
cmp
(bad)
(bad)
call
or
adc
lods
add
add
xor
add
cmp
add
add
movs
cmp
push
add
add
and
add
(bad)
(bad)
call
pop
sbb
pop
sbb
sahf
and
add
cmp
add
add
adc
or
or
add
cmp
add
add
or
fcomp
push
sub
and
lods
push
ss
cmp
(bad)
call
or
push
and
dec
(bad)
(bad)
call
add
add
add
cmp
adc
adc
and
adc
rcr
sub
add
push
cmp
add
add
and
add
add
add
add
or
icebp
xor
inc
adc
popa
cmp
std
(bad)
call
or
add
push
add
add
add
add
cmp
add
adc
xchg
jbe
arpl
jle
mov
popa
cmp
std
(bad)
call
or
push
and
adc
pop
adc
and
add
add
sub
add
or
or
and
add
or
push
add
add
lods
add
add
adc
add
dec
or
add
add
add
cli
(bad)
dec
(bad)
call
(bad)
(bad)
mov
sti
(bad)
jmp
std
(bad)
dec
(bad)
inc
add
or
add
mov
(bad)
inc
(bad)
(bad)
jmp
std
(bad)
inc
(bad)
dec
(bad)
inc
(bad)
jmp
add
add
cli
(bad)
call
(bad)
(bad)
mov
add
add
(bad)
(bad)
jmp
add
add
(bad)
call
add
add
cld
(bad)
call
std
(bad)
(bad)
cld
sti
(bad)
inc
sti
(bad)
(bad)
mov
(bad)
(bad)
dec
stc
(bad)
(bad)
cmp
(bad)
(bad)
(bad)
fdivr
(bad)
call
add
cmp
call
add
add
add
cmps
add
add
sbb
and
or
xchg
pop
and
call
(bad)
call
add
adc
mov
sub
cmp
(bad)
(bad)
jmp
adc
call
mov
and
cld
(bad)
call
adc
add
(bad)
(bad)
call
or
mov
push
dec
pop
and
mov
pop
cld
(bad)
call
or
adc
cmp
jmp
sldt
add
mov
(bad)
call
or
lods
sti
ror
and
xor
popa
cmp
(bad)
call
add
xchg
(bad)
jmp
sub
add
cmp
or
sbb
and
add
add
jg
(bad)
call
pop
pop
or
xchg
or
or
push
(bad)
(bad)
jmp
and
add
add
pusha
(bad)
(bad)
call
or
jnp
int
pop
and
fnstsw
cmp
cmp
sti
(bad)
call
or
sbb
popf
adc
dec
test
popa
cmp
sti
(bad)
call
or
scas
loopne
leave
pop
and
sbb
and
mov
(bad)
call
pop
sbb
pop
sbb
sahf
and
add
add
adc
(bad)
call
or
imul
pop
and
pop
fs
cmp
adc
and
add
add
cmp
std
(bad)
jmp
and
setbe
jne
(bad)
dec
or
sbb
or
add
aam
(bad)
call
or
(bad)
lahf
(bad)
pop
and
add
cmp
(bad)
call
pop
push
adc
push
xchg
or
xchg
popa
sahf
and
add
add
stos
std
(bad)
call
adc
add
add
sahf
std
(bad)
call
pop
push
adc
push
xchg
or
xchg
popa
sahf
and
add
cmp
scas
in
mov
add
add
or
cmp
sti
(bad)
jmp
add
adc
push
add
add
sub
es
add
std
scas
sahf
add
loop
popa
adc
add
push
or
add
adc
add
(bad)
(bad)
(bad)
aas
pop
adc
add
bound
add
add
add
ja
popa
and
pop
inc
or
add
adc
add
hlt
add
add
add
add
add
add
add
add
(bad)
(bad)
inc
add
add
add
add
or
push
movs
add
add
or
pop
and
cmp
and
cmp
add
add
and
loopne
jle
add
add
and
loopne
push
bound
add
add
and
loopne
pop
adc
jle
add
add
and
loopne
pop
sbb
or
pop
add
or
add
add
or
add
or
or
add
movs
add
add
or
pop
and
and
cmp
(bad)
inc
outs
sbb
or
add
and
cmp
add
add
push
daa
je
and
(bad)
(bad)
jle
add
add
adc
push
adc
pop
sub
add
or
pop
and
add
dec
pop
and
pop
sub
popa
cmp
(bad)
(bad)
inc
outs
push
push
or
add
and
cmp
add
add
popaw
jno
and
(bad)
inc
outs
pop
push
or
add
and
pop
cmps
(bad)
and
add
cmps
retf
arpl
adc
mov
popa
cmp
pop
and
cmps
dec
pop
and
pop
adc
cmp
add
add
and
loopne
jle
add
add
and
loopne
push
bound
add
add
and
loopne
pop
adc
jle
add
add
and
loopne
pop
sbb
adc
add
add
and
loopne
jle
add
add
and
loopne
push
bound
add
add
and
loopne
pop
adc
jle
add
add
and
loopne
pop
sbb
adc
sbb
or
add
outs
or
add
adc
or
push
adc
and
ret
inc
pop
and
add
popa
cmp
std
(bad)
call
lea
add
sbb
add
or
(bad)
sbb
add
sbb
or
add
or
mov
or
pop
and
pushf
xchg
mov
sbb
inc
sub
xor
add
add
add
add
adc
add
push
add
pop
loop
ins
pop
and
add
cmp
and
and
and
pop
inc
adc
add
cmp
add
add
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
mov
add
add
xchg
add
pop
lea
add
sbb
jmp
or
add
(bad)
(bad)
(bad)
jle
add
add
and
loopne
jle
add
add
and
loopne
push
bound
add
add
and
loopne
pop
adc
jle
add
add
and
loopne
pop
sbb
or
pop
add
or
add
add
or
add
or
or
add
movs
add
add
or
pop
and
test
repnz
popa
cmp
(bad)
(bad)
(bad)
jle
add
add
and
loopne
jle
add
add
and
loopne
push
bound
add
add
and
loopne
pop
adc
jle
add
add
and
loopne
pop
sbb
adc
sbb
and
pop
iret
sub
int
(bad)
inc
outs
push
push
or
add
and
cmp
add
add
mov
sub
cmp
outs
sbb
or
add
and
cld
mov
and
add
hlt
cmp
sti
and
hlt
sbb
cmp
add
add
adc
push
adc
pop
sub
add
or
push
movs
add
add
or
pop
and
xchg
into
inc
pop
and
xchg
(bad)
call
add
adc
add
(bad)
(bad)
(bad)
aas
pop
adc
add
bound
add
pop
and
push
aaa
pop
and
push
cs
(bad)
call
add
add
sub
add
or
add
or
add
or
push
adc
and
and
push
and
(bad)
(bad)
(bad)
jle
add
add
or
(bad)
sbb
add
sbb
or
add
adc
and
inc
xor
and
cmp
std
(bad)
call
pop
and
and
dec
mov
(bad)
dec
push
mov
or
pop
and
pop
lea
xchg
jb
and
cmp
pop
push
or
pop
and
adc
pop
and
xchg
std
(bad)
inc
outs
pop
push
or
add
and
aas
sti
push
and
add
out
xor
ja
(bad)
(bad)
jle
add
add
and
loopne
jle
add
add
and
loopne
push
bound
add
add
and
loopne
pop
adc
jle
add
add
and
loopne
pop
sbb
adc
pop
and
shr
or
std
(bad)
inc
sub
adc
push
add
add
add
add
adc
add
push
add
gs
(bad)
pop
and
push
arpl
popa
adc
and
fidiv
and
and
pop
inc
push
add
add
add
add
add
add
(bad)
(bad)
inc
add
sbb
add
cmp
add
xchg
add
add
add
add
add
add
add
add
cmp
add
add
bound
add
pop
and
and
mov
popa
cmp
add
add
and
loopne
jle
add
add
and
loopne
push
bound
add
add
and
loopne
pop
adc
jle
add
add
and
loopne
pop
sbb
adc
pop
and
je
pop
and
dec
popaw
cmp
(bad)
inc
pop
push
or
add
adc
adc
and
and
stc
pop
popa
cmp
(bad)
(bad)
(bad)
jle
add
add
and
loopne
jle
add
add
and
loopne
push
bound
add
add
and
loopne
pop
adc
jle
add
add
and
loopne
pop
sbb
or
pop
add
or
add
add
or
add
or
or
add
movs
add
add
or
pop
and
mov
mov
cmp
and
(bad)
(bad)
aas
pop
adc
adc
and
and
cmp
outs
sbb
or
add
and
mov
add
add
jnp
int3
(bad)
and
xor
adc
(bad)
(bad)
inc
outs
sbb
or
add
and
cmp
outs
and
add
cmps
xchg
cmp
(bad)
dec
push
mov
or
pop
and
cs
or
popa
cmp
(bad)
(bad)
(bad)
jle
add
add
and
loopne
jle
add
add
and
loopne
push
bound
add
add
and
loopne
pop
adc
jle
add
add
and
loopne
pop
sbb
adc
jp
(bad)
pop
and
cmp
std
(bad)
call
add
add
sub
add
or
add
or
add
or
push
jle
add
add
adc
push
adc
pop
sub
add
or
push
movs
add
add
or
pop
and
push
dec
or
jge
std
adc
sahf
std
(bad)
inc
outs
push
push
or
add
and
gs
add
and
push
jnp
cmp
(bad)
call
lea
add
sbb
add
or
(bad)
sbb
add
sbb
or
add
adc
and
and
push
std
(bad)
inc
sub
add
adc
push
add
add
add
add
adc
add
push
add
dec
or
pop
and
adc
add
push
or
jb
mov
jle
loopne
popa
and
pop
inc
adc
add
and
add
pop
add
add
add
add
add
add
add
add
add
add
add
mov
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
adc
and
and
add
in
popa
cmp
pop
and
imul
add
loop
popa
cmp
(bad)
jle
add
add
and
loopne
jle
add
add
and
loopne
push
bound
add
add
and
loopne
pop
adc
jle
add
add
and
loopne
pop
sbb
adc
add
add
and
loopne
jle
add
add
and
loopne
push
bound
add
add
and
loopne
pop
adc
jle
add
add
and
loopne
pop
sbb
adc
mov
(bad)
jo
cmp
out
(bad)
dec
push
mov
or
pop
and
and
int3
pop
popa
cmp
(bad)
(bad)
inc
outs
sbb
or
add
and
cmp
add
add
aad
adc
and
sub
sub
cmp
add
add
adc
push
adc
pop
sub
add
or
pop
and
fidivr
pop
and
fldz
mov
(bad)
call
lea
add
sbb
add
or
(bad)
sbb
add
sbb
or
add
adc
and
push
neg
mov
lock
push
(bad)
(bad)
inc
outs
sbb
or
add
and
int
adc
add
sub
inc
inc
and
(bad)
inc
outs
pop
push
or
add
and
inc
jns
cmp
add
add
push
mov
and
(bad)
call
push
movs
add
add
or
pop
and
fld
and
lods
aad
popa
cmp
std
(bad)
inc
sbb
add
pop
and
or
pop
and
scas
sti
sbb
fdivrp
(bad)
call
add
add
sub
add
or
add
or
add
or
push
adc
and
add
jo
popa
cmp
and
(bad)
(bad)
aas
pop
adc
adc
and
data16
pop
and
pop
push
aas
popa
cmp
add
add
and
loopne
jle
add
add
and
loopne
push
bound
add
add
and
loopne
pop
adc
jle
add
add
and
loopne
pop
sbb
or
pop
add
or
add
add
or
add
or
or
add
movs
add
add
or
pop
and
repnz
into
ret
or
popa
cmp
std
(bad)
inc
sub
adc
push
add
add
adc
add
push
add
in
mov
and
adc
and
lahf
stc
and
mov
adc
pop
adc
adc
add
repz
add
add
add
add
and
add
add
add
xchg
add
add
add
add
add
add
add
add
add
add
add
popa
add
add
add
cmp
pop
push
or
add
adc
adc
and
xchg
fbstp
pop
and
cmp
add
add
and
loopne
jle
add
add
and
loopne
push
bound
add
add
and
loopne
pop
adc
jle
add
add
and
loopne
pop
sbb
or
pop
and
and
jle
and
sub
(bad)
(bad)
inc
outs
push
push
or
add
and
jp
xlat
and
add
jb
data16
retf
cli
mov
(bad)
(bad)
call
pop
and
into
inc
pop
and
pusha
lock
popa
cmp
(bad)
(bad)
(bad)
jle
add
add
and
loopne
jle
add
add
and
loopne
push
bound
add
add
and
loopne
pop
adc
jle
add
add
and
loopne
pop
sbb
adc
add
add
and
loopne
jle
add
add
and
loopne
push
bound
add
add
and
loopne
pop
adc
jle
add
add
and
loopne
pop
sbb
adc
movs
dec
push
pop
and
sub
(bad)
(bad)
inc
sbb
add
pop
and
enter
and
lock
cmp
(bad)
inc
and
(bad)
(bad)
aas
pop
adc
adc
and
and
jns
cmp
(bad)
(bad)
call
lea
add
sbb
mov
out
out
popa
cmp
(bad)
(bad)
(bad)
jle
add
add
or
(bad)
sbb
add
sbb
or
add
or
mov
or
pop
and
xlat
sub
jbe
in
popa
cmp
std
(bad)
call
pop
and
inc
add
aam
xchg
aam
cmp
std
(bad)
call
push
movs
add
add
or
pop
and
and
cmp
add
or
add
add
or
add
or
or
add
movs
add
add
or
pop
and
fwait
icebp
das
pop
and
fsub
test
(bad)
inc
outs
sbb
or
add
and
and
and
add
movs
xchg
xor
and
(bad)
(bad)
jle
add
add
adc
push
adc
pop
sub
add
or
pop
and
and
cmp
(bad)
inc
outs
sbb
or
add
and
fsub
add
je
icebp
cmc
and
(bad)
call
add
add
sub
add
or
add
or
add
or
push
adc
and
(bad)
sub
pop
and
pop
out
popa
cmp
cld
(bad)
inc
sub
add
sub
es
add
sbb
add
sub
sub
es
add
add
add
sub
xor
add
add
add
add
add
add
push
pop
sub
add
xor
add
add
add
add
add
add
push
push
sub
add
xor
add
add
add
add
add
add
push
add
or
add
or
add
push
add
or
add
xor
add
add
add
add
add
add
push
add
or
add
or
add
sub
adc
or
adc
add
add
add
sub
es
add
or
add
or
add
sldt
or
add
xor
add
add
add
add
add
add
push
dec
add
dec
add
dec
add
outs
adc
add
sub
add
xor
add
add
add
add
add
add
push
add
or
add
adc
add
sub
adc
or
adc
add
add
add
sub
es
dec
add
dec
add
outs
adc
add
sub
add
xor
add
add
add
add
add
add
push
dec
add
dec
add
outs
adc
add
sub
add
xor
add
add
add
add
add
add
push
add
adc
add
sub
adc
or
sldt
add
add
add
add
push
add
or
add
adc
add
xor
add
add
add
add
add
add
push
add
push
add
or
add
xor
add
add
add
add
add
add
push
add
pop
add
or
add
xor
add
add
add
add
add
add
push
dec
add
outs
sbb
add
sub
add
xor
add
add
add
add
add
add
push
dec
add
outs
sbb
add
sub
add
xor
add
add
add
add
add
add
push
dec
add
outs
sbb
add
sub
add
xor
sbb
add
add
add
sub
es
dec
add
dec
add
dec
add
dec
add
outs
sbb
add
sub
add
xor
add
add
add
add
add
add
push
dec
add
dec
add
outs
push
add
push
sub
add
xor
add
add
add
add
push
dec
add
dec
add
dec
add
dec
add
dec
add
outs
push
add
push
sub
add
xor
add
add
add
add
add
add
push
add
or
add
sbb
add
sub
adc
or
adc
add
add
add
sub
es
add
add
add
add
add
adc
or
inc
add
add
add
adc
add
push
push
sub
add
push
cmp
add
add
and
add
add
and
add
add
add
bound
add
add
mov
push
add
add
push
add
dec
add
add
add
add
add
add
add
add
(bad)
add
add
add
add
add
add
add
add
add
add
xchg
(bad)
(bad)
jmp
add
lahf
add
add
add
add
add
sahf
add
add
add
cmp
add
cmp
pop
and
sub
pop
and
mov
popa
cmp
add
add
jnp
add
add
inc
lock
add
push
add
add
jg
(bad)
inc
and
xlat
(bad)
pop
and
push
aas
cmp
cmps
add
add
and
add
pop
jge
add
add
sldt
add
push
(bad)
(bad)
inc
and
and
fcom
stc
popa
cmp
add
and
add
add
add
add
add
add
sbb
add
add
add
add
sub
add
push
cmp
(bad)
(bad)
jmp
and
cs
sbb
add
mov
jae
and
fwait
movs
scas
pop
popa
cmp
add
add
and
add
bound
add
add
or
add
cmp
(bad)
(bad)
inc
and
and
cmp
popa
cmp
add
add
add
add
add
bound
jnp
add
add
cmp
add
shl
push
add
add
or
add
sub
add
push
cmp
and
sar
add
and
enter
es
and
stc
ins
pop
popa
cmp
jnp
add
add
add
add
inc
add
add
adc
add
cmp
(bad)
inc
and
mov
pop
into
add
xchg
add
add
sub
in
push
pop
sbb
xchg
add
add
jge
add
add
or
add
cmp
(bad)
jmp
add
fs
cmp
add
add
add
jnp
add
add
fs
jge
add
add
add
add
cmp
(bad)
(bad)
inc
and
jecxz
and
cmp
add
add
jnp
add
add
add
add
inc
in
(bad)
jmp
or
out
(bad)
inc
jnp
add
add
or
add
add
or
pop
add
add
int3
std
(bad)
jmp
push
push
jno
pusha
cwde
pop
xor
or
push
pop
inc
push
add
add
(bad)
(bad)
jmp
(bad)
(bad)
push
(bad)
(bad)
(bad)
jmp
add
(bad)
dec
(bad)
dec
add
test
add
adc
(bad)
push
(bad)
(bad)
push
(bad)
(bad)
jmp
add
add
cmp
(bad)
inc
and
and
cmp
jnp
add
add
bound
jnp
add
add
cmp
add
shl
push
add
add
pushf
std
(bad)
jmp
and
add
add
cmp
std
(bad)
jmp
cmp
add
add
and
add
pop
jge
add
add
add
add
cmp
std
(bad)
jmp
in
les
retf
push
add
add
icebp
jle
(bad)
and
and
cmp
(bad)
(bad)
call
sub
add
xor
add
add
add
add
add
add
push
pop
sub
add
xor
add
add
add
add
add
add
push
push
sub
add
xor
add
add
add
add
add
add
push
dec
add
outs
sbb
add
sub
add
xor
and
add
add
add
sub
es
sub
es
add
jge
add
add
pop
add
pop
pop
bound
jge
add
add
add
add
xor
das
add
add
add
adc
add
push
sub
add
sub
add
cmp
add
and
add
add
sbb
add
cmp
add
add
pop
pop
or
xor
add
and
add
add
push
add
dec
add
add
add
add
adc
add
sar
inc
add
add
add
add
add
mov
add
pop
add
add
and
retf
(bad)
(bad)
jmp
dec
out
xchg
shl
add
ret
aam
mov
add
add
and
xchg
jle
popa
cmp
add
jnp
add
add
loopne
add
add
sub
add
push
and
add
add
xchg
(bad)
call
or
add
add
cmp
(bad)
inc
and
clc
push
icebp
pop
and
mov
add
add
outs
pop
add
add
add
pop
pop
bound
xchg
(bad)
(bad)
jmp
add
add
cmp
(bad)
jmp
cmps
addr16
and
pop
(bad)
lods
popa
and
push
add
add
(bad)
dec
(bad)
(bad)
call
(bad)
(bad)
call
add
mov
(bad)
jmp
(bad)
jmp
add
add
cmp
test
(bad)
jmp
add
xor
pop
add
add
add
adc
add
push
and
add
add
repnz
add
adc
push
add
add
mov
cmp
cmp
add
pop
pop
pop
or
or
add
cmp
add
add
push
inc
cmp
add
pop
push
ds
(bad)
jmp
add
add
sub
add
cmp
cmp
add
add
jnp
add
add
and
add
add
xchg
add
add
or
inc
add
push
sub
add
cmp
add
add
and
cmp
add
es
mov
adc
popa
and
push
add
add
(bad)
(bad)
dec
(bad)
(bad)
call
(bad)
(bad)
jmp
add
add
fwait
(bad)
(bad)
jmp
and
add
add
cmp
add
or
aaa
pop
cmp
pop
and
sub
mov
(bad)
inc
pop
bound
jnp
add
add
loopne
add
add
add
cmp
add
pop
or
inc
(bad)
(bad)
jmp
add
add
dec
add
dec
add
add
add
(bad)
(bad)
dec
(bad)
(bad)
jmp
(bad)
(bad)
call
(bad)
jmp
(bad)
(bad)
dec
(bad)
(bad)
call
add
add
pop
add
add
inc
add
push
cmp
(bad)
(bad)
jmp
or
dec
push
into
lahf
pop
and
xchg
popa
cmp
(bad)
inc
pop
add
add
add
pop
pop
bound
add
add
xor
mov
add
or
add
sub
es
and
add
add
cmp
pop
or
add
add
cmp
xchg
push
cmps
jmp
mov
adc
add
ret
add
add
add
add
add
das
add
add
(bad)
(bad)
(bad)
add
add
add
add
add
add
cmp
add
cmp
add
or
jnp
add
add
pushf
add
add
add
add
cmp
add
push
inc
inc
sti
cmp
pop
bound
and
add
sub
add
cmp
add
add
and
add
push
or
or
add
cmp
add
add
or
cmp
or
add
dec
add
add
add
add
(bad)
jmp
add
add
add
add
add
add
add
(bad)
(bad)
jmp
(bad)
(bad)
dec
add
add
add
add
cmp
jo
add
adc
mov
(bad)
(bad)
inc
jnp
add
add
loopne
add
add
add
cmp
add
or
add
inc
add
push
cmp
adc
mov
push
mov
and
adc
(bad)
(bad)
call
or
or
add
cmp
(bad)
inc
or
pop
pop
pop
bound
pop
sub
add
cmp
and
add
add
inc
add
push
cmp
(bad)
(bad)
jmp
adc
mov
(bad)
and
pop
jo
cmp
pop
pop
or
mov
and
pop
(bad)
(bad)
call
add
(bad)
ins
mov
and
outs
(bad)
(bad)
inc
sub
xor
rol
add
or
add
sub
es
and
add
add
cmp
add
adc
je
arpl
and
loope
popa
cmp
add
pop
loopne
add
add
add
cmp
add
or
add
and
add
and
popa
add
add
add
add
inc
add
add
add
add
dec
add
add
add
add
add
add
(bad)
call
add
movs
(bad)
(bad)
inc
add
add
add
add
add
add
add
add
add
and
add
add
mov
inc
repz
and
cmp
inc
popa
and
pop
inc
or
add
xor
add
pushf
add
add
(bad)
jmp
add
aam
add
inc
(bad)
(bad)
inc
(bad)
(bad)
dec
add
add
add
add
or
add
cmp
(bad)
(bad)
cmp
add
add
pop
pop
or
add
add
pop
cmp
(bad)
jmp
adc
xchg
int3
sbb
and
(bad)
call
or
add
add
cmp
(bad)
inc
pop
bound
pop
sub
add
cmp
add
add
and
add
add
sub
(bad)
call
add
adc
mov
and
inc
into
xchg
popa
cmp
(bad)
inc
or
cmp
and
add
sub
add
cmp
(bad)
(bad)
(bad)
cmp
(bad)
(bad)
call
add
dec
sub
sbb
ret
cmp
das
(bad)
(bad)
inc
or
pop
pop
pop
bound
and
add
push
cmp
(bad)
(bad)
jmp
pop
or
or
add
cmp
(bad)
(bad)
jmp
sbb
adc
add
sar
sub
(bad)
call
or
or
add
cmp
add
cmps
repnz
in
and
daa
sbb
(bad)
(bad)
inc
sub
adc
or
push
add
add
add
add
add
push
pop
sub
add
xor
add
add
add
add
add
add
push
push
sub
add
xor
add
add
adc
add
push
and
add
add
cmp
add
and
and
add
add
add
add
add
cmp
add
add
and
and
cmp
add
add
add
add
add
bound
jnp
add
add
dec
add
push
shl
push
add
add
add
add
push
add
add
push
add
dec
add
add
add
add
jne
(bad)
push
add
add
add
xor
add
add
add
call
add
add
add
add
add
add
jo
(bad)
jmp
and
add
add
mov
and
sbb
sbb
lods
popa
int3
mov
cmp
add
add
jge
add
add
or
add
cmp
add
add
sbb
add
add
add
add
sub
add
cmp
jl
(bad)
inc
and
or
pop
and
dec
push
and
add
add
pop
pop
or
pop
add
add
pop
(bad)
(bad)
jmp
inc
ret
out
and
add
jb
mov
and
add
push
or
or
add
sub
add
cmp
(bad)
jmp
and
jp
pop
and
and
or
add
push
(bad)
(bad)
jmp
add
add
(bad)
(bad)
dec
(bad)
(bad)
call
(bad)
call
sub
add
cmp
(bad)
(bad)
jmp
and
add
pop
cmp
(bad)
(bad)
jmp
add
jge
add
add
or
add
cmp
(bad)
(bad)
inc
and
lods
scas
lea
sbb
mov
(bad)
(bad)
jmp
add
xor
add
add
add
add
sub
es
add
sub
xor
add
add
add
add
sub
es
push
sub
add
cmp
add
add
and
add
add
mov
sar
stc
mov
add
and
pop
jmp
add
and
add
bound
add
add
push
add
add
pop
add
cmp
add
and
cmp
mov
sahf
popa
and
add
add
add
(bad)
(bad)
(bad)
mov
add
add
add
add
pop
cmp
add
cmp
jnp
add
add
bound
jnp
add
add
dec
add
push
shl
push
add
add
add
add
cmp
add
and
popf
(bad)
(bad)
inc
jnp
add
add
add
add
inc
pop
(bad)
(bad)
(bad)
cmp
add
add
add
add
dec
add
dec
add
add
add
(bad)
call
(bad)
push
add
add
(bad)
(bad)
call
add
add
sbb
(bad)
jmp
and
iret
(bad)
(bad)
inc
and
and
cmp
(bad)
(bad)
jmp
adc
or
pushf
add
add
add
sub
es
and
add
add
cmp
jnp
add
add
and
add
add
sub
add
adc
imul
popa
scas
inc
popa
cmp
add
add
push
xor
add
cmp
add
and
add
add
push
push
add
or
add
add
add
add
add
add
in
add
add
add
add
add
add
add
add
add
jb
(bad)
dec
add
add
add
sbb
add
add
add
add
add
add
add
add
add
add
add
add
add
rol
add
and
lahf
(bad)
(bad)
inc
push
pop
pop
pop
adc
sldt
add
cmp
cmp
loop
cmp
add
add
sahf
push
(bad)
les
in
(bad)
and
add
add
push
bound
jnp
add
add
dec
add
push
shl
and
add
add
push
(bad)
(bad)
jmp
nop
movs
adc
cmp
add
add
or
adc
add
cmp
(bad)
(bad)
jmp
loop
or
and
and
pop
inc
or
add
mov
(bad)
(bad)
call
add
add
add
add
add
add
add
add
add
add
cmps
add
add
(bad)
(bad)
jmp
dec
add
push
sub
add
cmp
(bad)
(bad)
jmp
and
add
cmp
(bad)
(bad)
(bad)
cmp
add
add
push
adc
pop
pop
pop
or
add
ret
inc
push
bound
and
add
add
mov
(bad)
call
add
sub
add
jnp
popa
cmp
dec
pop
pop
or
add
xchg
(bad)
(bad)
call
add
dec
pop
and
cmp
(bad)
inc
or
add
je
(bad)
dec
pop
bound
adc
pusha
or
or
add
cmp
(bad)
call
add
xchg
pop
and
and
(bad)
call
add
(bad)
pop
and
and
cmp
(bad)
(bad)
inc
pop
or
push
add
add
sub
add
jo
and
add
popa
cmp
(bad)
(bad)
inc
and
add
add
(bad)
jmp
add
add
cmp
jmp
adc
add
jge
add
add
adc
add
cmp
std
(bad)
jmp
pop
(bad)
shr
add
and
pushf
inc
test
(bad)
(bad)
inc
push
jge
add
add
or
add
cmp
std
(bad)
inc
jnp
add
add
and
add
add
mov
(bad)
dec
sub
xor
add
add
add
add
sub
es
sub
es
add
dec
add
push
sub
adc
or
push
add
add
add
add
add
push
dec
add
outs
sbb
add
sub
add
xor
add
add
add
add
add
add
push
pop
sub
add
xor
add
add
add
add
add
add
push
push
sub
add
xor
add
add
add
add
add
add
push
dec
add
sub
add
sub
add
xor
add
add
add
add
adc
add
push
sub
es
and
add
add
cmp
add
add
pop
and
shl
pop
and
dec
mov
add
add
jnp
add
add
pop
add
add
cmp
add
add
pop
add
add
inc
add
pop
and
jno
sahf
pop
and
cmp
add
add
or
push
add
add
loopne
add
add
rol
add
lea
add
add
add
add
push
add
push
sub
add
cmp
add
add
and
add
add
cmp
sbb
add
push
jge
add
add
movs
add
add
and
add
add
xchg
add
add
pop
or
lea
add
add
add
add
add
add
cmp
add
cmp
adc
add
adc
add
cmp
add
pop
and
jb
add
cmp
cmp
push
push
adc
add
inc
add
add
(bad)
jno
ins
and
add
xchg
push
mov
je
add
push
pop
pop
or
adc
add
cmp
add
add
sbb
lea
add
add
add
add
pop
add
add
or
add
dec
add
dec
add
add
add
add
add
add
add
add
(bad)
(bad)
call
(bad)
call
(bad)
dec
add
add
add
add
add
(bad)
(bad)
inc
(bad)
push
(bad)
(bad)
(bad)
jl
(bad)
call
(bad)
(bad)
(bad)
aas
add
add
add
ret
add
(bad)
(bad)
call
add
or
add
push
cmp
add
rol
add
lea
add
add
add
add
or
add
cmp
inc
pop
jb
lea
add
add
add
add
sldt
add
pop
(bad)
(bad)
inc
jae
add
push
jge
add
add
push
add
add
inc
(bad)
(bad)
inc
pop
or
lea
add
add
add
add
adc
add
push
cmp
(bad)
(bad)
jmp
add
or
lea
add
add
add
add
or
cmp
(bad)
jmp
add
add
push
jge
add
add
pop
add
add
(bad)
(bad)
(bad)
inc
sub
push
and
add
add
out
(bad)
(bad)
inc
jae
add
push
jge
add
add
adc
fsin
(bad)
inc
jae
add
push
jge
add
add
adc
add
sub
add
cmp
and
dec
pop
and
xchg
sbb
add
push
add
add
(bad)
call
(bad)
(bad)
call
(bad)
jmp
(bad)
(bad)
push
(bad)
(bad)
jmp
add
add
sub
add
cmp
(bad)
jmp
add
add
push
jge
add
add
add
add
cmp
(bad)
inc
pop
or
lea
add
add
add
add
adc
add
sub
add
cmp
(bad)
cmp
(bad)
jmp
adc
(bad)
(bad)
jmp
add
add
xor
add
add
or
add
sub
es
and
add
cmp
add
add
add
add
cmp
add
add
sub
add
cmp
add
add
and
add
add
push
add
push
cmp
add
add
pop
and
cli
push
test
shl
lds
add
add
add
add
sub
add
cmp
add
and
add
dec
add
dec
add
add
add
add
jns
add
jns
add
imul
(bad)
jmp
add
add
add
add
push
add
add
int
(bad)
inc
and
sbb
jp
sub
add
add
jnp
add
add
sub
add
jge
add
add
pop
add
add
lahf
(bad)
(bad)
inc
jnp
add
add
add
add
sub
add
or
or
add
sub
add
cmp
(bad)
(bad)
cmp
(bad)
(bad)
cmp
add
add
jge
add
add
cmp
(bad)
jmp
and
pop
(bad)
(bad)
jmp
sbb
xchg
sbb
add
(bad)
(bad)
call
(bad)
(bad)
call
add
sar
(bad)
fdivr
(bad)
jmp
add
add
cmp
(bad)
inc
and
and
(bad)
and
(bad)
jmp
add
add
xor
add
add
add
add
sub
es
add
add
add
add
pop
add
push
sub
add
xor
add
add
add
add
adc
add
push
push
sub
add
cmp
add
add
and
add
add
push
add
add
out
add
add
add
add
sub
add
and
add
add
dec
mov
test
or
pop
inc
add
add
fdivr
(bad)
call
add
(bad)
(bad)
(bad)
jmp
mov
add
add
dec
add
dec
add
add
add
add
add
add
(bad)
(bad)
dec
add
add
add
add
add
add
cmp
(bad)
(bad)
inc
and
mov
pop
and
push
and
mov
(bad)
inc
push
pop
pop
jge
add
add
pop
add
add
push
add
push
cmp
pop
add
pop
pop
bound
cmp
add
add
and
add
add
(bad)
(bad)
(bad)
inc
jnp
add
add
sub
add
and
add
add
cmp
(bad)
jmp
pop
and
and
mov
(bad)
(bad)
jmp
add
xor
add
add
add
add
push
and
add
add
xchg
add
add
and
push
cmps
inc
pop
and
cmp
add
jnp
add
add
pop
add
push
and
push
add
push
cmp
add
cmp
add
or
cdq
pop
and
pop
and
cmp
add
add
pop
pop
or
add
push
add
push
cmp
pop
pop
pop
or
push
add
add
add
add
jg
fdiv
add
jnp
add
add
loopne
add
add
sub
add
push
cmp
add
and
add
add
push
add
dec
add
add
add
(bad)
(bad)
inc
(bad)
(bad)
in
(bad)
(bad)
(bad)
aas
add
add
add
add
add
into
add
add
add
add
add
cmps
add
add
(bad)
call
add
add
add
add
add
xlat
add
add
add
add
add
add
add
add
add
add
add
add
add
add
xor
add
or
add
mov
add
add
adc
add
cmp
(bad)
jmp
in
sbb
in
cmp
add
add
cdq
lods
jne
and
add
pop
add
add
add
jnp
add
cmp
add
and
add
add
inc
(bad)
(bad)
inc
jnp
add
add
loopne
add
add
sub
add
push
and
add
add
es
(bad)
jmp
xchg
xchg
add
and
jmp
add
add
sbb
(bad)
(bad)
jmp
sbb
add
cmp
(bad)
(bad)
inc
jnp
add
add
loopne
add
add
sub
add
push
and
add
add
loop
(bad)
jmp
jno
push
into
and
add
xchg
cmp
jnp
add
add
loopne
add
add
sub
add
push
and
add
cmp
and
and
dec
adc
js
add
add
add
add
pop
add
push
and
add
add
cmp
and
es
mov
add
jnp
add
add
loopne
add
add
sub
add
push
and
add
add
pusha
(bad)
(bad)
dec
and
scas
cld
pop
and
cmp
add
add
pop
pop
or
adc
add
cmp
(bad)
dec
and
cmp
xor
enter
popa
cmp
add
add
or
sbb
add
cmp
(bad)
(bad)
inc
jl
add
add
cmp
push
add
add
or
and
pop
mov
pop
and
push
(bad)
add
add
jnp
add
add
add
add
add
pop
add
push
and
(bad)
(bad)
dec
and
and
inc
popa
cmp
jnp
add
add
loopne
add
add
sub
add
push
and
add
add
mov
(bad)
inc
jnp
add
add
sub
add
and
add
add
fwait
std
(bad)
jmp
test
ins
add
add
pop
pop
or
add
add
pop
cmp
or
std
nop
loope
pop
and
out
cdq
popa
cmp
add
push
or
add
add
sub
add
cmp
(bad)
jmp
cmp
add
or
push
add
add
dec
std
(bad)
jmp
retf
push
call
add
jnp
add
add
loopne
add
add
sub
add
push
and
add
cmp
std
(bad)
dec
and
and
sbb
add
add
jnp
add
add
pop
add
push
and
add
add
(bad)
cld
(bad)
jmp
(bad)
int3
inc
loope
cmp
add
add
scas
jmp
and
add
push
sbb
pop
or
or
add
cmp
cld
(bad)
dec
and
test
pop
and
push
mov
cmp
pop
jb
retf
jmp
sbb
add
cmp
and
add
add
test
(bad)
dec
and
es
and
jo
pop
popa
cmp
add
push
pop
or
jae
(bad)
jmp
push
add
push
sub
add
cmp
std
(bad)
jmp
and
add
add
push
add
push
cmp
(bad)
(bad)
cmp
(bad)
dec
and
xor
in
inc
popa
cmp
add
add
and
and
xchg
jle
popa
cmp
add
add
jnp
add
add
loopne
add
add
sub
adc
sub
(bad)
jmp
ss
jo
and
mov
fbld
or
pop
add
add
sti
(bad)
jmp
(bad)
(bad)
out
cld
(bad)
dec
(bad)
(bad)
call
(bad)
(bad)
jmp
(bad)
(bad)
push
(bad)
(bad)
(bad)
mov
std
(bad)
jmp
(bad)
jmp
(bad)
(bad)
jmp
(bad)
dec
(bad)
(bad)
jmp
sti
(bad)
call
(bad)
call
(bad)
call
(bad)
(bad)
push
(bad)
jmp
or
add
sub
add
cmp
sub
add
adc
push
add
add
adc
add
push
and
add
add
push
add
adc
and
movs
ret
push
rol
fisub
add
add
or
add
dec
or
add
add
add
add
adc
add
cmp
or
add
mov
rcr
pop
and
cmp
add
adc
add
jnp
add
add
add
jnp
add
add
sub
add
sub
push
adc
and
add
add
test
and
mov
pop
and
(bad)
pop
iret
popa
cmp
jnp
add
add
adc
sub
add
and
add
add
cmp
or
add
adc
and
(bad)
lock
and
js
(bad)
popa
cmp
add
adc
and
pop
(bad)
movs
pop
and
cmp
add
adc
add
add
adc
and
add
cmp
add
push
add
push
and
jl
add
push
adc
pop
add
add
push
add
push
cmp
add
adc
and
and
cmp
add
or
add
add
add
add
bound
or
pop
add
add
jnp
add
add
cmp
add
cmp
add
add
or
add
sub
add
cmp
or
add
add
add
add
pop
sub
add
and
add
add
pop
or
add
cmp
add
or
or
push
add
add
cmc
or
add
and
push
add
add
push
xchg
mov
adc
and
popa
cmp
add
adc
sub
cwde
pop
add
and
add
add
push
add
push
cmp
mov
add
and
push
add
add
adc
push
pop
pop
pop
bound
and
add
add
xchg
or
add
add
adc
add
or
add
je
fsubr
and
add
mov
adc
and
popa
cmp
add
adc
(bad)
adc
and
push
or
add
or
(bad)
jmp
das
add
add
cmp
and
cmp
add
add
fcmovnb
push
mov
es
add
add
jnp
add
add
jnp
add
add
or
bound
add
sbb
or
sub
add
cmp
add
adc
and
data16
and
push
loop
popa
cmp
jnp
add
add
add
push
and
add
add
cmp
or
add
adc
and
and
test
cld
popa
cmp
add
adc
and
and
pop
add
add
jnp
add
add
or
pusha
add
push
and
add
add
cmp
jnp
add
add
jnp
add
add
sub
add
sub
add
and
add
add
push
add
push
cmp
add
cmp
add
and
inc
jae
cmp
add
add
jnp
add
add
add
add
add
pop
add
add
jnp
add
add
cmp
add
cmp
add
and
add
add
push
add
push
cmp
add
adc
and
and
out
(bad)
popa
cmp
add
add
add
add
add
push
sbb
add
push
sbb
or
sbb
add
pop
cmp
or
add
and
xchg
xchg
and
add
imul
cmp
add
nop
add
push
and
add
add
fadd
add
and
add
fidivr
js
add
or
or
xor
add
cmp
pop
add
adc
and
(bad)
cdq
pop
and
cmp
add
add
adc
cmp
add
cmp
push
mov
add
add
jnp
add
add
jnp
add
add
add
popa
add
push
adc
and
add
add
jne
add
adc
add
add
fs
add
adc
and
push
dec
pop
and
and
popa
cmp
add
add
add
xchg
add
push
and
add
add
inc
pop
add
and
mov
add
add
int3
pop
stos
push
and
sbb
jecxz
popa
cmp
add
add
jnp
add
add
sub
add
adc
and
add
add
or
add
and
and
add
ret
test
adc
and
push
push
pop
popa
cmp
jnp
add
add
add
add
add
pop
add
add
jnp
add
add
cmp
add
pop
cmp
pop
add
and
add
sub
add
cmp
adc
and
xchg
and
cmp
add
pop
adc
jmp
add
add
nop
push
add
add
add
add
push
push
add
add
jnp
add
and
push
out
sbb
add
adc
and
ret
pop
and
cmp
ret
popa
cmp
add
add
or
cmp
add
cmp
add
and
sub
and
add
rcr
and
leave
clc
cwde
or
popa
cmp
add
add
outs
adc
jmp
and
push
add
push
cmp
push
add
add
add
add
add
add
add
bound
or
pop
add
add
jnp
add
add
cmp
add
cmp
add
add
add
out
add
and
cmp
add
add
jmp
jp
add
pop
add
add
jnp
add
add
aas
add
push
pop
or
and
add
cmp
add
add
add
jnp
add
add
or
bound
add
pop
adc
and
add
add
xchg
add
sub
sub
add
jns
and
add
fst
mov
add
push
add
push
and
add
add
pop
add
xor
(bad)
and
mov
popa
and
pop
inc
cmp
add
in
add
sahf
add
add
(bad)
(bad)
dec
cli
(bad)
dec
add
add
stc
(bad)
(bad)
mov
sti
(bad)
inc
(bad)
(bad)
inc
add
mov
add
jns
(bad)
inc
(bad)
push
cld
(bad)
inc
add
add
add
add
add
add
add
add
(bad)
(bad)
(bad)
jge
(bad)
push
(bad)
jmp
add
add
add
add
stc
(bad)
(bad)
(bad)
cli
(bad)
dec
add
add
add
add
(bad)
(bad)
cmp
(bad)
(bad)
cmp
(bad)
inc
std
(bad)
push
add
add
(bad)
(bad)
sti
sti
(bad)
dec
add
add
add
add
cld
(bad)
call
cld
(bad)
dec
add
add
add
mov
(bad)
jmp
(bad)
(bad)
call
std
(bad)
dec
add
test
add
std
(bad)
call
add
je
add
lds
add
pop
cli
(bad)
jmp
and
add
pop
cmp
add
adc
and
rol
loope
lahf
cmp
in
(bad)
(bad)
call
mov
mov
adc
pop
cs
cmp
(bad)
(bad)
inc
jnp
add
add
push
add
and
add
add
sbb
add
or
mov
and
add
add
push
add
push
cmp
add
add
inc
add
and
(bad)
(bad)
call
or
std
(bad)
jmp
push
add
add
loope
add
and
mov
lock
add
add
add
adc
jnp
add
add
push
sub
add
pop
or
add
add
cmp
imul
push
add
add
or
lods
test
(bad)
inc
add
add
add
in
add
and
push
add
push
cmp
add
adc
and
jne
and
mov
(bad)
popa
cmp
mov
jb
cmp
and
adc
(bad)
(bad)
inc
jnp
add
add
add
add
add
pop
add
add
jnp
add
add
cmp
add
cmp
std
(bad)
jmp
add
add
sub
add
adc
and
mov
pop
and
pop
xor
std
(bad)
call
add
add
add
cmp
add
add
and
rcr
cmp
or
adc
and
add
add
jmp
mov
por
and
cmp
mov
fs
mov
mov
std
(bad)
dec
adc
push
add
push
sub
add
cmp
and
add
cmp
pop
(bad)
xchg
xchg
cmp
(bad)
inc
or
or
add
cmp
mov
jbe
xchg
pop
and
adc
sub
cmp
std
(bad)
call
add
add
add
cmp
add
es
(bad)
dec
xchg
cmp
std
(bad)
call
or
add
sub
add
cmp
add
adc
sub
adc
add
cmp
add
and
push
jmp
add
add
push
inc
or
and
idiv
(bad)
cld
(bad)
call
add
or
add
add
cmp
add
add
add
jnp
add
add
push
sub
add
adc
and
add
cmp
add
add
mov
and
adc
cmps
adc
test
(bad)
call
add
pop
add
and
add
sub
add
cmp
add
add
adc
and
mov
mov
sub
popa
cmp
(bad)
inc
jnp
add
add
add
add
add
pop
add
add
jnp
add
add
cmp
add
cmp
(bad)
jmp
daa
add
add
cmp
adc
and
and
icebp
outs
popa
cmp
cld
(bad)
dec
or
add
push
add
push
cmp
add
and
push
push
mov
cld
sti
(bad)
call
mov
push
int3
pop
and
jmp
popa
cmp
sti
(bad)
call
or
and
xor
add
adc
sub
and
add
cmp
add
add
mov
adc
push
pop
and
and
mov
or
add
cmp
add
add
adc
and
push
sbb
add
xchg
sti
(bad)
call
add
std
(bad)
jmp
cmp
add
cmp
add
add
fldcw
push
add
add
ffree
jb
and
(bad)
call
push
add
add
mov
add
and
dec
sar
cmp
add
add
mov
test
mov
movs
add
popa
cmp
sti
(bad)
inc
jnp
add
add
add
add
add
(bad)
loopne
add
add
add
add
add
cmp
add
and
add
cmp
add
adc
and
sbb
pop
and
clc
dec
jo
cmp
sti
(bad)
inc
jnp
add
add
or
imul
add
add
add
add
add
add
push
adc
add
push
add
push
cmp
add
add
adc
and
push
mov
and
cmc
mov
mov
or
(bad)
(bad)
jmp
adc
add
dec
adc
dec
add
add
add
(bad)
(bad)
jmp
(bad)
call
(bad)
push
cmc
(bad)
jmp
(bad)
call
(bad)
inc
(bad)
(bad)
inc
cli
(bad)
jmp
idiv
push
(bad)
(bad)
cmp
(bad)
jmp
(bad)
inc
sti
(bad)
jmp
sti
(bad)
call
(bad)
jmp
idiv
push
hlt
(bad)
dec
std
(bad)
jmp
hlt
(bad)
push
repz
jmp
clc
(bad)
inc
sti
(bad)
push
cmc
(bad)
push
(bad)
(bad)
call
cmc
(bad)
call
cli
(bad)
inc
cmc
(bad)
call
(bad)
jmp
hlt
(bad)
jmp
idiv
jmp
cld
(bad)
call
(bad)
(bad)
(bad)
mov
cld
(bad)
inc
(bad)
inc
cmc
(bad)
jmp
(bad)
inc
(bad)
push
(bad)
call
(bad)
dec
hlt
(bad)
call
stc
(bad)
inc
sti
(bad)
dec
(bad)
jmp
std
(bad)
dec
std
(bad)
call
cli
(bad)
call
idiv
(bad)
jmp
(bad)
inc
cld
(bad)
call
idiv
(bad)
(bad)
cld
(bad)
call
clc
(bad)
dec
add
and
add
add
cmp
(bad)
(bad)
jmp
and
jg
mul
add
sbb
cmp
(bad)
jmp
add
add
xor
or
add
sldt
adc
add
push
sub
add
sub
add
cmp
add
and
add
add
cmp
push
xchg
pop
or
and
add
add
cmp
add
adc
and
adc
lods
popa
cmp
add
add
sub
add
and
add
add
dec
add
add
push
and
lock
and
data16
cmp
add
adc
add
cmp
add
and
add
add
cmp
add
add
cmp
or
sub
add
cmp
(bad)
(bad)
jmp
or
add
dec
pop
add
or
add
add
add
add
add
(bad)
(bad)
jmp
(bad)
inc
add
add
add
int3
add
add
add
add
add
add
add
dec
(bad)
(bad)
dec
add
add
add
add
cmp
sbb
and
add
add
mov
push
and
neg
add
popa
cmp
add
pop
adc
push
pop
pop
pop
pop
bound
add
add
add
cmp
(bad)
jmp
popa
out
sub
jg
add
push
adc
add
pop
(bad)
(bad)
call
push
and
fisttp
and
sbb
popa
cmp
add
adc
and
add
add
cmp
(bad)
call
adc
pop
add
add
sub
(bad)
inc
sbb
and
add
add
push
add
push
cmp
(bad)
(bad)
jmp
and
xchg
cmp
add
add
repnz
pop
add
add
adc
dec
add
push
and
add
cmp
(bad)
(bad)
jmp
sbb
add
and
mov
punpcklwd
inc
or
add
mov
(bad)
(bad)
push
(bad)
call
(bad)
inc
(bad)
(bad)
dec
(bad)
(bad)
(bad)
mov
add
mov
(bad)
inc
push
xchg
pop
or
and
add
add
push
add
push
cmp
sub
adc
or
xlat
add
add
add
adc
add
push
and
add
add
add
add
sbb
add
sub
add
cmp
add
and
add
add
dec
add
add
cmps
add
add
sbb
add
and
add
add
call
sub
inc
add
add
jb
add
pop
add
add
(bad)
(bad)
(bad)
fdivr
(bad)
(bad)
cmp
add
add
add
add
dec
add
dec
add
add
add
(bad)
(bad)
inc
add
add
call
add
add
xchg
(bad)
(bad)
jmp
and
add
cmp
(bad)
(bad)
jmp
mov
mov
add
xor
push
and
inc
retf
cmp
sub
and
and
cmp
(bad)
call
sub
adc
or
push
add
add
add
add
add
push
dec
add
sub
add
sub
add
xor
add
add
add
add
add
add
push
pop
sub
add
xor
add
add
add
add
add
add
push
push
sub
add
xor
add
add
add
add
add
add
push
dec
add
dec
add
outs
add
add
xor
add
add
add
add
add
add
push
add
or
add
or
add
sbb
add
xor
add
add
add
add
add
add
push
dec
add
dec
add
dec
add
outs
jb
add
sub
add
xor
add
add
add
add
add
add
push
dec
add
dec
add
outs
imul
push
sub
add
xor
add
add
add
add
add
add
push
dec
add
dec
add
outs
inc
add
push
sub
add
xor
add
add
add
add
add
add
push
dec
add
outs
ins
add
push
sub
add
xor
add
add
add
add
add
add
push
dec
add
dec
add
dec
add
outs
add
push
sub
add
xor
add
add
add
add
add
add
push
dec
add
outs
jae
add
sub
add
xor
add
add
add
add
add
add
push
dec
add
dec
add
outs
xchg
add
sub
add
xor
add
add
add
add
add
add
push
dec
add
dec
add
outs
xchg
add
sub
add
xor
sbb
add
add
add
sub
es
dec
add
dec
add
dec
add
dec
add
outs
jne
add
sub
add
xor
add
add
add
add
add
add
push
dec
add
dec
add
dec
add
outs
ins
add
push
sub
add
xor
sbb
add
add
add
sub
es
add
or
add
or
add
or
add
or
add
inc
add
push
sub
adc
or
add
add
add
add
push
dec
add
dec
add
dec
add
dec
add
dec
add
outs
jbe
add
sub
add
xor
add
add
add
add
add
add
push
dec
add
dec
add
outs
inc
add
push
sub
add
xor
add
add
add
add
add
add
push
dec
add
dec
add
dec
add
outs
test
add
sub
add
xor
add
add
add
add
add
add
push
dec
add
outs
add
push
sub
add
xor
add
add
add
add
add
add
push
dec
add
outs
inc
add
push
sub
add
xor
add
add
add
add
add
add
push
add
or
add
push
add
push
sub
adc
or
push
add
add
add
add
add
push
dec
add
outs
test
add
sub
add
xor
add
add
add
adc
add
push
sub
add
sub
add
cmp
add
add
and
add
add
push
add
add
xchg
in
pop
push
cmp
add
add
add
add
add
push
add
add
jmp
add
cmp
(bad)
(bad)
jmp
mov
out
shr
and
add
(bad)
(bad)
inc
(bad)
(bad)
call
add
and
add
inc
add
add
add
mov
add
and
cmp
add
add
dec
popf
fiadd
cmp
pop
or
or
add
cmp
and
and
pushf
(bad)
(bad)
inc
add
add
add
or
add
push
cmp
add
es
(bad)
(bad)
inc
jnp
add
add
loopne
add
add
sbb
add
push
add
pop
add
add
cmp
add
add
add
add
cmp
(bad)
jmp
and
add
add
sub
add
add
add
add
loopne
add
add
sbb
add
push
add
pop
(bad)
(bad)
jmp
add
add
dec
add
dec
add
add
add
(bad)
(bad)
(bad)
call
(bad)
(bad)
dec
(bad)
(bad)
jmp
(bad)
call
(bad)
(bad)
jmp
(bad)
(bad)
dec
add
add
add
add
cmp
(bad)
(bad)
jmp
adc
or
fadd
add
or
add
sub
es
pop
sub
add
cmp
add
add
and
add
add
dec
add
add
adc
sub
add
pop
pop
or
or
add
push
cmp
add
es
and
out
out
and
xor
jns
add
add
add
aaa
add
push
and
add
add
or
add
and
fs
and
add
mov
cmp
add
add
add
add
loopne
add
add
sub
or
add
cmp
add
add
dec
add
add
and
rcr
and
cmp
add
add
jl
add
add
cmp
add
add
cmp
jmp
arpl
in
in
and
or
or
or
add
mov
(bad)
(bad)
jg
(bad)
jmp
add
add
(bad)
(bad)
call
add
call
(bad)
(bad)
inc
(bad)
(bad)
jmp
xchg
(bad)
(bad)
jmp
and
add
add
outs
add
push
cmp
add
es
and
icebp
js
pop
and
cmp
jnp
add
add
aas
(bad)
(bad)
jmp
push
add
add
add
add
and
jmp
pop
and
cmp
inc
jnp
add
add
loopne
add
add
sub
(bad)
(bad)
jmp
pop
add
add
push
add
dec
add
add
add
add
add
(bad)
(bad)
call
(bad)
(bad)
call
add
add
add
add
(bad)
(bad)
jmp
(bad)
(bad)
jle
(bad)
jmp
add
add
push
cmp
(bad)
(bad)
jmp
push
or
add
add
cmp
jl
add
add
aaa
add
push
and
sahf
(bad)
(bad)
inc
and
sbb
and
icebp
call
(bad)
(bad)
jmp
adc
or
mov
add
or
add
sub
es
and
add
add
mov
add
cmp
and
aas
fwait
scas
pop
and
jno
popa
cmp
add
add
add
add
sub
add
push
pop
or
add
add
push
cmp
add
es
and
or
pop
and
jno
popa
cmp
add
add
push
pop
or
add
add
cmp
add
add
and
les
mov
aad
add
push
add
add
add
loopne
add
add
add
add
push
pop
or
cmp
add
and
add
add
push
add
dec
add
add
add
add
add
(bad)
(bad)
mov
(bad)
(bad)
(bad)
jnp
add
imul
add
(bad)
call
add
add
add
add
sub
add
cmp
add
and
add
add
cmp
jl
add
add
sub
add
push
cmp
add
and
outs
add
push
cmp
and
stos
loope
cmp
jnp
add
add
loopne
add
add
add
add
push
sub
and
mov
and
cmp
add
add
or
dec
add
add
and
add
add
pop
(bad)
(bad)
jmp
ins
sub
and
dec
out
and
or
add
int3
(bad)
(bad)
(bad)
mov
(bad)
(bad)
(bad)
cld
(bad)
(bad)
call
(bad)
(bad)
call
add
and
add
add
cmp
(bad)
(bad)
jmp
add
add
sub
add
push
cmp
or
add
cmp
(bad)
(bad)
jmp
pop
and
push
add
add
leave
ins
add
cmp
sub
add
xor
add
add
add
add
adc
add
push
sub
es
and
add
add
push
add
add
jl
add
add
adc
cmp
add
and
add
add
push
add
dec
add
add
add
add
jbe
add
jbe
add
dec
add
add
add
add
add
mov
add
add
add
add
cmp
(bad)
(bad)
inc
pop
adc
lea
add
add
add
add
sub
add
cmp
add
add
and
add
add
cmp
add
jae
add
push
jge
add
add
and
and
add
add
mov
(bad)
inc
pop
adc
lea
add
add
add
add
pop
add
add
cmp
(bad)
jmp
add
jno
add
and
add
add
popa
(bad)
(bad)
inc
jl
add
add
adc
and
add
add
cmp
(bad)
jmp
sub
xor
add
add
add
add
add
add
push
pop
sub
add
xor
add
add
add
add
add
add
push
push
sub
add
xor
add
add
add
add
add
add
push
dec
add
sub
add
sub
add
xor
rol
add
add
adc
add
push
and
add
add
xchg
add
add
and
and
out
outs
popa
cmp
add
push
loopne
or
add
jge
add
add
or
outs
add
add
or
xor
add
and
or
xor
loope
pop
popa
cmp
add
add
add
and
add
or
add
cmp
add
add
xchg
ret
pop
cwde
popa
and
inc
push
add
add
jmp
add
add
add
add
add
add
add
add
add
add
add
add
add
add
(bad)
(bad)
inc
add
mov
add
add
cmp
add
add
arpl
inc
mov
cmp
add
add
mov
mov
cmp
pop
add
pop
pop
bound
pop
jge
add
add
add
mov
fcmovbe
inc
mov
inc
jnp
add
add
cmp
add
and
add
add
cmp
or
sub
out
pop
and
jmp
dec
(bad)
(bad)
call
add
add
add
jnp
add
add
pop
pop
pop
bound
and
add
add
cmp
add
and
or
jmp
and
and
ja
ins
popa
cmp
(bad)
(bad)
inc
add
add
add
or
add
cmp
add
add
das
lahf
adc
and
add
sbb
or
lods
add
push
inc
ss
(bad)
(bad)
cmp
add
and
add
add
push
add
dec
add
add
add
(bad)
jmp
(bad)
jmp
add
push
add
add
(bad)
jmp
(bad)
(bad)
inc
add
add
add
jge
(bad)
push
add
add
(bad)
(bad)
dec
(bad)
dec
(bad)
(bad)
inc
add
add
iret
(bad)
(bad)
jmp
and
add
add
jns
add
cmp
pop
pop
pop
or
sub
add
cmp
(bad)
(bad)
jmp
and
add
add
cmp
or
ja
pop
cdq
pop
and
cmp
popa
cmp
(bad)
(bad)
call
or
sldt
add
imul
inc
jnp
add
add
pop
(bad)
(bad)
jmp
or
add
push
cmp
(bad)
jmp
cmp
add
add
add
add
loopne
or
add
sub
add
and
add
add
xor
(bad)
dec
and
pusha
sbb
add
popa
cmp
std
(bad)
jmp
or
and
ret
and
cmp
std
(bad)
inc
jnp
add
add
inc
lahf
std
(bad)
jmp
or
add
cmp
(bad)
(bad)
dec
and
int3
addr16
and
pushf
stc
inc
popa
cmp
adc
or
cmp
add
adc
add
sub
es
sub
add
sub
add
cmp
add
add
and
add
add
mov
inc
mov
add
add
or
or
add
cmp
add
add
add
jnp
add
add
pop
pop
pop
bound
and
add
add
ins
add
add
lahf
adc
cmps
and
or
pop
inc
add
add
add
(bad)
(bad)
jmp
add
add
(bad)
(bad)
jmp
push
add
add
cmp
add
and
imul
add
add
std
test
cmp
and
add
loopne
or
add
sub
push
cmp
add
add
add
add
dec
add
dec
add
add
add
(bad)
dec
(bad)
push
(bad)
(bad)
call
add
sbb
add
sub
add
push
(bad)
(bad)
add
add
adc
and
jns
add
cmp
(bad)
(bad)
(bad)
cmp
pop
pop
or
add
add
cmp
and
add
pop
push
inc
jae
(bad)
jmp
add
add
cmp
and
and
push
push
popa
cmp
(bad)
(bad)
jmp
adc
or
and
add
adc
add
push
add
jnp
add
add
add
add
add
pop
pop
bound
add
add
add
pop
pop
pop
arpl
add
add
xor
pop
add
add
add
sub
es
add
add
add
add
sub
push
loopne
or
add
add
jge
add
sub
adc
or
and
add
add
add
sub
es
add
add
add
add
sub
push
loopne
or
add
add
add
jle
add
sub
add
adc
or
sldt
add
add
sub
es
sub
es
add
jp
add
sub
adc
or
push
add
add
add
add
add
push
pop
sub
add
xor
add
add
add
add
add
add
push
push
sub
add
xor
add
add
add
add
add
add
push
dec
add
sub
add
sub
add
xor
add
add
adc
add
push
add
add
add
lea
add
add
add
add
add
add
xor
add
add
add
add
adc
add
push
sub
add
sub
mov
add
and
add
add
mov
add
push
pop
pop
or
pop
add
add
add
push
cmp
cwde
add
add
or
add
add
cmp
add
adc
pop
fsub
or
pop
inc
add
add
add
add
scas
add
add
(bad)
(bad)
jmp
push
add
add
pop
add
add
in
jne
and
add
sti
loope
loope
cmp
and
pop
add
add
aaa
add
push
cmp
(bad)
jmp
and
and
add
cmp
add
push
and
add
add
ret
(bad)
(bad)
(bad)
cmp
add
add
dec
add
dec
add
add
add
(bad)
inc
(bad)
(bad)
inc
(bad)
jmp
(bad)
(bad)
(bad)
mov
add
add
add
add
cmp
(bad)
(bad)
jmp
or
or
cmp
(bad)
inc
and
les
and
pop
pop
popa
cmp
(bad)
(bad)
jmp
add
adc
or
or
add
or
add
sub
es
sub
add
sub
inc
add
add
and
add
add
jg
add
cmp
add
and
xor
nop
add
add
and
add
add
add
add
push
add
add
add
push
cmp
add
cmp
add
pop
or
add
add
and
add
add
das
add
add
mov
pop
bound
jnp
add
add
loopne
add
add
add
cmp
add
pusha
or
mov
add
add
dec
add
dec
add
add
add
(bad)
(bad)
call
add
add
(bad)
(bad)
(bad)
cmp
add
and
aad
(bad)
jmp
push
xor
or
(bad)
push
lods
xor
or
pop
inc
add
add
fdivr
(bad)
inc
add
add
(bad)
jmp
add
add
cmp
cmps
sub
fwait
and
add
lock
and
popa
cmp
shr
add
add
xor
add
add
add
add
push
and
add
add
cmp
add
add
and
js
lahf
cmp
jnp
add
add
pop
pop
push
bound
pop
loopne
add
add
add
cmp
add
or
scas
add
add
or
add
dec
add
dec
add
add
add
add
add
add
or
add
adc
add
or
add
and
add
imul
add
lahf
add
add
add
xchg
(bad)
(bad)
(bad)
jns
add
and
add
add
cmp
pop
(bad)
adc
cmp
add
add
and
add
add
cmp
add
add
and
and
sbb
sub
popf
add
add
and
loop
pop
and
aam
popa
cmp
sbb
sub
jg
add
cmp
and
add
push
cmp
(bad)
jmp
and
sbb
cmp
add
add
adc
cmp
add
push
and
add
add
add
add
or
add
cmp
(bad)
(bad)
jmp
or
add
add
xchg
and
fild
popa
cmp
add
add
and
add
add
(bad)
(bad)
jmp
or
add
cmp
(bad)
(bad)
jmp
pop
outs
cli
in
and
retf
and
inc
or
add
jle
(bad)
inc
add
(bad)
(bad)
(bad)
call
(bad)
(bad)
inc
(bad)
push
(bad)
(bad)
jmp
add
add
sub
lods
(bad)
(bad)
(bad)
cmp
or
cmp
jmp
or
add
cmp
or
add
add
cmp
dec
adc
(bad)
inc
pop
bound
jnp
add
add
loopne
add
add
add
cmp
add
pusha
or
or
add
cmp
(bad)
inc
pop
bound
pusha
or
push
add
add
dec
(bad)
(bad)
jmp
pop
outs
cli
in
and
add
ret
cmc
and
(bad)
inc
shr
add
adc
or
push
add
add
add
add
add
push
pop
sub
add
xor
add
add
add
add
add
add
push
push
sub
add
xor
add
add
add
add
adc
add
push
pop
sub
xchg
add
add
and
add
cmp
add
cmp
add
lea
add
add
add
add
add
sub
add
push
and
test
jl
(bad)
popa
cmp
add
add
add
stos
add
add
add
add
dec
add
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
int
(bad)
inc
jnp
add
add
cmp
sub
add
and
add
add
mov
(bad)
jmp
sti
ror
add
add
jge
add
add
or
add
sub
xchg
(bad)
(bad)
jmp
and
enter
pop
xor
push
pop
inc
add
add
(bad)
jmp
(bad)
(bad)
(bad)
fdivr
(bad)
call
(bad)
jmp
add
add
cmp
(bad)
inc
push
jge
add
add
pop
add
add
push
(bad)
(bad)
jmp
add
add
xor
add
add
add
add
sub
es
pop
sub
arpl
add
and
add
add
sub
add
push
and
dec
xor
mov
push
je
cmp
add
cwde
add
add
add
add
add
add
dec
add
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
dec
add
add
and
add
add
mov
add
cmp
(bad)
(bad)
jmp
and
jbe
enter
das
icebp
popa
and
add
add
add
add
add
(bad)
(bad)
call
push
add
add
mov
add
cmp
test
(bad)
jmp
add
sbb
cmp
add
add
mov
mov
es
and
cmp
pop
popa
cmp
push
jge
add
add
add
add
cmp
(bad)
(bad)
cmp
add
add
add
add
add
mov
add
cmp
(bad)
(bad)
(bad)
cmp
push
jge
add
add
or
add
sub
pop
(bad)
(bad)
jmp
add
add
push
and
add
add
push
(bad)
(bad)
inc
and
push
fimul
aam
popa
cmp
(bad)
jmp
add
add
xor
add
add
adc
add
push
pop
sub
inc
add
add
and
add
add
add
add
jnp
add
add
imul
add
add
add
add
add
imul
and
cmp
add
add
add
test
add
cmp
and
add
add
mov
add
cmp
add
add
sbb
add
add
cmp
add
add
dec
add
dec
add
add
add
(bad)
(bad)
jmp
(bad)
(bad)
(bad)
jl
(bad)
dec
add
add
add
add
cmp
(bad)
(bad)
jmp
add
add
xor
mov
add
adc
add
push
and
add
cmp
xchg
cmp
and
pusha
idiv
and
pop
add
add
add
add
add
add
(bad)
(bad)
jmp
add
add
add
add
add
add
or
add
push
cmp
add
and
or
add
and
enter
es
and
imul
(bad)
(bad)
jmp
pop
and
fcomp
and
cmp
push
jge
add
add
mov
add
and
add
dec
add
dec
add
add
add
add
dec
(bad)
(bad)
dec
dec
add
add
add
jl
add
pushf
add
add
add
add
add
add
add
add
cmp
(bad)
(bad)
(bad)
cmp
add
add
add
add
jnp
add
add
jae
(bad)
jmp
add
add
cmp
jnp
add
add
jnp
add
add
or
sub
sub
add
and
add
add
test
(bad)
inc
and
and
mov
popa
cmp
(bad)
(bad)
inc
cmp
add
cmp
add
add
and
add
add
mov
add
cmp
(bad)
jmp
and
(bad)
(bad)
inc
add
add
add
sub
add
or
add
cmp
(bad)
(bad)
jmp
xchg
lds
add
add
sbb
es
and
popa
cmp
jnp
add
add
jnp
add
add
jnp
add
add
sub
add
add
idiv
(bad)
jmp
adc
push
add
add
adc
add
sub
es
and
add
add
cmp
add
add
or
jle
into
xchg
pop
and
cmp
sub
add
add
rol
add
add
add
add
fwait
add
add
or
add
cmp
and
mov
gs
popa
cmp
jnp
add
add
and
add
or
pop
jge
add
add
loopne
jnp
add
add
and
xchg
pushf
cmp
add
add
and
add
add
mov
add
cmp
add
add
add
add
jnp
add
add
mov
add
and
add
add
inc
add
add
pop
aas
pusha
dec
and
add
xlat
xchg
jg
and
add
push
add
add
add
or
push
add
add
pop
add
add
mul
xor
in
dec
push
popa
and
inc
or
add
ret
(bad)
(bad)
push
add
inc
(bad)
(bad)
inc
add
add
(bad)
(bad)
call
add
daa
add
add
add
add
add
add
add
add
sub
retf
add
add
and
fs
pop
and
add
(bad)
retf
and
(bad)
dec
and
and
add
scas
popa
cmp
pop
pop
adc
and
mov
add
cmp
cmp
add
add
or
add
add
push
cmp
add
or
pop
or
mov
and
cmp
popa
cmp
(bad)
inc
add
add
add
add
add
sub
jecxz
(bad)
jmp
and
add
add
inc
add
add
jnp
add
add
pop
pop
pop
or
add
add
cmp
add
add
and
aaa
and
add
jo
push
sub
(bad)
inc
inc
fdivr
(bad)
(bad)
cmp
(bad)
(bad)
jmp
or
add
dec
add
dec
add
add
add
(bad)
dec
(bad)
(bad)
stc
(bad)
(bad)
inc
(bad)
(bad)
push
(bad)
(bad)
call
std
(bad)
call
(bad)
(bad)
call
(bad)
jmp
(bad)
call
(bad)
(bad)
call
add
add
or
add
sub
mov
(bad)
jmp
and
hlt
ss
xchg
(bad)
(bad)
jmp
add
adc
or
pop
add
add
add
adc
add
push
sub
mov
add
cmp
and
add
add
test
add
add
add
add
and
add
or
pop
jge
add
add
loopne
pushf
and
add
sub
pop
add
add
push
add
add
jnp
mov
and
add
xchg
dec
daa
clc
and
cmovl
pop
popa
cmp
add
add
test
add
and
add
add
sub
add
cmp
jnp
add
add
jnp
add
add
(bad)
(bad)
(bad)
(bad)
cmp
add
add
add
add
dec
add
dec
add
add
add
(bad)
push
(bad)
(bad)
inc
add
add
add
add
add
add
cmp
jmp
and
iret
(bad)
(bad)
jmp
rep
pop
push
and
call
pop
inc
add
add
fdivr
(bad)
dec
(bad)
(bad)
call
add
add
add
add
push
cmp
pop
and
mov
and
cmp
(bad)
(bad)
jmp
add
xor
add
add
add
add
adc
add
push
and
add
add
jns
add
add
add
add
pop
pop
pop
or
add
add
sub
pop
add
add
push
add
add
add
lods
add
add
sub
ins
add
add
and
add
sub
aaa
add
add
xor
add
and
cdq
and
xlat
jg
popa
and
add
add
ins
add
add
add
loopne
(bad)
(bad)
cmp
add
add
add
add
dec
add
dec
add
add
add
(bad)
inc
(bad)
(bad)
inc
add
add
add
add
add
add
or
add
and
iret
(bad)
(bad)
(bad)
cmp
add
add
add
or
push
add
add
mov
(bad)
inc
and
mov
pop
and
fiadd
(bad)
(bad)
inc
jnp
add
add
loopne
sub
xor
add
add
add
add
sub
es
sub
es
add
lea
add
sub
adc
or
push
add
add
add
add
add
push
pop
sub
add
xor
add
add
add
add
add
add
push
push
sub
add
xor
add
add
add
add
push
add
or
add
or
add
or
add
or
add
or
sub
add
or
add
xor
sbb
add
add
add
sub
es
dec
add
dec
add
dec
add
dec
add
outs
push
add
or
add
adc
or
push
add
add
add
add
add
push
dec
add
sub
add
sub
add
xor
add
add
add
add
sub
es
add
jge
add
add
adc
or
push
add
adc
add
push
sub
xchg
add
push
cmp
and
add
add
cmp
add
add
push
and
addr16
xchg
(bad)
bnd
popa
cmp
jnp
add
add
or
add
add
pop
add
add
add
add
dec
add
dec
add
add
add
add
add
add
add
add
add
add
mov
(bad)
(bad)
jmp
add
add
add
add
pop
add
add
int
(bad)
inc
jnp
add
add
inc
mov
xor
add
and
add
cmp
sbb
and
and
adc
mov
cmp
add
add
push
jge
add
add
add
mov
(bad)
jmp
inc
dec
and
jge
in
popa
and
pop
add
add
(bad)
(bad)
jmp
add
and
add
mov
(bad)
(bad)
dec
add
sldt
add
add
add
cmp
(bad)
(bad)
cmp
add
sub
and
push
mov
pop
and
cmp
and
add
pop
jge
add
add
push
add
add
pop
(bad)
(bad)
jmp
push
and
imul
and
movs
xor
(bad)
inc
and
add
pop
jge
add
add
or
add
cmp
(bad)
(bad)
jmp
pop
push
jno
cmp
(bad)
jmp
adc
or
pop
add
add
add
sub
es
add
jnp
add
add
inc
pop
add
add
or
add
add
sbb
add
add
xor
add
add
add
add
sub
es
add
jnp
add
add
inc
pop
add
add
or
add
add
push
jge
add
add
add
xor
add
add
add
add
sub
es
add
jnp
add
add
inc
pop
add
add
or
add
add
pop
or
add
add
adc
or
push
add
add
add
sub
es
add
add
add
inc
xor
add
add
add
add
add
add
push
pop
sub
add
xor
add
add
add
add
add
add
push
push
sub
add
xor
add
add
add
add
sub
es
sub
es
add
popf
add
push
sub
adc
or
add
add
adc
add
push
jle
add
add
push
cmp
add
add
dec
scas
push
xlat
and
and
pop
inc
or
add
mov
add
lds
add
fwait
add
add
add
and
add
add
add
add
(bad)
(bad)
dec
add
add
rol
add
adc
and
popa
pop
test
and
jmp
xlat
popa
cmp
adc
mov
call
add
add
add
xchg
add
add
add
add
add
add
add
add
add
xchg
add
xchg
add
iret
add
add
add
add
sub
ret
mov
call
adc
and
aas
or
popa
cmp
(bad)
call
xchg
add
push
es
cli
imul
cmp
(bad)
(bad)
call
pop
and
push
outs
pop
and
cs
cmp
(bad)
(bad)
inc
pop
push
popa
inc
add
add
sub
add
and
jle
fnstcw
or
or
adc
mov
(bad)
(bad)
(bad)
call
pop
and
and
mov
jmp
(bad)
call
or
cmp
(bad)
call
add
inc
mov
add
sbb
sub
pop
or
add
inc
pop
pop
or
cmp
add
or
ss
pop
or
or
add
sbb
add
call
cmp
(bad)
(bad)
inc
jle
add
add
sub
add
add
ins
xchg
pushf
sub
push
and
add
xchg
pop
pop
pop
adc
inc
add
adc
or
mov
add
adc
add
push
jle
add
add
add
add
push
and
jns
mul
popa
and
pop
inc
or
add
add
add
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
add
outs
add
add
int
add
push
or
adc
aad
or
cmp
pop
and
pop
aaa
sahf
pop
and
cmp
or
add
pop
and
cmp
rcr
je
adc
mov
(bad)
call
add
add
add
inc
nop
sti
in
cmp
(bad)
inc
popa
push
pop
push
popa
inc
add
add
outs
add
add
mov
cmp
cmp
(bad)
call
add
or
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
(bad)
(bad)
jmp
sub
cmp
(bad)
(bad)
call
pop
and
dec
dec
retf
pop
and
cmp
(bad)
call
cwde
add
push
and
jbe
mov
cmc
(bad)
(bad)
call
add
add
cmp
(bad)
call
push
adc
cmp
inc
mov
add
sbb
fwait
add
push
or
adc
outs
(bad)
(bad)
inc
pop
pop
or
add
add
and
pop
cmp
add
add
push
and
add
add
add
inc
(bad)
(bad)
call
or
repnz
(bad)
call
add
add
xchg
pop
adc
sub
(bad)
inc
jne
add
add
sbb
add
sbb
(bad)
inc
adc
or
mov
add
adc
add
sub
es
jle
add
add
push
and
jae
push
and
adc
pop
or
or
add
add
add
add
add
add
add
add
add
add
rol
add
add
add
add
add
add
cmp
add
add
popa
pop
dec
pop
push
popa
inc
add
add
jmp
add
and
mov
cdq
add
push
adc
and
add
xchg
and
adc
push
call
pop
and
and
add
add
add
cmp
(bad)
call
or
push
pop
adc
mov
(bad)
call
or
call
or
inc
popa
cmp
(bad)
call
add
add
add
pop
add
add
(bad)
inc
add
pop
add
add
add
mov
(bad)
(bad)
jmp
(bad)
(bad)
dec
(bad)
jmp
pop
jmp
(bad)
(bad)
(bad)
jle
add
add
pop
adc
and
push
mov
pop
and
(bad)
js
popa
cmp
(bad)
(bad)
call
or
or
or
pop
and
cmp
(bad)
(bad)
call
or
cwde
popf
aaa
inc
pop
and
mov
mov
cmp
(bad)
(bad)
call
cmp
(bad)
call
sbb
add
inc
mov
add
sbb
pushf
add
push
or
add
inc
pop
pop
or
mov
add
or
and
add
dec
or
or
pop
cmp
add
adc
pop
push
sub
or
repnz
(bad)
inc
jne
add
sbb
pop
or
add
inc
adc
or
or
add
add
add
sub
es
add
sub
adc
or
or
add
add
add
sub
es
add
mov
add
xor
add
add
add
add
sub
es
add
mov
add
xor
add
add
add
add
add
add
push
dec
add
sub
add
sub
add
xor
add
add
add
add
add
add
push
dec
add
dec
add
outs
and
add
sub
add
xor
add
add
add
add
add
add
push
pop
sub
add
xor
add
add
add
add
add
add
push
push
sub
add
xor
add
add
add
add
add
add
push
dec
add
outs
and
add
sub
add
xor
add
add
add
add
add
add
push
dec
add
outs
and
add
sub
add
xor
add
add
add
add
sub
es
sub
es
add
stos
add
push
sub
adc
push
add
add
adc
add
push
jle
add
add
add
add
push
cmp
add
add
jb
out
and
and
pop
inc
or
add
xor
add
rol
add
test
(bad)
(bad)
(bad)
mov
add
add
add
add
add
retf
add
add
pop
push
jle
add
add
scas
add
add
add
add
adc
add
add
cmps
add
add
scas
les
(bad)
call
movs
add
push
sbb
add
jb
out
cmp
adc
pop
and
(bad)
neg
push
or
shl
(bad)
(bad)
call
add
or
add
or
add
pop
add
jb
(bad)
jmp
add
or
add
mov
add
add
add
add
add
jnp
add
and
dec
(bad)
cmp
(bad)
(bad)
call
or
rcl
and
(bad)
call
pop
and
iret
pop
and
out
popa
cmp
(bad)
(bad)
call
add
add
bound
(bad)
call
push
pop
xor
(bad)
(bad)
call
pop
or
add
jne
(bad)
inc
mov
add
sbb
mov
add
sbb
cmps
add
push
or
push
and
add
xchg
and
add
dec
(bad)
(bad)
inc
pop
pop
or
or
sbb
add
cmp
(bad)
dec
sbb
sldt
add
push
and
adc
and
(bad)
call
cmp
(bad)
(bad)
inc
je
add
add
sbb
add
push
(bad)
(bad)
inc
adc
or
scas
add
add
add
adc
add
push
jle
add
add
push
and
mov
fidiv
call
pop
inc
or
add
add
add
add
add
add
add
add
add
add
xor
add
add
add
add
add
push
add
add
fiadd
add
jle
add
add
pop
adc
and
arpl
sbb
popa
cmp
and
in
stos
pop
and
pusha
cmp
cmp
or
adc
test
call
and
fcmovnbe
pop
and
cmp
call
movs
add
push
and
data16
add
popa
pop
and
popa
inc
add
add
imul
add
(bad)
or
(bad)
(bad)
call
add
add
add
add
add
add
pop
add
add
(bad)
(bad)
call
(bad)
(bad)
jmp
(bad)
(bad)
inc
add
xchg
add
add
sub
adc
call
or
shr
in
adc
(bad)
(bad)
call
adc
mov
loopne
(bad)
call
push
pop
pop
xchg
sbb
call
or
adc
inc
mov
add
sbb
sub
adc
and
add
add
(bad)
(bad)
inc
pop
pop
or
or
or
pop
or
cmp
adc
and
add
add
add
add
call
push
pop
pop
xchg
sbb
cmp
(bad)
(bad)
call
adc
inc
je
add
sbb
push
adc
inc
adc
push
add
add
sub
es
jle
add
add
add
repnz
mov
and
repz
popa
and
pop
inc
or
add
loope
add
imul
add
xor
add
into
add
add
add
add
add
add
(bad)
(bad)
(bad)
cmp
add
add
add
add
add
inc
and
mov
popa
cmp
or
cmps
clc
mov
and
ins
pop
adc
xchg
(bad)
(bad)
call
add
add
add
add
pop
das
mov
inc
popa
pop
pop
pop
push
popa
inc
add
add
add
add
pop
ficom
(bad)
cmp
(bad)
call
or
add
movs
add
add
and
movs
push
mov
call
or
js
retf
pop
and
cmp
(bad)
(bad)
dec
inc
or
add
inc
add
add
add
add
add
add
(bad)
(bad)
dec
add
add
add
mov
(bad)
inc
fadd
fnstcw
stc
(bad)
(bad)
call
or
pop
sub
sbb
xor
(bad)
call
add
add
call
add
add
or
inc
mov
add
sbb
test
pop
jle
add
add
jg
push
add
add
jg
add
das
pop
pushf
pop
or
and
pop
or
inc
sbb
or
add
pop
or
call
cmp
(bad)
(bad)
jmp
sbb
pop
adc
inc
add
add
add
add
add
add
add
add
add
add
add
cmps
add
push
sub
(bad)
(bad)
call
xor
add
add
add
add
sub
es
add
sub
adc
or
or
add
add
add
sub
es
add
sub
adc
or
or
add
add
add
sub
es
add
scas
add
push
sub
adc
or
push
add
add
add
add
add
push
dec
add
sub
add
sub
add
xor
add
add
add
add
add
add
push
dec
add
dec
add
outs
and
add
sub
add
xor
add
add
add
add
add
add
push
pop
sub
add
xor
add
add
add
add
add
add
push
push
sub
add
xor
add
add
add
add
add
add
push
dec
add
dec
add
outs
and
add
sub
add
xor
add
add
add
add
add
add
push
dec
add
sub
add
adc
or
sldt
add
add
sub
es
sub
es
add
mov
add
sub
adc
push
add
add
add
add
push
jle
add
add
add
loop
dec
loop
xchg
popa
and
pop
inc
or
add
pop
add
add
add
add
add
add
add
add
add
pop
add
add
add
add
add
add
or
add
jle
add
add
push
adc
and
mov
cmp
aas
lea
movs
(bad)
(bad)
inc
jle
add
add
nop
add
add
add
add
nop
add
add
add
add
pop
push
popa
inc
add
add
ret
add
cmp
cmp
(bad)
call
or
lods
loop
xor
lock
cmps
adc
cmp
(bad)
call
or
rcr
and
pop
and
cmp
(bad)
call
add
add
add
add
xchg
icebp
pusha
icebp
cmp
(bad)
(bad)
call
add
or
add
je
add
pop
(bad)
(bad)
push
add
add
push
add
add
add
add
add
add
add
add
and
mov
call
or
shr
in
out
(bad)
call
add
add
and
dec
not
popa
mov
(bad)
call
adc
or
fs
and
pop
and
push
(bad)
(bad)
call
or
jne
(bad)
call
add
jns
(bad)
inc
mov
add
sbb
sub
pop
pop
or
and
add
or
mov
add
or
mov
add
pop
or
pop
pop
cmp
sbb
(bad)
(bad)
call
cmp
(bad)
(bad)
call
push
and
adc
pop
ds
pop
adc
sub
(bad)
jmp
pop
adc
adc
inc
add
add
add
add
add
add
add
add
add
add
add
mov
add
sub
xchg
(bad)
inc
add
adc
or
ins
add
add
add
push
jle
add
add
add
add
push
and
and
and
inc
pop
add
add
add
add
add
add
add
iret
(bad)
(bad)
call
add
add
xchg
add
add
push
pop
imul
sbb
call
or
add
add
add
aas
(bad)
sbb
call
add
or
add
imul
add
add
mov
add
add
add
mov
add
add
add
mov
add
sar
ins
(bad)
(bad)
inc
push
popa
inc
add
add
and
add
and
sub
(bad)
cmp
(bad)
call
adc
or
xchg
je
retf
(bad)
out
into
imul
adc
and
cmp
(bad)
call
push
and
pop
dec
pop
adc
jnp
(bad)
inc
mov
add
sbb
mov
add
sbb
mov
add
push
pop
pop
or
add
add
or
cdq
add
add
stos
add
add
sbb
pop
aas
or
add
sbb
add
inc
(bad)
(bad)
call
add
add
(bad)
(bad)
jmp
sbb
or
or
add
add
add
add
add
add
add
add
add
add
add
add
mov
add
sub
ds
(bad)
call
xor
add
add
add
add
sub
es
add
sub
adc
or
or
add
add
add
sub
es
add
sub
adc
or
push
add
add
add
add
add
push
dec
add
sub
add
sub
add
xor
add
add
add
add
add
add
push
dec
add
dec
add
sub
add
or
add
adc
or
push
add
add
add
add
add
push
pop
sub
add
xor
add
add
add
add
add
add
push
push
sub
add
xor
add
add
add
add
add
add
push
dec
add
dec
add
outs
daa
add
or
add
adc
or
sldt
add
add
sub
es
sub
es
add
ret
push
sub
adc
or
mov
add
adc
add
push
jle
add
add
push
and
dec
mov
popaw
and
pop
inc
or
add
test
add
add
add
add
add
add
add
aaa
add
add
add
add
add
add
jecxz
add
adc
and
add
add
adc
and
xor
leave
call
adc
and
aad
retf
call
cmp
inc
or
add
and
add
and
add
mov
add
jb
add
xchg
add
add
add
add
add
mov
add
mov
add
bound
add
sti
add
add
cmp
and
dec
(bad)
(bad)
(bad)
jle
add
add
pop
adc
and
push
pop
and
and
popa
cmp
add
pop
pop
pop
push
popa
inc
add
add
dec
add
add
xchg
lea
and
sbb
(bad)
call
adc
xchg
mov
and
fwait
pop
popa
cmp
(bad)
call
shr
(bad)
call
mov
and
sub
out
(bad)
call
or
xchg
cdq
jg
cmp
(bad)
(bad)
call
push
pop
adc
call
push
adc
inc
mov
add
sbb
mov
adc
and
adc
pop
dec
xchg
pop
adc
inc
pop
pop
or
dec
or
add
push
add
add
add
sbb
pop
aas
sldt
add
pop
and
adc
call
push
and
add
add
xchg
pop
cmp
(bad)
(bad)
inc
jne
add
add
push
adc
inc
add
xor
add
add
adc
add
push
jle
add
add
add
add
push
cmp
add
and
aas
cli
sbb
pop
pop
or
or
add
rol
add
add
jae
add
mov
add
add
add
add
add
add
add
(bad)
(bad)
(bad)
cmp
add
pop
and
xor
jge
mov
cmp
mov
and
(bad)
(bad)
call
or
add
mov
adc
cmp
(bad)
(bad)
inc
sub
add
add
imul
add
and
mov
imul
call
pop
and
inc
cmps
out
pop
and
cmp
(bad)
call
add
or
add
test
add
jo
add
test
add
push
add
add
add
add
(bad)
inc
(bad)
(bad)
dec
add
add
add
in
sbb
xor
pop
(bad)
(bad)
call
adc
mov
scas
cmp
or
(bad)
call
push
and
add
add
add
loope
(bad)
call
pop
or
add
xchg
(bad)
(bad)
inc
mov
add
sbb
add
mov
pop
or
add
jge
(bad)
inc
pop
pop
or
into
add
add
and
pop
cmp
add
add
adc
pop
(bad)
(bad)
call
call
push
and
add
add
add
add
inc
(bad)
(bad)
inc
jne
add
add
pop
or
add
xor
(bad)
call
xor
mov
add
sbb
add
sub
es
jle
add
add
push
cmp
add
and
xor
and
pop
inc
or
add
sbb
add
fadd
add
add
add
add
add
add
add
add
add
(bad)
(bad)
jmp
add
add
xlat
add
add
pop
and
(bad)
loope
pop
and
push
cwde
popa
cmp
or
or
add
repnz
push
and
add
add
add
retf
cmp
pop
and
xchg
dec
pop
and
cmp
(bad)
call
mov
sbb
add
in
(bad)
(bad)
(bad)
call
add
add
add
pop
add
add
add
outs
add
add
add
add
(bad)
push
add
add
add
add
add
mov
(bad)
(bad)
mov
lahf
scas
mov
inc
popa
pop
ds
push
popa
inc
add
add
sbb
add
add
push
ror
call
pop
and
sbb
jbe
aad
popa
cmp
(bad)
(bad)
call
cmp
(bad)
call
cmp
(bad)
jmp
or
add
add
add
or
adc
inc
mov
add
sbb
rol
push
or
adc
inc
mov
add
sbb
rol
push
or
adc
inc
pop
pop
or
jle
add
or
add
adc
or
or
cmp
sbb
(bad)
(bad)
call
or
repnz
(bad)
call
or
add
inc
sub
or
add
inc
adc
or
or
add
add
add
sub
es
add
ret
add
push
sub
adc
or
or
add
adc
add
push
add
add
les
add
sub
add
adc
or
or
add
add
add
sub
es
add
mov
adc
or
or
add
add
add
sub
es
add
enter
sub
adc
or
push
add
add
add
add
add
push
dec
add
sub
add
sub
add
xor
add
add
add
add
add
add
push
dec
add
outs
sub
add
sub
add
xor
add
add
add
add
add
add
push
dec
add
dec
add
dec
add
outs
sub
add
sub
add
xor
add
add
add
add
add
add
push
pop
sub
add
xor
add
add
add
add
add
add
push
push
sub
add
xor
add
add
add
add
add
add
push
dec
add
outs
sbb
add
sub
add
xor
add
add
add
add
add
add
push
dec
add
outs
sub
add
sub
add
xor
add
add
add
add
sub
es
sub
es
add
aam
add
sub
adc
or
aad
add
sbb
add
sub
es
and
je
add
and
mov
sub
sub
add
jle
add
add
push
and
add
add
pop
add
add
adc
add
pop
or
pop
cmp
and
add
add
inc
add
add
jbe
and
add
add
cmp
add
add
jle
add
add
add
add
and
add
adc
add
xchg
pop
adc
xchg
add
add
cmp
(bad)
(bad)
call
add
add
clc
add
add
add
add
and
add
add
call
or
add
add
add
add
add
add
add
add
add
add
add
add
or
add
cmp
add
add
or
inc
xchg
push
pop
dec
(bad)
popa
cmp
add
adc
and
in
js
and
mov
popa
cmp
add
adc
pop
adc
add
add
adc
add
add
cmp
loop
adc
cmp
add
adc
imul
add
add
add
add
add
add
repnz
(bad)
(bad)
mov
(bad)
(bad)
call
add
add
add
add
add
add
(bad)
add
push
sub
add
push
cmp
add
and
add
add
xor
add
push
pop
pop
or
or
add
sub
add
push
cmp
add
add
cmp
sub
add
push
cmp
(bad)
(bad)
jmp
or
push
or
dec
add
add
add
(bad)
(bad)
jmp
(bad)
(bad)
dec
add
dec
add
add
(bad)
(bad)
jmp
add
add
add
add
add
movs
add
add
(bad)
(bad)
dec
add
add
(bad)
push
(bad)
(bad)
fild
add
xchg
(bad)
push
(bad)
jmp
(bad)
(bad)
push
add
add
adc
add
cmp
sti
(bad)
(bad)
call
adc
popf
loopne
and
dec
add
add
or
cmps
mov
ds
iret
xchg
popa
cmp
add
add
add
pop
and
add
add
retf
jmp
add
add
cmp
(bad)
jmp
fcom
add
add
or
push
add
add
inc
(bad)
(bad)
jmp
mov
or
popa
and
pop
inc
or
add
xchg
(bad)
(bad)
call
(bad)
call
(bad)
(bad)
jmp
(bad)
(bad)
inc
(bad)
(bad)
push
(bad)
jmp
or
add
cmp
(bad)
(bad)
call
retf
push
and
add
cmp
(bad)
(bad)
call
or
add
or
add
cmp
(bad)
(bad)
(bad)
cmp
(bad)
jmp
sbb
or
adc
add
sub
add
push
cmp
(bad)
(bad)
jmp
adc
pop
adc
dec
std
(bad)
jmp
and
mov
(bad)
jmp
cmp
add
adc
adc
add
add
sbb
add
sub
es
jle
add
add
push
and
xchg
fldenv
xchg
loop
call
pop
inc
or
add
add
add
add
add
add
add
add
add
jns
add
mov
add
ret
add
add
add
sbb
add
adc
pop
push
xchg
and
add
add
add
out
add
pop
and
call
call
add
add
add
data16
add
add
jmp
add
xlat
add
add
add
add
add
add
add
dec
add
add
add
cmc
add
add
add
mov
(bad)
(bad)
call
or
and
idiv
mov
(bad)
(bad)
call
push
and
pop
ds
adc
mov
call
or
or
(bad)
(bad)
call
adc
jmp
daa
pop
and
sub
or
(bad)
call
retf
add
push
es
push
xchg
repz
(bad)
(bad)
inc
add
pop
pop
pop
push
popa
inc
add
add
dec
add
add
jns
jae
cmp
(bad)
(bad)
call
or
jp
mov
adc
(bad)
(bad)
call
or
ds
mov
pop
and
mov
mov
sub
pop
adc
and
and
dec
mov
cmp
pop
pop
imul
(bad)
call
sbb
add
inc
mov
add
sbb
rol
add
or
adc
inc
pop
pop
or
sub
and
add
or
inc
or
sbb
add
add
pop
jle
add
add
pop
xchg
jle
add
add
inc
xchg
pop
pop
es
pushf
pop
pop
cmp
adc
and
adc
call
or
repnz
(bad)
call
adc
inc
je
add
add
pop
adc
call
xor
adc
add
sbb
add
sub
es
push
sub
add
push
cmp
add
and
add
add
pop
add
add
push
and
and
adc
add
add
or
dec
sub
and
xor
cmp
add
add
int3
add
push
cmp
and
add
add
fadd
add
cmp
add
add
pop
pop
or
add
add
cmp
add
add
add
pop
jo
loop
and
pop
inc
or
add
ret
call
add
add
add
add
add
add
add
add
add
(bad)
(bad)
jmp
add
add
and
add
push
cmp
cmp
add
pop
or
add
add
(bad)
add
push
cmp
add
and
add
or
or
add
sub
add
push
cmp
add
and
and
add
add
inc
add
add
add
jb
(bad)
inc
add
pop
pop
push
popa
inc
add
add
inc
add
and
add
add
sbb
add
adc
and
fisub
pop
and
and
cmp
call
or
push
add
add
cld
add
add
sbb
outs
into
cmp
(bad)
(bad)
call
add
add
add
xor
add
mov
(bad)
call
add
leave
(bad)
(bad)
inc
(bad)
(bad)
jmp
add
add
add
in
(bad)
push
adc
add
cmp
push
add
add
push
and
add
add
(bad)
add
push
cmp
and
int3
(bad)
(bad)
call
or
es
(bad)
in
and
push
sbb
(bad)
(bad)
jle
add
add
pop
and
ins
add
add
inc
or
sbb
cmp
and
add
add
push
add
add
pop
(bad)
(bad)
jmp
rol
add
or
push
add
add
add
add
ja
push
aad
jo
(bad)
call
inc
outs
into
cmp
(bad)
call
pop
and
and
add
add
loope
(bad)
call
cmp
add
add
or
add
dec
or
dec
add
add
add
(bad)
(bad)
call
(bad)
inc
std
(bad)
dec
(bad)
(bad)
jmp
add
test
(bad)
call
(bad)
push
(bad)
(bad)
(bad)
cmp
(bad)
(bad)
push
(bad)
(bad)
call
add
add
add
or
(bad)
(bad)
(bad)
(bad)
dec
add
add
(bad)
jmp
add
add
sldt
add
cdq
(bad)
(bad)
call
adc
call
cmp
(bad)
(bad)
call
pop
and
adc
add
ja
(bad)
(bad)
cmp
je
add
add
adc
and
pop
push
pop
adc
add
push
(bad)
(bad)
call
or
add
add
cmp
(bad)
jmp
adc
pop
aaa
xchg
and
adc
add
sub
ss
(bad)
inc
add
adc
or
bound
add
sbb
add
sub
es
jle
add
add
add
fisub
xchg
sub
or
pop
inc
or
add
retf
(bad)
(bad)
(bad)
cmp
add
call
add
add
add
add
add
xchg
add
add
adc
jnp
jae
cmp
add
push
popa
inc
add
add
ja
add
and
mov
(bad)
(bad)
call
or
adc
xchg
and
call
or
xchg
push
rcr
pop
jo
popa
cmp
adc
or
cmp
call
popa
cmp
(bad)
call
add
or
add
popf
(bad)
(bad)
call
add
add
add
add
add
add
add
add
add
add
add
add
add
pushf
das
sbb
call
cmp
(bad)
call
add
dec
pop
adc
mov
(bad)
inc
mov
add
sbb
mov
add
sbb
rol
add
push
pop
pop
or
xchg
add
lock
add
add
add
sbb
pop
aas
or
add
sbb
(bad)
(bad)
call
add
lahf
add
add
jmp
push
adc
adc
inc
add
add
add
add
add
add
add
add
add
add
add
int
add
sub
lock
(bad)
inc
add
xor
add
add
add
push
jle
add
add
add
inc
and
jmp
pop
inc
or
add
cmps
add
add
add
dec
add
add
add
add
add
add
add
add
(bad)
(bad)
(bad)
cmp
adc
or
xchg
(bad)
call
and
mov
(bad)
call
add
pop
adc
mov
xor
mov
push
add
add
push
sbb
add
or
outs
xchg
mov
popa
cmp
add
pop
je
push
popa
inc
add
add
dec
add
add
push
jmp
(bad)
(bad)
call
or
lods
sbb
sub
call
add
or
add
sub
add
xor
add
pop
add
add
(bad)
(bad)
jmp
add
add
add
add
add
add
add
xchg
(bad)
call
push
and
cmp
(bad)
call
adc
mov
(bad)
inc
mov
add
sbb
sub
add
push
push
pop
pop
or
xor
pop
pop
or
sbb
sbb
pop
aas
or
add
sbb
add
mov
(bad)
call
push
and
add
add
add
out
(bad)
jmp
pop
adc
adc
inc
add
add
add
add
add
add
add
into
add
push
sub
daa
(bad)
(bad)
call
xor
add
add
add
add
sub
es
add
xlat
add
push
sub
adc
or
or
add
add
add
sub
es
add
fadd
add
sub
adc
or
or
add
add
add
sub
es
sub
add
push
sub
add
xor
add
add
add
add
sub
es
add
sub
add
push
sub
xor
add
add
add
add
sub
es
add
sub
add
push
sub
xor
add
add
add
add
add
add
push
dec
add
sub
add
sub
add
xor
add
add
add
add
add
add
push
pop
sub
add
xor
add
add
add
add
add
add
push
push
sub
add
xor
add
add
add
add
add
add
push
add
or
add
sub
add
sub
adc
or
push
add
add
add
add
add
push
dec
add
outs
sub
add
sub
add
xor
add
add
add
add
add
add
push
add
sub
add
xor
add
add
add
add
add
add
push
dec
add
dec
add
sub
add
or
add
adc
or
adc
add
add
add
sub
es
dec
add
dec
add
outs
das
add
or
add
adc
or
sldt
add
add
sub
es
sub
es
add
fld
add
sub
adc
or
push
add
add
add
add
add
push
dec
add
sub
add
sub
add
xor
add
add
add
add
sub
es
sub
es
add
jmp
add
xor
lds
add
sbb
add
push
jle
add
add
push
and
jnp
es
popa
and
pop
inc
or
add
sub
add
jecxz
add
inc
add
add
add
add
(bad)
(bad)
call
add
add
add
add
add
add
fiadd
add
rcr
add
push
es
adc
pop
cmp
or
popa
pop
xor
pop
and
or
cwde
(bad)
(bad)
inc
add
pop
jge
push
popa
inc
add
add
cmps
add
add
ret
call
call
or
aad
ins
push
pop
and
mov
les
push
(bad)
call
add
add
add
int3
add
add
add
add
add
aam
add
jne
(bad)
call
add
add
add
add
add
add
inc
xchg
jg
cmp
(bad)
(bad)
call
or
adc
adc
sbb
(bad)
(bad)
jle
add
add
pop
adc
and
and
cmp
(bad)
(bad)
call
or
and
iret
mov
and
sbb
(bad)
(bad)
call
adc
sbb
loopne
(bad)
call
push
and
add
xchg
and
add
add
loope
(bad)
inc
or
pop
and
add
add
add
add
dec
(bad)
(bad)
inc
mov
add
sbb
in
add
or
adc
inc
pop
pop
or
pop
or
add
push
or
or
cmp
adc
and
add
xchg
and
adc
call
repz
(bad)
call
adc
inc
sub
push
pop
js
and
add
add
add
inc
add
adc
or
xor
add
push
add
adc
add
push
and
add
add
xchg
add
cmp
add
shl
add
push
and
add
add
jno
add
and
push
cmp
mov
and
pop
inc
or
add
test
add
lock
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
add
sub
add
push
cmp
add
es
pop
or
add
push
add
add
add
add
push
pop
push
(bad)
call
adc
add
and
add
add
jmp
add
sbb
add
add
(bad)
add
add
adc
add
jmp
add
es
add
(bad)
(bad)
inc
add
inc
pop
push
popa
inc
add
add
xchg
add
and
add
add
jmp
add
cmp
and
add
add
or
pop
pop
cmp
and
jg
add
adc
and
add
and
cmp
(bad)
(bad)
call
or
add
add
cmp
add
sbb
add
add
push
add
add
(bad)
retf
mov
(bad)
(bad)
call
or
add
or
iret
(bad)
(bad)
call
adc
add
add
add
test
add
push
pop
pop
or
sldt
add
cmp
add
add
cmp
add
pop
je
add
add
adc
and
add
add
add
add
adc
jmp
add
cmp
add
add
out
add
jle
add
add
push
and
add
add
aad
add
adc
and
and
out
push
(bad)
(bad)
jle
add
add
pop
and
add
add
cmp
and
scas
ror
cmp
(bad)
(bad)
call
add
add
add
add
(bad)
jmp
(bad)
(bad)
in
std
(bad)
call
(bad)
push
(bad)
call
(bad)
inc
(bad)
(bad)
call
(bad)
inc
(bad)
(bad)
call
add
and
add
add
add
add
cmp
add
out
std
(bad)
call
or
(bad)
mov
and
popf
xchg
(bad)
(bad)
call
or
adc
idiv
enter
adc
and
and
pop
popa
cmp
push
and
add
add
call
cmp
or
add
dec
or
dec
add
add
add
(bad)
(bad)
(bad)
aas
(bad)
(bad)
push
(bad)
(bad)
call
(bad)
push
(bad)
jmp
add
add
std
(bad)
dec
(bad)
(bad)
dec
(bad)
(bad)
jmp
std
(bad)
(bad)
mov
std
(bad)
call
std
(bad)
dec
(bad)
(bad)
call
std
(bad)
dec
add
add
(bad)
(bad)
cmp
add
and
add
cmp
cmp
push
sub
add
push
cmp
and
add
add
cmp
(bad)
cmp
(bad)
(bad)
jmp
in
add
or
or
add
pop
cmp
(bad)
jmp
cmp
xor
add
add
adc
add
push
jle
add
add
push
and
cwde
pop
mov
or
or
or
add
add
add
add
add
add
add
add
add
add
add
(bad)
(bad)
inc
add
add
ret
add
push
and
adc
imul
shl
add
push
and
(bad)
(bad)
call
adc
data16
pop
and
cmp
inc
or
add
or
add
and
add
add
add
cmps
(bad)
(bad)
call
add
add
add
add
add
test
add
test
add
int3
add
add
or
push
dec
(bad)
(bad)
inc
popa
pop
aas
pop
push
popa
inc
add
add
cmp
add
and
xor
(bad)
call
or
push
pop
and
add
imul
jle
add
add
pop
adc
and
stc
fcomp
xchg
jae
daa
popa
cmp
(bad)
call
push
and
add
ss
(bad)
call
pop
or
add
inc
mov
add
sbb
out
add
or
or
add
inc
pop
pop
or
les
add
or
les
add
or
add
sbb
pop
aas
sbb
add
adc
and
adc
and
add
add
adc
(bad)
call
pop
and
add
add
jmp
je
add
add
push
adc
inc
add
xor
add
add
adc
add
push
jle
add
add
add
add
push
and
movs
xor
or
or
or
add
mov
add
add
add
add
add
add
add
add
(bad)
(bad)
inc
add
add
mov
add
sbb
add
or
idiv
inc
and
cmp
or
add
add
xchg
pop
adc
shr
cmc
ret
cmp
popa
pop
aas
pop
push
popa
inc
add
add
jb
add
and
jo
lods
cmp
(bad)
call
add
or
add
inc
add
add
add
mov
add
add
add
mov
(bad)
(bad)
call
add
inc
add
add
mov
je
cmp
call
adc
mov
jg
cmp
(bad)
(bad)
call
or
push
mov
mov
and
mov
popa
cmp
(bad)
call
or
pushf
jno
neg
jg
push
stc
popa
cmp
(bad)
(bad)
call
call
add
add
(bad)
(bad)
inc
mov
add
sbb
out
add
push
pop
pop
or
les
add
or
les
add
or
xor
add
pop
sbb
pop
aas
adc
push
and
add
add
add
add
inc
(bad)
(bad)
call
add
add
jmp
sbb
or
or
add
add
add
add
add
add
add
add
loop
add
sub
out
(bad)
(bad)
inc
add
adc
or
stos
add
add
add
sub
es
jle
add
add
add
add
fcmovu
fwait
popa
and
pop
inc
or
add
mov
add
add
add
add
add
sbb
add
add
add
add
add
add
add
cmps
add
add
fild
add
sbb
adc
and
sub
sub
popf
popa
cmp
inc
or
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
div
nop
xchg
jno
(bad)
call
or
data16
pop
and
cmp
call
or
mov
and
cmp
(bad)
(bad)
jle
add
add
add
int3
fsubr
pop
and
sub
(bad)
(bad)
call
or
push
das
fs
pop
and
lods
popa
cmp
(bad)
call
or
imul
cmps
scas
cmp
(bad)
(bad)
call
add
or
jb
cmp
(bad)
inc
pop
push
popa
inc
add
add
or
add
and
mov
cmp
(bad)
(bad)
call
cmp
(bad)
(bad)
call
or
inc
mov
add
sbb
sub
add
push
push
pop
pop
or
adc
add
or
and
pop
cmp
add
add
or
call
add
pop
xchg
cmp
(bad)
(bad)
call
add
add
cmp
(bad)
(bad)
jmp
sbb
pop
adc
inc
add
add
add
add
add
add
add
add
add
add
add
jecxz
add
sub
push
add
xor
add
add
add
add
sub
es
add
in
add
push
sub
adc
or
or
add
add
add
sub
es
sub
add
push
sub
add
xor
add
add
add
add
sub
es
add
out
add
push
sub
adc
or
or
add
add
add
sub
es
add
out
add
push
sub
adc
or
or
add
add
add
sub
es
add
sub
add
push
sub
xor
add
add
add
add
add
add
push
dec
add
sub
add
sub
add
xor
add
add
add
add
add
add
push
pop
sub
add
xor
add
add
add
add
add
add
push
push
sub
add
xor
add
add
add
add
add
add
push
dec
add
outs
xor
add
sub
add
xor
add
add
add
add
add
add
push
add
xor
add
sub
adc
or
push
add
add
add
add
add
push
dec
add
outs
xor
add
sub
add
xor
add
add
add
add
add
add
push
add
or
add
xor
add
sub
adc
or
adc
add
add
add
sub
es
dec
add
dec
add
sub
add
sub
add
xor
add
add
add
add
sub
es
sub
es
add
hlt
add
push
sub
adc
or
add
add
add
sub
es
sub
es
pop
adc
and
add
repz
push
sub
add
lea
add
add
add
repz
push
sub
add
add
adc
or
or
add
add
add
sub
es
add
sub
add
push
sub
xor
add
add
add
add
add
add
push
dec
add
sub
add
sub
add
xor
add
add
add
add
add
add
push
pop
sub
add
xor
add
add
add
add
add
add
push
push
sub
add
xor
add
add
add
add
add
add
push
add
or
add
or
add
push
add
or
add
xor
add
add
adc
add
push
sub
es
and
add
add
sbb
add
add
add
add
cmp
add
add
add
add
dec
add
dec
add
add
add
add
add
(bad)
(bad)
inc
add
add
add
add
(bad)
(bad)
inc
add
cmp
add
add
and
add
add
sar
(bad)
inc
sub
add
and
ret
(bad)
(bad)
inc
jae
add
push
jge
add
add
add
add
sub
add
push
cmp
(bad)
(bad)
jmp
and
add
cmp
add
add
xor
sub
add
add
add
sub
es
push
lea
add
add
inc
add
push
and
add
arpl
add
sub
dec
add
push
push
sub
add
push
sub
add
xor
add
add
add
add
adc
add
push
and
add
add
and
add
and
and
cmp
cmp
add
add
push
add
add
push
add
dec
add
add
add
add
add
add
adc
add
sbb
add
xchg
add
sbb
add
add
add
add
add
add
add
or
add
sub
add
push
cmp
(bad)
(bad)
(bad)
cmp
dec
add
add
or
add
add
and
add
cmp
sub
add
and
add
add
cmp
and
cmp
add
add
jne
inc
arpl
add
or
add
repz
and
cmp
add
sbb
xor
add
add
add
add
xor
add
mov
add
and
dec
(bad)
(bad)
dec
and
dec
jb
pop
and
shl
add
or
sub
and
dec
ja
cmp
add
add
inc
pop
add
add
add
lahf
add
add
(bad)
(bad)
jmp
(bad)
(bad)
jmp
or
add
cmp
(bad)
(bad)
jmp
fadd
jno
je
dec
sbb
or
add
add
(bad)
jmp
(bad)
push
(bad)
(bad)
call
(bad)
(bad)
dec
(bad)
call
sub
add
push
cmp
(bad)
(bad)
jmp
and
add
add
mov
(bad)
dec
and
or
xchg
add
add
(bad)
(bad)
call
cmp
(bad)
(bad)
inc
jnp
add
add
xor
add
inc
add
and
add
add
add
add
cmp
(bad)
(bad)
cmp
(bad)
(bad)
jle
add
add
and
add
add
arpl
(bad)
jmp
add
adc
or
rol
add
add
adc
add
push
jle
add
add
push
and
dec
mov
mov
popa
and
pop
inc
or
add
add
add
add
add
add
add
add
add
inc
add
add
add
retf
add
add
add
add
mov
inc
add
adc
and
add
add
add
scas
cmp
sti
add
push
es
clc
xor
cmp
add
push
popa
inc
add
add
mov
add
pop
popa
leave
cmp
(bad)
(bad)
(bad)
jle
add
add
pop
adc
and
inc
push
jge
repz
cmp
(bad)
call
add
add
add
add
add
add
add
add
add
add
add
add
add
(bad)
(bad)
inc
add
add
dec
pop
sti
mov
call
or
adc
int
adc
(bad)
call
push
and
adc
mov
dec
pop
and
cmc
(bad)
(bad)
call
or
stos
cs
or
and
push
scas
out
cmp
(bad)
(bad)
call
or
in
dec
imul
pop
and
dec
mov
(bad)
(bad)
call
or
mov
dec
and
jbe
push
popaw
cmp
and
cmp
(bad)
(bad)
call
sbb
add
inc
mov
add
sbb
sub
add
push
or
add
inc
pop
pop
or
add
add
daa
or
pop
or
or
add
pop
adc
call
pop
and
add
add
jmp
jne
add
add
push
adc
call
xor
add
add
add
add
adc
add
push
jle
add
add
push
jle
add
add
pop
and
push
and
pop
inc
or
add
mov
add
add
add
add
add
add
add
add
add
lods
add
add
add
add
add
add
add
add
hlt
add
add
or
les
jecxz
and
cmps
(bad)
(bad)
call
push
sbb
add
add
jns
pop
pop
and
push
iret
hlt
popa
cmp
or
stos
imul
cmp
(bad)
call
or
push
(bad)
pop
and
mov
(bad)
(bad)
(bad)
call
or
popf
stos
inc
push
pop
and
cmp
(bad)
call
add
add
add
add
add
add
add
dec
add
add
add
add
add
add
data16
add
add
and
mov
(bad)
(bad)
call
push
pop
ins
xchg
adc
dec
cmp
(bad)
(bad)
inc
popa
pop
jne
push
popa
inc
add
add
sub
add
and
dec
popa
cmp
(bad)
(bad)
call
cld
add
push
es
or
add
jns
sar
(bad)
call
or
cmp
inc
dec
cmp
(bad)
(bad)
call
pop
and
addr16
cmp
or
adc
inc
mov
add
sbb
add
add
or
adc
inc
pop
pop
or
sub
pop
or
add
sbb
pop
aas
or
add
sbb
add
call
push
and
pop
adc
jmp
je
add
add
adc
and
add
add
add
call
xor
add
add
add
add
sub
es
add
add
add
xor
add
add
add
add
sub
es
add
push
add
push
sub
adc
or
or
add
add
add
sub
es
add
sub
add
push
sub
xor
add
add
add
add
sub
es
add
or
add
sub
adc
or
push
add
add
add
add
add
push
dec
add
sub
add
or
add
adc
or
push
add
add
add
add
add
push
pop
sub
add
xor
add
add
add
add
add
add
push
push
sub
add
xor
add
add
add
add
add
add
push
dec
add
dec
add
sub
add
adc
or
sldt
add
add
add
add
push
add
or
add
aaa
add
or
add
xor
add
add
add
add
add
add
push
dec
add
outs
cmp
add
sub
add
xor
add
add
add
add
add
add
push
dec
add
dec
add
outs
cmp
add
sub
add
xor
add
add
add
add
add
add
push
dec
add
outs
cmp
add
sub
add
xor
add
add
add
add
sub
es
sub
es
add
or
add
sub
adc
or
push
add
add
add
add
add
push
dec
add
sub
add
sub
add
xor
add
add
adc
add
push
and
add
cmp
add
add
and
add
and
add
sub
add
push
cmp
add
add
add
add
dec
add
dec
add
add
add
(bad)
(bad)
inc
(bad)
(bad)
inc
add
add
add
add
add
cmp
add
add
and
add
add
sar
(bad)
jmp
cdq
add
add
iret
add
add
add
sub
add
push
cmp
(bad)
(bad)
jmp
and
add
add
scas
(bad)
(bad)
push
add
push
sub
add
call
xor
add
add
push
jle
add
add
add
jmp
inc
pop
pop
mov
and
pop
inc
or
add
xor
add
daa
add
add
add
add
add
add
add
inc
add
add
(bad)
(bad)
call
add
add
enter
push
or
sub
in
jmp
call
adc
or
add
sub
or
popa
cmp
adc
mov
mov
xchg
(bad)
(bad)
call
or
push
dec
mov
pop
and
xor
cmp
push
add
add
push
adc
and
dec
mov
pop
and
je
popa
cmp
(bad)
call
add
or
add
and
add
jne
(bad)
jmp
add
and
add
lods
add
add
(bad)
inc
add
pushf
add
add
add
push
add
add
test
sub
adc
or
cmp
xchg
js
pushf
popa
cmp
(bad)
(bad)
dec
add
outs
pop
push
popa
inc
add
add
or
add
and
aaa
pop
mov
cli
(bad)
(bad)
call
add
push
(bad)
(bad)
call
push
and
adc
jnp
(bad)
inc
mov
add
sbb
add
add
add
add
add
push
push
pop
pop
or
mov
add
or
out
add
add
and
or
add
or
pop
pop
cmp
sbb
(bad)
(bad)
call
push
pop
adc
call
push
and
add
xchg
sbb
and
(bad)
jmp
pop
adc
adc
inc
add
add
add
add
add
add
add
or
add
sub
dec
(bad)
(bad)
inc
add
adc
or
or
add
add
add
sub
es
add
adc
add
sub
adc
or
add
add
sub
es
add
add
push
add
adc
add
sub
xor
add
add
add
add
add
add
push
pop
sub
add
xor
add
add
add
add
add
add
push
push
sub
add
xor
add
add
add
add
add
add
push
add
or
add
cmp
add
sub
adc
or
add
add
add
add
push
add
or
add
or
add
or
add
or
add
or
sub
add
xor
add
add
add
add
adc
add
push
jle
add
add
add
cmp
test
and
pop
cmp
add
add
add
add
add
jecxz
add
add
add
add
add
nop
add
add
add
add
add
cmp
add
add
adc
add
sbb
mov
lods
(bad)
(bad)
inc
add
pop
inc
pop
push
popa
inc
add
add
mov
xor
cmp
or
jno
cmp
cmp
add
pop
xchg
or
adc
or
jecxz
jnp
popa
cmp
call
push
and
mov
xchg
jge
cmp
(bad)
(bad)
jle
add
add
add
leave
aam
pop
and
and
and
aas
(bad)
(bad)
call
or
cli
cmp
(bad)
(bad)
call
push
and
jecxz
pop
and
cmp
(bad)
(bad)
dec
inc
or
add
adc
add
ds
(bad)
dec
(bad)
(bad)
(bad)
cmp
add
sub
(bad)
call
add
add
add
and
add
adc
add
test
add
and
loopne
(bad)
call
or
fwait
(bad)
(bad)
call
adc
es
pop
or
(bad)
(bad)
inc
mov
add
sbb
push
add
push
or
add
cmp
pop
pop
or
jle
add
add
in
add
jle
add
add
in
add
xchg
add
mov
add
pop
pushf
pop
cmp
add
add
or
call
add
push
add
add
jmp
inc
(bad)
(bad)
inc
jne
add
add
adc
add
add
add
cmp
(bad)
(bad)
inc
add
adc
or
add
add
and
add
sub
es
jle
add
add
push
jle
add
add
pop
cmp
add
and
or
pop
fsub
adc
pop
or
or
add
mov
add
add
add
add
add
fadd
add
sbb
add
sub
add
cmp
add
add
add
add
add
add
jmp
mov
and
mov
stos
(bad)
(bad)
call
adc
add
and
fwait
(bad)
(bad)
call
push
pop
xor
and
mov
(bad)
call
or
mov
jl
(bad)
inc
push
popa
inc
add
add
xchg
add
add
mov
pop
(bad)
(bad)
call
or
add
and
stos
fadd
(bad)
call
add
add
add
add
add
add
add
add
add
add
add
xchg
add
add
add
cmp
(bad)
fild
add
pusha
(bad)
(bad)
call
dec
cmps
(bad)
cmp
(bad)
(bad)
call
push
pop
pop
xchg
adc
or
rcr
fld
out
(bad)
call
or
sub
pop
and
cmp
(bad)
(bad)
call
push
and
cmp
(bad)
(bad)
call
cmp
or
(bad)
(bad)
inc
mov
add
sbb
mov
add
sbb
pop
add
push
or
(bad)
(bad)
inc
mov
add
sbb
mov
add
sbb
sbb
add
or
push
pop
setno
push
pop
sub
xor
(bad)
inc
pop
pop
or
or
or
pop
or
cmp
adc
and
add
add
add
add
call
push
pop
ins
xchg
pop
bound
in
(bad)
(bad)
call
push
and
add
add
add
inc
sub
pop
and
push
(bad)
(bad)
(bad)
call
xor
add
add
add
add
push
jle
add
add
add
add
push
cmp
add
add
inc
dec
rcr
dec
mov
adc
adc
pop
or
or
add
mov
add
add
add
add
add
xchg
add
add
(bad)
(bad)
inc
add
add
add
pop
add
add
repz
add
add
or
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
jge
add
cmp
add
inc
add
and
jge
inc
cmp
(bad)
call
pop
and
and
or
data16
(bad)
call
adc
and
and
push
(bad)
(bad)
call
pop
and
and
pop
and
cmp
(bad)
call
pop
and
aad
jae
and
cmp
(bad)
(bad)
call
add
dec
pop
adc
pop
and
and
cmp
(bad)
(bad)
call
adc
test
xchg
dec
cmp
(bad)
(bad)
inc
popa
pop
dec
pop
push
popa
inc
add
add
add
add
add
and
inc
jecxz
cmp
(bad)
(bad)
call
or
push
and
and
add
add
add
movs
mov
jb
retf
(bad)
(bad)
call
cmp
cmp
or
or
add
idiv
(bad)
inc
mov
add
sbb
sbb
add
or
or
add
loope
(bad)
inc
mov
add
sbb
sbb
add
or
push
pop
dec
xchg
pop
outs
pop
adc
(bad)
(bad)
(bad)
inc
pop
pop
or
and
pop
or
adc
mov
(bad)
dec
sbb
sldt
add
push
and
add
add
(bad)
(bad)
call
push
and
add
add
jmp
sub
or
add
cmp
inc
add
xor
add
add
add
add
sub
es
add
sbb
add
sub
adc
or
or
add
add
add
sub
es
add
sub
add
sub
xor
add
add
add
add
sub
es
add
sub
add
push
sub
xor
add
add
add
add
sub
es
add
and
add
sub
adc
or
or
add
add
add
sub
es
add
and
add
sub
adc
or
push
add
add
add
add
add
push
dec
add
outs
add
or
add
adc
or
adc
add
add
add
sub
es
add
or
add
or
add
aas
add
or
add
xor
add
add
add
add
add
add
push
pop
sub
add
xor
add
add
add
add
add
add
push
push
sub
add
xor
add
add
add
add
add
add
push
dec
add
dec
add
outs
inc
add
or
add
adc
or
push
add
add
add
add
add
push
dec
add
outs
inc
add
or
add
adc
or
push
add
add
add
add
add
push
dec
add
outs
inc
add
or
add
adc
or
sldt
add
add
sub
es
sub
es
add
daa
add
push
sub
adc
push
add
add
sub
es
jle
add
add
push
and
adc
shl
(bad)
fiadd
or
or
or
add
hlt
add
add
add
sbb
add
sub
add
fild
add
aas
add
add
(bad)
(bad)
inc
add
add
out
add
add
or
jns
ret
and
mov
scas
(bad)
(bad)
call
or
test
or
(bad)
(bad)
call
push
pop
cmp
adc
mov
(bad)
jle
add
add
pop
adc
and
inc
stc
pop
and
rol
outs
(bad)
(bad)
call
add
add
add
or
add
or
add
int3
add
add
add
jle
add
or
add
xor
add
add
add
lds
add
and
sub
add
push
jle
add
add
jp
sub
sbb
add
add
cmp
add
and
(bad)
fidivr
add
(bad)
call
and
add
adc
pop
jnp
pop
or
inc
or
cmp
(bad)
(bad)
call
or
pop
pop
push
add
(bad)
cmp
(bad)
(bad)
call
cmp
(bad)
(bad)
call
adc
and
pop
ins
pop
adc
inc
mov
add
sbb
sub
pop
or
add
inc
pop
pop
or
xor
and
add
add
or
or
cmp
push
adc
call
or
repnz
(bad)
call
adc
inc
je
add
sbb
adc
and
add
add
(bad)
(bad)
call
xor
add
add
add
add
adc
add
push
and
add
add
pop
add
add
je
add
or
add
add
pop
cmp
add
cmp
add
add
add
add
cmp
add
add
and
rol
add
push
popa
inc
add
add
stc
add
add
sub
add
sub
add
push
cmp
add
and
add
add
sub
add
cmp
add
add
test
add
popf
add
add
sbb
pop
aas
adc
add
and
add
add
fld
add
sbb
add
add
push
and
pop
ss
cmp
(bad)
(bad)
inc
sub
pop
pop
push
adc
add
cmp
pop
xor
sub
cmp
or
dec
jns
rcr
js
mov
popa
cmp
add
add
or
adc
add
cmp
push
and
adc
add
jne
add
cmp
(bad)
(bad)
jmp
mov
xor
and
adc
pop
or
inc
or
add
inc
add
add
add
add
add
add
add
(bad)
(bad)
(bad)
jmp
(bad)
(bad)
call
(bad)
(bad)
call
add
add
add
add
adc
add
cmp
add
add
add
add
push
and
add
add
sub
add
cmp
add
add
pop
or
add
cld
add
add
or
outs
adc
rcr
out
push
ins
popa
cmp
(bad)
call
or
js
sub
pop
and
cmp
(bad)
call
or
leave
punpckldq
pop
and
loope
popa
cmp
(bad)
call
and
add
and
add
add
mov
add
jle
add
add
pop
and
cmp
cmp
add
add
pop
pop
or
adc
add
cmp
adc
add
sub
add
cmp
add
cmp
add
cmp
add
add
add
add
push
or
add
add
cmp
add
adc
and
jne
popa
pop
and
or
popa
cmp
(bad)
(bad)
call
or
add
add
sub
add
cmp
add
add
and
push
inc
jge
ret
(bad)
(bad)
call
adc
dec
cmp
push
pop
pop
xchg
pop
popa
pop
cmp
(bad)
(bad)
call
add
and
add
add
push
or
dec
add
add
add
std
(bad)
call
(bad)
(bad)
push
(bad)
(bad)
dec
(bad)
push
(bad)
(bad)
call
(bad)
(bad)
jmp
(bad)
jmp
(bad)
inc
add
add
(bad)
(bad)
push
std
(bad)
push
(bad)
(bad)
call
add
add
(bad)
(bad)
jmp
std
(bad)
push
(bad)
dec
call
add
cmp
and
add
add
cmp
and
jg
or
and
(bad)
call
add
add
(bad)
(bad)
call
std
(bad)
jmp
(bad)
(bad)
(bad)
mov
std
(bad)
jmp
cld
(bad)
jmp
(bad)
(bad)
inc
std
(bad)
jmp
or
add
pop
cmp
(bad)
jmp
cmp
adc
or
or
add
add
add
sub
es
add
sub
add
push
sub
xor
add
add
add
add
sub
es
add
sub
add
push
sub
xor
add
add
add
add
add
add
push
dec
add
sub
add
sub
add
xor
add
add
add
add
add
add
push
pop
sub
add
xor
add
add
add
add
add
add
push
push
sub
add
xor
add
add
add
add
add
add
push
dec
add
dec
add
outs
inc
add
or
add
adc
or
adc
add
add
add
sub
es
add
or
add
or
add
inc
add
or
add
xor
add
add
daa
add
adc
add
push
and
add
add
add
add
add
add
sub
add
push
cmp
add
add
and
add
pop
cmp
add
es
and
xor
push
adc
and
inc
pop
add
add
add
add
add
rol
add
add
sahf
add
add
(bad)
(bad)
jmp
xor
add
sub
add
push
cmp
and
add
add
stc
add
add
mov
add
push
je
add
add
and
mov
xor
add
sub
add
push
cmp
add
add
add
add
cmp
add
add
or
add
add
pop
xchg
cmp
(bad)
(bad)
call
or
or
add
cmp
and
xchg
xchg
pop
and
cmp
(bad)
call
or
aaa
cmp
(bad)
inc
jne
add
add
lods
sbb
push
add
xor
add
pop
jo
and
push
add
sub
stos
add
add
fwait
add
add
and
add
add
pop
add
add
aad
lods
push
cmp
(bad)
(bad)
jmp
test
add
add
xor
add
and
add
and
add
pop
add
sub
sahf
add
add
lds
add
sub
add
sub
retf
add
in
add
add
or
add
or
mov
add
and
add
add
push
or
dec
add
add
add
add
or
(bad)
jmp
(bad)
jmp
(bad)
(bad)
(bad)
(bad)
(bad)
push
add
or
add
jp
(bad)
call
add
xchg
add
add
add
leave
(bad)
(bad)
jmp
jge
jl
and
add
cli
sar
and
(bad)
dec
inc
or
add
xor
add
add
(bad)
(bad)
push
add
add
(bad)
(bad)
dec
(bad)
(bad)
(bad)
cmp
add
int3
(bad)
(bad)
jmp
pop
add
add
jp
(bad)
(bad)
cmp
add
add
add
mov
and
or
add
pop
(bad)
(bad)
jmp
mov
adc
(bad)
call
cmp
and
add
cmp
(bad)
(bad)
(bad)
add
add
push
add
add
fld
add
add
adc
cmp
and
add
add
cmp
add
add
and
xchg
ficom
popa
and
inc
add
add
(bad)
(bad)
inc
add
mov
add
test
add
cmp
add
add
add
add
dec
or
dec
add
add
add
std
(bad)
call
std
(bad)
(bad)
jge
(bad)
dec
add
add
add
add
add
aad
(bad)
(bad)
cmp
add
adc
inc
push
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
xor
add
cmp
adc
and
(bad)
pop
(bad)
pop
and
lods
popa
cmp
call
jle
add
add
push
add
add
add
add
push
add
add
add
and
add
pop
pushf
sub
lock
dec
das
cmp
(bad)
(bad)
inc
sub
add
add
add
sub
add
add
add
add
add
add
xor
add
add
add
add
sub
es
sub
es
add
xor
add
sub
adc
or
adc
add
add
add
sub
es
sub
es
jae
add
or
sub
adc
or
or
add
add
add
sub
es
add
sub
adc
or
pop
add
add
add
add
add
push
add
or
add
or
add
or
add
outs
add
push
sub
adc
or
adc
add
add
add
sub
es
add
or
add
or
add
loopne
add
sub
adc
or
push
add
add
add
add
add
push
pop
sub
add
xor
add
add
add
add
add
add
push
push
sub
add
xor
add
add
add
add
add
add
push
dec
add
sub
add
sub
add
xor
add
add
add
add
add
add
push
add
or
add
or
add
aas
add
or
add
xor
fld
add
sub
add
sub
es
and
add
add
repnz
add
(bad)
out
add
or
xchg
add
xchg
and
or
add
add
cmp
add
add
or
or
add
pop
cmp
add
add
and
push
add
add
cmp
add
add
add
and
add
add
cmp
cmp
jne
add
add
jnp
add
add
mov
ret
add
or
add
cmp
add
add
jnp
add
add
or
and
and
push
and
dec
add
add
or
add
and
add
add
dec
add
add
ds
cmp
add
add
mov
cmp
add
add
cmp
add
add
jnp
add
add
and
add
add
adc
or
add
cmp
add
add
add
add
cmp
add
add
pop
(bad)
and
mov
popa
and
pop
inc
or
add
fwait
(bad)
(bad)
call
add
add
(bad)
(bad)
jmp
add
popa
add
add
add
add
(bad)
(bad)
call
add
add
cmp
add
add
mov
add
push
jne
add
add
jnp
add
add
cmp
add
cmp
add
add
jnp
add
add
adc
add
sbb
test
add
add
add
push
sub
add
push
and
add
add
jl
add
adc
pop
xchg
or
adc
add
sub
add
cmp
add
es
je
add
add
and
add
add
add
push
sub
add
push
and
add
add
inc
add
add
sub
jae
xor
cmp
add
or
sub
add
cmp
(bad)
jmp
and
add
add
sbb
add
adc
push
pop
and
adc
push
(bad)
(bad)
dec
inc
or
add
jae
add
cmp
(bad)
jmp
std
(bad)
call
add
add
add
add
add
add
(bad)
(bad)
call
(bad)
(bad)
jmp
add
retf
add
add
mov
jne
add
add
jnp
add
add
sbb
add
and
add
add
or
and
add
add
mov
push
(bad)
inc
jne
add
add
jnp
add
add
outs
add
add
sub
add
sub
add
sub
and
add
add
jne
add
and
loope
dec
cmp
(bad)
call
ss
pop
(bad)
(bad)
(bad)
jle
add
add
add
add
add
cmp
add
push
or
push
add
add
inc
add
add
or
xor
(bad)
call
cmp
(bad)
(bad)
inc
je
add
add
push
add
push
and
add
add
je
add
sub
add
sub
cmp
add
and
add
add
push
push
add
or
add
add
add
(bad)
(bad)
call
add
add
(bad)
(bad)
fdivrp
(bad)
jmp
(bad)
(bad)
jmp
(bad)
(bad)
dec
cld
(bad)
jmp
(bad)
(bad)
(bad)
out
cld
(bad)
call
(bad)
call
(bad)
(bad)
(bad)
(bad)
dec
add
add
add
add
(bad)
(bad)
call
(bad)
inc
std
(bad)
jmp
(bad)
(bad)
jmp
add
add
(bad)
(bad)
jmp
add
or
xchg
(bad)
(bad)
call
or
sldt
add
mov
(bad)
call
or
adc
inc
add
push
cmp
(bad)
jmp
jle
add
add
and
add
cmp
(bad)
(bad)
cmp
(bad)
inc
jne
add
add
and
aas
sub
add
push
and
add
add
mov
or
add
and
add
add
cmp
(bad)
jmp
push
jne
add
add
cmp
add
sub
add
adc
or
add
add
adc
add
push
sub
es
and
add
add
pop
add
add
jne
add
add
stos
add
add
lea
add
sub
add
sub
and
add
add
inc
add
push
cmp
add
add
cmc
add
add
pop
jne
add
add
and
add
add
cmc
add
add
push
add
sub
add
add
add
add
cmp
add
add
je
add
add
and
sbb
add
add
add
push
and
add
add
sahf
add
add
push
add
sub
imul
add
add
fwait
add
add
adc
aaa
add
add
or
mov
add
add
add
add
and
jo
add
push
and
fadd
add
sub
add
sub
mov
add
and
add
add
pop
add
add
jle
add
or
add
add
or
add
cmp
add
add
add
jne
add
add
push
add
add
push
pop
inc
pop
pop
sub
add
sub
lds
add
and
add
add
adc
add
push
adc
or
add
sub
add
cmp
add
add
add
jne
add
add
nop
dec
sub
add
sub
add
add
aas
add
push
sub
add
cmp
or
add
cmp
add
add
add
je
add
sbb
add
and
add
add
mov
add
add
add
or
add
add
add
add
sub
add
push
cmp
add
jne
add
add
and
add
add
rol
add
push
add
sub
cmp
add
jge
add
add
add
outs
add
add
jnp
add
add
and
sub
add
push
sub
ja
add
cmp
add
add
and
add
add
inc
add
add
bound
add
pop
je
add
add
and
sbb
add
add
add
push
and
add
and
add
add
push
add
sub
sar
(bad)
(bad)
cmp
(bad)
(bad)
jmp
push
add
add
push
push
add
or
add
add
add
add
add
add
add
add
mov
(bad)
call
(bad)
(bad)
call
(bad)
inc
(bad)
(bad)
jmp
add
add
(bad)
call
(bad)
(bad)
jmp
add
add
inc
add
sub
(bad)
(bad)
dec
std
(bad)
jmp
(bad)
(bad)
dec
(bad)
(bad)
jmp
(bad)
(bad)
call
add
add
pop
add
add
xchg
(bad)
(bad)
inc
jle
add
or
add
add
add
add
sub
add
push
cmp
(bad)
jmp
add
add
or
add
add
sldt
add
inc
add
push
cmp
jmp
cmp
add
pop
je
add
add
add
add
add
add
cmp
(bad)
inc
pop
lea
or
add
sbb
pop
sub
or
add
and
add
add
jecxz
add
sub
add
sub
add
inc
add
push
cmp
(bad)
(bad)
jmp
cmp
(bad)
(bad)
dec
jne
add
sbb
add
or
push
add
add
out
(bad)
(bad)
inc
jle
add
or
add
add
push
add
add
(bad)
(bad)
call
add
pop
adc
adc
retf
jmp
adc
or
or
add
add
add
sub
es
jae
add
or
add
adc
or
or
add
add
add
sub
es
add
sub
add
sub
xor
add
add
add
add
sub
es
add
inc
add
push
sub
adc
or
or
add
add
add
sub
es
add
add
or
add
xor
add
add
add
add
sub
es
add
add
or
add
xor
add
add
add
add
sub
es
add
sub
add
sub
xor
add
add
add
add
add
add
push
add
or
add
or
add
or
add
outs
add
push
sub
adc
or
push
add
add
add
add
add
push
pop
sub
add
xor
add
add
add
add
add
add
push
push
sub
add
xor
add
add
add
add
add
add
push
dec
add
dec
add
outs
and
add
sub
add
xor
add
add
add
add
add
add
push
dec
add
outs
xor
add
sub
add
xor
add
add
add
add
add
add
push
add
or
add
or
add
aas
add
or
add
xor
das
add
add
add
adc
add
push
and
add
cmp
add
add
adc
cmp
add
adc
and
add
add
inc
pop
maxps
add
add
or
add
cmp
adc
cmp
or
cmp
add
xchg
and
cmp
(bad)
(bad)
inc
pop
pop
maxps
pop
add
push
and
add
add
adc
pop
add
push
or
sbb
add
cmp
add
cmp
or
xor
adc
and
retf
sub
add
add
or
pop
add
push
and
add
add
or
add
pop
cmp
add
add
pop
adc
pop
cmp
cmp
(bad)
(bad)
inc
pop
pop
maxps
pop
add
push
and
add
add
adc
adc
cmp
adc
add
dec
or
dec
add
add
add
(bad)
(bad)
dec
add
add
add
add
add
add
add
(bad)
(bad)
jmp
(bad)
(bad)
aas
add
add
add
add
(bad)
jmp
add
push
add
add
add
add
(bad)
call
add
add
add
popf
add
add
add
add
add
add
add
enter
stos
(bad)
(bad)
inc
add
add
sub
pop
add
add
and
add
add
ins
(bad)
(bad)
inc
pop
pop
maxps
pop
add
push
and
add
add
pop
(bad)
(bad)
inc
adc
push
or
push
add
add
cmp
(bad)
jmp
adc
and
add
xchg
pop
and
test
add
push
cmp
(bad)
(bad)
inc
jnp
add
add
push
pop
or
xchg
or
pop
add
add
adc
(bad)
inc
or
pop
add
push
and
(bad)
(bad)
jmp
or
add
cmp
(bad)
(bad)
jmp
pop
pusha
movs
(bad)
cmp
add
add
or
push
cmps
repz
and
enter
mov
add
adc
pop
and
add
pop
cmp
(bad)
inc
jnp
add
add
xchg
and
(bad)
(bad)
jmp
or
add
cmp
arpl
pop
sbb
or
push
add
add
mov
mov
iret
xchg
and
add
inc
test
pop
add
add
pop
inc
adc
add
adc
std
(bad)
call
add
add
add
(bad)
jmp
(bad)
call
add
add
add
add
add
add
add
add
(bad)
(bad)
call
add
add
add
add
std
(bad)
call
(bad)
(bad)
jmp
(bad)
(bad)
jmp
adc
add
cmp
(bad)
(bad)
jmp
stc
pop
or
mov
and
inc
push
add
add
(bad)
push
(bad)
(bad)
(bad)
jp
(bad)
call
(bad)
(bad)
jmp
add
add
cmp
std
(bad)
call
adc
cmp
(bad)
call
push
cmp
(bad)
(bad)
inc
pop
pop
maxps
pop
add
push
and
add
add
xlat
std
(bad)
call
or
pop
add
add
add
pop
and
add
add
cmp
jnp
add
add
push
pop
or
xchg
or
adc
add
cmp
push
add
add
or
sbb
add
pop
cmp
pop
sbb
adc
add
add
add
add
cmp
(bad)
jmp
cmp
(bad)
(bad)
inc
pop
maxps
add
je
(bad)
(bad)
cmp
(bad)
jmp
and
add
add
push
std
(bad)
call
or
iret
add
add
and
inc
std
(bad)
(bad)
jle
add
add
or
add
add
cmp
std
(bad)
(bad)
cmp
sbb
add
add
add
add
adc
add
sub
paddw
(bad)
cmp
std
(bad)
(bad)
cmp
(bad)
inc
push
aas
sub
sbb
add
cmp
cld
(bad)
call
movlps
and
add
add
out
(bad)
inc
jnp
add
add
xchg
or
pop
add
add
sar
(bad)
inc
pop
maxps
add
xchg
add
push
cmp
pop
sbb
adc
or
adc
add
adc
add
push
sub
add
fld
add
add
fld
add
add
add
add
adc
add
add
or
add
add
add
xor
add
add
add
add
sub
es
add
add
add
add
xor
add
add
add
add
sub
es
sub
push
sub
add
sub
add
sub
xor
add
add
adc
add
push
and
add
add
cmp
pop
adc
pop
and
add
add
jb
add
push
pop
pop
cmp
adc
add
cmp
add
adc
and
and
add
iret
add
add
add
add
pop
xchg
pushf
pop
adc
cmp
cmp
(bad)
(bad)
call
sub
jnp
add
add
adc
pop
add
push
and
add
add
xchg
add
push
cmp
add
add
sbb
pop
cmp
add
add
and
add
dec
or
dec
add
add
add
add
mov
add
add
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
imul
add
add
add
add
add
(bad)
(bad)
dec
add
add
add
add
add
add
add
add
add
add
(bad)
call
add
ins
add
add
add
mov
add
add
add
add
add
add
add
add
(bad)
(bad)
(bad)
jmp
add
add
add
add
add
add
mov
push
add
cmp
add
and
add
add
pop
(bad)
(bad)
call
adc
and
add
cmp
(bad)
(bad)
call
add
(bad)
jmp
sub
clc
(bad)
(bad)
inc
add
add
add
add
push
jge
add
add
push
add
add
cmp
(bad)
(bad)
jmp
push
sub
jnp
add
add
sub
add
or
sub
add
pop
cmp
(bad)
(bad)
jmp
add
and
add
add
scas
(bad)
(bad)
(bad)
cmp
add
add
add
add
out
add
add
adc
add
cmp
pop
add
add
sbb
add
daa
add
add
jg
(bad)
inc
jle
add
add
dec
add
add
sub
add
cmp
(bad)
call
adc
pop
cmp
add
add
and
repnz
(bad)
inc
pop
or
inc
add
add
pop
add
add
cmp
(bad)
jmp
push
push
cmp
add
add
or
add
cmp
or
sub
pop
cmp
add
add
adc
repnz
(bad)
call
sub
jnp
add
add
adc
pop
add
push
and
add
add
push
(bad)
(bad)
inc
sbb
add
add
add
add
cmp
std
(bad)
call
sbb
pop
cmp
sbb
repnz
(bad)
call
sub
jnp
add
add
sub
add
and
add
add
int
(bad)
inc
sbb
add
add
and
add
cmp
pop
pop
xchg
adc
cmp
add
pop
sbb
inc
sbb
add
add
sbb
add
cmp
pop
add
add
sub
add
add
add
adc
pop
add
push
and
add
add
or
add
cmp
(bad)
(bad)
cmp
jnp
add
add
jnp
add
add
jnp
add
add
bound
add
or
xor
add
cmp
(bad)
call
sub
jnp
add
add
add
push
push
inc
sub
jnp
add
add
jnp
add
add
arpl
add
cmp
add
and
add
add
sbb
(bad)
call
adc
pop
and
cmp
std
(bad)
jmp
adc
pop
ins
xchg
adc
and
add
add
cmp
cld
(bad)
jmp
cmp
jnp
add
add
test
(bad)
jmp
add
add
cmp
cld
(bad)
jmp
call
add
adc
and
add
xchg
sbb
add
add
pop
cmp
add
adc
pop
push
xchg
cmp
add
pop
adc
push
cmp
add
sbb
pop
add
add
cmp
add
sbb
push
add
add
or
cdq
add
add
add
adc
add
or
add
add
sub
add
adc
and
add
add
pop
and
pop
cld
(bad)
call
adc
and
add
add
dec
cld
(bad)
(bad)
cmp
add
add
pop
arpl
add
sbb
aaa
cld
(bad)
inc
and
add
pop
jge
add
add
sub
add
cmp
cld
(bad)
call
adc
cmp
add
add
pop
cmp
(bad)
(bad)
call
sub
add
add
add
pop
add
push
jge
add
add
pop
add
add
repz
(bad)
jmp
jnp
or
cmp
add
add
add
add
push
sub
mov
(bad)
jmp
and
add
add
int3
sti
(bad)
inc
push
cmp
std
(bad)
jmp
or
add
cmp
jg
add
add
add
add
adc
pop
add
push
or
xor
add
cmp
or
add
add
xchg
add
push
cmp
sbb
pop
and
add
pop
cmp
jmp
add
add
push
add
add
push
(bad)
inc
sbb
add
add
and
add
push
cmp
(bad)
jmp
adc
and
shl
mov
mov
adc
and
mov
add
adc
inc
and
add
test
cld
(bad)
jmp
(bad)
(bad)
inc
add
add
std
(bad)
(bad)
cmp
(bad)
call
cld
(bad)
(bad)
ds
(bad)
call
add
je
(bad)
(bad)
mov
add
add
add
add
(bad)
(bad)
(bad)
(bad)
sti
(bad)
dec
(bad)
(bad)
cmp
(bad)
dec
add
add
(bad)
call
std
(bad)
inc
cld
(bad)
(bad)
(bad)
cld
(bad)
call
cld
(bad)
jmp
(bad)
dec
add
pop
std
(bad)
dec
sti
(bad)
inc
add
add
add
add
cmp
(bad)
std
(bad)
(bad)
jle
add
add
or
sbb
add
cmp
dec
(bad)
(bad)
inc
jle
add
add
dec
add
add
add
add
outs
cli
(bad)
call
push
adc
cmp
(bad)
(bad)
call
cmp
(bad)
(bad)
inc
pop
jge
add
add
adc
add
sub
dec
cli
(bad)
jmp
or
pop
inc
or
add
inc
std
(bad)
call
(bad)
call
(bad)
jmp
(bad)
jmp
(bad)
jmp
(bad)
push
(bad)
(bad)
jnp
(bad)
inc
std
(bad)
call
add
add
cmp
cli
(bad)
call
add
add
add
les
add
retf
add
add
add
add
and
add
cmp
stc
(bad)
(bad)
cmp
jnp
add
add
push
add
push
and
xchg
add
push
cmp
stc
(bad)
jmp
jle
add
add
or
pop
add
add
cmp
adc
and
adc
and
add
add
cmps
stc
(bad)
(bad)
cmp
(bad)
inc
jae
add
push
jge
add
add
das
add
add
mov
(bad)
jmp
dec
or
and
push
rol
sbb
inc
push
add
add
(bad)
inc
(bad)
(bad)
call
(bad)
(bad)
dec
(bad)
(bad)
call
(bad)
(bad)
jmp
and
xchg
add
push
cmp
(bad)
jmp
sbb
pop
and
add
sub
cmp
pop
sbb
pop
cmp
std
(bad)
call
and
repnz
(bad)
call
or
rol
add
call
(bad)
(bad)
(bad)
call
adc
and
add
add
or
(bad)
(bad)
cmp
std
(bad)
inc
sub
add
sub
sub
sub
add
adc
or
cmp
add
add
add
sub
es
jle
add
add
pop
maxps
imul
arpl
maxps
imul
arpl
maxps
imul
or
xchg
pusha
push
add
add
add
add
sub
es
add
pop
add
add
xor
add
sub
add
sub
and
add
and
add
add
adc
add
push
bound
sub
cmp
add
jle
add
add
xor
add
xchg
pushf
sub
add
xor
test
add
add
adc
add
push
and
add
add
sbb
add
cmp
add
add
and
add
(bad)
jg
add
push
add
add
or
add
cmp
add
add
add
push
pop
and
cmp
add
add
add
das
add
add
add
pop
add
add
ja
add
jp
jnp
add
add
and
add
or
pop
jge
add
add
add
pushf
push
sub
push
add
and
add
add
cmp
and
loopne
and
add
add
mov
and
sbb
and
mov
add
add
add
or
pop
jge
add
add
add
add
cmp
add
pop
inc
lock
sbb
add
add
add
fcom
ss
cmp
add
or
add
add
(bad)
jmp
(bad)
(bad)
mov
(bad)
(bad)
inc
(bad)
(bad)
cmp
add
add
dec
push
add
or
add
add
add
(bad)
(bad)
dec
add
or
add
xor
(bad)
dec
add
add
add
add
add
add
(bad)
call
or
add
cmp
(bad)
(bad)
jmp
or
add
test
je
and
inc
or
add
retf
(bad)
(bad)
push
add
add
(bad)
(bad)
dec
(bad)
(bad)
inc
(bad)
jmp
(bad)
(bad)
jmp
add
add
add
cmp
(bad)
jle
add
add
add
add
add
cmp
(bad)
(bad)
cmp
add
jmp
and
jmp
popf
(bad)
(bad)
inc
and
add
inc
mov
add
add
cmp
call
or
jmp
and
add
add
xor
(bad)
jmp
add
sbb
push
add
adc
add
add
sub
es
and
add
add
ins
add
add
adc
add
add
pop
add
add
sbb
ret
add
add
cmp
add
pop
or
repnz
(bad)
jmp
inc
add
add
xor
cdq
add
push
adc
jnp
add
add
cmp
xor
add
sub
add
sub
sgdtd
add
and
call
or
add
or
add
dec
sub
dec
add
add
add
or
add
add
xor
add
or
add
inc
push
add
fisttp
add
adc
add
popf
or
add
(bad)
call
or
add
or
add
add
add
add
dec
add
add
or
add
add
xchg
or
add
or
add
add
add
add
mov
or
add
or
add
mov
add
add
add
add
or
add
or
add
or
add
push
add
ror
add
jno
add
dec
or
add
or
add
add
pop
add
add
or
add
or
add
or
add
or
add
or
add
(bad)
(bad)
(bad)
jmp
or
add
or
add
cmp
(bad)
(bad)
jmp
lods
mov
add
add
pop
and
add
add
push
cmp
add
add
sbb
xlat
add
add
add
add
(bad)
dec
jne
add
sbb
pop
pop
pop
call
add
into
(bad)
(bad)
jmp
pop
mov
dec
sbb
and
pop
inc
adc
add
mov
or
add
add
test
add
add
cdq
pop
add
loop
add
jns
add
add
add
jne
(bad)
dec
or
add
or
add
add
mov
or
add
or
(bad)
jmp
add
add
sub
popa
(bad)
(bad)
jmp
cmp
add
adc
je
add
add
jp
test
add
and
add
add
adc
add
push
inc
inc
adc
add
xor
(bad)
(bad)
cmp
or
add
add
add
and
add
add
cld
add
add
adc
add
pop
pop
inc
mov
push
add
add
add
(bad)
call
adc
and
add
cmp
std
(bad)
(bad)
cmp
pop
add
adc
sbb
or
and
add
cmp
std
(bad)
call
or
push
and
aam
(bad)
call
or
sbb
pop
push
dec
and
and
inc
push
add
add
add
add
add
add
(bad)
(bad)
dec
add
add
cdq
add
add
sbb
add
add
add
xchg
add
outs
add
add
add
add
add
add
add
add
add
add
add
sub
add
add
lock
call
(bad)
call
daa
and
dec
ret
fimul
imul
jle
add
add
add
add
dec
add
or
or
add
and
cmp
add
add
arpl
mov
dec
(bad)
(bad)
call
sbb
pop
xchg
pop
or
sbb
lods
sub
cmp
(bad)
call
sbb
pop
add
add
in
(bad)
(bad)
jle
add
add
add
add
dec
add
or
adc
jno
add
and
lds
add
sub
je
add
add
mov
mov
adc
add
adc
sbb
sbb
adc
(bad)
call
or
add
add
ja
add
adc
pop
push
clc
(bad)
(bad)
call
or
add
add
cld
add
add
ret
add
adc
adc
or
add
add
adc
into
(bad)
(bad)
call
or
add
adc
sbb
adc
pop
add
add
aaa
add
add
push
add
sub
adc
and
and
sbb
cwde
(bad)
(bad)
call
add
add
adc
cmp
pop
pop
xor
in
(bad)
(bad)
call
or
sbb
pop
add
push
adc
add
add
xchg
pop
adc
cmp
(bad)
call
push
adc
cmp
add
add
adc
scas
jmp
dec
sbb
and
inc
add
add
(bad)
(bad)
call
add
xor
add
add
push
add
add
sbb
add
add
add
add
add
add
add
add
add
add
add
daa
and
mov
add
pop
into
mov
popa
cmp
or
sbb
mov
mov
add
push
adc
and
mov
(bad)
(bad)
fisttp
add
es
jmp
dec
and
and
inc
add
add
(bad)
(bad)
call
add
add
push
add
add
adc
adc
and
xchg
sti
pop
and
mov
or
leave
(bad)
(bad)
(bad)
fisttp
add
add
pop
adc
fld
add
add
adc
and
jae
mov
dec
sbb
and
inc
add
add
(bad)
(bad)
inc
add
add
add
add
push
inc
add
add
add
add
add
add
add
add
add
add
add
daa
and
jle
pop
and
jb
popa
cmp
push
cmp
add
add
adc
and
jnp
and
and
pop
inc
or
add
dec
add
add
add
add
add
add
(bad)
(bad)
(bad)
cmp
add
adc
add
in
add
add
add
add
cmp
add
add
fwait
stos
ss
call
adc
add
add
jl
add
cmp
add
add
cmp
add
add
and
push
dec
cmp
daa
and
fucomip
pop
and
push
push
fisub
jge
(bad)
call
pop
and
add
add
add
jp
add
adc
jne
add
add
jge
add
adc
and
cmp
cmp
(bad)
(bad)
call
and
add
add
(bad)
push
add
add
add
add
add
add
add
add
add
add
add
into
add
add
add
add
cmp
add
cmp
(bad)
(bad)
call
adc
add
add
jg
add
and
add
add
cmp
add
and
out
sub
add
lods
xchg
sbb
es
(bad)
(bad)
call
and
sbb
sub
js
add
adc
sub
add
adc
and
add
add
cwde
add
push
cmp
add
add
or
add
sbb
and
push
add
add
cld
add
add
adc
and
add
add
out
add
add
adc
add
adc
sub
push
and
add
add
(bad)
add
add
pop
pop
or
cmp
(bad)
jmp
and
mov
adc
add
add
or
sbb
adc
sbb
add
sub
cwde
add
push
cmp
(bad)
(bad)
jmp
and
add
add
xchg
add
adc
and
xor
pop
and
adc
(bad)
call
pcmpeqw
jp
add
and
add
add
cmp
add
and
mov
dec
cmp
std
(bad)
call
adc
and
jnp
fs
std
(bad)
call
adc
and
add
pop
cmp
adc
jne
add
add
add
add
add
and
push
add
push
sub
add
adc
cmp
(bad)
jmp
add
add
dec
sub
dec
add
add
add
(bad)
(bad)
dec
add
add
(bad)
(bad)
call
(bad)
(bad)
call
(bad)
jmp
(bad)
(bad)
jmp
(bad)
(bad)
(bad)
jmp
push
(bad)
(bad)
inc
(bad)
(bad)
mov
(bad)
(bad)
jmp
add
add
add
add
cmp
pcmpeqw
sbb
add
push
and
add
add
xchg
(bad)
(bad)
(bad)
cmp
std
(bad)
call
adc
add
add
add
push
adc
fld
add
add
fld
add
add
adc
and
push
fwait
dec
and
and
inc
add
(bad)
(bad)
inc
add
add
add
add
jne
add
(bad)
pop
add
adc
and
and
cmp
xor
add
add
push
jne
add
add
add
or
push
jne
add
add
adc
je
out
pop
cmp
inc
push
add
add
add
add
add
add
add
add
daa
and
adc
pop
pop
and
jmp
(bad)
(bad)
add
add
adc
and
add
add
add
adc
add
add
adc
and
add
cmp
idiv
jmp
dec
inc
dec
bound
add
movs
push
jo
cmp
clc
(bad)
call
daa
and
xor
cmp
idiv
call
daa
and
jae
in
and
nop
inc
ret
call
add
and
add
add
scas
add
add
pop
add
sub
aaa
add
push
and
add
cmp
adc
and
add
add
xor
call
daa
and
out
and
cmp
je
add
sbb
pop
call
and
jecxz
add
sub
add
sub
push
(bad)
jmp
or
add
cmp
(bad)
call
daa
and
sub
mov
(bad)
popa
cmp
(bad)
call
adc
add
and
(bad)
call
or
add
add
adc
adc
and
add
cmp
idiv
call
daa
and
inc
dec
sub
scas
adc
jmp
adc
inc
sbb
add
push
add
sbb
add
(bad)
(bad)
(bad)
cmp
add
stos
add
add
add
pop
idiv
call
add
add
add
sub
(bad)
jmp
(bad)
(bad)
inc
add
add
add
add
cmc
(bad)
dec
add
cdq
add
add
add
add
add
add
add
add
add
add
add
add
and
add
add
jbe
(bad)
call
sbb
pop
add
xchg
adc
pop
bound
sbb
add
pop
cmp
(bad)
jmp
sbb
push
cmp
(bad)
call
or
call
add
add
pop
and
add
add
stos
add
add
adc
add
adc
and
daa
cmc
(bad)
call
es
push
add
add
add
nop
add
add
add
add
add
add
cwde
add
push
cmp
hlt
(bad)
(bad)
cmp
hlt
(bad)
(bad)
cmp
(bad)
(bad)
call
or
je
add
sbb
test
add
xor
add
cmp
hlt
(bad)
jmp
or
dec
and
and
inc
add
add
inc
add
add
add
add
(bad)
(bad)
jmp
xor
test
or
push
and
add
add
fwait
hlt
(bad)
call
adc
push
and
add
cmp
pop
pop
es
adc
and
add
add
jl
(bad)
call
daa
and
fcom
mov
mov
inc
add
add
xor
add
sub
jne
add
add
sbb
add
and
add
add
adc
add
and
add
and
add
sub
and
add
add
cwde
add
push
cmp
hlt
(bad)
(bad)
cmp
hlt
(bad)
(bad)
cmp
(bad)
(bad)
dec
je
add
sbb
or
add
and
add
add
pushf
add
add
push
add
sub
and
add
and
add
add
cmp
repz
jmp
adc
and
mov
repz
and
cmp
cmc
(bad)
call
adc
and
add
add
cmp
repz
jmp
cmp
std
(bad)
(bad)
jle
add
add
adc
jae
add
and
add
sbb
add
and
add
add
movs
repz
call
add
add
adc
pop
pop
pop
adc
cmp
sbb
add
adc
and
add
add
test
(bad)
jmp
rol
jbe
mov
(bad)
(bad)
jle
add
or
add
sbb
add
cmp
(bad)
call
pop
and
or
adc
and
add
add
push
repz
call
adc
push
and
add
add
inc
repz
call
or
push
cmp
(bad)
call
or
repnz
(bad)
call
add
add
add
mov
add
add
or
add
cmp
repnz
jmp
xor
add
cmp
repz
call
pop
pop
pop
xchg
adc
and
add
add
cmp
repnz
jmp
cmp
repz
call
adc
push
and
add
add
jmp
pop
pop
je
and
push
cmp
cld
(bad)
call
pop
pop
pop
xchg
sbb
in
(bad)
(bad)
dec
je
add
sbb
or
pop
call
add
xchg
add
push
cmp
cmp
or
add
sbb
add
add
add
add
mov
(bad)
(bad)
cmp
sbb
pop
and
add
sub
je
(bad)
(bad)
cmp
(bad)
(bad)
jle
add
add
pop
push
sub
fdivr
(bad)
jmp
and
add
add
push
repnz
call
or
push
and
add
add
cmp
(bad)
jmp
and
mov
repz
call
and
and
fwait
add
push
pop
lea
adc
adc
add
sbb
pop
sub
adc
je
add
sbb
mov
cdq
add
add
sldt
sub
add
cwde
add
push
cmp
icebp
(bad)
jmp
pop
or
push
cmp
sti
(bad)
call
sbb
dec
xchg
adc
pop
dec
xchg
pop
cmp
(bad)
(bad)
call
add
add
jmp
add
and
or
add
push
ds
jmp
adc
add
cmp
out
or
cmp
repnz
call
adc
push
and
add
add
call
xchg
and
add
add
push
and
add
add
test
(bad)
call
pop
and
add
add
push
cmp
(bad)
call
cmp
(bad)
(bad)
call
add
add
loopne
add
and
or
add
cmp
(bad)
(bad)
jmp
add
cmp
(bad)
jmp
cmp
(bad)
call
add
add
or
pop
and
add
add
test
add
sub
add
push
add
add
cmp
icebp
(bad)
jmp
adc
and
mov
xchg
hlt
sti
adc
(bad)
call
add
sub
add
push
or
sbb
add
cmp
lock
(bad)
cmp
cli
(bad)
call
adc
and
add
add
loopne
(bad)
(bad)
cmp
cli
(bad)
call
or
add
pop
je
scas
add
add
loopne
add
sub
add
sub
inc
inc
adc
and
add
add
xchg
add
push
cmp
iret
jb
jns
fdiv
(bad)
call
daa
and
sub
and
cmp
icebp
(bad)
(bad)
jle
add
add
sbb
sub
jge
(bad)
(bad)
cmp
add
adc
and
push
fisttp
cmp
adc
add
sub
inc
add
add
add
mov
add
add
add
cmp
add
add
add
mov
add
add
add
cmp
add
add
add
mov
add
add
add
push
add
add
add
add
push
add
push
or
add
add
add
add
add
xor
add
add
add
add
sub
es
add
add
add
add
xor
add
add
adc
add
push
sub
cwde
add
push
cmp
add
and
add
add
sbb
add
sub
cmp
add
and
add
add
push
or
dec
add
add
add
add
add
add
add
add
add
(bad)
(bad)
jmp
add
add
add
add
cmp
(bad)
(bad)
(bad)
jle
add
add
add
mov
and
add
add
xchg
add
push
cmp
(bad)
(bad)
jmp
sbb
or
pop
fld
pop
sbb
inc
push
add
add
add
add
add
add
add
add
add
add
(bad)
(bad)
jmp
cwde
add
push
sub
pusha
add
add
and
add
add
cmp
add
add
cmp
add
add
inc
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
dec
or
dec
add
add
add
add
add
add
add
add
cmp
add
add
and
add
add
xlat
(bad)
(bad)
jmp
movs
jge
js
push
(bad)
(bad)
call
add
cmp
sub
iret
add
add
add
add
iret
add
add
add
aam
add
xchg
pop
and
pushf
pop
or
dec
cmp
(bad)
(bad)
inc
pop
add
add
add
add
push
cmp
and
inc
cmp
push
add
add
push
dec
xchg
jp
es
(bad)
(bad)
call
pop
and
jno
mov
and
enter
(bad)
(bad)
call
cmp
jne
add
add
add
sbb
add
and
add
add
sbb
add
cmp
add
add
je
add
add
add
imul
sub
add
sub
fnsave
adc
and
dec
push
pop
fld
pop
sbb
inc
push
add
add
(bad)
(bad)
call
add
add
add
add
add
add
imul
add
adc
and
(bad)
(bad)
(bad)
call
pop
and
dec
movs
inc
pop
and
jmp
popa
cmp
push
inc
push
add
add
add
add
add
add
add
add
add
add
add
add
out
ficom
das
cmp
jne
add
add
or
add
and
pushf
push
jnp
cmp
add
add
jno
dec
jl
cmp
(bad)
call
cmp
jne
add
add
add
push
fadd
je
add
add
add
inc
sbb
add
add
add
add
arpl
add
fld
add
mov
add
add
add
adc
or
add
add
sub
es
add
add
adc
and
add
je
add
sub
add
sub
sub
add
adc
or
push
add
add
add
adc
add
push
and
cwde
add
push
cmp
add
add
sbb
and
add
cmp
add
add
or
lock
cmp
or
adc
add
cmp
or
add
add
cmp
add
add
mov
pop
and
add
add
and
add
sub
add
and
add
add
cmp
add
add
or
push
mov
mov
cmp
add
or
xor
call
repz
mov
add
sbb
add
and
add
add
test
pop
je
imul
pop
or
adc
add
cmp
add
push
stc
add
push
jae
add
or
lahf
add
push
and
add
add
cwde
add
push
cmp
add
es
rcr
add
inc
or
add
add
add
sbb
add
jns
add
inc
(bad)
(bad)
inc
add
add
add
add
sldt
add
aaa
add
add
and
xchg
lahf
cs
and
rol
nop
popa
cmp
sbb
pop
sbb
sub
sahf
add
push
cmp
(bad)
jmp
add
push
add
dec
add
add
add
(bad)
(bad)
push
(bad)
(bad)
inc
add
cmps
(bad)
(bad)
call
add
add
(bad)
(bad)
jmp
(bad)
(bad)
dec
(bad)
(bad)
push
(bad)
(bad)
jmp
add
add
(bad)
(bad)
jmp
add
add
add
and
add
add
xchg
add
push
cmp
imul
add
sbb
pop
sbb
sub
movs
add
add
fadd
add
sub
push
add
add
cmp
(bad)
jmp
and
and
fst
popa
and
inc
push
add
add
add
add
add
daa
(bad)
(bad)
jmp
(bad)
(bad)
(bad)
(bad)
(bad)
dec
(bad)
(bad)
call
(bad)
jmp
add
add
(bad)
(bad)
push
add
add
sub
fs
(bad)
jmp
and
add
add
cmp
(bad)
jmp
and
xchg
(bad)
(bad)
inc
and
add
inc
and
add
jae
add
or
adc
add
and
add
add
push
add
sub
or
add
sub
sar
(bad)
jmp
and
pop
(bad)
(bad)
inc
and
add
add
pop
add
sub
or
scas
(bad)
(bad)
dec
and
mov
pop
and
sahf
(bad)
bound
xor
(bad)
inc
push
sub
or
add
cmp
and
pop
xor
and
inc
push
xchg
popa
cmp
(bad)
(bad)
inc
and
add
and
dec
add
or
test
add
add
add
sub
add
add
cmp
(bad)
dec
and
lods
push
xchg
pop
and
cmp
(bad)
(bad)
jmp
add
adc
or
xchg
add
add
add
adc
add
push
and
add
cmp
add
add
mov
jne
add
sbb
xchg
push
jne
add
sbb
xchg
cmp
add
add
adc
add
and
add
add
cmp
add
add
adc
and
sub
pop
and
mov
mul
sbb
and
add
add
add
add
sub
add
sub
rol
add
and
add
sub
and
add
add
pop
add
adc
and
mov
cld
outs
aaa
stc
popa
cmp
add
add
add
add
loope
mov
cmp
add
add
add
add
add
or
add
cmp
add
call
scas
add
add
adc
add
add
pop
cmp
add
es
add
add
push
and
add
add
sub
add
cmp
add
add
and
add
add
rol
add
sub
add
sub
dec
pop
sub
add
sub
sub
xchg
add
push
cmp
(bad)
jmp
and
add
add
repnz
add
(bad)
int
add
dec
add
add
pop
and
add
leave
pop
and
cmp
add
add
or
add
add
cmp
add
add
sbb
add
ins
add
add
or
repnz
(bad)
call
sub
pop
pop
or
or
cmps
add
add
add
add
add
add
cwde
add
push
cmp
and
dec
jg
cmp
add
add
je
add
sbb
add
je
add
sbb
add
add
add
add
add
add
pop
and
scas
es
pop
and
in
xchg
mov
mov
add
adc
std
add
add
add
add
add
add
(bad)
jmp
add
pop
(bad)
(bad)
call
call
(bad)
dec
add
add
add
add
(bad)
(bad)
(bad)
in
(bad)
(bad)
(bad)
cmp
(bad)
jmp
or
add
dec
or
dec
add
add
add
(bad)
call
(bad)
dec
add
add
(bad)
(bad)
mov
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
push
(bad)
(bad)
mov
(bad)
(bad)
inc
add
add
std
(bad)
dec
add
add
(bad)
(bad)
jmp
add
add
add
add
add
add
cmp
shr
les
and
and
pop
inc
or
add
adc
(bad)
call
(bad)
(bad)
push
(bad)
(bad)
mov
add
add
std
(bad)
jmp
add
add
(bad)
(bad)
push
(bad)
(bad)
inc
std
(bad)
jmp
adc
add
cmp
(bad)
jmp
mov
cmp
add
add
daa
lock
inc
and
(bad)
call
pop
and
and
cdq
pop
popa
cmp
add
add
mov
sub
jne
add
sbb
dec
add
add
adc
add
cmp
(bad)
(bad)
(bad)
cmp
pop
jne
add
sbb
add
and
add
add
jecxz
(bad)
call
push
and
and
adc
adc
add
cmp
(bad)
(bad)
call
adc
jo
(bad)
call
add
add
jmp
or
add
add
cmp
or
add
push
add
add
cmp
adc
add
add
xor
(bad)
call
push
and
add
xchg
pop
outs
pop
cmp
(bad)
(bad)
call
sub
add
adc
or
add
add
add
adc
add
push
and
add
add
lahf
add
add
or
add
push
pop
pop
or
pop
add
add
mov
add
add
pop
adc
and
add
add
jge
add
and
add
add
pop
popa
and
pop
inc
or
add
into
add
add
add
cmps
add
add
(bad)
(bad)
call
add
inc
add
add
add
mov
add
ins
add
add
add
add
or
add
sub
xor
add
es
or
add
hlt
(bad)
(bad)
inc
add
push
add
add
ds
add
add
cmp
add
and
cmp
add
add
and
mov
push
add
add
dec
add
cmp
(bad)
call
or
add
cwde
add
push
cmp
add
add
rol
add
pop
or
add
add
js
add
xchg
push
pop
cmp
(bad)
(bad)
inc
add
or
add
add
adc
add
pop
cmp
and
leave
push
sbb
and
(bad)
(bad)
jle
add
add
add
add
xchg
add
add
pop
adc
and
add
add
cmp
add
cmp
add
into
add
add
xchg
pop
or
add
cmp
add
es
or
add
cmp
and
add
add
add
add
adc
(bad)
call
add
add
add
inc
add
add
add
add
add
add
push
or
cmp
add
add
push
pop
add
or
add
add
add
(bad)
(bad)
call
add
or
(bad)
dec
(bad)
(bad)
fsin
(bad)
call
(bad)
(bad)
(bad)
jl
(bad)
(bad)
jl
add
xor
(bad)
(bad)
jmp
(bad)
push
add
add
add
call
call
(bad)
jmp
add
and
add
cmp
push
and
fwait
mov
pop
and
xchg
xor
(bad)
dec
inc
or
add
les
add
ss
(bad)
jmp
add
add
add
add
(bad)
(bad)
inc
(bad)
(bad)
(bad)
mov
(bad)
(bad)
jmp
add
add
add
add
or
add
cmp
(bad)
call
push
and
push
pop
and
(bad)
jl
popa
cmp
std
(bad)
call
or
add
add
cmp
(bad)
(bad)
inc
add
add
or
pop
(bad)
(bad)
(bad)
jle
add
add
add
add
add
pop
cmp
adc
and
and
bound
std
(bad)
call
push
and
cmp
or
popa
cmp
(bad)
call
add
mov
add
xchg
or
push
cmp
(bad)
inc
add
or
sar
(bad)
jmp
push
add
add
cmp
adc
or
add
pop
or
call
add
add
add
out
(bad)
inc
sub
push
cmp
(bad)
jmp
or
add
cmp
(bad)
call
or
call
hlt
(bad)
(bad)
inc
sub
add
xor
add
add
adc
add
push
add
dec
add
push
add
dec
add
push
pop
adc
sub
add
sbb
or
add
add
adc
add
push
and
add
add
aaa
add
add
aas
or
mov
or
pop
inc
add
add
(bad)
(bad)
dec
add
add
add
cmp
add
add
add
dec
or
dec
add
add
add
add
add
add
(bad)
(bad)
jmp
add
add
add
add
add
and
add
add
cmp
(bad)
(bad)
jmp
add
test
add
and
add
add
cwde
add
push
cmp
or
add
or
add
add
cmp
adc
or
add
add
add
add
add
add
add
add
add
add
add
add
or
add
and
add
add
jno
(bad)
call
or
cs
imul
pop
push
popa
cmp
(bad)
inc
push
and
add
add
push
(bad)
(bad)
call
adc
test
pushf
pop
mov
or
or
or
add
(bad)
(bad)
(bad)
jmp
add
mov
add
pop
add
add
add
fild
add
sbb
add
scas
add
add
add
sub
cwde
add
push
cmp
add
and
add
add
test
add
cmp
push
add
and
add
add
mov
and
add
push
pop
and
sahf
add
add
and
add
and
add
add
and
add
cmp
add
sbb
add
push
add
add
xor
add
and
(bad)
(bad)
inc
and
je
add
and
add
add
add
sub
inc
add
add
add
add
dec
or
dec
add
add
add
(bad)
dec
add
add
(bad)
call
add
add
add
add
(bad)
(bad)
call
add
add
add
add
cmp
(bad)
(bad)
jmp
mov
je
cmp
(bad)
(bad)
inc
add
and
add
add
jo
add
sub
add
sub
pop
pop
pop
pop
push
sub
add
sub
or
add
pop
cmp
and
add
(bad)
call
or
inc
rcl
pop
and
repz
popa
cmp
adc
or
add
cmp
(bad)
jmp
add
cmp
mov
(bad)
call
add
pop
add
add
(bad)
(bad)
call
(bad)
(bad)
jmp
add
add
add
add
(bad)
(bad)
call
(bad)
(bad)
(bad)
jns
(bad)
(bad)
cmp
(bad)
(bad)
jmp
and
add
add
sub
(bad)
call
or
jp
pop
ret
dec
ror
mov
(bad)
inc
add
pop
add
push
or
add
add
cmp
(bad)
(bad)
call
or
loop
pop
lock
and
cmp
(bad)
(bad)
fnsave
adc
and
in
rcl
and
adc
sbb
inc
push
add
add
(bad)
(bad)
push
add
add
add
add
add
add
add
outs
add
add
adc
and
(bad)
(bad)
(bad)
inc
jne
add
add
or
add
and
cmp
cmp
add
add
dec
mov
cmp
inc
pop
add
add
add
add
add
add
add
add
add
add
xor
pop
adc
ja
(bad)
call
or
mov
push
sub
aam
fisub
cmp
call
cmp
add
add
add
push
fcom
adc
push
sub
and
(bad)
jmp
and
add
cmp
cmp
push
cld
(bad)
inc
jne
add
sbb
add
add
add
add
add
hlt
add
add
add
add
add
add
add
add
xor
pop
add
add
add
adc
add
push
and
add
cmp
and
cmp
mov
and
and
pop
fdivr
cmp
and
add
clc
pop
jge
add
add
add
add
cmp
add
and
push
cmp
or
or
add
push
cmp
add
es
or
add
add
cmp
add
and
adc
inc
cmp
add
and
add
jnp
add
add
pop
pop
pop
pop
fs
add
add
cmp
jmp
add
add
dec
add
dec
add
add
add
(bad)
dec
add
push
add
add
add
xchg
(bad)
(bad)
jmp
add
add
(bad)
inc
pop
add
add
cmp
(bad)
(bad)
jmp
and
add
xor
adc
or
pop
inc
pop
add
add
(bad)
(bad)
dec
(bad)
call
add
sbb
add
sbb
(bad)
push
(bad)
call
(bad)
(bad)
call
sub
das
add
add
and
add
add
test
(bad)
(bad)
cmp
add
pop
inc
add
(bad)
(bad)
push
(bad)
(bad)
(bad)
cmp
(bad)
push
(bad)
(bad)
push
(bad)
(bad)
(bad)
cmp
and
push
(bad)
(bad)
dec
and
sub
pop
and
das
xchg
popa
cmp
(bad)
jmp
sbb
push
add
add
adc
add
push
sub
xchg
add
push
cmp
and
add
add
adc
add
sbb
jmp
jo
ins
xchg
popa
and
inc
pop
add
add
add
jmp
add
add
cmp
(bad)
(bad)
call
sub
pushf
add
add
and
add
add
cwde
add
push
cmp
add
cmp
add
and
xchg
aad
stos
(bad)
(bad)
call
pop
and
aam
inc
pop
and
cmp
je
add
add
push
add
add
and
add
add
daa
add
sub
push
add
add
cmp
add
add
and
rol
cmp
(bad)
call
or
add
add
add
add
dec
or
dec
add
add
add
add
sar
inc
add
add
add
jle
(bad)
call
add
add
add
cmp
add
add
and
iret
(bad)
(bad)
jmp
jb
out
jecxz
sbb
(bad)
inc
je
add
add
inc
add
add
dec
add
add
sub
add
and
add
sub
mov
pushf
(bad)
(bad)
(bad)
cmp
add
or
add
add
(bad)
(bad)
push
(bad)
push
(bad)
(bad)
jmp
add
add
sub
push
(bad)
(bad)
cmp
(bad)
jmp
loopne
sub
(bad)
fstp
adc
xor
add
xchg
popa
and
inc
add
(bad)
(bad)
(bad)
aas
add
add
add
add
add
add
pop
add
add
add
pop
add
add
add
add
add
add
add
add
add
add
add
pop
add
add
add
add
push
lahf
push
cmp
adc
xor
add
inc
je
add
add
or
add
and
sbb
add
and
cmp
(bad)
call
cmp
(bad)
(bad)
inc
jne
add
add
add
push
fcomp
adc
cmp
add
and
add
add
push
or
dec
add
add
add
add
add
add
das
add
add
std
(bad)
dec
add
add
add
and
add
cmp
(bad)
(bad)
call
push
inc
add
add
add
add
add
add
add
add
add
add
add
add
mov
(bad)
inc
and
add
and
add
add
sub
add
pop
sub
cmp
and
add
add
mov
(bad)
jmp
add
add
add
add
add
push
add
add
add
jl
add
lahf
add
add
add
add
xor
add
add
add
add
adc
add
push
and
add
add
movs
add
add
add
dec
add
add
adc
add
cmp
add
adc
add
cmp
dec
add
add
jnp
add
add
jnp
add
add
stos
add
add
add
arpl
add
and
ret
and
mov
retf
popa
and
inc
pop
add
add
add
jnp
add
add
add
iret
(bad)
(bad)
call
add
pop
add
add
sub
pop
add
add
and
add
add
xchg
add
push
cmp
add
add
push
or
pop
add
add
and
cmp
(bad)
(bad)
inc
cmp
and
add
add
cwde
add
push
cmp
add
add
call
add
jp
and
fnstenv
popa
cmp
(bad)
(bad)
jle
add
add
add
jbe
add
and
add
add
cmp
push
add
cmps
(bad)
(bad)
jmp
or
add
cmp
push
jge
add
add
adc
add
cmp
or
fild
add
adc
adc
inc
and
add
add
pop
pop
adc
xchg
and
add
add
jnp
add
add
pop
pop
bound
push
add
add
or
add
sub
push
add
add
adc
dec
pop
and
ins
es
cmp
(bad)
(bad)
dec
pop
pop
xchg
or
das
popf
jns
cmp
(bad)
(bad)
call
cmp
(bad)
(bad)
jmp
ja
add
jp
add
and
add
add
pop
add
add
pop
add
add
add
add
adc
add
cmp
add
add
inc
add
add
and
add
pop
jge
add
add
push
add
add
in
add
and
test
(bad)
cmp
call
or
or
add
cmp
add
add
add
xor
add
and
sbb
and
(bad)
dec
inc
or
add
add
(bad)
(bad)
(bad)
std
(bad)
call
(bad)
jmp
(bad)
jmp
add
add
add
add
(bad)
(bad)
jp
(bad)
push
(bad)
(bad)
inc
add
cmp
add
and
add
add
cmp
add
adc
pop
add
add
cmp
add
gs
sbb
out
(bad)
(bad)
jmp
xchg
add
jp
pop
pop
cmp
add
add
cmp
add
or
inc
xchg
pop
jl
or
or
cmp
add
add
push
or
push
(bad)
call
cmp
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
cmp
add
add
push
push
add
or
add
add
add
inc
jmp
(bad)
call
(bad)
(bad)
(bad)
fscale
(bad)
dec
add
xchg
std
(bad)
inc
(bad)
(bad)
(bad)
mov
(bad)
(bad)
jmp
(bad)
jmp
std
(bad)
push
(bad)
(bad)
jmp
(bad)
dec
std
(bad)
call
add
and
add
add
cmp
sub
and
add
add
mov
(bad)
jmp
adc
or
and
add
add
add
sub
es
add
add
pop
pop
pop
fs
add
add
and
add
pop
jge
add
add
adc
or
add
add
sub
es
jle
add
add
das
add
add
add
add
push
or
jne
add
add
adc
sub
push
jle
add
add
sub
add
jle
add
add
inc
xchg
pushf
sub
adc
(bad)
mov
add
xor
add
push
sub
xchg
add
push
cmp
add
and
add
add
cwde
add
push
cmp
add
add
dec
xlat
mov
add
inc
add
add
add
add
add
add
add
add
add
add
and
add
add
imul
add
add
or
add
pop
add
add
add
loop
test
and
test
add
add
add
add
add
add
or
add
add
cmp
add
add
add
mov
repz
and
cmp
add
or
add
add
mov
add
and
add
add
push
add
add
add
add
add
add
(bad)
(bad)
jmp
(bad)
jmp
add
jnp
(bad)
dec
add
pushf
add
add
or
add
sub
(bad)
(bad)
(bad)
jmp
and
mov
(bad)
and
xchg
jp
popa
and
inc
or
add
retf
(bad)
(bad)
jmp
(bad)
(bad)
jmp
add
jb
(bad)
inc
(bad)
(bad)
dec
(bad)
push
add
add
and
add
cmp
shl
inc
jnp
add
add
push
jne
add
sbb
add
add
add
sub
inc
add
add
sub
add
and
add
add
dec
(bad)
(bad)
(bad)
jle
add
add
cmp
(bad)
jmp
and
add
add
aaa
(bad)
(bad)
jmp
sti
jbe
sar
(bad)
(bad)
call
add
addr16
ins
int
and
push
fldenv
pop
(bad)
(bad)
inc
je
add
sbb
add
push
sub
add
sbb
or
cmp
add
add
add
sub
es
and
add
add
fadd
add
sub
inc
dec
add
push
jae
add
or
mov
add
and
add
add
sub
add
fld
add
add
fld
add
add
add
add
add
add
add
das
xor
push
push
add
add
xor
add
add
add
add
adc
add
push
sub
add
pop
jne
add
add
push
add
push
pop
jne
add
add
lea
add
and
add
add
sub
add
or
scas
add
add
or
leave
and
and
inc
push
add
add
add
bound
add
sar
(bad)
inc
add
add
add
cmp
add
or
add
add
add
add
pop
add
add
add
add
add
mov
(bad)
cmp
add
stc
sub
ins
call
(bad)
inc
je
add
add
or
add
and
fsub
add
push
daa
push
in
and
(bad)
call
or
jmp
call
cmp
(bad)
(bad)
inc
je
add
add
add
push
fadd
je
add
sbb
add
add
add
or
sub
add
adc
or
sbb
add
add
add
sub
es
add
add
add
jnp
add
add
add
add
add
arpl
add
xor
add
add
aaa
add
adc
add
push
and
add
add
mov
and
setno
sbb
pop
cmp
add
and
add
add
jmp
or
adc
dec
add
add
mov
add
or
add
adc
push
adc
and
add
add
push
push
add
sub
and
add
cmp
add
pop
sbb
pop
and
add
cmp
add
cmp
movhps
adc
add
add
add
sub
xor
cmp
add
or
ds
(bad)
jmp
push
add
add
sbb
adc
or
add
cmp
add
add
adc
pop
das
xchg
pop
or
pop
cmp
add
cmp
(bad)
(bad)
dec
jne
add
add
dec
add
push
push
add
add
fild
add
jle
add
add
and
sub
cwde
add
push
cmp
add
add
and
xor
lds
stos
or
add
jne
add
add
je
add
add
push
add
and
lahf
add
add
adc
and
add
add
xchg
add
add
je
add
add
push
add
push
and
add
sub
ja
add
adc
pop
sub
pop
cmp
and
cmp
(bad)
(bad)
call
add
add
push
or
or
inc
add
add
jne
add
add
dec
add
push
adc
and
add
add
cmp
add
add
push
or
add
or
add
sbb
and
add
sub
add
cmp
add
and
add
add
push
xor
dec
add
add
add
(bad)
call
add
or
add
jmp
add
add
jae
add
sti
or
add
or
add
or
add
jno
add
loope
add
test
add
cmp
inc
add
es
add
mov
or
add
or
add
pop
add
add
data16
add
or
add
add
dec
or
add
add
add
add
add
add
jmp
add
add
add
std
(bad)
(bad)
cmp
add
or
add
or
add
add
add
add
pop
(bad)
(bad)
inc
or
add
or
(bad)
(bad)
cmp
add
sub
(bad)
(bad)
fisttp
add
test
add
xor
or
add
add
add
xor
add
or
add
or
add
(bad)
(bad)
cmp
(bad)
(bad)
mov
add
add
add
mov
add
inc
add
std
(bad)
call
add
std
(bad)
push
add
jge
add
mov
add
lahf
or
add
or
add
std
(bad)
(bad)
clc
add
add
push
add
jns
add
sar
(bad)
inc
add
add
add
add
or
add
push
add
and
add
add
cmp
daa
add
add
dec
add
push
adc
and
add
sub
gs
(bad)
(bad)
cmp
(bad)
call
cs
loopne
sbb
ja
or
or
add
and
jmp
fwait
add
push
sub
and
rol
cmp
or
add
jne
add
add
jg
add
and
add
add
sbb
(bad)
(bad)
cmp
add
adc
jnp
jge
inc
in
pop
add
and
add
add
std
std
(bad)
call
and
or
add
add
in
std
(bad)
dec
je
add
add
or
add
push
adc
pop
pop
pop
xor
push
add
sub
and
add
add
enter
adc
sbb
add
pop
and
cmp
sbb
and
imul
pop
add
popa
and
inc
add
add
add
add
mov
(bad)
(bad)
jmp
cwde
add
push
sub
rol
add
and
add
add
xor
add
and
cmps
mov
cmp
sbb
add
add
add
lea
add
adc
cmp
add
add
add
add
dec
das
add
or
add
add
add
add
outs
add
add
add
add
add
add
add
add
add
and
add
cmp
(bad)
(bad)
call
and
xchg
add
xchg
and
adc
and
xchg
add
push
cmp
and
and
call
sbb
add
sbb
pop
add
push
or
add
xchg
(bad)
(bad)
(bad)
cmp
add
add
and
add
add
(bad)
(bad)
dec
(bad)
dec
(bad)
dec
(bad)
dec
(bad)
dec
(bad)
(bad)
cmp
(bad)
(bad)
jmp
and
add
add
pusha
(bad)
(bad)
jmp
fdivr
aad
out
(bad)
(bad)
fnstsw
adc
shl
pusha
pop
add
popa
and
inc
push
add
add
(bad)
(bad)
inc
add
add
add
jne
add
xor
add
cmp
add
adc
add
add
add
add
or
add
or
add
or
add
push
add
add
add
and
test
(bad)
call
sbb
add
add
or
add
and
cmp
add
add
sub
test
cmp
and
popa
xor
cdq
cmps
or
cmp
(bad)
call
adc
loop
arpl
(bad)
call
out
(bad)
(bad)
call
sbb
add
sub
sbb
daa
and
add
cmp
sti
(bad)
jmp
mov
stos
push
add
adc
inc
and
add
pop
add
add
add
mov
pop
add
mov
add
or
add
add
add
cli
(bad)
push
stc
(bad)
push
add
add
cli
(bad)
dec
cli
(bad)
inc
or
add
or
add
add
add
add
add
pop
add
ds
(bad)
push
add
xor
(bad)
(bad)
fdivr
(bad)
inc
add
add
fiadd
add
call
push
add
add
add
dec
or
add
add
add
std
(bad)
jmp
xor
add
cmp
sti
(bad)
call
sbb
pop
and
add
pop
cmp
sti
(bad)
jmp
cmp
(bad)
call
pop
je
add
sbb
push
je
add
sbb
sub
add
adc
and
add
add
in
(bad)
(bad)
cmp
or
sbb
add
push
adc
and
add
sub
ret
cli
(bad)
(bad)
cmp
and
mov
add
xchg
adc
and
add
add
and
add
cmp
and
pop
and
add
add
xchg
cli
(bad)
(bad)
cmp
add
add
and
and
add
popa
cmp
daa
and
add
add
outs
cli
(bad)
jmp
inc
cmps
and
and
add
push
pusha
inc
lea
stos
cs
pop
popa
cmp
add
pop
and
jns
cmp
add
cmp
(bad)
(bad)
inc
je
add
add
je
add
add
push
add
push
cmp
daa
add
add
cwde
add
push
cmp
pop
adc
pop
and
add
add
cwde
add
push
cmp
cli
(bad)
(bad)
cmp
stc
(bad)
call
and
lods
add
add
add
pop
and
add
cmp
stc
(bad)
dec
je
add
add
dec
add
push
adc
and
add
cmp
stc
(bad)
call
adc
je
add
sbb
adc
adc
and
add
sub
add
and
stos
stc
(bad)
dec
je
add
add
dec
add
push
adc
and
add
add
xchg
add
push
cmp
and
add
add
adc
jne
add
sbb
sbb
add
sub
add
adc
cmp
add
cmp
(bad)
(bad)
cmp
add
push
dec
add
enter
and
add
cmp
(bad)
(bad)
cmp
sti
(bad)
call
add
sbb
mov
add
add
cmp
stc
(bad)
jmp
cmp
(bad)
call
lea
add
add
add
mov
add
adc
and
add
add
push
stc
(bad)
call
or
or
add
cld
clc
(bad)
call
and
pop
xchg
adc
and
add
add
jmp
(bad)
call
adc
adc
add
and
add
add
cmp
clc
(bad)
jmp
jle
add
add
and
add
cmp
adc
and
and
cmp
add
add
daa
inc
pop
add
add
add
or
(bad)
inc
(bad)
inc
add
push
add
add
inc
pop
add
and
add
cmp
(bad)
call
and
setno
pop
cmp
and
xor
bound
(bad)
call
pop
push
cmp
add
and
dec
clc
(bad)
(bad)
cmp
adc
adc
adc
and
add
push
cmp
clc
(bad)
jmp
cmp
(bad)
call
adc
sbb
add
push
adc
inc
add
add
sbb
(bad)
call
lea
add
add
add
cmp
clc
(bad)
jmp
sbb
sub
xor
pop
add
popa
and
inc
pop
add
add
(bad)
(bad)
inc
add
add
add
fadd
add
daa
add
add
add
add
add
and
cmp
add
and
ret
cmp
(bad)
(bad)
call
and
and
and
popa
cmp
sbb
sbb
pop
add
push
or
add
add
push
xor
dec
add
add
add
add
mov
add
add
add
add
add
add
bound
add
and
add
add
cmp
(bad)
(bad)
jmp
cmp
sub
add
add
add
add
add
add
add
add
and
add
mov
(bad)
jmp
xchg
add
push
sub
sar
jmp
and
add
add
(bad)
(bad)
(bad)
jmp
xor
fadd
call
adc
and
add
add
js
(bad)
jmp
and
cmps
cmp
adc
add
add
lea
add
adc
add
dec
(bad)
(bad)
jmp
push
(bad)
(bad)
(bad)
frstor
adc
and
pusha
pop
add
popa
and
inc
add
(bad)
(bad)
call
add
aas
add
add
add
add
add
add
and
ret
add
sub
mov
sar
call
sbb
sub
or
add
and
jp
and
add
jle
add
popf
(bad)
(bad)
call
sub
add
add
add
add
add
add
(bad)
(bad)
jmp
add
add
pop
add
cmp
(bad)
call
and
cdq
add
add
call
sbb
sub
add
push
fcom
adc
add
xchg
add
push
cmp
idiv
jmp
adc
and
add
add
pop
cmp
cli
(bad)
call
and
rol
add
xchg
pop
pop
pop
cmp
(bad)
(bad)
call
prefetchnta
cli
(bad)
jmp
dec
add
add
aam
(bad)
jmp
movs
je
mov
cmc
popa
and
pop
inc
or
add
push
add
add
sti
(bad)
call
sti
(bad)
call
cld
(bad)
call
add
lock
(bad)
inc
(bad)
(bad)
jmp
add
and
add
cmp
lea
add
add
add
mov
add
adc
and
add
cmp
(bad)
call
and
pop
xchg
sbb
pop
and
add
add
pusha
cmc
(bad)
call
adc
and
add
add
push
cmc
(bad)
call
and
pop
xchg
and
add
add
pop
and
add
add
cmp
(bad)
call
and
test
add
xchg
pop
or
pop
sub
cwde
add
push
cmp
(bad)
jmp
and
add
add
adc
les
shl
pusha
pop
add
popa
and
inc
pop
add
add
(bad)
(bad)
jmp
stc
(bad)
call
hlt
(bad)
dec
add
mov
add
add
sldt
add
(bad)
(bad)
call
pop
adc
and
add
add
int3
hlt
(bad)
call
add
nop
bound
add
pop
add
add
cmp
cmp
clc
(bad)
call
or
add
movs
hlt
(bad)
(bad)
cmp
add
adc
add
idiv
push
idiv
call
(bad)
push
idiv
push
idiv
push
idiv
jmp
pop
add
add
cwde
add
push
cmp
(bad)
jmp
cmp
or
ds
add
add
xor
add
cmp
(bad)
jmp
pop
inc
cmp
add
add
and
add
push
cmp
(bad)
jmp
cmp
je
add
add
push
add
push
adc
and
add
add
and
gs
(bad)
call
add
push
dec
add
sbb
(bad)
jmp
adc
add
sub
add
add
(bad)
call
or
pop
and
add
add
xchg
add
push
cmp
repz
jmp
cmp
(bad)
dec
je
add
add
or
sbb
adc
sbb
add
and
push
add
sub
and
add
add
mov
(bad)
dec
jne
add
add
push
add
push
adc
and
add
add
lahf
repz
call
and
or
add
xchg
and
adc
cmp
idiv
call
and
repnz
(bad)
call
add
add
add
push
add
add
cmp
(bad)
jmp
cmp
adc
adc
push
(bad)
jmp
aas
add
add
push
repz
(bad)
cmp
jne
add
add
push
add
push
adc
and
add
add
cmp
(bad)
jmp
movs
je
mov
call
adc
and
add
mov
add
adc
and
add
add
adc
(bad)
jmp
mov
cmp
(bad)
call
adc
and
add
mov
add
adc
and
add
add
jmp
pop
cmp
idiv
call
adc
repnz
(bad)
call
and
jno
and
add
add
fwait
add
push
sub
or
add
add
push
add
push
and
add
cmp
and
sub
aam
cdq
popa
cmp
mov
add
or
push
add
add
cmp
adc
and
add
add
xchg
pop
adc
cmp
and
mov
add
xchg
sbb
jmp
add
add
adc
and
add
add
cmp
(bad)
jmp
and
pop
outs
(bad)
cmp
(bad)
call
and
cmp
add
xchg
and
adc
and
add
add
sub
(bad)
jmp
mov
pusha
pop
add
popa
and
inc
add
repz
jmp
push
(bad)
call
(bad)
(bad)
jmp
sub
add
cmp
icebp
(bad)
jmp
cmp
add
and
add
sub
push
add
add
xchg
add
push
cmp
icebp
(bad)
jmp
pop
sbb
pop
cmp
and
repnz
(bad)
call
push
cmp
(bad)
jmp
push
add
add
mov
je
add
add
push
add
push
adc
or
add
cmp
loope
(bad)
dec
je
add
add
aad
add
and
add
add
adc
jne
add
add
dec
pop
je
adc
aam
add
add
adc
add
gs
(bad)
call
or
pop
and
add
sub
push
icebp
(bad)
jmp
and
push
mov
(bad)
call
nop
repz
jmp
dec
add
add
cmp
(bad)
jmp
pop
push
adc
cmp
(bad)
call
and
adc
add
xchg
cmp
(bad)
(bad)
dec
jne
add
add
push
add
push
adc
and
add
cmp
icebp
(bad)
(bad)
cmp
idiv
call
adc
pop
and
add
add
xchg
add
push
cmp
lock
jmp
or
add
sub
add
and
add
cmp
lock
(bad)
cmp
cmc
(bad)
dec
je
add
add
adc
sbb
adc
sbb
add
and
add
sub
add
sub
and
add
add
mov
and
pop
xchg
adc
and
add
pop
cmp
pop
and
pop
and
add
add
xor
dec
je
add
sbb
inc
xor
add
add
add
add
add
add
add
add
add
add
add
add
add
ret
add
add
add
or
add
add
add
xor
add
add
adc
add
push
and
add
add
cwde
add
push
cmp
add
cmp
add
add
add
adc
push
add
add
or
add
cmp
add
add
add
add
add
and
or
add
adc
and
and
or
inc
popa
cmp
add
adc
and
cmc
mov
fwait
gs
cmp
add
or
add
add
(bad)
push
add
add
add
add
add
add
add
mov
add
pushf
add
add
add
add
cmp
add
or
add
pop
or
add
call
jg
and
and
inc
pop
add
add
add
and
add
dec
add
add
(bad)
(bad)
dec
add
test
(bad)
push
(bad)
jmp
or
add
cmp
add
jle
add
add
add
or
add
cmp
add
cmp
add
add
add
add
add
push
sub
add
pop
add
add
sub
add
and
adc
mov
(bad)
inc
jnp
add
add
cmp
add
add
fild
add
and
add
add
push
pop
add
or
add
add
add
(bad)
(bad)
jmp
dec
add
add
add
cmp
call
add
or
add
mov
add
add
(bad)
(bad)
call
(bad)
(bad)
push
(bad)
(bad)
fild
add
and
add
add
mov
or
jmp
and
add
add
cmps
(bad)
(bad)
call
call
cmp
(bad)
(bad)
call
push
add
add
jnp
add
add
and
add
or
pop
jge
add
add
xchg
and
add
add
jnp
add
add
and
add
or
pop
jge
add
add
xchg
and
add
add
bound
jnp
add
add
pop
pop
bound
push
add
add
or
add
sub
xor
(bad)
jmp
and
cs
add
add
(bad)
call
(bad)
(bad)
call
add
pop
xchg
or
xor
jbe
(bad)
call
cmp
(bad)
(bad)
inc
jnp
add
add
jnp
add
add
push
(bad)
(bad)
jmp
push
add
add
cmp
(bad)
(bad)
jmp
cmp
std
(bad)
inc
jnp
add
add
pop
add
pop
pop
bound
pop
push
imul
xor
add
add
adc
add
push
pop
sub
inc
add
add
and
add
add
cwde
add
push
cmp
add
cmp
add
adc
and
repnz
add
jne
add
sub
and
add
add
xor
push
add
add
add
push
add
add
and
push
add
add
aam
(bad)
(bad)
jle
add
add
add
jmp
add
add
dec
or
dec
add
add
add
(bad)
(bad)
jmp
(bad)
(bad)
inc
add
add
add
add
cmp
(bad)
(bad)
jmp
jg
(bad)
std
and
and
inc
add
add
(bad)
(bad)
jmp
(bad)
call
add
add
cmp
or
out
lods
jge
and
inc
add
add
add
add
add
(bad)
(bad)
call
cwde
add
push
sub
pop
add
add
and
add
add
cwde
add
push
cmp
add
add
cmp
add
iret
add
add
in
cmp
inc
add
add
add
add
add
add
dec
or
dec
add
add
add
add
add
add
add
add
cmp
add
add
and
add
add
xlat
(bad)
(bad)
jmp
(bad)
in
mov
and
add
mov
cmp
dec
inc
push
add
add
add
add
add
add
add
add
add
add
add
add
pop
cmp
and
jb
fnstcw
sbb
(bad)
call
add
or
pop
(bad)
(bad)
inc
jne
add
add
and
add
and
add
sub
add
sub
pop
add
add
je
add
add
and
add
add
in
add
sub
add
sub
(bad)
pop
and
lods
jge
and
inc
add
(bad)
(bad)
call
add
add
add
add
add
add
pop
add
add
add
cdq
add
add
icebp
int
cmp
(bad)
(bad)
inc
je
add
add
or
add
and
rcr
add
add
mov
or
and
(bad)
call
pop
inc
push
add
add
add
add
add
add
add
add
(bad)
(bad)
(bad)
mov
xchg
movs
into
jecxz
js
(bad)
call
add
add
cdq
(bad)
(bad)
inc
je
add
add
add
push
fadd
jne
add
add
add
inc
sbb
add
add
add
add
add
add
add
add
adc
lldt
add
add
add
adc
add
push
and
add
add
cmp
pop
or
add
add
push
add
add
push
add
add
pop
cmp
cmp
add
and
add
add
push
or
dec
add
add
add
add
and
add
or
add
mov
add
add
(bad)
dec
add
add
add
add
add
add
add
add
add
add
add
and
add
mov
add
add
add
add
add
sahf
add
add
add
add
add
add
and
add
and
(bad)
(bad)
(bad)
jmp
add
or
add
add
cmp
(bad)
jmp
retf
sub
dec
add
add
or
jmp
adc
cmp
add
adc
and
add
xchg
and
add
add
add
cmp
add
add
push
and
add
add
in
(bad)
jmp
ja
add
jp
jnp
add
add
pop
and
jg
add
and
add
add
pop
(bad)
(bad)
(bad)
cmp
(bad)
(bad)
(bad)
jle
add
add
pop
and
add
cmp
(bad)
(bad)
jmp
add
add
add
and
add
or
add
add
add
add
add
and
pushf
and
sar
(bad)
call
adc
add
or
repnz
(bad)
inc
jnp
add
add
add
add
add
jnp
add
add
and
out
add
sub
add
sub
or
add
cmp
into
add
add
and
push
cmp
and
add
cmp
(bad)
jmp
scas
jmp
or
add
push
sub
or
rol
pop
popa
cmp
and
add
pop
and
add
sub
cmps
(bad)
(bad)
jmp
and
add
add
cwde
add
push
cmp
(bad)
(bad)
(bad)
cmp
(bad)
(bad)
jmp
cdq
xor
inc
sbb
adc
pop
or
or
add
xchg
(bad)
(bad)
(bad)
fld
add
add
add
(bad)
(bad)
(bad)
stc
add
add
(bad)
jmp
(bad)
(bad)
jmp
push
add
add
out
(bad)
(bad)
jle
add
add
push
and
add
add
(bad)
std
(bad)
call
or
mov
and
cmp
(bad)
(bad)
call
add
add
add
add
(bad)
jmp
add
add
(bad)
(bad)
inc
(bad)
(bad)
jmp
add
add
add
in
add
dec
(bad)
(bad)
(bad)
out
(bad)
(bad)
call
(bad)
jmp
(bad)
jmp
add
add
or
add
cmp
(bad)
call
(bad)
(bad)
call
pop
and
add
add
(bad)
(bad)
inc
jnp
add
add
cmp
add
add
add
add
sub
inc
std
(bad)
(bad)
cmp
std
(bad)
(bad)
cmp
(bad)
inc
and
add
pop
jge
add
add
adc
add
cmp
std
(bad)
jmp
jl
sahf
inc
cmp
(bad)
(bad)
call
add
add
or
(bad)
call
or
div
pop
and
(bad)
(bad)
dec
and
add
cmp
and
jecxz
(bad)
call
push
and
add
add
add
call
or
repnz
(bad)
inc
add
stc
std
(bad)
jmp
adc
add
push
cmp
sbb
add
call
push
and
adc
pop
dec
xchg
pop
cmp
(bad)
(bad)
jmp
add
add
push
push
add
add
mov
(bad)
call
adc
add
jnp
(bad)
call
or
add
add
ins
cld
(bad)
jmp
adc
push
add
add
add
add
adc
add
push
pop
sub
sbb
add
and
add
add
cmp
cmp
add
add
jnp
add
add
pop
and
jg
add
push
add
add
add
add
cmp
pop
inc
pop
add
add
sldt
add
add
add
mov
dec
mov
imul
popa
and
pop
inc
or
add
test
add
or
add
push
add
add
(bad)
(bad)
call
add
add
add
add
add
and
cmp
add
pop
or
add
cmp
(bad)
(bad)
inc
add
jnp
add
add
add
pop
sub
add
pop
or
or
add
cmp
rol
add
add
jnp
add
add
jnp
add
add
sub
add
or
or
jmp
mov
add
xchg
and
or
add
rol
add
sbb
add
lds
add
and
ds
cmp
add
(bad)
and
cmp
popa
cmp
(bad)
(bad)
inc
add
push
add
add
and
add
and
add
sub
sub
add
and
add
and
add
sub
add
adc
add
cmp
add
jle
add
add
add
add
add
pop
cmp
add
and
sar
(bad)
call
or
cwde
cmp
(bad)
(bad)
call
add
sbb
mov
cmp
cmp
(bad)
(bad)
inc
add
add
add
jnp
add
add
sub
add
or
bound
add
and
add
add
push
push
add
or
add
add
add
(bad)
jmp
add
add
add
add
add
sahf
(bad)
(bad)
push
add
adc
add
inc
(bad)
(bad)
jmp
(bad)
(bad)
inc
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
push
std
(bad)
inc
(bad)
(bad)
call
(bad)
(bad)
push
(bad)
call
(bad)
inc
add
lods
add
add
adc
and
add
add
fwait
(bad)
(bad)
jmp
call
(bad)
call
add
mov
add
xchg
pop
adc
and
add
add
cwde
add
push
cmp
(bad)
jmp
pop
or
add
imul
and
add
add
and
add
add
push
(bad)
(bad)
inc
and
add
pop
jge
add
add
adc
add
cmp
(bad)
(bad)
(bad)
cmp
(bad)
(bad)
dec
inc
or
add
daa
add
add
(bad)
call
(bad)
jmp
(bad)
(bad)
jmp
add
add
(bad)
push
(bad)
(bad)
push
(bad)
(bad)
(bad)
fdivrp
(bad)
jmp
adc
add
cmp
(bad)
(bad)
jmp
stos
neg
out
jns
(bad)
call
add
jge
and
cmp
(bad)
jmp
add
push
add
add
or
push
add
add
retf
call
add
neg
ja
jae
popa
cmp
ds
(bad)
jmp
or
add
cmp
imul
inc
sub
add
adc
or
add
add
adc
add
push
and
add
add
cld
add
add
adc
add
add
jge
add
add
or
add
cmp
add
add
cld
add
add
jnp
add
add
jnp
add
add
leave
push
add
and
mov
add
add
add
cmp
push
add
and
add
add
mov
add
add
add
add
cmp
or
add
inc
add
add
call
pop
add
push
and
add
add
cmp
add
add
add
add
add
jnp
add
add
push
rcr
pop
cmp
add
cmp
add
add
add
add
add
add
jge
add
add
xor
add
cmp
add
add
and
add
add
xor
dec
add
add
jnp
add
add
and
add
adc
pop
pop
jge
add
add
pop
add
add
add
and
add
cmp
add
add
or
(bad)
outs
cmp
and
fisub
add
add
and
or
jmp
je
add
adc
inc
sub
add
adc
add
inc
add
add
add
add
add
add
pop
add
jmp
add
add
cld
add
add
(bad)
jmp
add
(bad)
(bad)
inc
pop
add
sbb
add
pushf
add
add
or
add
add
add
add
add
push
add
les
add
mov
add
add
(bad)
call
pop
add
cld
add
add
(bad)
(bad)
(bad)
call
add
add
ds
add
dec
add
add
add
add
add
fild
add
add
add
add
add
add
xor
add
add
adc
jge
add
add
daa
add
add
sbb
xor
(bad)
inc
add
sub
add
jge
add
add
sbb
add
pop
cmp
add
add
pop
sbb
or
and
icebp
add
add
sbb
add
add
and
add
cmp
add
add
or
daa
add
add
or
inc
add
add
leave
add
add
add
add
or
add
cmp
or
cmp
add
add
and
add
cmp
mov
and
cmp
and
cmp
add
sub
add
and
add
add
cmp
add
and
add
stos
popa
and
pop
inc
or
add
scas
add
add
add
add
ret
add
(bad)
push
add
mov
(bad)
(bad)
dec
(bad)
jmp
cwde
add
push
sub
cld
add
push
add
add
cmp
add
add
cmp
(bad)
(bad)
inc
sbb
pop
add
push
or
cmp
add
cmp
add
add
adc
and
add
add
cld
add
add
add
add
add
jnp
add
add
jge
add
add
inc
add
add
fild
add
cmp
std
(bad)
inc
jnp
add
add
jnp
add
add
push
add
add
cmp
cmp
adc
pop
bound
or
or
add
pop
cmp
cmp
pop
pop
adc
add
add
or
mov
add
adc
and
add
add
add
add
xchg
std
(bad)
call
or
out
add
add
call
sub
jnp
add
add
sub
push
and
cmp
add
add
sub
add
cmp
add
cmp
(bad)
inc
push
jge
add
add
cmp
add
sub
sub
add
cmp
(bad)
inc
add
sub
add
jge
add
add
xor
add
cmp
add
add
adc
cmp
std
(bad)
call
or
sub
add
xchg
pop
gs
cmp
(bad)
(bad)
call
sub
or
pop
add
push
and
add
push
cmp
add
add
adc
and
add
add
add
or
das
add
add
enter
cmp
cld
(bad)
inc
jnp
add
add
and
add
adc
add
add
add
adc
jge
add
add
push
pushf
and
add
add
xchg
add
add
or
or
adc
add
push
cmp
adc
pop
adc
add
add
jno
add
adc
and
adc
cmp
(bad)
call
or
xchg
add
add
call
sub
and
add
add
add
pop
jge
add
add
sbb
cwde
add
push
cmp
add
add
pop
adc
or
inc
cld
(bad)
call
or
add
add
xchg
cmp
(bad)
(bad)
call
sub
sbb
pop
add
push
cmp
adc
add
dec
or
add
add
add
add
add
add
add
add
nop
add
add
(bad)
dec
add
arpl
add
(bad)
(bad)
call
add
add
add
mov
add
sbb
add
cld
add
add
add
cld
cld
(bad)
call
cld
(bad)
call
add
add
add
add
add
add
(bad)
call
std
(bad)
dec
add
add
std
(bad)
jmp
add
add
(bad)
(bad)
sti
sti
(bad)
call
cli
(bad)
call
cld
(bad)
jmp
add
add
std
(bad)
call
(bad)
mov
add
add
std
(bad)
dec
(bad)
jmp
cld
(bad)
(bad)
call
add
add
add
(bad)
(bad)
call
(bad)
call
add
add
(bad)
(bad)
dec
add
ss
(bad)
(bad)
fdivr
(bad)
(bad)
mov
add
add
add
add
add
outs
add
add
add
add
(bad)
jmp
add
add
add
add
cli
(bad)
push
(bad)
jmp
add
add
(bad)
push
stc
(bad)
dec
add
add
and
add
push
cmp
(bad)
(bad)
jmp
and
jmp
cld
(bad)
call
cmp
cli
(bad)
call
or
call
(bad)
cli
(bad)
call
or
add
or
xchg
pop
cmp
or
xchg
add
add
sahf
cli
(bad)
call
adc
xchg
cli
(bad)
call
push
adc
and
add
add
cmp
(bad)
jmp
adc
pop
push
xchg
(bad)
call
and
call
sub
and
add
pop
jge
add
add
adc
add
cmp
(bad)
call
or
movs
add
add
add
or
push
cli
(bad)
call
or
sub
add
add
(bad)
call
sub
sbb
add
add
push
add
add
adc
(bad)
call
and
or
and
(bad)
call
adc
repnz
(bad)
inc
add
add
add
jecxz
add
jge
add
add
or
add
sub
loopne
(bad)
jmp
pop
push
adc
and
add
cmp
std
(bad)
call
adc
or
add
add
ret
std
(bad)
inc
sbb
pop
add
push
and
add
add
cmp
pop
movlps
and
add
cmp
sbb
or
inc
add
add
cmp
cmp
(bad)
(bad)
call
or
push
and
leave
mov
popa
cmp
sti
(bad)
call
push
adc
and
add
add
ins
std
(bad)
call
or
pop
xchg
sbb
or
jns
(bad)
call
or
test
add
xchg
and
cmp
(bad)
(bad)
inc
push
jge
add
add
push
add
add
cmp
(bad)
call
adc
or
dec
stc
(bad)
call
or
add
add
jmp
push
cmp
add
add
inc
add
add
adc
(bad)
call
or
xchg
test
(bad)
pop
and
aas
movs
push
(bad)
call
add
push
add
add
(bad)
(bad)
call
(bad)
(bad)
jmp
(bad)
(bad)
jmp
(bad)
(bad)
dec
(bad)
jmp
or
add
cmp
cld
(bad)
inc
push
cmp
cld
(bad)
jmp
sbb
add
push
cmp
cld
(bad)
jmp
cmp
clc
(bad)
inc
add
sub
add
jge
add
add
inc
add
add
xchg
add
push
cmp
add
jge
add
add
add
add
mov
(bad)
(bad)
cmp
add
add
jnp
add
add
or
and
add
push
cmp
(bad)
jmp
and
cmc
stc
(bad)
(bad)
jle
add
add
or
add
add
cmp
(bad)
inc
or
pop
add
push
or
add
inc
cld
(bad)
call
or
push
pop
cmp
cld
idiv
jmp
and
add
add
es
(bad)
call
or
xchg
add
add
and
add
add
adc
(bad)
(bad)
cmp
clc
(bad)
inc
and
add
pop
jge
add
add
or
add
cmp
sti
(bad)
inc
push
jge
add
add
pop
add
add
loop
(bad)
call
or
add
add
aam
(bad)
call
or
imul
and
sar
inc
sbb
add
add
xor
add
cmp
or
(bad)
jge
and
pop
mov
cmp
stc
(bad)
inc
jnp
add
add
add
xor
add
cmp
adc
idiv
call
or
repnz
(bad)
call
sub
pop
adc
adc
(bad)
jmp
cmp
add
cmp
(bad)
call
sbb
idiv
call
sbb
repnz
(bad)
inc
jnp
add
add
jnp
add
add
paddw
jmp
add
add
cmp
sti
(bad)
call
adc
or
dec
idiv
call
cmp
(bad)
(bad)
call
sub
and
add
pop
jge
add
add
sub
add
cmp
sti
(bad)
inc
jnp
add
add
cmp
cli
(bad)
jmp
push
add
add
cld
cli
(bad)
inc
pop
jge
add
add
add
add
cmp
cli
(bad)
dec
jle
add
add
jnp
add
add
pop
or
add
sar
(bad)
(bad)
cmp
idiv
inc
add
adc
(bad)
mov
add
cmp
add
sub
es
and
add
add
cmp
add
es
or
add
push
add
add
inc
add
add
rol
add
add
add
add
jnp
add
add
add
and
jg
add
and
add
add
pop
add
add
push
lods
add
add
adc
add
cmp
add
add
pop
or
pop
add
add
add
add
add
add
add
cmp
add
add
sbb
add
cmp
add
add
or
add
sldt
add
fadd
add
cmp
add
add
add
add
and
cmp
xor
mov
add
add
add
add
and
mov
add
and
mov
add
add
jnp
add
add
pop
add
add
adc
nop
add
add
add
add
add
add
jg
add
cmp
add
add
add
add
add
add
add
add
sub
add
sub
add
sub
or
add
cmp
add
adc
retf
add
add
add
sbb
add
and
add
add
cmp
add
adc
add
add
add
cmp
add
add
or
add
sbb
add
cmp
add
add
cmps
add
add
cmp
add
and
add
add
push
or
dec
add
add
add
add
add
(bad)
inc
(bad)
(bad)
call
add
dec
(bad)
(bad)
jmp
add
jle
add
test
(bad)
push
(bad)
(bad)
inc
(bad)
(bad)
jmp
(bad)
(bad)
dec
(bad)
call
add
ins
(bad)
(bad)
call
(bad)
(bad)
inc
(bad)
(bad)
push
call
add
retf
add
add
sub
inc
(bad)
(bad)
jmp
and
add
add
xchg
add
push
cmp
(bad)
jmp
adc
pop
adc
add
add
add
add
jmp
jnp
add
add
add
add
pop
and
sub
add
and
add
add
cmp
(bad)
jmp
enter
and
pop
pop
popa
and
inc
pop
add
add
(bad)
(bad)
call
add
add
(bad)
dec
(bad)
(bad)
inc
(bad)
dec
add
add
or
add
sub
clc
(bad)
(bad)
jmp
adc
sbb
add
add
ja
add
jle
add
add
ja
add
xchg
jle
add
add
dec
xchg
pop
and
add
add
pop
adc
add
add
cmp
adc
and
add
cmp
add
add
and
add
pop
jge
add
add
adc
add
sub
(bad)
(bad)
(bad)
jmp
and
cmp
add
add
cmp
dec
(bad)
and
imul
cmp
(bad)
(bad)
call
add
or
add
add
cld
(bad)
push
(bad)
call
(bad)
(bad)
mov
add
add
add
add
std
(bad)
(bad)
fdivr
(bad)
call
(bad)
(bad)
jmp
or
add
cmp
(bad)
(bad)
(bad)
cmp
or
add
add
adc
aam
call
adc
and
loop
neg
rcl
(bad)
call
push
and
cmp
std
(bad)
inc
jnp
add
add
add
adc
add
cmp
std
(bad)
(bad)
jle
add
add
push
and
add
add
enter
adc
and
adc
dec
(bad)
(bad)
call
cmp
(bad)
(bad)
jmp
ja
add
jp
sub
adc
ltr
add
adc
add
push
and
xor
add
and
mov
data16
jnp
add
add
jnp
add
add
je
add
sbb
add
add
add
inc
add
add
sub
add
sub
add
sub
add
add
cmp
add
add
add
add
and
add
add
xchg
add
push
cmp
add
add
and
xor
add
adc
jb
pusha
xor
mov
cmp
jnp
add
add
add
add
or
or
add
push
cmp
and
pop
sar
fs
and
inc
pop
add
add
(bad)
inc
add
add
(bad)
call
(bad)
(bad)
dec
add
and
add
add
outs
add
add
add
and
in
loopne
and
mul
mov
(bad)
dec
and
add
add
cmp
(bad)
jmp
and
add
add
cmp
add
sbb
add
add
push
cmp
add
add
cmp
add
or
add
add
(bad)
push
add
add
(bad)
call
add
cmp
add
add
add
push
add
add
add
add
(bad)
(bad)
jmp
(bad)
(bad)
jmp
jmp
(bad)
(bad)
inc
(bad)
(bad)
jmp
add
add
sub
jl
(bad)
jmp
and
add
add
mov
jl
dec
cmp
push
(bad)
(bad)
inc
je
add
sbb
add
push
sub
xor
add
add
add
add
sub
es
add
add
add
jnp
add
add
add
add
xor
add
add
xor
add
sub
es
and
add
add
inc
add
add
mov
cmps
enter
and
pop
inc
or
add
inc
add
add
add
add
add
add
add
test
add
mov
add
add
add
add
add
add
add
add
or
add
push
cmp
add
add
and
mov
cmp
and
add
(bad)
jg
add
push
add
add
add
add
cmp
add
add
add
dec
pop
and
or
call
add
sbb
popa
cmp
(bad)
dec
and
add
xchg
sbb
and
cmp
and
popa
and
add
(bad)
ss
cmp
(bad)
dec
inc
or
add
sbb
add
add
(bad)
jmp
(bad)
(bad)
cli
add
add
add
add
add
lods
(bad)
(bad)
jmp
push
add
add
dec
add
add
add
mov
and
cmp
(bad)
(bad)
inc
jnp
add
add
and
add
or
pop
jge
add
add
add
add
add
and
xchg
pushf
cmp
(bad)
(bad)
jmp
pop
add
add
push
push
add
or
add
add
add
(bad)
(bad)
(bad)
jns
(bad)
inc
add
add
add
(bad)
(bad)
call
add
or
add
xor
(bad)
(bad)
cmp
add
sub
add
jg
add
sar
(bad)
(bad)
mov
or
add
cmp
sub
and
add
add
cmp
and
dec
jo
pop
(bad)
(bad)
call
or
leave
(bad)
(bad)
jmp
and
mov
(bad)
call
or
add
add
cmp
(bad)
jmp
fmul
and
xor
push
add
add
stc
add
or
es
(bad)
call
or
jge
push
add
sbb
(bad)
inc
push
cmp
and
add
add
inc
(bad)
(bad)
(bad)
cmp
add
add
(bad)
jg
add
add
sub
xchg
(bad)
(bad)
jmp
and
add
add
cmp
(bad)
(bad)
jmp
jle
add
add
add
add
add
sub
or
(bad)
jmp
and
sub
and
add
add
xchg
pop
cmp
add
adc
push
add
add
add
adc
add
push
and
add
add
fadd
add
cmp
add
push
adc
adc
add
cmp
add
add
add
je
add
sbb
or
pop
pop
pop
bound
add
cmp
add
cmp
adc
pop
push
add
pop
pop
cmp
(bad)
(bad)
inc
jne
add
sbb
movups
pop
adc
mulps
pop
pop
bound
and
add
push
cmp
add
and
add
add
or
add
add
cmp
add
adc
test
add
pop
adc
xor
dec
add
add
adc
adc
push
add
add
cmp
add
adc
dec
add
push
adc
and
add
cmp
add
add
add
cmp
add
or
add
add
cmp
or
adc
retf
add
and
repnz
(bad)
call
adc
fadd
add
pop
adc
adc
add
sub
jmp
pop
adc
adc
das
add
add
cmp
add
add
adc
pop
adc
add
add
sub
rol
add
mov
adc
add
add
adc
sub
add
pop
cmp
adc
adc
aas
sti
(bad)
(bad)
jmp
or
add
pop
cmp
adc
and
add
add
jb
(bad)
jmp
or
je
add
pop
pop
adc
sub
add
cmp
add
adc
and
add
add
add
add
push
add
add
add
jne
add
sbb
push
xchg
pop
adc
push
pop
pop
pop
pop
bound
add
cmp
add
cmp
add
add
push
and
adc
sbb
cmp
add
adc
or
add
or
sub
push
and
add
add
cld
add
add
adc
mov
add
adc
add
add
out
(bad)
inc
adc
add
add
add
sub
add
cmp
add
add
add
adc
pop
pop
adc
push
pop
pop
pop
pop
arpl
add
add
test
add
adc
add
add
adc
sbb
add
cmp
or
add
add
cmp
cmp
add
push
pop
or
pop
add
add
inc
add
add
push
add
cmp
add
add
add
add
and
add
add
push
add
add
or
add
jnp
add
add
or
push
adc
sbb
or
popf
and
add
cmp
add
adc
and
push
mov
cmp
ret
mov
add
pop
sbb
adc
sub
add
add
adc
add
adc
inc
add
add
hlt
add
add
push
and
sbb
adc
add
add
fiadd
add
pop
or
adc
xchg
add
add
cmp
(bad)
(bad)
inc
je
add
sbb
sete
add
adc
add
cmp
jae
add
adc
sbb
adc
and
add
add
movs
add
add
and
adc
pop
add
add
or
repnz
(bad)
inc
jnp
add
add
adc
push
sbb
punpcklbw
and
add
cmp
add
and
jo
iret
cmp
add
add
sbb
push
(bad)
(bad)
inc
jne
add
sbb
pop
add
and
add
pop
add
add
add
inc
add
add
adc
and
add
add
xchg
add
push
cmp
add
add
jle
add
add
adc
add
and
add
cmp
add
add
add
cmp
add
or
repnz
(bad)
jmp
cmp
add
dec
sbb
dec
add
add
add
std
(bad)
(bad)
clc
add
add
(bad)
(bad)
jg
add
imul
add
add
sbb
(bad)
dec
add
stos
cld
(bad)
call
sti
(bad)
call
add
(bad)
(bad)
jmp
add
add
std
(bad)
push
add
aad
add
jnp
(bad)
push
cli
(bad)
push
add
fscale
(bad)
jmp
std
(bad)
jmp
add
add
(bad)
dec
add
add
add
add
(bad)
(bad)
call
add
xchg
(bad)
(bad)
inc
(bad)
push
add
add
cld
(bad)
(bad)
cmp
add
and
add
sub
add
add
add
inc
sti
(bad)
(bad)
cld
sti
(bad)
call
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
ds
(bad)
jmp
(bad)
push
add
add
add
add
add
jb
(bad)
inc
add
add
std
(bad)
jmp
add
add
add
iret
sti
(bad)
inc
sti
(bad)
dec
add
add
jle
add
sti
add
add
add
xchg
(bad)
(bad)
jl
add
pushf
cld
(bad)
call
add
add
add
add
std
(bad)
push
add
or
add
and
add
push
sti
(bad)
jmp
add
add
add
lods
(bad)
(bad)
call
push
adc
push
add
add
cwde
add
push
cmp
xchg
(bad)
(bad)
jmp
push
retf
and
and
pop
inc
or
add
aas
add
add
(bad)
dec
call
add
add
std
(bad)
inc
(bad)
(bad)
jmp
add
test
(bad)
jmp
or
add
sub
dec
(bad)
(bad)
jmp
pop
and
add
add
cmp
(bad)
jmp
mov
(bad)
xchg
cmp
push
cmp
and
add
cmp
(bad)
(bad)
call
pop
adc
rol
add
pop
push
cmp
(bad)
(bad)
inc
je
add
sbb
push
xchg
and
adc
sub
cwde
add
push
cmp
add
and
add
cmp
std
(bad)
jmp
cmp
add
add
out
loope
adc
and
inc
xchg
neg
cmp
(bad)
(bad)
call
adc
or
push
add
add
mov
(bad)
(bad)
cmp
add
or
pop
or
sub
add
cmp
push
add
add
push
add
add
and
add
sub
cmp
jmp
sbb
adc
cmp
jb
(bad)
jmp
add
add
adc
add
popa
std
(bad)
(bad)
cmp
add
add
push
pop
pop
adc
and
add
add
dec
std
(bad)
jmp
cld
mov
(bad)
call
adc
add
add
add
add
add
add
add
add
add
add
cli
(bad)
inc
(bad)
(bad)
stc
add
add
add
add
add
cli
(bad)
call
sti
(bad)
inc
add
add
add
push
add
add
sti
(bad)
inc
add
add
sti
(bad)
(bad)
in
add
add
sti
(bad)
jmp
add
add
add
add
cld
(bad)
jmp
add
add
stc
(bad)
push
(bad)
(bad)
dec
stc
(bad)
(bad)
fdivrp
(bad)
call
sti
(bad)
push
add
add
cld
(bad)
dec
(bad)
(bad)
inc
add
add
sub
cmp
pop
and
adc
lock
(bad)
jmp
and
add
add
cmp
call
(bad)
(bad)
call
and
repnz
(bad)
call
or
pop
adc
and
add
add
fs
(bad)
(bad)
cmp
or
adc
pop
or
pop
pop
bound
or
daa
add
add
inc
cld
(bad)
call
pop
and
aas
inc
jno
and
cmp
or
add
cmp
push
adc
and
add
sub
adc
(bad)
jmp
adc
cmp
adc
add
(bad)
call
push
pop
pop
xchg
adc
mov
(bad)
call
cmp
(bad)
(bad)
call
adc
and
add
add
loope
(bad)
call
adc
add
adc
push
add
add
cwde
add
push
cmp
sti
(bad)
jmp
cmp
(bad)
call
push
pop
(bad)
ret
jmp
dec
add
add
lods
sti
(bad)
(bad)
cmp
(bad)
call
or
(bad)
(bad)
jmp
dec
add
add
xchg
sti
(bad)
call
push
and
sbb
dec
add
add
jle
(bad)
call
adc
or
add
cmp
(bad)
(bad)
cmp
(bad)
(bad)
inc
adc
xchg
adc
and
add
sub
push
sti
(bad)
jmp
cmp
(bad)
(bad)
call
push
pop
pop
adc
and
add
sub
cmp
(bad)
jmp
adc
and
add
add
sub
(bad)
call
pop
and
(bad)
xor
and
out
jg
popa
cmp
adc
or
add
xchg
add
push
cmp
sti
(bad)
jmp
cmp
or
or
(bad)
(bad)
jmp
and
add
sub
jecxz
(bad)
jmp
cmp
jnp
add
add
adc
inc
add
pop
xchg
adc
and
add
add
xchg
add
push
cmp
cmp
(bad)
call
or
add
or
add
mov
pop
std
(bad)
inc
jne
add
sbb
push
adc
and
add
add
mov
(bad)
call
adc
pop
maxps
pop
pop
bound
adc
cmp
add
sub
outs
cli
(bad)
jmp
cmp
std
(bad)
call
add
cmp
add
or
adc
add
cmp
call
adc
adc
sldt
add
inc
cli
(bad)
call
adc
adc
inc
add
add
cmp
(bad)
call
nop
cmp
and
add
cmp
adc
adc
(bad)
(bad)
call
push
and
add
add
call
adc
and
add
push
cmp
cli
(bad)
jmp
cmp
adc
adc
pop
pop
pop
bound
adc
and
in
(bad)
(bad)
cmp
jnp
add
add
adc
adc
or
adc
sbb
punpcklbw
and
add
add
mov
movlps
and
add
cmp
cmp
(bad)
call
adc
adc
pop
pop
pop
bound
adc
pop
add
add
cmp
adc
and
adc
inc
cld
(bad)
call
push
and
add
add
jmp
adc
or
cmps
pop
add
cmp
add
sub
es
and
add
add
out
add
add
jle
add
add
and
add
add
jge
add
add
sbb
add
cmp
add
add
inc
pop
loope
and
push
cmc
popa
and
pop
inc
or
add
adc
add
pop
add
add
(bad)
(bad)
jmp
push
add
xlat
add
add
push
add
and
add
add
add
sub
add
push
cmp
cmp
add
add
jnp
add
add
jnp
add
add
jnp
add
add
popa
add
push
and
add
add
popa
add
add
add
add
pop
and
push
add
add
and
add
pop
jge
add
add
sub
add
sub
xor
add
adc
add
test
add
add
fld
add
add
cmp
add
add
adc
and
pop
sbb
push
cmp
add
add
repz
(bad)
call
sub
jnp
add
add
jnp
add
add
inc
add
push
and
(bad)
call
sti
add
add
sbb
add
cmp
add
add
push
cmp
add
add
adc
add
cmp
push
cmp
add
add
add
add
cmp
adc
cmp
add
add
pop
and
add
inc
pop
or
add
add
and
add
cmp
adc
dec
add
add
or
add
cmp
add
adc
and
stos
push
int
and
scas
repz
popa
cmp
adc
push
push
sub
test
add
and
add
add
inc
add
add
sbb
push
cmp
add
pop
adc
repnz
(bad)
call
sub
jle
add
add
xchg
jge
add
add
and
add
cmp
add
add
pop
and
sbb
push
cmp
add
pop
sbb
repnz
(bad)
inc
push
jge
add
add
and
add
pop
cmp
add
add
adc
pop
ins
xchg
sbb
push
and
add
add
fld
add
add
add
add
jnp
add
add
pop
add
push
or
add
rol
add
dec
add
add
push
inc
push
add
add
add
add
add
add
add
add
(bad)
(bad)
inc
add
add
(bad)
inc
add
stos
add
add
add
add
add
jbe
add
sbb
add
add
add
pop
add
add
add
add
(bad)
(bad)
(bad)
mov
add
add
add
pop
add
add
add
out
add
cmp
(bad)
(bad)
jg
add
or
(bad)
call
add
jbe
add
dec
(bad)
(bad)
jmp
sbb
xchg
add
push
cmp
add
add
adc
pop
cmp
add
push
and
add
add
cmp
cmp
(bad)
inc
and
add
add
add
add
xor
add
cmp
add
add
jle
add
add
xchg
jge
add
add
or
jecxz
add
pop
adc
push
cmp
(bad)
(bad)
call
push
cmp
(bad)
(bad)
inc
and
add
add
add
add
push
add
add
cwde
add
push
cmp
mov
add
add
jge
add
add
das
add
add
cmp
push
adc
cmp
(bad)
(bad)
call
(bad)
(bad)
(bad)
call
sub
jnp
add
add
jnp
add
add
pop
add
push
and
add
add
cwde
add
push
cmp
add
sbb
push
cmp
pop
and
and
add
add
out
(bad)
call
sub
jnp
add
add
jnp
add
add
pop
add
push
and
add
add
cmp
add
add
pop
adc
add
add
daa
add
add
data16
(bad)
inc
jnp
add
add
ds
(bad)
jmp
or
add
cmp
add
adc
and
add
add
push
cmp
(bad)
(bad)
call
adc
repnz
(bad)
inc
push
cmp
add
add
daa
add
add
xchg
add
push
cmp
add
add
pop
or
push
and
add
add
cmp
add
add
cmp
(bad)
(bad)
inc
pop
or
add
add
sub
add
cmp
sbb
push
and
add
add
cmps
add
add
jns
sbb
(bad)
call
or
jae
adc
and
cmp
sti
(bad)
(bad)
jle
add
add
or
xor
add
cmp
add
and
push
push
xchg
cmp
jnp
add
add
ins
add
push
or
push
add
add
pop
add
add
pop
pop
and
add
cmp
cld
(bad)
jmp
xor
add
cmp
add
cmp
sbb
add
add
add
cmp
add
push
add
add
add
or
and
add
cmp
add
add
push
cmp
(bad)
(bad)
(bad)
cmp
jmp
sub
add
dec
or
dec
add
add
add
(bad)
(bad)
push
(bad)
call
add
add
add
add
(bad)
(bad)
(bad)
jnp
(bad)
(bad)
std
cli
(bad)
inc
add
add
(bad)
call
(bad)
(bad)
jp
(bad)
inc
add
(bad)
(bad)
jmp
add
add
sti
(bad)
call
(bad)
(bad)
inc
(bad)
jmp
(bad)
(bad)
inc
(bad)
(bad)
jmp
add
add
std
(bad)
jmp
(bad)
dec
dec
add
add
cld
(bad)
inc
std
(bad)
dec
add
add
std
(bad)
call
(bad)
dec
(bad)
(bad)
jmp
add
add
cld
(bad)
jmp
(bad)
push
add
cli
(bad)
call
(bad)
jmp
call
(bad)
(bad)
call
add
and
(bad)
(bad)
mov
add
add
add
add
cmp
jnp
add
add
jnp
add
add
pop
add
push
or
add
add
or
(bad)
call
or
push
pop
push
sbb
cli
(bad)
inc
jnp
add
add
add
or
add
cmp
(bad)
(bad)
(bad)
cmp
cld
(bad)
inc
jnp
add
add
ds
sti
(bad)
jmp
sub
add
sub
(bad)
(bad)
(bad)
jmp
cmp
cld
(bad)
inc
jnp
add
add
jnp
add
add
inc
add
push
or
fdivr
(bad)
jmp
and
xchg
add
push
cmp
adc
and
push
pop
rcr
(bad)
push
pop
adc
mov
(bad)
call
or
pop
mov
pop
and
movs
stc
(bad)
call
or
add
lods
add
add
(bad)
call
adc
call
or
hlt
add
add
add
add
(bad)
call
or
mov
or
push
and
add
add
sub
(bad)
(bad)
cmp
(bad)
inc
jnp
add
add
sub
add
and
add
cmp
(bad)
(bad)
call
or
push
and
add
add
cmp
(bad)
(bad)
jmp
pop
or
push
cmp
sti
(bad)
call
pop
pop
sub
call
sub
adc
dec
add
add
adc
add
cmp
std
(bad)
call
sub
jle
add
add
and
add
add
jge
add
add
adc
mov
pop
pop
pop
xchg
sbb
or
add
push
cmp
and
inc
cmp
(bad)
call
pop
pop
ins
xchg
adc
and
add
add
mov
(bad)
inc
and
add
pop
jge
add
add
push
add
add
jae
(bad)
call
pop
adc
cmp
or
sti
add
add
xchg
pop
cmp
(bad)
(bad)
call
sub
adc
(bad)
jbe
add
cmp
add
sub
es
and
add
add
cwde
add
push
cmp
adc
and
xchg
and
add
add
adc
add
pop
add
add
outs
add
add
push
add
add
and
add
pop
jge
add
add
add
add
sub
dec
add
add
adc
and
or
pop
and
jmp
and
pop
add
add
or
sbb
add
cmp
add
and
mov
or
inc
add
add
and
add
fs
add
add
push
add
add
or
add
jnp
add
add
jnp
add
add
pop
pop
cmp
add
add
adc
add
cmp
add
add
push
pop
push
lea
add
pop
or
repnz
(bad)
inc
sub
jnp
add
add
jnp
add
add
or
or
add
cmp
adc
(bad)
add
add
and
add
pop
jge
add
add
add
add
cmp
inc
add
add
push
jge
add
add
push
add
add
xchg
add
pop
or
add
and
add
cmp
add
cmp
add
add
or
add
add
add
add
pop
and
add
and
and
je
add
adc
loop
(bad)
call
(bad)
(bad)
call
add
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
(bad)
call
add
add
add
add
add
add
add
add
or
add
cmp
add
add
add
add
add
add
cmp
add
add
and
sub
pop
pop
adc
adc
add
xor
add
add
add
add
xor
(bad)
jmp
call
add
add
(bad)
(bad)
jmp
add
add
(bad)
call
(bad)
(bad)
jmp
(bad)
(bad)
dec
(bad)
(bad)
call
add
add
add
outs
add
add
add
add
push
cmp
add
adc
and
dec
jp
and
les
(bad)
call
pop
and
mov
lods
mov
loopne
cmp
(bad)
call
adc
add
add
add
cmp
add
pop
or
add
jmp
(bad)
(bad)
inc
adc
and
add
add
xchg
add
push
cmp
jle
add
add
add
add
xchg
add
push
cmp
add
add
and
and
(bad)
inc
add
pop
pop
adc
add
add
add
pushf
and
add
add
jmp
cmp
add
xchg
and
adc
cmp
call
add
add
xchg
pop
cmp
(bad)
(bad)
inc
add
add
add
and
add
or
pop
jge
add
add
xchg
and
add
add
push
add
add
or
add
sub
pop
add
adc
add
sbb
add
pop
cmp
add
add
(bad)
jmp
pop
add
add
push
add
adc
and
(bad)
sbb
popa
cmp
(bad)
call
pop
and
jo
xor
arpl
cmp
(bad)
inc
jnp
add
add
cmp
and
add
add
add
add
add
add
push
and
add
add
xchg
add
push
cmp
add
add
and
dec
int3
adc
add
pop
jle
gs
(bad)
call
pop
and
loop
pop
and
xchg
mov
push
(bad)
(bad)
call
adc
add
(bad)
fwait
les
add
(bad)
inc
pop
pop
or
sbb
add
push
cmp
add
add
cmp
(bad)
inc
jnp
add
add
jnp
add
add
add
and
add
sub
add
sub
add
sub
sldt
add
xchg
add
push
cmp
pop
or
add
inc
std
(bad)
call
add
add
add
out
(bad)
inc
jmp
push
add
add
jo
add
and
xchg
(bad)
call
movlps
adc
pop
add
add
adc
mov
(bad)
jmp
and
add
push
cmp
add
and
pop
std
(bad)
call
or
inc
(bad)
(bad)
inc
(bad)
jmp
adc
add
cmp
add
add
and
inc
cmp
std
(bad)
inc
cmp
pop
add
add
push
or
dec
add
add
add
sti
(bad)
(bad)
std
cld
(bad)
(bad)
call
sti
(bad)
(bad)
(bad)
(bad)
jmp
(bad)
call
cld
(bad)
jmp
(bad)
call
(bad)
(bad)
(bad)
cld
std
(bad)
jmp
(bad)
dec
(bad)
push
(bad)
inc
(bad)
(bad)
(bad)
jmp
(bad)
(bad)
(bad)
jge
(bad)
(bad)
(bad)
(bad)
dec
(bad)
(bad)
dec
sti
(bad)
push
std
(bad)
dec
sti
(bad)
(bad)
mov
add
add
(bad)
jmp
(bad)
(bad)
dec
(bad)
push
sti
(bad)
call
(bad)
jmp
add
add
sub
sbb
(bad)
jmp
and
popa
(bad)
(bad)
call
adc
or
add
cmp
(bad)
cmp
sti
(bad)
inc
add
add
stos
add
add
add
add
stos
add
add
add
add
sub
add
xor
add
add
add
add
sub
es
and
repnz
lea
add
add
add
mov
add
sub
add
xor
add
add
add
add
sub
es
and
add
add
add
add
sub
add
adc
or
add
add
push
and
sahf
add
add
mov
add
adc
sbb
add
adc
add
sbb
or
pop
pop
adc
pop
xchg
popa
adc
je
add
sbb
or
or
pop
adc
or
popa
shr
nop
add
push
and
add
add
cmp
add
cmp
add
adc
adc
xor
add
and
add
add
cmp
add
add
and
repnz
stc
and
and
pop
inc
or
add
mov
add
add
add
add
and
add
add
add
add
mov
add
sahf
add
add
add
add
cmp
add
add
xor
(bad)
(bad)
call
push
inc
adc
add
mov
add
sbb
add
add
add
pop
add
add
add
add
add
(bad)
(bad)
dec
add
add
add
cmc
add
add
add
add
(bad)
(bad)
inc
cmp
and
add
add
mov
add
adc
pop
imul
add
cmp
add
jle
add
add
add
add
pop
or
add
add
add
pop
add
add
nop
adc
and
add
add
dec
add
add
adc
and
add
add
cmp
add
adc
and
add
push
and
add
cmp
add
adc
pop
pop
pop
adc
and
inc
add
arpl
pop
and
add
add
or
add
cmp
(bad)
(bad)
call
or
add
sbb
or
add
cmp
add
add
add
add
mov
add
add
fld
add
pop
or
push
and
add
add
iret
add
add
or
add
adc
adc
add
mov
adc
and
add
add
cwde
add
push
cmp
jle
add
add
adc
push
add
add
cmp
mov
cmp
add
add
push
pop
sbb
and
(bad)
inc
and
add
and
add
add
push
lock
stos
cmp
adc
and
sub
fnstcw
jbe
cmp
(bad)
(bad)
call
cmp
add
add
je
add
add
or
add
jle
add
add
push
add
sbb
adc
or
or
adc
sbb
xor
(bad)
call
or
pop
adc
jmp
or
push
adc
dec
add
add
add
(bad)
call
(bad)
(bad)
dec
(bad)
(bad)
(bad)
jns
add
inc
(bad)
(bad)
jmp
std
(bad)
dec
std
(bad)
inc
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
call
(bad)
(bad)
(bad)
jns
(bad)
(bad)
out
std
(bad)
inc
add
add
add
scas
(bad)
(bad)
jmp
add
add
add
jne
(bad)
dec
add
add
add
adc
add
dec
(bad)
(bad)
dec
std
(bad)
call
(bad)
inc
add
add
cld
(bad)
dec
add
mov
add
fdivrp
(bad)
push
add
add
add
add
add
add
add
cmp
jmp
adc
and
ins
jns
and
cmp
std
(bad)
(bad)
jle
add
add
and
add
cmp
(bad)
(bad)
(bad)
cmp
(bad)
call
or
pop
adc
and
add
add
and
(bad)
call
adc
push
cmp
std
(bad)
call
cmp
(bad)
(bad)
call
add
sbb
add
sub
and
add
add
std
(bad)
(bad)
call
adc
pop
add
add
push
cmp
std
(bad)
call
or
repnz
(bad)
call
pop
pop
punpckldq
or
add
adc
xchg
adc
and
add
add
sar
call
or
add
add
mov
(bad)
call
or
push
and
add
add
cmp
adc
and
and
cmp
(bad)
(bad)
jle
add
add
add
add
pop
call
jmp
add
add
cmp
(bad)
call
or
add
sbb
or
pop
xchg
adc
push
add
add
push
(bad)
(bad)
jmp
ds
cli
cmp
(bad)
call
adc
fild
add
xchg
pop
push
pop
adc
and
xchg
test
std
sti
(bad)
dec
je
add
sbb
sbb
pop
popa
or
pop
add
add
sbb
(bad)
call
adc
push
xchg
adc
and
add
add
or
(bad)
(bad)
cmp
pop
add
adc
sbb
xchg
add
push
cmp
std
(bad)
jmp
adc
and
mov
jbe
popa
cmp
outs
add
push
and
add
add
retf
std
(bad)
(bad)
cmp
(bad)
call
mov
add
add
xchg
add
push
cmp
and
add
add
cmp
adc
and
adc
and
add
cmp
mov
push
pop
and
xchg
(bad)
(bad)
jmp
adc
add
sub
jb
(bad)
jmp
cmp
add
add
xor
add
add
add
adc
add
push
and
add
add
repnz
add
or
or
inc
pop
and
or
add
add
add
add
cmp
add
add
cmp
pop
pop
or
imul
sldt
add
mov
add
and
add
add
sbb
pop
aas
sub
add
and
sahf
add
add
sbb
sti
(bad)
cmp
add
add
add
add
pop
and
add
add
add
add
pop
add
add
sub
and
add
add
ins
add
add
push
and
adc
add
pop
add
add
dec
add
add
add
add
cmp
add
adc
and
jmp
xchg
and
push
popa
cmp
add
adc
and
mov
sbb
popa
cmp
add
adc
add
add
jb
(bad)
push
add
fadd
add
mov
add
(bad)
inc
add
add
add
add
add
add
add
add
or
add
cmp
add
add
pop
pop
ins
xchg
adc
add
cmp
add
add
jle
add
add
push
and
add
cmp
add
add
repnz
mov
and
popa
and
pop
inc
or
(bad)
(bad)
call
(bad)
jmp
add
add
(bad)
(bad)
call
add
add
(bad)
jmp
add
add
add
dec
add
add
add
add
add
add
add
add
pop
cmp
add
and
mov
(bad)
call
push
and
and
adc
add
dec
add
add
inc
cmp
(bad)
(bad)
call
push
pop
push
xchg
and
add
add
add
hlt
cmp
(bad)
call
push
and
add
add
add
loope
(bad)
call
cmp
add
and
add
add
push
or
dec
add
add
add
(bad)
(bad)
jmp
std
(bad)
call
add
sbb
add
sar
call
(bad)
(bad)
(bad)
cmp
(bad)
call
(bad)
inc
(bad)
(bad)
push
(bad)
(bad)
inc
add
add
std
(bad)
dec
(bad)
(bad)
cmp
(bad)
call
(bad)
jmp
(bad)
call
std
(bad)
(bad)
jmp
add
sub
(bad)
std
(bad)
jmp
and
add
add
(bad)
(bad)
(bad)
call
pop
pop
imul
pop
(bad)
(bad)
call
inc
je
add
add
adc
and
adc
and
pop
adc
add
push
(bad)
(bad)
(bad)
cmp
(bad)
(bad)
call
or
out
push
stos
pop
and
sub
cmp
or
out
rol
pop
and
lods
pop
ret
popa
cmp
(bad)
call
outs
add
push
and
cwde
add
push
cmp
adc
(bad)
call
gs
add
cmp
(bad)
(bad)
jmp
adc
and
(bad)
and
sbb
(bad)
call
or
or
add
cmp
(bad)
(bad)
jmp
pop
imul
inc
add
pop
sub
popa
inc
add
add
mov
add
add
cmp
xchg
std
(bad)
call
xor
add
add
sbb
add
sub
es
and
add
add
push
add
add
rcl
cmp
add
adc
add
add
add
add
xchg
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
cmp
add
add
mov
pop
pop
or
adc
add
cmp
add
add
cmps
(bad)
(bad)
inc
sub
pop
sub
movs
add
add
and
add
add
aam
add
cmp
push
add
add
pop
and
add
add
cmp
adc
and
mov
loop
and
ret
add
popa
pop
jl
push
popa
inc
add
add
jno
add
and
add
add
mov
add
or
add
add
add
add
pop
pop
frstor
add
adc
add
cmp
add
adc
pop
dec
xchg
pop
jp
adc
add
xchg
add
push
cmp
add
adc
and
adc
retf
popf
popa
cmp
add
adc
and
and
nop
add
add
pop
cmp
add
add
and
add
add
adc
adc
jmp
add
add
dec
or
dec
add
add
add
add
test
(bad)
(bad)
push
add
add
(bad)
(bad)
call
add
add
add
add
(bad)
call
(bad)
(bad)
call
(bad)
push
add
mov
add
mov
add
pop
add
add
(bad)
(bad)
jmp
add
add
(bad)
(bad)
dec
add
add
add
add
cmp
push
pop
and
add
call
cmp
(bad)
(bad)
inc
je
add
add
adc
pop
or
pop
inc
pop
adc
add
gs
(bad)
jmp
pop
mov
add
add
or
out
adc
pop
and
cmp
add
adc
pop
ins
xchg
adc
aaa
cmp
add
adc
and
inc
push
and
mov
popa
cmp
adc
add
xchg
add
push
cmp
(bad)
(bad)
jmp
or
pop
cmp
adc
(bad)
(bad)
(bad)
(bad)
cmp
or
and
in
(bad)
(bad)
jmp
inc
pop
sub
push
mov
sbb
adc
pop
or
add
and
add
sub
(bad)
(bad)
stc
std
(bad)
(bad)
jnp
(bad)
call
(bad)
inc
(bad)
push
(bad)
(bad)
(bad)
jle
(bad)
call
std
(bad)
call
(bad)
jmp
(bad)
call
add
and
add
add
xchg
add
push
cmp
adc
and
and
ss
popa
cmp
jo
add
and
add
push
cmp
(bad)
jmp
jle
add
add
push
and
add
add
pop
(bad)
(bad)
jmp
xchg
push
cmp
(bad)
call
or
or
add
cmp
(bad)
jmp
and
cmp
and
add
add
cmp
(bad)
(bad)
jmp
adc
pop
cmp
add
add
add
jo
sub
jo
add
pop
jl
pushf
pop
adc
add
add
(bad)
(bad)
cmp
add
adc
or
lds
add
pop
add
adc
add
push
jle
add
add
push
jle
add
add
pop
and
and
and
and
pop
inc
or
add
les
add
in
add
add
add
add
add
dec
add
add
add
add
add
add
add
add
add
add
add
cmp
add
add
or
or
and
test
adc
mov
mov
and
cdq
hlt
mov
cmp
push
and
add
xchg
and
adc
xlat
cmp
(bad)
call
jno
add
and
stos
lea
addr16
(bad)
call
or
outs
pusha
js
pop
and
push
dec
cmp
push
(bad)
(bad)
call
add
add
add
add
add
outs
add
add
add
add
add
or
add
stos
(bad)
(bad)
dec
add
add
add
add
add
and
sbb
cmp
(bad)
(bad)
inc
and
popa
inc
add
add
aas
add
add
lds
mov
call
adc
ds
int3
pop
and
pop
(bad)
popa
cmp
(bad)
(bad)
call
or
sahf
(bad)
mov
and
or
popa
cmp
(bad)
(bad)
call
or
shl
(bad)
(bad)
call
cmp
or
push
pop
push
pop
(bad)
(bad)
inc
mov
add
sbb
mov
add
sbb
xchg
add
push
or
(bad)
(bad)
inc
pop
pop
or
int3
add
add
loope
add
or
add
sbb
pop
aas
or
add
push
adc
call
pop
and
cmp
(bad)
(bad)
inc
sub
pop
and
adc
inc
add
adc
or
add
add
add
adc
add
push
jle
add
add
add
adc
fwait
sbb
rol
pop
pop
or
or
add
xor
add
dec
add
add
add
add
(bad)
(bad)
jmp
add
add
add
cmp
add
mov
add
xchg
or
popa
cmp
add
push
popa
inc
add
add
mov
add
and
add
(bad)
call
or
pop
lock
and
fwait
pushf
fwait
popa
cmp
or
xchg
retf
and
(bad)
cmps
popa
cmp
(bad)
dec
inc
or
add
push
add
inc
add
add
add
add
add
add
(bad)
(bad)
(bad)
call
add
sbb
add
add
add
add
pop
xchg
in
jg
ss
(bad)
call
pop
and
int3
outs
sbb
popa
cmp
(bad)
(bad)
call
or
sub
(bad)
(bad)
call
cmp
(bad)
call
or
inc
mov
add
sbb
sub
pop
pop
or
pop
or
inc
sbb
pop
add
add
or
call
cmp
(bad)
(bad)
jmp
sbb
push
adc
inc
add
add
add
add
add
add
add
jb
add
sub
clc
(bad)
(bad)
inc
add
adc
or
xchg
add
sbb
add
sub
es
jle
add
add
add
cmps
pop
jo
and
mov
or
or
or
add
stos
add
add
add
aaa
add
add
add
add
add
add
add
add
add
(bad)
(bad)
(bad)
(bad)
cmp
or
jp
loope
pop
and
jp
ds
cmp
or
stos
xor
(bad)
call
or
or
sub
mov
cmp
push
add
popa
inc
add
add
bound
add
and
jo
xor
js
(bad)
call
adc
or
das
test
pop
and
inc
(bad)
call
adc
and
mov
push
(bad)
(bad)
call
add
or
add
sbb
add
adc
add
ja
(bad)
call
add
add
add
ja
(bad)
jmp
add
add
add
add
(bad)
(bad)
je
cmp
(bad)
(bad)
call
cmp
add
add
mov
mov
add
sbb
add
sub
add
push
pop
pop
or
fiadd
add
or
inc
or
sahf
add
add
sbb
pop
aas
or
add
sbb
add
xchg
(bad)
call
cmp
(bad)
(bad)
jmp
sbb
pop
adc
inc
add
add
add
add
add
jae
add
es
add
add
add
add
add
add
add
add
add
add
sub
stc
(bad)
(bad)
inc
add
xor
add
add
sub
es
jle
add
add
add
add
push
and
in
dec
xor
adc
pop
or
or
add
(bad)
(bad)
(bad)
jmp
add
add
add
add
add
add
add
add
add
add
add
add
mov
or
add
test
(bad)
call
pop
and
mov
pop
imul
adc
and
iret
or
cmp
xlat
jb
cmp
add
or
add
or
add
mov
add
je
add
retf
add
add
add
add
add
add
add
add
add
add
add
add
add
and
push
(bad)
(bad)
call
or
add
mov
adc
dec
jns
cmp
inc
add
pop
inc
pop
push
popa
inc
add
add
sbb
test
sbb
je
add
es
adc
test
(bad)
call
add
repnz
add
ss
(bad)
call
adc
and
add
add
cmp
(bad)
inc
mov
add
sbb
xchg
add
push
or
adc
inc
(bad)
(bad)
inc
pop
pop
or
and
pop
or
adc
sub
sbb
or
add
pop
or
add
sbb
(bad)
call
push
and
adc
and
add
xchg
pop
cmp
(bad)
(bad)
inc
je
add
sbb
adc
pop
adc
cmp
(bad)
(bad)
call
xor
add
add
adc
add
push
sub
es
sub
cwde
add
push
cmp
and
add
add
cwde
add
push
cmp
add
add
loope
add
push
je
add
sbb
and
add
popf
and
add
add
retf
add
add
add
add
add
add
pop
cmp
adc
mov
and
cmp
add
add
je
add
sbb
and
and
add
add
lea
add
push
je
add
sbb
and
and
add
add
jbe
add
and
fdivr
cmp
mov
or
or
add
cmp
add
cmp
add
adc
cmp
add
pop
add
add
inc
add
add
les
sub
cmp
add
push
je
add
sbb
mov
and
add
add
and
add
adc
fistp
aam
and
popa
cmp
add
or
add
add
add
add
add
data16
add
add
jg
(bad)
call
(bad)
(bad)
jmp
adc
add
cmp
add
add
and
sbb
and
cmp
add
add
jle
add
add
and
add
add
mov
add
jmp
popa
cmp
add
add
add
jle
add
xchg
and
add
add
and
add
add
pop
add
and
sbb
cmp
add
add
and
add
mov
add
cmp
add
pop
add
add
popa
add
add
pop
pop
xchg
or
adc
cmp
add
and
jge
add
push
jne
add
sbb
and
add
popf
and
add
add
xchg
add
push
cmp
add
add
and
push
add
add
je
add
sbb
and
or
add
jmp
or
add
dec
push
add
or
add
add
add
(bad)
(bad)
inc
(bad)
jmp
add
add
(bad)
call
add
add
(bad)
dec
(bad)
(bad)
(bad)
mov
(bad)
(bad)
push
add
add
(bad)
(bad)
jmp
add
mov
(bad)
jmp
std
(bad)
dec
std
(bad)
push
(bad)
(bad)
push
add
add
(bad)
(bad)
jmp
(bad)
(bad)
(bad)
fdivr
(bad)
call
(bad)
dec
add
add
add
add
push
add
add
(bad)
(bad)
(bad)
jmp
mov
mov
je
add
sbb
add
add
ins
(bad)
(bad)
call
or
or
add
cmp
(bad)
jmp
xor
push
inc
cmp
add
xchg
pop
and
fcmovne
or
jp
add
push
je
add
sbb
and
add
popf
and
add
cmp
(bad)
jmp
les
sub
cmp
add
push
jne
add
sbb
and
add
add
or
jmp
cmp
add
sub
add
hlt
pop
and
(bad)
push
add
add
jne
add
and
add
add
(bad)
(bad)
call
lea
and
into
(bad)
(bad)
jmp
les
sub
and
and
pop
inc
adc
add
jne
(bad)
jmp
(bad)
dec
(bad)
call
(bad)
(bad)
call
cld
(bad)
call
std
(bad)
push
(bad)
(bad)
dec
std
(bad)
push
std
(bad)
push
(bad)
(bad)
jmp
(bad)
(bad)
push
(bad)
(bad)
(bad)
cmp
std
(bad)
jmp
and
add
add
cmp
(bad)
jmp
sub
xor
add
add
add
add
sub
es
add
mov
add
xor
add
add
add
add
sub
es
jae
add
or
add
adc
or
or
add
add
add
sub
es
sub
add
xor
add
add
adc
add
push
add
add
movs
add
push
sub
add
adc
or
or
add
add
add
sub
es
add
cmps
add
push
sub
adc
or
or
add
adc
add
push
add
add
cmps
add
push
sub
add
adc
or
or
add
add
add
sub
es
add
test
add
sub
adc
or
or
add
add
add
sub
es
add
test
add
xor
push
add
add
add
sub
es
add
add
sub
add
adc
or
or
add
add
add
sub
es
add
stos
add
push
sub
adc
or
or
add
add
add
sub
es
add
lods
add
push
sub
adc
or
or
add
add
add
sub
es
add
lods
add
push
sub
adc
or
or
add
add
add
sub
es
jae
add
or
add
adc
or
or
add
add
add
sub
es
add
scas
add
push
sub
adc
or
or
add
add
add
sub
es
jae
add
or
add
adc
or
or
add
add
add
sub
es
add
sub
adc
or
or
add
adc
add
push
add
add
push
add
or
add
add
xor
add
add
add
add
sub
es
jae
add
or
add
adc
or
or
add
adc
add
push
add
add
push
add
or
add
add
xor
add
add
add
add
sub
es
jae
add
or
add
adc
or
or
add
add
add
sub
es
sub
add
adc
or
or
add
add
add
sub
es
add
add
or
add
xor
add
add
add
add
sub
es
add
sub
adc
or
push
add
add
add
sub
es
add
add
sub
add
adc
or
or
add
add
add
sub
es
jae
add
or
add
adc
or
or
add
add
add
sub
es
jae
add
or
add
adc
or
or
add
add
add
sub
es
add
sub
adc
or
or
add
add
add
sub
es
add
add
or
add
xor
add
add
add
add
sub
es
add
mov
add
sub
adc
or
or
add
add
add
sub
es
add
mov
add
sub
adc
or
or
add
adc
add
push
add
add
mov
add
sub
add
adc
or
or
add
add
add
sub
es
add
sub
adc
or
or
add
add
add
sub
es
add
mov
add
xor
add
add
add
add
add
add
push
pop
sub
add
xor
add
add
add
add
add
add
push
push
sub
add
xor
add
add
add
add
add
add
push
add
or
add
or
add
mov
add
xor
add
add
add
add
add
add
push
add
or
add
or
add
or
add
outs
add
push
sub
adc
or
pop
add
add
add
add
add
push
add
or
add
or
add
or
add
outs
add
push
sub
adc
or
adc
add
add
add
sub
es
add
or
add
or
add
int3
add
push
sub
adc
or
pop
add
add
add
add
add
push
add
or
add
or
add
or
add
jo
add
sub
adc
or
adc
add
add
add
sub
es
dec
add
dec
add
outs
pop
add
or
add
adc
or
adc
add
add
add
sub
es
dec
add
dec
add
sub
add
sub
add
xor
add
add
add
add
add
add
push
dec
add
dec
add
sub
or
add
adc
or
adc
add
add
add
sub
es
add
or
add
or
add
or
add
sub
adc
or
sbb
add
add
add
sub
es
add
or
add
or
add
or
add
or
add
and
add
sub
adc
or
sldt
add
add
add
add
push
add
or
add
pop
add
or
add
xor
add
add
add
add
add
add
push
add
pop
add
or
add
xor
add
add
add
add
add
add
push
add
or
add
or
add
or
add
pop
add
or
add
xor
add
add
add
add
add
add
push
add
or
add
pusha
add
or
add
xor
add
add
add
add
add
add
push
add
or
add
or
add
or
add
popa
add
or
add
xor
add
add
add
add
add
add
push
add
or
add
bound
add
sub
adc
or
sldt
add
add
add
add
push
add
or
add
arpl
add
sub
adc
or
sbb
add
add
add
sub
es
dec
add
dec
add
dec
add
dec
add
outs
push
add
or
add
adc
or
push
add
add
add
add
add
push
dec
add
outs
add
or
add
adc
or
sldt
add
add
add
add
push
add
or
add
add
or
add
xor
add
add
add
add
add
add
push
add
or
add
data16
or
add
xor
add
add
add
add
add
add
push
dec
add
outs
cmp
add
sub
add
xor
add
add
add
add
add
add
push
dec
add
dec
add
outs
add
or
add
adc
or
or
add
add
add
sub
es
add
push
add
xor
add
add
add
add
add
add
push
add
or
add
or
add
push
add
or
add
xor
sbb
add
add
add
sub
es
dec
add
dec
add
dec
add
dec
add
outs
imul
add
xor
add
add
add
add
add
add
push
dec
add
dec
add
outs
push
add
sub
add
xor
add
add
add
add
add
add
push
add
or
add
imul
or
add
xor
add
add
add
add
add
add
push
add
or
add
ins
add
or
add
xor
add
add
add
add
add
add
push
dec
add
dec
add
dec
add
outs
adc
add
sub
add
xor
add
add
add
add
add
add
push
dec
add
dec
add
outs
ins
add
or
add
adc
or
push
add
add
add
add
add
push
dec
add
outs
outs
add
or
add
adc
or
sldt
add
add
sub
es
sub
es
add
rol
push
sub
adc
or
lods
add
add
add
push
jle
add
add
push
jle
add
add
pop
and
cs
jg
and
pop
inc
or
add
add
add
add
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
fadd
add
pop
adc
lods
xor
pop
and
inc
push
xor
test
(bad)
call
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
mov
imul
call
mov
and
pop
(bad)
(bad)
call
push
and
add
add
and
or
sub
inc
(bad)
(bad)
call
or
adc
and
ss
(bad)
inc
add
pop
and
add
add
inc
add
add
mov
sbb
(bad)
call
or
xchg
shl
pop
and
aas
in
popa
cmp
(bad)
(bad)
call
or
or
or
js
cmp
(bad)
(bad)
call
or
sahf
sti
fisttp
pop
and
cmp
(bad)
(bad)
call
push
and
add
xchg
and
cmp
(bad)
call
or
sbb
add
inc
mov
add
sbb
mov
adc
pop
adc
(bad)
(bad)
inc
pop
pop
or
jl
add
or
adc
add
or
pop
or
sldt
add
pop
and
adc
call
push
pop
inc
xchg
sbb
cmp
(bad)
(bad)
inc
sub
adc
call
xor
add
add
adc
add
push
and
add
add
cmp
add
add
and
adc
mov
and
add
add
inc
add
and
(bad)
mul
push
test
adc
pop
or
add
pop
add
add
add
xchg
add
add
add
add
add
add
add
add
add
add
add
add
add
and
add
add
stos
add
add
fcom
xlat
mov
cmps
(bad)
(bad)
call
or
push
pop
not
arpl
popa
cmp
add
add
add
add
mov
(bad)
(bad)
jle
add
add
pop
and
add
add
add
add
xchg
xchg
push
mov
call
or
mov
jb
pop
and
adc
js
cmp
(bad)
call
push
pop
cmp
add
add
xor
add
adc
and
dec
test
push
(bad)
rcr
(bad)
call
pop
pop
imul
adc
cmp
add
and
add
add
push
or
dec
add
add
add
add
add
(bad)
(bad)
(bad)
std
(bad)
(bad)
jmp
(bad)
(bad)
(bad)
mov
add
add
add
add
add
add
add
inc
(bad)
(bad)
call
add
add
add
je
add
popa
add
add
add
add
add
add
add
add
adc
add
sub
add
push
cmp
push
adc
add
cmp
adc
and
push
mov
loop
popa
cmp
call
pop
and
adc
mov
push
add
jbe
push
popa
inc
add
add
das
(bad)
(bad)
jmp
add
add
cmp
(bad)
(bad)
cmp
add
add
pop
pop
or
add
add
cmp
(bad)
(bad)
call
or
or
mov
pop
and
cmp
(bad)
(bad)
call
or
adc
add
cmp
(bad)
call
or
pop
or
sub
add
cmp
add
add
and
clc
(bad)
(bad)
jmp
pushf
add
add
or
add
cmp
(bad)
(bad)
call
add
add
cmp
(bad)
(bad)
inc
jne
add
add
adc
and
pop
pop
adc
add
mov
push
add
add
push
and
add
add
stos
(bad)
(bad)
call
push
and
and
add
add
add
add
cmp
and
add
add
test
(bad)
(bad)
cmp
(bad)
call
or
mov
stc
or
sbb
cmp
call
add
add
(bad)
(bad)
call
(bad)
(bad)
inc
(bad)
call
add
add
(bad)
jmp
(bad)
(bad)
jmp
(bad)
jmp
add
stc
(bad)
(bad)
jmp
(bad)
jmp
add
add
ret
push
cmp
(bad)
(bad)
jmp
pop
push
or
add
ret
push
cmp
(bad)
(bad)
(bad)
cmp
(bad)
(bad)
(bad)
cmp
mov
and
add
add
rol
push
cmp
std
(bad)
jmp
cmp
add
adc
push
add
add
adc
add
push
jle
add
add
add
sbb
loopne
and
adc
stos
popa
and
pop
inc
or
add
jbe
add
add
add
add
add
add
add
add
add
add
add
add
add
ret
(bad)
cmp
add
add
add
add
add
inc
mov
movs
scas
xchg
popa
cmp
add
cmp
add
adc
and
stos
bswap
pop
and
sbb
dec
popa
cmp
add
pop
or
mov
rcr
sub
popa
cmp
(bad)
dec
add
imul
inc
add
add
jb
add
and
in
pop
stos
cmp
(bad)
dec
inc
or
add
push
add
add
add
push
add
add
add
mov
add
add
add
add
add
add
add
mov
add
add
sbb
xchg
cmps
cmp
(bad)
(bad)
call
or
div
shr
call
mov
and
xchg
test
(bad)
call
or
cmp
(bad)
(bad)
call
add
pop
add
add
add
loop
(bad)
call
or
pop
or
inc
mov
add
sbb
add
sub
pop
or
inc
pop
pop
or
add
jle
add
add
sbb
add
add
sbb
pop
pushf
pop
sbb
pop
add
add
(bad)
call
add
fiadd
add
xchg
and
cmp
(bad)
(bad)
call
add
pop
add
add
cmp
(bad)
(bad)
inc
sub
inc
adc
or
or
add
add
add
sub
es
add
ret
add
push
sub
adc
or
or
add
add
add
sub
es
sub
add
push
sub
add
xor
push
add
add
add
sub
es
add
add
sub
add
push
sub
add
xor
add
add
add
add
add
add
push
dec
add
sub
add
sub
add
xor
add
add
add
add
add
add
push
pop
sub
add
xor
add
add
add
add
add
add
push
push
sub
add
xor
add
add
add
add
add
add
push
dec
add
outs
sbb
add
sub
add
xor
add
add
add
add
add
add
push
add
pop
add
or
add
xor
sbb
add
add
add
sub
es
dec
add
dec
add
dec
add
dec
add
outs
sbb
add
sub
add
xor
push
add
sbb
add
sub
es
jle
add
add
add
and
sub
and
leave
dec
jmp
and
inc
or
add
retf
(bad)
(bad)
call
add
mov
add
add
add
add
add
xor
add
cmp
add
push
popa
inc
add
add
mov
add
and
dec
sar
(bad)
(bad)
call
or
sub
jbe
pop
and
ins
xor
(bad)
call
or
(bad)
imul
cmp
adc
outs
in
cmps
loop
jge
(bad)
call
add
or
add
das
add
add
add
aaa
add
add
add
cmp
(bad)
jns
add
inc
add
add
add
add
add
or
add
and
inc
(bad)
(bad)
call
or
add
dec
pop
adc
cmp
cs
(bad)
call
add
add
(bad)
(bad)
call
add
call
add
sbb
sub
add
push
push
pop
pop
or
jle
add
or
lds
add
or
mov
add
pop
or
or
cmp
pop
adc
data16
(bad)
call
cmp
(bad)
(bad)
call
adc
pop
(bad)
(bad)
jmp
push
adc
adc
inc
add
add
add
add
add
add
add
add
add
add
add
mov
push
sub
(bad)
(bad)
inc
add
xor
jp
add
adc
add
push
jle
add
add
add
add
push
pop
or
add
xchg
adc
in
add
popa
and
inc
or
add
and
add
add
add
imul
add
add
add
(bad)
(bad)
(bad)
cmp
or
mov
test
mov
popa
cmp
adc
xrelease
cmp
or
add
add
and
xchg
(bad)
(bad)
call
or
xor
adc
pop
and
jmp
daa
popa
cmp
add
or
popa
inc
add
add
inc
add
add
dec
clc
jno
cmp
(bad)
call
add
or
add
mov
(bad)
jmp
add
push
add
adc
add
pop
add
add
add
add
add
add
add
add
add
ffree
inc
push
cmp
(bad)
call
outs
(bad)
(bad)
call
push
and
adc
mov
(bad)
inc
mov
add
sbb
leave
add
push
push
pop
pop
or
dec
or
mov
and
or
sbb
cmp
sbb
add
cmp
call
add
out
(bad)
(bad)
call
add
add
add
addr16
(bad)
jmp
sbb
or
or
add
add
add
add
add
add
add
add
add
add
add
add
mov
cmp
(bad)
(bad)
inc
add
xor
add
add
add
add
sub
es
add
sub
add
push
sub
xor
add
add
add
add
sub
es
add
int
add
sub
adc
or
adc
add
add
add
sub
es
dec
add
dec
add
sub
add
sub
add
xor
add
add
add
add
add
add
push
pop
sub
add
xor
add
add
add
add
add
add
push
push
sub
add
xor
add
add
add
add
add
add
push
dec
add
outs
add
or
add
adc
or
lds
add
add
add
sub
es
sub
es
push
sub
add
push
cmp
push
add
add
cmp
add
add
add
push
jge
add
add
add
add
cmp
add
add
add
add
add
push
add
push
and
add
add
add
add
sbb
add
add
add
add
cmp
jae
add
push
jge
add
add
xor
add
and
add
add
push
add
dec
add
add
add
add
add
(bad)
call
add
add
(bad)
(bad)
call
add
add
add
add
test
(bad)
jmp
and
cmp
(bad)
(bad)
jmp
add
rol
add
and
add
add
mov
add
add
xor
add
add
adc
add
push
sub
es
sub
add
push
sub
add
push
cmp
add
add
and
add
add
push
add
add
push
lea
add
and
add
rol
add
add
add
add
add
cmp
add
add
add
add
add
sbb
add
add
rol
add
cmp
add
push
add
add
push
add
add
push
add
dec
add
add
add
add
add
add
add
add
add
(bad)
(bad)
(bad)
jnp
(bad)
dec
add
add
add
add
add
add
add
add
cmp
(bad)
(bad)
call
or
add
add
cmp
sub
jmp
cmp
and
xor
and
cmp
popa
cmp
sbb
add
add
rol
add
cmp
add
or
add
cmp
jmp
sub
add
add
inc
add
(bad)
(bad)
dec
add
das
(bad)
(bad)
dec
add
add
add
and
add
add
dec
(bad)
(bad)
(bad)
cmp
push
lea
add
and
add
rol
add
add
add
fsin
(bad)
jmp
and
and
(bad)
dec
and
lock
retf
pop
and
inc
lods
popa
cmp
add
add
or
or
add
cmp
(bad)
jmp
lods
cs
pop
and
mov
dec
popa
and
or
add
sar
inc
(bad)
(bad)
call
add
cmps
(bad)
(bad)
dec
(bad)
(bad)
call
(bad)
push
(bad)
(bad)
jmp
pop
add
add
(bad)
(bad)
(bad)
jmp
mov
add
xor
add
add
add
add
sub
es
add
sub
add
push
sub
xor
add
add
add
add
add
add
push
dec
add
sub
add
sub
add
xor
add
add
add
add
add
add
push
pop
sub
add
xor
add
add
add
add
add
add
push
push
sub
add
xor
add
add
add
add
add
add
push
add
or
add
or
add
push
add
or
add
xor
add
add
add
add
sub
es
sub
es
add
fld
add
sub
adc
or
fld
add
pop
add
adc
add
push
jle
add
add
push
and
jl
mov
sbb
push
or
or
or
add
adc
add
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
in
add
add
or
adc
repz
mov
(bad)
call
adc
movs
fild
and
ja
jge
cmp
add
push
popa
inc
add
add
mov
add
mov
stos
in
lea
jl
(bad)
call
add
add
add
add
add
add
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
hlt
mov
cmp
(bad)
call
push
and
pop
inc
pop
adc
mov
and
(bad)
call
or
xor
dec
fwait
js
popa
cmp
(bad)
(bad)
call
and
lods
xchg
pop
and
xor
cmp
(bad)
(bad)
(bad)
jle
add
add
pop
adc
and
and
and
cmp
(bad)
(bad)
call
(bad)
add
push
and
adc
cmp
(bad)
(bad)
call
cmp
pop
and
and
cmp
or
or
add
inc
mov
add
sbb
add
xlat
add
push
or
push
pop
adc
(bad)
(bad)
inc
mov
add
sbb
add
fadd
add
or
or
add
inc
pop
pop
or
mov
and
and
add
add
sbb
pop
aas
adc
push
and
add
xchg
and
adc
call
cmp
(bad)
(bad)
inc
jne
add
add
push
adc
inc
add
adc
or
or
add
adc
add
push
add
add
fiadd
add
sub
add
adc
or
or
add
adc
add
push
add
add
fld
add
sub
add
adc
or
push
add
add
add
add
add
push
dec
add
sub
add
sub
add
xor
add
add
add
add
add
add
push
dec
add
dec
add
dec
add
outs
jb
add
sub
add
xor
add
add
add
add
add
add
push
pop
sub
add
xor
add
add
add
add
add
add
push
push
sub
add
xor
add
add
add
add
add
add
push
dec
add
dec
add
dec
add
outs
jae
add
sub
add
xor
add
add
add
add
sub
es
sub
es
add
add
add
add
add
add
sub
add
push
sub
adc
or
push
add
add
add
add
add
push
dec
add
sub
add
sub
add
xor
add
add
add
add
add
add
push
pop
sub
add
xor
add
add
add
add
add
add
push
push
sub
add
xor
repnz
add
add
sub
es
sub
es
and
add
add
cmp
add
add
and
stos
add
add
push
or
add
add
cmp
add
add
or
add
call
xor
add
pop
pop
and
mov
add
and
add
push
cmp
add
add
pop
or
add
pop
adc
repz
(bad)
call
add
test
or
add
stos
add
add
cmc
add
add
and
add
add
sar
(bad)
jmp
sbb
nop
add
add
fild
add
push
jne
add
sbb
and
pushf
and
add
add
je
add
jle
add
add
add
adc
add
sub
add
push
cmp
add
es
cmc
xchg
cmp
add
pop
and
mov
add
add
cmp
add
add
mov
add
push
je
add
sbb
and
or
sub
add
push
cmp
add
cmp
add
add
add
gs
or
add
pop
add
add
or
add
cmp
(bad)
(bad)
inc
jne
add
sbb
add
push
sbb
add
or
loopne
add
cmp
add
add
and
add
add
mov
add
and
add
add
mov
add
or
add
mov
add
cli
sub
cmps
add
add
inc
adc
add
add
add
fs
(bad)
(bad)
jnp
(bad)
inc
add
add
(bad)
(bad)
(bad)
jmp
add
(bad)
(bad)
jmp
add
add
add
add
add
add
(bad)
(bad)
call
(bad)
(bad)
jmp
sbb
add
cmp
add
push
and
daa
clc
cvtps2pd
gs
cmp
add
and
add
add
or
push
add
add
sub
add
pop
push
or
call
or
repz
(bad)
inc
je
add
sbb
add
push
sbb
add
and
add
sub
add
push
cmp
add
add
adc
cdq
add
add
add
sub
add
push
cmp
add
add
pop
and
or
and
add
sub
add
push
cmp
add
add
cmp
(bad)
(bad)
inc
je
add
sbb
and
pushf
and
add
add
mov
add
adc
add
xchg
pop
or
add
xchg
add
add
pop
sti
ins
push
and
add
idiv
ja
add
jle
add
add
add
add
outs
add
add
push
and
ja
pop
and
add
jecxz
cmp
add
adc
adc
add
add
daa
add
add
add
and
add
add
cmp
add
add
push
or
xor
(bad)
jmp
and
add
add
cmp
add
sbb
call
or
repz
(bad)
call
adc
add
add
add
dec
pop
add
or
add
add
add
(bad)
(bad)
call
call
add
(bad)
cld
(bad)
dec
add
add
add
add
add
add
(bad)
jmp
jmp
(bad)
(bad)
call
(bad)
(bad)
jmp
(bad)
dec
cld
(bad)
jmp
std
(bad)
inc
(bad)
(bad)
cli
add
add
add
pop
(bad)
(bad)
jmp
cld
(bad)
(bad)
mov
cld
(bad)
(bad)
ds
(bad)
call
std
(bad)
inc
(bad)
jmp
(bad)
push
add
add
(bad)
inc
add
pop
sub
add
push
cmp
(bad)
(bad)
jmp
and
add
add
pop
(bad)
(bad)
(bad)
cmp
(bad)
(bad)
call
push
and
push
rcl
pop
popf
popa
cmp
add
pop
prefetch
push
add
add
cmp
(bad)
call
push
and
pop
aam
pop
and
imul
je
add
sbb
and
pushf
and
add
add
push
(bad)
(bad)
jmp
bound
cmp
clc
jno
pop
popa
and
pop
inc
or
cld
(bad)
(bad)
cmp
add
sbb
(bad)
(bad)
(bad)
jg
(bad)
call
std
(bad)
jmp
(bad)
push
add
add
(bad)
(bad)
inc
inc
sti
(bad)
jmp
pop
add
add
mov
push
and
aas
test
pop
and
cmp
push
and
cmps
(bad)
pop
and
ds
popa
cmp
or
jge
jg
(bad)
call
adc
add
cmp
(bad)
jmp
cmp
cld
(bad)
inc
and
add
add
imul
add
add
pop
(bad)
(bad)
(bad)
cmp
jne
add
sbb
and
pushf
and
add
add
inc
(bad)
(bad)
call
add
in
add
cmp
(bad)
(bad)
(bad)
cmp
add
adc
or
push
add
add
add
sub
es
sub
es
add
out
add
add
sub
add
sub
add
xor
add
add
add
add
add
add
push
pop
sub
add
xor
add
add
add
add
add
add
push
push
sub
add
xor
add
add
add
add
add
add
push
dec
add
sub
add
sub
add
xor
add
add
add
add
sub
es
sub
es
add
jmp
xor
add
add
add
adc
add
push
sub
es
push
sub
add
push
cmp
add
and
add
add
cli
add
add
pop
add
add
inc
add
add
add
add
add
add
add
add
cmp
add
add
lds
sbb
add
lea
add
and
add
jmp
pop
add
add
jecxz
add
and
add
add
mov
jnp
retf
daa
cmp
add
add
adc
and
add
jmp
add
add
or
add
push
cmp
add
and
retf
daa
and
sbb
inc
push
add
add
add
add
(bad)
call
(bad)
(bad)
jmp
add
add
add
add
cmp
add
add
or
or
add
cmp
add
add
jne
stc
jno
mov
lea
add
and
add
jmp
pop
add
add
cmp
(bad)
jmp
push
add
add
push
add
dec
add
add
add
add
add
(bad)
(bad)
inc
(bad)
(bad)
jmp
(bad)
(bad)
call
(bad)
(bad)
call
(bad)
jmp
add
add
add
add
cmp
(bad)
(bad)
dec
and
push
xchg
(bad)
pop
and
cmp
(bad)
call
or
pop
add
add
cmp
sub
xor
add
add
add
add
sub
es
add
sub
add
push
sub
xor
add
add
add
add
add
add
push
dec
add
sub
add
sub
add
xor
add
add
add
add
add
add
push
pop
sub
add
xor
add
add
add
add
add
add
push
push
sub
add
xor
add
add
add
add
add
add
push
add
or
add
or
add
push
add
or
add
xor
pop
push
add
xor
add
sub
es
sub
es
and
add
add
cmp
add
add
sbb
adc
add
sub
add
push
cmp
jle
add
add
sbb
and
add
cmp
and
adc
mov
adc
add
pop
adc
and
add
out
add
push
sub
add
pop
add
add
cmp
add
adc
sbb
sbb
nop
shl
fiadd
add
sbb
add
sub
add
push
cmp
add
es
or
add
add
xor
add
pop
push
lea
add
add
and
add
add
push
add
add
clc
add
add
add
add
push
pop
or
dec
add
push
popf
and
add
add
inc
add
and
fstp
out
cmp
add
add
cld
cdq
pop
call
add
or
and
add
add
pop
dec
xchg
pop
dec
pop
or
add
add
sub
add
push
cmp
add
add
adc
xor
and
add
add
mov
add
push
or
mov
add
pop
adc
repz
(bad)
call
push
lea
add
sub
and
add
add
mov
add
cmp
add
jle
add
add
and
add
add
pop
sbb
add
popf
and
add
add
lock
push
cmp
add
es
adc
and
add
out
add
push
sub
add
adc
add
sub
add
push
cmp
add
es
add
add
and
add
add
sub
add
and
jb
cmp
adc
add
add
add
aas
add
add
add
test
add
(bad)
(bad)
jmp
add
add
add
add
add
cmp
add
inc
(bad)
(bad)
call
add
add
add
add
add
add
(bad)
push
(bad)
(bad)
jmp
push
add
add
cmp
xchg
(bad)
(bad)
inc
pop
push
aas
push
add
add
sub
add
cmp
or
jnp
(bad)
call
or
repz
(bad)
call
add
add
add
add
and
cmp
add
and
xchg
test
sub
popa
and
pop
inc
push
add
add
(bad)
js
add
and
add
or
(bad)
push
add
add
add
add
add
add
std
(bad)
push
add
add
add
(bad)
(bad)
call
sbb
add
cmp
add
add
cld
(bad)
(bad)
inc
and
add
add
cmp
add
cmp
add
add
or
add
dec
push
add
or
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
(bad)
jmp
std
(bad)
jmp
(bad)
(bad)
dec
add
add
add
add
add
add
add
add
add
(bad)
(bad)
jmp
add
add
add
add
add
or
add
sar
(bad)
jmp
add
add
std
(bad)
call
std
(bad)
(bad)
jmp
add
add
cld
(bad)
dec
cld
(bad)
call
add
add
(bad)
(bad)
call
add
add
add
add
sldt
add
inc
(bad)
(bad)
(bad)
cmp
push
add
add
add
and
add
push
cmp
(bad)
(bad)
jmp
cmp
(bad)
(bad)
(bad)
jle
add
add
pop
test
pop
push
bound
dec
add
push
popf
push
sub
add
push
cmp
(bad)
jmp
and
add
add
cld
(bad)
(bad)
(bad)
cmp
std
(bad)
(bad)
jle
add
add
and
(bad)
(bad)
inc
pop
pop
or
dec
add
push
popf
and
add
add
xlat
(bad)
(bad)
(bad)
jle
add
add
and
pushf
and
add
add
sar
dec
and
out
add
add
and
add
add
test
imul
add
and
pushf
and
lock
push
cmp
cmp
(bad)
inc
pop
pop
or
and
add
sub
add
push
cmp
(bad)
jmp
jle
add
add
and
pushf
and
add
add
pop
(bad)
(bad)
jmp
mov
(bad)
(bad)
(bad)
jle
add
add
pop
xor
pop
push
bound
dec
add
push
popf
and
add
add
cmp
(bad)
(bad)
cmp
std
(bad)
inc
and
add
add
mov
(bad)
jmp
add
add
pop
cmp
adc
inc
pop
and
aam
mov
xchg
std
(bad)
dec
and
sbb
and
add
add
cmc
std
(bad)
(bad)
jle
add
add
and
or
cmp
std
(bad)
call
adc
add
add
sub
add
push
cmp
std
(bad)
jmp
adc
xchg
pop
and
ins
mov
popa
cmp
(bad)
call
add
rcr
out
adc
popa
cmp
std
(bad)
call
add
clc
pop
and
xchg
das
popa
cmp
or
movs
sti
(bad)
call
or
add
icebp
add
push
cmp
(bad)
(bad)
cmp
(bad)
call
or
or
add
cmp
(bad)
call
add
iret
add
add
add
cmp
(bad)
call
push
or
adc
dec
std
(bad)
jmp
fiadd
cld
(bad)
jmp
push
add
add
sub
add
add
add
cmp
std
(bad)
call
or
adc
add
cmp
std
(bad)
(bad)
cmp
sti
(bad)
inc
and
add
add
popa
sti
(bad)
jmp
sub
add
push
cmp
cld
(bad)
jmp
and
add
add
sub
add
sub
add
sub
add
push
cmp
cld
(bad)
jmp
sbb
mov
(bad)
call
or
call
add
iret
add
add
add
cmp
xor
aas
cld
(bad)
inc
and
mov
(bad)
jmp
or
add
cmp
or
ja
(bad)
call
add
popf
add
add
add
add
(bad)
jmp
add
add
xor
add
add
add
add
sub
es
add
sub
add
push
sub
xor
add
add
add
add
add
add
push
pop
sub
add
xor
add
add
add
add
add
add
push
push
sub
add
xor
add
add
add
add
add
add
push
add
or
add
or
add
push
add
or
add
xor
add
add
add
add
sub
es
sub
es
add
push
sub
add
push
sub
add
adc
or
pop
add
inc
add
adc
add
push
jle
add
add
push
and
addr16
adc
adc
pop
or
or
add
add
add
add
add
add
lds
add
adc
add
ret
inc
add
add
add
add
rol
add
push
adc
push
cmp
add
add
add
add
add
add
add
movs
add
add
add
add
add
add
add
out
add
cmc
add
add
add
add
or
je
je
(bad)
call
hlt
add
push
es
or
add
jo
pusha
(bad)
(bad)
call
or
push
and
adc
push
cmp
(bad)
(bad)
jle
add
add
pop
adc
and
and
dec
ja
popa
cmp
(bad)
(bad)
inc
pop
push
popa
inc
add
add
xor
add
and
adc
or
jecxz
ins
out
and
out
call
call
or
retf
push
inc
sbb
mov
clc
popa
cmp
(bad)
(bad)
call
pop
pop
adc
call
pop
or
add
inc
mov
add
sbb
mov
add
sbb
clc
add
push
or
or
add
inc
pop
pop
or
aaa
or
and
add
or
sbb
cmp
push
adc
call
cmp
(bad)
(bad)
call
adc
inc
je
add
add
sbb
add
inc
adc
or
aam
add
pop
add
adc
add
push
jle
add
add
push
jle
add
add
pop
cmp
add
and
cmp
mov
and
pop
inc
or
add
mov
add
mov
add
add
add
add
add
add
add
add
add
add
in
add
add
or
pop
sbb
sub
mov
(bad)
call
or
dec
dec
cmp
pop
and
pop
and
lahf
(bad)
(bad)
inc
pop
push
popa
inc
add
add
mov
jl
test
test
(bad)
call
add
add
add
add
(bad)
(bad)
call
add
scas
add
add
add
aaa
add
add
add
add
loope
xor
call
or
sub
imul
xor
(bad)
call
push
pop
adc
and
and
in
adc
(bad)
call
cmc
add
push
adc
pop
pop
xchg
pop
push
pop
adc
inc
cmp
(bad)
(bad)
call
or
pop
pushf
pop
push
pop
and
jg
popa
cmp
(bad)
(bad)
call
pop
and
pop
sub
adc
add
sar
(bad)
call
call
adc
and
sbb
add
inc
mov
add
sbb
mov
add
sbb
stc
add
push
or
add
inc
pop
pop
or
aaa
or
and
add
or
sbb
cmp
adc
and
and
add
add
add
call
push
pop
aaa
xchg
and
cmp
(bad)
(bad)
call
or
add
inc
je
add
sbb
pop
or
add
call
xor
add
add
add
adc
add
push
jle
add
add
add
call
xchg
adc
pop
or
inc
or
add
mov
add
add
add
add
mov
add
in
add
add
add
add
add
add
add
add
test
add
test
push
and
mov
stos
(bad)
(bad)
call
push
and
push
sbb
ret
popa
cmp
sub
add
adc
cdq
pop
and
aam
adc
jge
(bad)
dec
inc
or
(bad)
(bad)
call
add
add
add
add
add
add
add
xchg
add
add
add
add
add
add
add
add
add
add
add
add
mov
cmp
(bad)
(bad)
inc
popa
pop
es
push
popa
inc
add
add
pusha
add
add
add
and
pop
jnp
sbb
(bad)
call
cmp
call
or
stos
mov
ss
popa
cmp
(bad)
(bad)
call
push
and
sub
pop
and
das
stos
popa
cmp
(bad)
(bad)
call
push
and
and
add
or
or
cs
(bad)
(bad)
call
cmp
add
pop
xchg
pop
dec
pop
cmp
or
or
inc
mov
add
sbb
cli
add
push
or
add
jnp
and
or
inc
mov
add
sbb
sti
add
push
or
add
add
add
add
(bad)
(bad)
inc
pop
pop
or
and
pop
cmp
add
add
(bad)
call
or
repz
(bad)
call
add
add
add
add
(bad)
(bad)
inc
je
add
add
pop
or
call
xor
add
add
add
add
sub
es
jle
add
add
add
push
and
and
pop
inc
or
add
retf
add
add
jae
add
test
add
push
add
add
add
sub
add
cmp
add
mov
add
add
repnz
add
or
mov
jb
scas
(bad)
(bad)
call
or
add
pop
and
push
cmps
pop
and
xor
xchg
(bad)
(bad)
call
test
mov
xchg
(bad)
inc
push
popa
inc
add
add
scas
add
add
fst
cmp
call
pop
and
scas
jl
and
(bad)
(bad)
popa
cmp
(bad)
call
adc
mov
(bad)
(bad)
call
add
or
add
pop
(bad)
(bad)
dec
add
add
add
mov
(bad)
(bad)
jmp
add
mov
add
movs
add
add
add
add
retf
arpl
or
(bad)
call
adc
pop
and
and
mov
cmc
(bad)
(bad)
call
pop
and
mov
shl
popa
cmp
(bad)
(bad)
(bad)
jle
add
add
push
adc
and
and
cmp
(bad)
(bad)
call
add
add
add
pop
(bad)
(bad)
inc
push
adc
pop
(bad)
(bad)
inc
mov
add
sbb
sub
add
push
or
add
add
add
inc
(bad)
(bad)
inc
pop
pop
or
pop
or
push
and
adc
and
sbb
or
add
sbb
add
adc
or
repnz
(bad)
inc
sub
add
add
add
add
hlt
(bad)
(bad)
call
xor
add
add
add
add
sub
es
add
sub
add
push
sub
xor
add
add
add
add
sub
es
add
sub
add
push
sub
xor
add
add
add
add
sub
es
add
add
add
sub
adc
or
or
add
add
add
sub
es
add
add
add
sub
adc
or
or
add
add
add
sub
es
add
sub
add
sub
xor
add
add
add
add
add
add
push
dec
add
dec
add
dec
add
sub
add
adc
or
push
add
add
add
add
add
push
pop
sub
add
xor
add
add
add
add
add
add
push
push
sub
add
xor
add
add
add
add
add
add
push
dec
add
dec
add
outs
je
add
sub
add
xor
add
add
add
add
add
add
push
dec
add
dec
add
outs
jne
add
sub
add
xor
add
add
add
add
add
add
push
dec
add
outs
jbe
add
sub
add
xor
add
add
add
add
add
add
push
dec
add
outs
ja
add
sub
add
xor
add
add
add
add
add
add
push
dec
add
dec
add
outs
js
add
sub
add
xor
add
add
add
add
adc
add
push
and
add
add
cmp
add
add
and
push
add
or
add
cmp
add
add
and
add
or
add
add
cmp
add
add
pop
pop
or
add
add
cmp
add
add
mov
cmp
add
adc
movs
add
add
add
add
add
add
add
sub
add
stos
add
add
add
add
add
add
mov
aam
push
and
and
pop
inc
or
add
pop
add
add
add
add
add
aam
add
(bad)
(bad)
(bad)
inc
add
add
(bad)
(bad)
jmp
add
add
add
add
or
jno
add
and
cs
into
cmp
adc
push
add
push
sub
scas
add
add
and
add
add
dec
add
add
add
add
add
add
push
and
add
add
xor
add
push
adc
ds
(bad)
call
push
pop
xor
pop
push
pop
cmp
(bad)
(bad)
jmp
pop
adc
and
add
add
adc
add
adc
and
push
pop
and
cmp
(bad)
inc
add
push
pop
push
popa
inc
add
add
into
add
add
or
add
push
cmp
add
add
adc
and
int3
shl
and
push
(bad)
popa
cmp
(bad)
(bad)
call
or
jp
bound
pop
and
mov
dec
popa
cmp
(bad)
(bad)
call
add
cmp
add
xchg
(bad)
call
add
add
call
and
cmp
(bad)
(bad)
call
or
or
add
sub
add
push
cmp
add
es
add
add
add
add
ins
add
add
add
and
add
add
pop
add
add
or
add
add
add
add
(bad)
(bad)
call
add
add
add
add
add
add
add
add
sub
add
push
cmp
add
add
adc
and
test
das
pop
and
xchg
cmp
popa
cmp
(bad)
call
cmp
(bad)
call
add
add
bound
add
and
add
add
push
or
dec
add
add
add
add
add
std
(bad)
(bad)
ds
(bad)
call
(bad)
(bad)
inc
std
(bad)
dec
(bad)
dec
(bad)
(bad)
(bad)
cmp
(bad)
inc
add
add
add
add
(bad)
(bad)
dec
(bad)
(bad)
call
(bad)
(bad)
jmp
(bad)
(bad)
(bad)
cmp
and
add
and
add
add
fwait
(bad)
(bad)
jmp
js
add
pop
sbb
pop
aas
pusha
(bad)
(bad)
jmp
adc
add
cmp
(bad)
std
(bad)
jmp
or
add
and
add
add
outs
(bad)
(bad)
jmp
cmp
(bad)
call
xor
mov
add
and
add
sub
es
jle
add
add
push
and
jb
stos
popa
and
pop
inc
or
add
and
add
add
add
add
add
mov
add
clc
add
add
add
add
add
add
repz
add
push
add
push
adc
and
add
xchg
and
add
in
cmp
push
and
adc
into
cmp
or
add
cdq
cmp
sbb
jae
(bad)
inc
pop
push
popa
inc
add
add
xchg
add
add
xor
xchg
sti
cmp
(bad)
(bad)
jle
add
add
pop
adc
and
icebp
cmc
jge
and
cmp
(bad)
(bad)
call
or
pop
fstp
fistp
fwait
and
popa
cmp
(bad)
(bad)
call
or
shl
cmp
(bad)
(bad)
call
or
fadd
mov
lea
popa
cmp
(bad)
call
add
add
add
sbb
add
adc
add
data16
add
add
stos
(bad)
(bad)
push
add
outs
add
add
(bad)
(bad)
jmp
(bad)
jmp
add
add
addr16
idiv
retf
(bad)
(bad)
call
cmp
(bad)
(bad)
call
or
adc
inc
mov
add
sbb
mov
add
sbb
or
add
or
adc
inc
pop
pop
or
and
add
or
pop
or
cmp
adc
and
adc
call
push
pop
push
(bad)
call
or
add
inc
sub
or
add
inc
add
adc
or
int
add
pop
add
adc
add
push
jle
add
add
push
jle
add
add
pop
and
inc
sbb
aam
fiadd
popa
and
pop
inc
or
add
mov
add
add
add
add
add
enter
sub
add
fild
add
sahf
add
add
add
add
add
dec
add
add
hlt
add
add
or
movs
xchg
rcr
outs
int3
loop
popa
cmp
pop
add
push
and
inc
cmp
or
add
mov
(bad)
inc
popa
inc
add
add
mov
add
and
outs
dec
or
jno
(bad)
call
or
pop
fsqrt
inc
pop
and
scas
mov
popa
cmp
(bad)
call
add
add
add
test
(bad)
call
(bad)
call
add
add
add
add
add
add
add
(bad)
jmp
add
daa
push
cmp
(bad)
(bad)
call
or
add
xlat
add
pop
and
xchg
inc
popa
cmp
(bad)
(bad)
call
or
jmp
rcr
inc
or
idiv
(bad)
call
or
add
stos
movs
neg
jb
shr
(bad)
call
push
and
add
xchg
and
add
add
add
adc
call
push
and
cmp
(bad)
(bad)
call
push
adc
inc
mov
add
sbb
mov
add
sbb
or
add
or
adc
inc
pop
pop
or
jo
add
or
push
and
pop
or
adc
add
adc
and
add
add
add
call
pop
pop
ss
pop
xor
cmp
(bad)
(bad)
inc
jne
add
add
pop
or
add
inc
add
adc
push
add
add
inc
add
adc
add
push
and
add
add
test
add
pop
and
xor
and
aad
retf
cmp
add
or
push
add
add
xlat
add
add
adc
adc
add
cmp
add
add
cmps
add
add
add
or
add
jp
add
out
add
out
add
inc
add
add
add
add
add
add
add
bound
add
sldt
add
add
jp
add
stos
(bad)
(bad)
jmp
or
test
add
cmp
pop
pop
or
adc
add
cmp
add
adc
and
jbe
mov
test
add
add
add
mov
adc
push
add
push
sub
movs
add
add
and
add
pop
cmp
add
add
sbb
add
push
add
add
sub
add
and
cmps
add
add
add
mov
or
push
add
and
add
add
push
or
dec
add
add
add
add
add
(bad)
(bad)
push
add
out
add
add
add
add
(bad)
(bad)
jmp
(bad)
(bad)
mov
add
add
(bad)
(bad)
call
add
add
add
add
add
add
add
add
(bad)
(bad)
(bad)
jnp
(bad)
dec
add
add
fadd
add
and
add
add
xchg
(bad)
(bad)
jmp
xchg
add
add
pop
and
push
cmp
and
inc
popa
cmp
add
add
pop
and
inc
or
push
cmp
add
add
push
and
add
add
add
call
aad
add
add
popa
pop
or
add
add
sbb
adc
add
cmp
(bad)
(bad)
(bad)
cmp
(bad)
jmp
or
add
or
pop
add
add
push
add
push
cmp
(bad)
(bad)
(bad)
cmp
(bad)
(bad)
inc
and
add
or
add
jle
add
add
or
add
xchg
add
sti
add
add
pop
or
adc
add
cmp
(bad)
(bad)
call
pop
and
xchg
push
mov
and
mov
cdq
popa
cmp
add
add
add
push
and
add
add
ret
call
adc
add
add
cmp
adc
call
cmp
(bad)
(bad)
inc
jne
add
add
sbb
add
adc
xchg
(bad)
(bad)
(bad)
cmp
std
(bad)
dec
sbb
fcos
(bad)
jmp
add
add
cmp
jmp
and
mov
out
or
adc
pop
or
inc
or
add
mov
(bad)
(bad)
(bad)
fdivr
(bad)
(bad)
cmp
add
jno
(bad)
jmp
(bad)
call
(bad)
(bad)
(bad)
jmp
jmp
add
add
(bad)
(bad)
jmp
add
add
cmp
(bad)
inc
or
and
add
add
push
(bad)
(bad)
jmp
call
(bad)
call
or
add
and
add
add
add
(bad)
jmp
sbb
stos
dec
cmp
or
add
or
add
sub
add
push
cmp
std
(bad)
jmp
jle
add
add
add
add
aad
(bad)
(bad)
cmp
std
(bad)
call
xor
add
add
add
add
sub
es
sub
add
push
sub
add
xor
add
add
add
add
sub
es
add
sub
add
push
sub
xor
add
add
add
add
sub
es
add
sub
add
push
sub
xor
add
add
add
add
sub
es
sub
add
push
sub
add
xor
add
add
add
add
add
add
push
pop
sub
add
xor
add
add
add
add
add
add
push
push
sub
add
sub
es
add
jns
add
sub
xor
add
add
add
add
add
add
push
add
or
add
or
add
jp
add
sub
adc
or
adc
add
add
add
sub
es
dec
add
dec
add
outs
jnp
add
sub
add
xor
add
add
add
add
add
add
push
add
jl
add
sub
mov
add
into
retf
add
add
xchg
add
add
jae
gs
cs
gs
jne
arpl
cs
gs
jne
arpl
gs
fs
and
arpl
ins
imul
jae
outs
outs
cmp
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
aaa
popa
xor
cmp
xor
xor
cmp
push
jns
je
ins
cs
gs
jne
arpl
cs
jne
je
ins
gs
gs
jne
arpl
gs
add
add
inc
push
inc
inc
push
mov
add
ins
push
add
jnp
jge
add
daa
dec
fistp
and
push
dec
xor
lahf
ds
cld
adc
or
add
pop
and
cmp
add
push
inc
inc
clc
dec
js
les
dec
test
in
(bad)
and
call
sahf
into
inc
mov
jp
fwait
xchg
mov
pop
pop
xor
pop
add
sub
and
xor
sub
je
outs
fwait
mov
(bad)
adc
sub
jno
pushf
push
mov
sub
fiadd
dec
dec
adc
mov
test
ret
mov
pushw
push
dec
mov
inc
jnp
aas
bound
addr16
xor
cmp
mov
popf
xchg
push
jno
jmp
dec
jmp
mov
add
cmp
and
cli
or
aaa
mov
push
xor
arpl
push
mov
xchg
jmp
jno
inc
shl
std
mov
popa
and
jbe
(bad)
rol
mov
sub
xor
pop
popf
pushf
mov
inc
mov
ret
xlat
pop
mov
inc
nop
mov
mov
pop
jg
jno
fcomp
test
or
das
movs
pusha
das
outs
popa
out
(bad)
sbb
push
sti
dec
or
xlat
fld
cmp
jnp
fwait
rcl
icebp
test
add
xchg
xchg
mov
sbb
fs
cmp
inc
loope
jmp
mov
add
fld
test
cwde
(bad)
fiadd
scas
xlat
adc
movs
std
(bad)
inc
mov
or
inc
jmp
mov
sbb
push
sbb
mov
aad
mov
add
cs
hlt
fidiv
jbe
fcmovne
pop
icebp
or
xchg
aaa
cld
mov
xlat
jg
movs
bound
aad
cmp
in
stc
test
cmps
inc
push
scas
and
jnp
adc
jb
dec
cmps
mov
in
xor
popf
sub
retf
mov
frstor
stos
rcl
jno
push
push
jbe
and
ds
ins
jmp
js
xchg
(bad)
sahf
inc
jg
add
cdq
and
out
mov
add
push
jns
lds
fs
arpl
mov
adc
jnp
mov
movs
lahf
out
(bad)
fild
int3
cmps
xor
ret
repnz
jp
mov
pop
sub
and
add
out
push
pop
pop
mov
inc
arpl
mov
cmp
(bad)
mov
xchg
shr
call
and
jne
push
jmp
xchg
in
sub
and
xtest
and
out
and
(bad)
test
cs
mov
test
push
test
adc
stc
sbb
cmps
jns
sar
mov
psraw
test
dec
add
je
or
and
push
jmp
mov
jge
jge
cmps
push
mov
mov
mov
test
pop
popa
push
pop
aam
mov
push
xor
or
mov
cld
jmp
sti
inc
call
mov
dec
adc
cmp
fbld
sub
jo
fstp
daa
adc
dec
push
push
xchg
nop
mov
xor
xchg
jbe
arpl
cmp
xchg
cmp
or
outs
sub
cdq
leave
mov
cmp
inc
mov
leave
rcr
inc
mov
dec
mov
repnz
xchg
lock
sbb
ret
ret
fwait
xor
call
mov
or
mov
imul
add
es
or
and
adc
loop
mov
cdq
xor
jbe
dec
dec
mov
pop
ins
js
sub
mov
cdq
sti
cmp
mov
inc
xchg
xor
mov
pop
das
imul
sti
dec
jns
inc
adc
arpl
pop
mov
sahf
dec
ins
test
dec
dec
sbb
mov
cli
popf
push
mov
outs
inc
call
push
lods
cdq
or
movs
and
lea
cmp
mov
push
sbb
movs
lods
rcl
out
fcomp
scas
(bad)
push
and
fmul
fidivr
fwait
jmp
sub
pop
mov
push
jg
pusha
nop
cmp
jg
push
arpl
lods
ds
jb
mov
jne
and
inc
and
gs
lahf
lea
xchg
jmp
fdivr
dec
rcr
aas
dec
cmovs
idiv
add
push
cmp
pop
add
sbb
pop
adc
push
mov
adc
loopne
into
mov
pusha
or
or
push
aaa
mov
mov
aad
ffree
pop
mov
icebp
inc
movs
lahf
mov
out
pop
fcmovb
inc
jo
addr16
mov
cmp
sete
jo
fstp
iret
jae
add
test
xlat
gs
test
dec
mov
loopne
retf
or
xchg
mov
inc
popf
xor
scas
mov
mov
sbb
pop
js
jl
cld
or
inc
int3
mov
inc
mov
dec
retf
xchg
in
mov
sbb
and
std
or
ret
pop
mov
pxor
repnz
inc
push
movs
inc
push
das
fidivr
and
xor
mov
jns
xor
in
dec
pop
cmps
ja
and
pop
sub
dec
add
push
mov
cmps
jmp
call
popa
pop
int
(bad)
xchg
pop
nop
jno
iret
mov
ds
dec
add
mov
push
cmp
push
add
or
dec
and
ffree
cmp
adc
or
test
daa
in
sti
outs
mov
hlt
jnp
jmp
out
int
sbb
add
scas
jmp
cdq
cdq
inc
ins
rol
push
lock
push
jle
cdq
jno
test
sbb
in
data16
xor
mul
out
fisub
out
sbb
mov
rol
cmp
ret
inc
mov
mov
loope
push
adc
pop
dec
shr
pop
jl
dec
(bad)
out
xor
sub
loopne
mov
pusha
cmp
pop
aaa
xor
shl
pop
sub
mov
pop
in
fmul
ins
dec
cwde
add
jle
push
xchg
mov
(bad)
into
mov
adc
inc
mov
push
pushf
rcr
xor
(bad)
pop
pop
scas
sbb
ja
xchg
lods
cwde
jp
(bad)
mov
out
int3
sub
ins
popa
mov
fucomi
(bad)
rcr
pop
inc
mov
ja
lods
jmp
faddp
dec
adc
aad
repnz
pop
enter
movs
xor
aaa
and
adc
push
cli
inc
out
sub
cmp
jle
mov
cmp
std
mov
scas
lods
ret
into
into
xchg
ret
ret
arpl
dec
cmp
stc
jb
in
pushf
mov
ror
cmps
es
cli
shr
add
retf
repz
shl
and
icebp
sti
push
js
cmp
out
xchg
sub
inc
out
adc
mov
retf
sti
sahf
pop
or
mov
neg
pop
mov
out
xchg
mov
scas
cs
fdivp
cmp
test
pushf
jnp
int
xchg
jp
rol
mov
mov
push
cdq
jge
movs
xchg
sub
xor
mov
sbb
jle
(bad)
lea
pop
fisttp
mov
sub
imul
es
std
(bad)
out
jnp
cmps
retf
push
(bad)
rcr
mov
pusha
adc
stos
xor
das
sti
xchg
ins
xchg
xchg
mov
jns
fucom
shl
div
adc
out
pop
rcl
(bad)
cmp
and
test
xchg
ins
sbb
push
adc
ss
fst
jge
and
jecxz
add
pop
adc
scas
(bad)
dec
inc
fstp
cmps
mov
sbb
xor
in
les
sbb
cli
ret
bnd
pop
std
xchg
mov
out
cmp
pop
xchg
stos
mov
test
sbb
and
push
push
xor
jne
imul
dec
and
aam
dec
(bad)
xchg
(bad)
into
xor
push
mov
inc
and
jl
push
cmp
pop
clc
das
adc
dec
pop
pop
cwde
cld
dec
mov
mov
xor
repnz
cs
adc
jo
nop
in
sbb
push
push
and
cmps
inc
outs
jo
(bad)
cmp
dec
idiv
xor
jb
repz
ret
shl
sbb
lods
pop
sti
add
mov
popf
jmp
inc
sub
in
sub
pop
enter
push
bound
fnsave
fidiv
jnp
inc
pop
clc
fidivr
pop
jne
jb
mov
lods
xor
rcr
jg
data16
daa
xchg
mov
loopne
cmp
or
xchg
imul
retf
dec
dec
cmps
adc
inc
out
mov
ret
cs
push
dec
inc
loopne
in
mov
and
add
xchg
ret
sti
mov
sbb
std
ds
mov
out
cwde
pop
xor
stos
inc
dec
pusha
xor
clc
add
arpl
adc
(bad)
fild
xor
adc
cmc
jnp
push
or
in
xor
inc
in
sbb
int
or
jnp
dec
movs
mov
mov
jne
int
dec
scas
xlat
int3
and
adc
dec
cs
mov
adc
out
mov
and
push
imul
mov
in
dec
sub
repnz
ret
mov
mov
aam
out
sbb
out
mov
dec
add
icebp
fistp
popf
mov
adc
stc
out
and
sbb
xor
add
xchg
cmc
bound
sbb
jl
test
sbb
cdq
outs
pop
jbe
inc
lahf
pop
in
push
pushf
(bad)
stc
imul
lods
sub
pop
cmc
ins
push
xor
cmp
sub
jnp
mov
sahf
ins
push
test
push
add
bound
aad
xor
fucomip
push
in
inc
mov
(bad)
dec
mul
pop
adc
push
(bad)
mov
aaa
sbb
(bad)
ins
inc
pop
inc
movs
or
stc
inc
test
ins
out
(bad)
jbe
nop
mov
mov
scas
or
mov
pushf
mov
or
int
xor
push
(bad)
aaa
sbb
popa
and
lods
sbb
xchg
sbb
retf
inc
mov
jle
call
enter
nop
xor
lds
imul
pop
sub
jae
clc
pop
jne
arpl
dec
mov
mov
out
lea
xchg
aaa
pop
dec
hlt
push
aad
mov
in
lods
pop
daa
pushf
pop
push
xchg
jle
mov
xor
fidiv
adc
xchg
inc
mov
in
ins
or
inc
add
popf
aad
push
dec
cmc
bnd
jge
das
call
test
loope
pop
scas
ins
push
or
sahf
sub
scas
lds
shl
jb
aaa
jne
jl
shl
inc
adc
out
xor
xor
out
jne
cmc
push
retf
adc
imul
mov
jbe
mov
pusha
xchg
call
jp
push
dec
pop
adc
inc
popf
popa
popf
(bad)
lock
xor
(bad)
ficom
into
in
jl
dec
push
xchg
sbb
xchg
lods
and
add
or
sub
sti
mov
xchg
in
push
dec
cmc
add
sub
sbb
add
mov
std
add
test
mov
not
dec
jmp
out
iret
cmp
cmps
bound
mov
sbb
loopne
cli
pop
sti
dec
xchg
sub
sar
pushf
cmps
push
pop
jmp
inc
out
fld
cmps
outs
cmc
outs
sub
outs
les
lea
jp
loop
pop
in
push
mov
and
mov
(bad)
loope
lds
call
sub
(bad)
into
inc
mov
mov
(bad)
(bad)
jb
pop
and
mov
popf
rcr
pop
leave
push
pop
push
add
and
and
xchg
lahf
sbb
std
out
adc
rol
dec
and
imul
cmp
(bad)
call
adc
mov
sub
xchg
nop
xchg
aas
push
cdq
or
dec
daa
sub
arpl
inc
lods
test
rol
and
shr
fcom
out
sbb
test
jb
repz
add
aas
push
stos
mov
fdivr
sub
jnp
lahf
pushf
push
jle
pop
nop
sub
xor
hlt
cmps
pop
ss
jp
lock
xchg
jbe
clc
sub
jp
push
cwde
rcl
pop
int
pop
jmp
inc
push
add
into
test
push
lds
jns
adc
mov
adc
aad
mov
mov
xchg
and
lods
jno
shl
push
xor
lea
cmp
or
xor
fldenv
mov
pop
call
fisub
into
pop
inc
pop
bound
std
cmp
sub
inc
out
test
inc
arpl
mov
cs
sbb
(bad)
or
fldcw
adc
repz
inc
add
sbb
lahf
(bad)
cli
push
adc
mov
das
push
dec
xchg
jae
inc
hlt
pop
cmp
test
xchg
pop
loope
jns
rcr
cmp
lea
das
imul
mov
xor
jno
adc
or
(bad)
or
aam
pop
xchg
test
stos
out
sub
sub
mov
sub
stc
or
add
jmp
xor
or
push
or
retf
sub
cli
mov
call
jae
cdq
dec
cmp
push
int3
mov
aas
je
mov
mov
sub
mov
push
or
mov
test
lds
xchg
and
mov
cmp
dec
repz
das
add
icebp
dec
icebp
inc
inc
adc
push
inc
int3
mov
inc
add
mov
repnz
stos
ja
ror
push
add
sbb
dec
dec
cld
nop
or
sub
mov
and
xor
pop
retf
push
push
mov
in
test
loop
sub
or
imul
ss
add
retf
mov
cmp
push
jle
popa
or
ror
repz
ficom
(bad)
sub
jl
into
mov
push
vmovaps
and
push
or
fidivr
mov
or
jp
cmc
fldcw
cli
imul
xlat
popf
add
push
xchg
push
sbb
inc
jge
and
pusha
cmp
mov
lods
mov
stos
dec
loopne
aas
pop
popa
inc
rcr
cmp
and
imul
nop
xor
push
ja
pop
jnp
int
mov
mov
repz
cdq
pop
mov
jnp
mov
repnz
out
add
or
outs
out
jmp
aad
sub
inc
es
fs
pop
fwait
gs
mov
out
inc
movs
and
fiadd
js
sti
push
xchg
das
xchg
or
xor
jno
popa
ror
mov
jmp
lds
mov
es
mov
or
repz
out
jmp
imul
push
xor
xor
and
sbb
lods
inc
jne
(bad)
retf
or
jbe
push
mov
pop
fs
add
idiv
aas
lock
rcl
push
addr16
sub
dec
mov
out
push
cmp
sbb
mov
jle
inc
push
je
fimul
in
and
or
add
sbb
sbb
add
js
je
in
mov
fsubr
aam
add
je
into
jno
iret
add
call
pop
mov
adc
pop
rol
pop
gs
mov
out
jmp
push
mov
sub
(bad)
scas
int3
and
lds
dec
stos
shl
test
rol
out
cmp
mov
and
(bad)
mov
mov
(bad)
jbe
pop
fild
jecxz
into
xchg
loopne
inc
push
(bad)
int3
push
push
in
xchg
adc
sub
fnsave
push
push
and
fwait
adc
mov
shl
les
lods
cs
jle
push
fidiv
mov
retfw
and
and
sar
ins
fwait
mov
sub
(bad)
ins
mov
imul
pushw
and
jnp
lds
xchg
pop
push
add
int
nop
sub
adc
mov
jmp
rol
xor
pop
mov
pop
inc
inc
aam
lock
dec
adc
addr16
into
(bad)
mov
out
test
test
pop
inc
jnp
lock
enter
cmp
mov
mov
mov
push
mov
lods
mov
mov
push
scas
fstp
stc
or
pop
adc
int3
fdivr
mov
fisubr
adc
jns
(bad)
mov
jle
arpl
mul
mov
inc
lods
sbb
imul
xchg
xchg
xchg
mov
into
xor
out
out
cwde
ins
push
movs
inc
adc
cmp
scas
sub
push
shr
cmp
(bad)
fisubr
lods
mov
adc
and
xor
retf
jo
add
jg
mov
jb
fiadd
fidiv
push
mov
xchg
push
pop
std
push
xor
mov
fs
fisttp
or
inc
ds
or
scas
out
bound
inc
mov
imul
jno
inc
div
popf
div
push
cli
xor
dec
cmp
sbb
es
add
loope
test
sub
add
or
dec
adc
push
aad
data16
xor
mov
int
mov
cmp
xchg
push
scas
arpl
lods
loope
(bad)
popf
push
jns
push
xchg
pop
push
sub
inc
es
outs
mov
sbb
mov
outs
inc
or
inc
sub
push
push
mov
mov
add
xchg
scas
dec
push
aam
leave
(bad)
dec
sub
or
sub
xor
pop
pop
mov
jmp
inc
add
xchg
scas
imul
fiadd
mov
loope
and
pop
inc
sbb
cli
loop
cmp
cmp
jmp
add
ret
pop
int
cmp
in
pop
jnp
cmp
inc
and
int
in
or
pop
pop
inc
push
push
loop
sbb
sahf
jae
xor
sub
push
out
or
jmp
pop
mov
adc
sub
repnz
mov
cmp
or
popf
push
push
inc
scas
(bad)
jge
fadd
adc
and
retf
retf
push
mov
add
bound
sti
sahf
and
lods
(bad)
push
adc
fdiv
mov
cli
daa
xchg
mov
pop
mov
push
xchg
sbb
jno
push
iret
xchg
pop
inc
jle
das
(bad)
std
or
adc
je
mov
dec
repz
(bad)
std
inc
loop
movs
dec
rcl
mov
cli
imul
cmc
sbb
cmp
stos
sar
std
mov
and
cmp
cmp
cmp
scas
mov
fwait
pop
fcom
scas
or
inc
or
movs
pop
nop
popa
or
fwait
icebp
inc
cmp
cmp
mov
in
aad
jbe
push
test
retfw
adc
push
out
stc
in
aam
xor
movs
stos
dec
xor
ds
sub
mov
jge
leave
ret
outs
mov
rcr
iret
cmc
inc
aas
mov
adc
mov
enter
out
js
mov
xchg
in
xchg
mov
xchg
movs
test
adc
pusha
xor
xor
(bad)
add
sbb
mov
ins
push
popa
stc
fs
int3
or
push
repz
xor
push
mov
lock
mov
cli
cmp
cmp
adc
mov
cmp
add
lods
je
out
es
push
(bad)
lahf
out
jnp
jo
and
jp
dec
adc
lock
xchg
call
imul
mov
addr16
push
sbb
xor
scas
imul
outs
cli
sbb
sub
inc
ss
stos
(bad)
fiadd
add
icebp
inc
mov
cwde
cmp
cmp
imul
ins
out
sub
xor
jo
dec
fst
push
dec
rol
jmp
push
pop
pop
mov
mov
lods
xor
test
mov
clc
stc
aas
and
data16
ja
dec
and
cmp
xor
cmp
mov
mov
inc
mov
out
and
adc
adc
pop
cmp
idiv
push
mov
call
xor
inc
push
mov
adc
sub
shr
(bad)
cmp
jle
imul
shl
sar
push
add
scas
inc
cli
stos
xchg
sub
sbb
and
nop
jl
inc
(bad)
jbe
jl
xor
ss
xor
in
ret
and
jl
lods
add
mov
push
pop
mov
dec
aam
les
call
pop
cdq
sbb
movs
and
jo
scas
cmp
das
rol
cmps
pop
mov
test
pop
mov
mov
xchg
ss
jb
sub
inc
xchg
push
idiv
mov
jle
sub
xchg
pusha
xor
icebp
mov
push
add
push
push
push
inc
inc
jecxz
cmp
xchg
data16
and
sbb
pop
test
sbb
adc
adc
jno
ret
mov
std
jno
repz
jae
and
jmp
icebp
pusha
(bad)
push
pop
mov
fld
cli
fs
cmps
xchg
shl
mov
addr16
push
cmp
adc
pushf
into
in
cmp
jg
sbb
cmp
rol
lahf
lods
imul
mov
stos
nop
xor
nop
or
(bad)
cdq
mov
mov
lods
xlat
dec
add
(bad)
pusha
enter
and
xor
cdq
mov
xchg
jnp
sar
daa
inc
mov
(bad)
adc
mov
push
call
mov
mov
ss
cmp
xor
sbb
and
cmps
sbb
jo
cdq
inc
mov
imul
push
icebp
mov
jnp
(bad)
jb
jmp
dec
pop
dec
xchg
test
xor
int
or
sbb
loopne
xchg
push
addr16
(bad)
addr16
sbb
mov
xchg
and
mov
adc
inc
das
cmps
pop
outs
xor
in
pop
xor
cmp
inc
into
jmp
inc
sub
outs
js
in
xchg
or
stc
jns
inc
ja
pushf
shr
and
jb
test
test
dec
and
fs
sub
cmp
aam
in
movq
stos
cmps
fwait
xchg
pop
(bad)
xlat
adc
rcr
dec
dec
inc
pop
mov
adc
pusha
les
out
mov
lahf
jmp
lods
and
cmp
or
mov
data16
jg
leave
and
ds
inc
gs
cwde
pop
push
add
es
mov
pop
sub
in
fdivr
add
inc
inc
dec
in
xchg
push
dec
pop
jo
aaa
lahf
xlat
sti
jae
pop
pop
sbb
rcpps
call
imul
ss
mov
inc
aas
pop
mov
or
add
xchg
fs
ret
rol
mov
ins
int3
or
stc
and
adc
movs
pop
xchg
popf
dec
xchg
sbb
cmp
adc
das
mov
mov
adc
retf
or
inc
push
add
xor
imul
pop
in
mov
sar
xchg
dec
inc
iret
sub
rcl
cmps
pop
ss
je
xchg
pop
out
test
jbe
repnz
pop
retf
daa
jmp
xchg
sbb
int
push
and
mov
and
xchg
dec
inc
push
scas
stos
mov
ins
movs
mov
xchg
js
loopne
pop
cs
or
dec
out
cmp
icebp
in
cli
dec
lds
ret
mov
pop
or
test
pop
test
pop
call
push
adc
cmp
popf
scas
jo
mov
out
push
ror
xchg
ins
icebp
or
sub
int
mov
xlat
mov
cmc
das
mov
mov
bound
cmp
push
shr
xor
sahf
cli
fld
shl
mov
fcom
mov
or
mov
adc
es
outs
arpl
(bad)
rol
inc
in
ror
mov
mov
movs
jl
ds
add
sub
aad
add
sub
lock
into
mov
jmp
pop
jg
fadd
fcomp
sub
ret
push
out
dec
mov
in
jno
push
jle
(bad)
sbb
inc
inc
mov
pop
es
sub
lock
mov
fst
rcl
pop
nop
dec
jae
in
add
sar
xchg
data16
clc
(bad)
scas
pop
in
push
inc
push
das
bnd
dec
ja
or
mov
mov
mov
mov
ds
outs
xchg
test
sub
out
(bad)
and
cmc
mov
(bad)
mov
sbb
ss
dec
shl
cdq
jnp
outs
or
stos
ins
repnz
repnz
pop
cmc
ret
mov
mov
pop
mov
sbb
movs
sahf
mov
lods
and
shr
pop
sub
aas
jl
sub
fwait
outs
dec
mov
jne
push
jl
imul
loopne
loope
mov
fdivr
push
cwde
cli
push
jl
mov
pop
lods
ins
(bad)
mov
cs
dec
add
(bad)
ins
mov
pusha
cmps
dec
xchg
pop
(bad)
loopne
jmp
je
(bad)
into
loope
or
out
xor
lea
(bad)
es
push
mov
shr
push
inc
dec
mov
sub
inc
mov
lods
leave
xor
imul
retf
cmp
inc
pop
lods
pop
xchg
fwait
jmp
aam
push
shr
mov
pop
sub
fwait
xor
aaa
push
lahf
test
xchg
jns
xor
xor
inc
xchg
dec
push
xchg
mov
mov
jg
imul
mov
clc
call
(bad)
cmc
stos
test
sbb
icebp
out
movs
je
call
sbb
pusha
popa
fs
mov
pusha
jl
stos
add
idiv
jbe
in
iret
jl
aaa
stos
sub
in
div
or
popf
adc
push
rcl
cmp
and
cmc
ja
jp
lods
repnz
fs
xor
out
loop
sbb
cmps
test
icebp
or
dec
dec
fistp
imul
xchg
cmps
xlat
arpl
inc
je
repz
xor
(bad)
(bad)
mov
jmp
push
cmc
sar
jg
sub
in
inc
out
lods
jl
mov
das
dec
pop
push
in
push
sub
clc
in
lock
jnp
cli
mov
mov
scas
jge
stos
not
sbb
int
push
retf
inc
adc
xor
outs
test
mov
cdq
sub
sub
out
mov
xchg
add
add
jae
gs
cs
gs
jne
arpl
cs
gs
jne
arpl
gs
fs
and
arpl
ins
imul
jae
outs
outs
cmp
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
aaa
popa
xor
cmp
xor
xor
cmp
push
jns
je
ins
cs
gs
jne
arpl
cs
jne
je
ins
gs
gs
jne
arpl
gs
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
imul
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
push
inc
inc
push
inc
inc
jnp
repnz
add
aad
xor
fadd
xor
fld
xor
fiadd
xor
fild
xor
fadd
xor
fld
xor
fiadd
xor
fild
xor
loopne
mov
call
pop
mov
jmp
push
in
pop
mov
in
pop
mov
out
pop
mov
out
pop
mov
inc
pop
mov
inc
pop
mov
dec
pop
mov
dec
pop
mov
dec
pop
mov
dec
pop
mov
dec
pop
mov
dec
pop
mov
dec
pop
mov
dec
pop
mov
xchg
push
xchg
push
mov
push
mov
push
mov
push
mov
push
mov
push
lea
push
mov
push
(bad)
pop
mov
cmps
pop
mov
cmps
pop
mov
test
mov
test
pop
mov
stos
pop
mov
lods
pop
mov
lods
pop
mov
scas
pop
mov
scas
pop
mov
add
add
pushf
pop
add
ret
pop
add
pop
add
dec
pop
add
jne
add
and
add
add
add
add
push
add
mov
add
fild
add
xor
add
pop
push
add
add
add
add
in
add
mov
add
add
add
add
add
add
add
out
add
add
add
add
add
cmp
add
add
ret
add
add
add
add
push
add
add
add
add
add
add
add
add
fadd
add
add
add
xchg
add
scas
add
add
add
pop
add
add
xor
xor
cmp
xor
aaa
add
add
xor
sub
add
add
add
add
add
add
xor
xor
xor
add
arpl
cmp
sub
add
add
add
add
add
xor
xor
xor
add
arpl
cmp
sub
add
add
add
add
add
or
add
add
add
arpl
cmp
sub
add
add
add
add
add
add
sbb
add
add
add
add
arpl
cmp
sub
add
add
add
add
add
add
sub
add
add
add
add
arpl
cmp
sub
add
add
add
add
add
add
aaa
add
and
add
add
add
arpl
cmp
sub
add
add
add
add
add
add
xor
xor
xor
add
arpl
cmp
sub
add
add
add
add
add
mov
add
and
add
add
add
arpl
cmp
sub
add
add
add
add
add
add
add
add
add
arpl
cmp
sub
add
add
add
add
add
add
xor
xor
xor
add
arpl
cmp
sub
add
add
add
add
add
add
xor
xor
xor
add
arpl
cmp
sub
add
add
add
add
add
add
add
and
add
add
add
arpl
cmp
sub
add
add
add
add
add
add
add
and
add
add
add
arpl
cmp
sub
add
add
add
add
add
add
and
add
add
add
arpl
cmp
sub
add
add
add
add
add
add
add
and
add
add
add
arpl
cmp
sub
add
add
add
add
add
add
ret
add
and
add
add
add
arpl
cmp
sub
add
add
add
add
add
add
rol
add
add
add
add
arpl
cmp
sub
add
add
add
add
add
add
fild
add
add
add
add
arpl
cmp
sub
add
add
add
add
add
or
add
and
add
add
add
arpl
cmp
sub
add
add
add
add
add
add
add
add
add
arpl
cmp
sub
add
add
add
add
add
add
or
add
add
add
add
arpl
cmp
sub
add
add
add
add
add
add
push
add
and
add
add
add
arpl
cmp
sub
add
add
add
add
add
add
and
add
add
add
add
arpl
cmp
sub
add
add
add
add
add
add
xor
xor
xor
add
arpl
cmp
sub
add
add
add
add
add
xor
xor
xor
add
arpl
cmp
sub
add
add
add
add
add
add
xor
xor
xor
add
arpl
cmp
sub
add
add
add
add
add
add
xor
xor
xor
add
arpl
cmp
sub
add
add
add
add
add
add
add
and
add
add
add
arpl
cmp
sub
add
add
add
add
add
add
add
and
add
add
add
arpl
cmp
sub
add
add
add
add
add
pop
xchg
add
add
add
add
arpl
cmp
sub
add
add
add
add
add
add
add
add
add
arpl
cmp
sub
add
add
add
add
add
add
xor
xor
xor
add
arpl
cmp
sub
add
add
add
add
add
add
mov
add
add
add
add
arpl
cmp
sub
add
add
add
add
add
add
mov
add
add
add
arpl
cmp
sub
add
add
add
add
add
add
int3
add
and
add
add
add
arpl
cmp
sub
add
add
add
add
or
add
and
add
add
add
arpl
cmp
sub
add
add
add
add
xor
mul
add
and
add
add
add
arpl
cmp
sub
add
add
add
add
xor
out
add
and
add
add
add
arpl
cmp
sub
add
add
add
add
xor
(bad)
add
add
add
add
add
arpl
cmp
sub
add
add
add
add
xor
les
add
and
add
add
add
arpl
cmp
sub
add
add
add
add
xor
mov
add
and
add
add
add
arpl
cmp
sub
add
add
add
add
xor
add
add
add
add
arpl
cmp
sub
add
add
add
add
add
xor
xor
xor
add
arpl
cmp
sub
add
add
add
add
aaa
add
xor
xor
xor
add
arpl
cmp
sub
add
add
add
add
cmp
outs
push
add
and
add
add
add
arpl
cmp
sub
add
add
add
add
add
xor
xor
xor
add
arpl
cmp
sub
add
add
add
add
add
push
add
xor
xor
xor
add
arpl
cmp
sub
add
add
add
add
add
js
add
xor
xor
xor
add
arpl
cmp
sub
add
add
add
add
add
xor
xor
xor
add
arpl
cmp
sub
add
add
add
add
add
xor
add
inc
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
dec
or
push
dec
inc
or
add
or
add
add
add
add
or
add
add
pushf
das
cmp
add
add
inc
inc
add
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
push
ret
sub
add
or
dec
inc
inc
push
pop
inc
in
shl
aam
add
lock
dec
inc
cs
lods
ins
pop
sbb
pop
push
inc
cs
jbe
je
aas
and
xor
jae
popf
mov
xlat
(bad)
jno
mov
jg
mov
pop
mov
and
cmps
pop
iret
mov
mov
and
xor
and
xchg
leave
or
inc
cmp
fwait
lea
xchg
or
icebp
stos
xor
inc
div
inc
and
pop
out
cmp
mov
cdq
repz
stc
test
adc
and
ficomp
jnp
dec
or
test
jnp
sub
push
loopne
outs
pop
ss
mov
int
jmp
push
add
push
mov
dec
fisubr
xchg
test
repnz
or
popa
mov
imul
jns
inc
out
into
ds
jmp
jmp
jae
loope
inc
arpl
sub
outs
fs
ret
pop
shl
dec
ins
mov
stos
aaa
lock
ss
pop
icebp
jnp
mov
int
into
imul
cmp
inc
hlt
mov
mov
repz
imul
xor
sar
iret
fwait
mov
lahf
lods
jmp
jns
mov
mov
mov
jns
int
xchg
lahf
in
pop
stc
mov
je
lock
test
xchg
jb
sahf
cmp
mov
fwait
movs
test
pushf
jo
jb
ds
xchg
push
scas
add
in
loope
lea
ds
inc
test
(bad)
fimul
sub
xor
shl
pop
sub
aaa
inc
jle
mov
pop
fadd
inc
sar
mov
jne
mov
stc
loop
enter
sbb
aaa
out
aaa
nop
pop
mov
push
mov
ret
sub
pop
mov
mov
mov
mov
iret
xchg
aaa
xchg
pop
clc
mov
xchg
scas
cld
mov
and
retf
cwde
rol
pop
mov
enter
xchg
jmp
imul
mov
mov
test
iret
dec
das
cmp
sbb
cmp
movs
loope
ret
jp
es
rcr
jbe
pushf
xchg
ins
imul
mov
jle
movs
xchg
add
xor
inc
pop
sti
ror
fdivr
popf
lds
lods
retf
jecxz
(bad)
adc
mov
inc
inc
push
into
or
cmp
popa
dec
shl
push
mov
mov
(bad)
call
fsubr
sub
inc
cmps
inc
jo
and
test
inc
cdq
bound
push
mov
aad
jmp
dec
jo
cmps
cmp
push
test
out
xor
cmp
sbb
rcl
inc
push
fcom
xlat
mov
retf
mov
jbe
(bad)
cmp
mov
gs
pop
xchg
popf
movs
popa
repnz
add
adc
in
sti
push
mov
sub
retf
es
push
cmp
inc
cmp
cli
lea
push
outs
mov
mov
dec
out
mov
or
adc
adc
ret
stc
leave
and
and
aaa
jae
push
mov
ror
pop
xchg
adc
sub
(bad)
jge
push
jmp
cmp
int
add
xchg
mov
call
(bad)
dec
das
in
inc
mov
imul
(bad)
mov
aad
adc
mov
cld
push
(bad)
dec
stc
sub
jp
mov
inc
inc
push
out
ds
iret
lds
(bad)
sahf
inc
add
outs
mov
clc
jns
or
fldl2e
lahf
jnp
push
ins
jno
in
mov
mov
test
push
push
popa
sbb
push
retf
fist
sub
js
mov
retf
ror
cmps
add
or
pop
or
jb
xchg
adc
(bad)
jge
mov
or
mov
mov
jle
jae
push
iret
lahf
pop
test
arpl
mov
inc
cli
cwde
daa
repnz
lods
fnstsw
and
retf
add
jb
jnp
retf
nop
push
jbe
and
xlat
pop
aas
mov
pop
mov
in
sar
cld
retf
mov
call
xchg
xor
popf
xchg
js
rcl
das
sub
push
and
into
es
cs
gs
inc
or
mov
js
scas
add
mov
in
js
xor
(bad)
fild
int
dec
sub
cmp
shr
dec
mov
xchg
sub
or
adc
pop
icebp
stos
jl
aam
ins
mov
sar
pop
nop
(bad)
dec
pusha
lds
push
mov
imul
push
es
push
sub
mov
and
mov
iret
fdecstp
test
sti
call
loop
dec
mov
push
sti
pop
xchg
enter
mov
sahf
loope
sbb
inc
aad
sbb
loope
sbb
loopne
adc
mov
mov
(bad)
imul
pop
cmp
push
jmp
fsubr
cli
adc
in
jmp
ret
imul
mov
fwait
daa
stc
pop
mov
push
mov
sahf
arpl
pop
div
xchg
mov
movs
data16
inc
(bad)
int3
cmp
dec
ret
ss
mov
inc
outs
loopne
out
cmp
out
fidiv
jae
fdiv
stos
dec
cmp
push
out
mov
cmp
iret
pop
dec
idiv
and
inc
pop
lea
inc
inc
pop
test
and
repz
sub
xchg
cmp
out
jmp
retf
mov
ror
sub
std
push
adc
shr
faddp
mov
popf
pop
pavgb
(bad)
(bad)
fild
jo
arpl
cmp
fucomi
mov
mov
lahf
push
sti
mov
pusha
retf
out
(bad)
jne
jmp
ja
jp
jge
clc
ror
or
push
add
rcl
out
xor
rcr
jo
or
mov
addr16
add
lds
xor
mov
push
out
jnp
mov
mov
leave
mov
inc
je
aad
xor
addr16
aas
cwde
pop
out
rcl
pop
inc
xchg
ins
ficomp
dec
xchg
idiv
mov
(bad)
ss
outs
sub
mov
dec
fnstsw
popf
mov
dec
mov
cmps
mov
cmps
scas
rcr
fcmove
sub
sahf
cmp
xchg
icebp
int
adc
into
jne
and
cmp
retf
call
(bad)
into
cdq
mov
or
lahf
cs
neg
jo
jp
mov
out
and
cmp
sbb
cmc
pop
cmp
sub
xchg
lahf
repnz
(bad)
sti
or
scas
push
loop
retf
repz
test
cmps
jno
sbb
(bad)
mov
mov
mov
stc
cmps
cwde
inc
bound
xor
retf
mov
jne
inc
mov
cmps
mov
out
je
xlat
leave
mov
nop
mov
dec
add
add
xor
pusha
xor
fidiv
push
mov
sub
outs
mov
or
lahf
test
ins
mov
mov
test
movs
mov
sbb
xchg
and
inc
xchg
jmp
(bad)
je
xor
and
inc
aaa
xchg
adc
imul
(bad)
mov
icebp
clc
xor
aam
imul
add
lea
push
or
outs
sub
je
jmp
jge
cld
add
jbe
and
mov
sbb
add
and
ins
sub
test
fwait
mov
inc
pop
cld
std
(bad)
mov
outs
and
push
in
push
scas
add
push
in
cmp
stos
(bad)
iret
add
mov
sbb
out
xchg
out
addr16
sahf
lea
cmp
(bad)
cs
push
pop
fst
imul
and
xor
mov
mov
(bad)
cli
or
dec
add
pop
popf
in
lock
movdqu
ja
retf
sbb
dec
outs
jns
dec
stos
retf
push
push
sub
and
jnp
jge
loope
cmp
hlt
lss
jb
or
adc
cmc
jle
outs
mov
jmp
and
or
pusha
stos
call
mov
lds
in
sbb
cwde
mov
inc
adc
ds
out
adc
inc
(bad)
sar
pop
sbb
clc
xchg
push
adc
inc
mov
retf
mov
scas
add
dec
adc
loop
xchg
inc
test
push
push
inc
cmp
sub
xchg
shl
dec
mov
adc
sub
pushf
and
lock
mov
fnstsw
aad
xchg
or
mov
sti
sub
sbb
jns
mov
add
xor
call
pushf
mov
(bad)
adc
adc
add
imul
loopne
mov
sub
push
mov
xor
jle
(bad)
dec
sub
dec
lds
fdiv
fadd
mov
in
inc
sahf
shl
int3
ret
jns
std
(bad)
dec
mov
jns
cs
pusha
test
in
gs
clc
das
inc
mov
imul
push
xchg
jg
mov
xor
scas
movs
jge
cmp
movs
xor
mov
mov
mov
mov
xor
sar
adc
jp
loope
stos
aad
sub
cmp
sub
leave
cmp
add
mov
jmp
dec
push
jnp
jmp
repz
rcl
dec
repz
(bad)
fstp
(bad)
push
mov
or
push
(bad)
movs
jno
push
pop
fst
sti
xchg
mov
lds
mov
and
outs
leave
xchg
add
or
fnstcw
(bad)
xor
addr16
repz
dec
and
scas
aam
lds
iret
ins
int
outs
jae
fwait
test
outs
and
jae
adc
mov
fnstsw
repz
imul
push
push
in
inc
addr16
and
in
push
mov
mov
out
mov
mov
and
sub
cwde
sbb
sub
ficom
data16
sti
push
mov
mov
pop
ins
sub
pop
mov
or
dec
dec
out
pusha
xchg
les
jnp
dec
add
(bad)
push
adc
jno
fld
or
push
aas
inc
push
pop
pushf
jle
mov
xor
cmp
out
push
mov
dec
icebp
addr16
add
pop
sbb
ss
mov
pop
(bad)
mov
mov
es
ret
es
cmp
out
xchg
in
loop
sbb
pop
and
cmp
out
retf
mov
bound
fs
call
lahf
mov
mov
stc
scas
retf
cmp
scas
enter
clc
mov
ss
out
sbb
inc
cmp
jmp
push
xchg
(bad)
xchg
cmp
out
je
push
fisttp
inc
test
and
fwait
dec
jb
out
pop
mov
loopne
xchg
test
aas
mov
push
out
scas
in
add
loop
xchg
fist
je
lods
push
(bad)
jns
push
scas
and
mov
push
dec
xor
push
rol
outs
mov
mov
mov
inc
ret
pop
push
push
mov
mov
dec
lea
std
inc
das
xchg
add
add
stc
aaa
lock
loopne
sar
sar
(bad)
mov
and
add
dec
inc
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
push
or
push
dec
inc
or
add
or
add
add
add
add
or
add
add
pushf
das
cmp
add
add
inc
inc
add
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
push
ret
sub
add
or
dec
inc
inc
push
pop
inc
in
shl
aam
add
lock
retf
pop
dec
adc
int
into
cmp
adc
mov
leave
push
xor
(bad)
mov
pushf
cmp
sbb
mov
fistp
das
loope
add
xadd
mov
mov
out
out
lea
in
js
iret
sub
or
jl
jl
push
clc
push
add
popf
repnz
xor
cli
dec
jae
mov
call
call
cmp
inc
sub
lds
les
xchg
mov
mul
mov
adc
dec
fcmovbe
add
push
mov
mov
imul
jmp
inc
loope
adc
xor
daa
mov
(bad)
fdivr
ss
lods
or
jbe
and
rol
test
jecxz
rol
div
dec
das
xchg
iret
or
call
mov
cmp
cmp
pop
mov
and
scas
mov
movs
mov
mov
fs
movs
add
in
xor
adc
test
addr16
mov
xchg
jle
sbb
ror
add
jg
ins
ins
cdq
ds
mov
js
lea
sahf
push
or
(bad)
fwait
pop
sbb
mov
lods
cld
xor
fst
scas
repnz
push
push
dec
mov
pop
fwait
add
mov
movs
push
mov
mov
xchg
jle
mov
mov
jmp
inc
sar
fild
rcl
inc
mov
fucomip
xchg
xchg
repnz
sbb
pop
(bad)
js
enter
out
xor
sti
mov
adc
repnz
data16
sbb
mov
dec
ds
clc
mov
xchg
dec
shr
push
mov
xor
not
shr
aas
outs
cli
div
retf
and
lea
cmp
ror
dec
jge
ins
cmps
test
xor
movs
xor
jge
xor
xchg
fdivr
xchg
neg
pop
push
mov
pop
aaa
mov
pop
sub
and
xchg
(bad)
pop
dec
shr
scas
sbb
sbb
int
aad
icebp
int
mov
xchg
sbb
test
dec
ins
mov
movs
pop
jmp
cmp
pop
push
cmp
xchg
nop
inc
sbb
std
out
adc
fs
jo
(bad)
sbb
leave
mov
mov
push
icebp
sub
jno
popa
push
mov
xor
test
outs
push
sbb
shl
(bad)
mov
mov
enter
cmps
js
mov
fsubrp
xchg
mov
aam
adc
dec
dec
hlt
hlt
push
inc
mov
inc
pop
cwde
ja
fist
jecxz
in
and
jae
lock
sti
pop
and
or
sub
mov
lds
dec
lahf
push
adc
pop
std
xchg
push
cmp
outs
add
pop
and
loopne
sbb
lds
movs
pop
inc
fstp
jmp
int
(bad)
popa
xor
pushf
adc
stos
xchg
inc
shr
cmp
repz
mov
xchg
xchg
inc
or
clc
sahf
adc
outs
add
lds
cs
idiv
adc
rcl
daa
ret
call
xchg
jb
jmp
jge
in
mov
pop
and
pop
jmp
xchg
push
cmp
xchg
mov
out
cmp
js
pop
scas
test
cmp
xor
sbb
adc
mov
repz
(bad)
mov
in
ins
mov
(bad)
sar
sbb
imul
sbb
xchg
and
sbb
inc
cmp
jbe
mov
sub
scas
inc
xlat
mov
pop
mov
scas
inc
fst
lahf
inc
xor
lods
pop
sub
in
adc
jge
push
sub
jge
cmc
loop
bound
outs
arpl
push
iret
hlt
mov
xchg
hlt
rcr
stc
add
fld
sahf
call
push
aad
fwait
jl
dec
add
lds
mov
xchg
repz
loop
sbb
inc
pop
jle
mov
pop
sbb
add
jge
mov
out
ror
xchg
sbb
inc
cmp
in
pop
mov
in
jg
push
fild
jnp
push
and
clc
shr
mov
in
sbb
out
movs
push
retf
test
inc
sbb
rcl
cmp
mov
sbb
in
das
jp
ret
pop
dec
inc
add
jae
stc
inc
xor
call
cmps
jae
mov
lahf
test
shl
mov
sub
and
aas
aas
fadd
cmp
int
aaa
test
ja
or
dec
cs
xlat
cmp
out
retf
popf
call
add
ror
frstor
mov
xchg
jg
cmp
pusha
push
add
rcr
or
fdiv
xchg
xor
ins
(bad)
pop
cdq
ins
cmps
lods
or
push
add
fbstp
cmovp
std
out
cmc
clc
xor
aas
fstp
cmp
test
xchg
aad
retf
test
adc
int3
(bad)
fdivr
pop
sbb
in
out
sub
sar
sar
or
and
mov
jnp
bound
dec
xor
sahf
test
xor
shl
retf
out
and
mov
mov
mov
out
inc
scas
pop
adc
movs
outs
push
lahf
lods
pop
inc
pop
popa
arpl
outs
mov
mov
adc
movs
jl
adc
int3
push
std
xor
fwait
jno
lock
mov
pop
pop
cmp
out
add
das
jns
ret
xor
xchg
in
(bad)
sub
mov
in
outs
jp
fnsave
dec
push
in
inc
test
movs
inc
sub
stos
adc
jle
cmp
cld
add
movs
popa
std
dec
pop
mov
fisub
sbb
add
fidivr
mov
add
arpl
mov
das
inc
pop
jmp
inc
jbe
test
fs
je
xchg
(bad)
sahf
mov
sbb
or
fnsave
cmp
addr16
jns
jbe
(bad)
mov
jmp
sub
mov
jbe
shl
jmp
mov
sub
cmp
es
pop
imul
jo
out
pop
jp
sub
bound
cld
jae
hlt
fs
outs
imul
das
es
sub
in
or
into
lods
mov
fst
in
xchg
mov
sbb
jno
dec
dec
ror
jo
jg
xlat
mov
jno
cmc
mov
mov
(bad)
in
inc
daa
inc
jns
test
in
xor
(bad)
outs
inc
out
fst
fisub
jae
sbb
push
ret
and
mov
(bad)
pusha
and
adc
hlt
pop
push
push
iret
in
pusha
xchg
xchg
out
lods
mov
test
xchg
and
mov
pop
clc
jne
shr
cmc
pop
stc
popf
in
outs
mov
inc
pop
ret
mov
inc
dec
xlat
pop
mov
loopne
jo
out
pop
int
ins
sbb
gs
cmps
mov
jnp
inc
add
mov
shl
cmc
sub
test
imul
lahf
pop
cdq
iret
mov
cmp
inc
and
fxch
or
adc
vmptrld
cli
scas
pop
ror
scas
sbb
sub
xor
mov
mov
cdq
pop
sbb
or
test
add
cli
sbb
in
jno
xlat
mov
div
sub
mov
shl
push
and
xor
cmps
je
js
xchg
fwait
cmp
or
loope
xchg
adc
retf
push
js
test
daa
or
into
pop
ins
int
int
fist
dec
lock
leave
pop
ja
es
push
mov
add
data16
push
sbb
retf
add
mov
fwait
xchg
pop
dec
mov
mov
mov
add
aaa
push
push
add
jecxz
sub
sti
fnsave
in
pop
out
(bad)
sahf
pushf
mov
push
mov
fcomp
test
jmp
loopne
shr
sub
mov
inc
xor
fidivr
xchg
ret
pop
lahf
and
add
cmp
ds
inc
scas
push
dec
stos
mov
push
jo
arpl
sar
test
into
adc
cmc
cwde
mov
push
loope
push
mov
ja
popa
mov
push
or
mov
aas
inc
int3
in
js
repnz
rcr
push
jo
ja
dec
pop
pop
xor
ins
add
shl
xor
push
mov
loop
add
xchg
jnp
add
jnp
pop
and
mov
out
mov
adc
out
add
dec
xor
sub
fwait
mov
push
jmp
sbb
xchg
xlat
cmp
pop
stos
push
shl
iret
icebp
or
ficomp
(bad)
call
cmp
jnp
das
aas
dec
jo
mov
mov
mov
pusha
cmp
sti
iret
mov
pop
adc
call
aam
sub
lods
xor
xor
inc
mov
and
icebp
jp
repnz
xlat
scas
sar
test
ja
jecxz
lods
ins
hlt
ins
arpl
ins
icebp
cwde
in
sub
lahf
push
and
(bad)
mov
sbb
push
lahf
or
imul
aad
sbb
fistp
cdq
aaa
sbb
or
test
(bad)
adc
pop
and
repz
mov
xchg
sbb
inc
(bad)
dec
imul
mov
push
sub
ins
jnp
gs
or
in
sub
push
in
xchg
xchg
lock
clc
cmps
lods
in
or
mov
sub
or
xor
dec
and
fbld
add
cmc
push
(bad)
mov
or
rcl
dec
mov
cli
in
or
in
hlt
inc
scas
add
push
clc
xlat
mov
jmp
dec
sub
cmps
jbe
loop
scas
mov
mov
scas
stc
pushf
pop
stc
pop
mov
repnz
lods
pop
popa
into
(bad)
xor
retf
push
int3
stc
lods
or
push
jge
out
(bad)
xor
test
std
mov
out
cli
push
mov
xor
ror
push
or
mov
jb
mov
shl
(bad)
mov
push
retf
mov
push
ret
(bad)
retf
js
inc
(bad)
mov
sub
test
sbb
and
jmp
mov
(bad)
fdivr
sub
pushf
into
adc
adc
mov
daa
pop
iret
in
mov
xchg
pop
sub
and
inc
jo
xchg
and
mov
push
mov
int3
fwait
sub
jbe
ins
jbe
and
jns
adc
mov
clc
sub
inc
add
pop
push
mov
and
lar
dec
fidivr
cdq
dec
cwde
and
pop
stos
fisttp
loopne
and
ja
mov
es
xor
add
imul
sub
in
push
xchg
adc
cmps
or
movs
inc
inc
pop
and
jg
or
movs
xchg
dec
repnz
jns
mov
jl
pop
in
pushf
jl
add
push
push
pop
leave
call
jmp
out
add
jnp
fistp
mov
xor
inc
push
rep
sbb
mov
in
pop
mov
mov
in
pop
(bad)
fild
test
in
test
mov
mov
lds
sar
je
jg
adc
xchg
mov
or
out
sar
dec
add
cmp
add
add
dec
inc
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
dec
or
push
dec
inc
or
add
or
add
add
add
add
or
add
add
pushf
das
cmp
add
add
inc
inc
add
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
push
ret
sub
add
or
dec
inc
inc
push
pop
inc
in
aam
pop
ror
add
icebp
pop
and
adc
movs
mov
mov
mov
inc
ret
push
sbb
pop
iret
jns
iret
mov
fst
pop
add
aaa
mov
std
jb
daa
je
loope
(bad)
xchg
xor
push
arpl
xor
stos
push
push
mov
mov
dec
rcr
mov
out
fcmovb
sub
sbb
xchg
std
fisubr
jo
scas
adc
hlt
ret
(bad)
out
mov
cwde
fmul
adc
ins
mov
sbb
mov
push
(bad)
xchg
addr16
add
repnz
cmp
mov
or
stc
dec
xor
inc
push
mov
ds
je
xor
unpckhps
cmp
fisub
dec
int3
mov
push
jae
jne
test
(bad)
int3
ret
arpl
pop
inc
inc
repz
jbe
pop
push
test
inc
cdq
or
imul
xchg
popf
stos
jnp
jg
adc
pop
popf
mov
mov
cli
es
inc
xor
inc
cmc
div
dec
loopne
test
retf
xor
in
dec
ja
inc
pop
xlat
loop
movs
int3
mov
cld
xchg
and
ins
ins
dec
into
mov
es
or
stc
mov
fild
mov
cmp
or
jno
fistp
movs
jl
sub
loopne
mov
cs
mov
xor
cli
out
sbb
dec
test
dec
ins
push
dec
mov
lds
pop
jmp
outs
test
outs
retf
fbstp
mov
xchg
push
loopne
repnz
dec
pop
cdq
push
test
cmp
dec
xchg
sbb
adc
ins
movs
xchg
xlat
les
sub
mov
mov
data16
imul
ins
arpl
mov
imul
pop
push
and
mov
jl
mov
into
les
adc
fldenv
loope
mov
xchg
sub
mov
and
and
xor
pop
sbb
out
xor
into
jmp
sub
(bad)
ret
adc
dec
push
sahf
push
in
pop
sbb
in
mov
das
dec
lea
repnz
mov
stc
inc
dec
jb
xor
js
aas
pop
(bad)
fcomi
push
jbe
retf
jbe
ret
push
pushf
imul
sti
shl
dec
in
sbb
push
mov
cmp
repz
in
fild
cmp
dec
dec
out
shl
cmp
mov
fild
aas
in
div
xchg
adc
pop
push
not
sub
pop
jl
mov
js
cmps
fucomip
rcl
fpatan
movs
rcr
hlt
pop
outs
pop
jmp
add
out
and
scas
inc
test
ret
push
xor
call
ins
aad
pop
push
pusha
lock
pop
dec
mov
pop
adc
push
shl
popa
mov
cmps
push
shr
push
lahf
int3
in
xor
xor
and
sar
xor
or
push
call
sbb
ins
sahf
cmp
fstp
pop
shl
xchg
pop
mov
retf
(bad)
stos
addr16
cmps
aad
call
sub
(bad)
ficomp
pop
add
push
and
mov
ja
dec
cmp
cwde
stc
fiadd
cwde
xor
cs
call
loop
(bad)
dec
out
es
mov
xchg
mov
cmps
and
loop
stc
mov
mov
fistp
pop
and
in
loope
pop
popf
arpl
clc
jno
dec
fidiv
inc
inc
retf
inc
out
jns
mov
xor
aam
icebp
xchg
mov
mov
push
clc
xchg
sub
jg
es
fwait
outs
inc
ja
xchg
mov
cmps
outs
repz
inc
inc
add
icebp
or
(bad)
jo
sar
jg
sbb
imul
je
xchg
movs
pusha
dec
not
and
sub
or
push
mov
mov
jnp
out
mov
int3
or
iret
add
cmps
cli
retf
cs
test
(bad)
imul
pop
xchg
or
mov
adc
call
cmc
jp
or
popf
outs
lahf
mov
xor
test
mov
lods
jno
mov
cmp
dec
push
ret
ds
(bad)
aad
loop
xor
call
call
xchg
cmp
enter
dec
xor
int3
rcl
dec
je
adc
imul
mov
mov
jbe
and
xor
aas
stc
outs
hlt
sbb
cld
inc
push
nop
mov
ss
scas
dec
add
ret
dec
mov
mov
push
(bad)
jae
xor
jno
js
inc
lods
inc
mov
push
in
sbb
mov
test
mov
add
rep
loopne
cmps
test
scas
mov
sub
add
out
int
sbb
dec
cmc
shl
jmp
cdq
pop
jbe
sbb
in
push
adc
rcr
je
popf
mov
mov
inc
push
or
sub
js
fucomp
icebp
or
inc
daa
dec
(bad)
mov
outs
outs
sbb
test
stos
push
leave
scas
fsubr
jno
(bad)
adc
cmp
add
enter
mov
mov
mov
push
retf
stos
in
fs
out
cmc
in
sti
fld
retf
mov
scas
in
xchg
mov
and
mov
mov
mov
int
or
aaa
xchg
clc
push
in
push
or
(bad)
inc
push
jnp
(bad)
out
int3
xor
sti
push
push
in
stos
xor
ja
pop
cmps
arpl
sar
leave
mov
or
mov
mov
mov
ins
jg
loop
ficomp
mov
or
scas
movs
pop
scas
gs
enter
mov
popf
mov
dec
jle
lahf
rol
retf
(bad)
mov
jb
fwait
retf
xor
scas
and
dec
adc
xchg
mov
mul
inc
out
std
frstor
xor
imul
ins
mov
sub
fdivrp
ins
mov
loopne
dec
jl
int3
mov
push
push
aas
jno
pop
test
out
and
int3
adc
les
dec
push
lds
fisttp
retf
cmp
mov
ret
pusha
test
lock
in
jne
mov
jecxz
loop
jmp
xor
cli
mov
add
pop
out
add
xor
(bad)
loopne
jbe
jmp
or
sub
mov
adc
mov
jle
lahf
mov
jmp
sbb
std
pop
push
pop
dec
adc
xor
push
xor
inc
sbb
dec
(bad)
lds
add
cmp
imul
aaa
test
imul
not
popf
shl
pop
dec
aaa
(bad)
cmp
test
(bad)
adc
(bad)
lods
(bad)
test
jb
mov
sbb
sbb
push
mov
das
daa
data16
sub
mov
add
mov
add
inc
into
xor
out
loopne
movs
stos
stos
rcr
mov
mov
stos
pushf
xchg
dec
out
loopne
sub
imul
cmp
sbb
mov
rcl
pop
xchg
int
xor
mov
loope
lods
xor
fisubr
cdq
jmp
pop
pmaxsw
mov
in
xchg
retf
jbe
inc
and
and
xchg
(bad)
sti
(bad)
div
or
push
cmps
and
loop
test
push
or
sar
add
out
mov
jae
out
stc
sbb
cmps
test
push
and
cmp
pop
(bad)
and
ret
or
add
cmp
pop
cmps
(bad)
into
sub
adc
mov
or
addr16
fcom
(bad)
jl
lahf
cld
inc
cwde
(bad)
sbb
xor
push
cmp
sub
outs
xchg
push
adc
or
(bad)
fadd
es
mov
dec
xchg
sub
jp
mov
scas
int
stc
push
xor
xor
push
xchg
mov
mov
xchg
out
imul
pusha
xor
fcmovnbe
xor
add
fs
cmc
pop
sub
(bad)
pop
mov
xor
xor
loop
jecxz
dec
shrd
pop
mov
aaa
push
icebp
loopne
in
ret
shr
pop
jmp
pusha
sbb
shl
ret
jmp
push
xchg
push
xchg
fisttp
and
mov
xchg
arpl
xor
sbb
vmulsd
mov
jge
sub
xchg
test
ins
push
or
js
cmc
cmp
pusha
inc
mov
and
int3
mov
daa
stc
test
adc
adc
sub
sbb
aam
mov
aad
ins
test
mov
push
xor
dec
mov
mov
movs
inc
pushaw
int3
xchg
mov
(bad)
or
adc
hlt
clc
mov
mov
sti
mov
push
das
push
rol
retf
and
test
mov
cld
dec
out
lds
add
jg
mov
out
xchg
xchg
das
call
cmp
repz
xor
loopne
cmp
int3
fidiv
shl
addr16
xor
sub
mov
add
pop
jle
(bad)
rol
lahf
fidiv
fwait
jge
jbe
and
jmp
rol
stos
push
mov
xor
scas
pop
ins
vorpd
cdq
in
pop
shr
jne
xrelease
xor
inc
mov
and
call
jmp
movs
fstp
dec
mov
(bad)
jg
jecxz
inc
cmp
or
out
lods
dec
repnz
inc
test
sub
enter
arpl
adc
dec
rol
pop
dec
mov
outs
hlt
popa
in
cmp
fdiv
ror
test
mov
mov
lods
or
std
dec
outs
out
xchg
add
dec
fs
icebp
ss
xor
mov
(bad)
dec
in
cmc
mov
xchg
dec
out
call
bound
xor
rcl
ret
loopne
mov
inc
push
fcmovbe
mov
cwde
push
iret
out
test
scas
jne
gs
arpl
add
shr
leave
movsx
test
sbb
cmp
int3
and
outs
and
sub
cmp
aaa
mov
adc
dec
adc
in
ret
fucomi
add
pop
mov
(bad)
rcl
cs
sbb
pop
pop
rol
imul
mov
xor
cmp
cmps
sbb
adc
push
pop
retw
out
or
cmp
(bad)
stos
daa
call
int3
cli
mov
mov
test
jno
jecxz
psrlq
gs
aaa
int3
sub
inc
lea
adc
xchg
add
cmp
stos
mov
mov
sub
sbb
dec
cmp
pop
xor
inc
inc
push
xchg
mov
cmp
push
int3
mov
je
cs
jmp
add
nop
cmps
ret
int3
sahf
cmp
dec
loopne
sub
mov
fcom
dec
add
push
push
jmp
in
jmp
jo
mov
(bad)
imul
addr16
adc
jmp
retf
cld
jo
dec
xchg
inc
jle
pop
ds
jne
int3
sbb
mov
push
shr
xor
hlt
es
mov
mov
cdq
out
sub
mov
push
(bad)
in
pop
pop
cmp
or
lahf
add
add
int
mov
add
add
dec
inc
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
push
or
push
dec
inc
or
add
or
add
add
add
add
or
add
add
pushf
das
cmp
add
add
inc
inc
add
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
push
ret
sub
add
or
dec
inc
inc
push
pop
inc
in
aad
and
(bad)
jecxz
icebp
pop
daa
cmps
fild
test
jns
je
(bad)
jmp
jno
outs
xchg
(bad)
cdq
imul
jmp
repz
pop
mov
cmp
jns
add
mov
sub
fisttp
loop
push
sar
les
mov
and
fisttp
fstp
lahf
mov
int3
fdivp
int3
cli
cmp
lods
aad
dec
nop
ins
outs
repnz
shr
cmp
mov
inc
mov
jge
mov
xchg
and
fcomp
data16
sbb
xor
adc
je
leave
add
xchg
ins
ins
lahf
add
cmp
mov
sbb
cs
fimul
test
js
fwait
int
stc
lds
outs
sbb
jl
das
loopne
leave
inc
inc
movs
dec
es
shr
inc
push
xchg
sub
retf
in
mov
pop
jp
outs
cld
inc
out
inc
jl
adc
shr
nop
shr
mov
cmp
push
sar
stos
ret
out
in
loopne
(bad)
scas
jmp
jmp
hlt
or
fbld
test
mov
cs
inc
cmp
mov
cli
(bad)
in
inc
aaa
xor
ja
inc
sbb
hlt
sbb
cli
push
jno
xchg
mov
test
add
fsubr
pop
and
push
(bad)
fwait
stc
xchg
push
mov
je
outs
pop
jecxz
scas
cmp
les
icebp
lods
sbb
aam
rol
mov
dec
adc
test
and
mov
add
and
mov
mov
xchg
mov
mov
inc
lds
dec
out
fistp
jge
scas
lods
movs
cmp
xchg
aas
movs
mov
loop
in
cdq
mov
enter
or
push
jmp
out
mov
repnz
sub
fldcw
sbb
pushf
dec
fsub
shr
loope
push
xor
ja
test
jge
pop
mov
fcom
inc
retf
nop
pop
mov
ror
aas
mov
or
sbb
jne
sahf
(bad)
lods
dec
std
dec
push
mov
fst
mov
retf
bnd
pop
cmps
xchg
add
jmp
in
test
and
mov
enter
mov
inc
(bad)
xchg
lods
lds
sahf
inc
cmp
lods
dec
aam
push
dec
aas
lods
inc
mov
sbb
add
hlt
add
out
aaa
leave
xchg
push
cmp
inc
or
xchg
(bad)
popa
outs
cdq
pop
pop
clc
icebp
jmp
push
add
dec
adc
inc
sbb
xor
push
push
adc
out
adc
in
cmp
std
aad
xchg
jp
fistp
cmp
fisub
fucompp
imul
mov
sub
enter
xchg
sub
pop
popa
js
sub
loop
sbb
pop
jg
xchg
ror
pop
inc
mov
push
bnd
div
repnz
dec
jns
nop
push
mov
outs
cmc
add
aas
ins
mul
fsubr
xlat
jmp
imul
ja
cmp
rcr
pop
xchg
mov
or
push
push
mov
mov
xchg
add
in
sub
retf
adc
aas
lods
push
xlat
(bad)
or
mov
or
cdq
dec
xor
pop
sub
xor
pop
push
adc
fmul
pop
sbb
push
loopne
test
imul
jl
hlt
ss
jns
mov
std
xchg
xor
and
nop
pushf
data16
cli
and
cld
jnp
xchg
bound
(bad)
jg
movs
xor
aaa
sbb
(bad)
cmp
aad
ja
sbb
adc
ror
(bad)
shl
pop
loopne
je
bound
sbb
je
jecxz
dec
mov
(bad)
sbb
stos
(bad)
hlt
xchg
mov
adc
fistp
in
shr
dec
loopne
mov
mov
pop
clc
adc
mov
cmp
in
in
inc
pop
retf
iret
out
sbb
xlat
mov
fistp
xor
sub
xchg
pop
jmp
sti
add
sub
mov
push
daa
dec
test
vpshufd
push
lock
mov
fldcw
call
lds
pop
sbb
jmp
out
sub
xor
inc
pop
mov
gs
movs
pop
pusha
call
int3
loopne
sub
add
nop
inc
adc
pop
push
inc
sbb
ror
xchg
stos
loop
inc
ret
(bad)
imul
lea
nop
lods
fld
jbe
(bad)
sahf
mov
mov
dec
js
xor
dec
adc
jne
ja
mov
sub
add
data16
xchg
aas
shl
cwde
ins
and
add
dec
or
adc
retf
or
int
mov
out
loope
mov
cwde
call
mov
cmp
ficom
or
pop
jne
int
pop
stos
cli
mov
(bad)
aam
int3
jnp
pop
cwde
jnp
retf
add
adc
cs
iret
sbb
and
les
or
fnstenv
push
sub
jmp
push
or
mov
popf
je
cwde
cmp
repnz
pop
jp
ins
push
or
ret
ss
mov
test
sahf
mov
test
in
jno
inc
jae
dec
and
or
mov
pop
(bad)
imul
jne
es
pop
dec
dec
js
cdq
cdq
pop
and
icebp
xchg
int3
pop
xchg
in
sbb
push
add
sub
loope
in
push
inc
mov
mov
cs
shl
or
out
aam
cli
dec
cli
dec
cmp
mov
fcmovbe
outs
xor
sub
or
mov
sbb
mov
ror
pop
add
sbb
or
in
jl
repnz
adc
arpl
and
dec
xor
into
xor
or
xlat
add
pop
xchg
push
xor
inc
aaa
call
push
shl
mov
scas
push
lds
or
inc
imul
mov
push
add
push
outs
ror
div
out
pop
test
scas
(bad)
loopne
das
ret
cmp
mov
or
jb
sbb
mov
adc
add
sub
inc
aas
rcr
push
punpcklbw
sahf
sub
push
dec
retf
push
lea
in
aad
cs
jl
lahf
cmp
cmp
dec
in
sti
mov
cli
fs
push
fidivr
mov
stc
add
xchg
sbb
sbb
and
repz
or
std
xchg
mov
mov
inc
sar
push
xchg
in
mov
cmp
retf
in
cmp
nop
dec
jecxz
dec
dec
cmp
xlat
aas
imul
adc
pop
fst
repnz
mov
iret
mov
sbb
aad
pop
lods
push
mov
push
inc
sub
mov
test
or
jge
dec
fwait
adc
(bad)
inc
adc
fst
aaa
jl
push
mov
fcmove
test
inc
or
cmc
sbb
dec
test
cmps
inc
int
mov
enter
push
popa
jno
dec
mov
mov
es
and
xchg
ins
xchg
or
pushf
sbb
in
add
xor
mov
fdivr
xor
jmp
xchg
call
mov
(bad)
ds
imul
mov
data16
pop
scas
xchg
xor
sub
pop
enter
fsub
pop
push
or
mov
das
cmps
mov
sahf
lods
jle
mov
add
push
and
push
sub
jo
int3
(bad)
sub
push
sbb
mov
jl
in
test
or
imul
jmp
mov
daa
mov
xchg
push
repz
mov
ret
mov
fnstsw
dec
cmp
sub
push
and
adc
jbe
inc
jne
out
les
jb
and
pop
pusha
out
in
data16
stos
jns
lods
add
pop
jne
das
mov
cld
fucomip
jge
xor
mov
xor
mov
mov
jg
adc
push
push
cmps
mov
arpl
jmp
cmp
sbb
mov
xor
cmp
popa
sbb
mov
inc
or
(bad)
js
push
adc
icebp
std
sbb
pushf
popf
jbe
sbb
dec
fdivr
or
xchg
cmps
ud2
(bad)
push
data16
push
scas
mov
cmp
inc
fs
mov
cmp
bound
sub
add
(bad)
pop
arpl
clc
fwait
mov
rol
pushf
fistp
mov
out
out
push
xlat
push
aad
sub
js
pop
data16
movs
mov
mov
cmc
mov
popf
add
popf
mov
cmp
outs
pop
jae
mov
xlat
call
inc
out
test
(bad)
sub
je
pop
adc
pushf
mov
adc
pop
jbe
mov
jae
mov
inc
jle
xor
mov
das
sub
jnp
stos
arpl
mov
ins
jmp
cmp
xor
aaa
lds
sbb
xchg
xor
push
ss
adc
iret
repnz
pushf
je
sbb
movs
inc
imul
xchg
jge
out
mov
add
imul
jmp
xor
jno
aad
(bad)
sub
sub
mov
mov
xor
or
stc
test
cdq
pop
enter
mov
ss
sub
pushf
xchg
std
inc
mov
call
je
cmp
add
pop
push
cmps
mov
rcl
xlat
add
pop
inc
ror
jb
cwde
outs
movs
ins
and
icebp
xor
jmp
leave
stos
mov
lock
aaa
or
mov
dec
rcl
adc
dec
mov
dec
sub
xlat
shl
xchg
or
dec
shr
jle
js
outs
(bad)
mov
sysenter
add
div
mov
frstor
pushf
mov
ins
shl
into
or
mov
mov
inc
push
lds
sar
mov
xchg
mov
cmps
xor
push
clc
sub
xor
loopne
pop
push
jmp
popf
adc
xchg
adc
test
xchg
retf
mov
sub
sar
out
jecxz
xchg
cmps
mov
in
xchg
in
ins
push
xchg
adc
inc
iret
adc
jle
outs
mov
int3
xchg
cmps
dec
into
addr16
and
mov
fstp
dec
push
ins
jne
jge
jno
cmc
fiadd
fcomip
lahf
mov
jns
jmp
out
fild
sub
xchg
ror
(bad)
sti
xchg
mov
daa
jno
outs
loope
call
ja
fsub
aaa
inc
xor
mov
mov
dec
leave
mov
jne
mov
jl
lods
retf
or
nop
cmp
inc
adc
push
cmc
jecxz
push
dec
mov
lahf
pop
mov
cdq
jbe
pushf
xor
mov
fld
xchg
nop
dec
ret
les
shl
xchg
cmp
scas
gs
mov
fist
jl
(bad)
xchg
pop
and
sbb
test
paddb
sti
sub
(bad)
out
ins
jmp
inc
aas
imul
cmp
aam
cmp
shr
and
or
push
mov
rcl
jge
pusha
mov
inc
out
loopne
jg
dec
cld
adc
loopne
sub
aas
mov
ss
cli
enter
add
dec
inc
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
dec
or
push
dec
inc
or
add
or
add
add
add
add
or
add
add
pushf
das
cmp
add
add
inc
inc
add
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
push
ret
sub
add
or
dec
inc
inc
push
pop
inc
in
shl
aam
add
lock
sbb
inc
push
data16
enter
cmp
loop
mov
push
mov
lods
in
xchg
scas
inc
jbe
jnp
ret
in
lods
cmp
ins
out
jle
pop
icebp
cld
(bad)
and
lods
jo
nop
test
scas
loopne
ret
fwait
in
in
test
mov
xchg
pop
es
push
xor
shr
jmp
data16
xchg
or
les
movs
test
ja
pusha
pop
dec
inc
and
scas
aaa
xchg
mov
pop
fnstcw
pop
or
jmp
pop
mov
das
xchg
ret
sti
xor
pop
clc
pop
xchg
inc
adc
loopne
hlt
repnz
add
call
jmp
std
ror
inc
shl
(bad)
sub
(bad)
loop
data16
imul
and
push
mov
shl
test
cmp
lahf
inc
jle
arpl
hlt
je
cmp
jns
inc
mov
fadd
mov
sub
cmp
lods
xor
fcmovu
push
dec
xchg
nop
aam
lods
cmp
mov
and
fwait
and
fld
ins
loope
outs
and
jmp
inc
stos
iret
sahf
ins
movs
xor
mov
or
call
cld
dec
ins
iret
mov
aad
in
jne
sbb
in
cwde
jne
sub
aas
mov
adc
repz
jb
push
cmp
out
sub
mov
jmp
rcr
icebp
mov
lahf
push
and
add
or
adc
jmp
mov
iret
pop
dec
bnd
fsubr
ret
sub
add
mov
out
push
fnsave
stos
movs
sbb
adc
cmp
xor
push
lahf
jno
xchg
push
repnz
mov
jl
jmp
aad
xchg
mov
int
int
leave
test
add
or
loope
jae
adc
adc
(bad)
xchg
pop
mov
mov
cmp
push
in
js
jmp
dec
cmp
or
out
stc
(bad)
repz
into
test
imul
sbb
add
adc
repz
outs
inc
jp
out
xchg
xchg
jp
fldcw
sbb
mov
jle
sbb
scas
xchg
pushf
fld
mov
das
xchg
mov
sahf
push
inc
adc
sar
cmp
outs
mov
adc
bound
fisub
addr16
es
add
xor
jmp
dec
dec
imul
loope
adc
sbb
sub
xchg
clc
pop
frstor
mov
lahf
pop
adc
jmp
fwait
icebp
sub
sub
sub
inc
scas
push
fucomp
stos
jle
adc
jg
sbb
add
adc
push
shr
popa
fcmovbe
repz
adc
push
xchg
xchg
sbb
imul
xchg
jmp
pop
arpl
clc
cmp
xchg
mul
mov
test
sti
sbb
mov
test
sub
je
je
and
and
pop
ins
mov
cmp
mov
pop
push
call
mov
popa
xor
(bad)
(bad)
(bad)
push
(bad)
pop
adc
push
mov
js
xor
movs
sbb
retf
movs
addr16
aaa
mov
cmps
into
inc
add
loope
cwde
cld
inc
xchg
mov
sub
stc
push
loope
imul
and
mov
mov
ins
push
pop
popa
sbb
pop
aas
imul
or
int
jne
test
leave
dec
out
or
mov
cmp
scas
(bad)
test
ins
jns
mov
data16
loop
sahf
push
call
push
std
sub
cmp
outs
shl
push
aaa
jo
sbb
fstp
aad
lock
imul
pusha
adc
div
(bad)
outs
test
mov
push
out
xchg
push
inc
adc
cmps
je
mov
dec
dec
fcom
fwait
aad
and
xchg
mov
daa
adc
clc
call
xchg
aam
push
pop
nop
repz
mov
xchg
pop
inc
xchg
repz
or
imul
arpl
gs
cmp
dec
jae
test
inc
into
mov
push
imul
or
test
lods
dec
push
sub
pushf
xchg
cld
pop
pop
cmp
jb
mov
mov
stos
inc
adc
mov
mov
into
aas
nop
leave
sub
jmp
pop
xor
mov
je
fmul
lahf
mov
mov
out
lock
imul
xor
mov
rcl
or
loope
addr16
movs
stc
test
in
mov
int
xchg
das
or
mov
retf
cmps
aas
lahf
pop
lock
adc
push
push
jmp
adc
lds
jmp
not
mov
pop
xor
clc
movs
das
ret
or
inc
retf
stos
in
xchg
std
sbb
out
shl
cmps
and
and
xchg
jae
jo
dec
sbb
inc
fcmovbe
jle
daa
movs
rcr
cld
jecxz
and
cmps
movs
mov
mov
jle
or
add
xchg
sub
ror
retf
sbb
pop
loop
xor
repnz
cwde
mov
movs
aas
xchg
jge
test
mov
jmp
icebp
out
xchg
mov
in
push
xor
cs
cmp
rol
or
ja
rol
jmp
sbb
scas
call
ror
das
(bad)
lock
jmp
cli
je
jecxz
clc
dec
cld
jno
xchg
cmp
push
pop
jmp
xchg
mov
pop
inc
pusha
push
xor
push
cmp
mov
cdq
sbb
dec
cwde
pop
mov
dec
cmp
pop
es
ins
sub
mov
imul
add
jmp
mov
icebp
xor
ret
mov
adc
mov
cmp
lods
or
int3
cmp
cdq
mov
and
push
aad
mov
sti
jge
test
fbld
cmps
or
movs
push
nop
mov
and
pop
nop
clc
jmp
jle
scas
mov
mov
sub
xchg
mov
fwait
xor
jae
mov
je
retf
push
cmp
or
add
jo
(bad)
sub
enter
les
pop
pop
repnz
loop
call
in
daa
jecxz
test
test
jnp
out
repnz
ds
pop
xlat
inc
xchg
and
cmp
jecxz
cmp
ret
les
mov
cmp
(bad)
mov
push
pop
cmp
fmul
retf
(bad)
mov
jne
les
push
add
cdq
jl
ins
arpl
movq
retf
cmps
cmp
cmp
jp
icebp
into
popa
inc
adc
ret
(bad)
cmp
js
sbb
cs
mov
push
jecxz
or
mov
push
and
in
das
jbe
jp
lahf
cmp
adc
sub
add
mov
nop
scas
cmps
lods
int
or
sbb
mov
daa
scas
imul
push
mov
mov
dec
push
(bad)
mov
(bad)
(bad)
out
dec
imul
pusha
outs
mov
cs
xor
call
movs
pushf
imul
sub
rep
sti
mov
sub
cli
hlt
out
push
ins
ds
pop
lahf
pusha
xor
push
cmp
adc
inc
js
inc
sub
div
jg
test
lea
rcr
xchg
xchg
int3
push
aas
cmp
(bad)
mov
lahf
jmp
iret
xchg
mov
div
jne
jo
and
retf
cwde
cli
mov
dec
cmp
repz
lds
gs
adc
push
inc
fisttp
pop
sub
(bad)
(bad)
fdivr
inc
pop
test
xlat
inc
clc
fs
mov
pop
mov
out
jecxz
xchg
call
mov
out
test
mov
clc
mov
std
jno
repz
mov
mov
retf
aaa
pushf
inc
dec
imul
lods
mov
and
xor
popa
gs
push
dec
cmps
lsl
(bad)
jp
cvtpi2ps
adc
inc
in
dec
test
imul
fdiv
pop
fsub
pop
fwait
cld
mov
pop
mov
dec
and
jnp
imul
jmp
mov
mov
in
mov
adc
mov
mov
cmps
cmp
(bad)
int3
stos
aaa
int
imul
stos
inc
push
mov
loope
jne
jne
and
pop
rcl
movs
pop
cli
add
mov
fiadd
xchg
pushf
adc
dec
retf
push
cmp
dec
and
mov
loop
ins
jmp
or
push
dec
jl
ficomp
fld
cmp
add
retf
mov
dec
mov
jecxz
retf
jmp
outs
dec
(bad)
adc
fmul
scas
mov
fwait
cmps
mov
mov
shl
mov
call
clc
mov
sbb
outs
xlat
jg
xbegin
add
movs
xor
adc
mov
movs
dec
fistp
fild
sub
fwait
sub
xchg
add
jbe
push
div
das
test
clc
sub
xor
cmp
out
in
jno
push
clc
mov
mov
mov
lods
ins
nop
sbb
ret
pop
push
loope
pushf
lds
mov
nop
int
les
push
rcl
xor
jne
js
test
stos
mov
lods
jmp
push
(bad)
adc
push
dec
sbb
push
sbb
mov
fcomp
ja
je
push
xchg
mov
movs
and
sbb
and
lock
and
mov
xor
rol
push
sti
jmp
aas
xchg
inc
clc
inc
push
icebp
js
add
mov
(bad)
out
out
jl
ja
pusha
dec
cmp
cmp
fs
nop
iret
dec
fbstp
sti
cdq
cmp
pop
mov
dec
popf
stc
test
xchg
je
push
cmps
or
lods
pop
cmp
in
retf
jae
add
jmp
cmp
sub
xchg
je
mov
dec
div
(bad)
cld
lds
cli
jb
mov
mov
adc
fimul
mov
in
adc
mov
call
popf
dec
ror
and
adc
(bad)
repz
shr
xor
rcr
push
mov
jmp
fcomip
imul
aaa
jns
fld
push
cwde
(bad)
cmc
add
inc
xor
mov
retf
adc
out
xor
sar
movs
mov
inc
mov
popa
imul
mov
sbb
xchg
jle
add
sbb
aaa
mov
retf
enter
out
dec
push
and
pop
fs
stos
test
and
mov
(bad)
xor
icebp
push
push
add
shl
test
or
and
jb
lds
cmp
cmps
nop
out
inc
xchg
repnz
inc
(bad)
repz
jl
mov
push
add
lds
jge
pop
jmp
addr16
retf
push
xchg
iret
call
jo
les
fmul
cmc
and
or
lds
shr
dec
mov
imul
mov
aad
push
xchg
push
add
cmp
and
stos
mov
fsubr
mov
or
div
pop
loope
outs
mov
int3
mov
sbb
mov
push
test
call
inc
jae
mov
aaa
lock
loopne
sar
sar
pop
jecxz
inc
clc
inc
sub
dec
inc
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
push
or
push
dec
inc
or
add
or
add
add
add
add
or
add
add
pushf
das
cmp
add
add
inc
inc
add
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
push
ret
sub
add
or
dec
inc
inc
push
pop
inc
in
shl
aam
add
lock
(bad)
and
cld
in
shl
cmp
int3
sahf
popf
cmp
ds
and
mov
mov
inc
push
xchg
xor
xchg
jae
mov
in
repz
add
fs
add
lods
rcr
nop
inc
fmulp
push
cmc
lods
pop
int
aas
imul
dec
cmp
call
scas
outs
mov
sub
mul
dec
mov
mov
dec
cmp
xadd
mov
xchg
inc
fimul
cld
dec
and
ror
lods
(bad)
xor
mov
ins
mov
aad
outs
jmp
add
(bad)
aaa
inc
(bad)
cmps
lods
mov
bound
add
jns
and
cmps
out
imul
inc
push
dec
adc
dec
call
cdq
push
push
fucom
mov
mov
arpl
lock
push
inc
repz
repz
pushf
rcl
out
int3
fwait
mov
xchg
dec
icebp
nop
mov
lahf
in
pop
and
jns
jnp
push
mov
pop
dec
jbe
mov
add
or
pusha
mov
hlt
dec
fstp
repnz
lahf
sahf
(bad)
pop
mov
mov
cmp
mov
push
adc
adc
aaa
test
cmp
cmc
pop
sti
mov
repz
cmp
mov
loop
mov
rol
and
repz
repz
mov
push
push
mov
test
sub
push
mov
dec
cmp
pop
(bad)
jl
xchg
ja
fadd
sbb
dec
leave
out
popf
(bad)
(bad)
mov
shl
enter
test
jmp
pop
mov
or
aad
mov
mov
push
add
jbe
jmp
icebp
addr16
sub
push
lahf
sub
(bad)
sahf
push
cdq
add
mov
gs
(bad)
jmp
cmp
dec
inc
pop
mov
fadd
fisttp
das
jmp
and
add
rol
dec
popa
jmp
lods
test
push
inc
mov
adc
xor
mov
mov
push
or
je
mov
cld
fsub
ins
call
adc
inc
mov
ret
lods
loop
mov
fiadd
inc
dec
out
fs
cmp
sub
fwait
or
loope
neg
xchg
mov
dec
add
cli
lods
sbb
int
fmul
or
xchg
xchg
mov
cwde
mov
es
cmps
jecxz
jp
inc
xchg
outs
adc
aad
aad
sbb
aam
cmp
loopne
out
jo
sub
fucomi
xlat
jne
push
mov
xchg
retf
aaa
pop
jae
daa
in
test
into
add
mov
into
jp
mov
adc
aam
or
sbb
dec
jo
daa
cmps
bound
inc
mov
inc
fwait
adc
sti
loop
xlat
sbb
js
xor
imul
pop
lods
or
shr
push
lods
test
shl
in
movs
cmp
fistp
out
sub
icebp
aad
mov
sub
mov
sar
popf
mov
sbb
pop
in
xchg
mov
js
in
(bad)
arpl
test
mov
mov
add
push
mov
push
xor
stos
sub
lock
(bad)
or
sar
jo
stos
and
bound
push
sbb
inc
jnp
test
inc
std
or
xor
outs
add
movs
mov
gs
sub
dec
sub
add
inc
mov
push
out
lahf
sub
out
pushf
mov
fiadd
popa
and
or
int3
jnp
movs
cmp
shl
pop
cmp
pop
pop
push
jae
adc
test
loop
ja
aad
or
push
mov
sahf
stos
push
aam
int3
and
jbe
imul
push
arpl
(bad)
mov
rcl
pop
test
jle
mov
out
add
jecxz
dec
push
cld
jo
jle
jo
lea
mov
imul
test
out
test
into
mov
and
pop
stos
mov
sub
xchg
jns
mov
cmp
movs
xor
mov
cmps
call
push
mov
or
mov
mov
push
inc
mov
cmp
jle
addr16
mov
jmp
mov
sub
and
hlt
(bad)
xchg
sub
lds
(bad)
and
pop
sti
mov
mov
clc
or
fnstenv
or
loop
jbe
leave
adc
(bad)
out
mov
mov
stos
jns
sbb
push
mov
ret
mov
popf
loopne
sub
les
mov
jg
jnp
call
or
fs
retf
sbb
pop
jnp
sar
outs
mov
fisubr
(bad)
cmc
std
scas
sbb
stc
xchg
sub
push
loop
sar
push
jmp
or
out
pop
cdq
enter
imul
mov
mov
push
or
int3
out
fldln2
aam
ror
cld
xchg
(bad)
std
sub
push
inc
inc
xor
push
or
rcl
mov
mov
jg
jbe
test
ret
es
ds
adc
mov
mov
fs
or
(bad)
(bad)
imul
ds
rcl
mov
(bad)
stos
je
dec
dec
dec
enter
aaa
pusha
pop
mov
inc
xchg
jo
push
aad
ss
mov
inc
push
out
and
stos
fsub
and
xlat
dec
pop
inc
mov
leave
leave
(bad)
inc
sti
(bad)
daa
add
mov
aad
sub
sbb
ja
imul
xor
loop
mov
(bad)
into
std
sub
aas
imul
aad
mov
aad
fldcw
adc
pusha
or
jb
out
or
pop
test
push
sbb
jle
dec
out
pop
icebp
mov
jno
jmp
jecxz
add
int3
push
pusha
push
ja
cmc
or
out
les
add
push
pop
and
mov
adc
adc
retf
fs
jo
inc
push
call
inc
sti
std
dec
sbb
push
pop
lods
jne
cmc
in
mov
xchg
dec
rcr
retf
dec
and
sbb
add
fwait
call
movs
cdq
push
xor
movs
and
fld1
std
or
in
std
ja
out
movs
mov
rcr
adc
push
and
jmp
jmp
hlt
mov
call
call
gs
ror
mov
(bad)
icebp
mov
push
rcl
pop
or
sbb
jge
xor
mov
daa
jle
mov
xchg
ds
jmp
out
jns
cmp
sub
pop
jmp
adc
outs
pop
adc
mov
cmps
mov
movs
test
mov
stc
adc
dec
cdq
pop
out
(bad)
je
into
lahf
mov
sar
inc
sbb
cmps
adc
rcl
rcl
std
jle
and
fdivr
scas
xor
xchg
and
pusha
ror
jecxz
pop
test
mov
neg
mov
mov
mov
fild
dec
test
data16
xor
int3
fxam
mov
cmp
xchg
and
in
int
fisttp
out
push
mov
cmc
sbb
xor
mov
cld
dec
(bad)
inc
(bad)
arpl
push
stos
call
dec
xchg
and
dec
mov
xchg
ja
add
jmp
cli
add
xchg
aaa
pushf
push
xchg
retf
and
jmp
loopne
inc
add
pop
xchg
xlat
jns
push
rol
icebp
mov
enter
sbb
mov
push
push
jno
hlt
pop
int
int
pop
sti
pusha
xchg
fcmovnbe
das
push
mov
scas
pop
nop
or
sub
and
shl
js
es
dec
cmp
inc
imul
cmp
mov
adc
add
add
stos
sti
shr
and
mov
std
dec
xchg
cmps
sbb
in
arpl
jno
dec
jns
cmp
rol
nop
inc
pop
ja
jecxz
mov
in
test
(bad)
xchg
jne
sbb
(bad)
(bad)
sbb
push
mov
cs
cld
cmps
lds
cmp
and
loop
push
push
outs
push
fisttp
pop
push
jno
xchg
xor
jmp
cmp
jg
dec
push
dec
xchg
mov
hlt
xchg
enter
add
je
sub
xor
js
jecxz
cdq
inc
das
pop
inc
ret
fwait
into
shl
push
mov
push
mov
dec
xchg
gs
cwde
(bad)
imul
xchg
out
adc
mov
rcl
jge
fnsave
pop
icebp
xlat
mov
mov
lahf
lock
ret
in
jo
mov
mov
push
imul
mov
outs
arpl
pop
add
outs
mov
call
jle
cmps
jmp
xlat
sub
cmp
bnd
pop
lds
mov
sub
and
sar
pop
sub
or
jbe
pop
dec
fisubr
xchg
jo
movs
mov
inc
sub
imul
push
scas
inc
dec
sub
call
test
mov
or
or
inc
jp
mov
mov
rol
mov
pop
pop
ja
push
aas
and
repz
(bad)
mov
cmc
(bad)
cs
push
hlt
jbe
fld
cmp
dec
mov
stos
(bad)
in
leave
repz
stos
aad
call
test
(bad)
lea
adc
int3
xlat
lahf
jecxz
mov
cld
add
call
iret
je
push
mov
mov
bnd
ror
jbe
in
jge
xor
dec
into
mov
push
xchg
aaa
test
push
mov
cld
sahf
sbb
jae
movs
mov
stc
sbb
mov
fst
push
inc
mov
stc
jne
ret
xor
leave
sar
ror
pop
loope
sbb
int
push
push
jae
lock
call
jge
fstp
and
pop
xchg
sar
in
push
scas
mov
mov
cmp
pop
(bad)
in
xchg
lods
dec
movs
xor
mov
shl
add
push
lock
lods
mov
xchg
retf
push
push
in
mov
fild
ja
jo
inc
xchg
retf
mov
adc
or
movs
mov
call
dec
dec
or
imul
jb
test
cwde
das
pop
mov
hlt
icebp
int
sub
mov
stc
(bad)
repz
arpl
xchg
sbb
mov
add
and
xor
mov
xchg
xor
fnstsw
add
ins
out
xor
(bad)
fmul
push
or
jmp
bound
pop
ret
push
cmc
dec
je
and
mov
lods
jno
mov
in
add
retf
scas
outs
sbb
mov
not
cmps
push
sub
(bad)
not
out
clc
sub
or
or
cmp
jae
sub
mov
daa
add
and
ucomiss
and
outs
jmp
jnp
mov
ja
dec
(bad)
sub
jbe
imul
mov
test
sub
jmp
mov
aad
loopne
jg
inc
dec
lock
cld
btc
pop
cmp
cdq
jge
add
add
dec
inc
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
push
or
push
dec
inc
or
add
or
add
add
add
add
or
add
add
pushf
das
cmp
add
add
inc
inc
add
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
push
ret
sub
add
or
dec
inc
inc
push
pop
inc
in
shl
aas
aad
mov
neg
je
mov
cmp
jo
push
sbb
mov
(bad)
retf
(bad)
into
es
mov
nop
push
sbb
enter
fidiv
out
scas
mov
add
in
inc
sub
sti
cmp
mov
ret
dec
int
aad
push
ror
dec
mov
clc
fild
lods
push
adc
lods
std
fistp
push
popf
leave
ret
ror
clc
jecxz
mov
outs
les
cmps
mov
xor
xor
mov
mov
mov
sbb
cmp
fist
cmp
sub
and
and
sbb
cs
mov
pop
xor
inc
cli
jecxz
fstp
sti
shr
in
(bad)
(bad)
inc
dec
fwait
aaa
or
js
pop
xchg
jns
cwde
aas
fs
push
ins
add
add
xor
dec
or
inc
inc
mov
adc
dec
dec
aam
dec
jb
sbb
push
sub
inc
dec
cmps
pop
sub
rcr
addr16
js
push
sub
push
cld
push
retf
test
inc
sbb
add
test
in
sbb
pop
jmp
aad
add
mov
lea
mov
mov
cmps
pushf
aad
jmp
lahf
xor
stos
or
rcl
mov
fdivp
mov
mov
jae
fld
cmp
es
mov
push
fcomip
jecxz
lods
pop
adc
cmp
mov
add
xor
enter
add
mov
xchg
aaa
cmp
xor
retf
imul
cmp
lea
xor
push
xor
test
stos
adc
(bad)
mov
cmp
cmp
bound
aas
aas
mov
xor
add
or
icebp
jg
pop
aam
inc
cli
mov
outs
leave
mov
ins
or
nop
sar
jecxz
push
push
mov
sbb
xlat
push
pop
imul
push
dec
mov
int3
sub
mov
test
xor
xchg
fnstenv
div
jns
fimul
pop
cmc
or
not
dec
or
jl
daa
retf
adc
cli
in
xor
sub
mov
movs
loope
outs
push
jmp
mov
cmp
jg
hlt
mov
pop
std
xlat
hlt
and
mov
and
cmc
call
cmps
fild
sbb
cmp
cmps
mov
sbb
aaa
mov
in
aam
adc
icebp
push
jno
sbb
cmc
push
hlt
hlt
rol
sahf
cwde
dec
xor
outs
sbb
bound
xchg
mov
inc
(bad)
sahf
push
pop
sub
cmp
stos
jne
push
jns
mov
test
fstp
cdq
mov
jbe
das
or
inc
pop
fcmovnbe
sub
hlt
(bad)
in
jnp
pushf
arpl
xor
mov
mov
or
addr16
test
fst
mov
mov
dec
scas
loop
cli
push
in
and
adc
xor
lods
mov
push
xchg
fnstsw
int
sub
jle
mov
stos
push
mov
(bad)
sahf
inc
mov
movs
pop
and
mov
cmps
imul
sub
shl
jnp
xor
sbb
sub
cdq
vprotd
js
mov
cmps
fnsave
cwde
pop
xor
cmps
in
or
addr16
push
and
pop
and
rcl
or
rol
daa
push
mov
xor
xor
sbb
ror
arpl
sbb
adc
sti
into
cmps
sbb
(bad)
ins
mov
cmp
xor
jp
inc
xchg
shl
std
lea
pop
mov
mov
sub
and
popa
loopne
cld
pop
sbb
mov
aam
dec
pop
fs
into
push
dec
pop
call
(bad)
sbb
fnstsw
loopne
into
xchg
mov
push
jle
cwde
(bad)
stc
jl
add
lock
pop
imul
sbb
repnz
jne
xchg
or
xlat
sbb
jbe
or
ins
cmps
stos
loopne
test
fnstsw
mov
mov
aas
enter
cwde
je
inc
hlt
icebp
mov
pop
(bad)
push
mov
mov
dec
sbb
(bad)
fidivr
retf
lods
jmp
sub
stc
push
repnz
mov
int3
and
shr
push
daa
mov
inc
lock
jae
in
nop
mov
and
aas
mov
outs
arpl
mov
jmp
dec
add
aas
dec
jecxz
pop
aaa
out
mov
fsubr
cmps
jg
(bad)
fmul
test
mov
jno
inc
push
cmp
test
mov
dec
xchg
call
mov
movs
cld
fcmovne
popa
int
sbb
test
not
add
mov
xchg
neg
fdivr
cmps
xchg
adc
shl
fs
xchg
jmp
mov
call
ror
pop
and
rcr
stos
dec
push
call
shl
pop
mov
repz
js
adc
ins
mov
icebp
inc
shl
sub
sub
pop
loopne
add
xchg
outs
xor
shr
xchg
jmp
xchg
add
shl
add
mov
jnp
in
xchg
stos
mov
loop
pushf
(bad)
cli
repz
or
and
inc
adc
sub
cld
sub
std
jecxz
xchg
sahf
dec
les
jo
int3
inc
sbb
xchg
jl
pop
(bad)
(bad)
and
in
mov
xor
popf
ret
mov
mov
push
adc
xor
and
shl
mov
jl
test
xor
test
xor
loop
push
add
mov
push
mov
xchg
outs
test
out
or
retf
sbb
aam
fnstcw
push
outs
pop
xchg
mov
stc
sbb
or
add
cld
(bad)
push
jnp
jo
ret
push
push
fld
mov
(bad)
and
push
mov
inc
xor
cli
sub
pop
dec
xor
inc
jg
icebp
out
cmc
and
ret
push
jmp
or
out
sti
aam
push
push
sub
or
sar
repnz
push
les
jmp
push
out
add
jo
adc
aad
cmp
cld
test
sahf
cmps
shl
xor
add
jmp
push
ror
pop
dec
xchg
mov
sub
xchg
jns
cmps
xchg
imul
xchg
test
out
cmp
popa
xchg
jno
fistp
fdivr
inc
dec
jge
add
cmp
or
mov
jge
jbe
mov
pop
inc
cmp
add
sbb
xor
pop
mov
test
sub
inc
push
cmps
cdq
clc
add
dec
sti
sub
in
out
jns
pop
test
or
jnp
pop
retf
cmp
fcomi
call
mov
xchg
sub
loop
push
(bad)
loopne
nop
dec
adc
icebp
pop
cmp
xchg
out
or
push
mov
(bad)
int
inc
lods
int
stos
sbb
clc
popa
shr
adc
fstp
(bad)
and
repz
jmp
jne
cmps
jmp
ins
add
repnz
jg
inc
xchg
adc
xor
into
ins
mov
repz
bound
icebp
cmp
and
push
xor
add
ror
nop
xchg
sar
test
mov
(bad)
test
push
int3
jmp
in
aad
jmp
push
xor
nop
cmp
cmp
push
loope
(bad)
hlt
cmp
leave
xchg
inc
stc
add
outs
xchg
mov
push
adc
sub
jl
sahf
jge
mov
cmp
sub
sbb
pop
into
cs
mov
push
pop
mov
push
lods
xchg
push
aas
cdq
jle
out
jg
int3
loope
dec
nop
cdq
push
jg
adc
mov
jnp
mov
or
and
sbb
xchg
push
mov
cs
stc
and
jg
cwde
xor
fcom
mov
imul
out
loop
inc
imul
les
scas
ret
add
jmp
outs
pop
call
lahf
rol
lahf
arpl
ret
inc
dec
cs
push
sar
and
dec
cmp
jne
mov
fcomp
jmp
mov
iret
sub
pusha
mov
data16
(bad)
cs
gs
ret
and
out
sub
jle
mov
sub
mov
xor
repnz
inc
push
xlat
xchg
test
fst
pop
inc
lahf
imul
jno
cmp
js
aaa
or
aam
popa
movs
fprem
jmp
inc
lods
ficomp
in
ja
xchg
push
(bad)
pop
mov
adc
inc
cmps
xchg
aas
inc
es
inc
push
test
and
xchg
mov
fsubr
rcl
or
xchg
in
and
out
cli
neg
and
or
retf
cmp
fs
nop
and
movs
enter
cmp
xchg
lahf
jae
or
pop
out
mov
inc
inc
sub
sub
nop
sbb
mov
push
loopne
call
xor
sti
xor
ret
fnstcw
sub
lahf
repnz
js
lock
dec
push
and
push
add
jns
push
in
inc
mov
inc
test
es
mov
or
xor
shl
add
jo
jmp
call
je
sub
scas
cld
mov
pop
mov
xchg
(bad)
fisttp
cmp
and
adc
sar
fwait
test
dec
pop
mov
aaa
out
and
and
in
in
aaa
dec
mov
xor
repz
adc
cmp
lea
sbb
or
mov
loope
push
cmc
(bad)
xchg
std
mov
push
adc
loope
pop
mov
add
mov
out
fsub
push
mov
fcomi
enter
and
dec
int
add
dec
sbb
mul
or
icebp
or
stos
dec
je
jg
push
in
out
lock
fst
retf
mov
(bad)
mov
xchg
xchg
mov
adc
fdiv
out
inc
adc
xchg
push
cld
dec
cmps
jmp
mov
jl
adc
jae
sbb
out
outs
jnp
xor
sar
mov
test
mov
sub
(bad)
pop
rol
mov
xlat
mov
pop
mov
test
cmp
push
bound
sbb
je
push
sub
pop
push
scas
mov
dec
shl
xchg
(bad)
mov
push
dec
mov
(bad)
mov
dec
adc
std
inc
mov
out
ret
push
jns
sub
adc
jp
sub
adc
rcl
sar
fdiv
call
std
outs
adc
mov
arpl
ss
fs
jb
cmp
pop
xchg
dec
and
mov
cmps
inc
inc
and
lock
loop
mov
cwde
mov
fnstsw
shl
xchg
mov
cmp
xchg
or
cmc
outs
mov
or
cmp
add
cli
mov
ja
inc
push
xchg
out
dec
aam
inc
popf
(bad)
call
aaa
mov
add
push
cmp
hlt
mov
push
pop
mov
bound
xlat
gs
lock
sbb
mov
cld
jmp
sar
jg
inc
or
aas
add
and
in
add
add
dec
inc
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
push
or
push
dec
inc
or
add
or
add
add
add
add
or
add
add
pushf
das
cmp
add
add
inc
inc
add
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
push
ret
sub
add
or
dec
inc
inc
push
pop
inc
in
shl
aam
add
lock
cmps
adc
sub
in
in
cmp
cmp
inc
xchg
popf
nop
cdq
in
jge
sub
adc
mov
nop
int3
mov
iret
int3
out
jns
iret
mov
add
cmc
adc
sahf
sub
out
sbb
push
out
or
(bad)
mov
in
iret
jne
pop
pop
mov
ret
in
out
popf
or
jge
mov
out
test
fimul
retf
sub
es
mov
cmps
mov
loope
xor
cs
outs
lahf
jle
or
enter
pushf
leave
mov
out
or
fst
xlat
add
out
add
cmp
int3
lods
pop
xor
xchg
(bad)
or
fcomp
sbb
leave
add
imul
jecxz
pop
or
xor
jbe
xchg
mov
mov
mov
cmp
push
sbb
cmp
fild
sbb
dec
imul
mov
mov
les
mov
hlt
sbb
jns
jb
push
jmp
fbstp
fnstcw
adc
cmp
adc
jg
dec
lea
xor
std
ret
inc
push
pop
sub
xchg
call
add
mov
aaa
gs
es
in
sbb
and
aad
loopne
pop
repz
(bad)
mov
popa
mov
sub
out
jb
jmp
fsubr
dec
test
nop
inc
clc
sbb
out
pop
out
inc
adc
repnz
ja
ret
sbb
(bad)
dec
inc
enter
in
adc
aam
push
loopne
call
add
daa
pop
dec
dec
sbb
out
imul
fcom
test
into
fisub
sub
sbb
dec
leave
adc
in
push
pop
inc
ret
cmp
stos
pop
push
lock
pop
popf
cmp
dec
jb
shl
push
lods
push
jo
repz
int
adc
add
and
jns
cmp
mov
jge
fcomi
push
push
adc
scas
sbb
jb
scas
out
pop
adc
daa
repnz
hlt
je
pop
cmp
cli
clc
cld
aaa
or
push
test
fs
push
and
cmps
and
nop
into
rcr
and
cli
int
push
ins
aam
sahf
not
out
mov
pop
cli
adc
or
pop
test
and
lea
fsub
fs
imul
mov
cs
mov
mov
jnp
mov
test
in
cdq
push
mov
fwait
cdq
pop
fld
mov
pop
(bad)
popa
inc
aas
ds
(bad)
xlat
mov
scas
add
adc
icebp
ficomp
xor
out
add
mov
inc
mov
and
dec
adc
(bad)
dec
into
cld
xor
inc
rcl
fldcw
cmps
mov
int3
cmp
or
lds
xchg
in
push
pushf
adc
nop
cli
mov
call
and
mov
and
inc
ficomp
add
mov
xor
jge
cmps
dec
mov
jne
and
push
out
out
enter
mov
mov
pop
pop
js
mov
test
popf
pop
jo
sub
mov
ds
fcom
or
inc
pop
add
pop
mov
sub
js
stos
push
pop
sbb
retf
inc
imul
jg
add
sbb
int
(bad)
cmp
fst
pusha
aad
sub
push
add
rcr
les
dec
and
lods
add
les
mov
mov
mov
repz
pop
jge
cmps
mov
mov
or
jbe
rol
loop
in
dec
mov
mov
call
sbb
retf
daa
pop
xor
jg
adc
ror
popa
sub
and
ins
cld
mov
(bad)
jne
cmp
call
addr16
bnd
or
dec
fcmovbe
mov
dec
cli
inc
jg
int3
xor
mov
or
push
xchg
sbb
fwait
int3
adc
cmp
movs
cmp
mov
fwait
mov
test
cmp
mov
sbb
cdq
push
imul
mov
cmps
pop
fistp
repz
into
jp
and
loopne
jo
fidivr
jno
adc
repnz
inc
fisttp
sub
nop
dec
icebp
shl
mov
dec
stc
xchg
out
loope
jp
lods
mov
and
stos
stos
fdivr
mov
shl
jge
ins
adc
neg
les
(bad)
inc
addr16
and
mov
push
nop
adc
jns
retf
out
dec
pop
push
rcr
adc
mov
cmp
mov
jne
fst
(bad)
pop
xor
stos
imul
mov
sub
jg
lock
mov
aaa
popf
and
lods
cwde
pop
sbb
in
xchg
jns
ds
jns
fst
ins
enter
mov
ret
pop
jp
fcomp
shl
pop
add
stos
inc
int3
lds
mov
fs
inc
xchg
push
aaa
add
xor
mov
or
push
imul
mul
sbb
dec
jge
inc
push
pandn
stos
jl
jb
dec
mov
fstp
add
mov
or
test
data16
cmp
popw
add
and
out
adc
sub
lds
sub
cmps
cwde
in
ins
je
sbb
ss
or
gs
mov
or
aad
mov
shl
or
cdq
lea
das
call
jmp
pop
movs
(bad)
sub
push
mov
jae
lock
cmc
leave
fild
or
inc
(bad)
or
(bad)
ror
loope
lods
fucomp
ja
leave
jle
pop
mov
imul
dec
lods
movs
and
cmc
popf
aam
jb
pusha
dec
int
jp
out
leave
fisttp
add
push
fist
push
dec
push
loopne
sahf
and
mov
mov
(bad)
lods
pop
adc
jne
xor
sbb
lahf
xchg
imul
adc
adc
sub
test
mov
icebp
adc
lock
call
push
cmp
adc
jge
cmp
mov
ret
pusha
sbb
(bad)
jnp
arpl
and
mov
(bad)
cmp
add
je
mov
xor
cmp
hlt
jne
aas
push
test
pop
std
and
(bad)
xor
icebp
mov
xor
push
sub
mov
je
jb
pusha
jmp
out
(bad)
rcl
sub
pop
das
and
out
popa
cmp
sar
xchg
aas
xchg
aaa
sti
pop
mov
cdq
scas
add
cmp
inc
dec
sub
cmp
sar
lahf
sbb
pop
xor
and
xor
jbe
jle
std
lock
xlat
cmps
test
das
sbb
pop
and
cmp
pop
scas
fs
gs
xor
cmp
outs
jnp
mov
stc
(bad)
and
ja
rol
xor
jb
xor
jg
ror
sub
dec
nop
aas
pop
out
xchg
mov
inc
outs
ds
lods
in
and
fild
inc
shl
add
stc
inc
mov
adc
fimul
icebp
out
pop
(bad)
mul
clc
mov
iret
call
and
jnp
mul
mov
repz
mov
push
sbb
fnsetpm(287
bound
cmp
cmp
cli
mov
or
stc
pop
es
cmps
js
imul
leave
imul
mov
(bad)
fdiv
not
xchg
test
fadd
scas
push
hlt
mov
adc
mul
mov
mov
in
sbb
mov
mov
sbb
sahf
mov
or
add
push
in
mov
clc
sti
inc
push
bound
cli
aaa
retf
nop
scas
push
movs
sub
into
mov
lds
std
lahf
pop
xchg
mov
test
xchg
lds
xchg
mov
sar
jle
dec
sbb
pop
jb
dec
push
mov
jmp
push
mov
ins
cmps
call
adc
daa
and
sub
stos
loope
mov
enter
cwde
fstp
push
and
lock
fsubr
adc
pop
ficomp
inc
mov
in
mov
rcr
mov
sub
stos
shr
xchg
fild
xor
lahf
jecxz
test
ret
outs
shr
cld
test
(bad)
jno
adc
add
xchg
mov
cld
out
and
push
das
scas
std
mov
ja
iret
jb
sub
aam
jecxz
push
leave
mov
jl
stc
out
mov
sub
xor
loopne
clc
imul
cmp
jmp
sbb
mov
and
adc
test
xchg
mov
call
mov
inc
dec
add
mov
mov
movs
repz
(bad)
xor
call
cli
es
imul
xchg
pop
arpl
mov
repz
jmp
gs
ins
out
adc
mov
std
fs
push
ins
out
ins
retf
xor
push
xor
pop
mov
xlat
cmp
adc
aam
push
sbb
cmp
in
adc
test
mov
xchg
cmc
cld
mov
xor
arpl
pop
ror
mov
lds
neg
xchg
pop
mov
cmc
rcl
sti
fimul
jp
fnstcw
mov
jo
mov
enter
cmp
shl
xchg
sti
mov
cmovg
and
mov
mov
jge
mov
sbb
fs
addr16
xlat
mov
test
out
sbb
(bad)
fild
movs
retf
cmps
push
cs
xor
mov
add
push
pop
(bad)
leave
mov
mov
add
mov
rol
aas
dec
and
cmp
call
jnp
test
retf
test
xor
and
mov
aad
sti
sbb
addr16
mov
push
out
ret
pop
cs
jmp
les
das
and
xor
xor
retf
repnz
ins
adc
sub
and
(bad)
dec
dec
add
pop
retf
out
jns
neg
jne
retf
call
repz
pop
add
test
out
ds
mov
dec
cli
cmp
jmp
ret
lods
shl
push
sahf
mov
imul
pop
out
jae
test
or
inc
push
xor
(bad)
loop
in
push
sbb
rdmsr
jne
retf
lds
mov
out
and
xchg
ins
das
push
loope
in
mov
sub
outs
fldenv
add
sbb
or
inc
xor
mov
rcr
cmp
inc
mov
add
mov
xor
(bad)
xor
cdq
pop
xchg
or
(bad)
loop
iret
xchg
jnp
xchg
add
aad
es
add
clc
out
sar
dec
add
sub
add
add
dec
inc
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
dec
or
push
dec
inc
or
add
or
add
add
add
add
or
add
add
pushf
das
cmp
add
add
inc
inc
add
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
push
ret
sub
add
or
dec
inc
inc
push
pop
inc
in
shl
ror
aaa
fstp
mov
dec
dec
(bad)
test
fstp
sub
push
leave
or
ss
cmp
mov
cli
jg
ret
repz
jmp
pushf
(bad)
jno
add
stos
test
inc
loopne
push
push
inc
movs
xchg
scas
arpl
jge
mov
idiv
icebp
pop
mov
sti
mov
loope
ja
in
and
or
daa
sub
nop
jae
jmp
and
pop
out
and
iret
push
cmp
test
dec
and
out
cli
scas
mov
out
xchg
xchg
movs
and
bound
test
push
add
dec
dec
nop
pop
jne
aad
push
dec
add
bound
stc
pop
rcl
addr16
xchg
mov
sar
xchg
and
xor
jecxz
pusha
dec
rcl
repnz
std
ret
cmp
movs
sahf
jno
stc
leave
jp
xor
xor
mov
xchg
pushf
xchg
sub
stos
aaa
aas
jae
lods
imul
sub
mov
int
mov
xor
lock
add
rol
mov
xchg
cmp
loopne
jo
jge
jae
movs
and
adc
popa
xchg
mov
jecxz
stos
bound
pop
jg
(bad)
sub
(bad)
mov
add
xor
fmul
call
cmp
fwait
xchg
out
js
call
call
call
sti
cmp
retf
test
test
and
movs
stos
cwde
jne
idiv
pop
pusha
(bad)
shl
in
ds
jne
popf
cli
sbb
ficomp
dec
mov
cmp
mov
mov
(bad)
(bad)
cmp
out
xchg
mov
xchg
mov
jne
clc
jecxz
stos
scas
loopne
push
mov
cs
das
and
jbe
xor
in
mov
jae
pop
sbb
xchg
adc
adc
pop
mov
cmp
add
addr16
cmps
push
mov
and
dec
sbb
pusha
jne
push
(bad)
fmulp
cmps
les
fwait
jge
jg
(bad)
aam
xlat
jecxz
jg
jns
mov
cmp
arpl
mov
aas
xchg
jecxz
push
pop
pop
dec
push
mov
cmp
fnstcw
loopne
out
jp
(bad)
sub
fisttp
sahf
out
sub
rol
clc
fimul
loopne
mov
jnp
sahf
mov
lea
mov
test
add
mov
and
mov
icebp
cmps
dec
ja
xchg
cli
mov
xchg
mov
stos
aad
paddusb
leave
push
fcmovnbe
pop
and
mov
(bad)
out
ja
imul
into
movs
int
in
jecxz
aaa
push
clc
push
cli
add
inc
mov
mov
or
adc
push
xchg
jno
jmp
sbb
add
or
pop
movs
cmp
jmp
dec
xor
into
jnp
ficom
push
or
fisubr
jl
fwait
xchg
and
push
loope
fbld
cli
jne
sub
push
mov
jo
jge
mov
mov
xor
arpl
cdq
outs
cwde
xlat
ds
inc
sub
jmp
jo
(bad)
daa
movs
adc
mov
sti
enter
xchg
out
bt
out
xchg
mov
or
popf
lods
inc
adc
into
cdq
sub
mov
push
retf
jo
adc
xchg
loopne
mov
push
mov
popa
test
in
(bad)
int3
rcl
das
lock
imul
std
push
test
jns
stos
inc
xchg
shr
mov
ret
outs
fldenv
push
outs
(bad)
xor
(bad)
lock
lods
imul
adc
sbb
xchg
push
push
(bad)
fistp
push
dec
xchg
xor
ror
mov
jbe
sub
push
and
pusha
mov
test
shl
rol
fld
jnp
outs
jmp
cli
(bad)
inc
lods
enter
ins
lds
fmul
and
jecxz
stos
or
or
mov
ins
inc
xchg
sbb
jg
cmp
push
push
pop
xchg
pop
mov
sbb
push
out
fwait
aad
mov
sub
rcr
jle
mov
cmc
test
movs
push
push
push
cmps
je
mov
lahf
lock
jns
sub
fs
es
pop
cld
sahf
push
sbb
jecxz
ss
mov
mov
mov
imul
test
in
or
addr16
popf
outs
cmp
mov
fstp
sbb
and
lods
iret
adc
sbb
add
mov
mov
jne
sub
int
mul
push
and
aam
cmp
adc
pop
mov
jae
imul
inc
sbb
pop
test
cmp
enter
jecxz
out
mov
jns
fadd
dec
mov
jle
push
pop
das
sbb
jnp
fxch
ret
je
rol
int
call
push
and
shl
in
cmp
dec
iret
stos
in
xchg
jge
int
xor
xchg
pushf
inc
stc
or
cs
cmp
mov
push
dec
push
cwde
les
stos
fdivr
std
(bad)
mov
ss
(bad)
jmp
lods
ret
and
bound
mov
jp
xchg
xor
add
int
cmp
(bad)
jge
dec
stc
fbstp
dec
mov
div
pop
ins
mov
pusha
xchg
adc
stos
push
mov
fnstsw
sahf
or
inc
jmp
mul
jmp
retf
jno
(bad)
cdq
rcl
pop
retf
xor
mov
lods
jl
push
fmul
xchg
pop
aas
inc
jae
jae
adc
or
and
nop
fmul
iret
sub
into
arpl
test
mov
mov
pop
mov
bound
stos
mov
loope
imul
rol
loop
or
pop
(bad)
cmp
mov
xchg
dec
mov
data16
jne
xchg
add
(bad)
cmp
push
or
jne
(bad)
cld
push
rcr
std
lds
stc
ret
sub
icebp
(bad)
loop
dec
mov
mov
mov
(bad)
in
ror
pop
lock
mov
ret
xchg
mov
pop
imul
mov
and
add
xor
aaa
sub
push
cld
sti
pop
popa
bnd
cwde
out
imul
sub
pop
inc
ss
nop
adc
mov
popf
sub
sahf
or
mov
mov
jmp
(bad)
call
addr16
add
cdq
adc
add
lock
mov
lfs
sbb
jge
jl
(bad)
daa
ss
xor
popf
add
xchg
sub
inc
cmps
lock
lods
dec
fs
(bad)
jmp
xor
cmc
retf
movs
sar
sbb
mov
outs
sbb
xchg
sbb
jmp
(bad)
fwait
aam
and
(bad)
cs
cli
xchg
push
sahf
icebp
sti
xchg
dec
out
mov
test
jae
icebp
mov
int3
rol
xor
and
imul
sub
jnp
idiv
push
popf
outs
jae
retf
mov
sbb
ins
in
(bad)
sub
mov
dec
mov
mov
mov
inc
inc
cdq
pop
out
call
fsubr
lds
push
sbb
ficom
and
push
into
cmps
sub
cwde
push
cmp
in
mov
push
movs
cmp
or
fs
sbb
dec
enter
stos
enter
pop
xchg
mov
mov
xor
(bad)
popa
mov
ds
cwde
daa
jg
test
ror
jg
xchg
jb
inc
or
mov
pop
push
dec
frstor
xor
cwde
out
cli
popa
xchg
mov
adc
xchg
xor
mov
jb
push
pop
sub
mov
stos
mov
mov
mov
jns
popf
lea
stos
dec
aad
cwde
mov
and
xchg
cmp
ret
mov
repz
sbb
or
fild
pusha
(bad)
jns
mov
jno
stos
rcl
popf
mov
lds
xchg
cmp
stc
repz
lods
pop
outs
in
adc
in
loopne
inc
sbb
mov
jecxz
add
mov
cmp
mov
add
dec
xchg
(bad)
pop
mov
ja
xor
and
pop
out
cmps
popa
pop
jae
or
fistp
cdq
add
pop
retf
dec
push
xchg
lock
add
sub
xor
(bad)
bound
dec
fisub
adc
adc
fs
mov
mov
js
add
and
push
outs
rcr
stos
sub
pop
sbb
inc
inc
rcr
jecxz
test
clc
cmps
cmp
(bad)
je
fbld
mov
pop
(bad)
popf
jno
stc
mov
mov
jne
xchg
xchg
es
mov
into
jg
out
xchg
dec
(bad)
or
mov
xchg
fst
es
inc
xchg
jne
div
mov
xchg
(bad)
mov
out
das
push
push
pop
push
int3
in
push
out
int3
out
addr16
sbb
mov
mov
pop
pop
dec
ficomp
test
cmp
jp
mov
iret
std
mov
shr
and
test
pop
jl
xor
je
inc
push
in
ja
sbb
leave
dec
jnp
loopne
mov
jp
pop
leave
pop
lods
sbb
int3
imul
test
jae
inc
fisub
jo
jle
xlat
add
lods
add
xchg
int3
fdivr
and
pop
xor
js
out
test
idiv
pop
int
(bad)
sub
cli
pop
jne
and
imul
jae
lods
int3
and
popa
icebp
ins
jo
pop
mov
sar
push
adc
pop
(bad)
out
add
jmp
xchg
cmp
ja
das
mov
and
dec
cmps
push
pop
inc
mov
cmp
imul
ret
jnp
out
sbb
in
leave
icebp
rol
stc
je
or
sbb
cmp
mov
repz
es
push
jne
stos
fstp
lahf
jb
std
mov
loopne
and
pusha
sub
jnp
mov
jle
push
and
in
or
test
mov
(bad)
jo
dec
or
aaa
int3
iret
push
xchg
add
out
pop
cdq
xor
adc
je
pop
adc
cwde
jnp
inc
push
dec
popa
sti
ja
scas
jecxz
or
lahf
sar
stos
neg
jmp
cwde
lods
jmp
outs
ret
fcom
cmp
mov
rcl
mov
jle
mov
xor
sub
test
(bad)
aam
push
mov
cmp
jmp
jns
aam
cmc
or
(bad)
idiv
sub
mov
add
inc
jbe
ss
pop
clc
clc
push
mov
push
mov
xchg
sub
(bad)
out
inc
sub
inc
jb
jmp
fst
push
jle
retf
call
fstp
int3
jns
es
fdiv
dec
push
or
dec
stc
mov
sub
nop
gs
xor
in
adc
xor
or
or
sbb
mov
lahf
sub
fistp
push
test
mov
push
je
loopne
adc
pusha
ins
xor
and
test
sbb
add
push
call
mov
fcomp
push
(bad)
btc
inc
rol
pop
stos
jno
dec
jb
ffree
addr16
add
and
mov
clc
daa
lock
loopne
sar
loopne
ret
and
xor
dec
inc
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
dec
or
push
dec
inc
or
add
or
add
add
add
add
or
add
add
pushf
das
cmp
add
add
inc
inc
add
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
push
ret
sub
add
or
dec
inc
inc
push
pop
inc
in
shl
and
pop
(bad)
icebp
mov
jge
gs
int
cmp
mov
pushf
in
mov
fs
dec
into
retf
data16
adc
xchg
jno
jl
inc
not
pop
mov
add
inc
sbb
hlt
dec
out
and
pop
xor
aas
sbb
adc
push
xor
cmp
aas
add
addr16
sbb
imul
inc
loope
fiadd
jno
test
fstp
ins
cmp
cli
dec
test
mov
scas
push
inc
retf
lods
arpl
les
push
in
xor
push
data16
lods
scas
je
xchg
test
mov
and
jl
dec
and
xchg
loopne
jnp
mov
adc
jae
loop
stc
ins
xchg
xchg
mov
or
mov
add
clc
retf
or
mov
test
in
pop
push
out
and
fadd
and
xchg
mov
jecxz
pop
xor
fwait
mov
sub
cmps
or
test
(bad)
int
add
std
je
fisttp
(bad)
outs
ja
jne
mov
jnp
rcl
cwde
cmps
and
cli
xor
push
cdq
cmp
rcr
mov
out
cmps
or
sbb
in
out
daa
push
icebp
pop
in
mov
dec
mov
jo
adc
mov
push
push
out
out
xchg
into
enter
add
inc
lahf
jbe
cmps
xor
int
aad
mov
dec
cdq
inc
xor
push
(bad)
lods
test
fbstp
xchg
dec
retf
shr
pop
loopne
fiadd
les
pop
cmps
imul
adc
mov
push
sbb
das
gs
aas
call
sbb
and
scas
cmp
fld
push
cmc
stc
das
xchg
les
les
je
pop
jmp
ficom
dec
pop
mov
xchg
mov
test
imul
sub
les
std
push
cld
js
push
jnp
and
pop
test
lahf
gs
aas
repnz
add
js
mov
lods
repz
inc
add
pop
jnp
in
jmp
ins
sbb
pop
test
xchg
sti
fs
rol
daa
inc
add
xchg
in
fld
xchg
in
lock
sti
in
or
xor
sbb
sub
mov
xor
(bad)
das
ss
test
and
pop
cwde
adc
or
jns
dec
mov
inc
(bad)
sar
or
(bad)
pusha
push
push
ss
cmps
call
call
int3
jae
fdivp
cmp
ret
push
pop
icebp
dec
cmp
inc
clc
loope
hlt
cli
lahf
dec
mov
test
mov
add
add
sub
mov
pop
aaa
bound
icebp
mov
stos
pop
dec
mov
mov
pop
aaa
push
clc
dec
mov
pop
(bad)
mov
jmp
mov
inc
fist
inc
jecxz
enter
ret
ins
adc
or
rcl
inc
shl
nop
inc
sub
cmp
ss
push
xchg
test
repz
sub
jo
inc
push
pushf
mov
inc
jp
push
dec
push
push
inc
repz
scas
shl
pusha
xlat
mov
mov
cmps
jnp
jo
iret
push
iret
push
jae
cmps
in
cmp
pop
xor
dec
jge
sub
test
aaa
loopne
jmp
jns
fpatan
jnp
cdq
js
pop
(bad)
not
push
jp
or
into
push
and
(bad)
mov
scas
and
fisttp
test
inc
mov
lods
adc
ja
pop
jbe
mov
sbb
mov
xor
mov
xchg
and
inc
add
cmp
cmps
push
inc
and
(bad)
cmp
arpl
arpl
nop
jge
cmps
and
das
mov
loop
sub
test
test
int
loope
stc
cmp
rcr
gs
or
dec
repz
push
sub
jmp
outs
popf
jmp
sbb
shl
sbb
repnz
push
adc
xlat
(bad)
xchg
ror
mov
scas
pusha
pop
in
test
mov
pop
jae
ds
(bad)
fistp
mov
mov
jle
or
popf
adc
mov
xlat
mov
jne
and
shr
push
jae
in
icebp
sahf
cmp
sub
inc
movs
arpl
jle
fnstsw
add
repnz
in
lods
shl
(bad)
call
rcl
sub
dec
ret
adc
sahf
call
push
dec
pop
out
mov
icebp
add
ja
test
push
mov
lock
fcmove
cmp
cmps
int
fist
lds
shl
ret
jmp
ficomp
push
xchg
cs
imul
retf
idiv
(bad)
mov
in
adc
je
mov
cmps
lods
pop
dec
xchg
rcr
in
stos
inc
jge
shr
mov
adc
push
cli
mov
es
sti
xor
and
sbb
test
call
xchg
data16
or
xchg
jmp
leave
push
push
mov
inc
cwde
mov
nop
iret
cmc
adc
and
fnstsw
fbld
xor
push
lahf
test
mov
pop
xor
jecxz
shl
fcomp
repz
aam
inc
rcl
jno
inc
jb
inc
xor
jae
cwde
out
mov
jbe
jnp
push
bound
cmp
fbstp
imul
stc
int3
mov
and
cli
xchg
push
hlt
pop
or
or
fisttp
mov
lds
cmps
test
ficomp
cmp
mov
and
pop
fld
jle
inc
shl
jge
iret
stos
ins
and
mov
xlat
mov
lahf
(bad)
in
hlt
or
xor
sbb
shl
inc
mov
ins
lods
ja
xchg
pop
ins
pop
outs
ret
xchg
mov
dec
js
xor
fbld
xor
shl
fst
stc
movs
nop
jmp
mov
jle
push
xor
xchg
call
rcl
das
sub
rcl
test
add
js
aaa
add
inc
mov
test
call
or
jns
xchg
fmul
test
cmp
adc
ins
test
xchg
mul
lods
sub
aam
cmp
ja
and
retf
xchg
cmp
mov
cwde
or
sti
dec
ror
and
xor
stos
stos
fldenv
movs
out
fmul
imul
add
jle
sub
imul
movs
dec
out
out
les
inc
imul
push
dec
cmps
es
adc
mov
sbb
push
xchg
jne
cmps
test
inc
pop
sbb
js
sub
mov
push
cmps
pop
in
or
fs
and
sub
cmc
xor
popa
div
mov
dec
aad
and
mov
cmp
mov
cmp
(bad)
pop
sub
in
jbe
or
movsx
clc
repz
pop
sbb
jmp
xor
mov
or
or
ss
repnz
lea
rdtsc
enter
(bad)
hlt
xor
pop
retf
mov
pop
xor
repnz
fdiv
mov
out
inc
fwait
push
cmc
movaps
mov
mov
and
inc
push
gs
repz
fimul
loop
cld
dec
arpl
nop
leave
jl
xchg
jmp
shr
rcr
pop
sub
mov
(bad)
jmp
dec
int
lahf
loop
cmp
mov
addr16
imul
cdq
inc
jne
push
jae
jp
cwde
arpl
jns
repnz
movs
retf
fisttp
(bad)
sahf
adc
inc
mov
les
push
pop
mov
xlat
les
fs
xchg
sbb
add
push
mov
repnz
out
inc
push
out
cmp
retf
pop
cli
push
fwait
popa
lods
out
mov
pop
rcr
push
mov
jo
jnp
(bad)
cmp
sub
xchg
(bad)
loop
xor
outs
popf
add
xor
mov
inc
retf
in
lds
aas
movs
pusha
int
dec
stos
push
mov
(bad)
addr16
pop
pop
repz
push
jnp
fbld
jecxz
pop
pop
add
test
pop
test
and
pop
mov
pop
adc
fst
fist
repnz
mov
sbb
pop
cwde
inc
sub
inc
lods
pop
or
pop
int
sbb
inc
xor
add
mov
int3
dec
mov
lea
jl
inc
mov
movs
scas
imul
mov
int
xchg
bound
cmp
jge
cli
mov
jbe
icebp
das
jl
pop
cmp
loope
scas
mov
add
dec
scas
xlat
js
sbb
jge
push
or
add
clc
pop
data16
dec
cmps
arpl
push
xor
adc
sar
(bad)
loope
call
stos
pop
inc
jno
outs
mov
xor
dec
xor
pop
cmps
call
adc
xor
outs
pop
(bad)
mov
out
sbb
fs
scas
popf
pop
punpckhbw
fimul
jb
pop
mov
scas
test
adc
popf
xor
stos
pop
test
add
outs
xchg
test
cmp
mov
push
lahf
jmp
xchg
lods
jecxz
and
add
xor
mov
add
movs
cmp
test
es
(bad)
cli
jp
cmc
fmul
push
stos
jnp
cwde
pop
pop
push
in
add
fsubr
(bad)
aas
push
xchg
sbb
jns
mov
dec
add
loope
(bad)
fadd
jecxz
pop
push
pop
in
pop
es
(bad)
inc
inc
test
pop
xchg
inc
push
cmps
in
retf
jp
push
lods
mov
mov
cmp
push
call
mov
std
xor
cmp
sub
in
mov
pusha
or
jp
out
pop
mov
mov
hlt
ror
jbe
xchg
test
mov
aam
add
ret
bound
xor
adc
mov
movlps
in
les
sar
cs
xchg
retf
inc
pop
repnz
outs
dec
out
xchg
inc
pop
(bad)
sahf
pushw
pop
add
pop
addr16
inc
ins
xchg
xchg
push
mov
cs
mov
popf
jmp
aaa
pop
pusha
or
pop
ins
add
loop
imul
sbb
sub
test
mov
outs
shr
sbb
mov
pop
pop
ror
mov
or
out
in
push
xchg
or
pop
sti
bsr
push
int
aas
sti
dec
push
push
imul
sti
fisubr
jg
or
aaa
sbb
xchg
icebp
xchg
xor
lods
(bad)
div
and
pushf
cmp
gs
adc
sub
mov
mov
mov
sub
xor
adc
outs
stos
test
cmp
mov
mov
outs
mov
inc
fwait
xchg
test
jmp
ins
arpl
inc
add
out
leave
mov
fwait
jns
push
jge
fbstp
jo
fisttp
jbe
pop
mov
fdecstp
(bad)
sbb
imul
xor
mov
or
jecxz
repz
retf
cdq
int
sub
pop
imul
pop
mov
jg
in
(bad)
hlt
lods
xor
nop
adc
fld
mov
adc
daa
lock
loopne
sar
call
jg
and
(bad)
out
jbe
add
add
dec
inc
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
dec
or
push
dec
inc
or
add
or
add
add
add
add
or
add
add
pushf
das
cmp
add
add
inc
inc
add
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
push
ret
sub
add
or
dec
inc
inc
push
pop
inc
in
shl
aam
add
lock
mov
jns
fnstenv
leave
cmp
(bad)
push
leave
mov
or
cmp
adc
dec
inc
jbe
adc
jnp
icebp
mov
das
loope
add
jp
outs
cwde
mov
test
xor
adc
mov
xchg
jg
mov
out
out
call
and
out
test
nop
sti
xchg
(bad)
push
xor
scas
jmp
adc
or
sub
jp
scas
or
or
push
loop
sbb
inc
adc
dec
scas
dec
rcr
cmp
stos
lods
in
int
push
add
jge
leave
pop
call
lds
lock
mov
rcr
std
out
imul
test
jo
int
enter
mov
mov
in
inc
pop
pop
movs
dec
out
shr
mov
retf
cmp
sar
or
cwde
cmc
shl
jae
jb
push
pop
dec
icebp
cmp
jmp
or
jecxz
sub
ret
dec
sbb
test
xchg
jmp
push
scas
outs
add
inc
pop
cwde
sbb
mov
jp
inc
or
xchg
inc
pop
or
les
xor
pushf
cmc
pop
addr16
xor
add
leave
xchg
xchg
cli
cmps
cld
cmps
push
xchg
mov
pop
inc
ds
fisubr
fidivr
fistp
pushf
jg
push
sub
push
cs
mov
ins
mov
test
mov
enter
movs
xchg
push
push
stos
out
mov
xchg
outs
push
inc
clc
add
loopne
loop
add
in
xchg
push
movs
mov
sahf
or
loopne
pusha
mov
xchg
aas
std
stc
pushf
or
ja
sahf
push
aaa
xor
adc
shr
nop
scas
xchg
popa
pop
xor
jecxz
rcr
(bad)
push
call
mov
cs
inc
in
adc
sub
cmc
aad
cdq
pop
xchg
sub
mov
inc
movs
xor
mov
add
in
jl
mov
sti
mov
mov
mov
inc
or
pop
or
add
test
push
sbb
cmp
popf
(bad)
pop
sbb
pop
repnz
or
loope
or
popa
mov
int
xchg
push
inc
imul
cwde
xor
stos
sub
add
in
hlt
pop
outs
aaa
xchg
adc
jg
gs
xchg
sahf
sbb
imul
shr
(bad)
lds
mov
aaa
pop
fmul
sti
push
loopne
push
je
pushf
mov
rcr
popa
pusha
int
xor
inc
xor
and
pop
mov
and
sbb
aam
push
cwde
stos
mov
clc
loopne
jo
xchg
pop
div
push
and
enter
retf
jo
jg
cmp
push
and
pop
adc
inc
and
std
jbe
stc
jp
pop
or
push
call
ja
ja
pop
mov
lock
fsubr
mov
test
in
inc
inc
repz
or
push
aad
stos
dec
les
out
xlat
(bad)
aad
add
sbb
push
mov
jmp
mov
hlt
jl
cmc
leave
out
(bad)
mov
jge
sbb
in
das
pop
sub
mov
mov
dec
shl
sub
movs
loopne
sbb
nop
xchg
ins
inc
mov
stos
cdq
pop
push
xlat
ss
pop
add
mov
(bad)
xchg
aaa
ja
lgs
cwde
ins
push
(bad)
jge
sub
cmps
aad
mov
clc
jae
fidiv
lock
sbb
inc
push
popw
fmulp
mov
cwde
push
xor
ja
mov
mov
leave
into
sbb
repnz
dec
ss
push
fstp
mov
nop
sub
ret
stos
dec
or
xchg
mov
imul
jns
jnp
aaa
dec
sub
popa
call
daa
(bad)
xor
jbe
jp
mov
dec
push
cmp
jle
das
mov
xor
mov
mov
test
or
(bad)
out
jmp
les
push
mov
sub
fst
cdq
(bad)
outs
jecxz
or
mov
hlt
iret
rcr
fcmovbe
retf
fmul
lea
stos
pushf
lahf
and
pop
call
imul
sbb
out
je
repz
cmp
ins
test
fldenv
fsub
loop
and
push
test
xor
scas
jne
mov
(bad)
shl
mov
retf
cmp
call
inc
xor
in
stos
xor
loope
outs
movs
and
xchg
pushf
or
mov
test
aad
pop
stos
aas
cli
cld
sbb
test
(bad)
cmp
in
retf
test
leave
ss
adc
or
cmp
cs
movs
xchg
mov
jl
xor
jns
sub
cmp
cmp
mov
sbb
xchg
cli
arpl
push
adc
xor
leave
sub
ret
pusha
pop
imul
das
arpl
sbb
dec
fwait
cld
or
adc
mov
pushf
outs
jge
out
repz
mov
adc
jmp
sub
pop
add
aad
adc
or
ret
xchg
mov
cwde
test
push
(bad)
fild
fst
lods
and
inc
(bad)
outs
js
jl
mov
sub
jb
mov
stos
push
cmps
and
lods
pop
pop
cld
cmc
nop
arpl
mov
xchg
ror
xchg
mov
leave
jae
xchg
(bad)
ss
inc
outs
into
cmp
dec
cmp
sbb
fst
sti
jne
sub
xchg
dec
mov
hlt
pop
(bad)
in
shl
push
jno
xor
int3
sbb
sub
dec
jmp
mov
mov
and
cmp
cmp
add
jp
xor
aaa
cli
dec
repz
pop
cmp
mov
sar
xchg
outs
scas
leave
or
xchg
shr
or
lea
pop
outs
pop
mov
push
ja
cmps
mov
and
xchg
or
xor
mov
or
sti
push
in
sub
adc
adc
lods
xchg
outs
call
jo
sbb
mov
adc
push
mov
imul
fld
pop
fwait
mov
cmp
xchg
test
push
cli
outs
fiadd
xchg
out
sub
push
ret
lldt
mov
sbb
push
or
mov
std
xor
mov
mov
sbb
(bad)
stos
inc
inc
pop
adc
mov
(bad)
mov
inc
scas
cdq
sti
leave
and
idiv
mov
(bad)
aam
pop
xlat
fdivrp
cmc
sbb
sub
xor
movs
sti
shr
jp
dec
fwait
jo
mov
(bad)
arpl
jbe
jmp
mov
das
and
adc
daa
xor
inc
mov
stos
xor
sub
test
add
adc
push
adc
mov
daa
push
mov
jo
(bad)
xor
add
sbb
adc
bound
push
mov
jne
mov
daa
hlt
pop
add
jle
div
sub
xchg
lock
and
retf
gs
(bad)
add
pushf
sar
push
es
jge
js
sub
repz
jmp
out
xchg
xchg
and
cmp
ret
scas
xchg
mov
je
fwait
into
push
fcomp
(bad)
cmps
cmp
fbstp
fdivr
xor
sub
sti
push
xchg
push
retf
out
or
sub
int3
jmp
clc
mov
pop
pop
ficomp
sbb
lahf
cdq
jl
ret
pop
jmp
or
inc
bound
or
enter
pop
mov
push
outs
jl
ret
mov
xor
fnstsw
dec
(bad)
les
inc
sub
adc
retf
mov
(bad)
mov
mov
in
ds
test
mov
jb
inc
dec
(bad)
sbb
pop
adc
jo
cmps
loope
mov
mov
fdivr
mov
(bad)
sbb
add
popf
xchg
leave
shl
repnz
lods
stos
pop
sbb
push
fdivr
mov
xchg
in
lahf
mov
jae
xor
loop
or
out
(bad)
in
pop
mov
(bad)
pusha
iret
sti
mov
fsubr
sub
cmps
jns
cmps
jno
inc
and
stc
fild
lods
cmp
add
iret
or
sub
in
shl
or
movs
pop
nop
mov
push
cmps
add
sub
push
fnsave
xchg
xchg
xor
pop
push
pop
mov
dec
and
jo
pop
sub
dec
mov
xchg
int
rcl
push
inc
dec
sbb
rol
cld
mov
jno
stos
cmc
inc
xor
add
stc
jge
jne
or
jmp
loop
repnz
xchg
in
adc
jp
mov
jmp
ss
lock
repnz
inc
and
xlat
inc
jmp
(bad)
cmps
loope
pushf
clc
push
fs
inc
mov
fadd
mov
icebp
ins
sbb
and
outs
sub
jmp
scas
inc
push
mov
cmps
je
sbb
div
or
jno
xchg
and
jle
(bad)
xchg
mov
shr
mov
and
mov
(bad)
mov
or
mov
mov
mov
or
sti
xor
mov
adc
bound
push
sbb
mov
inc
sub
mov
retf
xchg
rcr
pop
lahf
dec
(bad)
push
push
outs
aam
fsubr
mov
dec
arpl
retf
bound
mov
call
xchg
test
mov
cmp
pop
(bad)
aad
xlat
ss
xor
adc
out
adc
jmp
pop
dec
pop
sahf
int3
imul
xchg
inc
mov
int3
push
retf
(bad)
int3
ret
mov
and
pop
popf
adc
pop
push
pop
fsub
inc
sub
xor
mov
fdivr
dec
pop
loop
iret
jl
mov
sub
adc
addr16
aas
xchg
cld
dec
xchg
fidivr
push
mov
lea
es
(bad)
clc
add
xchg
xchg
repz
popf
mov
pop
cmp
mov
inc
or
call
aas
gs
add
rcl
sub
xor
push
mov
mov
sbb
mov
jmp
sub
push
test
xor
fwait
jne
retf
mov
div
imul
fadd
stc
in
xchg
rcl
jnp
out
pop
cli
xor
or
aam
das
add
lahf
inc
mov
sbb
mov
xor
xchg
call
push
pop
dec
sahf
cmps
pop
push
jg
mov
aaa
imul
mov
aam
add
ss
(bad)
ins
mov
pop
fadd
out
pop
mov
xor
js
cmp
cmps
rcl
jecxz
add
mov
xor
and
adc
cmps
lea
imul
in
xchg
popa
addr16
cmc
popf
imul
cmp
sar
fstp
cld
sub
pop
xchg
push
push
das
sub
inc
jg
pop
push
fld
repnz
mov
or
(bad)
call
cld
sbb
aaa
lock
loopne
sar
lock
ret
xor
mov
daa
add
add
dec
inc
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
push
or
push
dec
inc
or
add
or
add
add
add
add
or
add
add
pushf
das
cmp
add
add
inc
inc
add
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
push
ret
sub
add
or
dec
inc
inc
push
pop
inc
in
shl
and
(bad)
jecxz
icebp
push
fldenv
push
inc
ret
and
aad
loope
ja
xor
and
push
enter
and
in
jge
lods
mov
sbb
outs
xchg
fs
cmp
mov
ss
out
push
std
mov
lahf
lock
add
mov
outs
jb
sbb
lods
sbb
mov
(bad)
fwait
xor
pop
jge
ret
push
call
jne
push
dec
cmp
addr16
xor
sar
xor
(bad)
mov
(bad)
(bad)
push
or
add
ds
loop
pop
enter
mov
outs
cmp
cmp
cli
cmp
dec
int
sti
cmc
mov
xchg
jnp
mov
inc
sub
or
call
jmp
fnstcw
lods
xor
xor
sub
xchg
add
aas
or
das
data16
scas
adc
pusha
sbb
xlat
sbb
mov
test
outs
inc
dec
mov
lea
aad
inc
xchg
jecxz
sub
les
add
xor
test
fcmove
mov
lods
mov
adc
dec
ret
ins
push
mov
pop
mov
or
outs
mov
mov
dec
arpl
and
imul
dec
mov
outs
(bad)
out
imul
push
cmp
ret
(bad)
idiv
fsubr
mov
xchg
lahf
popf
fs
add
jbe
aad
outs
not
loop
cmc
loop
jmp
neg
arpl
sub
lods
cmp
icebp
int
dec
mov
cmp
mov
push
lods
mov
mov
stos
push
sti
jae
js
dec
and
in
mov
lock
pusha
cdq
jp
adc
push
aad
icebp
popf
sub
mov
inc
adc
fcmovne
aas
mov
jl
ja
fmul
loop
dec
cmp
imul
inc
push
sbb
cmp
pop
cld
add
sub
pop
loop
int
jmp
arpl
test
push
jmp
sub
cld
into
jbe
scas
add
leave
popf
idiv
xchg
xchg
cwde
jo
sub
rol
enter
std
into
ins
pusha
jo
in
jge
hlt
pop
fisttp
cmps
add
sti
mov
jno
dec
pop
sub
repnz
pusha
push
retf
pop
in
cs
mov
pop
arpl
push
in
fiadd
mov
ret
out
jmp
ins
adc
ret
mov
popa
dec
je
movs
mov
pop
and
jae
and
mov
dec
lea
dec
inc
pop
lods
sbb
outs
mul
fdivr
sbb
ds
add
sub
icebp
adc
out
jle
sub
mov
fisttp
idiv
ins
int3
hlt
inc
adc
rcl
sahf
and
mov
mov
clc
push
sub
adc
leave
icebp
test
push
cli
xor
mov
pop
jne
scas
rol
fsubp
xor
fistp
sub
xor
pop
arpl
add
and
movs
and
and
stos
not
int3
pop
xchg
dec
mov
clc
pop
lock
push
inc
call
(bad)
xchg
sub
je
retf
movs
int
pop
sub
sar
xor
jp
(bad)
dec
js
test
cmp
ja
pop
push
test
mov
aad
mov
jne
jb
mov
xlat
and
outs
retf
and
repnz
clc
and
cmp
or
call
cmp
dec
ds
cmp
je
jle
dec
add
mov
and
push
cmp
cmc
push
in
cmp
cmp
hlt
ficom
cmp
inc
mov
rcl
mov
retf
retf
xor
ja
(bad)
outs
pop
pushf
dec
mov
int
fidiv
xor
aas
add
into
push
push
adc
scas
pop
pop
cld
nop
adc
dec
xor
ss
addr16
popa
dec
mov
mov
dec
loopne
lods
sbb
dec
xor
shld
mov
cmp
xchg
and
sub
adc
in
fadd
cmp
rcl
stos
out
ss
lea
lahf
mov
jle
push
add
lods
mov
xlat
nop
mov
cmp
dec
adc
and
mov
mov
js
pop
movs
push
(bad)
mov
es
jno
push
je
(bad)
mov
out
push
inc
outs
mov
add
add
mov
fidivr
imul
mov
mov
and
jmp
cmp
jp
sbb
mov
(bad)
push
cld
or
dec
cmp
or
pop
mov
inc
idiv
mov
sbb
pop
sbb
sbb
idiv
add
jmp
pusha
(bad)
lods
daa
(bad)
xchg
cmp
in
add
ror
int
mov
jmp
sbb
hlt
mov
ins
inc
ins
mov
mov
adc
(bad)
int3
mov
and
test
in
mov
out
mov
cli
mov
out
sahf
data16
and
push
aaa
in
mov
loopne
mov
test
je
les
dec
sbb
std
add
inc
xor
xchg
stos
cmp
daa
dec
ins
call
mov
fisubr
push
xchg
xchg
jp
aad
sbb
push
pop
jp
mov
jno
jp
push
repz
ins
sti
inc
push
test
mov
pop
repnz
mov
out
leave
jmp
mov
cmp
shl
or
adc
dec
in
push
xchg
jp
popa
shr
cs
(bad)
xor
xor
ds
ds
xchg
stos
ror
xchg
inc
dec
adc
dec
or
stos
mov
in
leave
push
dec
shl
dec
test
adc
stos
pop
mov
jno
sbb
jo
push
dec
stc
fst
add
adc
ja
fmul
add
or
adc
(bad)
xchg
pop
iret
dec
out
stos
xor
mov
lea
inc
cdq
mov
addr16
adc
inc
iret
sti
les
xor
ins
add
sub
mov
or
sub
pop
shl
inc
addr16
iret
and
pop
jbe
shl
imul
or
sub
aas
retf
xor
mov
fsubr
ins
outs
cdq
imul
fiadd
dec
stos
mov
into
mov
fnstenv
in
lods
or
mov
fidivr
cmp
xchg
pop
sub
sbb
mov
mov
xor
jmp
les
mov
or
scas
jno
dec
leave
xor
mov
and
out
out
lock
call
cmp
jge
clc
cwde
xchg
ins
dec
jmp
mov
bswap
imul
outs
jle
jbe
mov
adc
outs
in
dec
sbb
jmp
ds
stc
jne
shl
jmp
add
jmp
ret
mov
iret
shr
outs
psubusw
mov
std
jecxz
jnp
bound
mov
sub
xchg
jmp
shl
outs
dec
push
pop
mov
push
shl
ret
adc
jae
stc
mov
cmp
jb
dec
mov
retf
and
xchg
mov
sub
scas
and
push
jbe
xor
stc
sub
jg
mov
cmp
or
xor
stos
push
xchg
out
cs
dec
out
stc
je
sbb
mov
mov
sub
pop
fucomip
cmp
push
(bad)
or
dec
ins
shl
push
mov
lahf
aad
retf
jbe
popf
jo
push
xlat
dec
js
xchg
sar
mov
mov
loope
push
gs
cmp
sti
push
aas
inc
sbb
icebp
or
clc
hlt
call
mov
adc
jp
in
shr
push
mov
inc
outs
data16
cmp
cmp
icebp
lods
cmps
stos
fld
jmp
and
ins
mov
imul
adc
sti
addr16
and
xor
(bad)
mov
and
sub
jb
imul
aas
out
std
mov
mov
sbb
stos
jmp
lahf
dec
js
fst
xor
and
adc
pop
cmps
and
jge
mov
inc
sahf
sbb
inc
sbb
test
out
jb
push
fwait
adc
push
dec
jo
push
mov
pop
inc
int
hlt
sbb
jne
pop
lock
or
jp
mov
sahf
and
mov
adc
in
pop
pop
dec
lods
ss
lahf
in
pop
sti
jmp
dec
movs
ins
test
imul
and
mov
pushf
xor
xchg
lds
inc
add
xor
das
icebp
xor
push
ret
fs
sub
idiv
popf
sub
mov
movd
ds
mov
mov
inc
aad
mov
cmp
clc
pop
jl
inc
jmp
stos
cmovae
les
sub
rol
fdivr
sbb
add
adc
je
cmp
cmps
mov
and
mov
xor
fnsave
mov
scas
(bad)
retf
pop
adc
xlat
xchg
in
int
inc
sahf
fwait
and
outs
in
lods
ficom
adc
icebp
jae
(bad)
add
jns
(bad)
fstp
dec
loop
(bad)
neg
cs
popf
ja
stc
repnz
ret
(bad)
shl
xchg
sub
cld
mov
pushf
shl
pushf
fst
dec
or
cmps
mov
dec
sub
and
ja
loop
xchg
loope
mov
retf
ret
cwde
(bad)
addr16
loopne
pusha
jns
loope
cmp
mov
pop
(bad)
call
(bad)
int3
pop
xor
adc
xor
sbb
repz
add
push
lds
pop
sbb
add
or
rcr
arpl
(bad)
fidiv
call
dec
inc
and
popa
cmp
(bad)
das
ds
lock
es
or
icebp
test
movs
xchg
cwde
jbe
mov
nop
sar
push
hlt
fcmovb
xchg
loop
cmp
shr
je
mov
xor
shl
inc
pop
stos
xchg
adc
loop
cmp
int
sahf
test
pop
stos
in
pop
mov
mov
clc
out
repnz
call
das
push
mov
mov
mov
xor
data16
pop
rcr
(bad)
pop
lods
adc
shr
inc
xchg
sub
sbb
and
and
cmps
scas
stc
sahf
cdq
adc
fcom
sub
test
retf
sbb
pop
xor
stos
in
push
push
mov
add
dec
into
jnp
xchg
or
lods
dec
(bad)
or
inc
sbb
inc
inc
push
int
mov
int
or
push
cwde
xchg
inc
pop
xor
stc
cmp
mov
lods
cmps
sbb
mov
std
adc
jnp
jne
test
mov
jmp
push
sar
repnz
sub
or
popa
push
scas
sbb
xchg
fs
or
lock
push
dec
enter
movs
fsub
lods
cmp
in
fild
in
repnz
mov
jbe
push
mov
cmps
je
dec
xor
and
pop
inc
push
(bad)
(bad)
xor
and
mov
mov
in
mov
rol
movs
push
not
shl
test
adc
jns
push
pop
cmp
sub
add
lock
loopne
sar
jg
dec
inc
mov
cmp
or
test
add
add
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
dec
or
push
dec
inc
or
add
or
add
add
add
add
or
add
add
pushf
das
cmp
add
add
inc
inc
add
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
push
ret
sub
add
or
dec
inc
inc
push
pop
inc
in
shl
aam
add
lock
pop
cdq
fldenv
jnp
inc
inc
mov
ins
addr16
cs
hlt
retf
fldenv
and
fs
data16
popf
xor
popf
mov
jnp
nop
mov
(bad)
and
xor
sub
jb
mov
xchg
add
ficomp
jp
mov
and
xchg
xor
inc
(bad)
jmp
xor
xor
fcomi
fnsave
outs
inc
sbb
bound
push
test
inc
push
ror
mov
shr
mov
loope
les
ins
addr16
lds
mov
add
jns
fadd
in
add
xchg
jmp
adc
ret
mov
jg
sub
sahf
xor
outs
mov
outs
sar
jns
inc
les
cmps
retf
pop
loope
or
daa
cmp
lahf
ret
jle
jle
clc
cmp
fadd
lods
mov
xchg
dec
scas
mov
mov
hlt
dec
and
cwde
mov
popf
int3
adc
push
mov
popa
or
loopne
imul
je
and
mov
aam
test
mov
shl
inc
daa
sbb
and
xor
scas
xchg
addr16
mov
mov
fmul
sub
pop
inc
push
mov
js
inc
push
test
and
(bad)
cdq
and
jnp
jg
movs
jno
xchg
sahf
clc
add
sahf
push
arpl
clc
adc
and
cs
outs
shl
jne
jmp
xchg
jbe
xor
(bad)
iret
mov
fwait
push
movs
xor
inc
mov
jo
ret
add
fwait
es
ins
dec
push
push
call
pushf
ds
repnz
push
and
inc
cmp
add
je
aaa
enter
mov
pop
jecxz
xchg
daa
mov
and
pusha
cmp
out
sub
dec
xchg
rcr
jmp
and
ss
jp
pop
stc
imul
in
push
cmc
cs
push
movs
test
call
mov
fcom
je
sbb
in
sti
sbb
and
(bad)
xchg
sahf
sbb
pop
sahf
sub
mov
sbb
jp
bnd
push
rcr
push
stc
and
rcr
call
out
and
aaa
js
lahf
dec
repnz
mov
sbb
test
mov
mov
inc
aas
sub
mov
jecxz
mov
aas
cmps
sbb
jmp
aad
push
cmp
mov
(bad)
jne
sub
addr16
retf
xor
ret
add
mov
stc
pop
pop
outs
inc
inc
hlt
or
sbb
enter
inc
xor
fdivr
sub
cmps
push
dec
mov
jle
cdq
mov
in
int3
clc
sub
aam
cmps
mul
fimul
hlt
sbb
bound
and
dec
pop
sub
ds
cmps
xor
xchg
bnd
ins
loope
ins
sti
jbe
cmp
movs
gs
pop
push
aaa
cmps
call
inc
push
cmp
jo
lea
lds
add
pop
adc
dec
test
cmps
sbb
ins
push
sub
iret
or
ja
push
xchg
jge
push
sub
popa
push
imul
imul
add
or
sub
int
inc
pop
loope
jne
xchg
aaa
ja
pop
ror
arpl
mov
sub
push
cmp
and
and
sub
dec
call
pop
imul
inc
outs
pop
out
mov
sahf
adc
ds
mov
jp
push
dec
arpl
sti
sub
push
pop
push
fisub
xchg
aaa
dec
xor
inc
cdq
xchg
push
pop
icebp
iret
inc
add
addr16
std
loop
mov
cmp
idiv
mov
es
mov
inc
sub
push
aam
enter
ja
or
jns
inc
jle
idiv
sub
ins
outs
rcr
pop
cmc
mov
jae
dec
out
dec
xchg
not
and
icebp
cmp
or
mov
ins
sbb
push
clc
or
sti
mov
add
das
adc
inc
xor
imul
ja
cwde
and
adc
shl
and
xchg
jp
xlat
(bad)
jae
out
stos
cli
jl
cmp
or
lahf
sbb
out
sbb
jmp
pop
cld
push
shr
daa
in
in
mov
and
jne
jo
cs
les
loopne
sbb
aaa
in
sub
shr
or
ins
test
stos
or
push
(bad)
jl
inc
(bad)
jnp
pop
fisubr
sti
call
mov
ins
adc
leave
mov
mov
pop
les
add
add
repz
ret
fbld
sub
mov
sahf
push
dec
sbb
cmp
or
ja
xor
sub
loop
sahf
mov
cmp
and
(bad)
fimul
xor
cld
xchg
cmps
mov
and
jnp
and
cli
leave
fwait
jb
out
mov
(bad)
mov
xchg
and
xor
idiv
mov
adc
icebp
dec
and
cli
shr
cmc
repz
inc
push
mov
movs
or
inc
mov
ja
xchg
fist
iret
lods
pop
ins
cmp
idiv
jl
dec
in
int3
and
cwde
data16
mov
cwde
addr16
ja
or
push
mov
mov
mov
mov
mov
sti
(bad)
xor
les
and
push
jecxz
xchg
adc
add
(bad)
sbb
add
cld
in
jp
mov
adc
icebp
cmps
test
inc
test
xchg
cmc
mov
mov
popa
(bad)
test
pop
sub
pop
scas
cli
dec
xlat
mov
add
or
xor
xor
sti
rcr
cmp
pop
aas
ret
sbb
test
pop
mov
dec
lock
add
adc
push
cmp
or
or
pop
fs
aaa
dec
loop
inc
repnz
add
frstor
dec
mov
int3
out
xchg
add
sub
mov
addr16
ret
movs
xlat
mov
mov
fisub
in
jg
adc
addr16
aaa
dec
jecxz
or
loop
xor
and
or
add
retf
retf
mov
call
inc
mov
mov
sub
clc
ss
pop
sub
mov
stos
popa
push
pop
pop
mov
mov
push
(bad)
in
or
pop
imul
adc
jmp
fs
jp
(bad)
in
mov
scas
cmps
dec
mov
sub
sbb
pop
test
adc
out
push
cmp
loopne
in
les
cli
pop
jl
xchg
ins
(bad)
and
test
push
mov
out
mov
shl
mov
jle
jno
mov
xlat
or
mov
fadd
add
push
rol
hlt
mov
ds
retf
adc
fadd
jg
cmc
or
inc
push
jmp
mov
push
outs
(bad)
leave
mov
sar
adc
out
into
dec
xchg
shr
retf
loopne
sbb
(bad)
jae
pop
mov
add
add
dec
mov
pop
out
adc
(bad)
int3
adc
(bad)
scas
std
pop
push
setb
shl
sub
jge
mov
vphaddudq
repz
mov
ds
aam
rcr
div
addr16
fucomp
popa
sub
(bad)
sbb
sub
cmp
or
push
mov
cmp
cmp
jmp
retf
ja
data16
hlt
inc
leave
jnp
cmp
inc
cmp
ins
dec
outs
cli
adc
xor
fucom
dec
mov
mov
mov
dec
sbb
add
mov
movs
into
jmp
int3
xchg
mov
sbb
das
shr
rol
retf
popa
pop
xor
scas
nop
fistp
jb
cmp
sbb
popa
pop
jl
cmps
dec
dec
push
push
inc
sahf
mov
jae
loopne
mov
shr
aad
sbb
sbb
sub
inc
cmp
push
fsub
lods
fs
adc
dec
daa
mov
scas
jno
or
jecxz
inc
push
mov
addr16
jae
push
adc
pop
stos
scas
jnp
pop
and
popf
rcl
pusha
in
scas
push
mov
ja
sbb
stos
test
sbb
inc
jg
cmp
jge
loop
cmp
inc
cmps
dec
rcl
sbb
movs
xchg
mov
test
enter
ins
adc
cmps
mov
lock
mov
add
ds
scas
aad
ror
(bad)
push
mov
jmp
repz
(bad)
(bad)
xlat
shr
dec
jg
fld
jmp
fiadd
mov
test
xchg
mov
iret
dec
pop
test
movs
iret
add
enter
repnz
jnp
out
jmp
jae
mov
mov
dec
(bad)
sub
xchg
mov
fwait
mov
sbb
movs
pushf
mov
dec
ja
loopne
rol
add
mov
inc
mov
test
xchg
mov
enter
xor
adc
inc
(bad)
aad
nop
repnz
or
fcomp
shl
jbe
pop
clc
add
data16
lock
into
ds
xor
cmc
lahf
popa
jno
add
sub
sbb
lea
cwde
mov
cmp
cs
and
pop
stc
movs
pop
sub
lds
ins
push
lods
in
fidiv
std
cmps
outs
pop
std
xor
mov
in
sub
icebp
fcmovb
ins
aad
mov
movs
push
add
std
pop
shl
pop
nop
ret
call
mov
and
adc
call
loopne
sub
in
push
in
ins
and
aad
outs
loope
mov
fild
fisub
test
test
cld
sub
adc
and
xor
adc
call
mul
pop
jl
or
adc
aaa
mov
cld
(bad)
cmc
jo
mov
jne
and
mov
retf
xchg
push
test
in
repz
mov
fistp
sub
add
cs
inc
push
sub
shl
in
pop
xchg
fwait
xor
iret
xchg
les
jmp
fmul
stos
aam
das
cmc
loope
lock
inc
sbb
icebp
mov
and
(bad)
vcvtdq2ps
sub
adc
push
add
inc
jge
jbe
sbb
cmp
lea
fwait
call
dec
cmc
out
pusha
jo
mov
stos
out
mov
mov
adc
jo
movs
pop
or
aaa
or
mov
retf
cli
sub
pop
rep
sub
or
push
or
and
inc
outs
jg
fs
icebp
jb
int3
call
fcomip
aas
(bad)
and
pop
ret
xchg
bnd
xor
(bad)
enter
add
scas
add
mov
xchg
cmp
cmps
jl
stc
inc
or
add
ins
fcmovu
mov
xchg
stos
jmp
jmp
push
xchg
push
mov
data16
jl
ja
mov
stc
mov
cs
cli
inc
outs
pop
out
sub
inc
xchg
or
cmp
lahf
dec
add
popf
cmp
aaa
lock
loopne
sar
lock
pushf
stc
inc
and
dec
jg
add
add
dec
inc
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
dec
or
push
dec
inc
or
add
or
add
add
add
add
or
add
add
pushf
das
cmp
add
add
inc
inc
add
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
push
ret
sub
add
or
dec
inc
inc
push
pop
inc
in
shl
aam
add
lock
and
leave
es
push
test
fwait
jecxz
xlat
cdq
fldpi
or
leave
enter
inc
imul
outs
jb
jne
pop
addr16
mov
jnp
jb
jmp
adc
mov
add
mov
sub
lea
ret
sbb
sub
cmp
push
jne
mov
push
jge
pop
xchg
xor
cmp
cmp
sbb
jnp
mov
xor
and
jb
aas
pop
or
test
push
mov
out
call
xor
xchg
aas
mov
iret
ror
in
mov
adc
out
je
aaa
inc
or
mov
mov
cmp
mov
pop
pop
cmc
ficom
stc
gs
icebp
popa
pop
stc
inc
inc
add
mov
enter
rcl
(bad)
jmp
pop
mov
imul
cmp
daa
sbb
enter
cmps
cli
sbb
outs
push
outs
sahf
xchg
es
mov
jp
mov
je
sbb
rcl
inc
in
pop
jge
outs
sub
mov
dec
pop
imul
scas
pop
lods
push
pop
jo
sbb
ins
scas
popf
mov
sti
mov
das
fsubp
into
sub
pop
loope
hlt
xchg
pop
push
pop
aas
ud1
imul
mov
test
push
test
sahf
fnstsw
pop
lods
sub
int3
popf
xchg
and
xor
fldcw
jge
cmp
dec
in
mov
clc
fsubr
repnz
xchg
imul
ins
push
fsubr
std
mov
xor
cdq
mov
mov
cmps
repz
xor
and
lods
push
neg
dec
ins
das
pop
dec
jbe
mov
popf
jne
cdq
cdq
dec
int
jl
jnp
cdq
cmp
ja
dec
xor
and
(bad)
or
test
imul
sar
outs
dec
add
jns
sub
mov
pusha
out
jo
sbb
xchg
mov
sub
mov
adc
cs
push
arpl
ficomp
jbe
pop
lea
pop
jecxz
and
outs
and
iret
repnz
jl
cmps
popf
jno
int3
sub
in
fsub
mov
xchg
pop
stos
jg
icebp
dec
push
jne
mov
mov
push
jo
stc
out
inc
xor
inc
mov
pop
and
sub
cmp
cmps
in
or
mov
dec
jecxz
sbb
pop
jnp
pop
jbe
popa
cs
and
push
jle
rol
xor
or
jbe
add
test
stc
xlat
mov
nop
add
sub
(bad)
retf
fld
mov
dec
cmc
mov
push
cs
test
cmc
add
jg
dec
movs
pop
int
pop
ja
inc
and
es
add
frstor
dec
pushf
pop
into
test
mov
aam
inc
pop
imul
pop
test
mov
dec
mov
popa
clc
or
xchg
mov
(bad)
ins
pop
xor
leave
dec
ror
(bad)
jl
aas
dec
adc
ror
out
jg
jle
inc
inc
enter
ja
repnz
rol
nop
adc
retf
mov
cmp
push
das
fld
and
add
adc
xor
shl
inc
jb
js
loop
(bad)
shl
fst
(bad)
mov
jp
push
popa
clc
stc
into
and
pop
scas
cmp
and
jle
bound
sbb
test
js
mov
xor
push
stos
in
pop
(bad)
movs
mov
stos
mov
xor
mov
retf
lock
sbb
test
jo
pop
sbb
loop
enter
clc
push
dec
daa
inc
cmp
jne
lods
dec
lea
dec
mov
fadd
or
lock
stc
data16
sbb
out
test
cmp
sbb
iret
fisttp
sbb
pop
and
xchg
dec
push
sbb
mov
mov
xor
out
retf
mov
mov
mov
sub
sbb
xlat
sub
mov
shl
jns
and
sub
jl
pop
cmp
inc
cmps
aaa
pusha
jnp
test
pop
jle
sti
in
retf
jge
mov
sar
or
jbe
dec
in
sub
in
mov
jns
and
mov
ds
cs
xor
(bad)
jg
inc
pop
imul
pop
dec
sti
cs
push
shl
leave
fs
fstp
(bad)
jg
cmp
xor
out
ins
pop
pop
jmp
jmp
retf
test
std
stc
mov
int3
(bad)
mov
das
push
mov
aad
jne
idiv
pop
jmp
add
aam
imul
xchg
lds
fmul
ja
pop
mov
and
mov
clc
lea
add
jle
mov
push
adc
test
(bad)
lea
aam
jns
push
fwait
js
rcl
dec
add
(bad)
arpl
daa
test
data16
xor
adc
jmp
mov
lds
imul
in
mov
js
(bad)
and
and
mov
jo
int
shr
js
jns
retf
xchg
movs
cmp
outs
es
dec
inc
clc
sbb
fstp
inc
shr
jge
sbb
int3
push
add
mov
cmp
sub
fmul
jmp
sbb
rcl
or
and
repnz
ret
mov
pop
fcomp
jb
sti
xor
or
dec
bnd
loope
ins
push
adc
pop
cmc
pop
xor
retf
imul
aad
jno
mov
into
sete
aam
lods
icebp
movs
cmp
in
add
cmp
dec
shr
sbb
icebp
jns
bound
pop
mov
stc
jno
sub
dec
push
mov
add
lods
daa
movs
les
(bad)
xor
cwde
arpl
std
mov
imul
lods
cmps
psubw
push
xchg
or
int
fistp
aad
(bad)
daa
add
xchg
fdivr
out
jl
pushf
mov
or
fwait
xchg
mov
jb
push
dec
jnp
rcl
pop
int3
(bad)
jns
mov
(bad)
movs
out
xchg
pop
dec
pop
adc
push
cmps
and
arpl
pushf
popf
retf
ins
loope
repnz
cmps
mov
call
dec
(bad)
mov
out
push
test
and
shl
mov
sbb
js
dec
push
pushw
inc
nop
stos
mov
fimul
lock
jl
rol
jge
rcr
in
test
(bad)
jg
xchg
jnp
mov
mov
xchg
test
adc
jg
popf
mov
jae
sbb
inc
add
xor
(bad)
and
shl
inc
mov
mov
fdiv
mov
sub
sub
add
sub
int
inc
mov
out
or
jge
push
test
in
in
and
ror
lahf
push
xchg
xor
inc
add
add
fisub
push
retf
repnz
jne
outs
cmp
dec
sub
jg
sbb
sbb
mov
or
mov
push
jg
rcl
xchg
in
xor
fbstp
xchg
pop
popa
aad
mov
pop
pop
or
cmps
xchg
mov
cmp
out
fistp
cli
mov
in
mov
and
jns
or
cmp
xor
rcl
cld
sub
jp
mov
push
in
out
gs
repz
aas
mov
sbb
sbb
call
mov
xchg
jmp
lods
xor
jp
sbb
test
sbb
repz
cmp
test
lods
adc
cdq
push
aad
cld
cli
or
(bad)
xchg
add
outs
popf
adc
mov
test
jl
adc
pusha
sub
inc
push
data16
mov
js
(bad)
hlt
sbb
mov
cmp
loopne
jno
xchg
icebp
jnp
mov
test
inc
test
jno
and
mov
xchg
cdq
daa
or
into
mov
push
cmps
jg
mov
and
in
or
daa
repz
ins
pop
mov
(bad)
mov
dec
sub
sbb
shl
add
dec
shl
jns
cdq
in
sar
retf
push
inc
sar
je
mov
mov
push
push
lds
cmp
cmp
jno
lock
rcr
out
jmp
push
mov
dec
cmp
jb
inc
psllq
sbb
loop
scas
mov
push
mov
mov
adc
sbb
arpl
xor
jle
ins
or
(bad)
aam
cmps
jmp
jmp
in
jmp
mov
jl
xor
fild
aad
ins
mov
fldlg2
out
fst
xchg
adc
popf
pop
pop
xchg
pop
fwait
stos
ds
into
mov
int
and
loopne
fdiv
inc
ins
inc
test
out
into
xor
xor
ins
lock
xchg
cmp
xor
loopne
dec
inc
add
test
outs
jnp
cli
cwde
int
inc
sub
and
mov
jp
pop
xor
fstp
comiss
stos
jge
sub
push
mov
(bad)
push
loopne
cmps
dec
out
sub
add
outs
and
fistp
stc
into
xchg
mov
pushf
sub
xchg
call
retf
aad
fwait
sbb
adc
pop
sub
jnp
mov
jecxz
fsubr
adc
or
xor
fsubrp
mov
loope
or
jmp
imul
(bad)
push
into
fistp
js
ror
std
aam
lds
lds
leave
repnz
ffreep
fnstcw
cdq
sub
mov
mov
pop
lods
sub
push
aaa
cmp
sar
dec
out
repnz
jno
jae
or
mov
jo
shl
stos
fstp
and
and
aaa
adc
fldenv
sbb
pop
in
mov
clc
sub
xchg
inc
shl
adc
mov
and
jns
shr
or
push
add
test
movs
mov
dec
stos
retf
iret
neg
mov
xlat
jg
das
xor
mov
mov
das
fs
icebp
imul
outs
add
and
test
push
cmp
push
movs
rol
jp
js
xor
pop
fidiv
div
(bad)
stos
jmp
mov
repnz
into
les
ret
mov
rep
aad
adc
pop
lock
aaa
iret
ds
mov
push
push
bound
jp
mov
mov
(bad)
(bad)
mov
add
inc
pushf
jbe
push
sbb
dec
mov
js
sar
stos
xchg
sbb
cmc
ins
movs
or
test
push
add
dec
rol
hlt
dec
jmp
into
fmulp
clc
pop
mov
dec
add
sub
cmp
stc
pop
sbb
xchg
push
jg
and
jl
bound
in
or
jmp
xlat
and
jbe
pop
fiadd
mov
push
push
fistp
pop
xor
mov
add
add
sbb
push
xor
jl
dec
inc
lods
add
sub
repnz
mov
out
mov
into
shl
(bad)
int
sar
and
call
leave
sub
jg
push
mov
jge
mov
aaa
xchg
les
pop
add
inc
inc
cmp
cld
sbb
aaa
lock
loopne
sar
lock
in
dec
fisub
add
dec
inc
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
dec
or
push
dec
inc
or
add
or
add
add
add
add
or
add
add
pushf
das
cmp
add
add
inc
inc
add
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
push
ret
sub
add
or
dec
inc
inc
push
pop
inc
in
shl
aam
add
lock
adc
gs
xor
jb
(bad)
jno
pushf
inc
push
data16
cdq
sbb
lods
nop
xchg
dec
mov
adc
jb
cmp
mov
das
loope
add
inc
pop
rcr
cmp
iret
jl
jbe
sub
push
fwait
test
sbb
movs
les
clc
rol
dec
inc
jnp
call
in
hlt
shr
lods
int
mov
mov
xchg
les
inc
mov
push
mov
push
xlat
loopne
and
xchg
data16
sub
aas
cwde
ficom
test
(bad)
add
lods
mov
jo
test
(bad)
xor
add
pop
xor
cmp
daa
addr16
sbb
adc
pop
or
(bad)
fisubr
sub
cmp
stos
test
ror
jg
imul
jp
mov
push
lods
(bad)
jmp
sbb
pop
(bad)
mov
sbb
retf
mov
out
xchg
mov
jbe
jne
sub
pusha
mov
xor
inc
ja
hlt
or
fs
xor
or
mov
pop
cld
xchg
mov
adc
aaa
mov
loope
mov
cmp
test
pop
cmp
sbb
cmc
cmps
adc
les
retf
pop
mov
(bad)
push
sub
sub
push
les
cmp
cmp
sbb
jne
adc
fld
mov
arpl
fistp
push
jmp
jne
xchg
rcl
add
push
bound
mov
or
gs
sub
mov
mov
aaa
loopne
xor
push
cmps
lea
cmp
add
(bad)
iret
inc
xchg
mov
sti
lds
sbb
fmul
xchg
(bad)
mov
shl
ficomp
mov
aam
jbe
lods
out
ins
ins
lahf
xchg
pop
jle
jb
pop
mov
outs
ds
(bad)
in
into
aaa
jnp
scas
ins
push
fwait
dec
mov
call
arpl
pop
in
cdq
rcl
fnsave
xchg
popa
xor
addr16
loope
ret
mov
test
jecxz
xchg
xchg
enter
cwde
movs
cld
mov
xchg
or
es
into
cs
jmp
mov
shl
cmp
mov
(bad)
stos
xchg
test
in
aad
cs
out
fcomp
add
sub
dec
cs
xchg
jl
sbb
arpl
enter
mov
shr
in
clc
dec
movs
cmp
fldcw
mov
sbb
scas
mov
vmwrite
into
dec
xchg
movs
dec
cmp
xchg
out
es
idiv
fs
adc
pop
sub
pop
retf
enter
jno
xchg
xchg
xchg
or
push
std
in
bound
sbb
xor
pop
fstp
loop
lods
sub
sub
xor
dec
test
ret
push
cld
mov
jg
hlt
fdivr
pop
adc
inc
leave
xor
ins
xchg
in
and
retf
cmps
les
pop
addr16
xchg
push
pop
jmp
enter
fs
push
mov
xchg
test
scas
mov
push
out
imul
mov
je
jnp
mov
xchg
cmc
test
mov
pusha
outs
dec
es
shl
jae
dec
pop
icebp
pop
jb
mov
lock
pop
inc
xor
movs
xchg
xor
enter
(bad)
hlt
jp
dec
jae
std
in
add
inc
jae
cwde
shl
jb
scas
stos
fst
cmp
jl
int
call
mov
stc
int
icebp
ins
fidiv
jmp
in
pop
mov
psubusw
mov
inc
push
mov
loop
xor
dec
les
xor
cmp
jbe
adc
pop
fwait
retf
jle
stos
mov
jne
dec
mov
ror
mov
hlt
ret
jae
out
jecxz
std
push
fisttp
cmp
sbb
shr
cdq
lds
adc
aaa
xchg
movs
push
retf
shl
test
sub
mov
or
shr
jns
dec
cmp
test
lds
rol
cs
out
jmp
pop
mov
sti
pop
jecxz
or
sub
mov
sbb
mov
push
pusha
mov
outs
rcr
mov
aad
and
pop
imul
scas
xchg
cmp
and
mov
push
dec
sbb
push
and
push
movs
out
inc
add
push
cmp
add
in
fild
fcmovbe
cmps
jecxz
stos
mov
mov
aam
xchg
retf
jge
add
fnsave
add
xchg
(bad)
ret
sub
jge
inc
sbb
xor
loopne
jae
xor
in
sub
xor
ret
retf
mov
xchg
ds
sub
inc
or
ficomp
mov
dec
push
aam
mov
pop
cmps
inc
movs
icebp
(bad)
sbb
outs
mov
add
mov
out
lods
inc
push
inc
inc
fs
jbe
fsubr
retf
cs
fidivr
imul
and
in
mov
dec
call
enter
int
outs
jle
(bad)
(bad)
lahf
lods
les
cmps
adc
popa
sub
inc
cmp
xor
push
aaa
jl
popf
or
push
mov
pop
and
(bad)
or
sbb
js
push
sbb
inc
iret
push
lahf
ss
push
lds
(bad)
jo
scas
imul
in
add
cmp
or
pop
out
push
sbb
into
pop
push
sub
and
jbe
mov
out
sub
into
xchg
xchg
jmp
and
adc
dec
xchg
imul
jecxz
jno
test
cld
adc
sahf
push
push
imul
sbb
sbb
mov
stc
ss
xchg
or
in
mov
loopne
fisttp
mov
(bad)
(bad)
mov
mov
jecxz
sbb
push
mov
xor
(bad)
dec
shl
rcl
cmps
xor
aam
inc
dec
add
inc
or
gs
mov
mov
and
test
inc
test
(bad)
js
dec
mov
jnp
xor
sbb
dec
push
call
xchg
pop
push
push
mov
dec
stos
or
mov
adc
fs
js
bswap
adc
mov
lock
fldl2t
and
mov
push
fnstcw
ins
aam
(bad)
mov
test
je
idiv
add
cmp
jmp
sbb
call
inc
jmp
mov
fs
aad
pop
sub
js
aaa
ja
pop
daa
and
push
push
call
inc
dec
push
nop
adc
movs
ret
push
mov
push
test
nop
sahf
rol
push
sahf
rcr
or
scas
mov
test
test
fst
push
enter
mov
das
je
inc
mov
push
call
sbb
jp
or
mov
jmp
jo
cmps
mov
xchg
lea
mov
cmc
shl
ins
sahf
cmps
mov
stos
out
sbb
or
add
mov
xor
cmp
jbe
imul
cld
pop
scas
stos
inc
ins
cdq
xor
je
test
clc
push
lods
movs
shr
cmp
(bad)
and
leave
mov
(bad)
out
enter
movs
inc
xchg
in
and
pop
dec
mov
mov
icebp
push
cmp
test
(bad)
(bad)
sar
loopne
jmp
dec
cmp
add
aas
sahf
xlat
push
mov
shl
jg
and
aaa
pop
mov
enter
dec
in
arpl
(bad)
mov
and
dec
cmp
inc
jno
fsubr
icebp
adc
dec
icebp
sbb
clc
sbb
xchg
push
loopne
neg
out
inc
test
js
add
or
cs
lock
add
outs
mov
(bad)
cmps
imul
push
or
or
repnz
lahf
mov
cmp
sbb
mov
sub
fisub
leave
sahf
stc
dec
jge
or
xchg
push
rcl
rcr
jmp
jo
fsubr
addr16
enter
out
add
or
repz
sbb
pop
out
stos
fwait
loope
xchg
cmp
mov
in
push
or
cmp
fdivrp
mov
(bad)
nop
nop
sahf
or
mov
shr
std
pop
mov
mov
mov
dec
ds
pusha
ins
imul
imul
or
sahf
out
sub
mov
iret
jbe
mov
arpl
popf
pop
mov
dec
and
adc
loop
sub
jnp
test
sub
repnz
in
mov
cs
jae
xchg
fdivr
test
daa
inc
cmp
mov
mov
sub
in
rcr
and
dec
in
lock
or
sar
inc
imul
adc
xor
jo
jne
mov
adc
lahf
xchg
imul
adc
sbb
or
jns
mov
jecxz
ds
mov
dec
or
idiv
and
fcomp
pop
bound
movs
out
stc
pop
mov
ret
sbb
push
pop
shl
jne
mov
and
add
lods
clc
ja
cmps
(bad)
cmp
push
out
mov
inc
ins
pop
pop
mov
inc
jbe
jb
ins
dec
fsubr
adc
cs
jle
aam
add
inc
jae
sar
mov
push
je
inc
pop
test
mov
add
add
fwait
cmp
dec
das
das
sub
xor
mov
out
shl
mov
dec
and
jge
xor
jno
fcomp
fdiv
pop
addr16
fimul
adc
push
or
jno
pushf
cmp
mov
mov
adc
rcr
pop
cmc
add
out
fcomi
movs
out
int3
ror
push
pop
int
mov
popf
out
jmp
fs
pop
bound
popa
and
loopne
mov
pop
mov
push
out
mov
bound
mov
ficomp
in
pop
jns
or
mov
jge
nop
cdq
push
push
sbb
sub
jb
push
stc
outs
data16
jno
and
inc
mov
cmp
cs
jnp
std
add
outs
ret
add
mov
mov
push
jns
cld
scas
call
and
cmp
sbb
xor
loopne
pop
lock
imul
nop
test
push
or
and
cmps
cli
lods
adc
cdq
push
xchg
icebp
cld
out
cwde
push
add
mov
dec
mov
sbb
mov
ret
mov
pop
repnz
in
(bad)
push
sbb
pop
cld
ror
sub
retf
push
push
mov
dec
mov
and
push
xchg
(bad)
test
mov
(bad)
mov
and
pop
push
adc
mov
stos
data16
sub
ins
mov
bound
mov
mov
xor
add
(bad)
sub
ror
rcr
jle
bound
mov
in
mov
aam
mov
jne
push
mov
or
xchg
mov
mov
mov
int3
ret
jne
cmps
pop
add
aaa
daa
inc
xchg
fistp
test
add
rcl
fcmove
fwait
imul
popf
ins
pusha
(bad)
pop
clc
out
sar
dec
add
ret
pop
xlat
add
add
dec
inc
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
dec
or
push
dec
inc
or
add
or
add
add
add
add
or
add
add
pushf
das
cmp
add
add
inc
inc
add
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
push
ret
sub
add
or
dec
inc
inc
push
pop
inc
in
shl
and
lea
add
(bad)
shl
jmp
cmp
iret
dec
dec
sbb
jnp
cmps
jnp
data16
dec
jae
mov
jecxz
push
xchg
shr
cmps
mul
sti
inc
jl
(bad)
daa
cmp
inc
bound
mov
mov
nop
sbb
mov
pop
sahf
inc
movs
scas
jmp
add
cwde
adc
pop
inc
sub
jp
cld
aas
sub
xor
pop
outs
inc
stos
dec
dec
mov
neg
cmp
sbb
idiv
dec
movs
sub
dec
jge
fucom
add
enter
pop
ficomp
cld
sub
jg
xlat
in
mov
test
xchg
cmps
mov
jno
adc
pop
pop
retf
xchg
sub
test
movs
push
mov
jae
jmp
or
je
xchg
sub
dec
cmps
dec
call
outs
movs
inc
adc
adc
xchg
jnp
mov
fwait
jnp
jo
shr
dec
fild
imul
adc
gs
adc
jo
pop
push
movs
fst
and
adc
in
(bad)
xor
aaa
add
imul
cdq
jbe
ret
lods
pop
loopne
call
mov
dec
mov
stos
popf
cwde
neg
psubsb
retf
sbb
mov
imul
mov
les
jns
test
lock
hlt
inc
mov
sbb
push
fisttp
xchg
(bad)
popa
xchg
call
pop
mov
mov
dec
imul
div
inc
in
push
outs
fucomip
xchg
call
push
push
adc
popf
jp
xor
jp
add
and
mov
jecxz
fmul
push
pop
mov
push
mov
es
jp
adc
pop
jmp
xor
test
dec
add
mov
int3
mov
dec
pusha
push
push
bound
retf
sub
cmp
dec
push
loope
xor
jb
mov
mov
ins
sbb
mov
pop
mov
popf
gs
dec
mov
test
mov
mov
daa
popf
push
pop
sub
dec
adc
mov
outs
repz
aam
jne
daa
fcomp
aas
xor
adc
inc
and
mov
xor
xchg
(bad)
jg
jne
mov
jge
and
int3
cmp
(bad)
repnz
(bad)
sti
pop
sbb
pusha
fbld
mov
test
stos
sbb
gs
arpl
(bad)
push
sahf
aad
xchg
jge
ror
lods
xor
bound
lahf
push
scas
out
lds
pop
mov
mov
sub
int3
mov
enter
(bad)
push
cmp
xchg
lods
jnp
addr16
dec
shl
(bad)
gs
scas
out
push
in
scas
mov
ja
out
xor
mov
rol
push
jo
mov
rcr
test
leave
gs
jns
ins
mov
js
test
pusha
test
loope
loopne
add
add
leave
call
out
push
push
push
stos
stos
outs
add
jmp
sti
stos
sahf
pushf
push
arpl
scas
add
cwde
hlt
mov
mov
xchg
aam
jge
rcr
cmp
stos
int3
sahf
movs
jne
sub
xor
ins
ret
(bad)
(bad)
and
pop
pop
ficom
xor
data16
xor
jl
jno
or
retf
outs
out
mov
adc
ret
pop
cmps
adc
cmc
sbb
ss
jecxz
clc
loope
aad
fs
arpl
sub
xor
sar
mov
pop
popf
shr
(bad)
and
push
retf
cdq
push
ins
dec
fwait
cmp
in
push
xchg
shl
out
unpcklps
push
cmps
and
fisub
aam
movs
rcl
jg
gs
sub
into
dec
dec
imul
movs
loopne
xor
push
aaa
fwait
repnz
mov
xchg
push
jae
sub
stc
push
xchg
jnp
cmps
dec
mov
loope
push
or
lock
push
mov
xlat
xlat
mov
dec
shl
mov
adc
or
push
xlat
loope
jge
adc
xchg
out
rcr
fbld
pop
jecxz
mov
mov
ins
or
cld
enter
sti
nop
cmc
movs
into
outs
mov
mov
push
popf
inc
in
cmp
(bad)
cld
add
outs
cs
mov
jp
jmp
mov
pop
lahf
aam
in
push
ffreep
jo
rol
sub
mov
pop
sub
out
xor
push
sahf
adc
pushf
pop
add
fst
mov
jmp
je
icebp
mov
xchg
fidivr
xor
daa
into
pop
clc
sbb
movs
sbb
jl
cmp
lgs
ret
(bad)
xor
or
test
ret
nop
aam
push
pop
xchg
inc
or
hlt
mov
js
mov
jne
iret
xchg
test
sti
xor
aas
adc
sbb
push
xor
aaa
nop
test
jg
push
aaa
pusha
pop
(bad)
jg
inc
jb
out
cdq
jbe
push
call
add
imul
jae
xchg
in
push
inc
test
push
push
ret
push
mov
stos
ja
clc
inc
jb
mov
or
jp
fcom
xor
ret
mov
sti
inc
pop
push
fcomp
popf
mov
jne
rcr
inc
jae
cs
lods
gs
test
jns
mov
lods
sbb
jne
lds
sbb
jecxz
add
cwde
or
inc
pop
bound
aad
adc
arpl
jle
test
mov
mov
mul
ds
ins
xor
test
enter
int
test
mov
ret
(bad)
jmp
pushf
cmps
sar
cli
add
add
sar
les
inc
cs
imul
inc
(bad)
(bad)
imul
mov
xchg
push
fcom
cmp
push
push
dec
inc
inc
in
sub
(bad)
push
push
loop
and
ins
and
lods
jo
icebp
out
pop
stc
int
imul
inc
jmp
cld
mov
xlat
mov
mov
fisub
or
mov
lds
or
call
pusha
mov
inc
sub
jmp
adc
movs
popf
xchg
lods
ret
popf
mov
lahf
leave
add
ins
lods
cwde
and
loop
xor
call
call
sub
jge
mov
dec
mul
pop
add
jne
sbb
inc
jge
clc
add
scas
mov
aas
fsubp
stos
vmread
dec
or
cmps
jp
jge
test
sbb
cli
leave
aad
(bad)
jae
xchg
mov
sub
jge
aas
lods
repz
lahf
and
xor
mov
adc
push
and
mov
xor
gs
dec
ss
repz
std
sti
js
inc
dec
retf
es
neg
mov
cs
stc
dec
push
jge
jbe
mov
mov
mov
hlt
(bad)
mul
movs
sahf
xor
jae
inc
shr
cmp
fldenv
imul
push
lods
push
inc
lock
ss
adc
jbe
repz
in
aaa
and
ss
pop
pop
test
cdq
popa
es
aas
into
(bad)
std
loop
loope
cmp
pop
jecxz
dec
(bad)
dec
adc
add
xchg
jp
cmps
dec
dec
cdq
call
fsub
or
sub
inc
sahf
sahf
mov
or
into
xchg
lods
test
push
sbb
cs
movs
cli
cmp
pop
stos
inc
mov
cmp
adc
mov
shl
jmp
fbstp
or
(bad)
(bad)
push
scas
push
add
xchg
mov
mov
ficomp
out
loop
adc
push
adc
sbb
mov
retf
and
push
cmp
test
cmc
sub
out
(bad)
mov
fsubr
or
push
add
stos
enter
cmp
jns
repz
adc
xchg
daa
test
ror
out
into
pop
lods
mov
jnp
sbb
adc
mov
add
mov
daa
xor
pop
adc
in
ret
inc
dec
(bad)
push
cmp
adc
pop
mov
mov
pop
adc
outs
pop
call
clc
mov
daa
or
cmp
pop
(bad)
clc
scas
(bad)
mov
call
popa
div
sbb
adc
lock
pop
adc
inc
test
cdq
pop
fcom
add
movs
xor
mov
mov
push
inc
pop
cmp
ins
and
in
outs
leave
jne
shl
rcr
xchg
cmp
ins
addr16
adc
nop
icebp
retf
xor
popf
fstp
jb
jp
ror
int
add
jno
push
ins
push
imul
dec
or
jge
mov
inc
mov
pushf
push
jle
mov
(bad)
jne
ficom
out
jmp
and
jecxz
mov
arpl
addr16
or
cmc
pop
lea
stc
pop
xor
(bad)
cmp
push
loope
pop
push
inc
mul
jne
jl
and
jnp
mov
stc
movs
and
repz
fsubr
iret
inc
test
in
mov
imul
into
retf
push
cpuid
sbb
bound
fld
mov
jg
sbb
adc
fs
adc
dec
popa
scas
push
adc
loop
stos
sbb
test
fldenv
out
mov
js
push
int
jp
fisttp
ss
les
cwde
lods
push
mov
rol
pop
xor
leave
push
jle
inc
sub
jmp
cmp
ret
(bad)
fwait
cli
pop
fmul
dec
arpl
jmp
neg
enter
lods
dec
lock
std
shl
ja
jbe
sub
cmc
outs
sbb
xchg
repnz
imul
cld
cdq
neg
or
iret
xor
push
inc
imul
push
dec
iret
bound
adc
cmp
add
pop
pop
mov
xor
cwde
cwde
loopne
rcr
jnp
inc
cs
adc
jmp
aam
(bad)
in
push
sti
push
pop
shr
and
xchg
xor
xchg
cmp
xchg
fcmove
gs
sub
lods
sbb
mov
rcr
nop
jge
iret
fisub
imul
jg
push
mov
mov
dec
fist
rol
mov
nop
and
in
and
les
jg
dec
ret
mov
jns
cwde
popa
std
(bad)
jnp
push
mov
repz
lock
inc
stos
xor
out
inc
cdq
sub
pop
scas
push
pop
cmp
popa
not
shl
xor
push
inc
jno
add
cmp
xor
fs
out
mov
inc
xchg
jno
sub
push
stos
das
jg
je
add
push
(bad)
leave
xchg
push
mov
(bad)
cmp
in
lods
outs
mov
and
es
out
es
jp
les
fcom
mov
stos
das
imul
adc
push
jne
mov
scas
cmp
stos
jl
ins
xor
out
in
sub
scas
mov
shl
mov
les
jl
jo
pop
lods
and
mov
mov
inc
adc
adc
or
mov
jo
cmc
pop
fisub
(bad)
jp
cmps
pop
adc
clc
mov
imul
test
pop
daa
push
sti
pop
cmp
xchg
test
into
shl
neg
inc
stc
xlat
scas
rcr
es
sbb
adc
scas
aaa
movs
(bad)
xor
mov
adc
std
sbb
loopne
rcr
push
jg
inc
dec
jmp
add
add
dec
inc
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
push
or
push
dec
inc
or
add
or
add
add
add
add
or
add
add
pushf
das
cmp
add
add
inc
inc
add
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
push
ret
sub
add
or
dec
inc
inc
push
pop
inc
in
xlat
gs
xchg
or
xchg
xchg
xchg
pushf
mov
or
xor
push
mov
cmp
mov
shr
fmul
add
or
inc
sti
aad
daa
sbb
dec
add
xor
add
mov
daa
mov
xor
ficomp
test
cmp
cmp
(bad)
lds
dec
inc
adc
es
dec
clc
fwait
je
and
pop
sub
js
mov
sar
dec
add
and
call
imul
add
inc
dec
adc
call
push
inc
jbe
mov
push
dec
jl
mov
mov
push
sbb
mov
or
pop
jno
stos
es
dec
clc
inc
sahf
cs
repz
jno
pop
cld
jmp
movs
ins
call
xor
in
xchg
daa
call
and
call
call
mov
mov
mov
sbb
out
jo
rcr
sbb
mov
lahf
add
and
inc
(bad)
pop
fdiv
lahf
dec
fisub
sub
pop
push
sbb
loopne
lds
leave
mov
mov
sub
fucom
dec
loopne
dec
cli
mov
test
add
xlat
adc
js
imul
daa
cmp
and
retf
mov
inc
xchg
test
div
fisubr
sbb
add
pop
cmp
mov
and
ror
(bad)
leave
mov
aam
xchg
mov
fisubr
jp
jmp
shr
cwde
cs
outs
fst
in
cld
mov
outs
call
jl
(bad)
in
test
inc
test
mul
pop
lock
movs
push
dec
imul
jb
dec
retf
dec
sar
out
xchg
mov
inc
or
sbb
bound
add
xor
inc
lds
retf
pop
leave
cmc
adc
movs
push
fucom
inc
jg
repz
xchg
popa
mov
dec
icebp
cmc
loopne
add
or
(bad)
push
dec
or
pop
movs
dec
mov
into
pop
pop
and
mov
push
lock
adc
jp
sbb
jo
out
imul
cmp
cmc
jge
pusha
push
push
xor
call
inc
mov
(bad)
popa
cdq
adc
push
cdq
out
mov
mov
and
sub
scas
or
outs
sbb
jge
sbb
popa
sub
push
popa
cmp
jne
lods
and
call
xchg
mov
xchg
push
pop
jl
sbb
fst
adc
hlt
add
push
pop
adc
push
lds
and
enter
xor
out
push
or
sbb
repnz
xchg
mov
dec
xchg
addr16
dec
sbb
daa
cli
cmp
cs
ds
push
(bad)
mul
pop
out
shr
lods
fcomp
mov
out
dec
outs
push
(bad)
ss
in
jnp
das
dec
inc
les
cmp
jmp
pop
retf
inc
(bad)
arpl
jmp
push
cmp
push
gs
cs
push
(bad)
cli
dec
les
stos
repnz
xchg
sbb
hlt
pop
clc
push
push
xor
push
jo
data16
pop
mov
cmp
fsubrp
add
div
jne
fs
jecxz
idiv
popa
xchg
adc
and
mov
mov
mov
popf
cmp
das
inc
js
push
scas
imul
fs
cli
adc
sbb
cmp
into
pushf
or
mov
out
arpl
add
out
fcomp
scas
aam
xchg
push
mov
adc
inc
shr
inc
cmp
jecxz
pop
sahf
mov
fbld
mov
(bad)
mov
xor
or
mov
lahf
jns
in
retf
sbb
or
shl
pushf
pop
das
daa
lds
fld
je
mov
mov
mov
push
sbb
outs
adc
test
test
mov
sbb
or
xor
push
in
aas
fucom
mov
sbb
push
xor
lahf
push
mov
jp
mov
inc
mov
out
and
test
repnz
push
xchg
push
jns
imul
xor
pop
lods
pop
mov
jge
clc
jge
pop
xchg
or
sbb
or
stos
or
pop
add
add
test
jb
xchg
mov
push
mov
fld
int3
sub
cmp
stc
and
xchg
add
jmp
cmc
ficom
lds
repz
enter
xchg
dec
dec
enter
mov
(bad)
stos
ins
sahf
std
js
xchg
pop
icebp
je
hlt
arpl
mov
aaa
leave
xor
xchg
stc
es
mov
jl
lods
cmp
cmp
retf
aaa
(bad)
adc
xchg
mov
mov
inc
shr
jmp
lods
sbb
add
xor
loope
mov
mov
jp
dec
movs
popa
mov
outs
mov
xchg
inc
jecxz
outs
adc
jp
into
vzeroupper
add
pop
hlt
stos
ret
push
push
pop
inc
and
jns
fiadd
in
jne
and
das
repz
repnz
mov
lahf
aam
adc
dec
mov
pop
or
fldcw
aaa
jne
in
inc
pop
imul
cmp
pop
lahf
clc
cmp
cwde
cwde
xor
lock
cmp
jecxz
push
fs
in
jmp
pop
pop
lock
jbe
call
jle
mov
aas
pop
mov
xchg
cmps
repz
and
push
mov
xchg
or
dec
ins
retf
sbb
(bad)
push
mov
ret
add
xchg
mov
push
cmp
sbb
and
pushf
retf
lods
sub
ja
jb
imul
mov
mov
mov
jmp
pop
jl
adc
inc
xchg
clc
inc
xor
aaa
stos
mov
pop
mov
jae
add
imul
add
sub
shl
xor
push
and
(bad)
or
out
call
sub
fsub
ret
mov
mov
dec
scas
cmp
adc
cmc
jmp
ins
jecxz
pop
push
stos
mov
mov
dec
xor
inc
fisub
aam
mov
push
push
out
(bad)
stos
mov
cmp
jbe
test
cmps
and
jge
rcl
push
mov
mov
cmp
jp
sub
xor
int3
in
fistp
fstp
push
xchg
jns
call
xchg
xchg
and
xor
mov
pusha
int3
daa
dec
aas
xchg
(bad)
hlt
das
dec
imul
(bad)
sbb
aam
add
imul
js
imul
mov
mov
into
xchg
dec
cmp
mov
sub
(bad)
(bad)
js
xchg
sub
xor
jl
jb
pop
jb
push
lods
out
daa
lahf
add
jne
mov
or
(bad)
ins
dec
pop
push
or
push
lods
add
js
lods
pop
inc
cwde
mov
mov
add
enter
and
or
or
es
dec
sbb
push
cmp
movs
push
jmp
fdiv
mov
add
in
in
push
call
stos
cmp
push
inc
(bad)
push
je
idiv
or
fstp
jecxz
ja
cmc
clc
jo
and
mov
sahf
fdivr
loop
stos
out
jp
pop
mov
unpckhps
adc
xor
out
or
rol
inc
dec
test
repz
ret
xor
inc
lahf
sub
xor
ficom
retf
ins
jo
div
jge
retf
popf
or
lahf
aas
add
(bad)
loopne
mov
push
adc
inc
fistp
mov
aam
mov
pop
sbb
sbb
shl
sti
and
outs
push
push
(bad)
aad
xor
std
in
outs
(bad)
jge
mov
loopne
cmp
mov
fwait
jae
mov
xchg
mov
jo
aaa
pop
dec
ror
push
mov
cld
shl
imul
in
aad
or
pop
mov
add
hlt
test
push
adc
mov
cmp
adc
fwait
jg
fnsave
adc
add
pop
cmc
pop
fdivr
mov
sbb
push
push
daa
mov
add
push
push
push
push
sbb
sbb
aaa
pop
cmp
jecxz
fcmove
enter
call
in
or
jg
std
mov
mov
dec
adc
jecxz
jecxz
les
mov
xor
test
in
jo
clc
xchg
pop
mov
ds
retf
inc
fiadd
test
jmp
rcr
fist
repz
lock
mov
adc
jecxz
jg
lock
jle
adc
mov
lock
sar
neg
dec
icebp
test
sbb
mov
call
stos
jp
(bad)
pop
inc
fmul
lods
leave
xor
cmp
xor
mov
loope
or
cmp
jp
mov
addr16
ret
mov
shl
cmp
stos
repnz
repnz
(bad)
out
scas
xchg
sbb
in
stc
cli
inc
push
es
out
xor
fdiv
(bad)
adc
sbb
add
inc
adc
cdq
sbb
cmps
retf
jae
iret
inc
xor
push
dec
inc
(bad)
mov
sub
(bad)
jmp
xchg
xor
(bad)
into
xor
(bad)
imul
ins
rcl
les
cld
div
mov
push
test
pop
loopne
lock
xor
pop
add
pop
or
and
fsubr
xchg
addr16
push
jne
enter
repz
xor
daa
aam
sub
dec
icebp
ins
inc
adc
adc
dec
cmp
rcr
bound
rcl
test
(bad)
or
cmp
aaa
ins
ss
fcomp
pop
outs
popa
sbb
pop
les
xor
into
dec
add
or
sub
repz
jmp
mov
sub
jp
push
sbb
adc
div
movs
jmp
jmp
call
pop
cmp
(bad)
xchg
xchg
adc
xchg
adc
adc
(bad)
pushf
push
out
outs
mov
mov
dec
dec
push
outs
xchg
into
mov
push
es
loopne
movs
(bad)
jno
add
or
add
retf
inc
repnz
jg
inc
pop
inc
js
shl
ss
in
xchg
mov
pusha
or
jo
loope
int
repz
leave
mov
retf
stos
ret
push
jle
out
stos
pop
cdq
xor
or
fsubr
popf
imul
lods
pop
js
pop
rcl
push
in
mov
jg
iret
mov
jge
fucomp
lahf
inc
jne
pop
ins
imul
ins
mov
and
fdiv
pop
adc
outs
iret
mov
cmp
je
imul
xchg
push
popa
lock
ds
fstp
les
mov
cmc
xor
in
or
push
jne
xchg
imul
adc
in
xchg
adc
mov
hlt
lods
mov
push
nop
hlt
ins
mov
pop
ficom
sbb
in
mov
lds
data16
and
loop
mov
jo
stos
shl
test
mov
ficomp
arpl
lock
jns
(bad)
out
aaa
jle
mov
jmp
jle
lods
gs
inc
jmp
cmp
add
add
or
adc
daa
lock
loopne
sub
aas
cmp
sub
add
add
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
push
or
push
dec
inc
or
add
or
add
add
add
add
or
add
add
pushf
das
cmp
add
add
inc
inc
add
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
push
ret
sub
add
or
dec
inc
inc
push
pop
inc
in
shl
inc
xchg
lea
add
pop
inc
pop
dec
inc
or
xchg
je
xchg
add
pop
movs
sbb
enter
sbb
xor
imul
mov
adc
add
xor
xchg
pop
pop
inc
mov
sbb
mov
pop
enter
int
and
sub
push
cmp
pop
adc
or
inc
add
lahf
enter
in
jmp
cmps
pop
mov
in
sbb
movs
and
sub
les
pushf
out
lock
ret
mov
sub
or
cmp
ins
or
stc
pop
pop
xchg
aaa
xor
mov
test
jge
leave
add
jl
pop
imul
imul
lds
(bad)
adc
inc
mov
das
mov
mov
outs
popf
imul
jb
inc
sti
cmp
mov
lea
inc
xchg
dec
and
jo
pop
add
sar
xor
clc
aaa
cmp
(bad)
je
adc
add
jbe
dec
repnz
sub
(bad)
stos
gs
add
dec
ss
faddp
adc
ror
or
push
(bad)
repnz
(bad)
outs
mov
ins
in
xor
jmp
sahf
push
push
pop
mov
mov
pop
shl
xchg
out
test
mov
xchg
pushf
sbb
mov
adc
mov
jo
scas
mov
ret
mov
mov
xchg
sahf
xor
jmp
sahf
pop
repz
mov
std
jle
xor
sbb
(bad)
ins
push
ins
dec
xor
ret
arpl
mov
cmc
daa
daa
(bad)
(bad)
stc
dec
sahf
mov
cdq
outs
cmp
sahf
push
xor
pop
dec
dec
iret
xor
pushf
out
and
aas
in
call
fistp
sub
dec
repz
iret
and
test
sub
jo
cmp
aad
jg
jl
push
inc
lahf
jmp
push
add
sub
pop
arpl
mov
fnstsw
inc
sbb
shl
outs
int
cmp
jg
in
cmp
cmp
push
inc
popf
cmp
aam
mov
sbb
lods
pop
sbb
push
out
mov
and
clc
sub
pop
dec
jns
and
rcr
xchg
out
pop
cmps
jp
mov
arpl
inc
push
jle
and
test
rcr
in
pusha
adc
sub
pop
mov
mov
and
lock
in
pop
mov
sub
in
mov
and
lods
adc
loopne
pop
dec
push
or
jb
pop
xchg
adc
push
jnp
fild
gs
cdq
pop
push
inc
loop
mov
aas
cmps
xor
mov
hlt
mov
aaa
add
xchg
inc
mov
ins
aaa
sbb
jg
ret
pop
inc
sub
or
push
lahf
jnp
jae
push
adc
(bad)
mov
retf
adc
js
(bad)
jne
in
(bad)
mov
dec
mov
mov
push
or
or
lods
mov
retf
stos
dec
popf
js
mov
jecxz
rcl
pop
sub
add
or
mov
pop
fldcw
push
stos
fidiv
or
push
mov
repz
fcomi
pop
jns
adc
loopne
inc
push
mov
pop
dec
call
ds
idiv
jmp
mov
cmp
movs
dec
xor
mov
fcom
xchg
into
lds
adc
or
sub
inc
call
inc
add
push
sbb
sub
stc
ss
jno
in
jb
aad
dec
or
fild
dec
mov
std
mov
icebp
xor
jecxz
ret
pop
jns
call
mov
movs
es
mov
inc
push
add
into
daa
fsubp
jne
jmp
bound
pop
outs
push
shr
and
hlt
stos
push
std
loop
xchg
pop
imul
addr16
loop
scas
mov
ror
or
sub
jl
enter
(bad)
mov
mov
or
jnp
push
arpl
stc
cmp
inc
cmp
leave
retf
mov
jge
jmp
jmp
test
in
xchg
mov
and
jae
push
jge
mov
add
mov
mov
and
xlat
(bad)
shl
mov
ins
pop
mov
popf
xchg
inc
mov
sbb
sbb
jns
or
pop
and
movs
in
adc
jp
and
add
adc
add
lock
(bad)
dec
adc
clc
js
inc
in
and
sbb
push
ins
xchg
int
adc
sub
cmp
popa
js
inc
lods
mov
jmp
int3
or
adc
jge
add
outs
rcr
pop
and
daa
mov
cwde
sub
movs
dec
movs
scas
leave
cmps
sar
cmps
adc
mov
mov
pop
mov
jmp
sahf
(bad)
lods
jle
mov
jmp
add
call
mov
xchg
lahf
sahf
test
mov
sahf
or
and
add
(bad)
in
push
jmp
jbe
inc
fistp
add
adc
cmp
cmp
dec
jp
mov
mov
iret
(bad)
cmc
imul
popf
xchg
push
into
jp
push
cld
imul
out
sbb
sbb
outs
je
cmp
mov
xchg
lea
sub
or
adc
xor
in
push
(bad)
sbb
and
sub
imul
out
fidivr
pop
(bad)
out
stc
popf
xor
mov
mov
popa
push
jbe
pop
test
mov
add
ret
movs
scas
cwde
xchg
nop
ret
pop
icebp
add
cmp
icebp
cmc
fnsave
clc
cmc
mov
out
sbb
hlt
inc
mov
out
ret
hlt
fwait
pop
cmp
push
sti
jns
(bad)
cdq
vmwrite
ja
dec
aam
cmc
inc
sub
sbb
pop
je
cmps
lahf
xor
ret
retf
jecxz
mov
dec
jae
(bad)
repnz
mov
ins
pop
mov
xor
iret
dec
inc
cwde
and
push
cmc
ds
xchg
jnp
push
xchg
mov
fadd
inc
pop
push
mov
mov
jo
cmps
jbe
pusha
mov
scas
jg
sub
mov
fs
xor
mov
jl
sbb
scas
(bad)
cld
pop
pop
inc
mov
enter
lods
int3
cmps
int3
shl
rol
and
inc
adc
dec
dec
sbb
out
sbb
pop
js
fcom
cmp
call
fs
pop
aam
jne
push
lods
jbe
xchg
out
lods
add
sti
pop
addr16
mov
add
adc
aaa
and
xchg
mov
sbb
das
push
adc
xchg
mov
xor
aas
sbb
push
ret
test
mov
test
pop
ds
out
aaa
es
sbb
jbe
pop
push
or
sahf
jl
(bad)
pop
test
sar
call
iret
js
xor
enter
cdq
push
imul
lods
icebp
ror
pop
fcom
dec
mov
mov
mov
mov
jle
aaa
sub
fbld
stos
fmul
push
mov
ins
movs
push
cs
mov
and
outs
jno
cli
inc
dec
out
daa
shr
and
addr16
push
adc
xchg
arpl
pop
fisttp
dec
mov
and
(bad)
jnp
jmp
jmp
xchg
adc
adc
repz
dec
aaa
sbb
mov
mov
mov
xor
inc
pop
test
jl
out
sub
(bad)
push
inc
mov
div
mov
gs
hlt
sbb
dec
pop
ss
mul
imul
pop
sbb
xor
outs
mov
cmc
scas
les
fidiv
into
fdiv
or
scas
sub
cmps
(bad)
fs
lds
dec
push
mov
cdq
lahf
into
shr
mov
sub
add
test
int3
out
cmps
or
push
sbb
cli
cmp
mov
jno
into
sbb
popa
adc
mov
gs
outs
add
popf
stos
xchg
push
pop
arpl
lahf
movs
outs
push
(bad)
push
fwait
inc
dec
aad
fldcw
sub
out
shl
pop
pop
lods
pop
add
jmp
xchg
adc
scas
out
inc
cs
mov
rcr
sti
cli
and
adc
mov
nop
aas
xchg
xor
ja
stos
mov
mov
mov
hlt
cmc
push
mov
adc
and
jp
scas
sbb
pop
push
dec
out
pop
imul
mov
ror
xlat
(bad)
xchg
pusha
xchg
ds
or
mov
jg
cmp
in
fist
mov
cdq
or
mov
retf
stc
loopne
pop
rcl
aas
push
ficomp
jge
call
repz
mov
jge
shl
mov
in
pop
in
lahf
jae
sub
ror
mov
popf
sbb
mov
stc
mov
cmc
aam
cmp
xor
neg
inc
es
mov
or
(bad)
sti
repz
movs
pop
xchg
sbb
and
cmp
(bad)
in
pop
xlat
mov
sbb
and
lods
push
dec
bound
cdq
adc
rol
adc
aad
or
jmp
pop
inc
lock
jp
pusha
fist
mov
in
fnstenv
xchg
test
pop
lea
addr16
mov
and
mov
sub
pop
xchg
in
pop
pop
push
js
pop
xchg
dec
fadd
in
sub
xchg
fdivr
fst
adc
stos
pusha
(bad)
sti
aas
adc
fsubr
push
pop
clc
loopne
jae
in
jle
mov
cmp
call
push
ja
inc
sub
out
push
gs
pop
xchg
pushf
and
in
inc
jno
pop
push
inc
call
push
jl
in
in
xchg
retf
rcl
into
mov
jg
dec
pushf
dec
scas
add
jg
adc
push
pusha
add
cmps
ja
mov
stos
repz
mov
pop
jo
mov
sar
and
pop
in
sahf
push
push
xor
dec
frstor
cwde
push
pop
int
jne
cmps
xchg
aam
mov
pop
pusha
mov
or
je
sub
mov
outs
xor
daa
mov
add
movs
and
xor
cs
adc
es
and
push
rol
fdivr
mov
add
jns
mov
dec
mov
xchg
fs
mov
test
fld
adc
xchg
mov
cwde
fisubr
and
jg
mov
jbe
xchg
xchg
push
pusha
xchg
sti
int3
icebp
aad
pop
dec
outs
and
jg
sbb
fistp
and
mov
lods
fs
and
jl
inc
in
jmp
dec
ins
loopne
sahf
sbb
in
addr16
loop
cmp
in
mov
jmp
clc
pop
push
xchg
mov
out
pop
bound
mov
inc
fisub
mov
scas
mov
loop
pop
arpl
retf
jge
dec
mov
je
jmp
cmps
xchg
mov
mov
dec
xor
jg
in
lea
jno
jge
sahf
jmp
sbb
mov
in
mov
mov
jmp
and
cmc
rcr
test
aaa
xchg
dec
jl
rol
add
lock
mov
push
dec
pop
inc
inc
sub
movs
or
add
dec
inc
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
dec
or
push
dec
inc
or
add
or
add
add
add
add
or
add
add
pushf
das
cmp
add
add
inc
inc
add
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
push
ret
sub
add
or
dec
inc
inc
push
pop
inc
in
shl
aam
add
lock
vpsllq
sub
ret
mov
addr16
cmp
mov
(bad)
fldenv
je
push
jno
pop
data16
sahf
jg
mov
jmp
test
stos
inc
sti
fs
jns
jmp
outs
sbb
sub
aas
cs
fnstsw
xlat
xchg
cli
nop
cmp
clc
pop
dec
movs
inc
and
mov
jle
ins
push
push
loopne
ds
push
dec
fsubr
jae
sbb
sub
cmp
sar
xchg
mov
pop
js
aaa
imul
shr
push
mov
loopne
lods
mov
retf
fstp
stos
xchg
mov
jge
aas
jecxz
add
push
mov
ret
inc
adc
cmp
adc
push
jns
imul
ror
dec
leave
push
fs
dec
shr
mov
add
lock
cdq
outs
sbb
sub
imul
cs
fstp
sub
inc
test
popf
shl
sti
or
adc
jl
cmp
cmc
pushf
push
add
les
rcl
or
outs
test
sar
and
mov
pop
push
pop
mov
mov
in
sub
jp
mov
sbb
stos
push
adc
fistp
sahf
mov
cmp
sub
test
push
push
int
clc
xor
sub
add
aad
cmp
stc
or
out
hlt
test
retf
jmp
arpl
inc
dec
loop
jno
imul
xchg
popa
adc
in
imul
xchg
xor
jns
popa
ins
mov
unpcklps
movs
ret
mov
sbb
test
cmovl
push
mov
push
jbe
push
scas
outs
inc
jp
neg
mov
mov
push
(bad)
mov
pop
mov
dec
adc
shl
pusha
inc
rol
das
(bad)
sbb
lods
(bad)
xlat
lahf
push
push
aas
pop
fwait
xchg
outs
ret
cmp
shl
mov
cld
aaa
jo
push
push
pop
std
rcr
int3
imul
dec
jo
jmp
mov
mov
mov
or
or
jno
es
loope
lock
stos
mov
daa
cmps
ficomp
ficomp
mov
inc
sub
imul
or
out
fild
ficom
fst
xchg
xchg
sub
shr
cld
das
mov
adc
xchg
push
jge
pop
ins
mov
or
cmps
mov
pop
jb
jb
xor
dec
and
icebp
retf
mov
or
sub
mov
jmp
loope
scas
ins
mov
mov
in
push
push
outs
adc
inc
(bad)
imul
ds
pop
cmps
xor
mov
xor
ins
mov
sub
push
inc
and
xchg
(bad)
dec
sbb
hlt
xor
pop
aam
push
mov
sbb
push
push
xor
fnstcw
in
inc
stc
sbb
jle
cli
xor
or
fdiv
adc
jo
pusha
scas
xchg
leave
xor
dec
sub
xor
jle
push
push
push
aam
lds
or
aaa
std
and
fld
cmp
pop
nop
mov
mov
mov
add
pop
dec
sub
mov
push
inc
mov
xchg
sub
mov
and
sub
faddp
xchg
dec
cmc
mov
push
xlat
xor
dec
and
pusha
(bad)
or
mov
push
hlt
shr
cmp
dec
int
mov
jb
call
and
pop
leave
adc
rol
std
cmp
pop
inc
fwait
sbb
dec
dec
mov
cmp
mov
test
xchg
sbb
scas
xchg
call
rol
ins
icebp
jnp
arpl
in
xor
dec
inc
aas
scas
sbb
test
sbb
cmp
push
mov
std
pop
jl
call
mov
in
pop
out
out
std
fs
fs
pop
(bad)
adc
or
mov
dec
jae
lock
je
into
jb
push
dec
jae
data16
push
scas
xor
xchg
sahf
pop
(bad)
int
in
imul
test
fstp
retf
sub
xchg
fxch
jl
cmpxchg
daa
jmp
dec
fistp
int
mov
inc
pop
(bad)
push
sbb
jmp
(bad)
sbb
pop
cmp
test
push
push
cs
cmp
in
loopne
xchg
xchg
rcl
rcr
icebp
mov
data16
mov
mov
cmp
pop
inc
repz
mov
cmc
outs
and
pop
xor
pop
pop
cli
aam
or
push
dec
lds
jge
addr16
jno
xchg
adc
ds
fdivr
fistp
dec
fs
inc
mov
sbb
int3
jo
icebp
push
cmc
xchg
adc
xor
mov
sbb
mov
jbe
call
cli
adc
inc
push
ror
cmp
int
cmp
rcr
jp
xchg
pop
mov
fnstenv
cli
and
fstp
sub
adc
add
call
pop
aad
sub
cmp
jb
lock
cwde
jnp
xor
pop
xchg
gs
mov
sbb
stc
jmp
mov
mov
push
push
cmps
sub
fwait
retf
mov
adc
xbegin
stos
mov
push
jne
aad
push
faddp
cmp
mov
lea
push
push
test
xor
inc
aaa
pop
mov
popa
aaa
xabort
int3
fldenv
mov
xchg
add
loope
(bad)
shl
or
jl
mov
into
jo
push
mov
adc
sub
jns
mov
push
repz
push
enter
adc
ds
shl
dec
pop
mov
adc
push
push
pop
or
out
pop
(bad)
stc
fdivr
jle
pusha
fs
fadd
rol
clc
and
in
ja
in
enter
and
into
cmps
call
movs
mov
pop
js
pop
in
leave
sbb
add
cmp
pop
xchg
rol
fadd
jne
mov
jge
cld
adc
(bad)
icebp
xor
js
out
jns
rol
or
cmp
push
push
mov
mov
cdq
and
daa
and
(bad)
dec
aad
mov
retf
dec
rcl
es
in
pop
xchg
sbb
sbb
jo
repz
push
xor
mov
data16
cmp
xchg
and
xchg
ror
and
ja
pop
ja
dec
mov
ss
sbb
(bad)
xor
inc
mov
xor
je
sub
adc
jmp
pop
xor
and
push
mov
in
push
add
jo
jge
or
(bad)
daa
jge
out
ret
push
out
fdivr
cld
ror
inc
pop
stos
cwde
lds
inc
repnz
out
cmp
pop
sahf
sar
xchg
mov
icebp
mov
and
push
jb
sbb
arpl
test
sbb
inc
scas
lahf
out
xchg
xor
sub
adc
adc
adc
fstp
pop
xchg
frstor
scas
das
or
xchg
pop
xor
pop
sub
cmp
fdiv
jmp
les
iret
cmp
cmp
sbb
cmps
fadd
add
cwde
mov
mov
test
lods
jnp
mov
dec
fldenv
inc
xchg
cmp
lock
(bad)
dec
and
hlt
sahf
and
jge
pop
xchg
or
fild
fs
test
pop
mov
mov
xchg
pop
pop
push
pop
das
cs
ds
mov
jl
pop
jle
and
push
xchg
aam
cwde
ins
xchg
sbb
jecxz
in
jae
fs
xor
dec
test
mov
mov
cmc
inc
mov
adc
inc
cdq
xchg
push
js
test
ss
jb
dec
pop
xor
jcxz
cmp
test
cmp
dec
mov
jmp
dec
loop
movs
fbstp
(bad)
mov
popa
sbb
push
nop
mov
mov
arpl
enter
push
xchg
loop
js
aad
add
pop
stos
daa
or
push
(bad)
and
xor
stos
imul
pop
mov
mov
fld
inc
repz
shr
xor
xchg
adc
mov
and
shl
pop
pop
adc
mov
push
clc
push
jle
cmps
imul
xchg
fs
jmp
adc
outs
sbb
jne
pusha
xor
lods
push
mov
lea
fisttp
scas
xchg
push
aad
mov
push
scas
lds
and
mov
pop
add
xor
out
scas
jne
pop
out
ret
data16
inc
or
push
mov
ret
sub
stos
xor
xchg
mov
pop
stos
mov
xchg
cwde
das
call
fnstsw
div
fnstcw
(bad)
ss
push
mov
add
and
int
pop
add
and
retf
push
mov
nop
shl
cmp
call
fisttp
add
lahf
daa
jmp
(bad)
push
inc
or
mov
mov
div
in
add
test
sub
test
loope
inc
mov
xor
icebp
outs
imul
fdiv
ror
data16
mov
sar
imul
xor
pushf
movs
cs
pushf
test
cdq
inc
jg
mov
stos
add
int
aam
fwait
dec
sbb
nop
mov
push
cmc
sub
bound
mov
fisttp
cmp
push
xchg
cmp
jae
jecxz
test
ins
cmp
jg
pop
out
fs
in
out
pop
fwait
jmp
inc
xor
pushf
and
cmp
stos
sbb
xchg
(bad)
aaa
aam
pop
hlt
or
cwde
popa
jb
mov
popa
cdq
mov
or
xchg
pop
push
dec
xchg
lods
xor
enter
mov
retf
bound
in
mov
sub
cwde
pop
mov
fwait
rcl
mov
ret
aaa
jl
and
pop
and
mov
mov
lds
adc
pop
add
jp
stos
fidivr
stos
jb
outs
das
(bad)
sti
(bad)
xor
pop
nop
xchg
push
lods
push
dec
sbb
mov
pop
and
pop
ja
ret
in
clc
sbb
fild
jl
jle
cmps
and
daa
daa
stos
push
xchg
mov
mov
mov
mov
jmp
mov
dec
mov
(bad)
cli
xchg
pushf
jnp
xor
push
loope
into
into
cli
fs
push
sti
mov
test
pusha
sbb
sbb
imul
lea
fld
in
jg
adc
fmul
or
cmc
(bad)
adc
dec
jle
mov
dec
rcr
push
adc
in
and
or
inc
mov
mov
mov
mov
jnp
sbb
test
cdq
mov
arpl
aaa
jl
test
pop
in
(bad)
out
mov
mov
cmp
xchg
lds
in
add
jg
shr
std
cmp
sti
push
(bad)
mov
inc
mov
mov
aas
xor
cld
fcomp
mov
cmp
lea
stos
aaa
(bad)
adc
xor
adc
into
das
loopne
jg
inc
dec
lock
cld
ud2
jne
data16
aam
add
add
dec
inc
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
dec
or
push
dec
inc
or
add
or
add
add
add
add
or
add
add
pushf
das
cmp
add
add
inc
inc
add
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
push
ret
sub
add
or
dec
inc
inc
push
pop
inc
in
shl
aam
add
lock
cs
ret
sub
xchg
sub
gs
cmp
stos
and
in
mov
enter
xchg
cmp
ret
repz
sldt
pop
or
icebp
jge
mov
pop
cmp
mov
test
test
loope
xchg
inc
scas
cli
xor
mov
(bad)
push
stos
test
or
pop
cs
mov
cmps
stos
int3
inc
fistp
int
in
push
test
retf
xor
int3
js
loop
mov
je
hlt
fmul
adc
add
lock
and
gs
xchg
jmp
leave
dec
scas
xor
push
(bad)
ds
call
dec
add
dec
lea
fsub
ins
(bad)
addr16
jge
mov
repz
in
mov
imul
or
mov
xor
xor
stos
ds
mov
out
das
mov
pop
into
mov
mov
adc
popa
cmps
imul
mov
xchg
aas
gs
cmp
test
xlat
xor
jl
mov
sub
push
sub
ss
pusha
mov
jb
(bad)
shr
inc
retf
sub
pop
ins
inc
sbb
pop
dec
stos
test
(bad)
jb
clc
jle
inc
inc
addr16
dec
test
icebp
and
retf
retf
pop
(bad)
std
sub
mov
jmp
les
cmps
lock
int
pop
mov
xlat
mov
shr
lahf
ficomp
ds
jo
aaa
gs
sbb
adc
xchg
daa
ror
mov
lea
mov
inc
xchg
sub
push
cmp
shr
jno
ins
mov
xchg
cld
arpl
xor
dec
jns
mov
xchg
das
dec
imul
add
repz
ss
pop
stc
mov
push
ss
lods
dec
in
pop
inc
retf
xchg
pop
out
xor
rcl
push
pop
out
jge
rep
and
jnp
shl
mov
pop
stc
pop
adc
inc
jb
cmp
in
or
and
ret
xchg
scas
lds
into
add
push
js
cs
cld
gs
sbb
inc
mov
jmp
and
fsubr
xchg
inc
rol
fcomi
out
xchg
pop
and
retf
jge
jbe
clc
jb
fwait
pop
or
adc
push
fild
in
xor
sub
out
mov
sbb
mov
dec
movs
inc
xchg
sbb
test
scas
ins
sbb
scas
or
sub
clc
mov
jecxz
mov
xor
sbb
xor
cmp
xor
adc
jo
push
lods
and
outs
xor
loopne
in
out
push
ficom
aad
xor
mov
stos
mov
cmp
inc
jecxz
pop
jbe
lods
sti
jge
mov
jg
mov
push
arpl
jb
jns
mov
mov
sub
retf
fsubr
sbb
fdiv
test
stos
jbe
add
not
mov
sub
cdq
xor
pop
mov
inc
mov
jne
jmp
inc
or
jmp
pop
xor
pop
xchg
ret
fbld
inc
cwde
sub
fbld
push
push
push
(bad)
pop
pop
rcr
stc
call
in
test
gs
jns
pushf
pop
mov
or
in
addr16
out
xor
and
fnstcw
push
retf
mov
xlat
jecxz
push
es
in
loopne
call
jecxz
inc
xchg
js
mov
mov
iret
pop
xor
push
jg
(bad)
imul
mov
neg
aas
aas
cmp
cld
clc
add
js
sbb
mov
and
mov
fdivr
sub
addr16
retf
jmp
push
cs
jmp
daa
or
in
add
daa
push
mov
mov
mov
ffreep
cmp
sbb
xchg
xchg
mov
ss
jb
push
(bad)
dec
xchg
or
jmp
and
out
sbb
inc
sbb
mov
jecxz
push
lods
jmp
imul
movs
sub
jnp
(bad)
jmp
sbb
call
push
loope
stos
xchg
in
mov
ror
jle
or
ins
xchg
pushf
cwde
hlt
jmp
cmp
rol
mov
push
pop
dec
cwde
in
(bad)
test
lahf
es
bound
jp
lds
cmp
retf
movs
sahf
mov
push
and
hlt
jl
movs
shl
jecxz
mov
movs
test
mov
mov
sub
repz
push
outs
sub
fmul
fadd
mov
and
mov
add
mov
xor
jo
popa
test
loop
(bad)
xchg
or
popa
or
dec
jnp
dec
pop
dec
bound
pop
xlat
mov
pop
lock
adc
mov
call
xor
xchg
in
mov
push
(bad)
jp
data16
into
push
in
push
mov
pusha
cli
sub
out
data16
push
stos
ins
pop
push
ds
pop
add
dec
loope
repnz
es
aam
add
aaa
pop
pop
pop
sti
pop
loopne
inc
jo
sahf
nop
out
clc
pop
call
xor
xor
les
dec
(bad)
fisubr
jle
popa
xchg
out
fmul
cmp
fst
shl
dec
sub
mov
stos
jno
sub
(bad)
aad
push
xchg
jmp
jb
rcl
mov
mov
ficom
daa
pop
dec
add
mov
pop
mov
ret
jnp
push
push
sbb
repz
jecxz
into
jb
int3
dec
data16
jp
xor
rcr
or
stc
mov
out
xor
gs
iret
lock
pop
inc
mov
int3
jmp
daa
gs
fidivr
mov
call
pusha
adc
retf
(bad)
out
sub
rcl
mov
in
sub
adc
cmc
pop
hlt
lahf
cwde
test
addr16
(bad)
(bad)
jmp
xchg
cmp
sbb
ja
imul
xor
int3
sar
cdq
mov
popf
sub
pop
call
mov
sbb
push
(bad)
int
neg
mov
push
arpl
test
sub
mov
clc
adc
fcomi
(bad)
cli
sbb
and
add
push
ret
inc
push
lock
pop
enter
or
retf
scas
lods
cmps
enter
adc
repnz
in
push
push
bound
push
test
jle
add
dec
adc
sbb
mov
dec
aas
xchg
push
push
outs
mov
sbb
pusha
icebp
mov
mov
xchg
mov
sti
arpl
or
test
and
mov
je
or
lock
xor
xchg
xchg
aaa
push
lods
jmp
sbb
test
rcr
cmp
hlt
(bad)
arpl
fld
scas
jno
jne
dec
ret
and
loope
push
lahf
jne
pusha
inc
fdiv
and
aas
gs
data16
mov
mov
and
sbb
dec
sbb
icebp
pop
mov
aad
lods
movs
dec
xor
ds
scas
xchg
mov
dec
jp
push
sbb
pop
test
mov
lahf
in
jl
sbb
push
push
out
dec
js
push
lahf
add
push
cmps
gs
sbb
je
add
(bad)
pop
jo
adc
push
adc
call
mov
inc
mov
popf
icebp
sub
inc
xchg
mov
inc
mov
loop
cmp
pop
mov
in
mov
out
and
push
jb
jno
arpl
sti
out
xchg
loope
push
jbe
jnp
loop
pop
xlat
pop
in
loop
loop
test
cmp
sar
gs
push
addr16
icebp
cmps
mov
inc
mov
pop
hlt
sbb
leave
xchg
sbb
std
xor
xlat
and
push
int
xchg
pop
sub
pop
push
adc
pop
ins
jae
mov
xchg
mov
jg
mov
add
jecxz
je
jb
pop
fld
jg
inc
popa
mov
or
in
xor
aas
adc
mov
test
mov
mov
mov
imul
das
movs
pop
aas
push
sub
in
dec
(bad)
imul
stos
push
popa
cmp
add
(bad)
or
sbb
rol
pop
jg
out
shl
mov
xchg
jmp
jmp
cmc
mov
jp
fmul
adc
jmp
xchg
popf
out
out
mov
lods
popf
xchg
adc
pop
xchg
cmp
arpl
sahf
cmc
nop
mov
push
or
dec
js
ret
inc
ficom
enter
test
psubsw
push
xchg
ins
int
pop
or
out
(bad)
mov
into
and
adc
inc
sti
pusha
xchg
fucomip
aam
sbb
push
in
or
jle
repz
arpl
sub
inc
and
fiadd
retf
movs
pop
jae
in
scas
sub
push
dec
xor
lock
inc
cmp
fdiv
sbb
jg
popa
cmp
or
popf
cmp
mov
aas
fwait
inc
adc
cmp
push
mov
cmovae
fdiv
(bad)
scas
aaa
push
pop
add
cmps
fdiv
cmp
jne
icebp
(bad)
pop
fs
inc
push
loopne
xchg
xchg
scas
stos
(bad)
test
int3
mov
and
fist
mov
addr16
fist
or
jbe
imul
xchg
cmp
icebp
mov
fild
(bad)
sbb
fcom
pop
sbb
pushf
mov
xor
cmp
jl
mov
in
push
mov
push
sbb
rcl
mov
ss
cmps
dec
gs
idiv
lods
lods
movs
jle
mov
scas
xchg
icebp
rol
pop
fld
repz
shl
arpl
fmul
jno
arpl
repnz
push
jp
mov
or
movs
push
pop
mov
cmc
push
(bad)
sbb
xchg
pop
mov
cmp
enter
or
call
fisub
pop
es
or
cmp
push
retf
xchg
sbb
push
jb
cwde
into
xchg
jg
sbb
scas
or
cwde
imul
out
fimul
fidivr
lds
mov
jno
out
pop
(bad)
pop
fsincos
push
sbb
outs
mov
scas
ins
jg
xchg
sti
jg
jbe
je
mov
mov
into
sbb
inc
and
inc
jne
test
cmps
jno
dec
and
rcr
and
cmps
(bad)
mov
imul
rcl
mov
lods
jl
pop
pop
xor
es
jmp
pop
push
out
aad
xchg
and
addr16
pop
and
push
mov
sbb
adc
or
and
pop
imul
aam
xchg
cmp
loopne
xor
jmp
add
ja
out
std
jns
cli
ins
adc
sar
out
pop
mov
retf
into
push
into
mov
and
movs
mov
in
xchg
test
test
lahf
call
ret
daa
mov
mov
aas
jle
inc
mov
ror
xor
clc
out
sar
dec
add
add
jns
inc
dec
bound
add
add
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
dec
or
push
dec
inc
or
add
or
add
add
add
add
or
add
add
pushf
das
cmp
add
add
inc
inc
add
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
push
ret
sub
add
or
dec
inc
inc
push
pop
inc
in
shl
aam
add
lock
dec
ss
jno
out
dec
mov
(bad)
leave
out
push
xor
push
loope
jb
sahf
(bad)
cmp
nop
mov
fs
push
(bad)
repz
lldt
dec
mov
pop
cmp
or
fadd
outs
or
addr16
pop
jae
hlt
adc
mov
xchg
xchg
and
das
xchg
mov
pusha
js
aas
dec
inc
mov
cmp
sbb
jge
sub
jp
mov
rol
xor
fs
xor
mov
mov
cmp
std
cdq
mov
or
imul
rcl
hlt
push
mov
jo
in
and
mov
mov
mov
fdiv
int3
(bad)
fistp
xor
cwde
lock
mov
sar
push
lods
dec
or
mov
fdivp
cmp
cmps
xchg
(bad)
movs
ficom
ins
dec
call
cmp
das
(bad)
aam
cli
test
jecxz
dec
pushf
pop
jns
mov
add
xor
ficomp
inc
stos
aaa
rcl
jns
mov
jae
in
mov
(bad)
push
(bad)
and
outs
xor
pop
not
mov
dec
jle
fst
lods
or
xor
into
fld
xor
icebp
mov
pop
xchg
adc
adc
push
cld
sysexit
pop
adc
push
inc
push
ret
loopne
cli
dec
inc
push
push
mov
push
clc
xchg
add
scas
pop
aad
or
mov
jmp
int
push
sbb
cmp
popa
or
sbb
bound
inc
loope
adc
adc
or
and
ins
jmp
xchg
sbb
aam
push
aas
push
fwait
lahf
push
pop
test
cmp
dec
inc
fcmovnb
stos
sbb
pop
sub
(bad)
dec
scas
sbb
je
fiadd
ret
pop
mov
test
ret
(bad)
stc
inc
iret
gs
or
loope
movs
jb
loope
fisttp
cmp
mov
ror
imul
fldcw
jae
cmps
cmp
out
(bad)
push
push
repz
push
fstp
fdivrp
cmp
xor
push
sub
mov
push
xor
xchg
push
push
enter
pop
inc
aas
cmp
mov
loopne
and
(bad)
and
nop
out
loopne
adc
(bad)
les
push
out
inc
call
push
rcl
inc
addr16
pop
and
adc
mov
cmps
push
pop
xlat
(bad)
test
xor
pop
and
es
outs
xchg
aas
mov
retf
xor
jne
push
dec
xchg
push
push
push
xchg
aad
arpl
or
addr16
add
mov
int3
out
ret
out
lods
mov
ror
dec
test
cmc
jb
jg
cmps
push
pop
inc
sbb
inc
xor
mov
pop
xchg
push
pop
icebp
jmp
mov
dec
jns
pop
es
test
cmc
clc
sahf
and
push
sub
and
add
dec
in
push
rol
shl
jno
aaa
out
xor
pop
arpl
mov
ds
xchg
fisttp
xchg
pop
(bad)
ror
fcomip
dec
call
fidivr
sub
fnstenv
mov
sbb
stos
sbb
cmp
nop
jns
lds
sub
xchg
cmp
rcr
fbld
inc
sahf
mov
verw
dec
call
loopne
fcmovnb
xor
adc
fadd
add
test
add
retf
pushf
mov
cmp
in
enter
push
push
push
(bad)
adc
pusha
mov
enter
pop
stos
sbb
lea
adc
(bad)
nop
out
mov
inc
adc
bt
je
mov
add
or
sub
in
pop
dec
cli
xchg
mov
cmp
mov
push
stos
mov
enter
out
fsub
push
into
jmp
mov
in
adc
xor
loope
(bad)
std
ja
popa
js
fwait
test
and
inc
cmp
mov
cmp
mov
mov
mov
inc
iret
gs
mov
gs
mov
push
push
cmp
adc
or
cld
push
int
mov
mov
(bad)
push
dec
sbb
lods
imul
inc
cmps
out
inc
xor
stos
ret
iret
and
mov
jno
div
and
xchg
and
mov
cmp
in
repz
cmc
test
hlt
and
(bad)
jecxz
jmp
xchg
inc
mov
fadd
jo
jo
lods
movs
cld
cmp
pop
xor
test
dec
push
cmp
jecxz
fst
mov
test
push
mov
jecxz
xchg
retf
sub
rcl
mov
jp
pop
and
shl
in
dec
push
adc
cmp
cli
push
mov
cmps
push
emms
xchg
mov
mulps
add
pop
test
push
outs
(bad)
cli
cmps
xchg
aad
fwait
sbb
sbb
sub
inc
fnsave
out
sbb
nop
mov
jb
addr16
and
or
ss
sahf
repz
xchg
cwde
sub
jae
cdq
and
fwait
ins
inc
and
bound
mov
mov
adc
aaa
int
das
aaa
push
sbb
jmp
cmc
mov
pop
or
dec
stc
sub
jno
(bad)
mov
sub
and
adc
adc
xlat
fnstsw
aam
xchg
(bad)
cmp
fld
out
mov
ror
mov
or
mov
mov
pop
push
pop
dec
fwait
mov
inc
fmul
push
shl
and
not
xchg
push
jae
sub
scas
and
mov
jno
xor
mov
out
icebp
mov
xchg
mov
inc
sub
mov
push
and
mov
sub
dec
jb
imul
popa
ror
(bad)
mov
sbb
ins
xchg
fadd
adc
scas
mov
xchg
dec
call
jmp
mov
lahf
std
pop
test
jae
cmp
(bad)
jge
aam
(bad)
push
inc
dec
aam
ret
xchg
dec
dec
push
sbb
dec
dec
mov
jnp
jae
retf
movs
cmps
js
dec
(bad)
loopne
mov
aad
adc
iret
vandpd
jle
in
mov
scas
pop
leave
mov
sub
ds
add
cmps
cs
outs
popa
xor
retf
adc
(bad)
and
lds
data16
das
inc
js
jmp
rcl
pushf
pop
data16
popa
push
jmp
and
pop
jecxz
shr
dec
push
scas
and
and
scas
pop
push
xchg
mov
jle
and
popa
mov
cmp
add
mov
aam
stc
dec
add
test
xor
or
or
xor
addr16
scas
add
loop
adc
cdq
sub
push
stos
or
add
ficomp
cld
cmps
aas
shl
and
aam
mov
cld
mov
mov
fwait
in
jmp
div
cmp
rcr
sbb
test
call
jnp
repnz
out
mov
adc
mov
and
fnstenv
cs
cmc
cli
push
leave
adc
aad
xchg
mov
(bad)
jne
outs
jnp
xchg
mov
jp
inc
xchg
adc
adc
fisttp
scas
mov
outs
jno
xor
lahf
mov
pop
in
stos
dec
xor
xchg
dec
mov
lods
ja
stos
jmp
or
or
daa
fnstcw
xchg
jle
pop
adc
int3
adc
test
fwait
repz
sti
int3
push
push
pushf
jae
inc
je
xor
ret
mov
fistp
adc
pop
inc
push
adc
aad
cld
and
mov
jp
pushf
outs
nop
stos
sbb
mov
mov
call
pop
mul
inc
nop
sbb
push
sub
loopne
lods
lods
dec
adc
dec
cmp
in
out
scas
jbe
mov
sti
and
out
push
into
idiv
int3
push
cmp
inc
sbb
cmps
mov
xchg
(bad)
pop
inc
cs
pusha
jne
and
out
xor
dec
xchg
sar
mov
mov
jns
jno
test
add
pop
mov
push
js
xchg
and
imul
inc
push
mov
test
adc
inc
shr
retf
inc
dec
mov
stos
mov
pusha
add
xchg
adc
outs
dec
pop
test
loope
pop
adc
movs
push
adc
aas
stos
sbb
jb
not
pop
ins
or
mov
or
mov
cmps
(bad)
cmps
mov
cmc
xchg
inc
xchg
xlat
into
sub
ror
fldenv
data16
mov
cmp
fwait
jg
mov
dec
sbb
or
call
fiadd
clc
xchg
ja
pusha
dec
mov
call
pop
fs
adc
sbb
out
aam
mov
dec
dec
xchg
sub
fwait
pop
add
neg
add
leave
dec
retf
add
mov
sbb
sub
stos
repz
and
mov
xor
rcl
fwait
mov
mov
and
inc
xor
jmp
inc
xchg
lahf
push
aad
aad
gs
lahf
or
or
cmp
sbb
aaa
mov
sbb
mov
and
sahf
call
adc
xor
cmp
cdq
xor
adc
mov
out
pop
jecxz
shl
or
pop
stc
outs
inc
xchg
scas
neg
nop
clc
ret
mov
mov
and
mul
bound
xchg
out
add
add
(bad)
lahf
push
stc
jnp
jg
sbb
leave
cmps
retf
cld
bound
adc
ins
and
mov
loopne
es
and
sahf
ret
pushf
ret
mov
in
ret
loopne
lds
retf
lods
jae
push
aaa
sub
out
adc
mov
inc
outs
push
jnp
in
jnp
mov
das
mov
fs
popa
add
sbb
sbb
pop
jecxz
mov
fisub
dec
and
mov
test
or
ror
jmp
sbb
pop
cmp
sbb
fbld
cli
aaa
jp
adc
sub
std
mov
cmc
dec
scas
jb
pop
cmp
xor
mov
inc
test
push
(bad)
sub
test
jg
aam
adc
div
or
das
retf
push
je
jno
or
add
xor
outs
mov
jl
mov
jno
sbb
adc
lds
inc
leave
movs
ret
ss
(bad)
dec
add
mov
arpl
jbe
lea
imul
pushf
nop
adc
cmps
icebp
out
inc
repz
aad
sub
loopne
push
out
mov
ror
pop
shl
or
ja
mov
call
call
inc
loope
cmp
or
jl
push
jle
sub
fisttp
leave
sub
xchg
jns
xor
push
xor
enter
dec
or
jmp
aaa
and
popa
adc
sub
cmp
mov
push
loopne
add
outs
loopne
sar
sar
sub
sub
mov
in
push
add
add
dec
inc
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
dec
or
push
dec
inc
or
add
or
add
add
add
add
or
add
add
pushf
das
cmp
add
add
inc
inc
add
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
push
ret
sub
add
or
dec
inc
inc
push
pop
inc
in
shl
and
lea
add
(bad)
adc
xlat
cmp
sbb
xchg
pop
pushf
in
fs
jb
inc
not
cmps
adc
jmp
outs
xchg
sub
in
into
pop
fldenv
jmp
and
lldt
cwde
clc
jae
fist
mov
es
test
inc
dec
cmps
je
mov
leave
inc
(bad)
cmp
movs
sbb
mov
xchg
bound
pop
xchg
pop
(bad)
xor
inc
mov
xor
add
scas
and
jb
js
lods
mov
push
jp
int
or
fcom
or
pop
xor
fcmovne
into
retf
push
inc
rol
inc
inc
nop
cmp
imul
lock
mov
mov
lds
test
jmp
int
add
hlt
or
pusha
cmp
mov
and
outs
mov
in
dec
ror
js
mov
inc
es
fdiv
mov
clc
mov
dec
lea
call
pop
jb
outs
push
jbe
jno
or
push
add
imul
fmul
mov
sbb
jmp
lods
loopne
loop
xchg
add
fld
add
adc
cmp
or
and
adc
mov
std
sub
xchg
cmp
test
aas
dec
cmp
mov
inc
fdivr
inc
mov
mov
ret
rcl
sub
pushf
in
jecxz
test
add
mov
punpckhwd
fldcw
mov
mov
pop
test
leave
adc
(bad)
xchg
in
data16
cmc
inc
outs
fstp
push
mov
push
jnp
push
fdiv
jns
push
jns
out
adc
gs
std
fs
mov
dec
inc
xchg
mov
inc
sbb
mov
pop
pop
push
loope
push
aaa
aas
ins
ins
push
sbb
add
xchg
ja
push
sahf
mov
mov
pop
xor
jns
adc
sbb
pop
cwde
out
mov
outs
cmp
in
ss
int
pop
stos
lds
sub
cmp
mov
sub
test
movs
sti
es
sbb
fwait
mov
jmp
scas
pop
mov
sub
stc
cld
sbb
mov
in
out
adc
retf
sub
scas
dec
mov
add
cmp
shl
adc
mov
xchg
jo
pushf
jno
pop
ja
mov
cld
retf
dec
and
bound
xor
lds
sti
cmp
add
lods
pop
fisttp
outs
jp
pop
dec
mov
loop
(bad)
xor
jge
xchg
inc
mul
cmp
arpl
adc
sahf
or
push
(bad)
mov
pop
add
scas
or
dec
dec
stos
aam
sub
cmp
stos
loope
ds
mov
nop
std
popa
dec
out
ins
inc
jo
imul
jns
enter
(bad)
fcomp
ja
adc
cmc
and
mov
sbb
into
xchg
inc
sub
sbb
xor
pop
push
fsub
cdq
in
(bad)
sbb
jmp
data16
rcl
xchg
call
movs
ss
popa
loope
sbb
(bad)
mov
cmps
mov
add
popf
fucomi
aaa
xor
ror
cdq
out
mov
or
out
mov
cmps
inc
fucomip
push
nop
xchg
push
in
jl
or
ret
adc
and
test
call
es
fcom
or
retf
test
or
mov
pop
ror
dec
arpl
aad
popa
push
out
mov
fsub
sub
into
sub
ret
push
(bad)
jno
mov
add
enter
jecxz
mov
jecxz
movs
pop
in
adc
out
call
sub
mov
les
sbb
mov
mov
or
add
xor
sub
pop
in
jle
mov
adc
imul
jmp
in
xchg
sub
mov
retf
mov
ficom
fiadd
out
sub
loopne
ins
(bad)
inc
xchg
mov
jge
push
fcmovnb
add
pop
add
mov
not
je
(bad)
jmp
inc
fdivp
pop
loopne
shr
fidivr
sahf
iret
and
xchg
out
sbb
mov
dec
shl
adc
(bad)
les
adc
fcomp
xor
lock
repz
retf
enter
call
imul
pop
and
ret
pop
outs
xchg
dec
fbstp
sbb
mov
(bad)
inc
and
cmp
jmp
inc
push
retf
and
pop
loope
mov
xor
xchg
ficom
mov
sub
push
xchg
inc
jno
out
and
fild
in
push
dec
cmp
pop
dec
cmps
xor
btr
je
into
loope
leave
mov
fdivr
sbb
mov
lods
int
sbb
ss
ins
fs
adc
fs
aas
cli
sbb
push
cmps
and
mov
push
nop
(bad)
jb
addr16
adc
fdiv
movs
in
loope
in
call
mov
add
addr16
jge
mov
dec
bound
pop
mov
ins
push
jge
outs
xor
scas
inc
xchg
test
xlat
lea
add
popa
jmp
mov
aad
aam
mov
sbb
push
jno
sub
mov
push
(bad)
mov
fs
pop
jmp
cmp
daa
les
scas
inc
out
xchg
fisttp
(bad)
rcr
outs
fwait
adc
sbb
pop
pop
jbe
pop
cdq
push
xor
dec
aaa
daa
adc
jg
int
mov
inc
leave
ja
jnp
mov
mov
jge
inc
arpl
loope
shl
test
sbb
adc
ror
cs
nop
dec
mov
imul
cmc
push
sub
jae
in
mov
mov
mov
mov
jecxz
or
dec
and
loopne
jmp
xchg
fcomp
lea
or
push
jno
push
add
cmp
jmp
jns
add
mov
ins
das
ficom
jle
dec
jb
imul
and
add
(bad)
jge
cmp
ja
std
or
(bad)
loop
das
dec
xchg
movs
mov
sbb
pop
in
fistp
push
pop
cmps
or
hlt
dec
adc
push
pusha
sub
mov
das
and
mov
xor
cmp
xchg
jo
shl
(bad)
xchg
stc
add
push
cs
aas
ret
loope
add
jge
sahf
clc
ret
dec
push
mov
adc
mul
sub
and
and
fsub
(bad)
sti
repz
xchg
ret
cli
mov
cmp
cmps
adc
xchg
imul
sbb
retf
fdiv
jmp
xchg
mov
lea
cli
jnp
in
retf
jae
ds
mov
dec
mov
jl
xchg
xchg
or
in
dec
xlat
fisub
mov
stc
adc
shl
adc
std
(bad)
cmp
cld
xchg
lods
inc
repnz
cmp
xchg
iret
pop
add
in
push
stos
push
mov
jns
out
xor
inc
or
and
add
(bad)
imul
clc
sar
mov
hlt
xchg
or
scas
popf
add
gs
outs
sbb
pop
mov
push
lds
int
push
outs
clc
mov
cmp
mov
loope
cmp
dec
(bad)
pusha
aam
mov
mov
out
mov
xor
imul
cs
mov
pop
cmps
pop
xor
jno
sub
test
push
pusha
mov
nop
xor
inc
retf
add
jmp
add
or
xchg
retf
jb
aam
push
icebp
stos
push
fs
jae
mov
test
out
mov
dec
push
pop
xor
ja
test
inc
int
dec
cdq
jbe
cwde
in
scas
(bad)
push
mov
scas
inc
fldenv
mov
and
clc
stos
and
dec
out
lods
sub
mov
sbb
mov
cmp
jmp
xchg
aaa
cmps
and
(bad)
xor
fst
pop
push
sub
lds
aad
push
adc
loope
adc
fmul
push
mov
mov
xchg
jmp
pop
push
cmp
(bad)
(bad)
dec
xor
popa
pop
adc
inc
movs
imul
ins
mov
in
mov
and
push
jp
in
pop
fistp
mov
inc
xchg
add
out
pop
push
and
cmp
into
jp
sbb
je
mov
test
jp
xor
xor
inc
mov
mov
ds
ja
inc
lahf
dec
mov
dec
xlat
ins
rcr
das
test
clc
cmp
mov
int
mov
in
(bad)
popf
retf
add
imul
imul
cmp
push
popf
add
cmps
repz
pop
outs
xchg
or
fsub
sub
jmp
ins
adc
lock
ror
sti
inc
mov
std
lock
inc
xchg
xchg
in
sbb
iret
inc
mov
push
adc
daa
add
sbb
nop
xor
pop
and
(bad)
sahf
in
sbb
cmps
or
mov
jmp
movs
fsub
jg
in
push
pop
lods
xor
in
add
cmp
or
mov
aaa
sub
lds
or
xchg
push
push
lods
push
mov
xchg
in
xor
push
sub
(bad)
hlt
hlt
or
sub
pusha
pop
(bad)
sbb
mov
push
mov
in
ret
aas
jg
(bad)
push
or
or
call
mov
lahf
sub
push
outs
mov
pop
mov
xchg
mov
pop
mov
stos
ror
cmp
ret
sbb
sbb
imul
shl
rcr
mov
leave
cwde
add
mov
jp
inc
sbb
(bad)
jge
or
push
iret
mov
xchg
sub
and
dec
xchg
loop
hlt
sbb
repz
fild
stos
shl
sub
sub
fdiv
in
add
sbb
adc
dec
ret
cmp
pop
iret
push
iret
mov
data16
cdq
sahf
xor
inc
inc
sbb
gs
and
and
les
jecxz
inc
pop
adc
mov
out
pop
out
dec
inc
push
iret
sub
jecxz
shl
dec
sbb
xchg
shr
in
sub
and
movs
rol
js
mov
inc
ds
cmp
push
adc
popa
xor
sub
jg
into
loope
push
aaa
pop
push
sbb
add
lea
imul
fild
mov
pop
retf
mov
push
(bad)
mov
pushf
dec
and
lds
adc
lahf
dec
jne
jbe
pop
mov
push
mov
cmp
fisttp
or
enter
rcr
xor
jmp
mov
jmp
stc
jmp
xchg
sar
aas
sub
add
add
fsubr
add
xchg
mov
pop
das
dec
(bad)
pop
push
or
data16
mov
push
mov
pusha
sub
or
dec
les
fsubrp
fwait
movs
lods
mov
div
adc
icebp
fcomi
ja
not
push
xor
popa
sbb
leave
stc
ret
dec
jp
ror
(bad)
lahf
cmp
or
sbb
aas
pop
inc
shr
dec
stos
mov
pop
add
add
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
dec
or
push
dec
inc
or
add
or
add
add
add
add
or
add
add
pushf
das
cmp
add
add
inc
inc
add
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
push
ret
sub
add
or
dec
inc
inc
push
pop
inc
in
(bad)
in
fisttp
add
icebp
das
cmps
cmp
dec
sahf
test
out
jmp
rcr
fnsave
(bad)
push
inc
dec
aaa
inc
ja
jg
ret
std
je
lahf
lock
(bad)
add
jo
nop
jl
add
xchg
movs
daa
bound
fmul
mov
fs
or
lea
xchg
push
cmp
int
jecxz
fwait
sub
xchg
pop
pop
xor
add
sbb
cmp
and
test
cmp
(bad)
sti
mov
add
push
sub
jns
sub
test
xchg
fdivp
(bad)
add
xor
in
rcl
mov
cld
mov
cmp
mov
cmps
mov
hlt
xlat
stos
enter
mov
test
mov
into
xor
test
mov
in
(bad)
(bad)
cmp
out
sbb
mov
pop
dec
fist
test
test
fs
xchg
mov
fwait
stos
or
mov
or
out
ds
add
jl
fisub
sbb
inc
cmp
dec
ss
pop
push
rol
push
scas
cli
mov
jne
jg
out
mov
fild
(bad)
mov
bsf
xchg
hlt
imul
push
push
out
xchg
daa
mov
sub
inc
push
fnstenv
jns
call
adc
in
inc
dec
sub
and
pop
vpmaxsw
xor
xor
add
rol
jne
mov
out
and
adc
pop
pushf
jecxz
pop
lods
(bad)
ss
std
xor
aas
ret
push
shr
mov
leave
mov
js
xor
js
xor
inc
or
shl
mov
push
mov
xor
mov
mov
inc
mov
mov
cmp
rsm
sbb
ret
cmp
jmp
popf
add
mov
in
je
retf
add
pop
pop
fdivr
cmc
mov
mov
add
into
dec
lods
pop
mov
sub
mov
dec
lock
pop
mov
mov
and
xchg
mov
xor
jp
ret
sbb
mov
add
push
mov
inc
xor
ds
popa
mov
je
push
xchg
mov
pop
or
mov
add
jecxz
inc
adc
(bad)
and
jae
add
mov
(bad)
ror
inc
inc
mov
daa
arpl
mov
inc
iret
xor
outs
aaa
push
cdq
add
(bad)
repnz
cmp
add
dec
jno
ins
xchg
sub
leave
sti
mov
lods
(bad)
mov
outs
or
pop
in
dec
jmp
dec
loope
jge
xor
pop
stos
out
push
(bad)
je
out
(bad)
cmc
out
sub
xor
jmp
cdq
lods
aad
ja
fist
fisttp
ds
xor
inc
outs
into
fcom
loope
sub
mov
dec
bound
sbb
jp
in
test
retf
push
dec
stos
dec
stos
cwde
xor
cmps
cmp
push
mov
cwde
push
inc
add
xor
pushf
dec
rcr
pop
rcr
jp
ficom
sub
scas
mov
push
cmp
hlt
mov
pusha
jp
mov
mov
cmp
dec
ins
clc
pop
lea
dec
sbb
lods
aaa
retf
loop
(bad)
ror
clc
or
pop
call
jne
add
cs
arpl
mov
out
rcr
fs
inc
or
push
inc
push
loop
js
std
cmps
mov
lods
sub
call
jl
sub
inc
daa
add
mov
int3
popf
add
inc
mov
inc
jne
pop
dec
push
jge
jg
xchg
cmp
sbb
cmp
dec
mov
jle
outs
mov
les
ins
and
aam
fs
out
scas
ja
retf
push
xchg
cmps
jo
cmp
inc
outs
push
pop
pop
stos
das
jnp
cmp
into
mov
and
xchg
or
rcr
jmp
inc
cld
dec
inc
repz
cdq
jl
mov
pop
scas
cdq
loop
ficomp
movs
fistp
xor
les
and
gs
pop
shl
and
inc
or
(bad)
hlt
mov
lds
icebp
pushf
mov
leave
and
call
mov
push
(bad)
jecxz
inc
cmc
out
mov
int
sbb
xor
sub
(bad)
repz
jg
and
or
mov
mov
jp
pop
js
adc
add
jle
and
push
pop
pop
pop
addr16
dec
dec
lock
jb
adc
ret
cmps
je
cli
xor
je
out
in
stc
into
sti
addr16
fadd
fwait
push
out
outs
test
pop
mov
push
sbb
scas
or
mov
jno
cmp
and
cld
mov
add
and
clc
(bad)
call
test
push
repz
out
dec
inc
in
(bad)
leave
dec
add
pop
mov
gs
iret
fadd
stc
cdq
xor
cmp
ret
in
pop
inc
idiv
fwait
dec
sub
dec
outs
adc
mov
add
inc
mov
xor
xor
jns
sbb
adc
dec
(bad)
push
repz
cmp
cmp
addr16
jl
pop
sbb
xlat
xor
jecxz
lock
daa
sbb
and
push
fisubr
push
popf
in
scas
imul
int3
add
sbb
fsubp
mov
xchg
daa
or
retf
(bad)
mov
test
jecxz
(bad)
mov
pop
out
mov
xor
pop
fwait
ror
xchg
ds
and
shl
inc
lock
dec
jb
jmp
inc
mov
call
jl
dec
add
mov
adc
pop
xchg
jo
test
mov
sbb
pop
das
and
not
push
shr
inc
aad
out
clc
sub
inc
out
and
mov
and
xor
cmps
mov
iret
sub
in
in
sbb
xor
pop
adc
in
cdq
outs
imul
cmps
dec
fistp
pop
shr
out
xor
mov
in
adc
ss
pop
pop
pop
cmps
sbb
leave
fidivr
ins
or
loopne
adc
xchg
adc
xor
sahf
or
dec
rcr
(bad)
mov
fst
sti
or
sbb
jle
push
loope
(bad)
retf
xor
not
or
sub
stc
ins
les
ss
dec
lods
push
loopne
pushf
les
icebp
push
stc
iret
stc
push
les
cmp
xor
dec
(bad)
pop
dec
leave
and
(bad)
adc
jecxz
mov
inc
pop
push
mov
or
(bad)
lods
bound
nop
popa
gs
mov
ins
xor
push
xchg
outs
dec
adc
xchg
jae
pop
daa
dec
rcl
idiv
jmp
cmp
and
sub
jno
mov
int
cmps
in
xor
xor
mov
mov
mov
xchg
push
sbb
cmps
adc
test
xchg
add
push
jge
or
sbb
les
jg
pusha
and
out
leave
adc
pop
aad
mov
push
les
in
push
mov
and
fnstcw
jae
popf
es
call
pop
dec
inc
test
adc
out
adc
mov
or
int3
fbstp
idiv
clc
or
(bad)
ss
fild
and
dec
push
pusha
iret
out
pop
out
adc
sahf
test
mov
mov
in
ja
loop
dec
fistp
jg
daa
or
cmps
or
pushf
call
shl
inc
push
aas
adc
jecxz
xor
cmp
jecxz
icebp
fdiv
fist
or
(bad)
imul
daa
sub
out
or
out
add
jle
xchg
leave
sbb
pop
ss
dec
sub
call
add
outs
iret
jmp
adc
dec
daa
push
mov
sbb
dec
dec
inc
ficomp
lds
(bad)
mov
sbb
inc
mov
pminub
test
sbb
mul
je
int
sub
arpl
fld
pop
sub
mov
push
data16
add
and
mov
loop
dec
xchg
add
call
lock
unpcklps
cmp
jb
and
dec
(bad)
fistp
call
push
cdq
sbb
pop
mov
(bad)
(bad)
fadd
(bad)
in
cld
adc
(bad)
pop
push
push
jecxz
rol
ret
enter
dec
loopne
dec
dec
mov
xchg
rcl
mov
jmp
xchg
xchg
cmp
in
dec
cdq
pop
test
sbb
fs
gs
mov
and
mov
jmp
repnz
pop
call
mov
gs
lods
lods
int3
cmc
div
pop
sub
aam
pop
repz
jmp
das
(bad)
in
test
stos
ins
scas
movs
mov
call
clc
jp
and
ins
jle
or
leave
aad
cmp
mov
xor
cld
jmp
sub
mov
mov
mov
jle
fldenv
dec
jge
fs
jp
pop
push
jl
(bad)
lahf
scas
pop
lahf
cmps
pop
loope
in
ret
das
outs
xlat
dec
lds
leave
sub
push
mov
scas
xlat
sbb
mov
out
cmps
mov
stos
pop
iret
lea
push
aas
push
sbb
inc
out
pop
inc
xchg
imul
adc
jmp
and
in
dec
repnz
jp
pop
ds
jp
cmp
hlt
sbb
psraw
inc
popa
fld
and
mov
popa
hlt
fisubr
jge
dec
pop
jecxz
aaa
mov
shl
sar
sub
aas
stc
jmp
shl
stos
cmps
out
retf
outs
xchg
cmp
dec
dec
jle
cwde
ja
or
in
push
rcr
rcr
add
mov
int3
test
ja
and
pop
loop
dec
adc
test
lock
jb
cs
fistp
into
hlt
pusha
test
jne
jno
lea
cmp
repz
ret
xor
(bad)
jo
fldenv
je
rcr
test
mov
mov
xchg
iret
stos
mov
lds
dec
xchg
cmc
icebp
scas
adc
jae
int3
inc
loope
lds
aaa
icebp
stc
enter
or
push
xchg
dec
mov
std
mov
sbb
mov
sub
sub
jae
or
xchg
cmp
sar
mov
enter
cvtdq2ps
inc
mov
mov
out
stc
mov
retf
or
push
jmp
out
mov
dec
ds
cmps
mov
(bad)
and
loope
mov
icebp
stos
mov
cmp
sbb
and
mov
and
sub
pop
gs
mov
mov
ret
inc
mov
int
jle
cmps
pop
adc
ret
mov
dec
mov
or
sub
call
xlat
xchg
out
inc
loopne
mov
leave
lods
test
(bad)
push
repz
aad
push
jle
(bad)
cmp
movs
ins
cmp
mov
outs
add
jo
scas
dec
xor
inc
pusha
cmp
aas
cmps
push
dec
in
dec
cmps
mov
mov
daa
fwait
cmc
lods
sbb
loope
lea
or
addr16
dec
fisub
int3
popa
xor
call
out
arpl
(bad)
and
mov
mov
add
sar
dec
loopne
sar
call
jg
push
inc
ins
mov
scas
add
add
dec
inc
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
dec
or
push
dec
inc
or
add
or
add
add
add
add
or
add
add
pushf
das
cmp
add
add
inc
inc
add
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
push
ret
sub
add
or
dec
inc
inc
push
pop
inc
in
shl
aam
add
lock
fnstcw
fs
enter
inc
addr16
cmp
leave
sbb
jnp
mov
sub
and
jb
leave
enter
icebp
mov
das
loope
add
cmp
lds
inc
imul
loope
inc
test
les
push
or
data16
mov
shr
cli
jg
imul
(bad)
adc
xor
imul
sbb
dec
push
sbb
ds
lea
neg
dec
ins
dec
imul
(bad)
mov
loope
xlat
fld
scas
and
jbe
frndint
sbb
pop
in
loop
lods
imul
ror
ret
pop
loope
shl
leave
mov
mov
push
sbb
stos
pop
test
mov
jne
pop
or
and
shl
push
add
inc
mov
mov
call
lods
push
mov
mov
pop
jmp
pop
mov
scas
mov
pop
xchg
test
sti
jo
leave
and
out
lock
add
pusha
mov
adc
push
or
push
inc
sub
cli
mov
push
(bad)
mov
(bad)
pop
pop
stos
cmp
rcr
cmp
es
lock
xchg
gs
xchg
int3
lock
data16
jo
lahf
jmp
imul
xor
pop
jmp
and
cmp
mov
cmps
cmp
test
pop
lahf
(bad)
fsub
movs
and
(bad)
lds
push
lods
aam
sub
mov
jg
(bad)
cdq
call
mov
push
or
pop
call
or
bnd
xchg
or
sar
xor
in
cdq
mov
push
dec
ins
movs
(bad)
out
dec
mov
push
mov
nop
push
jno
cld
ss
mov
retf
jg
movs
test
mov
sbb
mov
pushw
mov
std
inc
fst
rol
xchg
enter
test
pop
(bad)
fmulp
ja
jno
inc
js
mov
fild
mov
inc
frstor
out
sti
mov
out
inc
ins
(bad)
sub
bound
sahf
outs
scas
mov
or
dec
push
mov
in
xor
test
neg
fistp
loopne
cmp
mov
in
ror
push
(bad)
mov
mov
add
fld
sub
push
jae
in
shl
in
movs
mov
into
cdq
inc
sub
sub
jbe
outs
(bad)
mov
cdq
xchg
(bad)
mov
jmp
mov
sbb
mov
scas
cli
je
daa
xor
inc
ret
call
mov
pop
dec
outs
xor
addr16
(bad)
in
and
stos
inc
add
pusha
dec
mov
add
pop
aas
mov
mov
jle
or
fidiv
mov
mov
fcmovnu
lods
repz
or
js
ror
arpl
out
repz
std
into
dec
daa
pusha
sbb
push
cmps
mov
fadd
inc
div
in
mov
shl
aas
mov
clc
inc
mov
adc
sub
pop
hlt
loopne
fcom
test
ins
pusha
stos
jne
push
or
mov
pop
adc
adc
aad
mov
out
mov
daa
xchg
xor
and
push
test
fbld
mov
mov
lds
arpl
inc
jl
shr
sub
retf
movs
push
imul
add
stc
xor
jnp
loop
jns
xor
cmp
mov
icebp
mov
add
push
jecxz
les
repnz
ret
lock
xchg
mov
(bad)
jl
ror
pop
lds
(bad)
push
sub
out
leave
push
add
mov
and
push
adc
iret
out
cmc
jge
push
hlt
xchg
arpl
clc
push
jp
dec
dec
fbstp
push
adc
in
fisubr
outs
es
je
jns
inc
adc
jecxz
or
out
icebp
mov
dec
enter
fs
dec
(bad)
cmp
add
mov
fxch
push
test
jns
or
xchg
loope
retf
lahf
xor
xchg
inc
movs
shr
mov
cld
fistp
mov
xor
in
lods
and
int3
push
dec
clc
pop
jae
and
or
out
or
ror
ins
(bad)
jbe
fwait
or
xor
in
cmp
cs
in
or
mov
sti
cmp
test
pop
dec
data16
lahf
or
imul
addr16
push
dec
(bad)
push
cmps
ret
jge
pop
jg
inc
lea
adc
(bad)
jnp
and
je
add
sti
out
push
inc
out
rol
out
ror
dec
adc
cld
or
inc
aad
push
inc
jmp
out
or
jns
scas
pop
cmp
pusha
sub
ins
cmps
in
sbb
mov
sub
xchg
rol
pushf
inc
push
mov
push
xchg
fdiv
les
das
shl
nop
clc
and
int
adc
div
(bad)
hlt
pop
pop
xor
hlt
mov
and
cmps
ficomp
and
inc
jle
or
cli
xor
add
xor
loope
js
mov
pop
shr
into
cdq
cli
adc
jnp
fbld
inc
test
cmps
ror
scas
(bad)
fmul
out
push
js
sbb
push
(bad)
cmp
add
clc
std
mov
mov
or
(bad)
xlat
mov
iret
js
and
jmp
fiadd
push
pop
sub
pop
jp
add
dec
repz
sbb
fadd
xacquire
and
mov
int3
push
(bad)
lock
dec
and
inc
movs
sahf
mov
push
icebp
jb
and
(bad)
mov
mov
fwait
retf
xor
add
adc
adc
adc
js
pushf
push
cdq
mov
pop
dec
out
mov
jg
ja
ret
xchg
in
mov
loop
pop
in
sbb
inc
stc
hlt
mov
cmp
adc
pushf
outs
cwde
jnp
adc
push
jge
fldln2
dec
fs
cbw
jg
and
(bad)
cmp
ins
sbb
add
lds
mov
in
lahf
not
inc
sub
pop
not
scas
jno
lahf
xor
ficomp
hlt
sbb
ins
dec
sahf
mov
pop
(bad)
adc
pop
dec
dec
sbb
in
adc
and
sbb
ins
je
js
mov
cdq
(bad)
mov
push
cmc
aam
test
push
cmp
mov
mov
into
ins
inc
sbb
daa
cdq
jne
jae
xchg
xchg
loopne
scas
fisttp
iret
sbb
pop
int
bound
dec
test
pushf
movs
mov
neg
pushf
fnclex
ficomp
ins
pop
mov
jo
call
std
rdpmc
push
xchg
jmp
fidiv
or
add
or
jb
jno
ds
sub
idiv
mov
cmc
mov
movs
dec
dec
mov
xchg
adc
loopne
(bad)
pop
jbe
dec
int3
mov
fnsave
dec
pop
iret
cmp
(bad)
add
repz
mov
ja
dec
sbb
bound
lea
test
mov
mov
mov
mov
xor
inc
jmp
jo
loope
lds
retf
ret
jo
adc
pop
fldz
cmps
jbe
gs
fisttp
push
adc
inc
sbb
inc
or
lahf
int
mov
inc
jb
loope
mov
lahf
xchg
dec
xlat
mov
call
cs
xchg
mov
xchg
cdq
or
xchg
pop
bound
not
mov
lods
mov
mov
out
xchg
ret
inc
(bad)
mov
xor
and
cmps
add
mov
in
sbb
sbb
cs
sahf
cld
outs
mov
aaa
jns
cdq
addr16
xchg
mov
int
sub
pop
cmps
gs
sub
adc
lock
jnp
div
inc
shl
or
push
mov
out
mov
pushf
movs
pop
pop
es
dec
mov
cmp
cwde
shr
std
xchg
push
xor
cdq
sub
mov
shr
(bad)
cmp
addr16
jmp
imul
int
sbb
xchg
xor
jmp
sahf
cmp
out
add
xchg
ja
mul
stos
xchg
jnp
sbb
jo
fisttp
and
das
mov
mov
mov
bound
dec
lock
aaa
inc
fidivr
test
pop
retf
inc
loopne
cmp
dec
push
inc
(bad)
es
cmps
cmps
xchg
xchg
jbe
cdq
mov
adc
jne
and
scas
dec
(bad)
imul
jne
xchg
or
cmp
lods
pop
ins
ret
neg
and
xor
mov
cdq
stc
adc
or
out
sbb
sbb
dec
fiadd
sbb
xor
div
es
es
repz
push
outs
outs
pop
xor
jb
test
jmp
sbb
int3
stos
fisubr
out
sti
sbb
and
sbb
inc
cmp
sahf
in
sub
pop
xchg
and
mov
sbb
push
cmp
sbb
mov
jb
popa
add
cli
inc
cdq
push
add
aas
cmp
mov
pop
add
cmp
fcomp
mov
shl
cld
push
adc
pushw
popf
pop
in
jge
adc
mov
adc
adc
mov
push
out
in
into
dec
test
or
jg
mov
adc
xor
dec
pop
xchg
les
loope
sbb
or
pop
cdq
pop
clc
pushf
test
xor
and
stc
test
dec
cs
lock
outs
mov
fwait
or
repnz
cs
mov
lods
xchg
cdq
das
pop
cdq
pxor
scas
jae
mov
es
mov
jbe
mov
pop
ins
xchg
scas
adc
(bad)
call
fidiv
cmp
aad
jns
sub
and
mov
pusha
aas
or
dec
inc
push
popf
gs
imul
add
repz
xor
enter
xchg
retf
fwait
lods
inc
repz
mov
mov
mov
repnz
push
stos
cld
idiv
push
cli
adc
add
lods
shr
fstp
push
sbb
fnstenv
mov
sbb
shl
cmp
mov
(bad)
and
dec
int3
dec
mov
and
xchg
popf
mov
ds
popa
out
pop
mov
pushf
dec
ret
and
lea
or
inc
arpl
inc
pop
unpckhps
cmp
fnstenv
(bad)
jno
shl
sub
jb
dec
fnstsw
inc
repnz
data16
and
jne
mov
mov
pusha
sahf
jne
shr
xchg
cs
pop
dec
fwait
jp
mov
popa
xchg
mov
and
adc
xor
int
jae
retf
pop
in
in
sub
push
mov
cmp
lods
mov
or
xor
cld
mov
in
and
test
data16
movs
xchg
popa
inc
(bad)
cmp
push
inc
movs
push
das
push
bound
mov
mov
mov
into
pop
fucomip
dec
test
test
pop
mov
push
lock
(bad)
and
imul
dec
xor
cmp
and
bound
cmp
sub
call
pop
push
or
jg
mov
popa
jecxz
lods
out
push
mov
dec
cmp
adc
in
jne
xlat
xchg
and
sar
lock
mov
push
dec
pop
inc
cmp
fiadd
add
add
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
dec
or
push
dec
inc
or
add
or
add
add
add
add
or
add
add
pushf
das
cmp
add
add
inc
inc
add
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
push
ret
sub
add
or
dec
inc
inc
push
pop
inc
in
shl
aam
add
lock
fldenv
enter
xor
jnp
(bad)
popf
mov
shr
mov
mov
jno
cdq
popf
int3
clc
xchg
mov
in
jno
mov
stc
mov
dec
clc
add
movs
shr
arpl
cmp
inc
out
pop
shl
idiv
push
sub
pop
jecxz
dec
mov
jge
dec
pop
mov
mov
mov
fdiv
cmp
sbb
shl
adc
das
aam
jg
ja
cmp
in
mov
jne
fcmovnu
loope
test
jns
or
jg
int
ja
push
push
push
xor
test
mov
mov
and
sub
mov
xchg
jb
arpl
lock
ret
cmps
push
mov
adc
movs
pop
cmps
dec
push
enter
xchg
popf
cmp
in
xchg
call
lods
jns
add
repnz
inc
inc
mov
jb
dec
icebp
aaa
in
push
inc
in
push
mov
or
aam
xor
shr
leave
cmp
jecxz
xor
test
push
jnp
mov
xchg
ficom
pop
stos
xchg
inc
push
fcmovnu
iret
or
shl
fistp
mov
fcomp
gs
lahf
ret
popa
dec
fsubr
fadd
mov
fnstcw
mov
mov
sub
pushf
fmul
pop
in
xchg
jmp
xor
adc
sub
mov
inc
jmp
and
adc
dec
loop
mov
pop
jmp
or
lahf
stos
mov
cs
stos
mov
lods
push
mov
mov
dec
mov
sbb
test
fdivr
mov
push
les
sti
push
jnp
xor
imul
jb
mov
adc
sbb
fsub
outs
sbb
or
mov
sbb
mov
mov
or
mov
sbb
aaa
pop
or
stos
xchg
pushf
in
icebp
idiv
push
dec
das
sbb
mov
sbb
loopne
(bad)
jns
stc
arpl
sub
int3
and
inc
addr16
jne
jg
ret
inc
repnz
call
fbld
push
sub
sbb
or
into
call
icebp
nop
test
sub
iret
pop
ds
xor
das
jp
(bad)
mov
mov
aaa
dec
inc
adc
retf
xchg
loopne
add
pop
mov
xor
(bad)
inc
js
jno
push
sbb
mov
sbb
xor
sub
out
dec
cmp
gs
test
cmp
(bad)
fild
fdiv
sub
pop
ss
jle
add
adc
popf
sub
mov
or
pop
movs
test
mov
pushf
add
hlt
fadd
xor
retf
popa
int
adc
lods
mov
inc
mov
push
inc
data16
jb
sub
inc
mov
pop
jne
cmp
in
pushf
or
ret
add
xchg
repz
std
push
push
mov
inc
sti
enter
adc
in
leave
mov
inc
test
fiadd
dec
sti
dec
(bad)
pop
out
(bad)
mov
(bad)
jmp
aad
mov
aad
mov
fadd
imul
fsubr
cmp
cld
fsub
mov
cmp
mov
cwde
inc
scas
ret
push
mov
mov
(bad)
enter
jno
mov
repnz
cld
or
out
pop
mov
or
movs
mov
bound
pop
or
pushf
inc
xchg
jb
push
pop
mov
imul
adc
cmc
and
xchg
pop
fdivr
mov
test
cmp
sub
inc
cmp
in
aam
icebp
and
shl
dec
in
push
or
pop
dec
dec
sub
mov
scas
arpl
jo
cmp
fsubp
xchg
and
xchg
das
mov
cs
lods
jne
cmp
sub
les
push
fsubr
cmp
pop
cli
aad
outs
mov
outs
ficomp
pop
lahf
imul
mov
out
mov
jmp
sahf
imul
cwde
and
cmp
std
push
or
pusha
out
xor
sub
into
xchg
leave
sahf
int
movs
xchg
dec
sub
cmps
test
or
loopne
cmp
lds
inc
jl
data16
or
xchg
dec
ins
movs
neg
or
xor
in
test
lock
je
test
fxch
mov
div
leave
push
jmp
int3
and
or
or
inc
mov
or
call
int
push
and
jns
movs
xlat
pop
sbb
cld
call
out
addr16
lods
daa
pushf
sti
loopne
cmps
pop
mov
push
out
pusha
fdiv
int
dec
hlt
mov
pop
jmp
(bad)
sbb
inc
mov
es
arpl
movs
pusha
pop
pop
xchg
and
mov
aas
pop
retf
scas
icebp
pop
pop
icebp
sahf
jmp
cmp
dec
arpl
xchg
mov
pop
fdiv
adc
loop
push
mov
mov
push
neg
xor
mov
mov
outs
mov
sbb
(bad)
repz
adc
cmc
pop
mov
arpl
jnp
mov
push
daa
test
xchg
inc
add
sbb
mov
jp
mov
mov
mov
lock
test
push
push
popa
mov
sub
in
jg
pop
(bad)
loopne
jno
pusha
push
shl
and
jns
sti
push
daa
pop
les
ret
jmp
cmp
adc
inc
cmp
rcl
jb
cli
and
mov
les
ds
pop
mov
xchg
(bad)
fst
sub
adc
push
fisub
mov
scas
dec
out
push
cmp
cs
or
call
rcr
aas
paddsw
pop
nop
outs
sar
movs
cmps
inc
(bad)
mov
data16
es
xchg
adc
jg
pop
xchg
cmps
shr
fbstp
sub
pop
out
xor
jae
(bad)
cmp
cmp
sub
(bad)
enter
movs
sub
mov
js
adc
xlat
call
call
vandpd
xlat
mov
or
inc
mov
jmp
cmp
sub
mov
pop
aas
test
clc
cmp
jge
cmps
outs
mov
jle
out
mov
add
pop
adc
cmps
push
add
out
(bad)
popa
mov
rcl
mov
iret
jae
mov
lods
xor
mov
aam
dec
or
popa
ja
jmp
mov
inc
cmp
sbb
pop
js
sbb
out
idiv
inc
in
jmp
out
mov
nop
(bad)
daa
add
add
cdq
sub
xchg
shr
lds
test
pop
ins
outs
add
ss
mov
(bad)
push
cmps
outs
or
mov
mov
imul
add
aaa
mov
mov
scas
jne
sets
div
jno
addr16
push
or
xchg
push
loope
pop
movs
iret
cs
pushf
test
retf
or
scas
or
adc
jmp
dec
pop
inc
repnz
dec
add
inc
fild
(bad)
mov
dec
dec
cdq
or
ja
cld
mov
xchg
push
mov
into
jae
daa
fcom
or
cmp
adc
or
or
aas
mov
dec
dec
sub
rcl
sub
xchg
or
push
push
aad
cmc
in
(bad)
clc
shr
aas
add
mov
lods
sbb
xor
cmp
cdq
add
xlat
test
mul
loop
hlt
les
jl
jle
jp
int
xchg
pop
lock
imul
push
bswap
lea
loope
mov
push
xchg
iret
(bad)
push
retf
(bad)
push
hlt
rcr
sub
outs
mov
jbe
das
outs
inc
adc
sub
out
lahf
inc
and
pusha
xchg
jns
movs
loope
mov
xor
push
pop
(bad)
sar
repnz
loope
(bad)
xor
bound
jmp
pop
mov
jge
pop
and
inc
sti
jmp
test
cli
lahf
mov
int
in
sbb
jl
fimul
push
in
cdq
out
xor
aad
test
mov
test
pop
push
pop
pusha
dec
push
nop
jmp
add
xchg
sbb
in
(bad)
lea
fistp
pop
stc
and
outs
movs
mov
pop
add
loop
sub
aaa
inc
call
add
pushf
push
xor
xchg
dec
imul
dec
add
out
pop
iret
mov
ficom
imul
inc
xor
clc
pop
ffree
aaa
call
fild
xchg
xor
and
ds
icebp
xor
movs
aad
pop
icebp
repnz
add
lock
mov
(bad)
sbb
jmp
fs
loopne
cli
adc
inc
xchg
jbe
popf
imul
repz
rcr
xchg
adc
dec
push
cmp
fs
cmps
fldl2t
dec
sub
jae
gs
jl
gs
std
(bad)
(bad)
loope
lods
xchg
out
cmp
mov
imul
or
repz
fistp
mov
aam
rcr
les
sub
test
pop
jp
adc
(bad)
mov
fcmove
cmps
xor
and
leave
dec
gs
call
repz
popf
icebp
mov
and
fmul
sbb
imul
test
jmp
push
and
js
fnstcw
add
popa
mov
dec
inc
or
xor
mov
cli
popf
lods
sub
inc
or
xchg
cmp
stos
popa
stc
in
mov
shr
das
ins
fimul
movs
dec
inc
sub
jmp
inc
dec
adc
sbb
out
fisttp
pop
in
mov
daa
not
push
fmul
inc
iret
outs
jg
pop
leave
xor
xor
sahf
int3
cwde
jb
cmp
mov
daa
hlt
rcr
mov
out
data16
fs
sbb
clc
xor
pop
push
aaa
sub
xchg
movs
loopne
cmp
pusha
sbb
mov
add
test
not
loope
cmp
cwde
dec
imul
add
test
dec
shr
jne
fist
cmp
cwde
cdq
mov
mov
loope
rcr
push
fadd
add
arpl
sub
mov
pop
cli
sti
push
mov
gs
sar
add
scas
jge
jmp
repnz
mov
mov
cmp
cmps
sahf
xor
outs
lahf
leave
dec
mov
mov
in
pop
add
loop
aaa
pop
jns
repnz
rol
pop
jnp
sub
or
pop
jg
mov
imul
push
sbb
test
dec
cs
jno
stos
push
xchg
mov
mov
repnz
dec
sbb
sub
imul
pop
(bad)
imul
(bad)
push
sub
jecxz
and
fwait
add
imul
ret
xchg
imul
cmps
push
repz
lea
mov
repz
nop
mov
fidiv
and
js
jp
pushf
sub
jge
gs
mov
inc
or
cld
cmps
idiv
mov
mov
push
dec
pop
inc
clc
xor
add
add
dec
inc
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
dec
or
push
dec
inc
or
add
or
add
add
add
add
or
add
add
pushf
das
cmp
add
add
inc
inc
add
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
push
ret
sub
add
or
dec
inc
inc
push
pop
inc
in
shl
aam
add
lock
ss
fnstcw
mov
xor
pushf
sbb
(bad)
pop
mov
xchg
cmp
xchg
sbb
out
cmp
idiv
pop
add
ins
bound
push
or
jno
lahf
sbb
xor
mov
stos
dec
scas
pop
and
or
xor
icebp
push
inc
js
sbb
jge
xchg
sub
fimul
fs
add
xchg
hlt
data16
cld
mov
(bad)
cmp
mov
cmps
rcr
stos
(bad)
clc
gs
icebp
in
push
stc
ins
test
ds
stos
or
retf
dec
cmp
shr
dec
push
imul
and
xlat
mov
jmp
push
sar
das
clc
addr16
xchg
dec
call
imul
dec
cmp
imul
push
jb
xchg
data16
inc
psubq
pop
sub
xchg
out
mov
jmp
adc
mov
mov
jns
and
push
outs
add
fdiv
or
popf
lea
sub
aam
test
add
mov
loope
push
aad
fmul
xchg
jne
fdivr
jne
call
out
mov
pop
(bad)
lods
mov
pop
and
xchg
dec
div
adc
bound
adc
dec
aaa
xchg
mov
clc
sti
sar
jne
mov
push
jmp
scas
push
jg
in
inc
loop
(bad)
fistp
and
repnz
pop
(bad)
mov
stos
(bad)
hlt
pusha
rcr
int
scas
loopne
mov
add
test
test
jmp
xchg
lahf
mov
jb
in
jno
pop
stc
js
aaa
stc
inc
fidivr
in
add
push
call
jns
bound
arpl
in
xlat
sbb
sbb
push
dec
push
inc
pop
mov
mov
jle
imul
out
fstp
cs
xchg
push
pop
in
inc
popa
sar
mov
mov
add
sbb
xor
mov
ins
test
jb
cmp
out
jbe
outs
or
dec
and
in
push
push
call
cwde
popf
cmp
call
in
inc
fwait
repz
dec
(bad)
cmps
shr
xor
xchg
imul
sub
and
lock
and
fsubr
stos
cli
fdivr
stos
xor
bound
dec
out
push
push
pop
cwde
sbb
add
jno
cmp
jmp
mov
fcom
shr
cmp
ds
pop
loope
js
push
lods
mov
test
lahf
push
sahf
pop
cmp
xor
and
stos
imul
and
ficomp
in
xchg
xlat
mov
repnz
and
rol
imul
(bad)
mov
and
sbb
lock
dec
ret
mov
repz
cld
adc
ins
cmp
and
fdiv
ds
cld
adc
jo
adc
cmc
inc
or
jp
std
fstp
ds
cmp
or
sbb
sbb
cmp
xor
pop
ss
xchg
inc
or
cs
(bad)
inc
xor
mov
xor
add
scas
test
out
aam
sbb
repnz
mov
mov
ret
cmp
mov
pop
outs
inc
add
xor
mov
and
pop
mulps
xchg
fistp
clc
push
dec
dec
out
(bad)
pop
loop
retf
shl
cmp
pop
in
adc
mov
pop
mov
cld
mov
mov
ret
adc
fist
in
arpl
add
test
sti
ss
loopne
cmp
xchg
test
add
mov
(bad)
ins
inc
and
cdq
inc
dec
add
lock
js
pop
in
in
push
scas
xlat
(bad)
lock
mov
sub
dec
jge
inc
retf
inc
dec
mov
sbb
and
sbb
std
lods
sub
pop
stos
or
dec
cmp
and
xchg
sahf
les
sub
dec
sbb
sub
rep
adc
pop
mov
sbb
push
addr16
adc
mov
mov
lahf
cmp
int
fld
jmp
mov
dec
aas
fist
icebp
iret
popa
pop
dec
sub
inc
ja
pop
out
mov
push
push
ror
sub
mov
jmp
xchg
add
sbb
or
(bad)
lahf
je
loope
mov
sub
sub
sbb
mov
sbb
push
leave
cmp
aaa
inc
jb
and
mov
(bad)
call
out
call
movs
mov
mov
in
sbb
and
les
dec
out
mov
outs
cmc
xchg
mov
xor
dec
lea
inc
and
pop
dec
push
das
sub
repnz
pop
cdq
jno
adc
sbb
cmp
js
iret
aas
clc
mov
or
int
jae
ds
mov
mov
mov
jl
out
jge
adc
icebp
cmp
inc
jmp
int
pusha
pop
fcom
imul
or
pop
ds
jle
push
ins
jnp
xchg
imul
mov
mov
data16
rcl
sbb
int
inc
(bad)
adc
adc
mov
ins
js
cmp
mov
add
cmp
call
cmp
push
inc
fistp
mov
jb
jnp
jg
stc
mov
iret
cmp
scas
mov
test
push
mov
scas
rol
jge
cli
arpl
xchg
int3
add
fst
stos
retf
ins
jmp
jmp
xchg
icebp
cld
push
jno
sub
hlt
push
mov
dec
and
sti
outs
imul
ins
xchg
mov
or
aad
sbb
mov
shl
mov
ins
aaa
shl
nop
stc
mul
dec
mov
sbb
loope
push
mul
pop
inc
push
in
arpl
lock
lods
rcl
mov
sbb
or
repz
jle
jo
test
out
test
mov
fsub
push
stos
dec
sub
int
mov
in
pop
pop
loope
jmp
xor
jmp
arpl
jno
int3
xchg
(bad)
sub
lea
bound
adc
dec
dec
push
out
xchg
inc
sub
sbb
cmps
dec
xchg
pop
(bad)
addr16
into
adc
ret
out
push
xor
ror
imul
fmul
adc
stos
les
xchg
sub
loopne
sbb
pop
in
test
jp
fistp
fisub
jae
rcr
cmps
(bad)
retf
pop
sbb
sti
scas
repz
mov
sbb
cmp
push
mov
pusha
hlt
and
cmp
pop
xchg
out
ds
sub
pop
ja
sub
cmp
jmp
setnp
nop
or
sub
mov
or
or
loop
(bad)
jl
retf
int3
out
stos
fs
mov
mov
sub
add
cmp
jl
pop
ret
cs
pop
(bad)
sahf
mov
daa
inc
mov
or
cwde
loopne
mov
cld
sub
movs
dec
fisttp
xor
dec
jle
ret
mov
(bad)
push
pop
scas
xchg
mov
sub
mov
sub
or
push
addr16
xor
mov
test
xchg
jno
popf
(bad)
das
fimul
ins
or
push
ficom
cmp
fldcw
pushf
fcom
cmps
lahf
call
cmp
add
adc
pop
pop
pop
pop
movs
adc
push
sti
out
(bad)
rol
jmp
sbb
xlat
int
inc
push
loop
adc
repnz
and
xor
test
xor
xor
jae
hlt
pop
adc
dec
sbb
or
fwait
mov
mov
mov
cmp
outs
out
iret
test
dec
mov
sub
xor
fabs
dec
and
sub
add
les
mov
int
cmp
mov
push
repnz
mov
dec
dec
stos
adc
add
ret
xchg
jae
in
scas
xor
mov
push
mov
hlt
sbb
(bad)
jl
jnp
fsubr
jmp
jmp
mov
mov
mov
es
ret
pop
(bad)
cli
ja
ror
in
popf
out
cmp
leave
sbb
inc
je
int3
imul
rsqrtps
lea
ins
sub
jbe
xchg
std
aad
adc
pop
cmp
pop
outs
cmp
xchg
test
cmp
pop
push
add
push
inc
sub
repnz
pusha
pop
mov
fwait
stos
pop
mov
jge
pop
mov
mov
stos
and
stc
iret
mov
out
repz
mov
idiv
lock
and
cmp
adc
sbb
ds
jecxz
(bad)
sub
fcmovu
adc
ret
repnz
and
mov
rcl
inc
pop
in
mov
pop
movs
int3
inc
ficomp
cmp
dec
add
mov
xchg
sbb
retf
xchg
data16
add
xchg
xor
ss
dec
mov
inc
test
xchg
pushf
ins
jmp
xor
ss
cld
stos
and
in
push
ss
mov
test
repz
in
add
add
stc
sahf
inc
mov
in
adc
popa
mov
sar
call
pop
adc
int
push
push
and
xchg
xchg
push
pop
or
or
test
cmp
mov
cmp
outs
push
fcmovb
mov
sub
mov
jmp
adc
cmp
neg
cld
int3
push
lahf
hlt
ficomp
dec
int3
push
push
loope
out
jno
pop
and
cmp
not
mov
mov
in
lahf
dec
nop
daa
cmp
push
pusha
les
out
dec
sub
rol
add
mov
lock
pop
loope
out
(bad)
cs
ds
push
jge
mov
ins
(bad)
xor
movhps
gs
jecxz
sbb
push
rol
ja
je
sub
mov
test
gs
and
push
cmp
retf
mov
loope
scas
mov
dec
sbb
retf
inc
mov
stos
jmp
cmp
fldcw
loope
push
mov
xchg
cmps
mov
xor
in
call
pusha
mov
push
xchg
fs
jb
fnsave
sub
xchg
mov
lock
rcl
cmp
mov
pop
shr
into
mov
aam
test
jne
cs
mov
pop
hlt
cmc
cs
(bad)
sub
ins
sahf
xor
mov
ror
mov
xlat
aas
mov
mul
push
mov
push
call
jge
jge
stos
retf
push
push
(bad)
sub
aas
cmps
fisubr
inc
mov
or
mov
mov
movs
icebp
or
cwde
aas
aas
(bad)
cmp
int
test
xchg
inc
movs
sbb
pop
push
push
mov
mov
retf
adc
dec
inc
cmp
sbb
out
shl
push
fwait
or
(bad)
mov
imul
mov
xchg
retf
jp
adc
ja
(bad)
ins
or
add
cmps
add
call
ror
lahf
jg
inc
dec
lock
cld
syscall
fmul
inc
xor
add
dec
inc
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
dec
or
push
dec
inc
or
add
or
add
add
add
add
or
add
add
pushf
das
cmp
add
add
inc
inc
add
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
push
ret
sub
add
or
dec
inc
inc
push
pop
inc
in
shl
xchg
or
add
xchg
imul
cdq
xchg
shl
rol
dec
mov
add
rcr
and
sbb
leave
retf
inc
ficomp
icebp
jle
cld
test
add
cwde
in
out
xchg
test
mov
cld
push
(bad)
jmp
in
push
out
(bad)
mov
ret
loop
lods
(bad)
xlat
out
leave
aaa
dec
cdq
mov
add
push
fimul
aaa
repz
je
ins
push
and
repnz
push
dec
frstor
lock
sub
sub
and
aas
push
inc
jmp
lahf
cld
push
leave
ret
mov
jge
iret
xor
dec
stc
lods
daa
xlat
and
(bad)
inc
test
jo
jmp
js
cmp
into
outs
adc
mov
and
push
call
sub
lds
push
inc
repz
ficomp
out
xchg
dec
cwde
into
inc
je
push
es
scas
pusha
cdq
loope
dec
jmp
adc
push
or
retf
add
push
cli
jmp
mov
mov
pop
dec
adc
popf
in
pop
cmp
mov
mov
in
dec
int
movs
aam
ins
fisubr
xor
xlat
call
push
dec
lods
sbb
mov
cmp
pop
dec
pop
xchg
icebp
in
cmp
(bad)
sahf
inc
cmp
nop
fs
mov
loopne
retf
xor
xchg
jae
xchg
mov
(bad)
adc
arpl
pop
or
mov
pop
cli
xchg
mov
inc
movs
jmp
arpl
cmp
test
push
fs
push
scas
addr16
mov
outs
sbb
dec
dec
pop
test
or
test
cmp
into
in
xchg
shr
addr16
mov
xchg
mov
xchg
cld
gs
dec
jbe
mov
mov
adc
mov
dec
stos
scas
loop
mov
outs
xor
gs
xor
pop
pop
pop
dec
fidiv
jle
inc
sahf
inc
xor
sbb
call
sub
sub
jns
cld
adc
in
bound
addr16
movs
mov
ret
jno
mov
push
xor
(bad)
cmp
inc
inc
hlt
or
adc
push
ficomp
ins
dec
test
test
test
xchg
or
(bad)
mov
cmc
neg
fld
out
mov
sbb
mov
dec
mov
dec
lods
or
stc
pop
and
mov
sub
test
push
push
push
ss
jb
sbb
jmp
enter
cs
test
adc
jbe
inc
dec
adc
push
sbb
adc
sbb
daa
dec
sub
ss
and
icebp
push
xor
stc
push
mov
fiadd
xor
xor
test
imul
cmp
imul
adc
mov
aam
fild
(bad)
fcom
cmp
lods
hlt
cwde
shl
ins
jmp
call
dec
mov
ins
cld
jbe
sbb
popf
add
dec
push
mov
(bad)
mov
rcr
push
cmp
xchg
iret
rcr
inc
das
shl
add
jb
jo
mov
movs
daa
dec
int
adc
push
repz
adc
mov
pop
dec
pop
sub
xchg
jnp
fdivr
jp
repz
ss
add
adc
repz
arpl
pop
addr16
aaa
outs
aad
mov
dec
in
cdq
cmp
fucomi
(bad)
dec
jge
mov
jb
movs
xchg
mov
cs
xor
ret
cld
test
push
mov
aas
sub
pop
outs
mov
(bad)
int
cmp
push
mov
scas
and
shl
call
cmps
push
outs
aaa
sar
scas
in
and
repz
jge
fldenv
cmc
xchg
ja
push
adc
add
popa
test
imul
and
pop
pop
jp
and
mov
fidivr
xchg
dec
popa
int
bnd
rol
shl
and
mov
xchg
sub
icebp
xchg
(bad)
xor
movs
outs
inc
shl
mov
pop
xlat
fistp
mov
xchg
push
in
push
fnstsw
jl
in
inc
movs
mov
ret
cmp
push
lea
fidiv
push
lods
push
gs
adc
or
pusha
and
jle
sbb
(bad)
dec
mov
jae
push
dec
push
cmps
fisub
aad
lds
push
mov
cdq
mov
arpl
stos
(bad)
sti
xor
(bad)
(bad)
cmp
cmp
sub
pop
sbb
ss
(bad)
push
fs
(bad)
jmp
(bad)
aad
(bad)
xchg
mov
mov
sub
inc
xor
or
pop
test
pop
into
pop
cs
jae
hlt
xchg
(bad)
mov
div
shl
leave
clc
push
icebp
outs
mov
mov
(bad)
pusha
inc
test
or
ins
xlat
dec
and
sub
xchg
out
jns
out
into
pusha
test
pop
or
dec
inc
lods
jl
in
movs
js
push
push
fild
mov
inc
addr16
pop
add
pop
pop
jbe
popa
loope
jne
push
bound
push
jecxz
(bad)
in
and
inc
or
scas
xchg
out
sub
sub
and
adc
and
(bad)
lods
jle
inc
sahf
cld
and
jb
mov
mov
pop
and
jns
aaa
mov
movs
das
mov
lock
int3
fdivr
mov
shl
retf
xor
ins
lahf
in
xchg
(bad)
arpl
adc
inc
push
fmul
xchg
retf
out
scas
out
das
dec
sbb
or
push
pop
mov
jae
mov
arpl
pop
sahf
mov
outs
pop
mov
cld
scas
mov
sbb
test
adc
and
xor
mov
outs
cs
cmps
stos
sti
add
test
mov
dec
pushf
add
mov
push
lods
pusha
out
cmps
or
retfw
and
push
jae
mov
mov
ins
adc
(bad)
jg
pop
out
arpl
xchg
ins
fstp
jns
pop
xchg
sti
mov
xchg
xchg
loope
repz
imul
add
ret
loop
adc
push
sbb
push
jecxz
xor
adc
pop
ret
cmp
arpl
(bad)
lock
jae
std
fisub
cdq
mov
test
stos
mov
imul
xor
pushf
or
sub
push
adc
push
or
aaa
fist
xchg
fs
inc
and
sbb
adc
outs
jnp
aas
and
pop
sub
jl
fild
imul
mov
fistp
into
cli
lds
push
inc
mov
mov
xchg
mov
add
xchg
jo
pushf
lock
dec
xor
mov
ja
sbb
and
mov
cmp
in
in
or
push
sbb
xchg
mov
jae
xor
cmps
and
loopne
mov
or
xchg
neg
inc
test
or
shl
sub
inc
aas
je
jae
ds
xchg
call
addr16
pop
clc
out
lea
xchg
sub
pop
dec
mov
(bad)
and
fcmove
and
xchg
pop
xor
mov
or
jae
mov
nop
pop
fmul
xchg
push
ret
retf
push
adc
and
jne
in
mov
jge
dec
and
push
or
adc
shl
rcl
add
mov
inc
imul
mov
sahf
iret
notrack
enter
fistp
pop
out
fld
fadd
push
xchg
adc
push
(bad)
and
mov
mov
push
enter
(bad)
inc
mov
ror
ret
hlt
mov
mov
and
mov
repnz
leave
rol
enter
pop
mov
out
ja
pop
xchg
fsubr
pop
push
pop
jge
pop
mov
repnz
inc
push
dec
into
sbb
iret
test
jecxz
pop
or
div
add
scas
aam
jae
xchg
xor
stos
pextrw
push
push
and
hlt
dec
test
in
pop
jns
in
rol
jp
xor
test
pop
je
out
clc
dec
outs
lods
pushf
lea
into
ss
loopne
clc
stos
jge
nop
cmp
(bad)
cdq
mov
mov
loope
xor
jmp
jno
mov
dec
jecxz
cld
scas
or
mov
sub
inc
cs
(bad)
rcr
pop
jle
shr
xor
int
scas
xor
mov
adc
cmp
test
enter
or
adc
lods
xchg
lock
push
cmp
inc
push
pop
cdq
sub
lahf
xor
into
imul
xchg
jo
mov
ins
pop
in
imul
test
addr16
mov
jl
stc
je
jge
cmp
arpl
lahf
mov
dec
sub
sub
pop
pop
leave
cmc
mov
cld
je
popa
add
fild
sbb
add
and
cmps
mov
cmp
jne
sub
dec
mov
cmp
popa
stc
arpl
inc
and
out
mov
and
aas
hlt
(bad)
(bad)
leave
lahf
jle
nop
daa
out
pop
inc
aad
ret
and
mov
xor
sub
jnp
pop
fisub
xchg
dec
(bad)
jb
xlat
sbb
movs
ret
jb
test
lods
mov
add
jp
mov
pop
shl
cmps
pop
ror
push
jmp
xor
adc
test
ret
mov
adc
pop
mov
movq
sub
ss
gs
mov
dec
jae
mov
shl
mov
xor
sub
inc
out
test
push
push
fsubr
sbb
sbb
add
dec
scas
or
mov
(bad)
movs
in
stos
ja
fadd
cmp
fisub
cdq
jmp
or
sbb
aam
retf
aam
pop
push
repnz
(bad)
jae
shl
cmp
mov
sub
test
dec
enter
enter
fisubr
or
cmp
sbb
xchg
fistp
int3
(bad)
faddp
jmp
jmp
or
xchg
add
and
pop
ficomp
mov
xor
jle
test
popf
adc
repnz
dec
rcr
inc
pop
xchg
loopne
push
push
pop
push
cmp
call
adc
mov
lods
scas
add
sbb
dec
(bad)
call
dec
hlt
sbb
push
jle
movs
xor
pop
dec
sub
ret
pop
(bad)
nop
div
mov
mov
or
int3
push
add
in
jge
rol
push
bound
rcr
retf
xchg
cmp
rol
sbb
ret
push
push
int
arpl
fidiv
push
idiv
popa
push
out
addr16
les
shl
js
push
(bad)
mov
push
xchg
mov
cwde
cmp
inc
adc
das
imul
clc
punpcklwd
sbb
(bad)
pop
sbb
clc
pop
inc
bndldx
mov
pop
adc
(bad)
cmc
sbb
mov
xor
or
or
(bad)
mov
cmps
pop
test
sbb
cmp
mov
mov
shl
hlt
dec
cs
aam
push
xchg
ja
call
push
pushf
mov
jcxz
mov
push
xor
in
cmp
cmp
ja
out
sar
lock
jo
sub
fild
scas
add
add
dec
inc
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
dec
or
push
dec
inc
or
add
or
add
add
add
add
or
add
add
pushf
das
cmp
add
add
inc
inc
add
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
push
ret
sub
add
or
dec
inc
inc
push
pop
inc
in
shl
and
(bad)
jecxz
lock
into
jmp
aaa
inc
je
mov
in
jo
and
adc
test
idiv
sbb
jnp
mov
xchg
adc
sahf
xchg
popf
(bad)
icebp
std
and
pop
add
pusha
sbb
fs
pop
daa
and
out
inc
pop
loopne
shl
arpl
jecxz
leave
xchg
fstp
ja
mov
retf
add
sbb
popf
cli
jmp
pop
sbb
in
fldenv
es
cdq
lds
pop
mov
mov
sbb
mov
mov
mov
jge
xchg
mov
out
push
cmp
push
cmps
iret
xchg
cwde
mov
ficomp
sahf
xlat
mov
stc
loope
push
std
stc
cmp
pop
pop
scas
(bad)
jne
repz
lods
jmp
ret
mov
xor
or
jb
jle
push
dec
ja
and
xchg
push
ret
mov
pop
push
stos
test
cli
push
xor
cmp
inc
leave
xchg
pop
ja
mov
int
cmp
stc
xchg
popa
(bad)
mov
dec
mov
cmp
inc
mov
pusha
dec
icebp
adc
add
jmp
cmp
fcom
and
mov
(bad)
sbb
mov
cdq
mov
addr16
dec
fistp
lahf
(bad)
dec
imul
jbe
push
add
outs
into
mov
int
fcomp
inc
mov
fdivr
cmp
sbb
mov
jp
dec
and
mov
data16
fwait
ins
std
sub
push
dec
xor
dec
mov
stos
or
xchg
fcomip
add
jmp
or
sub
stos
bound
lock
ror
pop
mov
or
pusha
ret
add
xchg
mov
or
xchg
mov
(bad)
mov
pop
out
adc
out
pop
inc
fdivr
mov
repz
cmp
jns
push
icebp
lahf
adc
mov
mov
out
and
sbb
pand
or
iret
push
ficom
mov
movs
fcom
movs
lods
fs
jge
cmp
lods
daa
pop
cmp
sbb
mov
xor
test
xchg
dec
jbe
push
jmp
ins
ret
add
jp
sub
jp
xor
cli
mov
or
idiv
(bad)
stos
fdivr
push
xchg
(bad)
repnz
mov
ss
cmc
pop
test
or
imul
fistp
mov
lock
mov
iret
pand
inc
jb
int
shr
jne
xchg
adc
sub
xchg
pop
cli
mov
(bad)
pop
cs
xor
jmp
cmp
int3
mov
add
ret
pop
and
inc
enter
cld
out
jge
movs
mov
(bad)
sti
int3
ss
jmp
ja
call
ret
adc
pop
retf
xor
ins
idiv
lock
into
sub
mov
jmp
or
daa
scas
jmp
fwait
sbb
stc
int3
mov
mov
adc
repz
pop
xchg
jmp
jp
cmp
and
cdq
in
(bad)
mov
cmps
jns
xlat
sub
aam
xchg
push
fscale
dec
jle
jl
xor
and
push
dec
ret
adc
scas
jb
test
les
and
pop
pop
stc
mov
cmp
fs
clc
sbb
sbb
jno
pop
cwde
repz
cmp
fcmovnb
sbb
aas
cmp
add
lock
xlat
lods
inc
and
xor
popa
sbb
mov
jne
mov
jns
loop
hlt
push
adc
xor
call
cwde
test
jbe
les
test
add
push
(bad)
mov
ret
push
ins
aas
jnp
clc
imul
in
inc
pushf
rol
mov
pusha
adc
cmp
adc
repnz
or
mov
cmps
xor
icebp
lock
(bad)
sub
inc
or
popf
div
lahf
inc
jno
jns
mov
push
jno
mov
ret
adc
fsub
outs
push
in
(bad)
scas
in
pop
mov
(bad)
or
mov
dec
leave
cmp
inc
pop
pop
imul
mov
cli
in
xor
xchg
push
lods
or
cmp
mov
mov
push
xchg
cmp
pop
cmp
dec
jbe
cs
out
mov
adc
test
mov
xchg
add
aam
cwde
inc
loop
lock
loop
scas
add
mov
(bad)
mov
mov
stc
ficom
xor
mov
loop
sub
ins
inc
daa
(bad)
lahf
push
inc
push
(bad)
sbb
jle
retf
push
add
into
(bad)
cmps
stos
lea
outs
xchg
jmp
cmp
or
imul
jle
cmps
inc
dec
add
inc
mov
dec
and
outs
fdivr
sbb
mov
movs
and
mov
cmps
or
fnsave
mov
ins
or
gs
jle
das
xchg
cmp
clc
mov
or
out
call
lods
or
test
pushf
sub
mov
cmp
test
ds
pop
inc
inc
jae
adc
dec
icebp
gs
bswap
fs
mov
daa
stc
dec
xchg
sub
bound
sub
loope
sub
xor
add
dec
ins
jl
add
ins
sub
pop
xor
push
mov
xlat
mov
xlat
sub
aam
sub
jns
fwait
das
enter
mov
dec
xlat
ins
test
out
in
xcrypt-ecb
cmps
mov
fstp
fwait
jl
call
cli
(bad)
mov
mov
and
and
inc
das
inc
aas
enter
aad
fwait
push
ret
in
and
shl
xchg
fld
dec
aad
or
cmc
iret
mov
cmovnp
cmp
push
sub
push
push
js
shl
pushf
aam
xchg
and
sub
icebp
sub
mov
pop
inc
cld
mov
ror
sbb
ret
test
shr
push
xor
icebp
xor
adc
add
sub
out
sub
push
cmova
ror
les
scas
out
jno
jmp
sub
cmp
gs
jne
sahf
mov
adc
jb
mov
arpl
cmc
(bad)
sbb
dec
and
shl
push
out
push
lahf
cmp
enter
push
scas
stos
shl
or
outs
cmp
inc
pop
xor
add
dec
in
lea
adc
jne
fs
bound
lods
push
add
xchg
and
(bad)
pop
out
out
popf
mov
push
add
scas
in
xor
cmp
fwait
call
and
lock
jl
adc
loope
inc
sbb
or
jns
cwde
inc
sub
xor
movs
mov
xchg
mov
pop
or
(bad)
inc
pop
rcl
daa
xchg
mov
pop
mov
pop
addr16
jmp
mov
sbb
cmc
inc
push
and
pop
push
push
add
push
out
xchg
in
pop
in
cmp
or
xchg
mov
jmp
aam
nop
sub
jne
add
rol
jo
shl
stos
push
fidiv
stos
scas
dec
and
in
les
mov
daa
cmps
mov
sbb
pop
fldcw
dec
and
jmp
scas
push
rcr
jle
inc
mov
jmp
icebp
mov
dec
(bad)
cmp
xor
ret
cmp
pop
int
lds
cmp
jecxz
mov
or
mov
cmc
cli
int3
or
lds
sti
jo
xchg
repnz
out
dec
or
lods
pop
mov
push
xchg
sbb
jg
daa
test
pop
push
popa
fistp
jnp
repz
ret
push
push
rcl
push
and
ret
jmp
adc
and
(bad)
out
daa
push
int3
add
mov
xor
popf
js
fwait
sti
sbb
inc
jmp
cld
pop
mov
jge
jns
adc
push
fild
loopne
sub
push
xor
data16
push
adc
(bad)
jp
cmc
mov
cmp
cmps
lea
sbb
jge
sti
ja
rcl
and
dec
xor
mov
push
inc
jmp
adc
fistp
aad
inc
sar
lock
daa
push
mov
in
pop
jo
and
add
sbb
mov
test
dec
out
stc
lds
enter
repnz
jg
jmp
ins
dec
jno
or
mov
jge
mov
leave
aad
and
pop
lods
aad
jae
in
add
rcr
adc
mov
jg
clc
imul
xchg
stc
jne
mov
mov
mov
aas
popf
call
and
pop
fld
ret
inc
mov
or
xchg
push
cmp
mov
loopne
int3
stos
(bad)
jmp
movs
clc
loope
jne
add
retf
cmps
imul
(bad)
sub
into
dec
push
imul
sbb
sti
mov
sbb
dec
dec
jl
in
and
fwait
call
jp
jecxz
dec
ficomp
sub
out
inc
sbb
icebp
mov
mov
adc
rcl
addr16
cmp
adc
jmp
test
xchg
imul
inc
cmps
fs
add
test
cmp
fcmovb
cwde
das
dec
adc
cs
aas
fwait
cmp
add
std
loop
aaa
dec
cmp
in
xor
adc
movs
ins
xchg
nop
jle
lea
lahf
test
call
les
cli
icebp
jmp
pop
cmp
push
mov
add
dec
add
adc
mov
mov
sub
fisub
xor
ud2
sti
fcmovbe
and
adc
stos
adc
xor
or
mov
xchg
pop
repz
xchg
xor
jae
jmp
mov
jns
cmps
inc
add
rcr
test
adc
adc
xlat
mov
mul
xor
popa
mov
fs
jmp
jb
fistp
mov
jmp
lods
dec
mov
mov
jo
and
jmp
inc
(bad)
scas
dec
enter
shl
and
lods
push
aam
mov
sub
jnp
hlt
mov
(bad)
jl
scas
ficomp
fistp
ins
or
jmp
(bad)
or
jb
mov
add
imul
es
shl
sub
xchg
repnz
jbe
jge
add
dec
sub
adc
ror
imul
pop
(bad)
xor
outs
into
lock
adc
sub
lods
test
int3
pop
jbe
pop
outs
push
rol
push
int3
mov
cmps
add
jne
push
fs
add
mov
test
in
xchg
mov
imul
jp
push
jge
pusha
jb
aam
retf
add
mov
ror
pop
jne
and
icebp
jb
mov
lea
popf
mov
mov
stos
inc
(bad)
test
fcom
push
retf
je
aaa
and
aad
shl
cmc
push
arpl
mov
loopne
mov
push
cld
sbb
sbb
aas
outs
push
pop
pop
je
push
scas
add
add
dec
inc
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
push
or
push
dec
inc
or
add
or
add
add
add
add
or
add
add
pushf
das
cmp
add
add
inc
inc
add
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
push
ret
sub
add
or
dec
inc
inc
push
pop
inc
in
aam
and
(bad)
jecxz
icebp
xlat
pop
frstor
jp
adc
sub
inc
pop
addr16
ins
inc
or
repz
xchg
jno
and
mov
xor
repz
pop
mov
push
aas
cmp
or
push
mov
ja
aaa
jg
xchg
add
in
dec
adc
mov
in
mov
push
and
fwait
ins
lea
sbb
or
jp
mov
push
(bad)
ja
outs
cmp
mov
scas
je
(bad)
fcom
or
mov
mov
push
jnp
mov
shl
call
xor
ds
add
(bad)
nop
ins
xchg
push
icebp
pushf
gs
sbb
sub
adc
out
popa
push
enter
sar
repnz
adc
dec
iret
or
or
xchg
jnp
sub
jge
xlat
and
mov
pop
push
mov
sbb
aaa
jmp
leave
dec
fucomi
idiv
outs
retf
fucomip
xor
mov
rcr
jbe
jo
leave
cmp
xchg
sbb
adc
jno
or
push
sbb
call
lea
mov
(bad)
clc
and
pop
cs
in
mov
leavew
aas
pop
mov
push
dec
pop
outs
jle
sbb
pop
in
std
(bad)
pop
lea
xchg
cs
pop
mov
xor
ins
and
fisub
push
fisttp
add
pop
arpl
pop
lea
jb
das
xor
aas
mov
inc
fadd
movs
inc
jmp
call
add
jnp
rcl
push
cmp
daa
es
bnd
mov
push
(bad)
adc
retf
jb
mov
adc
test
les
out
pusha
js
fnstcw
ins
pop
out
cmp
enter
data16
jae
scas
cmp
aas
xchg
ins
ins
jnp
(bad)
imul
jl
pop
adc
lock
dec
std
push
sahf
outs
scas
pushf
ja
stos
pop
dec
and
and
es
repz
scas
jne
or
xlat
mov
loop
sbb
and
(bad)
sub
movs
loop
mov
mov
pushf
mov
movs
push
jge
inc
jbe
dec
lock
or
ret
jne
inc
pop
jle
add
lods
stos
mov
stos
jge
in
(bad)
jmp
sbb
dec
in
les
out
inc
pop
fidiv
fdivp
cwde
rcr
mov
inc
arpl
ret
mov
xchg
call
bound
sub
mov
pusha
jge
inc
dec
pop
sub
xor
mov
xor
call
sub
inc
mov
push
push
fst
test
je
rcl
inc
cwde
and
push
addr16
jge
xchg
add
inc
sbb
xor
popf
loopne
jns
outs
push
xchg
cld
push
inc
ret
add
mov
mov
shr
in
pushf
std
push
dec
cmp
or
push
fild
cmp
loopne
dec
xchg
in
sub
adc
popf
fcmovnb
pop
pop
mov
sbb
mov
push
(bad)
jmp
je
and
out
sbb
cmp
fistp
adc
sahf
scas
out
jle
fdivr
mov
sbb
repnz
stc
push
add
and
inc
mov
dec
ins
(bad)
retf
sbb
or
(bad)
out
ss
sub
xor
pop
std
jmp
push
or
inc
sbb
icebp
sar
call
mov
dec
loope
or
imul
sub
sub
shr
mov
cdq
adc
mov
enter
daa
fisttp
ret
xor
ss
ja
sti
xlat
mov
push
cmps
es
push
sub
imul
inc
pop
fdiv
dec
retf
dec
sbb
stos
or
xor
or
cmp
mov
mov
ret
sub
(bad)
dec
pop
fsub
sub
es
jl
lock
pop
mov
(bad)
jmp
aas
hlt
retf
add
movs
pop
add
pop
das
push
xchg
fwait
(bad)
test
and
ror
add
out
add
outs
sbb
xchg
mov
mov
pop
xchg
sbb
push
ds
sbb
sbb
jb
cmp
ins
cli
aam
(bad)
pop
rol
and
add
sti
js
fst
push
or
fst
push
shl
pop
(bad)
sti
add
push
jbe
sbb
imul
movs
sub
jge
xchg
sbb
jno
in
and
popa
ja
out
sti
mov
loop
adc
pop
mov
xchg
enter
mov
scas
in
aas
mov
je
addr16
jns
adc
ins
jae
mov
fnstenv
push
(bad)
add
or
mov
das
sub
gs
xchg
add
test
and
jne
or
pop
aas
sub
ins
cs
mov
sahf
dec
stos
scas
ins
push
sti
lods
xor
inc
dec
dec
sub
repz
clc
(bad)
push
xchg
dec
push
je
es
test
adc
mov
mov
repz
or
jb
ret
jnp
(bad)
jae
add
aad
(bad)
into
ds
es
or
loope
rol
mov
push
xor
enter
test
iret
cmp
push
aad
push
(bad)
lahf
lea
xchg
movs
popf
inc
sbb
js
xor
repnz
mov
jp
adc
pop
pop
mov
fs
jbe
push
mov
mov
push
in
mov
addr16
pop
pushf
sub
dec
adc
out
ins
inc
add
cld
out
ficom
mov
rcr
mov
mov
imul
push
inc
fld
rcr
push
call
sti
cld
lods
push
icebp
sbb
add
xlat
inc
fsubr
test
mov
call
out
adc
adc
outs
fild
fdivr
xchg
jge
mov
cmc
xchg
xchg
push
ins
in
mov
retf
mov
mov
js
stc
loope
mov
cmp
cmp
(bad)
xchg
mov
ret
ss
jmp
sub
sub
xchg
jns
imul
pop
into
pop
and
cli
adc
lock
movs
sbb
movs
adc
clc
jl
(bad)
cli
cmps
fisub
fldcw
mov
mov
sahf
fst
ret
int3
jp
mov
ins
jno
mul
push
inc
add
(bad)
jg
pop
mov
sbb
mov
js
dec
mov
fistp
cdq
aas
push
xor
mov
outs
push
jbe
sbb
cmp
gs
cmp
daa
mov
dec
pop
sti
clc
mov
lea
imul
std
xchg
ds
jmp
scas
pop
movs
ja
outs
ret
ss
jmp
mov
fldenv
push
cmps
lahf
push
lea
push
test
cdq
pop
iret
or
repz
call
mov
xor
mov
xchg
adc
das
mov
bound
push
xor
lea
hlt
inc
inc
aam
push
sbb
stos
mov
and
or
cmp
lds
and
push
push
dec
add
out
push
sub
add
pop
hlt
cdq
mov
popf
(bad)
clc
cmp
push
sub
fsub
ret
iret
jp
jge
pop
fisttp
iret
xchg
(bad)
aaa
js
sti
out
in
sub
div
jnp
xor
out
ins
xor
xchg
pushf
loopne
das
pop
mov
je
cmp
out
push
ror
aas
push
mov
or
xchg
xchg
aas
cmp
rcl
scas
clc
xor
sub
test
test
in
add
dec
cmps
and
xor
dec
cld
xchg
jbe
hlt
rcl
push
sub
mov
mov
jl
cmp
dec
sbb
in
rep
int3
mov
arpl
test
jns
imul
xor
mov
jle
dec
lds
fbld
and
test
test
dec
mov
add
jmp
lds
pop
clc
gs
stc
dec
cld
sbb
pop
adc
in
dec
(bad)
(bad)
cwde
cld
call
sub
add
xchg
cwde
sub
ret
std
cmps
mov
xchg
out
icebp
call
repz
push
push
push
(bad)
cli
mov
mov
push
lods
mov
das
jg
clc
jno
aam
adc
sub
ret
dec
jp
(bad)
sahf
es
and
retf
movs
fisttp
xchg
inc
mov
dec
mov
lea
pop
inc
adc
cmps
test
cs
pop
(bad)
inc
jecxz
and
rcl
loopne
dec
xlat
pop
inc
loop
dec
xchg
adc
dec
std
jbe
xchg
xchg
xor
(bad)
pop
mov
push
cdq
movs
jl
popa
(bad)
pop
add
mov
fadd
shr
jae
pop
hlt
(bad)
pop
mov
mov
rcl
mov
pop
mov
repz
dec
mov
es
rol
out
test
jle
mov
fmul
arpl
mov
fwait
dec
aaa
cmp
sub
ins
xor
mov
aaa
test
aad
ret
adc
je
push
pop
out
push
dec
test
add
and
dec
cvtps2pi
aas
push
or
pop
mov
pop
addr16
mov
dec
call
push
mov
lods
fisubr
sar
imul
int3
xchg
or
sbb
mov
pop
xchg
cmp
cwde
inc
jns
repnz
sub
sub
dec
(bad)
inc
cmp
xchg
stos
out
inc
hlt
sub
das
sbb
ja
xor
cmp
outs
retf
pop
mov
xlat
push
ror
cmp
fistp
sub
inc
sbb
xor
aas
stos
inc
pop
fld
dec
sar
(bad)
in
xchg
test
retf
jmp
scas
and
dec
adc
xchg
mov
test
fcomi
fadd
js
mov
aam
xchg
mov
pop
cdq
adc
jns
jmp
cmp
fmul
out
mov
icebp
sti
pusha
mov
add
xlat
inc
mov
xchg
repz
ss
mov
xor
mov
pop
fadd
fsubp
cmp
dec
xchg
call
fcom
mov
xor
jg
xchg
adc
je
ret
add
cmp
sti
adc
xchg
into
mov
mov
and
fistp
jb
dec
test
xor
ins
iret
mov
xchg
push
mov
add
popf
add
xor
adc
data16
sbb
jae
int3
repnz
jge
jp
adc
sub
dec
fsub
test
pop
lea
pop
aad
repnz
ret
dec
push
ror
cdq
mov
outs
dec
das
stc
pop
fisttp
call
ss
lds
jle
out
add
aaa
scas
cmp
cmp
mov
sbb
call
push
pop
add
cmp
or
jns
xor
outs
inc
pop
push
mov
jbe
jne
mov
dec
cli
mov
sub
add
push
adc
pop
xchg
mov
inc
scas
in
push
outs
lahf
lea
ss
lock
add
cmc
dec
loopne
sar
jg
inc
lahf
add
add
aaa
inc
stos
dec
mov
add
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
dec
or
push
dec
inc
or
add
or
add
add
add
add
or
add
add
pushf
das
cmp
add
add
inc
inc
add
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
push
ret
sub
add
or
dec
inc
inc
push
pop
inc
in
shl
adc
add
loopne
retf
cdq
jno
test
and
mov
jnp
pop
mov
inc
idiv
cmp
lahf
jge
fs
mov
jecxz
sti
and
jg
ds
push
jmp
rol
imul
mov
test
dec
push
cmp
mov
fadd
jne
cs
or
call
cmp
mov
sub
mov
cs
outs
jmp
hlt
xor
fmul
jle
lea
add
jmp
cdq
or
cmps
add
sub
out
and
mov
or
add
mov
out
jmp
xchg
inc
sbb
cmp
or
inc
push
es
imul
das
test
in
and
add
or
push
ja
push
pushf
jns
imul
dec
cdq
es
fmul
call
mov
push
push
repnz
mov
push
sbb
xlat
sahf
xlat
jmp
sbb
rep
hlt
leave
xlat
push
inc
jmp
iret
push
xchg
data16
pop
aad
pop
add
sbb
dec
inc
sbb
inc
shl
xchg
(bad)
int3
and
xor
ret
push
cmps
ret
ins
push
sar
xchg
xchg
cdq
rcr
and
iret
push
dec
mov
popf
inc
arpl
rol
inc
retf
adc
sub
jmp
push
aam
mov
cmp
push
cmps
(bad)
jne
popf
imul
sub
xchg
push
push
pop
or
push
stos
push
cmp
add
xchg
xchg
in
inc
ss
mov
mov
shr
cwde
lods
jbe
ss
adc
loop
dec
call
fcom
pop
in
loop
mov
pop
int3
xchg
xor
mov
pop
dec
mov
lods
sahf
test
add
xlat
pop
add
and
das
dec
push
loop
test
test
data16
sbb
add
pop
enter
mov
pusha
xchg
cmp
push
rcr
mov
mov
inc
hlt
retf
shl
addr16
shl
sub
mov
cld
retf
pop
rol
gs
fmul
or
xor
lds
das
inc
in
int
inc
sahf
jo
icebp
cmp
out
das
cmp
jnp
(bad)
pop
sub
inc
dec
retf
loopne
mov
or
dec
mov
mov
sbb
push
cmc
cmps
nop
inc
repnz
outs
or
arpl
jo
add
cmp
jl
pusha
in
xlat
icebp
push
xchg
or
jmp
push
fadd
sub
inc
int
pusha
push
(bad)
enter
jns
jno
sbb
arpl
cmp
add
dec
adc
js
adc
mov
mov
test
gs
sbb
mov
dec
sbb
frstor
in
jge
pop
fstp
cdq
cmp
add
and
push
xchg
icebp
push
stos
sahf
jae
jmp
movs
popa
pop
cwde
adc
dec
mov
mul
inc
jmp
cli
fsubr
or
xchg
mov
jg
mov
xchg
jmp
cdq
or
mov
cwde
stos
jle
push
das
imul
enter
repnz
icebp
add
or
mov
cmp
stos
or
pop
fld
xlat
cmp
or
aaa
sahf
xchg
cs
sbb
outs
dec
inc
stos
stc
adc
fstp
and
aad
out
push
add
and
sbb
call
fcomp
(bad)
sub
clc
out
lds
jp
or
cwde
xchg
xchg
popf
pop
mov
mov
aaa
mov
push
pop
push
pop
mov
aaa
add
sub
sahf
punpckldq
pop
xor
les
inc
cmp
pop
sbb
scas
mov
dec
int3
cmps
sub
cmp
fmul
fild
nop
inc
popf
mov
mov
stos
dec
les
out
jp
inc
mov
inc
retf
(bad)
mov
adc
sub
mov
retf
fidivr
in
sbb
jle
movs
sahf
or
and
xor
dec
repnz
in
lock
mov
(bad)
pop
inc
sar
push
adc
push
jb
push
out
retf
and
mov
(bad)
pop
add
(bad)
jbe
xor
cmps
lods
aas
imul
es
popf
mov
ret
push
pop
call
and
fidivr
sahf
das
mul
outs
mov
popf
pop
mov
push
cdq
jbe
mov
pop
rol
adc
hlt
sub
mov
push
mov
jle
ss
pop
sbb
dec
popa
jbe
adc
rcl
add
dec
(bad)
pop
(bad)
int3
hlt
ss
ds
pop
mov
mov
pop
ja
fisttp
jmp
out
pushf
fistp
rcl
leave
and
push
test
cmp
fcmovb
int
jns
inc
mov
adc
imul
int3
push
ja
mov
lock
adc
movs
call
pop
into
lds
inc
cmc
nop
int3
adc
push
outs
mov
push
ret
jmp
or
imul
adc
imul
mov
xor
sar
cmc
in
iret
iret
mov
loop
in
and
pop
add
fcom
mov
lea
out
inc
dec
cmp
(bad)
ffree
movs
xchg
inc
(bad)
cmc
outs
(bad)
mov
mov
aad
jne
retf
or
lods
movs
cs
sbb
pop
jo
ficom
adc
xchg
(bad)
cmp
add
(bad)
int3
ja
fcom
out
test
xlat
(bad)
aam
jns
call
leave
sub
out
adc
lock
nop
repz
and
mov
(bad)
rol
xlat
pop
adc
lahf
add
rcl
out
in
scas
test
fs
jp
sbb
sub
xlat
xchg
cmp
inc
repz
xchg
les
fisub
sbb
popa
inc
out
outs
out
(bad)
sbb
jmp
sub
cmp
call
test
sti
leave
inc
out
xor
popf
mov
arpl
cli
out
(bad)
jmp
adc
inc
xlat
fwait
pop
mov
push
fist
xchg
mov
cli
out
push
xor
push
mov
scas
pop
test
mov
inc
sub
or
push
mov
jmp
xchg
popf
aam
sti
push
arpl
sbb
sub
dec
imul
xchg
pop
gs
iret
inc
and
mov
(bad)
jp
jo
mov
mov
adc
dec
imul
push
lds
pop
mov
and
push
pop
movs
fnstcw
inc
pop
push
ds
movs
(bad)
pop
(bad)
jecxz
xchg
push
sub
(bad)
ds
jno
aas
psrlq
in
ret
push
lods
cld
push
aaa
scas
out
retf
xchg
push
jae
xchg
out
and
xor
(bad)
ins
imul
arpl
loope
push
loopne
or
ret
imul
mov
adc
fisub
clc
daa
scas
push
(bad)
jnp
mov
sub
bound
ret
sbb
outs
push
xchg
cmp
add
or
push
sbb
pop
leave
lock
sbb
repnz
push
imul
cmps
adc
xchg
xchg
push
sahf
push
inc
sub
les
mov
pop
push
repnz
push
repz
mov
cmps
and
jne
jmp
xor
pop
stc
push
mov
and
js
push
cmp
mov
cmp
jae
jmp
dec
outs
das
iret
das
pop
cmp
xlat
movs
push
(bad)
or
sub
pop
dec
or
retf
cmps
or
cli
and
in
cmp
add
mov
shl
ror
and
inc
fs
fistp
jp
fistp
cwde
aam
test
in
mov
push
leave
dec
sbb
outs
xchg
or
adc
adc
push
ss
mov
mov
push
jmp
or
jecxz
div
es
sub
outs
sbb
cmp
(bad)
push
ins
aad
int
cwde
int3
jnp
enter
stos
push
fwait
in
xchg
je
stc
sti
and
rcr
in
repz
push
dec
jb
mov
ror
fdivp
shr
fstp
inc
or
imul
mov
call
xor
adc
fnstcw
fwait
out
out
jle
(bad)
shl
(bad)
xor
pop
cmp
imul
xchg
mov
fs
fnstenv
mul
shl
jns
(bad)
adc
mov
dec
loop
imul
popf
retf
or
push
jae
adc
(bad)
ficomp
call
pop
arpl
ror
cmp
loop
jb
mov
fs
push
mov
xchg
pop
repz
es
xor
test
xchg
pop
and
cwde
ins
lds
rol
jbe
stos
scas
mov
les
(bad)
test
cmp
(bad)
sar
add
adc
lock
addr16
inc
js
ds
test
xchg
inc
es
xor
push
popa
out
xor
add
call
in
cmp
mov
sbb
pop
mov
stos
push
push
sbb
dec
xor
out
push
mov
jl
add
xchg
inc
xor
nop
adc
cmc
or
aam
lea
sub
mov
xor
jns
fimul
sub
jae
xchg
adc
cmovle
pop
pop
sub
out
inc
pop
mov
or
test
mov
test
shr
mov
push
push
xchg
mov
sbb
xchg
mov
mov
cmp
out
das
outs
fisub
mov
(bad)
pop
add
mov
loope
xor
movs
in
inc
jle
jecxz
mov
outs
rol
inc
xchg
sti
jle
jmp
enter
in
mov
pop
mov
xor
pushf
xor
aam
sti
dec
xchg
fsincos
push
inc
outs
sub
cdq
loope
xor
xchg
sbb
jbe
and
jecxz
inc
loopne
(bad)
mov
pushf
popa
pusha
test
inc
dec
adc
pop
cmps
sub
pop
loopne
or
retf
pop
add
and
cmp
push
das
sub
fisub
int3
push
(bad)
rol
sar
fld
test
out
xchg
adc
cmp
pop
ds
mov
movs
iret
or
xor
pop
jmp
out
fadd
outs
push
arpl
scas
xchg
xchg
pop
jp
jmp
(bad)
fidivr
xor
imul
fcmovb
dec
test
out
inc
in
ins
inc
cmp
hlt
test
hlt
mov
test
jecxz
sbb
push
(bad)
not
adc
arpl
test
lock
add
sub
ins
je
std
sbb
aaa
dec
jecxz
jge
loopne
out
into
repz
sbb
pop
je
(bad)
sahf
mov
fcomip
cmp
ins
rcr
mov
xchg
iret
and
push
inc
or
in
pop
cs
and
test
in
inc
mov
jg
mov
(bad)
cmp
jnp
clc
inc
or
mov
push
dec
xchg
xchg
cwde
add
inc
mov
stc
iret
loopne
and
dec
adc
cmp
cld
sbb
aaa
lock
loopne
sar
lock
sbb
mov
add
add
dec
inc
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
dec
or
push
dec
inc
or
add
or
add
add
add
add
or
add
add
pushf
das
cmp
add
add
inc
inc
add
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
push
ret
sub
add
or
dec
inc
inc
push
pop
inc
in
(bad)
gs
xchg
or
inc
adc
nop
out
cs
adc
fwait
outs
inc
ja
sbb
sbb
and
adc
leave
call
pxor
lahf
jo
cmp
or
cmp
imul
xor
and
xchg
ins
sub
push
mov
xlat
push
or
mov
stos
or
xchg
pop
cmps
inc
ret
push
xchg
enter
mov
adc
mov
imul
mov
stc
fisubr
xchg
adc
jno
mov
mov
je
sbb
push
xlat
(bad)
loop
pop
lahf
sub
add
nop
ret
rcr
add
stc
aam
lods
mov
or
mov
js
aam
lahf
stc
bound
std
cld
sbb
add
mov
jmp
sub
sub
movs
mov
sub
jae
lock
mov
dec
sub
daa
jp
mov
in
pop
stc
loopne
mov
dec
cmp
inc
push
jno
ror
add
out
pop
and
push
pushf
ror
cmp
lods
push
daa
cmp
inc
inc
sub
stos
inc
pop
xor
ins
out
sub
jmp
movs
hlt
jbe
add
mov
ret
rcl
(bad)
cmc
ror
inc
add
clc
jp
lahf
dec
jl
aad
inc
mov
mov
xor
jbe
stos
xor
xor
adc
jne
add
mov
cmp
stc
movs
push
push
out
shl
xor
test
pusha
sbb
icebp
add
std
sbb
dec
xchg
pop
icebp
xor
jp
add
fsubr
sbb
daa
fst
or
mov
in
shl
lods
mov
pop
jge
movntq
mov
nop
cmp
jmp
xchg
push
scas
sub
cmp
inc
mov
test
pop
mul
xchg
sbb
xor
lds
sti
int3
jg
sub
js
aam
rcr
jmp
inc
call
int
clc
adc
jo
adc
sbb
fwait
std
pop
js
mov
pop
mov
adc
ror
dec
inc
adc
fisttp
and
movs
cdq
loop
ja
fmul
jl
fwait
cmc
fld
sbb
sbb
mov
mov
and
and
je
xchg
fisubr
in
out
scas
push
cs
pop
xor
adc
jp
das
je
push
aas
into
push
call
(bad)
push
lods
cs
dec
retf
cmc
leave
fild
adc
or
mov
out
pop
cmps
dec
icebp
stc
cmp
shl
pop
mov
std
movs
test
cli
pop
add
and
push
aas
push
lea
sahf
xor
mov
xor
int3
fstp
ss
call
ja
xchg
cld
or
test
sbb
cmps
xor
fistp
pop
inc
pop
ret
repz
es
cmp
add
pushf
cli
test
xor
cmps
int
out
mov
sub
mov
sti
and
cmp
inc
inc
loope
dec
ins
xor
sbb
cld
aad
sub
aaa
fwait
call
inc
add
data16
loopne
retf
adc
pusha
adc
pop
rcr
xor
int
aam
push
fcom
xor
int3
(bad)
pop
not
pop
loop
lods
jb
popf
mov
cmc
js
cmp
pop
mov
lea
outs
clc
loope
jno
enter
sbb
movs
sti
inc
sbb
ins
jnp
inc
gs
push
pop
sub
mov
outs
sbb
pop
(bad)
xchg
addr16
cmp
jecxz
std
sub
mov
sbb
xchg
xor
in
aas
sbb
add
movs
cli
out
adc
pop
(bad)
mov
or
cmp
xor
icebp
sub
call
nop
loop
fisub
inc
and
hlt
cmp
mov
int
nop
add
sub
std
jmp
popa
add
pop
cwde
adc
add
jnp
pop
inc
pop
call
popa
fsub
xchg
lahf
in
dec
aaa
out
(bad)
pop
mov
popf
jns
cs
mov
out
in
mov
cmc
or
es
aad
mov
mov
in
jl
frstor
aas
(bad)
adc
cmp
mov
call
cs
sub
xlat
xchg
or
sbb
es
xchg
or
lds
pop
push
fwait
xor
out
aam
in
gs
pop
mov
jne
mov
pop
jg
or
sub
cld
out
in
div
clc
gs
inc
push
and
xor
jle
lea
push
or
push
jns
pushf
ret
(bad)
fcomi
inc
mov
jbe
clc
mov
out
mov
push
icebp
arpl
pop
lea
mov
scas
mov
hlt
lods
ins
not
pop
or
adc
sti
icebp
add
adc
stos
shl
push
inc
std
loop
xor
xchg
clc
cmps
shl
cmp
fidivr
lea
fs
mov
and
out
mov
cmp
(bad)
hlt
adc
push
movs
inc
ror
and
in
test
popf
out
push
mov
dec
inc
call
and
mov
dec
adc
clc
inc
sub
daa
outs
ins
xchg
or
out
cmp
or
sub
or
retf
mov
jae
dec
jge
fisttp
pop
adc
mov
mov
aam
stc
fadd
addr16
scas
aad
rol
dec
movs
stos
cli
jle
pop
pusha
daa
repz
inc
or
outs
push
pop
push
fisub
fwait
dec
shl
fdiv
pop
iret
and
js
scas
arpl
test
and
push
jnp
xchg
inc
cli
addr16
xor
dec
pushf
call
fisttp
xor
fcmovnbe
cmp
int
test
mov
fwait
in
in
sbb
adc
in
mov
shl
arpl
int3
fwait
call
fs
sub
pop
pop
xor
rcr
cs
rol
sub
pop
pop
lahf
jns
mov
lahf
mov
push
cmps
or
fcmovnb
jae
push
stc
push
inc
and
mov
push
pop
jmp
cmps
pop
xchg
mov
mov
mov
out
mov
xor
jmp
js
cwde
les
xor
xchg
push
jecxz
mov
adc
push
aaa
je
mov
in
add
xor
sbb
and
mov
push
push
sub
cmp
retf
loopne
hlt
pop
mov
push
sbb
mov
xlat
fstp
dec
aad
in
push
pop
mov
and
mov
push
mov
push
add
or
mov
adc
out
push
add
enter
call
test
xchg
jmp
fs
leave
inc
cld
jnp
retf
cmc
repnz
or
cmp
add
stos
out
cmp
mov
test
jmp
cmp
ret
push
inc
mov
jle
jnp
jno
loope
shr
sbb
jnp
daa
test
xchg
rcl
mov
test
neg
arpl
fdiv
push
lea
mov
xchg
hlt
xchg
cli
rol
mov
sub
int
jbe
xor
sub
lods
add
or
in
cmp
sub
sbb
outs
ds
stc
outs
adc
sbb
dec
cmpxchg
in
cmps
fild
scas
retf
out
in
mov
pop
xlat
fs
jmp
xor
push
sbb
sti
inc
in
fist
fwait
movs
es
adc
outs
jae
loopne
jmp
test
icebp
sub
cmp
xchg
jbe
cmp
cmps
and
arpl
mov
out
pushf
jne
jecxz
mov
push
sar
xor
sub
fs
retf
int
cmps
stos
pop
jae
mov
icebp
add
(bad)
jnp
jae
sub
pop
jno
jae
and
scas
in
cmp
leave
push
and
lahf
cmp
ret
and
or
loopne
mov
shl
xor
xlat
(bad)
dec
nop
cmc
mov
fsubrp
movs
mov
fisub
and
lahf
inc
imul
repz
xor
push
aas
pusha
enter
adc
repz
sti
test
cmp
push
mov
popa
push
fs
hlt
call
add
mov
fiadd
jbe
jecxz
pop
inc
lahf
mov
mov
fisubr
repz
sub
xchg
mov
push
jmp
mov
push
jo
stos
imul
jnp
(bad)
aad
sbb
loope
pop
mov
pop
imul
fwait
leave
push
sbb
or
call
jnp
cmp
jg
add
jecxz
cmp
add
xor
out
cmp
mov
mov
mov
mov
rol
hlt
push
pop
ret
mov
cmps
into
call
fcom
sbb
arpl
iret
pusha
xchg
and
call
mov
sbb
inc
test
xor
ja
fsubr
pop
mov
out
adc
adc
xchg
add
inc
push
jns
out
ja
pop
div
ret
es
xchg
jmp
xchg
push
xchg
xchg
int
pop
cs
xchg
shr
adc
iret
ret
mov
xor
mov
pop
sbb
sub
and
dec
ret
adc
sub
sub
pushf
adc
inc
icebp
fld
cs
loope
out
repz
mov
adc
mov
sub
in
pop
inc
mov
sub
jno
xchg
sub
mov
xchg
lock
mov
cmps
xchg
js
dec
adc
push
dec
int3
jnp
icebp
jmp
in
mov
test
sbb
push
pop
jp
push
outs
pop
push
bound
mov
fcom
mov
push
test
out
(bad)
cmp
inc
jb
sbb
das
adc
or
mov
not
fimul
out
mul
mov
inc
(bad)
sbb
aaa
js
retf
loop
mov
xchg
mov
inc
mov
(bad)
lahf
xchg
mov
or
xor
enter
inc
gs
rcr
es
into
test
add
sub
lock
rol
mov
sahf
xlat
mov
(bad)
cld
cmc
scas
push
mov
mov
call
mov
cmp
xchg
ja
daa
mov
pop
jnp
adc
and
retf
inc
push
fs
jb
jmp
fmul
popa
and
mov
sub
and
mov
iret
sub
jb
inc
xor
xchg
retf
push
inc
push
outs
push
retf
xchg
jne
inc
mov
cwde
jp
shl
(bad)
mov
aaa
inc
pop
xor
shl
push
shr
retf
pop
inc
imul
sub
popa
cmp
popf
or
sti
stc
cmp
xchg
or
ret
push
push
dec
sbb
mov
adc
lds
aad
dec
xchg
sbb
xor
nop
mov
cs
jle
sbb
cmp
in
arpl
cmps
xchg
adc
(bad)
ja
mov
mov
xchg
jns
clc
ins
and
ins
test
push
add
out
sar
enter
scas
sub
xchg
daa
lods
xor
xchg
psubb
aas
cmp
cld
adc
jg
cld
divps
dec
mov
add
add
dec
inc
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
push
or
push
dec
inc
or
add
or
add
add
add
add
or
add
add
pushf
das
cmp
add
add
inc
inc
add
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
push
ret
sub
add
or
dec
inc
inc
push
pop
inc
in
shl
and
(bad)
jecxz
icebp
pop
cdq
daa
(bad)
mov
mov
cdq
enter
shl
mov
pushf
int
jnp
sbb
fwait
nop
int
into
cmp
and
sub
mov
sahf
jg
jecxz
add
lea
pop
test
add
xor
pop
sti
(bad)
sbb
movs
lahf
cmc
fsub
adc
stos
inc
dec
sbb
jp
sar
lock
and
es
(bad)
sbb
push
lahf
adc
and
iret
arpl
cdq
jg
ins
iret
ss
xchg
ror
sbb
popa
cwde
test
mov
cs
mov
inc
dec
sbb
or
jb
push
enter
push
mov
pop
inc
nop
xchg
pop
ja
in
aam
out
les
xchg
sbb
add
lods
sub
je
mov
or
xchg
sbb
shl
and
into
lahf
xlat
mov
inc
ret
push
lods
or
in
jp
loop
xchg
or
dec
jmp
scas
cmp
jo
(bad)
xchg
sbb
daa
pop
(bad)
pop
xchg
(bad)
fmul
clc
jg
int3
dec
lea
outs
sbb
adc
push
je
mov
pop
daa
push
shr
movs
pusha
sbb
adc
inc
sub
dec
mov
adc
pop
jmp
sub
fisub
movs
loopne
test
jnp
movs
in
sub
fucom
mov
cmp
cmp
dec
in
jae
mov
aas
add
sbb
(bad)
adc
sub
mov
gs
cmc
jp
(bad)
and
mov
xchg
sbb
dec
pop
mov
push
or
push
and
pop
pop
adc
or
loop
xor
adc
fidivr
pop
push
loop
fwait
inc
push
shl
out
pop
sbb
in
stc
pop
and
(bad)
loope
xchg
mov
and
sub
cmps
fisub
ins
cdq
aas
and
sub
pop
outs
sbb
pop
(bad)
mov
iret
(bad)
cmp
xchg
out
sbb
retf
test
ret
(bad)
in
push
pop
out
pop
imul
push
push
push
or
ror
push
and
push
outs
clc
scas
mov
call
adc
cmp
push
fild
fild
fistp
inc
jmp
cmp
fidivr
sbb
test
push
fcom
xchg
mov
xchg
push
xchg
scas
jmp
add
lock
jecxz
or
jnp
add
mov
iret
mov
cmp
jmp
ds
jno
xor
push
jmp
adc
push
loop
mov
jae
test
sbb
mov
push
jge
inc
mov
jnp
mov
xor
mov
pop
mov
daa
fld
sub
adc
or
inc
test
dec
mov
or
data16
pop
xchg
mov
push
std
pop
or
out
cmp
xchg
loop
dec
xchg
idiv
mov
retf
mov
cmp
je
fiadd
lds
dec
retf
rcr
mov
loop
loope
test
xchg
sbb
(bad)
test
movs
dec
rcr
mov
ss
push
in
enter
mov
cdq
mov
push
aas
xchg
and
imul
fistp
mov
loope
cld
in
ins
inc
xchg
mov
pop
cmp
mov
jb
scas
mov
jp
sbb
xchg
add
xchg
xlat
jmp
ins
dec
imul
fadd
xor
inc
cmp
repnz
pushf
inc
adc
cmp
mov
cmps
jno
(bad)
xor
fwait
fwait
mov
adc
(bad)
pop
xor
popa
push
and
mov
mov
sbb
stc
xchg
cli
inc
sbb
sbb
aas
ficom
mov
inc
add
faddp
movs
(bad)
shl
lods
in
stos
das
rol
mov
ss
or
ins
adc
inc
pop
mov
lock
arpl
adc
jecxz
sub
mov
mov
out
je
test
push
lock
fcom
shl
inc
sub
int
cs
data16
pop
sub
and
stc
mov
fisttp
dec
cmp
les
aad
mov
cmp
mov
mov
(bad)
jnp
ror
xchg
pop
and
and
test
(bad)
xor
jge
mov
int3
mov
cs
es
stc
cs
cmc
add
add
lods
push
aaa
jmp
mov
cmp
stos
jmp
aaa
cld
aad
test
lock
cwde
mov
stos
inc
mov
out
mov
cmp
aad
cdq
push
lods
movs
xchg
add
inc
sub
or
neg
sub
push
pop
sub
shl
data16
out
or
mov
dec
jle
push
stos
sub
mov
and
inc
jb
enter
cwde
stos
xchg
stos
xchg
scas
add
fcom
fdivr
test
stos
int
mov
xor
jbe
imul
sbb
cmp
test
sldt
shr
out
(bad)
pusha
scas
mov
push
repz
jnp
bound
jmp
movs
shl
mov
dec
icebp
lock
outs
outs
dec
jge
push
inc
jmp
call
inc
loope
gs
cld
dec
stos
jg
in
xchg
xor
das
xor
cmp
sbb
cli
shl
sar
push
mov
jl
repz
popf
cmp
push
outs
cmp
push
int3
adc
pop
mov
cmps
xchg
bswap
sbb
mov
fiadd
xchg
mov
cvtdq2ps
or
(bad)
rcl
inc
lods
mov
or
xchg
mov
outs
jle
or
push
scas
gs
retf
jmp
popa
dec
sbb
xor
or
jp
adc
(bad)
inc
out
pop
pusha
pop
das
inc
mov
xchg
push
std
pushf
data16
test
(bad)
jmp
pop
shl
lods
out
loopne
push
(bad)
cwde
in
pushf
xchg
outs
loope
out
dec
neg
scas
scas
adc
out
xchg
dec
ds
add
sbb
push
sbb
in
addr16
loopne
dec
fdiv
fcom
adc
and
push
sbb
mov
fld
and
inc
lahf
icebp
inc
sti
ins
pop
pop
ins
adc
sbb
sbb
jb
pop
out
add
(bad)
data16
test
adc
ret
popf
dec
mov
mul
std
or
stos
imul
jo
mov
mov
and
dec
xchg
ficomp
sbb
mov
pop
xor
sti
rcl
cmp
stos
sub
inc
rcl
cmc
push
adc
call
(bad)
jae
mov
into
mov
dec
mov
xchg
cmps
jmp
or
movs
hlt
ja
loop
inc
and
push
outs
sbb
cs
popa
mov
jecxz
jle
cmp
into
(bad)
push
hlt
hlt
cmps
jmp
xchg
mov
pusha
sub
xor
mov
outs
sub
enter
pop
xor
jb
jbe
mov
jmp
mov
xor
push
add
outs
fbld
aaa
mov
push
loopne
ins
mov
scas
call
ins
xor
aaa
fistp
dec
popa
sti
dec
add
mov
ror
fwait
pop
(bad)
lahf
dec
pop
loopne
out
pushf
out
sub
dec
mov
jae
out
(bad)
out
xchg
xor
test
sbb
fist
jne
movs
add
xor
mov
mov
jo
in
mov
std
jns
ret
adc
add
lds
sar
inc
push
adc
repz
in
xchg
xchg
aad
(bad)
mov
sub
pushf
mov
or
repz
inc
mov
dec
inc
add
mov
mov
pop
fs
adc
pop
out
ret
sbb
dec
jno
cdq
or
ins
inc
jo
sub
std
xor
pop
clc
cmps
ja
add
inc
inc
clc
ja
clc
pop
addr16
nop
pusha
sbb
sub
xlat
aad
add
push
cli
jmp
cwde
add
test
push
nop
sbb
sahf
jecxz
mov
dec
aaa
xchg
or
popf
popa
mov
aas
sub
rol
pop
pop
test
stos
repz
cmp
pop
imul
es
xchg
or
push
push
mov
lahf
fcmovnb
push
out
mov
fnstcw
dec
test
inc
mov
out
ror
lahf
mov
mov
call
lods
fisub
jns
sub
push
cmc
inc
sub
ins
push
pop
lea
imul
mov
pop
js
cld
push
sbb
fcom
dec
jmp
rcl
sub
pop
inc
loope
adc
arpl
push
sub
and
das
add
int
data16
jae
mov
sahf
dec
cli
jmp
jns
pusha
mov
fwait
mov
loopne
add
cmp
or
gs
das
aaa
cmc
xchg
and
cmp
push
dec
dec
cmps
push
(bad)
fscale
inc
ss
fidiv
xchg
fucomip
in
shl
mov
movs
and
rcl
test
lahf
jl
xchg
jmp
sbb
out
(bad)
faddp
jmp
cmps
ret
gs
xor
jne
das
ror
rcl
loope
out
mov
movs
jg
pop
dec
mov
and
sbb
mov
push
in
sbb
arpl
push
push
sub
(bad)
mov
test
jg
add
pop
jecxz
add
shl
xor
adc
sbb
xor
cmps
ror
mov
cmp
scas
dec
dec
sbb
inc
push
push
hlt
add
sub
mov
sbb
aas
sbb
xor
dec
push
iret
sahf
stos
outs
dec
xchg
fprem1
sbb
cmps
mov
xchg
pusha
add
js
imul
retf
pop
mov
rol
repz
int3
(bad)
clc
sbb
mov
jmp
in
inc
dec
fistp
xor
es
push
pusha
(bad)
fidiv
shl
in
(bad)
mov
repz
jecxz
lahf
mov
mov
or
iret
cmp
adc
outs
dec
or
repz
or
call
sub
or
mov
jge
lock
sub
int
int3
addr16
push
cmp
cli
aad
fwait
mov
pop
(bad)
pop
mov
sar
stc
scas
cmc
jmp
fsubr
jnp
loopne
(bad)
enter
fwait
jg
ins
xor
in
dec
cmps
mov
btr
and
push
sub
ret
sbb
mov
mov
retf
gs
iret
pop
(bad)
loop
shr
scas
in
push
jb
retf
cmc
mov
xor
rol
mov
std
pop
adc
xlat
add
mov
mov
push
sbb
mov
xchg
mov
call
jnp
rcl
xor
scas
and
and
in
fiadd
add
arpl
addr16
arpl
jbe
cmp
aas
sar
js
cmc
inc
ins
shr
xchg
jne
mov
jno
call
icebp
dec
ror
test
and
cmp
in
mov
cld
add
inc
push
(bad)
sahf
fild
mov
outs
sbb
fcmove
sub
jge
ds
pop
sub
movs
xchg
add
cli
daa
lock
loopne
sar
jg
dec
inc
and
cmp
add
add
dec
inc
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
push
or
push
dec
inc
or
add
or
add
add
add
add
or
add
add
pushf
das
cmp
add
add
inc
inc
add
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
push
ret
sub
add
or
dec
inc
inc
push
pop
inc
in
aam
and
(bad)
jecxz
icebp
xchg
push
leave
es
push
push
cs
sbb
inc
inc
jbe
in
xor
xor
addr16
mov
and
and
xor
ds
loope
imul
loope
ret
adc
sub
jne
les
jmp
sbb
inc
adc
and
push
xchg
xor
scas
nop
jo
retf
jo
(bad)
jo
jne
dec
and
or
std
pop
iret
xor
hlt
cmp
(bad)
imul
es
call
inc
adc
jle
mov
xchg
outs
sbb
fwait
mov
dec
cmps
inc
inc
fld
addr16
dec
mov
aas
call
rcl
stos
sbb
sbb
sub
imul
jmp
jp
xchg
jo
aad
xor
iret
test
sbb
xchg
scas
xchg
into
sar
bound
test
out
in
add
pop
test
outs
(bad)
jmp
and
lods
inc
out
push
sbb
mov
jno
call
pop
bnd
inc
int3
or
(bad)
mov
xchg
jno
mov
mov
cmp
lock
sub
aad
jo
sbb
jae
mov
test
mov
scas
std
scas
add
ret
std
mov
jl
xor
scas
shl
loop
mov
mov
jns
mov
aam
jno
or
out
jl
(bad)
mov
repnz
pop
clc
mov
push
mov
cmps
xchg
cmp
cmp
or
push
pop
mov
inc
mov
add
call
call
imul
ror
xlat
pop
aas
sub
jo
stos
push
outs
inc
mov
stos
rcl
xlat
lods
scas
xor
loopne
push
mov
sub
cmp
sbb
or
iret
sbb
loopne
mov
jge
xchg
dec
test
inc
mov
inc
loope
into
inc
repz
sbb
jae
mov
mov
dec
mov
aad
mov
xchg
jge
jno
mov
dec
imul
call
jmp
pop
test
jmp
sbb
je
mov
imul
jg
add
pop
pushf
js
mov
mov
sbb
pop
xchg
mov
mov
imul
pop
ja
inc
imul
pop
lods
test
inc
jle
add
cmc
jecxz
xor
ds
or
arpl
add
ja
push
jno
xchg
mov
lods
clc
mov
xrelease
aad
mov
popf
shl
popa
out
stos
inc
pop
jle
ds
outs
(bad)
xlat
in
add
inc
lods
or
mov
jmp
int
pop
xchg
ja
popa
out
pop
je
fwait
xchg
mov
pop
fidivr
addr16
xchg
xor
xchg
mov
fistp
outs
pop
inc
pop
push
test
jmp
not
add
fnstenv
push
cmp
mov
je
xor
mov
outs
mov
dec
rcr
inc
cmc
push
test
repz
jl
sub
das
mov
cld
push
std
xor
scas
mov
xor
dec
sub
loope
sub
adc
scas
lods
stc
in
and
or
leave
aad
mov
push
pushf
sub
rcr
inc
fild
(bad)
pop
jp
sahf
jge
mov
outs
mov
pop
cmps
int
mov
adc
mov
imul
cwde
jnp
pop
fldcw
and
mov
mov
imul
aad
dec
inc
or
inc
sbb
aas
je
xchg
adc
leave
mov
rcl
jbe
sbb
add
cmc
pop
and
inc
pop
mov
lds
mov
jp
xchg
sub
movs
sub
jmp
pop
mov
fisub
leave
les
pop
jp
cmps
test
ins
or
xchg
scas
(bad)
fcmovb
jbe
jae
arpl
sbb
leave
ss
test
test
sbb
sub
repz
fist
pop
repz
xchg
les
pop
mov
and
xor
mov
lahf
mov
cli
stos
popf
dec
mov
mov
sbb
loop
cdq
jb
test
les
nop
push
and
sbb
out
cmp
retf
inc
cmp
out
inc
in
in
test
les
jge
or
iret
ja
or
icebp
mov
xchg
mov
dec
call
gs
sub
repnz
pop
ins
das
pop
add
sbb
pop
inc
icebp
int
jno
and
hlt
xchg
(bad)
leave
sub
fwait
pop
(bad)
jmp
shl
push
jmp
pop
(bad)
adc
cwde
fst
pop
ret
inc
(bad)
in
push
fidiv
jae
xor
jmp
xor
add
mov
addr16
(bad)
push
dec
arpl
movs
imul
mov
dec
stos
ficom
(bad)
dec
xlat
sbb
adc
adc
push
jg
sub
pop
push
jl
adc
test
mov
fadd
std
shl
cmps
popa
mov
inc
test
jns
lds
or
outs
cmp
call
push
add
cld
stc
push
cmp
out
mov
pop
imul
jbe
pop
cmc
and
pop
add
xchg
lods
ror
loopne
mov
xor
xor
(bad)
outs
sti
shl
fbstp
add
adc
imul
outs
scas
jne
clc
sbb
dec
cmps
and
xor
mov
fist
mov
ds
movs
call
mov
and
popf
hlt
cmc
rcl
adc
mov
mov
sti
jmp
dec
(bad)
fbstp
cmp
cmp
sub
xor
popa
(bad)
ins
dec
push
movs
stos
lahf
icebp
xchg
inc
inc
xchg
retf
div
cmc
test
mov
fisubr
fnstenv
movs
pop
jecxz
xor
cld
mov
data16
jae
cmps
idiv
jmp
mov
out
arpl
and
rol
jb
xor
sbb
cwde
fidivr
add
push
cmps
add
dec
jp
jne
test
ror
(bad)
mov
jmp
sbb
sub
stc
pop
(bad)
popf
lods
es
das
(bad)
imul
gs
idiv
cmps
pop
hlt
lods
jecxz
es
mov
push
ret
xchg
mov
popf
(bad)
shr
jb
cld
fucom
sbb
push
adc
push
and
push
mov
sub
mov
fnstsw
ds
hlt
adc
mov
jge
iret
cwde
cmps
add
adc
cmps
das
out
out
arpl
push
sahf
pop
mov
jle
push
pop
jl
stc
mov
cmp
movs
mov
fld
jb
pop
add
in
push
out
sub
fwait
push
call
sbb
cmps
or
in
sub
mov
jns
daa
test
sbb
stos
push
xchg
mov
dec
xor
fist
add
ret
mov
inc
mov
jmp
aad
ja
sahf
aad
retf
out
sub
sahf
and
fiadd
mov
pop
sub
push
mov
in
adc
cmc
sub
popf
xchg
push
mov
inc
mov
mov
or
dec
mov
lea
inc
leave
jecxz
fimul
adc
or
imul
jnp
mov
pushf
inc
jmp
scas
sbb
(bad)
push
push
lahf
cmp
leave
mov
pminub
leave
(bad)
pop
lock
mov
imul
jmp
dec
pop
jne
rcl
es
scas
sbb
call
daa
js
call
xor
rol
test
push
out
ret
lea
inc
sbb
nop
pop
push
call
getsec
vpshufd
pop
in
aaa
add
push
push
mov
sub
mov
or
xchg
mov
ds
ret
ss
js
fdiv
mov
inc
mov
clc
clc
clc
pop
test
sbb
mov
retf
leave
lods
mov
daa
in
cmps
dec
shl
int
push
cmp
mov
frstor
int
fwait
das
xchg
xor
push
repz
cmps
mov
fnstcw
xor
push
cmp
sar
xor
mov
addr16
add
mov
cmp
and
call
jae
pop
iret
mov
sub
ds
xchg
xchg
xchg
and
cld
fisttp
pop
mov
loopne
adc
dec
test
(bad)
jns
cmp
push
mov
push
test
enter
cmp
retf
unpcklps
xchg
cld
inc
scas
mov
jecxz
rol
pop
(bad)
and
xchg
js
pop
mov
(bad)
push
or
mov
cs
mov
in
pushf
sub
clc
(bad)
jmp
xchg
cmp
jo
shl
ret
shl
xor
sub
mov
xchg
or
out
xchg
repnz
mov
imul
mov
icebp
mov
jnp
mov
ins
jg
ficomp
cmp
mov
test
bound
(bad)
out
inc
das
mov
test
(bad)
call
(bad)
sub
clc
(bad)
xor
xor
inc
mov
xchg
cld
mov
aam
loopne
or
out
movs
test
sbb
arpl
xchg
(bad)
(bad)
fwait
retf
xor
mov
push
ins
fistp
sub
call
shl
inc
outs
push
xlat
fistp
iret
or
jnp
adc
pop
lds
ror
sbb
dec
ss
push
dec
jmp
push
xlat
mov
push
adc
ss
shr
mov
repnz
je
lods
and
jecxz
push
inc
push
test
aam
ja
lea
mov
xor
add
sahf
sbb
aas
loope
sub
cwde
dec
and
movs
aas
outs
push
jle
shufps
ror
fistp
xlat
retf
mov
mov
inc
jmp
jae
aaa
jge
and
cmp
pushf
retf
fbstp
inc
test
loopne
popf
mov
pop
js
push
outs
sbb
cmps
call
loope
sub
pop
lahf
out
fwait
sar
(bad)
in
jne
movs
lods
retf
sahf
out
pusha
inc
jmp
dec
cs
lea
pop
add
pop
pop
or
outs
sub
jmp
pop
mov
and
push
jg
into
push
jno
imul
orps
xchg
and
mov
scas
cs
fbstp
frstor
cmp
bound
mov
in
pop
lods
cmp
or
xor
or
pop
sbb
test
inc
ja
stc
mov
mov
sbb
je
sub
add
mov
mov
jl
inc
xor
rcl
mov
push
lahf
adc
jg
mov
and
ins
scas
sar
inc
mov
loopne
popf
shr
mov
inc
and
jne
sub
test
inc
sbb
ret
cs
add
xor
xor
cmp
rcl
adc
lea
pop
xchg
popa
add
pop
or
sbb
shl
stc
mov
adc
(bad)
mov
stos
iret
jmp
push
xor
fidivr
mov
fld
xchg
fstp
std
js
js
inc
fisttp
call
fs
aad
cmc
loope
push
das
fwait
rcr
or
scas
jg
inc
or
adc
daa
lock
pop
addr16
add
add
dec
inc
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
push
or
push
dec
inc
or
add
or
add
add
add
add
or
add
add
pushf
das
cmp
add
add
inc
inc
add
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
push
ret
sub
add
or
dec
inc
inc
push
pop
inc
in
shl
aam
add
lock
jle
fldenv
xchg
pop
(bad)
and
test
dec
pop
out
leave
retf
pushf
jne
xchg
cmp
lods
push
(bad)
or
repz
(bad)
xor
pop
xchg
add
inc
cmp
and
sbb
dec
jne
mov
push
int3
push
xor
cmp
or
jmp
in
jns
out
or
lds
shr
xchg
mov
mov
adc
and
iret
inc
adc
sti
int3
shr
pop
fiadd
and
inc
enter
jae
inc
outs
inc
inc
and
push
xor
push
jl
mov
sbb
in
jns
data16
fistp
lds
bound
daa
inc
sub
or
(bad)
ins
push
das
ror
cmps
dec
fimul
sub
test
and
rol
xchg
sahf
popa
nop
shr
jnp
or
mov
xchg
sub
or
inc
iret
sbb
addr16
rcr
cmp
xchg
inc
push
sbb
mov
aad
je
pop
push
push
std
scas
push
leave
mov
jecxz
out
sbb
into
jb
cmp
adc
inc
test
fcmovnbe
test
fld
adc
jle
inc
add
dec
mov
dec
add
and
cmp
pop
sbb
pop
arpl
jecxz
rol
mov
gs
sub
pusha
lea
(bad)
mov
(bad)
cmp
outs
popa
stos
mov
ins
(bad)
jecxz
cli
xchg
std
sub
int3
xchg
aas
adc
pop
ins
popf
sub
ret
in
and
jne
push
sbb
cmc
and
aas
xchg
frstor
mov
dec
stos
push
or
out
out
adc
inc
pop
cmp
and
das
daa
call
mov
(bad)
loop
sbb
pop
mov
ins
and
test
jnp
xchg
xchg
xchg
cmp
imul
ret
pop
mov
arpl
inc
xchg
cmp
dec
ss
ins
loope
outs
pop
mov
push
sub
icebp
loop
and
in
mov
cmp
add
pop
daa
push
outs
ja
dec
push
jne
cld
pop
call
cmp
cmp
pop
loop
inc
add
pop
cmp
mov
cmp
inc
mov
(bad)
jmp
cmp
scas
jmp
mov
out
push
sbb
test
or
mov
fldcw
mov
sbb
lods
fwait
cmc
push
sub
jne
push
std
pusha
stos
add
push
mov
and
push
leave
shr
ins
pop
push
addr16
popf
adc
inc
cld
out
out
(bad)
movs
push
or
xchg
jnp
cmp
push
jp
lods
xor
push
pusha
mov
pop
(bad)
(bad)
and
ret
push
xchg
(bad)
popa
pop
sub
xlat
out
sbb
mov
(bad)
or
popf
push
clc
(bad)
loopne
sahf
popf
push
mov
or
push
xchg
fnsave
xchg
push
pop
dec
mov
sub
movs
xlat
sbb
cmp
fldenv
xchg
jl
pop
fdiv
dec
xchg
out
out
out
retf
jno
imul
add
pop
jbe
out
fwait
imul
dec
add
xchg
retf
movs
bound
mov
cmps
xchg
cmp
int3
shl
jmp
in
outs
mov
jge
push
fmul
push
jae
add
xlat
test
scas
fst
leave
ror
xlat
xchg
sar
arpl
mov
mov
je
rcl
cmp
les
lea
dec
je
fwait
arpl
push
and
inc
and
sub
outs
jbe
pop
mov
inc
lods
xor
sub
jmp
mov
rcl
pop
jno
das
pop
xor
std
lds
adc
dec
jnp
cmp
call
pop
mov
xchg
xchg
cmp
sbb
jl
jnp
and
pop
loop
pop
jp
push
sahf
lods
add
mov
jle
ficom
or
jbe
pcmpeqb
stos
cmps
and
xchg
adc
cmp
push
mov
mov
and
push
idiv
mov
pop
jmp
test
pop
sahf
jmp
mov
dec
inc
enter
jnp
lds
sar
out
jno
iret
or
lea
mov
out
(bad)
fimul
mov
mov
out
add
mov
outs
(bad)
pushf
scas
popa
aaa
xor
push
inc
inc
fnstenv
mov
stc
outs
xchg
stos
sbb
mov
cwde
les
dec
stos
call
dec
shl
rcl
daa
jne
sbb
mov
test
pusha
outs
mov
and
pop
add
sub
mov
dec
ins
aas
cdq
push
inc
add
mov
mov
mov
(bad)
or
nop
mov
imul
mov
mov
fs
inc
das
mov
fmul
cld
cmps
cmps
pop
jnp
jno
popf
je
popa
xchg
loope
std
jb
jmp
std
out
adc
mov
xor
sub
fs
mov
loopne
shl
hlt
ja
pop
mov
es
cmp
mov
mov
pop
add
ror
mov
jg
fisttp
into
mov
mov
and
sub
mov
mov
addr16
repnz
xor
pop
mov
aad
push
loopne
sub
xor
fisub
and
jle
(bad)
and
jns
pop
xchg
mov
cmps
sbb
jl
sbb
mov
dec
popa
pop
out
pop
push
push
out
xlat
xchg
sub
adc
xor
inc
mul
cmc
adc
movs
stos
xor
cmc
and
jbe
idiv
scas
xchg
sti
cli
fadd
(bad)
push
adc
enter
dec
popa
mov
and
xchg
test
imul
shl
lahf
xor
pop
xor
xor
mov
push
fsub
ret
pop
pop
pop
(bad)
mov
nop
mov
mul
imul
adc
push
stos
adc
sbb
mov
or
arpl
cmp
cmp
mov
(bad)
xchg
scas
mov
movs
push
outs
sub
ins
pop
ins
sub
or
and
mov
inc
lahf
push
sub
cdq
cs
pop
push
(bad)
stc
and
mov
enter
xchg
pop
sbb
pop
xor
and
or
push
mov
or
aas
inc
sbb
sbb
inc
mov
imul
inc
in
cli
or
dec
scas
out
push
sbb
xchg
jle
clc
xlat
mov
jmp
mov
adc
out
mov
mov
or
dec
mov
xor
repnz
imul
cmp
xchg
cmp
mov
mov
xchg
cmps
lock
stos
add
pop
aas
sbb
data16
dec
mov
adc
jmp
das
xor
add
in
ror
fld
jne
mov
in
pop
jo
popa
ret
and
es
jmp
mov
sub
or
cs
cwde
push
out
test
stc
retf
add
push
and
pop
fwait
mov
dec
inc
lock
std
iret
fs
in
cmc
cdq
jnp
mov
fsub
clc
jne
sbb
adc
or
enter
fstp
mov
or
into
push
movs
aam
jae
(bad)
ret
cmp
mov
mov
add
out
les
rcl
push
imul
fnstcw
and
or
mov
push
pop
adc
stos
xor
dec
adc
mov
int3
push
daa
mov
pop
mov
jmp
add
stos
xchg
(bad)
test
lods
cmp
mov
push
jl
xchg
pop
(bad)
bound
clc
fs
jp
icebp
jmp
fcom
xchg
adc
test
js
loopne
pop
and
xchg
mov
movs
jns
mov
jae
mov
adc
ja
mov
push
push
push
or
sbb
repz
mov
lods
push
bound
mov
rcl
ins
mov
adc
mov
mov
popa
and
pusha
call
cmps
sbb
arpl
repnz
xor
pop
dec
jecxz
or
inc
pop
pop
pop
inc
jmp
(bad)
push
inc
or
add
mov
xor
and
in
inc
mov
jbe
adc
mov
(bad)
cmps
aaa
xor
lahf
push
aaa
add
retf
dec
out
std
mov
(bad)
bound
dec
mov
setge
xor
adc
and
xchg
jge
(bad)
sub
test
cdq
jp
fcmovbe
imul
jmp
push
cs
mov
imul
daa
dec
mov
fwait
hlt
push
pop
xor
mov
pop
sbb
data16
push
inc
jbe
and
jmp
mov
dec
dec
push
sub
mov
xchg
push
xchg
cmps
sbb
mov
push
xchg
xlat
repnz
sbb
push
enter
ja
mov
sar
repnz
sub
add
scas
nop
bound
fst
int3
inc
iret
sub
xor
or
or
jae
movs
iret
mov
pop
pop
sti
hlt
dec
add
cli
lods
int3
sbb
and
sbb
pop
daa
iret
sbb
daa
out
out
jns
jg
pop
test
leave
cmc
mov
cwde
std
fst
shl
retf
mov
call
add
gs
mov
pop
mov
pushf
test
cs
imul
sub
dec
jp
adc
mov
jns
adc
mov
xchg
cmp
jp
and
dec
pushf
mov
popf
jl
mov
ror
fst
loope
vhaddps
enter
repnz
dec
dec
pop
outs
add
in
repnz
pop
call
or
ror
(bad)
(bad)
mov
dec
dec
pop
sbb
jmp
outs
sbb
fmul
lahf
pop
jg
gs
adc
sub
dec
push
jno
in
std
int
imul
sub
js
clc
mov
clc
loope
pop
pop
jmp
push
idiv
test
xchg
xchg
std
shr
out
mov
aas
xchg
jb
retf
or
ret
ins
push
inc
enter
mov
sbb
out
mov
out
or
movs
fidivr
lods
mov
mov
es
stos
sbb
sbb
(bad)
fisubr
pop
ror
clc
call
scas
aas
pop
jne
xlat
lds
sti
xchg
xchg
test
adc
inc
push
dec
jg
dec
jnp
mov
enterw
xchg
out
xchg
mov
cmps
pop
out
xchg
xlat
in
and
out
cmp
inc
popf
repnz
imul
repz
cmps
test
lods
pop
mov
clc
cs
jnp
fmul
shl
and
adc
or
ds
js
repz
out
jmp
movs
push
fsubr
pop
push
enter
mov
loop
inc
or
mov
xchg
push
dec
mov
cmps
adc
cmp
pop
jl
and
psadbw
jg
adc
xchg
scas
test
out
inc
dec
shl
xchg
or
popf
or
jnp
cmp
enter
imul
dec
lock
loopne
sar
lock
mov
fs
std
cmp
add
dec
inc
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
dec
or
push
dec
inc
or
add
or
add
add
add
add
or
add
add
pushf
das
cmp
add
add
inc
inc
add
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
push
ret
sub
add
or
dec
inc
inc
push
pop
inc
in
shl
and
lea
add
(bad)
out
mov
je
dec
dec
ja
sbb
jbe
ror
dec
jae
fcomp
in
xor
dec
test
add
setne
jo
test
xchg
inc
push
dec
xchg
jl
out
sbb
xor
mov
std
out
repz
aam
ret
inc
ss
adc
inc
jle
push
add
jo
mov
xor
jae
jecxz
mov
mov
dec
mov
(bad)
pop
out
test
sbb
scas
daa
sub
xor
mov
shr
mov
fsubr
cmp
and
xchg
fs
hlt
pop
sbb
popa
xchg
and
pop
mov
jecxz
jge
std
(bad)
out
lods
and
(bad)
xor
out
pop
pushf
push
jbe
retf
push
sub
adc
cmp
adc
(bad)
dec
imul
xchg
test
mov
arpl
out
cmp
mov
mov
push
adc
movs
mov
test
fnstsw
dec
mov
push
xchg
mov
loope
jge
mov
movs
and
sub
ret
je
mov
dec
pop
xor
into
(bad)
push
dec
cdq
xchg
mov
pop
xchg
mov
or
test
jmp
pop
fisttp
pop
addr16
sub
and
push
repnz
das
sub
push
push
mov
add
cld
int3
push
pop
addr16
dec
mov
pushf
cmp
or
outs
inc
jl
and
aam
or
pop
es
test
ret
push
mov
sbb
add
repz
fcomp
and
adc
(bad)
in
inc
pop
add
mov
out
sub
jns
pop
jl
popf
cmc
jle
std
xor
adc
cli
mov
pop
ins
ds
fld
jecxz
dec
jmp
xchg
pop
cs
jecxz
jo
mov
xor
lock
icebp
(bad)
mov
pop
out
push
add
sar
fnstenv
ins
pop
cmps
mov
not
dec
lds
jb
js
in
lods
(bad)
mov
sbb
xlat
pop
popf
nop
jg
xchg
mov
js
pusha
or
sbb
dec
jae
inc
dec
lods
sbb
xor
(bad)
jbe
pop
pop
aaa
mov
inc
or
retf
jg
pushf
dec
xlat
pop
arpl
jecxz
stc
sub
int
cmps
xchg
xor
(bad)
ret
mov
outs
dec
std
test
mov
adc
cdq
movs
lahf
jg
std
xchg
scas
mov
stos
test
jae
je
popfw
push
jg
mov
xor
inc
inc
mov
adc
out
rcr
xor
dec
ins
test
lods
mov
sti
fldcw
ss
adc
ss
xchg
std
mov
call
fld
xlat
in
movs
fstp
rol
in
xchg
imul
pushf
xchg
nop
mov
je
cmps
sahf
jbe
xchg
arpl
aaa
outs
and
js
(bad)
pop
inc
cmp
(bad)
inc
cli
fmul
(bad)
rcr
rol
and
or
test
les
out
cld
cmp
cli
dec
(bad)
mov
dec
inc
dec
(bad)
cmp
or
pop
mov
jo
or
cmc
and
jns
leave
sbb
and
or
addr16
mov
in
ret
cmps
sbb
pusha
cmp
std
jns
je
div
xlat
test
outs
ds
and
aad
sub
daa
mov
test
aam
inc
xchg
int3
mov
les
sub
cwde
adc
iret
gs
pusha
and
popf
js
sbb
loop
dec
in
sbb
mov
mov
adc
adc
push
inc
sbb
inc
shr
xchg
mov
lock
setl
jae
mov
js
cli
std
dec
push
cwde
fild
push
scas
aaa
and
mov
std
xor
mov
push
fbstp
adc
pop
aas
out
or
stc
das
cmp
inc
sub
cmp
out
mov
dec
repz
jmp
and
in
mov
movs
mov
pop
ds
or
mov
mov
rol
icebp
aam
inc
test
pushf
std
add
xchg
mov
pop
mov
cwde
xchg
mov
add
lar
stc
ja
loopne
mov
xchg
mov
jp
cwde
int3
lods
js
dec
add
aad
pop
inc
xor
jae
leave
adc
pop
push
mov
cmp
sub
stc
loope
push
stos
and
in
lods
test
loopne
imul
pop
ja
jno
mov
pop
add
mov
and
add
out
and
pop
call
cs
cmp
pop
stos
sub
cmp
idiv
stc
dec
mov
cmp
(bad)
fldenv
lock
mov
and
push
cmp
push
std
shl
aad
shl
push
mov
nop
imul
push
mov
fs
and
adc
icebp
sar
es
mov
mov
clc
dec
mov
out
inc
fwait
icebp
ud0
push
out
std
mov
dec
fwait
sub
and
enter
test
sbb
(bad)
jb
mov
mov
mov
mov
or
xchg
cld
and
lods
lds
add
and
pop
sub
into
add
fwait
jp
cmp
(bad)
(bad)
repnz
aam
rcr
stc
nop
pop
pop
mov
and
dec
mov
cdq
test
mov
mov
bound
mov
mov
inc
mov
add
xchg
pushw
rcl
or
stos
mov
cmp
lea
inc
cmc
lods
mov
pop
sub
mov
sbb
loope
arpl
push
das
call
aam
bnd
mov
mov
outs
scas
aam
mov
lea
ins
mov
(bad)
sbb
dec
mov
repz
pop
adc
jmp
xchg
addr16
jmp
(bad)
pop
scas
in
xor
mov
cmp
mov
pop
test
sbb
sub
mov
mov
cld
xor
jle
not
cmp
into
ds
pop
push
push
pusha
mov
push
jae
cs
(bad)
jecxz
movs
xor
push
cld
pop
jmp
or
cdq
add
or
pop
mov
jmp
mov
and
es
pushf
out
xchg
scas
iret
out
pop
add
in
mov
outs
(bad)
pop
fiadd
(bad)
dec
shl
in
hlt
sbb
cmps
fadd
call
inc
ja
addr16
sbb
stos
dec
int3
jo
jne
push
int
ins
adc
inc
lods
iret
sbb
mov
push
retf
mov
push
adc
fs
push
pop
in
mov
adc
mov
(bad)
xor
and
aad
xor
arpl
inc
inc
pop
jg
jae
daa
and
inc
in
cli
ja
jmp
cmp
gs
in
inc
and
pop
lods
sbb
lds
cs
out
sbb
fwait
lds
sub
(bad)
xchg
aas
push
sub
xor
stos
imul
xchg
in
retf
and
xchg
jbe
adc
sub
push
mov
scas
inc
lahf
call
in
fwait
loopne
pop
jb
fs
shl
in
sub
cwde
xor
xchg
sub
xchg
mov
fimul
lds
jmp
in
(bad)
repz
mov
dec
test
bound
test
xchg
idiv
mov
hlt
xlat
das
jmp
loope
xchg
mov
xchg
daa
dec
and
push
mov
sub
jae
xor
sbb
jg
clc
aaa
cmp
jmp
cld
pop
xor
jno
imul
lds
pop
movs
xchg
jmp
std
xor
ss
int
xor
cmps
xlat
jae
loope
aad
pop
retf
xor
add
jnp
stos
fst
add
sbb
cmp
ss
div
arpl
pop
inc
inc
imul
xchg
and
mov
pminub
addr16
outs
push
adc
xchg
mov
enter
jnp
cmps
ins
pushw
(bad)
stc
cwde
xchg
daa
std
std
hlt
xor
out
and
mov
pop
sti
into
test
std
sbb
adc
dec
pop
cdq
call
cmc
ror
push
lahf
sub
sub
stc
mov
arpl
mov
sbb
add
and
ffree
fbstp
outs
inc
dec
in
push
cmp
pop
call
sbb
ds
adc
and
inc
mov
jecxz
popf
jecxz
xor
jl
jne
sbb
daa
mov
and
cmp
iret
daa
scas
inc
lods
div
jmp
test
add
inc
xlat
mov
xchg
mov
adc
pop
cmc
movs
jo
retf
test
inc
popw
stos
rol
pop
mov
lea
mov
adc
ds
xchg
pushf
mov
(bad)
div
and
movs
fidiv
add
nop
(bad)
or
rcl
add
inc
xchg
bound
call
in
jmp
cmp
add
lods
daa
jmp
test
fist
jp
fs
push
call
movs
test
scas
add
or
aaa
sbb
and
jmp
cmc
call
inc
fisub
sub
mov
ror
mov
sub
or
add
stos
push
pop
ret
mov
in
jp
or
stos
mov
cs
cdq
mov
jns
push
or
bound
dec
out
jmp
ret
fild
repnz
sbb
and
into
jl
cmps
sub
pop
(bad)
call
and
inc
inc
inc
ss
cmps
lea
ins
fnsave
jae
mov
and
in
ret
push
push
pop
inc
sbb
push
mov
mov
das
ror
and
pop
fadd
dec
rol
mov
xchg
xor
sub
das
ins
jo
or
xor
mov
inc
loope
jo
dec
sub
outs
std
cmp
imul
push
dec
pushf
add
push
xchg
in
jmp
and
cmc
xor
mov
fadd
mov
xor
jno
stc
pop
test
jne
pushf
stc
call
jecxz
xchg
dec
rcl
std
nop
dec
push
cld
stos
mov
inc
mov
inc
sub
cmp
out
fist
dec
mov
push
cmps
imul
xor
cdq
dec
in
jns
cmp
dec
jmp
cmp
pop
mov
fucom
retf
push
mov
sub
push
scas
dec
inc
or
mov
xor
jl
mov
scas
arpl
mov
push
setle
mov
mov
and
mov
daa
xor
dec
retf
push
psadbw
cmp
aad
ret
pop
dec
in
(bad)
ror
pop
int
mov
gs
mov
lods
xor
push
inc
add
int
xlat
add
jmp
fcmove
ret
sbb
shl
and
sbb
stos
xchg
pop
iret
bound
add
xor
fucomi
pop
repnz
push
xchg
clc
xor
dec
cld
sbb
loopne
sbb
pop
rol
je
add
add
dec
inc
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
dec
or
push
dec
inc
or
add
or
add
add
add
add
or
add
add
pushf
das
cmp
add
add
inc
inc
add
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
push
ret
sub
add
or
dec
inc
inc
push
pop
inc
in
shl
aam
add
lock
and
ror
mov
jno
mov
into
retf
daa
jecxz
dec
jbe
inc
pushfw
ret
ins
xchg
pop
into
mov
jns
data16
sahf
jg
mov
and
fiadd
aas
push
or
mov
mov
mov
xchg
ins
(bad)
movs
movs
fcom
push
xchg
dec
aad
clc
ins
ret
sbb
arpl
sub
and
aad
jo
jp
in
cwde
gs
cld
xlat
jmp
mov
les
xor
pop
addr16
pop
mov
mov
sbb
xchg
ret
add
das
stos
sbb
movs
add
sar
retf
mov
icebp
clc
and
sbb
or
test
adc
and
jb
sbb
inc
inc
cmp
movs
and
xor
jns
xchg
into
jmp
inc
mul
test
mov
jo
nop
adc
or
fistp
push
xchg
enter
sbb
aas
lahf
and
out
nop
imul
mov
mov
clc
xlat
stos
pop
int3
adc
fcomp
sub
mov
jbe
xlat
in
aad
push
sbb
fistp
push
xor
call
push
fcom
or
pop
jle
cmp
fmul
sbb
push
mov
push
jg
cmp
addr16
test
or
sar
mov
pop
adc
out
(bad)
int
lahf
cmp
das
sar
mov
test
outs
jecxz
mov
adc
hlt
movs
add
sti
mov
clc
mov
xchg
adc
mov
adc
mov
(bad)
push
sub
ret
pop
out
(bad)
mov
jmp
(bad)
aaa
lods
in
(bad)
and
jno
scas
std
hlt
inc
and
scas
sub
pop
or
pop
mov
leave
xchg
outs
push
pop
adc
adc
add
int
test
mov
out
ficom
sub
xchg
aas
call
shr
cmp
add
xchg
stc
xchg
jno
data16
test
lahf
cmp
dec
sbb
int3
retf
sbb
mov
push
mov
ret
push
sbb
call
sub
imul
sub
(bad)
adc
repnz
push
ss
fld
sbb
js
lds
pop
push
and
loop
pop
push
xchg
mov
nop
jecxz
cdq
cmp
jl
icebp
xchg
jnp
pushf
sub
cmp
adc
and
out
loope
loope
clc
jbe
sbb
pop
daa
or
fwait
mov
xor
mov
out
enter
inc
sub
aaa
sub
dec
div
mov
into
sbb
retf
or
loopne
retf
add
jecxz
cmp
(bad)
mov
mov
and
sbb
mov
(bad)
stos
push
(bad)
fdiv
lods
push
mov
(bad)
cmp
mov
xlat
xchg
xor
pop
dec
lods
xchg
xor
lahf
(bad)
xchg
lds
scas
xor
movs
cmp
inc
cs
in
(bad)
arpl
pop
and
mov
xchg
xor
pop
fidiv
test
std
jbe
hlt
das
cmp
divps
iret
xor
test
js
jo
sub
pop
mov
adc
aas
and
mov
(bad)
out
aas
lods
popa
dec
into
test
ret
imul
adc
ror
stc
inc
dec
hlt
mov
sti
xchg
fld
lea
and
mov
aaa
(bad)
inc
aad
or
pop
cli
dec
adc
rcr
fisttp
test
mov
out
xchg
mov
lea
xchg
cli
adc
pop
das
jle
cmp
test
in
cmp
jecxz
ret
fs
xor
xor
sbb
scas
jns
lea
push
test
mov
add
stc
stos
in
aam
fidivr
mov
cmp
pop
or
or
cwde
xor
aas
movs
fs
push
aaa
fdiv
js
lock
data16
fs
cmp
add
adc
(bad)
mov
sub
xor
jmp
push
loop
mov
mov
sbb
outs
jg
cdq
(bad)
fstp
sbb
ja
jp
jo
sbb
xor
xchg
pop
or
adc
adc
mov
adc
or
fldenv
sub
jecxz
mov
add
in
inc
jne
in
add
cmp
sbb
pop
cmp
dec
push
xchg
xor
mov
repz
xor
in
cmp
add
mov
sahf
dec
jbe
adc
loopne
push
sub
sbb
xchg
push
sub
imul
out
inc
jne
or
or
out
mov
popa
or
dec
(bad)
mov
jp
cmps
(bad)
les
ins
fsub
hlt
jb
retf
ret
iret
pusha
mov
rcr
sub
sbb
jnp
sbb
push
push
mov
xor
out
mov
pushf
cmc
mov
inc
es
cmp
lock
hlt
psllq
push
mov
inc
call
jns
lahf
imul
popa
push
pop
mov
xor
mov
sbb
inc
and
pushf
inc
push
xchg
inc
(bad)
out
jge
call
pop
add
inc
cs
push
jmp
mov
xor
pop
(bad)
iret
xor
and
repz
ror
jne
nop
xlat
stos
dec
pop
adc
pop
imul
(bad)
cli
movs
mov
(bad)
push
fnstenv
icebp
fst
jbe
jns
test
inc
sti
sub
test
fist
les
cmp
dec
or
call
mov
jle
sbb
cmps
xchg
test
mov
(bad)
(bad)
jge
int3
and
mov
pop
mov
sbb
mov
call
xor
fisubr
call
and
int3
rcr
pop
inc
mov
sahf
sbb
ss
outs
fsubr
dec
jno
jns
mov
sbb
inc
enter
icebp
pop
inc
test
push
cmp
xor
jno
pop
(bad)
sbb
cmc
fbstp
jns
ins
cmp
loop
dec
pushf
mov
jns
fisubr
(bad)
dec
sbb
dec
xchg
jb
dec
sbb
loope
jo
dec
push
stos
jmp
and
mov
mov
hlt
xchg
mov
int3
pop
daa
inc
push
cmps
push
sbb
inc
lahf
sub
pop
jae
sbb
retf
out
add
ja
outs
test
repnz
int
pop
dec
and
loopne
cmps
cmp
imul
cmp
adc
cwde
(bad)
out
push
test
sbb
icebp
xor
idiv
dec
add
dec
dec
mov
or
retf
mov
frstor
and
sub
jle
test
pushf
cs
mov
cmps
lds
xor
dec
sub
iret
lods
repz
pushf
dec
mov
jnp
sub
in
or
fwait
int
sbb
cwde
pusha
clc
pop
or
push
and
scas
mov
mov
add
repz
cmps
retf
shl
out
sbb
test
pop
mov
xchg
add
xor
add
popf
adc
adc
jne
fsub
mov
mov
mov
pop
int
into
push
sar
(bad)
loop
test
or
ins
mov
sbb
xor
lods
jne
mov
int3
lds
xor
jb
lods
ins
inc
adc
and
mov
repnz
test
fwait
(bad)
stos
adc
arpl
mov
imul
imul
xor
outs
scas
mov
ins
and
dec
pop
dec
dec
popa
xor
or
outs
je
adc
(bad)
push
(bad)
mov
inc
adc
jmp
(bad)
into
dec
push
push
vpshad
shl
stos
lock
pushf
mov
xlat
mov
jne
sub
into
xor
push
xor
add
cmp
sub
scas
loop
cmp
jmp
imul
sar
ds
xchg
xlat
mov
js
fdiv
mov
daa
in
es
fmul
bound
imul
inc
xchg
pop
addr16
ja
cmps
gs
dec
push
pop
shl
jns
retf
xor
mov
fldcw
inc
das
jmp
adc
xchg
and
imul
or
aam
aaa
push
adc
outs
jo
inc
imul
dec
icebp
rol
jmp
add
or
leave
push
and
push
jge
fnstsw
outs
or
adc
cwde
dec
push
inc
jecxz
(bad)
sbb
sti
(bad)
xchg
fs
jl
int
push
adc
aam
sub
out
mov
pop
add
jbe
xor
inc
inc
xchg
xor
and
popa
scas
sbb
outs
bnd
cmp
aaa
fwait
lds
test
shl
stos
or
add
ret
retf
cdq
pop
mov
sbb
add
inc
cmp
xchg
sahf
push
mov
call
add
in
fbld
xchg
repnz
in
mov
push
(bad)
push
outs
popa
inc
movs
cmps
inc
out
arpl
xchg
(bad)
dec
mov
in
dec
imul
adc
aas
add
dec
fisttp
mov
dec
xor
lods
cs
pop
sub
ret
pop
mov
pop
stos
into
push
ds
sahf
aas
inc
adc
ins
ds
sbb
retf
push
movs
pushf
aad
lods
lock
daa
fst
(bad)
aad
cdq
loopne
gs
outs
or
sbb
add
adc
int3
sub
or
fsubr
(bad)
fbld
call
in
rcr
dec
(bad)
movs
shl
adc
movs
les
jg
xchg
ins
(bad)
les
leave
repnz
aam
dec
mov
and
test
push
call
pop
push
je
xchg
sub
jo
div
gs
xor
or
jecxz
retf
into
data16
jge
es
xchg
adc
sbb
retf
fcomp
sbb
icebp
out
(bad)
jl
dec
pop
dec
pop
mov
ret
mov
and
lds
iret
pcmpeqd
int
push
sti
scas
sbb
cmc
fidiv
rcr
mov
pushf
jbe
fst
cmp
js
or
ror
mov
adc
test
add
mov
ret
add
pop
out
rcr
data16
lods
xchg
push
mov
or
jnp
(bad)
mov
popa
clc
fdivr
int
dec
push
out
pop
add
and
xor
stos
aaa
push
fwait
sar
cdq
ja
mov
mov
pop
pop
xor
xor
push
jmp
rcl
out
movs
inc
push
pop
pop
movs
jle
jb
aas
inc
sar
or
setle
sub
fnstsw
sar
cmps
jb
jnp
aad
out
jb
push
push
shl
js
xor
xor
or
inc
out
mov
mov
inc
inc
fcmovb
pop
in
xor
or
mov
inc
cmc
retf
pop
scas
fstp
fwait
mov
sbb
cmp
test
xchg
jl
imul
loop
dec
mov
xor
adc
scas
mov
sub
mov
mov
outs
dec
aad
push
mov
jl
push
stc
dec
retf
test
and
mov
xchg
aas
stc
mov
stos
cmps
and
mov
jnp
mov
aaa
jnp
lock
(bad)
stc
aaa
lock
loopne
sar
sar
ficomp
and
arpl
add
dec
inc
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
dec
or
push
dec
inc
or
add
or
add
add
add
add
or
add
add
pushf
das
cmp
add
add
inc
inc
add
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
push
ret
sub
add
or
dec
inc
inc
push
pop
inc
in
shl
aam
add
lock
mov
mov
mov
idiv
mov
jmp
jge
sbb
cmp
push
adc
jnp
cdq
in
xchg
cdq
retf
ficomp
out
jl
add
dec
or
std
push
mov
pop
hlt
sbb
jmp
xchg
mov
pop
mov
ins
push
dec
xchg
pop
sti
ja
or
mov
dec
push
push
icebp
xchg
push
rcl
pop
(bad)
jmp
mov
adc
idiv
lods
jp
(bad)
popf
sub
push
test
xchg
sub
popa
aad
push
fwait
xor
outs
mov
inc
bound
add
(bad)
mov
mov
iret
xor
jnp
shl
popa
xor
lods
shl
lods
push
in
(bad)
jmp
or
fdivr
dec
movs
int3
outs
stos
dec
ret
ret
xchg
pop
inc
xlat
xchg
call
mov
std
jo
fnstenv
mov
inc
ret
(bad)
push
pop
push
ins
add
aas
loopne
into
xlat
ja
and
daa
fdivr
fdivr
into
and
adc
mov
push
mov
dec
(bad)
retf
hlt
cmp
mov
and
mov
jmp
ds
cmp
dec
dec
jecxz
inc
imul
jb
out
(bad)
xor
sbb
cmc
sub
cmp
test
retf
shl
sahf
and
inc
sbb
lds
jg
and
add
aam
dec
sahf
adc
adc
fwait
jl
in
rcr
bound
cmps
pop
sbb
out
fst
pop
stos
leave
loope
fcomp
jne
aad
jge
jnp
movs
jns
mov
arpl
aaa
loopne
test
sub
xchg
push
push
jmp
int3
mov
jg
call
mov
add
xor
push
in
or
push
mov
(bad)
mov
ja
add
jns
add
in
arpl
out
cmp
push
arpl
pop
cmps
rcl
mov
xchg
scas
(bad)
mov
jbe
sub
stos
sti
mov
movs
add
mov
push
fwait
movs
(bad)
add
mov
push
push
and
or
fisttp
popf
ja
adc
cmps
xchg
dec
dec
pushf
sbb
(bad)
and
dec
mov
call
xor
(bad)
stos
xchg
add
jp
stos
add
sbb
push
cmp
clc
imul
xor
jbe
lock
mov
jmp
jne
fmul
test
ss
pop
mov
dec
addr16
add
sub
leave
ins
pop
cmp
jae
pop
inc
jg
add
leave
rol
int
sub
daa
jecxz
mov
pop
adc
mov
jno
test
aam
xchg
pop
mov
xchg
(bad)
jmp
push
clc
sbb
lds
mov
inc
pop
mov
into
xchg
pop
test
or
call
adc
mov
movs
rcr
dec
jbe
dec
sub
in
or
test
xchg
adc
into
xchg
out
jge
mov
clc
fsub
mov
pop
mov
std
mov
push
movs
call
mov
and
mov
inc
sar
mov
jle
pop
rcl
mov
add
loopne
dec
pop
div
ficom
retf
jnp
add
jb
aam
mov
repz
mov
dec
in
xchg
ins
(bad)
rcr
setne
xchg
adc
rcl
mov
mov
dec
jae
inc
xchg
outs
cmp
jne
pop
xchg
lahf
xchg
pusha
mov
sub
fistp
pop
scas
cmps
or
loopne
and
pop
cmc
jg
mov
mov
fsub
sub
fimul
nop
sbb
pop
fist
add
rcr
imul
pop
push
cli
scas
pop
loope
in
inc
ss
adc
lods
jno
out
inc
int
push
in
fucomi
out
mov
lea
pop
jno
outs
hlt
cld
jbe
call
fadd
into
xor
mov
ja
jge
push
das
lahf
cld
jmp
xlat
mov
mov
mov
(bad)
in
and
retf
ins
and
pop
aam
push
sub
inc
pop
mov
aaa
imul
mov
xor
jmp
fisubr
ds
xor
jmp
ror
mov
jb
add
dec
fadd
movs
stos
cwde
push
dec
push
mov
add
xchg
adc
jnp
repz
cs
push
push
cmps
jecxz
cmp
xor
dec
or
push
and
ss
pushf
push
ss
dec
sbb
mov
lea
mov
fucomp
add
inc
hlt
mov
xor
dec
stos
mov
mov
push
push
mov
ja
jg
jl
test
xchg
mov
mov
imul
outs
and
lods
lds
add
mov
movs
add
ja
movs
add
adc
fistp
aad
push
xchg
sbb
mov
std
push
sbb
sub
das
test
add
pop
in
xchg
dec
pop
retf
leave
push
mov
test
add
shl
jno
mov
fisubr
mov
shl
mov
lock
adc
pop
enter
cs
pop
inc
add
xchg
test
adc
xor
mov
add
jecxz
inc
sub
ja
dec
pop
inc
aad
test
sub
xchg
jge
jne
inc
(bad)
dec
mov
mov
imul
lods
shr
pop
arpl
xchg
and
inc
adc
mov
mov
mov
mov
lahf
fisubr
inc
scas
cmp
cmc
add
ins
dec
mov
inc
inc
test
xor
ds
outs
imul
fmulp
sahf
lods
cmp
mov
push
adc
lahf
and
push
shl
cmc
cmp
or
in
cdq
push
mov
enter
out
sub
jbe
icebp
je
and
mov
mov
cwde
inc
int
js
xor
mov
clc
adc
mov
lods
jge
jmp
sub
sub
and
sbb
mov
nop
imul
scas
dec
lock
push
jbe
mov
xlat
dec
pop
cmp
shld
mov
pop
push
mov
pop
xor
movlps
arpl
enter
cmp
jecxz
stc
fnstsw
pop
sub
repz
dec
(bad)
push
aam
jo
test
mov
or
lock
xchg
out
rcl
xchg
sbb
fcmovne
(bad)
fild
inc
or
out
ins
inc
fild
pop
add
push
into
(bad)
(bad)
cld
cmps
and
and
shl
dec
call
and
int
fs
jbe
icebp
stc
push
adc
mov
inc
scas
rcr
movs
dec
pop
je
inc
mov
lods
xchg
loop
jge
cmp
and
jecxz
cmp
push
xor
pop
scas
mov
arpl
shl
xchg
push
rsm
jbe
fistp
test
jae
sub
jmp
out
loop
jae
push
sahf
lds
popf
out
ss
or
test
push
adc
cdq
scas
jl
mov
jmp
push
shl
sti
ins
call
mov
xchg
push
mov
jle
addr16
fisubr
xchg
loopne
jnp
sub
mov
sbb
or
sub
jmp
pop
test
mov
cwde
pcmpgtw
ja
in
scas
(bad)
test
xchg
inc
clc
popa
popf
sbb
lods
cs
lea
jmp
ret
mov
ret
xchg
mov
add
cmc
sub
xchg
mov
dec
dec
enter
jae
xor
aas
push
jl
mov
mov
cli
shl
icebp
sbb
jns
mov
sbb
repnz
add
outs
dec
jl
repnz
mov
das
mov
jno
mov
mov
inc
cmps
mov
sti
cmp
cmp
mov
push
xchg
das
aad
fwait
ret
lods
sbb
call
(bad)
cmp
lock
jae
(bad)
arpl
fisub
cmp
fbld
xor
jmp
pop
or
shl
cld
push
aad
ret
rol
jmp
xchg
pop
sar
mov
mov
mov
xor
test
mov
outs
fist
repz
adc
cdq
imul
dec
pop
in
out
push
retf
inc
sbb
inc
and
dec
jns
cmp
mov
pop
xchg
sub
retf
sub
ins
sbb
mov
ja
cli
data16
js
sbb
fidivr
dec
push
pop
leave
repz
shr
and
inc
ret
xchg
add
sar
push
test
lock
call
bound
pop
push
iret
and
and
mov
test
fbld
(bad)
jns
inc
push
jge
xchg
jle
cwde
mov
test
pop
mov
jmp
xor
add
xchg
int
jl
scas
retf
mov
xor
test
mov
test
fwait
sbb
jbe
sahf
xchg
ins
movs
(bad)
retf
inc
mov
in
test
call
mov
ins
stc
out
xchg
mov
adc
jge
lods
mov
xlat
inc
jl
pop
and
mov
xlat
pop
jecxz
mov
(bad)
aam
ss
mov
loopne
mov
push
cmps
mov
or
repnz
jne
hlt
aas
leave
mov
cmp
or
in
mov
adc
inc
or
xor
jle
fdiv
mul
or
cwde
push
mov
loopne
cli
les
xchg
ret
scas
sub
sti
mov
push
inc
xor
inc
mov
xchg
lahf
dec
test
xor
stos
add
or
(bad)
in
push
push
sbb
dec
dec
inc
sub
fcomp
jo
lahf
jle
xchg
mov
and
ds
xor
fnstcw
pop
outs
jbe
test
or
sbb
dec
fdivrp
cmp
sub
rcr
loope
mov
add
cwde
scas
in
test
scas
fwait
sahf
inc
fs
call
or
imul
mov
imul
dec
lahf
(bad)
aas
lock
pusha
retf
dec
inc
mov
movs
out
inc
hlt
je
mov
ror
(bad)
mov
mov
inc
int3
clc
cld
loope
dec
icebp
test
xchg
aad
mov
sub
sahf
test
fist
jge
xor
and
jmp
fsub
xor
enter
test
and
repz
dec
jecxz
jno
inc
add
retf
xchg
xchg
jns
mov
cs
sub
daa
pop
xor
dec
lods
nop
sbb
ins
add
mov
test
sbb
enter
pop
inc
rcr
into
push
jge
sti
mov
inc
clc
pop
pop
pushf
dec
jg
pop
aas
mov
add
rcr
not
(bad)
repnz
cmp
repz
cdq
mov
mov
xchg
loopne
sbb
cmps
aam
jl
xor
dec
pop
movs
push
and
test
xor
cmps
pop
(bad)
push
repz
mov
jmp
adc
fistp
retf
(bad)
lock
xchg
and
mov
aam
push
jmp
mov
inc
sub
iret
mov
push
dec
pop
inc
dec
fld
pop
mov
ret
add
dec
inc
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
dec
or
push
dec
inc
or
add
or
add
add
add
add
or
add
add
pushf
das
cmp
add
add
inc
inc
add
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
push
ret
sub
add
or
dec
inc
inc
push
pop
inc
in
shl
inc
xchg
lea
add
xchg
xchg
out
lea
xchg
scas
or
and
enter
rcr
push
jmp
push
lods
je
xchg
and
sbb
cmc
mov
hlt
nop
push
bound
and
fwait
xchg
jne
sub
aaa
lock
aad
popf
inc
sbb
pusha
xchg
inc
(bad)
jb
leave
fidivr
and
add
mov
mov
ret
test
cmps
sbb
mov
add
sbb
xchg
loope
pop
cmc
xchg
aas
push
sahf
js
sub
out
pop
out
sub
xchg
jmp
mov
mov
fild
sbb
pop
lods
fsubr
movs
xchg
jmp
movs
jno
jg
dec
jbe
cmp
jle
push
push
(bad)
mov
icebp
jle
xor
push
call
mov
in
jo
mov
sti
or
adc
xor
jnp
jecxz
jns
sbb
cmp
jmp
ss
jae
adc
test
pop
and
or
xchg
out
dec
cli
jno
pop
pop
cmova
not
daa
ins
push
and
pop
adc
xchg
adc
pmulhw
pop
sub
sbb
adc
repz
xchg
jbe
leave
(bad)
fbld
push
mov
in
dec
test
frstor
jns
pop
fimul
xor
mov
clc
sbb
cmp
adc
jle
push
loopne
cmp
dec
test
aaa
jmp
pop
xor
lods
int3
or
inc
lods
cmps
test
ror
xchg
aaa
loope
aam
mov
xor
and
arpl
gs
sub
pop
add
xchg
pop
movs
push
test
adc
bound
loop
repnz
inc
cwde
(bad)
ja
lock
adc
sub
add
into
cmc
call
mov
ds
pop
stos
push
or
hlt
ja
xchg
push
jns
sub
mov
xchg
sbb
jae
lock
xor
std
push
retf
cli
out
adc
cwde
sahf
adc
aaa
out
out
sti
ja
push
pop
jmp
lock
fild
mov
aad
cld
fldcw
inc
int
mov
(bad)
mov
test
xlat
std
pushf
loopne
cli
jmp
mov
popa
popa
pop
je
mov
shl
div
jmp
pushf
xlat
pop
sbb
shl
push
jmp
push
cmps
dec
inc
cmps
push
sbb
fdivr
adc
mov
cmp
dec
(bad)
sub
mov
jmp
mov
cmp
push
xchg
lds
lds
aad
mov
repz
cmps
xchg
mov
retf
xchg
ja
mov
pop
xor
xchg
cmp
popf
popa
push
stos
rcl
(bad)
scas
inc
mov
mov
mov
push
loope
push
add
loop
(bad)
je
xor
dec
mov
mov
out
imul
aad
fmul
xor
xor
dec
popf
int3
loop
mov
xor
lock
arpl
jecxz
in
shr
imul
adc
sbb
stos
pop
rcr
push
jl
jmp
inc
push
shl
xchg
clc
add
pop
sub
gs
xchg
and
ret
aas
mov
xor
int3
mov
mov
aaa
xchg
test
test
pop
or
jg
push
xchg
sbb
jg
sub
push
loopne
test
loop
fdiv
xor
(bad)
sbb
ffree
mov
xlat
pop
loopne
fsubr
dec
pop
push
into
(bad)
(bad)
fcom
inc
and
push
lods
(bad)
cmc
repnz
ret
call
xchg
mov
out
out
es
call
mov
mov
sbb
push
aas
push
push
call
push
pop
cmp
hlt
add
push
outs
jno
jmp
les
pop
(bad)
sbb
fnsave
retf
cdq
cmc
popf
mov
sub
pop
add
iret
pop
sub
lea
push
pop
mov
in
dec
retf
or
sbb
push
outs
xor
mov
out
dec
fdiv
mov
pop
cmp
or
sbb
xchg
xchg
aad
test
adc
lock
inc
pop
push
out
(bad)
sahf
inc
jge
stc
add
icebp
xor
in
movs
pop
fwait
outs
cmps
xchg
xor
mov
jae
jne
(bad)
aad
dec
fs
xchg
out
(bad)
stc
cmovne
pop
sbb
or
push
clc
bound
push
in
push
add
xlat
daa
push
push
cwde
xchg
stc
fstp
cs
fistp
cli
pop
cdq
pop
push
cli
aam
movs
repnz
out
ja
inc
adc
xchg
inc
dec
test
lods
pop
pop
nop
cmp
sbb
cmp
aad
test
(bad)
xor
enter
repz
icebp
adc
mov
add
popf
mov
cmc
add
and
add
js
je
jbe
dec
fcmovnb
dec
icebp
pop
rol
adc
hlt
push
jo
out
and
add
pop
int
rcr
mov
xchg
mov
push
stos
(bad)
and
dec
inc
push
add
aad
pop
inc
inc
jle
cmp
aam
mov
mov
mov
imul
push
mov
xchg
test
pop
adc
mov
lods
div
xchg
adc
retf
adc
jecxz
arpl
xchg
pop
add
jge
ds
scas
jg
cmps
xchg
loope
cwde
push
and
jo
shr
(bad)
dec
ja
dec
lods
in
xchg
sbb
adc
sbb
aad
fnstenv
icebp
aam
fcom
out
push
jp
out
fbstp
xchg
mov
add
mov
mov
in
jl
pop
jmp
cmp
sbb
add
adc
or
mov
call
popa
pop
les
mov
das
int3
mov
stos
addr16
das
mov
xchg
or
stos
(bad)
lds
popa
or
fnstenv
std
sub
ins
dec
pop
retf
inc
add
gs
pusha
outs
fistp
mov
mov
loope
repz
arpl
into
or
inc
out
(bad)
out
hlt
or
adc
xchg
ins
pop
cld
repnz
out
popf
mov
out
pop
sub
pushf
jmp
dec
xchg
xor
mov
je
je
fdiv
gs
inc
ds
xor
jns
cmp
cdq
jnp
nop
pusha
push
adc
add
outs
pusha
dec
or
sub
repz
aaa
push
push
jecxz
shl
add
jmp
xchg
retf
and
dec
pop
sbb
hlt
inc
mov
inc
shr
loope
xor
push
aad
xchg
(bad)
sub
mov
les
jae
adc
mov
push
sub
mov
gs
mov
or
push
xchg
fst
pop
fwait
dec
xchg
adc
movs
fstp
jle
jne
imul
mov
cmp
sub
mov
into
jne
pushf
xor
and
sub
popf
jbe
fbld
xchg
ins
xchg
push
mov
bound
ins
jmp
mov
jb
loope
fwait
mov
cmp
loope
pop
mov
icebp
inc
mov
mov
mov
jmp
sub
ins
test
add
adc
ret
mov
stos
sbb
dec
xchg
cmp
(bad)
and
test
jle
aam
jo
dec
add
aas
push
js
in
movs
adc
push
ja
stos
mov
cmc
popa
stos
cwde
sbb
pop
jl
mov
(bad)
sub
enter
(bad)
repz
aam
mov
inc
call
mov
(bad)
push
rcl
repz
mov
sbb
cmp
aam
call
jge
jnp
pop
adc
out
xchg
neg
jo
stos
sbb
ins
mov
ds
fsubr
repnz
dec
xor
push
aam
outs
mov
fbld
sbb
daa
cmp
jl
cmp
pop
xlat
cmc
cmps
ret
imul
in
mov
jle
push
pusha
(bad)
xchg
sub
pushf
pop
inc
xchg
jmp
jmp
sbb
xor
xor
in
mul
xor
sub
jg
cwde
pop
(bad)
jl
jmp
dec
mov
adc
jle
ds
pop
push
inc
ja
jns
cwde
lods
repnz
cmp
sahf
push
adc
icebp
leave
rcl
stos
movs
js
ficom
cs
fs
(bad)
add
and
ficomp
cmps
retf
pop
adc
fstp
push
adc
and
mov
retf
xchg
test
int
clc
sub
iret
adc
inc
iret
xchg
sahf
add
mov
mov
mov
movs
rol
lods
mov
mov
mov
ins
jnp
dec
push
shl
(bad)
add
dec
int
out
lods
(bad)
cld
loop
jle
xchg
movs
mov
push
mov
or
sub
mov
pop
xchg
aas
ins
push
xchg
nop
sbb
cmp
mov
cli
xchg
push
gs
sar
jl
cmps
popa
(bad)
pop
movs
push
pop
inc
push
dec
jno
mov
or
sbb
int
jmp
sbb
es
in
sbb
xchg
leave
stc
xor
fmul
sbb
adc
bound
jle
inc
xor
hlt
in
xchg
popa
pop
jmp
dec
ja
or
and
out
pop
enter
mov
mov
in
xchg
or
in
jmp
pop
mov
jb
mov
push
aad
push
add
test
fsubr
lods
jmp
(bad)
mov
pop
or
cmp
mov
and
lods
call
push
sub
into
xchg
rol
popa
aaa
xor
sbb
nop
jne
in
lods
je
cmps
lods
in
adc
adc
mov
call
cli
inc
mov
xchg
ret
xor
and
imul
cs
cmp
das
xchg
jbe
mov
adc
bound
or
int
mov
outs
push
pop
dec
xlat
pop
movs
enter
cmps
jno
jno
lds
xor
jae
mov
lahf
jbe
lahf
rol
gs
xor
push
inc
dec
mov
cmp
pop
push
or
je
fmul
and
jg
out
in
adc
aam
xchg
mov
sar
mov
es
cmp
test
xor
ins
dec
fstp
fistp
cmp
sahf
imul
gs
xor
jle
push
push
mov
retf
pushf
cmps
inc
add
push
mov
daa
fisttp
inc
mov
pop
jb
mov
dec
add
test
cmps
loopne
idiv
jno
mov
nop
sub
or
jb
add
fidiv
or
sub
sbb
dec
push
pop
(bad)
in
into
push
dec
mov
add
and
ins
das
div
cmp
inc
inc
popf
adc
sub
dec
nop
into
out
mov
adc
(bad)
cli
or
mov
sub
xlat
out
cs
int
pop
fs
jle
test
loop
adc
ja
pop
jmp
adc
leave
outs
jno
mov
mov
mov
cmp
js
cmp
aaa
lock
loopne
sar
lock
retf
dec
sub
add
add
dec
inc
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
dec
or
push
dec
inc
or
add
or
add
add
add
add
or
add
add
pushf
das
cmp
add
add
inc
inc
add
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
push
ret
sub
add
or
dec
inc
inc
push
pop
inc
in
shl
fmul
add
lock
fdiv
out
pushf
jno
cmp
dec
sahf
out
sbb
fdiv
fst
cmps
adc
rcr
int
mov
mov
cmps
cmp
out
repz
add
mov
es
cmc
call
enter
imul
cmp
aas
push
adc
out
mov
pop
add
into
push
adc
cdq
sub
and
arpl
test
movs
sbb
xchg
pop
push
pop
call
retf
dec
(bad)
sti
push
dec
je
mov
test
xlat
inc
adc
push
mov
xchg
add
push
mov
pop
cwde
add
ficom
mov
xchg
mov
and
jno
sbb
dec
sbb
imul
movs
ret
xchg
cmp
pop
push
test
sahf
int3
cmp
jo
jmp
mov
cmp
call
dec
cmps
lock
jo
mov
les
dec
or
dec
out
cmp
pop
(bad)
(bad)
out
aad
es
and
dec
mov
pop
mov
adc
jo
and
int3
pop
xor
cmp
iret
inc
cmps
push
test
mov
jl
xor
jle
lods
sar
xor
bound
ret
push
sub
clc
cmp
mov
xchg
enter
mov
xchg
fdiv
aaa
jmp
ins
mov
xchg
int
mov
inc
xor
jbe
dec
jge
mov
sbb
jne
cwde
inc
pop
fidivr
mov
mov
sub
inc
dec
jae
dec
mov
test
cmp
mov
sbb
data16
pop
leave
scas
pop
scas
pop
mov
imul
icebp
loope
cmps
xchg
push
mov
dec
pop
pop
xchg
sbb
jb
test
imul
add
dec
das
dec
shr
movs
stos
mov
add
leave
cli
jmp
outs
sbb
(bad)
call
sbb
(bad)
cmp
lock
jp
sbb
ror
test
xor
sbb
jo
mov
jne
pop
cli
jmp
mov
cs
or
and
pop
imul
nop
loopne
dec
mov
mov
mov
pusha
nop
or
shl
(bad)
in
test
xchg
pop
cmp
push
scas
inc
loope
push
mov
jmp
into
inc
pop
cld
xchg
xchg
in
ficom
aad
fistp
sti
mov
push
xchg
pop
addr16
and
cmp
pushf
sub
adc
test
popa
mov
xor
pop
jmp
dec
or
pop
(bad)
mov
add
in
xor
shl
sar
rcl
jecxz
sbb
mov
gs
add
and
hlt
and
lock
dec
pop
mov
std
sub
loope
push
or
inc
outs
xor
clc
out
pop
mov
sbb
sbb
int3
inc
lock
mov
loopne
and
jns
ja
retf
mov
int
mov
mov
jle
mov
fmul
mov
imul
mov
mov
and
pusha
mov
or
mov
hlt
mov
das
push
inc
push
daa
addr16
adc
in
jmp
movs
fistp
mov
fbstp
jae
out
ins
pop
not
ds
sub
(bad)
xor
addr16
push
push
mov
fbstp
aam
pop
adc
dec
push
mov
iret
xor
jns
mov
dec
xchg
dec
sub
cmp
imul
pop
xor
add
into
mov
mov
xchg
jmp
jae
or
and
dec
sbb
dec
sub
std
std
fs
popa
dec
and
pushf
scas
xor
icebp
movs
mov
stos
pop
jmp
cmp
mov
mul
loope
dec
and
sub
(bad)
aam
pop
pop
test
or
mov
sti
push
in
and
inc
push
jno
stos
cdq
pop
in
mov
and
rol
(bad)
outs
loopne
dec
sbb
mov
xchg
test
dec
jge
ja
jmp
jo
icebp
sbb
mov
daa
cdq
and
adc
dec
sub
inc
(bad)
rcl
mov
rol
mov
add
leave
std
xchg
jp
sub
adc
frstor
fwait
cmp
fs
xchg
sar
imul
dec
sub
dec
sub
cmp
inc
pushf
dec
cli
repz
sub
fld
mul
push
mov
sub
mov
or
pop
dec
fs
pop
sbb
(bad)
out
jo
sub
xchg
add
mov
pop
ficomp
mov
ins
pushf
inc
sti
jmp
and
xchg
mov
aaa
not
nop
in
mov
ror
sar
gs
add
mov
enter
adc
into
into
fwait
rcr
fnstcw
aam
mov
add
pop
shl
stos
xor
dec
jp
out
ss
jne
scas
(bad)
jle
xor
sub
sahf
cmc
and
and
dec
add
cld
clc
add
inc
ret
je
test
xlat
in
(bad)
ds
stos
stos
adc
iret
(bad)
adc
in
jp
push
std
imul
jp
or
cmc
popa
sbb
sar
jb
div
xchg
mov
pop
mov
mov
cmc
xchg
sbb
cmp
fdiv
add
dec
cmc
mov
jge
imul
xor
cdq
push
push
hlt
loopne
(bad)
adc
inc
jbe
mov
aad
fcom
out
lods
icebp
mov
clc
mov
sbb
xchg
arpl
push
add
cmp
popf
mov
outs
sbb
sbb
scas
in
sbb
cmp
ror
xor
aas
shr
iret
imul
dec
fwait
sti
cmp
pop
popa
popa
mul
scas
sub
jnp
stos
xchg
idiv
xor
mov
and
ins
mov
ret
int3
add
xchg
leave
shl
adc
sbb
js
jb
xchg
leave
xor
sbb
sbb
mov
mov
cmp
xchg
ret
adc
hlt
jo
push
clc
add
nop
mov
mov
xchg
jae
push
dec
and
mov
sbb
(bad)
xor
repnz
inc
mov
call
xchg
inc
mov
mov
sti
adc
stos
movs
lds
sbb
cld
mov
nop
jnp
fidivr
inc
inc
or
sbb
adc
push
and
js
or
mov
adc
fsubr
cmp
pop
in
push
fdiv
std
test
aas
(bad)
arpl
in
in
jbe
mov
pusha
cmc
cmp
jns
pop
iret
lahf
fild
add
sub
or
(bad)
jp
jmp
imul
mov
sub
cld
cmp
jge
xchg
fist
out
test
outs
inc
rcl
loop
push
mov
pushf
ror
cdq
sbb
and
jno
xlat
pop
sub
xor
outs
push
imul
xor
push
(bad)
mov
aam
adc
mov
xor
sbb
scas
jge
xor
sub
out
in
xchg
lahf
and
into
mov
and
sub
sub
ret
mov
adc
dec
sbb
cmp
and
xchg
and
cmc
pop
cmps
push
shr
cmp
movs
push
data16
gs
ret
lock
sub
in
je
cmp
push
(bad)
push
xchg
sbb
in
pop
ret
cmc
pop
inc
lods
mov
popf
mov
push
test
sub
test
mov
popf
icebp
xchg
jbe
enter
mov
adc
dec
xchg
pop
or
idiv
add
out
dec
lods
or
arpl
pop
add
pop
cmp
xor
inc
dec
and
(bad)
pop
pop
pushf
or
xchg
push
pop
cld
mov
cmp
gs
ins
xchg
cmp
cdq
adc
ins
adc
mov
mov
imul
dec
icebp
inc
gs
aaa
dec
adc
adc
inc
cmp
sub
mov
mov
fild
pop
call
xor
push
mov
shr
and
int3
or
jl
pop
jle
xchg
mov
mov
js
adc
(bad)
sub
cli
sub
in
xchg
and
cld
mov
push
(bad)
in
mov
adc
push
fs
je
cs
jmp
gs
aas
mov
mov
sti
bnd
adc
stos
popa
mov
jbe
pop
lahf
test
inc
cmp
pushf
xchg
scas
mov
out
adc
mov
iret
pop
out
cmps
pop
nop
and
jae
mov
(bad)
cmp
xor
shl
dec
mov
mov
sar
inc
or
or
inc
dec
sbb
pop
hlt
push
in
mov
sbb
arpl
xchg
xor
push
mov
js
es
push
sub
call
mov
mov
mov
and
jae
xchg
ss
sbb
sub
movs
cmp
test
ins
dec
mov
ins
aaa
pop
dec
das
adc
popf
mov
jmp
or
jno
das
adc
dec
nop
adc
sub
push
fnstsw
sahf
sbb
add
mov
ret
retf
push
sub
push
mov
int
jne
ins
fcomp
xlat
dec
jae
and
shr
xchg
loop
push
rcr
xchg
stos
adc
mov
stos
fwait
shld
ds
push
ret
icebp
mov
adc
(bad)
mov
jmp
or
mov
dec
daa
mov
pop
sbb
and
div
repnz
aas
js
nop
push
gs
sub
ja
xchg
mov
xor
(bad)
mov
sbb
call
or
pop
sub
out
adc
es
dec
rol
daa
pop
cmp
add
movs
retf
and
fild
mov
outs
(bad)
xchg
adc
sti
scas
mov
push
clc
mov
xchg
inc
xchg
mov
lods
cmp
pop
sub
dec
stos
pop
stos
xchg
(bad)
js
mov
loop
add
and
les
mov
cmp
push
fiadd
icebp
dec
scas
js
retf
(bad)
cdq
jno
(bad)
jp
loop
mov
push
or
pop
inc
outs
jne
fcmove
in
out
xchg
cwde
fldenv
fisubr
and
(bad)
(bad)
sbb
mov
cli
div
add
test
dec
jmp
mov
js
jnp
mov
push
mov
cld
pop
mov
cmp
ins
pop
leave
mov
fidivr
cmp
fidiv
add
lods
(bad)
lods
fisub
xchg
shr
imul
inc
inc
call
mov
mov
jp
pop
les
test
jo
inc
xchg
leave
int
fimul
stos
iret
cmp
push
mov
test
arpl
ins
pusha
or
ret
aas
imul
mov
pop
cmps
movs
inc
push
inc
test
adc
add
jae
pop
into
push
neg
cmp
jae
adc
or
dec
xchg
pop
(bad)
pushf
sbb
lods
test
lahf
(bad)
ja
or
add
sar
push
dec
lock
loopne
sbb
pop
mov
pop
test
add
add
dec
inc
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
dec
or
push
dec
inc
or
add
or
add
add
add
add
or
add
add
pushf
das
cmp
add
add
inc
inc
add
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
push
ret
sub
add
or
dec
inc
inc
push
pop
inc
in
shl
aam
add
lock
int
data16
jecxz
out
cdq
mov
iret
cmp
mov
mov
mov
cmp
jnp
loope
push
enter
sahf
pop
icebp
cld
(bad)
and
and
into
xor
mov
adc
pop
call
xor
(bad)
je
or
push
jmp
add
lea
test
mov
push
lods
movs
sti
or
outs
fwait
std
jne
and
and
jmp
and
loope
popf
(bad)
shl
xchg
shr
loopne
iret
cmp
and
push
push
sub
push
xor
add
repnz
xor
mov
inc
das
push
cmp
fs
pop
rcr
sub
or
add
out
mov
mov
repz
jge
shl
lods
jp
inc
mov
add
mov
jl
les
inc
add
or
loope
jns
popa
adc
retf
inc
or
in
sti
mul
test
jne
mov
(bad)
sahf
adc
xchg
cdq
fnstsw
in
popf
adc
cmp
(bad)
and
dec
je
retf
shl
scas
inc
add
lods
or
sbb
cmp
pop
icebp
ss
ds
mov
in
in
bound
jmp
ss
(bad)
sub
lods
fcmovnu
call
mov
out
fcmovnbe
in
push
(bad)
leave
sub
cmps
and
std
add
popf
xor
rcl
test
jns
mov
mov
dec
fld
mov
dec
dec
arpl
inc
jns
adc
int
in
xchg
mov
xor
add
sub
sbb
fucomp
add
sub
dec
xchg
shl
fucomp
inc
cmp
aad
and
jno
xchg
jg
xchg
dec
test
jae
mov
sbb
and
or
outs
pushf
stos
jle
aad
or
and
enter
fisub
sbb
and
xchg
cmc
adc
ficomp
(bad)
dec
mov
mov
icebp
push
(bad)
mov
xchg
fdivr
xchg
daa
fsub
inc
sub
xor
test
rcr
mov
pop
ja
and
ins
xor
bound
fwait
imul
into
cmc
push
gs
mov
mov
aaa
sbb
dec
push
mov
gs
pop
mov
jecxz
mov
cdq
jno
pop
jg
adc
push
cmc
cwde
call
add
adc
loop
lods
xchg
popf
std
lods
sub
iret
out
pop
dec
(bad)
rcl
test
push
and
jmp
mov
div
stc
shl
mov
imul
fmul
or
sub
jne
jmp
mov
hlt
cmp
outs
jns
enter
icebp
lods
gs
mov
movs
mov
sti
idiv
push
inc
mov
les
jmp
leave
mul
fadd
loopne
dec
jge
lea
fst
in
xlat
inc
cmp
mov
inc
pop
(bad)
js
inc
sbb
test
mov
and
add
push
stos
jno
repz
fbstp
(bad)
pop
out
mov
sar
mov
jmp
and
int3
(bad)
into
push
add
test
mov
int
xchg
pop
cmps
jecxz
scas
(bad)
data16
movs
cmc
je
inc
jns
xchg
sub
(bad)
out
push
jecxz
push
mov
jmp
cmp
push
dec
mov
mov
fisttp
pop
mov
mov
stos
inc
adc
pop
and
sahf
jecxz
test
xor
xchg
push
aas
xchg
mov
fld
and
fidivr
idiv
test
sub
aam
in
clc
mov
test
outs
sub
sti
jmp
sbb
ins
cmps
mov
mov
mov
outs
cmps
lock
adc
xchg
cwde
cmps
fimul
push
add
or
sar
outs
or
xor
adc
sub
std
imul
in
daa
xchg
popa
dec
add
or
retf
rcr
imul
ins
dec
mov
(bad)
int3
adc
xor
test
jmp
and
jnp
aaa
sub
sbb
fnstcw
mov
aas
iret
call
bound
pop
inc
test
push
mov
mov
push
sahf
and
pop
pop
nop
inc
pop
mov
push
movs
out
or
mov
std
sti
in
js
fmul
imul
sub
cmp
pop
or
or
data16
cdq
pop
(bad)
scas
icebp
sub
cmps
jbe
hlt
inc
push
cli
xlat
addr16
(bad)
into
bound
ja
inc
outs
mov
js
(bad)
loopne
mov
imul
adc
inc
dec
scas
imul
dec
and
fldcw
scas
push
(bad)
pop
dec
mov
inc
rcl
pushf
aam
cmp
fistp
imul
push
xor
out
dec
out
jno
xor
fwait
ins
imul
jmp
ja
cli
push
pop
sub
mov
out
movs
aad
mov
mov
inc
push
daa
shr
dec
call
das
aaa
out
jno
pop
inc
cld
(bad)
outs
out
adc
rcl
jne
sbb
mov
mov
mov
push
cmp
xchg
inc
cmp
and
je
cmp
lods
cmp
pop
dec
pop
call
push
push
or
push
movs
icebp
bound
and
arpl
sub
mov
imul
mov
push
fwait
push
mov
sub
pop
dec
or
sbb
fcmovb
jmp
call
sub
(bad)
ja
jge
dec
ror
mov
icebp
fimul
in
das
xor
sbb
fcomp
ret
push
leave
(bad)
lock
cmp
jle
test
xor
add
aam
adc
js
xor
sbb
ja
push
jno
dec
add
popf
mov
jbe
pushf
and
push
int
ror
pop
xchg
movs
mov
repnz
pop
jb
test
in
xor
pushf
retf
jmp
mov
popf
fcmovu
test
jge
enter
push
adc
movs
dec
movs
cmc
adc
pop
sub
(bad)
mov
sub
sbb
add
hlt
jmp
inc
dec
jnp
pop
mov
and
inc
rcl
mov
lods
mov
into
cmp
mov
jge
addr16
jo
xchg
iret
mov
xchg
lds
jmp
loope
loopne
mov
push
xor
mov
cmp
ins
push
add
lods
xor
sbb
neg
dec
cld
pop
xor
cmps
mov
xchg
mov
cmps
or
xor
sbb
fild
hlt
jo
lock
sbb
xor
nop
dec
in
and
add
inc
bsf
push
mov
icebp
into
mov
rcl
and
hlt
sar
push
xor
leave
push
adc
pop
sub
pop
idiv
stos
mov
sub
and
inc
mov
loop
cli
push
mov
cmp
dec
hlt
cld
sub
div
and
neg
outs
(bad)
xchg
aam
mov
out
sbb
retf
xchg
nop
pop
fnstenv
pop
ds
sbb
out
cmp
pop
cs
xchg
loope
dec
jle
jbe
mov
ret
dec
mov
cmp
inc
ja
mov
arpl
pop
out
adc
sbb
jmp
push
mov
sar
test
aas
dec
pop
je
(bad)
mov
out
sub
bound
cwde
(bad)
mov
loop
std
add
popw
out
push
test
mul
js
and
xchg
pusha
das
repnz
cmp
jne
mov
test
data16
(bad)
rcr
ds
test
inc
jnp
loop
cwde
or
jns
mov
je
lods
dec
adc
mov
mov
js
movs
ret
loope
jle
les
jle
clc
cmp
addr16
sbb
ja
pop
jle
lods
imul
cmp
loop
and
cmps
fisub
or
scas
adc
jp
push
shl
loopne
mov
mov
hlt
leave
outs
rcr
jns
scas
std
pop
icebp
mov
jmp
or
cli
or
and
retf
inc
scas
faddp
mov
or
cwde
pop
aas
pop
call
data16
addr16
pop
add
mov
mov
pop
pusha
movs
loope
mov
outs
xchg
in
jecxz
fwait
and
fiadd
aad
rol
mov
cmp
mov
mov
std
ss
and
dec
jne
sar
loopne
lahf
pop
fwait
inc
lods
mov
sub
ror
(bad)
mov
ror
and
xor
retf
jge
inc
pop
jo
in
pop
clc
push
cmp
out
jae
and
push
sahf
retf
adc
ins
adc
push
add
pop
jl
(bad)
(bad)
out
movs
imul
hlt
cmp
loope
pop
inc
call
add
int
(bad)
fidiv
loop
cmps
loop
push
outs
ins
mov
ins
pop
mov
fistp
dec
adc
leave
shl
jne
stos
cmp
out
ins
or
(bad)
push
mov
xchg
sbb
mov
(bad)
outs
sbb
cwde
movs
loopne
mov
cs
jmp
cmps
or
jge
xor
mov
or
sub
call
sbb
ja
test
dec
ror
jge
ja
out
jle
push
ins
jne
jp
or
repnz
outs
sbb
iret
int3
dec
push
int3
cmp
jae
inc
jne
mov
mov
mov
pop
loopne
mov
test
(bad)
xchg
loop
or
cmp
sub
ret
pushf
jno
lods
or
ins
dec
mov
xchg
adc
leave
stos
adc
mov
int3
repnz
add
retf
xchg
das
lahf
test
int
enter
cld
daa
ds
mov
ret
mov
adc
jp
mov
add
enter
arpl
mov
xor
ja
int
pop
dec
adc
pop
pusha
jmp
aad
les
mov
and
push
jae
ret
adc
or
push
mov
xchg
aas
inc
icebp
lock
pop
out
rcr
xchg
xor
enter
stos
popa
js
jnp
clc
int3
ret
(bad)
sbb
imul
jnp
and
jl
sub
push
ja
add
jmp
int3
add
push
add
and
fdivr
sub
ret
fucomp
sub
movs
mov
outs
sar
cmp
in
retf
pusha
jae
sar
scas
idiv
pop
test
lahf
ss
or
ror
or
(bad)
push
sbb
pop
push
imul
fsub
(bad)
cmp
out
gs
and
cwde
adc
cmps
imul
jp
ins
loope
jae
lds
sub
neg
sub
mov
test
fistp
jno
aam
dec
inc
xchg
mov
arpl
out
pop
xor
sbb
int3
pusha
push
fs
push
mov
iret
jb
push
pop
clc
pop
adc
and
push
or
pop
mov
cld
sbb
aaa
lock
loopne
sar
je
ss
adc
dec
inc
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
dec
or
push
dec
inc
or
add
or
add
add
add
add
or
add
add
pushf
das
cmp
add
add
inc
inc
add
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
push
ret
sub
add
or
dec
inc
inc
push
pop
inc
in
shl
inc
xchg
lea
add
xchg
adc
dec
ins
dec
(bad)
push
inc
add
movups
in
xchg
out
push
inc
jmp
mov
je
sub
out
iret
and
test
shrd
cli
xlat
clc
xchg
fwait
pushf
pop
call
adc
xlat
mov
or
gs
cmp
xchg
fwait
xchg
xlat
xor
pop
repnz
pop
inc
hlt
cmp
or
in
xchg
xor
cld
jmp
cmp
lea
es
mov
test
jmp
dec
sahf
push
mov
sbb
fbstp
add
sbb
ret
fisttp
pusha
xor
mov
mov
mov
in
pushf
scas
retf
add
lahf
ins
cmc
fldcw
mov
iret
cmps
loope
mov
daa
sub
lods
push
out
or
dec
test
xchg
push
xchg
jns
and
in
inc
mov
xchg
add
xor
jno
xlat
shl
inc
setnp
cmp
pop
clc
adc
adc
jle
add
je
inc
aas
xchg
sbb
mov
mov
push
sbb
into
ds
sbb
mov
dec
mov
fstp
mov
leave
jmp
fs
retf
push
push
mov
stc
retf
movs
cmps
or
inc
xchg
es
(bad)
aas
fwait
inc
mov
adc
out
or
adc
fsub
add
lock
mov
(bad)
icebp
xchg
cmps
scas
aaa
dec
xor
(bad)
push
aad
add
(bad)
movs
jmp
fcom
in
jmp
mov
popa
xchg
and
js
out
mov
imul
popa
(bad)
ins
repz
jb
int3
mov
xchg
or
xor
sbb
ror
xor
les
jle
add
add
cmps
loop
add
pop
cmps
call
and
pop
leave
mov
jnp
push
lods
call
ror
pop
out
scas
das
cmp
sbb
sub
mov
push
icebp
mov
lahf
imul
ficom
sahf
shl
jne
cmp
mov
jbe
mov
inc
sbb
frstor
ffree
pop
adc
out
add
loopne
sub
(bad)
mov
cmp
cld
cli
pop
adc
leave
mov
std
(bad)
xchg
fld
sub
and
cmc
xchg
aas
mov
inc
mov
xor
shr
xchg
outs
out
cld
(bad)
mul
cmp
enter
push
fcmovb
push
dec
adc
cli
sti
sbb
bound
mov
sahf
test
jbe
fistp
jmp
jae
inc
std
popf
mov
add
xchg
in
jge
mov
and
nop
mov
xchg
xor
and
in
call
rcl
sbb
hlt
jb
xchg
mov
dec
jb
push
cmp
mov
lahf
adc
cmp
jg
adc
inc
scas
rcr
mov
mov
and
std
leave
mov
icebp
loope
or
mov
rol
hlt
pop
out
mov
or
dec
addr16
jge
jb
jge
sub
jl
int
sub
emms
jl
pop
mov
not
dec
adc
mov
outs
cmp
mov
adc
in
ret
js
fild
xchg
inc
adc
(bad)
sub
pop
add
add
pop
stos
or
ins
jmp
jo
cli
stos
sub
dec
push
mov
gs
into
mov
fwait
int
data16
mov
rcr
shr
or
in
mov
dec
inc
dec
lahf
pop
push
rol
mov
aaa
adc
jl
setge
sbb
lods
or
out
pushf
in
into
(bad)
stos
add
mov
das
push
or
imul
adc
adc
sbb
jbe
ins
xor
sub
pop
repz
mov
stos
or
xchg
imul
repz
fnstcw
out
test
imul
movs
jecxz
push
ds
pop
and
inc
adc
and
(bad)
js
xchg
sub
hlt
cli
pop
pop
jbe
pusha
je
pusha
mov
sbb
cmp
cmp
sbb
js
fwait
mov
out
int3
repz
mov
test
xchg
xor
sahf
sbb
out
das
sbb
into
jae
cmp
movs
lahf
jbe
inc
shl
rcr
jne
push
pop
pop
inc
out
out
dec
mov
cmps
lea
hlt
push
into
cmp
aas
jno
push
sub
(bad)
inc
mov
jecxz
sub
test
sbb
jnp
lahf
adc
pop
fsub
dec
push
popa
cmps
pop
jo
xor
and
addr16
cmps
je
cli
fcmovnu
jl
and
mov
cmp
add
cmp
jp
cli
add
mov
repnz
inc
pop
push
sub
add
push
jbe
mov
outs
out
dec
enter
das
fucomi
jle
xor
mov
repz
jp
and
add
or
sub
xor
(bad)
push
into
out
movs
sahf
sub
sbb
mov
mov
scas
mov
jge
or
dec
pop
scas
mov
mov
mov
push
jmp
xor
lds
(bad)
push
and
inc
dec
and
outs
lock
cs
push
loope
stos
fwait
imul
not
mov
mov
cli
cli
in
sbb
test
mov
cmps
aas
into
cmp
mov
(bad)
loopne
mov
cmp
test
stos
mov
xchg
add
std
jge
adc
sub
inc
(bad)
lahf
add
cwd
sbb
jge
jmp
mov
fcom
outs
les
dec
and
ds
push
mov
mov
nop
imul
jg
pushf
(bad)
(bad)
jae
xchg
jmp
xor
outs
and
sub
scas
fnstenv
stos
add
dec
push
or
dec
call
loop
out
jb
data16
push
xor
sub
push
arpl
push
ret
inc
add
jge
jl
cmps
ret
mov
dec
cld
and
shr
and
in
cmps
mov
push
pushf
and
shl
mov
xor
mov
imul
push
in
jae
es
mov
or
add
les
stc
adc
mov
loope
(bad)
into
imul
jle
mov
jb
inc
push
xchg
mov
ss
mov
lods
in
mov
outs
ja
push
in
xor
mov
inc
in
in
pop
out
add
jmp
(bad)
iret
cmp
lock
xlat
pop
add
and
mov
ds
stos
movs
cmps
iret
cmp
retf
jae
mov
sub
mov
xchg
ja
verw
and
xor
std
test
loopne
pop
jmp
les
pop
in
aaa
repz
inc
dec
ss
shl
lock
out
dec
nop
fwait
or
mov
(bad)
hlt
call
xchg
hlt
test
jne
call
(bad)
in
stos
out
cmps
lahf
sub
sahf
cmc
(bad)
cmp
mov
call
ds
xor
mov
add
jns
inc
stos
mov
inc
sti
iret
(bad)
test
mov
dec
loopne
repnz
outs
pushf
xor
mov
mov
out
push
xor
jbe
pop
xchg
jle
push
adc
mov
dec
push
movs
xchg
(bad)
jns
jecxz
test
not
or
jb
pop
lds
scas
pop
cmp
popa
les
enter
out
jns
xchg
icebp
xchg
or
xor
ficomp
mov
call
pop
jge
scas
in
and
add
movs
dec
sbb
mov
aaa
inc
mov
div
sub
leave
mov
int3
dec
jle
ins
(bad)
jno
dec
aam
adc
pop
pop
push
inc
pusha
repnz
fimul
push
mov
add
mov
cmc
mov
mov
sub
xor
adc
pop
cld
nop
mov
fidivr
lods
inc
sbb
jae
inc
les
out
int3
paddusw
pop
mov
add
mov
jle
inc
loop
int3
xor
std
lahf
mov
js
call
jge
dec
mov
(bad)
nop
xlat
pmaxub
or
xor
mov
jge
icebp
cli
sbb
xor
in
dec
ror
pop
ret
test
jg
xchg
fistp
dec
ret
fnstenv
scas
add
jl
cmp
jg
adc
mov
sbb
pop
jmp
scas
add
jl
cmc
jb
and
fmul
test
push
aam
hlt
adc
pop
popa
dec
loopne
es
fwait
xor
mov
rcr
dec
mov
ror
cli
inc
cmp
jnp
or
ins
add
fild
fwait
pop
aad
xlat
xchg
fdiv
aaa
call
inc
mov
ret
push
or
imul
das
mov
cmp
stos
xor
rcr
adc
test
jle
sbb
sub
test
adc
jnp
(bad)
loop
adc
jae
mov
sub
outs
xor
iret
cmp
pusha
pop
cmp
mov
ret
jle
cmp
lods
cmp
ret
adc
xor
pusha
in
jg
dec
push
or
sub
ins
loope
jb
push
adc
out
dec
mov
leave
loopne
test
enter
ja
loopne
inc
sub
shr
or
jmp
jge
xchg
mov
inc
sbb
jle
leave
push
cwde
nop
loope
ja
dec
ins
leave
adc
jle
daa
mov
xchg
push
jp
pop
mov
stos
adc
add
add
or
repz
sub
push
mov
xor
es
(bad)
mov
jb
mov
jmp
xor
ja
aaa
push
(bad)
cmp
leave
leave
jnp
jmp
bound
jno
addr16
dec
scas
adc
cmp
xor
jns
das
outs
dec
mov
movs
push
or
jo
stos
adc
xchg
pusha
std
leave
cli
aad
sub
and
jle
in
push
mov
enter
in
mov
and
xor
out
jo
sub
or
xchg
mov
fisubr
bound
mov
or
imul
sbb
pusha
mov
inc
xlat
std
movs
loopne
and
(bad)
pop
xor
aam
xchg
in
repnz
add
int
sbb
mov
pushf
adc
shr
test
inc
add
inc
ret
jge
cmps
cmps
mov
push
jmp
sub
scas
xor
pop
xchg
jle
out
repz
jecxz
popf
mov
bound
dec
sbb
sbb
jo
xchg
push
iret
mov
pop
out
mov
or
leave
arpl
add
inc
cmp
fidivr
scas
test
nop
in
lea
rcl
mov
jb
adc
rcr
shl
add
cli
std
imul
mov
sbb
das
nop
int
xchg
add
jae
push
mov
xor
mov
adc
pop
jno
jl
xchg
and
scas
mov
mov
mov
ret
movs
mov
and
rol
(bad)
stc
aaa
lock
loopne
sar
sar
lods
push
inc
loop
pop
fiadd
dec
inc
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
dec
or
push
dec
inc
or
add
or
add
add
add
add
or
add
add
pushf
das
cmp
add
add
inc
inc
add
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
push
ret
sub
add
or
dec
inc
inc
push
pop
inc
in
shl
inc
xchg
lea
add
xchg
out
nop
into
and
xor
xor
mov
je
je
dec
cs
daa
sub
inc
jmp
ror
out
into
pop
lahf
dec
js
sbb
enter
cmp
aaa
add
cmp
and
sbb
inc
out
push
or
sti
scas
xchg
outs
lock
addr16
les
jmp
cmp
das
jno
enter
push
iret
cmps
jge
rol
int3
ja
pop
sbb
sti
imul
loopne
out
add
cmc
fisubr
mov
and
xor
sbb
dec
adc
cs
adc
sbb
mov
mov
retf
sub
push
arpl
retf
inc
sahf
test
sub
shr
in
sbb
sub
mov
ja
inc
fld
add
pop
(bad)
jnp
popf
jb
stos
sbb
ss
fwait
inc
nop
pop
adc
xchg
loope
test
fidiv
clc
dec
sbb
mov
add
pop
push
mov
hlt
and
sbb
dec
and
cmps
add
mov
ss
scas
dec
icebp
std
vmovsd
pop
jg
or
mov
mov
sub
das
jo
(bad)
dec
addr16
mov
cld
(bad)
fwait
sub
xor
test
icebp
inc
inc
add
rcr
pop
xchg
(bad)
scas
retf
or
daa
ins
fwait
jnp
push
movs
int
dec
cli
outs
adc
jmp
and
imul
(bad)
inc
cli
movs
and
ins
cmps
arpl
sub
push
retf
push
sar
call
push
ja
push
jge
clc
sub
push
repnz
cwde
xchg
pop
dec
cmps
es
nop
sub
icebp
pop
inc
adc
jge
cmps
xchg
jl
(bad)
mov
xlat
jae
adc
add
jo
push
popf
movs
inc
pushf
mov
cmp
add
dec
test
cli
cmp
shl
dec
mov
das
test
jne
inc
jmp
das
js
sub
data16
lods
sar
rcr
add
fs
int3
cs
sbb
test
pusha
sub
jmp
xchg
vmovq
test
mov
out
xchg
inc
gs
(bad)
int3
ret
add
sub
stc
(bad)
sbb
sub
xor
xchg
jnp
in
into
movs
dec
int3
icebp
inc
add
loopne
mov
arpl
test
data16
pop
push
pop
out
lods
lds
sti
cmp
push
scas
sahf
test
inc
xchg
dec
or
(bad)
mov
mov
push
cmc
sbb
(bad)
ins
and
and
pop
xchg
mov
sbb
push
mov
cld
push
ret
icebp
nop
ds
xchg
fist
sbb
push
add
fisttp
int3
and
xor
adc
retf
int
add
sub
xor
in
mov
(bad)
mov
jne
mov
jmp
sub
jge
mov
iret
push
inc
daa
imul
gs
lds
imul
ds
(bad)
out
in
sbb
push
xchg
ficom
adc
xor
out
cmp
dec
sahf
fst
jle
arpl
outs
add
scas
mov
xchg
mov
and
inc
(bad)
cdq
out
retf
jo
(bad)
jb
pop
sub
cmp
pop
cmp
push
shl
lds
test
loop
lea
test
(bad)
out
daa
int3
cmps
xor
aaa
fwait
ins
inc
scas
cwde
and
xor
dec
fsubr
adc
cmps
hlt
ja
inc
lds
call
test
idiv
mov
jge
in
lods
test
(bad)
mov
xor
mov
mov
fld
inc
mov
pusha
jecxz
cmp
pusha
(bad)
test
mov
(bad)
xchg
test
fcmovnb
sbb
xor
sbb
repnz
test
dec
cmp
jl
xchg
xor
scas
jmp
mov
gs
je
mov
es
mov
xor
bound
cmp
or
pop
icebp
xlat
scas
out
cmp
jecxz
jecxz
(bad)
sbb
xor
sub
(bad)
cmp
inc
mov
push
test
jbe
xchg
dec
call
pop
ins
test
dec
cmp
ins
(bad)
jb
inc
outs
and
inc
pop
mov
push
sub
mov
mov
in
outs
adc
std
xor
(bad)
push
pop
push
pop
sbb
(bad)
jp
scas
sub
adc
fidivr
bsr
enter
enter
xchg
pushf
icebp
xor
test
mov
dec
or
ss
pop
ficomp
mov
or
js
xor
dec
in
loop
push
add
pop
cmp
(bad)
lods
push
xor
xchg
pop
lods
popf
lods
xor
cmc
adc
lock
xchg
pop
adc
sti
push
xchg
retf
dec
jecxz
cmps
les
outs
dec
pop
jl
ja
cmc
mov
call
int
cli
hlt
xor
mov
jo
lock
cmc
out
pop
or
or
in
enter
and
imul
into
call
mov
sar
fcomi
not
mov
mov
mov
jae
jge
jns
pop
int3
aad
add
or
push
xlat
iret
mov
mov
inc
adc
mov
or
aad
xor
jnp
test
jmp
ret
jne
mov
(bad)
pushf
jmp
ficom
stc
xchg
enter
mov
pop
push
inc
gs
stc
mov
aam
repnz
push
mov
push
add
jp
mov
out
mov
mov
cmp
test
mov
lahf
push
xchg
sub
dec
inc
ss
cli
jb
push
push
imul
fist
rcl
repz
pop
clc
int3
mov
in
imul
sbb
test
mov
enter
sub
jl
retf
mov
repnz
mov
mov
push
pop
sub
push
jo
sbb
dec
or
xchg
mov
add
cli
jecxz
fild
or
push
loop
pop
ins
push
xchg
push
out
sub
xchg
jmp
fucomip
stos
fcomp
xor
icebp
adc
mov
jnp
sub
inc
je
cld
jecxz
sbb
loop
cmc
mov
or
imul
nop
xor
out
mov
push
add
and
test
mov
sti
jo
in
retf
cmc
xchg
sub
mov
aam
fldcw
push
std
add
pinsrw
movs
pushf
sar
fldenv
inc
xchg
popf
adc
rcl
jle
fst
stc
(bad)
popf
movs
adc
xchg
pop
or
ss
popa
lods
enter
stc
cs
aad
out
scas
mov
ss
clc
ror
(bad)
dec
pop
and
push
addr16
retf
in
pop
in
cmc
jbe
lahf
and
into
test
ss
push
inc
aam
sbb
fstp
sub
pop
nop
ret
rcl
push
add
(bad)
and
inc
jmp
or
(bad)
mov
daa
repz
loope
adc
xor
cmps
xchg
rol
daa
mov
xlat
mov
(bad)
fsub
mov
cmps
jmp
cdq
mov
int
jmp
sub
test
rcl
fs
cli
jp
(bad)
push
(bad)
iret
lea
add
in
dec
lahf
test
mov
and
enter
push
loopne
imul
out
fmul
cwde
mov
clc
in
punpckhdq
loope
aad
je
cwde
clc
jecxz
xchg
in
or
in
sti
test
(bad)
sbb
xor
dec
or
xchg
pop
mov
inc
sar
nop
ret
fsubr
(bad)
jecxz
inc
jmp
inc
outs
or
adc
mov
call
ds
test
es
cmc
imul
test
push
mov
jmp
mov
ret
aam
ja
aaa
sub
sahf
loop
or
xchg
and
cmps
pop
mov
sub
aam
clc
test
xor
xor
mov
out
adc
cmp
ss
pop
push
in
adc
jnp
nop
inc
cmp
sbb
mov
jmp
out
ret
dec
(bad)
pushf
mov
push
imul
push
fisub
jmp
fs
hlt
push
(bad)
in
and
jbe
dec
cmp
xor
jecxz
bnd
cmp
dec
rol
int
stos
sub
imul
shr
dec
outs
xchg
clc
div
jno
add
fisubr
stc
mov
cmp
jae
sbb
shl
mov
push
xchg
into
or
jl
push
pop
dec
and
jno
jnp
xchg
inc
jne
cmp
jbe
ret
(bad)
and
leave
daa
and
jb
pop
or
sub
push
push
add
cli
mov
xchg
test
cmp
leave
ins
and
adc
test
and
cmp
outs
dec
aaa
lods
mov
mov
adc
mov
(bad)
ror
dec
mov
les
ins
data16
leave
ror
push
rcr
cmps
and
push
mov
stos
xchg
inc
dec
pop
(bad)
mov
xchg
push
and
jo
movs
sub
pop
int3
xor
(bad)
bound
inc
arpl
repz
push
mov
xchg
dec
les
mov
xor
sub
pop
fisttp
call
push
pop
loope
mov
jmp
(bad)
or
adc
mov
xlat
pop
inc
or
inc
jmp
xchg
pop
cs
mov
aad
xchg
sahf
imul
add
push
adc
sbb
sub
aas
jns
xchg
ja
nop
lahf
pop
lea
cmp
iret
scas
inc
outs
call
fucomip
clc
mov
mov
push
repz
jmp
stc
cli
xchg
inc
aad
mov
ficom
xchg
jg
cmp
repz
not
jb
dec
mov
jl
test
or
shl
rcr
xchg
loop
push
sbb
fimul
or
pop
shr
and
out
and
xchg
mul
repz
pusha
push
cs
mov
mov
mov
and
shr
mov
nop
lahf
aaa
sub
(bad)
pop
repnz
mov
push
lods
mov
or
jge
ds
cmp
scas
jae
mov
push
jmp
and
sbb
aaa
stos
ret
out
sub
fisub
mov
sub
xor
xor
sahf
test
iret
test
mov
(bad)
and
sub
in
stos
adc
or
add
dec
neg
pop
aas
mov
loopne
hlt
xlat
repz
(bad)
int3
push
scas
sbb
shr
pop
cli
add
xor
aas
pop
leave
cmp
sbb
outs
psrad
cmp
repnz
nop
lds
and
in
mov
dec
push
push
pop
ficom
mov
icebp
mov
pushf
and
cmps
pop
push
add
sub
jbe
rol
and
add
pop
fsub
leave
sbb
clc
inc
je
cmps
mov
shl
mov
adc
or
adc
lock
inc
pop
pop
ss
jne
sub
mov
jle
mov
int3
xor
cmp
cmc
fs
rcl
cmps
mov
mov
cld
sbb
aaa
lock
loopne
sar
lock
into
std
dec
pop
fs
xor
add
add
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
dec
or
push
dec
inc
or
add
or
add
add
add
add
or
add
add
pushf
das
cmp
add
add
inc
inc
add
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
push
ret
sub
add
or
dec
inc
inc
push
pop
inc
in
shl
aam
add
lock
mov
mov
dec
cmp
in
mov
cmp
xchg
mov
retf
jecxz
in
or
and
iret
mov
in
repz
add
lods
pop
or
cmp
out
adc
mov
xchg
stos
outs
sub
fisttp
nop
cmc
rol
out
mov
push
adc
arpl
sahf
jb
call
stos
repnz
fwait
mov
ror
push
enter
mul
push
mov
leave
jns
mov
in
cli
test
daa
sbb
cmps
inc
sub
and
push
adc
ds
sub
ins
adc
call
mov
xchg
das
mov
mov
jae
call
jo
fcmove
rol
xor
inc
nop
outs
gs
xchg
ss
les
mov
stos
cmp
cdq
mov
fxch
sub
push
loopne
xchg
jno
push
clc
lock
loopne
out
es
dec
(bad)
idiv
loope
mov
into
add
push
and
mov
adc
in
inc
out
test
xor
sub
mov
push
xor
pop
jg
mov
rcr
pop
arpl
mov
(bad)
xchg
cmp
mov
and
inc
xor
push
xor
xchg
lock
test
cld
add
dec
push
dec
and
iret
imul
out
mov
into
int
mov
ins
or
jmp
stos
cmps
je
adc
mov
stos
jmp
xchg
out
lds
push
out
xchg
mov
gs
outs
dec
sbb
and
jmp
xor
sub
or
sub
sub
jl
push
sbb
mov
aas
xchg
add
mov
retf
je
sbb
lods
dec
arpl
pop
leave
dec
xchg
iret
jecxz
ds
cmp
xchg
jae
or
xchg
rol
arpl
mov
adc
push
adc
icebp
push
in
(bad)
std
mov
outs
xor
add
(bad)
outs
not
pop
je
arpl
dec
out
popf
es
push
mov
leave
aad
cmps
xor
imul
pop
fidivr
cli
pop
dec
xchg
por
fist
(bad)
sti
popf
in
cmps
imul
cvtps2pd
in
ss
movs
sub
mov
pop
jmp
xchg
sahf
jbe
fisttp
(bad)
mov
jae
int3
adc
mov
or
int3
dec
jns
and
in
jne
cs
aad
mov
and
inc
sub
outs
idiv
imul
jno
fbstp
ret
push
div
push
inc
(bad)
je
adc
lds
out
push
cvtps2pd
pop
mov
hlt
retf
jmp
je
scas
in
das
sub
inc
aaa
inc
or
cmp
scas
sub
scas
push
jp
mov
(bad)
lods
rcr
and
in
jp
add
rcl
popa
repz
mov
fwait
cmps
xchg
mov
jmp
push
retf
xchg
fistp
mov
pusha
jecxz
add
shl
sub
pop
or
not
(bad)
xor
mov
gs
dec
push
mov
add
jl
xchg
push
push
sub
ds
cmp
loop
pop
fucom
adc
test
leave
adc
stos
cmp
stc
arpl
icebp
enter
push
push
pop
test
mov
cwde
sub
xor
jg
mov
mov
add
es
mov
fdiv
int3
jmp
sub
lds
test
mov
ds
mov
test
push
fld
jmp
nop
out
cmc
sub
cli
mov
cmp
xor
mov
sbb
sbb
cli
icebp
xor
mov
je
adc
add
mov
cs
jo
lods
add
fnsave
mov
neg
retf
leave
xor
scas
jmp
jecxz
test
test
stos
ficomp
std
hlt
xor
xchg
mov
jb
inc
fisttp
test
push
fist
cmps
je
idiv
add
out
cmp
dec
repz
mov
push
ss
cmc
sbb
adc
jecxz
out
ret
pop
cmp
arpl
pop
inc
mov
rcr
out
fistp
mov
fwait
lea
loope
pop
add
fisttp
(bad)
into
jmp
cmp
out
enter
and
inc
pusha
jp
aas
cdq
xchg
(bad)
out
pop
stc
pop
lods
mov
test
inc
mov
add
jp
and
ror
or
lea
inc
sti
dec
inc
call
push
adc
imul
adc
leave
popa
xchg
aam
xor
adc
bound
test
xchg
jb
shr
xchg
test
push
enter
xor
aad
dec
fadd
ds
out
(bad)
(bad)
mov
mov
pop
lea
add
in
lods
sbb
cmc
das
rcr
and
loope
mov
(bad)
(bad)
loop
icebp
(bad)
jbe
sbb
mov
repz
pop
movs
push
cmps
clc
xchg
sbb
(bad)
dec
xchg
cld
mov
dec
sub
clc
add
arpl
pop
or
lea
push
push
xor
mov
aam
and
push
test
out
xchg
mov
jmp
or
retf
lock
or
xlat
out
mov
push
lods
mov
imul
in
test
es
loop
xor
jge
pop
push
adc
inc
scas
or
jle
sub
cmp
add
mov
push
stc
mov
gs
ficom
stos
sbb
loope
push
mov
cs
mov
repnz
aaa
inc
push
imul
daa
icebp
icebp
adc
mov
mov
ins
inc
jne
out
lods
sbb
loope
add
es
out
call
iret
arpl
mov
push
ins
or
ja
test
lea
imul
leave
add
push
xchg
mov
ficomp
push
push
(bad)
loop
mov
jns
mov
repnz
sbb
pop
pop
sahf
lods
ins
stc
enter
xor
das
sub
jmp
outs
idiv
or
dec
clc
inc
mov
(bad)
leave
add
mov
and
(bad)
stos
mov
xchg
mov
push
push
sti
or
sub
cdq
mov
jbe
sbb
jmp
fdiv
out
and
int
dec
lds
das
and
inc
int3
cmp
mov
push
js
in
mov
outs
mov
jp
gs
sub
sti
jo
or
or
lds
iret
fdivr
fwait
mov
dec
inc
(bad)
pop
das
pushf
addr16
mov
sub
je
shrd
jmp
in
adc
sti
enter
fist
movs
inc
scas
test
cmps
ds
add
adc
lds
into
dec
mov
(bad)
shr
call
or
movs
aas
push
fidiv
mov
sbb
sbb
aad
adc
mov
add
repnz
mov
aam
cdq
and
mov
(bad)
or
jl
(bad)
call
push
in
popf
(bad)
adc
loop
fcomp
jne
repnz
mov
mov
scas
adc
je
push
ins
pop
imul
adc
lods
mov
test
leave
dec
jle
cmp
not
(bad)
scas
xor
icebp
test
or
xchg
or
sub
jge
inc
cmp
inc
mov
out
push
cwde
sub
test
lock
fs
sub
rcl
sub
or
jnp
(bad)
setge
xchg
sti
mov
frstor
jbe
out
retf
into
push
push
push
inc
push
retf
jmp
sub
imul
xchg
fisubr
imul
es
scas
pop
sbb
scas
call
xchg
out
pop
mov
push
dec
fsubr
repnz
add
inc
dec
aas
icebp
jns
push
mov
add
push
sub
gs
(bad)
xchg
dec
repz
sbb
pushf
sub
aam
in
and
movs
jp
dec
add
mov
cmc
js
ins
jo
jns
in
div
aaa
adc
pusha
cmp
out
push
(bad)
jge
cdq
mov
jecxz
xchg
ret
mov
std
mov
enter
(bad)
jns
outs
movs
aaa
jmp
stos
(bad)
sbb
cdq
addr16
out
adc
ror
mov
xor
mov
out
cld
sbb
or
dec
popf
mov
or
jp
add
pop
imul
nop
fld
adc
hlt
jno
sub
pop
dec
enter
fidiv
jne
and
pop
jecxz
jl
dec
mov
add
dec
add
aad
stc
or
mov
addr16
in
mov
sub
xchg
(bad)
mov
stos
pandn
mov
sub
scas
div
into
loop
sub
mov
pop
(bad)
into
dec
popf
cmp
movs
je
ret
push
(bad)
std
cmp
es
mov
dec
and
cmps
outs
data16
mov
shl
jnp
data16
adc
adc
aad
stc
push
clc
movs
xor
jecxz
popa
shl
and
pop
mov
mov
xlat
xchg
js
inc
outs
jae
data16
popf
loopne
pop
cli
dec
lock
xor
mov
sar
idiv
mov
sub
jg
dec
xchg
and
in
xlat
mov
jecxz
fcom
(bad)
mov
add
outs
data16
clc
lahf
pop
imul
test
call
sbb
movs
call
add
jmp
out
rol
jle
iret
jmp
push
ins
(bad)
stos
hlt
(bad)
enter
lods
retf
retf
mov
in
sbb
mov
cmp
jbe
sub
arpl
or
inc
push
sub
cmp
cwde
push
rcr
je
ret
mov
mov
mov
sub
in
dec
nop
push
leave
in
pop
bound
inc
jmp
mov
scas
and
bound
dec
jl
sub
or
and
sub
inc
mov
std
pop
das
jp
mov
inc
pop
inc
pop
adc
pop
xor
shl
push
aaa
inc
mov
shl
(bad)
repz
(bad)
movs
inc
ja
dec
stos
test
adc
xor
retf
int3
ss
shl
pop
pop
xchg
outs
loop
rcl
es
aad
and
and
xchg
fisttp
mov
sbb
ret
mov
add
sar
enter
fistp
daa
sub
dec
dec
mov
sbb
rol
stos
daa
das
sub
xchg
cmc
outs
repnz
jp
jg
dec
(bad)
inc
rcr
push
or
hlt
and
pop
icebp
lock
push
int3
mov
iret
lock
bt
push
ds
fisttp
xchg
add
sub
push
push
push
xor
xlat
xor
sub
jbe
call
sbb
nop
mov
das
in
lea
ret
xchg
fiadd
pop
cmc
dec
xchg
inc
pop
stos
cmp
push
mov
out
push
jnp
xor
mov
jmp
mov
stc
or
outs
loopne
sar
dec
cmp
jnp
sbb
add
add
dec
inc
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
iret
add
add
mov
inc
or
add
or
add
add
add
add
or
add
add
pushf
das
cmp
add
add
inc
inc
add
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
push
ret
sub
add
add
dec
inc
inc
push
pop
inc
in
ror
add
aas
pop
inc
sub
repz
jbe
jmp
sbb
cmp
cmp
leave
pop
push
cmp
das
arpl
gs
movs
cdq
mov
push
xchg
mov
mov
xchg
inc
mov
ins
gs
dec
mov
not
jle
add
and
fdivr
xor
inc
retf
aaa
fisttp
sbb
push
cmps
pop
mov
addr16
cmp
fcomp
push
mul
inc
inc
jno
xchg
(bad)
lea
mov
push
ins
xor
sbb
jmp
into
and
nop
push
outs
gs
ss
cld
sar
mul
inc
das
call
mov
shl
mov
pop
stos
sbb
jmp
les
fwait
sub
fist
pop
xor
pop
xchg
add
ret
push
cmp
fst
fcom
jne
xor
aam
neg
adc
jecxz
data16
xchg
xlat
pop
retf
push
and
fcmovnu
(bad)
(bad)
sub
dec
addr16
cmps
mov
sub
xlat
cli
std
pop
jnp
mov
shr
in
lock
push
sbb
or
dec
in
ret
fisubr
in
cs
int3
bound
cmp
mov
ins
pop
dec
push
cld
mov
sub
int
ret
stos
and
imul
popa
xor
fs
inc
dec
aas
cmp
cs
out
xlat
fcom
fwait
idiv
mul
cmp
mov
fimul
inc
mov
xor
mov
mov
mov
mov
(bad)
in
test
int3
mov
les
mov
sbb
es
pop
lods
or
cmp
loopne
lds
add
mov
sbb
push
cmp
mov
push
add
icebp
sbb
loope
mov
cmp
(bad)
and
(bad)
cmp
jg
fild
xchg
fdiv
cmp
mov
sub
(bad)
addr16
mul
out
stc
sahf
call
jno
shr
int3
mov
mov
sar
mov
dec
jl
inc
pop
enter
pop
mov
pushf
jns
push
pop
pop
and
xor
fld
jns
into
dec
mov
push
adc
arpl
jg
inc
mov
push
xchg
icebp
adc
ja
mov
in
call
shl
cmp
and
fimul
ja
ins
pop
popf
scas
dec
cmp
mov
xor
mov
bound
push
pop
xlat
push
jmp
idiv
sbb
xchg
pop
test
jno
hlt
push
push
jg
outs
lods
jg
repnz
in
xchg
std
lahf
mov
test
leave
cmp
adc
jb
xchg
pop
push
fmul
xchg
jg
pop
popf
jle
xchg
shl
fistp
aaa
push
mov
jnp
xchg
add
inc
retf
sub
mov
sbb
outs
je
repnz
mov
scas
jle
cmp
inc
sbb
jno
cmp
test
outs
push
lock
pop
jmp
pushf
mov
cli
pop
push
(bad)
cmc
lods
ret
jb
sub
or
shl
nop
lds
mov
sti
hlt
je
call
fs
push
daa
out
push
int
cmp
xchg
jg
mov
mov
mov
add
daa
cmp
cs
int3
sub
mov
add
(bad)
std
test
mov
aam
jge
pop
shl
(bad)
mov
rcl
dec
pop
lahf
push
mov
shl
inc
adc
call
pop
ins
sub
hlt
fidivr
out
adc
out
xchg
mov
add
xor
pop
mov
sbb
and
lahf
fldcw
cmp
lock
in
xchg
mov
mov
xchg
gs
popf
cmp
fdivr
aaa
mov
cli
sahf
rol
mov
jl
adc
jb
sub
mov
jb
fwait
mov
jns
add
add
add
rol
add
pop
rol
add
pop
rol
add
pop
dec
inc
sub
add
add
add
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
dec
or
push
dec
inc
or
add
or
add
add
add
add
or
add
add
pushf
das
cmp
add
add
inc
inc
add
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
push
ret
sub
add
or
dec
inc
inc
push
pop
inc
in
shl
and
lea
add
(bad)
fxch
sahf
inc
cs
push
fnstenv
mov
cmp
xor
fidiv
mov
mov
mov
test
imul
mov
or
mov
adc
js
icebp
adc
mov
fistp
jmp
fdivr
and
jns
je
push
(bad)
fs
in
cmp
sbb
cs
cmps
int3
out
movs
popa
sub
pop
aam
loope
sti
mov
sbb
adc
push
or
repnz
and
nop
or
mov
mov
ret
mov
or
sub
pop
mov
das
outs
bound
popf
ret
lods
or
data16
fisttp
hlt
ret
aad
call
fwait
xchg
cmp
scas
xchg
bound
dec
call
cmp
push
push
imul
retf
xchg
scas
les
cli
rol
sub
mov
(bad)
rol
cld
into
stos
adc
loop
and
(bad)
cmp
bound
push
mov
jo
shl
shr
pop
or
enter
dec
fnstenv
cdq
or
hlt
jge
call
xor
test
movs
or
(bad)
retf
cwde
mov
aam
jnp
shl
mov
jmp
clc
and
cmp
jb
shr
sub
daa
pop
in
aas
adc
scas
push
mov
mov
push
ds
outs
push
std
pushf
mov
adc
cwde
mov
cmp
in
pop
xchg
sar
mov
mov
mov
stc
sti
test
ins
sar
adc
leave
sti
ds
mov
imul
mov
mov
dec
sub
(bad)
iret
into
or
sub
je
pop
lds
sub
out
cmps
cmp
jns
in
jbe
inc
mov
pop
lods
xchg
cwde
call
in
mov
ins
jno
xchg
stos
push
xchg
pushf
in
xchg
mov
test
jecxz
pop
test
xchg
xchg
sub
repnz
and
sbb
xchg
xchg
push
jae
sbb
ja
rcl
xchg
mov
cs
pop
inc
ret
cmp
xor
cdq
and
pop
jne
scas
(bad)
sahf
sub
out
mov
movs
mov
xchg
lods
int3
mov
jecxz
test
mov
mov
popf
and
adc
xchg
psubsb
jo
xor
dec
fs
add
lods
dec
in
xchg
int
and
mov
out
sub
dec
outs
mov
pop
mov
or
or
push
pavgb
jge
es
dec
push
mov
cdq
xchg
in
out
push
pushf
mov
aas
mov
mov
bound
mov
cmp
and
stos
mov
ja
fwait
addr16
mov
scas
bound
fadd
mov
mov
imul
push
fist
ss
in
mov
out
enter
mov
(bad)
xor
rcl
call
dec
pop
and
mov
in
mov
call
aad
dec
out
push
adc
test
mov
sbb
inc
mov
adc
outs
or
call
out
inc
aaa
loopne
out
or
cmp
fs
loope
outs
popf
pop
sub
mov
mov
fcomp
or
jno
cmp
mov
shr
iret
dec
add
cwde
dec
cmps
mov
pushf
call
mov
fdivr
adc
mov
xor
sti
mov
pop
or
xchg
inc
fimul
cmp
push
sub
sub
jp
dec
test
das
bound
lea
cmp
xor
mov
mov
xor
call
imul
sub
ins
loopne
jl
mov
fist
into
sbb
jne
pop
and
mov
inc
xchg
ja
dec
mov
out
ret
stos
adc
rol
outs
pop
fnsave
scas
xchg
fsub
mov
stc
sbb
neg
pop
scas
xlat
clc
xor
mov
mov
add
jae
xchg
(bad)
or
and
test
sub
pusha
pop
mov
mov
rcl
test
jno
mov
adc
repz
bound
bound
dec
jecxz
pop
leave
sbb
ficomp
pop
inc
icebp
xchg
cmp
arpl
addr16
mov
mov
mov
push
pop
fcom
dec
push
scas
popf
sbb
or
sbb
jg
cmp
add
sbb
fwait
push
fld
scas
jns
pop
or
mov
and
loope
mov
mov
retf
push
(bad)
fimul
xchg
popf
rcl
shl
cmp
pop
cmp
call
pop
repnz
aaa
and
xchg
nop
repnz
movs
xchg
or
clc
call
(bad)
push
ins
mov
xchg
jo
in
cli
mov
and
jmp
mov
and
stos
leave
push
out
std
mov
dec
xchg
cmps
push
push
jns
(bad)
mov
add
add
imul
enter
cmps
sbb
dec
(bad)
fcomip
les
add
add
xchg
repz
lea
arpl
data16
(bad)
jmp
sub
and
mov
push
clc
lods
sub
cmp
mov
iret
imul
jb
pop
js
dec
lds
fidivr
leave
call
in
pop
(bad)
jb
popa
imul
add
fistp
mov
or
inc
mov
inc
pop
push
in
js
int
fisubr
movs
int3
inc
imul
mov
xchg
dec
xor
sub
xor
out
test
add
lahf
sub
loop
push
movs
and
or
jno
les
stc
ins
jle
stos
popf
cmp
mov
push
in
std
cmps
sub
add
lds
cmp
dec
mov
jle
push
and
repz
mov
cmp
or
clc
mov
clc
iret
mov
mov
pop
ret
or
std
stc
pop
xchg
jge
push
or
lods
pop
test
xlat
fmul
or
dec
push
and
push
(bad)
push
dec
mov
dec
pop
nop
in
data16
push
cdq
shl
push
scas
mov
cmc
es
mov
(bad)
xlat
(bad)
push
xchg
lods
loop
stc
ret
ret
and
pop
mov
std
xchg
pushf
pop
loopne
nop
inc
sbb
fs
mov
frstor
mov
jecxz
cmp
movs
or
retf
push
pop
jne
mul
jns
lds
cli
das
jp
dec
sub
(bad)
pop
and
hlt
jnp
xchg
dec
xor
jp
std
jle
dec
cmps
jno
js
cmps
push
loop
cmp
das
leave
and
bnd
fidiv
mov
retf
pop
sub
pop
xchg
(bad)
mov
aas
push
inc
xchg
cmps
clc
fcomp
fsubr
dec
and
push
jl
lods
(bad)
sbb
mov
mov
stos
mov
xchg
stos
lahf
sbb
jno
aad
out
mov
jp
int3
ss
xchg
ins
test
ds
out
test
jno
push
inc
scas
mov
ins
mov
data16
pusha
fistp
jecxz
adc
xchg
mov
hlt
mov
or
aam
mov
ss
dec
pop
mov
and
jb
and
mov
imul
ror
push
add
or
fsubr
add
dec
or
aad
int
lahf
mov
dec
loope
fstp
add
adc
jmp
movs
loop
retf
movs
mov
sub
icebp
jp
cwde
rcr
and
mov
dec
std
mov
cmp
cwde
sub
jns
xchg
cmc
sub
lea
in
stos
scas
imul
xor
loop
mov
fmul
mov
xchg
pop
fbld
jmp
push
(bad)
imul
cmp
clc
push
ins
aaa
push
mov
es
call
in
lahf
push
sti
mov
rcl
jp
mov
test
leave
sbb
cmp
add
and
repnz
and
add
xor
cli
hlt
and
ins
and
sub
pop
cdq
imul
push
ss
cmc
stos
push
lods
push
pop
loop
es
scas
rol
jecxz
jne
fisubr
scas
jb
xor
jno
lock
pop
sub
stos
xchg
sbb
imul
jl
test
mov
bound
cs
pop
mov
dec
add
div
cmp
dec
adc
mov
cmp
jecxz
sbb
(bad)
xor
sbb
or
sbb
shr
dec
adc
mov
cmps
mov
mov
aam
and
cmp
cmps
addr16
jbe
in
std
mov
add
xor
lock
sbb
scas
out
fcomi
dec
inc
mov
int3
lea
cli
xor
add
adc
xor
inc
mov
into
jne
into
add
xor
enter
mov
jl
dec
das
push
dec
lahf
fs
mov
fwait
mov
xor
mov
lahf
(bad)
mov
dec
jns
cmps
sbb
sbb
mov
aam
inc
pop
inc
adc
mov
repz
ds
inc
js
push
sub
call
pushf
daa
xchg
(bad)
in
cwde
rol
or
out
mov
and
push
es
and
stc
pop
fnstsw
(bad)
and
pop
push
mov
fnsave
pop
push
loope
mov
mov
inc
mov
jecxz
sub
adc
popa
or
jg
mov
push
and
stc
jmp
inc
int3
or
adc
lock
mov
(bad)
out
inc
xchg
and
sbb
aam
(bad)
fst
jge
mov
jle
(bad)
adc
jmp
fcomp
xor
(bad)
shl
jmp
jns
xchg
aas
sub
int3
mov
jb
add
movs
sub
pop
loope
cmc
xchg
fisubr
xor
cmp
addr16
scas
sbb
pop
repnz
enter
retf
pusha
xor
adc
call
das
inc
adc
fsubr
cmp
(bad)
outs
aad
cmp
xchg
(bad)
stc
pop
mov
jmp
xor
cmp
int
es
mov
push
or
call
repnz
sub
ins
sub
xlat
aad
inc
mov
or
inc
dec
repz
ins
mov
(bad)
sub
shl
cmp
repnz
xor
inc
mov
jb
jo
pop
nop
mov
dec
push
imul
add
ret
jmp
push
out
sahf
xor
(bad)
fldenv
ficomp
shl
repz
dec
sbb
pop
push
sbb
cmc
movs
cmp
in
mov
xchg
pusha
aaa
iret
ins
jne
adc
inc
cmp
lods
push
xchg
(bad)
sbb
sbb
pushf
mov
(bad)
arpl
ror
sar
xor
mov
and
and
adc
jb
dec
loope
(bad)
gs
imul
and
or
xchg
mov
call
pop
cmp
loopne
sar
lock
sub
ins
hlt
mov
add
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
dec
or
push
dec
inc
or
add
or
add
add
add
add
or
add
add
pushf
das
cmp
add
add
inc
inc
add
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
push
ret
sub
add
or
dec
inc
inc
push
pop
inc
in
shl
and
pop
add
mov
mov
cmc
mov
push
and
xor
sbb
out
sahf
aad
sub
pushfw
cs
(bad)
sbb
and
sbb
into
call
or
pop
icebp
cld
(bad)
dec
js
shl
sbb
out
in
rcr
daa
cmp
hlt
mov
adc
nop
cli
mov
loopne
mov
add
sbb
jecxz
fdivr
push
jle
sbb
iret
jno
in
retf
out
out
mov
cld
js
daa
sub
frstpm(287
push
jne
push
adc
movs
aam
inc
xchg
sbb
jo
out
pop
pop
fsubr
cmp
loopne
or
dec
push
sbb
rcl
lock
add
push
mov
mov
(bad)
cwde
into
pusha
xchg
inc
sbb
(bad)
or
fbstp
or
xchg
test
hlt
dec
mov
dec
xchg
test
inc
je
clc
mov
inc
shr
pop
sti
in
aaa
jnp
test
loopne
cmp
aad
sbb
cmp
adc
or
inc
aaa
pop
pop
mov
loop
out
inc
mov
mov
lds
pop
lock
jge
push
cmp
cld
inc
pop
fimul
sub
outs
sbb
dec
fadd
jmp
inc
dec
pop
pushf
mov
scas
mov
out
cwde
dec
test
in
loope
cld
imul
icebp
ja
stos
xor
or
mov
mov
mov
and
xor
jp
inc
in
(bad)
xor
stos
xchg
cmp
into
repnz
addr16
jns
not
push
cmp
pusha
cmp
imul
mov
and
sti
inc
mov
std
dec
aad
sahf
rol
cmp
out
sahf
sahf
xchg
mov
sub
and
movs
inc
xlat
sti
xor
sub
out
lea
lock
mov
sbb
push
jg
loop
sub
test
les
test
out
fmulp
jnp
cmp
add
inc
pop
inc
jmp
ret
dec
adc
cdq
or
out
sub
mov
xchg
pop
push
in
push
call
xor
add
mov
jp
cwde
adc
and
add
cmp
cmp
out
retf
repnz
clc
pop
pop
stos
pop
dec
ficom
frstor
xchg
jge
les
mov
mov
shl
or
call
mov
scas
xor
jl
pop
mov
dec
ret
or
jmp
mov
mov
es
rol
ret
inc
xor
xchg
leave
rol
mov
and
jmp
fistp
cmp
fmul
push
adc
icebp
mov
xchg
adc
movzx
xlat
pop
add
push
fwait
arpl
scas
aam
shl
add
sub
(bad)
imul
ss
ins
adc
or
jmp
push
cmp
inc
jge
xchg
pop
popf
test
mov
cli
xchg
jecxz
push
xchg
ror
jno
std
xchg
jge
cli
cmp
pop
mov
push
add
push
jge
cmp
dec
mov
cmp
aam
xchg
jl
mov
movs
das
ret
mov
(bad)
xor
jbe
mov
sub
pop
imul
std
nop
in
jne
out
das
push
aas
xor
bound
add
jg
hlt
inc
push
test
adc
es
jo
adc
sti
(bad)
push
call
jae
mov
sbb
mov
and
outs
call
jg
and
stc
jb
jle
cmp
out
mov
fsubr
xchg
mov
test
push
jnp
movaps
inc
sbb
mov
(bad)
(bad)
dec
dec
sub
into
mov
jmp
les
push
mov
jae
jmp
or
sti
sub
mov
sar
and
(bad)
rcl
push
(bad)
int3
imul
stc
(bad)
xor
push
ja
aaa
mov
add
imul
mov
dec
call
into
imul
scas
sub
mov
sub
cmp
idiv
xor
(bad)
lea
pop
and
out
das
or
push
jmp
dec
and
sti
xlat
push
inc
add
dec
or
add
mov
and
sti
dec
psllw
inc
sbb
in
jae
ret
fimul
push
loop
icebp
call
test
orps
xchg
xor
jl
cmp
mov
push
jg
mov
retf
(bad)
add
pop
gs
bnd
add
inc
pusha
fwait
test
sub
inc
sar
sbb
js
xchg
clc
loop
sub
dec
mov
adc
enter
add
mov
jbe
jge
mov
je
push
out
arpl
jmp
out
adc
test
cli
inc
lahf
mov
loopne
fistp
inc
fwait
shl
mov
or
jnp
push
mov
mov
jne
rcl
jge
pop
pop
dec
xchg
mov
sub
div
retf
and
ins
clts
ja
and
lock
enter
stc
sbb
push
sbb
in
imul
mul
lods
pop
or
ret
dec
cmc
cld
(bad)
cmp
jle
xchg
icebp
clc
dec
mov
xlat
inc
ror
in
sbb
inc
repz
xchg
unpckhps
xchg
add
je
jb
test
inc
repz
cmc
popf
sbb
pop
dec
xchg
rol
mov
or
shr
(bad)
(bad)
xchg
stos
jle
pushf
les
push
adc
scas
cmp
aam
add
cmova
popa
pop
stc
(bad)
cmc
or
xchg
xor
dec
or
inc
pop
jae
sub
push
inc
push
call
or
or
mov
(bad)
pop
push
jl
xchg
dec
cli
movs
sbb
ins
push
nop
stc
(bad)
lds
inc
inc
jp
leave
xchg
in
sub
jmp
jl
(bad)
popf
cmp
fwait
push
les
cmp
dec
fsubr
add
xlat
jmp
clc
lock
adc
xor
mov
out
retf
dec
cli
scas
cmp
lods
and
outs
xor
push
dec
inc
leave
stos
ss
mov
push
ret
jne
iret
push
(bad)
jns
scas
pop
js
push
push
scas
(bad)
jl
in
lahf
and
cld
or
adc
js
mov
bound
in
pop
xchg
std
adc
jno
(bad)
rcl
cmp
mov
mov
cmp
mov
dec
jbe
adc
push
push
push
cmp
out
mov
dec
mov
pop
stos
inc
lods
xchg
mov
push
cdq
out
fcom
daa
jp
stc
adc
(bad)
repnz
jo
sub
lds
ds
inc
xchg
cwde
or
mov
sti
gs
inc
mov
fwait
adc
pop
cmp
adc
add
arpl
jnp
sbb
hlt
dec
out
jo
into
xor
pop
scas
sub
pushf
ja
inc
retf
ret
test
imul
xchg
mov
es
ins
sub
addr16
xor
aam
dec
add
stos
(bad)
repnz
xlat
ja
mov
fcmove
adc
out
jns
(bad)
mov
sti
pop
pop
(bad)
and
mov
push
adc
inc
mov
hlt
dec
dec
out
rol
cmp
shr
mov
dec
jmp
pop
and
inc
adc
xlat
fstp
int
adc
cmc
retf
call
sub
int3
xchg
fdivr
cmc
xor
pop
jl
sub
and
add
pop
cmps
xchg
mov
push
cmp
(bad)
das
push
cdq
cs
popf
mov
in
std
pushf
xor
test
fwait
xchg
loope
call
inc
fnstsw
mov
ins
push
jbe
push
xor
xor
xor
add
adc
lock
into
clc
jns
test
int
(bad)
in
cmps
inc
add
ins
test
mov
sbb
add
scas
aam
outs
je
je
sbb
aaa
stos
inc
jns
shl
outs
xor
adc
jo
or
inc
pop
not
stc
lea
mov
test
xchg
xor
daa
out
jae
into
lods
mov
ins
aam
imul
les
aad
xchg
and
adc
pop
pusha
in
mov
mov
(bad)
mov
pop
push
pop
fsubrp
hlt
scas
lds
jle
gs
sub
xchg
and
sub
sub
sbb
push
lahf
cwde
xchg
cli
(bad)
test
test
das
inc
movs
mov
mov
(bad)
mov
xor
or
es
pop
cwde
jo
sub
sub
sub
xchg
jp
aaa
jno
xchg
lods
imul
push
imul
or
pop
mov
xor
jb
test
test
and
mov
push
test
fmul
or
pop
ds
inc
pop
xchg
jp
retf
ja
call
out
(bad)
lea
daa
pop
xchg
imul
(bad)
(bad)
addr16
cli
in
scas
pop
dec
jns
out
sbb
repnz
stos
test
imul
mov
or
dec
mov
mov
ds
ud0
sub
loope
data16
retf
idiv
shl
push
or
push
fcmovb
jb
xor
adc
fstp
sti
mov
sbb
sbb
sbb
and
adc
lea
pop
sub
xchg
pop
int
jne
xchg
dec
lods
popa
lods
addr16
imul
dec
cli
out
lea
mov
or
retf
add
jg
daa
jle
adc
dec
fwait
jl
adc
mov
sbb
inc
mov
mul
mov
mul
movs
popa
push
add
mov
pushf
and
push
movs
mov
fcomp
and
xchg
jb
mov
xor
add
or
pop
inc
lds
push
fdiv
adc
es
loopne
cmc
or
xor
aas
(bad)
es
pusha
jne
jnp
sbb
jbe
stc
imul
fdiv
jnp
dec
ret
fidiv
adc
push
mov
shr
xlat
pushf
push
lahf
inc
push
fnstenv
(bad)
ins
inc
dec
add
icebp
mov
fistp
add
test
push
cli
nop
cmps
imul
(bad)
mov
ficomp
std
add
aam
cmp
test
push
pop
repnz
add
clc
call
call
adc
mov
pop
pop
fistp
or
fs
std
call
mov
fmul
in
dec
loop
shr
das
adc
jno
add
in
mov
mov
stos
icebp
inc
xor
retfw
push
inc
out
inc
pop
pushf
inc
outs
and
mov
sbb
mov
lock
mov
xchg
cmps
push
cmp
jmp
(bad)
cli
adc
and
push
sti
inc
sbb
mov
inc
adc
mov
pop
push
pop
and
scas
inc
not
mov
xlat
enter
mov
adc
stc
push
retf
sahf
xor
dec
retf
stc
aaa
lock
loopne
sar
cmp
ja
enter
add
add
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
dec
or
push
dec
inc
or
add
or
add
add
add
add
or
add
add
pushf
das
cmp
add
add
inc
inc
add
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
push
ret
sub
add
or
dec
inc
inc
push
pop
inc
in
shl
aam
add
lock
pop
sbb
fnstenv
jnp
xchg
jne
popf
jno
cdq
push
neg
sbb
sbb
fistp
mov
fnstenv
xor
jns
(bad)
rep
lahf
xchg
lock
adc
rol
push
pop
dec
shr
ins
sub
loop
mov
xchg
aam
mov
into
retfw
xor
jnp
mov
push
adc
dec
mov
add
sti
mov
mov
mov
mov
imul
xor
stc
lods
jmp
and
es
pop
dec
scas
jnp
adc
inc
clc
js
icebp
and
mov
mov
pop
jne
mov
cmps
sub
xchg
push
aaa
retf
enter
xlat
mov
mov
mov
push
rol
fbstp
idiv
add
mov
sub
mov
or
ror
hlt
std
cld
add
push
fsubrp
test
test
bound
les
sbb
adc
fdiv
xor
push
iret
gs
sti
mov
hlt
dec
daa
pop
mov
fidivr
enter
frstor
scas
(bad)
(bad)
push
mov
fsub
mov
adc
jns
sub
pusha
sti
xchg
sub
ja
xchg
sub
call
fnstenv
mov
xor
add
sub
inc
jae
(bad)
bound
imul
push
or
jecxz
in
xchg
lss
scas
es
jecxz
mov
ja
cdq
jnp
jmp
in
aad
movs
stos
mov
pop
pop
push
(bad)
sti
fst
jg
(bad)
les
retf
mov
mov
dec
push
mov
arpl
mov
sub
in
xchg
mov
mov
ret
or
mov
fdivr
sub
xor
inc
loopne
icebp
rcl
push
mov
cli
add
sub
jnp
sbb
jno
and
push
jl
aam
push
jg
jb
mov
inc
push
add
or
mov
js
(bad)
jp
pop
popa
add
pop
cdq
xor
push
or
scas
sub
pop
and
dec
sti
fcom
mov
dec
shl
ins
mov
hlt
outs
xchg
dec
or
(bad)
xlat
xor
mov
adc
push
aas
das
out
add
mov
in
test
(bad)
repz
movs
clc
imul
mov
les
sbb
xor
mov
shr
sbb
inc
mov
push
mov
fcom
sub
add
fstp
neg
jp
xchg
push
inc
jne
sub
push
or
fcomp
int3
lods
popa
sub
push
pop
xor
sti
imul
pop
push
cmp
cmp
call
or
repz
xchg
pushf
imul
sti
xor
into
lds
pop
xchg
push
addr16
adc
cdq
movlps
mov
fnstcw
or
aam
xor
inc
sbb
dec
cwde
mov
or
pop
retf
or
add
push
ins
clc
adc
ds
sbb
cmp
inc
call
mov
xchg
mov
mov
es
jnp
cmp
sbb
inc
or
pop
(bad)
ret
jo
pop
pop
adc
or
cmps
inc
mov
jb
imul
cdq
daa
mov
dec
sub
xor
jne
xchg
mov
add
in
jle
repz
mov
mov
jecxz
adc
rcl
lahf
inc
retf
and
sbb
cmp
mov
jl
sub
ins
sbb
call
cld
push
push
ss
enter
add
(bad)
pop
clc
sub
test
fs
leave
fucomip
xor
out
mov
xor
outs
or
jle
shr
jl
jno
cli
add
ss
out
iret
dec
add
js
inc
(bad)
pop
loop
test
push
test
lds
enter
mov
mov
rcr
fprem
test
loope
sub
mov
xchg
and
jmp
outs
fldl2e
retf
leave
stc
adc
adc
out
pop
icebp
fwait
inc
mov
out
mov
sub
ror
retf
sbb
jmp
xor
(bad)
outs
add
pop
jecxz
mov
pop
dec
stos
in
test
fucom
xchg
jmp
jbe
iret
add
dec
jmp
js
inc
ret
push
pop
pop
push
sub
jge
test
in
(bad)
pop
pop
je
je
adc
dec
movs
and
aas
das
mov
jmp
les
lock
mov
or
ret
sbb
lods
lds
mov
jmp
adc
inc
ins
and
std
into
pop
pushf
mov
inc
inc
clc
xchg
sub
push
pushf
leave
out
out
das
imul
sub
arpl
mov
retf
sbb
sub
not
and
push
enter
mov
jge
push
inc
das
mov
push
sbb
popf
imul
ret
jns
push
sbb
mov
scas
xor
adc
popf
movs
mov
scas
cmps
loope
cwde
fadd
dec
arpl
or
xchg
inc
ds
rol
mov
push
cwde
add
inc
pop
int
xor
out
pop
pop
and
adc
retf
bound
mov
dec
xor
stos
and
add
mov
xchg
int3
sub
repz
mov
movs
push
fstp
or
xchg
and
adc
retf
ror
call
cmp
mov
mov
mov
sbb
fstp
and
pop
mov
es
dec
(bad)
xor
xor
jl
push
push
push
jne
retf
push
inc
push
mov
mov
push
je
ds
xor
mov
mov
or
nop
ds
xchg
jle
cmc
and
or
pop
cmps
xor
mov
(bad)
ficom
push
test
mov
inc
jg
adc
ins
or
and
or
xchg
xchg
imul
and
je
push
dec
pop
fistp
cli
stos
xchg
cwde
cmp
fcmovnb
xor
xor
les
iret
xor
push
out
jbe
in
cmp
test
jl
xor
sub
shr
fild
mov
sbb
push
ficom
aad
loop
xchg
xor
push
sar
xor
jbe
xchg
sub
xchg
adc
ds
mov
xor
in
ins
sub
dec
sbb
jns
out
push
jae
pushf
out
movs
jge
rol
lock
out
out
into
neg
aad
sub
mov
lods
shr
and
outs
fs
or
enter
xchg
or
daa
push
push
leave
rol
dec
or
xchg
icebp
inc
enter
retf
and
inc
pcmpeqd
xor
js
or
jns
cs
add
cmp
adc
shl
hlt
fld
popa
js
pop
sub
js
push
call
adc
or
mov
mov
and
push
dec
cmp
mov
rcr
out
ins
dec
xchg
mov
and
sub
pop
and
fsubr
mov
clc
js
mov
repz
or
or
bound
clc
xor
xor
movs
sub
out
cmp
fisttp
stos
pusha
shl
or
jge
imul
fs
mov
int3
gs
add
push
retf
or
pop
add
into
into
xchg
ds
push
inc
mov
cmp
jno
push
xor
sbb
neg
xchg
xor
xchg
jo
popa
test
loopne
into
inc
outs
jnp
fwait
cmps
ins
sbb
mov
jne
cmps
sbb
dec
enter
jl
loopne
sbb
pop
shl
cli
enter
push
xor
mov
jb
jl
jae
iret
inc
fs
stos
cdq
adc
and
mov
fisubr
mov
mov
lea
dec
or
ins
out
cmp
jle
aad
mov
jge
sub
inc
mov
jmp
inc
xor
pop
sti
inc
sub
mov
push
mov
dec
fisubr
fmul
jmp
imul
jmp
push
fnstcw
dec
xchg
out
pusha
adc
jo
dec
dec
add
int
js
jmp
sar
xor
push
mov
cli
stos
jbe
iret
inc
arpl
fcom
jne
bound
loope
test
cli
push
mov
fimul
push
loopne
jmp
pop
je
rcl
or
or
(bad)
ja
xchg
mov
(bad)
icebp
popa
pop
push
outs
xchg
push
or
sahf
push
jg
outs
je
popa
and
or
pop
dec
cmps
(bad)
arpl
xchg
sub
nop
push
stc
inc
mov
add
bound
dec
pop
and
push
sub
jno
sti
rcr
stos
jle
idiv
inc
ss
into
dec
leave
retf
out
es
xor
push
test
arpl
jb
jo
mov
jbe
mov
push
shr
xor
cmp
adc
sbb
mov
test
(bad)
xchg
loop
movs
out
jb
jge
add
cmp
sub
lods
jbe
jbe
pop
xchg
sub
jnp
out
mov
pop
cmp
cwde
mov
leave
jecxz
and
das
cdq
ins
lods
outs
sahf
into
popf
call
out
adc
xor
jl
call
mov
scas
(bad)
in
(bad)
push
or
push
fs
lea
jg
inc
sbb
add
and
mov
push
mov
xchg
dec
sahf
icebp
dec
jg
add
leave
add
jg
add
or
jne
sub
mov
stos
pop
mov
adc
inc
dec
dec
int3
and
xor
cmps
push
movs
int3
xchg
push
clc
aas
ins
bound
dec
das
jnp
outs
mov
xchg
dec
cwde
sbb
jmp
mov
inc
int
shl
jl
inc
add
mov
jmp
fst
pop
das
popa
jne
das
xlat
iret
leave
xor
mov
popf
cdq
add
shl
sbb
jno
ret
inc
cdq
shl
(bad)
es
add
cs
call
jno
and
aad
jge
jl
lahf
sub
scas
adc
pop
or
into
mov
sub
push
xor
mov
or
ror
rcr
out
adc
mov
mov
sub
stos
arpl
aaa
pop
push
stos
ja
mov
fldenv
sbb
xor
add
into
inc
push
mov
jns
pop
out
inc
cld
dec
mov
shr
sub
mov
int3
cmps
and
pop
dec
in
not
ins
fninit
arpl
inc
push
xchg
fwait
pusha
jno
aam
dec
inc
in
push
jmp
sti
mov
(bad)
mov
mov
test
das
cwde
xor
sbb
mov
test
jnp
gs
test
repnz
cmp
into
data16
jmp
cld
xlat
mov
jmp
das
sbb
dec
mov
push
mov
test
lods
into
dec
adc
js
mov
popa
test
repz
cmp
or
inc
add
loopne
jg
inc
dec
lock
cld
xsha1
cmps
mov
inc
mov
dec
inc
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
dec
or
push
dec
inc
or
add
or
add
add
add
add
or
add
add
pushf
das
cmp
add
add
inc
inc
add
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
push
ret
sub
add
or
dec
inc
inc
push
pop
inc
in
aad
and
(bad)
jecxz
icebp
xchg
lods
jnp
fs
fldenv
cmp
and
jb
in
xchg
jns
addr16
stos
mov
int3
pop
and
adc
dec
xchg
(bad)
aas
jl
in
stc
daa
cmp
jns
add
test
or
les
xchg
nop
push
les
dec
mov
mov
gs
xchg
or
pusha
pop
les
lds
in
mov
and
jge
scas
adc
push
adc
cld
sub
ins
or
adc
cmp
les
pop
stc
ficom
push
fwait
adc
and
sbb
or
sbb
dec
jg
jp
jnp
mov
out
pop
(bad)
push
nop
movhlps
movs
or
pusha
inc
mov
shr
xchg
scas
scas
dec
push
loopne
fadd
pop
inc
popf
ds
int3
test
ret
clc
push
dec
add
adc
jecxz
je
sbb
bound
mov
jle
pop
lea
mov
mov
and
ficom
repz
sbb
ror
mov
test
inc
push
je
pushf
test
xchg
int
mov
rol
push
shl
xor
or
push
cmps
adc
jle
aas
cmp
retf
sub
into
mov
scas
push
add
or
cmps
and
push
shl
mov
into
jb
stc
pop
add
jle
push
xchg
sbb
jbe
jno
inc
(bad)
ficomp
sbb
inc
push
aam
adc
test
movs
push
dec
and
mov
addr16
lds
test
aaa
cmp
push
scas
cmps
call
sub
dec
aas
add
sub
jne
dec
in
mov
mov
cmps
dec
and
xchg
add
mov
dec
mov
daa
fstp
mov
mov
mov
(bad)
push
aam
mov
stc
sbb
sub
cmc
repnz
jne
cdq
cs
lahf
out
and
mov
jno
inc
xor
loope
jnp
ficomp
pop
push
mov
test
fidiv
xor
ja
or
cmp
(bad)
call
js
mov
int3
das
cmp
push
out
int
mov
sbb
repnz
cmc
imul
jne
cmp
cmp
jno
mov
retf
cmc
pushf
(bad)
xlat
sti
ret
dec
jno
add
fldcw
das
cmp
or
mov
push
ss
jecxz
cmp
out
jo
mov
sbb
in
(bad)
in
sub
xor
xor
aas
or
pop
rep
cld
enter
dec
bound
mov
jg
xchg
mov
xor
xchg
je
pop
in
push
pop
and
add
(bad)
int
xor
pop
cmc
mov
loope
xchg
cmps
cs
or
in
jne
call
std
push
outs
inc
jle
repz
std
or
mov
cdq
dec
xor
retf
or
sar
fwait
(bad)
(bad)
pop
mov
int
or
cmp
mov
sub
xchg
mov
gs
cmp
xchg
in
and
adc
jge
dec
movs
call
push
or
ins
popa
xchg
dec
cmp
xchg
je
mov
inc
sbb
jb
pop
popa
dec
outs
out
inc
mov
stos
add
push
sti
adc
addr16
mov
mov
movs
in
dec
ds
bound
imul
into
ja
jnp
xor
push
mov
mov
dec
pop
sbb
ficom
jmp
fldcw
retf
in
pop
retf
xchg
outs
hlt
xor
xchg
push
jbe
sbb
sahf
cmp
xor
push
xor
popf
ins
mov
mov
pushf
mov
fcom
xchg
xor
ret
(bad)
in
lea
cmp
stc
hlt
repz
repz
cmps
jmp
gs
cmp
adc
ret
cmps
ss
out
std
adc
and
imul
xor
addr16
fnsave
js
int3
cs
adc
lods
repnz
(bad)
adc
ins
(bad)
in
fsubp
inc
cdq
cmp
fdiv
push
dec
jo
xor
scas
ss
fcmovbe
jno
push
push
(bad)
adc
add
add
mov
or
aad
sub
inc
daa
pop
sub
ret
push
mov
loope
inc
scas
sbb
and
pop
inc
lods
fist
push
push
test
add
lods
out
mov
ret
dec
out
mov
iret
sub
cdq
push
das
mov
(bad)
mov
push
dec
inc
shr
idiv
or
mov
or
inc
adc
jnp
mov
rcr
cmp
call
in
mov
shl
hlt
mov
push
mov
sar
add
pop
mov
stos
sub
xchg
xchg
mov
shl
jns
jbe
(bad)
cli
lock
dec
push
and
cmp
fs
cdq
xor
mov
(bad)
jns
cmp
imul
mov
pop
in
or
dec
pop
adc
daa
fadd
loopne
stos
push
(bad)
movs
cmp
sub
shl
ror
cli
xchg
jae
sbb
fs
clc
xor
xor
ins
mov
iret
adc
fs
inc
aad
pop
inc
push
push
xor
nop
xlat
push
add
push
movs
push
pop
dec
mov
lahf
mov
sbb
cmp
lahf
in
dec
out
sbb
xor
mov
or
mov
adc
or
mov
(bad)
pop
hlt
imul
adc
je
and
sbb
add
jbe
lock
in
mov
mov
fwait
adc
mov
clc
das
inc
psubusb
leave
rcl
js
or
push
jg
mov
xchg
mov
out
aas
loopne
xor
push
stos
cmc
pop
lock
cmc
(bad)
and
and
xor
sub
popa
cmps
push
dec
sub
mov
imul
push
inc
jg
nop
cmc
dec
fdivr
jmp
(bad)
es
adc
cmp
pop
out
jl
les
cmp
lahf
jp
fisub
bound
jecxz
test
or
push
lea
xchg
rcl
loopne
out
dec
stos
pop
scas
inc
loopne
ins
pop
adc
push
(bad)
push
mov
mov
rcl
shl
ins
ss
popf
pop
outs
adc
jns
sbb
push
push
mov
jge
xlat
mov
inc
repz
out
(bad)
fbld
out
xchg
ins
(bad)
rol
push
fst
mov
sub
cmp
les
cld
mov
scas
mov
and
popf
push
adc
push
push
inc
jecxz
cs
lea
inc
out
or
test
popf
sub
push
mov
jnp
sahf
xor
inc
das
dec
stc
loop
sub
bound
sub
call
pop
icebp
and
sbb
in
push
jle
cmp
inc
cwde
mov
(bad)
jle
jne
dec
jg
push
sbb
xchg
hlt
lods
in
mov
retf
call
jae
jecxz
not
sbb
xchg
mov
ret
adc
add
cmps
frstor
sub
cwde
inc
pop
fstp
jb
sar
xchg
mov
xor
lods
push
jmp
cmp
xor
retf
fwait
mov
aaa
test
mov
jg
push
and
popa
out
xchg
adc
xor
jmp
repnz
xor
shr
je
add
mov
pop
or
add
lock
nop
pusha
movs
mov
out
or
loope
pop
cld
out
cmp
test
push
mov
jbe
movs
pop
jle
ins
std
imul
xor
dec
aas
and
jnp
mov
sub
repnz
into
pop
fisttp
daa
cmps
cs
repz
(bad)
loop
or
jbe
mov
cmc
mov
push
int
mov
pop
adc
xor
cmp
pop
jmp
sub
shl
cs
add
stos
cmp
inc
xor
stos
sub
int3
push
stos
clc
add
iret
xor
int3
push
mov
adc
lods
add
lea
scas
add
mov
aam
add
fnstsw
aas
pop
inc
ins
loop
xor
les
xchg
shr
xor
or
aad
mov
cmps
scas
(bad)
jnp
int3
xchg
cmp
div
xlat
iret
inc
fcmove
ins
jns
(bad)
sub
mov
sbb
enter
cmp
push
fsubr
cmp
test
scas
lock
add
sub
and
inc
push
mov
jle
push
les
push
rol
pop
jp
out
in
and
shl
into
dec
xchg
sub
pop
scas
outs
jb
mov
and
cmp
or
cmp
mov
push
jno
mov
ficom
iret
pop
int
xlat
dec
out
cmp
sub
sbb
jmp
dec
int
sub
jg
pop
xchg
adc
out
cmp
dec
add
sbb
fld
shr
push
shl
ds
scas
std
add
push
fsub
xor
sub
mov
or
les
cdq
cmp
push
pushf
lods
fwait
mov
in
aas
xlat
mov
dec
push
adc
pop
arpl
hlt
jmp
jg
sti
sub
adc
push
loope
lods
lods
mov
mov
cdq
xchg
jge
mov
dec
out
int3
int
mov
clc
xor
loop
dec
xchg
push
(bad)
ret
mov
dec
xor
out
cmps
push
out
leave
cmp
mov
sub
cmp
mov
call
leave
add
or
aam
xor
xor
dec
in
sub
xor
ret
fsubr
and
cmp
inc
mov
xchg
str
jmp
stos
dec
out
cmp
scas
iret
sbb
push
addr16
out
fcomp
sbb
add
jns
sub
fild
out
cmps
call
xor
cmp
pop
scas
xchg
mov
xor
adc
jae
jecxz
retf
jg
cmps
dec
cmp
jns
fwait
adc
dec
addr16
jmp
inc
xchg
add
dec
pop
pop
daa
in
dec
adc
pop
je
scas
mov
mov
push
xor
jno
in
ds
jg
retf
add
in
mov
jecxz
dec
bound
inc
neg
xlat
(bad)
mov
jmp
jecxz
pop
mov
push
jg
stos
inc
xor
mov
aas
and
stos
ret
int
in
clc
mov
sub
jae
ins
ins
jg
mov
iret
fdiv
pop
pop
es
movs
imul
sub
cmp
dec
mov
xor
and
mov
add
push
dec
inc
popa
fidivr
and
pop
fld
icebp
fstp
dec
add
pop
stc
jno
in
sbb
inc
add
sbb
adc
aad
test
cmp
sub
out
out
xor
(bad)
lock
or
inc
push
inc
div
adc
hlt
mov
jge
lock
jae
push
retf
and
in
jno
xchg
out
mov
ss
repz
lods
xor
or
xchg
call
jecxz
pop
fcmovu
fst
mov
in
loopne
mov
(bad)
jg
fadd
ja
pop
sbb
add
(bad)
cmc
dec
loopne
sar
jg
inc
lahf
add
add
fsubr
add
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
dec
or
push
dec
inc
or
add
or
add
add
add
add
or
add
add
pushf
das
cmp
add
add
inc
inc
add
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
push
ret
sub
add
or
dec
inc
inc
push
pop
inc
in
shl
aam
add
lock
mov
gs
aad
xchg
pop
test
dec
adc
sub
pop
rcl
push
in
mov
or
adc
aam
and
(bad)
mov
mov
fcomp
and
xor
out
or
sub
xchg
fbstp
push
lss
adc
ss
addr16
pop
stc
retf
das
xchg
and
xchg
in
jecxz
jg
pop
push
std
jg
(bad)
test
cmps
jo
popa
jl
pop
int
or
xchg
adc
pop
stc
cmc
lea
(bad)
retf
adc
mov
es
mov
aad
loope
stos
mov
lods
lods
movs
and
pop
adc
xor
iret
retf
jecxz
mov
jno
jl
(bad)
mov
fs
mov
adc
xchg
cwde
jmp
test
push
mov
mov
push
stos
and
popa
shl
fwait
aas
div
jnp
xor
mov
fs
push
cmp
fisubr
(bad)
out
inc
fcmovnbe
loopne
xchg
pop
add
xor
push
or
test
arpl
sub
push
cmp
ds
inc
dec
xchg
adc
xchg
mov
dec
and
retf
stc
inc
shl
add
popf
sub
cld
mov
inc
mov
clc
pop
xchg
inc
mov
cdq
inc
cld
aaa
outs
(bad)
push
mov
jno
ffree
rcl
cli
iret
xchg
enter
leave
lds
jg
les
add
inc
fbstp
lea
cwde
ret
bound
mov
push
fisubr
inc
mov
inc
jle
sar
retf
fs
inc
mov
cld
mul
xor
je
jmp
into
sbb
dec
jmp
mov
das
(bad)
cmp
je
push
arpl
and
dec
les
pop
retf
lock
sbb
or
mov
inc
js
loop
pop
(bad)
call
sub
in
sub
pop
inc
out
and
iret
push
not
mov
xlat
sti
cmp
aam
mov
inc
cbw
cmp
mov
scas
mov
stos
mov
pop
sbb
mov
(bad)
fisttp
cmps
jmp
addr16
mov
pop
or
frstor
cmc
leave
dec
ror
lods
lods
dec
push
dec
xor
loop
data16
fucomp
add
push
mov
scas
pop
cwde
test
mov
ret
or
or
xor
js
add
jb
jg
jbe
jecxz
scas
js
jmp
adc
mov
sbb
sbb
lea
mov
xchg
daa
mov
pop
imul
fisttp
sub
hlt
pop
mov
or
in
(bad)
xor
retf
mov
xchg
push
mov
jns
jmp
fistp
push
test
xchg
push
movs
jp
push
sbb
test
add
xchg
mov
std
lds
stos
rcr
jno
push
mov
push
popf
(bad)
int3
ins
sub
mov
popa
pop
mov
pop
ins
or
cmp
jb
shr
popf
and
cmp
ret
cld
adc
push
ror
js
(bad)
shl
add
es
(bad)
sbb
pop
cdq
cmp
or
(bad)
rol
lock
mov
adc
xlat
adc
pop
ins
adc
push
mov
sub
addr16
lahf
xchg
push
pop
cmp
(bad)
push
mov
sti
shl
pushf
mov
cdq
fcomp
popa
or
scas
adc
mov
pop
fs
sar
sbb
aas
leave
out
outs
pushf
adc
sub
xchg
mov
mov
or
xchg
mov
and
push
mov
mov
jne
add
std
xor
cmp
mov
(bad)
adc
loop
pop
xchg
stos
outs
sub
mov
sbb
je
mov
mov
pop
retf
call
in
in
cld
mov
stos
inc
call
add
sbb
pop
jle
fild
retf
lds
xchg
inc
cmp
cmp
xor
xchg
fist
js
mov
inc
xchg
mov
test
leave
outs
hlt
adc
in
cmps
xchg
(bad)
out
mov
mov
cld
(bad)
cmp
adc
xchg
and
ds
out
mov
scas
jecxz
pop
lock
pop
addr16
pusha
inc
pop
out
(bad)
cmps
les
in
add
out
ror
mov
inc
add
sti
mov
adc
(bad)
cmc
lods
ror
ins
pop
stos
xchg
cmp
in
fwait
retf
jl
mov
xchg
mov
inc
jmp
push
xchg
stos
stos
lahf
mov
(bad)
hlt
ss
stos
das
dec
in
mov
rol
push
fcomi
stos
aam
lods
call
xor
add
pop
aad
push
xor
neg
pop
cmp
jnp
retf
cwde
pop
mov
out
clc
cwde
mov
sar
mov
and
pop
cs
fst
xchg
jae
test
pop
jb
or
adc
sbb
and
mov
out
mov
push
sbb
les
ins
hlt
sub
jmp
jns
sbb
dec
inc
adc
add
imul
xlat
mov
cmp
mov
aam
in
popf
sbb
xor
bound
and
mov
add
lods
add
inc
jecxz
icebp
lock
or
mov
movs
jo
xor
xchg
cmp
jnp
adc
scas
int
stos
lea
push
cli
ret
add
push
sti
mov
addr16
ret
xchg
push
jle
out
mov
arpl
nop
int
push
jge
adc
imul
fidivr
scas
pop
xor
pop
mov
aad
ret
jno
shl
cmp
loop
dec
sbb
jge
inc
sbb
dec
dec
mov
xchg
or
(bad)
cwde
call
pop
cmp
or
jmp
push
fwait
push
sahf
sahf
popa
dec
pop
pop
stos
push
pop
je
mov
dec
(bad)
dec
mov
pusha
dec
xor
jmp
mov
vdivpd
dec
adc
mov
sar
fnsave
xchg
and
das
(bad)
ss
mov
pop
mov
hlt
lea
lock
mov
dec
jnp
int3
(bad)
ds
enter
jmp
cmp
mov
(bad)
cmp
pusha
xchg
cmp
jmp
pop
jg
dec
push
es
rcr
int3
(bad)
or
sub
rol
mov
into
arpl
test
mov
movzx
or
or
rcl
pop
dec
push
push
mov
pop
or
adc
cdq
sub
adc
pop
ret
cmp
cmp
cdq
aas
scas
jecxz
pop
xchg
mov
icebp
jg
test
xchg
jge
add
movs
mov
cld
ins
mov
fsubp
imul
jae
sbb
test
lock
xor
adc
aaa
movs
sti
jne
arpl
dec
push
or
pop
shl
xor
dec
popf
(bad)
lods
movs
test
lods
ins
cmps
stc
(bad)
je
cmp
mov
push
sti
fimul
mov
xchg
(bad)
cmp
jns
mov
jecxz
(bad)
loop
scas
or
ffreep
sahf
pushf
push
pop
in
inc
mov
(bad)
dec
les
(bad)
xor
retf
mov
or
xchg
mov
xor
cld
inc
test
lock
mov
push
fstp
add
cmc
mov
jae
cs
fst
in
out
mov
cli
movs
shl
push
jbe
xchg
push
adc
xchg
sub
lea
cmp
mov
jo
mov
(bad)
(bad)
in
push
(bad)
test
gs
out
adc
popf
repz
lds
pop
adc
pop
dec
aam
fmul
mov
adc
sub
mov
pusha
fsubr
shr
and
adc
cmps
std
adc
es
or
inc
popf
mov
daa
imul
je
mov
jbe
mov
aad
iret
hlt
mov
xchg
xchg
dec
push
fcmovnbe
cmps
fisubr
rcr
scas
jne
addr16
imul
fwait
sahf
jle
cmp
popf
xchg
inc
sub
mov
mov
add
sti
shl
add
fmul
push
sbb
adc
imul
sub
jns
xchg
(bad)
jle
mov
pop
ja
out
ins
jecxz
adc
mov
jae
lock
mov
push
call
xchg
sahf
mov
cmc
stos
pop
pop
stos
jbe
data16
sub
and
mov
aaa
(bad)
pop
test
ret
mov
loop
mov
xchg
sahf
iret
jmp
pushf
mov
std
mov
dec
sbb
clc
mov
xor
sub
leave
retf
xchg
(bad)
pop
xchg
xchg
out
and
sahf
xor
dec
push
pop
fnstsw
out
or
push
sbb
mov
loope
aam
mov
xchg
hlt
pop
les
leave
(bad)
ins
mov
jge
sbb
fwait
pusha
fwait
loope
xchg
mov
jno
cmp
cmps
xchg
cmps
repnz
cmp
add
xchg
lods
or
cmp
fist
stc
outs
cdq
out
xchg
sar
push
sub
lea
cmp
jmp
sbb
icebp
cdq
in
xchg
inc
(bad)
mov
test
mov
cmp
pop
jecxz
add
fidivr
stos
mov
and
jle
inc
(bad)
loope
into
aam
out
jp
inc
std
mov
sar
jg
not
out
mov
add
jg
shl
mov
shl
aas
mov
(bad)
jg
outs
sbb
test
dec
jno
outs
push
jp
or
sub
cmc
and
data16
call
jnp
jo
sahf
jne
popa
pop
daa
ficomp
dec
push
mov
jb
mov
fadd
bound
and
in
fwait
adc
sbb
test
mov
movs
sub
repz
mov
ins
scas
shl
jp
sub
xchg
xlat
dec
or
jnp
push
repz
outs
out
cmp
test
loop
rol
mov
sbb
es
push
xchg
push
fmul
add
mov
jmp
cmp
lea
(bad)
fwait
or
pusha
mov
popf
rcr
(bad)
out
sbb
push
leave
mov
bound
shl
lds
jmp
test
xlat
inc
inc
fstp
cmp
fst
fwait
scas
xchg
or
pop
int3
jne
ja
in
aas
int
push
and
mov
fisttp
mov
mov
mov
sub
mov
test
lods
data16
loope
pop
ja
(bad)
push
push
mov
jp
dec
add
shl
xor
xor
xchg
push
add
or
or
sbb
std
dec
mov
pop
shl
arpl
movs
cmc
repnz
adc
push
push
out
lds
jle
test
ss
mov
gs
xor
jb
mov
adc
xor
in
mov
cs
call
add
xor
and
imul
or
mov
xchg
(bad)
mov
es
pop
pop
mov
cmp
pop
lods
add
movs
inc
loop
repz
adc
xchg
push
mov
mov
pop
xor
jge
clc
out
sar
dec
add
imul
cdq
mov
add
add
dec
inc
dec
inc
scas
inc
pusha
or
add
inc
mov
(bad)
outs
pop
aad
xor
pop
ds
inc
iret
or
xor
xlat
mov
mov
minpd
xchg
mov
movs
pop
retf
xchg
ret
test
(bad)
pushf
mov
stc
call
cwde
pop
ds
inc
iret
or
xor
xlat
mov
mov
minpd
xchg
mov
movs
pop
retf
xchg
ret
test
outs
hlt
cli
mov
sbb
lea
jb
pop
icebp
jb
idiv
clc
jge
ret
fld
mov
xor
int3
adc
and
imul
ret
adc
shr
dec
xchg
dec
shl
mov
mov
outs
fst
xchg
pop
int3
jle
call
scas
lods
fs
out
push
xchg
popa
push
dec
clc
or
adc
ins
mov
dec
ror
das
adc
pop
mov
cmp
cmp
or
inc
adc
cs
out
cmp
outs
adc
stos
mov
cmp
dec
push
cdq
sbb
push
add
xchg
fild
inc
push
arpl
mov
xor
int
dec
cmc
jae
xor
push
jge
je
and
mov
loope
xchg
and
sub
push
stos
es
or
adc
loopne
jns
ss
mov
lods
jecxz
jg
dec
inc
xor
arpl
in
js
int3
or
stos
int
xor
stos
jmp
pop
and
xchg
loop
les
loope
cwde
and
cmp
or
cmp
adc
in
out
addr16
es
mov
dec
ror
and
scas
cs
sbb
sbb
fwait
pop
pushf
movs
and
or
sbb
dec
cmc
dec
sub
(bad)
(bad)
push
jae
addr16
lahf
test
idiv
scas
dec
adc
popf
jle
jbe
ror
cmp
jnp
pop
out
xor
push
sbb
jbe
stos
(bad)
in
rcl
xchg
pop
sub
daa
es
movs
sti
jle
dec
rcl
jne
pop
lea
test
inc
daa
movs
mov
retf
jp
push
int
xor
dec
mov
xchg
mov
xor
(bad)
xlat
push
aas
mov
mov
loop
cmp
jle
fidiv
pop
cwde
data16
and
sbb
mov
mov
xchg
xor
mov
ss
(bad)
rol
(bad)
xor
pusha
jb
outs
mov
out
in
iret
fcomi
fsubr
cmps
inc
or
lods
dec
mov
push
imul
sysexit
add
loope
jbe
loop
daa
ret
mov
imul
fistp
in
call
fcom
mov
fs
loope
jo
mov
xchg
lods
into
push
fisttp
outs
retf
int3
inc
scas
mov
inc
mov
pop
out
mov
inc
sub
push
mov
sbb
jge
pop
ins
into
add
sub
fld
(bad)
xchg
scas
ror
mov
test
cmp
xchg
push
mov
aad
enter
dec
bound
push
pop
lods
loope
and
or
dec
sbb
add
inc
adc
mov
jge
or
loope
cmp
pop
(bad)
pop
sahf
mov
test
pop
xor
pushf
sbb
jle
idiv
mov
ds
lods
pop
add
mov
into
(bad)
repz
mov
rcr
adc
shr
call
ds
std
lahf
repz
stos
mov
and
add
xor
mov
or
fisubr
ja
ror
arpl
adc
push
sub
repz
je
lea
xchg
out
sahf
pop
cmp
cli
mov
sbb
nop
(bad)
sbb
outs
mov
mov
sbb
jo
pop
sti
push
and
out
mov
jo
call
mov
jns
xor
mov
push
int3
int
push
das
adc
pop
cmp
inc
xchg
and
mov
cwde
popf
xor
scas
in
dec
pop
jp
loopne
mov
or
add
fwait
and
aad
pop
adc
jbe
lea
sub
push
pop
push
dec
xchg
loopne
xor
inc
mov
jle
nop
test
inc
movs
sti
add
dec
fldenv
pop
mov
xchg
enter
push
pusha
scas
xchg
pop
fdivr
cmc
xchg
dec
arpl
adc
outs
and
outs
scas
hlt
scas
addr16
outs
push
aam
add
push
(bad)
rcl
jle
mov
pop
push
and
in
out
pop
adc
jae
retf
int
xchg
gs
push
jg
shl
ficomp
int
test
icebp
push
idiv
push
retf
je
fcom
dec
movs
pop
jbe
xor
adc
int3
xchg
xchg
mov
gs
outs
scas
push
lds
sbb
mov
adc
sti
pop
in
ret
mov
xchg
cmp
xlat
jecxz
enter
mov
or
jo
xchg
or
xor
or
pop
and
and
pop
lahf
ds
xchg
and
(bad)
mov
in
rcl
or
xor
(bad)
xchg
movs
xlat
push
push
test
sbb
or
xchg
mov
cld
sub
jl
or
mov
cwde
(bad)
ret
push
push
inc
or
mov
rsm
popf
jmp
das
mov
push
mov
setae
push
call
mov
cmc
cmp
pop
lea
sbb
pop
sbb
pop
outs
int3
xchg
stos
mov
shl
dec
in
fdivr
js
cs
je
neg
(bad)
loopne
(bad)
jbe
call
push
arpl
imul
into
cmp
sbb
jmp
adc
out
push
mov
or
inc
pop
rcr
repz
sbb
pop
(bad)
lds
ds
pop
mov
add
pusha
test
ds
inc
dec
neg
mov
mov
jns
and
cmp
test
ror
xor
sbb
aad
shl
adc
test
ins
fchs
sbb
jmp
test
mov
int
jae
or
jns
inc
cmp
mov
repz
add
mov
movs
ja
push
(bad)
cmps
mov
std
cmp
popf
out
into
mov
int3
pop
pop
mov
gs
shr
(bad)
xchg
stos
mov
jno
retf
ror
ss
test
das
and
adc
stos
ins
call
cmp
fistp
call
ret
sbb
mov
rol
xor
or
(bad)
shr
dec
adc
xchg
jmp
mov
int
inc
out
neg
or
cmp
fisub
vprotd
dec
sbb
gs
mov
shl
pause
clc
cdq
jmp
push
mov
jmp
int3
sbb
dec
std
adc
call
add
mov
int
movs
mov
mov
pop
sub
jno
gs
dec
pop
sbb
ins
xchg
out
xor
mov
outs
arpl
clc
movs
mov
push
bound
jb
add
int3
mov
inc
loopne
in
(bad)
out
cmp
push
jb
mov
leave
or
lahf
mov
add
sbb
daa
jmp
xor
and
adc
jle
xchg
cmp
adc
add
or
outs
cmp
fldcw
inc
faddp
stos
pushf
iret
jo
ror
cmp
jns
add
pop
bound
sbb
sub
fsubr
mov
dec
ja
cmp
jb
adc
dec
add
je
dec
mov
out
jle
in
cmps
mov
cdq
push
dec
mov
adc
sub
shr
movs
out
push
leave
cld
repnz
ret
mov
pusha
cmc
push
push
or
and
inc
fs
sub
popa
dec
xchg
jmp
cmp
lahf
xor
push
push
sub
sub
pushf
fisubr
fimul
mov
jo
cmps
test
mov
enter
sbb
mov
push
rcl
xor
dec
(bad)
jmp
pop
(bad)
int3
pop
pop
ret
ret
mov
mov
fnstenv
in
das
fisubr
stos
aaa
push
in
pop
fnstcw
pop
cmp
lahf
adc
sbb
push
dec
imul
or
adc
or
popa
sar
pop
(bad)
pop
jmp
mov
ss
fisubr
fst
adc
das
cmps
and
jge
sub
sub
pop
clc
imul
pushf
xor
cli
mov
nop
iret
shl
(bad)
leave
pop
fisttp
mov
xchg
add
and
cmp
sub
pusha
push
mov
mov
dec
and
lods
fidivr
jmp
cmp
loope
pop
mov
inc
dec
inc
jg
sbb
adc
inc
push
hlt
inc
jecxz
loopne
jle
repz
(bad)
or
pop
lods
dec
jo
jecxz
jmp
cmp
add
shl
pop
jnp
sbb
jge
frstor
loope
mov
and
ins
pop
sahf
cmp
mov
mov
clc
xor
inc
out
(bad)
adc
ret
ins
xchg
mov
or
inc
sub
cmp
or
rol
fstp
or
jne
adc
inc
fs
sbb
fwait
add
jbe
inc
test
fldpi
xchg
mov
in
jmp
mov
mov
sub
push
and
sti
outs
shr
pop
in
repz
movs
inc
jle
mov
inc
ja
mov
sbb
mov
movs
cmc
cmc
outs
jns
sar
ds
xlat
aad
sbb
pop
gs
or
ret
das
add
mov
mov
test
push
aad
sbb
gs
fild
sahf
sub
mov
dec
shl
fisttp
add
add
icebp
pop
dec
loopne
fcomp
mov
repz
in
lea
das
inc
sbb
mov
(bad)
cmps
push
add
ins
in
mov
inc
sub
nop
push
jo
(bad)
in
add
div
and
sbb
mov
dec
dec
test
outs
enter
jns
pop
retf
sub
ss
repz
add
rol
jecxz
fwait
cdq
mov
sbb
mov
ficomp
xchg
xor
and
mov
stos
les
mov
xlat
dec
xchg
xchg
arpl
in
ins
bound
(bad)
pop
jmp
adc
inc
ret
add
adc
(bad)
xchg
ffree
mov
pop
int3
mov
loopne
mov
xchg
sub
sbb
scas
sbb
idiv
mov
dec
movs
mov
sbb
sub
inc
int
dec
sar
loopne
lahf
and
lea
pusha
or
fwait
int
xchg
inc
inc
xchg
jae
sbb
and
adc
dec
inc
ins
(bad)
jge
ret
in
bound
mov
push
hlt
pop
mov
rcr
in
cwde
jle
cdq
addr16
mov
rcl
outs
repz
sar
cmps
enter
rcl
xor
dec
nop
jno
test
jg
(bad)
aam
jno
xor
dec
push
xor
aam
(bad)
mov
inc
jle
outs
popa
std
test
out
xor
sub
fist
das
leave
mov
ss
outs
ds
dec
adc
push
imul
fnstenv
das
sbb
mov
sbb
movs
add
outs
bound
lods
mov
add
repz
bound
(bad)
mov
aaa
push
jle
pop
aas
push
inc
jmp
fs
jo
mov
call
add
cwde
sbb
mov
nop
int
cmc
cmps
retf
cmp
xchg
jge
jmp
xlat
or
push
or
scas
sbb
arpl
popf
test
pop
fldenv
leave
cmp
sbb
sbb
leave
pusha
and
jb
(bad)
jle
xor
fld
sbb
lea
shr
pop
pop
mov
cmp
int
jmp
jb
mov
loop
iret
cdq
imul
or
jmp
ds
adc
adc
and
jo
shl
jp
ins
mov
nop
dec
ret
push
(bad)
repz
movs
ficomp
cmp
fcomp
popa
pop
sub
shl
mov
dec
aad
push
cs
adc
add
int3
sub
nop
pop
sub
adc
pop
sahf
or
cmp
add
mov
mov
retf
lods
in
inc
je
lea
jmp
xlat
leave
xor
leave
les
dec
fmul
add
fdiv
push
fs
xor
jg
mov
fst
push
sub
cdq
mov
fdiv
push
mov
xor
add
and
jl
fdivp
push
xchg
imul
mov
xchg
xor
push
and
mov
jmp
cld
add
or
push
loopne
push
lahf
inc
jne
(bad)
mov
or
cmp
stc
pop
xchg
adc
jne
add
dec
mov
dec
je
pop
aas
xchg
dec
scas
lods
scas
mov
jmp
add
cmp
fisttp
cmps
xchg
mov
out
jmp
cs
daa
jns
call
cld
adc
repnz
push
imul
inc
xor
cli
and
cmps
(bad)
iret
(bad)
mov
das
shl
mov
mov
xlat
rol
add
jae
repz
test
mov
sbb
mov
xlat
lock
dec
xor
xor
add
mov
cmps
mov
(bad)
push
dec
mov
std
arpl
into
push
xor
lods
cmps
nop
out
pop
jl
(bad)
mov
popa
pop
stc
xor
in
add
(bad)
(bad)
cmps
or
out
mov
add
stc
fld
jno
leave
daa
xchg
in
repnz
sub
and
icebp
cli
shr
cmp
dec
or
neg
xchg
inc
xchg
mov
inc
into
push
sub
inc
in
sahf
mov
xchg
cmps
rcl
retf
inc
cmp
inc
add
mov
pop
popf
rol
mov
add
dec
test
mov
popa
ds
fst
out
xchg
scas
sahf
mul
es
jge
xchg
(bad)
inc
loopne
inc
retf
jns
mov
jmp
push
jmp
(bad)
call
mov
dec
fst
call
xchg
push
fwait
jl
pop
pop
aam
(bad)
and
scas
xor
popf
jmp
mov
push
sub
loopne
mov
push
add
fiadd
in
rcl
test
ds
(bad)
div
mov
push
xor
cmp
rol
idiv
retf
mov
mov
mov
aam
scas
mov
mov
rcr
enter
and
cmp
rcr
dec
mov
(bad)
cs
and
ret
jmp
or
test
pop
icebp
test
sbb
arpl
nop
push
xlat
lock
add
inc
cmp
or
aad
or
mov
sbb
xchg
mov
test
dec
aam
xchg
addr16
mov
inc
int
pop
clc
inc
fadd
xchg
ret
sub
into
push
mov
aas
movs
sbb
call
arpl
leave
lock
rcl
xor
(bad)
push
addr16
mov
adc
sbb
fist
mov
xchg
mov
dec
pushf
(bad)
mov
pop
das
adc
add
and
sbb
jge
mov
movs
and
loopne
mov
pop
dec
das
jb
inc
jecxz
mov
mov
test
jecxz
aad
cdq
dec
add
jnp
mov
and
adc
cmp
in
or
stos
addr16
(bad)
mov
retf
(bad)
not
or
fwait
clc
or
pop
push
retf
rcl
dec
test
push
pop
outs
stos
test
sub
jb
fwait
add
lods
cmp
js
jl
jecxz
xchg
mov
jecxz
pop
add
mov
es
je
repz
dec
jmp
pop
out
nop
js
shr
clc
div
fs
jbe
sub
jmp
jmp
retf
les
mov
jo
pop
ins
add
pop
inc
out
imul
lock
loop
jl
pop
int
sub
jge
mov
xor
adc
dec
push
add
adc
stos
adc
xchg
mov
push
out
mov
jb
stc
mov
pop
retf
fcmovb
jg
mov
push
jp
jb
loope
dec
das
je
sub
mov
sahf
mov
xchg
ja
mov
call
adc
outs
sbb
inc
add
add
cwde
xor
jae
cmps
jns
(bad)
fidiv
inc
hlt
pop
imul
fadd
mov
lea
iret
pop
adc
jecxz
es
lahf
add
dec
xor
ins
cmp
fidiv
mov
push
fnstcw
jmp
mov
ins
stos
mov
test
repnz
push
jge
bound
inc
inc
in
(bad)
mov
cmps
(bad)
call
cmp
lea
clc
push
xchg
mov
sbb
ret
add
cs
mov
fidivr
push
mov
jno
pop
fwait
pop
mov
sub
push
call
shr
or
or
loopne
push
fs
daa
rcr
jno
mov
inc
cmps
push
ins
test
test
test
sar
mov
ret
xor
mov
je
in
xchg
lock
jae
popf
std
clc
mov
mov
movs
enter
mov
mov
xchg
mov
cmc
xchg
out
mov
aas
fldenv
js
and
movs
push
int3
hlt
push
(bad)
mov
enter
mov
mul
(bad)
test
out
hlt
mov
fwait
bsf
pop
pop
mov
xor
inc
iret
mov
jp
sahf
ror
cmp
loope
pop
sbb
xor
sub
add
xor
jmp
pop
mov
jns
and
mov
sub
push
sbb
pop
fistp
repnz
mov
pop
lock
repz
and
test
in
push
popf
adc
leave
fisubr
(bad)
fcomp
push
dec
cwde
and
imul
imul
add
dec
push
stc
xor
inc
or
pop
dec
jbe
pop
dec
rcl
jle
pop
scas
imul
mov
push
cld
pop
mov
leave
push
shl
test
cmp
jp
movs
xchg
mov
out
les
je
(bad)
(bad)
pusha
xchg
inc
movs
mov
movs
mov
into
in
adc
jb
and
cld
lds
mov
out
add
lea
(bad)
cmp
sti
(bad)
pop
push
shr
das
xchg
jb
(bad)
push
loope
fistp
ins
fist
std
retf
mov
lock
cmp
lds
lds
pop
xor
inc
sub
fmul
or
mov
mov
fsubr
and
jecxz
iret
(bad)
les
mov
mov
sub
mov
mov
and
xor
pop
and
std
dec
mov
mov
dec
lods
cwde
mov
pop
jnp
retf
pop
retf
or
adc
adc
repnz
fisub
mov
cld
mov
dec
xchg
fnstsw
push
mov
sbb
mov
push
(bad)
mov
int3
popa
mul
stos
es
out
mov
and
xlat
mov
push
cmps
mov
pop
xchg
mov
dec
outs
std
popf
rcl
dec
add
inc
sub
(bad)
out
rol
imul
push
jb
fucom
in
pop
jmp
xchg
jae
mov
fwait
sar
push
inc
ins
or
out
xchg
add
cmps
scas
pop
retf
cmc
loope
cdq
aas
mov
sub
cmps
popf
(bad)
pop
pop
daa
das
imul
loop
nop
(bad)
jle
scas
enter
rcl
sahf
loope
ds
or
sbb
lea
ret
lea
fcom
pop
ror
mov
fldenv
scas
bound
inc
scas
inc
mov
cmp
ret
jae
xor
jb
inc
xor
and
mov
dec
jbe
into
sub
xlat
add
mov
pusha
sub
cmps
inc
xchg
jp
fwait
cmps
jo
sbb
cdq
mov
stc
mov
pop
xchg
daa
push
popa
sub
jmp
ret
out
rol
ret
std
test
daa
mov
leave
inc
ja
push
jo
mov
in
js
xor
test
arpl
adc
xor
in
aas
push
stos
nop
dec
cdq
xlat
or
fstp
xor
and
mov
cmc
inc
xchg
xchg
push
cmc
imul
xor
xor
xor
sti
push
mov
cs
mov
and
sbb
dec
mov
adc
jnp
std
sbb
mov
mov
mov
bound
xor
or
push
jne
push
cmc
lds
call
aam
movs
sub
pop
mov
stos
cmp
(bad)
mov
pop
xlat
sbb
dec
ins
lock
xor
hlt
push
add
mov
pop
hlt
mov
push
or
dec
push
add
mov
jo
stos
add
xchg
cmp
pop
fdiv
and
sbb
inc
into
or
xor
ret
movs
jecxz
in
and
ret
and
adc
and
xor
sub
mov
adc
mov
aas
pushf
aad
xchg
add
loopne
lea
je
mov
out
jle
dec
push
and
ss
imul
xchg
mov
fist
cmp
push
cmp
lods
test
push
and
cmp
in
int
data16
xor
jg
vmwrite
mov
mov
idiv
dec
sbb
pop
add
adc
sbb
lock
sbb
jbe
ja
out
(bad)
adc
movs
jae
mov
sti
or
and
and
pop
ss
add
(bad)
mov
add
sbb
popa
std
nop
mov
dec
xchg
sub
mov
mov
test
cmc
ins
dec
pop
fcmovu
nop
cmp
push
fcmove
retf
fist
mov
push
mov
outs
ret
mov
ss
retf
sub
cli
add
add
pop
xor
cmp
inc
mov
mov
and
jne
cli
xchg
pop
leave
jne
cmps
push
mov
inc
jae
call
loope
scas
fstp
int
daa
les
movs
sbb
mov
shl
sub
sar
xchg
push
mov
push
mov
loop
call
or
jmp
jb
cwde
in
jno
mov
adc
ins
je
hlt
jnp
ret
in
test
loope
in
mov
xor
dec
xchg
cli
outs
inc
pop
cmp
cmp
mov
aam
ss
sub
stos
jns
pop
sbb
adc
dec
sahf
xchg
ins
loope
sub
fwait
xchg
dec
jb
imul
inc
mov
aam
jle
mov
push
mov
shl
mov
popf
pop
xor
in
sbb
mov
jno
jns
pusha
fst
mov
jecxz
sbb
cmp
pop
shl
xchg
xchg
inc
mov
mov
adc
aam
sub
loop
js
movd
inc
mov
sbb
leave
jecxz
cli
je
xor
retf
ja
add
fst
mov
mov
fisub
dec
adc
cmp
cld
or
loop
inc
dec
xchg
scas
and
into
mov
daa
cwde
sub
push
out
cmp
fcomp
outs
or
stos
aad
fst
sub
inc
dec
mov
rcr
retf
sbb
(bad)
mov
movs
lock
mov
pop
xchg
repnz
adc
not
in
mov
pop
idiv
sub
aas
mov
stos
pop
nop
std
jecxz
loopne
or
mov
mov
inc
adc
xchg
cwde
mov
je
in
rep
(bad)
in
cmp
xor
mov
adc
mov
and
sub
movs
stc
mov
(bad)
mov
or
(bad)
adc
push
(bad)
cmp
adc
test
xor
add
and
push
jl
arpl
add
and
or
into
dec
int
lods
push
(bad)
cld
xor
push
add
pushf
pop
push
pop
dec
lods
mov
retf
or
push
cmp
icebp
xchg
or
ror
movs
push
mov
lea
jbe
retf
mov
mov
outs
xchg
or
es
dec
mov
ds
jnp
test
loope
shr
fwait
aaa
gs
test
(bad)
in
dec
imul
div
or
dec
adc
jo
retf
pop
jne
xchg
cwde
pusha
adc
(bad)
push
mov
in
test
les
cwde
push
adc
retf
out
and
lock
and
mov
shr
mov
cmp
clc
ins
shl
ds
ss
aas
int
jbe
(bad)
jmp
ja
cli
loope
dec
retf
out
mov
inc
inc
lahf
xchg
dec
enter
call
mov
je
ja
shr
add
fwait
out
loop
pop
mov
sub
rcl
xor
mov
outs
xchg
xor
mov
sbb
xchg
push
lds
aam
adc
mov
clc
xchg
adc
(bad)
jbe
cdq
je
in
stc
(bad)
sub
pop
mov
mov
fild
out
(bad)
imul
sub
retf
je
xor
dec
lods
add
sahf
call
(bad)
loop
jmp
cmp
dec
inc
in
shl
add
pop
stos
bound
outs
cmp
xchg
dec
cs
(bad)
xlat
outs
dec
(bad)
loop
mov
je
add
mov
aad
js
ret
pop
loop
jmp
rcr
(bad)
mov
pusha
xchg
inc
xchg
stc
lods
pop
add
add
xor
push
stos
(bad)
xchg
fs
imul
icebp
(bad)
mov
ss
mul
in
mov
and
inc
push
push
rol
dec
jns
icebp
fcomp
out
jecxz
jmp
mov
lods
jg
(bad)
lds
(bad)
out
mov
or
push
(bad)
neg
ins
das
bound
iret
jmp
inc
retf
jle
dec
pop
addr16
adc
rol
setns
cdq
dec
sbb
loopne
and
pop
add
push
(bad)
cmp
stos
mov
or
push
jmp
jbe
jae
mov
es
adc
inc
push
cmp
jle
pop
xor
retf
loopne
mov
mov
xchg
call
repnz
adc
lods
icebp
mul
daa
sbb
adc
(bad)
es
mov
mov
or
aas
ret
add
and
mov
lods
push
or
loop
mov
sbb
mov
jge
pop
std
sbb
push
xor
cmp
mov
push
jecxz
in
cmp
mov
add
int
(bad)
aas
leave
test
jb
mov
aam
xchg
xchg
sub
or
retf
stos
das
inc
hlt
mov
daa
clc
push
inc
jle
mov
shr
or
inc
xchg
jecxz
and
or
fldcw
sub
mov
inc
addr16
ror
inc
in
dec
or
out
(bad)
and
arpl
fwait
out
mov
(bad)
rcl
mov
cwde
jmp
movs
pop
cmp
repz
hlt
je
cmp
push
outs
xor
add
(bad)
push
xchg
(bad)
jmp
cmps
mov
retf
test
cld
loopne
out
or
push
pop
popf
jl
sbb
lods
mov
pop
mov
push
sti
push
jecxz
pop
sub
sbb
js
stc
jb
xchg
fs
pop
mov
std
addr16
shl
and
inc
fcom
arpl
lea
cwde
mov
ret
jge
(bad)
mov
pop
inc
inc
repnz
inc
icebp
fmul
in
inc
shl
dec
stos
jmp
mov
inc
vprotw
lea
mov
mov
mov
push
loop
jae
jg
mov
cld
sahf
mov
pop
es
mov
cwde
pop
pop
xchg
test
dec
xchg
xchg
fidiv
ds
std
stos
sub
sbb
push
mov
clc
(bad)
jmp
cmp
push
add
jne
lods
dec
nop
mov
xchg
xchg
sbb
dec
sbb
and
adc
arpl
mov
push
(bad)
mov
xor
cli
xchg
lds
xor
in
aaa
jae
hlt
addr16
dec
icebp
cmp
repz
iret
inc
je
int
add
pop
cdq
stc
test
jle
sub
xor
sub
pusha
cs
in
mov
popw
push
movs
mov
fcom
shl
mov
or
fdiv
outs
in
fs
(bad)
and
push
adc
jb
adc
xchg
gs
lahf
js
mov
jp
loope
fsub
push
add
fld
adc
js
mov
dec
mov
outs
pop
ret
cmps
es
adc
outs
lds
mov
mov
or
int3
add
lods
cld
push
in
pop
push
sub
adc
repz
popf
jne
in
cmp
loop
pop
rcl
dec
pushf
dec
js
das
and
setl
sub
push
mov
xor
inc
loope
mov
ss
call
lock
scas
xor
mov
and
sar
(bad)
inc
ret
cmp
cmp
xor
inc
mov
into
out
push
jno
loop
add
into
ins
jnp
lsl
sbb
ficom
imul
or
loop
dec
ins
test
jb
scas
add
mov
ss
arpl
jle
xlat
mov
xor
scas
pushf
inc
pop
out
test
or
fnstenv
pop
xchg
das
retf
stos
inc
hlt
arpl
mov
pop
iret
in
cmp
mov
push
mov
cwde
pusha
adc
mov
fbstp
pop
pusha
lock
sub
adc
outs
retf
inc
mov
leave
pop
and
ror
test
imul
mov
inc
or
jle
dec
gs
pop
and
nop
cmp
mov
pop
add
ss
dec
jo
int3
rcl
sbb
push
adc
or
xchg
add
cmp
sbb
ret
mov
mov
cwde
ja
xlat
jb
cmp
shr
nop
retf
aas
int3
push
mov
call
out
call
stc
push
retf
into
xor
mov
xchg
pop
lahf
(bad)
inc
mov
add
ja
push
pop
fild
push
or
into
fld
xchg
imul
mov
movs
mov
push
dec
loopne
hlt
push
xlat
enter
mov
push
cld
ror
mov
dec
clc
int3
mov
aam
div
cld
and
sar
push
addr16
mov
sbb
and
push
xchg
or
mov
mov
and
div
push
ins
test
jmp
hlt
pop
mov
add
out
repnz
imul
mov
jge
leave
(bad)
cmp
in
into
pop
outs
cdq
cmc
and
js
mov
push
fmulp
outs
inc
cwde
and
outs
mov
outs
test
and
fmul
stos
enter
pop
and
pop
cmp
mov
cmc
and
jge
out
mov
ins
int3
cmp
enter
dec
add
in
cli
mov
inc
pop
cmps
in
ins
cwde
mov
imul
mov
outs
retf
jecxz
add
inc
inc
cmps
sub
add
loop
pop
and
xlat
test
add
add
jecxz
in
out
cmps
(bad)
mov
sbb
dec
push
adc
movs
add
imul
mov
sub
sub
imul
add
int
or
adc
sbb
lds
cli
sub
add
add
mov
xchg
push
mov
cmps
adc
loopne
dec
or
pop
xor
retw
xor
pop
int3
outs
pusha
dec
xor
push
popf
shl
inc
fsubr
out
arpl
pop
cmp
sti
lds
or
arpl
data16
xor
push
std
jl
sbb
sub
adc
adc
aam
pop
leave
cs
mov
jne
fsubr
pop
pop
stos
xor
sub
xchg
adc
xor
mov
test
add
(bad)
xlat
(bad)
stos
arpl
sub
in
pop
mov
sti
jnp
jnp
cld
inc
popa
push
mov
add
cdq
cmp
movs
xchg
xchg
popf
stc
lss
dec
popa
xchg
leave
int3
test
push
adc
les
cmp
pop
add
and
imul
popf
and
mov
push
mov
jnp
dec
rcl
movs
mov
lea
xchg
xchg
jbe
mov
mov
cmp
jp
test
or
mov
fs
mov
fwait
loope
sbb
inc
iret
xor
arpl
repz
add
nop
cmps
fwait
hlt
aas
adc
xor
add
push
popf
lock
add
mov
xchg
test
or
scas
push
push
(bad)
cmp
dec
inc
jmp
pop
cmc
mov
in
inc
sbb
push
sbb
inc
fucomp
dec
cwde
pushf
mov
retf
movs
ins
inc
dec
add
stos
sub
mov
jno
addr16
scas
rcr
add
stos
test
outs
enter
ins
(bad)
test
mov
pushf
aas
push
mov
dec
mov
xor
mov
ds
getsec
fsubr
rol
imul
in
jmp
or
add
gs
jecxz
lea
neg
ret
retf
xchg
pop
ins
test
mov
imul
gs
jge
mov
int3
std
stos
add
dec
jge
xchg
inc
sbb
push
push
xchg
xor
test
addr16
push
push
sbb
mov
jge
aad
js
sbb
xchg
push
mov
xor
mov
jo
sub
mov
fs
lods
inc
dec
mov
data16
and
into
jecxz
and
cmp
mov
mov
not
mov
and
adc
lods
jecxz
loopne
icebp
shl
imul
jg
xchg
cli
test
and
das
push
xor
adc
sub
cmp
retf
mov
sahf
out
xchg
xor
imul
ss
and
fmul
or
jmp
pop
mov
mov
mov
rcl
das
hlt
push
pop
movs
lea
pop
(bad)
retf
cmps
js
sbb
in
dec
fnstcw
in
xchg
fnstcw
outs
sub
mov
dec
loop
sbb
mov
fs
dec
gs
sub
ret
mov
sub
lea
bound
scas
(bad)
cmp
add
cwde
sar
js
sbb
sbb
fisub
or
fild
jp
out
mov
push
sahf
out
cmp
adc
test
push
inc
mov
imul
xor
push
out
cmps
sbb
repz
push
xor
inc
rol
mov
popf
les
cdq
jp
or
sahf
js
push
mov
cmp
das
inc
inc
jmp
sbb
imul
or
sub
in
inc
ret
inc
xor
fcmovne
out
pusha
adc
pop
les
call
lds
rol
add
jb
xchg
jmp
pop
pop
or
sub
lahf
sub
fimul
mov
mov
sub
fidivr
ret
fs
jnp
ret
pop
adc
push
xchg
dec
iret
js
in
shl
and
or
dec
outs
and
nop
sub
jae
push
jge
and
jno
xor
pop
aam
sbb
adc
cmp
(bad)
fcomp
mov
add
xchg
jne
int
jg
or
push
jae
lds
leave
cmps
xchg
add
sahf
sub
jo
out
push
rcr
mov
cmp
(bad)
mov
fwait
xchg
add
(bad)
jmp
mov
cdq
(bad)
nop
sbb
sub
aad
js
stos
aaa
inc
push
jmp
(bad)
xchg
imul
int
es
cdq
sbb
sub
repz
pusha
(bad)
xchg
ds
jg
jbe
scas
xchg
repz
or
mov
cmp
jl
aas
scas
stc
out
xchg
xor
xchg
or
jno
movs
dec
push
test
jns
pop
jg
push
dec
or
xor
inc
mov
or
sbb
mov
fdivr
stos
pop
dec
mov
rcr
and
adc
loope
int
imul
aaa
push
popf
inc
or
(bad)
cmp
xor
xchg
dec
add
push
in
cmps
adc
and
mov
cmps
or
push
jmp
dec
xchg
and
clc
(bad)
jmp
stc
pusha
cmp
jg
icebp
into
xchg
sbb
mov
push
mov
cmc
fwait
repz
repz
retf
adc
mov
std
int3
std
or
fist
jo
outs
icebp
or
stos
je
jnp
(bad)
xchg
add
add
cmp
ror
push
ss
dec
cdq
hlt
aas
add
stos
cmps
dec
sub
clc
mov
sbb
xchg
mov
mov
push
push
jle
pop
cmp
iret
inc
adc
xchg
add
dec
iret
inc
xor
rcr
jg
dec
mov
es
popa
xor
sub
das
fistp
mov
das
sub
cmp
dec
into
and
jbe
ja
add
outs
jecxz
aad
inc
pop
std
mov
ins
dec
sbb
mov
push
dec
movs
cmp
mov
cld
bswap
leave
inc
dec
cmp
(bad)
cld
test
dec
stos
sub
pop
sbb
mov
sahf
sbb
sub
cdq
es
add
mov
jecxz
lods
int
movs
repz
mov
add
xchg
fmulp
or
idiv
cmps
pop
cwde
or
jp
or
sbb
test
mov
inc
push
inc
push
stos
cli
push
loop
pop
into
outs
test
mov
xchg
fwait
mov
int
jecxz
test
shl
nop
cmp
add
push
fimul
push
stos
xchg
jmp
out
dec
xor
stos
loopne
arpl
push
idiv
je
ror
push
pop
push
and
or
xchg
mov
ret
and
ss
inc
xchg
inc
mov
aam
mov
cmp
or
mov
mov
scas
lock
loop
pop
call
movs
push
fisubr
pop
add
jp
loopne
(bad)
mov
jo
or
rcl
pop
popf
push
xor
out
in
test
push
call
js
xchg
jb
enter
cmp
adc
push
inc
popa
sbb
cmc
jmp
cld
pop
and
inc
push
add
mov
dec
(bad)
aam
fcom
xchg
push
push
jle
in
dec
fldenv
adc
push
out
sbb
dec
jae
mov
test
cmp
in
pop
jmp
popa
cmp
inc
push
in
adc
out
xor
aaa
fisub
stc
push
push
leave
mov
stc
es
push
arpl
xor
sub
ret
test
xchg
es
in
push
push
or
pop
test
jecxz
lods
js
push
adc
jecxz
pop
stc
fxch
fs
and
xchg
mov
sbb
ffreep
dec
jmp
xchg
test
mov
add
dec
push
dec
pop
dec
xor
sahf
push
push
or
addr16
add
mov
push
inc
lahf
int
rol
popf
aad
push
dec
sub
popf
aaa
sub
ds
imul
dec
xchg
repnz
(bad)
rcl
dec
cmps
or
mov
mov
test
pop
(bad)
jnp
mov
sbb
mov
fnsave
dec
fwait
test
push
fucomip
mov
mov
test
xchg
or
adc
ret
push
lds
jg
test
imul
mov
ja
movs
cmp
add
and
and
push
push
xchg
jmp
mov
in
jmp
aad
test
pop
jge
push
pop
mov
pop
cli
out
in
jns
or
pop
mov
iret
lahf
jno
mov
pusha
in
sbb
push
pusha
jp
mov
push
mov
jecxz
(bad)
repnz
jl
push
addsd
push
(bad)
adc
std
sbb
dec
push
aam
cmp
push
in
xor
jbe
sbb
mov
cmp
pusha
xor
pop
sti
loop
cmp
sub
mov
shr
push
mov
hlt
xchg
lahf
adc
or
fstp
inc
jmp
push
rcr
or
sahf
mov
lods
jg
xor
add
add
outs
jns
push
mov
in
sub
loope
pop
jge
clc
pop
and
ds
xor
or
mov
into
and
call
in
or
pop
push
jge
ja
fidiv
into
sbb
test
imul
fsubr
add
add
pop
push
or
ds
pop
sub
sti
push
or
pop
setns
xlat
fs
sub
out
hlt
ret
jl
in
sub
xchg
xor
jmp
fimul
cmp
xor
cmps
sahf
push
(bad)
xlat
test
test
xor
dec
aam
add
adc
push
outs
aaa
(bad)
in
ret
xor
xchg
arpl
mov
ds
mov
outs
and
mov
add
xor
mov
shl
push
cmp
adc
push
jno
call
enter
mov
fldenv
cmp
out
in
mov
mov
in
or
test
jp
jb
cmp
push
mov
stos
fisub
int
cmps
jmp
pop
jmp
mov
das
cs
in
mov
and
(bad)
fs
fidiv
mov
sbb
or
dec
or
cli
mov
shl
imul
mov
inc
sub
add
div
sub
aaa
xchg
popf
hlt
push
imul
or
mov
data16
hlt
out
je
or
add
mov
sbb
xor
cwde
es
and
stos
sbb
xor
push
mov
lea
jb
or
and
inc
cmc
sbb
push
add
and
imul
jge
mov
mov
lods
popa
xor
xor
leave
inc
test
out
fisttp
dec
adc
xor
ss
adc
lea
cmp
xchg
icebp
out
loopne
data16
clc
adc
shl
add
fs
xor
rol
inc
daa
sbb
ss
shl
hlt
mov
or
(bad)
test
xchg
sbb
scas
or
or
or
or
jno
xor
mov
cmp
and
fist
pop
jne
scas
push
dec
inc
and
xlat
in
adc
je
out
lock
rcl
mov
pop
pop
xor
es
mov
icebp
or
mov
mov
aas
ins
cld
out
mov
cmc
retf
fisub
popa
push
cli
enter
sbb
dec
sub
aaa
mov
out
push
cmp
fwait
pop
add
mov
mov
pop
adc
call
cmp
inc
xor
outs
aaa
jbe
retf
jae
shr
daa
mov
add
dec
add
js
repz
test
adc
aaa
fsub
cwde
cmp
mov
cmp
daa
retf
addr16
test
xchg
and
daa
daa
adc
xchg
cmp
mov
mov
jle
movs
std
int
cmp
sub
push
fwait
xchg
stc
push
nop
and
icebp
fwait
jae
in
and
jg
movs
adc
int3
sbb
xor
pop
xor
mov
enter
aam
lahf
and
jecxz
inc
mov
out
adc
jecxz
in
dec
adc
fstp
aaa
(bad)
and
or
mov
lods
adc
adc
lds
or
mov
fcmovb
gs
and
(bad)
mov
inc
add
inc
push
mov
data16
xor
push
mov
pop
or
test
pusha
data16
aaa
jno
add
pop
jmp
call
in
mov
inc
add
iret
push
mov
push
std
pop
jbe
loopne
fist
adc
adc
aaa
jmp
test
mov
push
fistp
cmp
sub
movs
add
popf
adc
sbb
pushf
pop
or
loopne
shl
adc
aam
into
push
lods
call
mov
in
sub
test
jb
js
dec
mov
mov
lock
xchg
ret
sahf
push
pop
stos
adc
arpl
mov
fst
pushf
dec
and
ins
cmp
out
test
fsubr
jecxz
jno
stc
fisub
or
je
sbb
std
push
or
rcr
not
cmps
xor
sbb
scas
mov
and
repnz
imul
enter
mov
rcr
imul
mov
jmp
sub
or
daa
stos
mov
into
(bad)
enter
cmps
fld
add
outs
out
jmp
xchg
popf
in
inc
mov
adc
fwait
xor
(bad)
inc
push
push
sub
push
lock
adc
dec
gs
and
jle
mov
js
pop
retf
xchg
fs
sub
loope
gs
inc
imul
dec
sbb
daa
pop
daa
xor
mov
ret
sahf
add
jg
cmps
and
xor
shl
mov
loopne
cdq
in
enter
ss
mov
inc
dec
adc
(bad)
dec
pop
imul
xchg
addr16
cmc
pushf
mov
mov
out
mov
lods
add
mov
pop
push
push
jle
mov
pushf
xchg
in
push
cmp
dec
adc
(bad)
loopne
ret
adc
loopne
jle
jb
cmp
aas
sub
mov
or
jne
dec
mov
outs
dec
inc
pop
xor
sti
cdq
cmps
xor
mov
cmps
(bad)
loop
cmp
jge
mov
ins
jbe
fsub
mov
mov
xor
xchg
arpl
push
jmp
add
mov
jle
int
add
lahf
in
cdq
jmp
xchg
ss
das
xor
in
push
jle
addr16
out
sub
sub
dec
mov
sub
pop
ret
sbb
cli
pop
out
cmp
cwde
mov
int3
dec
cmp
loopne
lods
pop
(bad)
sbb
mov
cdq
or
xlat
stos
(bad)
pushf
mov
movs
push
dec
or
mov
add
mov
pop
mov
pop
mov
pop
inc
into
xlat
push
popa
push
in
es
vmwrite
cmps
adc
aad
mov
outs
dec
jmp
mov
mov
out
loopne
jne
mov
xchg
or
lods
test
and
arpl
push
xchg
inc
aaa
sbb
(bad)
xor
retf
sbb
xchg
pusha
inc
xor
sahf
mov
sub
(bad)
cwde
into
stc
retf
cmp
pop
cmps
je
mov
cmp
mov
icebp
jge
inc
nop
dec
ror
popa
cld
arpl
mov
das
arpl
push
in
lods
sbb
pop
mov
scas
leave
xchg
stos
pop
push
inc
cli
jae
lds
jo
mov
call
push
cmp
pop
pop
sub
xchg
sub
xchg
shr
pop
sub
fld
add
dec
mov
out
and
mov
shl
sbb
shl
adc
lods
lock
cmp
dec
inc
mov
retf
hlt
gs
call
xor
das
xchg
xchg
xchg
js
(bad)
into
adc
add
pushf
std
(bad)
mov
or
rol
dec
shr
and
bound
mov
mov
es
jns
jo
xor
lds
jmp
dec
imul
xor
jge
and
in
lds
push
lods
pop
sub
aaa
xchg
nop
mov
push
lds
and
ins
es
inc
les
arpl
(bad)
sub
call
inc
sbb
sub
imul
pop
es
ins
fdiv
cli
rol
xchg
jl
loop
pusha
inc
mov
xor
clc
rcl
retf
jmp
cli
aam
jo
dec
push
or
mov
es
sub
cs
mov
mov
iret
aam
fidivr
rol
xchg
xchg
mov
pop
(bad)
jle
popf
(bad)
test
cmp
or
dec
enter
dec
pop
mov
push
shl
outs
jo
adc
movs
data16
mov
mov
and
and
call
inc
mov
addr16
lahf
pop
cmp
mov
aad
jbe
test
fmul
retf
mov
ret
cld
cdq
cdq
pop
imul
shl
mov
(bad)
dec
movs
and
jmp
xchg
dec
leave
dec
stc
ins
jnp
push
test
inc
sub
mov
pop
xchg
inc
push
or
and
sub
fst
and
push
mov
shl
enter
cmp
fisubr
sub
pop
cmp
lea
cdq
loop
leave
arpl
mov
ficomp
mov
sbb
xor
arpl
rol
out
sub
sti
inc
call
or
add
sub
dec
add
popf
push
jo
cmps
xchg
inc
nop
ret
lock
pop
jbe
add
pop
sub
jecxz
jae
ficom
add
cdq
sbb
into
add
repz
jmp
test
or
pop
add
stos
and
cmps
je
jb
popf
and
xor
jg
ret
add
fld
cmp
es
enter
jg
mov
and
and
call
ret
mov
lock
outs
sub
enter
xchg
add
rcr
in
sub
cld
sbb
cmp
push
cwde
enter
inc
repz
jg
and
cmp
stc
adc
(bad)
adc
cld
mov
push
mov
push
sub
pushf
lock
push
lock
test
xchg
into
cmps
cld
sub
cli
(bad)
pusha
sbb
mov
inc
push
and
adc
or
or
sbb
stc
adc
outs
mov
mov
fs
jbe
test
push
leave
mov
mov
mov
inc
pop
sbb
repz
ss
iret
enter
mov
fild
inc
mov
mov
push
arpl
push
push
add
ins
cli
jb
mov
out
push
mov
sbb
mov
popf
arpl
pop
pop
and
push
sbb
lock
jmp
xor
enter
outs
lock
lods
xchg
not
addr16
mov
and
out
push
out
inc
adc
cmp
gs
repnz
in
out
enter
mov
xchg
mov
add
lds
add
movs
sti
cmp
dec
add
adc
popf
push
ss
adc
cmps
cdq
xor
pop
xlat
daa
inc
shl
ins
inc
mov
fiadd
adc
inc
push
sbb
out
pop
jp
xchg
jmp
jb
dec
dec
rcl
into
mov
push
test
mov
dec
out
dec
addr16
adc
rol
xlat
jnp
das
xchg
jge
lods
in
mov
inc
dec
nop
xlat
sub
(bad)
ss
add
xor
inc
inc
mov
or
sub
(bad)
jae
cmc
aad
test
xchg
jmp
and
xchg
jnp
inc
nop
scas
xor
cs
les
mov
cmp
jne
push
adc
mov
mov
shr
or
cmp
add
ds
inc
pop
sub
mov
jno
jle
jge
movs
cli
or
add
pop
addr16
ja
push
cmp
cmps
mov
jbe
xchg
pusha
fnstsw
data16
aam
sahf
ficom
push
out
ds
dec
ins
std
les
push
sbb
fs
adc
adc
icebp
mov
push
gs
and
cmps
mov
in
add
pop
in
jns
xor
stos
bound
loop
pop
pop
or
sub
inc
mov
iret
sar
ins
xor
inc
cmc
scas
in
dec
lahf
xor
sub
js
test
mov
cmp
fcomi
test
lock
jb
push
mov
sbb
arpl
sub
fnclex
lods
sar
loopne
test
xor
xor
or
jecxz
jnp
and
dec
xchg
cmp
dec
ret
mov
lods
or
adc
xchg
xor
push
cmp
ror
cmc
or
xchg
and
popf
dec
push
outs
mov
fs
les
sub
scas
push
inc
push
jns
scas
adc
pop
push
dec
test
add
pop
jg
out
or
pushf
mov
out
or
nop
stos
jae
mov
neg
jmp
inc
mov
lds
push
mov
pop
pushf
stos
jbe
test
push
xor
popa
aas
and
aaa
js
fcomi
inc
jae
icebp
(bad)
es
cmp
fist
sbb
(bad)
or
aam
stc
cmp
(bad)
repz
cmp
imul
(bad)
sbb
imul
js
mov
test
popf
and
stos
add
or
push
sti
addr16
xchg
sub
jmp
cli
add
inc
nop
movs
fisubr
inc
fld
mov
fisubr
mov
and
ins
mov
xchg
jae
stos
xor
cmp
mov
cmp
test
test
movups
aam
xchg
lods
push
(bad)
in
sub
stos
data16
sbb
sub
mov
adc
cs
out
cwde
sbb
cwde
ss
xor
jp
movs
dec
xlat
aad
mov
leave
mov
dec
lods
mov
push
lahf
(bad)
call
push
sbb
add
loopne
xchg
xchg
push
inc
add
mov
int
pop
cmp
inc
aam
test
aam
or
ds
jns
cmp
jmp
movs
mov
mov
pop
popf
sbb
xor
daa
inc
and
xor
loope
rcr
mov
sub
mov
mov
out
loope
shl
pop
dec
shr
xchg
sbb
clc
lods
and
or
test
iret
pop
(bad)
or
jle
mov
iret
in
dec
jbe
stos
jne
cmp
mov
push
fs
test
rcr
sbb
pop
fild
mov
add
adc
xor
popa
or
cmp
sti
pop
loop
or
je
stos
js
push
pop
sub
fadd
pop
sub
not
aad
or
add
or
sbb
push
rol
xor
and
dec
(bad)
call
push
pop
jmp
cmp
imul
test
ins
stos
out
jne
xchg
jmp
(bad)
push
fld
jg
test
mov
mov
enter
adc
mov
adc
shr
mov
sbb
mov
movs
cmp
xor
fucompp
imul
movs
inc
outs
pop
stc
push
add
lock
fprem1
push
icebp
inc
jnp
cmps
out
sbb
adc
scas
dec
mov
add
arpl
xlat
dec
mov
dec
dec
in
xchg
scas
lds
in
inc
cs
mov
sub
jno
es
in
jbe
xor
sbb
or
jge
mov
jb
mov
lods
cmps
inc
pop
jge
out
dec
pop
addr16
aas
or
aad
mov
or
and
mov
ins
stos
sub
mov
imul
jl
pop
test
fs
sbb
data16
and
pop
adc
(bad)
int
lods
clc
sub
sub
pop
int3
jecxz
cmc
cwde
(bad)
in
jmp
(bad)
push
mov
mov
sbb
(bad)
xor
pusha
jo
popf
xchg
sub
sub
pop
cmp
push
add
inc
inc
dec
inc
inc
mov
lds
cmp
stos
out
(bad)
cli
outs
xchg
sub
mov
pop
std
imul
loope
sbb
mov
mov
loope
cld
nop
clc
xchg
lea
mov
loope
inc
pop
pop
xor
mov
ret
daa
add
in
cmps
aas
inc
pop
push
movs
rol
dec
add
sbb
mov
xlat
(bad)
sar
and
lock
aam
jecxz
movs
fcomp
loope
ds
cmp
pushw
ja
ror
or
ins
ins
mov
xchg
inc
pop
loopne
and
test
add
iret
or
xor
xor
dec
icebp
adc
stos
pop
sub
cld
fs
mov
dec
inc
xor
jno
add
pop
push
adc
inc
shr
ins
xor
mov
mov
fwait
mov
xor
pusha
cmp
xchg
sub
outs
pushf
sbb
jnp
scas
fstp
adc
test
shl
dec
push
add
mov
and
sub
mov
mov
inc
test
cdq
xor
inc
fcomp
pop
arpl
jo
inc
sbb
clc
sbb
xchg
pushf
in
pop
adc
in
xchg
pop
mov
iret
(bad)
stc
dec
jp
popf
mov
lods
loop
sub
ror
add
ror
cmp
dec
mov
inc
mov
clc
pop
cmc
mov
push
adc
addr16
lods
push
movs
aas
out
out
push
mov
ficom
addr16
fld
jno
inc
sar
jp
add
jo
inc
lock
push
push
sbb
cld
xchg
jle
jle
fbld
pop
repz
xor
adc
ins
test
pop
imul
fsubrp
popf
scas
rol
repz
push
mov
pop
jbe
mov
aaa
test
and
push
inc
aam
out
and
and
cmp
movs
dec
mov
jmp
add
xor
mov
pop
mov
into
push
and
js
push
add
pop
jne
shl
mov
cmp
inc
addr16
rcr
jge
int
aas
in
inc
retf
retf
lods
or
(bad)
adc
cmps
push
loop
retf
push
movs
test
fucomip
pcmpeqd
inc
jmp
jo
movs
call
mov
inc
fnstcw
mov
(bad)
sbb
cmp
or
aad
cmps
ja
mov
inc
fchs
cld
(bad)
ret
ror
pop
aam
push
inc
aam
xchg
mov
cdq
rcr
fucomp
push
popf
pop
(bad)
push
sbb
xor
xchg
ja
mov
lods
inc
add
mov
or
xor
call
sahf
inc
cmp
scas
jl
push
stos
mov
ret
add
pop
mov
jae
out
lds
jne
and
pop
es
cmp
hlt
inc
icebp
outs
dec
mov
or
dec
cmp
mov
and
lahf
xchg
out
enter
daa
fs
pop
dec
mov
cmps
cmp
mov
xor
movs
push
out
fdivr
dec
(bad)
jge
mov
out
loope
mov
cwde
out
(bad)
adc
test
out
jg
xor
jl
mov
pop
inc
sbb
neg
outs
jmp
sub
pop
and
jnp
push
fild
pop
sbb
sbb
ret
adc
jecxz
sub
cmp
loopne
retf
pusha
popa
daa
or
xchg
push
repnz
dec
sahf
adc
pusha
shl
ja
xchg
pop
push
mov
mov
mov
add
dec
lods
lahf
pop
jmp
adc
(bad)
mov
leave
das
scas
push
dec
daa
repnz
xor
sahf
or
jp
in
stos
xchg
popf
push
pop
scas
jns
gs
loopne
sub
popf
push
xchg
pop
in
in
enter
push
je
mov
pop
mov
nop
inc
xchg
xor
xchg
sub
xchg
imul
push
daa
dec
cmp
xchg
sub
xchg
shl
push
mov
jbe
pop
mov
mov
hlt
arpl
pop
cmp
retf
enter
lea
fisub
(bad)
mov
addr16
mov
movs
and
loopne
add
sbb
mov
and
stos
jbe
test
icebp
inc
pop
cmp
call
repnz
hlt
call
mov
lods
add
lods
scas
add
add
fld
sub
xchg
cmp
retf
push
and
shl
pop
push
xchg
add
mov
adc
sbb
push
mov
sar
adc
call
jg
inc
sub
or
lds
(bad)
(bad)
push
xchg
and
push
lods
mov
(bad)
fldpi
imul
cwde
cwde
jmp
and
jmp
mov
xchg
pop
push
dec
and
and
fucomi
xor
or
cld
add
enter
lahf
inc
scas
addr16
and
add
out
arpl
hlt
cwde
xor
adc
or
jb
popa
popf
xchg
call
imul
add
cmp
ret
call
ins
cmp
out
loop
push
push
sahf
xchg
mov
and
jmp
(bad)
add
mov
cmp
bound
leave
push
fbld
(bad)
rcl
ins
mov
(bad)
or
and
push
jecxz
cmps
jle
hlt
or
pop
ret
jns
or
and
aam
adc
and
sbb
fcomp
inc
mov
mov
fldl2e
scas
push
inc
stos
retf
in
(bad)
iret
mov
scas
pop
mov
and
ds
cmps
or
push
ror
jb
jl
arpl
sti
cmp
fiadd
shr
mov
nop
ret
dec
js
sub
(bad)
test
int
jg
mov
adc
xchg
aad
sbb
sub
xchg
push
fsubr
adc
das
(bad)
fld
(bad)
sbb
add
mov
cmc
or
pop
(bad)
inc
loopne
(bad)
push
sub
fidiv
and
xchg
stos
cli
and
pusha
or
push
push
jo
adc
mov
je
cmp
pop
mov
ins
xchg
sahf
jg
in
jl
mov
sbb
and
and
ds
adc
les
gs
bound
(bad)
jp
push
jns
les
mov
mov
xchg
xor
outs
pop
leave
icebp
push
pop
or
(bad)
loopne
xchg
(bad)
fwait
(bad)
imul
fisttp
loop
pop
iret
mov
test
or
mov
test
mov
sub
push
sub
(bad)
data16
icebp
inc
cmp
out
sub
push
mov
lock
inc
or
ss
mov
or
leave
cli
pop
mov
fdiv
dec
lods
push
mov
pop
inc
adc
out
adc
inc
pop
out
movs
mov
jmp
mov
adc
je
mov
arpl
push
sub
call
push
push
das
xlat
push
retf
in
fadd
add
add
sub
sub
aad
in
and
jge
xor
xor
xor
add
inc
jecxz
cdq
outs
push
xor
cwde
out
inc
mov
in
arpl
outs
loopne
int
pusha
xor
pop
adc
pop
xlat
pushf
mov
mov
mov
mov
jae
adc
fiadd
loope
pop
outs
imul
pop
add
dec
adc
aam
dec
cmps
aad
shl
fadd
fisubr
fidivr
cmps
dec
call
retf
rcl
ret
jo
mov
mul
adc
xchg
bound
jae
inc
pop
jo
dec
es
stos
and
and
xchg
xchg
test
outs
inc
js
lods
jnp
and
pop
jmp
cwde
scas
mov
(bad)
jbe
mov
bound
into
pop
mov
(bad)
pop
or
loope
mov
sub
jno
inc
jno
test
sbb
loop
mov
ins
shl
pop
arpl
ins
cmc
cdq
push
or
les
xor
repnz
push
loopne
pushf
lahf
mov
loop
inc
pop
and
push
stc
stos
dec
cmp
aam
icebp
retf
cli
addr16
ja
dec
adc
cmp
add
(bad)
(bad)
mov
test
ins
ror
push
mov
loope
sbb
inc
ja
data16
lds
xlat
mov
clc
nop
sub
sbb
jo
int
inc
and
sahf
sub
adc
or
xor
rol
pop
nop
and
adc
cmp
ins
pop
and
ds
mov
(bad)
into
lods
adc
and
(bad)
push
fs
hlt
mov
movs
iret
push
sub
test
fiadd
mov
out
rcr
jecxz
sub
fs
adc
inc
mov
or
rcl
(bad)
cmp
jg
sub
jo
or
rcr
mov
pop
outs
cdq
fcomp
test
pusha
mov
push
add
dec
mul
es
add
out
inc
enter
lahf
cdq
pop
or
mov
inc
mov
mov
aam
xor
jns
(bad)
jne
les
xchg
xor
xor
das
fst
in
and
or
cs
imul
pushf
cwde
cmp
cmps
fstp
out
shl
lods
loopne
mov
cmp
lock
stos
(bad)
mov
sbb
cdq
dec
cmp
and
leave
adc
pop
inc
movs
mov
dec
outs
mov
add
inc
pushw
pop
mov
jecxz
xor
mov
pusha
shl
stos
jmp
pop
jo
inc
les
fdivr
in
arpl
adc
sbb
jnp
inc
movs
sbb
aaa
aam
hlt
sbb
call
pop
mov
mov
mov
dec
jle
test
test
pop
fist
push
or
sbb
sar
push
mov
mov
or
(bad)
ins
mov
aam
jbe
pop
xchg
pop
and
xor
je
popf
xchg
jg
cmps
cmp
mov
cli
sti
mov
dec
sub
aad
xchg
fsub
xor
jg
lods
shl
stc
jo
gs
pushf
cwde
aaa
lahf
das
mov
sub
cmc
jge
rol
cmp
mov
rcl
sbb
mov
rcr
dec
lods
out
and
mov
or
sbb
pop
call
out
jno
ja
xchg
xchg
imul
ror
dec
jle
mov
retf
cmp
ja
ret
inc
xchg
cld
cs
mov
fwait
add
mov
clc
add
lock
add
mov
mov
push
mov
(bad)
dec
leave
push
aaa
outs
cs
sub
or
jae
push
push
xchg
js
or
mov
sub
movs
ret
mov
arpl
(bad)
loopne
je
mov
popf
mov
xchg
push
ins
jb
xor
shl
(bad)
in
xor
sar
(bad)
out
popa
inc
ja
shl
push
fs
sti
dec
scas
mov
push
mov
lea
es
ret
mov
xchg
push
adc
dec
in
xchg
xor
xchg
sbb
aaa
xor
fisubr
inc
retf
popa
imul
jbe
bnd
sub
sub
mov
cmp
ds
movs
rcl
lods
and
mov
adc
or
push
jae
pop
push
fstp
xchg
fs
push
imul
add
mov
nop
sub
int
mov
out
dec
pop
xchg
outs
jmp
xor
cs
gs
out
jmp
jno
cmp
fwait
or
and
fdiv
jp
jns
mov
std
nop
pop
jnp
adc
bnd
cdq
jmp
pop
daa
es
jmp
cli
mov
inc
ss
imul
push
mov
inc
and
mov
ins
pop
sahf
repz
sub
jmp
loope
loop
adc
mov
dec
push
dec
xchg
push
int
jmp
xchg
ret
xchg
je
stc
xor
pop
mov
test
push
dec
or
mov
sbb
push
lods
cmps
retf
add
cmp
mov
int3
inc
mov
in
adc
jno
pop
(bad)
or
(bad)
jmp
pop
sub
push
cli
jl
mov
rol
ins
sub
inc
stos
in
dec
cmp
add
mov
icebp
movs
jo
retf
loopne
mov
das
lahf
stc
leave
jl
pusha
add
pushf
cmp
scas
add
dec
call
push
(bad)
enter
mov
(bad)
repz
int
sti
add
push
retf
pusha
add
jmp
stc
sbb
or
mov
fwait
das
stos
mov
dec
daa
add
fucomi
xchg
jecxz
sub
lahf
mov
sbb
cwde
mov
das
cmp
pop
mov
ficom
inc
dec
cs
push
data16
out
add
inc
movs
and
sub
inc
jmp
popf
movs
test
mov
in
out
repz
aad
adc
xchg
enter
ret
data16
inc
cmp
mov
dec
inc
jnp
xor
sbb
sbb
pop
xchg
fcmove
inc
scas
xchg
inc
push
shr
push
loopne
in
ins
lods
das
test
cmps
pop
lods
push
xor
aad
hlt
pop
scas
leave
int3
test
mov
pop
pop
cmc
sbb
aad
pop
(bad)
out
scas
popa
rcl
addr16
jg
stc
and
(bad)
daa
in
fucomp
dec
mov
push
push
popf
dec
add
(bad)
ficomp
and
addr16
icebp
xchg
ficomp
sbb
sbb
neg
mov
or
loope
test
fiadd
call
jp
pop
push
pop
out
(bad)
adc
adc
dec
sar
das
inc
test
pop
and
arpl
and
das
adc
int3
in
ret
xchg
mov
out
sbb
jb
cmp
ins
or
add
popf
ja
jmp
xchg
push
or
ss
mov
aad
stos
mov
mov
cmp
sub
enter
dec
xchg
scas
mov
jg
dec
arpl
add
sar
push
ja
cmp
iret
das
xchg
pop
test
test
icebp
push
pop
fsubr
jmp
imul
in
outs
stos
dec
sub
jae
xor
aam
sbb
add
cwde
aas
out
mov
daa
pushf
cli
(bad)
pop
inc
cs
call
inc
lahf
sub
jmp
es
scas
call
and
addr16
call
stos
and
fwait
jg
sahf
hlt
xchg
mov
and
les
sub
or
add
add
stc
jecxz
jns
pop
xchg
btr
js
sub
iret
(bad)
jb
cmps
pop
mov
jnp
mov
mov
pop
test
cli
popa
les
sub
push
cld
test
data16
sub
nop
dec
lods
and
in
aam
xchg
(bad)
fucomp
jl
inc
push
scas
cmp
call
sub
hlt
js
xchg
fbld
cmp
outs
or
outs
daa
mov
mov
rol
pop
je
mov
ss
call
in
rcl
jo
inc
xchg
out
inc
int
push
mov
sbb
xor
xor
mov
shl
inc
cld
push
add
jge
lock
inc
dec
mov
js
test
push
jl
cdq
mov
pop
(bad)
repnz
pop
test
out
or
fisubr
and
xchg
dec
cmps
push
push
dec
xchg
inc
sub
or
loopne
dec
pop
fstp
sub
call
and
jle
jecxz
xchg
pop
test
es
(bad)
out
fiadd
leave
ins
cmp
mov
jns
mov
mov
sub
je
ins
sbb
inc
xor
mov
enter
(bad)
xor
pop
call
mov
mov
in
fmul
push
jecxz
inc
xchg
dec
jg
add
add
mov
inc
rol
iret
or
inc
push
stos
sbb
fwait
dec
push
adc
cmps
dec
aaa
sbb
sub
pop
sbb
push
jecxz
push
inc
mov
fnsave
pop
(bad)
inc
adc
leave
retf
mov
and
mov
and
retf
test
xchg
mov
add
std
xor
sbb
neg
leave
test
call
inc
movs
into
sub
fcmovnbe
sub
sub
mov
leave
fist
ins
popa
mov
js
jge
enter
push
sbb
enter
mov
lods
and
leave
mov
scas
and
jge
push
cmps
out
sub
xor
push
sar
loope
or
imul
imul
stc
sbb
shl
stos
dec
add
lods
ins
cmovno
fild
cmp
inc
icebp
(bad)
fstp
and
rep
sbb
and
xor
inc
push
call
fcom
xor
jo
in
repnz
in
jo
mov
push
cmp
mov
lods
adc
cmp
call
add
pop
pop
rol
ins
icebp
adc
movs
mov
enter
std
xor
jno
push
leave
nop
push
repz
sbb
popa
scas
gs
(bad)
arpl
xor
xchg
cmp
and
sbb
dec
sbb
sbb
mov
inc
hlt
jp
cmp
cwde
mov
add
sub
mov
fadd
retf
mov
out
fld
and
retf
stc
lods
mov
cmp
adc
xchg
std
xchg
xchg
cs
aaa
sub
inc
pop
jmp
add
adc
jno
adc
or
sbb
cmp
lahf
dec
aam
repnz
and
sbb
and
pop
push
cld
jmp
cmp
mov
mov
jns
(bad)
rcr
mov
addr16
mov
out
and
sub
sti
pop
cmp
jbe
loop
push
std
push
xchg
mov
push
retf
xor
aad
jl
sub
retf
jb
in
iret
stos
imul
in
stos
in
dec
inc
xchg
jo
cld
pop
or
cmp
je
movs
cmp
cmps
inc
repz
(bad)
not
popf
dec
addr16
movs
push
or
sub
std
mov
adc
dec
xor
mov
sub
je
push
cmp
jae
mov
xchg
mov
xchg
lock
fsubr
xchg
pop
scas
mov
mov
ficomp
add
jecxz
mov
imul
ss
popf
hlt
ins
push
scas
jp
cs
repnz
mov
jp
cmp
ds
jle
mov
mov
fst
or
cmc
daa
adc
cvtps2pi
mov
fimul
into
adc
or
dec
inc
popf
das
dec
fsubr
mov
mov
xor
sbb
inc
enter
pop
mov
mov
pushf
dec
cmp
mov
xlat
inc
ss
mov
sub
push
adc
mov
xchg
xor
cmp
stos
sub
lahf
fadd
sbb
and
inc
punpcklbw
fdivr
push
mov
xor
adc
(bad)
and
out
fwait
sub
pop
repnz
test
outs
dec
push
push
pop
(bad)
sbb
adc
mov
cmp
xor
sbb
lods
push
mov
faddp
jmp
dec
inc
push
imul
mov
adc
je
or
out
aas
movs
fdiv
jns
leave
fcom
(bad)
fldenv
jns
push
mov
xchg
inc
repnz
fistp
fist
loopne
enter
mov
or
rol
lods
sub
and
add
dec
cmp
not
adc
jp
push
sub
mov
inc
push
sahf
or
test
xlat
dec
and
or
jmp
inc
pop
jge
fstp
dec
xor
pusha
push
jge
ds
addr16
pop
jae
push
mov
in
dec
cwde
mov
inc
out
cmps
and
and
test
push
std
ds
(bad)
into
sahf
les
jnp
xor
aad
(bad)
in
jo
push
sbb
into
(bad)
pop
arpl
leave
sbb
xchg
pop
pushf
call
nop
push
cmp
ret
loopne
push
pop
ds
hlt
pushf
mov
xchg
mov
sub
inc
(bad)
(bad)
repnz
and
sub
mov
or
dec
mov
data16
call
and
inc
fdivr
sub
in
shr
enter
push
mov
and
icebp
or
pushf
mov
mov
repz
jo
push
and
or
or
and
test
nop
test
ret
dec
cmp
aas
lahf
jne
pop
outs
push
jo
cmp
cli
test
cdq
or
mov
mov
pusha
hlt
xor
ds
loop
cmp
push
ror
das
enter
int
clc
jp
fsub
adc
lods
lock
in
sbb
push
push
sbb
imul
xchg
pop
clc
pop
popf
lods
por
mov
nop
cdq
ins
push
hlt
stos
outs
jmp
popa
loopne
dec
lods
dec
mov
imul
mov
or
adc
dec
loop
cs
jg
mov
inc
push
sub
call
ss
retf
sar
fistp
dec
mov
pop
aam
scas
xchg
or
jl
imul
mov
lods
sbb
cdq
pop
jno
push
mov
test
xor
repnz
(bad)
int3
scas
cmpxchg
jo
je
and
cli
inc
pop
dec
mov
mov
in
push
aaa
sbb
out
in
pop
and
mov
cmps
addr16
xchg
and
in
xor
out
or
rol
xchg
(bad)
sbb
inc
js
cmp
rcr
inc
xchg
xchg
push
xchg
sub
aad
xor
xor
dec
lods
mov
dec
cli
fistp
adc
pop
imul
(bad)
stos
mov
bound
mov
pusha
push
lea
pop
mov
nop
xchg
cmp
cmc
jnp
sub
or
iret
sbb
or
loop
cmp
lea
adc
leave
ins
push
(bad)
mov
push
and
xchg
inc
cwde
shld
add
call
xor
xor
and
mov
ret
imul
ja
loop
inc
das
mov
jmp
fadd
inc
cmp
arpl
mov
fistp
mul
je
jmp
in
dec
mov
mov
mov
mov
iret
int3
xchg
push
call
lods
push
mov
mov
jecxz
popf
cli
lahf
icebp
fisubr
add
jl
in
cmp
out
push
data16
or
cmp
mov
outs
and
and
sub
div
sbb
xchg
adc
(bad)
inc
aas
movs
jns
inc
cmps
dec
retf
mov
cld
mov
push
aad
and
add
lds
mov
xchg
dec
push
pusha
out
pop
ins
int3
cwde
int
pop
inc
cmp
repz
out
ins
cmp
aad
sar
pusha
popa
mov
leave
dec
sbb
cmp
in
pushf
and
pop
mov
jl
ret
shl
add
enter
dec
jo
retf
xchg
or
dec
or
test
lods
loopne
add
xor
or
test
push
fbstp
jp
or
(bad)
xor
push
out
cmp
cli
outs
test
fsub
add
mov
lods
fimul
stc
call
arpl
pop
pop
ret
mov
adc
mov
sub
sbb
lods
add
pop
sub
ret
mov
mov
dec
inc
aaa
jl
jnp
lods
pop
aam
mov
out
mov
and
adc
stos
out
xor
jg
xchg
retf
outs
repz
retf
push
in
dec
stos
fwait
sbb
fisubr
cmp
lods
and
test
jne
movs
jmp
and
and
lods
and
cmp
sti
gs
sbb
sbb
fisttp
push
outs
mov
pop
sub
je
fadd
aaa
test
iret
or
sub
icebp
or
iret
mov
cdq
inc
add
ror
rcr
pusha
mov
pop
pop
lahf
jmp
pop
sbb
cmp
xor
hlt
xor
mov
inc
mov
popa
jg
int
or
add
or
xor
das
cli
cmp
add
xchg
(bad)
inc
mov
sbb
stos
xor
jl
icebp
push
xchg
fs
sub
in
fwait
mov
retf
mov
movs
iret
cld
(bad)
cwde
sbb
mov
jge
cmp
out
pop
mov
or
mov
dec
je
fsubrp
sbb
stc
sbb
call
xchg
mov
jl
mov
and
movs
jb
mov
mov
(bad)
pop
mov
shl
jno
cs
jecxz
loop
inc
into
test
add
ffree
push
adc
and
shr
lds
hlt
mov
add
sar
addr16
mul
mov
sbb
stc
mov
inc
popa
sbb
or
ret
fld
shr
xchg
sbb
jb
fidivr
lds
in
dec
or
jns
mov
push
rcl
jo
inc
mov
jecxz
ss
push
cwde
in
fisubr
rcr
scas
lea
sahf
fs
(bad)
jbe
out
xchg
data16
mov
mov
push
add
in
movs
mov
fwait
imul
stos
loope
cs
mov
mov
pop
jg
mov
xor
loop
clc
sbb
fs
pushf
xchg
dec
ins
test
xchg
fst
mov
loopne
jo
jno
jmp
test
iret
mov
lock
pop
mov
imul
enter
sbb
mov
dec
(bad)
fidiv
mov
or
fisub
pop
outs
into
cmp
(bad)
aas
jmp
or
or
inc
pop
shl
push
push
push
and
xor
dec
sub
sub
call
add
add
ins
std
jg
aaa
fisttp
retf
or
clc
bound
sbb
mov
mov
adc
lahf
mov
push
std
and
stos
(bad)
cmp
pop
pop
enter
clc
imul
and
dec
(bad)
retf
pop
and
movlps
jnp
sbb
gs
push
push
test
iret
add
pop
inc
push
mov
jecxz
(bad)
adc
out
fdivp
dec
sub
cmp
pop
mov
push
mov
std
jl
pop
or
add
xchg
pop
or
in
mov
hlt
aas
adc
push
int3
xchg
xchg
cs
imul
or
inc
rcl
ds
mov
mov
stos
xchg
(bad)
std
fnstcw
lahf
pop
test
das
shl
fimul
das
pop
or
pop
(bad)
push
(bad)
jb
xchg
(bad)
(bad)
popa
cmp
xor
icebp
push
test
pop
xor
jg
push
outs
mov
jmp
xchg
mov
fadd
sbb
(bad)
mov
jl
or
imul
xchg
packsswb
or
add
pushf
sahf
push
(bad)
dec
mov
add
popf
push
push
inc
cmps
jno
cwde
ds
and
xchg
in
mov
dec
inc
adc
aas
cmc
cmp
adc
cmp
shl
add
pop
fs
out
sbb
jp
fptan
iret
imul
mov
xlat
xchg
jl
or
and
pop
(bad)
popa
retf
ins
and
and
add
pop
js
jne
int3
icebp
nop
xchg
pop
pop
je
(bad)
mov
inc
jmp
push
or
xchg
xor
test
loopne
push
clc
je
jns
add
mov
push
cmps
or
fidivr
inc
inc
es
add
sub
lods
pop
cmp
mov
mov
sbb
fisub
mov
xchg
add
jle
int
sbb
jmp
cmp
and
sub
das
dec
shl
daa
mov
std
imul
fdivr
dec
sahf
fdiv
cmp
add
sbb
pop
inc
or
dec
xchg
mov
jmp
add
call
jle
mov
in
inc
inc
(bad)
sub
xlat
cmp
loopne
mov
jle
or
adc
inc
mov
imul
jne
test
rol
rcr
push
jmp
cld
pop
dec
test
inc
out
outs
xor
adc
popf
loopne
sti
jns
xor
ss
jmp
scas
cld
repnz
xchg
push
jl
(bad)
mov
gs
fwait
and
popa
mov
aam
add
push
test
mov
add
jb
lahf
cmc
dec
out
cdq
in
xor
xchg
cmp
mov
or
add
push
sahf
dec
adc
or
sti
lahf
xchg
push
ret
cwde
xor
neg
add
(bad)
and
dec
fmul
jo
cmps
xor
iret
rcl
cmp
or
xlat
sbb
dec
ja
sbb
stos
nop
pop
jg
add
mov
jl
cmp
jle
jno
ds
bound
xor
and
sub
lahf
data16
sbb
cmp
loop
pop
cld
xchg
lds
setge
sbb
mov
mov
push
out
or
in
ror
push
leave
retf
mov
in
sbb
push
imul
jae
add
xchg
test
or
in
out
and
dec
ret
push
sub
imul
xor
fisub
and
sahf
arpl
pandn
add
pusha
push
popf
fisttp
add
rcr
sub
pop
xchg
not
xor
rcr
mov
stos
adc
jmp
mov
adc
mov
out
add
in
cmp
mov
outs
ror
es
fadd
push
xchg
outs
mov
aas
dec
repnz
cs
pop
sub
test
or
call
sub
xchg
adc
mov
mov
inc
icebp
lock
gs
fs
out
push
xor
and
push
adc
lea
aas
fsub
iret
inc
mov
pushf
div
add
call
xchg
sub
inc
in
mov
shl
xor
mov
add
pop
es
(bad)
aad
inc
loop
xor
in
test
ins
sub
call
sbb
data16
test
into
jmp
mov
mov
in
xchg
push
fidivr
mov
out
xor
hlt
not
inc
xchg
in
loopne
inc
push
xchg
add
ficomp
mov
mov
or
adc
inc
stos
cmc
loopne
retf
adc
es
xor
pop
sti
adc
cmp
ds
xchg
(bad)
fdivr
fidiv
pop
push
or
jb
jo
iret
adc
mov
cld
jg
jle
pop
mov
push
loope
jno
mov
adc
jge
mov
mov
and
sub
and
es
cld
pusha
in
mov
pop
mov
xor
pop
lods
lock
mov
cmp
xchg
fbld
(bad)
retf
mov
cmps
xor
xchg
cmc
mov
xor
shl
and
mov
ja
mov
out
or
movs
mov
push
out
stc
or
sub
adc
inc
xchg
sub
stos
mov
ds
xor
lock
aas
add
stos
add
shl
adc
cli
pop
dec
sub
xchg
ins
out
jle
xor
fcos
loope
daa
fst
ja
fs
inc
(bad)
sub
jmp
out
sbb
sub
or
xchg
lods
loop
pop
sti
push
adc
push
mov
repnz
das
repz
push
pusha
sbb
or
mov
xchg
and
dec
unpckhps
sbb
mov
icebp
sar
outs
sub
test
in
mov
in
inc
dec
xchg
fild
loope
and
adc
fbld
push
or
push
in
jp
push
xchg
and
pop
and
ja
(bad)
sub
mov
(bad)
jns
sahf
push
push
pushf
and
adc
pop
inc
gs
xor
pop
std
push
inc
sbb
fisub
and
aaa
jge
xchg
iret
pushf
xor
push
popf
shl
int3
ins
and
out
dec
vshufpd
dec
jnp
movs
dec
mov
xchg
xor
sbb
nop
mov
je
dec
aas
loopne
in
cs
cmp
adc
cmp
gs
movs
stos
add
sbb
push
push
jg
adc
sahf
fimul
xchg
arpl
call
push
cmp
test
cmp
hlt
les
rol
std
test
push
xor
addr16
or
imul
jmp
loope
xchg
enter
rcr
push
push
sbb
cli
mov
xchg
cmps
call
adc
and
pop
dec
push
dec
dec
pop
mov
cld
push
or
lock
add
mov
scas
test
cdq
xor
jmp
jno
mov
jns
add
pop
inc
sbb
and
xlat
rcr
test
outs
call
outs
call
and
rcl
dec
and
xor
aaa
pop
icebp
pusha
xor
add
fisttp
xor
daa
sub
inc
pusha
mov
mov
icebp
imul
iret
data16
fsubr
ret
(bad)
ins
in
movs
push
push
rcr
sub
loop
dec
mov
movs
and
outs
sub
mov
pop
jns
pop
or
fimul
cmp
repz
jmp
test
mov
or
out
stos
rol
sti
rcr
and
lds
sti
jecxz
sbb
sbb
outs
xchg
lods
dec
fs
mov
sbb
loopne
mov
ja
int
add
lahf
add
retf
fadd
idiv
pop
mov
test
rcr
jb
sahf
(bad)
fwait
push
scas
stos
cmps
movs
pop
add
jbe
sbb
repnz
daa
adc
sub
or
adc
ins
xor
push
sub
jmp
cwde
test
cmp
inc
(bad)
in
push
inc
outs
xchg
or
daa
dec
in
cmp
mov
(bad)
js
sbb
out
(bad)
xchg
jle
sbb
cmp
sahf
jno
leave
je
or
daa
adc
out
jbe
mov
aam
leave
mov
popa
mov
das
scas
cmp
mov
and
repz
sahf
mov
(bad)
sbb
stos
imul
sbb
inc
jns
fwait
push
and
div
out
cmp
mov
(bad)
dec
xor
call
fbld
or
mov
arpl
test
add
aam
into
lods
adc
stos
xlat
movs
and
dec
push
icebp
out
mov
sbb
(bad)
popa
inc
lahf
not
mov
fmul
test
(bad)
xor
mov
push
lock
and
or
je
and
cmp
test
psubusw
icebp
inc
les
addr16
stc
and
ins
inc
scas
lods
cdq
pop
call
cmc
lds
test
outs
in
xor
mov
sbb
icebp
add
push
sub
inc
and
jbe
cmp
lds
xchg
mov
paddd
add
fucomi
sub
add
cmc
dec
cmps
sti
mov
(bad)
mov
inc
outs
xchg
stos
inc
ja
data16
(bad)
add
pushf
aad
jl
shr
(bad)
call
mov
jb
mov
pop
add
bswap
mov
popa
div
nop
nop
inc
cs
mov
pop
push
jae
outs
into
data16
arpl
xchg
fisttp
jbe
lock
pop
outs
dec
and
sub
sub
stos
xor
cmp
adc
cwde
add
dec
mov
push
(bad)
sbb
pusha
pop
xchg
xchg
adc
add
cmp
repnz
sub
jp
pusha
dec
(bad)
fcmovnb
pop
jb
sbb
out
lods
mov
ds
mov
and
clc
push
mov
aaa
jb
(bad)
gs
mul
adc
mov
stos
mov
stos
adc
xor
push
pop
icebp
add
mov
mov
loop
inc
ins
lahf
shl
jno
mov
adc
retf
clc
adc
(bad)
mov
rcl
jno
out
mov
sub
jmp
cmp
stc
int
fiadd
fnstsw
pop
cmps
mov
jge
or
sbb
fs
sub
xchg
test
pushf
mov
fsub
(bad)
hlt
cs
sub
aam
sbb
(bad)
(bad)
mov
xor
jmp
jle
(bad)
clc
fcomp
inc
and
(bad)
stos
jmp
pop
push
(bad)
retf
pop
in
inc
push
ja
in
push
jle
clc
int3
jbe
ins
in
in
adc
sahf
adc
mov
pop
cld
in
fldenv
call
test
imul
add
call
xor
sti
fcom
cmps
ins
fcomp
les
mov
loope
(bad)
push
call
xchg
cmps
mov
xor
ja
aaa
push
sub
jns
inc
int3
neg
fsubr
adc
movs
push
lods
mov
popf
inc
sbb
add
ins
dec
pop
push
aas
ja
pushf
dec
int
cwde
js
xchg
cmps
int3
sbb
push
fcom
sahf
mov
inc
add
cmp
aam
xchg
mov
xlat
push
sti
call
pop
mov
jg
xchg
push
cmps
dec
ret
dec
test
cli
ror
xor
mov
inc
inc
xchg
xchg
pop
mov
sub
lock
mov
daa
dec
test
das
popa
mov
mov
imul
xlat
test
fidiv
or
push
ret
cmp
sbb
jecxz
movs
pop
xchg
and
stos
mov
(bad)
adc
retf
enter
call
imul
or
jbe
xor
ja
jg
aad
in
popa
fwait
aaa
inc
adc
mov
or
and
and
sbb
movs
pop
js
mov
test
mov
add
frstor
mov
retf
aas
mov
mov
stos
fdiv
dec
bound
adc
fstp
in
addr16
push
mov
and
call
retf
repnz
adc
mov
psadbw
jmp
int3
ret
jae
inc
stc
pop
push
pop
jmp
dec
pop
push
adc
repnz
bound
bound
dec
call
data16
add
add
and
repz
mov
and
(bad)
in
dec
popa
jle
mov
in
mov
(bad)
cmp
cmps
and
pop
mul
call
xor
or
scas
ret
sub
xchg
call
cmc
xchg
dec
mov
mov
arpl
out
iret
and
jnp
xor
pushw
push
rol
jnp
push
shr
push
inc
outs
push
out
sbb
inc
icebp
std
pop
inc
xchg
out
cmp
cmps
sbb
mov
and
test
mov
jb
push
or
jno
cmp
mov
jl
mov
cmp
mov
arpl
adc
sub
mov
sub
jmp
lds
pop
fstp
fcomip
mov
pop
and
push
loopne
mov
mov
cli
movs
mov
sbb
push
out
retf
cmc
shr
fbstp
xor
cmp
mov
adc
xchg
push
and
cdq
jle
enter
rcl
sti
add
push
add
loop
sbb
das
cmc
push
mov
add
lahf
div
(bad)
sti
jmp
enter
xchg
xor
jno
jg
int
and
mov
sub
(bad)
lahf
loopne
test
mov
xchg
pop
mov
movs
(bad)
xchg
inc
pop
mov
out
or
imul
mov
dec
in
push
push
clc
loopne
test
pop
mov
xor
mov
add
scas
push
sbb
ja
sub
test
inc
sub
stos
loop
ss
sbb
call
sub
sbb
sub
mov
push
std
jl
cmp
pop
dec
add
add
xor
dec
(bad)
in
out
sbb
pop
mov
enter
out
loopne
cmp
adc
ja
movs
adc
(bad)
jo
jmp
fisttp
inc
mov
es
push
std
xchg
or
cdq
inc
add
(bad)
std
dec
xor
xchg
lock
sub
aaa
cmp
or
mov
(bad)
(bad)
mov
mov
add
mov
push
jne
js
push
nop
imul
int
jmp
int3
in
pop
xor
mov
push
or
mov
(bad)
in
jl
cmc
clc
xor
push
cmps
(bad)
cwde
inc
(bad)
in
stos
(bad)
xchg
lock
xchg
cwde
dec
push
bound
not
lock
rcpps
dec
stos
xor
fstp
es
jmp
int
movs
mov
jl
nop
out
(bad)
pop
inc
or
push
pop
mov
sub
into
pusha
mov
or
cmp
js
loope
in
adc
(bad)
(bad)
mov
ins
xchg
jae
cdq
lods
std
adc
mov
xchg
inc
scas
sub
xchg
pop
sub
lods
adc
cmp
(bad)
cli
gs
jge
push
jbe
push
fcomp
mov
scas
test
sub
mov
sub
fwait
mov
imul
mov
out
dec
dec
in
aad
outs
outs
dec
test
adc
stc
movs
mul
cmp
lds
adc
fmul
bound
and
in
push
cmps
lds
je
(bad)
adc
iret
mov
ss
mov
dec
sbb
and
or
(bad)
cmps
xchg
cmp
je
lods
(bad)
adc
cmc
popa
dec
push
push
sub
(bad)
sub
push
ror
adc
add
push
push
fisub
pop
jmp
aaa
call
or
push
cwde
popa
into
sbb
sub
movs
add
inc
push
mov
shl
lea
dec
and
cmp
das
(bad)
sbb
add
sbb
or
ds
jbe
in
int3
cmp
inc
jp
fwait
push
dec
pop
not
sar
stos
mov
dec
test
cmc
bound
stc
stos
cli
enter
or
mov
dec
push
jnp
movs
cmc
jae
pop
call
ss
push
push
loop
out
cmp
aas
adc
xor
fnstenv
bound
mov
xchg
dec
popa
popa
sub
pop
(bad)
leave
pop
mov
or
add
addr16
shl
lods
sbb
shr
mov
xor
adc
xlat
jecxz
push
cs
pop
mov
fsub
ror
mov
sub
cmp
and
hlt
or
sahf
(bad)
pop
add
retf
mov
int3
lods
and
sahf
mov
les
xchg
mov
jg
mov
dec
repnz
or
mov
mov
push
sbb
pop
mov
fidiv
mov
xchg
sub
push
repnz
cli
mov
daa
and
pop
dec
pushf
das
rcr
xchg
mov
jge
in
mov
or
add
sbb
jbe
dec
in
lods
push
mov
neg
jo
jmp
sbb
push
mov
(bad)
mov
cmp
in
iret
popf
loop
fdivr
test
std
leave
das
(bad)
sar
int3
test
jb
sbb
pop
aas
movs
call
sub
aaa
shl
xchg
xchg
push
lock
jo
(bad)
sbb
les
mov
mov
mov
cwde
mov
xor
data16
jo
jle
pop
adc
sub
data16
cmps
inc
std
neg
jmp
adc
ds
mov
inc
lods
or
add
pop
push
test
mov
fwait
cmp
ins
push
add
jp
cs
mov
mov
icebp
cdq
loop
mov
xchg
xor
jns
call
mov
gs
leave
out
adc
jo
jo
sub
movs
repz
xor
test
into
fwait
repz
mov
cmps
or
outs
pushf
dec
mov
or
fisttp
jecxz
xchg
test
and
sbb
sub
fidivr
push
hlt
(bad)
aam
je
add
mov
bswap
cmp
lods
fwait
sub
je
enter
icebp
in
nop
jle
lods
pop
xlat
lods
pop
fnop
xchg
xor
push
inc
jbe
dec
and
jmp
sub
push
scas
mov
int
test
jbe
and
xchg
test
aad
cmp
movs
je
or
ds
cmp
aad
xchg
xchg
adc
(bad)
std
lods
sti
ins
int3
and
mov
repz
xchg
push
jmp
xchg
mov
popw
cs
jl
pop
xchg
cwde
mov
pop
mov
sub
(bad)
cmp
test
call
or
stos
mov
scas
ret
test
popf
xchg
test
not
xor
pusha
hlt
inc
daa
es
mov
fdiv
and
ins
shl
cdq
pop
jbe
shl
mov
popf
mov
dec
pop
lock
push
ds
cwde
mov
movs
jge
pop
(bad)
je
add
pop
fwait
add
inc
cwde
xor
cmps
repz
(bad)
mov
mov
or
mov
dec
xor
and
push
xlat
in
fisubr
(bad)
or
imul
mov
xchg
ins
ret
xchg
cmp
loop
dec
push
sub
call
or
push
mov
out
push
pop
push
dec
fisttp
les
ret
dec
ret
jp
repz
mov
mov
not
jo
js
popa
loop
loop
mov
stos
call
mov
push
mov
retf
add
loopne
mov
enter
inc
xchg
jl
push
xchg
pop
jmp
inc
stos
jle
jmp
jne
loopne
fadd
in
(bad)
cwde
mov
mov
test
mov
mov
rol
aam
mov
push
push
push
hlt
aaa
repnz
outs
mov
out
and
jnp
sti
imul
jle
push
in
adc
sbb
je
push
(bad)
push
push
cmps
push
outs
push
inc
cli
mov
xchg
mov
enter
fdiv
js
sub
popf
call
in
cmps
push
(bad)
mov
xor
std
jge
mov
add
fs
js
inc
xchg
mov
and
pop
jl
xchg
stc
call
sub
xchg
(bad)
test
jmp
jo
pop
movs
sti
test
fdivr
lock
retf
fidivr
xchg
inc
mov
add
repnz
mov
adc
cmp
aam
jmp
pop
(bad)
xlat
or
stc
and
xlat
pushf
push
fsub
and
imul
and
sahf
sub
shl
xor
ins
mov
test
adc
hlt
sbb
jne
int
shl
dec
cmps
pop
and
sahf
jg
xor
add
test
popa
pushf
add
jp
test
pop
add
lods
in
and
push
clc
data16
jmp
(bad)
aas
and
ret
lods
test
xchg
pop
imul
jb
call
ror
dec
(bad)
rcr
and
pop
sub
outs
fild
or
add
fldln2
pop
(bad)
jle
and
test
outs
or
cmp
popa
data16
xchg
adc
dec
and
popa
adc
jg
xor
sbb
inc
inc
inc
add
jecxz
inc
or
fwait
bound
sbb
mov
mov
ds
mov
je
pop
push
xlat
pop
gs
pop
or
cmp
mov
mov
or
sar
add
xchg
xchg
int3
shl
adc
inc
or
test
push
dec
pop
add
ja
sub
repz
ret
(bad)
int3
outs
sahf
leave
or
sbb
(bad)
adc
test
mov
dec
mov
in
mov
leave
test
and
and
out
mov
adc
repz
cmp
xor
add
add
push
mov
out
cmp
jmp
mov
fdiv
pop
cmp
int3
cmp
mov
mov
or
fsub
sub
sub
mov
dec
jno
(bad)
sbb
popa
jl
push
or
cld
rcr
xlat
mov
cmp
xor
inc
es
das
imul
test
push
adc
jecxz
test
push
jp
je
and
mov
cmc
xchg
inc
mov
push
xchg
das
xor
mov
and
xchg
pop
and
mov
mov
add
xchg
cld
or
sub
sahf
in
addr16
mov
repnz
and
bound
jp
jne
lds
sbb
les
mov
and
icebp
push
aam
dec
lahf
jl
xchg
call
inc
popf
bswap
popf
ins
and
cmp
imul
sahf
mov
push
ins
test
retf
xchg
jle
mov
xchg
and
aas
dec
mov
xlat
inc
pusha
and
jne
int
jnp
xchg
xchg
cmc
inc
mov
push
pop
mov
repz
jbe
fsubr
scas
outs
mov
and
loopne
jae
and
imul
xor
(bad)
not
std
dec
push
mov
cwde
outs
pop
fistp
mov
jns
pop
iret
fisubr
push
loop
mov
pop
dec
in
mov
cmp
repnz
or
and
lods
fstp
rol
in
push
es
and
mov
xor
or
xchg
mov
test
jbe
cmp
jmp
add
mov
lea
shr
mov
cmp
leave
stos
sub
pop
mov
cmp
cs
adc
aas
and
jnp
iret
xor
xor
cmp
mov
lea
leave
add
data16
imul
adc
movs
arpl
idiv
retf
dec
scas
je
shl
retf
cmp
and
xchg
cdq
fisttp
repz
bound
add
repnz
je
push
push
push
out
adc
jno
cli
sahf
adc
xchg
cld
ins
(bad)
pop
mov
push
xchg
pop
push
vpacksswb
fdivrp
push
imul
iret
out
mov
xchg
push
fcomp
popa
mov
mov
out
fnstcw
pop
not
(bad)
repnz
xchg
jb
mov
mov
lods
jns
(bad)
adc
mov
mov
loopne
inc
cmps
dec
and
add
retf
mov
call
xchg
ror
arpl
add
fisub
jb
hlt
out
xor
jp
add
add
repnz
add
sub
lods
mov
and
or
xor
dec
sti
add
mov
(bad)
jmp
arpl
push
cdq
push
es
pop
push
sub
sbb
inc
dec
mov
push
mov
std
jb
pop
jo
and
ss
jge
fisub
xchg
xor
mov
xchg
(bad)
jmp
popa
cs
dec
xor
sbb
push
or
jp
in
dec
sub
xlat
pop
cmps
jecxz
pop
mov
inc
fwait
(bad)
sahf
enter
loopne
daa
mov
add
inc
div
icebp
push
xor
fmul
pop
aam
jb
dec
cmp
mov
(bad)
cdq
int3
xlat
jmp
test
dec
fdivr
jae
repz
pop
gs
push
stc
push
aam
jg
(bad)
pop
addr16
or
jecxz
add
icebp
cmp
fstp
add
jns
(bad)
mov
dec
xchg
fimul
pop
sub
mov
sbb
cs
jmp
scas
inc
in
repnz
mov
pop
fcom
push
mov
je
popa
mov
fstp
push
stos
adc
out
push
and
repnz
retf
sahf
gs
(bad)
cmps
mov
retf
jp
pop
loopne
(bad)
jecxz
xchg
test
jecxz
aad
cmp
dec
imul
mov
jecxz
loopne
dec
inc
mov
faddp
xchg
adc
out
cdq
lea
pusha
retf
xchg
je
sar
sbb
mov
imul
iret
inc
rcl
and
(bad)
xlat
adc
lds
ret
mov
mov
popf
push
jns
push
cdq
int3
ss
or
js
mov
bound
xchg
dec
and
inc
xchg
clc
sub
cmp
and
xchg
add
adc
mov
scas
(bad)
jae
jo
xor
jl
push
stos
test
fwait
xchg
inc
push
cmp
sbb
jecxz
push
inc
sbb
sbb
push
and
out
cdq
lock
out
xor
pop
call
sub
shr
sub
popf
dec
mov
ja
fwait
es
(bad)
repz
pushf
psrlw
cmp
popa
mov
dec
cmp
jp
int3
pop
not
lock
cwde
push
inc
sbb
sbb
mov
div
out
pop
add
push
jl
add
push
fiadd
shr
jne
push
xchg
repz
push
sub
(bad)
ins
add
pop
iret
xchg
pusha
mov
mov
mov
cmp
ret
in
jne
test
mul
xor
mov
ins
mov
pusha
ficomp
cmp
fs
sub
cli
out
inc
add
jo
ret
(bad)
ins
and
faddp
pop
push
jne
enter
imul
add
cli
lahf
sbb
fld
add
jecxz
dec
adc
xchg
call
adc
pusha
lea
bound
mov
sbb
push
pop
add
arpl
iret
out
loope
jl
fdiv
(bad)
fld
sub
adc
repz
mov
fdivr
add
iret
das
icebp
add
xor
adc
inc
(bad)
cmp
inc
pop
pusha
and
sub
je
mov
pop
mov
or
imul
pop
scas
xchg
(bad)
repnz
add
ss
ja
dec
arpl
fsubp
jge
cld
mov
stc
inc
push
loopne
ss
repnz
ins
out
repnz
mov
jge
pushf
mov
imul
dec
pushf
shl
or
test
aaa
pop
out
dec
movs
and
fiadd
shr
cmp
cmp
mov
xchg
pop
or
repz
shr
mov
sub
out
mov
lods
lea
fiadd
int
test
push
std
data16
push
not
cmp
ins
sbb
or
push
test
popa
mov
adc
stos
jno
sub
sbb
ucomiss
ficomp
jae
les
add
pop
inc
xor
xchg
dec
xchg
les
stos
add
(bad)
adc
push
imul
scas
xchg
xlat
adc
push
mov
mov
das
jg
mov
inc
mov
push
mov
add
xchg
shr
xor
cs
adc
cmp
xor
push
mov
lods
and
push
jecxz
xchg
popa
adc
mov
in
sbb
in
pushf
xchg
mov
push
fwait
imul
mov
fisubr
pop
lahf
and
xchg
xchg
push
xor
and
mov
inc
retf
inc
leave
dec
and
and
retf
jnp
sbb
push
ffree
mov
ins
pop
cmps
add
hlt
stc
cwde
clc
dec
xchg
mov
pusha
sub
test
mov
sub
inc
in
cmp
add
daa
(bad)
mov
jle
dec
scas
call
in
pop
pop
and
es
out
or
xor
add
or
cmp
arpl
or
push
mov
lahf
mov
adc
or
xchg
(bad)
push
jnp
or
dec
lds
out
out
mov
fdiv
ins
jg
jecxz
adc
push
inc
cmp
fmulp
stos
int3
daa
push
retf
xchg
rol
jnp
jns
cmp
xchg
xchg
inc
fild
xchg
jno
add
shl
int3
ds
add
call
inc
enter
outs
aam
mov
test
or
cmps
add
mov
in
sbb
mov
inc
xor
or
sbb
aas
push
jecxz
nop
mov
movs
clc
pop
iret
aaa
jmp
ror
pop
imul
cld
call
dec
sbb
(bad)
pop
fisubr
ins
data16
nop
das
pop
call
imul
or
aas
call
cmp
and
and
jmp
jns
pop
sub
jmp
ins
dec
mov
test
inc
pusha
shl
cmp
jb
sub
jmp
int3
inc
cwde
and
add
fsubrp
aas
xchg
in
in
cmp
cmp
fbstp
retf
stc
sub
jmp
pop
push
or
mov
cmp
dec
xor
iret
push
dec
lock
jne
inc
cmc
xlat
jmp
hlt
loope
jne
jle
ja
and
sub
nop
fwait
aas
sahf
cmps
fnstcw
outs
jecxz
and
and
arpl
dec
test
mov
ret
bound
cmps
ret
es
sbb
mov
and
cmps
xchg
ror
pop
imul
mov
cmc
xchg
push
sub
inc
jne
fadd
jg
and
js
fs
rcr
add
lods
enter
inc
jae
mov
push
or
or
and
repnz
mov
push
(bad)
scas
test
jne
pop
push
push
fs
adc
imul
sub
dec
xchg
push
daa
add
loope
push
mov
push
pop
cmp
pusha
mov
lods
inc
adc
add
mov
and
cmp
mov
sub
repnz
push
jg
mov
mov
into
daa
scas
pushf
dec
jmp
jb
inc
test
outs
cmps
aad
mov
lods
jns
add
pop
fidivr
ins
sub
fistp
or
mov
adc
sbb
popf
jmp
xchg
pop
in
sbb
push
push
gs
sub
add
jp
push
inc
out
lock
push
xchg
inc
jo
lods
(bad)
outs
mov
out
pop
mov
mov
test
(bad)
or
push
mov
adc
call
arpl
(bad)
in
dec
ret
loop
xlat
inc
xchg
test
sbb
fld
mov
lods
popf
dec
cmp
fisubr
add
int
sti
loop
sub
xor
stos
dec
push
push
ror
dec
loope
pop
adc
mov
hlt
fdiv
mov
inc
dec
nop
call
in
pop
add
dec
ficom
push
push
(bad)
or
push
jae
mov
xchg
mov
aas
or
fdiv
sub
cmps
in
leave
jns
push
push
shl
gs
shufps
cmp
jne
dec
adc
test
jns
rol
popf
fcmovnu
call
ss
mov
lds
fmul
icebp
or
aam
jmp
or
xchg
cdq
push
cmp
sbb
push
out
cmp
mov
cmp
cwde
movs
push
dec
test
xchg
xor
ins
pop
lock
dec
int
push
push
xchg
xor
ja
loop
dec
repz
js
imul
push
outs
fiadd
sbb
mov
js
(bad)
(bad)
xchg
mov
cli
lods
sub
jbe
jg
mov
fs
or
fnstenv
cmp
pusha
into
repnz
jmp
sahf
xchg
ds
adc
mov
(bad)
out
dec
push
xchg
mov
pop
or
test
(bad)
cmps
and
push
adc
fld
ds
inc
sbb
in
mov
sbb
adc
push
mov
and
jo
mov
jmp
lock
test
jmp
js
retf
cmp
ja
lock
icebp
imul
and
jecxz
adc
dec
pop
loopne
adc
push
add
fisubr
shr
xlat
popa
ins
call
push
mov
mov
adc
jl
lahf
shl
inc
adc
not
jnp
mov
xchg
jnp
jp
add
ins
sub
xor
xchg
test
inc
or
(bad)
jno
xlat
test
mov
or
mov
repz
dec
mov
sub
cs
inc
in
sbb
xchg
mov
xor
stc
retf
cmp
rcl
mov
jae
fild
in
or
inc
sbb
in
cmp
cmp
leave
iret
outs
bound
ds
xchg
(bad)
mov
add
pop
outs
cld
fs
xor
xchg
into
mov
jb
jns
adc
push
repz
ins
jmp
pushf
fst
cmps
mov
mov
outs
add
aaa
jae
cmp
xchg
xchg
sub
std
fnsave
outs
stos
inc
or
(bad)
cmc
aaa
mov
int3
sub
cmps
fnsave
scas
xor
sbb
out
jo
outs
or
mov
in
das
add
pushf
ret
push
mov
push
mov
test
sbb
xor
xchg
dec
pop
sub
scas
pop
sub
movs
add
jmp
sti
xchg
add
call
or
xlat
in
jp
(bad)
mov
movs
push
test
fwait
jns
dec
test
dec
xchg
scas
inc
xor
mov
mov
fsub
ret
inc
mov
pop
dec
push
aas
cmc
clc
test
mov
fnsave
mov
sub
stos
das
jne
push
mov
icebp
fnsave
repnz
loop
fnsave
movs
popf
test
mov
and
push
pop
ret
push
ret
jae
jp
push
mov
je
pop
add
jb
adc
push
mov
pop
lahf
fbld
sbb
fidivr
shr
retf
int3
in
repz
push
dec
cmp
or
dec
enter
and
cmp
fist
cmp
in
add
mov
(bad)
cmp
push
jmp
leave
repz
in
push
fiadd
lock
ins
fs
in
pop
add
and
and
jae
fbld
mov
and
repz
mov
jecxz
outs
addr16
or
sub
dec
loopne
call
xchg
(bad)
popf
mov
add
jb
into
mov
add
xchg
shl
mov
xchg
outs
loopne
lods
fsub
inc
sub
mov
sbb
xchg
pop
aam
dec
adc
into
hlt
mov
mov
add
and
mov
sub
(bad)
or
outs
addr16
sti
sti
fsub
push
mov
(bad)
sbb
imul
ds
les
sbb
mov
fcomp
jle
out
ins
or
in
and
pop
fsub
xor
sbb
jecxz
jbe
adc
shl
inc
fsub
nop
loopne
repz
out
jmp
or
cdq
mov
xor
dec
scas
ins
imul
mov
neg
data16
pop
mov
aad
std
ja
out
(bad)
and
stos
call
xor
test
jb
add
call
fdiv
mov
jg
neg
add
int
pusha
push
adc
push
loope
or
jbe
push
pop
das
sub
inc
cmp
fist
adc
push
pop
push
pop
pusha
sub
mov
mov
jno
push
jge
sub
mov
fdivr
nop
stc
das
add
cld
pop
cld
xor
sub
in
popf
xchg
js
iret
push
out
mov
mov
inc
xor
sub
ins
jmp
lods
adc
repnz
pop
cmps
(bad)
jmp
push
imul
cs
xor
ins
fiadd
mov
add
jp
mov
fisub
jne
sub
xchg
lea
lea
mov
xchg
xchg
mov
adc
mov
push
push
dec
inc
lock
mov
retf
imul
sar
(bad)
xacquire
inc
jg
fdivrp
or
cmp
pop
xchg
jg
pop
ss
fs
pop
(bad)
push
sahf
xchg
xor
or
loopne
mov
sahf
adc
mov
pop
(bad)
movs
mov
sub
pushf
imul
or
aam
loopne
or
xor
cdq
in
out
stos
es
jge
out
mov
leave
and
inc
orps
sar
mov
mov
nop
xchg
hlt
sbb
pop
cmp
adc
shr
xor
fadd
adc
popf
lahf
jp
leave
cmc
cld
stos
repz
add
adc
in
dec
adc
inc
xchg
dec
repz
add
mov
and
int
mov
jae
sbb
sbb
jbe
inc
inc
mov
sbb
in
rcr
mov
inc
sub
cmp
jecxz
jmp
add
ins
aaa
fiadd
retf
jmp
pop
sar
or
add
push
mov
or
push
outs
mov
dec
jne
push
cmp
and
mov
sbb
pop
mov
lahf
das
cli
xchg
cld
push
outs
mov
icebp
je
fild
ss
in
lods
push
pop
inc
jo
out
adc
push
(bad)
mov
add
gs
in
xor
cmp
aam
cmc
sbb
cmc
xchg
std
aaa
aas
(bad)
push
adc
xor
pop
pop
cli
cli
(bad)
jbe
les
dec
stc
xor
enter
mov
shl
imul
adc
adc
mov
test
xchg
sub
inc
and
push
xchg
aad
xchg
mov
pop
push
xabort
in
(bad)
out
je
scas
fwait
push
call
mov
rol
mov
xchg
or
out
shr
mov
bound
or
fistp
mov
push
loopne
pushf
jo
push
mov
out
mov
fisttp
push
enter
or
sbb
fs
jb
add
(bad)
in
cdq
ret
out
and
mov
jne
inc
push
(bad)
std
add
dec
ret
pop
rcr
inc
add
aaa
test
dec
mov
jecxz
mov
popf
lods
push
loopne
cdq
and
hlt
push
mov
shl
(bad)
mov
jne
mov
xor
outs
test
mov
and
cmp
cdq
fucomi
scas
xchg
mov
sub
mov
and
jno
test
jae
push
hlt
xchg
jnp
dec
mov
xchg
test
pop
sub
int
adc
pop
int3
inc
shl
(bad)
push
xchg
dec
enter
jge
jns
js
mov
cmp
and
adc
push
imul
movntps
sbb
or
cmc
sub
cmp
cmp
or
or
test
(bad)
mov
inc
dec
cmp
jbe
pop
add
ret
sub
in
out
ret
outs
push
pop
sub
movs
adc
jne
scas
mov
leave
sahf
std
adc
jo
rcl
test
cmp
add
add
adc
scas
imul
frstpm(287
mov
inc
outs
push
clc
jae
add
cmps
loop
mov
xor
cli
inc
(bad)
hlt
in
push
jo
leave
dec
scas
sbb
adc
jle
cmp
leave
adc
into
xchg
call
popf
popa
and
ins
mov
call
in
in
xor
push
jge
aad
jnp
xor
mov
sti
mov
sahf
popf
dec
or
pop
jbe
mov
leave
mov
(bad)
scas
sar
xor
xchg
jbe
xor
adc
pop
dec
sbb
int
movs
mov
(bad)
jo
xor
shr
fdivr
clc
dec
ret
cmp
xor
out
movs
icebp
fwait
in
sub
push
adc
dec
nop
test
je
(bad)
cmp
adc
imul
jnp
stos
sbb
pop
xchg
push
add
ret
add
fadd
sub
mov
cmp
scas
or
ret
or
mov
adc
aam
and
in
mov
stos
mov
mov
outs
seta
adc
test
imul
xor
enter
xchg
or
movs
fdiv
ins
adc
js
pushf
sbb
out
add
cwde
lods
sbb
out
daa
arpl
mov
jge
ret
loope
div
or
lods
ret
jae
(bad)
sub
mov
sbb
add
sbb
sub
(bad)
mov
ins
jns
push
out
xchg
jne
xchg
sub
in
sub
dec
daa
mov
bound
lea
aad
mov
and
push
mov
in
jl
xor
aam
jbe
enter
push
fwait
sub
push
out
mov
or
scas
cmp
pop
sub
stc
xchg
nop
pop
mov
mov
xabort
cld
leave
cmp
mov
push
ins
mov
mov
sub
xchg
outs
push
lods
rol
push
(bad)
arpl
push
or
mov
lds
adc
or
popf
call
mov
lods
pop
lahf
rcl
pop
mov
dec
xor
sbb
push
jne
mov
cmp
aaa
push
(bad)
mov
cwde
pop
aam
dec
repz
fmul
out
fcomp
jmp
cmps
inc
ja
adc
cmp
in
in
(bad)
jbe
icebp
cmc
rcr
sbb
and
sbb
repnz
xchg
std
cmps
test
adc
bound
and
sbb
mov
dec
sar
ins
mov
test
pop
pusha
mov
pop
lds
xchg
xor
mov
loop
mov
icebp
jmp
call
pop
add
mov
pusha
pop
outs
jg
shl
push
test
sbb
add
cmp
inc
sbb
jmp
inc
xor
jnp
ss
mov
test
int
push
arpl
movs
mov
sar
adc
xchg
inc
or
popa
push
mov
cli
loop
rcl
aaa
xchg
shr
mov
ins
call
adc
gs
cmp
sbb
adc
jp
mov
ret
push
xchg
fidivr
call
fcomp
ins
dec
pushf
push
xor
sbb
idiv
rol
inc
jle
aam
mov
movs
jg
xchg
sub
xchg
test
cmp
xchg
sub
add
mov
jge
pop
xor
cli
fcomp
call
scas
scas
sahf
test
(bad)
out
adc
pop
dec
xor
out
and
int
lods
hlt
sbb
pop
ja
in
das
dec
cld
fdivr
nop
loope
push
cmc
mov
cmp
aas
ret
outs
cmp
in
cmp
stos
cld
sbb
jmp
push
hlt
push
std
add
sar
and
cmp
arpl
jge
jecxz
sahf
(bad)
jp
inc
xor
or
sbb
pop
dec
push
(bad)
dec
mov
mov
mov
mov
and
pop
mov
cmc
jg
fsub
mov
mov
rol
sbb
neg
sbb
daa
xchg
ret
lock
mov
ja
and
arpl
sbb
sub
mov
fbstp
xlat
push
mov
and
sbb
xor
retf
dec
movs
outs
out
inc
retf
pop
jo
test
ja
jp
jns
pop
je
aam
sbb
mov
xor
test
pushf
js
and
jb
jmp
loop
adc
and
sti
xchg
in
jg
fwait
mov
mov
sti
popa
adc
aaa
adc
mov
mov
jecxz
inc
jbe
sbb
push
cmp
leave
push
pop
sub
and
fs
mov
retf
push
xor
loopne
fidiv
bound
push
cmp
std
jae
in
gs
xchg
mov
cmp
in
retf
xchg
push
(bad)
or
daa
jecxz
pop
(bad)
jecxz
or
cdq
les
icebp
xchg
(bad)
pop
fwait
repz
and
stos
push
push
pop
push
scas
movs
push
in
add
fld
jmp
cmp
cmp
inc
dec
xor
lds
mov
gs
fldl2t
enter
sbb
and
jbe
pop
(bad)
popf
cmp
add
or
sub
pop
jno
or
dec
xor
cmc
and
mov
push
call
int
inc
das
push
and
adc
cmp
jl
jb
repz
mov
fwait
adc
std
dec
(bad)
and
dec
jbe
xchg
mov
(bad)
shl
fist
xchg
ss
and
jne
(bad)
fisub
fdivr
or
add
or
(bad)
test
stos
mov
aam
or
hlt
add
fldcw
test
fidivr
xlat
cmp
push
pop
cmp
cmp
daa
ret
pop
cmp
and
add
jbe
cmp
pop
cs
cs
add
aad
mov
sub
(bad)
out
adc
into
dec
mul
cmp
pushf
aam
xor
int
jg
push
pop
pop
mov
xchg
mov
adc
adc
jo
jno
outs
sub
jb
jg
mov
es
jne
mov
and
dec
shr
ficom
outs
addr16
sub
call
and
daa
jnp
test
arpl
xchg
sbb
call
outs
or
push
mov
push
ins
jecxz
inc
push
xchg
xlat
inc
mov
xchg
push
jle
pop
adc
adc
sbb
pushf
rol
fmul
adc
jge
jp
pop
gs
mov
jle
lock
mov
adc
dec
add
push
outs
sbb
mov
mov
and
sbb
and
out
and
pusha
test
jae
jne
mov
ror
pop
movs
call
jl
cmp
push
fsub
mov
dec
inc
ins
dec
leave
push
out
mov
pop
sbb
loope
icebp
push
in
retf
mov
imul
popa
icebp
lods
mov
aas
jmp
pop
retf
or
xor
push
cmps
xor
and
sbb
dec
push
cs
popa
jmp
jp
cdq
scas
jns
test
mov
adc
mov
mov
add
jae
lock
mov
dec
nop
jne
rcl
(bad)
push
std
xchg
dec
test
cmps
xor
imul
mov
iret
daa
xchg
add
shr
cmc
int3
and
mov
sub
lods
(bad)
setno
push
ds
mov
push
daa
data16
xor
retf
dec
mov
in
ss
and
iret
data16
test
lds
pop
sbb
or
pop
scas
mov
add
or
cdq
jbe
push
mov
jo
fcom
outs
jge
dec
movs
imul
xlat
push
jnp
stos
arpl
es
xchg
xchg
in
or
add
and
cld
sub
push
loope
(bad)
(bad)
aas
fwait
jne
jo
adc
or
xor
mov
test
sti
add
xlat
inc
loopne
mov
pop
xor
adc
mov
test
repnz
mov
mov
jmp
jl
mov
(bad)
sub
je
movs
call
out
loopne
mov
bound
clc
inc
leave
(bad)
pop
retf
cwde
pop
inc
ret
std
and
int
adc
xchg
push
gs
iret
cwde
pusha
inc
sub
test
push
xchg
out
or
mov
imul
or
lahf
enter
out
inc
and
xchg
push
dec
jbe
out
mov
mov
test
outs
cli
dec
lds
test
push
cmp
fldenv
or
push
push
arpl
popa
es
cli
or
int
pushf
imul
(bad)
lods
mov
xchg
or
iret
sbb
pop
fst
dec
mov
enter
imul
pop
jns
and
push
rol
ror
sahf
xchg
inc
mov
mov
aam
cdq
mov
cmps
jne
pop
lods
inc
fisttp
mov
test
ins
int3
sahf
push
mov
in
shl
movs
pop
mov
es
shl
xchg
mov
inc
xchg
daa
and
in
push
adc
repnz
out
xchg
loope
dec
call
cmp
pusha
sar
or
dec
sub
add
in
mov
xor
aaa
xchg
out
ret
xchg
fsub
mov
pop
xor
dec
jge
xor
cld
sub
and
xchg
out
loope
sub
or
mov
stos
fwait
cli
jb
dec
(bad)
and
pushf
sbb
scas
repz
sbb
(bad)
out
push
inc
mov
fnstcw
js
jne
enter
sub
xchg
imul
lock
cdq
lods
sti
add
adc
add
lea
push
mul
or
fild
adc
(bad)
pop
or
sbb
test
mov
mov
call
cmp
movs
retf
cmc
sbb
push
jbe
pop
jmp
inc
js
das
imul
or
jbe
jbe
pop
jle
cmp
cmp
shr
mov
outs
loopne
(bad)
popa
cwde
in
ds
jae
fadd
(bad)
ds
or
inc
rol
retf
jmp
(bad)
fistp
or
push
mov
xchg
dec
fcomp
sub
lahf
div
loopne
stos
out
push
jmp
aaa
push
pop
xchg
pop
repnz
lods
aas
mov
inc
adc
sbb
pop
(bad)
mov
dec
mov
test
dec
cmp
pusha
retf
mov
pop
push
and
je
dec
clc
xor
out
mov
mov
xor
or
and
arpl
or
mov
addr16
fs
or
popf
jnp
cmp
(bad)
cmc
mov
jo
xor
or
mov
mov
bound
jae
shl
jmp
aas
mov
inc
sub
inc
pop
pusha
push
jns
jno
xor
add
inc
jno
icebp
fdiv
daa
into
aas
fs
pop
int
imul
sbb
rcr
hlt
xor
mov
pop
or
mov
int
retf
and
sbb
jp
push
fsubp
jae
not
sbb
xchg
out
mov
cli
ss
es
push
push
push
mov
mov
outs
dec
daa
jne
repnz
in
pop
ror
iret
scas
and
dec
data16
jo
xchg
in
jns
push
push
xchg
mov
pop
loop
push
pushf
hlt
jmp
adc
addr16
scas
gs
(bad)
clc
imul
das
mov
push
xchg
mov
imul
pop
dec
cdq
sbb
mov
iret
ds
pushf
pop
jmp
nop
(bad)
out
xchg
out
scas
repz
out
cmps
inc
cmp
mov
jo
cmp
xchg
rcl
sbb
fst
and
out
int3
inc
fstp
(bad)
add
or
add
loope
test
or
adc
mov
bound
into
cmp
pop
pop
hlt
xchg
jnp
leave
cld
jecxz
cmc
push
daa
pop
ins
sti
loopne
fdivr
sbb
lahf
mov
mov
fwait
xchg
add
jne
je
fmul
in
cmps
lock
cmp
ins
sbb
fcomp
iret
dec
ins
sub
adc
mov
or
adc
sub
push
addr16
ss
push
jne
ja
lahf
xor
ss
sbb
rol
js
scas
inc
into
dec
cmp
mov
pusha
adc
retf
adc
xlat
xor
mov
iret
sbb
test
js
adc
adc
mov
repz
sbb
loope
fiadd
fsub
lds
push
lock
pop
fwait
ja
mov
sti
cld
sub
or
mov
loope
mul
popf
cmp
test
dec
lahf
dec
jo
jae
mul
xlat
aas
js
cmps
scas
xchg
dec
mov
pop
push
or
stos
sub
pop
das
(bad)
mov
bound
xchg
adc
jg
mov
idiv
or
push
fdivrp
movs
std
ret
mov
aad
out
retf
out
int3
jge
cwde
repz
rcl
jg
mov
mov
les
mov
jl
(bad)
repz
hlt
xlat
andps
and
cli
stos
push
mov
mov
out
add
cdq
push
mov
loope
mov
mul
js
add
gs
sub
jecxz
dec
xchg
gs
jg
push
int3
in
xor
inc
jbe
adc
adc
leave
mov
inc
scas
std
dec
mov
mov
pop
xchg
adc
bswap
aaa
fmul
in
(bad)
cmp
xor
in
mov
imul
out
sub
sbb
test
(bad)
movs
xchg
retf
adc
into
mov
ror
paddb
xchg
adc
mov
push
inc
lods
movs
push
ins
cs
mov
(bad)
scas
mov
sbb
mov
aam
call
jb
cmp
test
jo
adc
pop
xor
add
(bad)
pop
push
jae
xchg
pusha
cmps
(bad)
mov
cmp
pop
sub
lahf
or
aaa
sub
add
je
xor
lock
ins
jmp
inc
jmp
inc
pop
mov
or
inc
mov
cmp
cmps
mov
fucomi
out
push
imul
mov
cwde
into
lahf
xchg
pop
cmp
or
rol
mov
cmp
inc
pop
push
stos
sbb
pop
mov
add
pop
xor
push
sar
loopne
sub
shl
mov
fbstp
or
cmp
int3
dec
sub
movs
cwde
mov
fisttp
sub
loop
adc
fld
lods
jmp
inc
ins
aam
sub
sbb
push
xchg
test
sar
xchg
fiadd
and
outs
adc
shl
sbb
call
enter
mov
mov
cmps
mov
(bad)
repz
mov
into
sub
movs
xchg
daa
fdiv
sub
xor
fistp
es
jmp
mov
gs
adc
rcr
leave
jmp
mov
fdivr
xor
aam
dec
in
ret
mov
mov
mov
xchg
mov
call
pop
sub
mov
add
jb
fwait
push
and
mov
int
adc
and
add
mov
jecxz
icebp
pop
xchg
call
or
daa
mov
fnstsw
push
cwde
push
test
mov
cmp
(bad)
sbb
mov
ins
mov
inc
mov
(bad)
test
mul
imul
fwait
rcl
hlt
inc
fist
cmp
mov
enter
push
pop
jle
shl
pop
cmp
pop
fadd
or
icebp
and
ret
(bad)
dec
mov
in
aaa
xchg
pop
and
mov
imul
cmp
mov
in
lahf
push
dec
xor
test
jmp
pusha
sub
mov
or
loope
pushf
div
mov
sub
imul
ins
xchg
ret
sbb
mov
fcmovnb
mov
push
adc
add
mov
std
or
push
inc
cmc
inc
mov
loopne
mov
sbb
outs
mov
adc
aas
pop
jns
pop
or
push
outs
sti
add
dec
adc
popa
retf
ds
and
cmp
pop
ja
lock
xor
(bad)
mov
imul
cmps
push
and
or
leave
repnz
xchg
outs
outs
ret
jl
imul
add
xor
sbb
xchg
adc
xchg
and
nop
lock
enter
xchg
lock
xor
es
adc
sub
(bad)
std
pop
mov
(bad)
dec
popa
mov
je
outs
lods
pop
jo
xchg
ja
push
mov
ret
inc
pop
mov
add
enter
xchg
pop
sub
and
repnz
lock
stos
fs
mov
or
test
nop
or
jno
lods
rcl
mov
mov
fcomp
out
cdq
mov
out
adc
adc
xor
aaa
bound
push
fisttp
nop
pushf
iret
mov
jmp
mov
mov
cdq
ins
mov
push
and
mov
cmc
add
inc
mov
mov
mov
hlt
sbb
(bad)
push
aad
dec
xchg
jbe
or
jmp
cmp
push
leave
sahf
arpl
sbb
push
or
jmp
sub
ret
aas
mov
arpl
inc
dec
push
add
xchg
pop
out
loopne
sub
div
ds
mov
xor
or
adc
sbb
push
mov
xor
mov
not
adc
fwait
popa
mov
push
scas
test
push
pop
adc
popf
out
push
rol
fist
aad
(bad)
inc
push
test
sbb
mov
lahf
mov
xor
push
sar
mov
mov
jle
sbb
sbb
repnz
jno
es
inc
mov
cld
fs
int3
into
aaa
arpl
jnp
jmp
int
pusha
outs
push
push
jns
les
aas
sub
pop
cmp
sar
mov
sub
fst
mov
mov
and
add
test
loop
jge
pusha
sbb
ins
sub
in
popf
iret
jb
pop
and
jb
pop
or
jo
cmp
dec
icebp
sbb
inc
cdq
movs
adc
xchg
xchg
xchg
pop
pop
out
clc
sbb
cmp
pop
mov
or
mov
icebp
mov
jnp
pop
push
out
pop
not
jmp
cdq
lahf
mov
ds
jns
int3
add
sub
(bad)
bound
ins
movs
seta
sbb
call
cmp
pop
inc
cmp
or
add
xchg
cmps
xor
mov
gs
dec
(bad)
or
std
sub
jns
xchg
nop
dec
cmp
imul
mov
or
lods
mov
lods
gs
sbb
xchg
out
dec
lods
cmp
dec
fldenv
lods
inc
cs
adc
mov
(bad)
adc
movs
out
dec
stos
(bad)
sbb
jl
xchg
mov
pushf
mov
pop
jmp
adc
in
or
jle
jg
ret
xlat
xor
push
sti
jne
(bad)
iret
or
in
inc
pop
add
sbb
sub
xor
int3
shr
shr
ficomp
dec
mov
jno
sbb
(bad)
or
jno
ret
out
pushf
sbb
jg
cli
movs
adc
repz
xor
in
dec
mov
fnstcw
jmp
mov
sbb
imul
inc
pushf
sbb
stc
lock
cdq
cld
in
jle
push
ror
mov
sbb
and
push
scas
mov
std
add
and
xor
repz
pop
ins
loop
jl
les
ins
fs
jecxz
fadd
cmp
mov
out
scas
test
fisttp
nop
cli
inc
loopne
mov
add
inc
inc
xchg
or
mov
iret
les
ficom
adc
sub
(bad)
push
pop
mov
adc
es
xor
ins
or
leave
xchg
mov
and
add
je
loop
gs
call
xchg
aas
pop
and
push
cld
lds
sar
test
xchg
jne
inc
out
mov
push
js
adc
ja
sahf
and
cmc
xchg
retf
pop
aam
in
in
sub
pop
inc
xchg
inc
cmps
es
(bad)
jle
outs
out
call
sub
ds
jp
ret
xor
hlt
dec
fcom
in
xor
cmp
(bad)
enter
das
stos
push
add
xchg
data16
pop
inc
pushf
pop
pop
xor
sub
push
arpl
jg
xchg
push
hlt
test
adc
ret
imul
dec
fst
(bad)
scas
xchg
xchg
add
out
enter
or
(bad)
or
fisubr
rol
cmp
(bad)
xor
dec
test
xchg
mov
int3
dec
test
hlt
cmp
push
stos
aas
mov
xchg
(bad)
nop
or
cmp
icebp
xlat
(bad)
js
push
push
call
and
js
leave
xchg
ss
sbb
div
in
mov
pop
sub
test
sub
in
xor
mov
add
clc
sbb
(bad)
ss
aam
dec
(bad)
ins
xchg
and
stos
pop
dec
leave
dec
ins
mov
mov
push
jb
(bad)
mov
adc
out
add
fstp
xor
xchg
mov
test
out
xchg
(bad)
jmp
test
les
retf
je
loop
shl
add
add
push
fist
xchg
push
mov
xor
mov
jle
xor
pop
inc
repnz
enter
stc
mov
cmp
idiv
fisttp
add
and
or
or
mov
out
shl
test
mov
ror
sub
loope
adc
push
out
and
mov
mov
sub
test
fsincos
and
std
mov
daa
mov
pushf
mov
sbb
mov
in
and
adc
cmps
jb
jne
loop
sysenter
scas
ret
and
or
xlat
jns
das
aaa
jo
cdq
push
dec
pop
ins
or
ja
cmp
dec
repz
jl
cld
mov
adc
sbb
int
sar
sub
sub
out
cld
shl
xor
push
pushf
xor
add
add
movs
xor
idiv
in
cmp
inc
es
retf
test
add
jge
xchg
xchg
push
pop
je
mov
fidivr
(bad)
and
adc
popf
adc
lahf
(bad)
jae
aas
mov
test
lea
adc
xchg
dec
repnz
fs
inc
and
jg
inc
sub
push
aas
push
adc
mov
cmp
dec
outs
mov
inc
in
retf
mov
call
inc
push
xchg
xor
mov
addr16
add
lock
and
adc
xchg
and
ja
cmp
dec
movs
xchg
xchg
(bad)
repnz
in
dec
sub
jns
inc
sbb
test
cmc
and
test
(bad)
cmc
add
sbb
and
rep
push
sbb
gs
adc
xor
add
and
test
push
push
sbb
mov
and
(bad)
ins
js
xchg
cld
xor
xor
mov
aam
movs
pop
mov
cli
enter
test
mov
sub
and
hlt
test
call
fmul
hlt
jmp
pop
xchg
div
pop
mov
sbb
inc
xchg
or
sub
je
idiv
leave
in
sub
fist
das
test
sub
sub
mov
data16
outs
pop
in
pop
les
fsubp
mov
push
cmp
jge
mov
aaa
dec
gs
xchg
aam
ret
mov
stos
retf
jge
push
mov
sbb
xchg
fst
ds
dec
cmp
movs
into
sub
pop
adc
jl
cmp
mov
test
dec
adc
shl
push
or
icebp
inc
sbb
xor
out
jmp
dec
into
je
out
jbe
imul
mov
pushf
repz
adc
mov
mov
cwde
sahf
and
and
inc
dec
stos
mov
neg
fs
pop
js
fist
mov
pop
pop
pop
cmps
(bad)
xchg
test
pop
aam
ds
movs
test
mov
aas
add
movs
xor
dec
aaa
stos
mov
aas
xor
cmc
mov
push
cmps
retf
pushf
adc
mov
test
xor
fnstsw
fmul
sub
out
gs
loope
rol
xchg
cli
or
loope
push
jg
cmp
xchg
and
or
icebp
fwait
xor
jno
dec
inc
pop
ret
sub
inc
jmp
mov
xchg
mov
(bad)
adc
sub
adc
sbb
lods
sub
add
loopne
scas
cmp
out
xchg
hlt
adc
mov
or
mov
dec
aaa
test
pop
sbb
pop
push
(bad)
jbe
cli
dec
push
pop
push
in
inc
mov
es
mov
xchg
fidivr
mov
or
or
and
pushf
cli
mov
sti
sub
sar
jmp
(bad)
pop
arpl
xchg
and
add
daa
inc
std
push
adc
jmp
sbb
inc
fcmovu
cmc
sub
lods
loopne
push
inc
lods
loope
xchg
push
push
sbb
repz
arpl
mov
inc
push
push
pop
sahf
xlat
fwait
outs
enter
nop
fidivr
xchg
xchg
inc
cmp
mov
and
push
add
fmulp
repz
push
dec
add
push
add
xchg
out
mov
xchg
xchg
sub
cmp
pop
cmp
aas
fsub
cmps
xlat
out
jp
sbb
rol
out
mov
mov
xor
push
sbb
test
imul
mov
mov
xchg
and
xor
daa
adc
fsubp
sbb
mov
pop
push
jge
adc
cmps
mov
jle
pop
dec
call
daa
xor
dec
push
jge
data16
adc
sub
or
popa
in
aam
push
mov
cdq
pop
and
ins
nop
jecxz
test
adc
or
aaa
push
cmp
aad
sub
push
and
shl
clc
mov
(bad)
loope
retf
sub
lahf
jb
jmp
hlt
loop
ret
pop
pop
sbb
jb
sbb
push
mov
adc
dec
out
or
stos
mov
lods
cmp
and
jbe
or
in
js
adc
cmp
xor
mov
jp
loopne
xchg
jae
xchg
jnp
lock
pop
or
scas
push
mov
clc
dec
mov
fistp
and
(bad)
mov
shl
imul
adc
inc
shr
jbe
mov
and
push
retf
int
inc
inc
ja
mov
enter
jp
add
sti
pop
sbb
push
fld
jl
repnz
out
mov
ss
cld
inc
out
lea
retf
(bad)
aad
pop
mov
fcomi
iret
xchg
sbb
(bad)
fwait
pop
(bad)
imul
mov
loop
mov
retf
mov
inc
retf
and
inc
add
mov
in
lods
pop
scas
pop
out
adc
add
aas
(bad)
push
std
imul
adc
inc
scas
jp
mov
mov
xchg
gs
in
imul
jb
pusha
xor
mov
dec
pop
ret
cs
in
xor
sbb
mov
jp
mov
iret
or
sub
adc
(bad)
lods
jmp
sti
sbb
push
mov
xchg
or
jecxz
imul
ja
(bad)
adc
movs
(bad)
or
lahf
mov
loopne
or
dec
rcr
(bad)
call
iret
adc
loop
mov
fsub
clc
jmp
jae
sub
aad
push
jl
mov
(bad)
idiv
test
mov
cld
cmp
jge
cld
or
mov
cmp
cdq
loope
mov
adc
sub
push
cmp
sub
cdq
fadd
std
bound
push
inc
xor
mov
movs
outs
and
cmc
cmps
xlat
and
js
imul
inc
adc
enter
jno
jmp
imul
mov
cmp
mov
call
xor
fidivr
push
mov
or
lahf
jle
or
repz
fadd
or
add
ss
xor
or
out
pop
xor
inc
aas
scas
push
push
adc
arpl
fdivr
or
jae
je
sub
ins
pop
jmp
daa
push
ja
or
cmp
shl
loope
sub
push
or
dec
imul
js
loope
add
shr
sahf
lods
stos
push
cdq
add
lea
scas
and
mov
rcl
sbb
shr
mov
arpl
lahf
icebp
xor
pop
lds
into
xchg
out
popf
cdq
sub
mov
inc
iret
dec
retf
jno
sbb
hlt
xlat
sar
jge
sub
(bad)
aaa
rcr
mov
fdiv
stos
jmp
push
mov
fiadd
stos
outs
popf
jl
xor
lds
in
pop
inc
ins
(bad)
mov
cmp
jns
aad
dec
xor
pop
pop
out
xlat
lods
sbb
sub
dec
nop
test
loope
arpl
mov
leave
loope
mov
mov
mov
jl
sbb
(bad)
and
lds
sahf
sbb
test
sub
test
inc
cmp
imul
or
mov
aaa
pushf
mov
out
aas
lods
fbstp
rcl
(bad)
sbb
(bad)
xchg
fstp
add
lods
mov
fldenv
retf
fwait
loop
mov
repnz
rcl
hlt
lods
and
es
dec
out
cmp
sub
jae
push
inc
jp
icebp
mov
das
fs
pop
movs
mov
rcl
out
out
adc
xchg
adc
mov
stc
push
dec
lds
inc
cs
enter
jb
mov
push
jne
lahf
mov
outs
(bad)
sbb
or
cmp
mov
or
test
int
inc
cmp
or
sub
aas
or
xchg
xchg
mov
hlt
into
mov
aaa
dec
and
mov
bound
loop
mov
call
adc
dec
push
or
inc
jno
xchg
cmp
popa
nop
and
sbb
jg
mov
mov
mov
add
mov
test
adc
ss
test
jle
jnp
out
cs
in
xlat
data16
es
jae
scas
mov
movs
sbb
add
dec
pop
xchg
clc
cmp
pop
jmp
les
leave
(bad)
sub
jae
int3
mov
or
ds
adc
mov
std
jle
repnz
outs
ja
test
js
cwde
call
retf
push
lods
and
mov
pop
sub
gs
stc
btc
hlt
ins
inc
test
mov
xchg
push
mov
mov
sub
shl
mov
xor
mov
jnp
or
pop
dec
ins
(bad)
jno
inc
push
dec
int3
stos
test
lods
jnp
adc
pop
movs
retf
loope
inc
or
mov
std
cli
sbb
retf
ins
inc
adc
in
dec
pushf
ficom
pop
out
mov
and
stos
mov
fidiv
xchg
out
test
cmp
dec
nop
add
mov
and
rcr
or
sbb
stos
out
jmp
push
add
neg
xchg
les
outs
inc
cdq
xchg
jo
xor
in
jo
jbe
sub
lea
jns
pop
mov
xor
cmp
mov
call
jmp
out
and
test
xchg
neg
push
pop
push
je
outs
in
mov
push
data16
dec
push
test
rcr
xchg
es
ret
test
add
adc
dec
inc
sub
and
in
fwait
mov
adc
cmp
mov
call
inc
fbstp
je
jne
daa
mov
aam
stc
jmp
adc
loopne
mov
iret
out
jmp
loope
aaa
push
fldenv
or
shl
pop
imul
in
in
js
dec
sbb
jecxz
add
fist
jmp
jmp
and
ins
xor
jmp
lods
mov
bound
pop
and
in
iret
scas
sbb
jnp
and
cmps
cdq
popf
aas
dec
add
ror
xchg
add
mov
inc
add
pop
sbb
push
popa
push
xor
mov
and
sar
test
mul
aas
call
adc
mov
sbb
xor
push
sub
mov
clc
pop
test
(bad)
adc
push
or
xchg
lock
xor
gs
scas
adc
inc
xchg
test
cmp
lock
leave
push
neg
xor
sub
xchg
adc
pop
enter
movs
pushf
dec
mov
xchg
mov
arpl
dec
je
inc
jns
fcomp
pop
sub
pop
fwait
(bad)
jnp
in
inc
or
adc
xor
test
pop
push
out
push
outs
arpl
xchg
in
or
and
popf
rol
test
fimul
(bad)
push
sub
push
out
cmp
push
ss
movs
xchg
into
dec
rcl
outs
pop
outs
xor
mov
cmp
add
call
jmp
popa
push
(bad)
jnp
mov
jmp
mov
test
and
xchg
dec
push
mov
mov
test
aad
adc
push
mov
shl
add
scas
dec
push
pop
sub
rol
inc
std
out
shl
sbb
arpl
aam
mov
or
rcr
mov
add
mov
pop
(bad)
cmp
xor
xor
mov
test
cmps
ret
pop
xchg
loop
xchg
(bad)
lods
test
inc
cld
in
call
push
in
fidiv
cmps
popf
or
jl
adc
adc
push
xchg
inc
jl
outs
arpl
sar
push
adc
popa
lea
bnd
xchg
push
sbb
mov
pop
push
add
je
xchg
fadd
popf
xchg
jl
loop
cwde
mov
adc
mov
xchg
sbb
test
imul
es
fld
cmps
cmp
mov
in
inc
rcr
push
cmp
pop
mov
jbe
dec
out
sti
cmc
nop
nop
and
cmps
push
lock
and
jp
mov
pushf
mov
out
mov
dec
mov
mov
mov
ss
cmp
pushf
nop
pusha
jo
mov
sbb
xchg
sub
es
sbb
fimul
scas
jne
dec
pop
push
fild
xor
inc
(bad)
int3
mov
std
bound
(bad)
mov
(bad)
xor
jle
in
xor
xchg
ret
add
mov
xlat
jge
mov
pop
vunpckhps
add
je
mov
cmp
out
xor
jno
fstp
out
je
repnz
xor
pusha
shl
push
mov
fistp
jecxz
inc
inc
pop
push
out
add
sub
sbb
or
mov
or
out
cmp
jge
imul
mov
jbe
iret
inc
scas
xor
imul
cmp
jl
push
pop
cmp
push
and
ds
dec
sbb
xchg
es
add
imul
dec
pop
call
or
mov
mov
out
push
mov
sbb
fcomp
mov
dec
test
pop
shl
stos
fcom
mov
pop
outs
out
test
hlt
push
fwait
adc
mov
gs
dec
(bad)
popa
or
cmps
ja
or
add
in
xor
pop
in
cdq
mov
mov
test
in
je
cmps
scas
loopne
adc
std
push
nop
push
in
sahf
xor
ja
or
xchg
enter
ds
cmps
jl
pushf
aas
or
scas
pop
cli
inc
std
ja
sar
jnp
add
nop
rol
loope
and
into
scas
ja
es
sub
das
jmp
sub
in
retf
arpl
push
xchg
sbb
sahf
int3
ins
iret
adc
mov
call
popf
das
dec
mov
pushf
adc
(bad)
push
xchg
imul
push
adc
sub
popa
xor
in
test
xchg
inc
das
or
test
ret
(bad)
loop
and
mov
cwde
inc
(bad)
or
push
mov
cld
adc
cmp
and
jb
sar
popf
cmp
stos
shl
outs
mov
mov
das
or
xor
ins
out
adc
loope
popf
mov
inc
scas
movlps
inc
pxor
xchg
into
cs
push
mov
scas
aas
into
int3
jmp
int3
pop
xchg
daa
in
add
jmp
push
mov
into
stc
sar
js
int
dec
jns
jp
xchg
mov
mov
leave
call
les
ror
(bad)
sub
jmp
(bad)
push
cmp
push
icebp
(bad)
pop
and
nop
sub
clc
ror
pushf
out
out
dec
ror
sub
xor
outs
xor
jmp
retf
int3
or
jmp
cli
repz
mov
fsubrp
inc
pop
xchg
in
mov
daa
pop
test
test
in
imul
mov
rol
sub
stos
popa
sub
mov
jecxz
xor
scas
mov
push
fnstcw
movs
cmp
or
fdiv
(bad)
(bad)
mov
push
cmp
ins
jno
(bad)
loopne
in
push
push
pushf
ret
ret
add
jl
jp
inc
pushf
sub
or
call
je
dec
xchg
pop
or
mov
or
xor
retf
leave
add
scas
jl
push
push
dec
sysret
fwait
xchg
cmps
cmp
xchg
ins
or
xchg
jb
ins
(bad)
loop
stc
and
or
out
and
fidiv
jb
jmp
aas
fwait
pop
sbb
aad
xchg
(bad)
cld
xlat
push
push
xlat
jne
sub
stc
fcmovu
out
scas
adc
(bad)
mov
adc
push
adc
frstor
add
pop
adc
rol
outs
dec
dec
stos
push
loop
adc
clc
sbb
fwait
sub
push
aaa
cmps
out
loopne
cld
push
je
loopne
lock
stos
(bad)
pop
bound
push
fcmovbe
cmp
pop
retf
or
xchg
(bad)
jo
jecxz
push
cld
ret
loope
sahf
loop
(bad)
fbstp
mov
mov
test
mov
or
xchg
cmp
xlat
add
out
cs
sbb
test
push
mov
daa
imul
fidivr
adc
pop
mov
idiv
push
xchg
mov
fiadd
fwait
xchg
push
cs
sahf
aaa
es
push
xor
inc
fisubr
sub
(bad)
mov
lahf
mov
not
add
add
(bad)
in
xchg
int
dec
and
stos
mov
mov
cli
inc
adc
or
adc
pop
adc
push
sub
add
sar
test
mov
test
xchg
sbb
add
scas
push
and
ret
jmp
movs
loope
xchg
xchg
popa
fxch
xchg
or
retf
mov
cmp
pop
imul
daa
bound
retf
cmps
fmul
jno
add
xor
ins
iret
mov
add
cmp
in
xchg
pop
cmps
sub
ss
in
js
mov
jae
in
(bad)
lods
mov
sbb
(bad)
clc
jno
push
fcompp
out
add
(bad)
mov
in
popa
imul
xchg
fwait
out
or
call
das
aad
clc
push
and
ins
cld
add
call
xchg
cmps
sbb
cmps
adc
pop
adc
stos
(bad)
adc
std
outs
cmp
out
mov
int3
inc
lods
push
cdq
les
leave
xchg
fptan
sahf
add
cmp
test
nop
push
cmp
retf
dec
fimul
xchg
sahf
mov
mov
jmp
ror
mov
dec
sub
ins
add
xchg
mov
pushf
xor
xor
fst
loopne
cmp
mov
jmp
cwde
jns
or
out
mov
mov
or
push
mov
jb
push
fbstp
js
sub
shr
inc
or
not
stos
js
mov
xchg
cs
out
std
xchg
mov
imul
mov
jecxz
lock
jns
mov
loopne
mov
fdivr
sar
lods
popa
pushf
jns
shl
adc
imul
or
mov
loope
or
mov
dec
cmp
add
add
inc
aaa
lea
movs
inc
shr
dec
loop
cmc
mov
out
jae
jae
xchg
xchg
outs
cmps
xor
mov
(bad)
pop
or
push
sahf
dec
xchg
or
push
clc
xchg
cmps
jmp
sbb
cs
xor
cmp
xchg
add
shl
in
sbb
inc
out
push
pop
mov
xor
push
ds
jne
and
inc
mov
int3
aam
mov
adc
lock
repnz
push
aad
add
dec
popf
mov
adc
pop
jnp
call
inc
lods
outs
push
rol
das
inc
lahf
clc
or
cmps
mov
xchg
(bad)
lock
mov
push
or
jge
mov
cld
inc
lds
or
adc
data16
add
lea
xchg
add
repnz
cmp
push
clc
in
pop
leave
cmp
jo
mov
xor
jo
jne
enter
cld
cpuid
xchg
aas
and
jl
stos
xchg
mov
mov
(bad)
out
aam
test
out
dec
arpl
xchg
in
test
mov
les
cmc
mov
pop
les
fsqrt
cli
mov
push
ror
jnp
mov
mov
cmp
das
push
out
or
mov
pop
mov
cwde
sub
aas
aam
add
in
pop
sbb
outs
shl
cmp
inc
enter
es
mov
sub
or
inc
js
adc
pop
popf
jecxz
cmp
lahf
ins
jae
sbb
popf
popf
(bad)
xor
mov
mov
cmp
mov
dec
and
dec
jbe
call
push
leavew
pop
or
inc
jno
cmc
leave
xchg
cdq
or
test
mov
mov
mov
loop
mov
dec
sahf
jo
jg
stos
or
or
shl
lahf
add
fidiv
std
sub
mov
test
or
fwait
pop
xor
or
mov
inc
and
sub
(bad)
xor
adc
cmp
inc
sbb
out
fstp
fwait
call
adc
cmp
call
in
aas
mov
cmps
mov
mov
xor
in
xor
lds
jo
push
push
dec
push
fst
(bad)
aam
loopne
push
push
cmp
lods
and
lock
sti
push
mov
cmps
cmp
xor
std
es
jl
mov
aaa
cmp
pop
and
sub
ret
aas
ret
xchg
jb
daa
jbe
pop
mov
repnz
push
fistp
mov
sub
aas
mov
lea
pop
pop
add
out
push
mov
fnstcw
stos
xor
shl
push
mov
cwde
fisttp
pop
sti
cli
adc
jle
xchg
aas
ret
lods
add
push
mov
les
xor
push
sar
cmc
push
dec
adc
js
aam
and
int3
gs
sahf
dec
xor
adc
and
fcomp
xchg
in
jnp
sahf
cmp
vpunpckhqdq
sub
les
xchg
fdivr
repnz
mov
mov
xchg
(bad)
adc
sub
push
sbb
jl
movs
mov
sbb
icebp
call
into
enter
sbb
push
das
in
stos
outs
mov
add
lods
adc
pop
das
(bad)
in
mov
sti
sub
loopne
mov
or
and
pop
in
jg
std
int3
xchg
pop
movs
sbb
ss
arpl
arpl
push
or
push
outs
push
into
sbb
popa
movs
or
pop
pop
inc
dec
jb
adc
fs
and
stc
mov
je
dec
shr
iret
dec
(bad)
xchg
test
call
mov
idiv
out
jmp
adc
dec
pop
pop
movs
fmul
test
fcmovnb
push
adc
jecxz
loope
js
mov
outs
push
leave
mov
aaa
test
into
mov
lea
mov
aam
pop
mov
push
add
dec
sub
xchg
out
add
bound
sbb
or
in
xchg
add
gs
(bad)
aaa
fcomp
jbe
mov
inc
xor
ror
jp
(bad)
lods
cmp
adc
cwde
scas
or
add
loope
mov
and
xchg
fidivr
int
fldcw
cmp
jmp
inc
xchg
idiv
xlat
push
lods
mov
xlat
xor
jl
in
scas
bound
fsubr
dec
mov
retf
and
js
xchg
cmc
repz
mov
push
stc
inc
mov
adc
mov
stos
xchg
jg
popf
xor
out
ins
push
wrmsr
out
fwait
add
stos
xor
repnz
mov
push
dec
lods
jb
and
mov
outs
jnp
rol
popa
stos
fdiv
pop
arpl
inc
inc
jge
inc
bound
(bad)
jbe
pop
adc
mov
xlat
scas
(bad)
pushf
pushf
js
mov
mov
adc
call
call
sub
lahf
rol
je
mov
or
repz
push
cmp
xchg
inc
test
loope
nop
test
or
(bad)
icebp
hlt
and
push
imul
mov
jg
jmp
push
repnz
fcmovnu
sbb
add
cli
sub
add
jl
in
cmp
ret
xchg
(bad)
mul
fs
mov
dec
popa
imul
mov
jmp
loop
adc
test
cs
retf
push
jmp
in
fisub
jecxz
shr
ins
jnp
test
mov
outs
pop
jns
xor
outs
xchg
pusha
lahf
push
mov
fcmovnbe
stos
call
xlat
movs
sub
xor
pop
and
sbb
xor
scas
mov
mov
cld
sub
shr
repz
dec
movs
or
sbb
inc
movs
fisttp
aaa
call
sbb
add
rcl
mov
adc
ret
iret
(bad)
(bad)
test
push
xor
or
(bad)
cmp
inc
mov
stc
aaa
xchg
lahf
out
sub
inc
push
xchg
sbb
cmps
xor
inc
setno
pop
dec
cmp
sbb
inc
cmp
push
push
or
bound
les
push
sbb
dec
sbb
inc
mov
adc
sbb
push
das
imul
lods
inc
out
mov
or
fnstenv
leave
repz
cdq
repz
sbb
xchg
mov
jb
inc
jl
sbb
mov
and
test
in
mov
xor
jg
push
jb
aas
add
test
xchg
into
inc
daa
ret
xacquire
cld
int
or
jnp
mov
xchg
cmps
inc
or
(bad)
sub
xchg
and
je
bound
in
(bad)
aaa
dec
fdiv
cmps
sub
pop
inc
sbb
mov
xor
or
cmp
mov
stc
mov
in
repz
pop
scas
dec
lds
inc
in
clc
jb
test
out
inc
arpl
test
sbb
fadd
(bad)
mov
pushf
xor
xchg
add
test
mov
sbb
retf
xor
pop
call
mov
stos
(bad)
(bad)
or
repz
sbb
jae
(bad)
stc
xchg
sub
jge
movs
mov
(bad)
out
cs
jae
lea
imul
jne
mov
and
cld
(bad)
das
mov
(bad)
pushf
inc
dec
popa
pop
sub
jnp
out
repz
dec
dec
bound
popf
jg
iret
mov
fwait
pushf
cwde
lods
or
inc
enter
mov
inc
pop
ins
inc
in
dec
aas
scas
jne
(bad)
movs
cmps
pop
ret
xchg
push
jp
pusha
mov
mov
ficom
es
pop
sub
push
or
jle
pop
add
nop
dec
cmps
jbe
pop
hlt
sahf
cli
mov
sahf
pop
xor
sbb
xchg
mov
in
arpl
jle
sbb
adc
aad
rcr
aad
in
mov
cli
imul
fst
(bad)
jae
inc
es
and
add
int3
cmps
jl
adc
push
add
in
add
mov
or
outs
mov
sub
enter
retf
ds
dec
adc
push
add
jmp
mov
hlt
xor
or
retf
push
mov
outs
cmp
nop
jbe
sbb
jecxz
scas
repz
test
daa
hlt
jb
and
adc
into
inc
clc
cmps
sub
imul
xor
iret
out
(bad)
scas
add
xor
loopne
sar
push
or
jp
retf
iret
outs
(bad)
(bad)
xor
inc
ds
adc
or
(bad)
adc
int
xchg
cmp
loop
or
shr
rep
pop
xchg
sub
mov
icebp
stos
mov
into
and
stos
enter
out
and
jne
jae
imul
inc
push
retf
not
and
fbld
mov
inc
inc
repz
test
scas
mov
(bad)
ret
lods
mov
cmp
mov
adc
mov
std
data16
psubsb
xchg
or
fild
movs
mov
(bad)
jge
scas
pop
mov
gs
(bad)
push
sahf
adc
pop
push
hlt
call
fcom
fdivr
and
mov
add
fisubr
pop
fyl2x
imul
xor
(bad)
scas
jle
ret
addr16
and
pop
push
jnp
xchg
das
mov
call
push
repz
add
add
mov
add
in
xchg
cmp
leave
repnz
in
(bad)
fidivr
sbb
lahf
retf
aam
(bad)
mov
sbb
std
and
mov
and
pop
add
xchg
or
cmp
fld
stos
dec
mov
mov
out
push
cli
daa
adc
les
ret
mov
repz
(bad)
hlt
test
inc
and
clc
repnz
or
pop
mov
xlat
adc
xchg
call
cdq
xor
rol
push
imul
push
out
add
mov
(bad)
icebp
leave
jb
push
push
push
popa
pop
bound
retf
jb
xor
(bad)
in
imul
xchg
or
mov
xor
enter
inc
popf
out
sti
sub
push
sub
xchg
xor
outs
and
add
cmp
mov
lock
inc
pop
dec
xchg
mov
sub
mov
add
and
jecxz
jne
pop
int3
sbb
cmp
xchg
mov
push
cmp
sbb
mov
dec
ss
mov
ud1
cmp
xor
(bad)
std
mov
cmp
dec
mul
out
dec
jp
test
xor
push
retf
add
ins
xor
inc
xchg
inc
jno
jle
int
mov
je
js
(bad)
jo
pop
mov
sub
out
cli
adc
int
loop
mov
mov
mov
and
xor
popf
xchg
daa
mov
mov
pop
test
and
aas
scas
ret
cs
inc
push
jmp
jb
lods
out
stos
push
gs
inc
jnp
and
cmc
add
sahf
out
push
dec
mov
adc
daa
arpl
mov
xchg
repnz
imul
cmps
mov
out
lds
shl
(bad)
inc
ret
pop
ss
fdivr
mov
lods
movs
mov
pop
js
test
sub
push
mov
mov
ret
dec
or
inc
cmp
mov
nop
mov
div
jecxz
adc
push
(bad)
popa
dec
je
dec
xor
lods
push
cli
adc
push
cmp
xor
out
and
arpl
(bad)
in
je
imul
pusha
and
cmp
bound
popa
jle
fcomp
cs
mov
ja
int3
add
push
cli
dec
add
cmp
inc
sbb
sar
test
sti
repz
xor
cmc
idiv
div
pop
data16
and
jnp
add
jmp
lds
pop
rcl
fisttp
clc
or
ret
call
call
sub
push
jnp
bound
ror
hlt
std
mov
adc
fist
aam
pop
dec
int
ficom
shl
js
mov
xchg
jle
and
div
iret
mov
sbb
mov
or
neg
imul
stos
and
xchg
push
sbb
(bad)
push
(bad)
sub
xlat
int
out
mov
ret
sub
jmp
jnp
inc
adc
mov
sbb
xchg
and
nop
and
dec
cmp
jmp
inc
out
bound
ret
xchg
mov
test
stos
push
lods
cli
jno
xchg
jbe
xor
rcl
sub
pop
inc
jnp
fisubr
push
mov
cmp
pop
neg
mov
mov
add
in
inc
push
adc
dec
inc
stc
daa
add
clc
mov
not
lods
stos
cmp
inc
pop
mov
frstor
mov
add
cs
jmp
stos
add
scas
jne
sub
dec
adc
xchg
lea
ror
repz
jae
lds
ret
jp
sub
clc
jne
xchg
add
lods
aas
mov
out
xor
add
adc
loop
iret
cmps
mov
icebp
push
mov
sar
push
push
add
call
bound
mov
dec
sub
pusha
aas
fwait
arpl
jle
lea
dec
shl
mov
push
sbb
ss
or
loopne
daa
mov
xchg
fnstcw
jnp
lea
jg
mov
xchg
jno
xor
xor
xchg
mov
cmp
icebp
adc
xchg
fimul
adc
inc
lahf
loopne
mov
rol
cmc
adc
sbb
shr
xor
jno
mov
js
jl
movs
or
mov
es
(bad)
mov
call
add
or
int3
push
in
loope
inc
call
ja
xor
sbb
fiadd
mov
mov
lods
dec
lahf
out
inc
or
sub
movs
nop
mov
inc
and
sbb
in
bound
retf
popf
out
daa
das
sub
xchg
xlat
or
inc
sbb
ja
sar
pop
shr
xchg
add
sbb
jmp
popa
out
fiadd
movs
mov
pop
push
xchg
pop
clc
retf
fadd
clc
scas
(bad)
pop
iret
imul
inc
inc
je
popf
xchg
jbe
push
mov
or
xor
jno
out
adc
push
xor
pushf
aad
or
mov
or
cwde
popa
xchg
push
cmps
mov
push
shl
sbb
iret
and
and
push
mov
mov
ds
out
ins
lahf
xchg
dec
in
test
mov
daa
inc
adc
or
out
in
(bad)
xor
mov
ret
pop
shl
out
loopne
xchg
ins
call
sbb
xchg
jno
sti
mov
aam
fist
inc
add
mov
ss
adc
adc
adc
sbb
pop
aad
inc
inc
mov
add
(bad)
(bad)
pop
ret
rol
icebp
shl
jge
push
fild
inc
loopne
inc
mul
(bad)
and
dec
or
inc
cdq
mov
adc
push
cmc
in
or
xchg
and
or
jmp
shr
mov
retf
cmp
mov
call
outs
addr16
sbb
fsubp
pop
or
cmp
ins
movs
dec
(bad)
ds
or
xor
xlat
cmp
call
data16
sub
loope
enter
mov
cmp
lahf
les
test
and
xchg
mov
push
push
dec
shr
xor
neg
jnp
push
jo
and
jmp
pop
sbb
pop
mov
add
in
dec
mov
cdq
inc
add
fld
(bad)
not
xchg
mov
lahf
jns
rol
movs
jecxz
mov
inc
mov
aas
jmp
fs
adc
jae
cmps
jecxz
jge
mov
les
cmp
(bad)
fbstp
pop
hlt
cs
clc
cld
aam
sub
shr
sahf
mov
shr
popa
inc
pop
test
jmp
sbb
(bad)
(bad)
mov
loope
adc
add
popa
cmp
dec
fwait
mov
mov
mov
lock
mov
scas
fstp
mov
bound
mov
dec
fist
ja
pop
xor
add
fist
retf
(bad)
sahf
leave
push
(bad)
setl
jmp
inc
mov
test
mov
psubq
xchg
in
sahf
jbe
cld
stos
ins
xchg
ja
add
or
cmp
iret
pop
mov
or
sub
outs
in
outs
fidivr
adc
dec
inc
gs
push
test
inc
mov
cmc
int
jmp
ins
or
xchg
jg
imul
adc
lahf
ins
xchg
xlat
test
and
lods
ds
xchg
sub
jmp
lahf
sbb
jo
sub
add
into
and
mov
cmp
mov
movs
loop
pop
mov
mov
out
stos
dec
movs
or
das
lahf
jo
or
fidiv
in
ror
xchg
adc
or
fcmovne
outs
ffree
cmp
sub
mov
or
cmps
inc
fbld
jmp
fisubr
dec
push
stos
ds
hlt
dec
hlt
jno
push
dec
mov
and
dec
mov
add
push
jecxz
and
dec
loop
adc
clc
loopne
dec
xor
mov
movs
jno
and
scas
mov
and
or
int3
arpl
and
inc
(bad)
aad
or
mov
mov
jnp
cmp
inc
ins
xchg
xchg
pop
mov
mov
push
mov
iret
cmp
mov
stc
arpl
mov
sub
jmp
adc
call
stos
hlt
test
or
ss
dec
popf
loope
or
mov
(bad)
rol
mov
(bad)
retf
in
mov
jecxz
add
pop
stc
mov
jp
aam
neg
sbb
pusha
inc
adc
dec
dec
std
in
inc
fiadd
std
push
clc
out
les
mov
inc
mov
das
sbb
pop
or
inc
neg
mov
xor
test
into
rol
adc
cmps
push
movs
stc
mov
cmp
repz
mul
xchg
ins
daa
or
into
icebp
bound
mov
ss
mov
jp
ins
pop
cmp
and
outs
hlt
mov
push
in
in
add
aaa
push
mov
(bad)
pop
lods
mov
repz
outs
adc
cld
imul
out
push
imul
jg
gs
cmps
adc
xchg
cmp
daa
or
les
(bad)
in
pop
xlat
dec
(bad)
sbb
add
mov
imul
cmp
popf
push
int3
sar
(bad)
jg
outs
jmp
lods
jle
jbe
or
lea
pusha
sub
jmp
dec
repnz
xor
or
cli
aas
pop
pop
cbw
hlt
stos
(bad)
data16
jp
popf
(bad)
jae
dec
adc
in
mov
xchg
cli
cs
scas
sar
cmp
enter
sub
nop
add
stos
aad
xor
(bad)
int3
sar
sbb
mov
pop
test
sbb
addr16
scas
pop
dec
sbb
pop
pop
sar
cld
mov
stc
cmps
pusha
clc
rcr
fwait
jmp
aaa
call
inc
aas
mov
or
sub
inc
xchg
div
sub
aam
shr
loopne
and
mov
ror
std
outs
push
pop
es
retf
or
icebp
xor
(bad)
mov
adc
stos
add
pop
pop
fisub
ins
fisttp
cmc
and
or
inc
in
adc
mov
ins
add
add
mov
inc
je
xor
clc
and
ret
shl
mov
movs
lods
mov
fdivr
daa
out
aaa
jb
dec
lods
inc
out
sub
jg
popa
mov
dec
mov
xchg
inc
xchg
repz
sbb
push
rcr
fmul
das
fisttp
movs
cmp
mov
jbe
jo
jb
or
push
mov
scas
sahf
fst
push
pop
retf
mov
add
mov
stos
xor
loop
in
in
xor
(bad)
ins
test
enter
and
es
jns
push
aam
inc
cdq
dec
ret
jle
mov
add
add
fnstenv
or
dec
dec
mov
or
loop
cmps
cdq
and
adc
or
and
and
pusha
or
dec
xlat
sahf
mov
pusha
pop
shl
adc
dec
jmp
adc
es
in
sbb
jg
daa
sub
pop
and
jmp
rol
repnz
adc
mov
into
jbe
xor
adc
cwde
mov
mov
add
ja
cld
and
jae
inc
xor
xor
jbe
stc
xchg
loope
js
lds
mov
adc
pop
or
and
xchg
push
popf
add
iret
xor
js
icebp
pop
fld
xchg
cmps
(bad)
push
or
jno
enter
jb
pop
adc
je
or
mov
add
jae
adc
(bad)
pop
ret
mov
std
hlt
test
inc
rol
(bad)
mov
daa
add
adc
and
xchg
test
(bad)
cmp
add
js
outs
mov
enter
es
pop
pushf
ret
out
cmc
ror
inc
sahf
adc
and
popa
ins
push
sub
mov
cmp
jns
shl
aam
mov
push
fistp
mov
adc
popf
lock
ds
js
dec
dec
inc
inc
sti
xor
inc
push
pop
dec
call
mov
jp
dec
jns
sbb
lds
cwde
in
cmps
popa
scas
sub
arpl
cmp
lfs
fwait
lock
sbb
ins
dec
mov
xor
enter
cmp
in
cld
shr
push
lods
loopne
popa
push
(bad)
loope
jle
jge
scas
mov
inc
out
mov
pop
adc
pop
pop
add
dec
pop
sahf
adc
and
bound
sub
imul
pop
int
das
push
leave
gs
jmp
adc
sub
xor
retf
int3
sub
mov
pop
fistp
(bad)
and
jle
sub
pop
sbb
addr16
dec
outs
push
(bad)
lods
inc
je
fisub
popf
clc
and
pop
outs
cmp
dec
outs
enter
ficom
cdq
mov
shl
xlat
lahf
and
add
les
fst
jp
mov
lock
push
cmp
or
lods
mov
dec
dec
cld
mov
inc
int3
pop
jne
mov
mov
jmp
(bad)
jne
lods
sbb
mov
popa
gs
ds
sbb
jb
into
mov
mov
dec
sbb
and
pop
in
into
add
dec
call
jns
repnz
or
push
jne
and
out
cmovb
and
push
xchg
and
and
fild
inc
lahf
add
jnp
ja
cli
or
mov
bound
add
adc
test
jns
xchg
mov
jge
lods
and
cmp
or
xchg
test
loopne
mov
inc
and
jbe
aas
inc
mov
add
in
sbb
pop
cld
out
jmp
adc
cmc
in
rol
mov
mov
test
in
(bad)
movs
jns
in
xchg
mov
out
inc
xor
js
xor
jo
push
idiv
sub
and
jle
shl
lea
sbb
call
sub
inc
lock
sbb
and
je
ja
pushf
loopne
lahf
nop
retf
inc
add
inc
ss
or
dec
das
int3
hlt
push
fcom
mov
mov
sahf
jae
loope
sub
call
jo
iret
sar
jge
pop
lock
xchg
nop
xor
mov
jmp
fdivp
or
adc
mov
inc
xchg
mov
push
popa
daa
dec
mov
sbb
out
cdq
daa
lock
adc
lds
sar
cmp
or
mov
sub
inc
or
sub
xor
xchg
imul
lods
in
add
pusha
push
sbb
test
mov
sbb
dec
jae
sahf
jge
jg
inc
mov
lods
cwde
adc
sbb
loopne
xchg
pop
mov
sub
push
and
sbb
out
mov
cmps
ss
dec
mov
dec
call
push
and
repnz
movs
nop
jae
mov
fist
dec
xchg
push
bound
jns
jmp
dec
cmp
sub
push
xchg
push
xor
imul
sbb
mov
xchg
adc
or
loope
xchg
inc
jp
and
cmp
mov
or
cli
dec
pop
sbb
adc
stos
int3
mov
dec
cmps
xor
cmp
out
mov
add
cmp
xor
icebp
cmp
les
pop
and
ins
fxtract
aas
ficom
mov
jb
mov
mov
inc
mov
popa
pop
dec
jg
fldcw
inc
pop
push
xor
add
dec
mov
xchg
fnstsw
dec
hlt
push
adc
mov
dec
add
imul
retf
xor
jns
jp
xchg
cld
fldcw
nop
js
test
xchg
es
mov
inc
jmp
mov
out
scas
popa
out
std
leave
js
stos
popf
test
mov
ds
mov
push
push
arpl
push
jnp
unpcklps
adc
sub
adc
jbe
adc
inc
xor
js
out
pop
mov
loop
or
fwait
stos
syscall
adc
movs
jae
inc
xchg
mov
(bad)
repz
arpl
mov
nop
push
cmc
sbb
retf
retf
jge
cmp
ins
call
mov
cmp
mov
ss
dec
lods
stos
add
out
fwait
push
xlat
outs
jnp
rcl
int
xor
outs
and
repz
xchg
and
gs
xchg
jb
(bad)
mov
(bad)
aas
jmp
(bad)
ss
mov
js
xchg
mov
pop
ror
cld
(bad)
mov
les
sub
inc
dec
xor
push
pushf
ins
sbb
push
int
sbb
jmp
cld
outs
sub
xchg
pop
push
aas
cdq
jmp
test
rcl
jbe
in
icebp
ret
repz
pop
xor
outs
in
scas
mov
aaa
pop
cs
mov
pop
inc
cmps
popf
pop
scas
scas
aaa
mov
imul
mov
mov
or
dec
adc
push
add
test
xor
adc
xchg
mov
jbe
outs
in
xchg
lahf
ret
jmp
cmp
fisttp
push
and
xor
sub
fldenv
xor
mov
sub
mov
in
(bad)
(bad)
sti
fmul
push
jg
or
gs
in
xchg
mov
bound
js
imul
ret
pop
or
mov
scas
loop
cmp
xor
cmps
xor
adc
mov
iret
pop
pop
jbe
push
cmp
pop
xchg
and
rol
add
xor
call
inc
test
push
sar
test
inc
dec
add
sub
cmp
imul
adc
cmp
mov
sar
fldenv
push
test
rcl
daa
movs
test
sub
push
or
sbb
cmp
mov
sti
or
mov
push
xor
lahf
lds
mov
xchg
mov
ins
cwde
jmp
les
(bad)
out
xchg
jge
bound
jb
call
sbb
movs
dec
hlt
in
in
movs
out
lds
daa
cmp
(bad)
cs
jmp
imul
rol
jmp
cs
xchg
add
in
add
jne
pop
cmp
(bad)
adc
or
inc
jecxz
pop
xlat
stos
or
out
jbe
pop
mov
lahf
xor
rol
pop
mov
xchg
in
fld
lea
inc
jl
into
inc
mov
outs
aas
ja
mov
xor
xor
fcom
stc
scas
sbb
pop
sbb
inc
cmp
addr16
test
leave
sub
xor
scas
jge
imul
mov
and
das
retf
arpl
or
repz
mov
int3
mov
imul
aas
cmps
std
lea
jge
and
sbb
je
xchg
test
mul
movs
fcomp
repz
jecxz
pusha
jecxz
ja
shr
or
call
sbb
jb
lods
retf
in
leave
addr16
dec
pop
stos
xor
imul
dec
test
inc
cli
dec
xor
retf
imul
add
in
cmps
bound
icebp
or
jmp
out
mov
pop
jmp
push
inc
add
lds
mov
loopne
adc
or
mov
inc
and
les
push
xchg
fwait
aas
dec
mov
add
pop
ret
add
xchg
or
xchg
scas
push
cmps
dec
(bad)
in
sti
lea
sub
fist
sub
jnp
popf
add
addr16
xor
push
shl
in
fucomi
lock
pop
pushf
xchg
inc
pop
jp
fdiv
pop
loopne
loop
rol
pop
push
push
call
stos
fsub
mov
inc
xchg
out
lds
fimul
stc
push
jae
das
jb
lea
in
add
rcl
mov
mov
xor
jne
cmps
push
sub
imul
aad
jl
mov
shr
xchg
cmp
stc
mov
out
adc
push
pop
mov
leave
stos
outs
icebp
ror
pusha
sub
inc
jne
dec
adc
enter
lds
dec
pop
cmps
or
loope
mov
mov
jg
in
xchg
mul
xlat
mov
sbb
je
and
(bad)
aaa
and
scas
xchg
jl
gs
pusha
cmp
fwait
jae
loope
pop
shl
jns
in
test
add
push
out
cwde
(bad)
dec
or
outs
sub
lea
mov
pop
sub
or
mov
lahf
or
adc
jg
xchg
mov
nop
mov
das
push
imul
and
jg
inc
sbb
jnp
cmp
imul
das
xchg
das
jnp
sbb
xchg
sub
mov
mov
sbb
mov
xchg
add
mov
mov
sub
aas
rcl
jge
sbb
in
xchg
lods
adc
jge
popf
adc
mov
push
test
sub
fdivr
sub
dec
pop
adc
lock
fidivr
xchg
imul
(bad)
adc
sahf
fwait
in
repnz
enter
lea
push
loopne
retf
icebp
in
mov
xchg
xor
mov
dec
(bad)
pop
cmp
and
dec
(bad)
jmp
and
in
xchg
jmp
pop
xchg
xor
mov
int3
sub
push
push
test
cmp
outs
idiv
cmp
sbb
jns
mov
xchg
pop
jecxz
idiv
and
xchg
(bad)
cmp
call
xchg
mov
pop
push
fisub
cld
xor
jae
ss
jmp
mov
push
rcl
call
pop
out
xchg
neg
(bad)
aas
pop
or
jl
pop
dec
ins
out
call
mov
mov
fldcw
ficom
ret
mov
jle
dec
cdq
add
sub
cmp
(bad)
fisubr
xor
daa
sub
mov
mov
(bad)
sti
pop
jle
add
adc
pop
xchg
push
xor
cdq
ins
hlt
dec
jecxz
xchg
and
xchg
cmp
aad
in
cmp
nop
(bad)
mov
jecxz
xlat
xchg
mov
mov
push
adc
dec
nop
sahf
sub
sub
pop
inc
shr
imul
fnstsw
push
jecxz
fsub
pop
push
adc
mov
(bad)
jg
adc
movs
ds
sti
sahf
dec
xor
jnp
sub
lds
jmp
xor
mov
dec
aas
pop
push
nop
xor
cmp
pop
mov
inc
cmp
or
jp
adc
xchg
fisubr
and
or
jle
mov
dec
mov
xor
add
dec
sbb
loop
add
mov
(bad)
repnz
rcr
xchg
into
or
test
stos
mov
push
cmc
test
cld
test
sbb
test
jg
int3
push
int
add
xchg
ins
jecxz
pop
mov
mov
je
(bad)
mov
dec
es
leave
push
addr16
xchg
test
mov
xor
jo
int
xchg
lahf
sbb
scas
push
dec
nop
in
sar
sbb
jp
pop
test
ret
sbb
or
arpl
cld
sub
js
xchg
movs
cmp
pushf
cmp
(bad)
mov
movs
cmp
retf
mov
cmps
ins
ss
out
test
push
sub
add
test
mov
or
xchg
xlat
push
mov
neg
mov
and
scas
sub
cmp
jo
push
dec
lea
add
pop
sbb
pop
cmps
fcmovnu
mov
add
inc
(bad)
pop
cld
sbb
sub
call
(bad)
pop
sub
xor
sbb
je
das
popa
xchg
xchg
mov
int3
rcr
cdq
mov
out
sub
jmp
sub
js
adc
pusha
mov
nop
lods
lds
cdq
data16
xor
bound
sbb
ins
sub
lods
imul
js
push
adc
pushf
mov
stc
push
ds
je
div
inc
xchg
mov
or
adc
xchg
mov
cmc
pop
mov
dec
push
jle
fisttp
sbb
sub
pop
pop
sub
jmp
mov
daa
stos
out
mov
loope
jle
out
arpl
cmps
mov
xor
out
int3
pop
mov
push
div
mov
sbb
mov
fst
xchg
mov
cmps
jecxz
or
xchg
dec
mov
cmp
jg
loop
sbb
popf
cli
rcl
loope
push
mov
enter
gs
lahf
add
add
jecxz
ins
scas
pop
dec
fdivr
ficomp
cmp
mov
mov
int
std
mov
pop
dec
push
cwde
out
ja
(bad)
adc
gs
mov
and
adc
pushf
xor
mov
cmp
jg
std
push
test
loopne
add
outs
jno
test
push
test
fst
mov
push
xor
mov
cmps
ret
xchg
inc
xor
ret
dec
sbb
enter
out
add
ins
add
xlat
rcr
not
js
sbb
mov
cmps
stos
add
loop
aad
ss
scas
mov
xor
xchg
mov
icebp
ds
and
push
jmp
dec
ret
lods
addr16
pop
jg
inc
fiadd
punpckhdq
(bad)
(bad)
(bad)
jg
(bad)
aaa
ds
jl
pop
aam
pop
xchg
js
cli
mov
stos
in
push
ss
or
xlat
xchg
or
or
in
inc
rcr
pop
enter
mov
push
dec
rcl
mov
mov
neg
adc
nop
or
mov
out
xchg
les
jg
cmp
aaa
pop
pop
cmp
pop
dec
in
cwde
retf
aas
arpl
dec
pop
or
in
imul
loop
jbe
sbb
add
adc
shl
push
xlat
sbb
retf
dec
push
and
aaa
aaa
lea
es
mov
rcl
in
jp
lods
lods
sbb
jb
in
fs
inc
lahf
mov
mov
pop
sbb
lods
ins
sbb
sar
sub
stc
dec
dec
out
in
cmp
and
stos
add
cmp
leave
cld
xor
sbb
int
outs
push
cmp
sub
and
call
fwait
inc
(bad)
pop
ja
sub
adc
inc
retf
aad
cmp
popf
test
push
mov
dec
ss
dec
jae
and
rcl
fcmovnb
cdq
enter
and
dec
jle
daa
sub
adc
mov
adc
xchg
call
adc
push
xchg
ror
pop
(bad)
in
scas
push
pop
test
sbb
imul
pop
or
test
add
inc
push
fsubr
xchg
loopne
retf
push
out
add
xchg
xchg
ja
scas
add
rcr
ja
(bad)
sub
repz
popa
xor
sub
inc
inc
aas
mov
adc
mov
xchg
adc
push
mov
mov
push
mov
push
lahf
inc
push
imul
(bad)
push
cwde
stos
and
dec
imul
into
lock
dec
imul
push
and
xchg
push
ins
cli
adc
data16
sbb
call
or
cmc
out
add
ret
pop
jo
inc
fsin
cmc
or
mov
xchg
clc
pop
scas
xchg
xchg
mov
and
lahf
repz
adc
inc
repnz
push
dec
(bad)
jp
jmp
sub
int3
and
push
mov
dec
in
retf
loope
cld
xor
pop
add
fcomi
xchg
pop
das
mov
fbstp
shr
retf
aam
into
pop
jecxz
mov
adc
es
lock
pop
mov
data16
jle
fsub
retf
ret
mov
(bad)
shr
push
or
mov
ins
push
cmp
mov
lea
lea
test
or
push
push
dec
lahf
pop
or
sar
in
or
mov
mov
les
add
nop
loopne
fisub
push
adc
mov
push
dec
in
fistp
cs
xor
neg
inc
adc
lods
outs
mov
ins
cmps
xor
pop
sub
iret
xchg
lahf
pop
add
adc
cmc
test
xor
(bad)
js
fcmovnbe
dec
or
or
cmp
jnp
sub
sub
in
jmp
(bad)
cld
jns
sub
call
xor
sbb
gs
(bad)
sbb
enter
in
xor
call
pop
sub
lods
(bad)
pop
icebp
sub
push
ins
mov
or
pop
(bad)
jb
repz
sti
shl
cmp
xchg
sub
gs
mov
aas
fld
fwait
sbb
ffree
pop
ror
ja
lea
sub
gs
dec
dec
out
dec
test
mov
sbb
lods
std
cmp
in
retf
cwde
cdq
jmp
push
lea
cmp
mov
int
(bad)
cld
jns
lea
push
jnp
inc
or
(bad)
dec
cmp
outs
jb
and
pop
int3
daa
fist
xor
inc
sbb
xchg
add
(bad)
les
retf
mov
cmp
pop
mov
and
xor
mov
sub
add
ror
xchg
fstp
jnp
test
add
mov
jns
(bad)
rol
ficom
addr16
gs
mov
mov
dec
add
loop
mov
idiv
mov
movs
mov
mov
sar
dec
data16
pushf
stos
cdq
pop
out
or
inc
imul
jmp
(bad)
jmp
imul
cld
popf
xchg
(bad)
cmc
and
sti
icebp
pop
push
not
in
jle
aas
sub
scas
mov
pushf
mov
xor
xor
retf
push
sti
mov
push
repnz
xchg
inc
ret
sbb
lds
iret
pop
push
add
push
inc
cmp
pop
rcr
mov
mov
stos
aaa
jbe
sbb
dec
mov
pop
movs
pop
sub
xchg
fstp
test
arpl
pop
jne
dec
xchg
add
and
push
sbb
jecxz
inc
or
xchg
fwait
inc
scas
sbb
dec
mov
std
loopne
(bad)
sub
cmp
cmps
and
ss
fisub
cmp
in
adc
xor
pop
data16
outs
mov
dec
out
outs
xchg
mov
ficom
sub
add
loop
popa
outs
cmp
jle
xlat
xchg
aam
sbb
daa
int3
data16
dec
enter
mov
stos
xchg
add
jmp
cmc
xchg
push
cld
mov
loope
repz
xchg
stos
inc
sub
test
out
xor
or
retf
(bad)
pop
sbb
loope
call
xlat
cmc
mov
js
push
jae
fwait
out
ds
pop
jmp
setno
jp
jo
cwde
mov
sbb
add
cmp
int3
dec
pop
push
inc
mov
mov
or
std
add
outs
ffreep
icebp
inc
xor
lods
(bad)
retf
push
mov
sub
inc
gs
retf
dec
push
mov
xchg
aas
jmp
add
push
aaa
xor
sahf
dec
das
dec
(bad)
pop
nop
(bad)
retf
xor
imul
fsub
imul
sub
outs
je
jecxz
lods
retf
mov
in
out
mov
xchg
imul
and
sti
repnz
fsub
or
lods
mov
test
movs
inc
jmp
xlat
test
out
add
add
shl
or
push
cmc
aad
das
ins
pop
arpl
cmp
lock
push
adc
jo
fisub
aam
int3
sbb
jb
mov
ret
loope
add
pop
iret
aaa
and
add
rcl
inc
fld
xchg
stc
xor
sbb
dec
sub
pop
ficomp
aaa
sets
fisttp
jno
jmp
cmp
divps
(bad)
ins
and
pop
out
sub
jo
mov
push
jmp
mov
cmp
adc
(bad)
shl
dec
rcr
enter
pop
sbb
xor
cmp
sti
dec
out
shl
das
dec
mov
lea
into
popa
jne
test
jle
sub
mov
and
pop
mov
lods
xor
jae
dec
xor
add
mov
aad
sub
rcl
std
pop
xor
jg
add
pop
jb
jmp
sub
das
mov
clc
stc
inc
push
(bad)
cdq
stos
outs
mov
xor
add
out
(bad)
out
or
or
push
xchg
frstor
xchg
fisttp
das
or
pop
push
int
pop
loopne
cmc
cmp
test
nop
cmc
push
mov
sbb
adc
and
jno
adc
retf
(bad)
xchg
xor
or
in
adc
sahf
adc
push
jae
inc
dec
sbb
fnstcw
inc
mov
mov
sub
sub
lods
out
jb
lahf
sub
push
and
and
daa
adc
test
iret
aam
lods
xor
(bad)
scas
bswap
bound
test
pop
and
xlat
or
icebp
mov
pop
movs
movs
outs
or
rdmsr
fimul
cwde
mov
mov
add
fldcw
inc
xchg
popa
mov
icebp
jnp
mov
or
data16
sub
push
sahf
cdq
ret
test
mov
repnz
cmp
mov
jno
popf
adc
cmc
mov
xor
leave
cmp
and
cmp
cmp
dec
and
cmp
cmps
xchg
pop
xor
push
scas
popa
ret
inc
add
jnp
inc
pop
adc
sub
jns
cmp
movs
nop
jae
es
push
leave
stos
sbb
mov
stos
pop
and
cmp
sti
lock
popa
push
scas
fild
fstp
jp
sbb
out
mov
fisttp
loopne
out
shl
dec
rcr
sub
lahf
cmp
dec
and
jl
inc
jp
mov
cmp
inc
jmp
lea
pop
retf
stos
jns
stc
sub
add
das
(bad)
enter
mov
rcr
aam
xchg
and
push
xchg
adc
retf
loopne
in
(bad)
sar
out
lock
sub
fcomp
(bad)
pop
dec
ins
clc
or
(bad)
sbb
int3
ins
add
fisubr
gs
fidiv
movs
mov
ret
inc
push
out
pop
pop
sub
aaa
fnstenv
mov
jg
mov
add
ss
int
cmp
add
clc
pop
nop
push
ret
jecxz
xor
cli
adc
rcr
fisttp
outs
xchg
mov
or
or
(bad)
add
cli
daa
test
jmp
scas
out
cmps
jmp
xor
xor
outs
fisub
sti
cs
sub
xor
pop
imul
scas
xor
retf
repnz
pop
fimul
int3
imul
cmc
mov
adc
and
jb
ins
dec
mov
fsubr
xor
sti
push
out
mov
(bad)
pop
push
pop
sub
mov
cdq
aaa
(bad)
aam
loop
in
or
movs
add
nop
test
imul
push
dec
stos
out
push
aas
and
push
push
push
dec
nop
push
jge
adc
jo
cs
call
test
jbe
imul
cwde
setae
(bad)
ror
mov
sub
xchg
jb
arpl
out
or
test
inc
ficom
lahf
loopne
loop
data16
cmps
cs
ins
ret
push
and
mov
mov
inc
mov
ficomp
cmps
and
or
ds
pop
aad
call
lea
sub
xor
push
xchg
pop
loop
mov
in
lahf
rcl
cli
sti
jecxz
dec
lds
shl
cmps
push
retf
dec
xchg
les
shl
jnp
cmc
push
xchg
data16
test
mov
inc
mov
lahf
es
sub
pop
shl
popa
cwde
ror
mul
rcr
iret
jns
aad
adc
out
mov
jnp
das
mov
cld
retf
out
adc
sub
ret
call
add
aaa
retf
adc
cmp
pop
ss
jmp
dec
hlt
sbb
xor
jno
test
mov
cs
shl
lods
cli
mov
inc
mov
retf
dec
mov
jae
test
mov
clc
xor
push
loope
cld
push
and
les
bnd
xor
xchg
cmps
push
stc
or
enter
push
pop
(bad)
imul
imul
xor
aad
sub
popf
mov
jo
cmps
mov
nop
stos
mov
add
inc
xchg
movs
scas
jae
fmul
mov
shl
imul
pop
retf
retfw
or
es
jmp
inc
cdq
push
or
cmps
sbb
dec
in
sub
pop
les
in
adc
not
jne
cwde
push
push
clc
jp
fadd
jb
cdq
sub
add
adc
xor
cli
fdivr
js
cmovno
cld
std
cmp
js
rcl
pop
push
aad
pop
pop
pop
repz
mov
jbe
xor
fst
cdq
cli
push
cmp
sub
sub
imul
retf
(bad)
cmp
loop
cld
adc
addr16
retf
xor
arpl
icebp
dec
out
push
cdq
cmp
icebp
int3
pop
cmp
in
sub
or
sub
test
lods
or
gs
leave
call
rcr
mov
or
fist
(bad)
sahf
imul
sahf
(bad)
movs
adc
or
add
rol
push
push
sbb
sub
mov
cmp
(bad)
inc
dec
push
jg
pop
jge
repnz
mov
dec
xor
scas
cdq
or
cdq
ins
das
push
scas
and
movs
jb
cmps
cs
pop
jns
test
daa
push
pop
jge
clc
pop
xor
jp
or
lock
mov
sub
call
mov
pop
sub
xchg
and
xchg
jbe
lock
nop
out
jmp
xchg
fisub
nop
and
idiv
xor
icebp
pop
sbb
sub
mov
lds
xlat
adc
outs
ins
jo
mov
jmp
and
and
pushf
cmc
dec
leave
xchg
(bad)
xchg
(bad)
clc
dec
dec
jp
pop
int
ds
jb
daa
lods
push
fld
or
into
pop
dec
pop
stos
mov
pop
push
out
jl
xor
imul
jnp
icebp
push
pushw
push
gs
pop
sub
shr
jb
fs
sub
and
dec
add
mov
cmps
mov
imul
push
(bad)
cdq
inc
fwait
outs
imul
pop
fwait
lods
lock
push
bound
imul
std
xchg
pop
test
and
pop
jmp
push
dec
sbb
inc
or
xchg
lods
int3
shl
cmp
sub
mov
sbb
int
inc
pushf
sub
(bad)
outs
mov
rcl
mov
sar
call
and
(bad)
xchg
jmp
jmp
adc
mov
arpl
sbb
xchg
mov
push
cmc
pop
sbb
in
cld
dec
je
mov
push
les
sub
std
aas
dec
sbb
mov
cli
add
stos
sub
cli
dec
int3
bound
and
aas
dec
jo
gs
push
pushf
adc
lock
xchg
loop
pop
sbb
add
adc
ins
pop
inc
pop
lahf
lahf
push
int3
std
mov
call
clc
mov
and
mov
pushf
mov
test
(bad)
cld
enter
add
(bad)
stos
cmp
add
xor
push
jecxz
mov
inc
js
inc
cwde
xor
inc
ret
push
xor
mov
sbb
push
lods
sbb
retf
and
inc
lds
jl
pop
inc
dec
add
test
pop
cmp
outs
neg
shl
dec
stc
jo
mov
sub
popa
xchg
push
dec
test
xor
and
jae
rcl
add
inc
fdivr
stos
arpl
inc
mov
mov
jns
mov
(bad)
bound
leave
mov
xchg
xor
leave
jbe
dec
or
mov
lds
jo
jg
jge
add
cmp
jmp
lds
sahf
inc
mov
mov
xchg
jb
jle
lds
outs
mov
adc
jmp
push
mov
fld
push
push
hlt
mov
pop
lahf
bound
xchg
ficom
bound
inc
in
(bad)
mov
pop
pop
dec
test
aas
addr16
loop
add
inc
pop
sbb
xchg
ja
jge
sbb
add
out
inc
jmp
iret
sti
int
pop
inc
les
push
xchg
add
and
mov
fcmovnbe
mov
sti
sub
adc
inc
fcomp
and
mov
xchg
sti
(bad)
faddp
inc
nop
ret
sti
in
or
cmp
fstp
rcl
imul
sti
jbe
mov
mov
test
or
or
lds
pop
popa
jmp
adc
xchg
aam
imul
in
or
or
fprem1
add
repz
pusha
in
in
lods
jp
xchg
fldcw
or
push
jg
mov
push
cwde
cmp
arpl
addr16
mov
inc
fild
movs
xchg
pop
test
(bad)
ss
rcl
jno
mov
repnz
xlat
mov
test
sahf
loope
pop
mov
or
mov
or
out
call
add
mov
sub
jbe
jne
mov
push
adc
jo
cmp
push
mov
pop
add
ds
test
mov
or
cmp
cld
loop
repz
daa
sti
mov
add
cmp
xchg
call
mov
push
ins
add
fistp
in
es
push
jmp
mov
xor
out
stc
push
fisttp
ror
nop
inc
(bad)
int3
nop
mov
je
add
xor
stc
sbb
mov
out
imul
cli
cmp
call
cdq
(bad)
imul
pop
out
or
(bad)
stc
xchg
push
jle
std
dec
sbb
aas
movs
js
pop
fsubr
sbb
adc
xchg
ds
add
inc
jg
pop
xchg
test
(bad)
(bad)
aam
and
lods
mov
push
sbb
sub
cld
xchg
shl
enter
inc
dec
hlt
in
js
aas
mov
mov
xor
data16
jp
fwait
xchg
popf
dec
bswap
outs
pop
leave
inc
ins
xlat
scas
add
push
gs
loope
mov
jge
out
mov
jle
outs
add
inc
jo
pushf
sub
cwde
xchg
ja
outs
inc
(bad)
jmp
jae
mov
xchg
daa
idiv
sbb
cmp
dec
cwde
xchg
or
mov
lds
ins
test
dec
mov
add
or
pop
mov
dec
data16
xchg
and
mov
push
inc
mov
fwait
inc
fldenv
sub
push
lock
mov
adc
mov
scas
int3
adc
gs
adc
push
push
cmp
cmp
pop
and
lock
or
xchg
fucomi
xchg
ret
pop
std
jmp
adc
imul
or
and
adc
xor
xlat
push
les
cmp
scas
or
inc
stos
(bad)
or
sahf
jp
repnz
(bad)
pop
mov
add
hlt
jbe
jmp
jae
ds
cwde
stos
pop
mov
dec
sti
ror
push
scas
call
aaa
ffreep
or
shl
sbb
jge
leave
dec
clc
(bad)
jo
xor
mov
cmc
and
pop
iret
adc
lock
dec
lods
cs
sub
rcr
sub
pop
loop
sub
ret
xlat
push
iret
cs
repnz
jb
dec
add
push
gs
fwait
inc
sbb
pop
jnp
cli
(bad)
adc
movs
clc
cmp
outs
rcl
and
xor
cmp
add
frstor
(bad)
sbb
pop
xor
aad
add
push
icebp
mov
mov
stc
mov
jge
mov
(bad)
call
stos
cmp
cld
stos
iret
xchg
jl
add
dec
mov
pushf
ror
scas
sahf
js
mov
xchg
jae
sar
sub
outs
mov
stos
xchg
mov
push
push
enter
(bad)
outs
add
or
jmp
cmps
add
into
push
sbb
popa
mov
dec
jg
inc
dec
push
js
push
mov
std
mov
push
jl
push
ret
add
xlat
pop
cmp
xchg
mov
outs
mov
mov
mov
icebp
test
imul
outs
fldcw
pop
out
xlat
xchg
lods
jnp
xchg
js
out
xor
add
jbe
cs
or
scas
pop
cdq
shl
cwde
sub
push
sahf
pop
das
(bad)
dec
lods
leave
adc
aaa
stos
lods
je
aam
mov
add
and
test
or
jg
addr16
fist
sub
test
xlat
and
xchg
shl
jbe
ret
jl
repnz
int
and
clc
sub
xchg
ret
ins
in
mov
out
dec
cs
inc
leave
iret
sti
xchg
mov
inc
dec
inc
jecxz
adc
push
loopne
sub
xor
and
ss
mov
dec
repz
push
jbe
sbb
sahf
mov
icebp
jb
ret
jo
cmp
lea
sub
jl
sbb
test
sbb
pop
pop
sbb
jae
lahf
mov
fwait
mov
dec
mov
xor
scas
fidivr
lds
out
popf
shr
pop
cli
xor
push
shl
or
addr16
cmp
shr
sti
add
xor
retf
pop
sbb
jnp
fs
sbb
in
mov
pop
jl
(bad)
ja
and
add
sub
xchg
xor
adc
in
jne
cli
cmp
es
xchg
out
push
and
retf
icebp
push
mov
sub
adc
addr16
cmp
cmc
rcr
jnp
mov
cmp
ins
int
pop
out
inc
jl
mov
mov
loop
scas
push
sbb
inc
pop
and
xchg
xor
es
jo
mov
loope
loop
int
pop
and
adc
aaa
and
push
stos
or
outs
add
dec
pop
ds
ins
mov
test
sahf
dec
adc
mov
aam
jmp
int3
xchg
ins
mov
adc
call
iret
mov
outs
mov
pop
fsubr
pop
mov
adc
pop
cmp
mov
sahf
in
xor
sub
push
adc
sbb
xchg
cmps
rcr
scas
fnstsw
pop
sub
adc
repnz
mov
test
cmps
sub
jge
jno
dec
bound
je
out
push
test
xor
cmp
clc
stos
dec
cmp
inc
retf
jnp
dec
xchg
and
mov
cs
xchg
or
adc
call
xchg
pop
iret
pop
push
(bad)
mov
cmc
mov
xlat
sbb
std
loope
sbb
mov
test
jle
jno
sub
push
cmps
xor
adc
(bad)
mov
pop
mov
(bad)
mov
pushf
xor
clc
shr
cmc
clc
jmp
(bad)
scas
xchg
stos
stos
aam
arpl
es
add
push
enter
mov
mov
out
and
pop
push
inc
(bad)
cmp
loope
pop
sar
add
or
sbb
or
mov
fnstsw
push
fst
daa
movs
or
dec
in
(bad)
lods
inc
mov
jge
inc
popf
fsubrp
cmps
push
dec
push
(bad)
sub
outs
jmp
sar
lods
mov
stos
or
lea
out
aaa
stos
into
or
jecxz
retf
push
aam
ds
or
in
mov
xchg
xchg
or
fmulp
das
pop
push
jbe
fidiv
test
(bad)
dec
cmp
ror
sti
clc
arpl
cmp
sbb
mov
push
inc
xchg
sub
adc
test
adc
mov
leave
pushf
in
popf
repnz
inc
dec
ret
dec
test
mov
cmp
or
bound
dec
inc
imul
aad
mov
adc
in
cld
test
sub
in
push
repnz
cwde
inc
fidiv
mov
cdq
mov
dec
adc
test
test
sbb
or
sub
pop
leave
jns
in
jle
pop
xor
sub
in
out
or
jp
es
shl
cwde
sub
pop
jo
call
cmp
stos
stos
and
sbb
xchg
fucomp
inc
push
cmp
rcl
ja
scas
mov
test
sub
cdq
push
in
cmp
jecxz
sbb
fidivr
mov
enter
in
icebp
fild
lods
sbb
aad
xor
xor
jno
pop
ins
cmp
clc
push
sub
and
push
leave
jnp
repz
pushf
and
sbb
jb
int
call
jne
into
aas
pop
aad
mov
push
pop
cmp
push
(bad)
int
jmp
es
mov
mov
shl
push
cmc
fdiv
mov
test
sub
(bad)
gs
mov
mov
(bad)
xchg
jnp
hlt
xchg
adc
pop
inc
(bad)
mov
push
mov
cmp
adc
or
fst
cdq
xor
push
cmp
dec
test
call
ss
push
xchg
mov
push
jb
sub
enter
adc
imul
mov
mov
test
jno
push
cmp
xchg
mov
or
lods
cmp
adc
sbb
cmp
add
sub
pop
inc
fs
xchg
dec
aas
dec
hlt
ds
xchg
int3
fnstcw
test
sbb
inc
or
ret
cmps
sar
dec
and
icebp
cdq
sahf
leave
mov
push
mov
das
or
push
js
jnp
xor
aaa
test
xchg
xlat
adc
jns
jbe
pop
cli
ret
cld
sbb
test
xor
push
stos
adc
pop
sbb
cmp
stos
fcom
mov
and
sbb
xchg
rol
adc
mov
shr
test
pushf
sbb
xchg
in
xor
dec
test
inc
pusha
popa
repz
popa
add
xor
in
lahf
stc
xor
xor
add
lock
pop
cmp
out
sar
clc
cdq
xor
sub
xchg
xor
rcl
mov
fst
mov
sub
test
jle
xor
aam
out
push
scas
fisttp
dec
repz
ret
pop
mul
hlt
xchg
jb
imul
enter
sbb
popa
dec
(bad)
lods
jg
out
pushf
ss
adc
inc
outs
mov
mov
in
and
movs
xor
out
add
lods
mov
cmp
push
mov
mov
xlat
nop
mov
repz
pop
xchg
mov
fstp
aam
jns
ret
adc
clc
sbb
nop
jp
mov
and
adc
xchg
adc
mov
sub
sbb
add
or
push
mov
dec
mov
xor
fbstp
fwait
or
and
aad
test
xchg
mov
adc
int3
xor
dec
fs
adc
sub
cli
push
mov
mov
xor
mov
jl
cmp
int
sub
ss
int
(bad)
test
retf
push
or
or
stc
xor
pop
dec
pop
mov
or
adc
fwait
in
test
je
adc
(bad)
fdiv
dec
sbb
mov
movs
stos
push
sbb
add
or
in
enter
pushf
jno
and
(bad)
sub
xchg
ds
out
mov
fmul
cwde
movs
icebp
lods
jge
xchg
into
call
adc
adc
push
pop
dec
addr16
and
retf
cmps
mov
ss
inc
or
cli
pop
and
js
(bad)
scas
mov
xchg
cmps
and
(bad)
push
mov
mov
mov
xchg
xor
or
aad
ins
dec
les
icebp
add
ficom
ja
xchg
into
mov
xchg
and
dec
dec
addr16
cmp
call
and
push
mov
shl
arpl
retf
push
cmp
or
jge
imul
and
xchg
dec
and
mov
aad
push
mov
jae
or
test
retf
cmps
jns
mov
sub
mov
inc
pop
das
mov
dec
push
imul
xor
sub
add
out
push
xchg
mov
jge
je
(bad)
jp
cmps
popf
sbb
cdq
push
add
clc
pop
hlt
das
sub
lods
bound
mul
cmp
xbegin
push
adc
pop
xchg
jmp
or
leave
sbb
les
ror
inc
push
sbb
adc
sar
rol
sahf
sar
ds
div
mov
lea
int
lods
rol
sbb
add
ficom
leave
cmp
mov
call
xor
cmp
sub
popf
mov
pop
or
sbb
jp
dec
dec
jecxz
mov
sbb
cdq
xor
(bad)
(bad)
dec
lods
es
add
call
call
push
nop
cmps
jp
mov
xlat
mov
xchg
ret
nop
ret
jo
mov
test
movs
aam
fnstsw
push
mov
lahf
ss
ins
push
add
fisub
lock
into
jle
in
enter
jno
push
add
rol
sub
aam
lsl
push
mov
ret
ins
push
sbb
xor
mov
mov
add
fist
add
fadd
sbb
rcr
dec
fmul
and
jno
fldenv
div
mul
jnp
add
xchg
out
jae
push
test
mov
sub
lods
xchg
push
mov
out
cmp
and
loopne
cmp
imul
mov
lods
cdq
fcomp
jl
(bad)
imul
hlt
std
sbb
shr
push
popa
dec
cmps
movs
lods
and
cmp
(bad)
retf
jno
push
shl
adc
lahf
jne
push
mov
das
aas
lock
mov
sbb
pop
inc
not
push
mov
movs
xlat
cmp
jo
ja
dec
cmc
mov
retf
(bad)
and
sub
mov
and
mov
stos
test
jge
or
shl
mov
lahf
add
jge
sbb
outs
popf
leave
je
and
not
into
pop
pop
mov
push
add
ret
sub
fisub
and
repz
pop
jmp
ss
or
in
mov
mov
mov
sbb
pushf
movs
jle
dec
inc
ja
inc
movs
mov
mov
(bad)
movs
fwait
mov
retf
inc
dec
scas
mov
in
xchg
pop
pop
xchg
cmp
popa
xor
and
nop
mov
nop
ins
nop
xchg
test
pop
jae
out
jb
dec
push
adc
xchg
adc
fsubr
ja
into
or
clc
les
push
jns
or
fimul
pop
sub
neg
iret
mov
jmp
pop
scas
mov
mov
fnstcw
fcomp
mov
mov
nop
stos
xor
sbb
(bad)
cmp
inc
imul
rcl
add
fsubp
mov
ds
daa
jle
add
jge
jg
rcl
sti
loope
popa
es
inc
jmp
imul
inc
ret
loopne
adc
loop
addr16
xchg
jbe
adc
push
sbb
test
mov
(bad)
mov
inc
mov
stos
outs
je
iret
mov
ret
jno
pushf
inc
outs
and
cld
pushf
cwde
and
call
xor
cwde
sbb
aaa
sub
loopne
mov
(bad)
mov
dec
push
sbb
sahf
je
sub
or
dec
pop
pop
fxch
add
ror
cmp
or
jbe
or
(bad)
in
in
sbb
or
je
push
lock
dec
adc
sbb
cmps
loop
(bad)
push
std
mov
popa
add
(bad)
sub
cwde
mov
mov
ins
repnz
sub
mov
or
lock
mov
stc
add
add
push
(bad)
mov
cmp
cmp
movs
jnp
cmp
and
cmc
aam
jbe
adc
and
push
mov
cmp
mov
add
add
pop
or
xchg
and
test
dec
inc
pop
je
push
dec
bnd
and
je
jmp
ss
mov
xchg
dec
mov
push
inc
cmp
lea
push
adc
add
std
popf
mov
fcom
mov
or
mov
adc
mov
lock
(bad)
mov
sahf
out
and
lock
pop
sub
mov
mov
and
mov
retf
mov
mov
xor
or
loope
dec
test
adc
fidiv
(bad)
and
popf
mov
int
ror
adc
enter
icebp
sbb
adc
call
mov
pop
ds
popa
fcmove
sbb
(bad)
jge
les
add
sti
(bad)
jl
fcomip
pop
and
or
pop
loope
pop
dec
mov
mov
dec
sbb
movs
je
mov
dec
adc
adc
js
and
ret
cmp
add
cs
cmp
jae
push
(bad)
inc
cmps
or
mov
adc
out
std
cmp
pop
cmps
adc
fnstsw
daa
mov
cs
std
xor
xchg
cs
rcl
arpl
arpl
es
dec
push
loopne
pop
mov
or
(bad)
iret
add
ss
xor
daa
mov
fwait
mov
cmp
cmp
mov
rcl
sbb
mov
sbb
xchg
mov
mov
xor
mov
or
cli
mov
jmp
mov
pop
mov
(bad)
inc
mov
stc
cmps
push
sbb
xor
ror
pop
out
pop
cmp
div
cmp
or
push
dec
mov
ror
(bad)
into
pop
pop
jl
sbb
add
dec
lods
xchg
xor
pop
push
cmp
add
in
cdq
push
xor
and
mov
mov
ret
retf
(bad)
das
mov
stc
pop
inc
mov
or
aam
xlat
xlat
imul
xor
xchg
mov
pop
pop
xchg
mov
mov
(bad)
fldcw
rcl
dec
mov
cmp
aas
std
ja
imul
fdiv
adc
pop
push
cmps
mov
retf
ret
jae
les
fld
int
inc
pop
xor
lea
pushf
jae
mov
mov
js
or
dec
test
adc
pop
ds
xchg
pop
(bad)
enter
cli
(bad)
aam
sbb
iret
mov
xchg
xor
cs
repz
adc
movs
push
in
lahf
sbb
icebp
and
push
add
rcl
sbb
outs
inc
retf
mov
mov
dec
jb
lods
push
shl
sbb
xchg
ins
ss
mov
outs
test
movs
xchg
fwait
outs
or
ror
jae
sar
pop
adc
jno
adc
push
in
arpl
test
push
push
xchg
jle
neg
out
aaa
out
mov
xor
add
xor
das
rol
bound
jge
push
mov
je
and
lock
int3
(bad)
rol
mov
inc
adc
and
cmp
cmps
adc
cmc
push
(bad)
loopne
push
mov
add
sbb
push
jg
daa
pop
jmp
mov
lods
mov
pushf
lahf
mov
and
jl
and
push
fistp
adc
retf
sbb
mov
or
dec
std
or
aad
xor
cmp
pop
into
mov
inc
dec
fdiv
or
mov
pop
sbb
pop
mov
xchg
xor
mov
mov
dec
cmp
popa
rcr
sbb
inc
(bad)
push
stos
mov
adc
(bad)
outs
xchg
cmps
leave
xor
ret
lods
mov
repnz
jb
stos
sub
mov
jl
mov
push
daa
and
push
mov
lahf
mov
out
jg
cli
mov
cmps
lock
mov
pop
and
js
cmp
(bad)
shr
retf
(bad)
enter
and
dec
or
test
xor
or
pop
dec
(bad)
aas
daa
inc
inc
fwait
cmp
sub
pop
popf
aas
add
xor
mov
out
test
sbb
jns
(bad)
fsubrp
in
cli
test
xchg
sbb
adc
out
add
inc
mov
and
les
push
and
ficom
bound
es
leave
mov
xor
mov
xchg
cmp
jae
adc
dec
xchg
sbb
hlt
cwde
pop
iret
mov
cmp
jns
mov
adc
cmp
add
retf
pop
push
aas
repz
fadd
mov
inc
loop
fidiv
or
xor
adc
nop
dec
push
mov
sti
lods
mov
hlt
mov
movs
cmp
cmp
lds
(bad)
stc
mov
out
push
push
out
or
add
fs
add
ds
cmp
sub
ret
pop
sbb
mov
pop
pop
pop
aas
mov
fidivr
fild
out
and
lods
sub
mov
push
dec
cli
test
in
jecxz
dec
mov
fcomp
xchg
and
jl
popa
mov
cwde
fnstenv
std
pop
movs
movs
push
in
test
out
paddusw
and
dec
mov
arpl
(bad)
pop
neg
call
xchg
xor
or
stc
sbb
sbb
ret
push
sub
xchg
cdq
push
pop
mov
rcr
cmc
add
sbb
mov
xchg
js
add
lds
hlt
je
sahf
or
mov
(bad)
pop
arpl
and
jne
lods
imul
int
push
nop
ja
scas
jno
pop
jmp
jmp
daa
mov
movs
cmps
sbb
rol
jg
int3
lods
jl
enter
ret
cld
xchg
je
and
out
cmc
pop
in
or
ret
add
in
test
or
in
cdq
shl
popa
stos
test
or
pop
cmp
pop
push
mov
jecxz
xchg
mov
ret
inc
sub
mov
sbb
dec
push
cmp
sbb
ror
aaa
cmp
mov
xor
in
jmp
imul
iret
push
adc
jecxz
loop
lds
or
mov
cwde
popa
int3
loope
lods
gs
call
retf
icebp
test
push
or
into
jns
cdq
and
push
out
sbb
cmp
out
pop
cmp
gs
clc
mov
aaa
out
fstp
or
stos
mov
mov
sub
fld
out
xchg
push
push
std
push
data16
lods
adc
mov
mov
std
dec
cdq
mov
fimul
fstp
push
pop
iret
push
mov
rcl
int
hlt
retf
cwde
lods
inc
aam
je
vpaddw
push
in
ds
scas
shr
sub
into
and
xchg
pop
add
dec
or
sahf
cwde
pop
add
xor
data16
cmps
in
sub
add
xor
dec
jp
out
test
nop
adc
push
aas
xchg
mov
aam
sub
out
xchg
mov
mov
test
test
repz
int3
inc
(bad)
arpl
dec
stc
enter
push
xor
retf
mov
enter
adc
cmp
(bad)
mov
lods
jge
retf
cmps
imul
jmp
jl
mov
sbb
adc
lods
in
inc
fs
pop
dec
es
jmp
clc
fs
pop
mov
fild
adc
fcomp
outs
enter
adc
add
xlat
dec
mov
adc
idiv
faddp
div
std
ret
(bad)
inc
add
add
aam
mov
lods
enter
loop
int
cmp
lock
or
pop
cdq
add
jmp
call
dec
ds
ins
enter
pop
or
dec
inc
push
pop
add
push
cmp
sbb
pop
retf
pop
pop
stos
mov
lds
(bad)
mov
jmp
pop
xchg
in
rcr
stc
xor
or
mov
aaa
jle
dec
add
cwde
cwde
std
cmp
jge
sbb
push
cmps
(bad)
push
lds
adc
jle
sbb
stos
xchg
out
mov
jns
bound
daa
sbb
cmp
jo
(bad)
cmp
adc
mov
dec
in
int
mov
mov
(bad)
data16
(bad)
push
push
push
sbb
mov
imul
sti
out
and
xor
pop
mov
sbb
push
pop
inc
xor
cli
pop
add
sbb
leave
cmp
or
push
sbb
fidivr
or
ins
iret
fistp
mov
outs
repz
jnp
outs
popa
repnz
xchg
inc
add
stos
xor
lods
pop
mov
pushf
jg
mov
jo
cmc
not
push
int
or
mov
aam
dec
in
adc
stc
les
inc
pop
lahf
(bad)
lods
sbb
cmps
int
or
or
gs
xor
sub
loop
push
cli
out
push
adc
rol
mov
(bad)
fiadd
xor
mov
repz
push
and
jae
les
and
call
mov
in
pop
int3
sbb
enter
fldcw
pop
and
inc
std
mov
ds
ret
lods
or
inc
jns
and
xchg
push
xchg
movs
push
jno
popf
adc
leave
sbb
push
(bad)
fisttp
mov
int3
fdiv
int
push
sbb
arpl
(bad)
jns
push
call
push
and
mov
ja
bound
int3
add
xor
xor
mov
mov
test
mov
cld
pop
cmp
shl
push
icebp
adc
or
jne
mov
jnp
mov
dec
cmps
sbb
mov
sbb
jg
cmp
sar
mov
jp
mov
push
loop
arpl
jno
(bad)
imul
jle
xchg
mov
push
sahf
xor
stos
cli
push
xchg
inc
jnp
xlat
jo
out
cmp
xor
mov
retfw
add
sub
xchg
xor
neg
ins
lock
ret
jge
sar
fsub
adc
dec
lea
sub
imul
and
ins
pop
test
jmp
dec
out
pop
jecxz
lds
fcomp
mov
shl
and
or
lds
int3
int
sbb
repz
ret
aas
shl
and
inc
nop
mov
data16
(bad)
mov
lds
stos
lods
and
jae
data16
test
adc
aas
xchg
sti
(bad)
sub
mov
das
pop
dec
ja
ja
out
mov
push
add
loopne
add
xlat
and
jmp
sub
push
pusha
push
stos
mov
addr16
js
mov
cmps
cmp
mov
out
mov
jnp
bound
or
sar
mov
lods
dec
jbe
mov
jo
ins
frstor
jg
sbb
adc
jle
jecxz
mov
xchg
es
xchg
dec
or
add
xchg
mov
mov
sti
cmp
xchg
sub
pop
and
pop
mov
aam
cmp
mov
jge
push
jmp
fmul
dec
fs
inc
push
push
push
xchg
out
bound
cmps
(bad)
(bad)
or
mov
jl
retf
mov
(bad)
jo
in
cmc
cwde
ret
in
add
inc
or
ins
push
push
out
shl
fst
sar
(bad)
std
pop
cwde
aad
cmps
pusha
call
repnz
sahf
outs
outs
push
repz
pop
mov
les
imul
call
push
push
int
outs
fs
into
mov
xchg
or
inc
jmp
int
cmp
rcr
mov
mov
and
mov
int3
test
aaa
xor
dec
lahf
mov
arpl
loopne
call
adc
popa
and
adc
rcl
xchg
adc
push
fild
cs
(bad)
cmp
cld
pop
cli
mov
fistp
xor
sbb
jne
xchg
jbe
jmp
(bad)
int3
(bad)
(bad)
aad
inc
and
test
(bad)
ds
push
jl
(bad)
stc
jmp
xchg
sahf
daa
fimul
inc
test
xor
push
pop
mov
jb
dec
cmc
sub
jnp
xchg
nop
fidivr
out
lahf
mov
aaa
dec
dec
sub
retf
mov
and
scas
fcmovnb
or
or
data16
cmp
stos
shl
mov
mov
xlat
xor
inc
push
pop
dec
xchg
in
movs
movs
lods
jge
icebp
cwde
dec
pop
dec
push
(bad)
fild
pusha
inc
pushf
xchg
repz
(bad)
adc
enter
xor
add
aad
pop
add
or
scas
add
and
push
add
inc
pusha
popf
inc
jmp
add
jecxz
sbb
pushf
iret
mov
out
popf
dec
adc
dec
push
inc
mov
adc
xor
fldcw
cmp
mov
sbb
repz
std
aas
push
cld
xor
iret
dec
or
push
sbb
mov
fwait
jno
in
push
or
pop
cwde
out
push
or
adc
push
test
cmp
cmp
out
sbb
retf
push
idiv
inc
push
xchg
sub
and
cmp
cmps
std
jmp
retf
add
stos
xor
jbe
adc
imul
dec
pop
call
cmp
sub
jmp
cmp
loopne
ror
and
inc
jmp
or
jle
push
in
jl
enter
nop
test
int
popa
pushf
(bad)
fstp
adc
popf
call
push
cs
dec
push
clc
add
(bad)
cmp
dec
arpl
jno
test
imul
jae
ret
(bad)
shl
push
loope
or
fsub
fwait
mov
iret
mov
xchg
jmp
mov
outs
call
repnz
xor
push
jne
in
cdq
lds
lods
dec
add
(bad)
movs
push
int
gs
fadd
cs
jg
jl
retf
push
stos
cmp
mov
adc
xchg
(bad)
out
aad
push
jmp
jb
arpl
loopne
pop
out
je
das
jecxz
add
mov
pushfw
leave
movs
jno
jmp
mov
mov
push
xchg
mov
pop
xchg
push
cs
cmp
ret
jne
push
sbb
pop
push
jo
dec
cmps
cwde
jmp
std
push
push
test
xor
in
and
cs
push
jle
pusha
cmp
mov
and
jnp
sub
and
jge
fld
push
mov
ss
jecxz
xchg
popa
sbb
or
mov
add
mov
sbb
scas
ret
lods
xor
mul
ret
xchg
xor
xchg
xor
gs
shr
and
mov
imul
cmp
inc
lock
fidivr
(bad)
push
packsswb
and
(bad)
mov
mov
push
loope
and
cmp
mov
push
mov
xchg
imul
cmps
sti
jbe
aam
dec
retf
and
pop
mov
or
inc
lahf
xchg
aad
ja
xchg
mov
mov
dec
pop
popa
and
into
shl
cmps
and
nop
xchg
pushf
arpl
mov
popf
leave
fidivr
pop
cs
push
jl
adc
push
add
cmp
icebp
push
mov
pop
mov
call
jb
mov
out
(bad)
and
popf
cmp
adc
cwde
pusha
ins
and
hlt
call
jo
push
jb
outs
push
jns
mov
jge
dec
(bad)
xchg
popf
lods
xchg
mov
lods
cmp
xchg
rol
jae
pushf
lahf
icebp
push
sbb
(bad)
pop
shr
xchg
frstor
inc
outs
call
fisubr
das
mov
clc
mov
bound
or
push
bound
mov
jnp
rol
ret
int
dec
sbb
(bad)
pop
pop
mov
mov
mov
ds
cmc
stc
lods
push
aaa
in
adc
ss
enter
in
cdq
mov
fwait
dec
mov
dec
mov
jbe
dec
sbb
cmps
inc
cli
and
mov
mov
xchg
xchg
mov
stc
xor
pop
pusha
add
imul
lods
and
(bad)
in
lock
mov
(bad)
call
xchg
iret
dec
and
ficom
push
(bad)
xor
mov
cli
adc
shr
ins
fdivr
push
adc
or
push
outs
scas
sub
hlt
jb
scas
push
mov
inc
pop
ret
dec
retf
js
sub
sbb
adc
jbe
rcr
mov
jno
(bad)
aad
adc
adc
ds
pop
dec
jecxz
aaa
rcl
cs
mov
int
xchg
retf
pop
jg
enter
lds
jbe
sbb
push
movs
mov
pop
cmps
icebp
jmp
out
dec
pop
cmc
mov
nop
jecxz
jnp
jo
jmp
xchg
mov
pop
dec
sbb
(bad)
leave
aas
dec
or
loope
push
push
out
sbb
pop
sbb
pop
movs
pop
jne
and
dec
outs
das
aam
fyl2x
imul
into
pushf
sbb
cmc
mov
test
sub
or
push
ins
in
sbb
sbb
rcr
aam
xor
push
fwait
and
sub
sbb
push
push
jmp
cmps
in
ins
jno
movs
es
call
jnp
mov
pop
adc
sbb
js
cwde
cmc
jmp
jne
neg
push
icebp
repz
adc
ret
jne
leave
into
push
pop
ins
jp
lea
push
movs
fisub
daa
neg
mov
ins
add
jo
mov
xchg
sub
in
xchg
mov
es
ret
stc
in
daa
call
sub
mov
push
add
stos
cdq
mov
mov
pop
movs
mov
cdq
nop
or
add
cmp
into
adc
ins
sahf
xchg
fisubr
cwde
xor
aam
mov
int
push
je
ret
sti
fidivr
add
in
shl
enter
and
push
div
cmp
xchg
push
mov
sar
push
cmps
adc
pop
or
mov
and
aam
(bad)
(bad)
call
xchg
loop
jo
das
in
jnp
mov
xor
sub
bound
loopne
cli
sbb
cs
and
je
ins
mov
xchg
or
mov
cmc
sub
or
sub
add
movs
fmul
neg
div
aas
ror
lods
cmps
adc
inc
adc
jnp
shl
cmp
mov
(bad)
mov
jnp
sub
sub
jno
data16
adc
xor
fnsave
pop
mov
sbb
push
mov
aam
jno
fnsave
fdiv
xor
loop
adc
aas
fcomp
mov
(bad)
xchg
retf
fsubp
cli
sub
mov
inc
pop
setns
loope
adc
mov
in
add
jmp
iret
sbb
inc
cwde
mov
inc
and
fstp
dec
sar
sar
push
and
and
fistp
(bad)
loopne
push
and
aaa
pushf
sub
push
dec
ret
shl
test
retf
jne
stos
xor
xlat
sbb
inc
sub
dec
lods
loope
aam
jg
dec
fmul
jmp
dec
ds
adc
cdq
mov
cmp
cmp
and
sub
adc
out
cld
fst
ins
js
and
icebp
push
and
sub
loop
push
movs
sub
jmp
jmp
mov
std
retf
sbb
sub
das
pusha
jle
dec
sar
dec
mov
and
shl
rep
mov
into
pusha
inc
popf
pop
cmps
std
mov
lahf
ss
or
and
bndldx
add
mov
loop
(bad)
test
or
mov
pop
push
push
out
sti
xor
xor
shl
daa
mov
mov
push
loope
leave
inc
dec
repnz
iret
add
loope
xor
mov
nop
mov
mov
mov
(bad)
stos
mov
cmp
fisub
and
xor
data16
push
push
lods
pop
jo
dec
(bad)
out
xchg
pop
mov
ins
jmp
ins
sti
fs
sbb
xchg
(bad)
mov
pop
out
icebp
inc
inc
int
loopne
fstp
mov
bound
and
ror
xchg
neg
pushf
mov
ret
out
fist
pop
ficomp
aad
cmp
and
stc
clc
bound
sbb
push
fsubr
mov
inc
pop
and
jno
push
inc
xor
lahf
push
out
iret
fdiv
pop
cmp
pop
xor
and
fbld
pop
out
jo
adc
test
gs
mov
xchg
bound
mov
push
jae
dec
xchg
ret
into
js
xor
retf
push
add
fnstcw
ds
or
rcl
int3
sti
lods
xor
adc
ins
pushf
xchg
rcl
imul
xor
mov
pop
stos
or
ret
cmc
inc
mov
mov
out
pop
pop
sahf
sbb
lock
adc
cmp
mov
push
dec
retf
movs
stos
loop
add
in
dec
jno
popa
add
adc
jmp
fs
sub
add
mov
mov
and
pop
inc
pop
es
adc
push
jbe
sub
retf
pop
xchg
out
jns
mov
pop
(bad)
addr16
(bad)
aad
and
sbb
sub
sbb
adc
out
xor
mov
sbb
xor
dec
(bad)
pop
out
js
lods
sahf
outs
inc
(bad)
push
aas
sar
adc
repz
jecxz
cmp
(bad)
sbb
add
pop
jmp
cli
cs
sub
jns
cmps
(bad)
rcr
and
or
pop
lds
into
sub
jge
push
jo
loopne
xor
mov
out
out
xchg
jp
int
sti
push
mov
adc
pop
and
sahf
cmc
adc
rcr
jge
iret
cmp
jnp
arpl
inc
int3
and
pop
(bad)
fist
mov
inc
xor
or
inc
pop
jl
pop
mov
aam
add
in
nop
jb
out
add
and
pop
repnz
mov
push
add
mov
mov
jecxz
data16
popf
paddsb
jo
cmp
aam
jno
jne
fisubr
mov
int
mov
data16
cmps
daa
xchg
or
int3
xor
xor
mov
pop
dec
and
out
scas
sub
inc
adc
jo
dec
lods
(bad)
imul
cmp
ja
dec
xchg
dec
cmc
cmp
imul
xchg
mov
(bad)
cmp
cld
aaa
hlt
out
iret
mov
movs
jno
fcmovnbe
les
shr
movs
mov
inc
shl
cmp
sbb
dec
xchg
rcr
add
push
call
cmp
ss
in
jb
stos
lahf
or
test
scas
repz
ret
add
lahf
repnz
rcr
and
lock
push
mov
loopne
push
and
xor
jnp
mov
mov
xor
xchg
add
imul
jb
push
jns
jp
xor
mov
mov
jl
sub
xor
pop
mov
int
pop
shr
mov
mov
pop
cmovno
fld
popa
push
or
mov
xor
ds
jp
sub
(bad)
fprem
enter
or
inc
cmps
mov
or
in
xchg
xor
sub
(bad)
ror
add
aaa
pop
jbe
xchg
push
dec
ins
sti
rcr
push
sbb
cwde
sub
cmp
xchg
mov
cmc
xchg
or
gs
inc
call
push
and
and
imul
fild
in
add
stos
and
sbb
jp
and
cmp
lds
pop
imul
dec
shl
lods
jle
sub
out
into
shr
inc
push
or
dec
out
pop
retf
or
in
out
shl
je
je
(bad)
cmp
das
and
mov
jne
sbb
pop
adc
(bad)
adc
in
jmp
sbb
aas
stos
push
jae
or
jo
jg
mov
cdq
pop
sub
pop
fwait
sbb
out
xchg
jb
test
retf
not
(bad)
inc
cmps
fwait
jecxz
dec
or
lock
loope
push
jp
cmp
push
jne
sbb
mov
(bad)
fst
cmp
jge
int3
sub
cld
stc
(bad)
xchg
out
outs
add
mov
mov
mov
pop
iret
adc
imul
sub
push
xchg
or
jbe
adc
xor
pop
jp
in
arpl
ins
imul
xchg
loop
popa
inc
ds
(bad)
mov
jecxz
mov
mov
iret
fiadd
in
mov
inc
mov
push
adc
daa
stc
neg
hlt
stc
icebp
hlt
lock
inc
mov
cmps
adc
add
sbb
dec
loop
mov
pop
outs
loope
mov
mov
in
es
push
fwait
mov
pop
adc
inc
in
sub
pop
movs
mov
push
cdq
neg
sbb
push
push
(bad)
xchg
jo
push
inc
imul
xchg
lea
pop
frstor
in
xor
(bad)
leave
pop
movs
xor
xor
(bad)
cmp
or
clc
iret
das
cld
jns
dec
lahf
push
shr
ret
add
daa
pop
fild
push
jno
and
add
push
sub
cdq
aad
pop
jmp
movs
call
xchg
cmp
push
jbe
sub
xchg
xchg
push
aad
xor
mov
shl
mov
cdq
int3
in
leave
pusha
xchg
pop
inc
xchg
inc
jb
or
mov
mov
mov
jno
mov
adc
test
adc
push
adc
gs
push
nop
pop
push
and
pop
clc
lods
push
mov
xor
popf
(bad)
jne
cmp
test
xor
mov
add
adc
mov
and
cld
retf
mov
fstp
pop
jmp
aaa
jne
ficom
fnstsw
xchg
in
test
cmp
(bad)
stos
pop
cmp
mov
enter
in
retf
jb
call
retf
test
cmp
jge
imul
ja
xor
test
repnz
pop
gs
(bad)
hlt
inc
jecxz
int
and
mov
inc
fnstsw
mov
add
xor
dec
dec
xor
test
retf
add
aad
add
sbb
push
jnp
aaa
xchg
(bad)
fcom
push
sbb
xchg
xchg
pop
inc
or
retf
cwde
dec
mov
inc
rcl
pop
pop
popf
and
push
add
inc
mov
jp
or
mov
fcomi
jg
xchg
and
and
into
test
pop
or
sbb
xchg
daa
mov
iret
mov
adc
(bad)
fdivr
cwde
add
scas
jmp
cmp
fcomp
xchg
imul
stos
lahf
adc
jle
pusha
or
jge
dec
mov
sub
push
add
inc
jle
jg
pushf
jo
scas
push
cmps
or
bound
aad
dec
sti
or
sti
movs
repnz
data16
popa
in
icebp
sub
push
addr16
sbb
and
nop
das
cmp
aad
jb
popf
addr16
inc
and
stc
fcom
sahf
aaa
and
mov
xor
mov
jb
add
sub
stos
call
loop
ret
mov
add
jp
(bad)
cmp
inc
dec
xchg
stos
fist
xlat
adc
and
addr16
or
mov
jmp
mov
in
xor
sub
sub
inc
dec
pushf
ror
sbb
pop
int
rol
jp
dec
into
enter
dec
std
clc
jbe
mov
sub
and
sub
shl
sbb
fild
clc
das
pop
cmps
xchg
mov
mov
mov
mov
jmp
daa
inc
jp
push
out
mov
repnz
cmp
(bad)
and
sub
rcl
jp
test
es
add
mov
sub
out
ss
fistp
xor
in
jmp
adc
fcom
pop
aam
add
retf
mov
add
sbb
inc
cmps
je
push
lds
adc
lea
sub
push
cmp
sbb
fcmovnbe
sub
jnp
pop
inc
ret
xchg
sbb
cmc
mov
enter
shl
(bad)
ss
cwde
out
sbb
dec
jns
gs
pop
in
mov
sbb
imul
sahf
aas
cmp
call
push
sub
test
test
cmp
and
xchg
lahf
sahf
cmp
mov
push
xor
pop
jge
mul
mov
xor
lods
lds
xchg
data16
(bad)
retf
jmp
outs
daa
sahf
repnz
mov
enter
sbb
pop
clc
or
xchg
add
pop
fistp
inc
inc
dec
dec
fwait
push
xor
int
mov
pop
lock
pop
int
add
push
xor
pop
dec
retf
jo
cmp
mov
je
inc
js
mov
sub
sbb
push
aam
in
push
fst
jnp
jno
jecxz
sub
repz
lods
loop
das
push
cmps
lock
mov
add
int3
jp
jmp
iret
ins
and
pop
push
xchg
out
push
data16
add
mov
cmp
call
mov
xchg
push
sar
aad
sbb
prefetcht0
inc
push
push
sub
fdivr
and
std
div
shl
inc
dec
into
je
mov
(bad)
adc
or
clc
push
xchg
or
push
xor
jle
fwait
and
pop
xor
jo
mov
ins
hlt
pop
mov
inc
call
sti
or
out
xor
data16
adc
(bad)
sub
add
and
xchg
cmp
rol
pop
ret
stos
sbb
test
jb
mov
mov
lock
call
test
push
mov
bound
hlt
loop
scas
scas
push
addr16
or
xchg
add
xor
adc
aam
shl
or
dec
and
sar
sahf
loop
retf
mov
in
leave
cld
cmps
push
scas
jno
nop
fild
inc
(bad)
rcl
mov
cmc
rcr
fdiv
xchg
or
hlt
mov
push
retf
push
mov
xchg
xchg
jnp
rcl
shr
addr16
fadd
and
std
or
cdq
pop
mov
sub
inc
or
daa
in
xchg
cmps
stc
aas
gs
push
sub
rcr
jne
out
xlat
ins
shr
retf
cmp
aas
dec
or
mov
xchg
das
xor
pop
inc
in
ds
cmp
(bad)
fst
shr
mov
mov
sub
imul
int
xchg
xchg
adc
inc
ss
ds
and
outs
arpl
ja
jle
mov
and
adc
movs
cmp
mov
dec
mov
imul
lahf
push
(bad)
cli
jns
rcl
add
pop
out
cmp
adc
repnz
add
pop
loope
out
add
or
xchg
cvtps2pi
adc
mov
ret
aaa
mov
jge
aam
lods
inc
stc
sub
sbb
lods
popf
xor
cwde
mov
dec
bnd
pusha
xchg
inc
pop
pop
cs
jl
cmp
jns
cwde
imul
adc
jg
in
xchg
loope
xor
or
sub
cmp
jo
imul
ret
test
cwde
retf
repnz
xchg
jecxz
inc
cld
dec
inc
xchg
aam
int
push
dec
call
test
mov
xor
sub
or
inc
sub
mov
fstp
rol
mov
imul
test
rcr
mov
jp
jle
sahf
sbb
push
into
popa
mov
adc
add
mov
jns
popf
mov
pop
cmp
add
inc
js
push
mov
lods
pop
(bad)
in
sub
dec
jl
jge
mov
inc
sbb
stos
fadd
lsl
outs
and
mov
adc
movs
fldenv
lahf
(bad)
mov
add
(bad)
test
shr
xchg
stos
std
push
scas
(bad)
mov
dec
sti
push
pop
push
dec
mov
push
push
es
dec
sbb
or
loopne
(bad)
pop
lods
in
pop
ja
jo
popf
xchg
or
jae
addr16
out
pop
mov
icebp
mov
js
cmp
mov
and
xor
fs
addr16
out
jmp
adc
sbb
das
in
jo
dec
fimul
fdiv
adc
iret
js
cmp
cdq
(bad)
leave
or
(bad)
adc
fild
in
shl
mov
cmp
fcomp
xlat
(bad)
jne
scas
xor
dec
mov
mov
jo
jns
or
mov
or
aas
(bad)
loopne
push
jns
call
sbb
call
adc
or
mov
sub
pop
xor
or
mov
imul
repnz
xor
mov
pop
dec
out
imul
cwde
xor
je
outs
popa
xor
jae
add
aas
push
push
in
push
pop
sbb
shr
inc
push
inc
pusha
(bad)
es
sub
mov
mov
ss
(bad)
fwait
retf
xchg
outs
xor
push
in
(bad)
or
push
into
shl
ror
mov
addr16
outs
sbb
jmp
daa
inc
call
mov
ja
xor
pop
and
add
dec
mov
sbb
adc
sub
ds
xchg
sub
cmp
dec
push
(bad)
jmp
mov
xchg
int
inc
fwait
inc
sub
dec
loope
adc
outs
std
daa
fisub
mov
lahf
push
mov
sub
scas
pop
repz
ss
jae
xchg
or
out
push
je
jb
movs
stos
inc
mov
test
mov
fs
inc
pop
leave
mov
or
addr16
jbe
leave
mov
or
xchg
push
sti
inc
and
and
and
pop
push
xchg
inc
iret
icebp
adc
ins
arpl
mov
cs
cwde
xchg
addr16
(bad)
sbb
or
out
mov
rcl
xchg
into
jns
dec
pop
mov
ds
sbb
test
mov
or
or
jnp
add
popf
hlt
xor
cmp
(bad)
lods
xor
je
mov
inc
ins
sub
movs
paddusb
rcr
cmp
cld
dec
iret
fwait
push
and
inc
cdq
mov
out
cld
sbb
jle
push
inc
test
add
cmp
fbld
push
addr16
add
cmp
not
dec
popf
(bad)
je
(bad)
xor
inc
sub
mov
add
mov
and
add
push
fwait
xchg
in
xor
inc
stos
dec
shl
(bad)
je
mov
fsub
xor
inc
nop
repnz
pop
ss
sbb
ins
popa
sar
dec
mov
xor
fdiv
rcl
(bad)
lods
(bad)
xchg
out
inc
outs
iret
cwde
add
or
retw
xchg
jnp
dec
sbb
jne
cmps
psubb
fisub
std
out
mov
fcomp
sub
shr
idiv
in
out
mov
push
int3
and
stos
xchg
sub
pop
and
mov
xor
jmp
ret
push
in
sub
test
push
mov
pop
ins
nop
daa
bound
scas
or
adc
dec
add
adc
push
adc
loop
bound
adc
mov
ret
daa
js
dec
xor
dec
jb
mov
xor
jmp
sar
ins
cld
popf
test
sahf
data16
iret
std
fdivr
add
in
ja
push
jb
mov
mov
push
pop
arpl
mov
lods
sub
idiv
jmp
pop
pop
test
adc
daa
mov
test
fisttp
pop
pop
jge
out
hlt
xchg
loope
mov
stc
jnp
xor
adc
xor
dec
pushf
xor
lahf
mov
sub
repz
stc
aad
int
xor
call
(bad)
jp
cli
daa
outs
int3
jae
push
and
mov
dec
push
sub
mov
mov
xchg
cmp
dec
mov
xchg
inc
stos
xor
jge
clc
mov
jmp
adc
fnsave
add
adc
add
sbb
and
call
aad
data16
cli
jo
cli
pop
data16
xor
iret
lods
fdivrp
fwait
imul
je
lods
rcl
ins
ret
inc
xor
mov
dec
rol
neg
pushf
mov
cmps
std
jle
retf
xchg
xor
dec
add
addr16
mov
call
movs
xchg
xchg
jmp
std
dec
bound
ja
movs
mov
push
add
pop
inc
pop
in
sbb
xchg
mov
mov
icebp
or
clc
mov
dec
dec
stc
cmp
fwait
dec
movs
or
ins
jae
add
popa
aam
push
mov
out
mov
inc
aam
scas
add
test
js
sub
aaa
cmp
xor
sbb
fnstcw
mov
aas
sbb
cmp
add
add
sub
bnd
sbb
jg
clc
stos
pop
shl
pop
sbb
fmul
inc
daa
pop
fimul
jmp
ret
or
mov
fist
pop
xchg
sbb
pop
dec
adc
dec
xchg
mov
sbb
push
mov
dec
test
adc
(bad)
cmc
xchg
call
fnstcw
icebp
int
fs
ret
and
xchg
mov
ja
test
outs
mov
cmp
int3
sbb
xor
mov
xor
nop
ja
jge
pop
mov
cmps
shl
in
jge
test
jmp
mov
popf
out
lods
clc
push
dec
sub
nop
cmp
in
sbb
add
mov
es
push
cdq
popf
mov
mov
xchg
pop
sub
aad
ds
dec
pop
frstor
sbb
sbb
out
idiv
pop
dec
test
mov
push
cld
dec
test
inc
push
shr
xchg
arpl
outs
(bad)
(bad)
xchg
call
cwde
fwait
retf
sahf
cs
and
jmp
fadd
jmp
pushf
xor
rcr
jl
pop
dec
in
sub
lods
sbb
inc
shr
ds
push
scas
jmp
repnz
pop
mov
sub
pop
sub
lea
jle
pop
movs
jno
sub
mov
(bad)
(bad)
jae
cmp
xchg
rol
(bad)
(bad)
popf
xchg
in
push
repz
loopne
push
xchg
mov
xchg
and
aad
pop
enter
cmp
mov
cmp
enter
inc
inc
pop
call
jae
shl
xor
dec
les
jb
jb
pushf
cmp
(bad)
mov
movnti
js
mov
xchg
push
and
add
xchg
cli
retf
xchg
jae
stos
lahf
in
cmps
test
add
or
push
out
pop
pop
add
ins
outs
mov
jle
(bad)
nop
push
(bad)
in
xor
mov
icebp
inc
xlat
sahf
cmp
push
stc
lods
jl
cmps
cmp
fist
ret
mov
or
mov
into
int3
mov
fsubr
pop
loopne
dec
cmps
arpl
aad
fsubr
popa
fldcw
sub
sub
fst
arpl
fs
jecxz
jae
fs
sahf
idiv
mov
jae
or
mov
fild
mov
push
dec
or
(bad)
pop
idiv
test
jno
aad
popf
mov
retf
clc
adc
js
mov
xchg
cmps
bound
pop
outs
cs
dec
mov
sbb
mov
lods
outs
neg
int3
adc
sahf
xchg
dec
inc
shl
sbb
arpl
xchg
xor
dec
inc
fdivr
mov
sub
scas
test
cmp
aad
cmps
dec
dec
fstp
clc
adc
dec
popa
pop
fist
adc
lods
or
or
shl
sbb
and
pop
cmp
lock
icebp
hlt
pop
mov
cld
outs
ss
pusha
sub
mov
lods
cwde
loop
mov
arpl
test
test
mov
xchg
jnp
jnp
sub
(bad)
jmp
lds
fistp
sub
mov
jae
xchg
add
sbb
loop
pop
fs
adc
cli
fisttp
mov
and
xor
(bad)
into
inc
adc
in
in
ficom
pop
mov
leave
jecxz
and
or
xchg
or
hlt
shl
or
pop
adc
xchg
int
aas
jle
mov
mov
mov
fwait
repnz
repz
outs
mov
outs
fisubr
mov
lahf
fs
pop
sahf
push
fxch
ffreep
push
lds
jge
inc
xchg
sub
js
nop
fild
jle
cmp
pop
retf
cdq
xchg
inc
lock
cmp
(bad)
and
aam
push
(bad)
popa
push
stos
add
das
jae
inc
add
rcr
sar
mov
rcr
cld
sub
inc
outs
mov
mov
nop
adc
imul
test
adc
aam
ror
mov
push
dec
out
mov
imul
and
rcl
mov
dec
das
push
cwde
pop
sub
cdq
push
aas
add
dec
pop
cwde
or
pop
retf
lods
pop
pushf
xchg
sbb
jns
int3
sub
push
cmps
bnd
lods
inc
dec
jo
nop
lahf
dec
mov
retf
mov
mov
xor
pusha
push
out
setp
add
or
cmp
cdq
inc
push
fs
dec
hlt
mov
mov
inc
adc
push
cmc
sahf
leave
cdq
push
jno
jnp
mov
pop
xchg
cdq
or
mov
out
dec
(bad)
mov
je
ins
sbb
xchg
mov
inc
repz
push
hlt
mov
xchg
mov
fmul
xchg
stos
into
pop
repnz
mov
add
mov
imul
xchg
fstp
inc
cld
out
inc
push
stos
adc
shl
mov
loope
mov
je
jnp
clc
es
pop
movq
mov
out
lock
push
stos
arpl
jne
mov
adc
add
sti
xor
xchg
cmp
in
(bad)
mov
lea
and
out
outs
push
aad
dec
inc
loopne
pop
pop
or
sub
or
pusha
jmp
jl
movs
ds
inc
cmp
pop
xor
mov
pop
mov
cld
cmp
inc
ficomp
mov
mov
outs
(bad)
aas
xor
daa
lea
sbb
fidiv
cmp
push
add
add
mov
mov
cmp
push
jge
sub
cmc
jecxz
cwde
out
ret
cmp
push
mov
push
js
and
repz
xor
mov
aaa
icebp
popa
mov
and
or
or
push
xor
push
dec
or
lods
pop
rcr
aas
repnz
(bad)
cwde
jp
es
mov
out
imul
ins
push
push
jo
jp
inc
pop
mov
bound
cld
xor
pop
push
cmps
mov
call
mov
daa
outs
add
pushf
lahf
sbb
enter
aaa
std
sbb
and
sahf
mov
push
sbb
xchg
popa
xor
add
in
dec
fcmovu
call
xchg
mul
pushf
xchg
aaa
mov
aaa
xchg
fcomp
push
adc
test
pop
mov
pop
mov
hlt
mov
les
and
mov
add
xchg
jmp
sbb
adc
add
cli
dec
aam
aad
jge
popf
aaa
xchg
mov
fwait
mov
or
mov
dec
jecxz
pop
mov
jne
in
and
bound
jbe
aam
sbb
adc
test
mov
mov
add
and
xchg
inc
adc
or
xor
(bad)
and
retf
movs
dec
cmp
add
mov
aam
cld
pusha
(bad)
movs
inc
aas
cmp
cmc
mov
jecxz
jmp
pop
or
ss
mov
cmp
das
xor
mov
pop
push
xchg
push
mov
aad
sub
push
cli
or
int
ins
or
popf
or
cli
inc
aas
hlt
movs
jmp
repnz
stos
xchg
sbb
xor
scas
enter
dec
inc
lods
rcr
ja
(bad)
cmc
inc
add
pop
retf
and
jae
call
push
retf
scas
dec
xchg
daa
mov
sub
ret
adc
xchg
mov
jo
(bad)
frstor
xchg
mov
ret
inc
popa
div
adc
lods
sub
xor
xor
jb
inc
adc
scas
or
stc
dec
lahf
push
mov
push
mov
push
aam
mov
jmp
out
push
rol
pop
xlat
pop
out
xor
arpl
sti
mov
and
icebp
into
pop
lds
pop
imul
xor
sub
xor
imul
xchg
push
push
lock
cmp
ja
dec
xchg
test
or
mov
mov
cmps
rol
dec
inc
sbb
les
fsub
push
sbb
cmp
or
adc
cmp
stc
scas
sub
jo
(bad)
mov
pop
xchg
pop
jmp
push
ret
sbb
add
xlat
jb
imul
mov
(bad)
fdiv
add
jbe
xor
push
push
mov
ja
sub
mov
jl
outs
jnp
sbb
inc
xchg
dec
fcom
dec
xchg
retf
sbb
pop
leave
adc
add
test
aam
sar
adc
mov
lock
pop
sub
or
jl
and
sub
mov
fbstp
mov
jnp
cmp
es
aaa
aaa
das
out
aas
movs
or
cdq
push
mov
cdq
mov
jb
mov
push
retf
scas
iret
aas
inc
test
dec
cmp
mov
mov
mov
mov
fsubrp
sub
cmp
inc
retf
inc
sbb
cdq
aad
push
push
jmp
push
mov
inc
repz
jge
shl
leave
inc
pop
or
adc
jmp
adc
jns
add
xor
popa
(bad)
push
stos
or
cmp
fistp
jl
dec
sub
mov
jp
pop
ret
bound
aad
repz
pop
xchg
lahf
and
push
xchg
js
dec
push
ss
or
movs
in
repnz
push
dec
es
jle
popa
jle
xor
movs
mov
pop
cmc
test
push
mov
dec
mov
push
scas
pop
ficom
push
mov
mov
mov
cmp
xchg
and
xor
and
mov
mov
add
data16
hlt
cmp
or
dec
jnp
loop
inc
stc
retf
rcl
xchg
sbb
pop
add
adc
jae
cmps
push
pop
cmp
jae
popf
test
mov
aaa
adc
pop
imul
cwde
push
pop
outs
or
add
push
push
imul
push
icebp
clc
stos
pop
icebp
mov
inc
jns
push
add
push
dec
push
ds
stos
inc
push
stos
aad
and
pushf
adc
mov
and
push
mov
and
add
mov
dec
setl
pushf
movs
and
add
push
dec
(bad)
and
cmp
test
imul
out
or
pop
sbb
xor
adc
push
sub
int3
aam
jmp
pop
call
les
jnp
mov
mov
mov
push
call
shl
mov
stos
adc
cmp
adc
ins
and
loopne
jmp
cmp
je
mov
int3
das
jp
or
(bad)
jp
dec
cmp
ja
pop
(bad)
mov
mov
xor
push
xchg
adc
int
jae
and
jno
dec
into
jl
call
pop
(bad)
stos
mov
sub
sbb
cmp
fnstsw
dec
mov
push
shr
pushf
mov
jcxz
sub
sbb
jecxz
test
(bad)
dec
or
out
test
movs
cmp
scas
mov
or
dec
sar
jge
hlt
jge
test
leave
loope
js
xchg
or
in
sbb
inc
xor
in
push
jnp
add
sub
jmp
dec
rcr
mov
ins
jo
js
dec
sub
idiv
fsubr
or
int3
lock
daa
dec
push
out
push
or
add
call
or
add
or
inc
pop
fistp
les
pop
pop
xchg
ja
pop
sar
push
add
movs
mov
(bad)
repnz
loop
(bad)
std
dec
and
dec
lds
xor
fisubr
push
jb
dec
xchg
push
lock
and
cdq
adc
(bad)
std
retf
sbb
add
cmps
iret
xchg
mov
xor
push
js
or
ss
mov
lods
movs
pop
pop
outs
hlt
cmc
push
sub
inc
dec
adc
lods
cmp
xor
mov
add
cmp
aas
retf
(bad)
je
inc
aaa
test
std
loope
adc
add
mov
in
hlt
jns
push
lahf
jne
into
(bad)
mov
shr
leave
add
push
mov
pop
inc
inc
mov
or
or
shl
lea
inc
and
aad
stos
repz
sti
sbb
mov
loopne
ret
sbb
push
fist
cs
jg
bound
mov
loopne
inc
inc
push
call
dec
adc
imul
xor
xchg
dec
sub
int3
(bad)
jmp
jae
aad
cmps
and
sbb
mov
leave
pop
xor
nop
pop
outs
dec
ret
popf
push
outs
mov
jl
cwde
fxch
fdiv
jge
jbe
cmps
dec
pushf
retf
or
xchg
mov
mov
das
xchg
push
out
sub
or
and
xchg
jo
mov
mov
into
sub
dec
jg
or
dec
dec
xor
fdivr
cmps
push
imul
or
cwde
xchg
repnz
stos
mov
shl
mov
fcomp
test
push
in
pop
rcr
dec
pop
ja
push
test
pop
sahf
ja
out
sub
movs
xchg
lahf
jbe
das
ss
dec
and
call
mov
sub
(bad)
and
push
inc
das
sub
mov
pop
loope
xor
ja
mov
int3
adc
(bad)
loop
inc
lahf
leave
mov
js
pop
loopne
jb
imul
push
mov
inc
fidiv
ins
fdivr
mov
jno
or
icebp
repnz
inc
enter
inc
inc
inc
mov
sub
add
push
das
dec
xchg
call
loopne
xor
push
add
fist
xchg
ins
rol
mov
repz
cmp
fmul
bt
ret
jp
push
pop
and
test
cwde
push
sub
mov
ins
xchg
sahf
push
out
push
mul
clc
add
ins
ins
xchg
aam
pop
xchg
jmp
add
pusha
fiadd
push
or
cli
mov
pop
pop
bound
adc
daa
les
mov
out
or
xor
dec
popf
jmp
adc
ja
jle
push
xor
and
mov
repz
and
test
nop
push
mov
add
rcr
push
movs
ret
xchg
call
mov
movs
idiv
scas
mov
pop
out
xchg
imul
je
jg
lock
loope
dec
sbb
jae
cmp
mov
lds
push
rcl
mov
push
push
xor
jmp
(bad)
in
sbb
loopne
ja
fwait
mov
add
rol
sti
push
mov
pop
mov
or
pop
cwde
bound
adc
mov
jb
test
adc
mov
arpl
mov
ret
lods
sub
rcl
shl
pop
cmp
rol
sbb
ins
out
add
push
mov
add
sbb
xor
iret
sub
mov
adc
loope
xchg
cmp
nop
and
cmp
lock
shl
dec
(bad)
mov
xchg
(bad)
mov
sahf
jle
mov
add
outs
sub
or
inc
xchg
int
repnz
mov
jecxz
adc
shl
pusha
xor
shl
add
jl
fcom
(bad)
fadd
cld
mov
mov
xchg
cmc
cmp
mov
push
mov
clc
xor
lods
xchg
outs
out
aas
sub
stos
or
pop
das
sbb
or
dec
ror
repnz
loopne
iret
dec
stos
cmp
ins
push
jbe
mov
stos
(bad)
jmp
jae
imul
or
cli
arpl
bound
sbb
mov
inc
jmp
mov
mov
mov
jmp
dec
fmul
cdq
scas
sahf
xchg
jno
test
retf
push
fst
jbe
mov
xchg
retf
cmp
or
arpl
je
inc
ret
xchg
cmp
sub
repnz
push
add
js
ss
xchg
sub
cdq
xchg
ficomp
push
ds
or
ds
mov
arpl
xchg
ficom
cld
add
les
xchg
pushf
aad
jns
in
in
push
xchg
mov
dec
inc
and
lahf
sub
fnstcw
dec
int3
pop
sub
dec
repnz
and
and
xchg
push
pop
mov
enter
dec
xchg
xchg
cmp
aam
xchg
mov
cmps
fwait
movs
push
jae
test
push
(bad)
and
stos
fsub
retf
push
or
push
sti
mov
cmp
ins
xchg
mov
jge
adc
pop
out
cli
loop
and
clc
nop
jecxz
int
popa
ffree
mov
pop
shl
cmps
xor
test
call
es
int3
fwait
jnp
add
mov
mov
push
mov
mov
cli
cmps
int3
imul
cmp
or
xchg
les
xchg
mov
inc
dec
dec
xchg
xor
sbb
jns
or
cmp
aam
shl
scas
cwde
ja
fmul
cmps
jbe
ret
mov
xchg
cmp
mov
mov
adc
sub
sbb
(bad)
pop
push
cmp
fwait
ja
fwait
adc
pop
mov
dec
pop
mov
pop
dec
loopne
popa
sbb
stos
cdq
neg
dec
sahf
mov
popf
into
fs
into
shr
cdq
mov
ins
ins
fisub
add
sub
cs
(bad)
push
(bad)
adc
jns
fmul
adc
sar
outs
int
sub
sbb
shr
jmp
push
dec
cmps
and
call
inc
das
in
cwde
xor
xchg
clc
fwait
pop
add
sbb
cmps
adc
repz
pop
push
inc
adc
xchg
sbb
movs
xchg
call
in
ret
popw
std
inc
ja
inc
sahf
cmps
daa
xor
push
addr16
out
mov
mov
mov
sar
ds
cmc
or
mov
inc
cmps
ss
or
cli
cmps
repnz
movs
inc
xor
inc
cld
mov
cmp
shl
adc
mov
jmp
cmps
stos
shl
stc
popa
mov
retf
inc
dec
scas
and
jge
mov
xchg
pop
loop
sub
aam
inc
xor
aas
push
jge
call
in
adc
nop
cmp
push
jae
mov
mov
xchg
xor
pop
int
shl
dec
mov
pop
ret
pop
nop
gs
shl
dec
loope
mov
push
ret
out
test
enter
sbb
sti
ffreep
imul
out
dec
cmps
je
inc
xchg
cwde
push
lods
popa
push
dec
int
push
ret
xor
add
fld
mov
rol
or
jo
loop
xor
test
nop
rcr
test
imul
test
ds
ror
cs
mov
sub
dec
je
add
jo
ficom
repz
dec
mov
mov
and
or
add
ja
(bad)
cld
jl
jmp
arpl
pop
shr
push
sub
scas
retf
pop
in
adc
mov
pop
cmp
xchg
mov
lock
(bad)
dec
mov
inc
adc
pop
jge
mov
iret
dec
jnp
test
outs
sub
and
mov
sbb
test
(bad)
cli
mov
ret
xor
pop
mov
adc
ins
das
in
push
test
cmp
pushf
leave
pushf
or
outs
sti
sbb
sar
sbb
sbb
scas
sub
dec
mov
fnsave
neg
jecxz
push
ins
(bad)
(bad)
or
out
in
sbb
(bad)
repnz
(bad)
pop
mov
sbb
data16
and
add
push
cwde
inc
adc
inc
dec
stos
into
cmp
(bad)
dec
out
shr
retf
daa
inc
aam
and
sti
inc
add
in
mov
mov
xchg
sbb
sti
push
loope
jl
int
and
test
dec
and
pop
ret
dec
out
jmp
cmc
push
mov
popa
cmp
rcl
xchg
push
mov
je
sti
int
xchg
stos
lods
das
xchg
imul
fimul
stc
xor
mov
ret
or
rcr
jmp
add
push
xor
sbb
push
and
mov
mov
jge
jmp
xor
pop
cmc
adc
xchg
outs
call
repz
lods
ret
out
sbb
or
pop
sbb
out
je
xchg
cmp
call
jmp
inc
dec
fild
shl
int
or
stos
ret
dec
call
rcr
outs
and
cmp
sbb
es
push
mov
out
jg
call
dec
push
(bad)
jmp
and
mov
fdivr
mov
xor
(bad)
not
jp
and
or
outs
call
dec
and
mov
sbb
sahf
fldz
inc
push
and
or
add
(bad)
repz
sub
mov
pop
sahf
int
jns
pop
xor
or
push
ret
dec
in
adc
retf
lea
fst
push
sbb
pop
movs
push
push
sub
(bad)
fist
dec
adc
call
mov
rdmsr
stos
mov
mov
imul
adc
push
mov
mov
out
xchg
mov
or
fucomip
xchg
scas
repz
mov
sub
adc
fst
push
out
mov
div
mov
ins
mov
pushf
jns
in
call
arpl
mov
lds
cmc
xchg
cmp
movs
fsub
sbb
test
nop
cmps
fidiv
adc
xchg
test
mov
out
sub
xchg
wbinvd
fcomp
repz
push
cmp
pop
dec
jno
mov
fcomip
or
jmp
ins
ja
or
xchg
fs
jmp
retf
adc
lods
dec
mov
xor
fiadd
or
retf
or
xchg
out
mov
xor
in
mov
xor
lahf
lods
inc
test
es
dec
arpl
cmps
cli
cli
cmp
jb
in
imul
jge
mov
jb
add
mov
and
or
add
add
fimul
fmulp
push
sub
mov
xchg
stos
xor
inc
mov
sub
push
mov
(bad)
(bad)
aad
adc
sub
jp
stos
sub
fwait
lods
sbb
jp
mov
daa
inc
ret
pop
gs
pop
(bad)
in
push
xchg
fisubr
cs
imul
dec
and
jbe
lds
enter
(bad)
jne
or
sub
retf
es
or
(bad)
in
pop
sub
test
fadd
loop
push
pop
xor
shl
pusha
or
je
fistp
(bad)
jg
arpl
mov
and
cld
add
and
jne
adc
xor
adc
xor
or
cmp
xor
test
sbb
pop
jmp
stc
mov
imul
xor
retf
arpl
jp
(bad)
out
and
fist
xchg
mov
popa
loope
jae
pop
xchg
mov
std
cmp
loop
(bad)
repz
push
fst
nop
add
cmps
sub
mov
outs
mov
mov
add
fstp
xor
mov
div
inc
lea
(bad)
js
outs
xchg
lahf
pop
addr16
out
loopne
mov
aaa
jbe
mov
cmps
push
div
and
sbb
(bad)
retf
xlat
mov
adc
in
cmp
push
pop
sub
imul
mov
mov
add
or
movnti
(bad)
mul
mul
pop
add
test
xchg
addr16
sub
pusha
mov
xchg
in
lock
mov
push
sahf
shl
sbb
dec
jmp
outs
repnz
jo
push
repz
(bad)
std
add
push
lock
jl
cdq
stc
xchg
xchg
sub
and
lea
mov
test
jne
push
mov
mov
jno
aas
and
xchg
in
test
inc
pop
adc
and
loopne
add
cs
sti
std
pop
cdq
(bad)
cmp
mov
sub
lods
jmp
cmp
dec
mov
jnp
frstor
call
cwde
fistp
or
add
into
cmps
sbb
jl
std
mov
gs
stos
jnp
sahf
xor
push
jbe
cs
call
fcmovu
jmp
(bad)
(bad)
mov
js
or
test
outs
mov
inc
adc
in
ins
push
adc
adc
test
fnstsw
(bad)
xor
and
fnstenv
fs
xor
mov
test
(bad)
aad
or
int3
cmps
std
popf
in
lods
jo
std
cld
inc
fld
mov
add
or
xchg
out
cmp
je
daa
jno
adc
dec
dec
loop
aas
mov
mov
mov
xor
ss
dec
mov
popf
sbb
dec
mov
mov
jge
mov
in
xchg
sahf
(bad)
(bad)
lea
xlat
cmp
(bad)
imul
into
pop
das
out
aam
dec
sbb
jnp
mov
data16
pop
mov
and
jb
mov
mov
imul
mov
lods
pushw
popf
hlt
cs
sub
iret
jle
mov
cmp
inc
ret
fsub
call
jne
pop
and
scas
(bad)
pop
shl
cdq
xchg
sbb
push
or
in
mov
int
and
push
stos
mov
cli
or
ss
ins
mov
push
ja
lea
fxch
inc
fbld
add
nop
stos
aaa
sbb
pop
adc
retf
cmp
xchg
lods
mov
push
cs
or
fist
jne
popf
fist
add
pop
pop
dec
or
fadd
jmp
jb
jle
lea
shl
das
add
jecxz
dec
test
jmp
daa
jbe
pop
sub
dec
xchg
mov
dec
pop
xchg
sbb
sti
dec
arpl
sub
push
rcr
pop
jns
in
xchg
(bad)
jmp
mov
sar
sbb
xor
imul
pop
push
imul
js
pop
or
rcr
and
inc
fisubr
add
test
inc
ds
mov
mov
dec
pop
xchg
add
pop
iret
out
rcr
cmp
ss
xchg
clc
sbb
(bad)
push
retf
xchg
push
shl
jb
push
fnstcw
sahf
scas
fist
sbb
push
data16
fdivr
or
cmp
dec
jcxz
jns
(bad)
mov
scas
and
mov
jle
aaa
popf
or
fwait
jne
sar
ins
dec
retf
(bad)
scas
out
hlt
sar
sub
add
cmp
lds
jb
adc
enter
retf
dec
ins
sahf
mov
push
jg
hlt
aas
aam
add
or
jb
mov
imul
mov
pop
mov
imul
fimul
mov
retf
xor
aas
inc
sbb
gs
sbb
sbb
mov
push
nop
hlt
adc
pop
adc
sbb
ja
sahf
inc
dec
pop
mov
lods
mov
loopne
mov
xor
(bad)
cmp
call
lahf
outs
push
add
mov
repnz
aaa
mov
call
mov
jmp
dec
jae
or
jns
cwde
cld
fimul
cmovo
inc
int
jae
icebp
stos
mov
pop
out
adc
popa
cmp
movs
add
push
mov
mov
inc
sahf
pop
(bad)
outs
xor
enter
inc
fsubrp
mov
inc
push
or
call
jecxz
jb
es
inc
loop
mov
cmp
pop
(bad)
mov
movs
popa
lock
jbe
arpl
xor
stos
and
push
jae
lahf
jmp
dec
or
mov
pop
in
or
dec
data16
xor
pop
mov
xor
int
xchg
retf
movs
popa
dec
daa
fcmovnu
out
mov
jb
les
nop
jbe
xor
mov
adc
mov
inc
adc
xchg
pop
aas
mov
inc
mov
inc
cmp
int
les
jnp
int3
pop
adc
popa
add
shr
sbb
scas
in
cdq
(bad)
push
inc
add
neg
mov
jnp
pop
sub
or
daa
mov
popf
mov
dec
mov
mov
retf
test
xor
imul
add
out
jmp
mov
int3
xor
loop
out
jge
push
mov
sar
xor
mov
retf
dec
cmp
add
ror
dec
aam
jle
mov
movs
fstp
cmp
les
mov
scas
cld
je
fdivr
mov
add
pop
rcl
mov
movs
xchg
xor
sbb
ds
add
pusha
sahf
adc
sub
addr16
push
push
push
mov
add
or
imul
repnz
mov
sub
push
sbb
hlt
and
mov
cmps
ficom
sub
jns
je
out
mov
neg
pop
lds
mov
cs
sbb
test
or
(bad)
and
mov
xchg
jns
sbb
sbb
fwait
cmps
cld
arpl
arpl
mov
cs
das
dec
pop
pop
sub
xlat
push
js
jl
lds
cmp
addr16
jecxz
pop
dec
div
ret
int
jbe
cmp
(bad)
fld
jle
and
sub
jno
mov
fs
sbb
ficom
and
add
sbb
(bad)
jmp
inc
shl
pop
and
adc
pop
gs
sbb
and
push
mov
call
in
ins
test
push
rcl
loop
mov
or
pusha
cwde
mov
(bad)
push
in
ror
loopne
lods
fmul
sbb
and
mov
inc
mov
add
add
pop
mov
cmp
push
push
mov
cmp
dec
dec
hlt
fstp
in
mov
push
aam
mov
dec
inc
dec
rcr
(bad)
sti
rol
sbb
rcr
lock
jg
mov
cs
mov
mov
pop
cmp
int3
jae
and
inc
mov
jecxz
cmp
cmp
fstp
adc
mov
out
movs
mov
xchg
fild
sbb
js
pop
adc
inc
call
mov
call
xor
inc
mov
mov
dec
and
mov
pop
jae
push
dec
and
out
rol
and
inc
outs
xor
ficom
or
repnz
push
adc
xchg
sbb
shl
popf
es
push
and
loope
ror
mov
fstp
sbb
lods
lea
lods
and
cmp
jb
or
jmp
pop
fcmovne
pop
push
push
call
fwait
pusha
(bad)
stos
push
fcmovnu
repnz
out
xchg
mov
inc
add
mov
sbb
or
xchg
lods
das
and
int
iret
jbe
push
xor
pop
add
lahf
jne
mov
pop
je
stc
shr
xor
data16
pop
cmp
or
mov
es
not
dec
lods
inc
aaa
cmps
mov
shr
aad
add
stos
mov
and
xor
jecxz
(bad)
xchg
mov
push
xchg
scas
pop
cmp
cmps
cmps
scas
lea
cmp
cmp
pop
call
loop
inc
xor
xchg
fisubr
dec
push
popf
push
mov
adc
fdiv
and
clc
mov
push
jns
imul
fdivr
pop
retf
xor
movs
(bad)
inc
outs
call
mov
inc
imul
ss
cmp
(bad)
out
imul
dec
dec
cmp
mov
mov
lock
das
jle
mov
adc
mov
scas
pop
pop
add
les
pop
push
mov
mov
mov
mov
inc
scas
lods
rcl
pop
push
sub
push
cmp
xor
mov
push
lahf
inc
ds
sbb
xor
sti
rol
pop
jns
fsubr
std
adc
add
jmp
xor
xor
mov
pop
jmp
jns
inc
rol
xor
dec
(bad)
jo
mov
sub
sub
repnz
push
inc
in
xchg
and
test
mov
dec
sub
fist
adc
add
leave
xor
pop
retf
ret
cmovle
add
adc
sub
scas
fsubr
and
mov
jb
pop
xor
jmp
popf
neg
(bad)
xchg
ret
mov
ja
fistp
xchg
ret
jg
sub
rcr
jo
or
test
cmp
mov
xor
or
icebp
mov
push
or
repz
inc
cmps
arpl
and
adc
lods
fisubr
imul
daa
addr16
cs
add
in
xor
mov
call
iret
inc
sub
or
cmp
and
sbb
int
ja
out
and
inc
push
call
shl
mov
movs
adc
in
cmp
(bad)
mov
xchg
mov
pop
rcl
dec
sbb
push
and
retf
push
arpl
xor
xor
repz
adc
test
call
xchg
pop
mov
das
retf
mov
add
(bad)
mov
add
gs
or
jmp
int3
or
adc
cmp
ss
repnz
xor
ror
loopne
xor
dec
xor
cmp
or
add
inc
or
cmp
cmp
outs
lahf
mov
cmp
test
movs
sbb
push
pop
fcmovbe
ja
mov
lods
cmps
into
scas
sbb
mov
push
mov
test
cs
jecxz
push
in
inc
xchg
ins
jns
and
cmp
ror
scas
jns
dec
or
xor
push
adc
jle
test
nop
jno
call
es
aas
repnz
div
push
out
test
jb
std
dec
(bad)
jmp
and
cld
and
rcr
cmp
popf
test
sub
mov
daa
jmp
in
rol
mov
gs
add
test
js
cmp
cmps
inc
adc
lahf
inc
mov
cmp
xor
mov
push
cld
xchg
out
arpl
mov
or
mov
xchg
pop
fcmovu
mov
xchg
pop
mov
mov
mov
mov
push
js
dec
xor
mov
mov
or
lahf
stc
out
adc
and
and
xchg
push
jb
in
out
or
mov
push
pusha
es
jl
ss
or
push
inc
push
cs
(bad)
and
rcr
adc
and
or
enter
mov
add
mov
sahf
jmp
stos
xlat
jns
cmpxchg8b
arpl
mov
jbe
addr16
sbb
cmp
int
pop
cwde
push
cwde
mov
ds
inc
(bad)
xor
fnop
(bad)
(bad)
addr16
daa
adc
xor
or
adc
adc
pop
inc
mov
xlat
xor
out
inc
stos
out
scas
pop
inc
fldenv
cmp
jne
out
repz
sbb
movs
inc
sbb
pusha
data16
and
leave
pop
outs
xor
jp
jae
fnstenv
push
outs
jae
sub
push
jmp
stos
add
lahf
out
add
mov
cmp
push
psubb
jno
lea
xchg
ja
sbb
ss
mov
fwait
imul
jb
jge
sahf
mov
or
jmp
loope
aam
mov
jnp
jmp
lods
adc
mov
shl
xor
shl
jne
mov
jmp
std
repnz
and
xor
cmp
retf
sbb
push
or
aam
or
pop
lods
stos
pop
add
loop
mov
cmc
sub
ins
mov
jb
imul
and
fild
mov
cmp
jp
sti
aas
mov
push
xor
ja
outs
cdq
test
pop
inc
(bad)
shl
add
je
test
adc
dec
out
outs
and
dec
sbb
xchg
ja
test
mov
pop
inc
mov
jno
sub
into
sbb
mov
cdq
or
cdq
pop
jmp
add
fstp
adc
push
xchg
or
loope
mov
pop
push
fnsave
shl
dec
cdq
cli
jmp
mov
fistp
cmp
push
xchg
(bad)
jl
xchg
stos
jecxz
jns
pop
pusha
xchg
mov
test
mov
in
cmp
mov
mov
ror
dec
movs
cmp
mov
push
dec
cmp
pop
sahf
loope
sbb
jecxz
jmp
sub
adc
mov
test
jns
adc
mov
mov
(bad)
and
xor
fndisi(8087
mov
adc
repz
cmps
xlat
fild
xor
ins
pusha
cld
out
outs
push
(bad)
mov
shl
mov
sbb
add
jmp
sbb
repnz
sbb
sbb
cwde
jl
inc
or
jecxz
std
cmp
mov
sbb
pop
addr16
sbb
shr
movs
or
gs
ins
popa
mov
aaa
ret
adc
out
xor
cdq
fisubr
inc
test
mov
std
shl
fnstenv
mov
pop
xchg
or
xor
call
leave
jae
xchg
push
out
ds
in
movs
retf
(bad)
ret
pop
jbe
outs
mov
inc
daa
(bad)
xlat
pop
sub
adc
je
cmp
out
xchg
fadd
push
je
inc
fnstenv
js
or
cmp
stc
cmc
neg
jg
scas
imul
sahf
dec
sub
les
mov
imul
bound
loopne
cmp
fmul
pop
mov
pop
sbb
add
or
ret
imul
push
ret
aam
stos
ins
cdq
dec
das
jecxz
data16
daa
not
fs
add
dec
fcom
in
out
ret
xor
int3
inc
test
out
mov
mov
jecxz
inc
outs
adc
cmps
jbe
sbb
sub
ret
push
ins
add
cmp
mov
retf
xchg
xlat
dec
mov
rcl
mov
xchg
lahf
js
movs
mov
cmp
shl
sub
int
arpl
aaa
in
fdivr
call
pop
push
jns
adc
ja
or
test
(bad)
cmp
and
dec
dec
push
pop
mov
stos
(bad)
sti
(bad)
mov
data16
xchg
inc
mov
repnz
inc
test
test
jmp
or
(bad)
imul
lahf
js
adc
jle
xchg
jp
shl
in
inc
movs
sbb
add
push
pop
sub
pop
(bad)
push
gs
cdq
adc
pop
mov
xchg
retf
retf
mov
hlt
mov
inc
push
ficomp
test
push
xor
push
(bad)
dec
mov
or
mov
scas
pusha
and
stc
pop
sub
sbb
push
lods
fmul
mov
xor
mul
jle
repnz
or
inc
in
shl
pop
int
in
cli
xor
jg
int3
cmps
cmc
aas
adc
call
inc
pop
loopne
fsubr
inc
mov
mov
dec
(bad)
xchg
and
lahf
out
push
push
movs
into
or
aam
add
out
jg
add
mov
nop
lgs
aaa
js
mov
faddp
in
fld
add
push
mov
push
imul
stos
xor
cli
xor
mov
xchg
fist
imul
and
sub
vmovmskpd
popa
xor
sbb
retf
mov
in
xor
and
loopne
mov
repz
(bad)
loopne
cmp
push
sub
(bad)
adc
dec
lds
sbb
cmp
mov
movs
push
retf
inc
nop
imul
mov
pusha
iret
add
add
sahf
push
pushf
cdq
dec
sbb
(bad)
sub
sbb
jo
sbb
movs
cmp
adc
rol
mov
(bad)
lahf
pop
shl
pop
retf
nop
push
test
mov
nop
add
pop
xchg
xchg
pop
out
(bad)
sbb
das
adc
stc
aad
cmp
jge
into
xor
aaa
loopne
jb
xlat
stos
hlt
cli
das
jnp
vmread
adc
ins
dec
adc
mov
xchg
and
xor
pushf
scas
test
fldcw
mov
lea
cs
iret
mov
fbstp
int
jle
popf
xchg
and
dec
xchg
or
mov
jns
mov
outs
(bad)
stos
jp
jmp
add
xchg
dec
in
sub
inc
icebp
das
aas
ja
jle
gs
into
sbb
out
xchg
or
inc
push
dec
or
daa
sub
mov
add
xor
pop
jno
jbe
or
shl
dec
(bad)
mov
std
rcl
xchg
xchg
mov
mov
jbe
or
sub
cmp
aaa
(bad)
(bad)
sbb
inc
xchg
mov
imul
clc
mov
repz
lods
push
rcr
sahf
pop
rcl
pushf
jmp
jmp
xor
and
cmps
(bad)
ror
mov
out
push
inc
in
inc
jne
jns
inc
(bad)
add
mov
outs
and
add
(bad)
mov
scas
and
icebp
pop
call
mov
mov
mov
sbb
popf
sbb
aas
mov
jne
jmp
mov
pop
xor
mov
xlat
xchg
xor
push
mov
or
sar
imul
pop
aam
scas
mov
je
out
call
cld
mov
push
mov
test
neg
test
cmps
mov
cmp
xchg
mov
xchg
sub
bound
inc
leave
jnp
fist
adc
push
cmps
or
push
jb
iret
lods
jg
or
fist
movs
mov
fwait
std
push
arpl
mov
sbb
push
dec
add
jns
cmp
arpl
xchg
jle
in
in
je
push
cmps
hlt
jmp
xor
add
inc
push
xor
sub
hlt
imul
dec
nop
test
push
test
adc
lock
push
repz
or
or
loopne
test
xchg
sub
inc
xchg
inc
pop
pop
jge
dec
dec
sub
jle
test
jg
xchg
inc
call
xlat
xchg
jne
pop
inc
cmp
cmp
(bad)
jp
mov
push
and
jge
(bad)
clc
pop
dec
fldcw
int3
icebp
jno
sbb
pusha
mov
mov
outs
cmp
adc
cmp
jb
mov
das
mov
call
adc
cmp
xor
repz
sub
sbb
jne
outs
out
cmc
push
test
xchg
jo
add
cli
cmp
fcmovnb
dec
out
daa
sbb
push
or
inc
test
push
mov
retf
jb
xlat
jl
xchg
xchg
jmp
xor
mov
sub
xor
pusha
fcom
mov
xchg
xor
inc
push
(bad)
(bad)
in
push
pop
sub
fld
jns
sbb
retf
dec
mov
push
add
fadd
xor
ffree
jne
sbb
retf
iret
aas
and
inc
das
dec
mov
jmp
iret
xchg
test
xchg
jp
je
mov
or
inc
les
jae
xor
mov
jbe
jae
sub
iret
mov
pop
retf
jp
imul
pusha
sub
int
xchg
in
fldl2t
xor
and
es
jle
xor
scas
adc
stos
bound
js
(bad)
ins
jecxz
mov
jno
mov
stos
push
mul
ret
push
and
or
sahf
ins
jecxz
jne
addr16
nop
jp
pop
loope
in
jno
and
int3
mov
(bad)
push
fmul
fs
lods
test
popf
(bad)
mov
inc
pop
adc
adc
cmp
(bad)
jle
rcr
or
adc
ins
idiv
and
cmp
lahf
call
mov
stos
add
mov
loop
mov
push
popf
adc
mov
cmp
shr
sbb
inc
stos
mov
repnz
inc
sub
push
sub
rcl
jge
dec
push
aam
test
jge
push
hlt
ret
mov
push
imul
xchg
and
push
mov
aam
aad
pop
push
iret
push
mov
sbb
pop
cdq
mov
cli
ret
push
imul
bound
imul
mov
cmp
push
popa
push
stos
out
dec
or
rcl
ins
data16
ret
mov
push
mov
inc
jb
mov
push
in
mov
in
aam
fist
retf
aad
popf
mov
hlt
xor
(bad)
push
ret
jge
popf
rol
int
pop
pop
dec
xchg
adc
sub
stos
dec
and
(bad)
mov
mov
sar
xor
add
cmps
adc
pop
les
mov
pop
fild
mov
lahf
mov
stc
stos
rcl
adc
arpl
xchg
lods
fidivr
xchg
(bad)
ds
out
cmp
out
push
les
stc
sbb
jae
add
stc
pop
mov
add
mov
add
je
inc
or
lahf
lock
gs
aaa
int
xchg
das
(bad)
int3
xor
jecxz
rcl
or
retf
ja
(bad)
mov
mov
je
arpl
push
out
mov
aad
fs
add
popa
addr16
push
sub
sar
dec
cmp
dec
pop
xlat
inc
adc
adc
in
ja
fbstp
data16
in
sbb
add
push
or
retf
repnz
jnp
push
sub
es
movs
out
les
les
pushf
test
mov
xor
push
jmp
not
jne
inc
dec
add
or
mov
add
iret
cmp
(bad)
jo
mov
mov
mov
dec
in
imul
ret
fsub
mov
loopne
imul
jmp
je
stos
clc
push
sbb
arpl
mov
push
mov
fnstenv
outs
mov
inc
out
das
jae
xor
jl
or
jbe
xchg
jmp
sub
cmp
xor
dec
jae
or
push
inc
popa
xor
cmp
dec
icebp
cmp
jge
pop
push
dec
jp
fidiv
cdq
jmp
fisub
jge
pop
in
pushf
push
push
jae
daa
push
call
es
sub
inc
js
daa
mov
dec
out
fwait
dec
xlat
test
xor
ds
repz
lock
mov
adc
sub
xchg
push
jns
lahf
jp
push
dec
(bad)
xchg
mov
(bad)
fidiv
sub
rcr
adc
pop
test
rol
pop
iret
add
jl
cmp
xchg
(bad)
or
popf
(bad)
jb
nop
pop
mov
xchg
mov
push
cmp
fistp
arpl
or
mov
dec
pop
je
stos
xor
adc
pop
inc
inc
lock
movs
dec
or
out
scas
sbb
pop
je
jne
(bad)
jbe
jge
mov
int3
push
in
push
fcom
xchg
push
jnp
(bad)
fcomp
mov
mov
div
push
out
int3
cli
mov
cli
movs
pusha
cmps
sub
pop
adc
jmp
xor
pop
iret
jno
test
repnz
mov
sbb
jns
mov
or
fnstsw
and
sbb
adc
add
adc
into
push
sbb
inc
jns
ja
mov
cmp
clc
inc
push
sbb
push
jnp
enter
mul
xor
jo
mov
addr16
sub
sbb
cmp
xchg
cmp
xchg
jns
test
jo
xchg
je
int
xor
aam
push
sub
and
mov
retf
xchg
je
test
addr16
stos
and
dec
mov
dec
scas
jmp
jo
movs
inc
cld
ret
pop
popa
lock
scas
ds
call
xchg
(bad)
sub
lods
vpmovzxbw
loope
mov
xor
add
test
fwait
dec
add
nop
leave
imul
or
mov
dec
ror
movs
pusha
and
xlat
ret
cmp
es
ret
sbb
mov
lods
xchg
arpl
call
dec
mov
jnp
push
js
bound
test
pop
cmps
or
add
xchg
pop
(bad)
adc
aad
mov
dec
fstp
rol
fisub
pop
or
sahf
movs
pop
stc
mov
xchg
inc
jl
xchg
inc
sbb
mov
inc
mov
inc
xchg
loop
dec
dec
xchg
pop
or
gs
out
sbb
(bad)
div
clc
lods
lock
mov
loop
jno
dec
add
(bad)
mov
aad
add
ins
(bad)
push
jns
aad
mov
sbb
adc
shl
test
and
pop
hlt
ss
shl
(bad)
test
cmps
dec
cmp
sub
or
ret
xor
ficom
inc
je
loope
sbb
shl
cli
inc
out
sbb
add
dec
retf
dec
popf
push
jecxz
outs
icebp
call
int
sub
enter
inc
outs
mov
addr16
xchg
mov
fist
xor
adc
mov
sbb
in
xchg
mov
cli
mov
jmp
jmp
sbb
rcr
xchg
loop
dec
sahf
fsubr
outs
ins
fsub
lds
add
push
xlat
mov
outs
inc
fadd
sbb
ret
dec
and
mov
xchg
jo
xor
(bad)
imul
retf
jp
jle
cmp
or
sub
mov
xchg
jmp
outs
mov
les
and
dec
mov
mov
cmp
push
jmp
fs
mov
mov
adc
fdiv
cdq
rcl
imul
mov
lods
test
mov
in
inc
fist
inc
lds
sar
xor
imul
test
imul
adc
pop
cdq
ret
les
push
and
es
movs
inc
mov
ins
inc
adc
es
(bad)
fild
loope
fs
cmp
or
dec
fdivr
push
arpl
and
or
out
out
add
aad
jnp
inc
inc
adc
adc
push
and
call
shr
movs
loop
mov
fidiv
mov
mov
lods
adc
aad
mov
repz
retf
or
cmp
jae
mov
add
movd
cmps
dec
loope
les
lea
inc
jnp
fisub
dec
sbb
pop
lods
inc
movs
xor
adc
ror
das
dec
push
dec
ja
push
xchg
sub
(bad)
lods
dec
xchg
adc
mov
jp
pop
add
lods
lds
adc
inc
fisubr
xchg
ins
fiadd
sub
loope
(bad)
sahf
push
in
jno
and
adc
out
call
xchg
adc
add
ret
add
(bad)
xchg
adc
cmp
or
or
and
test
xchg
mov
not
add
cmp
repz
in
jo
out
ins
cmp
outs
sbb
lea
test
pop
shl
inc
xor
ins
out
jns
iret
movs
and
(bad)
cdq
ins
out
jmp
les
hlt
fdiv
out
enter
mov
loop
aaa
jmp
add
cmp
std
call
xor
std
jl
mov
popf
dec
sub
je
dec
dec
gs
adc
imul
jle
sti
sar
or
cdq
fcmove
xchg
les
pop
mov
in
pop
repz
push
adc
ds
push
and
mov
cld
retf
outs
pop
sahf
dec
lea
jns
mov
jbe
push
neg
and
std
push
push
call
inc
imul
mov
lods
jne
mov
and
sub
mov
int3
(bad)
sbb
(bad)
sub
scas
jno
imul
gs
jge
pop
out
push
xchg
and
xor
sbb
sub
inc
scas
jae
and
pop
sbb
inc
in
cmp
sbb
pop
push
xor
mov
dec
mov
popf
(bad)
enter
int
add
mov
cmps
mov
in
mov
stos
movs
push
out
jmp
outs
jl
int3
cmp
add
mov
jmp
cmp
fs
adc
mov
xchg
fmulp
ds
cmp
pop
pop
test
mov
mov
popf
mov
jp
add
jae
jno
ds
arpl
popa
daa
and
cmp
pusha
cmp
ja
fist
imul
xchg
push
sub
(bad)
or
test
and
mov
xlat
in
add
out
lods
mov
outs
jae
jb
clc
(bad)
clc
out
adc
dec
ret
cmps
retf
pop
mov
jl
cmp
dec
xor
mov
sti
out
cmps
les
inc
addr16
cwde
cli
xchg
and
cmp
daa
pop
clc
ins
xchg
int3
dec
ret
dec
icebp
push
and
in
xor
in
cmps
mov
clc
jle
aam
ficom
jns
stos
clc
les
test
je
enter
jnp
mov
fdiv
or
scas
imul
scas
stos
mov
aam
fidiv
adc
sbb
popa
lock
data16
push
jbe
sub
cwde
adc
les
add
fnstcw
ret
adc
jmp
sub
gs
or
repnz
pop
xor
push
out
sbb
push
loopne
pop
inc
jmp
mov
push
mov
cmps
mov
adc
shl
inc
lods
fdivr
add
fstp
xor
push
sub
pop
xor
aam
xchg
dec
push
call
add
aam
xchg
xchg
adc
and
inc
inc
out
and
add
inc
js
push
add
frstor
mov
xchg
fsubr
shr
or
mov
mov
add
xchg
push
inc
pushf
mov
mov
sub
pop
cmp
call
pop
loop
in
xor
mov
mov
pop
loopne
push
cmc
(bad)
(bad)
mov
pop
xor
mov
sbb
pop
adc
jle
pop
add
lahf
pop
push
mov
add
sub
cmc
pop
cmp
jg
(bad)
clc
mov
push
das
movs
leave
add
jne
mov
ret
outs
cmp
ret
xor
push
mov
and
sbb
pop
movs
lock
xchg
adc
repnz
xchg
cmp
push
stos
and
cmc
fstp
hlt
jg
jmp
adc
and
lea
in
dec
ror
or
mov
pushf
xor
fcmove
ret
mov
outs
mov
sahf
pop
pop
xchg
out
arpl
sbb
je
sahf
push
cmp
dec
xor
push
mov
int3
pusha
cdq
inc
mov
call
addr16
inc
dec
pop
and
inc
mov
nop
sub
mov
mov
mov
lods
and
and
das
or
jge
jns
mov
cmp
dec
gs
jne
fcmovu
jp
into
test
mov
sbb
dec
fnstenv
scas
cmc
pop
dec
and
mov
icebp
push
lods
mov
ret
pop
add
dec
inc
in
(bad)
xchg
lahf
sti
mov
rol
mov
mov
xchg
xchg
ror
ror
inc
stc
iret
cmps
(bad)
adc
mov
(bad)
push
mov
dec
mov
sub
out
ins
popf
sar
pusha
adc
and
loop
cmp
xchg
(bad)
push
mov
push
and
pop
mov
movs
ins
push
xchg
ss
or
adc
sbb
(bad)
pop
xor
push
add
stos
mov
je
and
dec
(bad)
movs
pop
push
push
xor
(bad)
inc
idiv
(bad)
(bad)
pusha
mov
mov
and
aas
neg
add
push
(bad)
aam
(bad)
aas
mov
loope
and
or
mov
std
and
cwde
imul
mov
mov
xchg
mov
push
xor
mov
ret
retf
push
push
jge
arpl
cdq
push
xchg
mov
stos
daa
inc
aaa
push
or
stos
push
add
in
mov
cwde
arpl
fild
outs
int3
sub
inc
sar
int
stos
dec
js
sbb
test
fbstp
push
stos
inc
dec
movs
mov
mov
ss
nop
jb
dec
lea
outs
jb
adc
cld
sbb
cmp
mov
xchg
inc
ja
and
jmp
and
int3
test
lods
pop
loope
in
mov
in
dec
les
call
mov
mov
push
xor
dec
dec
mov
jle
mov
adc
mov
xor
add
jns
ins
or
inc
mov
outs
mov
adc
loop
mov
in
and
into
(bad)
push
sti
add
inc
jno
movs
pusha
inc
retf
nop
ins
or
int3
jbe
xor
popa
int3
std
jae
imul
push
mov
stos
dec
test
push
iret
pop
xchg
inc
int3
jmp
repnz
sti
std
and
ret
and
mov
lds
loop
cmps
test
inc
shl
xchg
fcomip
neg
mov
mov
mov
(bad)
or
in
stos
adc
pop
fstp
pop
push
mov
dec
dec
lds
and
dec
dec
cmp
dec
les
push
xor
or
rol
push
cs
push
push
lock
ss
cmp
out
cmovbe
or
mov
aam
(bad)
iret
je
int3
loope
sub
fcom
sbb
inc
and
hlt
push
imul
aam
repz
add
add
xor
push
xchg
xor
sub
out
dec
fistp
test
enter
jo
sub
push
jae
mov
movs
cs
ror
dec
sbb
je
add
ss
sub
mov
retf
dec
js
fmul
and
leave
xchg
inc
or
iret
leave
inc
sbb
sbb
xchg
sub
xchg
jb
jo
mov
les
jg
sub
mov
sbb
pop
jo
arpl
push
jle
adc
push
dec
xor
sub
mov
call
jecxz
(bad)
pop
or
mov
out
aad
dec
call
and
outs
mov
adc
cmp
mov
fcomp
pop
mov
test
movs
inc
aaa
es
ins
jmp
mov
inc
call
mov
aam
add
xchg
cmps
and
inc
xchg
inc
jo
mov
add
in
and
js
loope
jo
inc
xor
dec
mov
jg
lahf
aad
mov
push
xor
mov
dec
es
fistp
jecxz
mov
sbb
fcmove
adc
inc
test
aas
fcomp
jae
and
push
int
dec
mov
mov
out
pop
out
hlt
jae
popf
jmp
stos
popa
sub
stos
inc
jmp
mov
mov
mov
inc
movs
scas
xchg
cmp
jae
push
(bad)
and
nop
push
mov
(bad)
scas
mov
cwde
lahf
sub
xchg
fist
jnp
(bad)
out
sahf
out
adc
clc
sbb
push
dec
xchg
stos
ror
daa
pop
(bad)
adc
in
(bad)
pusha
out
hlt
ficomp
stos
dec
inc
ficomp
mov
sbb
xchg
popa
mov
frstor
mov
jl
cmp
aaa
push
in
push
fwait
jmp
call
cmc
mov
xor
push
dec
outs
popf
jge
test
shl
mov
or
mov
scas
mov
retf
jae
cs
push
pop
outs
fwait
into
hlt
xor
clc
jl
sbb
jp
lahf
out
cmp
push
sub
stos
cmp
fld
pop
shl
push
inc
mov
xor
inc
jmp
pop
sbb
dec
imul
outs
inc
ins
test
iret
pop
mov
push
jbe
ret
adc
sub
mov
les
dec
fist
clc
cmc
mov
xrelease
scas
out
call
fmul
int3
hlt
xchg
fs
dec
mov
loopne
mov
cwde
into
push
sbb
cmps
adc
shl
inc
in
les
imul
dec
out
jno
in
jg
sahf
add
cli
das
sbb
cmps
jecxz
xor
jecxz
xlat
xchg
cmp
jmp
mov
inc
retf
xchg
or
aam
xchg
test
cmc
cmp
pop
out
dec
mov
xor
push
mov
(bad)
fimul
push
fidivr
xchg
pop
shl
fidiv
push
inc
scas
mov
stc
bnd
pushf
adc
aad
mov
jb
stos
rcr
stos
nop
stos
(bad)
jecxz
mov
inc
pop
pop
enter
xor
mov
jns
sub
(bad)
dec
jne
push
inc
in
xchg
jmp
mov
pop
push
mul
neg
xlat
ffree
pop
addr16
sbb
out
je
arpl
lock
and
(bad)
(bad)
in
fst
sti
rcr
stos
call
cmp
sub
mov
nop
jle
xlat
fpatan
sbb
cwde
push
inc
sbb
pop
sub
mov
xchg
xchg
retf
adc
imul
xor
push
jmp
jg
or
mov
repnz
inc
jmp
add
pop
test
push
jbe
pop
adc
xchg
pop
jne
mov
mov
dec
in
push
sub
and
xor
js
sahf
and
adc
movs
cmc
aad
imul
(bad)
(bad)
rol
popa
das
std
cmp
pop
mov
mov
jp
push
xchg
lahf
adc
pop
and
pop
xchg
in
stos
pop
sbb
jne
or
aad
push
pop
cmp
mov
push
popf
sub
xchg
push
mov
ss
inc
ins
inc
iret
mov
stos
neg
(bad)
cdq
pop
dec
dec
mov
jns
mov
inc
jb
stos
inc
jb
sbb
lds
sti
or
(bad)
jnp
and
div
sub
leave
pushf
aaa
fiadd
xchg
(bad)
jp
retf
adc
jae
cmp
mov
loop
xlat
mov
mov
aam
dec
dec
repnz
sahf
and
dec
bound
pushf
retf
adc
loopne
test
cmps
mov
add
aam
xchg
push
add
out
or
push
das
push
or
or
(bad)
lds
or
add
xchg
das
out
movs
loope
adc
pop
leave
iret
push
or
les
adc
int
movs
mov
nop
lock
jbe
gs
jge
leave
jecxz
pop
popf
in
xor
pop
test
ins
mov
les
push
iret
jmp
push
xchg
pop
or
sub
je
mov
ret
mov
inc
adc
xor
stos
or
xor
addr16
sub
rcl
rcr
pop
loopne
mov
cmps
mov
pop
pop
hlt
add
or
scas
push
push
aas
shl
cmp
and
xlat
sar
pop
fdivp
or
jecxz
test
into
repnz
mov
repnz
aas
xor
rcr
into
call
mov
xchg
sar
ins
mov
jecxz
add
jge
xor
push
jb
fs
ins
cmp
in
fild
pop
dec
push
ja
and
sbb
and
loope
daa
(bad)
dec
mov
add
fdivr
xchg
cmc
cwde
int3
add
mov
push
add
adc
leave
mov
sbb
ja
mov
movs
sub
les
jbe
and
std
jne
out
stos
repz
in
leave
xor
gs
loop
test
sbb
fidiv
jne
mov
or
jmp
cmp
mov
push
sub
sub
out
xor
cdq
sub
mov
sub
pushf
jl
sub
mov
movs
rol
aas
or
cmp
aam
inc
repz
fadd
scas
jns
or
shl
(bad)
call
and
(bad)
mov
sbb
sub
or
pushf
punpckhwd
fiadd
loope
or
enter
or
or
xchg
and
mov
cmp
repz
sbb
ja
out
inc
cmc
cli
or
jp
add
dec
test
es
pop
sbb
sbb
gs
jle
push
leave
push
(bad)
fidivr
ins
shr
pusha
shr
ins
add
in
in
lods
dec
fstp
mov
js
xor
adc
(bad)
xchg
xchg
call
call
sub
arpl
(bad)
adc
and
lahf
cmp
xchg
sub
lock
out
add
mov
xor
xor
pushf
jo
std
inc
add
jbe
ja
xchg
fwait
sbb
xchg
aad
inc
push
repnz
stos
xchg
sub
das
fsub
sub
cmp
outs
sbb
(bad)
retf
sbb
(bad)
xchg
fistp
clc
cs
lock
faddp
fmulp
xor
hlt
xchg
shr
cmp
cwde
mov
jle
pop
call
std
jne
mov
xor
xor
lock
push
dec
push
and
and
dec
and
outs
stc
jno
std
pop
popa
ins
out
xchg
jge
mov
scas
(bad)
rcr
mov
(bad)
jns
fsub
push
cmp
fmul
imul
xor
rcr
xchg
push
dec
scas
call
pop
push
xchg
bswap
iret
xchg
cmp
and
ret
sub
sub
mov
std
repnz
je
adc
or
test
leave
je
lods
test
sbb
jge
jl
sub
mov
cmp
cmps
adc
nop
xor
jno
adc
mov
sbb
xchg
(bad)
push
mov
and
jnp
inc
test
ja
bnd
cli
loope
fimul
mov
sub
mov
lock
fiadd
shr
dec
sbb
inc
jmp
or
mov
jne
xor
add
ret
sbb
arpl
aam
cmp
cmc
add
ror
push
out
and
js
aam
es
cmp
ins
sbb
inc
fild
pop
mov
mov
lds
adc
cdq
lock
pop
fstp
inc
xor
pop
dec
jne
leave
retf
loop
ret
fld
sbb
lods
repz
jp
js
xor
push
inc
out
lahf
outs
pop
mov
dec
push
jp
add
imul
aaa
dec
pop
pop
into
mov
inc
loope
push
iret
lods
rcl
xor
xchg
mov
icebp
test
pop
fmul
inc
cwde
mov
jbe
sti
add
pop
lahf
push
in
sbb
pop
or
bound
arpl
mov
and
int3
push
rcl
jbe
cmps
call
jb
jge
sar
daa
pop
cli
gs
push
in
xchg
jb
fs
fidiv
sub
add
xchg
pop
jge
mov
or
std
push
adc
test
push
je
bound
loope
pop
cmp
jge
and
cdq
dec
popf
pop
inc
push
inc
stos
push
mov
jecxz
not
test
sar
int3
movd
mov
mov
call
jp
stc
mov
(bad)
out
bound
push
add
rcr
adc
scas
sbb
inc
addr16
lahf
fistp
sub
out
mov
inc
xor
mov
add
lock
mov
or
repnz
adc
aad
jmp
iret
xor
mov
imul
add
rcr
push
mov
cmp
pop
xlat
iret
xchg
fild
cmp
or
xor
pop
adc
cmp
jno
scas
mov
jmp
pusha
rol
xchg
call
call
dec
shl
ds
mov
fadd
repz
mov
outs
mov
xor
js
mov
iret
mov
mov
ja
mov
jmp
sbb
das
dec
xchg
arpl
fnstcw
dec
cmp
out
jne
adc
pop
sbb
cmps
aam
aam
add
push
aas
push
stos
and
mov
in
pop
outs
mov
lods
inc
sbb
mov
sbb
fcmovnb
mov
enter
movs
jp
lea
sub
sub
mov
cmp
mov
adc
pop
jmp
dec
adc
xor
mov
shl
add
push
mov
dec
leave
stc
icebp
ds
inc
ror
or
bound
pop
push
inc
inc
iret
push
in
fnstcw
dec
movs
xchg
arpl
fidivr
lahf
aam
fwait
mov
cdq
loope
popa
fucomip
push
fwait
into
push
mov
jg
adc
sahf
or
stos
xchg
adc
and
in
out
jno
stc
cmp
in
xchg
and
adc
hlt
dec
or
sbb
xlat
fwait
jo
sar
push
ret
ficomp
call
fidiv
aaa
daa
mov
pop
test
dec
jno
dec
adc
sbb
call
dec
(bad)
neg
sar
xor
and
cmc
jnp
or
add
mov
adc
clc
out
jmp
imul
lods
and
cmps
push
dec
pop
das
ret
pop
fnstenv
jnp
icebp
call
jns
xchg
xchg
sub
push
jb
lahf
int3
mov
out
and
std
test
out
aad
pop
or
aad
push
movs
dec
adc
push
mov
mov
int3
call
mov
jb
and
sbb
shr
push
xchg
nop
je
sbb
fs
mov
in
adc
pop
test
repz
and
test
je
mov
and
push
into
scas
cli
ret
scas
sbb
js
ret
xchg
je
iret
mov
ficomp
mov
retf
mov
push
mov
inc
mov
push
js
je
ret
sbb
pop
mov
cmps
add
movs
inc
sub
ins
test
mov
jae
outs
xor
mov
xor
and
jno
sub
jl
mov
pop
(bad)
cwde
mov
jmp
xchg
aaa
xor
arpl
scas
test
in
(bad)
mov
int3
sbb
enter
add
mov
loope
or
(bad)
loopne
sbb
xchg
popf
sub
not
arpl
push
pop
retf
adc
(bad)
mov
cld
ret
test
cmc
clc
mov
and
mov
sub
inc
xchg
cmc
jg
add
repnz
push
inc
popa
hlt
imul
adc
fsub
mov
fldenv
cmp
call
cmp
stos
sub
and
pop
mov
loop
popf
aad
lods
sbb
add
xor
xchg
sbb
imul
gs
mov
test
dec
mov
adc
test
jmp
fwait
dec
fwait
mov
fs
dec
dec
push
lds
cmps
jle
mov
cld
movs
pop
fld1
sahf
lds
and
xchg
enter
jnp
mov
(bad)
jb
mov
fisttp
popa
xor
mov
cmp
fwait
les
inc
xor
inc
fst
repnz
test
aam
in
xor
push
push
(bad)
sub
repz
mov
xchg
mov
cdq
(bad)
loop
pop
sahf
rol
fimul
pop
push
dec
fucomi
mov
dec
pop
cmps
aaa
sbb
push
ret
or
mov
jg
aam
fs
dec
cmp
inc
call
dec
sti
mov
mov
cmc
popa
stos
mov
pop
jle
stc
mov
gs
push
or
dec
dec
imul
leave
sub
mov
mov
xchg
sbb
sbb
int3
jp
sbb
pop
ret
inc
cs
mov
mov
adc
aaa
inc
loope
jnp
mov
pusha
pop
cmps
shl
mov
int
cmp
int
arpl
push
out
int3
int3
cmp
jns
dec
push
icebp
add
out
sbb
add
loope
add
push
inc
popa
cmp
push
fwait
inc
adc
sbb
mov
mov
adc
cmp
jmp
add
push
lods
in
inc
pop
pop
sub
and
aas
les
lds
or
fdiv
sub
sbb
iret
sti
mov
mov
outs
or
mov
mov
das
xchg
shl
mov
and
sahf
or
sbb
sbb
sti
in
xchg
mov
fiadd
xchg
mov
cmp
test
lods
jns
or
rcr
push
push
ror
jp
lods
sub
and
js
sub
pushf
lahf
in
add
sub
cmp
inc
mov
adc
scas
scas
test
(bad)
aaa
pop
pop
jmp
iret
je
test
dec
mov
data16
sub
dec
pop
xor
outs
repz
add
pop
xor
jno
xchg
and
pop
and
(bad)
jge
jl
push
stos
lds
in
jns
icebp
cmp
movs
popf
xchg
mov
stos
out
jmp
mov
sbb
lock
xor
jle
adc
shl
jns
xchg
outs
repz
cmp
sub
pop
and
into
int
push
and
loop
mov
inc
mov
push
and
jne
test
cs
jo
mov
jno
ret
scas
ret
adc
add
jg
inc
sbb
lods
xchg
cdq
and
leave
and
fistp
mov
push
imul
adc
and
std
pop
inc
bound
mov
jp
xchg
xor
sti
mov
or
xor
dec
pop
cmp
or
adc
mov
dec
nop
ins
jmp
push
sbb
cmp
sub
pop
movntps
push
cmp
mov
sub
and
xchg
sar
push
xor
mov
xchg
sbb
jns
loop
repnz
jmp
xchg
sar
repnz
das
retf
and
call
cs
and
mov
and
jae
jbe
sbb
popf
imul
mov
xchg
xchg
mov
mov
arpl
jle
and
adc
inc
jae
jp
aas
adc
(bad)
mov
retf
leave
sbb
pop
or
aas
mov
xlat
(bad)
cld
jl
xlat
pop
aam
(bad)
push
mov
shr
clc
cmp
sbb
inc
adc
je
dec
mov
loopne
xor
push
xchg
mov
sbb
retf
mov
inc
mov
push
pushf
cmps
push
hlt
test
(bad)
or
mov
dec
add
pop
and
jp
jmp
adc
dec
aad
dec
test
jle
int
sbb
inc
jno
jl
frstor
pop
pop
test
and
mov
dec
(bad)
stc
neg
ror
pushf
mov
push
push
pushf
dec
and
inc
(bad)
or
outs
jo
idiv
add
dec
jo
movs
push
loopne
in
inc
jb
jle
xlat
fwait
add
or
pusha
jge
sbb
clc
mov
push
lods
adc
pop
xor
int3
fmulp
or
sub
ins
pop
push
movs
cld
and
sbb
out
adc
lea
cmp
mov
sar
xchg
mov
outs
repnz
sti
sbb
cmp
mov
xchg
sbb
pop
dec
xchg
jae
push
mov
pop
lea
(bad)
(bad)
adc
sti
retf
movs
fnop
stc
sub
arpl
push
ror
mov
fisub
loope
fistp
ins
or
lock
xlat
push
adc
or
lds
add
inc
cmp
xchg
xchg
xchg
jne
fcmovne
xor
adc
jns
sbb
push
or
jno
sbb
mov
xchg
pop
imul
outs
inc
mov
cdq
pop
test
data16
adc
sub
pop
lods
outs
hlt
pop
imul
and
add
mov
inc
movs
ficom
stc
or
in
adc
iret
xchg
pusha
and
jp
ins
pop
xor
push
fidivr
ss
mov
mov
mov
sti
add
sar
gs
sub
jno
add
int
icebp
inc
out
stos
push
and
imul
fst
jg
sbb
sahf
iret
xchg
dec
lahf
retf
bound
add
fstp
jne
repz
mov
mov
dec
jnp
pop
nop
stos
fidivr
test
mov
stc
enter
cmp
xchg
cmp
fld
jnp
imul
stos
jl
inc
cmc
pop
mov
and
lods
fdivp
mov
sub
add
add
cmc
lock
into
aad
dec
es
push
jns
imul
sbb
(bad)
xchg
aam
xchg
test
movs
mov
add
and
inc
push
out
ficomp
in
mov
fst
dec
nop
setb
jmp
bound
shl
mov
push
fdivr
shl
jnp
xlat
in
sub
lds
push
xchg
loopne
daa
xchg
dec
popa
mul
leave
mov
add
les
xlat
cmp
movs
inc
shl
sahf
pop
outs
ds
rcl
(bad)
fmulp
dec
mov
pop
in
test
inc
ss
(bad)
mov
leave
stos
mov
push
ret
add
jge
lahf
sbb
push
cmps
int
cld
movs
jg
out
repz
or
call
pop
popa
mov
adc
push
in
cs
popa
jmp
mov
mov
mov
test
lahf
mov
jbe
ror
mov
scas
pop
add
in
in
xor
js
dec
push
out
xchg
(bad)
ds
sub
pushf
sub
cs
(bad)
push
jns
mov
dec
int
or
mov
dec
fiadd
aas
lods
jbe
pop
xchg
lea
or
dec
sbb
sub
jp
pop
out
xor
push
dec
stc
inc
enter
btc
xchg
daa
add
xlat
fmul
shr
xchg
je
pop
out
dec
push
adc
stos
pop
ja
fadd
adc
mul
sbb
shl
outs
sbb
add
movs
je
sbb
and
push
out
cld
ins
mov
aaa
ret
jge
or
mov
into
xchg
mov
fs
cmc
mov
in
jb
cmps
retf
pop
test
xchg
inc
jge
sub
icebp
in
jo
ss
addr16
mov
sar
sub
div
daa
pop
xchg
mov
out
jbe
je
pop
inc
add
mov
add
adc
sbb
cwde
xchg
fstp
or
cmp
cmp
add
pop
xor
mov
add
div
xor
pop
add
outs
test
lods
mov
shr
adc
hlt
lock
xchg
push
retf
popf
adc
stos
enter
hlt
cmp
pop
lods
push
fadd
mov
cmps
int3
or
or
rcr
sbb
(bad)
hlt
in
arpl
cdq
mov
inc
dec
sub
push
(bad)
jmp
dec
fild
jle
xor
adc
sbb
jbe
mov
xor
mov
adc
xor
fucomi
loop
out
pusha
xchg
ja
jae
stos
or
sub
pop
xor
fisttp
cmps
leave
push
jmp
fld
xchg
(bad)
xchg
aaa
jle
sbb
movs
fwait
ss
mov
or
cli
dec
inc
popa
xor
mov
xor
xchg
mov
jl
movs
ror
pop
jmp
aam
and
jecxz
(bad)
jns
fistp
push
imul
push
xchg
sbb
or
push
and
mov
mov
out
xchg
outs
addr16
call
fisub
(bad)
aad
imul
mov
push
push
cmps
cmc
hlt
or
scas
or
dec
sub
(bad)
ins
fdiv
pop
(bad)
rcr
sbb
ins
test
mov
iret
or
dec
loope
mov
xchg
rcr
fucomi
dec
movs
and
xor
repz
xor
pop
int3
test
ins
adc
adc
push
scas
inc
add
out
hlt
mov
rcl
pop
sbb
inc
aad
push
(bad)
das
fisub
loop
cmp
push
jmp
sbb
and
movs
scas
repz
jecxz
fmul
loopne
fadd
sbb
rcl
xchg
mov
add
(bad)
xor
jbe
sahf
pop
add
push
mov
std
mov
dec
inc
xchg
or
test
in
jecxz
jmp
(bad)
or
sbb
pop
add
dec
sbb
push
cli
bound
inc
pop
xchg
cmps
adc
xchg
adc
sbb
jp
lahf
adc
jno
adc
fadd
cmp
fadd
xlat
pop
out
fcom
xchg
into
fisttp
push
pop
jmp
aas
(bad)
stos
mov
jbe
out
push
inc
inc
mov
neg
test
cmc
in
mov
dec
icebp
adc
jb
mov
arpl
mov
push
mov
dec
popf
push
inc
pop
mov
icebp
adc
sub
push
int3
sbb
mov
jne
fst
xor
in
pop
push
or
fistp
es
stos
mov
ins
shl
dec
mov
push
and
jbe
adc
sub
jp
mov
push
lock
cdq
dec
xor
xor
pop
rcr
jmp
dec
mov
clc
es
sub
(bad)
imul
enter
adc
jmp
cwde
inc
mov
add
or
dec
les
aad
pop
rcl
sub
cmp
out
mov
push
rcr
pop
mov
shl
std
and
sub
imul
sub
sahf
loop
adc
idiv
sbb
dec
aad
ja
pop
add
inc
(bad)
(bad)
jno
push
sahf
xor
mov
cmp
mov
sub
adc
pop
cmp
in
sahf
push
fimul
sbb
icebp
cmp
xchg
sahf
cdq
push
cwde
xor
mov
and
hlt
rol
dec
xchg
inc
in
pusha
and
fsub
mov
push
ror
js
inc
mov
or
dec
outs
jmp
test
sbb
outs
in
dec
sahf
and
add
and
(bad)
stos
and
lods
cmps
push
adc
dec
in
std
ret
xchg
add
test
or
je
adc
cmc
sahf
rol
cs
push
shr
out
cmp
loop
cli
mov
add
fldcw
inc
rcl
outs
enter
sbb
push
lods
lock
enter
jp
mov
jne
mov
or
push
xor
or
sbb
jmp
adc
pop
jl
adc
je
jns
pop
cwde
sub
ror
ret
cmp
add
cmp
and
test
cmp
sbb
mov
push
mov
xor
jo
dec
jge
imul
int3
mov
add
fistp
sub
jo
shl
and
push
nop
leave
imul
sub
pop
xchg
xor
push
test
out
xchg
sahf
or
push
mov
aam
outs
outs
lea
cs
push
in
stos
xchg
push
scas
les
push
pushf
push
(bad)
cmp
lea
loope
cs
sub
xchg
xor
cmc
sar
int
mov
xchg
imul
in
sbb
scas
or
jnp
(bad)
out
frstor
sub
fsub
and
cli
lds
dec
in
(bad)
aaa
inc
inc
(bad)
ins
jecxz
jecxz
jl
xor
jno
je
cli
retf
(bad)
mov
repnz
ja
(bad)
inc
mov
push
loopne
je
int
in
sub
inc
stc
imul
adc
call
ins
mov
pop
push
outs
adc
or
add
xchg
push
jmp
dec
mov
dec
push
repnz
sar
sbb
add
scas
cmp
jmp
jo
pop
je
addr16
cmps
xor
hlt
in
add
lock
stos
std
adc
fbstp
jl
inc
add
push
and
mov
in
push
dec
arpl
sbb
jecxz
push
fsubr
jno
lahf
push
inc
xchg
inc
scas
int
push
out
rcl
arpl
fwait
pop
ror
add
jae
sub
dec
xlat
push
push
fdiv
in
rol
mov
(bad)
mov
mov
retf
pushf
aaa
pop
sahf
cmp
arpl
(bad)
icebp
rcl
inc
xor
or
dec
sbb
jmp
movs
jb
dec
mov
sbb
ins
scas
ins
cmp
sbb
add
daa
loopne
add
mov
sbb
dec
mov
jg
mov
cmp
test
int
std
pop
(bad)
fiadd
jno
cmp
or
mov
pushf
sbb
repnz
idiv
jae
or
jp
push
xchg
xor
adc
adc
inc
xchg
loope
jp
dec
jg
xor
sub
sti
dec
pop
and
pop
or
or
adc
cmps
stos
repnz
add
jle
pop
aam
out
and
cwde
pushf
push
mov
into
xlat
int
and
mov
icebp
sub
les
pushf
adc
pop
xchg
push
test
retf
jae
and
cld
jbe
jae
mov
fsubr
and
in
retf
xchg
adc
test
sub
in
sbb
loope
jecxz
cmp
rol
(bad)
jns
(bad)
sar
in
(bad)
jle
test
cs
sub
out
icebp
push
rol
sbb
ins
push
or
push
push
fcmovbe
jmp
inc
push
in
mov
outs
clc
in
mov
jp
in
xor
(bad)
std
mov
sbb
jle
les
sub
sub
fidiv
mov
add
out
jl
test
loopne
sbb
daa
push
ja
imul
jnp
jg
jne
sti
cmp
jne
xchg
out
or
(bad)
add
jno
rcr
les
xchg
movs
rcl
mov
call
sub
dec
pushf
es
je
addr16
add
clc
xor
jmp
test
out
or
leave
addr16
loopne
ret
(bad)
dec
pop
retf
pop
retf
bound
jmp
cbw
pop
push
jmp
xor
in
shl
mov
jb
cdq
enter
addr16
aaa
cmp
sti
ret
aad
mov
mov
mov
or
sub
add
cmps
sub
aam
sub
dec
adc
xchg
(bad)
shr
pushf
xchg
xchg
and
loop
outs
fldenv
scas
sbb
pop
test
cmp
movs
and
stc
sbb
pop
mov
mov
ror
sbb
repnz
cmps
sbb
(bad)
cwde
push
fld
sbb
pop
rcl
xchg
fadd
test
lock
sub
add
ficom
scas
cmps
mul
pop
(bad)
push
mov
or
xchg
xor
loope
jb
jnp
xchg
fist
xor
fidiv
dec
push
in
(bad)
cmc
xor
adc
in
adc
pop
xchg
mov
sbb
mov
scas
sub
adc
into
pop
push
loop
je
out
imul
sbb
jecxz
ret
mov
mov
inc
in
mov
in
jns
hlt
pop
icebp
(bad)
test
icebp
mov
sbb
xchg
xchg
xchg
xor
jle
jge
mov
sbb
inc
mov
repz
ja
data16
pushf
or
push
jge
mov
xlat
ja
add
stc
lea
dec
fs
pop
(bad)
repz
daa
jp
pop
mov
sbb
ja
les
(bad)
xor
cmc
add
cmp
leave
mov
sbb
int3
sbb
into
mov
cmc
adc
jle
mov
push
rol
push
sub
sar
push
jl
ret
std
mov
iret
add
sbb
hlt
fist
add
sub
into
fild
pop
sbb
cmp
add
cmps
in
repz
dec
sbb
adc
ss
push
call
add
prefetchwt1
ja
push
sahf
mov
out
retf
push
add
fisubr
inc
bound
aaa
fmul
xor
je
add
scas
loope
cld
cmp
pop
sbb
pop
xchg
retf
xor
mov
push
and
jnp
or
into
push
jecxz
cmp
mov
push
push
jnp
iret
mov
xchg
cmp
ret
add
es
cmps
cli
aam
jge
and
dec
jnp
in
out
mov
je
xor
inc
jmp
or
div
neg
(bad)
sub
pusha
pop
imul
xchg
cmp
or
push
cmp
pop
clc
aad
ds
mov
shr
mov
inc
dec
int
push
outs
xor
xor
mov
cmp
xchg
fcomp
or
mov
dec
mov
adc
retf
jmp
inc
sub
pop
sub
call
jno
test
ficomp
stos
addr16
xchg
jle
out
fadd
sub
aaa
aad
or
hlt
out
cld
movs
ret
cmps
xchg
(bad)
not
xor
jmp
adc
ret
nop
rcr
pop
cld
in
push
test
(bad)
mov
jmp
pop
jmp
lods
jmp
sub
jae
fdiv
repnz
setge
sar
and
jl
push
inc
add
fisttp
out
jae
and
push
das
push
dec
add
dec
xchg
rcl
fst
jp
sbb
outs
jno
adc
retf
lahf
gs
adc
ja
xchg
int
sbb
add
mov
les
in
dec
je
add
dec
int
pop
pop
test
mov
add
adc
mov
sbb
xor
cli
outs
sub
jne
arpl
ins
adc
jmp
ins
xor
test
idiv
cmp
ret
lods
ja
int3
into
xlat
ror
sbb
push
repnz
popf
imul
(bad)
lea
inc
jae
mov
mov
jno
xor
loopne
and
loope
call
add
adc
pop
mov
lods
mov
std
ins
in
jae
rcl
sub
pop
or
adc
xor
loopne
pop
movs
jne
push
in
adc
stos
mov
sub
adc
shr
call
and
and
lock
(bad)
mov
lock
jb
movs
push
in
inc
fs
inc
pop
jo
inc
fld
and
outs
sub
add
sub
pop
or
xor
or
leave
and
repz
retf
mov
stos
test
rcl
pop
popa
cs
dec
mov
popf
iret
fwait
int3
sbb
pop
push
(bad)
(bad)
aas
mov
cld
mov
daa
add
je
std
inc
jg
add
push
fldcw
pop
sbb
fcomp
inc
adc
or
sub
sub
and
push
sbb
test
cmc
and
ss
dec
xor
cmp
xlat
movs
mov
shr
xchg
cmps
adc
cmp
pusha
movs
inc
lods
pop
sar
pop
lods
mov
fist
fst
jge
ror
jmp
loop
xor
int3
les
je
lahf
test
aad
pop
retf
add
push
cli
ds
mov
in
add
add
aas
in
push
sub
shr
imul
xchg
sbb
inc
popa
outs
push
dec
push
outs
xor
xor
push
sub
imul
dec
dec
or
ret
daa
jne
sbb
movs
enter
std
cmp
mov
pop
push
stc
jae
inc
stos
mov
loop
les
das
inc
ret
nop
cmc
jecxz
push
aas
push
mov
and
popf
xchg
lods
mov
push
icebp
pop
mov
dec
jb
pop
xchg
setnp
js
lods
mov
fisub
push
js
icebp
jl
out
stc
pop
push
les
sub
cld
mov
stos
jno
out
call
icebp
test
dec
add
lods
jge
test
mov
clc
and
mov
push
sbb
fcom
ds
sar
mov
cmp
xchg
or
pop
sti
push
inc
stos
sub
and
fadd
push
xchg
daa
ins
mov
sbb
cdq
daa
lods
push
push
sbb
cdq
add
sub
inc
xor
or
scas
leave
daa
sti
inc
push
stc
scas
fild
inc
mov
push
gs
je
movs
xor
xchg
and
jg
xor
mov
push
add
rcr
inc
xchg
dec
bound
mov
loopne
dec
mov
mov
sbb
cmc
mov
mov
aad
push
test
shl
clc
push
cdq
mov
ret
ret
rcl
fcom
jne
xor
ret
retf
jb
add
movs
and
(bad)
rcl
pop
inc
test
aas
pop
jg
stos
mov
shl
data16
fimul
scas
xor
std
les
xlat
cwde
mov
mov
popf
jnp
mov
out
add
retf
sub
call
dec
mov
ins
cwde
ins
push
jl
cdq
icebp
xchg
fldenv
aas
test
and
or
(bad)
and
rcl
push
sub
js
and
xchg
sbb
push
cmp
in
and
jno
shr
pop
fcmovb
fild
sbb
cmp
push
push
mov
idiv
sbb
dec
nop
push
aam
repz
adc
adc
or
scas
mov
sub
sub
mov
lea
outs
(bad)
retf
cld
or
dec
leave
inc
pop
test
pop
retf
add
into
ja
les
push
xchg
dec
std
inc
xlat
pop
call
jmp
dec
cld
xor
push
and
push
push
sub
add
aas
and
leave
loop
mov
pushf
clc
mov
dec
and
inc
imul
xor
push
pop
pop
push
sbb
dec
retf
(bad)
pop
mov
pushf
mov
cmp
ret
and
jp
or
daa
test
sbb
(bad)
icebp
dec
test
test
add
dec
mov
sbb
aad
test
dec
pop
loope
push
push
mov
inc
mov
mov
in
push
inc
or
cmp
mov
fldenv
add
fs
into
lods
dec
add
dec
mov
dec
dec
test
pop
and
fisubr
imul
inc
or
sbb
ret
jns
xor
stc
mov
mov
sbb
sti
bound
xor
test
dec
xor
push
ins
mov
xchg
gs
mov
or
inc
jns
frstor
adc
push
mov
outs
call
inc
sub
jb
sub
xor
lods
loopne
loope
jp
add
aad
dec
mov
out
cmp
test
(bad)
pusha
mov
(bad)
imul
xchg
adc
in
pop
loopne
jo
mov
pop
int
mov
jmp
cs
sahf
mov
xor
(bad)
or
ds
add
adc
(bad)
xor
mov
pop
push
sti
retf
iret
add
jmp
es
in
dec
push
xchg
cmps
xlat
xchg
fiadd
sar
inc
movs
xor
div
scas
ins
movs
fstp
pop
add
sub
mov
mov
mov
mov
xchg
push
scas
inc
mov
ficom
int3
mov
xchg
movs
mov
inc
pop
jge
lods
xchg
cmp
(bad)
loope
and
mov
mov
sar
sbb
dec
mov
mov
popf
dec
pop
dec
cmp
nop
inc
sub
jmp
jne
sti
sahf
lods
dec
sbb
pop
dec
pop
sbb
cmps
call
loopne
dec
mov
jbe
adc
and
sub
mov
jmp
pop
sub
mov
mov
movs
(bad)
push
ret
mov
bound
dec
ja
adc
rol
jecxz
jmp
inc
ins
shr
jb
xchg
push
mov
cli
or
cmp
xor
or
dec
mov
add
jae
jmp
repz
lahf
out
ja
xlat
mov
mov
inc
ins
push
lahf
aas
test
lods
pop
jle
sbb
cmp
das
pop
repz
dec
mov
not
sub
rcr
add
call
pop
aaa
dec
mov
inc
or
pop
dec
iret
mov
and
add
fwait
pop
outs
(bad)
jns
jbe
xchg
rol
mov
cs
pushf
cmp
add
fcmove
lea
sub
data16
inc
cmps
mov
jnp
mov
xchg
(bad)
mov
push
mov
shl
dec
movs
fst
or
js
xlat
fwait
add
pusha
enter
push
jmp
add
add
daa
fwait
and
adc
call
mov
cmp
je
mov
pushf
(bad)
jmp
pusha
sti
mov
fmul
je
ror
shr
cmc
nop
mov
adc
mov
mov
loope
push
fisttp
sbb
lahf
bound
idiv
out
stos
mul
cmc
xor
fwait
inc
cdq
cmp
cli
mov
enter
mov
nop
stos
fimul
(bad)
push
jmp
in
sbb
std
and
mov
pop
fidiv
mov
push
inc
sbb
ret
fwait
mov
cmp
or
data16
inc
jno
mov
lock
sub
or
popf
fsub
mov
and
jmp
jns
cmp
std
jge
push
xor
dec
fcomp
push
or
ror
adc
or
cli
shr
add
aaa
sub
ret
sub
pop
sub
fst
ins
iret
fld
jg
or
xor
push
mov
xchg
inc
xor
adc
das
icebp
pop
or
iret
lods
es
sub
or
adc
dec
xchg
xchg
test
mov
sbb
sbb
add
and
movs
outs
jg
jae
add
js
mov
push
cli
fldenv
rcr
xchg
and
and
mov
pop
cmp
pushf
stos
stc
xchg
push
pop
xor
mov
push
dec
add
mov
sub
cli
popf
and
and
and
repnz
repz
pop
mov
pop
and
les
shl
shr
cmps
jp
shl
pop
bound
xchg
fmul
je
sar
jecxz
enter
in
xchg
dec
sar
mov
and
out
pop
adc
jge
cmp
cld
jl
and
jg
test
fsubr
mov
fs
fmul
adc
dec
jge
jb
sbb
adc
retf
hlt
add
dec
xchg
es
push
fadd
je
int3
sbb
das
inc
lods
add
jp
test
popf
div
outs
pop
pushf
ja
and
ret
sar
dec
or
jge
sub
iret
cwde
push
inc
and
out
fidivr
pusha
dec
das
adc
adc
or
lds
retf
in
inc
pop
dec
rcr
es
push
push
and
shr
bound
fidiv
fisttp
retf
mov
ins
test
push
mov
adc
test
retf
mov
cmp
dec
arpl
mov
fnstenv
imul
mov
out
je
lahf
mov
in
add
sub
mov
mov
jle
adc
and
adc
sub
push
pop
jge
xchg
ja
mov
int3
xor
pop
push
clc
retf
inc
or
lea
adc
test
adc
cmp
pop
jge
dec
mov
shl
gs
jae
neg
adc
pop
xor
retf
mov
and
call
push
bnd
or
in
push
je
adc
push
xor
arpl
(bad)
mov
rcr
bound
call
ins
push
outs
es
cmp
(bad)
xor
sbb
mov
push
cli
stos
ja
sbb
lds
jmp
test
je
sar
pop
jns
into
pusha
xlat
pop
test
push
test
inc
and
xlat
xchg
xchg
shl
push
scas
lods
cmp
gs
fnstsw
stos
ins
mov
les
cmp
mov
xor
test
cmp
aaa
(bad)
out
mov
ja
inc
mov
pop
xor
loope
in
dec
outs
sub
ins
enter
ds
out
xchg
push
push
xor
test
jmp
jle
push
inc
jge
inc
mov
aaa
dec
add
sahf
lods
gs
nop
pop
neg
(bad)
rcl
outs
xor
xchg
fadd
stos
mov
test
pop
mov
push
sbb
stos
mov
(bad)
xchg
xor
sub
add
stc
popf
sbb
ss
sti
push
xchg
les
sub
add
pop
das
push
rol
or
and
div
(bad)
push
inc
push
inc
sbb
sub
and
fidivr
scas
outs
mov
lock
retf
call
dec
adc
hlt
stos
(bad)
mov
out
pop
enter
jp
mov
cs
pop
push
pop
rol
shl
pop
outs
xchg
(bad)
int
inc
sbb
shl
pop
pop
jge
arpl
jge
xchg
movs
mov
ret
hlt
popa
or
sar
fs
and
sbb
test
lods
mov
ins
pop
and
xlat
movs
in
add
adc
cld
pop
pop
push
mov
push
pop
in
push
cmp
dec
inc
push
shr
push
lods
xchg
mov
shr
mov
pop
(bad)
cli
(bad)
popf
push
mov
fdivrp
sbb
mov
mov
xchg
enter
movs
xor
sbb
mov
ret
ja
fstp
fwait
(bad)
(bad)
xor
std
cmc
jge
cmp
shr
push
inc
or
movs
push
call
in
loopne
rol
daa
iret
outs
or
adc
outs
iret
fs
fsubr
lock
and
ja
addr16
add
enter
pop
or
add
xchg
data16
mov
scas
or
adc
(bad)
push
(bad)
test
call
inc
dec
in
into
popa
arpl
outs
sbb
aam
hlt
jbe
pop
mov
and
add
xor
sbb
pop
inc
cmp
jp
jnp
(bad)
cmp
push
jns
push
push
enter
repz
push
xor
jb
popa
lahf
pop
out
jnp
pop
sub
sar
out
hlt
mov
pop
outs
int3
push
call
sub
dec
fyl2x
jbe
in
xchg
push
mov
into
loope
xor
push
mov
mov
mov
in
shl
mov
test
test
fbstp
xchg
mov
push
pushf
lods
iret
sub
mov
jo
sar
cmp
movq
outs
(bad)
(bad)
clc
icebp
out
cld
add
imul
xor
movs
lahf
push
inc
mov
call
hlt
iret
data16
xor
mov
out
adc
mov
mov
mov
movs
add
xor
mov
mov
loope
xchg
(bad)
pop
(bad)
enter
ret
outs
fild
and
scas
jge
movs
xchg
sbb
aam
cld
mov
mov
push
(bad)
int
ror
pop
das
mov
dec
mov
mov
iret
sbb
jmp
jno
pusha
es
repnz
xor
shr
jmp
or
mov
or
inc
inc
popa
sub
sbb
test
mov
stc
jg
shr
fimul
jb
jnp
(bad)
sub
stc
or
jl
stos
lds
mov
fidivr
or
mov
loopne
inc
shl
mov
push
jge
call
cmc
sti
cmp
stos
cmc
ss
cmp
pop
or
int3
pop
add
fwait
pop
sahf
ret
imul
mov
sub
hlt
(bad)
or
pop
in
mov
leave
lea
xchg
cld
and
ficomp
xor
xchg
stos
sbb
mov
jbe
outs
mov
xor
dec
mov
sti
aas
inc
and
popf
mov
mov
sub
test
inc
adc
inc
ret
repnz
mov
jb
adc
ins
retf
aaa
sbb
loop
movs
rol
movs
ret
in
xor
dec
pop
xchg
inc
sbb
dec
add
scas
push
rol
into
loop
inc
inc
sub
stos
iret
inc
aam
fisttp
mov
and
sbb
mov
outs
ins
(bad)
mov
mov
(bad)
out
mov
jo
push
movs
cdq
inc
(bad)
xchg
push
les
sti
mov
std
jbe
call
cmps
ret
popa
inc
jo
xor
mov
aas
lods
je
xchg
test
xchg
xor
dec
(bad)
cdq
aad
and
dec
addr16
dec
push
add
inc
mov
nop
sub
cmp
neg
imul
lods
mov
leave
pop
add
cwde
cmps
and
mov
pop
mov
fadd
dec
hlt
and
cld
rcl
out
add
(bad)
adc
mov
push
ror
or
iret
or
je
loop
in
iret
ja
jbe
cmps
(bad)
cmp
aad
fisubr
(bad)
int3
lds
cld
jnp
push
daa
enter
push
inc
cmp
cmp
add
pop
push
inc
jmp
cld
and
adc
fs
and
je
xor
pcmpeqb
loope
xor
jg
mov
out
imul
mov
add
aaa
and
jg
dec
cmc
inc
pop
xchg
jmp
xchg
fiadd
cmp
sbb
sub
push
or
sbb
aaa
cmp
dec
xchg
(bad)
xchg
mov
xor
mov
retf
call
data16
in
push
sahf
(bad)
pop
push
pop
jo
fisttp
sahf
psubb
pop
inc
sbb
xchg
cmp
or
jecxz
sbb
imul
push
dec
sbb
addr16
js
icebp
xor
loope
js
add
dec
and
add
cmp
outs
test
ja
mov
cmp
icebp
enter
sbb
pop
cmp
data16
push
(bad)
adc
xor
jp
pop
push
inc
popa
out
sti
neg
outs
repz
jge
repz
mov
jl
lock
inc
in
cmp
and
sub
outs
fbstp
out
(bad)
sti
jmp
jle
dec
jo
mov
and
adc
push
push
add
pop
enter
xchg
das
fnstsw
inc
cwde
(bad)
fcmovbe
inc
in
jmp
ret
pushf
paddsb
mov
or
pop
push
cs
sub
xchg
add
jmp
push
outs
iret
icebp
xchg
mov
add
fbstp
and
sbb
cmp
or
mov
dec
iret
jns
and
call
mov
pop
repz
mov
stc
fs
dec
out
test
push
fsub
xor
mov
mov
sti
mov
shl
arpl
div
js
or
mov
aas
stc
in
xchg
dec
nop
pop
xor
js
xchg
sub
call
push
jmp
cs
out
les
xor
mov
xchg
cmp
sub
push
mov
ror
fstp
imul
mov
sub
inc
icebp
pop
cmp
int
dec
mov
mov
call
clc
mov
lods
retf
cmp
ja
jmp
add
sbb
cld
mov
mov
dec
loop
test
xor
aam
pop
mov
outs
push
movs
mov
or
int
xchg
mov
add
jns
push
pop
inc
mov
popa
test
mov
rcr
sti
out
jmp
jmp
xchg
adc
scas
(bad)
popf
popf
push
bound
movs
mov
pop
push
out
shl
je
scas
mov
fimul
fisttp
dec
mov
and
hlt
xor
and
das
mov
inc
mov
dec
and
aas
shl
mov
dec
in
jnp
sub
(bad)
jmp
mov
movs
fmul
xchg
jnp
sar
add
jmp
cmps
mov
jb
inc
in
call
cld
adc
pop
lock
in
sbb
cld
or
movs
or
add
std
adc
cli
ds
dec
icebp
repz
into
pop
cmc
adc
je
enter
(bad)
push
push
adc
push
(bad)
fwait
xor
and
push
xor
dec
xor
int3
cld
add
or
inc
arpl
repnz
inc
out
in
call
in
jecxz
out
retf
wrmsr
or
mov
push
aaa
mov
xchg
jecxz
mov
sti
mov
dec
movs
mov
js
and
nop
leave
mov
retf
movs
sub
xchg
mov
cmp
xchg
cdq
xchg
dec
add
xchg
mov
and
ds
arpl
shl
pop
and
addr16
and
and
je
adc
inc
hlt
movs
xchg
sbb
push
lahf
mov
xor
cmps
mov
mov
pop
cmps
mov
repnz
in
mov
mov
test
cmp
test
idiv
cmp
xor
pop
ret
test
mov
cmp
test
xchg
movups
inc
mov
xchg
ficomp
nop
push
iret
xor
es
mov
xchg
push
push
rcl
jb
pop
jne
push
sub
sbb
dec
(bad)
adc
sar
sbb
aad
or
mov
jge
sbb
addr16
retf
popf
int3
push
dec
outs
jmp
and
or
enter
push
cmp
add
std
mov
call
cdq
std
call
lea
mov
push
test
push
inc
lods
pop
std
out
popa
stos
push
inc
pushf
mov
xchg
sti
mov
jae
mov
xchg
test
cmc
mov
sub
jne
jbe
pusha
ds
or
dec
stos
enter
jmp
push
jne
push
and
jecxz
inc
or
in
das
pop
lock
(bad)
cmc
mov
hlt
mov
push
movs
cs
push
scas
ret
push
retf
pop
sub
in
outs
add
mov
icebp
sbb
lds
mov
int3
dec
aad
ret
mov
adc
mov
cmp
in
jns
cmp
push
movs
xor
jle
(bad)
pop
cmp
in
xchg
fs
test
xchg
inc
jmp
and
inc
jg
enter
test
dec
inc
mov
mov
push
jge
aaa
test
jb
mov
inc
out
sub
and
jbe
add
call
lods
scas
xchg
sbb
inc
or
push
in
adc
pop
(bad)
lahf
popf
bound
mov
dec
push
enter
mov
adc
jecxz
xor
mov
mov
sub
sbb
mov
mov
xor
sbb
lock
pop
mov
fwait
inc
repnz
mov
sbb
sub
jno
adc
dec
loopne
add
popa
push
mov
ror
call
sbb
in
mov
inc
and
jns
pop
jae
sbb
retf
xchg
aaa
out
outs
add
dec
out
imul
es
and
dec
scas
push
cmps
lahf
fs
jmp
dec
or
or
and
cwde
pushf
mov
scas
aad
stos
adc
cmps
jmp
adc
or
pop
repnz
and
nop
rcr
rol
sti
xchg
test
sahf
pusha
aam
in
enter
(bad)
test
adc
in
lods
aam
clc
xchg
push
inc
and
and
int
mov
outs
pushf
push
outs
aad
inc
jns
das
or
and
mov
sub
and
cmc
jae
sti
sub
xor
movs
jnp
push
or
ds
stc
dec
lock
adc
lods
dec
jb
cs
dec
xchg
pop
icebp
test
xchg
dec
loop
arpl
jnp
inc
mov
cmp
push
int
pop
popa
(bad)
ins
cli
xchg
aad
dec
mov
cmp
xor
mov
aas
mov
fbstp
shl
mov
retf
sub
test
mov
es
aam
cmp
push
leave
es
aaa
cmp
fmul
mov
adc
or
sbb
icebp
jecxz
cmp
adc
leave
sub
mov
pop
xchg
cli
adc
mov
movs
jg
lock
pop
in
push
mov
(bad)
mov
ret
pop
repnz
int
push
cmp
mov
sbb
xchg
push
(bad)
pop
mov
lods
jle
ss
aas
lar
dec
imul
fiadd
movs
sbb
call
jnp
jns
or
or
rcl
and
call
enter
pop
ret
pop
or
sbb
xchg
xchg
pushf
xor
push
xchg
outs
lods
fst
or
and
adc
dec
jae
jmp
out
jae
repz
fisttp
mov
fild
rol
or
push
sub
repz
fisttp
jne
mov
add
aam
fsubr
fstp
fsub
mov
ss
int3
xor
loop
dec
jge
pop
fwait
aas
test
ss
lea
loopne
ret
fst
cdq
inc
jne
push
outs
add
xchg
add
fisub
sahf
lods
jmp
sbb
mov
popa
je
xchg
dec
outs
mov
inc
(bad)
jno
or
push
adc
sub
hlt
mov
iret
cmps
and
test
adc
jb
pop
pusha
jo
lock
mov
rol
lods
shl
in
cmp
jg
xor
(bad)
jecxz
or
mov
inc
stos
ror
lahf
mov
outs
in
scas
sub
pop
pop
test
sub
test
test
sar
aam
push
push
fiadd
mov
nop
add
sysenter
stos
add
or
call
call
aas
inc
movs
ret
jmp
and
sub
arpl
imul
iret
shl
xor
xor
fucomp
mov
int
xor
in
mov
stos
or
dec
dec
cwde
movd
cmp
or
mov
rol
test
fcom
rol
xchg
sar
popa
mov
sbb
addr16
add
jne
lds
and
or
or
scas
or
and
mov
and
sbb
sti
loopne
mov
loope
and
fcomi
mov
add
adc
xor
push
enter
pand
adc
mov
push
mov
mov
xchg
inc
bound
adc
mov
cmp
mov
(bad)
es
mov
push
ins
and
jmp
or
adc
mov
das
push
icebp
movs
cs
jo
push
lea
gs
xchg
je
gs
movs
sbb
fst
xor
in
mov
xchg
cmps
jle
test
jo
xchg
push
or
jg
in
inc
jae
pushf
push
retf
pop
sbb
inc
fs
outs
stc
xor
mov
push
xor
pop
jno
les
test
and
pop
add
cmp
xchg
ss
push
rcl
xor
aas
mov
jl
jl
shl
jle
dec
jnp
cmc
pop
das
cmps
inc
mov
push
mov
shr
xchg
push
pop
das
mov
sti
inc
push
jb
pushf
shl
sbb
mov
ja
mov
pushf
retf
jecxz
jg
fsub
ins
out
xor
push
and
std
call
mov
mov
and
push
add
aam
sbb
ror
mov
enter
jo
outs
push
ret
nop
loopne
lea
ins
scas
push
mov
mov
push
xchg
xchg
and
fsub
jb
push
add
mov
mov
add
xchg
fisub
xchg
mov
xchg
test
push
into
jae
inc
bound
jbe
pop
or
in
fs
retf
push
adc
cmp
pop
xor
pop
mov
push
jmp
jmp
cmc
cmc
(bad)
out
mov
fdiv
ror
mov
or
fistp
es
adc
out
loopne
mov
ds
dec
ja
aas
int
pop
es
mov
mov
pop
mov
and
inc
popf
xor
dec
jbe
xchg
add
int3
push
mov
cdq
jae
xlat
jg
pop
xor
es
push
icebp
jmp
cmp
repz
out
mov
(bad)
push
outs
adc
les
mov
or
push
cwde
mov
xchg
xlat
dec
xchg
out
mov
mov
mov
test
dec
dec
lahf
fwait
adc
mov
and
fwait
jae
ret
fwait
sbb
dec
(bad)
hlt
cmp
add
mov
fidivr
jmp
xlat
(bad)
and
dec
ins
adc
arpl
or
out
mov
retf
dec
dec
mov
mov
and
repz
xor
mov
add
mov
cmp
mov
or
out
iret
sbb
or
cmp
mov
out
fsub
mov
xchg
jp
in
imul
loope
and
nop
fs
paddsb
sub
add
(bad)
test
xor
jbe
dec
pop
cmp
add
sti
jp
jne
sbb
cmps
push
pop
outs
jp
loopne
inc
mov
pop
pop
outs
std
fs
das
je
addr16
xlat
lods
adc
push
cs
push
inc
adc
test
mov
mov
ret
rol
and
out
cmps
adc
mov
sbb
fcom
dec
mov
xchg
ins
dec
inc
mov
fnstsw
add
push
mov
add
fisttp
jbe
pusha
push
ret
lds
test
push
test
mov
gs
frstpm(287
sub
pop
sub
pop
xor
retf
loop
daa
movs
mov
lock
mov
mov
and
or
retf
jecxz
mov
cmps
push
dec
xor
dec
sbb
popa
clc
mov
pop
rcl
sub
push
dec
ds
dec
add
xchg
aad
pop
retf
mov
repz
stc
cwde
cmp
or
or
popa
push
ins
cmp
add
jmp
push
cwde
mov
pop
or
sub
or
dec
test
mov
xor
sbb
aam
pop
pop
aam
inc
arpl
adc
icebp
pop
pop
or
iret
or
mov
scas
int
in
cmp
test
sub
ins
enter
adc
cmp
les
adc
xchg
jmp
mov
shl
fsubr
jl
or
imul
shr
std
out
push
das
lahf
(bad)
or
pop
outs
dec
add
int
ret
push
sub
and
jo
push
dec
pop
lods
xchg
pop
test
mov
hlt
adc
xchg
adc
shl
test
movs
pop
out
movs
and
sar
inc
sub
jae
cli
sar
xchg
rcr
mov
dec
mov
out
pop
push
cdq
cmp
aas
sbb
jecxz
test
xchg
loopne
jno
cdq
out
call
hlt
cwde
push
out
(bad)
aad
scas
(bad)
push
xor
inc
dec
and
jge
into
xor
arpl
push
mov
mov
dec
popa
in
inc
out
sahf
shr
dec
in
mov
cmp
call
xor
add
or
sub
cmp
lods
pop
fs
pushf
(bad)
mov
sbb
imul
imul
jb
dec
pop
mov
mov
out
jp
shl
test
(bad)
jae
in
xchg
fldz
or
and
iret
inc
mov
adc
aaa
into
movs
mov
jmp
(bad)
fisub
xchg
pop
cld
xor
or
clc
cmp
pop
and
mov
test
jns
sahf
ja
int
xchg
cmps
stos
inc
sbb
(bad)
and
inc
inc
mov
addr16
daa
pop
adc
aas
outs
pop
jbe
or
(bad)
scas
addr16
bound
sar
pop
mov
ss
fmul
pop
sbb
mov
(bad)
cdq
fiadd
mov
or
jo
and
stos
jno
fistp
mov
mov
scas
ss
and
retf
pop
sti
and
popa
(bad)
gs
jmp
or
scas
into
das
pusha
ins
pop
xchg
jns
popf
aad
bnd
sbb
ja
cdq
test
cmp
or
pop
cmp
stc
clc
xchg
dec
pop
outs
inc
dec
xor
jno
pushf
cmp
or
dec
in
add
fimul
lahf
sbb
or
sar
add
jle
scas
scas
aaa
dec
jle
pop
mov
inc
jbe
call
xchg
or
mov
cmc
inc
leave
add
mov
xor
loope
push
cld
fdiv
fisttp
lods
mov
stc
dec
ds
in
mov
inc
dec
test
mov
stos
scas
dec
mov
push
cld
iret
jns
aad
mov
mov
fcmovnbe
mov
xor
lods
adc
mov
xchg
out
push
imul
ins
push
jb
test
test
and
icebp
mov
(bad)
sub
cmc
sbb
pop
popa
mov
or
sbb
xor
pop
fld
or
js
xchg
popf
cmc
jge
fst
stos
xor
pop
inc
xchg
cs
jmp
test
xchg
shr
outs
cld
mov
test
ins
inc
mov
arpl
repz
jb
ror
hlt
xchg
xor
sub
scas
push
ins
les
jg
leave
fisubr
lea
pop
pop
push
or
add
and
xor
xlat
push
push
lea
(bad)
mov
mov
call
scas
add
inc
mov
jne
push
cmp
daa
cmp
fbld
ins
and
xor
mov
ins
mov
xchg
cmp
test
jg
fist
xchg
add
loop
pop
xlat
jbe
xchg
pop
sub
pop
mov
loop
and
stos
setae
bound
dec
enter
data16
aas
enter
jmp
cmp
push
loope
rcl
fwait
js
jmp
fstp
cmp
aam
cmps
mov
and
sbb
aas
push
adc
jae
push
pop
out
push
out
popa
jae
in
xor
jno
mov
add
dec
fsub
cmc
sar
mov
sub
jns
mov
test
fs
and
addr16
jne
je
popa
scas
leave
push
xchg
idiv
daa
adc
adc
jbe
das
push
jg
loopne
push
sub
jns
aam
test
push
mov
stos
mov
push
and
inc
and
push
std
aad
mov
shl
mov
cmps
jae
mov
dec
push
dec
cmp
cwde
rol
loope
popf
mov
addr16
out
ficom
movs
retf
out
(bad)
push
or
in
jle
daa
xor
ficomp
or
cmc
stc
inc
mov
mov
xchg
inc
outs
scas
call
dec
inc
fiadd
mov
ds
mov
mov
cmp
or
fild
sbb
adc
push
retf
inc
cmc
fs
mov
gs
out
jge
movs
mov
jp
adc
xchg
cmp
mov
sar
mov
test
leave
call
adc
scas
nop
ja
and
std
in
bound
mov
stos
out
sub
cmp
popf
scas
or
adc
mov
sbb
jmp
out
inc
movs
mov
xor
xchg
push
bts
pop
mov
lods
test
(bad)
or
(bad)
inc
aad
imul
mov
push
icebp
repz
loope
sbb
(bad)
pop
enter
inc
pop
scas
les
scas
inc
sub
push
xor
cs
mov
pushf
call
push
int
out
mov
in
mov
nop
mov
sbb
data16
rcr
icebp
jmp
imul
sbb
and
imul
jae
fstp
push
je
inc
fnstenv
aad
dec
cmp
mov
adc
sub
sbb
fdiv
adc
dec
mov
ins
jb
inc
cmp
test
fcmovnu
ret
mov
push
shl
gs
mov
out
stc
imul
repz
jnp
lock
jecxz
aad
fidiv
test
xchg
in
cmp
jl
jmp
into
mov
cs
push
ins
xor
xor
ret
xchg
sub
sbb
or
retf
test
arpl
cs
sub
mov
lock
mov
xchg
aaa
mov
fsub
sub
imul
test
push
cmp
mov
scas
mov
xchg
xchg
jecxz
xchg
stc
adc
adc
sahf
jno
cdq
out
jle
cmp
nop
(bad)
jne
and
dec
jmp
inc
out
outs
and
daa
fwait
stos
xchg
sbb
sbb
or
loop
lods
cmps
or
fadd
sub
(bad)
xor
imul
into
push
ret
inc
dec
scas
inc
test
fs
adc
xchg
call
cli
sbb
arpl
inc
cmps
div
jmp
push
je
lods
fcmove
leave
pop
dec
jg
inc
retf
inc
cmp
cld
inc
sub
sar
push
inc
fs
int
xor
sar
sti
popa
fwait
mov
xchg
mov
inc
pop
pop
dec
pop
adc
mov
mov
je
sub
xchg
std
xchg
jge
push
enter
inc
leave
add
mov
jae
ret
lods
repnz
and
sub
cli
or
dec
inc
fadd
shl
mov
jg
cmp
and
(bad)
(bad)
xchg
test
call
sub
add
mov
(bad)
mov
cdq
ins
rol
xor
loopne
push
mov
popf
sub
mov
mov
jg
ss
fisub
jb
mov
cdq
fstp
ror
lods
cmc
fld
ds
es
mov
rol
push
js
stos
in
pop
or
call
scas
lods
adc
jl
pop
sti
push
dec
out
mov
ror
std
push
ss
les
ds
mov
cld
(bad)
ds
push
(bad)
movs
mov
inc
push
lock
out
cli
lahf
xor
ins
pop
outs
mov
ja
push
and
test
push
enter
adc
push
(bad)
ret
mov
add
or
call
push
retf
sbb
mov
inc
mov
lahf
icebp
pop
push
out
iret
adc
pop
jecxz
dec
cdq
stos
loopne
data16
ror
dec
fsub
sbb
sahf
and
fdivr
sub
mov
inc
cmp
mov
dec
dec
pop
mov
cmp
push
xchg
sbb
js
addr16
fmul
addr16
gs
jne
sahf
cmps
retf
adc
ins
xor
xchg
add
sub
pop
test
scas
pop
xor
cs
addr16
mov
neg
dec
add
add
inc
jmp
(bad)
sub
xchg
xchg
xchg
aas
and
push
jae
jb
in
ds
daa
cli
das
adc
mov
sbb
add
add
jle
sbb
cmp
xchg
jmp
add
pop
push
(bad)
and
int3
retf
mov
adc
push
out
aam
arpl
mov
outs
pop
inc
pop
cs
ret
test
in
test
or
push
shl
clc
xchg
popf
dec
mov
sbb
inc
xor
sar
xlat
imul
xor
gs
pop
jmp
mov
cmp
into
xchg
pop
outs
and
loop
dec
adc
pusha
movs
mov
pop
mov
dec
pop
jmp
mov
(bad)
ja
aaa
inc
popf
dec
push
xchg
adc
push
retf
jmp
xor
loope
jne
jl
shl
dec
std
lods
sub
ud0
sub
aaa
adc
adc
sbb
outs
adc
(bad)
push
inc
aaa
imul
aam
fidivr
mov
xchg
out
out
xor
sub
das
ins
jno
pop
mov
xchg
jmp
jb
mov
xlat
fs
mov
test
daa
ins
fadd
cdq
(bad)
ss
retf
mov
rcl
dec
cmps
sub
nop
dec
xor
mov
sub
push
pusha
or
add
sbb
aaa
test
fnstsw
jae
in
leave
inc
call
sbb
loopne
lahf
push
rcl
test
xor
xlat
dec
xor
push
sar
wrmsr
mov
pmullw
jge
add
mov
mov
(bad)
scas
call
push
and
rcr
mov
js
ror
iret
mov
xchg
(bad)
push
fisubr
mov
popa
dec
sbb
inc
ror
ins
cmp
adc
push
rol
(bad)
sub
lahf
call
nop
nop
rol
fcom
ror
jns
dec
or
add
adc
xchg
jge
je
outs
jmp
jl
sbb
add
cmp
imul
pop
pusha
and
fidivr
pop
shl
pusha
aaa
and
es
add
fdivr
in
mov
pop
cmp
fmul
fmul
push
jmp
or
std
xchg
jno
mov
frstor
pop
mov
xchg
mov
ja
cmc
fwait
mov
sub
and
mov
aas
mov
xor
mov
dec
xchg
mov
imul
xor
mov
mov
sahf
retf
addr16
(bad)
mov
jle
std
repz
call
mov
test
add
cld
adc
mov
jb
pop
sub
inc
test
inc
out
push
xor
jge
pop
push
and
lea
shl
(bad)
mov
jg
and
ror
mov
enter
fistp
shl
icebp
mov
cmp
mov
neg
stos
mov
test
inc
ja
lds
jns
cld
repnz
pop
jne
jo
and
ret
call
rcl
ficomp
test
inc
add
mul
js
fnstenv
dec
into
mov
cmp
repz
push
mov
outs
cmp
test
fsubr
jae
sbb
out
mov
mov
int
enter
icebp
dec
or
add
push
jno
das
scas
add
shl
repnz
mov
scas
and
into
xor
pop
add
sbb
movs
jmp
dec
fst
sahf
mov
xor
int
pop
mov
xchg
pop
cwde
jo
sbb
mov
push
adc
fldcw
rcl
jp
xor
movs
popf
adc
fistp
cmps
sbb
cmc
fwait
movs
mov
pop
push
pushf
imul
pop
adc
dec
jmp
mov
(bad)
scas
mov
adc
mov
sbb
outs
jmp
and
daa
add
or
imul
mov
bound
push
pushf
jo
fs
jp
xchg
mov
jae
fwait
sub
scas
mov
inc
jb
sti
push
jp
xchg
imul
and
fcom
lahf
sub
mov
or
pop
pop
sub
jge
(bad)
pop
ins
mov
dec
pop
dec
and
call
lahf
jmp
movs
sbb
ds
push
rol
(bad)
fisubr
cmp
inc
aas
nop
popf
fst
pop
xchg
xor
cwde
mov
std
pop
ret
and
cmp
adc
dec
and
mov
stos
jo
push
or
sub
mov
cmp
test
stos
rcpps
sbb
push
(bad)
pop
cmc
jge
jns
mov
out
outs
xchg
sti
popa
ss
inc
mov
fstp
jmp
fcom
je
xchg
inc
push
push
std
mov
and
call
pushf
(bad)
dec
rcl
sub
out
cs
in
xor
test
test
cld
paddusw
retf
aaa
fistp
push
push
data16
inc
ins
cdq
xchg
mov
daa
push
lea
mov
sbb
or
inc
sbb
mov
(bad)
repz
dec
adc
adc
rol
mov
ss
mov
mov
js
jnp
rcl
jno
inc
push
adc
jge
data16
push
sbb
loopne
call
jo
sahf
shr
sub
jp
popa
dec
scas
mov
mov
(bad)
leave
test
data16
mov
mov
jmp
push
scas
add
inc
inc
retf
jmp
sub
or
mov
pop
adc
(bad)
shl
xor
pop
rol
add
rcr
and
lea
push
neg
outs
inc
sahf
jb
enter
mov
aad
xor
xchg
mov
sbb
push
cli
test
mov
lods
mov
or
xchg
test
out
daa
push
adc
xchg
mov
push
mov
and
jle
pop
sbb
imul
sti
(bad)
mov
sbb
bound
adc
mov
and
in
aas
or
mov
fcomi
je
nop
pop
fbld
jmp
jnp
push
xchg
popf
repz
icebp
sub
dec
ins
pop
repnz
mov
and
aad
push
movs
push
cmp
push
adc
ss
ja
test
lds
lds
pusha
enter
inc
xor
call
aad
push
nop
out
jmp
dec
aam
ins
cmp
mov
mov
sbb
jmp
mov
(bad)
sub
cmp
push
jmp
adc
clc
test
das
fild
inc
sahf
jae
mov
cdq
fcomi
div
fstp
cmp
retf
pop
mov
fstp
sbb
mov
jge
pop
mov
stos
dec
call
retf
cmp
xlat
inc
mov
dec
adc
and
ficomp
xchg
jge
jnp
call
stc
push
xor
push
rcr
pop
dec
imul
loope
jp
arpl
rcr
sbb
jge
aad
mov
fmul
das
pop
shl
mov
dec
and
xchg
dec
cmps
enter
(bad)
xor
mov
inc
push
call
push
arpl
popf
daa
push
fist
adc
mov
xor
fild
pop
and
mov
mov
xchg
and
lods
in
xor
(bad)
es
push
popf
jb
xor
lock
gs
sbb
das
push
push
lods
not
je
push
fdivr
inc
cmc
pop
sub
and
or
pop
mov
scas
jmp
rcl
int3
jge
sub
push
push
sbb
popf
call
lods
hlt
imul
inc
jae
add
icebp
dec
sti
ror
mov
cmp
pushf
aas
cwde
adc
add
mov
aad
xor
sbb
sbb
mov
rol
ror
xchg
rcr
cli
test
xchg
jecxz
rcr
sub
(bad)
in
cmp
xor
scas
popa
jmp
xor
cmp
jmp
dec
jo
pop
das
mov
mov
daa
sbb
int3
loopne
pop
neg
pop
es
sbb
lds
sbb
cs
aam
mov
outs
test
lock
xchg
mov
test
stc
not
stos
jecxz
inc
xor
mov
in
lea
ins
push
mov
and
call
xor
inc
sub
lea
lods
gs
dec
pop
fwait
pop
mov
repz
sahf
pop
add
imul
outs
stos
cmp
mov
adc
mov
aam
push
ins
inc
sbb
cmp
push
pop
sub
pop
and
call
nop
fdivp
adc
push
call
inc
fist
sbb
in
int
dec
fisttp
add
paddusb
lea
int
cmp
std
jo
adc
or
push
jns
sub
sbb
jle
or
or
xchg
xchg
aas
sti
xor
jno
mov
xor
pushw
fwait
out
jl
sub
push
pop
sti
jge
aaa
addr16
inc
sub
add
jo
pop
mov
sar
mov
movs
(bad)
push
jecxz
outs
add
and
dec
shl
or
adc
imul
push
imul
xchg
add
adc
and
je
or
inc
mov
dec
(bad)
nop
pop
push
scas
xor
sahf
adc
jo
pop
add
inc
mov
mov
or
out
loop
add
mov
cli
fwait
cmp
fincstp
or
mov
xor
int3
push
sub
mov
mov
loop
lea
movs
retf
outs
aad
mov
mov
int3
sahf
adc
sti
shl
retf
out
sbb
loopne
pop
xor
test
test
sub
fwait
jge
cmp
sbb
add
in
mul
ss
sbb
out
pop
ror
stos
gs
cmp
dec
mov
sbb
test
stos
inc
jge
stos
fnstenv
add
dec
(bad)
bnd
add
mov
add
unpcklps
dec
imul
jg
movs
push
and
(bad)
retf
jnp
sub
fmul
lea
rcl
test
dec
cmp
ret
push
adc
stc
in
aas
cwde
xchg
xor
outs
sti
xchg
jbe
jb
ror
add
fwait
cmp
mov
ins
loope
cmp
mov
push
jb
dec
cdq
fmul
cld
xchg
mov
mov
dec
imul
pop
pop
xor
jmp
scas
ins
mov
retf
sar
sbb
sbb
add
cmp
movs
inc
adc
shl
cld
fmul
(bad)
pushf
js
sbb
adc
dec
rcr
cmp
(bad)
adc
push
push
or
mov
test
adc
xor
mov
and
mov
mov
(bad)
aaa
push
dec
push
dec
pop
cli
bnd
pushf
retf
jb
lds
icebp
stos
push
inc
enter
cs
leave
cli
jne
push
fst
ss
push
mov
pushf
lahf
cmp
sbb
shl
and
stc
div
xchg
dec
sbb
inc
mov
inc
cdq
inc
pop
popa
sbb
fisubr
mov
and
mov
shl
nop
xchg
jmp
call
mov
mov
sbb
xlat
jmp
(bad)
les
sbb
pop
jp
add
add
test
repnz
xlat
icebp
jl
push
imul
sbb
cld
sbb
dec
sbb
push
ins
sbb
sub
pushf
clc
fwait
mov
ror
add
in
into
std
inc
mov
das
ror
pop
pop
pmulhw
mov
push
and
shl
and
mov
jle
addr16
cwde
xchg
push
ror
ds
call
adc
sar
inc
or
jne
fiadd
fidiv
lods
sahf
pop
push
xor
stc
pop
je
sbb
inc
mov
push
ins
mov
mov
push
out
fcmovu
and
pop
jle
cdq
fwait
push
cmps
in
je
cmps
stos
out
pop
aam
mov
or
stos
inc
mov
pop
ins
in
stc
mov
adc
mov
xor
mov
adc
gs
arpl
add
mov
sub
shl
adc
(bad)
aam
jno
jmp
dec
push
cmp
add
scas
add
sub
retf
lods
retf
xchg
jmp
inc
mov
arpl
nop
pop
mov
in
cmps
aam
ret
xor
sub
retf
xor
int3
jl
inc
je
(bad)
xchg
jno
inc
in
fmul
pop
dec
jns
dec
sub
mov
jo
sahf
push
out
push
sbb
mov
mov
into
mov
jbe
xchg
cli
mov
sbb
push
and
fcom
enter
and
call
mov
mov
out
sub
cld
lds
ins
push
aam
jecxz
push
mov
sub
aad
pop
cmps
jle
jecxz
pop
cmp
cmp
fdivr
add
or
and
retf
cs
nop
lds
fcmovb
out
(bad)
sbb
push
jns
popf
daa
xor
nop
inc
xlat
mov
ror
js
cld
icebp
jne
lods
out
or
cmc
mov
jmp
mov
jp
and
fstp
push
repz
or
cdq
cmps
jbe
loope
call
repz
shr
mov
xchg
pop
pop
add
push
mov
retf
gs
rol
fbld
push
inc
out
imul
xchg
and
bound
add
cs
ins
push
ss
nop
sar
sub
fist
jns
pop
push
jno
ja
cmp
push
xlat
std
test
pusha
pop
arpl
out
mov
iret
push
movs
xor
add
lods
retf
mov
jns
leave
out
jl
jne
test
inc
test
fadd
add
pop
xor
adc
inc
mov
out
mov
mov
xchg
jb
push
mov
and
push
dec
sbb
js
hlt
sub
jmp
lds
cmp
or
mov
xlat
lahf
add
js
dec
cs
jae
push
mov
dec
ja
loop
mov
xlat
lds
or
cmp
out
adc
popa
fidiv
scas
cmc
cmp
mov
js
inc
addr16
and
cmp
jg
mov
gs
and
int
hlt
mov
inc
punpckhwd
lea
and
and
xchg
call
int3
sahf
fist
sbb
jbe
mov
(bad)
dec
sbb
inc
lds
mov
push
ss
repz
inc
cmp
cli
aas
inc
jge
push
enter
jns
push
neg
mov
das
loop
pop
xchg
loop
pop
cld
out
mov
or
and
shl
sbb
xchg
popa
pop
(bad)
sub
xor
lahf
pop
push
jmp
jae
push
sbb
mov
xor
leave
loop
dec
in
mov
jns
xor
bound
push
arpl
jo
sbb
mov
mov
bound
mov
fisub
push
mov
jecxz
retf
mov
xor
or
and
xchg
fiadd
fisttp
push
repnz
mov
or
in
retf
push
retf
fmul
repz
mov
aaa
jl
cwde
popf
jns
in
jns
enter
imul
fwait
in
arpl
dec
fdiv
test
jmp
(bad)
cld
sub
inc
outs
loop
ror
inc
(bad)
adc
dec
shl
mov
loop
mov
lea
pop
in
pop
push
and
enter
jnp
into
pop
dec
push
fst
outs
push
pop
xchg
push
mov
repz
scas
push
xor
pop
dec
push
in
cmp
ja
ins
mov
sub
sub
dec
cmps
(bad)
shl
mov
into
fs
ins
push
mov
mov
lds
sbb
push
add
pop
in
ss
add
and
cmp
dec
and
inc
in
cmc
fistp
(bad)
xchg
cmp
push
cwde
pop
dec
inc
and
scas
lods
mov
cwde
sub
adc
mov
lods
das
(bad)
sub
mov
sbb
lea
es
leave
jl
icebp
enter
outs
mov
pop
(bad)
inc
inc
jo
out
xchg
ins
mov
cmp
pop
sub
cld
les
ds
aas
jns
push
fld
dec
ja
sub
out
scas
rcr
adc
in
cmp
push
(bad)
jo
imul
dec
mov
mov
sub
xor
stos
(bad)
ror
(bad)
xchg
fidivr
mov
jle
movs
push
xlat
and
jno
test
mov
sub
fnstcw
push
inc
(bad)
rcr
ins
sub
push
js
adc
pop
(bad)
int
xor
sub
fbstp
mov
push
ficom
push
div
mov
(bad)
cmp
push
mov
into
mov
popf
hlt
push
jbe
and
aaa
cmp
hlt
(bad)
call
push
in
aam
add
xchg
mov
int
or
dec
in
sub
icebp
add
das
dec
xchg
iret
fist
push
sbb
cmps
lock
adc
dec
div
xchg
ins
adc
jecxz
ror
mov
push
(bad)
push
cs
jg
xor
and
sbb
scas
inc
inc
je
es
ret
mov
imul
or
xor
sbb
push
outs
test
jmp
xchg
ins
dec
test
cmps
dec
loop
cli
xchg
daa
rcl
sahf
out
push
lods
mov
ficom
loope
dec
mov
inc
mov
sub
jno
fisttp
jno
adc
sbb
test
or
push
adc
adc
pop
pusha
jae
(bad)
jl
ins
mov
pop
mov
and
mov
imul
push
outs
push
push
push
xchg
mov
test
mov
dec
retf
mov
ffreep
aas
cdq
xor
mov
rcr
aaa
jmp
or
test
jb
(bad)
jge
(bad)
mov
imul
fisubr
test
mov
(bad)
xlat
loope
ins
mov
nop
aaa
push
bound
jle
sbb
sahf
stos
lds
push
jno
push
fistp
mov
test
int3
sbb
xchg
inc
cmp
test
or
mov
push
mov
pop
add
shl
iret
mov
xor
adc
push
push
cmc
pop
(bad)
leave
push
xchg
mov
pop
out
add
lods
push
dec
sub
shr
sti
pop
mov
jne
shr
sub
xchg
mov
pop
shl
adc
lahf
xchg
movs
int
bound
xor
imul
repz
mov
adc
xchg
and
pop
xor
mov
retf
xor
cmp
ror
mov
mov
mov
call
sub
cli
mov
stos
and
xchg
fstp
pop
add
mov
movs
mov
xchg
out
jge
cs
dec
cdq
pop
jns
jns
push
aad
sub
cld
push
cmp
stos
scas
xchg
push
dec
push
aad
jb
fild
push
pop
mov
sub
or
out
ins
push
out
mov
xchg
sub
scas
ret
jg
sub
mov
or
mov
jo
jo
mov
mov
movs
stos
add
into
mov
ins
pop
xchg
mov
jb
mov
or
jp
stos
and
cmp
inc
test
fstp
cmp
stos
icebp
pop
aam
lods
cmp
js
je
jle
je
push
jmp
cmps
aas
nop
and
call
fldenv
cmp
aaa
and
fst
add
enter
jnp
lds
adc
and
or
ret
mov
push
inc
retf
mov
inc
mov
dec
sub
push
retf
mov
sub
jp
add
popa
inc
push
xchg
mov
mov
fimul
xor
cmps
mov
jmp
mov
je
push
into
jmp
inc
ret
cmp
test
inc
inc
mov
pop
int3
fdiv
jp
sbb
sar
sbb
aas
mov
dec
xchg
jne
jle
sub
jmp
call
lods
lods
mov
(bad)
adc
pop
das
sar
push
imul
xor
int3
fs
movs
(bad)
jnp
sti
inc
call
mov
jl
cmps
frstor
jp
je
pop
(bad)
cmp
ss
cmps
xor
inc
add
dec
test
cmovb
fisub
popa
pop
ins
retf
int
adc
sbb
mov
call
jb
popa
jnp
xchg
and
ins
xchg
(bad)
movs
mov
pop
stos
or
pushf
shl
fsub
xchg
sub
(bad)
fisub
fs
rcr
inc
jnp
pop
mov
mov
and
mov
mov
retf
leave
pusha
fnstcw
xchg
(bad)
scas
inc
imul
xor
xchg
lds
(bad)
adc
or
pop
xlat
test
mov
push
mov
ins
sub
xchg
jbe
test
jl
enter
inc
dec
in
jle
pop
vpunpckhqdq
mov
imul
je
add
inc
sub
jb
fild
loope
jl
int3
inc
and
test
mov
push
in
or
ret
cld
adc
jl
add
addr16
repz
movs
dec
in
enter
push
loop
(bad)
repz
clc
imul
mov
and
test
fs
inc
rcr
push
mul
mov
mov
pop
mov
outs
xchg
out
dec
out
add
pop
jnp
and
jnp
and
mov
pop
mov
out
fwait
bnd
dec
xor
mov
icebp
test
xchg
and
data16
push
dec
rol
adc
repz
mov
inc
inc
adc
sub
hlt
repnz
xor
cmps
jns
mov
adc
cmps
icebp
add
fs
mov
es
es
inc
jne
cmc
arpl
jecxz
jge
inc
(bad)
dec
mov
loop
inc
imul
jmp
adc
jne
pop
pop
pop
or
(bad)
popf
mov
adc
(bad)
fst
das
fidivr
pushf
out
mov
or
jmp
ins
mov
retf
push
pop
push
or
loopne
jmp
loope
inc
sbb
and
test
and
stc
xor
inc
in
xchg
push
not
sbb
dec
mov
std
out
dec
sbb
jnp
or
xor
jb
xchg
inc
mov
push
jmp
lahf
shl
inc
sbb
aaa
xlat
jbe
cld
xor
scas
mov
mov
or
lods
test
fsub
push
pushf
cmp
out
cwde
div
lods
xchg
xchg
leave
out
pinsrw
test
ror
dec
dec
mov
or
add
into
into
aad
in
mov
mov
int3
xchg
pop
xchg
or
or
retf
sub
popa
xor
or
bound
rcl
add
sub
mov
cmp
xchg
xchg
jo
add
or
xchg
inc
ret
pop
mov
pusha
push
dec
dec
shr
pop
cmp
cld
adc
jmp
mov
mov
push
sub
adc
add
jmp
push
jle
inc
(bad)
repnz
sub
repz
sub
mov
mov
inc
mov
jmp
out
cmp
cmp
mov
add
dec
imul
popf
cmp
pop
sbb
dec
mov
mov
ins
shl
(bad)
rcr
push
sbb
(bad)
lds
dec
xchg
sub
je
call
stc
stos
cmp
les
mov
or
jge
pop
push
xchg
aad
mov
(bad)
mov
mov
outs
fidivr
call
daa
jl
fwait
sub
or
gs
mov
jle
adc
xor
dec
loope
aas
dec
jle
mov
mov
ds
(bad)
mov
iret
test
cli
xchg
lahf
or
jnp
daa
clc
xchg
fidivr
sub
fisubr
std
outs
fidiv
pushf
ins
adc
retf
es
(bad)
retf
stos
xchg
xchg
test
leave
iret
fld
lahf
das
daa
mov
xor
mov
call
push
xor
push
pop
imul
pop
and
fsubr
jmp
jecxz
call
jne
pushf
movs
mul
jno
rol
mov
push
enter
jmp
popf
in
mov
push
mov
daa
push
inc
retf
or
sahf
xchg
push
cmp
adc
mov
outs
xchg
bound
js
sar
dec
jno
mov
arpl
retf
int3
sub
dec
icebp
or
imul
stos
les
add
sbb
or
push
dec
mov
add
cwde
sbb
mov
sbb
pop
pop
sbb
push
leave
cmps
mov
out
sbb
push
xchg
fstp
out
jbe
xor
ret
xor
je
pop
in
mov
xor
jge
cwde
repnz
sbb
push
aad
into
or
call
daa
mov
sar
(bad)
jl
outs
js
cmc
les
cmc
mov
add
inc
push
mov
cs
lods
mov
jno
add
xchg
jle
jbe
adc
addr16
dec
pop
mov
stos
loopne
jne
inc
movs
jmp
sbb
ins
inc
adc
cdq
push
or
(bad)
pop
(bad)
jmp
leave
setb
pop
stc
fidiv
adc
inc
loopne
fsubr
in
mov
inc
clc
ins
into
lahf
mov
jge
frstpm(287
addr16
mov
add
es
rcr
stos
add
sbb
movs
cmp
pop
retf
fld
lods
xor
fwait
cld
or
or
pusha
lea
fisubr
pop
xchg
push
and
(bad)
xchg
mov
lods
push
xchg
and
imul
jno
pop
xchg
pusha
addr16
int3
sbb
mov
cs
movs
jp
xchg
pop
mov
push
sbb
rol
jae
jne
push
pop
mov
jns
jae
leave
dec
shr
pop
repz
mov
xor
sub
(bad)
mov
sub
ror
and
mov
jmp
sub
sti
iret
mov
repz
pop
xchg
and
push
scas
setbe
clc
xlat
and
test
je
aas
and
ret
dec
lods
push
sti
scas
push
jg
mov
inc
xchg
cs
mov
pop
dec
sbb
or
test
mov
gs
out
pop
rcl
lock
bts
loop
dec
nop
stc
and
jb
loop
jno
add
cmp
sub
out
icebp
gs
adc
jb
lea
lods
retf
ins
xor
lea
adc
fwait
(bad)
les
jne
mov
loope
mov
ins
ins
sbb
dec
movs
test
int
jno
xor
pop
cwde
cmp
push
pushf
sub
and
das
outs
(bad)
xor
iret
fcomp
fiadd
adc
fwait
mov
scas
mov
nop
(bad)
aad
ja
(bad)
jp
es
fwait
add
aaa
or
ins
jns
mov
mov
and
or
fcmovnbe
mov
icebp
xchg
sub
das
push
add
test
enter
sub
call
mov
(bad)
sub
dec
jecxz
fcom
mov
mov
jae
into
and
int
add
js
cwde
push
call
ins
jmp
pop
push
pop
mov
(bad)
repz
jge
adc
or
xor
mov
add
and
ret
icebp
xlat
icebp
jnp
and
xor
(bad)
cmc
fidivr
imul
xor
mov
jp
(bad)
sub
pop
fs
adc
stc
pop
inc
pop
jb
mov
data16
(bad)
cmp
and
cmp
ja
push
fiadd
stos
ja
fcomp
pop
sub
into
je
jl
test
mov
fld
xlat
inc
pop
mov
les
rcr
xor
cdq
mov
cmp
ds
adc
movs
mov
call
ss
fstp
xchg
ja
jbe
xor
push
(bad)
sar
dec
mov
(bad)
cmc
fst
cld
test
sbb
retf
push
sub
cwde
stos
jge
jmp
mov
xchg
xchg
(bad)
cld
inc
mov
xor
adc
jge
inc
call
adc
push
mov
(bad)
cdq
rcr
adc
in
retf
sbb
pop
adc
lea
jo
jl
or
jns
add
adc
fwait
shl
cmp
fadd
dec
lahf
xchg
mov
jnp
fstp
mov
in
stos
mov
sub
dec
fist
mov
fsub
cmp
mov
push
outs
mov
sub
mov
adc
push
ja
mul
inc
xchg
aam
cmp
and
das
push
repnz
sbb
gs
inc
out
inc
fild
and
aaa
rcr
cmp
pop
in
jle
push
xor
and
jle
inc
mov
call
pop
push
and
popf
cmp
cs
sti
push
mov
mov
adc
popf
cmp
jecxz
fimul
outs
push
pusha
xchg
adc
or
jp
mov
xchg
js
add
repnz
test
pop
sub
not
iret
int
stos
(bad)
loopne
jecxz
sbb
push
pop
jns
ds
cmps
imul
cdq
dec
and
mov
test
mov
mov
fcom
mov
mov
and
mov
jo
xchg
outs
stos
pop
jmp
push
js
mov
daa
sbb
ds
mov
push
out
(bad)
mov
pop
cli
pop
cmp
and
cmps
les
adc
sahf
sub
movs
(bad)
das
pop
int
loopne
pusha
mov
jbe
fidiv
int3
xchg
hlt
fild
fcmovu
push
sar
stos
or
xor
xor
ds
mov
mov
jecxz
stos
jo
icebp
ret
mov
test
lds
shr
push
pop
xchg
pop
repnz
dec
cmp
and
jno
mov
rcl
adc
mov
sub
or
hlt
mov
cmp
cld
mov
std
adc
cld
outs
stos
adc
xlat
mov
adc
icebp
push
out
data16
dec
les
sbb
sub
shr
in
xor
aaa
sub
xchg
mov
or
(bad)
lock
dec
pop
ret
or
popa
sbb
dec
lds
pop
xchg
xchg
inc
fnstcw
rcl
shr
rcl
xor
enter
xor
jg
scas
jns
fs
in
inc
sub
sbb
repz
pop
mov
fcomp
fistp
std
aad
inc
daa
(bad)
jle
xchg
mov
mov
and
xchg
std
fwait
push
and
xchg
cdq
movs
jle
mov
xchg
sbb
sahf
cmp
les
add
sub
cmp
mov
mov
data16
lock
add
and
mov
shr
into
aaa
(bad)
mov
mov
ss
lods
(bad)
or
jp
mov
cmps
mov
adc
jle
jl
xor
scas
mov
push
lods
rcr
(bad)
dec
pop
aaa
or
shl
gs
pop
(bad)
add
pop
adc
mov
xor
(bad)
mul
add
inc
out
(bad)
pop
shl
add
xor
dec
nop
aad
adc
loop
scas
js
daa
xlat
call
(bad)
jb
xchg
cs
(bad)
pop
push
xchg
sbb
aad
xchg
adc
push
in
add
jb
and
clc
outs
sub
jno
aas
inc
mov
out
or
sub
(bad)
ins
pop
pop
mov
arpl
inc
add
scas
mov
dec
test
dec
jl
dec
sub
xor
inc
sti
cmc
dec
mov
iret
sub
or
aaa
pop
pop
push
mov
xchg
iret
cwde
in
ror
into
repnz
jbe
mov
mov
mov
in
adc
div
mov
sbb
mov
or
(bad)
mov
inc
ds
and
leave
xor
xchg
and
or
xchg
push
dec
cmp
fwait
loop
fcom
jns
test
mov
inc
shr
cmp
xor
mov
push
outs
in
cmp
cmps
push
sub
jmp
jo
add
or
popa
sub
out
in
inc
lahf
xchg
xor
imul
sahf
add
dec
out
sar
sub
ja
push
mov
iret
push
addr16
mov
(bad)
mov
(bad)
fist
xchg
lds
jmp
nop
ficomp
lahf
inc
test
push
repz
dec
test
jbe
mov
in
dec
jmp
je
loope
js
add
shr
dec
pop
jns
cmp
push
push
(bad)
push
xor
mov
inc
repnz
jne
inc
aam
scas
xchg
inc
call
call
dec
add
jbe
repnz
cmp
ins
(bad)
xchg
push
mov
inc
dec
cmp
in
sub
call
pmaxub
inc
push
push
push
sub
xchg
sub
jae
fld
loope
pushf
loopne
lods
jb
or
(bad)
stos
jge
add
push
jmp
or
sbb
dec
inc
outs
dec
les
add
and
mov
dec
push
fisub
(bad)
jno
push
inc
pushf
push
outs
mov
inc
mov
not
sub
es
sub
das
mov
cmp
dec
push
pop
xor
mov
add
xor
add
cld
rcr
inc
inc
sbb
in
xchg
daa
cmps
je
mov
and
jnp
enter
push
cli
jo
scas
movs
pop
stc
push
sbb
xchg
push
popa
xor
gs
jnp
mov
add
lea
xor
jp
jo
mov
sbb
jg
fst
xor
ins
dec
inc
inc
sub
(bad)
rol
int
shl
inc
aad
jecxz
mov
je
leave
(bad)
mov
sar
add
jle
mov
or
mov
mov
imul
adc
mov
aaa
jmp
icebp
sub
ja
xor
sbb
ja
xchg
cdq
into
nop
sub
push
jae
pop
dec
jmp
rcl
push
fnsave
int3
aam
int
ins
ins
sahf
stc
stos
repnz
ret
mov
pop
js
aad
pushw
mov
int3
call
in
fst
inc
cmps
rcl
mov
inc
rcl
les
jb
or
cmp
adc
repnz
adc
and
xor
cwde
dec
addr16
ss
hlt
sub
or
aam
push
mov
mov
cs
and
lahf
(bad)
stc
xor
movs
shl
inc
enter
outs
mov
lods
jno
in
fidivr
mov
popa
and
cs
in
loope
daa
cmp
push
sub
in
gs
push
xchg
stos
out
enter
mov
xor
ss
out
es
adc
xchg
lds
in
(bad)
les
ss
or
mov
xchg
adc
xchg
pusha
jbe
neg
xor
cmp
imul
ins
xchg
jle
popf
mov
nop
add
(bad)
ins
test
or
mov
ret
ret
xor
mov
sbb
or
lea
sbb
test
adc
clc
mov
jbe
icebp
out
jge
call
ret
mov
cmpxchg8b
repnz
lods
and
and
pop
adc
xor
aaa
push
(bad)
jg
and
add
arpl
mov
cld
sahf
mov
mov
ss
add
enter
pop
mov
test
bound
xlat
mov
sbb
enter
pop
dec
sub
scas
or
fidivr
mov
jb
sbb
xor
popa
adc
cmp
je
nop
shr
jbe
mov
ret
and
jno
push
xchg
outs
cs
sub
push
sub
sti
mov
cmps
neg
pop
cmps
cmps
add
or
xor
xchg
adc
or
push
out
aas
pushf
pop
ds
cmps
jno
lods
sar
sbb
or
sub
(bad)
sbb
cli
push
xor
inc
jp
pop
out
in
stos
sti
push
aas
adc
clc
push
xor
popf
xchg
cs
gs
in
or
shr
add
xor
(bad)
sbb
fiadd
int
out
jbe
pop
push
sbb
cmc
push
gs
retf
movs
and
test
mov
jb
xchg
xchg
inc
sub
(bad)
mov
mov
ret
xlat
movs
xlat
push
push
push
pop
sub
sti
pop
mov
ret
xchg
jbe
inc
mov
rol
call
popa
iret
and
inc
test
jecxz
enter
in
cwde
or
or
popf
sbb
push
or
jl
repnz
sbb
inc
call
out
push
movs
xchg
pop
and
xchg
xor
dec
retf
popa
rol
mov
movs
or
and
aam
fwait
push
movs
inc
xchg
(bad)
mov
test
jb
std
jg
jge
xchg
adc
push
data16
gs
fist
mov
cmps
into
fnsave
xor
retf
mov
rcr
jns
adc
imul
imul
mov
add
sahf
dec
pushf
adc
and
aam
cdq
mov
stos
ja
pop
sbb
adc
inc
sub
enter
cmps
inc
(bad)
out
mov
dec
mov
push
mov
(bad)
aas
cwde
push
movs
push
adc
mov
xor
mov
hlt
sbb
push
dec
loope
cwde
pusha
clc
mov
push
sbb
pop
lds
sbb
popf
jns
sbb
aaa
mov
inc
jge
inc
mov
es
sar
call
inc
test
adc
(bad)
sub
and
mov
pusha
mov
dec
lea
adc
mov
ret
xchg
adc
pop
push
mov
dec
xchg
push
cdq
das
sbb
or
gs
add
rcr
push
cmp
pop
mov
push
jl
cmp
push
mov
je
iret
or
mov
push
xchg
dec
aaa
sbb
das
mov
je
in
ins
mov
inc
xchg
sti
sahf
push
nop
out
into
xchg
xchg
(bad)
mov
add
popf
js
adc
jne
mov
sar
pop
mov
popa
movs
jp
jmp
stos
cwde
mov
daa
jmp
fs
xchg
(bad)
push
jo
ins
sbb
add
inc
fxch
and
or
ror
sub
cmp
dec
jle
sbb
sbb
sbb
stc
bound
data16
adc
mov
adc
sbb
xor
ds
aad
xchg
jnp
inc
fist
dec
mov
jmp
in
adc
pushf
stos
cs
and
pop
or
and
mov
aam
mov
sbb
sbb
xchg
loopne
sub
fs
outs
fwait
push
outs
push
mov
scas
shl
cmp
inc
aas
xlat
call
and
sbb
jbe
add
fild
jmp
lds
jbe
sub
xor
xor
leave
or
out
ja
ins
xor
ins
adc
arpl
scas
cmp
xor
(bad)
repnz
push
bound
leave
fisttp
cmp
cmp
jp
nop
imul
xchg
and
add
in
hlt
push
inc
dec
daa
jnp
and
cmps
jecxz
out
or
jle
dec
pop
mov
lock
imul
repz
aaa
mov
int3
stc
popf
or
xor
je
fs
loop
xor
and
fwait
inc
bound
inc
adc
(bad)
in
mov
jmp
add
cld
push
test
jb
das
(bad)
fidiv
pop
inc
imul
fnstcw
popf
call
and
sub
xchg
dec
test
cmps
inc
or
add
or
lds
jmp
pop
push
mov
sbb
aam
loope
loopne
jmp
mov
xchg
ins
mov
mov
lds
push
cli
stos
push
sbb
data16
sbb
gs
div
rcr
sub
retf
(bad)
fwait
jg
xchg
out
pop
xchg
lock
cmp
(bad)
in
xlat
arpl
dec
arpl
jmp
aad
jmp
xlat
test
mov
out
push
push
sbb
(bad)
shl
sti
out
dec
add
jle
rcr
xor
adc
shl
stos
xor
mov
and
pop
arpl
mov
mov
dec
rcpps
call
cmps
mov
add
rcl
aas
pop
ss
cmp
mov
imul
ror
into
hlt
(bad)
hlt
loopne
imul
push
and
fcomp
ret
push
pop
push
sahf
scas
mov
retf
and
and
ins
push
imul
mov
mov
xor
push
ss
cmp
aaa
out
gs
adc
out
cli
sbb
or
in
into
retf
(bad)
in
(bad)
pop
retf
popf
scas
cwde
scas
jnp
in
movs
xchg
cmps
mov
lds
loop
jmp
xchg
add
repnz
xor
out
fwait
rep
push
mov
jmp
ins
push
jg
dec
cmps
pop
(bad)
fmul
sbb
enter
push
sub
inc
aaa
cmp
rcr
jo
xor
xchg
cmp
sub
inc
aaa
ins
sub
xchg
cmp
sub
add
aaa
jo
rcr
jg
imul
add
aaa
fs
sbb
addr16
cmp
sub
sub
sbb
and
cmp
sub
add
sbb
mov
aaa
xor
in
sbb
les
push
sub
sbb
sbb
shr
inc
add
aaa
sbb
fcomp
and
cmp
sub
add
sbb
fld
ins
add
aaa
or
xchg
pop
sbb
shr
push
add
aaa
fs
sbb
sbb
retf
sub
mov
adc
aaa
jle
xchg
add
ss
mov
shl
(bad)
retf
fiadd
lock
fmul
ror
sub
(bad)
fldenv
cld
ror
dec
sub
inc
sub
adc
xchg
mov
and
push
cmp
sbb
or
xor
xor
xor
adc
push
stc
mov
mov
mov
cwde
fsubr
sub
ss
xor
or
in
push
fcom
jmp
lds
neg
jecxz
pop
fcom
in
in
shr
lds
jmp
sar
cmp
data16
ins
xor
inc
icebp
jae
jne
inc
movs
push
fadd
ins
cmp
inc
sti
jae
jne
inc
push
cli
pop
cli
pop
cli
jge
nop
into
mov
ret
(bad)
(bad)
out
jns
ret
xlat
int
jmp
repz
fstp
out
div
ss
jmp
repz
(bad)
out
xchg
and
sub
imul
sbb
cmp
or
out
xchg
push
ror
dec
scas
int3
inc
lods
push
fcom
add
sahf
mov
ins
pop
aad
(bad)
mov
jbe
pop
cmp
mov
mov
popf
mov
js
push
in
xor
outs
stc
adc
pop
stc
pop
adc
out
in
and
cmp
adc
push
pop
rcl
hlt
sub
ret
add
loope
mov
lods
iret
dec
push
inc
sbb
xlat
mov
add
ret
dec
ror
xchg
imul
mov
cmp
sbb
push
cmp
aad
pop
lock
fcmovb
mov
fst
outs
in
jp
jnp
jns
push
pop
test
(bad)
mov
mov
cmp
mov
pop
loop
(bad)
and
retf
dec
leave
adc
pop
popa
test
fninit
ss
movs
in
bound
mov
rcr
mov
leave
out
pusha
scas
cld
and
jns
push
sti
adc
xor
pop
push
mov
ds
cmp
dec
(bad)
in
add
dec
dec
shr
lea
data16
pmuludq
sub
xor
sub
setno
add
add
cmc
addr16
mov
mov
pop
je
xchg
mov
push
cmps
les
jo
pop
mov
les
ret
mov
xchg
pop
movs
add
xor
mov
sbb
inc
mov
stos
mov
ja
mov
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
add
jae
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
popa
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
add
add
add
adc
add
sbb
add
and
add
xor
add
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
or
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
add
add
or
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
add
add
or
add
add
add
add
add
add
add
add
or
add
push
push
add
add
cmovb
inc
add
add
add
add
or
add
jbe
xor
xor
add
add
add
push
add
and
add
add
clc
xchg
add
push
je
imul
add
add
adc
add
and
dec
inc
add
add
add
cld
or
ins
outs
bound
add
add
add
push
xchg
mov
add
cli
add
add
add
add
add
push
add
add
add
add
add
adc
add
add
add
jge
add
xor
add
or
add
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
add
add
add
add
add
add
add
xor
add
add
add
add
add
add
push
add
add
push
add
add
push
add
add
add
add
add
add
add
add
push
add
add
push
add
add
add
add
add
push
add
add
push
add
dec
add
add
in
add
add
push
inc
push
push
add
push
dec
add
add
push
clts
add
add
add
test
push
add
add
adc
push
push
add
add
dec
add
add
js
push
add
add
add
add
dec
daa
add
add
dec
cmp
or
pop
dec
daa
add
add
dec
dec
add
add
dec
dec
add
add
add
add
jne
adc
test
adc
add
push
adc
add
add
add
pop
push
adc
jne
scas
adc
add
cmp
or
out
push
daa
add
add
add
push
dec
add
add
push
dec
add
add
push
dec
add
add
push
adc
add
daa
pop
dec
add
add
add
pop
adc
add
pop
pop
pusha
push
add
pusha
dec
add
add
popa
dec
add
add
popa
dec
add
add
add
fs
dec
push
add
fs
pusha
push
add
fs
push
push
add
gs
push
push
add
xor
adc
add
dec
add
add
adc
add
adc
add
adc
add
add
add
add
dec
add
add
inc
push
push
add
add
add
dec
add
add
dec
add
add
jno
push
sbb
push
ja
add
add
inc
push
push
add
add
ja
push
push
add
jns
add
add
jns
add
add
jnp
add
add
jnp
add
add
jnp
add
add
add
test
push
add
xchg
add
add
add
add
add
add
adc
add
add
aaa
add
push
add
push
add
cmp
add
sbb
add
add
add
add
push
add
sbb
or
dec
add
sub
add
add
add
add
xor
add
add
add
or
aaa
add
push
add
add
add
cmp
add
add
add
add
inc
add
push
add
add
add
inc
add
push
add
xchg
add
add
add
push
inc
sbb
sub
xchg
add
add
add
add
mov
add
dec
push
inc
sbb
sub
mov
add
adc
jg
push
inc
sbb
sub
mov
add
push
inc
sbb
sub
leave
add
add
add
push
push
inc
sbb
sub
fadd
add
adc
dec
push
push
inc
sbb
cs
add
add
add
push
push
inc
sbb
cs
add
add
add
add
add
add
inc
add
sbb
xor
or
add
add
add
add
add
add
add
pop
push
inc
sbb
xor
adc
adc
add
dec
inc
add
push
add
add
add
add
add
add
push
inc
sbb
xor
add
add
pop
push
inc
sbb
xor
add
add
dec
add
push
add
add
add
add
add
cmp
inc
add
add
add
jns
add
add
add
jns
inc
inc
add
add
add
jnp
inc
sbb
ds
add
jge
add
add
add
add
jnp
add
add
aad
add
jns
add
add
fiadd
add
jg
add
add
loop
add
add
sbb
pop
add
add
add
sbb
push
add
add
add
repz
add
add
jg
inc
sbb
outs
add
add
xchg
add
jnp
adc
adc
add
rol
jnp
adc
adc
add
fadd
jnp
adc
adc
add
mov
add
adc
adc
add
xor
add
jnp
adc
adc
add
stos
adc
adc
adc
add
bound
inc
push
add
adc
adc
fld
adc
adc
push
add
add
add
adc
pusha
pop
rol
add
pop
lds
add
out
lods
add
add
lods
add
add
sbb
add
add
pop
rol
add
add
and
add
add
add
and
add
add
rol
add
and
add
add
or
and
repz
add
add
rol
add
and
add
add
sbb
and
jecxz
pop
add
add
sbb
add
(bad)
push
lods
add
add
es
add
add
add
add
adc
and
loop
adc
add
pop
rol
add
rol
add
pop
add
add
das
lods
add
add
add
add
xor
add
add
add
add
xor
aaa
rol
add
add
cmp
cmp
add
add
cmp
add
add
add
lods
add
add
add
dec
add
dec
add
dec
add
dec
add
dec
add
arpl
xor
mov
addr16
xor
push
inc
push
adc
push
inc
add
push
add
dec
pop
push
add
dec
pop
push
add
inc
dec
pop
push
add
add
add
add
add
add
add
dec
add
dec
add
dec
add
lds
add
cdq
inc
lds
add
mov
add
add
inc
lds
add
xchg
inc
lds
add
xchg
inc
sbb
add
cdq
inc
dec
add
dec
add
dec
add
dec
add
dec
add
dec
add
lds
add
cdq
inc
lds
add
xchg
inc
lods
add
add
add
add
inc
lds
add
mov
add
add
dec
add
dec
add
dec
add
dec
add
dec
add
dec
add
dec
add
dec
add
dec
add
lds
add
dec
inc
lds
add
mov
add
add
add
lds
add
rol
add
mov
add
add
add
add
add
add
dec
add
dec
add
dec
add
addr16
adc
push
inc
addr16
adc
push
inc
push
inc
push
inc
ins
or
ins
or
jb
adc
xchg
inc
jb
adc
mov
or
ja
adc
xchg
inc
jl
adc
push
inc
jl
adc
mov
and
add
add
sbb
add
add
add
xchg
add
and
add
aam
add
or
xchg
add
add
add
dec
add
or
adc
dec
add
add
fs
or
adc
fld
push
add
add
add
add
add
push
add
add
adc
icebp
add
add
add
add
add
jb
add
enter
or
adc
jmp
add
add
or
adc
ja
xchg
add
cld
add
or
adc
repz
mov
add
adc
add
or
adc
outs
pop
xchg
add
add
add
or
adc
jmp
sahf
add
add
add
add
add
movs
add
add
add
add
add
or
daa
add
or
adc
pop
or
daa
add
or
adc
fisttp
lods
add
add
adc
push
or
daa
add
or
adc
ror
mov
add
aam
add
or
adc
dec
or
daa
add
or
adc
retf
or
sub
add
add
add
mov
add
sbb
add
or
adc
ret
or
add
add
add
or
adc
aas
or
dec
sub
add
add
add
add
add
add
add
add
add
or
xchg
add
push
and
add
sub
add
or
xchg
add
add
add
add
add
xchg
add
add
xchg
add
adc
add
add
add
add
add
inc
add
or
xchg
add
adc
add
add
inc
add
or
xchg
add
and
add
in
add
or
xchg
add
mov
add
clc
inc
add
or
xchg
add
mov
add
or
add
or
xchg
add
sub
add
or
xchg
add
adc
add
dec
inc
add
or
xchg
add
adc
add
push
add
add
add
xchg
add
adc
add
test
add
or
xchg
add
adc
add
enter
or
xchg
add
add
add
inc
add
or
xchg
add
jo
add
add
add
add
add
add
add
or
xchg
add
adc
inc
add
or
xchg
add
adc
inc
add
or
xchg
add
js
add
push
add
add
add
xchg
add
mov
add
mov
add
add
add
inc
add
or
xchg
add
push
add
call
add
add
add
add
or
xchg
add
add
inc
add
or
add
adc
dec
inc
add
or
add
push
mov
inc
add
or
xchg
add
add
add
add
add
inc
add
or
xchg
add
push
mov
add
loopne
add
or
sbb
add
add
add
dec
add
or
add
sbb
dec
add
or
add
sbb
dec
add
or
add
sbb
dec
add
or
xchg
add
sbb
add
add
add
add
add
add
add
or
xchg
add
mov
add
jl
add
or
add
sbb
add
add
push
add
or
add
sbb
add
add
add
or
add
sbb
jo
add
or
add
sbb
sbb
or
sbb
add
push
add
or
xchg
add
mov
add
push
push
add
or
xchg
add
mov
add
fs
add
or
xchg
add
mov
add
js
add
or
xchg
add
xchg
push
add
or
sbb
add
push
add
or
add
daa
and
add
or
add
add
add
add
pop
add
or
add
sub
add
add
add
or
add
sub
add
add
add
add
add
add
add
or
add
sub
add
add
add
or
xchg
add
add
outs
add
or
xchg
add
inc
add
add
add
or
xchg
add
sub
outs
add
or
xchg
add
mov
add
inc
outs
add
or
xchg
add
ins
add
add
add
add
add
add
xchg
add
test
add
or
xchg
add
add
outs
add
or
xchg
add
add
outs
add
or
xchg
add
sub
add
add
add
or
xchg
add
sub
jo
add
add
add
add
add
add
add
add
add
add
add
add
xchg
add
xchg
add
add
xchg
add
sub
add
add
jo
add
add
add
add
jo
add
add
add
add
add
or
xchg
add
mov
add
inc
jno
add
add
add
add
add
or
xchg
add
add
xchg
add
add
add
add
add
xchg
add
sub
add
add
jno
add
add
add
add
add
or
add
xor
jne
add
add
add
add
jbe
add
add
add
add
ja
add
add
add
add
ja
add
add
add
add
js
add
add
add
add
add
or
add
xor
add
add
jp
add
add
add
add
add
or
add
xor
push
add
add
add
add
ss
add
les
or
sbb
add
jl
add
add
add
add
jl
add
add
add
add
jge
add
add
add
add
add
aaa
mov
add
dec
jge
add
add
add
add
add
or
add
cmp
add
add
add
add
add
add
add
add
xchg
add
cmp
add
add
cmp
add
add
add
or
add
cmp
dec
test
add
add
add
add
test
add
add
add
add
add
add
add
add
add
or
add
aas
or
add
sub
add
aas
or
mov
add
add
add
add
add
or
xchg
add
mov
add
push
mov
add
add
add
add
add
add
add
add
add
add
add
add
add
add
mov
add
add
add
add
mov
add
add
add
add
add
or
add
inc
mov
add
mov
add
inc
mov
add
mov
add
add
add
lea
add
add
add
add
mov
add
add
add
add
add
or
xchg
add
add
mov
add
add
add
add
add
add
add
aaa
add
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
inc
jg
add
xchg
xchg
add
or
adc
sahf
inc
xchg
add
lods
xchg
add
or
xchg
add
inc
inc
add
add
xchg
add
or
xchg
add
inc
xchg
add
add
xchg
add
or
xchg
add
mov
add
cld
xchg
add
or
xchg
add
mov
add
adc
add
test
add
sub
add
or
xchg
add
add
add
or
xchg
add
xchg
add
or
adc
mov
add
xchg
add
or
adc
push
inc
mov
add
int3
xchg
add
or
adc
rol
add
xchg
cdq
add
or
adc
lds
add
add
adc
inc
dec
fiadd
add
les
adc
mov
add
cdq
add
or
xchg
add
inc
add
add
cdq
add
or
xchg
add
add
add
call
jo
mov
add
sub
add
or
xchg
add
inc
call
sahf
dec
inc
add
add
add
or
xchg
add
dec
inc
add
add
add
add
add
add
add
add
add
adc
push
inc
adc
add
add
or
adc
fisttp
add
add
add
or
adc
pop
dec
es
add
add
or
xchg
add
dec
inc
add
add
add
or
xchg
add
dec
xor
add
jo
add
or
xchg
add
dec
mov
add
test
xchg
add
mov
add
cwde
sahf
add
or
xchg
add
push
add
mov
add
add
add
sahf
add
or
adc
mov
push
add
add
adc
xchg
inc
ins
add
add
mov
adc
mov
add
mov
adc
ret
dec
mov
add
movs
add
or
adc
aas
dec
xchg
add
add
add
or
adc
mov
add
add
add
add
dec
call
add
add
add
add
add
or
xchg
add
dec
test
add
xchg
movs
add
or
xchg
add
dec
stos
add
add
add
add
add
movs
add
or
xchg
add
dec
mov
add
loopne
add
or
xchg
add
add
movs
add
or
xchg
add
add
add
or
xchg
add
movs
add
or
adc
mov
ret
add
test
add
add
add
fld
add
stos
add
or
adc
xchg
inc
icebp
add
add
add
or
adc
rol
add
mov
add
add
add
mov
add
add
add
inc
mov
add
add
add
dec
pop
add
add
or
adc
xchg
dec
es
add
or
adc
push
push
sub
add
or
adc
test
add
add
or
xchg
add
push
inc
add
add
xchg
add
add
add
mov
add
add
add
add
mov
add
add
add
add
or
xchg
add
add
add
or
xchg
add
push
jo
add
xor
add
or
xchg
add
push
push
add
push
mov
add
add
add
add
add
add
add
add
add
add
add
xchg
add
mov
add
add
add
add
adc
push
inc
je
add
fdiv
adc
cdq
inc
mov
add
or
adc
dec
inc
xchg
add
add
or
adc
rol
add
aam
add
or
adc
adc
add
in
mov
adc
call
add
add
or
adc
jnp
mov
add
sbb
add
or
adc
not
add
add
add
or
adc
jae
mov
mov
xchg
add
push
inc
add
add
add
or
xchg
add
jl
add
or
xchg
add
push
mov
add
nop
mov
xchg
add
lods
mov
xchg
add
jo
add
les
add
add
mov
xchg
add
add
mov
xchg
add
push
aad
add
sbb
add
or
xchg
add
mov
xchg
sbb
add
add
add
add
add
add
push
dec
add
add
xchg
add
inc
add
add
add
add
add
mov
xchg
add
add
mov
xchg
add
add
mov
xchg
add
mov
add
dec
loop
add
int3
mov
les
rol
add
test
add
or
adc
mov
push
add
je
add
or
adc
push
inc
sbb
les
add
add
add
push
mov
add
les
add
add
add
sub
add
jl
add
or
adc
hlt
push
das
push
add
xchg
les
add
add
add
xor
les
add
add
add
add
les
add
add
add
add
les
add
add
add
add
les
add
add
add
add
lds
add
add
add
add
xchg
add
inc
add
add
add
or
xchg
add
inc
push
add
push
add
add
add
sbb
add
lds
add
add
add
add
xchg
add
add
add
or
adc
mov
add
enter
add
add
pop
pop
push
add
cmp
add
or
adc
dec
pop
and
add
push
enter
add
add
add
add
or
xchg
add
pop
mov
add
jl
add
or
xchg
add
pop
inc
add
add
add
add
add
enter
add
add
add
add
add
inc
xchg
push
add
movs
int3
add
or
adc
push
inc
stos
push
add
nop
into
add
or
adc
xor
mov
add
test
add
or
adc
rcr
add
ror
add
add
add
add
into
add
or
adc
mov
add
into
add
or
adc
xor
add
iret
add
or
xchg
add
add
add
or
xchg
add
pop
xchg
add
inc
iret
add
or
xchg
add
pop
mov
add
pop
iret
add
or
xchg
add
pop
mov
add
ins
iret
add
or
xchg
add
pop
xchg
add
mov
add
or
xchg
add
mov
add
test
add
or
xchg
add
mov
add
(bad)
iret
add
or
xchg
add
iret
add
or
adc
mov
push
add
mov
add
add
add
aam
add
add
add
out
push
add
call
add
add
pop
clc
push
add
add
add
or
xchg
add
add
xchg
add
add
aad
add
add
add
add
add
add
push
add
fs
add
add
push
add
test
add
or
xchg
or
add
fadd
add
add
add
add
fadd
add
add
add
add
add
or
adc
das
pusha
mov
fld
add
add
pop
add
pop
fld
add
add
pop
add
js
add
or
xchg
add
pusha
mov
add
mov
add
or
xchg
add
pusha
mov
add
mov
add
add
add
xchg
add
popa
xchg
add
(bad)
add
or
xchg
xchg
inc
jne
add
(bad)
fld
add
add
add
add
or
adc
ss
mov
add
push
loope
add
add
add
add
add
or
adc
bound
loope
add
add
add
add
add
add
xchg
pop
add
mov
add
or
adc
test
mov
loope
add
add
pop
add
in
loope
add
add
add
add
loop
add
add
add
add
add
or
xchg
add
inc
add
add
add
or
xchg
add
add
add
add
or
xchg
add
add
add
or
nop
add
add
nop
add
and
add
loopne
add
or
nop
add
add
out
add
add
add
add
or
nop
add
add
nop
add
add
add
or
nop
add
add
add
or
nop
add
add
add
add
or
add
add
add
add
or
add
add
add
add
or
add
add
or
add
add
add
add
or
add
pop
add
or
nop
add
add
nop
add
add
push
add
or
nop
add
add
add
or
nop
add
inc
adc
add
hlt
adc
add
add
or
add
add
or
nop
add
add
pop
add
or
nop
add
dec
or
add
add
add
or
add
nop
add
loopne
add
aam
add
or
nop
add
inc
jne
add
xchg
sbb
add
add
add
add
sbb
add
add
or
add
sbb
nop
add
add
push
add
or
nop
add
loopne
add
test
add
or
nop
add
fmul
add
cmp
add
or
nop
add
test
add
xor
nop
add
add
cmp
add
add
or
add
add
or
nop
add
inc
sub
add
add
add
add
and
xor
add
mov
add
add
or
add
add
add
or
add
dec
add
or
nop
add
add
dec
add
or
nop
add
inc
pop
or
add
add
or
add
pop
add
or
nop
add
add
nop
add
add
add
or
nop
add
test
add
or
nop
add
add
add
add
dec
leave
or
add
imul
or
adc
mov
add
outs
add
or
adc
cmps
gs
jb
add
add
add
add
add
or
adc
mov
or
add
in
jne
add
add
add
xor
or
adc
ret
gs
or
add
jns
add
add
add
add
jl
add
add
add
gs
jl
add
add
add
cmp
add
add
add
or
adc
fsub
or
add
adc
pop
addr16
or
add
jge
add
add
add
addr16
or
add
add
or
adc
pop
push
ins
jge
add
add
add
push
test
add
add
add
pusha
or
add
adc
shr
or
add
add
add
jno
add
sar
add
add
add
push
or
add
jge
add
add
add
inc
add
add
jle
add
add
add
imul
add
jle
add
add
add
ins
sub
add
xor
add
add
add
ins
or
add
add
or
adc
inc
ins
xor
add
or
adc
into
ins
xchg
or
add
add
add
add
mov
jle
add
add
add
outs
mov
add
mov
add
or
adc
pop
outs
mov
jle
add
add
add
outs
es
add
or
adc
data16
or
add
jle
add
add
add
jo
add
add
jg
add
add
add
leave
or
add
add
or
adc
jmp
jg
add
add
add
mov
add
pop
jg
add
add
add
jb
or
add
add
add
add
mov
add
mov
add
add
add
jae
or
add
adc
push
je
or
add
adc
shl
add
fdivr
add
add
add
jmp
jg
add
add
add
jne
or
add
add
or
xchg
add
mov
add
sbb
add
or
xchg
add
mov
add
xor
xchg
add
clc
or
add
add
or
xchg
add
dec
add
je
add
or
xchg
add
add
add
pop
add
mov
add
add
add
add
or
xchg
add
jbe
add
add
add
or
xchg
add
jbe
add
add
add
or
xchg
add
ja
add
add
add
or
xchg
add
ja
or
add
add
add
push
add
test
xchg
add
test
add
mov
add
add
add
add
add
add
add
add
ja
add
add
add
add
ja
add
add
add
or
xchg
add
js
add
add
add
or
xchg
add
js
add
add
add
add
add
add
add
add
add
add
add
add
add
xchg
add
inc
add
add
add
or
xchg
add
add
add
or
xchg
add
or
add
or
xchg
add
js
add
add
add
or
xchg
add
js
add
add
add
add
or
add
add
add
or
add
xchg
add
test
add
test
add
or
xchg
add
test
add
les
xchg
add
push
add
add
add
or
xchg
add
add
test
add
add
add
add
add
or
xchg
add
test
add
add
add
add
test
add
add
add
add
add
or
adc
mov
add
mov
add
add
add
jns
or
add
mov
add
add
add
push
add
add
mov
add
add
add
jp
or
add
add
add
add
add
add
or
xchg
add
mov
add
jl
add
or
xchg
add
mov
add
nop
mov
add
add
add
add
xchg
add
add
mov
add
add
add
add
mov
add
add
add
jge
add
lea
add
add
add
add
mov
add
add
add
jl
or
add
add
or
adc
test
add
sbb
add
or
xchg
add
jge
or
add
add
or
xchg
add
jge
add
add
add
or
xchg
add
jge
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
adc
imul
xchg
add
or
xchg
add
jge
add
add
add
or
xchg
add
jge
add
add
add
add
add
add
add
or
xchg
add
jle
add
add
add
add
add
adc
rol
add
mov
add
add
add
adc
mov
mov
xchg
add
or
xchg
add
add
xchg
add
or
xchg
add
push
add
add
xchg
add
or
xchg
add
mov
add
sub
add
or
xchg
add
mov
add
inc
xchg
add
or
xchg
add
add
add
add
add
add
add
add
add
xchg
add
add
xchg
add
or
xchg
add
jg
add
add
xchg
add
or
xchg
sbb
add
add
add
call
ds
add
add
call
in
mov
add
or
add
or
xchg
add
jg
add
add
fwait
add
or
xchg
add
inc
add
add
add
or
xchg
add
fwait
add
or
xchg
sbb
add
add
add
pushf
add
or
adc
and
in
pushf
add
or
xchg
add
or
xchg
add
add
xchg
add
xor
add
or
xchg
add
cmp
add
push
popf
add
or
xchg
sbb
add
add
add
add
add
or
add
mov
xchg
add
mov
add
in
add
or
xchg
add
add
mov
xchg
add
add
movs
add
or
xchg
ds
add
add
movs
add
or
adc
dec
inc
cmc
or
add
movs
add
or
adc
xchg
inc
add
add
or
adc
mov
add
adc
push
inc
xor
add
or
adc
fld
mov
add
add
inc
or
add
or
adc
rol
shr
adc
dec
sbb
add
call
add
add
or
add
lods
add
or
xchg
add
add
add
add
or
xchg
add
mov
add
cmp
add
mov
add
dec
lods
add
or
xchg
add
add
add
add
add
add
xchg
add
add
add
add
add
lods
add
or
xchg
add
test
add
in
add
or
adc
cdq
inc
or
adc
dec
inc
xchg
add
or
adc
aam
xchg
or
add
or
adc
push
test
mov
add
add
add
add
add
add
add
mov
add
add
add
add
mov
add
add
add
add
mov
add
add
add
add
add
or
xchg
add
xchg
mov
add
add
add
add
add
or
xchg
add
xchg
add
push
mov
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
xchg
add
ds
add
ds
add
bound
push
add
imul
add
add
sbb
add
adc
lea
push
add
add
add
add
ficom
jb
popa
add
adc
add
adc
pop
add
add
add
add
lods
add
add
rcl
add
add
add
adc
add
add
add
add
add
add
sub
cdq
add
add
inc
lea
rol
inc
cwde
add
add
add
in
add
add
add
add
cs
add
cmp
add
dec
mov
dec
movs
add
add
jge
and
js
sbb
cmp
es
aas
add
fiadd
sub
es
add
add
scas
add
enter
mov
add
add
push
pop
add
add
add
pop
mov
popa
add
push
mov
sub
out
ds
sbb
jge
dec
push
jno
add
pop
pop
push
dec
add
pop
and
add
sub
into
pop
mov
pop
enter
xor
add
xchg
mov
mov
add
pop
clc
push
sub
add
popa
dec
pop
leave
add
add
bound
add
aas
add
cmp
sub
in
fs
or
add
or
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
mov
rol
iret
jbe
add
add
ja
add
pop
ja
or
ja
inc
or
add
add
ficom
push
or
stc
ja
or
adc
pusha
or
add
add
ja
dec
add
inc
add
add
add
js
add
adc
add
and
add
jns
or
add
xor
jns
add
stos
jns
add
add
or
add
jge
or
add
lds
add
lds
add
push
or
push
or
cmp
cmp
pop
or
and
mov
or
int3
or
(bad)
or
aas
add
ror
je
loopne
sti
add
add
sti
add
and
sti
add
adc
inc
add
add
adc
add
and
sti
add
inc
push
sti
add
pusha
pop
sti
add
adc
add
mov
add
sti
add
pusha
sbb
add
sbb
add
mov
add
sbb
add
loopne
sti
add
add
add
and
add
inc
sbb
add
pusha
sbb
add
pusha
pop
sti
add
sbb
add
pusha
and
add
and
add
pusha
and
add
and
add
mov
add
sti
add
and
inc
add
sub
add
sti
add
and
sti
add
inc
cs
add
pusha
cs
add
sub
add
inc
aaa
sti
add
pusha
aaa
sti
add
xor
add
sar
add
loopne
sti
add
sar
add
cmp
add
mov
add
ds
add
loopne
sti
add
mov
add
inc
sti
add
loopne
sti
add
add
add
add
add
add
add
add
add
add
add
add
repnz
sbb
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
sub
add
or
add
sub
add
dec
add
add
add
add
add
add
add
add
aas
add
rol
add
add
in
add
add
add
add
rol
sub
inc
add
mov
add
add
add
add
add
add
add
add
jmp
push
test
sahf
push
fadd
push
pop
push
pop
jp
sahf
pop
fadd
jmp
outs
or
clc
or
or
or
cmp
arpl
mov
scas
or
or
or
or
aam
in
or
or
add
rol
add
sub
add
adc
hlt
add
data16
add
add
pop
or
add
add
add
in
add
add
test
sub
cmp
dec
xchg
xor
push
xchg
xor
bound
add
add
push
jl
add
pop
jl
add
pusha
jl
add
jo
push
add
cmp
add
jl
add
push
add
jge
add
pop
jle
add
fs
add
jo
push
add
mov
add
jg
add
add
add
str
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
dec
add
add
add
add
add
add
add
add
add
pop
add
add
add
add
mov
add
add
add
add
add
stos
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
sbb
push
add
add
add
add
add
add
and
and
add
add
add
add
add
add
add
add
add
add
sub
sub
add
add
add
xchg
add
add
add
xchg
add
add
add
add
add
xchg
add
add
fild
das
add
xchg
add
add
add
xchg
add
add
add
xchg
add
add
loope
add
add
dec
add
xchg
add
add
loope
add
add
dec
add
xchg
add
add
loope
add
add
gs
xchg
add
add
in
add
add
ja
loope
add
add
jns
loope
add
add
jnp
loope
add
add
xchg
add
xchg
add
add
add
add
add
add
add
add
add
add
add
xchg
add
add
add
xchg
add
add
add
xchg
add
add
add
xchg
add
add
add
xchg
add
add
add
xchg
add
add
add
xchg
add
add
add
xchg
add
add
add
xchg
add
add
add
xchg
add
add
add
xchg
add
add
loope
add
add
jecxz
loope
add
add
jecxz
in
add
add
in
loope
add
add
out
loope
add
add
jmp
add
add
loope
add
add
jns
loope
add
add
lea
loope
add
add
pop
loope
add
add
lods
add
xchg
add
add
add
xchg
add
add
add
xchg
add
add
add
xchg
add
add
add
xchg
add
add
add
xchg
add
add
add
xchg
add
add
add
add
add
add
add
xchg
add
add
add
xchg
add
add
xor
add
fld
ret
pop
xchg
add
in
add
add
pusha
pop
or
popw
call
add
add
pop
jmp
add
add
or
int3
pop
js
int3
pop
add
add
js
xor
or
add
or
add
or
mov
add
sub
jle
inc
add
or
jle
out
int3
pop
mov
int3
pop
clc
add
sbb
outs
or
or
add
add
add
or
pop
add
add
or
adc
add
imul
push
add
(bad)
jns
adc
popa
add
add
add
add
add
add
add
add
add
add
add
lea
sbb
add
add
add
add
add
add
xor
and
add
add
add
add
add
sub
mov
add
add
das
add
add
add
add
add
add
rol
xor
add
aaa
add
push
jbe
fs
gs
add
outs
jbe
fs
add
arpl
ins
imul
gs
cs
imul
inc
outs
jb
jae
push
jns
je
ins
cs
jb
ja
outs
add
jae
gs
add
jae
gs
cs
outs
jb
add
jae
outs
popa
add
jb
gs
xor
add
sub
sub
jne
arpl
add
xor
xor
sub
sub
sub
sub
gs
xor
cmp
jge
gs
cmp
sub
gs
jne
arpl
cs
jae
jne
arpl
add
gs
sub
mov
sub
mov
sub
loop
stos
loop
(bad)
loop
scas
loop
stos
loop
(bad)
loop
mov
or
scas
loop
stos
loop
(bad)
loop
mov
or
stos
loop
mov
sub
(bad)
loop
scas
loop
lods
loop
(bad)
loop
lods
loop
lods
loop
stos
loop
(bad)
loop
stos
loop
(bad)
loop
scas
add
sub
loop
lods
loop
(bad)
loop
scas
loop
stos
loop
lods
loop
lods
loop
mov
or
lods
loop
mov
or
loop
stos
loop
mov
sub
loop
mov
or
loop
mov
sub
loop
lods
loop
stos
loop
stos
loop
stos
loop
stos
loop
scas
loop
scas
loop
lods
loop
scas
add
je
add
arpl
outs
jb
push
jns
add
je
outs
fs
outs
outs
add
jae
gs
cs
gs
arpl
outs
add
gs
add
jae
gs
cs
push
imul
imul
arpl
popa
jb
ins
gs
jb
jp
fs
push
push
je
jb
add
arpl
add
jbe
jb
outs
ins
outs
je
loop
scas
loop
stos
loop
(bad)
loop
stos
loop
scas
loop
(bad)
loop
mov
or
stos
loop
mov
or
loop
stos
loop
lods
loop
lods
loop
lods
loop
(bad)
loop
stos
loop
lods
loop
mov
sub
lods
loop
mov
sub
(bad)
loop
stos
loop
lods
loop
scas
loop
scas
loop
scas
loop
stos
loop
mov
sub
scas
add
sub
mov
sub
(bad)
loop
(bad)
loop
lods
loop
mov
or
stos
loop
stos
loop
lods
loop
scas
loop
(bad)
loop
lods
loop
lods
loop
scas
loop
lods
loop
scas
loop
lods
loop
scas
loop
stos
loop
scas
loop
scas
loop
mov
sub
stos
loop
(bad)
loop
scas
loop
stos
loop
(bad)
loop
stos
loop
mov
sub
add
or
loop
lods
loop
mov
sub
loop
mov
or
lods
loop
stos
loop
(bad)
loop
lods
loop
mov
sub
mov
or
lods
loop
scas
loop
stos
loop
lods
loop
(bad)
loop
scas
loop
stos
loop
mov
sub
stos
loop
lods
loop
stos
loop
stos
loop
stos
loop
lods
loop
lods
loop
scas
add
jb
jns
push
jne
je
ins
gs
imul
fs
gs
sub
lods
loop
lods
loop
(bad)
loop
stos
loop
scas
loop
stos
loop
mov
sub
scas
loop
scas
loop
lods
loop
(bad)
loop
lods
loop
scas
loop
scas
loop
stos
loop
(bad)
loop
lods
loop
stos
loop
lods
loop
stos
loop
scas
loop
(bad)
loop
scas
loop
stos
loop
mov
sub
stos
loop
scas
loop
stos
loop
lods
loop
scas
loop
stos
loop
stos
loop
scas
add
outs
je
ins
gs
jns
gs
popa
outs
fs
gs
sub
loop
mov
sub
scas
loop
lods
loop
mov
sub
loop
(bad)
loop
lods
loop
mov
sub
stos
loop
stos
loop
stos
loop
scas
loop
mov
sub
loop
stos
loop
stos
loop
stos
loop
stos
loop
lods
loop
mov
or
lods
loop
lods
loop
lods
loop
lods
loop
mov
or
add
je
gs
outs
fs
or
lods
loop
mov
sub
lods
loop
lods
loop
stos
loop
stos
loop
stos
loop
stos
loop
stos
loop
lods
loop
lods
loop
stos
loop
scas
loop
lods
loop
mov
sub
mov
sub
(bad)
loop
mov
sub
stos
loop
(bad)
loop
lods
loop
scas
loop
(bad)
loop
stos
loop
stos
loop
lods
loop
stos
loop
lods
loop
scas
add
sub
loop
(bad)
loop
lods
loop
mov
or
lods
loop
stos
loop
lods
loop
lods
loop
stos
loop
stos
loop
(bad)
loop
stos
loop
lods
loop
lods
loop
lods
loop
mov
or
loop
scas
loop
stos
loop
stos
loop
stos
loop
scas
loop
stos
loop
scas
loop
scas
loop
stos
loop
lods
loop
stos
loop
lods
loop
(bad)
loop
lods
loop
lods
loop
scas
loop
stos
loop
scas
add
sub
loop
lods
loop
mov
sub
scas
loop
mov
sub
lods
loop
stos
loop
lods
loop
scas
loop
(bad)
loop
(bad)
loop
scas
loop
mov
sub
scas
loop
scas
loop
(bad)
loop
mov
sub
(bad)
loop
stos
loop
stos
loop
mov
sub
loop
(bad)
loop
mov
sub
outs
fs
popa
jae
add
jne
ins
jae
loop
scas
loop
lods
loop
stos
loop
stos
loop
lods
loop
scas
loop
lods
loop
lods
loop
scas
loop
stos
loop
lods
loop
stos
loop
lods
loop
stos
loop
stos
loop
scas
loop
scas
loop
(bad)
loop
stos
loop
scas
loop
mov
sub
stos
loop
(bad)
loop
(bad)
loop
stos
loop
(bad)
loop
stos
loop
(bad)
loop
(bad)
loop
lods
loop
stos
loop
stos
loop
(bad)
loop
stos
loop
mov
or
scas
add
sub
mov
or
lods
loop
lods
loop
scas
loop
scas
loop
(bad)
loop
mov
or
stos
loop
lods
loop
lods
loop
mov
sub
stos
loop
mov
or
lods
loop
lods
loop
lods
loop
mov
sub
loop
scas
loop
lods
loop
scas
loop
mov
or
loop
lods
loop
scas
loop
scas
add
sub
(bad)
loop
lods
loop
(bad)
loop
lods
loop
mov
or
lods
loop
stos
loop
stos
loop
lods
loop
scas
loop
stos
loop
stos
loop
mov
sub
mov
sub
loop
lods
loop
mov
sub
lods
loop
mov
sub
(bad)
loop
stos
loop
mov
or
stos
loop
lods
loop
scas
add
sub
stos
loop
lods
loop
(bad)
loop
(bad)
loop
scas
loop
(bad)
loop
scas
loop
mov
or
mov
sub
lods
loop
lods
loop
lods
loop
mov
sub
stos
loop
scas
loop
mov
sub
mov
sub
scas
loop
scas
loop
lods
loop
(bad)
loop
stos
loop
scas
loop
scas
loop
scas
add
sub
lods
loop
stos
loop
scas
loop
scas
loop
stos
loop
stos
loop
stos
loop
mov
sub
stos
loop
lods
loop
scas
loop
lods
loop
(bad)
loop
lods
loop
stos
loop
scas
loop
lods
loop
scas
loop
lods
loop
stos
loop
stos
loop
lods
loop
mov
sub
(bad)
loop
(bad)
loop
scas
loop
(bad)
loop
stos
loop
mov
sub
stos
loop
scas
add
or
lods
loop
mov
or
stos
loop
(bad)
loop
mov
sub
(bad)
loop
stos
loop
(bad)
loop
mov
sub
loop
mov
sub
stos
loop
lods
loop
lods
loop
stos
loop
stos
loop
(bad)
loop
mov
sub
loop
lods
loop
stos
loop
lods
loop
lods
loop
lods
loop
scas
loop
mov
sub
sub
mov
sub
(bad)
loop
lods
loop
lods
loop
stos
loop
scas
loop
lods
loop
lods
loop
scas
loop
stos
loop
scas
loop
scas
loop
mov
sub
loop
stos
loop
(bad)
loop
stos
loop
scas
loop
scas
loop
lods
loop
scas
loop
lods
loop
stos
loop
lods
loop
mov
or
stos
loop
stos
loop
mov
sub
sub
lods
loop
mov
or
loop
lods
loop
stos
loop
lods
loop
stos
loop
stos
loop
lods
loop
(bad)
loop
lods
loop
stos
loop
mov
or
lods
loop
stos
loop
stos
loop
mov
or
mov
or
scas
loop
stos
loop
stos
loop
stos
loop
lods
loop
stos
loop
scas
loop
(bad)
loop
mov
sub
scas
loop
stos
loop
lods
loop
mov
sub
stos
loop
lods
loop
stos
loop
lods
loop
stos
loop
mov
sub
(bad)
loop
scas
loop
stos
loop
(bad)
loop
stos
loop
mov
sub
scas
loop
scas
loop
stos
loop
lods
loop
mov
sub
lods
loop
mov
sub
(bad)
loop
lods
loop
mov
sub
sub
mov
or
lods
loop
lods
loop
mov
sub
loop
scas
loop
stos
loop
scas
loop
scas
loop
lods
loop
lods
loop
scas
loop
stos
loop
lods
loop
lods
loop
(bad)
loop
mov
sub
stos
loop
mov
or
stos
loop
scas
loop
(bad)
loop
scas
loop
(bad)
loop
stos
loop
mov
sub
lods
loop
scas
add
sub
stos
loop
scas
loop
stos
loop
scas
loop
lods
loop
stos
loop
lods
loop
(bad)
loop
mov
or
loop
stos
loop
lods
loop
(bad)
loop
(bad)
loop
scas
loop
stos
loop
scas
loop
lods
loop
lods
loop
(bad)
loop
mov
sub
lods
loop
scas
loop
stos
loop
mov
or
scas
loop
lods
loop
scas
loop
scas
loop
stos
loop
(bad)
loop
scas
add
or
stos
loop
mov
sub
loop
lods
loop
stos
loop
stos
loop
mov
sub
mov
sub
stos
loop
stos
loop
stos
loop
stos
loop
mov
sub
lods
loop
stos
loop
stos
loop
mov
sub
loop
stos
loop
(bad)
loop
lods
loop
mov
sub
lods
loop
(bad)
loop
scas
add
sub
stos
loop
scas
loop
lods
loop
mov
sub
loop
mov
or
(bad)
loop
stos
loop
lods
loop
stos
loop
mov
or
mov
sub
mov
sub
stos
loop
stos
loop
stos
loop
scas
loop
scas
loop
stos
loop
stos
loop
scas
loop
stos
loop
stos
loop
scas
loop
stos
loop
stos
loop
stos
loop
scas
add
or
loop
stos
loop
stos
loop
mov
sub
mov
or
lods
loop
stos
loop
stos
loop
stos
loop
lods
loop
scas
loop
lods
loop
lods
loop
scas
loop
(bad)
loop
stos
loop
mov
sub
lods
loop
(bad)
loop
mov
sub
lods
loop
stos
loop
lods
loop
lods
loop
stos
loop
mov
or
add
sub
loop
scas
loop
lods
loop
lods
loop
mov
sub
lods
loop
mov
or
scas
loop
mov
sub
loop
stos
loop
lods
loop
stos
loop
mov
or
(bad)
loop
mov
sub
stos
loop
lods
loop
scas
loop
lods
loop
lods
loop
stos
loop
(bad)
loop
lods
loop
stos
loop
scas
add
or
scas
loop
stos
loop
lods
loop
scas
loop
lods
loop
lods
loop
scas
loop
scas
loop
stos
loop
stos
loop
mov
or
lods
loop
stos
loop
mov
sub
stos
loop
scas
loop
mov
sub
scas
loop
scas
loop
(bad)
loop
lods
loop
lods
loop
scas
loop
scas
loop
lods
loop
(bad)
loop
(bad)
loop
stos
loop
lods
loop
(bad)
loop
scas
loop
scas
add
ins
outs
jb
push
je
gs
ins
add
jae
gs
cs
dec
add
sub
stos
loop
stos
loop
scas
loop
mov
sub
stos
loop
scas
loop
stos
loop
mov
sub
lods
loop
lods
loop
stos
loop
(bad)
loop
mov
sub
stos
loop
(bad)
loop
lods
loop
stos
loop
stos
loop
lods
loop
stos
loop
lods
loop
stos
loop
scas
loop
lods
loop
mov
sub
mov
sub
add
outs
je
xor
loop
scas
loop
mov
sub
scas
loop
lods
loop
lods
loop
lods
loop
(bad)
loop
mov
sub
stos
loop
mov
sub
loop
stos
loop
stos
loop
scas
loop
lods
loop
stos
loop
scas
loop
mov
sub
scas
loop
mov
sub
scas
loop
(bad)
loop
(bad)
loop
lods
loop
stos
loop
stos
loop
scas
add
arpl
imul
je
ins
cs
gs
add
je
push
push
inc
cmp
inc
gs
je
imul
gs
add
data16
inc
ins
outs
arpl
outs
jo
add
je
jns
gs
jb
ins
dec
popa
outs
fs
add
je
ins
gs
outs
je
jns
add
gs
je
dec
outs
jae
popa
outs
arpl
loop
lods
loop
(bad)
loop
mov
sub
loop
scas
loop
scas
loop
stos
loop
(bad)
loop
stos
loop
mov
sub
loop
(bad)
loop
mov
or
stos
loop
mov
or
mov
sub
lods
loop
scas
loop
mov
or
(bad)
loop
(bad)
loop
mov
sub
scas
loop
scas
loop
(bad)
loop
scas
add
sub
loop
scas
loop
stos
loop
lods
loop
mov
or
mov
sub
stos
loop
stos
loop
stos
loop
stos
loop
lods
loop
stos
loop
stos
loop
lods
loop
scas
loop
(bad)
loop
stos
loop
lods
loop
scas
loop
mov
sub
scas
loop
(bad)
loop
stos
loop
stos
loop
lods
loop
lods
loop
lods
loop
stos
loop
stos
loop
lods
loop
scas
add
or
scas
loop
lods
loop
scas
loop
scas
loop
stos
loop
stos
loop
stos
loop
stos
loop
stos
loop
lods
loop
scas
loop
stos
loop
lods
loop
stos
loop
mov
sub
lods
loop
lods
loop
stos
loop
lods
loop
(bad)
loop
mov
sub
loop
stos
loop
lods
loop
lods
loop
lods
loop
lods
loop
lods
loop
scas
loop
stos
loop
scas
loop
scas
loop
(bad)
loop
scas
add
sub
lods
loop
mov
sub
stos
loop
stos
loop
mov
sub
stos
loop
scas
loop
stos
loop
mov
sub
lods
loop
stos
loop
stos
loop
lods
loop
scas
loop
lods
loop
lods
loop
stos
loop
(bad)
loop
stos
loop
scas
loop
scas
loop
stos
loop
lods
loop
(bad)
loop
stos
loop
scas
loop
stos
loop
lods
loop
stos
loop
scas
add
or
stos
loop
scas
loop
lods
loop
(bad)
loop
stos
loop
scas
loop
lods
loop
lods
loop
mov
sub
loop
stos
loop
scas
loop
stos
loop
stos
loop
mov
or
lods
loop
lods
loop
stos
loop
stos
loop
scas
loop
(bad)
loop
lods
loop
lods
loop
lods
loop
scas
loop
lods
loop
lods
loop
mov
sub
lods
loop
stos
loop
stos
loop
scas
add
push
ins
inc
dec
outs
aaa
imul
gs
outs
push
push
outs
add
push
push
je
pop
inc
arpl
inc
dec
fs
push
jno
add
xor
inc
pop
ss
cmp
jb
push
add
xor
push
dec
inc
push
imul
xor
push
jne
je
ins
gs
gs
jo
jb
add
jae
gs
cs
jne
je
ins
gs
outs
ins
jo
ins
gs
gs
imul
imul
inc
jb
popa
jns
imul
jno
jbe
dec
gs
imul
jno
push
dec
aaa
outs
push
addr16
inc
pop
outs
dec
je
xor
inc
outs
outs
arpl
add
jne
gs
push
je
popa
cmp
inc
xor
jbe
imul
xor
push
push
arpl
jb
gs
jbe
dec
jo
add
imul
imul
dec
fs
inc
pop
xor
dec
xor
dec
dec
add
je
dec
jae
popa
arpl
jb
jne
add
xor
jno
imul
jns
xor
imul
je
dec
inc
imul
ja
pop
push
arpl
aaa
xor
push
add
je
inc
jne
jb
outs
je
push
add
pop
arpl
jbe
js
xor
xor
push
add
gs
dec
outs
dec
push
push
cmp
jns
xor
dec
ins
inc
add
jne
addr16
push
jns
je
ins
cs
imul
imul
pop
dec
jae
je
popa
arpl
add
dec
popa
js
dec
xor
xor
addr16
push
push
add
dec
outs
addr16
je
push
dec
ins
xor
jno
addr16
dec
cmp
add
je
dec
jae
ins
imul
imul
jo
pop
xor
xor
add
jb
popa
ins
add
je
dec
outs
addr16
add
push
popa
xor
xor
pop
ss
pop
add
popa
fs
jns
add
jno
dec
xor
inc
push
dec
outs
inc
pop
inc
push
cmp
push
gs
add
xor
dec
js
outs
inc
pop
inc
push
push
ss
jns
dec
fs
xor
jae
dec
pop
aaa
dec
inc
inc
push
add
ins
pop
dec
dec
aaa
dec
push
push
dec
outs
ins
push
dec
dec
jb
add
outs
fs
je
cmp
inc
push
cmp
xor
loop
lods
loop
lods
loop
scas
loop
stos
loop
lods
loop
scas
loop
stos
loop
stos
loop
stos
loop
stos
loop
lods
loop
mov
sub
lods
loop
(bad)
loop
lods
loop
mov
or
mov
or
mov
sub
loop
scas
loop
(bad)
loop
scas
loop
(bad)
loop
scas
loop
scas
loop
stos
loop
mov
or
scas
loop
lods
loop
scas
add
ins
jne
push
jns
gs
sub
mov
sub
lods
loop
stos
loop
lods
loop
scas
loop
mov
sub
lods
loop
(bad)
loop
stos
loop
lods
loop
scas
loop
mov
sub
stos
loop
scas
loop
scas
loop
stos
loop
lods
loop
(bad)
loop
lods
loop
mov
sub
loop
(bad)
loop
mov
sub
add
sub
lods
loop
mov
or
lods
loop
lods
loop
lods
loop
scas
loop
stos
loop
lods
loop
(bad)
loop
lods
loop
stos
loop
stos
loop
(bad)
loop
mov
sub
scas
loop
mov
or
loop
scas
loop
scas
loop
(bad)
loop
scas
loop
lods
loop
stos
loop
(bad)
loop
lods
loop
scas
loop
(bad)
loop
mov
sub
add
or
loop
stos
loop
mov
sub
lods
loop
scas
loop
stos
loop
stos
loop
lods
loop
scas
loop
mov
sub
stos
loop
mov
or
stos
loop
stos
loop
stos
loop
mov
or
loop
stos
loop
(bad)
loop
mov
sub
mov
sub
scas
loop
stos
loop
scas
add
jbe
xor
xor
gs
push
push
cmp
add
dec
fs
inc
cmp
je
cmp
push
push
ja
outs
push
xor
pop
dec
inc
inc
xor
ja
add
sub
(bad)
loop
stos
loop
lods
loop
stos
loop
lods
loop
lods
loop
stos
loop
mov
sub
(bad)
loop
(bad)
loop
scas
loop
stos
loop
lods
loop
scas
loop
stos
loop
lods
loop
stos
loop
stos
loop
(bad)
loop
mov
sub
mov
or
lods
loop
lods
loop
(bad)
loop
stos
loop
(bad)
loop
scas
loop
stos
loop
scas
loop
lods
loop
stos
loop
scas
add
or
(bad)
loop
lods
loop
mov
sub
scas
loop
mov
or
mov
sub
scas
loop
stos
loop
stos
loop
stos
loop
stos
loop
stos
loop
mov
sub
stos
loop
mov
or
stos
loop
scas
loop
lods
loop
scas
loop
lods
loop
mov
or
(bad)
loop
lods
loop
scas
loop
scas
add
or
loop
stos
loop
mov
or
lods
loop
(bad)
loop
(bad)
loop
stos
loop
mov
sub
stos
loop
stos
loop
lods
loop
(bad)
loop
stos
loop
scas
loop
lods
loop
lods
loop
scas
loop
(bad)
loop
lods
loop
(bad)
loop
lods
loop
lods
loop
scas
loop
lods
loop
mov
or
stos
loop
stos
loop
mov
sub
scas
add
or
lods
loop
stos
loop
lods
loop
stos
loop
scas
loop
stos
loop
(bad)
loop
scas
loop
scas
loop
(bad)
loop
stos
loop
lods
loop
lods
loop
mov
or
stos
loop
mov
or
mov
or
lods
loop
stos
loop
scas
loop
mov
sub
lods
loop
lods
loop
scas
loop
scas
loop
lods
loop
scas
loop
lods
loop
(bad)
loop
scas
add
or
loop
scas
loop
scas
loop
(bad)
loop
scas
loop
mov
or
loop
stos
loop
(bad)
loop
stos
loop
stos
loop
stos
loop
scas
loop
stos
loop
scas
loop
scas
loop
scas
loop
(bad)
loop
mov
sub
(bad)
loop
stos
loop
scas
loop
(bad)
loop
stos
loop
lods
loop
lods
loop
lods
loop
lods
loop
lods
loop
stos
loop
scas
loop
scas
loop
stos
loop
lods
loop
scas
add
sub
mov
sub
scas
loop
scas
loop
scas
loop
lods
loop
scas
loop
(bad)
loop
scas
loop
mov
or
loop
stos
loop
stos
loop
mov
sub
loop
(bad)
loop
scas
loop
mov
sub
mov
sub
mov
sub
lods
loop
lods
loop
scas
add
or
loop
(bad)
loop
mov
sub
(bad)
loop
mov
or
stos
loop
(bad)
loop
mov
sub
mov
sub
loop
stos
loop
lods
loop
stos
loop
scas
loop
(bad)
loop
lods
loop
mov
sub
loop
scas
loop
scas
loop
(bad)
loop
mov
or
mov
sub
dec
arpl
dec
xor
arpl
add
cmp
jno
pop
dec
dec
outs
je
dec
inc
cmp
loop
scas
loop
stos
loop
scas
loop
scas
loop
lods
loop
lods
loop
lods
loop
stos
loop
stos
loop
scas
loop
stos
loop
mov
or
(bad)
loop
mov
sub
scas
loop
scas
loop
mov
sub
scas
loop
lods
loop
scas
loop
(bad)
loop
stos
loop
lods
loop
stos
loop
stos
loop
stos
loop
mov
or
lods
loop
lods
loop
stos
loop
lods
loop
scas
loop
scas
add
sub
scas
loop
(bad)
loop
scas
loop
lods
loop
mov
or
lods
loop
mov
or
mov
sub
loop
stos
loop
scas
loop
(bad)
loop
stos
loop
mov
sub
loop
stos
loop
scas
loop
lods
loop
stos
loop
(bad)
loop
lods
loop
scas
loop
(bad)
loop
mov
sub
lods
loop
scas
loop
(bad)
loop
(bad)
loop
scas
add
sub
loop
lods
loop
lods
loop
stos
loop
lods
loop
stos
loop
lods
loop
mov
sub
stos
loop
lods
loop
stos
loop
stos
loop
mov
sub
stos
loop
scas
loop
lods
loop
(bad)
loop
lods
loop
mov
sub
stos
loop
stos
loop
mov
sub
(bad)
loop
scas
loop
lods
loop
stos
loop
scas
add
sub
lods
loop
stos
loop
mov
sub
stos
loop
stos
loop
lods
loop
lods
loop
scas
loop
stos
loop
lods
loop
lods
loop
scas
loop
lods
loop
stos
loop
stos
loop
(bad)
loop
(bad)
loop
mov
sub
stos
loop
mov
or
(bad)
loop
mov
sub
scas
loop
mov
sub
stos
loop
scas
add
sub
mov
or
(bad)
loop
stos
loop
lods
loop
stos
loop
stos
loop
scas
loop
mov
sub
lods
loop
lods
loop
mov
sub
loop
mov
sub
loop
scas
loop
stos
loop
(bad)
loop
scas
loop
lods
loop
(bad)
loop
lods
loop
mov
sub
lods
loop
stos
loop
lods
loop
lods
loop
scas
add
sub
lods
loop
scas
loop
(bad)
loop
mov
or
mov
sub
scas
loop
mov
or
mov
sub
loop
lods
loop
stos
loop
mov
sub
stos
loop
mov
sub
lods
loop
stos
loop
mov
sub
lods
loop
(bad)
loop
stos
loop
stos
loop
stos
loop
scas
add
or
loop
scas
loop
scas
loop
stos
loop
scas
loop
lods
loop
stos
loop
mov
sub
lods
loop
lods
loop
lods
loop
(bad)
loop
mov
sub
stos
loop
scas
loop
scas
loop
lods
loop
scas
loop
(bad)
loop
mov
sub
lods
loop
scas
loop
lods
loop
mov
sub
stos
loop
lods
loop
stos
loop
scas
add
sub
stos
loop
mov
sub
lods
loop
stos
loop
stos
loop
lods
loop
stos
loop
scas
loop
lods
loop
stos
loop
scas
loop
mov
sub
loop
scas
loop
(bad)
loop
(bad)
loop
(bad)
loop
stos
loop
mov
sub
lods
loop
lods
loop
stos
loop
mov
sub
loop
lods
loop
scas
add
je
dec
push
jb
push
ins
popa
push
push
xor
jae
push
push
inc
push
push
arpl
add
imul
push
dec
inc
outs
inc
dec
xor
jo
add
dec
popa
inc
bound
xor
bound
add
sub
lods
loop
scas
loop
lods
loop
lods
loop
lods
loop
(bad)
loop
lods
loop
mov
sub
loop
lods
loop
scas
loop
stos
loop
lods
loop
scas
loop
stos
loop
stos
loop
lods
loop
scas
loop
stos
loop
stos
loop
stos
loop
lods
loop
lods
loop
mov
sub
stos
loop
(bad)
loop
scas
loop
stos
loop
mov
sub
mov
sub
sub
stos
loop
stos
loop
scas
loop
lods
loop
mov
or
scas
loop
scas
loop
scas
loop
stos
loop
scas
loop
mov
sub
stos
loop
mov
sub
mov
sub
stos
loop
mov
or
stos
loop
lods
loop
lods
loop
mov
or
stos
loop
stos
loop
scas
add
or
loop
lods
loop
scas
loop
(bad)
loop
lods
loop
scas
loop
mov
sub
scas
loop
mov
or
loop
scas
loop
scas
loop
lods
loop
scas
loop
stos
loop
stos
loop
mov
or
lods
loop
lods
loop
stos
loop
mov
or
loop
stos
loop
stos
loop
scas
loop
stos
loop
scas
loop
scas
loop
scas
loop
stos
loop
scas
add
sub
loop
stos
loop
(bad)
loop
mov
sub
lods
loop
(bad)
loop
stos
loop
(bad)
loop
lods
loop
mov
sub
mov
sub
stos
loop
mov
or
loop
scas
loop
stos
loop
lods
loop
lods
loop
stos
loop
lods
loop
mov
sub
lods
loop
stos
loop
lods
loop
(bad)
loop
scas
add
sub
lods
loop
(bad)
loop
mov
sub
loop
lods
loop
mov
sub
mov
or
stos
loop
stos
loop
scas
loop
stos
loop
stos
loop
scas
loop
lods
loop
(bad)
loop
scas
loop
lods
loop
lods
loop
mov
sub
stos
loop
lods
loop
scas
loop
(bad)
loop
stos
loop
stos
loop
stos
loop
scas
loop
stos
loop
scas
add
or
stos
loop
lods
loop
lods
loop
mov
or
loop
stos
loop
(bad)
loop
stos
loop
lods
loop
mov
sub
mov
sub
scas
loop
stos
loop
scas
loop
(bad)
loop
stos
loop
mov
sub
scas
loop
lods
loop
lods
loop
mov
sub
stos
loop
scas
loop
scas
loop
stos
loop
mov
sub
or
loop
lods
loop
mov
sub
scas
loop
lods
loop
lods
loop
lods
loop
(bad)
loop
lods
loop
scas
loop
(bad)
loop
stos
loop
(bad)
loop
scas
loop
stos
loop
mov
sub
loop
mov
or
stos
loop
(bad)
loop
scas
loop
(bad)
loop
stos
loop
mov
sub
lods
loop
stos
loop
(bad)
loop
stos
loop
scas
add
or
stos
loop
stos
loop
scas
loop
stos
loop
lods
loop
scas
loop
mov
or
(bad)
loop
lods
loop
mov
sub
(bad)
loop
lods
loop
mov
or
mov
sub
lods
loop
stos
loop
stos
loop
stos
loop
lods
loop
mov
sub
loop
mov
sub
scas
add
sub
scas
loop
lods
loop
stos
loop
lods
loop
lods
loop
mov
sub
lods
loop
(bad)
loop
mov
sub
(bad)
loop
stos
loop
stos
loop
scas
loop
stos
loop
lods
loop
scas
loop
(bad)
loop
scas
loop
(bad)
loop
stos
loop
lods
loop
lods
loop
lods
loop
lods
loop
scas
loop
scas
loop
stos
loop
stos
loop
mov
sub
scas
add
sub
scas
loop
stos
loop
mov
sub
(bad)
loop
scas
loop
stos
loop
stos
loop
stos
loop
mov
or
scas
loop
(bad)
loop
scas
loop
stos
loop
lods
loop
mov
sub
loop
(bad)
loop
lods
loop
lods
loop
lods
loop
scas
loop
stos
loop
lods
loop
scas
loop
lods
loop
scas
loop
(bad)
loop
mov
sub
scas
add
sub
stos
loop
lods
loop
scas
loop
scas
loop
(bad)
loop
lods
loop
stos
loop
stos
loop
scas
loop
lods
loop
(bad)
loop
(bad)
loop
mov
or
(bad)
loop
mov
or
lods
loop
mov
sub
loop
lods
loop
mov
sub
mov
sub
lods
loop
lods
loop
(bad)
loop
scas
add
sub
(bad)
loop
stos
loop
stos
loop
stos
loop
scas
loop
mov
sub
stos
loop
mov
or
lods
loop
mov
sub
stos
loop
lods
loop
lods
loop
(bad)
loop
scas
loop
scas
loop
lods
loop
lods
loop
stos
loop
lods
loop
lods
loop
mov
sub
scas
loop
lods
loop
mov
sub
scas
loop
scas
add
sub
scas
loop
(bad)
loop
stos
loop
mov
sub
loop
lods
loop
(bad)
loop
lods
loop
stos
loop
stos
loop
stos
loop
lods
loop
stos
loop
mov
or
scas
loop
(bad)
loop
lods
loop
lods
loop
lods
loop
mov
or
stos
loop
lods
loop
stos
loop
stos
loop
lods
loop
stos
loop
stos
loop
scas
loop
mov
sub
lods
loop
scas
loop
lods
loop
lods
loop
lods
loop
scas
loop
stos
loop
lods
loop
stos
loop
lods
loop
lods
loop
scas
loop
lods
loop
scas
loop
(bad)
loop
mov
or
stos
loop
scas
loop
stos
loop
lods
loop
stos
loop
mov
sub
lods
loop
stos
loop
mov
sub
stos
loop
mov
sub
lods
loop
scas
loop
mov
or
sub
scas
loop
stos
loop
lods
loop
(bad)
loop
lods
loop
stos
loop
(bad)
loop
(bad)
loop
mov
sub
mov
sub
stos
loop
mov
sub
scas
loop
lods
loop
stos
loop
lods
loop
(bad)
loop
scas
loop
mov
sub
mov
sub
loop
(bad)
loop
scas
loop
scas
add
sub
(bad)
loop
lods
loop
stos
loop
(bad)
loop
mov
or
stos
loop
stos
loop
lods
loop
scas
loop
stos
loop
scas
loop
lods
loop
mov
sub
lods
loop
stos
loop
scas
loop
stos
loop
lods
loop
mov
sub
mov
sub
loop
stos
loop
stos
loop
(bad)
loop
stos
loop
scas
loop
(bad)
loop
stos
loop
scas
add
sub
scas
loop
stos
loop
mov
or
stos
loop
mov
sub
lods
loop
scas
loop
lods
loop
scas
loop
mov
sub
loop
lods
loop
lods
loop
scas
loop
(bad)
loop
scas
loop
lods
loop
scas
loop
(bad)
loop
stos
loop
lods
loop
scas
loop
(bad)
loop
(bad)
loop
(bad)
loop
(bad)
loop
lods
loop
stos
loop
scas
loop
stos
loop
scas
add
sub
scas
loop
scas
loop
mov
sub
mov
sub
stos
loop
lods
loop
mov
sub
scas
loop
(bad)
loop
stos
loop
stos
loop
stos
loop
lods
loop
stos
loop
lods
loop
stos
loop
scas
loop
scas
loop
(bad)
loop
lods
loop
scas
loop
stos
loop
(bad)
loop
scas
loop
stos
loop
mov
sub
loop
scas
add
or
loop
stos
loop
lods
loop
mov
sub
lods
loop
stos
loop
scas
loop
scas
loop
stos
loop
mov
sub
mov
or
lods
loop
lods
loop
scas
loop
lods
loop
stos
loop
scas
loop
scas
loop
stos
loop
(bad)
loop
stos
loop
scas
loop
mov
sub
stos
loop
lods
loop
lods
loop
stos
loop
scas
add
sub
scas
loop
mov
sub
scas
loop
lods
loop
mov
sub
loop
stos
loop
lods
loop
mov
sub
lods
loop
mov
or
loop
mov
sub
loop
scas
loop
mov
sub
loop
lods
loop
lods
loop
lods
loop
stos
loop
scas
loop
scas
add
or
stos
loop
stos
loop
stos
loop
scas
loop
mov
sub
stos
loop
scas
loop
(bad)
loop
(bad)
loop
scas
loop
mov
sub
lods
loop
stos
loop
scas
loop
stos
loop
(bad)
loop
stos
loop
stos
loop
lods
loop
mov
sub
stos
loop
lods
loop
mov
sub
stos
loop
lods
loop
mov
sub
scas
loop
(bad)
loop
lods
loop
lods
loop
mov
sub
stos
loop
lods
loop
lods
loop
(bad)
loop
stos
loop
(bad)
loop
lods
loop
stos
loop
stos
loop
scas
loop
stos
loop
stos
loop
scas
loop
stos
loop
scas
loop
mov
or
stos
loop
scas
loop
mov
or
stos
loop
lods
loop
(bad)
loop
lods
loop
mov
sub
lods
loop
scas
add
or
loop
lods
loop
mov
or
loop
stos
loop
stos
loop
stos
loop
scas
loop
lods
loop
scas
loop
mov
or
stos
loop
(bad)
loop
scas
loop
mov
sub
scas
loop
(bad)
loop
lods
loop
stos
loop
stos
loop
(bad)
loop
stos
loop
lods
loop
lods
loop
mov
or
scas
loop
lods
loop
(bad)
loop
scas
loop
mov
sub
sub
lods
loop
(bad)
loop
mov
sub
stos
loop
stos
loop
lods
loop
scas
loop
scas
loop
scas
loop
mov
sub
loop
(bad)
loop
scas
loop
(bad)
loop
(bad)
loop
stos
loop
scas
loop
scas
loop
scas
loop
stos
loop
lods
loop
(bad)
loop
mov
sub
lods
loop
mov
sub
stos
loop
scas
add
sub
(bad)
loop
lods
loop
stos
loop
mov
or
mov
or
lods
loop
lods
loop
stos
loop
(bad)
loop
mov
or
lods
loop
lods
loop
lods
loop
scas
loop
scas
loop
stos
loop
mov
sub
loop
stos
loop
scas
loop
mov
or
stos
loop
lods
loop
mov
sub
lods
loop
scas
add
sub
mov
or
lods
loop
lods
loop
stos
loop
lods
loop
mov
sub
lods
loop
lods
loop
stos
loop
stos
loop
(bad)
loop
lods
loop
scas
loop
lods
loop
mov
sub
mov
sub
stos
loop
lods
loop
stos
loop
lods
loop
mov
sub
stos
loop
stos
loop
scas
add
inc
dec
js
ins
xor
imul
push
xor
ins
cmp
push
dec
push
cmp
dec
js
jb
jb
jbe
push
xor
dec
jb
ins
outs
inc
inc
jae
xor
push
dec
pop
pop
popa
push
pop
bound
jb
inc
inc
add
je
add
js
imul
jno
push
ins
jae
inc
dec
push
arpl
add
dec
dec
inc
dec
fs
dec
fs
aaa
dec
xor
dec
pop
inc
ins
addr16
jne
dec
dec
inc
jno
xor
data16
xor
xor
pop
push
inc
xor
inc
push
pop
add
pop
jb
push
xor
dec
imul
jns
push
arpl
je
ins
inc
inc
bound
je
dec
outs
xor
pop
push
cmp
push
push
jns
dec
arpl
push
inc
push
push
add
ins
dec
dec
data16
push
dec
inc
outs
push
outs
inc
fs
push
jbe
push
jno
imul
push
jo
aaa
add
dec
cmp
xor
dec
push
push
add
inc
cmp
cmp
aaa
pop
ss
aaa
jne
add
dec
push
xor
imul
bound
ja
push
jb
dec
dec
push
jns
dec
jbe
push
ss
push
jbe
cmp
ja
imul
pop
bound
arpl
jae
xor
popa
xor
outs
push
bound
xor
push
add
imul
dec
push
pop
xor
pop
add
cmp
cmp
imul
xor
inc
inc
gs
add
push
pop
xor
dec
ins
pop
inc
dec
push
aaa
outs
inc
data16
outs
xor
push
push
xor
jno
jne
ins
add
sub
lods
loop
scas
loop
scas
loop
stos
loop
stos
loop
mov
sub
stos
loop
mov
or
(bad)
loop
stos
loop
scas
loop
stos
loop
lods
loop
mov
or
mov
sub
loop
lods
loop
scas
loop
stos
loop
lods
loop
scas
loop
stos
loop
scas
loop
scas
loop
scas
loop
stos
loop
(bad)
loop
mov
sub
sub
stos
loop
scas
loop
stos
loop
mov
sub
stos
loop
mov
sub
lods
loop
scas
loop
stos
loop
lods
loop
lods
loop
stos
loop
stos
loop
lods
loop
stos
loop
lods
loop
lods
loop
stos
loop
(bad)
loop
stos
loop
lods
loop
lods
loop
mov
sub
lods
loop
scas
loop
(bad)
loop
(bad)
loop
lods
loop
scas
loop
scas
add
sub
mov
or
(bad)
loop
mov
sub
lods
loop
scas
loop
stos
loop
scas
loop
lods
loop
mov
sub
loop
stos
loop
stos
loop
stos
loop
mov
sub
mov
sub
loop
stos
loop
stos
loop
mov
sub
mov
sub
or
mov
sub
mov
or
stos
loop
stos
loop
stos
loop
(bad)
loop
lods
loop
scas
loop
lods
loop
mov
or
loop
lods
loop
stos
loop
stos
loop
(bad)
loop
mov
sub
loop
stos
loop
stos
loop
stos
loop
mov
sub
(bad)
loop
mov
sub
sub
lods
loop
(bad)
loop
mov
or
mov
sub
scas
loop
stos
loop
lods
loop
lods
loop
stos
loop
scas
loop
mov
or
stos
loop
lods
loop
stos
loop
lods
loop
mov
sub
scas
loop
scas
loop
mov
or
scas
loop
lods
loop
(bad)
loop
stos
loop
scas
loop
stos
loop
(bad)
loop
scas
add
or
stos
loop
stos
loop
stos
loop
(bad)
loop
scas
loop
stos
loop
lods
loop
scas
loop
(bad)
loop
mov
sub
scas
loop
(bad)
loop
stos
loop
lods
loop
(bad)
loop
scas
loop
(bad)
loop
lods
loop
lods
loop
lods
loop
lods
loop
(bad)
loop
mov
sub
stos
loop
scas
loop
stos
loop
scas
loop
mov
sub
scas
loop
mov
sub
or
(bad)
loop
mov
or
lods
loop
stos
loop
stos
loop
lods
loop
(bad)
loop
stos
loop
stos
loop
scas
loop
scas
loop
(bad)
loop
scas
loop
lods
loop
scas
loop
(bad)
loop
mov
sub
scas
loop
mov
sub
lods
loop
stos
loop
stos
loop
(bad)
loop
stos
loop
lods
loop
mov
sub
lods
loop
mov
sub
sub
loop
lods
loop
lods
loop
stos
loop
lods
loop
(bad)
loop
(bad)
loop
lods
loop
scas
loop
stos
loop
stos
loop
(bad)
loop
mov
or
lods
loop
(bad)
loop
lods
loop
lods
loop
mov
sub
lods
loop
stos
loop
scas
loop
(bad)
loop
scas
loop
mov
sub
lods
loop
stos
loop
lods
loop
mov
or
loop
scas
add
sub
stos
loop
stos
loop
mov
or
stos
loop
mov
sub
loop
lods
loop
mov
or
scas
loop
lods
loop
lods
loop
stos
loop
scas
loop
(bad)
loop
mov
sub
(bad)
loop
lods
loop
lods
loop
scas
loop
(bad)
loop
(bad)
loop
stos
loop
(bad)
loop
scas
loop
stos
loop
lods
loop
lods
loop
scas
loop
scas
loop
scas
add
or
mov
sub
loop
lods
loop
stos
loop
stos
loop
scas
loop
mov
or
loop
scas
loop
scas
loop
mov
sub
loop
lods
loop
lods
loop
stos
loop
(bad)
loop
mov
or
loop
scas
loop
scas
loop
mov
sub
mov
or
stos
loop
lods
loop
scas
add
dec
imul
outs
dec
dec
js
addr16
inc
push
arpl
xor
inc
dec
push
dec
inc
push
bound
add
je
inc
xor
imul
arpl
imul
sub
scas
loop
lods
loop
mov
or
scas
loop
stos
loop
stos
loop
stos
loop
lods
loop
(bad)
loop
(bad)
loop
lods
loop
mov
sub
(bad)
loop
(bad)
loop
stos
loop
scas
loop
mov
or
mov
sub
lods
loop
stos
loop
lods
loop
lods
loop
mov
or
loop
mov
sub
scas
add
or
lods
loop
scas
loop
lods
loop
stos
loop
mov
sub
stos
loop
stos
loop
(bad)
loop
mov
sub
loop
stos
loop
scas
loop
stos
loop
lods
loop
mov
or
scas
loop
scas
loop
stos
loop
(bad)
loop
stos
loop
(bad)
loop
lods
loop
(bad)
loop
(bad)
loop
(bad)
loop
stos
loop
lods
loop
scas
loop
lods
loop
mov
sub
sub
lods
loop
stos
loop
lods
loop
(bad)
loop
scas
loop
lods
loop
lods
loop
(bad)
loop
mov
or
loop
lods
loop
stos
loop
(bad)
loop
stos
loop
lods
loop
stos
loop
stos
loop
scas
loop
mov
or
(bad)
loop
scas
loop
lods
loop
lods
loop
mov
or
loop
stos
loop
lods
loop
lods
loop
stos
loop
stos
loop
lods
loop
stos
loop
scas
add
sub
lods
loop
lods
loop
mov
or
lods
loop
mov
or
(bad)
loop
stos
loop
lods
loop
scas
loop
lods
loop
lods
loop
mov
sub
mov
sub
scas
loop
mov
sub
mov
sub
loop
stos
loop
stos
loop
lods
loop
stos
loop
scas
loop
lods
loop
(bad)
loop
lods
loop
scas
add
or
scas
loop
mov
sub
stos
loop
scas
loop
mov
or
stos
loop
lods
loop
(bad)
loop
stos
loop
stos
loop
stos
loop
(bad)
loop
stos
loop
lods
loop
lods
loop
lods
loop
scas
loop
mov
sub
loop
stos
loop
lods
loop
mov
or
loop
mov
or
mov
sub
or
scas
loop
stos
loop
scas
loop
stos
loop
mov
sub
stos
loop
scas
loop
lods
loop
lods
loop
scas
loop
mov
sub
scas
loop
scas
loop
stos
loop
mov
sub
scas
loop
stos
loop
scas
loop
stos
loop
mov
sub
stos
loop
lods
loop
mov
sub
stos
loop
scas
add
or
loop
mov
sub
loop
lods
loop
stos
loop
stos
loop
mov
sub
mov
or
stos
loop
mov
sub
lods
loop
scas
loop
scas
loop
stos
loop
mov
or
mov
sub
lods
loop
mov
or
stos
loop
lods
loop
stos
loop
scas
add
or
stos
loop
lods
loop
scas
loop
mov
or
stos
loop
(bad)
loop
stos
loop
(bad)
loop
lods
loop
lods
loop
(bad)
loop
stos
loop
(bad)
loop
stos
loop
(bad)
loop
lods
loop
lods
loop
scas
loop
stos
loop
stos
loop
mov
or
mov
sub
lods
loop
mov
or
lods
loop
mov
or
lods
loop
stos
loop
scas
add
or
mov
sub
stos
loop
scas
loop
lods
loop
scas
loop
(bad)
loop
scas
loop
stos
loop
stos
loop
stos
loop
lods
loop
lods
loop
scas
loop
stos
loop
scas
loop
stos
loop
scas
loop
scas
loop
lods
loop
stos
loop
lods
loop
scas
loop
lods
loop
mov
or
lods
loop
lods
loop
scas
loop
mov
sub
(bad)
loop
lods
loop
scas
loop
scas
add
sub
stos
loop
stos
loop
stos
loop
lods
loop
mov
sub
lods
loop
mov
sub
mov
or
lods
loop
stos
loop
scas
loop
scas
loop
scas
loop
(bad)
loop
scas
loop
stos
loop
lods
loop
stos
loop
(bad)
loop
scas
loop
mov
or
lods
loop
mov
sub
loop
scas
add
cmp
push
ins
dec
push
cmp
xor
jo
push
jae
push
jp
push
jb
ss
push
fs
add
cmp
inc
inc
dec
inc
push
push
cmp
add
sub
scas
loop
scas
loop
lods
loop
mov
sub
scas
loop
lods
loop
(bad)
loop
mov
sub
stos
loop
(bad)
loop
scas
loop
lods
loop
stos
loop
mov
or
loop
lods
loop
stos
loop
stos
loop
lods
loop
lods
loop
(bad)
loop
scas
loop
scas
loop
scas
loop
scas
loop
lods
loop
lods
loop
(bad)
loop
lods
loop
stos
loop
(bad)
loop
scas
add
sub
stos
loop
(bad)
loop
(bad)
loop
scas
loop
(bad)
loop
scas
loop
stos
loop
stos
loop
lods
loop
lods
loop
scas
loop
stos
loop
lods
loop
mov
or
scas
loop
lods
loop
stos
loop
(bad)
loop
scas
loop
mov
sub
lods
loop
scas
loop
lods
loop
mov
sub
lods
loop
(bad)
loop
scas
loop
stos
loop
scas
loop
mov
sub
sub
lods
loop
mov
sub
(bad)
loop
lods
loop
scas
loop
(bad)
loop
(bad)
loop
lods
loop
scas
loop
mov
sub
(bad)
loop
stos
loop
(bad)
loop
(bad)
loop
(bad)
loop
lods
loop
stos
loop
stos
loop
(bad)
loop
lods
loop
lods
loop
stos
loop
(bad)
loop
(bad)
loop
(bad)
loop
mov
sub
loop
(bad)
loop
scas
add
or
loop
scas
loop
mov
sub
lods
loop
lods
loop
scas
loop
mov
sub
lods
loop
mov
or
stos
loop
lods
loop
stos
loop
scas
loop
scas
loop
lods
loop
mov
sub
loop
scas
loop
scas
loop
scas
loop
stos
loop
lods
loop
mov
sub
stos
loop
lods
loop
stos
loop
stos
loop
scas
add
sub
mov
sub
stos
loop
mov
sub
loop
scas
loop
scas
loop
lods
loop
lods
loop
scas
loop
scas
loop
mov
sub
scas
loop
stos
loop
lods
loop
mov
or
lods
loop
(bad)
loop
(bad)
loop
scas
loop
stos
loop
lods
loop
mov
sub
stos
loop
scas
loop
mov
sub
sub
loop
lods
loop
mov
sub
scas
loop
mov
sub
lods
loop
lods
loop
lods
loop
lods
loop
mov
or
mov
or
loop
stos
loop
stos
loop
scas
loop
mov
sub
lods
loop
stos
loop
scas
loop
mov
or
stos
loop
(bad)
loop
scas
add
aaa
inc
dec
xor
push
xor
dec
popa
fs
outs
add
addr16
xor
push
push
dec
ins
push
jb
dec
push
arpl
loop
stos
loop
stos
loop
stos
loop
stos
loop
stos
loop
mov
sub
lods
loop
stos
loop
stos
loop
(bad)
loop
stos
loop
stos
loop
lods
loop
scas
loop
scas
loop
scas
loop
(bad)
loop
stos
loop
mov
sub
loop
lods
loop
(bad)
loop
lods
loop
lods
loop
(bad)
loop
stos
loop
(bad)
loop
stos
loop
stos
loop
scas
loop
stos
loop
stos
loop
scas
loop
stos
loop
stos
loop
scas
add
sub
mov
or
stos
loop
scas
loop
stos
loop
lods
loop
(bad)
loop
mov
or
stos
loop
stos
loop
scas
loop
stos
loop
scas
loop
mov
or
(bad)
loop
mov
sub
lods
loop
stos
loop
stos
loop
lods
loop
mov
sub
mov
sub
lods
loop
(bad)
loop
(bad)
loop
scas
add
sub
lods
loop
lods
loop
scas
loop
lods
loop
lods
loop
scas
loop
stos
loop
stos
loop
lods
loop
stos
loop
lods
loop
lods
loop
scas
loop
stos
loop
stos
loop
lods
loop
stos
loop
mov
or
stos
loop
mov
sub
loop
lods
loop
stos
loop
lods
loop
lods
loop
lods
loop
scas
loop
mov
or
lods
loop
lods
loop
scas
add
sub
stos
loop
stos
loop
mov
sub
loop
mov
or
stos
loop
mov
sub
scas
loop
(bad)
loop
mov
or
stos
loop
lods
loop
lods
loop
stos
loop
stos
loop
scas
loop
stos
loop
scas
loop
stos
loop
scas
loop
scas
loop
lods
loop
stos
loop
(bad)
loop
mov
or
scas
add
sub
lods
loop
lods
loop
scas
loop
lods
loop
lods
loop
stos
loop
mov
sub
loop
stos
loop
lods
loop
stos
loop
stos
loop
stos
loop
scas
loop
stos
loop
stos
loop
lods
loop
stos
loop
stos
loop
stos
loop
lods
loop
(bad)
loop
stos
loop
(bad)
loop
(bad)
loop
stos
loop
(bad)
loop
stos
loop
stos
loop
stos
loop
lods
loop
stos
loop
stos
loop
scas
loop
mov
sub
sub
stos
loop
stos
loop
scas
loop
mov
sub
mov
sub
lods
loop
mov
sub
scas
loop
mov
or
(bad)
loop
stos
loop
lods
loop
(bad)
loop
scas
loop
lods
loop
(bad)
loop
(bad)
loop
lods
loop
mov
or
stos
loop
stos
loop
(bad)
loop
(bad)
loop
stos
loop
(bad)
loop
stos
loop
scas
add
sub
mov
or
lods
loop
scas
loop
lods
loop
lods
loop
scas
loop
scas
loop
stos
loop
stos
loop
scas
loop
scas
loop
scas
loop
scas
loop
mov
sub
scas
loop
(bad)
loop
lods
loop
scas
loop
scas
loop
mov
sub
stos
loop
(bad)
loop
scas
loop
stos
loop
stos
loop
lods
loop
mov
sub
add
or
scas
loop
scas
loop
stos
loop
stos
loop
scas
loop
stos
loop
(bad)
loop
(bad)
loop
lods
loop
(bad)
loop
lods
loop
lods
loop
lods
loop
scas
loop
scas
loop
stos
loop
(bad)
loop
scas
loop
lods
loop
stos
loop
stos
loop
scas
loop
stos
loop
(bad)
loop
scas
loop
scas
loop
stos
loop
scas
loop
scas
loop
mov
sub
lods
loop
stos
loop
stos
loop
(bad)
loop
stos
loop
scas
add
or
loop
stos
loop
lods
loop
lods
loop
lods
loop
scas
loop
scas
loop
lods
loop
scas
loop
(bad)
loop
lods
loop
scas
loop
scas
loop
lods
loop
lods
loop
stos
loop
scas
loop
lods
loop
mov
sub
loop
lods
loop
mov
or
scas
loop
stos
loop
mov
sub
scas
loop
lods
loop
mov
or
scas
add
sub
scas
loop
(bad)
loop
mov
sub
loop
lods
loop
(bad)
loop
mov
or
stos
loop
scas
loop
lods
loop
scas
loop
lods
loop
lods
loop
scas
loop
(bad)
loop
scas
loop
stos
loop
scas
loop
(bad)
loop
stos
loop
stos
loop
lods
loop
lods
loop
stos
loop
lods
loop
stos
loop
lods
loop
(bad)
loop
mov
or
stos
loop
scas
add
sub
lods
loop
lods
loop
mov
sub
lods
loop
scas
loop
lods
loop
mov
sub
stos
loop
mov
sub
lods
loop
lods
loop
scas
loop
lods
loop
mov
sub
(bad)
loop
scas
loop
scas
loop
scas
loop
(bad)
loop
stos
loop
stos
loop
stos
loop
(bad)
loop
lods
loop
lods
loop
lods
loop
mov
sub
sub
lods
loop
(bad)
loop
mov
sub
stos
loop
mov
sub
loop
stos
loop
lods
loop
lods
loop
stos
loop
lods
loop
lods
loop
mov
or
mov
sub
stos
loop
mov
sub
loop
lods
loop
lods
loop
stos
loop
scas
loop
lods
loop
mov
sub
sub
scas
loop
stos
loop
lods
loop
stos
loop
mov
sub
stos
loop
scas
loop
scas
loop
scas
loop
lods
loop
lods
loop
stos
loop
(bad)
loop
(bad)
loop
scas
loop
scas
loop
scas
loop
scas
loop
lods
loop
stos
loop
stos
loop
mov
sub
stos
loop
(bad)
loop
scas
loop
lods
loop
lods
loop
lods
loop
lods
loop
scas
loop
scas
add
pop
push
inc
inc
outs
inc
imul
dec
xor
push
dec
pop
push
ins
inc
pop
gs
fs
dec
ins
inc
cmp
ins
add
dec
push
ins
xor
push
push
je
outs
aaa
xor
pop
dec
add
imul
pop
jns
outs
push
dec
dec
push
jns
dec
push
dec
addr16
fs
inc
inc
ss
push
pop
push
dec
ins
outs
push
mov
sub
lods
loop
lods
loop
mov
or
(bad)
loop
lods
loop
lods
loop
(bad)
loop
scas
loop
lods
loop
lods
loop
stos
loop
scas
loop
stos
loop
scas
loop
lods
loop
lods
loop
mov
sub
(bad)
loop
lods
loop
scas
loop
stos
loop
lods
loop
mov
sub
loop
(bad)
loop
scas
loop
mov
sub
scas
add
sub
mov
or
scas
loop
(bad)
loop
(bad)
loop
stos
loop
mov
sub
scas
loop
(bad)
loop
(bad)
loop
stos
loop
scas
loop
lods
loop
(bad)
loop
stos
loop
(bad)
loop
stos
loop
stos
loop
(bad)
loop
stos
loop
stos
loop
(bad)
loop
lods
loop
stos
loop
scas
loop
scas
loop
stos
loop
lods
loop
mov
sub
(bad)
loop
(bad)
loop
(bad)
loop
scas
add
or
mov
or
lods
loop
mov
sub
(bad)
loop
lods
loop
(bad)
loop
(bad)
loop
mov
sub
(bad)
loop
scas
loop
mov
or
lods
loop
stos
loop
stos
loop
lods
loop
lods
loop
(bad)
loop
stos
loop
lods
loop
scas
loop
mov
or
mov
or
loop
scas
loop
mov
sub
sub
lods
loop
stos
loop
stos
loop
stos
loop
mov
sub
loop
lods
loop
stos
loop
stos
loop
(bad)
loop
(bad)
loop
scas
loop
lods
loop
scas
loop
stos
loop
stos
loop
mov
sub
loop
mov
or
mov
or
stos
loop
stos
loop
scas
loop
scas
loop
stos
loop
lods
loop
mov
or
sub
lods
loop
lods
loop
mov
sub
loop
mov
or
stos
loop
stos
loop
(bad)
loop
lods
loop
scas
loop
stos
loop
stos
loop
scas
loop
lods
loop
(bad)
loop
mov
sub
mov
sub
lods
loop
lods
loop
(bad)
loop
stos
loop
stos
loop
stos
loop
scas
loop
lods
loop
lods
loop
stos
loop
scas
add
or
stos
loop
lods
loop
stos
loop
(bad)
loop
scas
loop
lods
loop
lods
loop
stos
loop
stos
loop
mov
or
stos
loop
lods
loop
stos
loop
(bad)
loop
stos
loop
scas
loop
scas
loop
scas
loop
lods
loop
stos
loop
scas
loop
stos
loop
stos
loop
lods
loop
lods
loop
stos
loop
scas
loop
lods
loop
lods
loop
lods
loop
scas
loop
mov
sub
loop
scas
add
sub
lods
loop
stos
loop
scas
loop
mov
or
loop
stos
loop
lods
loop
scas
loop
stos
loop
lods
loop
lods
loop
stos
loop
scas
loop
scas
loop
(bad)
loop
lods
loop
stos
loop
scas
loop
mov
sub
mov
sub
lods
loop
scas
loop
(bad)
loop
stos
loop
mov
or
mov
sub
loop
scas
add
or
lods
loop
lods
loop
lods
loop
stos
loop
mov
or
stos
loop
(bad)
loop
stos
loop
mov
sub
loop
stos
loop
stos
loop
lods
loop
scas
loop
(bad)
loop
stos
loop
(bad)
loop
lods
loop
scas
loop
lods
loop
stos
loop
(bad)
loop
(bad)
loop
scas
loop
lods
loop
scas
loop
mov
sub
stos
loop
lods
loop
scas
loop
lods
loop
scas
add
jae
inc
inc
jb
pop
dec
dec
xor
ins
jae
add
ins
xor
xor
cmp
pop
inc
je
ins
arpl
add
sub
loop
(bad)
loop
lods
loop
mov
sub
mov
sub
mov
sub
lods
loop
lods
loop
(bad)
loop
stos
loop
(bad)
loop
lods
loop
(bad)
loop
(bad)
loop
stos
loop
scas
loop
lods
loop
stos
loop
scas
loop
scas
loop
scas
loop
lods
loop
lods
loop
mov
or
lods
loop
(bad)
loop
mov
sub
sub
push
arpl
imul
jb
je
arpl
inc
je
jb
bound
add
jae
gs
cs
arpl
imul
ins
bound
popa
ins
gs
and
sub
(bad)
loop
stos
loop
mov
sub
lods
loop
stos
loop
stos
loop
(bad)
loop
(bad)
loop
mov
sub
stos
loop
mov
sub
lods
loop
stos
loop
stos
loop
stos
loop
stos
loop
scas
loop
lods
loop
stos
loop
mov
sub
lods
loop
stos
loop
lods
loop
stos
loop
(bad)
loop
lods
loop
scas
loop
scas
add
sub
scas
loop
stos
loop
lods
loop
lods
loop
scas
loop
mov
sub
(bad)
loop
lods
loop
mov
or
mov
or
stos
loop
mov
sub
lods
loop
(bad)
loop
lods
loop
stos
loop
mov
or
scas
loop
lods
loop
scas
loop
stos
loop
mov
or
(bad)
loop
(bad)
loop
scas
add
jae
ins
bound
loop
(bad)
loop
lods
loop
stos
loop
stos
loop
(bad)
loop
scas
loop
lods
loop
stos
loop
stos
loop
mov
sub
lods
loop
stos
loop
(bad)
loop
stos
loop
lods
loop
mov
sub
stos
loop
scas
loop
mov
sub
(bad)
loop
stos
loop
stos
loop
(bad)
loop
stos
loop
scas
loop
mov
sub
loop
stos
loop
stos
loop
mov
sub
inc
push
inc
dec
js
inc
xor
push
jbe
dec
pop
add
fs
data16
jo
ss
dec
push
dec
push
dec
push
push
outs
push
pop
je
add
outs
jno
dec
inc
jbe
je
inc
bound
dec
dec
push
add
addr16
arpl
xor
outs
cmp
jne
dec
inc
add
je
popa
ins
add
outs
fs
cmp
xor
pop
aaa
push
js
add
je
jne
ins
imul
dec
xor
inc
xor
dec
dec
xor
inc
je
push
imul
fs
loope
test
loope
mov
loop
lods
loop
lods
loop
stos
loop
scas
loop
scas
loop
stos
loop
scas
loop
scas
loop
stos
loop
lods
loop
stos
loop
scas
loop
stos
loop
scas
loop
lods
loop
lods
loop
lods
loop
mov
sub
stos
loop
stos
loop
(bad)
loop
lods
loop
scas
loop
mov
sub
lods
loop
stos
loop
mov
sub
mov
sub
(bad)
loop
scas
add
or
loop
scas
loop
lods
loop
lods
loop
stos
loop
mov
sub
loop
stos
loop
stos
loop
mov
sub
lods
loop
stos
loop
scas
loop
stos
loop
scas
loop
stos
loop
mov
sub
(bad)
loop
stos
loop
lods
loop
stos
loop
stos
loop
lods
loop
stos
loop
mov
sub
lods
loop
scas
loop
lods
loop
lods
loop
scas
add
sub
stos
loop
stos
loop
lods
loop
(bad)
loop
stos
loop
lods
loop
lods
loop
stos
loop
stos
loop
lods
loop
mov
or
loop
stos
loop
scas
loop
mov
or
mov
sub
scas
loop
scas
loop
lods
loop
scas
loop
mov
or
loop
scas
loop
mov
or
lods
loop
scas
loop
(bad)
loop
stos
loop
scas
add
outs
je
outs
ins
add
jb
jb
inc
xor
jbe
jo
inc
outs
inc
ins
dec
inc
add
jo
outs
add
xor
pop
push
inc
aaa
xor
dec
push
ss
inc
ins
add
dec
jne
ss
dec
jae
dec
push
ja
dec
js
xor
add
inc
xor
inc
js
imul
ja
inc
pop
ins
bound
push
jo
imul
push
je
push
inc
aaa
inc
fs
inc
outs
ins
inc
add
jae
outs
fs
popa
jns
jne
add
aaa
push
push
dec
jns
bound
push
jno
push
add
cmp
loop
scas
loop
lods
loop
lods
loop
lods
loop
scas
loop
lods
loop
lods
loop
stos
loop
lods
loop
scas
loop
lods
loop
mov
sub
loop
(bad)
loop
lods
loop
stos
loop
lods
loop
scas
loop
stos
loop
stos
loop
scas
loop
scas
loop
mov
sub
mov
sub
lods
loop
mov
or
loop
(bad)
loop
(bad)
loop
mov
sub
add
or
scas
loop
mov
sub
scas
loop
scas
loop
stos
loop
stos
loop
stos
loop
stos
loop
mov
sub
stos
loop
stos
loop
mov
or
loop
stos
loop
lods
loop
scas
loop
lods
loop
lods
loop
mov
sub
lods
loop
lods
loop
lods
loop
lods
loop
stos
loop
(bad)
loop
stos
loop
stos
loop
stos
loop
lods
loop
scas
add
jo
outs
ins
popa
imul
ins
jbe
inc
jbe
outs
je
popa
outs
fs
gs
outs
inc
push
xor
inc
cmp
push
dec
addr16
ins
inc
ja
add
je
inc
ins
imul
add
je
push
jno
xor
imul
jne
pop
pop
add
inc
dec
jbe
inc
push
ins
xor
je
outs
dec
inc
js
add
ins
jns
push
push
jns
popa
xor
dec
outs
dec
xor
fs
inc
jae
gs
bound
gs
ins
jbe
add
imul
inc
inc
arpl
arpl
push
xor
imul
loope
movs
loope
mov
pop
dec
gs
outs
fs
outs
outs
add
jae
gs
cs
jne
je
ins
gs
outs
je
jb
jo
gs
imul
mov
dec
inc
outs
ins
jo
jb
bound
xor
loop
stos
loop
lods
loop
mov
sub
(bad)
loop
scas
loop
mov
sub
stos
loop
scas
loop
(bad)
loop
lods
loop
scas
loop
stos
loop
stos
loop
lods
loop
stos
loop
scas
loop
(bad)
loop
scas
loop
lods
loop
stos
loop
scas
loop
stos
loop
mov
sub
loop
stos
loop
stos
loop
stos
loop
stos
loop
(bad)
loop
lods
loop
mov
or
scas
add
sub
lods
loop
stos
loop
lods
loop
stos
loop
stos
loop
lods
loop
mov
sub
mov
sub
lods
loop
scas
loop
scas
loop
mov
sub
mov
sub
loop
(bad)
loop
lods
loop
scas
loop
(bad)
loop
stos
loop
mov
sub
scas
loop
lods
loop
stos
loop
stos
loop
lods
loop
scas
add
or
stos
loop
stos
loop
lods
loop
(bad)
loop
lods
loop
(bad)
loop
stos
loop
(bad)
loop
scas
loop
(bad)
loop
stos
loop
scas
loop
stos
loop
scas
loop
(bad)
loop
(bad)
loop
stos
loop
mov
sub
scas
loop
lods
loop
scas
loop
stos
loop
mov
sub
stos
loop
scas
loop
(bad)
loop
stos
loop
mov
sub
(bad)
loop
mov
sub
sub
scas
loop
lods
loop
lods
loop
stos
loop
mov
sub
stos
loop
lods
loop
mov
or
(bad)
loop
stos
loop
scas
loop
stos
loop
scas
loop
(bad)
loop
stos
loop
(bad)
loop
scas
loop
stos
loop
lods
loop
lods
loop
(bad)
loop
lods
loop
scas
loop
lods
loop
lods
loop
mov
sub
lods
loop
mov
sub
push
dec
inc
push
popa
dec
inc
pop
aaa
dec
pop
push
dec
jb
add
je
inc
outs
je
jns
outs
imul
arpl
dec
xor
arpl
cmp
add
bound
jb
outs
add
je
push
inc
bound
bound
inc
dec
fs
xor
dec
inc
xor
dec
inc
pop
pop
ins
pop
inc
inc
dec
imul
inc
add
inc
dec
dec
push
inc
jae
dec
push
xor
push
addr16
addr16
popa
inc
inc
dec
pop
inc
inc
dec
xor
push
jne
pop
imul
gs
push
outs
jae
je
outs
outs
add
ins
pop
inc
xor
push
arpl
cmp
push
loope
movs
loope
movs
add
outs
jne
gs
bound
push
jns
je
ins
cs
outs
ins
ins
arpl
outs
jae
loope
mov
loop
stos
loop
stos
loop
scas
loop
lods
loop
(bad)
loop
stos
loop
(bad)
loop
(bad)
loop
scas
loop
mov
or
stos
loop
mov
sub
scas
loop
lods
loop
scas
loop
mov
sub
lods
loop
(bad)
loop
mov
sub
mov
sub
mov
sub
loop
(bad)
loop
scas
add
or
loop
scas
loop
mov
sub
scas
loop
(bad)
loop
mov
sub
loop
(bad)
loop
stos
loop
stos
loop
lods
loop
scas
loop
mov
sub
lods
loop
(bad)
loop
scas
loop
stos
loop
(bad)
loop
scas
loop
stos
loop
stos
loop
lods
loop
stos
loop
mov
sub
stos
loop
mov
sub
lods
loop
scas
add
outs
arpl
jae
outs
fs
gs
sub
loop
(bad)
loop
lods
loop
stos
loop
stos
loop
(bad)
loop
(bad)
loop
(bad)
loop
stos
loop
scas
loop
stos
loop
lods
loop
stos
loop
scas
loop
stos
loop
lods
loop
lods
loop
scas
loop
mov
sub
lods
loop
(bad)
loop
scas
loop
stos
loop
scas
loop
scas
loop
lods
loop
stos
loop
scas
loop
(bad)
loop
stos
loop
stos
loop
(bad)
loop
mov
sub
sub
loop
lods
loop
mov
sub
lods
loop
lods
loop
lods
loop
scas
loop
scas
loop
stos
loop
lods
loop
scas
loop
scas
loop
stos
loop
lods
loop
lods
loop
stos
loop
lods
loop
lods
loop
(bad)
loop
scas
loop
mov
sub
mov
or
(bad)
loop
(bad)
loop
mov
sub
stos
loop
scas
add
sub
scas
loop
stos
loop
mov
sub
scas
loop
mov
or
lods
loop
mov
sub
mov
or
stos
loop
mov
sub
loop
lods
loop
lods
loop
stos
loop
stos
loop
(bad)
loop
lods
loop
scas
loop
stos
loop
stos
loop
(bad)
loop
mov
sub
scas
loop
scas
loop
scas
add
ins
ins
gs
imul
imul
je
ins
cs
arpl
imul
je
addr16
jo
jns
jo
xor
push
inc
push
popa
pop
pop
arpl
inc
push
inc
add
inc
pop
outs
ja
ins
push
dec
bound
push
add
bound
je
inc
inc
jb
dec
outs
push
fs
push
dec
xor
inc
jo
ins
imul
add
je
outs
ins
jo
je
bound
gs
push
outs
fs
outs
addr16
gs
jne
je
push
ss
addr16
jae
push
push
imul
gs
dec
outs
fs
gs
popa
ins
add
inc
dec
jbe
inc
dec
dec
bound
imul
add
je
js
arpl
imul
ins
bound
dec
inc
ins
inc
gs
outs
push
bound
xor
jae
je
dec
popa
ins
add
outs
imul
push
push
jb
xor
pop
cmp
jae
je
dec
gs
pop
push
push
imul
xor
inc
dec
jb
pop
dec
xor
add
and
imul
imul
aaa
dec
push
cmp
loope
movs
loope
lods
add
ins
jo
outs
outs
je
push
jns
je
ins
cs
outs
ins
jo
outs
outs
je
outs
fs
add
outs
arpl
jae
push
imul
lods
loop
(bad)
loop
lods
loop
scas
loop
lods
loop
(bad)
loop
(bad)
loop
mov
sub
scas
loop
lods
loop
lods
loop
(bad)
loop
stos
loop
mov
or
stos
loop
mov
sub
lods
loop
mov
sub
scas
loop
lods
loop
lods
loop
lods
loop
stos
loop
mov
sub
lods
loop
stos
loop
mov
sub
stos
loop
mov
or
loop
(bad)
loop
stos
loop
lods
loop
stos
loop
stos
loop
stos
loop
lods
loop
mov
sub
mov
sub
mov
sub
mov
sub
lods
loop
lods
loop
scas
loop
lods
loop
mov
sub
scas
loop
stos
loop
scas
loop
lods
loop
scas
loop
scas
add
or
mov
sub
loop
lods
loop
lods
loop
scas
loop
lods
loop
stos
loop
lods
loop
mov
sub
(bad)
loop
scas
loop
scas
loop
mov
sub
stos
loop
scas
loop
lods
loop
scas
loop
(bad)
loop
scas
loop
lods
loop
stos
loop
(bad)
loop
mov
or
(bad)
loop
scas
loop
(bad)
loop
lods
loop
lods
loop
scas
add
or
lods
loop
(bad)
loop
stos
loop
stos
loop
lods
loop
mov
sub
(bad)
loop
stos
loop
lods
loop
(bad)
loop
stos
loop
lods
loop
stos
loop
scas
loop
scas
loop
lods
loop
mov
sub
lods
loop
stos
loop
stos
loop
(bad)
loop
stos
loop
mov
sub
stos
loop
scas
loop
(bad)
loop
stos
loop
lods
loop
mov
sub
scas
add
or
stos
loop
scas
loop
stos
loop
stos
loop
scas
loop
stos
loop
mov
sub
mov
or
lods
loop
mov
or
loop
scas
loop
stos
loop
stos
loop
scas
loop
lods
loop
stos
loop
(bad)
loop
(bad)
loop
stos
loop
lods
loop
scas
loop
lods
loop
stos
loop
stos
loop
lods
loop
lods
loop
lods
loop
mov
sub
outs
je
imul
je
outs
ins
add
pop
outs
jne
imul
push
dec
bound
xor
push
push
dec
inc
outs
jbe
xor
inc
imul
pop
ins
bound
dec
inc
popa
dec
xor
push
data16
dec
imul
bound
outs
js
xor
jno
add
je
jne
jb
outs
je
jb
arpl
jae
imul
push
jb
pop
dec
aaa
xor
xor
xor
addr16
dec
popa
imul
add
inc
xor
inc
push
aaa
outs
xor
dec
xor
add
outs
imul
gs
imul
jno
outs
outs
inc
cmp
je
js
jae
je
inc
jne
outs
push
arpl
gs
imul
outs
jae
push
cmp
xor
xor
pop
ja
dec
jb
push
movs
loope
mov
loop
mov
sub
mov
sub
mov
sub
stos
loop
(bad)
loop
lods
loop
lods
loop
mov
sub
scas
loop
lods
loop
stos
loop
mov
sub
scas
loop
stos
loop
(bad)
loop
scas
loop
stos
loop
stos
loop
lods
loop
mov
or
loop
lods
loop
scas
loop
lods
loop
scas
add
inc
dec
push
inc
inc
xor
jbe
xor
inc
add
js
addr16
inc
jo
inc
push
inc
push
arpl
js
dec
add
inc
xor
push
pop
jno
bound
dec
inc
inc
imul
push
inc
ss
jne
gs
push
xor
add
and
jbe
outs
je
jb
jae
inc
imul
dec
inc
outs
ins
jo
jb
bound
dec
inc
imul
ins
add
jb
jo
outs
push
jb
outs
jae
outs
jb
add
sub
(bad)
loop
mov
sub
mov
or
(bad)
loop
mov
sub
stos
loop
stos
loop
stos
loop
lods
loop
lods
loop
(bad)
loop
lods
loop
lods
loop
stos
loop
scas
loop
lods
loop
lods
loop
lods
loop
lods
loop
(bad)
loop
lods
loop
lods
loop
lods
loop
stos
loop
mov
sub
lods
loop
lods
loop
scas
loop
lods
loop
scas
add
sub
loop
lods
loop
(bad)
loop
mov
sub
loop
(bad)
loop
lods
loop
mov
sub
lods
loop
scas
loop
lods
loop
scas
loop
lods
loop
mov
sub
(bad)
loop
lods
loop
stos
loop
lods
loop
(bad)
loop
lods
loop
stos
loop
scas
loop
stos
loop
stos
loop
(bad)
loop
stos
loop
stos
loop
stos
loop
mov
sub
or
lods
loop
scas
loop
stos
loop
mov
sub
stos
loop
lods
loop
stos
loop
stos
loop
lods
loop
lods
loop
scas
loop
stos
loop
lods
loop
mov
sub
(bad)
loop
mov
sub
lods
loop
lods
loop
stos
loop
stos
loop
mov
or
mov
sub
lods
loop
mov
sub
(bad)
loop
(bad)
loop
(bad)
loop
lods
loop
(bad)
loop
stos
loop
scas
loop
mov
sub
stos
loop
(bad)
loop
scas
loop
scas
loop
scas
loop
stos
loop
(bad)
loop
stos
loop
lods
loop
scas
loop
scas
loop
scas
loop
mov
or
scas
loop
mov
sub
stos
loop
scas
loop
(bad)
loop
scas
loop
lods
loop
scas
loop
stos
loop
scas
loop
mov
sub
je
inc
jp
dec
addr16
je
xor
bound
push
je
pop
push
xor
imul
dec
xor
fs
add
ja
outs
push
inc
push
jne
dec
ja
inc
dec
add
push
inc
push
xor
inc
imul
inc
jbe
inc
js
je
dec
push
dec
ins
outs
ja
inc
jae
outs
jno
dec
inc
push
je
dec
add
inc
ss
push
push
inc
jbe
cmp
je
dec
bound
add
cmp
push
outs
push
jne
inc
bound
push
dec
inc
outs
jb
inc
jb
popa
je
inc
arpl
jo
outs
jb
push
pop
xor
push
push
xor
push
outs
xor
pop
add
push
jae
ins
push
inc
push
aaa
jb
push
push
movs
loope
mov
push
push
inc
push
push
inc
je
jb
bound
gs
sub
stos
loop
stos
loop
stos
loop
stos
loop
mov
sub
lods
loop
stos
loop
stos
loop
scas
loop
scas
loop
scas
loop
scas
loop
(bad)
loop
lods
loop
lods
loop
mov
or
stos
loop
lods
loop
mov
sub
mov
or
scas
loop
mov
sub
mov
sub
sub
scas
loop
mov
or
lods
loop
(bad)
loop
lods
loop
stos
loop
mov
sub
lods
loop
stos
loop
lods
loop
mov
sub
lods
loop
scas
loop
stos
loop
lods
loop
lods
loop
lods
loop
scas
loop
stos
loop
mov
or
stos
loop
scas
loop
mov
or
scas
loop
(bad)
loop
mov
sub
outs
popa
ss
cmp
outs
inc
dec
push
outs
aaa
inc
ins
ins
push
add
xor
push
push
push
inc
je
cmp
xor
jbe
add
outs
add
dec
pop
inc
cmp
inc
outs
ins
dec
jne
bound
inc
dec
add
jo
add
jbe
push
outs
dec
inc
imul
dec
push
add
and
inc
outs
outs
jbe
jb
imul
lods
loop
scas
loop
mov
sub
lods
loop
scas
loop
stos
loop
lods
loop
(bad)
loop
lods
loop
(bad)
loop
stos
loop
lods
loop
stos
loop
scas
loop
stos
loop
lods
loop
lods
loop
scas
loop
lods
loop
scas
loop
scas
loop
lods
loop
lods
loop
lods
loop
mov
sub
loop
lods
loop
lods
loop
(bad)
loop
stos
loop
scas
loop
stos
loop
lods
loop
scas
loop
lods
loop
scas
add
jae
ins
jbe
inc
jbe
outs
je
jb
jae
loop
scas
loop
mov
or
loop
lods
loop
(bad)
loop
lods
loop
(bad)
loop
mov
sub
loop
mov
sub
stos
loop
stos
loop
(bad)
loop
scas
loop
stos
loop
lods
loop
(bad)
loop
lods
loop
mov
sub
lods
loop
mov
sub
lods
loop
stos
loop
stos
loop
(bad)
loop
lods
loop
scas
loop
mov
sub
sub
stos
loop
lods
loop
mov
sub
loop
mov
or
loop
stos
loop
mov
or
stos
loop
mov
or
lods
loop
scas
loop
stos
loop
stos
loop
lods
loop
mov
sub
lods
loop
stos
loop
stos
loop
lods
loop
lods
loop
stos
loop
stos
loop
scas
loop
stos
loop
stos
loop
scas
add
sub
mov
sub
lods
loop
mov
or
lods
loop
mov
or
loop
mov
or
stos
loop
scas
loop
mov
or
stos
loop
(bad)
loop
mov
or
stos
loop
lods
loop
(bad)
loop
stos
loop
stos
loop
stos
loop
lods
loop
lods
loop
(bad)
loop
mov
sub
scas
add
or
stos
loop
stos
loop
scas
loop
mov
sub
lods
loop
stos
loop
lods
loop
scas
loop
stos
loop
scas
loop
stos
loop
(bad)
loop
(bad)
loop
lods
loop
stos
loop
lods
loop
(bad)
loop
stos
loop
lods
loop
stos
loop
scas
loop
stos
loop
scas
loop
stos
loop
mov
sub
lods
loop
mov
sub
lods
loop
lods
loop
lods
loop
scas
loop
scas
add
je
dec
popa
ins
add
bound
push
dec
ins
jbe
ss
gs
push
imul
inc
jno
popa
ins
imul
ss
push
dec
dec
xor
push
js
xor
imul
push
pop
push
jbe
push
inc
ss
ja
cmp
dec
add
ss
push
pop
push
inc
outs
ins
dec
pop
push
outs
jbe
jne
inc
add
popa
jb
jae
imul
push
inc
push
cmp
data16
inc
cmp
jns
add
je
dec
gs
imul
cmp
push
xor
js
jae
arpl
dec
cmp
addr16
inc
ins
outs
arpl
imul
inc
xor
dec
push
ss
push
dec
dec
add
and
sub
loop
mov
sub
stos
loop
lods
loop
stos
loop
mov
or
lods
loop
stos
loop
stos
loop
stos
loop
lods
loop
lods
loop
mov
or
loop
scas
loop
stos
loop
lods
loop
stos
loop
scas
loop
stos
loop
mov
sub
loop
mov
sub
loop
mov
sub
jb
jbe
inc
jns
gs
loop
mov
sub
loop
stos
loop
stos
loop
(bad)
loop
stos
loop
(bad)
loop
lods
loop
stos
loop
lods
loop
(bad)
loop
scas
loop
stos
loop
stos
loop
stos
loop
stos
loop
(bad)
loop
(bad)
loop
mov
sub
loop
mov
sub
loop
stos
loop
stos
loop
scas
loop
stos
loop
mov
sub
lods
loop
mov
or
addr16
inc
cmp
push
inc
inc
ins
dec
jno
xor
add
outs
dec
pop
xor
push
xor
je
jbe
push
xor
push
push
push
dec
push
jns
js
xor
inc
gs
jns
gs
imul
push
push
cmp
push
xor
dec
bound
dec
cmp
dec
imul
dec
inc
push
xor
xor
ins
push
outs
xor
ss
and
imul
jb
pusha
xor
push
jns
je
ins
cs
outs
ins
ins
arpl
outs
jae
inc
outs
gs
arpl
dec
inc
jno
popa
je
bound
xor
loop
mov
sub
stos
loop
mov
or
scas
loop
scas
loop
stos
loop
(bad)
loop
lods
loop
(bad)
loop
lods
loop
scas
loop
stos
loop
stos
loop
scas
loop
lods
loop
stos
loop
lods
loop
stos
loop
scas
loop
scas
loop
stos
loop
stos
loop
scas
loop
scas
loop
scas
loop
mov
sub
stos
loop
stos
loop
(bad)
loop
scas
loop
mov
sub
add
imul
push
jae
push
inc
arpl
dec
dec
gs
inc
add
bound
push
push
inc
gs
imul
push
add
dec
push
jno
dec
cmp
inc
inc
je
dec
add
dec
aaa
cmp
push
pop
inc
jns
outs
pop
dec
ins
inc
ja
xor
push
imul
xor
push
dec
xor
inc
gs
inc
xor
jns
inc
cmp
push
bound
jns
dec
pop
push
inc
inc
inc
add
jb
imul
je
add
popa
jb
loop
stos
loop
scas
loop
(bad)
loop
stos
loop
mov
sub
loop
(bad)
loop
scas
loop
scas
loop
scas
loop
scas
loop
mov
sub
stos
loop
mov
or
(bad)
loop
scas
loop
scas
loop
mov
sub
(bad)
loop
mov
sub
scas
loop
lods
loop
mov
sub
(bad)
loop
mov
sub
scas
loop
mov
or
mov
or
mov
or
mov
sub
loop
lods
loop
stos
loop
scas
loop
lods
loop
lods
loop
scas
loop
scas
loop
lods
loop
(bad)
loop
stos
loop
stos
loop
(bad)
loop
lods
loop
stos
loop
(bad)
loop
mov
or
stos
loop
stos
loop
mov
sub
scas
add
or
loop
stos
loop
stos
loop
mov
or
loop
scas
loop
(bad)
loop
scas
loop
(bad)
loop
scas
loop
mov
sub
(bad)
loop
lods
loop
stos
loop
stos
loop
(bad)
loop
lods
loop
scas
loop
scas
loop
mov
or
loop
lods
loop
lods
loop
stos
loop
lods
loop
scas
loop
lods
loop
scas
loop
scas
loop
mov
sub
imul
loop
mov
sub
mov
sub
loop
stos
loop
scas
loop
stos
loop
mov
or
stos
loop
lods
loop
scas
loop
lods
loop
stos
loop
lods
loop
lods
loop
lods
loop
mov
or
lods
loop
lods
loop
lods
loop
(bad)
loop
stos
loop
mov
sub
lods
loop
lods
loop
mov
sub
or
mov
sub
stos
loop
scas
loop
(bad)
loop
scas
loop
lods
loop
stos
loop
lods
loop
mov
sub
mov
sub
(bad)
loop
lods
loop
mov
or
loop
stos
loop
mov
sub
lods
loop
stos
loop
mov
sub
stos
loop
scas
loop
lods
loop
lods
loop
stos
loop
mov
sub
or
lods
loop
stos
loop
stos
loop
(bad)
loop
(bad)
loop
(bad)
loop
mov
or
loop
lods
loop
lods
loop
stos
loop
mov
sub
scas
loop
mov
sub
lods
loop
lods
loop
mov
sub
scas
loop
mov
sub
lods
loop
mov
sub
dec
ins
inc
inc
addr16
ins
xor
dec
jns
dec
xor
push
je
dec
dec
dec
push
dec
inc
imul
push
jb
cmp
js
cmp
push
inc
je
inc
jne
imul
inc
bound
push
imul
imul
inc
dec
dec
inc
push
js
xor
push
push
jne
inc
push
aaa
cmp
arpl
jb
pop
inc
inc
cmp
jb
inc
jae
inc
push
push
ss
add
and
sub
sub
sub
sub
js
gs
imul
jae
ins
bound
dec
inc
outs
jne
gs
bound
xor
inc
outs
outs
je
imul
addr16
dec
je
ins
add
ins
gs
je
gs
ins
add
je
dec
je
ins
add
ins
gs
outs
popa
fs
js
gs
imul
dec
ins
popa
addr16
outs
jb
popa
je
js
gs
imul
inc
jb
jo
outs
push
gs
imul
imul
outs
je
popa
outs
fs
gs
inc
gs
push
data16
cmp
cmp
imul
jae
inc
jb
jo
outs
push
je
gs
ins
add
jbe
inc
imul
je
add
je
xor
dec
inc
ins
outs
outs
gs
bound
loope
lods
loope
movs
add
sub
sub
sub
sub
and
stos
loop
stos
loop
scas
loop
mov
or
scas
loop
mov
sub
lods
loop
mov
or
scas
loop
mov
or
mov
sub
stos
loop
stos
loop
scas
loop
scas
loop
lods
loop
mov
sub
(bad)
loop
mov
sub
scas
loop
(bad)
loop
lods
loop
scas
loop
mov
sub
ins
imul
imul
jo
imul
loop
scas
loop
mov
sub
mov
sub
mov
sub
stos
loop
lods
loop
stos
loop
lods
loop
scas
loop
mov
sub
stos
loop
scas
loop
mov
or
(bad)
loop
scas
loop
(bad)
loop
stos
loop
mov
or
scas
loop
scas
loop
stos
loop
lods
loop
scas
loop
scas
loop
scas
loop
lods
loop
scas
add
or
lods
loop
lods
loop
stos
loop
lods
loop
scas
loop
lods
loop
mov
or
(bad)
loop
lods
loop
mov
or
stos
loop
scas
loop
lods
loop
(bad)
loop
mov
or
lods
loop
lods
loop
lods
loop
lods
loop
(bad)
loop
(bad)
loop
lods
loop
stos
loop
(bad)
loop
lods
loop
(bad)
loop
stos
loop
lods
loop
scas
loop
scas
loop
stos
loop
lods
loop
scas
add
or
lods
loop
stos
loop
lods
loop
lods
loop
lods
loop
scas
loop
scas
loop
scas
loop
lods
loop
mov
sub
stos
loop
lods
loop
(bad)
loop
(bad)
loop
stos
loop
lods
loop
stos
loop
scas
loop
mov
sub
lods
loop
scas
loop
scas
loop
scas
loop
stos
loop
lods
loop
lods
loop
(bad)
loop
lods
loop
(bad)
loop
lods
loop
lods
loop
lods
loop
stos
loop
scas
add
or
stos
loop
stos
loop
mov
sub
lods
loop
(bad)
loop
stos
loop
lods
loop
stos
loop
stos
loop
mov
or
(bad)
loop
stos
loop
lods
loop
mov
or
stos
loop
(bad)
loop
stos
loop
scas
loop
scas
loop
lods
loop
mov
or
mov
sub
stos
loop
mov
sub
lods
loop
scas
add
arpl
jns
outs
outs
add
sub
loop
stos
loop
mov
sub
loop
mov
sub
loop
stos
loop
stos
loop
stos
loop
stos
loop
mov
sub
(bad)
loop
(bad)
loop
mov
or
loop
stos
loop
scas
loop
stos
loop
(bad)
loop
lods
loop
mov
or
lods
loop
scas
loop
scas
loop
stos
loop
stos
loop
(bad)
loop
scas
add
or
loop
lods
loop
stos
loop
scas
loop
stos
loop
(bad)
loop
stos
loop
lods
loop
stos
loop
scas
loop
lods
loop
stos
loop
lods
loop
scas
loop
lods
loop
lods
loop
mov
or
loop
lods
loop
(bad)
loop
mov
sub
stos
loop
mov
sub
(bad)
loop
lods
loop
lods
loop
mov
or
stos
loop
(bad)
loop
scas
add
sub
lods
loop
lods
loop
(bad)
loop
(bad)
loop
stos
loop
stos
loop
lods
loop
mov
sub
mov
or
loop
(bad)
loop
stos
loop
(bad)
loop
stos
loop
(bad)
loop
(bad)
loop
lods
loop
mov
sub
loop
scas
loop
mov
sub
lods
loop
(bad)
loop
mov
or
loop
scas
loop
scas
add
sub
lods
loop
lods
loop
stos
loop
lods
loop
stos
loop
mov
or
stos
loop
scas
loop
lods
loop
lods
loop
stos
loop
scas
loop
mov
sub
mov
or
stos
loop
scas
loop
mov
sub
stos
loop
scas
loop
lods
loop
scas
loop
scas
loop
lods
loop
stos
loop
stos
loop
mov
sub
(bad)
loop
lods
loop
(bad)
loop
(bad)
loop
scas
loop
scas
loop
(bad)
loop
lods
loop
scas
loop
stos
loop
mov
or
stos
loop
scas
loop
mov
sub
lods
loop
scas
loop
stos
loop
(bad)
loop
stos
loop
scas
loop
stos
loop
mov
sub
(bad)
loop
lods
loop
stos
loop
lods
loop
scas
loop
lods
loop
lods
loop
stos
loop
scas
loop
scas
add
sub
stos
loop
scas
loop
(bad)
loop
mov
sub
stos
loop
(bad)
loop
mov
sub
loop
mov
sub
lods
loop
stos
loop
stos
loop
(bad)
loop
mov
sub
lods
loop
stos
loop
scas
loop
mov
sub
mov
sub
scas
loop
lods
loop
lods
loop
scas
add
sub
loop
stos
loop
lods
loop
mov
sub
loop
stos
loop
stos
loop
scas
loop
lods
loop
lods
loop
scas
loop
stos
loop
scas
loop
scas
loop
stos
loop
mov
or
scas
loop
(bad)
loop
mov
sub
loop
mov
sub
stos
loop
stos
loop
(bad)
loop
scas
loop
lods
loop
stos
loop
scas
add
or
stos
loop
stos
loop
stos
loop
mov
or
stos
loop
lods
loop
lods
loop
mov
sub
mov
sub
(bad)
loop
lods
loop
mov
sub
scas
loop
mov
or
lods
loop
stos
loop
lods
loop
mov
or
stos
loop
mov
sub
loop
scas
loop
stos
loop
scas
add
sub
scas
loop
stos
loop
lods
loop
(bad)
loop
scas
loop
scas
loop
stos
loop
scas
loop
stos
loop
scas
loop
lods
loop
mov
sub
loop
scas
loop
(bad)
loop
scas
loop
lods
loop
(bad)
loop
mov
sub
lods
loop
mov
sub
stos
loop
(bad)
loop
mov
or
loop
stos
loop
stos
loop
(bad)
loop
scas
add
jae
popa
outs
popa
addr16
sub
loop
stos
loop
scas
loop
lods
loop
stos
loop
stos
loop
mov
sub
lods
loop
(bad)
loop
lods
loop
mov
sub
stos
loop
lods
loop
scas
loop
stos
loop
mov
sub
loop
stos
loop
scas
loop
mov
sub
lods
loop
lods
loop
mov
or
mov
sub
or
lods
loop
stos
loop
stos
loop
(bad)
loop
lods
loop
scas
loop
lods
loop
mov
sub
(bad)
loop
mov
or
scas
loop
lods
loop
stos
loop
(bad)
loop
mov
sub
loop
lods
loop
mov
sub
stos
loop
stos
loop
stos
loop
(bad)
loop
scas
loop
stos
loop
scas
loop
lods
loop
lods
loop
lods
loop
scas
add
jns
je
push
je
gs
ins
dec
outs
fs
or
loop
(bad)
loop
scas
loop
lods
loop
stos
loop
mov
sub
stos
loop
stos
loop
stos
loop
lods
loop
scas
loop
mov
sub
lods
loop
lods
loop
lods
loop
stos
loop
mov
or
loop
lods
loop
mov
or
lods
loop
lods
loop
scas
loop
mov
sub
stos
loop
scas
loop
scas
add
addr16
outs
je
jne
dec
push
popa
outs
addr16
js
gs
imul
loop
stos
loop
(bad)
loop
scas
loop
(bad)
loop
stos
loop
lods
loop
lods
loop
scas
loop
stos
loop
lods
loop
mov
sub
lods
loop
scas
loop
stos
loop
mov
sub
mov
sub
loop
lods
loop
mov
sub
stos
loop
mov
sub
mov
sub
scas
loop
mov
sub
sub
lods
loop
mov
sub
mov
sub
stos
loop
mov
sub
lods
loop
scas
loop
stos
loop
mov
sub
loop
lods
loop
stos
loop
scas
loop
mov
sub
mov
sub
lods
loop
(bad)
loop
stos
loop
lods
loop
lods
loop
scas
add
sub
stos
loop
mov
sub
lods
loop
lods
loop
scas
loop
lods
loop
(bad)
loop
scas
loop
stos
loop
mov
sub
scas
loop
mov
sub
scas
loop
scas
loop
lods
loop
scas
loop
(bad)
loop
lods
loop
scas
loop
lods
loop
scas
loop
lods
loop
stos
loop
stos
loop
lods
loop
scas
loop
stos
loop
stos
loop
scas
add
sub
mov
sub
scas
loop
stos
loop
lods
loop
stos
loop
scas
loop
stos
loop
scas
loop
lods
loop
lods
loop
stos
loop
stos
loop
scas
loop
lods
loop
stos
loop
stos
loop
mov
sub
(bad)
loop
scas
loop
mov
sub
mov
sub
mov
sub
lods
loop
lods
loop
scas
add
jb
popa
je
js
gs
imul
loop
stos
loop
lods
loop
(bad)
loop
mov
sub
stos
loop
lods
loop
mov
sub
loop
mov
or
stos
loop
lods
loop
(bad)
loop
lods
loop
scas
loop
mov
sub
stos
loop
stos
loop
(bad)
loop
stos
loop
lods
loop
stos
loop
scas
loop
stos
loop
scas
loop
stos
loop
stos
loop
lods
loop
lods
loop
lods
loop
scas
add
or
loop
stos
loop
mov
sub
mov
sub
stos
loop
lods
loop
lods
loop
mov
sub
loop
stos
loop
mov
sub
stos
loop
lods
loop
lods
loop
lods
loop
stos
loop
stos
loop
mov
or
lods
loop
lods
loop
stos
loop
lods
loop
lods
loop
scas
loop
scas
loop
stos
loop
scas
add
sub
lods
loop
lods
loop
scas
loop
lods
loop
lods
loop
stos
loop
scas
loop
mov
or
mov
or
(bad)
loop
stos
loop
lods
loop
(bad)
loop
stos
loop
(bad)
loop
lods
loop
scas
loop
stos
loop
mov
sub
lods
loop
(bad)
loop
stos
loop
lods
loop
lods
loop
scas
loop
mov
or
mov
sub
imul
dec
popa
outs
popa
addr16
sub
loop
mov
or
mov
sub
loop
lods
loop
stos
loop
scas
loop
stos
loop
mov
sub
stos
loop
(bad)
loop
stos
loop
mov
sub
mov
sub
scas
loop
stos
loop
lods
loop
mov
or
(bad)
loop
(bad)
loop
lods
loop
scas
add
sub
scas
loop
lods
loop
lods
loop
mov
sub
loop
stos
loop
mov
sub
stos
loop
(bad)
loop
mov
or
lods
loop
scas
loop
lods
loop
scas
loop
(bad)
loop
(bad)
loop
stos
loop
scas
loop
lods
loop
(bad)
loop
scas
loop
scas
loop
mov
sub
mov
or
scas
add
sub
stos
loop
stos
loop
lods
loop
scas
loop
stos
loop
(bad)
loop
lods
loop
scas
loop
scas
loop
stos
loop
mov
sub
(bad)
loop
stos
loop
lods
loop
stos
loop
scas
loop
lods
loop
mov
sub
stos
loop
mov
sub
loop
(bad)
loop
scas
loop
scas
loop
stos
loop
mov
or
stos
loop
lods
loop
scas
add
or
loop
mov
sub
lods
loop
(bad)
loop
(bad)
loop
lods
loop
mov
or
mov
sub
scas
loop
lods
loop
stos
loop
lods
loop
stos
loop
mov
sub
lods
loop
scas
loop
scas
loop
(bad)
loop
stos
loop
lods
loop
lods
loop
stos
loop
stos
loop
scas
loop
(bad)
loop
scas
loop
stos
loop
scas
add
sub
stos
loop
stos
loop
(bad)
loop
stos
loop
mov
sub
scas
loop
stos
loop
lods
loop
stos
loop
lods
loop
stos
loop
stos
loop
stos
loop
scas
loop
stos
loop
(bad)
loop
stos
loop
(bad)
loop
mov
sub
lods
loop
stos
loop
stos
loop
stos
loop
(bad)
loop
scas
loop
mov
sub
stos
loop
stos
loop
mov
or
add
sub
stos
loop
stos
loop
scas
loop
stos
loop
lods
loop
lods
loop
(bad)
loop
scas
loop
scas
loop
lods
loop
(bad)
loop
mov
sub
lods
loop
stos
loop
mov
or
mov
sub
stos
loop
scas
loop
scas
loop
mov
sub
lods
loop
stos
loop
scas
loop
(bad)
loop
stos
loop
stos
loop
stos
loop
scas
loop
scas
add
sub
scas
loop
mov
or
lods
loop
(bad)
loop
stos
loop
stos
loop
stos
loop
(bad)
loop
(bad)
loop
scas
loop
scas
loop
stos
loop
stos
loop
mov
sub
loop
scas
loop
lods
loop
(bad)
loop
lods
loop
scas
loop
stos
loop
stos
loop
lods
loop
lods
loop
mov
sub
mov
sub
(bad)
loop
stos
loop
stos
loop
mov
or
mov
or
loop
lods
loop
lods
loop
mov
sub
scas
loop
scas
loop
lods
loop
stos
loop
stos
loop
scas
loop
(bad)
loop
scas
loop
scas
loop
stos
loop
(bad)
loop
stos
loop
scas
loop
lods
loop
scas
loop
stos
loop
(bad)
loop
scas
loop
scas
loop
stos
loop
stos
loop
(bad)
loop
lods
loop
lods
loop
scas
add
sub
stos
loop
lods
loop
(bad)
loop
scas
loop
mov
sub
stos
loop
stos
loop
scas
loop
stos
loop
scas
loop
stos
loop
stos
loop
stos
loop
stos
loop
lods
loop
stos
loop
(bad)
loop
scas
loop
stos
loop
lods
loop
(bad)
loop
mov
or
(bad)
loop
mov
sub
stos
loop
stos
loop
mov
sub
add
inc
js
addr16
dec
push
xor
outs
xor
xor
dec
add
jae
push
pop
push
addr16
xor
gs
push
outs
ja
dec
jns
xor
push
pop
push
dec
fs
dec
jno
inc
jns
ins
inc
jno
addr16
push
jns
jb
jne
inc
push
push
imul
push
dec
xor
bound
jo
inc
data16
push
xor
pop
push
jo
xor
inc
add
jne
push
inc
push
imul
xor
xor
add
je
push
gs
add
xor
inc
aaa
xor
bound
pop
jno
inc
add
fs
dec
outs
popa
add
dec
addr16
push
popa
inc
ss
ins
cmp
pop
push
push
add
jae
ins
gs
popa
jns
jne
add
ins
dec
push
inc
push
gs
xor
imul
pop
add
je
push
push
jns
jbe
dec
push
jbe
imul
add
aaa
dec
gs
push
pop
jbe
xor
ja
xor
jb
inc
ins
popa
jae
xor
dec
outs
popa
add
dec
bound
push
push
cmp
dec
push
push
xor
add
je
add
je
gs
jo
popa
je
add
inc
xor
push
jno
pop
inc
xor
xor
cmp
add
jb
popa
je
push
cmp
jbe
push
jne
push
xor
push
jno
imul
imul
jns
inc
jb
popa
je
inc
imul
jns
ja
push
push
bound
push
jo
data16
jo
xor
cmp
inc
dec
pop
push
push
popa
push
push
imul
push
jae
add
ins
add
imul
xor
arpl
push
inc
dec
jae
jae
jo
xor
add
outs
push
jb
je
add
push
pop
xor
ss
outs
push
jae
dec
dec
pop
inc
push
add
xor
push
dec
xor
arpl
outs
jb
push
outs
jae
add
imul
push
ins
fs
jae
ins
inc
dec
dec
add
fs
imul
xor
jp
dec
push
xor
aaa
push
push
add
imul
outs
inc
inc
push
push
ins
push
dec
inc
js
xor
inc
push
cmp
je
outs
inc
jns
inc
data16
push
jae
je
dec
push
add
inc
pop
cmp
push
pop
jno
arpl
cmp
push
inc
popa
ins
ins
imul
ins
bound
push
xor
push
outs
outs
fs
push
arpl
dec
xor
add
push
inc
push
inc
outs
pop
arpl
inc
push
outs
inc
outs
inc
xor
popa
outs
jae
outs
jb
inc
imul
arpl
ja
arpl
outs
dec
xor
push
dec
jno
imul
arpl
outs
outs
push
jae
push
jbe
cmp
inc
add
outs
jbe
jb
add
popa
jae
ss
je
imul
inc
pop
push
outs
inc
dec
dec
outs
cmp
inc
push
inc
outs
jne
jp
xor
push
outs
jb
pop
outs
jbe
ins
je
inc
inc
ja
inc
xor
push
outs
push
je
dec
push
ins
pop
jo
ins
push
jns
jae
je
dec
gs
imul
push
inc
dec
outs
imul
inc
xor
js
cmp
outs
inc
jb
popa
jns
push
pop
arpl
push
outs
ja
inc
xor
aaa
jbe
xor
push
add
sub
and
je
jb
bound
gs
or
(bad)
loop
lods
loop
mov
or
stos
loop
lods
loop
lods
loop
scas
loop
(bad)
loop
(bad)
loop
scas
loop
mov
or
lods
loop
(bad)
loop
(bad)
loop
lods
loop
mov
or
(bad)
loop
lods
loop
stos
loop
lods
loop
mov
or
mov
or
loop
lods
loop
scas
loop
stos
loop
scas
loop
stos
loop
scas
add
sub
loop
mov
sub
scas
loop
stos
loop
stos
loop
(bad)
loop
stos
loop
lods
loop
stos
loop
mov
sub
lods
loop
stos
loop
(bad)
loop
stos
loop
stos
loop
scas
loop
(bad)
loop
stos
loop
(bad)
loop
mov
sub
lods
loop
lods
loop
mov
sub
loop
(bad)
loop
stos
loop
scas
loop
lods
loop
scas
add
or
lods
loop
lods
loop
mov
or
loop
scas
loop
scas
loop
lods
loop
stos
loop
stos
loop
stos
loop
scas
loop
scas
loop
scas
loop
stos
loop
scas
loop
lods
loop
stos
loop
(bad)
loop
(bad)
loop
lods
loop
lods
loop
lods
loop
(bad)
loop
lods
loop
mov
sub
scas
loop
lods
loop
(bad)
loop
lods
loop
scas
loop
stos
loop
stos
loop
scas
loop
scas
add
push
gs
outs
cmp
inc
xor
xor
fs
ins
inc
add
outs
xor
outs
dec
inc
inc
cmp
imul
xor
outs
dec
arpl
push
outs
inc
xor
inc
inc
add
push
push
jno
outs
xor
push
dec
ss
push
popa
pop
add
je
xor
dec
xor
xor
dec
aaa
inc
jno
add
jae
inc
imul
push
push
jns
inc
je
jb
bound
gs
jae
addr16
je
jb
bound
add
je
imul
jb
gs
add
and
jne
outs
push
arpl
gs
outs
fs
sub
lods
loop
lods
loop
scas
loop
mov
or
loop
mov
sub
scas
loop
stos
loop
mov
sub
(bad)
loop
stos
loop
scas
loop
mov
sub
stos
loop
stos
loop
mov
sub
stos
loop
scas
loop
lods
loop
scas
loop
scas
loop
lods
loop
stos
loop
scas
loop
mov
or
scas
add
sub
stos
loop
lods
loop
lods
loop
scas
loop
lods
loop
scas
loop
mov
sub
stos
loop
lods
loop
mov
sub
loop
mov
sub
stos
loop
scas
loop
mov
sub
loop
stos
loop
stos
loop
stos
loop
lods
loop
stos
loop
stos
loop
lods
loop
stos
loop
scas
loop
stos
loop
stos
loop
scas
loop
scas
add
je
inc
jne
outs
push
arpl
gs
outs
fs
arpl
cmp
outs
jb
jbe
arpl
jne
add
imul
push
dec
push
popa
pop
add
inc
xor
dec
ss
ins
js
push
cmp
xor
pushw
outs
xor
data16
ss
popa
jae
push
xor
loope
mov
loop
(bad)
loop
stos
loop
lods
loop
mov
or
(bad)
loop
stos
loop
scas
loop
stos
loop
(bad)
loop
(bad)
loop
mov
or
(bad)
loop
scas
loop
lods
loop
scas
loop
mov
sub
scas
loop
stos
loop
(bad)
loop
lods
loop
scas
loop
mov
sub
stos
loop
scas
loop
(bad)
loop
stos
loop
mov
sub
scas
loop
stos
loop
scas
add
bound
outs
outs
cmp
push
push
data16
add
inc
dec
push
inc
outs
push
push
ins
inc
inc
dec
pop
inc
ja
outs
ins
add
cmp
ins
outs
push
pop
inc
push
ja
push
add
inc
push
jno
outs
xor
jbe
outs
cmp
pop
popa
ss
sub
stos
loop
mov
or
scas
loop
scas
loop
lods
loop
lods
loop
scas
loop
stos
loop
stos
loop
lods
loop
stos
loop
lods
loop
stos
loop
mov
or
scas
loop
scas
loop
stos
loop
stos
loop
lods
loop
scas
loop
mov
sub
loop
lods
loop
mov
or
loop
mov
sub
add
or
loop
(bad)
loop
scas
loop
scas
loop
lods
loop
lods
loop
(bad)
loop
lods
loop
lods
loop
stos
loop
lods
loop
scas
loop
lods
loop
stos
loop
lods
loop
lods
loop
lods
loop
mov
sub
scas
loop
(bad)
loop
mov
or
loop
lods
loop
mov
sub
stos
loop
scas
loop
scas
loop
(bad)
loop
lods
loop
scas
loop
stos
loop
scas
add
dec
inc
ins
aaa
outs
jae
aaa
dec
inc
outs
aaa
cmp
jbe
add
gs
je
inc
outs
arpl
jo
outs
jb
jne
dec
bound
outs
push
jae
inc
ins
dec
ja
push
imul
inc
outs
arpl
dec
dec
dec
xor
pop
xor
push
push
dec
inc
outs
pop
inc
imul
ins
xor
inc
push
dec
jae
dec
outs
dec
ins
dec
dec
pop
cmp
add
addr16
push
outs
inc
dec
ja
ins
inc
jo
data16
ins
aaa
add
dec
inc
je
outs
bound
push
ss
imul
xor
outs
dec
push
inc
dec
popa
push
popa
jb
inc
push
dec
add
and
push
gs
inc
outs
ins
dec
je
push
dec
xor
addr16
imul
pop
inc
outs
inc
xor
js
imul
pop
dec
bound
push
dec
xor
push
push
xor
jo
outs
imul
loop
mov
sub
stos
loop
mov
sub
scas
loop
mov
or
scas
loop
(bad)
loop
(bad)
loop
stos
loop
mov
sub
lods
loop
(bad)
loop
scas
loop
scas
loop
lods
loop
(bad)
loop
lods
loop
stos
loop
stos
loop
mov
sub
lods
loop
scas
loop
lods
loop
stos
loop
lods
loop
(bad)
loop
lods
loop
scas
add
pop
imul
jne
inc
jns
addr16
inc
inc
xor
inc
push
ss
outs
fs
je
xor
dec
pop
ja
inc
inc
xor
js
outs
dec
arpl
xor
dec
inc
dec
popa
outs
add
pop
jae
outs
xor
inc
push
inc
push
xor
loope
mov
loop
mov
or
mov
sub
loop
stos
loop
stos
loop
(bad)
loop
lods
loop
scas
loop
(bad)
loop
stos
loop
(bad)
loop
scas
loop
(bad)
loop
lods
loop
lods
loop
(bad)
loop
mov
or
stos
loop
scas
loop
stos
loop
lods
loop
mov
or
stos
loop
(bad)
loop
stos
loop
(bad)
loop
scas
loop
mov
sub
lods
loop
stos
loop
scas
add
inc
xor
outs
ins
ss
push
push
pop
push
imul
xor
push
push
outs
push
push
xor
push
jae
push
add
push
dec
xor
jae
outs
imul
inc
add
and
push
gs
popa
ins
imul
push
jns
je
ins
cs
jne
je
ins
gs
gs
popa
ins
imul
add
sub
mov
sub
lods
loop
scas
loop
stos
loop
stos
loop
scas
loop
lods
loop
scas
loop
scas
loop
stos
loop
mov
or
loop
mov
sub
(bad)
loop
scas
loop
stos
loop
lods
loop
mov
sub
stos
loop
mov
sub
stos
loop
(bad)
loop
mov
sub
lods
loop
scas
add
sub
lods
loop
scas
loop
mov
sub
scas
loop
lods
loop
lods
loop
stos
loop
mov
sub
loop
mov
or
lods
loop
stos
loop
lods
loop
(bad)
loop
lods
loop
mov
sub
loop
stos
loop
mov
sub
loop
stos
loop
lods
loop
(bad)
loop
lods
loop
(bad)
loop
scas
add
sub
stos
loop
stos
loop
mov
or
lods
loop
stos
loop
scas
loop
stos
loop
mov
sub
stos
loop
(bad)
loop
(bad)
loop
stos
loop
stos
loop
lods
loop
(bad)
loop
mov
or
scas
loop
stos
loop
stos
loop
stos
loop
lods
loop
scas
loop
stos
loop
mov
sub
scas
loop
stos
loop
stos
loop
stos
loop
scas
add
sub
stos
loop
stos
loop
stos
loop
(bad)
loop
lods
loop
mov
or
scas
loop
stos
loop
mov
or
mov
sub
(bad)
loop
stos
loop
(bad)
loop
mov
or
mov
or
loop
lods
loop
scas
loop
(bad)
loop
lods
loop
(bad)
loop
stos
loop
stos
loop
lods
loop
stos
loop
stos
loop
scas
add
sub
(bad)
loop
mov
sub
mov
sub
stos
loop
stos
loop
stos
loop
scas
loop
lods
loop
mov
sub
stos
loop
lods
loop
mov
sub
lods
loop
scas
loop
lods
loop
scas
loop
lods
loop
lods
loop
(bad)
loop
mov
sub
scas
loop
stos
loop
(bad)
loop
stos
loop
scas
add
jo
dec
jo
popa
inc
push
xor
jae
gs
add
xor
outs
outs
imul
inc
jbe
cmp
inc
jae
fs
outs
xor
jbe
inc
inc
dec
jo
add
imul
outs
gs
inc
push
xor
dec
aaa
outs
cmp
push
xor
jbe
jns
fs
push
gs
xor
push
jb
ins
add
gs
dec
cmp
ss
popa
jae
xor
ins
add
outs
ja
jb
jbe
push
xor
outs
push
pop
push
bound
jo
push
imul
inc
push
ins
push
cmp
push
outs
jno
push
inc
dec
xor
dec
jae
jae
add
jbe
fs
arpl
popa
arpl
jns
loope
movs
loope
mov
loop
stos
loop
mov
sub
stos
loop
lods
loop
lods
loop
stos
loop
lods
loop
scas
loop
scas
loop
(bad)
loop
(bad)
loop
mov
sub
loop
lods
loop
mov
sub
stos
loop
lods
loop
stos
loop
lods
loop
mov
sub
loop
(bad)
loop
stos
loop
scas
loop
lods
loop
stos
loop
mov
sub
(bad)
loop
scas
add
or
loop
lods
loop
(bad)
loop
lods
loop
mov
sub
scas
loop
(bad)
loop
mov
sub
(bad)
loop
scas
loop
scas
loop
lods
loop
(bad)
loop
stos
loop
stos
loop
stos
loop
(bad)
loop
stos
loop
lods
loop
scas
loop
lods
loop
mov
or
stos
loop
lods
loop
lods
loop
lods
loop
stos
loop
lods
loop
(bad)
loop
scas
loop
mov
sub
or
lods
loop
(bad)
loop
scas
loop
scas
loop
lods
loop
stos
loop
(bad)
loop
mov
or
lods
loop
(bad)
loop
(bad)
loop
lods
loop
mov
or
stos
loop
lods
loop
lods
loop
stos
loop
mov
sub
mov
sub
loop
lods
loop
lods
loop
scas
loop
lods
loop
stos
loop
mov
sub
lods
loop
scas
add
sub
stos
loop
stos
loop
lods
loop
(bad)
loop
mov
sub
mov
sub
stos
loop
mov
sub
scas
loop
scas
loop
lods
loop
mov
sub
lods
loop
mov
sub
lods
loop
lods
loop
mov
sub
(bad)
loop
scas
loop
stos
loop
scas
loop
scas
add
push
jne
cmp
xor
dec
inc
add
inc
ss
outs
jo
push
jns
cmp
ins
push
push
add
popa
bound
imul
jns
gs
push
jb
xor
pop
outs
push
dec
outs
push
bound
jbe
pop
gs
add
pop
dec
outs
gs
popa
ins
imul
inc
push
outs
inc
cmp
imul
cmp
add
je
popa
outs
imul
jae
jne
arpl
je
gs
ins
add
outs
ins
jne
ss
popa
inc
inc
je
fs
pop
add
je
inc
jne
jb
outs
je
outs
ins
popa
imul
xor
aaa
ins
xor
push
inc
ins
jb
add
and
and
and
add
and
add
and
add
imul
jne
add
jb
pop
mul
sti
dec
sahf
rep
jo
test
jp
push
sbb
mov
mov
pop
jg
aad
cmp
push
sbb
sub
pop
add
or
add
add
pop
or
adc
adc
or
or
push
add
sbb
pop
add
adc
or
add
sbb
pop
add
pop
add
add
and
add
or
sub
or
or
add
or
adc
add
push
or
add
xor
add
sbb
add
add
add
sbb
adc
sbb
adc
add
add
add
adc
add
adc
add
add
or
add
add
adc
pop
or
xor
or
or
or
push
and
add
add
sbb
sbb
pop
push
or
or
or
or
or
push
pop
or
push
add
sbb
adc
add
add
cmp
sbb
add
push
push
or
add
adc
add
or
add
adc
adc
add
add
push
add
add
sub
sbb
and
sbb
sbb
sbb
sbb
add
add
add
add
add
sbb
add
add
add
add
and
add
add
sbb
and
or
add
sbb
and
or
add
sbb
and
or
add
sbb
or
or
add
or
add
add
add
or
and
add
or
adc
sbb
or
add
or
pop
add
or
or
pop
push
or
or
or
or
add
sbb
adc
add
adc
pop
add
or
add
dec
or
pop
or
or
or
or
add
or
push
adc
add
adc
push
adc
push
sbb
adc
add
add
push
adc
and
add
add
or
pop
add
or
and
add
dec
adc
pop
adc
sub
or
or
or
or
or
or
and
adc
dec
or
or
or
or
or
or
or
add
or
or
or
add
add
or
add
add
add
or
add
sbb
or
sbb
or
add
sbb
sbb
or
add
add
or
push
add
add
or
push
adc
push
and
or
adc
add
sbb
add
or
or
add
adc
or
adc
or
add
add
and
add
dec
add
or
add
add
or
add
or
pop
and
add
add
sbb
or
or
or
or
or
or
add
push
add
add
add
add
add
or
sbb
or
sbb
or
add
adc
add
or
pop
or
adc
sbb
add
add
or
add
add
adc
popa
push
add
sbb
and
or
add
add
add
pop
add
add
or
add
gs
add
add
push
add
add
push
push
add
add
or
sbb
or
or
add
add
add
add
add
adc
gs
pop
add
sbb
add
imul
sbb
pop
or
or
or
sbb
or
or
add
push
add
ins
or
or
add
push
add
add
add
add
add
jno
ins
pop
add
add
jne
jns
and
add
ins
push
add
add
ins
add
jns
pop
or
adc
or
or
or
add
adc
adc
or
adc
push
or
or
or
add
or
or
pop
or
or
or
or
add
or
add
add
add
adc
add
push
or
add
dec
add
add
or
or
push
add
sbb
or
sysret
or
or
or
sbb
or
or
add
add
push
add
pop
or
adc
or
or
add
push
push
add
add
pop
or
sbb
or
or
or
add
adc
add
or
or
or
sbb
or
add
push
add
add
or
adc
add
push
add
add
add
add
add
push
adc
adc
add
add
imul
adc
and
push
add
add
push
add
adc
or
or
or
sbb
or
add
or
add
add
pop
or
adc
or
or
add
adc
pop
or
sbb
or
or
or
add
adc
push
or
add
add
add
push
or
add
push
add
sbb
or
add
cdq
or
add
or
add
adc
add
mov
and
add
sbb
adc
adc
and
add
sub
sbb
pop
or
adc
or
or
add
push
add
push
push
sysret
or
adc
or
or
add
adc
push
push
add
add
xor
or
add
adc
add
add
or
or
mov
adc
pop
add
add
push
add
or
push
add
jno
push
adc
push
or
push
adc
pop
or
cmp
add
add
push
add
push
or
or
or
sbb
or
add
push
add
add
add
or
or
or
sbb
or
add
or
add
add
add
push
adc
add
push
push
add
or
or
or
add
add
push
pop
or
or
or
or
or
add
or
add
or
add
or
or
or
push
adc
push
adc
pop
or
push
add
or
or
add
add
push
add
cdq
add
mov
adc
push
adc
add
sbb
or
add
add
or
add
push
push
add
adc
sbb
or
or
push
or
add
adc
adc
or
adc
add
add
add
pop
pop
sbb
add
add
adc
add
push
sbb
add
adc
adc
pop
or
or
or
or
or
or
add
or
adc
add
adc
add
add
or
adc
add
or
sbb
or
add
add
or
adc
sbb
adc
add
or
adc
push
sbb
sbb
sbb
adc
add
dec
adc
or
or
or
or
or
or
or
or
or
add
push
add
add
and
adc
adc
add
push
pop
and
add
add
add
rol
add
add
adc
adc
or
or
xor
or
or
add
lea
add
adc
add
adc
sbb
add
add
add
or
or
mov
imul
or
add
add
imul
add
add
push
or
or
or
or
add
pop
pop
add
add
popa
adc
pop
or
or
or
or
add
or
test
pop
or
and
or
or
or
or
or
lds
adc
adc
add
or
or
or
or
or
or
add
adc
xor
or
sbb
or
add
or
or
add
adc
add
cmp
or
push
sbb
or
or
adc
add
adc
add
jne
jns
pop
add
or
add
xor
add
add
sbb
xor
or
or
adc
or
or
or
adc
and
sbb
and
sbb
or
or
or
or
or
or
or
add
or
or
xor
sbb
or
or
add
xor
or
add
adc
add
or
or
push
or
or
or
add
add
or
add
adc
push
add
add
push
or
or
or
or
add
or
or
add
or
or
adc
or
or
or
or
or
or
or
or
sbb
or
sbb
add
sysret
or
or
or
or
sbb
or
add
adc
or
add
or
sbb
or
and
add
push
add
push
or
add
pop
or
adc
or
or
add
push
sbb
or
add
adc
or
or
add
add
or
pop
or
or
or
or
add
push
add
add
or
add
add
add
or
add
adc
add
push
or
pop
adc
sbb
add
adc
add
adc
push
add
push
push
sbb
push
add
adc
add
push
push
push
add
add
push
push
add
adc
add
adc
add
add
adc
add
adc
add
icebp
add
sbb
and
add
dec
adc
or
add
dec
adc
add
and
and
add
or
add
cmp
add
add
adc
and
mov
add
add
sub
adc
add
add
adc
add
add
sbb
push
push
add
sbb
push
or
and
add
xor
add
sbb
push
or
add
or
add
sbb
or
add
add
add
or
adc
add
push
add
or
add
adc
pop
or
or
sbb
or
add
or
add
or
add
dec
or
add
adc
add
add
adc
ins
add
add
add
adc
add
push
add
or
add
push
add
add
add
add
and
add
adc
add
or
xor
push
or
add
xor
sbb
adc
add
mov
and
add
add
add
adc
or
or
add
gs
add
add
add
adc
add
add
or
or
or
adc
add
push
add
add
or
add
or
sbb
or
add
push
add
add
pop
add
adc
gs
add
sbb
add
or
sbb
and
sbb
add
or
or
adc
sub
add
adc
xor
or
add
push
add
add
push
or
add
dec
push
add
add
push
sysret
or
adc
sbb
or
add
adc
push
or
add
adc
pop
add
adc
popa
push
add
add
jne
and
adc
sub
add
xor
popa
xor
sub
sub
sub
sub
popa
xor
cmp
add
add
add
add
mov
and
add
add
outs
jb
js
dec
popa
imul
jb
gs
ins
add
add
add
and
