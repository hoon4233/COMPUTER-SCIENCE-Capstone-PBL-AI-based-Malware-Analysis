sbb
add
mov
push
stc
pop
xlat
pop
leave
lahf
cmps
mov
push
push
call
cld
bound
cs
cmc
inc
jmp
lods
add
pop
fwait
cmp
jecxz
in
xor
xchg
inc
mov
pop
jb
mov
jnp
jge
jnp
fcomp
aad
in
sbb
in
jmp
mov
adc
mov
jmp
fidiv
frstor
aaa
or
and
test
mov
enter
jmp
ins
lods
adc
mov
ret
or
adc
adc
pop
mov
fistp
jmp
mov
inc
mov
sbb
fdivr
pop
cmovno
xchg
inc
ret
jle
fs
out
les
cmps
pop
fistp
xchg
hlt
leave
ss
stos
pextrw
cmp
enter
inc
xor
les
inc
aaa
cmp
pop
ret
inc
test
(bad)
cmc
mov
push
shl
pop
test
retf
mov
pop
add
lock
or
out
fsub
push
adc
loopne
out
sub
jge
int3
test
movs
aas
cmps
call
push
cmp
leave
clc
mov
arpl
cmps
leave
inc
mov
inc
lea
aas
xchg
in
(bad)
ficom
dec
push
fdivr
fwait
leave
imul
je
push
loopne
cli
push
outs
xor
dec
sub
push
sub
xchg
sub
dec
jg
out
sbb
inc
lods
sub
(bad)
jmp
scas
fmul
scas
pop
xchg
adc
xchg
jge
add
sbb
imul
add
cli
push
ins
xor
imul
shl
icebp
adc
ret
push
xchg
ficom
rcr
push
imul
jecxz
call
mov
jo
mov
pop
push
sub
cmp
sbb
aaa
fs
jge
push
in
dec
add
xchg
or
or
out
add
ja
leave
xchg
jbe
jmp
adc
and
hlt
(bad)
cmp
hlt
inc
sub
push
mov
mov
das
xor
adc
loope
pop
xchg
sbb
fdiv
cmp
mov
ss
movs
fild
repnz
mov
push
fs
rol
dec
jb
movs
pop
rol
push
loope
push
inc
cmp
inc
or
add
cmc
std
gs
and
or
mov
xlat
je
mov
call
jnp
rcl
add
aas
mov
cmp
push
cs
ficom
fisub
lock
ss
es
inc
xchg
test
push
dec
pop
adc
xor
dec
aam
jo
or
and
inc
mov
and
in
in
lock
xchg
push
sbb
xchg
ret
daa
add
jmp
and
mov
mov
mov
mov
add
push
cmp
int
dec
loope
test
(bad)
daa
pop
jbe
push
push
in
mov
(bad)
inc
fs
cdq
pop
mov
xor
or
push
gs
cwde
std
push
sar
xchg
ins
jnp
inc
sbb
jecxz
ja
pop
rcr
sti
mov
sub
and
and
xlat
ror
mov
pop
lahf
mov
push
repz
test
xchg
out
jg
mov
(bad)
clc
ja
jne
mov
sub
pop
scas
fsubr
and
mov
mov
add
jl
pop
pusha
movs
mov
ins
mov
mov
neg
addr16
adc
call
sub
dec
jne
mov
dec
cmp
mov
and
push
gs
(bad)
ret
and
mov
fisub
rcr
cwde
xchg
jb
mov
lods
or
int3
std
push
arpl
mov
xchg
mov
int3
jle
push
lods
adc
in
sbb
cmp
sahf
mov
add
mov
jg
jg
mov
push
ret
rcl
das
cmp
jmp
or
pusha
push
enter
fs
call
jb
or
lds
out
sbb
ins
int
out
ins
and
test
sub
aas
mov
ja
sahf
frstor
mov
mov
add
cmp
in
pop
bound
mov
sbb
cdq
sub
js
mov
cs
jecxz
scas
push
xchg
pop
test
hlt
das
fdiv
and
sub
call
push
lods
push
popa
sbb
sbb
mov
test
sub
setno
xchg
jns
mov
push
xchg
lds
sbb
das
xor
sub
lods
jns
adc
mov
sbb
add
ins
ins
mov
cmp
fldcw
jmp
mov
enter
mov
dec
nop
cmc
repz
push
and
lahf
mov
rol
dec
lahf
leave
loope
loopne
xor
shl
or
inc
lods
lahf
bound
mov
in
inc
cld
jg
dec
and
retf
cli
nop
mov
ins
es
loop
dec
mov
outs
das
ret
push
fst
or
xchg
jmp
call
call
add
pop
adc
xlat
fsubrp
icebp
pop
mov
mov
add
arpl
lahf
and
and
sbb
dec
dec
lahf
mov
adc
mov
inc
xchg
scas
icebp
loope
cdq
push
mov
test
add
pop
ja
adc
mov
loop
dec
sbb
sub
inc
neg
jo
lds
adc
out
ret
pop
aas
nop
mov
xor
mov
jmp
sub
xchg
aas
jge
pop
sub
jmp
rcl
xor
out
loop
jecxz
lea
xor
retf
cli
mov
mov
repz
push
mov
push
icebp
push
mov
iret
fbstp
nop
fcomp
inc
mov
push
adc
inc
mov
mov
icebp
into
cmc
scas
mov
pop
movs
scas
jne
lahf
push
lea
jecxz
or
shl
fild
xchg
pop
cli
fsub
xchg
std
dec
je
pop
mov
or
call
adc
sbb
jne
fdivr
div
xor
aad
maskmovq
test
js
ins
push
cld
inc
push
and
inc
mov
std
jmp
(bad)
test
ss
sahf
cmp
fwait
(bad)
sub
dec
add
xchg
sub
mov
pop
inc
sbb
cmc
pop
dec
dec
addr16
xchg
sbb
sub
pusha
leave
movs
xor
stc
shl
out
xchg
adc
and
mov
aad
dec
mov
or
mov
mov
aam
shr
pop
cmp
cmc
or
repnz
out
test
mov
push
movs
add
jae
jae
jecxz
fcomp
xor
cmps
gs
or
lods
pop
jle
or
(bad)
in
cmp
adc
adc
mov
mov
fbld
retf
push
mov
fisubr
stos
adc
push
jmp
jp
scas
cmp
or
icebp
retf
xlat
pop
ins
fs
adc
cmp
in
mov
(bad)
ror
aaa
pop
sahf
and
pop
jbe
inc
(bad)
(bad)
push
adc
sub
cld
shl
xchg
fld
xor
dec
jecxz
popa
mov
inc
(bad)
hlt
test
lds
xchg
mov
xor
mov
push
pop
scas
jmp
sar
dec
or
fdivr
dec
adc
jo
adc
cmp
inc
push
data16
xchg
sub
mov
int
sbb
pop
bound
adc
dec
cwde
shr
(bad)
jne
jnp
mov
mov
je
mov
shl
adc
mov
mov
mov
fmul
sub
test
jmp
inc
js
je
outs
inc
stos
fsubr
inc
push
and
cmc
sub
es
ror
inc
xchg
pop
xor
(bad)
cli
xchg
mov
shr
ret
jp
int
cmp
stc
fsub
out
xchg
(bad)
idiv
repz
cmc
and
enter
in
popf
pop
push
jo
add
push
xchg
mov
xchg
arpl
pop
sbb
loop
out
sbb
adc
test
push
cmp
mov
call
adc
inc
sub
jecxz
sar
adc
ror
fimul
jae
mov
lods
bound
add
dec
cmps
mov
imul
imul
jnp
cmp
cmc
(bad)
je
sub
adc
mov
shl
pop
ficom
lds
add
dec
xor
aad
loopne
pop
scas
mov
push
or
ret
jno
mov
sbb
adc
aad
in
dec
mov
mov
out
(bad)
in
sub
push
or
hlt
cli
sub
std
and
dec
scas
sbb
mov
bound
inc
or
mov
mov
out
cmp
fs
jne
inc
fidiv
dec
push
(bad)
test
push
cmp
xchg
sub
adc
ss
add
(bad)
cmps
pop
push
test
mov
mov
mov
pop
mov
adc
mov
cmps
fdivr
push
int3
mov
mov
xchg
and
cmps
scas
pop
cs
es
icebp
mov
arpl
cli
int
jne
add
sbb
inc
repz
ret
sub
loop
test
dec
jb
std
lock
cmp
mov
jmp
push
pop
pusha
ins
out
cdq
in
in
mov
fmulp
ret
cmp
out
jle
cld
inc
add
pop
xchg
(bad)
outs
loope
pop
mov
cld
mov
xor
cmp
cmc
ror
or
jmp
jmp
or
ret
in
push
jg
imul
popa
or
inc
out
das
add
pop
fxch
xor
call
pop
and
shl
enter
stos
jnp
pop
jg
sub
jae
xor
xchg
push
mov
sub
jno
dec
mov
or
mov
nop
mov
std
test
ss
and
adc
lock
imul
sbb
inc
cmp
stos
stos
imul
ja
mov
popf
mov
dec
fidiv
ja
jmp
hlt
ror
dec
and
cmp
idiv
cmp
cmp
ret
mov
(bad)
mov
fld
mov
mov
lds
jns
jnp
repz
mov
aam
in
lahf
imul
xor
push
sbb
ficomp
inc
mov
xor
stos
mov
cdq
and
mov
xchg
pop
fnsave
push
inc
je
and
mov
imul
outs
repz
pop
sub
mov
inc
mov
push
das
std
sbb
or
neg
test
outs
bound
cmp
pop
mov
mov
xor
test
and
sub
push
fmul
mov
xlat
lock
sub
aad
ret
aas
adc
hlt
pop
loopne
sbb
mov
pop
xchg
push
sub
adc
loop
xchg
arpl
sti
inc
clc
sub
xor
fstp
mov
out
or
push
shr
fwait
dec
add
sub
into
mov
pop
pusha
xchg
jecxz
gs
jp
enter
aas
and
dec
(bad)
in
push
in
fimul
cdq
mov
pushf
imul
cmp
pop
iret
dec
or
dec
dec
bound
xchg
sub
neg
mov
aam
inc
aad
outs
jae
scas
imul
mov
adc
sbb
add
push
cmps
cmp
mov
imul
sub
dec
dec
sub
pop
into
sbb
adc
dec
mov
js
aas
out
out
push
pop
sbb
loop
jae
jmp
lods
push
jg
out
outs
nop
repz
out
retf
jmp
mov
cmp
in
je
dec
add
jne
daa
ss
jbe
ss
fadd
addr16
cmp
std
sub
imul
out
mov
sbb
data16
in
sub
pop
ret
dec
jle
vcomisd
pop
mov
out
out
loope
push
add
leave
inc
hlt
push
sub
sbb
pop
adc
mov
mov
cs
je
mov
push
sti
sub
fstp
addr16
ret
popa
mov
gs
daa
jnp
xor
arpl
fcom
(bad)
popa
add
mov
xchg
xchg
adc
fcomi
sar
je
add
fs
cmps
fs
sbb
mov
test
aas
cmp
cmp
sbb
mov
inc
jecxz
or
bound
loopne
and
xchg
fimul
or
mov
sbb
lahf
push
je
rcr
or
iret
std
jmp
cmp
pop
test
scas
cmp
ins
jnp
xchg
imul
mov
aam
or
adc
xchg
and
jb
sub
fist
pop
ins
dec
mov
fstp
in
lods
jmp
sbb
clc
lds
fsubr
dec
xor
add
jns
imul
jb
rol
xchg
mov
ins
inc
lahf
hlt
push
push
inc
fcomp
add
rol
sub
bsr
fwait
sub
mov
push
inc
test
sbb
(bad)
retf
push
or
xchg
jmp
push
imul
loope
sbb
movs
stc
ja
add
xchg
or
pop
xchg
daa
jbe
sub
daa
jno
xchg
pop
pop
sar
aas
xlat
jl
inc
mov
push
jno
leave
shr
call
push
outs
ins
push
add
xchg
scas
loop
mov
cmp
loopne
jne
in
call
loopne
or
or
lea
sbb
mov
mov
xor
adc
adc
iret
jl
push
jp
rol
shl
(bad)
loopne
add
sbb
and
cmp
cmp
fs
sbb
dec
stos
xor
test
adc
cmp
std
sbb
push
pushf
mov
adc
adc
add
xor
shr
int3
pop
test
cmps
dec
xor
and
inc
inc
lods
cmps
ins
cld
leave
push
mov
ficom
dec
sahf
adc
inc
jno
sbb
sbb
lds
mov
mov
mov
adc
push
jle
pop
das
(bad)
push
jecxz
imul
pusha
pop
and
inc
inc
push
inc
pop
jo
lea
pop
or
xor
xchg
mov
ins
(bad)
cmp
mov
pop
adc
mov
push
cmp
pop
imul
or
fchs
ret
xor
mov
inc
pop
pushf
call
mov
scas
loopne
xchg
arpl
cmp
out
jae
scas
sbb
into
jbe
outs
mov
frstor
ret
jne
ret
ins
dec
pop
xbegin
repz
and
cld
adc
pop
jnp
imul
cld
sbb
dec
cwde
fmul
fist
xchg
out
push
pop
dec
pop
arpl
pop
call
push
push
test
nop
mov
in
jne
push
mov
iret
fsub
jne
and
or
mov
push
push
into
or
pop
push
outs
cmp
inc
cmp
dec
retf
mov
cmps
push
or
sub
mov
repnz
xor
out
aas
inc
xchg
retf
(bad)
mov
add
and
cs
push
mov
test
push
mov
hlt
js
adc
mov
mov
popa
imul
push
mov
cli
or
movs
sahf
call
and
icebp
test
fbld
ins
adc
sub
add
cmps
dec
sbb
(bad)
aas
fisttp
push
pop
inc
xchg
jp
and
mov
xchg
cmp
mov
cli
xor
imul
xor
jb
mov
add
xor
pop
mov
clc
xor
push
fcmovne
jmp
int3
je
dec
test
(bad)
cmps
cmc
das
and
pusha
xor
or
xchg
out
mov
push
inc
hlt
mov
inc
xor
add
inc
push
fadd
outs
mov
jbe
inc
cld
xchg
pop
mov
sti
jo
sub
cmp
pop
cwde
clc
je
mov
add
js
popf
push
movs
mov
or
push
cdq
jne
loopne
mov
loop
push
iret
mov
jno
xchg
cmps
sub
cmp
jmp
adc
pop
adc
inc
sbb
retf
lds
ins
jo
mov
loopne
xchg
mov
cmp
sub
fldcw
jp
jecxz
les
imul
inc
mov
inc
pop
test
stc
js
fdivr
mov
dec
pop
arpl
fidivr
jbe
fcomp
or
inc
and
dec
out
mov
or
inc
add
or
xchg
rol
cmps
jmp
test
(bad)
xchg
punpckhwd
xchg
jp
(bad)
clc
ss
xchg
add
xchg
dec
push
xchg
std
fwait
xchg
mov
jbe
nop
test
daa
popf
jge
(bad)
(bad)
lea
mov
mov
dec
test
nop
call
adc
jge
mov
sbb
push
sbb
nop
mov
xchg
test
repnz
loope
dec
aad
pop
movs
jl
xchg
sbb
jl
dec
inc
fcompp
dec
adc
call
and
fcomp
ss
inc
fs
das
ret
add
fild
rol
hlt
lods
xor
fwait
int3
imul
pusha
add
stos
call
cmp
repnz
mov
jmp
jns
leave
cmp
or
je
pop
popa
call
dec
stos
pop
cmps
test
mov
sbb
test
sbb
jle
sub
fcmovbe
cld
add
fldenv
(bad)
sub
das
xchg
dec
mov
mul
inc
cmp
push
loope
sahf
call
or
dec
repnz
or
lods
daa
adc
dec
scas
and
out
sar
jo
inc
jmp
stc
jmp
fucomp
stc
jle
aam
mov
mov
aas
add
cli
inc
scas
cmovl
push
xchg
das
pusha
and
clc
or
add
sub
jg
cmp
add
mov
fsub
ror
push
fwait
mov
aam
or
lods
enter
and
enter
jns
call
lods
sbb
cmp
dec
setbe
mov
mov
cmps
jp
or
jg
inc
dec
inc
push
in
call
sub
xor
xor
call
sub
mov
cwde
jg
fidivr
pop
(bad)
sbb
push
ret
stos
pop
ins
rcr
into
or
ins
dec
dec
scas
pop
jb
sub
cmps
iret
mov
cmp
adc
ins
lods
xor
das
add
push
out
cmc
popa
dec
(bad)
aad
inc
das
inc
cmc
sbb
xor
hlt
test
sub
mov
je
frstor
xor
inc
lock
movs
gs
push
bts
adc
scas
scas
aam
jne
sub
and
jecxz
repz
pop
and
test
xor
cmp
adc
retf
xchg
sub
pop
lods
cdq
jmp
push
(bad)
adc
mov
(bad)
adc
call
adc
inc
xor
out
adc
out
cmp
mov
fwait
stos
cmp
shl
lds
out
add
push
xlat
inc
icebp
xchg
cmps
aaa
sbb
jg
sub
or
sub
mov
daa
mov
mov
cli
jmp
out
sub
inc
fisub
pop
cs
sbb
movs
adc
mov
adc
mov
push
jp
popa
call
hlt
or
fmul
xchg
add
fdivr
jge
aaa
pop
daa
sar
pop
inc
jge
xchg
jmp
ins
adc
popa
rol
add
cli
add
ja
in
cmp
or
call
es
add
jg
lods
xchg
dec
adc
in
push
or
dec
movs
(bad)
test
sahf
sbb
mov
loop
fisub
mov
call
add
jp
inc
mov
mov
ficom
in
int3
(bad)
jmp
adc
into
mov
pusha
jae
add
stos
and
(bad)
(bad)
cmps
and
add
sar
f2xm1
(bad)
outs
call
aas
sbb
dec
loopne
loop
ins
sub
xlat
and
int
sub
mov
adc
movs
xchg
jl
cdq
xchg
movs
fdiv
mov
test
nop
daa
adc
cwde
loop
(bad)
cli
mov
lods
lock
cmp
fscale
rcl
sub
adc
addr16
or
or
push
add
xchg
lods
into
test
jmp
shr
adc
sbb
and
call
mov
cmp
dec
fiadd
fsubr
sub
fyl2xp1
cmc
cmp
and
iret
fwait
xor
test
inc
fidivr
imul
inc
rol
or
lods
pop
fcmovu
jae
sbb
push
cwde
push
and
sahf
imul
sub
pop
ja
sub
call
fisubr
je
outs
sbb
pop
dec
movs
xchg
push
or
in
inc
and
enter
pop
dec
clc
push
inc
and
enter
or
outs
cmp
sbb
cli
movs
and
stos
aas
mov
iret
and
jbe
outs
push
and
adc
push
push
int3
into
es
shr
xor
loop
dec
xchg
fwait
jae
(bad)
mov
jmp
call
mov
ins
pop
lods
xchg
test
in
ffree
out
enter
sbb
sub
jp
addr16
xchg
inc
push
icebp
mov
mov
mov
(bad)
cmp
xchg
mov
mov
xchg
mov
je
ficomp
shl
js
add
fbstp
in
xor
fwait
dec
ror
jle
mov
or
cli
sbb
push
out
imul
mov
jp
xchg
sub
jmp
sub
lods
jns
sbb
outs
mov
sbb
push
mov
cmps
mov
mov
pop
les
lock
mov
daa
and
test
loopne
xor
push
inc
imul
fwait
sub
les
cmp
ret
jp
ins
(bad)
jmp
xchg
shl
jecxz
jbe
sbb
dec
and
jge
cmp
shl
xlat
out
add
ja
cmp
test
xor
aad
js
push
lea
dec
fs
mov
cmp
push
or
(bad)
mov
in
bound
push
pop
in
and
sbb
es
jmp
lods
add
loope
jbe
sbb
aam
jle
add
add
mov
and
fdivr
ins
adc
pop
mov
inc
dec
mov
xchg
inc
or
inc
jmp
(bad)
dec
mov
test
jae
pop
push
cmp
push
push
cmps
imul
jo
adc
mov
inc
adc
daa
popa
mov
mov
adc
jg
(bad)
mov
test
push
jle
mov
repz
cmps
sbb
lea
arpl
mov
mov
mov
xor
ret
in
cmps
int3
outs
sub
ja
cli
sub
fld
test
jle
lods
jbe
adc
xlat
cmps
mov
add
cs
mov
fisttp
out
int3
or
frstor
or
add
scas
jmp
call
cmp
nop
mov
jge
out
push
or
mov
mov
mov
ds
imul
sti
xchg
sub
shr
sub
pop
loop
daa
dec
das
pop
lahf
aaa
sub
je
inc
cld
cmp
mov
out
adc
sbb
xor
push
sbb
jnp
dec
popa
and
call
call
(bad)
push
imul
sar
push
aam
lods
xchg
push
ja
iret
inc
cwde
retf
(bad)
test
popf
retf
lds
outs
ffree
into
mov
jns
cmp
cwde
and
mul
add
sbb
add
adc
sub
retf
rol
int3
(bad)
cmp
adc
mov
adc
xchg
fidivr
jmp
inc
repz
iret
adc
fisubr
mov
or
mov
in
sbb
fld
es
push
jg
adc
xlat
mov
push
sub
test
mov
push
addr16
fs
mov
inc
inc
adc
pop
retf
lock
xor
out
stc
push
sub
stc
pop
xchg
push
push
mov
sti
stos
stc
push
loope
call
mov
jnp
ins
aas
lock
sbb
imul
inc
cmp
cli
movs
jb
outs
sbb
std
dec
sub
adc
out
push
das
sbb
jmp
push
pop
popf
sbb
sbb
(bad)
xchg
mov
mov
dec
or
xchg
xor
fadd
dec
lock
adc
cmp
movs
dec
sub
in
mov
cmp
loope
add
lods
push
push
pop
inc
pushf
test
scas
jl
test
and
pushf
les
mov
mov
aas
xchg
test
push
cwde
inc
bound
sub
adc
mov
lds
push
dec
jmp
adc
sbb
mov
mov
(bad)
sub
int
clc
fidiv
add
into
pop
xor
inc
adc
outs
mov
pop
add
xchg
enter
sbb
adc
adc
outs
and
aam
cwde
sub
jg
jae
mov
mov
inc
add
ds
mov
dec
imul
mov
sub
movs
inc
test
cmp
ja
sbb
(bad)
fsubr
je
ret
jecxz
mov
mov
mov
dec
mov
push
div
pop
fdivr
xchg
xchg
pop
sub
dec
adc
adc
mov
nop
pushf
xchg
push
cmp
sbb
xor
and
fild
pop
mov
cmp
into
cli
popf
xor
(bad)
add
sub
aad
and
stos
bound
nop
mov
add
pop
add
inc
out
lea
test
dec
xor
cmp
lods
cld
mov
adc
call
je
sbb
pop
clc
fwait
inc
jb
xor
retf
jge
ror
addr16
and
or
(bad)
js
cwde
lahf
js
sbb
push
pop
arpl
rcr
xchg
ins
cmps
cmp
push
pop
cmp
jne
jp
mov
mov
or
mov
jo
pusha
ret
mov
call
pop
dec
pop
lahf
imul
outs
xchg
(bad)
(bad)
stc
in
push
aad
sbb
bound
(bad)
ins
sub
adc
stc
outs
test
mov
rcr
or
(bad)
xchg
ins
mov
aaa
inc
and
ror
(bad)
out
lods
cmp
repnz
jl
xor
mov
ins
sti
mov
xor
sbb
jno
or
inc
rcl
nop
mov
adc
dec
out
shl
ret
fsub
hlt
mov
or
push
es
sub
cmp
mov
mov
dec
dec
pop
mov
adc
mov
iret
jmp
neg
fs
mov
add
shl
mov
jmp
shr
lahf
je
pop
adc
adc
inc
rcl
and
cli
mov
popf
jmp
ftst
sbb
jmp
add
addr16
ret
xchg
mov
fld
pop
push
sbb
jmp
inc
int
lea
or
xchg
bound
jle
test
xchg
fld
pop
mov
xchg
neg
movs
rcr
pop
dec
aad
xor
inc
jle
pop
xor
dec
(bad)
in
rcl
mov
pusha
mov
xchg
das
rcl
pop
jmp
push
popa
daa
sub
stc
or
outs
dec
inc
call
nop
je
sub
pop
mov
inc
test
fs
and
push
push
add
cs
mov
xor
push
pop
bound
pusha
pop
jnp
pop
ret
mov
pusha
pusha
add
test
mov
xchg
mov
fidivr
(bad)
pop
inc
jecxz
jle
sub
inc
(bad)
repnz
xor
int3
push
push
repnz
shl
sub
cmp
dec
push
mov
clc
loopne
adc
js
test
(bad)
and
pushf
xor
inc
pop
add
inc
int3
fwait
mov
ins
xor
xchg
jbe
mov
stc
jmp
push
sub
mov
push
popf
and
(bad)
mov
imul
inc
and
leave
adc
scas
aaa
or
aad
pop
out
test
arpl
lock
mov
arpl
and
jae
mov
mov
jnp
movs
mov
jb
aas
(bad)
neg
test
iret
ja
push
xor
dec
mov
sbb
cmp
out
movs
cld
(bad)
out
fwait
adc
xchg
movs
push
rcr
jne
ret
bound
or
ret
xchg
repnz
pushf
rol
nop
xchg
ror
sbb
sbb
test
loop
xor
jecxz
hlt
addr16
clc
and
psrad
into
dec
cmp
jno
ficom
mov
adc
popa
ins
cmp
inc
or
inc
pop
int
rcr
mov
(bad)
mov
xor
cs
xor
xlat
adc
imul
shl
pushf
je
mov
sub
inc
retf
or
repnz
mov
add
or
cs
xor
stc
jnp
clc
cmp
add
arpl
sbb
pop
ss
out
xor
xchg
(bad)
pop
pop
aaa
inc
or
dec
mov
xchg
mov
movs
or
test
(bad)
fstp
arpl
mov
cmps
xchg
sub
xchg
or
lds
push
push
out
xchg
xor
dec
xor
popa
retf
sub
mov
lock
repz
js
clc
sbb
jmp
add
lock
sahf
mov
sbb
ins
dec
aaa
push
xor
push
mov
xchg
into
js
push
rcr
ins
mov
push
inc
aam
pushf
sahf
scas
retf
imul
shl
movs
dec
pushf
or
test
mov
and
push
outs
sar
mov
push
adc
cli
cdq
sar
pop
cmps
pop
mov
xor
stos
adc
pop
sub
xor
xor
pop
sub
xor
leave
and
es
mov
dec
dec
adc
push
or
sbb
push
ror
cs
mov
iret
mov
mov
retf
sub
in
fadd
popa
inc
mov
and
mov
imul
rep
pop
in
xchg
cmp
pop
cmp
mov
push
cmps
dec
sub
lock
cmps
sub
adc
mov
lock
xchg
loopne
pop
push
lahf
xchg
xchg
mov
rol
ficom
mov
push
arpl
les
xor
and
push
mov
xchg
cmp
add
scas
push
jg
mov
mov
cwde
add
popa
test
movs
push
ja
loop
retf
cli
loopne
bound
jp
test
adc
out
call
into
push
fmul
sub
mov
popf
pop
mov
rcr
add
call
call
sbb
xchg
iret
mov
cmp
out
rol
adc
iret
mov
and
movs
cmp
dec
xor
sbb
mov
add
xor
icebp
jg
pushf
inc
and
xchg
outs
xchg
fistp
mov
ds
adc
imul
out
cli
push
sar
xchg
scas
fild
push
inc
scas
push
fnclex
mov
loop
popa
data16
(bad)
and
xor
xchg
push
fild
out
ret
mov
inc
jns
jo
scas
push
imul
xchg
mov
std
rol
add
cwde
aad
scas
(bad)
out
push
and
jge
cs
cmp
(bad)
adc
dec
or
das
xchg
scas
out
sbb
aam
cmp
sahf
mov
adc
sbb
push
in
sbb
sbb
or
push
jb
rcr
ds
(bad)
aad
nop
hlt
scas
xchg
push
dec
add
enter
jno
out
leave
iret
xor
cmp
mov
mov
mov
aad
mov
jo
cmp
call
jl
xchg
adc
das
mov
in
push
mov
test
enter
mov
sub
scas
aad
adc
xor
popa
ret
and
push
sbb
cmp
cmp
(bad)
jmp
fadd
(bad)
xor
mov
sub
leave
push
xor
arpl
or
pop
sbb
loopne
fild
jecxz
dec
adc
sbb
push
xchg
out
and
ins
retf
xlat
lea
jecxz
call
fs
add
mov
and
test
data16
test
add
push
lahf
das
and
stc
cli
fbstp
sub
jmp
popf
es
jl
out
inc
mov
cmp
adc
daa
mov
cmp
jle
sub
int
xchg
push
ins
loope
movs
mov
lock
and
ret
ins
lock
inc
in
xor
cmp
dec
out
fwait
and
jnp
cmp
enter
clc
ss
sbb
ss
not
xchg
out
sar
adc
cmps
dec
ins
aaa
lea
inc
sub
test
aaa
mov
xor
mov
pusha
movs
jmp
test
or
push
std
lock
leave
xlat
add
mov
imul
xor
popf
jp
mov
loop
push
retf
inc
(bad)
fnstsw
xchg
je
scas
in
jb
cmp
inc
data16
pop
pop
mov
lods
aam
dec
or
or
shl
push
jno
loope
aas
sub
push
out
sub
sar
sar
stos
scas
mov
imul
rcr
pop
mov
pop
push
loopne
xor
test
movs
dec
iret
sbb
jmp
push
add
std
scas
loopne
jnp
mov
mov
fidivr
jno
int
bound
out
aad
cmp
(bad)
cmps
ins
loopne
push
fcomp
and
imul
sub
test
xchg
xor
pop
xor
loopne
jo
fs
jg
iret
out
push
mov
arpl
imul
hlt
push
adc
add
(bad)
push
ss
(bad)
xchg
cmp
bound
sti
sub
sub
jbe
rcr
mov
lods
cmp
sub
popf
out
mov
xchg
push
repz
shl
arpl
jl
jecxz
cmp
ins
jne
or
fstp
ret
in
std
sub
mov
pop
and
sbb
inc
adc
xchg
aam
div
retf
rol
jge
shl
cmp
scas
jb
lock
out
and
cdq
sub
pop
jmp
aaa
mov
jg
and
fst
or
add
adc
pandn
inc
test
push
fild
lahf
arpl
adc
in
push
ret
pop
pop
cmp
add
jl
into
out
dec
fisub
adc
fsubr
pop
push
jbe
sub
cmp
fimul
popa
dec
sub
or
repnz
adc
push
mov
rcl
cmps
nop
sbb
hlt
mov
ds
and
daa
sub
stc
mov
scas
retf
cld
mul
sbb
cmp
mov
sub
ror
pop
les
ins
pop
pushf
add
pop
xchg
fbstp
mov
or
pop
inc
cmp
inc
cmp
pop
ret
dec
mov
int3
retf
loopne
scas
or
lods
xchg
ja
pushf
repz
pop
pushf
int3
sub
jg
sub
jbe
movs
movs
xchg
shl
sub
fidiv
popa
push
sbb
pop
push
pop
push
loope
mov
(bad)
add
adc
push
mov
ds
xor
mov
daa
jp
mov
mov
pop
mov
pop
mov
mov
xchg
jp
lods
fwait
xor
dec
sub
add
push
je
(bad)
sub
mov
test
mov
scas
pop
cmps
sbb
xchg
push
neg
jbe
mov
fisubr
xchg
adc
inc
loope
jo
push
cmps
sub
cld
cmp
push
mov
call
rcr
mov
out
sub
push
pop
cmp
jp
pop
scas
lock
sub
sar
xor
dec
repnz
push
jnp
lods
mov
scas
mov
push
ins
cs
pop
fcomip
aas
lock
push
adc
adc
mov
fild
jns
retf
push
cdq
fs
lahf
xchg
(bad)
ror
xor
lea
jp
test
push
jbe
xor
or
shr
iret
imul
cmp
fimul
es
in
and
ficomp
mov
mov
test
add
push
mov
pop
mov
jp
sub
fidiv
adc
pop
out
dec
jmp
popa
dec
add
data16
inc
cs
xchg
mov
push
popf
loope
pop
xchg
pop
mov
cmp
call
test
xchg
push
ffreep
push
pop
inc
call
dec
mov
or
fdivr
popf
dec
dec
xlat
repnz
dec
sbb
sub
jno
push
xchg
dec
fmul
cli
cmp
lods
fstp
fsub
(bad)
jmp
push
fld
rcl
push
sbb
pop
in
ret
fidiv
adc
mov
xchg
movs
mul
loopne
inc
les
pop
sbb
movs
ret
mov
lea
push
xor
push
iret
sbb
mov
out
inc
int
push
int
inc
popf
jp
(bad)
fcmovb
xchg
add
sub
in
jne
aad
xchg
pushf
jl
xor
inc
xchg
retf
inc
out
cmp
mov
adc
pusha
popa
cmps
adc
jg
jmp
and
mov
imul
lods
mov
sahf
pop
sub
std
sub
mov
add
bound
sub
xchg
mov
push
test
outs
and
xchg
sbb
or
pop
xor
mov
or
ins
mov
int3
rcr
and
mov
clc
shr
mul
pop
sub
xchg
cmp
test
xor
push
in
push
fidivr
imul
mov
jb
mov
scas
cmp
retf
pop
mov
push
arpl
cwde
inc
(bad)
jae
cmp
or
stc
add
jo
int
in
sub
dec
lods
dec
daa
ins
cmps
jg
jmp
xor
push
pop
fiadd
js
movs
dec
sbb
std
adc
cmp
movs
inc
mov
push
cmps
mov
mov
and
mov
sub
inc
(bad)
mov
sbb
inc
add
cmp
aad
in
jns
inc
sub
jmp
xchg
sbb
in
test
jae
idiv
push
xchg
mov
xor
add
add
cs
fucomi
sub
cdq
mov
lahf
pop
and
push
out
and
jge
in
jl
add
arpl
xchg
mov
mov
adc
pop
push
clc
add
ins
or
cmps
pop
push
inc
jecxz
xor
mov
lock
xchg
into
pop
in
cmp
bound
xchg
test
mov
and
adc
into
and
in
mov
popa
call
stos
inc
in
mov
test
out
jne
sub
in
jnp
sub
xchg
cmc
xor
mov
and
pop
ins
xchg
sbb
mov
or
jae
fs
ins
ja
movs
loop
cmp
sbb
mov
push
cmp
stos
icebp
(bad)
call
cmp
xchg
and
lods
(bad)
fisub
xchg
ins
cmp
xor
cmc
xchg
pop
fcomp
xor
cmp
add
bound
leave
mov
dec
dec
mov
jno
repz
mov
fstp
fistp
(bad)
dec
call
cmp
jp
mov
push
push
mov
jmp
arpl
out
lahf
mov
xor
fbld
jnp
test
(bad)
mov
sub
xchg
xchg
cmp
in
dec
sti
in
inc
mov
das
cs
jae
push
adc
mov
in
movs
ret
pop
out
xlat
mov
push
fild
sub
or
cs
rdtsc
mov
sub
ja
push
xor
aad
mov
jb
ret
dec
mov
aad
and
mov
push
ret
arpl
(bad)
add
rol
ret
hlt
sbb
cs
and
adc
sub
push
fs
aad
sbb
push
push
shl
clc
ja
adc
imul
test
ror
jecxz
test
scas
mov
addr16
icebp
push
popa
inc
ds
cdq
leave
fs
mov
xchg
xor
or
lock
(bad)
push
jl
test
jb
mov
adc
std
mov
fmul
cmp
inc
add
lahf
into
or
cs
cs
arpl
cmp
mov
jle
push
push
fiadd
adc
ret
mov
and
push
cmp
mov
(bad)
test
push
and
(bad)
cmp
xchg
js
icebp
shl
push
xchg
pop
imul
mov
out
mov
cmp
lods
jb
inc
push
popa
push
mov
dec
sub
xlat
cmp
mov
add
inc
mov
fsub
jb
int
mov
rcl
jp
jnp
movs
not
bound
jg
ins
in
sbb
cmp
out
add
mov
fwait
and
lahf
sub
data16
jno
ret
ret
mov
out
jo
push
loop
pop
push
jmp
inc
enter
mul
sbb
icebp
out
loop
loope
mov
mov
cmp
add
scas
adc
dec
cdq
mov
test
and
mov
mov
les
cwde
push
xor
jne
popa
dec
and
pop
pop
out
jne
push
stc
pop
pop
inc
mov
loopne
hlt
les
and
sbb
mov
bound
push
das
jmp
inc
fild
or
jmp
into
adc
iret
sahf
xchg
inc
push
aad
push
pop
retf
or
retf
push
ror
pusha
stos
mov
fst
shl
jno
mul
mov
pop
sahf
sahf
jne
add
test
les
push
fcom
out
test
retf
movs
push
jno
xchg
adc
mov
fst
xor
mov
mov
push
add
jb
jbe
xchg
push
pop
mov
imul
enter
cwde
push
mov
mov
cmp
repnz
shr
test
rcr
test
and
rcr
sbb
call
stos
imul
call
dec
sub
iret
call
pop
push
sti
xchg
mov
rol
cs
out
and
pop
aaa
fisttp
in
inc
pop
mov
xchg
xchg
into
push
fdiv
inc
xor
adc
xlat
les
sahf
cmps
mov
add
inc
aaa
sbb
(bad)
dec
cs
nop
xchg
out
pop
jge
inc
out
xor
xchg
mov
sbb
push
std
pop
mov
dec
retf
jg
lea
mov
gs
adc
xor
repz
lea
call
jle
mov
cwde
in
leave
mov
or
xor
in
les
xchg
push
std
jmp
mov
push
mov
xchg
push
stos
mov
sbb
adc
pushf
iret
ret
push
arpl
cmps
sar
(bad)
cmps
dec
in
mov
(bad)
loopne
jno
xchg
mov
outs
ret
mov
dec
neg
(bad)
mov
mov
inc
or
movs
jo
test
fadd
imul
mov
cmc
cmps
lods
fisttp
jmp
ins
stos
(bad)
(bad)
push
retf
(bad)
jmp
mov
cmp
out
push
xchg
jae
out
out
test
data16
call
xchg
jle
loopne
movs
push
or
lock
jb
jne
sahf
xor
mov
fst
(bad)
cmp
sbb
out
or
jp
outs
test
ins
xchg
in
sub
in
iret
stc
js
mov
push
rol
ds
mov
cli
clc
and
call
mov
cmp
into
or
cmp
or
adc
mov
adc
inc
pop
pop
xchg
out
repnz
jo
cli
rcr
and
pushf
xor
iret
mov
(bad)
shl
and
arpl
ins
test
xchg
lock
jo
xchg
test
not
add
jmp
mov
repz
pop
sbb
lods
jle
push
dec
xor
dec
adc
xor
ja
jp
pop
paddsw
add
add
xor
mov
loope
dec
sbb
frstor
pushf
pushf
std
push
arpl
rcl
add
push
es
cmps
scas
scas
mov
lods
loope
clc
inc
daa
inc
pop
inc
sbb
pop
jle
dec
lahf
repnz
sbb
jg
(bad)
in
push
into
or
aaa
mov
pop
movs
mov
mov
jno
mov
cli
pop
test
xlat
jmp
and
pop
or
add
xor
or
jne
and
lock
pop
xchg
test
add
imul
fwait
mov
jns
mov
je
enter
and
inc
fist
sub
pusha
or
add
mov
int3
and
lods
addr16
stos
jmp
loope
cdq
test
(bad)
fild
mov
sbb
xchg
and
pop
dec
fs
ficom
push
arpl
(bad)
dec
push
add
stos
mov
pop
mov
ds
adc
jmp
jo
scas
(bad)
xchg
retf
adc
sbb
xor
jne
test
repnz
dec
fs
add
(bad)
jne
les
push
xchg
gs
push
pop
xchg
call
jg
xchg
jbe
xor
or
or
jae
xchg
xchg
or
test
in
add
jmp
xchg
mov
xchg
or
mov
ja
mov
cld
into
lods
mul
test
mov
cmp
fisubr
sbb
test
fcmovnbe
fstp
hlt
sti
mov
enter
and
arpl
pop
sbb
bound
fldcw
jmp
xor
popf
pop
(bad)
cmps
adc
shr
rcl
pusha
inc
in
movs
lock
arpl
loop
push
push
aam
push
push
sub
dec
jno
mov
cmp
out
out
test
push
in
(bad)
lods
inc
sar
retf
mov
dec
pusha
clc
ret
dec
ficom
pop
sbb
cmps
cli
je
popf
or
stos
rcr
into
add
icebp
sti
test
ins
mov
out
sbb
push
adc
inc
pushf
bound
xlat
ja
sbb
jmp
sub
fwait
or
fyl2xp1
push
mov
xor
ret
push
es
hlt
cmps
in
retf
call
mov
gs
bound
lea
fwait
bound
jbe
mov
pop
push
pop
pop
mov
adc
in
fisttp
adc
adc
adc
inc
(bad)
jns
out
scas
mov
and
xchg
xor
aaa
pop
push
mov
scas
outs
mov
push
ds
and
(bad)
xor
repnz
xor
fsubr
and
addr16
fadd
jmp
inc
imul
push
mov
call
cmp
leave
dec
cmp
repz
xor
iret
(bad)
aad
test
pop
lods
pop
push
nop
push
ins
int3
adc
stos
add
xor
lock
test
push
aad
cdq
pop
sbb
adc
jbe
adc
inc
cmp
lock
hlt
cld
movs
aam
bound
and
adc
mov
xchg
mul
aad
fcomp
sub
scas
jle
cdq
outs
retf
jge
jbe
data16
xchg
pop
mov
hlt
fld
in
sbb
sbb
adc
aaa
dec
inc
sub
int3
add
popf
in
mov
sub
js
gs
inc
fdiv
mov
dec
dec
call
push
and
loopne
pop
push
inc
enter
jo
fist
pop
cmp
xor
push
out
dec
fcomip
gs
push
ja
jns
icebp
sub
xchg
test
jecxz
xchg
les
dec
sbb
or
or
rcl
push
lock
lods
lahf
sbb
jne
sar
jecxz
xor
xchg
fdivr
cwde
push
xchg
aad
pop
mul
push
movs
push
pop
mov
into
inc
cmp
adc
scas
mov
jo
ds
jne
aaa
push
fsub
cmps
push
jle
lds
pop
popf
dec
ret
mov
inc
mov
mov
outs
adc
dec
add
mov
js
xchg
sub
mov
cmp
dec
(bad)
call
pop
pop
fbld
loope
xor
xor
pop
adc
sub
neg
jbe
mov
call
mov
push
and
adc
in
mov
les
fldcw
retf
lods
loope
ret
nop
sbb
adc
pop
pusha
mov
imul
popa
push
call
mov
push
mov
mov
jno
xor
or
popa
pop
jmp
cmps
mov
mov
inc
stc
sub
ins
jns
loop
je
pop
add
sub
dec
add
fsubr
jl
dec
int3
stc
or
inc
jge
and
bound
mov
jae
out
sar
adc
sbb
adc
bound
rcr
or
xchg
imul
iret
fs
out
sahf
div
out
mov
aaa
inc
das
fld
mov
dec
add
popa
retf
fisub
mov
xchg
out
cmp
cmp
xchg
gs
ficomp
push
int
rol
and
jecxz
stc
mov
lahf
fild
and
push
sub
cmps
mov
shl
jge
mov
mov
dec
xchg
pop
iret
xchg
call
(bad)
mov
sar
xor
fwait
lock
jmp
das
add
or
xchg
ja
pop
cmp
fs
ss
mov
in
js
fmul
mov
pop
test
push
mov
mov
jnp
adc
jle
mov
imul
xchg
mov
test
das
es
xchg
ins
adc
pop
rcr
lods
adc
sub
movs
and
imul
jae
ds
cmc
scas
ds
je
or
ret
shl
mov
fcomp
nop
fadd
fmul
push
xor
jo
jecxz
mov
sub
mov
retf
inc
jae
iret
and
jnp
adc
mov
out
stos
aas
cmp
pop
enter
shl
pop
(bad)
xor
mov
lock
push
xor
enter
pop
adc
jmp
push
daa
in
scas
push
sub
ja
(bad)
push
xchg
xor
jb
out
fucomp
mov
xor
cmp
inc
stc
push
xlat
add
cmp
xchg
shl
icebp
repnz
cs
sti
dec
pop
hlt
cmp
ror
(bad)
pop
retf
sbb
aaa
or
xchg
into
ja
les
jmp
popf
cmc
pop
push
mov
push
inc
push
data16
daa
in
mul
repnz
sub
mov
int
add
add
aas
mov
mov
mov
push
dec
cmps
dec
pushf
and
mov
inc
call
xchg
cmc
sahf
and
push
jmp
les
stc
test
cmp
push
outs
adc
ds
xchg
les
xor
xor
xlat
pop
int3
imul
push
shl
dec
fisubr
bound
sub
push
or
aad
cmp
push
loop
xchg
arpl
xchg
cmp
aas
pushf
push
mov
pushf
(bad)
dec
into
dec
mul
(bad)
xor
add
(bad)
dec
push
push
out
xacquire
iret
gs
in
xchg
pop
retf
xchg
addr16
mov
(bad)
jae
add
ins
adc
pop
(bad)
xchg
sti
aas
xchg
imul
fwait
jae
inc
mov
and
neg
(bad)
mov
xchg
in
clc
mov
adc
popa
sti
scas
stos
inc
add
inc
sbb
push
popf
cmp
cli
fnstenv
mov
xchg
or
xor
mov
sbb
mov
ja
in
(bad)
test
cmp
repz
push
scas
rcr
dec
je
inc
lock
jmp
cmp
icebp
sub
sub
test
sti
sti
cdq
jmp
jmp
add
push
cmps
ins
pop
push
or
jmp
call
push
jnp
sub
cmp
xor
xor
xor
pop
out
daa
adc
adc
sub
mov
fcomp
push
adc
adc
mov
retf
xchg
fcom
inc
sub
xor
add
cmp
arpl
loopne
out
pop
aas
loop
into
je
dec
xor
push
and
popa
(bad)
dec
(bad)
les
imul
pop
daa
mov
inc
and
in
cld
jecxz
or
jb
xor
lods
lods
sbb
inc
in
jg
mov
cmp
mov
sbb
jecxz
enter
cmp
xor
loopne
loopne
fsubr
xchg
xchg
das
or
pop
fs
imul
adc
cmp
and
mov
mov
in
add
das
addr16
icebp
adc
xlat
mov
xchg
jb
cs
pushf
or
jl
push
jp
cld
stc
sub
arpl
sbb
push
and
ins
cmps
push
and
outs
mov
push
mov
(bad)
push
popf
rol
sub
loopne
sub
fs
mov
sub
sahf
ins
retf
jae
pop
rcl
xchg
jno
fwait
enter
es
ds
cmp
loopne
mov
add
aam
adc
rcr
sahf
mov
sbb
jne
mov
jmp
ds
(bad)
fidivr
test
xor
add
(bad)
shl
xchg
mov
leave
sbb
fstp
jne
jno
jne
xchg
and
aaa
push
lods
mov
pop
mov
repnz
shl
jmp
dec
fist
pop
mov
cmp
mov
daa
push
dec
or
rcr
adc
imul
push
pop
add
push
jnp
gs
mov
dec
xchg
inc
icebp
cmc
xlat
dec
mov
dec
stc
jmp
push
lods
enter
icebp
dec
(bad)
cmp
cmp
test
and
pop
or
lods
aas
faddp
mov
aam
sbb
mov
xchg
xchg
ret
ror
outs
add
in
jl
imul
pop
mov
inc
mov
loopne
not
in
jg
ror
sub
jo
dec
push
bound
movs
es
inc
xor
push
popf
je
and
mov
bound
push
mov
push
sar
in
mov
push
sub
lods
test
dec
inc
xchg
test
call
xor
mov
xchg
mov
push
push
nop
in
inc
push
mov
outs
add
lahf
sbb
ja
jno
(bad)
icebp
ins
fcmovnb
call
mov
inc
cwde
push
xlat
jno
cli
ret
xchg
fldcw
outs
ds
cmp
mov
and
shl
xchg
inc
mov
add
pop
add
aaa
mov
add
or
push
mov
sub
xor
push
int
xchg
mov
mov
(bad)
movs
or
xchg
fdivp
sbb
rol
pop
sar
ins
lods
cs
cwde
mov
push
add
sti
jge
int
ds
lods
cmp
push
jns
adc
inc
in
imul
fild
cdq
lock
jecxz
mov
mov
mov
mov
mov
push
cmp
outs
call
fldenv
jo
sub
and
sub
mov
repnz
jb
mov
pop
jne
cs
mov
in
fidivr
cwde
mov
cmc
jno
or
ret
cmp
push
xchg
push
sub
or
cmp
push
dec
xor
inc
loope
and
call
retf
ror
out
fdivr
out
inc
xor
jg
hlt
sar
dec
test
xor
test
cmp
scas
call
ja
mov
rcr
jmp
sbb
jns
cmps
add
sbb
out
aam
mov
mov
retf
sub
sub
jge
sub
mov
fsub
imul
out
stc
jecxz
or
sbb
cli
or
adc
ins
out
sti
mov
xchg
or
cld
dec
pop
rcl
push
das
stos
shr
mov
inc
sbb
jne
lods
xchg
mov
out
inc
add
out
dec
push
lock
mov
rcr
xor
pop
push
dec
lds
aam
inc
cmp
push
push
xor
(bad)
jno
outs
test
js
jne
iret
dec
or
xlat
ss
hlt
jo
leave
(bad)
and
mov
pop
add
repz
shl
ror
nop
ds
hlt
pop
adc
or
ret
push
sbb
jl
fstp
aam
push
xor
ss
pop
add
je
iret
fimul
xchg
enter
xor
push
dec
imul
adc
fcmovbe
dec
aad
sub
ficomp
or
jmp
xor
or
xchg
mov
arpl
push
in
jmp
pop
cmp
mov
scas
idiv
pop
(bad)
push
jns
dec
icebp
out
icebp
cmp
push
dec
mov
shr
call
mov
inc
xchg
pop
nop
call
mov
mov
push
inc
jmp
mov
push
aad
mov
xor
cli
add
mov
ret
mov
out
cwde
push
nop
inc
shr
push
jno
(bad)
or
mov
sbb
pop
and
push
lea
xor
sbb
jbe
lods
adc
jo
in
push
and
sahf
push
stos
add
or
enter
inc
inc
xor
inc
pop
pop
inc
jge
gs
push
inc
xor
pop
or
mov
test
sub
inc
fwait
adc
xor
outs
setns
fidivr
pop
mov
dec
jge
dec
dec
adc
mov
add
and
push
add
ja
pop
jl
jae
and
cmp
jmp
jmp
or
ds
mov
daa
dec
arpl
mov
std
mov
stos
mov
leave
pop
inc
mul
push
call
push
clc
icebp
mov
adc
mul
aam
add
xor
das
adc
and
cmc
mov
xchg
mov
mov
retf
aam
cmp
shl
sar
loop
jmp
sub
mov
call
pop
js
outs
push
fistp
mov
jmp
fwait
int3
rol
jbe
xor
sbb
dec
int
inc
out
xor
pop
retf
aad
xor
sub
fwait
jns
loop
mov
sbb
push
idiv
aam
out
loope
mov
rcl
scas
(bad)
call
gs
mov
mov
pop
sbb
cmc
xchg
add
mov
nop
fndisi(8087
xchg
mov
daa
cmps
sbb
mov
xor
data16
(bad)
or
and
das
jno
neg
pop
imul
adc
icebp
out
or
cmp
add
dec
cmps
sahf
stc
aam
and
icebp
dec
mov
xor
or
and
pop
add
movs
out
push
xchg
and
int
repz
push
mov
fsubr
mov
xchg
push
mov
xor
push
(bad)
jmp
lahf
daa
dec
test
stc
sub
mov
mov
jnp
nop
push
enter
pop
xchg
or
add
out
inc
movntq
out
sbb
call
sar
aad
sbb
xor
add
sbb
mov
pop
outs
xchg
inc
(bad)
xor
jmp
iret
push
lds
mov
cli
stos
or
outs
xchg
fstp
dec
(bad)
out
add
fisubr
addr16
inc
mov
test
(bad)
arpl
pop
popa
repnz
lods
adc
in
inc
(bad)
jne
and
dec
jae
mov
scas
cmp
mov
cmp
bound
jb
ins
enter
ror
inc
ins
sub
scas
mov
pop
pop
ret
outs
je
inc
inc
popf
or
mov
test
test
fwait
and
inc
inc
push
inc
dec
sbb
adc
xor
mov
jmp
stos
cli
fld
popf
cld
into
mov
sub
aad
xchg
inc
push
js
loop
out
or
mul
and
jne
pop
lods
call
iret
push
mov
mov
aas
inc
fldenv
or
xlat
js
xchg
jns
fsub
out
popf
sbb
mov
cmc
imul
retf
ror
ror
ds
push
adc
shr
xor
sub
push
not
std
cdq
sbb
xchg
je
(bad)
pop
inc
push
or
jmp
and
mov
es
or
push
out
pusha
lea
imul
sbb
xlat
and
hlt
cmp
jecxz
cmp
stos
and
sbb
jge
add
push
xchg
jmp
inc
or
iret
mov
retf
jmp
inc
repnz
push
cdq
ins
mov
in
sbb
push
sbb
xchg
ja
xchg
mov
xchg
inc
sub
int
add
cmp
ja
fwait
sbb
dec
jecxz
aas
cmps
in
les
not
repnz
pop
popf
xchg
cmp
retf
repnz
in
mov
(bad)
shl
pushf
push
(bad)
adc
int3
jp
aas
and
mov
in
(bad)
aam
mov
adc
push
fcomp
shl
pop
fcmovu
in
dec
mov
push
sbb
mov
stos
and
idiv
mov
jle
loop
inc
and
xor
mov
sbb
push
fucom
dec
enter
fidiv
out
jb
xchg
or
xchg
aaa
inc
shr
(bad)
mov
lahf
aad
iret
jg
arpl
mov
sahf
add
mov
adc
xor
out
sub
sbb
jg
(bad)
push
cdq
push
pop
ja
adc
rcr
mov
arpl
mov
xchg
rcl
punpckldq
std
inc
push
mov
pop
rcr
ret
mov
mov
gs
sahf
mov
inc
push
lock
aad
test
sbb
xchg
pop
outs
or
cld
cli
jmp
dec
dec
lods
and
dec
fucomip
into
into
pop
fsubr
call
sti
fdivr
cmp
cmps
(bad)
call
push
mov
and
mov
repz
mov
loop
nop
sar
movs
aaa
pop
(bad)
mov
pop
push
cmps
add
jle
(bad)
out
cli
sub
jnp
push
inc
mov
push
sti
cmp
shl
xchg
ja
ins
xor
jns
cmp
xor
gs
inc
adc
mov
cmps
dec
add
loope
pushf
or
dec
sbb
loope
imul
mov
push
sbb
mov
or
shl
and
ror
mov
xchg
sti
sbb
mov
jae
popf
shl
(bad)
outs
fs
lahf
xor
cld
sub
and
add
ret
call
add
fldenv
out
jo
out
(bad)
mov
cmp
jne
addr16
pop
dec
sub
ret
jl
and
push
cmp
push
sub
jle
lahf
or
xchg
jmp
dec
scas
jae
std
add
scas
les
pop
xor
out
push
dec
fidivr
hlt
(bad)
sar
mov
and
fs
shr
popa
dec
and
or
xchg
cld
sub
adc
jmp
pop
retf
adc
inc
or
aam
mov
xchg
mov
pusha
ror
sub
rol
pop
(bad)
jno
pushf
pop
inc
or
pop
add
ret
mov
mov
cld
(bad)
sub
ret
add
cli
enter
loope
clc
les
jl
fyl2x
mov
add
xchg
mov
(bad)
pop
mov
inc
test
mov
add
icebp
pop
push
out
push
leave
sets
ss
jg
mov
cmps
(bad)
movs
js
cli
sub
jmp
inc
xor
(bad)
call
jl
inc
push
adc
shl
ret
(bad)
xor
pop
add
jae
(bad)
addr16
popa
adc
into
or
mov
mov
jbe
xchg
fadd
adc
out
ja
dec
add
frstpm(287
mov
sti
fidiv
inc
adc
pop
dec
pushf
mov
sbb
jno
xor
test
shl
rcr
mov
popf
inc
adc
ds
jecxz
popa
inc
and
mov
cli
(bad)
dec
shr
into
pop
mov
call
fdivr
mov
pop
cdq
xor
loope
dec
inc
cmp
xchg
sbb
sbb
sbb
mov
jge
cmp
pop
jbe
mov
xlat
mov
repz
sub
lea
cdq
pop
outs
sbb
and
in
sbb
(bad)
jp
in
jle
int
cmc
and
int
lds
rcl
mov
sar
xchg
cmp
stos
push
sete
inc
loope
(bad)
movs
xchg
xor
xlat
test
fisubr
and
hlt
push
adc
jp
jecxz
pop
retf
xchg
and
dec
mov
mov
setns
repnz
fidivr
stos
ins
fs
imul
sub
rcr
pop
in
or
mov
rcl
push
sub
or
stc
adc
leave
lods
dec
sbb
cs
shl
push
daa
bound
inc
and
sbb
call
out
jmp
xchg
jbe
sub
inc
fisttp
es
cmps
in
int
addr16
movs
aaa
mov
sbb
sbb
pop
fild
out
hlt
mov
push
std
(bad)
mov
out
adc
nop
nop
pushw
nop
and
cmp
clc
ins
mov
dec
pop
mov
xor
sahf
inc
xchg
adc
retf
ins
or
out
or
imul
pop
jb
ss
imul
add
jl
mov
mov
mov
cmp
jne
out
xor
loope
sahf
das
push
fdiv
pop
loopne
in
frstor
xchg
or
aaa
mov
cmp
jg
jmp
mov
mov
nop
xchg
mov
bound
repz
xor
xlat
adc
sub
sub
xchg
ja
pop
cmp
loop
xor
call
xchg
ret
mov
ror
lods
adc
or
int
xor
cmp
and
adc
jmp
lahf
sub
jmp
movs
repnz
scas
mov
test
cmp
inc
sbb
cmc
ret
mov
loope
loopne
es
fnstsw
enter
scas
or
ret
dec
push
loop
ja
cmps
rol
aad
push
aaa
or
gs
mov
lods
mov
sub
push
xor
mov
jecxz
lock
jge
push
add
cmc
jnp
sti
fwait
push
xor
call
ds
adc
aaa
mov
enter
mov
sbb
cmp
xchg
add
mov
pusha
push
mov
in
jae
xlat
dec
mov
push
xor
sub
mov
xor
mov
ins
shl
mov
push
xchg
jno
mov
pop
pushf
retf
test
mov
imul
sbb
test
cdq
cwde
(bad)
adc
sub
jge
push
ret
sbb
pop
mov
cmps
dec
sbb
and
mov
outs
dec
mov
out
cmp
popf
add
add
frstor
rcr
fwait
sar
xor
stos
sbb
push
(bad)
adc
enter
sub
pop
add
ins
aas
fsubr
mov
mov
fldcw
adc
aaa
enter
xchg
sub
test
movs
cmp
popa
push
je
cmp
call
shl
retf
jo
cmp
and
mov
lock
dec
sub
ds
arpl
dec
cld
test
dec
mov
xor
lods
push
mov
mov
and
dec
inc
(bad)
ror
push
mov
mov
jne
jmp
mov
out
enter
jmp
arpl
push
xchg
inc
cmp
cmp
push
(bad)
pushf
(bad)
repnz
xchg
mov
or
push
mov
xchg
fisttp
mov
mov
repnz
clc
movs
or
movs
ds
pop
mov
jbe
lods
push
dec
and
stc
xchg
mov
test
push
retf
dec
push
sbb
pop
sub
jg
xchg
and
push
ins
sar
jge
cs
dec
call
mov
lea
aaa
add
sub
mov
pop
push
aas
push
xchg
or
push
dec
test
and
sub
popa
movs
push
or
and
nop
push
pop
jae
sti
and
xchg
mov
mov
cmc
xchg
push
cmp
lods
fistp
neg
xchg
loopne
or
xchg
jmp
test
and
cli
cwde
pop
cmc
sub
xchg
dec
arpl
push
inc
sub
push
repnz
jecxz
daa
push
ror
add
inc
jb
ins
mov
sub
stos
xor
sub
ja
pushf
call
push
stos
test
xor
sub
lods
daa
cmp
dec
scas
mov
int
inc
pop
popf
mov
push
mov
sub
cmp
mov
xlat
xor
inc
xor
test
mov
not
sub
scas
sbb
xchg
imul
sub
pop
pop
repnz
or
and
popf
(bad)
xor
jle
data16
pop
jmp
or
mov
je
lahf
sbb
pop
mov
xchg
ins
cmp
ins
jno
out
or
movs
arpl
push
or
ja
add
xchg
mov
daa
repz
pop
add
add
mov
imul
outs
movs
push
shr
cmp
xchg
frstor
push
movs
test
jnp
fs
in
add
test
mov
xchg
mov
in
sbb
and
xchg
add
sbb
lea
in
out
aam
adc
fdiv
loop
fwait
stos
scas
jo
xor
outs
dec
movs
push
call
out
call
ins
into
mov
mov
outs
add
mov
jo
sub
iret
mov
jl
fidiv
add
dec
(bad)
sbb
adc
pop
push
cmc
xlat
cdq
test
jmp
ins
sub
test
sahf
into
and
mov
mov
(bad)
pop
mov
pop
push
mov
les
cdq
adc
int
test
jbe
cwde
push
xchg
fucompp
push
btc
in
xchg
test
adc
pop
push
cmp
fnsave
fbld
(bad)
push
popa
shr
push
xchg
cmp
ins
pop
add
call
jbe
add
dec
and
push
loop
movs
cmp
lea
sub
scas
pop
adc
or
adc
fiadd
jmp
pop
ficomp
pushf
mov
and
xlat
or
jae
outs
cdq
shr
or
test
dec
in
addr16
cmp
neg
cld
mov
xor
scas
pop
xchg
jge
sti
mov
loope
rcr
clc
jl
xchg
int
sub
add
cmp
xor
int
aas
daa
sub
dec
dec
or
fstp
std
cmps
push
movs
mov
pop
sti
lahf
les
push
std
lea
push
fdivr
jns
adc
lahf
retf
mov
pop
repz
mov
jnp
cs
push
mov
clc
fdivrp
in
or
mov
jns
cmp
iret
cs
dec
and
mov
jecxz
(bad)
shr
(bad)
push
xor
pushf
pop
fwait
imul
push
ss
fidiv
jb
gs
mov
sbb
out
ins
shl
sahf
cmc
dec
push
xchg
rcr
in
faddp
imul
neg
dec
rcl
sbb
sub
push
movs
loopne
add
sbb
fsub
and
scas
popa
pop
inc
sub
cmp
sbb
push
xchg
mov
inc
popf
fnstcw
mov
jbe
sti
cmp
mov
jle
sub
push
clc
out
sbb
mov
fnstenv
push
add
pop
push
dec
ror
addr16
and
cmc
push
xlat
out
inc
outs
bound
(bad)
ja
je
in
div
loopne
mov
mov
mov
mov
mov
mov
(bad)
cmp
push
mov
sbb
fidiv
and
mov
push
pop
cmp
fst
mov
mov
je
aam
repz
dec
xchg
jnp
pop
jne
xchg
call
daa
mov
outs
jns
pop
lea
les
inc
push
ins
jl
pop
xor
jmp
shr
loop
xor
fidiv
add
push
rol
jmp
(bad)
lock
sar
mov
sti
push
dec
rol
xor
xchg
xchg
loope
cmps
std
inc
scas
mov
mov
fild
jb
cmp
sub
add
ja
in
jp
into
adc
lock
inc
sbb
jbe
xchg
inc
cmp
(bad)
stc
pop
lock
in
pop
push
mov
jne
jp
cmp
and
xchg
push
xor
loop
pop
cmp
retf
and
fwait
movs
pop
sub
mov
xor
or
lahf
xchg
push
jp
sbb
dec
test
inc
neg
xchg
push
sub
ds
ret
mov
pusha
int3
mov
and
mov
xchg
ss
aam
jmp
(bad)
jge
mov
xchg
or
cmp
pop
mov
add
aam
xor
mov
and
dec
int
ds
test
adc
inc
mov
inc
mov
push
sbb
mov
push
or
pop
mov
xor
pop
mov
clc
aaa
mov
jns
mov
adc
jno
cmps
dec
add
dec
add
cmp
jg
nop
inc
jecxz
cmp
jae
adc
xlat
clc
or
stos
ins
cwde
call
test
rol
addr16
cmp
xor
xchg
pop
enter
jo
(bad)
out
mov
push
(bad)
stc
inc
cmp
inc
sbb
cmc
jp
popf
or
ffree
and
lock
imul
rol
ins
jno
mov
xchg
cs
xchg
xchg
dec
mov
jmp
add
scas
aaa
adc
push
sbb
dec
xor
movs
nop
hlt
imul
pop
pop
adc
(bad)
push
sbb
enter
cmp
dec
repnz
pop
mov
mov
popa
mov
repnz
mov
pop
not
outs
xchg
pop
sahf
cmc
aad
jne
xchg
push
lds
sub
popa
pop
ret
stos
rcr
xchg
sahf
(bad)
or
cdq
in
pop
push
jae
ss
aam
das
mov
in
mov
movs
outs
jg
mov
movs
jmp
dec
fild
dec
xchg
xor
fidivr
punpckhbw
inc
mov
and
mov
fidivr
mov
jg
sahf
pop
or
fdivr
clc
add
adc
shr
mov
jl
std
add
and
ss
aaa
mov
cmp
inc
call
outs
adc
lods
aam
ret
add
sbb
fmul
in
out
cmp
cld
and
fnstcw
lahf
imul
xor
or
ja
in
test
add
fsub
bnd
popa
xor
jb
arpl
pop
mov
mov
push
xchg
scas
cmps
movs
dec
fnstsw
and
cmp
jl
xlat
iret
inc
out
mov
sahf
fistp
push
aam
mov
mov
movs
stc
jecxz
(bad)
mov
xchg
adc
adc
popa
sub
jp
jne
mov
icebp
sub
and
stos
pop
arpl
ja
call
and
aad
xchg
data16
inc
or
ret
punpckhdq
ins
clc
jae
fwait
mov
mov
loopne
not
jle
cwde
push
inc
xchg
cld
push
repz
shr
sub
cmps
pop
sbb
cs
aad
cmp
in
aad
cmp
add
aad
cmp
xor
outs
xchg
in
hlt
sbb
inc
sub
cwde
mov
sub
or
sub
ds
aam
pop
(bad)
push
mov
xor
inc
dec
in
retf
cld
adc
push
jp
sahf
push
pop
je
shl
push
cdq
cs
rcl
sub
pop
es
ret
jbe
ds
mov
not
mov
ja
mov
into
ficomp
cmps
stc
jl
lahf
mov
pop
test
and
or
sub
xor
push
sbb
pop
mov
dec
and
add
xchg
das
mov
int3
aas
or
test
inc
and
jno
sub
mov
pushf
push
inc
imul
ins
mov
(bad)
pop
cmp
pop
mov
adc
xor
jp
jg
cmp
pop
add
sub
fsubr
shl
outs
push
mov
inc
push
jge
lahf
ja
mov
inc
xchg
rcl
dec
cmp
gs
pop
aad
out
sti
jecxz
shl
push
ret
pop
gs
push
push
jo
and
je
sbb
fs
sub
add
sti
xchg
and
cmc
cmp
movs
mov
es
jne
pop
or
xlat
cmp
cmp
out
clc
jmp
js
fmul
cmc
out
or
cmp
out
mov
aas
ins
mov
retf
pop
mov
jne
movs
inc
arpl
push
or
out
out
sti
pushf
movs
sti
in
ret
pop
test
clc
mov
cli
das
pop
pop
ret
sbb
jb
pop
fldenv
pusha
sbb
lods
jbe
inc
mul
jb
or
xor
cmp
mov
pop
or
sahf
shr
jmp
mov
or
jb
sub
das
jmp
mov
repnz
js
cmps
outs
xchg
add
sub
cmp
jp
in
mov
scas
sbb
adc
lahf
mov
int3
mov
loop
fwait
mov
inc
mov
mov
adc
xor
popf
jno
js
cli
jecxz
(bad)
dec
sbb
or
das
shl
pop
lahf
lea
scas
ins
ins
(bad)
(bad)
mov
sub
ficom
cdq
in
inc
or
push
mov
js
or
pop
xchg
pop
ret
mov
ss
je
mov
repz
sahf
shl
and
lahf
out
mov
int
movs
and
bound
fucomp
ja
(bad)
xor
ret
dec
fs
push
nop
cli
pop
call
xor
mov
push
cmp
cmc
stos
or
pop
jae
and
xlat
add
out
cld
mov
xchg
xchg
nop
inc
mov
out
or
ja
push
xchg
inc
movs
mov
pop
icebp
bound
mov
add
out
lahf
push
sbb
les
dec
jmp
adc
dec
mov
xor
shl
xor
mov
push
(bad)
fiadd
std
pop
xor
jno
push
xor
clc
push
fimul
mov
js
jle
mov
pushf
imul
sub
and
mov
arpl
mov
mov
enter
push
sbb
js
fimul
jb
ss
jp
dec
and
push
push
enter
pop
imul
aaa
jl
cmp
(bad)
push
imul
xchg
cmp
adc
mov
in
push
xor
pop
jae
mov
and
aas
add
push
mov
shr
mov
sub
dec
lock
popf
jg
adc
popa
in
mov
sub
push
ror
shl
push
retf
pop
mov
stos
(bad)
cmp
pushf
sbb
jbe
(bad)
push
in
mov
ret
and
mov
sar
jmp
cmp
fsubr
xor
shr
lea
xchg
mov
inc
cmc
xchg
fs
vpandn
retf
fstp
mov
and
pop
xchg
mov
aad
into
sub
sub
push
push
out
loop
jns
ret
dec
xchg
lea
rcl
cli
test
inc
sub
fmul
mov
loope
mov
out
jo
mov
xchg
aad
js
(bad)
call
ret
ins
mov
ja
dec
push
sar
pushf
(bad)
pop
test
pop
call
lock
sti
mov
and
sbb
lahf
and
push
icebp
xchg
inc
or
int
popa
mov
jb
jle
push
ss
adc
pop
xchg
rcr
cmp
sbb
fwait
xor
jp
movs
fwait
lods
push
test
jp
mov
into
pop
jle
xchg
xor
dec
jae
dec
jno
lahf
fwait
repnz
and
adc
or
shl
xchg
mov
add
aas
aad
add
xchg
mov
dec
into
inc
mov
ds
sbb
ja
push
leave
enter
or
ds
cmp
mov
hlt
mov
lods
jmp
inc
add
jo
cld
adc
into
push
adc
add
lods
cwde
(bad)
jge
push
out
inc
and
out
pop
ins
cdq
mov
inc
cmps
push
inc
or
call
sbb
repz
sti
cmp
xor
sub
jae
and
aad
cmp
ds
outs
adc
add
jecxz
dec
pop
adc
mov
cmp
or
xor
stc
stos
popf
out
cmp
(bad)
jbe
data16
xchg
fidivr
jge
call
mov
sbb
xchg
pop
or
dec
out
in
add
push
stc
jmp
in
inc
test
pop
sbb
xchg
mov
or
mov
ficom
add
dec
cli
inc
retf
pop
add
aad
int
xchg
gs
cmp
push
xchg
cdq
dec
loop
jne
or
mov
pop
and
mul
lods
xchg
add
mov
popa
into
sbb
inc
xchg
cmp
mov
jne
inc
out
xor
cwde
(bad)
scas
and
aaa
cmp
call
and
mov
lahf
xchg
mov
stos
pop
and
and
or
out
jp
mov
test
(bad)
push
rcl
jg
mov
and
xchg
mov
fmul
(bad)
cmp
inc
ror
xchg
mov
das
jp
mov
push
jbe
aaa
aaa
cmp
or
neg
loop
and
pushf
jb
xchg
mov
sbb
cmp
repnz
std
xor
mov
call
or
mov
mov
loop
mov
ds
(bad)
cmp
and
aaa
pop
sahf
dec
mov
add
xchg
fld1
call
mov
gs
lea
ins
sub
xchg
sub
rcr
sbb
push
mov
xchg
mov
push
xor
imul
sub
scas
stos
sub
repz
ss
inc
xlat
jmp
aas
lahf
leave
fdivrp
add
dec
jnp
adc
sti
out
jne
inc
jl
push
jmp
pop
xchg
push
cs
ret
or
mov
cmps
fwait
xchg
mov
adc
jb
fsubr
dec
cmp
xor
add
fidiv
add
nop
sub
fcom
icebp
lds
arpl
fsubr
nop
bound
jge
push
(bad)
bsr
xlat
cli
sub
or
in
dec
aad
frstor
retf
lea
mov
jmp
sbb
jno
lock
inc
mov
cli
inc
or
xchg
aam
sbb
push
xchg
and
mov
retf
jae
mov
add
es
push
sbb
call
cmps
test
inc
cmp
push
adc
adc
repz
loopne
test
inc
dec
popf
xor
inc
sbb
mov
xchg
sub
adc
inc
adc
shr
dec
in
inc
mov
(bad)
lds
mov
sub
test
inc
xor
and
je
test
mov
cmc
(bad)
jmp
pop
fimul
xor
add
adc
aad
ss
stos
fild
sbb
int
std
xor
xchg
add
jl
pop
ds
or
fwait
scas
mov
fwait
dec
or
test
inc
or
push
pop
xchg
mov
dec
inc
xchg
inc
cli
adc
push
add
in
mov
and
dec
sti
pop
scas
aaa
movs
js
dec
sbb
into
ds
jns
(bad)
cmps
pop
xchg
scas
out
(bad)
and
or
sub
data16
xchg
fdivr
or
test
call
xlat
cli
lahf
dec
addr16
mov
out
int
pop
jecxz
setb
into
leave
mov
stos
sbb
idiv
(bad)
repnz
dec
cmpxchg
aaa
adc
push
fwait
int
(bad)
out
dec
cmps
fld
enter
(bad)
test
fidiv
outs
jg
dec
pusha
outs
mov
dec
sbb
and
and
dec
mov
push
out
nop
cli
mov
movs
mov
arpl
ins
add
punpckhbw
xchg
popa
mov
xchg
dec
movs
repz
(bad)
in
cld
xchg
rol
jl
gs
mov
xchg
int3
mov
cmps
mov
dec
pusha
(bad)
pop
mov
mov
push
inc
repz
js
and
addr16
add
or
in
push
xor
icebp
test
dec
stos
fdivrp
nop
dec
sub
xor
push
sub
push
mov
nop
cmps
or
call
inc
in
(bad)
(bad)
out
inc
pop
cmp
push
push
sar
ds
in
xchg
adc
push
mov
gs
lods
arpl
stos
fcomip
push
mov
sbb
jns
lahf
pop
mov
sbb
pop
xchg
push
je
dec
addr16
push
mov
dec
jecxz
ins
jnp
push
push
leave
adc
add
adc
add
jne
mov
sbb
in
int3
test
js
mov
ror
jb
jb
(bad)
push
loop
xor
scas
dec
fs
and
test
into
jns
jmp
sub
push
clc
pop
mov
xchg
dec
inc
jle
std
(bad)
xchg
loopne
adc
fiadd
jns
sub
xor
add
pop
aam
hlt
aaa
repz
icebp
in
jmp
cmp
out
dec
cmc
dec
jae
ins
xor
pusha
mov
in
mov
aad
xchg
inc
and
pop
sub
mov
lods
icebp
movs
pop
ss
in
addr16
jl
jo
dec
pop
es
mov
inc
sbb
or
xchg
push
pop
add
and
out
or
enter
inc
dec
leave
mov
jbe
dec
repnz
and
add
icebp
out
dec
fucomi
dec
jle
xor
out
mov
(bad)
lea
xchg
inc
mov
ins
cdq
mov
sbb
test
or
call
call
push
stc
dec
fwait
mov
mov
loop
repz
loop
xchg
(bad)
aaa
inc
sub
jbe
(bad)
fsqrt
xchg
push
out
ins
jle
movs
cmps
mov
inc
(bad)
fs
cmp
rol
mov
mov
fsub
mov
ror
(bad)
mov
adc
stos
add
retf
lods
and
(bad)
data16
and
sub
les
sub
inc
or
add
sar
push
xor
add
mov
and
icebp
ins
loopne
pop
or
mov
arpl
(bad)
out
jp
pop
adc
dec
and
adc
movs
sbb
push
les
shl
lods
cmp
(bad)
das
and
out
retf
push
xor
je
outs
pop
push
hlt
aam
jns
dec
sbb
push
fist
cwde
clc
mov
sti
xor
cli
dec
push
imul
aas
push
adc
lock
and
out
js
fnstsw
push
(bad)
ds
pop
lds
stos
sti
outs
cmp
add
jnp
add
fimul
shl
ja
scas
xor
lock
out
mov
fsubr
fs
xor
push
xor
rol
xchg
sub
ins
aam
cmps
aad
stc
in
int3
mul
shl
sbb
stc
retf
sar
mov
add
fsubr
pop
fnsave
outs
fidiv
xchg
sbb
lock
scas
jmp
mov
or
loope
xchg
out
(bad)
mov
xchg
bound
sbb
loope
jecxz
jle
mov
jge
mov
outs
mov
jg
xchg
mov
(bad)
jo
(bad)
fldcw
jmp
jb
and
inc
inc
(bad)
xor
pop
pop
stos
jecxz
xchg
inc
dec
dec
dec
add
aas
(bad)
fs
jbe
inc
out
loopne
scas
(bad)
fnstsw
and
(bad)
push
pop
fincstp
rol
shr
pushf
clc
rcl
sar
sbb
in
xor
pop
mov
push
inc
cmp
stc
int3
jecxz
inc
add
sbb
in
mov
push
dec
jbe
scas
xlat
sub
or
jbe
std
xor
xlat
icebp
sub
leave
movs
pop
xor
sub
(bad)
sbb
and
arpl
enter
and
xchg
call
imul
cli
aas
dec
jle
popf
fld
sub
fcmovb
ret
jmp
pop
jl
dec
mov
aad
popa
ror
nop
inc
repz
and
mov
pop
xor
cwde
push
pop
(bad)
shl
push
cdq
mov
mov
pop
pushf
fld
mov
xchg
mov
xor
lods
add
or
ret
ins
sub
out
inc
int
fisub
in
sbb
mov
cmp
stos
fisttp
int
icebp
push
sub
mov
bound
outs
add
cmp
xor
fwait
js
lahf
fs
mov
into
jo
test
rol
inc
sbb
shr
in
mov
arpl
mov
push
mov
sbb
loop
aaa
add
mov
xchg
pushf
movs
ja
cmp
repz
loop
or
pop
mov
call
add
bswap
cs
sbb
nop
mov
loope
loop
int3
jecxz
pop
cmp
enter
loopne
ret
pop
or
and
mov
jmp
sub
in
fiadd
mov
cmp
dec
and
outs
das
jmp
mov
jecxz
adc
and
fwait
cmps
repnz
and
pop
and
xlat
fadd
mov
cmp
mov
les
pop
fisttp
rol
test
push
or
loope
dec
aas
mov
test
mov
jne
shl
sar
mov
add
fisttp
add
(bad)
clc
imul
das
mov
adc
retf
xor
in
aam
cmp
dec
ror
xchg
call
lea
xchg
mov
das
outs
and
sar
and
jae
inc
loopne
dec
(bad)
retf
or
and
inc
and
adc
fcom
pop
js
(bad)
jae
xor
mov
into
mov
add
or
cli
or
jno
cmp
scas
fwait
cdq
(bad)
dec
shr
mov
(bad)
lock
lea
loop
sbb
out
mov
dec
jl
dec
fcom
stos
xchg
inc
pcmpeqd
push
mov
pop
(bad)
in
arpl
cmc
test
out
clc
and
add
xchg
imul
pushf
xchg
push
mov
push
sti
push
mov
imul
push
loope
fadd
pop
mov
mov
push
xor
in
inc
int
outs
pop
outs
adc
mov
fs
xor
and
xchg
xor
xchg
rcl
pop
sar
mov
mov
js
je
popa
push
nop
ja
jmp
mov
or
mov
sbb
clc
inc
xchg
jecxz
jge
mov
lock
dec
mov
ins
and
test
pop
cmps
mov
mov
mov
fbld
xchg
enter
inc
sar
sbb
dec
(bad)
xor
add
test
(bad)
pop
xchg
cdq
rol
cli
cdq
mov
dec
movs
sbb
pop
or
xchg
(bad)
(bad)
aas
fsub
and
out
test
out
jbe
cs
(bad)
cmp
push
jle
fmul
(bad)
rol
(bad)
add
sbb
pop
xor
daa
test
cs
and
sbb
(bad)
jg
xor
movs
mov
fcmovnu
adc
std
test
sti
sbb
push
repnz
inc
inc
pop
mov
pop
stos
jo
out
mov
cdq
mov
cmp
das
mov
adc
jg
ja
in
push
cmps
lods
sar
push
loopne
in
mov
xchg
jle
sbb
repnz
cld
sbb
ins
leave
and
sub
stc
pusha
xor
ins
sub
sar
into
sar
pop
and
cwde
aas
adc
gs
pop
ins
mov
push
shr
fild
loop
shl
sub
sbb
gs
xor
and
rol
mov
and
jge
adc
mov
dec
mov
cwde
mov
fisubr
dec
inc
(bad)
adc
lds
std
pop
inc
jne
repz
out
pop
movs
bound
jbe
dec
xchg
shl
and
dec
push
push
sahf
(bad)
(bad)
jmp
jmp
mov
pop
or
lods
pop
xchg
enter
and
push
inc
push
stos
aam
sub
pop
fwait
ss
sbb
mov
leave
test
packuswb
aas
or
mov
retf
sbb
(bad)
ror
mov
js
in
xchg
in
jg
sbb
push
mov
inc
out
push
mov
xlat
xlat
sar
imul
mov
cwde
cmp
push
pop
dec
add
test
mov
cmp
cs
push
mov
ret
cli
int
add
out
inc
jnp
adc
iret
mov
sbb
pop
out
aaa
es
xor
mov
push
jmp
push
stos
hlt
jns
xor
jno
sahf
aad
into
outs
loopne
cmps
dec
inc
fnstenv
mov
pop
int3
dec
adc
fucomip
lock
fwait
cli
mov
mov
pusha
enter
pop
pop
add
lds
popf
arpl
cmps
inc
(bad)
retf
xchg
das
sub
jl
push
inc
lods
es
jbe
cmp
fist
test
mov
xchg
inc
mov
mov
push
add
(bad)
jno
daa
dec
and
mov
and
inc
imul
pushf
adc
add
xchg
dec
in
in
sbb
mov
ja
and
sbb
xor
sbb
adc
push
inc
std
in
aaa
fdivrp
out
push
fmul
sbb
mov
and
dec
clc
pop
push
in
inc
popa
and
jge
mov
jge
out
jp
(bad)
icebp
pop
push
rcr
aas
and
mov
add
cdq
mov
out
jno
push
add
mov
inc
cmp
inc
push
cmp
pop
(bad)
cmp
cmp
adc
(bad)
les
popf
push
shl
push
lds
or
aad
push
in
add
push
xchg
add
daa
arpl
xchg
xchg
or
out
ss
pop
jmp
ret
fmul
push
cmp
pop
mov
mov
aas
(bad)
sti
fs
xor
out
arpl
add
xchg
sub
jmp
and
mov
xchg
xor
leave
out
mov
push
push
ret
arpl
mov
push
adc
inc
jge
test
jmp
test
in
neg
sar
daa
fs
inc
cs
cmp
or
jle
push
mov
inc
in
xchg
cmp
add
jbe
inc
dec
mov
adc
das
imul
sub
sub
inc
mov
xor
ret
sub
sbb
sub
sbb
add
push
js
cld
lahf
dec
pop
lods
movs
test
xlat
jg
les
(bad)
outs
callw
lods
xchg
test
call
cmp
int3
add
mov
sub
ins
ja
xor
(bad)
(bad)
aaa
jmp
lds
out
mov
outs
hlt
inc
cmps
(bad)
out
dec
retf
popa
or
retf
and
or
pop
and
iret
aam
enter
pop
scas
push
hlt
fs
push
xor
sbb
adc
cmp
jb
cmps
imul
mov
inc
js
int
scas
jge
in
stos
and
(bad)
mov
xchg
out
jg
inc
dec
loope
adc
jmp
mov
cmp
jnp
cmp
out
jp
push
loope
push
or
and
nop
popf
jp
cmp
cmps
or
ficomp
ret
pop
or
mov
fimul
xlat
test
jl
out
xor
dec
dec
push
adc
cmps
aaa
aas
jl
xchg
jmp
fucomi
mov
push
loope
xchg
sub
mov
fld
push
mov
push
jnp
cmp
mov
or
cli
and
or
mov
lea
in
and
enter
mov
jle
pusha
sbb
xor
popa
into
cmps
addr16
push
sar
out
cmps
loope
pop
inc
movs
dec
mov
les
jmp
sub
test
mov
sbb
pop
mov
(bad)
int
in
popa
ss
loopne
push
mov
sub
sbb
scas
int3
mov
jb
push
mov
mov
jo
repz
out
fild
push
pop
mov
ss
shr
retf
cmp
sub
inc
adc
inc
mov
and
dec
movs
int
xchg
xor
jg
add
jmp
stc
ffree
mov
xchg
stos
repnz
repz
data16
stos
sub
xchg
aad
mov
pushf
push
(bad)
cs
les
ds
xor
push
pop
test
ins
inc
rol
sar
add
push
arpl
push
dec
(bad)
mov
nop
test
popf
inc
add
pop
sbb
mov
fcom
sub
pop
xor
push
je
jmp
mov
cld
aad
mov
push
and
test
or
jge
and
cdq
sub
rcr
fnstcw
cmp
movs
lods
xor
push
pop
ds
scas
or
or
aaa
jle
fisubr
stos
aaa
cmp
add
pop
mov
fwait
add
in
adc
sub
movs
xor
sub
ins
stos
jo
push
sub
out
sbb
mov
or
sub
cmp
jge
pop
mov
int3
pop
ret
add
cld
mov
sub
outs
jne
cmp
or
xchg
rol
fsub
cdq
sbb
xor
retf
jbe
sbb
and
call
repnz
jo
mov
push
sar
mov
es
mov
jge
aam
cmp
xchg
jo
mov
jle
mov
sub
loopne
jle
sti
sbb
xor
add
jo
xor
in
popf
and
or
rol
test
gs
js
cdq
(bad)
retf
stc
nop
push
repnz
repnz
mov
test
call
cs
lods
add
clc
xchg
pop
xor
push
or
ret
outs
iret
pop
rcr
cmp
or
pop
mov
push
or
je
pop
or
fidivr
push
fucomip
jbe
pop
les
mov
fild
adc
in
mov
test
cmp
pop
jae
in
fidiv
ja
out
adc
xor
out
loopne
jmp
out
rol
mov
jmp
(bad)
mov
rsqrtps
into
adc
loop
dec
call
mov
adc
inc
xchg
test
jle
imul
xchg
fsub
mov
cmp
and
(bad)
shl
mov
dec
mov
mov
pop
push
hlt
ror
psadbw
sti
adc
aam
xor
fistp
mov
aaa
mov
mov
inc
movs
into
jle
fdiv
cmp
(bad)
mov
or
mov
inc
adc
dec
(bad)
dec
mov
push
sub
push
out
mov
pop
mov
stos
cmp
scas
mov
daa
arpl
gs
popf
leave
pop
or
mov
cwde
(bad)
adc
jmp
iret
add
sub
dec
leave
add
adc
aam
pop
clc
or
xchg
stc
lock
and
call
jp
jmp
xchg
scas
push
dec
xchg
or
inc
stc
and
scas
js
dec
cmp
push
push
mov
std
ret
dec
pop
vmulpd
fs
and
cmps
in
dec
ret
cmp
(bad)
loop
outs
in
jns
ret
ds
lahf
adc
sti
mov
inc
out
nop
xor
and
pop
shr
cmp
popa
push
bound
aas
add
pop
mov
jno
dec
jno
xchg
mov
mov
xor
lock
addr16
int3
cmp
xchg
addr16
and
push
repz
pop
mov
fisub
iret
jmp
mov
fisubr
repz
cmp
pop
jns
pop
aaa
push
pop
jp
push
jnp
les
cwde
(bad)
xor
mov
repnz
fist
xor
jp
dec
sub
adc
xor
xor
addr16
pop
cli
or
fnstenv
mov
mov
jne
mov
out
stos
jecxz
mov
leave
outs
lea
cmp
fcmove
xchg
(bad)
mov
in
iret
xchg
inc
or
mov
sub
cmp
cmp
inc
lea
jns
fwait
push
mov
ins
hlt
xlat
inc
popa
inc
or
xor
cdq
popf
int3
push
rol
loopne
jno
cmp
cmp
movs
push
(bad)
repz
xchg
test
adc
jmp
ret
add
pop
jle
out
push
add
mov
dec
mov
xor
xchg
in
scas
icebp
xchg
cs
loope
je
push
movs
cwde
push
inc
mov
add
xor
mov
fnsave
adc
fmul
and
jl
ins
and
lds
push
push
push
sub
rol
cmc
rcl
hlt
sbb
cmc
test
cmpps
lock
push
dec
cs
in
shl
mov
jg
or
sub
jno
push
aas
mov
call
inc
or
mov
jecxz
div
movs
xchg
cli
pop
jbe
xor
mov
mov
stc
dec
and
mov
jmp
dec
int3
movs
pop
xchg
adc
and
pop
movs
popf
sahf
sahf
icebp
iret
mov
pop
mov
adc
fnsave
(bad)
jmp
rol
aam
xchg
inc
sbb
lods
imul
cs
dec
sar
pop
pop
xlat
mov
dec
sub
cmps
leave
push
out
dec
imul
icebp
mov
jp
push
fisttp
icebp
lds
into
mov
call
mov
push
les
push
pop
sbb
jecxz
loopne
hlt
jmp
in
fist
cmp
pop
mov
sub
pop
and
mov
xchg
sbb
or
jp
dec
das
inc
cmc
retf
mov
adc
test
mov
or
imul
jge
jno
or
cmp
mov
cwde
sbb
xchg
dec
push
iret
stos
sub
arpl
dec
int3
jg
sbb
pop
dec
xchg
outs
(bad)
add
sub
ins
inc
xor
mov
push
call
xor
rcl
test
ins
pop
sub
sbb
imul
ret
and
pushf
pop
retf
add
rol
int
fstp
ss
jecxz
inc
or
arpl
dec
dec
mov
mov
xchg
into
sub
sbb
mov
int3
mov
int
je
xor
jmp
out
mov
or
rcl
dec
jg
mov
cmps
adc
mov
cmp
xchg
ins
jmp
call
adc
outs
xchg
push
aaa
sbb
cmp
std
push
iret
sahf
ret
pop
fisttp
jmp
mov
or
mov
arpl
jmp
and
(bad)
arpl
jbe
pop
jne
stos
fsin
or
repz
jmp
add
popa
pop
and
sbb
mov
pushw
icebp
imul
sbb
cmp
inc
loope
frstpm(287
enter
retf
jp
daa
jns
leave
fwait
mov
in
pop
pop
sub
(bad)
push
imul
das
sub
mov
frstor
mov
fs
push
mov
xor
bound
cmp
mov
jecxz
pop
int3
icebp
rol
(bad)
test
xchg
daa
test
mov
adc
into
scas
(bad)
sbb
out
xchg
fbld
sbb
xchg
xor
fcomp
add
test
aaa
or
js
iret
pop
push
push
out
ins
cmp
(bad)
mov
fisttp
jmp
pop
push
mov
cmc
test
jge
jae
test
xor
dec
jnp
call
call
repz
lahf
js
fist
std
fist
addr16
sub
out
stc
push
pop
sub
cli
sub
loope
xchg
ret
pop
in
mov
pop
(bad)
xor
xlat
imul
out
lahf
hlt
rcl
loope
or
stos
daa
std
xchg
or
xchg
mov
push
push
call
mov
inc
jl
aaa
std
(bad)
dec
adc
mov
idiv
mov
inc
dec
mov
mov
sbb
ret
lds
out
fstp
jno
jge
rcr
xchg
(bad)
mov
clc
shl
aaa
comiss
pop
sbb
mov
loopne
jle
fld
(bad)
jbe
jecxz
out
dec
push
(bad)
adc
inc
sbb
(bad)
ror
dec
movs
pusha
leave
cmp
pusha
dec
aas
push
jge
enter
lds
xlat
cmps
cld
aaa
mov
add
mov
inc
xchg
pop
or
jp
lods
ja
jae
out
mov
or
xor
dec
lea
xor
and
jge
shl
scas
or
add
pop
into
(bad)
clc
or
or
jo
pop
jl
into
mov
cmc
(bad)
inc
mov
sub
cmp
inc
leave
data16
stos
les
fwait
dec
sbb
loopne
sbb
or
fdivr
or
and
cs
imul
int
jb
idiv
ror
xchg
lock
fwait
push
cld
fnstsw
pop
in
inc
push
jo
mov
(bad)
fist
cmp
cmp
dec
add
or
cmp
cmp
push
sbb
cmps
add
pop
push
pop
cmps
inc
jbe
cmc
les
push
adc
retf
loopne
test
push
or
pop
add
cmc
(bad)
in
out
sbb
jle
fbld
sar
and
sbb
inc
fimul
xchg
jbe
xchg
push
xor
sbb
add
retf
jbe
daa
sahf
jns
dec
cwde
xlat
add
inc
lahf
mov
xor
mov
int
ficom
loope
lock
cmps
sub
or
push
in
ret
xlat
(bad)
pushf
sahf
inc
cmp
sbb
test
push
mov
cmp
arpl
inc
sbb
xchg
pop
loope
mov
inc
add
rcpps
(bad)
mov
stc
imul
xlat
ins
ret
mov
xor
cmps
jmp
sub
mov
aas
in
fwait
mov
mov
cmc
sub
dec
mov
mov
aam
and
add
mov
inc
cwde
scas
and
xor
inc
cmp
test
sub
retf
pop
push
lock
cwd
mov
cmps
mov
mov
jp
mov
push
xchg
loopne
fisub
jp
ins
adc
movs
(bad)
jno
(bad)
xor
sub
jns
popa
and
push
movq
call
test
aad
cdq
add
(bad)
fdivr
sbb
js
(bad)
aad
xchg
sbb
movs
cmp
int
mov
retf
out
out
mov
dec
in
xchg
mov
test
add
mov
dec
inc
das
cld
fbstp
jp
cmp
inc
xor
call
xchg
lahf
sub
cmp
sub
xor
dec
push
and
push
dec
loop
mov
mov
ret
mov
test
adc
pop
inc
mov
cmp
push
fdivrp
call
lahf
(bad)
jno
cmps
and
mov
inc
sti
leave
ret
test
ins
lds
addr16
xchg
pop
out
mov
js
test
ficomp
stc
inc
into
clc
mov
xchg
cmp
or
out
ins
leave
adc
clc
cld
mov
pop
sub
leave
aas
pop
sub
std
mov
mov
inc
aas
jp
jno
pushf
mov
jb
sbb
shr
jp
cmp
and
inc
pop
fadd
sbb
lahf
mov
mov
das
jae
dec
mov
pop
push
mov
fst
mov
loopne
push
pop
adc
mov
add
jle
popa
arpl
xlat
out
inc
cmp
sti
mov
sti
es
popf
cmp
fdiv
retf
and
lock
ret
and
dec
sub
sbb
sub
xor
pop
pop
mov
inc
data16
pop
cmp
xor
cwde
xchg
pop
jbe
sub
and
frstor
xchg
cvtdq2ps
or
sub
lods
sub
shr
xor
jmp
mov
pop
jne
ins
fcom
loop
inc
and
mov
mov
xchg
jno
lds
pushf
pop
std
test
lock
mov
inc
push
inc
adc
lds
mov
(bad)
icebp
inc
cwde
jmp
ja
xlat
fwait
icebp
jmp
add
fsubr
pop
fisubr
repnz
add
stc
jne
lds
mov
cs
test
xor
hlt
mov
dec
rcl
fsubr
sbb
icebp
or
fbstp
imul
sti
jl
(bad)
popa
sbb
xchg
loopne
xor
adc
mov
jno
mov
cs
test
inc
pop
ja
sti
aam
pushf
jns
arpl
jnp
int3
ror
dec
pop
mov
add
cmp
lds
scas
mov
test
sub
dec
mov
jb
sbb
stc
pop
jmp
xchg
add
mov
fild
pop
int
inc
adc
arpl
pop
jmp
adc
ins
sbb
mov
int3
and
sbb
scas
xor
lods
xor
or
pop
stos
mov
jmp
xor
data16
lahf
inc
or
idiv
sub
and
mov
adc
cmp
cmc
shl
into
ss
outs
pop
outs
imul
mov
jecxz
hlt
in
rcr
out
pop
mov
mov
adc
(bad)
scas
sar
cld
(bad)
retf
imul
mov
pop
push
mov
fmul
inc
vmread
cld
(bad)
push
dec
mov
pop
mov
into
add
retf
or
mov
jb
mov
inc
int3
in
movs
nop
movs
js
ds
sub
mov
sub
mov
jns
outs
ror
ins
inc
mov
setg
ret
push
popf
xchg
jb
or
sbb
cwde
and
add
xor
(bad)
out
pop
test
and
cli
xchg
pop
mov
dec
pop
mov
stos
addr16
fist
movs
retf
cmp
pop
in
mov
outs
lods
out
out
shl
es
mov
ss
inc
cli
pop
xchg
add
cmp
dec
push
add
push
and
movs
cmp
or
jb
mov
test
xlat
pop
dec
test
and
xchg
jg
iret
rcl
lods
div
and
cmp
mov
pusha
xor
ret
push
jno
test
or
xor
out
(bad)
test
sub
pop
movhps
lock
ins
xor
retf
cmp
enter
inc
movs
jg
mov
and
adc
dec
out
mov
add
mov
ja
test
sbb
mov
dec
mov
movs
add
pop
pop
jg
repnz
cwde
add
pop
aas
in
cmp
and
pop
jp
movs
push
aaa
stos
mov
or
jmp
test
mov
push
imul
xchg
in
cmp
xchg
aad
mov
rol
jno
out
mov
ret
jae
mov
in
aaa
sbb
sbb
in
retf
xchg
jge
jge
fwait
sub
cmp
stos
jb
int3
inc
mov
in
cmp
imul
popa
mov
aas
push
mov
adc
ja
jge
popf
push
xchg
mov
repnz
push
mov
fs
mov
jne
scas
lahf
scas
sub
sbb
and
cdq
jmp
nop
cld
data16
adc
push
dec
clc
mov
nop
xchg
cmp
call
cmc
adc
fnsave
fcom
aam
jge
push
leave
pop
mov
inc
scas
cmp
fs
mov
sar
push
icebp
inc
pop
repnz
mov
inc
(bad)
cmp
pop
mov
xchg
sub
mov
push
fisttp
pop
inc
out
hlt
retf
shr
xchg
jp
cmp
or
and
(bad)
js
jo
dec
loope
lock
je
dec
sti
int
pop
das
int
sbb
add
mov
imul
mov
fsub
inc
jle
inc
pusha
test
sub
or
aam
add
arpl
xchg
bound
cmps
or
je
jne
mov
fucomip
and
lds
push
pop
loope
jg
adc
fld
lods
out
mov
pop
mov
jge
pop
jmp
scas
sub
xchg
jmp
outs
pop
jmp
arpl
shl
ja
jmp
xchg
movs
mov
xchg
pop
jmp
xchg
mov
push
push
jl
lahf
sar
je
and
xlat
add
adc
or
sub
enter
pop
and
jno
aas
sbb
mov
pop
fcom
sub
lea
int
cmp
and
bound
add
mov
outs
cmp
dec
ins
sbb
xor
lods
jo
xchg
ins
xor
pusha
movs
and
jae
ja
push
nop
cmp
lock
fadd
and
sbb
mov
and
into
ss
cmc
push
arpl
sub
stc
dec
mov
xor
gs
jl
cwde
xor
movs
sbb
lahf
fbstp
pop
cmps
mov
out
jb
fwait
out
inc
rcr
dec
call
xchg
aam
jg
push
or
(bad)
test
dec
ss
pop
(bad)
jne
int3
enter
xchg
(bad)
scas
adc
sbb
inc
adc
imul
sbb
aad
mov
xor
push
or
cmc
movs
aas
(bad)
mov
clc
jne
jo
iret
cmp
arpl
xchg
imul
repz
hlt
addr16
sub
mov
(bad)
fstp
pinsrw
push
jle
mov
jb
adc
sbb
punpcklwd
stos
pusha
ret
imul
or
sub
pushf
div
mov
test
outs
imul
xlat
outs
and
popa
out
inc
xchg
push
jle
(bad)
daa
mov
sbb
js
iret
out
ror
mov
add
dec
cwde
out
icebp
aas
or
cmp
cdq
mov
nop
jmp
mov
fisub
fild
shr
mov
jecxz
xchg
stos
dec
inc
add
jp
and
cmp
adc
sub
mov
jb
mov
ret
into
pusha
pop
inc
ins
sti
pop
test
sub
mov
in
mov
push
xor
dec
or
xlat
imul
lahf
fsubr
fwait
lahf
xor
push
pop
push
xchg
rol
sbb
mov
cwde
cmps
test
xchg
and
rol
add
adc
jb
dec
ret
popa
pop
repnz
push
add
out
xor
pushf
push
xchg
imul
jge
out
rcr
imul
push
push
stos
bound
sbb
xchg
sbb
adc
push
sub
xchg
pop
dec
mov
cmp
cmp
xor
xchg
xor
in
stos
mov
cdq
sub
pop
mov
idiv
xchg
add
jnp
test
sti
xchg
(bad)
jmp
mov
push
sbb
rol
xor
aaa
cmp
push
lods
jne
jnp
sub
fistp
cwde
bound
adc
lock
rcr
mov
ins
fcomp
mov
jns
xchg
and
(bad)
fstp
jl
mov
(bad)
nop
push
cmc
lock
stos
stc
mov
mov
or
enter
fs
adc
cmc
movs
mov
push
inc
das
pusha
mov
call
xchg
adc
xor
jno
repnz
std
push
or
lods
shr
sbb
adc
les
test
adc
movs
ins
repz
lds
test
dec
and
call
sbb
adc
adc
cmp
sub
jg
pop
(bad)
mov
push
push
add
data16
retf
ret
adc
inc
cs
pushf
dec
xchg
sbb
sar
(bad)
push
ret
icebp
jbe
cmp
push
in
mov
pop
jnp
mov
mov
ja
xor
fidivr
loop
sub
mov
sbb
sub
in
or
rep
lods
xor
lock
or
push
xor
call
hlt
push
jmp
out
adc
icebp
outs
test
inc
mov
sbb
xchg
or
xor
les
sub
mov
cmp
jmp
push
aas
mov
xchg
shr
mov
data16
mov
push
loopne
dec
or
adc
in
mov
fstp
cwde
adc
mov
nop
sbb
sbb
or
int3
ja
mov
jne
cmps
inc
mov
jns
jno
jae
loopne
sub
and
ins
mov
push
dec
inc
imul
int3
jo
fwait
xchg
lahf
mov
les
cmp
sti
xor
aam
push
ffree
fucomi
add
stos
cmp
push
push
mul
(bad)
mov
mov
mov
clc
stc
add
push
data16
jae
dec
dec
cmp
xchg
pop
cdq
jg
retf
ins
int
sub
inc
xor
test
mov
(bad)
je
inc
jg
je
ret
cmp
pop
stc
test
outs
test
cli
xchg
push
inc
mov
adc
rcl
loope
jbe
xchg
call
push
or
leave
push
or
mov
add
push
loope
out
sub
out
ins
xor
in
cld
js
aas
das
sub
or
cmp
and
test
jbe
int
jno
stc
iret
adc
add
and
sub
(bad)
inc
(bad)
adc
test
repz
or
dec
mov
xor
fidivr
cmp
mov
or
aas
xchg
ss
sbb
push
int
(bad)
xchg
dec
mov
inc
pop
xor
xor
test
jmp
cmp
inc
pop
sbb
sub
scas
sub
and
jo
jmp
xchg
hlt
loopne
cmp
imul
pop
cmps
pop
cmp
popa
js
std
int3
jae
clc
cwde
les
data16
enter
je
outs
repz
sub
adc
pushf
rcr
aam
pop
jbe
test
pushf
sbb
push
jp
push
test
xchg
pop
dec
jmp
mov
out
(bad)
jae
jecxz
add
pop
jbe
cdq
jp
aaa
cmp
mov
push
mov
cdq
hlt
pop
dec
and
pop
out
cmp
fild
popf
(bad)
fld
or
mov
sbb
or
mov
xor
out
sar
in
add
jo
adc
adc
pop
sar
pop
int3
inc
fdivr
(bad)
push
xchg
adc
ror
dec
rol
mov
rcl
mov
sbb
or
xlat
jge
nop
repz
inc
xor
loopne
and
in
idiv
or
cvtdq2ps
stos
in
inc
cmp
xlat
stos
xor
jno
rep
lea
and
and
fimul
lods
int3
xchg
inc
xor
push
cmps
jae
ss
push
mov
hlt
xlat
add
xchg
adc
sub
fs
or
loope
outs
sbb
shl
not
cmp
jnp
dec
add
cli
pusha
(bad)
mov
push
repz
ins
adc
adc
pop
dec
cmc
cld
xor
popf
pusha
inc
outs
mov
std
pushf
loope
bound
xor
pop
or
ss
imul
(bad)
xchg
test
repnz
mov
and
das
mov
in
and
mov
push
cmp
inc
(bad)
and
mov
out
push
or
(bad)
in
push
and
cld
test
xlat
pushf
push
sub
push
int3
mov
jne
sbb
sbb
xor
mov
aas
iret
ret
cmps
cmps
enter
in
test
mov
(bad)
mov
jge
paddsw
loopne
into
dec
sti
mov
cdq
lods
adc
aam
mov
in
add
sahf
repnz
call
(bad)
cmp
push
xlat
xchg
ins
push
pop
add
mov
in
pop
lea
cmps
inc
lods
or
ins
xchg
fdivr
jno
test
scas
dec
pop
lods
and
push
mov
or
std
adc
or
push
mov
and
jne
frstor
xor
cmove
jmp
cmp
and
xchg
jno
ret
jp
pop
movs
rcl
adc
in
outs
inc
les
or
and
xor
hlt
jmp
icebp
clc
dec
cmp
xchg
outs
test
dec
cmp
lods
ret
add
cmp
es
lds
add
adc
inc
pop
dec
in
jge
and
sbb
xor
outs
out
aaa
std
cmp
retf
fs
sti
mov
sub
mov
lahf
jne
test
(bad)
push
call
or
pusha
packuswb
push
addr16
dec
push
push
mov
jns
and
lods
fmul
dec
pop
mov
or
cmp
aad
xchg
mov
cld
pop
mov
cmp
iret
dec
sub
inc
imul
cli
sbb
or
shl
sbb
lds
cmp
ss
pop
daa
jge
lds
ret
mov
jmp
cmps
mov
add
dec
sbb
leave
jg
arpl
adc
retf
mov
loop
push
popf
mov
aam
out
call
outs
out
(bad)
cmp
sbb
push
pop
clc
mov
mov
pop
imul
mov
mov
imul
out
out
inc
clc
(bad)
dec
jge
data16
(bad)
pop
fcmovnu
xor
jne
shr
loop
xchg
push
pop
jns
xor
xor
mov
add
aam
pop
inc
cmp
rcl
pop
xchg
xchg
and
jge
jo
add
pop
inc
mov
push
jno
xchg
dec
ins
mov
sub
mov
add
daa
int
cwde
sti
jbe
ss
xor
adc
fwait
mov
xor
shl
jge
ret
cmps
outs
addr16
daa
out
jmp
outs
out
jmp
dec
dec
movs
mov
lds
pop
paddw
retf
lea
xor
inc
rol
or
fsubr
sub
int3
int
clc
or
inc
shl
dec
pop
sub
push
fsubr
adc
jmp
or
mov
fistp
mov
mov
push
cmps
push
out
not
mov
lods
dec
push
(bad)
pop
xchg
jmp
loop
mov
sbb
repnz
movs
or
cmp
js
mov
gs
mov
fiadd
in
movs
jg
lds
test
inc
das
mov
pop
std
movs
scas
mov
retf
push
cmps
frstor
xchg
sbb
fbstp
xchg
icebp
add
cld
adc
bound
(bad)
int3
sbb
fisttp
pop
mov
loop
ins
jp
xchg
fsubr
call
loopne
mov
jl
adc
data16
daa
scas
xchg
xor
xor
sub
iret
loopne
sbb
data16
push
ja
xor
fsub
pop
(bad)
fdivrp
cli
xchg
fiadd
mov
(bad)
dec
cs
sbb
sbb
lock
lods
outs
repnz
cmp
mov
leave
adc
call
stos
and
popa
ins
mov
inc
ins
mov
mov
cld
leave
add
sti
sub
xor
ins
cmps
jno
jg
pop
icebp
addr16
jo
and
movs
fwait
add
xor
dec
adc
ficomp
pop
or
mov
cmps
test
dec
enter
inc
push
out
ror
call
outs
jmp
mov
retf
movs
dec
call
push
fisub
or
push
dec
mov
pop
fisttp
jmp
and
sahf
enter
test
xor
dec
pop
dec
push
(bad)
pop
push
aad
pop
adc
lock
pop
mov
inc
data16
pop
mov
lock
ja
icebp
xchg
pusha
mov
nop
fnstsw
aam
int
sub
sbb
mov
sbb
and
xchg
mov
add
xchg
and
jmp
mov
retf
fdiv
fild
add
fwait
sub
xchg
(bad)
idiv
xchg
jns
test
xor
dec
fidivr
mov
mov
jnp
dec
sub
popa
daa
xlat
mov
mov
nop
cmps
(bad)
aas
inc
fbstp
jmp
mov
and
div
out
and
sbb
(bad)
out
or
daa
mov
outs
inc
xchg
les
mov
mov
call
loope
pop
aam
cld
sbb
movs
mov
mov
xchg
pop
out
push
mov
loop
out
adc
add
jb
imul
sbb
sar
pop
cld
nop
outs
mov
sub
scas
dec
scas
xchg
jo
out
mov
jl
rol
dec
pushf
ror
(bad)
fnsave
std
push
jbe
sti
std
sbb
adc
jo
fwait
ss
lds
movs
jno
stos
mov
ds
jge
jbe
movs
xchg
xor
stc
pop
pop
nop
mov
ins
ja
repz
mov
test
push
sub
cmps
push
inc
pop
mov
int3
and
test
pop
mov
adc
lea
fild
jmp
fbld
fdivr
(bad)
icebp
mov
xlat
push
pop
enter
and
lahf
dec
cmp
mov
fisubr
push
cmps
mov
cli
mov
jnp
out
stc
daa
enter
shr
sbb
add
push
or
stos
ret
mov
dec
push
rol
out
stos
inc
in
(bad)
mov
aas
cmp
xchg
idiv
aam
jns
push
push
cmp
or
neg
inc
retf
mov
fs
enter
sti
pop
and
xchg
nop
sub
xor
aad
mov
out
gs
mov
mov
push
mov
popa
jno
jecxz
shl
pop
loopne
xchg
pop
inc
loopne
into
inc
lock
cmp
out
movs
mov
nop
je
dec
pop
int
stos
mov
mov
add
xchg
sub
xlat
mov
xor
mov
pop
(bad)
cmp
mov
rcr
push
add
loop
fs
shr
div
test
and
pop
or
idiv
in
enter
cwde
dec
push
mov
mov
sar
stc
std
jne
ds
(bad)
cmp
leave
nop
pop
hlt
sub
xchg
mov
jno
dec
popf
or
ret
mov
aas
push
fs
fsubp
xor
mov
pop
sbb
sbb
lock
test
mov
ret
jns
out
sub
add
mov
xor
push
and
out
das
cld
pop
lods
mov
and
mov
mov
jmp
inc
push
or
add
jmp
(bad)
repnz
and
gs
in
dec
or
sbb
mov
sub
sub
and
pop
xchg
(bad)
dec
and
sahf
pop
push
cli
dec
(bad)
dec
loopne
cmps
fistp
fs
leave
and
clc
dec
rol
cmps
xchg
imul
xor
sub
ds
or
mov
sbb
xor
fimul
cli
jl
cmp
sub
cmp
into
push
sub
jle
xchg
sbb
loop
mov
pop
loopne
in
popf
ja
add
test
ss
xor
xor
mov
jnp
xor
pop
mov
ja
inc
call
mov
aas
cmp
push
or
push
lahf
out
cmp
sti
lods
jmp
mov
arpl
shr
ret
add
mov
aam
lods
clc
xor
out
push
sub
lahf
scas
test
xchg
pop
movs
pusha
jp
stc
ret
popa
dec
inc
push
mov
xchg
pusha
vpsubq
add
xchg
in
movs
nop
js
shl
mov
inc
mov
clc
ja
jo
push
mov
push
cmp
imul
gs
mov
mov
les
push
push
pop
push
cmp
xchg
xchg
fwait
jno
hlt
ss
retf
retf
xchg
add
and
loop
and
addr16
lock
and
inc
xchg
aaa
mov
les
movs
cmp
call
hlt
xchg
mov
test
std
(bad)
gs
fwait
push
pop
mov
les
mov
xor
push
add
test
mov
mov
(bad)
lock
mov
aaa
and
cmp
pop
fcmovb
inc
and
cmp
mov
je
(bad)
mov
lods
pusha
stc
lds
inc
mov
cmp
iret
dec
mov
add
ss
js
cmp
mov
(bad)
adc
out
and
push
push
mov
ja
sub
dec
ret
loope
outs
ret
pop
mov
ret
jg
push
mov
adc
inc
fcomp
mov
mov
sub
iret
das
pusha
pop
sub
shr
ret
pop
les
scas
push
mov
pop
jg
add
std
and
fdivr
lahf
jbe
aam
jg
test
movs
sbb
dec
dec
adc
mov
mov
jle
je
fld
or
into
fsub
fcmovu
(bad)
xchg
cli
getsec
pop
push
jmp
data16
cmp
loope
adc
xor
adc
push
pop
fcmovb
sar
fisttp
jo
out
test
ins
mov
scas
adc
jg
popa
iret
sti
jns
cdq
lock
mov
lods
aam
mov
cdq
in
sub
shr
mov
mov
jns
xchg
out
arpl
xor
call
xchg
call
pop
inc
and
out
or
mov
ins
push
gs
sbb
retf
lahf
ss
out
out
enter
(bad)
jle
xor
dec
call
pop
fldenv
sbb
and
sbb
and
adc
push
sub
add
sbb
js
in
sub
jnp
cmp
ss
xor
retf
idiv
int
and
cwde
jns
ror
and
loopne
scas
or
xchg
lods
add
xlat
and
jbe
push
push
mov
into
repnz
es
add
arpl
iret
or
jp
fsubr
out
add
call
call
out
jo
xor
push
mov
xor
fld
mov
jl
xchg
test
mov
mov
mov
xor
jle
lods
inc
jmp
test
fsubr
mov
jb
cmp
mov
mov
add
(bad)
lods
mov
bound
rcr
ds
(bad)
cli
mov
jnp
mov
es
(bad)
push
jno
mov
cmp
mov
push
adc
ins
and
jo
retf
pop
dec
xor
(bad)
shr
adc
mov
push
test
shr
out
fwait
mov
xchg
pop
popf
cmp
(bad)
dec
add
sbb
jae
xchg
mov
add
push
or
outs
push
mov
pop
inc
call
es
and
add
call
lea
gs
cmp
out
fidiv
jo
fidiv
sub
pop
fidiv
add
shl
test
ss
sbb
cmp
adc
in
xchg
lods
mov
dec
xchg
ret
pop
cmp
rcl
and
adc
loopne
mov
das
fcom
or
pop
movs
mov
inc
sahf
(bad)
retf
mov
sbb
cmp
sbb
pop
xor
or
sbb
adc
sub
fidivr
or
cmps
repz
jae
ret
clc
inc
push
inc
mov
push
jne
push
test
dec
pop
and
mov
repnz
frstor
xlat
pop
adc
in
arpl
int3
rcl
mov
push
adc
xor
sub
add
ins
aam
xrelease
jns
shr
inc
loopne
int3
push
and
stos
shr
jno
and
cdq
push
mov
fisttp
jns
fld
int3
jnp
cli
mov
xor
fisttp
sub
and
push
adc
jmp
xchg
lock
xor
lahf
stos
mov
sbb
setb
jns
dec
push
cmp
int3
push
sbb
push
mov
sbb
dec
(bad)
push
scas
out
icebp
jae
push
stos
ds
sub
lea
inc
shl
clc
and
mov
mov
or
call
test
cmp
mov
cmp
ins
and
inc
cmp
jbe
or
hlt
mov
jp
ss
jne
jmp
pop
xor
outs
fsub
sub
jmp
mov
dec
pop
or
cld
out
out
aaa
sahf
mov
(bad)
adc
ins
mov
mov
mov
int3
mov
in
dec
pop
mov
imul
xchg
fs
pusha
jecxz
test
shr
movs
mov
call
and
shl
xchg
xor
in
cmps
sti
frstorw
(bad)
ds
add
jl
loopne
mov
mov
inc
and
lock
dec
pop
adc
sbb
adc
icebp
cmps
aas
push
mov
mov
jbe
out
cmp
neg
pop
xor
add
mov
dec
or
fwait
cmp
push
dec
xor
sbb
bound
xor
imul
mov
lahf
jmp
outs
aam
sub
call
fstp
cmc
dec
(bad)
outs
mov
adc
inc
push
mov
call
push
out
neg
sahf
push
imul
pusha
movs
aad
neg
and
cld
sti
or
lahf
inc
int3
adc
adc
mov
outs
cld
dec
add
sbb
inc
ret
push
xchg
or
test
rep
movs
dec
jns
sbb
mov
adc
ds
jle
loopne
or
test
xchg
(bad)
mov
xor
adc
sti
lods
les
pop
mov
xchg
cmp
xor
inc
scas
and
dec
ins
xchg
xchg
(bad)
sti
retf
lahf
dec
xor
sbb
shl
cmc
int3
sbb
je
mov
and
loop
lahf
pusha
or
mov
je
stos
jmp
xchg
sbb
jns
dec
push
ret
xchg
and
gs
lods
mov
scas
pop
leave
neg
jle
fsubr
fistp
ret
pushf
enter
aas
push
or
push
ins
cwde
repz
mov
cmps
fmul
in
adc
cmp
leave
push
push
mov
(bad)
enter
jle
retf
popf
idiv
push
pop
and
mov
xchg
lds
cmp
jmp
cmp
sbb
ins
fidiv
cmp
das
scas
fsub
lock
mov
ret
int3
sbb
fild
pop
sti
jbe
inc
loop
and
xor
xchg
lock
mov
sbb
lods
jecxz
pop
push
or
dec
mov
mov
or
pop
sbb
call
stos
add
or
mov
popa
xchg
inc
dec
push
scas
jno
jge
leave
push
fst
pushf
inc
jp
leave
fs
push
int
mov
xchg
pop
call
cmps
add
shl
xchg
mov
hlt
rol
add
jmp
out
sahf
add
adc
sbb
ins
sub
icebp
mov
cmp
shr
dec
movs
(bad)
dec
loope
ret
jecxz
pop
adc
jmp
das
cli
das
retf
dec
call
push
sub
mov
add
rcr
pop
sahf
aaa
mov
les
mov
sbb
cmc
xchg
dec
scas
out
inc
nop
xlat
fadd
push
mov
fstp
mov
cmp
adc
in
rep
adc
scas
xchg
test
ins
sbb
mov
jp
aaa
mov
movs
and
mov
in
or
neg
out
adc
mov
sbb
dec
fdivr
ja
(bad)
adc
push
out
inc
imul
push
shl
js
cld
mov
mov
outs
cmp
push
stos
popf
ja
cwde
cmp
jmp
sbb
les
add
test
adc
fwait
sub
test
jl
sbb
push
dec
call
inc
adc
int
(bad)
test
inc
sub
popf
movs
or
sbb
mov
mov
mov
(bad)
push
jmp
icebp
dec
mov
(bad)
ffreep
jnp
dec
pop
retf
pop
dec
mov
nop
jg
sub
adc
aas
pusha
pop
repnz
in
dec
mov
enter
pop
cld
in
imul
mov
retf
and
call
adc
adc
push
dec
pop
(bad)
icebp
in
retf
mov
or
(bad)
aaa
push
xor
cdq
xor
adc
call
push
cmp
gs
ss
icebp
test
push
data16
iret
mov
add
fidivr
(bad)
out
arpl
inc
xor
fisubr
cmc
xlat
icebp
cs
xor
cmp
fmul
popa
mov
ror
inc
or
xchg
add
test
fstp
push
std
xor
not
sub
ret
mov
adc
xor
sub
test
lods
scas
sbb
adc
jp
sub
push
loope
adc
push
xor
lods
loop
out
push
scas
repnz
sahf
icebp
and
popf
dec
push
fstp
out
(bad)
sbb
movs
cmp
push
test
pop
in
sqrtps
pop
jo
enter
mov
mov
push
aaa
dec
sbb
(bad)
(bad)
cmps
cmc
(bad)
imul
test
fidiv
or
push
dec
and
pop
clc
shl
inc
outs
ror
adc
clc
das
(bad)
mov
or
mov
xchg
mov
xchg
dec
add
sbb
cmp
adc
push
adc
leave
xlat
fxch
mov
inc
ret
mov
lea
inc
mov
arpl
xor
ret
loope
es
movs
jnp
int3
or
push
imul
pop
scas
push
sub
into
aad
add
mov
adc
call
jno
mov
pusha
xor
pop
aaa
inc
xor
jb
or
and
pop
outs
and
pop
dec
retf
mov
xor
jns
mov
inc
in
fwait
jne
push
hlt
inc
(bad)
(bad)
dec
mov
jnp
jmp
in
clc
xor
ins
call
aad
cmp
ss
inc
test
xchg
dec
add
test
jmp
in
pop
mov
jnp
jg
cmp
mov
shr
fsubr
aad
leave
out
sub
or
outs
and
in
pusha
and
jmp
cmps
scas
and
int3
in
push
jle
jnp
push
repnz
adc
or
dec
push
enter
mov
add
mov
jmp
pop
jp
cmp
rol
data16
xchg
pop
clc
xlat
add
xor
xchg
test
push
pop
cld
pop
mov
push
xacquire
jno
mov
loope
push
pop
rol
mov
int
data16
in
lock
retf
lods
mov
in
inc
cmp
iret
cld
leave
and
movs
out
pmulhuw
push
pop
into
movs
psubb
leave
int3
(bad)
xor
cmps
sub
cmps
push
outs
out
jmp
jecxz
push
jb
jg
adc
scas
std
cmps
ins
and
movs
push
pop
sbb
jecxz
iret
inc
in
sbb
inc
shr
jle
mov
or
mov
add
push
xor
ror
and
mov
mov
ds
mov
sub
mov
push
pop
lahf
sbb
xor
div
enter
ficom
jo
sbb
or
or
sar
pop
push
fcom
cmp
aad
retf
pop
and
bound
stos
add
sbb
pop
mov
shl
dec
fcomp
scas
dec
stos
out
test
sbb
xchg
aam
out
ror
je
inc
hlt
or
mov
pop
dec
push
inc
pop
sub
inc
or
popa
push
iret
js
cmp
cmc
and
mov
mov
test
xchg
xchg
aaa
ret
sar
jae
xor
xchg
out
cmp
inc
aam
cmc
dec
test
and
aaa
sub
imul
mov
xor
clc
clc
hlt
popa
xor
imul
int3
mov
out
jg
call
lods
and
or
xchg
mov
cdq
punpcklwd
fisubr
cdq
mov
mov
cmp
iret
addr16
sbb
xchg
stos
dec
or
stos
mov
jl
fisttp
aad
jle
div
popa
cmp
jns
ins
cdq
add
fisubr
fst
mov
out
mov
into
mov
mov
and
jae
aas
jbe
and
mov
sbb
push
test
mov
arpl
mov
idiv
dec
xchg
nop
push
test
lock
add
ss
add
or
addr16
aam
sub
(bad)
aaa
loop
sbb
adc
aam
fdivr
mov
cld
scas
pop
sub
jmp
mov
add
jmp
add
popa
pop
rol
adc
jno
fisttp
and
jp
pusha
adc
push
pop
aad
cwde
pop
retf
jmp
mov
push
inc
outs
adc
cmp
or
stos
aaa
jmp
int
es
pop
mov
mov
mov
mov
ret
rcr
push
clc
sahf
test
xchg
mov
push
lods
push
sub
and
out
sti
fdiv
push
(bad)
xor
xor
adc
call
retf
xchg
jl
sbb
mov
ja
in
inc
push
mov
sti
push
inc
pop
scas
mov
les
popf
aaa
sub
daa
daa
lock
popa
out
or
inc
out
in
mov
scas
adc
xor
pop
push
aam
jnp
cld
rol
mov
outs
std
(bad)
in
cmc
cmp
lock
ja
icebp
lds
sahf
inc
mov
ret
xchg
int
push
jns
sub
int3
lds
jl
dec
loop
and
aas
or
jno
inc
mov
ja
inc
out
ret
push
call
jae
sub
(bad)
movs
push
push
sbb
js
pop
scas
in
xchg
mov
xchg
inc
sub
push
inc
push
movs
jle
adc
xchg
ins
mov
lods
mov
nop
pushf
mov
sub
push
cmp
mov
in
jb
jnp
aaa
jo
repz
shl
push
or
and
pushw
repz
adc
mov
xchg
xor
out
bound
and
loopne
fnstcw
jmp
push
mul
call
(bad)
fmul
out
cmp
push
xlat
push
cs
push
pop
idiv
out
push
in
movs
mul
adc
mov
xchg
jnp
push
adc
call
pop
int3
clc
cmp
(bad)
ret
lods
mov
outs
jmp
and
mov
nop
rcl
or
add
mov
xchg
inc
movs
pop
sbb
adc
mov
push
or
jle
int3
jns
cli
arpl
mov
imul
push
xor
xor
cwde
push
jae
call
mov
out
push
mov
inc
mov
mov
mov
jne
test
add
test
clc
sar
test
dec
mov
mov
dec
ds
nop
jecxz
push
xor
push
stos
gs
dec
(bad)
mov
xchg
es
ret
xchg
pop
adc
mov
sub
imul
pop
jno
into
push
gs
sbb
addr16
(bad)
test
push
and
pcmpeqd
xchg
jmp
retf
out
daa
dec
aad
add
add
cmp
ficomp
in
call
out
repnz
aad
test
ret
and
and
mov
ja
jp
mov
es
and
inc
inc
mov
cmp
mov
jne
xchg
mov
aas
cdq
xchg
sub
mov
inc
inc
adc
out
push
rcr
dec
xor
sbb
mov
lea
test
sar
push
fistp
imul
sbb
mov
mov
dec
aam
inc
lds
int
push
call
aas
sbb
inc
xchg
movs
push
gs
mov
hlt
cmps
dec
jle
sbb
mov
jo
add
and
push
pop
jecxz
lods
cmp
lahf
pop
mov
push
sub
rcr
(bad)
fstp
pop
cwde
mov
iret
xadd
stos
push
dec
sar
sub
rcl
mov
fwait
ins
out
and
in
shl
push
cwde
mov
out
gs
test
cmp
sbb
pop
xor
adc
cs
jns
call
in
xor
hlt
add
call
xchg
in
mov
sahf
sbb
add
ss
leave
aad
retf
cmp
out
fstp
sbb
leave
(bad)
fs
and
dec
mov
pop
mov
test
std
cmp
xor
sub
xor
jns
add
mov
jle
sub
ffree
mov
or
ret
rcr
es
add
retf
sbb
outs
push
mov
out
xchg
jg
or
jp
fidiv
or
in
mov
sbb
and
pop
int
xor
xor
les
sbb
xchg
and
mov
int3
out
in
les
nop
push
mov
jecxz
push
sub
xchg
inc
fidiv
mov
(bad)
gs
xor
(bad)
int
out
push
cdq
push
sbb
pop
inc
rol
pop
push
pop
xchg
mov
add
and
(bad)
mov
xchg
fbstp
lock
cmp
aaa
sbb
sub
pop
mov
sbb
sar
cmp
outs
in
and
fwait
sti
push
mov
sar
ins
gs
cmp
comiss
hlt
and
push
outs
in
dec
fistp
mov
mov
sahf
xlat
ror
retf
cmps
(bad)
jo
cs
mov
dec
mov
cs
test
xor
call
jno
add
call
sbb
ins
push
xchg
xchg
outs
call
mov
push
dec
stos
mov
sub
out
aaa
xchg
ins
imul
jl
int
mov
mov
ins
cwde
fimul
inc
ret
into
outs
sbb
inc
fcmovnb
int3
scas
push
jne
ret
add
cdq
jae
sti
pop
jmp
mov
out
jae
jmp
out
lods
es
inc
jl
fcomp
pop
xchg
pop
mov
add
push
cmc
fild
ins
xchg
aas
ret
neg
jp
cmp
loope
pop
sub
jno
jo
push
mov
call
pushf
and
stos
jmp
daa
sub
sub
mov
jb
inc
rcr
push
movs
mov
les
jp
jg
movs
push
sub
xor
add
mov
push
sti
sub
mul
push
fisub
push
xor
jp
rcr
xchg
push
inc
aaa
cmp
push
or
ret
sub
add
imul
in
call
mov
adc
mov
outs
out
retf
cmp
rcl
mov
dec
je
mov
adc
fsubr
mov
dec
push
cdq
test
in
sbb
sbb
xor
lock
leave
inc
pusha
mov
ficom
lds
or
pop
scas
(bad)
fistp
inc
push
lds
in
xchg
add
or
mov
sti
inc
lods
inc
pop
out
dec
fadd
pop
sbb
jg
inc
iret
mov
jae
mov
cmp
ss
mov
adc
push
and
jno
dec
push
sahf
xor
cli
inc
jmp
rol
add
retf
mov
out
dec
popf
mov
and
cmp
cmp
cwde
xor
sbb
mov
dec
popf
je
mov
jmp
sub
adc
sub
int3
test
(bad)
out
sbb
jg
rcr
pusha
add
aaa
jge
pop
adc
cmp
sbb
dec
cld
add
or
jns
push
arpl
fldcw
lock
pop
mov
pop
popf
sbb
add
add
push
add
das
jb
fiadd
mov
aad
retf
jg
arpl
fdiv
mov
push
push
mov
push
jne
pop
and
xor
(bad)
imul
jmp
adc
and
cld
lds
loopne
add
out
push
push
xchg
sbb
nop
adc
and
adc
mov
inc
or
xchg
outs
int
jnp
sar
(bad)
mov
std
and
arpl
inc
out
test
sahf
into
push
mov
shl
xor
dec
or
xchg
(bad)
push
mov
pop
arpl
test
(bad)
pop
addr16
(bad)
lock
push
in
cmps
cmp
pop
add
mov
xchg
js
xchg
and
lahf
or
jmp
adc
mov
ret
(bad)
push
int
scas
or
leave
repnz
xchg
mov
jb
loope
or
inc
ss
xchg
aam
movs
cmc
pop
mov
sbb
shl
movs
or
clc
dec
push
fsub
and
test
and
loopne
push
mov
mov
cwde
ret
mov
fst
push
pop
adc
add
xor
leave
mov
ror
and
add
(bad)
cs
cmc
in
xor
repnz
lock
cmp
imul
jne
cmp
popa
cmp
ret
lods
punpckhdq
(bad)
outs
add
(bad)
xchg
push
outs
xor
mov
dec
cwde
fsub
cmp
out
jecxz
pop
outs
shl
das
and
push
dec
and
int3
fs
in
mov
test
ins
cmc
xor
fnstcw
hlt
jnp
sbb
sub
pop
fild
aam
jl
fcmovnbe
mov
rol
in
xchg
je
pop
inc
mov
mov
push
in
dec
push
mov
dec
loopne
icebp
inc
test
and
or
sbb
or
xor
ins
sbb
sub
jmp
mov
or
out
xor
outs
imul
xchg
pop
out
cmps
adc
push
pop
fnstenv
leave
das
pusha
inc
mov
pop
jno
and
ins
fsubr
sub
in
mov
fisubr
pop
daa
leave
test
cmp
cmp
addr16
test
imul
cmps
add
cmp
dec
sub
das
clc
xchg
(bad)
cmc
sti
jge
cmps
xchg
inc
(bad)
xchg
js
jo
xchg
aaa
xor
inc
movs
jecxz
mov
sar
test
(bad)
push
shl
mov
lock
dec
stos
leave
push
mov
and
mov
out
into
pushf
mov
mov
cmp
ffreep
lds
push
inc
aas
mov
xchg
inc
dec
mov
adc
jp
xchg
xchg
mov
or
jle
in
pop
fadd
jbe
and
lods
inc
pop
xor
pushf
iret
lahf
push
std
xor
xlat
mov
iret
or
mov
arpl
sub
mov
cdq
test
(bad)
xlat
loopne
fwait
popf
mov
add
out
js
jne
movs
push
xlat
sbb
dec
fisttp
push
cmp
int3
test
ins
jns
xchg
mov
hlt
sbb
int
sub
dec
mov
addr16
jbe
cdq
xor
pop
mov
inc
mov
nop
mov
fwait
cmps
jb
shr
ins
aas
push
sti
lea
push
je
movs
fbld
loop
mov
add
(bad)
sti
inc
mov
cli
xchg
mov
sub
popa
das
hlt
call
mov
dec
add
ins
cmp
lahf
fidiv
push
fst
js
mov
fisub
xor
cmp
out
fisub
test
sbb
or
jp
cmp
dec
inc
leave
xchg
dec
lock
ds
push
and
std
add
pop
adc
and
daa
rcl
cmps
pop
xchg
xor
aam
jbe
test
and
std
mov
jnp
push
jbe
push
js
aad
das
push
add
dec
outs
xor
shl
inc
add
stos
enter
cmp
mov
adc
stos
jo
std
mov
(bad)
push
adc
jne
push
mov
pop
fwait
pop
fst
jnp
into
dec
pop
xlat
dec
dec
stos
and
sar
add
xor
dec
xchg
daa
mov
bound
inc
mov
into
sbb
pusha
movs
push
jns
push
nop
xchg
ins
sub
scas
stos
jecxz
in
push
push
cmp
mov
xor
cmp
push
cli
adc
test
dec
call
ds
data16
and
mov
pop
addr16
pop
sbb
aam
mov
push
(bad)
div
cdq
loop
clc
and
imul
imul
movs
imul
xor
fisub
(bad)
in
(bad)
push
mov
outs
jne
sbb
in
jl
xor
leave
pop
aad
call
clc
fs
pop
dec
pop
cmp
(bad)
pop
and
lods
xchg
add
adc
lods
mov
mov
push
pop
outs
aaa
inc
int3
jbe
loopne
push
daa
xchg
xor
push
inc
fcomp
or
mov
fwait
inc
jmp
push
aad
inc
out
jno
(bad)
ins
xchg
sar
mov
sbb
mov
out
dec
cld
xor
push
retf
push
retf
push
mov
inc
push
push
jecxz
out
sub
retf
test
repnz
and
and
sti
cmp
cwde
or
int
retf
popf
das
mov
mov
dec
mov
mov
sub
sbb
cdq
xchg
repnz
push
test
inc
fsubr
jnp
rol
fld
dec
xor
or
sbb
popa
popf
inc
jo
mov
sub
mov
scas
or
mov
xor
stc
xchg
mov
repnz
fiadd
and
cs
out
xchg
ret
sbb
inc
imul
cmp
rcl
push
mov
push
push
in
fisub
jg
xor
xchg
pop
xor
mov
sbb
push
adc
popf
and
add
repnz
(bad)
lods
jno
pop
bound
lahf
jne
sbb
adc
cmp
and
jb
lea
xor
shl
hlt
push
or
ret
dec
xor
repnz
jp
lods
mov
popa
mov
sbb
push
fwait
xchg
xchg
jle
sti
(bad)
addr16
shl
jmp
jl
stos
pop
xor
jmp
or
retf
(bad)
sub
sbb
ja
test
mov
repnz
hlt
push
mov
sti
iret
push
inc
(bad)
(bad)
add
icebp
mov
pop
mov
mov
cmp
fild
fild
and
xor
lea
fsubr
or
scas
sahf
sysexit
ret
bound
bound
mov
add
dec
dec
inc
adc
rcr
sbb
sbb
xchg
or
dec
inc
in
adc
cmp
pusha
mov
int3
ins
mov
sbb
jge
stc
xchg
inc
lock
fxch
mov
out
sbb
inc
push
stos
arpl
aas
gs
in
mov
rcl
ret
add
xchg
jle
jo
or
mov
test
das
aas
mov
aaa
repnz
mov
clc
xchg
mov
loopne
into
outs
mov
jp
pusha
or
leave
xchg
test
sub
fdivr
mov
mov
aas
and
push
dec
into
pop
leave
push
lods
pop
ins
mov
inc
adc
pop
dec
mov
sub
sbb
out
mov
pusha
ins
mov
sbb
jo
add
mov
hlt
and
sub
and
jne
mov
test
xor
xor
dec
aaa
jge
inc
push
in
imul
jnp
inc
test
scas
xor
lahf
cmps
mov
stc
inc
push
push
and
sub
cmpps
cmp
cmps
cmps
sbb
sbb
lea
sub
mov
fiadd
fiadd
jo
iret
jl
sbb
loope
sar
dec
inc
and
add
adc
ds
xor
cmp
and
dec
jl
dec
pop
fsubp
jo
enter
test
sbb
shl
fisttp
out
les
fcmovnb
cmp
xchg
inc
mov
xchg
pop
xchg
pop
pop
pextrw
mov
fbstp
std
inc
shl
inc
xlat
push
push
and
jmp
(bad)
lock
mov
je
mov
cld
add
push
js
ret
pop
test
push
test
es
jbe
or
xor
mov
xchg
scas
icebp
jmp
cwde
sahf
push
scas
cmp
mov
add
repz
frstor
leave
sub
lods
push
shr
ins
outs
and
xor
xchg
push
add
js
je
adc
shl
jmp
out
xchg
test
cdq
pop
jnp
cwde
sar
fist
jecxz
sbb
sbb
push
sub
(bad)
mov
sbb
xchg
mov
add
movs
sub
adc
mov
jecxz
loope
pop
and
imul
sub
xchg
cmp
dec
and
sub
adc
pop
call
mov
inc
in
cmp
xchg
dec
sub
push
dec
mov
xchg
fwait
add
xchg
pop
fwait
jns
popa
loopne
jae
jg
xor
outs
movs
pop
stos
int
jno
mov
push
int
sub
sub
dec
xchg
ret
(bad)
mov
jbe
inc
ja
cmp
addr16
aad
xchg
repz
lods
and
mov
jb
scas
shl
stc
call
mov
pop
cmp
xlat
(bad)
fisubr
sahf
mov
push
pop
mov
cmp
lock
rep
push
fild
clc
push
leave
jl
mov
test
sbb
jo
push
push
test
cmp
int3
cdq
push
movs
push
adc
ja
(bad)
or
out
jns
js
cwde
jmp
mov
jnp
jbe
(bad)
mov
sub
sub
(bad)
sbb
xchg
hlt
out
sub
ds
xchg
push
mov
jb
sbb
sub
cmp
sbb
aaa
outs
mov
sbb
xchg
mov
jecxz
mov
inc
mov
adc
es
jns
ret
push
(bad)
iret
sub
pop
fimul
mov
jle
rol
cmp
shr
call
jg
pop
test
xchg
cmp
and
jg
mov
jle
dec
adc
daa
sub
ds
xchg
jae
xlat
repz
push
push
xor
push
xchg
pop
or
stc
(bad)
jmp
xchg
inc
sbb
inc
fcom
add
push
das
dec
xchg
gs
stos
and
mov
pop
fistp
mov
cmp
xor
cli
add
icebp
into
mov
mov
push
cdq
mov
jmp
push
fwait
jb
and
imul
es
jae
pusha
ror
fcmovnb
pop
sbb
mov
jb
xlat
pop
and
or
sbb
or
enter
scas
ret
sub
mov
mov
into
imul
rcl
in
movs
add
and
jnp
into
and
mov
mov
inc
cli
jmp
imul
stc
mov
pop
mov
push
pop
pmulhuw
mov
mov
add
imul
push
jmp
sub
jnp
sub
loop
inc
adc
mov
and
in
mov
clc
dec
movs
lea
and
cmp
lahf
rol
add
pop
mov
(bad)
aad
pop
sbb
inc
popa
int3
pop
sub
mov
iret
jmp
pop
fiadd
or
xbegin
pop
inc
pop
mov
cmp
mov
pop
sbb
mov
ret
cdq
jno
mov
int3
adc
mov
mov
mov
mov
and
in
icebp
and
nop
hlt
popa
sub
je
adc
test
iret
mov
clc
std
inc
pop
test
dec
sahf
mov
mov
or
mov
mov
aam
adc
and
daa
bound
pop
mov
mov
push
aaa
mov
push
mov
popa
push
xchg
mov
push
icebp
jmp
cmp
call
cmp
dec
add
jnp
cmp
jns
fsubr
rcl
test
cdq
scas
push
movs
test
out
pop
fmul
std
gs
repz
xchg
mov
jge
sbb
lgs
xor
add
pop
xor
adc
in
mov
mov
std
out
sbb
scas
(bad)
push
xchg
in
loope
ret
stc
or
shl
ret
(bad)
cmp
sub
hlt
rcr
imul
rcl
imul
fild
mov
inc
xchg
lods
stos
stc
fwait
sbb
icebp
jb
or
sbb
adc
mov
data16
mov
mov
mov
cmp
mov
xor
or
mov
jp
(bad)
mov
push
aaa
mov
scas
aaa
ss
pop
mov
jmp
or
push
neg
add
mov
das
add
in
ret
(bad)
inc
(bad)
mov
mov
adc
push
fsub
and
jmp
aas
push
mov
sbb
adc
scas
fwait
jbe
ja
rol
inc
jecxz
add
in
push
push
int3
imul
jns
nop
or
xor
lea
daa
div
das
mov
mov
pop
cwde
(bad)
push
test
cmp
mov
in
daa
push
movs
push
jl
ret
push
jae
jno
daa
and
or
aas
xchg
cmps
cmp
inc
xchg
pushf
mov
mov
push
loope
mov
dec
dec
js
sub
mov
(bad)
pusha
sahf
jnp
sbb
mov
xchg
scas
mov
es
scas
inc
dec
sti
icebp
fs
mov
mov
inc
(bad)
rcr
mov
sub
and
test
cmp
pop
call
(bad)
(bad)
(bad)
pop
mov
xchg
ss
mov
arpl
fcomp
or
lahf
and
cld
and
mov
pop
repz
jecxz
hlt
mov
push
sar
xor
iret
out
or
pusha
int
or
sbb
stos
push
mov
xchg
ror
movs
(bad)
sahf
cmp
out
sub
and
hlt
add
in
push
mov
mov
jae
xchg
(bad)
ja
lods
imul
fisttp
and
xchg
retf
movs
xor
ret
in
je
ins
scas
inc
and
aad
icebp
cld
(bad)
mov
ds
ss
ret
sbb
test
push
inc
xor
cmps
and
mov
jle
outs
pop
js
mov
cmps
fdiv
mov
retf
sub
inc
(bad)
xchg
xchg
sti
mov
adc
imul
and
mov
aaa
mov
mov
(bad)
pop
sbb
shr
clc
mov
cmp
and
pop
jno
xor
mov
ds
fcom
fdiv
rcl
cmp
rol
sbb
push
mov
outs
imul
jge
mov
adc
imul
icebp
(bad)
cdq
pusha
inc
fdivr
add
lods
stc
sti
int3
push
push
inc
add
and
imul
jle
add
(bad)
xchg
push
cmp
xor
in
dec
daa
test
stos
xchg
mov
jae
or
cmp
pop
xlat
int
test
jno
js
push
adc
cmp
add
call
jmp
sub
mov
sub
rol
pop
jnp
retf
(bad)
popa
push
adc
out
repnz
shr
sbb
xchg
push
rol
sub
outs
mov
es
fsubr
mov
jnp
pop
cmps
push
ins
js
fcom
dec
add
fs
es
int
popa
int
in
sbb
and
inc
lea
jl
pop
xor
je
cmp
push
popf
or
pop
sub
fs
mov
cmp
sbb
sub
dec
pop
fst
sar
adc
mov
push
pushf
ret
sbb
xchg
test
gs
dec
outs
jnp
mov
fst
faddp
jns
fld
data16
adc
mov
push
ds
xchg
lock
bound
or
add
mov
jp
pop
sub
dec
popa
push
or
sti
out
sub
xlat
inc
es
fisub
fwait
mov
mov
jno
cmp
dec
(bad)
inc
jns
outs
adc
(bad)
push
or
lock
push
sbb
fldcw
fs
shl
inc
cmp
and
cmps
jge
enter
xor
lods
jge
fwait
dec
fst
dec
and
test
jmp
stos
es
jne
mov
mov
setb
xchg
jp
not
mov
fild
fisttp
jbe
jno
fnstsw
js
xor
inc
sysret
jge
mov
out
sbb
cmp
adc
push
mov
stos
sbb
into
sbb
or
jge
(bad)
aas
push
in
adc
mov
pop
sbb
out
in
jo
jnp
mov
or
aaa
cmp
mov
in
enter
jl
inc
xchg
out
xchg
mov
cmp
sti
mov
rcr
push
inc
mov
push
lods
mov
dec
cs
js
and
pop
leave
inc
shl
xchg
pop
scas
test
out
or
(bad)
xchg
push
or
(bad)
lods
cwde
nop
pop
adc
mov
dec
in
sub
inc
bound
jp
pop
inc
mov
js
jecxz
sbb
add
jnp
inc
retf
xchg
xchg
xchg
retf
in
outs
mov
dec
pusha
ds
aas
pop
sar
test
sub
ficomp
in
ror
cmp
pop
cmp
mov
sub
mov
xchg
mov
xlat
loopne
cmps
call
push
cs
inc
add
enter
xchg
leave
cmp
push
sti
xchg
clc
adc
loope
pop
adc
(bad)
mov
mov
add
ret
leave
mov
pop
shl
push
stos
pop
lods
adc
cmp
adc
outs
xor
inc
lea
or
push
push
out
neg
or
fstp
neg
cmp
jle
add
stc
sbb
(bad)
retf
mov
sbb
jmp
jp
fwait
cmps
cdq
and
(bad)
clc
cmp
ficomp
jg
enter
cmp
cli
mov
or
xchg
and
inc
jmp
cmp
fs
fst
(bad)
call
jl
mov
lods
adc
add
push
in
mov
pushf
call
or
(bad)
aaa
fadd
gs
stc
adc
pop
shl
add
cs
repz
lock
data16
frstor
in
(bad)
and
test
lods
test
and
push
xor
mov
lahf
sbb
cs
aad
mov
enter
stc
and
mov
out
and
jb
outs
repz
stos
outs
xor
ficom
xchg
sbb
lock
xchg
mov
fadd
das
aas
sbb
mov
es
mov
or
xor
pop
(bad)
xchg
add
inc
leave
and
sbb
cmp
sub
out
retf
xchg
clc
lods
cmp
ret
or
xchg
mov
pop
push
lods
dec
adc
add
jno
xchg
cmp
cmp
inc
xchg
inc
mov
adc
mov
arpl
ds
mov
(bad)
popa
(bad)
cli
loopne
es
pop
outs
das
pop
or
cli
mov
aad
xor
xchg
popf
fist
sbb
inc
in
dec
jg
and
sbb
leave
ja
mov
or
inc
mov
mov
rcl
jecxz
js
sub
pop
jae
pushf
unpckhpd
loop
sbb
mov
xchg
dec
loopne
sub
fs
add
xchg
mov
inc
dec
push
push
push
mov
cli
das
sub
lock
mov
dec
leave
retf
xchg
lods
sub
mul
and
inc
inc
push
imul
push
test
push
xlat
jno
add
jp
addr16
inc
xacquire
mov
mov
ja
outs
and
loop
mov
sti
push
sti
test
dec
in
dec
cld
out
push
inc
inc
dec
xchg
cmp
dec
hlt
and
jp
xchg
cmp
push
and
ds
loop
and
mov
mov
jbe
xchg
aam
and
ja
ja
adc
test
stos
adc
cmp
arpl
xor
lods
stos
or
jmp
pop
lods
mov
call
out
adc
out
sbb
mov
sbb
out
xchg
jmp
mov
cmp
imul
xor
sub
mov
xlat
inc
enter
pop
sbb
sti
mov
ror
ror
mov
mov
stc
xor
mov
loope
std
mov
xor
xlat
xor
dec
into
dec
cmp
test
clc
sub
iret
mov
mul
inc
mov
dec
mov
cmp
(bad)
leave
inc
mov
push
and
shl
pop
pusha
push
cmps
(bad)
xor
sbb
call
jbe
dec
mov
test
retf
cmps
fsubr
add
xor
jmp
pop
and
clc
jne
mov
mov
push
or
add
int
jmp
aad
sbb
loope
cmp
adc
mov
std
inc
in
outs
int
and
pop
les
mov
mov
push
sbb
stos
xchg
adc
xchg
inc
cmps
test
fiadd
(bad)
jg
retf
add
hlt
jne
sub
jnp
enter
(bad)
(bad)
push
fwait
mov
daa
dec
mov
retf
dec
and
rol
fdivr
test
adc
jmp
std
shl
pop
lock
xchg
ficomp
mov
xchg
xor
mov
icebp
fwait
aaa
movs
(bad)
cs
lahf
jecxz
cmp
js
popf
pop
test
enter
inc
cwde
push
repnz
mov
push
stc
add
sbb
and
ret
mov
call
ret
mov
push
aaa
sbb
push
adc
xchg
dec
in
sti
sub
mov
push
mov
jmp
and
fucomp
mov
call
es
xor
bound
les
pop
push
xor
jle
retf
pop
jno
mov
inc
in
ret
in
in
repnz
std
repnz
cmps
add
clc
mov
clc
push
adc
adc
xlat
out
repz
push
dec
pop
dec
jmp
inc
jns
pop
mov
fiadd
push
stos
pop
xchg
mov
or
inc
pop
stc
cmp
add
jo
je
rcl
enter
iret
or
sti
mov
mov
popa
xor
or
dec
sub
lock
cwde
sub
dec
fmul
push
xchg
call
pop
xor
aas
xchg
shl
xchg
stos
dec
jmp
pop
in
out
pop
icebp
shl
lods
sub
cld
cmp
ds
push
cmp
retf
dec
and
mov
cmp
int
sbb
cs
shr
lods
mov
outs
ror
lods
int
js
mov
out
dec
pop
adc
stc
adc
test
push
add
jno
repz
mov
mov
aaa
fs
out
outs
movs
jno
popf
les
int3
sub
(bad)
dec
aaa
mov
adc
push
jle
add
out
pop
jo
loope
gs
mov
arpl
jg
push
mov
mov
test
in
cmp
jb
icebp
sbb
xor
scas
enter
lahf
dec
xor
call
(bad)
push
lods
dec
icebp
movs
push
jb
out
(bad)
adc
(bad)
mov
xchg
out
pop
sahf
cmps
xchg
div
scas
lods
adc
and
or
pop
xchg
hlt
(bad)
mov
mov
sbb
fistp
xor
sbb
bound
popf
push
bound
inc
es
aad
cmp
stos
cmp
pop
xchg
sbb
and
(bad)
repnz
outs
cdq
jecxz
mov
imul
inc
cwde
ins
inc
add
add
sub
cmp
add
push
xor
cli
push
mov
jge
aas
(bad)
iret
mov
js
inc
add
xor
push
pop
mov
xchg
cmc
inc
js
scas
xor
rcr
retf
adc
iret
push
or
sub
mov
ret
inc
mov
lahf
out
pop
xchg
sbb
mov
jno
outs
cmp
sub
out
inc
scas
sub
fs
ss
cmps
jbe
cmp
fbstp
out
mov
in
imul
push
mov
push
popa
xchg
sti
fcom
push
adc
sub
movs
or
push
sbb
mov
mov
in
inc
push
les
call
mov
scas
popf
fcomp
jo
and
xchg
fbld
sbb
out
lods
push
stos
jno
fmulp
dec
push
xchg
dec
sbb
test
sbb
mov
or
add
xchg
xor
sub
mov
shl
cmp
jnp
sub
jb
mov
mov
(bad)
cmc
jecxz
aaa
adc
inc
sub
stc
loope
jle
push
push
push
mov
mov
ret
adc
(bad)
out
and
ins
xchg
jle
std
fcomp
jne
sar
cmp
sti
mov
push
xchg
dec
inc
sub
out
mov
outs
retf
xor
or
push
xor
js
push
in
adc
cmps
mov
pop
leave
jne
pop
push
popa
js
fwait
retf
or
lods
imul
jne
dec
mov
cmp
inc
push
fs
add
cli
and
in
jbe
pop
jne
data16
sub
mov
(bad)
sti
jnp
aam
arpl
jne
cmps
loopne
xor
mov
inc
popa
jecxz
or
sub
call
cmp
mov
jcxz
jbe
xchg
and
xchg
out
js
loop
mov
and
out
pop
js
mov
sbb
aad
adc
cmp
je
pop
mov
lods
popa
cmp
mov
stc
stos
push
cdq
mov
lods
(bad)
iret
int
stc
add
out
ins
dec
(bad)
cmp
xchg
in
pop
movs
sbb
mov
mov
xchg
mov
arpl
out
xchg
test
add
icebp
cmps
add
ret
mov
(bad)
sub
push
xchg
in
jg
test
and
repnz
retf
or
jno
in
cmps
neg
(bad)
int3
idiv
adc
mov
shr
(bad)
hlt
ds
ret
inc
pusha
test
sub
outs
jo
iret
jge
aaa
mov
xchg
push
push
(bad)
cld
cmp
or
push
cmp
aam
dec
retf
xor
jb
mov
test
scas
pop
xchg
sub
fisubr
(bad)
xlat
dec
dec
repz
ins
inc
into
sub
je
icebp
in
mov
stc
stc
xor
jecxz
lods
ja
push
pop
addr16
pop
pop
mov
jbe
pop
cmc
data16
pop
or
(bad)
cmp
dec
xchg
inc
jg
jmp
(bad)
xor
in
adc
call
mov
push
ds
jbe
add
ins
ja
adc
ja
arpl
cmp
pop
cmc
std
jge
mov
js
adc
jns
aas
jb
mov
call
ds
jmp
aas
fisubr
test
ja
mov
cmp
push
add
dec
sahf
shl
int3
repnz
dec
inc
call
fwait
cmp
mov
fidivr
pop
inc
out
pop
adc
xchg
es
pop
xchg
nop
sub
cmp
sub
mov
mov
pusha
imul
fimul
jmp
inc
mov
sub
cs
pop
ret
add
and
xchg
retf
popa
nop
jno
cmps
mov
out
gs
test
dec
xchg
inc
jecxz
aad
das
xor
(bad)
jp
mov
inc
ja
and
hlt
call
lds
popf
mov
pop
mov
ja
push
std
ret
push
ficomp
sbb
call
and
ds
test
sbb
inc
sub
mov
inc
xchg
lods
sub
mov
jbe
pop
dec
jae
jmp
mov
pusha
mov
add
out
popf
lods
or
pop
cmp
dec
adc
out
jae
popa
arpl
cmp
mov
sbb
iret
and
mov
mov
test
xlat
ficom
xor
jmp
call
inc
ret
jae
enter
cmp
lods
and
cmp
jo
call
and
loop
add
scas
jne
aaa
outs
fsin
ss
push
jae
nop
int3
cmp
or
fwait
xor
mov
out
mov
div
add
in
jl
mov
sbb
(bad)
sbb
mov
sahf
div
mov
add
inc
dec
lods
les
test
pop
cmc
fwait
call
mov
dec
in
adc
cmp
aas
scas
push
pop
xor
dec
fsubr
fs
ret
pop
and
cmp
push
lds
mov
movs
sahf
jp
xor
mov
jb
out
xchg
pop
inc
pop
dec
outs
mov
call
mov
aad
aas
pop
xor
pop
mov
aaa
adc
mov
dec
jp
xchg
jo
push
mov
jmp
movs
outs
out
ins
inc
je
inc
scas
inc
xor
push
inc
sbb
dec
int
sbb
and
stos
(bad)
jnp
movs
data16
fisub
lea
jge
pop
sbb
je
mov
ins
push
jmp
ins
adc
xor
stos
in
jge
pop
pop
push
(bad)
cmc
pop
loope
mov
mov
fimul
sti
add
pop
ficomp
cmps
adc
aas
jae
jo
aam
jb
pop
aam
das
or
aam
mov
add
movs
jb
pop
gs
lds
jmp
test
xor
mov
rol
movs
aas
xor
add
push
cmp
cmp
push
or
(bad)
shl
xor
sar
fucomi
cmp
ss
ss
cmp
mov
push
stc
pop
sub
test
lock
dec
shr
mov
jecxz
mov
out
pop
outs
shl
lock
scas
cmc
push
pop
add
loopne
mov
das
fisubr
add
push
loope
adc
pop
bndldx
push
into
cli
xchg
inc
mov
xor
inc
dec
mov
and
out
push
xor
ins
rcr
stos
sahf
xchg
xchg
cmc
sbb
(bad)
push
in
xor
pop
sbb
mov
repnz
into
aaa
mov
popa
mov
push
jmp
mov
xchg
ret
pop
jmp
sbb
inc
rcr
jge
xor
mov
and
call
call
jbe
adc
jle
xor
pop
jg
mov
cmps
in
fbstp
(bad)
jge
icebp
add
movs
test
xor
stc
sub
and
jecxz
or
add
out
call
movs
loopne
lods
in
push
mov
lods
xor
xchg
movs
adc
sub
cmovb
add
addr16
mov
test
xor
cwde
mov
mov
inc
or
leave
cmp
mov
repnz
pop
in
std
and
sub
in
mov
call
ins
mov
ds
ins
cmp
sub
or
xchg
sbb
mov
imul
mov
cmp
inc
sub
out
pop
sbb
sar
and
dec
int
mov
and
das
movs
shl
ret
adc
push
push
lea
rcl
and
dec
data16
aam
xchg
cmp
out
adc
data16
pop
mov
iret
gs
out
lahf
sub
shl
and
pop
cwde
sub
cmp
jl
out
jne
push
ret
mov
mov
rcl
inc
arpl
jecxz
inc
mov
cli
or
dec
fidiv
lds
fmul
popf
inc
pop
test
popa
movs
scas
rcl
arpl
push
sub
xor
and
push
mov
cmp
ror
ret
sbb
(bad)
mov
adc
mov
pop
call
jg
neg
xchg
daa
ds
jno
push
sti
mov
stc
je
stos
pop
jle
sub
adc
pusha
mov
xchg
test
or
dec
ror
mov
and
add
push
and
std
push
xchg
sub
sbb
pop
mov
push
mov
and
inc
jmp
push
imul
popa
movs
ss
iret
fild
aam
ins
je
mov
(bad)
add
bound
cmp
dec
bound
xchg
out
fidiv
call
ja
push
sub
out
enter
aad
idiv
ror
xor
jmp
pop
mov
pop
or
ss
pushf
dec
xor
jp
xor
leave
sub
add
dec
jb
mov
push
cmp
scas
shl
mov
cmps
inc
ss
cmp
lea
in
or
jl
lods
jnp
loopne
stos
sub
fwait
js
add
mov
hlt
mov
fimul
ins
pusha
push
or
xchg
fcmovnbe
and
sar
neg
jmp
adc
cdq
fimul
stos
pushf
push
das
cs
rcr
inc
jmp
iret
push
leave
mov
scas
fucom
adc
xchg
shr
jb
mov
mov
sbb
push
cdq
xchg
enter
mov
movs
js
jnp
and
test
jae
xlat
pop
retf
jge
push
movs
push
sub
lods
dec
fwait
(bad)
add
mov
pushf
jb
inc
adc
out
pop
rol
jne
repz
mul
mov
(bad)
xchg
movs
or
retf
jl
xor
sub
ror
mov
and
fmul
in
jne
iret
or
dec
lods
cmp
imul
push
jne
push
(bad)
mov
outs
and
xchg
sub
jae
mov
aas
mov
out
in
adc
stc
fmul
and
outs
ins
fsub
pop
dec
mov
js
les
std
cmp
sbb
or
or
movs
test
jae
aas
sti
inc
popf
das
mov
xor
fmul
push
loop
adc
xor
adc
fidiv
fwait
and
mov
mov
std
add
pushaw
pop
jmp
shr
add
cmp
add
test
mov
mov
scas
and
sbb
xchg
xor
lock
mov
sti
pop
and
mov
mov
mov
xchg
and
outs
test
mov
mov
loope
jnp
fimul
cmps
imul
and
xlat
clc
fdiv
mov
inc
punpcklwd
xchg
stos
mov
test
and
jo
sub
or
(bad)
xlat
shr
cmp
xchg
or
jecxz
jp
jne
push
jmp
popa
mov
or
(bad)
stc
inc
cmps
xchg
mov
fst
mov
xchg
mov
sbb
js
add
ins
lods
mov
push
jo
arpl
mov
cwde
push
aaa
inc
inc
cmc
and
mov
or
push
icebp
mov
mov
mov
mov
lods
xor
popf
dec
mov
sub
mov
(bad)
inc
xchg
xchg
in
adc
sbb
add
sub
aas
mov
cwde
xlat
adc
mov
arpl
ins
ins
mov
in
sbb
ret
out
dec
pop
jp
neg
call
push
mov
push
retf
cmp
loop
pop
xchg
mov
xor
out
pop
push
popa
mov
push
add
dec
dec
in
into
adc
gs
cmp
cs
inc
scas
cmp
cmp
xor
push
mov
xchg
mov
adc
aas
or
ret
and
cmp
retf
enter
icebp
cmp
jl
pop
mov
test
mov
inc
bound
dec
inc
gs
or
sbb
dec
aam
xchg
out
sub
out
(bad)
xchg
mov
movs
sbb
out
inc
in
sbb
and
lock
ret
pop
cwde
dec
enter
cdq
loop
adc
pop
sbb
std
je
cmps
mov
daa
in
cwde
xchg
scas
mov
sub
sbb
std
cmp
add
sar
cdq
fwait
pop
lods
icebp
inc
fisttp
jae
mov
push
and
and
dec
retf
int3
fld
dec
int
sub
nop
jmp
or
pop
fadd
xor
popa
sub
lahf
retf
retf
pop
xchg
xor
fwait
sbb
sti
in
(bad)
(bad)
mov
outs
xlat
stos
or
adc
adc
cmps
das
sub
adc
sub
xchg
inc
lods
stos
iret
mov
cmp
sbb
jae
xor
jns
jp
pusha
push
pop
ins
mov
xor
push
out
jecxz
mov
xor
push
inc
pop
(bad)
rcr
cmp
aaa
xor
shr
jbe
xchg
in
jo
arpl
push
(bad)
mov
sub
test
mov
sbb
les
call
imul
arpl
mov
iret
jmp
leave
cmps
je
sbb
xchg
mov
adc
add
push
ins
pop
dec
sbb
mov
mov
es
fdivr
xor
loop
mov
sub
cmp
sbb
sbb
mov
cli
rcl
rol
clc
pop
mov
or
inc
xchg
and
sub
aaa
xlat
xchg
ror
popa
out
cmp
jae
inc
(bad)
dec
push
inc
xchg
jns
enter
mov
loope
and
ret
mov
mov
mov
cs
nop
or
or
jp
fild
mov
pop
sub
jbe
out
inc
test
scas
(bad)
repnz
(bad)
in
rcl
lods
and
aaa
cmp
(bad)
and
add
cmp
sbb
jne
fucomi
jge
add
dec
in
out
mov
xchg
mov
mov
mov
(bad)
sti
cli
push
jge
sbb
pusha
sahf
gs
js
aad
pusha
adc
jbe
lods
out
jmp
pop
movs
mov
ins
pop
imul
or
ret
(bad)
jbe
pop
cmp
mov
clc
sbb
xchg
fadd
mov
or
test
aas
or
and
jp
call
fstp
push
inc
jne
data16
or
xchg
xchg
ins
and
jmp
rol
les
mov
jmp
jbe
movs
push
pop
dec
test
push
cmp
ja
cli
mov
jno
pusha
and
jecxz
sbb
jge
(bad)
mov
mov
lods
pop
adc
xor
ret
test
jmp
out
and
xchg
les
xchg
fcmovnb
ja
movs
popa
xchg
add
mov
shl
or
adc
mov
jge
outs
sahf
dec
daa
jne
mov
fsub
and
les
icebp
xchg
pop
or
ss
stc
sbb
sbb
leave
xor
inc
hlt
aam
mov
fsubr
enter
hlt
stos
cmps
or
jo
dec
dec
mov
push
fcmovne
cmp
ds
push
cld
fidiv
cmp
mov
mov
cmc
xchg
mov
(bad)
push
in
out
pop
imul
das
mov
push
call
xor
mov
push
mov
nop
neg
cmp
jecxz
ret
repz
mov
jge
inc
cmp
(bad)
xchg
sbb
or
jb
mov
(bad)
loope
out
jmp
(bad)
mov
lock
out
jno
aas
inc
or
sub
add
repz
sbb
xor
mov
es
imul
aas
gs
push
sub
cld
(bad)
js
cmp
sbb
in
or
test
std
sub
dec
xor
dec
jmp
inc
mov
mov
fnstsw
shr
mov
sbb
pop
into
sub
sbb
aad
retf
dec
rep
pop
not
cmps
jecxz
cli
lds
push
and
sub
push
pop
push
sub
sar
dec
mov
lods
ficomp
cmp
jns
mov
gs
imul
lods
test
pop
jnp
mov
inc
cmp
sbb
or
xor
mov
lods
leave
hlt
push
sub
mov
pop
push
jl
xor
and
push
jnp
jmp
icebp
sub
jle
jecxz
ins
lds
movs
mov
jno
je
shl
nop
(bad)
(bad)
or
add
(bad)
xchg
repnz
fbld
inc
add
shr
dec
(bad)
mov
sbb
mov
movs
ss
and
imul
sbb
mov
adc
sbb
xchg
(bad)
mov
add
int
sbb
add
mov
mov
mov
mov
xor
sbb
mov
jne
dec
add
pushf
sbb
loopne
mov
xor
jge
jg
inc
mov
sti
(bad)
test
dec
cmp
fs
pushf
sub
xchg
dec
mov
add
mov
pop
sub
inc
inc
and
jns
daa
and
inc
dec
out
sbb
mov
into
push
neg
std
in
mov
jbe
mov
lock
mov
add
test
mov
stos
jns
rcl
dec
xchg
sbb
pop
mov
out
or
cld
lea
pop
and
xor
sti
xor
popf
mov
mov
adc
push
sub
and
sete
sub
jmp
or
rcr
cmps
(bad)
pop
add
mov
icebp
mov
leave
jle
rcr
jnp
daa
adc
fimul
xchg
sub
ror
pop
aam
lock
xchg
jmp
push
xor
pop
jbe
retf
dec
adc
lea
pusha
adc
retf
or
sbb
push
cmps
pop
test
mov
mov
sar
sub
cmc
jno
fdivp
fwait
in
xacquire
shl
adc
adc
(bad)
into
mov
sbb
jg
mov
mov
pop
xchg
push
push
out
rol
fwait
ret
fimul
pop
shl
dec
fcomp
pop
push
xchg
inc
lock
or
xchg
ss
dec
mov
inc
jg
xchg
std
push
xor
scas
jl
lods
cmps
(bad)
mov
mov
add
mov
lods
and
das
cmp
inc
jo
jmp
ret
sbb
repnz
mov
ins
pusha
xor
cs
add
pop
imul
add
xlat
xor
stos
or
pop
fld
mov
mov
in
in
dec
mov
xchg
jo
mov
xchg
out
push
inc
mov
lods
push
and
sbb
xor
cmp
xchg
lds
imul
add
push
or
outs
pop
sub
or
cs
imul
and
cmc
push
mov
js
adc
lea
sub
adc
fldln2
popf
cmp
pop
xchg
aaa
xor
int
(bad)
iret
out
xchg
mov
sti
add
mov
adc
outs
dec
hlt
mov
je
shr
pop
jp
mov
or
shl
dec
jne
popf
mov
cmc
retf
cmc
sbb
mov
or
mov
aas
mov
xor
imul
xor
mov
mov
add
mov
lods
scas
jecxz
repnz
mov
or
outs
and
repz
sahf
or
mov
adc
test
and
inc
inc
fcmovnb
loope
xor
xor
jp
fisubr
(bad)
mov
inc
scas
and
mov
pusha
inc
fbstp
call
jb
call
les
pusha
xor
xchg
pop
rol
dec
hlt
xchg
mov
dec
mov
xor
jmp
int3
into
ss
xchg
mov
adc
cmp
xchg
pop
call
or
jo
arpl
outs
mov
fbstp
cmp
pop
(bad)
mov
push
sub
enter
fnstsw
cmp
and
sub
and
pop
mov
or
sub
sub
into
adc
dec
sub
fwait
lods
fisttp
xor
and
or
cmp
cld
sub
stos
mov
sub
jp
xchg
iret
loopne
in
sub
call
dec
stos
jmp
repz
sahf
xchg
(bad)
mov
enter
mov
inc
cmp
shl
mov
xchg
dec
mov
mov
leave
mov
push
pop
mov
xlat
ficomp
sbb
bound
aas
(bad)
out
push
inc
add
jnp
pop
add
inc
add
inc
mov
sub
push
and
loopne
icebp
(bad)
out
xor
ja
sbb
dec
cmp
xchg
sar
out
jbe
retf
add
xor
pop
push
and
jmp
cmp
cmp
hlt
ins
pop
enter
push
fsubr
jmp
ret
sti
(bad)
fstp
lods
mov
(bad)
cli
adc
movs
xchg
or
mov
shr
add
ss
enter
inc
add
pop
sahf
adc
sbb
pop
push
(bad)
fnsave
mov
sbb
push
mov
mul
(bad)
pop
dec
sub
fidiv
xor
and
and
pop
sar
ret
mov
dec
js
sbb
push
cld
mov
jmp
loope
shr
fbstp
pop
sbb
sub
pusha
inc
retf
loop
jb
cld
adc
popa
push
push
xor
jg
pop
cmp
fs
mov
pop
mov
xchg
jmp
pop
push
xor
inc
xchg
shr
enter
sbb
mov
ja
dec
pop
fdivr
dec
add
pop
inc
aad
cmp
bound
add
sub
iret
sbb
add
mov
push
jo
sub
outs
sbb
sbb
add
push
imul
popf
xor
mov
add
xor
aas
test
lds
das
call
rol
scas
sub
pop
add
push
iret
mov
ror
cmp
cmp
fld
int3
xchg
out
add
in
inc
idiv
data16
gs
pusha
xchg
mov
call
and
aam
xor
mov
pop
(bad)
mov
in
loop
std
into
ins
xor
jno
or
js
cmp
cmp
push
stc
jno
push
neg
out
cmp
dec
adc
mov
cld
int3
mov
push
and
add
lds
fimul
xchg
out
or
pusha
gs
jbe
and
lods
push
lds
push
dec
cli
inc
cld
inc
scas
es
xchg
or
mov
jmp
shl
cli
arpl
fisubr
lahf
pop
push
mov
add
inc
pop
cdq
sti
inc
mov
fstp
pushf
cmp
push
int
call
lock
(bad)
out
jmp
mov
xlat
mov
mov
jbe
dec
sbb
in
jne
or
test
add
pop
mov
scas
xchg
int3
or
and
push
mov
shr
xchg
out
hlt
and
inc
mov
xor
add
adc
ins
push
xchg
div
leave
pop
movs
and
xor
fsub
mov
cmp
push
pop
jle
mov
xchg
xor
cli
and
jg
(bad)
mov
pop
pop
or
fucomp
repz
and
xor
into
pop
cmp
xchg
call
add
xlat
jns
mov
frstor
xlat
sub
pop
fwait
jecxz
mov
retf
gs
idiv
inc
cmp
ja
push
retf
mov
fld
sahf
mov
mov
dec
in
lds
xchg
cmps
mov
and
aam
ret
loopne
jo
xor
repz
inc
sbb
jp
pop
dec
pop
daa
pusha
bound
sbb
mov
xlat
jecxz
xchg
adc
and
cmp
and
daa
cmp
push
jmp
ds
and
inc
push
cwde
test
dec
push
rcr
mov
jg
and
gs
adc
jl
mov
test
sbb
sub
mov
inc
xchg
movs
adc
mov
mov
repnz
lea
sub
lds
xor
mov
repz
push
dec
cmps
mov
pop
add
iret
loope
add
mov
pusha
push
sub
loopne
into
sub
leave
fimul
pop
es
cvtpi2ps
stos
sbb
sub
or
in
dec
(bad)
fldcw
push
xchg
mov
adc
add
pushf
(bad)
mov
mov
fs
inc
popf
das
adc
gs
mov
popa
inc
mov
nop
cld
mov
not
xchg
std
pop
inc
or
mov
and
fstp
mov
push
dec
imul
pop
cli
mov
aas
push
mov
(bad)
inc
into
scas
clc
cmp
in
out
aam
dec
idiv
fisttp
sbb
jno
push
or
push
jns
mov
inc
jp
mov
test
aad
aas
adc
rol
stos
cmp
xchg
sti
int3
sub
dec
jmp
or
push
(bad)
dec
(bad)
mov
jnp
sbb
dec
mov
shl
mov
sub
xchg
fcomi
xor
sar
mov
test
lock
push
repz
ins
(bad)
pop
outs
add
cmps
xchg
mov
ret
enter
mov
test
ret
jns
cmp
adc
jne
or
arpl
mov
xor
ror
mov
neg
out
(bad)
call
pusha
icebp
sahf
mov
iret
aas
shr
sbb
xchg
adc
jmp
sbb
call
and
nop
adc
movs
mov
aaa
int
adc
xchg
(bad)
adc
ret
push
mov
cmp
(bad)
xorps
mov
sbb
mov
pop
shl
dec
push
or
and
ret
fmul
pop
iret
xchg
push
inc
push
bound
push
ret
jbe
push
lods
fwait
je
lods
retf
scas
hlt
addr16
fcomp
mov
mov
stos
retf
rcl
nop
mov
inc
sub
rol
int
or
(bad)
icebp
sbb
inc
sub
mov
enter
xchg
out
retf
int3
inc
lods
xlat
pop
test
dec
fcom
pop
xor
sahf
jge
fwait
test
push
sahf
stos
add
sub
sub
mov
rcr
stos
dec
mov
sar
push
shl
jp
xchg
icebp
call
in
in
sub
das
cs
outs
neg
jb
fwait
mov
jmp
push
push
add
repnz
hlt
lahf
dec
xchg
xor
mov
dec
and
and
into
in
inc
ret
mov
imul
loop
arpl
mov
test
mov
cmp
sub
dec
mov
xchg
mov
push
xchg
cmp
inc
xor
push
dec
rcr
test
or
mov
xor
jle
ret
or
jno
imul
aam
ds
pop
repz
stc
loopne
push
in
pop
adc
adc
pop
xchg
jge
cdq
mov
mov
rcr
mov
imul
dec
bound
mov
dec
imul
mov
or
daa
push
inc
mov
cmp
in
inc
xlat
arpl
jno
jnp
mov
sbb
popa
cdq
retf
mul
jbe
retf
jb
push
and
pop
jns
fnsave
inc
(bad)
int3
jmp
test
lock
in
xor
ins
ret
movs
cmps
idiv
lods
cmc
xchg
pop
ins
movs
jg
pop
fwait
idiv
mov
repz
mov
mov
add
addr16
and
sbb
jl
xchg
mov
mov
out
sbb
pop
xor
sub
pop
jl
xchg
scas
outs
mov
jbe
fisttp
sub
mov
out
mov
push
in
lock
stos
stc
(bad)
mov
or
and
jbe
(bad)
in
lds
fwait
das
in
repz
sub
push
jbe
pop
aaa
ss
cld
fimul
mov
fwait
mov
jl
push
jae
mov
das
adc
loope
call
mov
xchg
jle
jge
push
mov
push
pop
push
pop
std
xchg
fld
sub
pop
cmp
pop
inc
sbb
or
or
cmp
nop
daa
mov
inc
mov
or
outs
out
xor
dec
imul
sub
add
adc
sub
mov
sbb
and
test
into
push
sub
xchg
loope
shl
jecxz
mov
outs
push
outs
lods
pop
sahf
(bad)
push
xor
mov
or
xor
jnp
out
mov
jnp
test
mov
add
sub
cmp
push
call
out
sub
push
add
xchg
pop
xchg
jae
stos
push
cdq
movs
mov
(bad)
jg
jl
int3
fidivr
cmps
push
inc
inc
in
mov
adc
push
out
sub
fstp
movs
fs
(bad)
nop
inc
adc
(bad)
xor
sbb
std
adc
(bad)
rcl
pop
in
popf
jb
enter
(bad)
mov
dec
neg
dec
lods
test
inc
jmp
imul
cmps
call
push
(bad)
fdiv
daa
es
or
add
loop
mov
pop
lods
or
sbb
es
cmps
dec
call
retf
popa
shl
test
and
sbb
shl
add
cdq
les
std
mov
jno
push
cmp
mov
adc
fldcw
scas
jmp
xor
dec
dec
cmp
push
aad
xor
movs
fld
mov
leave
push
xor
shr
ins
jmp
pop
stc
fisubr
mov
pop
imul
cld
xor
and
sbb
inc
mov
lahf
add
adc
xor
(bad)
(bad)
adc
xchg
dec
stos
rol
cmp
or
adc
test
(bad)
ret
dec
(bad)
shl
rcr
cmp
out
int3
jmp
xchg
add
out
push
push
mov
mov
dec
lods
sbb
sbb
push
add
mov
mov
sbb
and
dec
cmp
mov
les
aaa
aaa
jge
sahf
sbb
adc
xchg
(bad)
aam
or
into
cmp
jecxz
loopne
push
add
out
icebp
xchg
cmp
mov
xor
and
loop
ins
dec
dec
mov
add
cs
sub
fcmove
clc
fwait
sub
adc
cs
loope
test
call
dec
push
xchg
ffreep
fbstp
inc
or
mov
mov
dec
aas
je
sbb
jno
lea
fldln2
daa
idiv
adc
arpl
sbb
adc
adc
dec
add
pop
push
mov
sub
mov
icebp
mov
cmp
push
imul
jno
in
add
jge
jg
clc
in
(bad)
xor
xor
mov
ss
mov
and
call
inc
(bad)
mov
xor
je
or
stos
jl
mov
ret
int
scas
adc
cmp
cdq
test
fild
dec
call
sbb
jge
jns
inc
or
add
xlat
cli
push
push
mov
stos
fwait
retf
icebp
ret
loop
fwait
jl
jb
push
rcr
mov
jg
sbb
or
daa
mov
pop
add
sub
icebp
xor
loope
lods
lea
jae
mov
jmp
xor
mov
rol
daa
adc
xchg
mov
into
enter
in
imul
cwde
sbb
inc
mov
cmp
hlt
test
addr16
xor
jo
ss
cmc
cmp
and
sub
push
fld
leave
jg
pop
scas
mov
and
movs
lods
jecxz
mov
or
mov
xor
sbb
call
jo
push
jne
cmp
mov
push
push
add
ins
xor
pop
xor
sbb
xchg
add
ins
inc
jnp
fwait
xor
add
or
jo
icebp
add
pop
push
add
push
xchg
xchg
jge
mov
in
mov
mov
daa
inc
mov
and
xor
push
jmp
push
hlt
inc
adc
dec
add
rcl
(bad)
stc
test
lahf
int
xchg
pop
jmp
dec
out
stos
stos
push
jp
jns
loopne
lahf
shl
mov
gs
popa
xchg
push
in
call
es
in
out
jmp
jp
loopne
test
or
cli
cdq
(bad)
iret
fwait
std
shl
or
pop
and
push
sar
in
xchg
aam
mov
jb
inc
and
pusha
mov
and
bound
dec
jno
fwait
ret
dec
and
bound
xchg
jmp
cwde
cli
pop
adc
push
and
movs
cmp
mov
in
add
and
lock
jp
jle
call
push
add
js
jno
je
aaa
into
jb
add
add
cmp
bnd
movs
fisubr
and
inc
adc
sub
push
inc
lock
mov
push
aad
into
ins
pop
add
loop
inc
ret
neg
mov
jbe
(bad)
(bad)
in
or
mov
fcmove
or
inc
pop
xchg
and
enter
lahf
(bad)
loopne
inc
(bad)
loope
jo
daa
test
jmp
xor
jne
lods
cwde
in
dec
pusha
pop
inc
mov
mov
icebp
mov
scas
and
ja
fmul
jne
pextrw
lods
aaa
dec
dec
inc
xchg
mov
fisub
fwait
cli
scas
push
out
movs
fld
retf
cmps
in
js
es
repnz
outs
les
lds
mov
mov
sar
lds
fdivr
test
aam
test
xor
fisubr
jg
xchg
movs
add
imul
pop
cmp
or
pop
xchg
pop
sti
jns
test
mov
inc
push
xor
fdivr
and
pop
dec
mov
scas
jecxz
cmp
inc
imul
es
inc
pushf
loopne
hlt
mov
and
dec
push
and
sbb
adc
(bad)
mov
(bad)
aaa
call
ds
rol
xor
dec
mov
pop
outs
push
push
jge
imul
sbb
je
mov
ret
and
adc
stc
fwait
out
bound
cwde
mov
std
or
mov
mov
out
adc
in
jns
loop
(bad)
pop
dec
pop
out
pop
out
xor
sub
pop
lods
fidivr
hlt
div
je
push
fstp
je
outs
inc
std
jbe
sbb
scas
mov
sbb
fnstcw
jmp
xchg
(bad)
outs
push
mov
pusha
push
jmp
outs
stos
push
dec
adc
jg
inc
icebp
inc
int3
pop
push
fbld
push
retf
cwde
sahf
push
(bad)
push
adc
stos
cli
cmp
xchg
inc
cmp
inc
not
cli
pop
xor
xchg
mov
push
ret
ds
shr
mov
aad
xchg
loopne
mov
jle
xlat
enter
dec
sub
loope
int
xchg
loopne
stos
and
mov
mov
mov
push
das
jg
add
sbb
enter
int3
xor
out
gs
pop
outs
(bad)
sub
adc
push
mov
inc
clc
sbb
and
movs
jbe
jae
pop
mov
inc
cmp
adc
test
pop
sbb
pop
and
inc
sbb
dec
ja
fbstp
cmp
rcr
ret
(bad)
push
std
daa
mov
mov
mov
cld
and
and
mov
lahf
xor
and
xlat
dec
(bad)
jmp
les
cdq
lock
dec
cld
mov
mov
mov
pop
int
clc
xchg
rcl
and
int3
rol
(bad)
cli
pushf
shl
outs
movs
ds
xor
les
mov
rcr
mov
jmp
or
push
mov
out
pushf
xchg
ins
fwait
cmp
aas
jmp
nop
pop
sbb
arpl
fimul
xchg
int3
dec
mov
or
movs
(bad)
(bad)
jmp
pusha
nop
jne
fdiv
cmps
mov
clc
mov
pushf
sub
xor
outs
mov
pop
(bad)
sbb
inc
mov
xchg
push
pop
retf
into
loope
inc
pop
add
es
add
pop
inc
mov
retf
call
int
imul
test
inc
push
fisttp
mov
shld
ins
in
and
jecxz
add
jp
xchg
fldenv
mov
xor
cmp
inc
jno
movs
mov
push
and
stc
cmp
stos
mov
repnz
adc
and
mov
cld
sub
mov
iret
push
repz
popf
dec
je
out
out
std
cmp
test
idiv
loopne
(bad)
push
into
mov
rcl
mov
(bad)
push
cmps
ins
rcr
fild
fisttp
pop
adc
es
jno
ficomp
nop
push
stc
or
ficom
sbb
inc
repnz
aad
loope
cdq
shr
cmp
mov
sbb
xor
(bad)
test
or
pop
cmp
test
cdq
(bad)
mov
pushf
push
pop
adc
push
or
sbb
inc
xor
push
pop
mov
iret
dec
call
sbb
xchg
mov
push
jp
lahf
mov
sbb
jne
into
pusha
xchg
jno
shl
leave
add
jmp
clc
fmul
cmps
mov
repz
xor
in
fdivr
jne
push
movs
ja
pop
xchg
sar
stos
add
mov
(bad)
or
adc
arpl
push
outs
and
or
dec
stos
data16
enter
fs
(bad)
sub
pop
add
ret
outs
push
in
call
jae
loope
xor
loopne
bound
pop
test
mov
ins
xor
push
int3
out
sbb
mov
mov
test
cmp
lock
cmp
shr
ret
xchg
scas
add
rcl
mov
popa
addr16
dec
dec
xlat
sahf
ret
mov
pop
je
or
add
jecxz
mov
fimul
daa
xchg
pop
cmp
sbb
xor
sub
jo
cmp
mov
inc
cwde
jns
and
add
arpl
jae
mov
movs
js
fidivr
jmp
pop
mov
dec
push
dec
inc
rcl
fisttp
mov
and
retf
mov
dec
cmp
dec
shl
clc
pop
add
(bad)
cli
mov
pop
mov
push
push
add
mov
pop
(bad)
mov
ror
push
xor
outs
lds
inc
cmp
in
lods
ins
and
std
pop
sub
rcl
shr
mov
data16
push
lea
inc
xor
arpl
mov
xchg
cmps
or
push
ds
mov
sahf
inc
rol
ss
(bad)
sahf
outs
jno
xchg
cmps
mov
xchg
fs
jae
xchg
jmp
push
daa
popa
xor
push
push
pop
xchg
sub
das
ss
pop
nop
jb
xlat
addr16
repnz
inc
xor
push
test
cwde
mov
fidiv
lahf
lods
popa
daa
(bad)
int3
xchg
shl
outs
(bad)
adc
dec
pushf
jle
jmp
or
fnstcw
lock
add
jmp
jns
push
out
leave
ds
pop
ins
or
xchg
mov
loop
ret
pop
push
dec
xor
sbb
pop
inc
pop
lods
clc
scas
(bad)
pop
push
rol
in
xchg
ret
retf
and
jns
dec
pop
xchg
into
and
add
int3
push
test
sti
loop
enter
fwait
mov
add
icebp
push
mov
outs
test
cmp
repnz
leave
push
cmp
gs
loop
lock
in
cmp
sub
jge
push
addr16
mov
jg
mov
js
jmp
rol
push
pop
popa
inc
fcom
and
test
pop
push
lock
pop
mov
xchg
aam
inc
test
inc
sub
ret
mov
sbb
xor
lds
je
push
cld
push
loope
push
outs
scas
ins
or
in
and
pop
or
xlat
arpl
or
push
dec
sar
cld
in
ss
outs
sbb
cmps
cmp
and
enter
das
jmp
sub
(bad)
int3
call
pop
mov
push
stc
mov
in
addr16
xchg
jo
push
xor
aaa
cmps
repnz
inc
pushf
adc
push
xchg
jg
and
mov
test
sbb
jns
or
jbe
xor
cld
and
rol
jl
mov
or
and
cs
cwde
push
mov
mov
(bad)
inc
mov
inc
pop
or
in
pop
jnp
ja
cwde
loope
mov
stos
pop
cmps
pop
inc
std
sti
daa
push
sti
shl
(bad)
in
xlat
cs
sbb
int3
mov
ret
stos
repz
cmp
int
repnz
push
data16
leave
sti
mov
jecxz
pop
cmps
ret
or
sbb
cmps
jge
(bad)
dec
(bad)
sbb
stc
push
popa
(bad)
add
inc
or
xchg
in
cmp
fucom
add
shl
add
dec
xchg
adc
mov
call
pop
(bad)
cmc
leave
xchg
popa
inc
push
fnsave
inc
or
retf
aad
imul
jno
gs
inc
pop
mov
xor
(bad)
lods
stos
mov
ja
sub
sbb
leave
inc
xor
cmp
and
retf
mov
sti
fistp
xor
pop
ds
ds
bound
push
dec
ja
push
dec
dec
jo
and
fdivp
xor
cmp
int
movs
mov
pop
jb
xchg
cdq
inc
loop
cmp
add
cli
adc
sbb
dec
repnz
xchg
push
xor
and
pushf
mov
pop
cmp
jne
wrmsr
pusha
je
hlt
push
les
add
cdq
lds
xchg
inc
xchg
sub
stos
outs
dec
mov
sub
add
popa
add
xor
xchg
jmp
in
retf
jb
push
pop
dec
or
aas
lahf
clc
or
ss
lods
leave
(bad)
sbb
sub
dec
mov
jbe
adc
ins
jmp
pop
pop
xchg
mov
retf
adc
xchg
rcr
and
lock
int
and
hlt
sub
data16
and
iret
fwait
sbb
mov
push
add
inc
mov
call
push
out
xor
imul
mov
movs
mov
ror
sub
fsub
test
and
test
fdivr
outs
jg
xchg
fwait
mov
push
or
sub
add
test
arpl
mov
fisubr
arpl
xchg
jb
dec
enter
mov
adc
cmp
mov
and
xor
aad
sub
pop
add
inc
jbe
jns
mov
xchg
shr
xchg
mov
data16
sbb
adc
stos
xchg
(bad)
add
imul
cmc
daa
jg
mov
adc
into
mov
not
daa
jbe
test
inc
push
jbe
stos
mov
loop
aaa
aaa
dec
fstp
das
scas
lods
push
mov
add
out
call
sbb
lods
push
cdq
inc
mov
arpl
adc
pop
dec
js
js
nop
imul
pop
push
dec
xchg
xor
xchg
push
mov
fdiv
mov
sub
inc
or
and
call
pop
add
hlt
push
out
jl
nop
jb
sbb
pop
fidiv
pusha
rcr
(bad)
xchg
clc
je
xchg
cmps
in
call
cs
dec
and
mov
and
adc
jl
mul
shl
popa
dec
fstp
inc
xchg
idiv
and
add
outs
stos
aaa
clc
adc
add
movs
sbb
sub
js
mov
mov
mov
cwde
mov
leave
and
jbe
test
adc
pusha
jmp
sbb
push
cli
push
imul
jmp
outs
popf
adc
or
jge
cmps
mov
adc
sbb
xor
popf
pop
fdiv
xor
aam
adc
add
mov
pusha
push
jnp
clc
add
dec
fwait
rol
repnz
xchg
aaa
ins
xor
dec
jmp
or
sub
out
fsubr
push
pop
pusha
dec
pop
mov
adc
pop
push
ss
mov
aaa
adc
fst
sub
mov
xor
push
pop
aad
adc
pop
test
mov
shl
scas
out
fwait
and
and
pusha
and
mov
out
cli
jecxz
push
add
mov
mov
fwait
mov
sbb
mul
inc
xchg
mov
enter
push
pop
hlt
mov
mov
mov
push
pushf
xor
xor
icebp
bound
popf
call
jmp
adc
jecxz
or
stos
cmp
mov
cwde
mov
adc
jg
push
pop
fisub
inc
out
stos
adc
fiadd
mov
ja
(bad)
cmovno
or
jo
jo
call
leave
push
push
or
out
push
xor
add
xchg
or
jmp
and
inc
stos
adc
fld
leave
mov
mov
in
cmp
icebp
aaa
cmp
or
inc
or
pushf
cmp
sahf
sbb
xchg
in
ds
adc
or
dec
and
cmp
jne
jns
iret
es
mov
jnp
icebp
sbb
push
aas
dec
xchg
or
test
lahf
pop
lods
dec
(bad)
xor
pop
cdq
lods
pop
hlt
dec
pop
aas
mov
call
sbb
call
cmp
mov
les
lock
(bad)
ficomp
jg
mov
or
jno
mov
push
fistp
push
or
pop
inc
adc
and
in
sub
mov
pop
les
repz
loopne
or
aam
push
ja
stc
test
addr16
std
icebp
dec
jnp
cmp
sbb
sub
ds
mov
mov
arpl
mov
ja
call
mov
in
jecxz
hlt
cmp
add
lahf
or
push
and
sahf
out
xchg
mov
rol
cld
or
push
jno
cmc
mov
add
call
stos
mov
aam
je
rol
ss
push
ret
sub
test
ja
mov
jne
ret
imul
shr
les
dec
jne
addr16
pop
imul
inc
xor
cmp
retf
sbb
cli
push
fwait
ins
mov
sub
(bad)
repnz
mov
fisub
dec
iret
addr16
cmp
movs
dec
jp
mov
push
cmps
jmp
and
mov
(bad)
push
push
popf
movs
ss
sub
pushf
cdq
int
mov
in
ror
and
arpl
fcmove
mov
mov
mov
adc
retf
out
test
in
idiv
(bad)
loopne
rcr
mov
cmp
adc
push
(bad)
hlt
pusha
outs
lods
pop
clc
jae
pop
and
repnz
loop
(bad)
es
aad
sub
dec
(bad)
pusha
mov
jnp
ret
jl
sub
cld
adc
mov
dec
rol
daa
daa
xor
outs
call
cwde
rol
pop
push
ret
push
xor
dec
lock
pop
xchg
xor
xchg
xor
int3
inc
mov
fs
scas
xchg
leave
inc
stos
shr
lahf
das
nop
movs
jae
in
jno
mov
or
cmp
and
mov
xor
les
addr16
in
dec
xchg
mov
fidivr
xor
test
(bad)
xchg
js
pop
lods
mov
outs
inc
push
loopne
cmps
xor
loope
in
pop
in
dec
dec
mov
push
stos
cmps
nop
cmc
or
sub
rcl
das
in
pop
or
jnp
mov
arpl
sbb
jbe
cmp
mov
adc
scas
inc
das
fcomp
inc
dec
(bad)
pushw
outs
dec
fisubr
out
push
add
mov
and
test
sub
lds
mov
enter
inc
dec
cmp
inc
sub
inc
inc
adc
int3
push
ror
scas
pop
xchg
cmp
lahf
add
mov
fst
xor
fldenv
das
push
(bad)
jno
pushf
push
or
in
(bad)
mov
or
pop
or
or
xor
shr
or
fdiv
mov
xchg
mov
hlt
in
sbb
add
add
sub
adc
inc
adc
dec
jne
loopne
add
cmps
pop
jecxz
inc
sub
ins
aad
sti
jno
sub
fdiv
dec
popf
cmp
es
pop
push
scas
push
enter
mov
lock
dec
stc
mov
(bad)
and
rcr
inc
call
and
jno
int
int
xor
add
xchg
jl
jecxz
popf
rcr
dec
jl
sub
lahf
movs
mov
das
pop
ret
cmp
xlat
inc
out
inc
add
stc
add
xchg
sti
lods
mov
and
pop
into
ret
loop
and
mov
arpl
push
in
rcr
push
and
js
ds
rcr
mov
inc
scas
dec
add
(bad)
shl
xor
cmps
dec
cmp
dec
sbb
cmps
(bad)
scas
jbe
ds
sbb
xchg
xchg
ds
dec
mov
adc
sbb
xchg
out
movs
out
sbb
add
loop
or
(bad)
mov
xor
mov
out
lock
or
jmp
(bad)
fisubr
push
mov
fimul
mov
(bad)
imul
or
gs
cmc
loopne
pop
pop
jne
repz
mov
mov
xor
add
data16
int
push
xchg
mov
xor
aad
scas
mov
jne
out
jo
xor
loop
or
dec
(bad)
(bad)
lods
test
scas
jmp
push
mov
loopne
sti
ret
aam
ins
adc
pop
cmps
xchg
(bad)
xchg
fwait
xchg
std
sbb
push
loop
cwde
fnstcw
dec
cmp
(bad)
mov
(bad)
dec
dec
push
fs
adc
ja
xor
push
xor
add
or
jle
pop
mov
xchg
and
cmp
adc
dec
stos
pop
xchg
fist
popf
in
lods
push
stc
push
inc
mov
mov
jmp
sbb
lods
mov
push
jl
push
and
sub
jno
cmp
pop
into
shl
ss
iret
and
mov
or
mov
dec
xor
xchg
mov
sbb
ins
pop
push
dec
mov
xor
push
push
out
les
inc
int
int
dec
inc
sahf
xor
loope
aaa
aad
and
inc
hlt
std
mov
aam
(bad)
test
fs
cs
mov
or
sbb
jbe
or
stc
sbb
mov
in
push
add
mov
add
adc
sbb
daa
loope
and
jno
mov
adc
shl
ins
add
out
xchg
mov
daa
mov
ins
js
lods
call
ja
lahf
push
(bad)
psrad
xchg
add
mov
mov
(bad)
mov
or
pop
sub
mov
mov
frstor
fcom
and
retf
mov
xor
nop
mov
sub
lahf
xchg
and
or
xchg
push
loope
out
cmps
and
enter
sti
xlat
call
neg
mov
jnp
es
or
cmps
data16
ds
xor
cmc
dec
inc
leave
inc
outs
addr16
popa
cmp
adc
add
sub
inc
sbb
imul
dec
movs
repz
mov
and
out
dec
repnz
push
add
cld
sub
into
leave
mov
addr16
cli
ror
cmp
mov
lods
or
adc
mov
ins
sbb
mov
mov
mov
addr16
sbb
mov
pop
push
pop
(bad)
and
mov
mov
inc
scas
lock
(bad)
sub
mov
sbb
je
es
cmc
(bad)
xchg
gs
retf
xor
push
mov
movs
mov
in
je
mov
push
pop
push
xchg
mov
inc
ds
jns
add
push
movs
cmps
shl
sub
addr16
sbb
nop
fs
xchg
cdq
out
pop
test
es
ss
cwde
pushf
inc
nop
imul
pop
arpl
sub
fisub
xchg
jl
jne
neg
add
pop
lahf
(bad)
shl
outs
cs
lock
jle
hlt
sub
inc
mov
pop
pop
xchg
sub
sbb
stc
imul
popf
arpl
mov
addr16
xlat
cmp
retf
ins
sbb
setg
sub
clc
pinsrw
and
fs
es
push
adc
rcl
ret
shl
add
daa
add
mov
loopne
sub
add
fistp
ss
pop
sbb
or
xor
and
push
cmp
or
test
add
or
sbb
dec
add
dec
inc
mov
mov
int3
pusha
inc
cmps
jp
add
iret
ja
mov
sbb
sbb
cli
inc
ret
jmp
mov
cdq
test
pop
movs
mov
ret
xchg
inc
mov
cli
je
mov
xchg
loope
sbb
or
mov
jmp
mov
(bad)
push
push
stc
and
push
fwait
stos
fcmovnu
in
in
mov
in
ret
pop
sbb
data16
push
jbe
int3
outs
mov
test
inc
fsub
or
(bad)
ss
mov
pop
std
lock
in
mov
int
and
mov
jecxz
xchg
dec
mov
loop
xlat
(bad)
and
jne
nop
rol
or
arpl
mov
jp
xchg
mov
xchg
out
jmp
jl
and
push
hlt
test
leave
xor
fs
and
ret
mov
jecxz
inc
leave
sub
inc
test
sbb
jb
or
add
cmp
or
fbld
rcr
pop
aas
in
and
cmc
jns
push
or
sbb
call
movs
jno
scas
iret
xchg
adc
(bad)
sti
or
fsubr
cs
xor
xchg
fnstcw
mov
sub
enter
xchg
jnp
daa
and
pop
test
stos
add
push
xchg
mov
sti
adc
cmp
loop
dec
xchg
sub
sbb
push
cmp
dec
mov
adc
repnz
mov
mov
mov
pop
jmp
mov
sbb
(bad)
xchg
fisttp
in
jnp
fld
jb
mov
test
cmp
nop
cmps
cmc
ficom
test
inc
fidiv
cli
retf
movs
(bad)
data16
push
sar
jle
movs
(bad)
or
arpl
icebp
stos
cmp
push
cs
shl
adc
fistp
call
ins
sub
daa
cld
aaa
jmp
in
sub
aas
fnstsw
adc
mov
out
aam
sub
sub
xchg
(bad)
je
jbe
loope
in
mov
cli
push
xchg
jbe
mov
and
je
jg
stc
sahf
adc
pop
pop
adc
adc
sbb
scas
mov
fstp
jmp
adc
ins
jnp
cmp
fimul
add
enter
mov
pop
push
lods
cdq
outs
pop
sub
mov
movs
outs
xor
nop
nop
mov
mov
cli
int3
in
mov
aaa
shr
out
fdivr
hlt
inc
jg
cmps
xchg
push
mov
aad
mov
cmps
sub
adc
pop
movs
xor
fnstenv
enter
mov
shr
fist
shr
mov
pop
jp
mov
retf
add
ror
loope
pop
sub
pop
jle
outs
cmps
fcom
push
fidiv
(bad)
not
xchg
mov
add
jae
xchg
adc
mov
jle
dec
ss
cs
push
mov
imul
push
mov
pop
or
or
jbe
pop
rol
or
mov
dec
sbb
mov
push
and
mov
scas
ss
in
pop
push
(bad)
sbb
mov
movs
sub
shl
cmp
pop
paddd
and
imul
loop
lods
(bad)
hlt
dec
or
into
push
and
mov
(bad)
xchg
mul
jl
hlt
in
sub
or
sbb
cwde
pop
les
fs
sbb
and
mov
scas
sbb
sub
test
repnz
mov
daa
es
mov
adc
cli
pusha
pop
xlat
repz
fisub
pusha
xor
mov
sub
mov
dec
retf
inc
fadd
test
cmp
cmps
jns
mov
sub
and
sub
inc
and
aas
push
out
mov
fwait
enter
push
adc
leave
pop
mov
adc
adc
jle
adc
add
(bad)
push
sbb
aad
inc
jnp
jp
sbb
div
mov
and
mov
ds
adc
fwait
push
sub
and
mov
mov
fild
pop
xchg
xchg
jge
(bad)
push
aaa
repnz
pop
and
test
or
xchg
lds
jb
and
in
cmps
fstp
add
stos
jge
arpl
ret
and
mov
or
push
push
and
call
add
sub
fcom
push
inc
stos
shl
stc
sbb
cmp
pusha
mov
dec
cmp
mov
adc
retf
xchg
lods
dec
fdivr
adc
mov
xchg
mov
fld
aaa
loope
inc
scas
fist
pop
pusha
jo
and
rcl
sub
in
sbb
aaa
fdivr
icebp
push
int
mov
or
shl
sbb
daa
inc
mov
add
pop
mov
cmp
adc
aas
and
scas
fdivr
stc
jo
jnp
dec
fbld
mov
dec
cmp
mov
(bad)
out
or
pop
cmp
mov
jl
inc
lds
or
mov
xchg
push
xchg
jns
in
ret
cmp
add
enter
test
xchg
repnz
(bad)
repnz
pop
pop
lods
cmp
or
sahf
mov
(bad)
sub
stos
mov
dec
(bad)
xchg
fsub
(bad)
fsub
inc
xlat
cmps
fucomip
jb
les
adc
push
loopne
lds
pop
(bad)
jle
test
test
nop
mov
shr
jmp
sar
xchg
es
push
ja
mov
push
out
arpl
and
ins
dec
add
xor
inc
sahf
jo
xor
jecxz
push
and
mov
pop
jge
sbb
outs
cmp
sahf
sbb
push
(bad)
clc
fdivr
int
pop
or
fisttp
push
sbb
mov
retf
mov
pusha
out
nop
xor
jp
shl
popf
fwait
mov
push
daa
into
and
pop
cmp
fcomp
leave
call
xor
mov
sub
fimul
dec
jecxz
mov
sbb
pop
mov
xor
scas
push
aad
push
sbb
sahf
clc
add
into
mov
out
xchg
loop
xchg
je
mov
cmp
sti
jle
cmp
jge
repz
fidiv
or
into
sbb
push
je
ins
adc
add
adc
ror
stc
(bad)
movs
push
ss
ins
push
fild
das
movs
inc
add
dec
repz
nop
or
js
inc
pop
inc
xchg
jmp
stc
sub
icebp
adc
and
rcr
popa
adc
add
(bad)
in
(bad)
or
fld
and
js
dec
xor
jb
mov
xchg
xor
pop
inc
inc
popf
ror
adc
inc
or
gs
push
jb
jne
xchg
jmp
in
dec
repnz
pop
push
stc
xor
pushf
add
push
rcr
mov
xor
cmp
add
popa
ins
mov
xchg
mov
sbb
jge
mov
test
je
pop
pop
aam
aam
dec
mov
cmps
sub
push
xchg
inc
jle
(bad)
fist
int
test
into
dec
ret
mov
pop
jne
jl
inc
loope
ror
add
icebp
and
out
xor
sub
test
push
ret
scas
enter
ja
mov
cwde
sar
test
push
sbb
es
pop
in
sub
lds
sub
cwde
iret
(bad)
fld
adc
add
jne
sti
inc
mov
movs
loop
leave
inc
std
jns
std
loop
or
push
test
xor
in
inc
adc
mov
adc
push
push
and
out
imul
sub
mov
repnz
in
add
and
inc
push
push
test
cmp
je
jg
dec
mov
cmp
mov
push
fs
push
pop
sbb
enter
adc
(bad)
jp
popf
cmc
lods
movs
loope
mov
sub
stc
jp
dec
test
lahf
cmp
pop
cld
pop
and
outs
xchg
mov
dec
(bad)
imul
retf
sahf
fild
dec
loopne
enter
not
out
jmp
aas
fldl2t
cmp
mov
pop
xchg
aaa
add
sub
xchg
sti
jecxz
sub
mov
adc
push
in
out
fst
jmp
imul
xchg
mov
outs
push
jg
lods
pop
movs
xchg
or
mov
pop
ins
scas
mov
jmp
das
adc
imul
bound
adc
div
mov
push
je
mov
sbb
lahf
retf
jbe
adc
inc
ret
out
lds
movs
outs
fnstsw
icebp
fsubr
add
mov
mov
into
xlat
xchg
ds
scas
xchg
mov
cvtdq2ps
xor
inc
jp
in
cdq
je
aam
mov
xchg
ss
shr
mov
data16
add
outs
mov
lods
fisttp
sub
xor
mov
lock
outs
xlat
inc
lods
xlat
xor
pmaddwd
out
push
xchg
(bad)
ins
mov
sbb
dec
cmp
xor
and
and
mov
addr16
repz
add
inc
jecxz
push
pop
ins
sub
fcomp
(bad)
test
cdq
enter
adc
jg
test
adc
sub
push
add
(bad)
sti
(bad)
push
push
retf
mov
sbb
inc
call
sub
and
fisub
sbb
inc
fadd
sar
call
ucomiss
out
test
and
mov
mov
cdq
js
jo
scas
aas
xchg
xchg
xor
aaa
jmp
dec
scas
fld
xor
dec
ins
push
mov
xor
in
ss
scas
or
jg
jge
push
fdiv
outs
pushf
cmc
and
imul
jmp
mov
pop
mov
fst
push
int3
out
xchg
xchg
inc
(bad)
(bad)
loope
out
in
addr16
(bad)
bswap
jnp
ds
test
lods
cmp
jmp
js
imul
enter
int
xlat
test
xchg
popa
dec
fs
ja
inc
add
dec
pop
fwait
xchg
cmp
jmp
pop
mov
mov
push
mov
pop
cs
outs
(bad)
jecxz
rcl
fwait
addr16
cmc
pop
inc
jno
mov
es
sub
out
jmp
push
and
cmps
or
ss
and
push
push
ret
not
dec
mov
pop
push
or
and
aas
push
dec
lea
test
push
popa
sub
adc
shl
popf
or
jns
jno
pop
bound
pop
scas
out
mov
icebp
ror
fimul
stc
or
jnp
pop
xor
fadd
or
xchg
imul
xchg
movs
sti
inc
jl
mov
test
ss
fsubp
je
js
dec
jecxz
aad
add
add
lock
stos
jg
cwde
test
icebp
jns
or
mov
and
pop
dec
sbb
js
mov
add
jle
or
rcl
into
or
adc
sbb
jmp
retf
mov
cmp
jge
or
xchg
ins
push
sbb
pop
movs
xor
das
adc
cmp
mov
lock
stc
(bad)
mov
mov
push
inc
sbb
dec
add
arpl
pop
outs
stos
mov
mov
fwait
iret
das
aaa
push
jge
ins
inc
and
ins
popa
sub
shl
xchg
mov
dec
sub
cs
mov
push
and
pop
pop
xor
les
in
xchg
scas
adc
dec
sbb
mov
add
xor
inc
adc
jle
pop
xchg
mov
(bad)
pop
lds
cli
loop
stos
add
inc
bound
mov
xchg
push
adc
out
sub
fisttp
push
ins
mov
and
cs
push
int
add
(bad)
(bad)
dec
jno
in
xchg
fild
shr
call
call
rcr
outs
int3
mov
psraw
xchg
in
xor
fmul
sar
data16
sbb
xchg
fwait
pop
xor
pop
xlat
xor
mov
out
outs
int
sahf
aas
aam
pusha
mov
pop
jbe
mov
bound
lea
retf
aad
push
push
(bad)
cdq
in
mov
fiadd
test
(bad)
fs
pop
out
ins
mov
pop
mov
pop
stc
retf
test
cmps
cmp
mov
fldenv
leave
mov
sti
pushf
(bad)
push
mov
cmc
call
xor
push
not
ins
in
mov
ins
addr16
adc
xchg
mov
rcl
sbb
jo
repz
adc
mov
xchg
jl
leave
scas
call
(bad)
cli
mov
pop
xchg
es
fist
adc
fidiv
scas
je
push
fwait
jmp
(bad)
adc
pop
push
retf
mov
mov
mov
sbb
add
sar
fs
cmc
push
dec
pop
adc
pop
push
xor
or
and
sub
xor
and
scas
jae
push
or
mov
rcr
dec
ret
mov
mov
out
in
outs
mov
mov
rol
cmp
ins
js
lock
aaa
test
stos
or
loop
out
fild
push
repz
sbb
or
pusha
fwait
loop
sub
shl
mov
pop
fwait
xor
scas
mov
rcr
xchg
scas
dec
std
fldcw
nop
loope
cdq
in
xor
mov
(bad)
retf
pop
rcr
je
pop
cmps
and
and
inc
sub
xor
imul
daa
arpl
pop
jl
rcr
mov
add
js
(bad)
ins
cmc
cld
jne
cli
dec
loope
pop
cmp
stc
or
aas
push
icebp
adc
loop
mov
aam
es
cs
sub
xor
xchg
shl
or
xor
lds
pop
push
(bad)
dec
jecxz
repnz
pop
push
mov
das
cmp
inc
mov
in
into
xlat
fs
xchg
add
xchg
test
sbb
or
dec
and
fwait
pop
ins
push
inc
movs
int3
retf
call
call
pop
push
jl
push
pusha
pop
mov
sti
xchg
xchg
std
cmp
pop
and
jmp
adc
iret
sbb
adc
aad
lods
sub
test
scas
test
xchg
(bad)
in
frstor
sub
sbb
push
mov
mov
adc
cld
(bad)
call
int
outs
jnp
sar
dec
cmp
mov
mov
outs
lea
jle
call
pushf
sub
outs
rcl
add
or
in
pop
jle
(bad)
cmp
aas
mov
xchg
sti
add
pusha
das
or
xor
sbb
out
jecxz
in
lea
sub
fidiv
xor
outs
pop
xchg
pushf
loope
pop
mov
lods
outs
into
jp
mov
std
in
sub
scas
sbb
adc
add
sub
lock
daa
cmp
popf
xlat
jae
shl
iret
repnz
fisttp
(bad)
jg
jecxz
inc
cs
mov
push
iret
rol
mov
out
shl
mov
repnz
xchg
pop
ficomp
jno
mov
not
xchg
xor
fsubrp
mov
cmp
pop
sub
and
mov
jbe
sahf
sub
mov
ins
xchg
std
lock
adc
addr16
dec
retf
data16
mov
xor
pop
mov
sbb
sub
or
call
push
jp
mov
rcl
sub
rcr
and
mov
int
pop
inc
xchg
into
call
out
inc
mul
test
add
out
cmp
mov
dec
mov
cmps
(bad)
push
mov
ins
add
lea
xchg
call
outs
les
and
div
push
repz
(bad)
cwde
fidivr
std
call
sbb
fcom
cmp
sub
ds
xchg
pop
cmc
xchg
or
cmp
inc
cmp
idiv
(bad)
dec
cwde
iret
adc
push
je
js
mov
sbb
sbb
aam
test
cmp
(bad)
js
push
mov
xor
and
(bad)
push
inc
inc
xor
mov
(bad)
jle
dec
jle
mov
xlat
and
or
aam
(bad)
rcl
sbb
call
cmp
jl
das
adc
scas
push
mov
test
pop
and
dec
prefetcht1
bound
mov
jmp
or
out
sar
fwait
cmp
add
dec
cli
rcl
adc
ss
imul
add
push
jge
pop
or
cmp
mov
adc
push
jns
mov
inc
iret
jg
pop
popf
ss
pop
mov
push
jno
add
aad
(bad)
popf
loope
mov
dec
lock
push
mov
sbb
jo
ins
mov
jns
push
loop
mov
std
jmp
mov
ss
mov
bound
xchg
jl
mov
pop
outs
or
inc
jmp
jle
pop
push
gs
sub
(bad)
lds
mov
adc
jnp
addr16
xor
adc
jl
std
mov
adc
test
jo
inc
cmp
into
xchg
push
scas
(bad)
mov
lods
add
add
bound
add
jns
adc
ja
es
sub
shr
push
push
ret
in
or
imul
rol
push
lock
sbb
clc
mov
cmps
lea
js
sbb
add
ret
mov
popf
adc
lods
xchg
lds
mov
lock
sbb
shl
(bad)
add
loop
(bad)
imul
and
shr
jecxz
or
mov
xor
jne
inc
push
leave
mov
ss
push
push
nop
mov
mov
fldz
mov
mov
hlt
mov
or
push
es
sahf
pop
fst
xchg
out
addr16
ins
xor
xchg
ror
sbb
iret
dec
add
jnp
(bad)
pop
mov
and
loop
mov
enter
aam
sbb
mov
ja
mov
mov
aas
fst
es
pop
sub
dec
(bad)
mov
add
sbb
cwde
icebp
out
mov
repnz
xor
cli
retf
sub
aad
mov
jl
xor
mov
fdiv
(bad)
mov
sub
imul
dec
sub
xchg
shl
mov
xlat
in
xchg
sub
push
outs
fldcw
mov
jmp
xchg
dec
pusha
mov
jno
jg
movs
adc
cmp
sbb
mov
xchg
xchg
rcr
dec
es
popf
stos
pop
xlat
jne
repz
push
dec
pop
in
repnz
and
fcmovnu
fsubr
adc
xor
dec
call
cmp
sbb
push
arpl
cdq
and
mov
int3
push
xchg
adc
add
jmp
adc
movs
out
fwait
pop
push
test
jmp
scas
in
fdiv
mov
int3
fild
mov
adc
movs
mov
ins
das
push
xor
sub
sbb
shr
cmp
bound
stc
mov
xchg
jl
sahf
mov
xchg
mov
push
ja
mov
inc
xor
xchg
mov
mov
aad
pop
sub
jecxz
jmp
cmps
ret
inc
enter
inc
sbb
sbb
xlat
outs
add
cmp
inc
cmp
ficomp
addr16
push
push
mov
stc
mov
mov
xchg
mov
imul
outs
sbb
inc
pop
pop
cs
mov
mov
add
xor
or
lods
inc
mov
ficom
or
cwde
pop
(bad)
jecxz
out
mov
jnp
outs
jnp
(bad)
sahf
jae
loop
or
loop
and
nop
out
cmp
pop
popf
ds
loop
fucom
add
adc
and
cmp
dec
popf
adc
inc
test
jns
dec
js
imul
jmp
repz
das
inc
mov
sahf
test
lock
hlt
jns
pusha
or
mov
jmp
adc
push
in
mov
sar
loopne
push
repz
push
es
je
jmp
push
call
mov
xlat
jbe
outs
mov
rcl
cmp
jne
movs
dec
cli
dec
sub
mov
pusha
fild
ret
cs
mov
ret
and
repz
ret
add
mov
cmp
cmp
daa
dec
icebp
mov
jg
mov
or
mov
or
add
repnz
jecxz
and
dec
adc
mov
cmp
cmp
sti
mov
popa
mov
dec
scas
mov
cmps
sbb
jmp
stc
pop
xor
repnz
mov
fucomi
or
add
cmp
xchg
jb
lahf
push
imul
scas
push
pop
sbb
mov
dec
adc
fld
aas
pop
mov
cwde
fsubr
stc
retf
pop
adc
mov
fldenv
inc
push
neg
xchg
mov
mov
movs
push
cmp
shl
ss
clc
add
leave
test
test
(bad)
enter
fidivr
or
out
and
mov
jbe
mov
aad
pop
xchg
push
add
lds
xchg
fwait
xor
imul
enter
(bad)
clc
and
or
leave
outs
jnp
popf
popa
daa
cdq
ins
jmp
ds
cli
movs
mov
mov
lock
dec
mov
jmp
cmp
scas
mov
xchg
fstp
cld
xchg
adc
test
push
movs
inc
daa
xor
out
fcmove
dec
inc
sbb
test
dec
jb
fld
and
aad
pop
adc
sti
call
cmps
dec
mov
jne
cmp
dec
xchg
pop
leave
and
icebp
pop
sbb
in
scas
adc
shl
movs
out
push
add
retf
sub
jae
cmp
(bad)
pop
lea
or
push
push
cmps
inc
pusha
and
push
ror
idiv
sub
pop
mov
xlat
ror
mov
iret
sub
test
push
lahf
inc
cmp
xor
js
sbb
mov
pusha
ss
and
push
int3
ret
xor
inc
lods
int3
cmc
jl
data16
loopne
fstp
movs
not
enter
ret
or
pop
push
and
xor
push
dec
sbb
iret
enter
push
jnp
pop
ja
rcl
leave
out
and
test
sahf
cmp
pop
in
sbb
bound
dec
pusha
and
ret
iret
call
xor
arpl
mov
test
cmp
aam
movs
sbb
mov
shl
pop
loopne
lods
push
adc
std
test
inc
or
add
mov
dec
mov
jno
mov
xchg
adc
cld
pop
sub
ret
xchg
and
pop
mov
mov
in
into
jb
jp
mov
pusha
repz
mov
gs
push
std
mov
stos
in
push
mov
mov
and
(bad)
sub
(bad)
jge
fnstcw
push
xor
stc
pop
pop
mov
jge
test
sub
jne
xchg
add
jmp
popf
aas
cmovle
mov
pop
lods
mov
jne
les
add
aam
xor
int
aas
fisttp
pop
xor
ja
cmps
adc
xchg
out
int3
cs
pusha
xor
inc
dec
or
cmp
retf
lods
adc
mov
loope
add
pop
daa
sub
inc
push
mov
into
in
stc
cmp
into
(bad)
neg
sub
xor
adc
fld
xlat
xor
xlat
mov
jns
mov
clc
or
js
push
pop
pop
pop
or
mov
or
and
imul
xor
mov
mov
(bad)
std
mov
mov
loopne
nop
into
popa
mov
iret
repnz
dec
ins
sbb
or
inc
aad
jge
mov
mov
jns
in
mov
and
inc
inc
sub
jns
dec
adc
lock
add
inc
pushf
sub
dec
mov
dec
(bad)
adc
dec
mov
leave
popa
mov
test
fsubp
pop
jecxz
popf
and
xchg
in
and
hlt
icebp
push
(bad)
rcl
pop
fstp
cmp
xlat
mov
es
xor
mov
stos
mov
pop
sahf
pop
inc
adc
and
int3
adc
test
add
mov
mov
jp
pop
lea
jle
ins
inc
test
push
ror
call
cmps
sbb
cmps
pop
cmps
jbe
lods
xchg
mov
push
rol
aam
mov
pop
cmp
jp
out
add
jle
in
inc
adc
test
ficomp
push
pop
ss
cmp
jg
mov
hlt
cmp
aas
add
jmp
push
mov
jmp
sbb
imul
lods
nop
loop
sub
fdecstp
push
ins
jecxz
jl
cmps
(bad)
mov
aam
push
push
icebp
aam
call
retf
cwde
and
sbb
push
ja
daa
mov
out
sub
mov
and
not
(bad)
pop
ins
aam
or
sub
rol
pop
shl
jmp
sbb
je
xor
leave
cmp
xchg
popf
retf
mov
iret
fmul
rcr
dec
jmp
fneni(8087
adc
mov
xor
adc
loopne
mov
mov
pop
lods
(bad)
repnz
mov
adc
aaa
xor
dec
push
retf
dec
mov
movs
int
and
shr
inc
dec
pop
mov
mov
adc
movs
popa
es
mov
cs
daa
add
and
(bad)
fistp
push
jg
cmps
adc
cmp
int3
adc
mov
adc
in
test
inc
stc
inc
jecxz
add
cli
push
daa
gs
test
mov
jno
add
out
xchg
out
dec
inc
push
mov
in
(bad)
mov
jo
xor
push
jae
call
xchg
add
sbb
sub
jge
in
(bad)
adc
imul
dec
ja
mov
lods
(bad)
jl
mov
pushf
icebp
lahf
out
gs
xor
bound
shl
outs
cmp
and
jns
jecxz
mov
dec
call
jbe
jnp
mov
ins
mov
and
xor
ja
jb
shl
mov
or
fidivr
repnz
dec
jmp
mov
(bad)
push
jnp
nop
int
xchg
cwde
xor
jecxz
fnsave
mov
cld
xchg
mov
xchg
mov
cmps
lds
daa
jns
cmp
test
fadd
mov
outs
adc
fcomp
fnsave
sub
mov
sub
fadd
push
mov
dec
xor
popf
or
and
stc
cmp
mov
fild
shr
xchg
fld
or
stos
call
or
nop
sbb
xchg
je
cmps
mov
adc
mov
mov
loop
or
clc
int3
push
gs
fisubr
ficom
jmp
movs
mov
mov
enter
fs
ds
cmps
push
movs
push
fwait
jno
mov
push
add
and
sbb
cmp
and
xchg
xchg
or
push
clc
xor
test
jmp
outs
dec
xor
fist
sahf
cmp
push
int
(bad)
out
and
ret
je
jmp
mov
cmp
dec
sbb
in
fs
ins
mov
sbb
fisub
dec
jae
mov
aam
xchg
pop
xor
cwde
xchg
and
rol
daa
push
push
hlt
mov
repz
add
xlat
adc
cmp
mov
push
shr
xor
repnz
mov
sbb
sub
sbb
repnz
cmp
mov
mov
xchg
icebp
mov
les
(bad)
xchg
pop
add
xchg
xchg
adc
clc
aam
xor
mov
outs
inc
inc
mov
mov
cmp
repz
mov
dec
mov
ins
fwait
adc
jno
std
outs
test
adc
leave
xor
ja
ss
mov
jne
pushf
pop
lods
fisub
dec
ins
bndstx
dec
xor
dec
gs
jne
lahf
jp
test
fwait
sub
cmp
jge
dec
hlt
sub
add
(bad)
jo
pop
(bad)
ret
mov
pusha
and
mov
lock
int
xor
inc
lds
ret
dec
push
nop
push
(bad)
aad
push
add
mov
aam
mov
mov
sahf
out
gs
bound
xor
cmp
icebp
xchg
mov
push
jmp
mul
xor
ror
xchg
add
fidivr
or
push
add
and
add
ja
and
sbb
pop
in
or
mov
and
scas
adc
add
(bad)
push
in
jo
outs
test
mov
std
inc
dec
sbb
xchg
dec
test
out
popa
sti
fldcw
and
adc
xor
jno
cmc
jle
fs
mov
pop
xor
ins
into
mov
push
(bad)
rol
jb
sti
dec
mov
stos
adc
jbe
mov
ss
pop
mov
out
dec
inc
ret
mov
sbb
aam
xchg
and
inc
jge
add
mov
push
sbb
aam
aad
xchg
sbb
lods
lahf
xor
lock
das
push
add
jbe
les
inc
loop
add
fs
inc
and
sbb
cwde
out
aam
jecxz
add
mov
pop
out
sbb
addr16
xor
xchg
dec
pop
cmps
cmp
mov
push
int3
adc
or
call
jp
sub
push
inc
sbb
outs
je
ret
lods
xchg
call
mov
out
adc
fs
retf
adc
or
jle
mov
ins
es
jp
sbb
mov
rol
jle
es
inc
or
arpl
aaa
push
out
aam
aas
push
aas
sbb
adc
push
dec
sub
sar
push
inc
pop
std
lea
xor
stc
fcmovbe
pop
push
stos
loop
enter
pop
add
arpl
and
cld
jge
dec
xor
xor
test
retf
xchg
mov
popf
push
retf
retf
scas
stos
push
mov
test
mov
repnz
out
sbb
push
adc
lods
in
jmp
and
add
outs
pop
add
xchg
or
popf
aaa
aas
sahf
faddp
xor
sbb
leave
lea
jae
in
jp
adc
jnp
das
sub
mov
int3
gs
jl
ret
mov
inc
xchg
jmp
das
js
mov
enter
repnz
jmp
mov
fdiv
and
jmp
pushf
es
jbe
or
in
enter
pop
or
loopne
and
dec
dec
leave
not
jb
adc
fisub
xchg
pusha
jle
data16
out
loope
sbb
std
(bad)
or
popa
mov
scas
fs
xor
ins
in
mov
push
dec
dec
mov
mov
mov
pop
adc
leave
mov
out
ja
arpl
mov
or
aam
pop
or
jp
les
fwait
ja
loope
in
ret
stos
pop
(bad)
leave
gs
xor
gs
ret
jg
out
call
lds
mov
and
xchg
adc
push
jecxz
ss
outs
lds
ror
gs
add
ror
aaa
inc
mov
push
add
xlat
(bad)
repnz
mov
push
fst
xchg
jle
or
push
rdpmc
mov
mov
out
rcr
mov
xor
adc
je
add
mov
jecxz
xor
jl
or
icebp
mov
in
cmc
pop
push
fiadd
cli
std
push
pop
adc
pop
push
js
sar
adc
cmp
retf
xlat
mov
lods
or
cld
xchg
leave
push
xchg
or
icebp
hlt
xchg
jno
add
pop
fcmovne
retf
jb
call
xor
fs
cmc
loopne
or
xchg
out
push
fwait
gs
(bad)
shl
test
rcl
sbb
js
xlat
lds
mov
popf
mov
mov
mov
pop
add
shr
and
add
xor
xor
sub
outs
ror
fsub
xchg
enter
sbb
jns
mov
push
idiv
(bad)
xchg
sbb
jp
xor
mov
pop
jbe
sub
jmp
xor
pop
lea
shl
ror
cdq
xor
ror
jmp
push
inc
pop
out
in
sbb
lahf
ret
ret
pop
or
out
push
adc
(bad)
outs
mov
sbb
mov
scas
pop
lea
and
sbb
jle
jecxz
retf
clc
push
adc
scas
es
cmp
cmp
mov
jg
iret
push
add
mov
int3
mov
xchg
mov
scas
sbb
stos
push
pop
push
popa
xor
dec
arpl
leave
clc
jo
fst
and
je
mov
add
std
or
jmp
or
push
inc
dec
pop
jno
xchg
clc
sub
out
(bad)
cmp
jo
into
aam
inc
clc
sar
aam
push
call
jmp
xor
addr16
mov
cmp
cmp
adc
add
dec
xor
cli
sahf
out
mov
loopne
mov
outs
cmps
bswap
mov
pop
mov
xor
xchg
pop
leave
pop
gs
stc
mov
inc
dec
addr16
cmp
push
adc
xor
mov
sahf
int
adc
adc
cwde
std
das
mov
ret
movs
pop
(bad)
sbb
loope
add
xchg
hlt
movs
(bad)
xor
mov
inc
add
add
push
gs
sub
sbb
or
and
int3
retf
sbb
push
mov
pop
push
stos
sub
je
adc
(bad)
cmps
aaa
popf
leave
rcl
jp
dec
inc
jg
mov
push
mov
fdivr
icebp
adc
jmp
ret
in
inc
test
push
lods
cmp
and
std
in
and
push
loop
ja
mov
ins
fisttp
aam
push
xchg
popf
rol
icebp
cmp
imul
dec
fnstsw
mov
and
aaa
je
adc
mov
mov
ror
inc
je
das
and
mov
fisub
xchg
mov
push
add
mov
or
cs
in
xchg
or
xor
xor
lds
dec
ficomp
push
push
pop
cmps
vxorpd
jno
jecxz
cld
push
fs
push
push
push
cmp
xchg
sub
mov
in
rol
pop
mov
add
add
sbb
es
ret
add
retf
pop
mov
push
fsubr
shl
add
push
test
or
jl
cld
pop
(bad)
bsr
adc
add
jge
hlt
mov
pop
fdiv
jge
cmp
fadd
jbe
fisub
sub
jecxz
mov
mov
int3
js
data16
ret
jbe
mov
(bad)
cwde
enter
lds
cmp
dec
dec
into
clc
test
dec
cs
dec
push
jbe
lods
sbb
cmps
and
pop
mov
lock
bound
das
and
push
cmp
pushf
popf
aaa
jbe
popf
aas
xchg
daa
mov
pop
test
pop
push
fs
or
ins
in
mov
push
sbb
push
add
inc
or
xor
enter
jl
mov
mov
jl
pop
xchg
push
xchg
mov
popa
js
cli
test
sbb
cwde
arpl
ins
shr
push
inc
dec
push
je
fadd
xchg
or
(bad)
mov
out
pop
push
ds
mov
pushf
icebp
pop
sbb
das
loop
or
xchg
mov
dec
dec
mov
cmc
out
fiadd
ror
rcr
xchg
cmp
cmp
xchg
fsub
push
in
test
or
pop
jnp
push
xor
ss
adc
outs
and
imul
and
jmp
and
mul
mov
movs
test
popfw
pop
cli
mov
outs
cmps
sti
psraw
repnz
popa
lahf
mov
mov
scas
pop
ret
int
ror
and
push
popf
pop
lds
push
add
and
dec
jbe
fimul
pushf
xchg
xchg
xchg
pop
xchg
push
popf
int
mov
les
js
lock
push
and
fld
push
or
mov
inc
mov
repnz
or
cmp
jne
jge
cld
movs
mov
ficom
inc
adc
sub
(bad)
jne
cmp
hlt
lds
popa
and
jmp
mov
or
pop
mov
or
rcl
movs
(bad)
lods
into
rcr
adc
es
dec
mov
js
jb
bound
push
xchg
jecxz
and
xchg
movs
pop
dec
arpl
sub
adc
cmp
dec
dec
mov
ror
shl
test
inc
inc
sbb
fnsave
das
je
jmp
or
call
test
sub
pop
add
sbb
mov
push
add
mov
or
xchg
nop
out
cmc
or
je
jmp
jl
data16
adc
push
sub
cmps
mov
popf
outs
loopne
or
fs
cmp
and
mov
pop
mov
fnstsw
mov
xchg
pop
dec
cmps
or
mov
rol
pop
pop
into
lds
jae
enter
ret
gs
inc
test
mul
sbb
mov
mov
(bad)
test
outs
stc
mov
mov
sub
pop
push
fldenv
xchg
leave
icebp
xchg
lahf
mov
iret
xor
xor
das
movs
or
inc
sbb
push
imul
xchg
cdq
xlat
jne
dec
mov
jmp
das
js
dec
jmp
push
fild
out
xchg
leave
fnstsw
shr
scas
enter
sti
adc
adc
popf
repz
test
hlt
mov
mov
cmps
adc
sub
push
xchg
or
adc
xor
inc
xor
js
adc
mov
in
enter
jo
popa
xchg
mov
fbld
repnz
leave
fdivp
cli
ds
pop
adc
jmp
or
loopne
loope
out
mov
dec
in
sbb
cs
pop
pop
lahf
ror
or
in
loope
mov
cdq
or
xor
cmp
push
out
fcomp
sub
inc
xchg
sbb
push
sar
hlt
std
adc
loope
ja
dec
into
dec
jb
scas
adc
xchg
jb
mov
dec
jle
pop
or
lahf
xchg
fnstsw
fst
dec
pop
mov
ja
bound
cli
retf
pop
daa
int3
test
test
xor
xor
mov
cmp
or
aad
loop
rcr
sbb
cwde
mov
lahf
push
ja
mov
and
popf
loopne
int
nop
ja
data16
shl
mov
dec
jb
dec
pop
ins
mov
dec
push
push
jno
stos
jne
push
aaa
jp
sub
push
frstor
mov
inc
cmp
xor
xchg
mov
cmp
out
or
mov
and
cli
inc
cli
push
pop
inc
mov
popf
rcl
je
call
push
call
in
imul
push
inc
fwait
cmp
dec
sub
add
(bad)
jo
aam
mov
popa
jle
sub
shl
push
pop
jb
jp
add
mov
sub
push
daa
mov
retf
ror
stos
cmp
push
push
xchg
(bad)
and
inc
enter
inc
ja
js
test
rcl
and
lods
push
cmps
mov
data16
fsub
ins
(bad)
jmp
xchg
mov
xor
fsubr
cmp
cdq
jo
sbb
sub
mov
fs
inc
cmc
repnz
mov
sub
and
push
adc
mov
mov
dec
out
rcr
mov
(bad)
xor
mov
(bad)
sar
adc
jle
adc
ins
add
xchg
inc
lea
mov
inc
imul
inc
xchg
pop
outs
xchg
std
push
(bad)
les
adc
or
and
je
jb
cmp
jns
add
jge
mov
sbb
cmp
jmp
cdq
dec
rol
ja
adc
add
mov
repz
adc
mov
scas
aam
ins
dec
aad
stos
add
jne
adc
pop
fwait
stc
outs
push
push
jecxz
add
mov
out
xor
and
pushf
push
das
or
sub
ins
mov
cmp
sub
aaa
or
adc
inc
jp
js
and
dec
or
in
(bad)
cmc
adc
and
push
adc
mov
xor
mov
das
imul
mov
xor
stc
sub
(bad)
in
add
fs
inc
mov
repz
add
or
pusha
mov
add
loop
mov
jns
nop
push
pop
ja
(bad)
fstp
ror
bound
es
ret
fbld
test
js
cld
test
outs
or
and
cmp
xchg
xor
jge
ror
mul
lods
push
ja
push
or
es
jne
enter
sub
mov
or
lock
mov
cmp
jbe
and
and
(bad)
xor
pop
ja
jbe
bswap
cmp
cmp
call
jo
mov
enter
mov
push
sbb
push
pushf
fwait
push
movs
iret
popa
outs
sub
jl
xchg
push
iret
and
lahf
mov
sti
mov
dec
(bad)
jmp
pop
mov
dec
adc
sti
mov
lods
(bad)
(bad)
jo
and
cmp
mov
mov
ins
add
adc
push
dec
jns
dec
mov
shl
jb
test
mov
std
mov
fsub
cmps
or
push
mov
(bad)
js
sub
jg
stos
dec
cwde
stc
test
dec
mov
aad
add
sub
in
xchg
jl
loopne
ret
adc
and
mov
jp
dec
punpcklbw
push
jmp
dec
dec
sub
xor
fcomp
mov
sbb
rol
jge
imul
lds
jno
stc
cld
push
cmps
push
lahf
aaa
push
and
dec
lods
mov
cmp
sub
push
pop
dec
jae
idiv
jge
push
sbb
push
push
mov
lds
sbb
pop
xchg
repz
mov
push
(bad)
pop
pop
jmp
cs
(bad)
jp
outs
jmp
bound
sbb
adc
mov
imul
sub
pop
mov
lahf
outs
add
sbb
dec
aaa
fwait
xchg
dec
in
add
fmulp
mov
xor
lods
out
push
in
jecxz
in
or
inc
or
inc
hlt
int3
jne
adc
addr16
loopne
or
push
xchg
cli
les
nop
xchg
rol
retf
inc
fwait
inc
cmp
int3
jae
ins
popa
shr
jge
ret
aam
nop
lods
cmp
or
je
movs
inc
mov
addr16
add
jle
scas
scas
imul
and
push
or
mov
mov
jecxz
adc
movs
leave
out
(bad)
mov
inc
mov
mov
sub
adc
push
imul
pop
push
sbb
mov
mov
push
ror
inc
jb
sbb
sub
lds
cld
and
adc
add
fist
push
push
add
loopne
xchg
cmp
pusha
out
cld
sub
mov
cmc
js
iret
movs
pop
push
sbb
mov
sbb
ja
or
clc
lds
ds
sub
jle
(bad)
int3
sub
movs
outs
les
imul
jg
cmp
in
adc
inc
jle
ret
hlt
std
pop
(bad)
dec
add
or
jmp
iret
rcr
setge
fild
sub
out
fdivrp
aas
adc
fldenv
ret
and
cmp
jne
inc
repnz
daa
and
push
cwde
mov
arpl
out
adc
out
pusha
cmp
ds
push
jne
jmp
sbb
aam
je
jno
xchg
mov
cmps
xchg
jge
pop
jb
int
adc
inc
push
adc
xor
xor
dec
and
and
lea
sub
es
loop
icebp
jns
gs
add
cwde
icebp
push
sub
and
mov
int3
je
mov
inc
mov
mov
mov
add
push
mov
inc
and
jmp
jge
push
jb
ds
cmps
or
call
pop
aas
push
or
cmp
test
mov
repnz
bound
push
popf
add
cmp
add
cmps
pop
and
dec
pop
jmp
xchg
loopne
add
push
outs
imul
cmp
jg
das
sbb
or
adc
mov
or
fstp
sbb
dec
sbb
ret
cdq
ds
mov
sahf
outs
lods
popa
repnz
sahf
fs
add
loopne
push
aas
mov
jmp
mov
scas
cmp
int3
call
movs
mov
scas
fdiv
test
and
loop
jae
or
shr
xor
stos
outs
lods
stos
xor
mov
das
and
pop
les
mov
jmp
cld
mov
popf
dec
inc
mov
ret
pop
bound
mov
jg
dec
out
mov
mov
hlt
mov
mov
loope
push
xchg
movs
in
adc
pop
outs
cmps
in
sbb
adc
mov
sub
xchg
popf
sub
xchg
imul
add
mov
call
fnstsw
lock
(bad)
jp
not
imul
xchg
push
cmp
hlt
xchg
inc
and
add
push
mov
shl
adc
mov
imul
rcr
mov
add
cmps
mov
push
mov
mov
fstp
rcl
outs
sbb
jae
data16
or
stos
(bad)
test
stos
inc
sbb
test
and
jno
pop
test
add
lds
in
fsubr
out
in
xor
out
lea
loop
js
or
jle
or
outs
std
xchg
add
les
mov
pop
ret
mov
xorps
push
xor
add
mov
dec
or
inc
cld
inc
pop
push
jne
mov
dec
iret
sbb
mov
mov
popa
and
cmp
(bad)
push
add
ins
(bad)
bound
jg
test
sub
xchg
bound
jle
repz
sar
push
outs
lds
sbb
(bad)
loopne
imul
fwait
sahf
jo
push
add
inc
dec
dec
std
stos
mov
mov
ins
mov
pushf
ret
and
cmp
cmp
inc
(bad)
cdq
mov
leave
or
cmp
out
(bad)
clc
push
inc
mov
out
push
pusha
dec
xor
ret
mov
aad
imul
ins
mov
xchg
and
into
sbb
loopne
xor
iret
dec
xor
adc
imul
mov
call
jmp
aaa
bound
cmp
or
es
repnz
daa
xor
lock
add
gs
addr16
jp
mov
mov
inc
push
adc
pop
rcl
ds
sub
popa
adc
sub
push
sub
inc
test
test
xlat
pop
aam
call
mov
and
pop
mov
hlt
pop
mov
lea
out
retf
sbb
inc
(bad)
cld
inc
test
les
push
nop
adc
or
test
or
adc
push
std
adc
(bad)
call
(bad)
call
sub
pop
mov
iret
adc
hlt
and
pushf
push
mov
test
int3
lahf
add
push
cs
cmp
inc
call
inc
stos
sbb
mov
add
lods
fisub
xchg
leave
push
loop
cmp
mov
jl
movs
lea
out
sbb
xlat
dec
int
adc
dec
scas
and
fisubr
imul
rcr
dec
lods
das
bound
cmp
in
push
ss
frstor
pop
cld
add
sbb
in
jns
or
ss
xor
or
icebp
out
xlat
test
pop
test
pushf
mov
not
xor
sar
sbb
push
test
cld
mov
push
push
push
rol
push
addr16
push
in
jno
sub
(bad)
fdiv
inc
xor
loopne
pop
xchg
es
push
(bad)
pop
cmps
jne
test
mov
adc
sub
pop
mov
jg
mov
repz
(bad)
xchg
jbe
arpl
push
and
fucom
pushf
mov
mov
dec
push
ja
add
cli
pusha
mov
cmp
repnz
xor
dec
retf
push
outs
dec
(bad)
mov
(bad)
mov
(bad)
test
jae
(bad)
movs
mov
sub
aaa
test
xor
fsub
movs
add
push
fnstenv
push
fcomp
inc
call
mov
sahf
mov
inc
bound
or
in
adc
ret
imul
and
popf
in
repz
aas
add
fild
xchg
jno
and
scas
lods
popa
repnz
jnp
or
mov
fisub
and
dec
cdq
mov
pop
sbb
data16
(bad)
div
cmp
mov
push
and
cmp
mov
cmp
(bad)
(bad)
into
xchg
add
pushf
popa
adc
inc
push
loopne
sbb
sbb
push
jns
jmp
sar
or
xchg
push
(bad)
mov
int
adc
xchg
aam
cmp
jge
call
pop
ret
add
clc
xlat
cdq
mov
lock
test
push
pop
retf
in
pop
retf
adc
dec
ins
inc
adc
je
and
and
fs
jmp
bound
fnstsw
xchg
in
sete
or
loopne
neg
dec
popf
sbb
in
call
mov
lods
cmps
aas
mov
mov
mov
adc
xor
rcl
popa
shl
nop
or
loop
sub
sti
jns
jecxz
pop
retf
shl
add
ins
cmc
clc
jge
add
test
mov
adc
sbb
mov
outs
xchg
xchg
mov
jl
xchg
es
clc
jp
dec
jo
mov
test
pop
(bad)
cmps
adc
pop
mov
add
in
cmp
fist
or
movs
push
aas
shl
aad
jmp
mov
add
hlt
or
dec
int3
ins
inc
dec
mov
jno
outs
ins
jmp
fdivr
test
pusha
fs
adc
out
push
or
push
jl
fild
push
fst
sahf
les
loop
xor
(bad)
sub
ins
sbb
int3
into
pop
mov
pop
arpl
repnz
leave
ins
inc
mov
and
fs
dec
push
or
pop
pusha
sub
daa
test
mov
mov
call
gs
into
inc
xchg
pop
cmp
cld
xchg
or
pop
(bad)
ins
pop
cmp
mov
pop
xor
cld
imul
icebp
or
mov
shl
xchg
jl
sbb
xchg
ret
xchg
dec
pop
sbb
add
cmp
cs
jns
push
(bad)
retf
add
call
es
push
jmp
scas
xor
or
xor
mov
fidivr
push
mov
inc
mov
ret
inc
loope
sbb
mov
sti
stos
push
sbb
or
stos
cmp
stos
push
lock
push
lock
xor
inc
and
sbb
das
repz
push
pop
mov
push
cmc
(bad)
icebp
add
out
ins
adc
pop
repnz
ja
aam
call
fs
inc
sbb
aas
add
sbb
sub
pop
and
xor
add
jg
sar
pop
sbb
fwait
mov
cmp
add
cmp
out
adc
mov
out
dec
shl
test
xchg
mov
ds
push
cmp
add
mov
cmp
in
daa
(bad)
loopne
icebp
jae
xchg
inc
xor
sbb
cmp
mov
and
mov
inc
outs
or
jl
call
push
cdq
jecxz
xor
cmp
aaa
lahf
fstp
dec
leave
mov
mov
mov
xor
call
pop
test
aam
adc
mov
popa
jns
add
sub
fs
cmp
mov
xor
mov
inc
neg
lahf
xor
jge
pop
mov
pop
and
push
push
adc
inc
daa
iret
xchg
and
sub
(bad)
(bad)
mov
and
inc
mov
sbb
fbld
ins
cmp
jmp
outs
ds
movs
or
mov
mov
jbe
popa
fdivrp
adc
in
dec
ds
imul
inc
rol
addr16
cmps
aas
fmul
ja
retf
and
xor
xor
mov
stos
sub
sahf
xlat
jmp
in
mov
clc
mov
movs
test
lods
and
test
in
sub
repz
rol
push
pop
sbb
les
pop
and
(bad)
or
or
xchg
ror
inc
and
mov
in
popa
popf
pop
ret
lds
retf
mov
jno
popf
cmp
inc
fcom
mov
xor
mov
xchg
xlat
mov
adc
adc
pop
(bad)
push
dec
adc
mov
mov
cwde
(bad)
out
xor
stos
push
xor
div
inc
mov
mov
enter
and
popf
dec
cmp
push
outs
hlt
sbb
cmp
cmps
adc
mov
ret
sbb
adc
(bad)
ins
fsubr
movs
add
pop
retf
aam
popf
stos
clc
inc
xchg
jb
stos
sbb
cmp
cli
xchg
mov
mov
xlat
and
jnp
cmp
inc
scas
hlt
ret
mov
mov
pop
xor
push
lea
repz
push
cdq
stos
jge
or
arpl
pushf
clc
lds
stc
add
cmps
mov
loop
sahf
imul
push
mov
lea
movs
lds
xchg
add
xchg
sub
arpl
mov
cld
xor
inc
sti
inc
xchg
hlt
inc
jae
inc
vpshuflw
and
(bad)
cli
push
xor
cmp
cmp
mov
mov
jmp
nop
scas
inc
xor
retf
int3
sbb
fstp
shr
aaa
ins
imul
mov
jnp
xchg
fidivr
sbb
js
(bad)
ins
jbe
bound
mov
(bad)
cdq
xchg
inc
mov
push
in
mov
mov
or
xor
out
hlt
test
test
cmps
sub
popf
out
inc
mov
rcr
pusha
ins
ror
xor
xchg
fld
xor
call
sbb
or
jl
dec
pop
cmpps
add
sub
fs
jae
or
cld
(bad)
sbb
(bad)
(bad)
sti
mov
jecxz
popf
pop
pop
fwait
mov
imul
mov
scas
daa
aaa
dec
dec
sub
push
pop
adc
xchg
fmul
int3
inc
int
stc
std
add
inc
int
mov
out
inc
jg
xor
popf
inc
fcomp
je
test
mov
inc
xchg
dec
idiv
adc
and
cwde
in
test
adc
hlt
cmps
(bad)
mov
push
jg
pop
xchg
in
test
cli
adc
xor
(bad)
in
cmps
(bad)
jbe
push
mov
jecxz
dec
cdq
icebp
scas
stc
repz
and
lea
sbb
push
push
adc
hlt
pushf
test
not
sti
mov
ja
js
xor
or
pop
xchg
das
repz
(bad)
mov
sub
mov
fistp
leave
imul
out
jmp
shr
pop
sbb
mov
sbb
mov
in
sahf
(bad)
xlat
fistp
ja
cld
into
add
int
and
add
pushf
(bad)
push
and
inc
xor
cmc
xchg
je
mov
ins
cmp
jo
mov
mov
xor
push
imul
pop
push
and
aad
xchg
fwait
mov
mov
push
or
inc
pop
mov
pushf
test
(bad)
out
adc
add
or
out
js
loopne
test
(bad)
repz
jp
bound
ss
mov
cmps
or
xor
inc
addr16
adc
push
mov
mov
fst
popf
fimul
mov
mov
cmps
pop
jae
dec
mov
xchg
inc
push
xlat
lods
mov
out
out
push
xor
leave
ins
aad
aas
sbb
xchg
or
pop
aaa
call
movs
dec
pushf
shl
push
movaps
push
stc
jne
fistp
sub
sbb
pop
(bad)
jmp
jbe
popa
fsubr
add
pushf
pop
fimul
mov
mov
jo
lahf
jp
int
xchg
(bad)
fdivr
out
sbb
xchg
sbb
test
ret
sbb
in
pop
xchg
xchg
div
jl
mov
cli
mov
dec
call
push
(bad)
jp
mov
mov
shl
adc
xchg
fnstsw
test
inc
jnp
mov
add
sub
xchg
jecxz
scas
int3
fnsave
mov
push
xor
push
dec
xor
aas
lea
sub
mov
leave
icebp
ret
mov
dec
dec
fild
dec
daa
xor
xchg
cwde
test
ret
fs
dec
iret
sub
mov
shl
call
bound
in
add
fucomi
adc
shl
cmc
xchg
ins
xor
icebp
sbb
rcr
(bad)
rcl
mov
cmp
cs
mov
or
and
inc
mov
int3
pop
mov
push
inc
ror
mov
and
out
inc
stos
adc
mov
sbb
retf
dec
lods
int3
mov
pushf
arpl
js
adc
or
movs
popf
(bad)
shr
pop
imul
js
(bad)
sbb
(bad)
(bad)
cmovg
fldenv
ja
stos
jle
pop
pop
mov
push
push
aad
jmp
xor
pop
aad
adc
clc
push
das
cmps
shl
sub
mov
mov
ds
nop
test
bound
in
pop
jecxz
pop
mov
cmp
add
js
ror
xor
int
mov
or
add
cli
fstp
(bad)
je
shl
aaa
stc
loopne
lahf
popa
lods
inc
or
mov
adc
out
shl
cmp
mov
dec
jb
mov
je
enter
imul
lahf
sub
xchg
fst
ret
adc
pop
cdq
jmp
fstp
in
rol
into
xchg
and
pcmpeqd
cmps
bound
adc
ret
mov
push
pop
aam
test
loopne
xchg
jmp
mov
fisttp
std
pop
shl
call
setb
rcl
inc
int
and
arpl
mov
retf
pop
ins
pop
pop
in
fistp
hlt
out
jmp
cdq
js
cmc
xchg
inc
and
fs
or
mov
cli
in
ins
and
in
jl
call
in
jge
cmps
xor
rcl
xor
cmps
cmp
int
cmps
je
sti
mov
dec
dec
pushaw
sub
jmp
popa
mov
popf
add
pop
bound
xor
xor
aaa
popa
dec
ret
xlat
cmp
bound
mov
sub
cmp
imul
mov
adc
mov
push
push
push
cmps
(bad)
push
test
sahf
cmps
adc
sahf
movs
mov
test
pop
test
inc
and
retf
ret
sub
inc
ds
sub
les
call
and
jg
add
lods
nop
repz
(bad)
test
imul
cdq
sbb
mov
mov
ds
repz
mov
aas
xchg
pushf
push
in
aaa
out
mov
enter
pop
adc
cdq
mov
repz
test
mov
cmp
sti
jmp
jmp
imul
cmp
int3
push
xchg
pop
cmp
adc
lock
inc
(bad)
outs
in
test
bsr
mov
sub
mov
cmp
push
out
clc
cld
lods
lods
jle
push
jmp
jns
fsubrp
aad
jbe
fwait
call
mov
jmp
jecxz
(bad)
shr
cmc
mov
push
int
pop
stos
pop
ror
and
xchg
dec
dec
inc
mov
mov
mov
jne
mov
out
div
mov
push
sub
cmp
xchg
xchg
sub
into
test
mov
lods
test
dec
dec
mov
sbb
xchg
je
inc
out
dec
lods
cmps
push
sbb
dec
test
stc
dec
fiadd
add
xor
(bad)
inc
iret
aaa
jns
fbstp
retf
call
push
jge
push
cmc
push
les
pop
adc
adc
das
fs
sbb
push
jmp
add
jg
mov
out
mov
cmps
int
dec
fs
or
fist
out
mov
and
inc
adc
fild
ins
adc
shl
push
out
aad
or
push
les
cmp
neg
sbb
fisttp
push
sub
(bad)
mov
cwde
dec
out
mov
mov
inc
int
adc
sbb
adc
call
aam
adc
dec
shl
mov
lods
sub
mov
inc
sub
fnstcw
(bad)
adc
shl
daa
xor
jg
clc
and
sar
fimul
and
jne
pop
inc
push
hlt
cmp
inc
fs
jge
jbe
jns
mov
(bad)
bound
mov
dec
(bad)
jmp
sub
ror
cmc
mov
xchg
push
push
pop
adc
(bad)
push
adc
sbb
or
hlt
adc
cli
outs
and
jecxz
sub
cmc
fsubr
xchg
xor
and
movs
(bad)
imul
out
inc
sbb
jne
into
loop
xlat
mov
iret
test
ret
cld
jb
cmp
adc
sbb
clc
not
pop
ins
hlt
shl
jne
xchg
pop
sub
outs
out
test
cdq
adc
ror
ret
push
imul
mov
in
adc
outs
es
add
mov
cmc
push
mov
mov
ret
inc
retf
fst
loope
call
mov
div
movs
pop
or
je
test
or
in
test
sub
repz
pop
bound
leave
mul
test
sub
push
push
xor
pop
js
mov
mov
clc
ds
(bad)
sahf
js
mov
scas
jns
popf
mov
and
ret
stos
mov
stos
leave
test
shl
add
fldcw
xchg
outs
loope
adc
pop
sbb
jae
mov
jmp
xor
ss
clc
loop
pop
mov
fdivp
push
adc
jg
mov
out
arpl
mov
sub
sub
xlat
gs
pusha
xor
sub
jmp
xchg
aas
test
add
jg
(bad)
movs
loopne
les
xor
es
js
sbb
clc
lock
pop
adc
icebp
int3
das
retf
hlt
inc
xchg
fst
pushf
jmp
dec
leave
mov
xor
pop
shl
and
jae
xchg
fdiv
jge
jmp
pop
adc
pushf
aad
test
bound
adc
pushw
or
int
push
je
and
je
adc
enter
or
(bad)
add
push
jno
xor
jb
sbb
dec
inc
je
jp
lea
ins
pop
cli
xor
add
lock
inc
(bad)
mov
inc
pop
fwait
sbb
lea
mov
arpl
xor
push
xchg
push
int3
mov
add
or
popa
retf
aad
jb
cli
dec
pop
xor
aas
xor
mov
comiss
or
sbb
fadd
sbb
mov
cs
jge
popf
mov
mov
das
sbb
call
xchg
jne
fldcw
cs
xchg
lods
jl
cwde
add
sti
xor
fmul
out
sub
cmc
imul
jns
fs
jp
jnp
jp
retf
in
sbb
mov
inc
mov
into
rol
xchg
jne
push
fwait
xchg
mov
dec
aaa
fidiv
push
dec
lea
push
fidivr
jl
pop
mov
jge
add
and
mov
test
dec
cmp
pushf
adc
adc
pop
mov
cmps
and
mov
test
sub
push
sti
jmp
mov
pop
iret
hlt
stos
xor
mov
mov
lea
cmp
jb
mov
and
rcr
fbstp
cmp
pop
nop
sub
bound
push
sub
and
mov
call
retf
std
imul
fimul
inc
sar
int
adc
mov
mov
pop
cli
or
add
movs
sub
mov
pop
push
retf
xchg
loopne
push
cld
dec
jns
daa
in
dec
add
mov
mov
sub
aad
frstor
sbb
(bad)
pop
stc
les
adc
daa
mov
push
cmp
add
jl
scas
stos
pop
fnstsw
pop
inc
adc
shr
cmp
mov
repz
dec
daa
pop
(bad)
and
pop
mov
mov
ror
xor
cld
add
icebp
cmps
fsubr
jp
mov
mov
xor
rol
fwait
ss
stos
inc
mov
and
push
clc
(bad)
jmp
pop
mov
scas
mov
shl
imul
iret
dec
popf
and
pop
xchg
cmc
(bad)
test
or
xchg
lods
rol
popa
fmul
ins
dec
mov
pop
in
xor
xchg
mov
pop
dec
adc
xor
es
sbb
cmps
sbb
pop
ja
fwait
ret
scas
inc
cmc
dec
push
mov
repnz
xor
add
pop
dec
dec
lea
xchg
pop
stc
adc
out
sbb
retf
mov
pushf
adc
arpl
loop
retf
add
sahf
sub
push
(bad)
push
mov
push
jecxz
pop
and
xor
jb
(bad)
mov
adc
lahf
mov
inc
sbb
adc
mov
xor
inc
mov
cmp
rcl
daa
or
cmp
push
ds
ins
hlt
jg
mov
xchg
xchg
dec
add
push
sbb
(bad)
out
jle
push
dec
cdq
aas
test
inc
outs
cmps
cs
mov
dec
sti
loopne
adc
fst
gs
cmp
mov
lds
ds
xlat
cmps
jg
sbb
sbb
jecxz
push
test
push
mul
je
cmc
inc
hlt
aad
inc
btr
xchg
or
mov
ret
popf
lods
jbe
or
inc
fdivr
(bad)
and
lahf
ret
and
shl
mov
jno
dec
ret
inc
inc
jno
js
ins
dec
pop
mov
adc
lods
fmul
nop
mov
in
fidivr
je
repnz
xor
cwde
retf
aam
xchg
or
dec
fsub
int
dec
std
xlat
add
lods
int3
dec
movs
and
jecxz
xlat
hlt
cmp
sbb
lahf
loope
sbb
fxtract
mov
or
ficomp
mov
sbb
xchg
mov
mov
lea
jae
daa
mov
std
mov
in
inc
test
mov
pop
mov
shl
cmp
loop
mov
and
cmp
pusha
xchg
inc
jmp
into
repz
loop
imul
mov
imul
or
cs
leavew
ins
repnz
cli
cmc
je
mov
ret
mov
mov
repz
push
(bad)
nop
(bad)
pop
xor
loop
les
jb
mov
push
pop
adc
sub
mov
aas
jg
pushf
cld
or
jmp
imul
loope
pop
cs
and
inc
movs
out
xchg
and
repnz
in
pusha
inc
call
int
adc
dec
imul
es
adc
adc
mov
xlat
mov
loope
nop
dec
bound
fistp
test
cmp
cmp
pop
movs
mov
popf
and
add
add
out
mov
or
shr
xchg
iret
scas
cli
mov
(bad)
sbb
push
jae
jp
ins
in
int3
pusha
test
repz
dec
push
mov
mov
jp
sub
pop
mov
fdivr
push
jnp
inc
xor
iret
shl
mov
mov
push
(bad)
pop
push
and
or
dec
retf
(bad)
fstp
loopne
pop
out
push
bound
cwde
in
and
ins
push
push
sbb
xchg
mov
pushf
lods
popa
pop
xchg
lahf
sbb
or
or
int3
jo
fnstcw
dec
shr
jns
mov
test
pop
xor
ja
hlt
std
push
shl
dec
lock
iret
dec
xchg
jl
mov
scas
sbb
out
fwait
repnz
inc
movs
sar
data16
in
jb
cli
cs
(bad)
pause
add
(bad)
push
adc
mov
sub
sti
mov
mov
jmp
jp
sti
repnz
cmp
sub
add
pop
pop
enter
ret
test
popf
cdq
adc
retf
lods
inc
call
fdiv
and
ins
mov
pop
(bad)
out
imul
push
clc
adc
mov
out
sbb
stc
push
cmp
add
xchg
and
xchg
and
lods
mov
in
es
stc
daa
mov
daa
or
inc
xchg
test
and
shl
loope
mov
popa
fdiv
pop
fstp
push
test
mov
call
fistp
int
mov
add
xchg
lods
push
out
lods
clc
xchg
jmp
in
fdivp
sub
sub
and
loop
mov
sbb
add
bound
push
(bad)
xchg
and
in
repz
sbb
outs
add
mov
mov
rcl
jbe
sahf
mov
mov
xchg
push
addr16
push
sbb
test
rcr
lds
movs
ins
ret
mov
mov
(bad)
xor
or
mov
fs
fst
xor
gs
cmp
fiadd
xor
cmp
cmp
pusha
push
fsubp
pop
cdq
cdq
xor
(bad)
data16
xchg
or
mov
pop
mov
adc
add
int
cmc
into
dec
xor
jmp
mov
adc
shl
add
stos
out
ds
imul
add
push
or
int3
icebp
jmp
adc
push
fdiv
(bad)
leave
adc
lar
or
retf
imul
pop
xchg
mov
push
xadd
mov
ins
addr16
cmp
test
xchg
adc
push
scas
leavew
fsubrp
stos
jp
arpl
lock
rcl
loopne
or
and
xchg
pop
enter
(bad)
cmp
enter
cli
ss
jns
leave
stos
pop
fist
outs
xchg
jmp
out
sbb
xor
stos
nop
fcom
ins
mov
cmovo
shl
data16
imul
test
les
jns
in
push
jbe
inc
addr16
fcom
cli
jnp
sbb
fwait
lods
imul
gs
sub
loopne
add
scas
sbb
icebp
scas
dec
push
fistp
xchg
xchg
pop
and
sub
mov
out
and
adc
test
jne
lods
cmp
xchg
int
arpl
jno
xor
fadd
pop
mov
test
inc
movs
ja
or
sahf
call
(bad)
outs
pop
pop
cmps
mov
movs
aaa
out
xor
test
adc
xor
and
xchg
jl
xor
ins
and
lahf
sbb
adc
iret
sti
xor
into
jl
add
cmp
add
aam
mov
jno
push
or
add
popf
jp
imul
push
inc
shr
repz
push
xchg
push
mov
and
xchg
test
cmp
lahf
rcr
jns
(bad)
imul
into
mov
mov
pusha
out
xchg
loopne
cmp
xchg
mov
bound
lods
imul
push
test
fucomip
pushf
lahf
pop
push
push
lods
pop
add
fstp
imul
cmp
xor
push
iret
mov
gs
push
pop
push
sub
jns
sbb
mov
xchg
pop
mov
sub
lahf
adc
sub
cld
(bad)
cmps
or
and
cld
cmps
lds
cmps
xchg
mov
pop
cmp
dec
inc
cmps
fnsave
jge
xchg
retf
call
dec
push
jbe
xchg
mov
xchg
xor
mov
mov
stos
into
lea
jb
xchg
mov
mov
add
mov
mov
mov
sub
sahf
sbb
data16
addr16
int3
push
inc
or
pop
sbb
pop
es
ins
fs
ror
iret
mov
xchg
loop
inc
pushf
pop
test
imul
jmp
sub
jb
shl
xor
loop
(bad)
or
mov
dec
cdq
xor
mov
in
mov
or
mov
mov
mov
daa
pop
call
push
sub
inc
and
jne
pop
lods
les
add
jae
mov
shl
cmp
jae
ds
stos
adc
sub
stos
gs
jl
(bad)
stc
out
popf
or
pop
(bad)
sub
es
mov
adc
adc
repz
inc
(bad)
or
fcmovnu
imul
xchg
icebp
cmps
es
cld
or
addr16
les
cmps
pop
daa
jecxz
pop
mov
loop
rcr
xor
out
daa
xchg
or
mul
movs
mov
dec
popf
add
mov
sti
xchg
retf
scas
add
mov
out
pop
ss
int3
pop
mov
push
sahf
or
adc
inc
mov
scas
fwait
aam
dec
test
xchg
xchg
mov
adc
dec
mov
shl
xor
cmp
xchg
js
lods
and
aaa
ror
mov
repnz
cli
and
ret
sar
pusha
lea
imul
mov
and
jns
jmp
fdivr
fistp
push
xor
clc
push
in
and
dec
ret
test
adc
fwait
adc
shr
popf
arpl
clc
shr
jle
pop
retf
fwait
sahf
xchg
mov
arpl
ins
cmc
inc
fstp
das
fisubr
jmp
xchg
cwde
(bad)
ret
hlt
mov
add
mov
cmps
or
xchg
test
adc
mov
rcl
xchg
or
mov
xlat
mov
stc
jbe
cs
sub
mov
mov
loop
xlat
daa
nop
mov
push
mov
fidivr
mov
mov
sub
mov
iret
adc
cmp
inc
shr
dec
or
cmp
sar
or
and
jb
mov
xchg
or
out
(bad)
(bad)
mov
out
sbb
sbb
data16
jmp
add
jge
stc
jno
dec
out
mov
xchg
dec
adc
lahf
adc
add
clc
mov
test
aaa
sub
and
imul
test
loopne
xchg
ss
cmp
dec
fucomip
cli
xor
jge
in
fcmovbe
test
jmp
dec
cmp
ds
dec
inc
pop
lock
mov
xsaveopt
adc
xchg
and
(bad)
int3
cli
mov
push
dec
(bad)
add
cmc
mov
shr
int
mov
xor
(bad)
leave
ins
int3
mov
inc
popa
xchg
mov
cwde
jmp
and
push
repnz
fdivr
das
daa
mov
xor
mov
call
mov
dec
push
and
pop
cmp
mov
sub
ret
das
jbe
adc
jmp
add
add
push
xchg
mov
cmp
push
fld
js
fistp
mov
mov
test
ret
loope
(bad)
or
arpl
hlt
jle
mov
sub
jo
mov
in
rcr
jl
in
sbb
jns
fcom
lea
mov
test
popa
jnp
(bad)
loopne
retf
rol
mov
les
adc
out
sahf
retf
rol
lea
mov
scas
inc
movs
or
or
test
gs
jmp
push
push
jecxz
pop
sub
aad
nop
cmc
xor
lahf
out
or
xchg
icebp
sbb
mov
xchg
ins
rcr
movs
(bad)
push
pop
in
sbb
lock
adc
xchg
fs
mov
push
and
scas
ficomp
retf
retf
movs
rol
cmp
pop
mov
xor
movs
inc
aaa
fucomp
or
xor
das
adc
cmps
sub
xchg
mov
les
ins
jmp
test
push
xchg
fcmovnb
jne
(bad)
adc
xchg
add
fimul
mov
pop
xor
addr16
icebp
test
cs
or
cdq
lds
jge
ins
xchg
je
push
xor
add
jmp
in
xchg
rsqrtps
aas
push
imul
xchg
cmp
aas
push
mov
out
push
in
addr16
pop
mov
inc
shr
out
lock
push
popf
mov
lods
lds
or
mov
mov
mov
xor
loope
and
ror
lds
(bad)
mov
sbb
mov
mov
add
aad
lahf
ja
dec
mov
xchg
arpl
pop
dec
cmp
pop
sub
add
add
push
xlat
xor
call
push
cmp
cmps
popa
sub
xchg
jmp
jnp
das
push
pop
imul
mov
and
push
push
jle
ror
add
cmove
sub
rcl
lahf
sbb
test
pushf
sbb
sbb
add
sbb
bound
mov
out
add
pop
add
jp
inc
xor
add
out
ret
push
mov
inc
test
dec
lods
daa
loop
std
sbb
and
hlt
jecxz
mov
les
pushf
or
movs
mov
cmp
fucomi
jecxz
or
loope
cli
push
adc
sbb
jp
ret
mov
mov
les
pmuludq
daa
push
push
add
test
cmp
sbb
pop
fisttp
push
jmp
scas
rol
or
jmp
lods
xchg
and
mov
mov
adc
mov
aaa
or
fs
sub
data16
jbe
shl
mov
adc
icebp
enter
loope
cld
out
hlt
xor
fadd
and
cld
xchg
push
clc
out
movs
inc
push
xor
movs
jcxz
in
push
mov
sbb
mov
sub
scas
int3
retf
cmpps
rcl
out
mov
add
sub
inc
pop
jmp
fstp
adc
fsub
xor
adc
(bad)
mov
jle
adc
sub
push
pop
and
lds
and
fcomp
scas
pop
test
bound
cli
jno
mov
je
in
scas
scas
cmp
pop
sub
mov
ss
add
inc
xchg
jno
push
jne
or
mov
mov
or
popa
lahf
test
rcl
sar
stc
ret
and
mov
dec
dec
retf
jmp
xchg
inc
lock
inc
fild
and
cdq
jae
repz
pop
fild
mov
sbb
jmp
and
ret
fs
(bad)
fistp
adc
and
dec
rcr
lea
aam
in
jmp
mov
add
inc
aas
and
hlt
clc
mov
out
cwde
add
cmp
ja
push
dec
not
pop
jo
dec
inc
ror
dec
fdiv
cdq
cmps
aaa
jle
std
in
mov
hlt
xchg
movs
ficom
mov
out
shr
ficomp
push
sti
out
xchg
leave
shr
and
inc
pop
scas
js
xchg
(bad)
aad
cmp
shl
loop
or
xchg
cmp
mov
hlt
gs
and
pop
jl
js
jno
enter
lock
or
ins
sub
cmp
jmp
sub
mov
xchg
inc
shl
or
daa
mov
popf
push
jbe
sbb
bound
push
mov
pusha
aam
lock
mov
pop
(bad)
fistp
xchg
push
mov
adc
outs
bound
in
jmp
lods
int3
xchg
ja
cli
adc
adc
aad
and
inc
test
in
ret
push
push
test
dec
int3
(bad)
push
js
sbb
scas
mov
outs
push
add
call
fld
xor
mov
mov
jno
(bad)
out
inc
fs
xor
fild
loop
mov
dec
test
pop
cmp
xchg
dec
arpl
ror
pop
sti
stos
in
sub
lods
into
adc
pop
sbb
mov
out
xchg
test
jge
shr
sub
not
ret
(bad)
push
or
push
out
jmp
(bad)
jp
jge
and
and
push
int
std
(bad)
fs
xchg
dec
mov
(bad)
out
mov
stc
adc
bndldx
push
pop
ins
fist
mov
or
retf
mov
mov
ja
mov
push
cld
leave
jno
pop
cmp
mov
xchg
and
xor
inc
jmp
pop
sbb
adc
iret
inc
push
loop
in
cmps
call
mov
adc
arpl
dec
or
mov
mov
inc
xchg
mov
out
push
add
shl
enter
loope
test
js
dec
push
rcl
(bad)
aaa
xor
mov
jns
mov
mov
jb
cli
lods
(bad)
loopne
in
cs
adc
(bad)
mov
or
fisttp
rcl
mov
(bad)
mov
scas
xlat
out
rcr
fnstenv
push
cmp
std
retf
pop
cmps
dec
jne
sub
push
or
add
aad
sbb
das
(bad)
outs
or
mov
sub
mov
jle
or
jae
icebp
and
push
loope
in
shl
mov
stc
cmc
stos
cmp
push
lods
jae
inc
loope
add
aaa
adc
(bad)
in
retf
out
test
std
mov
loope
pop
icebp
paddusw
or
data16
scas
xchg
data16
out
inc
mov
inc
movs
(bad)
stos
ds
jmp
ror
or
nop
cmc
loop
lods
loop
push
test
inc
popa
add
cmc
popf
cmp
pop
inc
adc
ss
dec
dec
ja
dec
jne
xor
std
xor
in
jns
jne
xchg
repnz
xor
test
sub
mov
mov
add
push
movs
xchg
sbb
push
popf
mov
dec
cmp
cwde
test
pop
sub
add
jns
mov
stos
movs
push
in
sahf
fiadd
hlt
cmc
mov
push
xlat
cmp
inc
inc
mov
in
lods
jns
ss
es
mov
ins
inc
faddp
pop
jnp
mov
push
mov
in
add
js
add
in
cmps
mov
push
add
popa
cmp
sub
sub
mov
adc
rcl
inc
cmp
aas
push
pushf
dec
add
jb
or
add
pop
push
aaa
jle
imul
mov
cld
icebp
cmps
xchg
push
jmp
aam
sahf
sub
dec
ds
iret
scas
cdq
xor
shl
dec
cmp
int
inc
nop
cmp
adc
rcr
adc
jnp
pop
mov
call
sbb
push
out
jl
dec
and
ror
xchg
test
inc
mov
and
add
mov
push
pusha
dec
cdq
pop
or
inc
ins
lods
mov
xchg
retf
jne
(bad)
sbb
cmp
push
xlat
inc
jne
aas
cmc
dec
push
not
mov
std
jo
xor
cwde
in
inc
rcr
mov
mov
pop
mov
sbb
mov
mov
test
int
sub
dec
int3
adc
stc
cwde
adc
lods
dec
mov
pop
lods
jns
xbegin
jmp
adc
ret
cmp
test
mov
sub
cmc
imul
inc
aas
ss
xor
adc
jge
jg
and
adc
sar
popa
outs
mov
bound
aaa
dec
(bad)
imul
adc
cmc
dec
pop
jmp
in
sbb
fimul
shl
(bad)
fneni(8087
rcr
cs
test
and
arpl
push
add
imul
mov
out
or
retf
adc
pop
xor
mov
rcr
xor
dec
jp
stc
daa
push
ficomp
(bad)
mov
mov
nop
or
dec
mov
inc
(bad)
lahf
imul
xor
ins
stos
and
fwait
or
inc
icebp
push
pop
sub
test
loop
jnp
add
jge
pop
fbstp
sub
pushf
aad
das
jge
ins
push
push
jg
shl
out
daa
pop
xor
xor
aad
pop
scas
aas
movs
or
pop
mov
scas
dec
jns
nop
ss
add
and
idiv
call
aaa
push
fmul
jns
dec
out
lock
mov
rcr
mov
sahf
dec
push
xor
and
lahf
jb
seta
mov
loop
xchg
jle
pop
pop
mov
or
rcr
xor
push
sahf
mov
pop
pop
mov
cmp
inc
mov
xor
xor
cs
fwait
popf
in
cli
push
mov
push
xlat
daa
cmp
cmp
popf
sub
std
adc
stos
daa
idiv
neg
(bad)
dec
loopne
push
mov
adc
sub
mov
inc
push
mov
int
sbb
ins
add
jmp
push
mov
fisttp
dec
(bad)
xor
xchg
das
dec
data16
inc
aas
das
xchg
sbb
scas
sub
pop
mov
shl
inc
jg
pop
mov
inc
mov
cmp
push
and
aad
cmp
mov
push
adc
pushf
rcr
mov
xchg
inc
sbb
lods
dec
pop
mov
in
hlt
and
pop
stos
sbb
lock
cmp
ins
data16
and
scas
jmp
push
ins
test
lock
push
push
cs
shl
sbb
pop
ret
popf
movs
mov
loope
and
mov
test
mov
and
leave
fstp
xor
or
iret
movs
cmp
xchg
jbe
xchg
push
push
es
mov
stos
outs
adc
jo
or
mov
jns
pushf
les
icebp
sbb
and
pop
int
sub
xchg
pop
cdq
mov
adc
and
es
es
je
pushf
rol
mov
xchg
mov
(bad)
cld
ja
gs
(bad)
xchg
jmp
cld
adc
cmps
or
pop
pop
adc
mov
mov
mov
(bad)
dec
adc
jge
retf
xchg
nop
lock
aam
mov
ds
ins
into
push
mov
out
lods
dec
test
push
sti
dec
jecxz
cmp
lahf
lods
data16
sbb
mov
(bad)
jecxz
clc
lahf
(bad)
xchg
mov
jb
ss
xor
dec
add
push
stos
push
jl
jb
mov
mov
mov
ins
jl
dec
hlt
js
ja
lds
add
popa
and
loope
cdq
adc
mov
jmp
or
fdivr
push
cmp
jo
popa
je
sahf
sbb
dec
mov
mov
cs
dec
shl
push
out
dec
movs
xchg
ins
xor
xchg
dec
sbb
or
push
jb
icebp
dec
sbb
call
adc
rol
div
retf
inc
mov
adc
not
rol
outs
aad
shr
or
cdq
push
adc
arpl
sub
fwait
addr16
outs
fidiv
mov
or
test
stos
cmp
push
xlat
aad
inc
or
adc
or
pop
imul
add
sub
push
nop
outs
jmp
fisub
cmps
in
out
or
push
cli
xchg
rcl
inc
mov
adc
mov
cmp
fwait
pop
mov
jge
sbb
dec
(bad)
mov
pop
push
pop
lds
enter
ins
call
dec
mov
sub
jecxz
adc
jecxz
out
ret
and
pop
scas
fistp
test
addr16
pusha
adc
stc
cmp
int
jmp
out
cld
in
cmps
mov
push
hlt
mov
inc
mov
xor
mov
repnz
fsub
xor
xor
mov
xor
inc
mov
fidivr
mov
mov
sbb
ret
cdq
dec
add
push
jbe
cmp
loope
cmp
mov
mov
cmp
mov
test
ror
aas
jo
adc
dec
popa
adc
push
in
inc
or
cmp
hlt
(bad)
dec
adc
shl
jbe
xor
pop
leave
jl
jne
adc
mov
push
call
inc
or
test
sti
neg
push
outs
dec
les
loop
pop
fmul
ins
add
xlat
jge
movs
cdq
loop
nop
cwde
loopne
mov
lds
push
call
mov
movs
mov
outs
pop
fsub
sbb
xor
mov
jmp
(bad)
xchg
sub
enter
pushf
push
xchg
lock
xchg
pop
movs
xchg
into
(bad)
retf
push
int
fs
movs
scas
push
test
pop
sbb
popa
cmp
cmp
and
rcl
jno
in
cmp
cmp
push
cmc
mov
sti
scas
js
fs
add
pop
sub
jmp
scas
hlt
xchg
mov
retf
cdq
pop
dec
sub
aam
scas
or
mov
addr16
push
xchg
pop
stc
dec
xor
xchg
cmovno
movs
cmp
pop
cmp
daa
adc
sub
es
jae
xor
add
pop
mov
fs
popa
retf
push
add
stos
test
sbb
push
shr
mov
into
dec
out
xchg
lahf
retf
mov
std
scas
push
and
(bad)
pop
dec
fistp
into
xlat
push
ins
pop
repz
ins
in
movs
xchg
xor
xchg
add
sbb
push
cmp
dec
xor
jl
iret
sbb
repnz
rcr
sbb
xlat
mov
xchg
popa
cs
call
cmp
xor
or
bsf
mov
int3
pop
pop
adc
fwait
jl
push
inc
cmp
push
inc
sbb
jnp
icebp
cmp
leave
dec
data16
add
imul
mov
jmp
dec
addr16
lds
xchg
aaa
jmpw
and
retf
daa
lods
ins
adc
rcl
xlat
jmp
inc
aaa
daa
adc
out
cmp
ss
(bad)
sub
cmp
push
inc
add
pop
int
in
es
gs
dec
mov
out
test
int3
into
fs
adc
mov
ds
pop
cld
fistp
xor
shl
mov
mov
add
leave
sub
(bad)
jecxz
sbb
dec
xchg
and
loop
jbe
inc
push
out
sbb
stos
nop
loope
add
jmp
and
out
call
inc
mov
jo
imul
repnz
add
test
sbb
ins
popf
imul
retf
xchg
jbe
and
cld
pop
fisub
sbb
ss
lea
xchg
jl
ret
cs
adc
or
or
int
(bad)
cs
adc
push
fbstp
gs
(bad)
out
pop
daa
or
(bad)
mov
loope
out
fnstsw
jmp
out
dec
sti
es
fild
jae
mov
mov
arpl
inc
mov
mov
pop
push
in
jge
mov
cs
xchg
ja
sub
dec
les
test
and
lock
cmp
adc
push
push
pop
xor
aad
test
push
cmps
in
mov
fisub
push
inc
std
pop
add
sar
push
jbe
retf
ror
cmp
mov
push
hlt
inc
shr
sbb
fdivr
movs
mov
push
fisubr
or
aas
(bad)
gs
mov
push
cmc
loope
jmp
inc
sub
std
lea
jp
dec
les
retf
scas
loope
mov
push
jle
jmp
pop
lds
dec
fild
in
cdq
xchg
and
loopne
neg
lahf
int3
mov
cmps
data16
scas
js
pop
mov
ds
repnz
xchg
mov
ds
mov
in
aas
jo
ror
push
(bad)
cs
out
call
rcl
inc
or
call
cs
adc
push
sub
jp
cmp
or
jo
movs
out
lea
das
pop
xchg
repnz
push
sbb
out
ror
pop
sbb
loope
outs
aad
mov
mul
dec
and
push
inc
push
push
clc
stc
add
dec
cmp
test
mov
add
xor
cld
inc
fild
dec
dec
shl
mov
push
jmp
and
xor
repnz
jo
xor
and
movsx
hlt
mov
rol
xchg
sbb
xor
cs
popa
sub
arpl
aaa
xor
int3
popf
cdq
(bad)
mov
lahf
in
je
mov
mov
call
jno
pop
movzx
mov
cmp
fiadd
and
adc
leave
xor
jecxz
xchg
jl
dec
cmc
cmps
xchg
pop
cmp
repnz
sbb
adc
mov
fcomp
stos
daa
add
and
stos
push
(bad)
cmc
icebp
cmps
pushf
or
test
nop
sbb
inc
repz
sbb
mov
aas
inc
out
push
jp
pop
mov
sbb
(bad)
jp
or
or
dec
push
lods
jne
(bad)
idiv
sbb
mov
gs
adc
push
cli
fs
das
aam
and
pop
dec
jp
inc
cld
movs
jmp
xor
push
push
sahf
or
mov
pop
push
(bad)
sub
(bad)
dec
xor
(bad)
fmul
mov
sahf
sub
gs
mov
mov
js
and
cmp
gs
cmc
pop
and
pop
adc
mov
adc
push
call
push
call
stos
mov
aad
jno
and
ja
cld
test
jnp
mov
sbb
mov
inc
pop
mov
and
jbe
fimul
rol
dec
push
lock
push
adc
sahf
or
jo
sti
inc
addr16
add
cld
ss
ja
xchg
xchg
lahf
inc
dec
sahf
gs
jp
addr16
mov
mov
jb
inc
outs
mov
loop
push
cld
retf
(bad)
mov
test
neg
cld
retf
imul
adc
and
mov
sub
cmp
mov
cmp
movs
lods
pop
or
dec
into
add
(bad)
jl
and
or
mov
inc
ja
in
retf
or
repz
mov
mov
pop
mov
leave
movs
xchg
jmp
add
loope
or
inc
sub
dec
push
stos
ret
fwait
aam
leave
cmp
or
mov
data16
rcl
pop
push
cli
rcl
push
pop
ja
sub
or
ins
mov
shl
lahf
jg
stos
retf
lahf
ret
and
iret
sbb
arpl
(bad)
jnp
aam
push
add
push
cmp
mov
sub
push
pop
jns
mov
lea
jb
pop
stc
mov
push
sahf
imul
pop
in
adc
and
add
pop
mov
push
clc
std
movs
pop
xchg
inc
call
cli
mul
aaa
pop
sar
ds
das
push
in
inc
and
outs
adc
pop
or
ret
out
xor
ret
stos
test
not
icebp
out
mov
lods
in
mov
push
pop
mov
fdivr
sub
jns
dec
mov
jge
xor
push
dec
mov
and
mov
pop
and
adc
xor
je
push
enter
mov
dec
jmp
test
xor
shr
out
popf
leave
out
mov
retf
xchg
in
icebp
stos
pop
cmc
push
icebp
mov
xchg
(bad)
sbb
pop
test
dec
or
outs
dec
mov
jne
jno
pop
pop
mov
ins
xor
pop
sbb
mov
jmp
lods
call
inc
bound
into
push
scas
sbb
jecxz
stc
pushf
push
clc
lea
push
add
xchg
fmul
cmps
cmp
add
dec
enter
les
popf
and
sbb
add
inc
push
jbe
pop
xchg
fild
jg
aad
inc
lods
adc
pusha
fiadd
adc
inc
cmp
cmc
std
inc
ret
pop
sti
pop
icebp
(bad)
mov
outs
or
sti
mov
nop
mov
jbe
push
dec
lods
loope
fcomp
ja
pushf
test
mov
mov
sbb
jecxz
(bad)
in
je
sub
popa
pop
pop
das
inc
pop
jl
pop
ds
ins
xor
aam
or
cmp
inc
gs
js
xor
cmp
jo
mov
jns
xor
sar
lods
cwde
test
(bad)
pop
hlt
sub
sti
mov
jbe
test
xor
and
push
sub
enter
push
(bad)
shr
lods
aam
add
jle
add
pop
rcr
aas
mov
retf
loope
addr16
adc
clc
popf
out
xchg
ds
repz
mov
adc
ins
loope
out
xor
mov
shl
inc
aad
leave
je
xchg
in
mov
sbb
and
jg
not
and
jno
push
sbb
jmp
leave
imul
mov
jne
in
pushf
xlat
adc
or
retf
adc
jecxz
fdivr
pushf
cmp
push
mov
dec
cld
mov
mov
adc
pop
cwde
push
pop
xchg
jl
repz
and
xchg
fdiv
aaa
repnz
daa
mov
xlat
in
mov
ins
cmp
daa
pop
mov
inc
xchg
push
pop
nop
xor
cmp
xchg
add
sbb
fbstp
mov
add
cmps
mov
call
rcl
pop
push
lahf
mov
fcomi
xlat
or
hlt
or
pop
sub
mov
xchg
xchg
in
cs
adc
mov
jl
(bad)
sub
ins
sbb
jne
sbb
dec
mov
xor
inc
cmp
hlt
xor
cmp
dec
sub
xor
or
mov
loop
iret
sbb
dec
dec
aad
bound
and
dec
ins
ja
retf
dec
mov
adc
mov
pop
add
jle
(bad)
aaa
sbb
jmp
imul
dec
xor
xchg
out
(bad)
or
mov
mov
push
enter
mov
neg
jb
jo
jl
hlt
xchg
dec
cmc
adc
inc
xor
ins
mov
mov
mov
ror
les
popa
fist
push
(bad)
pop
pop
(bad)
jb
hlt
push
outs
ja
loope
in
xlat
adc
popf
lods
mov
dec
shl
jne
add
xchg
or
pop
jnp
dec
pop
sbb
sub
(bad)
repz
in
push
jge
repz
and
xchg
repnz
xchg
jbe
jge
push
int
aam
(bad)
jp
outs
mov
and
inc
inc
adc
push
add
addr16
das
pop
xor
push
add
idiv
into
sub
mov
(bad)
test
mov
xor
xchg
mov
mov
rcl
movs
xchg
xlat
sbb
sti
pusha
ins
add
add
lods
ficomp
das
sbb
(bad)
cmp
inc
enter
push
cli
sbb
movs
sub
cs
xchg
jo
jle
es
ss
and
icebp
aas
xchg
popa
xchg
mov
repz
aad
stc
sbb
nop
scas
outs
gs
movs
rol
jge
or
sub
sbb
sub
lahf
mov
mov
adc
je
adc
sub
out
cmp
mov
pop
jecxz
xor
enter
mov
push
nop
nop
(bad)
mov
lock
push
mov
cmp
sub
push
cwde
lock
std
test
arpl
mov
stos
adc
int
daa
into
inc
inc
test
dec
dec
sub
add
in
dec
mov
jmp
nop
push
jmp
dec
call
out
cmp
adc
mov
fwait
sub
mov
pop
(bad)
fbld
(bad)
pop
and
or
les
adc
xor
mov
js
mov
clc
repnz
lea
pop
jp
xor
mov
popa
not
cld
mul
or
xor
adc
mov
movs
xlat
sbb
ins
cmc
mov
mov
and
push
bound
pop
add
lahf
mov
(bad)
lods
jle
sub
xor
stos
pop
inc
cdq
xchg
sbb
sub
jae
js
push
pushf
sub
(bad)
mov
xor
mov
rcr
add
icebp
jmp
add
push
into
xchg
sub
add
and
add
or
xor
aas
adc
xlat
(bad)
cmp
dec
lahf
je
sbb
xor
jb
jno
cmp
sub
in
mov
xlat
(bad)
pop
or
lock
jno
stos
pop
jp
push
sub
sbb
out
pop
(bad)
fisub
sub
sub
jmp
pushf
push
sar
mov
ins
push
adc
xor
cmp
xchg
cli
sbb
sti
rcr
ss
jge
xor
push
rcl
add
or
mov
pop
cmps
jno
sbb
jno
in
outs
cmps
push
or
enter
cmp
or
xchg
repz
idiv
(bad)
push
lods
pop
icebp
push
(bad)
movs
dec
push
(bad)
cld
scas
aam
or
mov
mov
or
lea
mov
ret
ss
hlt
sbb
inc
adc
pop
jmp
rcr
xchg
and
jns
xchg
pop
div
movs
adc
les
daa
(bad)
cdq
lock
inc
inc
pop
jge
or
ja
push
pop
jno
xchg
sub
(bad)
movs
push
dec
fdivr
(bad)
pop
jp
fwait
pop
jg
retf
pop
rcr
(bad)
or
xor
adc
mov
dec
cmp
or
inc
push
lds
sub
xchg
bnd
pop
jno
neg
iret
push
jp
sub
jne
stc
fidiv
inc
leave
push
adc
push
push
xchg
sar
inc
mov
dec
fmulp
cdq
sar
mov
aas
push
(bad)
leave
xchg
push
sub
mov
loop
xchg
add
jo
mov
mov
call
inc
ror
test
adc
pushf
aaa
test
push
loopne
popa
xchg
cmp
scas
dec
dec
inc
or
fild
adc
jg
jb
dec
jno
inc
shr
ins
push
je
outs
or
sub
lock
xchg
call
movs
je
and
pop
or
popa
adc
jns
sti
pop
rdpmc
fidivr
sbb
ja
fsub
mov
fnstsw
fldenv
(bad)
jmp
add
or
adc
xchg
pop
leave
aas
adc
jne
mov
push
dec
add
mov
fcomp
ins
fidivr
mov
sbb
pop
out
xlat
sub
xor
sbb
je
jg
arpl
mov
adc
fdiv
lahf
ss
in
jno
sbb
jmp
pushf
cmp
dec
shr
inc
enter
enter
lods
(bad)
xchg
int
lods
rol
fcomp
shl
scas
ja
mov
lahf
stos
xchg
fnsave
cs
inc
mov
arpl
into
mov
pop
fisttp
fprem1
fdiv
cmc
ss
dec
mov
or
xchg
jecxz
sar
xlat
add
imul
mov
add
sub
imul
xor
mov
leave
cmps
mov
int
push
jmp
cmp
retf
push
sbb
aad
in
faddp
push
mov
cli
adc
push
adc
test
or
and
and
dec
in
add
push
in
rol
or
cmps
outs
(bad)
les
mov
mov
push
dec
sti
enter
dec
jnp
rol
pop
push
iret
mov
stos
jmp
(bad)
(bad)
aam
popf
jb
cmp
lock
test
cmp
xchg
jne
and
dec
loop
ja
xchg
rdpmc
hlt
inc
retf
push
outs
jb
dec
jno
(bad)
and
in
imul
xor
adc
jno
inc
dec
and
cli
jne
dec
pop
std
enter
adc
add
icebp
outs
jp
test
das
aad
inc
mov
dec
xchg
out
xchg
jbe
mov
pop
(bad)
pop
and
ficomp
fwait
sbb
popa
test
lods
js
call
and
add
retf
sar
dec
stos
lods
sub
pop
cmp
xchg
push
mov
add
push
mov
(bad)
fnstcw
and
mov
imul
adc
sub
out
mov
mov
rcr
and
sub
adc
and
add
shl
cmp
xor
sbb
dec
pushf
mov
mov
push
xchg
jle
jp
je
or
jecxz
fdiv
sbb
lods
sbb
loopne
sub
mov
loopne
mov
mov
scas
mov
(bad)
sar
sahf
pushf
xor
fwait
mov
not
loop
adc
push
add
and
inc
in
fnstenv
jns
loope
cmp
inc
les
(bad)
mov
hlt
lahf
stos
sbb
cmc
arpl
sar
or
movs
sub
dec
inc
aad
xor
je
sahf
cmp
jae
xor
dec
pop
stos
rcl
arpl
push
sub
inc
jne
out
sti
lahf
fcmovnu
repnz
inc
(bad)
fistp
enter
aaa
add
pop
mov
shl
cs
sbb
add
std
mov
and
repz
mov
pop
test
popf
pop
sbb
push
das
mov
test
mov
imul
adc
call
mov
or
mov
mov
mov
dec
pusha
or
or
stos
add
cmp
fst
aad
dec
and
sar
fisttp
dec
push
clc
imul
cmc
jno
retf
test
std
into
jo
lods
es
and
scas
sub
aaa
and
xor
and
mov
cmp
dec
stos
shr
pop
or
add
in
mov
and
fisubr
repz
pop
and
div
call
adc
sti
sbb
pop
xor
add
xchg
int3
xor
pop
in
lods
sub
pop
stos
cli
push
and
sub
mov
mov
pop
bound
add
imul
sbb
in
or
mov
mov
jle
xor
ror
and
sub
es
pushf
inc
push
inc
xor
sub
mov
test
cdq
pop
fst
cmp
sti
dec
ss
data16
push
stc
mov
ins
adc
or
add
pop
out
jg
les
pop
jmp
push
sbb
jnp
je
push
jg
jb
in
sub
lods
push
adc
push
sub
sbb
gs
cmp
fdivr
clc
push
outs
scas
popf
out
shl
cs
mov
out
or
cmps
pop
dec
es
lds
das
or
xchg
jp
and
stos
stos
ror
imul
jp
add
ja
gs
pop
(bad)
and
mov
or
xor
stos
nop
xchg
cmp
shl
mov
sbb
data16
mov
mov
xchg
xchg
push
push
and
xor
icebp
retf
pop
jmp
loope
jmp
dec
rcr
bound
bound
mov
addr16
xor
xchg
scas
fcmovne
xor
sub
or
into
dec
dec
aam
jnp
push
ds
pop
or
lahf
bound
push
inc
dec
xlat
adc
movs
js
jns
int
dec
and
das
pop
adc
mov
outs
sahf
xor
mov
pop
mov
dec
pop
mov
out
punpckhbw
fnsave
jmp
mov
aaa
aam
dec
xchg
out
sub
out
push
addr16
sub
ins
loopne
adc
or
jle
sbb
mov
(bad)
aad
(bad)
cmp
inc
inc
dec
push
cmp
inc
mov
dec
jge
lds
shr
xor
xchg
stos
(bad)
mov
pusha
push
mov
jle
test
(bad)
and
cmp
add
retf
jle
enter
aas
sbb
in
cmp
xchg
or
mov
xor
sub
jmp
xadd
mov
ja
cmp
repnz
xor
cli
jle
mov
fdivr
or
loop
push
inc
loopne
cmc
jnp
hlt
mov
scas
or
dec
cmp
or
push
leave
fwait
xchg
pop
xlat
pop
mov
jae
pop
adc
pop
popf
mov
daa
mov
in
ror
mov
mov
cmc
push
mov
cmps
shl
push
cld
sbb
xor
call
xor
sub
not
loop
pop
jecxz
adc
in
in
or
pop
in
addr16
sbb
into
fdiv
or
adc
popa
mov
adc
pop
ins
sub
fs
outs
pop
stc
lahf
sub
cmps
jno
nop
enter
out
mov
rol
stos
sar
xchg
outs
sbb
cli
sar
in
icebp
cs
fcomp
jmp
dec
xor
or
(bad)
xor
or
sbb
lods
dec
add
out
bound
jle
mov
xor
out
fst
jns
pushf
das
cmp
dec
xlat
cmc
add
outs
ja
call
add
mov
imul
(bad)
xchg
add
repnz
mov
js
mov
push
sbb
clc
xchg
in
mov
pop
shr
bound
lahf
pop
outs
jge
jno
rol
pop
pop
clc
movs
mov
cdq
sti
jmp
fwait
popa
mov
and
mov
movlps
or
xor
les
pop
stos
dec
sbb
sbb
xor
add
daa
nop
jmp
xchg
es
mov
sub
adc
pop
inc
fucomp
push
or
(bad)
jnp
jnp
inc
pop
cmovp
test
add
pop
outs
rcr
or
dec
daa
mov
jge
mov
adc
cmc
rcl
add
ror
ins
and
add
jmp
mov
std
adc
jle
add
inc
movs
sbb
lock
scas
adc
push
sub
add
mov
or
(bad)
arpl
jg
add
test
or
clc
jmp
loopne
push
lock
cli
jmp
les
sbb
and
dec
jl
push
and
or
xchg
mov
xor
daa
jecxz
lock
jno
jo
clc
or
pop
jae
xor
test
ja
sub
scas
ss
push
push
fcomp
and
dec
adc
ss
and
gs
xor
data16
fisttp
push
jb
jmp
mov
imul
enter
push
icebp
jno
pusha
inc
retf
cmps
add
cmp
scas
outs
mov
cmc
sti
out
lea
ins
aad
sub
mov
cmp
movs
pop
mov
pop
inc
scas
ret
in
jg
add
cld
cmps
sub
call
sahf
retf
call
lods
dec
cli
test
mov
retf
jge
jno
xchg
rcr
imul
movs
jmp
inc
xor
push
cmp
clc
sti
pop
xchg
mov
repz
aam
pop
jbe
test
and
inc
cmp
or
mov
xlat
lods
aas
sbb
retf
leave
or
popf
push
mov
push
inc
es
out
out
jmp
add
jl
aas
out
pop
jbe
(bad)
mov
pop
dec
pop
mov
cmp
loopne
mov
je
test
push
push
fidiv
hlt
mov
int
cld
stc
call
add
ret
mov
cs
or
mov
jecxz
pusha
cmp
push
jne
jl
mov
mov
jle
loope
mov
outs
mov
sahf
jmp
or
and
dec
aam
inc
cmps
inc
lahf
icebp
call
mov
mov
pop
mov
lods
jae
lods
out
mov
aaa
adc
jge
sub
push
shl
jl
sbb
fcom
sbb
leave
xlat
jecxz
sbb
sub
pop
fs
test
test
loope
cwde
add
bound
xchg
mov
loope
inc
inc
add
and
cmp
mov
dec
or
inc
push
push
fs
sbb
scas
pushf
std
pop
aam
nop
xchg
in
mov
dec
inc
js
cli
fcom
mov
jmp
imul
ror
(bad)
fimul
int
lods
int
jae
sbb
cmp
imul
test
mov
les
xlat
inc
push
fyl2xp1
lods
cs
push
sbb
fwait
push
and
inc
call
pop
sub
jo
mov
xchg
mov
lea
test
adc
ret
mov
retf
fisubr
mov
pop
dec
xchg
mov
pop
clc
das
retf
les
mov
std
sub
cmp
call
nop
push
sbb
push
loopne
test
push
cs
mov
xchg
add
stos
mov
pop
cmc
lds
retf
dec
pop
je
mov
xor
mov
push
and
and
add
(bad)
popf
ins
cwde
je
sub
ins
fisubr
movs
push
clc
push
xor
aaa
sub
jle
(bad)
mov
test
push
lds
inc
pop
adc
xchg
popa
xchg
mul
fisubr
or
in
stos
inc
ins
in
(bad)
nop
mov
ja
inc
ret
mov
(bad)
and
adc
stos
stos
pop
test
outs
and
pop
sub
fs
out
lods
and
jbe
jle
outs
not
xor
(bad)
mov
xchg
jp
jg
cmp
jg
popf
ret
(bad)
mov
ins
mov
(bad)
sbb
movs
jmp
fcom
aam
and
lock
daa
inc
mov
xchg
rol
jo
in
je
cmp
cwd
and
daa
jle
mov
js
imul
lahf
shl
mov
and
imul
push
pop
cmp
cmps
sub
xor
sbb
push
rcr
pop
shr
push
leave
cmp
in
sbb
cmp
das
inc
lahf
stc
and
loop
pop
xchg
jge
out
cmp
sub
push
outs
imul
popa
sub
(bad)
mov
(bad)
fisttp
jmp
fistp
and
mov
xchg
add
lea
call
inc
jecxz
dec
js
mov
sar
shr
xor
icebp
iret
test
lock
ror
iret
pop
pushf
pop
int
mov
mov
je
cmc
or
mov
inc
and
div
imul
je
and
mov
add
sbb
daa
dec
fst
call
in
and
fdivrp
add
pop
and
stos
out
pop
nop
jg
and
jmp
imul
xchg
or
jle
inc
test
mov
jmp
pop
mov
cs
lock
pusha
mov
xchg
aaa
sti
scas
ror
dec
jnp
ins
jp
add
lods
jmp
aad
or
or
mov
dec
mov
loope
xchg
push
adc
mov
mov
mov
jo
loope
mov
mov
mov
inc
mov
fld
jns
xor
push
jmp
push
repz
pushf
retf
icebp
mov
inc
bound
xor
xchg
adc
(bad)
imul
and
gs
add
cmc
sbb
pushf
daa
xchg
js
add
cmp
dec
pusha
iret
adc
int
pcmpeqb
call
mov
bound
mov
out
add
xor
mov
add
(bad)
les
pop
out
aas
push
pop
cld
add
(bad)
(bad)
lock
pop
dec
push
or
es
mov
and
push
out
aas
fmul
cwde
shr
loope
dec
cmp
cmp
pop
dec
mov
sbb
sbb
ja
arpl
es
retf
mov
ror
add
pop
stos
cmp
(bad)
jbe
dec
(bad)
jb
popf
xchg
test
mov
dec
inc
jne
jl
sbb
cmc
adc
sbb
sar
stos
or
jnp
xchg
loope
jno
in
sub
imul
retf
push
jno
test
je
push
popf
xchg
inc
inc
imul
cli
in
mov
xor
or
add
movs
mov
add
ret
push
pop
xchg
push
mov
retf
and
gs
or
clc
jo
shr
imul
les
or
or
loop
add
sub
rol
xor
lods
adc
shr
mov
mov
fiadd
sub
adc
ins
sbb
xlat
ror
mov
mov
addr16
xchg
js
dec
test
mov
add
retf
push
clc
pop
cmc
mov
mov
aaa
add
xchg
cli
push
ja
stos
push
test
movs
push
jle
(bad)
mov
push
test
mov
add
and
adc
repz
test
(bad)
(bad)
xor
or
in
mov
pop
dec
dec
rol
xor
out
xchg
adc
push
fdivr
cmp
lock
xlat
push
enter
adc
es
jp
mov
js
loopne
jecxz
jne
std
xchg
aam
popa
imul
loop
idiv
cs
mov
push
push
mov
in
and
ret
xchg
inc
xor
pop
mov
sti
fsubr
xor
sub
mov
shr
push
and
es
adc
pop
add
xlat
adc
mov
push
xchg
call
xchg
dec
clc
mov
fs
mov
pop
jne
clc
dec
test
or
dec
int3
mov
pusha
lahf
int
or
mov
fsub
fs
sti
popa
mov
push
into
jno
pop
sub
das
xchg
test
ficomp
cmp
dec
mov
out
scas
imul
cli
adc
loope
inc
popf
test
sgdtd
pusha
push
jbe
shl
sbb
dec
sbb
adc
out
lods
or
adc
jl
cmp
push
inc
fisub
icebp
inc
std
sbb
inc
out
push
loope
add
les
(bad)
push
mov
(bad)
dec
mov
xor
xchg
and
or
test
lock
pop
mov
arpl
loop
sbb
xchg
mov
lahf
cmp
mov
daa
lock
dec
xchg
adc
(bad)
ret
clc
(bad)
imul
mov
mov
sbb
out
mov
and
mov
stos
test
pushf
cdq
das
mov
cdq
inc
adc
cmc
pop
cmp
adc
ror
jmp
or
ret
mov
or
int
xor
retf
xchg
sbb
jecxz
mov
adc
mov
cs
inc
dec
(bad)
out
mov
out
pop
inc
add
ds
push
sahf
adc
cdq
dec
fstp
sbb
and
add
pop
ins
repnz
std
int3
aam
inc
ficomp
lahf
mov
popa
mov
jns
pop
cmp
push
shr
ins
in
pop
lahf
retf
cld
daa
das
jnp
lds
inc
ins
test
ret
jl
add
dec
pop
das
sub
fild
(bad)
mov
repz
into
fst
enter
test
cmp
mov
les
cmp
enter
xlat
arpl
fidivr
in
cmp
mul
bound
inc
mov
dec
in
mov
pop
js
push
or
popa
aam
cwde
jno
mov
cmp
add
or
sub
inc
outs
inc
and
sbb
in
cmps
imul
and
sbb
push
nop
mov
mov
retf
xchg
mov
(bad)
ja
xor
pop
aam
cdq
outs
xchg
xchg
jg
push
xchg
cmp
xchg
inc
jns
arpl
(bad)
imul
add
stos
fld
shl
push
sbb
sbb
pop
lods
jl
xor
pop
inc
cdq
lock
not
sbb
mov
adc
pop
call
sub
lock
sar
mov
push
arpl
inc
fdivr
xchg
jne
dec
pushf
rol
adc
jge
mov
add
and
rcl
or
stc
add
enter
retf
(bad)
movs
in
cli
test
pop
pop
sbb
scas
or
fwait
mov
aas
jmp
clc
dec
pop
leave
packsswb
or
icebp
pop
and
rcl
in
mov
mov
mov
xchg
push
mov
bound
mov
xchg
mov
psubsw
(bad)
sub
jns
xchg
jmp
pop
inc
mov
sub
push
inc
push
clc
in
jge
cmps
xchg
sub
xchg
ja
adc
push
scas
scas
or
jmp
jge
push
fadd
cmp
in
or
gs
test
jmp
sar
and
ins
jno
pop
mov
dec
pop
jp
or
imul
dec
jecxz
(bad)
push
sbb
pop
push
and
xchg
dec
cli
sub
les
call
arpl
cdq
xor
mov
pop
popf
rol
and
ror
jnp
cdq
adc
push
loope
dec
adc
adc
std
das
mov
ss
sub
lods
pop
xchg
xor
xor
out
ret
inc
add
and
ds
fdivr
stos
stos
cs
sub
cmps
adc
movs
outs
lea
(bad)
nop
sub
out
inc
inc
or
outs
lods
shr
fcomp
adc
cmp
rcr
repz
sub
jmp
movs
cmp
mov
mov
inc
imul
arpl
adc
jnp
stc
or
ret
stc
and
xchg
cmp
push
ds
mov
xchg
mov
dec
test
push
push
in
daa
push
pop
push
loopne
div
adc
out
mov
jmp
in
outs
cwde
(bad)
jno
cli
mov
jecxz
or
inc
push
mov
(bad)
sub
mov
xchg
fwait
xchg
mov
inc
sub
cmps
jnp
add
adc
add
xchg
les
xchg
dec
xchg
and
mov
xlat
pop
or
ror
call
jle
sar
out
stc
retf
push
fiadd
rcr
mov
sar
cmp
push
push
mul
inc
pop
jnp
adc
sbb
popf
in
dec
cmps
push
getsec
nop
push
xor
arpl
je
popa
leave
mov
jo
jg
fninit
out
cli
repnz
or
dec
addr16
leave
popf
retf
sti
ret
not
test
je
jnp
push
imul
inc
add
add
or
dec
pop
xor
test
test
fisttp
call
lods
fwait
cdq
daa
xor
stos
pop
cmps
jbe
test
add
mov
push
inc
mov
adc
xor
aaa
adc
out
shr
pop
xchg
scas
jl
test
xchg
or
pop
dec
sub
js
lods
fwait
sub
jl
inc
loop
pop
pop
enter
inc
xchg
call
pop
or
stc
adc
in
shl
movs
sbb
data16
scas
mov
sar
xchg
cmp
add
fstp
ins
add
xchg
jns
outs
ss
pop
mov
mov
retf
mov
cwde
xchg
inc
ret
push
xchg
adc
gs
test
pop
ret
addr16
adc
scas
adc
sub
pcmpeqd
mov
sub
xchg
out
and
imul
clc
sub
mov
in
mov
or
push
dec
loope
sti
xchg
xor
ins
cmc
adc
mov
fwait
mov
mov
lahf
inc
push
ret
sub
test
movs
dec
mov
and
adc
push
shr
mov
xchg
jl
inc
jecxz
push
mov
add
or
add
jmp
call
mov
adc
push
sub
mov
inc
mov
cli
pushf
jmp
popa
add
and
retf
les
sahf
ror
sub
push
pushf
aam
leave
test
xchg
inc
lds
int
pop
loopne
sbb
sbb
inc
jb
shr
add
cmp
inc
std
inc
movs
dec
push
push
xor
bound
mov
aas
adc
cdq
std
imul
sti
cs
jb
stc
ret
mov
mov
mov
jl
hlt
xor
in
mov
pop
iret
(bad)
and
adc
aad
loopne
in
lods
and
or
or
dec
cdq
jl
push
cmc
inc
repz
arpl
mov
add
fwait
push
xchg
jge
jnp
pop
cld
iret
jnp
sub
xchg
(bad)
test
adc
loopne
sbb
or
mov
cmp
test
cmp
dec
pop
out
iret
shl
xchg
pusha
pop
(bad)
jmp
out
hlt
pop
gs
push
imul
sub
js
jae
popf
(bad)
cmp
xor
mov
inc
(bad)
or
hlt
cmp
lds
push
lods
mul
add
(bad)
adc
loope
lods
dec
pop
cmp
movs
mov
pop
push
js
test
cmps
sub
xchg
xor
jle
xor
cmp
mov
fnstcw
stc
and
pop
fbld
jne
enter
mov
hlt
mov
std
aad
mov
mov
add
call
xchg
inc
xchg
cmp
dec
cmps
mov
add
daa
js
xchg
mov
retf
push
add
mov
jp
fwait
rcl
jge
test
test
pop
sbb
xor
repz
repnz
test
jo
adc
lods
inc
push
push
rcl
jnp
sbb
lds
xlat
stos
ds
jl
iret
movs
mov
addr16
dec
in
xchg
sub
pop
inc
xor
or
mov
shr
daa
mov
pop
imul
cmp
loopne
mov
and
inc
or
aaa
dec
movs
xchg
mov
jne
push
mov
adc
fwait
cli
cmps
cmc
mov
leave
dec
push
mov
and
xchg
xor
and
mov
add
mov
dec
nop
outs
test
mov
add
adc
mov
pop
lock
cmps
ret
adc
xchg
inc
lahf
xor
xchg
mov
mov
jno
sti
adc
shl
push
(bad)
and
imul
lea
out
sbb
into
sahf
or
leave
and
jae
sbb
cmp
mov
sbb
dec
daa
push
cmp
xchg
jne
in
pushw
inc
cmc
js
(bad)
mov
retf
xchg
mov
loop
inc
repnz
repz
aas
sahf
sbb
xchg
aad
xchg
stc
out
rol
cli
into
xchg
fiadd
adc
paddsw
jmp
ret
sbb
in
xor
outs
jo
fbld
sub
std
jb
and
repz
es
hlt
cmp
inc
pop
movs
nop
xor
jl
push
jno
and
mov
jno
call
les
cli
iret
push
jg
sub
popf
(bad)
mov
jle
pop
cmp
xor
jmp
mov
push
cs
adc
push
or
sti
jno
test
loope
jg
pusha
int3
cmp
iret
mov
and
into
dec
mov
nop
or
inc
leave
pushf
push
sbb
jae
(bad)
pop
(bad)
es
dec
ret
jb
aas
cmp
xchg
das
mov
push
inc
and
cmp
xor
and
mov
adc
push
mov
imul
fldcw
bound
or
jb
mov
push
aad
dec
mov
jne
push
pop
in
pusha
xchg
dec
cs
rcr
dec
outs
push
xchg
int3
(bad)
(bad)
sub
fcomp
outs
or
aas
add
aaa
jmp
jne
jmp
data16
js
xor
int3
or
enter
xor
dec
xchg
stos
outs
xchg
cmp
xor
jg
cmp
adc
cdq
add
push
xchg
sti
pusha
mov
adc
les
fdiv
mov
test
das
pop
gs
cmps
pushf
(bad)
mov
cmps
dec
xchg
fcmovne
sti
ins
enter
lahf
stos
cmp
xchg
and
fsub
sub
xchg
je
loop
aam
or
mov
dec
xor
int3
in
pop
xchg
call
sar
aaa
pop
imul
inc
sub
into
enter
aam
(bad)
hlt
stos
imul
movs
popf
push
inc
xor
dec
ins
call
pcmpeqw
scas
fidivr
lahf
or
dec
clc
ror
jbe
pop
aad
jg
add
cmp
inc
mov
and
js
lahf
pop
mov
popf
movs
js
aaa
js
lea
jle
ds
stos
push
xchg
retf
and
dec
loop
pop
loope
inc
push
mov
fwait
or
cmps
(bad)
add
jmp
out
mov
ins
int3
pop
mov
push
adc
jl
repnz
push
push
mov
stos
xchg
aas
ins
fs
adc
xchg
pusha
mov
leave
pop
and
sub
rcr
pop
adc
std
push
outs
cmp
pop
xchg
outs
gs
add
and
mov
sbb
(bad)
hlt
mov
(bad)
xor
and
inc
rcr
popf
jg
push
fadd
jl
sar
aam
xchg
stos
inc
neg
cli
mov
cmp
test
test
sti
sbb
repz
cmp
setle
in
and
add
aad
dec
cmc
xor
mov
inc
mov
fst
neg
lock
(bad)
frstor
sbb
push
jnp
cmp
push
cmps
stc
cmps
mov
pop
std
xchg
add
sbb
addr16
retf
cdq
push
mov
mov
adc
stc
enter
leave
mov
jmp
xchg
add
push
add
js
fild
add
mov
xlat
out
push
mov
psadbw
aam
and
stos
and
inc
mov
jp
add
jmp
aas
sub
xchg
shr
push
fiadd
fidivr
dec
ja
jmp
out
cmp
or
fs
jmp
ss
in
sbb
dec
fcomp
mov
adc
fisttp
rol
mov
call
push
mov
jecxz
adc
pop
push
lea
pop
dec
cmp
inc
inc
movs
test
inc
cmp
imul
shl
sub
retf
or
call
and
mov
lock
rcl
xor
test
mov
in
pop
fwait
test
dec
jne
pop
pop
cdq
and
dec
jmp
xchg
mov
cli
dec
ficomp
xchg
jb
jmp
xchg
test
sub
in
mov
xor
pop
lock
adc
call
pop
pop
mov
push
aas
add
ins
ja
xor
push
std
xchg
mov
pop
pop
mov
iret
xor
xchg
ins
out
dec
aam
push
aad
fld
jnp
mov
test
cmps
in
push
or
jmp
fisttp
push
enter
out
ficom
stos
mov
adc
cmps
outs
(bad)
repz
jmp
loope
out
cmp
retf
inc
es
clc
movs
popf
js
ror
xchg
sbb
sar
xor
idiv
mov
add
push
ret
mov
pop
xor
inc
scas
aad
fsubr
mov
js
cmp
xor
mov
test
mov
repz
or
jns
jecxz
sbb
mov
mov
mov
dec
out
outs
add
jo
dec
rcr
scas
adc
aam
mov
sub
pushf
xchg
or
je
jno
pop
mov
icebp
mov
or
xchg
sbb
enter
mov
retf
mov
push
dec
jp
gs
push
cdq
popa
rcl
or
sub
mov
mov
scas
pop
rcl
daa
(bad)
sub
and
leave
pop
jmp
sub
cmps
ja
leave
sbb
idiv
std
xchg
shl
add
ss
ficomp
jmp
pop
lahf
mov
push
mov
adc
xchg
shl
xchg
push
and
retf
push
inc
stc
push
cmp
mov
fadd
mov
rol
sbb
jnp
js
fdivr
push
cmp
fwait
cmp
gs
push
mov
lldt
sub
lahf
(bad)
out
dec
clc
stos
push
xchg
mov
push
cdq
dec
ss
pop
add
push
in
inc
mov
mov
xchg
fmul
cmp
aam
xchg
outs
sti
xchg
xchg
fidiv
push
xchg
out
fs
sub
pop
fadd
jmp
shl
in
in
call
fmul
add
retf
mov
xchg
sbb
lods
xor
retf
xchg
xchg
mov
jle
mov
and
in
out
pop
cmp
xor
cld
std
cmp
stc
test
sub
inc
mov
xor
cld
iret
jg
xchg
in
mov
or
ss
add
std
push
icebp
pop
popf
mov
pmaxsw
les
and
and
sar
lock
ds
inc
inc
and
ds
test
mov
call
adc
jmp
and
cmp
xor
into
cmps
sub
nop
xchg
cmp
jl
rcl
add
dec
test
sbb
outs
xchg
sub
in
xor
sub
or
mul
cld
sahf
(bad)
lock
push
mov
pop
sahf
sbb
mov
xor
pop
adc
movs
imul
add
test
dec
imul
xor
jno
add
fild
mov
xchg
in
aaa
(bad)
js
fisub
adc
mov
add
pop
xor
iret
mov
mov
stc
mov
xchg
jns
rcl
addr16
shr
shr
and
nop
sbb
cwde
mov
mov
lds
aam
imul
(bad)
in
call
shl
jl
pushf
pop
inc
push
test
nop
xor
shr
adc
jae
xchg
rcr
loope
outs
bound
stos
cmp
mov
mov
jle
push
imul
push
scas
nop
pop
cs
xor
fs
enter
dec
stc
je
test
(bad)
bnd
jne
retf
sub
xor
cwde
ret
mov
nop
pop
nop
ja
push
loop
push
xor
call
mov
mov
xchg
int3
retf
mov
inc
shl
and
loopne
inc
cmps
ss
ins
xor
jo
jge
gs
daa
stos
mov
arpl
mov
fisub
div
fcmovb
div
xor
xor
scas
mov
outs
mov
cmp
fcom
jp
scas
(bad)
mov
mov
xor
test
xor
jne
js
cmp
dec
mov
sub
popa
and
lahf
or
jmp
pop
pop
push
adc
inc
and
loope
jmp
sbb
shr
dec
cmp
movs
push
sub
lods
fldcw
and
inc
movs
cmp
push
add
cdq
mov
out
mov
(bad)
jmp
adc
pusha
cmps
into
xchg
mov
add
sbb
pop
push
cmps
in
sub
cmps
stos
pop
(bad)
mov
xor
in
outs
lds
fild
sub
ror
loopne
ret
push
daa
cmp
or
mov
jmp
movlps
mov
lds
outs
push
mov
fwait
mov
add
push
sub
aaa
jne
add
lea
loop
or
cdq
neg
aaa
xor
arpl
test
dec
mov
(bad)
or
cmp
test
inc
je
mov
mov
or
shr
stos
cmp
fwait
jbe
repz
aad
or
xchg
out
aaa
pop
cdq
sub
cmc
and
cmps
cmp
inc
sub
xchg
sub
dec
sbb
add
nop
fisubr
popa
loope
(bad)
jmp
xchg
jle
pusha
retf
(bad)
(bad)
mov
sti
pop
jl
mov
jae
inc
addr16
jns
jae
pusha
test
and
fimul
and
out
push
or
add
xchg
pusha
call
es
mov
and
xor
fidiv
adc
mov
ja
add
mov
fnstenv
cmp
cmp
mov
or
cmp
sub
push
out
imul
cmp
stos
cs
push
cmp
ret
shl
cmp
stos
repnz
cmc
add
mov
push
sub
add
adc
loop
jne
pop
(bad)
loopne
mov
or
sub
fcomp
int3
ja
dec
retf
xchg
pop
(bad)
(bad)
pop
out
shr
lds
push
mov
add
pop
and
test
xlat
sar
into
ins
lea
sar
push
cmp
lods
fist
je
ins
ret
sub
and
cmp
xchg
adc
pushf
outs
popf
sub
imul
xor
fwait
sub
fidivr
popf
stos
inc
pop
je
inc
ret
jmp
dec
scas
hlt
push
mov
push
xchg
pop
ret
pop
jge
jnp
int3
out
sar
imul
lods
cld
push
sub
push
enter
les
add
cmp
bnd
or
inc
mov
into
jae
sar
outs
inc
sbb
mov
inc
aas
movs
adc
dec
mov
inc
cmps
cmp
call
xchg
call
arpl
and
or
inc
bound
sub
ins
xchg
cmp
inc
(bad)
loopne
pop
jnp
cmp
xchg
mov
mov
xor
repnz
nop
xchg
or
xor
leave
pavgb
dec
test
jmp
test
out
pop
jecxz
pusha
arpl
int
dec
mov
imul
xchg
and
pop
shl
push
rcl
hlt
call
sbb
push
retf
pop
(bad)
fst
or
or
add
or
inc
cmp
int
cmp
hlt
xchg
mov
sbb
push
dec
leave
pop
dec
inc
pop
xor
rol
and
add
mov
div
mov
popa
mov
xor
dec
xchg
bound
jne
sub
push
push
push
xchg
dec
dec
mov
out
pop
outs
jle
or
test
jmp
mov
hlt
jmp
mov
inc
and
inc
push
mov
sbb
xor
imul
push
push
xchg
mov
stc
(bad)
adc
push
xchg
cmc
in
and
jmp
in
rcr
push
xor
push
in
and
and
jo
xor
jne
mul
cdq
jns
dec
retf
add
pop
inc
pop
cwde
rcl
mov
(bad)
in
xchg
cmp
adc
pop
aam
pop
bound
mov
xlat
dec
adc
ins
cmp
mov
in
sar
fs
xor
gs
sub
cmp
out
in
mov
add
mov
push
adc
js
mov
imul
jb
pop
mov
in
test
adc
push
cmps
mov
dec
pop
pop
or
ins
pop
cld
int
fdivr
add
push
push
aad
ret
in
mov
aas
pop
adc
aam
push
mov
es
ss
lea
sti
sub
mov
adc
in
ret
and
nop
add
(bad)
hlt
push
ror
jle
xchg
lods
mov
dec
adc
pop
std
pop
loope
jle
stos
mov
pop
ds
sub
dec
cmp
lods
out
mov
xchg
clc
les
push
in
jne
aaa
into
mov
jb
add
ins
sub
ja
inc
out
ror
dec
sub
movs
sub
dec
ror
in
jmp
cmps
arpl
cwde
push
ss
ret
pop
sbb
adc
(bad)
aas
sbb
push
jg
iret
popf
imul
lds
cmp
scas
les
inc
cmc
mov
push
mov
xor
cli
xchg
popa
sbb
and
je
dec
and
lahf
xchg
pop
in
jae
xor
cmps
cmp
sbb
cmp
test
cmp
inc
ror
or
or
bound
fwait
int3
mov
push
(bad)
ds
aad
lea
mov
mov
push
dec
test
lds
mov
and
pop
cwde
mov
mov
pushw
gs
inc
cmp
cmp
bound
sub
pusha
or
int3
not
cmp
xchg
daa
fisubr
dec
stc
test
loop
cld
dec
pop
jmp
pop
inc
dec
ret
cmp
test
inc
sbb
retf
ret
or
push
pop
ret
push
push
sub
dec
jg
sub
jno
fnstenv
jp
nop
sbb
retf
or
jl
loopne
inc
idiv
sti
xchg
jb
mov
loop
(bad)
mov
jae
lds
xlat
push
cld
(bad)
iret
rcr
lods
add
rol
cdq
cmp
mov
dec
cmp
cli
push
enter
aas
outs
mov
sub
lea
sub
je
sbb
bnd
add
sahf
or
cmp
daa
lock
mov
cli
pop
and
dec
outs
push
sub
pop
and
xor
cmps
add
ret
pop
shl
dec
inc
fwait
sbb
pop
pop
add
mov
jl
les
mov
icebp
cmc
pslld
in
sbb
pop
in
mov
adc
mov
mov
movs
ret
dec
adc
(bad)
push
hlt
or
jmp
iret
cli
xchg
mov
hlt
xor
mov
inc
repz
pusha
std
cli
cmp
or
int3
scas
cmp
cmp
enter
push
inc
mov
setnp
div
xchg
iret
xlat
aam
adc
jg
mov
(bad)
inc
or
mov
xchg
and
bswap
sahf
sub
sbb
int3
sub
lahf
and
aam
int3
test
push
outs
call
dec
loope
and
xchg
adc
in
lea
cmp
retf
sbb
pop
(bad)
sub
push
rcl
cmp
add
jne
jne
inc
sbb
rcr
jg
in
aaa
je
pop
mov
hlt
xor
push
std
mov
je
nop
sub
cmp
stc
loope
cs
int
dec
add
movs
int3
push
adc
lea
push
jp
dec
mov
ss
in
cmp
in
je
ins
cdq
inc
out
ja
add
fmul
jp
jb
lock
jg
add
aaa
test
imul
cdq
push
mov
retf
adc
jbe
push
test
push
std
ins
sti
mov
jmp
mov
leave
pop
mov
int
cmps
cli
push
mov
inc
pop
pop
sub
mov
mov
pop
xor
or
loope
push
or
mov
cmp
sbb
mov
mov
into
add
int3
iret
mov
mov
rcl
xchg
mov
xor
sbb
sbb
jo
inc
bound
rcr
push
adc
cmp
jns
mov
(bad)
push
jmp
mov
out
pop
rcl
retf
out
mov
dec
mov
and
dec
dec
mov
pop
and
jg
fcomi
cmp
lahf
sub
fdivr
push
daa
xor
cli
ss
dec
movs
js
sbb
push
test
lahf
sbb
fsub
xor
mov
or
pop
cmp
popf
fimul
(bad)
jge
aam
mov
rol
test
inc
out
xor
jns
jno
mov
mov
xchg
fld
sar
sub
ret
js
jle
(bad)
mov
scas
cmp
inc
mov
das
daa
push
jno
jnp
xlat
shl
test
sbb
dec
scas
les
lds
rcl
jns
pop
mov
sti
fcom
or
cmc
jne
sbb
cs
dec
loope
fbld
call
in
xchg
lods
fnstcw
mov
inc
mov
dec
xchg
pop
add
pop
pop
jnp
js
adc
ins
mov
out
imul
jb
adc
add
add
ret
aad
(bad)
dec
adc
rcr
mov
movs
add
in
movs
mov
xor
inc
push
shl
jp
aas
mov
(bad)
sbb
mov
jg
retf
js
out
jge
call
jge
and
mov
repnz
addr16
sbb
mov
sbb
or
fsubr
outs
mov
out
cmp
add
out
xchg
push
lods
adc
out
pop
xchg
adc
aam
arpl
ja
mov
sbb
or
xchg
test
mov
jmp
inc
pop
adc
std
add
and
fcomip
mov
out
mov
sbb
dec
add
and
out
std
mov
push
div
or
and
jno
movs
jae
mov
sahf
push
sahf
scas
fstp
sbb
out
les
sbb
jb
inc
xchg
inc
bound
(bad)
repnz
mov
fstp
clc
sub
in
cmp
mov
mov
push
out
pop
outs
jns
lock
ss
dec
xor
sbb
aaa
ss
test
pop
mov
cld
push
inc
loope
iret
xchg
das
mov
test
cs
adc
mov
call
adc
dec
mov
test
jbe
xchg
ficomp
ins
mov
outs
mov
cmps
int
stos
std
sahf
push
mov
pop
adc
mov
loop
dec
adc
add
cvtpi2ps
cli
cmc
lock
inc
xchg
pop
add
jnp
add
mov
sbb
mov
or
imul
mov
jmp
test
cmp
jp
iret
xor
jle
push
mov
jg
mov
or
dec
pop
aaa
xor
rol
mov
test
mov
outs
dec
das
(bad)
mov
clc
or
mov
lds
out
mov
ins
sub
dec
xchg
frstor
std
cmp
shl
cmps
jo
mov
dec
xlat
jge
movntps
in
push
sbb
pop
lahf
outs
sub
push
xchg
(bad)
js
iret
jecxz
dec
test
adc
clc
xchg
outs
lods
and
sbb
pop
bound
hlt
mov
add
retf
outs
cwde
jnp
or
neg
(bad)
adc
cmps
(bad)
fistp
mov
adc
xor
dec
ficomp
mov
scas
ja
inc
pushf
add
dec
pusha
repnz
add
mov
adc
arpl
imul
add
mov
push
xor
retf
(bad)
adc
add
jb
loope
loop
sub
in
lods
mov
call
ja
mov
lock
iret
jmp
dec
lods
add
out
(bad)
(bad)
hlt
movs
hlt
jno
add
loop
mov
sub
sbb
add
xchg
sbb
pop
inc
jmp
test
pusha
inc
retf
hlt
mov
push
xor
mov
inc
inc
push
sbb
and
outs
call
sbb
adc
adc
das
fcomp
add
jo
test
clc
retf
mov
les
xchg
ss
and
add
in
call
mov
call
les
cmps
xor
mov
and
jmp
test
call
aaa
lods
mov
push
cld
mov
and
call
outs
jg
jnp
in
sbb
xlat
xlat
pusha
cmp
js
out
push
inc
sbb
cmp
nop
mov
push
add
call
out
push
leave
stos
test
push
aad
out
xor
popa
inc
or
leave
inc
popf
bound
lods
shr
leave
mov
out
pop
ins
cmp
mov
mov
jp
test
lea
mov
pop
out
add
push
mov
push
sub
out
cdq
int
stos
cmp
into
pop
push
dec
lods
jne
adc
pop
xchg
popa
cmp
pop
push
jnp
mov
cmp
adc
fbstp
lods
mov
call
outs
fisubr
les
stos
pop
adc
fisub
lahf
(bad)
inc
mov
arpl
push
(bad)
inc
inc
jecxz
sbb
mov
inc
imul
nop
sbb
pop
stos
push
cld
js
xor
and
loope
pushf
adc
fcmovnu
cli
aad
mov
out
aad
ss
xchg
xchg
dec
call
fadd
adc
in
mov
mov
fnsave
xor
mov
fisub
jmp
mov
les
and
in
jg
push
stos
jb
mov
aas
sbb
dec
shl
mov
fldenv
pop
test
mov
inc
icebp
inc
jns
test
xor
movs
mov
sub
push
ins
mov
inc
cdq
mov
dec
mov
mov
mov
(bad)
test
mov
loope
cmp
jmp
nop
mov
lahf
into
aas
jmp
sahf
nop
mov
pop
sbb
loopne
mov
int
inc
mov
mov
aad
(bad)
mov
sbb
scas
das
hlt
outs
mov
pop
xor
aam
lock
adc
inc
jae
repnz
movs
ret
icebp
jmp
lds
jle
sub
dec
mov
(bad)
fcomip
iret
lock
ins
hlt
mov
xchg
cs
cwde
jno
inc
call
rcr
cdq
ss
call
je
push
sahf
in
sub
daa
xor
scas
test
jne
fsubr
cli
stos
movs
fdivr
ins
inc
test
jg
adc
push
inc
in
mov
fidivr
cmp
in
push
int
jno
and
sbb
repnz
sbb
mov
mov
xor
les
adc
mov
mov
daa
cmp
aas
es
push
xchg
test
test
fwait
sub
jae
sbb
xor
push
mov
in
pop
fistp
lds
pusha
imul
mov
aas
imul
xor
stos
fsubr
mov
adc
movs
ins
cmc
sbb
scas
sub
aad
call
push
(bad)
stos
not
in
and
xchg
pop
push
inc
sub
jmp
mov
xlat
fdiv
push
mov
into
neg
stc
sub
jb
inc
xchg
ror
aaa
stos
loope
cmps
jnp
out
mov
nop
mov
xchg
sub
xor
data16
push
stos
mov
jp
mov
sbb
lea
ins
bound
fwait
mov
mov
aad
mov
ins
dec
cli
cli
push
xchg
fidivr
pop
mov
jp
cmp
sbb
lahf
mov
scas
pop
ficom
inc
xchg
xor
dec
pop
mov
cmps
stos
push
arpl
mov
ret
out
cdq
xor
cmp
or
out
outs
push
cmp
xchg
stos
xchg
fisub
loop
aam
imul
mov
out
xchg
imul
fidivr
and
jmp
in
fisubr
ds
int
jne
sub
jbe
into
xor
rcl
hlt
je
mov
xchg
int3
mov
mov
mov
jno
ja
and
jge
rcr
push
jg
cli
cmp
imul
cld
or
sub
jb
push
neg
fldcw
fld
leave
mov
adc
cmc
xor
cmp
mov
out
mov
cdq
mov
test
mov
leave
test
dec
sub
and
ficom
dec
pop
pop
scas
inc
inc
(bad)
sub
daa
fidivr
jb
add
jmp
addr16
and
lahf
push
ins
fdivrp
adc
or
jmp
and
sub
mov
leave
dec
jmp
loopne
movs
out
gs
pop
pop
push
jl
push
(bad)
push
cmp
pop
sar
ret
adc
fild
sub
fsub
inc
fs
xor
aad
mov
outs
iret
ins
mov
popf
adc
and
rol
retf
jg
sti
cmp
add
ins
clc
fdivp
add
cmp
or
xchg
add
jns
(bad)
(bad)
dec
dec
sahf
and
lea
xchg
sub
in
icebp
mov
mov
sbb
sbb
dec
pop
leave
popa
scas
lock
jle
cwde
mov
adc
out
pop
popf
outs
std
sub
bnd
cli
dec
jle
test
mov
(bad)
sbb
xchg
xchg
adc
or
mov
test
loope
inc
xchg
pop
adc
(bad)
shr
xchg
and
and
push
test
or
fidiv
out
test
xor
mov
mov
or
pop
and
int
mov
mov
xchg
mov
xchg
mov
and
cwde
imul
adc
ins
sub
jbe
pushf
movs
std
add
imul
or
ret
mov
bound
sbb
repz
imul
out
pusha
push
pop
std
pushf
pop
stos
push
iret
and
fisub
mov
cld
icebp
fcmovu
outs
mov
in
add
loope
(bad)
and
xchg
out
jecxz
add
dec
or
pusha
out
cs
popf
inc
pop
add
sub
jne
sub
jmp
jl
shl
out
neg
adc
mov
xor
das
push
sbb
int
lods
xchg
pop
pop
mov
pop
shl
cmp
scas
jmp
mov
pop
shl
js
cli
mov
xor
xchg
push
paddq
ins
aas
in
sbb
mov
add
jmp
inc
or
add
test
ins
int
lods
(bad)
ja
mov
test
cmp
outs
cmp
jno
out
push
mov
ret
mov
xchg
std
(bad)
lods
xlat
mov
cli
idiv
retf
outs
test
sahf
xor
fisubr
adc
xor
mov
cmps
in
lods
jmp
jge
jne
sbb
jno
jmp
lods
cmc
das
enter
loope
fsubp
cmp
stos
loope
and
int
pop
xchg
jno
pop
adc
mov
xor
enter
ja
fisubr
es
int
pop
lods
aam
pop
and
xchg
ret
lahf
in
jecxz
xor
push
xor
mov
push
mov
sahf
sub
jmp
add
ror
das
stc
sbb
inc
add
inc
inc
mov
pop
adc
inc
mov
cli
or
pop
dec
xchg
inc
in
hlt
pop
fld
dec
ret
add
addr16
fiadd
jno
cmps
push
das
pop
lock
iret
push
or
pop
push
mov
outs
ja
ud1
stc
stos
and
push
and
movs
mov
icebp
xchg
aaa
js
not
js
outs
jmp
and
movs
or
cmp
push
pop
mov
push
rol
push
sbb
mov
push
and
push
cmp
dec
dec
dec
dec
add
mov
js
in
sti
sub
cmps
mov
pushf
ror
or
hlt
jo
in
lods
sub
or
or
(bad)
rcl
movs
mov
pop
sub
mov
jae
and
gs
in
mov
mov
ror
les
adc
and
pop
add
mov
imul
stc
mov
xlat
jns
push
jp
inc
cmp
mov
cmps
push
loop
dec
add
fnstenv
fidiv
mov
or
out
pop
fs
cmp
movs
js
push
ja
inc
mov
repz
loop
push
mov
jecxz
retf
add
xchg
movs
lods
call
adc
sbb
push
inc
dec
out
test
call
pop
imul
pop
jge
movs
push
push
(bad)
hlt
cmc
dec
inc
and
push
sub
ror
popa
retf
test
or
stos
(bad)
int3
(bad)
es
or
loopne
jg
jmp
outs
or
gs
add
fcom
shl
pop
into
sbb
pop
je
lods
fcom
jg
ins
xor
dec
fisub
repz
push
(bad)
and
add
sub
adc
int3
sbb
in
mov
sub
fs
or
pop
mov
jbe
shr
mov
ins
aaa
adc
and
loope
push
sbb
inc
jbe
jle
in
loopne
aam
sti
sbb
xor
cmp
dec
push
loope
pop
lods
cld
hlt
and
jmp
lods
and
(bad)
jle
pop
mov
idiv
je
out
and
push
not
fcomp
arpl
jl
xor
inc
test
jne
je
or
(bad)
push
ret
popf
mov
(bad)
pop
out
sub
and
mov
or
call
jo
mov
inc
call
adc
(bad)
(bad)
jecxz
std
xor
inc
jg
push
cmps
mov
loope
ins
jae
push
dec
pop
test
mov
outs
dec
pop
mov
addr16
stos
movs
ror
cli
and
sub
xor
cmp
xchg
repz
cli
add
imul
(bad)
dec
xor
ja
ret
mov
into
sti
xchg
lea
call
popw
inc
nop
fchs
popf
repnz
popa
call
call
push
mov
mov
mov
arpl
iret
jg
jp
adc
push
out
lahf
cmp
mov
aad
xchg
scas
sahf
dec
xchg
xor
cmp
(bad)
pop
or
imul
aas
add
and
stos
mov
pop
repz
std
sub
das
or
(bad)
fs
jmp
inc
jno
dec
xchg
adc
stos
mov
retf
cmp
mov
out
ss
xor
xlat
mov
sub
xchg
mov
mov
mov
retf
adc
lahf
ret
push
or
sbb
and
dec
mov
xlat
mov
daa
pop
xor
mov
std
mov
aam
jmp
loopne
mov
push
add
das
sti
popf
gs
inc
lock
je
jp
sbb
gs
mov
sub
fwait
pusha
rcr
fs
nop
outs
iret
rol
jb
pop
mov
xor
lds
mov
fs
ins
cmp
mov
or
add
xlat
mov
xchg
sub
mov
xor
mov
sub
in
xor
mov
and
pop
(bad)
dec
add
adc
popf
inc
mov
stos
div
imul
inc
das
scas
jbe
pop
fidiv
shl
mov
add
xchg
inc
dec
call
jg
dec
cmps
ins
cmp
test
outs
cmp
data16
mov
cmp
(bad)
(bad)
and
lods
mov
mov
(bad)
cdq
cwde
movs
xchg
push
mov
movs
sbb
gs
int3
inc
data16
pop
out
nop
loope
movs
jge
push
aaa
inc
push
jae
icebp
push
loopne
push
dec
add
mov
fidiv
(bad)
xchg
test
inc
test
inc
jns
jmp
xor
fldcw
out
stos
sbb
stc
js
mov
push
jl
push
es
mov
cmp
mov
cld
xor
sub
or
xchg
not
leave
(bad)
in
shl
and
mov
test
out
mov
cs
xchg
cmp
sbb
stos
pop
(bad)
sar
xchg
and
fld
pmuludq
jne
cmp
inc
xor
je
mov
jg
mov
sbb
cli
inc
dec
retf
mov
gs
nop
jecxz
add
xor
cmp
or
mov
(bad)
stc
xor
ret
and
mov
push
mov
retf
add
mov
mov
sub
sbb
mov
loop
xor
movs
xor
dec
mov
xor
(bad)
nop
pop
lea
or
out
test
jmp
cmp
aas
cmps
movs
xchg
dec
add
cs
jno
pop
out
sbb
jl
add
repnz
jg
das
and
lahf
jecxz
add
dec
ja
imul
xchg
repz
addr16
ss
in
or
sbb
sti
push
dec
mov
or
inc
fisubr
cmp
daa
stos
dec
mov
mov
sub
lods
(bad)
dec
(bad)
out
xlat
adc
or
and
mov
jo
push
or
cmc
inc
sbb
adc
push
int
push
loopne
js
push
les
push
and
sub
cmp
inc
adc
dec
sar
ror
lea
ret
and
mov
mov
(bad)
fld
lock
outs
mov
(bad)
cdq
lahf
xor
jle
sar
call
mov
icebp
pop
daa
shl
dec
sbb
shl
test
inc
lea
aaa
adc
mov
stos
ins
push
xchg
or
popf
outs
popa
das
lea
mov
dec
jbe
cdq
add
ss
pusha
cmp
sub
mov
cwde
fstp
lods
mov
out
loope
jnp
xor
in
das
push
jnp
pushf
arpl
add
mov
mov
out
mov
adc
js
mov
sar
jp
or
xchg
jmp
push
mov
(bad)
push
jle
ja
imul
movs
xor
in
test
scas
xchg
inc
xor
jbe
add
jae
xor
jo
dec
or
lea
outs
xchg
test
jnp
sub
fucomi
sbb
es
xor
aam
in
add
jnp
mov
inc
add
pop
aaa
dec
mov
sbb
xor
jae
stos
sub
lahf
ja
xlat
mov
xchg
int
push
xchg
sbb
mov
ins
rcr
icebp
(bad)
push
scas
std
and
mov
cmp
jp
cld
repnz
mov
clc
sbb
and
scas
cmp
sub
fadd
mov
sub
popf
mov
stos
aaa
ror
jne
mov
sbb
inc
js
ss
pop
jo
inc
fxch
mov
outs
cwde
shl
jecxz
call
(bad)
cmp
fimul
cmp
pop
enter
imul
data16
gs
nop
sbb
jns
cmp
mov
add
and
adc
iretw
stos
pop
ret
dec
loop
dec
xchg
pop
mov
adc
add
sbb
jbe
test
imul
cdq
push
or
sbb
push
aam
stos
push
xor
lds
add
push
fs
push
mov
outs
push
(bad)
test
call
cmp
mov
cmp
pusha
and
push
mov
ret
jbe
mov
loope
xchg
adc
xor
ss
jg
ja
sub
mov
adc
sbb
sbb
jns
jnp
inc
push
fs
outs
xchg
aad
jp
mov
int3
xor
lock
xor
imul
xchg
std
aaa
push
imul
ficom
push
cmp
push
repz
leave
sar
or
popa
sub
mov
adc
dec
mov
push
inc
dec
xchg
jo
and
add
hlt
cmp
mov
or
xchg
vpshab
push
push
loope
xor
mov
sbb
mov
xchg
vmptrld
fwait
dec
mov
pop
and
sub
or
jmp
mov
mov
push
mov
popf
xchg
pushf
jmp
jg
loopne
push
adc
clc
es
dec
loopne
in
fisttp
push
sub
jmp
adc
add
cmovl
in
sub
add
outs
inc
xchg
jg
cmps
sub
inc
xchg
arpl
out
movs
mov
mov
scas
lea
lahf
jo
aaa
jnp
inc
xor
fstp
push
dec
sbb
sub
fldcw
idiv
sub
ds
pop
xor
sti
sub
fdiv
pop
outs
mov
cmovs
lock
test
xor
sbb
in
mov
pop
sahf
leave
jmp
in
ss
dec
mov
dec
add
push
dec
sti
out
shl
jbe
divps
fidivr
in
call
pop
data16
leave
pop
or
iret
sub
retf
fist
sub
mov
sbb
ja
cmp
(bad)
xchg
mov
and
xchg
inc
lods
int3
retf
dec
or
outs
scas
pop
push
lahf
sar
repnz
push
sar
push
push
or
nop
ja
out
stc
rcr
push
sub
xchg
mov
sub
(bad)
in
popf
xor
sub
call
ss
call
aad
retf
int
cmp
xor
mov
rol
imul
clc
xor
push
adc
jl
lods
outs
aad
lds
and
call
call
imul
scas
mov
popf
mov
leave
(bad)
jl
idiv
jmp
fistp
retf
add
add
cmc
xchg
retf
xchg
xchg
xchg
cmp
fidivr
jnp
pop
rcr
out
not
std
jnp
xor
dec
push
out
mov
outs
cmpps
ja
ds
xchg
mov
sub
stos
rol
dec
inc
(bad)
mov
shl
lods
xchg
out
popf
arpl
mov
mov
sahf
leave
push
adc
loope
(bad)
cmp
dec
aad
repz
mov
fcom
rcl
outs
xor
cmp
xor
mov
jg
and
cmp
add
mov
fwait
(bad)
mov
repz
and
sub
test
mov
sbb
test
mov
inc
add
xor
js
mov
adc
(bad)
fstp
mul
adc
add
mov
jecxz
sbb
mov
fld
rcl
movs
sub
xchg
pop
mov
xlat
pcmpeqw
add
rcr
outs
outs
push
mov
fbstp
sub
mov
fsubrp
loope
clc
aam
out
lods
pop
das
outs
repnz
ret
mov
sar
call
mov
pop
in
test
jmp
(bad)
arpl
mov
fstp
mov
jl
clc
dec
sub
int3
outs
mov
iret
clc
ror
mov
jmp
aad
jmp
(bad)
push
pop
rcl
push
mov
cmp
ins
imul
push
ja
hlt
sub
mov
dec
into
push
or
fucomip
cli
fdiv
lock
pushf
jnp
jle
dec
ret
leave
gs
push
outs
mov
mov
ja
mov
movs
stos
push
(bad)
or
xor
(bad)
jp
into
push
or
fistp
in
mov
int
xchg
pop
cld
(bad)
push
mov
pop
add
daa
jmp
lods
cmp
and
sahf
in
pushf
in
push
jne
pop
jmp
sbb
test
movs
clc
pushf
dec
gs
push
xor
jb
cmps
lock
cld
(bad)
xor
adc
mov
xor
fmulp
jge
addr16
hlt
aaa
out
ror
cli
cmp
loopne
out
xor
pop
mov
repz
test
or
out
push
mov
add
mov
jle
xchg
or
test
pop
push
outs
out
dec
mov
repnz
sub
xchg
pushf
xchg
fmul
data16
cmp
dec
lea
pop
xchg
ins
fs
sub
dec
add
lds
dec
xor
mov
mul
mov
push
adc
mov
jl
sbb
call
push
jecxz
mov
jle
retf
add
adc
sbb
xchg
data16
in
jae
xor
xor
sbb
or
aaa
and
pop
mov
stos
std
(bad)
sbb
nop
les
xor
cwde
jb
cmp
or
out
dec
mov
les
test
ds
test
push
cdq
add
or
mov
pop
and
ror
or
mov
lods
(bad)
retf
movs
jo
repz
adc
fstp
mov
mov
inc
sbb
frstor
stos
mov
cmp
jno
push
nop
loopne
inc
retf
nop
inc
xchg
pop
ins
js
scas
les
push
jl
mov
loopne
inc
(bad)
cld
fmul
pop
and
loopne
in
jbe
test
jbe
ror
add
aam
movs
lock
icebp
mov
mov
add
js
sub
scas
xor
js
fcomi
jg
movs
out
aaa
cmps
and
cdq
inc
dec
cmp
mov
addr16
dec
mov
and
sar
add
or
mov
ficomp
dec
jno
mov
dec
cmps
mov
dec
or
add
(bad)
mov
pop
push
in
and
cli
sub
sbb
scas
cs
movs
fld
out
sbb
ins
jmp
mov
push
xchg
push
aas
das
push
lods
outs
dec
les
dec
pop
popa
scas
push
pop
aam
inc
jp
sbb
inc
mov
inc
mov
test
and
ss
mov
icebp
push
enter
sub
adc
xor
repz
test
ret
scas
(bad)
es
dec
aas
adc
jp
mov
inc
mov
or
jp
test
sub
jl
(bad)
xchg
imul
in
mov
icebp
cmovo
jg
mov
xchg
pop
je
or
ja
sub
cwde
fwait
cmps
(bad)
and
ins
adc
fcomp
push
pushf
std
sub
cld
jmp
arpl
mov
jg
add
sub
pop
lods
stos
and
(bad)
cdq
jbe
and
ins
xor
or
xlat
dec
pop
mov
fcomi
jmp
mov
scas
add
sar
daa
pop
push
fwait
ds
or
mov
mov
push
arpl
enter
mov
push
sbb
pusha
sub
sbb
xchg
adc
xchg
movs
test
mov
push
sub
sub
xchg
cmp
fwait
retf
imul
xlat
ins
or
and
cmps
xor
mov
iret
stos
enter
push
mov
or
movs
clc
inc
mov
loopne
or
cmp
ja
pop
mov
retf
cmps
push
cmp
adc
adc
gs
fidiv
or
ins
(bad)
sbb
jns
xchg
loope
cmps
cmp
retf
pop
xor
pusha
sar
fidivr
sub
movs
sbb
pop
mov
or
cdq
lds
in
push
adc
aas
fisub
xchg
fidivr
dec
imul
jge
mov
push
sbb
addr16
dec
mov
mov
pop
xchg
cmp
jb
mov
mov
inc
push
pushf
stos
push
data16
stos
daa
or
push
cwde
jo
sahf
sbb
aad
out
iret
in
pop
test
inc
or
jno
mov
or
xchg
out
mov
push
push
cld
xor
push
loopne
movs
cwde
adc
inc
lds
xchg
cmps
and
dec
rol
jne
pop
mov
(bad)
movs
pop
in
(bad)
jge
ja
add
sbb
push
aad
xchg
xchg
aas
cmp
jns
icebp
push
int3
stc
push
push
xor
jge
cs
dec
cli
cmp
inc
movs
ds
push
and
push
retf
pop
mov
out
mov
cmp
stos
push
outs
mov
xchg
sub
or
or
and
nop
mov
xchg
cwde
xchg
jge
and
aam
inc
fcom
cmps
xchg
sti
xchg
ror
mov
mov
icebp
dec
arpl
dec
inc
pop
mov
je
xlat
rcr
dec
and
dec
sub
dec
mov
pop
scas
mov
ret
mov
or
mov
std
xor
jmp
push
jmp
jbe
sbb
nop
test
xchg
call
push
jne
in
mov
fimul
pusha
sub
sbb
popf
inc
outs
mov
fs
and
mov
mov
jge
enter
sub
push
push
xor
ja
jne
movs
xchg
mov
xor
push
cdq
enter
push
xor
dec
out
xchg
and
aaa
dec
sbb
(bad)
cmc
cdq
scas
and
xchg
sbb
pop
popf
std
add
mov
cmp
inc
into
(bad)
ss
and
int3
pop
jo
sub
out
add
leave
mov
neg
xor
or
sbb
jnp
and
and
mov
push
adc
aas
jg
out
shl
shl
cwde
jae
inc
stc
mov
(bad)
aad
lock
shl
xchg
(bad)
cmp
jnp
(bad)
push
inc
stos
dec
scas
imul
enter
sbb
cmps
movs
mov
xchg
mov
outs
push
outs
nop
mov
push
in
adc
(bad)
fcomi
retf
push
push
out
xor
sub
or
xchg
add
jnp
lds
and
in
push
mov
mov
test
mov
pop
xor
cmps
pop
loope
push
xchg
imul
push
jp
jae
sahf
sub
(bad)
ja
or
xchg
(bad)
sub
jns
int3
ins
pop
mov
pushf
mov
call
jle
dec
xor
dec
mov
stc
cwde
add
push
mov
mov
mov
aas
cld
(bad)
and
pusha
xor
adc
jp
pushf
test
pop
jnp
inc
and
sbb
add
push
jnp
mov
in
push
call
sbb
out
repz
in
test
in
repz
jnp
and
pop
pop
inc
push
and
xchg
outs
and
push
fld
retf
and
push
jo
cmp
out
leave
adc
popa
sbb
in
cs
or
push
mov
hlt
neg
jne
jae
xor
ret
enter
jle
std
scas
movs
mov
mov
dec
xor
fwait
aam
inc
pop
push
(bad)
outs
add
lahf
call
jbe
ror
or
ds
jb
adc
adc
cld
add
pop
xchg
cdq
jecxz
inc
jne
cld
mov
pop
out
or
popf
add
movs
add
fist
lods
fwait
cmp
ret
cmp
mov
xlat
pop
jecxz
mov
or
mov
shr
xchg
mov
mov
jns
fistp
sbb
pop
iret
punpcklwd
call
sub
out
pop
dec
fdiv
aas
sbb
jmp
xchg
aas
icebp
mov
pop
int
jge
pop
pop
jb
xchg
(bad)
xor
lock
cmp
leave
jl
sub
adc
leave
xchg
outs
jp
out
jmp
push
pushf
mov
push
pop
jb
xchg
xor
fdivr
push
clc
jae
xchg
repnz
jno
adc
enter
sti
add
mov
inc
int3
popa
mov
push
movs
vfrczpd
jo
(bad)
pop
push
sbb
adc
and
sub
js
rcl
xchg
xor
stc
cli
jp
call
cli
mov
inc
cld
les
aas
mul
xor
sub
pop
fidivr
es
retf
(bad)
jle
clc
ins
repz
ins
jno
sub
out
pushf
or
push
mov
retf
out
out
push
sub
inc
das
mov
ja
call
fild
inc
pop
xchg
or
hlt
out
ret
test
xor
repnz
jne
sub
push
sbb
and
pop
sbb
mov
ins
lods
fsubr
imul
pop
dec
test
retf
mov
mov
jp
enter
cmp
xor
sahf
shr
aam
or
sub
cmps
xor
and
fwait
jb
out
xchg
into
ins
daa
sub
inc
pop
mov
fiadd
nop
adc
jl
cmp
sbb
sub
dec
jecxz
mov
inc
movs
imul
mov
scas
(bad)
jmp
out
sub
sahf
repnz
jo
loopne
pop
jnp
sub
ret
mov
cmc
xor
mov
mov
fisubr
push
sub
push
mul
(bad)
test
xchg
mov
in
fsubr
sub
cli
push
loop
(bad)
jae
ins
ins
jb
xchg
mov
pop
loop
jp
vdivps
test
pop
lea
push
mov
pop
fadd
cmp
xor
loop
out
imul
add
in
pop
mov
das
(bad)
leave
js
daa
(bad)
jl
aas
push
out
mov
cmp
int3
ins
imul
push
mov
mov
fdiv
add
cld
add
fldcw
stos
clc
into
into
sub
xchg
cmp
jb
jb
in
dec
(bad)
sbb
stos
xchg
add
retf
inc
push
pop
mov
add
cmp
iret
mov
cmp
mov
dec
dec
scas
adc
jne
push
test
and
cdq
les
or
and
xlat
sub
adc
cmpxchg
mov
xor
loopne
aam
adc
mov
mov
and
xor
ror
add
inc
add
and
cmps
pop
(bad)
sub
leave
pop
adc
and
mov
ret
cdq
mov
push
and
or
sub
call
pop
mov
push
int3
mov
xchg
pusha
or
pop
xlat
stos
sbb
mov
fnstenv
movs
lahf
dec
fbld
inc
xlat
(bad)
ficom
and
aas
mov
xchg
push
outs
dec
stos
dec
sbb
xchg
popf
mov
mov
in
cmps
fs
shl
fwait
adc
xor
xor
retf
gs
sub
aaa
sar
das
pop
mov
cmp
mov
inc
addr16
stos
or
shr
adc
mov
pop
cli
pop
je
mov
repnz
mov
in
ror
inc
sub
dec
mov
icebp
daa
outs
push
pop
adc
jp
sldt
data16
(bad)
out
sub
pop
cld
inc
icebp
dec
lods
arpl
(bad)
(bad)
sub
push
jbe
gs
movs
cmp
std
retf
pop
sub
inc
loope
add
das
mov
push
push
jae
mov
push
leave
fadd
(bad)
sar
arpl
cmp
cdq
stc
inc
xor
xor
popf
xlat
jns
sub
fld
in
cmps
mov
bnd
and
jl
scas
outs
mov
aam
nop
cs
rcl
fiadd
add
sub
mov
ret
sti
les
mov
sti
ret
mov
imul
mov
mov
lahf
cmp
jae
ror
xchg
test
jp
cli
sbb
and
pushf
mov
jo
push
stos
xlat
adc
jg
sbb
dec
outs
push
xchg
int
lods
mov
push
out
pop
mov
dec
xchg
push
lahf
pop
sub
push
neg
popf
jae
inc
or
in
sti
mov
mov
mov
xlat
call
cmp
lods
adc
pop
std
in
lods
or
pop
dec
mov
iret
sbb
test
fs
int3
je
fidiv
cmp
in
jl
mov
adc
dec
mov
cld
mov
pushf
arpl
jp
pop
jb
xchg
dec
nop
jo
test
cmp
call
je
sub
sti
repz
cmps
sub
mov
jae
lahf
scas
jmp
push
add
jno
jmp
mov
dec
jns
pushaw
xchg
mov
out
xchg
pop
xor
or
cli
jbe
dec
push
mov
adc
sbb
push
cmp
inc
inc
add
lods
ds
mov
and
cmps
pop
les
fld
mov
mov
in
adc
xchg
stos
jno
jbe
(bad)
in
fs
into
sahf
ds
rol
sub
cmp
push
mov
mov
(bad)
cmp
or
cwde
and
call
xchg
lds
jns
fwait
arpl
mov
adc
loop
outs
push
cli
int3
aas
cmp
cwde
push
mov
imul
scas
xor
mov
mov
add
(bad)
out
mov
adc
dec
and
arpl
xor
ret
jo
shl
call
aaa
(bad)
add
mov
jne
rcr
mov
push
arpl
clc
jle
jg
push
sbb
mov
mov
sbb
inc
(bad)
sbb
sti
jns
sbb
jp
xchg
push
js
cmp
adc
adc
inc
les
mov
push
mov
outs
in
sub
(bad)
mov
scas
je
aaa
push
push
cmp
in
cmps
xchg
jmp
shl
and
push
cs
in
leave
(bad)
sub
mov
(bad)
mov
shr
fld
add
test
(bad)
in
or
push
inc
dec
xchg
mov
hlt
and
mov
es
or
sbb
leave
popa
gs
addr16
sub
pmaddwd
cmp
sub
(bad)
or
xor
xchg
mov
test
arpl
jno
mov
movs
mov
sti
mov
ret
lds
std
mov
sbb
mov
movs
cmp
or
and
pop
clc
add
pop
test
ret
pop
sub
adc
mov
ss
xor
cs
bound
sub
shl
mov
pop
mov
test
mov
test
test
xor
scas
out
xchg
inc
adc
test
(bad)
push
jo
adc
xor
sbb
xor
cld
push
xchg
loopne
or
out
mov
stos
test
xchg
test
cmps
ror
je
dec
repz
or
pop
dec
stc
or
sti
cmp
inc
dec
retf
xchg
adc
cmps
fild
add
cmps
xchg
push
retf
out
shl
dec
cmps
xchg
cwde
fsub
jle
or
aad
pop
dec
jg
es
or
sbb
ret
test
inc
scas
dec
out
fwait
lds
sbb
aad
jo
pop
mov
ds
test
jl
xchg
repz
sbb
and
push
pop
sti
or
jb
adc
fs
sbb
jl
xchg
idiv
mov
into
mov
cmpps
add
xchg
mov
and
cmp
ret
jp
ror
fwait
ror
push
cmps
loop
pop
pop
cmps
cmp
int
add
inc
sub
cli
movzx
inc
cmps
push
xor
mov
outs
xchg
dec
or
es
pop
push
cmps
sub
sar
cs
out
mov
add
lods
mov
ficom
cmc
lea
stos
ret
jb
push
lds
pop
je
in
rcr
add
test
cmc
and
xchg
pop
inc
add
adc
xlat
gs
cmps
out
push
jmp
xor
shr
and
cmc
push
cld
test
mov
es
fistp
out
fldenv
leave
mov
and
mov
rol
sbb
push
mov
inc
jg
add
mov
mov
call
or
clc
and
aam
xchg
and
out
mov
mov
daa
ror
(bad)
push
cmp
lahf
movs
js
out
cmp
lds
test
mov
or
pop
imul
pop
add
paddb
mov
push
and
mov
and
dec
ins
mov
cld
ds
nop
xchg
adc
or
push
and
stos
cmc
xor
add
rol
push
int3
test
ss
mov
pop
das
rol
pcmpeqd
push
inc
aas
mov
cmps
sbb
pop
sub
mov
dec
adc
aad
in
jns
frstor
and
out
inc
ror
push
mov
ret
(bad)
and
jno
out
push
(bad)
pop
dec
je
addr16
jmp
idiv
pop
clc
sub
test
scas
dec
sub
jne
ror
push
mov
pop
jbe
lahf
mov
pop
je
add
bnd
imul
pop
sar
jmp
mov
pop
int3
push
pusha
inc
push
sbb
cmps
xchg
test
xor
or
xor
or
lods
clc
xchg
cmp
pop
adc
daa
jl
adc
mov
or
mov
inc
push
idiv
and
cwde
mov
hlt
inc
sub
in
xchg
or
cmps
aad
pop
mov
xchg
jge
lods
jno
cmp
mov
stc
std
lods
daa
xchg
sub
out
ret
into
jae
mov
xchg
rol
mov
call
(bad)
pop
das
push
lea
popf
scas
call
cmps
xchg
adc
inc
scas
pop
stc
push
push
in
push
sahf
inc
out
pushf
xchg
mov
inc
fimul
mov
mov
loope
repz
les
dec
cmp
in
mov
cwde
pop
scas
fisubr
or
sub
mov
jle
mov
dec
cdq
iret
jg
xchg
lea
stos
sub
jno
sbb
bound
rol
cmp
nop
mov
lods
pop
inc
fistp
sbb
xchg
push
jo
dec
cmp
and
sbb
and
(bad)
fst
test
ins
ret
and
add
adc
push
loope
mov
test
mov
lods
cmp
movs
add
sub
mov
loop
pop
mov
retf
pop
test
jno
mov
xchg
add
jl
cmp
(bad)
pop
jmp
adc
outs
(bad)
adc
icebp
add
imul
std
sti
push
and
dec
dec
push
push
cmp
out
jge
adc
shr
mov
call
div
stc
adc
jmp
fisttp
xchg
or
dec
test
xor
icebp
pop
lock
aaa
jp
or
jl
mov
cmp
arpl
in
mov
or
adc
jg
xor
xchg
repnz
mov
xor
aad
jns
xchg
xor
nop
push
pop
pop
or
dec
sub
pop
ds
cmp
jmp
xor
stos
push
xchg
push
mov
rcr
jp
xchg
ret
push
cli
cli
icebp
mov
gs
jp
and
lods
shl
in
xor
add
arpl
xor
push
add
repnz
fwait
into
fnstsw
jae
int3
(bad)
out
movs
into
xchg
adc
vprotb
fcomp
mov
jp
sbb
cmp
sub
inc
push
push
push
cmp
es
push
pushf
add
pop
retf
mov
ret
pop
mov
rcr
mov
je
adc
push
add
add
xor
dec
and
ja
dec
leave
push
sbb
inc
movs
scas
adc
fdivr
repz
cdq
adc
xchg
dec
mov
sbb
enter
sub
shl
pop
dec
cmc
fcmove
ss
rcl
push
js
aam
mov
mov
pop
cmp
out
cmps
(bad)
neg
mov
add
dec
mov
js
mov
scas
adc
test
js
dec
cli
scas
adc
mov
dec
jns
mov
sti
aaa
pop
mov
nop
cmps
data16
out
out
jbe
pop
xchg
add
data16
rol
popa
inc
push
xor
scas
call
jae
pop
psubw
push
push
dec
je
data16
mov
mov
sub
rcr
in
push
mov
mov
jle
xlat
and
repz
cdq
ins
mov
sar
imul
push
push
jno
push
cdq
and
sbb
adc
xchg
dec
cmp
adc
pop
inc
xchg
arpl
loop
pop
pop
mov
xchg
xor
xor
in
movs
cmp
mov
shl
loop
rcl
xor
lods
mov
push
mov
cmp
pop
nop/reserved
cmps
sbb
cmp
jnp
cs
imul
sub
inc
mov
cmp
mov
xlat
inc
lea
ror
dec
aaa
jne
into
xlat
loope
and
movs
pushf
mov
mov
leave
cmps
cld
sub
fnstsw
loope
rcr
repnz
out
jne
das
adc
leave
out
mov
lea
jns
xor
cs
test
jmp
std
outs
in
inc
push
or
and
scas
inc
sbb
je
xchg
or
xchg
shl
inc
cmp
mov
aaa
ret
add
push
(bad)
iret
mov
cdq
movs
and
push
gs
cmp
test
push
xchg
repnz
push
clc
fwait
jmp
scas
lods
aaa
js
mov
and
xor
jl
or
and
inc
lahf
push
in
aad
inc
pop
mov
dec
shl
(bad)
shl
repnz
fst
les
ins
push
jbe
mov
mov
jmp
or
test
repz
xchg
dec
stos
pop
add
pop
mov
inc
fsub
xor
mov
dec
jmp
lods
xor
lea
adc
int
das
pop
not
sub
xchg
dec
push
xchg
mov
sti
lods
dec
out
jge
hlt
inc
(bad)
cld
dec
pop
pop
cld
mov
sbb
call
repz
mov
jnp
imul
movs
rcl
daa
fcomp
inc
loope
js
mov
dec
icebp
pop
and
ret
mov
pop
push
dec
(bad)
lds
xor
mov
shr
sbb
xor
mov
fld
sub
xor
stc
mov
(bad)
retf
cmp
(bad)
rol
pop
add
inc
dec
test
pcmpgtd
ror
xor
ins
dec
dec
loope
cmp
stos
xor
js
ss
popa
lahf
addr16
or
les
pop
and
lods
call
jnp
sbb
call
icebp
jg
sub
xor
cmc
dec
or
cld
push
cwde
sub
add
push
stos
sub
and
dec
xor
das
bound
sahf
pusha
adc
ds
fild
frstor
mov
(bad)
cmp
cwde
xor
retf
sti
jno
push
xchg
aas
fstp
pop
mov
push
push
jmp
fist
mov
add
rol
jns
jb
cmp
pop
lods
pop
mov
and
adc
nop
pop
out
and
pop
xchg
cmps
cmp
jbe
repz
repnz
outs
cmp
and
push
rcl
xchg
sub
xchg
and
jb
test
add
fs
(bad)
pop
test
adc
pop
test
dec
jno
retf
fld
xchg
addr16
push
call
jmp
imul
call
or
sti
inc
jp
rcr
dec
pop
scas
rcl
fisttp
aaa
jae
test
daa
rcr
int3
xchg
adc
fwait
mov
out
mov
add
jbe
fs
dec
call
mov
adc
sbb
jne
loope
cmps
xchg
cmp
xchg
js
icebp
push
test
mov
je
sbb
stos
mov
push
mov
jmp
sub
div
clc
mov
mov
sub
or
add
retf
add
sub
inc
(bad)
jmp
dec
xchg
inc
adc
pushf
jge
mov
inc
ret
or
add
jmp
jnp
ds
or
mov
(bad)
or
js
inc
pop
ret
cmps
fwait
inc
test
es
xchg
xchg
sbb
and
push
xor
fs
ret
pop
mov
mov
cdq
mov
add
xchg
dec
mov
pop
fsubr
in
call
dec
jecxz
and
add
clc
mov
mov
retf
cdq
inc
aaa
lods
aas
mov
rcl
sbb
cmp
inc
xchg
mov
std
xchg
pop
cmps
and
fisubr
xchg
cmp
sbb
cmc
popf
fucom
aad
push
scas
inc
mov
or
lahf
mov
sub
adc
sti
int3
cdq
fs
jmp
jae
add
cld
sbb
scas
enter
sahf
call
aaa
cwde
or
cs
mov
mov
cmp
and
sub
add
stos
cmc
add
adc
aas
xchg
ss
xor
xchg
repnz
inc
jp
out
inc
xor
cmp
push
mov
push
push
push
mov
sub
out
add
neg
cli
jge
fwait
add
pop
lock
xchg
ret
add
inc
fs
or
push
fst
sbb
xchg
test
pop
lods
and
ds
fist
inc
mov
in
loopne
cmp
push
iret
rcr
clc
add
add
iret
mov
stc
icebp
ret
jo
mov
jmp
sbb
shl
sbb
call
push
pop
jmp
push
rol
test
xchg
or
push
sbb
hlt
xchg
mov
cmp
jns
mov
push
cli
push
in
add
fwait
js
std
popa
call
in
and
ins
inc
rcl
fst
jae
push
clc
loope
mov
and
out
mov
inc
stos
add
dec
sti
icebp
adc
sub
push
mov
mov
sub
push
mov
aas
and
xor
sahf
xchg
arpl
iret
pushf
in
jmp
mov
pusha
or
push
loopne
out
ds
mov
push
mov
inc
add
lods
std
sbb
jge
mov
jo
bnd
rol
adc
or
dec
lods
sar
pop
sbb
(bad)
push
imul
mov
and
rcl
jmp
(bad)
adc
cdq
out
retf
cmp
out
mov
(bad)
add
sub
ja
cmp
jns
cmp
shl
or
mov
sbb
(bad)
pop
loopne
push
inc
nop
mov
sub
dec
loope
cdq
or
(bad)
dec
sbb
mov
stos
sub
cmp
cmp
cmp
inc
mov
loop
nop
or
push
xor
push
sbb
jge
and
mov
in
call
mov
sub
lods
push
inc
jne
div
loopne
sub
hlt
and
iret
cmc
cs
in
addr16
fisub
cli
adc
push
test
sub
and
icebp
fdiv
pop
aaa
outs
in
fcomp
or
cmc
lods
push
cdq
lds
pushf
xor
iret
out
fmul
pop
ss
adc
push
pushf
add
out
cdq
jge
int3
adc
fisttp
sbb
adc
fbld
mov
sti
test
jmp
in
les
ds
cli
adc
push
jg
sbb
mov
stos
in
(bad)
jmp
sbb
xchg
cmp
sbb
ds
test
shr
push
xor
mov
ffree
loopne
sti
popf
lea
enter
js
cmc
call
fs
push
in
popa
aam
sbb
into
xchg
fucomi
aad
pop
xor
push
popf
mov
int3
lods
cmp
(bad)
lds
pop
stos
ret
stos
cmps
das
shl
jae
mov
sbb
fild
mov
call
sbb
dec
outs
or
in
les
cli
jns
cdq
shr
les
lods
dec
rep
(bad)
adc
loop
and
loop
cmp
in
mov
pop
fld
gs
jb
cli
(bad)
fistp
stos
iret
(bad)
sbb
out
test
pop
add
push
xchg
add
dec
jne
xor
sbb
mov
pushf
add
jne
mov
sub
loopne
jbe
lds
jno
pop
adc
cmp
sbb
test
xchg
ficomp
lea
and
ret
add
rcr
xchg
mov
xchg
ret
add
mov
xchg
xor
mov
xor
pop
push
xor
adc
cdq
shl
scas
repz
(bad)
lds
lods
jg
pushf
add
sub
repnz
loopne
aas
daa
push
call
ins
and
call
pop
and
lods
xchg
pushf
popf
aas
leave
jecxz
rcr
aam
or
test
les
mov
sahf
sar
jmp
imul
cmp
mov
fcmovnb
inc
mov
mov
mov
repnz
adc
ss
jno
fld
sar
shl
jge
std
sub
mov
or
jno
push
lds
in
fdivr
cli
cwde
adc
rcr
xchg
outs
pop
sub
aad
sub
(bad)
sbb
inc
xor
out
loope
dec
lahf
sbb
or
cmp
jmp
lea
les
sub
test
cmps
sti
inc
leave
and
add
ret
sbb
push
push
stos
lahf
iret
or
cmp
pop
movs
pop
(bad)
imul
imul
or
movs
lahf
adc
push
les
jmp
popf
in
rcl
(bad)
jg
pop
inc
mov
dec
xor
cmp
pop
add
lsl
repnz
(bad)
pop
fmul
xchg
mov
jmp
out
push
push
dec
mov
sbb
mov
inc
push
adc
xchg
inc
push
inc
movs
das
add
nop
mov
mov
mov
mov
inc
jl
fwait
pushf
and
mov
xchg
or
sub
call
addr16
xor
and
sub
mov
sbb
and
(bad)
ins
popa
mov
aad
popa
push
data16
jp
mov
or
pop
fcom
push
inc
retf
lea
xchg
shr
(bad)
dec
movs
aaa
push
jns
das
stos
repnz
out
jmp
fidiv
xor
pusha
mov
fisubr
fs
jecxz
(bad)
inc
and
xchg
push
push
es
add
or
jno
ins
mov
addr16
sbb
retf
mov
inc
cmp
push
(bad)
fist
stc
ins
rol
add
add
ss
cli
mov
inc
dec
sbb
dec
rcl
xchg
fist
outs
ja
call
sbb
mov
ret
dec
jg
ins
lahf
xor
aaa
fsub
sbb
aad
mov
lahf
scas
mov
jmp
daa
push
xor
popf
pop
daa
mov
shl
mul
jmp
ja
mov
inc
cs
fist
push
test
or
xchg
in
ins
scas
cmp
loop
fild
mov
cmps
stos
and
fwait
inc
pop
mov
pop
xor
cmp
or
(bad)
loope
mov
mov
inc
adc
adc
inc
fwait
aad
adc
adc
xor
into
add
cmp
xchg
outs
mov
push
rcl
mov
das
xchg
xor
lock
das
mov
and
adc
add
retf
pop
lods
sub
cdq
jmp
pop
fisub
jno
push
inc
pop
xor
popf
fld
jbe
inc
pop
in
cs
pop
sbb
and
lods
jne
jg
icebp
aam
sbb
mov
jecxz
or
repnz
ja
push
or
push
xor
xor
mov
jmp
push
sub
or
call
jecxz
mov
inc
or
jl
repnz
xor
jg
lea
push
arpl
adc
add
int
inc
test
or
fwait
cmp
mov
mov
paddq
add
or
data16
in
xor
mov
xchg
mov
fisttp
sbb
and
aaa
xlat
inc
loope
pop
js
jge
(bad)
push
xchg
lea
mov
imul
mov
dec
adc
cmp
cs
sub
daa
inc
and
data16
in
inc
sbb
ss
push
push
cmps
adc
cmp
mov
push
or
jmp
aad
retf
(bad)
push
popa
mov
repnz
inc
adc
ret
iret
push
cmps
bound
push
ds
jno
add
xor
push
jle
xor
call
jl
es
and
lods
mov
int
gs
mov
adc
xor
cmps
xor
clc
lahf
xchg
xchg
add
adc
pop
mov
xchg
adc
mov
lods
daa
sbb
jne
jmp
and
adc
ins
jmp
loope
add
push
test
and
outs
fsubrp
(bad)
or
sbb
int
loopne
mov
pop
mov
jbe
add
imul
jae
int
xchg
mov
retf
pop
movs
push
jo
out
pushf
shr
pop
clc
dec
and
cdq
inc
les
in
mov
mov
int
sbb
js
mov
xor
dec
sbb
mov
push
inc
jl
hlt
xchg
daa
iret
sub
jo
dec
push
or
dec
adc
add
pop
add
dec
pop
vunpcklps
cwde
dec
jnp
mov
imul
adc
add
dec
mov
xlat
ror
adc
mov
cmps
push
jle
out
rol
sti
int3
and
mov
jl
push
or
push
scas
push
xor
bound
pop
mov
cwde
adc
ret
xor
add
mov
(bad)
jb
sbb
mov
arpl
mov
lahf
div
jl
ins
push
scas
mov
call
enter
arpl
mov
inc
in
mov
sar
popf
jo
out
sub
out
bound
out
jb
adc
ror
lahf
cwde
addr16
sub
daa
adc
scas
push
scas
sub
dec
mov
add
loop
sub
ja
sbb
jecxz
fdiv
jbe
or
add
daa
adc
sub
aas
nop
push
mov
jbe
sbb
cwde
outs
imul
xor
idiv
fs
xor
loop
fstp
pushf
(bad)
repz
ins
out
pop
xor
fsub
push
iret
outs
xchg
repnz
xor
addr16
in
ds
popf
pop
add
in
lds
aas
enter
xor
retf
ret
adc
pop
push
(bad)
in
mov
dec
mov
jno
ret
jecxz
sar
xor
jbe
add
add
ret
mov
lods
xchg
cwde
adc
les
inc
mov
sti
jnp
mov
call
dec
sahf
pusha
jp
stos
fwait
jb
mov
sub
out
mov
inc
int
inc
(bad)
pop
(bad)
stos
inc
xchg
add
mov
fcomip
cmc
jnp
mov
icebp
in
lock
sti
adc
ja
push
jnp
mov
pop
mov
lds
repz
fcom
xchg
push
pop
sti
xchg
xchg
call
or
cmp
and
dec
dec
pop
fistp
xor
cmp
jmp
gs
push
cli
cmp
popa
and
ds
push
clc
xor
fstp
ror
arpl
sbb
adc
jmp
push
ret
cmp
push
inc
or
pop
mov
xor
push
std
add
popa
push
icebp
add
dec
stos
sbb
test
inc
imul
lar
sbb
data16
fild
cli
push
mov
inc
sub
pop
push
mov
sbb
lods
jae
popf
dec
loop
inc
arpl
xor
mov
popa
mov
mov
pop
add
xchg
stos
dec
xchg
repnz
push
out
push
int3
or
clc
cmp
jmp
dec
gs
pop
sub
adc
leave
pusha
dec
sti
js
in
pop
jno
or
out
in
sub
loopne
adc
sub
cmp
es
scas
cli
jmp
push
bound
lock
push
add
xchg
add
jbe
sbb
cmp
mov
retf
pop
ds
aas
js
loop
je
stc
aad
dec
inc
std
jmp
or
jle
mov
adc
(bad)
aas
adc
fs
sar
mov
and
or
fcmovnbe
lods
push
jno
mov
in
pop
and
mov
pop
push
sbb
xchg
pop
mov
inc
xlat
xchg
cmps
sahf
je
test
daa
xchg
mov
out
mov
dec
dec
cmp
outs
fwait
jmp
out
xor
add
je
test
into
mov
pop
inc
fwait
inc
fwait
and
test
imul
mov
push
jbe
and
imul
sti
stos
cli
sbb
fcom
aas
cmp
dec
inc
jne
fidiv
mov
jmp
pop
sbb
popa
jno
js
dec
in
rcr
out
mov
nop
fwait
jecxz
push
mul
out
fs
into
dec
cli
cmp
jns
sub
sbb
inc
mov
push
jo
retf
(bad)
aad
add
or
dec
mov
inc
jns
xchg
add
cmc
xlat
(bad)
rcr
xchg
inc
xchg
jb
(bad)
xchg
lock
jecxz
(bad)
cmp
and
xor
add
cs
sub
mov
xor
pushf
or
addr16
or
out
fstp
xchg
xor
jno
iret
add
out
pop
lods
sub
dec
adc
xor
add
xchg
pop
imul
shl
sahf
or
test
test
imul
push
(bad)
jge
in
jb
cli
cmp
xchg
sti
shl
gs
lea
cmp
into
jbe
jo
aad
jno
add
leave
push
in
in
jp
fld
push
xor
add
stos
movs
sub
jle
jae
es
xchg
xchg
inc
(bad)
loope
xor
sub
pusha
adc
aad
lahf
mov
movs
int3
dec
leave
xlat
pop
test
sar
sbb
mov
or
sub
les
add
fimul
jmp
jno
pop
inc
aas
xchg
js
ins
jge
sbb
pop
enter
out
jb
pop
adc
sub
jmp
jmp
fidivr
inc
ror
mov
mov
rcr
and
sub
cmp
sub
in
ins
inc
movs
stc
(bad)
sbb
out
mov
xor
mov
xor
pop
call
in
rcr
jl
call
loopne
(bad)
fwait
xchg
icebp
ret
mov
mov
ret
icebp
inc
dec
xchg
enter
int
xor
call
mov
push
pop
jle
push
leave
cmp
mov
jge
pop
cmp
mov
dec
mov
loop
pop
dec
inc
and
cdq
ins
adc
jb
not
pop
outs
mov
aaa
pop
jl
push
fidivr
pop
cmp
add
add
sub
(bad)
xchg
dec
pusha
mov
jl
adc
movs
test
in
and
outs
retf
mov
or
and
loope
xor
sbb
adc
jmp
mul
mov
aaa
test
jne
jnp
mov
into
sbb
push
mov
popf
ja
(bad)
pusha
push
in
cli
daa
lock
mov
sbb
xor
cmp
add
inc
xor
iret
inc
mov
inc
iret
mov
loop
outs
xor
xor
cmps
pop
inc
jnp
inc
pop
inc
cli
ror
(bad)
and
mov
das
xor
jl
das
test
aaa
loop
jecxz
adc
(bad)
and
popa
or
cmps
fstp
dec
int3
outs
shr
xchg
cwde
dec
je
or
sbb
add
mov
sub
retf
(bad)
xchg
jl
cmps
test
jo
dec
jns
jmp
int3
(bad)
jmp
push
inc
pusha
(bad)
push
push
push
pop
and
push
in
dec
hlt
or
test
ins
sub
rcl
loop
sahf
pop
(bad)
jmp
adc
add
sub
ror
cwde
pop
loopne
inc
mov
cmp
cmps
mov
push
sbb
add
dec
xchg
lods
jg
add
in
or
stos
mov
and
jnp
adc
aas
sub
mov
push
iret
loopne
lahf
sub
jo
mov
hlt
outs
push
jb
aas
mov
ret
mov
cmp
and
push
scas
mov
fmul
jecxz
push
ins
push
ret
xchg
xor
sub
dec
rcl
adc
loope
adc
in
push
ficomp
xchg
mov
or
out
outs
mov
stos
pop
mov
pop
out
dec
js
test
add
out
mov
rol
jp
js
push
inc
ror
adc
scas
sbb
(bad)
ins
cmps
leave
push
cdq
xchg
add
xor
add
xor
call
or
arpl
stos
div
outs
ret
cmc
jno
div
test
inc
xchg
push
inc
push
rcl
sti
dec
ffreep
lea
mov
shl
jmp
mov
ja
ins
fimul
(bad)
sbb
push
lods
aam
mov
push
cwde
xor
mov
lods
pop
sbb
jnp
out
add
fadd
fstp
and
add
xchg
jmp
mov
jbe
out
idiv
add
ins
sub
mov
pushf
aam
or
fcmovnb
dec
adc
addr16
mov
or
xlat
gs
xchg
jle
lock
stos
jmp
out
out
imul
fistp
push
xor
mov
pop
fadd
jmp
jae
idiv
push
in
jb
push
aam
cmp
das
dec
repnz
cdq
sbb
mov
add
(bad)
xchg
and
and
cmp
into
mov
add
js
dec
pop
inc
pop
add
das
and
push
mov
daa
mov
and
test
pop
out
int
(bad)
adc
add
adc
(bad)
sbb
stc
cmps
sar
mov
fistp
xor
cmps
adc
jae
xchg
inc
push
leave
add
sbb
adc
into
(bad)
push
sub
aad
push
and
xor
sbb
dec
ret
or
mov
int
add
out
pop
dec
scas
pop
lods
adc
sbb
and
jp
cli
and
xor
mov
push
mov
jle
mov
inc
xor
xchg
cli
cmc
test
pop
mov
les
ror
imul
call
lods
push
mov
mov
sbb
xchg
sub
movs
and
(bad)
cli
iret
pop
dec
ins
int
retf
fucom
jb
push
adc
cmp
das
mov
push
dec
js
mov
in
stos
or
imul
rcl
pusha
(bad)
out
lock
je
arpl
xchg
lods
idiv
pop
sub
or
cli
je
rol
loope
mov
adc
dec
cmps
fiadd
cmp
mov
or
sti
ss
jo
dec
cwde
inc
cmp
ret
sbb
xchg
lahf
out
push
push
inc
aas
push
sbb
aad
test
retf
clc
daa
mul
in
std
xor
cmp
nop
std
lock
lods
leave
pusha
inc
push
push
mov
xor
rol
int3
int3
push
fiadd
bound
aam
cmp
jmp
and
mov
push
test
pop
mov
jle
imul
daa
sub
shl
dec
mov
push
sub
int3
call
test
enter
ss
push
sti
out
std
mov
push
lds
xchg
pop
sbb
and
push
aad
data16
pop
daa
out
(bad)
neg
arpl
xchg
mov
add
jp
(bad)
pop
iret
lods
dec
iret
pop
in
sti
push
cmps
gs
(bad)
iret
sub
jecxz
lds
lahf
inc
les
pop
add
pop
nop
(bad)
in
stos
outs
fwait
neg
cmove
cs
mov
imul
sub
inc
ss
movs
mov
mov
movs
repz
pop
push
push
cli
pop
cmp
(bad)
(bad)
int3
sub
out
mov
(bad)
cdq
xlat
loope
sbb
fimul
int3
call
and
pop
fdiv
std
hlt
mov
or
inc
fnsave
xchg
or
mov
jge
pop
cmp
rcr
cmps
leave
mov
sbb
jl
dec
xchg
pop
jns
dec
add
ror
call
arpl
adc
test
loope
dec
rol
add
repnz
iret
mov
mov
(bad)
cmp
arpl
ss
ret
jnp
pop
sub
mov
mov
ss
shl
mov
sub
push
mov
scas
(bad)
int3
or
rcr
sbb
jbe
cdq
mov
stos
pop
xchg
xlat
push
out
jbe
iret
ins
ja
jns
mov
js
cli
dec
push
ja
movs
mov
add
stos
fadd
int3
inc
add
fisttp
add
pusha
aam
adc
mov
pop
jp
imul
dec
data16
test
cli
pushf
lahf
pop
xlat
pop
ret
cmp
xchg
(bad)
jmp
dec
push
ror
sbb
sub
xchg
fnstsw
and
(bad)
adc
mov
loopne
dec
xchg
int3
xchg
int
sub
sub
xor
or
out
mov
pop
push
mov
arpl
fcmovnb
out
and
in
in
inc
push
rol
rol
enter
mov
(bad)
inc
adc
das
enter
sbb
inc
lea
cmp
xor
or
xor
fucomi
mov
cwde
aad
mov
nop
aaa
dec
outs
mov
jo
pop
sub
rcl
jge
cmp
test
test
js
jb
icebp
fadd
cmps
jno
imul
sub
mov
lods
xor
cmc
xchg
loope
scas
pop
jnp
mov
and
push
add
(bad)
mov
imul
enter
and
cs
cmps
and
stos
xchg
popa
ror
pop
or
add
outs
pop
retf
cmps
(bad)
jle
jns
adc
and
retf
xchg
test
test
(bad)
xor
mov
movs
ja
mov
outs
jnp
cmc
les
scas
xchg
movs
daa
adc
outs
pop
data16
cmps
mov
int
pop
jge
outs
rcl
mov
out
xchg
inc
stos
mov
jmp
lods
(bad)
std
sbb
scas
jecxz
int
call
out
mov
jle
fstp
(bad)
xchg
test
push
je
movs
test
fsub
je
nop
mov
mov
test
repnz
div
add
xchg
jo
mov
xor
lock
(bad)
mov
sbb
ror
xor
mov
addr16
xlat
iret
sub
rcl
repz
cmp
and
inc
dec
call
sbb
cmp
rol
pop
ror
pop
stos
push
cmp
(bad)
and
or
ret
mov
mov
pop
jmp
inc
adc
cmp
(bad)
loopne
mov
lea
in
inc
adc
push
xchg
inc
les
shr
inc
enter
scas
out
call
js
stos
inc
add
cdq
sub
pop
test
js
retf
jo
xchg
stc
into
cld
clc
mov
mov
bound
ss
stc
add
pop
pop
out
mov
push
mov
stc
adc
push
sbb
lock
das
xor
cmp
cli
jo
add
or
je
call
xchg
mov
mov
xchg
and
add
push
inc
or
mov
adc
fdivrp
or
jns
sbb
fs
stos
test
es
leave
sbb
push
xor
(bad)
pop
sub
sbb
test
dec
lea
fild
dec
push
mov
inc
sbb
xor
lods
pop
jle
mov
cmp
adc
cmp
test
je
mov
fld
add
and
or
push
inc
sti
and
mov
popf
or
mov
setnp
std
iret
stos
xor
jl
mov
push
scas
mov
jnp
arpl
daa
test
or
mov
inc
mov
pop
test
(bad)
shl
mov
mov
sti
jecxz
jmp
out
and
xor
jo
pop
add
mov
js
ret
test
scas
outs
dec
xor
stos
adc
sahf
imul
neg
loop
clc
ja
adc
scas
ror
cld
cmp
in
daa
lods
mov
sub
jp
inc
and
fmul
movs
xchg
mov
fcomp
xchg
push
cdq
xor
(bad)
push
ds
into
dec
mov
mov
xchg
push
mov
enter
sbb
push
jmp
sub
xchg
add
aaa
out
pop
cdq
fadd
enter
xchg
ja
jmp
mov
dec
jb
add
or
adc
cmps
ss
xchg
cmc
lahf
dec
add
push
push
adc
dec
pushf
pop
pop
out
cmp
loop
pop
sub
test
mov
xor
sbb
push
sub
mov
mov
outs
push
or
ret
ss
sbb
stos
mov
int
jbe
jb
push
or
pop
and
arpl
mov
mov
lods
imul
shl
retf
mov
rcr
fdivrp
(bad)
cmp
xchg
aad
daa
dec
and
in
addr16
(bad)
mov
xor
fwait
mov
test
sbb
addr16
or
ficomp
aas
bound
jae
test
mov
sbb
mov
pop
sbb
sti
push
loop
pusha
xor
pop
(bad)
dec
fdiv
add
loopne
sbb
les
add
jge
mov
cmp
stos
or
adc
or
cmp
jecxz
cmps
xchg
xchg
loopne
sbb
cwde
xor
daa
imul
fnstsw
jge
scas
inc
sar
fdiv
test
sbb
fstp
inc
jae
nop
out
out
movntq
jno
cli
and
ror
jg
addr16
and
jge
aad
jb
push
push
mov
jae
and
in
retf
repnz
inc
hlt
add
pop
ins
push
in
inc
or
jns
push
push
retf
mov
pop
icebp
fist
mov
arpl
ficom
cmp
rol
scas
or
mov
jp
mov
int3
push
mov
adc
and
es
xor
mov
cdq
jnp
not
inc
and
lods
cmp
ins
gs
pop
loope
cmp
add
adc
cli
add
ror
(bad)
mov
daa
jmp
sar
xor
jecxz
jbe
dec
sahf
(bad)
shl
stos
mov
popa
inc
dec
push
inc
in
imul
stos
mov
inc
sub
stc
mov
stos
(bad)
jg
daa
vpaddsb
aad
pop
dec
fnstsw
or
sub
(bad)
mov
jbe
scas
popa
push
or
into
aas
call
xchg
out
and
data16
fisttp
fwait
xchg
add
popf
push
push
cmc
dec
mov
sbb
fs
inc
jnp
movs
sub
sbb
inc
inc
jnp
fisub
out
fs
(bad)
es
add
push
sbb
pop
xchg
pop
cmp
adc
dec
stc
pop
xor
mov
pusha
pop
popf
mov
aad
adc
push
sub
mov
adc
pop
push
les
mov
pop
dec
js
mov
pop
leave
leave
(bad)
mov
imul
push
mov
cli
cmp
test
lds
push
mov
jmp
jge
cs
test
xchg
div
pushf
adc
arpl
and
cld
data16
cmps
arpl
fsub
cmp
xor
jmp
xor
mov
and
push
enter
das
ss
lds
shl
mov
mov
(bad)
xchg
gs
fimul
or
add
add
pop
aad
cli
pushf
call
xlat
dec
sub
push
adc
pop
adc
sub
(bad)
lea
std
stos
and
add
pushf
leave
jnp
xor
sub
lahf
xor
mov
ret
ret
clc
inc
inc
cld
push
clc
ret
or
cmp
mov
fcomp
(bad)
xor
icebp
(bad)
les
mov
sub
repz
adc
xchg
sahf
pop
pop
fistp
fwait
cmp
xlat
pop
push
mov
push
and
aam
sub
mov
jno
xor
outs
push
out
mov
mov
dec
cmp
push
xor
sub
dec
inc
mov
adc
pusha
(bad)
shr
inc
ret
cmp
cli
not
cld
retf
enter
mov
addr16
mov
mov
out
stos
repz
xchg
mov
psraw
xor
ret
lahf
lock
xor
adc
ret
repz
sub
mov
leave
jo
and
int3
clc
cli
rol
xor
call
xchg
jmp
cmp
mov
cmps
mov
test
pop
mov
inc
xor
xchg
add
(bad)
outs
jmp
int
inc
add
cld
(bad)
pop
stc
shl
fadd
or
adc
fild
stc
dec
cmp
push
test
repnz
mov
les
dec
or
mov
(bad)
adc
adc
lods
inc
sub
(bad)
mov
adc
pushf
dec
and
dec
pop
mov
movs
and
fstp
xchg
xor
outs
mov
loop
enter
xchg
push
lods
xlat
cmp
aam
shr
push
mov
pop
xor
inc
add
or
pop
aas
mov
lahf
dec
out
mov
fwait
add
in
push
clc
xchg
mov
mov
movs
mov
push
lds
lods
mov
pop
imul
mov
ret
jp
bound
cmps
cli
(bad)
mov
leave
scas
daa
mov
in
push
pop
mov
and
fnsave
fwait
mov
dec
pop
inc
ror
xchg
mov
jecxz
mov
jnp
out
fmul
test
dec
popf
and
dec
jno
jge
into
shr
mov
pop
jecxz
jl
fmul
xchg
fwait
(bad)
jge
loopne
pop
fsubr
cmp
int
stos
mov
loop
call
sub
test
retf
sahf
cdq
or
add
push
test
fidivr
mov
mov
data16
sbb
es
sbb
mov
(bad)
js
ret
loopne
leave
mov
jae
movs
inc
enter
lods
aas
and
push
jle
(bad)
mov
aad
push
addr16
pop
and
mov
xchg
jge
mov
aam
xchg
call
inc
inc
popf
xor
add
scas
push
out
ins
push
ins
icebp
shl
push
pop
ins
push
ret
xchg
neg
mov
sar
fcmovnbe
call
vcmpsd
adc
cmp
repz
arpl
mov
lods
pop
test
push
loope
repnz
push
movs
lahf
mov
in
or
mov
adc
icebp
cmc
mov
xor
inc
rcl
and
jb
test
sbb
(bad)
in
outs
jmp
icebp
mov
fidivr
and
mov
ja
ds
shr
jle
xchg
mov
inc
sub
xor
push
sbb
inc
js
cmc
adc
or
data16
outs
inc
lea
loope
xlat
sti
retf
mov
add
cmp
pop
lahf
push
cwde
call
xchg
into
add
add
lds
fwait
cmps
push
mov
or
stc
xchg
mov
shr
outs
xor
in
or
fcom
cli
push
mov
xchg
mov
fist
lds
pop
hlt
and
inc
jb
iret
jecxz
popa
jne
ins
arpl
ins
test
mov
fldcw
cmp
std
cmp
inc
fsubr
jmp
jmp
inc
pushf
test
xchg
call
fidiv
(bad)
idiv
nop
jg
cmp
sub
out
cmc
adc
ror
jns
sbb
(bad)
fidivr
jae
cmp
pop
test
push
call
out
mov
fsubr
fwait
sar
jo
ins
ret
push
sbb
adc
pop
dec
daa
lods
jp
enter
dec
lods
adc
mov
rol
mov
(bad)
int3
jb
aaa
popa
call
or
sbb
inc
nop
sbb
jne
dec
dec
and
adc
push
shr
loopne
jl
clc
dec
xchg
mov
pop
ins
jmp
push
pushf
pop
dec
mov
cwde
add
xor
add
aas
out
push
jne
mov
push
dec
int3
jmp
out
leave
or
mov
push
push
push
jb
push
les
ins
or
(bad)
dec
(bad)
call
test
and
add
popa
mov
inc
push
mov
sub
and
xor
dec
xchg
sahf
inc
jnp
xchg
add
dec
repz
mov
hlt
ja
push
out
sub
cmp
adc
nop
sbb
jno
xor
rcl
test
arpl
in
pop
outs
adc
jmp
jne
jno
or
xchg
inc
ret
adc
addr16
lods
out
bound
mov
in
lea
xchg
jb
fucom
dec
xchg
xor
inc
dec
movq
jge
ror
mov
push
sahf
fbld
clc
mov
jo
clc
imul
lea
mov
fcom
fsubr
sbb
inc
xlat
jle
xlat
movs
sti
outs
mov
pusha
dec
jle
out
add
inc
mov
(bad)
or
test
xchg
jl
sub
cmp
pop
daa
jmp
out
or
pop
popf
(bad)
cli
mov
dec
ret
lock
retf
xchg
jmp
mov
push
(bad)
cmp
shr
cmps
stc
cdq
js
pop
out
pop
idiv
xchg
call
arpl
add
or
outs
(bad)
loop
sub
clc
in
xor
dec
jae
or
pop
add
iret
and
fist
mov
push
mov
mov
lahf
xlat
push
adc
xchg
or
inc
pusha
fwait
(bad)
xor
push
into
add
or
mov
dec
les
enter
movs
mov
add
fidivr
and
mov
inc
dec
(bad)
push
cld
sub
test
gs
dec
adc
sbb
ja
retf
pop
sbb
in
xor
mov
push
imul
cmp
mov
cli
dec
mov
push
mov
dec
out
xchg
loop
add
push
pop
jg
popa
or
jmp
aad
push
popa
push
pop
dec
out
mov
outs
test
into
repnz
call
pop
cld
add
jl
dec
cmp
inc
cmp
mov
cmp
test
and
rcr
mov
cmp
and
cli
dec
std
mov
mov
pop
xchg
pop
xor
imul
mov
sub
ds
mov
mov
rol
stos
push
sbb
movs
stc
add
xchg
jg
int3
xchg
sub
mov
enter
xchg
dec
xlat
or
adc
rcr
xchg
(bad)
jp
xchg
sbb
mov
xor
sub
imul
push
inc
call
mov
cmp
add
dec
or
jle
lock
jb
das
ins
outs
add
adc
jle
rol
fadd
iret
jmp
jmp
nop
push
sub
and
pop
repnz
sahf
or
punpckldq
nop
pusha
mov
lods
data16
fucomip
ret
gs
outs
pop
outs
sbb
fs
cmps
add
mov
call
xchg
icebp
adc
les
xchg
in
scas
add
clc
iret
adc
sub
jne
mov
into
xor
pop
fyl2x
not
jle
stos
pusha
sub
nop
dec
nop
mov
imul
sbb
sub
mov
leave
repz
jns
out
xor
test
xlat
dec
dec
js
sbb
xor
inc
add
mov
adc
call
inc
ficom
ds
mov
adc
pop
mov
sbb
pop
rcr
mov
out
and
xchg
jmp
fxch
mov
data16
fxch
pusha
fisub
xchg
adc
mov
shr
sti
add
in
xor
mov
cmp
jne
les
mov
sbb
nop
addr16
pushf
pop
cwde
les
(bad)
fdiv
add
bound
sbb
repnz
jmp
daa
pop
add
mov
retf
fnstenv
mov
lock
cmp
div
pop
inc
into
into
fist
jno
sbb
jb
jno
sub
(bad)
nop
shr
fsubr
push
and
dec
add
mov
sub
outs
mov
push
fs
(bad)
ins
ins
or
clc
jnp
xor
pop
pushf
mov
je
test
cmp
jno
jnp
xchg
sbb
leave
xchg
xor
push
sub
jl
jle
(bad)
push
mov
push
cmps
and
in
add
jmp
movs
mov
(bad)
bound
aad
in
pop
mov
xor
sub
(bad)
loope
mov
mov
rol
and
mov
lock
(bad)
adc
and
icebp
cmp
jg
aad
add
in
into
xchg
cmps
arpl
pop
imul
outs
push
psrld
sahf
addr16
int
mov
test
jg
jp
mov
nop
ins
mov
mov
scas
test
sub
or
jl
idiv
int3
add
outs
sbb
iret
mov
cmp
fs
adc
lods
push
imul
adc
sti
inc
push
inc
mov
mov
repz
push
inc
pop
pop
sbb
jl
sbb
mov
lahf
das
ss
popa
pop
mov
mov
fbld
and
fsubrp
mov
jmp
bound
cmp
and
xor
push
push
pusha
popf
cs
jns
add
cmp
fcomi
or
pop
mov
enter
mov
pop
dec
cmp
call
xor
aam
sub
loopne
cmp
lea
add
bound
push
sub
mov
push
ret
pop
or
mov
adc
scas
xchg
or
dec
mov
stos
xor
mov
leave
mov
or
mov
lods
scas
les
jp
cmp
test
test
mov
arpl
fcmovnu
sbb
fisttp
daa
dec
jge
test
cdq
hlt
rol
jp
push
pop
sub
fldcw
add
xchg
jne
xchg
inc
lahf
xchg
retf
mov
fwait
test
mov
sbb
bound
mov
cmps
addr16
push
sti
ins
jne
shr
push
adc
sub
pop
clc
sub
call
mov
adc
sbb
xchg
mov
fcomp
cmp
or
sub
psrlw
mov
cmp
or
enter
icebp
call
ds
sub
xchg
xor
mov
rcr
(bad)
mov
pop
jl
or
dec
loop
xor
jbe
es
and
xchg
xor
sbb
test
add
xor
push
cs
repz
and
mov
lods
rol
je
ins
fmul
test
mov
test
pushf
stos
or
jp
clc
mov
jmp
dec
scas
mov
fwait
cmp
in
inc
(bad)
hlt
mov
jmp
dec
push
movs
cmps
fild
rol
xchg
sti
and
cmp
jg
or
and
xor
cmp
aas
cmp
pop
push
inc
in
ja
ret
pop
pop
aad
mov
iret
pop
pop
in
js
dec
jne
mov
out
call
sbb
jmp
add
and
stos
js
test
ret
scas
jb
mov
cmps
jl
cmp
in
in
and
iret
out
mov
cmp
sbb
leave
jl
rcr
in
dec
xchg
pushf
aam
pop
mov
in
push
icebp
das
or
or
fnstcw
adc
shl
stos
test
call
adc
jo
ins
dec
xchg
inc
xlat
lds
jmp
jmp
push
ficomp
popa
xchg
sub
or
pop
inc
and
clc
xchg
dec
mov
stos
int
fisttp
jb
push
xor
adc
xor
mov
xchg
cmp
mov
daa
add
mov
jmp
mov
popa
jmp
and
jmp
mov
data16
cmps
or
add
hlt
loopne
mov
inc
push
(bad)
hlt
(bad)
aad
push
jp
cmps
mov
loopne
arpl
xchg
xor
adc
or
int3
cmp
cld
inc
lods
mov
xchg
jne
retf
aam
sbb
mov
cmc
ror
push
repz
gs
mov
les
mov
cwde
pop
mov
inc
fdiv
dec
dec
or
pop
pop
pop
jne
leave
mov
dec
cmp
and
adc
movs
pop
mov
adc
push
jp
fiadd
pop
inc
ss
test
inc
(bad)
xor
lea
inc
ds
adc
scas
xchg
adc
xor
repnz
popa
rcl
pop
sub
dec
xor
mov
loope
xchg
int3
or
mov
jns
pop
and
xor
jo
mov
std
mov
daa
jae
jmp
iret
std
fiadd
push
sahf
aas
add
push
aam
mov
jl
mov
mov
neg
and
sub
jno
call
mov
sbb
push
loopne
push
pop
pusha
and
fwait
pop
add
repz
test
or
sysexit
dec
daa
mov
sub
xchg
not
sub
dec
inc
or
ret
cmp
push
inc
mov
push
inc
jge
or
mov
test
adc
pop
mov
imul
in
pop
gs
or
xor
call
cli
pop
or
sub
ins
xchg
sbb
dec
sub
hlt
push
adc
sti
fmul
pop
mov
mov
and
or
push
pop
test
mov
cli
imul
xchg
call
pop
sub
cmp
hlt
dec
inc
push
clc
call
adc
repz
in
adc
test
cmp
ret
fld
or
test
daa
int
push
jmp
(bad)
(bad)
mov
fstp
enter
and
push
cdq
push
pop
cdq
fnsave
inc
inc
xlat
aam
mov
push
mov
rol
xor
test
jo
clc
xchg
das
xor
fadd
addr16
inc
xor
xchg
jb
jg
inc
movs
stos
mov
xor
stos
scas
fs
xchg
icebp
movs
enter
push
cmc
movzx
stos
mov
add
imul
push
cmp
xchg
retf
jo
shl
push
xchg
mov
push
inc
cdq
and
fsubr
xchg
sbb
mov
ins
aad
mov
add
mov
ins
push
xchg
gs
test
rcr
dec
(bad)
mov
sub
stc
mov
sbb
xor
popf
sub
jge
gs
neg
jp
mov
das
es
dec
fdivr
sub
inc
enter
sub
inc
aam
loope
iret
push
pop
jb
mov
dec
jmp
popa
adc
fistp
xchg
add
inc
jl
popa
push
mov
xchg
mov
sahf
mov
cmp
repz
mov
xor
cmp
test
pop
pop
shl
mov
mov
or
xor
pop
std
cmps
xlat
mov
xchg
push
rcl
mov
dec
cmps
mov
stos
fisubr
xor
fwait
ins
or
jo
sub
cmp
(bad)
fadd
pop
out
mov
fsubrp
jmp
cwde
sub
add
inc
jo
aaa
push
lock
xchg
xlat
dec
movs
repnz
or
jmp
dec
imul
or
aaa
cmp
dec
(bad)
test
jo
stc
jne
pop
xchg
(bad)
sub
cld
ret
inc
pop
in
mov
jmp
mov
shr
mov
(bad)
xor
jmp
sbb
jmp
pop
mov
add
mov
js
inc
sar
retf
mov
push
and
jae
int
mov
dec
lods
pop
or
and
jle
cmps
xor
mov
stos
fadd
jecxz
sbb
xchg
in
(bad)
cmp
inc
pop
xor
pop
cmp
movs
fst
jmp
ret
ins
cs
or
add
push
jg
xor
(bad)
popa
js
or
xchg
jmp
xchg
inc
cli
das
mov
nop
mov
sbb
scas
jl
fcomp
xor
jl
loopne
nop
jmp
mov
outs
cli
jns
or
and
xchg
pop
sahf
imul
push
jnp
sbb
fisub
aaa
in
jns
push
fld
jo
call
fwait
mov
stos
pop
sub
mov
shr
push
out
mov
cwde
mov
mov
mov
fcmovnb
xchg
js
jl
pop
push
ins
cmp
mov
lods
cli
fstp
jne
jae
sbb
sbb
sbb
jp
ficomp
or
and
frstor
adc
ds
outs
add
pop
shr
fyl2xp1
test
inc
ffree
(bad)
sahf
mov
mov
mov
aam
mov
jmp
sub
push
pop
fs
adc
sub
call
mov
movs
outs
mov
(bad)
iret
outs
call
jb
adc
ins
fwait
aam
lea
push
fiadd
fucomip
(bad)
rcr
mov
jmp
or
ds
gs
push
xlat
int
inc
iret
daa
ror
push
popa
xor
fistp
cwde
mov
mov
sar
loope
and
popa
push
sar
lea
sar
or
std
ret
in
and
mov
mov
imul
add
dec
adc
sub
mov
shr
jp
add
mov
repz
mov
or
ja
cmp
xlat
and
jae
cmp
push
push
and
into
add
nop
jmp
mov
sub
dec
cmp
test
xor
fidivr
cwde
push
push
inc
rcr
xchg
or
mov
pop
and
out
fst
jle
aas
xchg
pop
pop
xor
imul
mov
sbb
ret
mov
cdq
mov
imul
sbb
rcr
pop
mov
dec
and
iret
jle
cmp
aad
inc
mov
cmp
aam
stos
retf
lds
cmps
(bad)
push
jns
(bad)
in
cmp
ja
mov
sbb
lods
fstp
in
(bad)
loope
hlt
aaa
je
sub
aad
test
and
test
and
or
iret
xchg
retf
add
ror
sub
dec
ror
xlat
jmp
in
add
(bad)
out
pop
ret
scas
push
jecxz
(bad)
dec
iret
dec
cdq
(bad)
xchg
sub
(bad)
loop
mov
inc
fucomi
pop
lock
adc
mov
dec
mov
lods
xchg
xchg
in
and
jnp
mov
xor
or
clc
dec
arpl
cmps
mov
repnz
out
clc
mov
sbb
push
neg
cmps
xchg
bnd
frstor
mul
fld
or
daa
sub
jmp
push
sbb
sub
lods
xchg
cmp
loope
or
mov
xchg
sbb
dec
inc
mov
xchg
xchg
mov
sub
jbe
inc
jo
aaa
loope
call
ds
ds
or
lds
mov
xor
sahf
jns
lock
mov
test
inc
xchg
loope
add
push
push
pop
test
stc
mov
sbb
and
inc
je
icebp
adc
push
test
jecxz
mov
sbb
lods
retf
mov
mov
xor
arpl
mov
lahf
sti
movs
xchg
mov
ror
sbb
dec
fadd
dec
dec
cmp
lods
jl
test
adc
out
in
pop
push
aam
sbb
in
sub
dec
shr
(bad)
mov
push
dec
mov
cwde
dec
sub
mov
int3
mov
sub
mov
ror
mov
sbb
and
nop
push
xor
sbb
retf
cmc
sbb
pop
rcr
cmc
xchg
mov
adc
hlt
adc
adc
push
mov
lds
jle
sub
rol
fst
xor
and
sbb
sbb
icebp
add
idiv
call
cmps
setns
dec
outs
nop
mov
dec
stos
adc
scas
lds
add
push
lds
xor
xchg
push
rcr
push
inc
out
mov
mov
mov
in
push
xchg
addr16
sub
rcl
inc
jle
xchg
data16
jg
int3
lock
pop
ins
stos
out
in
ret
fistp
in
jmp
mov
or
dec
xor
xchg
inc
push
xlat
sbb
int
fisubr
mov
fisttp
imul
mov
cmc
jg
add
xchg
mov
cmp
dec
imul
sahf
xor
scas
dec
nop
cld
mov
ins
pusha
cmp
ss
add
jo
inc
cmp
rcr
dec
add
mov
or
or
jno
popa
lahf
cli
sbb
inc
dec
repnz
test
into
ds
cmp
mov
or
aas
push
push
call
mov
inc
imul
cmp
call
xor
pushf
fisub
xchg
movs
clc
ds
add
pushf
or
ins
pop
cmps
iret
movs
mov
pop
mov
test
sti
push
enter
iret
xchg
out
sahf
cmc
popf
repnz
xor
push
cmp
outs
xor
dec
lds
dec
push
sbb
inc
addr16
gs
jp
or
ja
in
pop
pop
lock
mov
mov
cmp
and
and
mov
sahf
push
push
add
ins
inc
jl
adc
js
cdq
test
xor
jae
sbb
xor
std
cmp
cmp
(bad)
fidiv
test
push
sbb
outs
out
jecxz
scas
lock
jg
dec
addr16
pop
es
lea
xchg
add
mov
pushf
vminss
js
mov
pop
test
loopne
xchg
ins
adc
ret
inc
push
jo
out
(bad)
xor
push
cld
daa
(bad)
fldcw
jbe
fbld
adc
shr
loope
gs
ins
pop
pop
imul
dec
mov
out
mov
sbb
sar
addr16
es
adc
mov
out
cmp
cdq
jnp
and
(bad)
jae
inc
sbb
lock
gs
jns
retf
inc
xor
test
mov
xor
inc
leave
sbb
xor
cmps
push
mov
mov
pop
int3
push
jg
leave
jg
dec
dec
inc
(bad)
push
std
int3
das
inc
out
in
ror
push
std
(bad)
xchg
xchg
adc
sbb
and
bnd
xor
jb
add
(bad)
and
sub
iret
scas
push
jnp
scas
add
jne
add
or
(bad)
movs
push
dec
or
rcl
dec
stos
xor
sar
mov
inc
(bad)
xor
retf
fmul
mov
or
lds
xlat
push
sub
xchg
cmc
mov
test
push
and
jbe
dec
cmp
sbb
fild
add
lock
adc
fisttp
idiv
cld
jo
leave
dec
lock
pusha
rol
sub
jbe
xchg
or
fisub
dec
dec
mov
ins
mov
cmp
jnp
add
stos
dec
lea
jg
mov
clc
leave
mov
jne
or
outs
repnz
sbb
sahf
dec
jae
dec
adc
sub
movs
pop
mov
mov
sub
movs
push
mov
jns
push
mov
loope
ja
fdiv
jmp
movs
out
ja
xchg
xchg
daa
sbb
mov
adc
jmp
hlt
jne
out
inc
inc
adc
cli
xlat
xor
gs
(bad)
mov
dec
cmps
outs
ja
add
jle
and
les
aaa
xor
mov
test
sti
mov
mov
outs
and
jb
adc
or
stos
pop
ja
mov
mov
inc
dec
outs
lods
inc
mul
(bad)
sbb
mov
jmp
and
sub
inc
int
mov
pop
out
adc
add
mov
popa
push
add
inc
pop
cmps
pop
push
cli
sti
lods
sbb
imul
cmp
das
addr16
clc
arpl
mov
out
call
xor
(bad)
mov
test
sub
lods
pop
loopne
cmp
dec
xchg
and
jge
iret
inc
cld
jecxz
cld
sbb
push
lahf
pop
sbb
jg
div
repz
stos
data16
ret
cmc
imul
ret
and
jg
or
pop
sub
in
cli
inc
repz
push
xchg
fisttp
push
jbe
pop
xchg
jnp
sub
push
cmps
xor
adc
mov
ss
xlat
cmp
(bad)
pop
or
enter
xchg
push
and
mov
sbb
add
out
hlt
and
add
xor
push
pushf
test
mov
shl
(bad)
mov
add
jnp
adc
in
cmp
ret
or
nop
test
xor
xlat
and
enter
outs
adc
lea
(bad)
(bad)
pop
scas
dec
out
std
cdq
dec
mov
mov
or
rol
test
mov
mov
jecxz
add
cmp
cmps
fsubr
lds
fdiv
ss
jg
xor
sbb
push
inc
js
adc
cmp
pop
(bad)
jne
or
sar
adc
(bad)
daa
jbe
addr16
ss
mov
mov
xchg
push
fsub
jo
mov
test
mov
movs
test
outs
retf
mov
pop
ss
sub
or
sbb
sub
aas
shr
xor
and
mov
mov
ret
mov
sub
sub
shl
inc
fwait
(bad)
jmp
loopne
sbb
icebp
cmp
jmp
mov
ror
xchg
into
adc
mov
imul
ins
cs
sub
(bad)
inc
mov
lock
xor
or
sti
and
in
aas
je
leave
out
push
dec
cmp
mov
fcom
retf
jnp
xor
mov
mov
add
add
mov
xchg
loopne
shl
(bad)
neg
lods
inc
adc
mov
sub
dec
loopne
jb
adc
retf
sbb
add
push
pop
fstp
jnp
in
gs
and
jp
xor
sbb
jae
sahf
into
pop
(bad)
xchg
repnz
pop
jg
mov
dec
pop
outs
sti
xchg
xlat
inc
pusha
mov
adc
pop
fild
mov
stc
dec
inc
sbb
xchg
mov
pop
pop
aam
inc
inc
mov
rcr
inc
out
int3
sub
mov
movs
mov
push
aas
cli
iret
neg
loope
adc
out
mov
pop
xchg
cli
add
sub
pop
and
vunpckhpd
sub
pushf
jp
or
xor
push
cmps
cwde
pusha
add
test
mov
push
les
fld
push
mov
mov
mov
popf
ret
xlat
pop
popa
mov
icebp
(bad)
mov
scas
mov
sti
pusha
fwait
jmp
xchg
add
and
scas
stc
adc
mov
loope
clc
xchg
out
not
cmp
scas
cmps
push
mov
sub
iret
add
xor
push
retf
pop
shr
aad
sbb
sub
adc
mov
or
outs
popa
sbb
jl
lods
pusha
mov
fs
mov
neg
aad
rcl
inc
in
mov
dec
pop
scas
call
mov
mov
add
sbb
cmp
out
outs
call
mov
adc
dec
fnstsw
inc
push
test
(bad)
neg
in
out
inc
mov
mov
cmp
push
retf
jbe
out
jp
addr16
ds
retf
adc
xor
jp
cmc
scas
adc
inc
ror
mov
and
lock
inc
adc
ins
and
xor
mov
idiv
cwde
scas
sub
inc
sete
retf
sahf
cmp
repz
dec
xchg
(bad)
cwde
call
pop
push
outs
les
(bad)
jecxz
out
aam
jo
test
jb
and
pop
xchg
mov
mov
dec
imul
(bad)
aad
bound
ss
jle
mov
ss
add
test
sbb
mov
shl
add
out
or
loope
lock
xlat
xchg
xchg
scas
call
jno
fwait
xchg
sahf
sbb
scas
pop
sbb
or
popa
dec
imul
inc
lods
or
in
pop
(bad)
lods
ret
ins
or
xor
stos
or
add
pop
cmp
dec
push
jae
mov
mov
inc
or
jns
fsubrp
xchg
sub
mov
cmp
iret
cli
sub
jae
push
mov
je
mov
ds
jo
mov
fadd
sti
inc
mov
xlat
test
(bad)
movs
push
test
push
mov
mov
mov
inc
jge
mov
daa
xor
mov
mov
mov
nop
mov
cdq
inc
or
popf
stos
adc
retf
pop
sbb
mov
mov
imul
mov
lock
cli
call
cmp
sti
pop
jmp
adc
mov
mov
cmp
dec
fidiv
jae
fsub
jmp
jl
adc
push
and
cmp
call
jmp
aaa
dec
mov
or
ss
rcl
and
sub
pop
push
and
mov
add
loop
and
and
repz
gs
or
cmp
fld
into
stos
lea
out
xor
rol
lock
(bad)
sbb
jo
stos
stos
xor
lods
xor
add
adc
lock
jo
and
dec
add
stc
sbb
outs
pop
jo
xchg
add
inc
imul
arpl
clc
dec
jns
repz
jmp
jb
div
sbb
jns
sbb
mov
adc
ins
mov
mov
jo
stc
sub
dec
jmp
fbld
adc
sbb
and
in
mov
xor
(bad)
or
adc
cmps
sbb
(bad)
jg
or
mov
add
dec
fisubr
add
cmp
int3
cs
mov
xchg
movs
jmp
shl
stos
loop
sti
add
or
xchg
cmps
pop
xchg
fld
mov
adc
adc
lods
(bad)
adc
clc
and
push
inc
pop
ret
cmp
sahf
jae
adc
retf
xchg
out
push
lahf
mov
hlt
adc
pop
rcl
js
pop
or
out
and
inc
or
dec
cmp
lods
mov
sbb
push
and
iret
or
or
sub
add
int3
jne
js
(bad)
jne
or
and
or
and
stc
out
sub
jns
icebp
stos
sub
adc
jno
mov
fwait
cwde
pop
push
add
pop
(bad)
test
test
xor
jmp
inc
icebp
gs
and
sbb
mov
fisub
push
bound
test
retf
sub
mov
inc
xor
outs
(bad)
stc
or
hlt
mov
mov
jae
and
(bad)
mov
sbb
mov
retf
fmul
test
jg
call
xchg
jmp
inc
bound
jge
test
cmp
pop
jne
mov
xor
out
sti
repnz
pop
clc
mov
(bad)
out
imul
pop
lock
jle
pop
arpl
adc
add
scas
mov
cdq
xchg
out
mov
fldenv
xchg
stc
push
pop
and
sahf
cdq
xchg
arpl
xchg
test
fisub
leave
inc
das
sbb
dec
into
xor
push
xchg
lea
popa
nop
jl
jmp
dec
je
stos
pop
test
jmp
push
je
lods
or
cmc
jg
(bad)
cmps
mov
xchg
jne
jno
dec
test
ror
je
pop
xchg
sbb
imul
mov
fnstenv
add
cwde
movs
jp
out
les
inc
add
pop
icebp
cmp
cmp
fimul
sub
cmps
mov
shl
int
arpl
xchg
xor
in
mov
out
sub
scas
and
jg
ror
pop
shufps
jno
add
ins
sbb
pop
fsubr
lea
sbb
dec
push
lea
add
mov
ret
(bad)
outs
inc
lds
mov
mov
fnsave
pop
hlt
daa
dec
jecxz
pushf
adc
cmp
outs
xlat
mov
rcr
mov
scas
sub
push
js
out
scas
sahf
and
xlat
adc
xchg
push
pop
jb
inc
or
fnstenv
dec
cmp
imul
mov
mov
mov
push
mov
je
fwait
pushf
dec
test
jg
jecxz
mov
fadd
jae
cmp
sti
dec
add
push
or
sbb
mov
mov
dec
push
inc
les
mov
sub
fld
mov
xchg
add
or
aas
fidiv
jle
mov
sub
mov
mov
mov
jl
jnp
pop
je
jg
stc
std
or
jae
cwde
adc
leave
pop
rcr
(bad)
jbe
into
mov
mov
push
adc
lds
mov
push
enter
pop
loopne
xchg
in
cdq
sub
xchg
adc
loopne
push
push
pop
mov
outs
push
inc
fidiv
dec
pop
es
add
dec
jle
adc
(bad)
shl
push
es
dec
lods
xchg
mov
adc
(bad)
rol
clc
sar
dec
xchg
and
stos
test
shr
(bad)
xor
sbb
sub
adc
stos
cmc
or
addr16
outs
push
add
xor
out
into
je
cmp
mov
push
xchg
mov
aam
pop
adc
ror
sub
ins
inc
dec
outs
push
sub
sar
fldenv
push
cmp
outs
mov
leave
sbb
xor
push
mov
jb
dec
pusha
or
mov
adc
push
cvttps2pi
aam
shl
dec
sbb
dec
jmp
pop
xchg
inc
mov
pop
push
movs
xor
mov
add
fwait
adc
jl
xchg
mov
cmp
pop
imul
mov
cmp
shl
push
xchg
nop
lods
jge
loope
jno
dec
or
pop
adc
jmp
nop
dec
mov
mov
xchg
cmp
add
push
sbb
inc
mov
mov
mov
xchg
pop
gs
dec
rcl
inc
hlt
xchg
add
inc
outs
mov
add
mov
jnp
dec
pop
retf
push
gs
mov
pop
xchg
(bad)
and
sub
popf
xchg
push
hlt
cmp
inc
jne
dec
push
xchg
test
push
imul
xchg
shl
cmp
jns
in
jno
jecxz
mov
push
sahf
dec
mov
cmp
mov
mov
mov
push
out
mov
push
cli
fisubr
icebp
scas
push
les
xchg
mov
sti
push
adc
mov
jbe
xlat
inc
stos
aaa
push
test
inc
bound
xor
pop
pop
mov
adc
push
jmp
and
and
dec
mov
adc
sbb
dec
std
fwait
push
sahf
cvtpi2ps
dec
das
fcomi
dec
xchg
mov
pop
loop
movs
jl
iret
test
stos
(bad)
sbb
sub
int3
add
fistp
and
xchg
mov
data16
aam
lods
or
ins
adc
aam
cmps
(bad)
dec
out
mov
into
adc
push
or
data16
sbb
pop
cmp
lods
(bad)
rcl
fwait
jb
dec
in
scas
lea
xchg
sbb
cwde
lea
int
jo
dec
loope
gs
xchg
fmul
pop
das
add
or
sbb
cli
push
dec
xchg
jb
(bad)
push
jp
add
in
retf
push
xor
int3
test
aam
aad
retf
jns
stc
sub
jne
sbb
and
push
in
(bad)
movs
lods
sub
in
pop
arpl
int3
mov
adc
aad
jmp
in
sbb
mov
(bad)
retf
inc
xchg
test
sbb
mov
jl
lea
call
movs
add
mov
pop
in
pop
addr16
jp
test
jl
sub
in
call
call
mov
mul
jmp
mov
mov
inc
cmp
and
sar
stos
outs
dec
je
fild
movs
push
sbb
jmp
mov
pop
push
mul
out
sbb
sbb
push
fistp
or
loopne
inc
pusha
inc
or
popf
shl
mov
jle
mov
or
out
jno
sbb
push
shl
loop
push
leave
gs
pop
sub
or
and
sbb
inc
push
add
push
shl
cmps
add
fisub
mov
adc
je
jo
pop
enter
and
cmp
add
mov
pusha
push
xchg
xchg
pop
xchg
adc
mov
mov
and
xchg
sti
into
xchg
sbb
out
inc
cmps
mov
call
inc
xor
inc
(bad)
mov
dec
and
dec
ja
es
cmps
xchg
dec
mov
pop
or
and
add
ins
jg
jae
xchg
push
movs
sbb
or
and
pop
sbb
cmp
push
std
test
lods
lds
mov
aas
outs
mov
xor
mov
mov
fbld
shr
cmc
xchg
and
xchg
inc
call
mov
das
pop
(bad)
mov
mov
fs
lock
inc
push
cmp
pop
jg
push
push
shr
not
cmps
sar
xor
add
jg
scas
add
inc
cmc
ins
jecxz
jmp
fs
and
jp
pop
call
stos
xor
(bad)
or
push
call
dec
das
or
pop
mov
movs
xchg
and
stos
or
jmp
xchg
sub
xchg
mov
inc
les
outs
cmp
sbb
fwait
stos
in
push
sbb
xor
sbb
or
adc
hlt
xor
jmp
nop
punpckhwd
int
dec
mov
inc
mov
les
pop
push
xor
stc
mov
(bad)
dec
aas
mov
jno
fwait
clc
cmps
sbb
mov
mov
add
xor
ds
push
frstor
test
fistp
push
fdiv
stos
ins
mov
pop
mov
addr16
jle
or
dec
or
in
retf
sar
xchg
arpl
pop
pushf
out
dec
ficom
and
arpl
repnz
adc
inc
fcmovnb
loope
idiv
repnz
jp
jmp
push
xchg
mov
push
clc
or
adc
pop
shl
pop
pop
jmp
xor
xchg
inc
mov
sub
xor
cld
jns
cmp
or
add
fbstp
add
hlt
mov
mov
xchg
ss
ins
adc
lahf
sti
cmp
or
shr
dec
lahf
(bad)
aam
lods
pop
sar
jmp
int3
daa
dec
lds
cwde
mov
mov
test
jne
xchg
jb
xor
cld
dec
xchg
cld
inc
jne
xlat
cwde
or
fld
cs
jnp
sub
ffree
std
add
mov
retf
and
push
je
sbb
sbb
shr
mov
xor
inc
sub
cmp
(bad)
jne
aas
pop
add
sbb
fst
and
jo
sub
fcomp
push
arpl
adc
scas
mov
jo
jb
sahf
shl
pop
xor
cmp
ret
imul
xor
clc
sub
ss
mov
mov
pop
dec
mov
sbb
outs
lods
inc
push
adc
and
xchg
call
mov
out
cmps
jg
sbb
and
pop
mov
pop
xchg
cmps
or
sbb
test
stc
mov
mov
adc
xor
push
lahf
ret
in
cmp
movs
sahf
aam
popa
sub
int3
cld
add
mov
pop
push
dec
push
add
and
scas
push
mov
ins
rol
cmp
div
mov
lahf
dec
aad
xchg
and
in
xor
mov
mov
cli
inc
nop
je
xor
mov
adc
ins
ret
jle
jmp
test
cmps
mov
mov
pop
push
ja
call
dec
popa
in
imul
test
cld
loopne
dec
cdq
shl
dec
inc
pop
outs
and
ins
cmp
js
xchg
push
xlat
lods
jge
sub
mov
push
inc
mov
mov
je
adc
push
cs
int
xlat
stc
rcr
and
aas
test
sbb
sub
jns
xor
clc
xchg
mov
sbb
or
rcl
mov
enter
push
lods
ins
retf
lea
inc
out
adc
push
pop
rol
test
addr16
(bad)
fild
jmp
in
jg
jg
ret
sbb
jns
outs
push
mov
packssdw
arpl
jmp
pop
add
push
inc
ins
add
or
retf
push
ret
and
inc
mov
push
cmp
and
pusha
imul
or
dec
sub
inc
or
or
jle
sub
inc
dec
inc
aas
imul
and
xlat
push
xchg
lods
pop
cmps
es
mov
push
mov
ds
sti
loopne
mov
gs
bound
out
ja
jns
push
jmp
and
sub
sahf
loopne
xor
adc
ins
xor
arpl
or
mov
rol
mov
hlt
mov
cmc
imul
cli
cmp
movd
aam
std
inc
mov
icebp
xlat
xor
div
xchg
test
call
mov
std
mov
aas
xchg
bound
sbb
fnsave
cli
aad
pop
xor
jmp
ins
mov
dec
pop
add
cmp
mov
and
mov
add
or
pop
pushf
mov
in
nop
inc
scas
cmp
inc
ins
xor
mov
or
sbb
fnstcw
pop
mov
test
sub
iret
lods
loop
adc
inc
xor
scas
add
xlat
pop
std
inc
outs
aam
or
ror
scas
pop
bound
in
add
inc
cs
imul
in
xchg
(bad)
adc
int
lea
pusha
out
jo
cld
mov
and
retf
dec
sbb
ret
xchg
out
(bad)
dec
jae
add
into
jae
push
push
push
arpl
ret
jl
push
sub
lock
neg
mov
and
or
cmp
outs
push
cmp
jecxz
fsub
xchg
gs
call
bound
rol
mov
adc
xor
int3
jg
clc
mov
dec
out
or
push
scas
adc
adc
leave
cs
inc
das
jge
sub
push
cdq
xor
push
and
mov
add
enter
repnz
pop
push
jo
jb
cmp
pop
out
fs
(bad)
lock
fnstenv
xchg
or
pop
mov
or
and
in
(bad)
jmp
jno
cli
sub
dec
(bad)
shr
fwait
mov
in
arpl
jns
pop
xchg
repz
sub
sti
int3
pop
jmp
push
add
push
aaa
jg
daa
data16
xor
fst
mov
stc
mov
inc
loopne
fwait
mov
mov
mov
xchg
add
push
loope
iret
sub
test
mov
add
stos
pushf
jbe
scas
adc
popf
jnp
cdq
cdq
lds
(bad)
pusha
push
inc
in
mov
sbb
f2xm1
mov
hlt
dec
hlt
mov
fadd
cmp
test
pop
pop
int
jns
add
pusha
mov
call
pop
lahf
in
mov
test
push
and
aad
inc
loope
in
or
adc
push
xor
(bad)
jl
ins
add
ja
ss
or
daa
jecxz
xchg
push
jmp
hlt
lahf
outs
and
test
sub
sub
cmp
pushf
das
outs
call
sbb
dec
cwde
push
sar
xor
mov
call
jae
jl
into
aad
pop
sahf
icebp
fiadd
mov
rcr
rcr
lea
pop
sbb
adc
mov
and
mov
jmp
jmp
stc
add
sub
xor
push
or
pop
(bad)
jp
popa
adc
dec
test
rol
popa
mov
sub
mov
ret
cs
mov
arpl
std
inc
aam
push
jmp
inc
adc
in
push
mov
(bad)
movs
jbe
mov
mov
push
pop
or
mov
outs
addr16
fsub
push
mov
ins
or
mov
inc
fisub
push
popa
sub
mov
outs
xchg
scas
xor
xlat
and
adc
jg
push
ss
add
cld
repnz
fs
mov
daa
push
jmp
enter
jmp
or
adc
pop
sbb
pop
push
xor
pop
retf
push
inc
shl
data16
dec
clc
shl
mov
xchg
sbb
shl
clc
cdq
pop
inc
xchg
jo
dec
cmp
clc
aam
inc
add
retf
jecxz
imul
xchg
sbb
dec
rcl
jge
repz
pop
push
add
mov
stos
cmps
cmc
jp
and
in
into
adc
jle
fs
jo
pop
cs
call
lahf
push
sub
jns
jmp
push
arpl
ss
and
sahf
fs
mov
aam
jne
lahf
and
mov
pop
jno
xor
aaa
xchg
fcmovnu
pop
cmc
fwait
adc
sub
and
bound
pop
clc
inc
jbe
cmps
popf
es
mov
movs
xchg
mov
push
enter
jbe
mov
push
add
retf
xchg
sbb
dec
dec
dec
inc
xor
fbld
sub
xchg
ins
add
add
fcmovu
add
dec
fcomp
test
mov
or
dec
js
aaa
iret
das
sub
pop
add
mov
jo
in
sbb
mov
out
mov
test
inc
push
mov
call
movs
cmp
loopne
les
dec
dec
ror
push
mov
and
call
or
test
pop
ins
sti
aam
sbb
jo
jge
sahf
sub
fwait
arpl
jmp
idiv
adc
adc
jmp
dec
retf
cmp
dec
pop
ror
nop
sub
lock
push
jno
int
clc
sub
clc
cdq
enter
push
add
xchg
mov
sub
int3
jl
scas
in
movs
sub
xchg
or
(bad)
xchg
inc
out
fadd
mov
das
aaa
lds
daa
bt
push
mov
or
pop
sub
aaa
mov
sbb
call
pushf
and
stc
lods
xor
push
or
dec
xor
mov
sbb
push
xchg
stos
mov
jmp
sub
and
add
icebp
push
pop
cmp
mov
sub
xchg
xchg
or
sti
pop
jbe
mov
mov
sti
pop
cs
add
scas
mov
push
popf
mov
push
cmps
rol
inc
fld
iret
fist
fidivr
pop
sbb
and
rcl
ficom
cdq
inc
adc
inc
mov
outs
sahf
sub
or
rol
pushf
cmps
add
xor
mov
push
test
xchg
push
xchg
xor
fbld
int3
pop
xchg
inc
repz
div
mov
(bad)
je
pop
mov
pop
aas
repnz
loopne
(bad)
(bad)
pop
jle
sub
inc
xchg
jae
pop
pusha
add
fs
sahf
ss
xor
cli
out
cmp
jl
add
retf
lock
pop
pop
sub
add
fs
aas
inc
xor
pusha
push
xchg
add
xor
pop
adc
add
sub
(bad)
dec
sub
repnz
jp
adc
lea
jnp
pop
inc
cli
pop
shl
int3
mov
xchg
fwait
jne
pop
cmp
pushf
aas
dec
adc
sahf
ficomp
int3
ins
daa
hlt
lea
repz
sub
mov
mov
rol
leave
dec
mov
inc
sbb
(bad)
retf
repz
push
pusha
mov
adc
sub
arpl
mov
sub
and
daa
not
mov
iret
loop
cmc
cmp
out
popf
add
mov
pop
into
mov
inc
lock
sub
out
popf
imul
imul
mov
mov
inc
adc
dec
out
sub
sbb
dec
das
loopne
popf
or
pop
cdq
xor
test
jecxz
daa
pop
imul
mov
jle
cld
sbb
mov
movs
add
pop
in
add
jmp
cmp
(bad)
das
sbb
or
jnp
add
call
pop
or
mov
and
jbe
inc
shr
fcmovnu
xchg
aaa
nop
fild
cmc
xor
add
xchg
add
fistp
sbb
pop
add
and
inc
cli
xchg
loop
jp
jle
mov
and
jmp
dec
rcr
lods
sub
hlt
xchg
mov
xchg
adc
mov
push
rcl
inc
shl
sub
ins
add
dec
sbb
xlat
jge
mov
mov
movs
pop
or
retf
fwait
rol
pop
sahf
cwde
in
rol
int
aad
mov
imul
nop
sub
cmp
dec
popa
sub
xchg
mov
das
inc
cmp
cld
retf
cmp
mov
test
ficom
pop
xchg
loope
pop
les
cmps
data16
adc
in
mov
out
std
cli
mov
add
xor
cmp
leave
pop
inc
xor
sti
xor
arpl
dec
inc
jo
cmp
xchg
push
aaa
ror
movs
push
mov
pop
out
mov
xor
or
or
fcmovbe
pop
mov
loopne
and
push
fnsave
gs
in
sti
int3
bound
stc
xchg
mov
push
movs
pop
shl
sub
enter
adc
ret
or
loopne
add
pop
adc
and
shl
mov
out
fild
dec
push
sbb
push
pop
sbb
ins
std
outs
rol
ds
cwde
mov
or
or
out
iret
dec
cmp
push
clc
fldenv
dec
cmp
jmp
fild
sbb
mov
(bad)
jmp
and
ins
dec
or
mov
xchg
fnsave
fs
dec
fidivr
ss
sar
jecxz
ins
dec
and
jnp
mov
dec
hlt
add
adc
jne
xor
das
fcomp
sti
dec
dec
sbb
push
scas
jae
adc
xchg
dec
jmp
ja
pop
xchg
arpl
xor
lods
push
sbb
inc
movs
inc
fadd
inc
fisttp
test
jle
xor
rol
ds
outs
pop
aas
shl
add
scas
cmovg
popf
and
or
scas
mov
dec
das
xor
mov
cwde
or
xchg
pop
jecxz
jne
pop
and
(bad)
daa
add
push
data16
sbb
inc
cmp
inc
sbb
loope
or
add
pop
je
inc
mov
push
or
in
sub
push
shr
cmp
in
(bad)
mov
or
mov
movs
fs
pop
sub
js
adc
int
mov
mov
adc
(bad)
enter
les
jle
xchg
nop
ins
sub
retf
call
in
mov
je
aad
add
vpsubw
(bad)
rol
jmp
fist
adc
xchg
push
jbe
dec
jg
inc
out
sbb
out
movs
mov
icebp
js
cmps
xchg
rcl
xchg
and
sub
daa
xor
and
movs
or
out
cmp
sub
mov
shr
neg
pop
inc
push
cdq
jmp
aaa
(bad)
cld
ins
sub
fdivr
jl
mov
or
pop
out
push
sub
inc
cmp
stos
ficomp
cmovo
pop
nop
in
cmp
(bad)
cld
test
dec
xor
lods
mov
cld
or
retf
repnz
jg
pop
gs
mov
adc
and
xchg
and
add
cmc
retf
sub
bound
fst
mov
sbb
push
test
in
xor
aam
dec
mov
test
leave
xchg
pop
imul
aad
or
push
and
mov
mov
jle
jmp
aam
sub
mov
xor
frstor
(bad)
in
arpl
mov
sub
cmp
lea
out
out
gs
call
das
scas
mov
imul
cwde
jbe
iret
data16
xchg
mov
mov
xor
cmp
icebp
mov
push
sub
cmp
out
cmp
fld
bound
adc
lds
sub
lods
and
addr16
push
(bad)
jge
sar
add
pop
jnp
adc
push
js
xchg
jmp
xchg
xchg
stos
push
xchg
ret
mov
jbe
lds
mov
or
das
in
mov
push
push
add
adc
mov
sbb
test
arpl
mov
jmp
xor
pop
dec
pop
push
lods
push
jne
dec
aad
dec
xlat
test
fsub
dec
jnp
mov
dec
fcom
ror
jge
jno
movs
sbb
jb
les
cmps
aas
push
fld
icebp
or
push
leave
xor
out
or
push
int3
dec
aaa
pop
repz
pushf
xor
mov
inc
inc
ret
psubw
cmp
dec
xor
dec
aas
nop
stc
xor
jmp
scas
xor
pop
stc
mov
cmp
test
(bad)
retf
fidiv
retf
sub
in
jmp
test
pushaw
sbb
das
loop
or
loope
xor
in
cli
test
mov
jae
dec
nop
or
fldl2t
pop
les
jle
rep
loop
lahf
loopne
clc
repz
addr16
adc
adc
call
(bad)
retf
sar
cmp
jl
aad
or
dec
dec
dec
lahf
jnp
adc
jns
inc
daa
pop
or
mov
and
xor
mov
mov
test
call
xchg
setl
stos
mov
outs
icebp
jmp
rcl
sbb
sbb
xor
stos
fdiv
jne
mov
add
fisttp
gs
xor
call
loope
imul
in
retf
in
(bad)
sti
lock
je
enter
push
cmp
ds
dec
sub
imul
sahf
dec
lods
sub
or
xor
cmp
xchg
mov
test
inc
popa
or
and
bound
xor
loope
add
test
add
outs
fldenv
js
jb
adc
mov
outs
xchg
add
mov
lea
cdq
repnz
pushf
mov
in
push
sbb
or
daa
xchg
inc
outs
jecxz
ret
add
loopne
(bad)
in
jle
(bad)
cmps
mov
mov
fisttp
call
das
imul
fmul
cmp
mov
mov
shl
ror
cwde
clc
dec
vmread
or
js
ja
scas
lods
out
or
sbb
popf
and
sub
sbb
fidivr
repz
cmp
lahf
movs
cmc
xchg
xchg
dec
add
and
js
sbb
stos
xor
push
and
dec
mov
xlat
sub
fwait
stos
and
pop
test
push
jne
mov
sbb
retf
hlt
inc
push
dec
jo
fdiv
mov
or
ds
dec
sbb
jo
mov
add
sbb
les
dec
(bad)
jle
xchg
adc
mov
hlt
inc
and
mov
mov
mov
push
daa
loope
pop
repnz
popf
and
retf
nop
ins
clc
sahf
stos
dec
push
push
leave
ror
mov
pop
sub
jmp
(bad)
pop
das
xor
mov
pushf
shl
aaa
int
fwait
(bad)
out
mov
jbe
mov
mov
and
adc
cmps
xchg
sti
test
sbb
push
xlat
in
sub
(bad)
xchg
adc
fwait
and
mov
sbb
lods
mov
pop
push
imul
test
mov
test
cmp
dec
call
and
clc
xchg
mov
jmp
out
cmp
mov
ret
push
xlat
shl
push
out
sub
in
jae
xchg
shl
out
add
cli
shl
sahf
ret
xor
iret
pusha
lods
jle
pop
out
jmp
push
mov
scas
mul
jmp
cmp
aad
inc
xor
add
sub
mov
in
adc
mov
retf
xchg
lds
jl
(bad)
test
push
inc
imul
repnz
inc
push
rcr
iret
xor
mov
xor
daa
adc
stos
and
ins
in
fabs
lods
repz
ja
in
(bad)
(bad)
nop
inc
test
fimul
push
cld
popf
imul
cld
fldcw
pushf
sbb
sbb
aas
test
lods
or
idiv
mov
data16
ror
stc
fs
inc
push
retf
cmp
adc
sbb
push
scas
cmps
data16
movs
in
and
cmp
arpl
punpcklwd
adc
fdivr
out
ret
add
xchg
mov
mov
mov
scas
push
inc
jg
mov
mov
hlt
or
or
sub
icebp
(bad)
shr
xchg
xor
enter
loop
jge
mov
into
sbb
(bad)
rol
sbb
daa
sub
int3
cmp
mov
mov
pop
scas
sub
jp
repz
fsubr
icebp
call
xchg
jne
aam
jbe
pop
jmp
and
add
adc
xchg
fbld
or
mov
cmp
add
cmps
sahf
fwait
jne
sbb
outs
sbb
addr16
lds
es
mov
or
cld
je
xchg
pop
xor
xchg
xor
jg
sahf
cmp
imul
push
test
mov
push
pop
xchg
ficom
ficomp
or
push
mov
movs
xchg
or
adc
sbb
xchg
xor
(bad)
aam
pop
sti
push
retf
xchg
push
mov
xchg
mov
lods
xchg
pop
inc
cmc
xor
data16
mov
mov
int
adc
pop
sbb
jle
inc
es
or
push
test
(bad)
jecxz
lods
sbb
mov
rcr
mov
stc
nop
jle
adc
xor
jb
xchg
popf
sbb
inc
mov
push
iret
fisubr
outs
inc
push
rcr
sahf
cld
xor
inc
loop
inc
push
mov
fimul
das
lahf
data16
mov
aad
and
call
mov
lock
mov
inc
pop
sub
test
sbb
mov
pop
lods
cmps
mov
scas
add
adc
ret
rol
xchg
sbb
aad
ret
loope
repz
jle
add
push
stos
push
mov
pop
inc
cmp
mov
sahf
push
push
(bad)
cmps
xchg
outs
add
add
daa
pop
or
push
lods
int3
int
jp
push
add
inc
xchg
aas
lock
shl
sub
outs
mov
ss
and
cmp
dec
in
fstp
pop
mov
rcr
mov
mov
or
mov
mov
int
dec
cwde
sbb
lahf
shl
xchg
ror
imul
int
(bad)
fisubr
push
in
das
jbe
test
push
retf
in
test
cmps
test
xchg
adc
(bad)
xor
xor
mov
ret
sub
jne
jbe
test
sbb
pop
jmp
shl
sbb
inc
xor
sbb
dec
cli
aaa
ss
mov
xlat
adc
stc
jmp
mov
jo
jp
cmp
or
inc
scas
mov
call
mov
dec
ficom
or
mov
mov
cmp
jb
inc
or
dec
adc
and
mov
mov
xor
xchg
lock
test
sub
mov
mov
loop
xor
inc
xor
sbb
movs
xchg
cdq
adc
push
(bad)
jno
mov
(bad)
pushf
mov
popf
stc
mov
adc
adc
loopne
imul
lds
jne
pop
enter
test
or
pop
xor
icebp
jno
xor
xchg
xor
mov
addr16
mul
jne
xor
pop
leave
mov
popa
mov
adc
xchg
pusha
inc
or
sub
icebp
scas
xor
and
lds
xchg
mov
fisub
std
mov
xor
jne
cmc
add
(bad)
push
movs
imul
or
adc
adc
sbb
lahf
scas
lahf
les
sti
vpsrlq
int
out
movs
test
push
mov
jge
addr16
sti
add
out
jno
movs
sub
and
pop
mov
add
mov
push
cmp
xor
add
ret
or
cli
test
stos
push
xlat
pop
dec
add
and
test
mov
out
nop
jno
and
(bad)
mov
pop
sbb
test
sbb
add
and
dec
int3
gs
jo
sti
cmp
or
mov
lahf
cli
fmul
aam
sbb
xlat
mov
ss
dec
mov
test
pushf
gs
imul
push
xchg
xlat
xchg
(bad)
cmp
int
jmp
pop
jl
adc
xchg
mov
pop
jns
(bad)
sbb
cmps
repz
movs
mov
dec
inc
or
daa
xchg
cmp
std
je
push
test
cdq
inc
ret
stos
add
loopne
mov
dec
add
icebp
mov
adc
cdq
daa
jmp
(bad)
fidiv
retf
(bad)
fcmovnu
push
test
mov
xchg
mov
adc
icebp
sub
cmp
mov
sbb
stos
mov
test
xor
adc
pushf
fnsave
rcl
sti
aaa
fstp
jnp
sub
js
int3
fdiv
adc
dec
cmp
jecxz
cmp
adc
mov
(bad)
sbb
data16
out
cmp
fs
test
inc
xor
popf
test
lods
or
mov
inc
aas
cld
xor
test
push
aaa
sbb
xchg
addr16
mov
and
fcom
imul
jge
xchg
xchg
jp
inc
push
jns
loop
xor
mov
xor
push
mov
cmp
or
and
rcl
sahf
adc
cmp
fdivr
pop
mov
push
jp
jns
pop
sbb
xor
cmps
es
not
cmps
daa
pop
(bad)
pop
or
movs
jo
mov
jl
sbb
mov
inc
rcl
ret
cmp
push
ins
mov
adc
xchg
mov
push
inc
adc
in
jbe
out
cmps
sahf
or
sti
mov
dec
mov
enter
push
mov
cwde
cmps
mov
leave
and
pop
das
or
cmc
sub
xchg
gs
mov
xor
cli
out
mov
jge
cmp
and
adc
mov
xor
fs
mov
mov
popf
fstp
fsub
lods
test
inc
iret
ins
ror
and
scas
and
stos
and
ins
cmp
mov
mov
(bad)
rcr
pop
jl
mov
push
stos
pop
lods
adc
push
add
pop
(bad)
pop
dec
out
adc
pop
add
mov
xlat
outs
xor
lock
inc
xor
cmps
mov
js
and
pop
test
lods
ss
sahf
mov
arpl
and
rcr
cli
adc
mov
sub
mov
fs
mov
mov
mov
cmp
mov
bnd
aas
pop
es
cwde
out
mov
fwait
ins
mov
and
aas
adc
ror
sbb
xor
pop
std
add
ins
inc
(bad)
cld
fdiv
pusha
xor
test
jle
out
test
and
rcr
in
dec
pmaxub
jne
push
mov
xor
mov
lock
jns
out
and
sahf
std
or
inc
push
xchg
pusha
mov
(bad)
mov
jo
jmp
sub
ret
ins
rcr
ficom
pop
xchg
lock
pop
js
mov
je
adc
rol
bswap
push
(bad)
jge
sbb
mov
rol
push
clc
sub
addr16
sbb
sub
loope
pop
push
jno
ficom
or
into
int
adc
or
mov
inc
sub
mov
or
stos
xchg
call
pop
mov
and
pushf
xchg
stc
add
inc
push
loope
loope
enter
jl
mov
jmp
sub
mov
loop
lods
cmps
test
sub
shr
shr
sbb
fs
pop
jmp
cld
add
jns
mov
sub
setge
das
mov
les
ja
(bad)
mov
or
ds
mov
pop
(bad)
retf
sub
dec
or
mov
stos
xchg
or
stos
je
pop
xchg
retf
add
inc
call
les
dec
adc
cmps
inc
mov
fidivr
push
test
test
mov
inc
sbb
jp
push
inc
mov
add
ins
xlat
xchg
mov
(bad)
stc
inc
gs
push
jecxz
out
cwde
jnp
fld
mov
dec
lahf
dec
adc
fmul
push
mov
push
stc
popa
push
(bad)
pusha
inc
iret
div
ins
cmc
ret
jo
outs
jae
nop
out
mov
cmp
cdq
lock
int
movs
cwde
pop
fstp
enter
test
rcr
sub
and
dec
pusha
mov
pop
or
jge
or
inc
inc
mov
in
jns
mov
(bad)
pop
icebp
xchg
inc
mov
sub
and
in
adc
jae
push
cdq
imul
(bad)
(bad)
int3
pop
icebp
fcom
mov
mov
enter
push
(bad)
and
add
fdiv
clc
mov
add
lock
clc
imul
mov
hlt
out
cdq
ds
mov
out
and
pop
add
xor
push
xchg
cmp
loopne
mov
mov
mov
jns
cs
sub
loop
cmp
cmp
jnp
sbb
in
loope
mov
fmulp
xchg
pop
dec
xchg
je
pusha
call
test
stos
xchg
shr
std
add
mov
jb
rcl
push
add
or
jmp
push
test
jg
je
jnp
retf
mov
(bad)
movlps
dec
xor
pop
test
pop
jle
cmp
test
dec
nop
xchg
sahf
lea
push
xchg
repnz
pop
repnz
mov
(bad)
xchg
ins
(bad)
rol
stos
test
sbb
cmp
mov
xor
dec
mov
pop
out
aaa
(bad)
pop
mov
adc
movs
sbb
shr
mov
sub
cdq
cmovle
cmps
jmp
cmp
jae
lods
aas
mov
outs
aaa
js
cwde
neg
je
add
dec
sub
das
bound
cmps
outs
les
pop
dec
jmp
jmp
leave
mov
and
sbb
pushf
mov
mov
mov
xor
push
inc
jecxz
push
daa
fldcw
(bad)
mov
and
stos
aas
xchg
jne
dec
sar
cwde
iret
mov
and
mul
cmp
(bad)
fcomp
inc
retf
adc
call
cld
(bad)
fistp
sar
loop
cmp
push
mov
inc
push
aas
xchg
iret
cdq
inc
fsubr
jbe
dec
stc
xchg
mov
push
ret
jmp
xchg
out
and
mov
into
jns
xor
lea
stos
mov
ins
push
mov
fsubp
sub
mov
xlat
xor
aas
ficom
data16
mov
adc
fild
lods
and
rcr
or
push
push
sbb
fsubp
xchg
mov
add
sbb
iret
and
lods
loopne
mov
in
dec
inc
sbb
shr
adc
sahf
gs
sbb
xor
push
lock
out
add
mov
outs
mov
pop
sar
sahf
add
add
js
lea
inc
or
iret
iret
jbe
cmc
push
addr16
aas
mov
push
jns
or
push
mov
in
into
rcl
adc
aas
call
cmps
xchg
ds
in
dec
int3
jns
and
pusha
leave
xchg
es
jl
hlt
call
pop
cmp
(bad)
rcr
cmps
out
div
adc
fldz
xchg
das
push
dec
inc
ret
sub
int
or
out
call
sbb
stos
push
leave
jge
lahf
outs
(bad)
cmps
push
(bad)
fild
xchg
mov
xchg
dec
mov
clc
push
sub
jg
mov
mov
inc
sub
loope
adc
sub
scas
xchg
ret
repnz
jo
sbb
mov
xchg
daa
fs
pop
dec
xchg
and
sub
jecxz
in
retf
dec
enter
jmp
scas
or
scas
mov
fiadd
shl
fcmovu
inc
pop
pusha
or
mov
or
sbb
jl
mov
push
add
les
push
stc
xchg
daa
ret
movs
adc
int3
push
call
stc
aaa
out
cmp
cmps
sub
mov
dec
daa
mov
into
ss
add
adc
scas
outs
mov
dec
ins
inc
repz
loop
and
mov
cmp
add
add
xlat
call
mov
mov
mov
add
sar
sbb
ror
mov
and
sub
sub
into
cmp
push
xlat
repz
shl
mov
cmp
inc
adc
mov
repz
fsub
xchg
pop
aam
add
call
fdivr
xor
repz
jle
dec
mov
imul
pop
fcom
sti
push
cmp
jl
enter
mov
mov
imul
mov
sbb
(bad)
out
pusha
jge
push
nop
inc
xchg
xchg
adc
cmp
in
xchg
ror
add
push
xchg
adc
xor
push
dec
adc
bound
or
clc
lock
dec
or
inc
mov
pop
mov
add
cli
jmp
fldenv
ins
out
in
clc
mov
cmp
sbb
mov
mov
int3
fbld
daa
and
pop
inc
popf
jecxz
lods
mov
dec
(bad)
dec
aas
hlt
bound
mov
and
push
aas
hlt
sub
ret
sbb
dec
inc
or
idiv
push
fbld
sub
lods
daa
push
jmp
and
ins
jno
dec
fild
xlat
test
xchg
adc
aas
pop
ret
pop
inc
idiv
mov
mov
xor
add
arpl
sub
(bad)
aam
jecxz
jmp
in
xor
shl
mov
pop
cmp
sbb
mov
and
movs
outs
gs
pop
cmps
sbb
jp
enter
(bad)
fstp
cmps
lahf
inc
mov
cmp
stc
shl
mov
movs
xor
sbb
popa
fistp
lods
mov
and
mov
or
movs
push
fstp
mov
loop
movs
shr
add
(bad)
add
mov
inc
mov
jne
inc
(bad)
xchg
aad
movs
test
test
cmp
call
xchg
jnp
aaa
jl
ins
cmp
add
fistp
mov
cli
dec
mov
sbb
sub
push
push
cmp
mov
push
aam
push
cld
jbe
xor
cmps
inc
adc
sub
(bad)
call
cmp
mov
xchg
sub
adc
mov
iret
(bad)
out
inc
ret
add
(bad)
mov
pop
fisub
fwait
repnz
dec
test
jp
cmp
mov
jno
arpl
adc
cmp
or
mov
sbb
mov
inc
xchg
inc
daa
leave
sub
jp
out
stc
cmp
adc
mov
xor
xchg
cmp
pop
sub
jae
rcl
adc
cmps
hlt
stos
jae
cld
sahf
jno
jne
cmp
cmps
inc
call
shl
movlps
jbe
sub
out
xchg
test
and
pop
sar
or
jo
hlt
dec
sbb
cmp
mov
dec
dec
shr
clc
push
adc
aaa
out
or
arpl
gs
pop
sti
mov
xchg
out
add
daa
inc
sahf
mov
pop
push
mov
xor
or
push
mov
jmp
ret
test
out
out
aam
pop
xor
fdiv
lods
cmc
xlat
push
sub
inc
es
push
cmp
jmp
retf
aad
push
push
sub
and
xlat
pop
xlat
aad
mov
jp
fnstcw
cmp
icebp
push
push
pop
adc
and
ror
and
bound
aad
sbb
add
stos
xlat
jl
xor
cmc
adc
fwait
push
aam
add
jecxz
mov
test
sbb
sbb
or
stc
mov
aas
fsubr
fucomi
in
push
(bad)
jmp
inc
lahf
cmp
ds
cld
es
push
dec
mov
movs
test
push
(bad)
cmp
aad
sbb
outs
aas
adc
add
cmp
push
mov
jecxz
jge
adc
sub
or
push
clc
bound
movs
or
fld
ins
cld
int
mov
push
dec
or
ret
loop
jmp
cs
movs
mov
mov
mov
and
add
inc
push
pop
xor
aam
sub
test
adc
sub
rcl
jo
test
pop
pop
pop
push
sub
test
imul
jo
inc
xor
imul
stos
in
mov
or
test
pop
gs
xchg
enter
cmp
jb
mov
ret
xchg
adc
jb
push
ficom
stc
bound
cs
rol
sub
inc
sbb
jg
add
std
popf
sbb
add
sub
mov
add
mov
inc
idiv
sbb
add
clc
pushf
iret
xchg
cmps
mov
jge
xchg
xchg
shl
push
imul
xchg
icebp
mov
sti
stos
mov
xor
push
lods
js
pop
inc
fstp
dec
xor
cmc
adc
loope
mov
pushf
adc
mov
fmul
mov
fsubr
hlt
or
sti
fwait
cli
mov
cmp
add
out
cld
popf
addr16
jecxz
sub
mov
cmp
push
scas
mov
aaa
psubusb
(bad)
sahf
mov
push
inc
imul
mov
pusha
push
inc
call
fs
sbb
ins
dec
jno
mov
jo
test
inc
sbb
push
add
fidivr
ret
mov
js
xor
mov
js
mov
jle
xor
test
(bad)
sub
pushf
or
sbb
shl
jmp
lods
push
fmul
jbe
fst
cmc
push
das
addr16
(bad)
movs
rcl
xchg
fnsave
stc
cld
imul
iret
sahf
xchg
mov
das
loope
and
call
lds
cmp
mov
fmul
jb
or
push
hlt
je
sub
int3
sar
jnp
jb
xor
push
pushf
scas
mov
cmps
retf
mov
push
das
test
pop
mov
xor
and
mov
out
ss
jecxz
out
sbb
cmp
add
push
jg
rol
inc
xchg
xchg
pop
fsub
hlt
mov
arpl
pop
sub
test
fisubr
push
data16
in
add
sbb
jbe
xchg
jmp
nop
movs
nop
rcl
mov
pop
rcr
test
push
sub
fcmovne
sbb
inc
xadd
or
es
and
mov
gs
cdq
mov
sti
pop
pop
pusha
cld
adc
mov
inc
or
sbb
mov
push
xchg
xchg
(bad)
pop
mov
sbb
xlat
ins
mov
mov
xchg
ret
mov
mov
and
addr16
inc
inc
or
fisttp
add
pop
sbb
bound
pop
mov
fs
mov
adc
jp
mov
mov
push
lods
mov
(bad)
scas
add
clc
fmul
dec
dec
mov
sub
adc
add
push
int
cmc
sub
mov
inc
xor
jne
stos
adc
jnp
xor
imul
retf
ds
adc
push
xor
outs
xchg
cld
mov
les
pop
and
or
repz
dec
cwde
std
push
mov
stos
jle
call
mov
jb
inc
dec
fst
aas
add
inc
adc
int
xor
adc
mov
sub
lds
pop
mov
je
ja
jae
jnp
rol
aaa
mov
stos
mov
adc
or
imul
mov
pop
aas
sbb
leave
add
cli
movs
and
jae
fld
je
daa
pop
mov
jmp
jecxz
test
xchg
mov
adc
mov
ror
icebp
fcmovnb
hlt
nop
mov
mov
push
push
inc
xchg
sbb
ffreep
jg
fstp
adc
sbb
ins
ret
inc
js
mov
inc
xor
xor
pushf
pop
push
dec
sub
sbb
sti
cmps
xchg
and
push
mov
nop
sub
inc
xchg
lds
lock
cmp
adc
add
stc
fdiv
rol
push
jno
cld
outs
jne
or
sbb
sub
inc
sub
aad
movs
imul
rcr
ins
in
xlat
jo
int
in
add
mov
bound
pop
aas
sahf
rcl
and
push
fadd
and
mov
mov
test
nop
and
cli
(bad)
int3
pop
addr16
jae
mov
push
aas
pop
retf
cld
jmp
nop
shl
dec
push
jne
arpl
xlat
fcom
shr
pop
aad
sub
in
loope
ds
jo
sbb
ret
sub
jnp
(bad)
sbb
retf
(bad)
adc
pop
pop
xor
lock
ret
mov
sbb
aas
fisttp
sbb
inc
inc
jbe
neg
mov
dec
sub
inc
xor
push
fld
fninit
push
push
xchg
pop
fbld
rcl
add
mov
jb
xchg
clc
dec
cdq
and
arpl
mov
pop
dec
mov
add
call
pop
mov
fs
mov
shr
ret
or
mov
and
and
clc
cmp
dec
jnp
out
test
mov
mov
pusha
mov
pop
inc
or
inc
stos
dec
rol
daa
xor
jbe
push
mov
cmp
xchg
cmp
inc
cmp
movs
retf
sub
popa
outs
addr16
mov
cmovo
out
das
add
loopne
cld
xlat
push
xor
xor
cwde
inc
or
mov
jg
pop
aas
push
dec
mov
pop
xchg
pop
mov
movs
neg
mov
imul
adc
fnstenv
outs
fnstenv
les
ror
xor
or
pusha
dec
xchg
repz
rol
and
and
or
shl
inc
ss
test
imul
mov
sub
xor
sub
jnp
cmp
cdq
pop
jecxz
fs
in
pop
and
jmp
mov
icebp
cmp
loop
movs
(bad)
or
je
mov
cli
sub
repz
movs
imul
xchg
sub
add
xchg
imul
sbb
jo
and
xchg
emms
push
add
and
mov
retf
jp
in
hlt
mov
into
fisubr
xor
push
shl
push
outs
xchg
pop
xchg
add
addr16
mov
mov
lea
dec
pop
fmul
sbb
xchg
push
fwait
sbb
aas
popa
mov
sub
call
cmp
hlt
call
xor
ficom
pop
nop
jns
icebp
pop
mov
inc
in
push
dec
test
dec
or
cld
aad
jecxz
popa
jmp
test
xchg
int
and
mov
xchg
xor
or
sar
mov
xor
mov
add
cmps
imul
inc
cmps
imul
das
mov
movs
xchg
inc
mov
and
fadd
adc
xchg
sub
jp
dec
mov
dec
clc
cld
pop
jecxz
aaa
adc
pop
mov
cld
sub
lds
fadd
mov
pusha
(bad)
std
dec
into
inc
jmp
xchg
movs
pop
pop
jbe
pop
shl
rcr
jb
jbe
mov
sbb
pushf
push
sahf
imul
xor
ror
jl
push
pop
push
add
xchg
mov
loop
stc
and
mov
pushf
pop
mov
or
or
call
mov
inc
sbb
jge
jp
pop
sbb
(bad)
sub
fsubrp
mov
fld
inc
jne
or
sahf
xchg
adc
mov
rcr
test
stc
adc
shl
jl
mov
fld
ficom
js
fst
fidivr
lds
sub
ja
loopne
movs
fcmove
jnp
popf
mov
enter
das
pop
cwde
cdq
sbb
jecxz
in
popa
dec
call
iret
fimul
in
scas
mov
push
xchg
pop
and
leave
idiv
mov
test
ins
pop
enter
inc
adc
je
or
jge
cdq
dec
sub
mul
outs
in
inc
sbb
int3
(bad)
xchg
stc
pop
dec
rcr
in
sbb
cli
ins
pop
mov
sar
out
cwde
jg
popa
(bad)
ins
into
or
sbb
mov
cld
mov
test
adc
adc
push
loopne
jae
adc
jno
jno
aas
sbb
loopne
mov
push
xor
jns
mov
call
idiv
jl
mov
adc
mov
xchg
adc
adc
(bad)
imul
mov
repnz
and
test
adc
ss
push
out
xchg
adc
out
or
pop
dec
iret
ins
or
lods
stos
rol
xchg
or
adc
mov
ins
or
cmp
ja
mov
mov
push
test
xchg
call
or
cmp
push
adc
test
stos
push
test
jbe
dec
mov
data16
ret
cmps
daa
imul
fnstsw
stos
jno
fs
jno
out
pop
iret
sbb
out
in
(bad)
pop
xor
adc
jae
inc
and
push
pop
loopne
ins
(bad)
cdq
popa
sub
mov
mov
jae
add
mov
aam
mov
jge
fistp
push
pop
sub
mov
ss
sbb
mov
inc
push
add
push
ds
arpl
or
add
mov
xor
mov
jge
inc
inc
mov
addr16
cmps
and
pop
call
mov
cmp
adc
cs
add
je
xor
jmp
cli
lock
stos
xchg
leave
int3
aas
jnp
pop
pop
pop
dec
cwde
cmp
icebp
lods
fist
shr
ror
repnz
inc
fisub
shl
mov
rol
mov
into
data16
out
out
mov
jle
enter
lahf
dec
mov
pop
add
int
pop
sub
fistp
jmp
jno
and
or
(bad)
out
jecxz
les
std
dec
xchg
daa
sub
(bad)
rol
das
lods
retf
jp
lahf
ret
xor
cmp
xor
mov
js
mov
xor
jmp
test
mov
push
call
mov
int3
dec
push
out
push
jb
inc
mov
inc
mov
jmp
jle
ins
aas
mov
cmps
mov
call
xchg
jns
xchg
enter
pop
mov
out
fdiv
sbb
or
adc
mov
adc
push
std
outs
into
and
xchg
dec
sub
inc
aam
sub
dec
scas
push
nop
shr
jbe
or
js
out
jo
adc
test
and
ins
cwde
jne
pop
rcl
ja
sbb
sbb
and
loope
mov
dec
sub
jne
add
xor
lods
lahf
nop
call
xchg
aam
and
jecxz
frstor
inc
push
outs
fidivr
dec
lahf
lods
sub
jle
and
mov
xor
jbe
and
dec
push
popa
cmc
or
cmp
arpl
les
sub
popa
mov
scas
cmp
mov
idiv
test
lods
mov
mov
mov
into
les
inc
jns
pop
or
ins
jae
push
das
loop
gs
jnp
in
fmulp
out
push
mov
sub
add
sub
mov
rol
or
rol
or
sub
xchg
add
rol
jns
and
jbe
lds
pop
adc
pop
sbb
xor
and
int3
jns
xchg
xchg
sub
cmps
mov
add
cmp
pusha
outs
mov
sbb
call
inc
iret
rol
arpl
dec
in
and
sub
int3
mov
jnp
xchg
pop
cmp
and
repz
aam
ins
cmp
popf
int3
out
retf
dec
int3
stc
sbb
clc
(bad)
(bad)
out
jp
inc
(bad)
enter
loopne
data16
dec
push
cs
inc
lahf
pop
cmp
out
cwde
sahf
out
les
inc
push
nop
jle
lods
push
xchg
add
call
imul
pusha
cmp
scas
sbb
jmp
inc
daa
inc
xchg
shl
popa
jbe
adc
mov
cld
mov
adc
outs
cmps
inc
xor
or
nop
popf
inc
dec
and
fstp
ret
cmp
cld
ja
jmp
cld
cwde
or
leave
sbb
mov
sti
or
fist
nop
mov
push
add
inc
(bad)
jo
add
jb
sub
rol
pop
and
icebp
fild
je
test
xchg
loop
cmp
add
imul
lds
idiv
clc
sbb
sbb
jge
retf
sub
pop
mov
mov
push
sbb
in
sti
xchg
inc
sgdtd
sbb
dec
(bad)
mov
or
cmps
fimul
aad
jle
mov
repz
xor
mov
into
jl
(bad)
xchg
and
push
inc
add
loope
sahf
pop
jg
sahf
xchg
daa
mov
iret
xchg
daa
lods
push
mul
dec
dec
test
dec
aaa
inc
jl
sbb
retf
loopne
clc
cmp
in
stc
push
xor
leave
js
push
fwait
jno
retf
cmps
ds
icebp
and
loope
inc
out
neg
mov
dec
sub
sti
jmp
call
and
mov
outs
std
jns
mov
test
inc
xchg
xchg
xchg
push
(bad)
cwde
xchg
es
pop
and
inc
mov
movs
mov
cmp
and
mov
aas
mov
mov
mov
pop
call
and
push
je
enter
sub
movs
test
inc
mov
xchg
sbb
xchg
lds
mov
mov
xor
lock
or
fiadd
or
addr16
xor
jg
shl
push
sbb
ficom
mov
or
arpl
push
in
sub
and
dec
and
adc
fstp
ja
out
cs
cld
idiv
mov
scas
xor
cmp
mov
inc
xor
mov
mov
cmp
scas
xchg
add
push
jns
stos
retf
int3
(bad)
cmc
xor
jno
xchg
jecxz
and
xor
outs
call
mov
sti
stos
pop
clc
mov
jl
lea
shl
adc
xchg
push
call
loope
adc
outs
xchg
fst
(bad)
in
fs
les
out
retf
arpl
mov
pusha
mov
out
or
fcmove
jns
cmc
fwait
out
cmp
sbb
pop
stc
out
push
xor
test
pop
retf
add
sub
jno
mov
ds
adc
jmp
std
push
(bad)
shr
enter
mov
into
mov
ror
pop
fcmovu
popa
js
mov
lock
dec
xor
mov
add
pop
test
pop
cmp
aas
mov
cmp
cld
jbe
scas
and
imul
xor
push
mov
test
lds
push
pushw
mov
xchg
xchg
popf
cld
(bad)
push
adc
inc
xchg
pop
dec
aam
outs
mov
sbb
mov
inc
jg
jmp
sahf
pop
xchg
xchg
ror
cmps
loopne
cmps
int
cwde
cmp
imul
pushf
out
mov
xchg
repnz
xchg
mov
jg
shl
je
push
cs
adc
lea
pop
push
pusha
movs
sbb
call
shl
mov
retf
or
clc
push
imul
cmp
xchg
scas
cmp
js
adc
aas
ret
cwde
bound
push
and
push
(bad)
movs
xor
mov
outs
cld
scas
and
xchg
fstp
enter
mov
jbe
(bad)
icebp
and
adc
and
push
xchg
sahf
fmul
and
push
pop
or
jne
retf
sahf
aad
sbb
add
xchg
cmp
or
into
(bad)
arpl
ds
mov
je
sar
aaa
faddp
repz
pop
mov
popa
jne
cmp
jge
adc
push
mov
fwait
mov
xchg
mov
inc
jo
hlt
test
in
jge
or
inc
mov
mov
test
lods
stos
and
add
xlat
and
mov
out
dec
stc
in
in
loop
add
pop
sbb
dec
not
or
jp
sub
and
and
add
das
and
aas
aam
cmp
xchg
jns
jg
into
clc
rol
sub
jne
mov
pop
dec
adc
push
jo
jo
imul
std
pop
stc
sbb
sub
jmp
icebp
clc
adc
inc
jnp
aas
das
jmp
mov
adc
out
hlt
and
fdivr
pop
mov
mov
or
setle
jbe
jne
xchg
mov
cmp
and
pop
sbb
mov
imul
mov
push
mov
jmp
cmp
sbb
ret
ffree
jl
or
in
ins
in
cmp
xor
and
sbb
cmp
push
addr16
cmp
(bad)
sbb
jnp
jmp
pushf
mov
dec
jo
pop
mov
inc
push
cmp
push
fsub
retf
in
(bad)
lahf
push
outs
lahf
mov
add
sbb
mov
lods
popa
das
mov
(bad)
jae
xor
push
popa
bound
xor
das
dec
mov
fld
xor
push
ret
sahf
jne
imul
push
outs
aad
or
jno
loop
dec
xlat
xchg
in
movs
hlt
inc
push
fisttp
imul
pop
jbe
out
and
pop
mov
mov
into
xchg
in
push
cmp
xchg
movzx
mov
aam
cmc
ds
hlt
jmp
mov
stos
adc
pop
aaa
call
pusha
mov
adc
xchg
add
jne
nop
add
add
xlat
sbb
fdiv
inc
imul
repnz
xor
iret
shl
(bad)
xchg
xchg
call
pop
stos
stos
pop
mov
inc
xchg
jg
fnstsw
cmp
mov
and
sbb
ins
idiv
cmp
jle
stc
or
pop
loop
out
sbb
mov
mov
jle
push
es
jns
mov
jmp
xor
ror
es
jecxz
dec
outs
mov
adc
inc
push
out
add
daa
xchg
add
in
sub
push
pop
vminss
cmps
loopne
sub
loope
shr
fdivr
arpl
or
push
push
gs
add
or
icebp
in
xchg
xor
cld
sbb
ror
popa
loope
or
jg
lock
mov
pop
add
ret
mov
imul
leave
dec
fucom
mov
ds
and
and
scas
(bad)
sub
cmp
cli
out
or
dec
shl
(bad)
mul
cld
jne
lods
bound
rcr
cmp
shr
sbb
and
mov
mov
mov
dec
push
(bad)
ss
fisttp
xchg
ret
popf
lds
or
add
in
call
psllq
gs
ret
push
xchg
std
ss
or
jo
aas
icebp
or
jmp
sbb
jle
fbstp
or
adc
or
test
dec
(bad)
xchg
ins
sbb
mov
pop
mov
mov
fst
xchg
fwait
inc
fst
mov
loop
dec
mov
push
dec
jge
call
jb
retf
out
out
in
push
jo
fst
push
sub
inc
mov
jae
and
nop
les
adc
dec
(bad)
inc
mov
jge
mov
pop
cld
pusha
cmp
sub
inc
les
add
mov
sub
shl
sub
push
adc
out
mov
dec
out
cmps
in
add
mov
cli
pop
and
cmp
mov
adc
test
scas
out
ret
cmp
and
pop
xchg
jbe
clc
push
leave
ret
inc
bound
inc
sahf
or
pop
loopne
sub
inc
loope
xor
pop
push
sub
add
ins
dec
pop
push
es
or
push
push
shl
addr16
out
jns
smsw
bound
lods
dec
add
adc
mov
sub
push
push
clc
mov
lahf
(bad)
aam
je
stos
add
test
or
mov
or
clc
xchg
cmp
(bad)
push
xor
cmp
sti
out
retf
inc
mov
inc
dec
loopne
mov
inc
push
int
pop
stc
mov
inc
jp
addr16
pop
lea
mov
lods
in
fs
dec
fs
imul
jae
jge
repz
pop
mov
mov
dec
mov
sub
ja
jae
adc
xchg
out
sbb
pop
out
or
les
shl
and
sub
or
xor
or
ret
jbe
aam
(bad)
mov
push
ror
sti
fisubr
jo
sbb
cwde
nop
js
jo
(bad)
pop
lock
sub
nop
scas
jns
enter
and
repnz
ins
sub
cmp
add
mov
popa
dec
fistp
(bad)
mov
xor
scas
inc
adc
sub
jl
ror
jnp
call
shl
pop
jnp
sahf
push
retf
cmp
gs
cmc
out
not
call
imul
sub
data16
or
pop
popf
mov
dec
mov
out
rcr
cli
stc
adc
adc
push
fdiv
sbb
inc
pop
or
cwde
xchg
mov
stc
mov
fld
sub
jbe
std
sar
scas
pop
add
test
shr
xchg
enter
jbe
inc
retf
fistp
icebp
mov
sub
sub
out
test
leave
mov
jecxz
xor
shr
lods
and
and
retf
shr
cld
dec
(bad)
push
push
es
pop
jae
cmp
push
neg
movs
or
adc
mov
pop
(bad)
and
xor
xchg
mov
gs
adc
adc
inc
jmp
or
xchg
dec
jl
xchg
mov
push
mov
mov
fild
or
jle
out
pushf
out
or
cdq
sbb
loop
ret
cs
retf
xor
cmps
and
pusha
xchg
loope
adc
mov
jmp
(bad)
ficomp
push
push
call
mov
fistp
loop
mov
loope
jle
sahf
push
repnz
xor
inc
aad
test
xor
jnp
ds
adc
cmc
test
mov
fcmovbe
vaddsubps
notrack
dec
sahf
cs
mov
mov
je
xchg
adc
push
aam
pop
(bad)
sub
adc
(bad)
std
and
sete
lods
cmp
fild
icebp
push
dec
add
xchg
push
xchg
aam
xlat
aaa
mov
movs
xchg
and
lea
scas
test
dec
ret
les
(bad)
loopne
movlps
xchg
jp
mov
es
in
std
push
and
adc
retf
(bad)
fisub
in
hlt
imul
rol
push
push
in
ins
push
adc
cmps
push
and
dec
jecxz
lea
rdmsr
js
iret
rcl
lods
mov
jns
enter
out
lahf
fadd
std
and
sbb
jp
(bad)
in
ja
pop
ret
mov
sub
mov
scas
sbb
xor
bound
ds
sbb
xor
inc
popf
jmp
xchg
sbb
lods
mov
or
pop
ss
xchg
dec
dec
push
ins
dec
fldenv
mov
leave
ss
push
sbb
enter
clc
mov
stos
xchg
mov
scas
sbb
inc
xor
movs
or
icebp
dec
xchg
cmp
jo
loope
mov
cmp
jg
arpl
jbe
stos
dec
jle
stc
into
sub
aam
cmp
cld
sbb
sbb
movs
cs
push
inc
test
xchg
pop
dec
adc
cmps
adc
xchg
dec
and
(bad)
fisttp
mov
jmp
mov
hlt
repz
mov
imul
aad
pop
jmp
fdivr
arpl
mov
add
pop
inc
mov
jb
call
(bad)
jnp
xor
js
imul
adc
sub
sub
jo
xlat
sub
lods
mov
fisttp
bound
out
add
scas
push
rcl
out
lods
or
mov
es
in
pop
or
push
cmp
add
push
jl
ret
dec
aad
adc
inc
daa
stc
hlt
(bad)
cmps
add
or
lods
add
hlt
fsubr
mov
xor
fiadd
pop
es
push
call
ja
push
xchg
outs
or
add
push
pop
add
sbb
push
out
dec
(bad)
sub
or
and
(bad)
pop
sub
lea
cld
dec
mov
cld
pop
push
sbb
cmp
push
nop
jno
or
stc
push
test
out
mov
aad
fnop
in
mov
int3
push
shr
lods
mov
pop
jnp
lea
xchg
rol
mov
xor
or
xlat
fsub
inc
fdiv
dec
outs
pushf
out
addr16
enter
add
mov
pusha
jo
xor
or
add
mov
les
in
jae
jmp
ins
inc
inc
test
(bad)
hlt
pusha
lods
aaa
test
in
xchg
les
push
out
mov
push
pop
packuswb
add
sbb
xchg
cs
mov
outs
ud2
mov
data16
jne
div
inc
mov
fldcw
stos
push
jge
push
xchg
mov
popf
sbb
cld
lock
adc
dec
inc
push
sahf
jo
out
sub
and
xchg
sub
push
xchg
pop
push
adc
lahf
sbb
sti
jl
(bad)
cmps
iret
cdq
pusha
dec
cli
inc
(bad)
cmp
aas
inc
fild
ds
cmp
lahf
sbb
mov
xlat
pop
pop
ds
adc
dec
dec
mov
or
or
lahf
(bad)
pop
mov
out
xchg
rcr
ret
sti
xchg
out
mov
and
push
xchg
cmps
jbe
jl
adc
retf
xchg
inc
fstp
(bad)
in
add
dec
inc
ss
rol
dec
mov
ja
xor
out
fadd
movs
out
(bad)
push
aas
(bad)
add
mov
sub
inc
push
jno
or
dec
jge
out
push
jp
jge
fiadd
xchg
in
and
mov
ds
add
inc
xchg
cli
cwde
imul
mov
xor
add
dec
pop
dec
fdivr
fimul
mov
aaa
lock
adc
jle
mov
ror
push
pop
sbb
inc
imul
out
or
inc
jmp
in
(bad)
adc
jmp
mov
call
int
push
ins
push
adc
std
ret
nop
lods
cwde
sub
add
test
mov
or
lds
push
push
nop
lods
cdq
hlt
inc
push
dec
(bad)
adc
ins
stos
daa
mov
gs
or
mov
xor
push
mov
mov
iret
xchg
pop
daa
jns
test
fnstcw
add
pusha
imul
jge
out
mov
adc
out
daa
xchg
dec
mov
cld
ret
dec
sbb
xor
and
stos
in
mov
mov
jbe
push
sbb
mov
sbb
lock
dec
jb
out
int3
mov
(bad)
in
cmp
aam
pop
enter
xchg
jl
rol
mov
sub
add
sub
dec
bnd
lahf
mul
jb
(bad)
push
mov
dec
int
enter
(bad)
jno
cmp
aas
sub
dec
xlat
ins
inc
stc
xor
mov
pop
xor
mov
test
ss
xchg
mov
in
aaa
add
popf
imul
shr
test
pushf
out
adc
retf
test
mov
fwait
cmp
mov
dec
and
pop
dec
and
sub
lock
test
mov
sar
mov
shr
lods
mov
pop
rcl
loope
xchg
push
mov
add
and
in
xchg
jbe
js
call
gs
inc
jno
xchg
lods
or
mov
sbb
pop
jmp
lods
add
fmul
mov
mov
mov
jo
pop
ret
jb
fs
mul
and
mov
sub
sbb
fmul
call
neg
test
pop
int
sti
loopne
shl
stos
cmp
fidivr
aam
mov
shr
jo
xchg
call
inc
jp
test
ja
sbb
pop
mov
fwait
inc
(bad)
dec
int
std
call
outs
loopne
loope
std
and
clc
push
dec
push
imul
adc
js
dec
adc
std
inc
ins
cmc
enter
mov
add
loopne
jae
cmp
push
ret
or
inc
jno
and
cdq
push
cmp
add
idiv
popa
push
pop
aam
cmc
(bad)
int
lea
mov
jl
std
retf
call
dec
cli
leave
and
and
sbb
jl
leave
mov
push
mov
scas
pop
les
inc
mov
push
pop
call
mov
pop
out
aas
dec
push
jns
outs
xlat
scas
mov
iret
(bad)
(bad)
fld
pop
fdiv
mov
cwde
fwait
add
cmp
scas
push
xchg
popf
and
int3
xchg
dec
jmp
and
mov
xchg
test
shl
outs
(bad)
hlt
or
push
sti
add
ficomp
or
push
into
mov
xchg
movs
in
jecxz
mov
sbb
inc
stos
leave
or
cmc
fldpi
pop
sub
iret
aaa
mov
ret
cwde
jecxz
aaa
push
push
sti
push
mov
cmps
xor
or
push
test
sbb
outs
pop
jae
mov
mov
cmp
push
add
pop
jnp
and
and
in
in
or
mov
in
fldcw
pop
popf
inc
mov
add
sub
in
sar
jle
inc
mov
push
sbb
arpl
jns
jmp
mov
adc
cmp
gs
std
add
pop
test
pop
push
add
cli
sub
dec
mov
cli
stos
inc
pop
push
into
test
or
inc
(bad)
in
mov
pop
retf
xor
lds
mov
iret
sti
mov
arpl
pop
sub
test
arpl
xor
sar
cmc
and
mov
jb
xor
fisub
cmc
mov
frstor
sub
sbb
cmps
jle
inc
sub
cdq
mov
imul
lea
mov
sub
(bad)
push
and
fidiv
ret
out
pop
ds
mov
fisubr
jnp
push
shr
push
or
add
jl
icebp
hlt
dec
call
clc
dec
out
push
ds
mov
jp
shl
inc
aad
adc
inc
int3
cmp
aas
pop
push
sahf
pop
es
jb
imul
sub
mov
hlt
jmp
je
enter
aaa
sar
mov
pop
adc
mov
lea
xor
sub
repnz
jb
xor
sub
ret
push
mov
popa
cwde
sub
cmp
das
jns
xchg
shl
shl
ins
jp
movs
mov
nop
popf
mov
ficomp
and
fdiv
mov
mov
ins
push
xchg
data16
gs
mov
mov
push
jns
pop
push
out
xchg
cmp
mov
fdiv
xor
dec
cmp
and
mov
jle
jbe
adc
rcr
out
shr
add
das
or
inc
icebp
lods
or
pop
xchg
mov
inc
mov
jmp
retf
pop
out
mov
cmp
adc
enter
xchg
xor
jl
push
dec
or
xchg
pop
sti
mov
sbb
sbb
dec
xchg
test
aas
add
pop
pop
std
pop
pushf
inc
loope
xchg
adc
dec
add
leave
adc
and
xchg
jl
cwde
xchg
addr16
jl
mov
pusha
js
sub
xchg
add
sub
and
inc
addr16
fld
in
xchg
add
mov
sbb
jle
dec
and
pause
shr
jbe
stos
dec
es
mov
test
inc
lea
xor
cwde
jecxz
and
sub
xchg
shr
shl
jb
mov
adc
mov
icebp
push
cmp
pop
shl
mov
retf
ret
or
sbb
lock
cmps
ins
sub
bound
push
push
sbb
sar
shl
push
push
sbb
fdiv
sub
adc
mov
stos
leave
or
sub
and
adc
dec
fwait
pusha
add
push
mov
cmp
rcl
push
sub
sbb
xor
stos
cld
dec
sub
push
hlt
fisubr
lock
push
out
or
dec
icebp
aas
mov
(bad)
imul
push
xor
push
push
mov
not
into
sahf
mov
push
sub
test
push
pushf
(bad)
pop
pusha
call
add
dec
in
(bad)
adc
mov
jg
adc
popw
sti
std
out
pop
mov
cmp
movs
xchg
xchg
xchg
in
ja
neg
das
clc
add
in
psubusb
imul
inc
cld
mov
lock
sbb
pushf
js
mov
sbb
mov
add
and
and
inc
push
loopne
inc
cwde
sti
push
int
sysret
pop
jge
pop
mov
aas
bound
inc
lods
popa
adc
sbb
cmp
jns
out
inc
lock
sbb
fistp
lods
rcl
fimul
out
sub
rol
mov
fwait
or
inc
mov
inc
pop
shl
jo
pop
cmps
cmps
mov
inc
inc
aaa
sbb
enter
lea
hlt
fisub
mov
je
cmp
imul
mov
ja
outs
rcr
movs
lock
js
adc
imul
add
daa
mul
mov
test
sub
int
cmp
sbb
jl
hlt
pop
jbe
inc
sbb
xchg
pusha
les
inc
pop
push
clc
xlat
test
aaa
add
mov
mov
push
xor
xchg
inc
push
in
sbb
sbb
mov
pop
dec
ror
imul
pop
mov
pop
mov
cmp
inc
cmps
add
and
dec
gs
jmp
cmp
je
or
inc
mov
sar
sbb
jle
add
inc
ficomp
cmp
int3
dec
adc
xor
and
mov
stc
xchg
mov
movs
xor
jno
retf
dec
add
fidiv
mov
sbb
repz
fsub
xchg
jecxz
xchg
jnp
retf
scas
or
xor
dec
or
ror
mov
push
jns
fst
pop
bound
cs
popa
xor
daa
call
shl
movs
adc
jns
cs
lods
outs
call
dec
data16
inc
pop
push
in
clc
or
enter
fbld
popf
add
imul
adc
xlat
or
jns
cld
mov
mov
mov
pop
retf
pop
sbb
pushf
or
ins
ret
xchg
nop
int
sahf
fiadd
mov
repz
ds
push
clc
adc
and
inc
div
shr
mov
cdq
sub
xchg
mov
loope
jmp
fwait
jnp
mov
scas
pop
iret
mov
(bad)
xchg
loop
out
mov
int3
cmp
jle
cmp
lods
mov
lea
pop
in
cli
es
cmp
push
std
push
and
cld
adc
into
fwait
jmp
adc
dec
repnz
jne
sub
jno
imul
(bad)
jle
cmp
mov
jae
hlt
ret
movs
fwait
pop
hlt
outs
movs
imul
sub
icebp
sub
int3
hlt
stc
push
xchg
cdq
mul
aaa
sbb
add
out
dec
out
nop
push
mov
and
aas
ret
cmp
and
sub
sbb
pop
loop
lea
cs
in
xor
cmp
test
test
pop
jns
aas
mov
fisttp
fiadd
shr
xor
add
shl
pop
jo
outs
sub
cdq
or
mov
adc
mov
das
inc
stos
outs
push
call
dec
and
imul
xchg
dec
pop
dec
xbegin
out
push
mov
pop
xchg
into
or
ss
cmp
je
rcl
adc
jge
fimul
ret
aad
pop
xchg
and
add
gs
jl
out
pop
jle
pop
ret
neg
or
add
jo
pop
xor
hlt
pusha
dec
imul
clc
scas
mov
sub
mov
jbe
push
call
pop
in
inc
hlt
scas
dec
cmp
in
jmp
in
pop
(bad)
push
mov
sbb
out
adc
cdq
test
les
fmul
lahf
mov
fcom
gs
mov
aas
mov
inc
jg
enter
or
cli
lds
cmp
xchg
mov
xor
sub
jns
cmps
push
ds
mov
dec
out
add
imul
rcr
jmp
push
cli
xor
pop
lods
inc
icebp
test
cs
out
(bad)
jmp
in
fdiv
or
clc
not
jmp
cs
rcr
sti
xor
and
sahf
lds
scas
sub
pushf
fs
dec
add
mov
push
cld
push
fbstp
mov
push
push
repz
repz
add
xor
push
enter
(bad)
mov
mov
cmp
(bad)
retf
push
cs
ds
push
dec
outs
mov
shl
sub
fisubr
pop
xchg
and
mov
int3
pop
inc
cmc
test
and
jbe
test
in
push
fld
inc
adc
pop
int
pop
mov
retf
add
or
das
push
mov
bound
adc
push
mov
lahf
dec
shl
nop
dec
cmc
xchg
dec
stos
movs
cmp
jns
jmp
or
cmp
mov
in
xchg
add
dec
push
adc
dec
sub
mov
imul
mov
dec
and
pop
ficomp
je
dec
inc
add
stos
(bad)
sbb
cmp
push
repnz
and
shl
jg
movs
add
ror
jmp
or
sbb
(bad)
and
or
(bad)
xchg
rol
outs
dec
pop
push
adc
or
sahf
mov
lds
dec
ins
push
pop
jmp
push
pop
daa
sub
cwde
in
lea
pusha
sub
push
mov
jmp
or
retf
(bad)
jmp
and
in
lods
call
jecxz
shl
mov
jge
cmp
pop
in
sti
mov
test
into
aad
dec
repnz
rcr
sub
lahf
sub
das
cmp
js
inc
mov
sbb
cld
je
cmp
loopne
push
jae
scas
in
xor
inc
inc
lea
leave
fwait
mov
push
rol
xor
cmp
jmp
jge
fisub
jbe
xlat
(bad)
mov
xlat
hlt
sbb
movs
sub
add
mov
ret
cmp
repnz
hlt
cmc
xchg
into
test
aas
leave
mov
test
cwde
sbb
pushf
mov
inc
in
scas
add
mov
shl
pop
stos
enter
inc
mov
lock
dec
dec
sbb
push
or
das
aaa
icebp
(bad)
pop
adc
sbb
adc
enter
ret
mov
mov
xchg
xor
cmps
fsubr
inc
xchg
test
xchg
aas
jmp
mov
int3
int
(bad)
lds
jmp
fbstp
pop
call
push
sbb
jo
mov
movs
adc
out
xchg
test
sbb
sbb
sub
sbb
(bad)
outs
icebp
pop
scas
jmp
mov
mov
out
cmp
xchg
inc
movs
xchg
xchg
sahf
mov
cmps
fsubr
mov
adc
sbb
jae
xchg
lea
aam
xchg
std
sub
cdq
jno
shl
mov
push
xor
cmp
in
or
xchg
mov
ret
dec
pop
popf
movs
jmp
or
cmps
dec
ret
retf
les
das
xor
idiv
mov
jbe
loope
int
pop
dec
int
js
xor
cmp
adc
bound
(bad)
dec
and
xchg
jl
add
je
test
xchg
cmp
popf
dec
mov
loopne
push
lods
xlat
mov
gs
(bad)
mov
out
(bad)
je
mov
fisubr
adc
cmp
or
dec
lods
push
movs
pop
and
dec
xor
mov
mov
cmp
shr
adc
into
sar
mov
lahf
inc
sbb
inc
fld
lods
stos
stc
mov
mov
xor
pop
ret
dec
shl
icebp
mov
dec
mov
jg
push
push
xor
nop
cmps
jge
popf
sub
stos
fsubr
dec
mov
push
jmp
pop
fistp
mov
icebp
das
outs
fdiv
test
mov
inc
scas
adc
jge
mov
sbb
fwait
push
(bad)
(bad)
sub
jmp
dec
xchg
sub
pop
push
fst
es
icebp
into
neg
push
push
je
stos
lock
aaa
ins
or
inc
dec
mov
inc
cmp
stos
adc
inc
jne
test
or
in
lds
and
cmps
sbb
sub
aad
daa
cmp
pop
stos
iret
sbb
mov
aam
adc
mov
aaa
ret
or
lea
sub
popf
inc
loopne
pop
mov
mov
jmp
sub
imul
imul
sbb
ins
pop
int3
push
in
int
mov
ins
pop
fcomi
push
sti
out
sbb
(bad)
into
jbe
pusha
call
out
(bad)
inc
dec
ja
add
cli
leave
xchg
inc
ja
fwait
add
add
cmc
xor
sub
or
scas
arpl
adc
les
ror
ficom
outs
inc
sti
push
push
dec
rcr
cmp
test
xchg
ss
sbb
(bad)
enter
add
mov
daa
add
loopne
pop
and
mov
dec
fmul
hlt
inc
in
adc
mov
jle
cmps
out
mul
neg
cwde
les
call
rcl
jo
jle
and
inc
ret
xchg
sbb
ds
jae
icebp
gs
xor
fisubr
inc
add
fiadd
call
sub
mov
cs
pushw
mov
int
aas
mov
jne
adc
dec
and
(bad)
add
jmp
dec
inc
retf
mov
adc
lahf
shl
jecxz
clc
push
in
fs
jg
pop
fnstenv
lock
sbb
pop
out
xchg
mov
ins
call
popa
xor
cmp
xchg
mov
pusha
pop
ss
out
pusha
ret
retf
out
mov
inc
mov
xchg
pushf
xor
ds
cs
test
jecxz
sub
or
xchg
dec
retf
dec
mov
push
mov
jecxz
out
xchg
cmp
xor
imul
ror
pop
mov
add
lock
cmp
pop
scas
arpl
mov
xchg
mov
hlt
dec
in
dec
mov
jns
gs
sub
cld
and
jb
je
mov
pop
fidivr
fsubr
and
inc
in
rol
jns
fisubr
adc
ins
push
sbb
xor
je
adc
mov
hlt
or
mov
mov
fild
std
add
xchg
in
out
les
nop
mov
aaa
jl
sti
mov
push
push
popf
jge
mov
ja
popaw
(bad)
loope
mov
repz
and
jg
mov
lods
xchg
mov
shl
push
sbb
xchg
sbb
add
in
loope
setbe
rep
mov
(bad)
or
mov
in
cmp
addr16
dec
rol
nop
sub
push
sbb
loop
dec
xchg
cli
push
sbb
test
jns
mov
inc
ds
scas
xor
dec
or
push
xchg
icebp
mov
push
xor
cli
popf
jge
aas
push
daa
mov
lds
addr16
and
arpl
and
clc
sti
push
add
in
repnz
out
into
pushf
fld
and
jmp
dec
adc
adc
inc
retfw
stc
stos
pop
sub
jp
enter
and
stos
or
jp
xchg
add
push
dec
mov
push
popa
jno
in
mov
aaa
js
sar
addr16
ins
fist
into
xchg
bound
jns
or
pop
stc
lods
popf
jge
lds
dec
in
add
lods
int
mov
mov
ror
repz
(bad)
mov
call
js
outs
scas
pop
adc
lods
cmps
retf
pop
jge
lods
and
sbb
arpl
shl
jae
outs
retf
dec
jmp
pop
mov
adc
pop
mov
dec
jb
scas
sbb
rcl
sub
inc
out
and
sub
fsin
enter
or
cmc
or
mov
test
sar
or
or
div
cld
xor
(bad)
repnz
pop
in
inc
and
fild
fstp
scas
and
cmc
push
push
pushf
dec
sbb
stos
inc
js
lahf
adc
loopne
cmp
test
add
jecxz
and
hlt
call
mov
outs
dec
cmps
pop
push
cmps
add
pop
stos
ja
mov
neg
xchg
jge
push
mov
hlt
fs
cld
or
cld
and
or
sahf
cwde
iret
sub
dec
dec
(bad)
mov
stc
or
sbb
hlt
popf
push
rol
mov
pop
(bad)
popf
push
rol
stos
cmps
xchg
pop
jp
add
jb
push
mov
inc
cmp
cld
iret
fsubr
popf
add
mov
jge
cdq
rol
popf
aas
(bad)
mov
sub
and
loope
fcom
cmp
xor
add
fsubr
pop
sti
hlt
test
inc
hlt
and
arpl
aaa
pop
add
or
rcl
bound
(bad)
pop
repz
inc
jne
aaa
sub
cli
clc
inc
pop
jmp
cmp
mov
test
sub
adc
or
icebp
sbb
adc
mov
dec
dec
bound
scas
push
out
pushf
pusha
stos
je
mov
inc
add
ja
ror
xchg
aaa
ret
dec
sub
std
retf
aaa
inc
cs
int3
mov
push
jmp
mov
xor
adc
je
push
fldcw
in
push
push
mov
push
mov
xchg
repnz
pop
fdiv
inc
cmp
in
push
and
in
and
call
int
arpl
inc
jno
iret
cld
movs
dec
xchg
in
mov
cmps
pop
js
js
inc
xor
push
adc
test
cmp
ret
xor
sub
adc
xchg
movs
jmp
xchg
cmps
dec
push
jge
cmp
jmp
lods
sbb
sub
into
fidiv
cmp
ss
inc
mov
sbb
push
aam
pop
mov
pop
jno
mov
cwde
pusha
test
cli
shr
out
dec
ficom
out
sub
xor
test
cmc
push
jmp
cwde
mov
clc
jge
test
sub
dec
sub
iret
mov
mov
xor
and
push
cmp
lahf
ins
js
push
add
repnz
jmp
cld
jno
loope
xchg
xor
add
xchg
out
push
bound
cdq
loope
test
enter
adc
and
mov
and
(bad)
clc
or
push
jno
stc
cmps
pop
adc
int
lods
xchg
inc
test
popf
fimul
mov
icebp
ja
lods
dec
data16
sbb
xchg
je
jge
sub
sbb
es
popa
jmp
push
pop
or
retf
icebp
push
mov
enter
call
or
fist
and
cmp
push
jno
or
stos
fstp
push
lods
loope
fld
sar
pusha
mov
jbe
jmp
jno
push
xor
ins
sub
and
je
fld
push
xor
int
stc
frstor
xlat
mov
xor
adc
cmp
push
xor
pop
ins
dec
dec
push
mov
dec
into
aad
pop
sub
and
jbe
fild
pop
pop
or
pusha
push
arpl
mov
push
neg
adc
pusha
jl
sub
dec
sbb
push
dec
das
or
retf
xchg
aam
xor
das
jmp
push
dec
sar
repz
push
fsincos
jmp
dec
mov
outs
retf
sub
mov
retf
push
pushf
ja
jmp
push
ror
sar
and
xor
stc
adc
xlat
or
xor
clc
jp
ss
jbe
mov
hlt
aas
adc
push
sub
je
popf
push
pushf
sbb
xor
sub
rol
or
stos
repnz
sbb
fcompp
mov
jae
cld
ret
out
push
iret
outs
int3
or
in
mov
test
stc
sbb
(bad)
loopne
pop
div
in
out
add
arpl
lds
jns
and
mov
(bad)
(bad)
pop
push
aam
xchg
mov
jge
mov
bound
rol
ret
xor
push
ins
sub
add
sbb
cdq
not
out
dec
jnp
xchg
add
imul
jb
mov
mov
cmp
in
cs
js
outs
jecxz
fs
adc
xlat
sahf
dec
xchg
scas
mov
push
outs
lahf
xor
pushf
clc
xor
test
dec
cmp
mov
int3
fwait
lahf
aaa
push
nop
or
dec
imul
retf
dec
(bad)
fsubr
add
xchg
or
arpl
sahf
mov
cmp
sbb
test
out
sub
dec
or
jmp
pop
(bad)
pop
push
pop
ins
cld
jae
mov
xchg
xor
dec
test
popa
int3
lods
int
or
(bad)
nop
mov
and
mov
mov
das
jnp
ficom
jle
imul
push
(bad)
cli
icebp
cdq
dec
dec
dec
sbb
je
add
xchg
ins
mov
xor
loopne
les
(bad)
out
daa
ds
cmp
hlt
lea
test
sub
or
or
fiadd
sahf
push
out
inc
push
fist
pop
ret
xchg
and
jmp
xchg
mov
bound
fnsave
adc
outs
scas
popa
sahf
xchg
(bad)
cmps
add
xlat
mov
cmp
pop
jb
dec
data16
push
push
push
add
push
sub
dec
jmp
ds
xchg
adc
inc
mov
popf
xor
mov
pop
ror
push
mov
dec
xchg
shl
jmp
xchg
mov
pop
lock
(bad)
xlat
pop
adc
sti
rcl
pop
adc
ror
pop
jns
cdq
inc
sub
movs
movs
add
data16
adc
call
imul
and
sub
cmp
dec
lock
js
xor
jae
push
(bad)
jmp
jno
dec
xor
inc
mov
loopne
cmp
arpl
leave
(bad)
pop
push
dec
ins
mov
shl
or
out
lock
test
jbe
adc
mov
mov
not
cdq
push
cmp
pushf
mov
pop
sti
dec
adc
aam
sbb
movs
jge
rcr
sub
pop
pop
push
mov
cdq
dec
mov
inc
and
cs
or
push
push
std
enter
pop
shr
dec
push
fidivr
outs
scas
sub
mov
fs
cmps
push
sub
daa
data16
outs
jle
mov
xchg
ss
popa
jo
adc
sub
inc
addr16
push
or
cmps
cwde
or
push
(bad)
jns
sbb
fisubr
movs
sub
xlat
dec
push
mov
or
ret
aas
fisub
cmp
mov
jmp
jae
ins
adc
lock
aad
and
addr16
cmp
(bad)
ss
mov
lds
xor
mov
ja
mov
jo
pop
in
jg
push
pop
jne
mov
or
lods
cmp
movs
sub
pop
sub
xchg
test
fsub
aaa
enter
mov
mov
and
mov
adc
push
pop
in
sahf
(bad)
jnp
call
sub
(bad)
daa
xchg
mov
inc
sbb
push
in
push
cmp
ret
cmp
js
cmp
or
xlat
sbb
add
mov
cmp
int3
mov
(bad)
and
pusha
je
nop
and
fxch
add
dec
(bad)
sub
cld
popf
sub
retf
push
cdq
bound
lods
gs
cmp
and
push
mov
sbb
ret
shr
daa
repz
cli
sar
xchg
scas
mov
test
fldenv
(bad)
mov
sbb
imul
in
ds
adc
cmp
cmp
adc
add
in
or
adc
add
inc
outs
(bad)
jns
ins
jle
pop
aaa
int
or
inc
add
cdq
pop
and
dec
and
rol
sub
in
or
lods
push
mov
out
jb
cmp
push
push
or
jmp
and
push
pop
sti
call
jo
shl
sbb
out
popf
sar
int
out
mov
cdq
pop
repz
pushf
pop
pop
cmp
mov
adc
scas
push
and
sub
cmp
xchg
jmp
dec
das
push
fucom
xchg
test
jmp
lods
mov
adc
dec
out
movs
and
cwde
push
pop
or
stc
ret
sbb
jp
cwde
not
sbb
fwait
cmp
xor
sbb
popf
shr
int3
push
test
push
cmps
sbb
cmp
jmp
xchg
in
jnp
retf
or
je
arpl
sbb
mov
cmp
sub
out
outs
loopne
aad
adc
mov
mov
in
pop
fs
aad
loop
sub
sbb
(bad)
add
xchg
jle
add
jbe
dec
mov
fdivr
dec
fwait
xchg
stc
lods
dec
lock
cmp
mov
sub
cmps
mov
fst
test
pop
out
ins
mov
repnz
pop
dec
sub
rcr
daa
mov
push
hlt
mov
adc
lods
sub
or
in
push
jge
stos
inc
enter
repnz
dec
pushf
repnz
arpl
movs
push
sub
addr16
in
mov
dec
cmp
out
inc
push
ja
dec
je
iret
cmp
sbb
xchg
repz
or
retf
pop
fst
test
fdivrp
mov
shr
pusha
jae
dec
xor
cs
icebp
aad
jge
sbb
sahf
out
fwait
ret
xchg
stc
loop
test
jae
inc
aaa
int
pop
adc
ficom
add
retf
lods
loop
inc
add
adc
std
cwde
cmp
js
rcr
mov
push
or
lock
ror
or
sub
and
enter
sub
sbb
jg
shl
pop
mov
lock
int3
imul
mov
int
pop
add
cwde
je
xchg
xor
inc
mov
or
leave
outs
jae
in
xor
fs
or
dec
xchg
mov
xor
or
mov
mov
jb
test
mov
bound
cmp
daa
(bad)
mov
es
nop
pop
aam
addr16
adc
mov
push
dec
sti
sbb
aam
push
fcom
dec
mov
pop
xlat
jae
inc
and
ss
inc
dec
movs
ss
push
stos
mov
push
fcom
scas
sub
mov
(bad)
lods
cmc
add
and
dec
or
ret
or
inc
mov
adc
mov
jae
push
fidiv
fld
add
(bad)
out
cmovge
xor
mov
and
mov
std
and
jmp
mov
test
xchg
test
adc
(bad)
fist
fimul
push
scas
push
cmp
add
sahf
rcr
add
sub
loopne
xchg
cmp
cmp
cmp
repz
or
mov
popf
cwde
popa
(bad)
outs
mov
outs
mov
lods
adc
aaa
sub
or
push
mov
ins
jbe
loop
inc
pop
in
aaa
pusha
es
cmp
jp
lahf
and
aad
mov
sub
xor
xor
pop
pop
fimul
mov
cmp
fimul
push
push
call
cmp
mov
out
sbb
popa
jle
mov
neg
dec
mov
jecxz
jnp
sbb
ja
xor
sbb
mov
loopne
jp
sbb
daa
mov
stc
or
iret
test
dec
pop
fist
icebp
adc
enter
loop
mov
cmc
jae
mov
in
xor
in
outs
aas
jae
mov
xchg
and
jb
cmp
test
cmp
pop
xor
int
inc
and
movs
pop
aam
popa
aam
jae
aam
vrcpps
call
shl
pusha
div
pusha
int
xor
into
pop
adc
pusha
es
or
mov
call
loopne
cld
xchg
sti
cld
mov
push
pop
(bad)
and
in
sbb
pop
and
xor
in
jbe
aad
int3
and
std
dec
jmp
shr
(bad)
dec
sahf
sub
lea
jno
test
jg
push
xchg
mov
xlat
pop
loop
adc
(bad)
fsubr
mov
les
stos
sub
movs
mov
bound
ret
and
fdiv
in
shl
jns
add
mov
repnz
(bad)
jge
cdq
push
and
adc
mov
test
mov
pop
xor
jo
xor
aas
jge
xor
das
ins
sti
adc
test
and
cld
std
add
sti
cmc
mov
pop
and
sbb
ror
xor
pusha
and
loopne
xchg
into
adc
outs
stos
lods
and
mov
dec
xchg
stc
lahf
aad
pop
int3
sbb
dec
mov
mov
mov
div
les
dec
mov
cmp
(bad)
and
jbe
movs
mov
mov
mov
nop
imul
add
out
sub
xor
sub
mov
add
clc
adc
lods
pop
in
inc
adc
mov
lea
push
pop
icebp
push
mov
dec
jo
xor
and
in
mov
in
retf
and
pop
add
icebp
stos
sbb
repnz
sbb
enter
ins
or
mov
jo
push
mov
jg
into
xchg
(bad)
dec
mov
add
mov
sub
fsub
jns
call
mov
out
(bad)
dec
mov
dec
inc
jb
sahf
mov
out
xchg
jmp
or
lds
mov
clc
sbb
mov
test
outs
lea
xchg
cmp
or
adc
aas
fcom
in
jl
jecxz
push
mov
mov
fadd
arpl
pop
sub
les
pop
enter
popa
jg
add
clc
or
aam
das
test
xchg
dec
sbb
xchg
rcr
jbe
repnz
inc
ret
cmps
stos
aaa
xchg
(bad)
loopne
ret
xchg
retf
pusha
jmp
or
fimul
fcmove
imul
and
retf
inc
neg
mov
shr
sbb
lock
aas
aaa
add
lahf
arpl
outs
fild
add
mov
cli
adc
mov
in
cmp
lahf
lahf
add
jp
inc
(bad)
ins
adc
adc
and
enter
scas
xor
sbb
jmp
in
call
dec
in
jl
add
sub
inc
retf
sbb
call
pop
movq
pop
jle
cwde
lods
pop
cmp
inc
mov
sub
push
xor
push
dec
int3
ror
mov
sbb
sub
pop
inc
push
fs
fdiv
sub
cmp
mov
push
xchg
mov
mov
jp
xchg
ffreep
fadd
nop
jl
lds
loop
jns
and
inc
xchg
sub
add
in
add
jl
pop
cdq
cmp
lahf
xchg
mov
dec
xlat
inc
pop
sbb
loopne
push
adc
lock
mov
call
push
inc
(bad)
repnz
pop
sub
data16
inc
retf
pusha
movs
out
pop
fimul
je
mov
adc
loop
mov
iret
repz
bound
int
or
lds
fadd
push
lahf
xlat
stc
inc
es
add
lods
cmp
fdiv
sahf
add
cmp
fwait
lea
(bad)
sti
xor
cli
mov
lahf
or
popa
mov
popf
jo
ins
int
dec
out
loopne
mov
sbb
fdiv
mov
push
lock
cmp
ins
sbb
push
sub
out
mov
cmps
loopne
cwde
xor
(bad)
fst
cs
pop
in
imul
cmp
aaa
test
adc
fst
or
xor
add
int3
push
push
sahf
or
mov
jge
push
hlt
cmp
aas
dec
dec
mov
pop
loop
or
push
aaa
dec
mov
and
pop
jae
sbb
xchg
pop
mov
(bad)
idiv
mov
add
push
shl
and
fwait
or
pop
jae
add
unpcklps
fwait
or
add
jbe
xchg
aam
outs
ficom
addr16
into
cwde
push
push
rcr
push
xchg
mov
ss
sbb
cld
mov
dec
lods
rcr
imul
jno
adc
push
loopne
xchg
push
mov
add
stos
mov
pop
xchg
retf
adc
int
mov
mov
xor
in
fdivr
pop
pop
test
mov
out
imul
jae
ins
cmps
xchg
test
mov
lahf
popf
ds
xchg
jo
mov
and
fistp
sbb
pushf
adc
push
cli
push
mov
mov
sub
mov
shl
test
int
dec
cdq
sahf
xor
pop
add
mov
mov
rol
mov
pop
xor
aas
lds
push
je
jmp
stos
int
jne
xchg
inc
cmp
xlat
jecxz
arpl
(bad)
lea
popa
xlat
int3
or
cmp
out
test
push
in
add
adc
in
jp
dec
xchg
mov
fimul
push
mov
xor
test
das
and
enter
out
push
retf
xor
les
push
cmp
sbb
ss
push
ins
lock
jp
mov
push
cmp
push
(bad)
fcmovnb
push
pusha
lods
fsub
iret
xor
daa
pop
mov
mov
mov
mov
dec
push
sar
std
sbb
push
popa
addr16
mov
cwde
xchg
cmps
icebp
clc
out
or
daa
out
lods
mov
dec
repnz
dec
scas
in
mov
enter
out
jo
les
stc
test
fild
push
repz
movs
pop
add
xor
jo
out
pusha
es
cdq
sub
adc
sbb
test
inc
leave
mov
(bad)
jge
cmp
ins
in
dec
fisub
outs
rcr
xlat
xor
xchg
dec
sbb
test
or
icebp
cmp
or
or
repnz
xchg
loope
and
lock
push
add
popf
test
mov
sub
or
lahf
jge
sub
and
mov
test
inc
fwait
(bad)
popf
or
xchg
dec
mov
and
int3
stos
lea
mov
outs
stc
push
adc
lods
and
hlt
in
push
pop
and
test
test
aad
push
inc
xlat
xchg
test
les
cli
mov
mov
inc
das
or
bound
aaa
dec
sub
xor
movs
xchg
push
dec
sub
fdiv
das
xor
(bad)
mov
sub
adc
push
addr16
inc
jb
out
(bad)
(bad)
cmp
scas
cmp
repz
icebp
jmp
in
xchg
xlat
fs
cmp
add
fdiv
mov
cmc
mov
mov
and
add
mov
je
push
fild
leave
push
mov
mov
inc
ss
scas
and
push
and
sbb
and
es
sub
retf
or
push
xchg
and
ficom
aaa
and
cwde
cdq
xchg
pop
pop
mov
out
ins
ret
cmp
fs
nop
loop
in
mov
sub
stos
mov
repnz
xchg
loopne
call
movs
cmps
push
pusha
adc
jmp
sbb
mov
out
push
sbb
int
loope
sub
(bad)
or
cmps
jo
lahf
xchg
daa
fcom
lods
mov
pop
call
jp
retf
jae
mov
xchg
cmp
push
dec
test
xchg
dec
jno
int3
les
enter
fwait
mov
adc
jns
daa
push
pop
stos
push
mov
ins
mov
out
jbe
push
lock
dec
lods
test
mov
cwde
cli
dec
or
mov
jno
cmp
push
sub
push
push
fucom
or
mov
popa
jmp
xchg
xchg
jnp
(bad)
not
adc
int
xchg
out
xlat
and
hlt
ja
sbb
addr16
cmp
nop
fild
sar
js
int
lock
imul
jmp
push
in
dec
pop
je
xchg
inc
aad
(bad)
jmp
adc
dec
std
gs
adc
out
fld
xchg
ss
mov
fnsave
xor
pop
and
ins
mov
push
pop
inc
mov
pop
ror
iret
je
dec
mov
xchg
outs
in
fcomp
sub
rcl
adc
jecxz
sbb
cmps
inc
add
stc
xchg
or
xor
pop
call
adc
jne
adc
imul
sti
dec
xor
sbb
and
ja
pusha
jo
and
dec
pop
das
sbb
push
dec
(bad)
xchg
add
icebp
mov
loop
jp
inc
xor
sahf
fdivp
jmp
(bad)
cld
arpl
sbb
hlt
scas
cmps
(bad)
dec
pop
bound
aam
add
mov
or
aad
(bad)
mov
stos
pop
shr
jno
test
dec
rol
push
mov
lea
popf
adc
jnp
cmovo
mov
sar
jp
jl
loop
pop
dec
inc
inc
or
mov
stc
or
pop
add
xchg
fwait
cmps
test
and
mov
das
add
push
inc
cdq
iret
dec
outs
sbb
jae
pop
or
ja
dec
and
pop
pop
sbb
xchg
jne
(bad)
sti
mov
jnp
cmp
out
add
mov
sbb
mov
fimul
or
jg
or
clc
fild
inc
xor
dec
mov
lock
mov
mov
and
sahf
jp
hlt
dec
xchg
sahf
es
in
cmp
jle
or
xchg
pop
scas
cmps
out
fld
jnp
jbe
outs
push
das
mov
pop
xor
fsub
imul
nop
inc
fdivr
adc
pop
add
mov
fist
and
sub
adc
cdq
cmp
repnz
push
fmul
fstp
dec
test
aas
mov
mov
jmp
ja
sahf
mov
xor
mov
adc
mov
into
mov
scas
rcr
inc
dec
test
dec
fcom
or
test
aam
dec
xor
pop
sbb
add
rol
cld
in
cwde
aam
rol
es
repnz
mov
stos
std
mov
call
scas
push
push
imul
mov
pop
jecxz
jb
leave
loop
mov
aas
sub
jl
stos
gs
xor
nop
cmp
xchg
inc
mov
fwait
mov
outs
jecxz
pop
out
ins
jae
mov
rcl
not
push
adc
gs
adc
xor
adc
(bad)
jle
imul
call
test
lock
enter
shl
cs
pop
arpl
xlat
push
adc
push
ror
add
mov
xor
in
or
outs
(bad)
mov
adc
clc
mov
cmp
and
call
mov
mov
push
pop
cmps
out
out
iret
xchg
push
js
dec
mov
outs
cld
not
dec
mov
cwde
out
lahf
sbb
sbb
mov
inc
jl
xor
je
cmc
les
xor
sbb
outs
jl
es
xchg
in
retf
or
jg
ja
and
dec
cmps
(bad)
jne
jecxz
popf
mov
out
pop
sub
cld
out
imul
push
or
(bad)
gs
in
stos
xor
inc
mov
sub
and
fisttp
adc
adc
push
mov
ror
or
xor
mov
mov
cmp
sub
imul
jns
adc
or
aas
inc
jbe
or
inc
add
add
add
(bad)
mov
sar
iret
repz
fsub
rcr
xlat
ror
(bad)
(bad)
xchg
xlat
(bad)
xor
mov
cmp
xchg
or
enter
lea
inc
ror
mov
call
ins
jb
dec
gs
cli
frstor
mov
or
inc
jno
jo
pusha
sti
mov
mov
loopne
xchg
shr
in
cli
bound
sub
aam
fwait
ja
inc
out
sbb
xor
sub
imul
je
sbb
add
xchg
in
loopne
jl
push
dec
mov
mov
jmp
pop
(bad)
or
in
sbb
fwait
pop
rcr
pop
div
int
std
push
or
div
xlat
and
dec
cmp
cmps
ins
pop
add
xchg
in
mov
scas
push
pop
rcl
push
(bad)
fnsave
dec
fimul
xchg
aas
inc
ja
jmp
push
out
sbb
inc
in
add
jns
pop
(bad)
jmp
sbb
(bad)
popf
mov
test
dec
and
sbb
xlat
imul
push
cld
adc
mov
push
cmp
call
jnp
jp
inc
dec
jmp
pop
jbe
out
mov
lea
mov
add
xor
fist
stc
jne
pop
daa
aas
into
sbb
int3
cmp
mov
push
dec
jae
add
and
inc
add
test
dec
mov
ret
nop
cmp
sub
fwait
mov
adc
jl
inc
cmp
imul
arpl
lahf
sub
je
jl
sbb
cmp
loop
adc
int
in
call
push
mov
lods
mov
cdq
leave
jnp
shl
fptan
mov
push
xor
jmp
and
jnp
nop
sub
aad
fs
xor
mov
or
adc
stc
cli
cmp
ins
and
into
test
pop
adc
and
push
imul
test
mov
xchg
pop
sti
cmp
xor
js
cmc
cdq
pop
pop
mov
into
push
(bad)
mov
mov
mov
or
cdq
cmp
cmc
retf
mov
lahf
xchg
les
shl
inc
aas
int
mov
loop
lock
lahf
daa
enter
jg
add
cmp
mov
rcl
outs
out
add
pop
cmps
jo
jno
pop
fiadd
shl
mov
dec
sub
push
or
xor
shr
pop
push
sar
or
jecxz
hlt
mov
pusha
cmp
adc
inc
loop
mov
and
and
fs
es
dec
mov
daa
and
shl
xchg
xor
push
jbe
xchg
shl
sub
cmp
sub
sbb
xor
(bad)
jmp
rcl
cmp
mov
fidiv
imul
xchg
or
gs
sbb
adc
sub
out
je
cmps
int3
mov
jne
(bad)
cs
je
rol
and
xchg
adc
dec
jmp
imul
pop
mov
add
mov
xor
sbb
add
add
xor
enter
mov
std
push
addr16
mov
mov
ds
adc
xor
dec
pushf
or
sub
les
ficom
jnp
loop
icebp
fcomp
xchg
(bad)
mov
mov
scas
xchg
daa
test
das
add
out
arpl
pop
inc
cld
adc
xchg
std
jge
(bad)
loop
das
mov
lahf
or
int
push
jns
cmps
pushf
popa
add
mov
aaa
jmp
out
and
mov
adc
mov
inc
jecxz
ror
xor
pop
push
sbb
fidivr
fadd
push
mov
div
in
pop
mov
cmp
pop
out
repnz
push
arpl
call
pop
cmp
in
leave
ja
clc
inc
jb
lahf
mov
adc
or
add
rdpmc
xchg
cdq
test
add
jbe
xchg
mov
daa
jb
mov
jl
jb
lods
test
jmp
lods
push
jmp
mov
inc
cmp
popf
pop
add
dec
pushf
sub
cmps
sbb
mov
pop
push
push
int
and
xor
jg
scas
(bad)
out
das
cmp
(bad)
pop
in
retf
in
mov
push
add
sbb
inc
pop
or
gs
mov
ret
or
fstp
pop
clc
xchg
cmps
fmul
pop
popf
sti
sbb
jno
jmp
inc
out
xchg
fwait
dec
add
sbb
cs
jl
mov
push
jb
pop
mov
loope
movs
fidivr
cmovg
push
cmp
fmul
loopne
jge
mov
int
and
test
adc
jmp
and
inc
add
(bad)
jnp
push
mov
psubsw
push
pop
add
mov
mov
(bad)
sbb
scas
mov
ret
mov
rol
jns
mov
sbb
ss
dec
dec
pop
xor
jp
cmps
adc
push
dec
inc
mul
or
out
cmp
xchg
dec
mov
sbb
in
xchg
or
jb
sub
scas
mov
xchg
mov
es
ins
mov
pop
imul
cmp
mov
dec
scas
inc
xor
out
push
test
call
push
jnp
mov
dec
scas
or
and
pop
push
ror
ret
mov
gs
xor
dec
imul
in
jle
fild
test
pop
add
push
dec
sbb
movzx
cdq
jo
sub
sbb
dec
push
imul
mul
sub
fst
sbb
gs
dec
popa
arpl
adc
(bad)
xor
clc
mov
std
call
push
sbb
inc
je
in
sub
cld
jl
mov
pop
sub
stos
or
mov
stos
mov
das
ins
mov
mov
sahf
xchg
ffreep
add
mov
rol
pop
sar
xchg
out
mov
aas
adc
xchg
xchg
cmps
xor
shl
xchg
(bad)
and
lahf
mov
mov
adc
stos
or
sahf
adc
and
arpl
std
scas
dec
push
cmp
jl
aad
mov
xor
retf
test
and
dec
mov
add
lods
ret
outs
outs
fist
adc
cmp
imul
aam
test
test
jl
cwde
mov
sub
je
lods
pop
or
jg
lods
lea
in
jp
sub
mov
xchg
dec
inc
mov
cmp
sar
(bad)
fiadd
addr16
cmp
inc
rcr
movs
dec
ja
jp
inc
mov
dec
pop
cmps
mov
int
dec
aam
(bad)
out
push
add
in
out
pop
push
fstp
mov
add
cmp
and
dec
fwait
lahf
cmp
jmp
rcl
or
inc
mov
cmps
inc
xchg
je
call
add
hlt
adc
scas
stc
loope
ins
mov
push
xchg
or
xor
dec
jne
fst
adc
jbe
push
xor
mov
push
outs
jmp
mov
sub
mov
xor
inc
int
cwde
pop
cmp
pop
mov
xchg
lods
loop
lahf
jbe
cmp
pop
xchg
push
jnp
xchg
push
push
push
xor
dec
push
cdq
(bad)
pushf
mov
mov
xor
and
cmp
hlt
mov
in
jb
and
mov
adc
call
or
aad
mov
shr
loope
and
xchg
imul
dec
dec
add
jmp
pop
into
cmp
scas
jmp
or
test
adc
lea
or
fcomi
pop
retf
mov
add
mov
es
addr16
aas
hlt
scas
push
cmp
clc
pop
pop
lock
in
leave
jp
aas
pop
cld
jmp
(bad)
gs
in
ficomp
ds
dec
sub
dec
xor
shl
jo
test
pop
dec
test
sti
or
ret
or
push
test
inc
stos
xor
adc
aaa
xchg
into
popa
dec
jp
mov
inc
pop
cs
aam
mov
push
jbe
sub
out
xor
lods
inc
lea
cld
xor
xor
jb
inc
sti
push
shl
lock
inc
inc
xchg
xchg
retf
das
cs
mov
mov
sbb
adc
cmps
repz
sar
xor
inc
mov
push
mov
mov
movs
leave
jle
xor
cmp
jg
fmulp
cli
cmps
push
pop
mov
mov
test
cmp
stc
mov
xchg
mov
sub
mov
ins
(bad)
mov
popf
pop
cli
mov
jns
fstp
dec
test
arpl
push
cmp
pop
sbb
cmp
mov
mov
add
ret
js
adc
xchg
push
pop
(bad)
jmp
hlt
add
mov
push
add
push
inc
adc
inc
retf
jmp
test
loope
adc
sbb
jno
int
stos
or
out
jno
mov
aam
mov
lods
xchg
pop
movs
shl
xchg
test
or
cld
cmp
mov
dec
out
add
or
dec
cmp
ins
nop
hlt
or
popf
dec
fisub
inc
loope
jae
stos
fistp
sub
shr
mov
call
arpl
jl
pop
sub
xor
fmul
stos
xchg
jno
sbb
es
push
aas
adc
mov
sti
std
cmp
xchg
push
xor
test
dec
add
(bad)
movs
movs
dec
out
mov
out
inc
jg
popf
iret
mov
mov
rcl
and
sbb
mov
pop
ins
sub
fdiv
cmp
imul
rcr
dec
rcl
push
jnp
xchg
dec
adc
sbb
cmp
pop
retf
in
add
sbb
mov
sbb
stos
push
adc
pusha
repnz
scas
nop
daa
iret
adc
and
push
xor
xor
dec
inc
inc
sub
lods
or
push
out
mov
out
push
fadd
outs
lock
in
movs
outs
xor
pop
retf
push
mov
adc
sbb
sbb
push
movs
aaa
inc
mov
fdiv
push
xchg
pop
repnz
and
jb
pop
ret
repnz
sub
push
xor
jbe
out
mov
mov
adc
out
outs
stc
sub
int
adc
inc
jmp
jecxz
js
mov
cmp
mov
bound
pop
xor
xlat
(bad)
(bad)
sbb
dec
mov
sub
test
push
cmc
loopne
mov
add
push
outs
jbe
xchg
cli
pop
mov
push
(bad)
jbe
pop
pop
xchg
sar
fwait
vandnps
enter
sahf
daa
std
dec
jns
ret
aam
mov
or
dec
sbb
pop
sbb
dec
cmp
cwde
retf
fadd
add
test
test
and
mov
pop
mov
and
mov
mov
or
retf
cmc
scas
repz
jnp
out
shl
outs
and
bound
push
inc
test
cmc
aaa
idiv
test
iret
lods
push
in
mov
pop
cmp
push
fs
push
sub
adc
push
push
div
cmps
jle
or
out
int3
cmps
ins
sahf
pop
ss
scas
cmc
push
iret
test
mov
mov
sahf
repnz
adc
das
movs
and
out
pushf
shl
aas
mov
cmp
ret
push
dec
and
cli
fdivr
arpl
lock
add
scas
retf
adc
add
mov
js
cmps
ror
daa
es
out
scas
inc
mov
bnd
jbe
sub
push
sbb
scas
scas
push
cld
pop
dec
dec
cmp
push
imul
push
int3
mov
fisubr
xor
xchg
fisttp
(bad)
cs
loope
xchg
loope
retf
pop
push
dec
jae
cli
popf
mov
mov
push
ins
test
adc
xlat
hlt
dec
fwait
je
jle
neg
les
ss
xchg
lea
add
fild
or
push
cwde
jg
jle
jmp
aad
fwait
hlt
dec
fwait
push
push
cmp
loopne
cwde
lds
(bad)
mov
leave
sub
pop
test
icebp
popf
outs
pop
jg
inc
cli
bound
jmp
and
ja
enter
repz
inc
neg
dec
movs
ins
lods
aaa
sub
pop
int
outs
jg
mov
push
pmulhw
retf
repz
pushf
lods
popa
mov
clc
movs
push
fstp
xchg
fisttp
mov
xor
jg
es
cmp
dec
adc
adc
mov
fldenv
push
cmp
or
test
sbb
stos
sti
dec
cwde
cmp
dec
or
cld
ror
mov
mov
mov
push
cs
mov
ret
xor
ficomp
loope
push
mov
lds
arpl
pop
fcom
mov
subps
aam
call
inc
and
fsub
popa
out
adc
jo
mov
inc
mov
adc
push
call
call
jae
je
std
icebp
jmp
fs
not
movs
sub
ret
int
shl
add
(bad)
cmp
aas
inc
loopne
dec
hlt
icebp
dec
aad
cdq
out
imul
push
scas
loope
int
lea
add
push
inc
adc
jp
shr
mov
retf
pop
fwait
mov
jbe
(bad)
adc
cdq
jmp
xchg
shr
mov
xchg
or
int3
into
inc
pop
jmp
inc
inc
imul
jae
pop
adc
mov
int
loop
mov
sbb
or
dec
mov
out
dec
push
stc
cmp
jne
inc
mov
sbb
mov
cmc
loopne
out
mov
hlt
jmp
add
fstp
stos
call
and
inc
push
sbb
fld
and
fsub
out
popf
sub
call
cdq
fisttp
ins
mov
mov
bound
mov
pop
es
shl
imul
popa
call
mov
lahf
setb
clc
mov
out
sub
push
adc
mov
stc
sahf
mov
jmp
xchg
cmp
sahf
jnp
scas
and
push
jg
(bad)
xor
retf
jnp
icebp
rcl
sar
adc
ins
jno
jecxz
adc
fbstp
xchg
movs
xor
mov
cli
inc
xor
dec
std
or
push
sbb
pop
enter
cdq
retf
ss
lds
loope
cli
rcr
push
cmp
cmp
push
test
retf
or
aam
inc
pusha
sbb
cmps
cmc
push
mov
add
ror
adc
mov
mov
xchg
cld
ins
leave
scas
fidiv
adc
fs
or
imul
mov
test
je
in
jge
fxch
dec
call
test
aas
or
lahf
fnstsw
les
dec
addr16
(bad)
retf
rcr
daa
xlat
xchg
pop
adc
popa
mov
pop
std
test
dec
push
(bad)
repnz
ffreep
aad
cli
xchg
add
scas
ja
sub
jg
mov
add
retf
shrd
rcl
sbb
add
stos
fsub
imul
add
arpl
add
xor
dec
cs
movs
into
fld
mov
retf
fisttp
push
in
int
adc
dec
mov
mov
or
dec
or
shr
xchg
sub
pop
cmp
push
fist
push
mov
and
cmp
test
mov
xor
add
aaa
mov
mov
mov
or
or
push
inc
test
imul
push
mov
mov
retf
xchg
inc
test
(bad)
cwde
leave
retf
sub
or
sti
aas
xlat
stos
fwait
pop
bound
arpl
or
cmps
or
jmp
and
xor
cli
or
mov
xlat
adc
das
mov
mov
mov
sbb
add
cmp
xchg
call
popa
out
fidiv
in
xchg
shr
stos
mov
push
push
pop
xor
iret
inc
es
icebp
xor
dec
pop
(bad)
xchg
xchg
or
mov
fld
fcom
aas
sbb
scas
jle
les
mov
mov
dec
lods
mov
retf
xchg
inc
pop
std
pop
and
jns
adc
ins
cmp
js
fst
jns
cdq
cmp
sub
pop
mov
xchg
mov
sbb
or
jnp
ror
or
in
(bad)
rcl
xchg
cwde
dec
fs
cmp
mov
sub
mov
hlt
pop
sub
shl
cmp
int3
sub
inc
out
fstp
push
sbb
shufps
pop
or
xor
add
fldenv
sub
dec
mov
aam
lods
popa
popf
xor
arpl
jno
adc
data16
retf
add
shl
(bad)
loope
and
ror
pop
and
add
xchg
push
aaa
mov
mov
mov
pop
mov
mov
rcr
test
out
sub
push
push
or
dec
pop
mov
cmp
sub
ret
or
ss
std
push
jae
dec
adc
add
jg
idiv
(bad)
mov
jns
dec
fadd
out
std
pop
lahf
(bad)
(bad)
daa
push
es
jg
ror
mov
ret
leave
mov
cs
xchg
adc
and
push
mov
jp
inc
or
xor
dec
retf
sbb
cs
adc
sub
dec
jb
mov
inc
lds
push
test
xchg
dec
je
(bad)
movs
pusha
adc
jne
xsaveopt
arpl
(bad)
pop
xchg
jns
inc
mov
fisub
ror
aad
sub
push
cmps
xor
jno
cld
mov
ja
rcr
out
mov
or
data16
pop
push
adc
js
xor
xchg
push
lods
dec
mov
push
(bad)
mov
adc
pop
cmp
cmp
pushf
loop
push
push
pusha
or
sar
pushf
lods
jecxz
fldenv
out
xlat
mov
inc
xor
retf
jns
mov
jbe
sbb
cmps
cdq
mov
add
imul
dec
shr
(bad)
fs
jmp
fnsave
clc
clc
and
out
adc
hlt
sub
(bad)
mov
nop
(bad)
jge
or
adc
or
mov
sbb
inc
or
sbb
dec
xor
cmp
ret
cld
or
or
add
loopne
leave
out
sub
imul
inc
loope
icebp
push
push
dec
rol
cmps
push
mov
sbb
dec
adc
sub
fcomp
nop
mov
mov
fnstcw
push
lods
ins
clc
push
sub
jp
dec
cmps
sbb
(bad)
enter
test
add
jge
pop
sbb
xchg
dec
aam
mov
loop
dec
jo
xchg
xchg
mov
mov
cmps
jo
cmp
dec
push
jae
or
movs
cmp
pusha
xchg
mov
jmp
push
pop
xor
imul
jnp
or
xchg
inc
mov
push
aam
jp
jge
jno
in
mov
mov
jns
inc
(bad)
mov
cmp
push
sub
dec
push
fcmovnb
push
xor
icebp
adc
adc
cmp
inc
sbb
add
movs
push
and
aaa
jo
jl
adc
mov
clc
jg
mov
std
mov
jmp
push
stos
mul
rol
sbb
dec
sbb
mov
push
paddusw
mov
loope
push
iret
mov
adc
xchg
cmp
in
or
add
out
lahf
xchg
xchg
push
sbb
mov
movs
jmp
or
jo
lea
mov
and
mov
cmp
es
jmp
out
jns
inc
iret
neg
push
xchg
push
inc
xchg
adc
std
add
outs
bnd
imul
stos
xchg
neg
mov
(bad)
xlat
or
cmp
dec
inc
push
xchg
sar
xchg
xchg
and
imul
ud0
inc
sub
mov
loop
cmp
in
in
cdq
scas
into
sti
in
inc
(bad)
cmp
fld
xchg
push
jbe
daa
div
idiv
inc
aaa
push
lods
out
mov
aaa
sbb
iret
mov
(bad)
pminsw
jb
jg
pushf
mov
imul
shl
or
sti
pop
shr
jge
push
jmp
mov
fcomp
push
fwait
sub
and
mov
mov
jbe
retf
in
fucomip
sbb
test
jmp
in
jecxz
add
pop
mov
mov
(bad)
mov
push
in
sub
xchg
jbe
jmp
sar
rcr
fsubr
fnstenv
fidiv
out
add
dec
add
mov
dec
xor
(bad)
mov
push
inc
xchg
push
movzx
sar
push
push
outs
push
mov
retf
sar
call
in
nop
jo
dec
and
adc
adc
fwait
add
dec
push
push
mov
add
in
mov
iret
ins
fld
cs
call
sub
aas
sbb
addr16
cmp
rcl
jo
and
adc
stos
mov
test
fidiv
aaa
inc
lock
mov
mov
inc
retf
pop
leave
sbb
aas
sub
test
or
bound
les
int
loope
xchg
or
je
pop
jl
mov
cmps
adc
add
push
jnp
enter
push
movs
pop
movs
xchg
rcr
(bad)
cmc
cmp
or
or
test
inc
aad
rcr
mov
clc
lods
repz
adc
push
push
repz
push
mov
pusha
pop
add
inc
(bad)
out
enter
push
and
sub
test
pop
add
mov
ret
repnz
jmp
or
mov
inc
xlat
loop
int3
mov
loope
and
mov
pop
ret
aas
ror
(bad)
xlat
xchg
or
mov
inc
dec
dec
jmp
pop
jmp
xor
jmp
or
mov
fucom
mov
scas
inc
fsubr
test
retf
sbb
push
jl
cmp
cs
icebp
pop
mov
loopne
xchg
les
shl
inc
int
mov
fist
pop
out
jne
loope
ins
mov
jecxz
xchg
push
push
push
lods
cld
mov
ins
fwait
cmp
stc
pop
lahf
push
cmp
das
ja
popa
adc
dec
cmp
sbb
jl
or
or
inc
xor
inc
xchg
repz
push
jbe
sbb
(bad)
cmp
inc
push
in
in
loopne
and
repz
icebp
push
movs
lahf
sub
cli
add
int
add
push
les
sbb
jle
nop
or
xchg
sub
jbe
fisubr
cdq
jmp
gs
pop
push
mov
fld
shl
mov
mov
rcl
cmp
and
pop
mov
add
dec
xor
mov
xchg
dec
repz
hlt
cmp
stos
add
inc
ja
push
lock
jne
and
stos
rcl
inc
sbb
or
push
lods
loope
mov
inc
shr
jo
ret
icebp
cmc
je
mov
fistp
xchg
aam
xor
adc
retf
push
and
ds
add
(bad)
loope
ss
mov
mov
jecxz
das
xchg
jp
xchg
and
inc
adc
or
les
xlat
pushf
push
jbe
jne
add
ins
pop
ins
jg
mov
in
hlt
repnz
add
sub
and
mov
int
mov
in
mov
push
ja
adc
lods
push
cmp
inc
lock
fistp
(bad)
and
adc
std
imul
push
jae
rcl
cmps
adc
lods
push
fdiv
xchg
or
push
or
sbb
jge
cmp
pop
setns
setl
xlat
sub
repz
test
cmps
imul
bound
ins
mov
jne
ficomp
pop
rcr
dec
mov
int
add
loope
xchg
cld
daa
or
pop
lahf
popa
test
pop
cwde
mov
mov
jae
and
xchg
mov
xchg
push
bound
mov
icebp
inc
sub
mov
add
loope
dec
cmp
pop
and
add
and
mov
shr
stos
xor
hlt
mov
mov
mov
and
adc
push
push
inc
pop
adc
jmp
aas
inc
sbb
add
pop
mov
or
jecxz
inc
test
add
sahf
sbb
mov
dec
ins
retf
and
push
enter
add
aad
(bad)
jmp
cmps
fisubr
call
add
xor
inc
push
and
or
sbb
out
(bad)
into
(bad)
mov
loope
out
pop
inc
push
rol
fxch
int3
test
(bad)
inc
pop
lock
imul
sub
outs
push
adc
dec
mov
xchg
outs
sbb
mov
mov
out
jnp
lds
mov
inc
add
pop
and
xchg
xor
aad
or
adc
push
shl
xor
push
stos
add
lods
pop
add
push
sub
mov
jg
xchg
in
pop
cmp
sbb
call
push
mov
pop
repz
in
xor
mov
(bad)
pop
pop
xchg
push
cmp
out
or
jnp
jmp
in
mov
cmc
in
out
lock
fistp
cmp
push
or
dec
repnz
in
in
xor
ja
jle
mov
cs
mov
out
mov
retf
mov
(bad)
pop
cli
mov
xor
or
test
out
lods
add
or
sbb
shl
pop
aaa
cmp
sbb
xchg
out
add
sub
movs
out
sbb
fucomip
add
and
mov
mov
xor
push
pop
inc
jnp
sti
jle
jae
movs
in
movs
push
scas
push
loope
cs
cmps
retf
mov
xor
pop
addr16
ins
pop
or
fistp
call
inc
retf
mov
push
test
je
stc
call
aad
test
xlat
pop
push
scas
push
mov
sub
ins
mov
push
mov
int
dec
pop
in
addr16
xor
scas
(bad)
out
xchg
lods
stos
fdiv
imul
add
movs
jmp
sub
repz
or
jle
lahf
cmp
lea
popf
mov
test
xor
fld
std
sbb
push
cs
loop
hlt
xlat
popf
mov
das
stc
or
fmulp
inc
outs
and
add
call
xor
es
add
cdq
adc
mov
fsubr
push
icebp
push
pop
jb
jmp
fistp
or
adc
movs
sub
or
sbb
mov
in
mov
ja
retf
cs
mov
icebp
xor
popf
test
dec
push
sub
test
ds
sub
(bad)
add
test
xchg
in
or
retf
inc
mov
mov
adc
mov
dec
jae
pushf
or
push
and
(bad)
add
mov
and
mov
(bad)
outs
sti
dec
sbb
into
cmps
sub
into
or
xchg
sbb
stos
fwait
das
jg
xchg
out
push
cmp
lds
test
scas
stc
jmp
mov
fisubr
stos
cs
jg
and
imul
lods
in
in
jno
dec
dec
inc
test
lea
mov
add
mov
xor
or
lods
push
adc
scas
xor
icebp
pop
cdq
(bad)
stos
dec
movs
imul
fadd
inc
and
push
div
mov
sbb
call
inc
adc
retf
imul
pop
rcl
data16
aaa
out
pop
xchg
sbb
sbb
ret
rol
mov
lods
daa
test
inc
sti
adc
ds
lea
jecxz
js
inc
or
xchg
xlat
dec
loopne
fadd
aaa
movs
outs
sbb
das
cwde
hlt
shl
ret
add
data16
push
lods
int3
lods
mov
pop
sub
repz
inc
mov
or
nop
jae
add
fistp
(bad)
jmp
pop
in
pop
or
inc
and
imul
enter
mov
add
pushf
sti
out
add
fwait
rcr
sub
sbb
(bad)
push
cs
stos
fisttp
mov
sbb
cmp
cdq
cmp
pop
pop
or
stos
add
mov
(bad)
jp
dec
pop
pop
pop
fadd
sti
(bad)
mov
retf
add
test
into
sub
movs
fcmovu
mov
jae
retf
std
dec
xlat
xchg
jns
fwait
test
or
mov
out
push
mov
aad
sahf
fist
xchg
sbb
mov
xchg
(bad)
pop
pop
int3
nop
xor
push
fs
in
sahf
not
xchg
lea
jae
sbb
jmp
inc
xor
outs
push
ds
pop
call
out
adc
nop
fiadd
rcl
lods
out
in
xchg
inc
add
pop
cmp
jle
fsub
arpl
mov
xchg
clc
les
jge
push
(bad)
(bad)
xchg
nop
xor
jg
repz
sti
cmps
repz
jmp
add
loope
stos
sub
ja
push
inc
inc
loope
xlat
jbe
cwde
xchg
out
inc
movs
ins
cdq
cdq
add
sub
sti
xor
sub
push
sub
or
dec
xchg
dec
jb
mov
fs
cld
mov
xchg
sti
xchg
jl
add
(bad)
not
add
mov
das
lahf
xor
and
scas
out
aas
ror
pop
xchg
cmp
pop
cmc
test
mov
add
outs
adc
ins
test
retf
gs
jmp
not
cmp
jecxz
(bad)
ss
mov
add
fsubr
(bad)
jl
daa
mov
into
movs
ss
xchg
pop
loope
rcl
and
inc
out
pop
xchg
adc
cmp
sahf
cmp
xor
mov
bound
mov
jle
adc
aad
mov
fnstcw
(bad)
push
aas
or
jge
retf
adc
int
xor
stos
fisttp
cmp
mov
jge
mov
cmps
sahf
rcl
cmps
cdq
sahf
and
xor
xor
push
xor
aam
push
fild
scas
push
and
push
sbb
jl
fmul
int3
arpl
sub
sbb
dec
imul
push
movs
movs
pop
cmp
mov
cwde
lea
daa
retf
sub
jg
stc
pop
inc
or
jl
test
sub
aaa
dec
imul
call
aad
mov
out
mov
add
daa
cdq
outs
push
fdivr
fldln2
mul
cs
mov
or
clc
pop
jns
out
arpl
pop
and
pop
mov
add
mov
sub
test
xlat
sbb
cmp
adc
int3
imul
mov
popf
int
dec
jmp
add
mov
adc
inc
jle
cmp
scas
dec
call
mov
fcomip
scas
and
jnp
jnp
jle
addr16
mov
pop
mov
mov
(bad)
jb
bound
movs
popf
pop
sti
cmps
jmp
stos
dec
lds
ja
cs
push
jo
xor
pop
mov
mov
sub
cli
dec
sbb
ficomp
add
and
gs
and
outs
dec
push
int3
mov
rol
xor
sar
sbb
sbb
push
sub
test
pop
xor
inc
inc
call
xchg
into
sub
inc
or
xchg
jnp
jp
stos
mov
int3
mov
xchg
or
in
add
in
or
sub
add
int3
sub
or
rcl
fidiv
mov
jno
dec
and
lods
js
popf
jno
fwait
ret
mov
dec
repz
push
push
gs
cwde
rcl
or
ret
mov
movs
rcl
popf
xlat
das
call
in
pop
shl
cwde
xor
fwait
hlt
pop
ficom
xchg
or
pop
cmp
mov
or
outs
push
adc
push
dec
int
(bad)
jb
inc
push
lods
pop
in
adc
repz
cmp
push
sub
mov
dec
xchg
pop
leave
xchg
jl
jmp
out
mov
jne
ja
pop
cmc
mov
sbb
push
pop
jecxz
cld
cli
add
jns
dec
inc
adc
inc
cmc
push
stc
cmp
or
pop
adc
imul
data16
mov
mul
sahf
dec
cmovbe
push
je
mov
cmp
xlat
and
dec
in
call
test
lods
rcl
in
push
rol
or
dec
xchg
pop
out
xor
mov
jno
enter
aas
jns
push
sub
pop
std
jg
loopne
dec
fwait
call
mov
pop
out
adc
ins
cmp
stos
shr
aas
addr16
cmp
xchg
into
xor
sbb
push
sbb
sub
test
dec
fsubr
jnp
(bad)
mov
ja
add
adc
repnz
(bad)
aaa
lods
mov
push
scas
dec
stos
stc
mov
int
repz
int
dec
inc
push
and
arpl
mov
dec
jae
dec
cmp
adc
xor
call
loop
popf
shl
mov
fst
sub
inc
fpatan
cmp
add
inc
add
or
and
push
bound
sar
daa
and
adc
cmp
jle
outs
cmp
(bad)
mov
mov
clc
mov
push
mov
and
mov
ret
mov
jp
mov
shl
test
add
xchg
cmp
sar
das
add
out
and
mov
add
sub
xor
mov
(bad)
cli
cmp
mov
inc
lahf
fsubp
push
jns
cmps
push
inc
add
sbb
push
sbb
stos
fdivrp
push
dec
adc
push
inc
cmp
sub
ds
sub
jecxz
sub
mov
xor
sbb
jnp
jp
loopne
add
retf
jmp
ffreep
fisubr
(bad)
leave
lock
mov
ins
xchg
mov
loope
push
fsub
mov
dec
mov
lods
fisubr
adc
call
or
cmp
sahf
ins
fld
in
rcl
fld
pop
and
push
test
adc
gs
or
cmp
outs
and
jno
aad
mov
out
xlat
(bad)
jmp
ins
dec
inc
mov
jle
mov
mov
(bad)
mov
dec
fs
xlat
test
adc
push
popa
adc
cld
data16
out
mov
push
add
inc
or
mov
out
xlat
test
jp
loop
push
fwait
inc
push
dec
dec
or
fsubr
lahf
mov
mov
jns
add
ret
loope
jno
adc
push
inc
mov
outs
jnp
loope
jae
xor
stc
push
setae
or
or
mov
mov
(bad)
fiadd
lds
inc
or
not
es
in
retf
adc
lahf
xchg
mov
leave
hlt
fcomip
push
xchg
imul
(bad)
cli
cli
add
outs
fs
sbb
in
add
mov
add
cli
jmp
inc
fwait
jmp
xor
in
outs
ror
mov
call
in
test
and
adc
leave
jmp
movs
movs
add
push
movs
pop
movs
xchg
mov
scas
mov
arpl
bound
push
mov
into
inc
xchg
adc
popf
mov
leave
shr
xchg
test
(bad)
sub
es
inc
jle
jmp
(bad)
stc
das
loopne
enter
mov
push
sbb
adc
xchg
cmp
mov
aaa
xor
sti
mov
sbb
and
lods
stos
sti
cmp
shl
jge
and
jle
imul
clc
add
stos
cwde
or
fwait
add
sub
inc
icebp
call
ficom
pop
aaa
mov
jo
cmp
jle
ret
jne
inc
das
lock
sub
repz
inc
retf
outs
lahf
inc
mov
inc
loop
call
and
in
sub
arpl
xchg
cdq
pop
or
sbb
leave
push
adc
(bad)
mov
xchg
lods
jg
xchg
xchg
(bad)
jmp
fild
aas
fisttp
repnz
xor
add
loopne
xor
mov
pop
das
sub
idiv
out
ret
ja
or
push
fistp
test
sub
jmp
or
hlt
add
dec
dec
push
push
add
push
ins
mov
sub
mov
loope
pop
in
imul
pop
bound
sar
lock
jp
push
adc
mov
xchg
push
pop
pop
out
popa
xchg
bound
and
push
mov
or
rcl
(bad)
(bad)
push
adc
test
pusha
xor
arpl
jge
cmp
fs
out
jecxz
jp
sub
sbb
jb
push
push
cmc
gs
dec
add
pop
lods
cmc
test
jg
test
pop
add
imul
xor
mov
sbb
jmp
mov
mov
cmc
xchg
push
or
and
call
xor
rcr
clc
pop
test
mov
(bad)
fsub
movs
push
push
addr16
xchg
add
scas
cs
not
xchg
pop
mov
mov
inc
push
(bad)
loopne
inc
jno
stos
rcl
and
enter
int3
pop
push
dec
adc
in
rol
call
lods
push
cmp
pop
pop
mov
movs
ror
inc
push
pop
(bad)
in
aas
mov
jns
repnz
lods
cs
test
inc
mov
pop
pop
dec
inc
pop
push
loopne
cmps
inc
mov
jne
test
adc
les
ins
stos
out
dec
dec
call
pop
push
sbb
je
mov
fldenv
mov
pop
and
cwde
dec
and
mov
enter
xor
popa
push
loop
mov
fstp
scas
adc
addr16
hlt
pusha
add
enter
jae
jno
fild
imul
lods
add
lds
mov
call
adc
inc
sbb
addr16
lock
cli
call
fcom
pop
fs
aam
jo
add
cmp
pop
xor
inc
fisttp
jno
cli
std
ja
pop
aas
pop
pop
ror
jns
test
or
retf
pusha
adc
mov
mov
xchg
popa
push
mov
mov
(bad)
sbb
outs
dec
cmp
in
mov
push
in
mov
sub
jmp
xchg
and
xchg
mov
add
jp
movs
cmp
enter
adc
pop
cmp
imul
pop
adc
arpl
test
pop
gs
shl
stos
cmp
or
mov
cmp
in
loop
or
or
adc
mov
repz
mov
call
pop
gs
addr16
(bad)
dec
jmp
stos
sub
sub
dec
mov
(bad)
in
or
lods
stc
inc
in
mov
lods
lods
xlat
out
jne
xchg
nop
pop
stos
adc
mov
xor
jmp
rcl
pop
sbb
push
dec
pusha
repnz
adc
push
ss
jge
mov
mov
adc
and
mov
sub
push
inc
aad
es
jl
sub
nop
dec
cmps
mov
aam
mov
push
mov
mov
and
mov
test
mov
std
or
mov
sbb
jl
and
xchg
call
adc
arpl
jae
scas
fsubr
ret
test
imul
cmps
mov
sbb
dec
sub
adc
push
fsub
jl
outs
or
rcl
sbb
repnz
adc
cmps
bound
jmp
push
xlat
add
(bad)
iret
cs
jmp
mov
pop
push
adc
or
jmp
adc
sub
add
dec
mov
lock
inc
mov
pop
popf
imul
push
push
movs
fcomi
jne
das
sti
in
gs
psrld
lock
mov
pop
sahf
stc
mov
adc
ins
mov
les
mov
and
fdiv
pusha
sub
jmp
mov
aad
xor
add
stos
mov
sub
mov
mov
cmp
fisubr
repz
dec
out
(bad)
dec
add
lahf
mov
and
add
mov
das
in
into
cmp
(bad)
jbe
sub
cld
mov
repnz
xchg
mov
ror
int
sub
sub
in
mov
stos
js
xor
loopne
cmp
cmps
dec
pushf
mov
jne
push
jns
stc
mov
aam
push
retf
fsub
hlt
imul
rcl
retf
push
or
and
enter
je
aaa
cmps
mov
test
ins
dec
jg
dec
xchg
outs
or
lds
inc
popa
or
cmp
cmp
add
in
repz
sbb
icebp
lods
inc
sbb
sub
sti
cld
mov
ror
jae
std
dec
dec
mov
mov
dec
cmp
push
or
pop
or
icebp
sbb
inc
std
or
jns
push
mov
call
(bad)
pop
int3
xor
mov
and
add
stos
pop
dec
mov
jae
bound
push
jno
mov
cmp
dec
or
jp
jbe
xor
sub
ror
retf
stc
mov
sahf
shl
xor
aas
repz
sub
ins
and
push
mov
adc
sar
inc
push
pop
dec
fcom
clc
inc
nop
enter
inc
(bad)
rcl
jae
adc
dec
push
daa
jmp
jb
fcmovnb
xchg
sbb
jp
nop
pop
mov
daa
dec
imul
mov
sub
push
xchg
loope
mov
out
setnp
mov
and
daa
cwde
mov
jmp
cs
imul
mov
push
sbb
mov
std
mov
shr
sbb
pop
push
test
fcmovne
push
jmp
cmp
mov
sub
cmp
movs
repz
ret
push
loopne
push
sbb
stos
cmp
scas
cmp
test
cmp
push
(bad)
inc
aas
push
push
sbb
push
sbb
cmp
push
(bad)
call
and
dec
outs
mov
mov
cwde
add
cmp
jb
sub
sub
or
push
scas
adc
mov
jns
popf
jl
xor
repz
fsub
pop
mov
or
xor
pop
out
(bad)
cmps
out
dec
out
test
or
xchg
iret
rol
popa
stos
ins
fnstenv
data16
and
stos
sbb
shl
test
test
add
loopne
call
loopne
scas
hlt
mov
adc
xchg
setbe
in
imul
add
xchg
mov
mov
stos
repnz
in
cs
scas
mov
test
pop
imul
jbe
arpl
(bad)
inc
pop
(bad)
cmps
scas
push
shl
sbb
mov
ins
cmp
repnz
aas
pop
(bad)
out
adc
(bad)
jecxz
iret
mov
fld
add
push
std
add
adc
repz
dec
shl
or
fadd
pop
inc
scas
jno
out
cdq
js
outs
stos
mov
(bad)
repz
icebp
xor
xchg
sub
sbb
lods
sbb
push
retw
adc
ja
fidiv
inc
stos
cmp
cli
sub
pop
das
fst
mov
or
cs
js
mov
shr
adc
dec
dec
mov
(bad)
aas
shl
mov
std
lods
push
pop
xor
sahf
cmp
mov
xor
xor
inc
pop
call
into
adc
retf
jle
sub
adc
or
or
ret
hlt
mov
lahf
jle
cli
ja
push
ror
cmp
mov
dec
idiv
(bad)
xor
jle
xor
dec
mov
push
test
xlat
aas
mov
fistp
pusha
sbb
mov
sbb
nop
ins
jle
or
out
retf
dec
xlat
mov
mov
jmp
mov
mov
cmp
pop
or
inc
ja
gs
mov
inc
aas
fstp
jne
and
jbe
sub
and
inc
mov
jge
mov
pop
pushf
cmc
imul
in
xchg
pusha
or
addr16
popf
mov
or
jne
inc
inc
nop
test
retf
inc
and
fidivr
lock
pop
loopne
dec
inc
arpl
adc
cmp
mov
nop
mov
ja
jg
dec
or
test
inc
add
mov
push
jo
mov
retf
sub
out
add
push
rcl
cli
jecxz
(bad)
dec
mov
int
and
fst
jg
adc
outs
push
pop
aas
shl
jne
push
push
cli
jmp
sub
fwait
aam
mov
popf
daa
xchg
cmc
in
mov
jno
cmps
mov
dec
push
pop
xchg
ror
push
xor
ffreep
ja
inc
imul
sub
shl
imul
call
mov
jle
mov
mov
push
es
rcr
movlps
(bad)
iret
adc
jmp
add
adc
push
xchg
retf
outs
sub
pusha
xchg
mov
add
xchg
add
jmp
sbb
test
adc
mov
and
movs
not
test
das
call
lods
fucom
sub
mov
or
jo
scas
inc
dec
loop
leave
lds
std
movs
mov
sub
mov
pop
sbb
sbb
inc
cwde
call
ror
push
mov
push
int
ficom
adc
out
test
div
(bad)
data16
push
pop
(bad)
mov
add
mov
jmp
das
push
adc
mov
int3
es
mov
ffree
sub
inc
mov
stos
xor
sbb
jo
fstp
pop
test
sub
sub
test
imul
mov
adc
mov
and
mov
dec
jnp
jnp
jo
mov
int3
call
fisub
cmp
outs
shl
and
jb
loop
outs
cmps
retf
aas
mov
(bad)
lods
fsub
mov
and
test
push
sti
adc
pop
add
mov
add
scas
fstp
push
aaa
not
nop
adc
xchg
mov
shr
xor
and
push
and
test
int3
mov
rcl
mov
test
outs
mov
jbe
xor
repz
js
sbb
push
sbb
(bad)
aaa
int
cwde
movs
daa
test
minps
push
dec
lods
adc
movs
xchg
ins
or
repnz
jmp
jns
inc
out
mov
test
loop
mov
out
push
mov
xchg
cs
sbb
setge
repz
cli
test
fld
cld
ins
pop
mov
cmp
repnz
inc
fidivr
xchg
sbb
cwde
push
pop
aad
dec
mov
ins
push
jns
jmp
in
xor
xchg
mov
mov
daa
(bad)
in
sub
xchg
sbb
cmp
mov
push
xor
not
repz
dec
sub
jp
mov
test
test
(bad)
sahf
dec
mov
sub
mov
inc
out
pop
jne
sub
xor
pop
out
dec
test
dec
imul
mov
mov
dec
cmp
bound
add
dec
mov
clc
add
popf
or
(bad)
arpl
pop
hlt
icebp
push
mov
pop
iret
test
(bad)
std
data16
sbb
leave
gs
sbb
(bad)
inc
in
ss
jl
loopne
rdtsc
mov
out
cld
mov
icebp
mov
and
dec
inc
jg
imul
pop
je
shl
push
(bad)
inc
dec
mov
mov
xor
(bad)
ret
jns
sbb
(bad)
add
push
out
fiadd
dec
and
jmp
daa
lods
or
loope
imul
adc
iret
inc
(bad)
pusha
std
(bad)
iret
mov
push
dec
push
mov
inc
addr16
or
push
and
movs
loope
xchg
sbb
xor
lock
cmp
xor
dec
std
pop
ficomp
mov
cmp
mov
push
xchg
in
pop
shl
cld
dec
sub
rcl
cmp
fmul
gs
out
cmp
es
test
jmp
retf
int3
rol
mov
in
xchg
aaa
outs
xchg
loopne
rcl
stos
xor
ja
es
rol
out
leave
adc
jbe
pop
scas
mov
jae
add
sbb
retf
pushf
jg
add
mov
xor
enter
lock
lea
push
mov
mov
add
adc
dec
cmp
or
inc
out
fbld
ds
pop
jo
mov
xor
jecxz
imul
pusha
jle
fdivr
inc
stos
adc
and
xchg
or
jmp
jl
sar
pop
rol
push
mov
pop
or
adc
shr
fbld
dec
push
dec
popa
sbb
xchg
fdivr
xchg
imul
fwait
or
pop
cmp
stc
fimul
dec
mov
jae
cmp
icebp
jnp
aaa
adc
mov
pop
gs
shl
or
add
rcr
or
push
and
(bad)
xchg
std
in
inc
xchg
adc
adc
in
(bad)
inc
sahf
push
addr16
cli
(bad)
sbb
inc
lods
adc
fdiv
lahf
movs
and
jle
aad
jp
mov
arpl
or
mov
xchg
movs
push
icebp
popa
xchg
sbb
movs
push
idiv
rcr
retf
dec
inc
mov
cdq
mov
dec
cmp
xor
adc
scas
cmc
cdq
jg
mov
sbb
push
add
das
or
fbstp
test
scas
mov
fwait
in
mov
shl
or
mov
cli
jmp
pushf
inc
leave
dec
mov
fstp
add
cdq
fbstp
push
imul
mov
sub
jl
mov
xchg
or
les
sahf
pop
jo
ins
inc
dec
xor
enter
dec
aad
xchg
sub
cld
xor
inc
adc
or
inc
ja
and
es
mov
fs
enter
imul
xchg
nop
jb
add
retf
mov
jnp
es
ficomp
jle
jle
and
add
sar
(bad)
push
push
fld
jns
mov
sahf
loop
call
jns
mov
pop
sub
pop
lahf
mov
imul
or
add
pop
xor
xlat
lahf
into
lock
sub
int3
or
push
mov
shr
(bad)
mov
fsub
pushf
mov
sbb
cmp
mov
(bad)
sbb
into
lods
cs
fisttp
daa
mov
(bad)
jmp
enter
add
jge
add
movs
and
(bad)
adc
pop
and
fidiv
push
rol
pop
adc
sar
sbb
lds
pop
lods
mov
dec
jae
gs
mov
mov
mov
jne
add
stos
mov
cmps
aaa
mov
jecxz
xchg
outs
sub
mov
and
xchg
outs
pop
dec
mov
xchg
xchg
push
ret
pop
pop
lahf
push
push
and
shl
aad
fidiv
sar
pop
test
iret
cmps
and
cmps
sti
jno
cmp
jne
hlt
shl
pop
push
and
call
mov
pop
jnp
sub
sub
call
rol
cmc
mov
out
mov
pop
dec
test
add
aad
and
jecxz
fisttp
adc
xchg
inc
inc
movs
sar
inc
sub
shr
inc
ficom
call
adc
inc
push
or
mov
ja
mov
movs
fldcw
jge
push
and
xor
js
hlt
inc
add
repz
mov
push
jecxz
es
mov
or
js
jno
pop
and
push
jnp
imul
jno
xchg
adc
fwait
xlat
push
or
cmp
sti
xor
stc
mov
xor
jp
xchg
call
daa
gs
(bad)
push
add
out
out
sub
shr
or
sbb
inc
or
aam
mov
inc
mov
js
clc
or
mov
retf
je
cmc
mov
sahf
mov
ins
inc
sahf
xor
fiadd
add
xor
cwde
xlat
mov
retf
mov
retf
inc
repz
out
sbb
ret
call
and
sub
mov
fnstcw
stc
xor
pop
imul
sahf
das
(bad)
jmp
lds
xchg
sub
mov
movs
cmps
inc
cmps
sbb
iret
sub
jg
sbb
sub
stc
aam
xor
leave
iret
outs
mov
inc
sbb
jns
out
sbb
sti
call
pop
lods
add
xchg
in
jne
pop
bound
sub
xor
test
jae
cs
addr16
inc
popf
push
inc
leave
nop
in
hlt
jl
lock
stos
xor
pop
jmp
mov
lods
jbe
mov
movs
adc
(bad)
fmul
cmp
push
test
inc
scas
adc
xlat
xor
fs
pop
or
dec
in
ds
movsx
cmps
jp
jne
sbb
pop
repnz
lea
jno
(bad)
in
jp
mov
dec
jmp
xchg
xchg
lea
dec
sub
(bad)
sbb
fistp
leave
cmp
je
mov
repz
sti
clc
lods
jno
xor
xchg
aam
mov
sub
push
mov
repz
inc
push
mov
mov
sub
sbb
sbb
icebp
jg
loopne
xabort
add
inc
adc
xor
mov
test
outs
sub
(bad)
push
pop
mov
daa
pusha
xor
mov
movs
movs
push
mov
int3
(bad)
sub
pushf
aas
test
pavgb
nop
jle
fist
xchg
xchg
mov
mov
dec
cmps
mov
int
repz
or
jge
mov
movs
mov
shl
pop
aaa
add
dec
lds
sbb
(bad)
retf
mov
int3
mov
add
ja
add
call
loopne
cmps
out
jo
xor
outs
adc
dec
push
adc
movs
xlat
jne
jnp
movs
fnsave
and
adc
add
add
test
dec
mov
mov
jo
jmp
adc
aad
jne
mov
mov
mul
fld
jle
cmps
int3
movs
bound
lods
cmp
cmp
pusha
rcl
pop
retf
lods
adc
pop
std
xor
xchg
mov
stc
xor
xor
adc
repz
jl
mov
call
in
outs
out
jle
xchg
and
iret
add
mov
dec
mov
pop
(bad)
jmp
xor
pop
aam
movs
dec
push
out
das
adc
push
in
mov
(bad)
js
mov
int3
fcom
and
ret
jb
dec
or
mov
fisub
ds
ffree
xchg
fcmovu
aaa
push
stos
jmp
das
movs
hlt
jmp
sbb
retf
or
leave
jmp
sti
dec
add
das
(bad)
dec
dec
push
jl
ja
cmp
test
int
dec
shl
outs
cmp
rol
jecxz
jae
jne
mov
and
push
jmp
shr
(bad)
std
or
mov
retf
jmp
nop
mov
dec
cmp
adc
lds
cmp
stos
test
xchg
cmp
aaa
xchg
mov
test
inc
push
iret
stos
add
fisub
sbb
loope
or
jp
jmp
mov
push
pop
jae
dec
into
test
clc
pop
cs
xchg
xchg
paddq
cmp
imul
add
mov
mov
xor
cdq
xchg
mov
loope
xchg
loopne
jmp
jne
cdq
xor
mov
retf
ds
mov
call
fs
aaa
outs
push
jp
add
je
jl
repnz
out
ret
mov
mov
xchg
movs
hlt
js
aas
js
je
ret
jns
outs
sbb
jl
jecxz
out
sbb
push
jae
dec
in
ret
mov
pusha
test
mov
ss
call
outs
sub
sub
or
pop
pop
pushf
and
call
fsubr
mov
or
sbb
push
out
fsub
popa
and
ss
(bad)
(bad)
mov
mov
mov
out
and
int
push
adc
sub
push
test
gs
stos
sub
sub
mov
stos
cmp
cmp
mov
movs
mov
mov
ret
das
stos
popf
stc
push
and
mov
mov
fistp
call
aad
popf
xor
xchg
adc
or
sub
mov
push
adc
fmul
jle
pusha
mov
jno
fwait
sar
stc
pop
mov
mov
sti
xchg
inc
cmp
(bad)
popf
sub
xor
push
adc
cwde
inc
sahf
mov
cdq
call
xchg
adc
jmp
aaa
cmp
sub
push
loop
pop
add
movs
iret
test
and
inc
loopne
push
jmp
dec
in
cmps
cmps
out
(bad)
inc
fld
inc
push
retf
mov
inc
push
icebp
sub
std
test
or
fs
retf
push
sahf
mov
dec
aam
mov
cmps
push
fwait
aad
pop
into
cmp
sbb
or
sub
shl
mov
mov
mov
jns
cmp
pop
stos
gs
jne
fidivr
rcl
fbstp
mov
jb
mov
jb
mul
mov
jne
cmp
mov
pop
push
dec
inc
iret
or
mov
(bad)
lahf
xor
jecxz
scas
sbb
adc
test
or
jp
adc
out
and
xchg
int
mov
nop
inc
fisubr
imul
(bad)
xor
aad
cmp
aam
xchg
xchg
test
cmps
mov
pop
test
and
jmp
mov
jp
ficomp
add
pop
dec
pop
push
fs
xchg
aad
push
sahf
adc
mov
mov
ins
pop
jbe
push
or
push
mov
out
xchg
mov
xor
into
lods
adc
pop
int
in
mov
jno
sbb
int
rcr
xor
sbb
es
fiadd
xlat
(bad)
sub
inc
fucomip
(bad)
cmovg
cmp
adc
inc
xor
cmps
outs
mov
enter
xchg
xor
movs
mov
in
mov
mov
xor
cld
cmp
dec
add
hlt
lahf
test
pop
lods
sbb
or
dec
mov
xchg
push
cs
cmps
ficomp
test
jl
mov
loop
jl
sbb
mov
dec
mov
retf
out
inc
test
icebp
xor
mov
cdq
shl
push
int3
mov
in
enter
and
mov
push
mov
or
adc
jno
arpl
jecxz
ja
mov
fdiv
cmp
xchg
inc
out
or
xor
fcomp
pop
adc
mov
push
cmp
mov
dec
shl
sbb
sbb
push
ret
loope
pop
pop
mov
retf
pop
mov
sar
and
(bad)
nop
lods
inc
inc
add
add
jmp
cmp
fisub
(bad)
(bad)
in
jge
mov
dec
or
add
lds
mov
ins
mov
xor
inc
mov
pop
sahf
pusha
gs
mov
into
mov
or
sbb
test
xor
and
(bad)
iret
not
jg
loope
mov
cmps
xchg
lods
mov
outs
fst
push
test
inc
or
jns
cld
enter
data16
add
pop
and
cmc
dec
cmp
ja
ret
sbb
ficom
ret
lahf
and
inc
add
ficom
mov
add
adc
xchg
(bad)
(bad)
and
inc
cmp
clc
nop
pop
sub
loope
rol
add
popa
sbb
sbb
in
dec
add
jb
ss
cdq
sub
mul
cmp
data16
(bad)
pop
fistp
ror
test
or
into
dec
xchg
test
cli
mov
inc
push
ds
leave
jno
in
push
or
nop
out
mov
out
nop
ss
faddp
scas
retf
push
sub
jle
jge
leave
and
add
and
das
mov
fisttp
ja
pop
into
retf
jnp
xchg
mov
cdq
jns
lock
sub
sbb
in
fiadd
es
or
pushf
push
(bad)
inc
movs
out
mov
mov
pop
mov
popa
push
mov
mov
(bad)
cmp
dec
xor
(bad)
out
push
push
dec
(bad)
(bad)
sahf
int3
test
mov
das
mov
mov
pop
ins
push
jae
inc
xchg
or
xchg
ds
dec
add
push
lods
js
xchg
call
rcr
cmp
ins
sub
js
add
xlat
pop
bound
adc
icebp
test
adc
xor
mov
sahf
ja
adc
push
push
(bad)
jb
xchg
push
stos
mov
or
or
and
cmp
(bad)
fld
jg
jbe
adc
dec
(bad)
fadd
retf
outs
loop
push
add
and
dec
scas
mov
leave
push
aaa
inc
cmp
outs
sub
push
fistp
stc
outs
pop
stos
xchg
out
fadd
mov
mov
jmp
jmp
inc
pushf
sti
cmps
jge
mov
inc
rcl
sbb
mov
imul
lock
jge
mov
cmp
inc
dec
pop
cmp
sub
or
es
sbb
imul
outs
dec
sbb
retf
xchg
push
gs
mov
add
or
xor
inc
adc
(bad)
sbb
dec
movs
xor
fisubr
aas
stc
fld
out
jmp
add
xchg
int
cld
call
(bad)
mov
adc
xor
nop
cs
addr16
add
adc
dec
jmp
push
pmulhw
test
popa
call
jecxz
and
push
aam
push
push
push
outs
fsubr
es
into
and
jne
jae
outs
sub
xor
imul
push
push
pop
das
xor
and
cmp
imul
pop
test
sbb
fwait
push
mov
pop
leave
inc
add
xchg
mov
mov
fwait
lods
in
retf
js
adc
in
(bad)
inc
iret
cmp
div
push
cwde
sub
sub
inc
pop
popa
cmp
enter
leave
sbb
fwait
jo
sbb
xchg
xchg
aad
and
(bad)
xchg
(bad)
(bad)
shl
stos
or
inc
xor
adc
mov
out
sub
cs
jo
rcr
inc
cmp
pushf
mov
push
lods
mov
add
pusha
mov
shr
dec
pop
movs
fld
or
bound
sub
(bad)
mov
in
xor
xchg
sbb
jmp
dec
adc
xor
mov
sub
sbb
jo
push
loope
xor
enter
sub
out
xchg
shl
dec
sbb
jmp
and
cmc
or
retf
clc
pop
xchg
add
loop
cmp
mov
sbb
mov
sbb
das
loopne
sbb
aam
stc
dec
aad
je
jnp
ret
lock
xor
add
sbb
gs
int3
popf
inc
out
add
lock
dec
daa
ret
mov
ret
pop
inc
fxch
call
or
jg
sar
fcmovnbe
inc
sbb
push
sti
or
mov
dec
aad
hlt
ficomp
push
jp
iret
jle
inc
pop
cmc
call
push
fcmovbe
cmps
fiadd
mov
mov
mov
add
or
and
pop
out
jg
int
pop
cmp
cld
mov
pop
je
xchg
sub
ins
add
cs
hlt
cwde
iret
push
xor
mov
out
cmp
xchg
pop
inc
out
rcl
lss
test
fsub
ins
rol
in
dec
pop
mov
mov
fild
rcr
mov
jge
cmp
(bad)
mov
xchg
xor
xor
cmp
push
xchg
stc
add
pop
cwde
test
leave
test
fisubr
add
mov
sub
jg
pop
mov
adc
sbb
aad
mov
(bad)
iret
mov
or
xor
inc
mov
jno
or
dec
and
repnz
mov
data16
inc
cld
push
iret
mov
call
xchg
push
jge
stc
retf
out
lahf
xchg
and
or
xor
popf
cmp
in
sub
mov
inc
sub
pop
adc
pushf
jb
ins
in
xor
push
(bad)
push
pop
and
mov
mov
jge
jnp
pop
xor
dec
cmp
mov
loopne
sub
adc
mov
enter
es
into
dec
out
ins
not
ss
adc
punpckhbw
sbb
pop
add
pushf
mov
sahf
popf
dec
mov
or
retf
sub
xchg
div
sbb
retf
sub
aam
push
pop
(bad)
sbb
and
pop
mov
fstp
repz
mov
xor
pop
sub
xchg
cmps
push
(bad)
movs
ret
nop
pop
repnz
popa
(bad)
sub
and
pop
mov
imul
clc
fsub
in
fld
(bad)
and
cmps
sbb
out
rsm
pop
mov
loop
in
adc
push
add
adc
dec
lods
es
cmp
add
mov
cld
cmp
in
cmp
or
mov
mov
inc
ss
xchg
push
mul
and
lds
fidiv
ret
sub
les
clc
rcr
xchg
mov
push
inc
retf
sub
and
psubusw
mov
test
xchg
call
sbb
es
pop
fadd
scas
imul
aad
fild
jmp
add
inc
ret
leave
mov
or
sbb
(bad)
ficomp
xchg
jns
jo
push
jecxz
and
ret
ins
xchg
lods
mov
mov
and
out
popf
cmps
inc
int
mov
dec
dec
and
mov
ds
push
push
push
sub
les
aam
lahf
dec
mov
add
repnz
movs
mov
inc
push
(bad)
outs
dec
shl
cmc
aad
and
ins
out
adc
push
mov
sub
pop
sbb
loopne
add
inc
xor
retf
adc
and
cmp
cs
adc
jl
fiadd
sbb
lods
push
shr
mov
pop
stc
add
mov
xor
neg
jecxz
sbb
fcmovnu
(bad)
ds
cmps
mov
popf
lahf
inc
push
cmc
jg
xchg
or
adc
ja
fist
sbb
fmul
mov
pop
out
cmp
mov
pop
scas
sbb
mov
xchg
adc
loop
xchg
stos
xchg
mov
ret
push
pop
inc
push
adc
js
sbb
pusha
xchg
loopne
pop
mov
mov
loope
into
push
or
jno
pop
pop
out
sar
(bad)
es
and
push
pop
les
jge
scas
or
(bad)
jo
out
mov
sbb
fwait
and
mov
or
sbb
dec
mov
add
or
ds
test
pushf
icebp
pop
adc
sbb
(bad)
lock
or
in
mov
add
nop
inc
mov
mov
and
daa
mov
push
call
cmc
push
push
je
leave
idiv
aam
mov
push
xchg
dec
and
(bad)
and
inc
pop
push
pop
lea
idiv
mov
push
jmp
mov
dec
cmps
push
push
shl
adc
mov
retf
into
mov
add
in
sub
add
cmc
outs
jb
out
icebp
stc
mov
out
in
push
out
into
pusha
in
mov
outs
fdivr
fnsave
inc
adc
and
retf
rol
sub
ret
adc
cs
sti
imul
out
nop
add
and
fisub
xchg
imul
cdq
cmp
or
push
out
jge
add
aaa
and
cs
jge
fwait
in
adc
inc
lea
loop
pushf
test
mov
push
fidiv
stos
jmp
dec
mov
xor
mov
mov
pop
cmps
pop
or
les
(bad)
push
jae
sahf
mov
cli
push
stc
(bad)
mov
repnz
shl
scas
and
jmp
aad
in
and
mov
push
or
jp
push
pop
daa
add
or
xchg
xchg
mov
jp
jne
and
add
pusha
xor
add
mov
imul
rcl
std
mov
call
mov
xchg
mov
pop
inc
test
cs
jmp
mov
and
dec
cmp
pop
fisubr
xor
leave
outs
repnz
std
loope
mov
mov
add
ret
inc
mov
sbb
dec
dec
out
imul
out
stc
pop
or
sbb
dec
adc
clc
scas
push
popa
sub
loope
call
mov
pushf
jae
ror
push
fsub
ins
rcr
addr16
dec
xchg
popf
adc
data16
fwait
mov
dec
fnstenv
mov
clc
jo
lds
mov
(bad)
in
loope
sbb
cmps
int3
or
xchg
mov
test
cli
int
jno
dec
sahf
mov
test
or
popa
mov
(bad)
adc
mov
jg
inc
pcmpgtw
cdq
pusha
mov
ins
(bad)
js
movs
(bad)
xchg
dec
sub
xor
add
nop
push
pop
jmp
into
and
jmp
fld
adc
push
lea
add
adc
inc
and
fdiv
jnp
inc
add
adc
or
ss
retf
and
stc
jb
out
retf
movs
fcmove
cdq
loop
cmps
pop
leave
mov
sbb
push
fcomp
pop
cmp
sar
mov
shr
jnp
fdiv
(bad)
jne
retf
sub
rcl
push
adc
cmp
jmp
push
lods
adc
mov
pop
sar
icebp
jb
bound
out
fiadd
add
cmp
aam
push
pop
mov
(bad)
pop
rol
push
std
xchg
mov
xchg
sbb
cmp
mov
pop
jo
icebp
and
xor
inc
call
call
or
lds
mov
ret
fcom
rsm
push
call
enter
cmp
adc
mov
mov
rcl
lods
shl
inc
mul
ins
(bad)
aaa
sub
mov
in
push
sub
aad
inc
les
xor
dec
ss
retf
aas
outs
xchg
fs
mov
and
adc
into
jae
(bad)
pop
xor
call
jbe
mov
jnp
scas
add
loope
std
fwait
ror
sub
ret
fs
cmp
out
add
retf
cmc
sbb
push
sbb
mov
fist
clc
pusha
icebp
xchg
adc
stc
movs
jmp
lods
push
outs
push
and
mov
fs
shr
leave
jo
and
sub
sahf
jge
cmp
andnps
sbb
movs
sti
add
data16
push
sbb
xor
pop
add
(bad)
lods
ror
sbb
cmp
in
cmp
or
sub
repnz
arpl
retf
test
stc
out
pusha
xchg
aas
mov
cs
outs
shl
pop
sub
neg
in
or
jne
adc
repz
mov
sub
leave
int3
addr16
(bad)
ja
adc
mov
pop
push
out
and
popa
(bad)
enter
ins
imul
sub
push
lods
jle
jnp
mov
retf
inc
lock
mov
bound
out
and
test
add
adc
scas
pusha
pop
dec
dec
out
(bad)
xor
sub
xchg
inc
sub
ret
xchg
data16
push
cmp
xor
fsub
xor
aas
lock
xchg
mov
in
aam
repz
mov
or
sub
pop
test
retf
in
addr16
sbb
xchg
xlat
adc
fwait
imul
xchg
sub
(bad)
mov
in
ja
or
cmps
xor
pop
lods
fnstsw
push
and
lods
loop
cli
inc
scas
mov
(bad)
imul
push
dec
ins
lods
aam
cmp
out
leave
cmp
js
push
xlat
jno
and
mov
jno
addr16
mov
mov
or
pop
adc
les
xor
mov
xor
and
sbb
sbb
mov
fstp
sbb
test
pushf
mov
fidiv
cmp
aad
cdq
je
(bad)
dec
loopne
cwde
scas
jp
push
jl
sub
test
fcomp
dec
lock
push
fadd
in
int3
xor
adc
test
cmc
adc
test
movs
(bad)
inc
pop
pop
fwait
push
adc
in
imul
int
lahf
(bad)
in
xchg
jne
push
cmp
ret
cmp
ret
jae
mov
ins
jns
jne
sahf
ins
mov
mov
not
cmp
mov
movs
iret
add
mov
int3
bound
pop
test
shr
dec
in
mov
enter
push
mov
or
mov
xchg
mov
sbb
xor
repnz
call
hlt
add
jo
stos
leave
xchg
or
xor
mov
cmp
daa
sub
pop
daa
fcom
lds
cmp
nop
mov
pop
xlat
mov
iret
add
retf
inc
add
ficom
push
mul
in
ins
pop
int3
jge
cwde
xor
retf
mov
(bad)
jmp
push
loop
popf
aam
or
push
and
inc
mov
and
gs
mov
movs
dec
aam
fstp
mov
mov
lds
sbb
jns
and
or
in
sbb
(bad)
pop
ins
(bad)
jmp
xchg
pop
mov
xor
xchg
jge
pusha
mov
add
push
popf
psubusw
jg
sti
xchg
adc
arpl
add
mov
ret
sti
dec
rcr
(bad)
fistp
rcr
jmp
dec
jecxz
push
bound
repz
ret
test
jbe
mov
xor
xor
popf
mov
jo
fistp
cmps
test
xor
scas
sub
popa
and
xor
in
in
jecxz
mov
pop
pop
bound
adc
add
sub
push
xor
mov
ror
fcom
sbb
adc
jae
retf
jmp
icebp
mov
bound
cmps
(bad)
leave
push
mov
into
or
popf
mov
jbe
xor
dec
jmp
(bad)
iret
cmp
pop
sti
xlat
pop
mov
jne
adc
push
cmc
aaa
cmps
push
xchg
dec
add
das
mov
aaa
test
and
ret
dec
lea
jp
aaa
push
fbstp
jmp
in
mov
in
lds
and
mov
jmp
inc
shl
lds
pop
cli
in
mov
pop
xlat
movs
jl
add
pop
mov
jecxz
ret
iret
cmps
adc
mov
out
pop
(bad)
out
mov
jp
mov
fisub
push
fcomp
jp
inc
xchg
fnstcw
pop
fisttp
mov
push
fild
inc
mov
dec
jecxz
inc
shr
push
shr
out
add
push
stos
js
mov
jnp
push
inc
(bad)
ror
cmps
pop
jbe
retf
dec
mov
dec
sbb
je
stc
and
xchg
add
push
mov
call
adc
loop
sub
jmp
out
sub
xor
mov
daa
push
ret
(bad)
aam
jecxz
and
fwait
outs
repnz
push
dec
jnp
fwait
test
mov
gs
dec
pop
cmps
or
adc
scas
pop
sbb
sbb
xchg
cmp
xchg
adc
sbb
icebp
and
or
push
std
jb
push
daa
xchg
sub
mov
ds
lods
dec
adc
test
sbb
in
inc
shr
data16
movs
cmp
ficomp
jmp
das
push
pop
out
and
adc
cmp
xchg
jle
adc
mov
dec
xchg
sub
xor
adc
dec
repz
retf
dec
inc
mov
push
in
(bad)
mov
add
cmp
bound
scas
sub
and
push
and
jp
or
aaa
xor
cmp
jle
sbb
mov
add
push
mov
xchg
std
push
mov
mov
icebp
retf
or
sub
aas
popf
xor
in
mov
cdq
inc
push
jae
stos
movs
inc
pop
jge
pop
xchg
jo
or
in
popa
and
mov
(bad)
or
push
out
sub
inc
sub
mov
sbb
lods
out
pusha
aas
jns
xchg
sbb
sub
inc
jno
or
jecxz
xchg
xchg
(bad)
xchg
xchg
push
push
and
fimul
dec
mov
test
push
sub
aam
push
fidiv
mov
dec
sbb
mov
cmc
xor
jl
cmp
or
sbb
push
pop
std
movs
rcr
add
and
adc
fsub
cs
xor
or
push
xchg
push
mov
ja
pop
add
sbb
(bad)
loope
cmp
(bad)
cmp
push
popa
jo
sbb
(bad)
mov
mov
dec
ins
repnz
lods
xor
jmp
jp
repnz
mov
dec
div
sub
pop
mov
inc
(bad)
out
and
cmp
jns
push
out
mov
xchg
xchg
aad
add
xchg
lds
ins
or
shr
imul
pop
repnz
pop
push
mov
inc
mov
or
cmp
sbb
adc
into
jge
outs
mov
jo
sbb
into
fimul
imul
dec
push
jo
ja
pusha
shr
rcr
or
jno
fidiv
js
add
(bad)
aad
mov
xchg
dec
arpl
adc
pop
mov
aaa
into
sub
push
(bad)
push
or
enter
loopne
pop
xchg
add
je
xchg
arpl
jb
cmp
(bad)
fsubr
push
push
jmp
mov
xor
sub
xchg
push
adc
inc
aam
push
rol
rcr
xchg
mov
in
push
inc
fcmovnbe
daa
dec
cmc
mov
or
rcl
inc
data16
xchg
movs
daa
enter
popa
lahf
psubusb
call
dec
and
xlat
rcr
jge
mov
into
call
int3
sbb
movs
sbb
mov
sar
or
cmps
xchg
ret
fistp
push
imul
fmul
out
adc
(bad)
fisubr
jmp
add
pop
mov
lahf
or
xchg
out
lds
movaps
push
in
popf
test
mov
xlat
pop
loope
and
enter
and
lahf
xchg
test
sar
out
test
inc
jbe
(bad)
and
fcmovu
adc
xor
sahf
jnp
leave
(bad)
and
xchg
pop
cmp
jne
fld
in
cwde
xor
int
int3
xor
xor
push
neg
leave
bnd
adc
jecxz
clc
add
cmp
xchg
dec
dec
es
push
push
int3
and
pop
or
lea
mov
push
xchg
sbb
push
sahf
xchg
mov
lahf
mov
push
sar
cwde
out
dec
loop
jmp
xchg
push
jbe
test
ja
xchg
mov
dec
pop
jp
push
int
jle
(bad)
sbb
jo
mov
leave
out
or
in
popa
pop
mov
cmp
jo
imul
popf
push
sahf
inc
int3
mov
or
leave
jno
div
jb
mov
jns
fwait
adc
push
iret
(bad)
push
cmp
jge
jbe
push
jns
fisttp
mov
mov
retf
imul
(bad)
jmp
add
adc
stos
jnp
push
mov
mov
cld
int3
inc
sbb
(bad)
rcr
or
xor
fisubr
cmp
rcr
pop
fnsave
push
jbe
loop
(bad)
push
xchg
and
and
xchg
pop
mov
inc
lahf
mov
int3
dec
pop
push
in
or
fsubr
add
and
gs
lods
scas
shl
xchg
push
(bad)
sbb
fwait
aas
push
cwde
(bad)
(bad)
call
js
or
pop
repnz
outs
fild
dec
fstp
test
in
fistp
dec
test
int
(bad)
mov
xchg
mov
test
jbe
mov
sub
cmp
scas
inc
outs
push
js
pop
ja
sub
mov
jo
lahf
jmp
add
push
xchg
dec
lds
outs
mov
sbb
add
lods
add
mov
mov
jle
add
fldcw
int3
or
bound
pusha
stos
and
stc
cmp
sub
adc
pop
lock
xchg
mov
(bad)
cld
jmp
in
inc
out
ss
fild
inc
ins
dec
test
daa
pop
mov
pop
add
and
aaa
mov
ins
mov
aam
jle
ficomp
(bad)
arpl
loope
outs
loop
int
pop
aad
push
cmp
cld
rol
popf
jp
nop
dec
stc
in
fsubrp
movs
push
adc
push
daa
mov
pop
push
dec
mov
and
push
bound
cmp
mov
push
test
imul
ficom
and
xchg
cs
mov
int3
jl
and
gs
xlat
test
das
xchg
dec
fisub
das
aam
shl
fnstsw
mov
add
iret
push
in
pop
adc
mov
nop
ss
fs
mov
stos
xor
xchg
mov
imul
lods
int
sub
mov
lock
and
ficom
je
push
pop
xor
repnz
jp
jmp
rol
add
mov
mov
xchg
add
adc
lock
mov
dec
das
xor
or
jno
fisttp
mov
(bad)
xor
pop
pushf
(bad)
out
shl
jg
retf
xchg
enter
mov
scas
sub
inc
xchg
fstp
pop
in
out
inc
push
leave
push
ds
push
mov
jns
add
or
cld
fs
imul
int
sub
mov
sbb
cmps
div
in
lds
aad
cwde
push
or
jmp
or
cmp
add
ret
jle
xchg
cmps
nop
shr
mov
dec
outs
pop
push
adc
ins
cmp
xor
sti
lock
xor
in
mov
xchg
adc
jp
shr
sub
repnz
imul
ins
xlat
dec
ins
lds
retf
push
or
mov
and
aam
fwait
and
outs
add
int
mov
out
add
inc
pop
mov
or
gs
pop
jle
mov
xchg
(bad)
push
lock
cmps
addr16
sub
xor
ins
iret
ds
aad
test
push
imul
push
dec
inc
loop
sbb
(bad)
jl
imul
mov
push
and
xor
pop
inc
mov
adc
pusha
dec
inc
(bad)
mov
cmp
jbe
push
cmp
sbb
cwde
lds
cmps
scas
cmovl
push
outs
push
mov
popf
inc
jno
daa
or
test
pop
add
pop
inc
pop
push
dec
sub
fwait
mov
inc
sbb
inc
fstp
fstp
in
jb
lahf
or
(bad)
mov
pop
shr
cmp
mov
add
mov
mov
mov
xchg
push
lea
jns
stos
jmp
cmps
lahf
and
jno
fsubr
mov
bound
imul
adc
jbe
sbb
ins
mov
cmps
mov
enter
mov
int3
retf
push
sub
sbb
sbb
rcl
stos
icebp
pop
sahf
mov
push
dec
ss
sub
and
sbb
fbstp
mov
xor
and
jo
xchg
sub
adc
cs
inc
or
test
push
pop
xor
mov
xchg
xor
hlt
arpl
fnstenv
push
push
arpl
sbb
out
fldenv
or
jb
add
fild
iret
xor
mov
stos
adc
push
adc
mov
push
lods
mov
fs
xchg
popf
mov
xor
outs
fimul
cmps
push
outs
jmp
retf
retf
fsub
aad
push
aad
outs
fmul
imul
cmp
rcr
or
outs
and
xchg
cmp
arpl
int
ins
scas
pop
(bad)
enter
mov
imul
fild
ja
xlat
mov
aam
jbe
pop
dec
jbe
sbb
adc
add
in
jnp
dec
fistp
push
jo
mov
data16
pop
ins
dec
or
(bad)
and
(bad)
push
adc
inc
mov
and
add
xor
cmp
jnp
jecxz
in
dec
pusha
pop
lds
test
lea
cli
inc
scas
xchg
gs
test
js
int
ins
sbb
jbe
in
and
xor
mov
retf
sub
lods
retf
mov
or
popa
clc
ret
in
aas
mov
mov
test
adc
(bad)
push
rol
sub
dec
xchg
out
leave
sbb
push
add
fs
popf
test
add
retf
jl
(bad)
sub
or
dec
xor
jmp
mov
cmovnp
mov
js
mov
cdq
and
ds
adc
and
in
les
imul
lea
repnz
inc
test
adc
jecxz
or
retf
rol
aaa
xchg
jle
adc
push
pop
inc
ins
iret
jbe
adc
sbb
push
push
xchg
mov
ficom
ret
cmp
jae
mov
(bad)
icebp
scas
clc
push
mov
mov
sbb
call
jecxz
notrack
adc
sub
add
call
mov
daa
mov
leave
cld
and
dec
(bad)
inc
mov
rcr
xlat
lahf
xchg
pop
add
jae
mov
xor
sar
lea
cmp
xlat
inc
push
mov
push
push
add
jbe
xchg
les
jns
fstp
sub
loop
xchg
dec
movs
cmp
cmp
push
add
clc
pop
jne
pop
adc
test
or
fsub
jp
(bad)
test
mov
shl
push
cs
mov
lods
jae
pop
or
imul
cld
(bad)
xor
mov
rcr
ins
inc
inc
jnp
stos
jecxz
push
arpl
cmp
xchg
push
push
(bad)
adc
sub
dec
push
cmp
push
inc
push
add
cli
stos
cmps
mov
(bad)
push
adc
xor
lock
fist
fisttp
scas
jmp
xchg
pop
pushf
jge
add
fild
sahf
in
adc
popf
not
outs
pop
inc
clc
call
fs
jecxz
dec
xchg
test
das
retf
mov
cmp
inc
dec
clc
fdiv
mov
pop
lahf
mov
push
cmp
push
sbb
test
(bad)
cwde
sbb
mov
rcr
push
cmps
pop
cmp
xchg
fwait
dec
pop
int3
dec
movs
jle
loopne
scas
xchg
cmp
mov
dec
push
adc
jnp
mov
out
mov
leave
inc
outs
and
or
into
mov
out
add
out
add
sub
xchg
fdiv
xor
out
pop
sbb
inc
int
cmp
outs
not
mov
imul
jmp
pusha
mov
mov
jmp
es
aam
add
add
pushf
fwait
cmps
or
add
pop
sub
add
xchg
shr
out
call
nop
xchg
push
nop
and
sti
sbb
lods
into
mov
cs
retf
(bad)
leave
mov
adc
cmp
xchg
ss
mov
mov
cmp
ss
pop
adc
sbb
mov
stos
mov
cld
sub
dec
inc
xchg
scas
bnd
loope
jb
shl
jge
arpl
cmp
in
fsub
pop
push
movs
outs
(bad)
cld
sbb
aaa
or
cmc
mov
call
dec
fld
jb
scas
xrstor
cwde
sbb
cld
mov
xor
je
cmp
cmp
xor
lods
fld
sti
mov
(bad)
int3
in
jmp
stos
nop
fist
je
push
das
cmc
ror
dec
imul
add
mov
mov
and
or
cdq
pop
fisub
ret
movs
mov
cmp
data16
scas
shl
pop
dec
mov
adc
call
xchg
sahf
sbb
jbe
cs
add
stos
mov
cmc
data16
xlat
sbb
mov
xor
ins
inc
sub
mov
or
pop
pop
jp
adc
loop
mov
data16
cli
xchg
pop
pop
pushf
xchg
das
mov
cmp
outs
cmp
int
mov
mov
call
push
(bad)
call
js
in
adc
mov
clc
in
xchg
sbb
sbb
data16
(bad)
(bad)
mov
push
loop
jno
int
stc
push
pusha
cmp
fcom
(bad)
jl
add
push
jg
add
mov
ins
push
scas
das
retf
push
rcl
xor
(bad)
mov
dec
aaa
addr16
ficomp
adc
outs
aaa
push
dec
sub
xor
inc
imul
aam
std
xchg
enter
pop
retf
mov
ja
dec
fmul
add
aaa
repnz
and
out
jecxz
sbb
inc
cmp
inc
out
or
xchg
jp
mov
dec
ss
sar
xlat
mov
mov
push
jne
out
cmps
mov
scas
rol
cli
aad
int3
hlt
fnstcw
pusha
pop
mov
rcl
mov
std
lods
out
xor
jge
test
adc
int
call
xchg
sbb
pop
sub
dec
frstor
lods
pop
aaa
lods
add
sub
ficom
pusha
(bad)
lds
sbb
push
and
nop
das
or
xchg
xchg
mov
movs
or
jp
iret
shr
lods
mov
(bad)
js
jbe
mov
repnz
cmps
lock
ret
cmp
sbb
jbe
push
sbb
cmp
add
cmp
cli
xchg
cmp
ins
sub
leave
or
xchg
mov
rcr
iret
dec
sub
loope
and
xchg
mov
add
xor
lea
push
mov
xlat
aas
int
push
jecxz
cld
xchg
mov
ins
sbb
ficom
mov
push
xchg
rcr
and
lahf
xor
nop
jmp
dec
test
aas
xchg
mov
popf
mov
or
adc
dec
retf
sub
mov
ss
dec
js
int3
cmp
dec
(bad)
mov
rcr
movs
adc
aas
pushf
adc
pop
inc
(bad)
jecxz
and
(bad)
ficom
das
jmp
push
ins
jb
pop
fs
divps
out
dec
inc
pop
test
mov
(bad)
(bad)
jp
lea
fistp
add
loopne
push
lahf
push
inc
and
lods
fucomip
xlat
pop
int3
pop
dec
arpl
adc
sub
add
xor
adc
mov
scas
add
call
outs
scas
ficomp
dec
push
jecxz
jmp
xor
sub
stos
cmc
outs
jae
lea
jbe
and
dec
and
pop
das
xchg
data16
popa
mov
mov
push
(bad)
cs
add
icebp
inc
xchg
adc
push
push
cmp
cmp
std
or
mov
cmp
jge
inc
arpl
sbb
ins
movs
aas
aas
pop
adc
push
jp
mov
in
add
or
lds
mov
(bad)
xor
js
jle
data16
popa
test
mov
push
xchg
or
test
(bad)
in
push
mov
das
cmp
mov
fadd
or
popf
mov
sub
inc
fisub
mov
mov
inc
cld
cmp
mov
int
mul
ins
cmp
movs
data16
addr16
pop
push
stos
leave
and
xchg
and
inc
iret
cwde
ja
cmp
in
push
lds
sub
push
leave
jae
sbb
test
movs
pop
aaa
repnz
mov
sbb
push
loopne
jl
out
mov
jo
movs
or
loop
pop
js
dec
out
inc
movs
ds
mov
mov
aas
out
lea
rcr
adc
test
jmp
(bad)
test
inc
aas
and
lea
inc
sub
sub
xor
(bad)
mov
mov
movs
je
fwait
lock
jp
imul
and
sahf
xlat
ins
test
cmp
ins
ins
test
mov
mov
dec
xor
outs
retf
add
sbb
stc
push
dec
aaa
xlat
leave
iret
xor
xlat
jmp
mov
inc
es
pop
mov
push
xlat
pushf
fstp
sbb
push
test
push
xchg
or
in
and
pop
hlt
outs
lods
cdq
sbb
xchg
mov
jmp
imul
jl
mov
pop
cld
jo
stos
int3
mov
pop
in
stos
pop
cwde
aam
fcomp
clc
scas
ins
xchg
out
fmul
jecxz
(bad)
sbb
fisttp
mov
fwait
adc
mov
mov
test
adc
gs
cmp
and
test
cmp
nop
inc
ret
xor
jns
mov
push
cmp
xchg
or
push
fcomp
xchg
cmp
outs
sbb
dec
adc
adc
push
dec
pop
push
dec
sbb
xchg
ret
movs
clc
retf
loop
adc
fwait
jmp
mov
xchg
popf
jmp
xchg
mov
or
repz
enter
lahf
js
lods
call
jne
fisttp
dec
inc
adc
imul
addr16
push
jns
xlat
add
loop
out
and
icebp
add
loope
les
push
mov
les
sbb
sbb
nop
(bad)
xchg
rcr
sbb
inc
add
fcmovu
(bad)
mov
cmp
ss
jo
cld
sub
(bad)
or
and
dec
mov
push
and
in
pop
pop
iret
pop
jbe
test
fimul
sbb
push
cmps
xor
test
cwde
or
push
mov
shl
mov
push
mov
mov
(bad)
jnp
jo
or
mov
movs
vpmulhw
push
ins
mov
jnp
adc
lods
mov
cdq
pop
loopne
rdmsr
jno
call
(bad)
or
push
xor
mov
retf
(bad)
jbe
mov
mov
xor
mov
or
jbe
pop
retf
cmps
pop
jecxz
hlt
pop
xchg
neg
in
xchg
rcl
pop
jb
hlt
xor
adc
movs
sbb
push
sub
xchg
xchg
loop
loope
ja
and
push
xchg
cwde
(bad)
icebp
dec
xchg
dec
(bad)
jmp
imul
in
rcl
jmp
add
pop
jo
das
js
pop
and
in
rcl
push
adc
loopne
inc
aad
bound
mov
aaa
enter
mov
dec
pop
inc
(bad)
mov
mov
jb
pop
mov
pop
pop
and
add
cmp
sbb
into
fistp
lods
(bad)
mov
mov
push
ja
mov
shl
icebp
fwait
mov
sbb
cmp
or
push
jo
(bad)
aad
ror
sar
and
in
sbb
sbb
std
les
push
jno
push
(bad)
cli
out
or
int3
aam
dec
fmul
in
lods
icebp
pop
stos
xchg
and
pop
jb
xchg
mov
or
jno
imul
cmp
or
mov
rol
in
dec
mov
cmp
leave
xchg
push
cmc
push
cld
or
mov
add
jp
sahf
repnz
xchg
inc
dec
push
add
fbstp
cbw
xor
xlat
test
aad
popa
aaa
mov
cmp
push
aam
adc
rcl
pop
pop
push
stos
js
push
not
and
aad
mov
mov
mov
inc
movs
mov
sub
or
push
(bad)
xrelease
mov
jo
fs
xor
lea
test
jbe
dec
out
xchg
xchg
cmps
data16
out
jp
je
jmp
popf
call
lea
ins
(bad)
push
xchg
loop
mov
(bad)
and
loopne
repz
retf
mov
fs
aaa
scas
cmc
das
or
xchg
dec
pop
xor
popa
addr16
rol
inc
adc
fild
popa
sbb
icebp
or
sbb
ins
add
fwait
cmp
xor
xchg
movs
cmp
jae
push
stc
xchg
adc
sbb
lea
(bad)
mov
add
js
mov
cdq
mov
in
xchg
push
pop
fnstenv
in
call
lds
pop
xchg
imul
in
imul
fs
iret
paddb
call
sbb
xchg
pop
inc
and
ds
movs
sub
inc
sbb
xchg
pop
or
pop
mov
(bad)
add
adc
jp
mov
xor
arpl
add
scas
mov
push
rol
loop
push
push
inc
inc
test
sub
jl
mov
mov
pop
cld
mov
inc
in
lea
push
pop
cwde
sub
sub
fld
leave
(bad)
mov
inc
or
sahf
leave
add
xor
xchg
sub
outs
jl
(bad)
call
push
add
ins
inc
mov
out
in
inc
sub
dec
sub
mov
retf
sub
cld
aaa
sar
outs
int3
and
jle
add
xor
jmp
and
imul
mov
pop
cmp
mov
inc
and
outs
inc
nop
mov
jmp
add
xor
inc
mov
mov
mov
jp
enter
popf
rcl
out
jb
dec
xchg
ins
cwde
int3
cwde
sbb
dec
test
aam
aaa
dec
jb
div
and
push
push
arpl
mov
cdq
repz
test
pop
jae
pop
adc
hlt
call
and
dec
int3
push
lods
xchg
xchg
adc
popf
call
cs
jl
bound
inc
scas
push
fisttp
xor
sub
mov
inc
clc
test
(bad)
pusha
xor
ss
pop
fimul
data16
ds
ret
xchg
addr16
out
inc
hlt
or
jecxz
sub
ret
pushf
push
sub
sub
xor
dec
jl
fstp
pusha
rcr
cmp
mov
mov
mov
adc
inc
sbb
push
mov
(bad)
stos
adc
adc
sbb
leave
int3
in
push
std
popa
imul
cmp
loopne
pop
mov
add
jae
aam
addr16
cdq
stc
lea
jnp
in
popf
cmp
jg
pusha
xchg
ins
cli
sbb
nop
adc
dec
add
aas
fucomi
into
adc
sti
pushf
ins
xchg
xchg
outs
sbb
in
dec
outs
out
jmp
test
sub
lea
xchg
push
int
(bad)
outs
call
jo
std
icebp
lea
or
cmp
sahf
cmp
xchg
and
dec
je
cmp
daa
jne
jne
pop
fcom
in
ret
aad
sbb
and
sar
cli
and
add
mov
aas
jmp
xorps
sub
jle
loop
and
mov
fbld
ret
mov
mov
push
call
test
in
ja
shr
outs
cmps
adc
psubusb
push
movs
add
in
cmp
out
or
and
mov
adc
in
sbb
jmp
test
ficom
and
sti
adc
dec
mov
jl
pop
adc
lods
ret
mov
hlt
mov
jno
cdq
lock
aad
and
ficom
fs
sti
sbb
mov
xor
cli
inc
pmulhw
ins
mov
cld
cs
ins
lock
into
push
push
lock
push
xchg
xchg
cld
adc
fsub
cld
jmp
nop
retf
sub
xchg
push
cdq
fwait
aam
mov
mov
xor
jbe
inc
cmp
inc
jmp
(bad)
pop
inc
dec
inc
lahf
mov
and
mov
lock
imul
and
xor
jne
stos
call
lea
lds
js
cmp
lods
int3
inc
dec
inc
cmps
int
lods
ins
and
int3
repnz
add
call
add
ret
ds
inc
stos
daa
(bad)
out
xor
xor
mov
add
sbb
inc
fistp
add
das
daa
aas
or
and
stc
cdq
std
pop
loop
adc
inc
div
mov
call
int3
dec
xchg
shr
outs
inc
cli
jnp
mov
(bad)
out
(bad)
mov
pop
cmps
add
imul
add
push
and
xor
inc
imul
sbb
int3
push
or
sub
stos
inc
shl
outs
nop
mov
cmc
xchg
mov
mov
and
or
add
mov
icebp
cmp
pop
sub
cs
(bad)
dec
leave
or
push
enter
sti
inc
adc
rcl
fldcw
outs
das
or
outs
clc
call
fst
aad
xchg
jnp
movs
or
fstp
jg
push
lods
sub
cmp
cmp
fidivr
sub
mov
in
pop
pop
mov
sbb
mov
sbb
pop
shl
xor
popf
movs
pop
mov
imul
int3
mov
or
scas
shl
jnp
pop
icebp
inc
pop
pop
push
sbb
or
rol
sub
dec
add
call
jns
int
leave
into
push
jo
jbe
push
and
lods
pop
mov
add
push
in
sbb
sub
clc
and
mov
addr16
adc
dec
sbb
jbe
adc
inc
retf
js
pop
inc
and
or
adc
test
add
sbb
pop
xchg
xor
ds
movs
je
out
mov
fdivr
or
inc
fild
mov
xchg
lock
xlat
or
lahf
push
mov
imul
leave
int3
adc
mov
in
jmp
in
jmp
dec
cli
pusha
and
mov
dec
movs
rcl
mov
xor
inc
call
push
xchg
push
cdq
push
cwde
push
in
(bad)
xchg
inc
inc
mov
adc
add
lods
(bad)
out
shl
cmp
jns
dec
push
add
mov
pop
test
push
add
sbb
pop
ficomp
push
cmp
xchg
sub
mov
in
je
or
int3
cs
sub
outs
mov
scas
xchg
xchg
inc
push
mov
les
(bad)
cmp
adc
mov
test
xchg
and
out
push
xor
call
xchg
sub
shr
in
aam
sub
push
sub
dec
xchg
mov
aam
push
adc
int
imul
or
scas
jle
push
rol
out
mov
js
loop
cli
bound
js
inc
aam
sub
pop
push
lods
cmp
pushf
stos
rcl
inc
shr
adc
inc
or
xchg
mov
je
shl
add
mov
dec
add
sub
lods
aas
lock
dec
inc
retf
pop
jg
sahf
aas
jge
ret
ds
and
mov
add
dec
add
and
mov
(bad)
fcomp
loope
aam
popf
outs
leave
imul
shld
sub
xor
mov
daa
in
pushf
xor
push
pop
sub
test
and
mov
xor
xor
mov
dec
sub
xor
(bad)
lods
mov
ret
ret
in
scas
sub
(bad)
dec
pop
fadd
cmps
cdq
ret
and
jle
(bad)
hlt
ins
pop
loop
mov
and
loop
sbb
fidivr
mov
cmps
and
xor
pop
shl
cld
fiadd
loopne
pop
jbe
mov
push
call
sbb
add
adc
sbb
shl
mov
into
adc
add
inc
inc
xchg
xchg
pop
cmps
shr
inc
add
(bad)
adc
xor
sti
push
call
ret
and
fmul
rol
lea
cmp
and
ds
inc
ss
cmp
xchg
mov
push
es
cli
imul
and
(bad)
jge
ret
sub
push
mov
adc
pop
hlt
fwait
jns
mov
stc
cmp
sahf
bnd
test
fcomi
xchg
push
sub
xor
push
fist
retf
retf
mov
int3
fstp
fidiv
jb
xchg
jmp
jle
and
dec
xchg
cmp
jns
imul
mov
jb
sahf
sub
sahf
add
rcl
dec
jns
inc
lds
aam
fs
scas
stos
add
sub
xor
data16
retf
mov
cmp
lock
loopne
mov
fild
sti
fbstp
es
xor
push
cmp
ret
mov
cmp
into
jbe
or
add
aas
and
arpl
out
mov
xchg
cmp
movs
inc
xor
dec
ror
outs
adc
ds
mov
shl
popa
idiv
push
jo
dec
adc
dec
push
jmp
xchg
push
sbb
mov
pop
call
inc
nop
mov
popa
mov
jmp
gs
cmc
jb
cmp
mov
jno
iret
out
dec
popa
imul
loope
fdiv
mov
(bad)
stc
mov
mov
mov
xchg
ins
and
pushf
js
int
fcomp
add
loope
fistp
mov
adc
cmp
dec
cs
sub
push
les
or
icebp
push
(bad)
cmp
inc
push
adc
cmp
aas
retf
(bad)
add
sbb
fisttp
shr
jmp
sub
mov
mov
movs
xchg
jp
jns
mov
(bad)
add
sbb
repz
ret
movs
inc
into
and
push
sbb
pop
add
mov
pop
scas
cmp
int3
mov
add
clc
xchg
or
sbb
rcl
in
sti
xor
in
repnz
rcr
scas
xor
xor
sbb
scas
jns
pop
xor
push
add
cmp
test
stos
jle
pushf
or
aas
clc
cmp
mov
xchg
pop
ins
enter
dec
lea
mov
xchg
push
es
sub
or
mov
outs
mov
js
jg
mov
cmp
pop
not
enter
test
sbb
fidivr
adc
cwde
sbb
add
lods
fwait
sar
dec
rcl
cmp
mov
cmp
mov
add
push
jg
push
(bad)
mov
(bad)
int
sub
jnp
gs
jge
cli
in
adc
and
mov
jb
push
test
js
xchg
xchg
jb
popf
pop
test
xchg
sahf
jl
add
mov
xchg
in
icebp
test
clc
sub
push
cmp
pusha
xchg
jg
scas
push
dec
gs
std
call
pop
mov
jge
cmp
push
mov
lock
not
cli
ror
lods
pusha
dec
cmp
rol
xor
fsubr
cmps
dec
xor
mov
pop
push
stc
adc
fst
pushf
fdiv
push
addr16
ret
xchg
and
cmp
clc
movs
and
xchg
ins
int3
aaa
sti
out
pop
call
(bad)
call
xor
sbb
ret
jmp
dec
lds
inc
or
xor
xor
mov
sub
or
mov
clc
btr
sub
arpl
ss
rol
sub
ficomp
and
ins
dec
inc
sub
mov
push
les
adc
and
out
pusha
in
std
leave
or
or
lods
int3
xor
inc
es
das
mov
pop
jg
mov
xchg
cs
adc
mov
push
sbb
sbb
jae
(bad)
mov
loope
test
popa
out
cmp
fcom
pop
xor
mov
cli
pushf
mov
xchg
sbb
pop
jmp
mov
pushf
mov
jg
idiv
inc
aaa
maxps
je
lea
mov
xor
std
loope
or
cmp
in
add
out
and
jae
and
inc
lea
push
fdiv
in
sar
or
add
sbb
popa
inc
fadd
or
dec
jmp
jl
push
push
pop
hlt
add
outs
dec
add
popa
ins
sub
sahf
dec
mov
pop
sar
cmp
sbb
popa
sub
jge
mov
stos
imul
cdq
jb
retf
add
dec
xor
nop
out
test
movs
xchg
shl
cmc
or
(bad)
lock
call
pop
lahf
call
arpl
mov
into
bound
mov
div
xchg
push
add
pop
out
cmp
nop
inc
push
and
mov
pop
pop
or
or
ja
ins
add
pop
dec
sub
sti
xor
repz
retf
and
mov
ins
arpl
pop
in
repz
stc
int
cmp
inc
dec
rol
js
xor
test
xor
adc
cmp
cld
je
and
leave
movs
loope
pop
jae
cmps
push
mov
dec
out
mov
dec
scas
or
ins
mov
outs
hlt
lods
test
pop
sub
in
fiadd
and
js
loopne
adc
push
leave
inc
mov
add
jmp
(bad)
outs
retf
imul
cwde
in
in
sti
aad
jge
pop
dec
aaa
inc
xor
jae
leave
js
sbb
stc
and
aas
mov
mov
cmp
movs
es
fst
call
and
loop
mov
cmp
sbb
lahf
inc
js
cmp
mov
add
and
or
ds
mov
loopne
arpl
xor
or
(bad)
mov
jg
mul
das
ror
fcomip
test
(bad)
(bad)
xchg
in
xchg
retf
push
sub
inc
or
or
adc
je
or
cmp
jp
das
pop
adc
scas
xor
add
mov
adc
ret
pop
mov
xchg
dec
adc
and
push
mov
cmc
pop
es
mov
fnsave
dec
or
int3
fisubr
(bad)
(bad)
xchg
ret
adc
ins
add
add
push
mov
aad
in
les
push
mov
outs
cmp
jle
scas
push
adc
fsubr
jecxz
fwait
imul
add
and
arpl
inc
or
fstp
jne
dec
fnop
push
pop
add
es
loope
scas
dec
add
sub
rol
mov
addr16
cmc
push
not
inc
inc
sbb
dec
sar
pusha
xor
push
popa
lock
push
pusha
xchg
add
(bad)
xlat
pop
mov
add
sbb
cs
and
push
fnstsw
int
push
ins
push
popf
call
or
retf
loope
popa
xlat
xchg
add
mov
xchg
cmp
mov
and
sub
dec
xchg
xor
nop
div
or
xor
and
adc
outs
or
or
jns
adc
pop
adc
pop
repz
and
xchg
xlat
mov
inc
gs
mov
jle
stc
pop
loopne
ret
and
repz
xor
jg
repnz
jae
jmp
xchg
pop
(bad)
jmp
xchg
pop
fwait
mov
cld
jl
mov
(bad)
cmp
and
mov
outs
cmp
(bad)
sub
repz
cmps
pop
lahf
sbb
in
mov
mov
xor
add
in
out
sbb
imul
inc
and
push
jmp
out
dec
inc
popf
jle
out
enter
or
jae
shr
xor
adc
movs
sbb
or
(bad)
fnstsw
mov
jae
or
or
fldcw
test
addr16
xchg
mov
jmp
cmp
arpl
cmps
dec
and
push
xchg
adc
xor
pop
jns
ja
nop
cmps
adc
sub
mov
sub
in
(bad)
aad
ds
dec
add
data16
pushf
xchg
add
mov
int3
mov
mov
mov
pop
aam
bound
(bad)
mov
xor
cwde
(bad)
xchg
ja
gs
xchg
in
test
push
movs
imul
test
pop
js
cmps
push
adc
hlt
sub
pop
xor
and
hlt
loop
dec
mov
push
mov
mul
int3
cmp
loope
jp
pushf
jl
mov
rcl
xor
hlt
outs
aam
sahf
mov
int3
sub
js
jmp
inc
xchg
mov
ret
stos
dec
lock
int
adc
mov
out
retf
fcom
jnp
(bad)
inc
add
movs
call
mov
ret
(bad)
xchg
push
sub
jg
hlt
pop
mov
sbb
inc
stc
mov
arpl
int3
jae
jno
inc
pushf
cmp
les
outs
dec
inc
cli
mov
call
inc
std
add
mov
xlat
push
ret
imul
retf
shl
jno
fnstenv
sub
pop
add
cmp
inc
xor
pop
add
and
sub
add
adc
cmps
jmp
adc
mov
mov
mov
je
jae
jo
mov
bound
or
xor
out
out
(bad)
int
jle
cs
stc
push
cmps
mov
lahf
hlt
pop
test
es
push
jmp
pop
dec
fmul
out
push
add
mov
sti
das
leave
mov
push
int3
jb
jns
aas
test
daa
push
mov
cmp
pop
jae
cmp
xchg
in
dec
push
in
test
xor
out
mov
dec
mov
stos
push
pop
stc
retf
mov
jmp
pushf
movs
int
int
adc
repz
(bad)
push
pop
popf
pmaxsw
sbb
jno
(bad)
pusha
xchg
push
pop
jmp
sahf
mov
or
cmp
pop
sbb
fldcw
xor
adc
push
jae
into
push
outs
adc
push
mov
call
sbb
cmps
mov
sahf
test
mov
bound
mov
sbb
sub
jmp
out
cmp
and
cli
lods
daa
pop
fldcw
movs
gs
mov
or
sbb
test
push
std
sub
sar
sbb
test
add
jb
inc
cmp
xor
jbe
mov
movs
inc
sub
cmp
pusha
test
xor
out
fiadd
addr16
mov
push
jl
pusha
adc
push
push
xor
inc
ins
(bad)
(bad)
fistp
pcmpeqd
adc
sub
fdecstp
pop
cmp
jecxz
pushf
jbe
je
pop
add
inc
sub
mov
xchg
(bad)
xchg
call
push
push
dec
std
adc
pusha
mov
mov
xchg
inc
test
fisttp
push
mov
pushf
push
mov
push
xor
xchg
and
test
retf
ficomp
ja
rol
adc
mov
and
push
rcr
xor
in
or
lods
xor
sub
or
and
or
or
add
lea
mov
add
(bad)
(bad)
hlt
in
fcomp
loop
cmp
into
fcom
xor
xor
sub
push
inc
in
test
call
test
add
push
and
jle
pop
mov
test
retf
cdq
mov
mov
pop
sub
xor
inc
retf
add
mov
loop
xor
cmp
mov
dec
pop
repz
push
adc
jl
lahf
repz
gs
xchg
mov
mov
imul
jecxz
xor
popf
or
jmp
mov
sub
adc
add
outs
sbb
pusha
xchg
(bad)
xlat
aas
pusha
sbb
push
mov
arpl
inc
lods
std
cmp
push
dec
sub
lahf
movs
int
mov
mov
pop
sub
pop
lds
sti
(bad)
scas
retf
sti
clc
ret
dec
push
retf
mov
outs
dec
shl
lds
pusha
or
cmp
int3
push
push
jae
jge
pop
mov
or
repnz
call
sub
sub
clc
cmp
cld
in
fdiv
cmp
pop
push
jbe
dec
xor
(bad)
pop
xlat
push
pop
add
mov
xchg
dec
inc
xchg
sahf
mov
outs
push
mov
(bad)
les
test
cmps
push
clc
aas
shr
mov
mov
lods
mov
inc
cmp
pop
inc
std
mov
or
cwde
xchg
cli
mov
push
out
pop
lea
repnz
test
out
push
das
lods
ds
lea
mov
ins
adc
jnp
cmc
test
and
imul
imul
push
mov
or
dec
stos
mov
sahf
fadd
xor
test
pop
pop
fnstsw
push
mov
inc
xor
loop
dec
push
xchg
call
loopne
loopne
popa
push
rcl
(bad)
push
(bad)
(bad)
sub
arpl
sub
(bad)
out
xchg
mov
leave
leave
iret
(bad)
call
push
mul
xchg
jnp
dec
(bad)
push
scas
mov
ror
inc
test
shl
outs
fcomp
jmp
mov
loope
into
cmc
pop
iret
es
test
mov
dec
fldcw
xor
ror
fs
sub
pop
xchg
stos
pop
scas
cmp
or
mov
adc
adc
ja
pop
add
cli
int
mov
xchg
inc
mov
in
sar
shl
xor
(bad)
cli
pop
push
cmps
dec
or
and
pop
scas
adc
ret
cmp
sub
out
mov
inc
loopne
cdq
loop
ret
jecxz
jl
jecxz
pop
ja
mov
sub
push
push
mov
mov
pusha
hlt
int3
cmp
fwait
adc
cmps
cmp
and
jbe
lds
jp
mov
mov
mov
daa
popa
movs
dec
dec
xchg
(bad)
shl
add
cmp
out
imul
xor
sbb
sar
or
push
jg
or
clc
fs
xlat
repnz
fistp
test
out
adc
jg
data16
hlt
test
fild
push
loope
mov
adc
in
xchg
lea
pop
sub
push
shl
sub
add
rol
cmp
cmc
cmp
dec
inc
movs
clc
sub
push
pop
add
imul
imul
dec
sbb
(bad)
call
ja
pop
pop
mov
sbb
add
jnp
pop
add
mov
dec
repz
sbb
cwde
sub
sbb
cmp
js
repnz
cs
xchg
add
xor
test
dec
mov
gs
test
ss
dec
cmps
mov
mov
arpl
test
and
xchg
daa
adc
mov
ror
push
iret
mov
scas
std
popa
push
adc
push
push
mov
xchg
retf
aaa
dec
inc
and
ficom
ficomp
dec
fbstp
icebp
pop
(bad)
cmp
ret
stc
mov
inc
inc
mov
mov
inc
push
pop
mov
and
pop
lds
xchg
mov
jae
mov
sar
ds
mov
movs
xchg
test
sub
pop
pusha
mov
in
fist
inc
pop
mov
push
in
lahf
mov
mov
ret
loope
inc
pop
repz
inc
test
pop
aad
mov
jecxz
cmp
pop
dec
stc
ror
sub
ss
adc
fld
fnstsw
daa
mov
adc
adc
jg
js
imul
loopne
retf
xchg
ficomp
mov
jnp
cmp
call
test
leave
std
pop
xlat
leave
cmps
(bad)
jmp
pop
fs
fimul
push
test
adc
sub
mov
mov
push
xchg
mov
xor
inc
xor
sbb
mov
addr16
mov
push
xor
frstor
adc
push
ja
xor
sub
ficom
inc
gs
jmp
dec
add
pop
ds
xchg
ins
sub
jae
out
std
or
push
xlat
movs
(bad)
push
sbb
test
pushf
mov
movs
jmp
adc
mov
daa
mov
inc
call
sbb
inc
mov
out
aad
xlat
xchg
in
out
sahf
cmc
mov
mov
test
ins
add
loop
fwait
lds
jb
ja
test
mov
loope
inc
jg
sub
dec
xchg
and
popf
and
retf
pop
pop
pop
xchg
pop
jmp
jmp
cmp
fbstp
add
mov
sar
aas
(bad)
or
(bad)
mov
movs
aam
push
or
mov
fsub
ins
or
jp
push
xor
jmp
sbb
shl
sbb
js
jns
(bad)
and
mov
imul
add
out
dec
lods
sub
in
(bad)
mov
rcr
(bad)
shr
cmp
mov
fisubr
adc
xchg
mov
pop
loop
(bad)
arpl
inc
movs
jmp
or
in
mov
jl
inc
arpl
inc
enter
or
frstor
jmp
or
enter
mov
sub
push
mov
fidiv
(bad)
mov
repnz
std
lods
fsubr
mov
stos
pop
and
push
fisubr
mov
cmp
push
or
push
adc
pop
dec
sbb
mov
push
fild
or
inc
inc
and
cs
push
mov
push
leave
push
stos
das
jle
add
xor
div
xchg
daa
repnz
daa
or
jle
nop
fisubr
sub
xchg
adc
pop
sub
ss
xchg
nop
int
pop
and
pop
jmp
fist
jmp
inc
mov
and
jb
push
xchg
addr16
test
mov
dec
mov
xchg
and
pop
xor
(bad)
cmp
inc
inc
ds
into
and
push
cmp
sub
retf
(bad)
pop
xlat
mov
adc
and
push
mov
xor
xchg
hlt
mov
fldcw
ror
inc
or
mov
or
adc
in
inc
iret
(bad)
and
pop
xor
data16
jp
repz
push
pop
outs
inc
lds
clc
add
mov
jno
inc
cmp
add
je
sub
push
mov
or
or
gs
xor
mov
cmp
out
out
out
stc
ss
or
adc
push
aas
mov
icebp
lahf
loope
mov
cdq
arpl
aam
pop
in
pop
jmp
sub
adc
inc
es
out
xor
lea
fsub
std
daa
iret
inc
and
fsub
jle
mov
jns
jmp
loop
mov
mov
and
sbb
and
add
sbb
imul
dec
push
and
outs
adc
or
fcom
sbb
aaa
mov
and
dec
repz
sub
and
xor
je
inc
sub
mov
test
sub
fwait
xor
jo
xchg
idiv
mov
jne
pop
xor
sub
inc
pop
mov
jnp
xor
pop
imul
jnp
jmp
and
jg
add
fwait
add
xchg
push
mov
sub
es
adc
das
push
cmp
cmp
rcl
mov
repnz
mov
cmc
jno
dec
(bad)
fldlg2
pop
xchg
pop
mov
pop
pop
adc
push
xor
mov
cmp
mov
stc
(bad)
mov
ins
adc
test
and
jp
push
jmp
xchg
add
scas
fld
das
sbb
pop
or
stos
ss
xor
mov
mov
xchg
jo
push
push
sub
and
xor
inc
mov
imul
jp
jmp
jecxz
arpl
mov
adc
cmp
push
pop
xor
dec
mov
adc
adc
adc
shl
outs
icebp
lods
(bad)
sti
pop
aaa
mov
push
ret
ficom
add
and
pushf
fwait
pop
outs
adc
imul
mov
or
int
adc
cmp
shr
stc
mov
je
call
sub
arpl
add
in
mov
and
mov
shr
addr16
jge
imul
nop
addr16
in
rcr
cli
xor
adc
inc
adc
mov
scas
rol
out
inc
dec
outs
sar
and
mov
rcr
or
mov
adc
leave
nop
fstp
arpl
test
sub
xchg
jnp
sahf
sub
loope
xchg
adc
test
cmp
lds
adc
inc
sub
and
imul
sbb
(bad)
jnp
add
jnp
mov
rcl
stos
pop
arpl
dec
aas
dec
pusha
adc
inc
mov
or
jne
sbb
mov
es
aad
shl
mov
cmp
js
fisub
push
test
mov
test
adc
adc
jno
jns
into
call
push
cmp
ins
dec
mov
rol
xchg
test
push
pop
fs
jecxz
cmp
adc
push
cmp
or
mov
cwde
(bad)
push
repz
push
mov
jae
push
and
mov
cmc
inc
dec
in
xchg
dec
cmp
cmp
cmp
pop
dec
pop
call
pushf
cs
push
and
fdiv
mov
or
or
ret
xor
out
in
mov
mov
(bad)
arpl
(bad)
adc
jp
adc
or
pop
or
xchg
xchg
and
xchg
inc
jl
add
sahf
lock
xchg
int3
add
ret
adc
das
adc
inc
pop
je
mov
scas
lock
push
test
call
pop
dec
inc
cmp
stc
mov
les
adc
cld
sub
jp
aaa
pop
push
inc
movs
cwde
inc
mov
mov
in
int
cld
pop
cmp
jge
fisttp
std
cmps
cmp
adc
sub
int
aas
mov
push
mov
popf
cmp
sahf
ja
adc
stc
cli
cmp
icebp
mov
mov
test
lock
push
or
xchg
test
scas
and
retf
popa
mov
call
mov
nop
fldcw
add
stc
jae
out
pushf
cli
and
(bad)
push
loop
into
pop
aas
pushf
in
jp
or
push
mov
shl
ret
xchg
jo
and
call
jb
add
scas
xchg
daa
gs
test
xchg
mov
ins
dec
daa
outs
ins
lock
fstp
es
cmp
pop
add
xchg
jl
and
scas
add
js
fidivr
icebp
adc
jge
pop
sub
stos
data16
test
dec
push
loop
lods
inc
inc
fwait
(bad)
and
hlt
mov
jg
jg
inc
pop
fisubr
pop
sbb
jl
inc
jns
push
ret
and
rcr
ds
int
test
loope
bnd
add
dec
pusha
imul
in
dec
xchg
gs
stos
leave
mov
(bad)
xor
js
dec
cwde
add
aaa
jmp
and
(bad)
imul
dec
sub
sbb
(bad)
fistp
sub
ror
icebp
ds
(bad)
jl
stos
jl
push
add
shr
jecxz
retf
cmp
pusha
jnp
push
mov
push
stc
call
je
push
outs
cmps
in
push
cs
faddp
cmp
lock
inc
mov
cs
imul
xor
inc
add
and
cmc
aaa
test
push
fcmovnb
shr
je
dec
hlt
sbb
cwde
and
add
(bad)
mov
stos
repz
sub
mov
mov
(bad)
in
aaa
ret
jmp
sub
loop
(bad)
fucom
push
mov
lea
sbb
ja
cmp
stc
(bad)
mov
xchg
and
adc
mov
pop
push
call
fs
ret
and
aaa
rcl
loop
add
mov
sub
xchg
out
xor
popf
pop
cmp
push
jnp
pop
aaa
test
cmp
jle
xlat
(bad)
push
push
sub
add
rol
or
shl
js
ficom
popw
inc
adc
mov
push
das
or
(bad)
adc
and
int3
adc
mov
fdivr
call
xor
jbe
repnz
aaa
xchg
test
mov
jp
sub
mul
lock
pop
dec
enter
xor
mov
adc
jle
cdq
sysenter
inc
mov
or
xchg
add
mov
sbb
retf
les
pop
push
sub
inc
imul
jne
stos
mov
dec
test
jge
sub
out
adc
lock
test
pop
jmp
push
or
add
ror
and
push
inc
fsubr
retf
out
stc
or
dec
mov
inc
scas
sar
movs
mov
push
or
mov
pop
jbe
push
es
movs
clc
adc
adc
sub
shr
rcr
mov
lds
pop
ins
cmp
test
push
push
sbb
xlat
fdiv
xor
push
ins
add
cmc
aam
shl
push
sub
arpl
cmp
or
and
test
jecxz
dec
fdivr
retf
pop
or
sub
popf
adc
adc
mov
call
int
mov
xchg
adc
add
icebp
jae
scas
int
mov
mov
push
pop
xor
cmp
aaa
sbb
adc
js
loope
aas
add
test
xor
or
dec
cwde
data16
ret
jne
frstor
(bad)
mov
fsubr
call
imul
out
fwait
mov
test
jecxz
sub
xchg
push
sub
movs
loopne
jmp
xor
pop
dec
cmp
je
(bad)
cmp
in
adc
nop
rol
mov
adc
nop
jmp
or
int
cwde
push
enter
mov
mov
(bad)
ds
mov
adc
push
sbb
fdiv
cld
or
adc
jecxz
pop
fdivr
jae
dec
imul
std
cli
cwde
jno
ins
repnz
xlat
dec
push
mov
scas
or
pop
push
or
rdpmc
leave
fs
bound
mov
sbb
push
mov
shr
dec
pop
sbb
and
out
pop
mov
mov
test
sbb
or
mov
mov
inc
scas
cmp
fmul
adc
sahf
mov
rcl
and
repz
cmp
das
dec
daa
jge
sbb
cmp
call
adc
cld
xchg
jmp
dec
imul
cli
mov
mov
adc
ins
cmc
in
sub
xchg
xchg
cmp
movs
xor
jge
mov
jge
pop
add
and
js
mov
push
out
scas
push
ss
loope
add
scas
mov
mov
gs
and
pop
mov
push
loopne
push
fidiv
mov
inc
inc
sbb
pop
mov
hlt
xlat
sbb
xor
xchg
mov
mov
scas
sbb
xchg
mov
cld
and
inc
fld
pop
int
out
adc
mov
and
es
xor
sti
jmp
mov
mov
xchg
sub
arpl
les
xor
stos
(bad)
adc
mov
sbb
int
jg
ret
fcmovbe
jg
dec
jecxz
xchg
imul
pop
mov
cmp
iret
cs
xlat
ins
or
ja
scas
leave
jne
sbb
add
out
add
ins
pushf
xor
(bad)
sbb
mov
out
push
jge
addr16
mov
jae
inc
mov
xchg
push
xor
out
mov
push
imul
cmps
in
mov
aas
enter
mov
aaa
cwde
in
mov
repnz
or
dec
in
mov
out
xor
arpl
bound
cmp
mov
dec
repz
jno
mov
repnz
push
xchg
and
in
icebp
fcom
call
test
mov
je
sub
aam
adc
cmp
cdq
sub
mov
add
sub
jp
cmps
cmp
mov
lea
xor
out
test
mov
into
inc
pushw
clc
test
add
push
pop
jmp
fcomp
pop
cmp
les
adc
ds
jnp
mov
inc
hlt
adc
mov
mov
pop
mov
push
mov
mov
sbb
aam
mov
aas
jae
int3
pop
push
push
jae
scas
mov
(bad)
cmp
xchg
js
jle
adc
mov
ficom
fs
out
and
inc
and
jmp
cmp
sub
inc
sub
call
loopne
xchg
leave
push
into
sbb
movs
lds
inc
xchg
mov
add
stc
test
arpl
push
inc
arpl
jecxz
call
add
inc
mov
aad
rcl
ja
xchg
xchg
ror
in
sahf
movs
imul
xor
cmps
push
imul
and
push
mov
call
es
add
stc
and
ja
cmp
(bad)
(bad)
inc
std
sar
adc
and
pop
repnz
cmc
jmp
push
jnp
xor
in
cmp
js
enter
xor
jle
cmp
or
adc
xchg
jmp
mov
(bad)
call
(bad)
fdivr
loopne
push
add
cmp
stos
xor
mov
pop
adc
cmp
in
shr
mov
stos
sar
pop
mov
in
pushf
aad
and
test
into
js
cmc
ret
and
inc
ds
sbb
cdq
ret
int3
xchg
jne
sbb
test
xchg
sar
pop
test
jecxz
out
sbb
add
mov
jle
inc
repz
inc
adc
fidivr
push
leave
jp
fisub
or
inc
outs
lods
test
outs
aad
cmp
lds
add
jmp
mov
cmc
dec
fdivr
retf
aad
shl
pop
sbb
scas
hlt
push
ret
sbb
loope
ret
cmc
test
push
les
hlt
add
sbb
ftst
or
mov
cmp
inc
jg
call
popf
fisub
cmp
xchg
gs
cmp
stos
push
sbb
clc
push
popa
inc
xchg
add
imul
test
in
das
adc
jno
mov
das
(bad)
(bad)
fwait
out
sbb
xchg
pop
mov
jne
xchg
adc
in
ss
adc
add
fisttp
ret
mov
cmp
xor
mov
movs
js
test
cmp
pop
int3
pop
pop
dec
ss
or
push
push
(bad)
aad
(bad)
xchg
pop
test
inc
adc
es
xchg
sbb
mov
mov
icebp
mov
push
inc
inc
mov
cld
xor
cmps
mov
scas
mov
cld
mov
jp
sbb
sub
xchg
xor
ins
sub
sub
mov
add
sbb
push
jno
lahf
mov
aam
pop
adc
cmps
xlat
sahf
movs
push
pop
xor
dec
lock
sbb
jb
out
in
pop
verw
inc
sahf
and
xor
pop
mov
das
push
and
rol
inc
loope
cli
mov
adc
and
mov
test
xchg
sbb
xchg
cmp
dec
lds
les
iret
lea
push
jecxz
lock
mov
cmp
movs
push
jne
ins
and
inc
adc
dec
ret
pop
xor
mov
jp
loop
cmp
cmp
cld
dec
push
adc
in
pop
xchg
dec
jns
call
es
and
(bad)
ins
lods
jno
call
pop
out
inc
pop
cmp
(bad)
int3
jb
cmp
lds
xor
mov
mov
clc
movs
mov
sub
pusha
adc
fs
xchg
retf
and
push
xor
loope
mov
push
sbb
popa
pop
imul
dec
ss
sub
xchg
adc
dec
iret
lods
loopne
adc
in
mov
out
fadd
pop
pop
loope
cld
call
xor
mov
mov
mov
push
jne
xor
aaa
adc
dec
and
iret
dec
cmc
push
push
jmp
out
jae
jae
fwait
mov
inc
mov
inc
aam
daa
fisttp
pop
push
pop
inc
jno
aad
and
push
jge
sub
clc
push
dec
and
xchg
or
push
out
push
xlat
(bad)
outs
je
(bad)
sti
dec
cmp
dec
imul
adc
fs
dec
inc
iret
and
jmp
jno
cs
cmps
mov
out
popf
test
data16
dec
retf
pop
mov
jno
repz
sbb
mov
rcr
sbb
adc
and
mov
mov
outs
mov
xchg
movs
mov
or
ret
mov
aam
cmp
scas
inc
xor
push
xor
pushf
(bad)
aas
mov
retf
or
out
and
sub
push
inc
inc
out
test
xlat
jns
mov
jbe
push
adc
js
das
inc
cmp
stos
bound
pop
push
fsubr
mov
leave
loope
cdq
jecxz
movs
adc
push
xchg
jle
mov
dec
jnp
in
jmp
(bad)
lea
inc
jae
frstor
mov
sub
mov
in
mov
inc
push
imul
inc
fldenv
fscale
xchg
mov
mov
test
dec
pop
ret
dec
pop
mov
scas
adc
fisubr
call
sbb
mov
fld
mov
and
lods
sbb
popa
addr16
mov
sub
data16
pop
mov
ja
pop
adc
pop
mov
popa
rcl
in
cmp
mov
retf
mov
xor
add
pop
sbb
xchg
test
test
(bad)
xor
adc
inc
add
in
(bad)
mov
mov
or
call
scas
cdq
clc
mov
sbb
sub
jbe
jmp
rcr
xchg
dec
lea
xchg
pop
push
pop
or
fst
sub
pop
xchg
lods
add
shr
inc
add
jmp
retf
lods
mov
out
jecxz
lods
sbb
mov
push
mov
(bad)
rcl
arpl
push
ins
xor
scas
mov
ret
xchg
xor
jbe
cmc
cld
call
int3
and
xor
js
mov
pusha
aad
jl
xor
or
jno
push
int3
inc
xlat
scas
jns
fld
jae
xlat
jne
or
lods
and
loop
push
je
inc
mov
daa
stc
call
ror
xchg
cmp
or
or
cmp
add
not
push
jl
into
mov
adc
sub
out
and
mov
pop
sbb
ds
push
or
mov
repz
xor
cmp
popa
repz
les
mov
fstp
push
rcl
push
nop
xor
in
jo
mov
shl
sub
out
(bad)
or
jle
loop
sub
or
fdiv
push
push
adc
sbb
ret
xor
dec
int
jecxz
mov
bt
out
dec
push
ja
int3
pushf
into
addr16
add
icebp
in
xchg
cmp
add
mov
fdiv
cs
out
xchg
test
add
cdq
and
idiv
jae
daa
sbb
jnp
add
xlat
outs
push
cwde
ja
icebp
mov
addr16
call
mov
jne
imul
mov
sub
(bad)
movs
mov
(bad)
ror
inc
outs
sbb
clc
push
imul
push
(bad)
neg
pop
(bad)
cli
sbb
adc
fsubr
push
movs
push
dec
mov
push
addr16
jecxz
icebp
cwde
xchg
fisttp
mov
mov
push
lock
push
mov
stos
add
out
push
enter
mov
std
push
add
push
jo
pop
dec
cmp
fcmovbe
jg
cwde
or
sub
cmp
jl
cdq
iret
mov
xlat
jne
stos
sbb
stos
mov
in
aas
shr
es
out
pop
mov
shl
xchg
loopne
arpl
das
xchg
lahf
sub
or
cmovl
outs
dec
adc
inc
mov
mov
sbb
and
dec
call
and
xlat
sbb
jle
sub
or
cli
js
dec
adc
inc
into
fwait
sub
mov
mov
mov
dec
popf
jb
fcomp
sub
mov
cld
aas
sbb
and
jnp
jg
lods
jge
inc
jmp
adc
js
sub
daa
mov
jns
pop
bound
les
inc
jae
xor
cmp
cmp
or
cli
shl
in
mov
xlat
and
cmp
(bad)
out
xchg
outs
sbb
loop
int
(bad)
fldenv
pop
push
out
push
cmp
out
mov
dec
fndisi(8087
dec
dec
mov
ins
push
in
pop
cmp
call
fiadd
mov
js
jne
sahf
retf
imul
and
in
push
inc
retf
push
push
push
repnz
mov
outs
cmp
push
jnp
adc
fsub
arpl
retf
pusha
out
jae
sbb
out
imul
xchg
push
fldcw
mov
mov
push
cmp
cld
aam
add
aas
push
xchg
dec
sub
mov
cmp
mov
hlt
add
xchg
xor
movs
pop
jne
(bad)
cwde
mov
shl
mov
loope
ins
add
pop
jnp
xchg
(bad)
cs
out
outs
and
shr
dec
ss
outs
(bad)
ds
xor
nop
fnstenv
les
push
repnz
or
aam
(bad)
push
mov
jp
enter
aaa
dec
cmp
aam
mov
jb
icebp
mov
fsubr
add
xor
cmp
movs
cwde
jp
int3
inc
rcr
dec
js
js
ds
inc
push
mov
sub
and
call
pushf
cld
sub
pop
and
pop
dec
adc
and
sbb
pop
add
xor
jnp
or
jne
ins
sahf
lahf
jmp
xor
and
sbb
jp
dec
push
adc
push
jecxz
jmp
cmp
jno
dec
push
jae
out
xor
xchg
retf
or
jg
xchg
test
in
popa
loopne
ss
fcom
dec
movs
mov
or
loop
jl
sbb
cs
pop
stc
(bad)
int3
adc
in
scas
repz
mov
pop
mov
xchg
lds
popf
jb
gs
pop
push
sub
into
fiadd
cmp
push
cli
scas
and
pop
push
cmp
sub
or
sub
repnz
adc
(bad)
adc
push
jp
cmp
pusha
retf
xor
mov
call
rcr
inc
shl
popf
push
sub
pop
push
sub
mov
mov
jecxz
mov
adc
push
mov
pop
push
(bad)
stc
shl
add
add
cmp
enter
imul
fs
mov
jmp
jnp
jmp
inc
fisubr
cmp
dec
pop
mov
pop
xor
mov
inc
lahf
and
sub
jle
mov
add
(bad)
pop
and
push
mov
push
pushf
sti
iret
ret
iret
call
pop
das
call
fnstenv
inc
loope
jo
rcr
xchg
(bad)
cmp
test
cmp
iret
inc
(bad)
fisttp
aam
dec
mov
fimul
push
xor
jne
jo
add
aaa
add
xor
fld
call
adc
icebp
or
in
xor
cmp
or
test
pop
sub
cmc
or
test
loope
adc
shl
inc
out
int3
sbb
nop
imul
pop
inc
fwait
(bad)
fsubr
movs
sbb
pushf
or
clc
pop
ret
retf
nop
rcl
mov
mov
(bad)
push
xor
movs
mov
push
test
out
jbe
xor
lea
pop
gs
xchg
pusha
rcl
and
jg
fidivr
(bad)
loopne
cmp
outs
xchg
jnp
xor
push
pushf
idiv
dec
ins
ds
push
push
mov
mul
cwde
fs
shl
lds
adc
aam
retf
movs
cs
in
lock
int3
jp
push
cmp
jb
dec
stos
in
fidiv
nop
mov
adc
inc
push
scas
inc
and
pop
stos
dec
xor
in
das
leave
and
pushf
inc
push
out
push
push
gs
retf
clc
xchg
mov
cmc
mov
(bad)
jns
and
xor
(bad)
dec
stos
imul
jne
cmps
inc
push
fwait
(bad)
pop
cs
shl
call
xchg
sahf
mov
xchg
cdq
mov
aas
dec
and
sar
out
or
cmp
mov
aaa
lahf
sbb
sub
out
ds
nop
(bad)
js
lock
jmp
cld
and
and
mov
add
and
mov
cmp
hlt
ficom
(bad)
outs
rcr
and
daa
add
loopne
sub
and
adc
cmp
or
jmp
xor
faddp
or
inc
aad
adc
mov
push
mov
es
inc
(bad)
fnstenv
mov
data16
mov
imul
add
test
stos
enter
sub
mov
xor
mov
fwait
daa
in
in
jae
stc
das
dec
sar
cwde
dec
add
xor
out
adc
jl
mov
pop
inc
cmps
and
jecxz
dec
add
hlt
lods
into
inc
neg
push
dec
push
push
jg
push
mov
jl
sub
(bad)
sub
imul
aam
xchg
xchg
sbb
movs
push
push
xor
cmps
loop
in
ret
icebp
scas
lods
jo
and
shr
lock
inc
mov
fs
js
pop
movs
cdq
pop
mov
cld
mov
rcl
lahf
movs
jmp
repz
fcomp
sahf
or
lahf
shl
in
dec
fmul
mov
int3
or
mov
test
fs
outs
mov
jne
out
dec
mov
out
adc
je
sub
out
jo
xchg
and
loope
adc
imul
mov
pop
add
jnp
mov
int3
mov
jnp
mov
jb
dec
jle
cmp
cmp
pop
ret
ja
adc
shr
sahf
fbld
iret
cmp
push
or
fnsave
inc
mov
pusha
ds
popa
ins
inc
repnz
xor
push
pop
inc
les
ret
dec
enter
jle
sbb
mov
mov
cmp
iret
int3
add
mov
icebp
fs
add
inc
push
arpl
push
add
push
mov
test
cmp
pusha
adc
inc
add
test
pushf
movs
inc
(bad)
xchg
in
cmp
(bad)
jle
push
push
movs
dec
cs
fdiv
cmp
mov
inc
push
jmp
xor
dec
jbe
pop
inc
in
(bad)
into
scas
imul
outs
daa
dec
cmp
sbb
aaa
and
pushf
mov
into
and
xchg
sbb
or
xlat
mov
daa
xor
stc
add
inc
ss
jne
and
pop
xor
pop
push
xor
sub
sub
lahf
push
aad
push
sub
adc
xchg
and
in
or
xor
scas
mov
dec
jb
outs
inc
push
adc
stos
dec
sub
fidiv
mov
inc
sub
xchg
push
je
jl
ins
add
cdq
ret
into
mov
out
jae
(bad)
xchg
or
mov
in
mov
lea
jo
movs
sub
daa
pop
push
icebp
add
xchg
lods
and
xchg
mov
cmc
test
cmp
mov
(bad)
dec
dec
iret
adc
jns
test
ret
xchg
retf
(bad)
in
movs
cs
jbe
loope
mov
inc
sbb
or
jle
retf
fisubr
mov
pop
cmc
mov
lods
jle
mov
sub
aaa
add
sub
sahf
int3
push
cld
sbb
lods
aas
mov
shr
(bad)
and
std
xchg
push
popf
add
add
outs
jecxz
adc
xor
push
xchg
xchg
ins
adc
cmp
inc
shl
jmp
retf
adc
in
push
es
sub
dec
dec
xchg
inc
mov
push
xor
jb
(bad)
inc
mov
jmp
adc
adc
(bad)
std
nop
aaa
mov
xchg
inc
shr
xor
sub
pop
xchg
xchg
jg
cmps
push
test
xchg
ror
jg
fst
pop
enter
cmps
(bad)
xor
mov
push
mov
and
push
call
enter
dec
hlt
sahf
pop
push
clc
js
stc
lods
scas
fimul
pop
fistp
and
lea
xchg
mov
mov
xchg
mov
ja
and
frstor
add
xchg
stc
sbb
in
inc
idiv
add
loop
aaa
push
adc
jecxz
add
mov
cmp
fiadd
loop
(bad)
retf
repnz
push
sbb
cdq
dec
pop
mov
mov
inc
lods
stos
dec
adc
mov
jge
dec
dec
repnz
xchg
pusha
ror
and
test
sbb
xchg
jmp
sub
cmp
adc
popf
(bad)
push
sub
push
mov
stos
nop
cdq
xchg
daa
ror
mov
xchg
xchg
adc
leave
fisub
pop
ret
lahf
arpl
jp
add
mov
inc
enter
mov
test
xchg
shr
sub
das
adc
sti
mov
les
shl
pop
jb
sbb
test
(bad)
loop
push
adc
dec
jns
lock
jmp
rol
mov
sub
inc
mul
mov
lds
aam
mov
pop
std
push
std
test
loop
cmp
(bad)
and
fsubr
sbb
inc
bsf
test
retf
add
cmp
push
int3
or
mov
or
pop
dec
cli
xor
aaa
sbb
fmul
into
mov
cli
push
loop
shl
loope
mov
icebp
cwde
imul
inc
jbe
and
xlat
mov
pop
in
cdq
(bad)
pop
cmp
cwde
dec
aas
pop
ret
aas
stos
cwde
sbb
or
into
shl
stc
pushf
stos
mov
sub
push
leave
inc
cmp
mov
add
push
les
int3
dec
into
div
(bad)
dec
cmp
or
xor
cmc
imul
and
js
mov
jae
mov
js
jecxz
fsub
adc
aas
dec
sub
adc
jge
dec
or
dec
push
outs
xor
mov
loopne
or
xchg
ds
repz
dec
jmp
pop
and
jne
jae
jle
sub
dec
and
std
mov
out
jmp
ins
aam
and
dec
mov
push
rcl
cli
call
repnz
ror
xchg
push
pushf
push
aas
in
shr
jle
js
addr16
push
leave
push
pop
push
aam
adc
cmp
sub
call
mov
das
popf
in
pop
sub
xchg
rcr
pop
mov
inc
ret
xor
and
(bad)
scas
pop
mov
mov
jo
and
add
ror
and
retf
bound
movs
adc
add
xor
leave
ins
cmp
scas
and
mov
and
sahf
imul
out
test
sub
xor
add
add
jno
cmp
imul
or
lahf
jp
mov
and
pop
loope
adc
mov
inc
fcmovne
add
ss
ret
adc
mov
lock
dec
and
cdq
xor
jb
bound
sbb
jp
push
mov
dec
fldenv
cmp
pusha
dec
pusha
add
movs
ja
daa
push
test
push
ja
mov
jbe
scas
or
mov
into
sar
sti
add
add
mov
jbe
in
sub
sbb
call
mov
retf
(bad)
fisubr
outs
mov
jbe
test
pop
stos
stos
stos
ins
sub
ret
inc
aad
add
(bad)
retf
and
mov
nop
mov
out
push
enter
push
xlat
mov
pop
outs
vpunpcklbw
pop
pusha
scas
retf
lods
setp
inc
jle
xor
mov
call
mov
push
mov
xor
movs
inc
and
mov
mov
xchg
loope
jno
pop
in
pusha
cli
sti
adc
js
dec
enter
or
in
xor
xchg
and
and
or
pop
mov
pop
push
(bad)
mov
hlt
or
push
mov
pop
shr
or
xlat
jg
stos
fs
xchg
xchg
cwde
mov
mov
mov
into
aas
cmps
lods
bound
stos
dec
pop
shl
and
inc
ds
fs
shl
dec
mov
sar
movs
push
outs
adc
cdq
test
pop
popf
ss
sbb
adc
addr16
ds
fcomi
rcr
leave
into
mov
jb
stos
pop
les
and
sbb
and
aad
xor
hlt
sahf
cmps
lods
adc
adc
push
imul
adc
add
ret
adc
data16
and
scas
cmps
in
iret
leave
mov
pop
push
xlat
mov
out
dec
xchg
loopne
in
repnz
mov
push
mov
(bad)
sub
adc
dec
cmp
mov
mov
mov
scas
sbb
mov
xchg
dec
adc
push
mov
sbb
cmp
dec
xchg
jle
fisub
cmp
add
cmp
repz
pop
pop
iret
adc
jl
adc
test
(bad)
or
rcr
mov
stos
push
ja
retf
xchg
(bad)
(bad)
sbb
nop
ss
fisubr
(bad)
sub
dec
shl
pop
sub
push
mov
rcr
icebp
inc
lock
in
or
or
dec
mov
pusha
lahf
jnp
dec
jmp
stos
and
mov
int3
lahf
mov
or
sbb
add
dec
fidiv
pusha
or
mov
push
add
pushf
xchg
xchg
adc
xlat
xchg
stos
sbb
fs
out
mov
int3
add
scas
lods
push
jl
bound
add
pop
or
cdq
mov
rcl
jp
stc
cmps
xchg
xlat
stos
dec
add
test
movs
scas
popa
leave
mov
cwde
and
outs
fld
sbb
ret
lock
lods
add
adc
inc
popf
int3
cdq
out
test
scas
jnp
je
mov
pop
sti
inc
xchg
fwait
xor
ficomp
adc
mov
cmps
sar
xchg
pop
ss
movs
ret
shr
jbe
ror
stc
cmp
mov
pusha
arpl
dec
and
data16
repz
and
jl
loop
mov
cs
test
inc
adc
sub
dec
xlat
arpl
jmp
scas
pop
bound
test
jmp
xchg
pop
pop
push
lahf
call
xor
cli
and
jb
mov
xor
dec
mov
frstor
xchg
bound
or
inc
cld
outs
pop
ret
push
test
mov
adc
fidivr
int3
test
and
and
js
cmp
cmp
xor
push
jmp
loop
add
xor
jnp
int
adc
sbb
scas
xchg
xlat
jb
repnz
call
add
and
jb
in
mov
xlat
jle
inc
fnstcw
adc
cmp
imul
ret
and
test
scas
cli
cmc
or
movs
push
je
push
cmp
dec
jle
jae
imul
mov
adc
aaa
mov
or
in
sbb
mov
mov
cmp
ror
lock
addr16
enter
dec
dec
mov
out
dec
jmp
xchg
pushf
movs
jno
lahf
fsub
xchg
mov
pusha
pop
ret
jns
dec
xchg
xchg
dec
adc
jne
xchg
cmp
jmp
mov
mov
fmul
into
xchg
in
and
test
pop
mov
mov
mov
(bad)
lock
push
push
ftst
lods
cmc
pop
call
stos
fidivr
jecxz
mov
les
out
scas
jb
pop
jge
imul
iret
adc
int3
mov
jg
sbb
or
xor
xor
mov
repnz
test
adc
dec
pop
jge
jns
jbe
fidivr
in
dec
push
jbe
adc
loopne
push
cmp
add
in
sbb
rcr
jbe
outs
push
xor
sbb
xor
cdq
dec
jne
mov
clc
retf
into
dec
mov
pop
test
inc
call
jb
xor
popa
test
sbb
inc
bound
lock
stos
enter
call
cmc
dec
or
jae
sub
cs
push
jle
out
int
das
inc
(bad)
mov
or
in
jb
cmp
cli
popa
jbe
scas
adc
mov
xchg
scas
add
test
ror
push
pop
sbb
test
(bad)
(bad)
push
inc
sub
mov
pushf
outs
push
mov
xchg
call
repz
mov
int
and
test
jp
hlt
loop
sbb
test
cs
test
out
mov
mov
sbb
jns
xor
inc
(bad)
pop
push
ins
mov
test
push
popa
fwait
rcr
mov
les
fisttp
and
fldenv
mov
add
div
mov
movs
mov
cmp
leave
xchg
enter
fld
pop
je
cdq
xchg
inc
xchg
or
mov
ret
addr16
xchg
shl
dec
sub
ins
aaa
push
mov
xor
stos
mov
mov
iret
mov
stos
push
or
shl
jnp
imul
(bad)
jae
repz
cmp
add
js
jo
shl
adc
mov
xlat
xchg
and
or
stos
call
jmp
xor
je
mov
mov
push
(bad)
movs
movs
mov
xchg
mov
pop
push
cwde
cmps
push
cdq
mov
call
pop
stos
inc
inc
or
lods
out
xchg
inc
sub
push
push
retf
(bad)
or
push
xor
ds
mov
pop
cdq
ja
or
xchg
cwde
mov
es
fidiv
cli
sub
outs
ds
xchg
sbb
sbb
movs
enter
mov
inc
and
inc
adc
pusha
mov
js
or
inc
scas
scas
sub
bnd
icebp
pushf
enter
inc
and
bound
repz
add
adc
push
xor
jo
and
(bad)
test
dec
fild
mov
xchg
fbld
je
pushf
(bad)
xor
(bad)
and
out
jo
xchg
outs
dec
push
bound
mov
loope
test
sbb
sbb
push
add
xchg
mov
push
mov
add
aam
mov
fimul
xor
or
or
mov
sbb
ret
jbe
sub
push
inc
imul
adc
fs
push
fisubr
mov
push
inc
pop
fld
push
out
mov
pop
(bad)
sbb
adc
pop
leave
iret
out
push
cmp
mov
pop
sub
je
cmp
jmp
xchg
sub
xchg
jle
mov
jae
cmps
dec
sub
sbb
push
pushf
push
xor
push
retf
and
xor
out
loope
cmp
dec
mov
inc
and
call
cmps
push
movs
stos
pop
push
lods
inc
loopne
rcr
or
test
(bad)
enter
mov
lock
imul
imul
xor
mov
in
test
xor
pusha
cmp
xor
mov
ret
push
push
jbe
pop
ret
movs
hlt
movs
pop
jmp
mov
fnstcw
stos
js
sar
je
push
nop
in
push
call
js
xchg
pop
daa
mov
cmc
ins
xor
pop
loope
push
jl
sbb
out
fnstcw
(bad)
jecxz
and
fisttp
mov
add
sbb
xchg
lds
shr
mov
mov
cdq
add
cwde
dec
dec
jg
mov
mov
ins
lods
xor
cdq
or
push
ins
fwait
push
mov
int
jp
xor
push
mov
pop
or
xor
and
fstp
fisub
lock
mov
(bad)
or
adc
cmp
adc
push
repz
add
or
ins
pop
shr
out
(bad)
fdiv
xor
or
js
push
shr
loop
jne
inc
aam
and
ret
inc
sbb
dec
shl
stos
xchg
fidiv
mov
sbb
mov
lahf
mov
loopne
push
aas
fdiv
adc
pop
fisubr
lsl
sub
push
and
mov
in
pop
out
(bad)
in
imul
pop
adc
push
cmp
popa
or
rcr
push
fisttp
sbb
test
nop
pop
bound
xor
mov
shl
xchg
pop
adc
add
inc
rol
es
outs
pushf
into
les
xchg
addr16
jl
aaa
mov
fldln2
(bad)
push
sub
sbb
mov
shr
xor
fwait
sahf
sub
xlat
retf
and
mov
mov
std
jbe
int3
cld
hlt
or
mov
add
xchg
mov
and
sar
dec
pop
push
push
ss
popf
sub
shr
adc
in
or
sbb
pop
(bad)
icebp
jbe
dec
test
mov
adc
mov
lods
aaa
inc
pop
fs
sbb
jmp
xchg
xor
inc
scas
jge
test
mov
and
lods
fist
inc
mov
push
outs
fistp
aam
aam
das
out
add
out
aas
adc
lods
mov
jno
adc
push
xchg
push
jle
jmp
and
inc
adc
fild
in
push
inc
mov
pop
push
sub
add
sub
mov
cmp
js
jns
out
mov
mov
push
ja
inc
xor
pop
cmc
and
add
dec
shl
push
icebp
dec
lahf
mov
sbb
xchg
sub
sub
jp
mov
cld
test
sub
(bad)
xchg
in
sub
inc
inc
(bad)
mov
cld
or
push
add
cmp
xchg
sar
mov
pushf
popf
adc
ror
jne
push
adc
stc
xchg
dec
xor
mov
aaa
jecxz
mov
pop
adc
push
mov
xor
jg
cld
sbb
jo
dec
sub
mov
inc
adc
adc
mov
push
sahf
nop
pop
xor
adc
cmp
pop
lock
out
adc
lock
dec
xchg
pusha
jl
add
adc
scas
pushf
push
sub
cli
cmp
mov
lods
fucom
mov
push
dec
js
push
es
and
enter
sbb
out
pop
sbb
mov
pop
mov
inc
xchg
jne
xor
mov
call
cmp
xor
adc
enter
mov
fld
or
cmp
clc
repnz
mov
arpl
call
loopne
or
test
mov
or
jno
xchg
enter
pop
(bad)
out
mov
mov
fistp
dec
daa
outs
adc
jle
and
movsx
mov
outs
fxch
retf
(bad)
mov
rcl
div
test
test
std
push
out
sbb
sub
lahf
dec
jmp
push
ret
outs
ins
enter
and
ins
lds
fwait
icebp
out
jp
adc
cld
adc
add
jl
repz
imul
(bad)
stc
js
mov
adc
test
shl
jmp
sub
fwait
nop
sbb
jbe
inc
loope
push
jmp
loope
mov
ds
jnp
inc
neg
sbb
dec
in
fs
mov
retf
in
add
(bad)
xor
dec
add
cmp
jle
fimul
bound
adc
or
xor
fsub
aaa
xor
push
call
ret
call
or
and
fimul
cmp
cmp
or
out
shl
xchg
xchg
jmp
mov
or
mov
lea
(bad)
cmp
aas
push
stc
dec
adc
cld
dec
aas
aaa
call
add
arpl
xor
pop
push
je
push
and
lock
pop
mov
cmp
pop
cmp
lahf
in
xchg
(bad)
or
xchg
pop
mov
out
das
mov
mov
dec
gs
movs
push
lock
and
mov
inc
nop
and
jo
push
push
pushf
stos
jmp
inc
sub
push
jo
jbe
pop
arpl
loopne
sub
pop
dec
and
mov
lock
loop
cdq
mov
pop
pop
outs
adc
addr16
ret
fbld
push
xor
adc
ins
test
daa
rol
adc
test
aam
jg
adc
sbb
mov
and
ret
sub
bound
push
mov
sbb
cmp
lods
add
lds
push
pusha
mov
rcr
cmp
sub
adc
and
mov
shr
movs
push
stc
icebp
jmp
push
mov
jne
pop
and
mov
sbb
fld
imul
mov
ins
rcl
in
push
lods
cmp
(bad)
mov
leave
mov
loopne
mov
xchg
test
jmp
or
push
and
mov
mov
lods
out
hlt
mov
(bad)
mov
jmp
or
mov
jno
xor
inc
fwait
test
add
sub
sub
xlat
cli
pop
pop
push
dec
repz
xchg
(bad)
cmp
jp
aas
pop
test
mov
jl
fwait
sub
fsubrp
push
sub
inc
xor
fidivr
add
adc
push
inc
imul
cdq
or
xchg
push
and
xor
movs
jecxz
add
cmp
rcl
arpl
fisub
(bad)
in
pusha
call
retf
ficom
nop
sbb
cmp
sbb
pop
into
pop
sub
imul
in
fisttp
icebp
cs
xchg
icebp
mov
das
lds
pushw
or
dec
popf
ins
dec
adc
icebp
lock
or
mov
jl
hlt
mov
and
and
xchg
out
nop
xchg
xor
xor
jmp
xor
scas
xor
dec
enter
(bad)
std
in
sub
fld
mov
stc
sbb
popf
push
dec
jnp
jle
adc
fidivr
add
in
adc
and
inc
(bad)
fdivr
mov
imul
pushf
mov
(bad)
or
rol
jle
ret
rcl
jle
add
or
jo
sub
and
jmp
cld
outs
mov
pop
dec
repnz
fimul
fwait
sbb
movq
hlt
mov
cmps
mov
jne
movs
fisubr
jne
fist
adc
daa
cmp
xchg
lahf
mov
mov
mov
pop
ins
rol
cld
xchg
mov
push
mov
loopne
retf
fcmovnu
pop
push
loop
mov
sti
mov
jl
pusha
dec
popf
lods
(bad)
rol
mov
movs
jb
cmc
je
xor
rol
movs
push
sbb
mov
popa
sbb
call
pop
or
lahf
cmc
fcomp
mov
mov
jbe
enter
jg
imul
mov
xor
inc
xor
sub
loop
xchg
fwait
cmp
(bad)
push
and
pop
xor
xchg
add
dec
arpl
(bad)
fucomp
fcom
pop
or
mov
push
or
jl
push
bound
pop
pop
add
cli
inc
push
xchg
(bad)
icebp
inc
dec
jmp
test
adc
icebp
jbe
jbe
xor
or
and
xchg
inc
push
scas
pop
or
inc
mov
retf
add
shl
inc
inc
adc
mov
pop
mov
mov
jne
xchg
ret
call
push
ins
and
test
sbb
push
in
fisubr
push
(bad)
rcl
je
jmp
fisubr
enter
and
out
or
add
imul
mov
push
enter
cmps
aam
add
jae
mov
int
fidiv
push
cmp
lods
cld
push
adc
hlt
ret
xchg
ror
push
loope
cmc
leave
push
(bad)
push
dec
mov
imul
mov
and
neg
inc
mov
outs
mov
fwait
and
adc
in
mov
lods
pushf
fcomp
iret
iret
jp
enter
cmp
iret
pop
sub
jmp
ret
push
das
mov
push
mov
neg
push
and
outs
out
xchg
add
pop
out
lds
stos
cmp
mov
inc
dec
es
and
mov
(bad)
or
dec
mov
(bad)
out
into
push
and
jmp
add
pop
pop
cmp
out
clc
repz
call
ds
fst
repnz
je
ja
inc
xchg
fiadd
fist
outs
pop
sbb
aaa
(bad)
fisttp
pop
sbb
mov
in
cmp
mov
inc
je
xchg
stc
(bad)
aam
lods
sbb
repnz
out
aas
fs
scas
outs
cmp
adc
inc
ret
stos
popf
shr
lods
repz
test
stos
daa
cmp
mov
pop
add
fcmove
retf
add
inc
and
add
aaa
xchg
and
mov
rol
hlt
dec
ret
push
push
push
push
test
lahf
mov
pusha
mov
push
xchg
mov
cmp
push
xchg
aas
cld
les
sub
aad
das
ss
stos
fwait
jae
xor
fdiv
ins
dec
fsubr
les
push
xchg
sbb
pop
sub
jno
mov
jp
icebp
test
add
push
and
or
or
pop
push
cmp
call
sub
push
mov
popa
xchg
mov
fnstsw
sahf
jae
push
pushf
sahf
call
sbb
sub
push
test
(bad)
sub
and
inc
xor
fisub
lahf
int3
or
lods
rol
enter
xchg
adc
ror
pop
pop
or
stos
jmp
aam
lahf
xchg
dec
sahf
inc
mov
adc
cmp
add
xor
xchg
cwde
shl
fdiv
mov
jnp
test
jmp
pushf
mov
fisttp
pop
cld
test
out
inc
aam
shr
mov
cmp
xchg
inc
cmps
cli
sbb
aas
lock
loop
add
inc
xlat
movs
jae
pop
(bad)
out
sub
int3
aam
push
mov
(bad)
mov
outs
add
pop
xor
(bad)
and
sti
xchg
(bad)
icebp
cmp
sub
inc
jmp
sbb
push
popf
imul
dec
fwait
outs
rcl
fild
clc
inc
adc
movs
xor
xor
inc
mov
xchg
pop
adc
push
nop
pusha
(bad)
fcomip
pop
mov
jo
pop
cmps
adc
add
push
dec
mov
mov
stos
popa
ficomp
add
dec
adc
pop
mov
xchg
xchg
dec
jno
outs
mov
pop
pusha
outs
(bad)
jle
push
pop
fist
mov
shl
imul
(bad)
sbb
push
push
pop
jno
xchg
dec
lahf
sbb
cmp
retf
jne
inc
or
stc
ret
inc
into
mov
jg
add
add
es
or
mov
lea
aad
jne
movs
mov
ret
fucomp
jbe
(bad)
and
in
xchg
mov
loope
fcomp
sub
xlat
bswap
jns
sahf
cmp
or
test
inc
inc
and
lods
push
outs
test
add
mov
or
das
mov
inc
jge
push
inc
cdq
daa
dec
mov
cmp
fstp
js
leave
repz
not
(bad)
push
adc
out
hlt
dec
fsub
sbb
inc
fneni(8087
(bad)
or
or
and
iret
fwait
mov
mov
add
jns
xor
jl
std
push
sbb
sub
jle
mov
fnsave
cmp
inc
fcomp
loop
mov
or
int3
call
mov
push
in
aam
inc
ins
in
mov
out
jmp
into
cwde
sbb
inc
pop
dec
rcl
pushf
pop
inc
iret
stc
xor
cmp
in
mov
jge
rcl
inc
sub
not
pop
out
enter
sub
inc
js
add
and
push
mov
cld
rcr
out
mov
rcr
ret
inc
pop
pop
inc
imul
push
xor
push
outs
mov
nop
xchg
(bad)
or
push
sbb
(bad)
daa
sub
jge
out
lahf
enter
mov
test
outs
adc
xchg
mov
jle
cwde
inc
sbb
mov
inc
mov
inc
jnp
add
add
stos
les
out
cwde
retf
fimul
mov
or
jmp
jp
adc
sub
bound
push
bound
jp
mov
pop
add
adc
mov
cmp
add
xchg
mov
pop
aad
nop
jmp
xchg
pop
and
ss
inc
or
mov
cld
cmps
sbb
cmovl
sbb
rcr
fldcw
lods
sub
inc
push
cmp
setb
and
sub
push
sar
xor
sbb
fsubp
movs
xlat
sub
dec
add
pop
sbb
cs
jb
jns
add
mov
daa
mov
xchg
gs
sar
cs
dec
or
adc
cmp
sar
ficomp
push
dec
xchg
jbe
int
stc
inc
scas
lods
mov
cmp
mov
dec
pop
push
cwde
lock
es
stos
add
cmp
out
daa
sub
xchg
das
push
mov
add
push
stos
sbb
icebp
mov
pop
vorps
and
fwait
mov
mov
in
add
out
fisub
cmp
(bad)
cmp
adc
dec
ret
mov
test
nop
mov
pop
aaa
sti
out
inc
jno
rcr
ret
mov
dec
dec
add
sub
imul
sub
mov
xlat
dec
pop
enter
aaa
pop
inc
popf
and
push
loopne
adc
sti
mov
int3
pusha
div
push
loopne
mov
push
(bad)
inc
push
add
mov
das
fucomip
pop
add
repnz
ror
push
data16
cmp
enter
or
mov
push
sbb
movs
scas
dec
sub
xor
std
sub
leave
pop
nop
inc
out
(bad)
xchg
inc
dec
fsub
add
sub
cmp
dec
jne
cwde
shl
sbb
adc
cwde
or
lock
sub
xchg
mov
dec
xor
xor
xchg
mov
cmp
mov
push
mov
imul
(bad)
mov
test
mov
shr
inc
dec
loope
push
mov
ja
pop
add
bound
rol
(bad)
mov
mov
stos
and
and
xchg
cmp
stos
(bad)
ss
das
cmp
leave
fcmovne
adc
or
push
loopne
aam
fwait
inc
pop
pop
sbb
mov
mov
(bad)
loopne
movs
dec
in
lods
push
data16
(bad)
iret
mov
test
mov
mov
adc
dec
retf
cmp
jmp
cld
jb
mov
repz
daa
xor
ss
xchg
sbb
sahf
stos
scas
jg
sub
jmp
lahf
xchg
push
mov
jmp
mov
fbstp
rcr
les
mov
xor
sbb
pushf
and
mov
data16
mov
pop
or
pop
mov
lds
aas
xor
xor
stos
jmp
xor
and
jns
jmp
xchg
cmp
dec
cmp
mov
aaa
outs
and
outs
ret
aas
inc
leave
mov
and
push
movs
icebp
dec
pop
loope
in
fadd
push
mov
addr16
push
adc
arpl
push
repz
sbb
sar
inc
mov
cmps
sub
js
push
call
xor
xchg
dec
mov
sub
or
adc
push
cmp
sahf
out
jns
dec
aam
jmp
popa
not
ret
mov
xchg
test
push
cmc
mov
cmps
lds
jecxz
or
jecxz
mov
push
fst
xchg
mov
xchg
push
shl
cld
mov
xchg
dec
fsubr
ds
into
mov
ja
cmp
int
cmps
mov
fidivr
out
in
add
shl
pusha
test
or
jg
mov
push
push
pop
jp
cmps
pop
push
out
iret
in
in
popf
pop
adc
sub
dec
add
imul
cmc
adc
ret
mov
mov
cmc
jg
push
ins
dec
pop
add
inc
fsubr
ins
add
scas
xchg
fs
mov
jle
jb
in
lock
mov
push
xchg
cs
mov
test
stos
and
neg
div
jmp
leave
imul
cmc
pop
dec
repz
mov
cmp
sbb
cmps
cmp
iret
loopne
retf
fiadd
ffreep
lock
retf
pusha
out
mov
bound
sbb
or
data16
mov
loopne
mov
jle
les
inc
push
xlat
jne
sub
aaa
cmps
enter
inc
and
jmp
push
push
fwait
sub
inc
ins
out
int3
imul
pop
cmp
and
pushf
and
xor
jae
add
mov
mov
adc
jns
in
xchg
mov
popa
add
loope
stos
cmc
mov
xchg
inc
jmp
(bad)
ret
fidiv
jmp
test
inc
(bad)
dec
pushf
ret
fadd
xchg
out
sbb
add
jl
cmp
mov
jb
ins
mov
gs
idiv
push
jle
pop
test
dec
inc
mov
ins
(bad)
aad
pop
pop
ret
xchg
call
stos
mov
mov
or
mov
mov
dec
and
lods
mov
sbb
inc
repnz
into
mov
inc
jg
xor
jno
ret
add
daa
jo
test
shl
jmp
stos
jg
adc
mov
jl
jg
shl
jns
loopne
lods
stc
cmp
sbb
addr16
jo
test
jmp
fnstcw
xor
cmp
rcl
stos
jae
mov
int
xchg
rol
(bad)
mov
and
into
les
in
div
(bad)
icebp
pop
ret
jg
cdq
xor
outs
mov
aaa
ror
inc
(bad)
bswap
jmp
push
sti
sbb
push
call
popf
or
ja
and
fwait
xor
adc
iret
pop
jb
jbe
es
sbb
adc
loopne
leave
mov
sbb
jecxz
xchg
pop
inc
retf
xchg
or
int
imul
jno
pop
pushf
mov
and
dec
repnz
outs
stc
mov
xor
sub
out
cmp
jp
jnp
fnstcw
mov
mov
sahf
les
test
es
js
and
addr16
out
mov
(bad)
mov
jo
sub
mov
mov
jle
jge
mov
fisub
les
inc
in
mov
mov
(bad)
xchg
jns
push
sbb
sbb
pop
outs
cmp
mov
je
mov
mov
push
std
push
(bad)
jmp
dec
scas
mov
add
stc
xchg
imul
fdivr
mov
sbb
mov
adc
inc
pop
scas
and
pop
daa
xchg
xchg
add
jl
pop
jbe
shl
cld
lods
aad
sub
mov
mov
fcmovnu
and
xor
lahf
cwde
adc
imul
push
sbb
enter
dec
ror
pop
imul
sbb
xor
sbb
pushf
sub
mov
sbb
inc
into
add
jl
cmp
sbb
nop
outs
xor
xor
sub
pop
aaa
mov
inc
test
xchg
stc
cmp
xchg
loopne
xor
mov
mov
lock
rol
push
call
pop
nop
and
and
inc
fisub
ficomp
(bad)
cs
shr
or
pusha
into
je
jmp
sbb
ins
outs
jge
pop
and
push
pop
popf
xchg
sbb
(bad)
sub
inc
fwait
movs
mov
sbb
ja
xchg
adc
mov
mov
dec
fst
movs
test
cmp
xor
xchg
hlt
movs
imul
cmp
aas
popf
stos
pushf
mov
dec
(bad)
hlt
(bad)
push
push
jmp
cmps
inc
jp
bt
leave
ins
jmp
lock
popa
push
dec
fisttp
jo
pop
outs
call
js
rcl
dec
retf
xchg
adc
lock
hlt
pushf
mov
aas
cld
mov
cmp
icebp
fiadd
inc
xor
std
movs
jle
add
or
arpl
je
xchg
je
jl
pop
sub
mov
mov
add
rcr
or
(bad)
imul
in
inc
arpl
or
or
test
in
cmp
push
sub
aas
push
int3
xor
in
movs
ins
bound
imul
push
and
je
aad
shl
cdq
fs
fild
frstor
pop
je
call
(bad)
sbb
xchg
mov
or
jb
shl
xchg
jle
inc
dec
or
fs
int3
ret
pop
iret
les
es
mov
retf
inc
ror
call
clc
xchg
enter
bswap
pop
mov
push
cdq
dec
mov
pop
aaa
xchg
mov
jmp
scas
fst
(bad)
(bad)
and
mov
mov
clc
mov
add
and
lea
add
push
iret
outs
clc
and
jl
pop
pushf
clc
cmps
repnz
mov
hlt
push
mov
jnp
sahf
jmp
jns
jmp
int3
ja
mov
xchg
cmp
add
nop
mov
or
jp
mov
dec
cwde
dec
or
mov
sbb
cli
inc
sbb
adc
push
lds
sub
call
(bad)
cmp
test
xchg
es
aaa
xchg
sbb
jmp
pop
into
xor
ror
jmp
hlt
or
xchg
sub
pop
and
and
jae
xor
xchg
mov
lock
cmp
aad
ficom
sub
cli
xor
inc
xchg
ins
mov
dec
mov
jmp
push
add
ret
sub
mov
ror
mov
mov
push
push
adc
mov
fistp
adc
addr16
xlat
shl
or
inc
shl
jo
mov
xor
pop
push
jecxz
cmps
jmp
push
add
sahf
ss
and
xor
sub
rcl
push
or
and
dec
shl
mov
cmp
adc
and
jecxz
in
adc
iret
push
pop
pop
or
into
sbb
mov
mov
loopne
pop
lahf
adc
idiv
iret
pop
sti
sahf
seto
pop
adc
dec
imul
sub
jae
jl
xchg
fmul
and
mov
jge
and
emms
stos
adc
repz
inc
jb
je
pop
or
es
xchg
int3
mov
cmps
dec
call
cmp
call
inc
cld
or
cmp
cmps
xor
sbb
test
mov
retf
xor
xchg
sub
ja
outs
jg
test
lahf
pop
cdq
movs
push
ror
pop
lds
sub
movs
nop
and
cmp
loop
stos
inc
sub
inc
out
fxch
xor
sbb
or
push
or
xor
iret
test
sahf
xchg
cmp
xor
push
hlt
pushf
fwait
lds
stc
imul
mov
add
cmp
or
adc
sub
std
mov
sbb
xor
xchg
xchg
jno
pop
xchg
pop
mov
cs
lahf
imul
lock
jmp
gs
xor
mov
(bad)
pop
xor
test
inc
cmovs
es
stos
fbld
cdq
inc
data16
adc
sti
dec
dec
imul
loope
xor
inc
ins
pop
adc
les
outs
daa
fadd
lds
scas
test
inc
xor
inc
push
and
push
sbb
mov
into
inc
push
rcl
test
enter
fisub
inc
mov
stc
and
jnp
cwde
icebp
hlt
mul
xchg
sti
in
outs
pop
push
pop
lahf
ror
dec
sbb
stos
mov
sbb
out
mov
fisubr
sbb
fld
cmps
or
jmp
scas
add
jp
jmp
or
cmps
cdq
and
popf
add
dec
ror
push
xor
adc
fcomp
inc
sbb
jcxz
sub
arpl
ins
sbb
mov
cmp
adc
cmp
std
jge
sbb
into
or
gs
sbb
add
and
mov
sub
add
push
xchg
adc
sub
push
sub
mov
iret
push
inc
inc
in
pusha
cmps
pop
imul
sub
hlt
ja
dec
sbb
adc
outs
jmp
fisubr
jecxz
popa
ret
stos
test
(bad)
inc
xchg
push
push
or
jge
pop
out
mov
test
cld
out
jb
xchg
xchg
mov
jg
sti
sbb
mov
pusha
pop
jae
push
daa
out
lods
enter
and
jnp
sub
outs
mov
and
ret
pop
in
clc
jo
pop
xor
push
mov
pop
cmp
daa
dec
jecxz
sbb
dec
je
aaa
adc
sub
pusha
(bad)
pop
dec
xlat
mov
out
sysret
mov
dec
jg
sti
movs
fcomp
adc
nop
sbb
pop
scas
jb
(bad)
shl
ret
int
not
xor
inc
cwde
push
inc
ja
div
ret
jl
dec
std
jno
rol
xlat
out
arpl
or
jg
mov
add
sbb
sti
push
sbb
cmps
es
repnz
jge
add
mov
shl
pop
(bad)
test
mov
inc
pop
and
and
in
mov
(bad)
arpl
pop
ds
es
mov
push
pusha
mov
test
jnp
sub
push
js
cld
sbb
push
mov
ficom
aad
or
rcr
sbb
fwait
cmp
push
jno
dec
call
fild
cs
push
icebp
push
(bad)
out
pop
enter
jnp
jle
arpl
pop
and
div
mov
fld
mov
jne
call
out
jne
fwait
mov
cwde
pop
or
push
rcl
cmp
xchg
jmp
dec
inc
adc
jge
xlat
sub
loop
and
data16
enter
adc
imul
nop
pop
cmp
call
aam
add
jge
inc
mov
cli
sbb
xchg
popf
test
in
lahf
fidivr
mov
ss
cmp
mov
mov
bound
jb
jb
sbb
push
pop
mov
or
and
ror
fcmovnbe
ja
in
mov
xchg
adc
retf
sbb
sub
aam
pop
jecxz
(bad)
cld
(bad)
mov
sar
mov
lds
and
fstp
push
imul
sub
scas
cmp
inc
push
or
movs
mov
sbb
add
dec
rcl
jmp
sbb
mov
jl
ror
(bad)
ror
jg
outs
inc
fsub
jbe
mov
cmp
out
out
sahf
jecxz
sbb
cmp
div
fcmovnu
scas
or
xchg
adc
bswap
call
in
popa
out
fidivr
push
jnp
push
push
aad
mov
xchg
daa
mov
(bad)
mov
clc
push
pop
ret
mov
xchg
popa
push
dec
repnz
mov
scas
sub
sub
cmps
les
mov
push
aaa
push
jg
inc
sbb
dec
and
adc
ins
dec
sbb
mov
add
inc
arpl
stos
mov
xor
inc
and
add
movs
ror
pmuludq
int3
stos
jp
adc
jns
sub
dec
repnz
and
in
imul
call
repnz
sahf
sub
jge
lods
dec
out
xor
and
fwait
repnz
test
movs
shr
cmp
pop
sub
cmp
jns
mov
push
mov
loope
je
mov
cmp
dec
xchg
out
mov
cmpps
nop
push
xchg
daa
sbb
cld
aaa
imul
jecxz
xchg
lock
push
jge
cli
add
sbb
sub
out
outs
jne
call
retf
shr
push
sti
push
jns
pop
sbb
pusha
(bad)
int
arpl
ret
mov
(bad)
fldcw
cmp
fild
or
hlt
jl
lahf
call
mov
fild
ret
mov
bnd
icebp
fisub
push
cmc
jae
sbb
cmc
gs
add
cmp
sub
fisubr
call
out
push
je
cli
test
push
mov
dec
cmc
dec
ret
scas
ret
mov
cmp
aad
mov
sbb
cmp
imul
das
das
mov
jb
push
jnp
aad
sub
add
and
dec
aaa
rcl
pop
jecxz
out
sahf
and
pop
shl
sbb
mov
fiadd
lahf
xor
sub
pop
mov
pop
scas
fwait
or
xor
or
in
jnp
sbb
loopne
int3
outs
sub
out
jge
push
mov
pop
sbb
cmps
cmp
add
scas
inc
cmp
pusha
push
or
rcl
inc
jnp
dec
mov
inc
fcom
fld
jno
push
xor
cmc
iret
push
mul
stos
xor
test
xchg
stos
mov
xchg
jg
and
adc
popa
std
cmp
fwait
pushf
jae
stc
in
inc
ja
mov
and
adc
sub
aas
jmp
cmp
outs
fild
jmp
inc
pop
xchg
xchg
and
arpl
aas
push
add
rep
out
jl
sub
xor
dec
jmp
pushf
aaa
sti
mov
xor
xchg
cmp
cld
inc
xchg
sbb
jg
or
addr16
cmps
push
cmc
js
and
(bad)
(bad)
push
test
enter
(bad)
scas
sahf
or
fidiv
mov
cld
xchg
sbb
scas
nop
push
movs
inc
xchg
arpl
mov
nop
call
xchg
xlat
fiadd
mov
jbe
lds
jmp
retf
aam
inc
add
call
mov
clc
or
rcl
mov
repnz
popa
dec
iret
aad
add
mov
push
lods
sub
xchg
mov
cmc
mov
pop
mov
aam
pop
mov
test
(bad)
pop
loopne
mov
xor
add
xchg
jns
mov
push
sahf
push
aaa
mov
add
retf
or
push
mov
mov
xchg
cmp
sbb
imul
adc
dec
(bad)
rcl
jb
loopne
fnstenv
xchg
pop
jge
ret
aas
push
ins
leave
mov
push
cmp
jb
mov
shl
stc
mov
repnz
jo
retf
xlat
xor
mov
unpckhps
xor
lahf
mov
pop
push
xchg
retf
je
popa
push
inc
dec
add
push
test
mov
sub
inc
pop
movs
mov
das
fs
sub
jmp
shl
dec
bound
ins
jmp
sbb
pop
cmp
js
mov
pushf
pop
outs
pop
fidivr
mov
cmp
inc
arpl
pop
cmp
xchg
ins
push
fmul
out
leave
nop
aaa
stc
lods
push
mov
push
inc
pop
mov
xchg
mov
jnp
sub
mov
es
sub
sbb
jecxz
mov
xchg
pop
pop
add
sahf
fnstsw
pop
nop
lds
push
mov
hlt
rcl
int3
div
mov
jbe
sbb
mov
sub
aas
call
push
adc
fld
cwde
aas
xor
shl
sub
je
pop
jecxz
frstor
pushf
fidiv
and
out
add
je
loope
lods
into
xchg
jae
pop
and
call
idiv
mov
clc
enter
shl
test
inc
fnstcw
dec
add
(bad)
or
(bad)
push
dec
popf
mov
das
sub
scas
leave
push
and
stos
push
or
sbb
sub
dec
lock
adc
gs
lds
xor
adc
jmp
cmp
push
jle
xor
and
imul
je
add
cmp
stc
pusha
mov
add
pusha
and
sub
mov
jg
sub
leave
pop
mov
test
sub
jle
mov
sahf
or
out
xlat
je
push
adc
mov
mov
jns
je
fucomp
mov
cmps
(bad)
lods
out
loope
daa
sub
push
inc
out
and
out
and
movs
pusha
scas
test
mov
or
and
or
inc
sub
sti
lahf
mov
and
sub
cmp
cs
fadd
cmc
pop
mov
mov
ror
scas
adc
(bad)
aam
retf
push
aad
lods
outs
ins
mov
inc
cmp
leave
icebp
retf
sbb
sbb
(bad)
mov
push
lds
push
inc
fld
lock
push
sub
mov
jge
mov
jnp
mov
xchg
cld
ins
in
dec
jmp
jg
add
das
ins
cli
jp
xchg
sbb
and
pushf
jmp
rol
or
jo
mov
gs
mov
cmps
xor
jnp
push
pusha
sbb
cli
rcr
xchg
pushf
loope
ins
push
les
mov
mov
add
mov
test
loope
stc
mov
push
scas
leave
cmps
pop
mov
les
test
ja
stos
stos
ret
cs
rcl
add
aas
int3
sub
xchg
jno
sbb
repnz
out
jbe
add
into
(bad)
adc
mov
out
les
sar
mov
shl
xchg
add
mov
in
retf
add
(bad)
cmp
cmp
in
jb
adc
leave
stos
mov
fisubr
hlt
add
pop
sahf
mov
dec
cmps
inc
test
into
sbb
and
inc
push
sbb
arpl
test
mov
cld
pop
sar
xchg
cmp
pop
in
sahf
sbb
lods
dec
fidivr
rcl
mov
sti
jbe
rol
cmps
xchg
jecxz
dec
call
mov
cld
hlt
stos
sbb
mov
push
push
push
sbb
xchg
call
mov
test
(bad)
jb
or
ret
add
and
jo
retf
call
arpl
fwait
cmp
dec
sub
into
push
mov
leave
das
cmp
retf
sti
jae
fcom
clc
pop
fld
push
adc
movs
mov
cmc
xor
pop
bound
jg
jb
xchg
in
add
(bad)
in
push
retf
mov
pop
xchg
xor
int3
push
test
in
popa
bound
(bad)
cli
lock
sti
test
sbb
and
or
push
sti
addr16
cmp
jb
iret
vmovups
or
inc
sub
les
daa
imul
sahf
mov
adc
pushf
mov
faddp
lds
or
add
dec
hlt
jae
mov
add
test
nop
enter
outs
xchg
add
dec
or
popf
and
cmp
popf
xchg
stos
jnp
idiv
into
pop
ins
call
mov
stc
mov
dec
icebp
retf
pop
scas
scas
sbb
(bad)
das
(bad)
push
ds
stc
aas
sub
add
hlt
lea
xchg
pop
push
inc
xchg
fistp
inc
stc
mov
pop
shl
add
add
ret
dec
into
xor
je
daa
or
aaa
lods
arpl
daa
in
daa
pop
arpl
sti
ds
xor
sbb
dec
mov
jno
push
cmps
cmps
add
pop
mov
retf
test
push
cmps
cmps
hlt
push
mov
loop
push
ins
inc
fdivr
jo
mov
jge
cmp
mov
clc
cmp
outs
cmp
repnz
icebp
nop/reserved
pop
push
clc
mov
aas
lods
fild
push
out
add
loop
or
dec
xor
pop
cmps
cmps
adc
add
cs
add
loopne
ins
jb
sub
mov
sub
jne
and
not
mov
iret
ss
sar
popf
push
mov
mov
dec
loop
fisubr
push
pop
xor
mov
dec
popf
jne
sti
out
xor
jg
sub
or
mov
pop
ds
jnp
fisttp
cwde
dec
cmps
push
jle
jbe
arpl
push
iret
cli
ret
sub
lock
(bad)
cli
js
in
xchg
test
or
sbb
enter
arpl
nop
push
dec
mov
mov
xchg
sub
stos
retf
dec
stos
mov
pusha
inc
sti
sub
sub
aam
jmp
call
arpl
lods
dec
or
push
sub
sar
je
scas
jbe
loope
add
xor
mov
xchg
lds
(bad)
jb
ret
cwde
enter
or
dec
sar
jnp
push
sub
sbb
int
adc
loop
lods
mov
js
pop
jge
dec
imul
cmp
(bad)
dec
inc
sub
push
loope
in
les
ins
mov
fcomi
or
xor
mov
sbb
shr
ja
inc
xor
jmp
or
xchg
out
cmp
int
movs
xchg
dec
cdq
pop
cwde
dec
arpl
fninit
xor
push
sti
dec
xor
retf
mov
jmp
jae
bound
arpl
and
jns
outs
je
add
in
sbb
jl
adc
fcmovnbe
test
js
sbb
pop
jmp
push
push
arpl
jecxz
test
add
xchg
imul
lock
jl
add
mov
jg
push
movs
das
test
pop
in
test
adc
in
add
push
test
in
cmp
inc
fstp
pop
xor
sbb
jo
cld
pusha
xor
add
(bad)
sub
lock
pop
mov
cmps
adc
jns
add
lds
rcl
pop
scas
jns
scas
aas
lods
cmps
mov
ret
cmp
je
xor
xchg
mov
dec
call
or
adc
retf
test
add
bound
dec
sti
mov
loopne
cmp
(bad)
jecxz
pop
test
pushf
mov
pop
dec
(bad)
sti
(bad)
jo
movs
ja
pop
(bad)
(bad)
loopne
sbb
test
or
dec
mov
add
rol
add
test
out
cmp
movs
fist
mov
mov
cmp
out
inc
jl
pop
pop
retf
pop
nop
mov
clc
mov
ret
xchg
ins
retf
mov
pop
into
ins
sbb
xor
mov
sub
adc
sub
jle
loope
inc
or
jnp
leave
dec
test
repnz
mov
imul
mov
or
(bad)
sar
shl
popw
xchg
movs
xor
jg
rol
shl
mov
aad
add
jl
mov
fstp
dec
test
imul
mov
lods
lahf
loope
pop
xchg
fidiv
stos
xchg
xchg
pop
jp
aad
int
(bad)
inc
adc
fnsave
pushf
mov
xor
fisttp
sub
pop
loope
inc
or
mov
into
cmps
leave
pop
stos
(bad)
jne
mov
test
sbb
push
push
cmp
imul
push
test
test
fist
mov
lock
or
xor
adc
cmp
jbe
or
or
stos
js
pop
inc
mov
test
or
(bad)
push
mov
ror
(bad)
sub
xor
cmp
das
js
stc
push
cmp
mov
xchg
or
mov
lea
push
imul
call
adc
pop
mov
aaa
sub
stos
hlt
xchg
add
push
in
jp
xchg
mov
sub
popf
pop
mov
jb
push
mov
cmp
push
ror
fwait
push
int3
pop
imul
inc
lock
lahf
pop
mov
fwait
push
sbb
out
enterw
add
mov
dec
(bad)
jl
adc
dec
data16
xchg
shl
adc
mov
push
dec
rol
(bad)
(bad)
jle
cs
ins
cmp
xor
daa
sbb
push
cs
xchg
push
mov
xchg
cmps
xor
sub
push
inc
ret
mov
movs
push
or
jno
lds
shl
cdq
out
cmp
dec
aam
nop
in
retf
fdivrp
sahf
pop
out
jmp
or
xchg
mov
mov
ror
mov
jns
xor
je
push
into
fiadd
movs
jle
jle
push
sbb
(bad)
jnp
test
push
and
in
mov
bnd
add
mov
int3
(bad)
movs
sbb
add
neg
or
xor
imul
mov
xchg
push
mov
lods
cld
xchg
or
cmp
clc
jmp
jmp
shl
dec
stc
jp
push
shr
(bad)
cli
(bad)
int3
push
lock
js
mov
stos
mov
xor
fs
jl
(bad)
(bad)
dec
mov
mov
(bad)
(bad)
cld
sahf
adc
neg
(bad)
mov
pop
sub
pushf
test
jge
adc
(bad)
je
inc
mov
add
sub
add
cmps
sub
shl
pop
fs
dec
imul
loopne
loop
sbb
mov
clc
ret
mov
jmp
les
jge
(bad)
aam
out
jnp
mov
add
pop
push
mov
mov
in
out
mov
(bad)
sar
test
jno
mov
inc
ds
xor
jp
xchg
sahf
jbe
cmps
mov
add
(bad)
ins
neg
dec
movs
call
enter
syscall
sub
lahf
jge
mov
repz
mov
xlat
movs
fmul
or
xchg
push
test
mov
out
adc
cmp
inc
es
push
mov
push
cmps
in
adc
xor
scas
and
xchg
mov
movs
out
ret
or
jno
inc
push
cmps
shl
addr16
daa
add
jb
ins
mov
(bad)
mov
lahf
(bad)
jnp
or
inc
pop
jb
int3
xor
push
fstp
xor
xor
aaa
test
ret
hlt
push
outs
push
in
outs
push
pop
jecxz
jge
sar
ficom
or
xor
movs
push
jbe
and
dec
shl
or
je
mov
mov
or
ja
cmps
push
pop
call
xchg
xor
xor
pop
int
cld
inc
mov
and
loop
imul
sub
xchg
leave
and
fldcw
adc
enter
lahf
lods
mov
shr
inc
push
aas
xchg
or
mov
sar
dec
adc
scas
test
addr16
ret
mov
outs
ficomp
xor
clc
xchg
mov
inc
pushf
mov
cli
cmp
inc
sub
scas
add
shr
sbb
xor
jae
xor
aaa
dec
push
jns
adc
mov
in
mov
or
stos
jns
push
xor
outs
cmc
stc
pop
stc
dec
pop
mov
sti
bound
push
outs
dec
scas
scas
jno
stos
lods
daa
stc
or
push
mov
jne
test
sub
and
xor
jo
out
dec
leave
(bad)
mov
test
mov
retf
shl
(bad)
ficom
sub
test
in
mov
iret
lods
jbe
sbb
inc
cmps
outs
jnp
xchg
jg
ret
jg
adc
cld
call
loop
or
fsub
int3
xor
and
bound
jge
pop
dec
or
adc
inc
pop
icebp
addr16
xor
test
scas
or
ror
sti
pusha
inc
leave
xchg
xchg
jb
jl
push
sub
mov
fld
xchg
and
mov
pop
leave
mov
fmul
lods
push
pop
push
push
fsub
lods
jae
jb
push
cmp
and
push
and
bound
aad
sti
cdq
popa
jge
imul
es
xchg
scas
pop
cwde
mov
icebp
test
add
(bad)
(bad)
stos
cmp
scas
mov
inc
sbb
adc
jns
add
xchg
and
pop
loopne
aaa
dec
call
sub
leave
inc
add
xor
dec
pop
mov
cld
cli
xchg
in
ds
jecxz
jne
mov
cmps
cmp
int
in
push
mov
sbb
retf
mov
sbb
retf
ins
in
call
retf
adc
(bad)
adc
aad
or
popf
pop
out
out
and
xor
add
push
in
les
hlt
ins
mov
cmp
cmp
dec
pop
dec
dec
das
mov
outs
inc
jne
loope
imul
cmp
int
lea
fadd
jne
test
sbb
(bad)
(bad)
xchg
push
push
push
xchg
out
enter
or
lds
retf
data16
sub
sub
test
mov
dec
mov
adc
aad
outs
or
fcomp
ficomp
or
data16
xor
stos
xor
stc
cmp
mov
addr16
cmc
jmp
mov
gs
cmp
pop
retf
out
cld
out
test
jae
jo
mov
jp
inc
or
test
or
cmp
pop
out
dec
mov
ins
or
push
xor
cs
mov
scas
mov
sbb
stos
or
mov
cmp
sub
adc
jbe
jno
std
imul
stc
or
xchg
xor
adc
addr16
ficomp
sti
test
cmp
pop
sahf
ja
pusha
ins
popf
dec
xlat
enter
xchg
in
mov
mov
xchg
iret
and
jge
test
sbb
jne
cmps
add
mov
pop
gs
mov
jecxz
into
or
jb
test
mov
and
adc
fld
aaa
lds
xchg
push
mov
loop
in
mov
js
sahf
sbb
hlt
cmps
fcom
and
sub
into
xor
jl
jo
and
and
xor
sbb
scas
imul
and
out
xor
jg
pop
cmps
jmp
stos
cli
mov
or
cmps
les
shr
push
in
sbb
fistp
sbb
imul
test
pop
mov
cmps
jbe
inc
pop
jb
fxch
jmp
push
jo
arpl
ins
cmp
in
fcmovu
mov
adc
pop
jmp
inc
repz
pop
loop
push
adc
lds
pop
mov
cmp
call
push
leave
cli
xlat
std
ins
push
js
sub
les
loopne
or
rol
and
hlt
pusha
das
outs
jl
loop
add
adc
hlt
out
inc
test
test
or
xchg
cld
fdivr
xor
aam
adc
dec
mov
pop
(bad)
mov
xor
das
(bad)
dec
sub
cmp
bound
fdivrp
mov
pop
jg
cmps
lods
lods
(bad)
sub
push
pop
icebp
push
icebp
mov
enter
pushf
adc
cmp
neg
mov
les
jnp
les
or
daa
jg
or
inc
push
pop
loop
mov
or
sbb
pop
xor
nop
adc
gs
fldcw
xchg
(bad)
cmp
or
call
add
retf
fbld
pop
int
mov
fs
xchg
dec
lods
adc
pop
mov
inc
xor
gs
mov
or
xchg
and
lock
xchg
ds
movs
(bad)
pop
jmp
repz
das
sahf
int
push
or
cdq
mov
xchg
adc
pop
lods
cdq
movs
sub
adc
jl
push
xor
(bad)
pop
lea
(bad)
xchg
pop
repz
mov
xchg
xchg
mov
xor
stc
mov
or
mov
les
movs
aad
(bad)
pop
out
cmps
hlt
adc
aam
sbb
cs
jl
sbb
jmp
fisubr
pop
in
bound
ja
adc
(bad)
mov
and
daa
les
jne
lods
ss
jne
mov
and
outs
push
enter
into
movs
popa
mov
repz
pop
mov
push
aaa
loopne
data16
ficom
imul
pop
stc
dec
lds
stc
aaa
jns
in
mov
mov
shl
mov
cmp
sub
pop
shr
bound
xor
inc
pop
xor
adc
in
dec
test
popf
(bad)
hlt
push
mov
or
ja
retf
cld
and
scas
pop
adc
cmp
repz
std
aas
mov
loop
outs
shl
lea
or
jl
cwde
adc
scas
out
inc
sbb
or
inc
and
mov
adc
aas
sbb
cmps
mov
mov
lea
mov
jnp
cmp
ret
xchg
sbb
or
fld
leave
dec
data16
out
or
icebp
mov
sub
(bad)
imul
loope
pop
mov
push
in
dec
mov
inc
and
(bad)
adc
icebp
stos
pop
jp
mov
mov
outs
arpl
es
cmp
gs
call
and
add
(bad)
adc
(bad)
xor
push
aas
ins
in
in
es
xlat
movups
sti
jno
dec
sub
fisubr
adc
aaa
shr
xchg
mov
jbe
test
mov
push
out
cmc
aam
sqrtps
stc
(bad)
fwait
mov
add
adc
add
mov
push
xor
lock
jbe
in
push
mov
leave
mov
cmp
pop
sub
xchg
or
test
pop
icebp
repz
adc
outs
loop
or
in
fwait
imul
mul
mov
mov
test
jge
and
pop
xor
xor
fstp
xchg
dec
pop
fadd
xor
xchg
xchg
pop
cmp
push
retf
shr
and
lds
test
sahf
mov
mov
push
dec
jl
mov
in
sbb
dec
sbb
es
aaa
shl
inc
mov
aad
xchg
stc
sbb
and
in
lahf
mov
fild
enter
mov
les
pushf
jmp
(bad)
stos
sub
dec
stos
movs
cli
mov
cdq
(bad)
rcr
or
mov
and
mov
in
nop
add
mov
out
jmp
pop
ret
(bad)
out
enter
lods
ins
fist
ror
ficomp
or
sub
aad
outs
and
jl
das
mul
mul
test
xchg
(bad)
loope
mov
cld
xchg
cmp
mov
jb
inc
cmps
aam
jmp
inc
inc
nop
ja
(bad)
jo
cs
je
outs
jmp
inc
aaa
jmp
dec
sbb
xor
mov
sub
xchg
inc
arpl
scas
ins
mov
rcl
dec
and
mov
imul
loope
test
pop
inc
adc
push
mov
scas
push
movs
sub
push
aas
mov
push
test
sbb
lods
ins
pop
and
push
int
lods
maxps
cs
xor
mov
stos
or
aaa
in
mov
cwde
xchg
call
ja
dec
pop
or
fisttp
aaa
(bad)
mov
dec
pop
sub
dec
and
test
test
cmps
cmp
jmp
das
push
pop
mov
cmp
shr
cld
aaa
sbb
ja
shr
popf
retf
mov
xor
(bad)
add
and
out
cmp
lods
push
sub
sbb
pop
es
ins
jo
dec
mov
and
push
inc
pop
mov
(bad)
mov
mov
add
ja
mov
push
mov
ins
into
xchg
out
fwait
jl
mov
jb
and
xchg
push
iret
jge
(bad)
sbb
dec
jp
mov
push
outs
inc
mov
fwait
imul
wrmsr
mov
pop
(bad)
mov
das
xor
hlt
fcom
add
pop
dec
hlt
cmp
(bad)
sar
lahf
rol
push
push
lock
add
jecxz
std
adc
in
jne
stos
mov
test
out
and
jp
ror
sbb
xchg
sub
cmps
mov
pop
test
jb
sahf
ret
mov
mov
inc
js
push
sti
sahf
push
xchg
push
mov
stc
out
cmp
xor
xor
mov
and
pusha
sub
push
pop
and
ja
dec
les
mov
dec
shl
push
arpl
add
loope
ror
jle
(bad)
mov
sbb
shl
in
fs
mov
sbb
aaa
repnz
lods
jae
add
mov
(bad)
outs
shld
pop
stos
mov
xor
sub
and
fst
das
mov
sbb
cmp
mov
fadd
out
inc
adc
pop
xchg
call
dec
add
pop
mov
mov
daa
sbb
repz
adc
aam
scas
es
je
ja
call
and
leave
sahf
outs
arpl
nop
add
retf
jp
fs
dec
imul
jecxz
mov
repnz
sub
lods
inc
in
sbb
pop
aad
shl
sub
xor
sbb
imul
adc
nop
and
xchg
fisub
mov
and
jne
dec
jle
call
or
in
mov
pop
jb
jp
mov
push
cdq
or
jl
hlt
pop
add
dec
fidiv
bsr
in
mov
imul
fist
dec
movs
cmp
pop
jmp
mov
dec
mov
mov
pop
jne
clc
dec
cmp
jne
and
mov
inc
xor
push
fistp
cmp
mov
daa
push
push
jo
into
ja
dec
cmp
push
loop
and
pop
rcl
xor
scas
mov
cli
mov
add
mov
add
fistp
retf
inc
pop
add
ror
test
call
adc
repnz
push
or
rcr
test
mov
out
push
cmps
sub
ja
add
push
xchg
cli
sub
add
jmp
repz
adc
pop
mov
xchg
pop
arpl
add
in
dec
push
fcomp
inc
push
sub
bndstx
jmp
adc
sub
iret
cs
test
pop
lods
dec
push
or
pop
push
cwde
push
xchg
not
push
jns
je
sbb
inc
inc
cmp
sbb
mov
mov
add
mov
fs
stos
and
dec
xchg
jne
loope
or
add
aas
stc
stc
mov
cmp
shl
add
or
add
int
jmp
adc
pop
cmp
sbb
das
cmp
out
mov
sbb
arpl
ret
xchg
jmp
mov
shl
and
imul
cmp
sub
jge
push
in
fsubr
nop
mov
xchg
adc
dec
dec
sbb
out
int3
vpaddb
cmps
pusha
and
shr
sahf
fst
push
pop
xchg
mov
ins
xchg
xchg
(bad)
mov
push
icebp
cld
dec
or
std
mov
xchg
fidiv
repz
daa
pop
jns
sub
push
jp
stos
int
or
inc
lea
ror
test
xchg
cli
imul
push
inc
dec
sub
sub
or
fdivr
jb
or
xlat
or
mov
dec
cmps
add
add
adc
add
ret
sub
icebp
vpmacswd
popf
fst
xlat
mov
leave
cmps
out
fnstcw
jmp
push
cmc
in
push
mov
cmp
xor
push
aas
sbb
or
push
sub
fiadd
mov
dec
fbld
(bad)
outs
test
loopne
mov
(bad)
out
stos
sub
pop
in
pop
loop
pusha
mov
add
nop
pop
fld
mov
mov
sbb
cmp
shl
xor
mov
dec
push
(bad)
sbb
js
clc
cli
out
sti
and
mov
xor
pop
lds
aad
dec
jmp
cmp
mov
leave
xor
xbegin
pop
xchg
mov
xor
dec
dec
mov
inc
(bad)
pop
sbb
cdq
les
mov
inc
sbb
out
mov
cmp
sub
lds
es
pop
loop
sub
pop
js
fcomp
sahf
jp
test
aad
add
push
and
mov
popa
or
test
mov
push
cmp
out
ret
push
mov
cmp
imul
jo
xchg
arpl
cmp
adc
cld
(bad)
imul
cmps
push
stos
fcomi
push
cmp
fcmovnu
ret
xchg
xor
mov
clc
or
lock
outs
ins
jmp
sub
ss
xlat
cmps
sbb
sbb
dec
movs
stos
fbld
fwait
out
rcr
pop
lods
pop
xchg
mov
dec
jl
(bad)
mov
sbb
lahf
sub
out
shl
or
mov
(bad)
enter
rcl
and
mov
sar
ds
adc
lods
dec
or
adc
nop
adc
and
xchg
add
push
push
or
aas
mov
call
cmc
shl
add
iret
shl
adc
mov
jp
iret
out
cld
clc
push
js
adc
sub
sti
data16
add
and
mov
imul
mov
add
mov
jno
(bad)
mov
xor
call
sbb
pop
out
adc
cmp
and
lods
icebp
push
rol
mov
push
out
add
cmp
ins
ja
pop
inc
mov
cmp
inc
into
mov
push
mov
call
fidivr
jnp
ret
sub
ins
rol
push
mov
rol
inc
call
(bad)
loop
call
inc
neg
push
jno
loopne
not
ss
mov
or
arpl
in
aam
in
adc
rcl
jp
cmp
nop
xor
mov
and
test
dec
xchg
push
or
inc
jmpw
mov
mov
scas
loope
push
and
mov
mov
sub
cmp
xor
cmps
xchg
bound
pop
in
xchg
mov
js
and
sbb
test
fdiv
or
test
xor
mov
(bad)
adc
and
pop
cmp
popf
push
fisubr
jmp
inc
jmp
fcmovb
das
adc
mov
retf
push
push
inc
xchg
je
sbb
sub
scas
rcl
icebp
mov
hlt
mov
popa
rcl
cwde
dec
push
mov
pop
(bad)
mov
and
jmp
sbb
es
push
call
xchg
cwde
(bad)
cmp
dec
test
mov
scas
jnp
dec
into
cmp
(bad)
jecxz
push
jb
in
jle
mov
push
jbe
mov
leave
add
jmp
dec
shr
cli
cs
aas
out
push
loope
add
pop
mov
dec
test
das
dec
pusha
ins
sbb
lods
bound
in
mov
sub
mov
hlt
push
cli
iret
imul
sahf
lods
xlat
xor
hlt
sub
fst
scas
or
shl
adc
inc
mul
inc
rep
push
mov
out
in
mov
adc
js
outs
xor
sbb
push
jb
push
push
dec
or
inc
loopne
sbb
jmp
jp
sbb
mov
push
scas
mov
fnstcw
jns
mov
shl
int3
cmp
jecxz
jno
fldcw
add
int
repz
push
xchg
jecxz
pop
nop
xchg
leave
fild
out
pop
pop
fnstsw
adc
adc
dec
pop
test
sbb
mov
or
mov
jnp
call
push
addr16
dec
or
fstp
call
outs
movs
dec
jmp
mov
retf
sbb
and
bound
aad
clc
into
pop
cs
repz
rcr
movs
pop
xchg
cmp
clc
test
lods
xrelease
std
mov
fnsave
lods
fs
mov
sahf
push
test
lods
(bad)
sub
xchg
jg
leave
mov
sti
pop
cli
int3
dec
cld
xor
call
test
(bad)
and
mov
pop
adc
arpl
and
cmp
and
ds
jnp
dec
cdq
jb
mov
sbb
lahf
mov
and
xor
sub
mov
jmp
clc
xlat
or
jp
pop
(bad)
repz
jg
cmp
call
call
(bad)
dec
push
jge
shr
mov
xor
out
fstp
les
jmp
in
adc
or
sahf
lds
push
pop
gs
test
mov
jnp
jg
xchg
scas
inc
xor
mov
test
std
mov
cmp
sub
fnstcw
sub
(bad)
outs
jbe
pop
xchg
(bad)
test
jne
ins
pop
sbb
inc
cmps
pop
fisttp
movs
es
or
adc
pop
jmp
dec
jp
sbb
das
loopne
jne
sbb
mov
push
les
(bad)
jmp
gs
jno
fst
js
ret
sbb
inc
aad
les
pop
push
and
inc
mov
inc
jns
add
mov
pop
jl
mov
loopne
pop
ror
movs
sbb
cdq
aas
pusha
mov
fidiv
fwait
stc
retf
lahf
outs
mov
jecxz
rol
arpl
sbb
jne
leave
into
push
push
(bad)
test
sbb
add
mov
xor
lods
aad
out
sbb
lods
or
repnz
push
or
jb
std
inc
jg
or
ss
and
lahf
jp
fisubr
pop
mov
fiadd
or
mov
mov
jp
cli
lds
add
and
arpl
cmp
pop
movs
adc
in
dec
mov
or
cs
cmp
add
daa
ds
dec
pop
and
mov
inc
leave
lods
sbb
or
mov
int
(bad)
adc
mov
mov
sahf
ret
lods
mov
mov
dec
cmp
mov
cdq
pop
or
scas
add
sbb
sub
shl
mov
call
shr
add
leave
add
inc
push
sti
lock
push
nop
inc
mov
sbb
adc
(bad)
das
or
sbb
scas
cmp
ret
jb
fs
pop
jae
inc
or
je
cwde
and
iret
pop
std
dec
(bad)
fcom
movs
mov
mov
leave
es
dec
ins
cmp
out
es
inc
dec
outs
movs
sub
and
dec
pusha
ins
(bad)
adc
adc
sub
ret
cwde
add
adc
daa
dec
mov
mov
mov
clc
adc
pop
in
jmp
dec
pop
ret
cmp
xor
xor
add
mov
shl
les
jbe
cmp
int
scas
cmp
pop
gs
xchg
inc
sub
sbb
mov
pushf
cmp
call
nop
mov
jnp
jne
cli
pop
adc
pop
mov
pop
(bad)
fsubr
xchg
pop
sbb
dec
add
xor
or
out
rol
ror
mov
jp
and
jae
popa
fwait
xlat
retf
inc
push
dec
cmps
jnp
mov
pop
call
mov
sbb
js
retf
aad
mov
sbb
jb
and
and
pusha
mov
leave
call
cmc
fwait
add
loope
je
lock
movs
arpl
ins
daa
dec
push
or
mov
rol
test
xlat
push
xor
jmp
pop
es
mov
inc
test
xchg
jnp
call
das
or
cmp
mov
sbb
cmc
mov
inc
pop
std
pop
or
sbb
cmp
popa
push
xchg
scas
and
stos
add
dec
lock
dec
out
inc
shl
push
retf
xor
jle
jp
push
cmp
int3
pop
push
(bad)
(bad)
std
add
xchg
adc
inc
push
movs
in
mov
pop
sub
mov
jl
dec
add
jmp
pop
push
xor
shl
sbb
or
ins
mov
cli
and
cmp
cmc
push
out
shl
adc
aas
pop
popa
ja
scas
xor
pop
dec
xchg
aad
shr
jno
fdivr
mov
pop
jns
jg
push
adc
jbe
push
int
xor
mov
jno
daa
push
pop
cmps
push
push
je
and
bound
addr16
jmp
push
out
xchg
cs
rcl
test
out
push
out
add
fwait
sbb
(bad)
adc
push
xor
adc
fst
repnz
sub
shr
push
mov
cdq
sahf
aad
bound
pop
sbb
rol
lods
xchg
stos
popa
mov
movs
adc
mov
cmp
push
int
cli
xchg
add
sbb
fldenv
cwde
add
arpl
sbb
stos
imul
imul
mov
push
adc
lock
inc
into
daa
pushf
in
(bad)
les
dec
cmp
adc
xchg
mov
in
sub
ds
stos
lea
mov
mov
outs
lahf
pop
xchg
push
xor
loop
into
loopne
cli
push
dec
out
cmp
(bad)
repnz
mov
add
mov
arpl
addr16
jne
pop
mov
jbe
inc
in
popa
adc
daa
and
movs
mov
push
adc
mov
ret
popf
cmp
or
dec
test
pop
push
(bad)
jmp
jne
cmc
or
sbb
lods
shl
repz
in
jle
pop
jge
xor
repz
pop
pop
test
mov
retf
(bad)
movs
aad
int3
mov
adc
gs
jg
imul
retf
repz
in
mov
cs
int
into
inc
je
scas
mov
ror
sbb
xlat
cld
pop
xlat
mul
xlat
mov
es
outs
or
jp
(bad)
jnp
int3
and
stos
adc
fucomi
scas
add
ficom
sub
cmps
and
mov
icebp
jno
shr
(bad)
adc
dec
imul
das
mov
xor
mov
out
pop
xor
xor
adc
and
ret
fstp
movs
fbld
jnp
push
dec
xchg
js
stos
mov
or
inc
push
ret
add
test
pop
sub
mov
push
mov
dec
dec
xchg
adc
mov
cmp
jno
movs
mov
adc
or
jno
mov
inc
loopne
pop
pusha
inc
adc
lea
push
les
pushf
xlat
xchg
imul
fnsave
scas
mov
test
mov
test
or
and
icebp
xchg
adc
addr16
jge
push
cld
ret
outs
icebp
inc
inc
iret
add
inc
and
push
jge
push
out
jne
or
outs
inc
xor
mov
jle
out
mov
addr16
je
sbb
fisubr
or
or
push
jnp
jl
jg
sti
es
jbe
fcmove
mov
or
out
adc
push
and
test
ins
out
xchg
adc
push
idiv
test
xchg
les
push
dec
xlat
out
mov
lods
outs
mov
xor
or
lods
(bad)
and
mov
or
fidiv
fsubr
hlt
sbb
movs
sub
(bad)
int
das
dec
xchg
mov
pop
sbb
adc
mov
or
push
sub
(bad)
push
jmp
inc
jp
out
int
and
loop
inc
popf
mov
iret
mov
push
add
(bad)
push
xor
sbb
mov
fadd
inc
jo
adc
push
cmp
daa
mov
push
aas
pop
and
xor
sbb
sahf
xor
sar
jmp
retf
dec
test
clc
fucomp
xor
xor
sub
dec
loope
pop
push
int
sub
dec
adc
mov
sbb
mov
retf
sub
mov
adc
aad
xor
jae
jns
and
je
pop
lods
mov
dec
fs
pop
call
scas
retf
mov
cld
jmp
imul
xchg
or
mov
(bad)
push
dec
cmps
push
inc
mov
sub
mov
mov
test
mov
xor
sar
jnp
fdiv
es
sbb
loope
lahf
rcr
loopne
mov
pop
inc
mov
(bad)
out
or
imul
cmp
ss
dec
sub
jbe
mov
sub
sbb
mov
fmul
inc
clc
cs
mov
xchg
out
into
mov
jmp
sbb
in
add
popa
cmps
in
push
inc
jmp
ja
mov
(bad)
and
fs
push
retf
lock
sub
xor
test
les
mov
mov
jo
pop
mov
mov
cli
mov
xchg
imul
dec
cmp
dec
imul
ins
call
aas
fwait
pop
int
push
call
int3
not
jae
mov
xchg
cmp
std
fdivr
jb
push
xchg
pop
jno
jb
add
add
xchg
inc
lods
adc
mov
shr
add
xor
test
pop
sbb
add
inc
aaa
fs
sub
out
ds
sub
pop
mov
inc
shr
fs
das
mov
jmp
xchg
ss
xor
adc
or
shl
jle
clc
std
test
cmp
and
pop
mov
or
and
and
out
loop
ret
cmc
fs
retf
mov
(bad)
and
and
push
fwait
in
pop
mov
cmp
lds
pushf
mov
xchg
cmp
pushf
outs
inc
pop
adc
fidiv
push
bswap
jb
lods
lahf
psrld
push
test
cmp
sbb
and
pop
scas
or
stos
xor
mov
popa
fild
dec
sbb
adc
sub
je
jo
dec
fwait
fwait
mov
inc
sub
mov
mov
xchg
sbb
sar
mov
cmp
dec
cwde
clc
sub
add
cmp
inc
movs
add
lds
pop
adc
icebp
cmp
das
xor
cmp
out
sahf
xor
xchg
or
adc
or
xchg
in
mov
sbb
mov
outs
jmp
sbb
inc
push
pop
adc
dec
add
sub
mov
loopne
bound
mov
mov
arpl
pop
xchg
movs
call
and
sub
bound
sub
push
mov
push
xchg
in
shl
aad
mov
sbb
ds
xchg
(bad)
(bad)
bound
mov
xchg
xor
pop
sbb
scas
inc
aad
and
or
push
mov
imul
jp
inc
and
outs
mov
add
inc
cmp
lahf
adc
mov
shr
iret
lods
fsub
les
test
xor
js
cmp
cmc
fcmovne
sbb
mov
adc
jo
test
int
movs
push
mov
xor
xor
std
cmp
mov
inc
add
dec
mov
test
das
add
xchg
cwde
in
xchg
cmp
sbb
add
jmp
sub
or
mov
rcr
add
aas
sub
mov
inc
aaa
pushf
inc
icebp
adc
sub
add
sahf
inc
sub
mov
pop
nop
mov
or
pop
cld
push
outs
cmp
sbb
xlat
lea
or
adc
xor
and
sub
push
xor
enter
loopne
in
and
sbb
sbb
js
and
in
ins
sbb
cmp
push
inc
mov
cwde
mov
aad
pushf
sahf
cmp
cli
pop
out
mov
rcl
pop
aas
fnstcw
adc
cwde
sbb
mov
or
into
push
sbb
fs
psllq
jns
inc
test
pop
fs
mov
cwde
retf
mov
inc
xor
mov
mov
jne
lods
stos
gs
call
call
test
cmps
ins
inc
xchg
mov
aam
out
mov
mov
test
jbe
jge
jge
dec
push
in
pop
idiv
(bad)
stc
mov
inc
push
mov
pop
jp
xor
lods
mov
daa
and
xor
pop
or
ins
jmp
js
popa
loop
inc
leave
cmps
jno
outs
dec
mov
mov
xchg
imul
and
or
sub
shr
pop
adc
sbb
jo
jnp
pop
pop
push
retw
cmc
ret
xor
xlat
int
inc
sub
ins
pslld
sti
xchg
cmp
cdq
test
out
mov
pop
sbb
push
jno
rcr
aad
retf
test
push
cmc
jge
mov
shl
test
pop
mov
and
pop
jmp
cwde
int
push
arpl
mov
pop
or
adc
aad
and
push
pop
and
adc
xchg
mov
cmps
inc
fld
mov
icebp
lea
and
xor
imul
sub
push
fnsave
or
push
sti
xchg
test
fnstenv
ins
sti
xchg
mov
out
or
dec
push
and
bound
mov
movs
or
adc
popf
add
mov
ficom
lods
xor
pop
leave
ret
push
pop
(bad)
nop
push
inc
mov
xor
sbb
mov
xor
je
addr16
and
mov
xchg
(bad)
push
fcom
cmc
sub
push
out
dec
sbb
push
and
fimul
jb
inc
test
and
loope
and
imul
mov
fiadd
outs
pop
jae
sbb
mov
push
mov
push
mov
aad
es
and
fstp
mov
pushf
mov
test
mov
arpl
or
ret
(bad)
sbb
(bad)
mov
pop
into
mov
popa
sub
push
mov
mov
mov
sub
cmp
add
int3
int
mov
sbb
push
aam
or
test
movs
repz
fnstcw
ja
pop
test
int3
mov
jnp
and
lods
jg
mov
xor
pop
test
rol
div
int3
and
stos
mov
(bad)
nop
cmp
and
mov
sub
in
aaa
and
sbb
cmc
sti
pop
ins
inc
mov
(bad)
and
inc
rol
or
pop
sbb
js
repz
adc
daa
mov
(bad)
push
mov
cwde
xor
cmp
inc
test
inc
sti
dec
int3
inc
xor
comiss
and
dec
adc
and
cmp
sbb
inc
into
enter
pusha
(bad)
mov
dec
dec
and
out
mov
call
xchg
aad
lahf
push
xchg
stc
ret
fs
call
or
fdiv
test
dec
or
sbb
out
cs
xchg
ja
enter
sub
cmp
add
in
ret
(bad)
stos
push
jb
mov
mov
ret
dec
aad
shr
mov
int
out
inc
cmp
jle
and
adc
not
test
sbb
mov
inc
bound
gs
into
mov
outs
out
leave
or
cmp
(bad)
xor
cdq
leave
icebp
push
mov
je
xchg
push
mov
adc
sub
push
sbb
pop
enter
cmp
mov
dec
std
sbb
push
mul
xchg
mov
daa
or
adc
dec
add
inc
cmp
iret
xchg
inc
popa
idiv
jnp
sbb
call
sbb
fild
xor
sub
and
ins
sbb
xor
call
cwde
push
sub
mov
sbb
cli
mov
ins
out
xchg
mov
leave
cmp
fcmovbe
and
iret
out
jns
dec
stc
pop
mov
fwait
sbb
dec
mov
test
sub
inc
ins
or
mov
xor
iret
dec
gs
or
or
dec
mov
aas
es
jo
lods
jmp
pop
popa
pop
mov
ja
or
sub
jne
xchg
cmp
sbb
mov
sub
dec
pop
dec
sahf
daa
pop
sub
stc
xor
mov
sbb
xlat
push
sub
div
cmp
or
(bad)
push
jo
cs
add
(bad)
cmp
repnz
mov
mov
adc
dec
scas
lods
adc
and
daa
cmp
int3
ins
repnz
int
or
dec
out
stc
fs
xor
xchg
inc
mov
out
cmp
sbb
mov
out
ins
outs
popf
or
retf
cmps
iret
cmp
cmp
jge
adc
jae
push
iret
ins
dec
sub
ret
cmp
sbb
loope
xchg
push
or
pop
mov
loopne
jge
hlt
mov
or
jmp
outs
test
jmp
xchg
ins
jo
ficomp
xlat
bound
pop
out
xchg
pop
repnz
pop
sti
adc
mov
gs
ja
(bad)
fucomp
out
mov
mov
push
imul
scas
xchg
(bad)
xor
aas
hlt
popa
stc
inc
and
mov
or
push
(bad)
push
arpl
nop
sbb
xchg
nop
jecxz
sub
add
aam
xchg
jecxz
push
mov
repnz
push
xchg
mov
adc
xchg
mov
retf
cmp
xchg
pop
out
call
cmp
or
sub
sahf
inc
mov
jb
and
loope
add
cmps
int
cdq
or
stos
lods
jge
sbb
aam
mov
lods
push
test
sbb
loopne
pushf
jae
movs
sub
sbb
clc
lods
sub
xchg
ins
xchg
pop
repnz
inc
icebp
jecxz
outs
repz
inc
fnsave
fadd
popa
push
bound
jnp
repnz
inc
mov
stos
sbb
and
clc
in
pop
ficom
(bad)
sbb
sbb
jmp
outs
leave
cld
int3
jmp
xchg
jb
push
adc
or
sub
jnp
adc
or
mov
or
cmp
cmp
add
(bad)
imul
dec
jb
jns
jecxz
dec
mov
adc
and
fmul
xor
xor
test
pop
loope
out
xchg
push
mov
call
into
loop
loopne
push
pop
out
add
jl
mov
aad
das
sar
xor
mov
in
jmp
les
jo
mov
mov
dec
mov
or
mov
das
dec
jecxz
lds
lds
call
xor
inc
int3
push
adc
rcl
mov
mov
into
and
pop
inc
pop
cmc
repz
out
sub
xchg
jecxz
fild
fcomi
ins
sub
mov
scas
repnz
pop
ins
aam
es
mov
sbb
aam
adc
cmp
ins
inc
int3
in
or
mov
mov
outs
xchg
(bad)
mov
rcr
(bad)
repz
inc
or
mov
lahf
shr
div
aaa
and
shl
jmp
xlat
lock
adc
or
int3
pusha
in
xor
jno
and
mov
pop
ins
and
(bad)
fnstenv
jmp
clc
dec
xor
xlat
je
outs
pushf
cmp
fdiv
nop
nop
add
in
push
loopne
add
push
push
je
loop
or
jb
push
dec
mov
sub
cld
jmp
stos
cli
int
retf
loope
xchg
pop
push
fs
loop
mov
sbb
sbb
inc
mov
stc
call
push
jnp
sbb
mul
lahf
movs
das
fsubr
push
or
js
or
xchg
xchg
lgs
cli
ror
xor
dec
test
clc
sbb
adc
iret
mov
je
clc
inc
xchg
and
sbb
outs
mov
cmp
dec
sar
sub
push
mov
lea
loope
aas
xchg
ins
rcl
sar
cld
pushf
ret
or
int
lds
ret
scas
nop
shl
jae
fwait
cmps
int3
cwd
(bad)
push
cld
sub
jmp
bound
push
mov
push
out
mov
push
lods
cdq
or
imul
mov
push
jmp
imul
das
cld
repz
ins
mov
xor
lods
inc
loopne
mov
daa
xor
fst
inc
jmp
std
mov
aaa
xchg
jle
pop
push
loop
adc
stos
sar
rcl
pop
mov
fwait
mov
add
mov
gs
fimul
imul
jo
push
cli
int3
loop
sbb
imul
out
cs
sub
push
mov
neg
(bad)
mov
fld
cdq
jmp
sbb
jmp
adc
in
imul
jb
cmps
ret
pusha
outs
and
js
test
mov
and
jmp
jnp
inc
gs
dec
cmc
push
xchg
push
mov
and
unpcklps
loop
test
mov
mov
(bad)
gs
jmp
mov
pop
ds
dec
je
jno
sub
push
rcr
mov
fisubr
loope
sbb
aaa
cmp
or
arpl
cmps
inc
sub
ss
inc
ds
lods
mov
and
mov
(bad)
fidivr
jns
test
mov
test
(bad)
retf
sti
or
or
aas
xchg
adc
push
xchg
(bad)
out
ss
mov
in
sub
fs
jnp
gs
inc
cmp
push
xchg
xor
sbb
push
(bad)
and
jae
sbb
leave
imul
push
fistp
enter
push
imul
mov
in
in
div
push
or
jle
clc
dec
and
push
(bad)
xlat
(bad)
jbe
mov
icebp
inc
or
mov
jmp
sti
inc
and
dec
pop
jecxz
aad
jmp
mov
fs
inc
lea
add
mov
daa
imul
xchg
(bad)
and
rcl
pusha
add
jne
arpl
dec
test
pop
jecxz
cmp
pop
dec
and
push
jg
aad
and
lahf
and
cmp
call
add
es
loope
xor
xor
pop
jnp
mov
loopne
movs
fcom
inc
add
cmp
cli
cmp
cmp
adc
pop
sub
sub
mov
aam
(bad)
jmp
retf
or
fsubr
popf
aas
or
add
adc
sbb
pop
sub
outs
xchg
fld
xlat
ss
cdq
idiv
in
mov
and
bound
mov
(bad)
(bad)
sub
cld
inc
mov
cs
inc
rol
loope
test
cdq
ror
push
inc
das
out
add
(bad)
cmp
(bad)
dec
mov
adc
mov
pop
(bad)
imul
inc
stc
inc
(bad)
add
loope
aam
jae
pop
push
iret
dec
mov
mov
sti
xor
aas
out
mov
jbe
es
jg
add
pop
je
jo
(bad)
cmp
push
aad
(bad)
add
movs
retf
sar
in
dec
inc
mov
inc
jg
mov
loop
shr
mov
jo
cmp
mov
cli
hlt
or
inc
sete
(bad)
mov
fldenv
test
inc
cmp
cmp
aam
das
xchg
push
in
out
leave
stc
(bad)
popa
je
add
mov
stos
and
aaa
stc
xchg
test
scas
or
sub
push
aam
rcr
(bad)
bound
retf
imul
aad
fimul
dec
mov
push
adc
push
xchg
jmp
mov
test
add
cmp
xchg
and
pushf
inc
lock
and
dec
mov
dec
inc
cwde
jmp
out
imul
or
jmp
cmp
fdivr
ins
lahf
loope
jns
mov
mov
and
dec
pusha
pop
int
aaa
xor
shl
adc
mov
daa
cmc
fwait
data16
dec
mov
cli
hlt
push
imul
inc
mov
or
and
sbb
test
ins
or
adc
sbb
shl
dec
mov
imul
int3
fst
add
jecxz
jecxz
mov
imul
cmp
sbb
inc
xchg
fidivr
in
xor
xor
pop
jo
xor
push
cmps
out
xchg
push
mov
xor
in
aas
(bad)
sbb
inc
int3
shr
xlat
dec
bound
xor
out
push
lock
cmp
xchg
es
sbb
add
xor
shl
push
sbb
int3
inc
dec
add
(bad)
mov
rol
pop
dec
mov
jns
sub
iret
cli
pop
pop
push
ja
clc
and
pop
fisubr
cdq
mov
retf
fdiv
test
sbb
xchg
(bad)
sbb
mov
popa
mov
movs
add
fwait
mov
(bad)
xor
loope
sbb
retf
xchg
cmc
adc
push
mov
or
in
stos
push
mov
push
cmps
std
push
test
frstor
xchg
cmp
shl
sbb
jnp
jb
and
nop
and
jae
out
dec
sbb
lea
xchg
adc
lahf
movs
or
sub
loope
dec
ret
adc
rcl
xchg
out
stos
sbb
outs
cmc
dec
mov
sub
jo
and
cmp
fs
push
or
call
mov
sbb
mov
out
cld
into
push
jmp
movs
or
xchg
out
imul
cmps
mov
out
in
fild
add
bound
lods
movs
fwait
jno
fwait
xchg
push
in
out
mov
mov
out
xor
hlt
sbb
pop
int
dec
into
xor
push
adc
arpl
push
jp
inc
lahf
xchg
sbb
mov
sbb
or
xchg
mov
dec
xor
lahf
cdq
addr16
in
jbe
hlt
into
arpl
sub
mov
sub
pop
xchg
das
ret
xchg
enter
mov
pop
dec
cmp
mov
xor
inc
xchg
stos
cmp
mov
lds
cs
or
retf
sbb
push
(bad)
xchg
pop
aam
mov
sahf
loop
push
js
dec
pushf
test
add
pop
test
mov
push
aas
shl
cld
cmp
add
daa
adc
data16
mov
jmp
retf
pop
or
mov
retf
repz
jl
mov
ret
cli
mov
jo
cmp
fsubr
(bad)
es
call
arpl
cmc
xchg
addr16
sbb
xor
mov
inc
shl
aam
adc
stc
ffreep
xor
rol
in
movs
mov
dec
(bad)
pusha
cmps
stos
or
stc
test
xor
jb
jae
stos
aas
cmp
(bad)
or
inc
mov
(bad)
fdivrp
test
or
push
and
lods
imul
push
mov
mov
out
sbb
jnp
sbb
and
mov
xchg
and
pushf
out
imul
and
imul
enter
push
imul
ret
jecxz
sbb
xchg
jmp
lock
xchg
xor
dec
(bad)
aad
or
jo
cmps
xchg
cmps
or
dec
loop
push
outs
jge
shl
hlt
cld
cmp
push
xchg
cmp
mov
stos
pop
mov
push
sti
jnp
cdq
outs
in
imul
(bad)
fnsave
mul
(bad)
imul
out
dec
div
xor
cmp
pop
leave
in
push
mov
js
jmp
imul
sbb
xor
inc
jp
aaa
not
xlat
mov
inc
call
addr16
dec
and
pop
mov
mov
add
loope
es
or
neg
fisubr
pop
mov
js
xchg
mov
and
pop
jbe
out
pop
stos
dec
ins
leave
fstp
xchg
jmp
push
mov
ins
(bad)
outs
outs
ret
sti
mov
in
pop
fisub
sahf
mov
fcomp
adc
sahf
data16
add
pop
ss
inc
sub
in
and
adc
int
push
push
out
fild
fdivrp
(bad)
fmul
xchg
cmp
push
aas
popa
daa
fsubrp
adc
xor
add
pushf
adc
sbb
and
daa
enter
movs
push
inc
(bad)
or
pop
lds
or
stos
sti
into
or
mov
jb
pop
mov
mov
loope
rol
cmp
bound
dec
clc
mov
pop
mov
xor
fisttp
outs
and
mov
out
ss
mov
dec
push
hlt
and
mov
mov
pop
ds
or
idiv
outs
jbe
sti
or
out
push
xchg
push
aaa
jmp
push
ror
fisttp
dec
iret
pop
sub
inc
sub
stc
sti
mov
leave
jp
xor
cli
cli
or
xor
dec
or
sub
scas
aad
mov
xchg
push
mov
shl
jno
retf
push
xchg
xchg
addr16
jp
dec
fs
aam
movs
and
sub
jle
dec
sbb
xor
mov
div
push
or
(bad)
out
and
push
jo
adc
adc
add
dec
dec
adc
cmp
repnz
mov
pop
pop
scas
mov
or
push
sub
loope
ror
pop
sbb
loop
js
xchg
jne
mov
cmp
xor
mov
data16
scas
in
xor
enter
loope
out
mov
pop
js
shl
aaa
dec
test
sbb
movs
aaa
ret
xchg
(bad)
fisub
mov
sar
mov
pusha
sub
jo
xchg
adc
jge
xor
dec
mov
mov
and
pop
xchg
adc
lahf
xor
rcr
mov
aad
adc
cld
(bad)
and
and
(bad)
jno
adc
cld
jp
aad
mov
xchg
clc
fidivr
push
not
inc
movs
imul
mov
std
push
enter
jmp
mov
out
ficomp
mov
int3
adc
(bad)
inc
ds
pop
jmp
mov
fcomp
out
xor
in
mov
addr16
xor
or
sub
mov
jl
stos
in
xchg
sar
repz
shr
xchg
shl
addr16
js
sbb
mov
mov
push
dec
dec
dec
push
push
in
in
pop
lods
jge
es
adc
ins
xchg
shl
test
sbb
clc
lahf
adc
sbb
push
fisub
push
in
ret
jb
gs
pop
lods
jle
(bad)
jg
gs
test
frstor
mov
push
adc
retf
inc
(bad)
jmp
add
inc
out
pop
inc
cdq
push
pusha
ficomp
sbb
pop
test
add
jp
(bad)
imul
inc
mov
sub
bound
jge
cld
test
push
out
cmp
jbe
and
aas
and
xchg
adc
scas
fmulp
push
test
inc
daa
push
fstp
fdiv
repnz
stos
(bad)
mov
test
sub
mov
clc
jmp
aam
pop
popf
xor
xchg
dec
imul
xchg
sub
mov
mov
(bad)
hlt
mov
xor
dec
add
mov
ja
jno
inc
add
ds
cmps
not
aam
xchg
jno
mov
dec
jno
adc
xor
ret
mov
(bad)
lea
bound
cmp
aaa
cdq
repz
cmp
mov
ror
pop
sub
std
imul
push
mov
sbb
lods
in
push
pop
and
gs
nop
jge
mov
mov
xor
pop
out
xchg
ret
jbe
xor
sahf
jbe
(bad)
in
ja
jl
inc
je
adc
(bad)
sar
mov
pop
pop
pop
clc
push
std
inc
sahf
int
cmp
ret
pop
pop
and
fsubr
cmc
add
push
data16
mov
ror
test
inc
mov
shl
jo
arpl
fwait
test
xor
mov
clc
dec
pop
mov
sub
mov
mov
mov
or
sar
call
fsubr
cmps
je
jbe
arpl
push
bound
push
cld
mov
fs
mov
mov
sbb
stc
push
loopne
popa
scas
fs
adc
clc
jg
out
repz
test
shl
cmc
popf
pop
ror
mov
sub
int3
xor
stos
and
in
popf
and
inc
mov
clc
pop
sub
ret
imul
(bad)
stos
mov
xchg
or
fptan
mov
cmp
lock
loope
ret
and
sti
jmp
dec
(bad)
sub
dec
std
pop
(bad)
jmp
mov
jbe
mov
dec
cmp
push
adc
(bad)
push
dec
sar
dec
loop
xchg
fiadd
add
lods
and
mov
pop
stos
cmc
pop
jb
pop
clc
out
push
xor
add
inc
test
and
push
arpl
add
call
mov
mov
ds
pushf
stos
xchg
fmul
out
adc
lea
dec
data16
(bad)
mov
xchg
jo
mov
xchg
ror
les
stos
data16
cs
push
cmp
sub
jmp
xchg
fisttp
sub
and
in
push
test
cdq
dec
push
jne
cmp
or
pushf
jecxz
movs
scas
aas
mov
sar
lods
in
adc
push
xchg
js
lock
pop
jmp
xchg
xor
jmp
mov
cmp
bnd
sub
ret
gs
push
sub
cmp
shr
std
dec
iret
imul
sub
or
mov
fiadd
popf
pusha
test
fcomi
push
mov
ins
add
jo
fidiv
push
push
cmp
jb
adc
mov
mov
ja
stos
pop
jns
xchg
imul
outs
scas
xor
mov
pop
adc
jns
fidivr
test
fwait
mov
push
out
mov
cmp
test
jl
xor
mov
xchg
mov
rcl
dec
or
je
jp
mov
cmp
inc
push
cld
mov
mov
int3
fbstp
outs
and
(bad)
enter
mov
inc
std
or
mov
test
sbb
jb
loop
fsub
add
fisttp
int3
movs
sbb
push
mov
repz
cmps
xchg
int
not
push
cmp
jp
ror
mov
popa
or
push
aaa
mov
jg
in
pop
mov
pop
xor
inc
xchg
and
cmp
mov
mov
adc
data16
xor
ret
and
pop
xchg
aad
adc
xor
and
mov
retf
imul
cmps
imul
cli
jp
jno
inc
retf
test
scas
shr
dec
in
div
ds
fwait
or
fcomp
mov
pop
or
retf
not
sti
sub
inc
mov
lea
fsub
pop
or
mov
jnp
and
push
jnp
mov
cmp
ins
sbb
adc
std
les
adc
push
test
xchg
(bad)
fcmovnb
dec
or
add
cdq
ins
inc
add
adc
ds
push
pop
rcr
mov
bound
cs
inc
jge
(bad)
add
mov
aaa
stos
adc
fwait
movs
push
outs
xor
and
arpl
push
aam
sbb
adc
adc
push
sahf
mov
and
(bad)
mov
xlat
sub
jo
and
mov
push
mov
(bad)
mov
sti
dec
push
lea
cmp
ja
or
sub
inc
xchg
lods
ret
sub
mov
cs
ror
popw
adc
fcomp
cmps
lds
mov
and
in
retf
jmp
sub
push
jo
push
mov
mov
add
scas
mov
test
leave
sbb
jne
ins
repz
and
test
add
xchg
lahf
and
push
ss
ss
cmp
xchg
mov
pop
retf
js
mov
fwait
aam
outs
push
cmps
pop
sbb
and
in
mov
lea
mov
mov
add
or
movs
jo
inc
mov
jb
cmp
into
popa
fs
rcl
inc
cmp
shr
mov
inc
movs
mov
ds
dec
in
add
jne
xor
adc
out
xchg
add
dec
mov
test
ret
div
int
mov
ret
sbb
call
mov
cmp
popa
repnz
xor
test
dec
hlt
shl
mov
dec
loop
cmps
in
cmp
push
push
hlt
clc
jno
or
push
dec
sub
ret
or
mov
push
dec
ins
or
add
lods
cmp
repnz
or
mov
lea
int
ja
mov
or
pop
and
popf
retf
(bad)
stos
mov
data16
xchg
pop
add
imul
(bad)
shl
adc
retf
gs
repz
loope
jmp
std
das
fcomp
jmp
(bad)
movs
ret
loop
idiv
movs
inc
jno
adc
xlat
mov
cmps
aad
std
adc
jmp
popa
xchg
xlat
lahf
push
outs
inc
dec
stos
pop
jae
sti
ficomp
mov
or
icebp
push
repz
push
loopne
retf
dec
sub
sbb
jg
sbb
into
pop
fld
add
(bad)
mov
jmp
dec
in
xchg
push
push
stos
fstp
dec
push
jbe
push
ins
push
pop
push
sbb
int3
sub
sub
inc
enter
ficomp
inc
bound
fidiv
mov
mov
in
js
add
xor
test
lahf
xchg
aam
xchg
jle
scas
push
sub
add
mov
push
cmp
into
adc
je
sbb
inc
sbb
push
add
neg
xchg
loop
adc
xchg
jns
loop
rcl
dec
inc
adc
cmp
xlat
sub
imul
shl
dec
jnp
popa
and
fst
and
sbb
dec
jle
sahf
cs
jecxz
jecxz
leave
mov
ds
adc
aas
inc
imul
sahf
in
fld
ret
mov
neg
lahf
mov
jmp
mov
sub
stos
pop
pop
cwde
cmp
jns
add
push
lea
mov
pop
out
gs
in
push
outs
xor
mov
sar
mov
mov
xchg
stc
fbld
pop
cli
inc
mov
and
and
mov
mov
nop
jne
lahf
pusha
add
mov
pop
pop
scas
or
push
xor
daa
inc
mov
sub
rcl
pop
(bad)
ins
(bad)
dec
pop
xchg
aad
inc
(bad)
retf
ins
push
dec
mov
sbb
popa
pop
add
add
adc
rcr
loopne
mov
fstp
std
xor
enter
(bad)
adc
mov
data16
inc
inc
xchg
xor
retf
daa
jno
lods
cmps
cmp
mov
lods
scas
xor
stc
xor
ins
and
sahf
ret
scas
pushf
dec
xor
mov
in
fdivp
adc
aam
xlat
inc
or
sub
out
ret
xor
aam
das
sbb
dec
push
xchg
mov
push
sbb
sub
pop
loope
fcomp
dec
inc
fsubr
sub
or
and
rcl
mov
push
mov
or
push
bound
and
ds
popf
xchg
xchg
cmc
jp
sbb
xor
clc
mov
inc
bts
mov
push
mov
enter
adc
mov
dec
sbb
jp
scas
das
lods
sbb
nop
iret
push
cs
lea
mov
pop
xor
push
jp
pop
mov
push
ds
dec
inc
iret
xchg
inc
test
cmp
pop
mov
arpl
cli
push
lds
jmp
add
jb
movs
nop
movs
es
sbb
(bad)
mov
xor
cmps
xchg
aaa
test
adc
retf
mov
and
jmp
sub
or
fisttp
cmps
int3
scas
mov
pop
out
push
pop
pusha
and
mov
call
cld
push
test
(bad)
mov
fdiv
lea
ror
adc
lahf
jo
cs
xor
jne
cli
push
dec
mov
das
test
sbb
dec
dec
push
cmp
push
dec
es
or
push
dec
sub
into
je
in
pushf
in
daa
cmps
push
iret
test
xor
mov
je
ss
js
bnd
inc
out
mov
xor
adc
popa
mov
mov
mov
or
ins
call
(bad)
and
cmp
shl
jmp
pop
les
imul
mov
stos
test
in
xor
mov
push
jnp
dec
dec
and
outs
xlat
cmp
loope
xor
fstp
jae
xor
jmp
xchg
dec
imul
dec
call
fisubr
push
scas
clc
call
hlt
jb
hlt
dec
add
int3
aam
mov
arpl
mov
fdivr
mov
push
out
es
fnstenv
mov
and
sub
ficom
lods
and
jmp
clc
adc
pop
jp
div
pop
cmc
out
adc
je
jae
test
loop
pop
jae
in
or
pop
shl
call
(bad)
mov
loop
jno
cmp
push
(bad)
and
fnstcw
into
sbb
xchg
jno
arpl
bound
jl
out
ret
jb
sbb
push
mov
aad
sbb
stos
pushf
pop
push
mov
xchg
mov
push
out
xchg
out
push
add
icebp
loop
sbb
sub
and
jbe
add
das
ror
and
or
inc
retf
test
movs
sub
dec
std
movs
sub
push
neg
retf
(bad)
call
fs
icebp
fisttp
inc
sahf
cdq
pop
adc
std
cmp
adc
jno
xchg
sub
ins
cs
inc
lahf
xchg
push
jns
mov
push
loop
retf
cld
ja
and
movs
dec
call
add
mov
adc
xchg
mov
dec
inc
mov
and
in
add
push
pop
cdq
ret
mov
(bad)
mov
outs
dec
jg
push
and
mov
clc
and
outs
ret
fwait
fs
xor
jae
icebp
movs
ins
jo
add
push
pop
stos
mov
and
popa
sbb
(bad)
sbb
neg
push
repnz
jg
mov
psllw
pusha
into
and
push
in
int
mov
push
lds
mov
xor
lods
in
dec
aas
pusha
int
sub
mov
stos
mov
jne
jg
mov
(bad)
leave
or
adc
hlt
hlt
pushf
stos
push
aaa
retf
cmc
lds
sub
cmp
cmp
pop
aam
retf
dec
add
pop
popfw
sbb
mov
sub
ja
mov
mov
je
(bad)
data16
push
jno
xchg
adc
scas
and
and
jge
(bad)
rcl
cdq
cld
sub
mov
loope
rcl
cmp
(bad)
push
adc
jmp
push
outs
fwait
adc
aas
add
dec
and
mov
add
mov
cmp
aas
inc
int3
call
cld
loop
mov
repz
push
cmp
dec
jbe
loopne
pop
data16
cmp
push
inc
call
jns
je
push
test
lea
aas
mov
push
les
in
int
(bad)
mov
mov
jae
xor
and
gs
outs
sbb
stc
fcom
push
mov
pop
and
pop
push
jl
(bad)
sbb
push
jno
int3
dec
daa
push
cwde
mov
mov
rcr
imul
or
ror
cmp
mov
push
sbb
xor
mov
xchg
repnz
adc
nop
aad
dec
sbb
sub
test
or
jl
push
jns
icebp
test
jae
arpl
adc
adc
mov
rcl
push
icebp
rcl
jg
push
das
mov
aam
test
ins
and
pushf
fwait
jg
pushf
cmp
ja
jo
test
sub
addr16
sar
int
inc
or
pop
mov
cmps
sahf
cli
xchg
cmps
cmps
mov
fadd
call
aad
sub
pusha
mov
dec
or
aas
dec
xchg
imul
call
cmp
and
or
mov
call
stos
arpl
out
push
adc
push
pop
or
mov
jbe
inc
or
add
inc
xor
out
mov
dec
mov
(bad)
sbb
xor
dec
jp
and
lock
sub
aaa
sahf
int
fild
mov
jb
pop
ror
test
lds
pop
xchg
mov
or
mov
xchg
sbb
jge
pop
push
mov
icebp
jle
jnp
push
fisttp
in
mov
out
cld
pop
xchg
inc
or
mov
cmp
das
dec
shr
mov
sbb
push
push
mov
(bad)
push
jb
mov
inc
mov
pop
or
add
in
mov
pop
xor
ds
or
cmp
call
ror
pop
mov
fs
fwait
scas
cld
xchg
test
cwde
ficomp
pop
pop
call
mov
scas
mov
push
xor
js
jecxz
adc
mov
add
stc
loopne
xor
cmps
std
shl
sbb
stos
enter
cmp
lock
cli
dec
xchg
jb
jne
in
fisttp
inc
add
mov
dec
cmc
aad
int3
xor
push
repz
add
mov
or
mov
fst
xchg
sbb
jecxz
ins
loopne
ret
repnz
ficomp
dec
or
es
sti
push
enter
xchg
sbb
jp
sbb
adc
jns
clc
xor
push
add
adc
and
ins
xchg
scas
mov
xlat
test
xchg
cmps
fucomip
mov
popa
adc
out
adc
adc
jge
fld
int
xor
xlat
repnz
jb
mov
fisub
in
ret
pop
adc
xor
gs
xchg
ror
mov
pop
dec
mov
daa
and
jg
in
pop
lock
pop
clc
add
pushf
adc
je
lods
push
sub
call
aaa
inc
aam
xor
sub
test
outs
and
lock
mov
push
rcl
cmp
or
xchg
lahf
or
pop
sub
stos
call
lock
nop
outs
inc
adc
cmp
inc
mov
out
mov
adc
retf
or
mov
ja
bound
push
xchg
call
not
movs
mov
push
cmps
cmp
fmul
(bad)
mov
adc
inc
mov
mov
out
add
int
shr
mov
sub
sti
sbb
fidiv
rcl
dec
xor
(bad)
pop
shufps
imul
mov
xor
and
retf
pop
inc
fsubr
inc
cmps
popa
outs
retf
pop
ret
jmp
out
mov
jecxz
xor
fwait
and
popa
cmp
retf
sbb
sub
dec
bound
sub
dec
sbb
ror
leave
dec
xor
or
add
into
in
les
mov
in
je
add
lds
int3
dec
test
imul
sbb
jbe
aas
jnp
mov
mov
xor
inc
push
mov
fwait
xchg
ror
in
or
pushf
jle
fist
test
lea
sub
or
and
mov
cmc
test
dec
das
jecxz
movs
or
push
(bad)
dec
adc
xchg
sbb
pop
add
ror
outs
xchg
mov
push
test
mov
shr
int3
stos
xor
inc
xchg
repz
retf
fcomp
bound
sbb
cmps
mov
hlt
call
xchg
ja
jmp
lahf
lods
add
jge
test
repnz
sbb
int3
pop
aaa
inc
mov
adc
clc
xor
into
jno
call
sbb
in
fcomp
xchg
pop
pop
sahf
jmp
ins
push
fs
cmp
sbb
(bad)
pop
and
das
mov
push
or
das
fisttp
jecxz
and
test
adc
bound
push
xor
mov
xchg
adc
push
xlat
push
mov
add
cmps
mov
sar
mov
dec
add
dec
test
lsl
aaa
add
in
test
loop
ds
and
sub
sar
ror
out
jae
sub
adc
rol
div
int3
mov
shr
in
add
mov
scas
or
mov
lds
iret
mov
(bad)
in
xchg
ficom
hlt
icebp
jnp
add
int3
neg
(bad)
aad
dec
jle
mov
mov
cdq
inc
push
stos
jmp
dec
bound
inc
or
adc
mov
add
xor
push
cmc
mov
mov
rcl
mov
pushf
xchg
ret
push
mov
xchg
inc
inc
out
lods
push
pop
cmps
shr
and
movs
push
inc
adc
leave
sub
push
(bad)
test
sysret
rol
pop
xchg
fs
mov
sbb
mov
xchg
cmps
into
je
mov
cld
push
or
(bad)
imul
add
inc
xchg
cmp
push
setge
push
or
outs
dec
repnz
sahf
ins
pop
data16
push
mov
sbb
mov
int
cmp
xchg
xchg
call
pop
dec
fcom
aad
or
js
call
and
mov
int
mov
cmps
scas
aam
inc
icebp
call
repnz
pop
push
xchg
repz
add
cmp
retf
mov
outs
jns
sbb
arpl
bound
sub
rcl
test
or
bound
cmp
jecxz
in
mov
ja
inc
pop
pop
pop
xor
scas
shl
add
jg
loop
ficomp
jno
popa
scas
ins
mov
pop
aaa
lods
sbb
pushf
aas
out
into
fdivr
sbb
in
cmp
rol
and
dec
and
pop
lods
imul
xchg
sbb
or
sub
jle
and
cdq
mov
pushf
cmp
pop
and
mov
xor
pushf
adc
push
jg
or
test
add
test
stos
movs
or
cmp
mov
mov
mov
and
sub
cs
ret
cmp
inc
int3
push
xchg
adc
push
jbe
cmp
push
cmps
mov
out
xor
jae
movs
(bad)
imul
push
dec
lods
add
or
sar
out
jg
adc
inc
stc
pusha
and
adc
xchg
mov
(bad)
imul
cmovo
fdivr
fmul
or
xor
pop
adc
daa
mov
pop
enter
and
inc
std
(bad)
add
and
sbb
ret
fs
stc
push
nop
cwde
adc
fistp
mov
or
push
jno
inc
iret
sahf
cmp
push
mov
lock
add
push
jbe
out
adc
or
add
cmp
fwait
lea
xchg
add
and
xchg
(bad)
lahf
xor
mov
xor
xchg
movs
lods
xchg
sub
xchg
push
fistp
sbb
jbe
jnp
ds
sar
dec
and
pop
add
pushf
neg
retf
fcom
xchg
leave
mov
test
int
icebp
call
xor
cmp
mov
or
push
int3
fcmovnb
push
clc
add
test
(bad)
dec
mov
scas
pop
pop
dec
js
mov
inc
sub
fiadd
push
out
rcr
jg
imul
(bad)
in
sub
dec
sbb
mov
jmp
mov
pop
inc
pop
scas
inc
xchg
xchg
test
cmp
xor
scas
data16
test
icebp
test
mov
xchg
nop
rol
imul
in
test
jl
popf
ja
pushf
movs
inc
xchg
push
xchg
xchg
dec
jae
repz
ficom
push
mov
jl
adc
xchg
sahf
sahf
in
sub
pop
sbb
nop
test
ds
ror
arpl
mov
loopne
mov
call
mov
and
mov
fnstsw
shr
jl
or
and
cli
xchg
ret
pop
(bad)
loopne
stos
mov
cmp
pop
popa
shl
cmp
sub
loopne
xchg
sub
jbe
sub
(bad)
xor
in
inc
sahf
aaa
lods
adc
inc
xchg
sbb
sbb
inc
(bad)
(bad)
movs
sbb
leave
mov
setge
jo
jb
adc
mov
or
and
dec
retf
push
and
jbe
inc
cmp
fdiv
aad
shl
mov
jnp
pop
das
dec
ja
or
xlat
pop
(bad)
frstor
enter
inc
dec
mov
push
fbld
mov
inc
dec
jecxz
jmp
fucomp
rcr
sbb
pop
xor
jnp
or
pusha
cmp
movs
pop
mov
(bad)
dec
stos
data16
ss
mov
iret
adc
hlt
mov
add
mov
or
pop
xchg
js
xlat
fcmovnbe
test
push
sbb
fidiv
mov
xlat
pop
mov
and
addr16
sub
cmp
push
add
(bad)
aad
imul
pop
shl
xlat
les
push
cmp
sbb
cmps
test
bound
in
(bad)
mov
loope
or
dec
scas
jae
stos
push
(bad)
ds
shl
cmp
push
iret
xor
or
cmp
xor
mov
movs
mov
xor
jge
jp
cli
mov
repnz
in
xchg
std
pop
test
and
inc
push
adc
add
(bad)
cmp
ins
and
js
pop
mov
test
(bad)
add
push
xchg
jmp
xchg
xor
ret
xchg
mov
dec
icebp
ror
dec
inc
stos
pop
add
jno
adc
dec
dec
cmps
ret
fbstp
(bad)
scas
adc
jns
arpl
mov
push
push
push
xor
pop
jl
and
das
push
repz
dec
stos
jbe
push
and
add
sub
and
adc
mov
loopne
xor
xchg
dec
inc
inc
ds
test
xchg
pop
push
mov
jl
cmp
push
add
hlt
mov
gs
es
mov
or
push
js
push
adc
dec
and
(bad)
outs
xchg
mov
jp
xchg
pop
and
mov
adc
retf
sub
loopne
inc
daa
sub
adc
out
test
repnz
retf
push
in
ret
jmp
fst
pop
dec
jne
out
sub
push
cmp
into
out
xor
xchg
lock
loopne
inc
ss
cmp
movs
jg
rcr
cmp
pop
push
xlat
jp
nop
int3
ret
daa
jmp
cmp
arpl
(bad)
sti
sbb
or
push
fst
xchg
mov
addr16
push
sbb
retf
and
pop
jbe
aas
mov
cmps
sti
or
aam
add
push
dec
xchg
jle
inc
push
sub
cmp
inc
xor
arpl
enter
or
(bad)
rcl
or
cld
xchg
jl
mov
mov
cli
scas
cmp
xor
push
jmp
cmp
stos
xlat
push
inc
(bad)
loop
pop
shl
call
cs
push
mov
cmp
push
out
pop
jge
dec
ins
fsubr
jnp
mov
and
xchg
dec
ficomp
lock
jl
and
mov
sbb
(bad)
ficomp
adc
xchg
(bad)
mov
add
pushf
or
xlat
add
push
mov
in
inc
jae
outs
xor
hlt
popa
jae
shl
mov
lods
clc
pop
cwde
adc
adc
cmps
xchg
bound
dec
pop
stc
es
jmp
mov
out
cmp
adc
sub
xchg
ss
and
enter
dec
jp
cmp
mov
ins
inc
or
ficomp
cdq
gs
std
jp
clc
ins
loopne
xor
ret
xchg
add
jmp
iret
fdivr
xor
or
mov
aam
push
push
or
cwde
jg
cmp
fld
cmp
push
pop
sbb
cwde
lods
mov
repnz
adc
scas
sti
test
and
mov
and
inc
les
mov
jg
push
xor
mov
sbb
les
jmp
pop
mov
shr
adc
fisubr
retf
mov
xchg
xor
or
mov
pop
sub
pop
sbb
cmp
xchg
lahf
mov
xchg
jb
adc
inc
dec
jl
xor
jno
movs
mov
ja
push
adc
mov
push
xchg
dec
fwait
jecxz
jp
and
pop
fadd
lea
cdq
leave
xor
mov
cld
pop
(bad)
sub
call
push
mov
lock
enter
and
push
push
pop
pop
popa
movs
sbb
div
inc
call
loope
nop
cmc
test
call
mov
sti
xchg
push
inc
lds
out
xchg
(bad)
inc
and
jnp
stos
stos
pop
aam
test
mov
jne
add
mov
dec
iret
xor
sub
mov
ret
inc
sub
fisttp
lock
xor
add
mov
pop
xchg
push
call
mov
imul
les
sahf
and
pop
bound
jno
sbb
xchg
push
pop
mov
xchg
shl
mov
(bad)
daa
movs
ss
loopne
xchg
(bad)
or
xchg
pop
lahf
fdivp
push
fld
mov
(bad)
mov
mov
adc
jno
repz
data16
test
and
and
sbb
or
lock
sub
sbb
fs
pcmpeqd
loope
adc
or
xor
and
adc
xor
cmps
mov
and
and
cmc
popf
(bad)
stos
call
fisubr
cmp
outs
int
data16
push
jmp
sbb
idiv
in
xor
rcl
test
inc
add
sub
out
clc
clc
sbb
xor
mov
jbe
xor
cmp
idiv
mov
lock
in
xor
es
push
inc
mov
pushf
aas
cmp
xchg
push
mov
shr
les
sbb
jecxz
xor
push
int3
mov
or
aad
iret
cmp
mov
movs
int
mov
jl
fs
sahf
and
adc
dec
pop
ja
sub
jmp
jge
repz
test
fisub
sub
mul
not
jmp
into
and
nop
and
jmp
and
dec
mov
movs
inc
xchg
xor
and
call
and
adc
out
sub
mov
aam
rcl
test
lahf
dec
stc
(bad)
mul
cmp
mov
cmp
je
jnp
in
push
or
imul
leave
aad
mov
sub
xchg
sub
cmp
pushf
push
pushf
in
mov
mov
rcl
dec
xor
nop
ss
sar
les
xchg
push
xchg
and
fs
clc
test
xchg
outs
aaa
cmp
pop
pop
jns
leave
or
cwde
pop
out
ret
mov
mov
shr
push
sbb
jmp
jb
xchg
mov
pop
ss
push
dec
enter
push
xor
data16
out
and
sub
adc
sti
shl
pop
cmp
lea
retf
rcl
fbld
adc
std
push
ss
int
xor
cmc
fild
pop
inc
movs
outs
lds
jge
or
sbb
int3
mov
ja
or
int
(bad)
(bad)
rcl
out
out
or
mov
mov
jmp
sbb
mov
int3
data16
cli
fistp
sbb
xlat
mov
mov
and
mov
xchg
aam
loop
pusha
and
jae
xchg
dec
push
outs
mov
sub
inc
cwde
jmp
retf
mov
cmc
push
or
movs
pop
mov
or
pushf
cmp
enter
xchg
mov
xchg
mov
push
std
in
out
mov
push
hlt
repz
mov
pop
scas
in
inc
out
pusha
test
(bad)
out
pop
sbb
xor
fbstp
stos
push
xor
stos
in
add
sub
std
rol
xor
dec
or
mov
sub
into
xchg
push
sbb
sub
test
outs
mov
lock
jle
mov
lock
push
push
div
les
push
retf
jmp
or
js
sbb
dec
popa
mov
movs
mov
adc
mov
push
cmc
pop
stc
cmp
arpl
jno
retf
inc
aaa
test
mov
lds
movs
or
or
sub
pop
daa
and
jle
(bad)
adc
adc
push
push
add
imul
mov
push
and
leave
xchg
xchg
shr
mov
and
pop
dec
imul
in
xor
push
shl
jae
inc
mov
xchg
dec
xor
xchg
mov
nop
data16
call
xchg
xchg
xchg
sub
inc
dec
(bad)
dec
dec
pop
cmp
ins
dec
bound
push
jle
cmp
add
xchg
and
(bad)
sar
inc
mov
and
ins
fisub
aad
mov
jg
test
xor
xchg
fild
stos
scas
jg
mov
jns
push
pop
enter
pop
test
mov
pusha
out
stos
pop
mov
test
dec
xchg
or
cwde
std
sub
ss
stos
mov
daa
out
pop
mov
mov
dec
mov
stos
jns
xor
leave
shr
es
ss
ds
out
add
xchg
adc
and
and
out
cwde
cmp
nop
jle
cmp
adc
(bad)
xor
sub
adc
mov
or
les
(bad)
mov
(bad)
aam
retf
mul
ss
fldcw
pop
push
push
jl
test
sub
mov
jo
jno
fwait
mul
mov
xchg
daa
call
lock
stos
jns
adc
mov
rol
jae
adc
mov
push
mov
sub
je
mov
mov
clc
scas
and
retf
mov
daa
mov
pop
xchg
mov
call
mov
sub
pop
xor
mov
push
pop
push
stos
fsub
pop
jns
pop
and
retf
pusha
or
sar
scas
hlt
add
add
cmp
rcl
cmps
mov
push
pop
pop
movs
cmp
out
in
or
dec
jno
push
jb
sub
sub
sub
jb
inc
pop
sub
outs
sub
sbb
mov
mov
mov
mov
push
pop
inc
or
cmp
or
adc
or
test
scas
in
ins
inc
cmp
mov
sub
and
retf
shl
fcom
addr16
(bad)
loope
aad
cmc
repz
sub
imul
cmp
xchg
push
or
stc
stc
in
aad
mov
sbb
mov
retf
pusha
in
lahf
xchg
arpl
loopne
sub
mov
push
jne
inc
mov
fwait
ret
repnz
add
mov
in
ds
mov
js
out
add
push
add
dec
ret
popf
sbb
ins
mov
out
mov
mov
add
lods
and
inc
int
push
enter
or
xchg
add
push
(bad)
xchg
retf
test
inc
sub
data16
sub
scas
pop
fdivr
add
or
mov
push
cmps
fndisi(8087
pushf
fs
sti
loop
add
stos
pop
add
jl
aam
pop
fwait
scas
push
mov
fisubr
int
pop
fst
movs
xor
test
mov
jns
mov
inc
fbstp
pop
loop
call
pop
mov
dec
movs
mov
mov
inc
fadd
lock
dec
fdiv
out
add
inc
out
adc
cmps
jp
sub
cmp
mov
push
or
sbb
outs
dec
mov
fmul
cmp
aas
stc
push
sbb
fadd
retf
je
add
(bad)
in
in
pop
fist
mov
(bad)
ror
(bad)
pop
jle
in
mov
push
inc
and
jp
sub
or
(bad)
std
or
outs
in
stos
sub
xor
pop
adc
inc
out
js
lods
in
inc
or
in
jbe
pop
dec
sub
sub
sbb
daa
adc
cmp
in
cs
hlt
cmp
inc
fld
imul
push
gs
mov
iret
mov
jmp
ret
pop
or
cmp
push
leave
lods
inc
enter
js
int3
mov
sub
cdq
sub
fs
(bad)
movs
push
cs
mov
jle
cmp
cmp
fcomp
xchg
div
add
call
push
retf
xor
jnp
bnd
stos
mov
call
and
sbb
rol
outs
sub
push
jmp
sbb
inc
push
mov
mov
push
jmp
jnp
outs
aaa
mov
sub
pop
jle
xchg
xchg
test
fimul
mov
dec
or
out
fld1
and
and
adc
pusha
xor
xor
adc
repnz
call
dec
pop
xchg
out
cmp
xchg
sbb
xchg
or
(bad)
sub
mov
cli
ficomp
nop
loope
push
mov
pop
cli
cmp
add
out
loope
push
fadd
add
dec
ss
cmp
popa
add
or
mov
jae
cmc
clc
data16
out
bound
xchg
mov
iret
ins
or
repz
lea
lock
clc
adc
es
dec
lea
ds
test
add
add
mov
out
sub
jbe
mov
fnstcw
push
stos
ds
cmp
add
dec
in
shr
(bad)
add
jae
enter
repz
loop
sub
cmp
pop
popf
mov
mov
push
dec
pop
mov
mov
push
jmp
push
mov
mov
or
cs
pop
inc
mov
or
push
cmp
and
sub
mov
jge
das
lahf
popf
hlt
and
cs
dec
movs
aaa
into
aaa
fst
rol
aas
or
cmps
jmp
out
lock
sub
rcl
adc
fdivr
dec
adc
xor
mov
jmp
ins
test
mov
in
inc
inc
pop
xor
inc
adc
add
inc
mov
jo
jp
mov
push
rol
out
inc
std
ret
cmp
and
inc
mov
inc
mov
and
mov
or
(bad)
sbb
jp
in
or
xor
cld
iret
pop
cmp
mov
jnp
mul
and
push
retf
xlat
push
pushf
int
in
in
lds
aam
sub
nop
or
inc
(bad)
push
(bad)
adc
mov
dec
cmp
call
outs
adc
icebp
mov
xchg
lahf
mov
inc
aam
inc
and
and
mov
add
mov
retf
(bad)
cli
daa
outs
loopne
xor
cld
popf
cmc
and
mov
cmp
sbb
xor
pop
mov
(bad)
push
lods
cmp
ss
push
push
call
and
xor
icebp
pop
xor
mov
xor
sub
retf
or
mov
(bad)
cmp
cmp
sub
dec
jmp
lods
mov
loopne
inc
js
mov
ja
fdiv
(bad)
jb
fsub
xchg
fld
cmp
mov
mov
in
jl
jl
jecxz
shl
and
das
mov
xchg
clc
cli
outs
adc
sub
jmp
arpl
fstp
addr16
cdq
sub
sar
mov
inc
inc
js
push
mov
inc
es
(bad)
iret
pushf
mov
les
pop
mov
xchg
scas
cmp
movs
sub
adc
fadd
cmp
in
jnp
mul
dec
xor
cmp
cmp
movs
pusha
std
sti
retf
das
imul
mov
dec
pusha
jbe
and
std
push
dec
pop
call
sub
dec
and
mov
or
cmps
cmp
lods
daa
stos
inc
test
mov
(bad)
out
mov
sbb
and
enter
cld
jp
(bad)
ds
ret
pop
setb
pop
pop
fst
movs
mov
dec
das
pop
or
xor
div
jg
mov
push
pushf
int
xor
sub
jne
sub
loopne
ins
fs
cs
or
ds
xchg
sbb
add
fnstsw
jb
xchg
jp
test
mov
push
in
in
jle
std
push
sub
test
pop
test
dec
adc
jge
push
out
mov
mov
dec
xchg
mov
fucomi
jmp
pop
adc
jae
mov
test
out
pop
push
cwde
fadd
call
enter
push
pusha
not
ret
addr16
adc
sub
test
hlt
std
push
jge
xor
enter
jl
retf
nop
jmp
fist
nop
push
jmp
(bad)
lock
xor
push
or
popa
and
mov
or
leave
addr16
adc
or
cmp
sbb
(bad)
mov
mov
iret
lods
or
in
adc
push
dec
mov
in
test
outs
jno
cmp
test
mov
retf
push
pop
dec
mov
pop
loop
add
cmp
fidiv
outs
sbb
icebp
mov
xchg
ret
inc
sub
push
loope
cmp
mov
test
dec
push
xchg
and
dec
ror
aaa
lods
sbb
or
adc
sar
or
data16
fisubr
inc
(bad)
adc
cmps
movs
adc
movs
fimul
dec
mov
xchg
push
or
fidivr
or
aaa
cmp
inc
cld
nop
adc
xor
arpl
ins
cmp
xchg
mov
test
mov
push
jg
add
outs
stos
ret
paddb
xor
pop
cs
inc
mov
mov
jge
rcr
cmps
xchg
dec
out
ds
sbb
jo
and
xor
cld
sub
std
sub
sub
fldcw
push
ret
adc
sub
pushf
mov
mov
jo
fbstp
mov
imul
inc
inc
adc
lods
fxtract
aad
stc
mov
mov
pop
cmp
std
loope
ret
cli
retf
or
pop
xor
jmp
int
stc
add
iret
fsub
mov
jae
std
xor
jp
sbb
int
mov
(bad)
out
push
fisub
ds
dec
arpl
adc
pop
clc
mov
mov
mov
xor
in
daa
mov
das
ret
mov
pop
mov
push
pop
pop
add
xor
(bad)
adc
fcomp
(bad)
fbstp
jg
mov
inc
scas
mov
add
retf
aam
cmp
cwde
cmp
sbb
cmps
cdq
ret
stos
xchg
xchg
dec
dec
add
and
(bad)
movs
inc
cmovg
xchg
xchg
and
popa
fwait
test
xor
ins
jmp
test
adc
xor
sub
mov
test
mov
sahf
sbb
and
aam
adc
stc
enter
mov
int3
xchg
add
sub
int3
enter
retf
cmp
cmp
(bad)
daa
rcl
ja
jp
xchg
sub
mov
or
jmp
xchg
pop
mov
js
and
inc
into
mov
pusha
jl
push
push
jecxz
jecxz
push
rcl
xor
pushf
sbb
shr
push
sbb
fwait
jns
je
mov
pop
inc
das
push
shl
mov
sub
inc
xlat
mov
neg
jns
idiv
je
inc
fiadd
xchg
cld
int3
xor
mov
gs
pop
and
icebp
xor
xlat
in
jns
jo
mov
dec
and
outs
(bad)
mov
xlat
jne
add
pop
fwait
mov
outs
gs
mov
xchg
push
pop
fadd
neg
push
pop
push
mov
mov
pushf
retf
clc
mov
or
inc
and
and
mov
mov
rep
aas
jb
sti
fisttp
aam
ret
jne
push
leave
push
loopne
pop
in
pusha
xchg
jmp
and
retf
(bad)
add
sub
push
popf
or
push
jle
leave
sbb
adc
jns
mov
dec
dec
mov
iret
jns
addr16
sub
fnstenv
and
ins
mov
(bad)
jb
cwde
cmp
jmp
je
(bad)
movs
(bad)
scas
jo
mov
sub
mov
cmp
aam
mov
jmp
xchg
pushf
js
(bad)
jno
mov
sub
inc
mov
retf
mov
push
fisttp
(bad)
dec
ins
fisubr
scas
popa
(bad)
call
(bad)
out
jmp
call
xchg
lea
std
fsub
mov
mov
pop
and
xchg
pop
mov
push
jnp
and
es
adc
ins
add
loopne
ss
inc
push
mov
stos
test
adc
mov
xor
jne
cwde
test
ret
pop
cmp
ror
popa
sub
popf
retf
or
mov
push
jbe
and
add
in
and
jmp
mov
push
push
test
add
mov
mov
out
jmp
dec
dec
int
loop
loopne
clc
test
ds
and
(bad)
(bad)
lea
test
mov
mov
and
int
mov
pop
mov
xor
push
add
add
add
mov
or
cmc
push
mov
int3
jmp
into
push
call
nop
xchg
mov
outs
xor
xchg
push
dec
add
dec
sbb
sbb
xchg
and
pop
pop
sahf
iret
mov
loop
adc
mov
aad
lahf
adc
pop
cbw
sub
leave
test
(bad)
and
rcl
rcl
fbld
int
mov
xor
fstp
jp
sub
pop
dec
push
jl
in
dec
sti
test
or
push
(bad)
mov
cdq
(bad)
stc
adc
in
xor
test
pop
inc
add
pop
fucomp
shr
pop
das
push
les
clc
xchg
jp
mov
ret
mov
(bad)
aaa
add
lea
add
fisub
dec
mov
les
jnp
or
mov
push
xlat
fistp
push
add
dec
xlat
adc
pop
in
cli
adc
stos
inc
shl
add
fdivr
jbe
pop
mov
mov
inc
inc
dec
loopne
je
mov
(bad)
loopne
mov
add
xadd
imul
and
jg
add
std
das
mov
test
jno
xor
jns
mov
out
mov
sub
fnsave
mov
leave
jno
xor
push
test
fadd
std
add
outs
sub
xlat
cmps
mov
sti
push
les
mov
or
and
or
jb
or
aad
inc
add
mov
aas
jno
xchg
dec
loopne
jne
mov
popf
scas
mov
inc
jecxz
cli
vpunpckhqdq
int
mov
mov
add
jmp
xchg
adc
outs
js
jl
cmps
out
fimul
inc
pop
stos
jmp
dec
rcl
test
mov
mov
ss
aam
jbe
mov
test
std
push
cmp
mov
xor
lea
fbstp
add
hlt
movs
pop
bound
lds
push
cmp
or
movs
mov
xor
sar
in
cmps
dec
sub
test
test
sbb
in
mov
aam
pop
ins
pop
lods
clc
pop
push
jo
sbb
cmp
rcr
test
adc
and
jo
mov
mov
sub
call
xor
gs
mov
test
ja
or
hlt
dec
retf
lds
std
fld
int3
sub
shr
stos
aaa
fdivr
retf
cmp
mov
lods
inc
in
ret
movs
or
(bad)
std
inc
inc
fisttp
ins
ret
cmps
cmp
fidiv
push
je
dec
(bad)
in
dec
cli
mov
pop
fsubrp
jmp
mov
sbb
ror
ins
mov
sbb
repnz
popa
ret
cmp
pop
enter
out
pop
adc
sub
hlt
mov
pop
mov
outs
mov
pop
nop
jne
(bad)
mov
push
cmp
fcomip
js
xor
xchg
pop
jg
mov
xor
xor
movs
iret
in
fdivr
in
call
inc
inc
pop
es
jbe
call
out
xor
mov
mov
add
jg
xchg
ja
lock
cmp
inc
push
jp
push
lods
outs
iret
sub
iret
xor
mov
(bad)
cmp
push
dec
mov
sbb
es
test
xor
lods
mul
movs
cli
and
sub
lods
cmp
and
mov
(bad)
cmc
loop
pushf
or
push
(bad)
out
(bad)
in
jae
movs
repz
xor
inc
and
js
je
out
jecxz
inc
and
pop
jg
daa
xor
add
sbb
mov
add
pop
add
gs
ficom
push
pop
lahf
mov
fs
push
out
jb
dec
ins
aaa
sahf
fwait
movs
fst
push
call
cmps
mov
add
pop
xor
dec
call
adc
ja
pusha
pop
call
xchg
pop
lahf
cs
xlat
(bad)
sbb
push
std
int3
cmp
inc
jnp
ins
jmp
add
or
popa
lods
movs
rcr
int3
in
mov
fwait
cmp
es
scas
push
pop
pop
jmp
shl
push
push
fwait
cwde
push
mov
cmc
inc
mov
idiv
in
pushf
aas
scas
lods
ss
aam
cmp
or
popa
or
mov
xchg
pushf
jl
sub
pop
sbb
pop
and
mov
push
sub
or
icebp
inc
add
jo
repnz
loopne
rol
movs
xchg
mov
push
aas
xchg
out
fwait
out
nop
cvtps2pd
out
mov
mov
and
dec
push
pusha
cmp
lea
into
and
fmul
out
rol
push
push
sub
cmp
mov
inc
jmp
inc
fxch
aaa
in
cmp
ss
leave
cmp
dec
(bad)
cmps
and
(bad)
ins
push
ins
je
jmp
or
pop
fsub
mov
in
mov
aam
ficom
or
idiv
das
scas
mov
mov
xor
mov
dec
push
xlat
fld
xchg
or
jb
aad
inc
adc
fucomp
jne
fild
jecxz
mov
mov
test
xchg
movs
movs
lods
sub
jmp
faddp
or
and
xchg
push
mov
mov
sbb
or
and
push
dec
fld
mov
repz
imul
std
or
add
fst
lahf
sbb
hlt
adc
and
cmp
ins
xchg
add
pushf
imul
sub
add
push
popf
(bad)
push
dec
mov
sti
imul
imul
push
pop
call
jge
sbb
add
dec
xchg
mov
nop
adc
or
sub
in
lods
mov
cmp
icebp
lods
and
jp
dec
sub
sti
sbb
jae
js
push
pop
mov
and
adc
pop
loop
in
outs
pop
popf
inc
ret
or
inc
jo
jmp
out
sbb
jno
jns
rcl
test
rep
cs
push
sbb
lods
or
inc
push
mov
dec
sub
push
fstp
mov
test
xlat
mov
jns
int
push
setnp
cmc
aad
push
cs
xor
loope
scas
popa
pop
sub
xor
fs
dec
mov
fwait
mov
sub
and
mov
push
pop
dec
call
dec
mov
sar
dec
outs
cmp
cmp
dec
mov
rol
xchg
mov
sub
cwde
aad
sub
mov
xlat
and
lahf
jmp
ror
adc
cs
ror
cli
ins
rdpmc
test
mov
sub
jmp
shl
dec
fstp
retf
or
xlat
pop
mov
fdivr
jge
ins
mov
inc
inc
push
call
fcomp
mov
or
inc
push
push
das
mov
ds
sub
sub
fsub
not
jbe
ins
push
cmps
(bad)
nop
adc
ins
test
jns
mov
mov
cmps
mov
repz
int
pop
pop
inc
and
pop
or
ficom
add
sar
clc
xchg
cli
push
cs
addr16
daa
in
mov
dec
and
inc
sub
mov
sti
aas
jno
mov
stos
(bad)
jg
xchg
ds
add
outs
stos
add
mov
xor
push
cmp
mov
lahf
loop
adc
push
lock
fwait
mov
shr
mov
aad
jp
dec
xchg
out
das
outs
dec
add
sbb
inc
adc
add
mov
sbb
push
jne
xchg
(bad)
ror
ins
cmp
pusha
clc
das
ror
sub
cld
in
pop
mov
jmp
aaa
xchg
push
out
sahf
jp
adc
or
pop
cmp
jge
jge
pop
pop
cli
or
dec
cmc
adc
js
aas
sub
cwde
add
mov
sub
inc
mov
ss
push
data16
cmp
into
xor
sbb
adc
cmp
in
pushf
mov
xchg
mov
xor
(bad)
aaa
shl
outs
mov
push
and
out
(bad)
enter
push
nop
iret
shl
jns
jg
sar
xor
mov
call
in
call
mov
mov
pop
call
pop
repnz
adc
mov
fldenv
loop
pop
cmp
aam
jecxz
pop
xchg
pop
adc
adc
jns
jnp
cmp
push
mov
cmp
test
test
and
or
sbb
push
rol
imul
cwde
pcmpgtb
hlt
add
sub
mov
cld
or
add
jmp
fcom
sub
jmp
pop
adc
inc
xor
xchg
leave
sbb
hlt
cmp
fwait
test
xor
je
mov
out
ror
es
cmp
retf
imul
lea
sub
(bad)
sub
mov
sbb
sbb
es
pop
add
fld
jp
mov
leave
je
adc
push
xlat
not
sub
add
pop
adc
cmp
pop
sbb
sbb
add
mov
data16
lods
into
iret
cmps
push
test
rol
es
adc
arpl
cmp
pop
jne
and
inc
fs
aad
and
pop
ror
xor
int3
pop
mov
sar
iret
push
push
test
pop
out
cmc
cmc
test
inc
jl
arpl
xchg
scas
int
(bad)
ins
loope
jo
fidivr
push
dec
ret
bound
int3
dec
sar
dec
int3
add
(bad)
in
add
cmp
retf
mov
push
sub
ins
lahf
mov
movs
out
adc
push
retf
dec
ret
mov
cmp
mov
enter
push
dec
sub
test
adc
(bad)
sbb
and
hlt
clc
mov
adc
fcmove
xor
add
daa
push
mov
inc
mov
rol
test
rcl
mov
aas
bound
jmp
xchg
xor
push
sbb
out
add
jmp
mov
or
test
sub
and
pop
js
out
out
retf
xchg
xchg
jae
sbb
rcr
push
or
cmc
jnp
cmp
fwait
xor
mov
pushf
out
or
sub
xor
pop
and
mov
and
shr
mov
dec
repz
or
sub
call
fcmovnbe
sub
sti
jae
rcr
mov
jmp
clc
pop
rol
outs
pop
ins
sbb
icebp
inc
enter
(bad)
pop
out
xor
jo
cmp
push
dec
pop
mov
sub
ins
cld
dec
inc
repnz
xor
ror
mov
icebp
adc
lods
shr
jnp
jb
cmp
push
repnz
aad
sbb
cmp
jmp
jge
jns
mov
mov
push
and
das
idiv
sub
rcr
imul
lds
(bad)
scas
lods
out
jns
loope
sub
mov
das
jmp
js
pop
cmp
xor
mov
psllw
repz
repz
or
jmp
inc
loopne
cmps
push
aaa
inc
cdq
leave
nop
mov
xor
xor
retf
adc
out
mul
fdivr
and
sar
push
inc
pop
push
jmp
sbb
dec
fimul
mov
fistp
jno
mov
lods
push
sub
mov
in
cmp
nop
nop
pop
iret
xchg
dec
test
in
hlt
mov
sbb
sub
mov
popf
adc
popa
mov
and
pop
ror
ror
mov
data16
mov
add
loope
lahf
adc
xor
or
xor
mov
ficom
xchg
or
and
xchg
icebp
mov
mov
pop
outs
mov
je
or
int3
jbe
adc
or
mov
xor
add
jb
inc
aad
movs
sub
xchg
fdivr
nop
sbb
jae
mov
jbe
push
cmp
xor
push
aas
(bad)
mov
ss
or
cmp
repnz
dec
push
sbb
jp
fidivr
pop
push
pop
scas
jmp
(bad)
jbe
dec
inc
idiv
jae
or
xor
out
pop
ror
imul
mov
loopne
rcl
outs
cmp
repnz
ret
dec
fs
ins
add
or
xor
es
out
and
mov
ja
dec
test
aam
dec
sub
or
and
adc
dec
inc
sub
daa
xchg
push
fs
test
rcr
imul
int3
aam
fstp
jg
xchg
pop
les
out
xchg
adc
dec
enter
cmp
sbb
add
mov
push
retf
ret
xor
sub
mov
add
dec
inc
lea
jmp
mov
pop
das
dec
sub
adc
mov
int
ja
xor
aad
(bad)
fnsave
sub
and
push
(bad)
lea
in
pop
cmp
icebp
js
in
adc
in
cdq
cmp
mov
pop
mov
jmp
push
push
imul
(bad)
push
pushf
leave
hlt
jmp
cmps
and
add
test
jle
inc
lahf
push
and
ss
push
cdq
pushf
ja
sub
rol
jbe
(bad)
cmc
nop
nop
inc
lahf
repnz
leave
test
ja
and
xlat
arpl
mov
jmp
je
cmp
cmps
pop
sbb
xchg
data16
dec
lahf
sahf
xor
dec
cmps
mov
scas
mov
(bad)
hlt
rcl
popf
ins
adc
cdq
pop
push
(bad)
mov
pop
push
push
mov
leave
xchg
xchg
or
imul
mov
iret
sub
cmp
movs
jmp
movs
and
inc
jmp
jnp
imul
loop
addr16
enter
mov
xchg
sahf
xchg
(bad)
add
jo
pop
pop
xchg
mov
fild
rcl
jp
or
and
and
scas
shr
rcl
call
out
inc
dec
std
fld
ror
leave
outs
mov
iret
jae
test
out
jp
pop
das
std
gs
jnp
push
loope
jb
or
dec
pop
mov
ret
ja
xor
add
scas
jb
fstp
cmp
jp
jge
mov
xchg
xor
mov
mov
mov
sub
add
or
mov
test
mov
ss
daa
movs
loopne
js
push
xor
cmp
je
loope
int
fs
mov
stos
push
add
icebp
cmps
push
xor
mov
out
mov
xlat
rol
cdq
adc
xchg
rcr
mov
fistp
and
rdpmc
jne
stos
js
div
jge
jns
test
mov
xchg
xchg
fadd
imul
sub
push
loope
mov
xchg
mov
pop
daa
shr
aaa
sbb
dec
adc
test
lods
add
xchg
std
fstp
imul
push
cld
outs
imul
mov
add
retf
jno
ret
cli
xor
sar
mov
mov
dec
mul
aam
mov
cmp
pop
je
jmp
mov
push
push
movlhps
push
cs
jg
js
call
pop
push
lds
mov
ret
lods
mov
cwde
out
sub
mov
es
test
jbe
and
xor
(bad)
fs
jnp
or
retf
jb
fimul
sar
mov
inc
jno
or
dec
sbb
stos
adc
fld
lods
mov
push
xor
mov
mov
mov
rol
xlat
cmp
or
lds
lods
and
test
neg
mov
fbstp
push
loope
retf
loop
scas
mov
adc
cli
js
cmp
sub
xchg
or
or
fs
mov
jp
xchg
aaa
mov
and
cwde
inc
cs
dec
test
pop
mov
sbb
fldenv
jae
mov
sub
dec
jmp
sbb
div
xchg
fidivr
sbb
sub
lods
inc
xchg
sbb
(bad)
jbe
or
inc
jno
jne
movs
cmps
retf
mov
in
jnp
int3
dec
jmp
loopne
sub
rcl
outs
fcom
or
enter
cdq
movs
xor
das
enter
sbb
ds
inc
push
mov
addr16
mov
sbb
aam
xor
mov
ja
dec
ins
dec
test
pop
push
push
je
sub
das
and
mov
gs
pusha
dec
imul
xor
jp
add
or
fst
add
popa
call
leave
int
mov
xchg
inc
xchg
inc
loope
packuswb
or
mov
xor
jns
cmp
repnz
mov
xchg
icebp
lea
xchg
std
push
xor
popa
adc
repnz
imul
int3
pop
dec
pushf
jle
jge
xor
xor
adc
test
push
mov
adc
popa
cmp
scas
lods
jno
jecxz
dec
lods
jg
jl
cmp
ret
sbb
test
inc
std
cmp
push
imul
into
mov
in
mov
sbb
lds
mov
mov
cli
add
add
fs
jge
imul
stc
repnz
pop
lock
xor
call
fwait
mov
shr
lods
cmp
pop
(bad)
loope
sahf
mov
sub
bswap
je
pusha
xor
popf
shl
xor
cmp
div
sbb
adc
jecxz
out
push
push
xchg
inc
inc
push
inc
dec
mov
call
xchg
lds
mov
push
mov
or
daa
mov
pop
cli
movs
nop
cmp
mov
fs
jns
scas
mov
sbb
data16
stos
out
sbb
jmp
pop
jne
mov
cli
xlat
and
outs
push
mul
ins
jmp
adc
mov
lahf
ret
cld
ds
je
and
sbb
int
lock
mov
test
test
push
outs
jne
shr
retf
scas
retf
xchg
popa
cmc
in
mov
xchg
sbb
icebp
mov
fsub
(bad)
sub
xor
sbb
sbb
or
sbb
fucomip
adc
jl
jge
push
jnp
adc
pop
cmp
cmp
stos
jns
or
mov
mov
mov
push
int
pusha
in
inc
lds
fld
mov
inc
outs
jl
mov
pop
add
and
pop
faddp
sub
push
xlat
sub
push
imul
cmp
xor
out
push
adc
jns
ss
cmp
jp
cs
out
sbb
xor
aaa
push
bound
push
xchg
daa
xor
loopne
jg
jnp
jae
(bad)
not
dec
lea
stos
int3
inc
dec
(bad)
pop
stc
sub
ins
fsub
(bad)
fimul
pop
mov
cmp
gs
mov
add
adc
cmc
xlat
arpl
or
mov
iret
imul
and
mov
out
xor
inc
cwde
mov
std
les
sub
cmp
aad
jne
or
jg
inc
int3
mov
xor
movs
cmp
(bad)
inc
or
mov
push
in
test
fsub
fnstenv
add
add
pop
fcom
vpaddd
je
stc
xchg
add
sbb
mov
pop
push
or
repz
jle
cld
inc
call
or
leave
xchg
pop
lock
add
sbb
(bad)
mov
mov
ds
mov
fwait
fs
pop
jno
dec
mov
in
shr
das
sti
jbe
(bad)
ficom
clc
shr
lds
dec
cmp
outs
pop
jno
jmp
pop
iret
in
fisub
js
call
sub
movs
pop
pop
bound
dec
ds
(bad)
fnsave
cmp
xor
mov
popa
imul
arpl
inc
mov
mov
mov
or
or
push
dec
cs
xor
lods
int3
and
pop
pop
add
mov
and
xchg
mov
rcr
call
fdiv
pop
in
jno
push
shr
xor
pop
fwait
push
pusha
or
inc
sub
pop
or
mov
cmp
mov
xchg
jbe
pop
iret
add
inc
mov
xor
push
retf
out
and
push
and
adc
cmp
add
xchg
sub
xchg
and
sbb
mov
and
sub
dec
and
xchg
inc
xor
xor
inc
(bad)
out
cmp
and
mov
xlat
push
sbb
mov
outs
ficomp
popa
neg
mov
ins
sbb
inc
sbb
(bad)
sti
adc
lods
fs
and
pushf
jl
inc
inc
lods
inc
or
jb
jge
jno
sar
mul
sbb
sub
icebp
jp
push
mov
repz
mov
cmps
push
xchg
xor
mov
add
jmp
sti
xchg
ins
call
lods
xor
retf
push
inc
aaa
mov
or
aad
cmps
pop
sbb
cmp
ror
or
idiv
jns
mov
fistp
mov
es
or
aaa
adc
mov
mov
(bad)
call
mov
retf
cs
add
fcmovnbe
adc
xchg
inc
loop
sub
add
xor
shl
mov
lahf
jge
xor
lods
popf
hlt
lods
mov
sub
xchg
in
in
fmul
jg
loop
pop
(bad)
xlat
out
mov
and
shr
xor
xchg
push
push
call
int3
leave
pop
cmp
cmp
jmp
sbb
jmp
or
retf
push
add
pop
retf
outs
adc
packsswb
lds
es
jp
and
outs
fnstcw
lds
mov
mov
xchg
cmps
jno
pop
mov
jae
mov
into
jp
cmps
adc
sub
xor
retf
aam
xor
adc
les
cmp
dec
in
popf
cmps
mov
in
fisttp
sub
dec
add
mov
out
es
repz
pop
les
stc
fadd
cdq
sbb
dec
push
adc
and
xor
or
imul
pop
aaa
mov
xor
mov
inc
std
dec
push
ss
push
dec
fiadd
hlt
adc
ss
movs
shl
sbb
pop
enter
ret
out
pusha
daa
and
mov
enter
ret
cdq
movs
push
add
fstp
(bad)
and
jmp
por
out
ss
addr16
jb
leave
dec
add
or
ins
dec
retf
icebp
std
ins
push
jecxz
xor
(bad)
pop
outs
sbb
stos
scas
mov
repnz
movs
xchg
enter
mov
mov
(bad)
sbb
adc
into
out
adc
sub
call
mov
push
sti
loop
into
mov
xchg
dec
inc
jns
std
pop
movs
cmc
fcmovnu
mov
retf
les
adc
add
xor
pushf
out
push
js
mov
sub
cmp
pop
mov
cmc
xchg
cli
or
jg
mov
rcl
sub
js
outs
in
jae
xor
sbb
adc
dec
push
inc
jg
mov
rcr
ds
ins
scas
clc
outs
lock
adc
ins
jns
jmp
and
push
jae
inc
xor
into
scas
cld
sub
and
jge
popf
inc
cmp
dec
cwde
push
(bad)
and
(bad)
pop
pop
mov
add
mov
call
int
mov
dec
jb
sbb
mov
mov
out
out
pop
xchg
ror
arpl
xchg
repnz
xchg
jne
mov
and
movs
pop
gs
inc
mov
pop
les
stc
jno
lea
imul
mov
jmp
xor
mov
pushf
xor
add
fwait
cmp
lods
fstp
xchg
mov
mov
into
push
cmps
pop
hlt
fsubr
test
jns
mov
retf
outs
cmovne
fdivrp
test
add
in
js
pop
sub
sub
nop
clc
sbb
and
pop
sub
aaa
xchg
push
sub
jp
out
test
push
jecxz
sti
sub
mov
xchg
repnz
call
into
push
mov
cmp
popf
in
scas
inc
out
aaa
push
rcr
xor
add
int
jg
fldcw
mov
adc
js
dec
push
lds
jmp
pop
popa
clc
jnp
dec
dec
push
mov
dec
int
pushf
lahf
and
test
lea
je
cmp
bound
cwde
sar
or
mov
cli
loopne
enter
xor
les
mov
cmp
imul
push
pop
inc
aas
mov
mov
or
cdq
add
cmp
jnp
xor
in
clc
scas
mov
enter
sbb
push
mov
arpl
mov
add
clc
mov
mov
mov
push
sti
mov
cs
xchg
pusha
mov
js
mov
pop
push
cli
push
or
adc
push
test
sbb
and
ins
ror
fwait
(bad)
test
sti
ins
test
jp
pusha
fist
dec
xor
fwait
or
rcr
jecxz
sbb
mov
rcr
xchg
pop
scas
and
pop
push
out
cli
int3
dec
pop
inc
repnz
loopne
push
das
ret
shl
mov
add
jne
sbb
shl
add
ins
cs
mov
sub
mov
dec
inc
pop
ret
std
stos
add
add
adc
cmp
jbe
dec
test
pop
test
ds
fwait
xchg
xor
xor
(bad)
and
bound
arpl
push
fisttp
retf
lods
inc
fnstcw
sub
cmp
dec
push
mov
ror
mov
mov
jns
aaa
mov
xor
loope
jns
push
pusha
rcr
je
pop
js
pop
xor
or
push
inc
xor
(bad)
cmp
pop
pushf
outs
(bad)
hlt
push
pushf
pop
std
arpl
xchg
mov
ja
jmp
mov
arpl
div
inc
enter
scas
mov
movs
stc
jmp
outs
ror
shl
mov
jns
xchg
jg
sub
cli
mov
sbb
lods
inc
dec
nop
dec
mov
popf
aaa
retf
scas
outs
(bad)
ja
mov
add
ret
jp
outs
push
jge
scas
jbe
cli
sbb
repnz
cmp
stc
jp
fdiv
cli
fdiv
xlat
or
gs
imul
pop
ins
and
fist
repz
test
cmc
inc
adc
clc
call
cdq
sub
addr16
or
test
je
xchg
xor
je
lods
rol
sahf
sub
or
inc
push
pop
cdq
mov
adc
or
pusha
clc
sbb
das
test
test
imul
xlat
xchg
xor
fdivrp
inc
xlat
ret
jmp
test
inc
pop
shl
xor
vunpcklps
movs
push
cdq
or
jnp
mov
aaa
pushw
xor
test
xor
adc
jns
dec
shl
imul
fdivp
push
xchg
fcomip
lock
arpl
cmp
ins
pop
mov
(bad)
adc
mov
(bad)
adc
push
ret
jg
retf
inc
sbb
inc
mov
adc
sub
xchg
lahf
into
or
dec
add
add
icebp
sub
shl
cmps
or
shr
imul
sbb
pop
(bad)
hlt
outs
adc
sbb
shl
shl
push
gs
dec
ret
jbe
popf
shr
retf
mov
jmp
jns
jne
and
scas
xor
jge
pop
sbb
call
js
sbb
cmp
loope
dec
mov
pop
add
loopne
sbb
and
mov
fs
scas
push
ret
dec
out
repz
sub
mov
jecxz
aas
cdq
push
fmul
xchg
xor
mov
cmp
neg
retf
push
repz
and
mov
mov
jmp
mov
test
(bad)
aaa
mov
or
add
pop
or
sbb
and
or
or
jg
pop
mov
and
std
inc
push
clc
inc
xchg
test
xchg
aam
push
inc
test
inc
xlat
push
mov
or
addr16
int3
addr16
imul
out
mov
cs
pop
vucomisd
shl
xchg
cmp
int
mov
add
ds
sti
inc
outs
mov
push
mov
stos
in
(bad)
or
icebp
rcl
test
mov
nop
jno
push
mov
inc
xchg
add
(bad)
or
sub
xchg
sbb
js
mov
jge
imul
add
push
mov
add
sti
popa
or
sub
push
ins
(bad)
fstp
mov
mov
pop
mov
nop
movs
xchg
je
push
sahf
jg
cmps
scas
pop
push
fsubrp
lods
fst
xchg
mov
xor
push
mov
mov
push
leave
imul
sbb
retf
cmp
mov
int3
sub
cmp
imul
and
mov
repz
retf
in
xlat
movs
xor
dec
jg
add
fnstsw
push
call
out
jne
popf
pop
(bad)
loopne
push
mov
jne
jle
push
mov
cld
mov
mov
test
(bad)
cdq
popf
div
xlat
sub
das
mov
fwait
sub
sar
in
and
sub
movs
aas
mov
imul
bnd
pop
or
adc
loopne
add
mov
sub
push
dec
jno
push
mov
inc
adc
das
int3
mov
pop
retf
cdq
jg
test
out
mov
and
sbb
sbb
mov
aaa
test
sub
jl
pop
fmul
into
xchg
movs
mov
out
stos
mov
push
ficom
movs
retf
sbb
in
pop
call
stos
imul
lahf
sti
retf
push
hlt
cmp
adc
test
cs
fcmovu
mov
xchg
adc
jne
in
adc
mov
gs
adc
push
ins
adc
(bad)
jno
xor
adc
call
dec
sub
lods
mov
loope
ds
push
push
mov
mov
mov
mov
pop
mov
lods
cmp
clc
hlt
mov
gs
jmp
dec
nop
cld
push
xchg
clc
aas
outs
test
js
sub
dec
jl
push
movs
sar
jl
sbb
test
in
popf
stc
jne
mov
xchg
jecxz
enter
mov
push
pushf
sbb
and
push
xchg
cmp
pop
test
(bad)
popa
xor
aas
and
(bad)
mov
test
pop
pusha
xlat
inc
sbb
jmp
mov
(bad)
sub
sbb
mov
rcl
cmp
dec
and
in
xchg
test
cmp
xchg
stos
ds
mov
ins
scas
adc
jg
(bad)
shl
adc
dec
or
cli
push
cmc
jno
add
jns
test
sub
push
cmp
push
jbe
adc
cmp
loop
push
pushw
jmp
stos
or
dec
dec
mov
es
test
fst
mov
mov
and
and
add
mov
jle
sbb
cmp
stos
mov
mov
push
dec
cli
scas
ror
fild
ds
push
scas
dec
mov
xor
dec
push
fimul
scas
(bad)
stc
mov
int
inc
cdq
push
mov
cwde
xor
sub
cmp
or
dec
bound
or
push
mov
sbb
push
push
xchg
sub
test
push
stos
or
test
jl
(bad)
and
cmps
and
ror
adc
fbld
inc
cwde
popa
add
aad
xor
jl
xor
mov
ret
sbb
push
lahf
ret
mov
pop
mov
dec
ja
jl
and
push
je
les
sbb
lods
pop
mov
jne
or
push
xor
push
ja
stc
push
shl
scas
clc
mov
or
xlat
sub
add
push
sub
dec
adc
mov
fstp
loopne
sub
pop
xlat
xchg
mov
out
xchg
pop
jns
push
xchg
sub
mov
add
mov
aam
jmp
popf
fwait
xlat
int3
mov
pop
inc
add
and
movs
in
inc
adc
mov
pop
add
jmp
jecxz
imul
xchg
test
inc
xchg
xlat
xor
mov
and
loope
mov
sub
loope
daa
and
retf
mov
mov
sbb
inc
jb
or
and
pusha
sbb
loope
sbb
bound
or
das
xor
in
addr16
push
jnp
aas
fmul
jbe
hlt
cmps
repz
mov
int3
mov
(bad)
push
mov
loop
and
bnd
or
add
xor
push
jge
add
hlt
jmp
adc
lods
pop
add
or
test
into
cmp
xchg
or
es
mov
test
(bad)
mov
mov
add
and
cmps
sub
fdivr
fcom
icebp
mov
sbb
outs
cli
out
neg
leave
dec
dec
add
movs
loopne
test
jno
repnz
orps
cmp
jmp
sbb
mov
mov
xchg
xchg
mov
out
ins
push
mov
rcl
test
dec
add
scas
pop
xchg
dec
xchg
or
cmp
out
shl
cmp
cmp
add
fcom
inc
aam
push
pushf
or
data16
nop
xchg
add
inc
dec
hlt
arpl
fist
and
adc
inc
call
jecxz
in
(bad)
std
cmp
lods
xor
jmp
and
cmp
xchg
mov
icebp
add
repz
mov
jns
pushf
int3
jnp
test
outs
dec
or
cld
daa
loope
push
fbstp
cmp
or
mul
into
popa
pop
call
imul
cdq
ret
push
inc
call
scas
cmp
aad
mov
test
jle
push
add
stos
aas
arpl
lock
stc
cmps
outs
pop
or
sub
iret
test
and
cmp
xor
or
jle
pop
aas
bound
jmp
ins
jecxz
aas
enter
(bad)
dec
add
cmp
gs
add
inc
loop
jae
test
fs
in
inc
xchg
add
pop
xor
xor
mov
inc
scas
nop
push
xchg
inc
add
sub
mov
leave
inc
not
or
mov
push
fadd
leave
test
pop
mov
cmp
pop
leave
push
daa
mov
lock
retf
out
push
sub
mov
out
loope
div
ja
rol
in
or
scas
adc
mov
pop
push
push
xchg
arpl
xor
inc
jg
sbb
and
pushf
xchg
(bad)
jne
imul
mov
pop
sub
sub
jne
inc
cmp
imul
and
inc
add
hlt
jmp
mov
movs
adc
jmp
pusha
pop
outs
call
in
mov
ror
(bad)
ins
(bad)
mov
dec
xchg
push
(bad)
pusha
and
dec
sub
fs
cmp
std
and
xor
sbb
cmovo
enter
(bad)
jmp
add
ja
repz
ins
movs
inc
cmp
mov
adc
fnsave
jge
pushf
cs
cmps
call
push
pop
cmp
xchg
pusha
ret
out
jg
int3
sub
out
mov
shl
aaa
mov
push
push
(bad)
popa
mov
fdivr
movs
push
cmps
fldcw
lods
xor
jge
cmps
scas
sti
jne
shr
mov
std
lds
adc
stos
pop
mov
inc
lods
mov
pop
push
(bad)
iret
push
vmovaps
lock
lods
mov
fiadd
les
out
inc
test
cdq
pop
push
mov
xchg
in
sub
cmp
loope
(bad)
sub
mov
popa
das
lds
fnsave
gs
inc
in
test
ret
mov
clc
pushf
push
stos
sub
loop
and
jmp
std
call
jne
cmps
cmp
cmps
addr16
imul
mov
mov
loope
xchg
bound
sub
mov
dec
les
pop
cmp
xor
gs
sbb
dec
push
jg
jno
dec
add
xor
push
neg
repnz
jle
icebp
dec
mov
movs
popa
mov
inc
xor
movs
xchg
jecxz
xchg
sbb
xchg
push
sar
bound
js
dec
fld
(bad)
push
mov
js
and
rcl
mov
pop
mov
sbb
push
lahf
inc
sbb
or
jmp
inc
inc
mov
ret
out
jae
jg
mov
(bad)
inc
mov
jno
mov
leave
jg
mov
dec
inc
into
push
nop
out
in
(bad)
dec
push
inc
call
jmp
fisttp
aad
dec
adc
loope
bound
jmp
push
mov
repz
call
or
mov
xor
or
fidivr
push
inc
fs
add
pop
das
idiv
movs
mov
mov
fsubr
lock
add
js
mov
jg
(bad)
sbb
loope
fwait
adc
inc
xchg
fwait
xlat
out
xor
ret
adc
push
or
sti
fstp
pop
mov
(bad)
dec
loopne
push
push
stc
cdq
pop
jbe
and
cwde
sub
adc
mov
push
cld
and
sub
in
and
shl
pop
adc
stos
push
int3
dec
cmps
xor
cld
sub
jbe
mov
retf
push
out
xchg
out
loope
xchg
add
mov
into
cmp
lods
sub
(bad)
fisub
clc
sub
mov
cwde
mov
ret
push
cmp
pop
idiv
xor
mov
cmps
lock
sahf
je
jp
ffree
aam
dec
dec
stos
adc
jecxz
int3
ins
fadd
xchg
ins
outs
xor
scas
daa
mov
xchg
and
int
adc
sbb
lock
out
mov
stos
in
jle
fist
cs
sbb
inc
mov
out
lds
sub
clc
mov
iret
push
bnd
repz
cwde
cld
jmp
push
scas
or
or
out
push
call
sub
je
(bad)
sahf
repnz
fistp
xor
pop
or
push
retf
fiadd
cmp
adc
cmp
movs
sbb
adc
cmps
sbb
(bad)
sub
mov
and
leave
push
xchg
in
in
fdivp
mov
movs
jle
dec
push
dec
pop
mov
dec
sub
stos
xor
push
enter
(bad)
inc
int
outs
ins
sub
stos
push
xchg
loop
xchg
dec
(bad)
jg
rcl
cmp
mov
jmp
mov
neg
jp
iret
dec
sbb
add
mov
or
mov
mov
sti
sub
cmp
rol
iret
cld
(bad)
sub
not
fidivr
sbb
js
out
into
data16
data16
pop
test
sar
pusha
fisubr
stos
lds
call
and
adc
es
imul
and
add
(bad)
mov
pop
lds
fsubr
out
movs
repz
jnp
sbb
inc
fstp
push
call
cmps
mov
mov
nop
retf
jmp
imul
pop
ss
icebp
jbe
cld
xchg
sub
inc
jo
imul
loop
inc
inc
mov
(bad)
sub
adc
aad
mov
out
mov
(bad)
and
test
add
push
cmp
cwde
xor
int
jge
cs
imul
sbb
cdq
jp
nop
ja
out
and
in
mov
fwait
or
fldenv
mov
loopne
cmp
clc
jp
stos
scas
outs
shl
call
fisttp
jle
dec
pop
add
mov
mov
cdq
outs
call
xchg
jnp
sbb
faddp
in
dec
push
lock
movs
cld
lock
cwde
xlat
aam
jbe
icebp
jg
pop
lahf
into
xchg
and
cmp
cli
int
repnz
cmp
in
iret
sar
es
push
and
xchg
cwde
dec
sbb
in
sti
xchg
xchg
cdq
adc
xchg
cmp
(bad)
hlt
fcmovu
mov
clc
les
je
cmps
jge
fwait
dec
or
scas
push
pushf
pop
mov
push
dec
jo
cld
mov
and
add
shr
cmp
stos
outs
mul
pushf
ins
popf
mov
iret
xchg
sub
push
xor
cmp
mov
mov
fsub
push
add
add
fsub
jle
inc
shr
ror
stc
fs
jge
in
into
ss
retf
js
ror
inc
push
xchg
xchg
clc
(bad)
adc
scas
sub
loop
in
and
adc
mov
pop
loopne
jbe
hlt
jmp
cmp
push
push
mov
inc
(bad)
sti
sub
inc
add
cmp
addr16
(bad)
add
adc
das
addr16
add
sub
mov
pop
aam
call
out
outs
mov
inc
out
dec
enter
adc
inc
into
movs
cs
cs
clc
pop
enter
rol
test
cmp
xlat
fiadd
jnp
in
rcr
or
sub
fcom
sub
jo
outs
in
mov
jmp
outs
stos
xchg
mov
les
call
fadd
gs
inc
jl
mov
in
(bad)
mov
dec
lods
stos
push
push
xor
retf
dec
jo
mov
cmp
(bad)
pop
jne
push
test
dec
sub
stc
sbb
cmps
cmp
sbb
push
mov
out
mov
or
mov
pop
lods
mov
sar
sub
xchg
dec
adc
retfw
gs
test
mov
xor
mov
movs
enter
push
mov
jle
cld
mov
mov
and
imul
pop
out
push
cmps
mov
adc
dec
push
mov
mov
dec
dec
adc
push
cmps
cdq
push
cmc
adc
xchg
xchg
call
hlt
pop
js
fs
movs
cmc
daa
test
mov
push
xor
lahf
sbb
pop
mov
push
lods
push
or
jae
push
into
xchg
in
cmc
xchg
rol
clc
add
and
mov
lock
stos
xlat
retf
nop
adc
sbb
int
jle
and
dec
ret
dec
jge
dec
lea
popf
cmp
sti
lods
fdiv
inc
data16
and
sbb
aad
xchg
test
jne
iret
lods
stos
repz
pop
mov
data16
dec
mov
ret
mov
and
in
loope
mov
dec
je
mov
adc
loope
test
xchg
pop
daa
xchg
inc
mov
arpl
add
mul
xor
and
shl
jbe
daa
dec
fcom
sbb
push
xchg
cld
(bad)
xor
clc
mov
jno
dec
fidivr
ss
mov
inc
enterw
stos
fwait
mov
mov
test
popa
cli
mov
outs
fild
iret
sub
ins
jns
retf
mov
lods
pop
adc
(bad)
(bad)
mov
(bad)
sub
clc
adc
pop
sbb
cmc
rcl
xor
sub
cmps
sbb
pop
push
aam
push
sahf
fwait
cwde
stos
retf
scas
xchg
and
jno
outs
into
sbb
push
pusha
mov
xchg
pop
fmul
in
and
mov
pop
adc
or
mov
iret
test
outs
jnp
cwde
jb
(bad)
hlt
mov
das
xchg
je
mov
jg
add
test
adc
sahf
mov
cli
outs
clc
mov
jne
push
xchg
hlt
lods
cmp
into
lods
(bad)
call
push
adc
add
adc
adc
out
add
es
or
xchg
in
stos
sub
xchg
les
jb
sub
js
leave
jle
and
loope
jecxz
clc
fwait
inc
sub
mov
push
cli
jmp
and
pop
jnp
fiadd
in
mov
addr16
and
ret
imul
fst
cmp
pop
and
shl
ret
out
jecxz
xchg
rol
sbb
xor
dec
dec
int
cmps
imul
mov
inc
cmps
in
adc
push
out
and
xchg
cmps
imul
mov
ss
cmp
mov
hlt
data16
aam
mov
pop
cmp
xchg
and
dec
iret
pop
scas
sbb
jb
xor
stc
imul
iret
mov
pop
test
xor
or
cmc
xor
xchg
jge
int
mov
pop
mov
out
mov
push
stos
sub
pop
loopne
xor
inc
enter
iret
mov
fwait
test
push
add
xlat
fsub
xor
mov
cli
daa
jae
mov
mov
mov
adc
push
imul
leave
jge
icebp
dec
fmul
cwde
and
xchg
call
pop
lahf
or
ror
dec
inc
lods
neg
ficomp
call
ret
fsub
popf
dec
xor
xor
ja
inc
or
pop
pop
sub
adc
mov
in
cmp
ins
mov
lods
adc
push
mov
jl
xlat
ds
jno
jl
outs
loopne
dec
jns
test
retf
mov
mov
add
sbb
mov
lods
or
scas
push
jge
mov
retf
or
sub
mov
add
in
sahf
rcl
xlat
or
imul
inc
dec
jae
adc
(bad)
jbe
imul
jle
sbb
push
xchg
mov
inc
lods
cmp
add
pop
rcl
jge
mov
sbb
sbb
mov
test
add
aad
pop
jo
out
(bad)
pop
repz
call
ror
adc
fs
xchg
jge
loope
pop
inc
rcl
mov
mov
xor
pop
inc
ss
pop
stos
in
jmp
popa
nop
sbb
adc
xchg
(bad)
aad
adc
mov
aam
jmp
fisubr
movs
repnz
pop
sahf
ficom
and
rol
out
mov
pop
aas
jnp
ret
cmp
pop
ins
shl
xor
das
adc
fldenv
push
add
dec
adc
and
mov
add
jl
sub
pusha
sbb
imul
add
lock
xchg
cmp
add
sbb
aad
add
imul
(bad)
adc
cwde
fs
cli
cmps
inc
jmp
fsubrp
adc
fwait
ja
push
retf
cmp
ret
stos
jmp
psllw
shl
outs
cmc
lds
dec
cli
mov
push
das
ja
loop
sbb
push
fcmovnu
sbb
mov
cmps
mov
xchg
xchg
jl
inc
push
mov
leave
lea
mov
sbb
pop
or
jae
xor
(bad)
repnz
pop
push
add
pop
jge
pop
jb
lods
pop
lahf
xchg
mov
test
fs
aaa
pop
dec
mov
sti
loope
shl
(bad)
daa
mov
add
xchg
stos
sahf
mov
mov
ja
ss
push
jp
push
jbe
imul
cmp
repnz
jae
or
shl
and
js
in
mov
(bad)
pop
inc
sub
mov
loope
or
mov
icebp
das
sbb
cmp
push
mov
adc
jecxz
adc
out
shl
stos
cs
mov
xor
dec
fild
js
in
jle
jge
jmp
cwde
shl
or
mov
sub
sbb
dec
mov
mov
retf
pop
xlat
(bad)
in
xchg
arpl
enter
lods
add
outs
in
pushf
xchg
sub
pop
inc
xchg
(bad)
push
rcl
adc
ja
imul
push
sahf
stc
(bad)
mov
dec
mov
dec
mov
std
mov
aad
loopne
ins
or
adc
ins
sub
jne
and
jmp
mov
adc
xchg
inc
or
in
ret
popa
or
cmp
out
gs
stos
jp
and
mov
adc
retf
mov
les
fst
and
test
es
inc
lods
push
add
pushf
cmp
pushf
fild
cmp
cdq
imul
in
sub
mov
sub
shr
mov
xor
push
es
inc
push
pop
fldenv
clc
jno
outs
in
js
dec
pop
or
lds
std
js
imul
gs
lock
leave
xchg
mov
popf
mov
in
jmp
jle
or
ins
dec
out
mov
push
vunpckhps
dec
jne
mov
push
mov
fcmovbe
std
inc
adc
inc
push
and
jnp
cmp
sar
popf
inc
aas
xchg
ins
mov
adc
arpl
aam
in
adc
aam
mov
dec
(bad)
cmp
push
xor
pop
jb
in
push
movs
or
mov
sbb
adc
lfs
jbe
xor
mov
sbb
xchg
shr
in
dec
push
inc
add
shl
retf
sahf
fmul
fs
push
ret
aaa
(bad)
pop
int
shrd
fcomp
dec
arpl
cmp
test
push
push
mov
cmp
in
in
jno
pusha
sub
xchg
xchg
dec
mov
cdq
stos
loop
sbb
xchg
add
hlt
dec
push
mov
repz
in
fsub
and
xor
xchg
dec
ret
sub
sub
loopne
and
imul
out
clc
call
ffree
test
or
inc
(bad)
loopne
dec
call
inc
dec
(bad)
pop
ss
mov
push
sti
outs
(bad)
and
test
loop
sbb
sahf
fcom
lds
mov
jge
mov
adc
popa
pop
mov
ret
cmps
(bad)
in
mov
repnz
enter
or
inc
push
stc
sub
and
enter
dec
ret
loopne
pop
jns
aam
mov
fisttp
mov
fwait
xor
pop
mov
sub
push
xor
mov
add
(bad)
pop
sub
fisttp
ja
xor
aad
ror
push
pop
pop
push
outs
cld
and
fld
retf
shl
cli
xor
pop
sub
loopne
adc
add
(bad)
ins
sbb
jmp
ret
ss
xor
sahf
loopne
ss
aam
int
fst
and
cmps
in
or
mov
sti
dec
std
mov
scas
pop
dec
fnstsw
ficom
ds
xchg
pop
out
les
gs
ins
in
or
jp
inc
dec
(bad)
in
sbb
out
jmp
or
cmp
xchg
and
xchg
lds
add
push
cmp
shl
xlat
pop
loope
mov
loop
sbb
fdiv
xor
(bad)
sbb
mov
push
jmp
das
push
loopne
ins
fwait
lods
sbb
iret
dec
fbstp
pop
sti
pop
cmp
loopne
in
aas
add
cmpxchg
dec
cmp
cmp
cmc
iret
jns
jns
cmp
jnp
(bad)
fdivr
aam
cmp
xchg
mov
sub
(bad)
cs
(bad)
mov
xor
aas
loopne
bound
mov
jmp
inc
fs
xor
mov
dec
ja
push
xor
call
rcr
in
pusha
int3
dec
pop
jns
inc
cmp
shl
xchg
leave
out
out
jl
sar
loope
mov
add
jno
inc
ins
arpl
in
jnp
adc
cmc
movs
imul
test
fidiv
or
call
cwde
pop
lods
pop
sub
ret
mov
pushf
iret
stos
fiadd
xchg
xor
movs
xor
add
or
mov
jno
lea
sbb
inc
mov
dec
dec
jge
bound
lods
jmp
stos
stos
rcr
(bad)
enter
ss
add
cdq
mov
cld
sar
mov
xor
int3
pop
ret
sar
xor
and
sub
sbb
pusha
mov
ja
xor
outs
in
adc
adc
pop
jecxz
inc
ret
mov
add
push
fs
xchg
aas
mov
cmps
arpl
xor
cmp
aaa
jp
mov
test
sar
stos
pop
ror
(bad)
adc
xor
test
mov
xchg
xchg
or
or
hlt
scas
cmps
hlt
inc
xchg
test
cs
loopne
(bad)
test
in
and
in
sbb
push
(bad)
cmp
fsubr
jmp
iret
mov
aad
ror
call
push
push
and
mov
pop
lahf
add
adc
xchg
ret
jge
(bad)
and
jp
adc
fisttp
xor
cmp
add
(bad)
in
rcl
out
sbb
sub
sbb
xchg
imul
inc
lods
xchg
inc
lea
mov
add
nop
jecxz
push
fs
inc
sbb
shl
pop
ins
and
mov
jl
imul
mov
jge
sar
les
lea
xchg
cmp
aam
loopne
shl
dec
out
or
sub
mov
ret
out
(bad)
loopne
imul
or
push
ret
or
jns
je
data16
sahf
jmp
pop
(bad)
sub
cdq
adc
jle
sbb
jmp
sbb
add
jp
in
cli
xchg
push
lods
fbstp
fidiv
jne
mov
mov
pop
push
dec
xor
lods
jmp
sar
dec
pop
shl
push
stos
out
(bad)
xchg
pop
mov
gs
push
ins
xchg
hlt
jnp
jnp
inc
ror
adc
sub
or
jl
dec
mov
movs
add
fwait
push
scas
cmps
sbb
xchg
test
jmp
cwde
add
push
rcr
inc
push
lds
std
dec
sbb
mov
cwde
xlat
lods
and
xacquire
add
or
sbb
cwde
jb
out
mov
jmp
sbb
retf
(bad)
retf
addr16
jl
out
pop
jnp
jo
fnstenv
mov
scas
stc
pop
add
movs
cmp
mov
loopne
pop
std
adc
fcom
dec
or
out
lods
call
or
stc
jmp
sahf
adc
mov
adc
(bad)
(bad)
scas
fidivr
aad
xchg
lds
pop
cdq
sahf
add
xlat
mov
pop
movs
xor
xchg
mov
ss
out
push
pop
popa
es
jg
mov
add
shl
sti
fild
pop
rol
adc
pop
jmp
std
mov
adc
add
in
mov
pop
mov
cdq
sbb
stos
or
retf
imul
mov
neg
jnp
xchg
cwde
or
jo
xor
sbb
test
push
mov
dec
(bad)
daa
mov
mov
sbb
fcmovne
mov
mov
lods
or
pop
repz
cmc
pushf
jg
imul
jp
cmp
pushf
xor
data16
pop
retfw
popa
mov
jge
leave
jne
fs
xchg
test
nop
and
xchg
add
cmp
jg
test
stos
add
adc
xor
dec
cmp
push
add
or
popa
mov
nop
test
int3
or
shl
adc
lea
pusha
mov
pop
sbb
push
inc
aad
xor
fcmovb
mov
mov
hlt
and
in
stos
sbb
ret
inc
(bad)
data16
mov
sti
sbb
mov
mov
xchg
xor
and
mov
jle
pop
fadd
mov
push
(bad)
rcl
dec
icebp
gs
je
pop
and
pop
in
mov
rol
jae
sbb
and
data16
mov
popf
ficomp
aam
loop
sub
(bad)
test
enter
fimul
test
xchg
(bad)
leave
inc
sub
jne
xchg
xlat
and
pop
ror
adc
xlat
clc
mov
pusha
xor
pop
xor
fs
lds
out
loope
cld
outs
cmp
sbb
adc
dec
jge
bound
sub
rcr
adc
scas
or
jns
popf
hlt
adc
fs
and
xchg
inc
in
jbe
cmps
or
sub
inc
sti
mov
and
xchg
pop
sub
or
mov
stos
neg
sub
add
push
not
std
and
dec
inc
test
loop
jmp
jg
sbb
xor
sbb
cmp
scas
pop
into
test
add
out
retf
inc
sub
scas
inc
imul
xor
xchg
mov
lahf
mov
pop
movs
adc
jg
rcl
pop
or
mov
(bad)
adc
dec
inc
jne
int
mov
sub
retf
fbstp
xchg
mov
mov
mov
adc
pop
scas
cmc
imul
adc
es
in
xchg
aad
setl
das
cmovo
ret
add
dec
cmp
add
xchg
(bad)
nop
hlt
es
fs
xor
xchg
add
mov
xchg
out
out
(bad)
sbb
mov
mov
ins
cmp
xor
pop
dec
add
ja
sbb
pusha
mov
mov
or
test
and
cmp
lahf
push
fcomi
aam
dec
out
clc
or
stc
out
mov
int3
mov
add
loopne
or
stc
mov
movs
pop
mov
test
mov
out
inc
das
std
rcl
and
aas
sub
shl
cmp
lea
inc
adc
test
xor
retf
hlt
out
mov
jle
arpl
fisttp
add
popa
scas
test
call
pop
and
imul
repnz
icebp
mov
(bad)
ficomp
xchg
pop
fnsave
push
enter
inc
ret
mov
retf
mov
xor
xchg
pop
dec
xlat
ret
lahf
(bad)
arpl
or
mov
mov
mov
xor
jmp
dec
pop
call
call
adc
out
cmc
out
dec
push
xor
push
dec
jnp
jp
sbb
xchg
fidiv
xchg
pop
inc
sbb
repnz
(bad)
pop
push
push
test
ins
cmp
push
push
jmp
mov
into
add
pop
sar
fistp
int
lea
sub
(bad)
pop
dec
and
aaa
mov
sahf
adc
and
dec
cs
ss
pushf
jmp
push
aaa
shl
and
cld
sahf
xor
ror
retf
inc
xor
mov
fiadd
adc
stc
push
mov
cmps
imul
jle
popa
arpl
xlat
or
push
push
or
movs
lods
inc
mov
ins
scas
xchg
fnsave
pop
or
add
xor
aaa
sbb
mul
and
xor
mov
dec
(bad)
out
nop
shl
std
mov
dec
cmps
xor
xchg
dec
mov
je
data16
je
mov
cli
fild
in
cli
push
mov
pusha
shl
cmp
(bad)
jl
xchg
jno
mov
cld
adc
fwait
xor
push
push
loopne
stc
dec
and
fdiv
jnp
fstp
push
and
out
aas
popa
in
(bad)
pop
and
shr
cmp
cmps
sub
pop
cmp
adc
fucomp
ins
jmp
fadd
xor
bound
je
mov
and
sti
aaa
mov
pusha
iret
fwait
in
cli
movs
dec
(bad)
sahf
push
cmp
ins
xchg
retf
rcl
pop
call
pop
mov
xor
add
jle
push
int
(bad)
rol
bound
pop
jns
leave
inc
lods
and
ins
pusha
mov
sub
call
bswap
sbb
or
inc
inc
push
inc
in
sbb
dec
pop
and
mov
sbb
hlt
mov
mov
jp
ja
mov
je
pop
cmp
sbb
inc
jb
rdtsc
mov
(bad)
xchg
aas
ret
stos
dec
mov
out
scas
and
pop
xor
lock
push
pop
das
inc
cld
fisub
popaw
fidiv
and
fstp
lea
sbb
test
mov
retf
mov
dec
mov
pop
int
xor
sbb
add
push
add
xor
nop
jae
mov
ret
sbb
jg
and
pop
jmp
call
idiv
hlt
jmp
loopne
adc
pop
sahf
pop
pop
(bad)
pushf
dec
repnz
jecxz
out
mov
xor
and
pop
mov
push
sbb
mov
sbb
xchg
adc
ds
std
ret
mov
sti
add
test
inc
inc
repnz
xchg
inc
or
jb
call
fcom
push
push
xchg
sbb
adc
cli
xchg
repnz
das
mov
pop
adc
dec
cwde
and
cdq
pop
dec
mov
imul
adc
iret
ret
dec
into
in
cmp
stos
in
(bad)
in
and
js
mov
fistp
aaa
scas
nop
and
inc
mov
push
pop
xor
stos
lds
ins
(bad)
(bad)
pop
pop
ror
mov
pusha
and
sbb
adc
xor
mov
xchg
aad
out
out
dec
push
cmp
xor
imul
pop
fs
in
xchg
aam
fwait
cld
lahf
xor
loop
popf
mov
push
mov
cli
or
enter
inc
sub
scas
(bad)
push
loope
dec
cld
ins
adc
sbb
aad
sahf
enter
(bad)
push
ret
cmc
xchg
test
out
push
repz
ret
mov
fwait
pop
jmp
push
fs
xchg
int
cmc
mov
xchg
ficom
lds
sbb
aad
cmps
cmp
xchg
lods
cdq
imul
ret
jmp
mov
mov
arpl
scas
ins
movs
jl
sub
mov
or
mov
pop
add
shl
sahf
mov
movs
sbb
mov
xlat
dec
pushf
xor
fsub
in
sar
sahf
shl
cld
push
push
sbb
mov
movs
push
enter
jmp
cmp
sahf
push
gs
fcom
sbb
mov
pusha
outs
jle
sar
inc
push
dec
mov
xor
scas
mov
xor
add
pop
jmp
pop
mov
sbb
adc
sar
push
lods
fiadd
nop
adc
rol
or
adc
imul
gs
pop
and
or
inc
jge
leave
push
enter
ja
movs
(bad)
lods
popa
pop
sbb
scas
cmp
xchg
fsin
xchg
test
push
dec
push
or
les
pop
xchg
or
add
xor
xor
fcmovu
mov
jg
pinsrw
neg
rcr
ficom
repnz
cmps
xor
lea
pushf
add
inc
sub
sub
nop
fwait
sahf
or
fbld
imul
and
inc
jo
add
mov
loopne
std
sahf
sti
daa
push
push
sti
(bad)
sbb
xor
shl
adc
xor
imul
sbb
clc
jmp
outs
sahf
clc
xor
jmp
jmp
xor
xor
push
push
add
test
imul
ret
mov
clc
ds
mov
push
cmps
sahf
mov
xchg
and
pop
mov
jmp
jecxz
aas
push
in
add
cwde
ret
in
scas
cmp
xchg
mov
int3
test
mov
mov
popf
mov
rcl
ss
sbb
xor
mov
dec
rcr
arpl
lock
inc
xchg
jb
xchg
and
test
shr
mov
mov
mov
enter
out
(bad)
pusha
sub
clc
pop
cld
fwait
jne
or
dec
sbb
mov
sti
push
shl
mov
adc
xor
(bad)
gs
pop
jmp
loop
rcl
shr
push
sbb
pop
stc
mov
jmp
xor
shr
in
or
jns
out
icebp
stos
or
inc
sub
arpl
scas
cld
dec
and
xlat
in
sbb
cmp
out
mov
xchg
inc
xchg
jle
jmp
bound
add
jle
dec
jmp
cmp
fsubr
rol
mov
popa
dec
imul
sub
inc
in
scas
mov
cmps
adc
pop
ins
cld
cwde
lock
sub
pop
push
(bad)
sub
mov
xor
adc
adc
xlat
arpl
push
(bad)
lods
xor
mov
or
sbb
jl
pop
nop
adc
cmp
mov
(bad)
iret
pop
and
xchg
push
or
ss
std
sbb
or
pop
and
xor
lds
dec
jp
stos
inc
repz
push
sbb
cli
inc
pop
mov
mov
mov
cmps
dec
cmp
mov
jnp
adc
pop
mov
test
stos
sub
dec
stc
out
addr16
xor
(bad)
(bad)
mov
lods
cs
repz
xor
fsubr
pop
ss
ins
push
sub
inc
mov
mov
dec
cmc
cs
aaa
mov
in
sub
pop
fisub
mov
add
xor
std
jnp
push
cwde
sbb
loop
mov
test
mov
mov
mov
xchg
call
jbe
jge
adc
inc
ja
fcom
(bad)
jmp
mov
xchg
push
jmp
xor
enter
rol
mov
call
xchg
jmp
push
jne
jns
stos
or
out
jmp
jbe
push
ins
ficom
jmp
sub
loopne
fsubr
mov
js
fwait
ins
pop
dec
mov
fmulp
repnz
clc
sub
cmp
hlt
jg
xor
cli
out
inc
mov
call
jmp
inc
ins
shl
sbb
mov
and
and
scas
inc
push
mov
arpl
inc
mov
cmp
pop
dec
int
je
mov
jmp
lea
pop
loope
mov
adc
test
sub
jmp
push
mov
sbb
bound
jg
in
pop
add
cmp
add
sub
je
push
lds
xor
iret
lods
lods
loopne
out
in
mov
hlt
scas
(bad)
(bad)
out
sti
ins
push
sub
ja
pop
ins
dec
pop
test
sbb
cmps
cs
xor
in
add
xor
xchg
sub
push
xchg
scas
(bad)
push
mov
int
push
jbe
loope
std
pop
jl
inc
sub
pop
outs
cmps
or
shl
mov
jns
xchg
and
push
mov
sub
stc
movs
call
lods
in
and
iret
scas
and
mov
adc
sti
jmp
shr
sub
adc
(bad)
dec
enter
not
int3
int
loop
jp
pop
(bad)
in
cmp
pop
lea
pop
es
retf
cld
jmp
push
inc
add
mov
adc
pop
inc
cmp
pop
adc
xor
cli
sub
pushf
movs
data16
mov
or
mov
test
loopne
call
ins
jo
cwde
jbe
jge
in
dec
in
xchg
int3
mov
xor
xchg
jae
cmp
push
mov
push
adc
jp
aad
movs
fs
div
rdtsc
loop
jmp
xchg
dec
outs
gs
fs
add
mov
rcr
mov
ss
xor
push
out
in
push
call
pop
dec
pop
movs
addr16
add
adc
pop
jp
dec
push
and
add
(bad)
mov
adc
push
fsub
dec
xchg
int
lds
aaa
mov
arpl
adc
mov
arpl
add
shr
jge
jae
retf
pop
in
jnp
jb
pop
(bad)
rcl
push
add
mov
popa
adc
jmp
sub
clc
fiadd
sahf
call
jmp
movs
loope
xchg
scas
popa
mov
fs
in
loopne
loop
mov
loop
repnz
or
xchg
push
adc
jb
ja
mov
aam
stos
mov
sbb
and
jo
rcl
sar
cwde
pop
push
or
cmp
jae
dec
push
and
ret
popa
inc
or
and
aad
test
aaa
lods
(bad)
in
hlt
and
ss
fisttp
push
imul
scas
lahf
int
cmps
xchg
inc
sbb
jns
adc
arpl
popf
pushf
jb
out
lahf
int
jecxz
movs
jae
jp
out
xchg
retf
fbstp
call
cmc
or
aas
das
sub
or
mov
fwait
push
mov
(bad)
outs
cmp
push
mov
fnstsw
imul
and
lods
pop
call
jge
and
jmp
pop
movs
clc
out
addr16
sub
sub
sbb
cmp
clc
jp
dec
fsubp
stc
cmc
leave
lods
mov
cmps
cmp
sub
scas
push
push
push
dec
mov
sbb
add
movs
add
sub
out
jg
push
fwait
ds
inc
lods
jo
cmc
repz
call
sub
xor
sti
xor
lock
push
aaa
xchg
js
xchg
push
jnp
ret
push
mov
in
loop
sti
(bad)
xlat
jnp
jg
dec
xchg
and
out
mov
pop
push
dec
adc
sub
push
daa
mov
es
xchg
adc
das
jae
in
retf
or
add
push
mov
in
sub
cmc
add
mov
mov
out
xor
into
and
sub
aam
inc
sbb
and
jge
jb
aam
dec
lea
imul
push
add
add
inc
fadd
mov
outs
cwde
jnp
inc
(bad)
int3
pusha
bound
xchg
mov
add
inc
jnp
test
rcr
movaps
mov
sub
or
jmp
stos
or
pop
cs
addr16
data16
lock
jge
and
and
cmc
aad
hlt
test
sub
sar
push
cmp
add
jg
sub
inc
(bad)
xchg
xor
sub
or
fimul
movs
out
sbb
mov
mov
xchg
mov
pop
ret
aaa
(bad)
jl
cmps
shl
sbb
pop
jmp
fs
outs
mov
mov
mov
push
mov
out
xor
dec
ins
lods
mov
xchg
push
(bad)
dec
sbb
fisttp
shr
imul
mov
mov
sub
movs
sub
adc
push
sbb
mov
test
xchg
popf
cmps
in
mov
mov
idiv
mov
xchg
fstp
daa
ins
jmp
loope
add
sub
cmp
test
jge
push
dec
jl
mov
outs
jns
addr16
retf
loope
or
stos
xor
(bad)
jmp
(bad)
mov
or
lods
pop
mov
xchg
loopne
ret
les
mov
mov
push
xor
div
aas
ja
inc
out
mov
in
sbb
mov
or
(bad)
ins
jns
repz
adc
push
and
add
inc
add
mov
or
cmps
in
shr
push
jns
mov
mov
adc
sti
xchg
sahf
sbb
jae
repz
push
push
mov
and
mov
in
cmc
and
jmp
cld
fsubr
lds
in
add
clc
fcomi
push
jno
add
call
cdq
dec
sbb
arpl
cmp
mov
ror
sbb
ja
test
pop
clc
xchg
mov
sub
xchg
push
call
xchg
push
sti
add
nop
jnp
int
mov
test
xchg
add
mov
mov
sub
pop
leave
jno
push
lahf
or
fwait
cmp
inc
fadd
adc
jp
sub
rcr
sub
jmp
push
imul
dec
call
fs
call
pop
outs
mov
push
jg
pop
xchg
xor
in
cmp
xor
xchg
stos
icebp
mov
ss
xchg
ins
cmp
(bad)
aam
cdq
cdq
outs
cmp
mov
mov
cmps
cmps
inc
nop
daa
into
out
add
fst
xchg
xchg
pop
movs
cdq
dec
clc
sbb
sbb
inc
das
mov
jg
sbb
call
mov
sbb
(bad)
jl
dec
bound
jmp
shr
inc
into
(bad)
xor
sbb
xor
dec
fcomp
inc
sub
js
call
ja
test
sub
pop
adc
mov
mov
test
inc
push
push
dec
daa
xor
int
adc
movs
ss
scas
pusha
pop
aam
add
pop
mov
add
jg
dec
sub
push
lock
in
movs
ins
xor
outs
push
mov
out
rcl
dec
sub
sti
imul
fist
cmp
out
pop
or
mov
pop
xchg
dec
jo
dec
fist
jnp
and
jge
ja
dec
xchg
lods
movs
iret
fmul
or
inc
inc
movs
cmp
xchg
mov
sbb
sub
enter
retf
(bad)
ins
and
in
adc
fucom
add
push
xor
cmp
and
and
pop
mov
xor
sub
in
dec
jbe
mov
xchg
ds
imul
shl
mov
cmp
and
mov
jmp
mov
xor
retf
inc
dec
mov
jge
aam
mov
mov
mov
or
dec
movs
and
sar
in
fisub
iret
ins
test
add
dec
sbb
iret
cmps
std
cmps
bound
add
je
or
xchg
inc
imul
ja
ror
mov
xchg
in
mov
loopne
lods
or
cmp
(bad)
cmps
cmp
stc
lahf
pop
push
jg
jp
icebp
shr
cmp
jne
cli
stos
push
jb
lea
aaa
jne
cmp
cmp
sub
test
push
or
ror
shr
xor
ret
pop
jecxz
cld
bound
adc
xchg
add
int
es
fist
jns
cs
ds
std
xor
loope
xchg
shl
inc
push
fbstp
pop
or
jne
popf
mov
fsub
mov
test
xchg
jae
jno
mov
xchg
add
cld
inc
sahf
out
or
rcl
cli
mov
cmc
pop
mov
fdiv
loope
call
jmp
fsubr
scas
fdivr
scas
data16
jbe
and
jns
add
in
cmp
xor
push
aas
adc
and
retf
fist
cvtdq2ps
dec
retf
les
pop
out
shl
stc
test
rcr
cwde
arpl
mov
(bad)
fcomp
cmp
(bad)
xor
pop
outs
adc
aaa
inc
dec
push
xor
cmp
and
adc
adc
sub
inc
cmp
hlt
sub
das
test
lds
pop
inc
push
out
test
jmp
and
cmp
int
and
push
fistp
sbb
inc
stos
ret
mov
ret
or
fdivr
sub
jae
lea
push
xor
inc
cmp
push
sub
sbb
push
test
cwde
jmp
adc
das
xor
sub
js
movs
xchg
add
sar
aas
dec
mov
or
jbe
push
not
push
jbe
dec
ret
ror
popa
xchg
aas
ret
cmps
data16
(bad)
add
mov
pop
imul
stos
sub
cmps
adc
mov
repz
sbb
fwait
xor
test
mov
and
ret
mov
pushf
repz
mov
jnp
mov
shl
repz
xchg
fwait
(bad)
inc
mov
ins
(bad)
xchg
ret
sahf
sub
pushf
pmaxsw
lods
xchg
xor
stc
sahf
dec
lock
imul
in
or
lea
(bad)
lods
cmp
cmp
jg
jl
fidiv
jnp
fs
movs
(bad)
call
pop
xchg
clc
cmps
out
lods
mov
je
sub
cli
mov
aad
test
xchg
adc
ins
add
imul
xchg
sub
movs
(bad)
(bad)
xchg
jns
dec
add
leave
cmp
dec
out
or
mov
xor
je
sub
scas
stos
cmp
and
enter
lock
pushf
mov
push
lahf
and
jmp
mov
mul
xor
or
inc
lds
sub
sbb
ret
in
lock
mov
rcl
movs
mov
sub
popf
lods
push
inc
cs
inc
jae
call
push
in
dec
push
adc
movs
int
rcr
sbb
lahf
and
outs
lea
(bad)
adc
test
(bad)
pop
js
(bad)
test
arpl
dec
ret
mov
mov
popa
sbb
pop
push
and
cmp
cld
pop
call
sar
nop
sub
int
and
lods
push
iret
adc
fcom
add
add
sbb
mov
imul
rcr
mov
push
push
jns
or
sub
je
repnz
cmp
bound
sub
lea
iret
adc
loopne
ins
loopne
(bad)
mov
in
jns
inc
mov
add
std
lods
push
inc
inc
dec
cli
mov
mov
xchg
ja
dec
pop
sti
ret
idiv
test
out
xor
into
int3
popa
jmp
nop
mov
jno
push
aad
jp
jg
push
mov
outs
or
jo
or
enter
inc
push
mov
dec
rcr
out
add
bound
or
inc
pop
jmp
add
and
and
push
fist
inc
jmp
mov
jmp
es
sub
dec
sbb
js
ret
pushf
mov
pop
stos
aad
pop
or
hlt
jge
fisubr
sti
ret
scas
test
aam
in
mov
and
es
jno
lock
cli
sub
xchg
sub
sahf
xchg
stos
movs
mov
inc
jbe
out
scas
fidivr
sahf
xchg
int3
or
sub
mov
cli
ret
xor
xor
call
mov
ins
je
addr16
cmp
mov
xchg
push
jmp
mov
outs
and
push
adc
add
jecxz
adc
std
fcomp
mov
and
push
fisttp
sar
aam
fstp
add
xchg
push
sbb
xor
xchg
xor
xchg
std
enter
cmc
and
mov
jmp
retf
push
jbe
imul
xor
retf
adc
xchg
ffree
mov
adc
jno
and
retf
mov
repnz
sbb
int
int3
repnz
jno
movs
cdq
movs
and
jnp
nop
jg
push
test
es
xchg
das
mov
cld
adc
fstp
iret
jno
dec
push
pop
add
cld
jmp
in
(bad)
call
jg
mov
xchg
test
out
ins
xor
mov
add
xor
das
mov
cmp
push
mov
dec
out
retf
xchg
push
inc
and
outs
jmp
idiv
jbe
int
jbe
or
mov
(bad)
iret
repz
pop
pushf
popa
xchg
retf
jge
sahf
sub
jne
xchg
inc
adc
aas
test
or
retf
pop
or
push
mov
mov
add
pop
pop
xchg
fwait
scas
xchg
cmp
cmp
mov
push
in
mov
fnstcw
cld
retf
xor
imul
imul
and
push
mul
jmp
std
xor
push
test
call
xor
mov
mov
sahf
sahf
pop
push
push
push
ins
inc
jno
adc
repnz
stc
loop
lea
jl
inc
push
(bad)
fcmovnb
retf
inc
out
popf
test
xchg
into
mov
fbld
or
sahf
mov
mov
cs
xor
jb
jns
retf
daa
jb
shr
loop
enter
jmp
fs
push
mov
test
lds
mov
out
outs
mov
sbb
mov
inc
test
sub
sub
nop
pand
mov
cs
pop
sbb
xchg
daa
fsub
inc
mov
sub
aad
jmp
xor
add
push
or
mov
add
or
mov
(bad)
loop
adc
push
push
sub
sbb
shr
fmul
sub
pop
leave
sbb
pushf
add
ins
enter
cmp
push
xor
mov
sub
or
dec
fwait
xchg
mov
jl
cmc
rcr
xchg
daa
cdq
cmp
add
cld
mov
sbb
and
call
sub
pop
xor
mov
sub
ja
mov
inc
repz
rcl
jmp
shr
xor
cmp
scas
mov
inc
out
cs
fdivr
mov
or
mov
pop
loopne
int
pop
mov
sbb
dec
stos
lock
sub
movs
dec
aas
mov
cmp
(bad)
xchg
jns
gs
sbb
and
push
xchg
jb
dec
shl
push
daa
stc
push
into
xor
lea
inc
xor
dec
nop
out
and
test
or
and
jmp
cmp
mov
jbe
and
adc
mov
mov
rol
pop
sub
test
fwait
mov
jmp
lods
pop
and
push
and
icebp
adc
push
jmp
ffreep
add
inc
jle
pop
iret
pop
and
pop
scas
aaa
sub
(bad)
fdivr
test
(bad)
dec
dec
or
lods
dec
fdivr
pop
push
sti
pop
lahf
mov
or
adc
imul
shl
in
jg
xchg
stc
inc
test
xchg
movs
in
xchg
fistp
xlat
jmp
out
sar
cmp
jne
ret
sbb
shl
(bad)
popf
pushf
cmp
inc
cli
pop
adc
mov
jo
mov
sbb
cmps
dec
sbb
push
or
xor
out
lea
lods
fstp
icebp
repnz
adc
jle
push
inc
bound
sbb
das
cmp
pop
clc
jbe
cmp
mov
bound
stos
and
imul
call
rol
sbb
mov
or
sar
mov
test
sbb
push
cs
push
mov
fbld
push
imul
lea
(bad)
mov
and
int3
in
xchg
test
das
cmc
cmp
in
rcr
mov
xor
cmovno
inc
call
xor
xchg
test
sbb
aad
pop
scas
cli
fs
cli
mov
cmp
cs
push
je
sbb
(bad)
daa
xor
(bad)
xchg
pop
ret
jne
adc
rol
pop
push
neg
jbe
mov
(bad)
and
popf
jmp
hlt
push
pop
cmp
jno
mov
shr
sbb
dec
jmp
scas
repz
inc
pop
in
mov
pop
adc
test
push
jmp
or
or
push
jae
xchg
jb
cmps
adc
aaa
pop
outs
mov
jo
add
fbld
shl
mov
sar
xor
pop
mov
retf
pusha
test
pop
mov
das
loope
stos
sub
add
dec
inc
js
jle
out
sbb
pushf
aaa
shl
cmp
mov
scas
test
fs
inc
ins
cwde
ja
clc
mov
pop
xchg
test
mov
inc
shr
or
cmp
xchg
add
push
fmul
and
dec
push
mov
das
add
jp
sbb
icebp
outs
xor
xor
sub
movs
cmc
xchg
pop
mov
push
lods
sub
popa
or
inc
popa
sub
bound
sub
sub
cmp
sub
push
out
in
imul
sahf
mov
add
scas
outs
sti
test
adc
imul
scas
xor
or
mov
xchg
(bad)
in
and
or
clc
jecxz
push
adc
(bad)
test
lea
cmps
js
jmp
fcomp
push
into
lea
push
add
sub
in
mov
gs
sub
daa
jnp
adc
adc
clc
test
fdiv
cld
pop
mov
mov
test
sbb
daa
test
test
mov
xor
ror
movs
cmps
xlat
ficomp
repz
retf
dec
mov
dec
mov
xchg
mov
stos
and
jle
popf
rcl
mov
loope
nop
cwde
push
fistp
mov
inc
mov
xchg
cmp
(bad)
push
pop
retf
fcom
(bad)
cwde
ja
movs
and
aas
mov
dec
push
rol
nop
sub
or
arpl
and
push
xor
mov
js
mov
pop
sbb
mov
stos
jae
add
div
jge
aam
adc
and
aad
xchg
cmps
add
sbb
into
test
(bad)
loop
cli
add
clc
fistp
imul
or
cmps
push
lds
rcl
xchg
or
scas
jle
dec
fcom
xchg
pop
nop
cmps
popa
cmc
and
mov
dec
imul
cmp
add
adc
das
arpl
vmovlpd
inc
pusha
dec
sbb
or
int
in
push
mov
xlat
outs
dec
imul
or
fwait
icebp
and
mov
adc
in
fs
or
(bad)
bnd
daa
or
test
mov
in
mov
jmp
xchg
jle
jae
push
jmp
(bad)
lahf
cmp
push
push
mov
test
inc
add
push
mov
push
js
daa
cli
add
pop
mov
xchg
int3
sub
es
cld
aam
stos
lds
and
out
movs
mov
jae
xor
sbb
and
add
scas
xor
leave
gs
shl
mov
mov
(bad)
jo
and
pop
adc
or
out
mov
dec
mov
push
cld
xchg
dec
jae
mov
icebp
test
add
test
into
sub
jecxz
sub
sahf
sbb
mov
push
lods
sbb
adc
mov
(bad)
adc
mov
arpl
cmp
inc
aam
cmc
sbb
xchg
cli
or
imul
lea
or
ret
movs
jno
cmps
and
xor
jne
leave
inc
shr
mov
pop
jo
add
mov
jno
ror
test
sbb
adc
mov
adc
dec
pop
popa
neg
add
fsubr
fsub
enter
or
fidiv
push
mov
mov
sub
in
jne
cmp
int
sub
mov
and
mov
imul
arpl
(bad)
cs
lds
pop
ss
cdq
push
sbb
add
cmp
jmp
repz
outs
mov
inc
adc
pushf
cdq
repnz
adc
dec
popf
out
movs
hlt
scas
push
pop
add
ins
jns
add
push
jne
mov
sbb
(bad)
pop
stc
jge
xlat
push
xchg
xchg
psubsb
loop
test
add
mov
aam
(bad)
je
xchg
dec
sbb
inc
xor
and
jle
sbb
mov
add
xchg
clc
sbb
(bad)
sub
fsubrp
push
lahf
and
imul
das
and
js
and
and
jle
sbb
or
jo
cs
test
repnz
cmp
mov
out
shl
out
pusha
cmp
jno
rcl
jg
dec
sar
ja
xchg
xchg
or
pop
inc
push
loopne
dec
stos
out
outs
cmp
pop
pop
je
sbb
jle
push
xor
jge
movs
ror
(bad)
jno
inc
push
or
mov
js
ret
xlat
mov
pop
bnd
lds
sbb
xlat
aad
push
or
or
jmp
add
xlat
cdq
inc
mov
(bad)
xchg
rcr
and
pop
cmp
call
scas
call
pop
imul
mov
push
lahf
pop
mov
das
adc
shr
fs
mov
mov
add
inc
pop
ins
mov
mov
mov
ret
jo
adc
add
mov
inc
pop
lods
jmp
or
push
mov
xchg
sbb
into
sub
cmp
ret
leave
pop
cwde
js
je
retf
fst
cld
(bad)
outs
rcr
jmp
in
pop
xor
fisubr
xor
rcl
mov
push
pop
sub
sub
cmp
xchg
push
jmp
ja
int
push
call
push
sbb
xchg
cmp
lods
in
push
(bad)
popa
mov
out
push
mov
mov
mov
ss
xor
stos
mov
in
dec
pop
and
imul
loope
sub
ret
movs
inc
or
icebp
sbb
ret
or
dec
enter
rep
mov
sar
mov
xchg
pop
jnp
lea
sub
lods
mov
mov
sbb
leave
lea
cmp
pop
and
and
ss
jge
add
mov
cmps
pop
xor
mov
dec
cld
push
in
dec
out
push
fmul
dec
mov
outs
mov
push
shr
in
pop
and
adc
pop
outs
dec
pop
push
sub
arpl
ret
dec
dec
test
outs
and
(bad)
mov
stc
xlat
call
fimul
loope
jg
adc
adc
scas
mov
xchg
neg
fs
lods
outs
inc
inc
mov
add
test
push
stos
mov
outs
mov
(bad)
std
cli
push
nop
(bad)
call
jecxz
xor
pop
imul
sub
cmc
pop
and
push
ret
pop
and
add
mov
aas
sub
popf
mov
fcom
add
jge
cmp
fsubr
fisubr
shr
push
sub
rcr
adc
fdivr
movs
sar
stos
mov
or
inc
dec
fs
xchg
pop
adc
mov
leave
fs
cmps
sub
jle
sub
inc
mov
mov
jmp
and
mov
jl
setle
sar
mov
pop
in
mov
mov
std
push
jg
mov
lahf
jb
jno
jnp
pop
mov
dec
out
and
adc
xchg
sub
retf
arpl
sub
loopne
andps
(bad)
and
(bad)
test
lods
dec
xor
adc
hlt
or
mov
movs
or
push
shl
shl
xor
movs
push
dec
cdq
inc
jno
(bad)
mov
sahf
aam
cli
(bad)
movs
fisubr
xor
push
mov
or
out
mov
sbb
loop
fstp
cs
sbb
xor
into
xor
in
mov
mov
out
add
js
pop
add
repnz
fstp
mov
lods
je
stos
(bad)
jp
aam
cmc
dec
stos
movs
cmp
cmps
imul
test
jp
movs
sbb
popf
jnp
(bad)
dec
or
add
mov
sbb
out
test
shl
in
fadd
rcl
push
sti
pop
push
jg
or
adc
push
leave
sub
mov
fmul
ror
mov
mov
nop
repz
(bad)
push
call
test
dec
jcxz
in
jno
repz
jg
fistp
movs
adc
mov
daa
push
jecxz
cs
int
out
loop
cmps
das
(bad)
cmc
xor
pop
jbe
or
xchg
aaa
and
sbb
imul
stc
cmc
and
add
inc
out
xor
adc
loop
call
jge
adc
fdivr
out
sub
fwait
outs
dec
loopne
sbb
cmp
cmc
scas
cld
fwait
xor
mov
ret
enter
mov
xchg
cdq
fisttp
push
shr
int
and
mov
sbb
mov
dec
lods
ins
or
les
jp
test
pop
sahf
dec
outs
hlt
push
push
(bad)
js
(bad)
pop
xor
sbb
mov
cli
pusha
push
jp
cdq
jb
(bad)
lds
mov
cmc
inc
dec
mov
push
dec
jp
inc
ss
pushf
imul
adc
(bad)
push
loopne
mov
jmp
pop
jge
hlt
and
xchg
sub
dec
cmc
sbb
data16
shr
das
push
dec
ss
retf
shr
jne
push
fldenv
faddp
les
push
xor
aad
xlat
mov
xlat
xor
cs
inc
inc
pop
call
sbb
mov
retf
push
xchg
rcr
jne
jmp
push
shl
push
mov
sub
mov
scas
fsubr
xor
jl
sahf
adc
les
mov
cmp
imul
jge
aad
dec
movs
add
dec
retf
or
xlat
pop
test
mov
in
adc
mov
xchg
xor
push
add
jmp
cmp
shr
or
sub
pop
fwait
jl
sti
das
or
mov
fbstp
xor
je
mov
jl
cmp
in
or
sbb
pusha
out
mov
mov
cmps
rol
adc
fimul
(bad)
and
push
and
or
pop
aas
stc
rcl
cmp
xor
push
push
push
mov
in
mov
shr
imul
out
inc
pop
lock
jnp
mov
sbb
xor
test
fld
ror
dec
mov
rcl
pop
pop
cwde
push
int3
(bad)
pop
cmp
pop
push
xor
cmps
aad
pop
or
(bad)
ficom
hlt
or
aas
lods
ins
push
xchg
cli
xor
cdq
mov
mov
pop
mov
cdq
pushf
aam
mov
cmp
add
fidiv
inc
xor
(bad)
int3
adc
aad
sub
push
sbb
out
sub
xchg
call
mov
sub
pop
les
in
jmp
push
mov
rcl
daa
mov
sub
daa
cld
pop
jnp
jae
xchg
stos
data16
pop
inc
push
into
sti
ins
ja
fcmovnb
es
les
push
cmp
push
push
adc
adc
fldcw
test
jae
ror
push
pop
outs
in
cs
test
mov
mov
sbb
cmp
jmp
retf
mov
sbb
aaa
push
imul
mov
xchg
cmp
or
and
xchg
sbb
adc
or
lods
out
and
push
xor
repz
outs
(bad)
lock
dec
xor
mov
enter
mov
cmp
(bad)
test
xchg
test
or
int3
clc
lea
dec
jge
mov
dec
dec
sbb
sbb
(bad)
adc
xor
add
sbb
sub
inc
xchg
ins
gs
hlt
and
fdiv
inc
loope
jmp
ror
(bad)
lods
adc
addr16
xlat
aaa
(bad)
addr16
mul
jmp
ins
mov
cli
scas
pop
out
(bad)
repz
pushf
jle
jp
xor
imul
pop
xor
dec
loop
out
add
sbb
cmp
iret
pop
mov
imul
icebp
(bad)
(bad)
fsub
imul
add
cli
cmp
test
adc
sbb
adc
out
sbb
nop
arpl
push
mov
inc
cwde
fmul
dec
and
sub
cwde
dec
cmp
out
cmp
fstp
and
repz
scas
and
call
inc
dec
stc
movs
mov
add
add
mov
ja
stos
jle
mov
push
inc
fmul
and
push
cmps
mov
jnp
xor
(bad)
cmps
mov
lock
ss
fiadd
(bad)
popf
mov
xor
ins
ss
dec
in
add
rcl
loopne
jp
mov
or
inc
xchg
sub
xor
lock
ret
in
push
out
das
cs
jl
ja
cmp
and
fimul
cmc
or
adc
sub
dec
inc
inc
es
push
mov
cmp
xchg
fild
fdivr
or
ja
pushf
xor
fadd
push
mov
ja
addr16
(bad)
push
or
pop
(bad)
sahf
sahf
das
movs
and
sbb
clc
sbb
hlt
lahf
jne
test
inc
test
leave
or
cmp
cdq
mov
push
ja
pop
hlt
and
cld
shr
rol
inc
jmp
scas
nop
call
lahf
xchg
xchg
mov
sub
stos
int
popa
dec
push
cmc
fisttp
arpl
popa
jns
xchg
clc
lods
ins
stos
adc
or
dec
fisubr
neg
adc
gs
icebp
push
lea
sub
mov
jmp
push
mov
(bad)
push
dec
mov
nop
or
fmul
in
lock
push
cmps
mov
lods
push
adc
jecxz
mov
jmp
ins
cmps
mov
mov
test
cld
ror
imul
repz
into
mov
pop
mov
pop
daa
sub
sub
movs
jecxz
test
mov
or
neg
sub
test
data16
es
jo
jge
out
add
sub
adc
pop
mov
xchg
bound
cmps
add
(bad)
loope
test
(bad)
adc
xlat
jl
pushf
inc
popa
test
(bad)
mov
ins
nop
and
cmp
xchg
(bad)
sahf
and
mov
nop
push
ret
mov
push
add
out
shl
adc
mov
cld
mov
dec
cld
in
nop
inc
add
xor
repz
test
lods
mov
mov
movs
mov
mov
div
imul
nop
adc
scas
test
test
(bad)
xchg
dec
mov
std
mov
imul
cli
mov
(bad)
ret
je
jle
mov
adc
and
mov
mov
lods
jae
nop
or
out
or
movs
rep
and
mov
adc
hlt
cmp
push
movs
sti
or
out
int
test
pop
ret
ds
loope
aam
repz
mov
test
pop
popf
push
cmp
adc
mov
ffreep
and
fnstsw
les
call
or
mul
push
out
pop
pop
sbb
or
add
xchg
mov
loopne
inc
mov
mov
nop
pop
or
aam
add
inc
inc
pop
push
cmp
or
and
shr
sub
dec
adc
dec
ror
ds
fidivr
loope
cmps
fs
test
add
adc
adc
pop
mov
cwde
fsubr
cmc
test
mov
test
psrad
scas
cmc
push
pushf
pop
lods
outs
cmp
ins
pushf
cmp
sbb
int
ins
mov
idiv
loopne
(bad)
xchg
xor
pop
sub
int3
jge
pop
ret
dec
stc
push
inc
pop
fnsave
in
adc
mov
xor
add
js
fnstcw
call
pop
pop
imul
mov
pop
fidiv
iret
bound
ja
pop
lock
lea
cli
mov
fild
add
into
shl
cli
test
jge
sbb
and
dec
add
addr16
lds
pop
enter
xlat
stos
mov
xchg
(bad)
adc
xor
and
dec
inc
jle
repz
js
pop
movs
xchg
mov
in
movs
cmp
sahf
mov
push
mov
xchg
or
and
and
(bad)
gs
fs
imul
xchg
jo
std
stc
pop
add
ja
int3
and
jbe
test
loopne
cmps
out
addr16
mov
sar
inc
ret
add
mov
mov
scas
pusha
pop
js
sbb
push
inc
mov
dec
retf
popf
mov
xchg
add
adc
mov
mov
out
scas
xchg
xchg
iret
cmp
adc
xchg
mov
call
repnz
push
push
in
push
fisttp
mov
fstp
dec
push
mov
stos
lahf
(bad)
leave
ins
cmp
out
push
ror
add
pushf
cld
into
shr
xchg
out
sub
sub
push
sub
inc
sti
pop
fidivr
xchg
jl
inc
repz
pop
push
fst
pop
mov
fld
stc
cmp
out
mov
add
inc
mov
push
xor
ds
fwait
lods
push
sar
jns
out
leave
add
jns
das
out
and
movs
dec
add
xchg
int3
mov
push
pop
add
or
fisttp
lods
xor
push
xchg
pop
add
retf
sbb
add
add
push
jle
push
add
jmp
mov
cmp
push
retf
aaa
movs
xor
lods
pop
push
fidiv
inc
js
sbb
fsubr
xchg
cld
push
jp
pop
xchg
scas
in
jp
pop
loopne
jge
xchg
test
adc
cmps
cmps
call
aas
mov
push
int
pop
adc
arpl
push
out
ret
pop
ins
(bad)
mov
push
lods
xchg
outs
and
ds
inc
nop
mov
xchg
inc
repz
jg
outs
lea
nop
enter
call
or
mov
loope
mov
out
push
jl
out
ja
or
test
push
add
hlt
outs
addr16
fiadd
and
mov
xchg
mov
enter
mov
dec
mov
jnp
imul
adc
imul
adc
mov
jns
mov
pop
cmp
and
ror
add
je
daa
popf
cmp
jp
xchg
jg
pop
jecxz
dec
ret
push
ds
cmp
icebp
sub
ds
inc
sbb
gs
outs
mov
hlt
sub
pop
shr
out
xor
add
mov
cdq
ja
pusha
pop
js
movs
rol
pop
cmc
into
rol
out
dec
loope
call
imul
mov
mov
or
jle
xchg
cmps
rcr
popf
bound
xchg
fcmove
test
iret
ins
sbb
retf
retf
sub
popf
and
lahf
jae
mov
mov
int3
nop
inc
cwde
inc
xchg
inc
adc
daa
push
into
retf
jb
mov
xchg
xchg
mov
sbb
xor
in
sbb
(bad)
pop
ret
outs
sbb
movs
push
clc
xor
fidivr
imul
das
inc
sub
(bad)
and
cmp
loopne
nop
adc
sti
stos
out
adc
leave
(bad)
xchg
push
and
js
add
int3
mov
cwde
dec
ins
and
data16
dec
jno
jmp
ret
mov
(bad)
aaa
stos
test
es
mov
shr
cmp
into
aaa
pop
in
or
sub
mov
dec
jns
mov
mov
xchg
inc
and
in
movs
sahf
clc
icebp
lds
pop
stos
inc
jmp
jl
test
mov
mov
jae
mov
arpl
xchg
fstp
in
cmps
mov
sar
xchg
stos
imul
dec
push
and
fucom
mov
mov
pushf
mov
mov
mov
out
cmp
add
call
pop
(bad)
fucomi
mov
loopne
xor
or
stc
ret
jp
leave
in
adc
out
lock
push
in
mov
sub
add
mov
and
sub
movs
dec
xchg
loopne
iret
inc
lea
add
addr16
mov
es
movs
push
sar
cmc
int3
sub
jg
(bad)
out
jmp
(bad)
xchg
enter
arpl
int3
test
outs
mov
lods
test
jae
pop
test
lods
xlat
fsub
std
cmp
retf
jmp
mov
adc
push
data16
dec
mul
in
inc
int
les
jecxz
inc
rcr
cmps
dec
sbb
cmp
add
inc
lock
pop
adc
jle
or
sub
pop
in
sbb
outs
mov
ret
hlt
jg
(bad)
cmp
dec
add
or
nop
inc
jg
not
push
push
push
out
bound
popa
(bad)
cmp
push
pop
imul
dec
hlt
xchg
test
jae
add
(bad)
movs
int
arpl
mov
mov
and
shr
jmp
out
and
adc
and
call
adc
mov
push
ins
cdq
js
sub
jbe
cmp
push
fwait
jnp
pop
cmc
paddusb
sbb
jae
xchg
shr
mov
lock
and
jnp
iret
je
movs
mov
nop
enter
icebp
jmp
test
adc
xchg
(bad)
iret
icebp
cmp
adc
add
xor
ficom
(bad)
pop
iret
adc
mov
jl
rcl
ret
lods
test
mov
es
(bad)
dec
cmp
es
shl
push
mov
call
sti
mov
jnp
lods
inc
js
mov
mov
adc
leave
(bad)
in
imul
jns
mov
jmp
push
retf
jmp
sbb
jge
mov
imul
sbb
mov
in
push
inc
(bad)
push
add
add
jae
das
and
cmp
sbb
push
inc
lock
(bad)
sti
pusha
cmp
and
mov
xor
loope
jno
repnz
pop
sub
and
cmp
fild
(bad)
mov
jecxz
shl
jg
inc
aaa
ins
sbb
clc
jnp
inc
push
dec
or
lea
mov
ror
mov
xchg
pop
test
jbe
lea
movs
adc
(bad)
pop
aaa
in
lea
dec
mov
cmps
pop
push
mov
xor
mov
rcl
mov
popf
mov
stc
pushf
add
inc
add
imul
bound
fidiv
mov
out
ret
nop
add
arpl
out
adc
mov
iret
dec
xor
push
adc
dec
div
dec
test
jae
adc
mov
sub
iret
lea
ja
push
rcl
cmp
mov
cdq
or
in
fwait
jne
add
push
dec
or
pushf
push
adc
inc
adc
in
mov
sbb
fwait
xor
mov
xchg
rol
sub
dec
aaa
fld
pop
push
inc
inc
xor
dec
cmp
fild
add
rol
push
cs
sub
sbb
sti
rdmsr
or
int
invd
push
cmp
sbb
ja
xchg
push
mov
cdq
pop
sub
xor
mov
(bad)
and
bound
jno
sbb
aas
adc
in
scas
mov
fsubr
jnp
pushf
xchg
mov
iret
test
cmp
add
retf
xor
push
nop
popa
aam
push
jmp
adc
xor
adc
imul
xor
mov
js
ja
jns
imul
sbb
ins
mov
fadd
mov
sbb
pop
scas
call
gs
fild
addr16
call
and
inc
retf
psubsw
popa
push
push
inc
jmp
das
ins
sub
inc
jmp
dec
adc
test
dec
pop
adc
pop
shl
out
int
outs
in
adc
enter
das
fwait
lahf
mov
jge
and
and
fild
mov
pop
pop
pop
jecxz
xchg
mov
aaa
in
sar
imul
ret
pop
test
mov
cld
add
add
ja
bnd
cmp
cli
retf
inc
mov
xchg
fisttp
inc
sub
rcl
mov
inc
mov
(bad)
sub
or
ins
(bad)
int
mov
sub
xchg
fcom
sbb
sti
cmps
ins
push
outs
jmp
loope
xchg
imul
xchg
ds
add
popf
mov
(bad)
test
sar
sahf
push
adc
sahf
cdq
pop
add
or
shl
adc
pop
pop
mov
or
(bad)
cmp
std
or
std
sbb
cmps
xchg
ds
movs
adc
rcr
(bad)
lods
adc
inc
inc
(bad)
retf
mov
push
push
int
xor
test
in
xchg
ficomp
in
out
xor
adc
(bad)
sbb
(bad)
jmp
(bad)
and
adc
popa
fnstenv
adc
jno
test
fsubr
addr16
cmp
or
xchg
xchg
stos
std
sub
(bad)
loopne
or
cmp
cmc
test
enter
fld1
(bad)
pop
jecxz
int3
xchg
and
loope
dec
stos
sbb
out
fadd
pop
mov
sbb
into
xchg
inc
fnsave
inc
pop
xor
jmp
(bad)
mov
mov
adc
jg
cs
test
mov
lods
retf
call
(bad)
or
sub
sbb
jnp
mov
xor
dec
stos
cmovge
jb
cmps
xchg
fild
pusha
icebp
push
punpcklwd
jno
xchg
outs
test
inc
scas
std
stos
shl
hlt
js
cmp
xchg
into
stos
popa
js
xlat
(bad)
aaa
dec
or
add
enter
cmp
push
out
retf
pop
mov
xor
add
out
or
or
test
dec
dec
push
(bad)
xor
cmp
push
inc
in
es
ret
xchg
inc
mov
outs
test
dec
xchg
out
repnz
xchg
(bad)
fisubr
push
loopne
cwde
mov
pop
mov
mov
nop
adc
jmp
jecxz
cmp
jmp
mov
dec
push
outs
pop
pop
or
add
add
lods
cmp
cdq
push
inc
into
cs
(bad)
sbb
fisub
and
inc
pop
(bad)
stos
xchg
popa
inc
neg
xlat
scas
xlat
mov
out
test
pop
jmp
mov
lods
xchg
xchg
push
lock
sub
sub
fist
imul
test
lods
call
mov
dec
sub
rol
cmp
lods
imul
jne
mov
ret
enter
xchg
and
lds
inc
je
popf
sbb
pop
fiadd
ret
rcr
inc
call
xchg
repz
dec
cmp
jle
arpl
cmp
aam
xor
popf
push
inc
mov
fwait
dec
mov
ror
hlt
sbb
sub
dec
or
inc
inc
mov
jecxz
xor
pushf
or
xor
ins
stos
sbb
xor
iret
mov
gs
push
ins
pop
adc
mov
mov
mov
mov
adc
(bad)
cmps
adc
push
es
jmp
and
mov
icebp
aad
cmp
out
sub
or
mov
stos
sti
aad
sub
jb
cwde
mov
jae
add
jno
inc
xchg
pop
hlt
loopne
stc
aam
test
push
fist
add
scas
enter
ds
repz
mov
dec
idiv
or
scas
test
inc
ret
nop
xlat
rcl
ret
add
call
jmp
sub
arpl
clc
mov
fcmovnb
push
cmp
dec
dec
and
out
je
jo
add
push
(bad)
pop
xchg
pop
adc
add
inc
mov
fnstcw
sbb
loopne
mov
sbb
push
imul
js
mov
xchg
dec
stc
aam
sub
daa
in
sub
(bad)
mov
xchg
pop
and
in
push
shl
jo
jle
outs
push
aam
sub
inc
adc
xchg
sub
dec
sbb
dec
push
fs
shl
mov
(bad)
movs
test
pop
sbb
dec
xchg
rcr
mov
call
push
mov
mov
mov
ror
ds
and
push
iret
daa
add
dec
inc
mov
mov
out
test
cvtps2pi
xchg
(bad)
adc
push
jo
or
inc
stos
mov
pop
pop
div
adc
pop
adc
jmp
fmul
stos
pop
add
push
out
sar
mov
test
push
inc
or
rol
das
lods
adc
cs
adc
test
xor
ror
(bad)
pop
imul
cdq
inc
cmp
mov
push
sub
(bad)
adc
inc
popf
pop
shl
mov
cmp
cmps
xor
xchg
or
iret
mov
call
pop
(bad)
lock
stos
xchg
xchg
jmp
ret
jp
sub
adc
out
inc
test
jg
ret
cmp
cmp
aaa
push
cmp
sbb
jle
mov
std
xlat
(bad)
sbb
sub
outs
or
in
add
je
mov
leave
xor
xor
rol
loope
xor
push
data16
mov
sbb
adc
and
adc
adc
sbb
ins
mov
push
in
(bad)
hlt
xor
and
jbe
mov
pop
mov
les
jmp
(bad)
outs
or
idiv
sahf
dec
push
inc
pop
push
adc
leave
in
cmp
pop
add
test
jb
sub
sbb
dec
mov
out
mov
fisttp
xchg
pop
addr16
jnp
mov
hlt
popa
jl
cmp
(bad)
cmp
cmps
out
xchg
or
xchg
xchg
add
sub
adc
push
mov
(bad)
(bad)
outs
push
retf
push
std
loopne
repz
dec
pop
pusha
or
rol
fdiv
arpl
xchg
gs
add
jge
lods
scas
dec
adc
jno
push
outs
scas
dec
sbb
fwait
clc
inc
aas
dec
sti
cmp
pop
cmp
cdq
je
test
imul
fstp
sahf
icebp
test
add
jne
push
add
or
inc
jae
dec
popa
in
xchg
test
in
mov
push
jo
test
push
or
loopne
xor
ret
jg
test
push
adc
pop
aam
dec
mov
ins
shl
test
outs
aaa
fnstcw
pop
add
or
pop
mov
adc
idiv
fst
fadd
push
dec
inc
icebp
inc
dec
sbb
retf
cmps
aaa
dec
push
sbb
div
popf
mov
cmp
xlat
sbb
sti
data16
push
lea
jge
test
mov
ss
inc
hlt
mov
dec
jo
mov
(bad)
xchg
imul
pop
mov
gs
std
jns
retf
push
addr16
adc
or
lods
pusha
sub
mov
xor
and
pop
or
ja
sbb
test
movs
iret
add
push
daa
movq
jnp
outs
fld
aas
inc
sub
mov
fist
inc
xor
inc
sahf
les
js
arpl
addr16
xchg
popa
mov
dec
repz
sbb
das
mov
dec
repnz
mov
mov
pusha
jl
mov
push
mov
push
mov
jae
aam
inc
push
cmp
mov
test
jmp
cmp
jp
sbb
stc
je
fs
mov
sub
push
ins
shl
std
mov
dec
rcl
cmps
sbb
in
mov
aad
leave
cwde
pop
ret
mov
push
div
mov
jp
push
adc
jle
nop
fnstenv
dec
add
mov
and
call
idiv
fstp
cmp
mov
es
scas
adc
inc
and
cli
dec
add
mov
dec
and
mov
fs
call
lock
push
dec
or
(bad)
enter
ja
div
mov
xor
in
jns
ins
call
sbb
cmc
and
(bad)
cmp
daa
push
mov
jecxz
inc
adc
dec
mov
push
jo
in
pop
cld
iret
aam
add
add
repz
ror
mov
xchg
out
mov
push
and
xchg
gs
out
(bad)
into
mov
sub
pop
fs
aaa
or
sti
push
stc
add
add
inc
(bad)
xor
ds
or
jne
jmp
jnp
fisttp
add
iret
sub
sub
jns
aam
mov
ret
movs
jb
adc
fmul
enter
or
and
pop
pop
mov
push
mov
or
loope
inc
icebp
ror
mov
lods
aas
out
push
and
aas
fwait
(bad)
jp
je
(bad)
paddusb
ret
repz
ret
jbe
(bad)
jle
fisubr
cwde
in
inc
(bad)
rcr
lods
jecxz
mov
xor
pop
sbb
sub
movs
comiss
add
cwde
rep
test
xor
cmp
push
cwde
mov
aam
(bad)
mov
js
ret
scas
xchg
xchg
sahf
cld
sub
sbb
into
popa
ds
into
in
into
adc
dec
or
mov
push
jo
jmp
retf
mov
call
sar
mov
xor
ja
xor
cmp
aaa
fs
jp
adc
jno
xlat
sub
push
inc
aas
nop
push
js
jnp
sub
pop
lahf
and
adc
mov
push
dec
inc
push
xchg
shr
retf
jae
adc
loopne
stc
stos
pop
punpcklbw
pop
outs
or
inc
push
in
jmp
aas
mov
sub
int3
xchg
push
jbe
push
sbb
aad
call
jmp
sti
inc
xchg
out
cwde
adc
stos
pop
movsx
or
fwait
movs
adc
test
and
add
ror
inc
sub
cwde
in
aad
hlt
jmp
movs
hlt
pop
add
shl
xor
addr16
jae
comiss
retf
push
ins
in
in
rcr
test
out
dec
push
(bad)
js
mov
push
pop
add
add
and
rcl
out
ret
adc
in
mov
loopne
dec
dec
aas
pusha
shl
fwait
lock
mov
aas
int3
std
push
adc
and
and
aaa
xor
scas
popf
inc
sbb
das
cli
push
cmp
inc
fimul
neg
pop
pop
addr16
jmp
into
inc
push
inc
dec
sbb
dec
xchg
sub
iret
dec
int
repz
and
cli
les
ror
inc
popa
dec
mov
sub
test
mov
inc
jge
jne
iret
ja
dec
cmp
mov
test
push
nop
jle
clc
idiv
cmps
mov
or
xor
dec
cli
fs
dec
test
pop
cmc
jbe
push
out
outs
add
cmp
fdiv
cdq
imul
test
rol
pop
mov
fsubr
or
aam
and
pop
ret
add
lfs
push
xchg
and
inc
dec
push
sbb
add
mov
iret
gs
cs
mov
in
scas
sub
sbb
mov
cmp
sar
sbb
std
mov
or
je
push
mov
jge
movs
nop
adc
lea
test
data16
repnz
mov
out
test
sbb
repnz
or
cmps
das
aad
adc
out
aad
pop
ins
pop
retf
mov
mov
pop
pop
sub
arpl
mov
mov
mov
outs
xchg
test
cld
aad
cmp
and
clc
stc
and
push
cs
(bad)
nop
scas
mov
ins
pusha
adc
jp
sub
ret
repnz
push
and
jb
mov
adc
ret
sti
not
aad
jmp
cmp
fldcw
fstp
cmp
and
mov
mov
mov
popf
inc
sbb
mov
ror
inc
add
dec
ja
arpl
jo
pop
adc
ins
jmp
sti
daa
jo
and
mov
pop
cs
in
inc
call
rol
jmp
(bad)
mov
fld
fdiv
add
jae
fistp
push
cmps
add
mov
mov
inc
ds
or
out
jae
popf
(bad)
pop
cmp
or
pop
mov
rol
pop
movs
push
pusha
les
mov
sub
retf
and
xchg
adc
fsubr
sub
fidiv
jo
movs
add
cld
ret
or
and
sub
or
push
ficomp
dec
out
jle
bnd
mov
in
fwait
rcr
mov
or
test
mov
pop
movs
stos
or
arpl
fwait
jae
cmp
lock
gs
pop
add
jae
cli
hlt
outs
and
aam
pop
ss
pop
gs
rol
xchg
sti
push
out
lods
ret
inc
cmc
sbb
or
add
outs
les
push
push
mov
cmp
cmp
mov
sbb
ins
inc
std
sbb
push
jmp
xchg
mov
add
ins
xlat
mov
(bad)
clc
daa
out
leave
push
inc
out
(bad)
sub
cwde
int3
sub
fisub
fst
pusha
jl
(bad)
jg
in
mov
int3
or
sub
mov
cs
out
cld
out
dec
add
mov
jecxz
es
mov
xchg
arpl
cmp
mov
push
jecxz
pop
sbb
out
in
cmp
mov
pop
rcl
into
fcom
icebp
pop
sar
addr16
add
stos
inc
dec
xchg
lea
jmp
inc
cli
inc
fcomip
cwde
mov
scas
imul
mov
add
fbld
pop
adc
data16
retf
push
idiv
sub
fucomi
hlt
jno
shl
dec
fnstenv
inc
push
ret
add
push
mov
pop
lock
fdivr
push
lea
push
test
jb
call
inc
aam
out
cmp
ror
lds
push
outs
aas
fistp
and
call
(bad)
cmps
std
push
jmp
mov
jbe
add
inc
jp
or
push
dec
mov
aam
pushf
sub
or
lahf
inc
das
mov
mov
imul
and
mov
inc
div
lea
pop
mov
je
or
test
(bad)
mov
or
in
cld
bound
in
xor
sub
pop
je
ror
mov
outs
sub
mov
sub
add
aam
call
mov
es
sar
push
repnz
or
aas
movs
add
inc
mov
addr16
pushf
adc
js
loopne
cmc
clc
imul
icebp
push
pop
or
iret
stos
fs
arpl
inc
mov
mov
xchg
mov
jb
or
xor
nop
retf
or
xchg
mov
outs
jecxz
dec
idiv
or
loope
xor
movs
fwait
retf
cmps
cdq
retf
adc
mov
push
push
push
jge
adc
push
sub
push
and
mov
inc
cmp
inc
pusha
or
fiadd
dec
pop
enter
or
mov
mov
out
retf
inc
lea
das
xchg
scas
test
(bad)
fndisi(8087
xchg
int
mov
imul
push
xor
cli
fbstp
pop
stc
iret
and
(bad)
(bad)
(bad)
push
(bad)
ins
popf
scas
gs
nop
les
(bad)
cmp
push
mov
(bad)
xor
rcl
sub
cli
test
gs
int
add
push
fst
sbb
mov
adc
enter
idiv
and
jns
pushf
xlat
mov
scas
xor
push
inc
movs
fwait
int3
mov
shl
lahf
daa
(bad)
cs
das
fucomp
mov
push
push
fisttp
lods
sbb
adc
pop
jmp
out
xchg
aam
imul
das
mov
out
or
add
or
out
jmp
adc
push
cmp
jecxz
cwde
je
movs
cvttps2pi
mov
(bad)
sbb
arpl
jno
xchg
xchg
sbb
dec
xchg
or
out
leave
lods
pusha
ja
mov
arpl
inc
cmp
adc
xchg
jmp
pslld
inc
repnz
mov
sub
xchg
retf
mov
add
inc
ffree
sub
popa
ss
stos
dec
rcl
fiadd
clc
add
sub
repz
mov
push
sub
pop
inc
xor
stos
imul
shr
ins
mov
pop
test
call
cmps
add
ficom
sub
mov
add
pusha
fidivr
or
outs
not
jnp
sub
out
and
(bad)
das
test
cmp
clc
xchg
je
(bad)
stos
pop
push
xor
mov
inc
push
mov
xlat
retf
inc
dec
sbb
or
aam
jl
push
add
sbb
arpl
retf
cmp
dec
inc
test
jmp
(bad)
and
pop
mov
pop
xlat
add
pop
sbb
xor
push
adc
je
jae
push
mov
fs
sbb
adc
push
sub
loopne
movs
in
dec
lods
or
loopne
mov
or
les
mov
scas
xchg
stos
jbe
hlt
mov
out
lock
push
push
dec
adc
jle
xchg
adc
ja
inc
dec
stos
jno
ror
xor
and
not
test
mov
ror
sub
xchg
push
xor
adc
mov
out
retf
test
scas
mov
repnz
mov
dec
push
and
mov
inc
enter
push
dec
pop
(bad)
sahf
dec
inc
test
rcr
adc
mov
xor
inc
(bad)
xchg
push
push
dec
ins
push
js
and
jmp
ja
push
inc
inc
adc
mov
icebp
xor
xchg
mov
sub
inc
mov
(bad)
cli
sub
lods
xchg
sub
stos
and
xlat
mov
pop
adc
add
jo
pop
psubusb
cli
fmul
xchg
cdq
push
sbb
nop
mov
ret
(bad)
mov
das
popa
pop
or
mov
inc
pop
jge
cmc
mov
push
imul
jge
sub
xchg
loope
outs
pop
std
dec
xchg
xchg
mov
mov
jbe
sub
fadd
pusha
inc
jo
stos
adc
les
fdiv
xchg
push
sub
xchg
test
rol
pop
mov
jne
stc
pop
xor
imul
and
aaa
xor
xchg
inc
mov
loope
in
xor
xor
sub
movs
jmp
stos
jg
inc
cmps
outs
xor
push
stos
pushf
xchg
arpl
fcmovnb
push
jmp
pusha
cli
repz
(bad)
std
pop
jle
inc
cmps
jp
mov
dec
jns
inc
inc
pop
in
enter
inc
jl
push
jmp
icebp
push
ss
cld
shl
jae
and
out
popf
sub
and
and
adc
das
and
mov
in
ret
sahf
mov
pop
mov
sub
mov
sub
inc
and
sar
addr16
(bad)
sti
push
ror
imul
or
cdq
jnp
aam
jne
mov
outs
sahf
push
fmul
xor
or
je
xchg
cmc
sub
pop
cld
sar
into
sbb
je
leave
pusha
imul
lds
jae
inc
je
jb
scas
loop
adc
dec
sbb
cld
out
ucomiss
fs
data16
mov
out
mov
mov
lods
cmp
mov
aas
and
inc
mov
xchg
jg
hlt
mov
cmp
fwait
or
pop
movs
lea
mov
fisttp
(bad)
mov
mov
and
mov
vpunpcklbw
data16
push
fld
or
addr16
jge
pop
xchg
loopne
ss
sub
mov
and
push
sbb
add
test
adc
xchg
inc
sbb
or
nop
push
aam
hlt
cli
(bad)
(bad)
jmp
add
inc
jbe
add
cmps
mov
add
add
bnd
adc
mov
in
or
arpl
pop
shl
int3
sub
mov
test
call
xor
movs
xchg
retf
loope
mov
je
in
pusha
es
fnstenv
inc
xor
int3
(bad)
out
in
stos
sbb
cmc
mov
adc
mov
mov
mov
in
pop
les
add
aaa
push
cmp
push
inc
and
iret
retf
pop
xchg
call
into
xor
push
cmc
stos
out
stos
jmp
sbb
pop
jle
pop
cmps
mov
push
das
jmp
ss
fistp
push
(bad)
mov
mov
inc
ret
cmps
cmps
les
jp
hlt
cmp
mov
sub
xor
test
xor
pop
rcl
sub
mov
je
pop
pop
mov
xchg
xor
mov
inc
(bad)
cmp
sbb
gs
aas
pushf
mov
loopne
retf
mov
dec
xchg
clc
daa
or
xchg
fmul
iret
or
aas
sbb
dec
cld
jg
cmp
mov
sbb
and
xlat
jo
fmul
xchg
ds
fs
scas
sti
add
xchg
aad
or
stos
jnp
sbb
jp
mov
test
ret
fild
xchg
sub
outs
mov
fild
inc
xor
mul
loope
lods
dec
jmp
push
les
out
inc
inc
inc
dec
mov
fidivr
mov
imul
mov
das
cld
stos
mov
popa
ja
sub
pop
popa
jns
scas
ficom
std
inc
lods
mov
add
push
adc
adc
xor
sub
mov
hlt
xchg
mov
scas
repz
mov
ret
enter
xchg
ret
outs
popf
xlat
(bad)
lahf
dec
jns
pop
cmp
ror
ins
jg
mov
dec
jns
call
push
sbb
sub
sbb
dec
int3
add
arpl
cli
dec
stc
popa
out
pop
pop
jmp
(bad)
das
popa
or
and
sbb
adc
push
and
outs
(bad)
mov
adc
xchg
cld
mov
sub
push
sbb
mov
enter
(bad)
or
mov
shl
push
into
mov
sbb
xchg
cli
test
add
je
cmp
fcmovb
dec
mov
jb
mov
cmp
fcom
ds
add
scas
lods
dec
add
dec
dec
adc
xchg
aas
sahf
xchg
or
add
xchg
cmp
add
xchg
adc
stos
or
push
cdq
cld
retf
ror
mov
xor
push
test
outs
jne
aas
js
test
jns
fidiv
pop
inc
or
leave
call
push
jmp
lock
sub
dec
adc
and
adc
mov
xor
iret
enter
jg
out
inc
push
cld
jle
adc
out
int3
icebp
adc
pop
sub
(bad)
lds
out
clc
or
jecxz
sahf
stos
add
xchg
gs
sub
cs
and
and
sar
test
aaa
aad
dec
cwde
sub
xor
out
pop
mov
int
aam
out
out
repz
out
or
rcl
push
add
pop
pop
jo
xchg
mov
cmp
adc
jns
fadd
imul
mov
enter
lds
mov
mov
cmp
sub
addr16
or
leave
pop
ins
js
mov
test
push
mov
mov
push
or
lods
xor
arpl
inc
xchg
add
dec
mov
pop
out
push
pushf
shl
aas
sti
jb
sti
push
(bad)
jmp
mov
pop
add
and
mov
pop
push
xchg
or
jle
cld
push
int3
mov
jp
push
int3
cmp
jns
clc
inc
ds
xor
ret
shl
retf
iret
repnz
and
sbb
and
mov
(bad)
retf
pop
popf
sti
cmp
int
and
cmc
les
or
ret
push
add
dec
dec
sbb
bound
rol
lahf
sbb
pop
movs
jecxz
fprem1
dec
fmul
push
cmps
lock
in
into
mov
mov
aad
inc
mov
cmps
pop
dec
jnp
retf
pop
jl
fmulp
mov
test
xchg
outs
popa
jbe
std
xchg
push
lds
and
adc
inc
sub
jmp
mov
inc
add
and
add
add
xor
mov
mov
and
into
adc
cmps
and
loopne
mov
jle
ins
test
or
mov
jb
xchg
stc
sbb
add
xchg
sub
xor
sbb
lock
sar
xchg
xor
add
sbb
xor
cmp
test
lods
and
adc
das
leave
cmp
pop
dec
ret
inc
or
std
cs
lods
call
xchg
test
sbb
sbb
loopne
enter
push
(bad)
sbb
sub
push
pop
ror
loope
clc
lds
lea
push
jne
mov
fisttp
jl
pop
outs
sar
pop
test
mov
push
mov
mov
dec
ret
sub
pushf
sub
mov
pop
and
jp
rol
out
xor
pop
cmp
(bad)
fidivr
ret
imul
scas
mov
cmp
sub
iret
sbb
mov
add
rcr
fdivr
xchg
mov
out
jb
(bad)
lods
and
pop
arpl
mov
mov
lds
cwde
mov
mov
mov
inc
je
(bad)
jmp
call
xchg
adc
ret
sub
jg
mov
(bad)
stos
retf
repz
sub
mov
sbb
loop
add
add
or
and
jle
rcr
jnp
sub
outs
aam
add
fst
inc
cmp
add
jns
sbb
jecxz
cmp
cli
sub
push
jmp
xchg
movs
ficom
mov
sbb
dec
cmp
pop
cmp
push
pop
out
and
push
mov
jb
sbb
sub
repnz
or
xor
test
stos
and
push
aaa
inc
mov
shl
adc
(bad)
mov
scas
or
bsf
or
push
mov
dec
pop
add
arpl
dec
ror
lock
int3
mov
or
mov
stos
jle
std
hlt
push
adc
hlt
out
arpl
adc
jg
fdivr
or
hlt
rcr
mov
fmul
inc
test
or
mov
push
mov
lea
mov
mov
fadd
jnp
arpl
add
(bad)
out
inc
retf
rcr
shl
or
and
cli
dec
xchg
pop
mov
es
repz
add
cmps
and
push
jmp
adc
int
push
xor
mov
outs
add
xchg
dec
xor
outs
pusha
rcl
scas
adc
dec
cmp
and
pop
nop
xchg
das
pop
and
aaa
or
icebp
cmc
out
inc
jns
lahf
mov
jmp
cmp
xor
adc
and
cmps
movs
inc
sbb
in
jge
cmp
pop
mov
stos
mov
arpl
cmp
inc
push
scas
addr16
push
xchg
inc
call
mov
je
lock
sahf
sub
sub
imul
dec
jbe
ds
dec
pop
xchg
pop
xchg
aas
popf
test
xchg
aad
mov
add
sub
adc
daa
mov
mov
rol
out
sbb
pusha
retf
jb
stos
(bad)
popf
in
push
and
jno
cld
fs
(bad)
jg
jae
cmp
ret
dec
call
loop
ss
lods
lock
xor
addr16
cld
outs
mov
and
imul
xchg
loope
push
xchg
rcr
mov
fcomp
mov
or
cmc
push
jle
jb
add
scas
les
out
retf
mov
jecxz
ins
rol
sub
aam
inc
loop
jne
not
dec
sub
push
and
sti
dec
cmp
lea
into
outs
mov
add
ins
pop
jae
fwait
popa
adc
inc
loop
sahf
fadd
mov
pop
mov
sub
mov
cmp
out
cs
sub
shl
sub
das
xchg
jp
adc
xor
in
pop
js
popf
push
(bad)
out
popf
cmp
xchg
sub
mov
out
into
push
aaa
daa
xor
inc
pop
ds
je
clc
add
call
jno
(bad)
in
push
fadd
cld
or
ficom
jno
test
xor
daa
inc
dec
outs
fsubr
(bad)
add
je
outs
fidivr
ret
cmp
cld
pop
imul
pop
sbb
into
xor
lahf
push
xor
in
add
scas
mov
sbb
loop
mov
sub
and
cld
sti
add
xor
movs
xchg
mov
test
rol
xchg
dec
add
xchg
(bad)
ja
(bad)
sahf
pushf
aad
into
pop
out
fidivr
dec
pop
and
test
mov
pop
stos
mov
jg
xchg
sbb
inc
imul
push
mov
adc
dec
(bad)
ror
push
je
adc
add
jecxz
xchg
xchg
aaa
cmp
das
test
pop
cli
fsub
sbb
push
add
imul
popa
jl
stos
lods
jbe
add
test
jno
inc
(bad)
int
aaa
and
dec
fadd
cmp
retf
sar
xor
jp
jo
mov
in
loopne
daa
test
imul
jno
or
mov
xchg
jnp
sub
cmp
arpl
loopne
int3
inc
mov
scas
push
jnp
mov
imul
out
js
xchg
jge
mov
dec
or
xor
cmps
clc
js
xchg
cmp
pop
adc
add
jle
cli
sub
sub
xchg
scas
xor
adc
mov
cmp
popa
out
cwde
data16
shl
sbb
mov
mov
cmps
das
or
ret
and
cmp
cwde
das
mov
add
cs
div
sbb
imul
cmc
pop
push
rcl
sbb
cmp
test
mov
shl
or
ins
scas
mov
xor
cwde
mov
sti
enter
fs
sbb
leave
cmp
and
pop
or
out
fisub
mov
lahf
pop
sbb
inc
pushf
stos
pop
loop
das
push
in
call
in
loopne
nop
(bad)
lds
call
add
iret
test
or
(bad)
ins
iret
jg
cmp
outs
mov
repz
mov
mov
sub
adc
ins
mov
sar
pop
xor
jge
cld
imul
or
shr
shr
pop
cmps
leave
arpl
mov
add
push
not
sbb
ins
sub
mov
out
mov
mov
fild
jg
sub
pop
fmul
in
sub
in
jo
dec
aaa
scas
aad
aaa
and
mov
jecxz
(bad)
ds
sub
call
cdq
das
ror
int
mov
(bad)
mov
xor
fidiv
shl
in
adc
pop
shl
adc
push
and
sub
or
fsub
jb
ret
sbb
mov
es
movs
je
push
(bad)
lea
jae
add
lods
scas
retf
es
stos
xchg
jmp
pop
retf
cmp
loopne
out
cmps
addr16
sbb
outs
fcmove
imul
inc
adc
adc
les
mov
sub
stc
cmc
push
imul
inc
mov
push
frstor
add
aam
pop
out
retf
idiv
push
mov
pusha
jnp
movs
mov
cmps
lods
mov
pop
jmp
jmp
dec
ins
push
mov
or
adc
mov
clc
fs
mov
inc
or
scas
fs
stos
cmp
xor
rol
mov
fcomp
ins
jb
xchg
push
inc
lock
mov
mov
icebp
retf
pop
dec
fwait
pop
(bad)
xor
imul
ret
rcl
ss
pusha
es
mov
and
std
mov
sub
dec
push
push
sahf
stos
outs
sbb
or
shl
push
ins
mov
lods
cmp
mov
scas
pop
ret
mov
sub
mov
lods
or
popf
or
dec
pop
int3
add
xor
ret
xchg
adc
outs
ret
adc
int3
in
and
push
pusha
(bad)
jg
sbb
add
jge
inc
pop
test
mov
push
into
fdivr
xchg
int3
inc
aaa
cmp
sbb
cld
ja
or
push
in
xchg
scas
xor
push
lock
sub
mov
adc
push
bound
pop
and
mov
add
dec
cmps
in
inc
push
rcl
push
ror
(bad)
sti
cwde
dec
movs
(bad)
clc
fmul
pusha
dec
jge
mov
pushf
add
rol
xor
push
ret
xchg
inc
pop
cmps
(bad)
cmp
movs
pusha
test
mov
(bad)
dec
xchg
sbb
movs
cmp
mov
mov
cmps
jg
pop
das
or
popa
sti
out
cli
fs
jnp
xor
dec
loope
and
pop
mov
pop
loope
xor
ds
xchg
test
sar
mov
gs
jp
push
cmp
test
arpl
out
test
rcr
inc
mov
xabort
ror
mov
pop
cs
sbb
push
cmp
sub
xor
mov
neg
sbb
mov
test
fstp
jle
test
mov
out
fdiv
xchg
jo
mov
repnz
push
push
popa
add
ds
or
cmp
das
gs
ins
loopne
sahf
loope
es
or
inc
movs
push
mov
inc
jb
push
test
dec
gs
dec
sub
in
cli
test
cwde
add
retf
rol
jnp
mov
xchg
push
sbb
sar
aam
in
mov
jbe
scas
pop
pop
(bad)
sub
inc
sbb
outs
ds
psadbw
lock
cmp
ja
or
lods
and
loope
iret
mov
xor
sub
xor
in
fs
pop
jle
jmp
pushf
in
push
or
mov
sbb
mov
test
xor
ret
mov
push
mov
dec
into
cmc
and
lds
inc
xor
pop
or
test
ret
push
cdq
lahf
inc
loopne
imul
and
jne
and
cmp
test
daa
jmp
test
cmp
stc
fs
mov
scas
cmp
int3
fist
adc
jbe
xor
inc
enter
cmps
jg
lds
mov
mov
mov
xchg
loop
and
mov
push
and
daa
mov
mov
fstp
in
jmp
add
popf
sar
add
push
(bad)
test
jge
imul
fisubr
inc
xor
or
adc
and
pop
bound
cmp
mov
scas
push
dec
add
ret
lock
outs
sti
das
in
ret
aas
movs
and
sub
stos
psllq
push
jmp
pushf
mov
cmc
scas
jo
or
push
je
jl
lea
push
rol
scas
add
shl
xor
dec
pusha
push
bound
sub
inc
jmp
or
std
push
jae
ja
pusha
xor
cs
mov
mov
xchg
sub
mov
jl
and
clc
mov
(bad)
daa
pop
dec
xor
fcomip
bound
ror
int3
repnz
jns
mov
icebp
ficomp
rcl
mov
inc
jns
add
xchg
cmc
iret
retf
loopne
nop
cli
int
aaa
shr
and
gs
(bad)
pop
(bad)
imul
add
cwde
pop
loop
iret
das
in
jg
mov
stos
dec
jmp
or
jns
es
push
inc
and
xchg
pusha
aam
sar
dec
sbb
jbe
dec
popa
(bad)
cmp
adc
loop
mov
popa
jmp
xchg
mov
aaa
jmp
sahf
push
sbb
lea
loop
mov
mov
adc
rol
movs
repnz
or
das
rol
pop
or
les
add
jge
mov
movs
xchg
imul
add
mov
mov
or
mov
fwait
mov
nop
inc
scas
xchg
movs
lods
adc
push
pop
jmp
fdivp
int3
pop
ds
xor
pushf
leave
fidiv
mov
imul
fcomp
sub
dec
aaa
retf
cmp
mov
sub
frstor
and
or
jne
dec
cmps
sbb
jl
icebp
dec
adc
push
aas
jmp
outs
(bad)
cmp
mov
int3
cdq
adc
shr
xchg
jmp
mov
or
cmp
shl
daa
in
ds
sahf
test
outs
and
pop
dec
or
xor
or
cwde
add
dec
or
imul
push
pop
cmp
mov
repnz
mov
add
xchg
jmp
stc
push
sbb
jecxz
mov
dec
add
fwait
js
mov
jmp
movs
test
mov
xor
add
pusha
js
mov
push
push
mov
push
add
shr
cmp
push
xor
jnp
and
aad
call
repz
bnd
jmp
inc
jmp
stos
shl
or
jns
adc
pop
daa
loope
out
mov
add
loop
js
das
fwait
mov
aas
mov
loopne
inc
inc
sahf
mov
retf
ins
mov
dec
fist
dec
fs
push
cli
jno
mov
and
jmp
dec
sub
cmp
in
jne
dec
adc
pop
sbb
dec
cmp
sar
inc
lods
ins
mov
push
or
jmp
push
dec
pusha
cwde
test
mov
jne
jne
cmps
icebp
cmp
daa
adc
adc
pop
jmp
repz
into
mov
in
in
dec
cmp
scas
or
sub
in
jmp
cld
mov
pusha
dec
popa
fmul
pusha
mov
mov
pop
sub
fcom
jno
fidivr
in
xlat
icebp
ins
cs
mov
push
(bad)
(bad)
stos
jl
add
cmp
pop
pop
inc
fcmovu
lods
cmps
(bad)
adc
xchg
adc
push
in
adc
adc
aad
in
push
(bad)
lahf
adc
jne
pop
mov
pop
inc
mov
or
push
sub
std
xlat
loope
dec
js
add
(bad)
mov
jmp
mov
jle
sahf
xor
int
or
std
int3
xor
rcl
cmp
test
fnsave
in
dec
push
in
retf
aaa
pop
jmp
or
pop
or
or
leave
pop
mov
adc
sub
cwde
mov
scas
out
sub
(bad)
mov
add
fisubr
jmp
inc
sahf
push
pop
or
iret
lds
xor
nop
adc
addr16
mov
test
retf
add
popa
pop
cmps
neg
inc
mov
add
mov
fs
xchg
xor
dec
stos
in
in
jo
add
test
shl
dec
push
sbb
les
pop
push
pop
adc
jp
(bad)
jo
adc
mov
ret
add
aad
xchg
popf
stos
nop
retf
dec
(bad)
xchg
ret
fucomip
outs
idiv
and
mov
inc
outs
loope
xor
fisubr
loopne
cmp
jecxz
int3
lock
(bad)
cmp
xor
or
push
dec
xchg
cmp
mov
fistp
jae
(bad)
mov
fld
(bad)
mov
imul
jns
call
inc
scas
mov
add
or
cmp
shl
inc
(bad)
pop
pop
mov
xor
sbb
shl
sub
scas
mov
pop
(bad)
lock
cmp
xor
out
xchg
jmp
cmp
jne
fnstcw
leave
dec
xor
in
inc
inc
stos
adc
fistp
xor
nop
in
enter
ds
push
push
xchg
xchg
ins
mov
dec
or
rol
sub
or
cmp
cdq
mov
mov
movs
js
sbb
jge
xchg
mov
mul
pop
ret
xor
and
jmp
xchg
aaa
inc
jg
jge
pop
loopne
repnz
out
stc
fimul
xor
pop
test
jne
dec
es
and
dec
mov
call
pop
pop
in
add
xchg
jmp
pop
jb
dec
xchg
call
repnz
retf
bound
cmp
cld
push
sbb
sub
inc
lods
add
add
(bad)
inc
sub
pop
fldenv
inc
xor
addr16
fs
inc
fwait
popf
xchg
inc
jmp
jmp
or
jmp
daa
sar
or
add
mov
arpl
lods
jge
out
out
repz
xchg
inc
dec
mov
test
je
cli
xor
arpl
mul
and
mov
mov
ins
mov
inc
sar
pushf
add
sub
inc
imul
shl
adc
inc
inc
out
jnp
xchg
jg
adc
lock
cmc
push
iret
cmc
xor
imul
ins
pop
sbb
xchg
xor
test
test
or
xchg
push
push
ss
cmps
std
loopne
push
aad
(bad)
mov
gs
push
push
(bad)
jns
addr16
or
pop
inc
push
mov
fdivp
jg
inc
ss
fisub
mov
in
in
mul
inc
test
mov
scas
sub
(bad)
jle
and
cmp
or
pushf
test
pop
dec
test
(bad)
rcl
dec
add
mov
fwait
sbb
cmp
pop
js
(bad)
fsub
jns
mov
cld
iret
lods
mov
bound
cmp
aad
jnp
test
sub
mov
cmp
repz
dec
mov
jle
mov
dec
imul
or
xor
jl
out
xor
addr16
mov
xrelease
stos
imul
jae
jb
pop
mov
mov
jne
ror
cmp
add
mov
les
and
rol
adc
mov
cmovno
arpl
(bad)
jge
xchg
inc
fistp
sbb
or
out
jle
mov
push
aam
mov
and
pop
fisttp
push
out
and
sub
push
clc
cli
sar
repz
(bad)
ins
cmp
in
out
pop
dec
jne
add
pop
stc
add
jnp
aas
mov
sub
sub
loope
cmova
rol
mov
fmul
dec
adc
mov
dec
push
add
not
and
dec
push
mov
adc
or
test
inc
mov
mov
jg
inc
movzx
mov
and
dec
cli
ins
ja
push
or
repz
xor
adc
mov
verw
gs
or
or
mov
jb
imul
in
or
in
push
sbb
faddp
mov
cmps
jl
jge
fcmovnbe
popf
mov
outs
add
sbb
mov
stc
in
cmp
pop
cmps
jno
lock
out
xchg
test
int3
sub
sub
imul
clc
mov
lods
daa
lock
pusha
(bad)
shr
aad
out
mov
add
mov
ins
mov
int3
mov
fwait
add
cmps
sub
data16
loop
inc
xchg
jno
test
pop
add
mov
repnz
xchg
test
mov
or
ins
push
mov
fsub
inc
scas
push
icebp
and
push
mov
(bad)
mov
xor
add
cli
lods
retf
stos
test
ss
retf
lds
pop
mov
sbb
div
xor
and
sbb
and
add
push
inc
cdq
pop
call
in
dec
test
loopne
ds
xchg
scas
adc
cmps
push
out
sbb
(bad)
into
cmp
xchg
and
fiadd
or
das
and
jmp
mov
inc
dec
cwde
pop
rol
(bad)
lock
adc
dec
sbb
pusha
and
inc
loop
movs
mov
and
jp
mov
xchg
in
pusha
xchg
scas
xchg
movs
cmp
ins
outs
sbb
mov
das
mov
cmps
dec
mov
inc
adc
push
mov
shr
sbb
push
sbb
mov
js
ins
mov
into
test
call
sbb
jle
mov
popf
mov
jnp
bound
inc
xor
cli
out
ss
stc
jl
icebp
(bad)
or
retf
cmp
mov
loop
call
mov
xchg
call
jp
adc
add
mov
fsubr
(bad)
shl
imul
jle
add
sbb
jbe
cmp
adc
and
pop
sub
repnz
retf
call
mov
push
mov
push
mov
fdivr
mov
or
cmps
nop
mov
pop
add
popa
(bad)
mov
push
jo
dec
and
adc
test
sbb
imul
repnz
pop
adc
push
jnp
sub
(bad)
add
adc
aad
push
out
adc
scas
sbb
sahf
xchg
mov
call
das
sbb
lahf
push
ret
or
mov
daa
sub
std
lods
loope
mov
lahf
pop
mov
inc
(bad)
or
fild
sub
das
sbb
clc
xchg
xor
or
xor
aaa
pop
sub
lock
jo
pop
mov
enter
add
mov
int3
cld
pop
jle
loope
push
xchg
or
cmps
xchg
das
xor
fidivr
push
mov
dec
jmp
push
mov
pop
mov
daa
loopne
xlat
jge
push
or
mov
aaa
aas
lahf
test
leave
mov
mov
sbb
and
pop
mov
pop
mov
or
movs
stos
sbb
sar
xor
aam
push
and
test
cwde
push
fdivrp
in
(bad)
clc
test
fstp
xchg
sub
lahf
pop
xchg
push
sbb
or
dec
mov
jne
cmp
jge
imul
xor
daa
push
inc
fmul
fwait
test
jl
div
lods
es
add
clc
mov
pusha
pushf
lock
adc
es
sub
mov
cwde
pop
ins
sbb
retf
or
into
push
mov
jo
or
and
fiadd
xchg
pop
pop
sub
xchg
jecxz
dec
and
push
and
loopne
test
mov
jo
js
xchg
data16
ja
bound
into
daa
mov
sub
xor
popf
int3
push
sahf
add
rcl
adc
mov
pop
das
hlt
das
push
cmp
sub
jmp
stc
or
mov
movzx
push
lds
aas
ret
adc
rol
pop
pop
fst
adc
jbe
(bad)
adc
push
fimul
mov
xor
in
movs
cmps
ja
xor
jle
xor
inc
cmp
lahf
jb
xchg
mov
sbb
pop
dec
or
inc
(bad)
xchg
inc
popf
cmc
xchg
adc
repnz
mov
xor
inc
mov
shr
pop
outs
xchg
dec
xor
xor
mov
inc
sbb
(bad)
cmp
and
mov
mov
icebp
test
cdq
imul
cmp
xchg
in
dec
push
stc
std
add
sbb
imul
or
mov
adc
into
rcl
shr
sbb
ins
mov
fcmovb
cdq
ret
xor
pop
jns
in
sbb
test
mov
jnp
(bad)
rcr
fidivr
cmp
sub
mov
inc
stc
scas
xchg
mov
xchg
ins
xchg
enter
dec
mov
repnz
inc
sbb
pushf
or
sbb
hlt
loop
out
xlat
cmp
cmps
pop
in
ficomp
dec
int
cmp
movs
add
mov
add
ins
mov
cmc
bound
sti
pop
ret
push
or
xor
repnz
xor
(bad)
loope
imul
xor
mov
mov
test
push
adc
sbb
ret
aaa
(bad)
icebp
shl
scas
rcr
push
sub
push
ret
in
in
leave
jo
mov
jmp
mov
rcr
xchg
loop
cmp
mov
xchg
xchg
cld
out
bound
cmps
mov
push
dec
adc
cmps
ret
cmp
dec
loopne
push
xor
push
cdq
hlt
xor
sub
in
addr16
cmp
xchg
aas
fdiv
and
xor
mov
pop
into
sbb
call
cwde
fs
test
in
cmps
push
dec
pop
jmp
push
cmc
fcom
dec
push
push
hlt
(bad)
outs
pop
mov
xor
mov
sahf
adc
out
mov
and
stos
(bad)
repnz
inc
xchg
sahf
fpatan
js
scas
jb
mov
pop
push
add
mov
push
push
push
jecxz
fcmovnu
ds
mov
adc
jl
push
or
sbb
inc
push
loope
test
pop
mov
jo
jne
call
push
cmp
sar
ss
dec
or
test
dec
sub
mov
mov
adc
sahf
imul
out
mov
fwait
test
icebp
sub
lds
loopne
ss
pop
in
aaa
mov
push
xchg
push
mov
jmp
adc
out
ja
lock
push
cmps
js
ror
mov
(bad)
retf
cmp
pop
push
dec
ins
movs
ret
(bad)
das
(bad)
popf
mov
sbb
ror
mov
pop
shl
cmp
mov
fmul
in
stos
jmp
xor
pusha
stos
lahf
mov
sub
imul
out
repz
popf
mov
xor
xchg
scas
push
pop
fs
dec
mov
nop
pop
add
mov
dec
push
int
jmp
cdq
es
icebp
adc
jmp
pop
sbb
shr
pusha
mov
in
in
mov
pop
mov
lock
cdq
jge
movs
leave
push
fwait
mov
out
movs
mov
add
addr16
mov
jae
aas
xor
and
jnp
in
cmp
jo
lds
cmp
mov
sub
lahf
adc
fwait
push
mov
imul
pop
and
cmp
xchg
jmp
xchg
aad
xchg
xor
push
ret
pushf
adc
or
aam
pusha
fisub
in
dec
js
push
sub
outs
fdivr
cwde
push
or
cld
xor
cld
shr
mov
cmp
scas
mov
inc
cmp
or
hlt
sbb
push
pop
mov
nop
mov
mov
repz
ds
ins
sbb
mov
xor
into
mov
push
out
sbb
mov
icebp
cmp
dec
push
adc
retf
fdiv
xchg
jmp
fild
jnp
fild
ds
js
push
shr
add
lock
push
cdq
retf
fimul
ret
jle
and
shl
cmp
movs
movs
mov
cmps
dec
or
clc
inc
retf
iret
and
xchg
ss
addr16
mov
lods
inc
hlt
or
add
aas
std
cli
adc
cs
repnz
mov
out
add
sub
test
cmp
shr
clc
and
cli
into
push
aad
bnd
jne
xchg
push
sub
test
push
test
cmps
movs
xor
jne
xchg
mov
sbb
es
jne
js
push
mov
jnp
sbb
cmp
je
sar
mov
sbb
shr
(bad)
xor
or
and
jns
cmp
cs
out
pop
push
popf
outs
xor
sbb
inc
add
jbe
xchg
pop
mov
leave
fisubr
or
sub
push
jmp
retf
cmps
xchg
fisub
pop
jg
retf
sbb
jnp
(bad)
(bad)
mov
fisttp
pop
fst
shl
cmp
ins
test
dec
sub
(bad)
jmp
mov
mov
ins
loopne
sbb
adc
push
mov
loope
aaa
jle
ret
(bad)
js
sbb
cmp
add
mov
sbb
lahf
enter
loope
sti
repz
mov
into
mov
jnp
clc
pusha
and
jb
call
pop
fnstcw
aad
retf
add
adc
dec
dec
xchg
add
int3
pop
mov
leave
es
cli
mov
cmp
pop
push
pusha
xchg
sbb
outs
jae
or
jb
sbb
xor
sub
jne
lods
ffree
sbb
push
xchg
hlt
cwde
call
inc
je
out
in
test
cmps
or
shr
xchg
stc
bound
sub
pushf
sbb
cli
adc
mov
dec
nop
push
pop
push
imul
inc
repz
dec
cmp
xor
jae
push
inc
xor
inc
mov
or
leave
xchg
sbb
sub
inc
pop
bnd
add
cmp
out
or
pop
call
sub
cmp
fstp
stos
or
repnz
cmp
add
xlat
dec
jne
mov
xchg
dec
sbb
mov
xlat
adc
mov
push
push
push
cmps
xor
sbb
lahf
add
sti
inc
push
sub
dec
xchg
ret
cmp
pop
pop
mov
jmp
lods
repz
jl
pop
sub
mov
pop
enter
or
cmp
lahf
(bad)
jbe
mov
scas
sub
push
mov
sub
push
lea
inc
test
push
or
xor
ret
cs
jo
fsubr
leave
cwde
dec
mov
inc
in
lods
loope
mov
sti
ins
pusha
push
jb
fwait
out
nop
outs
dec
cmp
push
sbb
mov
adc
fisttp
cwde
sbb
retf
aad
xor
xchg
hlt
adc
push
inc
jle
and
(bad)
inc
into
jns
adc
add
call
in
mov
xchg
mov
stos
adc
shl
add
test
mov
loopne
and
neg
xor
mov
mov
ret
jb
push
mov
jmp
pop
lahf
jo
movs
test
mov
mov
inc
out
js
mov
loop
loopne
sub
mov
(bad)
(bad)
fs
fsub
call
test
retf
add
xor
sahf
sti
out
xor
push
cwde
xchg
in
out
outs
xor
jne
ins
jne
int
sub
xchg
mov
popf
or
sar
movs
shl
xchg
xchg
pop
cld
ficomp
mov
jns
pop
cmp
fs
cmp
movs
repz
mov
mov
in
fist
call
mov
shl
jle
test
mov
mov
add
sub
bound
data16
xor
sub
sahf
or
push
mov
push
jle
pusha
ret
xchg
mov
or
nop
sub
dec
sub
fist
scas
retf
and
sub
leave
out
lods
mov
(bad)
sahf
sbb
push
adc
push
mov
out
inc
retf
loopne
mov
push
dec
push
ds
ret
test
or
xchg
push
cmp
sti
lods
mov
shl
or
pop
enter
movs
fcmovnbe
cmp
cmps
fild
ss
leave
je
cmp
(bad)
cmps
xor
or
mov
fmul
xor
lds
scas
fidiv
call
fwait
popf
bound
sub
js
call
dec
jbe
test
fisttp
cmp
jle
or
int3
cmp
test
or
out
push
and
jg
mov
cmp
jne
mov
cmp
mov
cmps
adc
iret
add
fcmove
ret
adc
cmp
pop
les
imul
cdq
fdiv
or
cmp
iret
hlt
mov
push
push
repnz
call
daa
mov
or
sub
xchg
push
popa
prefetch
cld
int3
or
je
scas
cwde
inc
ds
hlt
or
out
inc
lods
fwait
cmp
test
mov
push
jmp
sub
adc
lods
rcl
out
sub
hlt
outs
gs
push
dec
jecxz
leave
adc
sub
mov
ja
test
sbb
js
mov
push
(bad)
pop
out
inc
cmp
or
inc
or
test
mov
push
adc
add
jb
pusha
jmp
or
dec
shl
mov
push
jle
xor
hlt
ret
gs
add
add
or
imul
pop
cmp
aam
cmc
scas
add
pop
cmps
mov
pop
or
nop
ficomp
xchg
xchg
mov
push
fisubr
cmc
mov
sbb
fs
jecxz
pusha
jae
sbb
dec
xor
js
test
add
in
es
lea
mov
cmp
sub
pop
adc
xchg
loopne
add
outs
retf
scas
shl
sub
(bad)
js
(bad)
ret
mov
fwait
sbb
mov
ret
xchg
xchg
fadd
mov
nop
fstp
cmps
ins
inc
xchg
dec
cli
mov
jae
je
xchg
mov
loop
ret
xchg
fld
(bad)
cs
sti
dec
xor
dec
adc
xor
jl
xor
call
pop
xchg
icebp
jb
pop
stos
mov
lahf
jo
pop
sbb
or
(bad)
sbb
mov
jmp
sahf
mov
mov
xor
inc
jle
cmp
imul
jle
or
aaa
ffree
fidivr
inc
mov
sbb
pop
pop
inc
dec
dec
sahf
out
jae
push
aas
jno
adc
std
test
dec
movs
add
xchg
das
inc
popa
int
push
aas
and
sbb
rcr
bound
or
dec
xor
sub
adc
dec
xlat
(bad)
repnz
xor
test
adc
pusha
inc
lods
add
add
and
push
inc
pop
push
sti
mov
lods
fisub
or
jle
icebp
mov
dec
sbb
and
pusha
jne
sbb
push
push
dec
test
mov
cmp
fadd
out
and
inc
scas
aaa
xlat
(bad)
pop
xor
push
inc
popa
pusha
and
fs
xlat
push
pop
jl
sub
mov
push
test
xchg
mov
popa
push
jmp
cmps
(bad)
scas
sub
aam
sub
scas
push
and
js
xor
cwde
loop
or
loopne
jns
stc
scas
and
mov
bound
pop
sbb
hlt
xor
lea
movs
ror
in
cdq
(bad)
and
cmp
test
repz
xor
stc
dec
leave
in
call
rol
aas
inc
int
push
xor
jo
add
out
sti
jnp
dec
outs
out
std
add
adc
xlat
dec
ficom
add
addr16
cmp
test
mov
cmps
pushf
pop
xor
or
mov
pop
mov
push
push
divps
popf
adc
jmp
lds
push
jg
pop
retf
xchg
sti
into
scas
jmp
mov
inc
sahf
cmp
hlt
dec
sub
xlat
mov
outs
aas
imul
sub
neg
js
pop
inc
sti
jae
cmp
cmp
pop
pop
push
sub
sub
xchg
popa
retf
loope
add
push
(bad)
xchg
rol
sub
jb
xlat
test
les
push
mul
jl
cmp
mov
scas
ins
fisttp
rcl
sub
dec
dec
pop
xchg
jmp
adc
clc
sahf
pop
loopne
int3
cmp
dec
sub
lods
aad
std
movs
sar
mov
cdq
add
mov
pusha
or
das
xchg
jb
xchg
add
and
int3
test
and
aam
jmp
dec
sahf
xor
add
les
and
sub
and
nop
int3
push
cmps
in
inc
not
cmp
pop
mov
mov
mov
mov
cmps
mov
daa
xor
cmp
push
pop
sbb
mov
push
sti
jge
mov
mov
gs
jmp
sub
lea
and
imul
mov
fwait
jp
inc
sub
xchg
xchg
mov
xor
out
outs
push
stos
aaa
push
pop
jecxz
push
jmp
rol
or
sub
fldenv
mov
mov
push
inc
dec
sbb
mov
not
xchg
lea
pop
push
adc
daa
lods
aad
enter
xchg
movs
das
std
hlt
push
sub
jne
cmp
jnp
add
leave
out
sahf
cmps
jb
and
dec
repnz
mov
jmp
add
jmp
aad
xor
rcl
retf
adc
or
(bad)
aam
jecxz
push
ins
or
xchg
jg
xor
push
cmp
cmp
sub
xchg
cmp
mov
ja
ja
xchg
icebp
cmp
xchg
ret
int3
inc
mov
sub
call
xchg
push
sub
jmp
rcr
out
sub
loopne
jns
push
dec
sbb
repz
adc
int
in
mov
not
rcl
sbb
pop
mov
daa
sub
pop
sub
mov
push
add
push
(bad)
push
fiadd
dec
bnd
xlat
mul
mov
inc
in
dec
xor
out
xchg
adc
ins
xor
fmul
sbb
cwde
lods
neg
jecxz
mov
lea
cmc
das
jnp
inc
mov
jb
sbb
adc
shl
push
addr16
and
jne
shr
mov
out
xchg
enter
loop
je
in
pop
(bad)
imul
(bad)
mov
inc
add
push
mov
scas
retf
xor
mov
aaa
scas
aaa
lods
pop
fld
xor
push
mov
pop
cmp
lahf
xor
and
jecxz
jmp
mov
test
xor
xchg
sahf
mov
cmp
ja
test
cmp
jb
std
push
aas
push
or
xchg
pusha
aam
pusha
pop
xchg
adc
xchg
push
fwait
or
scas
mov
in
push
in
xor
ret
sub
dec
dec
push
inc
and
pusha
jmp
or
stos
jg
mov
jne
cmp
xchg
inc
shr
out
lds
rcr
cmps
(bad)
sbb
(bad)
dec
jg
adc
int3
xor
icebp
outs
cmp
shr
jmp
sbb
jmp
ds
and
fwait
mov
add
lods
dec
cmp
jb
xor
arpl
gs
sub
inc
pop
mov
retw
add
ret
xor
sahf
cs
jae
mov
xchg
sub
xchg
bswap
retf
mov
dec
push
mov
jg
pop
pop
stos
jle
adc
adc
mov
dec
push
inc
dec
repnz
in
lds
int
mov
lods
pop
outs
ds
pop
pop
inc
jmp
cmp
adc
out
mov
push
pop
jno
push
ja
rol
xor
je
mov
pop
(bad)
pop
fwait
int3
sar
in
test
or
mov
aaa
inc
out
hlt
push
sbb
mov
(bad)
repz
lea
sbb
sbb
xor
cmps
popa
inc
xchg
pop
cmps
push
mov
aad
fs
call
lea
push
sub
pop
xor
and
lock
mov
ficom
popa
mov
pop
aad
jp
mov
xor
pop
cmp
mov
(bad)
inc
push
inc
outs
xchg
sub
ret
or
daa
mov
adc
dec
cmc
sar
inc
div
popa
das
mov
test
std
mov
popf
add
f2xm1
inc
das
push
ins
push
adc
cmp
cmps
cs
idiv
push
jnp
xor
xor
or
jmp
jae
ins
adc
jl
shl
jns
cs
mov
test
add
mov
pop
inc
inc
lea
pop
dec
stc
xchg
mov
sub
mov
and
adc
mov
imul
mov
repnz
xchg
sahf
inc
in
vxorps
je
cdq
jne
cld
in
(bad)
and
outs
mov
cmc
push
lahf
inc
loop
jno
int3
popf
movs
sbb
inc
jl
adc
ja
enter
sti
xor
push
daa
movs
nop
fbstp
cmp
sbb
jno
add
pushf
adc
jnp
fisubr
aam
pop
inc
cmc
sbb
and
(bad)
fcomp
loopne
bound
xchg
dec
mov
pop
mov
push
xor
xlat
ror
mov
loopne
je
or
or
and
je
mov
clc
scas
jg
movs
(bad)
sti
shl
pop
sbb
inc
mov
pusha
jl
jae
fs
sub
pop
mov
cmp
sbb
scas
js
test
xor
aaa
dec
adc
in
jge
out
mov
inc
or
mov
or
(bad)
jge
rcr
and
xor
xchg
in
mov
push
and
sbb
add
push
jp
sub
mov
push
add
mov
(bad)
hlt
adc
pop
out
inc
mov
lds
sub
jle
cmc
lock
dec
jge
push
xchg
outs
test
lahf
pop
das
dec
popf
retf
sbb
cmps
test
xchg
push
pop
and
bound
push
xor
cmovl
sahf
stc
aas
das
fnstsw
mov
add
dec
pop
aad
adc
xchg
pop
mov
aam
pop
jg
xchg
sbb
adc
loope
jae
stos
adc
test
in
(bad)
in
jae
stos
sar
jp
and
xchg
leave
xor
and
popf
fild
stos
push
sub
lods
pop
xchg
pop
sub
mov
and
loope
dec
test
mov
fstp
fld
gs
fsubr
or
lods
std
aad
sti
cmp
add
loope
addr16
xchg
sbb
dec
mov
xchg
push
jmp
outs
cmp
sub
or
daa
not
cmp
or
ja
(bad)
mov
mov
fidiv
nop
jg
mov
bound
jo
sub
sub
jmp
out
pusha
push
es
out
fstp
retf
fild
inc
sti
xchg
and
add
(bad)
jmp
mov
sub
inc
cmp
push
or
mov
pop
mov
out
std
push
adc
jns
test
repz
nop
pop
lahf
test
test
loop
mov
call
out
mov
xor
ret
xor
sti
add
jnp
mov
jle
fldcw
jl
push
or
lea
fcmove
xchg
xor
jcxz
adc
cli
ret
(bad)
jns
xor
fsub
jg
lea
sub
jae
sbb
pop
jne
pop
sbb
dec
mov
cmp
test
sub
pusha
lods
fcmovnb
or
adc
sbb
mov
dec
jno
retf
addr16
mov
jecxz
ss
je
push
lock
gs
or
pop
popf
fbld
jp
hlt
outs
sbb
adc
je
adc
call
rcr
(bad)
imul
pop
inc
or
inc
mov
sbb
scas
test
mov
add
push
ins
jp
mov
xchg
adc
sub
test
xchg
mov
inc
pop
push
push
or
(bad)
pop
outs
adc
dec
loop
xchg
cdq
cdq
push
mov
fidivr
(bad)
cmp
push
pushf
arpl
sar
dec
je
or
fcmovnb
xor
sbb
push
push
sub
fcmovne
sbb
(bad)
or
pop
pusha
rcl
idiv
daa
dec
adc
xchg
std
adc
test
sub
and
sub
add
jle
stos
mov
adc
xor
push
nop
mov
jle
rcr
data16
and
dec
lds
inc
mov
div
ror
out
adc
cmp
xchg
lock
das
arpl
fs
out
pop
rcr
leave
push
mov
dec
and
cmc
test
pop
mov
iret
add
mov
out
jmp
or
loopne
stos
or
stos
test
cmp
ss
test
push
bound
fisubr
jnp
sahf
mov
les
outs
repz
ss
movs
movs
mov
push
movs
gs
out
out
add
push
inc
or
and
or
sub
and
mov
cwde
cmps
aam
in
rdmsr
ds
push
imul
sbb
xchg
ds
sahf
adc
inc
adc
xchg
sub
je
mov
mov
cmp
test
sbb
push
xchg
sbb
pop
cmps
push
sbb
repnz
daa
or
mov
inc
int3
daa
mov
jl
imul
sbb
cmp
xchg
and
test
int3
retf
cmps
xchg
sub
movs
add
push
push
cdq
and
inc
dec
sbb
adc
jge
sub
push
sbb
sbb
enter
push
mov
jo
xchg
or
jmp
pop
out
dec
jmp
sbb
sub
jne
or
inc
add
jmp
(bad)
push
pusha
mov
adc
push
xor
pop
mov
ja
dec
out
jl
and
mov
in
and
jl
int3
inc
ins
mov
test
cmp
sbb
mov
(bad)
pop
mov
dec
dec
mov
jne
call
shr
cmp
aas
into
xchg
push
inc
cmps
dec
add
xchg
rol
mov
xchg
and
xchg
stc
adc
xchg
data16
xor
retf
xchg
sbb
xchg
mov
cmp
and
pop
fwait
cmp
jge
mov
jmp
cmp
sub
dec
adc
push
or
pop
js
div
stos
cmp
pushf
cmps
test
jmp
mov
mov
(bad)
mov
scas
jbe
sub
test
sub
mov
mov
cdq
fimul
jb
and
out
test
and
jmp
sahf
lods
test
fist
mov
jbe
xchg
mov
xor
repz
add
xchg
pop
shl
pop
xchg
adc
mov
fdiv
call
dec
fcomp
jmp
fdiv
fld
pushf
pusha
das
jle
pop
imul
fnstsw
pop
addr16
inc
xchg
pop
fnstcw
pop
xchg
retf
cmps
mov
and
loope
dec
repz
jge
std
and
test
movs
sbb
mov
jae
rol
adc
and
out
xor
mov
aas
fstp
xor
mov
mov
enter
fistp
pop
pop
je
retf
push
mov
sbb
jne
enter
sbb
pop
push
sar
dec
xchg
das
out
xor
or
lods
(bad)
pop
mov
jl
imul
mov
jne
cmp
push
jno
push
aas
cmp
xor
fstp
mov
cmp
push
inc
mov
stos
bound
jmp
jbe
add
dec
(bad)
retf
push
cmp
retf
or
or
mov
xchg
jb
inc
and
out
shr
jecxz
shr
xor
pushaw
in
mov
and
sub
dec
jo
jmp
ds
push
cmp
jmp
mov
pop
test
jnp
repnz
ds
jo
loopne
dec
pop
mov
sbb
xchg
and
fstp
data16
add
add
or
sti
in
xchg
xor
mov
sahf
inc
xlat
mov
(bad)
test
cmc
inc
lahf
cmps
xchg
inc
jo
and
push
adc
xchg
(bad)
std
into
dec
mov
(bad)
mov
inc
shl
adc
das
movs
bound
push
dec
adc
push
rcl
and
(bad)
std
mov
imul
push
dec
bndldx
jmp
ins
dec
ror
mov
mov
dec
xchg
mov
xchg
aas
sbb
pop
mov
cmc
mov
push
push
outs
(bad)
cli
xor
cmps
aam
or
outs
lods
adc
shl
pop
inc
push
sbb
push
je
dec
xchg
outs
(bad)
(bad)
in
ins
and
jp
or
mov
jno
pop
fiadd
inc
or
movs
mov
adc
sbb
jno
jmp
sahf
imul
test
xchg
jle
sub
daa
sbb
or
int3
mov
stos
jmp
dec
shr
ins
or
pusha
lea
add
dec
dec
ret
call
ror
pusha
adc
mov
sbb
das
es
mov
lods
pusha
inc
cmp
stc
jne
popf
jno
in
cmp
mov
pusha
mov
and
pop
and
or
jp
call
jge
xor
out
jle
aaa
pushf
pop
add
mov
push
sbb
push
dec
fldenv
mov
dec
adc
sbb
push
in
mov
xchg
shr
add
push
xor
test
jo
repnz
jno
cmp
mov
dec
mov
aad
cmps
adc
cmp
jp
cmp
mov
dec
in
mov
in
aam
(bad)
imul
fnstsw
sub
add
sbb
jecxz
aam
and
movs
jnp
pop
loope
shl
mov
das
in
mov
pop
aaa
and
int3
mov
sbb
mov
(bad)
aam
imul
rcl
dec
sub
ror
xchg
popa
or
ins
xchg
sti
lock
popa
mov
in
or
bound
out
add
cld
push
xchg
nop
ret
mov
shl
(bad)
pop
enter
cmc
mov
mov
lock
sbb
push
add
dec
popa
mov
pusha
sbb
int3
shr
mov
stos
out
push
lahf
push
mov
js
xchg
ins
iret
mul
retf
or
fsubr
mov
sbb
jg
ja
popa
add
cmps
int
adc
sub
mov
jb
cld
pop
or
add
sub
rol
fidiv
push
xor
mov
adc
gs
movs
out
dec
enter
jnp
and
rcr
daa
inc
scas
push
sub
mov
push
xlat
arpl
mov
(bad)
sub
adc
retf
pop
mov
shl
xor
add
xor
push
int3
in
pop
retf
sti
cmp
jno
mov
sbb
scas
push
adc
xchg
cmps
mov
mov
outs
ret
mov
sub
loopne
xor
xor
call
sbb
scas
mov
fnstenv
jo
test
je
(bad)
mov
dec
adc
mov
int
adc
dec
stos
sub
jp
and
mov
sbb
xor
loopne
fld
add
adc
ja
adc
mov
ins
fldln2
pop
(bad)
xor
and
mov
test
add
call
xchg
sbb
or
jno
xchg
xor
xchg
jbe
cmps
add
push
add
and
pusha
and
int
jmp
push
xchg
jae
inc
add
xor
pop
neg
addr16
rcr
mov
repz
in
inc
out
adc
stos
imul
mov
pop
adc
cmp
test
sub
shl
cdq
cmps
mov
jno
xchg
jmp
stc
cld
dec
cdq
lds
scas
pop
jns
fwait
pop
dec
or
repnz
or
mov
sub
cmp
jae
mov
mov
jno
mov
push
cmps
jae
push
or
cmp
jl
mov
cwde
sti
push
rol
xor
outs
(bad)
mov
xor
call
call
pop
mov
loopne
lea
imul
sbb
daa
dec
jbe
mov
icebp
popa
mov
and
fistp
int3
aas
mov
(bad)
fstp
mov
mov
ins
idiv
inc
in
(bad)
mov
ins
iret
es
fwait
(bad)
loopne
push
mov
stos
mov
mov
lahf
rcl
fcomp
scas
push
ror
(bad)
rcl
xor
inc
ds
mov
xchg
jno
icebp
ror
pop
inc
mov
out
xchg
xor
ror
mov
ds
pop
shl
sbb
push
es
push
xor
pop
call
pusha
add
pop
(bad)
add
fucom
dec
or
data16
pop
(bad)
cmp
adc
and
stos
daa
scas
cmp
(bad)
sbb
outs
arpl
ds
cmps
out
xor
sbb
pop
les
xor
mov
ficom
repnz
enter
aam
jbe
mov
or
jmp
xor
mov
and
and
push
push
movs
ret
push
inc
xchg
addr16
iret
xchg
out
ss
lahf
xchg
pop
cmp
(bad)
leave
cld
lods
push
ins
fsubp
aad
push
or
inc
and
enter
mov
mov
ret
loop
inc
add
shr
dec
out
mov
cs
xchg
int3
mov
shr
adc
sbb
adc
dec
mov
push
xchg
jmp
sub
nop
clc
dec
mov
push
xor
ja
out
dec
ins
ret
and
xchg
xchg
push
xor
lods
retf
cmp
mov
int3
adc
cmp
fisttp
repz
retf
sbb
aaa
or
int3
shl
loop
cmp
push
pop
(bad)
mov
mov
ins
test
sar
(bad)
lods
or
mov
rol
pop
sub
sbb
stc
ret
sub
adc
mov
fisttp
outs
inc
add
xor
loop
mov
jg
pop
sub
idiv
std
in
aas
or
(bad)
sbb
jbe
dec
pop
dec
daa
dec
(bad)
fnstenv
and
mov
inc
push
idiv
or
sub
loope
sbb
popf
adc
stc
dec
mov
adc
inc
pop
out
and
fild
push
cmp
nop
xor
add
rcr
jmp
ret
sub
inc
push
sub
mul
xor
xlat
sub
adc
mov
lds
cmps
rcl
push
stos
retf
rcr
mov
cmp
or
adc
or
aam
aas
das
(bad)
adc
jne
jle
add
pop
clc
mov
sahf
loopne
or
jmp
mov
jmp
out
loop
jp
shl
retf
outs
push
test
loopne
or
cmp
push
gs
xor
and
sbb
jmp
idiv
es
fiadd
test
pusha
in
(bad)
(bad)
push
xor
pop
xchg
sbb
repz
mov
movs
gs
inc
lods
inc
cmp
(bad)
aam
aad
cmp
adc
or
xor
mov
movs
pop
jnp
repnz
int
lds
jb
stc
js
mov
push
daa
jecxz
es
js
pop
lods
cmp
ror
test
inc
mov
or
aas
add
dec
mov
mov
cdq
push
sbb
in
aaa
outs
mov
dec
sub
inc
add
ret
mov
sahf
out
test
fdivp
rol
imul
cmc
jae
out
or
push
fnstsw
stos
out
je
ret
xlat
lock
cmp
jp
xchg
sub
adc
fnstenv
repnz
cmp
test
cld
ret
gs
pop
(bad)
sti
in
sbb
repz
repnz
repnz
fist
jae
iretw
or
push
sub
shl
(bad)
repz
mov
repnz
cmps
mov
stos
push
mov
imul
cli
mov
sti
call
and
push
cmp
add
shl
(bad)
mov
in
test
cmp
cli
pop
push
stos
sbb
sub
leave
jmp
outs
std
into
jae
cwde
addr16
icebp
out
jle
shr
push
push
jmp
jne
pop
dec
cdq
cmp
sub
jecxz
xor
or
in
es
sub
(bad)
mov
hlt
shl
mov
mov
(bad)
jno
test
push
mov
inc
hlt
aad
mov
push
popa
stc
sub
mov
add
adc
shr
pop
(bad)
loop
or
add
or
out
es
push
mov
inc
leave
jmp
push
dec
mov
dec
mov
pusha
shl
xchg
pop
ret
fcmovne
retf
aas
cmp
mov
rcl
push
fs
(bad)
push
adc
xlat
xchg
adc
mov
xchg
xchg
in
aaa
xor
dec
mov
in
mov
cmp
push
test
cs
dec
ror
lea
pop
and
pop
loopne
or
push
push
in
sbb
ins
xor
stos
and
sub
pop
in
cdq
xor
push
push
xor
or
add
retf
sub
push
ins
dec
xchg
cmps
mov
push
or
jae
inc
imul
sbb
mov
pop
je
enter
gs
inc
mov
in
sub
loope
hlt
xchg
in
mov
or
inc
cmp
jbe
sub
popf
push
pushf
retf
cmp
or
mov
push
fs
mov
jne
push
pop
div
repnz
jmp
mov
repz
sbb
mov
sbb
adc
retf
arpl
imul
xor
test
pop
lods
test
pop
cdq
cmp
cmps
inc
cli
addr16
sbb
cmc
jmp
shl
dec
mul
das
iret
rcl
(bad)
push
dec
arpl
int
out
adc
in
xchg
sbb
xor
loop
mov
jp
cmps
retf
dec
sub
sbb
sub
movs
mov
out
sub
in
addr16
xchg
jo
call
cmp
call
test
cmp
pop
jg
lods
add
stos
inc
stos
sbb
sub
cmp
test
ds
xchg
sbb
xchg
in
sub
xchg
shl
push
pop
hlt
jl
mov
jno
sub
iret
std
repz
stc
xchg
dec
(bad)
dec
neg
jl
push
adc
dec
xchg
cli
push
ja
shl
outs
mov
repz
dec
repz
push
and
je
jl
jmp
or
loopne
sub
sub
rdmsr
push
cmps
lock
jecxz
add
mov
ret
adc
ja
xor
fstp
pop
in
repnz
mov
inc
sbb
int3
push
mov
xchg
cli
adc
and
data16
pop
push
js
jnp
mov
dec
dec
sbb
sbb
add
in
icebp
xor
and
(bad)
mov
and
test
imul
inc
and
push
les
call
xor
popf
push
int
mov
movs
push
pop
repz
test
and
outs
mov
std
fild
dec
hlt
es
pop
pop
ret
cld
test
mov
add
xor
cld
test
enter
mov
push
mov
addr16
lock
retf
cwde
mov
into
dec
pushf
adc
inc
or
fbld
mov
and
sti
xchg
ja
cld
jne
js
mov
mov
jl
sahf
mov
add
jo
xchg
push
adc
jge
test
(bad)
jae
adc
cmps
int
(bad)
xchg
jb
mov
aas
mov
or
int
les
lahf
mov
sbb
push
fisub
push
(bad)
fisttp
enter
or
mov
gs
pop
push
movs
add
lds
in
std
push
retf
test
xor
push
add
dec
scas
ficomp
call
mov
xor
sub
cmps
inc
xor
jbe
out
jb
inc
retf
mov
mov
jae
mov
hlt
loop
mov
pop
xchg
sub
xchg
in
cwde
out
bound
outs
bound
aad
jnp
je
in
pop
jp
dec
sahf
lock
push
fs
arpl
or
jno
cmp
movlps
leave
sbb
sahf
in
ja
sbb
pop
(bad)
fcomi
fldenv
jb
gs
xor
mov
aaa
scas
dec
jmp
mov
outs
movs
out
mov
(bad)
test
aad
xchg
lea
cmp
jns
jb
sub
jl
xchg
or
or
lock
adc
or
std
jmp
mov
pop
gs
sbb
mov
repz
mov
mov
xchg
cmp
shr
push
mov
or
xchg
or
test
inc
lds
xchg
test
mov
pop
lea
pop
jb
inc
mov
mov
push
pop
add
and
aaa
mov
loop
mov
shl
sahf
outs
sar
xor
ins
or
xchg
cld
fst
(bad)
stc
cwde
jl
adc
mov
inc
cwde
push
push
and
mov
gs
hlt
add
xchg
push
ja
das
fcom
jb
out
mov
inc
dec
(bad)
push
out
stc
jmp
pop
cld
lea
jmp
push
jmp
imul
cmp
jb
cmps
bnd
cmp
push
sub
add
pop
into
out
sbb
dec
movs
out
pushf
fnsave
xchg
pop
inc
sub
sub
dec
sub
(bad)
xchg
dec
je
(bad)
jmp
out
test
ins
lods
aaa
jnp
xor
repnz
scas
div
gs
adc
(bad)
jo
jmp
adc
and
add
and
shl
scas
popf
jnp
mov
scas
in
jg
fisub
mov
dec
add
ja
loope
push
xchg
inc
int
loopne
and
xchg
mov
cld
imul
clc
adc
scas
or
enter
jne
sbb
sahf
test
push
pop
xchg
pop
mov
mov
sbb
ret
adc
in
movs
add
sahf
ds
pop
or
dec
daa
(bad)
jmp
mov
mov
test
inc
imul
inc
ins
jle
sub
fisubr
fistp
aam
pop
jl
iret
add
cwde
ds
xchg
std
imul
cmc
xchg
(bad)
retf
add
mov
jmp
stos
xchg
adc
std
adc
cld
pop
icebp
adc
or
mov
arpl
pop
std
ja
push
jo
in
mov
(bad)
bound
cmp
(bad)
cmp
inc
shl
aam
stos
cmp
push
and
add
add
cmp
jo
cmp
and
mov
cmp
dec
jmp
inc
int
pushf
out
out
xor
std
leave
push
cmps
aaa
outs
pop
jp
fidiv
or
jnp
jp
adc
ror
xchg
bound
and
xchg
stc
jp
outs
xchg
sub
ds
jns
jns
sbb
popf
pop
cmp
(bad)
jg
icebp
adc
sub
sbb
pop
into
inc
test
(bad)
call
outs
mov
xor
mov
mov
xor
cmp
jae
mov
dec
fwait
push
xlat
out
xor
rol
loope
push
mov
das
mov
es
jle
int
clc
push
mov
push
sahf
jecxz
mov
jns
add
ret
mov
sbb
push
cdq
iret
push
sar
mov
inc
popf
sbb
or
xor
call
outs
sar
ds
shl
repnz
sbb
lods
dec
push
jns
and
dec
mov
mov
test
std
test
out
push
cwde
sub
pop
lea
mov
jae
jle
inc
add
mov
jmp
stc
sar
xor
cmp
aas
daa
pop
cmps
adc
jne
push
cmp
xchg
ins
xor
iret
in
xchg
inc
xor
push
push
xchg
repnz
sbb
jno
inc
(bad)
mov
ds
jbe
xor
ret
fadd
fimul
jae
lds
mov
mov
je
xchg
add
arpl
push
fwait
push
sar
pop
fwait
mov
stos
jne
loopne
inc
cmp
mov
mov
mov
push
loop
xchg
test
into
xor
and
adc
push
movs
mov
mov
icebp
dec
add
adc
sbb
push
mov
and
jb
loope
aam
shr
push
jns
sbb
pop
lea
xchg
je
rcl
leavew
fild
jne
push
movs
cmp
mov
(bad)
jns
in
adc
add
push
cmps
ror
fsub
mov
lods
dec
jmp
or
outs
cs
inc
(bad)
cmps
or
adc
xchg
cmp
cli
push
jge
push
push
jne
addr16
ds
sub
and
pop
icebp
xor
xchg
ror
push
pop
sub
rcr
sub
ja
mov
iret
cmc
lea
xchg
sbb
rol
iret
repz
div
or
inc
fs
cmp
js
pusha
or
push
in
test
sbb
cld
jmp
xchg
(bad)
xchg
dec
jno
push
call
xchg
adc
mov
out
out
test
xor
inc
jp
jne
sub
cs
dec
jp
daa
movs
shr
and
push
sub
shl
add
sub
or
jmp
and
add
xor
aas
mov
leave
and
fwait
mov
call
push
pusha
(bad)
pop
cmps
mov
cmp
fwait
mov
push
jo
or
sub
lock
xor
repnz
mov
jecxz
jecxz
jp
and
push
jge
cwde
(bad)
fmul
stos
out
ret
in
in
pop
repz
ins
fcom
mov
mov
movs
sub
sub
pop
mov
jmp
xor
ret
add
and
outs
sbb
ins
sub
sub
imul
rol
scas
mov
(bad)
mov
fld
dec
push
loopne
lds
shr
mov
inc
push
test
xor
call
xor
mov
leave
jp
adc
and
xchg
dec
(bad)
in
(bad)
mov
ss
mov
xor
std
sbb
inc
popa
enter
push
adc
mov
jecxz
rcr
addr16
mov
mov
or
cdq
jno
dec
std
mov
sbb
mov
sbb
mov
mov
stc
aad
pop
pushf
loope
lahf
inc
mov
cmp
mov
test
mov
nop
inc
mov
aas
mov
add
push
xchg
adc
rcl
mov
ret
arpl
sbb
xchg
popa
add
pop
leave
in
(bad)
and
fadd
xor
(bad)
and
dec
pop
scas
fidivr
xor
mov
mov
lock
sbb
push
or
sub
fsub
ficom
out
aaa
xor
cld
mov
mov
xor
jb
push
inc
jno
fisttp
test
shl
add
pop
mov
js
ror
lock
loopne
out
sar
addr16
xchg
sbb
es
pop
cdq
js
pop
mov
iret
sub
in
jmp
adc
inc
fcmovnb
sub
pop
mov
cmps
icebp
mov
mov
shl
sub
loope
sbb
and
inc
fcom
ss
fwait
cdq
and
jns
aas
and
push
retf
scas
lock
add
xor
add
bsr
push
cmp
aas
xchg
add
mov
rcl
sti
stos
xor
stc
ficomp
jg
cmp
adc
js
(bad)
in
int
cdq
aaa
imul
data16
cld
iret
nop
aam
ret
dec
xor
daa
das
and
fneni(8087
dec
xchg
es
mov
hlt
sbb
or
jge
inc
mov
sahf
xchg
xor
icebp
pop
(bad)
pop
push
out
xor
pop
enter
call
mov
out
push
and
enter
std
sahf
push
dec
sahf
shl
mov
enter
xchg
and
ss
shl
and
cld
data16
mov
std
xacquire
jmp
push
jns
imul
and
cmps
ret
fucomp
call
adc
mov
(bad)
into
das
xchg
and
sahf
xchg
sbb
or
sti
sbb
inc
xchg
xor
fwait
(bad)
stc
pusha
scas
xchg
inc
js
xor
mov
gs
cld
stos
push
fcomp
and
scas
scas
mov
xlat
enter
cmps
ja
adc
and
inc
jl
push
cmp
inc
push
rcl
outs
pop
dec
mov
std
push
loopne
pusha
fstp
mov
push
pop
mov
mov
out
jns
xchg
not
and
(bad)
jmp
xor
jmp
inc
leave
hlt
cmp
mov
jbe
sar
push
pop
xchg
(bad)
mov
adc
int3
or
xchg
sahf
mov
fisttp
inc
sub
pop
jmp
add
frstor
cmp
imul
pop
lea
pop
inc
dec
ret
std
mov
push
adc
jns
iret
cs
in
mov
setne
jmp
scas
push
movs
mov
add
xchg
fld
dec
enter
les
js
rcl
shr
xor
inc
pop
jnp
mov
xchg
pop
inc
push
mov
into
push
cmp
mov
cmps
pop
push
pop
je
hlt
mov
retf
ror
pop
(bad)
adc
mov
ret
rcl
dec
(bad)
mov
xchg
adc
mov
fistp
es
lea
movs
js
cmp
not
xchg
mov
mov
or
and
sbb
retf
sbb
adc
bound
std
retf
jnp
repnz
inc
and
pop
cli
sub
pop
lahf
inc
les
push
retf
mov
cmp
int3
add
xchg
inc
int
cmc
call
jbe
cmc
(bad)
ins
aad
cli
push
int
or
into
or
(bad)
jle
movs
mov
xor
shr
ds
lahf
loop
sbb
cmps
movs
ja
pop
scas
stc
add
mov
imul
call
mov
out
(bad)
ret
and
(bad)
call
test
sti
rcl
or
add
out
std
jbe
xor
sbb
in
mov
mov
outs
movs
ins
and
gs
femms
fadd
rcl
movs
shl
xor
in
imul
mov
mov
cmp
rol
push
xor
iret
cmps
add
push
sub
movs
sbb
(bad)
and
lds
pop
sbb
adc
inc
js
jae
cmp
cmp
lock
sahf
mov
or
cld
loop
jge
push
and
daa
sar
xor
xor
out
(bad)
cmc
ins
movs
call
mov
dec
jns
cmp
jg
mov
xor
fidivr
shl
sbb
xchg
and
jg
sub
push
les
popa
mov
mov
sbb
push
xchg
mov
repnz
lods
xchg
popa
imul
jmp
mov
mov
xchg
or
push
clc
push
mov
mov
ds
jge
dec
sbb
mov
mov
add
dec
(bad)
xor
ret
ror
add
lea
pusha
test
push
sub
movs
mov
fidivr
adc
imul
test
lods
test
sub
pop
xchg
and
cld
push
pushf
int
xchg
mov
mov
lahf
sahf
push
repz
ret
outs
ins
dec
mov
jmp
adc
ins
nop
xchg
dec
int
popa
outs
or
sbb
(bad)
xchg
mov
dec
xchg
loope
mov
xchg
pop
int3
xchg
xor
in
cmp
test
pushf
popa
xchg
sub
sbb
mov
inc
mov
fcmovu
xchg
iret
int
imul
push
add
outs
int
xor
mov
mov
sub
(bad)
xor
inc
fist
or
push
add
ja
int3
ja
xchg
dec
sub
jnp
sbb
sub
add
inc
cmp
hlt
cs
push
lods
xor
in
adc
fstp
sbb
push
xchg
mov
clc
loop
cmp
xor
xor
push
pusha
dec
inc
popa
push
loopne
lds
sar
je
pusha
inc
cmps
mov
dec
scas
repnz
movs
pusha
jmp
addr16
and
lds
daa
sub
mov
adc
and
inc
adc
push
sub
lea
das
push
sub
sbb
aad
push
shr
jno
xchg
inc
push
mov
xchg
test
inc
sahf
and
mov
dec
in
fcomp
popf
test
sub
mov
inc
iret
dec
call
sub
add
lahf
or
ins
pushf
xchg
addr16
ret
jl
mov
test
fcom
jns
dec
pop
push
sub
sbb
or
or
and
mov
pop
mov
xchg
xchg
fwait
jmp
cmp
cs
ins
stc
jno
sar
sub
into
push
mov
lods
jmp
(bad)
jge
sbb
in
cmp
or
sti
mov
add
xor
cmps
jne
mov
pop
mov
or
or
fs
mov
je
lds
icebp
out
dec
aaa
cmp
cmc
adc
lds
or
push
ficom
cld
sub
jle
xchg
push
mov
or
fs
cmp
(bad)
pop
dec
push
or
ss
sahf
dec
and
call
cmps
(bad)
rcr
xchg
jns
jae
adc
push
rol
out
pop
add
mov
mov
ins
dec
imul
push
popa
add
inc
ins
add
xchg
cwde
(bad)
sub
lock
mov
fisubr
mov
stc
xor
push
ds
lahf
cld
popf
fistp
jecxz
xchg
cli
xchg
in
push
or
stos
dec
fdiv
jno
push
mov
add
cmp
xor
mov
aas
iret
jg
stos
mov
adc
fistp
cmps
nop
(bad)
idiv
jmp
sbb
pop
ds
dec
lods
lahf
daa
or
dec
test
in
adc
and
push
add
dec
jb
enter
(bad)
(bad)
out
cmps
dec
sbb
pushw
outs
dec
mov
and
push
sar
adc
rol
(bad)
xor
ficomp
jae
das
test
fs
(bad)
xchg
fwait
ja
test
jae
rol
adc
adc
inc
sbb
or
stos
sub
in
dec
rcr
inc
pop
popa
xor
or
iret
or
(bad)
mov
and
pop
stos
mov
cld
or
out
push
hlt
enter
cli
fwait
int
inc
cmps
xchg
cmps
or
push
xlat
pop
push
mov
push
xchg
pop
stos
shl
sti
xor
int3
mov
jns
fldcw
pop
ret
repnz
cmp
cwde
jne
cmp
push
fadd
hlt
push
data16
cmp
sub
xor
and
cs
cld
es
fidiv
add
xchg
sub
call
pop
sar
pop
je
jmp
jle
inc
or
push
std
std
sbb
fldcw
aaa
sbb
cli
mov
aaa
xor
sub
cmp
ja
sbb
test
sbb
(bad)
out
jno
push
sub
je
cdq
xchg
int3
popf
out
and
adc
fcom
sub
jl
jo
and
mov
push
or
dec
fstp
push
lahf
xlat
out
pop
xchg
xor
iret
adc
adc
mov
movs
(bad)
jg
les
push
sbb
adc
(bad)
shl
cmp
and
pop
mov
das
add
ret
shl
adc
stos
movs
mov
push
imul
mov
mov
xchg
aad
push
xor
aam
sti
ja
in
pushf
jmp
mov
push
inc
hlt
idiv
jmp
push
ins
lea
out
push
into
push
pop
inc
test
sub
sub
pop
fstp
xchg
clc
test
push
lock
push
in
test
int3
fiadd
xchg
(bad)
ficom
dec
arpl
cs
inc
mov
in
(bad)
mov
mov
aaa
xchg
jnp
add
arpl
jbe
pop
and
cdq
clc
arpl
and
mov
je
sahf
lea
and
rcr
jno
cmc
push
dec
pop
jle
mov
jmp
sti
movs
dec
push
inc
sbb
(bad)
in
mov
xor
scas
jg
dec
pop
call
mov
mov
jge
jae
mov
fmul
lods
mov
out
test
popa
les
shl
loopne
pop
and
popf
jns
add
inc
fisttp
inc
fwait
mov
mov
ins
mov
cmp
jmp
xor
int3
sahf
mov
test
cmp
test
inc
sbb
xchg
das
dec
sub
iret
xor
add
add
xchg
jl
mov
push
and
shr
outs
or
jmp
test
cmp
lods
dec
sar
pop
mov
test
or
repnz
(bad)
inc
adc
jl
stc
scas
dec
sbb
(bad)
lock
xor
daa
sub
xchg
sub
push
fld
popf
sahf
out
mov
inc
std
jno
xchg
mov
cmps
jae
cmp
xchg
sar
inc
or
xor
inc
adc
xchg
pop
pop
mov
dec
(bad)
fmul
scas
or
movs
lahf
lods
std
shr
jp
inc
ja
fidiv
push
add
cmp
xor
test
iret
lods
pop
test
mov
pop
or
hlt
inc
xchg
(bad)
sbb
jp
aas
into
push
push
mov
mov
mov
out
or
jmp
fiadd
out
mov
mov
cwde
gs
loopne
int3
mov
push
add
aad
push
jae
mov
mov
and
jmp
mov
bound
iret
out
cmp
sbb
pop
ins
jnp
imul
inc
fcmovbe
orps
outs
and
cmc
pop
movs
or
sub
addr16
pop
(bad)
sbb
pusha
push
out
mov
jmp
pop
ss
mov
sbb
jg
arpl
ins
or
imul
and
jmp
adc
adc
daa
shl
xor
xlat
xchg
add
test
inc
pop
add
mov
or
mov
test
push
stc
movs
in
in
sar
scas
scas
data16
and
push
aam
mov
inc
add
imul
icebp
jl
lahf
loop
jg
js
in
aam
mov
stos
push
(bad)
cld
icebp
test
dec
and
fmul
test
mov
pop
push
call
or
jmp
ret
or
in
test
push
(bad)
push
aas
inc
stos
iret
xchg
lea
sbb
in
mov
das
mov
loope
pop
mov
mov
xor
sar
jle
adc
xor
pop
outs
xor
sbb
mov
sub
cdq
loop
cdq
dec
scas
mov
jp
mov
mov
outs
sub
xor
lods
jp
rol
pusha
and
xchg
push
jnp
les
shl
xor
xchg
inc
lea
sub
or
mov
cld
cdq
test
push
jmp
adc
ret
xor
movs
inc
mov
xlat
dec
lods
mov
(bad)
xchg
cld
(bad)
outs
cmp
(bad)
adc
mov
inc
pop
aas
sahf
fwait
outs
loopne
inc
jle
jmp
cmps
inc
or
fstp
add
cmp
(bad)
in
inc
(bad)
or
mov
in
push
dec
aas
push
inc
and
mov
outs
(bad)
(bad)
es
cmps
pop
loopne
scas
icebp
test
jns
repnz
call
mov
rcl
in
mov
data16
fsub
push
add
push
cli
mov
ret
outs
cli
scas
add
sar
dec
adc
jge
push
sbb
push
ins
adc
pop
and
mov
bnd
hlt
int
push
mov
cmps
jge
cdq
adc
mov
cs
(bad)
mov
popa
loop
cmps
pop
pop
ins
out
cwde
ret
retf
test
pop
(bad)
in
dec
movs
clc
lock
daa
ror
cwde
out
inc
adc
out
test
ds
nop
les
aas
jle
mov
aaa
mov
and
outs
adc
dec
xor
and
pop
mov
mov
jle
stc
mov
lahf
in
cmps
addr16
cmp
mov
out
retf
mov
pop
jp
out
fisttp
aas
rol
(bad)
and
call
xchg
xchg
sub
dec
push
in
push
ins
sar
mov
repz
leave
cmp
pop
mov
add
sub
pop
int
test
inc
pop
mov
sahf
adc
push
and
(bad)
mov
pop
xchg
add
mov
in
xor
nop
mov
or
sahf
lds
sub
pop
int
adc
jle
lock
movs
cmc
out
add
jmp
fisttp
mov
jle
(bad)
test
jp
sub
jb
add
push
push
mov
movs
or
xor
add
hlt
clc
dec
mov
mov
sti
bound
bound
xchg
mov
xchg
push
push
sub
fild
lods
data16
push
xor
sub
cmps
cmp
sub
xchg
cmp
popa
and
mov
ins
mov
js
mov
mov
dec
fdivr
pop
push
cmp
mov
sbb
cmp
int
scas
cdq
(bad)
xchg
mov
fadd
stos
repnz
inc
pop
icebp
cmp
pop
dec
call
dec
mov
loopne
shl
pop
ss
sub
push
call
sub
ins
hlt
sub
inc
call
scas
add
add
lock
test
popa
dec
sub
cmp
adc
ret
fwait
mov
or
mov
adc
sbb
pop
pop
dec
jne
mov
fist
inc
xor
xor
fldenv
sar
xchg
lods
pushf
xchg
mul
xor
add
scas
xor
mov
retf
repnz
jmp
adc
add
and
mov
cmps
sub
dec
adc
xchg
sub
cwde
xor
cmp
or
sbb
pushf
pop
dec
add
xchg
push
mov
in
call
adc
cmp
and
retf
or
inc
inc
jmp
mov
mov
(bad)
retf
adc
fucomip
xor
jae
and
push
adc
in
(bad)
inc
(bad)
push
lods
or
aam
sub
out
int3
out
(bad)
clc
int
mov
getsec
mov
push
or
into
push
inc
pop
add
ret
lods
idiv
push
ficomp
stos
test
call
fwait
xlat
je
pop
fs
loop
cwde
cmp
nop
cli
jb
(bad)
jno
xchg
pop
sbb
bound
push
adc
adc
xor
lock
mov
jge
stc
rcl
shl
sbb
in
icebp
(bad)
mov
mov
xor
stc
rcr
sti
call
xor
dec
inc
and
mov
cmp
fcomp
imul
push
xchg
test
cs
and
mov
enter
push
jg
jg
sub
ror
call
and
sbb
(bad)
sub
xor
jbe
sub
or
push
scas
push
lock
mov
inc
sbb
push
dec
inc
test
sbb
mov
and
xor
stc
add
jecxz
jl
int
in
cmc
pop
pop
sti
pusha
push
in
retf
mov
cs
or
jge
dec
push
add
lahf
inc
dec
sahf
sub
test
in
sub
ja
inc
iret
rcl
loop
xchg
adc
(bad)
pop
test
int
sub
fild
std
mov
mov
pop
in
(bad)
dec
aam
addr16
mov
sub
div
inc
add
push
push
cmp
cli
xor
in
sbb
sti
cwde
cmps
mov
icebp
xchg
mov
mov
(bad)
mov
int3
lea
lods
jo
sbb
jns
stc
adc
xchg
shl
out
ret
rcr
adc
lds
cmp
sbb
cmp
sahf
xchg
test
stc
outs
mov
push
into
leave
mul
cmp
mov
arpl
dec
(bad)
or
add
ffreep
cwde
add
sbb
cli
adc
pop
pop
(bad)
jo
dec
xchg
and
add
fidivr
jecxz
daa
mov
inc
(bad)
daa
int
loopne
and
push
into
dec
pop
sub
xchg
sub
popa
in
fcos
ret
mov
in
lea
lock
mov
out
push
setne
cmps
mov
and
sbb
lds
add
pusha
xchg
lea
push
fnstcw
cmp
sti
cmc
ss
or
jp
lds
sub
add
mov
jnp
inc
or
jns
loopne
stos
push
adc
push
jns
ret
push
pushf
inc
xchg
imul
xchg
(bad)
mov
mov
jmp
gs
mov
mov
cmp
retf
and
cld
xor
lea
leave
pop
sbb
data16
pop
popa
call
scas
mov
frstor
in
test
cmp
pop
cmps
das
push
stos
gs
dec
popa
jae
cs
mov
pop
sbb
cmp
add
scas
and
fs
mov
adc
loopne
xchg
xor
xchg
lds
jno
mov
mov
fbstp
sub
inc
jbe
icebp
and
push
loopne
pop
dec
leave
mul
jb
and
loope
repz
add
jle
in
adc
das
sqrtps
or
and
mov
pop
aad
and
ret
in
scas
sub
ss
mov
pushf
in
mov
and
les
lea
jge
pop
dec
std
mov
int
pop
push
sub
add
pop
push
cld
jb
fcom
int3
neg
and
xchg
pop
aad
sub
and
daa
or
push
lods
in
fwait
enter
leave
nop
mov
inc
xor
out
inc
jae
inc
jle
sbb
lds
inc
push
or
inc
or
add
push
imul
dec
repz
in
push
xlat
dec
push
push
xchg
adc
dec
adc
test
add
sbb
mov
jns
cmp
mov
daa
outs
daa
xchg
cmp
ja
push
sub
xlat
push
mov
and
pusha
and
(bad)
in
dec
push
movs
jbe
leave
push
xchg
icebp
ss
push
cmp
call
mov
ss
push
cmp
mov
sti
ins
jp
nop
ins
add
mov
aam
retf
mov
push
and
xchg
out
inc
ret
in
inc
xchg
sbb
adc
dec
movs
into
out
clc
popa
cmps
and
jg
mov
and
scas
popf
mov
lods
inc
xchg
adc
jnp
xchg
not
sbb
ins
repnz
pop
mov
add
fcom
stos
adc
dec
es
pop
outs
aaa
int3
div
(bad)
sar
cdq
inc
inc
stos
jo
sahf
dec
aam
(bad)
(bad)
and
push
dec
movs
add
ss
icebp
call
lods
jecxz
gs
call
jl
outs
mov
xlat
ss
xchg
(bad)
test
popa
jp
or
adc
jle
and
mov
xor
or
fiadd
xor
jmp
pop
inc
fiadd
xchg
mov
dec
inc
sub
loop
je
cwde
sbb
addr16
fsub
and
daa
pop
das
mov
in
xor
push
(bad)
ins
jbe
xchg
inc
mov
sbb
xor
mov
popa
call
cld
cmps
add
std
idiv
sar
or
adc
or
adc
jmp
pop
leave
sbb
ss
sub
stos
mov
cmp
xor
adc
add
push
ret
pop
int3
fimul
cmp
sbb
lahf
dec
jne
sar
retf
cmp
jmp
jae
stc
std
jo
push
mov
loopne
adc
push
jg
jmp
(bad)
das
mov
aam
test
pop
mov
push
call
int3
ja
mov
stos
hlt
and
das
push
enter
mov
mov
ret
and
sub
sub
add
and
std
push
leave
push
jns
ror
push
outs
mov
and
pop
mov
scas
mov
add
or
lock
ins
add
or
test
dec
je
jp
leave
rep
mov
mov
ins
xor
ret
clc
jmp
pop
cs
test
std
or
or
arpl
hlt
dec
ror
and
dec
rcr
ins
inc
cmps
nop
xchg
idiv
add
inc
sub
nop
sbb
in
(bad)
mov
int3
sbb
jae
push
jns
xor
xor
ss
outs
adc
xlat
sub
gs
gs
out
pop
xchg
jge
sub
inc
xchg
loopne
shr
jne
movs
sub
add
add
popf
jns
pop
inc
cmp
sbb
rol
or
pusha
inc
or
cmc
lds
xchg
push
cmps
icebp
scas
cs
xor
dec
ja
or
inc
jmp
mov
pop
push
cmp
inc
push
mov
inc
inc
xor
jg
mov
(bad)
idiv
sti
pop
jge
xor
lods
sbb
add
jns
out
out
xchg
imul
ins
cmp
mov
mov
loopne
xlat
(bad)
clc
and
rcr
call
mov
mov
add
cmp
xor
hlt
jmp
test
aas
mov
adc
loopne
push
aad
mov
sti
xor
sbb
pop
nop
xchg
push
pop
pop
inc
scas
dec
mov
lahf
fcomp
lahf
cmp
dec
inc
push
push
dec
xlat
outs
add
and
enter
daa
aas
and
inc
sub
ror
xor
add
test
popa
jl
fwait
push
inc
pop
mov
cmp
out
int3
sub
aaa
imul
adc
retf
lods
dec
mov
mov
(bad)
fs
call
cmps
mov
inc
sub
sub
dec
cmp
sbb
inc
ret
out
xchg
nop
fadd
cmps
sub
cwde
(bad)
int3
push
jp
aas
jns
imul
fcom
jo
lahf
push
mov
mov
add
mov
push
cmps
enter
sbb
mov
popa
add
xor
das
popa
cld
cmp
aas
(bad)
rcr
out
out
push
lock
cmp
dec
repz
fist
cmp
pop
adc
into
mov
inc
jle
js
xchg
jb
gs
add
clc
xchg
jg
(bad)
daa
xchg
(bad)
(bad)
and
(bad)
ds
mov
inc
mov
(bad)
xchg
jne
call
or
pop
dec
dec
cmp
fs
xchg
je
sub
jmp
enter
jmp
(bad)
repnz
cmp
mov
add
rcr
inc
dec
aas
mov
cmps
add
mov
mov
dec
mov
xchg
mov
loop
loopne
mov
in
test
cmps
jb
pop
das
prefetch
jne
lahf
dec
mov
mov
out
fst
xchg
pop
aad
jmp
call
pop
add
inc
nop
bound
xor
pop
inc
lock
in
fidiv
add
aad
pop
jmp
aaa
mov
pop
mov
cmp
cmps
cmp
xchg
ror
xlat
jecxz
(bad)
jecxz
lock
and
mov
je
mov
mov
movs
jl
mov
xlat
xor
aam
xchg
(bad)
out
es
push
(bad)
jb
jno
inc
sbb
imul
mov
(bad)
movs
pop
loope
add
xchg
adc
retf
shl
inc
xchg
mov
mov
pushf
sbb
mov
arpl
push
pusha
adc
jmp
adc
pop
jo
push
inc
mov
fisub
retf
or
add
mov
xchg
dec
cmp
loopne
push
lods
mov
or
loope
daa
dec
jg
add
mov
fwait
pusha
hlt
jge
dec
mov
and
mov
movs
scas
(bad)
lods
add
fldenv
sbb
and
jns
cmc
pop
je
xchg
scas
outs
cmc
inc
scas
sbb
jns
push
and
out
cli
xor
mov
lahf
jp
cwde
pop
xchg
arpl
addr16
xor
or
fnsave
jg
hlt
arpl
cmps
pop
sub
ret
jne
mov
cmp
cmp
inc
and
test
hlt
xchg
in
loopne
mov
lds
shl
xchg
mov
or
sbb
arpl
cld
push
dec
inc
lds
sbb
push
xor
mov
or
(bad)
xchg
add
jle
inc
outs
mov
pop
mov
mov
idiv
pusha
imul
add
test
dec
pop
jnp
pop
mov
arpl
jge
mov
(bad)
sti
xchg
mov
sub
lahf
retf
data16
ins
or
cmp
fwait
jb
or
pop
mov
in
add
adc
xchg
fmul
adc
ds
cmps
sub
movs
test
ins
cmps
mov
add
into
pop
add
out
jae
fst
mov
mov
dec
add
sbb
int
outs
xchg
xor
and
adc
gs
idiv
mov
mov
push
rcr
pop
xor
(bad)
icebp
push
mov
pushf
and
scas
scas
sbb
pop
inc
sbb
cmc
ins
or
pop
repnz
shr
cmp
inc
mov
cmp
fisttp
push
adc
xchg
push
and
jo
std
jno
es
call
movs
xchg
nop
mov
push
xchg
xlat
fwait
mov
sbb
cmc
pop
mov
push
sub
loop
(bad)
sar
lahf
jecxz
popa
mov
mov
dec
arpl
sub
test
jb
outs
push
dec
mov
add
test
inc
or
cmp
mov
push
xor
dec
movs
inc
push
cmp
adc
aaa
or
push
out
pop
lods
mov
mov
mov
adc
test
ret
jnp
call
movs
or
inc
loope
aaa
test
sbb
lea
std
mov
pop
adc
or
pop
xor
fdivr
inc
je
jnp
mov
add
xor
add
test
inc
loope
ret
jp
lods
jg
mov
xor
jno
push
fadd
adc
nop
mov
jbe
jl
cmps
add
aam
loopne
out
mov
sti
enter
call
(bad)
fisttp
mov
jns
adc
jge
(bad)
jno
ret
test
mov
push
pop
add
loop
and
push
jo
(bad)
out
dec
rol
xor
pop
mov
(bad)
pusha
sub
inc
pop
mov
mov
and
push
enter
pop
dec
icebp
callw
dec
imul
fsubr
daa
dec
ror
addr16
jle
and
adc
xor
es
inc
add
sbb
xor
shr
mov
adc
out
sub
loope
div
dec
(bad)
xor
jns
add
cmps
lock
(bad)
mov
jb
ror
pop
leave
mov
(bad)
jnp
dec
cld
scas
test
(bad)
test
mov
mov
xchg
out
aaa
rol
rcr
sub
jb
(bad)
mov
xlat
rcr
repnz
lahf
test
daa
xchg
rcr
mov
xchg
clc
(bad)
stc
sbb
jae
sbb
out
call
jmp
jo
mov
mov
cmps
mov
dec
dec
jg
imul
ror
cmc
and
push
mov
dec
mov
add
(bad)
rcr
mov
push
add
adc
aaa
sub
loope
ret
add
sub
arpl
push
arpl
imul
out
das
ja
jne
hlt
or
xor
ins
mov
add
cli
adc
hlt
icebp
add
cld
cmp
or
jge
js
or
push
scas
mov
aas
retf
xor
int
push
pop
cmps
sbb
icebp
or
int
sub
or
cmps
sbb
push
sbb
rcl
jmp
rol
and
jnp
inc
in
jbe
mov
push
push
sbb
sbb
jle
and
inc
lea
or
sti
(bad)
das
aad
leave
mov
js
add
pop
out
or
popa
or
in
mov
add
and
mov
mov
mov
cmp
aaa
mov
aas
scas
in
add
mov
mov
add
sbb
pop
mov
retf
or
enter
jno
cld
leave
mov
sbb
and
mov
jle
fimul
jbe
inc
fsub
jo
(bad)
rcl
push
sub
fdiv
movs
loop
pop
pop
add
retf
cmp
pop
jno
lods
push
fisub
push
rcl
fsubr
pop
pop
sub
(bad)
stos
and
cmp
pop
cmp
in
cmp
shl
lahf
add
dec
fdivr
sbb
xor
aaa
mov
push
aad
xlat
adc
pop
jg
xchg
leave
bound
ins
pop
sar
mov
sti
arpl
push
pop
jge
pusha
int3
ja
sub
cmp
mov
or
mov
(bad)
call
jne
adc
pop
push
retf
enter
outs
and
rcr
push
xchg
xlat
jne
jg
add
add
push
dec
shl
not
add
std
inc
das
loope
cmc
push
cmp
in
jmp
in
jb
call
repnz
jns
or
into
adc
mov
cdq
xchg
sbb
data16
sbb
aas
fwait
jl
fdiv
mov
popf
adc
call
ja
cmp
mov
test
lahf
pop
fdivr
cmp
fsub
loopne
jecxz
jno
dec
cmp
out
xchg
in
or
fst
rcr
dec
or
mov
mov
(bad)
mov
pusha
jl
inc
add
pop
jp
inc
xchg
outs
dec
stc
ins
and
dec
inc
adc
shl
(bad)
xchg
cmp
adc
retf
and
outs
push
or
lea
push
xchg
xor
jno
inc
add
jns
ret
test
or
cwde
sbb
out
sub
div
shl
outs
xlat
sub
rcr
fstp
mov
pusha
sbb
retf
or
out
sbb
icebp
mov
mov
sub
adc
fisubr
inc
xor
dec
je
pop
loop
stos
mov
jbe
pop
jnp
pop
push
mov
shr
inc
sub
push
jbe
mov
inc
mov
dec
sahf
xchg
mov
jae
jns
add
xchg
and
xor
(bad)
leave
cmp
mov
dec
cmp
int3
loope
push
dec
and
ja
adc
cmp
push
mov
int3
std
in
aaa
sub
add
cld
cmp
mov
jge
inc
add
fidiv
cld
es
add
cmp
cmp
mov
not
mul
jns
xchg
sbb
xor
cwde
xchg
and
mov
mov
pop
push
sbb
xchg
call
cmp
mov
jmp
and
dec
push
mov
(bad)
(bad)
inc
(bad)
cdq
jge
mov
movs
cmp
jp
xlat
cmp
das
pop
(bad)
cmp
std
inc
test
pop
xor
stos
push
mov
xchg
(bad)
pop
test
mov
pop
cdq
jmp
lahf
pop
or
rol
jle
jl
push
scas
ret
jg
xchg
push
clc
dec
ret
leave
and
fstp
lods
sahf
lahf
jmp
dec
mov
add
mov
ret
clc
push
xchg
push
stc
mov
out
out
out
icebp
pop
mov
mov
fistp
cmp
loope
mov
inc
mov
test
rol
(bad)
sbb
pusha
mov
in
sti
inc
retf
jmp
pop
pop
inc
scas
jmp
(bad)
movs
cmp
cmp
pop
jg
(bad)
jno
rol
sbb
or
sbb
rol
adc
xlat
xor
inc
xor
or
div
pusha
mov
and
push
adc
sub
add
adc
dec
or
cmp
ja
loop
inc
add
jne
sahf
jl
pop
jg
iret
pop
ret
retf
out
leave
and
fbld
das
pop
retf
lods
ds
jne
repz
sub
movs
xchg
fidivr
xchg
inc
xor
pop
pop
call
add
iret
sbb
cdq
scas
and
dec
push
ins
sti
add
pop
xlat
dec
fstp
add
inc
mov
mov
retf
in
loopne
stc
dec
sub
and
inc
mov
les
jns
push
and
push
inc
leave
adc
cmps
push
aas
cmp
mov
test
mov
sbb
push
dec
out
mov
push
outs
push
fdivp
mov
repnz
adc
xor
add
(bad)
sub
test
jno
push
call
inc
(bad)
shl
add
jns
xor
cmc
mov
push
xchg
fisttp
test
cmp
mov
pop
into
mov
add
mov
sub
mov
fwait
test
xor
fist
aad
jp
inc
test
ins
imul
jne
dec
push
fidiv
fnstsw
push
dec
push
sub
dec
neg
pop
out
mov
mov
jmp
xchg
inc
cmp
fdivr
xchg
inc
mov
arpl
mov
outs
fild
push
cmp
jmp
sti
pop
sbb
(bad)
mov
test
sub
outs
cmc
test
pmulhuw
aad
mov
pop
adc
push
jb
rol
int
xor
mov
push
fdiv
and
fnstcw
inc
cli
mov
dec
mov
push
in
aas
iret
loope
push
mov
adc
or
test
lds
mul
mov
je
(bad)
cmps
mov
dec
test
call
cmp
adc
inc
mov
(bad)
fmul
call
or
or
loope
jle
push
xchg
push
cmp
mov
cmc
imul
xor
popa
sbb
xchg
push
mov
push
jno
xchg
sahf
pusha
dec
cmp
aas
(bad)
xlat
div
pop
cmp
cld
xor
sbb
sahf
shl
push
not
je
inc
jae
fisubr
jae
jle
dec
aaa
mov
fsubr
fs
jmp
retf
or
mov
idiv
cmps
outs
push
ficom
imul
dec
or
pop
(bad)
ja
push
mul
cmp
out
push
fisubr
push
in
push
sbb
and
xchg
push
aam
test
pop
sbb
push
popa
std
and
inc
xor
push
lahf
pop
fbstp
mov
nop
push
inc
push
aaa
pop
xchg
sbb
sub
adc
mov
popa
mov
pop
ins
fcomp
jns
sbb
cwde
jns
je
in
add
bound
xor
dec
(bad)
ja
jnp
mul
call
not
ja
mov
mov
xchg
pop
xchg
test
sub
mov
movs
in
pop
mov
add
cmp
dec
ja
xor
xor
xchg
jno
pushf
sub
push
daa
pop
pop
sbb
dec
mov
sar
pop
loope
inc
xchg
rcr
(bad)
pop
data16
ins
cmp
ds
jle
movs
cs
add
xchg
scas
int3
fwait
push
sub
lods
or
sbb
and
call
gs
das
xor
or
or
push
ds
pop
(bad)
repnz
jnp
inc
lods
cwde
scas
cli
js
(bad)
inc
fptan
into
push
sbb
ret
(bad)
in
aam
pop
push
mov
fwait
shr
cmp
add
and
adc
mov
or
mov
mov
mov
mov
shl
pop
jmp
fild
aad
into
retf
fs
aam
and
std
js
mov
mov
add
jl
pushf
aaa
mov
retf
jb
xchg
cs
xchg
xor
ret
jecxz
mov
and
jno
xor
ror
fist
test
shl
mov
adc
mov
xor
daa
push
jg
xchg
push
mov
cdq
scas
sub
dec
loop
xchg
mov
dec
mov
or
or
jge
mov
imul
leave
pushf
fcom
iret
cld
lahf
or
adc
stos
std
mov
outs
ins
push
or
(bad)
clc
in
lods
xchg
xor
push
test
add
fild
mov
and
dec
mov
(bad)
aas
add
ss
sub
inc
mul
arpl
pop
sbb
ds
aas
fisub
push
inc
mov
imul
pop
sub
pop
push
in
popf
inc
stos
mov
and
ret
aas
lods
(bad)
xchg
jnp
(bad)
call
pop
push
dec
test
cmps
fnclex
push
or
sub
not
ds
loop
shl
enter
les
cli
jbe
pop
into
ins
dec
adc
cld
jne
inc
sar
js
adc
add
sbb
sbb
dec
push
cmc
sub
pop
xor
test
fchs
stos
push
(bad)
sub
jecxz
icebp
push
or
push
and
iret
xchg
dec
xor
xor
xor
cmp
jecxz
push
test
push
and
das
popa
lock
push
dec
ins
jbe
inc
or
xor
dec
js
add
popa
cmp
mov
push
mov
mov
adc
mov
pop
int3
or
mov
add
les
aas
push
xchg
jmp
test
or
retf
addr16
mul
sub
js
jecxz
cli
jge
mov
nop
nop
popf
sbb
dec
out
cmp
lahf
sub
(bad)
xor
sahf
and
in
mov
imul
pushf
xchg
test
inc
test
pushf
and
xchg
popa
jb
push
stos
mul
sub
nop
out
adc
xor
in
into
push
fadd
mov
inc
out
xor
out
inc
xor
stos
(bad)
lods
cmp
movs
sbb
xor
jle
dec
loopne
dec
add
xchg
xor
sbb
adc
jmp
js
das
loope
jmp
rcr
jo
add
cmp
add
sub
add
lock
lock
mov
(bad)
and
jae
loop
mov
call
cdq
in
pop
es
fisttp
jge
popa
enter
add
test
push
rcl
inc
scas
cdq
clc
out
jg
mov
mov
imul
imul
rol
xchg
ret
cmp
cmp
xchg
push
fwait
dec
jmp
xchg
lea
into
adc
sub
mov
mov
pop
aaa
(bad)
test
in
or
fwait
dec
jge
pop
push
adc
ret
push
(bad)
lahf
fdiv
or
jo
xor
dec
dec
arpl
jnp
test
leave
jp
shl
in
mov
adc
fmul
or
mov
sub
cmp
loopne
or
add
je
sti
pop
dec
dec
cmp
dec
sub
into
mov
mov
fwait
or
jb
adc
adc
sub
jnp
(bad)
imul
je
pop
iret
(bad)
outs
sub
out
push
sti
cmp
mov
mov
or
in
or
mov
jo
in
adc
(bad)
fimul
outs
out
mov
lock
xor
and
mov
pop
mov
pop
mov
xor
jnp
aam
nop
adc
pop
cmp
stc
gs
push
lods
bswap
add
lock
adc
mov
not
cmps
mov
xlat
and
push
data16
xchg
dec
cli
fs
cld
mov
sbb
lock
mov
test
pushf
mov
cmps
(bad)
dec
pop
xlat
mov
into
aaa
xor
jle
jae
ins
or
test
jmp
aam
test
or
or
outs
xchg
or
aaa
std
jns
pusha
addr16
inc
test
(bad)
fst
cmps
popa
cwde
pop
call
je
adc
mov
(bad)
push
xor
out
(bad)
dec
loope
add
xchg
mov
addr16
jg
(bad)
arpl
dec
sub
pop
inc
inc
in
cmps
jne
sub
xlat
pop
xchg
sahf
xor
inc
cmp
inc
popf
fisttp
ins
sub
outs
cmp
pop
fadd
js
or
dec
loope
adc
and
dec
das
ror
aaa
in
ja
fwait
fs
in
sub
inc
cmps
mov
(bad)
jno
ds
adc
jo
shl
add
lods
add
push
retf
pop
mov
jmp
push
cli
dec
fcomp
add
clc
xchg
mov
lods
or
(bad)
loopne
cli
pop
fisubr
push
(bad)
pop
sbb
test
push
cli
inc
jle
std
xchg
mov
dec
outs
adc
and
pop
pusha
fmulp
mov
cmp
fst
add
mov
shr
mov
pop
push
into
and
mov
cmp
ret
jge
sub
fbstp
data16
dec
repnz
ret
xor
call
or
frstor
clc
mov
cmpxchg
les
adc
push
shl
adc
cmp
iret
das
jl
cld
aad
push
jmp
(bad)
outs
test
jle
mov
out
mov
imul
pop
scas
mov
lods
mov
mov
and
fdivr
xchg
addr16
or
fld
(bad)
mov
outs
aam
or
or
xchg
fild
jmp
scas
xor
shr
retf
pusha
inc
stc
pop
xor
(bad)
addr16
scas
je
bound
add
xchg
movs
cmps
iret
(bad)
sub
movs
xor
ds
fistp
into
sbb
int
pop
sbb
mov
and
dec
pop
lods
lock
dec
popaw
shl
das
adc
out
mov
jle
push
lock
push
imul
mov
push
idiv
in
(bad)
adc
enter
movs
leave
pop
pop
pop
pusha
leave
call
cmp
sbb
and
stos
sahf
adc
lea
pop
ja
repz
(bad)
jge
and
sub
mov
mov
jmp
sub
fsub
repz
adc
add
dec
push
xchg
adc
mov
test
sbb
int3
pop
mov
bswap
mov
dec
xchg
retf
arpl
mov
arpl
sub
popa
mov
xlat
mov
adc
cmp
ret
ja
sbb
jb
jmp
xor
cmps
ds
pop
mov
fldcw
icebp
xlat
hlt
xor
pop
sahf
jnp
cld
daa
mov
push
loopne
inc
mov
or
xchg
ins
or
pusha
mov
inc
mov
sub
or
cmp
pop
xor
cld
pop
cmp
lea
dec
ret
add
pop
cmp
dec
imul
outs
scas
cmp
xchg
adc
xor
push
fs
lods
mov
xor
xchg
pop
push
rcl
out
sub
adc
add
push
stos
popf
mov
movs
jmp
pop
push
inc
sti
mov
cmps
gs
in
push
mov
push
sbb
fnsave
cmp
cmps
test
mov
ins
push
jle
jnp
add
imul
fmul
sub
lock
inc
fiadd
dec
sar
mov
popf
push
outs
stos
jb
dec
dec
pop
sub
(bad)
mov
test
xchg
in
stc
cwde
(bad)
aad
cmp
add
cmp
mov
outs
scas
fild
xchg
pop
out
pop
dec
mov
popa
test
fld
aad
jae
add
mov
ss
adc
in
add
jecxz
xchg
sub
(bad)
in
test
les
inc
or
add
cmc
das
adc
xchg
les
dec
cld
xor
call
iret
cmp
dec
outs
xlat
mov
cli
inc
pop
mov
xlat
test
cld
in
iret
add
xlat
inc
push
imul
aaa
jp
add
adc
outs
push
imul
dec
or
cmp
xchg
movs
adc
push
xchg
sub
scas
sub
pop
lock
push
mov
push
add
(bad)
nop
lods
xor
je
sbb
and
cmc
popf
lds
and
or
imul
pop
ror
idiv
iret
ins
lods
lahf
push
outs
xchg
jmp
cmp
ss
jno
les
bnd
addr16
xor
cmp
cmp
out
cdq
in
sbb
jns
loop
test
dec
push
repnz
jmp
scas
sbb
jo
mov
fisttp
call
jp
mov
inc
int3
mov
scas
adc
mov
sti
mov
aad
sub
test
xor
(bad)
jg
(bad)
mov
jmp
mul
fadd
adc
ja
mov
(bad)
arpl
loopne
in
add
jle
int3
jl
(bad)
in
inc
and
push
or
dec
xchg
sub
stos
call
push
aaa
xchg
adc
(bad)
fwait
sbb
ror
xchg
sbb
cs
push
lods
mov
es
smsw
xchg
push
ins
sub
outs
in
daa
jecxz
xchg
outs
loop
mov
cmp
jne
rcr
ret
(bad)
mov
call
aas
push
and
test
jge
retf
fsub
or
pusha
test
or
rcr
and
dec
dec
sub
js
adc
push
add
cmp
in
iret
jmp
pusha
mov
jno
rcr
xor
arpl
jmp
fwait
mov
pop
jg
cld
cmp
in
(bad)
add
retf
xor
mov
adc
xchg
inc
xchg
popa
lods
rol
pop
cmp
mov
sti
std
add
fsub
int
xor
pop
adc
mov
dec
es
xor
psrld
les
jmp
imul
inc
xlat
jnp
inc
dec
jp
sbb
adc
adc
jmp
pop
data16
arpl
inc
mov
xor
sub
lahf
adc
and
fild
imul
ret
pop
mov
leave
lods
repz
inc
imul
jns
test
and
nop
mov
sub
(bad)
in
fistp
nop
rcl
pop
add
dec
mov
jns
dec
popa
sub
mov
push
cli
sti
push
cmps
sub
sti
retf
loope
push
in
fisub
pop
arpl
dec
sub
jbe
or
pop
(bad)
(bad)
inc
or
jns
and
xchg
sbb
jno
ror
sub
inc
pusha
add
mov
outs
cmp
xchg
pop
pop
fidiv
dec
push
pop
mov
das
icebp
cmp
and
push
xchg
pop
push
fild
loop
xchg
inc
cli
mov
js
xchg
sub
out
outs
das
mov
adc
call
lods
or
and
push
cmp
ror
xchg
add
mov
out
jne
fldenv
jge
ja
je
shl
push
mov
jne
out
rcl
or
pop
shr
or
test
jae
dec
push
mov
pop
mov
jecxz
push
and
sbb
stc
cli
adc
popa
out
xchg
sub
jbe
pop
cmps
xor
xor
ins
lahf
(bad)
inc
ds
movs
cdq
jg
xchg
cmp
xchg
push
test
ret
pop
add
cmp
lea
shl
sbb
xchg
jg
mov
sbb
pop
loopne
mov
es
retf
or
int
pop
pop
xchg
xor
fild
cmp
fsubr
arpl
adc
aam
arpl
dec
or
pop
mov
fld
sbb
or
(bad)
mov
call
sbb
in
les
xchg
sbb
xchg
sub
jp
cmps
div
(bad)
(bad)
mov
xor
and
ss
inc
pop
sbb
fistp
jmp
fldenv
call
sub
inc
or
(bad)
mov
sar
inc
rcl
jmp
mov
pop
pusha
inc
inc
dec
in
jbe
lahf
jle
ss
add
retf
shr
pop
dec
es
add
mov
jg
call
daa
into
adc
cwde
repz
inc
push
jne
adc
sub
mov
rcr
and
sbb
add
sbb
mov
push
and
retf
arpl
dec
add
mov
xchg
jecxz
(bad)
arpl
adc
pop
stos
cmp
mov
jne
adc
sbb
repz
add
test
dec
push
ss
sub
jg
jle
xchg
cmp
js
cld
js
aas
mov
mul
adc
sbb
out
imul
test
movs
inc
mov
mov
call
push
jge
pop
push
dec
push
mov
adc
das
xor
mov
imul
fidiv
iret
in
and
mov
cmp
pop
pop
push
adc
push
les
push
out
mov
mov
adc
inc
test
mov
aaa
add
cmc
ret
pop
xlat
pop
xor
scas
out
sbb
jmp
fwait
loop
adc
xchg
sar
arpl
(bad)
popf
lods
pop
cli
(bad)
clc
imul
mov
add
push
dec
mov
es
add
and
je
cmp
ret
aas
jp
jp
dec
mov
or
cwde
dec
sub
sbb
cmp
fidiv
mov
call
sbb
loop
or
cmps
xor
into
retf
dec
retf
xchg
pop
imul
cli
jg
enter
popf
sub
clc
outs
jns
jbe
outs
inc
call
sbb
jmp
adc
imul
inc
imul
push
lahf
pop
mov
dec
sub
push
loopne
push
je
repz
fs
cmp
add
sub
jo
cmc
stos
ins
jg
mov
xchg
dec
add
or
dec
jmp
and
test
addr16
push
add
mov
gs
sub
or
mov
jae
dec
dec
xlat
jbe
xchg
aad
jo
sub
ins
ja
xchg
popa
or
mov
cmps
dec
inc
idiv
mov
pop
sbb
in
mov
push
fisttp
add
(bad)
js
and
jmp
or
xor
pop
add
aam
jecxz
not
es
xchg
xor
sbb
or
cmp
jns
cmp
xchg
bound
adc
aaa
gs
xchg
pusha
xor
dec
add
or
jg
repnz
call
pop
scas
dec
cmp
les
pop
aaa
mov
(bad)
ds
dec
in
pop
push
(bad)
mov
dec
jmp
jecxz
mov
mov
push
add
push
aam
stos
mov
fldenv
gs
data16
scas
inc
fcmovnb
stc
sub
inc
and
sub
inc
gs
cmp
jbe
cmp
pop
or
jnp
test
dec
in
movs
scas
xchg
push
jp
shl
jp
ins
sub
pusha
fdiv
or
sub
fmul
(bad)
fcom
xchg
lock
mov
sbb
cmp
lds
cmp
inc
dec
mov
mov
rep
xchg
rcr
frstpm(287
dec
fwait
ret
mov
mov
sbb
add
push
jmp
xchg
call
lea
cdq
scas
imul
and
sub
loope
popf
ins
adc
cmps
jp
mov
jmp
je
sub
fwait
inc
add
ret
mov
movs
cmc
mov
mov
sbb
test
imul
or
or
xchg
dec
push
pushf
shl
cmp
div
outs
loope
mov
shl
shl
cmp
push
xlat
into
std
dec
icebp
jns
pop
xor
ror
imul
mov
fsub
inc
stos
and
ret
test
mov
xor
gs
loop
sub
(bad)
sub
fistp
fwait
xchg
loope
jnp
clc
cmp
push
clc
mov
popf
fstp
dec
and
pop
pop
mov
aas
loopne
loopne
mov
xor
jnp
dec
call
retf
les
xchg
xor
pusha
fsubr
push
daa
scas
daa
mov
inc
push
fidivr
outs
call
ja
mov
(bad)
jo
idiv
pop
mov
sbb
pop
inc
cmc
ja
imul
pop
and
mov
scas
dec
stos
jp
inc
and
les
jnp
in
dec
jns
lahf
adc
popf
sub
scas
pop
inc
outs
ins
jg
lea
ds
adc
sahf
das
int3
jl
std
scas
mov
and
mov
out
(bad)
dec
ret
dec
ins
scas
and
nop
xor
mov
lds
in
cmp
(bad)
outs
je
jp
sbb
push
pusha
ds
mov
mov
cmp
pop
popf
fcmovu
pop
xor
pop
leave
pop
(bad)
cmp
shl
ins
mov
mov
jle
retf
hlt
xchg
outs
sbb
mov
push
fldcw
mov
add
or
push
dec
outs
ror
push
mov
call
cmp
push
push
push
push
add
pusha
sub
es
inc
xchg
cmc
arpl
add
mov
and
mov
and
fisttp
mov
and
test
outs
aaa
dec
outs
imul
push
push
lock
cmps
in
data16
pop
test
repz
stos
lock
cwde
div
outs
xchg
inc
in
aaa
pop
test
xchg
pop
mul
mov
xchg
adc
test
cmp
pop
loop
inc
push
mov
mov
or
lods
das
pop
jle
push
xor
imul
div
jle
push
cmps
inc
fdiv
push
push
fwait
outs
mov
gs
out
les
into
xor
or
pop
into
call
dec
push
jle
sbb
adc
push
int3
(bad)
fiadd
je
fiadd
or
xchg
ror
mov
lahf
adc
dec
mov
cmps
fucomi
(bad)
(bad)
out
jp
mov
int3
xchg
xor
add
jmp
cmp
ret
inc
or
js
cmps
fwait
xchg
std
xlat
pop
jns
pop
aas
push
lea
xchg
pop
add
cwde
and
imul
idiv
(bad)
out
dec
je
mov
leave
xlat
fisttp
sti
mov
xchg
aam
inc
in
outs
mov
call
adc
push
sub
jp
(bad)
mov
cdq
sub
cmps
popa
jmp
clc
pop
pop
add
scas
add
ret
xor
mov
jo
sbb
retf
in
movs
dec
cmp
aam
test
jecxz
jae
fbstp
mov
or
xchg
inc
adc
(bad)
fldenv
(bad)
or
fidiv
(bad)
ss
int3
inc
int3
les
imul
jmp
call
lods
(bad)
iret
jbe
cmp
popf
rol
sti
cmp
fisubr
iret
cs
ds
push
arpl
ja
xor
popa
fild
cmp
ds
daa
xchg
xchg
loop
add
push
sbb
mov
or
mov
sub
daa
test
jle
clc
inc
adc
in
cld
xor
stc
data16
sbb
test
sbb
jle
stos
mov
add
clc
add
push
jae
(bad)
adc
scas
or
mov
push
cld
pop
sub
mov
adc
mov
(bad)
pop
mov
push
fidiv
mov
jle
jns
iret
adc
repz
fcmove
mov
test
sub
aaa
cwde
xor
inc
sbb
xor
ror
sub
call
sbb
fst
jecxz
and
pop
xor
outs
pop
ss
daa
(bad)
mov
mov
jmp
jo
cdq
mov
push
sub
movs
mov
in
js
xor
cmp
dec
add
pop
or
fwait
in
push
das
push
sub
pushf
pop
ds
stc
(bad)
stc
mov
xchg
push
cmps
sbb
or
je
sub
mov
or
cs
cmp
(bad)
retf
call
push
fcom
mov
(bad)
hlt
adc
mov
(bad)
jl
dec
rol
dec
frstor
push
mov
daa
imul
pop
adc
mov
add
xor
(bad)
xchg
sbb
cld
je
test
retf
test
dec
xchg
test
jbe
popa
sub
shr
mov
or
add
loope
(bad)
xchg
pop
jg
stos
out
dec
movs
sbb
enter
dec
jne
xchg
mov
mov
jmp
daa
rol
ss
sub
lock
push
test
scas
int3
jmp
in
push
scas
and
sub
jo
pop
mov
mov
(bad)
outs
dec
pop
jno
jb
ds
jp
movs
sub
inc
out
sub
cmc
fstp
cld
mov
icebp
cs
adc
cld
pop
dec
pop
repnz
aaa
push
loopne
imul
add
cwde
lods
call
xchg
scas
std
rcr
cmp
mov
cmp
or
pop
cmps
test
push
sti
adc
xchg
dec
xor
stos
xor
mov
minps
mov
sub
mov
test
ja
mov
test
loopne
adc
mov
into
sar
mov
dec
aaa
or
push
pcmpeqb
xchg
mov
test
js
int3
mov
sti
sbb
outs
or
push
xchg
sbb
popw
test
pop
in
ret
lods
inc
or
or
mov
pusha
xor
jmp
iret
fsub
addr16
out
and
xor
data16
stos
push
repz
jg
stos
cmp
mov
aam
and
or
out
cmp
fcmovne
xchg
and
xchg
mov
fwait
pop
ss
push
daa
popa
push
shr
sub
(bad)
pusha
aad
sub
mov
sub
jbe
sahf
arpl
mov
jmp
popa
fidiv
pop
jno
mov
mov
mov
into
xchg
inc
pop
mov
xchg
mov
lea
ret
jg
hlt
je
loope
mov
out
or
or
lock
xchg
sub
movs
sbb
mov
mov
loop
adc
or
pushf
repz
and
add
ret
mov
xor
add
rcr
(bad)
mov
nop
adc
nop
ret
fisubr
push
fsub
shl
xchg
push
loope
push
xor
or
xchg
mov
mov
leave
cs
out
popa
xlat
fistp
push
jge
call
mov
mov
test
fidivr
call
ja
inc
inc
xor
gs
cmc
cli
popa
jo
jno
adc
mov
and
fs
movs
test
hlt
dec
out
pause
nop
stos
je
mov
test
bound
and
dec
jne
fadd
and
aam
popa
loope
dec
and
jmp
jbe
jmp
repz
adc
lahf
jns
out
dec
xchg
add
and
lahf
xor
cdq
add
sbb
jl
pop
imul
dec
sbb
test
xlat
idiv
test
push
loop
ss
test
inc
mov
mov
inc
xor
mov
mov
lahf
jmp
push
(bad)
cmp
je
popf
add
cmps
shr
shr
arpl
jns
jmp
(bad)
inc
and
fwait
push
jg
push
adc
jae
std
js
addr16
rol
out
push
repnz
std
and
lahf
xchg
cwde
inc
mov
jmp
sahf
push
stos
sbb
das
sub
jg
retf
mov
mov
js
cdq
fild
dec
test
jmp
adc
sbb
xor
mov
and
cmp
outs
dec
sbb
loopne
jns
cmp
cld
sub
in
ror
pop
sub
imul
pop
dec
punpcklwd
jecxz
cmp
ret
pusha
jb
cmp
jmp
dec
cmp
and
mov
div
jo
mov
aam
mov
mov
loope
pop
pop
cmps
mov
cmc
(bad)
xchg
lds
scas
fadd
cli
fidiv
sub
xchg
mov
adc
add
jecxz
push
std
ins
push
in
in
out
pusha
pusha
pop
pop
xchg
pop
push
mov
lods
push
(bad)
popa
idiv
or
mov
push
fwait
xchg
inc
inc
pop
imul
ja
or
cmp
mov
push
bound
mov
mov
and
ds
dec
inc
les
les
or
cmp
test
cmp
(bad)
pop
lds
sub
daa
aaa
sub
dec
inc
dec
jle
out
xor
aam
test
mov
and
mov
mov
std
out
aad
mov
sahf
fidiv
fwait
push
fnstsw
inc
dec
inc
pop
jo
jle
fsubr
into
hlt
push
movs
jae
sub
mov
in
dec
mov
clc
cmp
sbb
movs
aam
cld
into
sbb
mov
xor
dec
dec
push
in
xchg
cld
push
xor
xor
ficomp
in
test
lahf
mov
cmp
inc
repz
icebp
sbb
icebp
add
xchg
das
inc
mov
sbb
cmp
inc
lock
pop
dec
xchg
mov
ja
shl
arpl
out
or
or
adc
xlat
movs
jecxz
or
aam
add
and
frstor
cmps
inc
fld
js
mov
inc
or
cli
adc
adc
sbb
(bad)
xor
outs
mov
xlat
mov
out
jecxz
jecxz
mov
cmp
sahf
xchg
and
pop
and
lahf
or
push
(bad)
mov
jl
jae
sti
jmp
ins
(bad)
out
aas
cmp
sbb
pop
out
js
nop
xchg
hlt
fsub
loopne
jae
pop
cld
jae
pop
icebp
lods
mov
inc
in
add
das
retf
mov
and
test
jne
cmps
sub
retf
test
inc
jmp
sub
lods
and
int3
(bad)
and
ins
mov
aaa
je
xchg
shl
test
adc
cmpxchg
sub
and
xor
cmps
mov
or
les
mov
pop
loope
ins
or
cs
shl
cmp
inc
jle
aam
inc
or
mov
aad
outs
loopne
nop
and
fiadd
mov
sar
push
fild
add
and
ds
mov
jg
sar
xchg
in
jp
ins
mov
jp
cs
(bad)
fnstsw
pop
jmp
hlt
call
cmp
lds
std
mov
and
ror
xor
xchg
rcl
adc
into
sahf
(bad)
pop
out
push
mov
or
sbb
jae
aaa
push
mov
mov
xor
(bad)
sub
(bad)
scas
sbb
inc
mov
repz
push
retf
cmp
arpl
es
push
icebp
xor
adc
mov
cmp
mov
cmp
fwait
pop
xchg
shl
call
xchg
inc
mov
lea
cwde
scas
cmp
or
inc
pop
cwde
push
cwde
cs
cmps
jo
movs
jl
mov
loopne
in
mov
arpl
pop
fwait
mov
mov
lods
jecxz
dec
cld
aaa
or
lods
adc
and
retf
cmp
repnz
aaa
ficomp
mov
jecxz
add
mov
or
dec
inc
sbb
imul
mov
add
fimul
ret
xchg
push
fidivr
rol
call
aas
push
test
sbb
and
rol
ret
cmp
cmp
popa
pop
inc
(bad)
into
mov
outs
js
repnz
int
lahf
sub
pop
cmp
pop
xchg
dec
adc
mov
fld
lods
retf
fcmovu
cmc
rcr
fist
je
ja
jns
xor
mov
xchg
dec
js
ins
stos
push
inc
mov
or
push
push
push
cwde
and
dec
inc
(bad)
out
ds
test
adc
and
adc
inc
je
lods
inc
mov
dec
sbb
loopne
dec
xchg
mov
ja
cld
(bad)
ds
dec
dec
push
push
addr16
data16
push
dec
push
imul
in
and
out
inc
xor
xchg
adc
add
nop
data16
scas
sbb
aam
and
daa
popf
jae
ror
cmc
push
xchg
retf
mov
inc
nop
push
xchg
icebp
push
or
and
dec
adc
xlat
out
xor
test
aam
(bad)
sbb
mov
pop
movs
or
mov
xor
xchg
movs
jnp
push
xor
and
mov
pop
mov
(bad)
jae
lods
cli
shl
popa
ret
cld
xor
mov
adc
fs
mov
loop
pop
or
sti
shl
or
cmps
cmp
pop
pop
adc
adc
or
and
mov
scas
push
mov
add
test
mov
test
int
stos
dec
dec
and
pop
scas
jb
aam
stc
xchg
sub
hlt
cmps
sbb
jns
sub
sbb
dec
xchg
inc
call
xchg
inc
ins
sub
or
pop
xchg
fist
mov
jne
sbb
pop
movs
popa
call
mov
dec
or
ror
adc
imul
cmp
pop
mov
pop
mov
cs
mov
cmp
and
data16
add
rcl
sub
mov
cdq
mov
add
xchg
push
outs
jp
push
ret
add
sahf
hlt
test
call
mov
mov
jp
(bad)
les
and
test
jne
test
data16
arpl
imul
enter
rcr
outs
xor
push
out
retf
gs
ins
ja
lods
or
jb
pop
adc
lods
int
sub
(bad)
imul
adc
adc
mov
(bad)
std
sbb
jo
cmc
stos
jmp
mov
outs
(bad)
cwde
movs
mov
aam
xchg
adc
clc
mov
pop
rcr
xor
inc
xor
xchg
push
xor
sbb
ds
push
cs
pop
cld
outs
popf
in
xor
and
pushf
adc
xchg
pop
inc
mov
ja
mov
test
js
jp
fcom
ins
dec
xchg
(bad)
les
jo
jno
mov
mov
out
retf
test
fs
adc
(bad)
fldenv
fnstsw
pushf
add
or
in
(bad)
cmps
pop
cmc
dec
pop
lea
sub
test
fmul
(bad)
(bad)
push
in
ret
nop
dec
dec
xor
out
pop
jp
adc
test
adc
fld
push
cmp
xchg
and
mov
loopne
test
push
dec
jno
mov
jae
adc
xchg
pop
sbb
call
push
cmps
mov
sub
add
sahf
outs
cmp
or
mov
lods
repnz
dec
jne
cmp
mov
inc
scas
pop
push
jle
xor
cmp
xor
and
xchg
push
aas
sub
sub
and
movs
xor
push
xor
test
iret
mov
and
sub
dec
xchg
rol
loop
int3
int3
add
popf
push
adc
repz
mov
nop
adc
test
dec
sbb
stos
fidiv
lea
call
sbb
mov
hlt
int3
jmp
daa
mov
cmp
jne
dec
das
xor
pop
scas
int
pop
jne
adc
cdq
fild
jnp
add
(bad)
dec
push
jmp
repnz
xor
fwait
mov
sti
mov
and
inc
(bad)
mov
out
ror
cmp
and
addr16
add
mov
daa
cmps
sbb
movs
cli
(bad)
arpl
xchg
xchg
dec
test
das
idiv
cmp
aam
dec
movs
cmp
xchg
mov
jnp
mov
jg
adc
ja
ss
call
inc
jge
or
cli
xor
loop
sbb
add
rcr
imul
mov
jae
sub
ret
jmp
dec
in
cli
arpl
popf
shr
push
inc
sti
(bad)
mov
ins
jle
nop
fadd
xchg
retf
dec
sqrtps
pop
mov
sbb
add
push
mov
push
test
xor
cwde
lahf
dec
push
xchg
jnp
mov
pop
mov
cmps
sti
pop
imul
outs
jmp
jecxz
and
(bad)
push
xchg
movs
mov
lock
mov
add
cld
rol
es
lea
jno
sub
adc
and
movs
sub
adc
loopne
cli
push
into
mov
jnp
cs
lods
retf
js
lahf
fild
pop
ret
jns
mov
test
gs
es
xor
mov
jno
mov
mov
push
int
ror
xor
add
sub
call
mov
dec
mov
test
xchg
push
jns
mov
(bad)
xor
mov
iret
loop
lahf
pop
cmp
pop
(bad)
cmp
mov
test
inc
(bad)
cmp
fnstcw
mov
test
xchg
das
push
sbb
pop
in
xchg
(bad)
sbb
pop
ins
mov
lds
or
(bad)
outs
jae
add
loope
and
sbb
ins
rol
bound
movs
aas
dec
push
sub
push
xchg
out
or
fidiv
adc
jae
repz
ja
xor
xchg
cwde
jg
fst
fcomp
popa
dec
imul
repnz
leave
arpl
xchg
lods
sbb
test
push
push
sbb
sahf
sub
inc
out
in
and
imul
push
push
push
daa
add
sbb
jle
mov
mov
lods
ret
(bad)
push
push
xchg
pop
(bad)
cld
mov
fwait
fs
pop
jb
stos
scas
fild
jae
aam
inc
mov
mov
add
sbb
out
test
xor
pop
cmc
mov
fsubr
adc
jne
in
stos
push
daa
push
xor
mov
test
jl
addr16
stc
jmp
pop
mov
loopne
sub
sbb
push
retf
xor
aam
xchg
dec
cld
in
pop
fmul
in
jge
xchg
ret
mov
icebp
(bad)
cmp
clc
xchg
xor
fsub
xor
adc
loope
mov
scas
mov
loop
shl
inc
jmp
and
sbb
ret
adc
jmp
inc
sub
xor
jbe
inc
pop
clc
pusha
mov
ret
enter
mov
sbb
daa
int3
xchg
jmp
fbld
out
out
sub
xlat
adc
mov
stos
and
mov
adc
pop
and
inc
leave
mov
pushf
lahf
in
xchg
loop
(bad)
add
or
(bad)
out
mov
mov
xchg
mov
mov
cmp
sahf
mov
push
outs
imul
das
sar
xchg
mov
dec
xchg
sub
or
add
ds
popa
push
pop
scas
xor
(bad)
mov
inc
ss
xor
add
pop
xchg
(bad)
call
(bad)
(bad)
cdq
mov
hlt
sahf
mov
mov
xchg
fsub
adc
xchg
sbb
xlat
jns
dec
icebp
push
icebp
pop
mov
sub
jnp
mov
clc
adc
and
jl
inc
dec
xchg
stc
add
jno
(bad)
icebp
adc
mov
gs
adc
ret
repz
pop
sbb
jl
pop
inc
shl
push
fmul
jmp
js
test
inc
add
jno
jno
push
xor
mov
sub
cmp
punpcklwd
arpl
loopne
inc
or
icebp
and
arpl
jmp
pop
test
leave
call
dec
in
sub
leave
ficomp
xchg
mov
aad
test
add
cdq
aad
adc
outs
pop
lds
mov
push
xchg
popf
pop
inc
xchg
mov
rol
cwd
push
rcr
ret
pop
loopne
icebp
push
xor
je
mov
lods
cmc
(bad)
or
fld
stos
cmp
adc
test
or
jb
ja
retf
push
loopne
in
mov
dec
ins
daa
clc
jecxz
retf
inc
in
mov
sbb
pop
dec
in
push
xchg
bound
iret
sub
call
lahf
mov
xchg
and
dec
xchg
leave
push
xor
std
sub
outs
repz
dec
out
cli
jmp
(bad)
jp
(bad)
jae
fwait
mov
xchg
div
or
je
aas
into
rol
adc
repz
mov
sbb
js
shr
cwde
add
fst
mov
xchg
call
rcl
or
inc
fcmovne
arpl
pop
call
mov
push
jo
lods
stc
jl
mov
mov
xor
dec
add
mov
xchg
pop
xchg
call
(bad)
(bad)
add
repz
mov
ins
push
call
loopne
adc
movs
sbb
int3
mov
retf
ins
xor
xchg
aaa
movs
xchg
dec
movs
push
fldcw
imul
pop
or
test
push
dec
mov
inc
mov
ja
stc
inc
pop
pushf
mov
pop
repz
leave
push
shr
jmp
push
sbb
or
test
rol
xchg
aaa
push
inc
frstor
lea
sbb
in
xor
xor
pop
pop
iret
dec
icebp
adc
add
daa
jae
sub
fwait
mov
xlat
mov
add
add
(bad)
in
aaa
or
sbb
imul
into
jns
shl
fwait
mov
je
mov
dec
xor
jne
jge
adc
in
xor
adc
inc
in
test
dec
neg
imul
nop
inc
mov
or
stos
pop
or
pop
mov
aas
sbb
into
cli
jne
or
mov
rcl
xor
or
mov
sub
mov
ja
mov
push
sub
mov
adc
leave
or
adc
clc
repnz
icebp
repnz
pop
mov
into
add
sbb
fidivr
pop
mov
xor
and
daa
jno
inc
stos
cmp
mov
mov
inc
pusha
push
adc
cmp
das
outs
nop
sar
add
jbe
jl
mov
mov
pop
sub
outs
xlat
push
pop
iret
and
jmp
aas
cmps
and
cmp
pop
in
ja
mov
xchg
mov
pop
lock
jb
push
mov
cmp
inc
jb
iret
out
repnz
xchg
hlt
xchg
add
out
ins
fild
(bad)
ins
sbb
mov
jbe
popf
fwait
test
enter
adc
add
loope
push
dec
fisttp
xor
xchg
mov
ror
pop
inc
mov
mov
sbb
dec
inc
loop
mov
sbb
push
lods
push
inc
stos
inc
adc
call
push
xchg
mov
mov
dec
aad
sub
imul
cs
sahf
xor
dec
shr
test
inc
hlt
jmp
fdiv
push
fisubr
std
loope
pop
es
lods
scas
mov
xor
leave
mov
inc
xchg
push
aas
cmp
call
ret
stos
sti
popa
shl
sbb
mov
mov
(bad)
and
repnz
dec
repnz
mov
xchg
in
repz
cmp
stos
mov
push
push
push
sbb
ja
push
and
int
aam
leave
in
inc
aad
dec
or
(bad)
mov
fwait
push
(bad)
out
out
fistp
sti
cmc
pop
neg
cmp
dec
and
mov
cs
jae
add
and
test
jp
mov
fisubr
pop
stc
push
pop
test
call
cmp
xchg
movs
push
mov
test
pand
fadd
jo
mov
inc
out
jl
out
jp
cmp
sub
add
cmp
xor
cwde
push
jmp
ins
jmp
test
std
cwde
mov
inc
dec
iret
or
inc
dec
(bad)
test
(bad)
bnd
inc
sub
pop
jmp
ds
pusha
mov
sbb
scas
push
sbb
les
jmp
pop
dec
ins
ret
sbb
mov
shl
enter
fs
mov
repz
lods
lds
jno
jo
adc
inc
movs
cdq
mov
jno
dec
das
inc
daa
pop
outs
loop
cmp
(bad)
push
inc
jge
mov
scas
sub
sub
pop
fs
es
outs
dec
mov
add
(bad)
mov
pop
(bad)
ret
mov
xlat
test
das
push
in
movs
push
dec
mov
(bad)
jecxz
lods
jae
fdivp
pop
and
xor
jnp
adc
lds
jb
inc
cmps
mov
cdq
scas
jae
(bad)
cli
cmp
pop
call
es
jns
mov
jnp
je
jbe
xchg
dec
fs
cmp
push
in
(bad)
adc
je
xchg
iret
movs
sti
jne
(bad)
mov
sbb
xchg
jo
stc
icebp
bound
push
jns
cmps
push
ficomp
pop
pop
push
jp
stc
or
mov
scas
int
mov
ins
pop
cmp
inc
push
adc
cmp
xchg
retf
(bad)
fcom
mov
xor
pop
arpl
lods
pop
inc
imul
jmp
jo
xchg
ds
ins
and
or
mov
jle
pop
xor
inc
sahf
mov
dec
ss
mov
rol
inc
rcr
pop
push
fsub
lods
scas
aas
fild
mov
add
js
out
mov
fdivr
fidiv
cld
xchg
adc
jbe
mul
mov
mov
jge
repnz
or
jno
mov
xor
cld
fsubr
jle
in
xor
adc
dec
sub
in
fdiv
xor
xchg
add
xchg
out
sbb
xor
outs
or
mov
jno
std
out
call
outs
mov
out
inc
ds
xor
xchg
stc
in
adc
icebp
mov
mov
test
xor
push
leave
fld
mov
mov
mov
mov
mov
popf
lods
dec
retf
scas
loope
mov
sub
pop
cmps
cmp
dec
retf
sub
ins
xor
cmp
outs
hlt
pop
or
fdiv
adc
push
add
cdq
imul
aad
int3
xchg
loopne
push
scas
ret
in
and
xchg
sub
dec
cmps
inc
sub
mov
mov
sub
add
cmp
cmp
stos
fidivr
mov
call
sbb
je
das
mov
mov
adc
in
(bad)
push
inc
inc
(bad)
addr16
add
hlt
cld
pop
inc
mov
int3
and
setl
add
fnsave
fbstp
adc
xchg
sbb
sub
cmp
add
clc
into
fldcw
mov
cwde
sti
nop
jmp
addr16
jmp
sbb
call
mov
mov
fs
push
loope
and
sahf
jecxz
(bad)
and
jne
fild
xchg
add
and
dec
mov
jp
das
inc
pop
push
out
movs
sbb
mov
loopne
push
mov
ror
test
cmc
aas
jno
and
dec
inc
(bad)
mov
aam
rcr
scas
call
cdq
in
popf
push
enter
mov
imul
or
mov
mov
or
cmps
pop
fldenv
add
mov
push
out
xor
mov
xchg
push
stos
(bad)
popf
dec
xchg
test
cmp
stc
or
xor
xchg
mov
fdivrp
sub
sbb
and
test
lock
sub
imul
icebp
dec
inc
outs
call
pusha
mov
lods
jae
cmp
inc
lods
xsha1
cmps
mov
fisub
jmp
add
sbb
jo
push
jns
and
idiv
pop
es
mov
and
scas
push
sub
sbb
jle
xchg
stos
loopne
sub
push
test
(bad)
outs
mov
jns
add
or
and
push
scas
or
mov
add
dec
popa
push
mov
sbb
mov
xchg
mov
outs
shr
(bad)
pop
imul
lock
push
adc
test
jg
out
mov
(bad)
lahf
xchg
gs
inc
dec
push
test
(bad)
sub
std
mov
test
mov
into
inc
leave
shr
fcomp
ror
pop
push
aam
loop
xchg
xchg
pushf
and
sbb
jne
loope
mov
xor
mov
daa
push
outs
xlat
int3
and
jg
xadd
jle
push
and
repnz
cli
cwde
sub
mov
pop
aad
jne
scas
and
xchg
jp
(bad)
xchg
stc
or
call
mov
clc
aaa
aad
add
and
dec
mov
dec
cmps
dec
add
aaa
add
cmps
repz
xchg
aad
sbb
fldcw
test
ficom
inc
into
dec
jl
mov
(bad)
loopne
dec
mov
dec
scas
sahf
shl
push
cdq
shl
test
jl
aaa
(bad)
mov
cmp
dec
out
stos
fistp
xor
leave
fs
mov
cmps
adc
aaa
push
adc
jne
jecxz
add
into
adc
and
jae
add
and
mov
xor
lods
xor
mov
mov
test
add
ja
stc
adc
sub
jle
scas
movs
adc
or
mov
dec
scas
sub
cmp
jg
rcl
daa
push
mov
jge
push
push
fld
rcr
fs
or
sub
push
pop
cld
bswap
or
dec
sti
call
xor
into
(bad)
je
push
inc
jo
lods
jb
add
xor
mov
inc
or
mov
imul
retf
out
fsub
outs
inc
pop
add
aaa
fsub
or
mov
xor
push
mov
retf
arpl
aaa
mov
push
test
jg
inc
test
mov
sar
(bad)
out
dec
mov
cmp
cmps
jbe
dec
cmp
pop
or
mov
dec
cdq
sti
mov
je
stos
xchg
jb
les
xchg
xchg
call
mov
mov
or
adc
ret
dec
cmp
jge
fist
mov
pop
rcl
dec
(bad)
fist
imul
in
xor
or
xor
cmp
mov
inc
das
jne
fs
ret
push
or
bound
cld
fisubr
jb
iret
scas
or
ja
mov
das
loopne
aad
out
add
mov
jbe
mov
push
pop
outs
ins
jb
mov
loope
lods
sub
push
jl
xchg
into
cmp
sbb
push
or
cmp
js
cld
test
cmp
inc
pusha
cmps
jns
and
pusha
adc
(bad)
outs
outs
ror
stos
xchg
jno
repz
jnp
int
mov
sub
js
lock
xor
and
or
mov
outs
shl
and
and
push
aaa
sar
push
(bad)
imul
dec
dec
(bad)
loopne
mov
hlt
dec
shr
in
and
rcl
enter
jmp
ret
mov
push
push
cmp
or
out
imul
push
ins
dec
addr16
ins
test
mov
mov
xchg
push
adc
bound
jmp
es
and
or
jge
pop
daa
icebp
pop
jnp
push
mov
jno
sub
or
call
xchg
xchg
sti
(bad)
sar
cmps
dec
push
sub
sbb
jae
call
imul
mov
push
mov
xor
mov
scas
js
js
cmp
stc
jmp
shl
fld
push
aad
rcl
dec
ins
outs
or
rcl
pop
mov
mov
mov
push
or
sub
xor
mov
pop
fbld
mov
div
and
mov
push
inc
xchg
sbb
out
shl
inc
push
mov
popa
clc
jecxz
inc
xor
(bad)
jns
idiv
jns
iret
or
addr16
dec
popa
mov
xor
dec
jecxz
sbb
popa
call
js
dec
lds
bound
lahf
shl
shr
pushf
lods
mov
lahf
outs
(bad)
clc
push
xchg
jne
mov
jbe
in
call
dec
fdivrp
stc
push
and
pusha
inc
push
jo
xchg
in
inc
pop
push
mov
or
pop
push
aad
push
xor
mov
adc
push
fild
pop
jle
cmp
and
push
je
mov
es
idiv
cmc
sti
adc
lea
shl
jl
push
sub
xor
jge
adc
call
mov
cmp
mov
in
mov
int3
cmp
(bad)
outs
push
ficomp
je
adc
add
loop
ins
sahf
mov
mov
bound
pop
stc
lahf
in
test
and
(bad)
test
jg
fdivr
mov
jns
pop
jnp
or
rcr
imul
push
test
out
ret
mov
or
push
movs
(bad)
pop
ret
adc
test
pop
sbb
sahf
arpl
(bad)
dec
cmp
retf
push
int
mov
push
call
in
pop
in
cmp
xor
pop
js
push
loope
imul
push
cs
jb
das
sub
dec
pop
(bad)
mov
mov
scas
pop
jle
pop
imul
sti
ret
std
jns
add
lahf
mov
xchg
and
cmc
fxch
push
push
ss
xchg
lods
pop
jmp
loop
jbe
stos
dec
outs
shl
or
outs
int3
loopne
sub
icebp
lea
out
fnsave
fucomip
ret
dec
and
mov
(bad)
into
mulps
ja
mov
jmp
push
popf
ds
adc
jae
jae
cmp
rcl
aad
jmp
fs
repnz
cmc
(bad)
cmp
aaa
ja
aam
mov
xchg
loop
and
xlat
mov
or
loopne
bts
push
bound
mov
jae
lea
dec
mov
retf
pushf
ins
mov
and
and
mov
dec
cld
into
or
out
popa
mov
div
vmaxpd
leave
cmp
push
sbb
xchg
cmp
mov
mov
pop
movs
jmp
mov
(bad)
pop
sub
call
xor
imul
jp
cmp
jo
pushf
mov
xor
xchg
jmp
(bad)
cmp
leave
pop
das
shl
add
lock
(bad)
dec
jmp
aaa
sbb
sub
push
pop
mov
mov
mov
dec
add
(bad)
or
or
aas
lidtd
pop
aad
adc
ja
scas
shl
or
imul
test
adc
test
enter
adc
pop
je
test
add
call
pop
push
shl
jmp
aaa
mov
shl
mov
pop
popf
and
and
jno
jno
(bad)
out
adc
pop
ror
in
test
push
or
ret
shl
add
cld
xor
pop
div
std
and
fmul
push
sti
lds
and
call
xor
loop
pop
aad
imul
test
inc
sbb
mov
and
jbe
and
shl
xchg
or
into
sub
dec
movd
stc
add
dec
int
ds
nop
mov
pop
cmp
adc
fmul
test
push
mov
(bad)
outs
jmp
cmps
add
out
cmp
(bad)
or
mov
adc
or
icebp
xchg
pop
hlt
mov
cli
pop
sub
jnp
cs
popf
sub
fcomp
add
lea
enter
test
test
ror
mov
jmp
add
mov
bnd
sbb
(bad)
push
nop
(bad)
mov
xchg
add
mov
jp
push
add
xchg
mov
and
and
nop
std
mov
dec
aas
pop
das
pop
and
add
(bad)
xor
jbe
pop
adc
test
cmp
sbb
xor
mov
push
dec
xor
outs
enter
lods
mov
mov
mov
mov
pop
into
jne
pusha
cmp
hlt
mov
in
push
(bad)
ror
xlat
cmp
jae
retf
jmp
or
jmp
es
es
inc
rcr
loop
pop
adc
and
iret
hlt
jae
mov
bound
pusha
fld
mov
push
jne
loope
sbb
or
loopne
sbb
pop
add
dec
fucomi
add
fiadd
aas
ffree
hlt
mov
addr16
idiv
fs
xor
data16
shl
repnz
ds
pop
mov
loopne
add
lahf
lds
xchg
outs
xlat
dec
outs
stos
or
xchg
aam
push
fwait
daa
mov
arpl
or
mov
mov
ffree
outs
push
cmps
jne
and
adc
movs
mov
mov
and
sbb
add
popf
push
or
adc
sub
jp
cli
mov
dec
out
and
sti
lahf
jne
push
in
cmp
add
fnstsw
fidivr
enter
jo
sbb
xor
(bad)
mov
mov
push
add
and
nop
mov
shr
pusha
jns
push
test
out
fs
into
movs
retf
mov
mov
mov
addr16
add
ins
icebp
stc
push
mov
(bad)
out
add
xchg
and
jno
rcl
push
repz
xor
pop
and
cmp
sub
pushf
xor
pop
movs
dec
(bad)
enter
jno
out
sub
dec
retf
shl
sub
jg
popf
add
push
jnp
adc
aas
fcomp
inc
aad
xlat
dec
xchg
mov
dec
fsub
sub
pop
aaa
xor
adc
shl
ds
clc
jecxz
cli
fistp
mov
xor
jle
dec
inc
push
xchg
add
push
mov
jne
jnp
dec
pop
outs
dec
and
sub
retf
jns
(bad)
les
mov
jl
repz
xchg
cmps
sub
jmp
cs
sub
mov
jae
push
(bad)
cdq
shr
daa
je
cmp
stc
scas
sub
mov
out
es
imul
xchg
inc
push
pop
pop
movs
outs
cs
pop
push
fisttp
push
aas
inc
ss
mov
call
fidiv
sti
ror
sub
or
dec
pop
or
pop
dec
pop
cmp
add
sbb
pusha
push
mov
xor
and
inc
adc
mov
adc
adc
sahf
dec
dec
inc
inc
dec
ret
lds
scas
or
movs
je
mov
ror
add
lods
cwde
add
into
jmp
or
enter
fcomi
xchg
sub
das
popf
cdq
cmc
mov
xchg
xchg
dec
add
ds
pop
ret
pop
pop
jbe
xor
rcl
inc
xchg
sub
scas
cmp
inc
dec
out
jo
fst
(bad)
xor
or
xor
push
pop
sub
mov
xchg
sbb
xchg
sbb
sti
xchg
jno
bound
sub
repnz
inc
adc
push
imul
mov
pop
xchg
daa
es
data16
es
pop
jns
mov
stos
sub
stos
add
ficomp
mov
aad
jbe
push
add
xor
ret
xchg
out
mov
push
cmp
xchg
jg
aam
outs
mov
sar
jp
add
sub
clc
mov
dec
(bad)
fld
push
jmp
inc
sbb
cwde
mov
cmp
data16
adc
pop
mov
mov
inc
pop
jmp
dec
pop
dec
mov
xor
mov
lods
mov
sahf
lods
test
jne
(bad)
in
out
aas
repnz
mov
lods
pop
shl
out
jnp
lds
lahf
out
inc
mov
(bad)
mov
out
pop
test
inc
jno
repnz
mov
call
(bad)
int3
push
mov
lock
pop
int3
out
push
mov
loope
dec
inc
inc
in
lahf
dec
jmp
or
movzx
or
add
push
sub
stc
mov
retf
add
sbb
aam
out
fcmovu
xchg
(bad)
mov
sbb
xor
repnz
xor
movs
movs
in
sub
cmp
lods
sti
push
sar
jp
int
and
jle
imul
push
loope
sub
xor
jae
test
shl
jns
fnsave
mov
push
add
mov
lock
mov
jp
jo
icebp
cs
mov
sbb
ss
sti
sub
out
and
(bad)
mov
fwait
repz
mov
daa
fcom
stos
(bad)
je
imul
xor
sbb
(bad)
cmp
adc
jae
push
xchg
(bad)
sub
and
stos
dec
or
push
inc
sub
mov
(bad)
adc
push
xchg
std
pop
movs
sbb
loop
loope
iret
jmp
mov
xor
nop
mov
inc
dec
in
pop
cld
xchg
test
and
push
cmp
(bad)
mov
mov
mov
in
add
or
(bad)
out
cli
dec
loopne
dec
sbb
inc
adc
lds
retf
fnstcw
sbb
inc
dec
jb
movs
and
fistp
rcr
ret
xchg
mov
push
mov
bound
call
and
les
jp
push
(bad)
and
dec
sub
outs
push
aaa
je
aam
push
fwait
inc
pop
cmc
dec
push
int3
pop
repz
loope
mov
xor
adc
sbb
fadd
and
mov
mov
sub
movs
fs
pop
ds
inc
fcomp
frstor
clc
jne
in
pop
shl
mov
lods
dec
inc
popf
pop
fidivr
fisttp
xchg
mov
out
dec
std
xor
out
mov
lock
push
jge
ja
pop
out
adc
mov
mov
mov
cs
xor
mov
inc
ret
clc
sub
xor
mov
push
test
pop
hlt
push
aam
adc
out
xor
or
sahf
out
call
push
es
jns
idiv
mov
inc
mov
sub
pop
or
out
xor
dec
jnp
shl
mov
ss
enter
scas
call
dec
pop
daa
ins
pushf
pusha
fcmovbe
pop
inc
and
jecxz
add
push
dec
and
sbb
clc
fwait
rcr
(bad)
add
cwde
jle
cmp
xlat
fistp
jl
mov
leave
lods
add
loopne
mov
jno
sub
out
(bad)
lock
add
nop
and
and
push
rcr
stos
addr16
fwait
test
dec
inc
stc
int
es
and
mov
fsub
cli
in
adc
jge
lock
imul
pop
or
lods
mov
jae
retf
inc
sbb
or
sbb
and
or
mul
fs
mov
enter
push
inc
dec
push
xlat
in
(bad)
das
push
xchg
mov
mov
dec
imul
repnz
test
enter
call
addr16
push
xchg
lods
mov
adc
mov
div
jne
xor
jg
adc
in
lea
add
xor
test
cmps
cmp
sbb
jg
fimul
in
fist
and
ret
add
in
jb
or
(bad)
stc
push
dec
push
mov
js
mov
xor
mov
int
xchg
or
sahf
bound
in
cmps
dec
pop
sbb
dec
push
in
aam
lods
sub
mov
test
jae
and
movs
jecxz
stos
outs
adc
mov
iret
ret
cmps
hlt
mov
shr
xchg
daa
test
mov
stc
into
loop
fisub
add
out
imul
mov
fisub
and
cmp
retf
dec
jge
js
rol
xchg
push
(bad)
outs
jnp
push
inc
js
jo
sbb
sub
fcmovnu
mov
sti
enter
dec
iret
mov
jnp
mov
mov
dec
jbe
jae
pushf
cmp
out
push
hlt
test
rcl
leave
xchg
sti
inc
and
fwait
cmp
add
dec
cli
sbb
push
(bad)
mov
jge
cmp
das
inc
shl
nop
jecxz
lods
ficomp
push
into
fs
test
and
int
or
push
mov
mov
les
call
stos
xor
or
cmps
sti
xchg
repz
add
jmp
and
dec
pop
test
in
xor
sub
push
sub
lods
sbb
inc
stc
repnz
mov
(bad)
shl
(bad)
(bad)
jle
mov
or
sbb
fnstsw
clc
mov
xchg
movs
ss
or
dec
xchg
cwde
shl
xchg
mov
fstp
lahf
sub
add
sub
jne
clts
sub
outs
or
dec
sub
mul
cmp
lods
popa
(bad)
push
jne
lods
and
test
mov
outs
push
xor
cdq
pop
loope
fld
or
mov
lea
int3
fld
imul
mov
(bad)
fsubr
test
daa
ret
adc
fisub
xchg
jae
mov
(bad)
jmp
call
cld
xor
jo
or
jnp
jg
int
and
jmp
(bad)
pop
loop
add
inc
sbb
adc
add
inc
sbb
sub
adc
jno
mov
test
loopne
sub
mov
mov
les
stos
iret
inc
sbb
daa
sub
adc
sbb
pop
popa
sub
cmp
ror
outs
push
test
pop
int3
dec
inc
pop
arpl
(bad)
in
ret
sbb
repnz
repz
push
jbe
xchg
mov
fild
adc
aam
push
fsub
mov
loopne
xchg
or
or
cmp
bound
and
adc
aaa
sbb
mov
cmp
mov
repnz
xchg
je
lea
dec
fs
xchg
aam
add
mov
and
jg
and
ins
fiadd
dec
sahf
aad
sub
jge
push
cmp
stos
ror
push
shl
inc
mov
push
xor
repnz
cmps
aad
or
hlt
xchg
test
xchg
aas
in
aad
mov
cwde
add
(bad)
je
jns
jg
mov
or
push
mov
lods
ret
jae
fimul
inc
fnstenv
ins
push
clc
dec
scas
xor
jp
inc
ret
fistp
arpl
pop
xlat
loop
cmp
mov
inc
shl
push
mov
aaa
ret
adc
aaa
adc
pop
mov
data16
xor
cmps
dec
stos
test
jns
fld
lock
xor
sub
out
std
xor
and
adc
pusha
cdq
push
jp
sbb
add
cli
cwde
retf
imul
pop
ins
sar
sbb
dec
add
fs
mov
jae
sbb
mov
test
leave
dec
add
jno
mov
xor
mov
(bad)
outs
movd
mov
pop
(bad)
scas
mov
scas
sar
inc
or
or
dec
out
loopne
fstp
sahf
mov
cld
mov
xor
cmp
fisttp
mov
sbb
dec
mov
push
or
xchg
enter
out
out
out
ss
sub
jbe
inc
out
and
(bad)
fsubr
ja
shl
lahf
outs
push
and
loope
dec
pop
xor
pop
xchg
push
dec
fimul
ins
and
addr16
and
add
repz
and
mov
(bad)
fisttp
test
imul
in
out
or
mov
xor
jl
xchg
sub
pop
lahf
jns
call
mov
jl
test
lods
(bad)
lods
add
adc
mov
cmc
test
scas
mov
cmps
push
xlat
div
sbb
pop
sbb
mov
cmp
or
jmp
and
cmp
inc
or
aad
inc
push
ret
xor
out
js
sub
push
lock
movs
xor
and
dec
(bad)
arpl
sub
stos
aas
in
fs
pop
xor
les
mov
movs
fidiv
mov
mov
cmps
gs
xor
jo
call
fninit
mov
ret
aaa
mov
pop
pusha
fs
adc
jg
out
or
and
das
ret
(bad)
jmp
enter
daa
jp
push
add
pop
lahf
xchg
aaa
jae
ret
ss
gs
test
sbb
in
sti
cmp
scas
mov
js
and
cmp
cmp
jns
or
push
addr16
xor
add
js
pop
sti
inc
into
mov
les
sub
pop
pop
inc
inc
inc
das
or
xchg
ss
add
xchg
and
in
mov
pop
data16
mov
push
add
aad
es
jnp
add
and
stos
cmp
sub
mov
call
jnp
pop
lods
sbb
pop
js
adc
call
mov
or
scas
(bad)
sbb
fsubr
inc
jne
sbb
pusha
push
jnp
inc
xor
mov
inc
repnz
pusha
dec
sbb
stos
mov
scas
adc
mov
iret
mov
bnd
add
jle
into
in
mov
push
push
xchg
popa
push
xor
rcr
pushf
aaa
jae
sbb
popa
jmp
mov
pop
sbb
add
dec
or
pop
scas
jg
icebp
sbb
jp
and
add
es
cli
adc
outs
xchg
repnz
je
sub
imul
mov
and
jo
mov
push
mov
inc
movsx
pusha
fadd
and
in
or
es
or
pop
add
out
in
das
scas
movs
mov
mov
cdq
add
mov
ds
jnp
pop
xor
mov
out
add
lods
(bad)
jnp
sti
imul
cmp
adc
xor
sbb
pop
mov
popa
mov
jb
iret
shl
or
or
cli
aaa
(bad)
int3
pop
mov
dec
cmp
fistp
jecxz
ret
jno
in
xchg
inc
inc
dec
es
call
ficom
sahf
mov
lods
sti
jmp
xor
jp
lahf
xor
in
pop
movs
sbb
pop
pop
pop
popf
jmp
dec
jl
sbb
xor
lahf
xchg
adc
adc
mov
aad
repnz
movs
xor
nop
fld
aas
inc
pusha
mov
cs
add
outs
ror
push
das
test
fwait
xor
fnstcw
lods
loopne
int
adc
rcr
ds
shl
imul
xchg
ss
pop
pop
push
scas
test
or
sti
or
inc
ja
cmp
sub
fistp
add
stos
pop
cmp
mov
inc
sbb
add
(bad)
push
jmp
xchg
cmp
adc
sti
xlat
(bad)
rcl
movs
les
jns
cdq
(bad)
add
jae
adc
jne
daa
test
adc
xchg
mov
inc
cmp
fsubr
xlat
xor
push
int3
xchg
test
adc
xor
fnsave
retf
mov
int
inc
mov
mov
jg
sub
shr
imul
vhsubpd
js
xchg
cli
out
mov
and
fstp
cmp
(bad)
enter
les
cmp
int3
loopne
push
test
dec
ret
sub
and
xchg
push
pop
sub
or
mov
pop
es
add
or
retf
cmp
sahf
scas
mov
int3
and
stc
aas
mov
in
(bad)
inc
into
xlat
(bad)
jg
push
xchg
push
jns
and
and
(bad)
and
inc
sub
xchg
xchg
xchg
fimul
out
xor
mov
mov
out
pop
test
loop
or
(bad)
mov
sbb
and
xor
cmp
(bad)
mov
push
mov
mov
stos
mov
rol
mov
stc
mov
wrmsr
adc
cld
dec
cmps
cmps
mov
dec
out
lock
lds
mov
mov
popf
enter
out
pop
cmp
or
xor
ret
call
std
xor
iret
xchg
call
shl
mov
mov
stos
add
ins
inc
lods
les
and
cld
cmp
dec
sahf
mov
call
aam
mov
or
adc
arpl
cmp
jmp
mov
mov
out
nop
jecxz
mov
loope
shl
inc
ins
stc
gs
xor
jle
repnz
(bad)
shl
cmp
test
mov
mov
xchg
cmps
dec
add
addr16
xchg
inc
dec
cmps
sahf
cmp
mov
hlt
bound
js
lods
cmp
xlat
in
push
test
push
dec
mov
pop
jns
xor
xchg
jae
nop
lsl
sub
or
imul
push
sbb
hlt
inc
retf
mov
mov
repnz
aas
mov
xchg
sub
pop
or
loop
push
fdivr
sar
retf
xchg
test
mov
cmp
push
xchg
jl
inc
fwait
scas
mov
dec
cmp
fldcw
test
cmp
fwait
sub
aas
pop
nop
test
loope
ins
mov
cmps
dec
or
pop
(bad)
jg
out
repnz
or
xchg
call
xchg
rcr
sti
aaa
cmp
pusha
out
daa
pop
les
lods
xor
in
inc
pop
into
retf
leave
cwde
dec
dec
pusha
adc
addr16
addr16
pop
lods
mov
retf
inc
cmp
jae
ret
loope
or
sub
lods
test
sar
repnz
mov
jno
jns
call
push
inc
mov
add
mov
jmp
mov
daa
and
dec
xchg
add
dec
fadd
lds
fs
sbb
xor
inc
in
jg
and
aaa
jp
push
or
pushf
add
fbld
out
sub
das
adc
scas
lods
leave
mov
mov
pushf
clc
repz
xchg
pop
xor
inc
and
and
or
mov
xor
into
mov
rol
or
enter
xchg
xchg
daa
mov
push
call
xor
rcr
fwait
cld
mov
sbb
movs
ret
loopne
inc
leave
sub
adc
dec
and
pop
sub
imul
xor
pop
lods
jecxz
mov
and
iret
jmp
cwde
pusha
cwde
and
lea
scas
pop
push
sub
xchg
adc
cmp
jnp
(bad)
es
addr16
jne
shl
and
sub
movs
dec
and
and
xchg
aas
outs
dec
imul
sub
fbstp
push
or
xor
mov
cmps
push
enter
inc
loop
dec
xchg
data16
push
mov
retf
cmp
icebp
pop
sbb
xor
int
push
xchg
lds
retf
add
mov
cwde
jmp
loopne
mov
dec
aam
xchg
pop
mov
jae
inc
fcmovnbe
pop
imul
mov
(bad)
div
bound
es
into
gs
xchg
enter
pop
add
push
std
or
mov
jns
in
mov
mov
mov
test
mov
shr
hlt
or
adc
jo
icebp
in
fcmovb
cmp
sub
xchg
icebp
jae
je
retf
push
xchg
sbb
xchg
sbb
adc
stos
pop
fild
push
inc
xor
jmp
fistp
push
jae
lahf
neg
jp
mov
mov
inc
ins
cmp
out
int
mov
shr
mov
sub
fs
mov
popa
bound
and
cmp
arpl
(bad)
loop
vmovhps
std
xchg
sbb
fdivrp
pop
sbb
cwde
and
push
outs
or
add
movs
mov
icebp
xor
push
test
mov
push
inc
adc
xor
fistp
ret
push
call
(bad)
jno
jb
hlt
aad
stc
fs
jns
pop
sti
xor
jne
mov
mov
jns
out
push
push
mov
call
sbb
sbb
outs
sub
rol
repz
inc
fidivr
cld
sub
(bad)
mov
mov
aaa
pop
adc
cmp
int
fwait
outs
cmp
or
add
mov
pop
rcl
shr
push
mov
mov
sub
or
push
dec
scas
int
jle
and
icebp
adc
and
sub
push
shl
fstp
push
push
out
out
inc
dec
push
pop
leave
icebp
(bad)
out
retf
inc
adc
push
xor
ins
icebp
jmp
nop
cmc
(bad)
adc
add
pop
shr
xor
(bad)
dec
inc
mov
mov
jge
popf
dec
xchg
int
call
in
ins
aad
bound
pop
outs
imul
loopne
aad
inc
fcomp
cmp
and
jnp
mov
enter
push
push
hlt
xor
adc
and
clc
mov
sbb
and
fdiv
push
push
xor
mov
in
sbb
inc
inc
adc
push
mov
stos
and
std
lds
xor
jbe
cmp
jb
pop
xor
hlt
add
rcl
bound
sbb
in
loopne
xlat
add
push
callw
(bad)
and
call
dec
xchg
xchg
mov
inc
movs
xchg
test
lods
inc
and
in
nop
push
arpl
sub
push
cdq
push
adc
mov
aas
lea
mov
mov
fsub
mov
adc
mov
xor
jmp
mov
test
mov
in
js
push
in
cmps
pop
int3
inc
in
add
test
pop
push
not
hlt
(bad)
xor
or
inc
pop
fldcw
ffree
gs
aam
enter
rcl
in
movs
sub
pushf
test
aaa
movs
adc
push
xor
and
shr
push
and
cmp
cmp
in
mov
stos
push
xor
in
dec
retf
xor
in
cwde
or
cwde
adc
pop
sbb
test
jae
push
jmp
loopne
lea
adc
test
outs
loope
inc
dec
xadd
cli
and
pop
mul
jo
fucomi
std
ror
and
mov
dec
cmp
cmc
xchg
imul
das
outs
(bad)
iret
test
cdq
pop
dec
iret
std
sbb
ss
sbb
movs
push
xlat
iret
aam
xor
push
mov
test
and
jmp
mov
sbb
cmc
push
out
or
dec
ins
push
jle
mov
or
neg
fisttp
dec
cmp
pusha
retf
lahf
jmp
dec
sub
push
test
aad
mov
out
or
retf
xor
cmp
in
shr
jmp
adc
push
loope
xchg
aas
jae
mov
cmp
or
pop
jae
stos
sub
sub
inc
jnp
dec
stos
sbb
int3
pushf
pop
cdq
jns
loop
loop
ins
or
pop
lods
aam
jns
loopne
cmp
sub
das
div
jmp
mov
push
mov
ret
(bad)
push
icebp
fsub
mov
and
mul
jl
mov
cmp
add
out
outs
jae
or
cmp
lods
mov
(bad)
mov
xchg
std
pop
mov
out
clc
or
lahf
cmp
push
cwde
inc
ins
xor
ins
fisubr
xchg
(bad)
fidivr
mov
retf
push
pcmpeqw
xchg
inc
repz
mov
jle
sub
push
cli
jecxz
jp
scas
movs
out
fidiv
cdq
and
fs
push
mov
setne
rcr
push
push
sbb
in
jno
jbe
mov
add
cdq
ss
stos
or
retf
adc
fidiv
aas
pop
sahf
stc
es
xlat
adc
arpl
xchg
mov
ja
iret
mov
cdq
cdq
cmp
and
mov
test
cmp
mov
sub
push
sbb
scas
mov
xchg
in
add
jb
jns
pop
dec
add
mov
stos
and
(bad)
mov
and
sbb
inc
stc
push
mov
mov
mov
jg
fucomi
inc
fwait
jno
lds
sub
enter
popf
mov
xchg
xor
jge
mov
pop
stos
std
pop
push
js
mov
push
test
mov
cmp
std
mov
(bad)
cld
ins
lahf
or
and
stos
sbb
call
push
add
jae
ret
mov
ins
inc
mov
mov
call
inc
add
hlt
xchg
adc
sbb
jmp
xlat
mov
push
in
jno
sub
sub
pop
pop
or
cmp
or
gs
popf
xor
out
pop
in
fistp
sbb
test
xor
cmp
mov
mov
test
sub
es
pushf
sbb
pop
aaa
sbb
stos
int3
sub
outs
mov
stos
ret
cmps
lmsw
jno
xor
nop
add
push
xor
sbb
push
dec
add
jo
jno
dec
(bad)
jl
mov
push
fwait
mov
push
pushf
mov
push
adc
cmp
xchg
stos
adc
and
loopne
xchg
out
xchg
push
mov
aam
movs
test
jbe
imul
mov
sub
sbb
or
rol
sbb
(bad)
iret
pop
stc
cmp
mov
mov
sti
inc
inc
ficomp
call
sbb
or
jmp
ja
leave
fisub
push
jnp
mov
add
inc
iret
gs
(bad)
ins
idiv
sti
lahf
outs
pop
push
pop
mov
retf
adc
and
xor
mov
test
push
xchg
js
mov
aam
jo
xchg
fidiv
andps
sub
je
and
adc
pop
xchg
sbb
inc
mov
lea
inc
xchg
mov
jg
push
aam
jmp
cmc
movs
icebp
or
jle
inc
enter
mov
and
test
in
and
xchg
loope
jno
push
push
mov
or
inc
out
test
call
gs
leave
fidiv
pop
push
pop
jmp
mov
fld
dec
xchg
xchg
inc
out
daa
push
jo
inc
jge
aam
jnp
push
xor
xor
add
je
ror
out
xor
sbb
inc
add
xor
push
adc
arpl
sbb
sbb
add
sbb
mov
imul
or
call
or
aad
icebp
in
sbb
mov
data16
mov
mov
mov
aam
vmptrst
dec
lock
cmp
dec
(bad)
movs
repnz
jns
sbb
mov
ret
cmp
sub
movs
mov
or
inc
or
cmp
xchg
ffreep
ja
push
inc
jl
mov
cmps
mov
int3
aaa
jg
lea
in
nop
push
adc
out
out
lock
mov
dec
std
and
mov
(bad)
and
stc
add
hlt
jae
pusha
mov
mov
or
xor
mov
loope
sub
sub
add
not
pop
(bad)
and
lock
inc
int
mov
push
push
cmp
jno
aad
sub
xor
xchg
(bad)
jecxz
jg
xchg
or
lds
call
(bad)
pushf
sbb
xor
jbe
mov
pusha
sti
data16
sbb
ins
jl
arpl
ins
in
lock
sub
in
leave
cmp
pusha
rcr
(bad)
test
addr16
mov
jmp
dec
repnz
inc
or
and
jle
clc
ja
push
mov
clc
sbb
jne
neg
test
lods
adc
cmp
shr
adc
or
rcl
mov
call
or
push
jae
inc
cdq
push
cdq
daa
sub
sub
dec
and
xchg
or
mov
data16
jo
jge
cmp
call
xor
mov
mov
out
push
mov
(bad)
pusha
ds
rcr
mov
push
xchg
nop
xlat
push
adc
xchg
scas
inc
mov
data16
mov
sbb
adc
cmps
idiv
out
add
fiadd
fdiv
push
retf
jl
mov
add
rol
cmps
mov
push
push
inc
mov
pop
loopne
cmp
dec
enter
sub
std
outs
jge
ins
push
sub
scas
dec
repz
push
jmp
adc
out
mov
mov
aaa
push
sbb
sbb
ror
jno
in
jmp
add
sti
push
data16
cmp
jg
nop
lods
jecxz
icebp
push
cli
aad
daa
leave
cmp
jae
and
xchg
jno
jmp
das
mov
add
imul
inc
icebp
lods
adc
mov
push
cmp
outs
sub
dec
mov
dec
aam
sbb
inc
inc
repz
mov
lds
aaa
cmp
pushf
(bad)
jp
inc
mov
fiadd
add
imul
aam
sbb
sub
in
daa
scas
and
mov
mov
push
imul
mov
or
nop
enter
push
mov
mov
or
xor
add
arpl
or
out
jno
es
jo
push
mov
je
movs
add
div
test
jmp
jg
or
lea
pop
mov
aaa
sbb
add
gs
cwde
loop
cmp
push
mov
push
xor
rcr
mov
cmps
sub
mov
lods
mov
jl
xchg
add
mov
mov
adc
jb
xor
mov
push
mov
(bad)
mov
test
inc
hlt
mov
xlat
cwde
xor
sub
int
repz
fsub
dec
push
mov
das
in
ja
add
cwde
mov
add
hlt
mov
add
mov
sbb
xor
fninit
push
mov
cmp
push
dec
cdq
mov
out
xor
lock
ins
jl
or
cld
cmp
ins
pop
jns
stc
jecxz
lahf
jno
das
mov
dec
dec
jmp
loop
sahf
outs
cmps
mov
or
or
lock
jno
fxch
and
ds
shl
xor
fyl2x
push
shl
lds
aam
inc
xchg
jg
push
jb
cld
sub
imul
pop
out
cdq
int3
jle
add
hlt
(bad)
mov
pushf
ins
adc
mov
pop
or
mov
dec
lea
out
(bad)
cs
cmp
mov
ins
pop
inc
mov
dec
inc
outs
rcr
jmp
in
js
fwait
mov
pop
stc
stos
add
xor
shr
call
retf
ins
nop
out
or
xor
cmps
scas
xchg
cmp
push
sub
push
dec
sub
mov
hlt
(bad)
ror
ret
std
data16
jl
rcl
fist
popf
(bad)
mov
dec
cmp
fcomi
call
shl
fcom
mov
rcr
in
in
and
daa
out
jmp
jae
pop
inc
loop
mov
jae
push
dec
mov
cmc
pop
fadd
mov
jl
pop
sbb
out
push
xlat
push
mov
jns
stc
stos
icebp
mov
mov
cld
dec
mov
mov
cld
sbb
mov
xlat
movs
add
dec
aam
movs
dec
dec
ins
mov
ret
jecxz
and
and
jl
pop
ficomp
push
and
into
mov
and
push
retf
xor
and
jecxz
sbb
adc
xchg
clc
aam
mov
jnp
sub
test
mov
shl
push
mov
cwde
out
jmp
popa
cld
fst
jb
pusha
shl
sub
cli
jmp
sti
(bad)
mov
cmp
scas
mov
sub
repz
mov
push
in
inc
inc
mov
aad
fldenv
cmps
dec
inc
loopne
adc
rcr
add
sub
push
imul
pop
sbb
pop
mov
inc
push
jmp
fwait
mov
inc
iret
fisubr
(bad)
jecxz
mov
nop
(bad)
mov
(bad)
inc
fmul
scas
add
ret
jb
fcomip
cmps
out
jo
into
cmp
call
mov
std
mov
mov
(bad)
pusha
sub
mulps
ret
pop
cld
xchg
dec
pop
retf
int3
fistp
push
sar
popa
or
add
out
xchg
in
call
jg
sub
test
sti
or
call
inc
or
add
push
or
int
cld
push
or
mov
test
sti
pop
jp
mov
out
cmp
mov
shl
repnz
out
inc
call
push
jno
pop
pop
push
cmc
loopne
push
lahf
mov
gs
or
push
call
jae
enter
loop
xchg
ror
sti
mov
xlat
mov
inc
out
jp
out
das
fild
mov
adc
jl
out
mov
add
mov
in
retf
xchg
leave
mov
mov
(bad)
outs
stos
out
push
sbb
sbb
sbb
sar
loopne
icebp
das
mov
loope
xor
cwde
inc
out
je
push
bswap
repnz
jb
inc
push
xor
add
pop
neg
and
mov
mov
mov
gs
cmps
sub
gs
(bad)
ds
outs
std
(bad)
pop
das
dec
push
ret
or
sbb
ret
pop
aaa
xchg
cmps
das
pop
push
sbb
push
add
cmp
fst
cmc
mov
aad
add
pop
push
and
jne
push
lds
aam
clc
add
and
sbb
push
lds
cmp
cmps
mov
ds
cld
dec
xchg
sub
jbe
add
mov
test
xchg
sbb
fcom
mov
hlt
pusha
xor
xchg
test
jg
sbb
mov
push
xchg
test
xchg
sbb
cmp
mul
stc
(bad)
and
inc
adc
aam
or
dec
repnz
pop
pop
sbb
cmps
hlt
imul
lock
mov
in
retf
or
test
push
dec
add
dec
inc
mov
dec
lods
jecxz
sub
call
mov
mov
mov
loop
sar
cmp
mov
(bad)
icebp
scas
inc
xchg
dec
scas
repz
ret
or
(bad)
sbb
fdivr
pop
add
fs
cmc
xor
xor
jno
jl
jno
pushf
loop
mov
ins
inc
jg
fnsave
xor
xor
addr16
int3
dec
hlt
or
mov
test
hlt
jmp
mov
(bad)
mov
sub
adc
lds
pop
ds
sbb
dec
jo
add
cmc
add
add
push
rol
mov
stos
aaa
dec
sar
(bad)
mov
dec
fwait
scas
cmp
push
jne
inc
ficomp
pop
dec
loop
aaa
sti
push
mov
cmc
sbb
sbb
cli
(bad)
xlat
mov
daa
fwait
add
mov
and
fwait
mov
into
retf
sbb
fstp
(bad)
(bad)
js
cmc
inc
lock
or
dec
bound
sbb
pushf
stos
push
popf
fcomp
ret
neg
popf
cmp
cmovl
inc
cmp
cmp
push
cmp
or
mov
ja
xchg
jns
push
test
mov
cmc
mov
ja
sbb
sbb
in
fbld
out
adc
arpl
shr
dec
stos
call
push
and
dec
mov
add
xor
mov
in
push
mov
pusha
jmp
push
out
dec
int3
inc
sar
xchg
call
repnz
add
mov
clc
inc
pop
mov
ins
mov
jl
call
mov
cmp
sbb
das
inc
xchg
leave
scas
cmp
jp
sub
rcl
push
outs
sbb
les
xor
fisttp
test
movs
or
stos
sbb
aas
xchg
loop
scas
test
xchg
sbb
pop
mov
leave
sbb
call
push
lahf
xor
add
jecxz
lea
mov
dec
jae
cmp
xor
xlat
pop
sub
mov
iret
pop
imul
inc
inc
xrelease
pop
xchg
stos
inc
mov
addr16
add
pop
jae
out
pusha
sbb
stos
inc
repnz
outs
test
inc
xchg
sub
(bad)
ret
mov
test
pusha
mov
fist
aam
enter
(bad)
fcom
push
movs
mov
xor
mov
jg
push
inc
bound
mov
push
pop
js
inc
call
adc
imul
jno
mov
not
test
mov
mov
int3
cli
shl
lods
jle
mov
xchg
cdq
scas
ss
add
sub
in
in
fmul
jl
mov
pmullw
mov
sbb
iret
daa
fwait
xor
cwde
outs
sub
int
xchg
dec
xchg
lea
inc
in
popf
mov
xor
arpl
inc
enter
cwde
pop
push
test
movs
push
movs
dec
xchg
cmp
test
cmp
jg
mov
cli
inc
fidivr
js
jnp
nop
retf
sbb
inc
xchg
sub
pusha
jmp
scas
fwait
cmps
inc
(bad)
out
bound
(bad)
hlt
mov
fs
sub
adc
lock
in
dec
iret
dec
pushf
fmul
in
ror
mov
out
icebp
pop
out
or
clc
inc
xchg
mov
lods
mov
lock
cmps
mov
mov
xlat
xchg
clc
loopne
cmp
call
aas
inc
xchg
ret
or
jl
or
mov
or
in
cmp
or
nop
cs
ret
fild
aad
add
jne
(bad)
clc
and
and
or
out
in
push
je
in
jne
adc
int3
dec
in
test
cmp
sub
aas
(bad)
cmp
data16
jnp
pop
jmp
or
pop
mov
lods
imul
sbb
push
lea
enter
mov
out
jae
jmp
push
(bad)
push
adc
outs
sub
retf
or
in
mov
rcl
jo
or
add
daa
push
or
inc
jge
out
(bad)
xor
and
jl
and
dec
or
pop
fisttp
cmps
jecxz
mov
jo
test
and
popf
sbb
add
push
test
pop
xor
mov
dec
sbb
ret
or
jp
test
add
out
test
cmc
pop
add
rol
xor
jmp
lods
xchg
jge
fcomi
(bad)
push
ficomp
iret
xor
inc
mov
ja
jmp
cmc
shl
ins
dec
mov
jl
sbb
pusha
push
dec
xchg
fldlg2
loopne
inc
repz
push
push
sar
div
mov
fldenv
pop
and
sub
loope
xchg
stc
outs
sub
add
fstp
cmps
xor
sub
mov
and
pusha
jl
loopne
imul
pop
in
sbb
(bad)
mov
xchg
mov
sahf
retf
outs
push
cmc
shr
mov
cld
jae
clc
rol
popf
mov
fs
out
xor
add
mov
(bad)
imul
div
dec
xchg
lahf
pop
adc
add
ror
unpckhps
mov
inc
pusha
xor
inc
mov
inc
in
ret
mov
fwait
sbb
push
mov
mov
dec
cwde
push
repnz
mov
mov
pop
out
mov
rcl
and
aaa
dec
call
or
ins
retf
jnp
add
cmps
das
jae
lock
fist
test
xor
lock
adc
int3
add
in
mov
ins
call
xchg
out
inc
shl
repz
iret
mov
aad
sbb
bound
rcr
int3
xchg
mov
or
dec
lods
mov
sti
movs
jmp
jp
ror
test
popf
sbb
push
pop
sub
in
xor
fnstsw
cmps
jge
fnsave
mov
mov
movs
jp
repnz
push
or
and
cli
sub
retf
sub
xor
ja
jmp
inc
addr16
cmp
mov
jle
mov
mov
gs
arpl
movs
add
push
scas
mov
adc
scas
movs
add
xchg
fwait
mov
cdq
dec
shl
jae
xor
push
aad
imul
inc
lea
icebp
cmp
cmp
scas
pusha
jb
ss
push
stos
mov
sti
arpl
nop
ret
cdq
jle
scas
and
pop
push
leave
and
aaa
lock
bound
push
lahf
inc
(bad)
jb
mov
and
aam
hlt
dec
sub
dec
xlat
shl
sar
and
xchg
sub
cmp
cs
imul
leave
jge
ret
mov
or
ror
in
mov
stos
scas
or
and
jmp
mov
mov
fstp
fsub
and
adc
xor
jmp
cmp
mov
out
ret
das
push
lods
(bad)
lock
push
push
xor
in
je
les
ret
or
(bad)
and
paddsw
pushf
scas
lahf
xor
dec
xor
xlat
adc
into
cmp
sar
call
jp
adc
xchg
dec
mov
xor
aam
sbb
addr16
pop
mov
arpl
(bad)
retf
cmp
call
adc
dec
movhps
inc
or
pop
loop
xor
jnp
icebp
xchg
jne
ja
jmp
hlt
inc
xor
xchg
loope
mov
out
fcom
xor
in
nop
dec
jae
js
popf
mov
mov
adc
cmp
mov
mov
in
xor
cmp
clc
js
adc
jl
cmps
mov
mov
sbb
pop
jno
inc
jmp
dec
push
test
cmp
sbb
xor
or
ja
enter
xchg
lods
mov
jo
pusha
mov
and
aas
test
sub
mov
movs
pop
jns
jmp
pusha
inc
popa
ret
sub
add
xchg
fmul
mov
push
enter
pop
pop
sub
jecxz
shl
sbb
cmp
push
mov
push
and
popf
xor
pop
fnstcw
jns
gs
daa
mov
mov
(bad)
out
mov
rol
xchg
cwde
mov
sub
rcl
clc
sub
rcl
ja
mov
and
adc
xor
push
fstp
imul
xor
stc
sub
hlt
nop
cmp
fist
mov
push
or
push
xchg
ret
ins
scas
sub
push
jne
aam
add
call
movs
cmp
ja
pop
sbb
push
outs
push
pop
add
cli
adc
mov
loop
enter
push
leave
imul
repnz
fsub
and
cmp
fsub
call
mov
push
leave
cld
sbb
ficomp
retf
or
xor
sub
xchg
cmps
sbb
idiv
into
jno
ficom
arpl
ja
or
pop
inc
dec
add
jmp
shr
aaa
daa
inc
les
add
ja
dec
retf
cmp
mov
das
(bad)
scas
fmul
outs
mov
dec
add
push
gs
(bad)
lods
dec
dec
adc
mul
movs
xchg
scas
mov
dec
in
setne
mov
mov
pmullw
pop
push
or
sub
mov
pushf
sub
push
(bad)
mov
mov
addr16
in
jnp
int3
inc
cs
cmp
scas
add
in
(bad)
icebp
icebp
push
mov
daa
mov
pop
cli
das
out
cmp
pop
dec
out
popa
xchg
push
dec
mov
aad
(bad)
stos
or
dec
mov
cmp
pop
lahf
(bad)
bound
push
xchg
adc
mov
hlt
in
push
mov
loope
fs
or
enter
ss
mov
mov
imul
adc
in
sbb
xor
mov
xchg
cli
cli
or
add
pop
pop
cs
sub
xor
push
mov
inc
mov
test
mov
retf
adc
mov
dec
cmp
jmp
push
jp
fcom
jbe
xor
dec
xchg
or
jno
movs
inc
push
push
pop
and
jmp
repnz
aas
dec
stos
daa
test
cmp
call
pusha
in
repnz
in
retf
inc
cmp
retf
adc
sbb
push
cmp
outs
pop
jnp
xchg
ins
dec
sub
xchg
sbb
ins
in
lds
clc
movs
retf
pop
sbb
cmp
dec
aaa
jmp
rcr
call
pop
dec
lahf
idiv
popa
inc
stc
xor
push
sub
retf
mov
sub
int3
ss
fmul
nop
sahf
add
(bad)
into
jnp
cmp
sub
popf
jns
dec
ret
sub
jmp
pop
call
jnp
and
in
lods
inc
or
xchg
into
iret
(bad)
mov
mov
pop
test
push
cmp
dec
lds
adc
mov
sub
xor
jmp
lock
loopne
mov
jb
add
push
cld
xor
cdq
movs
or
jecxz
or
cmps
cmp
ret
xchg
inc
mov
pop
imul
pop
test
loop
cmps
mov
or
jae
or
jnp
jl
adc
leave
mov
fadd
ds
or
pop
adc
push
inc
and
fst
mov
repz
jbe
mov
sbb
int3
fisttp
test
mov
or
fs
out
xchg
idiv
inc
mov
push
mov
enter
loope
mov
adc
idiv
call
and
std
stos
sub
push
or
xor
cmps
imul
sub
out
call
retf
or
sbb
leave
cmps
outs
into
adc
mov
pop
repz
mov
adc
(bad)
sub
xor
inc
cdq
imul
into
scas
adc
das
dec
ret
test
jecxz
cwde
adc
arpl
dec
loop
outs
sbb
test
(bad)
mov
xor
lods
push
or
fstp
frstor
jmp
cli
ins
jo
mov
(bad)
popf
nop
enter
xchg
or
aad
xchg
xor
lock
sbb
pop
xchg
retf
mov
jns
xor
and
repnz
movs
inc
(bad)
jb
xchg
test
sbb
fimul
sbb
lea
cs
sbb
and
daa
dec
mov
dec
scas
mov
fadd
sub
and
mov
mov
pop
aam
(bad)
mov
lea
in
jo
inc
add
pop
or
leave
pop
mov
sub
pop
cmc
icebp
push
in
adc
fwait
xchg
call
ins
ins
sahf
addr16
pop
in
aas
mov
add
jp
xchg
mov
fstp
(bad)
or
rcr
in
adc
aas
sbb
jl
xor
dec
mov
bound
ss
push
fdivr
xchg
iret
adc
push
gs
sbb
xchg
or
jno
ss
mov
xchg
fmul
add
cmp
repnz
adc
add
push
push
leave
out
cwde
add
lock
mov
loopne
ins
inc
cmp
inc
pop
inc
(bad)
mov
jmp
xor
lea
stc
sbb
push
and
scas
xchg
cmp
mov
inc
push
and
ins
fwait
popa
and
mov
lods
cdq
xchg
dec
fnsavew
fild
lahf
jnp
stos
lods
sub
(bad)
movs
push
sub
mov
dec
imul
lds
data16
jge
pop
mov
stos
mov
add
scas
jmp
mov
mov
call
xor
je
sar
xchg
and
jae
sub
fadd
fisubr
mov
cmp
icebp
mov
ret
out
jo
punpcklbw
mov
ins
pushf
mov
xchg
mov
dec
ret
push
arpl
pop
sub
aam
imul
stc
cdq
push
xchg
pop
lock
bound
ins
test
inc
std
daa
mov
retf
xchg
aaa
data16
daa
mov
repz
pop
pop
jg
ds
cwde
sbb
pop
add
push
shr
scas
loopne
xchg
mov
cmp
cmp
in
ds
push
push
fstp
sub
xchg
outs
pushf
out
pop
mov
lea
outs
(bad)
pop
adc
pusha
push
jecxz
xchg
mov
lahf
mov
push
fiadd
sbb
fldenv
push
clc
stc
data16
daa
inc
pop
lock
mov
arpl
jns
xchg
xchg
or
sbb
ins
push
daa
pop
retf
pop
shl
cmovb
or
fld
in
push
lods
ins
inc
or
xchg
dec
mov
das
stos
das
retf
icebp
xor
mov
mov
icebp
js
mov
inc
adc
cld
sbb
icebp
adc
loopne
add
or
fdiv
imul
push
mov
xrelease
xchg
or
push
call
lahf
scas
mov
sbb
add
or
sbb
pop
imul
or
rcl
loope
fst
cmp
xchg
pop
out
push
pusha
xor
(bad)
cmps
inc
sahf
(bad)
mov
sbb
inc
xor
mov
popa
movs
pop
enter
enter
test
(bad)
movs
pop
enter
out
xor
test
pop
adc
movs
adc
cmp
nop
loope
sbb
sbb
jnp
out
mov
retf
std
outs
adc
push
lods
js
adc
adc
dec
loopne
xor
into
and
ja
aaa
in
loope
(bad)
mov
jecxz
and
aad
in
lea
sbb
in
xor
aaa
jo
out
loopne
cmp
pop
jne
mov
or
mov
out
mov
sub
jmp
lock
jg
push
dec
mov
icebp
fst
inc
rcl
jmp
shl
dec
jg
fwait
aam
es
push
rol
movs
push
fidiv
cmp
mov
xchg
js
sub
(bad)
test
push
or
mov
icebp
(bad)
mov
cmp
and
loope
enter
jecxz
test
leave
aas
xchg
mov
cmps
mov
push
cmp
xor
into
cld
add
rol
ins
cwde
cmp
xor
xchg
push
cdq
out
stc
sub
icebp
or
daa
enter
lods
adc
adc
mov
cmc
sub
or
jo
mov
push
call
sbb
xchg
(bad)
(bad)
in
call
and
shr
pop
pop
push
aaa
mov
loop
cmc
xor
mov
dec
push
in
mov
fldcw
sub
rol
mov
xor
sub
mov
mov
inc
and
es
dec
scas
je
fidivr
dec
das
jo
sub
ror
fnstsw
nop
push
test
and
cld
out
callw
sub
pusha
out
popf
cmp
adc
push
mov
leave
repz
mov
sub
inc
lock
outs
xlat
pop
push
xor
imul
sti
sbb
scas
ss
inc
stos
push
neg
mov
dec
mov
clc
in
call
inc
or
neg
jb
test
mov
cli
cmp
gs
lds
sbb
idiv
clc
out
jg
gs
mov
loope
lods
in
mov
and
pop
out
arpl
rcr
push
ins
fld
sbb
fwait
cdq
mov
retf
mov
lock
sbb
cmp
xchg
fbstp
scas
pop
mov
iret
frndint
retf
lahf
out
mov
ss
and
inc
imul
into
cs
pop
push
das
clc
sbb
mov
and
or
dec
adc
js
sub
les
push
(bad)
or
jmp
jle
mov
dec
push
cld
sbb
inc
pusha
loop
jns
cmps
xchg
adc
(bad)
mov
retf
push
cmp
jmp
xor
jmp
mov
fdiv
add
and
or
cld
mov
cld
mov
cmc
std
loope
xchg
lods
push
xor
xchg
in
cmps
mov
and
neg
cmps
sbb
es
cs
fwait
scas
das
xchg
mov
lahf
shr
stc
sub
push
xchg
lods
out
xchg
lea
cmp
jb
js
adc
jecxz
ds
add
fdivr
mov
shl
adc
out
stc
xchg
or
mov
lods
jae
cmps
adc
cmp
arpl
cmp
mov
or
mov
movs
xchg
add
mov
jae
adc
adc
daa
add
inc
jb
pop
clc
fst
add
std
sub
ror
mov
and
(bad)
mov
int3
(bad)
xchg
addr16
inc
inc
adc
sub
dec
repz
dec
ja
cmps
mov
fsubr
into
mov
or
repnz
sbb
xor
xlat
sbb
jo
add
xchg
ds
xchg
pop
jns
loope
mov
aas
lods
sub
je
sub
mov
mov
pusha
cli
(bad)
xrelease
xor
stos
movs
and
stos
pop
out
jle
(bad)
fnsave
mov
mov
sbb
scas
jp
sub
shl
dec
cmp
cdq
sahf
mov
xchg
in
cli
loopne
mov
mov
inc
mov
arpl
mov
loop
out
daa
sub
jbe
and
and
adc
loopne
retf
sub
jp
bound
daa
test
mov
mov
aaa
dec
neg
mov
inc
scas
xchg
daa
movs
jp
inc
sbb
mov
jecxz
icebp
das
add
pop
pushf
ins
xor
(bad)
inc
cwde
jg
mov
dec
outs
pusha
push
adc
fs
inc
push
pop
test
xor
hlt
enter
mov
in
mov
pop
neg
add
and
imul
cmp
and
xchg
pusha
not
out
fnstcw
loope
mov
cli
mov
sbb
mov
cmc
dec
scas
inc
sub
pop
dec
je
push
xor
sub
cld
inc
shl
fistp
data16
and
mov
fimul
cmp
cs
dec
xchg
fdivr
scas
ds
retf
push
in
out
in
xor
or
sbb
lahf
icebp
jne
adc
dec
cmps
enter
mov
mov
popf
ficom
out
into
ret
push
cmp
mov
retf
push
or
jg
jl
cmp
clc
pop
fsubp
xchg
aaa
bound
cmc
fwait
jns
in
movs
mov
sbb
dec
outs
adc
xchg
loop
fld
xchg
sub
daa
pop
fsubr
fld
mov
sbb
jmp
xchg
jecxz
es
pop
bound
xchg
and
push
mov
add
outs
cld
jnp
cld
inc
adc
or
addr16
fidivr
mov
push
and
dec
pop
call
aaa
(bad)
xlat
cdq
popf
clc
ret
jbe
mov
xchg
jb
fnsave
pushf
push
loop
lds
fs
mov
lods
retf
gs
push
dec
dec
xor
out
inc
dec
les
aaa
das
or
mov
xor
xchg
mov
rol
aam
mov
inc
jns
xor
sub
add
and
xor
jecxz
inc
inc
xchg
movs
adc
sar
inc
aaa
fst
ins
ror
sar
and
xor
jmp
ja
jno
dec
loopne
xor
pop
and
pop
pop
pop
mov
pop
push
sahf
push
pop
lds
xor
jmp
push
dec
adc
inc
retf
loopne
xchg
jle
popa
daa
imul
mov
jmp
xor
cwde
mov
push
sbb
popf
dec
dec
int3
xchg
call
shl
fwait
xor
or
popf
or
stc
out
mov
sahf
cli
sub
fst
ret
or
repz
jne
test
scas
inc
or
sahf
fwait
xchg
or
push
cli
imul
cmps
mov
xor
aas
push
nop
inc
retf
adc
mov
addr16
jmp
xlat
cdq
jg
pop
dec
jb
push
mov
pop
mov
shl
and
inc
push
shl
call
add
mov
loop
ss
dec
mov
sti
dec
(bad)
push
stc
lds
ret
ins
mov
mov
scas
je
xor
dec
repnz
jb
stc
adc
sub
js
bound
mov
add
cs
mov
mov
sbb
lds
pop
das
push
dec
cmp
dec
xchg
mov
cmp
cld
adc
mov
loopne
pop
mov
out
scas
and
add
or
ror
jbe
jge
push
mov
dec
xchg
inc
std
in
dec
clc
push
imul
data16
sub
icebp
shr
fisttp
(bad)
mov
mov
mov
jnp
xchg
scas
test
test
fisttp
or
dec
sbb
xchg
into
add
pusha
bound
fidiv
xor
ficom
sub
aam
popa
shr
stc
sbb
sbb
fisub
stos
in
sbb
mov
pop
inc
jae
clc
out
dec
or
sbb
call
jecxz
out
pop
sub
jmp
push
out
cmp
stc
shl
fisubr
aam
inc
cmc
jl
sub
imul
rcr
sbb
aas
add
in
jg
adc
lock
mov
sar
fldcw
aas
add
jbe
sub
ror
sbb
mov
push
push
shl
sbb
xlat
lock
call
imul
fidivr
fild
xchg
jle
ja
or
lds
retf
movs
inc
inc
dec
pop
mov
or
(bad)
sub
or
mov
ins
int
dec
fwait
jnp
xor
iret
fadd
xchg
imul
dec
mov
dec
cmp
imul
xor
xor
push
cmps
out
fsubrp
mov
std
push
xchg
stc
popa
sub
cli
pushf
mov
in
pop
sub
lods
push
scas
test
movs
(bad)
sub
push
loopne
or
dec
adc
push
add
(bad)
jmp
int
sub
mov
(bad)
mov
pusha
mov
xchg
dec
mov
(bad)
call
je
and
xchg
mov
cmp
int3
push
sbb
fild
xor
in
dec
popf
xor
jg
push
pop
mov
aaa
das
push
out
mov
cld
mov
sub
cmp
outs
inc
pop
jbe
repz
(bad)
hlt
mov
adc
adc
cmp
in
fst
jae
ret
mov
cmps
out
xchg
pusha
xor
dec
fimul
ret
movs
fwait
mov
sahf
jmp
outs
jne
popa
jmp
mov
dec
sbb
mov
lahf
sbb
sbb
xchg
stos
push
sbb
pop
gs
push
out
(bad)
scas
popa
(bad)
push
or
shl
movs
fcomp
sbb
popa
bound
add
mov
nop
mov
inc
int3
retf
adc
jae
mov
std
dec
jg
nop
sbb
aaa
or
in
leave
imul
sub
aaa
std
push
jns
nop
dec
js
dec
ins
add
inc
mov
xor
call
neg
je
cwde
inc
mov
(bad)
aam
in
leave
push
pushf
add
loop
or
sbb
inc
loopne
in
and
movs
(bad)
rcr
jecxz
popa
sub
push
or
call
test
pop
psraw
adc
dec
les
inc
xchg
idiv
or
stc
dec
xor
cs
inc
mov
mov
jge
push
scas
jno
jp
retf
(bad)
pop
je
adc
fstp
cmc
cmc
shr
inc
xchg
rol
je
push
pop
lea
lahf
xchg
inc
pop
clc
mov
fisubr
add
jecxz
retf
cmp
jmp
rcr
shl
and
xchg
in
mov
in
fiadd
cmc
adc
(bad)
into
sti
stc
arpl
cli
scas
push
push
pop
jb
fisubr
sti
dec
sub
xor
dec
shl
or
aaa
ds
dec
sub
cwde
push
stc
mov
sub
mov
ins
into
movs
(bad)
jg
sub
xchg
nop
adc
fnstenv
rcr
int3
lds
mov
add
dec
adc
dec
or
out
adc
jl
cmp
and
nop
or
loop
adc
dec
mov
mov
inc
push
icebp
sub
mov
pop
pop
fisubr
pop
adc
push
jns
lock
into
into
repnz
inc
fisttp
sbb
paddusb
adc
sub
shl
mov
xor
pop
sbb
sub
imul
pop
hlt
repz
lock
xchg
push
mov
xchg
out
lock
repnz
jns
and
popa
ss
pop
jmp
push
dec
pop
mov
out
not
mov
cs
jmp
mov
clc
add
or
(bad)
loop
jge
outs
movs
mov
cmp
loope
stos
or
in
fst
xor
mov
stos
lahf
cmp
xor
test
pop
dec
xchg
imul
pushf
or
popa
xchg
mov
mov
mov
mov
cmp
ins
push
gs
jae
xor
pop
pop
adc
pop
push
ins
test
out
xchg
inc
adc
dec
push
gs
ret
in
push
jno
loopne
pop
xor
mov
xor
push
(bad)
ins
dec
outs
mov
dec
rcr
rol
scas
(bad)
retf
ret
nop
stc
jnp
test
imul
inc
test
xchg
mov
pop
call
xchg
mov
fild
ss
js
add
or
jmp
mov
xor
xor
dec
cmps
add
or
aaa
push
in
push
ss
loop
mov
fabs
mov
jge
inc
xchg
cmps
idiv
cmc
sbb
mov
fwait
lods
mov
push
or
sub
(bad)
in
xor
or
pusha
mov
test
xchg
loope
and
shl
jg
pop
mov
jg
dec
jne
push
inc
rcr
repz
lea
and
fwait
mov
retf
fsub
and
mov
retf
pop
movs
retf
(bad)
jmp
out
pop
and
adc
jne
push
xor
das
pop
sahf
cs
mov
inc
sub
leave
fcom
inc
dec
mov
fs
xchg
mov
daa
es
xchg
movs
ins
pop
xchg
and
xchg
mov
sub
jle
jbe
push
push
lds
hlt
adc
pop
mov
dec
mov
jp
or
and
inc
jge
scas
call
pop
pop
sub
mov
jb
add
fwait
int
cld
pop
neg
sar
sbb
popa
inc
in
pop
and
push
retf
push
adc
and
mov
pop
out
or
cmp
adc
inc
mov
(bad)
and
or
loope
movs
push
mov
dec
cmps
xchg
push
iret
(bad)
call
xchg
mov
rol
icebp
jo
sbb
shr
out
fidiv
lock
xor
jnp
sar
clc
adc
lahf
or
out
dec
cwde
push
push
imul
out
out
jge
xchg
jmp
(bad)
or
add
test
in
xor
adc
sbb
push
gs
push
movs
test
test
xor
and
(bad)
aam
xchg
jg
xchg
mov
loope
jnp
clc
inc
sbb
loopne
cmovne
outs
ficomp
neg
cmp
mov
mov
push
and
retf
nop
mov
lmsw
and
stc
fstp
dec
add
jne
and
sbb
ins
mov
mov
sbb
fisttp
sbb
pop
adc
mov
sbb
sbb
sub
and
pop
outs
and
cwde
push
adc
int
out
ins
popf
lods
inc
or
pop
pop
imul
addr16
mov
int
mov
clc
mov
jmp
scas
pop
xor
mov
(bad)
test
imul
or
stos
addr16
fdiv
push
shr
je
dec
stc
or
mov
mov
ficomp
ins
cmps
fcom
outs
sub
ret
jnp
xor
add
cmp
daa
lea
jne
xchg
xchg
add
and
jb
mov
mov
(bad)
sar
adc
(bad)
call
lahf
push
jno
les
dec
push
scas
fistp
jecxz
mov
imul
pop
out
popa
jp
adc
lods
std
cmp
jg
sub
addr16
pop
bound
rcr
dec
stc
sbb
ret
push
mov
add
mov
sub
mov
dec
xchg
fs
push
shr
out
js
adc
cmp
pop
aaa
adc
adc
(bad)
sub
add
add
push
push
les
pop
out
call
repz
sub
test
add
jecxz
dec
mov
pop
xchg
pop
stos
mov
xchg
pop
dec
sbb
clc
xlat
(bad)
xchg
dec
xor
jne
sbb
outs
jo
out
cmc
adc
aaa
bound
mov
sti
mov
mov
sbb
aaa
mov
iret
cmp
push
loopne
sub
fcomip
test
cmp
repz
je
xchg
out
shl
aam
cmp
pop
sub
sub
adc
jecxz
icebp
mov
push
clc
mov
cli
or
fldpi
or
xor
sbb
inc
and
out
xor
das
adc
inc
pop
and
popa
jb
xchg
movntps
jmp
(bad)
sar
and
nop
mov
xlat
pop
loope
add
adc
add
pop
xchg
and
out
loop
xchg
cmps
clc
mov
rcl
stc
inc
dec
lods
or
cs
jb
pop
add
mov
ror
mov
or
fwait
push
cmps
in
jne
lods
push
push
ret
punpckldq
jg
cs
dec
adc
test
bound
bound
and
idiv
aad
aad
inc
jmp
cld
sbb
iret
sub
mov
das
mov
mov
sti
push
test
or
sbb
int3
ror
jns
ins
adc
dec
int
scas
cmc
mov
inc
or
xor
jmp
scas
mov
pop
mov
jl
or
stc
cs
(bad)
pusha
dec
cwde
enter
adc
push
loopne
jnp
pop
stos
mov
inc
xchg
out
lock
mov
leave
loope
and
inc
push
push
nop
mov
pop
sub
lods
mov
and
lods
js
fldcw
and
outs
push
rcl
cmp
mov
mov
pop
xor
sbb
mov
lds
jle
mov
pop
xor
or
xor
test
(bad)
lods
loope
enter
sub
sti
dec
mov
cmp
inc
xlat
std
mov
movlps
sub
retf
pop
adc
call
xchg
pop
fstp
fist
push
push
xchg
lea
jnp
jmp
xor
(bad)
stos
stos
push
frstor
inc
mov
outs
mov
inc
cmc
ss
inc
jp
push
add
retf
(bad)
in
pop
outs
test
es
test
jle
outs
ret
repnz
iret
sub
mov
or
mov
xchg
mov
lods
add
mov
sub
jl
xor
addr16
mov
mov
mov
push
mov
dec
in
jl
ins
cmp
jns
dec
ror
mov
or
adc
nop
jl
leave
bound
adc
push
cdq
sub
stos
push
xchg
or
int
and
loope
adc
sbb
(bad)
mov
adc
repnz
dec
and
xor
mov
pushf
out
cwde
push
mov
xchg
cmc
and
sti
jl
and
sahf
and
xchg
hlt
out
dec
inc
xchg
adc
ds
scas
psrad
imul
pushf
daa
push
or
jmp
repz
dec
and
mov
mov
std
test
adc
shl
sub
mov
mov
jl
adc
(bad)
fcomp
or
pop
sbb
mov
adc
int3
jne
bound
outs
inc
jmp
imul
lods
jo
jle
nop
movs
pop
mov
cmc
jge
and
arpl
dec
test
pop
(bad)
dec
shl
loopne
jle
pop
mov
(bad)
jp
lods
inc
or
sub
mov
add
xor
scas
inc
mov
outs
adc
loopne
sbb
pop
iret
stc
add
outs
aas
add
fsub
sub
dec
xchg
add
scas
stos
and
(bad)
aas
sbb
sbb
inc
jae
jns
mov
ret
adc
aas
sbb
outs
es
pop
aaa
adc
mov
xchg
jg
(bad)
adc
mov
xchg
idiv
jae
xor
xchg
or
pop
push
lahf
sub
sub
hlt
inc
(bad)
div
push
shr
xchg
pop
sbb
sar
xor
in
loopne
pop
out
je
or
inc
ret
in
inc
or
push
pop
push
mov
(bad)
sbb
es
fnstcw
jp
arpl
mov
mov
sub
push
(bad)
cwde
mov
pop
add
mov
loop
in
jmp
sti
out
xchg
adc
push
pop
call
or
jp
mov
repnz
test
xchg
jmp
cmp
adc
dec
pop
(bad)
ja
mov
sub
xchg
stos
aaa
pushf
mov
fcomp
or
push
int
data16
enter
xchg
sbb
out
mov
aad
jns
lock
popa
nop
push
sbb
push
inc
out
out
dec
stos
pop
shr
or
lock
rol
test
xchg
pop
cmp
shr
xor
repnz
shl
ins
in
sub
push
cdq
cli
ror
ss
dec
push
pop
stc
nop
add
pop
xchg
(bad)
add
cli
aaa
mov
xor
(bad)
rcr
mov
mov
stos
adc
jo
mov
mov
in
jo
fucomip
jmp
mov
not
int
push
mov
jae
movs
adc
dec
scas
fild
jmp
fld
xor
jmp
or
mov
pop
int
cmova
xchg
xchg
das
stos
xchg
daa
leave
lods
std
adc
push
pusha
dec
add
mov
mov
icebp
jb
mov
cdq
dec
sar
jmp
inc
bound
sbb
xlat
sahf
lahf
pushf
pusha
and
int3
into
fild
jae
in
test
fwait
pop
cmp
cmc
pop
loop
or
push
cmp
xor
ja
mov
mov
xor
or
ds
ja
lods
pop
pop
xor
pop
xchg
mov
in
mov
cmp
out
jo
ror
jmp
jno
call
scas
out
pop
repnz
xlat
test
fwait
(bad)
add
or
jle
inc
pop
pop
rcr
jmp
fs
sbb
and
gs
jl
jp
mov
mov
stos
cld
sbb
pop
fistp
js
jno
popa
popf
shr
stos
sub
lods
sbb
pop
dec
aas
(bad)
and
xlat
mov
mov
aam
pop
aad
fcomp
push
or
and
vandps
xor
cs
cmps
mov
in
mov
adc
cmp
out
es
pop
pop
movs
push
in
sub
cld
mov
repz
or
fcmovnu
pop
mov
sub
sbb
or
int
sub
push
mov
je
and
stc
gs
xchg
outs
enter
dec
mov
inc
and
fisub
inc
imul
xchg
into
js
fnstcw
loope
in
cwde
inc
ins
cmp
mov
jae
(bad)
cmc
arpl
mov
(bad)
hlt
js
pop
xor
popa
jecxz
test
xchg
xchg
xchg
lock
ret
cmp
pop
lods
in
ror
sti
mov
lods
jp
mov
aaa
or
add
test
adc
dec
(bad)
pop
prefetchw
movs
xor
xor
xchg
sub
lds
adc
dec
xchg
push
das
retf
pop
loope
aas
sti
in
ficomp
and
shr
dec
addr16
inc
outs
aad
mov
pop
adc
push
push
cmc
test
addr16
push
jmp
add
sub
and
das
aad
jb
mov
fwait
in
push
xchg
dec
imul
push
aaa
stos
and
outs
es
nop
in
mov
loopne
jp
dec
jge
cmp
mul
cmp
jge
out
add
sahf
sub
test
call
jnp
cdq
lds
dec
dec
mov
sti
lock
rcl
paddq
jl
out
cmp
jb
(bad)
sahf
int
loopne
push
ror
lock
pop
or
add
cdq
xor
lahf
retf
shl
or
mov
sbb
sti
mov
iret
mov
fdivr
popf
inc
jle
jae
pop
cmps
mov
adc
inc
nop
popf
cmp
mov
popa
push
push
pop
mov
out
loop
adc
jmp
add
call
ficom
cmp
fcmovu
mov
mov
cmp
(bad)
imul
mov
test
test
jno
pop
pop
mov
mov
adc
cmp
jmp
mov
pop
nop
dec
lods
cmps
xchg
and
or
pop
pop
out
aam
gs
loope
sbb
inc
jno
sbb
pop
jmp
sub
das
jns
ins
add
pop
xor
cs
outs
in
jae
mov
cmp
push
test
ja
gs
push
test
push
pusha
add
clc
std
mov
or
fucomi
ss
inc
retf
jo
leave
shr
ds
jmp
das
lods
xchg
xor
xor
mov
stos
push
das
daa
pop
mov
push
lds
(bad)
fcom
jo
push
xchg
scas
fldcw
and
bts
test
aaa
cmp
pusha
mov
inc
fistp
popa
aas
loop
(bad)
jns
fnstenv
sub
add
dec
jp
mov
rcl
sub
dec
rcr
dec
xlat
sbb
popa
test
mov
jo
test
fwait
xchg
xlat
and
sbb
jmp
push
and
adc
cdq
pop
adc
or
cmp
fcomp
mov
cmps
pusha
sti
sbb
(bad)
push
sbb
or
or
pop
and
dec
shl
(bad)
inc
fbld
sub
out
xchg
lods
adc
pop
push
lahf
or
jns
test
shl
push
dec
cmc
xchg
(bad)
and
and
xor
push
cmc
or
repnz
cmp
adc
mov
rol
xlat
pop
jge
enter
push
jmp
xchg
sub
movq
mov
pop
xchg
sbb
xchg
test
aam
call
sbb
adc
scas
into
cmc
jns
test
std
dec
dec
inc
test
not
add
xchg
pop
loop
xor
xor
stos
inc
movs
mov
aam
es
mov
(bad)
xor
mov
loop
xchg
dec
mov
or
cwde
xor
in
jnp
add
loop
test
push
(bad)
popf
jnp
sub
push
loope
or
stc
sbb
std
add
clc
je
pop
add
repnz
adc
pop
popa
xlat
cmp
jns
add
add
inc
sbb
pop
mov
aaa
loope
sub
inc
mov
or
(bad)
and
ret
(bad)
enter
push
push
mov
leave
mov
icebp
js
call
xor
movs
xchg
jle
cdq
sbb
mov
ftst
mov
and
sbb
jmp
jecxz
mov
dec
icebp
pmaxsw
pushf
and
sbb
dec
shl
aaa
icebp
push
dec
cwde
jmp
(bad)
mov
lahf
idiv
push
out
push
inc
inc
repnz
out
mov
gs
push
adc
push
(bad)
xlat
test
mov
jmp
ss
or
lds
les
gs
cli
outs
hlt
adc
(bad)
aam
push
mov
adc
jno
jmp
push
sub
adc
xchg
add
and
or
out
scas
push
shr
or
push
(bad)
sar
retf
(bad)
pop
test
call
xchg
fsubr
jge
mov
int
(bad)
hlt
mov
clc
(bad)
sub
movs
cmp
scas
aas
pop
xchg
sbb
fsubr
push
rol
cli
test
into
inc
or
xor
mov
pop
stc
xchg
cmp
in
lds
dec
cmp
mov
popa
dec
push
cli
loope
sti
dec
pop
or
xor
add
pop
sub
push
mov
sub
jns
or
and
popa
mov
mov
test
sahf
in
push
or
xchg
fnstsw
jecxz
fcmove
movs
popf
outs
mov
(bad)
ds
mov
mov
popf
push
out
es
sub
arpl
scas
ins
cld
pop
fld
jp
add
fcom
jl
std
or
sar
sub
dec
scas
jb
mov
(bad)
out
pop
push
add
mov
repz
dec
rcl
cmps
mov
xchg
and
jo
cwde
push
inc
or
sub
push
and
inc
fsubr
xchg
xchg
loop
dec
add
xor
add
sti
mov
(bad)
shl
add
aas
mov
call
bound
mov
push
data16
mov
inc
mov
test
jo
jmp
sar
xlat
push
mov
call
iret
xchg
pop
test
repz
dec
mov
outs
test
add
int3
es
movs
push
ret
fs
jle
fcomi
scas
loope
jno
inc
jge
test
mov
mov
push
stc
push
aad
add
mov
(bad)
cmp
pusha
sub
in
cs
loope
add
and
and
popa
mov
sbb
sbb
mov
mov
(bad)
loop
or
xlat
push
fadd
bound
push
scas
pushf
rol
adc
cs
js
aaa
jbe
rcl
xor
add
mov
xlat
xchg
ret
mov
in
cld
adc
out
imul
mov
xchg
mov
movs
sub
cmps
outs
mov
retf
push
mov
(bad)
movs
and
or
xchg
scas
cmp
out
sbb
jecxz
add
rcr
iret
add
cmp
mov
mov
lds
add
pusha
sub
test
pop
aas
cmp
jb
(bad)
out
push
and
jo
mov
das
ja
sub
lea
lock
sbb
mov
es
in
test
and
mov
sahf
and
das
hlt
mov
and
mov
adc
or
lahf
nop
aam
xlat
sub
cwde
bound
pop
jmp
push
mov
loope
mov
push
and
cld
out
hlt
sahf
es
jne
push
or
mov
mov
inc
or
jecxz
test
out
je
or
mov
pop
mov
call
hlt
sub
sahf
rcl
daa
push
(bad)
cmc
in
xor
sbb
repnz
js
pop
mov
jmp
(bad)
loopne
inc
jl
popf
retf
xchg
mov
ss
das
(bad)
test
adc
adc
aas
jg
push
dec
out
(bad)
and
enter
xor
mov
fstp
stos
cli
push
pop
cld
loope
ror
and
stos
ins
push
xor
out
sub
sub
enter
xor
out
push
repnz
mov
jl
and
repnz
mov
jbe
mov
sub
test
dec
clc
mov
push
(bad)
stos
and
or
call
and
movs
xor
adc
push
push
test
pushf
adc
stc
pop
scas
jmp
mov
jmp
mov
adc
jmp
pop
and
test
(bad)
popa
leave
push
pop
xchg
retf
xor
fwait
ret
repnz
inc
popa
lods
sahf
mov
sub
xchg
loopne
hlt
jae
and
inc
push
add
push
and
dec
sbb
fbstp
fadd
jns
pusha
stos
pop
xchg
xchg
pop
imul
in
call
push
das
shl
out
sbb
lea
push
shl
xchg
fwait
scas
cmp
mov
adc
add
cmp
push
jmp
xor
mov
lods
dec
mov
stos
retf
xor
ins
dec
mov
ins
call
repnz
cdq
je
popf
ret
dec
inc
test
pop
inc
jmp
sub
push
retf
xor
hlt
jmp
cmp
add
sbb
ret
aam
jmp
add
xchg
push
lods
push
push
retf
bound
(bad)
xor
loope
out
pop
sti
mov
sbb
sub
jnp
ss
pop
cdq
pop
jmp
add
push
call
xor
lods
cld
mov
aas
imul
pop
mov
(bad)
and
gs
vpandn
inc
fcomi
addr16
or
mov
enter
sub
pop
nop
imul
jno
jmp
fcmovnu
xor
daa
mov
push
fld
les
sbb
cmp
mov
into
xchg
aad
pop
push
test
scas
and
out
test
ins
dec
sub
rcl
imul
xchg
sahf
dec
sub
mov
loope
inc
in
pop
cmp
sub
dec
add
sti
mov
cmp
popa
add
aad
xor
mov
pop
mov
int
lea
sar
enter
out
aaa
jge
or
cwde
lfs
and
jg
and
fwait
shr
xor
loop
adc
dec
cdq
sbb
repz
jp
arpl
sub
sub
jg
mov
inc
pop
fmul
shr
or
mov
sbb
and
lea
adc
sub
and
(bad)
adc
adc
pop
ret
sub
mul
popa
movs
add
aaa
xor
not
hlt
xchg
jmp
icebp
fdivr
cmp
scas
inc
dec
cmp
aaa
jns
dec
push
inc
fnstenv
pop
or
jecxz
mov
mov
fsub
in
push
out
jl
pop
in
outs
icebp
xchg
pop
jecxz
je
jns
push
sbb
mov
repz
ds
sub
jnp
cmps
dec
xchg
pop
push
jg
(bad)
rcr
jl
push
fcmove
ret
mov
enter
adc
ror
pop
popa
out
(bad)
push
add
xor
dec
dec
push
adc
cmp
in
xlat
pop
pop
jle
popf
adc
imul
call
lods
jl
fwait
popaw
mov
sti
dec
adc
mov
bound
mov
push
(bad)
les
jl
and
inc
or
dec
xchg
push
clc
xlat
jmp
sbb
stos
out
xchg
ret
dec
adc
xor
adc
push
out
(bad)
and
mov
lods
xor
rcr
mov
dec
ja
out
shl
sub
int3
pop
xchg
xchg
inc
rcl
mov
push
imul
js
mov
out
enter
(bad)
cmp
cmp
fild
sahf
push
pusha
pop
inc
iret
or
rcr
jmp
pop
(bad)
gs
mov
jecxz
sbb
jmp
or
sub
sti
inc
mov
outs
ret
mov
clc
mov
fcomp
ss
adc
aas
mov
sar
inc
loop
jp
mov
cmps
aas
loop
and
sahf
pop
into
and
bound
ja
mov
mov
and
mov
sub
xor
pop
or
dec
inc
inc
cmp
xor
mov
cmp
or
loopne
mov
cwde
fild
sbb
imul
mov
dec
add
aad
cdq
inc
push
dec
into
jae
cmp
sub
xor
xchg
loop
and
xchg
es
imul
add
pop
xchg
or
lods
loope
or
mov
outs
sbb
(bad)
dec
into
mov
cmp
(bad)
outs
sbb
ds
cmps
movs
mov
call
xor
add
(bad)
mov
rcl
lods
fidiv
and
stc
das
mov
adc
push
lock
xchg
lahf
xchg
inc
leave
sbb
or
cmp
sbb
sub
push
jl
leave
aad
(bad)
or
cmp
push
add
inc
dec
or
loopne
xor
mov
fucomip
ret
mov
loop
fidiv
pusha
cmps
xchg
fstp
or
mov
xor
jecxz
inc
push
xchg
bound
std
push
and
jle
sbb
loopne
and
int
and
xor
mov
push
push
push
iret
nop
mov
sub
mov
shr
pop
lods
lea
shl
ds
mov
aad
sub
mov
xor
call
dec
mov
arpl
(bad)
jb
adc
xor
sub
pushf
adc
adc
jp
call
inc
aas
in
and
xchg
or
arpl
bound
add
mov
add
adc
pop
fstp
pusha
adc
push
push
sub
or
jo
scas
xor
stos
ins
inc
(bad)
dec
jbe
lods
dec
pop
test
inc
cmp
sbb
repz
or
mov
int3
cwde
jecxz
add
test
shl
call
jg
ss
in
pop
push
cmp
loop
jecxz
sub
mov
imul
mov
pop
pop
inc
dec
jecxz
push
dec
retf
cs
push
jbe
lahf
jmp
cmp
sbb
fmul
fiadd
icebp
test
fdiv
pop
pop
inc
retf
and
cmp
mov
movs
popa
(bad)
cmp
nop
loopne
mov
cdq
xchg
sub
inc
add
inc
mov
mov
dec
or
mov
xchg
aam
push
loop
jle
mov
hlt
adc
(bad)
mov
mul
bts
inc
les
xor
int
inc
xchg
add
iret
jle
mov
mov
xor
pop
cmc
fsubr
(bad)
mov
xor
inc
jb
adc
lea
imul
scas
mov
cmps
neg
les
push
mov
cmp
call
test
popa
cdq
gs
jns
sti
ret
pop
adc
mov
imul
push
pop
or
std
dec
outs
ins
mov
and
sub
xor
push
fld
adc
mov
test
cli
movs
adc
cmp
and
pop
outs
in
fidiv
stos
in
lods
sbb
jno
pop
push
stc
in
(bad)
sub
xchg
jl
add
(bad)
push
scas
in
inc
push
stos
sub
stos
sbb
ja
pushf
xor
ins
lds
and
dec
xchg
mov
ret
pop
xor
or
jle
jno
repnz
lock
neg
ret
pop
xchg
outs
mov
pop
mov
lods
and
or
xor
sar
(bad)
mov
sbb
push
cs
test
popa
aaa
movs
cmp
aaa
sbb
mov
xor
jne
dec
out
jb
dec
retf
add
push
mov
or
inc
adc
xor
jmp
jg
neg
aaa
stos
pop
ror
ror
fild
mov
fisttp
pop
leave
fwait
and
pop
add
fild
lock
fisub
(bad)
in
mov
clc
inc
std
xlat
xor
cmp
adc
mov
pop
div
mov
xchg
add
adc
ss
pusha
loopne
pop
add
mov
mov
push
xor
iret
mov
dec
adc
scas
pop
rcr
leave
adc
pop
call
sub
push
pusha
ret
and
retf
mov
push
sub
in
sbb
in
out
push
repnz
add
loopne
inc
cld
fwait
add
in
loop
dec
push
jecxz
jb
hlt
pusha
xor
inc
popf
call
aam
mov
add
sub
fsubr
pop
sti
push
mov
shr
test
iret
adc
inc
jb
test
jae
xor
and
xchg
mul
pop
add
jno
imul
sub
xlat
cmp
xchg
push
sub
ds
push
cdq
jle
xchg
sub
pop
add
cmps
dec
pop
push
stos
mov
push
add
(bad)
cli
cdq
dec
mov
inc
aad
ins
and
pop
push
lock
push
popa
xor
into
mov
inc
xchg
aaa
add
jbe
fmul
out
xlat
stc
pop
lds
inc
mov
jne
sub
fucomi
call
adc
inc
cld
into
into
jne
add
xor
jb
icebp
into
mov
mov
cmps
add
repnz
pop
pop
shl
xor
cmp
out
addr16
lods
or
popa
jecxz
mov
in
sub
add
mov
sti
mov
mov
ror
jge
outs
rol
pop
adc
xor
dec
sub
pop
les
mov
mov
sbb
pop
dec
test
pop
mov
in
fimul
mov
inc
xchg
call
mov
add
in
movs
pop
push
stos
add
push
and
(bad)
adc
fwait
inc
lock
mov
bound
push
mov
in
xchg
jb
push
fucomi
stos
push
imul
stos
nop
lods
pusha
push
xchg
push
inc
inc
xchg
ss
daa
movlps
push
adc
movs
ds
mov
fidivr
xchg
pop
mov
call
xchg
mov
movs
xchg
cmp
fidiv
ja
mov
pop
out
inc
test
das
repnz
fcomp
mov
or
push
pop
loope
jmp
mov
jle
retf
dec
or
inc
cmps
xor
mov
sbb
sbb
xor
nop
pop
fnstenv
push
(bad)
imul
arpl
into
lods
add
inc
retf
or
dec
test
pop
test
out
inc
sti
mov
adc
cmp
or
ret
rol
sbb
and
mov
(bad)
enter
sbb
push
push
jg
or
mov
push
pop
inc
bound
cmp
lds
and
sbb
inc
cmp
xchg
repnz
fwait
icebp
popf
repz
pop
add
mov
pop
je
xor
xor
fsub
test
fcomp
mov
test
push
add
leave
and
sbb
dec
popf
sti
mov
pop
call
jno
arpl
and
arpl
sahf
xor
in
xlat
out
dec
stos
mov
sbb
mov
pop
pushf
adc
dec
sbb
add
dec
mov
lock
adc
mov
sbb
sub
test
dec
pushf
repz
add
jecxz
xchg
jl
rcl
xchg
sub
xor
mov
pop
sahf
fistp
imul
mov
push
add
xchg
repnz
cli
movs
mov
pop
bnd
jae
rcr
int3
push
fs
or
les
push
repz
dec
fcomp
call
jmp
jae
inc
sbb
mov
and
call
lds
std
les
push
mov
sub
pop
and
xor
pop
retf
stos
pop
xor
sbb
and
inc
pop
pop
xchg
outs
jge
mov
push
push
cmp
std
(bad)
ret
shr
dec
lods
mov
test
cmp
xchg
or
mov
xlat
pop
sub
adc
repz
fsub
adc
push
(bad)
jmp
pushf
mov
(bad)
ret
imul
adc
inc
enter
mov
inc
mov
gs
or
add
fiadd
push
sub
and
sbb
adc
rol
mov
pop
inc
add
daa
sub
rcl
and
jb
fisttp
xor
movs
inc
and
ss
stos
cmc
icebp
lods
nop
xchg
ficom
mov
cmp
push
test
mov
mov
imul
(bad)
xchg
scas
into
push
xchg
cli
aam
jne
mov
adc
cld
into
mov
gs
sbb
icebp
xor
sub
popf
outs
retf
jno
jae
mov
cld
lds
mov
pop
jnp
and
popf
dec
out
repz
mov
inc
push
stos
cmp
cmp
dec
sti
mov
sti
jne
movs
mov
pop
pop
add
lods
rcl
sar
xchg
mov
aas
(bad)
jl
and
ins
mov
jmp
pop
xchg
adc
call
add
das
mov
(bad)
outs
jnp
push
jecxz
adc
and
add
aaa
es
and
jp
cmp
scas
(bad)
cmp
call
(bad)
aam
mov
cld
rcr
dec
movs
sub
out
sub
daa
repz
mov
xchg
in
hlt
mov
push
inc
mov
cli
and
xor
dec
add
sub
test
in
popa
inc
movs
popf
mov
jge
nop
adc
clc
fiadd
cdq
int3
mov
pushf
dec
push
into
pop
sbb
sbb
xor
test
std
imul
cld
or
lock
sub
or
inc
ins
mov
cmps
jmp
xchg
and
dec
mov
je
pop
sbb
pop
adc
scas
ret
les
sub
cwde
call
xchg
add
adc
movs
sahf
jle
mov
sbb
dec
mov
xchg
scas
push
mov
loopne
push
repnz
retf
mov
push
adc
adc
mov
and
mov
popf
pop
jns
dec
movs
sub
jo
iret
mov
mov
or
in
leave
push
add
pop
popa
jle
sbb
dec
stos
das
mov
fwait
retf
dec
mov
pop
and
jmp
sbb
aam
neg
test
jg
push
inc
xor
dec
xor
mov
(bad)
(bad)
rcr
int3
enter
lds
out
jbe
sbb
std
(bad)
mov
dec
pop
test
retf
loopne
cmp
jb
cmp
push
cmp
into
add
cdq
imul
repnz
fild
lods
sub
pop
mov
and
mov
ret
dec
imul
ret
rol
push
cdq
sub
jmp
mov
in
int
sahf
fsubr
and
cmps
dec
mov
mov
cmp
fwait
pop
mov
aaa
adc
in
icebp
movs
wrmsr
jmp
int
int
cmp
arpl
pushf
add
xchg
sti
sbb
push
fsub
sub
stos
adc
cmp
push
add
pop
jmp
mov
inc
adc
add
and
xchg
mov
xor
nop
std
mov
enter
enter
out
xor
cmp
push
daa
ret
xor
dec
ror
leave
jbe
int
pop
mov
sbb
pop
fsubr
cmps
cmp
js
retf
fwait
jno
pop
es
mov
mov
int
loop
xor
lss
xor
mov
nop
xchg
sub
mov
mov
mov
ret
inc
dec
add
ja
dec
aaa
jl
lds
sub
pop
int
inc
cmp
daa
in
hlt
or
std
jbe
and
xor
jl
pop
mov
jmp
mov
inc
gs
mov
pushf
mov
nop
mov
adc
cmp
fsubr
adc
add
pop
pop
mov
pusha
xchg
(bad)
in
sub
loopne
fwait
movs
(bad)
ss
cmp
ins
rcl
je
sahf
adc
inc
sbb
rcl
in
int3
sti
rol
jmp
rol
mov
push
cmp
sub
sub
movs
or
and
xchg
jecxz
(bad)
cmp
fucomip
dec
vmovupd
xor
xchg
pand
pop
cmp
dec
test
add
test
cmp
jmp
sub
cmps
movs
sbb
(bad)
inc
pop
ds
dec
jmp
add
stos
jmp
in
and
mov
xchg
mov
mov
jp
scas
movs
cmp
cmp
fwait
stc
js
cmp
adc
jmp
or
leave
nop
xor
jge
hlt
push
mov
test
call
push
(bad)
cmp
in
jno
test
mov
(bad)
mov
mov
cmps
pushf
sar
lods
pop
cmp
loope
mov
mov
int3
(bad)
fcmovu
xchg
pop
jg
and
pusha
mov
dec
xchg
xchg
mov
cmps
iret
mov
popa
sahf
xchg
inc
fcom
pop
loopne
das
cmps
push
cld
test
xor
icebp
out
hlt
or
mov
lods
in
imul
shl
or
les
sub
mov
arpl
add
xchg
and
mov
in
sub
sbb
xor
sar
fisub
call
lock
sbb
(bad)
xor
popf
imul
jne
enter
xchg
jl
inc
mov
cmp
push
(bad)
out
cmp
int
and
or
data16
mov
(bad)
bnd
push
sbb
jno
mov
pop
call
push
sar
addr16
inc
not
mov
stos
mov
cmp
in
mov
xchg
pop
fadd
repz
das
push
cli
push
pop
cmps
aas
cmp
shr
frstor
cli
shl
push
xor
out
pop
(bad)
dec
xchg
jnp
add
clc
push
sub
mov
and
pop
sbb
rol
fdivr
push
mov
lds
(bad)
dec
(bad)
adc
xor
sar
iret
mov
cdq
push
les
mov
xor
jge
imul
(bad)
sbb
mov
jnp
jge
jg
jl
jne
sub
pop
fst
mov
push
pop
add
syscall
out
loope
repnz
pop
int3
pop
in
push
lds
stos
test
sub
jnp
and
outs
cmp
rol
dec
ret
cli
in
into
xor
ss
dec
adc
mov
xor
retf
cmc
div
into
lahf
ins
jle
pushf
pop
pop
(bad)
outs
sub
pusha
mov
loopne
and
popf
inc
cmp
mov
iret
ficomp
jns
cmc
adc
ins
sub
retf
fnsave
add
sbb
cmp
gs
xchg
pop
scas
fstcw
inc
cmps
stc
inc
sub
jle
je
lods
push
xchg
pop
fild
push
mov
jmp
(bad)
loopne
and
mov
movs
fist
sbb
mov
sbb
(bad)
jmp
mov
xchg
dec
mov
shr
mov
mov
movs
fs
jle
cs
lock
jns
stos
ins
xchg
fidivr
adc
rol
xor
clc
add
sbb
fldenv
int
in
jns
arpl
mov
and
jg
leave
cwde
es
and
mov
icebp
add
pushf
pop
cmps
ds
push
or
mov
(bad)
adc
cs
pop
loope
and
jbe
stc
(bad)
cli
xor
pop
or
mov
add
inc
div
jecxz
sti
add
sbb
call
sbb
add
jae
(bad)
mov
push
mov
inc
adc
mov
ror
mov
inc
inc
cmps
dec
clc
stos
pop
mov
add
cld
shr
inc
inc
callw
loopne
imul
jns
mov
adc
in
lods
push
mov
ds
es
cmc
sub
push
fsub
sbb
push
gs
xor
xchg
xor
inc
les
shr
inc
fsub
and
ds
push
xlat
cmp
out
ds
cmp
mov
out
out
out
mov
les
scas
std
push
adc
std
ret
mov
ret
sbb
inc
push
(bad)
(bad)
scas
mov
jnp
test
pop
lods
rcl
mov
jmp
jb
iret
push
movs
add
dec
(bad)
dec
jle
adc
and
jo
jb
fsubrp
scas
mov
mov
push
hlt
mov
jb
sbb
sub
call
jg
add
sbb
lahf
loop
push
mov
mov
mov
pushf
sub
jne
nop
cmp
inc
or
stc
cmp
xchg
sbb
stos
call
popf
and
mov
fidiv
addr16
jg
sub
cs
mov
push
and
jmp
aad
mov
in
add
lahf
fld
xchg
jmp
js
mov
fnclex
(bad)
push
ss
data16
jno
dec
sub
cmc
pop
out
cmps
sbb
pusha
cmp
fadd
push
popf
xchg
les
xchg
push
push
mov
imul
push
sbb
(bad)
sahf
cmp
sub
xchg
das
mov
adc
neg
inc
test
adc
mov
test
mul
cdq
movs
jle
inc
add
jo
mov
sahf
mov
jb
cmp
xor
push
fs
mov
retf
push
jge
pop
mov
dec
rcr
(bad)
aam
gs
fcomi
push
dec
cmp
fisub
mov
rol
sub
and
mov
mov
int
(bad)
sbb
mov
ja
xrelease
push
cmps
(bad)
xchg
pop
fsubp
stos
xchg
mov
int3
jmp
ins
loopne
popf
aas
test
repnz
cdq
dec
adc
cld
xor
sbb
mov
or
popa
pop
adc
pop
xor
std
ja
scas
sbb
sar
add
int3
loope
sub
lea
mov
ins
and
and
dec
xor
push
inc
push
pop
repz
add
dec
sbb
jns
and
stos
mov
aam
stos
in
out
or
push
cld
fwait
mov
ret
mov
push
sbb
xchg
or
pop
loopne
inc
push
mov
inc
mov
xchg
cmp
add
pop
dec
pop
test
std
inc
scas
mov
out
aas
xor
rcl
jne
icebp
sub
ja
adc
push
test
and
cld
fdivr
rol
adc
pop
cli
jns
call
jp
sub
and
inc
sbb
mov
adc
push
pop
push
in
cmp
push
imul
sbb
dec
mov
daa
cmp
rcr
mov
imul
lea
int
cmp
and
push
push
jns
cmp
dec
cmps
pop
jo
dec
sahf
rep
stos
jecxz
push
leave
mov
lea
popf
mov
hlt
xor
repz
shl
shr
loopne
push
adc
sub
lahf
adc
adc
hlt
xlat
cs
dec
jb
int3
dec
or
xor
inc
inc
adc
cmc
sbb
fsub
aam
mov
sub
scas
test
mov
sbb
xchg
rcr
in
xchg
out
lods
adc
xchg
aam
xchg
mov
adc
rcr
push
mov
or
test
add
mov
out
stc
fsubr
dec
ds
sbb
or
(bad)
mov
(bad)
ds
sub
leave
nop
sub
stos
stc
inc
inc
or
stos
pop
fs
pop
mov
xchg
and
adc
test
ret
sbb
mov
sub
outs
mov
pop
cld
jl
sub
lods
inc
into
mov
or
pop
or
int
pop
mov
aas
ret
scas
loop
push
data16
sub
jne
iret
daa
dec
sbb
push
call
or
stc
out
stc
pushf
fisttp
lock
sbb
out
xchg
(bad)
fsubr
adc
xor
(bad)
sti
adc
sub
and
gs
inc
movs
fidivr
es
mov
xor
xchg
stc
push
fcom
sub
mov
pop
ins
gs
out
add
xchg
rol
fdiv
addr16
push
push
cmp
jns
mov
aaa
and
int
push
mov
sub
xchg
daa
or
jo
push
inc
xchg
cmps
inc
cmp
pop
jecxz
scas
adc
cli
push
or
fimul
push
arpl
mov
sbb
inc
ja
inc
lock
cmp
push
into
dec
(bad)
dec
add
dec
lods
mov
mov
xchg
or
adc
hlt
and
mov
fsqrt
jb
add
or
cmp
push
ins
cmp
movs
test
aaa
cmp
into
icebp
xor
js
or
sbb
xlat
cmp
out
pop
sbb
movs
test
mov
add
lgs
in
sub
pop
aas
in
fs
cmp
xor
jmp
aad
push
lea
shr
push
mov
loopne
arpl
enter
data16
movs
fild
int3
out
pushf
mov
sti
fisttp
test
xlat
jno
popa
inc
xor
lahf
aaa
push
ss
mov
fild
push
mov
add
(bad)
jle
mov
inc
popf
adc
xchg
cwde
jae
aam
xor
cmp
add
mov
out
stos
(bad)
jle
lock
imul
jns
mov
sbb
ret
cmps
mov
push
add
add
add
aad
jecxz
sub
sub
icebp
rol
shr
jno
pop
mov
mov
jbe
(bad)
push
and
or
mov
(bad)
enter
xor
push
rcr
fisubr
fwait
std
inc
pop
rol
enter
push
inc
sub
pop
push
sahf
addr16
xor
(bad)
outs
jle
mov
xor
xchg
mov
lock
bound
ja
imul
sub
sub
lock
jecxz
add
jne
sbb
out
int3
adc
iret
nop
ret
mov
mov
inc
fs
movs
xchg
dec
dec
inc
add
rcl
retf
mov
mov
adc
movs
clc
add
dec
lods
sbb
test
inc
jmp
bound
jp
shl
cs
or
jae
ins
push
xchg
xchg
icebp
call
mov
lock
(bad)
jae
xchg
inc
add
cli
inc
fs
or
repnz
inc
mov
mov
or
adc
jo
fucomip
lods
adc
cld
xor
cdq
jge
xlat
pop
fcomp
sub
mov
movs
jne
pushf
mov
popf
retf
mov
and
sbb
int
cs
mov
fistp
das
loop
xchg
call
cmp
or
cmp
daa
push
clc
mov
jg
imul
push
nop
pop
movs
sbb
cld
push
out
aaa
sub
push
in
push
dec
pop
into
or
inc
aam
pop
(bad)
aaa
add
sbb
adc
push
lahf
(bad)
ror
call
or
dec
sti
in
xor
push
inc
scas
sub
inc
jb
repz
push
popa
xlat
enter
xchg
xchg
xchg
dec
add
and
int
int3
add
ins
jmp
retf
cli
in
xor
and
imul
xor
adc
scas
test
fwait
xor
in
sti
test
xor
xchg
mov
dec
jnp
xor
xor
jmp
sti
fiadd
xchg
jmp
add
xchg
retf
add
js
stos
jns
xor
test
imul
mov
mov
dec
jmp
arpl
and
dec
sbb
popa
repnz
popf
lods
jbe
ret
adc
inc
push
add
cmps
int3
dec
push
ins
cs
popf
movs
or
mov
hlt
xlat
xchg
jle
sar
sbb
imul
pop
xchg
jmp
mov
cmp
(bad)
enter
xor
sub
sub
inc
push
aam
jge
and
mov
adc
popa
aas
sti
pop
ror
inc
rcl
push
movq
es
dec
pop
sub
fisub
ins
mov
adc
sbb
lock
dec
ins
push
mov
call
inc
sbb
push
repnz
xchg
lahf
in
scas
adc
(bad)
mov
cmps
and
(bad)
sti
je
mov
xor
cmps
pop
adc
pop
mov
int3
sub
ds
push
fs
iret
dec
dec
clc
fsubrp
(bad)
cdq
add
out
ret
(bad)
cld
test
pop
add
aam
add
call
jmp
mov
pop
mov
inc
or
mov
ins
loope
das
push
jae
or
cmp
movs
sbb
pop
dec
push
inc
call
stc
jno
stos
mov
mov
mov
sbb
sti
mov
push
mov
fdiv
and
cld
je
enter
xor
fild
mov
ret
dec
jmp
hlt
sbb
mov
int
pop
sub
fst
mov
jns
pop
fnstenv
in
and
jmp
xchg
jge
test
and
pop
arpl
mov
(bad)
sub
xor
lods
push
inc
es
int3
fwait
lea
jns
ins
fadd
sub
lods
jmp
cld
pop
mov
popa
inc
dec
int3
cli
sub
std
sbb
es
lea
vpsubusb
icebp
cdq
jmp
push
aaa
cmps
mov
nop
xchg
repz
not
stos
mov
daa
push
out
sbb
dec
dec
jns
sbb
sub
fisub
mov
movs
je
xor
(bad)
test
lock
repnz
fdivp
imul
inc
pop
sub
xchg
pop
xor
mov
outs
mov
or
(bad)
in
sub
push
pop
aam
cmps
cld
mov
(bad)
ins
movs
rcr
(bad)
int
enter
cmps
in
jnp
push
outs
call
js
jl
js
hlt
lods
lods
nop
ficomp
aaa
adc
ret
icebp
cs
jecxz
pop
out
cmp
retf
push
mov
push
dec
pop
add
outs
aad
or
mov
lea
mov
adc
nop
test
mov
sub
xor
pop
sub
push
push
mov
inc
xchg
xchg
into
xchg
clc
push
jmp
ja
lods
(bad)
aaa
push
enter
mov
into
xchg
and
xchg
loopne
or
fiadd
xor
push
test
inc
or
cwde
aaa
add
lahf
or
out
cwde
daa
aas
jbe
into
xchg
faddp
pop
xor
ret
xchg
jmp
pop
stc
outs
mov
push
into
pusha
out
cmp
mov
mov
cmp
push
mov
sub
push
sbb
(bad)
inc
sbb
xchg
cwde
push
xchg
mov
leave
add
mov
std
push
pop
cwde
loopne
sub
cld
std
xlat
pop
push
mov
retf
push
dec
pop
xor
(bad)
jno
in
cmc
lods
loop
fimul
scas
fwait
nop
lahf
jae
icebp
push
adc
add
jo
xchg
or
xchg
shl
add
(bad)
xor
jne
jo
ficomp
sub
jecxz
xchg
inc
mov
ds
fmul
adc
and
pop
out
xor
call
jle
inc
std
xor
out
std
mov
mov
mov
sahf
pop
pop
ret
in
xchg
mov
cmp
xchg
in
icebp
push
lods
js
out
inc
mov
jo
popa
jecxz
aas
call
dec
cmps
cdq
aas
adc
sub
add
dec
xchg
pop
pusha
out
in
xchg
and
add
or
ret
push
mov
(bad)
jecxz
icebp
and
ret
mov
mov
push
inc
adc
sub
push
je
inc
fnsave
mov
jbe
stc
jmp
mov
icebp
jbe
call
in
pop
les
xor
cmp
out
mov
mov
and
(bad)
(bad)
push
inc
test
jmp
addr16
dec
inc
push
test
sahf
push
mov
jae
inc
xchg
or
mov
(bad)
jae
fadd
mov
mov
pop
test
scas
or
rcl
jns
out
push
cs
jecxz
es
sti
mov
rcr
dec
arpl
lea
dec
mov
in
sub
fnstenv
(bad)
sar
fsubr
xchg
sbb
inc
test
addps
out
cld
shl
xchg
inc
iret
rol
mov
imul
stc
pop
mov
dec
sub
pusha
loop
sbb
mov
fnstsw
add
aas
loopne
rcr
xchg
inc
rcl
dec
enter
mov
hlt
sbb
jmp
inc
test
sbb
mov
ss
cmp
imul
aam
xchg
sub
xor
cwde
mov
dec
adc
pop
leave
jge
xchg
gs
adc
and
and
xchg
loopne
sub
mov
into
mov
pop
aas
sub
test
sbb
sub
das
adc
xor
push
xchg
movs
push
fsub
jns
mov
cli
push
cmp
dec
out
retf
adc
lods
lods
xor
lods
jle
psubq
mov
imul
push
mov
(bad)
cli
std
movs
inc
jp
xor
xor
mov
mov
lock
add
lods
xchg
test
push
mov
outs
xor
mov
add
dec
aad
add
sub
fwait
(bad)
fnsave
xchg
xor
adc
adc
out
iret
ja
adc
inc
fimul
mov
jecxz
movs
outs
std
xchg
mov
sub
pop
scas
lods
int
pop
sbb
mov
shr
cwde
jmp
mov
leave
aam
stos
push
adc
sub
jno
jle
sbb
mov
icebp
mov
enter
or
mov
fisubr
lahf
cmp
push
push
jo
aam
enter
and
push
sub
fstp
push
jg
add
aaa
add
lahf
mov
dec
and
jae
dec
lods
(bad)
popf
or
push
jl
push
fsub
les
(bad)
push
sub
leave
cmp
clc
and
and
ja
mov
fldpi
out
xor
and
adc
xor
push
fdiv
popa
dec
outs
jmp
cld
mov
pop
push
adc
xchg
push
mov
outs
lods
or
or
aas
pop
mov
pop
fucomi
add
mov
repnz
push
sub
mov
sub
pop
xchg
add
dec
add
cmp
outs
fdiv
out
jo
push
cmp
outs
mov
icebp
push
lods
in
mov
(bad)
(bad)
and
mov
mov
ins
dec
push
fdivr
mov
fdiv
or
jb
cwde
xor
stc
sub
popf
pushf
imul
or
in
sub
dec
and
mov
push
cdq
addr16
cs
adc
xor
stos
dec
sbb
int3
xchg
dec
in
cmp
cmp
ja
add
jge
lods
xlat
jle
retf
jge
(bad)
inc
ds
xor
dec
mov
mov
sbb
in
gs
dec
jae
xor
push
xor
aam
leave
mov
push
mov
icebp
loope
ins
xor
mov
sbb
bswap
sub
inc
leave
outs
ror
inc
cmp
lock
jmp
cmp
push
scas
test
mov
jl
jl
std
ins
push
pop
jae
scas
sub
cwde
adc
cwde
xchg
jg
push
pop
add
(bad)
test
mov
int
jg
ror
sar
or
cmps
std
cmp
repnz
stos
mov
sbb
xchg
add
test
mov
das
rcr
jno
mov
sbb
fcmovnbe
out
dec
jb
and
das
imul
or
scas
push
(bad)
mov
ret
mov
mov
and
loope
mov
xchg
jmp
mov
push
and
cmc
dec
push
xor
fwait
scas
shr
out
jge
ins
or
(bad)
inc
sbb
cdq
pop
mov
dec
or
cmps
cmp
mov
mov
sahf
adc
lds
or
ret
jmp
adc
and
es
push
push
and
mov
in
cmp
jecxz
outs
adc
aaa
lods
or
in
pop
shl
mov
push
xchg
pop
lahf
sbb
adc
xlat
cmp
loope
mov
jae
out
je
test
rcr
mov
loopne
push
add
jmp
xlat
push
bound
xchg
xor
cmp
add
dec
xchg
mov
aam
cmp
push
sub
in
or
ds
popa
les
adc
int3
out
out
out
cmp
add
stc
aam
inc
aas
cld
repnz
dec
lock
and
scas
fcomp
int3
movs
jmp
(bad)
cmps
lock
repnz
jae
jae
mov
ins
mov
pop
xor
xchg
mov
jle
movs
neg
mov
dec
cmps
cld
leave
pop
retf
mov
jne
cmp
(bad)
add
jge
fimul
push
mov
or
nop
xor
sub
push
mov
sub
cmp
ror
mov
inc
test
es
inc
js
add
mov
and
jo
jbe
cmps
setp
mov
adc
fadd
mov
add
jecxz
inc
xchg
loop
bound
movs
push
xchg
jns
jne
loopne
(bad)
dec
dec
mov
cmp
cli
ror
rcr
in
or
pop
call
nop
mov
mov
push
popa
cmps
pop
xchg
div
dec
sub
add
mov
les
mov
jecxz
pop
(bad)
and
test
xor
sar
mov
xchg
push
pop
mov
call
fdiv
or
push
into
cmps
mov
aaa
cld
in
ss
or
mov
and
idiv
xor
mov
shr
xlat
pop
mov
xor
dec
rcl
pop
jle
cwde
(bad)
jge
push
fnstcw
repnz
mov
mov
shl
in
xchg
fmul
dec
sbb
or
jnp
sbb
movs
in
push
sub
in
ins
lods
mov
ficomp
retf
pop
jmp
cmp
adc
jl
lock
fwait
xchg
popa
add
mov
mov
ja
and
aad
pop
ins
in
movs
stc
push
xor
dec
sub
loope
pushf
inc
sub
iret
xchg
xlat
jb
(bad)
fld
hlt
jecxz
push
sar
mov
adc
and
mov
pop
xchg
adc
ds
imul
inc
popa
cs
cmc
adc
push
or
outs
fistp
(bad)
cmps
adc
push
test
pushf
popf
xor
cmps
and
ins
push
jnp
add
rcl
and
scas
adc
lahf
push
mov
xchg
cmp
xor
pop
xchg
add
or
adc
pop
outs
lea
sbb
adc
mov
push
push
dec
cmc
jg
or
sbb
jp
and
xor
in
mov
sbb
stos
in
mov
push
aad
mov
or
mov
in
and
inc
shl
add
inc
sbb
and
xor
pop
mov
jno
xchg
pop
punpckhbw
mov
push
cs
test
aad
add
rep
hlt
sbb
dec
lds
pop
xor
cmp
out
in
(bad)
pop
pop
mov
adc
shr
loop
enter
pop
test
lock
ret
pop
adc
cmp
xchg
icebp
daa
aad
icebp
cmp
in
dec
pop
repz
sbb
xor
jns
pop
dec
dec
push
push
int
sbb
pop
pop
dec
sahf
shl
adc
push
xchg
push
pop
or
bound
or
mov
xor
pop
pop
mov
dec
fist
dec
jbe
imul
mov
push
jns
cmp
dec
push
mov
sub
mov
mov
into
retf
cs
sbb
ficom
mul
inc
pop
loop
adc
jbe
cmps
and
sbb
adc
and
xchg
ja
xchg
push
push
sbb
inc
jb
popf
add
cmp
pop
sbb
jbe
hlt
icebp
cmps
mov
cmc
dec
call
test
add
jle
push
sbb
shl
into
addr16
in
mov
xor
cmps
adc
jns
pusha
aas
aas
repz
outs
pusha
out
mov
aas
mov
test
repnz
pop
test
adc
xchg
cmp
fsub
in
int3
lods
ss
push
mov
mov
ss
push
xchg
xchg
nop
and
icebp
rcl
cmp
enter
loope
sbb
jg
mov
daa
ins
mov
pop
sbb
xchg
cmp
adc
xchg
dec
jns
adc
(bad)
(bad)
fist
in
es
mov
hlt
jmp
or
rcr
push
mov
mov
adc
cli
dec
sti
fidivr
lea
iret
retf
addr16
int3
sbb
cmp
in
sub
in
xor
adc
pop
popf
dec
int3
retf
into
mov
xor
xor
popf
mov
sub
mov
dec
fisttp
mov
cmp
jmp
lahf
call
jnp
movs
pop
fwait
popf
sbb
jmp
clc
scas
shl
sbb
rcl
aam
mov
mov
adc
retf
in
out
je
pop
(bad)
pop
fdivp
sub
xchg
in
leave
sahf
scas
out
or
xor
xchg
repnz
lods
pop
jge
cmovl
adc
mov
inc
push
lods
les
dec
inc
paddq
jae
aas
sbb
int
push
sub
and
cmps
call
ror
pop
into
js
dec
retf
in
ret
out
popa
aad
jmp
enter
cmp
mov
outs
add
jb
arpl
mov
ds
sub
sub
rcl
adc
jp
call
in
jns
scas
cld
fld
mov
call
inc
mov
movs
outs
inc
sub
sub
jnp
jg
mov
push
cmps
and
or
cwde
mov
mov
(bad)
movs
add
in
sar
stos
xchg
sub
cmc
pop
cmp
lods
mov
mov
mov
scas
ins
inc
cmps
pop
ds
test
jo
cmps
imul
sbb
popf
pcmpgtd
add
inc
ins
popa
mov
int3
mov
or
inc
cmps
ffreep
or
pop
mov
cli
mov
shr
mov
mov
sbb
aaa
js
jmp
push
iret
(bad)
push
neg
inc
imul
int3
pop
push
jle
lods
mov
cmps
mov
int3
pop
cmp
jno
ds
mov
fld
test
stos
add
inc
arpl
mov
shl
mov
sbb
call
or
xchg
mov
in
and
dec
(bad)
jle
test
push
sbb
cwde
add
retf
fisubr
push
stos
cld
xchg
jge
xchg
ss
or
xchg
jge
imul
mov
pop
ja
mov
adc
mov
test
arpl
sub
inc
mov
leave
data16
ins
dec
xchg
loopne
mov
movaps
jnp
add
aam
adc
sahf
stos
aas
jo
mov
lock
fistp
sub
jb
sbb
pop
stos
xor
shl
mov
fstp
mov
and
add
sbb
dec
push
fld
sahf
movs
jecxz
jae
ret
or
jg
sub
aam
mov
push
mov
pop
sbb
push
mov
mov
cmp
fsub
les
lods
fldcw
outs
adc
test
xor
(bad)
not
ins
xchg
cmp
inc
and
sti
(bad)
mov
imul
add
dec
pop
and
test
mov
pop
inc
mov
clc
call
adc
jle
stc
and
scas
aad
sar
cmps
je
or
bound
hlt
add
sti
mov
pusha
or
data16
fstp
jnp
sub
pop
push
inc
cli
leave
js
arpl
push
lahf
call
loopne
xor
or
xor
clc
inc
adc
rol
out
sar
mov
call
adc
test
nop
adc
inc
jae
fnstcw
mov
sar
cmc
or
and
adc
pushf
cli
inc
stos
ja
es
jmp
jno
inc
mov
xor
sbb
sub
xor
je
les
aaa
sbb
jg
mov
push
inc
das
xchg
cmpps
xchg
add
lods
fcmovnb
sub
mov
mov
sub
std
sub
mov
push
popa
mov
add
mov
sar
loope
xchg
lods
mov
inc
xor
pop
ficom
xor
into
pusha
outs
adc
lods
jecxz
cs
sub
and
test
pop
shl
test
(bad)
push
pop
add
in
and
pop
cmp
in
dec
and
xchg
xchg
jbe
cli
adc
jecxz
fsubp
adc
pop
inc
sar
xchg
ret
aad
ja
mov
sbb
push
jb
popf
jg
pop
jmp
xor
stos
arpl
out
ret
out
ds
int
inc
enter
out
movs
inc
(bad)
jge
mov
pop
pusha
jae
mov
scas
stos
cli
and
call
pop
sub
push
fwait
xor
mov
jno
sar
mov
aaa
adc
cdq
mov
sub
and
add
dec
loope
scas
call
mov
mov
pop
mov
mov
test
ret
jnp
cmp
adc
push
and
adc
dec
fldcw
rcr
push
enter
frstor
jno
sbb
jne
pop
xchg
push
test
jns
xor
cmp
ins
mov
jae
js
dec
scas
adc
sub
or
add
ins
xchg
sub
dec
sbb
sbb
sti
push
or
xchg
sbb
mov
adc
jno
(bad)
jmp
inc
jmp
clc
add
cmp
jnp
cs
dec
dec
and
int3
es
aas
call
push
loope
cmp
xchg
and
movs
adc
pxor
(bad)
(bad)
in
cmp
and
and
mov
mov
inc
das
repnz
pop
dec
fadd
mov
push
fwait
jmp
xchg
popf
movs
data16
push
jns
add
cwde
dec
sub
movs
hlt
xchg
imul
xor
or
shl
adc
jmp
cmps
int
push
stos
ja
fwait
push
or
test
push
mov
xor
dec
test
mov
imul
fs
inc
mov
and
daa
cs
arpl
xor
scas
mov
dec
and
into
xrelease
fs
and
(bad)
pop
fwait
xchg
jnp
push
push
mov
pop
daa
mov
mov
or
rol
js
arpl
mov
call
loop
mov
out
mov
in
daa
sbb
test
popa
mov
or
lea
fwait
mov
fsubr
sub
mov
out
inc
pop
stos
mov
jl
cs
xlat
das
jle
pop
loope
(bad)
repz
dec
icebp
sub
xchg
push
out
pop
sbb
xchg
mov
mov
mov
add
cmp
mov
into
jge
test
sub
ss
dec
dec
jmp
mov
mov
sub
bound
xor
in
loope
adc
xchg
mov
mov
fimul
or
jmp
mov
dec
and
xor
ins
inc
jnp
cmp
cmps
nop
(bad)
out
test
sbb
cmc
out
(bad)
push
dec
adc
xchg
xchg
jecxz
xchg
mov
clc
stos
popf
cli
call
and
push
pop
adc
add
sar
cmp
aad
movs
or
div
adc
dec
rcr
dec
test
push
(bad)
adc
aam
fadd
cmp
inc
popa
add
mov
mov
mov
mov
test
pop
mov
aad
outs
mov
lods
mov
daa
(bad)
inc
pop
sbb
cmp
sbb
add
cmp
jno
mov
retf
dec
pop
xor
add
mov
iret
inc
das
dec
xchg
pop
mov
jp
xlat
je
mov
test
mov
add
xor
push
leave
imul
enter
test
and
xor
dec
loop
add
xchg
cmp
push
cmp
cmp
jns
lds
daa
mov
sbb
mov
ret
in
shl
scas
loopne
mov
sti
movs
pop
in
inc
das
stc
outs
pop
mov
fldenv
add
or
test
(bad)
outs
popf
(bad)
out
push
retf
neg
fbld
xor
shld
xchg
add
int3
cmp
scas
dec
stos
cmp
stos
pop
enter
in
retf
push
std
data16
dec
xor
cmp
out
cmc
fbld
adc
mov
mov
retf
iret
mov
das
and
dec
push
jnp
lods
push
(bad)
in
ja
test
dec
adc
mov
sub
cmp
lock
mov
stc
push
nop
mov
fisubr
lea
pop
xchg
dec
loope
push
outs
cmp
repz
inc
dec
pop
sti
or
or
lea
xor
pop
loopne
adc
sub
dec
inc
adc
call
sar
xor
sbb
jno
xor
test
cmp
fisttp
popf
inc
adc
mov
std
mov
cs
fld
dec
sti
sti
push
cmc
out
pusha
mov
mov
not
and
outs
mov
ds
sub
aam
sub
lds
lock
cmp
dec
mov
fsubr
aaa
iret
test
mov
and
in
xor
sub
dec
mov
dec
push
pusha
dec
add
xchg
repnz
lds
inc
inc
mov
mov
sbb
sub
push
mov
mov
test
lods
fnsave
mov
mov
imul
outs
jbe
jp
inc
ret
test
call
xchg
fwait
movs
retf
or
ds
push
bound
pop
sub
or
ror
das
iret
leave
int3
sub
sub
outs
shl
mov
lock
push
or
fcomp
clc
sub
loope
mov
rcl
repz
xchg
sub
or
out
mov
mov
pop
sub
pusha
idiv
push
aad
mov
xor
les
stos
ror
fiadd
not
fadd
xchg
mov
test
(bad)
mov
add
aaa
shr
dec
aas
or
(bad)
mov
and
xor
mov
inc
jns
frstor
cs
pop
div
jle
pop
cli
repnz
(bad)
icebp
and
mov
aaa
xor
adc
out
pop
pop
fnsave
xchg
sbb
mov
xchg
pop
sahf
fwait
mov
jmp
xchg
mov
add
cmpps
inc
aaa
mov
mov
inc
mov
iret
in
fisttp
push
xchg
mov
dec
add
mov
lahf
je
and
js
idiv
nop
sar
cld
mov
add
or
int
mov
retf
lea
adc
and
sbb
arpl
inc
cmps
imul
push
pop
add
mov
sbb
mov
push
out
scas
dec
inc
cdq
jbe
jmp
stos
popf
pop
xchg
imul
and
(bad)
mov
add
sti
shl
push
scas
aad
sbb
xchg
mov
mov
fs
fsubr
adc
in
outs
out
loopne
cmp
mov
cmp
(bad)
mov
sbb
xor
pop
or
jecxz
mov
sbb
mov
mov
or
repz
jp
xlat
inc
mov
fneni(8087
mov
aad
nop
xchg
add
inc
scas
dec
fistp
mov
(bad)
mov
push
test
data16
stos
ins
idiv
adc
fucompp
push
retf
inc
inc
out
sti
jmp
xor
xor
adc
fistp
fdiv
push
jle
push
or
push
pop
jg
(bad)
jb
add
mov
dec
adc
test
add
lds
push
inc
test
add
sti
lods
fstp
xchg
fcmovb
adc
pop
icebp
movs
stc
dec
retf
js
mov
jl
lahf
cmp
mov
mov
xchg
cli
sub
inc
or
cmp
icebp
inc
stos
lds
mov
test
into
pop
and
pop
loopne
or
dec
sbb
test
je
hlt
out
repz
push
in
ins
and
ins
cld
les
mov
xor
outs
jo
cmp
inc
movs
clc
pop
mov
mov
jb
les
inc
lods
push
cdq
dec
test
stos
das
add
mov
sbb
imul
mov
cs
lahf
loopne
inc
push
ss
sub
push
shl
jnp
lock
ds
or
mov
enter
popa
aam
and
ret
icebp
jp
(bad)
sti
xchg
inc
aas
rcr
arpl
pop
fwait
into
das
mov
(bad)
(bad)
std
adc
inc
cmp
(bad)
mov
ins
bound
add
lods
clc
(bad)
xchg
popa
mov
push
outs
adc
sub
ror
ficom
xlat
je
sub
mov
cmp
int3
ins
mov
mov
sti
imul
shl
in
inc
loop
jne
(bad)
adc
jge
cmps
es
fsubr
(bad)
(bad)
mov
pop
jl
cmp
fs
inc
mov
add
jnp
cli
sbb
pop
jge
jmp
jns
test
mov
xlat
and
xor
lahf
sbb
arpl
mov
pop
jno
ror
and
mov
lock
push
imul
mov
js
int
(bad)
mov
push
pop
push
adc
push
dec
sub
cld
aaa
je
leave
adc
mov
sbb
sub
aaa
add
push
push
jno
(bad)
xchg
inc
vpshlq
pop
ss
fist
ins
dec
frstor
cli
adc
adc
push
ins
ja
push
sar
push
jmp
lods
xor
adc
into
jmp
and
fistp
inc
jmp
fwait
idiv
ss
jne
inc
push
xlat
sar
imul
sbb
mov
bound
ja
sbb
jecxz
adc
test
aaa
out
int3
pop
push
popf
sti
fcomp
jnp
mov
mov
stos
xlat
inc
inc
mov
movs
ret
stos
push
mov
cmp
rcr
f2xm1
xor
xchg
outs
(bad)
repz
imul
outs
es
sti
mov
cmc
add
push
test
jno
sbb
push
jns
ret
dec
mov
and
adc
sbb
pop
adc
mov
lea
push
dec
sti
pop
push
mov
adc
mov
out
mov
mov
call
add
clc
pop
test
arpl
out
mov
(bad)
cmp
push
and
fdiv
cmp
push
or
mov
adc
cs
hlt
dec
cmps
retf
xor
push
push
jecxz
or
xchg
pop
aas
cmp
dec
cmps
lds
cmp
enter
fsub
xchg
and
jo
xor
rol
push
xchg
xchg
xor
or
aam
outs
push
sbb
add
lahf
(bad)
int
movlps
fisubr
xor
mov
out
mov
jg
or
sub
push
or
mov
pop
push
mov
inc
push
mov
ins
fsubr
ret
or
pusha
or
pusha
fwait
cmp
add
mov
mov
pop
je
repnz
iret
push
lfs
mov
sbb
test
push
mov
push
pop
pop
loope
add
mov
ins
fist
and
jp
(bad)
sub
mov
shl
xor
sub
fistp
xor
inc
sub
pop
lock
psrlw
daa
sub
push
push
pusha
lahf
mov
js
jl
sti
(bad)
mov
xor
inc
xor
mov
jmp
shl
push
mov
fisttp
xchg
iret
jecxz
or
dec
jbe
in
jae
push
cmps
mov
iret
ret
jecxz
out
add
jl
aas
adc
cs
mov
xchg
addr16
ffree
outs
push
sahf
ficomp
jmp
jne
cmp
and
adc
retf
loopne
push
jo
xlat
push
neg
outs
cmp
mov
jo
pop
xchg
dec
or
jmp
cld
push
push
jg
push
cmp
mov
mov
sbb
mov
in
fld
push
pop
cmp
inc
sbb
in
adc
fwait
ins
add
xchg
(bad)
or
movs
xor
jl
pop
mov
sti
and
mov
adc
add
pop
inc
jo
mov
xchg
arpl
jnp
push
out
mov
(bad)
rep
and
mov
jge
shl
jb
mov
mov
mov
loopne
(bad)
call
or
push
std
mov
and
or
pop
sbb
cmc
call
and
cmp
push
int3
es
jl
scas
mov
xchg
cmp
lods
add
and
dec
and
jbe
outs
and
jmp
push
dec
jnp
xor
loope
test
cld
std
or
add
mov
stos
retf
jne
push
or
in
jnp
into
pop
test
aad
add
pusha
xor
retf
mov
sti
int
stc
inc
loopne
fld
xor
pop
and
jl
push
xchg
sbb
in
pop
lock
call
pop
std
and
mov
ja
sbb
rcr
nop
push
in
jmp
sahf
es
inc
and
retf
loop
gs
pop
xor
in
out
sub
jmp
mov
jbe
enter
push
sub
dec
lds
(bad)
gs
lds
cmp
dec
inc
and
je
mov
cli
fsubr
adc
xlat
das
movs
punpckldq
pop
fwait
int3
lods
or
jns
mov
jmp
inc
mov
push
pop
stos
pop
in
jecxz
push
pop
cmps
adc
jg
pop
mov
mov
iret
mov
jl
push
in
fwait
and
and
jge
cld
adc
adc
test
ret
jnp
in
clc
mov
sbb
inc
jbe
dec
adc
mov
adc
das
push
gs
fidiv
mov
test
sbb
(bad)
iret
out
nop
and
shr
out
rcl
sub
or
xchg
push
ret
pusha
(bad)
sub
test
adc
ror
jns
int
fcomp
mov
hlt
mov
mov
stc
push
stos
call
push
ds
dec
add
in
push
adc
push
jmp
pop
(bad)
xchg
dec
dec
out
jecxz
(bad)
enter
jb
repz
dec
mov
loop
mov
push
xor
sub
int3
shl
cmc
xchg
cmp
outs
or
mov
dec
or
or
pop
mov
mov
sbb
inc
inc
dec
mov
inc
xchg
test
icebp
dec
leave
call
jbe
xor
in
(bad)
or
jbe
dec
cmp
fidivr
dec
mov
scas
mov
sbb
pop
das
inc
pop
repnz
ins
ret
cmc
inc
pop
jge
nop
iret
out
and
inc
jmp
cmps
mov
push
adc
je
push
fs
enter
xchg
aas
or
gs
(bad)
mov
aas
hlt
cwde
mov
mov
adc
mov
shr
test
xchg
jl
jmp
(bad)
aas
cmps
pop
mov
test
and
sub
jp
xchg
fsub
sub
and
imul
inc
inc
fucomp
scas
xchg
mov
ins
dec
sub
ror
push
mov
loopne
lods
sbb
xor
xor
add
jae
dec
or
sti
dec
fsubr
or
cld
call
gs
dec
movs
call
jmp
pop
mov
cmp
int3
into
inc
les
and
mov
mov
popf
pop
gs
push
sbb
nop
xor
mov
pop
cdq
sub
fsubr
repz
imul
(bad)
sub
int
mov
ss
dec
pop
xchg
hlt
dec
add
imul
ret
mov
dec
lahf
xchg
inc
stos
cmp
ret
test
in
push
mov
into
(bad)
sub
inc
(bad)
mov
cmc
xchg
jecxz
lock
cs
add
cwde
nop
or
outs
push
fmul
outs
mov
data16
cmp
pop
shl
pusha
jle
mov
adc
inc
push
fadd
popa
jmp
mov
push
js
cmp
cmp
jl
(bad)
outs
pop
xor
pop
loopne
jmp
pop
xchg
add
aaa
ret
xlat
gs
test
aaa
sbb
fdiv
mov
sbb
cmp
cmp
enter
mov
data16
cmp
xor
outs
cmp
out
frstor
loope
shl
rcr
idiv
xchg
push
fwait
daa
mov
ins
bound
out
xor
jb
and
pusha
pushf
xor
push
into
pop
dec
and
cmp
out
test
jge
dec
jmp
cdq
xor
adc
jmp
jne
gs
scas
ror
add
idiv
loope
sub
ins
jmp
cmps
lods
mov
scas
cmp
call
adc
stc
cmp
int
xchg
loopne
and
call
aas
add
inc
in
movs
sub
cdq
ins
(bad)
mov
clc
push
std
imul
cmp
(bad)
push
add
cmp
leave
ss
enter
cmp
jmp
ds
sar
(bad)
jmp
inc
mov
cdq
xchg
inc
loope
add
add
pop
cld
jns
mov
pop
mov
add
cmp
int3
add
mov
cmp
jmp
add
repnz
ds
and
push
outs
bound
or
pop
push
jle
push
jg
xor
jge
fsub
jns
repz
mov
pusha
aaa
xchg
sub
dec
ret
add
pusha
mov
mov
xor
push
push
cwde
idiv
popf
jle
jge
in
pop
gs
and
cmp
mov
pop
jns
pop
sbb
addr16
in
loop
(bad)
out
add
fsubr
mov
out
fisub
enter
sub
xor
cdq
sahf
fwait
hlt
fbstp
mov
mov
mov
mov
movs
jb
cli
pop
jecxz
cmp
into
stos
adc
rol
add
or
inc
add
stc
emms
mov
xchg
add
ja
mov
mov
jb
pop
int3
mov
jmp
mov
push
inc
xchg
out
mov
int3
ja
rol
xchg
dec
mov
push
push
mov
sub
jg
cdq
jp
inc
sbb
mov
sar
pop
and
sbb
jne
push
xchg
popf
xor
sbb
inc
xor
and
sub
fidivr
cmp
push
lahf
add
xor
mov
cmp
ret
jns
outs
sub
push
xor
(bad)
xlat
fld
mov
cli
stos
jmp
mov
pop
repz
pop
xlat
or
cwde
das
and
ret
dec
cmp
or
pop
imul
adc
jl
in
call
or
cmp
cmps
fucomp
es
and
sub
and
jb
jns
sbb
jmp
mov
push
cmp
push
std
pop
push
jle
push
mov
pop
pop
jle
int
fcmovnb
xchg
enter
mov
push
dec
nop
xor
fisubr
or
pop
mov
xchg
xchg
imul
pushf
icebp
cli
(bad)
cwde
lods
push
mov
push
sub
inc
xlat
(bad)
jl
aam
retf
leave
push
rcr
xor
stos
loopne
leave
mov
ret
pop
add
call
mov
dec
(bad)
sbb
adc
popa
xor
aaa
(bad)
scas
hlt
add
ret
mov
cld
sub
mov
cmp
aad
xchg
mov
mov
fist
shr
sub
add
and
or
jmp
inc
addr16
les
out
sar
and
pushaw
sub
jmp
jg
(bad)
enter
stos
push
les
xchg
xor
cmp
sub
cmp
fbld
sub
test
mov
test
or
dec
jnp
pop
dec
stos
test
sar
ins
mov
into
retf
fs
(bad)
cmp
xchg
rep
xchg
arpl
call
cmp
xchg
add
push
adc
mov
daa
jbe
out
cmp
cmp
aaa
div
pop
jnp
cli
rol
pop
inc
xchg
add
sub
movs
push
cmps
test
mov
xor
dec
ins
xchg
or
push
jnp
mov
popa
push
ins
call
and
(bad)
push
xor
in
pop
xchg
fmul
jg
mov
js
pop
(bad)
lock
js
fmul
pop
add
rcl
sub
jmp
or
(bad)
in
pop
fs
scas
popa
daa
pop
dec
out
xor
jmp
retf
sub
addr16
jge
or
fcomp
fwait
inc
xlat
mov
jbe
ret
shl
test
sub
ins
sar
lods
pop
cmp
push
push
and
adc
pop
clc
test
(bad)
jmp
aas
imul
xchg
pop
dec
or
shl
pop
push
shl
mov
inc
mov
or
sbb
add
inc
test
add
(bad)
cmps
in
adc
(bad)
dec
cmp
cld
adc
retf
mov
push
mov
push
mov
hlt
and
iret
(bad)
test
adc
mov
or
sti
mov
call
dec
loope
lahf
aad
test
loop
cmp
ret
jb
push
test
xchg
les
cmp
mov
cmps
add
fisubr
pop
mov
mov
movs
jnp
test
pusha
int
dec
cmp
xor
cmp
into
je
pop
sub
xor
sbb
shr
push
cld
mov
imul
(bad)
rol
fld
jne
mov
daa
mov
jbe
data16
pop
pusha
xchg
or
adc
xor
test
xchg
movs
in
xor
cmp
dec
outs
(bad)
out
dec
add
(bad)
mov
(bad)
out
mov
xlat
pop
retf
or
sub
push
dec
outs
push
mov
movs
fidivr
outs
push
lahf
and
sbb
cmp
or
mov
cmp
sbb
jno
stos
and
dec
pop
int3
out
test
sti
jo
jno
out
push
sbb
mov
into
mov
rol
cmp
dec
xchg
inc
adc
daa
test
sub
inc
pop
pop
mov
mov
or
fs
out
shr
jg
lods
icebp
mov
div
inc
jp
in
jp
mov
adc
into
fnstsw
xor
outs
sub
test
push
push
and
and
imul
(bad)
movs
clc
int3
outs
pop
jle
test
adc
(bad)
mov
pop
in
adc
arpl
add
xchg
inc
(bad)
cmp
sar
xor
popa
jno
fist
ss
jp
xlat
push
ror
jae
stos
mov
dec
test
pop
ins
push
add
cmp
mov
repz
mov
push
mov
in
mov
lahf
cmp
push
jmp
cmps
cmps
sub
push
cmp
pusha
push
std
dec
aam
lock
in
mov
mov
adc
ror
dec
mov
adc
xchg
arpl
jecxz
add
mul
push
mov
cmc
dec
lea
push
sub
cmp
scas
test
loop
dec
adc
pop
push
adc
or
pop
push
xchg
(bad)
push
mov
jl
lahf
cmp
es
ret
into
mov
mov
enter
sub
fst
xchg
repz
iret
and
mov
fdivr
pop
lahf
mov
xchg
in
ss
fdivr
xchg
lods
dec
out
arpl
pop
bound
pop
pop
pop
scas
mov
and
push
inc
add
fld
jl
mov
and
addr16
in
into
int
ins
dec
or
inc
add
mov
cs
pop
and
ja
not
sbb
inc
xor
xchg
jecxz
loope
xor
push
cs
pop
cdq
test
xor
xlat
cmps
ja
or
mov
ins
adc
push
pop
loop
lods
mov
pop
sbb
fistp
imul
xchg
lock
dec
adc
lods
mov
daa
mov
imul
cmp
push
lahf
xlat
fadd
mov
pop
icebp
int3
mov
shl
adc
and
outs
in
mov
popa
fst
pop
stc
(bad)
jle
daa
imul
loopne
fcmovu
(bad)
and
jge
push
aad
ret
inc
mul
pop
scas
mov
jbe
and
into
cld
sar
js
cmp
lea
iret
dec
or
repz
shr
mov
cmp
push
pop
out
add
lods
push
shl
test
adc
cmp
movs
inc
out
idiv
xchg
dec
xchg
jnp
call
stos
clc
mov
mov
xlat
call
outs
jmp
add
sub
mov
jns
fwait
add
lahf
in
aas
stos
adc
jmp
(bad)
or
pop
cmps
test
sbb
adc
and
mov
test
loopne
jge
pop
xor
adc
add
push
shl
inc
ja
mov
and
xchg
int
pop
pop
dec
add
adc
mov
cmc
lds
jns
push
push
push
xor
(bad)
jns
into
dec
cwde
dec
sub
sbb
jle
stos
das
inc
sbb
dec
inc
mov
jmp
pop
cmp
jne
sub
xor
add
mov
in
push
fwait
pop
rep
popf
jp
jae
push
mov
mov
aam
nop
mov
pop
or
or
xor
shl
aas
or
mov
or
dec
cmp
push
shl
sbb
push
pop
ficomp
cmc
pop
sar
lods
cs
outs
xchg
pushf
xchg
ret
inc
fnstsw
sbb
(bad)
addr16
lahf
dec
add
repnz
movs
sbb
mul
and
out
and
cmc
scas
js
inc
arpl
sahf
les
dec
ds
pop
dec
dec
pop
lods
movaps
add
out
mov
int3
es
shl
arpl
xor
mov
dec
adc
xor
push
cli
shr
fwait
cmp
aas
pusha
inc
mov
in
inc
pop
sbb
mov
jge
dec
sub
sbb
or
fist
push
scas
push
enter
fst
data16
adc
jmp
dec
lock
xlat
retf
nop
or
pop
daa
out
sahf
clc
dec
cld
es
add
dec
xor
cmp
imul
jmp
aad
ret
dec
dec
popf
and
cmp
push
adc
sti
mov
arpl
pop
dec
popf
bound
aaa
stos
daa
lods
movs
push
sub
fbstp
ins
inc
inc
jg
stc
imul
push
adc
fsub
fwait
jno
int3
push
pushf
mov
sti
xlat
pop
dec
(bad)
ins
outs
cmps
rol
addr16
cmp
mov
push
push
out
jmp
and
jo
sub
jecxz
cld
rol
out
call
fs
cmc
shr
loope
jg
mov
aas
push
xchg
push
xor
bnd
aas
xchg
movs
(bad)
xor
xchg
mov
fisttp
add
call
xchg
and
xor
(bad)
adc
jnp
xlat
int
sub
scas
sbb
lds
mov
fisubr
mov
arpl
inc
into
xor
je
and
xchg
add
shr
jle
ret
lods
lock
mov
and
and
cs
mov
aad
push
shl
mov
(bad)
xchg
push
cs
in
mov
pop
inc
fdiv
push
fidivr
pop
jge
in
repz
mov
sbb
adc
or
jp
sbb
sub
pushf
mov
mov
add
icebp
xchg
dec
out
fdiv
imul
imul
mov
aam
pop
pusha
push
lds
xchg
add
jp
movs
dec
fs
push
not
stos
jmp
xor
fs
stos
jl
adc
xchg
adc
mov
int3
data16
cmp
mov
out
jle
inc
jmp
add
mul
movs
loop
mov
fwait
pop
ror
aad
out
push
ror
inc
sar
cmps
sbb
add
lahf
pop
xor
inc
cmc
dec
lods
push
jle
in
jne
(bad)
jno
inc
in
xor
mov
or
cdq
pop
daa
mov
sbb
js
aam
dec
dec
and
jae
or
jmp
adc
popf
pop
sbb
push
in
loopne
loopne
repz
jl
push
inc
mov
cli
ins
mov
jl
sub
int
xor
cmp
adc
jo
adc
stos
imul
aad
mov
inc
xchg
adc
repnz
and
fnstcw
loop
mov
push
inc
into
fsubp
jmp
sbb
xor
xchg
outs
fcmovnu
jmp
xchg
push
jmp
inc
pop
mov
sbb
adc
xchg
pop
imul
push
push
(bad)
dec
jmp
mov
jle
mov
movs
ss
mov
call
lahf
sub
call
and
sub
mov
push
outs
mov
xchg
cld
adc
inc
fimul
fcomp
adc
mov
xchg
cmps
adc
mov
push
mov
pop
xchg
sub
(bad)
mov
xor
lahf
dec
cmps
xchg
outs
outs
mov
sub
cmp
call
adc
ins
bound
ins
ror
add
mov
or
adc
pop
in
loope
sub
mov
test
clc
inc
fsub
and
jbe
dec
push
push
sbb
out
or
jne
in
push
test
inc
sub
shl
imul
sub
jl
movs
lgs
push
sbb
vprotw
das
mov
and
adc
je
jno
sub
dec
jl
cmp
inc
aam
jmp
jb
fnstenv
sti
fcomp
mov
fmul
icebp
mov
jmp
leave
xchg
ret
out
adc
adc
xor
jns
stc
adc
enter
mov
leave
xor
push
pushf
mov
int
lahf
push
out
inc
into
inc
je
mov
bound
or
in
mov
dec
and
hlt
xchg
imul
retf
pop
mov
cmp
lods
loopne
stc
xchg
sub
mov
loope
rcl
fst
outs
jno
mov
cwde
mov
sub
sbb
cli
pop
adc
cld
aam
dec
test
sar
cmp
cmps
dec
mov
das
pop
pop
ins
sub
ss
pop
push
ins
sbb
push
push
ja
sub
jmp
in
int
push
push
retf
and
pop
adc
pop
aam
mov
xchg
push
aas
push
jne
mov
dec
das
adc
popf
fs
mov
or
lea
pop
mov
push
imul
or
cli
mov
dec
out
pop
mov
push
pushf
lock
push
sbb
sub
jg
inc
jmp
jo
loopne
xlat
jmp
inc
adc
mov
adc
test
retf
aam
test
addr16
jne
inc
and
in
inc
jl
xor
sbb
pop
jmp
add
adc
ret
fstp
jmp
sbb
imul
mov
fild
pop
nop
xchg
out
jl
dec
loopne
mov
dec
pop
mov
retf
ja
out
out
jecxz
leave
imul
arpl
add
push
mov
jge
in
loopne
adc
inc
das
je
inc
mov
imul
rol
int3
les
ror
sub
or
sub
js
out
and
and
and
and
push
dec
rcl
clc
arpl
xor
dec
adc
daa
cwde
cwde
inc
xlat
mov
xor
leave
sbb
test
mov
adc
jae
mov
and
mov
push
scas
or
or
jns
sub
jbe
imul
sahf
fcom
pop
test
mov
stos
xchg
pop
out
test
aad
xchg
ins
icebp
push
xchg
aas
out
or
dec
sahf
pusha
jae
sub
sbb
or
clc
lea
ins
test
imul
pop
(bad)
push
pusha
retf
xchg
adc
movs
sahf
pop
push
sbb
aaa
cmc
jb
xchg
jnp
lock
push
pop
sub
inc
mov
cld
repz
sub
push
push
outs
dec
xor
sar
lds
push
mov
loopne
push
push
pop
push
int3
or
lea
push
dec
call
(bad)
jmp
adc
push
push
pop
shr
pop
in
mov
jge
add
lea
xchg
test
xchg
xchg
mov
idiv
mov
gs
dec
cli
xchg
fstp
mov
loop
fwait
xor
(bad)
imul
and
cmp
popa
imul
call
loopne
daa
stos
outs
loopne
fbld
add
popf
inc
hlt
loopne
mov
sbb
movs
test
outs
jmp
movs
mov
cdq
dec
inc
mov
mov
data16
adc
and
arpl
gs
addr16
mov
ja
inc
push
test
int3
cmp
and
xchg
add
jmp
inc
ins
push
ss
xchg
jnp
fistp
xchg
pop
push
inc
scas
sub
out
(bad)
sub
inc
mov
mov
ss
adc
xchg
pop
in
test
sti
inc
sub
sub
xor
mov
jae
(bad)
dec
mov
into
pop
ret
jae
pop
inc
nop
shr
mov
clc
sahf
stc
mov
bound
adc
sbb
pop
jbe
lds
cmc
into
mov
es
and
cmps
pop
push
sbb
xor
inc
rep
sbb
lds
inc
cmp
test
mov
out
movs
jae
dec
loope
pop
mov
sub
mov
xchg
enter
inc
sub
in
bsf
sbb
loopne
call
and
add
lock
int3
inc
and
ret
mov
rcl
jmp
pop
lods
cmc
or
lahf
jns
cmp
imul
ficom
je
cmps
mov
in
test
sbb
sub
movs
and
das
xchg
das
outs
mov
xchg
xchg
dec
enter
lock
inc
shr
push
xchg
mov
fisttp
xlat
pop
fwait
repnz
xchg
cmp
sbb
and
push
pop
lods
mov
pop
aas
clc
ins
inc
std
sbb
les
(bad)
js
and
ds
popa
xor
dec
jns
and
pop
aam
sbb
stos
jle
nop
je
fs
mov
retf
cmp
cld
pop
cmp
fs
mov
jae
ret
or
fsubr
dec
hlt
mov
sub
jne
sub
push
lods
jno
adc
fild
mov
pop
cmp
jmp
mov
or
in
fldenv
dec
mov
inc
xor
inc
xchg
enter
mov
mov
test
dec
xchg
mov
adc
pop
mov
inc
push
out
jbe
std
imul
test
or
stc
pop
or
cmps
scas
test
xchg
(bad)
arpl
jle
lea
mov
sbb
es
or
and
pop
sub
aam
mov
push
dec
push
fwait
xchg
ds
mov
adc
sbb
loopne
pop
and
cld
(bad)
movs
lods
mov
push
xor
stos
add
(bad)
fmul
dec
out
mov
ss
rcl
out
adc
cmps
lock
into
or
imul
pop
sub
das
add
cmp
pop
mov
hlt
add
(bad)
cmc
icebp
test
add
adc
mov
mov
jo
xor
lock
lods
cmp
push
dec
leave
std
test
or
pop
into
pop
mov
stos
xchg
mov
mov
cmp
xchg
adc
cmp
(bad)
in
iret
pop
xor
fnstcw
mov
push
jne
data16
mov
mov
or
(bad)
cmp
ret
adc
ror
outs
movs
stos
cmp
test
ja
pop
mov
popa
pusha
movs
cmp
push
xchg
sbb
not
cs
imul
ja
mov
fcmove
ins
ficomp
mov
cmp
in
lock
xchg
(bad)
xor
xlat
xor
jnp
in
sar
in
mov
inc
cmp
pusha
mov
push
clc
dec
addr16
das
int
test
mov
dec
lock
push
jmp
out
inc
cmp
rcl
pop
push
in
call
enter
xor
jg
imul
fwait
inc
adc
gs
rcl
mul
mov
cdq
mov
adc
xchg
add
js
add
lods
ins
jnp
pop
lea
push
ret
pusha
or
adc
test
lods
xchg
inc
imul
shl
fistp
fisub
hlt
adc
xchg
fbld
sbb
imul
dec
push
inc
frstor
mov
pop
stos
jl
test
mov
into
inc
cmp
jp
sub
lahf
call
inc
in
mov
dec
mov
and
pop
mov
pushf
test
inc
lea
(bad)
and
xchg
inc
or
mov
sub
or
out
in
and
or
pop
mov
out
loope
xor
dec
jae
test
sub
dec
call
or
xor
adc
outs
sbb
ret
in
jns
sub
dec
test
es
or
je
xchg
jmp
sbb
pusha
sti
jecxz
xchg
push
xchg
mov
cmp
jmp
fistp
in
pop
pushf
xor
les
mov
pop
rcl
test
add
dec
push
in
cmps
ret
test
test
test
mov
cmp
out
in
push
int3
push
cmp
add
jp
sti
mov
or
mov
les
es
call
sub
sbb
lods
lea
(bad)
out
adc
cmp
xchg
rcr
daa
push
mov
mov
imul
dec
cmps
adc
and
js
(bad)
out
or
test
sti
mov
lea
jmp
sub
fist
adc
int
fcomip
sbb
popa
(bad)
pop
test
and
xchg
cmp
jbe
js
jmp
fisttp
inc
call
sub
pop
pop
add
int
sub
test
sbb
cmp
and
mov
jmp
(bad)
cmp
or
or
dec
adc
loop
in
lea
shl
mov
mov
dec
sbb
fnstcw
aaa
and
sbb
stos
mov
sbb
mov
out
sub
add
or
popa
(bad)
aas
and
lea
sbb
imul
lea
scas
add
sbb
pop
imul
jg
mov
cs
lock
sub
xchg
jno
cdq
int3
arpl
mov
push
test
jae
mov
(bad)
push
ret
mov
idiv
es
adc
jge
inc
js
xor
aam
sub
loop
mov
xchg
cdq
cmps
xor
pop
iret
dec
and
jnp
call
clc
mov
pop
stos
daa
sar
test
mov
ins
xor
imul
sub
(bad)
scas
adc
add
call
push
and
pop
sub
pop
lahf
aaa
add
inc
es
sbb
fstp
jo
fs
stos
jbe
aas
fimul
dec
es
in
push
dec
mov
cwde
xlat
fld
dec
xor
inc
inc
movs
fstp
xchg
dec
sahf
dec
push
inc
or
jge
adc
jmp
xchg
ds
(bad)
pushf
imul
sbb
js
xor
(bad)
xor
pop
xchg
scas
std
nop
outs
adc
pushf
out
ins
cld
xor
and
add
fisttp
rcr
mov
mov
jno
out
jnp
out
(bad)
mov
call
inc
fchs
or
and
icebp
fst
les
mov
push
jnp
or
jns
iret
lds
ja
dec
cmp
or
mov
into
rep
jb
js
xchg
mov
cs
jno
cmp
out
sbb
fist
add
add
mov
mov
div
ins
in
pop
dec
call
gs
fcom
fnsave
and
lds
dec
(bad)
call
sub
mov
scas
aad
scas
mov
in
or
ja
fist
pop
test
jp
call
jmp
cmp
adc
ds
test
or
ffree
xor
repnz
call
fldenv
pop
out
repnz
jae
popa
sub
or
stos
fs
test
pop
lahf
lock
or
call
or
pusha
fxch
ja
lock
jmp
ret
retf
ret
js
test
mov
loop
push
loop
outs
(bad)
into
jecxz
je
test
out
addr16
push
jmp
int3
inc
stc
cmps
je
inc
xor
test
cmp
(bad)
adc
jle
sbb
xchg
test
push
test
lahf
mov
xor
jl
scas
(bad)
nop
jp
aaa
inc
loop
inc
lods
nop
out
loop
mov
cmp
adc
push
xor
ret
lds
mov
xor
jp
sbb
fcomp
scas
daa
mov
ins
ss
fcomp
cld
jmp
repz
in
xor
test
or
dec
xchg
pop
xchg
aam
xchg
test
and
jae
adc
adc
sub
popa
cs
xor
or
mov
sbb
imul
cdq
pushf
jns
add
cmc
jno
or
shr
cmp
dec
fnstcw
popa
adc
ins
and
popa
lock
mov
adc
neg
and
stos
in
scas
ficom
out
add
sbb
imul
popf
inc
aam
int
xor
add
bound
mov
fstp
mov
into
and
pop
loop
icebp
addr16
mov
nop
sbb
ror
mov
jb
adc
push
ss
adc
or
xor
inc
fidivr
iret
adc
lock
loop
es
aad
repz
push
retf
mov
mov
sub
rol
pop
push
in
shl
idiv
outs
fadd
ja
mov
mov
fsubr
(bad)
push
cmp
dec
mov
jecxz
les
and
dec
add
pop
add
jbe
fisub
stc
pusha
adc
sub
sahf
(bad)
mov
and
std
push
test
add
ficom
push
push
mov
push
adc
(bad)
mov
jns
sub
out
scas
int3
add
or
add
bound
js
leave
lea
jns
pop
mov
and
jmp
cmps
xchg
xor
arpl
mov
lods
lods
int
bound
repz
and
retf
fwait
out
mov
stos
xor
xchg
mov
xchg
popf
ret
mov
mov
push
gs
out
mov
(bad)
rcr
pusha
dec
jb
movs
jo
sub
inc
pusha
xor
ds
fisub
iret
or
cmc
fistp
rcl
push
dec
lahf
inc
jo
cmc
xchg
test
cli
jnp
sub
add
mov
loopne
into
mov
test
aaa
adc
sub
out
fist
cmps
cmp
call
pop
cmp
cmp
(bad)
pop
xor
hlt
and
xor
(bad)
aam
pushf
push
xchg
or
movs
arpl
push
or
pop
loop
jl
in
lock
pop
scas
cli
cs
cs
jmp
popa
(bad)
mov
pop
arpl
mov
gs
push
int3
popa
jnp
test
add
loopne
and
shl
fsubrp
lock
mov
ins
xor
call
push
inc
shl
mov
in
fsub
(bad)
aaa
test
mov
enter
sbb
(bad)
xlat
sbb
pop
fsub
jno
fadd
push
push
leave
(bad)
xchg
int
ror
je
test
icebp
in
int3
or
lds
call
es
call
(bad)
shr
gs
pop
jae
xchg
mov
in
mov
(bad)
push
push
push
push
out
js
nop
icebp
jmp
dec
imul
imul
mov
pop
out
or
ds
jg
push
inc
sti
pop
dec
or
loopne
inc
sub
add
inc
mov
cmps
leave
add
push
dec
(bad)
mov
les
mov
xlat
mov
pop
stos
out
xor
pop
out
in
sub
push
xor
scas
xor
daa
test
rol
stos
fidiv
adc
inc
(bad)
shr
imul
std
pop
adc
call
cmp
in
shr
mov
add
(bad)
jl
cld
fisttp
pop
mov
xchg
mov
je
fild
mov
stos
xor
loope
fnstenv
bound
mov
in
mov
das
and
fist
pusha
test
pusha
jmp
sti
popa
adc
mov
jne
inc
xchg
ins
xor
mov
inc
mov
mov
adc
sbb
pop
arpl
sahf
(bad)
mov
std
xor
ss
neg
cs
shl
lods
ds
xchg
cwde
out
retf
dec
pop
pop
mov
xor
or
pop
push
cdq
jp
cmp
(bad)
and
loopne
scas
fmul
frstor
and
ja
in
(bad)
pop
and
sbb
mov
pop
cli
adc
or
push
push
or
pop
inc
nop
mov
scas
dec
or
sbb
jg
repz
adc
test
push
dec
push
push
fs
dec
cmps
cmp
fnstenv
mov
inc
(bad)
sbb
test
ss
mov
add
jmp
cmps
cmp
mov
leave
cmp
outs
cs
rcl
or
shr
out
fcmovnbe
and
(bad)
xor
lods
sahf
jns
xor
push
xchg
mov
aas
pop
pop
push
adc
sub
xlat
in
nop
sub
jle
adc
shld
xchg
cmp
test
outs
cmps
int3
ret
sbb
push
mov
bsr
pop
dec
enter
ja
add
pushf
scas
mov
xor
add
jl
call
imul
mov
jns
movs
ss
or
imul
mov
(bad)
repnz
sbb
ins
(bad)
lock
cmps
add
push
scas
pop
add
mov
jge
adc
jmp
movs
sysexit
push
into
scas
sbb
mov
les
test
push
out
cdq
(bad)
jecxz
jl
idiv
(bad)
xchg
cmp
xor
cld
fwait
inc
adc
cld
sbb
imul
call
dec
popf
jo
inc
out
adc
sub
mov
pusha
sub
mov
std
mov
mov
data16
and
cld
jp
loope
xchg
int
lea
iret
jl
jge
jmp
sub
adc
aaa
xor
sbb
fs
(bad)
push
nop
push
test
xchg
fistp
jae
jge
sbb
inc
lahf
inc
jmp
mov
scas
daa
mov
fist
lods
ins
sbb
iret
imul
inc
cs
sub
rcr
fdivr
jge
push
cmps
push
inc
push
std
(bad)
adc
iret
mov
add
jle
inc
rcr
leave
aas
fnstsw
or
cdq
sbb
dec
ja
fwait
ret
das
test
fld
lods
sbb
ss
xor
into
shr
pop
inc
out
popa
pushf
outs
lods
std
test
je
mov
clc
call
repz
jbe
pop
xor
lea
sub
(bad)
cmp
dec
mov
les
and
int
mov
inc
xlat
add
mov
into
jmp
inc
in
das
ss
pop
and
pop
(bad)
mov
movs
lea
(bad)
pop
push
jmp
fs
lahf
movs
(bad)
pop
call
push
in
in
aas
scas
pop
int3
dec
and
push
retf
jnp
movs
(bad)
vpshuflw
adc
xor
dec
arpl
test
aam
xchg
repnz
sahf
xchg
mov
or
pop
repnz
std
(bad)
mov
xlat
add
jns
es
int
arpl
pop
mov
inc
inc
jae
jnp
sbb
xchg
dec
sub
inc
sub
(bad)
(bad)
lea
retf
push
dec
ret
(bad)
push
mov
test
or
call
cvtpi2ps
cmp
jae
xor
sub
retf
(bad)
out
(bad)
xlat
push
xor
ins
mov
movs
scas
fs
xchg
daa
add
cdq
dec
pop
xor
sbb
mov
mov
sbb
add
adc
js
mov
mov
stos
in
test
cdq
fsub
lea
stos
inc
(bad)
(bad)
es
jle
sub
loop
cdq
mov
scas
adc
imul
push
push
inc
js
fidiv
pop
jno
adc
fmul
mov
cmc
lahf
or
lock
mov
inc
mov
jecxz
aaa
jbe
adc
movs
xchg
fisub
cmp
inc
adc
dec
scas
retf
sub
mov
imul
js
rcr
and
cmp
ja
int
mov
gs
out
ss
(bad)
jae
jae
inc
test
push
sbb
cmp
sbb
mov
loopne
jp
cmp
pop
push
inc
out
push
jl
lds
cmp
out
adc
test
cmp
loope
in
xlat
jb
ret
xchg
sub
aas
call
jmp
ret
fwait
adc
inc
leave
pop
bound
in
mov
(bad)
dec
or
mov
arpl
mov
(bad)
xor
das
xchg
mov
loopne
lahf
std
pop
inc
dec
jns
mov
jae
dec
les
test
pusha
push
lea
cmp
stos
je
adc
push
sub
imul
adc
push
into
sahf
dec
cmp
cmp
into
xlat
jb
push
xlat
xor
call
out
mov
dec
sub
out
mov
rcl
xchg
xacquire
sub
aas
mov
movs
pop
mov
adc
xchg
movs
repnz
mov
fdivr
divps
and
aam
cmp
cli
int
popa
mov
mov
pop
movs
push
jecxz
movs
(bad)
cmc
inc
or
jnp
ret
pop
neg
aaa
sbb
fst
dec
add
ins
inc
mov
lock
cmovge
ins
xor
(bad)
cmps
dec
push
jmp
push
jbe
imul
mov
fdiv
dec
mov
idiv
add
ret
push
cmc
fsub
sub
dec
cmp
(bad)
outs
out
imul
cli
or
pop
ins
lods
pop
pop
and
or
jno
mov
xor
jb
mov
or
or
ss
mov
mov
lods
(bad)
retf
xor
and
scas
jp
lds
enter
adc
daa
sbb
in
aad
and
cmc
icebp
add
mov
adc
pop
outs
pop
xor
cld
mov
pop
jle
out
clc
dec
jp
js
fsub
mov
leave
addr16
and
push
int3
std
add
sti
jmp
adc
out
jae
scas
lds
fistp
imul
push
stos
xchg
mov
cmp
loopne
ror
in
xor
es
into
mov
test
push
add
push
or
iret
ds
jg
xor
stos
rol
jge
adc
call
loop
mov
unpckhps
cmp
add
pop
ss
(bad)
in
mov
fsubp
not
ret
add
aaa
mov
sub
dec
shl
dec
sahf
jbe
inc
mov
loop
cs
retf
and
(bad)
jle
jnp
push
cdq
cmp
dec
push
pushf
mov
aad
lock
mov
xor
add
jb
dec
sti
out
mov
jge
xchg
jns
ror
das
pop
sbb
pop
mov
dec
retf
shr
lea
leave
cmps
movs
adc
inc
loope
sub
(bad)
jmp
add
mov
adc
mov
mov
push
sar
adc
xchg
cmp
(bad)
popf
stos
xor
mov
push
mov
push
cmps
sbb
inc
or
ret
push
into
xor
div
adc
push
std
scas
inc
ret
call
add
sub
xor
lock
xlat
imul
dec
ret
mov
cmp
mov
leave
push
adc
sar
adc
fcmovnbe
into
add
fs
pop
bound
dec
cmps
(bad)
aaa
xchg
and
sbb
mov
mov
mov
scas
es
lock
addr16
mov
or
clc
jge
xor
inc
retf
inc
call
sub
inc
outs
sbb
push
jae
in
jle
loope
in
clc
aad
outs
cmp
xor
pop
and
ds
(bad)
cmp
jne
xchg
pop
and
mov
add
(bad)
daa
and
sub
dec
test
ds
in
xchg
inc
mov
add
cmps
sbb
inc
push
into
push
cmc
movs
pop
mov
or
mov
cmc
push
push
ret
pop
pop
xor
or
fs
sar
std
daa
jo
inc
fdivr
loop
push
xchg
mov
inc
out
jae
pop
adc
pop
or
ja
mov
pushf
aaa
sub
xor
pop
xchg
mov
mov
fs
sub
xor
(bad)
popa
test
cmp
inc
lods
jecxz
xchg
retf
rcr
pusha
iret
leave
adc
sub
push
xchg
mov
add
mov
mov
inc
das
aam
jno
ds
imul
scas
test
(bad)
scas
mov
jnp
sub
mov
test
jmp
mov
jne
cdq
pushf
push
xchg
pusha
lock
dec
mov
aas
neg
cmp
mov
out
cmp
lds
addr16
cli
imul
add
mov
ins
xchg
inc
js
xor
outs
mov
neg
mov
fs
adc
dec
rcl
div
les
mov
call
xchg
out
in
nop
lods
clc
jno
js
loop
data16
jae
adc
pop
add
fisubr
mov
cmps
inc
inc
ja
cmp
sub
or
imul
cmp
scas
mov
movs
mov
fistp
inc
ret
dec
out
repz
sar
nop
cs
stos
fild
(bad)
outs
fxch
jnp
pop
mov
push
aas
dec
cmc
inc
adc
out
pop
push
in
xchg
dec
std
and
jo
push
mov
movs
bnd
fisttp
xchg
imul
(bad)
jmp
ja
aaa
dec
cmp
push
test
mov
in
pop
and
mov
mov
sub
lea
fistp
test
ret
outs
pop
add
lahf
fistp
sub
or
and
call
loope
ret
aas
es
mov
test
iret
sub
addr16
jo
sbb
lods
lods
mov
ss
mov
and
and
xchg
cmc
mul
pop
cmps
pop
fs
mov
call
dec
lock
sbb
or
scas
jo
inc
add
popf
sub
push
mov
add
or
stos
retf
mov
jbe
inc
add
jb
daa
scas
ds
nop
xor
mov
mov
popf
sub
xor
dec
push
jo
mov
ret
and
xchg
outs
(bad)
jl
xchg
fdivr
xchg
pop
sub
call
leave
lea
jns
imul
lea
std
dec
pop
test
jno
jns
movs
loope
stos
pop
mov
call
pop
movs
or
repz
test
add
cmp
jecxz
aam
push
jge
sbb
aas
fwait
push
in
or
outs
mov
inc
div
neg
jno
repz
mov
ret
pop
(bad)
pop
mov
adc
sti
les
retf
xlat
dec
fwait
mov
adc
cmps
inc
cwde
gs
cdq
arpl
fcomp
lods
(bad)
popf
cmps
std
sbb
test
xor
and
test
ins
cmps
inc
mov
push
jmp
push
add
ins
(bad)
repz
(bad)
jmp
inc
push
add
dec
dec
xlat
shl
mov
jmp
fnsave
xlat
test
mov
dec
movs
lods
test
mov
jge
inc
cld
add
bound
mov
dec
or
(bad)
aam
inc
cmp
cmp
pop
arpl
es
call
pop
cli
repz
mov
add
or
inc
mov
and
rol
lods
push
aas
xor
clc
fdivr
sbb
shr
sub
aaa
clc
js
call
outs
out
in
ret
xchg
enter
inc
sbb
adc
arpl
pop
jo
fwait
mov
jmp
jge
or
mov
cld
push
lock
enter
mov
fprem
dec
aad
out
push
call
dec
lods
inc
(bad)
cdq
dec
in
cmp
push
xchg
cmp
fidivr
pop
addr16
jo
cmp
sbb
imul
mov
mov
inc
mov
add
inc
pushf
or
push
movs
inc
out
jne
xor
mov
dec
dec
cmp
jnp
add
ficom
(bad)
xor
ins
fcom
test
cmp
in
pop
fnstsw
ins
xchg
cmc
sub
mov
sbb
sub
shr
push
mov
mov
bound
lods
cmps
cmps
add
lods
push
stc
frstor
popf
push
add
lods
retf
xor
mov
fsubr
xchg
test
push
push
cld
leave
stos
push
mov
out
in
sti
pop
test
push
and
cmp
dec
in
dec
inc
jmp
sar
out
pop
pop
lods
jge
jmp
ins
push
push
std
push
pop
sbb
or
div
not
jp
push
nop
jmp
inc
mov
gs
push
lahf
lea
mov
xchg
xor
mov
dec
in
fcmovnb
pop
out
out
mov
sub
mov
pop
lods
mov
loope
and
aas
scas
push
scas
pop
movs
les
nop
push
movs
jmp
cmp
fcomp
popf
fcom
cli
mov
test
or
pushf
inc
iret
fld
test
jnp
mov
pop
or
das
jo
imul
fimul
and
cmp
pop
aad
es
jns
jo
or
fdivrp
lea
pop
retf
movs
shl
add
ret
stos
sti
cmp
dec
fstp
push
out
add
jmp
or
push
adc
jnp
out
and
popa
outs
repz
cld
out
mov
imul
fld
icebp
mov
mov
jno
daa
cmp
pop
cmps
je
inc
xchg
ror
fs
mov
in
mov
call
inc
push
shl
push
cmp
fcmovnb
call
fs
inc
enter
mov
(bad)
and
cmp
adc
mov
loopne
movups
push
jnp
popa
lahf
mov
outs
leave
enter
cs
pop
in
in
dec
loopne
add
adc
loopne
loope
pop
(bad)
div
inc
(bad)
adc
mov
(bad)
dec
rol
cmp
or
mov
pop
cmp
or
adc
pusha
lea
mov
and
retf
imul
fist
adc
(bad)
les
pusha
(bad)
dec
pop
mov
mov
sub
push
(bad)
lock
inc
lea
aam
sub
sbb
xchg
add
test
mov
jle
mov
xchg
cmp
xchg
or
mov
mov
and
neg
imul
pop
mov
sub
jg
loop
pop
jnp
fnstcw
and
cmp
sar
jmp
jle
fimul
cmp
mov
dec
cmp
push
pop
sub
hlt
or
cld
or
mov
aad
cmp
jne
mov
div
xchg
push
sbb
mov
xor
(bad)
lahf
in
push
movs
mov
lods
sbb
jle
(bad)
and
xchg
mov
aas
test
mov
sbb
inc
iret
sub
jno
mov
ins
in
xor
jns
jnp
pop
push
xchg
mov
jge
xlat
fs
mov
into
pop
cmp
je
pop
loopne
xor
dec
mov
push
and
call
ficom
not
pop
add
jnp
ret
and
fs
or
sub
fst
scas
cmp
(bad)
out
lock
(bad)
mov
xor
arpl
jmp
xor
pop
push
shl
xor
mov
or
push
mov
aas
cmp
cmps
test
test
push
mov
ins
outs
push
inc
int3
jg
mov
cmp
mov
cmps
sbb
mov
out
aas
(bad)
jnp
push
jno
and
js
fimul
leave
dec
pop
cmp
inc
xchg
mov
pushf
je
dec
mov
outs
les
jle
in
dec
xlat
imul
jno
jb
hlt
adc
mov
stos
std
adc
and
mov
xchg
jle
xchg
addr16
pop
cld
add
xor
repnz
push
das
stos
sub
inc
jl
fistp
fisubr
outs
ins
mov
sti
xchg
mov
lods
push
xchg
inc
es
ins
stos
in
test
popa
sub
arpl
out
fdiv
or
jne
mov
mov
mov
xor
je
test
(bad)
mov
movs
sbb
movs
or
sub
es
push
mov
jo
in
out
call
lock
pop
scas
aam
xchg
test
pop
(bad)
sbb
imul
or
mov
jae
cmps
sbb
ins
jmp
lds
jo
pop
and
mov
xchg
shl
cmp
fstp
cmp
cdq
repnz
ds
and
sub
in
test
cmp
add
adc
lods
sbb
xor
push
mov
pop
or
imul
or
addr16
dec
aaa
vpaddq
pusha
xor
leave
xchg
leave
fsub
pop
jg
sbb
nop
rcr
xor
fldz
inc
push
xchg
fs
fiadd
ficom
sbb
xchg
fmul
sbb
ret
pop
lods
inc
shl
xchg
lods
mov
sti
(bad)
mov
das
iret
mov
jno
fucom
bound
pop
pop
popa
dec
ins
icebp
jne
jge
mov
adc
movs
push
mov
in
jb
inc
cmp
scas
mov
push
sbb
xchg
adc
inc
dec
sbb
addr16
mov
sub
add
pop
jno
scas
not
and
mov
mul
adc
stos
sub
jge
cmc
jle
xchg
shl
iret
inc
xchg
fsubp
out
mov
(bad)
iret
and
sub
pop
push
or
out
dec
std
xor
outs
scas
or
movs
cwde
jmp
add
push
mov
push
dec
not
jl
enter
mov
and
push
jbe
sahf
out
stos
adc
inc
in
je
jb
fisttp
jge
and
shl
outs
repnz
jl
(bad)
xchg
in
loopne
dec
popf
fst
test
mov
test
(bad)
in
jp
inc
push
adc
inc
outs
js
in
mov
pop
cmp
inc
arpl
mov
test
ret
or
dec
sahf
sub
imul
cld
or
(bad)
inc
cmp
cmp
jl
fisubr
ror
pop
test
mov
loopne
cmp
icebp
cmp
mov
adc
loopne
push
ss
test
and
push
repz
mov
mov
sbb
call
pusha
daa
xor
mov
popf
enter
pop
iret
xchg
pusha
std
retf
(bad)
jmp
test
jbe
adc
and
enter
cmp
jle
js
add
(bad)
dec
dec
push
pop
loope
ret
(bad)
ds
in
test
bound
add
push
jecxz
fiadd
mov
sub
or
inc
jcxz
dec
sbb
xor
popa
dec
xchg
clc
sub
adc
sbb
imul
sar
jbe
out
inc
fnstenv
(bad)
xor
sbb
push
les
fmul
sbb
push
dec
sahf
push
mov
push
mov
pop
push
ins
fist
mov
in
add
jp
retf
inc
jo
sub
ja
sbb
je
and
push
stos
inc
add
(bad)
enter
shr
jle
aad
lods
es
push
sub
and
(bad)
in
xor
std
mov
scas
sub
shl
cmp
out
mov
into
inc
pop
out
cmp
adc
out
jle
and
dec
inc
jge
inc
jp
cmp
inc
unpckhps
jg
fidiv
gs
fdivrp
and
retf
call
je
frstor
in
ficomp
push
jecxz
(bad)
mov
dec
or
jg
mov
or
mov
add
and
enter
push
adc
jbe
xchg
sub
mov
or
add
sbb
stc
dec
sbb
jmp
ins
lods
dec
mov
jle
mov
call
iret
pop
leave
enter
aaa
cmp
lods
mov
imul
loope
in
dec
aas
aas
sub
lods
and
jne
enter
fsub
mov
in
mov
mov
inc
sbb
sar
enter
xchg
xchg
out
fcomi
sbb
int3
adc
test
popf
mov
call
xchg
cdq
inc
cdq
iret
jbe
cmp
or
xchg
sbb
pusha
cwde
jmp
(bad)
jecxz
fidiv
ins
jmp
(bad)
in
adc
dec
sub
mov
jl
jb
or
stos
gs
cs
sub
or
fprem1
push
retf
imul
pop
fsub
jecxz
cmps
pusha
bound
dec
(bad)
test
inc
retf
aaa
xchg
cmc
adc
mov
cmp
add
xchg
mov
inc
jmp
dec
mov
rcl
and
xchg
leave
lgdtd
jae
std
mov
push
hlt
jb
movq
xor
in
lock
cs
adc
or
sbb
and
mov
repz
lock
inc
pop
sub
leave
mov
push
stos
(bad)
aam
push
in
jmp
sbb
popf
mov
loopne
cmp
cmp
sub
cld
sbb
cmp
jmp
mov
add
xor
rol
adc
inc
sbb
mov
xchg
mov
or
inc
or
jp
fnstenv
std
stc
scas
mov
mov
mov
xor
sub
push
aam
outs
(bad)
aam
call
loop
jns
sar
aas
and
sbb
sahf
adc
shl
cmps
jl
pop
push
mov
pushf
ja
mov
bound
icebp
xor
ins
inc
frstor
pop
cmps
cmp
rcr
jmp
mov
int3
pop
aad
push
jge
stos
out
(bad)
loop
jbe
adc
sbb
das
lahf
stc
or
stos
sub
stc
pop
neg
ds
mov
std
sbb
push
mov
aas
je
xchg
repnz
xrelease
stos
sahf
push
lock
inc
inc
add
nop
push
and
pop
inc
in
mov
sar
inc
jl
mov
xchg
rcr
push
outs
dec
mov
xor
and
xchg
out
sub
xlat
inc
adc
mov
retf
ja
mov
movs
loop
enter
and
out
retf
icebp
xor
mov
xchg
into
aam
inc
mov
push
mov
(bad)
mov
fisub
xor
mov
inc
or
dec
mov
mov
mov
mov
call
jns
jge
in
inc
aam
inc
push
(bad)
push
gs
popa
and
cmp
mov
test
movs
jge
aam
push
jb
inc
mov
ja
xlat
out
fwait
ret
in
lea
fnstenv
xchg
pop
aam
inc
xchg
pop
test
xor
push
xchg
ja
xlat
popa
or
loopne
mov
xor
sbb
idiv
cmps
repz
push
out
sbb
pop
mov
test
cmp
jmp
jmp
jnp
call
mov
rol
push
mov
mov
xor
mov
(bad)
imul
cmp
xchg
xor
and
or
cmp
cmp
(bad)
mov
ins
cmp
mov
fnstenv
imul
lods
cdq
cmova
mov
ret
pop
and
mov
(bad)
fistp
xor
int3
or
cdq
test
pop
push
jmp
mov
push
jno
or
push
ficomp
cmp
inc
icebp
ins
scas
jmp
pop
in
mov
jae
mov
cmps
(bad)
xchg
mov
cmc
cmp
or
adc
mov
loop
je
stos
clc
ins
(bad)
pop
pop
fwait
(bad)
cmp
pusha
mov
ja
dec
hlt
mov
cdq
aaa
pop
sub
cwde
ss
rol
sub
jecxz
scas
cdq
mov
fidiv
shr
or
jmp
sahf
and
and
fs
je
fcom
pop
sbb
push
in
jo
inc
lahf
jge
xchg
lea
pop
dec
stos
jg
push
out
and
shl
nop
out
jp
xor
test
inc
lds
sbb
pusha
xchg
outs
dec
dec
hlt
pop
jo
lods
dec
sbb
dec
mov
xlat
jb
jmp
arpl
xor
sti
sub
or
loopne
add
jo
and
add
fsub
into
xchg
xchg
add
fwait
lds
popf
sub
or
push
jl
(bad)
xchg
addr16
mov
popf
sbb
inc
jae
scas
inc
and
ret
dec
mov
lea
add
fucomip
es
in
and
das
mov
into
mov
stos
cmp
and
fild
mov
(bad)
mov
add
popa
fwait
inc
(bad)
clc
mov
mov
mov
and
push
pusha
call
clc
hlt
test
retf
jecxz
cmp
out
lea
stos
je
shl
mov
mov
in
loop
sbb
movs
call
mov
pop
popa
pop
mov
aaa
int3
push
pushf
iret
pop
(bad)
cli
jecxz
or
dec
fcom
sub
xchg
mov
push
pusha
loope
leave
add
fimul
test
test
jle
xchg
lahf
xchg
adc
aam
pop
outs
fidiv
pop
shl
enter
pop
mov
add
sahf
retf
mov
js
sti
xchg
jge
mov
retf
dec
pop
in
sub
lods
push
xor
xchg
leave
fwait
ins
mov
dec
retf
ret
or
adc
(bad)
push
mov
dec
(bad)
fsub
nop
adc
and
cs
test
mov
mov
jns
push
gs
std
daa
test
shr
add
dec
adc
aaa
mov
push
push
sub
pop
inc
imul
mov
xchg
nop
adc
test
lock
mov
push
ret
sti
daa
iret
cmps
out
idiv
inc
std
call
mov
jns
outs
cdq
or
ret
ror
xor
dec
repz
inc
iret
stos
(bad)
mov
stc
fs
repnz
xchg
scas
stc
mov
fimul
rcr
int3
add
xchg
xor
and
push
retf
test
sbb
jo
cmps
arpl
xchg
and
inc
add
pop
(bad)
push
rcr
sbb
cdq
nop
into
cdq
sbb
test
fidiv
inc
cmp
ja
movs
or
pushf
inc
(bad)
(bad)
fisub
jae
scas
jle
pop
xor
jne
jmp
mov
mov
mov
mov
call
pop
sbb
ja
lds
adc
fcmovu
scas
cwde
sub
xchg
push
add
push
or
push
inc
popf
cmp
mov
je
cmp
push
mov
fcom
(bad)
daa
jmp
sub
mov
stc
fimul
mov
push
add
loop
and
pushf
mov
inc
jbe
je
shr
mov
sub
fldenv
jne
cmp
movs
in
mov
arpl
add
adc
or
icebp
sub
and
test
test
neg
rcr
pop
mov
out
adc
sub
push
les
mov
push
ja
jb
xor
hlt
pop
adc
xor
outs
push
add
cmp
mov
xor
icebp
mov
cmc
aad
mov
jb
dec
outs
push
dec
ins
bound
pop
and
jne
pop
aad
sub
cs
xabort
lea
adc
sub
sbb
stc
mov
xchg
(bad)
std
adc
mov
jo
jg
push
sub
in
sti
popf
mov
adc
enter
xchg
mov
(bad)
xchg
inc
mov
cmp
inc
sar
xchg
jmp
cld
scas
repz
push
lds
pop
test
std
inc
test
in
fidiv
mov
mov
ins
stos
pop
jno
inc
inc
lock
jnp
fs
outs
(bad)
icebp
icebp
ret
js
pusha
mov
cs
imul
cmp
rol
loop
nop
dec
stos
pop
loope
or
pop
ins
ret
rol
jb
mov
in
bound
mov
dec
in
aam
ror
mov
imul
add
pop
retf
dec
je
inc
mov
nop
push
mov
push
and
dec
dec
xchg
jg
in
outs
inc
jne
int3
pusha
les
ficomp
mov
cmp
lea
scas
lods
scas
inc
movs
xchg
lahf
call
pop
mov
cmp
or
adc
mov
imul
mov
mov
sbb
pushf
and
jno
jno
rcl
dec
xchg
push
push
pop
(bad)
and
popf
loop
ror
adc
dec
jo
cmp
shr
push
mov
jl
mov
cdq
pusha
mov
ror
ins
mov
test
(bad)
xchg
cmps
aad
daa
push
xchg
retf
pusha
clc
enter
loope
and
push
ret
int
mov
or
test
mov
fwait
and
mov
daa
pop
pusha
lock
xchg
mov
push
push
fstp
cdq
in
dec
jbe
enter
xchg
sbb
cmps
mov
xchg
xor
fldcw
out
popa
mov
xor
mov
sbb
mov
popf
cmp
rcr
and
cmp
stos
daa
shl
xor
xor
test
jbe
mov
pop
leave
sbb
in
xlat
outs
std
movs
mov
fnstenv
dec
ss
xor
enter
fsubr
and
into
pop
outs
das
movs
jecxz
inc
jge
clc
inc
in
cmp
sub
push
out
mov
mov
push
clc
xchg
jbe
xchg
movs
sbb
jp
adc
jmp
add
mov
push
ins
dec
xchg
inc
daa
scas
push
movs
pop
push
push
(bad)
xor
std
aaa
pushf
pop
xor
sub
lea
mov
cmp
ja
mov
xchg
mov
enter
in
jb
push
je
repnz
jae
pop
lds
repnz
es
(bad)
lahf
fstp
out
retf
outs
addr16
sub
neg
jae
push
mov
add
shr
xchg
jno
repnz
push
push
loop
loop
pop
inc
mov
and
cmps
ss
pop
or
xchg
mov
inc
push
fsub
xchg
add
pop
dec
dec
adc
cmps
sbb
popf
jbe
fidiv
ds
jmp
jns
jp
or
add
enter
inc
jmp
cdq
test
cmp
test
xor
inc
mov
test
fstp
cdq
rol
add
arpl
jl
out
cld
fiadd
lds
mov
xchg
sbb
les
je
cld
fwait
out
push
pop
jae
sbb
adc
cs
cmp
(bad)
rcl
or
dec
rcl
cs
push
push
out
retf
fs
sub
out
push
pop
push
add
mov
sar
pop
xor
pop
dec
movs
frstor
mov
sub
cmp
arpl
ret
leave
push
jg
retf
mov
ss
les
dec
cmp
pop
aam
jb
xchg
icebp
add
sub
push
push
mov
imul
adc
adc
out
out
ficom
sub
mov
adc
sbb
push
cwde
in
push
ins
retf
imul
xchg
add
in
dec
or
pop
je
std
xchg
sbb
mov
xchg
in
xchg
bound
sub
pop
pop
xchg
jmp
cmc
popf
xor
lock
mov
cmp
fcomp
mov
fcomp
add
jo
xor
or
pop
mov
(bad)
push
bnd
or
aaa
sbb
dec
sbb
add
adc
add
inc
dec
stc
mov
or
xor
push
cmc
repz
push
jg
push
push
movs
inc
pop
outs
repnz
mov
daa
sbb
(bad)
and
mov
imul
push
cmp
mov
push
test
outs
mov
xchg
(bad)
cmps
adc
into
push
pop
fistp
xchg
cmp
jmp
inc
std
inc
push
xor
mov
xor
gs
dec
and
test
lds
inc
xchg
ins
xchg
pop
pop
push
mov
mov
cmp
mov
rol
fucomp
mov
(bad)
mov
adc
push
jg
std
mov
(bad)
pop
cmps
push
(bad)
mov
jno
cmp
adc
or
inc
mov
mov
lea
enter
xor
popf
ficom
lods
sub
xor
fs
out
push
ret
aad
mov
dec
xchg
test
popf
jmp
and
cmps
movs
push
std
das
dec
adc
lods
fisubr
scas
jmp
jge
pop
push
inc
(bad)
outs
cmp
loopne
div
scas
fstp
div
sbb
xchg
pop
jecxz
mov
dec
test
push
cmp
mov
cdq
retf
adc
ret
adc
jle
js
das
jmp
cmp
aam
pop
xchg
loopne
sub
sahf
jge
test
gs
mov
mov
mov
jbe
dec
cmp
outs
and
enter
fs
fwait
xchg
cmps
std
retf
jo
nop
dec
xlat
jp
jbe
scas
cmp
or
addr16
cmp
mov
pop
movs
(bad)
nop
icebp
int3
fidivr
call
mov
outs
mov
minps
fild
and
(bad)
out
stc
mov
test
and
sub
push
xor
fwait
and
outs
loopne
hlt
iret
daa
fidiv
xchg
add
es
jno
cdq
in
dec
sub
das
pop
xchg
mov
std
pop
mov
fstp
cmp
cwde
ja
xchg
sti
push
cmps
cli
neg
jne
cs
and
outs
mov
icebp
mov
mov
aas
lods
into
sub
aad
dec
in
frstor
je
adc
cld
inc
jle
ficom
inc
sbb
sbb
xor
and
lds
jl
mov
pop
jmp
push
adc
push
mov
inc
ss
(bad)
sub
xor
sub
in
add
cld
(bad)
mov
xlat
jb
sbb
sub
es
mov
pop
mov
fsubr
mov
out
ret
xchg
(bad)
mov
xor
inc
inc
cmp
add
pop
in
cmps
push
push
movs
ds
mov
cdq
inc
fnsave
les
xchg
mov
add
dec
retf
cwde
repnz
and
mov
jmp
mov
fcomip
mov
pop
hlt
ja
pop
mov
test
sar
jmp
test
mov
nop
adc
mov
dec
(bad)
fild
and
mov
xchg
repz
es
mov
(bad)
in
dec
push
scas
push
sbb
mov
cmp
fsubr
mov
dec
aam
enter
aad
ret
ds
movs
rcl
pusha
mov
imul
push
mov
repnz
test
adc
int3
xchg
(bad)
and
and
cli
xor
scas
aas
mov
jmp
mov
xor
je
scas
xlat
xchg
add
dec
mov
inc
lods
rcr
jns
test
sub
add
ds
jb
xlat
push
xor
mov
sbb
pop
sahf
hlt
jne
sub
adc
test
fbld
pop
jp
mov
jl
adc
jne
imul
inc
dec
fwait
and
push
test
cmp
pusha
in
adc
leavew
mov
movs
movs
cdq
dec
sbb
adc
add
or
cs
push
cmp
cmp
xchg
sti
call
jge
imul
adc
cli
test
adc
sti
paddusw
push
adc
mov
(bad)
pop
add
mov
mov
jae
out
mov
popa
pop
cld
inc
dec
shl
lods
aaa
dec
daa
jo
sti
jns
inc
add
(bad)
mov
fild
dec
and
test
loopne
retf
sub
enter
cmp
push
push
cmp
hlt
pushf
pop
mov
push
ror
push
push
and
int3
sar
retf
je
pop
lsl
ret
mov
in
bnd
adc
xchg
mov
pop
inc
jle
repz
ror
lods
test
(bad)
imul
outs
mov
imul
test
jecxz
xor
or
ins
inc
jo
dec
add
dec
and
mov
pop
ret
adc
and
jmp
mov
dec
jle
sbb
xchg
das
cld
cld
cmc
out
push
iret
pop
pop
pushf
xchg
sub
mov
inc
shr
lods
fucom
and
leave
add
cmp
das
inc
sub
push
jne
es
(bad)
mov
push
xchg
in
xor
fisubr
popf
fs
push
in
lea
imul
add
or
jae
xor
inc
dec
and
repz
pop
shl
sbb
clc
lock
lea
retf
mov
aas
pop
xor
js
out
push
xchg
push
push
(bad)
or
xor
outs
mov
or
mov
iret
cmp
ja
jae
and
lock
leave
daa
cmp
mul
dec
(bad)
mov
aas
in
adc
(bad)
loopne
stos
mov
fsub
cmps
in
push
loope
adc
aaa
cmp
and
fsubr
outs
je
inc
int3
push
lods
sub
dec
push
dec
data16
cli
dec
rcl
adc
jge
cmp
aam
adc
adc
jne
cmp
arpl
fisubr
test
cmps
bound
(bad)
add
inc
dec
xor
or
pop
test
dec
cmp
into
sub
cmp
das
out
and
push
mov
iret
and
sbb
arpl
sbb
or
pop
pop
adc
jmp
ds
das
pop
rol
push
or
adc
xchg
sub
test
or
mov
icebp
or
sbb
leave
pop
adc
xlat
sbb
xchg
pop
push
mov
enter
sub
scas
aas
das
adc
iret
iret
jne
ss
cs
(bad)
xor
push
(bad)
movs
fdivr
xchg
xchg
ins
aaa
and
ds
adc
push
push
xor
inc
mov
sub
cdq
jge
stos
adc
inc
push
stos
fcomp
jae
mov
or
push
add
inc
in
jne
mov
push
inc
push
fstp
dec
test
xchg
popf
sbb
jl
call
mov
ror
push
out
ja
popa
pop
inc
pop
push
daa
imul
ror
add
and
cwde
into
sub
add
xchg
pop
inc
push
add
ret
outs
mov
jae
test
or
jmp
cmp
data16
ret
xchg
int3
and
fbld
rcr
mov
xchg
push
xchg
mov
dec
aas
jo
pop
mov
xchg
push
ret
cmps
cmp
mov
mov
test
(bad)
xchg
addr16
push
and
outs
xchg
aad
daa
jo
mov
sbb
cmp
push
mov
dec
data16
push
sar
adc
pop
jb
(bad)
stos
xor
or
xor
mov
(bad)
(bad)
imul
in
andps
sub
sub
mov
arpl
adc
push
daa
dec
sbb
pop
jle
movs
sbb
pop
adc
(bad)
fld
call
and
inc
and
lods
adc
int3
push
mov
cdq
fwait
sbb
in
mov
dec
ja
adc
stc
(bad)
fild
sub
jg
movs
sbb
jge
or
mov
jp
cmc
frstor
mov
or
nop
leave
(bad)
mov
stos
inc
mov
add
bound
rol
mov
add
inc
cmp
mov
xchg
jmp
jg
adc
shl
pop
push
xlat
call
inc
xchg
ins
pusha
nop
(bad)
pushf
pop
mov
mov
into
cs
jmp
sbb
aaa
retf
fcom
repnz
pop
leave
push
mov
xlat
test
in
mov
pop
ins
outs
mov
lods
jle
daa
je
push
jbe
ja
outs
xchg
popa
mov
adc
cdq
sbb
dec
mov
pop
into
pop
jb
xchg
scas
ret
jg
imul
in
loopne
push
ds
sub
pop
sbb
sbb
and
test
scas
mov
or
cli
inc
repnz
hlt
jecxz
jp
add
add
ja
sbb
dec
imul
pop
mov
rol
mov
imul
push
sbb
push
or
(bad)
jnp
cmps
add
fisub
pop
cmp
(bad)
ficomp
pop
pop
adc
(bad)
pop
add
in
dec
fadd
js
xor
daa
test
pop
and
inc
dec
mov
hlt
xor
dec
mov
mov
and
outs
jae
pop
mov
xchg
test
stos
test
mov
loop
dec
in
jmp
inc
add
add
test
jns
inc
mov
int
(bad)
and
dec
dec
imul
xchg
lock
imul
cmc
push
loopne
in
cmps
xchg
call
inc
jmp
clc
xor
imul
xchg
and
fcomp
dec
sbb
imul
mov
or
mov
mov
fild
fimul
cmp
int3
in
mov
jmp
lds
sbb
sub
cdq
dec
rol
mov
mov
cmp
mov
pop
inc
inc
in
(bad)
xchg
test
lahf
xor
aas
cli
or
xchg
xor
adc
or
leave
fwait
mul
dec
in
enter
inc
div
mov
xchg
cli
cmp
int3
mov
mov
adc
pusha
pop
sti
jecxz
xchg
xchg
sbb
test
jmp
and
retf
hlt
xchg
int3
inc
push
cmp
sahf
xchg
fs
and
adc
add
retf
mov
fidivr
add
pop
das
mov
pop
sub
inc
push
iret
inc
into
adc
sbb
cmp
push
pop
ror
or
das
sar
mov
xor
mov
mov
pop
ret
out
dec
setl
ficom
sub
cmp
test
not
fst
cmps
cs
aad
aam
movs
and
pop
add
cmps
ficom
stc
pop
cmp
adc
mov
push
inc
inc
jecxz
inc
or
xor
dec
das
xchg
(bad)
in
jle
xchg
imul
cmp
pop
imul
mov
add
jge
mov
xor
gs
pop
imul
sbb
imul
push
icebp
jnp
dec
jo
lock
mov
cmp
xor
int
neg
dec
inc
and
cwde
push
mov
sbb
or
pop
fs
or
aad
xchg
dec
das
xlat
clc
out
xchg
call
push
rol
xchg
scas
push
sub
pop
popf
mov
pop
mov
dec
xchg
rcr
inc
jb
xlat
mov
push
fdivr
fwait
outs
sub
mov
jno
xor
sub
or
sub
push
push
fwait
imul
leave
xlat
jae
ret
movs
pop
in
cmps
pop
and
iret
(bad)
(bad)
loopne
inc
pop
lods
cmp
xchg
lock
sahf
pop
pcmpeqw
movs
dec
and
mov
fs
test
std
mov
and
in
sti
inc
pop
sbb
js
mov
std
aas
push
pop
sbb
(bad)
xor
icebp
mov
rcl
xor
retf
pusha
inc
out
cs
out
movs
lahf
push
test
cs
scas
arpl
lea
(bad)
(bad)
fbld
sbb
leave
sahf
cmp
bound
pop
cmp
inc
inc
in
int
mov
adc
cwde
mov
mov
sbb
push
call
aam
les
movlhps
in
sahf
(bad)
lock
das
movs
sbb
and
xadd
push
or
inc
hlt
inc
daa
add
jge
and
push
mov
cmp
aaa
jns
inc
sbb
dec
mov
leave
ret
pushf
cmp
pusha
pop
addr16
ja
clc
inc
jge
inc
data16
cmps
jmp
or
aaa
pop
xchg
cmp
bound
or
test
sbb
fwait
adc
ficom
movs
jae
retf
cwde
rcr
cmp
out
ret
not
ror
mov
(bad)
xchg
jl
xor
mov
repnz
popa
scas
popa
fnstenv
jae
test
mov
aad
xor
jp
out
scas
jmp
sbb
sbb
sbb
test
inc
push
data16
cld
gs
test
imul
(bad)
adc
adc
les
test
bound
outs
popf
and
push
scas
jns
mov
imul
ins
push
jg
cli
and
jae
fcomp
xchg
imul
pop
aaa
cmp
mov
sub
xchg
dec
adc
mov
mov
test
cmc
pop
sub
xchg
cli
jb
pushf
cli
outs
ret
mov
lods
push
call
mov
xor
add
into
jnp
sar
mov
fucomi
into
and
xor
pop
test
fsubr
gs
sub
ss
cmps
jns
ss
cli
(bad)
mov
push
push
push
and
stos
mul
sbb
dec
pop
dec
lock
mov
imul
push
sti
adc
adc
xor
jmp
pusha
pop
aaa
addr16
or
push
mov
ror
xor
add
out
mov
cmp
sbb
lds
jne
jg
test
push
jl
jecxz
adc
sbb
cmp
test
xor
xchg
jp
push
mov
test
dec
es
arpl
add
outs
mov
or
adc
xor
inc
xor
pusha
push
das
test
or
ss
sahf
and
aaa
cmp
pop
jmp
aas
cld
jae
jbe
aas
xor
pop
sub
pop
clc
mov
bswap
xchg
cmp
sti
sub
pop
ror
leave
or
jb
in
clc
xchg
loope
cs
pop
int3
mov
call
shl
add
mov
sub
imul
not
or
fpatan
mov
cmp
pop
mov
nop
mov
pop
test
and
xchg
ret
cmps
loope
mov
(bad)
cmc
inc
sbb
ja
xor
gs
gs
addr16
push
lock
inc
(bad)
sub
ror
mov
add
js
(bad)
std
pop
mov
xor
adc
jecxz
add
movs
sbb
das
xchg
repnz
inc
mov
xchg
cmp
dec
mov
sub
jne
movs
jae
leave
rcr
adc
test
jne
jns
jns
mov
repz
push
mov
mov
fisub
call
(bad)
not
dec
pop
fcmovb
cmc
adc
daa
ss
pop
ja
push
data16
ret
test
mov
pop
cmp
inc
push
loop
push
dec
repz
ds
out
mov
js
push
out
ret
aas
and
xchg
fs
rcl
push
fidiv
jmp
ds
rcl
jg
inc
cmp
adc
pushf
iret
cmps
shl
sub
sub
fsub
daa
lods
mov
scas
sahf
sub
fcmovb
pop
push
cmc
mov
pop
dec
xchg
jb
xchg
mov
mov
pop
shl
or
mov
test
iret
mov
mov
out
fstp
inc
dec
mov
push
int
inc
or
cmp
inc
cli
dec
dec
and
pop
stc
outs
arpl
and
outs
cmp
cdq
xchg
jge
dec
ins
ins
jae
inc
xor
sbb
mov
lods
idiv
jmp
add
pop
nop
sbb
add
icebp
test
out
cmp
stos
jge
adc
in
dec
sbb
mov
fidiv
mov
out
sbb
sbb
stos
pop
repz
and
mov
jmp
add
dec
adc
pop
xchg
nop
loope
in
cmps
cld
push
push
mov
and
int
inc
in
mov
mov
and
jae
int3
(bad)
(bad)
(bad)
xlat
repnz
call
fdivr
push
dec
push
mov
mov
aaa
fs
sbb
cld
popf
push
inc
fcom
not
(bad)
cmps
dec
repnz
and
jp
pop
fs
mov
jns
fdiv
mov
push
mov
push
lods
fwait
mov
enter
add
jns
xchg
adc
sbb
add
or
cwde
fist
ror
ins
ficom
fst
fs
les
je
dec
pop
cmc
or
mov
es
push
mov
cmp
icebp
icebp
cmp
mov
bound
push
enter
add
outs
xor
dec
(bad)
push
push
sbb
cs
and
push
adc
ss
dec
xchg
mov
pop
sti
push
enter
shl
sub
jo
shr
in
xchg
call
dec
jo
push
or
mov
push
mov
iret
dec
inc
cmp
xchg
sub
cmps
mov
push
xchg
pop
pop
repz
inc
add
or
ffree
xchg
sti
mov
call
mov
hlt
inc
shl
add
add
sahf
mov
stos
cmp
adc
jno
cdq
adc
into
aad
jmp
sub
sbb
and
stos
dec
pusha
jbe
retf
imul
jb
les
cmp
jmp
adc
icebp
xchg
loopne
pushf
jo
std
aad
test
loopne
push
cld
xchg
mov
call
xchg
jecxz
pop
in
in
inc
(bad)
push
lahf
out
lods
mov
jp
fdiv
dec
sub
mul
mov
fdiv
das
and
jecxz
push
sub
imul
jecxz
out
fisub
fidiv
pusha
test
push
out
pusha
sar
add
jne
call
adc
push
fs
pop
cmc
cmp
or
xchg
shr
sar
add
pop
sub
cmp
xor
mov
fdiv
sbb
pop
pop
mov
mov
jmp
imul
pop
dec
cmp
mov
xchg
dec
and
cmp
xor
mov
jae
repz
and
loope
mov
xor
cs
inc
or
push
movs
inc
lods
imul
sub
lea
jecxz
in
popf
arpl
adc
adc
outs
(bad)
jecxz
cwde
or
or
sbb
inc
rol
or
pop
add
sub
fmul
push
shl
mov
dec
ret
push
sbb
mov
xor
dec
add
push
and
cs
cmp
and
fldenv
movs
add
push
gs
adc
jnp
ins
dec
fs
and
fdiv
in
in
cmp
sbb
rol
outs
outs
(bad)
das
inc
dec
out
push
sub
and
pusha
lock
out
push
call
jp
and
iret
xor
retf
(bad)
cmp
mov
sbb
dec
add
imul
mul
jae
or
pop
xor
xor
cmp
fisub
xor
adc
cmp
cmps
into
jbe
jbe
call
jge
clc
sbb
(bad)
cld
cdq
xchg
into
dec
cmp
call
sahf
inc
mov
movs
por
(bad)
xor
in
dec
aam
or
mov
(bad)
stos
repnz
sbb
jno
mov
leave
call
mov
fld
pop
mov
dec
mov
push
adc
fldcw
pop
(bad)
pop
inc
xor
jmp
lahf
lods
cmp
out
repnz
sbb
cli
mov
out
sar
and
mov
sub
push
test
mov
idiv
call
or
or
ret
sbb
xchg
jg
(bad)
cld
sub
rol
add
fcom
retf
jb
icebp
add
test
xor
xor
fld
(bad)
daa
addr16
repnz
js
mov
or
or
mov
dec
push
push
mov
xchg
mov
mov
or
push
and
xchg
add
cmp
in
out
and
pushf
gs
cs
and
and
repz
dec
imul
mov
mov
ja
and
push
jb
and
aad
in
xchg
sub
aad
jb
nop
or
or
sub
jl
mov
fnstcw
jg
mov
mov
jb
es
mov
inc
frstpm(287
cmp
mov
ret
fidivr
push
cdq
cmps
mov
jmp
push
mov
in
jmp
mov
jbe
popf
xchg
fwait
in
aas
xor
arpl
push
arpl
pop
adc
push
popf
add
lea
pop
cmp
add
inc
icebp
sbb
out
ret
xchg
out
pop
repz
push
sbb
sub
xchg
out
jle
leave
scas
adc
sbb
cmp
xchg
je
xor
(bad)
int3
pop
out
xchg
dec
inc
aad
hlt
dec
xchg
mov
pop
test
cmp
adc
cmp
imul
bound
(bad)
out
mov
add
xor
(bad)
adc
lea
in
pop
sub
fucom
out
fsub
xor
cmps
rcl
mov
stos
movs
xchg
jge
mov
ret
or
jg
lahf
pop
mov
sti
mov
scas
xchg
les
aaa
sti
lods
stos
jae
jp
push
loope
and
rcr
lahf
pop
stc
loope
push
ja
fsubr
gs
sbb
fild
fmul
xchg
lock
arpl
pop
inc
je
jno
sbb
out
inc
xchg
(bad)
mov
in
aam
enter
push
fwait
jg
cmp
ins
out
cmp
es
neg
in
loopne
and
(bad)
push
cmp
sbb
mov
or
sti
jmp
push
jae
mov
(bad)
ins
pushf
pop
aaa
xor
mov
nop
lahf
xchg
inc
cdq
ja
cld
loope
adc
(bad)
lock
pop
ds
inc
jnp
pop
sub
adc
xchg
je
mov
pop
xchg
mov
cli
into
mov
push
push
mov
mov
sub
pop
inc
das
cmp
push
and
in
sub
addr16
cmp
jle
adc
movs
inc
sti
fldenv
mov
push
gs
popa
iret
mov
loopne
add
scas
xchg
in
jmp
pop
pop
cmp
jbe
inc
fst
sbb
icebp
leave
loop
add
(bad)
mov
mov
mov
fsubr
mov
sbb
jno
pop
repz
gs
sbb
adc
pop
cmp
adc
inc
out
push
cli
mov
in
sub
or
or
mov
xor
bound
jne
dec
cli
retf
aaa
int
mov
int3
mov
adc
aaa
faddp
out
jmp
pop
leave
cmp
mov
icebp
dec
mov
(bad)
xor
jno
xor
sbb
mov
sbb
pop
jg
mov
push
adc
jp
rcl
xchg
or
inc
mov
push
sub
sbb
idiv
bound
sar
movs
rol
movs
push
test
and
dec
leave
dec
sbb
cdq
add
mov
js
xchg
xchg
cmp
in
loop
jp
push
std
imul
or
add
lock
push
or
enter
mov
addr16
ror
leave
jge
ins
das
cs
xchg
sti
inc
movs
cwde
scas
scas
mov
stos
out
lea
inc
repz
and
test
stos
push
jno
add
and
xor
push
mov
lea
(bad)
out
arpl
jne
xchg
bnd
test
pop
shr
inc
mov
jg
and
mov
inc
loope
outs
push
stc
movs
mov
push
jo
mov
or
fwait
cwde
xor
fisub
inc
mov
mov
mov
xor
(bad)
shr
call
out
lds
jae
jno
or
ins
repz
sar
sub
ret
movs
mov
into
jge
es
(bad)
and
sar
es
xlat
mov
adc
imul
leave
aad
ins
or
and
add
dec
fistp
fisubr
mov
mov
stos
xor
in
jne
pop
ficomp
shl
outs
cwde
xchg
out
mov
push
les
jo
dec
xlat
adc
(bad)
mov
(bad)
call
dec
sbb
sar
fwait
repz
pop
fwait
xor
fldenv
sbb
bsr
ret
pop
dec
inc
xor
mov
lock
std
mov
or
jbe
pusha
int
pop
gs
sbb
shl
add
inc
ja
fstp
adc
test
fdivrp
xchg
add
sbb
pop
ja
xor
or
push
jb
dec
addr16
jae
out
stc
aam
xchg
in
(bad)
or
jns
mov
enter
in
add
es
push
jg
and
push
mov
xor
inc
das
mov
cld
cdq
mov
pop
inc
and
icebp
mov
mov
bound
mov
data16
loopne
aaa
xor
pop
fidiv
scas
cwde
fisub
mov
outs
aas
xchg
jg
sar
mov
cld
outs
mov
(bad)
mov
push
icebp
jno
xor
adc
rol
and
ss
sbb
sti
repnz
dec
jbe
ja
mov
cdq
or
fild
je
out
sbb
ret
and
out
arpl
pusha
and
js
ficomp
cmc
mov
pop
jg
push
xor
inc
push
xor
adc
push
ja
cdq
push
lds
enter
scas
xchg
mov
or
cmp
das
sub
mov
test
adc
addr16
in
cs
mov
lods
inc
add
sub
push
adc
adc
ret
pusha
cmp
out
in
adc
mov
push
imul
call
addr16
or
fbstp
push
xchg
xor
pop
in
mov
sub
sar
push
(bad)
fild
sahf
aaa
jnp
inc
cmp
scas
add
mov
dec
lahf
shl
push
(bad)
outs
jo
not
mov
mov
sbb
jp
dec
cmp
and
inc
sbb
xor
mov
push
xor
mov
mov
push
push
inc
fwait
adc
sar
ret
push
jg
stc
xor
stos
cs
push
cmp
stos
ficomp
xor
das
mov
pop
mov
ficom
mov
jne
out
adc
cdq
pop
jp
add
lods
adc
mov
dec
adc
pushf
movs
bound
mov
and
nop
cmp
sub
jno
enter
xchg
ss
xchg
pop
mov
adc
fdiv
push
(bad)
push
jp
mov
jo
xchg
xchg
sbb
loop
loopne
dec
adc
nop
aam
fld
sbb
mov
stc
sub
cmp
add
nop
int3
scas
dec
xchg
xor
lods
mov
push
dec
add
clc
or
aam
add
jp
clc
mov
mov
push
sub
jae
mov
stos
cmp
mov
jo
rol
add
dec
call
push
adc
sar
add
jmp
ins
scas
cmp
mov
inc
jge
in
bnd
mul
stos
mov
inc
or
adc
rcl
xchg
xchg
sbb
or
mov
cmp
aas
mov
fadd
add
fld
lods
in
push
mov
jbe
cmp
mov
mov
hlt
fcomi
mov
in
mov
les
in
aam
call
jb
ins
mov
les
push
(bad)
js
jmp
sbb
xchg
stos
cmp
mov
ret
inc
sti
inc
mov
xor
push
add
push
cmp
cld
into
sti
pop
test
mov
cmps
scas
sbb
movs
les
add
mov
mov
xor
dec
aaa
or
xchg
mov
cmp
enter
in
mov
jmp
mov
pop
pop
lds
mov
push
mov
or
jp
pop
and
fdivr
and
jb
inc
cmps
xor
mov
or
ss
adc
es
cs
and
cs
scas
data16
xchg
imul
jb
es
xor
adc
dec
and
push
test
and
retf
jbe
pop
sbb
mov
xor
sbb
loopne
sub
push
(bad)
in
dec
ja
leave
fmul
mov
adc
jb
fsub
cmps
jae
xchg
adc
adc
pop
mov
add
gs
xor
sub
es
cmp
int3
and
inc
mov
push
seto
sbb
lea
mov
sti
xchg
cmps
js
sub
sub
xor
pop
or
test
push
cwde
cdq
push
mov
and
aas
adc
mov
xor
ret
not
imul
fs
push
dec
add
dec
aas
sar
test
leave
fdecstp
cmps
sub
or
or
xor
cmc
jge
push
xchg
jecxz
sbb
shr
mov
daa
and
shr
pop
mov
lods
cmovns
xor
ret
in
add
aad
cmp
pushf
fcomp
mov
cli
jo
retf
fs
push
out
jmp
(bad)
cmps
push
cmp
xchg
into
pop
dec
cmp
call
dec
shl
xor
lea
leave
mov
frstor
loope
dec
pop
fwait
ja
iret
jnp
sub
sbb
or
ja
or
stos
pop
xor
jecxz
xchg
mov
pop
xchg
add
sub
push
sbb
mov
test
cmp
stos
das
adc
stos
hlt
stos
mov
pop
xchg
fidiv
in
mov
add
push
repnz
cmc
clc
jno
enter
int3
out
jp
xlat
push
aaa
mov
test
lods
call
push
(bad)
mov
test
inc
jnp
inc
bound
test
stc
mov
fwait
pop
sbb
test
add
jl
jge
push
jo
add
fst
lods
jbe
mov
fisubr
shl
popa
push
out
ins
adc
call
dec
or
dec
mov
xor
iret
cmp
adc
cli
pop
fwait
and
cmp
mov
jae
popa
mov
jge
and
test
jns
popf
shl
xchg
sub
push
lods
ret
stos
(bad)
mov
sub
add
neg
mov
mov
mov
xchg
mov
push
(bad)
pop
ins
(bad)
mov
inc
inc
(bad)
xor
fs
jbe
pop
adc
cdq
jge
pop
push
or
or
jb
dec
pop
mov
fnstsw
jne
cmp
popf
xor
int
aad
add
jmp
cmp
lods
xchg
lods
pop
sbb
xchg
jo
adc
daa
bound
addr16
rcr
icebp
stos
fs
data16
adc
add
movups
ror
call
add
and
mov
retf
inc
popa
test
iret
adc
(bad)
mov
ror
mov
jp
ins
out
mov
ins
mov
ins
and
lods
pop
in
mov
into
sub
test
lods
stc
lock
lds
test
fs
inc
and
ins
loope
push
push
push
pusha
(bad)
dec
div
(bad)
pop
xchg
pop
nop
retf
and
xchg
(bad)
mov
push
lahf
leave
enter
daa
and
(bad)
fnstenv
scas
scas
fldenv
xchg
fist
cmc
jg
push
jo
add
xchg
xor
jmp
push
in
cli
scas
into
and
push
pop
rcl
push
scas
nop
in
ins
sbb
xchg
and
and
or
and
pusha
ds
nop
mov
cld
add
jbe
sub
(bad)
pop
dec
dec
daa
daa
mov
out
aam
jno
pop
or
(bad)
(bad)
or
(bad)
fcomp
sbb
dec
cmp
pop
or
lods
test
pop
xchg
rol
xchg
pop
sbb
xor
dec
addr16
adc
add
outs
aas
loop
xor
pop
out
clc
xor
dec
(bad)
push
mov
and
lock
or
or
cmps
jmp
push
xchg
add
movs
mov
sbb
or
ret
sbb
aas
fiadd
or
inc
cmp
lds
pop
xor
add
leave
xchg
adc
popa
mov
ss
js
dec
fsub
mov
mov
jbe
or
or
in
jl
xchg
mov
enter
adc
mov
loopne
leave
and
and
xor
fnstenv
adc
mov
stos
fld
ja
pop
pusha
jg
mov
inc
mov
lock
shr
and
lahf
mov
mov
sbb
mov
scas
xchg
mov
lods
movs
test
ins
fldenv
aaa
jae
lds
cwde
push
add
mov
stos
jp
push
push
pushf
ficomp
sub
xor
cmp
iret
xchg
bound
int
sbb
mov
inc
out
mov
icebp
rol
inc
imul
fcmovnb
xchg
add
pop
sub
pop
mov
and
pop
sub
and
es
(bad)
dec
out
mov
pusha
mov
fnstcw
aad
enter
and
dec
mov
jbe
add
dec
and
adc
lea
les
inc
(bad)
lods
mov
sar
repnz
mov
sbb
xchg
lahf
pop
movs
pop
mov
cmc
xor
(bad)
mov
xor
out
jge
add
test
add
or
fldcw
mov
(bad)
sub
xchg
sar
repz
dec
xchg
pop
scas
sub
rol
mov
sti
xchg
lock
fdivr
cmp
cdq
jmp
hlt
inc
scas
loopne
popf
stc
in
arpl
add
dec
push
dec
add
inc
daa
call
jne
cmp
imul
inc
int3
xor
jb
lahf
mov
test
les
das
pop
retf
dec
sub
sbb
out
sub
ins
xor
mov
dec
push
or
pop
mov
cwde
retf
idiv
and
shl
leave
sub
imul
mov
loop
mov
sti
test
out
mov
xor
and
rcr
out
fs
pop
mov
frstor
sbb
jle
jmp
sbb
ffree
inc
inc
jae
xchg
rol
xlat
xlat
leave
popa
lds
fucomi
inc
aam
jge
js
jg
stos
xchg
lahf
dec
ficomp
ror
mov
adc
rcr
pop
shl
adc
inc
in
push
add
xchg
cwde
jl
fisub
enter
mov
repz
fisub
add
data16
lea
loop
aas
outs
ss
stos
(bad)
loop
jmp
pop
pop
repz
xor
call
fsubr
stos
dec
pushf
jnp
adc
cmp
ja
fist
icebp
outs
imul
(bad)
mov
adc
mov
stos
jmp
adc
(bad)
push
pop
into
cli
movs
push
fldcw
in
cmps
inc
pop
dec
popf
mov
in
loope
stc
push
cmp
loop
dec
retf
mov
(bad)
icebp
aaa
push
push
stc
(bad)
out
cmp
shl
mov
in
sahf
(bad)
ss
sbb
repnz
pop
cmp
mov
andnps
pop
xor
and
jne
movs
outs
dec
mov
imul
adc
out
int3
xchg
xor
ss
push
data16
mov
pop
out
aam
jae
sti
pop
repz
int3
shl
lea
sbb
xor
xlat
jb
fdiv
jne
cmp
mov
test
or
in
xor
xchg
jle
xchg
and
gs
ins
stc
or
dec
enter
pop
je
rcl
bnd
pop
add
aas
xchg
cmp
xchg
inc
lods
sub
sbb
fsubr
or
adc
enter
and
(bad)
add
cmp
call
jae
cwde
sbb
lods
dec
scas
inc
jecxz
and
sub
test
sbb
xchg
dec
enter
xor
mov
call
dec
lods
push
addr16
cmp
cs
aaa
out
ficom
aad
data16
dec
and
jnp
adc
arpl
je
and
sbb
pop
sbb
or
iret
repz
and
addr16
out
div
(bad)
(bad)
sti
mov
dec
dec
sbb
cmps
add
or
sub
lods
test
pop
(bad)
or
and
push
int3
jae
push
mov
les
ins
sub
jnp
sbb
shl
adc
in
ins
retf
jle
pop
and
int3
dec
push
test
cdq
jnp
ja
std
push
ins
(bad)
inc
mov
(bad)
cmc
xor
and
push
std
inc
nop
sbb
mov
sub
arpl
push
test
ret
dec
push
ja
pop
jne
lds
jo
sub
ins
xor
pop
sub
xchg
push
mov
jg
ret
lods
cmp
ror
icebp
lock
scas
sbb
mov
out
sub
mov
push
lds
jo
jp
cmp
shl
mov
mov
icebp
rcr
mov
add
mov
popf
sbb
pop
(bad)
pop
jbe
scas
test
mov
sub
xor
rcr
xchg
dec
outs
xor
sub
jl
retf
sbb
stos
inc
jae
cwde
adc
xchg
sbb
mov
fbstp
xor
shl
cmp
fs
inc
cld
push
stos
fist
jb
mov
ror
push
xor
mov
retf
call
sbb
xchg
jg
mov
enter
cmp
repnz
jno
xchg
inc
or
push
add
fnstsw
pop
mov
add
mov
out
dec
cmc
xchg
and
mov
cmp
add
sub
in
xlat
ror
inc
enter
nop
int
dec
mov
mov
test
mov
dec
stos
imul
cld
jnp
lock
out
int
and
mov
jnp
dec
xchg
inc
addr16
push
mov
stc
mov
sbb
push
ss
mov
fs
inc
rcr
xchg
dec
(bad)
retf
(bad)
ret
push
and
push
mov
adc
pop
jbe
pop
and
retf
sub
addr16
push
xlat
fldcw
out
sbb
mov
aam
jno
test
stc
pop
xor
ret
or
ret
mov
add
test
jmp
mov
inc
lods
sahf
mov
ja
fwait
idiv
mov
pop
scas
cli
cmp
adc
pop
cld
enter
xchg
inc
jne
popf
in
(bad)
lahf
sub
rol
aad
push
xchg
push
sub
or
xchg
push
jbe
addr16
xor
xor
popf
cld
cli
sbb
mov
cmps
ins
(bad)
fnstenv
mov
jp
adc
pop
shl
loopne
dec
inc
icebp
xchg
retf
mov
test
jmp
inc
and
gs
cmp
test
push
sbb
neg
mov
jnp
es
fist
push
push
xchg
push
(bad)
jae
iret
call
popf
sub
jbe
push
push
dec
cs
or
mov
mov
inc
loope
sub
movs
rep
test
ins
add
out
mov
lds
or
stos
xchg
cmp
in
jge
test
adc
jmp
or
fdiv
jns
lea
xor
pushf
push
push
pop
int
mov
fdivr
repz
aad
and
sti
enter
and
fnstenv
iret
push
retf
fisubr
inc
pop
(bad)
jmp
adc
into
movs
repz
out
icebp
dec
add
jbe
cs
cmp
add
nop
or
popa
movs
jb
(bad)
sbb
mov
(bad)
pmaxub
sub
cmps
sbb
es
fisubr
add
xchg
jno
inc
xchg
out
shl
movs
pop
retf
bound
inc
scas
cmp
mov
stc
add
sti
fimul
mov
jle
fs
retf
add
ret
xchg
(bad)
out
mov
adc
mov
jnp
mov
shl
into
add
stos
test
inc
adc
ret
adc
(bad)
and
cld
(bad)
arpl
mov
jno
jnp
mov
call
mov
fbld
mov
adc
test
inc
cmps
div
add
jne
adc
mov
movs
nop
lods
leave
mov
nop
push
(bad)
sar
mov
iret
or
xor
addr16
test
aaa
inc
mov
jbe
adc
sti
mov
cmp
lock
(bad)
mov
ds
ret
cmp
xchg
icebp
cld
fnstsw
xor
iret
arpl
es
out
sbb
push
push
and
jg
jo
sub
jne
lods
mov
arpl
or
jns
iret
xchg
movs
ins
outs
xor
mov
ins
and
mov
xchg
pop
outs
lods
and
sub
xchg
xchg
jmp
jne
mov
arpl
loop
je
ss
xchg
out
(bad)
mov
cli
jb
retf
call
or
hlt
xor
shr
sbb
pop
(bad)
dec
bound
push
repz
retf
sahf
aad
mov
pop
mov
and
or
dec
rcr
pop
add
dec
jo
add
pop
imul
cmp
jg
inc
cwde
jp
cmp
adc
lods
or
div
cdq
xchg
push
jle
mov
repz
mov
ins
or
sub
mov
test
adc
stc
inc
(bad)
aam
inc
fld
imul
out
inc
data16
xor
popa
inc
adc
lods
mov
push
shl
jmp
mov
jg
cmps
ficomp
adc
xchg
jle
dec
repnz
or
fcmovnb
mov
sahf
rol
cmps
mov
adc
inc
mov
mov
xchg
cli
out
ja
out
and
fcmovnu
jb
sub
arpl
stos
outs
jl
test
mov
adc
and
outs
or
mov
inc
aaa
cwde
cmp
js
mov
(bad)
mov
sahf
mov
push
shl
loope
pop
adc
hlt
cmps
mov
and
mov
xor
inc
lock
mov
add
inc
mov
je
dec
dec
fs
test
jmp
std
loopne
pop
sub
fs
popa
push
scas
ja
xor
jmp
mov
sbb
inc
or
push
shl
mov
fist
jmp
into
jl
adc
xor
out
mov
xor
inc
lods
lods
dec
xchg
icebp
push
hlt
mov
and
mov
push
pop
cld
in
clc
xor
jge
or
dec
mov
iret
xor
loopne
push
in
xor
fdivr
dec
loope
mov
or
sub
dec
sub
or
out
xchg
jmp
addr16
cli
leave
sbb
push
sbb
mov
pop
and
in
sbb
add
add
gs
pop
stos
mov
rcl
mov
push
dec
out
out
out
inc
push
xchg
sbb
adc
or
je
cmp
sub
fstp
js
inc
dec
lea
ror
push
xchg
into
faddp
mov
sbb
inc
bound
fist
push
(bad)
push
leave
pop
push
call
inc
push
mov
dec
imul
and
stc
mov
xchg
pop
mov
shl
cmc
mov
jp
imul
or
sub
mov
pop
pop
(bad)
pop
jns
pop
jg
mov
fild
adc
js
add
repnz
jne
sbb
rcl
adc
cmp
outs
shl
loop
mov
pop
sub
jge
test
push
mov
ja
bound
mov
sar
mov
cmps
loop
hlt
stos
mov
scas
sbb
adc
mov
push
nop
sti
sub
mov
and
mov
dec
inc
jnp
dec
daa
jl
leave
add
xchg
imul
jmp
cmp
retf
mov
cmp
ror
pushf
xor
daa
xchg
mov
ret
xchg
mov
jmp
inc
cmc
xchg
or
(bad)
ja
push
add
(bad)
stc
outs
cmp
adc
cdq
xor
sti
hlt
dec
xchg
jl
shl
std
adc
adc
mov
(bad)
mov
or
xchg
push
inc
stos
push
repnz
lea
fstp
adc
adc
push
xchg
out
push
fiadd
daa
adc
sbb
sub
add
test
in
add
adc
inc
inc
push
xor
rcr
jge
das
xchg
mov
lds
lock
gs
jnp
mov
inc
mov
xor
mov
xor
mov
cld
adc
and
mov
scas
sub
xlat
add
or
loope
addr16
pop
adc
sbb
out
inc
sub
push
cmp
scas
xchg
push
pop
mov
movs
std
leave
xchg
xor
and
mov
jae
sub
push
sub
hlt
jmp
pusha
sbb
adc
clc
stos
movs
mov
or
and
or
sub
pop
cmp
push
or
jno
(bad)
mov
in
dec
mov
dec
mov
jecxz
loope
xor
or
movs
xor
in
cmp
mov
scas
xchg
shl
fwait
and
xor
mov
stos
mov
imul
loopne
xor
sub
call
out
ss
jl
shl
in
dec
add
loope
out
shl
lahf
cmps
movs
jno
and
test
pop
mov
inc
iret
xor
cs
std
sbb
jo
dec
jmp
test
test
int3
push
inc
fadd
out
xchg
mov
jb
inc
packssdw
sub
xor
sub
fsubr
sbb
add
mov
fld
mov
mov
test
mov
mov
call
jle
or
pop
pop
pop
jl
sub
cwde
cmp
sub
scas
dec
sahf
mov
(bad)
jp
movs
test
mov
fnstcw
inc
test
mov
and
jo
add
test
popf
jmp
mov
xor
xchg
sbb
lock
test
cmps
lods
mov
pop
mov
mov
or
push
mov
jle
rol
adc
sbb
cdq
(bad)
out
xchg
xchg
mov
sub
xchg
js
adc
outs
fs
xor
int3
cmp
adc
jmp
dec
inc
adc
mov
add
xor
jmp
std
fild
out
fnstenv
xchg
xlat
cs
cmps
pop
sti
mov
enter
inc
mov
outs
imul
repnz
jb
xchg
stos
movs
fs
xor
fld
inc
cmps
or
inc
fwait
rcr
push
mov
mov
mov
bound
ins
pusha
dec
jg
cmps
sub
push
sbb
xchg
sub
push
sub
icebp
mov
jnp
lahf
sbb
addr16
push
and
add
sar
movs
push
cwde
adc
call
inc
into
pop
imul
xor
(bad)
pop
sub
loopne
jle
adc
xor
lods
adc
jp
mov
in
outs
sub
mov
dec
sahf
cs
call
jbe
aas
das
add
xor
mov
ss
cmp
jl
jne
outs
and
out
pushf
mov
repz
cld
aad
(bad)
mov
push
mov
mov
out
pop
lea
cmps
fwait
adc
sub
rcl
test
sti
aad
fwait
mov
pop
push
cli
lods
repz
add
and
lods
cmp
ins
xor
out
push
pop
mov
jecxz
fsub
fs
sbb
push
sub
sbb
inc
nop
test
mov
sub
loopne
aaa
pop
or
out
scas
add
test
jb
xchg
stos
in
add
jp
les
and
sub
ins
das
sbb
loop
(bad)
sub
out
sbb
adc
mov
xor
out
stos
pop
push
repnz
cld
push
dec
xchg
xchg
and
es
push
or
scas
retf
jecxz
sbb
jb
fmul
in
add
dec
jmp
stc
sahf
retf
cmp
mov
or
cmp
jae
fadd
mov
and
retf
ins
xor
inc
ror
arpl
test
out
(bad)
loop
ffreep
mov
jmp
(bad)
mov
jb
xchg
arpl
push
jmp
push
xlat
pop
inc
outs
repnz
xor
push
mul
adc
les
imul
adc
cmp
jmp
jbe
(bad)
fidiv
mov
(bad)
lods
les
lahf
jnp
lahf
sbb
(bad)
mov
and
(bad)
jnp
mov
in
xchg
inc
stos
push
ret
and
cmps
ret
cmp
out
dec
aad
dec
popf
xor
cmc
je
push
push
ficomp
mov
cmps
aad
data16
push
cmp
cli
mov
rcl
sbb
test
push
push
fdiv
cmp
or
repz
into
divps
mov
fstp
aaa
dec
hlt
dec
add
cmp
fstp
in
mov
or
mov
sar
jmp
xor
fsincos
pop
ja
add
cwde
or
mov
xor
cmp
jmp
(bad)
retf
or
sub
inc
or
mov
mov
inc
popf
or
add
nop
push
sub
pushf
or
pop
in
jmp
push
and
stos
in
cmp
sbb
daa
dec
add
(bad)
pop
loope
xlat
pop
pop
jo
ret
mov
shl
enter
xor
adc
retf
aas
jbe
aad
clc
(bad)
jo
je
js
outs
push
push
popf
stos
shl
dec
int
dec
ins
movs
test
ds
sub
xor
xor
std
repz
or
imul
xor
fwait
mov
rcl
jl
fidiv
or
movs
sbb
push
sbb
loope
pop
inc
push
sbb
adc
jge
loop
js
xchg
xor
int3
sbb
xor
ficom
jb
pop
jle
inc
jns
int3
fist
mov
jmp
movs
ror
(bad)
fisttp
jns
outs
mov
shr
sub
pop
(bad)
mov
add
repz
sub
not
mov
sub
inc
and
leave
jge
or
or
je
pop
cmp
pop
jmp
fsubr
movs
(bad)
pop
lock
push
aad
fwait
adc
rol
fisttp
mov
adc
push
dec
adc
push
pusha
xchg
adc
push
mov
imul
sub
mov
mov
mov
sub
pop
push
(bad)
ins
add
out
dec
adc
(bad)
mul
xor
inc
and
sahf
(bad)
sbb
std
adc
loope
js
pusha
mov
pop
mov
dec
pop
jo
fsubrp
(bad)
arpl
gs
(bad)
pop
out
std
std
inc
or
pusha
gs
add
mov
push
ins
cmps
div
dec
icebp
scas
(bad)
mov
leave
mov
pop
imul
fdivp
stos
int3
cli
movs
adc
xchg
fwait
jmp
aam
xor
clc
pusha
loop
mov
(bad)
fnstcw
mov
pop
mov
inc
add
xchg
into
mov
xchg
push
xor
iret
xchg
retf
dec
pop
push
aad
xor
add
push
cmps
sub
mov
or
pop
jmp
retf
int
mov
xor
and
dec
mov
fcmovu
mov
mov
adc
mov
cmps
ins
inc
mov
pop
daa
hlt
not
push
mov
retf
xchg
mov
jnp
mov
enter
in
loop
mov
mov
lods
dec
mov
add
push
push
push
dec
xlat
in
mov
lods
xchg
cmc
adc
jo
lds
sahf
jo
adc
xor
cwde
das
mov
lods
(bad)
shl
lds
sbb
xchg
xor
aas
jne
js
(bad)
dec
leave
aad
xor
les
sti
mov
ret
cli
loope
and
not
bound
imul
jno
mov
or
pop
pop
ja
pop
mov
stc
cmp
call
lds
fwait
mov
mov
push
test
push
pop
movs
retf
mov
fld
push
cdq
mov
xchg
or
or
cmp
scas
lds
into
lods
lods
mov
bound
fiadd
sub
adc
dec
inc
hlt
ret
pop
pop
or
xor
adc
retf
rcl
stos
outs
jae
(bad)
xchg
loop
or
xchg
mov
and
mov
lock
dec
in
jb
call
mov
(bad)
sar
sbb
bound
(bad)
mov
and
jnp
js
jnp
sub
sub
mov
mov
inc
ret
test
fimul
sbb
inc
nop
sbb
ins
push
mov
pop
ror
ret
sub
fidiv
cmc
sub
ds
cmp
in
jp
cmp
adc
cmp
push
nop
stos
movs
mov
xchg
popf
push
xchg
iret
mov
(bad)
enter
xchg
fucomp
lods
mov
dec
enter
repnz
nop
add
fwait
popa
ins
sbb
xor
lods
mov
and
pop
in
push
push
mov
and
jns
cmps
inc
push
arpl
adc
lock
pop
fsub
gs
mov
daa
mov
cwde
push
fwait
xchg
cmps
out
nop
mov
mov
clc
push
xchg
sub
mov
test
outs
jmp
in
scas
fs
mov
sti
sub
js
ret
push
mov
shl
inc
mov
xchg
jle
fsubr
loop
pop
mov
jp
(bad)
mov
dec
dec
cmp
add
jge
je
fiadd
mov
or
pop
jmp
iret
jle
int3
aas
add
dec
push
scas
xchg
call
mov
cwde
(bad)
repz
push
dec
fild
mov
fiadd
add
add
hlt
mov
inc
neg
dec
pop
mov
or
in
xchg
out
int3
not
imul
inc
lods
xchg
add
fwait
and
lods
mov
popf
loop
add
add
and
pop
lock
or
jae
dec
mov
test
leave
pop
test
dec
sub
cli
outs
cli
mov
clc
sti
mov
mov
xor
cdq
and
push
fild
iret
xchg
je
sbb
mov
ret
test
nop
dec
shl
pop
enter
mov
retf
pop
mov
and
jmp
fnsave
mov
mov
dec
or
rcl
fild
loope
mov
jno
cmps
mov
iret
dec
sar
mov
out
das
call
shl
add
loop
ja
dec
mov
int
sbb
int3
sysret
pop
mov
fst
icebp
push
enter
cs
jmp
jecxz
popf
mov
fild
in
push
mov
nop
call
mov
ins
sti
cmp
stos
stos
cdq
cmps
movs
imul
out
pop
(bad)
and
jle
in
fwait
mov
sahf
mov
or
mov
xor
dec
sbb
(bad)
jnp
dec
icebp
jecxz
mov
sbb
out
(bad)
dec
mov
es
int3
pop
cmc
mov
hlt
inc
jp
cmps
lods
icebp
in
fcmove
or
push
test
jb
push
gs
lods
pop
mov
xchg
int
xchg
jne
xor
push
mov
add
mov
sbb
inc
xor
in
xchg
or
cmps
xchg
adc
hlt
sub
sub
dec
dec
outs
or
fwait
push
inc
out
mov
call
add
jnp
xchg
sub
(bad)
mov
lds
dec
imul
pop
lods
jp
xchg
or
mov
sub
outs
arpl
dec
or
cld
mov
inc
add
mov
fldenv
dec
les
hlt
push
scas
fdiv
mov
jecxz
xor
arpl
repnz
sar
mov
aaa
dec
push
iret
jmp
push
jge
stos
out
and
aaa
xchg
xor
xor
test
icebp
gs
inc
jnp
(bad)
mov
pushf
dec
aaa
pop
ret
(bad)
mov
aad
test
ja
pop
sar
sar
ss
ret
sub
mov
fsub
out
jns
cmp
cmp
sbb
es
mov
dec
lea
fsubr
or
push
jg
dec
push
mov
sbb
xor
cwde
pop
xchg
outs
xor
call
mov
hlt
retf
sbb
sub
enter
inc
mov
and
fsub
cs
repz
popf
dec
sar
mov
pop
xchg
out
stos
test
int3
pop
xor
pusha
jmp
add
adc
cmps
ret
push
add
cmps
jecxz
xor
jmp
xor
mov
dec
ficom
xchg
or
sbb
je
add
xchg
push
mov
xlat
cmp
cmps
imul
mov
call
add
clc
(bad)
adc
mov
outs
mov
imul
outs
mul
xor
or
(bad)
jp
xchg
jne
in
call
std
push
sub
sub
sbb
das
xor
mov
inc
inc
jmp
imul
xor
xor
sub
sub
test
sub
xchg
outs
out
test
adc
imul
mov
inc
cmp
sbb
cmp
dec
mov
cmp
fsubr
xor
sbb
cs
push
sub
mov
or
int
ficomp
imul
(bad)
and
inc
jmp
(bad)
lock
(bad)
pop
in
setle
std
cmps
push
mov
mov
mov
mov
xor
push
or
pop
lar
xchg
data16
mov
loop
aaa
mov
lods
into
push
enter
mov
call
enter
shl
push
mov
movs
xor
lock
sub
addr16
movs
in
mov
fcomi
adc
out
jbe
dec
in
push
pop
mov
out
xchg
xchg
imul
retf
pushw
aas
mov
cmp
xchg
or
mov
adc
sti
cdq
daa
cs
add
int
movs
add
sbb
out
dec
jbe
ds
add
sub
cmp
retf
push
sub
jle
push
js
mov
adc
push
movs
cmp
pushf
cmps
jg
aam
xchg
mov
ja
xchg
sti
shl
cmp
jae
mov
fcom
ret
cmp
lea
repz
sahf
mov
int
and
add
fwait
lock
out
jno
jge
in
sub
xchg
fisttp
sbb
mov
add
or
mov
into
retf
mov
mov
aas
inc
cmp
or
rcr
mov
cli
xor
popf
push
shl
cmp
ins
shl
fwait
imul
pop
xchg
int
test
pop
push
and
mov
lock
xchg
add
scas
test
mov
push
mov
sub
sbb
mov
out
dec
add
retf
add
sbb
stos
stos
fistp
fistp
and
adc
rcr
mov
push
mov
mov
and
fimul
adc
inc
xchg
jnp
pop
mov
movs
(bad)
push
call
movs
xchg
rcr
cmp
in
icebp
mov
(bad)
fstp
push
aad
inc
cmp
loop
or
cmp
xor
adc
pop
push
pop
mov
rol
mov
mov
ss
jle
ins
inc
cs
aam
inc
fst
xlat
adc
adc
pop
ins
inc
sbb
cdq
add
sti
sbb
add
or
and
in
adc
xchg
lea
xor
push
cmps
adc
int
fsub
mov
mov
imul
in
xchg
mov
xor
mov
jecxz
jnp
push
mov
or
imul
sbb
cmp
imul
(bad)
imul
ins
mov
stos
jb
push
retf
imul
mov
mov
clc
jmp
xlat
ret
cmp
std
movs
iret
xchg
push
inc
push
and
pop
popf
inc
add
call
rcr
imul
jl
adc
rcr
retf
fimul
cmp
ins
or
jb
or
shr
sar
movs
out
data16
pop
and
mov
mov
mov
mov
pop
mov
mov
adc
arpl
sbb
icebp
jge
xchg
loopne
jl
sbb
hlt
arpl
aam
test
dec
pop
test
loop
out
aaa
xchg
adc
inc
mov
mov
stos
sbb
inc
in
imul
fs
xchg
jno
shr
dec
enter
adc
fmul
sub
xchg
test
jg
jmp
pop
aad
outs
xchg
jle
dec
fbld
ins
pop
retf
(bad)
lock
popf
test
push
xchg
push
cmc
cli
fsub
mov
xlat
add
inc
push
sbb
mov
sub
jno
sti
pop
ret
sbb
inc
adc
jbe
pop
mov
lods
push
pop
jl
dec
enter
jb
push
cmps
(bad)
pop
pop
mov
les
mov
push
stos
xor
cwde
daa
hlt
xchg
fisttp
cmps
movs
lock
add
fnstsw
movs
and
pusha
in
jmp
lock
neg
in
cmp
xor
push
mov
pop
je
or
dec
retf
popf
ficom
sti
pop
jg
das
movs
inc
rcr
xchg
clc
(bad)
push
xor
mov
scas
repz
out
and
dec
int
cs
push
cmp
add
mov
push
cmp
jp
repnz
cmps
sub
adc
lea
xchg
cld
pop
icebp
test
cmp
inc
enter
mov
aas
rcl
ss
out
xor
aas
mov
out
cmp
jmp
add
dec
inc
xor
rcr
ret
add
pop
sbb
in
aaa
inc
bound
inc
lds
movs
mov
inc
fst
sbb
push
jp
mov
mov
or
mov
cmps
ins
test
mov
adc
das
lock
and
mov
loope
(bad)
or
fild
je
ds
push
test
stos
out
leave
cmp
xchg
lahf
repz
cs
add
out
repz
ins
test
and
push
test
add
pushf
and
ror
add
push
mov
pop
push
lahf
lock
das
mov
and
test
mov
pop
fs
jg
fdiv
aad
pop
shr
xlat
adc
jecxz
enter
jnp
in
adc
adc
adc
mov
rcr
mov
std
mov
sub
jge
loopne
push
mov
or
std
movs
xor
and
adc
add
std
pop
mov
daa
jno
and
cdq
repnz
lods
jno
mov
xlat
or
push
pop
mov
rcl
pop
mov
ins
imul
inc
xlat
xor
xor
popf
pop
dec
pop
push
rcr
icebp
gs
cmc
or
mov
jno
mov
pop
dec
sub
xor
sbb
aaa
jne
xor
cmp
into
icebp
and
hlt
mov
(bad)
mov
xchg
sub
cmp
in
pop
pop
mov
rcr
xchg
push
mov
push
outs
lahf
mov
pop
mov
xchg
jno
fstp
push
jmp
mov
outs
test
mov
lods
or
stc
clc
cmp
add
cmp
ins
pop
nop
jns
mov
mul
data16
idiv
dec
mov
out
lds
xchg
push
scas
dec
fild
test
stos
dec
or
dec
(bad)
pop
out
aam
sbb
fnsave
pop
clc
repz
fwait
(bad)
jne
jo
xchg
stos
or
(bad)
ret
addr16
cli
inc
sub
and
and
push
sub
mov
fstp
inc
inc
jmp
aam
ja
hlt
and
lea
sub
mov
or
movs
mov
mov
xor
mov
add
aas
push
test
rcl
addr16
jp
pop
sbb
es
pop
fwait
dec
adc
jne
xor
sub
dec
or
mov
retf
jns
out
inc
adc
repz
push
stc
jmp
lods
inc
mov
mov
push
sub
aam
cmp
ret
outs
fild
int3
mov
jge
les
add
aad
repz
fisttp
movs
popf
in
js
mov
push
and
add
sub
fwait
cmp
ss
mov
or
adc
js
std
sub
scas
sub
sbb
xor
aaa
arpl
retf
cmp
nop
sub
(bad)
(bad)
jb
mov
jmp
iret
pop
es
pushf
(bad)
push
(bad)
sub
repnz
rol
les
ss
inc
ins
lods
cmp
je
pop
mov
test
stos
mov
ret
and
sub
jbe
adc
cmc
sub
push
pushaw
popa
sub
mov
enter
lods
dec
rcl
lahf
rcl
mov
imul
xor
dec
test
adc
shr
iret
rcl
and
(bad)
mov
xor
xor
lea
cmp
cli
and
mov
cmp
mov
cs
fbstp
jmp
jmp
imul
push
in
ja
xchg
pop
cld
jg
stos
sahf
or
xchg
ror
mov
xchg
ja
enter
xor
cmp
lock
loope
ss
dec
ror
dec
add
(bad)
mov
sbb
sub
mov
std
jmp
and
xchg
cmps
outs
and
jns
(bad)
xor
and
adc
adc
cmp
es
inc
and
cdq
add
fdiv
cmp
inc
xchg
mov
sub
les
inc
pop
and
adc
popf
pop
rol
test
lea
int
nop
gs
or
in
cmp
ror
stos
das
mov
stc
or
movs
outs
push
clc
ret
test
cwde
cli
popa
push
call
sahf
popf
mov
movs
adc
dec
xchg
jo
out
pop
jl
leave
and
xchg
aam
lock
cwde
fbld
jg
lods
mov
push
mov
mov
sbb
jp
sub
icebp
daa
loop
movs
ins
leave
mov
mov
fld
jns
mov
push
xor
das
cmc
outs
dec
std
push
ins
xchg
inc
addr16
fcomp
lds
push
mov
sub
push
out
adc
sub
xor
(bad)
sar
mov
cwde
ret
adc
add
xchg
fdivr
stos
scas
movs
aam
nop
cli
and
outs
pop
mov
lock
pop
jmp
(bad)
jmp
int
psllq
xchg
mov
dec
je
or
jmp
lahf
or
inc
bound
aas
cmp
mov
lock
shl
daa
fwait
mov
sar
push
jp
mov
sbb
adc
out
push
push
scas
call
jge
movs
pop
jns
call
or
hlt
mov
xor
mov
aam
les
cmc
sbb
xor
sbb
xchg
xor
(bad)
out
int
ficomp
ins
cli
fimul
hlt
stos
add
push
dec
adc
pushf
xchg
cmps
pop
push
stos
enter
add
in
leave
outs
jmp
push
xchg
and
inc
les
out
sub
js
cmps
or
lahf
(bad)
or
mov
rol
stos
jb
xchg
(bad)
sahf
in
nop
or
cli
or
in
or
xor
pop
cmp
cmp
add
vpsraw
mov
add
mov
adc
xchg
jmp
scas
fild
sbb
mov
or
enter
pop
mov
cs
mov
push
cmp
gs
xchg
loopne
dec
dec
cmp
push
xor
in
pop
mov
mov
inc
rcr
sub
shl
sahf
pop
and
lock
ins
dec
xor
imul
or
or
in
div
add
fcmovnbe
push
out
faddp
mov
cmp
dec
mov
into
sub
lds
xchg
mov
repz
in
mov
and
pop
sbb
jle
add
jns
cmp
ins
and
add
add
xor
pop
test
dec
xchg
xchg
push
sub
inc
add
call
mov
jb
xor
imul
sub
adc
sbb
xor
in
inc
sub
jo
mov
push
je
mov
mov
retf
jnp
mov
push
sub
gs
sub
outs
adc
jge
or
retf
imul
inc
call
mov
cmp
xor
ins
call
sub
pop
fiadd
ficomp
adc
addr16
xor
pop
sub
test
add
fs
add
push
add
ss
pop
mov
hlt
imul
inc
fild
xor
jmp
imul
ins
jecxz
adc
fisttp
mov
adc
enter
and
xor
push
stc
sti
or
or
adc
jns
movs
lods
mov
xchg
lods
cmps
mov
scas
test
sbb
fild
cmps
lock
lods
enter
inc
add
leave
and
xchg
retf
adc
test
scas
imul
or
bound
cmps
daa
fldenv
jge
rep
jl
das
dec
sbb
jb
lock
pop
mov
sbb
mov
adc
fiadd
mov
sar
(bad)
mov
add
jno
int
shr
clc
rcl
and
push
pop
mov
loope
mov
fmul
clc
mov
push
or
scas
add
push
mov
cmp
jnp
cmp
fisttp
movs
mov
inc
xchg
mov
fsubr
pop
loopne
int3
movs
xor
pop
shl
pop
pushf
cmp
(bad)
or
loope
pop
dec
lea
mov
cld
(bad)
fiadd
scas
and
ret
fistp
rcl
fabs
cmp
scas
add
mov
(bad)
loop
sbb
push
aaa
test
mov
sub
mov
pushf
jns
sbb
clc
inc
cmc
inc
cmp
out
jo
cdq
fs
pushf
sar
lock
das
inc
ror
ficomp
xlat
mov
pop
lods
inc
inc
dec
ret
sub
fist
pop
sub
push
and
mov
pop
loope
mov
mov
mov
dec
jno
sbb
or
or
dec
cmp
xor
aam
pop
out
add
pop
pop
psrlw
mov
sbb
mov
pop
adc
add
and
in
test
or
xchg
inc
pop
mov
and
shr
pop
cwde
aas
xor
push
jle
pop
retf
stos
inc
mov
clc
mov
cmps
cmps
aam
hlt
lds
xchg
mov
mov
leave
test
fwait
into
and
repz
push
xor
(bad)
fcmovb
pushf
jecxz
out
and
fcomp
mov
dec
sbb
lea
jbe
and
pop
mov
js
ja
rol
pop
leave
adc
out
pop
ret
mov
adc
in
imul
clc
cld
xchg
sub
inc
leave
aas
fidivr
call
push
inc
int
sbb
test
std
jmp
push
sbb
cmp
cmp
inc
mov
and
sbb
lods
cmp
jmp
inc
aaa
retf
hlt
lock
jmp
pop
sbb
push
pop
mov
call
mov
inc
loopne
mov
shl
jmp
fsub
in
in
jle
enter
mov
and
and
add
das
pop
jb
out
adc
movntq
out
adc
mov
dec
push
mov
or
out
or
dec
ins
mov
shl
sbb
je
fldcw
fs
push
movs
mov
cmp
mov
cmp
xchg
push
in
(bad)
js
mov
xchg
jmp
xchg
clc
or
sbb
push
mov
in
inc
idiv
push
xor
cmp
stc
clc
xchg
popf
(bad)
add
shl
repnz
inc
mov
imul
repz
outs
shr
fwait
mul
cmps
movs
in
inc
push
movs
aam
jb
test
inc
retf
mov
in
mov
mov
xor
aam
lods
arpl
mov
in
inc
shl
pusha
scas
(bad)
add
pop
ret
mov
(bad)
fld
mov
fild
int3
cwde
push
shr
mov
fldenv
mov
ins
sti
sub
arpl
(bad)
cmp
sbb
mov
mov
sub
popa
mov
xchg
inc
or
sub
xor
cmps
enter
lods
sbb
push
mov
inc
jg
ja
adc
jle
sbb
arpl
mov
xor
jo
dec
sub
js
lods
jg
cli
dec
or
test
add
mov
fidivr
out
cld
mov
or
aaa
push
cmp
jg
and
std
sahf
lea
dec
mov
jmp
or
fmul
cld
call
cmp
mov
aam
popa
sbb
sub
sub
mov
dec
aaa
clc
or
fistp
push
mov
sar
adc
add
xchg
pop
in
mov
popa
dec
sub
fs
je
iret
push
cld
inc
test
loop
xlat
sti
(bad)
pushf
fidiv
sub
out
je
leave
int3
jl
sub
fs
(bad)
dec
rcr
jle
xlat
inc
add
scas
push
push
mov
in
fnstsw
bound
add
lods
loopne
test
cmp
stos
ins
fnsave
ds
test
inc
mov
cmp
sub
and
mov
xchg
xchg
shl
adc
inc
das
retw
push
ret
ds
xlat
xlat
sub
enter
or
push
stc
frstor
jl
daa
push
icebp
xchg
pop
fcomp
repnz
jae
and
mov
repz
or
adc
test
call
pop
test
lds
sub
pop
push
je
xchg
mov
add
pop
mov
ret
push
fcom
shl
div
or
dec
fisubr
or
stos
xor
inc
mov
sbb
in
popa
pop
dec
push
pusha
pop
pop
or
dec
cmp
jmp
or
mov
jb
adc
fst
jae
out
sti
mov
test
enter
inc
dec
fisub
stos
pop
cmp
rcl
cmp
xlat
pop
aad
cmp
mov
lods
or
push
pop
mov
mov
enter
imul
das
or
outs
into
push
mov
xor
pop
pop
adc
das
xor
or
cld
cmps
pusha
loopne
je
sbb
inc
dec
(bad)
daa
outs
xchg
jge
push
push
sbb
xchg
outs
call
cmc
out
pop
and
or
(bad)
pop
push
imul
dec
add
dec
adc
inc
stc
cwde
loop
mov
push
cmp
rcr
mov
sahf
lds
loope
sub
jg
scas
cmps
sahf
jle
je
stos
inc
(bad)
std
test
xchg
dec
imul
xchg
scas
arpl
and
shl
jmp
and
out
popf
das
and
imul
pop
icebp
add
jmp
xchg
stos
movs
jnp
push
lods
loop
ror
push
test
push
and
scas
lods
lock
stos
xchg
dec
inc
movs
outs
dec
lock
out
loope
dec
fs
jp
aam
pop
inc
fild
dec
mov
inc
pusha
pop
jle
xchg
xor
mov
xchg
mov
test
inc
push
gs
xchg
or
loop
addr16
xchg
xor
mov
retf
mov
(bad)
inc
mov
dec
mov
hlt
xlat
imul
push
outs
mov
(bad)
jmp
pop
xor
sbb
aad
xor
int
std
mov
mov
mov
or
sub
xor
pushf
xor
push
jg
sub
rcl
inc
fdivr
jnp
lds
push
xchg
lods
imul
dec
cli
ret
xor
add
mov
sbb
inc
in
adc
lea
into
(bad)
xchg
lods
scas
or
sub
xor
nop
and
mov
out
inc
daa
jle
icebp
push
cli
ffree
add
sub
add
mov
push
mov
or
stos
loopne
inc
mov
(bad)
fdiv
lods
cmps
fld
push
imul
lods
jno
test
xor
jae
push
push
scas
ror
sbb
push
in
sbb
out
shl
sub
xchg
mov
arpl
(bad)
xlat
out
pusha
push
arpl
push
aaa
jg
imul
jae
inc
test
push
jne
rcr
inc
push
add
jne
inc
mov
fidiv
pop
pop
push
in
mov
or
dec
popf
xchg
sar
xchg
in
shr
jmp
xchg
push
cmp
and
add
mov
xchg
or
pusha
pop
push
retf
mov
retf
jmp
in
and
loop
sub
ret
jmp
jmp
cmp
mov
inc
cld
jp
or
inc
repnz
adc
test
loope
pop
adc
pusha
cdq
pop
fld
or
out
fldcw
mov
mov
inc
cmps
imul
je
push
pushf
jae
sbb
call
add
outs
or
pop
xor
cmp
push
and
leave
fwait
das
add
test
sar
imul
pop
cmp
bound
cmp
adc
adc
xor
ror
adc
neg
or
imul
xor
stc
jae
pop
int
or
fidivr
xchg
push
outs
adc
mov
cmp
in
or
mov
sub
fst
push
inc
ss
inc
(bad)
pop
mov
cld
xor
cmp
jmp
mov
add
cmp
sub
xchg
xor
inc
lock
adc
push
out
add
fldenv
pop
hlt
cld
and
mov
jle
jmp
inc
and
mov
pop
scas
out
and
adc
dec
ins
scas
aam
into
push
fst
sbb
inc
sub
jae
js
pop
int3
and
bound
sbb
dec
shl
loop
push
adc
mov
popf
enter
mov
std
je
ds
sbb
xlat
lods
sbb
and
sbb
add
idiv
mov
stc
pushf
retf
rol
mov
imul
xchg
mov
popa
fwait
mov
cmp
xchg
idiv
cmc
popf
mov
aas
push
(bad)
clc
push
lock
fidivr
sub
pop
xchg
inc
ret
sbb
xlat
stos
jo
inc
ffreep
loop
and
xor
push
ret
lea
jo
and
adc
push
cs
adc
cmp
push
jecxz
xchg
inc
popa
pop
retf
adc
mov
out
mov
jno
mov
sub
add
sub
(bad)
xor
test
aaa
mov
in
and
fucomp
adc
xchg
xchg
loop
or
mov
fs
or
lock
loopne
lods
xor
call
lea
loope
push
sub
sub
je
jmp
jmp
jge
sub
pop
push
rol
out
lods
jns
xchg
or
dec
loope
sti
mov
or
mov
outs
aam
fdiv
and
std
loop
push
push
cmp
retf
cmp
popf
xchg
fild
(bad)
fadd
add
xchg
push
movs
fidivr
mov
sbb
push
lods
std
cmp
push
mov
aas
sbb
int3
out
outs
dec
(bad)
(bad)
scas
out
jns
aaa
outs
inc
or
cmp
sbb
loop
pop
mov
xor
sbb
and
lea
cmps
es
nop
cmp
or
cmovl
aam
stos
cmp
arpl
push
mov
mov
sbb
fist
pop
xor
(bad)
mov
aad
and
xor
cmps
imul
push
lea
cmp
into
sti
mov
es
inc
push
(bad)
aaa
or
aas
cmp
jl
and
xchg
sub
mov
xchg
retf
lahf
fbstp
cld
mov
cmp
jo
dec
ins
shl
ret
xchg
fs
xchg
js
ret
inc
push
ret
(bad)
jg
loope
call
enter
in
jae
mov
test
and
pushf
sbb
stos
cmp
mov
test
xlat
mov
imul
cli
arpl
vmovdqa
lock
push
aad
push
movs
outs
jno
ret
push
cmp
call
xchg
xor
gs
xchg
xor
inc
pop
jle
daa
cmp
fst
push
cwde
rcr
std
out
fsub
xchg
push
into
jae
and
fiadd
mov
dec
inc
xchg
xor
fist
popf
mov
cli
pushf
js
mov
fwait
ins
adc
add
or
mov
rcr
mov
outs
sbb
lock
adc
pop
push
(bad)
clc
sub
(bad)
(bad)
pop
cli
je
mov
and
fldenv
sub
or
aaa
imul
leave
dec
jb
mov
adc
pop
scas
xor
cmps
aad
aam
or
or
fadd
fiadd
xchg
jmp
ret
sub
iret
or
and
ret
test
push
mov
push
sub
aad
retf
pop
push
ret
(bad)
cmp
fcomp
ret
pop
sub
popa
daa
jle
in
xchg
pop
or
hlt
ins
mov
retf
jno
jne
stos
cdq
fcom
retf
jo
or
sub
push
(bad)
xchg
pop
sahf
fst
cli
sbb
jmp
mov
pop
pusha
sti
dec
add
test
pop
int
pop
jae
int
stos
div
adc
enter
imul
out
jo
dec
cmc
dec
int3
pop
nop
cmp
clc
xor
xlat
lods
inc
cs
pop
xchg
sbb
loopne
sbb
mov
sub
fild
xchg
push
test
mov
jne
(bad)
inc
or
dec
outs
sub
mov
sub
lods
push
mov
ins
dec
hlt
mov
sbb
sub
mov
pop
gs
mov
fstp
fs
sbb
sar
pop
cmp
test
inc
sbb
jmp
sbb
dec
pop
popf
mov
pop
lock
aas
icebp
(bad)
stos
sub
adc
add
jne
outs
pushf
ins
jp
daa
push
jno
out
or
sahf
retf
btr
icebp
xor
lea
jle
cdq
mov
cmp
or
mov
(bad)
ror
pop
fcomp
sub
mov
retf
cmp
mov
retf
hlt
xor
enter
loope
xchg
inc
mov
scas
fist
dec
jp
loope
jo
rcr
inc
shl
scas
retf
push
in
inc
es
add
ds
sbb
popa
shl
repnz
(bad)
jns
ret
ja
add
xchg
or
outs
xchg
loopne
fnstsw
retf
mov
mov
stos
dec
data16
xor
add
std
or
inc
mov
cmp
mov
hlt
push
or
push
iret
jae
mov
pusha
inc
ins
or
jle
adc
das
fisubr
jb
pop
sbb
addr16
adc
cs
rep
jbe
mov
movs
inc
mov
inc
int3
addr16
ds
iret
mov
adc
xor
lds
xchg
lds
mov
mov
idiv
or
xchg
dec
nop
mov
push
jge
adc
daa
mov
xchg
dec
lea
clc
mov
retf
sar
aas
xchg
loop
pop
mov
aad
loopne
mov
inc
test
call
jmp
in
xor
jmp
xchg
(bad)
jle
rol
cmps
xchg
mov
adc
stos
movs
cmp
or
sbb
mov
inc
push
add
push
cmp
adc
push
mov
dec
pop
icebp
imul
pop
mov
mov
mov
or
nop
add
inc
or
lahf
cmps
stos
adc
xchg
cmp
push
jmp
retf
aam
das
dec
pop
nop
push
xor
cmp
cmp
xchg
push
gs
sbb
and
xchg
in
jns
jmp
xchg
ss
nop
dec
pop
cmp
sub
lods
or
out
addr16
icebp
dec
sbb
repnz
mov
inc
mov
call
cs
loopne
and
outs
sti
cmp
popf
pop
adc
and
popa
scas
loope
popa
lods
lods
imul
pop
shr
xchg
in
outs
dec
loope
mov
xlat
mov
sar
cmp
aas
jne
fiadd
ret
test
test
inc
add
imul
or
mov
leave
and
mov
je
ja
enter
shl
scas
aad
sahf
test
fdivr
imul
sbb
(bad)
fs
mov
int3
and
push
jo
cli
push
jbe
and
pushf
dec
cli
in
inc
adc
cmp
mov
sub
and
sbb
das
mov
out
add
js
cwde
ret
scas
mov
xchg
or
aam
rol
dec
jp
xchg
sti
shl
pop
mov
test
out
jle
or
aas
push
cmp
(bad)
xchg
int3
pop
in
xchg
mov
outs
(bad)
cld
aas
mov
adc
imul
std
add
xchg
outs
mov
xchg
xchg
sbb
push
repz
in
xchg
icebp
sub
and
in
pop
rcr
xchg
and
arpl
bound
pop
cmp
and
ffreep
mov
jo
inc
inc
cmp
in
pop
sahf
add
jmp
inc
pusha
aam
mov
xchg
ret
aaa
es
pop
pop
sbb
mov
lds
xchg
aad
icebp
dec
shl
stc
xchg
std
pop
(bad)
in
push
inc
enter
xchg
push
push
mov
lods
push
mov
cmc
adc
mov
std
add
imul
xor
test
mov
xor
test
sbb
add
sar
xchg
data16
dec
jb
repz
mov
xchg
sti
adc
xchg
sbb
(bad)
push
movs
enter
xchg
pop
aas
(bad)
rcr
mov
in
xchg
cmp
cmp
add
loop
jecxz
or
repz
push
jg
xor
dec
call
in
ins
dec
pop
xchg
push
in
imul
out
daa
mov
lods
xor
inc
arpl
(bad)
cdq
push
out
sub
jle
bound
test
movs
vmwrite
movs
inc
pop
or
stos
ror
retf
jo
dec
jbe
(bad)
adc
or
inc
fnstcw
iret
sbb
popf
sbb
xchg
xor
inc
cmp
jae
pop
icebp
adc
inc
pop
aam
pop
jo
in
cld
mov
lea
cmc
mov
sub
or
mov
sbb
mov
push
out
cmp
mov
cld
icebp
cmp
add
mov
and
jbe
pop
xchg
ds
jb
and
sar
std
popf
aam
je
pop
push
sahf
xchg
retf
jne
les
into
nop
push
pop
pop
in
xor
ins
jae
mov
xor
cli
int
jbe
xor
ret
mov
push
dec
adc
jno
jmp
push
or
popf
xchg
push
push
jmp
or
not
loope
pop
cwde
add
mov
sub
aas
xor
jmp
xchg
sub
enter
xchg
mov
ror
fwait
add
ret
fild
sbb
jnp
mov
mov
mov
push
rcr
daa
dec
jnp
mov
data16
in
xchg
dec
pop
mov
cmp
and
inc
in
adc
ds
xchg
pop
dec
pop
adc
sbb
fcmovnbe
test
mov
ret
cmc
ror
xor
pop
mov
add
jne
int
fld
sub
outs
push
mov
push
mov
push
out
sbb
pop
mov
and
sub
sbb
dec
dec
retf
push
fsubr
pop
mov
jecxz
cmp
movs
sub
mov
cmp
out
and
ss
int
into
dec
sub
push
call
mov
xor
popa
lods
jp
jge
sbb
cmp
cmp
sub
cli
loopne
ret
push
iret
retf
push
mov
popf
repnz
rol
inc
loope
lea
scas
push
test
jmp
or
mov
pop
mov
stos
ret
sub
ret
xchg
ins
adc
xchg
arpl
pusha
addr16
xor
jo
fcmove
or
int3
stos
dec
out
lods
das
retf
jb
fnsave
adc
cld
push
push
out
xor
jns
sub
repnz
pop
xchg
fcmovnbe
shl
or
movs
dec
in
mov
push
or
pop
out
inc
call
mov
add
push
or
adc
mov
(bad)
jmp
stos
(bad)
and
test
cmp
outs
mov
dec
mov
sub
sbb
rol
push
cmp
bound
inc
push
fmul
xor
push
pop
xchg
xchg
inc
add
pop
sti
sub
adc
stc
jle
outs
and
push
aad
push
sbb
adc
lea
test
cmps
jle
adc
lods
lea
inc
push
sbb
mov
ja
sub
sub
inc
out
xor
xor
jl
and
cmp
movs
mov
je
jge
mov
lods
addr16
aam
movs
mov
aas
std
cmp
xchg
add
mov
out
and
push
sbb
adc
rol
movs
fld
test
rcr
xor
lock
mov
out
shl
pushf
mov
dec
or
imul
pop
add
or
jmp
jg
mov
into
mov
pop
hlt
mov
(bad)
in
xlat
fisubr
add
pushf
sub
mov
mov
pop
inc
mov
fisub
gs
ins
popf
out
cmp
mov
imul
mov
enter
ret
xor
push
rcl
mov
add
mov
test
sahf
xor
ds
jmp
mov
xor
mov
mov
adc
into
inc
sub
inc
mov
retf
loopne
xor
aas
push
popf
cmp
outs
or
xchg
out
jo
frstor
cmp
rcr
std
pop
pop
cdq
inc
lods
cmp
fs
adc
pop
sbb
or
sahf
pop
fisttp
fild
and
xor
test
push
mov
push
loop
pop
xor
fistp
leave
push
(bad)
inc
jne
call
pop
sub
mov
add
mov
xchg
cmp
es
jle
jmp
sbb
push
mov
ja
add
inc
mov
mov
je
shl
sub
lods
push
iret
aam
and
inc
fistp
mov
mov
test
icebp
xchg
fcomp
jbe
std
repz
in
mov
lahf
add
das
jbe
or
jmp
mov
dec
sbb
xchg
cld
int
sbb
jl
and
cs
or
pop
or
movs
daa
push
pop
into
and
pop
add
push
data16
jmp
add
inc
push
push
and
scas
movs
or
sub
rol
fbstp
xchg
adc
jmp
scas
or
sbb
jmp
cmp
data16
mov
popf
adc
(bad)
or
jmp
and
ror
and
cmp
das
inc
imul
xor
pop
cdq
out
cmp
jno
mov
xchg
lods
inc
mov
mov
les
sub
adc
mov
leave
repz
push
fidiv
clc
pusha
sar
cmp
aam
(bad)
sbb
inc
dec
ss
dec
dec
mov
stos
aaa
dec
and
iret
mov
enter
stos
call
cli
call
adc
popa
jae
push
and
sbb
shl
fadd
or
and
sbb
pop
pop
pop
cmps
adc
loope
jnp
or
xlat
popf
jp
cmc
jle
scas
jno
(bad)
sub
(bad)
mov
imul
adc
push
add
outs
push
imul
pop
xor
push
mov
popf
lea
adc
inc
xchg
jge
sub
inc
pop
scas
(bad)
fiadd
retf
or
mov
inc
imul
loope
test
cwde
sub
test
jne
jne
xchg
cwde
movs
cld
mov
fldenv
pop
xchg
jge
aad
mov
je
outs
xor
pop
daa
xor
and
jg
sub
scas
lds
mov
and
pop
outs
mov
mov
push
in
and
sbb
adc
jmp
repnz
xor
mov
mov
mov
aas
rol
pop
fidiv
mov
xor
test
dec
pop
pop
imul
xchg
nop
(bad)
adc
add
jno
adc
je
es
or
cdq
sub
mov
sahf
xchg
gs
cmovno
test
das
add
xchg
mov
ja
adc
cmps
push
icebp
pop
cmp
inc
(bad)
cld
mov
bound
out
std
add
adc
and
mov
mov
push
xchg
push
stos
pop
jge
xor
inc
sar
adc
jo
xor
xor
push
fadd
jne
bound
out
dec
sub
and
adc
dec
xchg
stos
movs
pushf
and
pusha
mov
cmp
(bad)
in
push
pop
fcom
sub
int
data16
retf
xor
addr16
lods
in
(bad)
pop
cmps
es
and
(bad)
lock
fst
pop
fwait
pop
add
inc
push
push
test
test
xchg
(bad)
fmul
dec
or
lea
(bad)
jmp
gs
repz
lock
jge
inc
inc
jmp
stc
sbb
push
es
jg
lock
into
out
xor
sbb
outs
(bad)
jo
adc
pop
popa
pusha
xchg
jbe
and
inc
inc
sub
imul
mov
jns
push
popa
loope
add
push
ret
adc
push
dec
fdivr
jae
ret
jmp
xchg
scas
push
in
dec
mov
cwde
arpl
gs
loop
and
xchg
adc
sbb
inc
data16
mov
lods
add
shl
les
scas
inc
(bad)
dec
sub
sbb
lods
ins
push
inc
fcmovnbe
das
dec
dec
ins
(bad)
scas
mov
sub
(bad)
in
fstp
xchg
arpl
jmp
cmp
xor
test
dec
fcomp
jg
movs
push
add
fsubr
in
cmp
mov
loopne
leave
sub
test
in
dec
pop
mov
xor
lock
gs
sbb
int3
outs
jne
imul
(bad)
pop
jge
pushf
inc
mov
fdiv
enter
iret
cmp
cmp
mov
inc
cmp
fs
and
(bad)
fisttp
push
cmps
add
cmps
xor
mov
cld
iret
mov
data16
mov
fs
in
pusha
lods
fbld
inc
cli
ror
retf
pusha
xor
xchg
ins
cld
or
daa
daa
pop
sub
into
mov
je
lods
into
mov
fwait
push
adc
shl
lods
outs
test
ins
push
dec
dec
mov
mov
out
popf
pop
push
imul
mov
xor
lods
and
add
fnsave
test
cli
retf
jo
sbb
pop
add
mov
ins
add
addr16
mov
jb
xchg
fcmovu
(bad)
pop
jecxz
mov
stos
in
in
xchg
dec
aam
scas
mov
cmp
pand
mov
inc
xchg
mov
add
out
dec
sbb
cdq
inc
loopne
pop
stc
in
ds
sub
repz
out
std
pop
jp
test
sbb
loop
shl
loopne
mov
mov
out
fld
mov
push
cmp
pop
dec
push
pop
cdq
popf
jp
or
ds
(bad)
dec
pop
ss
jb
jl
jmp
mov
sbb
xor
(bad)
push
pop
popa
cmp
js
mov
jl
adc
(bad)
mov
addr16
leave
outs
pop
cli
mov
pop
call
cdq
sbb
or
shl
arpl
jae
call
jecxz
jl
shl
cs
pushf
mov
stc
xor
mov
cli
addr16
in
out
push
aam
sbb
cmp
ss
mov
popa
xor
add
ret
and
push
sahf
inc
imul
enter
xchg
je
sbb
adc
loopne
cmp
add
imul
mov
mov
stos
sti
xchg
lea
int
lods
je
mov
adc
popf
jg
js
xchg
ret
sub
adc
xchg
repnz
aad
call
pop
ret
in
fst
sub
shl
pop
arpl
stc
es
mov
in
sub
jg
cmp
jo
test
out
xchg
xchg
ret
add
fldcw
cld
addr16
add
cmc
add
jo
dec
xchg
cmp
lahf
adc
lock
ret
aaa
leave
out
mov
dec
fidiv
jle
imul
ficomp
pop
mov
pop
push
mov
sbb
pop
pop
leave
adc
sahf
cwde
push
(bad)
fcom
dec
aam
repz
push
adc
inc
add
dec
loop
xchg
and
lock
sub
pusha
jno
dec
push
das
mov
mov
dec
jle
ret
(bad)
out
cwde
fild
or
mov
outs
cmps
mov
xor
adc
or
add
pop
nop
inc
loope
cmp
ds
outs
jbe
rcr
aam
fyl2x
int
inc
jo
cmp
jmp
xchg
pushf
push
sbb
mov
xchg
ret
nop
fst
icebp
and
adc
scas
bound
ss
xchg
jecxz
inc
jg
pop
mov
mov
dec
in
outs
push
mov
inc
dec
sbb
adc
ins
xchg
sub
mov
inc
adc
push
mov
push
icebp
mov
add
repz
int3
adc
xor
mov
cmp
fild
xchg
sub
arpl
lds
cld
in
add
lahf
test
repnz
push
out
pop
nop
xchg
cmp
test
ror
int
add
pop
(bad)
rol
int
push
or
es
mov
icebp
mov
movs
out
inc
push
pushf
retf
test
ja
ds
inc
inc
inc
test
sti
in
shl
imul
pop
pop
or
aaa
in
popa
imul
xchg
push
and
jmp
sbb
retf
das
push
pop
push
out
dec
pop
imul
cmp
xor
(bad)
xor
cmp
push
shl
aam
cmp
mov
cmps
mov
leave
mov
sub
pushf
cmp
(bad)
cmp
leave
(bad)
cmp
adc
add
fsub
pusha
add
mov
je
arpl
pop
fiadd
xchg
add
mov
fisttp
addr16
in
sub
inc
jmp
sbb
sub
loopne
mov
jle
and
aas
aaa
in
push
fucomip
mov
jbe
xor
pop
es
adc
pop
shl
scas
in
call
int3
adc
(bad)
jb
in
sbb
cmp
jecxz
mov
pop
bound
adc
adc
das
sub
pop
movs
cmp
add
aam
arpl
add
out
and
push
out
xchg
mov
rol
and
and
sbb
cmp
loop
cld
jne
pop
jmp
dec
push
pop
inc
inc
out
add
dec
sub
sbb
aaa
mov
lea
cs
jno
int3
leave
rcr
adc
fcomp
into
sahf
xor
hlt
xchg
mov
or
mov
icebp
cwde
lahf
retf
push
and
adc
in
pusha
lods
pop
ins
xchg
jp
test
sbb
pushf
imul
push
shl
jns
icebp
mov
mov
out
sub
(bad)
inc
jns
inc
cwde
call
rol
mov
fisttp
jge
call
sbb
jne
jb
shl
cmp
xor
pop
pop
sti
add
popf
int3
xor
dec
clc
push
ds
in
or
int3
lods
sbb
xchg
jp
dec
aam
pop
nop
arpl
dec
rcr
(bad)
adc
push
ret
aam
jge
jbe
inc
sbb
outs
test
sbb
xor
in
(bad)
out
pop
jl
cdq
(bad)
ds
adc
mov
push
xchg
jnp
jns
cmp
dec
jbe
fild
inc
into
xchg
mov
dec
xchg
inc
mov
std
fnstcw
out
cmps
lahf
dec
popf
fdivr
not
and
fdiv
jns
(bad)
loopne
pop
cmp
xchg
jp
jmp
xor
movs
test
pop
mov
test
pop
in
pop
add
push
lds
xchg
(bad)
jle
jno
or
leave
in
pop
fcomi
xor
fld
in
cmp
mov
dec
cmp
jle
cld
(bad)
(bad)
xlat
loop
fidivr
std
pop
xor
dec
mov
fild
and
test
cdq
sub
push
mov
cs
dec
xor
mov
in
loopne
outs
ror
add
push
sub
sub
inc
mov
es
cmp
daa
(bad)
pop
fsubrp
repz
stos
cmp
ficomp
mov
fld
pop
mov
stos
psrlq
test
mov
or
(bad)
(bad)
(bad)
in
sar
in
lock
add
jns
pop
retf
outs
mov
enter
mov
inc
out
les
inc
pop
(bad)
dec
jp
(bad)
mov
lock
push
lods
push
jmp
mov
inc
mov
cmp
retf
and
push
gs
pop
xor
arpl
movhps
in
ins
push
jg
mov
das
scas
jge
fadd
(bad)
scas
mov
ins
mov
pop
xlat
sbb
xor
ins
into
gs
adc
leave
mov
fcom
add
ins
mov
fild
cmps
sub
out
(bad)
or
lods
pop
hlt
(bad)
stos
inc
ss
push
or
into
cmps
cmp
gs
loop
movs
idiv
push
mov
imul
or
loope
mov
(bad)
neg
fmul
lea
iret
enter
xor
out
xchg
mov
cwde
movs
mov
jnp
jp
adc
sbb
pop
cmp
sar
inc
jge
ds
add
and
ror
push
shl
ret
add
icebp
gs
mov
outs
mov
test
push
mov
daa
ucomiss
leave
ja
mov
inc
adc
test
pushf
or
mov
mov
cs
ficom
clc
sbb
inc
sahf
mov
inc
retf
mov
lock
sub
mov
xchg
test
es
enter
adc
xchg
jmp
xor
add
mov
ret
into
sub
jno
mov
mov
scas
xor
adc
inc
jo
push
adc
dec
mov
pop
sar
mov
cmp
cli
stos
inc
test
stos
(bad)
nop
das
sbb
enter
aad
cmp
pop
stos
test
mov
imul
shr
jle
pop
imul
dec
clc
sar
jmp
aas
sbb
jb
xchg
sbb
xor
lods
(bad)
lock
inc
jp
cwde
hlt
shl
dec
outs
dec
into
add
test
xor
sub
inc
addr16
add
sub
(bad)
pop
fldcw
arpl
dec
push
cmps
dec
out
cmp
xchg
hlt
mov
in
in
jbe
adc
or
je
mov
mov
sub
xor
push
add
push
call
inc
sar
inc
mov
jns
test
jno
loopne
pop
dec
and
fs
pop
cmp
retf
jmp
jne
(bad)
das
mov
ins
test
jle
sbb
fisttp
aad
sub
adc
pop
lock
out
and
push
or
inc
or
repz
pop
add
push
push
test
movs
ins
sbb
pop
sbb
mov
lods
(bad)
push
mov
call
inc
xor
leave
cmp
jmp
pop
in
sub
push
stos
sar
stos
cmps
mov
(bad)
shl
cli
inc
int
fwait
jns
adc
xchg
aad
data16
xchg
inc
jmp
jnp
adc
fsubr
push
xor
fdivr
fs
inc
inc
mov
dec
xchg
sbb
fldenv
sbb
and
dec
or
mov
loop
adc
xor
pop
sbb
daa
(bad)
fiadd
fwait
lahf
add
test
jbe
xchg
jg
movs
clc
and
pop
cld
lods
out
add
pop
cmp
push
int
ror
aam
pop
in
push
imul
sbb
jae
arpl
nop
inc
jge
jp
stos
popf
push
pop
jecxz
cmps
mov
and
sub
aad
pop
leave
outs
sbb
and
push
lods
adc
fs
push
xor
xchg
pop
adc
pop
lods
sub
inc
mov
mov
xchg
ins
jbe
test
mov
push
out
xchg
mov
push
xchg
mov
pushf
cmp
daa
fucom
addr16
cmps
js
shr
mov
aas
mov
and
in
rol
xor
adc
pop
imul
cmc
clc
into
xchg
(bad)
lahf
xchg
fidiv
stos
les
(bad)
cmp
in
ror
xor
dec
push
xchg
in
das
hlt
mov
test
mov
retf
out
loopne
jmp
movs
dec
add
lods
jns
js
mov
scas
push
cmp
repnz
adc
jle
aaa
dec
fidiv
sub
and
mov
or
sub
and
pop
int3
int3
lods
sbb
xlat
jnp
mov
pop
popf
addr16
xchg
push
xor
inc
daa
test
aad
mov
sbb
cmps
nop
outs
aam
jnp
lods
mov
ds
or
gs
xor
xchg
call
scas
inc
popf
xchg
mov
mov
(bad)
neg
stos
or
stos
ret
pop
in
aas
test
push
mov
mov
jae
pop
mov
cmc
and
jb
mov
mov
call
in
mov
inc
rcl
das
fldcw
ins
leave
jg
mov
aad
pop
push
imul
(bad)
repz
aad
scas
sbb
ss
les
das
mov
inc
ficom
cmps
neg
mov
test
ins
loopne
xchg
cld
and
cmp
or
dec
cmps
lds
adc
sub
xor
sub
sti
cmp
mov
lahf
and
jl
mov
inc
lods
jl
or
pop
sbb
mov
mov
int3
sbb
aad
fs
push
lea
push
fwait
test
xor
bound
enter
mov
pop
loop
in
mov
pop
inc
mov
sbb
sar
xor
out
cmp
sub
or
fs
and
fucom
addr16
dec
jecxz
repz
jmp
add
mov
push
stc
(bad)
test
leave
adc
mov
pop
push
scas
imul
mov
xlat
das
inc
jg
mov
pop
sub
xor
xor
or
pop
sbb
xor
jmp
jge
movs
push
xchg
sub
xchg
outs
jbe
mov
fild
xchg
push
enter
sbb
dec
and
mov
call
fs
fcomi
pop
push
sub
pop
and
aas
push
mov
sub
dec
mov
in
outs
nop
mov
mov
aas
mov
sub
test
cld
or
cs
mov
pushf
lds
sub
jge
hlt
add
cmp
push
inc
push
mov
fisub
arpl
out
jns
test
inc
or
retf
sub
test
outs
fadd
xchg
xchg
daa
cwde
lds
or
icebp
sbb
aaa
imul
scas
imul
aad
retf
(bad)
jns
mov
mov
sbb
cmps
cmp
xchg
sub
outs
push
test
fwait
dec
or
jle
mov
cs
test
push
aam
pop
aaa
cdq
dec
lock
pop
int3
push
push
mov
daa
or
js
inc
pop
or
add
adc
lock
xchg
inc
cmc
cmp
inc
xor
out
xadd
pop
mov
pop
push
repz
sbb
pop
xor
mov
shl
loopne
add
xlat
push
pop
lea
(bad)
jns
out
mov
jne
xor
adc
cmp
mov
xchg
addr16
cmp
retf
pop
mov
aaa
cs
fisub
pushf
fild
psrad
mov
xchg
xchg
out
cmp
adc
(bad)
sti
jns
leave
xor
pop
ins
or
sbb
lock
or
push
xchg
das
scas
in
sub
jne
sbb
scas
mov
cmp
push
rcl
es
pop
xchg
mov
pop
ja
hlt
jne
push
cmp
cmps
jo
jns
cld
xlat
je
call
mov
cmp
test
movs
mov
test
push
cmp
adc
repnz
mov
jl
icebp
fdivr
mov
or
jno
call
cmps
loope
(bad)
mov
pop
clc
xlat
and
adc
js
adc
cld
dec
fisubr
jns
cmp
movs
data16
aam
mov
mov
lea
sbb
aam
mov
dec
inc
in
fs
pop
adc
inc
loope
cmc
test
sar
(bad)
jge
leave
lahf
and
sti
cmp
popa
test
out
sar
mov
ret
pop
jmp
sti
inc
call
xchg
and
imul
lock
mov
inc
pop
mov
daa
(bad)
jmp
mov
pop
mov
xchg
loope
movups
movs
push
jl
sub
shl
sub
imul
(bad)
call
setns
fs
scas
neg
push
inc
cld
cmp
loop
mov
sbb
out
add
xor
(bad)
jmp
pop
out
ins
pop
daa
arpl
mov
add
in
js
adc
call
add
rcr
xchg
pop
and
hlt
and
call
mov
cmp
sub
mov
xlat
arpl
add
outs
clc
sub
out
(bad)
xor
jge
out
mov
retf
sbb
scas
xor
xlat
mov
mov
push
aaa
in
sub
cmps
ins
sbb
rcr
ins
xchg
push
xor
jno
lods
cmps
in
or
add
(bad)
sub
xchg
fist
cmp
mov
push
mov
out
(bad)
pop
fwait
inc
mov
outs
mov
push
pop
push
pusha
rcr
mov
test
les
shr
not
or
dec
add
sub
pop
ins
xchg
and
add
sbb
lods
cmp
xor
sbb
fcmovnu
jmp
gs
mov
adc
ret
push
pushf
aad
popa
popa
ins
or
mov
retf
add
(bad)
push
or
jmp
pop
pop
adc
xor
shr
adc
push
fistp
repnz
xchg
cmp
retf
ret
add
sbb
ret
sbb
push
mov
pop
adc
into
sub
(bad)
nop
imul
dec
mov
stos
sub
lea
in
cmp
mov
sub
ret
jge
nop
loope
push
cmps
adc
cmp
stc
mov
cs
test
test
xor
cmps
xor
add
xor
sbb
aad
enter
xchg
xor
out
mov
adc
mov
gs
pop
pop
inc
(bad)
cld
jp
dec
mov
push
push
out
into
rcr
lods
fcomp
jo
inc
inc
pusha
jg
loope
(bad)
fild
aas
dec
mov
stc
push
jle
mov
pop
mov
sbb
adc
cdq
add
mov
xchg
fcom
not
ficomp
(bad)
pop
cwde
mov
pop
jmp
or
clc
retf
xchg
das
sar
scas
mov
imul
adc
sub
es
and
lods
adc
mov
xor
pop
out
push
inc
arpl
sbb
(bad)
adc
pusha
push
(bad)
xchg
int3
add
out
pop
hlt
inc
loope
adc
sti
(bad)
rcr
jmp
lds
sub
pop
enter
or
mov
retf
inc
jno
(bad)
xchg
mov
sub
pop
push
push
cmp
fsub
pop
mov
rep
int3
ss
push
sbb
mov
ret
ss
in
cs
out
shl
bound
pop
jl
mov
mov
xlat
xlat
cmps
mov
push
cmp
mov
or
dec
xchg
cmp
or
dec
dec
cmp
dec
gs
sbb
retf
ret
inc
outs
sahf
aaa
into
into
adc
cdq
dec
lods
shl
repz
popa
(bad)
popa
retf
dec
in
(bad)
push
ds
in
jle
cmp
dec
push
aad
adc
jmp
js
(bad)
aas
inc
aaa
mov
push
push
cmp
cmp
cmp
inc
cs
loope
aas
addr16
mov
pop
and
fs
(bad)
xor
sahf
mov
cmps
jno
adc
repnz
adc
mov
and
std
cmp
in
shr
popa
xor
mov
or
xor
rol
mov
les
dec
fnsave
fisub
movs
fisubr
stc
adc
inc
data16
jle
idiv
jl
fidiv
sub
jg
call
lahf
push
ror
adc
xor
inc
shl
les
ss
popf
call
mov
push
cmp
out
leave
cmps
mov
and
adc
or
int
fcom
(bad)
ja
push
cmps
pop
xchg
or
pop
cdq
xchg
xchg
aad
jmp
iret
mov
and
jo
dec
add
pop
das
mov
outs
mov
cmp
jmp
lock
sub
cmp
push
test
add
adc
sbb
xchg
ds
push
aad
or
fist
xchg
mov
cmp
and
leave
or
stos
or
and
mov
xchg
inc
les
mov
jp
pop
mov
outs
or
les
out
xchg
hlt
cmp
retf
jg
aas
cmps
sub
inc
mov
fdivr
(bad)
push
add
xchg
push
add
xchg
outs
and
cwde
cld
sub
jbe
daa
or
and
sahf
inc
popa
jae
in
jb
sbb
pop
mov
jecxz
mov
loopne
mov
push
ret
les
jns
xor
outs
sbb
dec
ffree
sub
pop
idiv
nop
scas
jns
push
dec
push
jle
loop
inc
pusha
push
push
les
pop
enter
sub
hlt
lahf
cdq
push
cs
bound
stos
mov
pop
sbb
mov
or
adc
cld
icebp
pop
imul
ins
inc
pop
and
mov
js
(bad)
jge
xor
mov
xor
dec
fwait
outs
sbb
test
fwait
sbb
mov
addr16
and
mov
in
jmp
into
push
cmp
cmp
fdivr
lds
xchg
jmp
nop
call
mov
out
xor
mov
sub
les
dec
xchg
sahf
ret
xchg
xchg
out
adc
xchg
cmps
shl
(bad)
repz
cmps
rol
push
ss
xchg
call
push
lds
sbb
xchg
test
sar
adc
pop
sbb
fsubr
fwait
dec
ror
test
dec
out
mov
pop
sub
cli
mov
aaa
pop
push
(bad)
loopne
out
and
hlt
ds
xchg
jmp
sahf
jmp
test
dec
jbe
xchg
mov
(bad)
int3
addr16
ror
adc
pop
push
or
pop
repz
rcl
mov
push
and
fadd
jae
mov
out
mov
cwde
(bad)
cmp
xchg
outs
pop
cs
push
xchg
sub
clc
int3
test
mov
sbb
(bad)
aas
mov
xchg
jae
xor
mov
sbb
jl
(bad)
fisubr
and
fdiv
mov
retf
das
cmps
add
out
push
retf
stos
lock
or
je
daa
lahf
(bad)
icebp
add
jge
repz
sbb
and
sbb
add
xor
lds
daa
cmp
jmp
and
out
mov
ror
ret
fucom
shl
sub
jle
cmp
add
loop
lods
cmp
lods
out
pusha
inc
inc
pop
inc
fwait
out
add
popf
pop
mov
cli
push
mov
retf
out
inc
mov
sbb
inc
xor
push
scas
inc
addr16
aaa
push
push
sub
pop
adc
jne
mov
pop
push
inc
mov
mov
inc
mov
mov
arpl
dec
pop
retf
or
push
cwde
pop
ins
loop
dec
jo
aas
push
cmp
nop
cmp
mov
pusha
in
push
mov
aam
imul
nop
mov
sahf
mov
mov
xor
dec
cmp
sub
cmp
add
push
xchg
test
push
arpl
pop
cli
in
sti
mov
sub
or
(bad)
in
imul
mov
rol
jo
lock
gs
push
xor
dec
fcom
sub
int
pop
out
dec
dec
or
in
ins
xchg
sbb
mov
xchg
or
xor
mov
and
test
jb
int3
mov
jmp
mov
and
add
test
aaa
dec
jb
mov
mov
shl
ds
je
dec
adc
lea
jp
dec
sub
in
out
or
mov
lock
jo
in
(bad)
or
xchg
or
push
in
or
rol
inc
jp
call
ret
cs
std
jl
mov
movs
xchg
cmp
outs
fisttp
inc
add
in
ds
(bad)
movs
(bad)
xor
test
and
(bad)
call
sahf
dec
push
je
retf
jecxz
pop
mov
lahf
ja
xor
mov
loopne
dec
(bad)
pop
ret
cmps
repnz
ins
cmps
loop
retf
cmp
sub
fbld
sbb
loope
xor
imul
test
fucomip
xlat
lods
ins
scas
ja
sub
push
loop
ins
loope
mov
or
inc
punpcklbw
push
stos
sub
arpl
jmp
dec
lods
xor
int3
inc
sahf
aad
scas
push
pop
pop
(bad)
aam
movs
and
lahf
cmp
cmp
sbb
mov
lods
(bad)
cdq
mov
push
xchg
adc
mov
mov
mov
fdiv
mov
test
cwde
ja
mov
bound
jmp
(bad)
adc
outs
lods
or
jnp
jge
pop
cmc
out
(bad)
jmp
repz
add
pop
jne
sti
push
in
outs
enter
pop
fdiv
cmp
or
and
sbb
test
inc
retf
ret
fdiv
add
or
xchg
movs
xabort
fst
(bad)
test
push
dec
sets
jle
jne
mov
ins
sbb
push
frndint
cmp
mov
out
cmp
mov
xchg
shl
push
pusha
jae
sub
push
sub
icebp
ret
add
cmp
mov
pushf
adc
cmp
sahf
adc
fwait
lock
mov
mov
sub
fild
inc
fdivp
mov
fmul
cmps
push
sti
jp
xor
mov
xchg
mov
mov
hlt
xor
push
arpl
adc
mov
arpl
stos
push
sub
dec
or
punpckhdq
inc
or
or
(bad)
push
jae
test
jns
loop
xchg
push
cmps
sbb
inc
daa
mov
ins
das
dec
div
mov
pop
mov
imul
adc
inc
ror
bound
(bad)
jmp
adc
xor
pop
mov
xchg
adc
popa
add
mov
cmps
sub
fisubr
(bad)
cmp
or
push
mov
xor
dec
sbb
mov
iret
push
pop
(bad)
fldenv
scas
or
adc
inc
lock
pop
push
push
outs
call
xchg
sub
mov
cmp
out
iret
outs
(bad)
sbb
or
xchg
ret
jp
sbb
out
cmps
movs
xlat
mov
and
dec
mov
sub
dec
fs
stc
ins
leave
es
(bad)
sahf
push
popa
jg
outs
dec
jnp
aaa
outs
push
cmp
(bad)
lahf
inc
adc
pop
stos
sbb
lods
sbb
(bad)
or
adc
sbb
cld
leave
fwait
jmp
xorps
or
inc
inc
(bad)
test
sub
scas
and
xchg
add
int3
adc
popf
enter
test
mov
test
rol
adc
inc
ds
and
lods
dec
fcmovne
dec
mov
ret
pop
push
movs
add
xor
jle
add
mov
enter
das
imul
stc
in
pop
movs
mov
jne
shl
(bad)
lea
stc
jecxz
add
pusha
push
ins
fidivr
sti
mov
cmc
mov
mov
idiv
out
mov
mov
cmp
pop
cld
add
clc
jae
jns
jmp
mov
cmp
rol
leave
push
es
test
inc
aaa
push
(bad)
push
movups
out
aaa
jo
adc
adc
lods
aad
adc
rcr
ficomp
stos
(bad)
jl
jecxz
adc
aas
neg
pop
std
repz
hlt
enter
(bad)
loop
xlat
mov
inc
mov
popf
pop
pushf
sub
ret
mul
add
xor
mov
in
inc
gs
adc
mov
adc
mov
mov
inc
arpl
mov
xchg
inc
fist
add
jl
cmp
scas
daa
mov
cdq
pop
add
xchg
das
inc
out
daa
outs
xor
or
test
dec
cwde
pop
add
mov
movs
daa
jnp
adc
jecxz
into
mov
mov
retf
ins
jmp
rol
pop
addr16
cmp
movs
leave
mov
adc
lock
fwait
cmp
cmp
add
mov
cs
push
sub
or
mov
ja
gs
mov
mov
sahf
adc
mov
fsubr
jp
push
push
out
icebp
(bad)
out
fsubr
es
retf
or
mov
lea
mov
add
retf
adc
data16
cmp
imul
mov
inc
push
shl
or
data16
xchg
xor
mov
inc
push
and
jae
sbb
sbb
mov
adc
cmc
loope
and
movs
xchg
jp
push
push
mov
sub
sbb
test
pop
arpl
and
popf
or
pop
jg
pusha
push
push
xchg
xchg
loopne
inc
inc
pop
fisub
pop
shl
out
sbb
xor
sub
out
adc
out
mov
sbb
mov
cmp
push
cmp
mov
(bad)
bound
pop
inc
lods
push
lods
outs
retf
scas
mov
sbb
in
push
xchg
xor
cwde
adc
jp
(bad)
adc
inc
scas
or
xchg
data16
dec
into
or
ror
outs
jae
in
scas
mov
xor
loope
adc
mov
mov
mov
aaa
xchg
pop
mov
mov
test
dec
(bad)
xchg
jmp
cld
dec
retf
mov
stos
xchg
jae
in
in
ss
in
push
ss
rcl
push
in
pop
fdivrp
xchg
jecxz
xchg
cvttps2pi
in
or
in
sbb
xchg
cmp
jg
push
mov
in
mov
jae
mov
jmp
(bad)
out
pop
add
mov
fldcw
clc
fldenv
adc
cld
js
fs
aas
and
fxch
pop
mov
cmp
mov
sbb
sub
test
rcr
aas
pop
cs
clc
xor
jl
ficomp
(bad)
movs
inc
shl
dec
jl
pop
iret
fstp
inc
stc
cli
gs
mov
imul
mov
jle
leave
ss
popf
sub
sbb
sub
repnz
inc
xor
adc
(bad)
out
iret
ds
xchg
(bad)
in
test
test
push
aas
ins
jge
test
pusha
mov
pop
push
inc
aas
rcl
jle
sbb
scas
or
ds
mov
sub
loopne
jl
push
cmp
out
lds
ds
ins
dec
add
pop
shr
pop
popa
imul
cdq
stos
in
out
jmp
cmc
jmp
inc
and
cmc
lea
sub
imul
dec
sbb
sub
cs
iret
inc
sub
and
pop
jle
push
jo
cmp
ror
and
(bad)
(bad)
lock
sub
repz
mov
addps
mov
aas
dec
jns
cmp
and
outs
and
bound
jle
icebp
aaa
or
call
stc
push
movs
sub
jle
popa
jle
xchg
inc
fisttp
mov
adc
push
xchg
out
and
add
cmp
xor
mov
pushf
mov
scas
and
xor
iret
push
adc
sub
int
and
xchg
es
push
sbb
xchg
retf
push
mov
fs
lods
inc
cmp
pop
enter
add
setbe
(bad)
aaa
into
adc
int
cmp
lods
sub
push
rcr
dec
cwde
push
and
xchg
ss
mov
ins
out
aaa
js
ja
mov
dec
mov
push
sbb
rcl
daa
jge
mov
mov
xor
shl
cdq
cmp
test
cmps
test
jle
mov
push
lods
adc
fwait
sbb
or
xchg
fcmovb
(bad)
ficom
xor
xor
cld
test
and
sub
pop
push
test
daa
xor
mov
fist
inc
clc
sbb
mov
int
test
imul
rcl
inc
or
cmc
sbb
sahf
fwait
mov
and
sub
dec
jns
out
cdq
dec
les
add
add
test
xchg
outs
dec
push
(bad)
sub
pop
sub
mov
jg
aam
dec
xor
(bad)
in
ret
sahf
mov
loope
or
retf
push
test
inc
mov
outs
addr16
sbb
push
cli
shl
jmp
out
sub
pop
push
mov
shr
repnz
push
addr16
xchg
sbb
lds
rcr
sub
xchg
cs
ret
les
lods
dec
lahf
push
repnz
aad
cli
fisttp
cmp
(bad)
cld
inc
lods
and
inc
jbe
jnp
(bad)
mov
into
xchg
xchg
test
bound
es
retf
mov
ficomp
jbe
jno
jmp
cmps
std
adc
xor
pusha
adc
cmp
popa
cmp
adc
xor
dec
jle
xchg
and
cs
je
xchg
inc
mov
retf
pop
fwait
stos
(bad)
imul
ins
cwde
fs
mov
jno
mov
call
fldenv
or
cmp
ret
sbb
dec
cwde
adc
jmp
pop
sbb
lock
sub
cmp
loop
or
jns
inc
into
(bad)
stos
enter
test
push
cwde
(bad)
or
loope
xchg
popa
and
jmp
xchg
imul
mov
ss
adc
js
cmp
loopne
mov
out
push
adc
sbb
fild
sbb
lods
cmps
aad
jecxz
enter
bound
or
out
jg
jb
arpl
mul
shl
add
mov
push
iret
jo
pop
ss
pop
in
cs
es
cwde
aam
rol
(bad)
aad
mov
jnp
dec
enter
aas
popf
dec
and
dec
cmp
neg
sbb
and
out
cld
stos
(bad)
xchg
jmp
xor
mov
or
xchg
pusha
loop
cmp
push
out
cmp
call
outs
add
xor
jne
dec
cli
xor
fld
xor
fisubr
mov
sbb
pusha
fcmovnb
test
jmp
mov
mov
sub
adc
repz
mov
(bad)
and
sbb
outs
jo
jbe
mov
add
mov
xor
mov
cmp
(bad)
neg
pop
cmp
sub
les
pop
out
sub
cli
pusha
repz
retf
int3
(bad)
sbb
xor
jbe
(bad)
mov
shr
jno
dec
xchg
mov
inc
shl
mov
daa
pop
mov
cmp
addr16
add
outs
icebp
pop
push
in
sub
sbb
sub
xchg
xlat
xor
sub
movs
push
push
in
push
fst
jne
mov
adc
and
rcl
mov
sub
lock
cld
xchg
xchg
shl
fsub
add
jmp
loop
jg
pop
rsqrtps
xor
enter
out
aam
(bad)
into
stos
jae
pushf
inc
gs
mov
shr
dec
test
xchg
repnz
ins
pop
jl
mul
leave
fisttp
cmps
sbb
call
retf
in
movs
or
ins
sub
sbb
aaa
and
jb
push
sbb
pushf
clc
jg
push
adc
fdivr
and
sbb
(bad)
xor
test
sti
shl
ss
mov
or
inc
mov
xchg
sub
add
mov
mov
outs
addr16
pushf
popf
or
ds
pop
stos
jge
jmp
(bad)
fcom
mov
int
mov
popa
pop
(bad)
std
repz
fild
or
and
stc
cmp
xor
pusha
aaa
and
mov
xor
cmp
in
xchg
pop
jne
sub
xlat
bound
mov
lock
pusha
cmps
sti
nop
xchg
dec
mov
iret
adc
out
loopne
dec
retf
add
push
lea
sbb
sub
ret
aas
xchg
sbb
add
sub
add
jno
rcr
leave
or
xchg
dec
out
adc
jne
call
sbb
mov
pop
push
mov
xchg
les
push
jg
jecxz
movs
or
rol
mov
into
ja
sub
retf
out
mov
inc
div
inc
int3
and
rcr
pusha
aaa
fiadd
sub
cs
lods
pop
inc
inc
mov
sti
jmp
xchg
fsubr
xchg
and
xchg
inc
mov
sub
dec
push
mov
pop
sub
jnp
(bad)
jmp
cld
xchg
mov
loope
iret
or
dec
pop
(bad)
shl
out
inc
pop
in
popa
dec
addr16
dec
jmp
(bad)
stc
fnstsw
jge
xchg
cmps
ficomp
jns
inc
mov
push
jge
js
enter
lods
jns
addr16
stos
push
popa
gs
cmp
and
out
mov
xchg
xor
add
sti
popf
aas
dec
mov
inc
mov
lock
dec
sub
mov
ja
je
(bad)
push
mov
sub
stc
cmps
jae
push
xchg
add
and
fcomp
xchg
inc
fiadd
dec
outs
not
jg
inc
mov
aam
lea
adc
jb
fcmovnu
jp
jecxz
adc
push
sbb
dec
fisub
push
loopne
xchg
aas
hlt
xor
les
lea
mov
pop
mov
push
rcl
leave
in
lea
push
xchg
aaa
sbb
ja
adc
mov
stos
shr
mov
int
(bad)
(bad)
(bad)
test
sbb
aad
clc
mov
push
fistp
jl
cs
ds
mov
int
cld
mov
push
cmps
xchg
dec
jmp
fisubr
or
jb
xchg
fwait
add
movs
jg
clc
xchg
ret
adc
or
push
into
pusha
aaa
test
xchg
sub
pop
out
aaa
les
inc
push
sub
cmp
cmp
sbb
inc
mov
adc
mov
(bad)
cli
aas
xor
push
and
jmp
outs
daa
call
lahf
mov
cs
mov
call
sub
or
test
mov
sbb
mov
retf
enter
jo
aad
mov
dec
mov
cdq
jns
mov
je
stc
test
bound
push
xor
frndint
and
dec
jo
icebp
xchg
leave
inc
pop
dec
mov
jno
xchg
push
ficomp
mov
shl
push
movs
repz
dec
leave
loopne
ja
fbld
dec
jae
cld
lds
jb
and
push
mov
sub
xchg
scas
or
mov
mov
push
xor
jns
popa
pop
mov
movs
mov
lock
les
lea
add
cs
mov
out
in
or
cmps
scas
in
add
fs
movs
xchg
retf
fisttp
push
sar
sub
jb
in
inc
push
sub
mov
ja
outs
jmp
ret
hlt
jecxz
and
(bad)
cwde
xchg
leave
ds
mov
shl
test
int
sar
test
push
into
adc
test
bswap
jge
sub
xchg
or
jmp
inc
mov
lods
push
fnstcw
dec
or
(bad)
(bad)
sbb
mov
fsubr
sbb
jmp
dec
shl
test
daa
pusha
mov
fild
fs
lods
fwait
cmps
or
jnp
pop
loop
mov
mov
mov
mov
ja
or
mov
mov
scas
inc
jb
sbb
or
adc
sub
sub
push
xchg
popf
(bad)
mov
push
mov
jmp
fisttp
or
cmps
jns
cwde
call
inc
pop
dec
push
lahf
in
jns
pop
pop
push
loope
xchg
repz
xchg
movs
out
jge
pop
jns
ror
adc
jne
repnz
dec
cmp
xchg
push
fadd
vmwrite
addr16
fldcw
push
cmp
jo
dec
sti
inc
xor
mov
enter
jae
int
es
cmp
inc
repnz
xchg
inc
pop
dec
add
jo
pop
retf
ins
cdq
loop
jo
fucom
cwde
xor
lds
push
jl
fidiv
add
gs
arpl
xchg
ret
inc
ficom
mov
ret
sbb
sbb
jae
xchg
and
inc
fdivr
jg
or
xchg
fsub
ficom
xchg
retf
sub
push
neg
loop
in
xchg
mov
iret
scas
fld
mov
mov
icebp
mov
xchg
out
test
xchg
xchg
fst
cld
xchg
cmps
mov
sbb
xor
loope
sar
jle
aam
ficom
sbb
jo
call
pop
ds
sahf
(bad)
retf
adc
pop
xchg
adc
call
inc
mov
adc
mov
test
pop
sbb
mov
ds
add
hlt
cld
daa
out
lods
test
loope
mov
dec
ficom
paddsw
mov
pop
sub
js
sbb
or
add
fldenv
add
int3
imul
inc
inc
adc
jmp
sbb
gs
or
add
in
jnp
jg
loopne
js
nop
adc
out
xchg
adc
(bad)
mov
push
inc
mov
xchg
push
sbb
jmp
imul
xchg
cmp
pop
mov
inc
fmul
jne
mov
dec
jae
mov
sub
fistp
leave
pop
or
or
lahf
(bad)
cmc
inc
arpl
jmp
jae
lahf
ret
inc
pushf
inc
ss
imul
jmp
hlt
mov
mov
bound
sub
push
stos
jg
test
cdq
adc
pop
adc
ror
pop
js
jmp
sub
cwde
clc
clc
stc
mov
clc
mov
sub
in
std
into
mov
cmc
lea
lock
xor
xchg
push
inc
call
adc
es
(bad)
jg
inc
ins
dec
js
pushf
cwde
mov
dec
xchg
pop
mov
mov
mov
std
pop
and
icebp
mov
stos
ja
inc
mov
inc
jnp
dec
sub
mov
fisubr
pusha
sbb
fist
xor
test
fisub
inc
and
push
xor
inc
mov
add
mov
fxch
sbb
inc
cdq
mov
dec
hlt
cs
aad
add
cmp
lea
jle
bound
sub
xchg
sbb
mov
inc
mov
xlat
test
sbb
mov
sbb
jmp
mov
pop
sub
adc
sub
or
xor
xchg
fcom
out
or
xlat
fnstcw
and
dec
or
add
jecxz
jne
mov
dec
in
and
mov
(bad)
jmp
mov
cmps
test
jo
into
xchg
cmp
xlat
in
cmovg
cmp
pop
mov
ret
push
aam
mov
xor
(bad)
adc
data16
cmp
ret
out
xor
pop
and
xor
fcom
xchg
enter
sbb
sub
xchg
pop
jno
xchg
mov
and
jno
cmp
imul
sub
add
or
iret
add
jge
pop
mov
mov
jecxz
inc
adc
pop
out
sahf
cdq
or
or
stos
mov
mov
clc
loope
std
bound
jno
ins
in
cmp
inc
out
mov
add
dec
scas
mov
cmp
in
sub
mov
and
mov
xor
and
cmp
sub
pushf
mov
xor
dec
cdq
cmp
xor
(bad)
mov
mov
fmul
popaw
push
pop
jnp
add
cmp
mov
cmc
jmp
or
sub
lock
xchg
or
mov
ins
mov
xor
sbb
out
outs
xchg
and
enter
lods
cdq
cmp
enter
sub
(bad)
sbb
pop
add
add
out
fst
out
je
icebp
arpl
inc
sahf
jbe
mov
xlat
fwait
call
xor
pop
push
ds
mov
and
dec
push
or
jb
loop
hlt
jne
repnz
ins
inc
movs
mov
into
jg
test
cdq
sbb
retf
retf
mov
arpl
add
data16
or
or
test
aad
mov
sbb
mov
push
repz
int
call
push
(bad)
xor
pop
sahf
mov
arpl
fsub
fbstp
out
(bad)
sub
mov
aas
shl
xchg
cdq
add
sub
and
lods
fdivr
lock
or
push
imul
dec
sub
push
fld
div
dec
dec
inc
push
and
dec
dec
mov
call
adc
push
xchg
ss
xchg
popa
or
pushf
xchg
(bad)
aaa
adc
adc
jp
stc
rol
retf
loope
ret
jg
pushf
mov
mov
and
push
pop
pop
jecxz
jbe
(bad)
mov
push
mov
sub
out
outs
(bad)
ja
shl
pop
aaa
or
test
stos
pop
push
aaa
mov
mov
pop
pop
std
enter
xor
mov
pushf
push
adc
pop
test
mov
xor
mov
daa
cmovo
or
jo
pop
mov
addr16
jb
xchg
mov
or
jae
gs
or
mov
pushf
dec
add
mov
mov
mov
(bad)
outs
(bad)
fldcw
push
repnz
sub
lea
sub
out
cmp
inc
in
cmps
in
xchg
jns
adc
loope
xchg
mov
xchg
das
mov
dec
cmp
inc
fdivr
fimul
cmp
dec
push
aaa
cdq
cdq
dec
jmp
push
mov
ins
xchg
push
adc
xor
aad
jns
jmp
pop
test
sub
jmp
rol
loope
aad
shl
hlt
addr16
mov
sbb
ret
loop
xor
jle
js
push
jns
inc
mov
retf
lds
pop
jne
and
arpl
popa
sub
sbb
fmul
fiadd
jne
lock
dec
jg
or
xchg
add
(bad)
int
jns
out
fmul
lods
or
addr16
(bad)
mov
lahf
add
je
test
cmp
push
idiv
movs
popf
mov
push
dec
fisttp
push
ja
(bad)
pusha
ficomp
inc
xor
xchg
movs
pop
repz
int3
in
ret
(bad)
cld
and
dec
movups
pop
ror
outs
rcl
xor
mov
cmps
dec
xchg
and
sub
or
cmp
mov
or
lods
test
std
jne
lods
retf
inc
jo
test
nop
je
adc
ins
mov
imul
enter
ja
retf
test
pop
loop
in
sti
outs
into
and
leave
pop
push
cs
ins
call
mov
sbb
push
inc
xchg
repz
test
and
dec
popa
xor
ja
mov
xchg
mov
mov
mov
repnz
aam
scas
fcom
js
test
sub
sub
es
pop
cmp
xchg
pusha
dec
or
cmp
push
jnp
xor
loop
sar
or
repz
cmp
ja
jp
mov
add
dec
mov
cmp
mov
mov
adc
mov
retf
retf
lea
fwait
sbb
retf
inc
push
jl
repz
pop
arpl
jmp
in
mov
jns
ret
pushf
cld
fmul
stc
in
aaa
mov
aam
fdiv
lds
popf
rcl
(bad)
jbe
add
out
fcompp
mov
xchg
push
inc
add
dec
and
add
mov
add
dec
adc
cld
dec
inc
and
sbb
out
add
fcomp
call
mov
cmc
inc
daa
bound
lea
les
jnp
and
(bad)
cmc
mov
dec
add
les
test
into
xchg
call
cmp
cmp
lods
jl
data16
mov
(bad)
jecxz
adc
push
clc
pop
fiadd
(bad)
lods
push
add
fsub
int3
shr
nop
ja
xchg
mov
add
call
scas
dec
ror
setne
jmp
fcmovnb
test
inc
daa
and
rcl
pop
pop
shl
stos
push
or
jno
sub
repz
rcr
fidiv
test
neg
sti
adc
xchg
and
pop
pushf
loop
repnz
mov
or
stos
sbb
stos
push
cmps
les
cmp
repnz
es
xchg
xchg
cdq
das
jle
out
(bad)
shr
nop
dec
cdq
aad
pop
push
inc
retf
mov
mov
in
pop
mov
adc
jns
and
adc
int3
cld
pop
mov
das
xchg
pop
adc
js
mov
xchg
test
(bad)
aad
push
add
popa
lock
nop
sub
fiadd
inc
and
retf
call
in
neg
or
or
stc
and
cdq
jmp
and
in
cs
xchg
mov
rcl
inc
(bad)
adc
stos
add
movs
push
mov
sub
xchg
lods
(bad)
leave
push
sub
popf
xor
mov
out
push
push
xor
mov
push
xor
dec
pop
cmp
add
(bad)
femms
fsubr
mov
fidivr
pop
je
xchg
cmc
adc
cmc
xchg
xchg
in
hlt
jo
les
call
adc
cli
sbb
into
or
retf
pop
push
mov
imul
jnp
pop
jae
retf
xor
cmp
or
aad
sbb
mov
fs
cmp
and
jne
(bad)
mov
xchg
xor
pop
push
das
popf
cdq
ds
fist
mov
mov
push
pop
adc
add
cdq
and
xchg
mov
adc
nop
lahf
lock
imul
inc
cmp
jge
and
shl
es
add
(bad)
mov
iret
cli
xchg
in
cmp
ss
cmp
ret
jbe
aas
mov
xor
inc
loopne
and
and
jg
fdiv
and
imul
imul
loope
mov
popa
repz
aam
sti
or
popf
test
sar
neg
mov
lods
mov
in
xchg
sbb
xlat
adc
nop
pop
xor
mov
cmps
jle
out
(bad)
data16
les
pushf
mov
aaa
data16
out
push
xor
(bad)
xor
mov
aam
imul
pusha
pop
mov
ins
pop
fst
outs
arpl
outs
push
out
or
sub
and
dec
repnz
cmp
aam
mov
mov
xor
cmps
gs
in
fstp
fnstsw
nop
aaa
and
nop
push
pop
pop
js
movs
ret
xchg
pop
or
das
jg
inc
lock
push
adc
mov
pop
aaa
rol
ret
cmp
jmp
cmps
out
sub
xchg
mov
inc
sub
and
ds
xchg
and
jle
jle
xchg
xor
pop
pop
push
push
js
sub
sar
fadd
or
push
pop
neg
cmp
jl
dec
icebp
ret
mov
xchg
mov
hlt
jae
push
bound
stc
movs
dec
pop
aaa
int3
arpl
jg
cmp
xchg
dec
pop
adc
ss
and
pop
inc
add
xor
pushf
gs
and
xor
jno
mov
xchg
inc
or
movs
mov
pop
rol
mov
aaa
into
sub
pop
enter
maskmovq
pop
mov
push
call
arpl
jge
shr
mov
aaa
outs
movs
mov
add
xchg
sbb
jge
mov
or
int3
xchg
dec
cmp
pop
cmp
xchg
ret
sti
cmp
or
cdq
int
or
inc
or
push
add
les
cli
dec
jne
out
dec
push
xor
mov
loop
test
push
and
or
xchg
cli
test
inc
dec
test
inc
aaa
add
push
push
and
call
rcl
daa
push
sar
je
push
mov
push
jb
mov
sub
pop
rol
push
jae
and
lahf
fidivr
arpl
into
sbb
xchg
sub
mov
sub
loopne
test
jmp
loop
sbb
push
push
lds
imul
test
jnp
retf
sbb
push
enter
jg
cmc
aad
push
(bad)
in
call
test
or
movs
xchg
jl
adc
push
xchg
mov
pop
dec
adc
xor
jmp
xor
push
cwde
xor
mov
fucomip
or
cdq
ins
test
xlat
xor
ret
lods
jmp
jae
xchg
retf
and
inc
mov
adc
ret
out
lock
jg
push
cmp
and
outs
mov
adc
xchg
mov
ss
mov
cmp
push
lock
ror
leave
cmp
pop
out
push
fldcw
push
mov
cmp
je
xor
xor
mov
push
sub
mov
in
jp
pop
and
iret
ror
mov
test
fnsave
stc
add
xor
jns
lods
(bad)
xchg
jmp
call
in
and
int3
jg
pop
inc
rcl
xchg
shl
in
stos
mov
pop
outs
xchg
mov
out
fwait
dec
loop
pop
movs
stos
mov
add
adc
popf
or
lock
lods
adc
pop
cmps
jnp
inc
push
xor
fimul
push
mov
adc
mov
repz
nop
jmp
cmp
call
jo
fwait
ret
int3
hlt
and
add
outs
mov
(bad)
jmp
rcr
or
cld
into
sub
dec
lea
cmp
cs
push
fisttp
and
into
cwde
xchg
imul
pop
aas
adc
shl
pop
in
mov
xchg
test
repnz
xchg
in
mov
push
xlat
outs
dec
sbb
pop
mov
mov
div
enter
ror
dec
jp
xchg
test
scas
inc
(bad)
into
imul
sbb
sahf
dec
push
xchg
shl
add
sub
pop
and
cmp
and
jl
in
inc
xchg
jmp
(bad)
(bad)
loope
clc
push
stos
add
jne
aad
pop
lahf
lahf
xor
inc
adc
out
jae
daa
sbb
loop
cmp
or
mov
je
inc
xchg
mov
mov
jecxz
fs
cdq
jb
test
movs
inc
cdq
jmp
push
cld
jae
in
cmc
or
pop
mov
fild
arpl
inc
xlat
out
cs
adc
ror
sub
ret
adc
jae
cmp
mov
clc
pop
inc
pop
std
aam
jl
sahf
pop
jecxz
pop
imul
adc
enter
add
mov
hlt
mov
mov
(bad)
(bad)
pop
in
inc
scas
mov
js
dec
push
inc
adc
jle
(bad)
adc
je
jp
das
jmp
mov
mov
sub
shl
push
dec
pop
or
in
mov
imul
adc
(bad)
fist
or
stos
lods
inc
jns
stos
push
popa
mov
retf
cdq
mov
in
add
ret
inc
stos
dec
imul
out
rcl
ja
and
jmp
aam
loope
call
mov
(bad)
mov
cmp
inc
fsubr
adc
cmp
pop
(bad)
leave
jnp
scas
pop
inc
jb
dec
dec
pop
shr
inc
lea
jnp
(bad)
popa
inc
pop
fstp
jg
inc
jo
xor
sar
enter
and
fs
test
and
movs
cwde
outs
jecxz
adc
out
out
aaa
pop
scas
mov
sbb
int
(bad)
mov
in
mov
sbb
int
adc
adc
les
cmp
mov
ds
ins
mov
xchg
loop
int3
dec
push
sahf
add
ss
retf
lods
fdiv
mov
daa
int
push
leave
mov
test
pop
not
pop
push
call
inc
popf
das
adc
pusha
popf
cmp
cmps
pop
adc
xor
(bad)
push
leave
popf
mov
or
xchg
and
cmp
(bad)
cld
data16
xchg
dec
push
add
inc
cmps
adc
xchg
xlat
xchg
retf
inc
xchg
cmp
fwait
scas
mov
jmp
ret
daa
stos
mov
out
in
pop
shl
int3
mov
test
push
mov
lods
mov
pop
fisttp
in
sub
lods
xchg
fisub
stc
jno
cmp
sub
xchg
mov
jmp
pop
ret
das
or
mov
add
cmp
scas
iret
sbb
retf
outs
inc
(bad)
stc
ss
rcl
pop
lods
lds
cmp
xchg
stos
in
xchg
pop
and
xchg
mov
dec
rcr
push
pop
push
add
call
ficomp
out
and
push
rcl
ja
adc
out
add
xchg
mov
and
jg
mov
mov
and
fst
cmc
sub
and
(bad)
xchg
dec
add
test
out
cmp
add
out
cmp
adc
aaa
jecxz
xor
fdiv
mov
push
outs
and
mov
cmps
js
(bad)
fmul
sub
out
adc
nop
dec
pop
adc
mov
ret
jl
lds
mov
js
dec
cs
push
jo
mov
lds
sbb
(bad)
jle
adc
and
mov
mov
lahf
call
push
int3
lahf
pusha
mov
pop
sub
fdiv
mov
pop
xchg
scas
cmp
outs
push
cmps
mov
mov
inc
push
stos
into
daa
adc
add
jg
adc
sbb
mov
and
movs
clc
shl
or
or
cmp
push
(bad)
movs
mov
mov
dec
jp
out
xchg
in
xor
loop
mov
pop
lock
or
pop
sbb
das
inc
stos
mov
push
aam
mov
je
fld
cdq
mov
jo
shr
es
dec
scas
dec
scas
daa
imul
(bad)
stc
xor
dec
fbld
push
cmp
inc
add
add
jle
push
sub
ret
fisub
ins
mov
cmp
sub
out
mov
inc
repz
jb
mov
cmps
ret
sbb
or
mov
js
xor
inc
fidiv
xchg
outs
popa
stos
pop
mov
push
xor
push
sub
call
bound
daa
xor
call
xchg
mov
dec
retf
pushf
mov
jns
bound
std
dec
jle
xor
mov
pop
jno
popa
xchg
jmp
mov
push
push
test
mov
pushf
in
dec
pop
pop
test
out
rcl
and
cdq
loope
add
jns
cmp
jecxz
setno
popa
pop
nop
or
pusha
xchg
adc
push
hlt
or
mov
xchg
sub
mov
cmp
fndisi(8087
push
xor
pop
sbb
ds
test
mov
sub
jnp
pop
cli
mov
cmc
arpl
adc
lock
out
xor
jle
nop
mov
mov
cwde
push
fdivr
cmps
inc
movs
imul
sub
scas
fs
inc
jnp
pop
inc
loopne
(bad)
sub
and
xlat
push
test
nop
repz
test
movs
jne
lahf
adc
mov
adc
jnp
mov
inc
sahf
xor
xchg
pop
pop
jge
mov
xor
pop
xchg
cmps
lds
mov
leave
outs
xor
repnz
fcmovnu
xchg
adc
xchg
ss
retf
ins
mov
pop
fmul
xchg
xchg
add
es
ret
mov
lds
stos
push
or
mov
popf
imul
pop
sub
sbb
or
ret
jecxz
mov
repz
test
push
je
popf
or
pop
push
cmp
gs
ins
inc
cmp
mov
pop
out
nop
or
mov
mov
add
inc
jo
sbb
jmp
into
sub
out
retf
push
sbb
mov
xchg
scas
or
xlat
rcl
imul
ror
fcomp
sbb
push
out
mov
sub
out
jle
ja
pusha
or
xchg
pop
and
test
in
mov
sti
les
movs
lds
jge
jl
lods
fsubrp
out
jb
push
ret
push
imul
cld
inc
adc
ja
fstp
cdq
xchg
je
ret
fbstp
stc
repz
dec
call
and
push
inc
call
sbb
fstp
push
jb
jg
sbb
lahf
xor
mov
movs
dec
xor
inc
iret
lock
jmp
neg
ins
mov
push
std
jb
jns
inc
cdq
iret
int
mov
cdq
sub
(bad)
in
dec
or
ins
sub
aaa
sub
xchg
lods
cmc
fs
jl
inc
sbb
out
imul
mov
jo
out
inc
shl
xchg
mov
cld
shl
xchg
inc
mov
adc
xchg
xchg
test
dec
fisttp
jl
clc
push
test
fdiv
mov
mov
int
retf
jl
movs
cmp
ins
ret
outs
movs
dec
mov
pop
mov
mov
adc
xchg
mov
ret
pop
jmp
jp
out
scas
stc
inc
push
and
les
mov
xchg
xchg
in
sbb
sbb
add
shr
mov
in
loop
movs
sub
retf
test
ret
ret
push
in
rcr
add
cmps
sub
mov
out
fistp
mov
inc
or
xor
xor
push
mov
jl
dec
ret
jmp
lock
hlt
pop
cmp
push
mov
mov
mov
sbb
jp
sub
xchg
setae
out
retf
mov
mov
fisubr
xor
mov
mov
test
mov
(bad)
in
(bad)
sbb
dec
pusha
adc
out
mov
add
sbb
jmp
fdivr
push
sbb
add
cmp
pop
mov
adc
add
inc
cmp
push
hlt
mov
mov
adc
push
push
mov
lahf
cld
inc
mov
fneni(8087
inc
mov
add
clc
movs
push
jle
push
imul
sbb
add
mov
pop
mov
outs
mov
pop
pop
sar
daa
or
in
icebp
mov
sbb
retf
scas
xchg
lds
add
stc
add
cs
pop
fiadd
fld
leave
dec
jle
loop
dec
ja
push
fsubr
mov
sbb
jge
mov
cmps
aaa
add
cmp
adc
clc
ja
repz
xor
or
inc
rol
cwde
cmps
pop
(bad)
mov
fldenv
stos
daa
mov
cmps
pusha
inc
sbb
call
stos
xor
not
xor
push
jp
adc
xchg
fidiv
jle
push
push
dec
aas
xchg
jno
out
sub
in
push
sub
hlt
stos
mov
out
adc
fcom
mov
jmp
outs
cmps
mov
stc
jle
mov
jne
push
pop
xchg
cmps
(bad)
in
ret
dec
dec
cmc
rep
pop
in
outs
and
jecxz
call
cmp
mov
jp
cs
cmp
mov
mov
mov
imul
rcr
add
mov
shr
sub
jb
cwde
sub
aam
mov
xchg
pop
aas
xor
add
std
xchg
and
stos
repnz
imul
inc
lds
(bad)
jl
int3
sub
cmc
lods
test
push
fistp
lods
mov
mov
pop
jecxz
cmps
jl
xor
stos
shl
inc
or
in
add
add
iret
xchg
inc
pause
sbb
adc
inc
dec
mov
arpl
mov
mov
and
push
dec
repz
lods
repz
pop
dec
jo
ins
mov
popa
ffreep
push
jne
mov
out
addr16
xchg
push
nop
inc
xor
inc
xor
xor
mov
outs
test
nop
test
popa
cmc
popf
out
jmp
arpl
jl
shr
addr16
out
xchg
ins
sahf
in
retf
or
mov
sbb
mov
push
jo
cmps
inc
mov
inc
fwait
(bad)
jb
loopne
mov
aam
imul
mov
test
push
sahf
ins
outs
rcr
(bad)
das
(bad)
je
jae
xor
xchg
dec
arpl
mov
iret
ret
jne
hlt
cmp
das
addr16
test
cmps
(bad)
scas
sub
push
and
inc
(bad)
mov
and
adc
fsubr
addr16
out
sub
fisub
(bad)
lods
pop
push
fild
jg
dec
or
retf
popf
jmp
mov
dec
sahf
mov
add
or
js
pop
test
das
shl
sbb
cdq
enter
push
sub
dec
cmp
push
hlt
jmp
push
cli
aas
(bad)
out
mov
jo
cmp
lods
in
gs
int3
mov
lahf
inc
stos
sub
sahf
mov
adc
stc
jecxz
fst
sar
stos
sub
out
iret
popf
mov
test
int
xchg
inc
mov
jmp
sub
movs
push
cmp
xchg
jo
mov
fnstcw
(bad)
ret
xchg
test
push
in
les
jp
sar
xchg
ss
xchg
rcr
inc
in
adc
ins
xor
xor
das
dec
ja
fucomp
out
test
push
sub
arpl
add
iret
xchg
mov
dec
fmul
adc
test
mov
clc
scas
pop
loop
aaa
stc
(bad)
loope
inc
dec
xchg
cmp
or
sub
mov
out
loope
popa
scas
jge
jle
dec
mov
and
jmp
add
pop
cmp
or
test
ja
inc
and
mov
jbe
loop
(bad)
je
mov
push
imul
mov
sub
push
sub
or
or
inc
stos
(bad)
ja
xchg
ret
aas
sub
in
rcr
call
and
sti
inc
xchg
ffreep
fucom
mov
sbb
mov
pop
jno
clc
repnz
mov
dec
lods
sbb
jecxz
mov
push
push
test
inc
mov
movs
imul
mov
std
mov
pop
mov
fsub
stc
pop
scas
(bad)
push
sbb
int3
and
out
lock
dec
es
mov
inc
cmp
jl
aas
mov
addr16
jns
fsubp
jmp
mov
lahf
retf
loope
pop
(bad)
ror
push
out
xchg
(bad)
leave
jo
popf
loopne
lock
cli
dec
and
fistp
mov
inc
js
mov
bound
jns
or
int3
cmps
ds
mov
add
loopne
mov
jns
(bad)
jo
or
dec
mov
and
add
push
int
lahf
cs
sbb
dec
cmp
or
lahf
call
sub
cmp
loope
sbb
jmp
into
pushf
push
mov
push
(bad)
js
xor
dec
fiadd
push
femms
jo
test
push
mov
ds
mov
imul
cmp
jecxz
jmp
xor
jle
arpl
enter
movs
ja
ror
sub
out
adc
mov
sub
pop
aad
xchg
push
pop
das
jl
lea
mov
xchg
cdq
lods
cld
adc
lar
jp
lahf
mov
mov
sub
mov
and
adc
cmps
pop
add
inc
cmc
pop
adc
sub
aaa
jmp
cld
repnz
fist
popa
adc
mov
ss
mov
cwde
mov
adc
mov
pop
daa
scas
dec
xchg
lods
push
call
rol
call
int
push
fcmovb
loope
repz
xchg
jmp
mov
xor
xchg
test
dec
jp
test
xor
(bad)
fucomi
push
and
pop
cmp
addr16
addr16
push
nop
lods
push
mov
shr
xor
lods
int3
mov
aas
sub
xchg
popf
and
mov
pop
pusha
inc
cdq
mov
cld
pop
sbb
xor
ret
inc
popa
inc
push
stos
aam
add
mov
pop
push
stc
stos
in
xchg
jae
inc
in
adc
mov
and
xlat
sbb
mov
(bad)
sbb
xchg
mov
cld
jno
add
ins
and
or
out
out
jno
lahf
or
or
cli
add
aam
sub
out
add
adc
popa
fnstsw
xlat
scas
mov
nop
into
inc
int3
fwait
ins
or
pop
xor
adc
fsubr
mov
jnp
lods
lea
lea
stos
call
adc
pop
cmp
loope
mov
mov
shr
add
add
jmp
adc
xchg
cld
push
jp
lods
rcl
cld
or
cmc
cmp
jle
inc
es
test
call
pop
jns
jmp
mov
out
icebp
pop
jno
inc
clc
mov
cmc
inc
mov
popa
dec
mov
mov
mov
jno
add
sub
or
jno
aad
jmp
jecxz
mov
retf
or
aas
std
mov
enter
pop
retf
or
dec
fadd
pop
fcmovnbe
push
xor
pop
add
retf
adc
push
push
sahf
pop
jmp
(bad)
mov
je
mov
xchg
or
in
loop
xchg
pop
pop
dec
cwde
sub
repz
or
add
rcr
shr
ja
cdq
pop
jmp
lds
or
mov
add
pushf
push
pop
sub
call
cmp
sbb
into
(bad)
into
cwde
inc
ret
cmp
push
cmc
mov
dec
push
push
jmp
mov
bound
jmp
cmp
(bad)
cdq
outs
stos
and
pop
les
or
push
in
pop
cmp
and
sbb
gs
shl
call
in
cld
mov
adc
test
xor
pushf
retf
imul
stc
or
cmc
sbb
xchg
push
xor
movs
xchg
lea
xchg
xchg
and
int
jle
ja
jle
pop
jmp
pop
adc
mov
push
aam
sbb
fwait
mov
nop
test
mov
lahf
jmp
dec
test
mov
(bad)
je
push
and
getsec
jnp
rcl
cmp
outs
jb
popa
(bad)
ins
shl
jmp
int
fs
add
popa
cmp
push
pop
sbb
sub
lods
test
or
pop
popf
adc
adc
aaa
fs
repz
cwde
sti
inc
les
lock
push
popa
stos
ds
mov
sub
xlat
mov
stc
int
call
pop
mov
mov
cs
inc
mov
cwde
nop
out
inc
data16
test
sub
loop
out
iret
jle
pop
retf
adc
in
add
rol
jle
mov
pop
or
pusha
ins
pop
and
dec
push
in
data16
sub
and
ss
or
add
dec
jmp
scas
sub
sbb
xor
mov
sub
mov
iret
dec
inc
(bad)
add
push
push
mul
or
or
xchg
mov
ror
dec
(bad)
loopne
retf
cmps
mov
jge
cmps
les
jge
xchg
les
fnstsw
add
test
mov
jo
add
jg
xchg
in
mov
push
sub
sub
xchg
ret
imul
push
pop
nop
jl
nop
cmp
sbb
sbb
inc
hlt
dec
test
and
rol
outs
fadd
sub
mov
rep
or
fnstsw
movs
dec
ss
or
cmp
out
scas
ret
dec
rcr
dec
jl
cmp
ins
pop
add
mov
jmp
cmc
imul
xchg
mov
mov
int3
fcom
mov
int
jno
inc
daa
outs
jecxz
repnz
xchg
sub
push
pop
mov
pop
in
ds
fmul
mov
enter
add
sti
jnp
sub
pushf
jns
xor
push
or
xchg
push
xchg
inc
in
aaa
mov
jns
push
fcomp
in
std
(bad)
fmul
cmp
mov
inc
stos
adc
ret
fwait
mov
mov
inc
pop
imul
gs
sbb
mov
push
bound
push
aam
add
inc
not
inc
pop
pop
mov
jge
aad
or
jae
xor
xchg
cmp
lea
(bad)
stos
pusha
(bad)
mov
fcomp
jns
fild
vsubps
push
repz
and
sahf
shl
or
cmps
jb
mov
mov
mov
das
call
int3
jge
ficom
or
data16
and
pop
push
adc
div
and
ins
cmp
jno
jnp
in
hlt
(bad)
mov
or
mov
pop
call
fstp
sbb
and
adc
in
out
(bad)
out
imul
rcl
(bad)
shr
fwait
sbb
xchg
(bad)
push
sbb
inc
hlt
jmp
ror
mov
cld
test
pop
aad
(bad)
jle
js
pop
mov
pop
sub
xor
inc
xchg
int3
rol
and
gs
or
pusha
push
pshufw
add
out
push
jl
dec
xchg
ror
xor
mov
inc
xor
leave
jmp
jae
mov
pop
aad
retf
out
lock
fist
add
jmp
jno
enter
arpl
js
loopne
cdq
push
lahf
mov
mov
fimul
jmp
mov
popf
fcmovb
movs
dec
pop
loope
stos
fs
mov
pusha
int
and
jg
aam
mov
xchg
add
lods
fistp
js
into
add
mov
mov
pop
sub
cmp
fstp
sub
sub
cmps
je
lea
iret
dec
lods
hlt
call
add
aam
aas
icebp
not
push
adc
mov
push
sub
pop
mov
jbe
mov
popf
mov
in
and
(bad)
xchg
or
test
push
jl
lock
dec
retf
fmul
dec
scas
jno
jns
addr16
test
jl
test
inc
out
ret
and
jnp
in
inc
js
add
sbb
mov
xor
cmp
in
jne
dec
mov
push
or
inc
add
call
or
adc
inc
gs
xchg
mov
and
adc
jl
push
add
inc
clc
mov
sbb
and
pushf
jno
in
xchg
and
xchg
mov
mov
add
cmp
inc
jb
clc
aaa
imul
test
add
pop
mov
test
cdq
dec
xor
dec
jecxz
outs
xchg
adc
jp
fstp
mov
push
cmp
push
das
test
cmps
lahf
shl
lock
sub
ins
mov
cmps
lods
test
dec
mov
adc
add
hlt
dec
iret
pop
adc
mov
xchg
ret
in
in
push
push
icebp
mov
xlat
shr
adc
inc
test
out
popf
inc
in
repz
jl
lods
jmp
out
lahf
jecxz
add
and
cmp
stos
xor
push
shl
xor
fucom
(bad)
rol
inc
mov
enter
sbb
adc
jnp
ret
(bad)
cld
ret
jmp
xchg
test
pop
and
push
push
sbb
or
loope
mov
aad
fcmovnbe
cmp
fisubr
xchg
mov
and
mov
fmulp
das
mov
inc
movs
xchg
enter
cmp
inc
movs
pushf
(bad)
cs
ins
pop
cmp
in
adc
inc
ss
test
adc
daa
lea
iret
cwde
nop
in
ficom
(bad)
icebp
sub
jecxz
dec
or
mov
sub
mov
mov
jnp
and
lds
sar
aam
cmps
iret
fcmovbe
xor
push
jae
call
and
arpl
sub
or
rcl
fild
lods
repnz
pop
mov
out
jns
dec
test
loopne
push
out
jmp
popf
cmps
out
or
mov
test
adc
adc
pop
jp
lock
sbb
aas
push
loope
push
mov
ja
lahf
outs
or
mov
or
in
test
xor
stos
pop
add
sti
or
push
pop
pop
pop
das
ins
xchg
or
mov
mov
int3
mov
sbb
mov
fwait
iret
mov
pushf
cdq
xor
dec
xchg
es
jns
add
jmp
mov
dec
int3
mov
and
lds
inc
loope
dec
add
adc
stos
and
(bad)
hlt
mov
bound
data16
jg
push
cmp
xor
mov
jle
neg
pop
mov
sbb
shr
push
fisubr
cmps
mov
fsubr
clc
call
pop
push
stc
and
fsub
mov
adc
lock
shl
arpl
jne
mov
xchg
addr16
mov
popf
jge
pop
leave
mov
pop
xchg
add
(bad)
es
mov
mov
jp
jg
jle
fisttp
sbb
sbb
aam
adc
mov
iret
dec
out
scas
jns
pop
adc
popa
cmp
movs
cld
mov
test
ffreep
pusha
cmp
pop
sar
stos
inc
inc
pop
imul
jmp
add
sbb
cmp
jmp
nop
(bad)
stc
xchg
xchg
mov
add
pusha
jl
pop
mov
stos
out
xor
cmp
popf
iret
cmp
lds
cld
sbb
inc
daa
cmc
mov
test
add
sbb
scas
pop
sbb
rol
pusha
or
ds
out
repnz
hlt
iret
push
push
dec
popa
mov
dec
dec
add
xlat
pop
jmp
push
bound
xchg
sbb
stc
add
arpl
test
call
mov
adc
mov
in
dec
push
(bad)
mov
or
ins
or
dec
mov
xchg
xor
pop
lods
mov
cmps
pop
int3
mov
push
loopne
fs
adc
push
cmp
pop
or
mov
or
icebp
ret
mul
mov
sub
and
xchg
pop
inc
cmps
xor
outs
dec
xor
out
pop
or
inc
test
mov
dec
or
rol
push
xchg
in
push
and
test
or
cwde
mov
cld
sar
lock
fs
repnz
neg
stos
ins
dec
ds
(bad)
movs
(bad)
cwde
pushf
mov
xchg
xor
lahf
xchg
cmc
push
stos
pop
push
push
dec
mov
repnz
fistp
test
xchg
inc
test
popa
push
mov
aam
jne
push
push
out
les
jg
add
mov
inc
fs
dec
mov
sbb
jg
ja
cli
dec
push
mov
jne
and
mov
push
scas
push
dec
std
adc
push
cdq
icebp
jl
imul
cmp
dec
add
mov
sar
pop
cmc
xchg
repz
out
repnz
jne
xchg
pop
pusha
ror
rdtsc
mov
stc
xchg
add
cmps
sub
add
ins
push
pop
scas
xchg
inc
or
loopne
(bad)
cmc
out
jb
sub
jecxz
int3
pop
sti
scas
sbb
xchg
or
stos
lock
ja
xor
push
push
cmp
stc
aam
aas
fisttp
(bad)
stc
push
test
jnp
es
mov
lock
call
bound
(bad)
mov
out
jb
repnz
fwait
mov
xchg
pop
stos
dec
aad
in
sbb
mov
or
xlat
dec
call
cmp
dec
fsub
in
mov
lds
adc
push
sub
lahf
test
shr
jge
cmps
sar
xor
mov
fsubr
pop
hlt
xchg
mov
loopne
in
iret
inc
pop
and
or
ficom
fild
stc
add
addr16
not
mov
xchg
sahf
mov
in
sub
cmps
pop
jo
jmp
out
aad
in
ret
or
jne
adc
std
movs
jge
(bad)
in
shl
(bad)
jge
push
mov
cli
mov
push
inc
idiv
clc
mov
add
push
push
dec
rcr
clc
aad
or
loop
aas
jecxz
scas
xlat
mov
cmp
xchg
fnstsw
clc
xchg
pop
xor
push
loope
mov
outs
loop
fist
daa
in
mov
or
pop
test
js
(bad)
cwde
and
in
fdivr
imul
hlt
push
add
dec
ds
movs
fdivr
xlat
cmp
push
ins
out
cmp
jp
ret
stos
push
or
and
shl
dec
rcl
jno
xor
int3
jg
dec
cmp
mov
xchg
(bad)
fsub
test
mov
and
cmp
leave
cmp
int3
mov
mov
mov
jecxz
sbb
or
into
inc
das
inc
in
movs
dec
cmps
mov
in
out
push
loop
push
inc
jge
mov
pop
cli
loope
in
push
adc
sub
xor
loop
push
test
inc
mov
cmc
xchg
xlat
dec
dec
cmp
cmp
(bad)
mov
and
cmps
dec
mov
lea
fdivr
push
(bad)
xchg
hlt
jmp
in
or
push
or
sbb
sub
movs
cmp
jmp
shl
mov
pop
(bad)
cmp
jge
sub
loopne
dec
add
loope
xchg
lds
stc
jmp
or
rol
inc
dec
sbb
xchg
std
mov
out
shl
dec
rcl
adc
mov
pop
aam
inc
fild
mov
lods
in
jb
nop
jo
mov
mov
std
inc
lods
rsm
(bad)
dec
add
ret
aas
sbb
ret
mov
into
mul
pop
test
sbb
pop
pusha
in
xor
lsl
test
mov
(bad)
test
cmps
pop
out
cmps
push
push
dec
inc
div
cmps
push
in
jl
cli
sbb
(bad)
in
ss
adc
pop
sbb
mov
mov
push
jnp
jae
ds
lock
or
mov
lahf
sub
es
dec
or
popf
xlat
stos
push
sbb
xchg
jns
js
(bad)
into
xchg
pushf
icebp
sbb
stos
add
mov
inc
jb
sbb
fdivr
movs
nop
or
popa
mov
loope
adc
sub
retf
mov
sahf
aad
in
dec
mov
data16
and
out
xchg
cmps
push
dec
sbb
adc
popf
mov
xor
test
int3
mov
add
and
aaa
xchg
(bad)
mov
push
sub
shl
mov
mov
out
adc
fcomi
xor
aaa
(bad)
jne
cmp
cs
or
mov
jg
pop
out
push
push
jnp
cli
mov
and
jb
inc
addr16
xor
aam
mov
retf
outs
mov
cmp
dec
push
inc
lods
aaa
mov
jnp
dec
pop
imul
loopne
mov
pop
xor
pop
cmps
(bad)
xchg
cld
push
fs
push
ins
pop
sub
enter
sub
outs
sar
mov
inc
(bad)
cdq
repz
(bad)
fbstp
jge
xchg
mov
test
push
add
dec
push
shl
or
out
in
xchg
xor
and
std
ror
xchg
sbb
add
sbb
dec
sbb
cmps
sbb
dec
jns
idiv
sub
fcos
cli
fst
inc
cmp
jo
gs
gs
sar
sbb
ret
imul
inc
push
xchg
test
fnsave
(bad)
aam
sbb
int3
cmps
mov
loopne
out
je
add
adc
push
add
shr
add
movs
inc
bound
(bad)
stos
call
ds
ins
mov
xor
xchg
add
and
push
cmps
cmp
cmp
icebp
jg
outs
ficomp
into
imul
and
cwde
stc
arpl
and
inc
inc
loope
in
stc
jnp
xor
ret
xor
inc
xchg
inc
popa
bound
or
shr
or
int3
int
cmp
pusha
leave
cld
or
xor
mov
int
out
in
jae
xchg
and
push
fcom
jne
fmul
fcmove
ja
jmp
jno
and
je
cmp
popa
pushf
inc
leave
xchg
icebp
xor
inc
ins
addr16
popf
cmp
aam
mov
push
xor
scas
cdq
(bad)
jp
push
cmp
mov
adc
xchg
rcr
dec
daa
repz
lahf
cmp
cmp
sbb
fnstenv
dec
test
pop
je
jge
dec
cmp
dec
test
xchg
and
lock
stos
jmp
(bad)
push
(bad)
mov
mov
jns
std
mov
xchg
sahf
jl
jmp
scas
dec
mov
cmp
sub
pop
clc
repz
fcom
mov
xor
fdiv
(bad)
neg
lods
lock
mov
jbe
push
inc
fsqrt
shl
in
pop
stc
cmp
fwait
ds
lock
jmp
push
in
shr
add
adc
sbb
jns
push
ret
mov
and
idiv
call
lds
(bad)
xlat
add
aaa
jle
add
aas
lock
(bad)
(bad)
sbb
retf
and
push
mov
mov
fdiv
cld
psadbw
cmovp
add
fisttp
ficom
jg
pop
call
dec
nop
xchg
(bad)
rol
push
mov
dec
das
pop
rcl
xor
jae
fldcw
mov
inc
mov
iret
cmp
adc
outs
xchg
shl
int3
mov
imul
aaa
stos
out
add
dec
sub
bound
add
nop
loop
inc
lods
pop
cdq
xchg
aam
int
ja
scas
add
jmp
mov
cmps
inc
mov
jmp
and
mov
jns
packuswb
ret
xchg
ret
popa
retf
xchg
pop
fdivr
mov
xor
stc
mov
pushf
leave
das
aam
cmp
daa
xor
enter
call
or
xchg
arpl
bound
ror
cdq
dec
dec
inc
fs
js
cmp
ins
(bad)
or
cmp
sbb
push
mov
ret
repnz
stos
cmp
fs
call
lds
cmps
retf
mov
stos
stos
jmp
jb
aaa
das
dec
or
lahf
sub
les
or
push
xor
(bad)
jp
(bad)
mov
shr
dec
sbb
into
push
enter
gs
mov
gs
adc
sbb
imul
and
sub
std
xor
xor
gs
repz
sbb
adc
sbb
sbb
xor
inc
xchg
lds
test
into
push
jno
movs
popa
(bad)
push
cmp
mov
inc
mov
js
or
ja
push
outs
jp
jb
pop
test
std
fsubr
mov
jmp
jg
js
call
jecxz
push
retf
lds
fwait
add
mov
sub
xor
movs
lahf
jb
fcomp
xchg
test
mov
movs
popf
test
sub
sbb
scas
test
push
out
(bad)
mov
xor
pop
mov
push
(bad)
stos
pusha
push
xchg
mov
out
or
or
xchg
ins
ss
bound
aam
inc
iret
test
push
fst
mov
xor
xor
and
loop
pop
pop
call
les
dec
push
fnstsw
into
je
adc
(bad)
xchg
ret
mov
pop
enter
aad
cmps
xor
mov
ja
loopne
cmp
pushf
daa
push
call
sbb
shl
xor
aaa
outs
or
mov
pop
popf
xor
mov
sub
jno
loopne
aas
out
sub
arpl
cli
retf
cs
cli
and
jp
ret
je
mov
xor
and
arpl
sub
mov
or
movs
mov
lock
sbb
cmp
and
xchg
or
into
into
adc
pop
cwde
pop
xor
mov
xor
dec
jmp
mov
loopne
cdq
pusha
jb
loopne
in
cmp
jge
mov
test
mov
add
jmp
out
test
jecxz
test
and
inc
mov
mov
jge
mov
cwde
sbb
rol
or
mov
leave
inc
shl
push
outs
jo
aad
push
movs
xchg
mov
xchg
jmp
in
push
dec
ins
pop
mov
push
cmp
fwait
or
mov
or
jmp
bound
sbb
cs
and
xchg
loop
ret
push
out
or
into
jnp
test
mov
jno
mov
cmps
or
inc
dec
popa
in
fistp
jmp
dec
stos
xchg
arpl
hlt
es
add
mov
push
cmp
imul
idiv
xchg
or
bound
fist
es
retf
push
mov
push
mov
ins
mov
and
pop
jne
out
mov
mov
jnp
jl
data16
add
fmul
movs
sub
add
popf
iret
lahf
jae
(bad)
jmp
sti
pop
out
mov
xor
loopne
and
popa
sbb
addr16
cmp
mov
mov
jnp
ja
scas
mov
mov
aam
sub
rcl
inc
inc
popf
push
xchg
adc
mov
cmps
mov
jp
ins
cmp
(bad)
rcl
inc
stc
and
das
jle
ret
add
lahf
and
out
cmps
and
ins
sar
jb
outs
dec
nop
xor
pop
mov
jp
daa
push
cdq
iret
(bad)
and
hlt
aaa
jns
repnz
sbb
popf
std
lahf
in
int
outs
mov
inc
neg
push
les
xchg
ss
lods
xlat
loopne
adc
scas
mov
push
fstp
stos
jne
hlt
xchg
add
inc
aam
fiadd
cmp
stos
jl
sbb
sub
icebp
icebp
popa
or
xor
out
mov
std
push
jae
test
sub
(bad)
int
sub
dec
xlat
rcl
or
sar
push
pop
cmp
or
or
dec
sub
and
es
lea
xor
ss
push
jo
call
sbb
cmps
jmp
retf
adc
call
pop
je
das
cmp
mov
repnz
xchg
xor
je
push
pop
cli
lock
jmp
mov
jns
jecxz
repnz
jno
push
movs
push
cmps
or
std
add
inc
inc
je
mov
loope
pusha
fsubr
in
aam
inc
fs
sub
pop
push
repz
pop
xor
sbb
xchg
pop
arpl
enter
jge
pop
or
pop
sub
ficomp
and
aam
fmulp
ficom
jmp
in
cmps
inc
out
iret
mov
cmp
mov
mov
test
ins
push
fbstp
jns
adc
and
aas
dec
xor
ja
daa
push
and
pushw
sti
jl
xchg
or
xchg
fwait
repnz
push
dec
sub
mov
pop
inc
dec
(bad)
adc
push
or
retf
add
cld
js
dec
xchg
dec
and
pop
jle
fs
jmp
pop
add
xchg
add
in
es
push
hlt
adc
fwait
push
movs
cs
inc
xchg
inc
push
ficom
loopne
inc
push
jbe
sti
add
inc
or
mov
cdq
or
mov
xor
xor
sbb
sub
in
and
push
mov
arpl
inc
add
sbb
jmp
mov
sub
xor
imul
je
cwde
dec
xor
nop
enter
mov
clc
cdq
cmc
lods
lods
neg
xchg
dec
stos
mov
jmp
cmp
je
or
ins
sub
fidiv
dec
mov
ds
sbb
je
outs
mov
icebp
mov
mov
adc
adc
out
es
dec
push
pusha
mov
sbb
pushf
xchg
in
not
repnz
aas
adc
pop
mul
pop
mov
dec
inc
jecxz
sbb
movs
and
and
pop
pusha
and
clc
sti
sbb
xor
mov
lods
stos
mov
xchg
fisub
mov
lds
jmp
mov
push
out
push
mov
inc
in
test
fwait
mov
or
xchg
cs
push
es
xchg
lahf
push
xor
mov
dec
pusha
fistp
fs
inc
pop
int
scas
pop
push
mov
inc
(bad)
clc
and
sub
dec
dec
je
mov
popf
jp
mov
pop
sbb
bound
iret
add
push
je
sbb
sub
scas
fsubr
out
or
mov
cmp
jge
gs
into
mov
test
test
adc
sub
xchg
sar
jmp
push
cmp
inc
gs
cmp
push
push
push
push
fucomi
ds
repz
iret
jle
scas
mov
(bad)
and
pop
cmps
mov
es
jp
add
dec
mov
ja
jl
sahf
mov
test
(bad)
jmp
imul
xchg
sbb
mov
push
cmps
outs
sub
cmp
xor
repnz
jne
loope
xchg
adc
fwait
cmp
dec
shr
movs
sub
add
setge
inc
pop
(bad)
lock
into
(bad)
adc
jmp
add
(bad)
sbb
or
xlat
cmp
push
cmp
xchg
jo
mov
aam
pop
push
scas
sbb
aam
mov
pop
sbb
sub
retf
add
lods
in
dec
xchg
dec
adc
sbb
scas
ds
faddp
dec
mov
add
pop
jb
dec
(bad)
in
movs
ja
or
pop
maskmovq
inc
dec
aas
ret
push
std
xlat
xchg
stos
inc
jl
cmp
cs
dec
hlt
adc
xchg
sub
fwait
call
or
push
and
push
push
push
mov
mov
sbb
test
xchg
and
sbb
leave
pusha
xor
call
push
bound
sbb
mov
sar
inc
lock
xor
and
test
inc
retf
js
mov
jno
test
jnp
pop
lock
jbe
imul
inc
(bad)
(bad)
jmp
inc
jns
xchg
mov
cmp
push
mov
scas
adc
jg
pop
cmp
sbb
(bad)
out
sbb
dec
out
inc
cmp
pop
(bad)
arpl
repnz
test
in
fcom
lods
dec
dec
out
das
mov
jae
(bad)
(bad)
stc
fwait
mov
lahf
sahf
xor
test
and
sbb
outs
out
jns
xlat
jbe
xlat
xchg
lods
inc
aad
(bad)
adc
pop
icebp
jns
or
jns
les
int3
and
and
add
push
inc
(bad)
(bad)
mov
in
mov
xor
aas
mov
aam
loope
mov
jnp
sbb
inc
cmps
push
mov
shr
in
jae
clc
cld
mov
sar
add
leave
pushf
jg
adc
xchg
jge
lock
dec
and
xchg
pop
loopne
fcom
(bad)
sbb
add
cwde
jnp
int3
xor
dec
arpl
out
pop
and
sub
ror
aaa
das
dec
mov
fwait
xchg
outs
and
sti
jge
(bad)
mov
mov
aas
out
push
inc
cli
je
lea
mov
test
and
hlt
int3
and
jns
iret
jno
adc
cmp
jle
add
mov
pop
xor
mov
adc
je
cmps
in
mov
cmp
and
mov
gs
adc
shl
pusha
pusha
movs
into
adc
dec
popa
loop
aaa
gs
cwde
ins
sbb
push
loope
jb
mov
push
adc
pop
popf
mov
ins
mov
jbe
shl
push
push
mov
add
push
mov
icebp
and
mov
push
cmp
call
pop
mov
aaa
stos
shl
hlt
push
pusha
mov
jge
stos
popa
(bad)
mov
push
xchg
pop
mov
pushf
aas
test
lock
fld
cmps
(bad)
jo
push
add
pushw
mov
and
push
jne
lods
fwait
mov
and
dec
fld
ins
int3
loope
fxch
mov
xchg
aaa
call
stc
mov
sub
test
ins
sub
nop
out
pop
imul
jl
xor
iret
popa
aaa
xor
push
enter
repnz
fcom
arpl
cwde
adc
add
daa
aaa
out
rol
ss
and
push
xor
nop
jo
movs
adc
push
adc
xchg
lea
jbe
jo
xor
outs
push
adc
mov
inc
loop
ret
pop
push
out
out
shl
(bad)
jmp
cmp
push
cmps
stos
jmp
pop
mov
dec
in
mov
cmp
jl
mov
in
xchg
or
rcl
(bad)
cld
cmp
sub
scas
inc
out
sub
jnp
fistp
jle
out
ficom
xchg
out
pop
jb
pusha
call
pop
or
cld
jae
je
push
ds
mov
iret
test
dec
cmp
je
packsswb
and
xor
inc
sub
shl
out
mov
or
xchg
jmp
dec
adc
ret
mov
sar
cmp
iret
iret
nop
mov
jbe
push
sbb
loop
push
repz
retf
sub
iret
or
adc
int
fisubr
retf
jecxz
stos
ss
sbb
mov
mov
mov
jns
sahf
into
rcr
sti
jp
(bad)
or
mov
adc
lock
mov
or
outs
jb
push
adc
bnd
pop
pextrw
aas
movs
inc
stos
das
jbe
sar
or
pop
(bad)
int3
push
jb
sub
jge
daa
add
inc
and
sahf
je
dec
jb
sbb
test
jno
fbstp
and
sbb
ds
or
(bad)
mov
sub
or
fmul
retf
imul
push
inc
pop
cmp
cmp
cwde
ds
add
pop
fisubr
cld
adc
cli
mov
mov
xchg
pop
js
xor
cmc
ss
fadd
sub
(bad)
cmp
and
xchg
push
cwde
mov
jmp
pop
les
out
or
test
mov
jae
ja
aam
mov
imul
cmp
mov
jne
add
sar
sbb
aam
jo
sbb
aaa
pop
pop
jns
pop
jmp
out
mov
pusha
dec
inc
push
imul
retf
xor
movs
arpl
mov
in
add
hlt
imul
ror
fs
xor
push
fucom
(bad)
sub
dec
in
inc
dec
pop
les
jecxz
leave
inc
push
enter
inc
adc
inc
and
inc
scas
add
int
sar
xchg
or
ins
ret
scas
mov
push
sub
dec
aaa
data16
cld
pushf
mov
mov
add
xchg
and
ja
cmp
das
mov
aaa
repz
dec
dec
dec
add
or
jno
push
setl
cmp
inc
mov
and
push
cmp
aaa
cmp
push
mov
jle
cmps
stos
loopne
jge
mov
nop
cmp
fstp
add
jmp
stos
mov
fbld
test
aaa
loope
ret
mov
(bad)
mov
enter
fidivr
mov
ins
and
jb
in
pop
sbb
sub
mov
setp
jp
dec
ja
movs
jecxz
(bad)
fild
mov
xchg
fisubr
inc
and
in
call
or
lods
and
bound
into
inc
inc
int
dec
stos
sar
xchg
pushf
out
mov
adc
sub
add
mov
mov
frstor
inc
imul
fs
cmps
lahf
les
or
pop
or
mov
add
and
in
pop
dec
ret
cmp
pop
daa
xor
int3
jns
sti
and
out
inc
call
jnp
ror
jg
push
dec
ret
aad
adc
add
out
xor
in
data16
sbb
xchg
pop
pop
jl
rep
mov
sbb
adc
aas
les
es
(bad)
jno
bound
stos
sbb
imul
call
movs
or
(bad)
lds
mov
push
mov
cmp
in
mov
and
retf
es
mov
je
xchg
test
js
ins
ret
xor
cmc
enter
xchg
push
xchg
inc
(bad)
iret
jb
mov
fisttp
cmp
daa
cmps
pop
sbb
test
jae
rol
mov
icebp
xor
push
mov
adc
mov
int3
or
popa
fnstcw
and
mov
jg
adc
sbb
dec
xchg
adc
pop
cmps
mov
jg
clc
sub
dec
pushf
and
inc
xor
mov
mov
rep
adc
aad
pusha
mov
inc
sbb
jns
xchg
ds
mov
sbb
loop
test
pop
pop
xchg
pop
adc
pushf
arpl
movs
sbb
sbb
das
add
shl
push
das
push
leave
call
push
push
sbb
rcr
jo
xchg
nop
mov
cld
mov
cmps
jl
repnz
fs
jp
mov
mov
and
ds
inc
cmp
cmp
dec
cwde
cdq
bound
je
push
pop
sar
imul
mov
fst
mov
push
daa
adc
ror
lahf
push
ins
or
add
arpl
gs
std
dec
imul
xor
fsubr
xlat
mov
dec
sbb
sbb
pop
pop
cmc
adc
xor
mov
mov
sti
add
pushfw
xor
cmp
(bad)
mov
or
(bad)
ss
mov
outs
jmp
jns
adc
dec
push
mov
pop
jo
dec
aas
bndldx
pop
mov
call
ret
adc
mov
sub
cs
pushf
xchg
mov
call
daa
sti
xor
idiv
je
dec
add
ror
adc
push
jl
jo
out
cmp
(bad)
pop
bound
push
pop
dec
and
rcr
cmp
je
cli
lock
inc
aaa
pop
iret
mov
fsub
clc
loope
popf
xchg
push
shr
add
or
push
pop
cmp
retf
mov
add
lods
or
fwait
into
int
stc
mov
iret
pop
mov
xor
in
test
mov
sti
cwde
psrlw
stos
into
lods
daa
mov
pushf
xor
arpl
mov
or
dec
dec
test
mov
mov
xor
jp
add
loope
arpl
inc
cwde
jb
cwde
cmps
mov
jle
jae
pop
inc
mov
mov
cwde
fistp
dec
in
push
cmp
addr16
lods
ror
push
(bad)
scas
popa
test
push
sti
icebp
and
stos
push
es
mov
cmp
dec
movs
out
mov
mov
fild
jae
add
aam
movs
cmp
cmp
mov
mov
xor
ja
push
mov
(bad)
pop
sub
pop
cmp
inc
lods
cmp
(bad)
mov
jp
cmp
dec
push
push
mov
push
test
out
inc
test
jo
les
int
ds
dec
jg
push
loope
out
pop
jp
into
outs
das
in
adc
ins
imul
push
shl
cs
sbb
fcomp
mov
fwait
cwde
pop
adc
pop
sti
leave
xchg
shl
or
lea
mov
sub
push
sbb
inc
sub
or
ins
(bad)
fdiv
mov
jmp
cmp
nop
or
mov
jae
mov
shl
daa
mov
jae
jg
pop
inc
fs
push
dec
pop
inc
mov
xchg
fstp
push
pushf
js
popa
inc
das
dec
out
ret
into
jns
(bad)
sbb
inc
nop
inc
aad
repz
xchg
int
add
test
fisttp
xchg
lock
sub
cmp
pop
pop
iret
jno
dec
mov
mov
ss
(bad)
mov
sbb
xlat
mov
inc
into
ins
xchg
push
cmp
dec
leave
popf
mov
retf
dec
adc
je
leave
mov
and
out
dec
cmp
push
sahf
jmp
daa
test
hlt
call
sbb
adc
inc
xor
sub
je
add
adc
push
mov
fs
xor
fst
cmp
jl
cdq
(bad)
adc
or
push
fstp
pushf
js
call
les
das
add
inc
jb
add
inc
repz
mov
push
xchg
test
and
in
in
cmps
das
mov
adc
mov
scas
mov
bswap
xlat
sub
mov
cwde
sbb
loop
mov
in
jo
dec
pusha
xchg
jg
je
jo
xor
out
pop
sub
mov
imul
lock
into
or
mov
and
clc
mov
(bad)
into
or
mov
xor
or
mov
loopne
mov
adc
push
pop
cmp
push
jge
mov
mov
mov
repz
stc
cmp
mov
lahf
jl
cmp
mov
repnz
ja
inc
pop
add
dec
movs
(bad)
out
push
fwait
xchg
mov
mov
rcl
sbb
inc
(bad)
sbb
jle
jp
retf
add
sbb
pop
inc
mov
popa
push
test
pushf
adc
mov
cmovg
jno
out
xchg
pop
setp
xor
pop
(bad)
out
jge
cmps
out
push
xchg
pop
xor
lds
add
sub
pop
rcr
imul
xchg
ret
push
mul
sbb
test
mov
ins
fisubr
or
jmp
push
push
call
fnstcw
aad
jmp
sub
jo
popf
lock
aad
ins
jno
retf
jle
and
call
xchg
std
inc
clc
sbb
push
int
in
(bad)
adc
ins
and
cmp
adc
shl
stc
xchg
ins
dec
mov
repz
mov
nop
stc
xchg
or
mov
add
pop
pop
rol
pop
or
test
dec
or
cmp
loope
sbb
repz
in
sti
mov
mov
mov
icebp
dec
xchg
pop
xchg
sub
inc
retf
fwait
xor
cmc
mov
jmp
xchg
outs
adc
call
push
add
sbb
add
popa
inc
popa
hlt
(bad)
leave
cmp
pushf
mov
push
adc
pop
xchg
mov
push
cmps
das
fxch
xor
daa
mov
cmc
inc
popa
popf
or
push
pop
adc
and
pop
cmps
jle
imul
addr16
addr16
out
adc
dec
mov
and
and
(bad)
add
imul
arpl
nop
xor
js
inc
or
sbb
push
push
fmul
fiadd
jp
lea
arpl
inc
leave
adc
leave
retf
int3
leave
xor
inc
jo
cld
push
cld
sub
pusha
or
adc
into
mov
pop
in
sbb
enter
int3
xor
inc
repnz
and
imul
and
jb
sub
out
pop
xchg
jle
les
in
xor
adc
dec
rol
int
inc
push
out
jmp
sub
pop
push
xor
pop
dec
cmovs
or
int3
daa
jne
lds
mov
ins
imul
mov
push
sub
dec
adc
ins
outs
pop
and
pop
mov
add
or
scas
cli
inc
out
pop
xor
push
pop
mov
mov
pop
mov
dec
adc
mov
mov
push
and
xor
jmp
xor
outs
lds
sbb
and
scas
xchg
or
mov
and
inc
js
stos
(bad)
retf
mov
jbe
xlat
pop
lods
push
dec
bnd
das
xchg
xchg
mov
neg
and
les
pop
imul
and
(bad)
mov
test
adc
inc
popa
in
daa
es
xor
nop
cmp
add
mov
ds
jae
inc
sub
clc
fwait
cli
(bad)
pop
outs
scas
cmp
jbe
jno
sbb
cmps
imul
cdq
cmp
pop
jmp
xchg
fisttp
movs
sbb
pop
(bad)
cmp
sub
push
sbb
ins
and
div
adc
jmp
idiv
xor
push
dec
(bad)
(bad)
xor
and
adc
or
cs
jne
and
add
fwait
ins
mov
test
inc
push
dec
rol
sub
movs
sbb
aaa
addr16
and
cmp
mov
pop
fisub
ficomp
jne
enter
mov
jmp
or
stos
inc
mov
add
push
sub
movs
nop
cwde
sub
loop
fdivr
aas
jne
jno
ret
jno
xchg
dec
dec
aas
stos
rcl
and
(bad)
push
mov
push
and
pop
xchg
mov
ror
mov
mov
pop
xor
(bad)
cs
cmp
enter
push
xchg
jbe
bound
arpl
and
out
xor
jns
xchg
mov
gs
xchg
or
sub
stos
mov
popa
push
mov
retf
outs
mov
dec
loope
pop
sbb
inc
fidiv
mov
adc
neg
or
out
mov
(bad)
mov
jbe
push
xchg
pop
mov
jecxz
push
fwait
push
pop
dec
add
int3
aam
or
dec
shl
je
sti
ss
mov
or
jg
imul
dec
push
push
shl
in
out
cmps
popa
sub
outs
add
stos
xor
fmul
sub
and
sbb
jbe
ins
mov
nop
and
dec
stos
and
cmp
mov
popf
loop
cli
imul
nop
mov
sbb
cdq
hlt
or
in
xor
xchg
aaa
pop
pop
xchg
mov
not
push
loopne
ss
loop
cmp
xchg
dec
xlat
xlat
stc
jno
push
add
stos
cli
popf
aas
jecxz
and
cmp
and
mov
ja
push
shl
push
push
cmp
mov
ret
stc
arpl
pusha
sub
lods
jl
sbb
loope
inc
or
outs
clc
mov
mov
cmp
popa
and
xor
and
aad
dec
fcom
or
out
ja
pop
scas
or
ins
ds
or
loopne
and
sbb
ficom
(bad)
jp
push
inc
jae
shl
call
mov
cli
rol
das
pop
xchg
mov
test
(bad)
pop
jg
jecxz
push
jne
cmp
pop
dec
inc
jno
mov
movs
xchg
mov
jae
mov
push
push
mov
test
cmps
pop
push
mov
je
sub
ins
mov
frstor
adc
xchg
int3
loopne
shl
jo
aaa
sbb
xchg
mov
(bad)
push
xor
xchg
push
mov
jl
add
ret
pusha
sub
fbstp
pop
push
mov
mov
cmp
fsub
sub
push
icebp
sti
stos
jl
push
xchg
adc
lahf
xchg
(bad)
pushf
adc
cmp
mov
or
aaa
test
lahf
dec
in
jmp
sub
test
fidivr
adc
pop
sbb
pop
pusha
cli
push
xchg
adc
mov
push
(bad)
cld
fsubr
fldcw
adc
sub
pusha
dec
test
mov
lahf
fstp
mov
fs
aam
xchg
lods
push
pop
outs
push
mov
cmps
out
jae
scas
or
push
outs
pop
jp
mov
fs
sub
xor
xchg
mov
mov
fimul
adc
add
jmp
rcr
xchg
int3
sub
sub
pusha
xor
add
cmps
stos
ud2
lock
stc
pop
into
out
dec
mov
inc
push
sub
mov
pusha
jo
repz
hlt
int3
aad
mov
int
bound
sahf
jg
test
inc
push
repz
mov
cli
xchg
jge
mov
cs
in
mov
jne
and
xlat
pushf
add
sbb
pop
ss
jb
imul
adc
and
mov
je
or
jnp
popa
sbb
add
arpl
out
int
sub
sahf
imul
inc
sub
js
sub
push
(bad)
mov
ins
mov
sub
out
jns
push
daa
test
dec
and
add
outs
or
xlat
xor
add
or
push
pop
hlt
adc
aam
xlat
add
xor
jmp
fsubr
inc
out
imul
gs
shr
adc
adc
das
imul
das
fist
aaa
mov
inc
inc
and
les
xor
pop
jmp
xchg
inc
sub
push
jae
pop
pop
pusha
push
nop
cmp
lds
ficomp
mov
mov
addr16
sub
gs
or
mov
jo
sbb
es
loope
mov
ss
dec
in
adc
mov
test
cmps
xchg
adc
pushf
cdq
adc
sbb
inc
sub
inc
xchg
dec
std
sbb
imul
sub
aas
test
adc
mov
(bad)
(bad)
fnsave
inc
mov
jle
out
add
mov
push
gs
hlt
shl
and
fld
out
ret
inc
js
and
retf
call
dec
(bad)
cmp
xchg
push
cmp
aaa
jl
cmp
push
push
xor
adc
or
or
lahf
js
fnstcw
add
addr16
add
mov
mov
repnz
ds
sahf
push
loopne
or
sbb
adc
pop
adc
xchg
pushf
stos
aad
(bad)
in
and
push
fstp
pop
add
jge
jbe
dec
push
ret
pop
ret
mov
inc
pop
adc
add
xchg
loopne
(bad)
mov
jmp
bound
aaa
stc
cmp
out
pop
pop
mov
inc
int3
cdq
jmp
inc
imul
in
inc
adc
sbb
cmp
movs
push
xor
mov
(bad)
call
jle
push
and
mov
fisub
or
(bad)
cmc
aaa
jge
xchg
push
dec
jecxz
test
mov
mov
cdq
mov
push
mov
inc
mov
cs
cld
and
pop
and
xor
inc
mov
test
xchg
sti
cmp
add
rol
adc
cmp
xlat
popa
fsin
test
and
out
std
dec
jae
hlt
movs
jno
test
js
add
and
dec
sub
fucomp
pop
shl
pushf
shl
mov
and
arpl
add
(bad)
inc
aad
push
(bad)
push
inc
mov
jno
arpl
repnz
and
mov
daa
push
out
out
cmp
mov
ss
inc
in
(bad)
daa
cmp
mov
xchg
pop
or
ret
sahf
les
(bad)
fmul
push
push
push
push
cmp
loopne
inc
pushf
and
mov
arpl
(bad)
std
sbb
inc
mov
cmp
out
popa
dec
mov
push
dec
or
(bad)
stc
inc
xlat
xchg
int3
add
xchg
stos
adc
jl
mov
xchg
xchg
ror
cmp
das
push
xor
movs
scas
fdivr
addr16
sbb
mov
sub
ins
arpl
dec
pop
in
pushf
aas
test
jne
out
mov
je
rol
call
or
cmp
xor
int
adc
sbb
jb
dec
cmp
inc
adc
sub
push
das
pop
inc
mov
dec
add
ror
add
adc
sbb
in
jmp
iret
xor
xchg
pushf
mov
push
mov
add
jo
nop
rep
xchg
and
pop
xor
sar
mul
xor
add
pop
mov
aam
xchg
sbb
data16
lods
xor
sbb
cli
cmp
inc
xor
int
iret
mov
rcl
sub
mov
mov
xchg
scas
shl
pop
cdq
and
test
outs
test
push
movs
sahf
push
add
jge
dec
inc
xchg
stos
xchg
jns
lods
adc
sbb
cli
sahf
std
imul
sub
pop
lock
dec
(bad)
cmc
icebp
stc
out
mov
and
and
inc
push
xchg
or
sbb
(bad)
xchg
xchg
mov
test
xor
inc
push
sub
mov
jl
mov
jno
loope
cmp
cmp
adc
int3
cld
inc
push
pop
push
or
pushf
ficom
add
icebp
mov
jecxz
mov
xchg
add
shl
mov
push
mov
in
xchg
jns
ss
(bad)
popf
xchg
fnsave
pop
inc
and
stc
scas
mov
inc
popa
test
pop
sub
xchg
sub
pusha
cld
iret
pusha
stc
or
mov
fst
push
call
mov
jp
cld
imul
ds
cwde
mov
lea
and
sub
and
and
aam
(bad)
pushf
outs
push
fnstenv
pop
es
pop
mov
inc
dec
cmp
gs
lock
out
sbb
arpl
lahf
sub
rcl
sbb
push
pop
dec
sar
sub
and
ror
imul
ds
sti
stc
es
mov
push
cdq
sub
inc
push
retf
jno
jl
stos
mov
sbb
inc
cmc
push
jl
rcl
or
and
jbe
pop
ins
shl
neg
retf
push
call
adc
jmp
adc
jns
dec
(bad)
cmp
out
lods
mov
cs
xor
mov
mov
or
mov
xor
mov
xchg
or
out
mov
out
jae
ins
addr16
int
push
fcom
cmp
jae
xchg
xchg
fcom
rol
ins
mov
cli
pop
retf
lods
adc
inc
repz
pusha
or
(bad)
fst
retf
dec
test
jno
daa
mov
add
les
ins
popf
push
jmp
xchg
loope
leave
cmp
shr
scas
(bad)
in
or
pop
out
sbb
mov
out
stc
push
out
js
mov
ret
inc
pop
pop
push
and
fmul
sub
mov
add
push
test
add
sbb
test
xor
adc
push
(bad)
cdq
xlat
cmp
jne
mov
movs
fidiv
ret
test
sub
nop
sbb
lods
or
enter
mov
int
cmc
dec
(bad)
neg
and
pop
jmp
ss
test
cmc
or
(bad)
xor
sub
pop
inc
(bad)
sti
sbb
shr
xchg
lock
sub
loop
in
adc
mov
mov
xchg
shr
cmp
(bad)
out
push
xchg
inc
jbe
js
in
loop
push
inc
ins
jno
mov
aad
(bad)
fnstcw
ja
test
dec
daa
sbb
dec
push
add
out
adc
xchg
mov
sahf
cmps
mov
cmp
pusha
adc
repz
pop
push
jae
ins
and
push
sub
sbb
cmp
pushw
dec
inc
push
test
mov
pop
clc
mov
xor
into
test
push
ror
xlat
mov
adc
nop
pop
in
test
sub
fisttp
pusha
mov
inc
dec
cwde
bound
jo
idiv
ds
jo
ror
jg
xchg
mov
dec
jnp
fwait
ins
mov
jmp
xor
pop
pop
and
cli
jecxz
imul
ins
inc
hlt
add
jp
adc
mov
loopne
sahf
loop
cld
enter
mov
pop
call
in
outs
shl
aam
not
sar
adc
gs
pop
xchg
mov
jmp
les
aaa
in
lods
test
jge
mov
xor
retf
xor
cld
pop
mov
cwde
pop
cs
cmps
cmp
mov
cwde
retf
loopne
icebp
push
push
jo
test
lahf
sub
bound
jge
or
out
push
pop
inc
and
fstp
inc
lahf
pop
retf
pop
retf
ret
daa
xlat
jmp
cmp
jb
xchg
fbld
js
cmps
xor
sbb
aaa
je
jl
sahf
or
or
cli
cs
ror
mov
iret
out
es
in
cwde
sbb
int3
mov
out
sahf
std
out
neg
shr
ins
sbb
enter
ss
sbb
jmp
xor
jl
loope
mov
into
test
sub
ins
adc
hlt
ss
repnz
sbb
les
pop
jae
pop
into
lds
outs
inc
pause
ds
add
lods
push
mov
mov
jle
test
shr
push
test
push
dec
xchg
sub
in
stos
mov
inc
push
inc
imul
cld
es
fadd
je
dec
sbb
call
aaa
pop
xchg
mov
jnp
sub
sbb
dec
mov
mov
bound
and
push
ins
cwde
arpl
or
mov
test
ret
push
push
inc
jb
data16
stc
(bad)
mov
cli
adc
sub
repnz
push
push
dec
xchg
(bad)
and
dec
xor
mov
sub
sbb
call
xchg
dec
push
pop
aam
cmp
or
inc
dec
xchg
inc
iret
pop
fs
test
mov
sbb
inc
mov
aad
xchg
xchg
or
mov
add
jmp
pop
aam
pop
xor
mov
mov
fist
cmp
sbb
and
fstp
sub
pop
push
add
arpl
rol
aam
or
jg
jge
int3
mov
jle
ja
xchg
outs
sbb
pop
not
jp
lds
lahf
fst
fstp
push
sar
dec
or
inc
mov
push
lods
ret
push
push
mov
jmp
mov
push
cmps
nop
arpl
ja
fld
push
ja
mov
adc
fmul
lea
push
inc
test
out
(bad)
int3
or
shr
mov
push
inc
xchg
in
repnz
lods
xchg
arpl
xor
cmp
enter
xchg
xchg
pop
push
fwait
int
xchg
jmp
push
(bad)
jg
mov
shr
loopne
jnp
outs
mov
and
push
ss
push
pop
out
mov
fs
bnd
leave
sub
push
xor
mov
cmp
out
inc
pop
(bad)
mov
inc
sub
std
jae
div
and
jns
jns
outs
xlat
popf
ds
sub
cmp
xor
das
loopne
lods
movs
mov
sahf
inc
call
stos
test
fldenv
push
fist
and
pusha
movs
loop
mov
call
fmulp
lods
lock
test
add
movs
push
call
mov
dec
and
rcr
push
fsub
adc
das
imul
rol
add
outs
scas
pop
adc
jmp
jmp
(bad)
sar
mov
inc
outs
shl
movs
xchg
xchg
ins
jno
push
rcr
mov
hlt
test
psrad
sbb
sub
out
bound
sbb
jmp
add
repnz
mov
arpl
scas
bound
repz
xor
mov
adc
cld
mov
mov
jo
pop
mov
push
es
jbe
add
jno
and
mov
mov
jb
dec
mov
icebp
inc
pushf
rol
or
mov
sub
das
(bad)
mov
lods
push
mov
dec
sub
mov
xor
mov
cld
cmp
xor
xchg
or
outs
cmp
xor
call
cmps
sub
icebp
jp
enter
cld
add
das
dec
pop
dec
call
mov
icebp
test
or
push
(bad)
fcomi
(bad)
cmp
imul
ret
jae
and
dec
mov
inc
pop
repnz
mov
fldcw
cmp
xchg
and
icebp
lea
imul
popa
cld
sbb
fidivr
mov
mov
clc
inc
mov
mov
stos
rcr
daa
pop
jl
fcomp
and
sbb
add
scas
out
lods
jns
sbb
adc
push
and
es
(bad)
fidiv
sub
rol
sbb
xor
(bad)
push
push
mov
sbb
adc
sub
xchg
scas
xor
and
ret
movs
cmp
addr16
loop
aas
push
and
shl
in
icebp
adc
sar
xor
mov
loopne
es
out
mov
(bad)
in
dec
jbe
(bad)
xchg
repz
jg
je
inc
in
rcl
les
xor
aaa
pop
pop
mov
dec
sub
ficomp
mov
adc
je
fisttp
aas
add
xor
cld
call
fidivr
ret
fcmovbe
rcr
outs
fist
dec
dec
ds
push
call
add
mov
aas
add
add
clc
or
jo
xchg
xchg
popf
in
mov
jnp
pusha
aad
and
mov
movs
das
jp
dec
sbb
and
cmp
cli
scas
fcomp
and
test
mov
xor
test
xor
stos
shl
jno
add
pop
ins
mov
pop
fcomp
xor
inc
ja
sub
jecxz
fs
and
mov
cmp
pop
fisubr
sbb
mov
stos
sbb
call
ss
inc
shl
mov
(bad)
and
dec
(bad)
out
(bad)
mov
add
sbb
sbb
test
pop
test
dec
stos
and
dec
mov
inc
inc
jno
jmp
xlat
cwde
ds
movs
jmp
inc
and
and
cmp
shl
enter
adc
cmp
stos
jmp
add
out
std
shr
cmp
in
movs
aad
enter
(bad)
cld
(bad)
fisttp
je
loopne
or
repz
gs
aam
mov
xor
push
jecxz
xlat
mov
icebp
xchg
xor
sbb
gs
outs
cmp
mov
mov
xchg
pushf
adc
jle
lods
std
mov
js
loope
das
push
fist
jl
jnp
outs
jl
add
mov
(bad)
mov
cdq
adc
ja
js
mov
xor
mov
jnp
out
mov
inc
outs
lods
das
or
xor
ss
inc
dec
cmp
in
sahf
scas
pop
xchg
xor
nop
(bad)
adc
jle
out
xor
jmp
pop
loopne
add
addr16
hlt
xchg
mov
call
ins
dec
jnp
sbb
stc
test
sbb
sti
xlat
sbb
mov
mov
aaa
out
movs
add
and
push
int
repz
add
shl
imul
aaa
mov
add
mov
xor
test
data16
cmp
mov
dec
repz
jo
cmc
scas
sub
js
dec
pop
dec
xchg
pop
stc
cs
push
pop
shl
jns
dec
dec
pop
sbb
aam
push
or
inc
pop
xor
dec
movs
call
bnd
add
mov
shl
loop
je
pop
and
jb
sub
and
data16
sti
jle
int
rcl
lahf
adc
fisub
js
xor
out
std
adc
inc
or
push
inc
or
ret
sbb
jbe
movs
cmp
push
jle
add
sbb
mov
aaa
mov
out
xchg
outs
outs
test
and
inc
jmp
add
adc
jae
push
xchg
aad
xor
daa
sub
xchg
xchg
xor
push
int3
out
ins
mov
add
lea
cwde
add
cwde
jp
clc
push
or
fisubr
ja
out
arpl
sub
jo
mov
push
pusha
into
pop
mov
jg
addr16
push
adc
movs
or
movs
mov
inc
aam
repz
xor
mov
cmp
bound
popa
cmp
lds
dec
mov
pop
cli
gs
xchg
test
aaa
push
(bad)
loop
adc
popf
outs
out
push
cmp
jns
ss
push
enter
dec
test
push
pusha
mov
stc
leave
pushf
dec
test
fsub
xchg
jp
dec
pushf
add
push
push
call
pushf
ret
xchg
push
add
jmp
xchg
adc
push
outs
cmp
icebp
daa
push
rcl
dec
icebp
ja
cmp
aas
and
sbb
pop
pop
cmp
mov
jmp
cmovp
sub
xor
data16
sbb
bound
xlat
fistp
fst
imul
mov
repnz
inc
(bad)
ret
pop
inc
pop
int
pop
(bad)
pop
retf
into
xchg
aaa
std
and
mov
shl
lock
out
xor
cld
mov
sahf
sub
push
xlat
lock
mov
jp
xchg
sbb
push
test
mov
cmp
inc
mov
jge
dec
or
fsubr
imul
cmp
test
cmp
or
outs
je
dec
movs
sbb
clc
retf
add
mov
sar
std
das
cld
and
loope
test
aam
mov
mov
xchg
jbe
aaa
mov
std
push
pusha
inc
cmp
movs
in
sbb
std
addr16
retf
or
movs
scas
adc
mov
jnp
lods
xlat
in
pop
lods
fld
mov
js
sbb
mov
or
mov
(bad)
push
sub
ret
dec
es
push
mov
sbb
jno
dec
pop
jmp
add
popa
mov
mov
jnp
mov
popa
ret
rcl
jl
addr16
aas
push
cmps
fdiv
cmp
xor
cs
xor
mov
call
jb
fs
add
cmps
cmps
movs
sbb
xor
xor
clc
and
add
pushf
xor
mov
test
xchg
mov
ret
adc
xor
iret
mov
pop
jecxz
jmp
loope
ficom
xchg
cli
clc
jne
mov
xchg
pushf
xchg
(bad)
icebp
pop
std
sti
scas
into
pop
mov
or
(bad)
enter
ja
popa
mov
sbb
inc
add
jnp
fs
push
jmp
les
jl
icebp
adc
or
add
fs
add
mov
pop
add
test
sbb
div
sub
push
cmps
xlat
and
mov
sub
cwde
loopne
out
fidiv
test
movs
push
cmp
dec
lods
fld
repz
xchg
push
shl
mov
xor
and
and
sbb
jne
imul
push
adc
xchg
popa
cmps
nop
in
movs
jnp
mov
fcom
adc
fistp
test
out
or
jae
sub
xlat
les
sub
cmp
leave
mov
ins
pusha
pop
adc
es
add
cmp
jns
sub
xchg
imul
lea
test
or
dec
jp
dec
mov
or
gs
mov
push
sbb
xor
cmp
int3
les
cmp
mov
cmp
sahf
push
stos
sub
mov
stc
iret
cmc
outs
xchg
scas
in
or
mov
mov
aad
(bad)
fmul
out
test
pushf
les
retf
sub
push
arpl
call
xchg
or
mov
add
fmul
pushf
stos
clc
in
les
push
pop
bound
and
pop
sbb
ds
dec
xchg
dec
mov
xor
adc
cdq
cmps
in
aam
xchg
out
sub
repz
call
fimul
(bad)
std
cli
mov
xchg
push
ror
add
ret
mov
push
inc
mul
inc
test
les
xchg
movs
pop
push
push
ss
(bad)
mov
leave
sub
pushw
das
es
(bad)
into
fld1
call
sbb
int
sti
add
xchg
and
inc
xchg
mov
xlat
pop
or
push
cmp
sbb
pop
xor
call
or
mov
or
mov
add
das
sbb
outs
ins
aaa
leave
pop
jg
popf
jge
popf
in
cmps
cmp
loope
sub
fldcw
daa
ret
data16
ds
and
fsub
gs
mov
mov
fs
xchg
les
sti
mov
data16
adc
jae
jecxz
jmp
cli
bound
jle
xor
and
pop
pop
jnp
push
test
sub
dec
xor
imul
push
fwait
cmp
adc
mov
sbb
or
int3
(bad)
jp
ins
sar
cli
or
cwde
outs
or
out
pop
popf
adc
test
push
(bad)
jmp
dec
dec
rcr
inc
ficomp
aaa
ja
mov
mov
ja
jne
lock
mov
mov
xor
cmps
mov
pop
mov
ss
push
jle
and
inc
and
pop
mov
add
shl
and
fidivr
es
xchg
sbb
movs
jp
neg
(bad)
retf
outs
cmp
dec
ja
cli
std
out
inc
dec
dec
repz
and
mov
mov
mov
mov
jmp
(bad)
repnz
ins
or
mov
add
mov
and
adc
dec
xor
iret
or
shl
scas
scas
mov
outs
shr
xchg
es
lea
xchg
adc
mov
gs
mov
xor
loope
sbb
cli
into
sub
(bad)
lods
or
push
in
add
sub
mov
lods
mov
adc
call
in
outs
or
cmp
adc
mov
call
add
jns
dec
imul
test
cmp
popf
movs
jo
jbe
aas
sub
sub
jmp
sub
scas
ja
adc
into
sub
jb
mov
fwait
xchg
push
inc
in
movs
sub
mov
stc
mov
stos
leave
push
xor
test
pushf
(bad)
jg
loopne
loopne
pop
rcl
pop
and
sbb
lock
add
das
cmc
xchg
lods
push
fild
and
xchg
aad
outs
sub
pusha
scas
or
in
dec
cmps
push
iret
les
xchg
jecxz
jb
repz
cli
mov
mov
(bad)
data16
fdivr
test
dec
aaa
out
adc
gs
fidivr
(bad)
push
adc
aam
sub
rol
inc
sub
fucom
xchg
pop
popa
ret
ins
addr16
sbb
jl
jnp
mov
out
pusha
das
pop
and
mov
mov
nop
lods
mov
ins
cmp
inc
hlt
inc
test
cld
add
movs
jecxz
cmps
adc
cli
ret
call
aad
cmc
dec
aaa
rol
rcl
inc
or
cmp
clc
int
into
cmp
push
cmps
fisttp
fadd
out
xor
mov
ja
fmul
imul
push
pop
ins
xor
mov
fwait
shr
jle
bound
mov
out
(bad)
sbb
mov
je
mov
mov
pop
dec
(bad)
loopne
retf
cmp
xchg
sbb
or
sahf
(bad)
fisubr
inc
retf
(bad)
loopne
fxch
xchg
mov
xchg
inc
sbb
lahf
add
add
movs
and
js
xor
fdiv
mov
scas
mov
lahf
push
add
adc
jo
mov
and
shl
fbld
add
out
mov
add
mov
movsx
or
add
enter
dec
in
loop
dec
jp
inc
mov
pop
sahf
cmc
xchg
aad
ins
mov
cmc
or
neg
mov
dec
(bad)
push
sbb
pop
add
mov
jno
jo
push
push
push
or
mov
mov
and
icebp
pop
push
cmp
stos
into
push
dec
jnp
out
jo
dec
add
mov
loopne
fst
dec
(bad)
popa
iret
jmp
add
adc
push
adc
bound
jge
xor
out
cmp
sbb
inc
inc
bound
jp
cmp
pop
mov
xchg
dec
aas
add
imul
mov
adc
or
ret
out
repnz
(bad)
cmps
out
and
sahf
jle
jbe
jl
inc
cmps
inc
jns
lds
jecxz
inc
movs
push
sub
cli
adc
stos
mov
in
daa
fild
or
leave
dec
push
inc
push
imul
stc
je
retf
xor
icebp
add
cmp
outs
clc
add
jbe
lock
fstp
mov
cmp
dec
push
push
call
movs
cld
lods
sbb
jo
adc
pop
in
in
push
mov
pop
movs
dec
cmps
ja
xchg
les
lahf
in
mov
in
lds
add
xchg
lods
dec
cli
nop
mov
xor
and
test
add
or
add
xchg
cmps
enter
mov
push
adc
sub
lahf
outs
lock
mov
les
adc
push
fwait
xor
add
ret
adc
pop
call
xlat
ins
fsub
jge
push
cmp
(bad)
movs
cmp
xchg
into
mov
dec
mov
inc
mov
inc
cmc
adc
(bad)
fild
sub
test
mov
retf
popf
pop
and
icebp
test
adc
xlat
add
sub
call
aas
and
mov
jmp
int
push
icebp
sar
cmc
mov
aaa
xor
mov
stc
call
data16
test
out
cs
je
adc
push
fmul
adc
int3
fld
arpl
sti
retf
push
mov
cld
cmp
inc
mov
add
lock
movs
xacquire
and
stos
stc
mov
mov
shr
jb
and
adc
popa
sub
ret
and
or
push
sbb
icebp
lahf
faddp
and
cli
(bad)
icebp
inc
enter
add
mov
clc
push
fadd
xlat
outs
fstp
popa
data16
jbe
or
pop
xchg
cdq
or
dec
dec
sub
jecxz
push
ret
pop
stos
lds
mov
arpl
push
std
pop
nop
pop
cmps
push
aam
(bad)
mov
and
mov
sub
hlt
ret
loop
fsin
jmp
cmps
dec
je
pop
icebp
rol
inc
mov
pop
sub
dec
mov
loopne
jbe
ds
movs
and
cmp
repnz
(bad)
addr16
in
mov
test
or
xor
out
sub
dec
push
adc
(bad)
xor
sub
dec
xlat
clc
pop
imul
popf
jo
sahf
pop
ja
fidivr
test
es
xchg
dec
cmp
lahf
sbb
rcr
mov
xor
aad
adc
loope
inc
mov
inc
push
addps
and
sar
into
add
push
mov
mov
or
sub
cs
mov
and
sbb
cmps
loop
and
loopne
push
jnp
fistp
lods
cwde
adc
fldcw
stc
or
mov
ds
jecxz
shl
jb
inc
and
arpl
add
popa
mov
pop
scas
int
cdq
fbld
pop
jno
into
jmp
loopne
and
add
inc
inc
cld
mov
fcmovnu
fiadd
push
mov
or
pusha
lahf
dec
loop
dec
mov
addr16
popf
in
loopne
addr16
mov
jp
stos
repnz
dec
ins
fwait
mov
and
repnz
xchg
adc
popa
rcl
lock
mov
pop
or
retf
push
jbe
faddp
pop
into
sar
or
and
jb
jl
ds
cmp
and
retf
frstor
xchg
or
pop
inc
movs
push
cmp
dec
sbb
jp
or
push
or
dec
lahf
cmp
lods
ss
pop
loop
mov
pop
mov
shl
cmps
jg
xor
cmp
rcr
inc
arpl
adc
sar
ds
inc
mov
jle
add
xchg
mov
sub
pop
ds
xor
rol
imul
retf
leave
in
sbb
stos
jbe
cld
jnp
dec
push
pavgb
out
loop
out
sti
ins
pop
(bad)
jmp
xor
std
sbb
mov
cld
push
adc
imul
mov
mov
ror
bound
and
jp
inc
push
adc
add
cmc
mov
stos
push
xlat
sbb
xor
pop
lods
inc
xchg
pop
sub
inc
sub
add
(bad)
pop
(bad)
jo
push
int
push
retf
shr
xor
xchg
add
sbb
inc
jmp
push
pop
out
sbb
gs
jp
cmp
in
inc
xor
inc
sbb
xlat
inc
lods
and
jle
stos
movs
in
pop
test
add
dec
scas
mov
lods
call
mov
jg
mov
popf
stos
mov
dec
iret
(bad)
xchg
js
ins
inc
outs
mov
loopne
pop
jmp
shl
mov
sbb
cmp
add
les
clc
les
aaa
push
out
xor
out
inc
mov
mov
mov
test
mov
es
loop
(bad)
lods
cs
ins
or
test
shl
fst
(bad)
aad
retf
loop
enter
or
retf
mov
(bad)
lods
adc
jl
mov
and
ss
mov
jg
inc
fs
xor
pop
into
mov
add
lds
mov
cmp
in
js
xor
test
in
push
shr
mov
test
test
imul
mov
lahf
adc
jbe
je
or
fimul
movs
and
cmp
add
lods
mov
dec
add
gs
cmp
enter
sbb
or
stc
push
or
jp
mov
aaa
mov
std
xchg
jg
aas
(bad)
sub
xchg
xor
fs
jmp
mov
pushf
ds
in
out
xor
popa
idiv
and
retf
inc
inc
fs
cmp
bnd
push
mov
sbb
push
pop
pushf
ret
loopne
jne
add
mov
push
pop
pusha
and
add
into
inc
ret
inc
push
pushf
cmc
inc
rol
inc
mov
sub
(bad)
fcomi
dec
inc
push
mov
sub
jnp
int3
arpl
ins
mov
fs
dec
std
cmove
xchg
xor
xor
and
push
mov
mov
xor
fcomp
dec
fldenv
inc
fs
and
dec
test
in
les
in
inc
jmp
(bad)
ficomp
lods
add
mov
and
mov
in
iret
pop
pop
test
xchg
aaa
xchg
xor
loop
daa
pushf
mov
stc
lods
dec
aam
adc
rcr
jg
imul
je
mov
test
inc
mov
sub
xor
jg
cdq
mov
js
push
mov
dec
(bad)
add
inc
mov
jecxz
rep
cmp
xor
out
inc
pop
and
fwait
inc
inc
jle
data16
push
dec
add
sar
arpl
lea
push
ins
leave
push
pop
hlt
call
mov
sbb
cmp
jns
cmp
inc
inc
or
cdq
jmp
or
daa
outs
imul
mov
scas
sub
sbb
sub
call
push
loop
frstor
not
ja
hlt
das
and
iret
stc
stc
mov
mov
mov
add
leave
xchg
fs
or
loop
scas
lea
mov
cmps
xchg
cmps
popf
dec
aaa
enter
add
mov
test
sbb
(bad)
retf
icebp
sub
loope
(bad)
and
test
cmps
mov
js
mov
pop
gs
add
sub
rcl
jae
sub
neg
cmp
nop
call
into
sbb
ss
iret
enter
gs
inc
adc
dec
shl
jge
aas
cmp
sbb
adc
icebp
outs
push
stos
shl
adc
fadd
mov
lds
mov
jne
jb
ret
loopne
push
pop
sbb
push
or
mov
clc
mov
pop
dec
mov
ins
jae
cmp
xchg
adc
xchg
vminss
jge
ret
call
add
xchg
ja
loope
cmps
pop
mov
pop
or
pop
stos
stc
outs
js
push
ret
jbe
mov
dec
lods
mov
fdiv
pop
mov
dec
sbb
and
repz
mov
fistp
mov
sbb
dec
or
cmp
sti
sbb
dec
xor
ret
fsubr
jp
cdq
push
in
and
cmc
test
shr
mov
imul
out
xchg
out
stos
xchg
sub
sub
cmp
aam
retf
fnstcw
test
scas
rcr
pop
js
mov
cld
push
mov
iret
pop
jg
aaa
xor
adc
imul
and
mov
into
lods
ins
in
jg
dec
xor
test
and
jmp
in
jne
jbe
jb
pusha
inc
push
neg
xchg
or
iret
push
(bad)
(bad)
popf
cs
inc
jb
xchg
adc
jb
out
inc
inc
add
mov
rcl
and
mov
je
adc
mov
push
cli
mov
in
cmps
add
jns
clc
sbb
inc
dec
xchg
cmp
pop
jae
fwait
ss
or
jne
push
push
or
push
inc
jnp
aas
sub
fstp
add
add
rol
iret
fsubr
fwait
or
jno
cmps
into
sbb
rcr
cdq
mov
ins
aaa
xor
jno
dec
jnp
test
loop
retf
add
pushf
outs
iret
xchg
add
push
pop
loopne
xor
cwde
push
and
dec
mov
sub
push
push
fnsave
fnstsw
mov
adc
jb
ss
cmp
das
mov
outs
dec
dec
mov
sbb
mov
mov
xchg
mov
fs
xchg
retf
mov
or
adc
das
outs
ffreep
and
shl
dec
add
xor
iret
in
call
adc
push
xchg
fwait
imul
and
and
dec
push
xchg
jmp
fs
aas
mov
push
cs
sub
sbb
out
jnp
cli
xor
push
push
sbb
push
jne
pop
add
mov
mov
push
cwde
hlt
enter
inc
mov
cmp
mov
repz
mov
div
sub
lds
and
pusha
xor
es
sbb
add
(bad)
leave
dec
leave
fadd
jle
push
ret
mov
xor
and
xor
jnp
add
rcl
or
cmp
fwait
jbe
outs
dec
add
pop
push
scas
imul
sub
mov
nop
pop
inc
or
in
and
jle
mov
jbe
fsubr
(bad)
pop
push
xor
xchg
and
movs
mov
mov
mov
movaps
mov
cmp
or
iret
lods
les
add
pop
push
jg
and
mov
push
pop
icebp
jae
dec
enter
push
mov
iret
stc
movs
mov
ret
jecxz
lock
mov
ja
in
jns
pop
or
inc
add
jnp
fadd
les
rcr
pop
shl
lahf
sbb
mov
cmp
xchg
loopne
imul
frstor
xchg
(bad)
out
add
(bad)
ror
jge
(bad)
cdq
sub
neg
mov
push
dec
push
enter
hlt
aaa
push
(bad)
pop
jp
movs
aam
fadd
(bad)
jns
or
push
or
adc
(bad)
sub
push
xchg
sbb
sahf
lods
xor
jns
xor
mov
add
jecxz
jp
movs
adc
mov
pop
push
lahf
dec
dec
xor
mov
sub
test
cmp
stc
stc
fist
sahf
inc
stos
xlat
test
leave
dec
dec
jle
jle
or
pop
(bad)
xor
outs
cld
in
add
and
xchg
ret
sbb
jmp
push
adc
stos
and
inc
or
or
in
dec
rcl
mov
push
mov
mov
pop
rcr
pop
hlt
shl
fld
into
pop
push
cmps
and
or
fadd
cdq
aam
inc
xchg
xor
mov
in
inc
mov
test
ret
or
add
in
(bad)
jle
jb
retf
xchg
fcomp
push
das
inc
imul
jmp
shl
(bad)
vprotd
ins
mov
cmp
das
or
sahf
mov
leave
push
sub
jmp
mov
or
pop
inc
jno
and
iret
int
es
shl
imul
fwait
jp
shl
gs
data16
add
cmp
stc
pop
js
je
mov
mov
in
aas
mov
sub
pushf
mov
xchg
fsubr
pop
fist
ins
fmul
xchg
xchg
mov
lea
sbb
sbb
cdq
je
add
cmps
movs
inc
dec
pusha
scas
jnp
sar
in
sub
or
fldcw
xchg
out
jge
cmp
imul
sub
movs
out
inc
ins
dec
mov
aam
ss
mov
adc
nop
mov
mov
inc
psllq
sub
cdq
dec
sbb
fcomip
mov
mov
nop
test
fisub
dec
and
ret
xor
dec
dec
outs
adc
or
stos
or
or
add
sar
mov
cmp
into
mov
xchg
lds
and
out
mov
es
movs
xchg
aam
push
ja
pusha
ficom
call
or
dec
mov
std
adc
call
or
ss
and
push
popf
mov
mov
mov
bound
cwde
and
call
dec
cs
inc
fs
bound
mov
inc
nop
dec
xor
xor
(bad)
jmp
push
add
cld
push
add
xchg
sub
mov
cmp
icebp
mov
cdq
iret
adc
adc
pop
aad
dec
jle
mov
jle
and
pop
mov
mov
and
and
sub
xor
cmc
scas
push
sbb
loope
repnz
sbb
mov
add
test
jbe
jp
inc
xchg
xchg
js
mov
cmp
pop
out
sub
je
retf
push
pushf
xor
push
sar
call
adc
outs
call
cli
mov
in
das
jne
inc
sub
mov
aad
mov
jae
imul
enter
or
iret
pop
pop
xor
ss
sti
or
mov
add
imul
or
scas
jne
sbb
hlt
mov
jge
dec
clc
shl
imul
push
mov
cmps
rol
repnz
mov
push
stc
cwde
mov
inc
jno
push
imul
rol
les
mov
fs
das
pusha
mov
sub
cmp
lea
jmp
mov
jnp
mov
push
adc
add
aad
and
addr16
fidiv
ret
adc
lds
sub
jae
in
je
lock
test
(bad)
jbe
ins
shr
sub
(bad)
push
test
jge
ss
imul
add
xchg
add
sub
sub
xchg
mov
(bad)
mov
fs
sar
cld
mov
jmp
fdivr
adc
pusha
or
mov
dec
jle
xchg
xchg
lods
or
stc
jge
ins
adc
pop
(bad)
retf
data16
cmp
loopne
inc
mov
xchg
retf
push
push
imul
xchg
lds
shl
cmps
lods
push
mov
inc
sub
call
out
dec
cmps
add
fprem1
mov
dec
cmp
lods
imul
dec
cs
sti
xchg
jns
sbb
xor
sbb
sbb
inc
fmul
push
lahf
jle
sub
pop
fcomp
inc
pusha
lea
adc
push
sbb
mov
adc
mov
call
pop
rcr
repnz
jp
cs
inc
mov
test
pop
shl
jmp
shr
mov
cmps
push
sub
pop
mov
cmps
fldcw
cdq
pusha
mov
or
test
cli
xchg
test
dec
mov
push
push
or
(bad)
xchg
retf
(bad)
(bad)
and
cmp
jb
call
push
cld
jnp
sub
mov
add
popf
dec
xor
jecxz
imul
mov
ja
clc
stos
adc
push
jno
push
and
test
cld
inc
ins
adc
and
xor
stc
xchg
out
cs
pop
popa
mov
dec
jmp
gs
cwde
into
pop
test
mov
adc
outs
pop
in
xchg
and
jle
cdq
xor
scas
or
mov
mov
xchg
mov
stos
cmc
xor
outs
mov
mov
push
pop
push
inc
(bad)
gs
inc
mov
out
clc
xchg
or
mov
xor
test
loopne
sbb
ret
sbb
ror
cmp
(bad)
das
pop
and
adc
and
cmp
or
lea
ins
or
rol
jge
or
xchg
into
sbb
call
js
pop
xor
dec
call
xchg
xchg
or
inc
fist
cmp
xchg
mov
retf
sbb
jmp
inc
inc
xor
pop
retf
inc
adc
ja
mov
sbb
ins
and
(bad)
xlat
add
xor
push
xor
(bad)
push
fidivr
stos
loope
aaa
retf
aaa
stc
mov
and
push
pop
movs
rep
adc
jl
jne
aam
mov
fimul
mov
lahf
imul
xchg
mov
cmps
icebp
cli
mov
icebp
dec
sahf
(bad)
fld
iret
cmp
sub
fdiv
adc
punpckhwd
sti
call
ins
mov
mov
push
mov
scas
movs
ins
retf
add
mov
jle
adc
xor
ss
ins
lea
inc
add
setae
mov
pop
rol
jle
retf
in
mov
dec
vunpcklps
fld
mov
and
pop
clc
(bad)
in
mul
jmp
jecxz
retf
pop
hlt
into
cmp
add
icebp
push
stos
add
fmul
pop
sbb
out
mov
dec
imul
test
sbb
cmp
xor
fwait
test
mov
add
xor
mov
inc
mov
mov
(bad)
in
sub
into
jp
inc
mov
pop
mov
ins
xchg
sbb
out
and
test
or
lea
cmp
mov
sbb
(bad)
lock
rcr
movs
fs
(bad)
xor
xchg
xchg
add
loop
jmp
lahf
xchg
pusha
xor
xchg
cli
jecxz
sbb
or
call
jne
ret
xor
mov
cmp
ja
das
icebp
hlt
xor
jns
int3
pop
xor
popa
inc
sub
call
xchg
mov
push
les
fist
out
ret
repz
add
xor
inc
inc
repnz
imul
adc
call
sbb
(bad)
aas
jmp
scas
sbb
xor
push
ret
inc
cmc
sub
scas
or
lods
je
adc
xchg
stos
adc
inc
enter
sub
movs
aas
mov
mov
add
xchg
cmp
cdq
lods
fisttp
and
mov
mov
repz
dec
and
mov
aad
fsubr
mov
xchg
nop
sbb
mov
sub
shr
inc
imul
xchg
push
dec
dec
test
sub
sbb
cdq
cdq
xor
push
test
sub
pusha
je
pushf
lds
xor
sbb
imul
mov
dec
push
(bad)
push
stc
sub
adc
loope
mov
sbb
or
pop
dec
ins
xor
and
repnz
in
in
(bad)
stos
shl
and
push
push
mov
lds
das
cmp
adc
pop
pop
inc
mov
loopne
sub
dec
sub
stos
nop
cmp
test
xchg
add
xor
repnz
pop
div
mov
(bad)
jo
call
pop
xchg
call
push
gs
and
enter
xor
stc
adc
out
jge
mov
pop
pop
and
pop
adc
sar
push
xlat
push
push
movntps
inc
emms
(bad)
push
or
mov
test
inc
xor
jnp
lea
gs
xor
data16
mov
stos
sub
cmps
mov
icebp
popa
xchg
ficomp
test
add
xor
in
or
(bad)
push
push
sar
jnp
icebp
pop
jmp
data16
cwde
sbb
rcl
(bad)
adc
adc
movs
mov
cmp
fldenv
fsubr
xor
cmp
fwait
jbe
stos
mov
cs
ret
inc
push
push
and
data16
push
sbb
imul
lea
movs
repnz
movs
shl
push
fist
add
ret
scas
retf
loopne
add
in
cs
xlat
retf
dec
mov
or
mul
imul
or
fld
ja
adc
stos
cmp
sub
stos
adc
loopne
mov
push
enter
sahf
adc
add
dec
shl
int3
mov
mov
scas
or
xor
rcl
test
dec
xchg
test
bound
xor
sub
xchg
dec
retf
xor
dec
pop
push
inc
mov
inc
loopne
xor
test
loope
es
cwde
push
inc
popf
ja
jns
fnstenv
push
xchg
rcl
data16
mov
dec
nop
cwde
jecxz
mov
add
cmc
jmp
(bad)
retf
dec
sub
add
cmps
(bad)
dec
lock
add
ja
retf
paddq
jmp
in
(bad)
aad
xchg
mov
clc
or
mov
inc
lods
dec
sbb
mov
sbb
aas
(bad)
clc
xchg
jne
pop
(bad)
cmc
mov
mov
xchg
push
jne
ja
pop
sbb
jnp
fistp
inc
lods
add
fs
mov
and
jns
cmp
jbe
pop
sbb
mov
popf
test
daa
add
cmp
jmp
mov
mov
addr16
movs
daa
sub
adc
add
in
into
call
inc
nop
push
adc
js
daa
pop
shl
mov
push
ins
adc
pop
jo
add
test
and
repz
inc
(bad)
ins
pop
rcr
cmp
cld
pop
jmp
rol
push
popf
les
fistp
ins
je
xor
mov
inc
add
xchg
in
sbb
cmps
call
push
pop
or
mov
imul
rcl
adc
push
mov
add
jle
xlat
sub
je
xchg
hlt
div
aam
inc
dec
cmc
mov
sbb
mov
dec
loope
cli
aas
push
pop
ror
pop
dec
sub
mov
ret
add
bound
adc
mov
pop
inc
or
pushf
repnz
fcmove
fsubr
add
lods
aas
loopne
lock
stos
rcl
jge
mov
mov
and
xor
repnz
jmp
das
jbe
or
or
mov
and
pop
mov
cs
mov
dec
sbb
lods
inc
loop
adc
jl
sbb
sbb
cwde
nop
call
xrelease
leave
jp
xor
push
cmp
scas
mov
mov
adc
inc
jp
clc
cdq
movs
xchg
xor
mov
add
cmps
sub
mov
ret
xor
mov
mov
xor
int
pop
je
push
xor
hlt
call
dec
jb
into
or
ret
add
test
loope
and
push
jns
add
out
cmp
xor
xchg
xor
mov
fadd
jno
lods
je
test
mov
aaa
or
inc
push
push
mov
leave
call
shl
pop
cmp
add
xchg
bound
pop
(bad)
aas
push
push
ret
stos
adc
xchg
xor
movs
outs
ja
shl
cmp
or
add
rcl
aam
ds
loop
pusha
data16
push
mov
mov
and
fwait
push
mov
xchg
dec
and
push
in
and
jp
sub
dec
pop
mov
out
and
ret
sbb
fcom
xor
fisttp
cmp
xor
mov
push
cmp
out
sbb
dec
in
inc
std
lea
inc
pop
mov
stc
int3
call
xor
jle
xlat
outs
inc
mov
xchg
daa
aaa
popa
jno
in
loope
adc
sti
aam
mov
out
cdq
jecxz
xchg
adc
or
data16
data16
cs
lock
test
or
adc
lahf
and
mov
(bad)
cmc
or
aaa
rcr
xor
pop
iret
in
sbb
lea
aaa
or
into
int3
mov
fisttp
mov
ror
int
stos
test
jae
mov
in
and
sbb
int
cmps
mov
jo
out
imul
xlat
inc
into
and
shr
popa
in
data16
mov
or
push
iret
mov
daa
jnp
rcr
cmp
mov
or
pop
scas
pushf
jnp
and
sbb
mov
retf
inc
hlt
loopne
stc
and
sbb
lds
mov
cmps
jbe
cmp
sub
bound
mov
mov
rol
pushf
std
sub
and
xchg
inc
inc
movs
cmp
mov
ss
mov
cmc
push
fnsetpm(287
gs
iret
xor
nop
loop
cmp
adc
ret
xor
xchg
xchg
jle
scas
inc
or
mov
jne
push
jmp
hlt
sbb
xchg
sbb
cld
xchg
dec
push
es
adc
loopne
in
jnp
xor
sbb
dec
fbld
dec
mov
xchg
lods
rcr
push
cmp
and
ds
cmp
jge
and
sub
jp
mov
add
sub
in
add
add
mov
jbe
sub
mov
in
pop
dec
and
(bad)
nop
test
aaa
or
add
sar
(bad)
sub
or
mov
xchg
shl
xchg
dec
xchg
pushf
jae
loop
mov
sbb
lds
xor
xchg
clc
mov
jns
movs
add
mov
cwde
pushf
add
add
adc
imul
out
call
or
mov
or
push
pop
fcom
(bad)
(bad)
fwait
sar
addr16
add
xchg
lahf
ror
retf
xor
jl
xchg
inc
repnz
out
dec
and
cld
pushf
jmp
ds
fsub
loop
jb
dec
bound
stc
xlat
sbb
adc
adc
pop
mov
retf
adc
jnp
xchg
leave
fisub
call
addr16
adc
xor
or
sbb
lods
cmp
cmps
xchg
mov
pop
test
mov
imul
sub
and
icebp
cmc
dec
aad
(bad)
xchg
popa
adc
mov
loopne
and
cli
dec
test
or
pop
je
(bad)
dec
dec
test
push
mov
loope
fldenv
mov
fmul
in
ss
dec
mov
cmps
fcom
mov
fisttp
push
imul
jbe
repnz
lock
mov
jle
cwde
fmulp
scas
out
pop
add
lea
clc
inc
pop
and
pop
xchg
xchg
out
cmp
jbe
xchg
mov
imul
loop
push
and
cmp
aam
sbb
or
sbb
out
mov
adc
adc
xchg
test
imul
pop
in
lea
rol
pop
sub
shl
movs
dec
mov
daa
jb
or
pop
imul
cmp
ret
cmc
out
das
push
fdiv
adc
shl
aaa
mov
cmp
jge
mov
ret
aam
sub
mov
jne
cmp
push
fmul
or
push
in
mov
xor
add
imul
xor
iret
pop
fidiv
xchg
in
or
add
adc
push
loopne
sti
jmp
add
mov
mov
push
sub
sahf
adc
je
pushf
cli
jbe
jg
sub
push
or
inc
ins
cmps
lahf
outs
dec
add
xchg
test
adc
lea
push
jo
test
sbb
xlat
cmps
mov
fs
cmp
(bad)
mov
sub
les
out
lahf
stos
mov
and
pop
mov
xor
in
cwde
jmp
loope
out
cwde
(bad)
js
xchg
inc
or
push
add
inc
mov
cmps
inc
test
jne
pop
push
sub
sub
imul
jmp
and
fdivp
inc
mov
cmc
adc
out
pop
or
lods
not
test
push
adc
jnp
mov
push
sub
test
pop
pop
out
mov
bound
jne
fdivp
ret
cmp
movs
xchg
cmp
iret
adc
popf
cmps
test
cmc
das
fsubr
sub
loope
movs
(bad)
push
or
into
cs
sub
push
test
out
in
xor
cmp
xlat
jnp
stc
mov
hlt
repnz
mov
jns
scas
xor
mov
scas
test
push
cmps
fwait
mov
and
jg
loope
leave
call
or
inc
test
in
push
shr
out
out
mov
pusha
mov
xchg
mov
or
sti
mov
inc
cwde
sub
inc
ror
lods
pop
jle
mov
jmp
mov
pop
sub
lods
mov
push
mov
xor
cmp
and
sbb
pop
sub
add
js
ds
mov
popa
cmc
mov
cmp
mov
sbb
push
(bad)
test
ds
clc
aaa
out
hlt
add
inc
fcomp
cmp
shr
imul
mov
daa
sub
inc
jmp
mov
cli
test
jo
sbb
cmc
rol
mov
xchg
cmp
adc
imul
mov
imul
(bad)
add
es
lock
cmp
xor
sub
sbb
je
stos
cs
sub
push
(bad)
mov
in
xchg
dec
mov
xlat
(bad)
jle
dec
sti
ins
scas
cmp
mov
xor
repnz
add
mov
ficom
ins
push
loop
mov
call
cmp
sbb
xor
xlat
pop
xor
or
jle
aam
or
mov
xchg
pop
fbstp
fdivr
xchg
daa
loopne
adc
pusha
mov
push
inc
xlat
fadd
cdq
add
push
lock
mov
adc
mov
jo
jns
pop
add
or
inc
dec
jno
push
dec
inc
leave
cwde
es
jp
xchg
popa
dec
mov
mov
loope
addr16
inc
mov
mov
pop
sub
daa
retf
xchg
ret
daa
(bad)
xlat
dec
mov
adc
retf
or
sbb
int3
xchg
(bad)
std
add
sbb
or
pop
cwde
mov
fld
or
push
mov
push
bound
jl
dec
inc
hlt
cwde
loop
(bad)
test
inc
cmc
dec
cdq
repz
xlat
std
pop
jl
xchg
scas
and
mov
retf
push
xchg
dec
cmp
push
or
push
push
and
add
pusha
test
rol
in
or
call
call
pop
retf
or
push
adc
mov
cmc
push
ja
mov
in
shr
mov
jne
sbb
jmp
sub
das
ja
jge
mov
test
loope
adc
mov
icebp
mov
sub
(bad)
pop
inc
lea
add
aad
in
sbb
add
fwait
in
cmp
enter
out
sbb
mov
fsubr
in
cmps
fsub
sbb
pop
mov
ja
in
dec
inc
ja
fs
inc
sub
mov
sbb
mov
gs
inc
or
call
jle
fisttp
jne
cmp
stos
adc
push
pop
xor
add
icebp
jle
mov
in
leave
aad
pop
test
cmps
mov
push
jae
shr
or
dec
fs
cli
fstp
jecxz
jp
and
or
out
xchg
jp
retf
lods
jmp
cmp
aam
dec
loop
push
std
push
cld
cmp
jecxz
push
scas
cmp
fcmovb
scas
es
xchg
jmp
mov
dec
dec
dec
repnz
push
nop
(bad)
popf
dec
jno
out
xchg
jmp
pop
ds
and
mov
rol
sub
rep
punpckldq
or
jne
xchg
xor
and
sub
in
jne
sbb
push
jno
std
dec
pop
jno
cmp
aas
adc
pop
mov
sahf
xor
cld
and
daa
mov
fiadd
(bad)
aaa
lds
xor
push
sbb
sbb
mov
mov
mov
xchg
jecxz
scas
test
nop
fldenv
cmps
dec
cwde
mov
call
test
test
je
rol
arpl
(bad)
fnstcw
stos
cmp
jb
les
xchg
icebp
cli
test
mov
push
(bad)
repz
movs
dec
mov
inc
cmp
test
in
or
mul
mov
inc
aaa
cwde
mov
scas
xor
out
mov
retf
movs
push
xor
push
aaa
xor
int
push
ret
sub
aas
in
sbb
fwait
pop
dec
and
outs
xchg
iret
lds
mov
push
sub
xor
and
sbb
rcr
arpl
pop
mov
iret
pop
jo
sub
add
xchg
es
hlt
xchg
dec
jl
clc
cmp
jmp
jns
push
pop
xchg
loop
sub
aad
pop
sbb
xchg
ins
call
cmp
in
sti
sub
xchg
xchg
fld
or
xchg
pop
pusha
xor
(bad)
das
push
dec
sbb
clc
clc
test
sub
sub
rcr
xchg
js
out
icebp
inc
push
cmp
mov
mov
mov
mov
enter
inc
(bad)
and
xchg
adc
mov
imul
and
ror
das
loopne
shl
mov
ins
jo
sbb
mov
scas
push
push
mov
mov
cld
mov
cmp
es
lods
repz
push
xchg
xchg
jno
pop
cmp
cli
jecxz
call
push
(bad)
pop
lock
push
or
xchg
jg
and
inc
add
cmp
sti
adc
dec
mov
cmps
xor
cmc
mov
out
out
push
adc
pop
in
cmp
outs
xchg
xor
repz
jno
loopne
in
fwait
push
int
or
pop
xor
lahf
adc
push
bound
push
jl
call
sar
jno
xchg
mov
fwait
mov
pop
fwait
sub
in
xchg
daa
outs
ins
dec
jge
and
add
pop
dec
aaa
in
xchg
push
xchg
add
jns
loope
mov
add
lods
mov
ja
out
and
adc
(bad)
mov
mov
dec
ds
aam
xor
mov
sbb
push
pop
in
cmps
cdq
sbb
sub
xlat
pop
push
inc
test
xchg
mov
or
mov
dec
imul
retf
cmp
imul
mov
mov
es
sbb
ja
in
cmp
enter
mov
adc
xor
popa
mov
stc
fiadd
add
xchg
into
cmp
xor
loopne
lock
inc
or
cli
repz
out
jmp
mov
sub
aad
xor
mov
mov
dec
rcpps
lock
mov
add
or
jge
lds
or
mov
jp
ror
outs
movs
out
(bad)
push
retf
add
cmps
dec
adc
jg
mov
mov
inc
mov
(bad)
jb
xor
lds
push
sbb
out
and
add
fsubr
mov
inc
mov
ret
rol
leave
xchg
(bad)
ins
adc
das
mov
lods
movs
jb
pop
stc
cmp
cmp
xchg
aaa
push
mov
and
dec
loope
fwait
gs
and
inc
xor
xchg
add
cmps
popa
mov
repz
dec
add
mov
repz
push
inc
int3
scas
scas
hlt
xor
mov
sbb
mov
mov
mov
xchg
loopne
mov
mov
mov
arpl
fistp
xor
icebp
(bad)
pop
popf
es
cs
pop
cmp
add
cmp
jae
cwde
sub
pop
pop
(bad)
push
stos
loope
mov
mov
push
cdq
inc
and
fcomp
(bad)
fisubr
mov
pushf
icebp
lods
xor
adc
outs
mov
cmp
xchg
mov
neg
push
mov
jecxz
pop
and
stc
mov
int
mov
xor
mov
popa
adc
mov
jbe
out
xor
sbb
xlat
mov
out
dec
rcl
call
mov
(bad)
js
repnz
dec
bound
test
mov
or
push
dec
pop
stc
repz
pusha
mov
dec
sub
adc
fdiv
jno
bound
fucom
jge
test
mov
push
xchg
adc
or
mov
fs
jmp
add
mov
cmps
sbb
fcomi
mov
iret
dec
adc
dec
cmp
sub
or
aas
pop
and
dec
jns
cwde
add
enter
fldenv
and
jg
and
cwde
lds
cli
mov
mov
or
mov
sub
pop
int3
sub
sub
mov
and
cdq
(bad)
adc
dec
or
push
daa
in
dec
mov
popa
(bad)
(bad)
shl
retf
or
sub
push
inc
test
mov
mov
dec
das
jle
mov
xor
ficom
test
cli
mov
imul
test
popa
out
jnp
cmp
mov
add
push
xor
or
inc
clc
test
les
or
and
arpl
mov
in
out
mov
out
inc
add
test
push
adc
jp
adc
sahf
test
sar
in
js
inc
sub
mov
add
sub
js
fstp
cmp
and
fcom
mov
(bad)
in
sub
mov
dec
bound
das
xchg
jnp
aad
sbb
adc
mov
cmp
push
lock
pop
cmp
or
dec
fcom
leave
jnp
inc
xchg
mov
jnp
cwde
xchg
jb
stos
lods
fiadd
xchg
push
mov
sub
fcmovu
pop
or
lock
push
aad
shr
in
ficom
sub
gs
inc
in
ds
push
sub
test
nop
cmp
inc
mov
push
ret
and
adc
iret
aam
test
fcmovb
add
mov
nop
cmps
cmps
sahf
popa
xchg
xlat
cmp
sub
pop
xchg
jecxz
sbb
aam
icebp
div
fisttp
out
sub
add
mov
enter
push
cmp
sahf
push
les
sub
cs
jp
fmul
(bad)
ficom
iret
daa
inc
push
jle
xchg
movs
cmps
dec
mov
jge
dec
and
push
(bad)
addr16
mov
jnp
mov
movs
mov
out
cs
push
int
dec
and
mov
cmp
jne
push
imul
sahf
jno
ror
mov
imul
push
push
pop
push
ret
add
scas
fnstenv
inc
push
sub
add
pop
xor
jge
or
gs
xchg
push
aam
mov
pop
clc
or
into
xchg
sar
add
cmp
(bad)
jmp
sbb
xlat
es
mov
or
mov
call
dec
sub
jmp
dec
aad
xchg
adc
xchg
sub
jns
sub
mov
sub
in
retf
aam
jbe
imul
push
inc
data16
or
out
repnz
fisubr
push
pop
fisubr
mov
xor
shl
jmp
add
xor
sbb
cmp
jb
pop
inc
xchg
inc
dec
fimul
(bad)
stc
test
loopne
push
and
and
and
gs
push
sahf
push
or
pop
mov
(bad)
jl
sub
scas
mov
jnp
inc
mov
repnz
(bad)
loope
mov
dec
dec
lods
adc
adc
ins
wbinvd
sub
pusha
movs
in
sbb
mov
mov
cmp
dec
jo
mov
mov
fsubr
push
cmps
mov
repz
jge
dec
add
sbb
sub
xchg
test
dec
cmp
jmp
out
je
jl
and
cmc
or
mov
mov
shr
loop
movs
call
push
mov
ins
cmps
idiv
in
movs
push
stc
jae
out
pop
cmp
xchg
retf
retf
es
adc
xor
pop
gs
or
shl
sbb
(bad)
iret
fimul
sbb
xor
push
dec
cmp
pusha
nop
clc
mov
pop
adc
je
jo
imul
pop
jnp
mov
sub
cmp
jecxz
mov
mov
cmp
xor
inc
(bad)
pop
pop
(bad)
les
pushf
push
and
aad
outs
ins
mov
ins
inc
mov
rcr
sbb
(bad)
push
sub
adc
mov
pushf
sti
or
cwde
xor
lahf
jb
int
jnp
add
push
xor
xchg
sbb
pop
(bad)
mov
and
(bad)
cs
xor
mov
mov
setl
xor
rcr
retf
in
gs
xor
mov
nop
imul
mov
jg
xchg
call
dec
pop
test
and
mul
pop
dec
inc
and
stc
mov
movs
(bad)
mov
cmps
or
ret
(bad)
pusha
div
retf
test
arpl
push
mov
xchg
and
in
ins
mov
(bad)
iret
ret
dec
add
mov
xor
repz
pop
je
pushf
stc
and
mov
xor
xor
les
xor
push
mov
xchg
cmp
std
fist
push
cmp
imul
push
pop
sbb
xchg
xchg
pop
loope
aaa
add
dec
mov
arpl
pop
add
aam
dec
pop
repnz
pop
mov
popf
bound
retf
(bad)
push
ins
test
inc
and
mov
pushf
fmul
mov
add
test
or
jp
repnz
addr16
mov
mov
cmp
in
dec
outs
jecxz
out
push
cmp
retf
inc
test
imul
fucomp
fsincos
jmp
cmp
jecxz
(bad)
stc
inc
int3
les
loope
mov
clc
test
jbe
aaa
lock
fstp
test
in
jne
mov
push
clc
test
mov
ror
fmul
fiadd
aad
mov
jo
sub
inc
xor
stos
cmps
in
sbb
dec
les
es
fst
inc
push
jno
lods
popa
mov
pop
dec
mov
std
stos
and
cli
jns
cmps
xlat
jb
push
cmp
jl
pushf
mov
je
je
out
js
fbld
adc
sbb
daa
fisubr
mov
neg
lea
hlt
inc
sub
and
xchg
inc
push
sub
jmp
test
add
es
(bad)
std
and
mov
imul
sbb
sub
mov
out
push
rol
dec
jmp
sbb
dec
sti
inc
(bad)
movs
dec
dec
jne
push
lds
dec
xchg
lods
adc
pop
test
(bad)
xchg
xchg
data16
or
addr16
imul
repz
mov
jns
fadd
(bad)
jle
push
pop
fwait
mov
jge
adc
push
(bad)
ss
mov
test
dec
enter
add
lods
xchg
push
retf
je
inc
dec
(bad)
push
and
xchg
jle
(bad)
fild
int
xor
jae
xor
int
ret
pop
movs
xchg
mov
ins
(bad)
icebp
movs
mov
xchg
jbe
xor
xlat
retf
jge
pushf
test
push
sbb
retf
mov
(bad)
xlat
mov
sub
test
sbb
pushf
jl
push
adc
test
fistp
and
test
push
pop
rol
data16
je
xor
loop
dec
(bad)
push
push
ret
mov
or
adc
sub
outs
sub
mov
out
ins
push
and
cmp
cmp
cdq
ins
adc
sti
mov
gs
outs
fld
or
mov
xor
cmp
jge
push
sbb
(bad)
call
repnz
jae
push
in
adc
inc
jb
pop
jg
push
lods
imul
mov
sub
mov
stos
xor
mov
call
mov
aaa
dec
les
jnp
(bad)
cmps
pop
xchg
in
cdq
and
mov
mov
stos
fwait
or
enter
and
call
(bad)
in
pop
mov
imul
(bad)
xchg
ficomp
lock
sub
das
ror
dec
adc
inc
push
imul
test
xor
test
xchg
out
in
mov
mov
test
inc
push
test
hlt
xor
lock
xchg
icebp
push
fsub
pop
ss
pop
js
fild
pop
(bad)
pop
(bad)
outs
les
xlat
dec
or
pop
nop
inc
fwait
mov
loopne
push
into
pop
cmp
cmp
xchg
cwde
sti
xchg
or
or
jl
(bad)
cli
xchg
dec
aaa
repnz
lea
xor
sub
stc
shr
out
sti
fild
and
or
xchg
mov
sbb
popa
stos
pusha
sub
sbb
cmps
sahf
sub
int
and
jns
sbb
mov
mov
fcom
stos
xor
aaa
and
add
icebp
mov
xor
mov
retf
sbb
(bad)
out
adc
and
out
mov
ret
xchg
fsubr
fmul
icebp
add
retf
xor
mov
retf
mov
sub
or
xor
call
jo
or
add
jns
idiv
addps
fnstsw
push
add
pop
push
pop
retf
mov
and
sbb
(bad)
mov
mov
mov
fld
shl
pop
nop
fld
repnz
sahf
mov
sub
aam
mov
xchg
mov
xor
iret
inc
xor
cmp
mov
add
push
dec
clc
lods
dec
xchg
dec
in
or
jbe
xchg
sbb
add
(bad)
lds
js
scas
sub
fdivr
out
xchg
es
out
mov
dec
gs
es
(bad)
push
mov
dec
rcl
(bad)
sub
adc
fbld
dec
add
dec
int3
sbb
adc
dec
cdq
loop
cli
fistp
pop
sti
in
and
popa
xor
cwde
inc
je
fdiv
pop
sahf
push
in
inc
sub
xlat
mov
xlat
lock
leave
data16
clc
movs
push
jp
push
push
lods
inc
int3
mov
fwait
rcl
sbb
mov
aas
dec
mov
jge
pop
scas
cld
out
fs
call
in
popa
or
lock
jge
loope
cmps
pop
cmp
push
out
and
cwde
cld
pop
(bad)
(bad)
push
je
sbb
push
xchg
sbb
push
push
jae
adc
inc
or
lock
lods
push
pop
mov
mov
xchg
imul
push
pop
daa
sbb
mov
mov
jns
mov
push
imul
fist
mul
or
fcom
(bad)
out
nop
loop
xchg
mov
jecxz
adc
add
push
mov
add
jle
std
popf
dec
xchg
(bad)
mov
scas
jb
and
arpl
(bad)
mov
jmp
ins
pop
adc
fwait
call
push
stos
and
dec
mov
and
ins
std
ret
mov
and
mov
jle
mov
jg
cmp
addr16
xor
adc
in
mov
jae
jb
test
mov
pusha
aas
pop
xchg
xlat
mov
(bad)
fidivr
cmc
adc
or
into
test
scas
inc
xchg
lods
push
and
test
jecxz
psubusb
mul
mov
lea
cmp
xchg
xchg
sbb
outs
fcmovb
adc
pop
lock
int3
dec
jb
nop
mov
out
imul
out
xor
js
xchg
mov
enter
not
inc
imul
arpl
xrelease
mov
nop
sub
xor
addr16
sahf
(bad)
std
ins
(bad)
pop
and
std
push
and
sar
das
jns
push
cs
enter
xor
ret
clc
xchg
adc
sub
xor
xor
ficomp
mov
(bad)
inc
cmp
mov
push
in
inc
mov
aas
fwait
inc
or
aam
push
(bad)
inc
das
(bad)
cmps
and
jmp
push
lds
fs
jg
cmps
mov
rol
mov
adc
sbb
leave
mov
les
pop
mov
adc
push
movs
adc
shr
jbe
aam
sbb
xor
call
mov
jae
jl
xor
mov
arpl
retf
and
adc
sbb
outs
add
push
pushf
icebp
jmp
ja
pop
add
dec
push
rol
inc
mov
inc
sbb
jmp
add
xor
rcr
sar
push
cmp
dec
ficom
push
jns
cmp
push
mov
test
ss
inc
sbb
jne
sbb
dec
jge
jle
sahf
dec
mov
in
(bad)
cs
cdq
mov
cmp
neg
(bad)
push
outs
dec
arpl
dec
mov
pop
adc
jae
add
repz
push
cs
test
gs
adc
inc
(bad)
add
xor
dec
or
mov
sbb
movs
out
frstor
mov
rcl
outs
mov
leave
movs
mov
fcomp
rep
xor
adc
sub
lock
push
or
sbb
in
mov
ja
clc
aaa
mov
push
imul
xchg
xor
push
dec
das
loop
mov
xlat
fistp
adc
and
jmp
fbstp
ins
movs
cmps
leave
xor
arpl
add
and
jnp
inc
xchg
pushf
fs
pop
(bad)
sar
hlt
(bad)
movs
xor
inc
ret
fild
xor
adc
jmp
ds
int3
push
cmps
icebp
mov
popa
lods
push
jno
mov
jmp
xchg
in
xchg
ins
fmul
test
xchg
mov
push
inc
dec
outs
sub
inc
cmp
jmp
sbb
mov
push
xchg
cmc
cmc
loope
cmp
out
xor
adc
fmul
pop
and
loope
fnstenv
test
or
addr16
mov
pop
mov
addr16
dec
stos
ret
jo
test
mov
pop
aas
adc
popf
gs
mov
test
jmp
sti
rcl
push
or
stos
or
ret
xor
xor
test
out
cmp
mov
fidiv
push
icebp
xchg
xchg
jle
lods
inc
test
hlt
rcr
in
aaa
test
ds
mov
cmps
je
imul
(bad)
ins
movs
push
cmp
inc
fimul
xlat
mov
adc
and
es
pusha
jmp
lock
enter
sub
pop
clc
out
adc
addr16
aaa
js
(bad)
lods
pushf
cmps
pop
xor
push
fs
jge
shl
std
push
test
adc
dec
mov
cmp
xor
push
push
cwde
mov
test
add
fiadd
out
inc
mov
xlat
out
pop
scas
stos
push
outs
or
fidiv
add
fdiv
cmp
je
pop
dec
mov
mov
outs
lods
aas
mov
pop
sar
or
stos
xor
sub
mov
pop
push
cmp
mov
jmp
shl
sbb
outs
ins
data16
jns
xchg
fs
int3
pop
mov
fild
mov
sub
mov
xchg
sub
mov
or
js
cmp
sub
xor
jle
adc
inc
adc
xor
add
mov
cs
or
jbe
retf
nop
ja
lds
push
div
lods
cmp
and
cmp
retf
xor
lods
(bad)
mov
ja
adc
cmps
adc
add
inc
dec
or
bound
jne
call
sub
and
fsubr
adc
imul
es
fild
dec
mov
cmp
cwde
xchg
sbb
add
fistp
aam
dec
bound
inc
sub
std
icebp
jbe
cmps
jmp
jno
mov
loope
cmc
pop
ret
push
jmp
jbe
pop
test
cdq
push
xor
setg
or
cwde
cdq
in
cmp
sub
call
jg
shl
(bad)
jo
inc
mov
mov
out
mov
mov
les
xor
sub
mov
mov
xchg
mov
or
xchg
icebp
cmp
dec
outs
xchg
enter
inc
mov
rcl
jne
add
leave
sbb
cwde
ror
xchg
repnz
mov
add
xchg
pop
adc
inc
xor
aam
push
frstor
mov
(bad)
adc
add
or
gs
mov
cmps
popf
div
cmp
shl
push
jne
sbb
mov
jno
js
mov
adc
xchg
call
push
lea
and
ds
aam
sbb
or
ja
jno
xchg
lock
pop
inc
aaa
cmps
adc
mov
inc
dec
inc
pop
shl
mov
or
mov
dec
inc
fidiv
hlt
cmc
mov
cmp
fild
pop
mov
(bad)
dec
push
xchg
fmul
jo
mov
imul
inc
xor
sub
mov
mov
fisubr
shl
push
cmovle
jg
ds
jecxz
inc
push
push
call
ins
add
retf
push
xlat
mov
movs
mov
arpl
lods
push
mov
test
test
stos
inc
out
popf
pop
pop
and
(bad)
and
hlt
mov
cmp
pop
(bad)
push
sar
pop
(bad)
gs
jg
fs
cmp
fiadd
sub
pop
ror
imul
ins
adc
enter
out
push
not
ds
or
cmp
add
or
cmps
stos
cmp
ret
into
pop
ja
push
sub
loop
cmps
pop
imul
repz
sub
in
arpl
dec
push
inc
test
aaa
retf
imul
leave
into
cmp
add
xchg
pusha
arpl
pop
or
cmps
xchg
adc
pop
xchg
pop
and
bnd
and
inc
shl
sahf
mov
xor
push
dec
mov
fs
out
or
ins
and
jb
hlt
sbb
add
call
scas
sub
xchg
cs
xchg
ds
jl
enter
call
cmp
or
push
es
fwait
pop
popf
cmp
pushf
(bad)
jns
mov
adc
test
(bad)
jb
push
xchg
mov
push
and
mov
fsub
ficom
mov
fmul
mov
loope
xchg
jno
movs
(bad)
jmp
rol
xlat
sub
(bad)
data16
fs
adc
sbb
add
push
lods
ss
int
rol
ret
paddsw
cdq
test
(bad)
jl
inc
sbb
cmc
or
jmp
fistp
aas
imul
imul
shl
mov
fldenv
adc
sbb
movs
mov
shl
fwait
not
pop
pop
and
loope
xchg
fcomp
cmp
mov
cmp
sbb
mov
and
jbe
shl
pop
repnz
jmp
pop
jmp
clc
push
punpckhbw
and
es
adc
cmps
fstp
pop
lahf
adc
ud0
inc
pop
xor
fdiv
mov
shr
(bad)
js
xor
cmp
movs
loope
lock
daa
fist
lods
and
and
fistp
mov
test
out
in
sbb
nop
add
cdq
fcmovu
pop
mov
cmp
mov
out
nop
test
add
ins
loop
(bad)
ins
loope
stc
stos
test
div
fiadd
push
add
imul
mov
pushf
hlt
sbb
mov
in
in
jnp
dec
cmp
add
mov
add
fidiv
jo
pop
or
mov
cmps
das
in
jecxz
ror
cvtpi2ps
aad
scas
mov
test
jecxz
jge
cdq
mov
sar
adc
gs
sub
sub
jg
push
pop
icebp
or
test
mov
jo
jg
shl
inc
stos
stc
outs
sbb
xchg
adc
cmp
enter
lds
std
xor
xlat
in
pop
push
and
sub
cdq
xor
dec
(bad)
enter
in
mov
sub
sub
shr
in
loope
cmp
sbb
pop
xor
jns
movs
popa
hlt
leave
lds
inc
enter
fild
shl
retf
dec
shl
(bad)
mov
xor
lahf
push
sbb
sbb
jns
cwde
pop
pop
test
sub
jnp
sbb
inc
dec
jmp
arpl
test
xchg
dec
add
scas
or
arpl
xchg
lods
jae
jg
movs
neg
out
jb
mov
sti
ret
mov
and
jle
dec
jo
jp
fld
add
push
not
mov
push
(bad)
loopne
sbb
ret
inc
loopne
cld
retf
sahf
sub
or
mov
cmp
je
jge
jnp
gs
xchg
repnz
xor
arpl
mov
pop
stc
and
adc
int
gs
sub
iret
rcl
push
leave
ins
lahf
inc
or
js
movs
pop
or
dec
ror
mov
xchg
sbb
xchg
push
xor
jle
jge
mov
cmc
jecxz
adc
and
push
jl
popa
mov
jb
dec
lock
adc
xchg
and
cdq
ret
pop
cdq
xchg
or
inc
icebp
sbb
shr
xor
cmp
in
jnp
adc
popf
sub
fld
cmp
inc
add
pop
xor
add
mov
xchg
jno
loop
mov
mov
mov
adc
inc
xor
mov
inc
adc
in
unpckhps
adc
xchg
jb
push
mov
inc
cli
push
aam
(bad)
and
cmp
ins
rol
push
std
sub
adc
and
shl
mov
and
cs
cdq
sbb
in
pop
test
add
stos
(bad)
xor
mov
mov
adc
dec
outs
nop
cmps
dec
aam
add
adc
add
popf
fbstp
cmp
fsubrp
fld
fwait
mov
sub
pushf
xor
jle
mov
aaa
fwait
out
imul
pop
mov
fstp
jb
xchg
lds
mov
es
cmp
sub
repz
outs
test
les
push
inc
sub
ret
pop
cmps
sub
dec
push
jb
adc
jecxz
mov
cmc
lods
frstpm(287
mov
dec
scas
aas
cdq
push
es
and
fnstsw
int
stos
push
cmp
pop
add
test
ja
mov
mov
mov
jge
or
jmp
jno
stos
(bad)
dec
and
xchg
mov
mov
inc
test
fisttp
repnz
ins
(bad)
out
jmp
pop
fist
mov
je
jmp
outs
sar
clc
and
mov
and
bound
dec
adc
xchg
or
out
cwde
ret
aad
cmp
stos
out
ret
inc
ror
shl
leave
xchg
icebp
cmc
fsub
sahf
sbb
movs
cdq
xor
lods
cdq
inc
pop
retf
movs
pop
add
push
pop
jb
jp
mov
scas
jmp
or
icebp
mov
push
aas
stc
or
or
adc
pop
sub
xchg
das
push
out
mov
fxch
adc
mov
jnp
dec
inc
fimul
retf
fwait
out
jge
jge
out
and
ds
xchg
push
inc
lods
mov
mov
inc
jp
jle
or
mov
xchg
outs
pop
cmps
mov
ins
aam
mov
mov
xchg
mov
fs
dec
inc
sub
ret
neg
xchg
mov
enter
mov
imul
mov
dec
int3
adc
pop
cli
dec
xchg
shr
lods
mov
sub
mov
imul
xor
add
clc
aam
(bad)
cmc
pop
frstor
sub
sub
pop
pusha
shl
scas
int3
cwde
mov
cli
push
ficomp
mov
cld
mov
repz
jae
mov
int3
js
shl
jns
push
push
out
jle
sub
mov
push
mov
(bad)
dec
clc
mov
pop
pop
hlt
out
retf
inc
lahf
(bad)
(bad)
dec
pop
mov
mov
sti
jp
popf
js
mov
jl
jae
data16
pop
cmps
mov
mov
addr16
rcl
stos
imul
out
jmp
fiadd
add
add
mov
and
imul
ror
inc
and
jb
into
out
loope
or
pop
cmps
in
or
out
ja
imul
aad
mov
imul
or
add
lea
dec
icebp
push
ja
mov
loope
jnp
dec
jmp
add
pop
mov
pop
int3
mov
xchg
test
aad
data16
sub
aad
inc
push
jg
jbe
rcr
cmps
icebp
outs
mov
xchg
call
iret
fucomp
cmp
cdq
popf
xor
cdq
scas
pop
cmp
retf
ins
push
std
fisub
sar
push
xchg
cld
cmps
mov
push
mov
adc
sub
jecxz
(bad)
jmp
inc
inc
(bad)
mov
popf
je
dec
mov
inc
not
or
bnd
(bad)
das
xor
(bad)
data16
cmc
pop
sub
dec
neg
cdq
jb
mov
inc
cli
fsubr
(bad)
or
loop
mov
mov
into
out
sub
sub
add
cs
xor
and
sbb
mov
jmp
or
push
xor
inc
lds
sbb
int
out
aam
mov
test
jns
xor
push
push
fsub
jns
pop
in
ror
dec
arpl
(bad)
mov
enter
xor
mov
call
and
mov
outs
sub
outs
inc
shl
inc
mov
mov
(bad)
das
int
pop
ds
das
or
pop
push
mov
mov
xchg
aam
enter
daa
aaa
adc
daa
mov
jg
std
div
push
push
ss
and
pop
cli
out
imul
ins
or
cmp
es
arpl
out
icebp
(bad)
push
ret
inc
shr
pop
mov
test
and
add
sub
cmp
xor
movs
cmp
cld
gs
xchg
sbb
add
dec
call
and
pop
cdq
dec
test
sub
dec
mov
ds
mov
and
outs
cmp
mov
lds
addr16
jecxz
mov
adc
test
cmp
add
dec
adc
ins
sti
frstpm(287
cmp
xor
clc
dec
sbb
jg
inc
mov
sbb
dec
loope
and
pusha
es
lea
leave
xor
pushf
rcl
or
xor
xor
cli
fdivrp
mov
pop
scas
xchg
sub
nop
out
div
(bad)
xchg
dec
mov
pop
sub
mov
xchg
dec
sub
and
mul
mov
pusha
aad
jmp
shr
xor
in
mov
sahf
and
retf
mov
nop
or
fld
push
ror
mov
push
inc
ret
inc
jne
(bad)
imul
push
test
and
fs
repz
xchg
aaa
cmp
jge
aad
repz
daa
and
fist
add
imul
push
push
push
int
cmp
xchg
xchg
std
out
clc
xchg
and
mov
push
pop
leave
mov
int3
movs
and
inc
sub
mov
cmp
daa
and
mov
gs
xchg
jnp
pop
(bad)
movs
outs
inc
int3
sub
mov
imul
rcr
movs
mov
inc
pusha
push
push
sub
pop
jae
dec
sbb
mov
(bad)
jmp
push
xchg
push
push
call
dec
movs
popf
adc
fistp
rcr
clc
jae
retf
jle
sbb
retf
std
call
shr
fisttp
(bad)
xchg
(bad)
scas
mov
int3
xchg
push
or
lahf
xor
jg
scas
adc
push
outs
mov
xchg
mov
iret
fs
xor
gs
sbb
mov
dec
dec
in
ret
xchg
shl
mov
add
mov
jnp
stc
xor
(bad)
xchg
mov
add
inc
xor
std
dec
icebp
jmp
mov
aam
int3
pushf
add
and
call
inc
sbb
push
add
loope
aaa
adc
pop
jmp
(bad)
xor
out
(bad)
lock
pop
cmp
add
mov
dec
pop
cmp
or
(bad)
ret
out
pop
sbb
push
mov
or
inc
cmp
jmp
imul
(bad)
cmps
and
adc
pop
std
repnz
adc
lds
out
push
cmp
ds
add
push
out
fldenv
cmp
push
xchg
sbb
pop
jle
pop
test
pop
mov
and
aaa
pop
cdq
js
enter
xor
inc
push
inc
mov
and
jbe
pushf
pushf
lock
mov
hlt
test
dec
ror
mov
fucomi
inc
(bad)
pushf
in
in
gs
je
dec
pop
jl
(bad)
inc
ja
call
jae
loope
stos
stos
pop
pop
lds
inc
mov
enter
xchg
jo
or
(bad)
aam
int3
frstpm(287
movs
mov
movs
jle
pushf
imul
dec
mov
ret
in
inc
cmp
pushf
mov
ret
in
dec
pop
repz
adc
test
stos
sub
ficomp
mov
adc
xor
call
xchg
and
mov
dec
cmp
dec
sbb
inc
arpl
out
lea
cdq
fcom
out
xlat
lahf
xchg
cwde
shl
dec
ja
cmps
or
or
add
or
mov
loop
adc
cmp
test
adc
sub
pop
test
pop
into
jbe
xor
(bad)
rcl
xchg
enter
mov
adc
push
xchg
fidiv
jae
xchg
ss
ins
cs
dec
popa
xor
sqrtps
clc
xchg
addr16
mov
std
cli
xor
leave
and
sar
adc
je
or
add
xchg
stos
sbb
pop
cli
dec
xor
das
scas
adc
cli
push
in
(bad)
call
sub
fcomp
lock
push
xchg
dec
arpl
cdq
daa
movs
retf
(bad)
cli
aam
push
xlat
ficomp
jnp
mov
out
xor
shl
sbb
fiadd
test
sbb
das
mov
cmp
and
scas
dec
and
gs
test
lods
adc
loopne
and
xor
inc
in
fs
mov
or
cld
sub
or
je
pop
mov
push
pop
fdivr
test
push
add
mov
pop
xor
add
aad
lods
aam
and
daa
fdivr
mov
cmp
xor
jns
jmp
inc
adc
std
inc
(bad)
sbb
popa
or
aas
loopne
div
jns
or
or
jne
mov
test
mov
ins
or
mov
lds
fldcw
add
add
mov
xchg
cmps
les
stos
mov
cmp
mov
or
mov
test
mov
dec
mov
ja
cmps
fimul
es
shr
test
in
mov
(bad)
jnp
mov
shl
ja
sbb
or
pop
mov
(bad)
xor
aam
mov
aaa
ins
mov
xor
cmp
sub
jns
jge
push
(bad)
ins
mov
xchg
xchg
into
pop
mov
sbb
(bad)
(bad)
mov
lea
in
xchg
sbb
jge
jb
mov
lods
adc
jnp
add
or
daa
test
cmc
movs
mov
inc
or
sub
sub
stc
cdq
push
mov
clc
out
aam
enter
cmovno
dec
fcmovnb
mov
leave
bnd
pop
(bad)
or
cs
fcom
hlt
mov
nop
mov
out
jno
out
in
pop
movs
dec
(bad)
fdivr
sbb
es
sbb
jbe
and
xor
rol
pop
not
je
jo
and
pop
mov
pop
retf
jge
sti
minps
retf
in
aas
mov
jp
jge
and
mov
call
shr
mov
jns
adc
fwait
xor
or
fdivr
sbb
cmp
xchg
popw
xchg
div
and
cmps
jg
in
cmps
push
mov
shr
jecxz
xchg
out
mov
rcr
es
test
lods
ja
sahf
sbb
ins
jg
ins
in
std
iret
and
dec
sub
mov
cs
repz
sub
ss
jp
and
push
jmp
shl
mov
xchg
(bad)
loopne
fisttp
jbe
test
loop
fsubr
leave
mov
mov
cmp
ds
cmp
cli
(bad)
sub
daa
mov
lahf
pop
nop
arpl
jecxz
lock
mov
outs
bound
or
jne
dec
fisubr
retf
sbb
add
and
stos
add
sub
xor
js
add
sub
mov
sbb
jnp
shl
add
xchg
sub
or
mov
cmp
adc
loope
jmp
ret
(bad)
cmp
jns
jle
mov
lods
add
sub
cmp
or
mov
ret
push
mov
mov
xchg
xchg
cli
mov
into
les
arpl
outs
pop
lds
stos
sub
add
fdivp
fs
imul
nop
aad
out
ret
sub
es
and
push
mov
mov
push
pop
shl
pop
jl
lods
imul
nop
push
stos
jg
shl
imul
enter
sbb
xor
fisub
inc
jmp
fwait
retf
add
fld
pushf
leave
mov
sbb
fisttp
das
jae
stos
jg
pop
lods
scas
pop
fisubr
sub
enter
in
sbb
int3
mov
rcl
repz
pop
les
ja
imul
mov
jb
sti
sub
xor
adc
outs
aad
idiv
cmp
sbb
dec
add
push
sbb
fcmovnb
shl
(bad)
cld
je
mov
fwait
mov
(bad)
sbb
rcr
stos
in
(bad)
and
cmc
or
sbb
mov
push
aam
fwait
push
jecxz
jge
jo
add
stos
inc
push
outs
xor
add
test
popf
inc
cmp
sbb
add
mov
call
enter
add
jp
fstp
adc
cmp
add
shl
ins
in
dec
mov
sar
aam
sbb
cmps
push
cmp
mov
ficom
rol
dec
shr
call
test
in
ss
cld
sbb
retf
movs
leave
jns
pop
ret
aas
mov
dec
push
cmp
add
retf
mov
jne
dec
xchg
pushf
inc
call
xchg
and
das
pop
movs
ins
push
hlt
(bad)
jbe
pop
sub
js
xlat
mov
jmp
mov
clc
mov
imul
dec
fwait
and
(bad)
mov
add
xlat
or
std
nop
push
popf
data16
add
loop
js
jg
xchg
jmp
mov
popf
pop
jecxz
movs
xchg
adc
into
jecxz
adc
(bad)
sub
(bad)
std
xchg
cmps
jle
std
mov
pop
cmps
sub
mov
dec
jnp
aas
retf
dec
lock
arpl
jb
lea
rcr
sub
dec
mov
addr16
in
movs
jmp
call
cdq
icebp
push
dec
fcomp
jle
xchg
repnz
mov
scas
cmps
jmp
lahf
push
gs
add
xchg
icebp
scas
xchg
jns
mov
fidivr
fwait
inc
fdivr
ror
mov
test
cmp
inc
sbb
and
ins
mov
cmp
sar
test
pushf
jg
imul
shl
sub
addr16
icebp
fstp
inc
(bad)
jge
add
lock
inc
push
mov
dec
cmp
or
test
mov
pop
mov
arpl
jecxz
push
je
or
es
inc
aaa
inc
push
stos
call
mov
jg
js
jle
ds
rcl
cli
push
cmp
xchg
pop
dec
popa
gs
inc
cs
inc
mov
pop
and
or
mov
push
cmp
pop
nop
pop
add
cmp
pop
frstor
retf
or
jae
leave
jl
jmp
jmp
or
idiv
movs
cmp
or
adc
mov
js
mov
cmp
sub
inc
out
xchg
sti
rcr
ret
in
mov
mov
outs
in
jb
cli
push
popf
pop
shr
inc
aad
xchg
sbb
cmps
movs
adc
les
test
mov
in
adc
pop
mov
jmp
mov
pop
out
xor
or
mov
sahf
mov
mov
push
jb
push
cmp
push
mov
push
inc
rsm
leave
in
loopne
dec
aad
out
dec
cli
in
push
in
jmp
imul
lods
or
fs
fldcw
pop
dec
test
inc
mov
sar
mov
out
fild
inc
jmp
push
(bad)
(bad)
outs
adc
lods
jle
icebp
addr16
or
repnz
vhaddpd
loopne
mov
(bad)
ficomp
or
arpl
dec
mul
es
ins
(bad)
cwde
push
fsub
adc
nop
sbb
sbb
cmp
outs
push
repnz
ror
push
fs
mov
jo
sub
mov
mov
inc
cli
sub
out
add
xor
adc
xchg
cmps
or
mov
pop
xchg
push
outs
mov
cdq
fidivr
pop
push
ret
push
loop
and
pop
sti
cmp
ucomiss
and
sahf
pushf
fdiv
add
dec
adc
cmp
rcr
movs
jb
fdivr
jmp
push
aas
jg
mov
in
push
xor
test
(bad)
mov
pushf
mov
dec
lods
nop
out
cld
leave
dec
fbstp
jmp
or
int3
aad
inc
fwait
sbb
je
inc
cmps
sub
xor
sbb
call
cmp
adc
pop
idiv
fstp
nop
iret
(bad)
or
clc
ins
push
cmp
repnz
xor
cmc
retf
(bad)
and
jo
lods
mov
lds
adc
sar
les
push
and
inc
mov
mov
pop
cmp
sbb
lods
ins
add
mov
mov
outs
or
repz
sbb
mov
mov
in
jbe
and
aas
and
dec
pop
jge
(bad)
and
test
movs
aaa
dec
enter
and
ds
dec
test
ret
jbe
js
inc
ja
mov
adc
pop
aam
push
enter
in
sub
scas
loope
lea
mov
outs
sub
push
cmp
loopne
inc
hlt
icebp
xlat
push
(bad)
fsub
mov
pop
lahf
adc
outs
push
ja
imul
cmp
cmp
jmp
inc
loopne
cmp
test
test
outs
clc
xor
(bad)
(bad)
inc
xor
add
dec
aam
call
arpl
out
cli
nop
sub
fst
cld
cmp
mov
xchg
inc
sub
pop
mov
mov
xor
mov
sub
les
lea
xchg
jmp
loope
or
out
inc
sbb
xchg
mov
(bad)
mov
dec
shl
mov
sbb
mov
and
inc
movs
rcl
adc
aaa
adc
ficomp
pop
lock
xor
inc
les
mov
sub
cmp
pop
stc
or
push
push
pop
cmp
mov
aad
inc
mov
xchg
dec
or
add
and
arpl
push
in
add
push
stos
setg
mov
inc
fsub
cmp
push
call
mov
push
sar
push
xchg
bnd
inc
sub
jnp
jecxz
cmp
inc
jns
sbb
xchg
xor
iret
push
ins
es
es
int3
and
popa
fimul
push
retf
xchg
shl
div
jmp
lods
bound
or
jae
add
inc
mov
int3
fidiv
push
jle
repz
popf
jmp
push
cwde
iret
adc
dec
ss
cwde
push
test
ja
in
ret
fsubr
fnstsw
sub
mov
or
or
test
mov
lds
aam
ds
mul
cmp
and
mov
pop
ins
add
mov
inc
(bad)
leave
xchg
mov
jle
sbb
ja
adc
jecxz
arpl
jb
retf
retf
ret
mov
inc
aas
fdivp
push
std
cs
add
fucomi
iret
(bad)
mov
mov
lea
jp
jb
imul
jns
(bad)
adc
adc
cdq
and
and
adc
xor
xor
mov
ss
xor
mov
inc
dec
push
sub
rcpps
gs
pop
pop
and
sbb
jge
mov
outs
pop
jae
push
xchg
or
mov
jmp
or
or
and
mov
imul
jae
and
arpl
dec
fnstcw
xchg
jno
sbb
pop
and
mov
and
aaa
add
fsubr
adc
lods
imul
adc
push
(bad)
jmp
shr
pop
push
ds
sbb
inc
sub
pushf
mov
sub
xchg
mov
scas
aaa
les
pop
test
stc
shr
and
test
sub
lock
sti
mov
pop
sti
jbe
mov
pusha
jg
ins
fs
mov
mov
loop
jmp
leave
shl
adc
les
cmp
cmp
cmps
and
icebp
jo
or
dec
ins
imul
das
mov
rol
int
adc
cmp
xchg
cmp
ret
rcl
inc
or
dec
imul
adc
xor
outs
mov
out
mov
cwde
mov
hlt
cmp
push
lods
arpl
dec
ret
cmps
sbb
loope
mov
sbb
jae
xchg
aaa
xor
cld
cld
pushf
aad
inc
js
add
in
jmp
xor
(bad)
mov
xchg
xchg
pushf
aad
jmp
shl
jge
mov
push
jb
mov
sbb
or
rcr
ds
and
stos
cmp
ret
div
mov
adc
std
(bad)
mov
mov
inc
int3
out
mov
pop
out
jp
les
jno
aas
fsub
pop
aas
xchg
adc
cmp
or
popa
pop
lods
inc
dec
inc
mov
lods
add
add
mov
ficomp
fld
or
repnz
sub
mov
dec
leave
cld
mov
cld
xchg
mov
sbb
jno
popa
push
movs
sbb
jge
mov
movs
jnp
(bad)
adc
out
jns
jge
lahf
aad
in
(bad)
add
dec
jecxz
std
or
dec
pop
sub
mov
inc
daa
xor
and
adc
mov
xchg
ror
and
(bad)
pop
scas
cmps
sar
sub
dec
add
cmp
jmp
pop
(bad)
imul
mov
jno
aas
jle
push
dec
or
aas
cmp
outs
mov
add
or
call
fwait
mov
nop
call
mov
out
or
and
mov
fwait
mov
xchg
arpl
loope
pop
or
jmp
dec
iret
stos
repnz
xchg
jno
add
or
or
stos
push
bound
inc
or
cmc
jae
mov
mov
pop
aas
mov
sub
pop
sbb
ficomp
sahf
popa
mov
inc
(bad)
cmps
pop
or
cmp
hlt
xor
in
je
pop
rcr
outs
or
in
leave
xchg
bound
data16
and
cmp
pusha
pop
jl
cs
mov
cdq
cmps
cmp
int3
pop
in
jns
fwait
jae
adc
ss
imul
add
mov
das
cmps
out
pop
mov
xchg
jp
xor
and
dec
aad
outs
add
jg
arpl
sub
retf
or
jbe
cwde
sahf
(bad)
push
add
scas
push
sub
cmps
fcom
mov
pop
das
mov
pop
lds
mov
or
jl
and
aas
jbe
(bad)
pop
inc
add
jg
inc
ret
les
mov
cli
data16
mov
movs
push
sbb
rcr
scas
movs
mov
sub
fxch
ins
fld
or
jmp
or
sub
or
ss
stos
cmp
xchg
test
add
aam
xchg
sub
sub
lds
fs
cmp
lods
sub
push
xor
push
loopne
rcr
dec
pop
sbb
rol
xchg
mov
ret
ins
cmps
add
rcl
adc
scas
lahf
bound
push
outs
jbe
inc
out
popa
icebp
pop
mov
mov
push
and
fwait
es
ins
dec
jmp
push
scas
fsub
dec
stc
and
xchg
out
test
es
shl
push
push
repnz
lock
(bad)
aaa
add
jnp
pop
nop
test
push
fild
pop
int
xor
sahf
icebp
test
cmps
imul
push
cmp
ins
jg
out
dec
bound
xchg
xchg
pop
cmps
cmps
sbb
int
ret
push
pop
loope
fld
push
lods
jns
or
adc
enter
call
aaa
dec
xor
inc
xchg
pop
dec
(bad)
cli
add
pop
xchg
push
inc
xchg
and
out
cmp
lahf
jno
push
shr
test
cmp
adc
pusha
cld
(bad)
xchg
cmps
popa
stos
inc
enter
push
and
btr
(bad)
stc
xchg
popa
sbb
sbb
(bad)
rcr
dec
mov
dec
js
sti
inc
add
and
or
mov
fild
fsub
jnp
int3
push
lahf
jg
pop
sub
jmp
mov
mov
mov
xchg
fs
dec
lods
dec
rcl
adc
ret
mov
out
je
mov
(bad)
sbb
into
ds
pop
cwde
cwde
shl
jbe
cmp
movs
inc
sub
ds
aad
dec
out
inc
nop
jg
mov
sub
loopne
adc
xlat
stos
retf
cs
xchg
out
imul
pop
fstp
sbb
lahf
inc
pop
mov
rcl
and
and
jno
sub
(bad)
or
adc
popa
imul
jmp
loopne
cmc
shl
pusha
lods
sbb
mov
or
push
mov
mov
mov
or
adc
leave
movs
ret
jae
adc
dec
loop
jne
daa
adc
(bad)
and
stos
mov
jg
loop
daa
(bad)
xor
cmps
add
jb
int3
lds
idiv
fidiv
mov
cld
cmp
sub
add
and
outs
rcr
cmp
cmps
es
das
inc
stos
cli
sub
mov
fldcw
xor
fcom
test
in
dec
dec
ret
sub
dec
push
in
ror
test
push
test
je
out
adc
dec
mov
out
call
bnd
mov
mov
addr16
fistp
arpl
mov
or
xchg
addr16
pop
shl
bound
mov
mov
xchg
(bad)
std
inc
lods
inc
pusha
movs
test
pop
and
dec
mov
imul
sbb
push
ins
xchg
mov
jmp
mov
test
pop
push
scas
and
pop
jnp
mov
xor
bound
(bad)
ds
push
add
out
xchg
pop
outs
xor
ror
or
xor
int
dec
push
mov
jg
jmp
rol
pop
mov
pop
add
add
jno
lods
jns
jmp
inc
aaa
stos
mov
lea
or
sahf
xor
(bad)
mov
es
lea
mov
(bad)
mov
pop
(bad)
adc
dec
aas
das
sub
mov
and
jmp
into
inc
lahf
xor
or
out
lods
imul
stc
cmps
fstp
pop
mov
call
jnp
mov
gs
mov
or
adc
(bad)
shl
mov
outs
and
(bad)
jg
(bad)
call
adc
cs
shr
jecxz
cdq
bound
test
lock
adc
and
and
mov
sbb
mov
test
scas
fprem1
in
test
hlt
jnp
jae
jl
repz
jmp
jno
push
mov
mov
adc
cmp
(bad)
adc
and
mov
xchg
xchg
daa
pusha
xchg
movs
mov
cs
mov
outs
xor
jo
idiv
cld
inc
xchg
popf
inc
sub
xchg
xchg
jmp
icebp
dec
call
mov
sbb
sub
popaw
rcl
xchg
imul
(bad)
jecxz
jbe
xor
add
inc
aaa
mov
dec
jge
push
or
sub
add
fmul
adc
imul
sbb
add
xchg
pop
rcl
push
mov
into
js
sahf
cmp
adc
sbb
sub
addr16
scas
fcomi
outs
xchg
jl
outs
add
cmps
push
ret
sbb
and
inc
cmps
adc
test
call
cmp
loop
mov
fiadd
shr
mov
ins
jp
add
std
xor
stos
movs
ret
imul
(bad)
and
je
daa
movs
fs
cdq
test
repz
push
mov
out
xchg
xchg
ret
shr
lods
mov
push
arpl
sbb
jbe
retf
cmp
push
outs
mov
sub
sub
fs
xchg
iret
repz
or
jl
lods
pop
xlat
sub
mov
or
inc
dec
test
mov
cs
adc
mov
add
xchg
and
call
xchg
pop
std
outs
inc
ins
cld
outs
push
adc
add
icebp
gs
adc
dec
fbstp
inc
or
jns
xchg
or
sbb
and
or
mov
pop
js
or
push
aas
pop
arpl
out
in
div
hlt
add
push
jp
jno
repz
xor
sub
mov
jl
stc
jae
pusha
or
mov
in
loope
test
ss
jmp
pusha
push
xchg
outs
sub
bound
sub
cmp
xchg
es
fisubr
jae
and
adc
rol
sub
mov
fiadd
mov
or
cmp
or
jp
mov
das
jae
or
cmp
adc
sub
loopne
retf
int3
imul
popa
ds
pushf
fstp
into
aas
push
int
test
in
test
mov
repz
xor
retf
clc
std
mov
jb
inc
adc
(bad)
in
mov
arpl
aas
sub
lea
sbb
xor
mov
dec
loope
jbe
sbb
out
add
retf
out
imul
frstor
add
aas
popa
mov
pop
cs
jp
pop
push
inc
ins
retf
outs
mov
jnp
ss
cmp
inc
retf
fld
sub
out
outs
pop
mov
xchg
clc
pop
cmc
cwde
add
iret
cwde
movs
pop
sub
gs
cdq
sub
test
cwde
xchg
xchg
imul
add
xchg
jecxz
and
cmp
das
mov
mov
jge
in
clc
and
pop
popf
ror
mov
je
adc
lds
xor
xchg
mov
and
stos
es
mov
jmp
std
clc
pushf
cdq
int
fiadd
push
mov
cmc
out
xchg
jmp
jns
xchg
mov
je
add
mov
cmps
out
mov
rcr
xchg
in
jge
push
js
push
(bad)
mov
lahf
cmps
ss
shr
int
fst
mov
clc
sti
and
xchg
push
pop
push
(bad)
push
outs
xchg
xor
and
popa
pop
mov
cmc
xchg
inc
loope
add
dec
fidivr
inc
in
pop
mov
(bad)
push
nop
sub
ds
jbe
mov
ret
movs
ror
mov
in
xchg
es
stos
cwde
mov
pop
mov
(bad)
adc
dec
push
dec
add
xor
rcr
loope
sahf
daa
das
lock
inc
enter
pop
sahf
fcomp
mov
fiadd
sub
jle
fisub
in
idiv
hlt
addr16
shl
jnp
or
mov
add
dec
sti
sub
scas
shl
jns
aas
icebp
jne
dec
test
enter
test
push
stc
jno
fbstp
xchg
push
lock
stc
and
fimul
retf
sar
jo
and
sub
ror
leave
cmp
ja
xor
shl
sub
adc
jno
jo
loopne
cmp
mov
(bad)
push
add
sub
icebp
into
mov
jno
inc
pop
aad
add
jno
xchg
pushf
mov
or
pop
xor
dec
adc
xor
retf
popf
push
inc
push
ins
push
dec
sub
mov
push
aas
loop
icebp
or
jmp
mov
shl
shr
pop
cmp
out
(bad)
pop
movs
inc
add
push
test
sbb
mov
test
shl
push
pop
int3
inc
fwait
mov
and
mov
add
sbb
mov
add
nop
and
(bad)
jo
inc
pusha
stos
add
dec
cmp
pop
and
(bad)
xchg
stos
adc
cmp
lds
push
mov
mov
xor
xlat
add
repz
jnp
xchg
cmps
xchg
sub
jno
sub
adc
ds
mov
xchg
enter
fistp
pushf
ret
sti
cmp
aaa
inc
mov
xor
das
imul
dec
test
stos
inc
mov
addr16
inc
arpl
push
jl
sub
sub
jb
mov
adc
pop
cwde
les
xchg
fsubp
mov
and
push
adc
add
fwait
cld
mov
imul
out
sbb
mov
push
in
fs
or
popa
fdiv
xchg
jno
aam
jmp
push
mov
add
dec
outs
sub
call
cmp
cdq
enter
jb
lock
sahf
adc
mov
cmp
jnp
push
xchg
and
sub
and
lds
popa
lahf
mov
ret
retf
mov
adc
mov
jmp
fdivr
or
call
out
out
aad
leave
pop
(bad)
shl
in
(bad)
fstp
xchg
aas
or
and
call
and
cmp
mov
pop
xor
fmul
int
in
fucompp
lock
pop
jl
xor
add
and
sub
sbb
hlt
xchg
test
sar
cmps
sub
sbb
adc
popf
pop
xchg
ja
js
jne
jmp
sub
pop
push
mov
dec
arpl
cmps
sub
jae
je
pop
mov
jb
xchg
cmp
xchg
and
mov
adc
aam
(bad)
push
mov
popa
mov
inc
lock
ret
pop
and
and
ins
(bad)
jno
(bad)
xchg
leave
cmps
mov
(bad)
mov
mov
sar
out
or
fimul
sub
mov
rol
cmp
or
dec
imul
les
jp
mov
or
lea
jge
sub
mov
inc
call
retf
sar
scas
ins
mov
aas
push
mov
or
addps
adc
sti
(bad)
cmc
js
sub
adc
call
adc
mov
jmp
jno
aam
sar
push
pop
pop
in
in
daa
das
cmps
mul
mov
stos
pop
mov
movs
mov
cmc
add
pop
div
pop
xor
cmp
jae
inc
cdq
pop
std
outs
sub
js
movs
fcom
hlt
loop
push
test
movs
push
lods
call
xchg
fistp
inc
xor
jg
in
mov
aas
iret
mov
fst
dec
popa
aas
idiv
shl
in
push
sub
retf
inc
or
push
je
cmp
mov
je
cwde
stos
adc
aad
aaa
leave
pop
repnz
jnp
cmp
xchg
xchg
mov
mov
ficomp
xchg
add
jmp
cmp
push
lock
fisubr
xor
and
repz
(bad)
arpl
in
xor
ret
mov
inc
dec
cs
inc
mov
xchg
cmp
call
cwde
nop
jnp
mov
ins
(bad)
in
sub
pop
push
jle
cmps
mov
iret
int
(bad)
je
popf
into
fcom
pop
test
loope
cdq
mov
stos
movs
xor
cld
xor
mov
mov
mov
imul
loopne
mov
mov
dec
ret
(bad)
ja
sub
(bad)
(bad)
jmp
jmp
ret
xor
stos
sub
movzx
sub
js
loop
pop
and
sub
movs
cmp
lea
call
xchg
call
add
ficomp
pop
bnd
fst
and
inc
cld
cwde
lock
pop
stos
cmp
test
rol
cmp
sub
sar
cmp
adc
sub
dec
sbb
sbb
(bad)
adc
jecxz
mov
lock
cmps
aaa
adc
push
sub
stos
lds
add
scas
jb
pop
push
ret
mov
push
ins
inc
sar
cmp
cmp
out
inc
fld
dec
retf
mov
fadd
test
ja
jbe
retf
add
leave
inc
or
dec
mov
repz
in
ss
call
inc
mov
mov
mov
cld
inc
push
dec
(bad)
xchg
hlt
and
cdq
gs
std
push
jo
movs
adc
cmp
int3
fwait
mov
xor
out
mov
int3
adc
in
xor
jecxz
mov
inc
mul
mov
js
shl
je
mov
jo
or
or
fld
ss
mov
in
je
movs
inc
scas
int
(bad)
(bad)
mov
push
sub
mov
sub
dec
jp
lods
sub
mov
cwde
js
loopne
jl
sub
xor
ficom
pop
sub
xlat
pop
xchg
jp
ds
inc
jp
jne
sbb
adc
(bad)
inc
xchg
or
mov
dec
mov
stos
loopne
imul
ins
(bad)
and
loop
inc
outs
xor
mov
push
push
pop
rcl
cmp
or
std
(bad)
and
rcr
test
jae
rcr
stos
inc
mov
sbb
dec
cmps
adc
xchg
adc
sbb
(bad)
mov
sbb
into
aaa
call
cmp
mov
pop
lods
and
je
inc
(bad)
and
cmps
pop
pop
pop
fist
sar
inc
div
call
lods
ret
xchg
in
sbb
aad
pop
mov
imul
(bad)
fild
fistp
loop
mov
mov
jns
outs
test
add
out
fisttp
les
and
sti
loop
mov
lods
cmp
sar
cli
or
xchg
scas
loopne
mov
ds
jno
adc
mov
(bad)
enter
bound
add
in
add
ds
cwde
or
or
ds
add
pop
inc
popa
pop
popa
stos
inc
sub
inc
nop
mov
sahf
hlt
xchg
cmc
add
repz
addr16
mov
mov
mov
xchg
call
les
test
stos
test
out
xchg
jo
sub
xor
pop
xor
mov
sti
lods
inc
cmp
jp
lods
push
mov
cwde
test
(bad)
scas
xor
xchg
sub
and
fstp
out
jbe
jb
test
jle
sbb
test
mov
or
dec
fucom
xor
mov
sub
(bad)
or
fist
fcom
test
push
outs
dec
aam
je
jmp
xchg
dec
cmp
jbe
ja
mov
leave
push
pop
jl
call
xchg
mov
stc
idiv
push
inc
push
test
xchg
pop
mov
xor
xchg
popa
fwait
lahf
(bad)
inc
xlat
cmp
jb
xlat
sbb
fist
(bad)
arpl
mov
or
ror
cmp
fdivr
stos
int
retf
cmp
or
mov
in
retf
(bad)
jo
fcomi
adc
popa
mov
outs
fidiv
cmps
or
jg
shl
mov
xchg
into
repz
mov
dec
mov
inc
pop
outs
lahf
or
jnp
pusha
pop
add
lahf
cdq
mov
sbb
and
sbb
push
jo
inc
test
sub
dec
arpl
inc
fisttp
add
and
mov
js
outs
mov
cs
mov
enter
push
inc
inc
sbb
mov
or
mov
or
jl
pop
mov
or
jle
je
call
sub
inc
push
jg
(bad)
imul
icebp
add
sbb
or
mov
int
mov
idiv
nop
aas
mov
into
pusha
into
bound
mov
(bad)
sub
push
add
aad
sahf
mov
inc
std
push
cmc
je
test
cmp
pop
xor
dec
adc
movs
ret
sbb
pop
xchg
mov
mov
dec
cmp
sbb
sbb
in
stc
dec
bound
jmp
and
jge
das
cmp
xchg
fst
push
iret
push
push
loope
inc
push
outs
lods
mov
nop
dec
or
fnsave
mov
and
sbb
mov
push
ret
cmp
dec
cs
sti
aaa
(bad)
fisttp
pop
jmp
pop
sbb
fwait
jae
mov
enter
add
jge
inc
pushf
pop
inc
inc
scas
sahf
or
gs
mov
mov
fsub
(bad)
pop
popf
mov
nop
rcr
ret
and
jg
retf
xchg
or
movs
dec
loop
pop
icebp
sub
cld
loope
cmc
inc
and
sbb
lds
arpl
aas
mov
inc
mov
push
jns
pop
and
push
jno
mov
loope
out
(bad)
adc
stos
popf
fidivr
sbb
(bad)
jmp
dec
push
ret
jp
mov
scas
fdiv
daa
push
cmc
mov
jns
ds
ret
test
jae
jecxz
mov
daa
push
add
fcmovnu
push
push
add
sub
jp
pop
jo
hlt
stos
cmp
(bad)
(bad)
popa
push
mov
loopne
movlps
leave
xchg
mov
jl
pushf
xchg
sub
jnp
jns
inc
cld
sar
test
mov
test
dec
out
push
cmp
cwde
shl
ins
push
add
pusha
sub
cmps
outs
and
shl
hlt
push
outs
mov
aas
add
(bad)
into
push
push
aam
imul
out
jns
clc
int
into
shl
jg
push
js
les
ins
add
je
jne
and
cmps
xor
repz
cmp
jecxz
and
add
jbe
jl
imul
call
inc
sub
push
scas
imul
pop
dec
cmc
sbb
mov
push
push
(bad)
dec
mov
xor
cdq
mov
jae
lods
shl
push
jge
scas
movs
sar
mov
jecxz
test
pop
xor
movs
cs
fs
rcl
in
movs
int
dec
es
popf
ins
push
cmps
xor
pop
jle
fsubr
cdq
daa
loop
in
enter
pop
stos
repz
jp
out
aas
push
out
mov
cs
xor
sbb
je
aad
inc
inc
lods
pop
pop
mul
adc
adc
push
mov
lds
cmp
jo
xchg
repz
xor
sub
push
rcl
mov
mov
fsub
retf
sbb
or
loope
add
(bad)
dec
jp
mov
fldenv
jae
or
popf
sbb
out
mov
(bad)
loopne
push
sbb
or
jp
mov
dec
xor
popf
cmps
inc
mov
aaa
pop
sub
sub
test
xchg
mov
mov
push
ja
push
mov
in
push
and
cmp
leave
loope
cmps
ds
xchg
pop
xchg
fisttp
sub
je
dec
xlat
dec
or
pop
sbb
inc
jl
cdq
cmp
dec
out
int
mov
mov
addr16
adc
sub
movhlps
stos
in
popa
movs
mov
rol
shl
sti
and
cmp
fimul
imul
add
pop
sbb
inc
and
push
inc
xor
in
xchg
jge
mov
(bad)
pop
xchg
(bad)
loop
retf
push
push
int
sub
mov
and
dec
or
or
call
push
fstp
add
push
jns
cwde
mov
fdivr
in
push
or
mov
stos
xor
mov
int
push
clc
pop
les
xchg
mov
movs
or
pop
sbb
(bad)
mov
mov
in
into
jp
mov
imul
xchg
ret
or
push
cld
loope
test
jmp
lods
mov
outs
jp
cmp
and
push
mov
in
mov
das
out
mov
adc
pop
mov
cwde
dec
pop
cmc
add
mov
add
dec
scas
ins
leave
idiv
gs
or
jmp
pop
inc
adc
test
sbb
or
jecxz
pop
aad
in
sub
pop
rcr
jg
push
xchg
xchg
(bad)
data16
jge
xchg
pop
loop
das
scas
inc
out
dec
out
movs
js
sbb
and
add
pop
mov
cmp
mov
ss
adc
lahf
mov
lods
into
jecxz
jae
pop
mov
jle
mov
cmps
push
outs
pop
popa
mov
sub
dec
mov
mov
out
add
jbe
retf
push
mov
mov
sub
pop
and
mov
dec
sub
mov
fsub
sub
adc
(bad)
xchg
ret
sub
std
les
sub
fwait
cli
rcr
ror
push
cmp
es
stos
jo
push
rcr
js
loop
ja
int3
pop
jg
dec
dec
fnstcw
push
(bad)
push
in
pusha
fs
push
push
jp
fcomp
sti
aam
cdq
shl
pusha
mov
jp
xor
mov
sbb
add
sahf
fs
jmp
mov
hlt
jecxz
movs
popa
mov
jmp
lahf
pop
mov
arpl
lds
(bad)
shl
xor
mov
push
cmc
inc
mov
mov
mov
rcl
push
jg
adc
push
adc
cmp
inc
fisub
or
sar
movs
stc
and
frstpm(287
inc
xchg
movs
sahf
or
loop
pop
add
mov
call
mov
and
call
popf
xchg
adc
pushf
and
adc
es
aaa
test
push
fsubrp
and
mov
out
inc
into
mov
(bad)
ja
inc
pop
dec
mov
mov
sbb
imul
inc
fisubr
push
fnsave
mov
fwait
(bad)
mov
add
mov
rcl
test
pop
pop
jge
fsubr
(bad)
cmp
sub
adc
cmps
pop
mov
push
cmp
ins
cmp
ins
jp
mov
xor
std
retf
rcr
test
(bad)
(bad)
in
mov
xchg
pop
out
inc
push
dec
or
aad
push
xchg
sub
xor
cmovae
pusha
ret
push
imul
adc
stos
lods
loopne
inc
adc
xor
pop
ins
adc
sub
or
fisttp
add
or
aam
push
out
mov
aas
test
out
cdq
ficom
xor
into
push
mov
out
cwde
push
xchg
scas
rcl
jl
iret
dec
mov
sub
int
inc
je
test
outs
(bad)
scas
push
pushf
sbb
jge
and
sub
push
or
retf
in
and
or
(bad)
mov
push
pushf
push
(bad)
jmp
das
mov
ds
mov
pop
mov
into
xor
jno
shl
lock
lahf
js
retf
push
add
sub
ficom
xor
mov
std
xor
test
jne
xchg
jecxz
jl
enter
cmp
jnp
je
retf
aad
cmp
or
lea
sub
push
add
push
dec
adc
mov
push
cdq
ss
loope
out
push
mov
sti
test
or
xor
sub
popa
je
fimul
sbb
icebp
cmp
sbb
ins
push
test
lods
add
ja
mov
(bad)
xchg
add
div
imul
je
ds
cli
mov
rcr
test
pop
fucomp
fsubp
push
xor
or
(bad)
fist
stos
push
adc
shl
xchg
inc
loopne
call
push
mov
mov
mov
jecxz
pop
sar
(bad)
fisub
cli
inc
push
cmc
cmc
and
jb
lods
and
xor
test
jecxz
jp
fst
sbb
call
outs
shl
aad
sub
hlt
stos
cmp
and
inc
lahf
loopne
mov
or
mov
push
cwde
pop
xchg
or
push
pusha
add
aad
xchg
or
mov
cmp
jmp
dec
out
cmps
push
inc
loopne
mov
sub
cs
push
not
cmc
xchg
jp
int
push
inc
lock
hlt
sbb
jg
dec
(bad)
(bad)
data16
mov
ins
dec
ret
shl
iret
xor
mov
cmp
push
adc
in
scas
sbb
aad
clc
call
das
cmps
add
scas
jge
lds
pop
test
test
cmp
lock
sbb
das
sbb
adc
cmp
(bad)
jp
xchg
mov
test
aad
pop
push
push
cmps
or
jnp
mov
clc
js
cdq
mov
inc
sub
(bad)
jae
dec
imul
mov
mov
retf
jno
rol
ret
mov
push
or
and
out
xchg
int3
sbb
jne
pop
add
call
adc
out
xchg
pop
gs
rcr
add
(bad)
in
imul
ror
jbe
das
arpl
mov
out
mov
pop
mov
dec
cmp
jne
imul
imul
mov
std
repnz
popf
inc
jge
dec
pop
retf
popa
adc
sub
das
retf
cwde
and
inc
retf
(bad)
mov
test
popa
sub
out
(bad)
inc
sti
xchg
out
mov
dec
addr16
imul
mov
retf
push
dec
nop
xchg
adc
jmp
push
ins
mov
pushf
scas
push
mov
dec
mov
or
js
sub
outs
inc
stos
test
add
inc
inc
adc
cmc
cmp
xchg
(bad)
adc
in
dec
mov
cwde
enter
scas
mov
sub
mov
retf
push
pushf
retf
loop
je
cmp
xchg
pop
xchg
outs
iret
shl
ins
(bad)
dec
aaa
clc
sbb
xchg
je
fcmovu
fxch
fmul
(bad)
je
sbb
push
xchg
xor
fwait
add
cmp
out
je
adc
push
call
mov
(bad)
push
mov
div
js
dec
pop
ins
cmp
jmp
jecxz
inc
stos
or
retf
and
pop
in
out
mov
xor
lock
ret
addr16
movs
jle
and
or
loope
mov
int3
icebp
nop
push
int3
sbb
movs
je
mov
retf
mov
gs
lods
lods
xchg
cmp
xlat
pop
addr16
mov
lock
outs
xchg
fwait
add
movs
and
push
inc
call
and
jbe
push
sub
push
ss
in
ins
sub
push
sbb
stos
sub
sub
mov
shr
mov
mov
sbb
shr
inc
test
add
adc
retf
push
hlt
cmp
fcos
mov
mov
addr16
fwait
xchg
sbb
sub
mov
xchg
retf
and
mov
adc
fs
or
ja
fdivrp
jnp
retf
mov
sub
(bad)
push
fnstsw
push
mov
inc
add
mov
mov
push
xchg
pop
popf
daa
ds
mov
mov
gs
mov
fmul
sub
sub
das
jae
push
lods
jmp
pushf
xchg
xchg
xchg
mov
xor
xchg
lds
xor
pop
inc
(bad)
jb
out
sub
fst
fbstp
and
mov
popa
rol
adc
adc
mov
jne
jecxz
dec
mov
mov
cmc
dec
xor
inc
jnp
je
cdq
dec
pusha
ds
cmps
aad
or
ret
repnz
sbb
imul
xor
mov
push
lods
sar
mov
enter
shr
inc
sbb
mov
mov
pushf
das
dec
shl
pop
in
jne
push
fst
sbb
push
push
call
xor
mov
and
sbb
pop
scas
mov
sar
jo
add
and
dec
popa
pop
leave
sub
enter
in
dec
pop
sbb
mov
aam
cmc
jne
xchg
xchg
mov
or
cld
out
test
aam
xor
pop
mov
in
jge
popf
jns
in
sbb
mov
(bad)
push
sbb
mov
call
lods
pusha
sbb
inc
pop
inc
les
jecxz
dec
aad
call
out
stos
sar
shl
test
ret
fcomp
push
add
pop
lock
(bad)
mov
in
jge
fild
loop
lods
mov
add
pop
sbb
mov
inc
test
pusha
(bad)
xlat
sub
jnp
pop
add
and
ror
jmp
call
push
popf
push
popa
pop
jne
gs
pushf
cvttps2pi
scas
xchg
iret
imul
fld
xchg
sub
sbb
mov
and
push
pop
xor
jecxz
push
ret
sbb
dec
fistp
imul
clc
mov
mov
pop
dec
jg
ror
xchg
jl
cdq
cs
sub
mov
lahf
jp
daa
ficomp
or
or
and
add
jecxz
xchg
cld
jp
xchg
pop
inc
push
or
cmp
or
test
dec
dec
sbb
call
stos
or
je
fcom
mov
mov
in
lock
leave
stc
cmp
push
fwait
movs
mov
nop
fild
arpl
xchg
fsub
pop
enter
adc
fstp
loop
fsub
loopne
dec
adc
sub
aam
push
test
scas
sub
mov
dec
cli
bound
or
test
aam
retf
fild
push
inc
adc
int3
jge
jl
lds
popa
sbb
ja
pop
mov
add
sti
shr
adc
add
inc
mov
(bad)
lea
add
les
mov
mov
addr16
dec
aad
test
mov
fcmovb
add
push
or
mov
or
cdq
pop
sbb
repz
xchg
push
cmps
and
sbb
lods
(bad)
xchg
pop
xor
push
jg
sub
cmp
lods
add
mov
and
mov
inc
cmp
cli
scas
dec
in
aaa
inc
push
add
xchg
inc
push
cmp
inc
jb
xor
fmul
lds
iret
inc
sahf
scas
and
push
xor
pop
sub
sbb
in
push
fdivr
pop
test
mov
dec
jbe
pop
fsubr
cdq
push
aas
sbb
dec
dec
mov
repz
aaa
ret
inc
cmp
mov
(bad)
fnstenv
or
dec
lahf
js
test
loopne
jbe
sti
jno
mov
mov
jmp
pop
push
sub
push
jle
add
cmc
iret
in
icebp
add
jp
add
(bad)
stc
jne
dec
mov
aaa
push
push
and
call
sbb
cli
mov
push
jecxz
sub
xchg
adc
in
mov
jmp
scas
mov
and
into
dec
jmp
mov
xchg
mov
and
inc
push
lods
adc
mov
mov
ficom
pop
stc
mov
cmps
lods
das
repz
cs
hlt
dec
repnz
push
cmp
js
inc
mov
sbb
sub
addr16
mov
aad
hlt
pop
movs
popf
mul
(bad)
mov
push
cmp
add
into
and
imul
jmp
ret
cmps
scas
jl
push
stos
inc
mov
ins
gs
bound
or
lock
and
mov
cmp
ja
mov
shl
and
mov
mov
enter
je
inc
fisubr
inc
pop
mov
movs
(bad)
cmps
dec
aas
add
fs
out
adc
iret
sbb
lods
add
lods
mov
mov
call
ins
stos
lock
popf
dec
cmp
cli
sbb
adc
call
popf
daa
dec
jge
push
jle
fist
adc
mov
int3
jne
push
pop
add
int3
jmp
mov
sahf
loop
mov
iret
fcomp
dec
sbb
jg
sbb
jo
jle
push
jmp
adc
ret
data16
(bad)
sti
arpl
jge
ret
(bad)
push
add
push
dec
mov
int
and
mov
dec
popf
xor
dec
mov
in
jb
jmp
in
jno
fldenv
iret
lods
inc
push
cmp
popa
sbb
(bad)
push
xor
xlat
lock
imul
adc
sti
out
mov
jp
ja
add
cli
jle
push
mov
xchg
(bad)
out
push
cmps
mov
dec
pop
pop
add
dec
mov
fistp
mov
cmp
ins
or
inc
into
nop
test
sbb
jae
std
fstp
pop
add
out
dec
xor
and
mov
or
mov
leave
push
mov
xchg
ret
pusha
bound
and
out
stos
inc
aas
cs
cli
arpl
lahf
dec
repnz
xlat
retf
fcmove
mov
xor
pop
cmps
enter
into
and
iret
and
clc
retf
xor
inc
hlt
sub
mov
retf
imul
mov
(bad)
lea
inc
push
data16
adc
push
adc
sahf
dec
(bad)
ja
imul
xor
sbb
jne
ja
mov
push
mov
mov
mul
adc
clc
push
xor
test
push
pop
cwde
and
bound
(bad)
push
popf
and
loopne
xor
test
push
jmp
inc
xor
mov
jns
clc
inc
enter
stos
mov
cmps
nop
out
dec
ret
and
mov
mov
dec
in
imul
jae
xchg
jnp
xchg
sbb
in
aam
sub
mov
adc
inc
adc
cmp
xchg
jne
xchg
clc
(bad)
jge
pop
and
jmp
cld
pop
arpl
into
jmp
mov
pop
data16
sahf
xchg
aam
ins
out
jns
push
mov
add
jg
int
mov
sar
dec
xor
inc
or
mov
lods
loop
cmp
inc
inc
in
ret
scas
(bad)
jnp
mov
mov
adc
lods
add
push
rcr
mov
add
mov
dec
adc
(bad)
inc
mov
call
ret
(bad)
stos
(bad)
fsub
sti
fcompp
xor
jle
add
sbb
cs
jmp
mov
mov
arpl
es
and
in
sbb
mov
retf
scas
jp
call
inc
leave
(bad)
iret
cld
loopne
inc
sbb
sub
mov
dec
xchg
mov
cmc
and
mov
pop
in
fcmove
xor
jle
in
leave
sbb
mov
sahf
sub
aas
inc
repz
pusha
aam
mov
mov
imul
mov
or
test
mov
xor
mov
es
repnz
in
add
enter
adc
xor
add
add
sub
cmps
loopne
call
les
xor
into
mov
mov
je
movs
shl
inc
pop
xchg
nop
aam
mov
popa
cli
jge
dec
leave
or
inc
fs
cmc
pusha
loope
xor
jns
xchg
clc
push
xor
sar
es
outs
(bad)
mov
pop
cmps
std
jae
cmp
mov
sub
mov
rol
jl
mov
ds
adc
(bad)
mov
cmp
xlat
and
ins
cmp
hlt
pop
das
or
mov
mov
mov
sbb
into
scas
jecxz
xchg
stc
out
fcos
in
pop
jno
jno
dec
push
inc
pop
ja
adc
push
test
or
cmp
push
push
xor
(bad)
hlt
jnp
int
inc
fsub
jecxz
imul
jae
inc
dec
or
retf
mov
hlt
fisub
push
dec
cmp
retf
mov
ins
xor
pop
sbb
hlt
retf
and
stc
sub
jno
inc
push
inc
sub
xchg
mov
add
sbb
adc
xchg
sub
sbb
iret
data16
sbb
cmps
fld
out
cmp
aam
push
test
push
pop
inc
rol
int3
pop
retw
sbb
jge
out
mov
les
(bad)
je
jmp
stos
adc
es
mov
and
pop
sbb
inc
sub
cmp
cld
jae
mov
xchg
icebp
in
lods
mov
inc
nop
cli
add
out
cdq
xor
inc
jns
sub
xor
jle
outs
mov
cdq
pushf
pop
mov
out
lds
and
retf
mov
dec
popf
push
and
push
lock
cs
and
stos
enter
mov
mov
and
pop
fstp
or
sbb
in
dec
clc
mov
ja
mov
xchg
ds
fwait
sbb
cmp
adc
(bad)
push
cmp
xchg
and
adc
ins
sbb
mov
xchg
push
xchg
ror
shl
sbb
maxps
ins
test
cmc
fsubr
lahf
pop
or
pop
pusha
movs
xchg
shr
aas
inc
mov
or
jb
dec
xor
mov
push
cwde
adc
or
pusha
pusha
jo
lods
imul
arpl
and
gs
fcomp
and
pop
ror
jnp
dec
pop
pushf
mov
(bad)
jmp
in
inc
or
add
or
loop
mov
mov
xor
or
or
test
jmp
iret
and
imul
mov
pusha
inc
icebp
mov
stos
mov
xchg
sbb
out
mov
jns
xchg
push
dec
xor
leave
jb
mov
retf
jl
iret
push
adc
mov
mov
or
dec
mov
call
ror
cwde
ins
fs
out
rcl
pop
add
sub
ror
int3
movs
mov
xchg
sbb
jae
ret
les
adc
xchg
jl
test
jmp
mov
xchg
lock
or
dec
imul
in
inc
push
and
pop
xor
pop
fsubr
jle
adc
cmps
mov
in
xor
cli
fild
popf
repnz
jecxz
cmc
int3
not
call
loopne
cwde
js
adc
icebp
shl
and
div
pop
and
and
mov
mov
cmp
push
jbe
and
rol
into
ins
outs
inc
hlt
xor
mov
(bad)
loop
xor
mov
aas
fnstsw
fild
cmp
neg
sbb
ins
dec
mov
fs
das
(bad)
push
and
sqrtps
xlat
xor
stos
adc
inc
mov
dec
jp
mov
adc
push
and
push
stc
test
pop
stc
idiv
into
popf
add
out
mov
mov
fucomip
ficomp
xor
push
jp
loope
arpl
dec
mov
jmp
mov
mov
imul
xor
std
jmp
xlat
ja
push
int3
and
shl
pop
inc
cmps
push
and
mov
sbb
dec
loopne
jbe
call
scas
mov
call
retf
or
inc
push
xor
jge
loopne
ins
add
out
push
retf
or
sub
(bad)
push
leave
pop
sbb
xchg
imul
jle
in
std
gs
lea
ss
push
jg
dec
out
lea
xchg
pop
mov
js
jae
lahf
ret
inc
adc
in
ins
jno
jmp
mov
add
addr16
and
xor
in
dec
pop
mov
mov
sbb
or
and
push
outs
not
mov
or
add
bound
idiv
repnz
(bad)
movs
xor
enter
stc
test
sar
dec
push
ds
mov
or
in
test
dec
cli
idiv
push
mov
add
ror
jle
inc
out
sahf
inc
xchg
f2xm1
out
jae
jne
adc
mov
icebp
mov
aad
enter
and
arpl
jg
pop
mov
iretw
dec
stos
hlt
mov
or
jg
add
mov
xor
jle
shl
inc
in
into
sub
push
sub
pop
mov
cmp
adc
jmp
dec
fsub
hlt
sbb
pop
adc
pushf
adc
rol
mov
rol
cs
outs
mov
mov
mov
or
inc
addr16
cli
add
mov
xchg
jle
(bad)
lea
mov
jl
sub
(bad)
cli
pop
ficomp
addr16
(bad)
iret
jbe
sbb
ret
aas
push
push
pop
add
cdq
add
pop
dec
sti
xchg
ja
and
mov
mov
es
ficomp
mov
xchg
sbb
idiv
clc
std
mov
inc
dec
out
jne
ret
jbe
loopne
jmp
jmp
jae
and
mov
or
cdq
cli
faddp
lock
push
ror
and
out
xlat
std
sub
add
ds
adc
scas
push
dec
icebp
ja
xor
div
or
mov
or
or
imul
pop
pop
mov
es
fwait
jne
mov
mov
pop
cmp
jno
inc
test
lahf
cmp
mov
ds
(bad)
(bad)
cmc
retf
jmp
aam
xlat
mov
inc
ja
pop
cmp
and
cmps
mov
dec
setns
adc
adc
out
adc
pop
push
sti
rcl
inc
cmc
leave
or
cmp
xchg
in
jle
and
aas
call
or
push
push
jo
movs
(bad)
stos
mov
fistp
ror
mov
in
nop
out
push
mov
addr16
inc
jmp
aas
stos
stos
xor
cwde
xor
sbb
pop
and
mov
imul
or
pop
movs
stos
pop
out
in
xor
xchg
(bad)
imul
rol
lahf
mov
xchg
sub
test
dec
push
lods
adc
push
cli
es
inc
stos
or
push
call
mov
jnp
mov
fstp
mov
or
aad
das
mov
in
sahf
stos
xlat
test
out
lahf
loopne
adc
jmp
stc
(bad)
inc
mov
ss
mov
add
inc
mov
out
mov
(bad)
xchg
les
nop
jmp
loope
push
movs
xor
cmc
xchg
and
pusha
(bad)
ja
push
lock
repz
lds
pop
lahf
and
xchg
hlt
xor
out
fcmovb
int3
jae
sbb
sub
psubq
xor
inc
mov
dec
adc
ins
rcr
jnp
shl
test
push
dec
jae
xlat
repnz
test
or
pusha
dec
aad
xchg
push
and
or
push
jl
in
dec
mov
and
mov
push
test
js
jne
lock
pop
aas
jne
in
adc
mov
cmps
in
pop
cdq
pop
push
add
add
xor
adc
outs
out
push
push
aad
loop
inc
icebp
or
fnstsw
mov
aad
push
fcmovbe
enter
and
test
clc
(bad)
jns
(bad)
mov
inc
and
mov
ds
mov
pop
inc
les
fwait
scas
sbb
pop
in
movs
outs
fnstenv
mov
sbb
imul
dec
push
jnp
jmp
dec
xlat
add
rol
cwde
ins
cs
mov
xchg
arpl
and
mov
and
jl
sub
ja
mov
or
test
lock
lods
mov
inc
and
push
enter
sbb
test
adc
xchg
loop
inc
mov
(bad)
sbb
dec
aam
xchg
daa
fwait
loope
dec
mov
shr
inc
inc
in
leave
mov
inc
lods
mov
sbb
sub
pop
xchg
mov
and
inc
sub
jge
jecxz
ja
jl
ins
fcomip
jg
stos
dec
fsub
add
cmp
into
out
adc
inc
std
out
mov
ret
sbb
jo
mov
dec
dec
je
jo
in
rcr
movs
in
inc
jne
or
pop
and
test
sub
js
pop
push
xchg
sete
sbb
push
push
mov
push
adc
cdq
mov
int
mov
ins
dec
jecxz
ds
(bad)
ins
lds
mov
in
xor
rcr
mov
and
inc
lods
retf
out
pop
xor
mov
data16
adc
loop
jmp
(bad)
movs
xor
loop
pop
jmp
stc
das
adc
cmp
adc
call
jecxz
jbe
or
sub
mov
inc
arpl
and
movs
inc
or
sbb
fldcw
or
mov
fiadd
jmp
lods
or
xchg
je
cmps
mov
mov
xchg
jo
repnz
ret
bound
in
add
pop
lods
iret
std
push
sub
mov
mov
mov
jae
sar
mov
inc
mov
jg
fst
data16
push
fnsave
jmp
in
inc
shr
lock
in
adc
ret
xor
dec
jne
(bad)
xchg
loope
stos
xor
das
mov
stos
xchg
rcr
sbb
xor
mov
fldcw
push
sar
mov
cmp
loop
xchg
xchg
jle
cs
enter
xor
mov
int
inc
jbe
aas
lods
sbb
hlt
sub
or
out
test
aad
call
mov
and
fisub
xchg
push
ror
push
sub
mov
mov
mov
(bad)
push
fwait
js
mov
jp
pop
jo
pushf
push
je
adc
stos
xchg
lods
sbb
mov
mov
dec
jl
mov
mov
mov
or
cmp
(bad)
test
loope
arpl
mov
push
dec
cmp
sbb
data16
sub
jg
(bad)
and
inc
mov
cs
test
fucomp
nop
dec
xchg
jno
xor
mov
mul
rcr
in
aad
iret
pop
inc
sub
outs
popf
xor
lods
aas
mov
or
push
mov
jae
jb
sub
cmp
aad
lea
jg
inc
repnz
dec
call
xchg
adc
sbb
mov
pop
xor
inc
jecxz
sub
add
add
cdq
inc
scas
call
ins
mov
sub
cmp
jmp
nop
das
and
(bad)
aad
xor
inc
sub
mov
(bad)
hlt
movs
pop
pop
rcl
mov
movs
dec
push
ret
inc
out
push
enter
imul
add
xchg
out
mov
fldcw
cmps
xchg
cli
push
or
mov
or
int
sub
cdq
dec
xor
ja
adc
adc
push
cmp
xchg
das
cwde
mov
ror
je
push
ins
add
jmp
mov
jl
mov
imul
mov
add
fmul
arpl
pop
jecxz
cmp
xchg
sar
and
xchg
push
add
dec
cmp
jnp
jp
xchg
cvtpi2ps
iret
sbb
popf
out
lods
mov
packuswb
lea
sub
pop
idiv
aam
fwait
imul
das
repz
mov
sbb
int3
inc
clc
outs
into
rcl
dec
and
add
and
shr
mov
in
cli
jg
dec
dec
jmp
adc
scas
inc
pop
jne
lea
cwde
jp
sub
push
mov
cmp
movs
jnp
ja
and
adc
sbb
jg
mov
pop
add
mov
or
mov
xchg
retf
ins
sahf
mov
in
clc
push
push
push
test
or
stos
arpl
push
push
cmc
int
leave
xor
push
je
mov
or
in
jno
add
test
cwde
xchg
xor
mov
sub
(bad)
push
in
out
mov
imul
xchg
mov
or
jle
out
ret
xor
xor
mov
sub
gs
in
call
outs
push
div
adc
imul
and
js
and
addr16
push
and
daa
aaa
out
jne
jb
sar
jecxz
mov
int
cdq
loop
fisub
ja
daa
lods
mov
adc
mov
mov
push
ja
push
pop
cmps
pop
dec
or
sub
out
popa
sub
addr16
push
or
movs
xchg
adc
sbb
xchg
mov
and
mov
adc
cmp
stc
sub
out
add
mov
mov
out
movs
inc
leave
sbb
movs
sbb
pop
sub
xor
pop
mov
mov
movs
ins
xor
mov
jnp
fcom
mov
(bad)
mov
ror
and
lock
mov
push
sub
jae
sub
jo
cmps
dec
clc
mov
out
neg
js
push
xchg
retf
sti
mov
xor
jg
repz
xchg
jne
shl
aam
mov
dec
mov
rol
repz
in
and
rol
sbb
sbb
xchg
push
adc
pop
sub
fcom
cs
pusha
cmp
shl
jno
shl
in
push
addr16
ret
dec
jbe
cmc
cmps
scas
pop
cmp
and
sbb
inc
xor
hlt
sahf
pop
ss
cmp
bound
test
sub
jnp
inc
mov
jecxz
adc
call
ja
push
add
jp
lock
nop
test
sub
outs
sub
xor
xlat
mov
dec
push
pop
xchg
loopne
and
push
jbe
int
arpl
aaa
mov
xchg
sbb
jmp
mov
sbb
shl
adc
mov
push
pop
addr16
ror
pop
pushf
sub
mov
(bad)
sti
jns
cli
mov
and
loop
mov
push
inc
push
les
pop
(bad)
jmp
mov
mov
xor
stos
loope
jb
mov
add
fsubr
dec
das
neg
jge
xchg
sbb
lahf
sub
add
mov
dec
or
mov
outs
(bad)
push
add
adc
cli
loope
or
adc
inc
push
stos
fwait
ror
fdivr
push
aad
xchg
xchg
jbe
les
push
ret
popa
gs
fiadd
mov
aad
xor
aad
jno
sbb
jno
push
inc
sbb
stc
mov
ror
aad
xor
add
out
out
push
mov
ds
mov
aam
bound
mov
sub
outs
cmps
xchg
cli
mov
and
fmul
and
add
mov
ss
push
movs
jb
cmc
inc
(bad)
xor
lock
lds
xchg
mov
imul
shr
loopne
dec
nop
push
sbb
dec
mov
xor
stos
or
mov
or
in
mov
(bad)
push
inc
inc
aas
stos
movs
neg
pop
repnz
retf
lahf
sub
repnz
lahf
inc
aas
inc
pop
xor
mov
mov
jns
xor
pop
ret
int
dec
repz
test
xchg
nop
mov
rol
add
enter
iret
mov
ja
arpl
xchg
int
jo
or
sbb
out
mov
sbb
daa
sub
push
std
mov
popf
mov
(bad)
rcl
and
lods
sbb
stc
outs
mov
pop
sahf
jnp
fcmovu
out
dec
dec
xchg
hlt
xor
jmp
xchg
xor
ret
jecxz
mov
sbb
iret
fstp
pop
popa
loop
mov
outs
sbb
cld
sbb
sbb
jne
repz
fwait
xchg
sub
call
mov
repnz
cli
fldenv
push
imul
test
pushf
retf
or
mov
xor
and
push
push
sub
jmp
xor
fisttp
mov
ret
call
ins
jge
cld
adc
jno
jb
jmp
lahf
dec
push
nop
out
addr16
add
dec
cmps
fcmovne
mov
test
dec
out
mov
into
out
js
jg
in
jmp
xor
dec
push
in
pop
(bad)
lods
jno
(bad)
lahf
repnz
cmc
retf
rcl
xor
push
mov
push
test
in
add
jmp
mov
sub
test
inc
cwde
mov
movs
cmp
add
dec
dec
cmps
aas
out
pop
fst
mov
jcxz
fdiv
sar
ret
or
jnp
cmp
lahf
loopne
(bad)
shl
in
data16
pop
push
inc
sub
out
adc
mov
inc
out
inc
dec
std
push
push
ret
adc
mov
hlt
jmp
cmc
fistp
inc
mov
lods
mov
ins
scas
fadd
xor
add
push
mov
ficomp
xor
push
sbb
call
inc
js
sub
out
mov
xor
pop
imul
inc
cli
inc
push
mov
jno
pushf
push
xor
stos
and
mov
lahf
add
pop
test
mov
mov
xor
push
out
dec
push
mov
jecxz
push
cmp
sub
cmp
call
jmp
xchg
aaa
jo
dec
mov
mov
retf
sub
mov
mov
test
loopne
jae
mov
and
lahf
icebp
test
and
adc
and
xor
push
aaa
push
jno
cmp
dec
loopne
add
ins
sahf
jo
out
repz
add
stc
jmp
inc
mov
jge
in
ins
dec
inc
out
cmovne
xchg
clc
push
loope
inc
cmp
cwde
scas
sti
(bad)
push
sub
sti
push
dec
pop
stos
add
inc
imul
jb
stc
pop
stos
mov
loop
pop
dec
ins
sti
mov
pop
push
bound
jae
xchg
and
sub
jns
cmp
ins
xlat
dec
mov
cmps
sbb
arpl
bound
pop
inc
mov
adc
shl
mov
mov
outs
xchg
aad
cmp
rcl
mov
adc
popa
jo
xchg
enter
lahf
dec
mov
mov
xlat
jo
mov
fwait
xchg
and
lods
repz
add
jmp
xlat
push
pop
push
sbb
fs
std
lds
ret
fcom
xor
jp
icebp
gs
and
aaa
pop
daa
frstor
xchg
(bad)
popf
adc
push
retf
cmp
dec
dec
ja
fisttp
and
jg
push
sbb
inc
lds
cmps
inc
outs
mov
sub
mov
push
mov
arpl
mov
ret
movs
stos
dec
jmp
jp
sbb
cmp
push
or
cs
inc
dec
dec
sar
hlt
(bad)
jmp
out
aaa
das
pop
sub
mov
mov
pop
stc
mov
pushf
mov
idiv
jb
sub
inc
pop
cld
add
arpl
and
adc
ror
int3
pop
xor
mov
sbb
or
xchg
jmp
stc
test
jmp
out
cmp
dec
mov
xchg
and
xchg
data16
jmp
and
loopne
inc
(bad)
in
mov
push
sub
cmp
mov
fisub
loope
ins
xchg
imul
lods
pop
adc
jb
(bad)
mov
sub
popf
addr16
imul
xchg
pusha
and
push
jl
pop
and
sub
icebp
mov
inc
ror
ret
xor
dec
test
repz
inc
out
loop
inc
mov
mov
pop
cs
repnz
push
or
pusha
cld
repnz
js
int
push
rol
or
arpl
inc
xchg
pop
sbb
and
adc
dec
or
jg
mov
jns
cmp
sar
test
cs
sub
sub
push
and
sbb
nop
aas
jmp
mov
or
(bad)
and
fwait
push
loopne
loop
and
inc
pop
addr16
sub
fwait
sar
in
mov
inc
rcl
popf
adc
xor
ds
aas
sbb
sub
nop
ret
xchg
mov
xchg
dec
cmps
in
add
adc
inc
popf
dec
aad
(bad)
neg
shl
dec
mov
push
adc
mov
call
pop
sub
push
cmp
and
xor
shl
xlat
and
jb
or
mov
pop
or
test
stc
push
push
jle
add
pop
pop
jno
jae
fwait
mov
(bad)
and
sti
stc
arpl
xchg
les
test
mov
jp
xor
loop
add
dec
xor
jle
int3
push
aam
lods
and
mov
cmps
cli
test
cmp
ret
mov
lods
nop
dec
jl
test
jae
test
push
popf
push
fmul
lds
jb
mov
cmp
fcmovne
xor
clc
add
add
dec
cwde
xchg
ja
into
mov
shl
cmps
xchg
sbb
in
mov
push
in
or
pusha
daa
les
loope
retf
mov
push
lahf
scas
pop
cmp
xlat
push
and
loopne
adc
or
jno
sbb
ins
mov
jb
dec
inc
and
sub
add
shr
out
mov
mov
jg
mov
out
mov
cmp
or
shr
mov
mov
call
jmp
sub
cmp
int
add
test
mov
add
in
jae
ror
movs
cld
call
mov
aam
icebp
lds
xchg
mov
push
mov
pop
pop
bound
fdivp
pop
mov
sub
cwde
mov
movs
xor
lods
xchg
aam
push
dec
or
and
adc
(bad)
cmc
dec
push
pushf
fist
ss
push
adc
push
mov
mov
jmp
jp
fbld
mov
dec
push
mov
in
retf
mov
cwde
mov
(bad)
test
cwde
int
add
xchg
xor
fist
adc
add
adc
push
xor
cmp
sub
pop
(bad)
icebp
mov
inc
stos
add
cdq
jp
sub
dec
int
mov
adc
imul
(bad)
mov
in
je
ror
arpl
jmp
test
mov
push
fwait
std
(bad)
jle
and
mov
std
shr
(bad)
cdq
push
(bad)
scas
and
(bad)
jge
inc
jnp
jo
stc
call
inc
push
outs
iret
cmp
shr
and
jo
out
push
jg
cmps
cmps
pop
pop
out
mov
xor
add
fistp
push
daa
stos
jge
js
scas
je
fcmovnu
sbb
cdq
jae
stos
imul
inc
jle
fsubr
jecxz
shl
mov
and
sub
sub
pop
and
fbld
add
xor
sub
outs
fsubr
jge
sub
or
jecxz
mov
and
adc
movs
and
jp
and
je
sub
pop
nop
arpl
and
mov
mov
cmp
fdivr
fnsave
sub
mov
add
les
dec
mul
push
movs
xchg
mov
aam
inc
mov
loope
cmc
ret
lds
cmps
adc
jecxz
push
call
repnz
push
xor
xlat
pop
sbb
mov
cmp
movs
arpl
pop
add
outs
jb
sbb
add
cmp
loopne
rol
inc
push
add
ds
fbstp
retf
pop
div
or
jnp
mov
inc
mov
gs
xchg
sahf
add
mov
pop
inc
inc
push
pop
mov
out
pop
test
rcr
test
adc
jbe
mov
(bad)
xor
pop
mov
xchg
xor
into
push
cmp
jecxz
(bad)
push
retf
pop
jb
das
int
sub
lock
sbb
icebp
push
sar
xchg
das
jo
xchg
mul
pusha
mov
jns
dec
push
adc
test
outs
call
rcl
nop
or
push
bound
out
jnp
movs
mov
inc
sahf
enter
dec
xor
loopne
(bad)
imul
sbb
cmp
fild
push
es
out
adc
retf
arpl
cmp
dec
adc
and
ret
push
jle
test
mov
imul
and
test
dec
jmp
xor
jne
imul
mov
pop
xchg
xchg
dec
sahf
cmps
jnp
(bad)
retf
fs
mov
in
push
inc
inc
sub
or
pop
add
or
icebp
mov
xor
out
and
mov
fsubr
outs
add
mov
cmp
push
fwait
inc
movs
push
mov
push
sar
shl
pop
rcr
adc
outs
stos
dec
shl
pop
dec
sahf
xchg
sti
push
sbb
mov
mov
mov
fild
leave
ds
mov
mov
cmps
sub
add
mov
add
dec
sub
imul
stc
jb
and
(bad)
cmp
pop
sub
pop
into
push
pop
(bad)
xchg
jns
sbb
test
push
ja
or
cmp
cmp
rol
std
scas
mov
inc
pushf
or
cmps
inc
lea
mov
cmp
sub
pop
loopne
pop
jg
ja
mov
mov
mov
cmp
and
test
add
or
outs
mov
fs
jle
adc
aad
xchg
xchg
sar
nop
inc
sub
pop
call
adc
push
pusha
(bad)
daa
pop
sub
or
loope
fstp
pop
cmp
xchg
(bad)
xlat
xor
mov
mov
mov
(bad)
das
push
lods
cmp
cdq
add
test
add
mov
xchg
loope
pop
mov
mov
cmp
pop
dec
xchg
fadd
inc
mov
xor
(bad)
ja
and
aaa
addr16
shl
adc
sbb
push
cli
jbe
aas
lahf
outs
jmp
in
imul
mov
cmps
lahf
lods
sub
out
shl
mov
mov
ficom
sbb
mov
adc
cmp
daa
pop
mov
retf
xchg
into
sahf
les
js
test
xchg
hlt
mov
sbb
inc
jl
shl
(bad)
les
aaa
in
push
adc
imul
imul
inc
mov
retf
mov
mov
push
push
cmp
cdq
aaa
daa
cmp
inc
pop
xchg
pop
sbb
fwait
sar
push
movs
dec
call
mov
sar
push
icebp
mov
or
cmp
mov
ins
ins
xor
(bad)
sbb
pusha
mov
movs
sti
iret
pop
out
push
fst
xchg
xchg
rcl
jle
pop
add
rol
cmps
das
lods
fcomp
mov
mov
retf
out
xchg
movs
shl
inc
inc
xchg
or
mov
add
movs
int3
mov
push
fsubr
call
test
mov
jle
mov
outs
adc
jns
retf
mov
je
push
pop
mov
bound
mov
ret
dec
mov
fwait
jmp
nop
mov
inc
ds
inc
fidiv
lock
scas
cli
jbe
mov
sub
sub
test
test
shl
pop
add
icebp
and
sbb
lods
std
add
rep
xchg
in
pop
stos
out
in
faddp
jae
into
mov
mov
add
icebp
lods
repnz
enter
movs
mov
jmp
pop
cmp
in
shl
pop
out
inc
xchg
(bad)
fwait
icebp
jmp
mov
sub
out
jmp
cmp
jmp
out
and
sbb
sub
das
shl
dec
xor
loop
or
xchg
jmp
cs
ja
loopne
stos
add
mov
pop
out
and
xchg
push
xor
xchg
mov
ss
(bad)
std
mov
imul
dec
or
iret
cmp
rcr
push
jmp
pushf
adc
inc
nop
retf
das
jle
loop
add
sub
jne
adc
sub
jns
jmp
ret
add
push
inc
jae
sar
icebp
stos
sar
shl
and
rcl
ss
(bad)
jg
add
pushf
aam
pop
movs
mov
into
or
jge
jns
jne
adc
pop
adc
inc
mov
std
xchg
aaa
les
cmp
(bad)
jp
and
in
cmp
or
mov
gs
mov
outs
xlat
pop
lea
movmskps
mov
and
mov
int
xchg
mov
mov
bound
ja
int3
loopne
mov
loopne
aas
les
addr16
jne
ficomp
pop
mov
inc
dec
add
cmc
xchg
(bad)
or
dec
ja
pop
sub
scas
iret
mov
das
xchg
shl
imul
je
repnz
pop
dec
leave
mov
fadd
lods
test
mov
inc
clc
mov
xchg
ja
sbb
sub
mov
pop
inc
mov
add
jecxz
pop
and
sbb
mov
jg
or
push
fdivr
dec
lock
sub
jp
int
adc
mov
mov
out
sar
mov
in
sahf
xor
push
mov
add
scas
add
mov
lods
sbb
xor
rcr
repnz
(bad)
into
ret
xchg
inc
shl
sub
jg
mov
fadd
push
and
mov
pop
dec
or
push
(bad)
fcom
out
sbb
push
lds
and
sbb
push
mov
(bad)
jp
out
jl
rol
inc
cmp
xchg
cmps
sahf
mov
ins
shr
lods
xchg
ret
out
ja
jge
mov
adc
xchg
outs
or
jmp
cmc
(bad)
xor
xor
xchg
dec
dec
cmps
enter
jl
jnp
jns
stos
addr16
and
pop
xchg
pop
cmp
sub
mov
push
mov
pop
out
out
in
loope
pop
mov
(bad)
jo
cmc
and
push
lods
adc
imul
adc
das
xchg
pop
mov
add
dec
sub
jmp
adc
mov
mov
fidiv
pop
cs
mov
cmp
repz
push
jmp
dec
pop
out
jo
imul
(bad)
push
cmp
pop
(bad)
mov
(bad)
mov
xchg
push
pop
icebp
into
fisubr
pop
retf
das
or
push
xor
imul
xchg
jmp
fsub
(bad)
mov
xchg
(bad)
sub
mov
push
push
mov
inc
mov
or
repz
sbb
pop
and
sub
syscall
ins
or
(bad)
or
repnz
cwde
neg
jbe
or
mov
in
mov
outs
fstp
xor
and
inc
cwde
(bad)
(bad)
cmc
idiv
data16
lods
stos
xchg
sbb
aas
cdq
pop
push
cmp
mov
outs
add
lea
test
push
repnz
jl
imul
lods
rol
xor
retf
js
mov
bound
not
dec
test
jg
xlat
outs
popa
out
or
fcomi
xchg
push
cld
lar
mov
nop
ds
stos
out
pop
retf
mov
packsswb
sub
pop
cmc
jl
punpckhdq
xor
jno
arpl
xchg
loopne
std
add
in
or
add
dec
outs
mov
xchg
xchg
xchg
daa
jno
adc
repnz
mov
popf
inc
cmp
inc
pop
mov
idiv
push
cmp
iret
sbb
push
dec
ficomp
add
ja
push
push
iret
inc
xor
aad
rcl
inc
push
mov
ja
cli
mov
pop
ror
into
movs
mov
jb
or
pusha
add
sti
add
add
call
sub
popa
retf
call
push
test
lods
scas
cmovno
inc
pop
mov
lea
daa
and
mov
mov
xor
mov
stos
fwait
out
sti
xor
push
movs
cld
imul
add
mov
pop
or
bswap
mov
mov
(bad)
sar
inc
or
mov
push
gs
xor
push
cmp
fld
inc
ret
jmp
mov
call
retf
lds
add
pushf
not
icebp
cs
pop
lods
add
add
xchg
ds
push
adc
sbb
xor
sbb
push
pop
push
sub
pop
cwde
adc
fimul
jecxz
push
clc
push
jl
aam
adc
sub
xchg
xchg
pusha
inc
pushf
sbb
pushf
test
pop
jmp
sbb
(bad)
lahf
xchg
sub
xor
nop
xchg
call
idiv
mov
jae
hlt
cwde
lock
xlat
arpl
cmp
icebp
addr16
fs
jecxz
test
bound
test
pop
xchg
xchg
stos
lahf
adc
fld
icebp
ins
out
lea
aam
xchg
fstp
push
pop
imul
xor
xchg
mov
stos
sub
loop
(bad)
dec
pop
adc
add
in
cs
xor
popa
add
pushf
(bad)
pop
pop
pop
leave
xchg
jp
jno
add
das
mov
pop
in
adc
xchg
add
pop
cdq
add
add
push
or
jmp
mov
dec
jo
nop
lods
fisttp
clc
loopne
add
sbb
(bad)
out
(bad)
aas
sbb
pop
mov
mul
ins
mov
das
pop
sub
into
ds
xlat
loop
jo
call
fsub
xchg
scas
cmp
mov
mov
fcom
dec
inc
lds
inc
sahf
dec
pop
mov
lds
bound
inc
mov
mov
pop
mov
adc
out
push
and
(bad)
out
push
cwde
scas
test
sti
sti
mov
cld
xor
fild
retf
inc
xchg
addr16
cs
popa
lods
fucomip
adc
xor
mov
dec
(bad)
(bad)
pusha
cmp
cmps
shr
jae
mov
jbe
xchg
push
or
popa
mov
scas
sbb
pusha
mov
lods
add
stc
jle
popf
xchg
and
out
ins
ds
mov
cmp
xchg
mov
sub
daa
es
mov
fnstsw
adc
fwait
xor
leave
push
dec
inc
xor
mov
jno
lods
js
fs
pop
mov
and
adc
and
aam
or
cmps
mov
retf
xchg
(bad)
push
cmp
mov
xchg
adc
cmp
aam
dec
imul
fild
inc
mov
(bad)
adc
add
or
ffree
loope
mov
mov
popf
sbb
push
out
cli
test
aas
ja
sub
cmp
aad
add
jbe
jecxz
sub
mov
cmp
iret
dec
add
mov
xchg
scas
std
enter
pusha
(bad)
or
jg
ins
xor
fsub
xor
das
jp
add
ins
aam
mov
test
or
stos
test
pop
int
push
or
in
mov
outs
cwd
inc
sbb
lea
push
gs
dec
sub
cmp
popa
out
dec
mov
mov
pop
xchg
ss
fsub
lods
jecxz
adc
inc
inc
mov
cmp
mov
mov
sub
adc
and
dec
inc
(bad)
out
inc
test
pop
cli
xchg
loopne
idiv
jns
inc
ds
sub
jmp
inc
std
push
add
jg
das
arpl
mov
push
retf
inc
out
sar
cwde
push
sbb
cmc
fldcw
mov
push
push
ret
icebp
lock
pop
cmps
sti
or
scas
call
push
rol
cwde
lahf
and
mov
das
push
push
gs
jge
jp
mov
pop
test
sub
cwde
lock
(bad)
mov
mov
call
repz
cmp
out
and
xor
jl
imul
cmp
or
ds
sub
ficom
es
dec
fwait
test
jge
call
(bad)
fnstsw
scas
mov
inc
xchg
cli
sbb
xor
sub
push
ror
test
sub
fadd
xchg
ins
push
xchg
rol
call
ja
ret
jae
repz
pushf
outs
lahf
cs
loop
push
call
xor
pusha
lods
jl
or
pushf
sub
jg
arpl
mov
push
push
sbb
pushf
mov
mov
fmul
rcl
fbstp
dec
push
(bad)
fadd
mov
test
test
imul
sub
push
jbe
ds
xchg
mov
push
cld
cmps
mov
rol
(bad)
arpl
std
cmp
add
ins
into
js
or
div
or
test
cmp
adc
hlt
xor
std
jp
stos
(bad)
or
sti
and
push
add
jno
nop
pop
adc
xor
xchg
sub
xchg
mov
inc
jp
dec
push
retf
movs
adc
pop
(bad)
push
ficomp
mov
hlt
fstp
pop
popa
jbe
mov
xchg
lds
inc
mov
out
mov
sub
sbb
cmps
inc
or
test
pop
or
out
ja
add
adc
gs
es
pop
daa
sahf
pop
scas
ss
in
and
jg
inc
cmp
jnp
das
into
xchg
jge
mov
lods
push
adc
xor
sbb
aas
fmul
pop
repnz
adc
sbb
daa
cs
or
xor
lock
pop
gs
cmps
and
or
les
jmp
add
mov
out
dec
call
xchg
mov
dec
lds
cdq
imul
xchg
pop
std
lds
cdq
mov
push
lods
iret
fbld
rol
lods
adc
sub
mov
lods
or
inc
jg
aam
fwait
inc
in
add
into
dec
mov
jns
cmp
xchg
bound
test
push
addr16
fst
js
loope
mov
pop
mov
add
jg
xchg
inc
cdq
pop
cmps
cmp
jle
mov
in
mov
sbb
mov
mov
pop
add
dec
stc
(bad)
jb
xchg
xchg
ja
cld
loop
and
dec
cmp
adc
xchg
xor
(bad)
fmul
xor
jns
data16
push
ds
fnstenv
cmp
adc
addr16
jne
xchg
pushf
jg
pop
or
adc
cwde
cmps
lods
jae
adc
je
mov
ja
fs
push
sbb
xor
push
fwait
adc
adc
jno
daa
out
enter
lock
inc
push
jb
pop
pop
cmps
mov
loope
sub
jae
outs
jae
xor
out
adc
rcr
or
mov
scas
movs
imul
sbb
in
enter
stos
ret
outs
add
push
sub
and
dec
mov
pop
dec
mov
iret
mov
adc
dec
pusha
pop
add
pop
sub
sub
sbb
xchg
scas
(bad)
jne
xor
pop
cmp
leave
inc
in
pushf
pop
mov
inc
xchg
lahf
sar
and
bound
inc
push
or
lea
sbb
jge
retf
jno
inc
mov
pop
repz
in
cli
xor
dec
xor
adc
ret
push
iret
mov
shl
pusha
mov
in
sub
inc
mov
mov
or
add
in
mov
aaa
push
ins
or
(bad)
push
pop
out
lahf
pop
add
cmps
inc
pop
aam
call
jecxz
cmp
out
jmp
je
push
and
aaa
adc
loope
cmp
jmp
shl
js
(bad)
loop
fcom
sbb
sub
adc
and
outs
retf
out
add
sti
leave
in
or
(bad)
jnp
and
call
(bad)
cld
mov
and
push
cmc
sbb
lahf
out
mov
adc
or
or
cli
sub
sar
push
xchg
adc
inc
je
push
outs
lods
or
mov
out
in
pusha
mov
push
out
cli
outs
outs
fstp
sbb
iret
sbb
push
jne
out
adc
icebp
inc
or
cmp
pop
mov
addr16
inc
(bad)
scas
jb
cmp
daa
jne
cmp
mov
(bad)
loope
add
push
jne
lea
adc
test
mov
jbe
cmp
cdq
xor
pop
daa
jecxz
push
mov
add
xchg
adc
idiv
subps
(bad)
test
outs
or
mov
cli
outs
pop
add
(bad)
xlat
mov
test
sbb
popf
inc
jmp
sbb
dec
std
xchg
stc
lock
cmc
pop
dec
popf
lahf
xchg
test
jb
jp
jbe
push
mov
pop
xchg
lock
hlt
inc
js
cmps
in
sbb
jae
jmp
sub
mov
push
add
loop
aas
out
rol
out
and
(bad)
loop
sub
pop
fisubr
xchg
fstp
jmp
std
xor
pop
test
ins
outs
jmp
cmp
xchg
clc
jecxz
xor
les
test
cmp
or
xlat
inc
sub
cs
leave
jg
or
mov
nop
xor
adc
lods
std
out
and
add
mov
mov
adc
cdq
or
push
inc
cmc
mov
mov
or
jmp
(bad)
jo
and
addr16
and
daa
jbe
icebp
in
xor
ds
leave
fmul
and
jge
jno
movs
mov
idiv
sbb
icebp
jo
out
aad
repnz
jnp
pop
rol
in
cli
scas
fldenv
jge
xchg
or
loope
cmp
sub
clc
aaa
mov
shl
add
sub
pop
test
cdq
mov
pop
mov
xor
adc
adc
xchg
mov
xchg
stos
pop
inc
imul
xlat
aaa
outs
xor
mov
cmp
retf
add
dec
push
push
push
pop
cmp
mov
cmp
in
sahf
xor
pop
add
cdq
adc
daa
adc
adc
ins
xlat
push
dec
or
test
scas
adc
bound
and
add
push
mov
popf
lds
sub
jns
pop
outs
mov
fs
add
mov
xchg
or
loopne
sti
into
jg
cmps
imul
jnp
shr
add
sbb
inc
adc
cld
sbb
arpl
jae
sti
cmp
pop
adc
cli
pop
js
jmp
ret
lods
lock
rcl
stos
and
mov
cmp
sub
pop
push
arpl
jo
in
stos
outs
lock
adc
jp
mov
sub
jns
xchg
mov
or
mov
cmp
jbe
push
push
std
lahf
mov
fistp
fld
cmp
popa
out
hlt
retf
cmps
(bad)
sub
mov
movs
push
repz
fwait
dec
and
std
loop
daa
aad
or
rol
stc
sahf
mul
or
rcl
or
mov
dec
add
int
nop
and
daa
push
jp
or
call
aaa
clc
and
and
and
mov
jnp
cwde
fs
add
(bad)
aaa
or
dec
and
and
das
sub
mov
inc
jmp
(bad)
jbe
movs
call
fwait
pop
adc
out
outs
or
mov
xchg
push
gs
or
sbb
cmc
movs
and
jl
lea
sbb
pop
not
loopne
jae
jmp
jge
push
mov
cmp
cdq
fs
add
and
bound
dec
sar
loopne
dec
jo
xor
cmps
add
int
dec
cmp
outs
mov
ror
imul
js
or
jmp
dec
lea
xlat
mov
mov
sahf
jmp
add
xchg
loopne
pop
enter
push
fcmovne
or
cmc
cld
loopne
and
test
sar
mov
pusha
xchg
pop
pop
xchg
test
push
pusha
(bad)
cwde
out
xor
lahf
outs
ret
jg
dec
mov
add
iret
retf
icebp
movs
inc
aaa
daa
mov
icebp
hlt
jae
call
mov
cmp
mov
sub
je
lds
and
push
ret
sub
int3
call
mov
ins
dec
pop
mov
popf
fcmovbe
mov
mov
rol
inc
cmp
mov
ret
(bad)
fnstenv
out
xchg
inc
stos
(bad)
int3
cmps
neg
sahf
test
mov
adc
sbb
scas
ja
sub
rcl
mov
cmps
je
xchg
sbb
stos
psubd
jmp
and
aaa
dec
fld
in
mov
ins
call
mul
jl
popa
or
pop
and
hlt
fnstcw
cmp
dec
rcr
(bad)
addr16
xchg
sahf
mov
sbb
push
xor
fstp
aas
pop
jmp
push
mov
push
hlt
mov
mov
push
es
adc
out
or
cmp
shl
jle
xchg
inc
sbb
push
popa
not
stos
aam
hlt
dec
fmul
scas
xchg
mov
clc
jmp
inc
xor
ret
div
pop
adc
dec
cmp
shl
mov
js
repz
jno
call
stos
dec
inc
dec
pop
pop
sbb
or
pop
mov
adc
nop
pop
out
jae
dec
mov
dec
inc
rol
dec
xchg
jne
nop
mov
sub
dec
sub
leave
test
cli
cmc
cmp
cmp
aad
repz
fldcw
sub
enter
stos
js
rcr
cmp
sbb
dec
popa
out
cmp
mov
jb
fadd
inc
pop
mov
and
retf
push
ret
and
pop
call
inc
jle
adc
adc
call
or
xchg
aam
adc
inc
lock
xor
outs
mov
pop
mov
cmp
push
inc
cmc
dec
sbb
(bad)
out
inc
fs
shl
scas
sub
arpl
push
add
hlt
in
mov
and
mov
fs
cld
add
ins
sbb
add
jae
aas
jmp
mov
div
rcl
jmp
les
dec
imul
rol
push
push
adc
sahf
std
dec
add
add
stc
and
lds
movs
outs
(bad)
scas
ret
fst
lds
shl
pop
clc
push
lods
outs
xor
xchg
fst
xchg
dec
in
mov
cmp
mov
mov
outs
sbb
enter
hlt
add
dec
call
test
je
stos
les
mov
les
outs
jmp
dec
out
pop
add
pushf
cli
sub
fidiv
pop
xor
cmp
jmp
jle
push
xor
loope
mov
movs
popf
(bad)
xchg
mov
cmp
sti
pop
inc
popa
jno
push
enter
add
mov
icebp
aas
dec
lods
test
fstp
mov
ja
xchg
pop
jmp
sbb
sbb
cmp
not
outs
adc
std
jb
and
cmp
push
xchg
cwde
mov
repz
aaa
dec
xchg
dec
and
aas
out
push
jmp
adc
add
clc
cwde
(bad)
push
mov
xchg
sub
in
sub
jns
add
mov
dec
push
push
test
cmp
xchg
iret
es
adc
iret
iret
xor
inc
jb
cli
fs
xlat
movs
mov
jmp
iret
ficomp
cmp
mov
sbb
xchg
lods
or
jno
rcl
sub
shr
fst
cs
pop
inc
mov
sub
inc
inc
sbb
das
adc
(bad)
aam
xor
lods
cmc
shl
push
and
pop
pop
inc
fst
dec
(bad)
hlt
(bad)
pusha
cmp
std
jg
or
pop
and
inc
fist
test
mov
jne
pop
enter
jp
or
test
in
repz
push
hlt
(bad)
fstp
stos
push
icebp
stc
cli
cdq
call
fidiv
ret
std
cmps
adc
and
shl
cmp
push
das
push
or
sbb
inc
loope
and
popf
cmps
jecxz
sbb
sub
(bad)
outs
inc
nop
adc
pop
or
jecxz
mov
(bad)
fnstenv
adc
int3
or
adc
jmp
call
not
inc
push
fdivr
aam
mov
mov
push
ins
mov
inc
(bad)
or
(bad)
sbb
dec
sbb
pop
cs
lods
test
cmc
adc
jae
pop
jmp
jle
rol
jno
ret
(bad)
loopne
sub
mov
and
aas
enter
int3
add
xor
stc
push
mov
ins
jne
dec
rcl
fist
call
mov
iret
push
cmc
mov
in
pusha
jle
sub
xchg
cmp
nop
pop
xchg
ins
xchg
div
sub
xor
jbe
pushf
xchg
(bad)
in
repz
out
in
cwde
jns
or
lods
mov
imul
mov
ja
jno
sub
mov
sub
jnp
or
lds
jmp
push
jbe
push
repz
and
dec
mov
mov
pop
push
mov
xchg
dec
jl
sub
pop
inc
jnp
xlat
add
packssdw
gs
(bad)
sar
xchg
repz
out
cli
lods
dec
mov
push
pusha
inc
lahf
hlt
dec
cmp
fsub
(bad)
cli
dec
outs
xchg
pop
sbb
out
ins
(bad)
jg
scas
sub
push
mov
cmp
xchg
cmp
jnp
stos
xchg
aas
mov
retf
adc
or
sar
jno
inc
xor
fdiv
ret
push
inc
mov
test
out
out
or
(bad)
sub
loop
outs
push
adc
add
pop
in
in
call
int3
(bad)
out
lock
dec
jge
(bad)
std
jle
shl
sbb
cmp
and
pusha
inc
rol
jbe
xchg
xor
cmps
pop
and
sub
shl
push
adc
icebp
movs
sub
pop
fs
dec
pop
mov
loopne
icebp
mov
xor
je
nop
dec
stc
jbe
mov
int
jno
daa
mov
sub
(bad)
(bad)
movs
and
ret
mov
out
mov
xchg
sub
mov
inc
in
xchg
pushf
mov
push
xchg
mov
or
aas
into
icebp
inc
jge
pusha
push
add
push
xchg
ins
jbe
push
push
jle
out
xor
fwait
mov
push
cmps
xchg
xor
inc
(bad)
push
mov
lods
adc
int3
imul
fwait
daa
cmps
fst
sbb
jnp
push
enter
push
mov
cwde
fidiv
add
dec
sbb
add
or
cli
or
or
cmp
sbb
add
jge
mov
sbb
and
cmps
xchg
jmp
leave
cld
pop
movs
daa
cmps
int3
inc
or
out
and
leave
ins
inc
shr
pop
sahf
test
xor
sub
mov
mov
ss
call
pop
jmp
dec
cmp
mov
mov
int
(bad)
jne
les
xor
je
mov
scas
cmps
dec
push
test
shl
push
jl
popf
ins
adc
or
movs
mov
fisttp
leave
push
mov
add
mov
inc
sub
ret
popa
(bad)
int
mov
lea
popa
test
cmps
xor
or
mov
(bad)
popa
adc
aam
xor
fmul
call
sar
cmps
popf
xchg
movs
pop
push
ss
mov
or
icebp
ret
cmp
aad
add
pop
xchg
pop
xor
pop
dec
mov
fcom
jne
jle
xchg
push
add
iret
jo
fadd
xor
aaa
dec
dec
xor
sub
pop
add
fs
mov
sub
mov
inc
std
mov
mov
sbb
inc
outs
or
push
jle
ss
and
xor
inc
fmulp
imul
cmc
inc
push
ins
ja
icebp
sar
xor
bound
in
sbb
pop
add
and
cli
adc
dec
lods
xchg
aam
lods
enter
mov
movs
or
mov
push
mov
hlt
adc
cld
hlt
or
xchg
int3
aas
lods
and
imul
xchg
push
sub
out
enter
jp
das
xchg
not
neg
jnp
out
in
out
in
or
sub
js
jmp
push
xchg
ja
loope
pop
(bad)
loopne
rcr
(bad)
push
(bad)
jb
xchg
(bad)
std
xchg
mov
adc
pop
stos
pop
push
pop
lock
(bad)
bound
(bad)
fidiv
jle
jns
mov
add
push
mov
test
retf
data16
(bad)
movs
xchg
mov
mov
fld
scas
pop
test
and
int
jno
or
test
sub
mov
pop
arpl
jp
mov
sbb
call
dec
dec
cmp
xor
cli
(bad)
sbb
hlt
inc
daa
ss
add
outs
mov
adc
in
push
jmp
and
outs
cmc
and
and
push
fld
push
ret
out
stc
or
rcr
scas
fidivr
mov
mul
jae
cwde
xchg
sub
(bad)
sub
sar
add
push
sti
jne
fisttp
sbb
lods
xchg
jmp
sub
xor
dec
jo
mov
xor
and
daa
mov
addr16
sahf
mov
inc
sub
mov
fld
sub
mov
popf
fs
or
pop
std
fisub
aas
inc
xor
xor
retf
shl
push
test
out
mov
push
adc
adc
pop
addr16
mov
pop
xchg
cmp
sbb
lea
call
and
mov
retf
sahf
adc
clc
cmp
std
push
stos
inc
push
mov
adc
call
and
movs
push
mov
push
adc
add
inc
add
inc
push
ror
jmp
stos
lods
bound
inc
repnz
icebp
cld
pop
jnp
cmp
loop
adc
fisubr
retf
(bad)
cmpxchg
pop
sub
pop
push
fmul
push
pop
pop
into
xchg
fistp
and
daa
sub
jge
push
(bad)
xor
lea
fld
ins
stos
add
call
sbb
mov
inc
mov
fdiv
inc
adc
mov
mov
mov
and
push
aad
sub
adc
inc
pop
pop
push
dec
xor
xor
mov
pop
jle
hlt
inc
inc
mov
shr
cli
sar
out
call
mov
mov
(bad)
ds
out
out
movs
jp
xor
repz
jne
fimul
mov
and
cmps
adc
(bad)
enter
(bad)
cli
adc
call
in
xchg
cld
retf
das
ret
jnp
cmps
or
sub
lock
dec
ficom
add
or
rcl
hlt
mov
inc
adc
cwde
dec
pop
lds
mov
pop
adc
fisub
sar
adc
add
or
ror
mov
jno
loope
pushf
sub
and
push
pop
je
jno
ret
cmp
hlt
cmp
imul
rcl
or
sub
cmp
dec
pop
or
out
mov
aaa
push
push
xor
xchg
add
inc
pop
inc
out
stos
ins
cmp
retf
in
out
sbb
mov
cmp
fisttp
mov
pop
imul
push
in
(bad)
mov
jge
stc
dec
dec
outs
push
sub
mov
lods
jle
imul
jbe
sub
adc
mov
add
pop
or
and
mov
sub
jmp
or
ja
repz
(bad)
pop
dec
test
loopne
stc
mov
inc
pop
pop
(bad)
pop
stos
test
xor
lds
pusha
and
inc
push
mov
ins
gs
jo
ret
jle
cmp
pop
xchg
(bad)
jns
jp
push
addr16
fdiv
out
push
cmp
pop
iret
xchg
ins
(bad)
dec
sub
pop
movs
sbb
mov
jmp
loope
xchg
xchg
mov
(bad)
mov
ret
bound
cmp
fsubr
add
rol
pop
jle
xchg
inc
fmul
fstp
mov
adc
cwde
ja
cdq
dec
movs
hlt
arpl
jne
jbe
mov
pop
movs
es
lods
retf
or
bound
cmp
div
xor
mov
xor
pushf
in
mov
sbb
outs
js
adc
arpl
(bad)
in
(bad)
jle
mov
div
(bad)
ins
fcom
jmp
sti
dec
mov
fadd
inc
jo
lods
push
pop
fidivr
fsub
enter
(bad)
jmp
movs
stos
xchg
cmp
in
push
fidiv
cmps
mov
push
lock
add
xchg
sub
mov
jb
fsub
rol
and
cmps
icebp
cwde
push
xchg
xchg
or
cdq
xchg
ja
cmps
or
ja
or
ins
xor
rcr
adc
xchg
push
or
adc
fcmovnbe
jp
xchg
ret
and
jge
mov
aaa
cwde
loopne
inc
dec
mov
movs
jp
add
adc
daa
mov
adc
arpl
xor
cmp
inc
dec
pop
mov
xor
xor
in
mov
js
addr16
xchg
dec
mul
inc
mov
gs
jmp
sbb
push
mov
jecxz
add
sbb
inc
pop
lods
sub
sbb
jecxz
neg
jae
ss
mov
aad
and
inc
xchg
fwait
or
cmp
(bad)
xchg
sbb
dec
lfs
nop
cmps
push
and
(bad)
stos
xlat
icebp
pop
daa
mov
cwde
sub
add
fist
icebp
pushf
stc
stc
lahf
cmp
mov
xchg
fs
aaa
mov
cmc
mov
or
stos
mov
dec
pop
jmp
das
add
loopne
pop
or
arpl
pop
pop
adc
adc
clc
mov
out
retf
(bad)
jle
fxch
int
ret
outs
clc
and
xchg
ror
lock
push
cmp
cmp
hlt
jecxz
scas
adc
(bad)
mov
nop
jl
push
lods
in
icebp
pushf
ins
pushf
clc
out
dec
fiadd
xchg
mov
jp
popa
adc
ss
ficom
jno
(bad)
push
test
push
and
clc
shr
push
or
cmps
fs
pop
sub
(bad)
jmp
outs
xchg
xor
aas
jo
dec
(bad)
and
pop
stos
mov
cmc
mov
dec
icebp
xchg
daa
add
or
inc
xchg
jg
leave
popa
mov
fwait
pusha
mov
pop
adc
aad
adc
(bad)
mov
adc
push
or
inc
stos
(bad)
push
dec
ret
cmp
push
push
ds
add
in
or
sub
mov
movs
mov
fbld
int
pop
daa
bound
xchg
ins
push
call
cmp
mov
test
lods
adc
jmp
push
cld
pop
repz
ins
mov
popa
adc
mov
repz
pop
adc
push
inc
mov
es
bound
scas
or
or
and
cwde
mov
ja
cmps
adc
push
fldcw
dec
pushf
pop
aam
icebp
popf
aad
lea
adc
repz
enter
push
fdivr
inc
xor
mov
pop
test
dec
mov
jmp
mov
xchg
push
sub
cwde
or
xlat
jo
jl
daa
shr
aas
mov
mov
pop
push
retf
fsubp
(bad)
lods
xchg
(bad)
fsubrp
sahf
in
(bad)
mov
ja
jns
dec
fdiv
mov
stos
jb
push
xchg
fldcw
aad
jl
ins
jmp
retf
dec
es
mov
adc
outs
mov
xor
in
sbb
js
es
enter
pop
mov
aaa
cmps
push
aaa
mov
hlt
dec
inc
cs
push
add
mov
fist
cmp
pop
loop
jae
and
pop
inc
lods
mov
(bad)
lock
scas
mov
sub
or
pop
daa
test
enter
add
and
mov
stc
cwde
mov
xchg
fbstp
xchg
aam
jns
mov
jno
xchg
mov
cmps
stos
icebp
or
lods
cmc
and
and
test
sub
mov
call
mov
cmp
mov
stos
dec
mov
jo
push
out
or
add
rcr
repnz
inc
jmp
cmc
xchg
clc
outs
adc
push
stos
js
mov
jle
les
pop
mov
mov
push
cmp
fild
pop
or
stos
das
fidivr
pop
iret
neg
shl
sbb
mov
pop
jmp
cli
add
loopne
or
test
dec
jg
cmp
and
xchg
call
add
adc
sbb
test
inc
sub
pop
pop
sbb
sbb
jbe
ja
cdq
sub
mov
jecxz
iret
sbb
rol
inc
sub
xor
push
mov
outs
cmp
and
outs
lea
(bad)
sahf
pop
lods
push
movs
cmp
repnz
mov
add
add
pushf
aaa
pop
retf
add
cld
(bad)
jg
bound
xchg
les
jno
mov
call
into
fild
out
or
fnsave
xlat
sbb
adc
or
rcr
mov
pop
mov
adc
sahf
cwde
adc
mov
fnstenv
pop
inc
jg
inc
dec
xchg
mov
jge
(bad)
jg
jp
inc
jl
enter
je
push
mov
ret
aam
imul
call
dec
sub
xchg
mov
push
in
es
jmp
sbb
out
popa
mov
and
jno
(bad)
or
xchg
sahf
mov
in
mov
push
and
cmp
in
mov
or
fld
out
jbe
cdq
mov
pop
ins
mov
lods
xlat
sub
inc
and
das
inc
pop
jnp
ja
dec
mov
pop
xlat
shl
mov
test
or
mov
mov
daa
inc
xchg
or
sbb
xor
mov
fbstp
hlt
push
cmp
push
mov
fistp
test
xlat
(bad)
shr
mov
repnz
adc
xchg
loope
mov
iret
hlt
sti
out
jne
fld
jp
cs
in
(bad)
adc
mov
(bad)
in
lea
nop
mov
retf
mov
push
iret
outs
cmps
add
mov
retf
pusha
repz
mov
sbb
mov
sub
neg
loop
inc
xor
call
push
mul
add
jno
ds
pop
and
sbb
add
arpl
clc
adc
pop
enter
add
adc
mov
loope
mov
xchg
inc
stos
sbb
pushf
sub
movs
rcl
pop
mov
mov
das
pop
stos
and
fmul
into
mov
ins
jmp
stos
leave
popf
stc
cld
aam
mov
stc
(bad)
mov
ret
mov
fiadd
mov
adc
mov
mov
adc
and
rcl
xchg
stos
push
xor
cld
sbb
imul
out
inc
lods
dec
push
lds
adc
hlt
adc
cmp
push
lahf
cmp
jle
sti
out
pushf
or
sahf
out
sbb
jmp
mov
mov
js
jb
retf
aam
mov
mov
mov
lahf
cs
cmp
or
pop
xchg
aad
sbb
jp
xor
pop
fstp
mov
and
ins
sbb
dec
sub
out
xchg
shl
jne
(bad)
sahf
inc
jo
in
and
cmp
cwde
in
push
xchg
popa
add
jmp
inc
test
sub
mov
cmp
mov
and
fcmovnbe
inc
addr16
cld
ins
jl
cmp
imul
mov
pop
jle
or
leave
xor
dec
push
dec
fcom
ret
out
lock
or
rcl
pop
aas
jmp
inc
push
(bad)
outs
sbb
mov
mov
mov
xchg
(bad)
cld
mov
or
mov
pop
outs
clc
sar
sbb
mov
or
ret
inc
inc
mov
inc
es
jno
and
pop
sub
adc
or
pop
ror
cmp
mov
repnz
push
pop
push
ja
cwde
repnz
icebp
sbb
xor
bound
leave
jle
ins
or
adc
xor
jle
sahf
dec
mov
aaa
push
ret
sti
or
mov
mov
xor
hlt
pop
adc
in
and
and
mov
xchg
inc
xchg
mov
dec
fdivr
add
jp
es
rcl
or
cmp
jbe
(bad)
or
hlt
imul
icebp
(bad)
mov
js
lods
loopne
leave
popf
cmps
push
inc
fild
call
jmp
icebp
mov
inc
or
inc
dec
aam
push
inc
jno
cmp
sub
in
push
outs
lods
xchg
mov
xchg
and
aad
loope
out
sahf
lods
fcomip
lods
dec
dec
bound
mov
test
mov
pop
lea
out
cli
jl
xlat
mov
dec
pop
into
cmc
into
paddq
pushf
fbstp
add
mov
fstp
mov
mov
in
test
test
adc
xor
mov
inc
mov
adc
in
loop
mov
stos
xchg
cmp
fcomp
mov
mov
mov
bound
and
dec
mov
sub
inc
push
or
push
call
aad
jg
jp
xchg
fistp
fld
inc
fsub
shr
in
out
pusha
and
or
shl
add
pop
sbb
and
adc
push
pop
sbb
jnp
mov
sbb
mov
dec
sar
pop
push
push
cdq
(bad)
cmps
adc
mov
pop
loop
push
lock
and
fistp
or
dec
mov
add
xor
ja
fnsave
pop
pop
retf
std
push
lds
stos
leave
pop
and
in
sub
sub
lock
push
nop
or
js
jl
xor
inc
dec
mov
repnz
popa
and
jmp
stos
and
mov
lahf
xor
idiv
cmc
cmc
jmp
pop
fld
test
push
pushf
cmps
test
popa
dec
je
(bad)
and
mov
pop
test
mov
imul
pop
inc
and
jge
je
mov
xchg
scas
jecxz
pop
fdiv
rcr
pop
xor
imul
inc
inc
mov
jae
push
jno
dec
ss
dec
jmp
into
mov
fcom
mov
inc
mov
sbb
call
movs
xchg
scas
stos
xor
pop
push
and
out
shl
scas
ss
mov
and
stc
test
or
dec
push
dec
fwait
xor
in
lahf
popa
fild
mov
xchg
lahf
cmp
aaa
push
mov
cli
sbb
stc
mov
pop
xor
inc
das
pushf
sti
pop
jg
mov
fs
jmp
das
or
cmp
push
aas
xchg
mov
xchg
dec
loopne
lds
sti
cld
loope
dec
cmps
ret
das
jmp
repz
add
call
shr
sbb
mov
mov
movs
out
jnp
add
jmp
cmp
clc
mov
dec
leave
lods
sbb
sub
xor
movs
dec
dec
push
sbb
add
dec
cmp
or
sub
iret
scas
jp
jecxz
rcr
or
cmp
ret
inc
lods
test
and
pop
stc
or
mov
push
int
loopne
lods
or
fmul
rol
dec
mov
mov
pusha
mov
sub
cmps
call
mov
stos
push
and
sahf
jne
sbb
and
mov
add
jp
test
stos
and
ss
adc
ret
ins
push
das
test
pusha
xlat
enter
test
cwde
sub
sub
mov
xor
repz
movs
sbb
ficomp
rcl
imul
cli
inc
popa
in
mov
aam
cs
es
xor
(bad)
and
jg
call
scas
stc
dec
pop
mov
pop
mov
or
push
daa
mov
js
icebp
sub
jmp
xor
or
pushf
adc
out
dec
rol
push
xchg
mov
or
sub
inc
add
mov
in
lea
adc
into
jb
mov
mov
shr
mov
mov
out
iret
je
leave
stc
rcl
cmps
pop
cdq
or
push
cs
test
sub
fwait
nop
(bad)
test
add
inc
or
pop
xor
aaa
jne
mov
mov
test
ror
fistp
push
(bad)
scas
dec
loopne
jmp
dec
mov
adc
outs
xchg
inc
adc
adc
int3
into
dec
mov
inc
cmp
push
test
add
arpl
js
adc
xchg
mov
jne
xchg
inc
xor
stos
outs
sub
inc
push
repz
pop
ret
pop
xor
jbe
pop
jae
fld
ror
sahf
idiv
and
pop
sbb
js
mov
jbe
into
cli
add
scas
popf
inc
xor
addr16
sbb
mov
int3
cli
call
pop
mul
push
or
outs
arpl
pextrw
xor
sbb
lods
cli
lds
jle
jbe
jmp
jmp
mov
cld
mov
push
xchg
jnp
xchg
add
sbb
ficomp
cs
repnz
imul
ja
mov
dec
xchg
cmp
mov
imul
test
in
pop
std
cs
hlt
xchg
dec
jp
fmul
mov
push
xchg
push
mov
dec
data16
and
sar
nop
clc
(bad)
enter
jg
or
ret
xor
mov
cmp
lds
dec
pop
or
ror
cdq
xchg
sbb
jnp
sbb
gs
mov
cmp
shl
idiv
adc
mov
ficom
(bad)
mov
je
daa
xor
xor
mov
fldenv
sub
xchg
pop
sti
in
lea
fmul
mov
xor
mov
shl
outs
ret
adc
cvtps2pd
nop
mov
xchg
inc
mov
rol
into
dec
clc
and
scas
fild
push
cdq
out
scas
(bad)
push
cmp
mov
scas
fisttp
mov
cmc
pop
jl
xchg
mov
push
push
pop
cmc
fnsave
stos
iret
repz
in
and
add
jl
mul
out
xchg
dec
add
inc
cwde
ficom
dec
mov
push
stos
mov
jae
cmp
jae
scas
stos
push
sub
xlat
pop
shl
fwait
sbb
xor
fnsave
clts
cld
cmp
gs
sti
cmps
out
repz
ret
jo
inc
dec
cmc
inc
xchg
ins
push
mov
das
scas
je
les
hlt
fisttp
out
sbb
mov
inc
add
fidivr
pop
shl
cmp
cli
pushf
test
popf
lahf
cmps
or
add
fnsavew
cmp
adc
push
push
sub
or
sub
or
test
jne
add
push
icebp
pop
outs
sbb
xor
jno
push
cmp
adc
inc
scas
jmp
stc
ja
test
push
popf
xchg
fst
sar
jge
add
rcl
loope
hlt
fnsave
scas
xchg
fimul
sub
cli
sbb
sub
xor
std
bound
and
test
push
push
inc
dec
dec
ins
xchg
retf
jne
adc
jo
and
jns
ins
stos
std
jo
stos
sbb
fwait
lods
mov
ins
xchg
test
je
or
mov
jbe
sub
arpl
cmp
cmp
sbb
and
mov
cwde
inc
mov
fdiv
mov
mov
mov
ins
scas
jge
scas
lds
inc
jmp
xor
dec
int3
(bad)
sbb
retf
and
mov
add
pop
xchg
push
frstor
mov
push
bound
repz
out
sti
dec
out
mov
popa
sub
jo
xor
out
pop
(bad)
std
ret
push
inc
out
cmp
ins
and
jge
and
dec
jg
cmp
pop
cmp
or
inc
cmp
pop
sub
call
outs
pusha
or
dec
cmp
fsub
push
sub
cmp
pop
ins
sbb
popa
ins
pushf
adc
add
cmps
arpl
icebp
dec
xor
ja
arpl
sbb
loop
fld
sub
push
fstp
ret
jns
push
push
mov
les
(bad)
mov
mov
in
xor
shr
xor
cmp
leave
jns
jae
cmp
mov
inc
add
into
in
mov
pop
enter
(bad)
xchg
adc
xchg
inc
push
int3
shl
cwde
dec
sbb
jo
push
cwde
stos
pushf
clc
(bad)
repnz
mov
xor
mov
cmp
xchg
jae
sub
mov
jns
pusha
sub
mov
fmul
clc
popf
(bad)
pop
cdq
movs
fidiv
push
outs
test
rol
sbb
int3
outs
and
xchg
and
hlt
adc
rcl
loope
jle
les
xchg
mov
loopne
pop
mov
fsubr
mov
jae
and
repnz
aam
and
xchg
bound
(bad)
sbb
jns
sub
rcr
adc
call
add
iret
adc
inc
pop
jecxz
and
push
ins
dec
test
sbb
outs
and
data16
sbb
push
pop
xchg
xchg
and
fstp
or
sbb
inc
lea
pop
aam
shl
ins
aam
and
repnz
cmp
imul
(bad)
sbb
sub
jp
pushf
es
mov
cmp
pop
ss
test
add
fucomi
es
stos
sbb
fst
mov
pop
push
sahf
xor
mov
xchg
fimul
les
or
and
jno
mov
cmp
jmp
shl
push
mov
dec
push
push
sbb
xor
leave
jle
(bad)
pop
jns
mov
outs
loope
cmp
mov
leave
jp
mov
(bad)
call
movs
lods
jle
inc
neg
lahf
cmps
dec
mov
or
xchg
scas
mov
inc
scas
jmp
pushf
jnp
mov
ror
cld
outs
or
outs
cs
cmp
out
lods
lods
repz
cmp
cmp
into
leave
in
imul
into
cdq
jl
push
xor
retf
jnp
push
popa
xchg
in
push
mov
xchg
mov
pop
and
fs
inc
(bad)
cmps
jl
mov
imul
pushf
imul
stc
call
xlat
xchg
popa
sbb
repnz
loope
mov
push
jg
xchg
mov
sub
sub
in
jg
nop
daa
xor
mov
dec
js
cs
das
scas
sub
push
dec
xor
sub
pop
fimul
xor
mov
scas
pop
mov
inc
inc
cmp
xor
(bad)
shl
jle
daa
mov
test
sbb
sahf
icebp
dec
push
test
jle
adc
jecxz
enter
sub
sub
xor
stc
cmp
xchg
mov
nop
in
mov
xor
jb
das
jns
popf
xchg
and
pop
sub
mov
loope
cli
les
pusha
or
jle
xchg
clc
jmp
arpl
jae
repz
cmps
lock
repz
sub
gs
mov
call
xchg
jle
pop
xor
sub
pop
ss
cmp
aam
fwait
sub
cmp
pop
mov
call
int3
js
push
test
call
sbb
aam
sar
mov
dec
sbb
xchg
adc
xchg
push
sbb
mov
push
sar
in
aad
push
lods
sbb
sub
jp
cli
into
xor
jae
lock
inc
xchg
ret
inc
sbb
or
imul
lds
pusha
ret
pop
add
out
test
and
test
inc
jg
es
fcomp
ficom
pop
inc
repz
dec
xor
stc
push
imul
jl
dec
or
call
cs
int
leave
sub
rol
icebp
add
lods
or
aad
xlat
fisubr
in
bound
out
mov
sti
loopne
cld
fdiv
add
ror
cmp
aad
(bad)
repnz
or
jecxz
cs
div
xchg
retf
mov
out
and
or
xchg
cmp
xlat
mov
jp
or
imul
pusha
dec
rcr
mov
ins
test
or
fmulp
sti
adc
aaa
mov
xor
outs
xlat
add
popf
aad
es
sahf
div
nop
in
adc
cmps
jecxz
jbe
out
xchg
mov
mov
sub
mov
pop
jno
jmp
sub
sub
mov
inc
ins
lock
sub
scas
sbb
retf
mov
adc
(bad)
and
or
cli
mov
rcl
inc
ret
das
xor
cwde
popf
fst
sub
dec
shl
sti
out
adc
sub
add
nop
push
jmp
sub
punpckhwd
shl
(bad)
and
call
mov
add
aam
int3
stos
in
imul
mov
mov
pop
inc
cmp
pusha
push
or
cmps
sub
scas
push
dec
je
adc
pop
sahf
and
daa
fidiv
sub
mov
lahf
pushf
xor
adc
jge
dec
push
inc
cmp
cmp
fist
cmp
xchg
add
addr16
xchg
dec
loop
(bad)
cli
xor
test
inc
add
ret
jnp
pop
and
sbb
mov
fmul
mov
push
cmps
fs
jb
bound
dec
dec
push
call
imul
pop
add
fdiv
push
sub
ret
jbe
aas
mov
neg
mov
je
fdivr
lea
cmp
ins
pop
push
jl
fwait
inc
clc
inc
ins
aaa
pop
inc
xchg
cmp
div
cmp
xchg
in
jbe
mov
js
adc
adc
sbb
xchg
push
jmp
mov
enter
mov
jl
sbb
movs
add
add
cld
mov
mov
or
mov
push
clc
mov
pop
jg
call
inc
retf
cmp
lea
jle
(bad)
lea
movs
call
rcr
adc
(bad)
jo
je
call
(bad)
nop
and
xor
mov
aaa
dec
aas
loopne
inc
pop
sub
jbe
and
add
xchg
daa
add
mov
pop
mov
jns
pop
leave
mov
mov
mov
imul
mov
inc
mov
stos
call
(bad)
icebp
ins
xor
push
sbb
mov
sub
fdivr
arpl
fbstp
adc
push
dec
loop
mov
and
sbb
mov
and
sbb
sbb
daa
adc
ret
push
inc
div
out
imul
inc
add
sub
sbb
adc
pop
pop
inc
jmp
shl
mov
aas
retf
inc
and
mov
jbe
add
mov
xchg
rol
add
jno
jbe
xchg
add
int3
jbe
(bad)
inc
out
sub
jmp
mov
sar
addr16
idiv
add
icebp
mov
inc
(bad)
mov
mov
lea
pop
fimul
lods
xor
pusha
or
call
xchg
pop
stos
daa
cmp
sub
mov
jnp
stos
jmp
sub
movs
(bad)
dec
add
sbb
in
fld
or
rcr
mov
jmp
rol
dec
pop
shl
stc
dec
cwde
jbe
jbe
(bad)
push
lahf
and
out
in
push
ret
sub
and
adc
mov
cdq
int
sub
fcomi
mov
push
cmp
out
jmp
push
gs
jae
inc
out
sbb
xchg
sahf
xchg
arpl
push
out
mov
rcr
je
inc
cmc
and
xor
in
or
pop
pushf
xchg
ins
sahf
mov
out
xor
fcomp
ins
pop
lods
fisubr
sbb
cmp
ffreep
cwde
jnp
cmc
mov
(bad)
call
jmp
or
xor
xor
sti
jmp
add
pop
dec
inc
xchg
maxps
nop
mov
or
xor
clc
js
outs
inc
sbb
push
xor
cmps
movs
sbb
jl
xchg
pusha
adc
xor
add
(bad)
inc
mov
outs
es
mov
in
mov
movs
adc
ins
loopne
sbb
xchg
mov
in
shl
lds
int3
lds
mov
(bad)
repnz
popa
stc
pusha
inc
xchg
clc
and
xchg
bound
mov
lds
loopne
inc
jmp
sbb
(bad)
ja
(bad)
mov
sub
xchg
jecxz
cmp
int
sbb
(bad)
push
fwait
xchg
iret
pop
xor
adc
daa
data16
add
pop
jne
mov
push
mov
cs
xchg
call
add
jmp
(bad)
jmp
sbb
gs
test
enter
(bad)
cmp
push
mov
out
stos
pop
loopne
adc
bound
movs
ins
sub
mov
std
test
cdq
push
leave
addr16
outs
sub
add
inc
ds
jmp
sar
mov
push
cmc
dec
jecxz
das
or
stos
sar
xor
sbb
sub
cmp
invlpg
adc
inc
inc
imul
sub
(bad)
jmp
int
fstp
fidivr
adc
push
sbb
fcmovnbe
mov
xchg
stc
mov
jns
jle
mov
xor
ficomp
or
ss
lods
or
pusha
cmc
fnstenv
cld
cmps
scas
dec
cmp
mov
dec
out
dec
mov
mov
and
xchg
test
loope
fcomp
inc
add
cmp
loopne
(bad)
hlt
aam
mov
dec
ds
enter
dec
push
mov
out
retf
or
xor
pop
mov
pop
loope
push
ss
outs
stc
xchg
sub
xor
inc
in
mov
push
mov
repnz
dec
adc
inc
inc
retf
test
inc
ins
(bad)
loop
mov
add
retf
sub
sub
(bad)
repz
call
(bad)
int
adc
push
stc
arpl
add
sub
xor
fcomip
adc
inc
sub
mov
loope
push
fs
mov
pop
arpl
inc
loopne
push
pop
and
jmp
push
mov
inc
lods
cs
pop
jo
out
jnp
dec
dec
shl
into
sub
mov
inc
mov
das
jne
(bad)
loope
push
(bad)
cmps
psrlw
ret
out
mov
jmp
aaa
mov
stos
mov
dec
mov
cs
aas
int
mov
inc
arpl
pop
xchg
sub
push
(bad)
out
sbb
pop
sub
mov
sbb
push
lds
inc
jns
popf
and
sub
ss
cdq
dec
xchg
fdivr
nop
push
xor
mov
inc
test
inc
rol
xor
mov
aad
test
loope
ss
dec
hlt
dec
ja
mov
arpl
daa
pop
xor
adc
or
dec
call
les
xor
and
xor
std
or
push
retf
add
dec
push
jmp
push
and
adc
adc
inc
arpl
and
mov
movs
push
cmp
leave
xchg
dec
or
inc
inc
mov
xchg
jmp
(bad)
mov
add
inc
pop
rcr
xor
pop
shl
xor
jno
test
je
or
or
out
ret
cmc
pop
lods
push
cwde
xchg
fst
(bad)
cdq
shl
loope
xor
xor
fstp
ficomp
mov
or
cmp
jb
sub
xchg
adc
push
fidiv
jb
cmp
mov
call
mov
sub
enter
outs
xor
and
pop
lahf
shr
mov
rcl
push
fs
mov
jnp
push
xor
push
and
jmp
clc
jmp
ret
inc
(bad)
jp
or
and
ret
lock
pusha
mov
mov
leave
xchg
cmps
jns
jmp
nop
mov
mov
popa
fcomp
call
pop
outs
or
or
and
loopne
out
inc
push
fwait
std
ret
cdq
cld
dec
popa
lods
icebp
jp
sub
or
push
pop
and
xor
imul
aad
add
iret
mov
je
mov
stos
cli
shl
call
jne
cmc
xor
mov
sbb
test
pop
jae
bound
fs
xchg
int
jae
inc
(bad)
out
jge
arpl
xchg
call
jns
sub
pusha
out
push
push
hlt
test
out
ins
push
mov
adc
mov
movs
xor
bound
gs
mov
aad
ja
add
lods
add
jns
repnz
xchg
(bad)
pusha
jge
inc
push
jecxz
sbb
push
pushf
sbb
repz
adc
dec
push
sub
mov
out
push
sub
sbb
mov
mov
dec
loop
inc
pop
outs
sub
nop
pop
daa
fiadd
xor
mov
mov
cli
popa
scas
mov
adc
pop
sbb
aad
lock
jo
dec
inc
pop
mov
mov
je
not
daa
gs
les
stos
test
int3
std
aam
sub
jbe
mov
cld
dec
jb
and
pop
sbb
mov
iret
mov
mov
scas
mov
xor
je
push
mov
not
jno
push
fdivrp
mov
adc
jb
mov
mov
movs
sbb
jmp
sub
jae
dec
sub
adc
lea
dec
mov
xor
inc
daa
dec
into
cmps
cwde
aam
push
loop
dec
cmp
sub
dec
or
sub
fcomp
jo
test
xchg
call
inc
push
jno
call
cwde
sbb
sub
aas
mov
cmps
push
in
adc
jno
not
jnp
add
and
mov
ror
push
ret
out
pop
mov
inc
imul
in
ror
push
ja
cmps
js
xchg
xchg
div
cwde
jbe
or
test
and
test
jnp
(bad)
jecxz
popf
into
out
int
(bad)
xchg
std
mov
in
pop
mov
or
(bad)
fcomi
pop
outs
ret
loop
cmc
mov
sub
dec
and
sub
enter
repnz
ss
je
cmp
popf
aaa
push
pop
stos
retf
daa
add
mov
add
push
adc
adc
jo
fmul
rol
push
ds
imul
xchg
std
push
rcr
stos
std
cmps
dec
test
jnp
xchg
fwait
stc
leave
addr16
addr16
fwait
or
mov
aad
jmp
and
adc
jno
xor
jo
jne
ds
daa
sbb
sti
mov
mov
jae
xor
lods
inc
jmp
or
test
or
push
(bad)
in
mov
mov
dec
or
ficom
or
je
inc
add
dec
fcom
jge
in
jae
call
js
mov
fsubr
and
imul
xchg
push
imul
cmps
jo
sbb
mov
xor
arpl
sub
jecxz
jp
ins
and
mov
fnstenv
retf
xor
jg
dec
fwait
xchg
add
out
xor
pushf
scas
add
mov
jae
fst
xchg
sbb
inc
mov
xchg
retf
and
cmp
dec
(bad)
xchg
adc
push
ds
xchg
lock
jne
pop
xacquire
fimul
sub
femms
lods
pop
add
mov
std
loopne
add
dec
push
xchg
dec
mov
cmp
cmps
call
cdq
out
dec
xor
push
pop
push
cmp
popf
icebp
mul
jo
retf
xchg
cmp
dec
dec
mov
data16
sub
add
nop
shr
xchg
ss
mov
fdivr
mov
cwde
jge
sbb
cmc
and
mov
cmp
sub
imul
or
or
daa
lods
xchg
test
xchg
out
sbb
push
mov
or
push
pop
cmovle
sub
cli
and
cmp
call
in
popa
push
sar
inc
popa
xchg
xchg
add
gs
out
and
(bad)
out
call
ret
mov
inc
rcr
dec
fwait
xchg
cdq
push
mov
push
fwait
xchg
mov
sub
ins
into
shl
inc
xor
(bad)
ds
sub
dec
(bad)
popf
adc
leave
dec
or
jl
adc
(bad)
dec
push
mov
ss
cmps
adc
push
xlat
test
push
fmul
mov
add
pop
aad
sub
stc
push
push
adc
adc
push
or
pushf
xor
pop
add
aas
mov
inc
dec
popf
pop
pop
in
sti
lods
dec
push
mov
sbb
jmp
ins
mov
sub
xchg
fwait
jb
xor
pop
xchg
retf
loope
pop
scas
(bad)
xchg
pop
xor
pusha
push
jp
pop
or
scas
jno
mov
add
cmp
push
push
(bad)
or
sar
and
mov
push
add
xchg
mov
shr
fadd
and
xor
call
push
movs
outs
push
scas
xchg
cmp
js
mov
bound
(bad)
out
add
leave
inc
pop
xchg
mov
mov
inc
jno
ins
cmps
adc
xor
dec
or
shl
pop
cdq
jne
lods
xor
jbe
hlt
in
(bad)
fldln2
adc
dec
loop
fcmovnu
xor
test
jecxz
mov
and
cmc
and
or
ins
and
scas
rcl
sub
retf
and
std
push
call
xchg
jmp
jne
sub
mov
cmp
pop
in
mov
xchg
or
mov
(bad)
push
(bad)
mov
sub
or
enter
int
push
adc
nop
sub
out
repnz
push
ret
mov
inc
int3
in
sub
test
sbb
stos
pop
mov
add
das
sub
movs
jnp
movs
addr16
cdq
xor
call
and
xchg
loopne
jbe
pushf
add
inc
aaa
and
stc
cld
xchg
add
jle
pand
stos
and
mov
mov
push
mov
cmp
nop
mov
je
sbb
arpl
inc
fisubr
not
add
mov
push
scas
and
pop
rcr
ficomp
sahf
jg
cmp
cmps
mov
lock
ror
cmp
mov
aas
ins
pusha
mov
int3
dec
loopne
popa
and
mov
int
mov
std
cmp
in
movs
jb
lods
dec
call
(bad)
pop
sbb
cmps
jmp
jmp
push
or
pop
jae
inc
push
or
push
cmp
fld
imul
jmp
das
cmps
pushf
or
sub
jle
mov
and
jno
mov
icebp
call
out
pop
mov
mov
sub
sub
sub
mov
mov
jno
pop
fwait
sub
mov
mov
sbb
xor
fwait
inc
out
push
add
es
push
fwait
mov
pop
mov
jge
sbb
xchg
pop
(bad)
(bad)
and
ds
jmp
test
gs
jmp
shr
mov
test
loopne
adc
out
and
and
fidiv
int
into
pop
mov
outs
repz
and
fisttp
xchg
fdivr
(bad)
pop
adc
adc
test
ja
dec
mov
(bad)
push
sub
call
or
add
call
lea
in
fild
cmps
sub
xchg
aad
pusha
dec
aas
mov
mov
loopne
clc
fs
xchg
jmp
jecxz
pop
sub
pop
and
loopne
rol
inc
mov
dec
xchg
retf
test
pop
popa
sti
mov
mov
gs
pop
mov
out
je
mov
cld
imul
clc
sbb
(bad)
imul
stos
inc
cmp
push
dec
lods
into
push
hlt
lea
into
cli
popa
and
pop
inc
jp
inc
jno
push
cmp
popf
fmul
out
sbb
mov
sub
mov
pop
xor
rcr
xchg
scas
in
mov
pop
std
addr16
inc
jno
jle
rol
pop
xor
or
cmp
(bad)
pop
sbb
xor
mov
push
fcmovnb
loope
dec
mul
frstor
push
and
loope
sbb
sahf
dec
or
or
xor
or
fcomi
cli
and
std
mov
or
popf
or
sbb
cmp
(bad)
stos
inc
aas
cmps
sub
adc
in
jo
inc
test
cmp
xor
xor
icebp
add
push
or
test
sar
sbb
cmp
dec
fs
mov
pop
sbb
mov
dec
pusha
add
pushf
xchg
dec
xchg
fs
arpl
sbb
pop
adc
shl
scas
pusha
pop
test
xlat
sar
sub
mov
outs
sub
or
inc
movs
into
call
sbb
dec
xchg
xchg
inc
imul
cmp
sub
fwait
test
shl
es
xchg
aas
dec
cmp
push
sbb
daa
add
sti
sbb
into
pop
icebp
cmp
cs
cmps
sub
pop
rol
sub
xor
rcr
sbb
jae
or
cld
test
dec
ficomp
inc
ja
or
cmp
inc
or
push
jno
sub
(bad)
sub
sahf
push
inc
pusha
fs
(bad)
xlat
loopne
push
or
std
stc
mov
push
xchg
xor
cmp
dec
pop
cmc
mov
dec
mov
cmp
jmp
push
pop
ja
idiv
pop
mov
mov
push
test
pop
add
retf
cli
mov
out
xchg
xchg
pop
or
out
je
leave
dec
xchg
jae
inc
cwde
xchg
inc
stos
pop
mov
(bad)
mov
mov
push
jge
nop
push
and
mov
mov
test
adc
sti
mov
jnp
mov
adc
aaa
push
add
rol
cld
fsub
ret
popf
or
mov
movlps
jg
or
rol
and
and
push
bound
jno
js
mov
cld
xchg
adc
cmp
cmp
sub
mov
and
dec
pop
in
loopne
push
sar
cld
arpl
push
and
fdiv
sbb
dec
push
nop
sub
fiadd
sbb
sub
stos
(bad)
(bad)
cmps
scas
mov
sbb
mov
adc
inc
adc
pushf
std
and
dec
mov
cmp
push
rcr
das
enter
pop
jge
dec
or
pop
xchg
out
lods
xchg
retf
cld
jle
mov
shl
lds
stc
dec
pop
aam
push
xchg
mov
xchg
adc
scas
test
shl
ins
sti
xor
adc
push
mov
jne
push
fcomp
xor
cli
test
inc
push
fwait
pop
lods
adc
pop
stos
fmul
adc
in
push
sti
dec
pushf
push
aad
in
gs
jbe
xchg
popf
adc
sub
xchg
lds
xchg
icebp
inc
jns
stos
sub
sub
out
inc
or
pushf
cmp
adc
adc
push
add
arpl
dec
aad
push
add
aaa
mov
sti
(bad)
repnz
(bad)
std
retf
add
cmps
stc
ret
into
add
es
sub
and
jmp
and
dec
bound
and
jmp
lods
push
fiadd
mov
push
mov
iret
mov
or
xor
js
add
jmp
sub
or
inc
xor
cli
jle
pop
hlt
cdq
cmp
cmp
fidiv
adc
dec
mov
std
mov
sbb
sbb
jle
xor
dec
mov
jmp
and
test
lods
jno
push
sar
sub
repnz
or
jo
loope
mov
sbb
aam
xchg
sub
jmp
mov
xor
sahf
jg
stos
dec
(bad)
jmp
xchg
mov
test
movs
call
in
pusha
dec
or
retf
daa
fsubrp
lds
sbb
mov
push
push
popa
mov
cwde
xchg
imul
int3
jo
xor
hlt
pop
jno
pop
jge
and
mov
xchg
cmps
push
cmp
sbb
int
sub
xchg
(bad)
ins
nop
jbe
inc
xchg
or
pop
es
jmp
push
and
inc
fwait
mov
and
into
jno
das
out
inc
sahf
mov
mov
daa
push
fistp
jae
mov
inc
and
cld
mov
xor
push
shl
jg
xlat
imul
push
test
cmp
jge
outs
cwde
pop
push
aaa
repz
mov
mov
call
(bad)
mov
mov
cmp
lods
movs
clc
dec
dec
(bad)
daa
and
daa
jb
or
aam
pushf
les
loope
xor
mov
pop
push
mov
and
sbb
xor
mov
add
pop
iret
push
pop
js
vpunpcklqdq
pop
sub
xor
mov
inc
pop
pop
mov
adc
jb
test
and
adc
sub
cmp
dec
aas
or
int3
xlat
push
push
and
cmp
push
stos
and
gs
nop
dec
sub
aas
mov
(bad)
gs
(bad)
sahf
sbb
cdq
inc
in
pop
inc
repnz
sub
xchg
or
xor
sub
push
cmps
xchg
xchg
mov
fcom
loope
add
xchg
loope
lahf
mov
jmp
clc
retf
mov
lea
jp
test
ins
rol
sbb
mov
lea
imul
xor
add
push
add
lahf
(bad)
iret
pop
inc
jp
cmp
mov
sbb
mov
mov
mov
or
daa
adc
adc
lock
aas
das
dec
popa
mov
dec
dec
das
outs
mov
inc
ror
mov
rol
ret
cli
(bad)
stc
fst
(bad)
push
cli
pop
inc
es
xchg
sub
jecxz
sub
inc
and
ins
dec
loopne
dec
icebp
aad
fstp
lods
xor
xor
xor
xchg
(bad)
inc
dec
cwde
nop
push
cmp
bound
(bad)
xchg
pop
pop
dec
push
ret
lahf
sub
(bad)
sar
xlat
jne
adc
(bad)
inc
lea
sbb
adc
mov
sahf
and
ins
mov
(bad)
and
lods
sar
xlat
sub
hlt
push
xchg
lahf
sub
and
dec
xor
mov
js
cmp
fstp
sub
add
test
mov
jl
mov
mov
cmp
cs
ret
test
inc
mov
fs
rol
sahf
mov
mov
xor
leave
cs
fisubr
jg
pop
add
mov
xlat
fwait
les
fisttp
pop
mov
push
cmc
iret
mov
xchg
fld
xor
push
xchg
sub
daa
add
inc
fdiv
push
mov
push
add
rcl
mov
fcomi
and
push
push
scas
loope
push
adc
repnz
loope
cld
sub
mov
xchg
pop
mov
imul
mov
scas
push
int
push
push
add
cwde
scas
cs
push
ror
test
pop
(bad)
jge
jmp
push
nop
push
mov
pop
and
arpl
shr
jmp
clc
add
imul
mov
sub
pushf
stos
movs
sub
aas
ins
mov
jmp
or
rol
sbb
mov
and
nop
lds
mov
cmp
push
out
xor
and
div
cmc
xor
(bad)
dec
sbb
sub
inc
push
sbb
xor
loopne
outs
in
imul
or
addr16
imul
mov
imul
shl
pop
idiv
fmul
xchg
shl
scas
lods
xor
xchg
arpl
pop
cmps
mov
jae
ja
ds
inc
out
cmps
pusha
inc
jae
sub
in
adc
mov
addr16
je
jmp
std
adc
push
fidiv
sub
aam
sahf
inc
stos
out
xchg
sbb
lea
aaa
xchg
rcpps
sub
pop
cmp
scas
aas
outs
out
pop
je
pusha
leave
dec
ror
pop
xchg
add
out
xchg
inc
ins
fs
cmps
mov
fstp
outs
repz
push
jae
lods
mov
daa
xor
punpckhbw
int3
or
shr
rcr
push
enter
out
aas
scas
popa
xor
ds
imul
mov
mov
push
int3
test
and
jge
ins
(bad)
push
fwait
shl
jle
pushw
jecxz
shl
jmp
lea
push
and
inc
xchg
xchg
imul
mov
mov
daa
pop
and
sar
sub
shl
fs
out
add
adc
and
in
and
iret
stc
sahf
repnz
(bad)
or
push
add
(bad)
movs
adc
fldenv
and
mov
inc
retf
lods
fld
(bad)
jmp
sub
mov
xchg
(bad)
mov
inc
and
outs
mov
or
fild
sahf
lea
adc
cmc
push
movs
xor
adc
or
ja
imul
adc
neg
cmp
ret
(bad)
in
rol
jae
add
add
js
or
lods
ret
mov
and
xlat
xor
or
mov
adc
push
into
outs
pop
jmp
xchg
and
sub
(bad)
jb
fstp
std
mov
jp
or
pop
in
out
bound
push
jp
es
fsub
sub
jmp
call
pop
leave
loopne
in
dec
mov
dec
xor
leave
inc
cld
shr
mov
outs
jmp
pop
adc
push
cmps
inc
xor
lea
shl
push
add
stc
inc
dec
xor
pop
xchg
stos
enter
jecxz
sahf
test
xchg
imul
sti
sti
mov
push
sbb
xchg
xchg
fcmovnbe
clc
leave
(bad)
jmp
ret
xchg
mov
inc
sub
inc
test
ins
je
mov
dec
dec
xchg
stos
pop
cmp
push
mov
xchg
cwde
sub
xchg
ror
mov
(bad)
jbe
out
xchg
mov
jns
retf
stos
mov
mov
or
or
loope
fisttp
pop
cdq
out
pop
mov
mov
call
int3
jns
xor
popf
ins
call
out
cmp
test
daa
rcl
scas
lock
mov
mov
push
cmp
inc
inc
inc
xor
mov
pop
sbb
add
mov
mov
dec
inc
nop
mov
inc
rcl
mov
popa
arpl
sbb
mov
icebp
mov
arpl
repz
xchg
cmc
jno
jmp
rol
call
leave
cmps
jmp
(bad)
cmp
sbb
stos
and
adc
shl
(bad)
scas
sub
sbb
stos
sahf
lods
(bad)
loop
push
adc
idiv
scas
dec
fnstcw
cmp
mov
(bad)
xchg
iret
inc
rol
pushf
(bad)
cmp
inc
popf
out
add
pop
outs
fisttp
mov
adc
jp
sub
or
bound
and
inc
jb
adc
mov
test
mov
sbb
xor
mov
lock
inc
(bad)
cmps
pop
xchg
imul
(bad)
mov
adc
shr
xchg
jl
sbb
lds
jne
mov
inc
jo
xchg
outs
push
shl
cwde
dec
jo
cmp
ror
mov
jg
pop
push
mov
out
push
enter
pop
ss
adc
std
fwait
fwait
mov
push
sub
and
into
inc
retf
fisubr
adc
xor
hlt
or
dec
loop
daa
les
loope
aaa
ret
sbb
ins
stos
xor
jnp
in
stos
push
(bad)
call
lods
mov
gs
mov
xchg
lock
cmc
ror
jbe
les
xchg
xchg
popa
sub
pop
sub
dec
jl
ret
movs
dec
cmc
enter
cmc
retf
sbb
popf
add
popa
pop
ds
cld
ja
(bad)
rcr
imul
mov
inc
xor
clc
cmps
test
sbb
lods
or
jbe
jns
or
mov
int
fisttp
std
mov
lds
iret
jae
test
jge
adc
clc
dec
ffreep
nop
cli
in
(bad)
int
add
(bad)
mov
clc
mov
dec
retf
xor
gs
mov
mov
hlt
arpl
dec
rcl
cmp
lea
jo
hlt
pop
and
mov
ins
push
popa
dec
lds
pusha
xchg
call
sub
pop
jmp
mov
xchg
nop
mov
xor
mov
fdiv
movs
retf
aad
push
leave
dec
mov
aad
xchg
dec
sub
ss
je
out
cmp
scas
xor
or
lock
retf
aam
shl
mov
and
jne
add
mov
out
popf
jecxz
mov
jmp
adc
cmp
dec
call
int3
jb
sbb
xchg
aaa
jno
pop
addr16
cmps
inc
xchg
sub
mov
jl
mov
xchg
jmp
or
in
addr16
fcomi
mov
jle
div
push
jmp
shr
cmp
add
xchg
add
lock
je
rol
lds
mov
inc
imul
sar
sub
std
jge
jmp
and
adc
push
xchg
call
mov
or
jle
jle
mov
and
(bad)
aad
les
and
into
pop
or
jle
or
(bad)
(bad)
mov
xchg
add
outs
add
push
sbb
push
dec
jle
push
mov
scas
inc
sub
stos
scas
xchg
pop
enter
sti
mov
xor
sub
rcr
fnstsw
mov
jno
ret
dec
movs
or
push
add
and
dec
in
mov
cmp
push
(bad)
adc
ss
sub
shl
ja
lods
lods
push
jge
mov
or
push
fwait
loop
ins
cmps
mov
iret
jl
in
pop
dec
cmp
pop
dec
pop
jne
les
mov
sbb
sub
ds
arpl
pop
push
repz
dec
mov
fwait
popf
aaa
fsub
daa
sub
int3
retf
sahf
mov
test
lahf
xor
dec
sbb
xor
push
sub
(bad)
hlt
mov
cld
mov
mov
sub
or
inc
loope
lds
iret
ret
ret
rcr
test
mov
mov
jl
and
jmp
mov
test
cmp
dec
cld
in
nop
es
(bad)
aas
xchg
inc
(bad)
ret
out
pop
sbb
sbb
call
imul
inc
pop
xor
mov
or
cmp
dec
stos
stos
mov
pop
jne
cmp
mov
xchg
mov
pop
repz
mov
ss
xchg
mov
sbb
cmps
cmp
push
adc
mov
sbb
idiv
jo
addr16
xchg
jl
nop
xor
mov
xacquire
je
add
jb
sbb
mov
adc
mov
addr16
iret
xor
xor
jae
mov
jbe
ret
iret
xchg
(bad)
or
popa
ins
retf
inc
jnp
movs
push
movs
jno
test
xor
loop
adc
mov
sub
jo
fnsave
shr
jmp
out
jo
or
(bad)
jne
stos
xor
inc
lea
(bad)
and
stc
hlt
and
xor
xchg
sbb
fwait
in
mov
(bad)
into
dec
inc
sub
pop
pop
sub
pop
xor
outs
(bad)
mov
xor
in
adc
or
sahf
ss
or
or
inc
pusha
dec
mov
jmp
sub
ja
repnz
mov
aam
loop
pop
daa
push
push
sbb
sbb
or
leave
fild
loopne
or
cli
mov
dec
inc
pop
xor
mov
cdq
jno
outs
xchg
(bad)
out
push
je
pop
nop
pop
sti
cmp
jno
sbb
xchg
mov
jmp
cmp
icebp
dec
ss
js
dec
push
mov
(bad)
and
push
mov
cmp
ret
fist
sbb
sub
sar
stos
adc
add
mov
imul
mov
xor
into
ins
scas
fdiv
pop
imul
ret
repz
(bad)
jp
pop
shr
dec
pop
jnp
xchg
call
fcom
or
and
sub
inc
dec
pop
pop
fs
cmp
sbb
inc
mov
or
inc
cmps
in
lock
in
into
jo
mov
sub
jecxz
mov
inc
int3
xchg
fild
outs
sti
loope
sub
inc
in
mov
ds
test
jae
sub
std
jl
popf
imul
jecxz
pop
sub
aas
push
retf
jecxz
icebp
sbb
arpl
ins
adc
clc
and
sbb
and
outs
push
and
aaa
inc
out
cmps
mov
mov
les
mov
cmp
jp
push
xchg
es
or
add
mov
nop
(bad)
icebp
sar
pop
cmc
(bad)
xor
xor
fisubr
adc
into
mov
outs
push
xor
hlt
lock
or
fsubr
mov
mov
les
dec
push
retf
fsubp
jmp
dec
jns
int
cmps
push
fbld
movs
rcl
in
pop
addr16
int
call
mov
adc
and
add
pop
hlt
repnz
les
movs
sub
add
aam
mov
in
ficomp
pop
inc
pop
sbb
shl
cdq
cli
dec
mov
pop
movs
dec
cmc
xchg
sub
imul
sub
into
pop
lds
rol
add
pop
sub
xor
xlat
ret
(bad)
daa
imul
retf
(bad)
fistp
sub
cmc
lods
test
mov
mov
leave
jg
dec
imul
mov
ret
call
inc
call
xlat
mov
jge
mov
ret
jmp
inc
or
lock
cwde
cmp
adc
scas
call
inc
jp
pop
xchg
movs
push
dec
dec
mov
mov
test
aad
test
test
xor
sbb
mov
mov
pop
enter
inc
or
es
mov
add
mov
ja
mov
fstp
mov
int3
cmp
lock
and
in
dec
xchg
mov
pusha
sub
cmp
and
aad
adc
xchg
jecxz
push
xchg
sub
xlat
and
cli
xor
das
dec
cmc
dec
xor
call
jp
call
fbld
in
jmp
aad
and
mov
popa
or
pop
inc
ret
pop
pop
sub
dec
(bad)
mov
mov
cli
(bad)
cmps
cmp
jge
adc
pop
aam
scas
cmp
push
xchg
dec
cmps
sbb
ret
mov
inc
out
nop
nop
mov
mov
(bad)
dec
xchg
fdivp
or
and
cmp
push
popa
leave
mov
outs
lods
sub
in
push
cmp
packssdw
pop
stc
dec
ja
push
or
dec
jne
out
mov
inc
add
sar
and
adc
or
imul
mov
sbb
lea
or
test
cmc
jae
jbe
leave
cmp
pop
sbb
jecxz
aas
jmp
lahf
inc
hlt
cmp
call
sub
in
(bad)
out
rcl
inc
dec
jle
repz
(bad)
bound
dec
daa
push
outs
fstp
lods
mov
inc
clc
push
(bad)
xor
clc
mov
pop
adc
dec
ds
cmps
dec
cdq
jge
das
iret
shl
fst
mov
icebp
add
in
out
dec
mov
and
pusha
and
add
xchg
sub
cmp
ins
xchg
jp
pop
pop
and
xchg
mov
xchg
addr16
add
retf
push
imul
xchg
rcr
daa
cwde
(bad)
add
daa
cs
lds
lods
xchg
lahf
and
sub
cmps
or
mov
jge
and
into
out
aas
cmc
jne
cmp
cmp
dec
ficomp
xchg
rcl
xor
xor
xor
popf
movs
mov
shr
scas
lea
call
pop
pop
das
jb
dec
test
(bad)
and
adc
adc
hlt
sub
sahf
xor
clc
dec
ficomp
outs
xlat
or
fld
cmp
arpl
pop
xchg
call
clc
in
inc
pop
xchg
pop
aaa
jp
fwait
jb
push
xor
aam
mov
int3
adc
mov
dec
or
and
loop
imul
scas
mov
pushf
les
pop
stc
aam
push
xchg
xchg
push
adc
add
xor
jns
push
mov
mov
add
daa
and
ret
aam
aam
in
adc
fsubr
mov
xchg
sub
xor
cs
xor
or
push
push
cmp
add
pop
xor
jb
pop
mov
repnz
adc
sub
jp
jno
nop
test
xor
stc
cmp
dec
pop
xchg
pop
mov
es
jne
cmp
mov
xchg
push
in
mov
popa
pop
bound
fdivr
(bad)
sti
or
dec
sahf
sub
mov
jg
xor
repnz
jge
adc
sub
adc
pushf
pop
pop
lahf
gs
sub
loop
vpsrld
pop
jbe
push
and
es
imul
test
mov
nop
in
mov
pop
inc
add
jg
lea
aad
int
int3
pop
and
stos
int
cmp
jecxz
and
inc
push
sub
popf
cmc
jo
inc
xor
push
gs
mov
push
mov
nop
add
jge
and
xor
mul
mov
cmp
icebp
inc
push
inc
jns
pop
jmp
mov
adc
sti
movups
jmp
add
pop
mov
mov
mul
fidivr
enter
mov
xchg
nop
retf
(bad)
jl
in
outs
mov
cld
inc
jbe
xor
inc
cmp
es
push
outs
into
leave
aaa
pop
int
pop
sbb
or
push
pushf
movs
repz
das
daa
ds
xor
pop
push
cmp
inc
sub
lods
mov
mov
xor
jmp
mov
into
mov
lahf
loop
gs
jns
enter
movs
aam
dec
cmps
aas
popf
jo
cmps
inc
movs
add
sbb
jp
ds
mov
jp
ret
jmp
adc
outs
scas
test
pop
leave
bound
fstp
dec
out
sub
loop
cmp
push
and
mov
idiv
bound
jecxz
sbb
dec
xor
pop
cmps
mov
adc
cmp
mov
or
leave
sub
data16
fs
jae
add
pop
loopne
jp
aam
outs
inc
pop
stc
jg
cli
add
pusha
mov
pop
outs
xor
jg
bound
sub
sbb
call
inc
in
lea
ins
sub
xor
aad
adc
out
ror
imul
in
sbb
cmps
lock
add
xlat
call
add
sub
jnp
adc
iret
inc
and
mov
(bad)
jge
cmps
test
cmp
inc
jg
iret
int3
out
fld
fs
sub
mov
xchg
test
cmc
xchg
dec
jle
mov
sub
xor
mov
jae
in
cmps
stc
sub
loope
and
xor
add
xchg
mov
cmp
call
ins
repz
cmp
in
sub
test
or
bound
rcl
popf
jp
loope
cmp
(bad)
jg
out
aas
push
mov
or
fisttp
push
movs
(bad)
(bad)
jp
xor
inc
sbb
mov
mov
loopne
jmp
push
fcomp
loope
std
adc
out
addr16
xor
xor
mov
pop
mov
sub
stos
pop
sbb
mov
adc
test
sbb
fistp
(bad)
enter
sbb
nop
mov
jns
push
imul
push
cmp
inc
xor
(bad)
test
xor
ins
ja
gs
xor
lods
cmp
sbb
arpl
cmp
(bad)
mov
mov
out
add
mov
bound
dec
mov
loop
cld
inc
test
fmul
dec
adc
repz
cli
sahf
data16
addr16
mov
retf
jne
stos
inc
ins
mov
or
and
push
jg
push
das
xchg
retf
jp
cmp
ss
retf
popa
inc
xchg
popa
psubd
cld
dec
out
sbb
and
mov
pop
pop
push
arpl
imul
jmp
and
sti
cmp
dec
test
or
mov
adc
pop
pusha
inc
mov
sbb
jl
js
mov
cmps
pop
fsubr
cmp
xor
and
bound
jp
xor
mov
mov
sti
mov
loop
and
mov
sbb
mov
popa
or
pop
adc
mov
out
or
dec
out
sub
add
int
jl
dec
xor
add
adc
sub
mov
shl
cli
adc
push
and
outs
fwait
stos
xchg
cmp
adc
and
mov
push
fistp
pusha
and
cmp
push
mov
mov
retf
in
out
icebp
xor
ds
addr16
jl
arpl
out
ret
sbb
add
ror
push
fnsave
jp
mov
add
ficom
push
movs
xor
jg
push
push
cli
lock
lds
fist
or
push
or
loope
scas
sub
imul
test
push
adc
push
or
mov
mov
inc
(bad)
loope
push
and
in
iret
jmp
inc
int
mov
test
sbb
cmp
push
call
sbb
jns
mov
cmp
xchg
xchg
clc
pushf
out
lea
sub
sub
pusha
(bad)
pop
test
(bad)
jo
sub
pop
sbb
add
xchg
dec
cmp
fisub
xor
cmp
mov
cmp
enter
xchg
jmp
push
push
das
push
and
push
mov
lock
mov
mov
push
pop
push
mov
sub
repnz
out
dec
mov
jbe
cmp
sub
mov
jg
dec
mov
jo
icebp
and
push
pop
xor
add
aaa
pop
sub
ss
pop
out
lods
sub
sbb
outs
adc
bound
loope
imul
clc
das
daa
inc
lods
bound
aaa
dec
mov
les
adc
pop
sub
fwait
imul
idiv
jl
sub
(bad)
cmps
inc
jnp
xor
fmul
adc
rol
pop
ret
xchg
push
(bad)
jmp
xchg
inc
mov
lods
add
out
dec
pop
add
xchg
and
add
dec
push
hlt
loope
or
push
xor
mov
outs
push
bound
je
pop
pop
imul
loop
out
mov
inc
push
and
pop
js
inc
jae
mov
imul
je
sbb
push
cs
mov
sbb
out
pop
popf
lods
and
adc
dec
jl
ret
scas
sub
mov
jae
outs
test
ja
daa
xchg
or
int
jbe
je
sbb
je
dec
pop
mov
xor
leave
stc
and
movs
and
cmp
xor
fiadd
rcr
icebp
lods
dec
in
push
sbb
loope
push
mov
mov
out
xchg
xchg
(bad)
popa
mov
daa
pusha
gs
inc
aas
repz
out
out
pop
sti
loope
push
mov
int3
fcmovbe
or
fdivr
mov
inc
(bad)
push
shl
ror
xlat
sub
sar
das
repnz
and
sub
xor
es
inc
clc
rol
fist
xchg
icebp
jecxz
je
pusha
rcr
push
fst
jge
mov
rcr
outs
jbe
xchg
push
mov
in
cdq
aaa
jno
daa
push
imul
iret
pop
clc
jp
add
jmp
jecxz
dec
fmul
rol
mov
imul
or
dec
mov
push
aaa
loop
inc
xor
aam
nop
dec
xchg
cmp
daa
sbb
pop
iret
and
mov
inc
ins
clc
scas
scas
jne
and
mov
int3
retf
icebp
ja
aas
xchg
aas
adc
imul
pusha
mov
sbb
icebp
loopne
retf
sub
iret
cld
(bad)
stos
dec
xchg
jle
ret
add
movs
mov
mov
adc
inc
pop
jne
out
popf
ins
lods
iret
push
fld
enter
xor
mov
call
xor
enter
popf
pop
or
sti
inc
jnp
cmp
xor
jae
or
cmc
mov
push
daa
loop
jae
sub
jg
inc
int
loope
sbb
jne
int
vsubps
pop
mov
push
das
out
arpl
jns
xor
adc
xchg
loope
pushf
lods
loope
test
in
in
fnstenv
xor
inc
jno
pop
retf
adc
sbb
xchg
ja
mov
mov
aaa
add
sub
dec
sbb
std
jecxz
sti
movs
cmp
jge
or
mov
dec
stos
sub
mov
mov
aam
xlat
xchg
inc
stc
push
int
sar
xor
pop
iret
dec
sub
addr16
inc
jns
loope
mov
cmc
jno
sbb
fst
(bad)
in
adc
mov
retf
jnp
mov
int3
inc
arpl
lahf
scas
in
sbb
and
pop
es
push
and
adc
xor
dec
mov
and
es
cmp
mov
or
jnp
xchg
sub
jnp
add
add
adc
fwait
mov
push
mov
cld
in
sub
or
push
nop
mov
pop
mov
mov
mov
out
fcomp
jbe
ins
pop
cmp
fist
mov
imul
test
shl
ret
shl
(bad)
xchg
sar
in
cld
cld
add
inc
packsswb
gs
pushf
xor
jnp
mov
pop
arpl
repz
mov
lea
mov
jp
ror
jne
leave
push
cmp
pusha
ss
stos
sbb
push
or
fadd
fdivrp
jge
fild
inc
mov
cs
xchg
push
fdivr
mov
pop
lds
or
hlt
mov
add
cli
outs
call
and
imul
mov
cdq
sbb
std
fs
mov
mov
lahf
ss
jbe
nop
push
mov
jl
and
ss
pop
jb
adc
jb
call
lahf
ror
clc
dec
mov
sub
mov
in
hlt
mov
scas
inc
dec
jae
inc
inc
dec
sbb
adc
jmp
xchg
inc
das
pusha
je
ins
pop
jne
mov
pop
das
mov
pop
stos
pop
push
inc
pop
(bad)
retf
pop
mov
push
xor
jbe
pop
or
mov
mov
aas
jno
(bad)
jns
adc
xor
pop
mov
inc
sahf
mov
pop
ins
dec
add
(bad)
psrld
icebp
pop
jmp
sbb
(bad)
xchg
mov
fild
pushf
jno
push
cwde
xchg
in
movs
pop
add
inc
shl
sti
gs
cs
or
lods
sub
xchg
mov
mov
das
jmp
dec
retf
push
loop
mov
aad
xor
nop
inc
mov
fcomp
or
mov
shl
ret
loop
rcl
(bad)
mov
dec
push
mov
push
sub
popf
and
adc
sbb
in
pop
mov
cli
mov
cmp
and
or
popf
or
iret
pop
or
int
test
retf
data16
and
push
stos
imul
add
pop
nop
das
nop
push
jmp
loope
jmp
xchg
cmp
dec
pusha
pavgb
out
jnp
or
mov
hlt
xchg
and
in
or
push
and
arpl
xchg
test
push
cmp
test
and
ds
shl
psrld
scas
ror
out
call
enter
fisttp
in
(bad)
aad
jns
adc
mov
adc
clc
jns
std
(bad)
fimul
das
push
cmp
jl
out
sahf
out
mov
xchg
dec
loopne
xor
loop
mov
add
add
jg
and
cdq
cmc
xchg
(bad)
jno
push
lds
push
pop
adc
pop
retf
bound
push
popa
pusha
dec
(bad)
repz
jae
daa
push
mov
jne
int3
inc
scas
cmp
stos
sbb
stos
mov
push
call
inc
xchg
xor
iret
les
xor
jbe
pop
fld
sbb
xor
call
jmp
lea
sbb
xor
test
imul
arpl
js
clc
push
and
popa
ffree
and
dec
sub
mov
retf
add
and
jmp
ss
jge
ret
xor
fisttp
adc
sbb
rol
or
lods
or
test
jb
mov
sysret
push
mov
sar
inc
lods
aad
aaa
sti
or
jae
cdq
push
jbe
mov
xor
push
clc
jmp
jmp
inc
xchg
ret
xchg
movs
pop
xor
mov
cmps
or
repz
lock
push
rol
out
or
in
xchg
fstp
xor
jmp
adc
xor
sbb
xor
(bad)
ss
inc
xchg
(bad)
in
push
call
sub
jno
push
jmp
call
nop
jno
out
iret
push
movs
cs
dec
push
mov
scas
jp
lock
(bad)
ins
jo
idiv
cmp
add
jo
out
xchg
and
cmps
sbb
addr16
jo
fs
gs
mov
or
lock
es
adc
jnp
sbb
fsub
push
xchg
and
sub
mov
sub
and
(bad)
fdiv
and
adc
std
icebp
cmp
iret
or
div
(bad)
adc
lds
jne
icebp
mov
adc
es
shl
pop
pop
bound
push
jnp
mov
add
stos
es
das
call
xchg
add
mov
ret
pop
jmp
inc
xchg
cmps
sbb
jo
jle
push
pop
xor
jg
mov
sbb
jge
(bad)
and
sub
(bad)
push
mov
push
lar
gs
outs
jns
test
out
xor
xchg
jns
ds
xor
push
add
push
fstp
adc
or
test
movs
push
and
push
enter
int3
lahf
push
jmp
mov
add
jecxz
fstp
jp
xor
push
outs
and
jne
loope
icebp
push
pop
mov
imul
pop
ins
(bad)
dec
and
cmp
jmp
jge
inc
pop
push
xchg
punpcklwd
leave
div
xlat
sahf
ss
lods
lods
and
pop
add
pop
ins
je
dec
mov
ins
ret
scas
outs
mov
pop
push
cmp
add
stos
arpl
dec
fisub
jbe
mov
(bad)
mov
(bad)
sub
ins
xor
call
repnz
fimul
mov
mov
jmp
ins
(bad)
shr
test
(bad)
nop
inc
dec
xor
cmc
aam
fild
scas
and
dec
pop
pavgb
std
out
test
pop
mov
inc
mov
outs
cmp
imul
outs
cld
movs
popf
gs
fisttp
cmp
pop
stos
push
push
sub
sub
call
push
rcr
cmc
test
inc
sbb
mov
push
sbb
mov
jge
mov
pop
sbb
pop
pop
lods
inc
test
sbb
pop
add
cmp
adc
or
movs
jecxz
add
and
jb
push
cmp
clc
imul
and
xlat
lahf
ja
xchg
ins
es
mov
mov
xchg
in
adc
sub
pop
mov
fwait
xchg
adc
movs
pusha
inc
cmc
xor
popf
dec
int3
popf
imul
call
or
das
add
and
in
sahf
movs
or
fstp
adc
mov
scas
or
sbb
jns
aaa
les
adc
not
ficomp
data16
pushf
enter
fsub
cmp
call
add
fwait
or
cld
pop
xor
nop
xor
shl
sbb
inc
inc
mov
out
pop
mov
pop
mov
cld
xchg
in
adc
aad
adc
push
xchg
fwait
sub
mov
stos
pop
xor
(bad)
mov
mov
xchg
aas
xor
sar
mov
sbb
or
shl
das
call
imul
jmp
mov
(bad)
xchg
aad
enter
pop
aaa
inc
xor
mov
bound
jno
icebp
out
cli
movs
jg
dec
scas
nop
pop
add
stos
xor
test
fistp
jns
adc
gs
sbb
pop
fwait
sbb
fsubr
in
(bad)
hlt
clc
enter
ins
sbb
sub
aaa
mov
push
jp
jnp
and
leave
sbb
mov
bound
(bad)
in
loope
and
cmp
sbb
sbb
test
dec
sub
mov
mov
xchg
push
(bad)
daa
sub
xor
loopne
add
ret
inc
inc
fwait
shl
adc
fstp
xor
(bad)
leave
sub
dec
lahf
(bad)
adc
and
cmp
xor
xchg
inc
jb
mov
test
push
inc
loopne
or
je
mov
nop
cmps
xchg
adc
adc
enter
or
inc
inc
out
xchg
mov
xchg
loop
pop
outs
dec
(bad)
jl
mov
inc
inc
add
mov
loopne
dec
aam
jp
or
dec
fisttp
out
call
in
movs
push
sub
adc
shl
jp
fiadd
dec
sub
pop
sbb
and
test
or
aam
jl
popf
ja
fld
push
or
clc
enter
dec
or
in
dec
cmc
iret
mov
xor
sbb
aaa
or
mov
lds
retf
xchg
sub
das
mov
jnp
sub
pextrw
call
or
rcl
add
les
jle
out
mov
leave
loope
xor
mov
xor
mov
int3
sub
xchg
xor
dec
pop
aas
rcr
aaa
loopne
out
idiv
pusha
dec
mov
cli
ret
js
fstp
xchg
sbb
or
cli
cs
cmp
jle
test
xchg
or
and
arpl
and
les
mov
mov
or
add
fcmovnb
push
fucomip
push
ja
imul
fidiv
in
ret
jne
scas
inc
ror
sub
sub
getsec
(bad)
xor
mov
fwait
xor
jl
std
fld
fnstcw
out
pop
sub
pop
push
sub
jo
or
xchg
loope
test
xor
scas
jg
jo
inc
add
adc
fisubr
in
in
call
mov
out
mov
add
test
dec
loopne
sbb
gs
jg
push
sbb
push
jg
stos
dec
jo
jg
mov
adc
fdivr
push
fdiv
jnp
in
sbb
adc
and
(bad)
pop
jnp
fisttp
sti
cmp
test
or
movs
shl
and
int3
pop
jbe
mov
ret
scas
push
push
push
and
ficomp
in
mov
push
std
xchg
pop
(bad)
mov
jle
or
imul
jns
jmp
sub
add
mov
inc
push
cld
dec
fsub
inc
and
retf
and
icebp
shr
sbb
dec
test
bt
cld
xchg
rcl
dec
sahf
std
xchg
call
not
inc
out
lahf
test
dec
movs
inc
adc
(bad)
and
fmul
fdivr
mov
test
test
lods
(bad)
fdivr
xchg
rcr
mov
shl
mov
bound
es
test
xor
xchg
call
dec
add
pop
es
inc
add
lock
sbb
repnz
ins
retf
mov
xchg
xor
push
lds
je
jl
or
div
pop
dec
mov
xchg
aad
dec
sub
mov
neg
sub
add
adc
and
pop
int3
cmp
(bad)
stos
mov
pop
add
(bad)
sub
sub
out
sbb
mov
mov
movs
dec
sbb
push
push
pop
xchg
mov
mov
retf
clc
cs
inc
sbb
mov
jg
sbb
jb
test
push
push
fcom
push
loope
cmps
test
or
or
mov
sub
dec
push
or
adc
mov
(bad)
pop
test
(bad)
push
inc
sbb
mov
push
jl
and
inc
lds
sbb
xchg
inc
fimul
in
test
mov
retf
cli
icebp
sbb
(bad)
jmp
rcl
xchg
push
shl
lahf
out
mov
xchg
mov
(bad)
in
nop
dec
aam
inc
ss
sbb
repnz
add
dec
sbb
fdivr
fmul
movs
inc
cmp
jg
fwait
push
xchg
or
xchg
pushf
jle
xor
xlat
dec
bound
je
leave
adc
push
mov
scas
nop
push
fwait
sbb
cdq
imul
stos
test
jl
mov
sbb
adc
je
pop
jl
lock
dec
xor
daa
ja
pop
inc
cs
push
jp
add
and
stos
retf
enter
mov
and
jbe
mov
idiv
xlat
xor
nop
jge
add
add
loop
ds
repz
lahf
(bad)
das
in
mov
xor
add
and
outs
std
pop
(bad)
fisttp
mov
cdq
test
shl
aad
mov
sub
stos
mov
test
lahf
pop
and
(bad)
dec
add
xchg
out
dec
movs
adc
aam
xor
cmps
push
mov
pop
cmp
pop
test
cmp
sbb
shl
sti
std
mov
ror
leave
jmp
fisub
in
movs
shr
xchg
shl
pop
nop
lahf
(bad)
int
and
and
shl
(bad)
jecxz
xchg
mov
ret
push
outs
and
push
fld
jne
out
push
jb
and
push
in
frstor
and
push
push
fnstcw
or
sub
push
(bad)
mov
or
aad
rcl
mov
dec
xchg
popa
mov
push
jae
xor
dec
dec
mov
cli
push
pop
fist
xchg
sub
inc
cld
movs
stos
or
cmc
mov
xchg
iret
dec
stos
jno
and
xor
jne
mov
pop
xchg
cmp
stos
jae
and
outs
sbb
test
adc
int3
pop
mov
adc
add
and
cdq
stos
inc
fcomp
adc
xor
idiv
push
mov
ror
data16
sub
add
outs
(bad)
adc
loop
sub
inc
lods
inc
add
(bad)
and
and
movs
(bad)
sbb
jno
lea
push
cmp
push
xchg
push
pop
inc
in
sub
or
repz
in
mov
in
push
test
shl
xor
loopne
cmp
sar
cmc
mov
out
inc
mov
das
hlt
xlat
cmps
rol
out
sub
imul
pop
pop
shr
xlat
push
scas
sub
arpl
adc
ror
cmp
cmp
ds
(bad)
push
pop
pop
retf
ins
adc
mov
outs
jmp
jmp
adc
add
push
mov
std
loop
mov
mov
jmp
call
cmc
mov
gs
and
lahf
pop
adc
pushf
movs
push
shl
xchg
aam
push
sbb
push
pop
pop
sbb
and
inc
repz
cwde
aaa
dec
jnp
lahf
and
inc
mov
sbb
mov
cmp
add
(bad)
cmps
jne
fwait
mov
pop
or
not
and
(bad)
daa
stc
jbe
stc
mov
fsub
imul
jns
dec
and
div
add
lahf
pushf
(bad)
xchg
add
sbb
sub
mov
out
push
pop
sbb
xchg
mov
(bad)
inc
cmovno
ret
xor
cmp
test
push
imul
nop
ret
xchg
jmp
imul
inc
pop
pop
xor
test
push
mov
(bad)
movs
push
mov
ror
fdivr
enter
cmps
mov
cmp
sub
xor
stos
(bad)
jo
pop
and
int3
mov
in
jo
imul
jge
cwde
es
mov
mov
dec
and
jmp
pop
cs
and
sub
jb
addr16
xor
iret
imul
ins
mov
xchg
bnd
or
test
and
and
popa
loopne
clc
xchg
fs
mov
lods
icebp
lods
ss
aam
mov
mov
popw
pop
sysexit
or
dec
ja
jle
outs
mov
mov
mov
popf
mov
enter
mov
retf
(bad)
mov
lods
popf
or
jne
ja
lods
shl
sbb
pop
not
ins
or
sbb
lahf
and
lock
xor
sub
sbb
jg
and
dec
sbb
test
mov
sub
jg
mov
sub
out
out
ret
mov
in
sbb
aas
inc
lods
call
sub
xchg
mov
sbb
fsub
pop
test
pop
fmul
sbb
xchg
add
je
sbb
arpl
xor
mov
dec
in
test
cmp
aaa
push
pop
cmps
jl
retf
test
push
stos
loop
mov
add
ret
mov
leave
mov
push
data16
cmp
in
xchg
aad
aad
lea
rcr
fcmove
dec
loopne
mov
shr
test
js
faddp
sbb
repz
cmc
inc
inc
mov
in
pushf
mov
arpl
or
imul
xchg
pop
pop
cmp
sbb
and
mov
lock
adc
scas
dec
push
inc
movs
sbb
loopne
push
push
dec
in
push
push
dec
aad
jg
jbe
cmp
or
add
pop
dec
mov
mov
mov
test
xchg
fadd
fldenv
rcl
call
mov
mov
jns
rcr
outs
xchg
outs
xor
pop
test
add
ds
xchg
fist
lock
cwde
pop
pop
or
cwde
sar
and
retf
add
mov
xor
sub
inc
mov
push
lds
(bad)
loop
mov
cmps
movs
pop
in
lea
and
xchg
xchg
(bad)
sub
mov
test
sbb
inc
xchg
in
int
ret
or
and
mov
out
pop
das
loope
or
test
sbb
xchg
add
mov
imul
shl
push
ret
gs
sbb
lock
mov
leave
xor
out
or
cdq
retf
out
xor
in
dec
jb
es
lods
dec
ficomp
(bad)
arpl
dec
iret
je
stc
aam
mov
and
in
pop
mov
daa
hlt
mov
dec
enter
mov
(bad)
iret
cmp
outs
fisub
inc
pushf
mov
dec
mov
sti
fldl2e
xor
sti
pop
sbb
cmp
push
test
fisttp
and
cld
into
xchg
test
mov
jns
mov
idiv
jmp
inc
rcl
mov
(bad)
cmp
or
and
sahf
and
adc
cwde
pop
stos
cmp
xor
jg
cmps
imul
xchg
and
mov
fisttp
(bad)
jl
pop
xor
dec
mov
pop
xchg
pop
jno
movs
sbb
push
mov
sti
mov
(bad)
mov
adc
sub
icebp
sbb
sub
mov
dec
dec
repz
push
cmps
ret
ja
xlat
(bad)
adc
movs
xor
add
les
(bad)
adc
inc
mov
inc
and
and
(bad)
or
mov
cld
fdiv
jno
adc
dec
mov
lea
(bad)
loope
inc
dec
adc
(bad)
lahf
(bad)
loop
add
fs
cwde
add
jno
mov
inc
stos
sbb
mov
icebp
rcr
jge
mov
xchg
loopne
fdiv
pop
int
sub
sbb
sbb
imul
cmp
outs
adc
sahf
es
enter
movaps
ret
ds
and
aas
cmc
retf
loop
fstp
xchg
add
or
call
lea
mov
imul
mov
jo
(bad)
lock
fmul
aad
and
retf
adc
adc
daa
(bad)
call
retf
pop
mov
fldenv
sahf
sbb
popf
pop
iret
dec
fdivrp
stc
cld
outs
push
and
mov
cmp
out
adc
imul
jle
pushf
cwde
xchg
push
lock
jbe
stos
call
jnp
lahf
or
push
(bad)
test
inc
outs
mov
sar
in
jmp
fstp
xchg
lods
in
movs
push
loopne
and
and
inc
inc
fcomp
cmp
std
rol
pop
sub
ins
dec
sub
sbb
jmp
adc
push
jl
mov
fisttp
cwde
sti
pop
mov
pusha
daa
pop
lods
fimul
in
fisubr
fadd
adc
std
cs
push
cs
imul
or
(bad)
stos
arpl
lock
lods
cmp
into
movs
dec
stos
aad
add
xchg
stos
les
in
mov
push
out
sbb
or
mov
jge
lock
xor
add
mov
pop
jnp
cmp
sub
mov
xlat
add
jecxz
pop
pop
sub
imul
xor
call
jns
mov
in
stos
rol
pop
sub
fcmovne
inc
push
cwde
add
ret
cmp
mov
in
mov
mov
mov
fsubr
stos
sbb
out
aas
xchg
mov
call
(bad)
sub
pushf
call
push
jecxz
and
xor
loop
pop
jne
loop
retf
inc
mov
repnz
jnp
(bad)
jmp
jle
in
loope
push
jnp
dec
dec
jo
ret
push
aam
jl
in
lds
mov
popf
call
daa
dec
shl
retf
dec
js
sub
fwait
jmp
sub
data16
sub
stos
call
repz
gs
mov
xor
xor
sbb
fidiv
jmp
adc
inc
pop
xchg
mov
xor
in
mov
jl
(bad)
pushf
sahf
mov
mov
xor
xlat
pop
jl
movs
dec
test
adc
test
push
movs
adc
mov
or
arpl
pop
push
stos
repz
ror
add
dec
loopne
(bad)
fild
lods
retf
mov
pop
bound
lods
aad
ss
cwde
cmp
xchg
inc
enter
or
cmp
das
std
lahf
sbb
mov
xchg
mov
push
out
fadd
mov
or
(bad)
jp
mov
add
add
dec
dec
rep
rcl
sub
xchg
dec
stc
sub
mov
data16
mov
mov
push
das
xor
shr
jne
jecxz
mov
into
mov
dec
jno
jmp
aas
(bad)
cmp
sahf
add
xor
pop
cmp
(bad)
int
ja
and
popa
mov
push
in
jbe
or
nop
xor
js
xor
mov
std
sahf
movs
outs
bound
pop
sub
jns
sbb
sbb
int
leave
and
adc
inc
jl
mov
jge
in
pop
xchg
and
mov
or
jne
pusha
mov
in
pop
xchg
jle
cmp
clc
hlt
mov
cmps
jg
sbb
cmp
loop
mov
xlat
jge
inc
or
xlat
pop
jecxz
repz
mov
(bad)
sbb
push
jg
mov
jmp
pop
dec
outs
je
imul
loopne
dec
push
lahf
push
(bad)
and
ret
inc
inc
add
stos
rcl
dec
das
sahf
lods
fdiv
adc
test
adc
inc
mov
enter
xor
inc
cmps
pop
xor
les
leave
sub
imul
xor
inc
movs
cmp
push
fisubr
fist
in
xor
cmp
adc
cmps
fdivr
pop
addr16
cs
dec
xor
xchg
sub
adc
push
dec
adc
dec
in
inc
into
lods
jge
mov
lds
add
pop
or
cs
push
outs
or
add
inc
repz
jo
(bad)
(bad)
cmp
cmp
xor
movs
lods
stos
fistp
lock
fwait
push
aaa
mov
sbb
inc
mov
div
jnp
fdivr
xchg
outs
or
imul
(bad)
outs
xchg
mov
inc
mov
sbb
or
jbe
and
or
pop
pop
cs
mov
dec
push
aam
cmp
ja
pop
xchg
addr16
push
stos
mov
call
cld
push
mov
in
add
dec
mov
dec
cmps
jb
daa
adc
inc
fwait
or
inc
jmp
cmp
pop
pop
in
mov
xchg
mov
shl
je
cwde
or
sti
lods
and
and
xor
jge
dec
aam
jae
pop
or
sub
fabs
ret
lods
xor
(bad)
cli
add
inc
test
ret
cmc
push
cmps
jae
pop
push
mov
xchg
cdq
push
daa
das
inc
xor
arpl
mov
cmps
gs
ja
rcl
ret
adc
je
cmp
int
mov
adc
outs
add
xchg
lahf
jmp
cwde
mov
dec
xor
mov
xor
inc
xchg
sahf
imul
jecxz
push
outs
mov
pop
mov
aas
popa
jo
adc
inc
or
mov
stos
fnstenv
xchg
sahf
mov
inc
dec
mov
mov
fdiv
push
out
mov
add
xchg
popf
ficomp
cmp
test
ss
cmp
jl
outs
inc
xor
mov
jmp
int3
pop
jmp
cmp
xor
mov
jns
mov
push
cmp
std
pop
icebp
or
ret
fmul
and
pop
xor
xchg
inc
outs
int
dec
pop
and
inc
aas
aam
hlt
test
mov
(bad)
dec
ins
retf
loop
sbb
(bad)
mov
sbb
push
ror
adc
dec
xlat
scas
jge
jmp
or
sub
push
imul
scas
or
std
call
jae
inc
mov
rcr
cmc
xchg
aam
ror
push
in
shl
dec
dec
pop
xchg
out
mul
push
in
sbb
mov
into
inc
add
mov
hlt
add
mov
mov
call
inc
pusha
cli
pop
loopne
xor
jns
jecxz
sbb
pop
outs
dec
je
pop
sbb
popf
ror
fs
(bad)
div
cmc
stc
inc
(bad)
repz
sub
pop
push
xchg
ret
stc
xor
add
adc
mov
mov
pop
dec
enter
push
cmp
mov
dec
ret
xchg
mov
fisttp
aas
test
imul
(bad)
jae
xor
pop
cmp
mov
mov
movs
sbb
(bad)
pop
sub
sti
adc
xchg
popf
rol
aam
(bad)
lods
jmp
enter
mov
sbb
aas
xchg
std
pop
mov
sub
xchg
out
(bad)
cmp
inc
lods
jo
loopne
jnp
cmp
add
es
pop
pop
adc
pushf
ins
adc
in
mov
int3
xchg
loopne
sub
xor
ins
out
std
pop
mov
and
jae
inc
dec
ja
cld
inc
xor
dec
jns
cmp
movs
pusha
jnp
ins
out
(bad)
jg
pop
popf
imul
nop
fs
(bad)
fisubr
popf
test
inc
mov
cmp
or
add
jb
push
rcr
and
test
sub
leave
mov
mov
jle
ret
or
adc
mov
test
inc
cmps
push
stos
adc
lahf
jg
push
xchg
sub
jnp
and
push
and
mov
jmp
jno
out
inc
or
lods
fcmovbe
in
nop
mov
in
mov
ror
test
out
cli
out
movs
adc
rcr
xchg
add
push
xchg
push
cmp
add
push
jne
icebp
ins
dec
push
mov
push
inc
dec
aaa
sti
(bad)
fldenv
mov
cli
aas
cmps
mov
int3
mov
inc
add
xchg
test
and
jmp
pop
arpl
xor
(bad)
ss
and
fist
sbb
addr16
test
dec
imul
aaa
mov
icebp
test
sahf
add
jb
sbb
sbb
jmp
ds
xchg
xchg
pop
sub
mov
mov
ins
lds
jecxz
push
jp
fadd
pop
test
add
and
inc
xchg
cli
inc
jecxz
jne
test
cmp
push
cmps
idiv
sbb
jecxz
call
out
add
les
int
fbld
popa
pop
mul
xor
pop
dec
cmps
xor
fiadd
div
inc
pop
cmp
out
mov
movs
stc
test
popf
stos
hlt
and
push
or
push
movs
mov
adc
int
outs
and
call
fs
push
push
push
retf
into
pop
pop
mov
xchg
and
jg
add
imul
xchg
int3
inc
mov
in
cmc
jo
inc
test
addr16
sub
loopne
pop
(bad)
fidiv
sub
jmp
cmps
aas
and
lahf
cdq
fdiv
dec
sub
fdivrp
mov
iret
test
aam
into
adc
(bad)
outs
movs
xor
test
popa
push
shl
and
mov
push
adc
fimul
add
in
int
ins
fst
push
pop
mov
shr
dec
xor
mov
inc
mov
sti
xor
std
pop
mov
xchg
dec
mov
mov
xchg
cs
stos
pop
mov
push
outs
mov
popa
scas
mov
inc
mov
push
ret
mov
enter
stos
icebp
jnp
add
and
sub
(bad)
(bad)
and
icebp
pop
fsubr
jmp
cmp
push
mov
pop
jle
pop
loopne
pushf
out
xchg
jecxz
in
jl
shl
mov
aas
enter
sbb
aam
add
fmulp
cmc
nop
xchg
mov
les
in
stos
push
cmp
fwait
hlt
jns
in
sub
rol
xor
jns
js
or
push
loop
out
sub
(bad)
adc
setg
sbb
ret
mov
jecxz
adc
out
popa
scas
inc
jne
int3
pop
jl
xor
(bad)
shr
jns
cs
sbb
xchg
mov
cmp
jne
mov
cmp
mov
loopne
ins
jno
ins
test
cmp
bound
movq
cmp
add
sbb
dec
ds
push
std
icebp
pop
cmps
dec
cmps
scas
and
or
sub
test
fcmovnb
xchg
pop
sbb
mov
and
sub
test
mov
mov
(bad)
fsub
add
sub
adc
dec
call
cmps
mov
jo
jnp
dec
ja
push
in
dec
jmp
inc
dec
shl
jg
ins
xchg
jecxz
dec
ret
mov
jg
jns
sbb
jle
push
add
dec
jl
(bad)
test
fs
cmps
push
movs
popf
out
pop
push
sbb
dec
icebp
test
adc
repnz
popa
pop
ret
xlat
in
das
pop
dec
inc
mov
jmp
ds
or
popf
dec
jge
sub
push
les
test
movs
pusha
fmul
pop
inc
inc
in
in
das
jnp
add
inc
sbb
mov
sub
mov
cmps
cmp
jecxz
aam
add
cmp
push
movs
stc
sbb
mov
enter
push
and
jg
or
(bad)
adc
test
aas
sub
fistp
jne
sbb
dec
out
mov
sub
add
pop
push
push
call
pop
rcr
inc
call
out
sub
retf
mov
sbb
int3
sub
jmp
shl
pop
jne
inc
data16
jae
mov
sbb
jmp
mov
stos
lock
push
inc
arpl
push
sbb
mov
std
cli
cmp
xor
(bad)
mov
imul
mov
mov
sbb
lea
inc
dec
das
test
repz
cmps
fidiv
enter
int3
mov
inc
jne
mov
ins
and
pop
mov
mov
icebp
test
ret
push
xor
pop
push
xor
jg
mov
jle
pop
adc
dec
or
ins
pushf
fdiv
ss
or
pop
pop
xchg
ja
xchg
inc
sbb
or
jge
sub
data16
mov
xor
fwait
dec
scas
mov
cmc
lahf
shl
ret
sub
mov
ror
fld
out
les
inc
mov
push
xchg
jecxz
inc
jp
add
je
jne
retf
repnz
mov
xlat
call
icebp
xchg
test
jo
push
inc
jo
(bad)
fcom
push
outs
sub
jne
je
stos
sbb
(bad)
sub
ja
xchg
lea
and
ds
pushw
loope
push
cmps
(bad)
shl
jge
cmps
in
mov
lds
(bad)
pop
inc
push
or
and
icebp
jne
lahf
mov
pop
fnsave
xor
sub
loop
iret
popa
push
clc
jb
fcmovu
rcl
sbb
xchg
cli
and
cwde
pop
xchg
cmps
cs
pusha
pop
scas
in
fs
dec
jae
mov
mov
mov
fild
pop
call
test
ins
jp
adc
pop
inc
das
jmp
and
cmp
mov
adc
movs
push
rcl
out
push
pop
xchg
jno
xor
cld
xchg
xchg
lds
imul
in
push
ficomp
mov
xchg
mov
inc
adc
cdq
sti
dec
daa
daa
sar
(bad)
and
ja
mov
mov
fist
int
out
mov
stos
mov
push
and
ret
cmp
xchg
pop
xor
int3
out
lock
pop
mov
mov
ss
cwde
push
pop
test
lahf
jbe
jne
mov
idiv
jb
shl
pop
dec
gs
cmc
push
or
pop
jmp
stc
push
movs
or
sbb
in
sub
arpl
sbb
mov
pusha
shl
xchg
daa
in
fimul
jbe
fisttp
pop
dec
dec
imul
push
cmp
and
mov
push
pop
jecxz
and
mov
adc
or
retf
inc
inc
jns
xchg
fs
aad
dec
cld
hlt
sbb
add
sub
push
push
or
cdq
mov
pop
mov
(bad)
mov
test
mov
data16
shr
cmp
and
outs
jl
sbb
dec
dec
jmp
scas
or
call
or
stos
stos
mov
retf
cmps
imul
cmp
imul
mov
jo
add
cmp
xchg
cmp
inc
or
jg
mov
jnp
dec
or
dec
test
pop
sbb
xchg
sub
mov
icebp
daa
dec
adc
xchg
sub
and
mov
jle
xchg
or
call
mov
and
ds
std
dec
xor
pop
jmp
and
jp
push
arpl
test
loope
inc
(bad)
loopne
sub
inc
popa
in
(bad)
push
push
sahf
mov
and
inc
outs
bound
(bad)
loop
jge
jle
out
ins
int3
adc
imul
fdivrp
mov
sbb
inc
xlat
push
pushf
push
pusha
(bad)
fstp
jecxz
das
cmp
jo
rcr
shl
shl
jb
mov
std
inc
pop
cmp
dec
cdq
xor
xchg
test
jmp
pop
shr
in
xchg
mov
sbb
outs
stc
or
xor
ss
lea
jnp
int3
inc
cmp
sbb
out
lahf
es
fcomp
ret
test
in
push
inc
std
call
fwait
or
inc
and
mov
mov
in
mov
das
add
outs
mov
es
add
fiadd
push
mov
scas
pusha
xchg
add
cmp
aas
test
das
mov
push
test
ins
mov
dec
hlt
mov
gs
test
std
adc
jge
test
jno
dec
cs
cmp
nop
enter
add
push
into
scas
aam
sbb
psubd
test
push
dec
jb
mov
mov
nop
in
imul
add
out
and
push
ror
mov
ins
inc
jmp
cwde
pusha
inc
pop
iret
adc
fs
out
in
lds
aad
popa
push
les
push
int3
cli
hlt
outs
dec
inc
test
sar
ins
(bad)
mov
sbb
pop
cld
hlt
mov
test
push
pop
fild
and
mov
add
cs
outs
sbb
adc
add
lock
pop
aaa
das
sbb
ret
aad
retf
xchg
and
sub
push
pop
mov
sti
das
inc
idiv
jl
inc
stos
pop
mov
jecxz
or
xchg
xchg
ins
movs
test
xchg
lods
sbb
pop
pop
mov
je
or
inc
cmps
in
jns
lock
xchg
lahf
push
test
sahf
fsubr
xchg
adc
bound
mov
xor
xor
adc
fdivr
retf
icebp
and
sub
addr16
ret
xor
rcl
cdq
adc
jmp
pop
xchg
arpl
and
in
neg
sub
stos
int
cmp
(bad)
pop
inc
sbb
inc
shl
ret
dec
out
in
ret
jp
(bad)
mov
shr
cmps
jle
rcr
push
xchg
stc
shr
test
enter
cli
dec
fabs
sub
push
and
or
imul
jl
(bad)
leave
ja
jle
cmps
pop
dec
push
ja
jb
into
scas
cld
adc
add
push
cmp
inc
jecxz
out
dec
iret
sbb
pop
jmp
fucomi
add
pop
jae
mov
xor
adc
mov
out
mov
dec
xchg
push
xchg
ret
push
rcr
retf
scas
cmp
call
cmp
sub
and
mov
mov
inc
imul
push
rcl
inc
jno
xchg
push
xchg
mov
mov
xor
mov
mov
fild
jo
and
mov
xor
mov
mov
cmc
std
cmps
fcomp
cmps
shl
mov
push
push
out
iret
loope
mov
fist
jbe
mov
push
daa
push
je
push
xchg
pop
push
sbb
lock
dec
jg
mov
test
arpl
clc
jns
lods
push
out
cmp
or
jnp
inc
pop
leave
push
leave
ficomp
shl
test
xor
test
mov
test
sar
xor
sub
sub
cmp
movs
sub
cmc
inc
xchg
jbe
adc
xchg
lock
add
ins
jmp
dec
xor
jmp
imul
mov
(bad)
or
jns
cmps
mov
cmps
mov
mov
int
jbe
push
jl
inc
shl
push
test
frstor
cmc
(bad)
enter
ja
popf
jnp
push
inc
pop
aad
popa
cmp
loop
popa
cmp
mov
inc
jge
cmc
stos
sbb
rol
les
pop
xor
adc
cmp
inc
int3
jne
mov
inc
ret
jae
ficomp
sar
out
adc
out
test
cmp
jmp
repnz
mov
outs
sbb
jmp
(bad)
arpl
fdivr
(bad)
pop
dec
retf
(bad)
sbb
enter
mov
test
mov
(bad)
fistp
fcom
cli
xchg
addr16
cmp
pushf
fisttp
cmp
movs
addr16
repnz
rcl
call
xchg
dec
fwait
mov
or
popf
mov
hlt
ja
xchg
mov
xor
push
js
jo
out
push
sbb
out
xchg
mov
mov
xor
xor
leave
or
fs
jmp
xchg
sub
mov
mov
inc
xchg
jp
lahf
inc
(bad)
add
addps
adc
pop
repz
js
scas
sbb
rcl
inc
and
xor
mov
popf
in
aad
shr
push
pop
and
pop
mov
cmp
je
pop
outs
fpatan
imul
or
sbb
or
cmovg
inc
dec
stos
sbb
sbb
or
and
cs
cmp
ficom
push
xchg
test
mov
mov
xlat
xor
(bad)
jno
inc
pop
or
into
cdq
xchg
fadd
rol
(bad)
fs
add
iret
push
and
fstp
sti
mov
ret
(bad)
hlt
sbb
jecxz
add
pop
adc
xlat
int3
mov
adc
and
cmps
loop
xor
aas
int
shr
sub
xor
inc
outs
test
outs
push
je
jp
mov
jb
mov
movs
fs
pop
inc
es
pop
cld
into
out
jae
pop
hlt
xchg
and
lods
mov
mul
pop
repz
sbb
sbb
dec
sub
int3
mov
ds
adc
mov
cmc
push
pop
(bad)
lock
dec
shl
inc
adc
xchg
xor
jmp
xchg
fs
adc
dec
pop
push
mov
sub
pop
mov
and
cwde
cmp
pop
and
pushf
imul
jo
mov
inc
mov
sub
xor
clc
pop
and
mov
sbb
lahf
xchg
not
sbb
mov
mov
popf
jns
mov
pop
ins
add
or
xchg
push
fistp
shl
rol
sub
je
ins
inc
jbe
lock
test
xor
and
cmp
fiadd
gs
mov
push
push
test
inc
xor
and
cmc
lds
xchg
(bad)
movs
js
movs
sbb
mov
mov
or
rcl
xor
xchg
retf
and
add
push
xlat
test
or
into
fs
add
cli
stos
mov
js
xor
ss
scas
push
ds
mov
outs
jns
test
mov
mov
inc
bound
sbb
push
push
in
adc
sbb
push
repz
cmps
shl
inc
cmp
jmp
xchg
aam
adc
stos
sti
add
or
cdq
stos
xchg
inc
inc
pop
mov
mov
inc
adc
add
dec
sbb
cld
sbb
inc
mov
rcl
xchg
mov
mov
arpl
mov
inc
sti
inc
add
das
enter
(bad)
inc
mov
push
call
sub
aaa
pop
or
xor
sub
inc
stos
test
inc
jge
(bad)
fmul
mov
(bad)
daa
xor
stos
aad
cs
push
dec
push
push
movs
and
dec
std
push
adc
mov
(bad)
sub
xor
and
xchg
(bad)
jae
cld
mov
popf
mov
mov
leave
adc
sub
mov
leave
rep
movs
pop
xor
jp
pop
ins
cdq
test
add
pop
shl
int
sahf
movs
adc
cmp
clc
add
add
int3
jp
fcom
push
arpl
mov
sar
pop
jmp
int3
lahf
dec
push
mov
cmp
call
push
cli
mov
(bad)
cwde
push
cli
int3
fdivrp
fcmovne
in
cmp
mov
mov
jmp
stos
pop
test
scas
jae
pop
push
shr
xor
mov
lea
cmp
leave
jnp
inc
xor
xor
icebp
jmp
or
xor
sub
das
inc
pop
push
stc
fsub
sub
sti
(bad)
jmp
fimul
xor
mov
mov
xchg
clc
or
ins
push
sbb
ss
rcl
hlt
retf
cld
sub
jno
push
xchg
push
mov
ins
rcr
xor
pusha
push
adc
mov
scas
out
leave
pop
xchg
pop
(bad)
daa
loop
sbb
cmp
stc
cmp
push
pop
imul
mov
push
into
(bad)
aam
mov
adc
das
add
aam
xor
sbb
sbb
xchg
add
movs
cdq
pop
push
ret
cs
adc
add
loop
(bad)
ror
test
cmp
inc
cmps
scas
out
clc
fwait
cmovp
cmps
sub
jl
cmp
imul
push
push
test
ins
mov
mov
in
and
ja
ins
call
add
iret
jmp
les
push
sahf
call
inc
dec
mov
mov
hlt
mov
jo
iret
mul
push
repnz
and
bound
jo
pop
popf
push
cmp
sub
mov
sub
push
je
ret
pop
adc
mov
fwait
or
jecxz
push
mov
dec
lahf
(bad)
addr16
xchg
sbb
sti
mov
fcmovne
sbb
das
cmc
push
pop
iret
pop
inc
data16
ficom
push
aam
scas
repnz
push
imul
hlt
dec
imul
scas
addr16
xchg
pushf
push
movs
pop
pop
retf
pushf
sbb
in
sbb
or
push
mov
mov
mov
push
mov
or
inc
push
mov
mov
retf
aaa
cwde
push
or
jle
enter
std
sbb
sbb
jne
in
mov
int
jmp
xchg
inc
push
test
pop
sbb
popf
pop
xor
sbb
fs
xchg
mov
(bad)
and
adc
jae
mov
jns
inc
test
ficom
mov
retf
xchg
addr16
out
stos
addr16
pop
inc
repnz
inc
out
pop
lods
arpl
or
push
push
xchg
or
push
mov
pop
push
movs
enter
sahf
daa
shr
hlt
push
xchg
cmp
shl
jmp
dec
mov
inc
sbb
xchg
ja
dec
hlt
ds
dec
mov
mov
inc
dec
mov
sub
cmp
or
xchg
and
sub
(bad)
dec
fimul
call
mov
lods
mov
fwait
inc
sub
gs
(bad)
pop
in
pop
aas
sbb
popa
lock
outs
add
imul
pop
jmp
loopne
jns
jae
pop
mov
into
and
mov
add
mov
mov
mov
gs
outs
add
xchg
hlt
and
dec
cwde
and
jmp
xchg
push
push
adc
stos
inc
repnz
cmp
hlt
in
xlat
retf
add
out
inc
inc
xor
sbb
cmp
and
xchg
pop
or
sti
pop
movs
repz
ret
add
aaa
scas
add
jg
cmc
fbstp
push
and
lods
movsx
es
add
and
mov
mov
pop
pop
(bad)
stos
cmp
jge
cwde
inc
loope
int3
xchg
aas
or
movs
cwde
in
push
push
push
push
gs
repz
data16
push
cli
adc
add
mov
jmp
mov
mov
enter
ss
pop
das
xchg
gs
cmp
mov
sbb
sbb
repnz
retf
loopne
inc
cli
sub
add
jns
aaa
mov
mov
inc
pusha
cwde
enter
std
fcomp
(bad)
cmp
lods
mov
adc
sbb
xchg
and
and
(bad)
pop
ss
nop
lahf
leave
pop
out
xchg
sahf
xlat
dec
adc
lahf
loopne
fld
cmp
ja
fstp
lock
pop
imul
jbe
frstor
inc
inc
shl
test
mov
mov
sub
pop
cmp
shl
sti
into
xor
adc
add
sub
pushf
std
test
je
inc
cmp
push
adc
mov
sbb
pop
mov
(bad)
rcr
and
push
and
scas
mov
xchg
add
add
je
and
push
mov
and
jl
aam
and
mov
xchg
add
xor
and
aad
(bad)
sub
mov
call
cmp
sub
sub
sub
in
outs
mov
jg
pop
and
adc
sbb
daa
ins
and
lods
mov
test
mov
cmp
cmp
ficom
stos
js
mov
fwait
(bad)
jl
inc
mov
pop
arpl
lock
mov
in
std
scas
mov
sbb
pop
repnz
das
js
cli
xor
cmp
jmp
dec
inc
out
fcmovne
lahf
dec
jmp
push
mov
out
and
dec
iret
scas
push
mov
pop
pusha
push
mov
stos
rcl
inc
lods
mov
xchg
push
es
js
lods
pop
mov
test
call
addr16
ror
ret
or
pop
xchg
dec
add
scas
inc
cmp
test
xlat
push
push
push
loope
(bad)
adc
push
movs
imul
mov
loopne
lock
hlt
push
ins
mov
clc
and
test
test
inc
fbstp
adc
dec
jne
retf
out
and
bnd
xchg
not
mov
jg
(bad)
test
xor
mov
cdq
dec
cld
dec
aad
cmps
iret
fisttp
sub
jmp
int
ins
mov
adc
jp
retf
or
or
inc
sti
(bad)
fwait
mov
push
(bad)
loopne
and
add
jge
ins
(bad)
push
inc
sahf
adc
sahf
in
(bad)
mov
test
mov
ret
retf
outs
and
adc
and
test
movs
lods
je
push
repnz
pop
cmp
pop
scas
jae
sbb
cs
rol
stos
mov
stc
or
xor
push
cmp
or
dec
and
sbb
xchg
aaa
iret
pop
mov
push
aad
inc
outs
inc
inc
mov
or
sbb
sbb
jp
jmp
iret
in
mov
mov
jnp
jbe
add
js
pop
jp
test
xor
or
and
xchg
mov
mov
or
jp
mov
jno
lahf
sbb
bound
fld
rcr
and
jbe
or
xchg
cmp
test
(bad)
dec
xchg
cmp
xlat
fcmovb
xchg
add
inc
ficom
dec
mov
sbb
int
fmul
sub
add
leave
les
fsub
push
sahf
cmp
mov
cwde
jnp
lds
inc
or
push
mov
xor
pop
mov
cmp
cmps
imul
push
leave
mov
test
scas
sub
jb
shr
loope
push
jmp
mov
pop
add
and
out
loopne
out
pop
cmp
dec
jns
jl
adc
mov
sbb
pop
cdq
xor
(bad)
xlat
mov
popa
cwde
xchg
addr16
mov
and
sub
xor
out
add
add
and
gs
stos
xor
shr
jp
push
inc
add
xchg
leave
mov
pop
clc
add
mov
enter
cwde
fild
push
adc
mov
(bad)
mov
sub
stc
push
mov
shl
loope
pop
fcom
pop
in
arpl
mov
call
adc
(bad)
adc
aaa
(bad)
rol
hlt
jmp
adc
cmps
cwde
pop
and
xchg
mov
mov
inc
push
mov
cmp
or
xchg
fdiv
dec
in
push
or
jbe
mov
pushf
ret
xor
outs
push
loopne
sbb
fiadd
mov
pop
lea
adc
into
loop
test
dec
out
add
cdq
push
(bad)
sti
in
push
mov
pop
dec
in
enter
sub
push
adc
mov
inc
sub
inc
mov
aam
(bad)
shl
mov
xchg
push
mov
push
sub
fiadd
sahf
dec
inc
adc
vlddqu
scas
inc
and
repnz
push
stc
mov
fwait
jecxz
jge
push
dec
pushf
cmp
cmp
xlat
mov
xchg
out
sar
outs
ja
fs
icebp
retf
jae
sub
mov
adc
pop
mov
adc
mov
shl
std
out
adc
push
rcl
sbb
repnz
xchg
repnz
xchg
mov
sub
push
inc
xor
mov
mov
and
fimul
call
sbb
or
iret
mov
add
inc
in
add
scas
mov
and
call
mov
fwait
lods
mov
sbb
imul
and
loope
fwait
push
dec
dec
inc
lods
stos
jo
mov
ss
mov
lods
fwait
iret
lock
or
retf
(bad)
push
push
fs
je
cld
aam
jp
jl
daa
cmp
es
cmc
mov
retf
lea
jnp
(bad)
fdivr
rdtsc
or
ror
sbb
(bad)
iret
cdq
sub
push
je
popa
adc
movs
inc
jmp
sar
movs
in
aaa
and
add
push
mov
pop
add
cmovl
jmp
mov
jecxz
push
sbb
pop
mov
sbb
rol
and
cmp
pusha
jp
mov
pop
jae
push
in
mov
repnz
add
mov
pop
inc
xchg
bnd
fmul
std
(bad)
fld
pop
push
mov
ds
sub
leave
xor
fld
xor
stc
fwait
pop
mov
mov
xchg
(bad)
or
aam
lock
repz
dec
lods
loope
mov
js
fbld
aaa
xor
frstor
adc
jecxz
jno
cmps
loope
(bad)
mov
add
push
imul
test
fnstcw
rol
fmul
mov
repz
cmp
mov
retf
dec
cmc
mov
push
repz
stos
out
ret
pop
mov
inc
adc
mov
xlat
imul
xlat
sti
or
cmp
mov
clc
adc
adc
or
inc
test
pop
xchg
push
inc
push
ffree
cmps
or
inc
(bad)
nop
sbb
jb
mov
cmps
call
fwait
add
push
and
(bad)
test
ins
mov
fidiv
cmps
fdivr
movs
into
loope
mov
xchg
mov
(bad)
sahf
push
inc
ret
adc
nop
out
mov
jecxz
and
rol
cmp
adc
xchg
neg
inc
mov
scas
sub
xor
mov
pop
xor
fcomp
ja
out
les
jmp
vmovq
in
xchg
lods
push
loop
pop
rol
into
or
scas
pop
push
cmc
sbb
outs
pushf
aas
enter
push
test
sbb
pop
cmp
imul
pop
mov
cmp
lods
inc
mov
dec
cmc
xor
popa
aad
cwde
fild
sub
pop
xor
add
and
sub
add
test
add
mov
add
scas
out
outs
out
pop
shl
mov
test
pop
and
and
sub
arpl
stos
jnp
push
nop
jb
mov
imul
int
popa
push
xchg
imul
xlat
mov
push
add
mov
inc
dec
push
mov
lock
dec
jecxz
mov
dec
cmp
xchg
imul
pushaw
mov
inc
repz
cmps
je
xchg
ins
push
dec
push
std
dec
mov
xor
or
inc
cdq
cmp
enter
fld
dec
arpl
enter
mov
fstp
dec
daa
mov
cmp
push
cmp
pop
nop
aas
push
pop
xchg
(bad)
gs
pusha
inc
jnp
mov
cmc
push
fnstcw
mov
add
fwait
mov
aam
retf
movs
inc
fisttp
mov
inc
push
sub
es
sub
sub
shl
xor
mov
pop
push
pushf
fisub
popa
std
fs
mov
stos
imul
rol
stc
movs
sub
xlat
jge
arpl
inc
addr16
inc
or
loopne
cwde
cs
mov
mov
cli
mov
loop
cs
fwait
(bad)
cmp
mov
mov
xor
dec
aaa
sub
push
mov
jo
pusha
out
mov
push
test
ins
mov
jge
or
xchg
dec
push
ins
mov
dec
cs
movs
pop
push
cmp
pop
push
mov
lahf
addr16
dec
push
dec
into
push
lds
push
popf
push
mov
(bad)
push
mov
es
shr
pop
arpl
cmps
sbb
and
add
adc
call
xchg
mov
ret
fdivrp
mov
or
cmp
jb
aad
push
ja
mov
aam
mov
jne
push
mov
les
adc
mov
outs
jle
imul
dec
ficomp
mov
int
cs
js
push
mov
scas
adc
and
xchg
fstp
fdivr
and
not
es
mov
stos
lock
add
scas
clc
call
les
adc
adc
adc
push
xor
or
mov
sbb
rcr
mov
dec
xchg
push
jae
test
aaa
int3
pop
cwde
fsubr
jno
enter
jnp
mov
adc
pop
xchg
fisub
mov
and
add
add
mov
sub
f2xm1
mov
scas
ret
test
fisub
or
or
mov
enter
inc
out
add
pop
cmp
lahf
sub
dec
cmps
mov
add
popf
cmc
push
mov
fcomp
bound
jecxz
ins
ins
mov
cmps
pop
jns
ds
outs
pop
retf
scas
mov
aam
pop
push
dec
rcr
cmps
dec
(bad)
cld
dec
dec
or
dec
sub
pop
jp
pop
ret
and
sahf
arpl
inc
jmp
push
cmp
pop
jne
fxch
ins
in
loopne
cmp
jmp
bound
sub
push
sub
ret
repnz
push
clc
push
ret
mov
(bad)
loop
add
call
out
cdq
push
cmps
sub
dec
in
add
retf
or
stc
pop
enter
(bad)
int
cli
gs
(bad)
add
fs
pop
test
int3
daa
cmp
jnp
push
adc
fimul
or
pushf
dec
fisttp
test
xor
cmp
mov
dec
pop
cli
push
inc
ret
imul
iret
pop
pusha
js
and
outs
and
ja
jno
mov
scas
jge
jae
cmp
mov
gs
scas
xchg
in
dec
xchg
jmp
arpl
mov
icebp
clc
sub
adc
ror
mov
xchg
fld
xor
and
jno
mov
lea
movs
or
pop
jmp
cs
sub
mov
cmp
les
popa
dec
arpl
push
cmp
sahf
aas
mov
fimul
xchg
inc
xchg
push
adc
imul
ss
inc
mov
jle
mov
cmps
cld
xchg
or
gs
aad
mov
jo
pop
lods
mov
addr16
hlt
pop
cmps
cli
jmp
inc
test
fistp
lock
push
jmp
adc
sbb
fild
hlt
iret
cmc
xchg
outs
ins
rol
xlat
and
fild
cmp
(bad)
leave
xchg
(bad)
cwde
test
or
call
push
or
pop
mov
repnz
hlt
std
pop
dec
in
jmp
jge
xor
ror
std
gs
inc
aad
pop
call
push
adc
test
pop
not
xchg
inc
popa
xlat
int3
cmc
mov
fcom
jo
repnz
loope
push
push
mov
cmp
shl
cwde
push
cmp
loopne
mov
neg
sbb
lds
ret
movaps
cmp
push
dec
adc
(bad)
sti
into
ret
or
mov
cmp
mov
jecxz
(bad)
adc
xchg
cmp
and
push
rcl
cmp
mov
adc
mov
lahf
pop
lods
or
sbb
call
pop
pop
lods
mov
mov
pop
xchg
cmp
sbb
jl
sti
inc
(bad)
jp
or
bswap
pop
or
sub
out
xor
jmp
outs
inc
pushf
imul
test
out
mov
pop
sar
outs
mov
cmc
push
mov
stos
sbb
sbb
xlat
data16
test
ret
pop
lds
cwde
hlt
mov
rcr
cmps
shl
in
cmp
sbb
sbb
cmc
dec
xchg
and
push
pop
jae
popf
popa
addr16
(bad)
(bad)
out
dec
aad
stos
adc
jnp
push
jecxz
jmp
pop
sub
add
jo
push
out
jnp
js
out
mov
adc
push
xor
je
sbb
ins
rcl
iret
sbb
jmp
cmp
mov
outs
sub
aaa
cmp
inc
jle
hlt
mov
xchg
shl
pop
das
adc
mov
jmp
xor
xor
sub
pop
inc
jl
cli
sub
fidivr
mov
ret
mov
inc
lahf
add
pop
jg
inc
test
mov
int
imul
sbb
push
pop
push
les
sbb
out
jnp
loope
pop
mov
and
jge
popf
inc
mov
fmul
mov
mov
movs
test
ret
sti
fld
mov
dec
xor
in
dec
popf
je
loopne
sub
cmp
repnz
adc
cmp
sub
or
dec
cmp
push
and
pop
sti
jo
cmps
push
shl
fild
sbb
mov
dec
mov
and
dec
outs
mov
fdivrp
sti
idiv
jg
pusha
jae
sti
jb
gs
popa
(bad)
mov
popf
cmps
fisub
and
fild
xchg
xchg
sbb
xor
fstp
and
das
int
push
sub
add
cdq
and
das
mov
iret
inc
mov
sub
(bad)
pop
stos
push
or
daa
idiv
pusha
cs
fild
jno
fidiv
dec
imul
bound
push
imul
in
pop
push
adc
out
arpl
mul
sub
test
aam
or
xor
cmp
rcr
and
xchg
xor
mov
cmp
jno
or
ja
daa
retf
out
inc
ins
add
cmp
rol
repz
or
je
cmp
jbe
rcl
call
sbb
mov
scas
or
xchg
mov
gs
xlat
pop
xor
cmps
cdq
out
jbe
xchg
int3
mov
push
sub
mov
data16
or
sbb
or
mov
cmp
dec
test
test
outs
into
inc
pop
leave
xor
mov
movs
rol
shl
(bad)
xor
mov
nop
jne
sbb
fsubr
int
test
sub
jae
push
mov
sbb
push
repz
dec
dec
adc
push
or
jb
ins
ins
mov
cmp
mov
popa
add
(bad)
call
mov
(bad)
ins
clc
xchg
lea
pop
adc
push
movs
ret
jnp
cmc
sub
xchg
inc
jne
(bad)
(bad)
sbb
or
mov
clc
xor
xor
dec
rcl
enter
xor
jbe
jmp
mov
lock
test
ins
(bad)
or
and
retf
loopne
iret
adc
pop
or
dec
pop
jg
fdivr
lods
(bad)
in
retf
jbe
ds
cli
add
lea
hlt
dec
loopne
xchg
or
push
jns
movs
call
xchg
mov
repnz
jnp
pop
adc
stos
sub
arpl
imul
ja
jbe
dec
sbb
dec
xchg
lods
sbb
mov
cmps
or
or
out
data16
jne
pop
pop
je
add
jecxz
fmul
mov
shl
adc
add
cs
outs
out
pop
popa
dec
fldenv
sbb
out
in
xlat
push
xor
mov
ss
sub
sub
xchg
fild
push
add
ds
sbb
push
cmp
test
mov
mov
loope
adc
or
lods
jnp
bound
mov
mov
mov
ss
mov
or
ss
adc
mov
test
xchg
mov
sbb
mov
pusha
fcomp
fadd
inc
aas
shr
repz
jo
inc
ret
sbb
sub
mov
fcom
fwait
or
mov
inc
ret
sub
out
xchg
sar
add
fidiv
cmp
adc
xor
cmp
movs
inc
add
(bad)
pusha
rol
sub
inc
mov
clc
push
shl
icebp
jge
dec
mov
adc
test
jno
and
ins
call
xchg
call
and
push
repz
std
adc
jge
fcmovbe
shl
fiadd
pop
xor
enter
pop
dec
sbb
loop
xchg
nop
mov
shr
scas
fisubr
sahf
out
cmc
cli
(bad)
scas
jmp
mov
add
mov
pop
mov
out
rcl
into
dec
ficom
xor
loopne
gs
cmp
out
repz
scas
sbb
dec
stos
mov
(bad)
cmp
adc
cmc
aad
mov
scas
mov
adc
sbb
cmp
rol
xor
pop
jae
aaa
sub
test
pop
mov
ror
fdiv
fadd
test
call
or
add
lea
nop
mov
push
in
jecxz
inc
pop
aad
pop
or
scas
in
inc
movs
add
cmp
test
cwde
jge
aam
aaa
(bad)
push
push
mov
cwde
repnz
aas
lods
or
dec
test
ins
mov
xor
icebp
int3
push
mov
loopne
xchg
cmp
ret
stos
mov
pop
fmul
or
mov
daa
int3
in
push
popa
(bad)
xchg
test
mov
addr16
cmps
arpl
dec
ret
sbb
pop
adc
pop
xlat
mov
xchg
mov
fnsave
mov
out
sub
call
add
aaa
mov
fwait
sti
rcl
xchg
pop
ret
mov
jo
popa
add
nop
dec
and
pop
cmps
xchg
outs
push
stos
push
mov
jge
lds
in
dec
sub
(bad)
cmp
inc
(bad)
neg
ret
dec
arpl
xor
jo
sbb
cld
imul
jg
stos
and
pop
repz
call
fcomip
arpl
push
mov
jg
xchg
fs
test
sbb
repz
dec
inc
jge
jnp
jmp
push
sub
ins
xchg
xchg
jl
or
data16
mov
int3
sub
inc
push
in
jno
mov
jg
aad
adc
icebp
mov
ficomp
js
push
ret
jle
int
pop
retf
fsubr
pop
clc
(bad)
or
hlt
jmp
or
jl
imul
jecxz
add
pop
shr
call
pusha
mov
ins
lahf
xor
xor
in
mov
in
arpl
(bad)
ss
xor
cmp
push
arpl
mov
imul
(bad)
xchg
scas
adc
cmps
shl
std
push
jne
call
jmp
bound
lods
ds
jae
pop
in
jge
dec
cmp
das
pushf
xor
inc
jmp
push
cmps
adc
loop
aas
xor
popf
ja
sbb
pop
shr
pop
nop
adc
mov
outs
bound
or
inc
inc
pop
pop
mov
mov
test
lods
cmp
sbb
out
cmp
mov
(bad)
fnstcw
or
fs
add
fistp
mov
repnz
ins
loop
addr16
jmp
xor
test
data16
lea
jmp
push
jb
mov
stos
daa
test
gs
cmp
frstor
jp
or
daa
push
out
add
in
loope
nop
loop
shl
add
pop
mov
js
jae
pop
add
add
pause
xor
cmp
adc
cmp
jbe
(bad)
push
outs
dec
xor
adc
xchg
adc
les
ss
test
push
cmp
xchg
ret
ja
pop
fisub
cmps
jmp
mov
sar
ds
nop
or
adc
retf
cmp
lods
loop
cli
call
(bad)
adc
push
(bad)
adc
repnz
aad
je
and
sbb
push
mov
stc
jno
add
or
ins
retf
add
fisubr
mov
adc
or
dec
dec
pop
fwait
popf
imul
pop
fadd
lods
test
cmp
inc
cmp
and
xchg
dec
add
ins
in
pop
movs
cmp
iret
dec
int
fs
sbb
push
jbe
push
pop
arpl
icebp
inc
hlt
lahf
xor
or
and
cmp
imul
dec
iret
movs
or
xor
add
ins
call
sbb
mov
aas
outs
mov
les
call
in
lds
scas
fs
and
dec
cmc
adc
sub
sub
(bad)
pop
icebp
int3
jns
imul
cmps
stos
push
xor
pop
sub
pop
adc
imul
xor
not
sub
mov
sahf
dec
adc
or
call
(bad)
in
inc
jmp
or
loope
xchg
cwde
push
lods
bound
mov
(bad)
push
cvtdq2ps
jbe
add
stos
mov
mov
jae
(bad)
dec
xchg
aad
popf
stc
aad
imul
mov
xchg
test
f2xm1
scas
ins
(bad)
mul
shl
div
jl
xor
and
and
push
sbb
push
in
jnp
lea
es
mov
sub
je
inc
jno
aad
jae
push
cli
jo
dec
xor
inc
lahf
sub
cmc
pop
adc
mov
sbb
inc
cdq
in
imul
xor
sar
xchg
sub
xchg
mov
lahf
xchg
or
sub
adc
mov
add
inc
ret
jns
sbb
pop
pusha
dec
stos
stos
mov
inc
push
ins
movs
ret
add
ret
jo
push
inc
xchg
sahf
xor
into
xchg
int
add
jo
cmp
out
push
je
out
jns
stc
test
sub
fisub
mov
shl
push
cmp
cs
cmp
jge
or
sub
adc
jp
or
pop
inc
ret
dec
stos
in
add
pop
call
gs
mov
mov
push
cmp
adc
rcl
inc
fstp
imul
mov
sub
mov
xchg
push
jbe
xchg
xor
ret
inc
xlat
adc
pop
hlt
mov
mov
stc
mov
mov
fnstenv
mov
mov
xchg
pushf
add
jmp
push
mov
mov
jo
jecxz
inc
pushf
(bad)
(bad)
mov
aas
dec
mov
repnz
cmc
out
pavgb
or
arpl
adc
cdq
adc
outs
mov
inc
dec
inc
add
pop
push
ja
scas
addr16
in
les
pop
aam
jmp
popf
sbb
and
lahf
addr16
mov
add
sub
rcl
js
jmp
and
rcl
or
pop
or
shr
icebp
retf
mov
in
data16
fucomip
jnp
mov
lahf
xchg
fdiv
and
pushf
hlt
aaa
add
cmp
mov
imul
mov
adc
cwde
stos
sub
add
add
(bad)
ins
out
(bad)
retf
test
test
mov
out
ins
imul
sub
nop
cmps
xor
mov
int3
cwde
jmp
mov
cmp
jle
mov
in
or
sub
jne
out
out
mov
cmp
scas
es
mov
push
retf
rol
sahf
mov
movs
cwde
adc
or
daa
pop
sub
addr16
and
cmps
daa
repnz
jb
ds
jmp
ret
xchg
call
mov
scas
test
push
sbb
and
pop
dec
rcr
test
xchg
je
cmc
fldcw
fadd
stos
mov
pop
stc
stos
adc
mov
inc
in
aad
mov
pop
adc
pop
imul
addr16
js
jbe
cdq
retf
out
fisttp
pop
or
mov
inc
push
shl
inc
mov
pop
mov
add
ret
mov
add
imul
ins
aas
(bad)
cdq
or
sbb
pop
push
imul
mov
xor
mov
sub
pop
adc
inc
in
mov
cld
out
shl
ret
(bad)
mov
ins
(bad)
jge
jns
ins
clc
xchg
outs
cld
xchg
jl
jecxz
movs
leave
add
mov
test
ja
call
(bad)
cmp
lods
jle
mov
data16
pushf
and
fiadd
test
imul
ret
mov
ds
pop
lods
fidivr
xchg
xchg
mov
call
inc
or
ins
mov
bound
mov
call
(bad)
sti
fdiv
pop
retf
call
mov
inc
add
es
and
mov
cs
pusha
jo
lock
rcl
or
fbld
(bad)
jmp
cmp
arpl
sbb
scas
popf
dec
test
mov
xor
mov
xchg
stos
stos
nop
mov
inc
outs
(bad)
jp
retf
add
fist
mov
ret
jmp
sub
mov
es
retf
xchg
popf
fucom
pop
dec
or
js
push
pop
icebp
and
scas
test
cmps
retf
jns
mov
xor
in
mov
cmps
pop
fisubr
daa
stos
cmps
pop
out
jne
mov
ins
clc
inc
sahf
jg
test
loop
stos
in
and
sbb
jle
fnsave
loope
add
add
stc
idiv
shl
cld
(bad)
lods
mov
outs
cmps
xchg
xor
(bad)
fldcw
pop
lock
nop
fild
xchg
and
les
jno
pop
neg
mov
and
(bad)
(bad)
rcr
xor
shl
jecxz
xchg
cmp
mov
dec
mov
mov
in
inc
sbb
retf
xor
push
(bad)
xlat
stos
inc
xchg
mov
pop
cmc
mov
jb
jecxz
jns
scas
mov
jecxz
push
sub
mov
fcomip
inc
loope
sbb
jle
jl
loopne
pusha
mov
cli
xchg
or
cmps
add
out
mov
dec
pop
ins
add
pop
cwde
sbb
fnstenv
aaa
aam
inc
hlt
arpl
push
outs
adc
pop
sbb
cmps
add
inc
int3
mov
pop
push
mov
repz
and
adc
add
mov
(bad)
push
sti
mov
dec
cmp
aad
loop
mov
sbb
sub
imul
mov
js
scas
sub
add
retf
arpl
rcl
xchg
test
fisttp
jne
(bad)
adc
imul
test
and
cmps
sub
aaa
cmp
push
dec
fmul
sub
sbb
dec
icebp
outs
pop
pop
sbb
xlat
ja
mov
clc
gs
jge
sub
mov
in
call
je
data16
jecxz
ins
inc
jbe
mov
jb
rcl
outs
js
popa
add
test
mov
sub
pop
(bad)
cmp
mov
into
sbb
mov
xchg
push
jo
cmps
cmp
mov
lods
and
push
jle
dec
fsub
or
stos
jnp
fsub
mov
xor
fmul
xchg
inc
ror
xchg
adc
int
or
popa
shl
in
cdq
push
mov
mov
out
fistp
sub
sub
mov
xchg
cld
ror
and
adc
push
pop
test
sub
dec
cli
pop
rcr
dec
sbb
mov
push
sbb
ss
das
mov
mov
in
and
mov
scas
popa
xchg
sbb
imul
sub
adc
aam
xchg
test
inc
lock
push
xchg
shr
push
test
fwait
out
in
sub
aaa
stc
data16
mov
sbb
sub
fidivr
sar
movs
sbb
shl
lahf
fst
or
scas
sub
pop
iret
mov
ins
add
in
leave
std
mov
mov
or
call
dec
retf
clc
xchg
mul
jno
sub
cmc
lods
inc
adc
movs
(bad)
je
popa
sbb
cmps
mov
pusha
lea
and
not
mov
or
aad
aas
and
fstp
test
outs
repz
out
mov
sub
push
out
pop
inc
xor
aad
idiv
lds
adc
mov
push
adc
cwde
dec
test
jge
adc
dec
and
mov
xor
sti
scas
aas
out
cmp
or
js
xchg
cmp
pop
push
sub
das
aaa
icebp
jae
inc
mov
aam
int
inc
aad
in
jb
mov
clc
inc
cmp
inc
stos
mov
and
xchg
mov
sub
fs
ja
add
ja
pop
jl
cmps
jge
xor
ret
or
cmp
mov
add
rcr
push
or
into
call
and
int3
hlt
retf
cmps
inc
(bad)
loope
arpl
std
add
je
adc
ins
inc
test
jmp
daa
ss
dec
retf
int
scas
or
sbb
jmp
jno
xchg
pop
out
hlt
add
fistp
and
or
sub
adc
adc
jmp
cmp
and
jnp
shr
sahf
addr16
scas
nop
and
cmp
test
jnp
pop
xlat
icebp
ja
int3
repnz
and
inc
and
jne
lods
push
mov
cwde
call
dec
aad
add
std
adc
repnz
ja
xor
lds
push
out
dec
fimul
xchg
icebp
adc
ret
xchg
(bad)
jecxz
inc
rcl
or
(bad)
adc
bound
(bad)
nop
jne
(bad)
mov
in
sti
xchg
adc
or
(bad)
lock
push
xor
pop
movs
mov
popf
iret
mov
(bad)
and
pop
popf
dec
sbb
dec
icebp
(bad)
shl
out
jno
xchg
(bad)
lds
mov
inc
stos
pop
mov
inc
fadd
push
pop
out
iret
adc
jecxz
jo
cs
or
les
xchg
mov
jge
retf
pop
popf
pop
pusha
jns
mov
rcr
ret
push
rcr
jbe
fpatan
add
inc
outs
mov
and
push
jmp
inc
xchg
stos
cmp
sub
loopne
pop
push
cld
push
popf
xor
jno
sbb
inc
fsub
je
mov
enter
(bad)
call
mov
mov
and
jg
push
adc
sub
out
dec
or
hlt
adc
scas
mov
jg
jo
jge
aam
xor
sub
clc
push
push
fdivr
jmp
hlt
jns
jae
ins
mov
push
rol
jo
imul
mov
add
jp
xor
mov
dec
arpl
xchg
add
push
inc
(bad)
jp
and
jns
adc
adc
leave
dec
or
add
mov
stos
bound
jbe
jne
mov
mov
jne
sub
mov
and
jmp
or
dec
dec
push
cs
loop
movs
rcr
call
fimul
(bad)
imul
sbb
inc
outs
cwde
add
call
push
enter
adc
cwde
retf
mov
ins
jecxz
mov
sub
push
mov
out
mov
mov
pop
les
in
push
or
jne
repnz
xchg
mov
mov
mov
add
pop
out
xchg
cli
dec
div
movs
push
movs
pop
mov
lods
jno
push
push
leave
inc
adc
sbb
fwait
adc
adc
es
lods
fbstp
push
lods
pop
inc
int3
jl
sub
sbb
xchg
std
sub
xchg
ror
sub
loope
jg
xor
inc
adc
mov
xor
sub
cmps
mov
adc
mov
and
dec
icebp
iret
mov
add
fwait
sbb
pop
sub
sti
inc
jne
add
or
cmps
add
pop
mov
scas
fimul
loopne
and
or
pop
inc
(bad)
in
scas
dec
ds
xor
sub
mov
xchg
cmp
ins
adc
call
push
mov
xchg
inc
cmp
pop
mov
jmp
xchg
mov
jmp
shr
dec
cmps
mov
sub
push
ud2
lea
sub
ror
sti
inc
fcomip
imul
jae
mov
mov
scas
and
cmps
mov
inc
cdq
or
cmc
dec
call
fdiv
jmp
pop
ret
xchg
jmp
inc
(bad)
sar
faddp
int3
and
cs
sub
or
rol
mov
pop
imul
push
lods
sbb
pusha
inc
jle
int3
pop
fistp
fbld
repnz
scas
mov
movs
cli
out
xchg
lahf
fisub
mov
ret
push
fld
pop
rcr
mov
std
add
jp
push
mov
ins
mov
cmp
mov
jnp
fldenv
push
les
pop
or
daa
push
lods
arpl
sbb
or
cld
in
test
(bad)
stos
fcmovu
dec
fcom
cmc
push
sub
lods
pop
jbe
ja
fadd
lods
addr16
shr
push
outs
aad
ret
dec
nop
xchg
add
cmp
sahf
sti
cld
cs
sub
ins
jecxz
loope
mov
xlat
cs
adc
fist
imul
or
or
push
adc
push
mov
xor
xchg
sub
or
adc
lea
ret
enter
in
out
xor
add
inc
jo
inc
data16
aas
pop
mov
dec
xchg
mov
inc
fdiv
cwde
ins
mul
mov
retf
or
and
mov
xchg
enter
xchg
inc
jl
movs
mov
jl
test
mov
push
adc
or
inc
outs
js
popa
mov
mov
aam
cmc
dec
mov
ret
jecxz
sbb
ror
cdq
jp
ins
push
shr
iret
sub
jg
sub
cmp
adc
mov
retf
fmul
(bad)
scas
cmp
adc
ins
push
jle
cwde
mov
arpl
cmp
sbb
mov
ret
mov
int3
xchg
push
retf
(bad)
mov
jno
xor
dec
jg
or
cwde
cmp
lods
jb
sti
pop
cmps
push
cmp
cmps
test
or
dec
clc
inc
cdq
retf
les
dec
lahf
jp
xor
ja
inc
mov
adc
and
mov
int3
pushf
add
push
inc
pop
jae
push
jl
test
imul
sti
or
aad
neg
iret
inc
(bad)
stos
push
mov
mov
push
or
sti
int3
push
lods
ss
mov
retf
cmp
icebp
pusha
push
in
movs
popf
jbe
iret
adc
pop
int
mov
sub
or
push
add
(bad)
push
pusha
stc
inc
xchg
jecxz
paddq
dec
mov
pop
jge
dec
movs
xor
(bad)
push
xlat
mov
imul
lahf
fdiv
mov
mov
(bad)
fxch
rol
pop
js
mov
ret
mov
jae
sbb
jo
imul
jg
or
push
dec
cmps
stos
inc
in
and
jge
hlt
mov
pushf
mov
cmp
add
dec
sub
les
or
imul
push
movaps
sbb
jne
arpl
or
scas
sti
out
and
in
mov
shr
fwait
mov
and
sub
jae
fist
ret
jle
dec
jne
test
jp
fs
or
cmps
mov
adc
cmp
jp
repnz
push
out
test
test
dec
stos
mov
and
js
sub
aam
cmp
in
mov
cmp
pop
inc
enter
ja
mov
sbb
scas
push
out
mov
xchg
shl
outs
out
mov
daa
add
popf
mov
fild
pushf
iret
mov
bound
sbb
mov
or
arpl
push
shl
sbb
popa
into
xor
lods
loope
adc
pop
adc
mov
jnp
jg
(bad)
jmp
retf
lea
push
and
leave
rcl
inc
cdq
push
imul
cdq
jno
adc
fs
sub
fidivr
push
std
inc
dec
stos
jb
and
or
sub
xor
xchg
test
or
hlt
jmp
fs
jnp
xchg
or
dec
aas
sahf
jle
xchg
cmp
mov
pop
push
mov
stc
adc
and
push
enter
aas
outs
retf
jge
daa
cmp
and
push
bound
and
adc
(bad)
jbe
jb
sahf
test
inc
mov
pmullw
arpl
nop
adc
ins
shl
cmp
retf
(bad)
(bad)
jecxz
sub
fild
pop
shl
jne
jnp
in
xchg
pusha
mov
jns
dec
sub
outs
jb
adc
xchg
mov
enter
and
pop
mov
dec
pop
rol
inc
mov
push
push
and
fcmove
pop
and
fnsave
mov
jo
jmp
fistp
cmp
sub
mov
pop
repnz
jecxz
pushf
scas
je
sti
and
dec
(bad)
or
add
daa
cmc
or
cmp
aas
pop
push
movs
scas
outs
stc
call
cmp
dec
add
cld
add
cli
mov
rcl
out
ja
cmp
add
cmp
inc
jne
and
retf
(bad)
mov
mov
(bad)
(bad)
sti
dec
nop
mov
or
jp
pop
jp
jecxz
inc
call
push
xor
mov
xchg
ins
sub
jl
ins
jg
ins
ficomp
mov
mov
dec
popa
inc
inc
out
pop
push
pop
clc
mov
imul
jne
or
ret
mov
ret
cdq
aam
mov
mov
fucomp
push
dec
cmps
lods
add
add
in
lahf
xor
call
movs
ja
cmp
and
into
cwde
or
xor
je
sbb
aas
jmp
out
aam
inc
dec
xchg
imul
or
dec
in
and
cld
sahf
imul
dec
push
push
mov
cli
inc
xor
push
mov
cmps
jae
in
aas
stc
(bad)
jge
out
sbb
xor
mov
ffreep
in
pushf
push
dec
leave
in
push
retf
and
jns
sub
movs
adc
idiv
add
std
(bad)
sti
mov
stos
cmp
scas
add
cmps
inc
fwait
es
js
mov
call
dec
xor
cmp
push
shr
aam
add
push
adc
mov
adc
push
(bad)
frndint
fnstsw
and
push
jne
out
cdq
dec
jecxz
mov
pop
mov
mov
outs
test
sbb
inc
fisttp
popf
cmp
jae
xchg
xor
jle
and
mov
arpl
push
cmp
mov
and
jle
sub
mov
enter
push
pop
push
daa
das
inc
aad
add
mov
call
or
xchg
xchg
mov
cdq
ins
popa
and
loopne
jne
dec
test
sbb
into
mov
xchg
and
fcom
adc
pusha
(bad)
mov
lahf
cmp
mov
pushf
ja
push
out
jb
jmp
lods
jmp
sub
scas
xchg
xor
(bad)
lods
push
js
push
out
add
inc
xor
cwde
sbb
(bad)
cmp
sub
shr
jl
add
data16
rcl
or
dec
stc
cmp
xor
or
cmp
lea
sub
mov
sbb
fild
mov
das
inc
xchg
nop
(bad)
in
pop
sbb
xor
or
test
aas
inc
neg
out
fs
leave
pop
std
ret
ds
cmp
inc
xchg
add
retf
push
or
daa
sub
mov
mov
test
push
jle
add
inc
inc
call
div
(bad)
pusha
movs
call
pop
dec
push
je
ret
xor
mov
inc
jbe
fidiv
push
rol
mov
popf
and
scas
push
xor
scas
push
das
push
ret
jecxz
inc
ss
pop
stc
add
clc
sbb
xchg
loope
into
cwde
test
pop
fsubr
add
aas
add
bound
lods
or
dec
arpl
pop
ds
mul
sbb
lea
sbb
jns
push
nop
cli
neg
stos
movs
das
loope
xor
(bad)
loopne
and
ror
out
or
(bad)
rep
fst
dec
add
movs
out
test
(bad)
retf
sti
jne
inc
ja
dec
data16
mov
mov
ror
jnp
div
cmc
(bad)
or
mov
add
xor
add
shr
div
jno
sub
mov
cmc
rcl
inc
and
adc
pop
jg
sbb
lods
cld
rcl
leave
rol
(bad)
retf
inc
fst
jo
dec
(bad)
int3
aad
nop
jne
fs
jmp
mov
fst
adc
dec
adc
mov
cmp
les
rcr
mov
xchg
(bad)
jb
ret
aad
rcr
mov
fstp
mov
aad
or
fstp
dec
xchg
test
xchg
pop
aas
repz
lea
inc
jb
add
(bad)
pop
mov
arpl
push
sub
ja
sub
push
mov
push
dec
lods
and
inc
inc
repz
pop
mov
nop
xor
sbb
and
ja
or
adc
sub
das
sbb
push
xchg
(bad)
push
jg
hlt
xchg
dec
in
mov
and
jecxz
jle
scas
mov
add
dec
xor
cmp
ret
cmovs
push
pop
fs
xchg
and
cs
jecxz
xor
cmp
dec
mov
cwde
(bad)
ret
cs
in
mov
dec
hlt
xor
sub
cdq
icebp
lock
jl
pop
dec
mov
sbb
(bad)
ss
call
jge
add
ret
inc
push
sbb
aad
icebp
mov
push
into
test
adc
ror
shl
(bad)
xor
dec
(bad)
mov
add
call
mov
mov
hlt
movs
js
ds
or
(bad)
push
cmp
add
cmp
(bad)
push
dec
xor
ja
mov
adc
popa
and
lds
inc
shl
or
ins
jl
stos
sbb
jmp
inc
test
ficomp
adc
fistp
mov
sahf
shl
movs
cmp
mov
ret
pushf
ins
add
(bad)
push
push
sti
or
test
lods
arpl
in
sbb
xor
push
mov
fdiv
push
and
movs
cmp
clc
aam
push
jne
outs
movs
sub
push
call
add
and
pop
jne
dec
mov
mov
or
push
aaa
xor
push
cld
popf
js
and
jp
std
inc
mov
jl
jle
iret
stos
mov
addr16
cmp
inc
push
rol
sub
push
push
jnp
cs
call
inc
(bad)
imul
xchg
pop
and
mov
push
push
mov
sub
cmp
(bad)
std
mov
fnstcw
loop
sub
inc
and
inc
inc
dec
sub
adc
and
jb
dec
stc
xor
mov
enter
dec
dec
fadd
mov
xor
js
mov
adc
jae
jo
adc
and
push
pop
leave
dec
mov
mov
arpl
inc
mov
sahf
mov
sub
sub
sar
push
sbb
in
cmps
jp
pop
push
notrack
push
sub
aad
sub
xchg
mov
(bad)
jmp
pusha
fsub
cmp
or
test
clc
add
sub
jl
mov
mov
pop
fsub
fmul
jp
cli
push
dec
dec
(bad)
movs
and
add
sub
pop
jmp
fdivr
leave
les
xlat
cdq
add
xor
(bad)
cwde
xchg
lds
shr
add
test
mov
(bad)
push
cmp
mov
mov
adc
cwde
add
addr16
retf
push
fadd
inc
aad
stos
pop
pop
mov
sbb
pop
mov
mov
mov
ja
mov
push
mov
inc
push
and
repz
jg
cmps
adc
or
inc
xchg
adc
or
int
sbb
and
xor
or
mov
fdiv
fwait
call
sbb
and
add
cmc
mov
ret
aad
pop
icebp
xor
lock
idiv
ss
cld
dec
mov
sahf
das
mov
cmp
stc
(bad)
imul
aaa
mov
cld
jb
fisttp
movs
or
lock
pushf
cmp
ret
jo
jp
cmovb
aad
adc
jmp
dec
pop
(bad)
pop
dec
xlat
pop
fadd
arpl
je
push
add
movs
cmps
adc
adc
sub
(bad)
aam
outs
out
stos
jp
cli
sbb
pop
add
adc
mov
push
mov
mov
sub
pop
jp
cs
(bad)
cmp
popf
addr16
pop
retf
mov
sbb
lods
dec
pop
shr
xchg
or
cli
xchg
shr
addr16
pop
dec
dec
mov
aam
pop
test
cdq
stos
push
(bad)
aas
jne
jp
add
mov
sub
pop
pop
imul
imul
add
daa
(bad)
shl
jmp
mov
xchg
cdq
dec
lahf
add
mov
ins
cli
pop
stos
push
cmp
xor
sub
or
leave
mov
shl
adc
add
dec
lahf
push
test
sbb
sbb
mov
leave
adc
or
in
fdiv
dec
jbe
add
int3
or
jl
push
push
arpl
fisub
ds
inc
dec
addr16
movs
ss
and
mov
imul
in
fist
fidivr
inc
sti
sbb
cmp
sbb
sub
pop
scas
cmps
mov
dec
test
pop
aam
mov
fmulp
xchg
mov
aad
fcom
adc
sbb
adc
sub
mov
sbb
push
jmp
es
and
xchg
sbb
add
pop
jl
out
std
jl
jmp
xchg
sbb
jnp
sbb
xchg
dec
mov
and
int
cmp
mov
das
sbb
jle
mov
(bad)
repz
ret
int3
and
cmps
aad
inc
add
xor
inc
aad
sbb
inc
out
jns
jmp
or
xchg
push
pop
and
sahf
ins
dec
sub
cli
ret
dec
ret
sub
mov
jg
mov
xchg
xchg
int3
pop
jge
pusha
scas
mov
cwde
clc
mov
fsubr
sti
inc
pop
ds
fisubr
arpl
pop
lds
pop
out
pop
ja
ret
or
or
mov
fst
add
(bad)
mov
xchg
loope
nop
test
icebp
adc
cmp
and
push
xor
xor
mov
mov
sbb
mov
clc
retf
dec
ret
mov
fnstsw
mov
icebp
adc
jbe
and
cwde
push
push
dec
dec
mov
mov
in
inc
inc
icebp
test
movs
cli
xchg
xchg
cmp
aad
outs
xchg
pushf
dec
loopne
out
cmp
inc
cli
cmp
das
xor
rcr
in
inc
popf
je
fdivr
sbb
xor
cmc
das
mov
(bad)
in
inc
lods
or
jp
and
shl
iret
stos
mov
pop
stos
sub
test
out
lods
cwde
xor
test
add
jmp
daa
mov
and
std
jne
inc
add
addr16
mov
ret
xor
std
adc
push
inc
mov
aaa
and
pop
aam
popa
int3
sahf
lock
push
aad
push
in
jae
xor
jno
retf
retf
loope
pusha
fcmovnbe
jnp
mov
pop
(bad)
cmp
inc
push
ss
push
call
xor
sub
xor
pop
cmp
xchg
push
int
xor
cmp
inc
ja
in
mov
fmul
test
xchg
xchg
xchg
adc
jne
mov
inc
jl
iret
mov
js
gs
mov
in
xchg
retf
push
add
xchg
idiv
mov
scas
pop
mov
lea
call
cmp
jmp
icebp
and
mov
mov
adc
mov
push
call
xor
pusha
jmp
pop
bound
cs
fsubr
adc
ret
mov
mov
ds
loope
jle
or
push
fdivr
sub
dec
cmp
sub
xor
and
leave
out
data16
inc
pop
frstor
xor
pop
or
es
or
and
and
iret
add
add
mov
add
push
pop
test
and
mov
and
sub
pop
mov
adc
aam
push
push
pop
and
popf
push
push
xor
inc
ret
pop
jo
add
std
pop
and
das
(bad)
sub
fcmovne
push
or
ror
mov
aad
mov
ds
push
hlt
mov
add
pop
dec
sub
dec
jnp
mov
jecxz
loope
pusha
in
jo
pop
or
cdq
jle
cmp
xchg
xchg
xchg
inc
mov
js
iret
add
dec
or
or
jecxz
imul
xor
xchg
xchg
xor
xchg
aas
test
aaa
out
pop
push
ins
fild
int3
test
call
push
adc
shr
mov
(bad)
pop
inc
jbe
imul
mov
or
xchg
add
fdiv
and
lds
sub
call
push
stc
cmp
pop
mov
and
adc
adc
fadd
loope
xor
xchg
xor
cmp
jecxz
or
xchg
pop
inc
adc
out
jp
add
call
sar
xchg
mov
es
or
sbb
ret
cli
mov
jb
mov
xor
jle
jmp
mov
cdq
push
xlat
jl
cwde
push
sbb
push
cwd
mov
jmp
ficom
in
cwde
pop
loopne
xchg
push
sub
mov
mov
sub
dec
test
test
call
test
out
dec
call
jg
rcr
add
push
and
arpl
iret
add
mov
hlt
arpl
and
cmp
dec
fisub
movs
adc
repnz
cs
add
push
scas
out
jecxz
inc
mov
rol
je
push
push
and
xchg
mov
jecxz
ss
xchg
loope
or
xor
push
mov
cdq
call
sub
jl
xchg
cmp
(bad)
mov
mov
int3
adc
xchg
dec
adc
aas
jp
mov
add
pusha
sub
and
leave
push
jge
mov
jecxz
sbb
mov
(bad)
(bad)
inc
mov
or
lock
mov
cs
push
dec
jle
xchg
cld
and
push
je
fisub
add
pop
pusha
loopne
pushf
push
xor
outs
ins
fstp
inc
ins
iret
mov
fdivrp
or
shl
lea
lea
adc
or
mov
push
mov
jbe
test
ret
mov
mov
xchg
pop
(bad)
push
jle
add
loop
inc
bound
cmps
sbb
into
xchg
dec
pop
and
lock
jmp
mov
and
into
adc
mov
mov
shr
or
in
imul
push
xchg
ja
inc
cmp
pop
cli
(bad)
sahf
xor
cld
dec
(bad)
sahf
adc
pop
or
cmps
ret
scas
mov
mov
push
in
jnp
dec
clc
dec
mov
mov
shl
popa
or
loope
test
shl
ret
movs
sbb
push
dec
push
cmp
out
stc
xchg
dec
test
jne
xbegin
ror
and
rcl
xor
mov
and
shl
add
scas
adc
pop
aam
jo
dec
sub
xchg
adc
mov
dec
movs
retf
xor
dec
mov
aas
xchg
int
push
dec
pop
jae
dec
mov
stos
sub
or
adc
int3
js
ret
or
push
cmp
add
sub
add
jmp
jne
pop
sbb
sub
or
push
jo
and
int3
inc
test
ret
or
push
dec
(bad)
fs
cli
push
mov
push
add
sti
loope
movs
les
nop
push
mov
iret
xchg
outs
std
ins
rcl
jmp
aaa
adc
jg
cmps
in
mov
add
xchg
shl
mov
jo
fs
movs
(bad)
leave
scas
mov
repz
ins
add
aaa
inc
sbb
or
lods
imul
add
loopne
jns
mov
mov
jne
pop
dec
mov
or
(bad)
dec
adc
or
pop
mov
sbb
push
sbb
inc
xor
repz
push
push
mov
fcmovnb
or
in
and
jbe
ins
inc
push
idiv
xchg
jns
add
retf
push
adc
pop
scas
adc
dec
pop
loopne
mov
or
or
nop
push
adc
movs
pop
(bad)
jmp
add
add
push
sti
sbb
stos
ss
xor
add
sahf
test
cmps
jl
cmc
aad
sub
jge
xor
dec
rol
sbb
dec
pop
lods
pop
add
dec
les
je
(bad)
ds
jg
jecxz
aas
(bad)
dec
or
sbb
jecxz
into
bound
xor
arpl
jb
js
imul
sbb
stos
shl
pop
adc
sar
mov
xchg
mov
jnp
les
inc
and
jo
sbb
out
dec
mov
inc
movs
in
add
inc
shr
pushf
retf
mov
fimul
fild
pop
sahf
push
bound
xchg
dec
xchg
jbe
vpaddw
movs
std
pop
dec
xor
aas
cmp
or
aaa
push
cmp
cmp
iret
pop
out
dec
shr
(bad)
stc
(bad)
mov
pop
repz
lds
ror
sbb
std
pushf
vmwrite
xchg
cmp
pop
xlat
es
sahf
movs
mov
and
inc
push
inc
mov
call
or
int3
inc
jno
mov
and
add
mov
ret
(bad)
xchg
(bad)
loop
(bad)
cwde
jb
inc
mov
fnstenv
popf
sar
out
out
pop
nop
mov
(bad)
imul
sar
lea
jb
mov
pusha
shl
mov
cwde
mov
pop
mov
loop
dec
dec
cmps
fld
pop
sbb
pop
push
popa
mov
fwait
inc
dec
hlt
and
pop
adc
cmps
xor
aam
loop
xor
out
xlat
scas
out
and
mov
cmp
xchg
imul
aas
xor
inc
mov
sub
dec
fidiv
inc
fdivr
pop
add
sbb
sub
pop
sbb
fsubr
push
pop
xchg
fsub
int
mov
(bad)
stos
push
mov
xchg
xor
dec
popa
aad
aam
pop
js
adc
xor
dec
(bad)
push
pop
ds
push
test
jae
jecxz
mov
cli
push
aad
addr16
cli
outs
mov
lods
or
jmp
scas
jecxz
or
and
fidiv
out
mov
xor
dec
sti
mov
cmp
cli
mov
sub
lods
loopne
xchg
js
in
adc
and
mov
push
mov
mov
dec
mov
clc
mov
xor
test
int3
aaa
js
adc
and
add
mov
lock
mov
mov
fwait
push
mov
neg
cmp
shr
retf
(bad)
push
inc
xor
pop
jle
test
push
dec
test
stos
sub
popa
and
aad
in
dec
and
push
sbb
mov
rol
clc
les
hlt
movs
gs
jmp
xor
ja
mov
in
fldcw
sbb
xchg
outs
adc
adc
xchg
(bad)
and
scas
in
sub
das
mov
cmp
cmp
out
in
mov
pop
in
sbb
fidiv
push
pop
mov
sub
jg
add
or
hlt
push
cmp
sbb
lahf
shr
data16
not
shl
push
pop
mov
add
mov
lods
je
jne
and
sub
mov
jb
stc
push
xchg
sbb
xchg
arpl
fidiv
pop
adc
jno
sbb
arpl
pop
cmps
pop
icebp
pop
ret
pop
push
mov
add
and
je
jne
outs
and
fucomp
pop
mov
or
xor
mov
xor
in
enter
xchg
in
popf
adc
shr
push
sbb
mov
cmps
in
dec
clc
int3
je
fld
(bad)
(bad)
pop
in
pusha
out
xlat
shr
rcr
in
push
inc
mov
and
outs
xor
cmp
sbb
add
imul
jge
(bad)
sbb
xchg
add
test
jp
add
sub
bound
popf
iret
dec
mov
sbb
loopne
mov
imul
aad
and
bnd
movq
push
cmp
test
arpl
and
push
cmp
loope
mov
jl
and
das
fild
sbb
jle
mov
xchg
loopne
movs
jmp
ror
(bad)
jmp
lods
clc
add
add
rcr
mov
adc
cmc
mov
xchg
(bad)
jge
test
and
pop
push
add
dec
ds
xchg
pop
jbe
int
imul
ret
sbb
mov
mov
cmp
pop
faddp
popa
push
sbb
sub
mov
inc
cmc
mov
adc
bound
jo
sbb
fild
or
ds
leave
or
movs
or
mov
out
mov
and
dec
xchg
ja
cli
cld
sbb
jae
cld
pop
inc
add
ds
push
jge
aas
pop
push
or
cmp
or
cmp
mov
clc
out
iret
stos
mov
xchg
push
aad
scas
xchg
xchg
push
mov
mov
cld
cdq
ja
or
push
mov
cmp
pop
push
retfw
das
lock
mov
and
push
fmul
mov
xor
clc
lods
cmp
ret
aam
pop
mov
sahf
dec
hlt
std
mov
nop
ja
sub
out
push
fs
pop
sub
aaa
push
std
xor
and
outs
xchg
leave
dec
(bad)
mov
inc
mov
bound
fist
ficomp
cmps
repz
cmp
mov
push
mov
sar
fist
iret
add
cmp
pop
dec
dec
jae
test
inc
jo
sub
test
outs
mov
call
loope
sar
inc
pop
(bad)
mov
mov
pop
ficom
es
xor
inc
mov
adc
(bad)
inc
fs
push
jo
ins
adc
mov
jb
dec
arpl
repz
ins
dec
fisub
dec
mov
rol
pop
arpl
lods
(bad)
loopne
push
push
mov
scas
dec
push
sbb
adc
repz
cmp
outs
out
dec
inc
pop
mov
pop
test
outs
ror
jns
inc
inc
aaa
rcr
adc
sub
jl
cld
outs
add
scas
out
retf
adc
retf
sbb
fdivr
or
daa
adc
add
mov
jg
inc
xchg
mov
jnp
xor
mov
jo
ret
retf
hlt
iret
cdq
add
dec
add
dec
mov
blcic
stos
mov
movs
add
scas
mov
retf
fidiv
xor
push
repz
lods
sbb
sbb
(bad)
cmp
cmp
and
cld
js
(bad)
neg
push
es
jge
dec
cmc
xchg
cmp
bound
xchg
jmp
mov
dec
js
mov
shr
xor
xchg
shr
fwait
enter
mov
jnp
mov
xchg
inc
sbb
pop
ror
sub
add
gs
addr16
imul
sbb
popf
or
cmps
stos
dec
xchg
sbb
xor
shr
xchg
loopne
lock
mov
mov
scas
jns
jp
mov
push
dec
sbb
jnp
inc
sahf
fwait
(bad)
mov
jno
mov
xchg
test
int3
push
data16
loope
fimul
nop
dec
fwait
ss
std
mov
jecxz
test
and
out
push
jb
lock
mov
mov
test
mov
and
out
push
or
ins
stc
rcr
dec
ins
jne
cmp
imul
imul
or
clc
das
jmp
cmps
outs
mov
cmp
xchg
out
dec
pop
mov
sar
ds
das
jae
icebp
push
sub
jl
iret
lea
inc
sbb
dec
in
xchg
dec
sub
(bad)
leave
test
adc
xchg
mov
in
inc
lock
jmp
cdq
pop
loop
(bad)
in
rcr
test
ret
cmp
mov
jne
add
fst
jo
sbb
sbb
loope
cdq
daa
push
pop
sub
leave
test
mov
neg
leave
arpl
lods
mov
sub
dec
and
test
dec
and
loope
cli
or
inc
push
lea
pop
imul
movs
stc
nop
and
call
jl
jno
iret
mov
stos
push
dec
sbb
push
imul
adc
push
dec
mov
xchg
push
jae
test
xchg
pop
dec
rol
adc
not
loope
dec
fdiv
mov
dec
int3
add
enter
in
xchg
jp
int3
cld
(bad)
cdq
push
add
aam
pop
jge
jns
pop
fisub
sbb
mov
xchg
mov
shl
mov
inc
pop
in
jns
add
icebp
pop
int3
int
mov
push
xchg
adc
mov
fwait
iret
sbb
(bad)
out
adc
inc
loop
fbstp
mov
lahf
and
sti
fst
and
cmp
and
jb
in
ret
out
cmps
stos
lea
pusha
retf
pop
pusha
push
lods
call
aaa
adc
out
xor
not
jl
test
jnp
icebp
out
scas
mov
mov
jp
ins
add
sbb
fs
lea
scas
xor
ins
pusha
icebp
inc
imul
fsub
add
or
cmps
and
iret
(bad)
push
pusha
cmp
jae
dec
pusha
test
mov
repz
cwde
sar
rol
popa
cld
imul
adc
fdiv
iret
and
jno
loope
imul
fwait
sti
mov
adc
pop
in
js
sub
add
frstor
fwait
js
dec
das
xchg
leave
pop
push
inc
mov
xor
xor
in
cmp
jl
push
sub
add
push
retf
int
push
sub
xchg
outs
aas
sub
add
sbb
arpl
(bad)
in
ja
mov
adc
(bad)
in
in
sbb
ret
ins
adc
jo
jecxz
loop
shl
js
in
rcl
loop
arpl
jo
cmps
sbb
ret
ret
pop
test
mov
xor
xchg
xor
or
cs
mov
and
cmps
iret
or
cs
sub
jecxz
cmp
sahf
jl
cdq
mov
or
add
sub
or
sub
add
fsub
push
jg
cld
push
dec
mov
sti
sbb
push
xor
fmul
mov
sahf
dec
mov
xchg
out
loopne
inc
cs
pop
dec
hlt
sbb
inc
dec
test
cs
cmp
pop
cdq
pusha
cld
or
xor
push
pop
fldenv
movs
push
inc
mov
jae
xchg
je
lods
shr
pop
mov
adc
xor
cs
cmp
xchg
(bad)
mov
cmc
xchg
dec
sub
pop
in
pop
push
mov
xlat
(bad)
jmp
arpl
repnz
shr
sub
or
std
cdq
jb
mov
aam
cmps
xchg
mov
pop
(bad)
(bad)
aas
jg
and
push
push
loop
std
aas
mov
dec
loopne
je
scas
(bad)
sbb
dec
in
jmp
mov
xor
aad
ret
pop
out
xor
fisub
inc
test
ins
lahf
or
scas
pop
xchg
aad
pop
test
pop
jnp
pop
mov
sbb
push
lods
mov
mov
push
mov
push
xchg
data16
mov
push
add
or
push
ret
cmp
mov
movs
cmp
sbb
fidivr
out
xchg
push
cmp
dec
lods
mov
rcl
adc
pop
aad
jmp
add
repz
js
push
sub
or
push
mov
xor
retf
push
es
or
add
xor
outs
cmp
(bad)
retf
fadd
pop
jb
es
and
dec
xor
sub
clc
or
in
(bad)
aad
inc
ret
js
hlt
lea
or
fidivr
jne
fnsave
(bad)
fisubr
test
mov
push
xor
jmp
xor
mov
fs
sbb
add
aad
mov
in
retf
jne
pop
clc
add
add
or
cli
inc
(bad)
out
sub
daa
cli
mov
inc
in
and
sbb
mov
into
cmp
pushf
cli
enter
ret
sbb
ret
test
pop
fidivr
mov
mov
popf
dec
mov
sub
cmc
cdq
sub
sub
sbb
or
push
aam
mov
or
mov
mov
push
push
retf
lods
test
jae
aad
sahf
dec
(bad)
and
dec
cmp
cmp
cmp
pop
mov
fwait
pop
xchg
(bad)
pop
or
mov
ja
in
sub
cmp
pop
lods
push
dec
fdivr
repnz
jns
xor
pop
push
xchg
inc
mov
dec
fwait
pop
dec
adc
es
loop
push
in
retfw
cwde
or
mov
xchg
fcom
fdiv
pop
add
sub
push
xchg
into
sbb
cdq
jecxz
inc
or
jmp
push
sar
(bad)
ss
pop
add
sbb
mov
outs
mov
or
inc
ins
sbb
addr16
loopne
or
sbb
std
push
xchg
push
out
gs
aas
fadd
add
cmps
inc
sti
push
jno
and
cmc
adc
jae
cmc
sub
pmuludq
push
mov
adc
xor
inc
test
rol
movs
mov
pushf
out
repz
mov
push
sub
gs
clc
mov
aaa
call
mov
xchg
mov
lds
frstor
(bad)
daa
(bad)
lods
nop
push
loopne
inc
jbe
mov
scas
scas
push
outs
dec
mov
je
sbb
adc
xlat
loope
repz
test
ins
xchg
inc
pop
push
lods
or
dec
mov
sub
push
repnz
aad
popf
sti
and
dec
xchg
loope
jl
sahf
inc
mov
shl
shl
xchg
push
mov
dec
das
push
or
mov
std
aam
or
cmp
mov
push
and
das
dec
jle
xchg
lahf
aad
pop
jg
adc
add
push
push
mov
jae
ret
fmulp
and
stos
int
aas
aas
xchg
loope
test
or
mov
retf
adc
out
shr
jmp
mov
ds
retf
jmp
mov
icebp
scas
imul
leave
pusha
enter
in
aaa
adc
add
cmp
ds
mov
adc
mov
repnz
sbb
movs
sbb
xor
bound
sbb
xor
pop
rcr
es
sub
push
aas
shl
inc
icebp
icebp
jp
je
call
sti
dec
icebp
sbb
dec
js
push
push
pop
add
mov
out
pop
cmp
test
stc
sbb
call
outs
imul
xor
sti
jno
jmp
cwde
or
dec
cli
dec
xor
jns
leave
cmc
mov
gs
pop
mov
mov
or
add
retf
jecxz
(bad)
lea
popa
mov
or
mov
or
loopne
xor
jl
xchg
inc
je
mov
mov
out
inc
jmp
std
test
ror
inc
jp
pop
fs
jne
xor
xor
inc
es
adc
dec
mov
mov
sbb
les
cwde
mov
xlat
sub
or
pop
push
test
gs
sar
rol
cmp
les
pop
sub
sbb
cld
and
mov
jge
sar
xor
xor
mov
test
popf
lds
(bad)
aaa
cmp
xchg
xchg
pop
or
outs
out
popa
arpl
(bad)
cld
gs
pop
shl
push
in
addr16
scas
cmp
test
xchg
loop
sbb
add
jge
mov
xor
dec
std
lods
dec
fiadd
aas
cmp
dec
lea
(bad)
cmc
fs
mov
fimul
add
mov
xchg
scas
scas
or
out
ins
add
push
out
je
imul
sbb
and
mov
xor
push
sub
sub
mov
xor
leave
jmp
xor
adc
adc
and
pop
dec
mov
inc
bound
push
dec
xchg
data16
mov
mov
add
jo
cmp
cli
dec
arpl
or
dec
test
movs
shl
fisub
fwait
(bad)
mov
sahf
mov
fimul
jo
mov
sar
cmps
daa
adc
stos
fadd
ret
xchg
call
lods
push
mov
icebp
jo
imul
cmp
aaa
sbb
aam
sub
fadd
jmp
in
outs
dec
add
inc
jns
xchg
pop
pusha
lea
sub
or
pushf
movs
push
std
mov
xchg
add
dec
sbb
in
inc
or
xor
sub
pusha
jmp
out
cmp
xchg
jbe
sbb
or
fimul
in
loop
sub
jmp
ja
adc
mov
arpl
popf
(bad)
mov
mov
push
inc
bound
sub
mov
mov
mov
sbb
test
pop
movs
cmp
not
add
jl
jne
test
add
inc
jno
(bad)
hlt
lods
or
popf
cmp
(bad)
push
jo
and
sar
mov
test
xchg
shl
stc
sbb
or
cli
sub
inc
xchg
adc
adc
iret
adc
push
cwde
xchg
mov
and
fdivr
sub
repz
xchg
push
ror
test
jmp
add
call
cld
or
mov
cld
fst
cli
movs
xor
bound
sub
lahf
xchg
pop
push
(bad)
push
notrack
out
icebp
xchg
dec
cdq
pop
mov
call
leave
test
ja
xchg
je
or
popa
bound
xchg
mov
fcomp
fsubr
outs
dec
add
je
xchg
sbb
xchg
icebp
(bad)
mov
ds
ficom
xlat
std
shl
test
lahf
loop
pop
push
stc
sahf
aaa
adc
inc
ss
or
ja
(bad)
xchg
mov
out
inc
push
pop
scas
fisttp
pop
pushf
std
inc
adc
push
pop
pop
mov
ror
inc
bound
adc
stc
(bad)
add
xlat
aas
test
std
arpl
push
bound
mov
test
(bad)
in
jae
jns
xchg
mov
mov
sahf
out
xchg
mov
aam
mov
sbb
ret
push
mov
lds
imul
icebp
xlat
aam
push
sbb
out
dec
int
fstp
pop
sbb
sbb
popa
xchg
es
les
mov
sub
jb
mov
inc
ds
div
pop
cmp
inc
or
push
cmp
div
leave
fdiv
out
pop
mov
cmps
xor
cmp
sti
mov
push
xlat
mov
call
std
cmp
je
mov
les
pop
imul
leave
inc
(bad)
cmp
adc
pop
cmp
or
test
ss
icebp
adc
call
popa
mov
sbb
je
jmp
das
and
aam
jecxz
jge
in
cmc
in
mov
jmp
in
pop
sub
call
mov
clc
mov
and
loopne
push
ret
in
in
xchg
pop
push
loopne
(bad)
leave
int
out
xchg
test
mov
fnstcw
rcr
mov
cs
or
adc
adc
xchg
test
pushf
mov
fild
mov
mov
sbb
add
sub
aaa
ja
dec
adc
pop
xor
sbb
mov
jecxz
add
pusha
cmp
dec
lods
push
hlt
popa
dec
add
fadd
xchg
jno
jg
push
mov
sbb
imul
sub
mov
push
(bad)
popa
inc
xchg
test
xor
loopne
xor
loopne
sbb
neg
sub
add
pop
add
int3
cs
inc
or
ret
jns
adc
in
pop
push
fdivr
cmp
stc
idiv
cmps
aad
repnz
aaa
dec
xchg
fdiv
enter
cmc
mov
bound
popf
dec
pop
mov
inc
inc
mov
int
frstor
retf
(bad)
fpatan
lea
(bad)
jbe
jp
ret
mov
test
in
push
pop
pop
pusha
ins
xchg
scas
fidiv
ja
pop
cmp
dec
sahf
mov
mov
ficomp
jle
xlat
popf
neg
mov
or
push
dec
pushf
imul
add
addr16
out
jo
ja
das
mov
jno
mov
ds
sub
movs
and
shl
imul
and
push
mov
inc
rcl
cmc
mov
addr16
pop
jb
ins
pop
pop
sahf
push
js
aam
mov
repnz
mov
pop
hlt
in
cmp
call
inc
popf
adc
pop
stos
(bad)
mov
push
fld
jns
adc
add
jae
cmp
(bad)
fbstp
test
mov
ins
out
(bad)
mov
push
inc
mov
lods
lock
or
pusha
or
cmps
jle
sbb
ret
mov
cmp
loope
push
jns
pop
cmp
xor
scas
adc
aam
rcl
or
adc
mov
pop
int
enter
shl
and
mov
adc
xor
sbb
add
test
movs
sti
mov
pop
mov
aas
cmc
scas
push
addr16
ins
add
(bad)
dec
xchg
out
add
mov
xor
cmp
jmp
mov
mov
movs
mov
inc
jns
mov
imul
xchg
pop
inc
pop
or
dec
gs
adc
jecxz
icebp
add
pop
shl
out
fld
or
fadd
ret
pusha
ds
pusha
cs
div
fyl2x
jmp
push
cs
inc
sahf
fistp
adc
mov
add
and
xchg
mov
mov
(bad)
in
jle
jl
fmul
rcr
int
push
add
scas
push
or
cs
xor
cmp
cmc
(bad)
push
cwde
in
inc
jno
lahf
fimul
mov
int
or
test
mov
mov
mov
jl
cli
pop
push
cmps
cmps
push
loope
dec
std
dec
add
inc
shl
mov
pop
lea
mov
das
repz
sbb
add
sbb
clc
outs
adc
outs
retf
jg
lahf
sub
add
and
arpl
cmp
pop
mov
sub
dec
in
add
mov
inc
cmp
loopne
and
xchg
pop
cmc
data16
cmps
jbe
mov
sub
out
ret
xchg
mov
sbb
adc
mov
popa
test
adc
mov
jae
jl
fimul
out
aad
sub
vmovupd
aam
cmp
push
xchg
pop
mov
call
push
test
repnz
les
fwait
cdq
xchg
lds
or
imul
jmp
mov
lock
adc
fcomp
scas
mov
(bad)
std
pop
xor
jp
cwde
push
shl
jle
mov
cmovge
dec
xchg
xor
fiadd
rcr
jg
or
out
into
jmp
mov
dec
test
fld
shr
xchg
popf
jb
or
stc
mov
stos
mov
(bad)
fisub
jae
inc
fs
and
popf
or
mov
jmp
(bad)
outs
mov
sar
(bad)
pusha
repnz
xor
cmp
stos
mov
fsubr
and
shl
xor
push
cwde
cmp
ja
icebp
lods
sub
cmc
fnstenv
scas
mov
adc
mov
in
and
inc
adc
push
push
enter
dec
adc
test
cmp
cmp
add
jmp
and
dec
sub
dec
sbb
cmps
scas
or
sub
rcl
jo
inc
ret
jne
push
pop
loop
call
sbb
in
xchg
(bad)
add
addr16
std
xchg
shr
out
jl
leave
pop
retf
dec
sbb
add
push
add
sbb
push
sub
pop
mov
xchg
pop
das
stos
add
out
inc
push
imul
jmp
mov
adc
mov
stos
cmp
clc
cld
add
dec
jmp
mov
sub
push
mov
mov
fnstcw
call
or
xchg
jp
inc
jle
and
cmps
add
retf
jb
(bad)
mov
dec
out
push
and
sub
xor
or
adc
pushf
(bad)
call
js
jae
add
xchg
cmps
mov
push
dec
sub
mov
mov
enter
rol
sti
imul
fld
mov
push
arpl
add
clc
jmp
inc
ss
cmp
jmp
dec
retf
int
ss
gs
retf
shr
push
adc
stos
mov
data16
aam
push
fdiv
mov
push
push
cmp
xor
icebp
push
jb
push
sbb
(bad)
aad
sbb
out
ins
mov
(bad)
int3
ja
mov
xchg
cmc
movs
scas
jmp
dec
shr
jge
aad
adc
in
lahf
push
dec
aaa
jg
cmp
jmp
and
retf
pop
jp
sbb
inc
xor
push
test
xor
popa
mov
push
mov
cmp
addr16
add
adc
and
dec
mov
pop
pop
clc
sub
mov
and
ror
add
lods
cmp
shr
dec
push
xchg
jecxz
es
popa
xchg
jmp
inc
xchg
adc
pop
in
popa
aaa
gs
jmp
jbe
cs
sub
push
push
ins
call
cmp
ss
nop
sub
push
adc
jno
outs
pop
and
in
and
cmp
add
mov
or
dec
std
adc
(bad)
mul
xchg
pcmpeqd
fdiv
xchg
cmp
mov
sub
xchg
mov
arpl
mov
in
cmps
inc
das
dec
std
sub
mov
push
jnp
loop
cmp
stos
sbb
pop
scas
cmps
xor
arpl
xchg
pop
movs
nop
pop
sbb
jmp
out
repz
pop
into
pop
jge
rcl
repz
mov
add
add
sub
mov
adc
push
cmc
jo
xchg
push
ds
loope
call
and
jmp
ss
or
gs
prefetch
lods
jbe
sub
ret
mov
xor
shr
xchg
hlt
mov
pop
pop
(bad)
scas
lods
xchg
sub
movs
out
push
arpl
and
cld
movs
(bad)
mov
aaa
push
int
adc
test
das
sbb
leave
out
std
fwait
(bad)
out
call
adc
mov
mov
push
and
sahf
adc
rol
popa
mov
in
jo
mov
sub
lock
lods
pop
ins
stos
data16
push
push
mov
cli
int3
(bad)
push
adc
and
sbb
mov
push
jbe
shl
std
es
in
push
imul
fist
xchg
fs
fiadd
jg
sbb
aas
bound
js
cli
out
dec
xor
sub
mov
(bad)
sar
pop
out
inc
push
mov
mov
lds
mov
jb
mov
jg
jp
dec
xchg
mov
lock
(bad)
(bad)
rol
dec
xor
cmp
jb
retf
xchg
cli
je
xor
dec
(bad)
in
icebp
dec
out
outs
dec
addr16
xor
rcl
push
std
lds
pop
movs
in
or
imul
idiv
test
cmps
dec
sub
cmp
popf
adc
repz
cmps
sbb
cmps
aas
mov
addr16
or
in
mov
push
mov
cli
mov
xchg
call
add
sbb
ror
popa
push
and
push
mov
imul
shl
cmc
adc
adc
loop
inc
movs
xor
scas
fwait
dec
les
in
das
dec
mov
or
mov
push
jmp
cmps
enter
inc
xchg
loopne
mov
stos
inc
jge
hlt
retf
inc
iret
(bad)
test
mov
ret
xor
fst
in
popa
mov
sub
out
stc
xchg
idiv
loope
aam
std
movs
push
icebp
in
fld
dec
ja
jecxz
pop
adc
fstp
nop
pop
test
fbstp
mov
sub
pop
movs
outs
sub
int
push
rcl
mov
sbb
cmp
cmp
ins
add
jbe
inc
clc
pop
xchg
addr16
xchg
jl
mov
add
xor
cli
scas
mov
lock
push
stos
fst
rol
pop
dec
push
mov
xacquire
mov
jle
cmova
jmp
xchg
or
pop
cdq
xor
cmp
push
adc
jp
jmp
fld
es
mov
stc
mov
and
mov
mov
nop
outs
clc
xor
sub
sbb
stos
fs
pop
nop
std
jnp
jbe
in
retf
xchg
in
pop
adc
sub
jp
fucomip
xor
pop
lods
xchg
(bad)
fisttp
fld
xor
cmps
add
adc
sub
test
ins
in
and
mov
movs
sbb
inc
jecxz
pop
cmp
sar
sbb
inc
jae
stc
addr16
inc
jp
and
xchg
mov
adc
js
imul
inc
out
sub
dec
sti
push
inc
fidivr
dec
mov
(bad)
adc
xor
push
push
inc
dec
adc
stos
daa
push
cld
int
jb
or
adc
mov
mov
jb
adc
int
mov
sbb
mov
mov
xchg
div
adc
repnz
mov
pop
jo
lock
or
inc
adc
cli
push
outs
mov
fs
jg
sbb
add
jecxz
jp
push
jne
mov
repnz
jns
fsubr
xchg
retf
movs
xchg
sbb
fsub
inc
pop
cli
and
in
jg
jl
popa
mov
ja
lea
mov
es
in
add
mov
xchg
ret
in
adc
lahf
inc
xchg
js
mov
push
dec
xchg
rcl
repnz
and
enter
mov
sub
ror
(bad)
lock
add
dec
cwde
adc
scas
sub
inc
and
(bad)
in
dec
mov
out
jl
cmp
out
shr
fs
pop
sbb
add
cmp
xor
dec
ror
xor
inc
and
(bad)
fild
inc
fwait
(bad)
and
xor
xor
mov
out
sar
inc
retf
clc
sub
jns
int
and
js
pop
pop
aad
jg
pop
cdq
test
in
sbb
(bad)
sti
cmp
ret
dec
jnp
sub
cmp
pop
daa
sub
pop
cmp
fs
sbb
bound
jecxz
test
pop
sbb
inc
add
shl
jl
adc
xchg
in
stos
arpl
movs
xor
(bad)
lock
mov
add
sahf
scas
and
mov
aad
int
xor
in
sbb
push
out
in
sub
mov
aas
iret
jl
dec
clc
jne
daa
std
loope
jns
add
mov
xchg
fdivr
je
aas
stc
push
sub
pop
pushf
mov
fdiv
outs
mov
popa
sti
movs
add
mov
push
inc
rcr
or
mov
bound
mov
xchg
outs
sbb
pop
cld
and
fisubr
stc
fs
fcmovbe
xchg
pusha
mov
test
xor
mov
(bad)
dec
jb
mov
lea
popa
stos
into
mov
lds
add
aas
jg
(bad)
or
xchg
ds
imul
sub
pop
ins
jno
leave
out
repz
(bad)
ror
push
mov
cdq
and
mov
or
push
int
mov
dec
jp
dec
es
(bad)
push
clc
push
xchg
jp
shr
adc
add
jns
xor
xchg
les
fnstcw
fisttp
(bad)
movs
dec
hlt
jp
dec
js
sbb
(bad)
scas
call
inc
or
(bad)
cli
icebp
xor
mov
retf
dec
lods
or
sbb
in
popf
sub
cwde
cld
jle
sbb
cli
pop
push
addr16
fsubr
repz
inc
xor
pop
dec
mov
push
setp
push
jmp
out
inc
(bad)
faddp
es
stos
or
inc
hlt
and
mov
cmps
adc
rcl
xchg
gs
dec
cmp
dec
jae
cmps
(bad)
retf
jb
pop
pop
mov
xchg
in
in
xchg
inc
sbb
push
add
xor
fst
jae
jne
cmp
xchg
sub
dec
dec
ftst
fldcw
xchg
lods
stc
in
(bad)
in
jno
lock
jns
imul
icebp
scas
test
dec
nop
and
lea
fs
adc
adc
movs
or
or
mov
sbb
(bad)
xchg
shl
hlt
fsub
mov
xor
push
or
shr
imul
test
lock
mov
xor
xchg
pop
push
out
aaa
iret
mov
ja
ins
cmp
lock
stc
pop
aaa
adc
(bad)
pop
pushf
fisttp
into
repnz
push
jmp
(bad)
pop
pop
test
dec
(bad)
loope
shl
in
push
sti
xchg
fcmovnb
fidiv
dec
fisub
ficom
aad
sub
or
mov
push
gs
adc
sub
sbb
jle
call
sbb
aad
scas
ffreep
mov
inc
in
add
rcr
loopne
std
mov
leave
ins
and
adc
ins
or
sti
fs
iret
call
(bad)
pop
in
xchg
shl
ret
mov
dec
jecxz
retf
xor
int3
pop
popf
xor
dec
adc
fwait
movs
ins
sub
dec
xchg
pop
pop
push
loopne
in
add
xchg
or
jae
xchg
xlat
out
aas
xchg
cmc
xchg
(bad)
shl
xor
movs
mov
mov
lahf
xor
or
int
in
sub
sub
mov
test
cs
pop
je
jbe
call
jno
xor
test
ja
sti
or
daa
sub
push
retf
jl
loop
out
es
(bad)
push
xor
inc
jne
add
ror
out
dec
cld
stc
ror
push
stos
jl
dec
adc
pop
and
ins
sub
sub
mov
retf
xchg
ror
out
push
jg
ja
cli
out
push
push
fwait
mov
xor
lock
cwde
push
or
imul
cmp
dec
mov
mov
add
inc
mov
sbb
add
sub
scas
push
(bad)
mov
test
sbb
call
(bad)
out
inc
push
mov
js
cmp
pop
dec
or
inc
sbb
xchg
inc
mov
xchg
je
ja
lods
sub
mov
rol
mov
cmp
add
lea
int
shl
xor
scas
pop
pop
aad
mov
mov
mov
lods
pop
jl
inc
int3
cmp
je
cmp
pusha
cli
hlt
inc
outs
xchg
movs
sbb
mov
out
call
mov
test
add
dec
mov
cld
xchg
cmps
jmp
mov
sub
lahf
push
shl
sbb
lods
(bad)
add
in
add
je
xor
test
jle
fldpi
mov
loope
add
sub
inc
add
add
push
inc
call
cs
sub
dec
shl
test
retf
int3
sar
xchg
dec
adc
and
or
xor
dec
push
jns
pop
mov
inc
dec
rcl
cmp
shl
outs
lea
adc
or
jecxz
movs
sub
cwde
inc
mov
mov
mov
or
aad
les
mov
sub
es
lea
popf
mov
push
jmp
jg
xchg
out
ins
in
mov
adc
nop
clc
or
in
enter
and
call
jns
rcl
(bad)
sbb
mov
dec
jmp
stos
cs
cmps
xchg
ss
retf
(bad)
push
sar
int
or
mov
sti
push
out
mov
std
(bad)
popf
pop
jle
rol
fist
test
mov
daa
and
retf
pop
fwait
mov
fimul
repnz
cmp
cmp
mov
loopne
jmp
mov
cmp
loope
cmp
out
neg
xchg
or
daa
mov
lock
dec
sbb
leave
les
fdiv
mov
mov
jmp
inc
xor
dec
pusha
fadd
out
cmp
shr
sub
lods
xchg
mov
and
push
dec
or
xchg
or
cmps
sub
sub
dec
lods
mov
mov
es
xlat
mov
ret
pusha
inc
in
and
xor
or
fld
inc
dec
push
out
stos
xor
sbb
dec
neg
retf
inc
xor
pop
mov
mov
pop
ja
inc
out
or
scas
or
or
movs
jge
mov
iret
loop
cmp
inc
mov
aas
xchg
stc
jno
call
mov
pop
mov
adc
cmp
retf
(bad)
pop
jp
(bad)
pop
jne
lock
xor
jo
dec
mov
pop
movs
adc
xor
dec
dec
fadd
mov
fidiv
add
push
sbb
jmp
pusha
add
mov
das
sub
lock
dec
jne
mov
scas
(bad)
pop
rcl
mov
push
js
cmp
or
mov
fwait
cmp
test
arpl
mov
lods
sti
int
aas
mov
in
out
push
mov
mov
es
mov
mov
push
xchg
push
pop
jecxz
cmp
jmp
mov
cmp
aas
pop
pop
mov
test
sbb
add
or
mov
int
dec
(bad)
ja
pop
and
cmp
fwait
shl
aaa
popf
mov
fs
dec
sub
jae
mov
jno
or
(bad)
mov
mov
pop
push
push
dec
fimul
mov
(bad)
inc
xchg
ja
mov
mov
lods
(bad)
mov
jne
outs
xor
push
and
push
(bad)
xchg
pop
dec
dec
aas
in
xchg
and
or
push
and
add
mov
cdq
mov
mov
ja
lahf
(bad)
xchg
cmps
mov
push
or
adc
jno
test
cmp
(bad)
jae
xor
or
fcom
stos
inc
popf
(bad)
jmp
mov
retf
and
cmps
imul
or
mov
jo
add
jnp
lds
test
xor
mov
inc
xor
jmp
push
and
ficom
pop
ret
pushf
and
rol
adc
cmp
adc
jnp
repnz
mov
adc
mov
pop
push
movs
jo
sub
dec
push
mov
xchg
or
jp
inc
mov
xchg
add
mov
xor
cdq
cwde
fld
leave
adc
mov
xchg
cmovs
scas
mov
in
daa
in
mov
leave
jp
jno
jb
jmp
jmp
js
mov
out
stc
and
xchg
ret
ja
fisubr
or
mov
inc
lss
popf
sbb
jecxz
sbb
pop
aas
and
adc
push
mov
mov
add
dec
push
ins
cmp
or
pushf
and
mov
and
nop/reserved
push
pop
call
sub
daa
dec
popf
push
popf
movs
addr16
maxps
mov
dec
cs
cmp
push
and
inc
mov
and
test
pop
repz
ins
adc
xor
leave
cmp
into
mov
xchg
retf
add
outs
add
pop
lods
jbe
jb
jbe
and
inc
push
inc
mov
rol
cmps
mov
fsub
sbb
nop
sbb
shr
push
inc
lock
and
sar
dec
test
jbe
pushf
rcr
ror
pop
std
cdq
retf
sub
cli
mov
popa
pop
mov
xor
or
(bad)
sub
sub
dec
out
or
in
mov
(bad)
cld
aad
mov
push
pop
push
push
and
int
out
retf
pop
sub
dec
ja
popa
inc
clc
int3
push
xchg
jno
fdivr
(bad)
outs
inc
gs
and
sbb
ins
sbb
stos
mov
fld
int
das
aaa
mov
mov
xlat
shl
push
je
pop
jne
mov
addr16
adc
stos
and
inc
(bad)
add
or
and
into
jns
xchg
or
sub
jge
mov
cs
(bad)
jg
pushf
xchg
call
sar
mov
sbb
call
sub
jecxz
(bad)
xchg
or
popa
cmp
daa
out
clc
and
ins
sub
ss
clc
(bad)
daa
test
pushf
mov
into
cmp
mov
(bad)
mov
inc
sar
fild
fwait
push
icebp
mov
xor
fs
mov
cs
aad
mov
addr16
shl
dec
loopne
out
mov
loope
movs
mov
xor
xor
sbb
cmp
jnp
fdiv
popf
fdiv
sti
ror
jecxz
push
mov
imul
ficomp
cli
jle
sbb
pop
inc
push
rcl
enter
in
rcl
xchg
sub
and
or
movs
mov
ficomp
push
add
jg
ins
and
cmp
mov
(bad)
leave
xor
neg
aas
clc
mov
xor
cmp
mov
mov
jno
dec
into
xor
jle
or
stos
addr16
outs
enter
inc
dec
inc
xor
mov
les
pop
and
pop
rcr
idiv
jne
outs
jne
cmps
sub
jno
clc
aam
dec
int3
aam
imul
cs
push
rcl
xor
jmp
mov
cmp
inc
(bad)
mov
jae
test
xor
ss
hlt
cmp
or
fistp
clc
cmp
sub
xchg
mov
xchg
es
es
mov
sbb
not
pop
ins
stos
dec
mov
xchg
mov
dec
pop
lahf
outs
jl
ins
call
inc
scas
cld
test
(bad)
call
fwait
xor
jne
mov
sbb
ins
sbb
and
pusha
ins
enter
inc
ret
inc
fidiv
pushf
movs
sahf
call
or
mov
shl
leave
mov
mov
imul
sub
push
ins
sbb
inc
mov
cs
push
cmp
(bad)
and
push
jg
sbb
xchg
add
loope
std
mov
imul
mov
add
mov
outs
addr16
sbb
and
fwait
outs
or
mov
adc
test
inc
mov
in
adc
mov
test
cmps
xchg
das
scas
(bad)
xor
call
sub
shl
push
retf
lds
jo
fs
es
mov
movs
add
mov
mov
xor
jb
or
icebp
cmc
sti
enter
retf
sar
out
test
imul
mov
jne
push
fstp
pushf
test
cwde
or
pusha
lea
loope
rcr
add
jle
mov
clc
in
(bad)
or
cdq
sub
push
orps
ds
shl
push
in
inc
cmp
sahf
inc
mov
ret
in
xchg
mov
shl
mov
aam
dec
inc
fcom
mov
lods
xor
fcom
retfw
aam
out
test
xor
push
loopne
test
jnp
cli
loop
outs
push
jmp
adc
pop
je
iret
pop
lock
add
clc
and
mov
sub
(bad)
jmp
imul
pop
push
fwait
inc
push
pop
cs
pop
neg
pop
add
inc
cmp
rol
gs
adc
leave
cmp
fwait
cmp
int3
into
imul
inc
or
out
or
xchg
mov
js
cmp
movs
out
fdiv
cmc
cmp
sti
movs
sub
sub
imul
xor
cwde
adc
je
bound
pop
loop
or
gs
adc
jns
or
jmp
sub
les
loope
and
push
mov
jbe
ffree
ret
jo
pop
push
ins
cli
inc
and
mov
seta
clc
mov
pop
mov
jg
and
pusha
inc
push
push
add
ret
cdq
or
imul
add
ss
enter
lds
out
stos
rcr
int
jo
lea
push
loope
adc
lods
adc
mov
xor
cli
out
xchg
test
xor
xchg
repz
repnz
add
xor
mov
pop
xor
inc
repnz
jle
push
fucomip
jnp
out
repz
rol
xchg
int3
sub
fadd
js
adc
aam
inc
xchg
sub
ds
jae
in
pop
jo
pop
xchg
and
enter
mov
cmp
in
jle
stos
aad
mov
push
lahf
test
mov
std
push
mov
adc
fist
sbb
mov
xor
mov
loope
and
ins
sbb
pop
je
cli
fcomp
fld
mov
ja
sub
inc
test
imul
mul
sbb
loop
xor
aas
xor
cmc
sub
add
mov
std
push
mov
mov
repz
(bad)
stc
jns
pop
imul
cld
sub
adc
xor
mov
pop
movs
xor
gs
ret
pushf
jmp
mov
mov
xlat
mov
(bad)
cli
and
int3
aad
push
nop
mov
jmp
sti
push
xor
je
jl
int3
int
ret
adc
aas
scas
addr16
cmp
ret
hlt
pusha
bound
push
mov
jnp
enter
sar
retf
int
retf
int
pushf
(bad)
pop
inc
mov
(bad)
xchg
das
sbb
mov
dec
mov
inc
pop
clc
push
inc
add
jmp
inc
popf
xchg
ret
add
push
push
movs
inc
adc
push
test
sahf
push
push
inc
test
dec
movs
sbb
mov
es
out
inc
je
mov
mov
add
mov
mov
mov
sti
mov
(bad)
mov
add
fs
stos
and
out
call
xchg
pop
jb
cwde
cmpxchg
arpl
outs
aaa
cmp
add
addr16
adc
stos
loope
cmp
or
out
hlt
add
inc
mov
mov
sub
loopne
pop
sar
out
cmps
jae
aad
cdq
sbb
out
and
sub
pop
repz
popa
(bad)
idiv
cmc
stos
scas
fsub
push
dec
daa
jb
and
add
cli
inc
retf
stos
repz
dec
test
xlat
cwde
inc
xchg
pop
iret
cmp
or
and
xchg
sbb
sahf
push
mov
shr
stc
hlt
test
push
mov
mov
push
jns
jmp
out
pop
mov
adc
lds
mov
imul
test
lds
hlt
les
in
xor
je
mov
cli
cs
jle
mov
call
lahf
pop
adc
xchg
scas
inc
cmp
xor
jp
movs
cmp
sbb
push
adc
xchg
adc
out
in
push
or
stos
hlt
(bad)
pop
mov
jge
xor
imul
adc
push
pop
outs
jmp
or
and
retf
xchg
lea
imul
cwde
pop
jge
enter
mov
mov
mov
lods
icebp
and
aam
push
xchg
or
clc
jg
ins
pop
outs
or
push
xchg
sti
xor
and
push
fcmovu
daa
daa
mov
xchg
test
pop
or
mov
shl
xlat
dec
and
loopne
push
inc
movs
aam
dec
and
xchg
and
outs
dec
jmp
je
dec
out
or
jns
push
loope
dec
sbb
mov
dec
enter
xor
cmp
out
lock
sti
push
sar
jecxz
sahf
mov
clc
iret
sbb
aad
fs
sahf
dec
jns
jp
mov
cmp
cmp
rcr
fsubr
mov
add
aam
and
cmp
shl
xchg
lahf
or
call
jg
xor
mov
test
cli
gs
enter
jno
imul
hlt
cli
or
inc
and
pushf
mov
int
dec
cs
clc
add
jns
mov
ret
push
fcmovne
xor
sub
adc
out
and
dec
cmc
ds
jb
dec
ja
push
mov
jecxz
data16
xor
and
xchg
mov
mov
push
xchg
aad
pop
rcl
nop
ins
cmp
push
(bad)
xchg
das
xor
call
fst
inc
addr16
jp
mov
push
or
movs
and
xor
sbb
add
loopne
mov
lahf
std
jmp
imul
and
test
or
add
test
dec
arpl
jmp
dec
ja
dec
movs
pushf
add
dec
loop
or
aaa
arpl
cmp
jg
call
xchg
sub
shr
jle
mov
cli
popf
sub
mov
jmp
out
js
pop
dec
push
test
push
sub
cmp
push
(bad)
lea
out
mov
jb
rcr
mov
stos
xor
dec
sub
div
add
out
lds
push
pop
xchg
retf
jae
mov
and
cmps
sahf
lds
push
xchg
inc
xchg
mov
mov
pop
push
mov
movs
adc
inc
fst
in
inc
xor
stos
dec
sahf
fwait
jmp
in
or
imul
pop
fs
xor
jmp
mov
sbb
cmp
mov
xor
mov
dec
retf
mov
add
sub
lahf
mov
mov
movs
sub
mov
pop
push
rcl
fisub
aad
int3
cmc
mov
sbb
adc
out
jno
adc
daa
and
sub
cwde
clc
or
jne
jns
jmp
mov
mov
lahf
popa
pop
and
out
sbb
cmps
jo
mov
leave
rcl
arpl
gs
leave
mov
jge
pop
mov
icebp
pop
mov
jbe
mov
aad
les
or
xchg
inc
sub
dec
or
fstp
gs
lea
sbb
loopne
add
ja
xchg
inc
dec
ret
into
mov
push
in
outs
pushf
popf
mov
and
jp
ja
xchg
aaa
xchg
dec
and
fs
outs
shl
dec
or
mov
push
shl
mov
popa
jge
adc
scas
daa
jle
sar
mov
inc
imul
mov
add
int3
cmc
movs
cmp
jbe
pop
xor
add
mov
mov
sub
sbb
scas
inc
mov
(bad)
sub
or
sub
mov
les
add
repnz
pop
inc
jge
mov
div
or
pop
xor
scas
sti
sar
stc
mov
repz
enter
mov
adc
sbb
shl
or
ins
and
ss
pop
cmp
or
mov
push
xor
rol
jns
jne
xchg
xchg
bound
pop
ds
mov
mov
(bad)
pop
popf
(bad)
cmp
sub
repnz
jg
mov
retf
test
popf
mov
push
repz
popf
fsub
and
push
jg
pop
inc
push
dec
adc
cwde
sbb
xor
mov
push
iret
pushf
shl
push
xor
mov
popf
in
jl
xchg
ficom
cmp
fisttp
aas
push
movs
adc
inc
mov
mov
gs
frstor
clc
push
nop
shl
push
(bad)
push
lods
dec
nop
mov
lea
mov
movs
aaa
push
mov
push
or
push
in
outs
cmp
dec
jp
lock
sub
add
call
mov
and
mul
rol
adc
mov
add
fwait
mov
push
lahf
mov
jbe
into
inc
push
add
or
inc
add
inc
add
lea
fs
sub
add
test
xchg
adc
ins
cwde
push
das
int
xchg
mov
js
pop
call
sbb
jmp
fbld
add
pop
dec
retf
popa
or
stos
mov
pop
push
lods
and
rcr
rcr
in
addr16
mov
popa
iret
and
adc
xlat
push
mov
sub
inc
mov
stos
shl
and
push
add
lea
xor
pop
adc
(bad)
xchg
fwait
gs
cmc
xchg
arpl
jp
or
ss
hlt
loopne
xchg
idiv
adc
fwait
sub
xor
inc
xchg
jl
mov
adc
addr16
and
cmp
rcr
ins
or
jno
push
data16
jecxz
pop
addr16
cmp
lea
or
add
ret
mov
or
jnp
adc
in
or
mul
fisub
jg
jmp
fidiv
inc
push
sub
scas
sub
sub
ja
dec
fwait
xor
or
clc
cli
shr
jl
das
jmp
rcr
nop
repz
and
xlat
add
or
jl
mov
fistp
push
stos
retf
xor
test
sbb
sub
imul
push
inc
and
ins
cmp
pop
ss
(bad)
enter
inc
pmulhuw
stc
fisttp
and
mov
loop
(bad)
push
and
dec
pop
inc
xchg
loope
xchg
cmp
lock
push
inc
bound
mov
dec
sub
or
aad
jo
scas
jl
dec
dec
(bad)
fidivr
pop
aam
daa
pusha
cmp
xchg
aas
nop
sbb
cwde
outs
dec
push
lds
jb
fwait
mov
mov
comiss
fidivr
sahf
int3
(bad)
inc
out
test
call
mov
jae
mov
or
cmp
sub
les
movs
adc
adc
pop
xchg
stc
dec
adc
cdq
add
push
pushf
retf
iret
xchg
adc
(bad)
repz
jb
xchg
push
dec
imul
mov
pop
int3
das
push
sub
mov
(bad)
aad
sbb
xor
cld
loopne
ret
(bad)
shr
mov
nop
mov
push
popa
icebp
sar
es
adc
or
or
fistp
xchg
inc
mov
sbb
int
mov
stos
std
mov
ins
cmp
rcl
mov
cwde
enter
test
and
out
div
mov
gs
cmp
hlt
sbb
cwde
sub
inc
push
mov
rcr
mov
jae
(bad)
das
pop
nop
adc
dec
fstp
mov
xchg
popf
inc
mov
xchg
jo
and
call
mov
mov
xchg
xchg
mov
and
xor
mov
push
jl
mov
arpl
mov
lods
rcr
in
pop
fsub
daa
cmps
(bad)
mov
pop
leave
xchg
cdq
push
je
cmp
push
jae
adc
and
sbb
xchg
jecxz
fwait
in
mov
xor
jo
repnz
das
xor
mov
dec
sti
mov
adc
cmp
out
out
lods
dec
cli
pop
jecxz
sub
lods
test
cmp
jae
sbb
mov
inc
dec
adc
mov
cmp
lock
sub
cmps
pop
scas
and
fs
shl
xor
adc
sub
xor
ss
popa
xchg
aas
mov
jg
jnp
pop
ret
mov
pusha
fmul
pop
test
iret
ret
sub
push
mov
(bad)
jo
jl
in
icebp
jbe
jb
in
leave
xor
mov
gs
push
xchg
fbstp
pop
pop
pop
cmp
inc
and
ret
lock
inc
push
adc
gs
ficomp
int
dec
lea
cmp
add
mov
dec
sub
pop
in
adc
inc
ret
lods
dec
int
pop
jl
inc
jae
mov
jo
and
rcl
int3
mov
retf
xchg
adc
and
loopne
ins
iret
shl
nop
mov
(bad)
mov
jp
mov
jl
ret
into
jecxz
call
add
inc
or
scas
sbb
pop
bound
sub
cdq
jmp
pop
sbb
xor
and
mov
adc
sub
or
lds
(bad)
frndint
popfw
loope
push
and
adc
fucomip
sbb
xlat
pop
mov
mov
in
or
aad
int3
jne
call
dec
xor
or
lods
xor
sub
movs
xchg
test
nop
jp
pop
jnp
out
or
loop
xor
in
mov
cmp
add
dec
cs
pop
xor
push
fstp
lock
mov
pop
mov
(bad)
out
aam
jmp
xor
sub
outs
fs
pop
mov
pop
iret
dec
iret
or
pop
scas
arpl
movs
in
xchg
iret
cmps
mov
jne
jmp
jno
jmp
pop
lea
lds
leave
addr16
hlt
dec
test
retf
mov
mov
aad
mov
pop
aam
outs
clc
add
jo
bswap
lods
sbb
rol
in
test
and
cmp
rcr
(bad)
jno
pop
adc
cmp
outs
ins
sub
push
cmp
add
jp
call
jl
pusha
scas
xor
and
xor
mov
add
fwait
sbb
enter
aam
ror
inc
mov
aaa
inc
pop
into
xchg
es
or
jno
lock
adc
cmp
rcr
sub
gs
fwait
je
lds
and
sahf
and
repnz
repz
dec
inc
fcmovne
and
and
mov
push
mov
push
rcl
out
mov
mov
jle
sbb
xchg
mov
mov
push
mov
pushf
dec
into
sbb
inc
stc
xor
xor
xor
and
xor
sti
ror
out
dec
pop
xor
pushf
or
mov
popa
add
pushf
inc
cmp
into
inc
cmps
push
fwait
out
inc
loope
hlt
(bad)
dec
repnz
test
iret
add
call
jp
mov
cld
sar
sub
ror
pop
and
xchg
into
cs
repz
xchg
psubsb
mul
xchg
add
pop
inc
push
fsub
and
addr16
retf
test
stos
cli
out
movd
jmp
xchg
cmp
fisub
mov
sbb
jge
sar
in
fmul
dec
jnp
mov
pushf
in
add
bound
cld
imul
pushf
dec
add
dec
sub
into
mov
ret
lds
pop
(bad)
sbb
imul
lahf
mov
push
dec
mov
test
inc
mov
jns
cld
stos
xor
lahf
cmp
fs
imul
lock
or
and
pop
jb
sbb
aam
push
xchg
sub
sub
dec
mov
push
adc
push
leave
aaa
cmp
movs
shl
popf
lods
int3
or
add
cmps
add
sti
sbb
xchg
(bad)
mov
xchg
sub
fdivr
mov
sub
mov
sub
idiv
inc
xor
adc
nop
rol
or
test
cld
(bad)
mov
xchg
mov
mov
push
inc
aad
and
cwde
add
jg
les
mov
jge
mov
cmps
pop
out
int
sbb
and
hlt
sbb
sub
cmp
inc
repz
clc
(bad)
stc
sbb
rcr
mov
pop
cmc
push
jecxz
xchg
outs
or
sub
cdq
jg
std
inc
mov
fst
ja
aad
icebp
jmp
fs
jmp
push
push
xchg
push
test
sbb
dec
icebp
xchg
push
jo
aad
push
push
cmps
push
inc
rcl
jecxz
add
sbb
sbb
in
bound
jbe
mov
out
mov
gs
sbb
retf
xchg
inc
test
inc
cli
and
xchg
inc
ret
fimul
mov
mov
imul
jmp
fsub
or
scas
xlat
int
rcl
arpl
or
inc
aas
xchg
add
pop
fdiv
xchg
xchg
outs
add
sbb
mov
inc
adc
iret
add
dec
loope
in
or
hlt
retf
es
aad
imul
sti
aas
sar
xor
lea
outs
cmc
imul
mov
rol
mov
iret
fnstenv
xchg
(bad)
repnz
pop
sar
xor
push
in
rcl
adc
leave
xor
cmps
lods
nop
shl
inc
icebp
mov
sbb
xor
jbe
pop
mov
loope
and
dec
in
fcomip
xor
sbb
mov
and
add
adc
xor
sti
popa
push
cmp
leave
push
retf
test
daa
iret
pop
add
cli
mov
sbb
daa
rcl
or
mov
jne
fs
cmp
cmp
mov
mov
mov
popa
mov
dec
dec
je
aad
fsub
into
dec
in
int
in
inc
std
mov
fdiv
jo
sbb
mov
cmp
cmp
jns
stc
add
ja
xchg
xchg
ret
cmps
std
jb
lock
or
add
pop
ins
popf
leave
popf
repz
add
mov
loop
or
out
mov
pop
mov
ds
icebp
and
sub
cmps
push
mov
jnp
test
xchg
neg
mov
(bad)
ins
cld
out
idiv
jns
or
test
loopne
inc
js
or
pop
call
push
mov
es
ja
add
shl
mov
rcl
dec
(bad)
jne
xchg
bound
or
out
mov
sbb
mov
cs
xor
movs
ret
inc
retf
sub
adc
cmps
xchg
lds
outs
xchg
and
mul
inc
scas
sub
push
push
inc
fwait
sub
cwde
fnstenv
pop
inc
aaa
or
adc
adc
sahf
or
jnp
ins
sub
inc
xor
add
ins
adc
inc
inc
jno
addr16
or
stc
push
leave
les
dec
shl
movs
rol
dec
mov
not
push
pop
and
push
aad
and
jmp
mov
fdiv
push
jg
fs
mov
mov
inc
ss
fs
fld
jp
push
push
out
fdiv
inc
xchg
add
(bad)
jne
leave
adc
cs
aas
ins
push
push
mov
xor
(bad)
pop
clc
loop
in
repnz
sti
and
inc
repnz
push
inc
jae
inc
cmp
cs
pop
jle
ins
repnz
in
movs
and
push
dec
dec
(bad)
ins
adc
addr16
jmp
gs
and
sahf
xor
pop
(bad)
jne
xchg
mov
(bad)
mov
or
mov
(bad)
dec
lods
pop
mov
dec
bound
enter
call
or
sbb
enter
int3
out
stos
enter
fwait
sbb
(bad)
push
aas
jp
fiadd
stc
inc
cmc
movs
outs
mov
popa
js
add
out
stc
test
shr
out
mov
xchg
les
mov
xchg
aam
js
dec
ret
movs
in
or
cld
outs
add
cmps
retf
mov
gs
jl
icebp
aaa
pushw
jmp
mov
inc
cmp
sar
add
xor
jp
xchg
or
nop
mov
add
xor
push
push
sub
ffree
outs
adc
push
xor
inc
les
gs
cmps
lods
inc
cmp
or
cli
icebp
sahf
test
cli
jns
scas
pop
sub
ret
cmp
loop
retf
daa
loop
mov
xlat
mov
lea
sbb
fdiv
pop
sub
sub
xchg
fwait
lahf
or
mov
outs
ins
jle
out
xchg
jle
and
popf
fidivr
xor
sub
ins
sahf
(bad)
not
adc
mov
adc
in
xchg
int
mov
pop
xor
cs
imul
push
ror
and
sub
add
pop
push
mov
mov
mov
mov
mov
outs
and
push
mov
test
je
aaa
mov
scas
push
or
pop
mov
mov
std
les
push
movs
mov
jo
mov
out
movs
sbb
dec
mov
stos
and
aam
sbb
pop
test
push
hlt
pop
xor
addr16
dec
stos
jb
sahf
mov
jne
(bad)
xchg
pop
test
(bad)
mov
repz
ret
adc
test
push
hlt
jmp
pop
outs
or
push
push
jge
xchg
fadd
push
adc
fcomp
dec
push
out
mov
icebp
or
fcmove
and
dec
mov
mov
push
jmp
ret
sub
push
cmp
ja
iret
cmp
sti
es
sub
ins
gs
or
adc
mov
sbb
in
pushf
inc
jb
iret
stc
push
retf
push
push
fld
or
gs
(bad)
arpl
sbb
std
push
jg
ror
push
sub
loop
arpl
ds
xchg
mov
and
das
les
inc
push
mov
cmp
pop
adc
jl
jns
cmp
pop
add
(bad)
xchg
lock
dec
in
mov
mov
cli
jecxz
ss
or
xchg
or
int
enter
sar
add
mov
inc
sub
pop
xchg
addr16
dec
bound
and
mov
aam
cmp
loop
test
xchg
xor
in
pop
jp
adc
pop
pusha
cmp
icebp
daa
(bad)
ss
retf
and
inc
push
cmp
jmp
pop
jbe
xor
cmp
imul
out
and
retf
push
out
ds
pushf
adc
xchg
push
sbb
add
pop
movs
mov
stos
retf
test
mov
jp
push
out
add
sar
int
push
and
sub
and
mov
lods
test
clc
clc
and
jecxz
fidiv
icebp
add
mov
call
mov
cmp
inc
xchg
loopne
xor
adc
and
sub
push
mov
mov
mov
add
enter
cmp
dec
and
je
pop
mov
sbb
(bad)
fist
mov
in
mov
es
cld
(bad)
jnp
xchg
cmp
cmp
into
mov
mov
nop
leave
mov
nop
or
in
add
les
xchg
push
adc
inc
xor
pop
test
cld
push
retf
jnp
push
jle
std
xchg
test
std
pusha
mov
repz
pop
adc
test
push
repnz
mov
test
std
ins
sahf
int3
push
daa
shr
or
lock
sbb
cmp
cmp
mul
push
push
cmp
stc
sbb
mov
sbb
out
xor
mov
sub
data16
enter
or
repz
nop
movs
cmp
inc
jnp
jg
adc
mov
je
int3
mov
mov
iret
dec
xchg
add
imul
into
sub
(bad)
jp
std
xchg
fs
pop
jno
xchg
add
cmps
outs
out
cmps
mov
sub
das
int
push
test
shl
ficomp
addr16
jnp
pusha
test
sbb
jl
das
dec
dec
xor
push
mov
call
in
pop
mov
cmp
jb
push
test
and
(bad)
and
mov
or
mov
jg
lahf
mov
cli
test
das
xor
jg
jge
pop
sub
inc
daa
fld
imul
daa
jecxz
jnp
dec
push
pop
sbb
mov
rcr
ret
iret
jns
into
sbb
xchg
push
enter
adc
dec
pusha
mov
ins
sub
rcr
sbb
mov
cmp
mov
sub
nop
les
(bad)
dec
cmp
je
movs
cmps
dec
jb
outs
sub
cmps
data16
dec
xchg
add
xchg
scas
sbb
shl
fcomp
cmp
push
or
adc
mov
cwde
sbb
int
ficomp
adc
test
sti
mov
out
mov
adc
cmp
mov
pop
mov
out
jnp
and
and
push
dec
add
push
or
aad
loope
cmp
retf
mov
int
cli
clc
jns
mov
push
test
addr16
std
jmp
cmp
movs
dec
mov
ss
or
icebp
sbb
or
int3
sbb
fadd
inc
fwait
xchg
xchg
adc
ss
lods
and
push
jns
or
sub
adc
ret
add
scas
(bad)
cld
fadd
adc
xchg
or
sbb
jg
add
cmp
mov
(bad)
and
int
mov
push
arpl
adc
repnz
add
sti
ds
push
ror
sub
add
push
cdq
cld
vcvtpd2ps
and
stc
les
std
mov
(bad)
in
mov
adc
pushf
lock
mov
movs
rcr
cmp
ins
adc
xchg
(bad)
movs
inc
jae
(bad)
adc
(bad)
mov
outs
mov
and
imul
mov
neg
fwait
scas
xor
dec
jge
pop
ss
addr16
lea
cmps
(bad)
mov
cmc
or
inc
cmps
adc
sti
sub
jno
cmp
sar
loope
adc
sbb
(bad)
loopne
test
mov
and
add
retf
movs
hlt
es
mov
out
fiadd
xor
push
cmp
xor
in
sbb
(bad)
and
sub
aaa
out
aad
stos
leave
and
sahf
inc
cmp
pop
xchg
mov
push
pushf
xchg
aas
fisub
sub
xor
fld
jecxz
xor
mov
mov
push
fimul
in
rcl
addr16
mov
pop
mov
mov
push
cld
sub
scas
sub
jb
inc
lock
mov
xor
add
out
xchg
xchg
add
cmp
and
loopne
ds
adc
pop
int
pop
push
jbe
mov
xchg
dec
(bad)
xor
xor
sbb
or
into
sbb
mov
cs
nop
iret
cmp
inc
cdq
jp
pop
ins
ds
sbb
sub
mov
fwait
adc
jge
jp
sub
add
in
add
stos
cwde
or
mov
pop
in
ds
xchg
fild
jmp
cmc
loop
cli
in
lea
mov
(bad)
rol
push
arpl
jle
lock
and
sbb
xchg
arpl
add
jle
jae
jb
lds
pop
scas
jge
call
cli
pop
jp
push
sbb
mov
mov
pop
push
jb
push
xor
popa
in
add
cmc
add
mov
ds
out
loope
pop
int3
sub
ja
dec
lods
and
cmp
int3
adc
stos
or
xor
pop
retf
sahf
pusha
pop
addr16
es
pushf
mov
icebp
fwait
sub
add
icebp
cmps
test
mov
sbb
add
int3
fimul
mov
mov
clc
ficom
and
ret
push
fcom
fisttp
mov
mov
stos
adc
jle
xor
repnz
pop
rol
add
cwde
out
les
adc
mov
sbb
hlt
aas
inc
adc
pop
stos
pop
(bad)
(bad)
jmp
xchg
in
lods
sbb
out
pop
outs
call
adc
adc
data16
out
and
dec
mov
in
sub
enter
stos
pop
int3
pop
nop
inc
or
pop
rcl
rcl
loope
push
xor
or
push
push
je
pop
inc
ja
jmp
mov
sbb
call
pop
in
or
fwait
stos
mov
adc
ins
aaa
lods
aaa
inc
fidivr
sbb
les
pop
ins
rol
push
ret
mov
repnz
and
out
(bad)
outs
push
fs
popa
mov
stos
repnz
outs
cwde
adc
xchg
jb
jae
shl
dec
cmp
jmp
rol
dec
jle
cmps
scas
inc
mov
xchg
call
xor
(bad)
ins
das
in
stc
mov
mov
pop
mov
rol
aas
hlt
test
push
fiadd
inc
push
pop
popf
mov
mov
sub
daa
outs
aam
aam
dec
sbb
std
stc
aad
and
daa
jne
mov
adc
pushf
adc
int
push
(bad)
gs
sub
cmp
xor
pop
xlat
dec
xchg
inc
sub
aas
mov
cdq
pop
inc
retf
ficomp
cdq
sahf
sbb
aaa
mov
mov
enter
std
dec
cmp
xlat
xchg
jo
shr
imul
jl
fwait
xor
fadd
and
fcomp
pop
xor
loopne
fsub
xor
cmp
rcl
imul
jo
int3
inc
popa
aam
sbb
cmp
loop
ds
or
mov
fs
jmp
out
jge
jmp
pop
or
inc
fdivr
ins
mov
rol
pop
jnp
popf
cs
mov
xlat
add
mov
sub
add
inc
pop
stc
retf
cmps
sub
cdq
mov
mov
xchg
lock
mov
mov
push
mov
mov
or
xchg
xor
loop
and
jo
xchg
lods
or
(bad)
pop
mov
popa
pushf
fisubr
xchg
xor
rcr
mov
push
inc
test
push
sub
das
push
outs
ror
or
icebp
sbb
js
out
push
mov
push
xor
mov
les
adc
xchg
out
mov
pop
adc
fiadd
adc
jb
ret
cmp
fdiv
push
mov
jge
lahf
sbb
sub
mov
pop
cs
aad
movs
sti
ja
mov
pop
add
adc
inc
add
outs
loop
loope
xchg
and
and
mov
xor
inc
sub
mov
je
jg
or
dec
repnz
cmps
out
(bad)
jge
ins
shl
and
dec
or
or
lods
xchg
sar
mov
jp
jae
add
bound
cwde
inc
vandnpd
and
push
dec
jbe
scas
dec
push
xor
mul
pop
iret
xor
into
xchg
xor
(bad)
into
fdivrp
jge
lods
adc
and
and
movs
fs
mov
mov
push
push
jns
push
neg
and
adc
cmp
dec
jle
xchg
pop
imul
dec
push
push
sub
push
dec
imul
popa
rcl
mov
fld
div
fs
adc
sahf
sbb
and
out
leave
xlat
sbb
xor
or
fild
retf
pop
jecxz
jno
addr16
mov
scas
jb
ret
ret
fldcw
xlat
lods
pop
rol
fcom
loop
aad
push
mov
daa
xchg
add
jne
push
frstor
call
lahf
sub
xor
inc
ficom
add
xchg
sar
sar
stos
and
push
jns
mov
xor
sti
stos
pop
fdivr
inc
or
imul
mov
fimul
mov
jbe
adc
xor
mov
xchg
dec
pop
pusha
hlt
inc
add
cmp
nop
leave
mov
mov
or
push
out
jg
mov
adc
out
dec
push
test
dec
push
or
mov
imul
icebp
add
jp
test
lods
out
pop
jno
or
retf
sahf
(bad)
cmp
fisubr
cld
fnstcw
nop
dec
pusha
cmp
cli
loopne
xchg
not
mov
cmp
push
xchg
mov
push
cmp
lock
adc
and
push
pop
cli
ss
or
add
fs
jecxz
mov
or
out
mov
loope
(bad)
loop
ja
cmp
jg
das
ins
inc
sbb
and
pop
hlt
sar
rcl
sbb
shl
jns
sbb
sub
test
or
iret
cwde
pop
add
xchg
fsub
rcr
adc
std
lds
push
aam
jmp
int
das
add
data16
push
popa
in
or
xchg
inc
xchg
jecxz
popa
sbb
mov
int
mov
outs
mov
sbb
xchg
pop
(bad)
mov
sbb
mov
sbb
inc
outs
inc
loop
cmp
cmps
fisttp
jmp
rol
or
jmp
and
imul
pop
and
bound
xor
ins
mov
push
iret
inc
mov
inc
cs
test
push
clc
inc
adc
call
cmp
mov
out
in
push
xchg
movs
cdq
mov
popf
loope
(bad)
pop
xor
xor
jne
add
xor
fld
outs
xchg
test
inc
xchg
adc
jecxz
add
leave
shl
shl
shr
xor
mov
ja
ss
mov
je
pop
jno
mov
and
cmps
cmp
and
rcl
mov
or
jle
ds
adc
(bad)
add
mov
icebp
in
ficomp
jae
sub
das
xchg
inc
xor
hlt
dec
pop
xor
push
xchg
xchg
push
cmp
pushf
ins
jecxz
sbb
mov
push
fcmovnu
and
(bad)
sbb
call
inc
(bad)
sbb
sbb
call
les
repnz
jmp
lods
sub
(bad)
mov
jno
lds
cwde
sub
push
xchg
popf
and
lods
xor
out
cmp
retf
xchg
leave
mov
cmp
lock
fisttp
pop
jg
and
mov
popa
(bad)
sti
scas
fnstcw
mov
adc
inc
inc
mov
into
jg
sub
jecxz
push
stc
cwde
mov
pop
mov
clc
outs
inc
jge
test
sbb
lahf
adc
mov
ret
and
cmps
add
jmp
pop
fwait
mov
mov
aaa
leave
outs
lahf
sub
add
aad
repz
inc
movs
lds
mov
sbb
call
movs
rcr
pop
sub
cli
(bad)
in
(bad)
bound
adc
aad
mov
test
mov
jmp
mov
cmp
and
loopne
repnz
ret
jmp
cmp
(bad)
jmp
and
stos
sti
sbb
jae
fs
(bad)
retf
mov
fs
repnz
xchg
xchg
xor
push
(bad)
mov
js
adc
cmove
adc
ins
xor
mov
dec
dec
call
sbb
(bad)
push
leave
jecxz
adc
in
mov
cwde
daa
jle
push
sbb
out
test
dec
fst
mov
jns
ins
les
leave
push
pop
fistp
jecxz
lds
cmp
xor
or
cmp
dec
and
push
adc
sub
mov
iret
es
out
(bad)
pop
jnp
je
push
dec
aas
(bad)
push
aam
cmp
clc
sti
or
iret
cmps
push
mov
int
clc
test
cmp
cs
pop
mov
mov
js
add
cli
inc
ja
mov
inc
mov
retf
adc
xchg
sub
mov
das
adc
fs
cdq
aad
mov
pop
imul
inc
pop
cmp
pop
xor
adc
test
iret
cs
xor
fs
pop
xchg
pop
call
inc
test
adc
outs
das
das
cwde
pusha
dec
jmp
xlat
mov
mov
pusha
fucom
or
(bad)
stc
call
sbb
pop
cmc
cmp
jg
push
mov
jmp
pop
pop
dec
xchg
retf
movs
adc
icebp
int
das
pop
inc
pop
mov
(bad)
popf
js
aam
sub
add
mov
outs
call
jno
adc
(bad)
and
xchg
lds
das
inc
mov
sahf
cmp
(bad)
std
xlat
cli
ins
add
or
sar
stos
mov
test
mov
mov
ins
das
popf
mov
and
pop
data16
jmp
cvtps2pd
inc
mov
cwde
mov
sub
or
push
popf
jg
xchg
aam
xchg
sbb
xchg
cmps
jecxz
mov
xor
(bad)
pusha
and
imul
mov
xchg
inc
std
xor
loopne
ret
inc
and
ret
test
pop
shl
movs
outs
int3
popa
jmp
pop
push
xor
aad
jp
xchg
cmp
popf
(bad)
xchg
jg
sbb
add
call
mov
out
sub
push
add
cmp
adc
jno
rcr
stos
es
push
popf
cmps
addr16
ret
(bad)
shl
repnz
xchg
aam
jno
sub
dec
outs
mov
xchg
ja
std
xchg
movs
jecxz
and
jne
jp
dec
cld
cli
mov
pop
xor
clc
pop
fwait
cli
imul
pop
(bad)
out
add
push
test
pop
jmp
mov
add
fsub
lods
inc
pop
xchg
add
test
sar
mov
fist
rcr
sub
xor
mov
and
xchg
movs
push
std
fs
pushf
out
das
aam
adc
lods
and
lock
ret
pop
mov
push
add
mov
(bad)
addr16
push
or
pop
push
sbb
ret
xchg
or
push
(bad)
es
add
rcr
pop
(bad)
out
dec
pusha
pop
xchg
sbb
or
inc
pop
out
push
imul
mov
push
mov
jne
aas
ret
mov
leave
sub
mov
sub
aas
push
clc
(bad)
jmp
lds
sbb
ret
loop
addr16
ss
ret
call
cmp
push
xchg
jno
test
and
and
aas
jmp
mov
je
inc
das
xor
fninit
push
test
loope
not
(bad)
xlat
ret
call
xchg
stc
or
aas
and
cld
xchg
xchg
inc
es
pop
cdq
in
ins
xor
test
push
mov
push
mov
mov
xchg
(bad)
xor
add
pop
jl
ret
repz
scas
jae
push
pop
call
shr
xchg
inc
pop
inc
and
into
or
outs
inc
dec
inc
js
adc
xchg
xlat
adc
mov
into
or
cwde
je
es
outs
repz
std
xchg
or
inc
sahf
ret
lock
dec
cmps
inc
pop
jl
mov
or
cdq
adc
mov
sbb
int
enter
push
call
mov
jae
dec
shl
loop
pop
into
cmc
call
dec
jno
arpl
dec
pop
shl
inc
sbb
fcomp
dec
inc
inc
ss
push
pop
xor
jb
jg
add
dec
mov
cmp
test
push
in
ins
xchg
push
loopne
sti
iret
test
cmp
push
pusha
mov
hlt
cwde
jg
jmp
sub
(bad)
jl
dec
and
push
and
dec
xor
into
jmp
inc
push
push
and
cwde
ret
imul
inc
push
or
dec
mov
stos
jmp
push
scas
sti
xchg
xchg
sti
movs
(bad)
ja
fist
push
xlat
push
aad
pop
xchg
les
mov
and
jno
fnstenv
push
mov
ficomp
fld
leave
jo
mov
mov
fcmovnu
outs
dec
fs
fidiv
jo
stc
rcl
jbe
jmp
stc
aas
add
mov
mov
mov
mov
push
cwde
addr16
xor
jns
stos
xor
test
jne
xchg
hlt
inc
ss
sub
addr16
jmp
bound
and
imul
add
(bad)
js
ja
xchg
sub
xor
jae
out
jl
dec
sbb
inc
cmp
mov
sub
js
aas
xchg
je
xchg
mov
cmc
cmps
stos
pop
fldcw
dec
rcr
mov
push
sbb
ss
into
adc
xchg
mov
imul
retf
mov
push
gs
clc
pop
or
mov
push
jns
sub
lock
jmp
adc
fld
ror
addr16
or
inc
daa
movs
mov
dec
pop
sub
lock
jo
popf
push
and
sub
dec
movs
loope
data16
cmp
loop
and
enter
stos
repz
xor
outs
sbb
xchg
add
mov
sub
pusha
mov
cmp
push
test
xchg
popf
add
adc
scas
xor
mov
mov
cld
lods
jmp
loopne
inc
retf
dec
xor
cmp
mov
push
cmps
add
mov
mov
div
and
test
push
sub
fcom
shl
jp
or
out
pop
lea
xchg
jp
stc
std
mov
in
sbb
and
push
xchg
lahf
fsubr
and
or
(bad)
mov
daa
movs
ret
xor
adc
sub
sbb
dec
loop
or
in
mov
or
fsubr
rcr
(bad)
rol
inc
mul
inc
enter
push
(bad)
mov
xchg
jo
es
mov
cmp
stc
xchg
adc
std
pop
and
loope
gs
iret
pusha
and
jg
bound
xchg
fmulp
push
xchg
aas
sbb
cmp
inc
mov
push
adc
outs
sahf
sub
mov
mov
ins
or
sar
pop
cmp
sub
dec
sbb
loop
pop
sub
je
sti
jmp
fcom
push
lock
mov
gs
mov
ret
jg
or
mov
leave
fld
push
js
mov
lahf
(bad)
push
arpl
cmps
test
sub
inc
and
sub
das
jmp
pop
in
sbb
jne
mov
retf
dec
xor
push
icebp
dec
fst
in
jnp
cli
sti
mov
mov
jge
sub
iret
xchg
or
mov
ins
pop
push
movs
fdiv
xor
add
div
mov
out
pop
mov
push
in
test
jnp
mov
push
in
cld
mov
call
(bad)
loop
imul
push
jmp
jmp
mov
sub
sbb
cmp
sbb
mov
lea
ret
movs
mov
es
push
mov
sub
mov
bound
call
test
test
jl
mov
ins
inc
or
test
jecxz
std
scas
mov
mov
gs
mov
(bad)
loopne
mov
test
pop
std
call
push
xchg
jbe
cmps
adc
imul
nop
lods
out
jno
xor
xchg
mov
inc
(bad)
fsubr
leave
(bad)
mov
sub
hlt
sar
mov
jno
sahf
push
adc
loope
and
scas
sub
jmp
cmp
push
or
imul
aam
ja
in
loop
loopne
test
lods
mov
call
sub
pop
mov
jecxz
mov
aas
jnp
xor
cmp
imul
push
pusha
rcr
cvtdq2ps
enter
pop
jmp
xchg
mov
add
repz
dec
jae
repnz
sbb
mov
push
hlt
sbb
or
rcl
fimul
adc
fidivr
cmp
sub
push
push
(bad)
push
cmc
push
inc
pushf
or
sbb
pop
and
scas
cmp
mov
push
sar
popa
adc
cmps
adc
fimul
add
jb
jae
div
retf
adc
push
aam
ror
fmulp
xor
sub
mov
pop
add
pop
dec
adc
mov
push
leave
ret
js
addr16
aad
rcpps
push
fs
gs
inc
repz
out
bound
dec
rol
pop
adc
(bad)
mov
mov
xor
in
adc
(bad)
popf
fsubr
jmp
dec
pop
or
mov
sahf
sub
pop
xor
pop
push
xchg
out
and
add
jp
mov
test
sbb
mov
adc
aaa
dec
(bad)
adc
iret
int
movs
rol
jo
arpl
repz
loope
sub
rcl
pop
xlat
out
mov
(bad)
xor
mov
push
add
data16
xchg
stos
dec
neg
add
loopne
inc
test
sbb
sbb
inc
cmp
jp
mov
pushf
ficom
out
into
jne
mov
call
xchg
rcl
xchg
add
xchg
and
cmp
je
dec
and
and
adc
mov
cli
mov
popa
sub
shl
jne
dec
add
or
sbb
mov
push
jmp
inc
push
mov
stc
out
jb
dec
(bad)
mov
and
dec
nop
sbb
add
sub
cmp
les
and
sbb
sub
xchg
inc
cwde
xor
sbb
imul
in
push
or
sub
std
inc
fidivr
cld
fisttp
call
in
and
repnz
adc
in
add
jp
push
pop
popa
xor
fcomp
fist
iret
mov
jle
lods
pop
pminub
(bad)
sub
jmp
je
repz
cwde
shl
cmp
sub
push
movs
inc
and
cld
cmp
clc
cdq
ror
and
stos
pop
pop
mov
sub
push
pop
mov
xchg
inc
mov
add
cmps
stos
mov
add
xchg
sub
in
inc
push
sub
sbb
bound
jae
dec
ds
lahf
mov
pop
lds
rcr
xchg
inc
adc
cmp
xchg
imul
push
jo
and
jo
sbb
sbb
stc
inc
ficomp
and
pop
cmc
or
sub
pop
mov
aam
xchg
sbb
gs
xor
jle
sub
jno
push
pop
dec
scas
les
out
jbe
imul
out
dec
cmp
dec
fs
jb
lds
cmps
mov
or
shl
pushf
mov
xor
mov
inc
cmp
xor
aad
loopne
or
pusha
jns
aas
aas
hlt
push
pop
and
xor
sbb
mov
xchg
call
mov
(bad)
call
ror
adc
shl
cmp
inc
cs
xor
mov
neg
lea
push
in
mov
jb
cmp
cmp
add
in
(bad)
aad
xchg
dec
out
mov
push
xchg
xor
and
adc
push
ss
pop
sbb
add
mov
cli
cwde
scas
std
shl
push
pop
(bad)
imul
stos
mov
arpl
clc
cmp
pop
(bad)
mov
rol
movups
mov
lods
sbb
call
and
push
dec
loopne
in
sti
pop
out
push
lods
ins
hlt
int
outs
je
xchg
push
out
jl
aaa
in
hlt
out
or
sbb
test
les
mov
add
mov
call
jge
push
aaa
dec
mov
fbld
mov
cmps
xchg
mov
jg
pop
sub
fstp
cwde
dec
and
inc
jmp
mov
xchg
mov
daa
into
sub
and
dec
xchg
adc
xchg
ins
aad
pop
cs
pusha
cld
cmp
sbb
aam
xor
jecxz
xchg
xor
faddp
pop
sbb
adc
jle
pop
jecxz
stos
or
call
mov
dec
adc
add
lahf
es
aad
push
inc
cli
pushf
push
ret
ins
mov
lahf
shl
int
jg
or
mov
push
dec
test
in
add
and
ins
sbb
iret
xchg
cmp
mov
jmp
pop
xchg
xor
movs
xchg
bound
cdq
dec
or
ror
sub
test
mov
gs
mov
xor
fisubr
out
or
add
ffreep
loop
pop
fldenv
loope
adc
inc
ins
and
sbb
cmp
cmp
fcomp
ss
popf
xchg
cld
xchg
mov
sbb
mov
or
jl
mov
aam
imul
int
sub
lea
mov
cmp
shr
mov
jle
data16
xlat
or
ss
stc
xchg
stos
mov
xor
mov
mov
add
dec
in
scas
jg
mov
xchg
leave
loopne
sbb
cld
add
fistp
add
fld
leave
jne
les
repnz
into
push
lods
jne
retf
test
sbb
xchg
fs
les
test
icebp
ins
pop
jne
adc
jg
mov
xchg
sub
and
data16
cmp
adc
call
loopne
mov
das
and
cdq
das
fisub
(bad)
jg
dec
add
adc
ret
idiv
ficom
pop
or
stos
aas
cmps
lahf
pop
and
ret
and
lds
pop
mov
fidiv
dec
push
mov
imul
mov
scas
jge
fcmovne
out
push
mov
ins
inc
shl
sub
cmp
stc
xor
cmp
call
loope
sbb
xor
jno
imul
sti
xor
add
out
scas
and
mov
jnp
mov
and
(bad)
push
out
sub
jg
xchg
retf
cmp
cmp
call
and
test
xor
cmp
cmps
xchg
or
mov
adc
jae
test
sub
retf
stos
addr16
ds
jmp
aam
bound
xor
in
scas
cmps
lock
lahf
outs
movs
rol
enter
fcom
mov
mov
jmp
pusha
cdq
std
jl
push
sub
ret
enter
je
mov
or
xor
mov
sub
rcr
inc
loope
and
cld
push
mov
jmp
jb
sub
call
test
ret
mov
int
mov
cld
pop
push
ret
pop
fsub
inc
sbb
bound
push
daa
mov
mov
xchg
ror
retf
and
outs
sbb
in
inc
das
imul
pop
ror
test
adc
jo
pop
rol
mov
int3
fwait
clc
not
fwait
retf
(bad)
adc
scas
mov
add
shl
sub
mov
ror
xchg
mov
(bad)
mov
xchg
sbb
mov
les
or
in
dec
std
movs
jmp
sub
icebp
neg
sbb
push
call
xor
jecxz
jnp
fs
retf
movs
lock
test
mov
dec
adc
mov
lds
popf
mov
call
fwait
dec
inc
movs
mov
ror
mov
ds
sub
cmp
(bad)
retf
dec
dec
mov
mov
daa
and
lods
fs
(bad)
mov
pop
cld
idiv
or
push
xor
mov
lods
cmp
fistp
inc
retf
push
rcr
out
jnp
dec
out
mov
movs
push
cmp
xor
inc
jno
retf
ror
(bad)
lods
(bad)
push
add
xchg
gs
hlt
push
rcr
jecxz
cdq
cs
mov
dec
add
daa
add
out
add
jae
jp
push
xor
or
pop
jp
mov
jne
test
outs
repnz
loope
(bad)
pushf
ss
mov
xchg
push
jmp
test
pop
cmp
in
and
inc
call
add
icebp
jle
fwait
das
inc
clc
cdq
fisub
push
jno
inc
xor
inc
jne
ror
pop
test
js
into
add
sbb
fwait
mov
xor
daa
iret
and
outs
je
jp
sbb
mul
scas
push
or
inc
inc
fisttp
mov
and
push
jno
aaa
aam
inc
popa
and
mov
leave
ret
out
test
or
dec
jne
inc
pusha
out
test
adc
retf
or
retf
test
pop
fwait
dec
adc
mov
mov
lea
xchg
stos
call
lea
or
test
dec
leave
xchg
mov
out
xor
mov
inc
fadd
gs
sbb
movs
xor
sub
cmps
das
mov
xchg
addr16
xor
das
jp
jb
or
fidiv
xchg
ret
std
push
les
jns
pusha
adc
retf
ds
iret
scas
les
cmp
test
rol
pusha
cmp
xor
imul
add
mov
pop
(bad)
adc
fmul
adc
int3
test
and
and
or
cmp
jp
sbb
mov
sub
dec
xlat
leave
shl
push
push
mov
sahf
sbb
popf
in
inc
adc
ficomp
movs
nop
cwde
stos
dec
dec
imul
push
sbb
mov
cmp
mov
dec
ficom
outs
push
out
sub
popa
cmc
mov
das
faddp
push
jmp
push
enter
fdiv
in
loopne
sub
xchg
movs
jge
or
outs
sub
xor
gs
aaa
inc
add
dec
push
or
pop
icebp
shl
aas
xchg
pop
sahf
mov
rcl
mov
mov
cwde
push
cmp
cmp
jbe
jnp
and
and
repnz
outs
outs
ret
aaa
inc
jae
ja
pop
jg
jb
cmps
fiadd
mov
retf
retf
add
mov
faddp
fcom
ficomp
call
cmp
(bad)
mov
jmp
xchg
xchg
fdiv
test
scas
in
mov
mov
leave
addr16
scas
scas
add
and
pop
pop
(bad)
fs
push
mov
xchg
xchg
fstp
shl
shl
mov
or
ret
bound
in
call
add
popf
and
jmp
imul
jecxz
in
jae
dec
pop
(bad)
pop
dec
popa
dec
xor
shl
lods
scas
dec
or
pop
cmp
addr16
std
jnp
inc
jg
push
mov
fld
in
cmp
fdiv
xor
mov
xor
cmps
mov
adc
inc
or
lahf
cmp
sbb
(bad)
not
dec
fdivr
cmc
mov
cs
jg
mov
or
push
inc
mov
stc
pushf
push
push
data16
push
rcl
xor
jns
add
stos
add
les
popf
sti
and
iret
imul
mov
les
and
imul
mov
aas
fidiv
movs
mov
mov
push
push
ficomp
(bad)
push
pop
inc
in
push
jno
xchg
stc
pop
ficom
(bad)
mov
outs
push
sub
addr16
mov
inc
in
adc
into
gs
cli
adc
xchg
adc
jmp
inc
cld
imul
iret
in
pop
sar
inc
dec
inc
shr
xchg
ror
fidiv
xor
jmp
test
jnp
pop
mov
fs
addr16
sbb
enter
add
test
aam
add
pop
jle
ror
je
loopne
sub
add
icebp
mov
test
cmp
or
es
out
test
(bad)
mov
ja
pop
pop
inc
push
addr16
das
mov
adc
mov
bound
cmp
mov
and
mov
ins
fstp
pop
movs
aaa
out
sub
mov
cmp
push
mul
popf
mov
mov
(bad)
push
jmp
push
vminpd
or
or
and
and
not
sub
add
cmp
mov
into
fwait
sub
cld
add
adc
mov
aaa
(bad)
repz
xor
(bad)
cli
jbe
inc
cmps
pop
adc
mov
cwde
push
out
in
movs
xchg
popw
dec
pop
mov
jle
push
arpl
cmp
rol
inc
cmp
sti
push
std
nop
dec
dec
adc
movs
out
jbe
lds
pop
pop
imul
or
jae
out
push
xchg
xor
cmp
lods
jge
iret
fcmovb
ret
xor
jae
sbb
jp
sub
dec
bound
or
or
in
shr
push
dec
or
dec
test
out
fsubr
movs
xchg
inc
js
mov
or
aaa
loop
imul
add
adc
sbb
dec
xor
pop
jnp
int
push
out
sbb
inc
dec
add
fcmovne
dec
inc
(bad)
jmp
add
repz
xor
cwde
mov
mov
call
in
dec
dec
or
mov
mov
in
sbb
call
cmp
ficomp
nop
xchg
out
adc
dec
xchg
sbb
ins
addr16
mov
sub
sbb
inc
(bad)
sbb
dec
imul
inc
imul
retf
xor
push
mov
cdq
mov
dec
jbe
rcl
pop
pop
bound
dec
mov
loop
scas
jb
and
fwait
mov
int
adc
and
call
add
mov
fs
pop
xchg
mov
aad
dec
loopne
nop
pop
jp
out
and
cmp
pop
sahf
(bad)
jmp
leave
movs
das
or
jle
mov
mov
scas
sub
dec
jmp
ds
loope
not
jns
and
dec
push
pop
scas
scas
leave
cmc
jle
pusha
or
loop
mov
pop
jbe
push
jns
ret
jno
loopne
mov
lahf
push
test
je
dec
cmp
aam
popa
pop
jg
mov
loop
stos
inc
fwait
aas
xchg
dec
or
mov
add
add
pop
pop
xor
cmc
outs
inc
mov
int
fsub
setg
loope
mov
call
cmp
lds
shr
sub
jnp
mov
(bad)
push
shl
add
push
add
mov
cmp
(bad)
fsubr
xchg
sbb
xchg
jl
or
sub
push
dec
inc
mov
daa
mov
aaa
stos
xor
(bad)
stos
retf
and
xor
mov
pusha
in
adc
xor
cmps
cmp
pop
lds
int
hlt
adc
and
mov
lock
int3
push
mov
pop
adc
fldenv
mov
mov
in
xchg
sbb
gs
dec
push
pop
push
and
mov
fnstcw
or
std
push
rol
bound
imul
cmp
lock
push
stos
lahf
inc
loop
outs
push
add
(bad)
push
lds
cmp
shr
fwait
mov
shl
test
sub
cmp
call
retf
mov
dec
cmp
aas
adc
shr
loope
and
(bad)
fst
xor
icebp
adc
in
pushf
pop
push
fst
cmp
jb
push
sbb
por
jl
adc
push
mov
mov
cli
mov
push
xlat
cmp
leave
outs
or
cmp
sbb
mov
sub
sub
loop
mov
adc
sar
je
call
or
cdq
(bad)
mov
test
mov
in
xlat
jae
xor
cli
push
cs
cmp
inc
pop
imul
or
jo
xchg
mov
(bad)
adc
dec
cmps
xchg
and
cdq
or
lahf
arpl
scas
lods
jbe
cs
add
mov
pop
sar
imul
pop
jns
add
cmp
push
shl
add
sub
shl
rcl
repz
xor
rcl
outs
pop
cmc
sbb
push
cs
mov
pop
lahf
cmp
rcl
stos
jp
sub
xchg
dec
sub
hlt
cmps
neg
cdq
cld
in
in
mov
and
fistp
sbb
mov
inc
sar
hlt
cmp
jns
mov
imul
pop
push
test
push
push
std
mov
cmp
jge
cmps
in
es
xchg
sbb
aad
xchg
fcomp
fisttp
pop
fwait
push
call
(bad)
dec
or
pushf
inc
add
mov
xlat
push
js
call
or
repnz
cld
jae
cmc
inc
mov
retf
dec
xchg
icebp
xor
pop
fsubr
or
inc
int
and
or
mov
push
jp
fidiv
inc
std
pop
sub
(bad)
mov
cmps
mov
inc
or
rcr
imul
xchg
(bad)
call
rcl
add
sub
xor
test
adc
(bad)
out
add
fisttp
mov
mov
retf
mov
cmp
imul
cld
imul
fnstenv
sub
scas
pop
dec
fdivr
mov
aam
mov
mov
fist
push
leave
or
std
sbb
ins
cmp
or
sar
sti
dec
xchg
cld
xor
and
lds
mov
and
aaa
pcmpeqd
sbb
xor
push
push
out
fild
pusha
and
inc
add
fisub
lock
ins
inc
xchg
out
xchg
sbb
gs
mov
and
xchg
test
push
in
call
add
das
cmp
fwait
int3
lock
sbb
loope
push
shl
mov
gs
mul
fneni(8087
sti
dec
xor
xor
mov
add
out
push
mov
stc
aaa
and
outs
mov
lahf
bound
mov
and
jmp
adc
into
fwait
mov
jne
jge
mov
xchg
inc
fnstcw
cmp
mov
(bad)
add
mov
ja
jns
or
lods
dec
inc
mov
push
mov
inc
out
dec
mov
movs
pop
int
jle
test
pushf
es
mov
xchg
xor
jno
xchg
inc
call
and
fadd
sub
inc
je
inc
stos
push
ror
dec
aad
js
iret
sub
enter
jge
jl
mov
std
inc
ins
xchg
lahf
repz
push
add
out
mov
dec
daa
aad
jl
jno
jecxz
outs
outs
in
push
bnd
mov
sbb
sub
lea
add
mov
ja
stos
stc
movs
lahf
(bad)
ins
push
push
lahf
es
jl
add
gs
mov
adc
and
jo
repz
ss
cld
xor
or
pop
adc
adc
mov
popa
repz
sub
inc
or
pop
popa
add
ja
mov
and
fiadd
cmp
fmul
shl
cmp
or
call
dec
(bad)
test
pop
pop
xor
imul
cmps
dec
int
imul
clc
push
lock
mov
push
mov
inc
cmp
(bad)
retf
cmp
jmp
mov
jle
and
fnstsw
mov
sar
push
out
enter
std
sahf
cmp
jmp
dec
les
jo
cwde
xor
xor
xor
das
pop
mov
repz
push
iret
sbb
adc
jno
xor
mov
movs
movs
fwait
pusha
jl
and
cs
clc
gs
scas
mov
push
rol
(bad)
call
outs
retf
aas
sar
popf
ret
or
add
adc
and
rcr
xor
xchg
cmp
and
mov
adc
fwait
push
sbb
lahf
or
sahf
jmp
aaa
sbb
sub
lods
(bad)
jge
cdq
mov
mov
sahf
push
rol
or
ins
lea
inc
or
mov
xchg
pushf
jmp
jo
jmp
dec
adc
popa
popa
cmp
sbb
mov
test
bsr
push
retf
inc
in
sub
dec
(bad)
neg
gs
mov
push
outs
arpl
out
jbe
sub
sahf
std
and
(bad)
jo
std
dec
mov
dec
adc
cld
xchg
and
jl
out
cmp
xchg
jl
shl
test
adc
pop
test
ja
aad
loopne
pop
push
repnz
pop
mov
nop
std
inc
jp
xchg
and
popa
aam
xor
mov
es
dec
add
out
fistp
or
jo
add
or
add
daa
cdq
fldcw
dec
sbb
mov
sbb
xlat
fucomip
movs
push
les
pop
into
add
mov
dec
pop
test
jmp
ins
aas
sbb
dec
jns
inc
inc
add
stc
mov
(bad)
(bad)
push
mov
dec
addr16
jmp
popf
or
lea
xchg
push
loopne
mov
xchg
addr16
popf
and
lock
mov
test
or
xchg
push
fcom
clc
sti
ret
pop
iret
call
loope
pslld
add
hlt
out
fwait
test
xchg
add
or
sbb
mov
or
pop
ja
sbb
out
sub
test
pop
es
jg
data16
mov
sub
pushf
sub
popf
sbb
inc
fcomp
fild
hlt
das
ds
lea
and
sti
enter
pop
out
jmp
arpl
add
nop
mov
mov
aaa
adc
cld
and
ret
fmul
or
sub
mov
cmp
pushf
dec
jp
inc
inc
int
imul
fmul
xor
stos
test
shl
add
cmp
icebp
dec
jns
pop
rep
js
bound
mov
sti
cmp
in
push
ins
lock
das
sahf
out
test
aas
push
rol
sbb
push
movs
mov
in
ret
out
test
mov
sub
push
mov
jmp
ret
(bad)
fld
(bad)
mov
imul
loope
mov
add
sub
addps
stos
lea
jle
into
ins
retf
sti
push
inc
push
jno
dec
dec
neg
push
sbb
mov
mov
iret
cmp
xchg
test
xor
repnz
(bad)
cmc
mov
pop
movsx
idiv
rol
cs
test
xchg
mov
or
mov
fistp
inc
cld
(bad)
dec
ret
movs
pop
pop
imul
jecxz
pop
cmp
xor
dec
xor
(bad)
mov
sub
inc
(bad)
xchg
(bad)
adc
rol
lahf
mov
xor
out
int
push
mov
je
ficom
int3
popf
les
add
jle
out
push
ds
les
sti
xor
(bad)
aas
xlat
nop
mov
add
pushf
aas
cmps
outs
lahf
sub
hlt
mov
pop
ins
lds
fsubr
or
cmp
push
scas
mov
mov
adc
mov
and
(bad)
(bad)
scas
fiadd
popf
sbb
out
xlat
push
fsubr
or
push
mov
fistp
les
(bad)
sti
and
mov
jge
cmp
inc
xchg
ficom
pop
mov
out
jae
adc
adc
fwait
sbb
(bad)
sub
sub
mov
mov
pop
sti
xchg
and
mov
fs
push
dec
ret
pushf
shl
(bad)
in
push
mov
dec
inc
add
outs
call
pop
cwde
pusha
cmp
idiv
(bad)
pop
leave
xchg
or
ins
mov
fsubr
lahf
shr
js
xchg
xchg
inc
sahf
unpckhps
lock
lods
jge
sbb
dec
xchg
jle
xchg
jae
bound
push
cs
out
pop
lods
sbb
push
cmp
fsub
xlat
xor
mov
dec
push
and
dec
fisub
test
xchg
xchg
sbb
shl
jo
cmp
cdq
xchg
and
dec
push
(bad)
jp
stos
fdiv
sti
push
(bad)
leave
scas
call
push
inc
jnp
loope
movs
xchg
xchg
pop
enter
adc
mov
(bad)
fnstcw
movs
dec
xor
mov
adc
inc
inc
aam
(bad)
jl
inc
(bad)
sub
out
dec
fadd
sub
js
pop
lods
push
call
or
xor
pop
sub
cli
or
pop
out
scas
pop
mov
(bad)
sub
shr
sbb
jnp
push
cwde
fcmovnb
test
and
or
inc
or
ins
(bad)
in
sub
jmp
push
add
push
sub
or
cmp
out
mov
inc
push
xchg
sbb
inc
(bad)
in
dec
bound
loop
mov
mov
cwde
pop
inc
outs
sub
xchg
jb
jp
xchg
sbb
mov
aas
popa
shl
cmps
int
or
mov
addr16
repz
jmp
fldcw
inc
mov
add
mov
adc
lods
mov
mov
mov
pop
sub
pop
cli
in
jp
les
adc
retf
cmps
mov
or
imul
stc
add
(bad)
sahf
jge
paddb
leave
aam
cmp
fdivr
add
je
(bad)
sbb
mov
out
inc
add
inc
mov
pop
in
xor
inc
pop
fdiv
cmp
loop
jne
jl
sahf
test
mov
fisub
xor
loop
icebp
xor
add
adc
ins
loopne
fcmovnu
jns
popa
jae
scas
gs
test
jo
test
inc
pop
jmp
sub
aad
fdiv
pop
push
lock
nop
retf
mov
pop
scas
mov
leave
sbb
std
aad
not
or
nop
add
call
stc
pop
mov
mov
xchg
cmp
jmp
and
aam
jb
movs
cdq
scas
xchg
int
cdq
mov
ins
sbb
and
xchg
dec
sub
jno
(bad)
repnz
bound
jg
mov
ja
(bad)
xchg
pop
mov
mov
cmp
mov
xor
sbb
mov
sbb
pushf
mov
and
shl
out
fsub
lods
mov
dec
stos
mov
test
sbb
pop
and
arpl
in
push
sub
ins
(bad)
fbstp
inc
test
test
pop
push
scas
dec
sahf
push
cmps
add
or
gs
or
xchg
jmp
popf
adc
dec
fs
loope
xchg
pop
mov
adc
inc
in
and
into
(bad)
out
jg
mov
paddb
cld
rcl
jb
or
jno
aaa
pop
cmp
jns
aam
adc
fstp
jp
mov
in
pop
push
cmps
(bad)
pop
into
sbb
jg
idiv
and
mov
std
adc
lds
add
addr16
xchg
test
pop
bound
adc
fwait
and
fucom
mov
mov
mov
cdq
cld
jmp
aas
push
mov
iret
in
pushf
or
dec
mov
stos
shl
out
shl
(bad)
lea
jne
push
adc
ins
fld
ja
clc
ficomp
fcmovu
jp
push
pop
aaa
test
jp
(bad)
cmp
in
xchg
push
outs
ins
adc
pop
push
jne
sub
xchg
push
cmps
icebp
push
call
into
adc
sub
mov
(bad)
pop
fldenv
fwait
add
add
ds
cwde
fld
stc
xchg
xchg
ror
mov
xchg
adc
push
jmp
mov
jae
stos
push
jmp
mov
cmp
pushf
lea
cmp
stos
call
or
push
cmps
shl
and
rcl
imul
cmc
bound
add
push
dec
xor
inc
in
(bad)
fld
pushf
loop
cmp
popa
test
sbb
mov
cdq
sbb
outs
cs
pushf
ror
inc
xchg
cmp
loope
sbb
mov
ja
fild
xchg
sub
sub
push
jmp
dec
add
sbb
cmps
in
mov
add
pop
and
and
iret
iret
mov
and
shr
cs
adc
jp
cmps
sbb
sub
stos
push
stos
add
int3
dec
push
retf
xchg
xor
enter
(bad)
or
retf
jns
xchg
add
xchg
mov
loop
out
dec
dec
xchg
aas
loopne
push
rol
and
xchg
xor
mov
xchg
or
sbb
in
mov
jb
dec
ficomp
(bad)
xor
or
sbb
sahf
clc
aaa
fidivr
imul
mov
aam
das
scas
cdq
or
sub
mov
adc
jbe
push
scas
ins
ins
shl
jae
ficomp
(bad)
inc
sahf
mov
loop
sub
ficom
jecxz
mov
xor
sbb
mov
(bad)
hlt
jmp
xor
or
pop
js
mov
xchg
rcl
mov
inc
pop
inc
loop
ret
movs
call
add
jge
sbb
pusha
adc
pop
jmp
sub
mov
xchg
test
cli
mov
loop
adc
retf
sub
add
jmp
sbb
repz
sbb
cs
sub
daa
test
mov
movs
and
rcl
ss
dec
inc
das
gs
mov
mov
push
lea
xor
mov
fs
mov
dec
inc
fwait
push
test
cmp
arpl
mov
jecxz
sbb
sti
jl
push
fsubr
idiv
or
cs
fnsave
xchg
aam
add
mov
hlt
and
faddp
call
lds
sub
mov
outs
cld
int
mov
and
sahf
dec
stos
dec
mov
ret
inc
hlt
in
in
ret
cmps
mov
xchg
and
ins
scas
in
arpl
push
push
cmp
iret
and
mov
popa
lock
mov
sbb
ret
fld
rol
pop
popa
inc
adc
in
add
into
cmps
repnz
push
das
mov
pop
mov
adc
dec
xlat
sbb
(bad)
in
dec
pop
adc
mov
sub
mov
addr16
pusha
push
test
sbb
or
xor
enter
or
jmp
in
add
mov
mov
dec
fldenv
adc
jle
push
retf
outs
mov
gs
inc
call
gs
lea
(bad)
mov
pushf
fnstenv
lahf
ss
dec
jmp
pop
mov
ret
int
(bad)
hlt
push
fldenv
int
jne
sbb
aad
xchg
adc
push
(bad)
jns
repz
dec
push
das
cmp
dec
ja
pushf
data16
(bad)
lahf
xchg
in
imul
outs
mov
test
pop
loop
mov
dec
aas
sbb
and
sub
stmxcsr
mov
sar
out
xchg
bound
jnp
cmp
retf
add
cmps
in
pusha
in
jecxz
pop
bound
test
or
jno
out
es
std
popf
and
outs
push
ins
out
inc
sub
mov
fdivr
out
sub
aad
daa
sbb
or
icebp
mov
pop
jmp
stos
sahf
vpmacsswd
test
dec
push
pop
adc
xchg
cmps
mov
stos
loopne
push
mov
nop
and
mov
mov
call
cmp
jne
or
dec
clc
out
lds
icebp
xor
mov
push
xchg
jge
xchg
in
das
movs
inc
jbe
mov
in
pop
daa
subps
js
pop
enter
jnp
adc
dec
push
arpl
mov
enter
push
and
addr16
(bad)
bound
fld
pop
or
cmp
cmp
dec
mov
cmp
sbb
imul
mov
pop
mov
dec
test
mov
jmp
adc
and
jl
out
rcl
neg
out
inc
lods
sub
div
mov
(bad)
jno
out
add
call
addr16
ds
stos
xchg
sub
jl
jnp
aaa
arpl
push
add
pop
push
xor
inc
js
bound
scas
lds
mov
or
arpl
idiv
cmc
mul
jmp
mov
sub
lods
mov
xchg
push
mov
xchg
inc
(bad)
repnz
mov
(bad)
ror
shl
jecxz
and
arpl
lock
mov
lea
and
mov
mov
jl
mov
inc
jge
outs
je
test
cs
and
sub
(bad)
sub
enter
inc
bound
or
xlat
jno
stc
mov
imul
rcr
adc
sbb
push
mov
int3
inc
cmp
cld
jl
adc
jg
xchg
stos
inc
sbb
adc
sbb
in
xchg
ins
sub
xchg
and
mov
add
shr
imul
cmp
pop
xchg
les
jmp
out
bound
test
test
pop
js
div
adc
out
mov
ret
pop
clc
daa
fisub
mov
xchg
ins
dec
sub
xor
add
out
fnstsw
outs
loope
fisubr
ftst
sub
mov
xor
cmc
jmp
dec
pop
mov
out
or
add
mov
pop
xor
popa
mov
stos
lock
push
push
int3
lds
inc
jnp
scas
sbb
outs
mov
imul
xchg
xchg
push
stc
cli
cld
dec
xor
in
lds
mov
inc
xchg
inc
mov
cmc
aaa
daa
cs
jge
pop
sub
add
pushf
int3
adc
aaa
cwde
lods
les
int
(bad)
std
inc
mov
mov
addps
lock
mov
mov
ror
das
and
jo
xor
ss
dec
add
cmp
scas
fsubr
mov
sub
lods
pop
gs
sbb
mov
pop
sub
push
jmp
mov
outs
lods
mov
int
ret
pop
jecxz
mov
test
ds
cmp
adc
fldenv
mov
leave
out
(bad)
out
ret
ja
sti
ja
add
pop
xlat
and
out
xchg
cli
dec
add
and
xchg
or
adc
jbe
ja
push
push
push
idiv
cvtpi2ps
xchg
mov
cmp
out
mov
pop
and
imul
mov
jbe
xchg
sbb
outs
aas
and
jnp
jb
loopne
fdivr
daa
or
sbb
cmp
add
out
push
jnp
dec
xchg
mov
out
(bad)
mov
adc
out
pop
xchg
and
les
mov
jbe
mov
imul
sbb
sbb
mov
dec
icebp
or
je
cdq
cmc
cli
lock
jb
mov
cmp
jns
stc
mov
inc
push
jle
int
xchg
dec
ret
test
std
and
jb
int
inc
(bad)
and
sbb
adc
scas
out
repz
or
out
movs
idiv
ror
or
push
jge
jns
xchg
jmp
dec
inc
lock
(bad)
sub
xchg
xor
adc
ror
stc
pop
stos
rcl
add
test
jmp
movs
or
mov
ss
sbb
push
test
mov
mov
test
loopne
sub
repnz
mov
mov
ror
idiv
lods
push
jmp
test
push
retf
or
xchg
push
pop
stos
mov
fdivr
(bad)
jae
cmp
pop
add
arpl
jmp
stos
mov
sub
xor
int
sbb
xor
cmps
and
in
fadd
cmp
mov
xor
dec
addr16
mov
sbb
sbb
push
lds
fcmove
(bad)
adc
xor
pop
fchs
dec
adc
xor
cmp
test
pop
lds
rcl
shl
sub
addr16
in
inc
aaa
or
cmc
mov
lds
mov
mov
mov
je
mov
js
cmp
ud0
pop
stos
and
push
mov
aad
cli
cmp
stos
add
aam
iret
mov
loopne
lea
cmp
xor
mov
mov
add
dec
push
out
xor
push
push
cmps
(bad)
retf
xor
aam
inc
ror
rcr
xchg
cmps
(bad)
jmp
outs
push
jne
ror
outs
imul
sahf
and
push
icebp
mov
xor
xchg
ret
sub
sbb
cli
je
xchg
cwde
outs
in
mov
push
cmp
add
fmul
stos
fcmovnbe
(bad)
into
inc
int
leave
pop
inc
jo
add
dec
sub
int
je
ror
add
js
leave
inc
(bad)
push
call
jae
cmp
xchg
ins
jl
mov
test
and
inc
shl
push
dec
or
sbb
movs
call
loop
push
dec
retf
jecxz
jmp
movs
dec
ror
fwait
push
xchg
push
pop
and
and
add
(bad)
movs
push
cs
pop
pop
lods
jae
retf
mov
push
mov
cld
out
addr16
xchg
mov
rcr
pop
repz
clc
jmp
jmp
daa
mov
mov
or
retf
fwait
push
dec
adc
xlat
div
push
stos
in
sub
xchg
clc
fidiv
mov
scas
jae
jl
jle
mov
fadd
call
cwde
adc
popa
mov
aaa
lahf
scas
inc
aaa
xor
jg
push
jns
movs
dec
pop
lock
das
stc
rcl
mov
(bad)
sbb
aad
and
push
imul
mov
in
in
cdq
into
pop
mov
movs
fistp
push
mov
sub
push
leave
jno
push
mov
aam
hlt
retf
aam
push
in
adc
not
sub
inc
sub
jb
sub
adc
jns
and
lock
jns
sbb
mov
outs
mov
push
cmp
or
or
ds
inc
inc
xchg
std
jmp
fcmovne
and
mov
out
pop
daa
in
(bad)
fstp
add
push
xchg
retf
sbb
addr16
pop
push
leave
loopne
jnp
push
push
add
pushw
ins
ds
sub
push
and
dec
iret
xrelease
fstp
inc
mov
dec
fcmovnu
loop
and
inc
jecxz
inc
xchg
pusha
pop
adc
ss
(bad)
xor
sahf
sub
mov
dec
jmp
xchg
jne
imul
add
in
cld
inc
enter
xor
xchg
xor
adc
mov
std
aas
sbb
xchg
ds
mov
cdq
cmps
aam
dec
in
std
lahf
xor
sbb
jl
call
aas
fcom
inc
push
ja
jbe
mov
cs
or
jno
cmc
lds
inc
not
sub
outs
xor
sbb
int
adc
sbb
scas
popf
ins
daa
sub
movs
push
aas
add
scas
xchg
xchg
lods
push
arpl
dec
xor
xchg
in
pop
fs
xor
(bad)
sbb
fiadd
shl
fwait
jmp
jp
cmp
data16
loopne
add
cmc
inc
(bad)
adc
adc
repz
inc
adc
stos
cmps
mov
idiv
pop
push
mov
shl
or
fcomp
mov
int
cmp
inc
shr
cmp
push
cmp
(bad)
sbb
inc
mov
arpl
aaa
loope
and
dec
xor
dec
ds
sbb
sub
sbb
(bad)
jg
sub
push
or
bound
aaa
clc
imul
xchg
loop
sub
in
mov
jmp
pop
pop
ja
sub
test
adc
pop
ds
stos
call
packssdw
jmp
sub
xchg
(bad)
cmp
xor
sar
or
jmp
jge
sub
fnstenv
(bad)
jbe
mov
hlt
push
pushf
inc
rcr
mul
sbb
ror
cmp
sbb
fwait
int3
pop
mov
fmul
xor
fsub
fwait
push
add
sub
out
mov
xchg
xor
adc
in
iret
sub
xor
cmp
dec
or
pop
addr16
xor
xor
adc
js
push
cli
in
jecxz
mov
pop
rcl
jle
test
stos
lods
jno
cmp
ret
hlt
stos
push
pop
and
movs
push
add
or
sbb
outs
sar
shl
into
cmp
ficom
adc
xchg
sahf
aam
xchg
mov
and
xchg
push
hlt
pop
fsub
xor
cdq
(bad)
dec
ja
cmp
imul
cs
test
inc
mov
push
jns
xor
(bad)
aas
and
jo
mov
mov
or
sub
dec
imul
es
adc
retf
mov
dec
bound
arpl
xchg
mov
pop
ror
imul
cmp
or
repnz
mov
mov
std
and
lock
jbe
add
stos
adc
adc
add
out
sbb
mov
icebp
into
push
and
mov
(bad)
sbb
repnz
popa
dec
pusha
test
(bad)
lahf
sub
(bad)
mov
sbb
pop
imul
stc
sub
xchg
neg
js
je
(bad)
(bad)
cmp
inc
enter
clc
leave
stos
ins
lea
push
push
pop
movs
aas
inc
iret
cwde
pop
sub
sbb
mov
push
pop
into
iret
icebp
test
push
xchg
pop
jb
jp
add
mov
mov
push
inc
pusha
cmp
pop
rol
mov
daa
sbb
repz
(bad)
movs
push
dec
jne
cmp
mov
cld
rcl
push
scas
push
popa
inc
pop
xor
lods
aad
xchg
sub
scas
sbb
xchg
mov
jecxz
mov
inc
pop
jmp
in
or
in
xchg
in
adc
loopne
faddp
loopne
add
pushf
outs
test
add
sbb
ins
push
inc
mov
jmp
shl
lfs
sbb
call
pop
jbe
pop
les
jb
xchg
cmp
addr16
fs
xchg
and
test
inc
mov
jmp
xor
sbb
in
push
dec
mov
fidivr
xchg
cmp
fbld
test
ins
(bad)
and
and
inc
addr16
fadd
push
or
or
rcr
jne
movs
ss
add
jg
or
imul
(bad)
clc
inc
dec
add
xchg
movs
jg
cmp
dec
pop
sar
loope
das
icebp
loop
ret
scas
jmp
and
rcl
pop
mov
xchg
mov
add
pop
dec
jle
sub
dec
clc
xchg
and
or
ins
lds
jo
enter
sub
(bad)
ficom
pop
sbb
jae
sub
cld
jno
jno
mov
xor
push
xor
pop
test
es
test
dec
fild
dec
cmp
sub
inc
lds
sbb
(bad)
fs
cli
xchg
dec
sub
repz
fucomp
retf
xlat
je
aas
add
cmc
cmp
add
data16
in
fimul
test
test
jb
repz
adc
adc
outs
add
dec
sbb
jl
loop
fdiv
push
inc
jbe
pop
mov
inc
adc
pushf
cmp
fwait
popf
jb
inc
cmc
pop
pushf
sbb
or
test
and
in
pop
in
or
dec
jl
fldcw
subps
fidiv
call
cmp
(bad)
shl
jmp
sub
sub
push
inc
test
dec
cmp
mov
xor
inc
mov
das
pop
pop
inc
xor
nop
cli
push
mov
mov
ret
mov
mov
or
sub
ret
mov
mov
inc
retf
pop
out
cmp
xlat
sub
push
lods
pop
adc
ja
adc
lahf
jl
fiadd
xor
sub
inc
ins
xlat
cli
xor
add
(bad)
(bad)
call
push
xor
adc
adc
pop
mov
mov
outs
neg
or
cdq
dec
cmc
sahf
inc
ss
stc
push
and
movs
inc
leave
lahf
adc
pop
sbb
daa
call
adc
inc
aad
sub
cwde
adc
and
mov
aaa
je
or
push
mov
cmps
xchg
cmp
test
adc
out
dec
fidivr
shr
sub
ror
mov
retf
xchg
std
shl
test
das
cdq
jbe
xchg
mov
stos
xchg
or
and
ins
sub
adc
or
fist
and
(bad)
out
adc
push
mov
fbld
or
shl
xchg
and
push
gs
rcl
(bad)
retf
mov
lods
(bad)
mov
add
mov
jg
lock
inc
les
add
and
cmc
xchg
mov
push
dec
popf
jle
mov
sub
pop
test
push
and
xchg
sbb
inc
add
clc
or
ins
fs
gs
jbe
mov
clc
inc
jl
sub
sub
imul
lock
xchg
push
push
sbb
fst
(bad)
sub
push
leave
sbb
xor
cmp
pop
jecxz
ss
sbb
int
or
out
jae
inc
inc
jmp
into
imul
fst
pop
mov
dec
in
mov
push
pop
add
shr
or
push
sbb
fild
jmp
jmp
inc
fisub
popf
adc
jo
adc
mov
mov
xchg
outs
mov
into
dec
dec
adc
sbb
mov
sti
fimul
lahf
xor
dec
jmp
iret
(bad)
ror
cmp
imul
cmp
inc
pop
sbb
jle
(bad)
clc
or
and
movs
dec
xor
fwait
cmps
and
jbe
neg
jns
shl
xlat
lock
shl
mov
movs
pusha
dec
pusha
test
test
mov
stos
lea
fidivr
aad
jns
int
movs
mov
lock
and
pusha
mov
icebp
or
mov
pop
mov
adc
lods
neg
(bad)
xor
sti
inc
cmps
push
stc
jle
cmp
(bad)
fisub
mov
jg
test
cwde
add
mov
addr16
jnp
scas
pop
ror
int3
and
loopne
sbb
add
pushw
jmp
xor
in
mov
xor
cmp
mov
xor
in
retf
fld
test
mov
int
leave
in
(bad)
shl
jge
jne
push
std
leave
mov
cmps
(bad)
clc
jmp
rcr
jge
fmul
mul
jmp
into
or
movs
sbb
neg
dec
xchg
adc
adc
lods
or
ret
cli
pop
add
pop
add
inc
push
fyl2x
sbb
nop
imul
xlat
jo
sbb
cmp
cmps
push
dec
into
jmp
retf
mov
jmp
(bad)
push
pop
ror
or
pop
push
push
(bad)
push
leave
nop
retf
nop
std
dec
test
fiadd
stos
pop
loopne
scas
mov
in
rol
mov
cmps
imul
sub
adc
jo
dec
scas
mov
loope
mov
mul
xchg
xor
mov
call
and
lods
mov
mov
pop
fst
mov
retf
sub
inc
int3
ss
sbb
mov
lods
and
bound
cmp
mov
dec
ds
or
movs
fld
xchg
or
aam
adc
(bad)
inc
(bad)
imul
pushf
pop
mov
mov
adc
ret
or
int
xor
(bad)
out
popa
push
data16
xor
jnp
add
sbb
rcl
add
adc
push
(bad)
jnp
sbb
sub
popf
inc
(bad)
out
sbb
sahf
pop
and
add
mov
shrd
movs
push
xchg
xchg
mov
in
dec
call
cmp
in
dec
scas
mov
cmp
aam
push
stc
rcr
call
icebp
cmp
das
dec
out
std
sub
in
mov
cmp
pop
jmp
in
ins
add
ins
in
pop
daa
cmp
int3
push
or
js
jno
das
js
or
mov
sub
ds
call
mov
mov
lahf
fldl2e
inc
in
in
sub
test
jmp
jl
dec
test
retf
sbb
cld
les
cmp
cmp
pop
xor
hlt
cwde
inc
sbb
cmp
xor
sti
frstor
push
ret
push
dec
sbb
fcom
fsubr
arpl
push
jg
inc
repnz
ret
sbb
adc
sbb
pop
test
stc
lock
jl
(bad)
fidivr
sahf
rol
stos
loop
sbb
out
es
ss
je
cmp
xchg
ficomp
pop
stos
jmp
mov
jbe
call
sar
int
push
cmps
fild
(bad)
sbb
sar
mov
xor
outs
int3
or
out
mov
sbb
or
xor
sbb
or
fst
lahf
test
sub
dec
ror
call
jnp
neg
out
loop
cwde
mov
(bad)
jmp
mov
xchg
inc
dec
pop
call
loop
and
sub
pop
xor
pop
mov
pop
dec
xchg
(bad)
pop
adc
dec
adc
cmps
std
or
loopne
(bad)
mov
dec
xchg
lock
jo
inc
sub
xor
cmp
cli
inc
pop
test
cs
jnp
jns
imul
(bad)
mov
leave
lahf
adc
gs
pop
call
push
xlat
jbe
ins
inc
ins
sub
adc
or
xchg
es
out
int
inc
mov
jae
repnz
jno
rcl
pop
mov
call
xchg
sbb
push
jne
(bad)
cwde
mov
imul
and
xchg
pop
cmp
arpl
jg
pop
jmp
xchg
ja
lds
adc
push
mov
outs
and
dec
nop
push
adc
jnp
jp
or
jno
cmp
call
adc
and
call
push
dec
dec
jg
mov
data16
scas
and
(bad)
loopne
in
and
and
and
cmp
inc
xlat
cdq
and
jecxz
enter
or
aam
pop
add
xchg
repz
jge
mov
(bad)
test
test
xchg
mov
dec
push
mov
lock
pushf
clc
mov
xchg
fadd
cmp
add
aas
movs
ror
lods
xor
xchg
fsubr
sbb
dec
cmp
sub
or
pop
or
mov
(bad)
aas
jne
push
or
mov
daa
js
or
and
lea
call
shl
sub
push
jp
stos
xchg
scas
push
pusha
mov
jecxz
lods
jbe
jmp
punpckhbw
sub
push
sub
jne
mov
test
sub
je
inc
push
add
cmp
mov
cmp
js
add
gs
push
add
(bad)
fist
cmp
js
int3
dec
jge
sub
mov
dec
fwait
mov
outs
dec
push
jge
rol
add
icebp
cmp
loop
push
into
jle
jo
les
outs
pop
stos
jle
dec
sub
ds
cmp
call
or
xchg
pop
cmp
ss
mov
(bad)
in
js
bound
jbe
or
add
retf
inc
jb
aas
jg
inc
movs
mov
and
call
or
sub
cmps
mov
jb
retf
or
pop
adc
out
mov
jl
ja
xchg
and
inc
jle
scas
imul
push
mov
outs
iret
clc
mov
pop
aad
push
pop
ins
stos
test
push
adc
push
test
es
mov
or
fwait
dec
add
jg
push
mov
add
pusha
jne
mov
cld
in
fild
scas
sub
adc
bound
dec
xor
jne
ret
sbb
cmp
push
or
mov
ss
(bad)
(bad)
and
mov
repnz
cmps
inc
and
sub
pop
add
int3
mov
out
gs
in
loope
mov
mov
cdq
pop
add
push
or
or
enter
xor
jnp
(bad)
std
or
sar
mov
les
mov
pop
lods
cmc
jmp
hlt
sbb
inc
test
xor
and
jmp
mov
stos
neg
shr
stc
add
cmps
xchg
pusha
test
stc
dec
fild
jle
int
mov
into
push
add
std
(bad)
call
neg
mov
mov
dec
imul
adc
sahf
(bad)
test
push
test
jg
sub
adc
xchg
mov
fisttp
lods
mov
test
cwde
popa
and
adc
pop
sbb
(bad)
jecxz
cmps
xchg
loop
retf
aam
mov
mov
imul
push
ror
int
xchg
cld
fsubr
fdivr
mov
cli
fbld
lock
mov
xchg
jg
fwait
push
or
adc
addr16
push
xchg
fabs
xchg
xchg
xchg
sbb
or
aaa
or
adc
int
aaa
sbb
add
movs
mov
enter
gs
mov
into
dec
xor
xor
and
(bad)
mov
test
push
sbb
pop
sub
mov
popf
cwde
sahf
and
(bad)
dec
fistp
sub
mov
test
inc
cmp
mov
and
jbe
(bad)
mov
cmp
int3
mov
dec
and
inc
je
loope
loope
mov
test
xchg
pop
mov
ds
cmp
pop
(bad)
jo
sbb
jmp
aam
push
sbb
push
dec
mov
xor
bnd
cmps
mov
loopne
sbb
jns
fdiv
push
stc
mov
sbb
mov
jmp
xor
fs
imul
xchg
jbe
add
mov
cmps
or
pusha
imul
xchg
lods
add
pop
rol
arpl
xor
and
cmp
bound
xor
xlat
sbb
jae
fstp
pop
test
xchg
mov
sbb
pop
mov
jno
(bad)
mov
pop
inc
arpl
addr16
cmc
and
mov
call
pop
cmp
add
stos
lds
mov
dec
sbb
push
lods
test
xchg
shl
lahf
sub
inc
mov
aam
and
or
sahf
imul
test
sbb
mul
outs
sub
mov
dec
xchg
cmp
cmp
and
mov
adc
sahf
lods
int3
mov
retf
xchg
cmp
mov
aas
mov
in
sbb
icebp
sub
or
int
pop
je
xchg
(bad)
xchg
mov
test
adc
test
sti
mov
push
dec
and
jns
pop
jb
rcr
dec
xchg
pushf
test
jg
xor
push
in
cdq
adc
adc
pop
xor
popf
fucomi
xor
call
test
popa
dec
test
push
mov
cld
out
dec
stos
and
aaa
int3
jp
out
xchg
sbb
imul
mov
xchg
mov
ror
std
or
sbb
lds
inc
(bad)
and
push
int3
or
mov
cmps
dec
xchg
es
in
jle
jae
jae
or
je
addr16
jb
add
lds
push
sub
adc
sbb
or
sub
int3
and
add
mov
mov
inc
sbb
and
imul
inc
or
and
pop
scas
pop
jb
xchg
test
js
cmp
fisub
adc
pop
stos
add
sub
dec
scas
(bad)
cdq
(bad)
mov
icebp
aas
or
jne
retf
mov
bnd
pop
inc
imul
xchg
xor
cs
into
inc
and
in
cmp
pushf
sub
rcl
(bad)
daa
and
call
mov
sti
pop
repz
mov
hlt
adc
(bad)
ins
cmc
sbb
sub
gs
out
fnsave
call
arpl
adc
push
adc
add
imul
(bad)
test
xchg
dec
fist
dec
mov
or
pop
mov
or
sti
pop
mov
repz
enter
lds
in
jg
test
xor
les
cmc
mov
or
and
ds
dec
cmc
push
mov
pop
or
jg
(bad)
shl
(bad)
fisub
aad
rol
xor
cmp
out
mov
adc
in
adc
loop
lock
out
(bad)
test
addr16
sub
pop
or
das
jbe
push
fisttp
and
loope
mov
shl
retf
fwait
xchg
nop
mov
mov
popf
pop
popa
inc
jecxz
in
or
xor
lock
imul
jns
pop
call
sbb
shl
fwait
mov
or
aas
add
jmp
addr16
jo
sar
sub
mov
iret
and
adc
inc
bound
adc
jo
sub
stos
jnp
cld
out
pop
aas
add
xor
dec
ror
pop
and
fisttp
inc
mov
jnp
pushf
mov
mov
xchg
test
(bad)
and
adc
push
dec
pop
mov
rcl
jmp
push
jbe
sub
jo
(bad)
mov
div
mov
mov
sahf
movs
imul
adc
jb
lds
mov
es
(bad)
sbb
and
(bad)
stc
sub
loope
xchg
retf
sbb
adc
jo
jmp
jb
movs
rol
add
jp
je
mov
test
push
clc
inc
xchg
addr16
imul
mov
bound
pop
inc
leave
push
jecxz
mov
(bad)
jle
fiadd
in
cli
in
in
out
pop
mov
sbb
mov
sbb
or
aas
push
pop
pop
test
pop
mov
add
mov
mov
xchg
daa
mov
or
fmul
cmc
adc
pop
hlt
(bad)
sub
repz
push
sti
leave
or
or
jne
or
cmp
dec
inc
jns
mov
aaa
push
push
pop
cmp
ret
cwde
jge
mov
push
ja
cmc
fs
enter
mov
mov
cmp
test
add
sub
lds
aad
push
sbb
imul
adc
pop
ins
out
repz
test
fsub
adc
push
cs
mov
push
jmp
mov
movs
add
jae
loope
vmwrite
out
cmp
shr
movs
cmps
push
cmps
add
push
mov
(bad)
cdq
(bad)
push
sahf
sbb
jmp
js
mov
pop
fldenv
lock
std
xor
add
movs
mov
inc
aam
pop
push
push
jb
mov
nop
scas
push
sub
lods
fnsave
mov
inc
push
jnp
scas
arpl
push
not
dec
and
sub
scas
and
pop
aad
sti
test
inc
adc
mov
jns
lods
or
retf
retf
leave
cmc
adc
mov
out
out
pop
push
pop
inc
jmp
ins
sub
adc
add
pop
and
repz
clc
sti
(bad)
std
aam
shl
into
ja
lock
lock
pop
jmp
cmp
sti
jbe
xchg
rcl
popa
(bad)
xchg
not
out
sahf
dec
or
push
cmp
push
loop
xchg
or
lods
xchg
pop
leave
adc
mov
add
mov
push
mov
mov
add
push
and
inc
pusha
add
push
daa
fld
leave
ss
ror
movs
xchg
ret
sbb
data16
inc
sub
cwde
cli
mov
test
fidivr
(bad)
push
mov
les
cmp
pop
or
add
jae
xor
cld
xor
cmp
dec
xchg
repz
and
popf
scas
sub
gs
pop
mov
jge
mov
inc
adc
cmps
xor
out
mov
jl
(bad)
pusha
call
xor
add
pusha
xchg
outs
and
and
(bad)
pop
or
shr
loope
data16
jno
push
popa
popa
push
sti
stos
dec
repz
cs
xor
push
int3
fldenv
mov
xchg
jb
add
lock
stos
in
inc
sub
pop
(bad)
inc
inc
enter
mov
sub
out
sub
mov
mov
dec
add
xchg
rcl
addr16
mov
sub
dec
test
div
out
leave
or
lahf
pop
xchg
out
dec
in
in
inc
and
jo
jl
mov
out
fsubr
mov
xor
pop
adc
in
data16
mov
cmp
sbb
sar
dec
push
or
push
xchg
popf
imul
dec
xchg
xor
data16
ficom
cmc
fs
and
test
in
jmp
jae
push
leave
cmc
retf
mov
mov
sbb
or
jbe
pop
shl
(bad)
shl
jnp
lds
pushf
scas
minps
call
xor
adc
(bad)
adc
xor
add
retf
fdivr
loope
mov
(bad)
pop
pop
shl
fstp
pop
add
aaa
dec
inc
test
stos
imul
in
dec
(bad)
leave
cmp
popf
shr
push
cmp
cmp
mov
mov
adc
ja
and
sbb
scas
xchg
pop
cmp
inc
dec
push
ins
retf
inc
sbb
xchg
cmp
mov
mov
push
js
mov
ss
movs
push
sahf
in
out
adc
ds
push
mov
inc
mov
jle
inc
es
shl
jnp
or
dec
mov
xchg
aad
add
(bad)
out
sbb
pop
out
(bad)
xlat
(bad)
sti
push
xor
dec
daa
scas
lods
jo
test
mov
xor
lods
(bad)
gs
xlat
lahf
xor
shl
xchg
mov
mov
xchg
cmp
pop
add
test
sub
fsub
fistp
jne
iret
dec
or
mov
and
mov
pop
mov
xchg
repz
ds
call
call
jecxz
mov
int3
push
add
mov
repz
je
fsub
and
sbb
cmp
nop
xchg
aam
push
jb
pusha
mov
adc
popa
xor
dec
mov
(bad)
popf
(bad)
in
pop
je
or
gs
jmp
shr
jmp
sub
int
clc
and
pavgw
mov
xchg
and
add
inc
push
loope
xor
sub
dec
scas
xchg
(bad)
rcl
adc
mov
cmp
sti
stos
leave
mov
sahf
(bad)
or
mov
repz
out
loope
push
pop
fmul
dec
lods
sub
int3
es
and
mov
ret
outs
add
jle
push
inc
jl
icebp
inc
push
scas
in
lahf
cld
or
adc
clc
imul
les
pop
out
sbb
lods
jno
shr
pop
jno
call
or
mov
mov
mov
dec
mov
out
(bad)
mov
stc
cmp
mov
lock
mov
retf
test
repnz
mov
jle
sbb
xchg
retf
jp
pop
pop
add
cld
mov
cwde
jo
test
div
inc
xchg
cmp
cmps
mov
mov
out
cmp
movs
jae
push
sbb
push
dec
sbb
lds
push
data16
dec
inc
sbb
dec
mov
mov
str
mov
call
imul
push
stc
lods
mov
dec
out
jo
xchg
push
push
frstor
popf
js
inc
mov
rol
mov
out
lock
push
pop
fiadd
sbb
ja
push
xchg
pop
push
sbb
das
add
(bad)
sbb
sbb
std
pop
inc
popa
stc
ss
and
xlat
out
mov
movs
mov
pop
pop
scas
mov
imul
or
fcmovnb
call
xchg
stos
pop
adc
ret
cdq
shl
pushf
pop
fsubrp
lods
sub
jo
bound
stos
mov
dec
jb
dec
jno
data16
fadd
jp
sbb
in
pop
xchg
les
mov
loopne
sahf
push
mov
push
ins
lds
imul
call
das
repnz
xchg
std
jnp
int
mov
out
adc
cdq
arpl
aas
nop
dec
cdq
cmp
sub
xor
scas
jge
pop
(bad)
hlt
fst
cmp
or
lahf
fild
ror
mov
das
xlat
or
je
cs
test
imul
sbb
test
rcr
dec
jne
xchg
xor
das
mov
iret
test
cld
ret
inc
inc
cmps
cmp
pushf
push
test
test
xchg
repz
inc
out
cmp
jnp
inc
dec
jp
test
push
or
mov
call
stc
jmp
ret
mov
in
movs
fwait
in
jmp
pop
adc
cmp
jl
stc
dec
leave
sbb
dec
movs
ins
pop
mul
dec
test
outs
pop
mov
mov
mov
out
mov
mul
or
pop
jmp
add
loop
rcl
or
pop
lea
pop
push
sub
test
out
push
arpl
je
aad
test
push
sub
mov
inc
push
(bad)
(bad)
and
ds
fmul
mov
mov
repnz
(bad)
mov
aaa
cmp
mov
pop
adc
jns
mov
cmp
jb
sub
jbe
addr16
xchg
or
jmp
mov
in
jg
ss
stos
sti
adc
jns
bound
mov
add
pop
fdiv
push
mov
into
fist
es
xchg
push
aas
jne
repz
rcl
(bad)
out
xchg
sub
stos
and
cwde
sbb
outs
xor
pcmpeqw
scas
mov
jns
jle
inc
out
out
fldenv
ret
sub
pusha
lods
stos
push
push
outs
cmp
cs
pop
mov
fs
int
xor
cmp
xchg
xchg
cwde
add
pop
scas
rcl
loopne
cdq
lds
out
add
es
inc
adc
lock
fs
mov
aas
fist
out
lahf
adc
inc
in
jge
les
xor
stc
and
push
pop
imul
jle
(bad)
mov
xchg
out
repz
stos
dec
ss
fnstcw
mov
in
xchg
outs
data16
mov
mov
pop
or
stos
add
inc
aaa
or
push
sub
leave
pop
mov
dec
sbb
jmp
cmp
sbb
shl
cwde
xor
out
dec
stos
cmp
fmul
jle
(bad)
mov
cwde
out
fwait
in
bound
sahf
stos
mov
mov
(bad)
xchg
adc
pop
int3
pop
jmp
arpl
hlt
inc
popf
push
stc
mov
pop
mov
jb
in
lock
(bad)
iret
dec
adc
scas
push
hlt
push
or
jmp
xchg
out
xchg
jmp
adc
rol
xchg
mov
into
or
sahf
ds
adc
inc
push
jl
mov
ins
mov
repnz
(bad)
inc
dec
stos
mov
mov
xchg
sbb
(bad)
pop
loop
pop
pusha
in
lea
and
xchg
int3
loopne
sbb
mov
shl
call
int
fld
in
aas
pop
outs
pusha
in
inc
cdq
cmps
or
test
add
(bad)
lea
sub
fistp
shr
push
aaa
cmp
inc
(bad)
xchg
hlt
inc
call
lock
mov
add
inc
dec
jp
inc
jg
xchg
jmp
hlt
pop
mov
adc
inc
cmps
nop
jge
mov
mov
pop
shl
cmp
sbb
add
popf
add
jmp
hlt
mov
loopne
gs
les
sub
mov
add
pop
and
fstp
std
sub
mov
push
push
leave
xchg
or
call
cmp
aad
test
(bad)
or
ret
xchg
nop
test
mov
(bad)
fild
mov
int3
jmp
bound
xchg
aaa
dec
sbb
movs
ins
or
sub
ja
test
nop
inc
push
mov
and
xchg
pop
and
repnz
push
cdq
adc
mov
inc
cmps
xchg
dec
pop
stos
pop
std
in
and
lea
or
sar
clc
je
cmc
int3
pusha
cmps
inc
neg
scas
in
test
or
dec
cwde
lock
lods
mov
push
mov
cmp
or
fidivr
(bad)
shl
imul
ret
aam
lahf
and
inc
lods
mov
aam
bound
cld
mov
test
push
xor
adc
xor
or
jecxz
call
xlat
(bad)
cld
inc
push
and
add
or
inc
mov
out
(bad)
lods
xchg
push
jbe
in
sbb
pop
ja
add
cmp
or
lods
jbe
cmp
mov
or
xor
and
and
mov
clc
sub
adc
popa
es
inc
data16
fldcw
jb
out
mov
retf
or
rcl
cmp
fld
or
shr
or
cmp
inc
fdivr
cmp
(bad)
jmp
adc
(bad)
pop
imul
jle
sbb
push
lahf
push
in
lods
les
movs
inc
push
xor
dec
jg
arpl
mov
ins
xor
int
call
daa
fdivr
out
out
ret
xor
ins
mov
sub
push
mov
sub
inc
add
ficomp
adc
ret
in
dec
js
xor
sub
not
sahf
fnsave
cmp
loope
gs
ins
inc
mov
and
call
cmp
ss
pop
scas
adc
clc
jecxz
sub
push
fucomip
cdq
mov
sbb
pop
fnstenv
test
xchg
sti
loope
mov
clc
iret
sbb
pop
dec
cmp
rcl
adc
ins
mov
pop
dec
push
and
addr16
sub
cwde
inc
mov
cli
retf
xchg
sti
adc
or
stc
aam
sbb
push
push
aad
ror
mov
cmps
repz
test
js
mov
mov
jge
sub
jne
ret
sahf
into
les
push
enter
stc
mov
fwait
test
leave
outs
mov
int
push
and
neg
mov
pop
call
dec
xchg
stos
and
mov
aad
sbb
mov
js
cs
repnz
mov
cmps
(bad)
lahf
dec
dec
jno
fdivr
cmp
push
pushf
dec
int
xlat
out
cmp
test
push
sar
cmp
mov
or
mov
pop
scas
jmp
das
cmp
lds
out
rol
(bad)
shl
dec
mov
loopne
in
mov
rcl
outs
retf
or
test
mov
in
adc
stos
popa
mov
dec
cmp
mov
dec
in
(bad)
fwait
retf
push
cdq
pushf
xchg
stos
adc
arpl
or
mov
les
in
sub
and
mov
inc
sti
ror
sbb
push
call
pop
(bad)
retf
lock
jb
sti
xchg
lods
in
jne
aaa
jmp
and
cmp
call
inc
xor
sub
xchg
mov
es
fs
das
shr
sbb
aaa
jmp
lahf
es
push
cdq
sub
pop
add
ja
dec
stc
inc
xor
mov
dec
pop
sub
push
or
dec
or
xchg
rol
ret
add
mov
iret
and
or
add
loope
hlt
sub
sub
cdq
popa
xor
in
sub
call
(bad)
and
in
or
xor
push
(bad)
ss
mov
sbb
jp
mov
pushf
ds
mov
sbb
pop
push
dec
xchg
mov
adc
or
mov
mov
in
pop
add
cmp
pop
pop
mov
mov
and
loope
mov
rcl
inc
hlt
push
hlt
xchg
jnp
enter
xor
dec
xor
mov
fwait
adc
push
je
dec
inc
aaa
pop
xchg
push
loopne
lods
rcl
outs
push
or
cld
stos
mov
outs
dec
jnp
or
pop
ror
add
mov
push
cmps
mov
fidiv
push
(bad)
shl
cdq
fs
mov
test
lods
imul
sbb
stos
nop
ror
es
add
sub
cmp
in
mov
xor
and
sar
and
adc
mov
sbb
sub
mov
(bad)
lock
jg
push
sar
jmp
aam
mov
mov
inc
(bad)
(bad)
cmps
test
push
imul
in
pminsw
cli
in
push
inc
stc
inc
stos
fidivr
aas
xchg
mov
adc
daa
inc
es
xor
cmp
add
lock
inc
sub
sbb
add
jae
inc
jge
lahf
sbb
xabort
shr
adc
in
cmc
push
adc
(bad)
pop
dec
aad
test
sub
movs
pop
pop
xor
rcl
jns
out
and
adc
lea
cmp
test
into
xor
mov
mov
add
shr
enter
jge
xor
out
vprotd
ins
movs
cli
and
sub
hlt
frstor
out
add
pushf
loop
inc
and
push
icebp
cli
sub
jmp
jecxz
cmps
mov
cmp
mov
sub
or
xor
scas
dec
mov
(bad)
ins
test
adc
pop
sti
adc
adc
out
sub
jecxz
jmp
pop
and
add
mov
jno
cmovl
ret
jp
cmps
mov
mov
mov
and
inc
or
inc
(bad)
xor
or
shr
jmp
pop
inc
outs
push
jp
bound
jne
dec
(bad)
mov
sbb
aaa
cmp
ficomp
jle
stc
cmp
mov
jmp
shl
add
push
adc
dec
hlt
and
leave
mov
adc
pop
mov
(bad)
mov
enter
push
xchg
mov
out
mov
push
or
bound
jb
xlat
mov
or
inc
popa
aaa
(bad)
rcr
push
(bad)
fisttp
mov
mov
cmp
cld
ins
out
ds
pop
sub
(bad)
xchg
inc
leave
push
cs
jnp
in
xor
sub
aam
adc
call
jle
adc
or
in
ss
mov
popa
cmp
cmps
(bad)
jbe
leave
sub
popa
cmp
xchg
aam
sub
dec
aas
dec
ja
iret
cmp
push
cmc
dec
int3
mov
test
xor
and
jb
inc
ret
aam
sbb
and
popf
add
jmp
sbb
xor
in
xchg
enter
lea
icebp
lds
mov
mov
jne
xchg
dec
cmp
mov
xlat
cmps
xlat
pop
inc
mov
test
mov
pop
jmp
cdq
ja
mov
dec
add
(bad)
sub
sbb
test
cmp
ss
aaa
(bad)
add
sbb
jnp
aas
mov
ror
push
xchg
mov
jbe
dec
mov
cmp
and
dec
or
push
inc
pushf
sti
imul
pop
fsub
js
hlt
cdq
popa
jge
gs
mov
aad
or
test
mov
inc
mov
add
adc
inc
sub
pop
cmp
(bad)
xor
jnp
and
aaa
out
mov
mov
outs
cdq
push
into
das
test
aad
test
out
xor
lock
gs
cmc
or
mov
inc
or
ja
push
inc
sub
popf
lds
jmp
mov
(bad)
in
jo
or
mov
push
enter
xchg
lods
mov
repnz
loope
push
sub
inc
or
push
cmp
retf
sahf
cmps
popa
lods
or
call
popf
cs
sub
push
xor
cmp
dec
ret
jge
ins
addr16
ret
cli
pop
pop
pop
call
hlt
sahf
aas
jno
stos
sub
dec
(bad)
in
(bad)
jae
mov
inc
mov
adc
jns
cmp
add
fwait
adc
jecxz
data16
jp
enter
and
pusha
mov
inc
pop
xor
and
sbb
mov
test
add
out
inc
bound
sbb
cmps
add
mov
cmp
add
mov
es
rcl
fcomp
movs
aad
loope
fnsetpm(287
das
outs
ds
into
or
je
lds
add
rcl
or
xchg
jbe
inc
aam
jbe
mov
jg
(bad)
jmp
les
loop
out
cld
pusha
loopne
xchg
ins
or
into
inc
movs
add
je
and
or
push
(bad)
lods
sub
arpl
sahf
frstor
cmp
icebp
sbb
and
push
retf
jecxz
xor
mov
mov
xor
or
mov
xchg
or
out
std
and
fld
dec
mov
jne
inc
adc
pop
dec
mov
test
mov
xchg
aaa
lds
push
xor
inc
adc
dec
pop
(bad)
mov
mov
mov
aam
add
stos
sbb
and
add
fsubr
pop
popa
adc
in
adc
xchg
hlt
push
add
mov
mov
xlat
repz
adc
or
mov
jp
cmp
jbe
fimul
daa
sbb
sbb
xchg
outs
or
jge
pushf
mov
and
stc
push
mov
push
mov
loopne
xchg
jmp
mov
dec
adc
mov
push
mov
jmp
dec
and
pop
pop
into
in
adc
add
adc
mov
jns
jecxz
ficomp
push
sahf
(bad)
in
xchg
jno
jbe
mov
push
jmp
fsubr
and
ds
add
pop
stos
shl
imul
xchg
cli
aam
adc
add
sbb
xor
aas
cmp
pushf
mov
in
mov
rol
retf
fbstp
push
inc
push
pop
mov
jbe
sub
pushf
jmp
cs
inc
mov
push
cmp
rcr
xlat
mov
sub
test
add
or
ja
mov
mov
inc
or
dec
mov
test
xchg
lea
or
retf
out
ret
dec
movs
push
das
xchg
xor
lahf
mov
push
out
xlat
cmps
mov
movs
retf
xchg
or
inc
pop
rcl
jb
push
in
xor
in
lahf
mov
jmp
stos
dec
inc
sub
lds
push
gs
xchg
ds
jne
mov
sub
ror
mov
stos
(bad)
jno
jno
loop
(bad)
mov
sub
inc
pop
or
xchg
not
mov
adc
(bad)
fcmovb
adc
fwait
xchg
call
ror
adc
das
pop
(bad)
pop
adc
and
adc
fbld
dec
fsub
pop
cmp
and
mov
repnz
mov
mov
movs
cmps
jns
pop
test
stos
pusha
iret
jmp
adc
test
shr
mov
repnz
sbb
and
aaa
rcr
jno
pop
sbb
dec
add
rol
retf
fdiv
stc
inc
fs
jl
lock
loopne
mov
inc
cmps
mov
mov
(bad)
int3
imul
xchg
jno
push
sbb
sar
adc
ins
xor
or
pusha
pop
sti
dec
jg
mov
mov
sbb
jecxz
push
ret
loopne
sahf
retf
call
fsub
sbb
retf
xchg
hlt
mov
enter
lds
sahf
movs
(bad)
(bad)
inc
rol
mov
and
jo
je
inc
test
pop
or
(bad)
cmp
pop
fnstcw
addr16
fs
das
push
sbb
inc
pop
ret
enter
in
pop
pop
pushf
stos
inc
sub
sub
xor
jle
data16
cli
xchg
enter
fcmovnb
jae
cmp
scas
jl
or
jle
sbb
jecxz
rcl
aam
jp
jmp
sub
(bad)
dec
(bad)
leave
dec
xchg
aas
dec
push
mov
push
retf
mov
dec
shr
pop
cmps
movs
fldcw
call
(bad)
jbe
not
add
xchg
adc
xchg
mov
pusha
lds
cli
loopne
cmps
mov
jbe
xchg
mov
inc
ins
or
loope
jmp
movs
xchg
mov
pop
loopne
bound
sub
mov
aad
test
and
push
adc
pop
mov
stos
idiv
sbb
(bad)
xor
leave
stos
push
or
not
retf
mov
cmp
in
popf
mov
leave
and
lahf
xor
mov
xchg
ds
hlt
call
movs
or
cmp
dec
mov
imul
enter
data16
xor
mov
xor
inc
xor
add
les
or
jae
jge
rcl
inc
xchg
fcomp
mov
push
and
pop
sbb
loope
pandn
data16
std
aam
sub
xor
mov
retf
xchg
sbb
test
and
and
mov
and
ret
mov
sub
adc
xlat
sahf
pop
imul
sbb
xchg
movs
ret
je
and
sbb
sahf
jle
jmp
cmc
or
pop
jo
push
push
xchg
fidiv
fwait
mov
dec
sti
inc
cmc
cld
scas
in
repz
push
xchg
cmps
xor
loopne
xor
cmps
mov
xchg
cmps
cwde
daa
and
cmp
stc
sbb
jge
int3
shr
and
xchg
(bad)
(bad)
mov
dec
rol
xor
shl
pop
sbb
xor
in
addr16
mov
movs
pop
bound
mov
jo
call
push
in
lds
add
mov
repnz
pop
lods
pop
fs
jnp
sub
jg
addr16
mov
and
scas
ret
push
mov
loope
loop
jle
fwait
popf
xchg
daa
or
mov
cli
add
sub
iret
lock
xlat
retf
lock
int3
mov
jno
and
(bad)
cmc
lahf
mov
pop
ins
cld
sub
ror
lds
inc
sub
es
mov
cli
fwait
aas
cs
mov
cmp
push
(bad)
cmp
mov
lahf
sbb
retf
push
jmp
mov
inc
xchg
pop
pushf
movs
mov
jl
ret
inc
mov
inc
sbb
xchg
and
int
pop
es
mov
jae
pop
xor
or
lods
lahf
mov
xor
aam
pop
push
pop
movs
xor
or
das
push
cmp
cmp
sbb
test
cmp
mov
xor
push
pop
imul
mov
add
test
xchg
ret
(bad)
adc
xor
imul
adc
dec
pop
mov
mov
or
sub
movs
stos
je
test
cld
and
fcomp
inc
mov
(bad)
xchg
pop
test
or
clc
or
adc
stos
frstor
dec
int3
xor
push
int
mov
push
mov
mov
fist
repnz
add
in
mov
xchg
pop
push
outs
mov
sbb
loopne
adc
mov
stos
test
mov
shr
xchg
sub
push
enter
(bad)
icebp
ret
cmp
mov
xor
lock
lahf
ss
ucomiss
inc
cmps
push
mov
mov
(bad)
xor
add
fsubr
dec
xchg
aad
in
add
mov
ror
std
ins
mov
ficomp
cmc
cmps
in
and
add
sub
ja
mov
push
mov
shr
xchg
pop
or
sub
cmps
fcmovbe
je
jmp
jmp
data16
adc
fisttp
sub
repz
pop
cdq
pushf
mov
jnp
vmovapd
mov
push
out
jae
pop
add
cld
mov
test
sub
loop
fimul
(bad)
enter
ins
sub
pop
sub
push
dec
mov
data16
pop
jmp
pop
push
xlat
xlat
ja
dec
add
(bad)
fidiv
dec
in
test
fdivr
add
pop
ja
dec
stos
clc
test
pop
shl
out
ins
nop
shl
pop
xor
fldenv
outs
jge
xchg
shl
dec
das
retf
xor
shl
push
stos
int3
cmp
mov
clc
ins
jo
and
cmp
loope
jnp
xchg
xor
(bad)
out
mov
inc
ret
sbb
sbb
cmps
movs
imul
out
scas
mov
movs
imul
jno
push
cli
or
out
bound
aad
imul
push
jp
pop
sub
jp
scas
in
and
scas
aad
sbb
pop
or
push
xchg
and
bndldx
push
mov
xchg
outs
in
push
and
sub
ins
(bad)
sub
fs
jb
ret
jle
inc
inc
aaa
dec
sbb
mov
jmp
and
ret
inc
aam
jns
xor
sti
lea
inc
xor
push
adc
ins
mov
inc
nop
push
aas
int3
pop
ss
add
(bad)
adc
aam
adc
xlat
push
loope
mov
inc
pushf
push
aad
(bad)
(bad)
jmp
push
test
outs
push
adc
arpl
in
ins
out
mov
xchg
xor
sub
(bad)
jmp
hlt
xchg
clc
xchg
repnz
dec
repz
and
cli
mov
push
push
push
leave
xlat
push
sbb
jb
add
into
(bad)
fcomp
fs
(bad)
lea
cmp
jae
scas
icebp
push
lods
mov
or
fcom
nop
cs
loopne
jecxz
cmp
in
lea
xor
mov
stos
rcl
scas
int
adc
lods
sub
jno
sbb
test
stos
inc
outs
in
gs
mov
mov
out
outs
push
arpl
ss
mov
inc
mov
push
ror
das
mov
fisub
cmp
ins
(bad)
out
cmp
outs
fcomp
sahf
jo
(bad)
pop
scas
cmp
mov
jg
int3
pop
ins
addr16
xchg
add
pop
or
adc
dec
call
jmp
mov
push
and
adc
push
xchg
and
inc
push
neg
push
test
sbb
repz
mov
xchg
lahf
cmp
pop
add
cmps
jnp
push
in
add
dec
int
jl
fisubr
int3
shl
dec
push
movs
cmp
xor
idiv
mov
mov
cmp
test
push
mov
int3
cmp
ror
push
and
mov
imul
jmp
add
dec
pop
inc
jne
and
(bad)
mov
mov
out
cwde
loope
push
cli
sti
lds
leave
mov
rol
lea
addr16
clc
rcr
inc
mov
in
ret
movs
xor
(bad)
dec
fsubr
test
in
movs
imul
adc
xchg
dec
pop
xor
movs
loopne
push
cmps
bswap
loop
push
out
cmc
scas
sbb
pop
(bad)
(bad)
icebp
(bad)
loop
in
stos
xchg
and
jbe
out
fstp
je
mov
and
sti
dec
lds
lahf
xchg
adc
push
dec
daa
mov
ss
in
out
out
jo
dec
stc
xchg
xchg
fs
mov
sub
popa
jne
mov
in
pop
scas
ret
mul
cmp
test
push
lods
and
or
fnstenv
xchg
jne
push
test
xchg
mov
mov
push
mov
jae
retf
sub
out
scas
pop
pop
ins
js
or
ret
and
push
cmp
lock
xor
sub
push
int
retf
ror
stos
pushf
mov
xchg
cmc
pop
inc
add
gs
loope
fs
push
inc
(bad)
cmp
in
pusha
mov
scas
inc
dec
mov
mov
bound
inc
push
jge
xor
pop
aam
fadd
fwait
push
call
aam
cdq
cmps
cmp
xchg
retf
pop
xchg
outs
loope
dec
xor
mov
push
sar
pop
outs
push
fdivp
mov
push
out
shl
sbb
das
or
stos
cs
iret
dec
ds
outs
cdq
dec
inc
jge
push
cmc
pop
out
loopne
xor
xor
ret
mul
dec
test
or
aas
loopne
jbe
mov
dec
fidiv
xchg
popf
mov
cmps
les
pop
push
mov
jmp
sahf
mov
call
ficomp
sbb
mov
push
daa
sbb
pushf
sahf
imul
xor
rol
aas
add
adc
sub
add
scas
ror
sbb
adc
lods
daa
jp
inc
xchg
ror
or
shr
sbb
leave
xlat
sbb
out
outs
out
clc
cmp
stc
leave
je
or
aaa
push
mov
in
inc
adc
pop
push
aaa
mov
xor
inc
addr16
and
jge
enter
pop
into
mov
or
pop
enter
fidiv
data16
push
xor
imul
xchg
mov
or
(bad)
jnp
inc
addr16
add
outs
mov
iret
dec
stc
cmp
gs
lock
pop
imul
loop
mov
ins
push
retf
dec
aad
bound
sub
jle
sub
ret
pop
jecxz
sub
cmp
mov
retf
lahf
or
mov
pusha
test
xchg
pop
cmp
sub
jno
mov
out
dec
and
dec
sbb
aad
xlat
sbb
or
or
xchg
xor
cmc
inc
mov
adc
or
arpl
int3
add
lahf
stos
inc
add
scas
adc
dec
sub
and
test
(bad)
int
or
xor
aas
fisubr
aas
cmp
xchg
xor
or
(bad)
(bad)
je
xchg
lods
lahf
adc
or
push
jb
dec
pop
fwait
mov
cmp
and
cmp
out
repnz
cld
mov
(bad)
mov
scas
arpl
bound
pop
je
inc
mov
adc
jno
fldcw
fadd
xchg
jns
daa
push
popa
aam
push
sbb
sbb
xor
add
cmp
rcl
mov
xor
sbb
jmp
pop
imul
pop
push
dec
sbb
rol
xor
sub
sbb
pop
and
pop
dec
nop
jp
mov
sbb
xchg
jb
pop
fist
fnstcw
pop
hlt
cmp
mov
stos
in
ins
sub
or
stos
stos
add
cmp
pop
mov
sbb
rcr
jmp
jbe
and
sbb
outs
mov
mov
in
mov
push
jbe
in
lahf
aaa
movs
sahf
add
lock
pop
ffree
cdq
or
daa
iret
mov
jmp
sub
ret
dec
popf
cmc
sbb
call
jge
aad
push
outs
push
push
in
inc
(bad)
movs
cmps
pushf
popa
jge
or
jns
mov
pop
ret
cld
sbb
mov
dec
mov
cmp
mov
xor
ret
sub
lods
push
and
sahf
sub
mov
xor
jnp
jb
pop
not
add
aas
jg
inc
sahf
fwait
mov
or
pop
push
mov
pop
lods
test
jae
mov
cld
xor
data16
out
pop
jbe
call
xlat
cmp
push
mov
sbb
out
jge
jnp
xor
xchg
repnz
push
and
mov
imul
ins
mov
leave
call
cmp
and
repz
add
sbb
out
push
pusha
icebp
cmp
popa
cmp
jae
cld
push
and
jl
inc
ds
(bad)
shr
(bad)
xchg
(bad)
xchg
call
cmp
dec
mov
bound
loopne
add
or
aas
mov
xchg
xchg
pop
out
push
add
imul
pop
ins
or
sbb
daa
popa
mov
test
lods
test
rol
mov
fdiv
stc
sahf
jecxz
dec
fcmovnb
in
das
push
hlt
push
push
popa
xchg
shr
mov
push
push
xor
push
mov
fnclex
dec
mov
aas
mov
shr
push
ss
xchg
push
sub
mov
shl
loop
jmp
add
push
sti
pop
xchg
inc
and
sbb
sbb
in
push
and
outs
jle
data16
les
pop
sbb
mov
sbb
jmp
inc
or
call
cmc
pusha
push
jnp
adc
mov
cmps
mov
and
xor
jnp
popa
lahf
arpl
test
sub
or
rol
add
and
add
mov
imul
sub
in
inc
lock
mov
xor
lock
jle
mov
xor
jle
outs
cli
cmps
rcl
add
mov
push
imul
mov
das
mov
and
shl
fisubr
sti
mov
cmp
sub
rcl
shl
fcom
push
fs
sub
call
ins
(bad)
xchg
add
and
mov
out
into
mov
loop
mul
xlat
mov
cmp
pop
fistp
pop
int
or
jnp
cmp
push
or
cwde
xchg
dec
gs
into
into
rcl
xacquire
sub
mov
inc
imul
and
out
sahf
ss
neg
mov
loope
js
xor
ror
sbb
stc
mov
xor
pop
lock
add
mov
gs
aad
dec
mov
js
aas
inc
jae
ret
sbb
or
cmp
(bad)
clc
jp
jns
jle
inc
jbe
pop
pop
cmps
mov
adc
ror
inc
add
mov
and
or
(bad)
push
ins
cmp
aam
push
arpl
test
adc
add
xchg
mov
dec
xchg
retf
shufps
or
dec
cmc
test
ror
inc
ds
ds
mov
fnstcw
mov
cwde
(bad)
lahf
sbb
repz
jo
pop
daa
sub
push
imul
(bad)
jne
clc
or
xlat
test
retf
jae
push
mov
pop
ja
jl
test
shl
xor
and
push
fld
neg
push
mov
push
pop
cmp
adc
les
out
stos
out
loop
jecxz
push
and
jge
scas
enter
jb
scas
jge
in
fldenv
imul
dec
jb
jge
int3
fistp
or
adc
or
jnp
jmp
jo
out
pop
loopne
push
mov
jp
mov
repz
test
leave
ss
jp
or
arpl
jbe
mov
sbb
lahf
cmp
(bad)
(bad)
test
scas
sbb
cmp
adc
and
(bad)
sub
add
gs
jno
mov
adc
push
jmp
pop
adc
test
pop
and
sub
add
mov
stc
or
imul
fcmovbe
(bad)
in
xchg
aaa
into
repnz
push
dec
leave
cmp
mov
test
jg
cmp
shl
xchg
dec
jbe
add
fidiv
add
add
loop
(bad)
sbb
xchg
push
sti
xor
addr16
add
outs
adc
das
stos
pop
cmps
inc
xchg
mov
repz
ret
or
mov
and
mov
ds
mov
retf
retf
out
outs
push
retf
in
repz
sub
add
dec
frstor
cmp
pop
or
or
sahf
pusha
dec
shl
xchg
add
psllw
jo
pushf
push
sti
and
dec
jmp
std
mov
clc
shl
(bad)
icebp
add
jp
or
jb
and
sub
pop
les
cmp
fdivr
fild
imul
xor
enter
push
mov
cmc
xchg
push
mov
mov
mov
jl
dec
ins
mov
dec
icebp
fsubr
cmc
and
retf
xor
pop
cmp
fcmove
pop
lahf
idiv
stos
fadd
dec
pushf
fdivr
or
dec
pop
sub
push
sti
lahf
out
lods
cmp
inc
pop
ret
icebp
in
scas
inc
jae
ret
fld
adc
cmp
xchg
adc
push
pop
movs
push
ss
push
inc
test
aam
fcomip
ds
pop
sti
imul
loope
outs
adc
leave
sub
popa
add
pop
aas
inc
push
dec
not
sub
rcr
dec
push
and
dec
cli
aad
jnp
inc
xlat
fwait
jmp
addr16
test
shr
pop
int
loope
mov
shl
(bad)
cmp
add
jmp
inc
repz
mov
call
repz
push
lock
pop
(bad)
fbstp
call
shr
mov
gs
(bad)
push
mov
pop
out
lods
cmp
mov
xchg
mov
rol
pop
or
mov
cmp
mov
inc
rcl
xlat
dec
add
pop
ins
inc
push
imul
sub
pop
repnz
aaa
pop
adc
daa
mov
mov
in
and
and
fcom
sti
test
mov
add
je
rol
scas
xchg
jp
mov
or
cmp
es
jecxz
cli
nop
sbb
sub
push
das
dec
xlat
mov
xor
cli
mov
and
jo
pop
aam
movs
nop
cmp
cmc
xchg
xor
stos
adc
adc
adc
add
es
test
ret
push
xor
stos
inc
push
xor
jp
ret
test
pop
sub
add
into
inc
loop
inc
jecxz
mov
loop
rcl
cmp
pop
sahf
dec
hlt
fistp
push
les
(bad)
push
cdq
fcmovne
test
bound
fld
cmps
add
les
inc
jbe
loope
imul
fmul
mov
mov
(bad)
mov
pop
xchg
out
int
stos
pop
jge
push
pop
jge
dec
add
xor
or
popa
pusha
aad
(bad)
jmp
push
xchg
sbb
mov
add
dec
inc
cmp
fucom
gs
aad
mov
call
xor
cmps
mov
or
pop
add
out
cdq
mov
jge
popf
cmc
mov
jns
mov
pusha
or
xchg
sub
or
stos
jnp
lods
lods
cmps
shl
xor
sub
mov
outs
out
pop
out
je
cwde
push
lods
loope
aam
daa
out
addr16
mov
cmp
or
cdq
es
lods
ret
mov
rcr
jge
scas
jo
cmp
mov
punpckldq
jp
pop
ja
cmp
ret
(bad)
xchg
jmp
inc
addr16
scas
sar
adc
nop
pop
adc
push
dec
jle
or
and
int
icebp
std
imul
dec
sub
add
popa
dec
gs
push
sub
adc
shl
in
mov
(bad)
ror
dec
xchg
movs
(bad)
out
mov
xor
test
jge
push
imul
hlt
push
cmp
and
test
mov
dec
fisub
mov
xor
mov
push
jge
(bad)
sub
mov
sub
push
popa
test
sub
push
aam
cmp
mov
push
or
mov
inc
inc
mov
xchg
sub
pushf
(bad)
stc
test
enter
sub
and
jo
dec
aad
add
and
mov
cdq
aad
test
mov
adc
cmp
sbb
daa
vunpcklps
or
lock
push
jle
aad
dec
(bad)
cmp
mov
scas
jbe
mov
jb
or
lods
les
stos
pop
sti
imul
xchg
pop
add
cmp
xchg
hlt
repnz
or
cld
cmp
pushf
div
cmp
fwait
daa
nop
xchg
or
call
and
nop
mov
mov
nop
and
retf
mov
inc
mov
and
outs
and
xor
(bad)
out
mov
daa
push
fldl2e
add
pop
outs
mov
xchg
push
pop
ficom
fld
sbb
mov
pop
adc
in
push
dec
mov
xchg
push
pop
ror
fnsave
adc
aaa
ret
adc
aad
aad
sub
push
loope
jbe
imul
jge
mov
push
stos
pop
mov
push
cli
mov
adc
int3
pop
loopne
movs
fdivr
or
jbe
adc
inc
mov
jns
sar
shufps
jb
and
or
xchg
dec
sbb
and
iret
push
ffree
leave
add
jne
aaa
sbb
add
jmp
and
xchg
lods
add
sub
or
mov
aam
sti
push
and
sub
inc
jns
add
pusha
adc
fwait
adc
fsubr
push
cwde
xor
cdq
jge
ja
xor
pushf
pushf
cmp
jb
adc
cmps
call
xor
lods
leave
neg
sub
xchg
push
scas
mov
cmp
xor
or
nop
mov
pop
xor
lods
jl
cmp
sub
ret
(bad)
lock
or
(bad)
add
xlat
push
retf
xor
sub
in
cmps
cmp
imul
das
adc
fcomp
retf
scas
and
sbb
sub
pop
fsubr
pop
add
addr16
into
mov
mov
mov
shl
add
aaa
fst
iret
or
or
push
jecxz
adc
xchg
mov
jle
dec
in
xchg
xchg
dec
loope
jge
push
test
and
pop
retf
ins
mov
cmp
jo
ins
or
xor
xor
sbb
fmul
jne
ss
push
cmp
(bad)
sub
jb
sbb
ja
cmc
popf
sti
test
ret
aas
add
mov
(bad)
aam
xor
cmp
inc
hlt
push
shl
sbb
mov
ds
jmp
jnp
jb
add
mov
mov
pop
loope
lea
inc
scas
mov
xchg
pop
pop
out
bound
xchg
rcl
retf
mov
jb
cmp
ret
inc
sbb
dec
stos
push
cmps
jbe
push
sub
push
add
xchg
in
movs
icebp
push
mov
in
mov
and
aam
(bad)
mov
cdq
test
push
(bad)
out
mov
xor
stos
fsubp
push
jae
push
popa
and
dec
jl
sub
clc
sbb
sub
inc
push
mov
std
push
(bad)
stos
shl
add
es
jmp
sub
fst
(bad)
lahf
ficom
fstp
pushf
ret
ins
pop
imul
mov
(bad)
(bad)
adc
pop
cpuid
mov
push
mov
adc
test
inc
jae
int3
mov
ret
xchg
mov
lahf
add
int3
aad
sbb
lea
mov
xor
(bad)
pushf
mov
and
(bad)
out
sbb
(bad)
jle
clc
jno
in
(bad)
inc
pop
mov
jle
outs
adc
jl
xchg
stc
jns
shl
shl
or
jp
daa
adc
div
sub
pop
lock
(bad)
sbb
jns
and
dec
xor
punpcklwd
xor
mov
ins
cld
push
cmc
in
adc
xor
mov
fimul
or
or
icebp
nop
test
push
pop
outs
nop
dec
leave
dec
sbb
xchg
fldln2
sbb
fbstp
lods
mov
mov
cmp
or
loop
rcl
fadd
mov
clc
je
rol
jle
xchg
outs
adc
or
ins
mov
sbb
mov
mov
and
adc
not
pop
std
out
adc
pop
lock
pop
adc
ret
cmps
sbb
mov
movs
and
sub
jecxz
lods
jae
dec
lods
mov
jns
nop
mov
cdq
fucomip
bound
or
mov
sar
dec
aaa
fild
cmp
ret
test
in
jno
rcr
jecxz
into
sub
rep
or
js
mov
push
gs
jp
movs
cli
pop
mov
pushf
jns
repnz
repnz
shl
cdq
fadd
in
stc
or
mov
inc
jmp
data16
test
mov
cmp
xor
jmp
jno
mov
jb
mov
pop
xchg
fnstsw
into
dec
(bad)
or
pop
addr16
jmp
(bad)
neg
cmp
pop
add
lahf
pop
stos
sbb
cmps
dec
sub
sbb
pop
pop
fstp
outs
cmp
sbb
pop
shr
(bad)
or
push
arpl
scas
popf
push
push
xchg
stos
loop
imul
retf
rcr
call
cwde
ins
and
xor
js
jnp
add
xor
cmp
or
xchg
pop
shl
or
sub
aam
fnstenv
inc
stc
jbe
aam
xor
ins
cmp
push
test
inc
mov
inc
movs
mov
popa
stc
xchg
cmps
les
xchg
fidivr
pop
xor
repnz
jbe
repnz
data16
jp
xchg
sub
fs
(bad)
adc
dec
mov
outs
mov
inc
jne
sub
mov
cli
es
stos
imul
dec
call
scas
ror
mov
jp
push
xchg
repz
adc
mov
popa
push
pusha
cmp
ja
mov
dec
xchg
aad
lods
or
in
into
lods
pusha
fwait
(bad)
call
std
mov
add
pop
addr16
add
sahf
and
ins
dec
ss
sbb
and
mov
shl
xor
shr
aaa
addr16
lock
bound
sbb
mov
(bad)
pushf
adc
inc
fcmovne
push
test
mov
and
clc
push
(bad)
or
mov
dec
mov
or
hlt
jp
mov
dec
es
aas
inc
fcomp
xchg
xor
jg
pop
jb
adc
pop
ins
call
lods
test
push
inc
jmp
rcl
ss
xchg
aas
sar
or
jmp
lea
dec
or
in
scas
nop
mov
jne
pop
out
push
or
mov
movs
dec
lods
(bad)
sti
dec
or
add
jne
mov
arpl
icebp
mov
mov
mov
mov
(bad)
stc
sahf
jo
adc
cmp
into
pop
out
xor
cmp
repz
or
jo
cld
fldcw
ja
div
sbb
in
push
add
jne
xchg
shr
test
add
bswap
adc
test
cwde
in
sbb
mov
jmp
and
adc
or
add
call
pop
mov
push
add
je
sub
pop
(bad)
fsub
jbe
retf
xor
ds
sub
clc
repz
xchg
call
shr
add
sub
mov
cmp
call
mov
ds
ins
lar
pushf
cmp
jne
(bad)
rcl
and
xchg
in
stc
inc
hlt
aam
aas
(bad)
js
pop
fstp
imul
sub
mov
and
mov
cdq
sbb
or
clc
sbb
xchg
pop
mov
rol
cdq
daa
jmp
add
push
cmp
pop
rcl
mov
sub
out
xchg
imul
push
xchg
xchg
mov
sbb
mov
jle
mov
mov
pop
dec
push
mov
lock
test
cwde
add
(bad)
xor
and
and
pop
sar
push
ja
out
daa
and
retf
dec
adc
lahf
test
mov
jge
nop
repz
or
neg
popf
inc
mov
loope
or
(bad)
and
inc
retf
addr16
cdq
retf
mov
sub
movs
retf
sub
inc
shl
jae
push
jmp
loop
adc
ins
(bad)
dec
xor
mov
ds
ret
ds
aas
mov
scas
cwde
call
inc
jnp
sbb
xchg
mov
not
fs
popf
and
sub
dec
mov
fsub
adc
aad
jmp
xor
cdq
js
imul
push
jbe
dec
call
cmps
xchg
call
inc
inc
inc
xchg
mov
mov
xor
int3
les
lods
push
dec
nop
cmps
jae
adc
test
inc
out
xor
movs
jne
jmp
push
out
aas
push
inc
or
or
es
push
fwait
mov
adc
out
and
xor
out
shl
lods
pop
add
dec
push
xor
mov
lahf
out
inc
jo
out
and
sbb
dec
lahf
add
push
xchg
je
sbb
(bad)
xchg
sti
and
cdq
sbb
sub
pop
js
dec
mov
stos
push
mov
mov
cmp
push
jae
es
push
xor
adc
lahf
(bad)
add
in
fild
cmp
(bad)
jl
sub
cld
adc
pusha
mov
das
xor
nop
aad
and
and
test
and
push
or
pop
fmul
fidivr
dec
call
mov
cmps
clc
mov
inc
call
jns
inc
rcr
xor
mov
repnz
push
adc
mov
sbb
mov
xchg
div
or
or
adc
test
sbb
sub
lods
and
loope
out
in
xchg
mov
dec
add
test
sti
sub
and
add
loop
adc
in
mov
and
(bad)
push
sbb
sbb
(bad)
lods
movs
cmp
mov
jb
gs
daa
mov
mov
mov
mov
sbb
cmc
mov
push
je
mov
mov
fcomp
(bad)
lahf
call
xlat
xor
retf
jbe
xchg
int
mov
loop
mov
xor
(bad)
cwde
adc
pop
mov
test
inc
je
push
imul
aas
call
(bad)
mov
and
jne
push
lods
aaa
cli
or
mov
push
cld
and
icebp
(bad)
ret
les
sahf
and
push
xor
xchg
xchg
call
pop
xor
dec
or
fimul
and
add
xor
ss
mov
sahf
clc
fwait
pop
int
sbb
mov
in
adc
enter
in
bswap
xor
mov
lods
mov
imul
pop
xchg
lds
shl
inc
sbb
dec
cmp
mov
dec
ret
jno
std
mov
sub
mov
pusha
sub
icebp
cmp
adc
sar
clc
xor
sub
inc
or
in
fadd
cs
mul
cwde
xchg
inc
out
stos
int
inc
dec
dec
imul
cmp
sub
not
or
out
jbe
and
bound
js
jle
not
mov
retf
test
mov
sub
jmp
jg
test
sbb
int3
das
imul
mov
xlat
mov
mov
addr16
push
xor
(bad)
pop
(bad)
fimul
js
pop
jmp
adc
lock
push
sub
jge
pop
add
pop
aad
scas
in
push
ja
cdq
adc
inc
mov
fcomp
cli
add
or
stos
dec
adc
fiadd
pushf
ja
loope
test
xchg
jo
push
xchg
(bad)
pop
(bad)
dec
push
sub
(bad)
sub
call
jl
cmps
jno
or
lods
push
xchg
add
rol
ins
ja
jp
or
repz
adc
hlt
out
jge
jno
inc
sbb
cmp
jbe
jg
stos
ja
push
fiadd
pop
xor
imul
xor
div
pop
stc
or
dec
adc
clc
jo
shl
or
enter
test
add
mov
xor
les
mov
mov
cmp
add
add
sbb
fnstsw
aaa
shr
xor
sub
jle
movs
xchg
test
fsub
adc
mov
into
ins
cmp
int3
sub
ins
retf
lods
addr16
jp
aam
dec
aad
and
pop
cs
jmp
pop
imul
push
ss
dec
cmp
pushf
stos
sbb
scas
adc
ins
jae
mov
stc
inc
in
mov
shr
mov
outs
sbb
push
adc
pop
fwait
mul
mov
cmps
mov
xchg
repz
test
pop
xchg
jecxz
cmc
push
sub
rcl
sub
mov
out
stos
mov
cmp
pop
cmp
or
cwde
xor
mov
mov
push
mov
int
push
or
loopne
xchg
retf
inc
mov
adc
xchg
fist
jl
adc
push
adc
test
dec
add
push
adc
sub
je
js
xor
es
pop
xor
sbb
cli
pop
sbb
bound
or
xchg
adc
dec
fdivr
mov
sub
not
add
push
in
into
repz
mov
sub
movs
adc
jmp
xchg
out
inc
cdq
push
sbb
ret
push
outs
fist
dec
sub
leave
je
xchg
lods
mov
mov
jecxz
xor
mov
adc
rcl
dec
adc
clc
and
cmp
mov
test
clc
jge
mov
(bad)
ins
push
(bad)
xor
fstp
movs
mov
pop
jo
popf
xor
push
fwait
xor
jns
push
pushf
inc
xor
xchg
inc
mov
dec
int3
into
xchg
mov
pop
into
in
adc
dec
ret
sbb
jle
imul
mov
inc
ficomp
cs
push
lock
xor
adc
lahf
xchg
dec
xchg
(bad)
int
call
shl
push
sub
loope
jg
xchg
(bad)
push
or
lahf
(bad)
jmp
mov
jne
adc
stc
inc
xchg
dec
adc
mov
inc
mov
ins
pushf
iret
(bad)
ficom
into
sbb
sub
mov
xor
cmp
out
pop
xchg
mov
aas
push
and
inc
cmc
sub
(bad)
mov
div
mov
dec
push
sahf
or
dec
add
mov
xor
mov
aam
pcmpeqw
ds
ror
div
and
rcr
(bad)
sub
out
or
loop
adc
jne
clc
leave
and
push
push
mov
aas
clc
sub
pop
popf
and
ins
inc
ja
xor
in
cmps
cwde
out
retf
cmp
inc
xchg
aas
daa
ds
repz
or
push
push
outs
adc
mov
cmp
cmp
inc
shr
mov
dec
aas
jg
jmp
out
add
mov
mov
or
add
mov
out
xchg
(bad)
or
ins
xchg
add
popa
adc
out
outs
ss
mov
jns
cmp
mov
pop
mov
cmovg
xor
push
in
pushf
int
cwde
push
xchg
arpl
pop
(bad)
adc
aas
adc
push
imul
xor
xchg
movs
repz
jns
sub
fsub
dec
mov
sahf
cs
fistp
test
xchg
div
sub
fwait
adc
xchg
push
jl
inc
inc
inc
enter
sti
stos
push
jo
aaa
pop
shl
xchg
mov
mov
bound
hlt
xchg
addr16
jne
aaa
lods
and
cdq
inc
(bad)
lods
cli
jns
jb
popf
xchg
pop
jbe
or
jnp
xchg
dec
or
inc
xor
sub
cmp
shl
lods
jns
xchg
pop
pop
nop
pop
mov
dec
mov
mov
popf
push
int3
add
or
add
imul
mov
pop
inc
mov
into
dec
mov
adc
loope
inc
pop
je
sbb
imul
mov
and
mov
outs
rol
xchg
sar
cs
mov
add
sbb
xchg
leave
std
shl
push
jmp
aam
jecxz
cmp
popa
mov
pop
jmp
push
arpl
xor
scas
stc
mov
jl
mov
push
sti
loopne
cdq
rcr
xor
adc
sub
jo
mov
push
jp
sbb
lds
cmps
sbb
and
dec
sbb
add
das
sar
mov
outs
xor
push
inc
sbb
hlt
les
dec
pop
out
ja
push
hlt
clc
sub
test
cmp
mov
mov
mov
imul
int3
inc
cli
cmp
call
jo
cld
call
mov
fdivr
mov
xchg
ins
test
arpl
lds
ins
jne
(bad)
sbb
sti
test
jo
fisubr
jg
(bad)
nop
jb
jnp
push
mov
stos
inc
fwait
clc
aas
int
shl
mov
mov
xor
shl
or
mov
lods
mov
sub
inc
cs
cli
pop
lea
iret
xchg
or
mov
xor
fdiv
dec
sahf
sbb
adc
mov
cmp
retf
pop
test
iret
sbb
add
adc
push
pushf
mov
out
xchg
ror
fisttp
adc
(bad)
xor
(bad)
inc
push
out
lock
mov
add
cmp
outs
mov
sub
addr16
das
pushf
pop
sbb
mov
into
push
or
popa
push
mov
shl
xor
aam
xchg
movs
push
dec
ins
and
and
push
shr
in
cdq
inc
inc
ins
jmp
sbb
ret
ins
scas
popf
and
mov
xchg
je
or
dec
mov
mov
sar
and
cmps
and
icebp
popf
push
dec
lods
adc
jp
das
loop
movs
ja
jbe
or
mov
cmp
ret
mov
adc
xchg
shl
mov
xchg
dec
add
sub
sbb
mul
bound
pop
cmp
cmp
sub
lods
xor
fistp
and
and
and
test
xchg
ja
push
cld
or
xchg
ja
cwde
xlat
ror
js
ret
jne
and
in
mov
mov
add
add
daa
ret
add
dec
xor
movs
add
cmp
stos
(bad)
push
ret
out
imul
push
(bad)
sar
or
push
mov
into
rol
inc
inc
pusha
fmul
lods
inc
push
mov
out
jl
and
mov
jne
jp
xor
pop
mov
inc
imul
lock
jnp
mov
sub
cwde
je
add
mov
imul
cs
inc
out
sar
add
daa
jmp
xchg
push
enter
mov
test
adc
push
inc
dec
iret
push
add
movs
in
pop
inc
sbb
inc
push
push
ins
jmp
pop
jae
xlat
ss
pop
rol
push
xor
(bad)
push
and
adc
sbb
ins
push
je
int3
imul
repnz
xchg
jl
fbstp
sbb
and
test
ror
(bad)
push
xchg
daa
daa
lock
fidiv
les
or
fs
inc
push
dec
data16
sub
and
add
xor
xor
cmp
js
hlt
ret
sub
mov
das
xchg
sbb
mov
pop
mov
sahf
pushf
sub
cmps
(bad)
pop
inc
aaa
xchg
inc
jne
shl
cmp
(bad)
and
cli
push
jl
add
mov
stos
rol
cli
loopne
sub
and
pop
add
test
daa
jge
sbb
sub
cmc
sub
or
add
(bad)
push
mov
pop
sbb
pop
out
or
mov
outs
jg
mov
std
or
push
retf
mov
cmp
or
jno
pusha
bound
outs
sub
sub
pop
js
xchg
or
test
loop
mov
inc
mov
and
sub
ret
jle
jmp
ficomp
int3
call
sub
fcmovb
and
sub
out
sbb
pop
cmp
fs
gs
adc
sbb
or
sbb
in
(bad)
es
ja
mov
stos
mov
jo
jns
cmc
fsubr
aad
dec
mov
mov
jbe
je
push
pop
les
cmp
push
push
push
ja
(bad)
mov
loopne
fisub
in
jge
push
adc
sub
dec
aad
ret
test
pop
pop
sub
and
cmps
cdq
xlat
ds
adc
loopne
add
cli
jmp
sub
cmp
pop
push
arpl
mov
fcomp
sti
movs
cwde
shr
add
ins
sub
loope
aas
loope
into
dec
aam
sbb
in
mov
xor
xor
xchg
sahf
and
sbb
lods
inc
dec
test
jae
mov
test
stos
sbb
mov
test
lock
jo
lahf
inc
xchg
cs
gs
les
call
mov
mov
dec
jmp
push
fnsave
xor
sub
out
cmc
sub
out
cmp
xor
inc
cmp
or
div
mov
inc
jle
in
sub
push
dec
rol
pop
(bad)
leave
imul
mov
ds
jecxz
aam
scas
push
adc
sub
xor
in
pop
sbb
xor
pop
sti
cmps
pop
nop
stos
dec
pop
xchg
jecxz
mov
xchg
mov
sar
sbb
(bad)
mov
jnp
fs
int3
repz
inc
push
xchg
arpl
jecxz
xlat
ret
push
hlt
pop
add
xchg
and
movs
cmps
add
mov
(bad)
or
pop
les
push
in
out
rol
(bad)
mov
mov
cs
inc
in
bound
mov
push
xchg
adc
dec
or
jge
(bad)
fcomp
jmp
call
(bad)
cwde
mov
out
sti
int3
lea
std
in
jnp
dec
pop
lahf
jmp
sar
add
inc
jp
loop
jmp
repz
das
or
popa
inc
xchg
ins
and
out
popa
shr
pop
push
pusha
jo
aaa
daa
pop
xlat
shr
pop
push
ror
pop
pop
test
push
hlt
lock
cmps
adc
sbb
add
cmps
sbb
adc
js
je
pushf
dec
jge
adc
addr16
(bad)
cwde
pop
fisttp
popa
cli
cli
mov
cmp
sahf
adc
push
mov
pop
push
xchg
add
dec
into
mov
xor
xor
mov
int
add
pusha
stos
xchg
jno
ret
jne
ins
sbb
or
add
or
out
out
mov
xor
in
or
xchg
dec
ror
add
stc
adc
or
mov
dec
lea
hlt
add
inc
xchg
mov
add
inc
jnp
cwde
lods
dec
icebp
outs
inc
xchg
imul
mov
lods
mov
inc
(bad)
iret
scas
cld
sbb
jg
xchg
jns
in
or
stos
cmp
icebp
inc
push
(bad)
test
jecxz
fimul
(bad)
push
push
stos
push
(bad)
or
xchg
test
pusha
add
mov
and
out
std
mov
ds
aaa
adc
jecxz
stc
imul
je
dec
test
pop
int3
mov
fcmovu
popf
and
inc
mov
pop
mov
pop
retf
xor
pop
mov
pop
sub
mov
out
ja
or
fcomip
push
or
push
pop
(bad)
sub
pop
fst
mov
ret
pop
iret
mov
jle
xor
and
push
dec
mov
jecxz
lods
sub
xchg
fs
or
gs
das
int
call
into
adc
pop
add
push
sbb
xor
pop
pop
pop
mov
xchg
jmp
add
aas
cmps
je
in
in
adc
shr
sub
(bad)
push
or
mov
mov
or
xchg
dec
test
ret
clc
or
addr16
ds
xchg
enter
xor
fadd
dec
dec
ret
loopne
cmps
int
daa
add
(bad)
push
jbe
pop
push
sbb
mov
xchg
rcl
test
xor
(bad)
out
iret
test
mov
fwait
lock
add
xchg
sbb
sub
push
lock
push
xchg
mov
cmps
lahf
lock
or
idiv
push
push
fwait
add
xchg
ins
pop
jnp
cmp
nop
jmp
out
pop
xchg
pop
je
inc
add
mov
sbb
adc
cli
popf
jg
cmp
retf
add
int
imul
jae
pop
xor
shl
add
push
movs
sub
mov
mov
mov
leave
inc
sbb
push
sbb
daa
ss
mov
push
push
jbe
test
cmp
and
sbb
jbe
push
pusha
test
hlt
dec
mov
jge
and
xchg
fist
ret
sub
lock
add
mov
sbb
push
lock
sbb
int
inc
retf
sbb
pop
das
and
(bad)
xchg
leave
imul
cmp
adc
add
stos
rcr
mov
cs
xchg
push
jmp
xchg
dec
push
add
jns
xchg
lods
mov
pop
or
push
(bad)
iret
out
enter
push
js
cmp
pop
std
(bad)
xlat
mov
sub
scas
js
sahf
add
push
cmp
xor
popa
sti
add
mov
js
out
mov
ins
mov
test
jb
cmps
inc
aad
nop
mov
fsub
ja
in
pop
aam
pop
mov
xchg
jmp
inc
std
and
fdivr
ffreep
std
fs
(bad)
jnp
test
push
icebp
lods
inc
enter
cmps
bound
jle
scas
or
xor
sub
lock
adc
neg
adc
test
fsub
(bad)
call
mov
xlat
bnd
cmp
sbb
ins
aam
mov
sti
dec
xor
push
mov
cmp
xor
adc
inc
notrack
sbb
push
ret
cmc
push
mov
cmp
call
retf
jge
mov
fisttp
mov
pop
cmp
adc
fwait
cdq
mov
xor
cmp
loop
leave
mov
stos
push
stos
imul
scas
xchg
adc
mov
loope
leave
in
add
pop
out
pop
repnz
retf
dec
mov
xchg
push
iret
repz
cmp
test
in
jle
jnp
sar
dec
or
cmps
adc
out
rcl
sub
fidiv
dec
call
cmps
clc
mov
imul
cld
adc
inc
in
pop
mov
xchg
pop
stos
sbb
stos
dec
mov
jmp
sub
or
xchg
sub
jmp
movs
retf
push
loop
pcmpgtw
push
push
sahf
arpl
retf
xor
outs
adc
ins
fst
mov
pop
push
mov
push
or
push
jbe
jmp
neg
scas
cld
ja
add
scas
mov
aam
rcr
push
inc
mov
in
jl
arpl
pop
fwait
mov
gs
sbb
push
fnstsw
pop
adc
dec
cmc
push
ds
mov
jge
jmp
xchg
add
mov
test
cli
mov
push
xchg
adc
sbb
ret
sar
rol
jns
mov
std
test
sahf
gs
outs
xchg
add
cs
fs
adc
jecxz
mov
jb
add
push
push
mov
xor
sar
jl
mov
add
mov
shl
sbb
xchg
and
and
dec
mov
xor
xor
sbb
sbb
cdq
pop
xor
inc
dec
nop
and
mov
push
add
movs
pop
add
jns
mov
mov
jecxz
sbb
fiadd
imul
and
div
dec
pushf
xor
xor
repz
mov
dec
mov
xor
rol
xor
jnp
idiv
nop
out
add
fwait
jl
iret
test
cmp
test
out
or
retf
(bad)
arpl
mov
iret
fadd
jo
add
xor
fs
xor
fsub
je
stc
cli
push
out
lahf
cmp
std
fbstp
mov
test
pushf
scas
xchg
and
les
rcl
and
push
adc
or
mov
pusha
pop
jle
push
jle
push
adc
cmc
xor
inc
add
call
imul
bound
and
test
xchg
popf
add
pop
inc
dec
and
jmp
cld
mov
mov
pop
pop
push
test
scas
sub
out
jo
ja
adc
in
mov
(bad)
jbe
jae
cld
mov
or
repz
jmp
and
ds
fst
xchg
lea
add
test
sahf
sbb
jl
outs
sbb
test
dec
and
pop
mov
mov
test
stos
push
jb
pop
jl
push
mov
cwde
adc
jae
bound
mov
add
vorps
call
(bad)
and
pusha
stc
imul
sub
cmps
or
(bad)
mov
dec
mov
sub
xor
xor
aam
xchg
inc
stos
imul
jbe
fcmove
outs
sti
push
xchg
xor
test
cmp
mov
jl
xchg
and
enter
repz
push
mov
push
sub
icebp
les
jg
dec
adc
jae
call
cmp
adc
call
dec
jg
cmp
pop
movs
xor
sbb
cmp
test
xchg
xor
or
scas
rcl
push
inc
loopne
arpl
xchg
xor
pop
shl
fiadd
push
(bad)
in
xor
cli
cmp
outs
sbb
ins
push
ss
and
jns
mov
xor
mov
inc
cmps
xor
jne
jns
into
cmc
push
push
cmps
pop
xchg
jl
push
out
sub
mov
in
repnz
(bad)
sub
mov
add
ror
pop
jne
pop
mov
add
(bad)
dec
gs
scas
imul
ret
dec
in
push
xchg
jne
in
mov
jp
and
fwait
call
dec
add
scas
xchg
fnsave
int
cmp
ret
ss
xor
jge
outs
cs
lods
inc
mov
fimul
dec
jmp
mov
fwait
popf
test
jl
out
jecxz
out
and
push
xchg
ficom
adc
and
fndisi(8087
lahf
xlat
fsubp
mov
dec
mov
inc
icebp
retf
out
jl
lea
xor
popf
cwde
mov
xchg
dec
jmp
cs
xor
add
push
cmps
or
popf
ins
push
mov
jnp
call
shl
(bad)
sbb
mov
mov
adc
push
adc
inc
adc
inc
clc
adc
fist
cmc
out
sar
sbb
and
rcr
jg
cmp
mov
cbw
cs
scas
or
xchg
or
sub
jge
push
sbb
xchg
or
inc
add
or
xor
shl
mov
mov
add
cmp
or
out
jne
pushf
and
stos
test
dec
cmp
les
test
sub
inc
adc
js
add
outs
into
mov
sti
aaa
(bad)
cmp
pop
mov
iret
sub
pop
push
test
retf
or
mov
adc
mul
sbb
cdq
jb
cld
dec
clc
js
adc
pop
test
and
xor
and
xchg
fbstp
xor
push
arpl
cmp
mov
mov
jl
dec
test
mov
push
ins
mov
sbb
es
lock
call
jns
mov
sahf
xchg
cld
movs
dec
int
mov
data16
push
lods
repz
fisttp
sbb
jge
push
mov
je
iret
mov
das
jmp
jl
pop
lods
(bad)
sub
inc
pop
fst
jns
(bad)
in
mov
add
gs
sub
jne
shl
pop
(bad)
jg
mov
pop
xchg
adc
add
dec
jp
das
call
adc
gs
cdq
iret
rol
mov
add
cmp
rcr
into
mov
pop
cmps
mov
pop
xor
outs
mov
and
fs
ss
add
mov
and
call
jno
fs
push
mov
sub
dec
adc
sbb
mov
mov
jecxz
jmp
fld
cmps
fldenv
lahf
fstp
in
xchg
imul
jle
fdiv
hlt
jmp
push
stc
add
inc
mov
push
inc
cwde
and
jnp
pusha
cs
pop
dec
out
repnz
int3
and
jge
test
pop
sbb
iret
cli
arpl
test
ja
mov
pop
push
outs
daa
test
fs
inc
aaa
jb
(bad)
enter
adc
je
nop
das
xor
clc
mul
adc
(bad)
mov
dec
fucomp
cmp
imul
xor
xchg
adc
cmp
push
push
cmp
lds
test
push
bound
(bad)
in
jbe
mov
mov
push
test
test
js
cmps
adc
jmp
push
daa
mov
scas
clc
mov
es
mul
iret
or
cli
or
xor
test
(bad)
or
fisubr
rcl
xor
jae
xchg
sti
xchg
or
inc
cmp
lea
xor
adc
mov
lods
lock
outs
loop
jno
mov
movs
push
in
sbb
sub
fimul
dec
aad
test
fisub
sbb
inc
inc
ss
push
fidiv
retf
xlat
jmp
add
dec
inc
inc
mov
lea
xlat
push
or
fstp
and
dec
fucom
and
jno
mov
sub
add
(bad)
jle
les
rcr
inc
in
int
retf
jbe
add
mov
push
enter
repnz
sub
das
pop
cmp
or
ror
jne
or
pop
mov
fbstp
jo
mov
or
es
push
xabort
sub
sar
or
test
test
pushf
(bad)
ins
xchg
stos
sbb
adc
loop
dec
cmp
xchg
fs
inc
push
sub
jbe
and
mov
in
and
popa
jmp
inc
daa
popa
jb
ja
imul
rol
pop
xchg
mov
retf
pusha
jmp
out
sbb
sbb
(bad)
out
pop
call
mov
dec
ja
dec
popa
sti
iret
je
outs
sub
mov
test
fmul
dec
pop
inc
sub
clc
test
jmp
ds
cmp
out
in
inc
pop
fdiv
in
ret
cmp
adc
or
cmp
xor
out
je
cmp
jge
ds
cmps
call
nop
aaa
sti
push
inc
pop
ja
jb
aam
mov
movs
std
xor
(bad)
lea
pop
add
in
mov
sar
mov
pop
fstp
sbb
shr
aas
cwde
ror
loope
jl
sar
test
fcom
out
jno
jge
cmp
xchg
pop
rol
pop
mov
push
scas
addr16
ja
and
ret
std
cmp
mov
add
jmp
jge
mov
sbb
jg
out
pop
adc
int3
ins
xchg
cld
cmps
mov
fwait
push
shl
in
je
les
mov
nop
pop
js
scas
and
jns
cld
daa
mov
add
(bad)
lods
dec
cmp
imul
mov
(bad)
pusha
out
neg
push
xor
cmp
ret
jne
rcr
adc
shr
loop
addr16
das
aas
mov
ret
pop
sub
arpl
aad
dec
outs
lock
xchg
mov
out
xchg
test
lods
cs
mov
fcomp
data16
mov
fld
sbb
mov
neg
xor
fnstsw
mov
ret
dec
jo
fdiv
jle
popa
in
lds
xor
inc
hlt
mov
pop
retf
fs
sahf
mov
inc
fdivr
sub
sub
stos
mov
sbb
retf
push
clc
mov
adc
iret
in
inc
push
sbb
sbb
bnd
aas
xchg
cmp
dec
jns
pop
add
test
fwait
in
mov
lds
stc
xchg
push
dec
sbb
or
sahf
into
sub
mov
cmp
push
or
loop
inc
retf
(bad)
ficom
ds
(bad)
pop
mov
(bad)
adc
js
push
jl
gs
retf
or
cld
jne
adc
mov
jge
xor
xlat
hlt
std
test
test
das
arpl
cmp
or
pop
adc
cmps
sti
movs
(bad)
fbstp
xchg
in
sub
dec
sub
mov
shl
sub
cmp
inc
int
lods
ja
retf
mov
call
inc
pop
sbb
(bad)
aas
xorps
mov
arpl
mov
arpl
adc
jge
pop
(bad)
in
xchg
push
jl
ss
les
retf
retf
out
daa
and
and
dec
inc
mov
add
mov
cs
faddp
outs
xor
inc
(bad)
jae
addr16
shl
mov
imul
add
xchg
data16
fsub
xor
movd
es
jp
inc
dec
(bad)
adc
aam
mov
push
std
out
jns
pop
popa
cwde
sub
rol
or
ins
dec
daa
jmp
mov
add
inc
les
cwde
xchg
pusha
or
mov
sub
cmp
sub
test
xor
push
cmp
repz
ror
cmps
fs
cmp
or
add
dec
aad
popf
std
push
div
sub
push
jae
hlt
mov
test
jle
jb
xchg
mov
lods
adc
pop
and
xor
stos
xor
and
push
loop
dec
and
imul
sub
jns
pop
sub
and
shl
jns
stos
(bad)
jl
in
sub
xor
jmp
xchg
ins
xchg
lahf
imul
not
dec
mov
enter
mov
rcr
pop
dec
ins
or
mov
in
xor
test
jns
jnp
cwde
int3
mov
xor
pop
cmps
mov
lock
ins
and
rcr
sub
sbb
retf
xor
lock
dec
or
stos
pop
shl
scas
or
lods
movs
scas
es
rcl
add
push
ret
retf
fwait
mov
fwait
jne
daa
cmp
outs
inc
iret
cdq
sbb
cmp
cwde
and
mov
daa
fistp
add
int
sub
popf
mov
dec
sbb
and
sbb
stos
test
sub
inc
int
adc
lods
jbe
push
retf
hlt
push
lods
mov
lds
adc
mov
loop
inc
mov
or
fldenv
inc
mov
mov
js
mov
adc
repz
jo
add
push
cmp
loopne
push
movs
adc
xchg
jnp
xchg
dec
mov
push
(bad)
mov
xchg
jo
loop
xor
repnz
sbb
pop
and
dec
shl
js
xchg
adc
scas
test
fstp
das
ror
out
out
add
lock
loop
fisttp
into
mov
shl
mov
and
mov
test
and
gs
leave
pop
mov
and
add
sbb
js
xor
xor
shr
dec
mov
mov
pop
addr16
sub
xor
sub
shl
test
test
addr16
adc
push
xor
jl
cdq
inc
and
pop
adc
mov
push
push
fisttp
in
fdivr
fmul
pop
(bad)
and
push
xchg
xor
imul
inc
add
mov
sub
retf
pushf
ret
inc
cmp
mov
push
cmp
mov
cmp
test
and
shr
mov
movs
mov
mov
fsub
scas
ja
fucomp
add
cmp
dec
jbe
stos
xchg
xor
sub
into
hlt
jmp
out
pop
sbb
cmc
sub
ja
pop
and
fucomi
adc
loop
cmc
fsub
mov
aad
or
push
add
sbb
sar
cmp
pop
push
cmps
shr
call
mov
fs
add
dec
mov
mov
repnz
ror
lds
sti
mov
jmp
scas
stos
push
loope
scas
(bad)
lds
in
sbb
xor
cdq
dec
repz
fisub
push
or
cli
mov
xor
outs
dec
cli
ret
jo
push
push
cmp
jge
push
test
mov
push
xchg
fadd
lods
sbb
add
aas
xchg
pop
and
mov
repnz
jne
jnp
dec
lock
lds
adc
xor
(bad)
jno
xor
bound
sub
xadd
add
push
test
xor
repnz
mov
pop
inc
aas
call
das
stos
cmp
xor
or
or
ins
and
adc
push
adc
and
adc
mov
cmc
add
cmps
daa
xchg
pop
pop
push
ror
lods
out
inc
pop
(bad)
mov
jmp
fchs
mov
push
mov
pop
mov
cmps
dec
fbstp
mov
scas
data16
(bad)
call
mov
push
ja
out
cdq
rcl
mov
push
(bad)
(bad)
out
ins
xchg
inc
in
movs
out
jns
shl
jge
loopne
out
call
inc
mov
push
repz
dec
das
add
jne
dec
leave
jge
pushf
jg
pop
fwait
bound
push
int
sbb
mov
test
sub
push
mov
mov
push
inc
jmp
xor
or
mov
sub
lea
mov
and
in
dec
add
push
fadd
push
dec
in
push
inc
je
outs
push
fist
xchg
out
mov
mov
push
push
sbb
scas
mov
or
cmps
cmp
int
outs
jle
bound
sub
dec
push
or
leave
daa
in
push
stos
dec
cmp
mov
outs
shr
rcl
jecxz
inc
dec
bound
ins
add
test
mov
cli
pop
dec
sub
ret
sbb
addr16
int
pushf
retf
out
pop
retf
adc
inc
sub
loop
add
add
cmc
mov
test
dec
movs
inc
jg
xor
xchg
dec
mov
mov
xchg
xchg
cs
push
xchg
jno
xor
das
push
cmp
jge
movs
clc
mov
lds
sub
dec
inc
pop
sti
aaa
inc
push
mov
dec
sub
pop
xchg
int
ins
pop
and
cmp
popa
cmp
push
adc
in
out
imul
pop
xor
jge
add
xchg
inc
cmp
scas
cs
mov
loop
xchg
fcmovbe
lods
jge
push
aam
mov
rcl
rol
push
sub
ins
sbb
loop
cmp
dec
daa
jns
pusha
shr
xchg
and
jmp
out
inc
jne
add
mov
fst
push
or
test
scas
int3
dec
out
in
int3
movs
push
xchg
or
dec
or
mov
stos
outs
mov
sahf
push
xchg
adc
es
pop
xchg
mov
jmp
add
mov
gs
and
or
jb
ror
push
mov
cld
jg
ja
xchg
xor
mov
pop
retf
mov
dec
pop
cmp
mov
mul
ficomp
xor
sti
fistp
ss
pop
jmp
adc
push
pop
xor
dec
iret
push
(bad)
fisub
jmp
pop
cmps
cmp
cmp
and
cmp
(bad)
ss
jg
sbb
mov
cmps
cmp
dec
push
xor
into
sub
dec
sub
jp
xchg
rol
jl
pop
scas
out
idiv
imul
fwait
mov
aas
ja
xor
inc
sub
das
sti
outs
jp
call
test
xchg
int3
xchg
or
stos
popa
xor
pop
pop
stc
test
in
mov
mov
mov
in
push
(bad)
daa
mov
adc
fisub
xor
sub
rcr
adc
mov
xchg
adc
or
xchg
lods
ins
cmps
adc
push
in
sub
rcl
sbb
imul
in
iret
push
mov
fdiv
std
movs
int3
sub
xor
ror
push
sbb
pop
mov
xchg
pop
push
cmc
and
mov
cmps
in
xchg
adc
cmp
repz
into
xchg
pop
xlat
shr
adc
das
push
das
sub
(bad)
inc
sub
popf
or
adc
dec
jae
mov
lahf
int3
in
into
rcr
mov
mov
call
rcl
daa
xlat
cwde
push
lds
rcl
adc
push
sbb
mov
enter
inc
in
stos
jmp
das
or
mov
ret
pusha
das
cmc
mov
adc
mov
mov
xchg
iret
call
xor
fdiv
xor
sbb
mov
push
xchg
ficom
jmp
jb
jecxz
inc
cmp
leave
adc
xor
stos
rcl
adc
xor
(bad)
or
ins
inc
enter
int
mov
aaa
cmp
leave
jno
mov
mov
sti
xchg
(bad)
neg
arpl
inc
push
out
stc
xor
add
sub
iret
or
(bad)
ror
nop
out
cmc
dec
sub
mov
data16
imul
mov
xor
fisub
int3
add
push
addr16
push
mov
cdq
cmps
pop
jb
int
xlat
inc
js
std
inc
or
mov
push
mov
push
mov
lock
jbe
pop
xchg
jecxz
test
lea
mov
sbb
rol
popa
scas
lea
push
add
sahf
adc
and
(bad)
mov
test
pop
xor
out
mov
jecxz
adc
loope
iret
(bad)
outs
adc
shl
sahf
lds
in
sub
xchg
cmp
data16
dec
sbb
(bad)
popa
fdivr
gs
int3
mov
mov
push
hlt
xor
lds
xor
xchg
out
stos
xor
and
mov
ins
xor
mov
mov
xor
inc
and
pop
jne
adc
in
jae
arpl
(bad)
xor
(bad)
push
retf
dec
dec
xor
xchg
fist
mov
jmp
xor
lods
das
loope
jb
and
fnstcw
push
xchg
sbb
pop
popf
sub
loopne
gs
sbb
mov
add
sub
lea
sbb
sub
push
sbb
cmp
mov
pop
sbb
inc
adc
mov
jmp
mov
adc
xlat
lds
nop
cwde
ins
inc
out
xchg
aaa
and
mov
pushf
lock
stos
fisub
mov
dec
cmc
mov
push
and
not
inc
outs
cmp
pop
outs
mov
sbb
repnz
push
jmp
(bad)
or
push
std
xchg
lds
sub
inc
xchg
pop
push
arpl
sbb
mov
push
fwait
fwait
mov
stc
(bad)
cmp
cmp
mov
mov
mov
repz
outs
test
je
jbe
mov
mov
mov
dec
mov
mov
data16
mov
push
adc
sbb
out
dec
xchg
mov
mov
jbe
xchg
dec
ja
repz
lods
ret
inc
arpl
fist
mov
mov
push
imul
call
inc
xor
dec
cmps
mov
ja
cmps
mov
push
xchg
adc
mov
addr16
stc
test
pop
dec
iret
cmp
retf
out
out
mov
pop
out
sub
mov
shl
inc
(bad)
ror
scas
sub
mov
mov
aas
ins
ins
or
(bad)
dec
outs
pop
hlt
and
and
inc
mov
aaa
mov
scas
xchg
leave
lods
in
adc
std
jb
fbld
sar
adc
pop
inc
xor
fistp
mov
out
inc
out
ja
lea
cmc
adc
xor
xor
sub
lea
xchg
ins
(bad)
cmp
cmc
mov
inc
popa
ss
sbb
sbb
stos
in
test
jg
call
test
push
sbb
test
add
adc
and
sub
ins
cwde
stos
sbb
call
cld
sub
imul
lods
adc
mov
jl
mul
dec
call
mov
sbb
stc
loopne
mov
jno
and
push
mov
sbb
dec
arpl
mov
mov
into
or
inc
mov
mov
stos
cmp
outs
arpl
daa
jbe
lock
mov
mov
retf
mov
(bad)
dec
sub
sbb
test
mov
mov
push
mov
mov
jmp
mov
xor
dec
retf
mov
sbb
jne
movs
mov
add
sbb
xchg
inc
hlt
xchg
mul
rcl
dec
xchg
xor
stos
xlat
push
sti
call
fs
push
fstp
fisub
inc
pop
push
daa
les
add
or
(bad)
add
dec
mov
jecxz
xchg
dec
dec
daa
sub
mov
addr16
cmp
push
in
xor
idiv
and
mov
leave
pop
repz
ins
add
call
jmp
mov
mov
lahf
dec
leave
push
scas
lock
or
pop
pop
dec
and
mov
std
pop
shl
fimul
(bad)
cmp
push
out
dec
sahf
push
jg
push
adc
clc
mov
and
cmp
jl
ror
push
jecxz
in
inc
(bad)
stc
daa
hlt
fwait
adc
mov
fild
mov
sahf
in
pop
inc
das
test
and
ins
mov
das
call
loope
sbb
jo
add
nop
int3
mov
or
xchg
scas
xor
sbb
adc
cs
pop
jmp
sub
xchg
sbb
mov
call
jg
stos
mov
or
icebp
and
and
ins
adc
das
dec
add
out
hlt
idiv
clc
dec
aad
ins
dec
pop
or
pop
xchg
ret
test
pusha
xor
mov
push
gs
xchg
nop
shl
add
dec
jno
mov
test
mov
cmps
fucom
leave
xor
repnz
jbe
rcl
scas
push
(bad)
clc
lods
adc
mov
and
imul
int3
fwait
and
hlt
mov
lds
sub
and
dec
adc
sbb
push
cmc
inc
fwait
mov
and
push
xchg
xchg
mov
adc
fisub
push
pop
sbb
aad
fidivr
nop
stos
xchg
out
(bad)
loope
out
xchg
and
add
mov
(bad)
pop
cmps
scas
sbb
mov
ret
in
push
mov
loopne
rcr
aam
ins
add
dec
out
lds
xlat
xchg
test
call
das
xchg
and
sub
pushf
sahf
test
sahf
jge
test
out
je
sub
ss
cli
jnp
and
cmp
xchg
ret
mov
xor
xor
fsubrp
mov
jmp
icebp
(bad)
xlat
loopne
pop
shl
cmp
aam
in
arpl
test
jno
fwait
lds
mov
cmp
mov
jle
push
cmp
cmp
in
jmp
cli
call
aas
xchg
add
mov
jge
jns
dec
jecxz
stc
mov
bound
sbb
jecxz
cmp
and
test
shr
jp
cmp
sub
mov
mov
mov
jae
jecxz
test
pop
movs
xor
jl
xchg
pop
pushf
and
pop
mov
sub
sub
mov
jo
(bad)
mov
mov
std
mov
push
sub
test
call
push
mov
in
jp
lds
sub
cmps
cld
loopne
push
daa
bound
mov
ds
pop
iret
mov
div
outs
xchg
mov
push
pop
nop
ror
repnz
cmc
ja
inc
pop
int3
scas
fstp
aas
jl
mov
outs
jmp
sub
mov
jmp
in
xor
cmc
and
dec
xor
mov
jge
sub
jbe
xor
xor
mov
cmp
icebp
jge
jg
or
mov
jmp
mov
ja
sti
adc
inc
mov
or
popf
mov
rcr
(bad)
push
(bad)
mov
xor
lea
test
(bad)
stos
mov
jns
mov
sbb
scas
mov
add
cli
jmp
data16
test
mov
sub
rol
jl
je
pop
sub
jp
mov
jl
imul
nop
or
arpl
mov
mov
out
sahf
retf
jbe
mov
add
dec
adc
xor
adc
pop
pushf
xor
xchg
jb
mov
sbb
add
loopne
cwde
mov
js
inc
xchg
or
push
sub
cld
pop
movs
arpl
nop
cmps
jo
xor
out
jmp
icebp
imul
cmp
ss
cs
mov
jne
jmp
inc
in
add
push
dec
lock
out
xchg
stc
(bad)
or
repz
lea
mov
push
movs
jecxz
test
push
and
dec
xor
bound
xchg
js
and
and
stos
or
outs
in
adc
push
mov
int
pop
add
in
pop
push
(bad)
push
aad
mov
dec
loope
leave
xor
aaa
xor
fsubr
fsubr
jmp
das
or
jp
push
bound
cmp
clc
pop
mov
jbe
cmp
mov
je
in
int
(bad)
jl
sbb
inc
jle
aas
in
push
fistp
outs
ret
inc
ret
loope
les
(bad)
mov
addr16
sbb
mov
adc
add
lock
hlt
pop
or
mov
mov
nop
pop
rcr
mov
adc
sub
xchg
fldenv
call
pop
mov
inc
popf
mov
dec
gs
(bad)
adc
int
in
jb
xchg
adc
and
sub
jmp
push
outs
add
add
jmp
ret
xor
mov
jne
pop
pop
js
call
ret
in
adc
movs
lock
enter
mov
js
inc
or
push
movs
mov
xchg
lds
cmps
push
and
lds
rcl
mov
xor
sub
lds
or
xor
xor
mov
lahf
adc
inc
pushf
mov
test
mov
test
(bad)
inc
retf
jl
cdq
je
fwait
sar
std
sbb
or
and
cmp
ins
sub
loopne
mov
movs
add
cwde
aaa
add
into
fisub
add
pusha
or
xchg
sar
xor
enter
cmp
bound
aad
push
imul
sub
inc
cli
out
lods
test
cli
outs
push
jmp
das
not
in
mov
add
mov
sbb
xchg
sub
in
cmp
push
mov
push
cs
aam
add
add
ror
jo
fisubr
ror
mov
dec
push
gs
in
push
ror
and
inc
push
pop
ds
out
and
aas
int3
out
popf
xchg
or
mov
sahf
adc
arpl
xchg
jmp
inc
rcl
mov
xor
sbb
aad
arpl
jp
stos
push
pop
push
xchg
movs
pop
mov
in
pop
adc
outs
jmp
push
sbb
jne
xlat
mov
push
(bad)
sub
push
loop
(bad)
cli
mov
(bad)
sets
pop
icebp
sbb
int3
push
imul
inc
aad
enter
int3
lea
cmp
repz
jle
mov
test
mov
sbb
jmp
jecxz
frstor
sub
jb
ja
xchg
icebp
jmp
shr
adc
ror
fs
mov
mov
sub
cmp
lock
loop
int3
jno
js
jno
iret
mov
je
inc
mov
dec
pushf
shr
in
cmc
xor
mov
ins
mov
lods
cmps
popf
mov
iret
int3
ror
pop
add
xchg
cmp
retf
mov
ds
ret
mov
retf
push
push
mov
push
fisttp
adc
test
or
fst
iret
sbb
aad
stc
fistp
icebp
push
or
stos
hlt
xlat
cmp
xor
and
mov
jge
dec
mov
loopne
icebp
adc
push
jl
sbb
adc
jbe
test
fdivr
push
mov
mov
stos
shl
sbb
or
out
push
xchg
mov
cdq
xor
lods
jmp
ret
out
repz
je
imul
mov
repz
jo
mov
dec
into
test
push
and
iret
repnz
retf
adc
dec
call
xchg
adc
pop
or
adc
ftst
jbe
idiv
pushf
xchg
jne
jne
lock
cmp
fimul
fld
out
sub
cmp
test
pop
scas
push
rcl
cdq
sbb
sbb
repz
jecxz
xchg
fsubr
push
into
or
movs
mov
jge
mov
push
bound
mov
out
mov
push
jle
mov
mov
mov
fdiv
imul
jno
enter
dec
(bad)
dec
add
or
imul
pop
and
xchg
fmul
or
mov
push
push
fcmovnu
hlt
xor
daa
call
add
into
je
sub
mov
out
bound
or
mov
xchg
ds
lea
test
mov
pop
lods
rol
mov
in
jb
shl
or
movs
jb
gs
ss
es
arpl
or
fst
mov
test
es
sar
ror
inc
pop
and
jmp
lds
xchg
sbb
mov
shl
inc
dec
aaa
cli
(bad)
xchg
call
pop
mov
repnz
fstp
fdivp
popa
and
mov
sbb
ins
pop
xchg
sbb
(bad)
pop
ds
push
pop
arpl
dec
fstp
sbb
loope
aam
add
(bad)
xchg
aas
dec
adc
xlat
dec
sub
iret
push
jle
xchg
mov
dec
adc
call
jmp
das
adc
out
xchg
adc
inc
adc
xchg
inc
sub
icebp
js
bound
dec
in
adc
sbb
sub
inc
rcl
push
call
outs
out
xor
fwait
ror
push
mov
or
iret
jbe
popa
bound
inc
repz
sub
enter
arpl
mov
inc
jns
ret
imul
mov
fnstcw
test
(bad)
mov
test
ja
outs
scas
cmp
ins
push
or
pop
mov
add
je
or
pop
fsubr
sahf
cli
lea
dec
add
pop
das
mov
cmp
std
jp
repnz
jmp
(bad)
dec
push
iret
mov
daa
adc
mov
lds
inc
add
imul
mov
cmps
outs
xlat
mov
pop
push
out
movs
cmp
fs
aad
popa
ja
cmp
adc
mov
into
fidivr
std
sbb
ds
or
cmp
into
in
pop
cmovno
jmp
or
je
cmp
repz
bound
sbb
xor
ret
mov
pop
inc
sub
loopne
dec
or
inc
clc
inc
cmp
cmps
pushf
and
iret
sti
(bad)
fwait
xchg
sbb
and
xchg
lea
xchg
jns
push
cs
pop
jns
not
out
mov
sar
push
pop
push
ss
jmp
enter
stos
jge
scas
push
jbe
scas
sbb
sbb
inc
jns
sub
test
hlt
repnz
test
push
inc
test
jmp
pop
popa
jge
jge
repnz
adc
stos
(bad)
cmp
ret
out
sub
lds
jmp
test
jmp
adc
sub
outs
(bad)
cmp
xchg
loop
mov
mov
mov
stc
mov
add
adc
call
daa
(bad)
shl
pop
scas
and
arpl
mov
dec
int3
sahf
fnstenv
cdq
bound
xchg
dec
(bad)
jno
cmc
xor
ins
mov
test
(bad)
push
mov
or
sar
dec
xchg
inc
jnp
dec
jp
mov
add
jo
mov
popf
lods
add
retf
stc
xor
xor
jns
cwde
mov
aas
movs
repnz
ja
fs
sbb
xor
fs
das
mov
movs
ds
data16
and
dec
jmp
aad
ror
pop
sbb
out
pop
pop
jae
xchg
sub
les
mov
mov
retf
movs
js
mov
outs
add
ud0
int
xor
cmp
adc
adc
iret
fwait
loope
lea
std
lock
movs
fucomp
ss
mov
clc
jnp
mov
lock
aas
sub
push
dec
js
enter
or
mov
adc
mov
pop
mul
adc
xchg
sub
and
cmc
clc
cmps
mov
and
aam
cmp
(bad)
mov
sbb
hlt
or
pop
mov
data16
push
rol
push
and
aam
not
pop
(bad)
stos
ds
jp
or
and
dec
mov
fst
push
cmps
jecxz
jo
lock
cmp
sbb
cmp
arpl
fadd
dec
xchg
mov
xor
push
mov
ror
icebp
mov
mov
test
pop
in
pop
imul
xchg
test
pop
(bad)
xor
in
mov
pop
jae
dec
pop
dec
loopne
or
call
jl
mov
ret
mov
and
popf
clc
cmps
sbb
xor
stc
sahf
out
push
cdq
mov
and
out
adc
mov
push
jae
fs
stos
mov
jnp
mov
or
das
lds
pop
sub
(bad)
xchg
push
fstp
inc
sub
dec
stos
test
mov
adc
push
sbb
lahf
stos
mov
mov
leave
jl
ja
and
js
jmp
adc
adc
cmp
push
cdq
fadd
mov
jno
pop
std
mov
adc
popf
jmp
jo
xor
test
sbb
movs
lahf
mov
mov
int
jnp
xchg
and
nop
inc
dec
cmp
cmp
jmp
or
or
and
mov
adc
pop
fcom
call
jmp
repz
jo
pop
or
push
inc
sub
xchg
add
push
pusha
dec
gs
or
mov
mov
xchg
mov
movs
fdivr
mov
xchg
outs
xor
inc
sbb
into
cmp
mov
ja
mov
adc
add
das
adc
mov
popa
dec
scas
cmps
add
add
push
loope
lds
jl
adc
lock
lods
cli
test
mov
adc
adc
mov
jle
into
dec
mov
xor
and
cmp
jge
mov
aas
sbb
ja
xor
mov
mov
(bad)
enter
jmp
dec
mov
cdq
xor
pop
fstp
dec
mov
sub
push
in
adc
gs
fdiv
adc
aam
xchg
xlat
and
addr16
es
sub
cmc
sbb
dec
jge
sub
ror
inc
ret
mov
mov
lods
inc
pop
test
loopne
mov
push
jb
(bad)
sti
adc
test
mov
fmul
push
sbb
popw
lea
into
bound
mov
xor
arpl
ja
icebp
out
outs
retf
sub
or
int
adc
adc
xchg
pusha
add
lods
xchg
add
(bad)
xor
sti
or
test
popa
push
xchg
mov
dec
bound
clc
loopne
daa
outs
jp
jge
and
mov
sbb
fisubr
sub
dec
iret
icebp
xor
je
ror
int3
(bad)
retf
sub
shr
sbb
(bad)
fldcw
std
call
rol
add
pop
(bad)
aam
lds
sar
jo
adc
xchg
out
and
push
mov
(bad)
in
pop
xchg
push
stos
lahf
inc
ret
ja
ret
adc
sahf
(bad)
inc
or
sti
mov
lea
xor
ret
retf
xchg
(bad)
dec
mov
je
sbb
lds
in
scas
icebp
and
cmp
pop
add
hlt
inc
daa
pop
or
es
sub
dec
or
xor
retf
ret
in
cmp
lea
out
retf
jl
sbb
and
loopne
cld
push
std
xchg
mov
ja
mov
mov
cmp
nop
mov
jl
sbb
add
leave
mov
or
jnp
inc
repz
pop
or
sub
imul
xor
je
imul
rcr
dec
pop
out
jno
mov
fild
idiv
pop
mov
shr
data16
outs
mov
or
divps
outs
jno
leave
mov
mov
aam
cwde
fnstenv
jmp
out
cmps
xchg
inc
mov
js
sub
cmp
or
mov
aaa
and
popa
dec
cs
pop
sub
rcl
jle
ins
(bad)
and
adc
add
mov
movs
retf
add
mov
xchg
jmp
pop
mov
lahf
jge
ins
jo
mov
sbb
inc
jge
iret
shl
sbb
cs
sbb
mov
push
pop
xchg
mov
cmp
rcl
ja
rol
dec
xchg
adc
gs
(bad)
scas
inc
push
and
je
ss
jno
retf
dec
(bad)
pop
out
mov
mov
(bad)
push
outs
inc
dec
(bad)
cli
adc
mov
sub
clc
test
hlt
mov
inc
pop
jge
adc
and
sub
xchg
or
mov
imul
dec
or
mov
(bad)
ss
sbb
(bad)
ret
je
jmp
pop
mov
jg
mov
and
cli
gs
scas
std
mov
adc
cmp
repz
push
call
mov
push
mov
(bad)
and
jmp
aaa
pop
xor
or
fild
fdiv
lods
retf
je
xor
fdivr
cli
sbb
inc
inc
pop
scas
fild
push
push
dec
stos
lods
out
add
loope
pop
sahf
dec
xor
stos
and
jno
test
out
ja
xchg
in
out
icebp
test
scas
les
fist
pop
or
xchg
fs
ja
dec
enter
mov
sub
xchg
inc
xor
(bad)
retf
stos
fsub
jl
mov
dec
ret
push
clc
mov
push
or
push
(bad)
ins
xlat
mov
loopne
jo
inc
and
retf
sbb
adc
shl
jo
loope
fcomp
sti
pop
fadd
out
sub
hlt
pop
mov
retf
(bad)
cld
lea
mov
addr16
or
adc
dec
xor
data16
cmp
xor
popf
xor
pop
sbb
scas
adc
xchg
ss
neg
push
enter
aam
sub
ds
xchg
ss
les
icebp
ror
mov
mov
jg
test
mov
shr
cwde
and
mov
jae
mov
push
sub
cmp
gs
test
cmp
jmp
fisub
fidivr
stos
sbb
retf
xor
sbb
test
(bad)
imul
cs
dec
or
push
inc
sub
push
adc
and
stos
and
jne
cmc
add
inc
daa
shl
mov
fwait
inc
add
mov
add
mov
xchg
clc
pop
cmp
out
or
sub
xchg
dec
xchg
sbb
mov
dec
inc
aad
mov
das
call
cmps
mov
pusha
retf
ins
pop
popa
iret
das
gs
cli
add
mov
fdiv
xchg
jae
jns
int
ffree
pop
clc
fcmovnb
mov
sub
xchg
int
ficomp
js
xor
aas
or
inc
in
pop
add
mov
jp
xlat
dec
jmp
cmp
aam
in
and
fs
jp
nop
xor
fwait
stos
dec
or
mov
out
mov
lock
push
adc
(bad)
rol
test
jle
mov
or
sti
cmp
inc
int3
imul
jl
cli
xor
xchg
add
xor
pushf
lea
sub
(bad)
mov
pop
sti
push
jo
sub
leave
cdq
jmp
out
sbb
xor
push
dec
cli
xor
cmp
bound
dec
sbb
test
dec
nop
or
stc
pop
std
jne
stos
pop
test
outs
(bad)
adc
lock
mov
push
sub
ja
enter
dec
push
push
add
cli
push
retf
fisubr
push
out
call
and
ins
xor
movs
jmp
(bad)
lahf
mov
cli
stos
push
adc
jmp
sbb
stos
call
cmp
add
jne
xchg
mov
push
daa
mov
out
mov
(bad)
clc
clc
push
jg
std
(bad)
scas
out
(bad)
dec
jo
pop
retf
daa
jle
(bad)
jmp
adc
retf
cmps
sahf
and
xor
or
and
(bad)
aam
mov
fcmovnbe
fcmovnu
push
scas
dec
pop
stos
and
sbb
xlat
fmul
int
mov
rcr
dec
jne
frstor
es
cmc
add
sub
mov
cmp
loope
push
inc
push
jbe
xor
jle
popf
cdq
int
(bad)
outs
push
jge
not
pop
repz
pushf
push
test
mov
lods
arpl
push
lock
cld
sub
mov
dec
test
(bad)
jnp
(bad)
jg
xchg
cli
sar
scas
scas
movs
aas
adc
leave
clc
push
pop
(bad)
icebp
mov
xchg
std
stc
iret
pop
test
aaa
xor
add
shr
pop
fcomp
push
mov
cmp
or
or
sti
fld
icebp
movs
aam
ss
(bad)
mov
lock
xlat
sub
add
xchg
out
mov
xor
lds
and
and
mov
mov
call
sbb
movs
adc
test
jp
out
push
and
imul
xor
add
rcr
push
outs
jge
nop
ss
inc
in
shl
loope
xacquire
pushf
mov
aas
cmp
stos
mov
cmps
ret
push
sbb
xchg
mov
stos
fs
sbb
dec
or
xchg
inc
lahf
cli
or
cmovl
pushf
pop
test
jl
not
jl
inc
(bad)
pop
call
xchg
add
dec
mov
cmc
fistp
aas
movs
cmp
adc
pop
inc
(bad)
xlat
jb
ss
adc
psubsb
clc
outs
stos
stos
push
(bad)
lods
enter
or
lods
pop
pop
and
fisttp
cmp
shl
(bad)
inc
sbb
push
test
mov
mov
popf
xchg
out
adc
(bad)
enter
aad
out
sahf
push
jl
fwait
mov
push
ins
mov
cmp
stc
mov
popa
icebp
xor
aaa
push
mov
loop
add
inc
cmp
call
dec
pop
aas
adc
fucomp
cli
pop
cs
cmps
add
loopne
out
jne
into
and
daa
lods
mov
je
cmp
repz
lods
cmps
xor
pop
dec
mov
mov
mov
js
call
dec
mov
mov
xor
jno
push
iret
push
mov
and
cmp
in
add
add
inc
dec
popf
clc
pop
nop
cmp
in
xchg
mov
shr
or
xchg
lahf
repz
(bad)
imul
cli
cmps
aam
lods
push
add
xor
daa
nop
push
in
jne
pop
in
cmps
mov
into
pop
adc
mov
dec
ret
aas
(bad)
ins
aad
aad
movs
sbb
cmp
xor
add
enter
pop
mov
popa
retf
add
jge
cmp
ins
test
ins
icebp
xchg
and
leave
mov
cmp
adc
jl
push
sub
iret
addr16
push
xor
mov
mov
into
idiv
xlat
pop
inc
or
mov
cmp
test
xchg
push
aas
std
xor
push
fcmovnb
out
adc
jne
(bad)
inc
push
call
(bad)
retf
lock
push
imul
jg
add
popf
ret
cmp
(bad)
lods
rcr
push
fcmovb
loopne
sbb
xchg
xchg
sbb
nop
std
nop
stc
rcl
inc
adc
fwait
mov
push
aaa
inc
jmp
mov
xchg
mov
add
retf
mov
add
mov
jno
adc
les
fs
arpl
cmp
shl
dec
cmps
mov
mov
fwait
loope
std
mov
(bad)
shl
add
test
or
jmp
inc
sbb
nop
fdiv
and
jg
aam
movs
mov
imul
push
test
(bad)
lods
xchg
pusha
mov
add
fxam
test
cmp
mov
add
getsec
ret
xchg
scas
push
or
or
int3
cmp
fsincos
daa
jmp
icebp
out
xchg
jne
scas
push
mov
xchg
into
xchg
push
aaa
into
dec
inc
(bad)
adc
mov
jle
in
outs
in
fwait
out
scas
ins
test
scas
stos
test
xor
push
jns
sub
lds
fst
out
(bad)
push
cdq
loopne
out
mov
xor
xchg
mov
lahf
imul
inc
pop
adc
inc
jmp
jecxz
cmp
hlt
leave
push
inc
into
cdq
cmp
jge
cmps
inc
xchg
fwait
dec
jl
inc
in
jae
adc
sub
data16
data16
gs
xchg
lahf
jo
popf
jecxz
adc
jns
or
stc
test
fwait
or
shl
xchg
push
xchg
out
mov
sar
and
xor
out
jmp
or
sbb
(bad)
fsubr
or
jmp
and
jmp
cld
xor
xor
(bad)
aam
push
or
(bad)
fsubr
cs
jg
cmps
cwde
fidivr
cmp
fild
jmp
mov
jbe
mov
pop
adc
lods
stc
aam
mov
jge
(bad)
iret
sti
mov
test
and
dec
mov
pop
cmps
xchg
cld
jnp
add
mov
add
aas
cmps
sub
dec
mov
in
test
(bad)
cmp
fs
xor
div
test
ret
mov
push
daa
cmc
out
push
mov
inc
jns
nop
pop
mov
or
aas
add
test
in
stos
icebp
mov
xchg
pop
enter
inc
retf
and
test
call
jne
mov
rcl
mov
ficomp
and
or
stos
fsubp
push
inc
xor
sub
in
rcr
or
sahf
add
sub
sub
pop
jmp
(bad)
call
mov
dec
dec
test
push
or
sbb
clc
shl
js
push
and
jmp
xchg
dec
xor
push
jbe
push
push
loopne
push
sub
cmp
jb
adc
mov
(bad)
inc
sub
mov
cmp
jbe
je
jmp
dec
stc
ins
out
sbb
fyl2x
shl
fs
arpl
jecxz
pop
inc
inc
fbstp
and
push
xchg
loop
push
push
movddup
mov
mov
xchg
push
ja
sbb
je
add
test
mov
inc
and
mov
inc
scas
xchg
jg
mov
mov
xchg
inc
hlt
shl
mov
cmp
adc
or
and
rol
repnz
adc
scas
lahf
and
mov
das
inc
aam
out
into
xchg
push
scas
mov
inc
xchg
lods
clc
mov
inc
clc
xor
sub
outs
je
retf
mov
mov
je
(bad)
cld
ds
jae
and
loop
and
fcom
lahf
not
mov
fcom
cld
lods
xchg
lahf
test
or
rcr
add
xchg
mov
or
das
loopne
mov
and
cmps
lods
mov
mov
into
pop
mov
outs
xchg
stc
lock
std
(bad)
cmp
retf
inc
or
add
(bad)
lea
movs
and
cmps
or
fadd
jecxz
sub
and
arpl
xor
lock
push
inc
out
dec
enter
xchg
or
jp
test
loopne
jae
pusha
and
jbe
lds
cwde
out
sbb
loop
inc
pop
push
and
xchg
repz
call
lock
dec
xor
in
aaa
cmp
lahf
mov
pop
fist
inc
sbb
push
loop
sbb
test
out
fwait
mov
pop
mov
mov
and
jmp
dec
mov
add
loop
mov
jmp
xlat
retf
mov
das
xchg
or
push
sub
pop
jl
fiadd
fstp
pop
xlat
lods
mov
cmps
and
mov
adc
aam
xchg
mov
sub
jns
mov
mov
xlat
test
test
int3
push
lods
fisubr
pushf
jne
sbb
jns
add
int3
inc
xor
adc
push
mov
fdivr
rcr
pop
loopne
bswap
dec
or
std
mov
and
in
imul
adc
pushf
mov
xor
les
dec
clc
into
loope
lds
mov
hlt
ins
in
sbb
loop
rol
movs
sbb
loope
jecxz
sti
dec
sub
and
xchg
mov
int
push
mov
xchg
out
imul
inc
push
inc
mov
push
sbb
pop
ins
push
sbb
xor
jmp
imul
cmps
ret
add
leave
sub
dec
stos
cmps
repz
lds
lahf
or
(bad)
push
sub
ret
xor
jbe
fucomi
jmp
jae
neg
js
ja
push
and
lods
mov
mov
jbe
xchg
rcr
jo
mov
mov
cmp
push
push
mov
xchg
not
xor
ret
inc
xor
loope
and
js
jl
fstp
mov
mov
(bad)
mov
or
adc
loope
push
add
std
sti
dec
call
call
sbb
xchg
hlt
arpl
movs
scas
dec
leave
or
jne
add
inc
iret
sub
cld
jmp
in
mov
and
in
gs
in
ror
iret
outs
inc
pop
clc
push
inc
pop
xchg
lods
mov
xchg
jmp
pop
cmp
lock
fs
xor
movs
hlt
and
push
pop
test
aaa
mov
ss
ds
imul
aaa
je
cmp
cmp
mov
scas
out
mov
and
ret
imul
cmp
jbe
dec
push
pop
push
mov
xchg
jne
add
cwde
test
or
adc
dec
mov
test
enter
jae
jnp
pop
dec
test
fsubp
arpl
xchg
lea
xchg
xlat
add
mov
dec
push
and
cmp
pop
jecxz
shr
and
pusha
enter
(bad)
sub
les
mov
sub
out
test
retf
dec
popa
sbb
sahf
sti
pop
repz
shr
daa
inc
add
push
stc
sub
aas
movs
inc
pop
and
xchg
movs
and
pusha
retf
fiadd
jnp
push
scas
dec
inc
xchg
stos
push
xchg
mov
and
sub
xor
out
(bad)
fisub
int3
inc
aas
add
xchg
imul
fld
les
popf
push
pop
jbe
cmp
pop
adc
sbb
retf
ja
stos
xor
inc
repnz
rcl
imul
ret
dec
daa
aas
push
jns
scas
xor
and
ds
xor
xor
sub
inc
out
fadd
loopne
xchg
jmp
nop
mov
add
bound
vcvtsi2ss
dec
mov
imul
sub
push
std
mov
jmp
test
(bad)
in
test
(bad)
mov
push
cmp
(bad)
push
loop
in
pop
pop
out
lahf
lods
das
jmp
dec
retf
sahf
neg
pop
xchg
xor
mov
adc
hlt
xchg
loop
cmps
sbb
bound
mov
out
sti
mov
mov
mov
fimul
inc
pusha
cmp
pop
repz
popa
rcl
(bad)
cmps
ret
loopne
push
cli
jge
ret
pop
mov
ret
mov
pop
xor
aad
sbb
inc
call
sahf
or
and
mov
or
pop
ins
jg
lods
bound
add
aaa
xor
xchg
gs
xlat
pop
add
adc
mov
std
and
mov
in
add
sahf
lock
outs
fimul
pop
pop
scas
xchg
xchg
inc
xchg
int
aaa
and
mov
mov
call
and
or
scas
int3
inc
fabs
nop
pop
adc
lea
test
inc
fisttp
xor
push
stos
int
int
pop
and
iret
push
shr
pusha
sub
out
mov
and
lock
leave
enter
xor
fild
int3
ins
(bad)
dec
aaa
cld
hlt
rcl
jmp
popf
and
int
ret
mov
cmp
(bad)
mov
pop
(bad)
ja
push
shl
mov
cmp
shr
inc
and
and
mov
sub
dec
sbb
or
rcr
sub
stos
inc
bound
cld
sub
inc
xor
loopne
aad
fadd
mov
cmp
aad
imul
lods
ror
adc
shl
aaa
aaa
sub
sub
das
mov
mov
stos
in
xchg
jle
dec
pushf
scas
icebp
stc
hlt
mov
and
xchg
repnz
push
fwait
mov
push
mov
das
in
pop
jecxz
lock
xor
pop
mov
sub
xor
lods
or
retf
xchg
push
sub
jg
xor
outs
jmp
push
stos
ins
inc
(bad)
jmp
or
fild
(bad)
ds
(bad)
loopne
ret
push
xchg
aaa
sub
loope
mov
jmp
leave
mov
out
fcomp
call
std
pop
jge
lea
mov
mov
mov
pop
ins
(bad)
in
imul
dec
inc
adc
test
xchg
lea
hlt
push
push
inc
sub
or
add
pop
scas
popa
jecxz
xchg
xor
mov
push
xor
out
and
adc
(bad)
pop
xchg
adc
pop
xlat
loop
pop
pusha
pop
and
cmp
dec
dec
dec
ret
in
cs
adc
(bad)
push
push
pop
sbb
mov
ins
aad
ss
mov
call
aad
cmps
jmp
mov
and
push
enter
clc
in
jl
in
imul
dec
sub
into
shl
cld
pop
jl
adc
retf
mov
repnz
(bad)
jb
dec
movs
jno
test
(bad)
jecxz
or
mov
cld
ror
sbb
mov
mov
movs
add
sub
jecxz
sbb
rcl
mov
stos
mov
icebp
pushf
movs
adc
inc
xchg
fs
xor
fisttp
fidiv
push
popa
rol
repnz
jbe
lods
sahf
ins
cmps
jl
aad
cs
pop
push
dec
leave
mov
push
sub
sub
outs
repnz
sbb
push
cmp
xchg
push
(bad)
push
or
xchg
and
(bad)
das
das
push
stos
mov
jg
cmps
add
fisttp
sub
sti
or
inc
cmp
iret
jmp
xor
xor
out
push
enter
sub
fiadd
cld
dec
dec
mov
into
out
mov
fmul
mov
pop
sub
lods
dec
xchg
lods
and
(bad)
fcompp
int3
ins
dec
mov
stc
les
js
ds
std
pop
(bad)
cmps
test
repz
adc
jb
in
lock
push
ds
ficom
xchg
scas
jl
js
rcr
jae
cs
xchg
and
pmaddwd
cmps
out
ins
aam
imul
xchg
(bad)
sub
mov
ret
jns
ret
(bad)
daa
rcr
dec
xor
stc
call
ror
mov
inc
in
or
scas
fistp
sub
xchg
and
sbb
ins
les
jmp
cld
or
repz
and
out
test
inc
dec
scas
mov
mov
out
sbb
in
sar
test
push
lods
jne
in
jmp
jbe
add
jecxz
jl
cmps
push
and
stos
push
xor
retf
sbb
push
not
add
push
cli
inc
xchg
je
inc
cwde
xor
fidiv
jmp
xor
test
scas
jnp
js
ret
(bad)
dec
ja
mov
sub
fistp
mov
ja
lds
mov
popa
fucomp
sub
or
aaa
mov
clc
(bad)
adc
or
lea
imul
daa
lods
rcl
arpl
movs
sub
add
and
out
adc
inc
repnz
sbb
icebp
sub
aaa
cs
iret
sbb
mov
dec
sub
fisttp
jo
sub
loope
xchg
repnz
cmp
mov
mov
add
fisub
mov
arpl
jmp
leave
xchg
inc
gs
add
xor
fwait
mov
jmp
in
fcom
inc
movs
movs
inc
(bad)
mov
ficom
sub
mov
hlt
enter
mov
or
iret
loopne
ja
ret
gs
out
mov
int3
popf
clc
mov
out
mov
gs
adc
(bad)
mov
cmp
mov
enter
jle
in
js
jmp
and
enter
mov
cmps
je
cli
pop
cmps
xor
cwde
pop
stc
scas
inc
or
out
fld
stos
fdivrp
inc
icebp
pop
sbb
(bad)
fsubr
and
fadd
call
push
repz
xlat
dec
sbb
mov
addr16
pop
and
je
jmp
cmp
scas
mov
jns
pop
sbb
aaa
mov
loopne
rep
inc
(bad)
out
xlat
(bad)
jns
add
cdq
mov
push
arpl
and
dec
fisttp
lock
dec
jle
push
push
adc
pusha
aas
in
mov
xchg
das
inc
add
test
cld
xchg
dec
cmp
add
pop
retf
neg
test
dec
(bad)
adc
push
movs
add
pusha
lds
fldenv
test
fwait
dec
(bad)
call
add
outs
push
sbb
xchg
dec
adc
mov
fs
or
loopne
adc
xor
arpl
out
int
stc
aas
xor
(bad)
jg
ret
in
mov
xlat
into
jg
jae
pop
leave
add
psrld
dec
mov
and
sti
push
add
xchg
pop
inc
or
shl
mov
mov
repnz
pushf
jl
mov
scas
div
add
retf
mov
mov
push
in
xchg
or
xchg
pop
xor
retf
push
inc
inc
stos
or
mov
mov
mov
repz
movs
push
add
add
cli
leave
pusha
(bad)
leave
push
sbb
ror
cmp
cmp
stos
movs
mov
cmp
cdq
xchg
jge
sar
jnp
ret
enter
cmp
(bad)
out
repz
mov
inc
(bad)
fadd
xor
push
test
xchg
fsubr
fwait
jb
aas
aas
push
test
rcr
ja
and
inc
cmps
xor
push
sbb
and
or
repz
cs
fld
fsubr
mov
add
dec
repnz
cmps
std
not
cs
mov
(bad)
rcl
fst
dec
jge
mov
(bad)
(bad)
div
sahf
sub
inc
cmp
mov
(bad)
xchg
mov
jo
sti
dec
addr16
push
xchg
test
cdq
pushaw
int
test
mov
xor
fs
loopne
pusha
movs
jg
je
sbb
sbb
inc
into
inc
out
fdivr
sbb
jge
cdq
dec
data16
mov
fst
scas
mov
mov
(bad)
jns
lods
sbb
mov
xchg
dec
out
pop
retf
sahf
addr16
jo
and
ror
lds
stc
mov
xchg
jmp
(bad)
stos
mov
fmul
mov
pop
repz
add
ror
frstor
mov
popa
(bad)
jnp
xchg
xor
lds
adc
in
pop
jge
xlat
adc
cli
ret
and
mov
fstp
cmc
push
rol
mov
or
or
pop
cli
and
pop
fucomi
jns
jb
or
xchg
test
inc
(bad)
adc
sub
adc
loop
cli
data16
movs
mov
out
xchg
retf
jp
iret
inc
int
sub
add
rcl
mov
nop
pop
pop
xlat
mov
test
lods
mov
add
sub
repnz
jbe
mov
shl
fsubr
(bad)
fnstsw
lds
pop
sti
mov
add
cmps
scas
push
add
push
(bad)
fmul
jnp
and
pop
push
daa
push
mov
inc
xor
call
hlt
and
add
sar
mov
mov
pushf
test
jnp
push
cmp
jno
lods
cmp
jmp
sbb
ss
popf
jp
mov
or
sbb
data16
lds
call
or
sub
in
push
jns
in
dec
out
movs
call
mov
int
and
mov
enter
int
fwait
cmc
xor
and
cmps
mov
mov
iret
mov
sbb
sbb
es
sub
inc
mov
jne
add
cmps
cmp
mov
push
ins
hlt
mov
xchg
jnp
xor
fs
mov
sbb
jle
mov
ror
xlat
cld
in
adc
push
std
or
mov
cdq
ins
(bad)
in
ss
es
lahf
mov
fdiv
sbb
sbb
dec
and
xchg
dec
xchg
mov
ret
xor
int
mov
adc
into
std
adc
sti
jb
repnz
repz
dec
in
dec
xchg
mov
aaa
sbb
mul
cmps
ss
adc
mov
inc
jg
mov
arpl
adc
mov
jg
add
pop
jb
mov
mov
add
push
shl
enter
cmp
arpl
lods
adc
in
sub
stos
mov
call
and
(bad)
imul
aas
sbb
int3
push
inc
js
enter
sbb
out
popf
lea
mov
and
xor
std
cdq
jmp
xor
cmp
test
popf
es
mov
and
fbld
mov
stc
into
and
aaa
repnz
mov
and
xor
xchg
mov
daa
pop
pusha
cmp
adc
pop
xor
push
or
or
rcr
mov
jbe
fst
sbb
push
fisttp
cwde
shl
or
add
bound
outs
dec
xor
call
xchg
pand
push
test
mov
iret
dec
pop
xchg
dec
repnz
data16
dec
xor
retf
pusha
clc
pop
push
pushf
adc
ins
stos
xlat
(bad)
push
mov
xchg
mov
inc
scas
mov
ficom
inc
jmp
data16
movs
xchg
jne
pushf
dec
xor
mov
out
popf
daa
mul
pop
int3
(bad)
mov
sbb
out
pop
iret
push
lods
outs
jne
add
pop
or
sbb
test
jns
test
call
in
sbb
pop
pop
mov
mov
jecxz
mov
add
imul
xchg
dec
xchg
test
mov
into
test
jne
arpl
enter
push
mov
fwait
add
es
xchg
and
into
lods
repz
cmp
mov
push
jno
cs
jecxz
out
jo
pusha
ror
xchg
fisubr
aad
push
das
int3
xchg
inc
(bad)
mov
fisttp
jle
hlt
(bad)
and
sub
dec
es
sar
movs
stos
mov
push
hlt
stos
lods
push
mov
imul
push
(bad)
out
dec
mov
imul
stc
out
cmp
add
call
or
cmc
test
popa
adc
jecxz
xor
fwait
test
pop
push
xchg
sub
xchg
push
add
inc
into
or
mov
ss
adc
sub
jbe
inc
rol
fistp
out
mov
mov
mov
push
ret
xchg
and
fsub
jnp
cmp
fwait
pushf
mov
ficom
add
cmc
shr
mov
push
cmps
inc
jb
mov
mov
arpl
jbe
sbb
ins
in
cmps
loopne
mov
sub
inc
test
mov
cmp
call
inc
add
outs
fwait
mov
mov
div
shl
sbb
rol
movs
dec
cmp
pop
jecxz
clc
dec
popf
aam
(bad)
sbb
into
jnp
sub
les
popf
jg
push
adc
or
jbe
inc
mov
sub
dec
les
mov
add
lock
push
mov
enter
cwde
xchg
xor
pop
mov
leave
dec
push
retf
dec
and
in
test
dec
ins
adc
in
lock
fbstp
sub
stos
xchg
sub
sbb
enter
bound
pushf
bound
and
cmp
push
retf
add
shl
sub
xchg
in
mov
mov
add
adc
inc
inc
ss
cld
shr
push
xlat
sbb
add
cmovs
push
test
popa
push
aad
inc
inc
adc
and
inc
jno
xlat
mov
rcl
loopne
lahf
adc
loope
add
inc
mov
(bad)
ret
cpuid
retf
imul
retf
add
imul
xchg
mov
call
adc
add
mov
xor
push
test
sbb
js
shr
adc
sar
lahf
ret
das
adc
or
and
adc
jb
fwait
sub
addr16
gs
mov
adc
retf
pop
retf
cmp
fstp
or
(bad)
frstor
adc
movs
nop
leave
js
xchg
daa
inc
mov
mov
add
loop
or
les
xchg
int3
test
shl
jne
pushf
sub
add
pushf
push
fxch
xchg
or
pushf
xchg
sti
ss
fwait
imul
push
fiadd
mov
xchg
lahf
xlat
fcomp
inc
in
jg
div
cmps
pop
cli
mov
test
retf
mov
and
inc
pop
lock
adc
iret
iret
leave
cld
adc
sahf
xor
push
mov
es
sub
or
aad
ins
ret
cld
aad
fistp
add
jns
pop
mov
sub
push
aaa
dec
jmp
movsx
dec
movzx
(bad)
je
scas
or
outs
add
daa
call
mul
jl
ins
sahf
jbe
(bad)
sbb
push
movs
cmps
adc
push
jae
adc
jg
pop
and
sbb
jns
das
xor
call
adc
dec
outs
xchg
imul
stc
cld
in
fadd
fwait
mov
pop
mov
es
in
mov
mov
lea
mov
outs
dec
icebp
sti
lahf
scas
(bad)
mov
mov
in
imul
(bad)
jge
sti
xor
pusha
test
dec
out
ja
adc
js
jmp
ficom
arpl
mov
ficomp
ret
pushf
aas
sti
jnp
outs
xchg
lock
test
(bad)
sbb
xchg
add
hlt
loopne
aad
enter
lahf
mov
jmp
cmp
fwait
add
(bad)
jo
mov
xor
pop
sbb
mov
pushaw
jg
dec
and
add
xor
xor
push
add
sti
bound
adc
sbb
clc
xor
out
cmps
xor
mov
in
call
fnstenv
fwait
ret
daa
xor
nop
pop
xor
fcmovbe
movs
(bad)
lds
popf
int
sub
sbb
pop
imul
mov
div
jo
test
dec
cmp
add
or
mov
pop
popa
pop
loopne
ins
xor
popf
inc
stos
cs
int
ret
push
xor
add
xchg
mov
jns
xchg
mov
cmp
int3
(bad)
std
jmp
pop
push
xlat
out
and
repnz
add
je
pop
and
lods
pushf
cmp
push
lds
mov
xor
adc
sar
mov
mul
(bad)
data16
push
mov
jb
push
and
loope
or
mov
xor
mov
sbb
retf
jle
shl
aad
dec
shl
xchg
add
dec
movs
adc
lods
call
push
aam
repz
mov
push
pop
aas
jmp
pop
mov
or
sahf
js
cmp
sbb
gs
xchg
lock
sub
outs
push
fcmovbe
inc
lahf
das
xor
jbe
add
mov
mov
outs
mov
push
push
pop
retf
mov
jg
(bad)
dec
mov
add
fld
xchg
cmp
fwait
add
mov
xor
mov
cmc
cmp
add
xor
inc
(bad)
arpl
or
das
movs
push
iret
(bad)
ins
jno
pop
push
lods
xor
pusha
into
xchg
add
jnp
mov
cdq
xchg
inc
pop
push
push
popa
in
cmp
mov
cmp
push
iret
xor
out
and
adc
cmp
dec
xchg
aas
rol
push
dec
jp
add
rcr
or
push
mov
mov
cmps
dec
(bad)
or
div
sahf
push
cwde
(bad)
imul
jge
adc
push
push
xchg
inc
lds
test
in
jl
mov
ins
jae
js
shl
adc
xor
into
sub
dec
lock
and
sbb
cli
dec
xor
outs
ret
aaa
and
add
adc
sbb
mov
jne
sbb
jmp
loope
shr
push
and
nop
or
mov
dec
and
shl
adc
push
xor
dec
mov
ja
jne
mov
call
and
push
ret
push
pop
mov
cmc
in
test
pushf
fmul
pop
stos
cmc
xchg
dec
or
mov
xchg
mov
mov
(bad)
mov
dec
int3
sub
cmp
paddsb
jae
mov
daa
ds
imul
xor
int
pop
je
mov
push
ins
mov
fsub
cmp
mov
mov
add
jg
inc
movs
or
or
mov
cmps
lahf
call
xor
sbb
mov
shl
inc
clc
fldenv
pop
add
sbb
(bad)
xchg
xor
ins
add
inc
xchg
push
lods
test
call
gs
cdq
fdiv
jo
enter
popf
mov
loope
mov
pop
enter
imul
or
std
call
popa
mov
and
call
xor
xor
mov
ds
mov
inc
lods
xchg
push
repz
int3
mov
and
jecxz
pushf
sbb
xchg
push
loope
dec
adc
into
fucom
dec
mov
mov
adc
mov
aad
idiv
add
popa
lods
mov
jg
lods
popa
rcr
mov
cmc
sub
lea
enter
fs
pop
or
jb
lock
(bad)
fs
adc
sbb
mov
pop
div
or
cmp
and
mov
rol
fs
cmp
add
imul
fwait
(bad)
xchg
aam
push
push
fstp
pop
mov
jecxz
push
or
mov
call
lods
mov
sub
mov
add
inc
dec
fnstcw
adc
xlat
dec
fisttp
dec
adc
daa
lea
jg
shr
loop
xor
sahf
ins
sbb
aam
pop
xchg
fwait
or
mov
in
repz
loope
inc
aad
gs
pop
sbb
push
ja
jp
push
stos
cwde
and
mov
inc
lahf
(bad)
mov
mov
add
out
in
add
stc
push
pop
aas
mov
mov
imul
(bad)
loopne
and
call
aaa
mov
sub
es
es
ficomp
or
das
cmp
mov
fbstp
pop
es
(bad)
jne
pop
nop
jne
lods
in
mov
add
enter
mov
dec
cdq
cdq
mov
ss
es
pop
sub
je
ja
dec
inc
ror
aas
xchg
jg
push
xor
(bad)
aaa
stos
cmp
call
(bad)
pop
pop
sbb
cld
popf
mov
adc
add
loop
movs
bound
sbb
jmp
sar
mov
outs
cmp
xchg
enter
(bad)
(bad)
pop
or
jae
sbb
pop
test
in
in
cdq
pop
leave
sub
mov
fwait
psraw
in
cmp
mov
mov
ret
add
into
xor
mov
cdq
xlat
aam
adc
imul
cmp
cmps
cmp
out
out
dec
retf
mov
inc
(bad)
int
jmp
jecxz
xchg
ja
mov
nop
cli
mov
dec
repz
aaa
mov
rol
rcl
sbb
xchg
dec
sbb
inc
test
inc
mov
add
sub
iret
sub
fs
push
cmp
inc
xchg
mov
or
cmp
ja
daa
arpl
std
add
pop
aam
ins
sbb
and
loop
sbb
test
mov
lea
test
and
cmp
cmp
pusha
leave
sub
jbe
enter
jae
and
mov
int
rol
pop
mov
xchg
push
cmp
(bad)
adc
ja
add
popf
pop
dec
imul
js
or
lock
sbb
xchg
inc
or
test
add
in
push
mov
stos
mov
fadd
sub
into
mov
xchg
adc
jne
xor
mov
je
hlt
fild
mov
xor
out
dec
xchg
xchg
scas
jnp
lods
je
enter
test
ficomp
addr16
iret
inc
cmp
aam
xchg
mov
call
shl
mov
lahf
fst
jnp
mov
arpl
(bad)
rcr
cli
and
xchg
ds
shl
xchg
out
xchg
rol
out
aaa
dec
jmp
(bad)
xor
addr16
call
push
mov
ins
jnp
aad
aas
cmc
outs
sub
daa
inc
adc
jl
jne
mov
mov
dec
mov
mov
xchg
data16
mov
call
rol
lea
pop
dec
les
cs
sti
add
or
cs
mov
pusha
add
add
movs
out
xor
jl
ret
sbb
mov
add
dec
aaa
icebp
ins
jmp
frstor
movs
mov
and
repz
gs
mov
sbb
test
mov
adc
call
or
jae
cwde
inc
cmps
xor
push
mov
aas
aam
mov
bound
das
fcom
add
inc
dec
imul
(bad)
outs
je
test
scas
mov
mov
adc
je
rol
pop
mov
lods
(bad)
lods
cdq
mov
add
xchg
scas
in
and
lock
fs
mov
outs
or
push
or
fld
adc
outs
sub
sub
cmc
sub
mov
and
fldenv
shl
push
mov
adc
mov
jns
enter
push
aam
loopne
pop
cmp
pusha
retf
js
clc
sub
push
cmp
pop
add
cmc
xchg
mov
inc
repz
inc
fbld
pop
(bad)
jmp
fisub
in
stc
push
push
push
loope
stc
push
iret
call
push
out
push
scas
jmp
ss
xor
repz
nop
or
adc
and
test
ds
outs
ret
push
mov
loop
mov
xor
fdiv
adc
and
shr
jmp
xchg
cmp
cmc
jno
fmul
es
adc
ffree
adc
mov
imul
ja
push
add
fistp
ins
fnstsw
bnd
cwde
out
sti
les
fsubr
repnz
inc
cmps
fist
popa
sbb
adc
cmps
xor
or
jb
xlat
push
icebp
div
and
idiv
cs
sub
jecxz
fisubr
or
mov
mov
out
or
add
lods
adc
nop
mov
xor
(bad)
pop
mov
mov
pop
(bad)
cli
inc
lea
loope
inc
sub
mov
out
adc
sti
outs
lahf
adc
int3
sub
sub
dec
mov
sbb
push
arpl
xor
shl
adc
xor
dec
mov
mov
push
xchg
fidiv
jb
cmp
repnz
fdivr
cmp
push
jmp
into
sub
inc
test
dec
and
add
jmp
pop
sar
dec
and
movs
dec
mov
mov
jbe
xor
or
in
aad
pop
mov
push
es
(bad)
mov
jmp
in
imul
mov
adc
lods
pushf
dec
cmp
cmp
aam
dec
(bad)
jae
mov
or
or
aad
(bad)
jo
mov
div
aas
in
(bad)
in
mov
sub
xor
loopne
imul
pop
fidiv
and
(bad)
mov
pop
imul
dec
mov
jb
xor
mov
out
jge
adc
ja
cwde
sub
or
hlt
(bad)
inc
pop
(bad)
sbb
pusha
adc
outs
pop
and
cld
mov
pop
loopne
in
mov
adc
out
push
add
jl
pop
pushf
sbb
ins
sar
or
xchg
push
lods
adc
push
js
leave
xchg
jle
popa
icebp
into
scas
add
test
retf
add
sahf
out
mov
push
xlat
jl
aaa
scas
shl
mul
gs
call
mov
dec
clc
aas
mov
daa
push
xchg
pop
adc
jo
jecxz
sbb
out
sub
mov
inc
es
out
push
ins
call
in
inc
mov
mov
gs
cmp
or
inc
mov
sbb
repz
mov
fsubr
arpl
mov
sar
jmp
xor
push
in
lahf
movs
das
pop
adc
mov
pop
mov
imul
loop
xor
rcr
pop
test
aam
add
jp
mov
ret
ret
jb
dec
(bad)
in
and
inc
dec
fldl2t
jecxz
popf
jecxz
popf
ds
adc
fisub
mov
(bad)
lea
cmc
int
mov
into
mov
xchg
and
in
mov
push
mov
sar
adc
in
xchg
bnd
jns
jo
jns
(bad)
jne
sbb
mov
adc
sub
(bad)
xor
jno
frstor
mov
(bad)
adc
sub
push
sbb
push
jg
xchg
data16
aad
fldenv
sub
jl
pop
out
int3
fstp
or
jl
repnz
(bad)
mov
xor
jg
push
inc
das
mov
cmp
xor
and
adc
sbb
jo
jne
pop
mov
xchg
xchg
xchg
or
hlt
lods
sub
(bad)
int3
jns
test
retf
rol
sbb
mov
adc
fistp
push
cmp
sub
out
jl
pushf
inc
pop
or
imul
xor
jmp
push
movs
xchg
add
into
jmp
cmp
pop
jg
dec
or
cmp
fstp
pop
imul
jae
mov
push
into
or
add
fldenv
xor
sar
call
adc
xchg
icebp
mov
pop
jns
and
push
push
clc
xor
lods
lea
lods
mov
movs
and
push
enter
in
mov
xchg
sbb
and
in
and
loope
out
or
ins
add
out
(bad)
xchg
stos
push
xchg
imul
shl
push
add
pop
fnsave
and
push
bound
lahf
pinsrw
add
aaa
xchg
xor
scas
cdq
jno
aas
in
push
push
ja
pop
iret
jne
popw
outs
xlat
mov
mov
movs
mov
out
jne
nop
jge
imul
outs
pop
mov
sbb
sub
pop
mov
enter
sbb
loope
scas
pop
imul
(bad)
cld
movs
leave
cmp
push
bound
cmc
jle
add
mov
cli
mov
nop
inc
sbb
ror
(bad)
ins
repnz
push
pop
aaa
jmp
push
repnz
outs
inc
inc
mov
mov
aam
cmps
imul
sahf
or
icebp
sti
cmp
and
loope
in
mov
inc
sub
xlat
stos
int3
pop
add
mov
arpl
outs
adc
xchg
mov
cld
jns
dec
push
nop
test
cmp
pusha
and
fidiv
fld
fdivr
lds
cwde
mov
dec
pop
cmps
adc
add
imul
mov
ret
sbb
stos
mov
in
imul
inc
mov
cmp
or
jnp
pop
or
fstp
fnstenv
mov
cld
int3
mov
int
mov
imul
push
lods
sub
xchg
ret
dec
and
aam
aad
fdiv
dec
jl
fs
gs
jmp
push
inc
mov
and
dec
cmp
sub
mov
sub
push
sar
sti
jmp
movs
lods
call
cli
pop
enter
mov
test
dec
fwait
adc
sbb
jg
push
test
ins
cmc
movs
sub
push
pop
aam
test
inc
pop
and
jcxz
fmul
nop
xor
(bad)
pop
dec
mov
outs
push
xlat
sbb
sbb
jg
cmc
xchg
int3
icebp
xchg
imul
ret
lds
pop
mov
sbb
dec
(bad)
inc
pop
lds
call
mov
mov
call
xor
inc
dec
in
test
shr
sub
shl
xor
std
cs
loopne
xor
popf
fstp
sti
pop
mov
inc
sbb
cs
jg
popf
mov
test
push
inc
and
mov
cmp
rol
mov
cmp
jb
test
and
or
sub
mov
fst
push
cld
mov
sub
push
rcr
in
dec
popf
or
in
test
lea
xchg
push
dec
sub
cdq
outs
push
jmp
mov
push
iret
les
call
mov
sbb
shl
pop
jge
(bad)
ins
add
xchg
ds
pop
cmc
push
cmp
push
xchg
mov
mov
pop
pusha
xchg
dec
adc
scas
test
test
cmp
pop
enter
outs
dec
jb
sub
(bad)
scas
dec
mov
xchg
(bad)
mov
in
sbb
fild
call
push
xor
imul
nop
or
dec
or
adc
mov
xor
cld
sar
inc
popa
and
mov
jo
loope
js
pushf
dec
test
fnstenv
addr16
mov
mov
or
jnp
dec
adc
cdq
or
lock
addr16
cmps
pop
js
add
pop
jnp
stos
cmps
sar
pop
mov
mov
popf
iret
xchg
pop
mov
mov
pop
cmp
sbb
jmp
jl
out
and
pushf
sar
push
jo
xchg
ins
push
xor
js
jp
mov
xor
cmp
fisttp
loope
xchg
fdiv
inc
gs
xchg
jmp
pushf
loopne
jae
fbstp
pushf
test
(bad)
sub
sub
jecxz
mov
push
loope
jmp
mov
fwait
dec
aad
jg
popa
scas
cmps
jl
lock
dec
scas
dec
test
cmps
and
fucomi
xor
fwait
setbe
in
xchg
aas
into
(bad)
lods
push
cs
cwde
popf
or
push
test
mov
jns
mov
jl
sbb
or
sar
loopne
popf
shl
rol
rcr
sbb
adc
or
add
and
mov
fucomi
lds
pop
popf
movs
stos
push
mov
xor
adc
(bad)
pop
xchg
sbb
stos
sbb
or
jmp
cmp
in
es
mov
push
jge
cmp
ret
mov
add
dec
repnz
out
in
clc
mov
repnz
push
in
pop
add
mov
loopne
int
(bad)
into
cmp
adc
sub
outs
daa
clc
inc
mov
cli
and
sub
sbb
stos
(bad)
out
xchg
xchg
into
dec
shl
stos
(bad)
lds
lods
xor
adc
dec
cmp
and
enter
jmp
out
mov
pop
pop
or
lahf
aad
mov
mov
(bad)
daa
pop
(bad)
(bad)
movs
clc
out
xchg
gs
pop
xor
jg
mov
in
sub
das
int3
ins
sbb
cmp
popa
jecxz
or
es
xchg
dec
add
cli
add
cmp
int3
xchg
and
jecxz
xchg
(bad)
push
neg
mov
sbb
into
xor
jnp
out
aaa
je
int3
mov
into
movs
frstor
add
mov
fs
cmp
add
icebp
xchg
inc
sahf
nop
lods
mov
cmp
or
jl
pop
std
push
iret
pop
ins
fistp
dec
jb
lods
inc
data16
popa
lods
aaa
inc
jg
stos
popf
ss
outs
out
(bad)
lahf
xchg
pop
mov
sbb
dec
jns
popa
jne
inc
je
gs
test
addr16
rcr
fstp
aam
ficom
fmul
mov
push
pusha
cmps
cmc
leave
sub
add
inc
mov
dec
xchg
shr
push
cmp
clc
xchg
mov
inc
push
cmp
lock
or
sbb
mov
dec
outs
ficomp
int
adc
clc
scas
sbb
sbb
icebp
add
xchg
pop
cmps
dec
pop
int
test
push
(bad)
out
out
movs
add
dec
ins
out
pop
lods
test
xchg
(bad)
mov
xor
jnp
sbb
adc
sbb
push
push
div
sti
out
cdq
sbb
out
das
pop
jne
push
add
neg
cmp
sbb
mov
retf
add
(bad)
jbe
add
sbb
mov
jae
add
int3
mov
sbb
and
xlat
jl
mov
pop
fs
push
outs
in
mov
mov
mov
push
or
adc
add
cld
xor
aaa
pusha
frstor
scas
(bad)
add
imul
pop
xchg
sub
iret
push
xchg
fs
xchg
(bad)
call
mov
sti
add
pop
and
jecxz
mov
mov
and
call
pop
xchg
xchg
nop
fstp
push
cmp
push
dec
xchg
add
adc
bound
dec
mov
fbld
stc
fmul
icebp
mov
in
xchg
lahf
dec
fldcw
sub
adc
xchg
mov
das
fnsave
imul
xchg
xor
adc
clc
adc
(bad)
ins
and
xlat
cmc
in
lock
scas
fwait
cmp
and
mov
es
dec
loopne
sahf
js
lods
xchg
sbb
pop
adc
xor
clc
aas
ror
movs
xor
xchg
or
xchg
mov
sub
(bad)
push
std
sub
cmp
cmp
and
xchg
pop
(bad)
cmp
lods
cmc
inc
mov
dec
mov
jns
ins
(bad)
movs
ret
ficom
loope
es
jne
add
xchg
xchg
retf
add
call
inc
sar
fbstp
dec
popa
push
add
pop
(bad)
sbb
cdq
mov
fidiv
mov
in
mov
shl
add
ins
mov
inc
out
(bad)
xchg
and
inc
pusha
sub
test
les
mov
xchg
adc
xor
cmp
inc
loop
pushf
sbb
xor
add
aam
sub
test
fstp
adc
adc
xchg
outs
sub
inc
push
xchg
xchg
jo
mov
xor
ins
pop
fisttp
paddb
dec
lds
pop
and
push
das
hlt
je
mov
inc
dec
inc
push
sti
aad
add
loop
ret
jbe
outs
mov
xchg
push
sub
push
push
mov
test
sbb
std
sub
sub
jmp
mov
fsub
push
out
mov
fs
add
jmp
cmp
push
xor
jmp
inc
xlat
addr16
enter
test
loopne
push
imul
add
(bad)
lds
jp
pop
sbb
cdq
and
out
add
fsubr
into
ficomp
test
mov
inc
int3
addr16
jb
loope
shl
fcom
mov
pop
and
push
sub
sti
adc
mov
fs
(bad)
test
jp
xor
add
ffreep
cwde
pop
test
xchg
dec
in
lods
retf
out
or
lahf
push
arpl
cld
ret
sub
or
test
xchg
je
adc
xor
cs
dec
scas
sbb
jne
dec
cld
(bad)
and
nop
jnp
xchg
dec
jmp
repz
mov
add
mov
pop
push
int
pop
sti
xlat
mov
sub
jns
fidiv
lea
mov
test
emms
fild
xor
dec
movntq
es
jp
dec
mov
repnz
cmp
stc
movs
or
and
cmp
sbb
ins
push
fwait
out
movs
sub
mov
bound
cli
add
in
or
test
mov
cmp
mov
mov
stos
adc
and
fidiv
push
daa
aam
xlat
stc
cmova
mov
das
es
and
stos
or
shl
test
data16
movs
sub
cmp
inc
push
xchg
push
lods
pop
mov
or
out
sub
jbe
scas
not
loop
inc
nop
and
ret
ds
inc
loop
inc
mov
retf
shr
xchg
inc
add
xchg
or
mov
loope
sub
fsubr
mov
fwait
cmps
inc
sub
add
dec
lock
retf
jmp
in
ret
sbb
jbe
or
movs
loope
dec
data16
ds
hlt
dec
cmp
stos
add
add
and
inc
cmps
cs
push
imul
push
les
pusha
xor
leave
movs
mov
arpl
jmp
test
jp
sbb
js
mov
pop
leave
sar
cmc
sub
iret
rcr
push
cmp
not
out
mov
sbb
cmp
es
mov
mov
push
jne
xchg
dec
pop
scas
sbb
lods
in
push
mov
cld
cmp
dec
lea
jecxz
mov
jbe
addr16
fwait
in
xchg
jp
cmps
dec
outs
dec
jl
ds
mov
cmp
pop
pop
lahf
add
dec
call
add
stos
ins
xchg
mov
jns
data16
mov
fsubrp
mov
sub
xchg
pop
bnd
leave
out
arpl
enter
shl
mov
iret
adc
repnz
mov
jmp
mov
mov
sahf
xchg
jle
lods
inc
add
cmps
in
pop
jbe
sbb
(bad)
loopne
outs
scas
jae
mov
out
push
inc
mov
push
and
add
or
in
inc
jmp
(bad)
fsubrp
mov
mov
inc
cmp
jl
adc
xchg
jmp
popa
ds
call
push
xlat
out
fwait
cdq
dec
mov
mov
push
jno
pop
int
(bad)
xlat
mov
and
mov
push
in
mov
adc
cmps
call
mov
in
retf
and
fidiv
cmps
inc
out
popf
dec
(bad)
in
adc
adc
add
or
call
and
into
sub
jo
enter
mul
push
gs
xchg
push
add
lea
addr16
sbb
adc
cmp
fucomi
inc
mov
fiadd
aas
std
in
dec
sbb
pop
jmp
outs
loop
xchg
xchg
jle
pop
ficom
mov
and
xor
jg
clc
clc
aad
stos
mov
cmp
sbb
out
ret
(bad)
scas
vpsadbw
push
jnp
and
push
(bad)
arpl
and
or
in
mov
call
mov
fwait
lds
sbb
nop
cmp
mov
ins
pop
sub
sub
nop
sbb
cmps
(bad)
and
cmps
adc
push
fst
sbb
mov
sbb
add
mov
out
pop
(bad)
sbb
mov
xchg
mov
push
(bad)
lods
sub
stc
ins
xor
push
and
jl
jmp
cmp
std
fisttp
or
jecxz
push
cli
inc
lods
add
stc
stos
sti
and
xchg
cs
aas
int3
(bad)
inc
cmp
pop
sub
fldcw
in
adc
xor
xchg
mov
nop
leave
inc
lds
movs
fld
addr16
mov
lea
in
and
pop
(bad)
dec
(bad)
lock
xor
add
fadd
(bad)
mov
mov
mov
and
test
mov
cwde
(bad)
cmps
xor
jge
out
jecxz
ror
xor
(bad)
cmp
pop
cmp
cli
into
das
sub
sar
xchg
cmp
or
mov
test
shr
push
gs
xchg
mov
and
(bad)
addr16
mov
pop
test
js
test
sbb
mov
add
sub
adc
and
mov
jne
cdq
jp
jo
mov
mov
mov
(bad)
jmp
jge
in
jg
js
loop
inc
sbb
cmps
xor
mov
ret
cmps
and
std
sbb
adc
jle
mov
mov
sub
mov
ins
and
xchg
cmps
xchg
add
or
pop
cli
call
mov
arpl
mov
dec
fwait
call
sub
or
mov
lds
dec
push
mov
pop
(bad)
sub
add
add
mov
mov
cmp
lods
mov
loop
lock
jle
or
cmp
pusha
popf
mov
sub
gs
pop
xor
pop
push
jb
push
mov
out
xor
out
add
movs
pop
mov
sbb
push
xchg
pop
test
ja
jmp
rcl
adc
pushf
aam
adc
leave
gs
lods
mov
cs
movs
cdq
int
fisttp
mov
sbb
test
push
push
push
sti
imul
rcr
loop
(bad)
and
mov
xchg
cmc
cmp
push
jmp
iret
sub
addr16
sbb
lods
jmp
push
fld
pop
and
or
icebp
stc
sub
mov
sbb
scas
sub
sub
lods
into
(bad)
sbb
or
or
mov
test
lahf
or
mov
mov
mov
or
clc
sbb
xor
sub
cmp
jle
sub
add
adc
fisttp
stc
add
shr
jne
push
pop
dec
cli
stos
inc
inc
push
retf
into
neg
jmp
sub
js
pusha
sar
nop
mov
mov
ins
cmp
aam
pop
inc
shl
sub
cli
pop
rcr
jl
xchg
mov
enter
test
mov
and
retf
int
xor
minps
mov
and
cmps
push
and
imul
mov
xchg
sar
sbb
push
fnstsw
cmps
inc
movs
stos
push
and
sti
push
push
mov
inc
les
mov
mov
jmp
adc
xchg
cli
out
push
retfw
xchg
jne
adc
xor
sbb
stos
ins
sbb
bound
adc
mov
test
cmp
mov
mov
xor
add
in
or
cmp
ins
xor
sub
movs
cmp
test
push
xor
ret
out
push
(bad)
into
mov
cmps
test
jmp
xor
pop
pushf
jbe
ja
pop
inc
fdiv
push
(bad)
pop
dec
push
sub
test
push
cmp
(bad)
mov
data16
pusha
push
fcom
sub
js
clc
mov
in
mov
aas
stos
xchg
mov
pop
and
pop
and
xor
aaa
mov
mov
push
cmp
mov
in
je
dec
ror
sbb
lea
scas
inc
push
aas
lock
pop
sub
push
jno
pusha
aam
sbb
or
xchg
jl
cmps
mov
inc
xor
fnstcw
dec
dec
jns
fistp
popf
cmp
or
popf
sbb
and
test
or
cmp
cmp
mov
push
xor
sbb
leave
out
lds
jmp
sub
lsl
jnp
lock
cmova
pop
repnz
cmps
mov
rcl
sbb
stc
adc
loopne
ret
test
or
cmp
mov
push
inc
(bad)
cmp
xchg
dec
jbe
int
mov
fcom
in
jl
gs
sbb
test
mov
loope
jg
retf
mov
mov
aas
sbb
bound
outs
pop
(bad)
jmp
retf
inc
and
das
add
xlat
xor
ret
ror
mov
out
std
(bad)
cmovle
shl
cld
out
mul
inc
or
inc
das
adc
es
int
test
retf
outs
test
call
es
jne
ds
jnp
dec
scas
outs
push
fild
movs
dec
xabort
pop
adc
cmp
mov
sahf
inc
mov
add
and
or
lahf
xor
add
lods
mov
mov
loope
aaa
loop
sbb
add
shl
gs
pushf
mov
sahf
(bad)
jmp
(bad)
int3
std
dec
push
mov
jl
inc
psllq
cld
cmps
adc
xchg
pop
sub
retf
dec
pop
mov
(bad)
outs
sub
jns
in
and
test
mov
xchg
pop
shl
ficomp
xchg
je
shl
pop
out
xchg
push
jmp
xor
pop
dec
stc
sub
push
cdq
cs
dec
fnsave
shl
frstpm(287
xor
icebp
push
adc
cs
mov
mov
xchg
es
rcr
shr
inc
mov
pop
stos
or
loop
or
xlat
ret
aad
pop
jmp
and
add
cmp
cld
jb
mov
mov
cmp
sbb
xor
adc
dec
rcr
adc
shl
cmp
loop
mov
(bad)
call
ins
mov
jb
mov
push
les
dec
dec
inc
mul
push
neg
pop
ins
or
push
stos
pop
pop
push
or
push
mov
xchg
mov
adc
int
(bad)
movs
xor
and
in
adc
fdivr
lahf
add
xor
arpl
scas
call
mov
je
xor
hlt
data16
inc
leave
das
pushf
jbe
cdq
(bad)
cmp
push
ret
jns
ja
xor
cmp
mov
ja
inc
or
sub
fdivr
inc
adc
jae
cmps
adc
ret
inc
mov
xor
adc
sub
ss
inc
push
(bad)
or
(bad)
fcmovu
sbb
mov
mov
leave
sahf
mov
xchg
adc
inc
pop
mov
ror
and
fidiv
and
push
fist
and
jge
bound
sar
lods
pop
ins
mov
xchg
add
or
imul
out
rol
adc
gs
pop
int
inc
iret
push
int
popa
lock
stc
or
pop
inc
jmp
clc
clc
ror
adc
jnp
in
jns
popa
push
jp
fdiv
arpl
xchg
out
push
xchg
imul
loope
ret
adc
or
and
ds
(bad)
retf
jle
dec
jae
fdiv
add
push
adc
adc
or
xor
repnz
aam
out
inc
cli
leave
sub
mov
lods
fsub
cmp
pusha
stos
mov
aad
retf
retf
xchg
cmp
xor
mov
test
ss
dec
dec
loop
pop
pop
dec
sbb
ins
imul
fs
es
sbb
mov
mov
sub
movs
pop
push
sbb
sar
adc
and
inc
xor
(bad)
lock
dec
cmps
pop
arpl
es
cmps
mov
pop
lea
xor
and
fmul
mov
aad
les
pop
sub
aas
pop
and
push
clc
in
mov
test
in
fs
out
std
inc
mov
and
sub
(bad)
(bad)
jnp
rcr
gs
leave
mov
dec
dec
imul
cmp
jno
popf
jne
das
mov
es
xor
jge
inc
lods
data16
pop
je
sub
sbb
js
retfw
(bad)
sub
out
das
lods
scas
cmps
and
mov
and
out
jo
std
loope
dec
ja
xchg
mov
cmp
hlt
inc
je
ror
push
jns
call
push
jae
adc
std
jmp
addr16
push
jge
cmps
test
sahf
xchg
es
cmp
sti
mov
ret
pop
mov
sub
outs
arpl
jmp
push
cmp
fild
push
sbb
shl
int3
push
inc
push
nop
inc
inc
imul
fdiv
je
add
fsub
call
sbb
cmp
clc
sub
mov
mov
push
mov
dec
outs
pop
lock
and
jl
xchg
(bad)
(bad)
loop
(bad)
mov
mov
jecxz
and
and
mov
cmc
adc
push
sar
jmp
in
mov
dec
and
int3
pop
aad
mov
sub
les
xor
bound
popa
push
sbb
fnstsw
sbb
idiv
push
repnz
ss
mov
adc
(bad)
cld
sub
pop
mov
sbb
add
add
xlat
mov
ret
jg
imul
mov
mov
fnstcw
mov
clc
push
imul
jne
adc
faddp
sahf
stc
out
and
add
sbb
sahf
scas
xchg
aas
retf
xor
push
fwait
sbb
imul
inc
(bad)
(bad)
mov
ret
test
loope
pop
or
inc
aaa
cmps
enter
sub
sbb
enter
out
mov
cmc
call
mov
dec
dec
test
lea
cld
js
sbb
sub
popf
jne
hlt
pop
addr16
jecxz
add
push
sub
inc
adc
xchg
push
push
das
stos
(bad)
repz
sbb
push
mov
add
sub
iret
hlt
and
mov
adc
mov
sar
daa
(bad)
in
fcomp
add
int
dec
jle
outs
pop
gs
not
cld
cld
push
inc
mov
adc
xchg
add
js
js
adc
xchg
mov
cwde
xor
cmc
mul
not
push
xchg
fs
xchg
mov
sbb
repnz
loop
push
adc
dec
inc
mov
je
paddq
(bad)
dec
mov
test
xchg
in
fwait
xchg
out
adc
aad
cmp
fisubr
push
and
push
or
hlt
mov
arpl
ror
jmp
dec
mov
fst
xchg
stos
movs
fwait
in
(bad)
mov
xchg
adc
and
dec
and
rcl
popf
xchg
or
jmp
pop
sub
mov
push
dec
pop
loop
inc
xchg
loope
xchg
popf
pusha
ret
out
sbb
or
inc
sub
push
add
and
jecxz
and
out
and
(bad)
in
into
jl
mov
loopne
or
je
dec
sbb
mov
daa
sbb
in
mov
clc
dec
retf
add
xor
mov
fild
cli
add
lds
mov
inc
or
fistp
push
call
test
mov
rcl
cs
mov
(bad)
or
ins
test
cmc
or
(bad)
leave
out
inc
inc
shl
or
(bad)
fs
xchg
and
test
xchg
in
test
cmp
sahf
or
rcr
xor
mov
cmp
lahf
jo
add
and
add
cwde
push
mov
pop
rcr
lgs
cwde
add
(bad)
xor
jmp
mov
push
cmp
and
or
iret
iret
shl
push
sbb
mov
mov
dec
push
sub
or
adc
fcom
call
shl
(bad)
inc
cmp
push
mov
push
or
imul
imul
iret
push
in
fisubr
adc
loop
xchg
loop
leave
adc
(bad)
popf
or
cmps
mov
(bad)
mov
mov
jmp
xor
and
test
stos
mov
push
adc
rcl
adc
mov
aad
call
loop
fist
fisub
jno
mov
cdq
(bad)
fsub
pushf
jmp
mov
mov
sbb
xor
popa
xchg
xor
xchg
cmp
mov
jmp
fistp
int
sti
ret
jns
bound
cmp
dec
sbb
xchg
add
and
mov
or
pop
stos
add
cli
and
and
pop
adc
icebp
ds
or
cmp
sahf
(bad)
add
fbstp
in
ss
ret
xor
rcr
lods
popf
sbb
aaa
ins
or
xchg
loop
dec
call
xchg
pop
sbb
shr
jo
mov
cli
jmp
aam
in
lahf
addr16
movs
mov
mov
dec
lods
sbb
out
adc
scas
cs
fnstsw
fcom
push
neg
pop
fnsave
(bad)
mov
jmp
sbb
ror
repz
and
fdiv
retf
push
add
or
mov
das
push
addr16
inc
pop
and
sbb
dec
mov
mov
fcom
loope
mov
dec
xlat
rcl
loope
jmp
popa
jns
jbe
leave
jne
rcr
and
mov
in
loopne
pop
retf
mov
adc
pop
pop
fstp
xchg
push
or
pushf
sbb
jno
nop
add
out
or
fstp
popfw
sub
fwait
inc
xchg
jg
outs
jbe
mov
out
cmp
es
xchg
(bad)
mov
test
in
sbb
and
das
fist
icebp
cs
fwait
outs
fs
mov
sbb
repnz
mov
lahf
add
mov
mov
push
sub
add
(bad)
jmp
jge
add
fist
push
push
mov
stos
push
popa
ss
in
sti
jb
test
pop
js
dec
sahf
jmp
clc
or
pop
or
js
jmp
mov
adc
dec
pop
mov
sub
cmp
test
adc
repnz
fidivr
sbb
addr16
pop
jp
pop
aad
lds
ins
out
arpl
lea
xchg
jl
iret
or
shl
dec
and
ffree
dec
pushf
shr
mov
push
xchg
sub
and
sti
xchg
jmp
dec
mov
out
mov
cmp
fsubr
data16
ins
and
inc
je
call
jb
mov
pop
lods
es
pop
cli
les
retf
mov
sbb
pop
or
or
xor
xchg
ror
mov
adc
fmul
adc
pop
xor
das
jae
out
js
mov
and
mov
out
dec
mov
test
outs
push
into
dec
jb
cmp
sti
loopne
mov
lahf
dec
cmp
push
aad
fisubr
pushf
sbb
shr
repz
add
mov
call
rcr
inc
sub
jge
push
mov
jb
sbb
aad
test
test
mov
dec
test
mov
scas
mov
jo
data16
pop
xor
add
test
nop
mov
cmp
lods
dec
scas
enter
cmps
dec
outs
adc
test
cwde
xchg
movs
fnstcw
sti
shl
sub
imul
push
ret
ins
jge
les
cmp
add
test
mov
or
xchg
pop
jg
fmul
mov
cmp
mov
push
cmp
xor
and
sbb
sbb
enter
ins
push
sub
push
push
push
in
mov
movs
repz
jecxz
xchg
sbb
jmp
pop
push
dec
fcomp
out
popa
movs
push
jg
aam
mov
cmps
jbe
ss
xor
(bad)
mov
gs
sub
cmp
fld
arpl
daa
push
mov
loopne
pop
sub
lea
mov
mov
out
js
test
out
lock
(bad)
mov
out
and
mov
inc
cmp
phaddd
dec
add
stos
mov
lea
mov
test
mov
je
jne
loop
std
mov
sbb
sbb
in
movs
inc
pop
cmp
loope
rcl
add
ficomp
ins
mov
inc
jbe
jg
pop
int
(bad)
sbb
loope
push
mov
or
ds
retf
jnp
xchg
fwait
imul
cmp
push
daa
ror
jb
push
jb
mov
out
adc
inc
push
nop
push
cwde
lods
aad
rol
retf
(bad)
(bad)
shl
in
adc
movs
jecxz
cld
stos
push
xchg
ins
scas
jl
pop
popa
repz
and
jne
jp
push
mov
mov
pop
pushf
in
pop
mov
mov
imul
lds
(bad)
sahf
sbb
repnz
push
ficom
cmps
retfw
mov
mov
loope
push
add
mov
dec
and
into
cld
imul
lahf
mov
add
sbb
jge
test
and
adc
pushf
and
(bad)
jo
sub
neg
enter
mov
mov
fwait
jle
pusha
cmc
movs
and
pop
xchg
lea
jl
push
sub
xor
sub
in
mov
mov
ds
cwde
lahf
push
(bad)
jmp
xor
adc
mul
in
sbb
xor
and
adc
retf
dec
call
pop
adc
mov
cmp
and
inc
leave
call
test
or
je
xchg
add
sbb
das
mov
jl
daa
add
pop
test
xchg
shr
xchg
fsub
cmps
cmp
push
jge
mov
pushf
(bad)
dec
retf
dec
fisub
inc
pop
ror
inc
fimul
mov
push
jns
jo
test
or
dec
sbb
dec
jae
lds
mov
add
lds
xor
jge
xchg
gs
or
mov
addr16
xchg
push
stos
imul
xor
lock
js
push
into
push
or
jl
cli
in
test
ret
add
push
test
(bad)
std
call
cmp
cmps
test
not
maskmovq
not
lahf
ds
mov
or
mov
push
sti
mov
retw
jbe
push
out
lock
scas
xchg
bound
mov
outs
rol
ret
push
clc
test
jb
adc
mov
nop
cmp
pop
dec
retf
mov
in
int
je
movs
jns
scas
loop
bound
sbb
call
fbstp
push
sbb
jge
jmp
add
das
jnp
add
test
push
mov
gs
jmp
out
stos
popa
cmp
dec
mov
das
mov
mov
ficomp
pushf
movs
cmp
pop
pop
xchg
jmp
sub
jbe
xor
dec
and
pop
ins
in
call
sub
jge
inc
(bad)
iret
push
stc
jno
popf
inc
xlat
mov
out
xor
dec
adc
sbb
mov
xor
mov
or
xor
les
rcr
and
cmp
scas
xor
lods
mov
bound
mov
jle
mov
mov
sub
mov
shr
mov
push
pop
mov
inc
jmp
test
push
sbb
sub
lahf
out
jp
xchg
adc
mov
cmps
jnp
iret
adc
sbb
popf
xchg
enter
jle
aad
stos
je
clc
mov
outs
mov
mov
in
cmp
inc
fisttp
iret
rol
imul
mov
fldlg2
mov
xchg
xlat
or
adc
jae
leave
call
mov
mov
mov
scas
(bad)
push
pop
stos
data16
rol
divps
mov
daa
xor
cmc
ins
mov
sbb
popa
outs
push
jecxz
xchg
repz
sub
and
push
push
out
mov
jb
jecxz
scas
lds
call
and
push
shl
sub
mov
lea
cmp
jne
mov
mov
adc
jae
mov
gs
dec
repnz
xor
inc
ror
test
ins
mov
jl
mov
xlat
pop
aas
into
(bad)
mov
ffreep
nop
lods
cmp
mov
and
mov
leave
dec
stos
sbb
loopne
sub
cmp
lea
out
adc
call
push
loop
sub
fdiv
sti
jl
idiv
out
xor
inc
stc
sub
sahf
mov
mov
mov
and
in
cwde
jns
call
outs
xchg
stc
mov
push
inc
test
int
(bad)
icebp
loopne
or
test
push
xor
xor
add
mov
call
jge
imul
(bad)
and
cmp
jl
cwde
mov
mov
ret
jmp
jp
inc
out
adc
je
bts
cmp
sbb
or
pusha
mov
xor
das
sti
sbb
test
cmp
in
sbb
pop
or
adc
mov
or
cmp
jp
popf
push
sbb
mov
xchg
pop
mov
cs
inc
pop
loop
xchg
sub
sub
ret
(bad)
call
call
push
adc
rcl
mov
xchg
adc
jns
div
push
dec
mov
adc
dec
inc
cmp
cmp
and
push
dec
and
jl
clc
jno
pop
sub
dec
cmp
mov
push
inc
sbb
(bad)
sti
mov
or
xchg
pop
push
aaa
dec
fistp
and
push
(bad)
aas
xlat
cwde
mov
or
xchg
sbb
pop
jae
mov
mov
hlt
pop
push
dec
ret
stos
fadd
pop
outs
and
and
sub
aas
call
mov
dec
pusha
xor
arpl
sbb
fst
in
adc
sbb
scas
add
inc
mov
(bad)
pop
icebp
jne
retf
fdivp
mov
jg
xchg
cmp
mov
imul
int3
push
mov
cdq
inc
xchg
push
adc
aas
hlt
lods
daa
inc
jne
inc
pusha
push
mov
pop
pop
out
ret
or
mul
add
mov
repz
mov
pop
pop
mov
pop
mov
mov
push
jae
cmp
ins
mov
xchg
jp
dec
shl
pop
push
fmul
mov
ficom
call
(bad)
int3
adc
ins
push
ja
mov
lds
popa
js
sub
dec
loop
cmp
rcr
js
pop
call
sbb
mov
jl
dec
mov
add
and
movs
sbb
aaa
outs
push
dec
rcl
popa
int
leave
gs
and
popf
sub
pop
ja
stc
or
mov
dec
outs
retf
mov
daa
das
call
popf
add
push
or
jmp
js
je
cs
sbb
sti
daa
sub
cmps
out
inc
xor
push
xchg
rcr
int
iret
adc
sub
mov
shl
int3
call
out
pop
in
xchg
mov
mov
push
ss
xchg
repz
jae
clc
dec
mov
sbb
jbe
adc
push
mov
push
push
mov
rol
xor
addr16
fsubr
xor
lock
dec
imul
push
push
js
outs
xor
cmc
jb
addr16
ins
dec
or
rcr
aas
std
push
retf
cmp
cmp
xor
sbb
fst
add
push
loop
popf
outs
sub
in
dec
jmp
sbb
and
(bad)
hlt
pop
stos
push
sbb
or
aad
lahf
push
sbb
mov
pop
mov
dec
push
and
fsub
inc
dec
and
adc
push
jno
(bad)
(bad)
frstor
adc
inc
cmp
push
pop
(bad)
fidiv
push
mov
clc
cmps
mov
push
mov
mov
lea
rcl
in
dec
(bad)
jmp
sbb
aaa
inc
dec
call
cdq
inc
mov
mov
jno
and
imul
push
mov
pop
xor
xchg
jns
(bad)
call
out
pop
jp
pop
sbb
cmp
leave
cmp
loop
adc
enter
js
push
push
ds
fdiv
mov
les
push
pop
xor
rol
or
jmp
sbb
jbe
rcl
push
out
jl
sti
loop
sbb
inc
jge
mov
push
dec
ret
pop
fwait
test
add
inc
jmp
and
(bad)
fmul
gs
pop
fsub
mov
test
sub
xchg
xor
imul
add
sub
mov
hlt
inc
pop
rdpmc
adc
gs
cmc
repnz
lea
fist
pop
xlat
pop
pop
cs
inc
test
aam
call
js
xlat
dec
xor
sar
sub
inc
cdq
jle
or
inc
and
(bad)
aam
lea
movs
test
push
xchg
add
movs
mov
in
mov
cmp
inc
push
mov
arpl
xor
add
mov
(bad)
push
push
ins
mov
aaa
adc
pop
sub
cmps
retf
add
push
aam
imul
push
imul
pop
es
jecxz
mov
out
lea
fsubr
jb
xlat
sbb
pop
add
loope
call
mov
sbb
add
(bad)
dec
pop
es
mov
test
push
add
cmp
sub
outs
fs
out
cmp
cmps
mov
aam
dec
pop
rol
pop
sub
(bad)
(bad)
sbb
imul
jecxz
movs
pop
scas
lods
js
mov
pop
dec
ret
mov
sbb
add
cld
mov
popa
test
ja
jg
shl
cmp
hlt
pusha
lds
inc
mov
out
cwde
je
xchg
lods
mov
out
inc
cmp
mov
in
hlt
mov
cs
std
push
sbb
or
pushf
dec
jo
dec
add
pop
popa
add
cmc
clc
push
mov
stos
cmp
aaa
mov
xor
dec
mov
sbb
call
inc
xchg
dec
and
in
mov
sub
loopne
(bad)
cmps
outs
outs
xchg
pop
and
cmc
xor
mov
jno
mov
lds
(bad)
leave
mov
sahf
push
out
inc
mov
sbb
inc
jne
dec
aad
ins
mov
sbb
pop
ins
jno
fbstp
jbe
mov
mov
mov
cmp
push
or
sbb
adc
cdq
lock
lock
mov
mov
mul
xchg
dec
mov
and
leave
movs
push
mov
adc
mov
movs
pop
dec
xor
inc
mov
jnp
add
shl
mov
cld
pop
mov
call
and
and
shl
cmp
add
lahf
mov
or
aas
or
push
aaa
cmp
call
jbe
leave
pop
mov
adc
lods
sbb
push
imul
mov
cmp
jg
mov
xchg
fisttp
xchg
pop
pop
(bad)
das
jnp
xchg
xchg
cmc
and
and
jns
jg
xor
addr16
pop
cmps
and
arpl
lds
jae
or
mov
test
es
mov
std
cmp
scas
test
shl
or
and
sub
lods
fdivp
imul
pop
je
es
in
adc
pop
ds
xor
mov
xchg
mov
cmc
xor
test
ret
out
(bad)
dec
cmp
dec
xchg
into
hlt
mov
cmp
hlt
jnp
rcl
xchg
mov
and
push
push
mov
bound
xchg
jnp
mov
or
inc
pop
pop
inc
inc
cs
icebp
push
xlat
inc
nop
loop
dec
sub
xchg
dec
into
xor
adc
mov
mov
mov
mov
mov
daa
sub
add
div
outs
push
(bad)
out
sbb
int
mov
test
stos
add
aas
dec
and
mov
xchg
cld
push
mov
pusha
hlt
leave
jecxz
lahf
repz
sahf
ror
mov
sbb
xor
dec
push
xchg
jg
clc
inc
dec
inc
jo
push
adc
inc
cmc
(bad)
cs
adc
fnstsw
not
push
push
cmp
or
xor
mov
mov
aad
aaa
out
xor
sub
push
in
xor
mov
sub
mov
and
inc
adc
daa
cmp
aam
stc
and
inc
jecxz
stos
jge
xor
loop
imul
jnp
push
fcom
mov
fucomi
or
mov
ss
add
ret
or
fadd
pop
jns
into
movs
push
cs
outs
cmp
pop
cmp
jmp
mov
(bad)
mov
or
pop
mov
lea
pop
call
push
cmp
sbb
bound
rcr
mov
pop
sub
add
add
loope
cwde
cmp
xchg
jge
stos
dec
(bad)
or
sar
in
dec
xchg
pushf
xchg
push
jmp
add
push
mov
sar
sbb
out
fistp
imul
ds
jne
inc
sbb
ror
sub
in
cli
push
add
and
(bad)
inc
pop
mul
cli
and
cmp
pop
sub
inc
jb
push
dec
adc
sbb
ror
push
jno
aaa
xor
inc
out
dec
inc
lods
jmp
fld
jp
imul
popa
mov
push
fisttp
stos
jge
cld
or
jecxz
add
dec
mov
pusha
adc
ret
sar
add
popf
(bad)
push
xlat
lahf
jae
inc
repz
cmps
inc
adc
ss
cmps
jmp
adc
stos
cmp
xor
mov
cwde
push
rol
imul
ins
xor
jecxz
xor
sbb
(bad)
in
pop
mov
xchg
xchg
ret
retf
stos
dec
fdivr
adc
mov
mov
sbb
mov
movs
lds
sub
sbb
pop
inc
mov
loopne
xchg
adc
xchg
sbb
mov
mov
in
jle
xchg
mov
pop
fist
call
mov
xor
dec
xor
and
iret
cwde
int3
adc
in
outs
nop
dec
and
mov
sahf
mov
mov
popf
int
gs
lock
popa
xchg
aas
popa
sub
push
imul
inc
les
pop
xchg
xchg
addr16
(bad)
push
stos
adc
out
sub
jbe
jg
das
cmp
(bad)
std
add
adc
push
pop
xchg
cwde
adc
mov
mov
sub
clc
jnp
xchg
cwde
loopne
jecxz
push
sbb
sub
dec
call
fstp
(bad)
lods
fsubrp
lock
jg
enter
sub
inc
aam
mov
cmc
retf
ror
call
and
outs
imul
sar
or
add
in
mov
nop
fdiv
pop
icebp
lods
in
adc
sbb
enter
in
xor
dec
jmp
jae
call
lods
cli
pop
mov
jb
sub
icebp
cmp
inc
mov
mov
xchg
ror
inc
in
stos
pushf
mov
sbb
pop
sar
scas
sub
adc
call
std
add
sbb
xchg
pop
add
cmp
stc
in
xor
mov
mov
outs
mov
cmp
mov
retf
(bad)
or
inc
xor
shl
add
mov
xlat
fisubr
jl
cld
jg
jg
lea
inc
mov
mov
jmp
dec
out
inc
mov
mov
xchg
repz
fwait
dec
nop
pop
xchg
jle
stc
sbb
ret
and
mov
(bad)
ins
mov
mov
into
xchg
in
mov
adc
repnz
jb
pop
mov
inc
jo
ror
ret
ins
mov
and
push
jp
fxam
nop
and
icebp
aas
fbstp
inc
stos
call
enter
pop
xchg
popaw
pop
loope
data16
sbb
shl
push
and
mov
xchg
test
psraw
aad
addr16
lock
push
(bad)
xchg
fst
xor
mov
into
sti
xor
pusha
dec
dec
or
sti
dec
ja
sahf
jmp
inc
fs
stos
push
fld
push
adc
push
not
pop
addr16
std
pop
pop
and
jg
cmc
sbb
mov
mov
cmp
xchg
and
mov
mov
mov
pop
sub
and
cdq
js
mov
cdq
adc
jmp
mov
and
arpl
pop
adc
repnz
test
mov
ins
rcr
add
lea
test
inc
out
repz
add
mov
or
pop
xchg
cmps
xor
out
jmp
push
fst
fstp
lock
mov
mov
jl
jmp
fstp
mov
mov
mov
inc
cs
hlt
out
call
jle
mov
and
mov
call
dec
or
cwde
inc
mov
iret
sbb
loop
jmp
jo
push
jne
push
fsubr
mov
xchg
lods
ss
in
dec
in
mov
mov
push
stos
jb
jl
stos
jae
dec
movs
push
dec
push
cmp
cmp
aam
inc
scas
fdiv
out
es
imul
lea
push
jecxz
cmp
lock
in
icebp
fst
ja
or
and
pop
mov
(bad)
enter
mov
mov
dec
bound
push
popa
jns
nop
pushw
mov
mov
sub
in
inc
mov
adc
mov
jmp
call
mov
scas
enter
movs
js
sbb
push
ret
push
fild
add
mov
xchg
inc
jecxz
xchg
(bad)
scas
in
cmps
fwait
bound
inc
inc
inc
mov
cs
jmp
add
call
or
retf
sbb
cmc
push
aam
and
loopne
jmp
push
out
in
add
or
and
adc
push
ins
fist
imul
leave
dec
pop
movs
mov
nop
cld
imul
(bad)
push
inc
retf
test
sub
cdq
cmp
sbb
fdiv
imul
repnz
in
jecxz
ret
fcomp
and
or
out
ret
or
jmp
fld
stc
into
add
and
(bad)
xchg
int3
jae
pop
pop
mov
jo
push
push
(bad)
dec
mov
jne
adc
mov
mov
mov
nop
out
jno
mul
xchg
pop
retf
xchg
dec
rol
mov
test
loope
cli
xchg
rcr
or
daa
push
jp
sub
cmc
rcr
nop
test
push
sbb
add
mov
add
cmps
hlt
or
fwait
les
je
mov
and
add
jae
movs
push
xchg
les
mov
sub
jbe
or
mov
test
dec
test
xor
xor
inc
mov
adc
lods
cmps
out
outs
inc
js
nop
fistp
cwde
mov
mov
cmp
or
pop
cmp
cld
cmp
pushf
jp
pushf
add
inc
jle
cli
xchg
gs
(bad)
(bad)
jmp
ret
loope
mov
push
and
retf
popf
jl
xchg
popf
and
mov
xchg
jle
xchg
fcmovnb
push
cli
mul
lods
inc
aam
aam
pop
mov
int3
stc
jb
mov
jnp
adc
inc
iret
ret
mov
jb
retf
xor
jge
ds
ins
loop
cmp
fadd
add
test
adc
sub
outs
out
call
loopne
pop
and
daa
jo
dec
inc
and
mov
adc
aas
pop
(bad)
mov
jge
push
dec
sbb
jecxz
lahf
jb
ja
adc
call
fidiv
mov
push
lods
or
fs
inc
ds
scas
xchg
push
sbb
mov
sub
pop
clc
mov
clc
in
aad
sub
retf
pop
xor
sbb
pop
xchg
jmp
int
cmp
push
loop
ret
fmul
nop
call
push
push
jbe
ret
das
idiv
mov
retf
jae
xchg
mov
(bad)
pop
sub
ins
repnz
jo
push
lods
jns
xchg
push
add
xchg
fld
test
cmp
or
jnp
in
mov
or
orps
mov
(bad)
cmp
aam
repz
fst
sub
(bad)
pusha
(bad)
push
aaa
xchg
push
cli
mov
js
pusha
daa
test
fisub
test
inc
cld
xor
call
xchg
or
lahf
xor
sub
scas
or
inc
fwait
add
dec
or
je
arpl
jmp
adc
mov
inc
mov
fnstenv
dec
jnp
es
push
or
sub
test
xchg
mov
sbb
xor
and
dec
lods
out
xchg
xor
push
or
out
inc
fnsave
je
push
fsub
sub
ds
jge
mov
xor
xor
call
sahf
pop
fisub
fbld
adc
jo
cmp
jmp
xchg
in
out
xor
int3
sub
call
cdq
add
aaa
leave
jecxz
or
push
push
push
xor
jno
mov
inc
mov
mov
xchg
dec
fistp
shr
add
mov
fstp
(bad)
jbe
das
sahf
xor
lods
loope
repz
dec
(bad)
sahf
daa
out
dec
bound
jecxz
push
std
or
and
sub
pop
mov
inc
ror
repz
ret
mov
sub
and
imul
add
cdq
cmps
pop
icebp
cld
dec
jecxz
xchg
pushf
lds
mov
repz
lea
retf
stc
jecxz
xor
jmp
add
and
fiadd
or
xchg
outs
test
xchg
clc
sub
mov
sub
ss
dec
xchg
out
mov
fild
jae
ret
sbb
adc
out
in
inc
xchg
pushf
std
xchg
jmp
icebp
xor
mov
std
fadd
mov
xor
(bad)
int3
or
(bad)
outs
jne
in
xor
jbe
fsubr
mov
add
pushf
jo
cs
in
out
adc
hlt
or
outs
and
xor
jg
and
pusha
xchg
ss
ficom
pop
(bad)
inc
cmp
mov
std
push
cmp
cmp
dec
pop
mov
cmp
lea
mov
push
loop
inc
dec
add
icebp
cmps
loope
dec
ds
and
adc
jbe
jne
push
int
into
or
lfs
repz
xchg
imul
(bad)
cmps
enter
pop
jb
xchg
pop
dec
or
call
ss
lds
nop
and
mov
(bad)
mov
leave
dec
mov
cmps
mov
push
in
popf
pop
jecxz
call
clc
adc
jne
cld
xchg
js
jno
inc
add
adc
and
movs
sbb
fcom
push
js
int
pop
imul
stc
ja
fmul
jp
test
jns
jnp
call
and
dec
js
sahf
cmp
xchg
not
(bad)
fdiv
imul
shl
pop
xlat
xor
popf
(bad)
jnp
push
mov
adc
outs
adc
dec
xor
pop
lea
(bad)
fst
shl
fwait
lods
cdq
inc
push
and
daa
dec
ret
xchg
(bad)
mov
cmp
fstp
ret
adc
inc
cmp
loop
in
fst
or
ja
or
in
sar
bound
unpckhps
push
jg
add
sub
pop
pop
je
push
les
adc
mov
xchg
stos
dec
mov
aam
daa
ret
mov
hlt
push
cmps
add
lods
add
xchg
and
xchg
jg
pop
xor
or
test
cmp
out
push
inc
sub
ja
cmp
xor
lds
jnp
ret
leave
cmp
mov
pop
add
and
jle
push
sbb
out
inc
pop
cdq
sub
and
imul
sbb
xor
xor
retf
or
not
pop
(bad)
jmp
push
and
push
sbb
jecxz
sar
stc
push
push
(bad)
div
out
mov
push
pusha
ss
daa
gs
pop
push
sbb
jnp
mov
inc
dec
and
adc
lahf
dec
outs
add
je
fnstcw
sub
(bad)
call
loop
add
mov
arpl
(bad)
rol
inc
xor
cld
mov
xchg
mov
imul
loop
adc
add
jbe
(bad)
mov
push
pop
(bad)
loop
inc
xchg
mov
add
inc
xchg
shl
add
iret
jne
cmp
or
add
imul
mov
mov
clc
cmps
ins
std
arpl
fbld
sbb
(bad)
push
cmp
ss
and
aam
enter
dec
icebp
test
sbb
rol
xlat
aam
sbb
jl
lods
imul
add
or
add
js
inc
repz
dec
sub
cvtpi2ps
out
inc
sahf
(bad)
mov
lock
and
mov
aam
mov
sub
jmp
dec
push
in
dec
xor
out
popa
mov
dec
cmp
(bad)
pop
or
or
push
ds
jmp
stc
dec
inc
add
ins
xor
popa
mov
je
cs
rcl
jl
sub
push
inc
stos
mov
rcr
imul
lea
xchg
jnp
int
inc
dec
xor
clc
pop
aas
(bad)
mov
add
or
into
jbe
add
push
cmps
outs
dec
jmp
stos
cmp
cmp
sub
jl
seto
jns
adc
xor
sbb
std
stos
push
jmp
std
repz
mov
cmps
les
in
add
xor
loopne
or
push
addr16
xchg
or
loope
add
fadd
mov
sbb
rcl
or
cmps
in
jp
push
xor
dec
xor
stos
aad
movs
mov
xchg
repnz
or
inc
outs
push
sub
shl
add
sub
icebp
call
adc
jge
out
ds
jbe
fnsave
sti
add
fldcw
dec
adc
add
ss
jmp
mov
neg
jne
mov
addr16
sbb
int3
sub
xor
xchg
movaps
cmp
jmp
lahf
and
in
cmp
push
in
push
mov
cld
sbb
fiadd
or
iret
fdiv
icebp
bound
adc
jne
add
movs
cwde
jmp
dec
loop
mov
in
jle
(bad)
or
test
push
popf
jno
mov
fild
ins
pop
jmp
push
fstp
push
rol
or
mov
pop
sbb
cmps
mov
jmp
jno
add
fstp
mov
jmp
pop
ror
in
loop
jmp
xor
movs
inc
repz
pusha
hlt
(bad)
fsubr
pop
ds
js
sbb
fdivr
nop
scas
push
test
ja
push
and
cdq
scas
test
jae
xchg
fimul
outs
and
mov
xor
call
add
shl
add
addr16
fucomip
jmp
pop
jnp
mov
mov
test
mov
cmp
cld
mov
ja
xchg
mov
jo
(bad)
jae
add
hlt
mov
daa
jl
adc
pusha
or
dec
mov
gs
jg
mov
jo
hlt
xchg
cmp
fisub
mov
xchg
out
add
bound
and
push
push
lea
aam
sub
mov
xor
mov
sbb
(bad)
push
sub
add
jnp
inc
xchg
and
mov
test
mov
sub
cmp
mov
icebp
jl
mov
(bad)
xchg
call
cs
jecxz
mov
shr
les
xlat
jne
sub
xchg
dec
je
inc
jb
jmp
xchg
(bad)
mov
dec
inc
pop
sub
dec
ja
movs
imul
ficom
imul
ins
jecxz
push
bound
xchg
cmp
scas
adc
push
mov
mov
mov
cdq
imul
xchg
sub
push
mov
ret
mov
dec
mov
mov
pushf
mov
pop
les
scas
adc
dec
(bad)
dec
aaa
sbb
mov
sbb
repz
out
add
jmp
push
inc
mov
jno
jl
(bad)
xchg
pop
outs
xchg
out
clc
dec
mov
push
(bad)
loope
push
cdq
test
sti
shl
daa
in
mov
cwde
shl
test
outs
sub
mov
pop
stc
pop
jecxz
sbb
clc
adc
mov
and
mov
jmp
les
pop
or
sub
push
outs
pop
push
sub
ins
mov
enter
aaa
adc
push
lods
mov
ror
popa
jmp
cs
in
xchg
pusha
mov
dec
mov
mov
jb
or
add
push
das
ret
and
mov
mov
mov
int
dec
rcl
fcom
mov
(bad)
dec
stc
cwde
add
or
jbe
xlat
cs
adc
cwde
rcr
mov
out
adc
ret
cmc
jmp
dec
ret
stos
loope
out
popa
(bad)
pop
rep
jle
inc
jmp
jne
ret
pop
aaa
(bad)
sar
iret
jnp
ja
mov
jp
scas
fld
stos
dec
mov
sub
inc
mov
mov
ret
ja
and
pop
push
sbb
mov
sbb
repz
aad
loop
mov
mov
aam
add
iret
mov
int3
xchg
icebp
sbb
fwait
sub
pushf
and
les
sbb
(bad)
mov
cli
clc
outs
mov
inc
xchg
repnz
aad
pop
push
push
stc
pop
sahf
aam
cdq
lds
scas
je
mov
add
pop
stos
xor
pop
add
sub
xor
ret
shl
pop
in
jbe
adc
sub
adc
out
fcomp
jae
mov
ins
add
fldcw
cdq
mov
dec
mov
imul
faddp
and
mov
stos
loopne
mov
fidivr
adc
fild
inc
add
popf
iret
add
cmp
and
jb
mov
in
sub
or
dec
and
sar
fsub
cwde
popf
mov
fs
ja
cwde
and
in
dec
les
push
push
nop
jbe
call
mov
or
sub
jp
inc
sahf
adc
xor
or
ss
jl
sub
add
out
jns
lds
inc
sbb
pop
mov
add
fld
cmps
mov
mov
(bad)
das
xchg
lods
movs
imul
fdivr
push
jl
dec
test
out
(bad)
mov
std
adc
push
xchg
adc
and
inc
outs
add
aad
icebp
aaa
jb
pop
ds
addr16
xor
retf
sbb
in
and
push
leave
pop
xchg
fsubr
scas
out
cmp
add
mov
cmp
or
ret
mov
les
call
(bad)
aad
dec
add
sbb
and
or
int
mov
push
mov
sahf
mov
and
xor
loop
fdiv
movs
jle
in
pop
cmp
pop
nop
sti
outs
lds
ins
xchg
mov
call
mov
or
xlat
test
shr
int
mov
mov
and
shl
dec
enter
mov
test
outs
add
xchg
movs
std
dec
mov
inc
retf
push
jns
sub
shl
out
mov
adc
lock
inc
xor
mov
rcr
xlat
ror
bound
mov
in
fs
sbb
cmp
adc
ins
cmp
fisubr
sub
cmp
adc
xchg
jg
movs
jmp
inc
jecxz
iret
mov
cmp
into
jg
ins
(bad)
fistp
test
mov
ss
jle
sahf
test
shl
sub
out
push
or
pop
mov
fld
int
jbe
scas
push
dec
cmp
pop
mov
sub
cmp
data16
mov
(bad)
retf
fwait
xchg
lahf
inc
scas
jmp
enter
fstp
je
cld
inc
test
(bad)
sbb
mov
out
xor
and
xchg
or
sbb
popa
fistp
leave
(bad)
and
fwait
or
add
inc
xchg
lea
or
or
sbb
fadd
push
jae
lock
sub
adc
out
jns
push
add
movs
sbb
shl
sbb
xchg
mov
popf
and
inc
jmp
sbb
add
mov
xchg
outs
add
sbb
jmp
aad
cmp
(bad)
cmp
int3
add
pushf
gs
push
rol
cdq
retf
mov
push
mov
shl
jmp
mov
icebp
ds
sar
mov
cmp
in
mov
xor
add
add
dec
and
inc
dec
pop
sbb
loopne
nop
jp
jns
leave
jle
pop
jecxz
jnp
sub
add
out
pushf
in
sub
add
dec
jno
es
and
sbb
addr16
cmp
push
sub
lock
es
inc
pop
hlt
mov
mov
xor
test
in
mov
inc
or
adc
sub
adc
rcl
je
cdq
or
(bad)
shl
arpl
and
fwait
out
retf
test
inc
rcl
call
outs
xchg
pop
daa
mov
sahf
daa
hlt
outs
leave
test
cdq
push
inc
aaa
xchg
das
in
cmps
fsub
cmp
out
fcmovbe
inc
xchg
ficom
popf
outs
ins
in
cmc
xchg
dec
sub
aad
out
dec
imul
es
retf
ds
cdq
dec
and
jg
dec
jmp
cmp
xor
out
mov
mov
mov
adc
sbb
leave
pop
cmp
and
loope
or
and
dec
or
push
sbb
or
pop
movs
jae
cdq
repz
sbb
imul
fbld
mov
(bad)
out
cld
push
loopne
mov
into
adc
es
ret
call
and
adc
(bad)
in
jo
jns
xor
ja
fcom
das
shr
cld
mov
xchg
cmps
lock
mov
mov
inc
mov
ss
mov
aaa
pushf
add
lahf
lock
test
dec
sub
jnp
icebp
xchg
mov
pop
pop
daa
popa
cli
push
xchg
adc
mov
add
sbb
adc
retf
ret
mov
sbb
and
sahf
jno
sbb
lods
sub
pop
mov
movs
aas
push
pop
xchg
adc
fld
inc
fs
mov
shr
inc
xor
mov
jge
and
sub
pop
sbb
xor
add
dec
icebp
sbb
inc
or
xchg
lea
sub
mov
movs
adc
push
mov
xlat
push
cmps
pop
mov
mov
sbb
xchg
das
pop
dec
dec
out
xchg
pop
mov
stos
push
mov
push
neg
xchg
jb
lods
jne
repz
shl
dec
cmp
sahf
dec
scas
ret
std
in
push
fdivr
scas
add
test
inc
mov
ss
not
clc
(bad)
jns
dec
adc
xchg
mov
out
in
popa
add
dec
ror
ret
push
or
and
maxps
sub
into
xor
in
(bad)
rol
fnsave
ins
cmp
or
nop
fcom
push
push
cmp
add
neg
push
in
jge
mov
push
xchg
and
mov
ins
pop
cmp
ja
mov
nop
sbb
jmp
aas
icebp
jge
es
mov
addr16
xchg
rcl
pushf
(bad)
cli
jl
add
rcr
pusha
not
and
xchg
lea
sbb
pop
push
outs
push
cmp
push
and
xchg
sbb
mov
sti
xchg
adc
sbb
loop
lock
push
gs
pop
aam
adc
jo
sti
ss
std
jb
add
dec
mov
adc
mov
popa
dec
add
(bad)
jo
mov
jne
sub
mov
imul
js
jl
or
mov
aam
cmp
jle
mov
mov
dec
pop
add
into
lahf
add
sbb
jb
xchg
mov
dec
fnstcw
jns
dec
or
outs
popa
jno
xchg
pop
loope
fisttp
or
loopne
push
jl
pushf
push
jle
sub
xor
lods
ja
or
sub
fwait
addr16
stos
push
in
loope
pop
(bad)
cwde
sub
imul
out
in
lea
dec
sbb
sbb
inc
rcr
shr
push
mov
addr16
sub
loopne
jg
mov
sub
es
jns
xor
pushf
lea
push
std
movs
cdq
pop
mov
and
inc
cmp
push
mov
mov
not
sub
dec
sbb
mov
adc
out
sbb
push
inc
aam
inc
inc
pop
inc
imul
sbb
add
test
int3
push
dec
add
push
inc
push
sub
mov
add
inc
jge
and
je
enter
stos
cmp
out
mul
in
ror
into
sub
mov
stos
jnp
xor
push
dec
in
jnp
hlt
and
and
push
sti
mov
test
arpl
dec
std
adc
fistp
data16
aaa
and
pop
cmp
mov
xor
dec
jo
jae
xor
ins
or
add
popf
mov
pop
push
mov
lods
mov
sbb
push
dec
lock
clc
sub
jae
mov
jb
and
mov
pop
and
in
les
push
and
ja
sbb
push
lock
adc
icebp
inc
mov
jbe
retf
mov
movs
mov
movs
inc
xchg
jg
sbb
sti
xor
(bad)
cli
or
fdecstp
sbb
xchg
cmps
cmp
popa
mov
arpl
pop
sub
pop
dec
sub
sahf
mov
inc
mov
adc
push
movs
jbe
push
out
(bad)
loopne
cmc
test
pop
mov
das
scas
mov
dec
outs
dec
inc
dec
mov
xor
(bad)
jmp
shl
lds
dec
mov
mov
adc
ss
lahf
mov
mov
in
ficomp
in
and
add
or
fdiv
or
adc
ja
jo
mov
xchg
cwde
(bad)
mov
sub
dec
stos
ffree
sub
mov
rcr
dec
jl
dec
sbb
pop
add
sub
add
daa
fst
mov
aam
fadd
int3
add
call
xchg
ja
fdiv
or
jb
push
inc
sbb
dec
pop
mov
icebp
mov
xchg
sbb
sahf
in
lock
mov
cmp
es
daa
cmp
mov
cs
adc
loop
out
inc
pop
push
pop
mov
rcr
jl
pop
mov
mov
outs
xchg
fsubr
in
outs
cwde
cwde
and
frstor
push
push
push
mov
pop
ins
pop
lods
xchg
enter
or
mov
xor
push
inc
movs
js
call
ins
sub
retf
(bad)
icebp
dec
push
sub
dec
cmc
dec
pop
dec
sub
lahf
adc
mov
(bad)
movs
mov
xchg
(bad)
mov
and
cmp
stos
gs
fisttp
jl
clc
rol
daa
jmp
xchg
cmp
adc
and
ret
retf
stos
mov
outs
push
inc
jno
repnz
sub
les
fdiv
and
xchg
(bad)
sbb
test
sub
pop
lods
pop
sbb
inc
add
dec
pop
shl
ja
jo
xor
hlt
loop
in
push
pop
sahf
in
stc
add
jbe
and
dec
and
adc
or
fisub
test
jecxz
call
mov
adc
aam
jmp
movs
jo
(bad)
jmp
pop
push
fdivr
push
out
loope
out
shr
je
add
xchg
push
ret
add
or
mov
jne
es
popf
in
loop
fimul
xor
ss
pushf
push
in
dec
outs
sub
mov
jo
aam
mov
push
xchg
aas
sbb
mov
mov
rol
mov
fwait
mov
dec
mov
fsqrt
jg
jl
push
call
mov
and
add
fadd
aas
pusha
shl
dec
lahf
retf
sub
dec
je
push
sbb
jg
fld
sub
mov
mov
(bad)
or
ret
cs
retf
inc
mov
rcl
fist
lds
stos
pop
clc
int
mov
mov
jmp
lock
mov
pop
lods
(bad)
adc
call
add
loop
fistp
push
loope
popa
addr16
pop
cmps
and
mov
jno
sub
lahf
or
hlt
sub
sar
cdq
stos
cmp
arpl
inc
sbb
out
and
sahf
sbb
neg
xor
xor
xchg
shr
mov
xchg
fild
and
fwait
pop
fsubr
mov
cmp
movs
mov
jnp
xchg
(bad)
lock
jae
sub
ins
and
mov
jb
push
(bad)
fld
mov
fcom
js
push
adc
fwait
add
jecxz
mov
sti
mov
mov
pop
rcr
clc
in
ss
imul
scas
inc
and
aaa
mov
in
int
cs
ret
and
mov
sbb
push
or
lock
inc
and
fadd
cmps
mov
movs
jecxz
enter
push
and
mov
lock
jge
pop
repz
xor
scas
cwde
aad
and
add
pop
add
and
cdq
out
mov
sbb
js
ret
icebp
xchg
addr16
or
sbb
jecxz
push
lds
inc
adc
jns
mov
mov
mov
movs
xor
std
and
push
int
sub
or
xchg
adc
(bad)
adc
mov
cmp
(bad)
stc
stos
dec
sar
inc
fdivr
mov
scas
xchg
add
sub
ins
(bad)
test
xlat
stc
lds
das
rep
bound
pop
xchg
movs
xchg
push
in
(bad)
xchg
mov
ins
mov
add
pop
sub
idiv
push
xchg
jb
das
cmp
fnstcw
sbb
inc
cmc
js
or
mov
out
jmp
gs
ret
mov
popf
lock
aad
ins
cmps
mov
jecxz
test
pop
inc
xor
jae
sbb
mov
adc
inc
daa
bound
lods
les
and
and
rcr
xor
dec
add
cmp
ins
aas
pop
xchg
dec
sti
lods
movs
aaa
arpl
adc
fbstp
adc
inc
push
daa
outs
fs
mov
sbb
ins
adc
lock
mov
fisub
jmp
sti
jb
xor
aad
jmp
shl
mov
adc
pushf
das
sbb
es
movs
jae
xlat
mov
dec
call
dec
(bad)
pop
pop
jbe
cdq
out
(bad)
jae
int3
call
or
xchg
test
hlt
sub
pop
jmp
inc
test
cmp
popa
or
sub
cmp
sahf
push
and
(bad)
out
sbb
pop
mov
mov
ss
icebp
es
repz
adc
push
popa
shl
sbb
pop
dec
or
lods
mov
inc
aas
icebp
jge
in
xchg
and
xchg
cmp
pop
jae
mov
cld
shl
xor
adc
test
stc
test
imul
cwde
add
test
aas
js
sub
jp
pusha
(bad)
leave
lahf
jmp
ds
pop
test
sbb
lahf
or
out
dec
sub
jge
inc
int3
jno
mov
fidiv
and
or
push
je
pop
inc
pushf
jb
stc
fwait
shl
mov
jl
mov
or
dec
pop
leave
inc
in
push
ja
repnz
mov
mov
dec
add
arpl
pop
dec
das
cmps
js
mov
pop
cmp
lds
dec
mov
mov
ror
addr16
xchg
push
shl
arpl
xor
push
pop
scas
ret
aad
test
mov
dec
cmps
cmp
push
fcomi
pop
mov
sub
stc
xor
xchg
dec
mov
shl
jmp
xchg
cli
sub
jp
rcl
xchg
mov
mov
cmp
(bad)
mov
sbb
in
arpl
cmc
repnz
rcr
push
cmp
xchg
pusha
or
dec
jl
mov
or
or
pop
cmps
mov
out
outs
rol
or
xor
div
(bad)
test
lods
xor
jne
iret
clc
(bad)
in
ds
shl
test
lock
push
popa
inc
push
jg
or
movs
movs
fsub
cdq
out
cwde
(bad)
clc
sar
sbb
jo
cmp
loope
add
iret
shl
ds
sub
xor
popa
nop
sub
ins
arpl
mov
xchg
cmp
mov
push
jns
rol
mov
ret
fwait
ins
lahf
cld
es
mov
mov
sub
jmp
jmp
fist
fwait
jmp
fmul
adc
sub
popf
lahf
or
mov
mov
jno
sbb
ins
mov
int3
xchg
adc
test
fmul
adc
fst
jnp
jle
pop
adc
mov
and
sub
mov
(bad)
in
push
fisub
scas
repz
sbb
push
std
or
movs
movs
shl
adc
pop
sbb
int3
gs
jne
inc
add
(bad)
pop
je
fild
cmp
jmp
push
xlat
fsub
inc
fmul
xor
mov
pushf
cmp
jp
jle
lock
icebp
out
pusha
mov
xlat
lea
pop
mov
adc
add
or
mov
jne
mov
fst
mov
inc
jbe
stos
lahf
or
movs
pop
bound
dec
ficom
mov
mov
lods
adc
pop
ret
pop
add
cmp
sahf
repnz
jmp
jp
jne
push
add
cmp
fsubr
sub
add
cmp
test
xchg
movs
xchg
ja
add
sub
retf
popf
jb
lock
in
sbb
loop
cmp
sahf
out
(bad)
(bad)
je
mov
mov
ret
xchg
data16
outs
jnp
jmp
sahf
cli
dec
sbb
mov
sbb
int
push
add
pop
scas
cmp
cmp
fidiv
sub
xchg
cld
js
ret
inc
ja
std
stos
cld
(bad)
in
dec
push
xor
sub
mov
and
addr16
loope
cmps
sub
jle
mov
scas
aam
inc
inc
(bad)
and
cmp
mov
pop
lods
ficomp
mov
not
imul
ss
repnz
add
or
adc
xchg
loop
(bad)
fs
add
es
push
repnz
sar
sbb
dec
push
mov
daa
lock
test
inc
sbb
daa
fucomp
sahf
xlat
push
push
jae
lock
sub
pop
icebp
out
(bad)
loop
mov
lock
cmp
inc
pop
repz
repnz
jg
xchg
aam
sbb
sub
popf
aas
or
outs
dec
daa
ror
je
pop
or
dec
inc
leave
idiv
out
xchg
fstp
jae
fnstsw
adc
mov
add
or
fidivr
ds
sbb
pop
mov
push
sbb
xchg
jmp
pop
inc
inc
adc
ret
repz
or
inc
dec
adc
mov
cmp
lea
call
xchg
ins
hlt
scas
stc
cwde
mov
xchg
xchg
sbb
loop
adc
inc
push
test
sub
div
xlat
mov
cs
push
(bad)
out
push
fstp
leave
pushf
das
sub
sahf
fucom
mov
fisubr
cmp
mov
pusha
shr
jecxz
xchg
ficom
stc
pushf
addr16
sub
mov
aas
aam
and
push
je
outs
xchg
xchg
cmp
dec
ror
aad
enter
mov
std
inc
es
popa
push
xchg
pushf
fwait
stos
add
mov
loope
sbb
cdq
or
xchg
and
sub
push
cmp
pop
int3
jne
mov
daa
adc
repz
call
fisubr
mov
ins
cmc
push
or
inc
sub
loopne
call
sbb
fimul
les
pop
gs
xor
jmp
repz
mov
scas
mov
mov
dec
pop
adc
bound
xchg
inc
push
js
and
dec
cmp
adc
(bad)
push
test
and
je
inc
movs
ins
scas
push
sub
loope
(bad)
test
stc
push
dec
inc
cmp
out
pop
popf
idiv
pop
repnz
addr16
jge
adc
xchg
dec
stos
mov
fldcw
and
xor
lods
rcl
mov
pop
cmp
mov
mov
je
in
sub
scas
mov
sbb
sar
or
and
out
dec
ror
popf
xchg
ret
cmp
icebp
shr
or
xor
stos
scas
ins
loopne
jge
pop
pop
pop
(bad)
scas
mov
jo
cwde
sbb
test
rol
cmp
fmul
pop
adc
lea
xchg
mov
cmp
ret
add
arpl
aaa
push
aam
cmp
dec
dec
mov
and
sbb
xor
pop
sub
cmp
lods
stc
jge
mov
pop
xchg
push
dec
mov
rcr
int
hlt
imul
bound
mov
adc
loope
jmp
(bad)
shl
push
(bad)
fmul
sahf
sahf
jbe
(bad)
add
or
jge
xor
ins
icebp
lods
cdq
add
and
cmp
int3
mov
push
add
lea
cmp
sub
(bad)
in
jecxz
movs
xor
jg
sbb
cmps
mov
ror
loopne
lods
ja
mov
mov
popa
cmp
fidivr
das
push
(bad)
fidiv
js
mov
or
aas
pop
pop
aas
push
out
mov
add
push
mov
and
push
or
loopne
dec
sbb
cmp
xor
cdq
xor
lock
cmps
fstp
or
test
mov
loop
je
gs
mov
neg
mov
neg
(bad)
iret
push
into
inc
adc
test
and
pushf
out
jg
sub
mov
mov
pop
cdq
adc
sbb
dec
dec
sbb
js
or
jl
adc
push
shr
push
shl
jae
xor
mov
push
popa
mov
retf
jo
push
xor
add
stos
mov
xchg
out
xor
shr
ror
cdq
add
xchg
frstor
jecxz
cld
jne
pop
das
sub
xchg
and
and
xor
neg
pushf
pop
int
jmp
aad
dec
retf
rcr
out
mov
sub
pop
in
add
jb
dec
mov
cmp
sbb
mov
xchg
int3
in
add
test
cwde
mov
out
jle
stc
cmc
cmp
adc
add
mov
lahf
cmp
(bad)
sbb
leave
or
outs
les
mov
sti
gs
inc
push
out
ret
push
sbb
jmp
adc
repz
lock
cld
mov
je
push
push
mov
cmps
movs
adc
cmc
pushf
aaa
ins
inc
fisttp
lods
cmp
pop
sar
es
shl
cmp
adc
imul
jb
mov
ins
push
xchg
lock
inc
push
mov
loope
cld
scas
test
movs
mov
push
xor
scas
pop
jns
addr16
mov
mov
imul
mov
xrelease
das
call
out
push
jo
fwait
ret
add
mov
out
sbb
pop
or
clc
and
(bad)
enter
sub
pop
imul
xchg
repz
push
adc
jp
cmp
leave
sub
jge
ror
cmp
jmp
stc
movs
(bad)
fadd
mov
loope
mov
push
fisub
pop
dec
das
or
add
jge
fcompp
aas
cmp
daa
imul
repz
pop
pop
int
xor
pushf
les
xchg
pop
xor
daa
js
rcr
push
es
int3
push
out
jmp
xlat
aaa
pop
push
inc
push
xchg
cmp
push
out
jo
xlat
int3
in
inc
pop
sub
not
jmp
outs
mov
mov
test
pop
jno
xor
fldenv
imul
scas
repz
xchg
shl
xchg
push
jnp
mov
and
clc
hlt
in
pop
mov
fcom
jmp
aas
jne
repz
scas
adc
in
jge
sbb
add
loope
cmp
pop
push
cmp
ja
mov
xchg
and
stc
cli
jbe
stc
aam
dec
outs
out
dec
mov
(bad)
lds
or
leave
cmp
xor
lods
sahf
jle
add
enter
mov
cld
out
(bad)
pusha
or
pop
or
push
or
dec
add
xor
fidivr
fs
enter
loope
adc
xchg
xchg
xchg
dec
jnp
test
cdq
test
addr16
pop
jo
in
and
mov
les
in
xor
iret
dec
push
fld
movs
sbb
mov
(bad)
sbb
dec
push
fs
xor
lods
cs
xlat
jno
pop
imul
jnp
lea
pop
add
mov
pop
inc
push
sub
movs
xchg
dec
dec
fmulp
xor
mov
mov
stos
leave
push
jecxz
fdivr
xchg
mov
jl
mov
std
jle
push
adc
pop
mov
push
adc
outs
dec
div
dec
pop
es
sub
ret
cli
mov
in
sub
jl
ret
push
add
cdq
(bad)
push
xor
bound
push
or
pusha
lods
sahf
pop
xor
push
mov
es
mov
xchg
outs
punpckhbw
pop
xchg
dec
sbb
call
outs
inc
test
enter
cwde
mov
add
dec
lock
movs
push
xchg
test
sub
cwde
xchg
push
mov
xchg
mov
retf
cli
mov
icebp
(bad)
adc
out
cdq
hlt
xor
mov
fsubp
test
pop
mov
or
jmp
pop
adc
cmps
mov
jns
(bad)
pop
push
mov
movs
(bad)
lods
mov
std
jb
jl
out
jmp
mov
push
push
jno
fistp
xchg
pop
jecxz
fist
je
call
inc
aaa
or
rcl
push
xchg
xchg
mov
sub
add
sub
fadd
mov
dec
in
jg
enter
sub
push
adc
lahf
jno
pop
inc
adc
mov
call
or
and
into
in
imul
popa
sbb
push
push
loop
lock
stos
mov
ss
jne
and
outs
add
jae
loope
pop
lods
xor
out
jg
xor
shl
inc
push
xchg
add
arpl
les
jae
inc
(bad)
in
ret
loope
aad
cmps
pop
mov
hlt
add
mov
xchg
inc
xlat
adc
sub
push
push
jne
ret
jne
and
add
and
retf
daa
xor
rcr
das
mov
(bad)
outs
sbb
int3
adc
pop
nop
aad
push
jp
or
bound
mov
inc
xor
es
push
push
imul
sar
sub
rcl
sahf
fs
inc
or
sub
lods
sti
push
loopne
sub
add
aam
xchg
jae
popa
xchg
call
sub
push
in
pop
std
sub
repz
(bad)
imul
iret
adc
push
jb
jl
adc
xchg
xchg
int
jge
mov
pop
jnp
xchg
sahf
mov
fwait
cmp
sbb
movs
cmp
test
push
retf
jnp
ds
or
mov
das
(bad)
cmp
cmps
xchg
mov
or
and
cmps
add
ins
push
rcr
push
sub
js
sbb
aas
out
and
call
in
mov
mov
mov
mul
add
xor
jbe
shl
pop
je
xchg
leave
dec
clc
or
xor
fisubr
jno
stc
cld
loopne
ds
cmp
inc
push
mov
xor
xchg
sbb
fwait
adc
es
mov
lahf
call
dec
push
out
(bad)
fisubr
and
jmp
pop
out
mov
add
xchg
xchg
cmp
push
pop
ds
mov
into
xchg
fdiv
inc
mov
inc
pusha
rcl
mov
rol
jecxz
add
mov
push
push
push
or
inc
push
sub
arpl
xor
(bad)
ror
jo
inc
add
xchg
arpl
dec
mov
faddp
adc
retf
mov
sub
sub
mov
adc
ror
inc
mov
aam
jno
bound
lahf
adc
out
in
mov
into
mov
cmps
pop
jecxz
gs
out
pop
mov
das
sub
retf
or
ins
mov
fpatan
nop
adc
mov
push
dec
imul
add
or
jmp
ror
jo
mov
pop
(bad)
cmps
jo
sbb
and
lods
enter
call
cli
seto
lods
iret
lods
repnz
jbe
test
mov
fcomp
leave
pop
ret
mov
sub
mov
fbstp
jne
sbb
jge
mov
adc
cmps
sub
xlat
xchg
in
pop
add
xor
jbe
mov
in
push
daa
(bad)
mov
xchg
dec
xchg
xchg
stc
data16
outs
jmp
xor
sub
imul
je
and
pop
scas
jl
adc
out
enter
or
xor
movs
cs
into
and
sub
mov
imul
mov
xchg
pop
shl
jmp
add
jecxz
outs
add
shl
ret
into
scas
mov
add
sbb
outs
pop
jbe
addr16
push
shl
mov
leave
repz
stos
and
sahf
(bad)
vunpckhpd
int
inc
and
jns
xchg
mov
jmp
test
xlat
in
mov
js
lea
sub
popf
jno
(bad)
imul
and
es
mov
out
push
pop
add
cmp
aad
sub
lods
inc
jle
and
neg
xor
push
inc
repz
int
in
add
xlat
cmp
and
add
jmp
ins
out
and
sbb
add
fwait
ds
or
js
push
(bad)
cmp
cmp
ins
cs
loopne
or
mov
call
int3
sbb
mov
fild
jno
jae
sahf
add
popf
call
pop
add
sbb
xor
loop
test
inc
dec
push
adc
dec
pop
cld
out
push
mov
mov
div
inc
push
push
dec
(bad)
icebp
sub
clc
hlt
popa
adc
es
icebp
jecxz
jmp
fwait
inc
fidivr
loope
lds
(bad)
int3
mov
and
sbb
add
cmp
aas
and
in
test
loopne
out
pop
fsubp
imul
(bad)
sbb
push
std
jmp
sti
add
sbb
repz
lock
int3
sbb
sar
rol
jge
mov
sbb
sbb
popf
sub
inc
mov
imul
fcom
shr
pushf
jecxz
call
mov
add
mov
fnstsw
lods
cmc
addr16
xchg
mul
lods
cmp
sub
jmp
sbb
data16
sbb
pop
fs
mov
cmp
outs
lods
clc
outs
jo
add
call
xchg
cmp
sub
cli
adc
out
loop
mov
dec
fisub
add
std
mov
leave
push
les
in
in
std
movs
outs
shr
xlat
call
outs
je
iret
ja
out
cmp
push
lods
js
cmp
in
scas
xlat
jl
test
mov
jmp
jno
sbb
imul
shr
stos
jb
ds
shl
jmp
inc
not
fistp
jo
test
loopne
sti
add
popf
cmc
jb
rol
jbe
dec
push
dec
test
inc
ja
xchg
xor
pop
ins
mov
jns
mov
cmps
pop
push
add
and
icebp
mov
push
mov
fcmovne
push
mov
int
arpl
sub
cs
out
dec
(bad)
rcr
pop
out
test
xchg
mov
xchg
and
in
lods
xrelease
push
mov
pop
(bad)
daa
ret
ja
push
cmc
ror
les
dec
mov
lahf
sbb
sub
inc
or
inc
int
pop
outs
data16
adc
mov
and
dec
xor
add
cmps
idiv
sub
repz
add
mov
addr16
adc
test
ss
jmp
hlt
and
ds
lahf
jl
add
pop
int3
mov
in
leave
ins
push
retf
cs
test
outs
call
pop
mov
add
inc
xchg
lea
icebp
out
lahf
xchg
outs
inc
outs
movs
jg
push
fnstenv
mov
mov
jmp
retf
dec
add
mov
dec
mov
clc
pusha
pop
ror
repz
pop
mov
mov
cmp
aaa
mov
sbb
xchg
adc
(bad)
cli
in
push
les
pop
push
mov
xlat
inc
sbb
xor
sbb
mov
adc
fisttp
adc
cld
xchg
or
pushf
aam
loope
xchg
nop
sub
dec
call
cmp
inc
retf
js
in
and
sbb
mov
and
mov
loope
lea
mov
or
jns
in
or
sub
ins
push
add
in
adc
lods
(bad)
aad
pusha
inc
scas
sar
into
shl
push
js
pusha
loopne
xchg
mov
ss
xlat
nop
cmp
mov
dec
jb
shl
out
cmp
mov
fcmovbe
xchg
push
xor
div
or
out
sbb
cmp
adc
inc
pop
popa
push
adc
ins
sub
xor
(bad)
pusha
in
xchg
test
cmp
jne
ret
mov
repz
dec
fsub
and
xchg
push
cs
clc
pop
pop
lahf
push
cs
(bad)
loope
mov
aaa
xchg
push
mov
pop
or
test
xchg
rep
js
out
push
jmp
pushf
sub
in
pop
jo
mov
jno
push
cdq
loop
pop
adc
cdq
or
(bad)
push
sbb
jge
cwde
and
call
test
push
jo
ins
adc
and
cmp
out
cmc
jnp
inc
jae
loope
mov
and
out
mov
or
xchg
call
test
cdq
jbe
adc
lahf
adc
xchg
push
dec
cmp
(bad)
sbb
int
sbb
and
pop
stc
push
inc
dec
retf
and
sbb
pushf
mov
mov
daa
aam
push
aas
adc
xchg
(bad)
xor
addr16
out
test
dec
add
cmps
call
push
sbb
or
rcr
jle
call
inc
pop
cs
jge
jns
stos
hlt
jne
std
stos
lds
bound
fiadd
mov
mov
mov
xor
jmp
adc
mov
dec
dec
sbb
out
cmps
dec
shl
mov
in
xchg
jmp
lea
sbb
popf
push
dec
inc
sub
cmps
add
xchg
cmps
cmp
fimul
sbb
pop
push
jmp
lods
cmp
fimul
lods
es
fcmovnb
mov
pop
push
cmc
enter
and
push
mov
pop
hlt
dec
jno
xchg
and
pop
fcomp
pusha
and
out
ror
sbb
push
out
xchg
push
jle
hlt
cmove
pop
mov
in
mov
cmp
xchg
mov
xor
sub
in
or
(bad)
movs
ficom
(bad)
std
fwait
push
mov
rol
les
inc
ffree
lea
shr
jmp
xor
daa
push
adc
jne
push
in
jle
dec
mov
(bad)
xor
scas
test
mov
xchg
jp
sbb
gs
fbstp
sbb
pop
shl
xchg
or
(bad)
jns
mov
mov
lds
sub
icebp
xchg
cmp
es
outs
cmp
jg
aaa
(bad)
jmp
push
add
rol
mov
add
ins
shl
inc
jecxz
mov
lods
pusha
mov
in
aad
add
cmp
cs
(bad)
aaa
nop
in
pop
or
test
(bad)
fist
int3
lods
adc
int3
xchg
push
sbb
les
fnsave
and
rep
(bad)
mov
xor
jns
loopne
or
mov
stos
mov
mov
cmp
xor
push
popf
mov
push
in
xchg
jecxz
scas
push
fild
pop
adc
loope
sub
(bad)
clc
repz
push
xor
shr
ret
and
mov
movs
enter
shl
pop
int
hlt
aaa
mov
dec
and
call
in
pop
push
jmp
fucomip
push
xor
add
push
popa
adc
sub
push
lock
sbb
in
fcom
das
xchg
(bad)
xchg
jg
movs
(bad)
jnp
iret
sti
lods
jecxz
pop
push
jnp
aaa
cdq
mov
sub
sub
sahf
setne
aaa
mov
(bad)
mov
fdivr
fcomp
enter
(bad)
mov
sbb
jle
ja
hlt
pop
retf
push
pop
mov
mov
(bad)
sub
pop
dec
(bad)
fsub
imul
jp
add
rcr
test
aas
data16
call
(bad)
and
nop
out
add
retf
push
pop
int3
jae
push
into
adc
stos
xlat
dec
dec
adc
and
jp
mov
ss
je
xchg
sub
push
cwde
cmp
fild
movs
pusha
aad
inc
icebp
add
adc
xchg
test
ror
mov
jecxz
inc
mov
dec
push
mov
sbb
mov
xchg
sub
dec
int3
xchg
xchg
dec
fwait
in
dec
retf
inc
jle
push
push
sbb
aam
or
xchg
pop
sub
leave
retf
outs
fwait
getsec
mov
adc
cld
fist
pop
add
retf
xchg
out
sub
sub
test
jmp
scas
retf
inc
push
fldcw
dec
dec
enter
js
xor
xchg
stc
js
xor
loopne
mov
addr16
mov
pop
mov
push
lods
pop
ret
in
or
ror
add
cmp
lods
and
loop
rcr
dec
push
mov
inc
and
rol
add
xchg
pop
cmp
dec
lds
cs
inc
punpckhdq
out
cdq
fnstsw
cmps
stos
mov
in
and
ret
inc
and
(bad)
adc
mov
loop
mov
xor
call
ret
pop
stos
mov
cmc
jnp
push
hlt
push
xchg
add
call
cmp
movs
jg
hlt
pop
mov
cwde
ret
pusha
mov
cdq
dec
sbb
push
out
addr16
mov
icebp
add
sbb
test
mov
ror
mov
popa
adc
scas
jns
mov
sub
dec
cmps
icebp
div
mov
in
xchg
cmp
sub
hlt
mov
jno
sahf
lahf
ret
adc
xchg
rol
dec
sub
mov
daa
ins
hlt
mov
sbb
cwde
sub
sbb
cmp
push
scas
int
ins
js
mov
sub
cmc
retf
jmp
cmp
outs
jo
cmps
mov
leave
loop
scas
ss
aaa
popa
and
cmc
push
push
test
jmp
dec
pop
shl
push
scas
adc
jp
cdq
aam
cmp
ja
pop
sub
and
sbb
pop
push
test
pushf
or
fimul
and
sub
sub
retf
push
xchg
icebp
mov
jns
jo
test
push
sahf
add
lods
or
pushf
mov
clc
jns
jg
(bad)
cmp
aad
sbb
jns
cmp
loopne
enter
loope
sbb
cmp
enter
mov
inc
mov
ret
sbb
(bad)
shr
rol
sub
outs
inc
ins
adc
imul
aaa
push
hlt
xchg
push
mov
mov
mov
shr
push
mov
lods
mov
xchg
jno
jecxz
cwde
les
in
dec
jb
dec
das
xlat
aad
outs
mov
in
pop
cmc
cs
xor
xchg
cmp
cli
mov
int3
enter
mov
inc
lea
fcmovnb
lods
pop
clc
push
pop
adc
test
sbb
(bad)
icebp
jle
sti
inc
or
int
cmp
sub
enter
cli
fldln2
jno
lea
mov
xchg
nop
stos
mov
dec
leave
fisttp
or
mov
jnp
into
mov
retf
mov
cmovs
and
cld
cmc
pop
add
popf
pop
cmp
add
and
or
ss
aaa
(bad)
cmp
dec
push
(bad)
cld
xor
mov
test
pop
sub
outs
or
ret
in
in
jo
imul
sub
sub
ret
arpl
in
outs
cmc
pushf
cwde
ror
cmp
mov
pop
pop
xchg
cmps
adc
(bad)
pop
push
jmp
pusha
dec
xor
lods
and
enter
lods
sub
out
sub
cmp
daa
bound
add
ret
aaa
add
test
mov
jnp
js
addr16
cmp
(bad)
or
and
jnp
jp
mov
outs
addr16
push
ficom
test
cmc
cmp
cdq
imul
mov
in
push
in
pop
repz
adc
retf
xor
inc
ret
dec
mov
retf
int3
cmp
jo
sub
outs
pop
and
sti
sahf
not
aad
mov
xor
dec
xor
mov
rcr
not
jle
aaa
push
adc
mov
(bad)
pop
fadd
stos
and
sub
add
xchg
sbb
outs
in
sbb
pop
outs
push
push
loopne
test
pop
mov
call
xchg
cmp
js
add
cmps
xchg
fidivr
fadd
fldcw
shl
pop
fadd
rcr
je
sbb
mov
cwde
int
ret
mov
imul
push
sbb
outs
pop
out
leave
cmp
js
mov
jbe
jp
(bad)
js
sub
sub
fidivr
ja
cmp
xchg
push
xor
fild
jmp
jg
adc
dec
and
mov
fisttp
arpl
sub
lea
inc
shl
into
mov
cmps
out
popf
mov
shl
inc
jecxz
mov
sbb
icebp
inc
ins
inc
shl
frstor
out
jmp
repz
inc
mov
in
dec
inc
std
or
mov
std
mov
pop
(bad)
pop
dec
imul
bound
das
sub
mov
inc
test
fild
mov
movs
jns
cmp
and
repz
data16
mov
in
ins
xchg
pop
and
arpl
mov
loopne
sub
adc
addr16
cmps
sub
les
cli
shr
cwde
fild
mov
nop
aad
retf
repnz
mov
sub
sbb
jne
adc
(bad)
mov
xor
pop
inc
add
push
dec
mov
lea
mov
adc
jmp
adc
sbb
jge
aam
inc
mov
ret
adc
inc
popa
jbe
out
pop
add
xchg
inc
jge
pop
push
xor
and
mov
iret
inc
popf
dec
jo
jle
cmp
sub
scas
mov
mov
inc
xchg
rcr
pop
sub
jns
sub
lods
rcl
cld
aas
loope
inc
shl
xor
lods
call
pop
out
or
pop
jp
(bad)
add
dec
or
sub
sbb
call
mov
mov
xchg
retf
adc
mov
fcom
inc
and
mov
sar
es
pop
loopne
xor
mov
xchg
add
out
test
or
(bad)
fidiv
std
dec
push
xlat
repnz
push
push
adc
stos
fisubr
xchg
fmul
call
jae
dec
shl
(bad)
ret
sahf
shr
into
test
and
jns
fdivr
jnp
and
mov
mov
jmp
leave
push
sub
test
inc
out
mov
leave
mov
mov
mov
sub
lods
mov
add
mov
mov
sub
(bad)
cmp
loope
xlat
mov
nop
(bad)
xchg
push
fcomp
pop
xchg
dec
stc
push
addr16
addr16
in
arpl
icebp
jb
sub
mov
imul
addr16
out
adc
sbb
dec
fisttp
lds
mov
and
aad
push
ret
jp
xchg
aaa
mov
in
inc
cmp
mov
pop
mov
jo
mov
pop
dec
sbb
les
xchg
shl
inc
out
es
or
loop
dec
dec
xor
and
fwait
inc
sahf
jbe
in
mov
add
imul
mov
pop
xchg
and
inc
push
mov
(bad)
mov
mov
aaa
test
aas
mov
test
mov
dec
test
lods
mov
xchg
les
pop
sti
xchg
xchg
adc
(bad)
mov
lods
ds
cmp
sub
sbb
jle
xchg
xchg
xor
scas
adc
out
jb
jno
inc
xchg
out
cmp
jmp
xchg
sbb
push
stos
out
in
test
cmps
push
outs
add
add
xchg
sbb
fsubr
je
xchg
or
lods
in
xchg
pop
fs
idiv
cmp
rol
push
clc
popf
inc
jg
sub
pop
shl
xor
sub
imul
mov
das
push
add
mov
retf
nop
jmp
jecxz
ja
pop
jmp
seto
mov
call
sbb
jo
das
adc
inc
push
rcr
xor
xchg
push
imul
das
push
pop
jl
retf
fild
sbb
inc
add
jae
xchg
rep
mov
ret
xchg
mov
fadd
stc
mov
mov
jecxz
mov
lea
mov
in
pop
ja
(bad)
in
retf
nop
cmp
outs
inc
icebp
adc
pop
cdq
sbb
retf
push
(bad)
adc
(bad)
xor
ror
aas
mov
dec
stos
add
xchg
jl
loope
je
aad
pop
fbld
outs
cmp
push
sbb
cwde
popa
mov
out
add
lods
jmp
cmc
stc
push
push
pop
mov
ins
push
mov
push
jns
push
xor
mov
aas
dec
imul
inc
add
call
in
pop
and
aam
sub
scas
mov
scas
mov
xor
mov
xchg
and
not
mov
stos
mov
jp
and
pop
iret
enter
xchg
pop
repz
jno
cmp
push
out
inc
sub
jp
outs
and
adc
icebp
stos
sub
push
xchg
(bad)
jno
cwde
aad
in
jl
arpl
fadd
loopne
dec
push
add
dec
imul
pop
xor
xchg
jmp
mov
sub
hlt
dec
mov
cmp
adc
mul
mov
push
sub
sub
cdq
and
pop
jno
rcl
mov
jp
jnp
sub
in
imul
sbb
xor
cs
mov
sbb
jns
cwde
push
cld
ss
cmp
pop
pop
add
js
mov
and
xchg
aas
jecxz
xor
mov
shr
test
sbb
movs
xor
pop
cmp
jne
lock
sub
sahf
and
es
sbb
push
fstp
mov
mov
add
jne
mov
icebp
sub
dec
mov
cmc
or
dec
test
(bad)
aaa
xchg
adc
mov
xchg
sub
(bad)
fidivr
add
shr
cmp
fisubr
or
pop
in
or
cli
int
mov
mov
js
pop
push
dec
retf
fmul
outs
ins
das
add
stos
pop
lods
cmp
pop
movs
ins
push
add
adc
push
mov
or
std
movs
mov
test
pop
pop
ret
(bad)
and
jge
fisub
push
xchg
sbb
fnstcw
push
fld
call
sbb
and
das
stos
addr16
out
pop
sbb
loope
push
loope
dec
inc
(bad)
fldcw
(bad)
push
rcr
loope
jae
dec
add
mov
(bad)
retf
push
fsub
sbb
xor
aas
add
in
stc
in
mov
mov
cs
out
dec
sub
push
popa
add
daa
inc
popa
std
das
cmc
inc
mov
jns
ja
ret
or
push
daa
pop
push
repnz
xchg
cmp
lods
out
mov
mov
retf
sbb
and
dec
jmp
mov
pop
push
mul
mov
mov
nop
pop
nop
lods
mov
fsub
push
int3
std
cld
loope
aaa
pop
fsub
cmp
push
adc
sub
std
(bad)
or
add
jmp
sub
dec
enter
dec
(bad)
mov
push
loope
mov
jge
push
pop
lock
fimul
lea
or
(bad)
aad
in
daa
mov
dec
popf
add
movs
and
xlat
cmp
sbb
push
stos
and
iret
pop
outs
sub
push
rol
add
mov
and
mov
jo
sub
mov
scas
lods
addr16
xlat
leave
das
cld
cld
dec
clc
and
test
xor
repz
pop
inc
mov
out
pop
sahf
lds
ss
push
mov
and
jo
call
dec
sar
pop
jle
in
in
add
push
jmp
stc
call
sub
or
dec
je
push
jle
cmc
sbb
gs
scas
pop
or
adc
mov
push
or
mov
push
retf
mov
ja
pop
and
cmp
adc
mov
or
(bad)
sub
call
cmp
mov
ret
iret
dec
mov
test
stc
xchg
pushf
ins
add
mov
jmp
mov
mov
(bad)
lods
xchg
jo
lea
fidivr
jg
enter
pop
jmp
ficomp
xchg
ins
dec
in
mov
(bad)
mov
push
test
rcr
fldcw
push
adc
mov
lods
cmp
add
in
xchg
inc
xchg
imul
pop
cdq
inc
lock
out
std
or
xor
push
mov
xchg
std
jo
push
pusha
test
jo
sub
pop
add
stc
cmp
push
ins
jmp
sbb
or
add
jno
jnp
xor
lods
mov
ret
fist
mov
pmaxsw
in
and
mov
and
addr16
out
adc
adc
push
xor
scas
leave
shl
test
xor
repz
dec
call
xchg
(bad)
ficomp
sub
mov
sub
xor
call
xor
mov
out
ss
into
inc
icebp
mov
xchg
cmovle
sti
mov
adc
mov
adc
adc
out
xchg
mov
dec
data16
clc
cli
jecxz
mov
nop
outs
pop
sahf
leave
dec
xor
xchg
or
sbb
or
stos
out
xlat
adc
arpl
shr
sar
dec
fwait
call
dec
adc
and
jl
push
pop
push
xchg
xlat
scas
mov
call
jl
pop
es
xchg
mov
(bad)
shr
jb
aaa
bound
in
or
jmp
cli
push
push
in
xor
xchg
xchg
inc
inc
jb
sbb
inc
or
js
mov
lds
jmp
(bad)
std
add
adc
rol
jle
jmp
cmps
arpl
lock
mov
xchg
pop
pop
sbb
add
les
inc
sub
cmp
ret
sbb
pop
cmp
ret
jne
sbb
popf
adc
into
xor
addr16
repnz
std
movs
adc
aad
ror
jbe
popf
dec
sti
test
mov
sar
push
sbb
jns
mov
ss
sub
popf
jmp
stc
jp
xor
inc
bts
xchg
dec
es
pop
movs
mov
sbb
inc
cmp
repz
loop
mov
xchg
loopne
inc
add
lods
push
mov
dec
cmc
jo
cld
dec
push
les
pop
xchg
cmps
mov
mov
std
popa
xchg
lods
cmps
pop
xchg
dec
cmp
mov
push
repz
fldz
jae
mov
ror
addr16
sbb
std
stc
push
ja
hlt
cwde
sub
cmovp
sbb
sysexit
dec
xor
ja
fst
xor
fistp
cmp
sub
lea
das
sbb
xchg
mov
cmps
cmps
jl
and
in
xchg
ja
mov
ins
pushf
shl
inc
stc
mov
dec
adc
shr
push
frstor
popf
fstp
nop
retf
mulps
jo
add
adc
ins
fnstsw
push
mov
scas
and
push
mov
inc
hlt
es
(bad)
sub
aaa
dec
mov
dec
in
(bad)
mov
jno
test
in
sub
test
jb
adc
fst
call
mov
cmps
cmp
xlat
(bad)
or
push
sahf
stc
mov
loopne
sub
int
mov
ror
repz
mov
loope
mov
fild
popa
int
and
dec
push
inc
iret
jle
push
adc
dec
or
je
out
jmp
add
mov
cmp
aaa
xchg
pop
mov
dec
mov
test
dec
xchg
cmps
push
sub
cdq
cmp
pop
imul
sub
lods
leave
pop
xchg
gs
pop
pop
int
popf
xchg
sbb
loope
mov
cmp
out
cmp
stc
add
mov
fwait
std
jmp
std
int
sub
sar
retf
inc
dec
sbb
rcr
stos
(bad)
ror
and
popa
cmp
inc
adc
jns
fistp
out
sub
pop
gs
push
test
xchg
mov
sub
loope
into
dec
mov
cwde
jb
pop
cmp
adc
mov
(bad)
movs
lods
test
(bad)
hlt
sbb
cs
js
nop
inc
jp
adc
push
adc
jge
mov
out
xor
inc
cmp
fcmove
daa
outs
lods
xor
jo
xchg
pop
(bad)
xor
jge
repz
js
add
mov
jge
jo
imul
mov
add
(bad)
in
rol
repnz
mov
pop
clc
xchg
jb
ins
retf
pop
retf
pop
and
daa
xor
mov
or
xlat
xchg
ds
mov
add
ror
repnz
pushf
sbb
mov
les
scas
mov
retf
hlt
jecxz
cs
push
scas
pop
iret
pop
test
xchg
movs
mov
pop
cld
popf
outs
jle
cmps
adc
mov
cmp
inc
pop
adc
mov
cwde
iret
mov
aad
and
sub
ret
std
jle
mov
mov
dec
ss
mov
dec
xchg
jp
dec
dec
test
dec
call
das
fadd
and
add
repz
or
cmp
xchg
js
(bad)
sbb
adc
sbb
mov
and
in
fcmovu
pop
pop
jne
mov
push
lods
cld
fstp
pop
mov
jb
mov
push
orps
outs
outs
retf
rcr
mov
xchg
mov
bound
daa
mov
jns
mov
(bad)
pop
add
mov
ja
and
stos
inc
dec
fdivrp
cmp
jmp
fimul
pop
ret
retf
js
sbb
sbb
shl
dec
outs
in
sbb
sub
(bad)
cmp
cmc
pop
add
stos
popa
push
popf
push
add
fadd
ja
mov
jmp
mov
and
enter
jb
pop
iret
and
and
inc
adc
jecxz
test
popf
push
jmp
adc
push
inc
dec
or
fmul
push
fimul
shl
sbb
popa
mov
pop
push
push
fld
cmp
outs
mov
dec
nop
fidiv
dec
leave
jae
mov
movs
imul
out
inc
mov
lods
push
movs
xor
mov
pop
push
hlt
(bad)
adc
mov
cli
add
xchg
retf
out
cmp
imul
movs
int3
xchg
mov
icebp
xor
inc
jge
ds
aad
in
cs
cdq
xor
add
lock
rol
call
push
mov
dec
pop
push
dec
sti
dec
or
iret
jmp
pop
pushf
xor
push
add
ins
scas
and
ret
and
push
lds
jbe
sar
xor
dec
cdq
xor
in
xchg
inc
cmps
test
inc
lock
mov
call
test
lea
fisubr
jnp
int
sub
mov
fwait
scas
(bad)
xchg
xchg
les
inc
nop
into
dec
(bad)
aam
xchg
enter
loope
xchg
push
cwde
repz
or
xor
push
scas
movs
scas
test
adc
iret
and
clc
xchg
mov
mov
std
mov
sbb
jbe
push
inc
cmc
fdivrp
cmps
fwait
and
lock
pop
add
clc
push
and
pop
mov
sub
xchg
fiadd
pop
jl
cmc
inc
call
or
pop
inc
xor
jne
shl
mov
icebp
push
cdq
push
ja
xchg
retf
loopne
adc
pop
adc
(bad)
add
icebp
pop
jmp
cmp
movs
sub
xchg
dec
sub
dec
add
jle
mov
mov
inc
jno
mov
ins
xlat
jmp
xchg
fdivr
push
mov
sub
icebp
cmp
push
cmp
mov
xchg
inc
and
out
cmp
xchg
imul
mov
lods
movs
data16
cmp
mov
int
mov
fbstp
test
(bad)
xor
lds
fst
xchg
pop
movs
cmp
cdq
cli
mov
lods
in
sbb
fistp
nop
test
xor
rcr
adc
ror
loop
aaa
cmps
(bad)
dec
jo
inc
out
sub
pop
add
adc
add
fcmove
shl
add
lahf
cmp
sbb
xchg
mov
inc
push
mov
adc
rol
jns
frstor
fnstsw
adc
fwait
test
aam
jecxz
cli
icebp
push
hlt
mov
inc
xchg
and
ret
push
dec
sti
(bad)
mov
mov
mov
enter
cli
adc
cdq
sahf
sub
jae
fcmovbe
xor
xor
sbb
js
fdivr
push
and
test
clc
pop
xor
cld
jle
int
sub
stos
adc
in
leave
imul
xor
cmp
fmul
ret
mov
and
sbb
jo
into
push
(bad)
or
scas
mov
ja
pop
xor
test
sti
movs
adc
add
mov
ins
rol
mov
pusha
jb
cmp
inc
in
loopne
jecxz
sahf
sar
ja
add
pop
inc
neg
and
push
retf
and
mov
xor
pop
mov
inc
loope
les
das
pop
(bad)
loope
repz
fwait
jnp
cli
add
rol
fisub
jecxz
ret
fmul
mov
sbb
aas
mov
pop
pusha
icebp
fucomi
popa
ret
push
fnstsw
jbe
or
daa
dec
mov
pop
fnsave
push
pop
loop
retf
cmps
mov
cmp
in
inc
push
cmp
loope
mov
and
enter
pop
test
ror
mov
retf
test
pushf
xor
cmc
imul
sbb
rep
aad
(bad)
addr16
jecxz
enter
and
call
mov
sbb
dec
mov
push
mov
mov
and
stos
and
cld
iret
dec
lahf
movs
ins
xor
sub
dec
mov
jmp
(bad)
ins
shr
sub
jne
push
xlat
leave
jmp
cs
sub
dec
loop
pop
aam
mov
leave
or
or
mov
push
jecxz
xchg
push
sbb
fwait
sub
shr
and
mov
push
cmp
pop
in
clc
pop
adc
ror
(bad)
outs
dec
jnp
mov
int3
pop
xchg
jns
gs
sub
cli
ret
cdq
sub
push
mov
mov
lea
js
loop
fistp
jp
adc
sbb
push
loope
dec
test
jns
retf
mov
mov
cmp
in
nop
adc
mov
lahf
cmp
repnz
mov
lods
mov
icebp
stc
fstp
mov
add
mov
enter
sbb
imul
pushf
sbb
aaa
jbe
in
aaa
in
pop
push
es
pop
push
into
lahf
adc
mov
mov
scas
ins
iret
ins
ret
push
into
push
les
adc
mov
dec
sti
stos
xor
sti
aad
jns
pop
in
(bad)
and
mov
mov
shl
push
outs
retf
pop
cmc
aad
pop
or
stos
inc
sbb
ja
repnz
jnp
sub
push
mov
call
frstor
mov
shr
jp
outs
adc
inc
mov
cmps
sar
mov
add
test
sub
out
cmps
and
rcl
jae
gs
fstp
sub
(bad)
adc
add
in
lock
sub
sbb
cmps
add
push
fnclex
adc
push
retf
inc
cmp
out
dec
ins
sti
add
push
pop
sbb
push
xlat
push
into
cmp
mov
scas
add
inc
xchg
rcl
jno
retf
sar
jge
mov
(bad)
popa
js
push
retf
in
jae
xor
sbb
mov
popa
xchg
nop
iret
out
aam
or
push
imul
fst
call
push
xor
sub
mov
int
push
add
jp
inc
or
out
pop
push
(bad)
sub
ja
push
and
adc
mov
mov
xor
daa
outs
adc
aam
sub
add
inc
and
scas
dec
rcl
push
xor
les
sbb
dec
cmp
xchg
cmc
out
mov
call
(bad)
psllw
clc
ret
push
outs
jl
sahf
mov
sub
jp
popf
dec
xor
loop
test
shr
xor
repnz
(bad)
jmp
div
jo
movs
adc
push
xchg
cli
icebp
aas
or
push
or
mov
fdiv
dec
pop
aaa
push
xchg
fsub
sub
loop
dec
adc
adc
and
leave
retf
test
mov
mov
fisubr
xchg
sbb
out
jge
movs
jmp
scas
mov
lock
(bad)
iret
jp
dec
or
and
scas
(bad)
jg
sti
add
rcl
jnp
fnstcw
repnz
loopne
inc
xlat
icebp
or
mov
push
jl
mov
neg
adc
fistp
popf
xchg
push
mov
icebp
push
mov
fsub
dec
jl
push
pop
aas
les
push
or
jnp
xor
sbb
lea
cmp
in
fild
dec
push
clc
jmp
mov
cmp
jg
retf
(bad)
ds
push
rol
dec
and
cmp
lock
imul
out
add
jno
rcl
out
mov
sub
imul
lods
mov
jns
inc
and
ins
mov
pop
je
lods
add
pop
mov
inc
imul
scas
cmp
stos
jnp
xchg
mov
xor
xchg
pop
and
gs
pop
sub
pusha
mov
jmp
xor
jmp
sub
jl
leave
and
mov
inc
or
push
stc
das
lock
cdq
or
sar
div
jae
mov
xchg
jns
test
cmovle
int3
outs
jg
shl
and
ins
mov
fidiv
push
or
dec
sub
mov
clc
fcom
outs
add
in
aam
inc
mov
mov
hlt
stos
mov
movs
into
sub
cmps
mov
and
adc
xchg
jo
out
push
dec
ror
pop
stc
pop
sbb
pop
and
xchg
cwde
and
pop
loop
dec
xchg
lds
stos
jp
retf
jbe
jl
fsubr
sub
rcr
push
loop
add
cld
loop
retf
lds
pushf
add
es
imul
bound
and
mov
mov
sbb
mov
in
jae
or
test
imul
and
aas
mov
cdq
mov
call
inc
xchg
call
dec
jno
imul
xchg
inc
inc
cmp
xchg
cmp
outs
sahf
jl
xchg
or
out
inc
out
push
add
pop
enter
out
int
or
fiadd
xor
stc
lods
jo
push
test
mov
xchg
cmp
call
cmp
xor
xor
bound
fs
shl
imul
cmp
popa
mov
sbb
mov
or
(bad)
and
push
inc
push
pop
jge
inc
adc
cmps
inc
hlt
mov
out
xor
fnsetpm(287
mov
inc
mov
ins
jp
mov
pop
sar
adc
inc
or
imul
popa
arpl
iret
repnz
sub
pop
and
sbb
mov
leave
mov
fnstsw
mov
retf
adc
addr16
and
or
push
pusha
adc
inc
inc
mov
jle
leave
cdq
jne
mov
cld
std
ins
imul
hlt
test
mov
jp
push
xchg
dec
jl
mov
scas
test
jmp
xchg
outs
and
mov
addr16
dec
add
or
xchg
xchg
jmp
out
xor
or
mov
inc
push
jbe
sub
pop
loop
inc
inc
dec
jmp
inc
gs
and
or
push
(bad)
mov
xor
ja
in
js
movs
push
or
rcl
call
arpl
nop
idiv
push
fldenv
or
push
(bad)
rcr
rol
lahf
in
xchg
int
xchg
jno
dec
cwde
push
mov
in
mov
aam
aad
call
out
lods
dec
ret
inc
cmp
sub
hlt
test
cld
mov
sahf
stos
mov
xchg
jg
stos
stos
and
and
or
fwait
jne
push
in
out
mov
pushf
sar
pop
pop
daa
jge
bound
repz
loop
sub
scas
aam
stos
fsub
fisubr
xor
jnp
jmp
ins
arpl
mov
mov
scas
icebp
cmps
sub
(bad)
je
dec
dec
popf
sbb
data16
shl
pop
fld
(bad)
mov
(bad)
enter
call
dec
mov
clc
xchg
sbb
pop
cld
out
xor
pop
xchg
les
dec
add
nop
adc
outs
dec
ds
inc
jp
cld
es
dec
movs
push
shl
pop
enter
test
loop
ret
ja
(bad)
sub
int3
je
imul
jbe
sahf
mov
cmps
mov
rcr
out
pop
cmps
jp
adc
pop
push
pop
push
imul
and
lds
adc
mov
rcl
iret
aaa
lods
psraw
movnti
call
mov
add
push
je
out
bnd
mov
jb
push
sbb
xchg
lea
dec
push
(bad)
or
push
mov
pop
xlat
pop
dec
iret
and
aas
nop
(bad)
jmp
mov
jns
jle
sbb
or
mov
sub
lods
mov
mov
jecxz
mov
icebp
inc
fcom
mov
mul
pop
(bad)
idiv
or
fadd
out
imul
in
addr16
in
movs
inc
cmp
inc
and
mov
fldcw
sbb
cmp
mov
dec
fwait
js
inc
and
sub
inc
cmp
push
mov
outs
popa
mov
jae
lds
xchg
dec
xor
add
retf
push
inc
xchg
mov
call
mov
xor
outs
ret
sar
loope
xor
(bad)
out
push
sub
outs
xchg
into
sahf
je
repz
dec
sbb
les
arpl
add
add
jne
or
in
out
retf
leave
adc
mov
xor
aad
fiadd
inc
scas
retf
aad
out
sub
(bad)
sbb
xor
repz
pop
dec
dec
push
nop
mov
pop
into
adc
jne
cdq
push
sub
outs
loopne
and
shl
cmps
retf
stos
in
aaa
stos
xor
add
rcr
dec
mov
cld
inc
es
movs
pop
jl
push
jae
dec
jo
pushf
jbe
scas
repz
repnz
xor
js
lods
outs
xchg
stos
repz
pop
xor
inc
cmps
jl
shl
int3
cmp
scas
inc
xchg
movs
or
add
sbb
add
cmp
pop
xchg
cmp
retf
add
dec
test
addr16
cwde
pop
xchg
in
sub
shl
lock
and
ret
out
and
fidiv
mov
pop
pop
sub
pop
push
(bad)
sbb
mov
pop
jecxz
fwait
xlat
add
aas
ret
sbb
iret
cmp
stos
data16
jbe
sbb
jl
aam
dec
push
fbld
jns
leave
mov
lds
or
xor
pushf
xchg
leave
xor
loope
jmp
or
sub
and
cdq
sbb
xlat
sbb
out
dec
and
(bad)
arpl
mov
push
xor
push
ret
push
jb
xchg
jmp
adc
mov
es
pop
adc
adc
dec
fadd
xor
jmp
or
sub
xor
pusha
fs
sub
ins
add
jbe
out
mov
cmp
sub
ds
adc
mov
sub
mov
(bad)
push
add
out
gs
adc
aad
xchg
or
sbb
leave
mov
xor
cmp
push
ss
mov
xlat
out
rcl
aas
arpl
(bad)
iret
push
movs
test
idiv
or
dec
loop
push
aas
stc
test
gs
es
test
popf
test
and
sbb
ret
stc
je
mov
adc
inc
loopne
mov
pop
adc
dec
(bad)
jno
cld
inc
pop
enter
hlt
mov
mov
mov
test
out
fwait
mov
xor
dec
cs
rol
or
sub
iret
stc
arpl
je
mov
pop
fdivr
mov
clc
fisub
cmp
adc
push
and
xchg
xor
xchg
mov
enter
cmp
ss
js
call
lods
scas
cld
les
push
mov
jns
addr16
push
sbb
int3
jb
sub
in
sbb
shr
js
in
loop
cmp
cld
neg
inc
ret
xchg
mov
sti
mov
frstor
cmps
cmp
or
stc
jp
out
mov
test
fcmovne
cli
xor
adc
adc
mov
jmp
rcr
les
iret
ins
fwait
retf
(bad)
lea
xor
test
xchg
sti
and
and
out
inc
rcl
mov
adc
stc
or
cs
mov
neg
(bad)
and
mov
add
fisub
addr16
dec
and
idiv
push
rcr
mov
sbb
sub
repnz
adc
jmp
xchg
push
hlt
or
and
sub
and
cmp
xchg
or
ret
cmps
leave
mov
xchg
sub
mov
xchg
movs
sbb
xor
stos
shl
cmp
mov
jae
rcl
pop
mov
ins
in
jo
inc
cmp
jl
jl
jno
ins
jg
(bad)
mov
add
lods
bound
std
xor
std
out
ror
out
mov
(bad)
jge
adc
jnp
(bad)
inc
std
movs
adc
rol
popf
xor
adc
pop
jg
xchg
mov
pop
jl
dec
jno
adc
(bad)
jle
xor
adc
adc
int
ffree
or
dec
int3
adc
fcmovu
mov
lock
movs
icebp
mov
or
cmp
inc
mov
or
or
test
sbb
jl
retf
dec
adc
aad
mov
sub
fisttp
test
mov
outs
adc
jge
repz
daa
sub
rcl
ret
fisttp
test
sub
inc
mov
mov
mov
or
adc
cmp
test
dec
es
bound
pop
addr16
das
mov
setp
ins
icebp
push
out
and
pop
rcl
call
jne
iret
add
rcr
jmp
dec
les
push
pusha
rcl
dec
and
and
add
mov
bound
add
inc
and
loopne
lods
jmp
ins
push
inc
lock
lds
rcr
or
mov
mov
repz
jg
lock
(bad)
and
sti
pop
jb
lea
jmp
call
loope
pop
ins
jmp
mov
mov
inc
fwait
jb
fistp
test
jecxz
push
dec
ret
mov
addr16
cmc
jmp
cmp
ins
arpl
push
mov
and
int
sbb
mul
mov
push
lahf
hlt
pop
mov
sbb
mov
das
sub
fdiv
mov
push
inc
retf
cmp
jmp
je
ret
jle
xchg
inc
push
and
xor
loope
pop
test
ds
loop
repz
movs
gs
(bad)
cwd
push
in
sbb
pusha
(bad)
sbb
lds
fwait
push
inc
xor
leave
mov
add
mov
pusha
pop
jmp
fimul
in
adc
ins
cmps
pop
sub
cmp
sub
xchg
out
retf
jg
cmc
ret
dec
xchg
add
push
out
out
dec
pop
int
ins
gs
inc
xor
jle
add
cmp
enter
pop
push
sub
cmp
dec
je
mov
pop
cmc
push
and
ret
jle
jne
mov
sub
or
in
sub
add
ds
sar
(bad)
cmp
adc
mov
inc
push
cmp
cmps
int
xor
inc
dec
popa
rcl
sbb
mov
pop
xchg
cmps
loopne
mov
mov
inc
cwde
mov
sahf
inc
inc
push
push
mov
pop
mov
cld
bound
and
fwait
aam
add
call
bound
loope
sti
mov
(bad)
lahf
or
fist
cmp
or
jg
test
mov
mov
gs
ja
shl
das
movs
cmps
gs
sar
jecxz
xor
test
mov
out
rcr
div
mov
pavgw
out
cld
rol
cmp
sub
and
je
pop
mov
or
pop
ss
pop
adc
aas
loope
adc
inc
cmps
push
push
sub
loop
loop
stos
mov
cmps
dec
add
clc
mov
mov
rcl
and
shl
jmp
fnstsw
fs
mov
pop
xchg
out
adc
cmp
loop
pop
push
or
mov
test
push
jb
retf
and
iret
xor
retf
clc
or
dec
jno
scas
sbb
xor
mov
mov
pop
(bad)
sbb
add
adc
xchg
xchg
call
xchg
lods
dec
push
ficomp
mov
xor
adc
push
repz
dec
imul
or
jg
inc
add
call
jno
test
sub
cs
jl
nop
cmps
xchg
or
ds
fidiv
inc
pop
and
movs
jecxz
mov
call
mov
outs
pop
cwde
aas
mov
mov
outs
and
das
mov
fdivp
adc
xchg
cmp
push
sbb
call
push
mov
lds
mov
popa
sbb
xor
mov
dec
in
fsub
add
out
and
xchg
stos
dec
jg
pop
mov
leave
and
xchg
imul
or
adc
jae
lds
mov
int
fstp
fsubr
adc
adc
inc
repnz
mov
mov
xchg
cli
test
retf
xchg
inc
add
mov
mov
cli
adc
and
inc
mov
add
cs
xor
cmp
xchg
rol
cli
adc
jg
cmp
sbb
xchg
dec
jge
add
popa
loope
out
lods
mov
ss
loope
cmp
inc
mov
fisub
cmps
add
xchg
loopne
add
sbb
enter
iret
popf
cli
jmp
fcomp
xchg
cmps
(bad)
loopne
dec
(bad)
fsubr
jg
test
pop
int3
rcl
clc
pop
ds
ja
dec
or
cld
cmp
jg
xchg
retf
icebp
adc
dec
cmp
mov
int3
and
scas
(bad)
inc
ret
cld
mov
xchg
(bad)
mov
pop
jmp
fnsave
lds
jnp
xor
jmp
mov
ja
sbb
xchg
push
sub
push
mov
push
adc
fadd
repnz
dec
sub
sbb
fstp
mov
test
pop
in
and
je
inc
dec
das
or
push
or
cmp
jmp
daa
cmp
inc
in
inc
mov
sub
ror
hlt
push
icebp
mov
push
mov
adc
push
inc
imul
xor
jge
addr16
lea
push
sbb
cld
ins
xchg
inc
jo
dec
or
aas
ret
adc
test
ror
xor
xlat
mov
mov
mov
aam
dec
dec
je
js
shr
add
and
addr16
push
pop
mov
mov
or
div
inc
ss
movs
mov
adc
dec
pop
add
inc
push
inc
(bad)
loope
cs
aam
addr16
add
xchg
daa
in
jle
dec
out
adc
xor
test
push
sti
xchg
mov
jno
inc
sbb
cmp
pusha
adc
in
jbe
xor
pusha
std
shl
push
ret
add
and
push
icebp
mov
push
push
test
in
mov
pop
lahf
add
scas
sub
xor
stos
inc
stos
fsub
scas
lock
inc
cmp
xchg
ins
in
fisubr
mov
call
cwde
in
std
sbb
sti
icebp
push
dec
retf
inc
sbb
xchg
mov
xor
test
fbld
mov
rol
retf
cmp
les
push
aaa
ret
inc
(bad)
sub
cmps
ins
xor
xchg
cmc
or
test
pop
cdq
xchg
dec
mov
push
inc
movs
mov
mov
retf
and
(bad)
dec
enter
mov
call
sub
loop
or
pusha
ja
sahf
lods
ret
mov
pushf
xor
(bad)
mov
mov
add
sbb
pop
mov
mov
data16
sbb
in
inc
push
cmp
adc
mov
call
xor
xor
call
cmc
pusha
adc
nop
into
into
cld
mov
sahf
add
mov
fidiv
mov
(bad)
enter
xchg
call
lods
out
adc
outs
jo
icebp
shl
mov
into
sbb
xchg
dec
out
loope
outs
je
mov
mov
pop
inc
cmp
in
div
icebp
shl
inc
sub
aaa
mov
jo
cmp
or
scas
icebp
and
loope
pop
fsubr
cmp
mov
jg
mov
repz
xchg
retf
leave
inc
cld
adc
jmp
out
retf
push
imul
xor
sahf
push
or
push
sbb
adc
nop
pop
ins
xor
ror
sub
bound
or
pushf
adc
jg
fcomp
push
in
jbe
pushf
outs
and
fsubr
adc
out
dec
cmp
lods
dec
inc
ja
addr16
bound
jmp
into
and
sti
cmc
mov
xor
test
xchg
mov
jmp
test
mov
mov
pop
push
inc
push
mov
es
sbb
mov
sqrtps
sub
or
or
push
ret
cmp
enter
mov
mov
jnp
shl
repnz
adc
mov
aam
pop
loope
push
shl
rol
jg
xor
mov
sub
lea
inc
pop
lahf
out
cmp
(bad)
jae
stc
push
cmp
push
adc
(bad)
mov
popa
inc
add
cmp
sub
mov
dec
push
sub
(bad)
(bad)
or
leave
add
push
(bad)
leave
inc
sar
push
and
sar
pusha
js
cmp
(bad)
in
sub
fist
outs
add
(bad)
add
gs
ins
mov
pushf
lods
and
mov
dec
out
imul
popf
int
inc
pop
add
adc
stc
(bad)
out
jmp
aam
mov
pop
sub
test
ss
xchg
sub
and
push
scas
popa
jmp
imul
(bad)
aam
lahf
shr
sahf
or
cmp
jns
daa
jmp
sub
xlat
int
fisttp
mul
in
call
cmp
jne
pop
mov
pop
iret
add
add
out
jb
(bad)
out
(bad)
test
jae
into
mov
es
mov
jb
outs
dec
xchg
xor
xor
jle
hlt
jl
jo
mov
ror
sub
xchg
mov
push
ror
mov
stc
out
jge
out
mov
cmp
or
js
(bad)
add
add
out
mov
std
cmps
aam
cmp
sbb
inc
dec
xor
loopne
jbe
test
mov
add
int
stc
ins
lahf
sar
push
ret
fs
test
scas
mov
fist
mov
jp
pop
fmul
stc
inc
xchg
xchg
xlat
std
sbb
cmp
xchg
push
sbb
push
mov
or
jne
hlt
fmulp
jp
lahf
jmp
repnz
push
mov
(bad)
xchg
push
cmp
cwde
ds
lea
xchg
aam
stos
add
ss
dec
test
xchg
xchg
fxch
std
pop
mov
test
(bad)
rol
iret
cmp
in
pop
cld
sbb
aas
xor
mov
inc
lock
xchg
out
cmp
xor
lds
pop
and
cmps
movs
jne
jecxz
inc
popa
mov
mov
iret
sbb
repnz
sbb
das
xchg
sub
daa
push
outs
mov
mov
in
or
lods
in
adc
pop
in
add
inc
(bad)
mov
pop
inc
pop
push
mov
repnz
les
aas
cmp
pusha
and
std
stc
cli
jge
pop
movs
push
cwde
jmp
sub
rol
jle
mov
and
test
div
loope
inc
adc
inc
loope
aad
pop
cld
xchg
dec
movs
pop
or
mov
out
xor
ins
out
(bad)
cld
mov
jns
test
fcom
jle
ins
out
pop
jb
lock
in
mov
or
lods
fs
dec
inc
dec
bound
jnp
(bad)
jnp
cmps
ins
or
mov
jmp
lods
add
lock
fsubr
lock
pop
dec
lds
xchg
pop
das
icebp
cmp
loop
jns
and
dec
dec
ret
and
icebp
out
test
fdiv
jl
std
in
test
mov
pop
leave
xor
rol
into
sbb
test
scas
je
pusha
add
add
jp
jno
xchg
mov
pop
push
dec
fmul
lods
mov
fs
out
call
adc
jecxz
ds
(bad)
dec
aaa
loop
inc
ds
sbb
mov
jb
or
dec
add
add
pop
punpcklbw
enter
xchg
dec
push
ja
mov
enter
jl
jno
enter
jb
std
cmp
push
cmp
ds
test
push
dec
dec
push
fcom
out
pop
jns
add
ror
push
(bad)
push
inc
(bad)
dec
sbb
ret
or
movs
sbb
mov
fcmovnu
xchg
mov
cwde
mov
iret
inc
or
add
lods
mov
loopne
ror
rcr
mov
sbb
adc
adc
int
(bad)
adc
jae
sbb
xchg
rcr
and
mov
test
xchg
cwde
and
data16
push
adc
jne
jns
(bad)
pop
push
dec
loope
iret
dec
jmp
std
cmp
xor
xchg
push
jo
dec
pop
neg
cmp
test
push
sub
rcl
ins
ins
cmc
or
sar
and
sbb
mov
push
(bad)
js
pop
jl
and
pop
in
mov
pop
out
dec
xchg
jmp
sub
mov
dec
rcr
mov
loopne
enter
retf
daa
push
inc
stos
lea
mov
shl
ret
pop
adc
loopne
mov
mov
jp
outs
pop
lods
scas
or
mov
jae
jecxz
stc
inc
aad
addr16
jo
sbb
mov
xor
div
pop
repnz
mulps
cdq
dec
ror
push
mov
push
adc
jmp
pushf
pop
mov
xchg
pop
cmps
push
into
sub
or
push
scas
leave
sub
mov
mov
cmc
jb
jae
jp
inc
mov
and
mov
xor
mov
adc
add
repz
pop
ret
mov
push
push
jle
pop
inc
test
arpl
jmp
sbb
mov
jns
add
xchg
inc
push
lds
adc
call
push
adc
imul
jo
cmp
iret
shr
bound
dec
push
int
outs
jne
(bad)
out
cwde
lds
das
popf
rol
push
js
(bad)
aas
sti
in
fcmovnu
rcr
rol
cwde
mov
es
mov
in
sbb
sbb
shl
js
jl
retf
pop
in
mov
ds
cdq
test
aas
and
mov
adc
stos
int
mov
loop
inc
mov
jmp
and
add
push
pop
dec
xchg
mov
mov
out
xchg
and
cmps
cmc
dec
test
and
cmps
inc
push
or
jbe
in
jle
dec
sbb
jmp
mov
push
nop
jle
sub
xor
mov
jmp
jno
mov
push
rcr
cmp
outs
enter
cdq
jl
stos
cmps
jle
stos
cmp
loopne
mov
rcr
ds
mov
push
loope
shl
mov
mov
pop
aas
pop
clc
jg
or
scas
popf
fwait
push
adc
add
shl
xchg
jge
lahf
das
scas
loope
inc
jnp
inc
and
ins
and
mov
aad
push
or
div
dec
or
in
mov
xchg
jns
sub
scas
(bad)
loopne
xor
pop
shr
xchg
jmp
sub
and
cwde
jle
imul
push
push
adc
fld
in
or
jp
fisubr
leave
jl
pushf
dec
stos
sub
lock
cmp
int
mov
hlt
stc
(bad)
shl
addr16
sahf
mov
inc
push
xchg
repnz
fcomp
push
inc
push
cld
shl
push
inc
shr
or
shl
popa
cli
aas
jg
out
mov
cmp
pop
dec
aam
xlat
sbb
ss
(bad)
ficom
aaa
sbb
retf
xchg
int3
icebp
pop
imul
or
adc
or
jae
sub
retf
xor
cmps
pop
mov
outs
xor
scas
adc
sbb
xchg
pusha
adc
jb
out
test
pop
int
pop
jne
data16
bound
fist
fild
ret
call
addr16
cmps
(bad)
sub
dec
aad
dec
ret
sub
mov
add
mov
comiss
xchg
ret
retf
xor
mov
mov
dec
push
or
jmp
lahf
(bad)
pop
push
dec
adc
push
xor
sub
loope
test
add
inc
ins
push
pop
cmps
mov
ret
inc
xlat
jp
jmp
sar
add
sbb
cmp
fmul
push
cdq
or
sub
push
lods
mov
cmp
xor
pop
gs
add
pop
repnz
and
sbb
cmp
or
jne
out
inc
jg
bndldx
dec
adc
pop
fist
cmp
test
xchg
pushf
je
jg
loopne
mov
sub
sbb
repnz
cmp
in
dec
cmp
cmp
movs
mov
adc
xor
(bad)
pushf
imul
pop
inc
loopne
pop
sbb
inc
outs
aas
ret
add
mov
xchg
push
pop
sbb
icebp
adc
int
jns
imul
xor
enter
sub
stos
jnp
mov
mov
clc
stos
sub
cli
out
imul
mov
pop
outs
jg
add
inc
int3
sbb
push
out
and
jl
sbb
ins
dec
enter
mov
dec
js
adc
mov
adc
push
(bad)
call
sbb
add
(bad)
les
jg
mov
mov
push
add
popf
pop
xchg
xchg
jo
(bad)
test
xor
sar
inc
aaa
push
mov
(bad)
fcom
bnd
and
cli
sbb
mov
test
mov
mov
or
xor
pop
push
repz
dec
iret
pop
sbb
rcl
rcr
pop
push
jecxz
je
mov
pop
xor
jnp
cmp
pop
mov
into
test
pop
test
scas
mov
cmps
(bad)
mov
cmp
retf
popa
mov
cmp
rcl
rol
rcr
sbb
push
jae
por
jg
(bad)
movs
cmps
xor
mov
pop
jecxz
mov
cmc
mov
fs
jae
outs
mov
mov
retf
fsub
push
mov
out
jo
test
sub
mov
add
inc
lods
mov
popa
jb
xchg
xchg
sub
mov
sbb
adc
mov
adc
dec
cdq
aad
sbb
or
sub
adc
aas
sub
inc
xor
rol
and
addr16
arpl
fs
mov
out
inc
adc
mov
arpl
popf
mov
mov
xchg
sti
ins
int
push
mov
cdq
dec
call
retf
cld
cmp
pop
aas
and
lods
cld
cmp
test
or
jp
out
jae
out
push
xchg
xor
sbb
or
dec
mov
mov
inc
add
add
out
sbb
xchg
cmp
imul
push
xor
jno
push
inc
adc
aas
pop
loop
or
cmps
cs
sbb
push
in
jbe
int3
xor
cmp
imul
xchg
leave
movs
push
and
fild
jg
int3
aaa
mov
jle
inc
jns
cwde
add
inc
sub
sbb
in
mov
scas
xchg
cli
mov
dec
cmc
sbb
xchg
xchg
mov
sub
(bad)
and
(bad)
cdq
in
lea
into
(bad)
imul
push
xor
(bad)
inc
and
jp
aaa
cli
push
mov
cmp
mov
xchg
xor
xchg
or
not
aam
add
cmp
xor
xor
push
cmp
mov
jmp
mov
sbb
adc
xchg
mov
pop
aam
jl
jo
js
cmp
repnz
and
or
sbb
jmp
(bad)
sbb
aam
push
pop
sbb
push
jl
and
dec
pop
add
sub
jne
xor
bnd
aam
cmp
sub
jmp
xor
ret
inc
(bad)
or
and
pop
repnz
push
push
mov
mov
jl
and
outs
ss
(bad)
pop
sar
cdq
(bad)
out
cdq
cld
sub
shr
cmps
inc
sar
sbb
sbb
lahf
push
pop
cs
(bad)
test
xor
inc
enter
mov
test
call
out
sbb
nop
mov
test
xchg
xor
imul
add
xchg
sbb
and
adc
aad
je
xchg
pop
es
(bad)
out
xchg
gs
jae
jmp
jbe
jmp
(bad)
test
shl
push
jns
popf
adc
jp
adc
or
pop
fidivr
or
fdiv
leave
jecxz
cmp
cmc
mov
or
mov
jmp
mov
push
mov
adc
shr
bound
adc
push
push
loopne
xchg
js
outs
inc
xor
dec
xlat
aad
xchg
lahf
and
nop
mov
(bad)
(bad)
jns
rep
adc
adc
lock
cmp
sbb
cmp
inc
call
inc
or
push
lea
jge
dec
loope
rcl
or
cmp
cmp
fnstsw
bound
cmps
je
adc
xchg
sbb
movs
ret
or
mov
add
cwde
mov
or
pop
mov
ins
imul
sbb
test
data16
pop
out
in
cs
cs
ror
cwde
psubsw
push
in
and
jle
push
scas
mov
shr
push
adc
push
lods
test
jmp
push
add
mov
adc
shl
(bad)
retf
into
leave
ins
sbb
adc
xor
fnsave
call
mov
fild
jp
push
add
daa
lds
cld
dec
div
movs
stos
iret
int
mov
sbb
cmp
(bad)
es
inc
test
and
or
popf
mov
pop
push
daa
popf
mov
push
inc
inc
push
rol
sub
adc
test
cwde
pushf
repnz
cmp
out
pop
call
mov
clc
(bad)
jge
aaa
dec
ins
stos
ins
in
out
and
sub
(bad)
add
jle
push
call
ins
les
dec
(bad)
not
and
pop
data16
mov
or
xchg
push
inc
repz
adc
jmp
(bad)
inc
pop
push
loope
dec
cmp
cmp
jl
jl
pop
cmc
dec
test
sub
call
add
sahf
mov
jo
fdiv
ds
sbb
js
dec
rcl
mov
(bad)
addr16
push
cmps
pop
jecxz
stc
xor
je
mov
mov
mov
sbb
imul
js
push
xchg
inc
hlt
push
shr
adc
add
sub
hlt
je
lods
dec
imul
addr16
std
inc
mov
addr16
ins
mov
popa
mov
jmp
mov
inc
inc
push
push
dec
rcl
push
cmp
stos
mov
xor
mov
sub
pop
xlat
outs
or
pop
lahf
xor
fnstenv
ss
xor
fnstsw
push
or
test
inc
adc
movlps
jmp
ret
stos
shl
xchg
mov
in
ret
mov
jmp
push
dec
lock
pop
add
lock
push
imul
gs
push
in
xchg
add
(bad)
mov
test
pop
xlat
shl
daa
cmp
mov
psubusb
ret
rol
mov
adc
loope
pop
inc
dec
mov
dec
jno
lds
leave
pusha
mov
cmp
aam
pushf
adc
pop
xor
jmp
das
std
add
dec
mov
sbb
jl
stos
je
add
cld
push
adc
cli
fiadd
sbb
(bad)
pop
popf
lea
jno
mov
push
movs
cld
aad
sbb
cli
enter
mov
inc
and
pop
mov
or
mov
pop
cmp
js
sub
test
jno
and
mov
xor
std
int
push
cwde
in
int
pushf
inc
scas
jmp
add
push
popf
cmp
sbb
lds
(bad)
cmp
mov
dec
push
mov
loope
lods
ins
into
cmps
movs
jno
cmp
add
cli
inc
xchg
aaa
inc
ds
in
cmp
mov
icebp
stc
in
sub
repnz
iret
(bad)
mov
xor
mov
mov
cmp
adc
cmp
aaa
jl
cmp
and
sub
icebp
jge
jbe
fstp
dec
mov
inc
mov
jae
retf
lea
retf
mov
mov
lea
adc
xchg
cmp
cmp
adc
lods
pop
or
and
outs
xor
or
retf
mov
jmp
xor
paddw
shr
push
ret
(bad)
fcom
adc
inc
loopne
daa
stos
push
mov
addr16
mov
xchg
mov
and
adc
pusha
add
leave
xchg
les
push
fsubrp
dec
sbb
add
(bad)
movs
(bad)
pop
mov
jno
and
sahf
cmp
sbb
mov
out
outs
or
push
jecxz
dec
mov
add
push
fldcw
or
sbb
aaa
aam
dec
cld
cld
and
lods
mov
mov
jno
test
outs
scas
push
adc
femms
sar
aam
gs
ret
xor
push
jnp
es
mov
mov
pop
push
cs
cmp
and
cdq
test
xor
mov
jo
mov
push
push
lahf
test
stos
mov
faddp
dec
fdiv
push
(bad)
repz
int
inc
sub
stos
cmp
(bad)
jae
test
fild
test
test
pop
sbb
jne
xchg
jmp
push
cmps
pop
call
xchg
std
xor
mov
sahf
inc
xchg
add
test
out
jne
lahf
jmp
dec
pop
and
js
jne
push
and
fstp
add
ja
das
in
aas
adc
add
fstp
pushf
sub
in
inc
add
dec
sbb
or
cmps
or
jp
das
xor
mov
add
push
adc
jne
in
or
mov
jle
lahf
sub
jg
xchg
int
push
outs
xor
sub
push
sahf
imul
test
xor
addr16
xchg
jns
add
lahf
sbb
push
mov
ds
xor
das
mov
mov
mov
movs
sub
fldcw
dec
pop
mov
mov
dec
mov
pop
or
jne
and
mov
fnsave
mov
xchg
pop
fsub
pop
cs
fs
inc
jp
leave
push
xchg
ror
jbe
shl
outs
xor
push
jnp
inc
imul
push
adc
push
hlt
pop
push
pop
mov
pop
push
xchg
je
cli
fdiv
mov
jo
out
in
mov
dec
aam
bound
sti
push
fld
int
pusha
fisttp
mov
pusha
fs
jg
xor
aad
push
data16
je
sbb
in
leave
xchg
jnp
dec
nop
loopne
loopne
enter
outs
or
loope
call
jo
sbb
call
inc
mov
icebp
test
or
jb
push
out
push
out
inc
xor
pop
add
icebp
adc
dec
enter
iret
(bad)
pop
jno
inc
xchg
sub
std
mov
cli
mov
jo
repnz
or
stc
push
stc
out
pop
cmp
in
xchg
sti
cmp
imul
test
mov
sti
stos
into
fisub
dec
push
dec
mov
stos
clc
or
test
xor
aam
xchg
xlat
ret
jg
adc
lock
sbb
lahf
adc
push
mov
pushf
aad
push
loop
sbb
push
mov
sub
cmp
add
add
cmps
idiv
lock
ds
adc
or
cmp
mov
or
fs
push
std
and
pop
mov
xor
mov
mov
or
inc
cmp
mov
in
fimul
sbb
call
sbb
or
xlat
(bad)
in
(bad)
repz
jmp
or
adc
adc
repnz
adc
test
hlt
clc
inc
jmp
sbb
cwde
sub
push
adc
ror
nop
pop
lods
bound
pop
sub
push
inc
mov
push
repz
test
mov
test
jnp
nop
pusha
lods
ret
cld
fidiv
push
mov
cmc
fs
inc
push
fbstp
icebp
and
popf
mov
cmp
mov
call
(bad)
fdiv
popw
sub
push
jmp
push
jbe
js
in
mov
or
mov
jb
and
loop
fild
mov
scas
adc
mov
push
cli
pushf
sub
mov
mov
imul
mov
imul
repnz
into
dec
or
mov
dec
in
inc
add
add
aad
mov
jp
xchg
push
jle
jge
push
int3
mov
mov
mov
mov
lock
and
mov
cmp
shl
jecxz
aaa
hlt
pop
push
mov
aaa
dec
mov
scas
stos
fisub
aam
inc
mov
test
push
adc
and
fstp
out
aaa
xor
sti
push
xchg
ins
sub
mov
sbb
xor
clc
outs
das
je
shr
mov
mov
loop
cmp
mov
aaa
sbb
xchg
std
push
sbb
push
(bad)
push
push
out
dec
xchg
retf
sbb
or
movhps
cmp
inc
mov
(bad)
bound
jmp
pop
loopne
xor
cmp
jae
xchg
cmps
scas
xchg
adc
addr16
pop
aad
(bad)
fwait
dec
pop
jae
mov
dec
mov
push
cmp
(bad)
dec
xchg
leave
mov
jmp
fidiv
lods
movs
mov
test
and
xor
repnz
shr
mov
sub
out
retf
int
push
arpl
and
ret
xchg
adc
xor
imul
push
or
or
jle
and
das
rcl
(bad)
icebp
inc
fucom
inc
fnstsw
cmps
ret
lea
cmps
(bad)
xchg
inc
je
mov
jmp
daa
push
bound
je
sbb
mov
cs
out
jmp
xchg
adc
fcomp
fidivr
sub
jmp
push
pop
pop
aam
jp
out
mov
shld
or
mov
clc
(bad)
repnz
jbe
push
sub
in
scas
xchg
adc
mov
in
(bad)
test
loop
rcr
push
jne
imul
shl
out
sti
into
test
mov
shr
js
mov
sbb
ficom
mov
xchg
mov
dec
adc
ror
pmuludq
pop
rcl
or
dec
mov
jns
mov
sbb
ja
dec
fdivp
mov
push
mov
push
sbb
dec
in
mov
sub
arpl
adc
sub
jne
pushf
sbb
sbb
pop
outs
aaa
add
and
in
pop
inc
iret
stos
bound
stos
mov
enter
add
sub
in
cdq
fist
adc
mov
fild
mov
shl
lods
lea
and
fsub
outs
or
add
push
cmp
pop
pop
aas
mov
div
xor
pop
int3
loopne
jl
push
lahf
push
and
test
out
es
pop
inc
mov
and
mov
pop
ds
shl
mov
ret
xchg
jb
pop
dec
repnz
sti
stos
jno
ins
or
mov
in
mov
xor
inc
cmc
(bad)
sub
(bad)
jo
sub
xchg
sub
loop
call
mov
ret
mov
loop
push
dec
add
int
fxch
jnp
pop
ret
sbb
lea
ror
lds
or
(bad)
imul
inc
fs
xchg
inc
mov
pusha
sbb
mov
push
test
sar
inc
cmp
and
repnz
jge
add
(bad)
bound
mov
push
dec
xchg
das
mov
or
sub
cmp
and
dec
leave
or
push
mov
inc
add
aam
je
mov
mov
dec
pop
daa
adc
inc
adc
leave
xor
arpl
xchg
clc
pop
(bad)
leave
push
dec
movs
ds
or
cmc
movs
sahf
dec
cdq
rcl
xor
push
ror
add
ret
adc
mov
xor
xchg
ss
sbb
jg
sub
je
test
push
fstp
cmc
and
fsubp
movs
mov
sbb
and
cmps
xor
push
idiv
call
data16
in
push
cmp
push
scas
mov
xchg
cmp
mov
(bad)
push
pop
cmp
cmp
xlat
outs
enter
into
gs
add
call
adc
loope
loop
popf
cmp
mov
imul
popf
js
out
imul
cli
jmp
xor
sub
(bad)
sub
aam
mov
mov
or
aam
push
loopne
sbb
pop
es
adc
frstor
and
or
std
fstp
adc
popf
add
mov
jge
test
adc
movs
frstor
and
sbb
rcl
mov
stos
sbb
push
pop
pop
xor
addr16
inc
popf
out
shr
movs
loop
pop
mov
jmp
fdivr
fst
popa
mov
mov
pop
xchg
pop
add
pop
test
out
pop
or
iret
test
and
mov
ret
into
mov
les
fucomip
stc
(bad)
icebp
mov
popa
cmp
out
lds
int3
pop
and
xlat
or
or
into
xchg
mov
and
(bad)
iret
adc
ret
lahf
daa
add
dec
inc
ins
mov
rol
fnstenv
in
pop
pop
clc
jbe
inc
mov
xchg
repz
dec
outs
jmp
inc
dec
hlt
clc
mov
adc
repz
test
pushf
xor
fsubr
retf
aad
adc
and
mov
cmps
xchg
dec
dec
ins
jp
add
cmp
pop
cli
enter
fld
pop
dec
jnp
rcr
adc
adc
or
mov
call
and
lods
sbb
ins
xor
jg
stos
mov
adc
or
jbe
mov
bound
xor
fucomi
stos
dec
scas
mov
pop
aam
fdivr
pop
test
jg
lahf
and
scas
jmp
inc
sar
cld
jnp
pushf
inc
pop
fs
xchg
pusha
adc
ja
adc
cmps
push
imul
loope
mov
pushf
aad
cmp
mov
cmp
lods
push
aas
or
push
sub
ins
jnp
cld
mov
jecxz
push
rcl
sub
adc
pop
(bad)
das
sub
push
jno
lsl
sub
cmp
xor
fwait
cld
xor
dec
mov
dec
ficomp
and
xchg
dec
int
js
es
mov
fimul
mov
sub
popf
jmp
ins
xor
xacquire
jge
mov
pusha
inc
xlat
out
sub
cmps
adc
pop
and
xor
dec
pop
repz
lods
mov
ret
add
jg
or
hlt
dec
daa
rol
sahf
bound
dec
test
repz
pop
mov
ret
adc
frstor
sbb
repz
aam
lds
les
jne
adc
pop
mov
mov
ret
push
retf
push
push
stos
or
mov
add
and
mov
mov
xor
mov
mov
jecxz
mov
fidiv
nop
jmp
gs
jnp
sub
pop
cli
mov
je
xor
inc
mov
mov
lahf
es
mov
movs
pushf
outs
mov
jb
out
int3
jbe
ror
nop
sub
test
out
(bad)
pop
xchg
bound
inc
ret
add
loope
das
into
aad
arpl
pop
mov
dec
push
pop
nop
cmp
(bad)
cli
mov
sbb
sbb
cmp
ja
ret
and
repz
shl
dec
or
push
or
push
mov
fdiv
(bad)
fsub
xchg
push
sti
(bad)
cmc
jnp
dec
jns
xor
(bad)
cld
in
jae
fistp
jmp
xor
(bad)
sbb
sbb
sub
(bad)
mov
add
mov
call
das
and
pop
ins
xchg
loopne
ins
sub
cmps
js
test
test
aaa
push
iret
loop
jo
pop
test
adc
iret
cmps
and
dec
or
add
add
jmp
fwait
or
sbb
ja
xchg
sbb
xor
cmc
repnz
(bad)
gs
dec
dec
stos
sti
ret
inc
fwait
push
adc
xor
jge
movs
int3
mov
mov
push
in
ffree
hlt
mov
es
std
popf
test
push
xchg
add
pop
repz
lods
mov
xor
mov
add
data16
loop
add
xor
jne
inc
push
ret
jl
fwait
dec
movups
and
inc
jecxz
and
xchg
dec
jmp
stos
imul
sbb
loop
cmp
cli
mov
out
or
mov
stos
jp
pusha
jno
push
inc
in
inc
out
outs
ficomp
mov
sbb
mov
jg
xchg
inc
ja
test
addr16
adc
push
add
mov
scas
push
fld
popf
shl
(bad)
stos
mov
add
repz
push
ficomp
lock
test
in
test
xabort
lea
pop
or
or
mov
arpl
inc
xor
fisubr
scas
add
jbe
test
daa
mov
in
fnsave
bound
xchg
loop
jbe
ds
test
pop
or
mov
loop
pop
int
jo
push
ret
inc
xchg
or
push
mul
add
cmp
jb
xor
(bad)
movs
lods
push
dec
mov
sti
and
dec
fistp
cli
hlt
lods
nop
cmp
movs
gs
inc
sub
push
xchg
ret
adc
int
jl
and
(bad)
mov
sahf
retf
sub
stos
cmp
cmp
push
fnstenv
dec
in
pop
daa
jl
outs
retf
mov
lods
mov
add
inc
cs
imul
rcr
popf
lea
jmp
shr
mov
imul
xchg
loop
movs
mov
lds
daa
add
lds
outs
push
jp
int3
test
lea
inc
out
inc
jl
je
or
adc
je
push
ror
retf
and
and
test
cmps
push
adc
inc
out
dec
mov
sub
popf
mov
mov
mov
or
inc
jbe
jno
cmp
jl
sub
repnz
jns
leave
loop
into
dec
(bad)
rcl
xchg
ss
cmp
pop
out
inc
(bad)
aaa
mov
jmp
in
lds
shl
popf
sbb
imul
xchg
rol
and
popa
jb
mov
imul
hlt
mov
cmps
sub
or
or
not
scas
jmp
test
aad
mov
xlat
movs
mov
(bad)
adc
inc
and
mov
fmul
push
mov
sub
sub
jnp
das
rcr
scas
mov
mov
retf
outs
dec
push
mov
and
add
dec
xchg
cmp
push
mov
out
pop
cmp
das
pop
cmp
mov
pop
pusha
movs
mov
sub
jmp
push
js
mov
sub
js
and
mov
jo
int3
inc
stos
adc
scas
aam
adc
in
add
das
ror
mov
cmps
ja
mov
cdq
out
mov
jmp
and
lds
ja
and
jo
enter
sbb
mov
mov
ins
sti
mov
ret
cmc
cmp
or
retf
call
repz
inc
jge
cmps
push
mov
bts
or
ret
(bad)
adc
xchg
dec
mov
sub
xor
sub
pop
jmp
test
rcl
xlat
push
adc
mov
mov
cdq
mov
lahf
xor
test
das
daa
shr
or
enter
out
ins
(bad)
inc
cld
out
cmp
xor
ins
sub
mov
push
retf
and
stc
push
adc
and
xchg
xchg
xor
and
dec
or
(bad)
fisubr
sbb
xchg
and
or
lods
lds
cmp
fs
loope
push
push
in
xchg
cmps
mov
les
pop
fwait
aam
cmps
pop
sbb
cmp
(bad)
pop
mov
test
or
scas
adc
repz
add
cdq
mov
retf
pop
sti
or
or
add
cli
scas
pop
pop
sbb
lahf
inc
push
int
dec
inc
ins
loop
pop
jmp
jae
xor
out
jl
test
nop
out
je
and
out
jl
iret
pop
cwde
dec
xor
and
sbb
jl
imul
mov
lahf
jbe
inc
cmp
enter
push
arpl
mov
test
push
rcl
jnp
not
xlat
ret
leave
std
sub
mov
int3
(bad)
outs
pusha
sbb
cld
sahf
push
(bad)
outs
and
cmp
mov
push
cmc
dec
push
cmps
mov
or
shl
and
inc
dec
jmp
mov
repz
test
sub
cmp
std
cwde
jnp
les
add
mov
and
repnz
xchg
call
pushf
(bad)
push
aad
pop
xor
pop
int3
je
or
sahf
rol
lods
pop
gs
outs
data16
shr
int
pop
fldenv
push
mov
adc
leave
pusha
jnp
loope
aas
or
jns
inc
pop
dec
cld
xor
mov
out
(bad)
pop
mov
mov
push
fstp
fisub
test
or
push
in
adc
mov
inc
xor
ins
retf
movs
push
(bad)
xchg
and
xchg
xchg
cwde
adc
daa
sar
xchg
loopne
es
jle
ins
and
rcr
clc
cmp
scas
loopne
aad
sub
addr16
js
push
(bad)
out
sub
sub
jmp
imul
outs
push
push
outs
xchg
dec
xlat
inc
and
sub
test
daa
sub
or
imul
in
mov
adc
scas
jl
out
jne
es
inc
inc
pop
lds
dec
add
dec
retf
add
retf
ret
cwde
sbb
jle
or
mov
test
add
push
cs
pop
add
mov
add
dec
mov
(bad)
xchg
sahf
cmp
or
arpl
jo
add
jecxz
inc
nop
and
aad
ja
sbb
jae
mov
dec
mov
jno
nop/reserved
(bad)
imul
ins
sti
fadd
ds
jp
movs
fidiv
adc
in
dec
xor
adc
pop
adc
push
in
in
ret
stos
mov
lahf
xchg
xchg
dec
(bad)
fwait
jmp
or
movs
push
push
jno
mov
test
push
xchg
retf
lods
xchg
fst
call
xor
pop
dec
and
bound
pop
dec
loope
fisttp
inc
add
movs
fldcw
add
sub
call
enter
xchg
inc
xor
adc
(bad)
xchg
(bad)
ja
imul
and
inc
xchg
mov
dec
rcl
gs
dec
icebp
jbe
imul
pop
pushf
loop
out
add
mov
ja
pop
dec
dec
stc
mov
std
cwde
mov
retf
call
jl
sub
pop
jle
leave
cld
xchg
jl
push
rol
cdq
shl
mov
mov
jg
shr
lods
mov
pop
pop
inc
out
retf
or
mov
sbb
in
push
mov
cli
jecxz
lods
out
dec
mov
adc
aas
adc
cli
fwait
push
das
jbe
pop
rcr
test
sbb
int
in
inc
mov
bound
jmp
sbb
lds
sub
jecxz
sbb
stos
and
retf
cmp
daa
out
int
jns
test
adc
jbe
lahf
fstp
stos
fwait
out
and
xchg
sub
push
into
and
and
je
pop
popa
push
cmps
mov
jno
sub
fiadd
sbb
out
add
inc
jmp
xchg
inc
call
mov
xchg
popf
clc
sbb
jl
push
mov
adc
jl
out
retf
stos
mov
aad
push
(bad)
std
out
loop
cmc
jmp
jbe
test
lahf
lock
adc
mov
jg
push
xor
xor
adc
enter
imul
clc
sbb
aaa
ss
cmps
add
push
cmp
add
adc
inc
xchg
mov
or
(bad)
popa
fbstp
inc
imul
pushf
xor
pop
mov
popf
outs
xchg
push
fadd
mov
shr
add
push
push
fsub
xchg
sub
fisttp
sbb
inc
popa
mov
pop
sub
sub
imul
adc
je
sub
nop
jl
or
jbe
retf
jns
(bad)
loopne
repz
fidiv
mov
inc
add
mov
xchg
xchg
mov
rcr
add
cmp
call
clc
xchg
fsub
xchg
pusha
or
mov
add
loopne
jl
ins
mov
cmp
or
cld
mov
inc
imul
sbb
xchg
jp
stos
xchg
push
adc
(bad)
mov
mov
sbb
jge
shl
ret
mov
cmp
adc
loope
dec
call
ds
stos
(bad)
xchg
rcl
mov
adc
daa
add
cmp
jb
jbe
cmps
and
stc
test
add
popf
sub
enter
xor
dec
rcr
jbe
inc
ret
push
add
jge
or
movs
push
mov
adc
and
and
or
cmp
jp
pop
mov
das
lods
add
add
les
rcl
arpl
cwde
dec
test
push
mov
bound
fist
pop
xchg
sub
fwait
mov
popf
outs
aad
push
push
mov
dec
xchg
inc
(bad)
movs
jecxz
and
jge
enter
push
retf
mov
adc
das
iret
cwd
hlt
hlt
repz
or
lods
in
jg
retf
sub
push
int3
mov
std
inc
(bad)
pop
shl
and
jmp
scas
stos
pop
jmp
xor
jge
and
push
mov
bound
push
mov
jecxz
sha1rnds4
sbb
(bad)
jp
ret
stos
or
push
and
cdq
jl
clc
leave
push
ror
xchg
ror
test
scas
push
xchg
imul
mov
in
cmp
xchg
push
scas
adc
push
rol
push
ins
out
cmp
cmp
cmp
sbb
ins
or
and
sub
cmp
pushf
(bad)
sbb
mov
ja
xor
jg
enter
jnp
jne
add
pop
aas
push
jo
inc
lea
shr
xchg
adc
gs
adc
sub
repnz
push
cli
jecxz
bound
imul
ficomp
mov
cli
movs
(bad)
jp
mov
sub
fwait
dec
arpl
mov
sbb
loopne
jp
pop
pop
inc
sub
jge
sub
ret
mov
fbld
push
inc
add
retf
add
add
push
sub
mov
mov
jp
mov
jb
push
mov
cdq
xchg
div
retf
test
cmp
pop
mov
inc
test
js
retf
and
stos
lods
push
cld
cli
jl
push
(bad)
and
jge
jbe
sti
test
push
lea
jmp
leave
mov
js
jb
xchg
jp
outs
lahf
repz
(bad)
sbb
mov
mov
jb
std
jg
outs
mov
(bad)
mov
je
das
out
cld
mov
pop
fwait
pop
cmps
push
cmc
or
ret
mov
jns
cld
fwait
lock
ror
mov
ins
pop
pop
sti
mov
hlt
repnz
push
ffreep
jnp
aaa
das
fidiv
push
dec
xor
lods
adc
neg
or
fwait
mov
fist
sahf
cmp
ja
dec
xchg
pop
add
iret
xchg
(bad)
push
inc
pop
pop
aad
les
jl
aaa
sbb
iret
mov
std
rcl
jge
out
mov
mov
sbb
pop
jmp
push
cmp
data16
test
adc
icebp
in
pusha
sar
add
repz
inc
xchg
or
gs
or
pushf
push
clc
mov
dec
clc
mov
rol
call
call
xchg
mov
call
xchg
push
xor
fdivr
dec
fcmovnu
inc
mov
lock
jmp
xor
cmp
inc
xchg
inc
dec
call
inc
cdq
jmp
push
push
shr
ds
sub
inc
cmps
icebp
hlt
push
shr
jb
dec
adc
mov
add
add
xor
popf
fnstcw
pusha
loopne
pop
cmp
xor
adc
imul
hlt
ret
nop
push
add
lock
inc
shl
mov
cmc
push
rcl
es
in
adc
pusha
adc
mov
retf
sahf
pushf
sbb
retf
ret
std
outs
push
pop
sbb
sub
fwait
iret
push
xor
stos
inc
outs
sub
mov
push
and
dec
(bad)
out
mov
lods
inc
loop
iret
inc
shl
(bad)
in
mov
scas
outs
inc
push
call
jno
aad
cmp
loopne
out
xchg
fwait
sar
add
loop
into
outs
rcl
inc
xchg
sub
jo
(bad)
cmp
sub
repnz
pop
ss
and
pop
pop
test
cli
dec
fadd
and
jne
mov
xor
dec
mov
cmp
cmp
adc
fs
jmp
shl
loop
sbb
pop
loope
mov
xchg
bound
xchg
loopne
mov
sahf
jne
inc
inc
and
mul
or
jo
out
cmp
je
popf
jmp
movs
lock
lods
add
fcom
sar
popa
push
push
jne
cwde
out
dec
and
loop
pushf
push
or
inc
nop
and
retf
sbb
mov
mov
mov
int
jnp
(bad)
mov
test
out
in
lock
icebp
cdq
mov
dec
push
into
mov
mov
add
mov
sbb
pop
fwait
cli
mov
sbb
sbb
cmp
cmp
in
cmp
mov
jle
jns
dec
jae
scas
mov
mov
xlat
cld
(bad)
lods
shr
mov
nop
mov
not
cs
mov
iret
mov
scas
xor
sbb
adc
adc
xlat
adc
mov
stos
lea
jo
sub
xor
jmp
lods
push
dec
and
fld
shl
xor
(bad)
not
mov
int3
xchg
(bad)
cmp
jg
shl
call
xchg
jnp
xchg
push
ret
push
jns
mov
imul
cmp
add
ret
sahf
out
mov
fidiv
mov
pop
cmps
out
repnz
dec
gs
add
sub
fsub
ret
clc
lds
mov
imul
retf
sbb
sbb
outs
call
xchg
and
mov
call
in
addr16
mov
mov
ins
fwait
mov
xchg
aad
fwait
inc
xor
stos
inc
mov
mov
mov
cli
mov
xlat
push
add
and
jo
xor
jae
loop
and
ficom
fnstsw
xor
cmp
add
mov
loop
(bad)
xchg
and
rol
out
inc
out
(bad)
jp
sbb
or
icebp
cmp
aas
int3
hlt
xchg
push
cmps
mov
popf
add
jmp
das
xor
cmps
jg
(bad)
div
jmp
jle
pminsw
scas
pop
pop
lods
mov
addr16
jge
iret
or
jmp
mov
jb
das
call
inc
fs
or
sbb
ret
out
push
inc
mov
rcl
mov
icebp
outs
call
jb
xor
mov
gs
xor
mov
sbb
adc
mov
push
sub
daa
inc
les
pop
mov
add
test
dec
imul
leave
imul
and
mov
mov
shl
push
pop
retf
mov
push
xor
cmp
mov
icebp
inc
inc
xchg
xchg
not
enter
mov
mov
sub
adc
xlat
xor
cmp
arpl
(bad)
dec
and
xor
outs
mov
sub
arpl
mov
sub
hlt
jo
js
fcomp
and
inc
out
xor
jbe
pop
adc
xlat
mov
fldenv
sub
push
in
mov
adc
loop
clc
push
scas
inc
out
inc
retf
jo
or
mov
ins
sbb
fyl2xp1
scas
pop
cmp
js
pop
jmp
ss
mov
pop
pop
mov
fnstcw
jno
jl
call
jp
push
aaa
loop
dec
lock
out
push
not
retf
xchg
jmp
outs
clc
aam
mov
outs
outs
in
xchg
sar
push
xchg
pop
mov
jo
jo
fs
jmp
mov
into
add
int3
je
(bad)
in
adc
dec
push
cmc
lods
cmp
sub
imul
adc
int
dec
iret
cmp
lds
rcr
sub
push
xor
inc
fistp
hlt
fwait
(bad)
stos
ins
es
mov
mov
scas
or
sar
inc
jmp
xchg
push
and
ret
outs
fs
inc
ins
inc
fs
mov
jmp
push
icebp
cmp
pop
add
movs
scas
daa
mov
push
fmul
mov
stos
lea
push
nop
call
dec
fcmovne
xchg
in
and
test
mov
mov
mov
add
imul
sbb
push
jle
sbb
imul
pop
sub
mov
mov
dec
jecxz
out
ret
bound
rcr
imul
and
lahf
pusha
cmp
mov
out
jne
pop
jle
nop
into
enter
gs
imul
cmps
mov
fisubr
inc
xchg
test
xchg
(bad)
jp
pop
jae
gs
cmps
cmps
fidiv
mov
cmp
pusha
xor
loop
std
push
mov
mov
mov
mov
lock
daa
xor
adc
repz
adc
out
pop
inc
pushf
sbb
stos
push
aad
call
test
sub
fiadd
daa
mov
imul
lds
and
rcr
mov
jle
shl
adc
icebp
xor
mov
pop
pop
mov
lahf
xchg
pushf
fld
bound
mov
push
xor
push
daa
outs
or
out
jns
xchg
xor
fimul
fsub
jmp
into
mov
test
lods
cmps
fistp
pop
mov
mov
aaa
rcl
retf
test
aad
std
jp
(bad)
popf
fisubr
pop
inc
jno
movs
xchg
or
(bad)
push
xlat
call
xchg
cdq
leave
in
mov
push
pop
(bad)
push
jno
fcomp
lea
pop
pop
and
aad
cmp
push
pop
jl
test
add
bound
dec
test
push
ds
pop
loopne
jae
mov
mov
xchg
dec
ins
or
in
inc
imul
mov
dec
push
test
in
jmp
mov
mov
dec
inc
cmp
mov
inc
fs
fcom
outs
aas
inc
pop
or
or
imul
cli
in
int
or
pop
add
add
xchg
call
push
imul
push
pop
bound
test
adc
mov
test
pop
add
ss
test
(bad)
rol
pusha
imul
jbe
fldcw
and
ret
and
inc
or
test
mov
xchg
in
icebp
jecxz
add
mov
cmp
jnp
xor
sbb
adc
lods
sbb
mov
jae
inc
(bad)
xchg
test
test
fwait
mov
xlat
mov
(bad)
emms
mov
add
dec
xchg
jg
daa
jecxz
jns
mov
and
leave
push
clc
leave
jle
jp
fdivr
add
sbb
fstp
jae
stos
jl
adc
repnz
sbb
xor
movs
movs
aaa
rcr
shld
div
sbb
aad
jo
pusha
fcom
push
loope
or
jo
xchg
(bad)
sti
sub
clc
aam
out
xor
pop
call
jmp
pop
or
dec
adc
loopne
iret
scas
inc
fidivr
add
add
mov
and
cld
outs
jns
std
inc
pop
mov
sub
retf
aam
pop
inc
icebp
ror
lds
pop
hlt
std
in
and
sub
mov
fiadd
jbe
into
jge
loope
sar
or
ror
lahf
push
jo
ss
sti
enter
ret
sub
shl
xor
xor
imul
gs
cs
mov
cdq
xchg
add
cmp
sbb
cmps
fs
(bad)
fimul
adc
add
aas
int
dec
dec
mov
jge
cmp
mov
add
and
(bad)
sbb
lock
in
cld
push
test
clc
sbb
fistp
inc
fidiv
and
(bad)
cmp
push
in
scas
cs
xchg
call
in
stc
xor
icebp
jecxz
pop
push
dec
retf
daa
cli
inc
jmp
push
jae
fcmove
ins
xchg
ret
fsub
adc
push
aaa
sbb
scas
mov
or
pop
cli
xlat
fnsave
call
fwait
scas
je
add
test
scas
mov
jns
bound
sbb
in
xchg
push
stos
int
adc
sub
imul
jnp
push
es
mov
lods
mov
xor
mov
cld
sub
xor
ror
cmp
push
dec
pop
xchg
into
iret
ret
ds
rcr
or
inc
loop
retf
fs
in
xchg
movs
(bad)
sbb
and
jae
add
ins
add
lea
into
inc
dec
lock
xchg
in
adc
loopne
ds
sar
push
xlat
lock
cmp
aas
push
jle
jp
sub
nop
into
push
in
(bad)
jne
adc
or
pushf
inc
mov
xor
aas
sub
push
call
addr16
dec
jp
jbe
test
pop
stos
fld
add
mov
xchg
aam
sbb
rcr
(bad)
jnp
jmp
inc
fwait
out
cs
aaa
or
adc
cmp
nop
xchg
xchg
mov
movs
jno
pop
cs
cmp
or
push
js
pop
xor
cs
movs
sti
push
mov
pop
jno
fwait
push
xor
es
pop
aad
pop
sub
std
lea
movs
inc
iret
test
or
shl
cmp
pop
inc
inc
adc
cs
repz
data16
out
inc
aam
js
xchg
pop
popa
fnstcw
cmp
ret
and
lock
movs
and
sbb
mov
mov
lods
fistp
xor
mov
adc
ret
xchg
mov
xchg
add
mov
push
ret
sbb
je
mov
cmp
jecxz
mov
xchg
jae
push
pop
push
aam
jl
sbb
jl
lods
cs
sub
or
and
add
mov
pop
std
cmc
ret
movs
out
js
push
sbb
and
sbb
xor
iret
mov
pop
push
scas
aam
stos
int3
scas
cmps
pop
int3
mov
lods
add
mov
in
mov
inc
rol
sahf
or
bound
hlt
add
std
mov
lods
jmp
jns
jno
ja
push
inc
jb
fisub
fstp
jge
pop
outs
inc
sti
fistp
pop
sub
sti
sbb
mov
inc
dec
jb
cmps
dec
sub
adc
xor
push
call
pop
mov
dec
cmp
rcl
push
jge
xor
pusha
aas
pop
xchg
lods
xor
aad
dec
jbe
aam
cmp
xlat
cmp
nop
std
in
jecxz
push
inc
adc
aad
nop
sub
dec
pop
ja
jo
cmp
ja
inc
mov
xor
fstp
cmps
inc
mov
mov
sbb
jbe
pop
and
inc
jb
daa
aas
mov
fldcw
mov
sti
leave
dec
push
push
mov
mov
scas
cwde
xchg
sahf
ret
pop
lods
dec
lahf
es
nop
adc
out
(bad)
fwait
mov
jge
push
aas
stos
jl
fs
pop
jmp
enter
mov
jl
xchg
push
cmp
pop
and
clc
bound
iret
jno
lea
inc
(bad)
clc
inc
adc
xchg
dec
mov
nop
pop
imul
test
mov
or
dec
aaa
repnz
cmc
enter
das
sub
imul
mov
cmps
jmp
add
lds
shr
sbb
sar
lock
loope
mov
jmp
lods
and
sar
ficom
vmwrite
call
jne
popa
pop
mov
adc
or
movs
icebp
loopne
xor
jmp
sbb
addr16
es
imul
mov
mov
sbb
test
rol
add
add
js
fwait
arpl
cli
and
push
mov
jecxz
cmc
and
call
aad
paddb
addr16
jmp
xor
and
dec
mov
adc
sbb
sub
jmp
or
test
add
adc
out
pop
outs
arpl
ja
stos
inc
mov
fisub
inc
lahf
inc
lods
enter
and
and
loopne
int3
sub
mov
sti
jns
inc
or
cdq
xchg
pop
xor
clc
cmp
and
or
jg
inc
pop
(bad)
sti
fidiv
ss
sbb
push
call
inc
fwait
pop
and
mov
mov
fnsave
adc
push
xor
xor
dec
jl
ss
imul
stos
push
pop
loop
lea
movd
cmp
and
fistp
xchg
fs
es
push
push
mov
data16
or
and
cmp
or
ret
mov
xchg
scas
(bad)
icebp
mov
data16
inc
fsubr
push
xor
mov
push
sub
outs
cs
jp
jb
add
into
fst
sub
loope
pop
rol
pop
out
pushf
(bad)
stc
pushf
aad
ja
adc
sbb
mov
pop
cmp
pop
nop
cwde
push
inc
pop
and
add
int
ins
xor
mov
pop
push
xor
mov
adc
pop
mov
into
inc
es
(bad)
fs
ins
mov
test
mov
adc
adc
aam
out
or
xor
push
lods
cdq
bound
or
xor
or
mov
push
adc
jmp
mov
rcr
aad
dec
xchg
jno
clc
xor
mul
mov
scas
movs
loop
mov
and
pop
dec
scas
and
pop
cmp
or
push
bound
inc
dec
popf
pop
mov
inc
mov
popf
fild
sbb
lods
adc
or
ss
mov
ds
pushfw
das
and
adc
std
(bad)
lock
repz
loop
das
fidiv
call
push
ds
shl
retf
mov
or
adc
test
leave
cwde
mov
aam
lahf
gs
repz
and
add
sub
loopne
ret
test
cld
outs
inc
and
or
and
ret
push
aas
iret
in
aaa
gs
stos
les
push
imul
mov
(bad)
icebp
mov
adc
or
das
bound
add
out
xchg
aas
inc
push
lahf
popf
jb
je
fbstp
and
mov
dec
test
mov
push
out
mov
ss
ds
repz
cmp
shl
jno
leave
arpl
mov
lods
std
mov
jp
dec
mov
or
ss
inc
ja
inc
jp
adc
sub
inc
cmp
adc
pop
or
aad
cmps
cmp
pop
into
scas
ret
or
dec
mul
xchg
cmp
or
mov
mov
retf
xchg
int3
popa
and
mov
addr16
call
push
dec
js
out
fs
test
mov
pop
aas
les
int
or
cli
loopne
xchg
je
xor
add
sbb
cmp
jo
shl
xchg
xchg
inc
adc
cmps
push
mov
mul
xor
mov
inc
mov
fcom
test
fdiv
aaa
mov
and
ret
xchg
ret
dec
mul
push
aaa
enter
in
sbb
ret
mov
ja
mov
add
data16
xchg
es
loope
xlat
enter
inc
pusha
repz
push
movs
jecxz
jge
dec
stos
and
std
jnp
mov
xchg
rol
movs
mov
push
jae
repnz
cmp
add
scas
outs
push
(bad)
je
dec
pop
and
and
lods
mov
xchg
push
cmc
out
pop
lods
retf
xor
inc
push
pop
iret
jo
fxch
cmp
pop
dec
mov
mov
xor
mov
jecxz
dec
data16
cmps
pop
or
lods
mov
adc
icebp
ror
pop
ss
mov
fs
int
xlat
pop
ret
movs
out
mov
sub
push
sbb
lods
aas
call
push
fistp
retf
loopne
ret
popf
xlat
mov
jle
cmps
cmps
xor
sbb
psubq
movs
loop
push
mov
jge
repz
outs
cdq
mov
jbe
xor
fiadd
push
loop
jne
add
xchg
icebp
dec
pop
xchg
cmps
jb
cs
dec
(bad)
mov
cmp
jae
mov
xchg
cmp
fstp
movs
dec
mov
ds
jmp
daa
push
scas
mov
cwde
jg
cs
mov
shl
in
mov
stos
loop
inc
or
movs
test
or
adc
loope
adc
fild
xchg
mov
xor
dec
push
cmps
xchg
bound
sbb
imul
imul
and
xchg
test
mov
jmp
mov
mov
ret
or
sti
xor
int3
mov
jle
and
add
and
lods
js
ficomp
inc
cmp
xor
lods
mov
iret
ss
cli
xchg
in
in
and
pop
mov
lea
jp
ins
fistp
out
ds
repnz
imul
ins
gs
sbb
call
int3
cld
jo
nop
in
xor
jnp
outs
mov
cli
dec
into
das
jno
fwait
jae
mov
cmps
ja
ja
push
sti
pop
sti
cs
xchg
mov
xchg
pusha
cmp
mov
cld
cmps
xchg
fldenv
into
pushf
cli
test
cmp
gs
aam
jno
iret
gs
jge
popf
dec
pop
or
bound
push
sti
jnp
push
fstp
dec
sar
sbb
stos
cmp
out
(bad)
xchg
stc
aam
adc
scas
loopne
xchg
int
or
push
mov
iret
cmc
pop
out
xchg
pop
push
jl
test
shl
rcr
sub
mov
fistp
mov
mov
xchg
(bad)
jns
xchg
cmps
jg
push
jmp
cld
cld
cmp
or
data16
rcl
addr16
adc
pop
push
mov
cld
icebp
jae
lods
jae
jnp
mov
push
test
aas
mov
mov
lahf
repnz
lods
nop
mov
retf
cmps
div
pop
call
nop
add
dec
xor
test
add
push
scas
shl
sub
ret
xchg
nop
arpl
jb
cmp
mov
mov
sbb
fst
mov
stos
outs
div
lahf
rol
dec
sbb
or
mov
stos
cmp
sbb
cmp
sub
pop
xchg
shl
nop
pop
sar
cmp
sbb
dec
ret
inc
int
jae
in
sar
mov
push
jo
add
cwde
jnp
push
push
loop
inc
inc
bound
rol
pop
idiv
out
movs
jns
test
or
fnsave
mov
push
mov
inc
jmp
int3
mov
inc
arpl
stc
cwde
jmp
ins
push
cmp
mov
inc
sbb
inc
cmp
fwait
arpl
int
xor
test
movs
and
jle
sbb
and
jmp
pop
iret
xor
jnp
out
pushf
mov
dec
pop
mov
xor
daa
dec
loopne
xor
mov
stos
fstp
imul
sub
xchg
mov
or
data16
dec
dec
or
(bad)
in
pop
nop
vhsubpd
enter
sub
pusha
pop
ins
nop
jmp
movs
rcr
xchg
inc
in
stos
inc
test
nop
sbb
cmps
das
addr16
jecxz
fmul
cmp
and
in
xor
ret
clc
loop
movs
cdq
jne
test
jg
mov
dec
pop
and
ret
mov
je
das
mov
mov
das
jno
jle
mov
push
lock
call
sub
sbb
arpl
retf
imul
inc
movs
sbb
arpl
or
pop
or
mov
jb
loopne
aaa
(bad)
div
xlat
xor
jge
mov
xchg
xor
jne
mov
inc
test
mov
xor
pop
mov
push
dec
outs
pop
jns
mov
popa
add
test
movs
xor
xor
mov
cwde
push
cmp
data16
inc
aad
stos
add
adc
cmp
test
(bad)
lds
push
xchg
and
mov
cs
or
jae
mov
sub
std
or
cmp
fbstp
dec
mov
fdiv
lea
jl
pop
sub
mov
(bad)
nop
lods
ret
std
mov
out
push
xchg
shl
(bad)
pop
icebp
pop
dec
lods
icebp
lds
inc
pop
and
pushf
pushf
loopne
enter
pop
gs
fcom
cmp
push
aaa
iret
div
out
add
and
dec
fsubp
cmp
outs
sbb
mov
ret
and
cwde
lds
mov
cwde
add
mov
pop
dec
loop
out
xchg
repnz
inc
jmp
sub
cmp
mov
adc
cmc
lock
repnz
test
imul
sbb
cmp
cld
push
popf
dec
call
ss
or
repz
dec
jmp
fdivr
pop
cmp
pop
loope
inc
xlat
ret
cli
push
inc
push
xchg
and
scas
nop
adc
test
pop
es
stos
inc
jmp
retf
scas
push
push
nop
outs
lods
(bad)
cmp
loopne
(bad)
sbb
inc
bound
je
sahf
xchg
mov
cmp
bnd
xchg
in
in
sub
test
push
jno
or
inc
rcr
imul
jp
into
inc
lea
dec
fs
add
cs
mov
cmp
push
(bad)
jg
dec
add
clc
and
xor
inc
sub
aas
frstor
mov
retf
add
mov
les
fs
cwde
repz
lahf
imul
inc
mov
in
sub
mov
cmp
fst
push
arpl
(bad)
adc
ret
inc
push
add
daa
in
inc
ins
leave
cmps
sub
mov
jbe
lods
mov
add
(bad)
loop
mov
cmp
mov
repz
retf
fadd
xchg
sub
add
aaa
sub
and
mul
push
jge
mov
fimul
adc
sbb
repnz
in
sbb
ins
int3
cmp
push
addr16
fistp
aas
hlt
cmp
mov
mov
out
mov
lahf
(bad)
(bad)
ins
mov
and
in
sub
push
push
div
xchg
inc
sub
mul
js
outs
pop
and
dec
xor
fcmovbe
jmp
mov
aas
leave
ja
mov
mov
cdq
(bad)
loop
or
dec
mov
(bad)
adc
add
stos
shr
jo
int3
jno
add
imul
loope
mov
inc
mov
ins
xchg
mov
cmp
add
dec
xchg
xchg
mov
mov
mov
ins
mov
aas
ins
sbb
pop
xor
inc
xor
pop
popf
call
sub
add
sub
repz
outs
outs
(bad)
push
imul
nop
mov
cmp
mov
xchg
sbb
hlt
adc
cmp
cmp
jbe
mov
out
int
test
outs
imul
xor
mov
out
mov
je
cwde
test
push
cmp
cld
outs
mov
adc
add
gs
das
pop
mov
lea
sar
pop
mov
sub
dec
jmp
clc
test
(bad)
sbb
or
pop
fmul
xchg
inc
xchg
and
mov
pop
mov
jl
dec
rcl
dec
sbb
test
xchg
je
ins
nop
sub
mov
mov
mov
xchg
sbb
pop
jbe
xor
xor
pop
mov
pop
call
and
adc
cdq
ds
addr16
push
cmp
sub
cmps
jg
test
lahf
and
loop
sar
ins
mov
lahf
xor
loope
aad
mov
(bad)
in
sub
xlat
fisubr
les
xchg
sti
xchg
outs
jno
jmp
add
mov
leave
dec
ret
in
ficomp
sub
test
xor
gs
pop
inc
fs
adc
or
mov
sbb
jle
xrelease
aam
call
adc
adc
pop
pop
xor
xor
sbb
(bad)
adc
ret
inc
mov
leave
push
repz
or
rcr
mov
fld
sub
in
jmp
mov
jl
nop
cmps
mov
push
into
stos
ror
lock
out
test
int3
mov
and
jns
jmp
sbb
ins
mov
in
fild
test
shr
xlat
xlat
mov
adc
push
jno
mov
xor
push
scas
mov
(bad)
imul
loopne
mov
icebp
push
lods
in
or
dec
ins
pop
outs
mov
inc
jmp
mov
sub
or
adc
xor
aaa
and
ins
mov
pop
dec
fs
cli
mov
test
xlat
adc
outs
repz
inc
jbe
pop
pop
in
cmp
sub
daa
dec
sbb
ss
mov
dec
push
in
call
and
repz
jno
xor
cmp
mov
stc
je
lds
mov
dec
lea
push
dec
sar
fstp
jo
js
sub
xor
cli
pop
mov
shl
push
add
mov
push
ins
xchg
das
call
inc
jl
push
sbb
pop
and
mov
xor
mov
push
mov
pop
fs
stc
or
popa
dec
dec
int3
scas
out
cmp
dec
jne
pop
add
or
jmp
stos
add
mov
jp
xchg
adc
leave
and
femms
cdq
jecxz
sub
adc
push
shl
jo
sbb
mov
jmp
xor
repz
dec
push
sbb
xor
retf
cwde
out
int3
fucom
cwde
inc
jmp
dec
mov
mov
or
push
and
ds
into
mov
push
lock
push
mov
push
fwait
inc
mov
adc
or
push
mov
mov
push
cdq
jns
es
clc
ret
jns
inc
in
ds
mov
je
sub
sub
imul
out
pop
retf
push
add
or
fdiv
cmps
mul
(bad)
sub
or
cmp
push
leave
pop
jne
movs
ss
repnz
xchg
gs
pop
sub
ss
sbb
xor
clc
test
ins
mov
repnz
push
add
inc
add
mov
pop
(bad)
lea
jle
add
mov
fnstenv
mov
mov
out
(bad)
ins
push
repz
push
cwde
loopne
and
popa
mov
xchg
out
mov
rol
push
movs
call
fldl2t
lods
add
and
or
je
cmp
mov
call
psrld
movs
ss
sub
or
sub
cdq
push
xchg
(bad)
popa
leave
jmp
dec
test
arpl
push
adc
or
mov
(bad)
cmps
and
aam
sahf
sub
dec
and
es
mov
or
ret
mov
add
dec
jp
add
ret
jno
adc
sbb
lea
xor
dec
lock
and
imul
fst
stos
fstp
push
ror
ret
or
xchg
movs
cmc
add
fst
push
mov
inc
femms
pop
mov
pop
(bad)
sbb
cmc
add
dec
jmp
xor
cmp
shr
sbb
stos
daa
xchg
(bad)
jns
in
nop
fucomp
movs
adc
and
cmp
pop
mov
jno
ret
xlat
inc
sar
pusha
cmp
shl
pop
sub
call
add
push
pushf
(bad)
pop
jg
cmps
repnz
xor
cld
cmp
es
xchg
fstp
add
sbb
ds
dec
cld
lods
cmps
(bad)
xor
adc
fwait
int
pop
jnp
mov
ins
jbe
or
pop
cld
int3
aad
push
mov
add
add
leave
aaa
push
xchg
(bad)
mov
push
xchg
adc
movs
popf
(bad)
daa
in
cpuid
scas
mov
or
ds
dec
loope
shl
add
(bad)
push
out
push
pop
add
and
pop
frstor
sbb
dec
nop
bnd
(bad)
std
push
neg
and
fnstsw
js
pop
aam
popa
ins
nop
repz
xor
add
cmp
xchg
or
jp
add
adc
xchg
sub
mov
pop
inc
mov
icebp
xchg
xor
push
push
and
les
shl
lahf
es
push
push
js
loopne
rol
sar
add
data16
pushf
adc
xor
ins
out
test
pop
mov
mov
xor
(bad)
xor
sti
add
pop
mov
or
movs
call
xor
pop
lahf
out
mov
test
std
sbb
stos
int
int3
and
add
cld
cmp
jmp
dec
lds
sti
inc
lock
or
outs
imul
pop
or
mov
pop
mov
dec
stos
cli
lods
jecxz
or
mov
xchg
inc
aas
push
mov
(bad)
mov
int
jge
xchg
lock
dec
bound
in
xchg
cmp
mov
repnz
ret
sub
loope
jo
jle
ret
cmp
adc
push
fs
pop
adc
and
lods
shl
jl
or
fistp
sub
inc
dec
jge
mov
add
ss
mov
arpl
mov
mov
ss
sub
movs
dec
cmp
pushf
scas
lahf
test
lea
adc
repnz
(bad)
imul
out
push
gs
ror
sbb
or
enter
test
add
ret
mov
or
pop
push
popa
push
sub
xor
or
xor
fimul
rcl
xchg
ds
ret
popw
cmp
addr16
and
lods
xor
das
mov
adc
sub
sub
adc
dec
hlt
test
leave
cdq
neg
test
push
jmp
add
push
ins
push
and
or
jo
sbb
gs
ins
mov
je
pop
mov
ins
mov
mov
adc
mov
or
rcl
mov
stos
xor
xor
push
xor
cmps
ret
inc
jg
inc
call
sbb
call
outs
test
adc
add
cmp
(bad)
into
sub
mov
loop
pop
push
cwde
gs
sbb
jg
bound
daa
push
test
test
mov
xchg
push
std
retf
push
jae
stos
xor
inc
shl
cvtdq2ps
es
sti
das
(bad)
outs
cwde
adc
ret
sti
je
hlt
imul
ss
cld
ds
pop
cdq
or
pop
xor
push
fst
clc
ins
xchg
xchg
xchg
bound
add
cmp
leave
rcr
fxch
les
push
xor
jge
xor
push
movs
into
aas
jbe
add
call
ret
mov
mov
pop
cwde
mov
or
add
pop
dec
mov
xchg
fwait
outs
jae
rcr
mov
push
imul
pop
ins
(bad)
xchg
ds
mov
js
das
gs
test
xchg
iret
inc
mov
xor
jns
imul
add
xchg
fstp
mov
test
rol
jbe
cmp
sub
fstp
jge
(bad)
(bad)
cmp
push
fwait
test
retf
pop
xor
jp
out
stos
loope
cmps
aas
xchg
push
shl
or
sbb
inc
pop
clc
(bad)
mov
inc
push
sbb
dec
leave
xchg
fwait
lock
scas
jp
fidiv
loop
in
lods
fdivr
mov
pop
and
jb
add
dec
inc
pop
inc
scas
lock
cmps
lods
rol
ins
jbe
sbb
data16
cmps
and
xchg
cli
cmps
pop
das
push
add
shl
out
cmp
inc
xor
push
push
sbb
push
inc
dec
sbb
add
mov
push
xchg
cmc
dec
and
ins
outs
pop
adc
and
mov
mov
int
nop
and
xchg
mov
out
xor
add
add
or
pop
mov
lock
test
adc
in
mov
sbb
pop
ror
call
imul
cli
stos
repz
(bad)
ins
ds
out
call
pop
jg
cmps
adc
out
and
adc
inc
fsubr
aas
add
lods
(bad)
out
sbb
repz
rol
sbb
push
outs
fidiv
(bad)
popa
lods
(bad)
pop
dec
mov
in
sbb
cmc
sub
xchg
ret
inc
in
or
or
and
hlt
jle
xor
push
xor
rol
mov
fwait
ins
or
imul
es
ins
jmp
arpl
mov
cmp
pop
std
push
or
into
(bad)
mov
sub
push
outs
retf
sub
or
sub
stos
clc
inc
loop
(bad)
ja
mov
jne
scas
adc
repz
std
sbb
push
jb
push
lock
xor
jmp
jno
es
(bad)
mov
adc
xchg
xlat
out
xchg
jg
adc
mov
mov
or
in
fdiv
clc
cli
fld
out
pop
inc
mov
push
imul
out
les
dec
sahf
push
loopne
fdiv
jmp
mov
fxch
rcl
adc
sub
ins
dec
movs
movs
ja
gs
scas
dec
sbb
sbb
and
idiv
push
xlat
push
das
xchg
ins
and
pop
aam
pushf
push
add
aad
mov
cmp
xlat
add
bound
push
out
jne
sub
test
(bad)
dec
loopne
pop
js
int
inc
fsubr
push
loop
scas
inc
mov
jmp
cmp
dec
xor
mov
dec
xchg
cwde
jle
pop
sub
in
dec
outs
ret
mov
or
jecxz
idiv
mov
out
jae
mov
mov
dec
imul
push
iret
scas
in
loope
cmp
les
mov
scas
push
(bad)
sub
add
stc
dec
adc
inc
pushf
rcl
xor
xor
push
jns
push
cmp
mov
movd
mov
hlt
push
cld
dec
inc
jmp
(bad)
into
rcl
sub
jb
leave
cmp
jmp
call
sub
jle
lahf
or
mov
adc
repz
out
cli
and
mov
or
add
jbe
ret
lea
and
sub
bound
sahf
xchg
not
fstp
push
xchg
mov
sub
mov
popf
addr16
inc
xor
popf
cmps
cmp
(bad)
cmp
in
ret
pop
es
ja
cmp
mov
inc
outs
or
add
sti
xor
iret
dec
mov
loopne
sub
inc
sub
cmc
mov
pop
xchg
mov
xor
xchg
xor
mov
inc
pop
aas
ja
push
and
mov
mov
gs
mov
push
xchg
mov
mul
push
mov
mov
call
hlt
sti
xor
push
rcl
(bad)
mov
jne
fs
sub
sub
push
inc
ins
jns
in
adc
xor
and
leave
mov
fsub
popa
sbb
popa
dec
cmp
or
into
fild
mov
out
not
cmp
jns
sub
lods
adc
mov
mov
fsubr
imul
scas
pushf
pop
(bad)
in
or
adc
hlt
lods
(bad)
out
ja
mov
imul
pop
mov
cmp
push
dec
push
cmp
mov
cmp
mov
test
jnp
mov
pop
movs
je
add
sbb
xor
std
mov
aaa
cmc
inc
jecxz
mov
xchg
inc
sub
lea
std
lods
add
sahf
mov
into
arpl
jp
adc
sbb
or
movs
sub
cmp
push
cmp
and
mov
dec
and
dec
push
xor
ret
sbb
and
inc
adc
dec
jle
outs
mov
es
and
jns
rol
hlt
mov
imul
outs
or
mov
scas
sbb
mov
idiv
and
sahf
jb
repnz
aam
adc
in
xor
call
outs
add
mov
sub
xchg
fisubr
adc
clc
cmc
push
pop
mov
push
lods
int3
mov
jnp
or
xor
sbb
dec
lea
imul
sbb
(bad)
lods
repnz
out
iret
shl
pop
adc
push
pop
lea
push
cmps
ret
dec
inc
test
aaa
lahf
mov
dec
pop
cli
mov
inc
mov
mov
jo
xchg
mov
ret
xchg
in
arpl
outs
inc
test
jne
mov
sbb
cmps
rcl
push
jl
stos
mov
cmps
mov
cmc
xor
jbe
push
pop
in
mov
mov
jecxz
iret
sub
pop
les
inc
fsubrp
enter
iret
push
inc
inc
xor
push
cli
pop
jbe
ret
dec
shl
sbb
imul
and
mov
xchg
dec
lods
pop
(bad)
adc
jmp
imul
push
mov
mov
inc
ins
jle
enter
fstp
jno
scas
xor
sub
call
imul
stc
lock
adc
adc
push
mov
les
sub
int
fistp
inc
mov
mov
je
xor
push
xchg
inc
(bad)
scas
push
in
pop
cmp
nop
inc
mov
add
retf
scas
movs
pushf
or
stc
sub
or
(bad)
dec
mov
das
xchg
mul
inc
enter
dec
ins
pop
jbe
cs
add
out
shr
or
pop
push
fmul
xor
dec
jg
popa
in
cs
repnz
sbb
sahf
dec
add
cmp
js
xlat
jg
jbe
scas
jg
shl
nop
add
(bad)
cmp
inc
pop
mov
lods
in
mov
test
dec
outs
mov
cmc
test
fdivp
aam
loopne
inc
inc
sbb
mov
and
jecxz
jl
out
repnz
jp
inc
jmp
sar
stos
cwde
sub
adc
and
add
loop
add
sbb
test
shr
mov
jle
xchg
jmp
inc
mov
sti
ss
dec
adc
clc
xlat
xchg
popf
(bad)
fwait
mov
fwait
lock
cs
push
(bad)
enter
in
adc
rol
and
inc
adc
js
cli
sub
ret
lock
mov
popf
and
sub
mov
adc
pop
adc
lock
stc
xchg
scas
add
push
repnz
sti
cdq
sbb
cmps
inc
cmp
test
push
pop
pop
leave
push
retf
test
outs
xchg
inc
push
cmp
or
pop
cli
jecxz
lods
data16
push
fbstp
cmp
icebp
jae
cmc
mov
shl
xchg
sub
cdq
je
iret
jb
aad
xchg
fcmovnbe
sysenter
dec
cmc
mov
dec
inc
dec
sahf
jnp
pop
dec
inc
fs
outs
mov
sub
in
adc
call
mov
ja
mov
pop
daa
mov
sahf
push
and
xor
mov
xchg
btc
movs
les
out
and
sbb
xchg
imul
add
(bad)
call
jae
(bad)
inc
sbb
ins
(bad)
fdivrp
add
xlat
cli
or
aam
mov
xor
xor
dec
cmovb
jns
out
cwde
xchg
mov
mov
sbb
repz
push
or
add
arpl
das
ss
pop
inc
xchg
out
mov
xchg
xor
dec
add
xchg
ret
mov
in
push
adc
and
fsubr
xchg
jecxz
jp
enter
mov
mov
mov
test
push
arpl
dec
push
call
imul
sahf
nop
cmp
add
in
mov
push
xlat
push
inc
xchg
jo
cmp
pop
cmps
es
sar
push
and
repz
cld
dec
mov
sbb
xchg
iret
sbb
cwde
stos
push
jo
cld
lds
cmc
push
push
call
stc
xchg
push
cdq
xchg
out
stc
mov
push
cmp
enter
mov
loope
movs
cmc
dec
loope
jl
sbb
movs
in
imul
ds
lods
fidivr
aas
jge
(bad)
mov
jae
daa
rcr
jns
fs
and
lahf
and
cmps
pushf
(bad)
adc
inc
stc
shl
mov
dec
dec
fs
xlat
fild
(bad)
fnsave
jb
inc
mov
dec
mov
xchg
push
aam
cs
adc
sbb
call
icebp
pop
add
xor
lock
fwait
int
ret
inc
add
jmp
rol
mov
or
repnz
into
ror
mov
dec
dec
pushf
xor
sbb
or
jl
pop
sbb
sbb
and
or
push
add
fsubr
mov
or
loop
inc
ja
or
idiv
jns
mov
xlat
dec
and
(bad)
aas
push
xchg
push
push
outs
push
into
or
mov
mov
out
je
jmp
and
dec
or
(bad)
leave
or
inc
daa
push
fs
int
adc
pop
stos
cli
jbe
inc
mov
dec
and
mov
jmp
retf
test
icebp
xor
add
jmp
pusha
mov
jl
inc
outs
mov
add
xchg
in
js
pop
aas
sbb
dec
pop
mov
xor
push
loope
loopne
je
mov
cld
or
aam
lds
dec
in
push
cwde
hlt
call
call
pop
std
int
add
hlt
xchg
push
daa
retf
pop
cmp
push
xchg
or
and
dec
and
shr
daa
outs
stos
ret
scas
rol
mov
or
retf
pop
rcl
aad
xchg
ja
fdiv
aaa
ffreep
push
lods
ficomp
mov
out
rol
in
dec
ss
or
xor
add
mov
(bad)
jle
(bad)
hlt
mov
pop
call
test
call
inc
mov
sub
and
pop
sub
mov
(bad)
(bad)
aaa
mov
fidiv
inc
shl
inc
sbb
add
xor
aam
popf
cmp
pop
bound
sub
shr
fs
xchg
and
test
lods
adc
daa
xchg
inc
jb
hlt
sub
(bad)
(bad)
repnz
addr16
pushf
stos
jnp
sbb
dec
dec
xor
repnz
sub
in
add
xchg
aam
push
xchg
repz
cmp
sbb
xlat
fwait
jp
aas
mov
das
cmps
jle
jae
test
adc
mov
mov
mov
(bad)
pop
dec
out
ins
repz
xchg
aaa
retf
push
jle
inc
popf
int
mov
and
retf
les
dec
and
inc
adc
and
dec
mov
ss
mov
pop
test
mov
xchg
sbb
sbb
cs
mov
xchg
xlat
pop
mov
call
jbe
or
push
add
mov
push
dec
test
adc
ins
pop
adc
(bad)
shl
ja
sbb
add
sar
cli
mov
adc
or
into
rol
sar
adc
push
repnz
add
mov
ret
pop
push
push
mov
jnp
and
cli
pop
fwait
aam
js
inc
rcl
cmps
mov
rol
dec
jmp
int
ret
xor
mov
nop
push
rcl
dec
rol
push
fsub
out
cld
sub
call
sahf
test
mov
cmps
cmp
cs
sbb
imul
iret
repnz
adc
pop
mov
adc
in
xor
mov
out
add
(bad)
lock
aaa
mov
xor
adc
lds
xor
test
inc
mov
iret
dec
lods
cmp
cwde
push
jo
sub
pop
fwait
cli
pop
ret
fisubr
out
in
(bad)
or
add
test
push
hlt
and
out
xor
inc
jmp
fcomp
jae
adc
cld
mov
sub
pop
sub
mov
add
cmp
daa
jae
xor
xchg
out
sub
arpl
sub
call
dec
dec
sub
push
or
dec
pop
lods
sbb
jmp
pf2iw
test
xchg
shr
add
sub
or
jns
mov
and
leave
fimul
pop
pop
pop
bound
sbb
pop
icebp
adc
icebp
icebp
lea
or
xor
pop
rcl
(bad)
nop
(bad)
fcomp
int
movs
and
es
lods
push
sub
int
jl
pop
mov
inc
mov
or
call
push
ss
shl
(bad)
sti
mov
fidivr
push
jne
push
xlat
pusha
aas
push
lea
xchg
or
pusha
jbe
movs
add
and
dec
cmps
cmp
test
(bad)
mov
(bad)
fwait
push
xchg
mov
loopne
and
aad
std
sub
std
out
inc
pop
(bad)
cmp
push
xor
xor
int3
xor
xchg
xor
jle
push
call
xor
rcl
cli
mov
mov
arpl
dec
bound
stos
scas
jns
mov
sbb
imul
xchg
rcr
and
jg
je
adc
test
les
mov
out
(bad)
push
push
jmp
fcmovne
js
or
ins
or
and
movhps
out
adc
cmp
push
dec
add
bswap
fstp
imul
and
cmp
xchg
lods
out
jbe
test
add
or
jne
popf
ins
cli
mov
outs
xor
mov
in
pop
pop
lahf
or
cmps
push
std
or
das
cdq
(bad)
(bad)
sar
push
iret
movs
lahf
inc
jae
lahf
dec
js
xchg
popa
mov
je
or
mov
addr16
ret
push
cmps
fnsave
stc
push
leave
call
mov
out
jno
mov
jbe
pop
push
out
mov
cmps
(bad)
or
into
(bad)
fwait
mov
lahf
adc
push
add
jne
xlat
pop
mov
xchg
xchg
push
jns
aad
movs
call
out
cmp
daa
adc
xchg
ret
dec
adc
jnp
fist
not
push
pop
inc
fwait
stos
push
fist
aas
int3
movs
arpl
push
mov
ds
jne
xchg
jmp
push
xor
(bad)
mov
fidiv
mov
or
lds
pop
adc
xor
mov
sub
out
inc
and
fst
pop
call
jp
add
dec
cmp
jnp
xor
jmp
pop
je
fwait
inc
add
dec
data16
cmp
je
and
xor
je
mov
dec
es
jle
push
sti
je
push
pop
mov
jle
popf
mov
pop
test
xor
xchg
(bad)
out
mov
or
movs
rcl
cwde
out
sti
fwait
or
mov
cmp
add
lds
not
xlat
or
(bad)
arpl
mov
das
scas
enter
cld
jo
xor
xlat
(bad)
test
cmp
add
outs
jl
mov
cld
xor
sbb
push
jne
(bad)
push
cld
push
mov
and
in
test
pop
mov
add
test
loopne
sub
push
call
enter
scas
repz
pop
xlat
daa
mov
sub
xchg
jb
lods
push
jle
pop
ss
shl
(bad)
fnstsw
xchg
out
or
popa
test
retf
std
xchg
push
dec
imul
sub
cs
or
or
push
mov
scas
call
mov
stc
test
movs
mov
cmps
add
or
dec
imul
or
pop
popf
stos
mov
out
(bad)
jmp
loopne
test
out
es
or
mov
mov
add
test
fdivr
cmp
sti
inc
outs
xor
inc
push
jnp
cwde
dec
movs
es
cmp
in
pop
pusha
(bad)
in
xor
retf
inc
out
mov
imul
cmp
cmp
mov
or
jno
iret
sub
(bad)
fadd
imul
mov
xor
loope
cli
movs
sar
or
dec
popa
and
repz
pop
pop
repz
outs
xchg
shl
idiv
jle
add
mov
adc
cmp
push
push
fs
loop
repnz
gs
mov
outs
dec
in
addr16
cmp
jmp
adc
out
mov
cmps
gs
ins
push
fdivr
sbb
inc
(bad)
cli
aas
pop
and
xchg
dec
xchg
frstor
fdivp
mov
stos
jle
mov
hlt
popf
repnz
mov
dec
call
sub
clc
pop
sbb
test
mov
mov
pusha
mov
imul
sbb
add
fstp
push
lods
sub
scas
cli
xchg
push
lods
or
stos
ret
paddusw
gs
or
mov
xchg
sub
push
(bad)
loopne
and
sar
mov
aam
inc
jmp
mov
push
inc
sub
hlt
lods
push
fcom
add
sub
mov
jmp
fbld
fidivr
add
jecxz
mov
int3
mov
je
sbb
jge
sbb
or
or
sahf
add
int
repz
jecxz
adc
dec
fisub
rcr
xchg
xchg
mov
sbb
stc
xor
adc
ret
dec
push
cmp
lods
out
or
pop
pop
sub
ror
addr16
aad
int
(bad)
or
xchg
test
mov
jb
in
xchg
mov
ins
retf
cmc
pop
not
nop
dec
jns
xchg
xor
loope
add
lods
into
xchg
into
jmp
jbe
std
push
test
stc
int3
sub
nop
shl
stc
in
xlat
ret
push
or
pop
das
(bad)
in
dec
and
add
inc
xchg
sti
push
jecxz
das
xchg
inc
test
stos
mov
sti
mov
inc
pusha
fldlg2
mov
outs
and
jns
retf
arpl
jae
jge
sub
or
arpl
pop
inc
and
inc
imul
push
out
xchg
mov
arpl
or
in
ret
fidivr
pop
lods
adc
mov
dec
fcomip
cmp
xchg
jne
scas
dec
leave
inc
or
ja
sbb
dec
std
sbb
push
push
test
and
lea
adc
imul
jecxz
shr
xor
push
push
mov
into
mov
jmp
xchg
rcl
mov
add
test
jp
das
pop
fld
retf
adc
cmps
sub
sub
sbb
xchg
daa
inc
sub
test
cmp
aas
or
inc
mov
sbb
adc
out
loopne
mov
adc
xor
mov
add
leave
ret
sti
mov
and
mov
cs
nop
pusha
das
adc
std
outs
(bad)
dec
pusha
mov
inc
loopne
lods
stc
clc
push
push
pop
push
stc
ja
neg
jae
vunpcklps
or
jl
(bad)
adc
xor
scas
pushf
xchg
retf
jl
ret
aam
fstp
test
bound
mov
dec
dec
add
gs
fwait
std
pushf
xor
rol
and
(bad)
jp
xadd
inc
add
fcomp
add
sbb
pop
bound
nop
ret
daa
inc
mov
int
pop
xor
mov
dec
or
adc
push
cmps
adc
arpl
lock
push
(bad)
inc
sti
in
inc
cmp
mov
inc
dec
mov
cmps
repnz
add
mov
and
enter
je
xor
stos
mov
cld
inc
inc
pop
retf
imul
and
inc
mov
sub
add
fidivr
bound
loopne
aas
lds
xor
sbb
jmp
mov
xchg
add
fadd
mov
fisub
ins
out
pop
jbe
push
xchg
dec
popa
cmp
push
aam
and
call
pop
int
sbb
mul
inc
cmps
je
sub
mov
dec
mov
mov
ins
mov
inc
inc
popf
out
scas
push
aaa
jb
push
arpl
fsub
loopne
mov
sub
pop
enter
jl
retf
call
adc
aaa
or
loop
and
shr
cmp
test
xchg
mov
(bad)
jmp
jg
jo
out
fidiv
add
xchg
inc
adc
lea
mov
sahf
iret
xor
or
loopne
mov
xor
data16
xor
sbb
and
jbe
dec
sub
call
xlat
aad
xchg
adc
push
adc
not
sub
sbb
fsubr
push
(bad)
out
stos
sbb
or
xchg
dec
jle
or
inc
rcl
dec
nop
repnz
lods
repz
xchg
jns
sub
(bad)
mov
xchg
pop
mov
jno
xor
movs
jmp
xor
sub
cmps
in
call
mov
lock
(bad)
sbb
lods
pop
jmp
fsubr
into
inc
test
mov
push
xlat
call
pop
add
repz
mov
dec
cmp
mov
cmp
scas
adc
(bad)
scas
scas
add
pop
and
popf
div
pop
loop
add
sbb
push
push
leave
inc
push
sub
dec
push
scas
and
mov
xchg
lods
imul
aad
ja
aam
add
sub
repnz
stc
or
sahf
jb
xchg
mov
sbb
cs
mov
cmp
push
std
cmc
fld
fnstcw
adc
mov
sbb
xor
jmp
sub
movs
xchg
outs
xor
cli
dec
adc
inc
int
and
or
scas
test
leave
dec
cmp
call
push
mov
push
jbe
mov
jge
mov
dec
push
xor
aam
ret
jle
jno
retf
adc
push
lods
fadd
and
outs
sbb
scas
mov
and
add
lock
xor
mov
fist
sbb
ss
jle
jnp
xor
lods
mov
imul
pusha
(bad)
pop
push
or
jae
dec
into
outs
or
sbb
xchg
jmp
and
repnz
lock
add
outs
das
dec
cwde
inc
mov
push
and
jno
mov
int3
arpl
lods
push
add
scas
loope
sbb
xlat
xchg
push
retf
mov
int3
in
jmp
repz
jo
xor
aaa
push
mov
sbb
mov
fdivrp
daa
arpl
inc
ss
(bad)
lds
repz
lahf
mov
retf
in
cmp
(bad)
or
ucomiss
stc
idiv
daa
push
sub
jbe
rcr
fist
mov
mov
inc
pop
leave
ret
retf
mov
movs
(bad)
iret
loope
sub
icebp
(bad)
pop
icebp
data16
and
call
dec
add
pop
jno
out
jp
mov
pop
popf
and
lahf
in
dec
fst
fwait
or
adc
jne
cmp
movs
pop
(bad)
repnz
call
in
imul
sub
cli
mov
mov
mov
lods
sbb
mov
fwait
push
xor
pop
xor
inc
jne
pop
test
rol
into
shl
ret
add
bound
es
fwait
enter
ret
sub
xor
cmp
popa
and
inc
mov
or
enter
push
mov
(bad)
stc
fwait
or
(bad)
inc
ficom
inc
jmp
mov
cli
iret
and
sub
add
sbb
(bad)
daa
les
stos
mov
add
inc
cmp
push
outs
or
popf
sbb
jg
and
or
stc
mov
(bad)
xor
and
and
iret
xor
push
and
sub
arpl
cmc
scas
sub
cli
push
(bad)
adc
rcl
dec
cmps
bound
xchg
xchg
test
adc
cmp
sub
stos
dec
pop
(bad)
mov
pop
jno
fcomp
(bad)
push
fmul
hlt
mov
jbe
cdq
mov
jl
pop
rcr
and
or
mov
jne
add
mov
aas
inc
xchg
ins
in
stos
sbb
mov
in
adc
jl
adc
adc
test
popf
int3
shr
jb
sbb
pop
shl
mov
retf
ja
bound
pop
lds
push
cdq
dec
mov
or
mov
inc
popa
push
sub
dec
add
sbb
iret
cmp
out
retf
jb
in
or
cmps
xchg
dec
loope
repz
ja
fisubr
in
or
push
dec
loope
pop
mov
lods
loop
cmp
inc
xor
sbb
les
ret
xchg
adc
repnz
leave
and
jno
mov
call
mov
xor
je
dec
mov
sbb
sahf
jge
jmp
or
pop
aad
jne
pop
cmp
enter
(bad)
stos
jno
fs
dec
dec
sbb
cmp
push
pop
mov
jp
cmp
dec
xlat
retf
mov
popa
dec
out
push
idiv
out
or
frndint
lahf
std
test
dec
and
(bad)
out
pop
sbb
pop
adc
xchg
fisttp
and
sbb
fbld
pop
das
repz
je
mov
mov
xor
hlt
int
cld
iret
push
call
out
(bad)
adc
sub
nop
cmovno
sub
sahf
stc
icebp
(bad)
fild
ret
pop
push
pop
jbe
(bad)
xor
out
lods
pop
and
out
push
adc
div
or
inc
cmp
pop
int3
sar
jo
pusha
or
fiadd
cs
add
jbe
push
xchg
(bad)
and
and
popf
test
icebp
ret
xchg
xchg
lods
repz
sub
sub
jg
jne
xchg
ins
daa
add
mov
popf
pop
mov
mov
in
adc
outs
aas
pop
and
adc
jns
shr
cmp
xchg
mov
sub
cmp
les
mov
inc
cmc
push
int3
(bad)
jg
(bad)
nop
out
cmc
jg
push
sar
pop
popf
mov
xor
aad
fsub
xor
xchg
cmps
sar
dec
gs
push
xchg
leave
inc
leave
sbb
mov
stc
in
jl
test
inc
adc
mov
push
dec
mov
pop
out
and
aad
cwde
aad
mov
sub
rol
xchg
pushf
add
push
jp
mov
test
mov
push
pop
jmp
lds
inc
pop
pusha
push
cwde
add
retf
add
fsub
mov
outs
popa
inc
rcl
inc
or
cmps
mov
add
mov
xchg
clc
shl
test
pop
cmp
cmp
push
clc
es
fmul
stc
loope
setge
lock
cmp
(bad)
push
or
pop
sbb
iret
mov
dec
jecxz
out
lds
xlat
inc
add
adc
push
push
call
sub
adc
sti
cld
jns
cmp
mov
inc
sbb
cmp
sbb
repnz
xor
add
xor
mov
mov
jbe
add
test
loop
ja
loop
or
lahf
cmp
push
ds
lea
std
scas
fdivr
addr16
les
or
nop
sub
jo
mul
test
adc
mov
in
je
xor
or
fldenv
jmp
pop
(bad)
jmp
arpl
cwde
fsubr
iret
jo
inc
push
cmp
ins
push
add
mov
xchg
addr16
sbb
push
cmp
xchg
cmps
inc
imul
pop
fldcw
movs
jl
mov
test
or
mov
dec
clc
lahf
(bad)
xchg
fwait
mov
and
mov
fdivr
arpl
rol
ins
or
jns
mov
push
sbb
stc
or
ror
cld
or
xchg
mov
ins
and
dec
add
push
sti
push
nop
cmp
fsubr
sbb
imul
rcr
and
cmps
xor
xor
push
es
mov
inc
adc
add
cmp
adc
add
dec
sub
sub
aaa
cwde
push
lods
rcl
bound
and
mov
push
ds
push
inc
mov
nop
jb
scas
add
cmp
pop
xchg
mov
push
imul
sbb
jo
bound
sbb
lods
lods
xor
fwait
push
add
sbb
cmp
inc
sbb
inc
inc
ins
mov
inc
es
fbld
pop
pop
in
scas
inc
sbb
adc
jo
or
xchg
(bad)
loopne
retf
xchg
cld
icebp
cmp
mov
xlat
cs
les
repz
(bad)
cmp
lea
push
mov
cwde
fiadd
and
and
shl
ret
fisubr
push
fdiv
sti
fisub
cmps
inc
jbe
fadd
mov
popf
dec
pop
ja
jg
das
pop
sub
(bad)
out
int
rol
pop
outs
in
adc
ins
push
ins
lock
div
shr
sahf
and
push
xchg
mov
arpl
jns
add
aaa
aad
jae
mov
nop
xchg
cmps
or
adc
stos
adc
add
xchg
lea
(bad)
(bad)
(bad)
mov
xor
aam
inc
sbb
pop
sbb
push
repnz
mov
and
into
clc
sub
mov
sub
js
or
xchg
ins
cld
sti
mov
mov
mov
or
cmp
sub
dec
inc
into
or
ja
je
inc
repz
pop
cdq
cmp
in
adc
add
loop
push
call
fwait
xor
cmp
scas
jb
dec
sbb
movs
lods
sti
add
pop
sub
iret
cmp
cmp
adc
pop
xor
rcl
aaa
fidivr
mov
mov
test
adc
test
in
gs
fld
push
(bad)
xchg
mov
dec
xor
and
pop
(bad)
fadd
jp
test
je
outs
loop
sar
mov
test
mov
lahf
xor
shl
ins
(bad)
les
fwait
(bad)
sbb
jmp
dec
push
stos
(bad)
cmp
(bad)
xor
stos
rol
push
movs
stos
aam
repnz
jae
(bad)
test
imul
jl
adc
and
sbb
into
shr
fnstenv
jecxz
clc
into
ins
or
repnz
mov
das
mov
mov
cmps
movs
call
sbb
xchg
data16
inc
call
jle
lock
enter
mov
popa
ficom
sbb
arpl
push
mov
ds
and
push
mov
gs
sub
icebp
sbb
movs
test
shr
paddusw
xor
(bad)
in
(bad)
lds
scas
rcr
cmps
xor
add
xchg
sub
int3
dec
push
js
mov
ret
push
stos
xchg
jp
push
xor
cmp
shr
inc
xor
mov
(bad)
iret
(bad)
aaa
jne
xchg
arpl
cmp
inc
stos
xchg
jb
mov
loope
add
mov
ror
jmp
bound
ret
pop
dec
imul
push
popa
cld
and
movs
test
retf
jecxz
dec
cmp
je
cmc
or
ins
xor
lods
dec
inc
pop
pop
enter
lock
push
jns
movs
stos
fcomp
mov
test
in
pop
inc
pusha
(bad)
(bad)
adc
mov
aad
jo
int
adc
adc
mov
xor
sub
shr
mov
lahf
ds
mov
enter
(bad)
(bad)
jo
movs
dec
imul
push
or
aaa
sub
icebp
pop
imul
mov
inc
out
mov
add
jp
add
gs
sbb
les
bound
sar
call
mov
inc
into
rol
xchg
xor
dec
mov
and
adc
or
out
or
je
mov
inc
pop
pop
xchg
xor
push
in
jecxz
sar
adc
jae
cdq
in
mov
fimul
call
sub
enter
cwde
sbb
(bad)
int
into
push
mov
outs
dec
rcl
sbb
ret
push
dec
sbb
pop
cmp
sti
fisttp
pop
cmp
lea
dec
fs
rcr
add
stc
sbb
push
sbb
dec
or
jae
bound
popf
push
ror
xor
(bad)
in
jmp
mov
pop
ret
fistp
push
loop
in
aaa
cmp
aad
into
xchg
icebp
es
lds
int
push
jmp
gs
int
out
repz
xchg
outs
bnd
sti
mov
leave
sbb
jae
sbb
dec
cmps
pop
lds
or
leave
(bad)
in
sub
icebp
or
mov
mov
fmul
stos
icebp
and
pop
sbb
cmc
ss
adc
and
and
lea
daa
outs
scas
test
jmp
ja
jbe
and
fstp
ss
cli
push
stc
cli
jp
cmp
cmp
outs
mov
mov
inc
outs
out
inc
pop
fbld
jle
out
or
jmp
dec
test
mov
xor
icebp
and
call
mov
add
icebp
test
call
xchg
sahf
loope
sbb
xor
je
cmp
outs
jae
push
mov
ficom
ds
mov
mov
dec
aad
mov
or
enter
movs
stos
stos
in
test
pop
lahf
add
pop
outs
pop
test
dec
ret
sti
sub
add
sbb
push
mov
push
sbb
je
fisttp
sub
into
retf
fbld
sbb
fincstp
punpckldq
sub
cwde
sub
jmp
pop
movs
and
cli
iret
sbb
es
(bad)
lock
jne
in
inc
das
into
ffreep
cmp
inc
push
inc
cmp
cs
and
dec
popf
mov
outs
lahf
pop
xor
(bad)
stos
sbb
and
xchg
push
sbb
mov
retf
outs
sar
mov
adc
clc
sbb
movs
test
idiv
mov
(bad)
in
jno
push
mov
mov
mul
push
xor
repz
pop
add
add
jb
push
pop
xchg
es
or
std
es
pusha
and
xchg
int3
fdivr
dec
xchg
and
call
and
in
adc
fs
pop
sub
jbe
jae
cmp
out
sahf
push
pusha
int
cmp
dec
push
and
imul
loopne
push
push
into
sbb
push
sbb
(bad)
int3
add
fwait
cwde
lock
test
cmp
xchg
sub
aaa
mov
cmps
mov
cmp
mov
fisttp
out
mov
inc
daa
dec
dec
dec
cmp
idiv
fldcw
inc
push
cmp
scas
add
dec
adc
pop
mov
xchg
test
push
fwait
jo
mov
mov
fmulp
xchg
scas
pop
out
int3
cmp
mov
push
xor
jl
call
inc
jecxz
mov
jbe
push
jnp
jl
cmp
jmp
sub
outs
jbe
cs
cmps
(bad)
inc
xor
push
mov
idiv
mov
inc
or
les
data16
or
push
out
pop
in
ds
mov
adc
xchg
cmp
adc
jmp
aad
or
jbe
add
not
xor
mov
js
mov
or
inc
out
adc
div
inc
shl
adc
mov
pop
mov
ss
shl
or
mov
lock
aas
dec
cwde
dec
mov
mov
mov
xchg
imul
fisub
pop
stos
adc
jge
sbb
inc
shl
dec
xor
(bad)
fisttp
popf
cdq
inc
mov
out
mov
ret
mov
ss
jno
mov
adc
adc
addr16
add
fwait
or
mov
dec
push
icebp
mov
ret
(bad)
push
adc
shl
in
shr
add
mov
fadd
cmp
mov
jmp
mov
or
jmp
stos
cmp
sub
add
mov
shr
mov
push
add
and
std
cmovnp
push
div
xor
mov
(bad)
jmp
cmp
clc
add
lods
fdivr
nop
popa
sbb
and
hlt
dec
je
mov
and
mov
shl
fcom
push
gs
aaa
jns
jno
dec
imul
mov
jcxz
lds
pusha
push
xor
dec
mov
test
cmps
mov
xor
add
xor
ins
pop
ins
stos
dec
ror
into
pop
sbb
xor
jg
lahf
lods
pop
xor
mov
movs
adc
cld
inc
loopne
or
ror
pop
xor
fnstenv
dec
mov
ret
lods
pop
push
mov
fwait
into
imul
aad
and
int
fbstp
cmps
and
imul
sub
call
out
jcxz
xor
ret
enter
xchg
add
(bad)
and
retf
mov
push
sbb
sub
(bad)
push
cwde
call
retf
pop
in
js
mov
aam
cmp
outs
jbe
mov
fwait
stos
in
xor
xchg
pusha
test
pop
push
xor
mov
jnp
lods
ins
jno
(bad)
inc
add
xchg
push
cwde
imul
pop
aaa
ss
pop
test
mov
jl
(bad)
mov
cmps
pop
mov
xchg
inc
loope
mov
push
stos
jecxz
pop
ud2
repz
repnz
js
jecxz
movs
mov
nop
sub
mul
xor
lahf
(bad)
(bad)
js
loopne
xchg
add
jno
mov
pop
push
xchg
xchg
inc
dec
sbb
test
test
xchg
mov
mov
jecxz
push
popf
ins
xchg
add
out
sti
add
es
sub
cmp
cdq
mov
push
mov
aas
jge
xor
das
rcr
aad
and
sar
(bad)
aam
xchg
inc
jecxz
icebp
add
cwde
mov
pushf
cs
xchg
dec
lahf
leave
jp
pop
in
retf
mov
or
pusha
loopne
jne
int3
adc
pop
pop
in
cmp
loop
dec
mov
les
jecxz
xor
jge
test
nop
mov
ins
jmp
call
bound
or
adc
or
neg
xchg
jbe
repz
mov
mov
aas
sbb
mov
sub
cli
dec
(bad)
dec
pop
ret
adc
movs
leave
aam
inc
icebp
mov
push
movs
std
mov
(bad)
pop
je
call
inc
icebp
xor
jle
cli
ins
test
outs
mov
nop
retf
cdq
movs
fcmovu
jmp
and
sbb
repz
das
mov
aas
stos
fnstsw
xchg
jecxz
sub
(bad)
daa
add
push
in
push
push
mov
pop
imul
and
(bad)
mov
daa
les
icebp
out
popf
push
call
popa
dec
loop
retf
shr
int3
lahf
mov
in
test
pop
push
jne
inc
scas
add
jge
sub
adc
xor
add
push
cmps
inc
xchg
dec
aaa
mov
inc
and
or
push
fcmovu
dec
iret
sbb
and
mov
popa
jne
add
mov
sbb
cmp
imul
add
das
jmp
mov
pop
xchg
out
add
shl
adc
loopne
jp
(bad)
pusha
fcmove
or
pop
ss
jo
test
xchg
mov
or
jl
fs
pop
xchg
repz
stc
mov
data16
int
aam
stos
pop
or
push
and
pop
aad
imul
push
fwait
(bad)
add
jb
aaa
ss
icebp
in
fdiv
jbe
fisttp
mov
ins
addr16
arpl
jmp
fdivr
fnsavew
dec
mov
out
int
xchg
mov
mov
std
sar
add
call
and
ds
pushf
(bad)
mov
mov
adc
icebp
mov
aas
aaa
int3
ret
aad
ins
cmp
lock
xor
arpl
popa
jno
lds
add
ret
iret
push
ins
inc
adc
and
dec
in
and
or
ss
daa
mov
out
jae
cmp
mov
mov
out
pop
inc
and
pop
sub
lods
xor
add
enter
repnz
inc
imul
push
loopne
sti
popa
and
inc
pop
dec
dec
xchg
pop
sbb
mov
dec
scas
cmp
pop
sbb
mov
sti
dec
ss
mov
int
push
mov
pop
dec
add
inc
shl
call
xor
fcom
nop
repnz
(bad)
outs
pop
and
imul
lods
enter
dec
cmps
pop
add
inc
mov
jp
push
inc
cld
movs
aad
or
sub
xor
jg
or
iret
ja
adc
mov
or
cmps
cmp
mov
adc
push
enter
stc
lock
cmp
gs
sbb
pop
vmovntdq
ret
mov
mov
fcmovne
aad
sub
push
sar
movs
mul
sbb
or
stc
(bad)
cmc
xchg
push
and
call
icebp
and
adc
fdivr
cmp
mov
push
inc
mov
or
pop
inc
sbb
enter
js
jb
mov
retf
out
cs
ret
cmps
push
loope
mov
sbb
and
lock
test
xlat
dec
pop
mov
mov
push
loope
repnz
push
es
mov
mov
daa
inc
dec
pushf
pop
lods
lock
xchg
mov
bound
mov
fisub
fs
xchg
cmp
aam
clc
movs
jg
into
pop
(bad)
in
movs
hlt
ret
out
js
jmp
lea
mov
into
and
(bad)
fcmovnbe
jae
dec
repnz
adc
mov
aaa
dec
xchg
mov
xchg
mov
or
popa
or
mov
xchg
aas
rcr
imul
out
or
popa
mov
enter
xchg
je
inc
pop
dec
and
aad
test
test
adc
cmps
mov
xor
mov
jle
mov
pop
sub
aad
pop
adc
fmul
xchg
dec
data16
int3
int
sar
daa
xor
mov
xchg
in
mov
xor
arpl
push
lods
into
stos
sti
mov
xor
cli
pop
in
xor
and
mov
sub
mov
xor
mov
stc
(bad)
mov
xchg
rcr
call
cmp
pop
frstor
xchg
shl
pop
mov
sub
out
int3
retf
icebp
add
or
mov
out
jmp
neg
jae
enter
ss
add
scas
enter
and
les
jp
fst
mov
imul
sar
addr16
or
pop
mov
pushf
ret
pop
shl
js
std
nop
stos
cmp
pop
add
pop
mov
or
pop
fsubr
add
fcomp
or
pop
jecxz
addr16
add
adc
iret
out
or
loopne
arpl
dec
mov
jb
into
int
jp
mov
xor
rcr
ja
cmp
cmc
pop
(bad)
test
aaa
adc
mov
push
outs
and
std
fstp
bnd
push
bnd
int
mov
or
icebp
inc
in
mov
jns
add
lods
jmp
popf
cs
and
and
and
jecxz
repz
inc
ins
dec
mov
jnp
popa
pop
in
xor
cmps
mov
push
repnz
in
ret
push
push
or
sbb
pop
mov
adc
pop
rol
lods
cmc
sbb
cmp
lods
dec
test
push
addr16
(bad)
out
push
dec
inc
test
mov
jns
stc
and
xor
mov
std
mov
jmp
sbb
push
in
cld
movs
in
or
stc
test
or
or
lods
iret
pop
sahf
xor
cs
fdivr
adc
sub
bound
pop
push
mov
cs
jmp
in
lahf
add
jns
icebp
fimul
mov
xor
aaa
pop
inc
out
sbb
jmp
sub
cmp
mov
xor
inc
mov
(bad)
adc
retf
ja
loope
scas
pop
push
jnp
sbb
fdiv
imul
and
dec
cmp
je
leave
aad
mov
divps
jnp
dec
les
stc
dec
sub
sbb
jnp
fwait
or
pop
mov
sub
jmp
push
push
stos
int
aaa
pop
mov
loope
aas
cmc
sub
or
adc
sub
aad
(bad)
fimul
mov
jo
pop
cmp
adc
test
imul
pop
sahf
(bad)
or
retf
(bad)
sbb
test
lods
lea
pop
inc
call
pop
mov
cmc
or
push
xchg
xor
cmc
in
push
jo
push
jl
mov
add
mov
push
imul
add
mov
push
mov
xchg
fild
in
out
and
ret
mov
mov
ins
mov
jp
(bad)
dec
add
jmp
cmps
sti
ret
gs
daa
xchg
ja
or
loop
xor
imul
fwait
jmp
(bad)
sbb
add
dec
popa
and
das
scas
cld
jno
pop
push
push
daa
and
clc
outs
pushf
les
(bad)
pop
jle
inc
test
dec
js
mov
test
mov
push
xor
aas
mov
rol
sbb
adc
test
ret
mov
jb
push
jns
aad
mov
dec
sbb
mov
call
fs
cmp
jg
or
retf
sbb
and
inc
add
sbb
out
mov
mov
mov
jns
inc
mov
xchg
aam
test
xor
mov
cwde
cmps
imul
stc
and
pop
int
mov
sub
(bad)
pushf
loopne
pop
inc
pop
jp
cmovbe
ret
ins
movs
rcr
lea
fbld
fwait
mov
test
mov
loopne
enter
sub
neg
into
dec
jb
ret
mov
inc
fs
dec
ficomp
pop
lahf
sub
fild
sysexit
dec
test
shl
and
mov
push
(bad)
jmp
mov
repz
add
mov
jne
mov
retf
sub
fist
(bad)
xchg
aam
push
cmp
lock
shl
sbb
outs
enter
add
or
lahf
pop
xchg
mov
ret
fwait
pusha
push
inc
mov
add
popa
and
jmp
xchg
gs
rcl
pop
fisttp
mov
js
add
gs
rcr
in
cmp
das
xor
adc
xor
pop
inc
mov
inc
fiadd
and
out
mov
addr16
pusha
les
fidivr
pop
dec
or
jle
jle
aaa
neg
fistp
test
data16
aam
cmp
data16
sti
dec
pop
shl
lahf
xchg
pushf
lahf
ins
sti
mov
dec
fwait
inc
rol
lock
push
mov
xchg
popf
scas
sahf
inc
das
popf
pop
test
sar
pop
dec
ror
mov
sbb
mov
fs
xchg
fsubr
into
(bad)
xchg
call
jnp
in
mov
adc
lods
fsin
sbb
fucomi
jl
cmp
add
mov
mov
shl
cmps
jl
jp
pop
cmp
cmps
sub
out
push
retf
std
dec
iret
cmps
data16
ins
inc
pushf
mov
adc
sbb
je
pop
push
mov
jmp
sbb
lahf
jo
sbb
xchg
rcr
mov
cwde
inc
push
movs
imul
dec
jmp
xlat
std
adc
inc
aam
push
push
fs
in
inc
xchg
mov
xchg
push
cwde
lock
test
jmp
pop
sbb
inc
push
out
xor
inc
daa
pusha
push
daa
js
bound
cmp
stos
in
loopne
ret
rol
es
push
cmp
mov
repz
jg
mov
pop
jg
ss
mov
call
pop
push
lds
mov
imul
fld
mov
xchg
shl
daa
enter
or
je
(bad)
jb
inc
imul
add
sbb
or
inc
lea
sahf
add
das
(bad)
fcom
sub
inc
dec
mov
inc
inc
pop
pop
mov
xchg
mov
imul
ss
jno
mov
xchg
pusha
(bad)
scas
test
aam
jns
mov
inc
jle
(bad)
out
mov
add
ja
jbe
ror
sbb
or
ror
ins
jge
xlat
in
or
xchg
aam
test
fimul
xchg
inc
pop
inc
fimul
dec
lahf
xor
das
xchg
in
repnz
into
push
jmp
mov
and
xchg
sub
inc
sub
inc
mov
sub
mov
jae
pop
jbe
fidivr
sbb
sub
les
and
out
add
mov
dec
test
or
mov
sub
inc
xchg
test
sbb
scas
mov
nop
sub
fist
adc
mov
(bad)
test
cmps
xchg
pop
std
push
outs
cmp
retf
add
push
aaa
inc
ficomp
int3
call
xchg
in
and
pop
mov
in
sbb
addr16
shl
out
fs
xor
jmp
inc
fcmovnb
sub
sub
test
out
imul
hlt
push
mov
(bad)
or
xchg
push
bound
xor
cdq
push
hlt
cwde
sub
inc
test
pop
push
xor
outs
cmps
inc
jb
js
sbb
loope
les
enter
pop
xor
daa
into
lock
psllw
ins
and
adc
(bad)
cmp
shr
sbb
inc
retf
push
into
xor
jae
lods
(bad)
int3
pop
shl
test
xor
in
mov
xchg
fsubr
push
pusha
fsubr
mov
inc
jmp
push
fadd
dec
or
ror
iret
data16
or
loopne
cli
sti
stos
cmp
out
rcr
adc
fwait
lods
sar
clc
adc
stos
test
ss
int3
dec
mov
(bad)
(bad)
ror
and
and
js
mov
mov
pop
ret
inc
xor
dec
jmp
movs
mov
fistp
iret
adc
mov
pop
cs
xchg
push
ins
and
xchg
imul
mov
fisttp
test
cmova
clc
mov
inc
jne
inc
int
mov
call
imul
sbb
or
gs
call
inc
inc
inc
shl
mov
test
ficomp
int
(bad)
mov
sti
push
int
pop
les
test
fcom
xor
dec
mov
xor
fnsave
hlt
mov
mov
les
xchg
bound
out
dec
cmp
xor
or
mov
cli
inc
mov
popf
or
or
sub
enter
sub
movs
les
cmc
rcl
mov
jl
mov
mov
push
imul
loope
loop
out
inc
jno
pop
lods
ss
add
das
loop
fs
xor
das
xchg
and
xchg
push
mov
imul
xchg
pop
leave
mov
mov
push
(bad)
sbb
out
aaa
mov
sub
in
jg
(bad)
push
pushf
add
lods
fiadd
dec
sbb
dec
loopne
jg
sbb
add
enter
popf
pop
test
pop
jecxz
ds
imul
sar
and
ror
xchg
sbb
mov
call
mov
ror
jmp
out
imul
dec
sub
arpl
jle
int
push
xchg
fadd
stos
jecxz
cmp
push
out
jae
cli
mov
cmp
daa
std
mov
cmp
dec
and
or
adc
push
adc
add
jle
icebp
pop
push
movs
jne
(bad)
mov
xchg
sub
inc
cld
int
and
inc
cs
pop
int
imul
pop
push
fsub
movs
mov
test
int
nop
pop
enter
xchg
mov
mov
or
int3
cwde
jns
aad
loope
imul
adc
out
mov
sar
mov
std
inc
add
push
out
mov
xor
jns
xor
rcr
jmp
in
sbb
int
mov
popf
mov
sar
xlat
pop
or
(bad)
fcmovbe
les
loopne
mov
retf
shl
das
ss
mov
xchg
jl
cmp
test
icebp
arpl
pop
sbb
cmps
cmp
and
push
ja
mov
cmp
(bad)
das
jns
mov
sbb
pop
aas
inc
add
popa
jecxz
xchg
int3
xchg
mov
(bad)
mov
gs
(bad)
test
push
adc
popa
das
int3
mov
imul
lods
stos
test
push
dec
xchg
adc
fst
pop
test
sub
cmc
in
inc
adc
and
lock
or
dec
mov
xchg
and
adc
cmc
adc
jmp
in
pop
cwde
out
mov
mov
lods
add
or
out
adc
lods
jb
push
lock
test
ins
ins
add
lock
add
or
push
jbe
rol
or
xchg
(bad)
scas
(bad)
mov
xor
push
(bad)
cmp
(bad)
mov
inc
or
sub
shr
data16
jmp
rol
js
push
aam
sub
mov
out
push
xchg
adc
push
mov
or
adc
sub
into
stos
test
ret
adc
clc
adc
ret
sbb
sbb
cli
inc
jp
cmp
mov
sahf
rcl
xor
jp
inc
cmp
pop
mov
dec
mov
add
lahf
sub
retf
pop
aaa
lods
bnd
(bad)
aad
add
xor
arpl
and
jno
std
push
sub
sub
xchg
in
dec
push
jmp
push
test
loope
push
or
jae
jne
pusha
cdq
repz
mov
cmp
mov
add
test
test
mov
ret
pop
in
mov
adc
adc
loopne
bound
pop
push
sub
add
rcl
xor
ins
jbe
int
mov
inc
jge
xor
aam
xchg
cli
inc
xor
out
inc
aad
pop
lahf
push
out
xchg
and
xchg
cmp
or
cmp
ret
inc
fwait
in
js
hlt
dec
hlt
xchg
cdq
sbb
data16
mov
fdivr
sbb
test
sub
mov
neg
ret
push
std
xchg
int
adc
push
inc
retf
je
test
fstp
repnz
sub
repnz
fwait
out
das
sbb
adc
pop
ret
pushf
dec
sub
xor
rcr
or
xor
ins
pop
ret
push
add
mov
int3
mov
(bad)
jbe
mov
mov
fwait
mov
jl
stos
push
jno
xchg
test
pop
neg
hlt
or
loopne
scas
push
(bad)
adc
in
push
icebp
pusha
or
popa
mov
inc
push
mov
push
das
sub
inc
jg
xor
pop
add
out
inc
out
sbb
mov
mov
jb
cld
xchg
fadd
dec
imul
mov
cmp
xchg
cmp
pop
imul
sub
ds
call
ins
(bad)
jnp
loop
xor
jbe
push
call
inc
ins
ins
neg
aam
movs
sbb
inc
mov
ins
mov
repnz
inc
jg
stos
retf
or
mov
pop
mov
sti
in
movs
outs
jnp
mov
stos
mov
ror
jne
and
add
sti
arpl
cs
test
cmp
pop
xor
fimul
enter
in
and
dec
test
scas
out
fstp
adc
pop
push
inc
in
leave
mov
cmp
shrd
pop
jl
es
(bad)
in
mov
mov
test
mov
addr16
push
xchg
mov
jno
xchg
pop
test
shr
call
jmp
inc
mov
pop
cmp
arpl
or
jne
cmps
mov
pusha
ret
cli
xor
imul
enter
call
add
shl
sub
loope
mul
test
dec
dec
xor
add
mov
test
and
jp
or
push
jno
cmp
dec
sbb
fcomip
fadd
popf
out
mov
sbb
aas
jbe
mov
in
add
movups
push
push
xlat
cmc
nop
test
test
mov
nop
nop
sbb
xchg
mov
into
cmps
in
mov
inc
jle
ror
sub
adc
dec
push
inc
push
sub
repz
sbb
push
sbb
jne
pop
mov
cmp
cdq
sbb
cdq
push
sub
push
aaa
test
fld
leave
iret
(bad)
into
sub
mov
stos
ins
pop
sbb
imul
pop
pop
bound
jnp
mov
out
jbe
test
xchg
lds
sub
out
add
pop
xlat
push
sub
mov
dec
cmc
(bad)
lock
pop
in
repz
dec
sbb
outs
jmp
mov
(bad)
cs
test
sbb
pop
mov
push
add
aad
push
in
jmp
cdq
inc
sub
outs
sub
(bad)
inc
and
jecxz
push
cmp
mov
mov
mov
adc
cs
(bad)
js
jge
popf
fsub
arpl
xor
dec
rcr
or
fs
jg
lea
sbb
cmps
cmp
fwait
jp
mov
push
cwde
scas
xchg
mov
pushf
das
pop
imul
pop
cmps
pop
pop
sahf
or
int
mov
cmp
adc
push
mov
rcl
dec
and
sbb
shl
(bad)
fsubr
mov
ins
out
dec
out
pop
clc
add
call
fsubp
ins
and
loopne
hlt
jecxz
add
ds
int
mov
pop
cs
inc
out
cmp
or
add
iret
cmp
jnp
cmp
into
jae
inc
pushf
lock
pop
sub
aad
bound
and
retf
(bad)
imul
daa
adc
retf
das
jp
fist
sub
mov
adc
fnsave
push
and
test
dec
and
and
rcl
mov
cmps
aas
pusha
adc
dec
pop
data16
sub
ja
dec
jns
jne
mov
aam
mov
loope
imul
fdivr
stos
not
push
xchg
cs
mov
mov
xchg
adc
int
add
ret
and
lahf
sub
inc
mov
jecxz
daa
sbb
push
push
loope
dec
xchg
mov
dec
and
add
and
dec
aaa
daa
jmp
aad
es
mov
pop
xchg
bnd
call
movs
shl
out
aad
xor
rcl
xchg
outs
adc
lahf
mov
sahf
jp
daa
lahf
sub
fsub
mov
mov
loopne
push
cmps
or
retf
repnz
dec
jle
cld
sub
pop
xor
push
push
sub
sahf
mul
add
lods
sub
popa
cdq
xchg
push
jno
icebp
inc
inc
mov
jge
xor
or
and
mov
arpl
cmp
xchg
jne
fdivr
add
loope
out
xor
cmps
dec
neg
rcl
test
(bad)
xchg
cmp
jg
push
cwde
stos
fidiv
outs
inc
pop
in
add
xchg
inc
sub
push
pop
or
sbb
(bad)
mov
adc
adc
xchg
jmp
jnp
add
nop
push
jmp
push
mov
jb
arpl
pushf
in
lods
mov
xor
out
adc
test
xchg
cmp
inc
test
icebp
inc
call
mov
mov
sti
fld
adc
dec
repnz
sbb
jle
mov
mov
stos
arpl
xchg
xchg
test
dec
mov
out
sbb
adc
cmp
enter
pop
imul
out
pop
cmp
dec
out
push
je
pop
loopne
mov
popa
out
and
jb
adc
fild
es
cmp
movs
test
cmc
mov
fldcw
(bad)
mov
shr
push
lock
test
jg
out
enter
jae
pop
or
cs
arpl
dec
mov
std
pusha
xlat
mov
jp
jnp
sbb
and
mov
div
gs
mov
or
ror
jp
psubsw
jle
mov
mov
jmp
mov
mov
add
sbb
inc
clc
lods
mov
cmp
arpl
test
int3
fild
and
cmp
mov
int
mov
cdq
sbb
xor
loope
inc
cmp
push
(bad)
ror
mov
add
pop
ins
data16
adc
push
and
movs
sbb
js
ins
mov
cmp
ins
pop
and
aas
and
dec
and
aaa
jmp
ficomp
mov
add
ret
scas
repnz
xchg
xchg
cmp
jmp
adc
mov
cmps
and
sbb
xor
sub
mov
dec
or
dec
ret
sbb
dec
scas
mov
sbb
in
fisubr
das
retf
(bad)
stos
int
cmps
in
cmp
jbe
inc
inc
push
mov
cmps
push
scas
mov
xlat
mov
shl
lods
loop
adc
out
fnstsw
inc
or
mov
jns
rcl
inc
call
loop
out
inc
cmp
arpl
push
mov
sub
or
sub
fcom
pusha
mov
xor
jbe
(bad)
cmp
pop
cwde
dec
xchg
or
ret
jle
ja
cmp
(bad)
mov
mov
ins
inc
test
lahf
pop
iret
inc
in
or
pop
dec
test
lods
mov
cmp
add
inc
sub
movs
mov
cmc
fstp
test
or
dec
test
retf
or
pop
mov
push
inc
popf
clc
push
jp
sar
out
(bad)
push
je
in
xor
(bad)
xor
adc
int
sar
jmp
out
dec
add
fprem
sub
gs
inc
test
sub
pusha
pop
fs
cmp
jle
push
out
mov
les
mov
in
cmc
enter
add
push
mov
sbb
sbb
add
mov
add
and
push
aam
js
mov
push
pop
js
inc
sahf
push
mov
(bad)
adc
cmps
pusha
sbb
retf
ja
call
cmp
xchg
add
in
movs
xor
stos
sbb
jb
in
dec
call
test
mov
les
adc
mov
lods
mov
cmps
mov
jmp
mov
xor
xchg
or
sti
mov
and
nop
inc
xchg
int3
dec
and
cmp
mov
es
sub
fcomip
mov
push
push
repnz
jge
xor
retf
mov
and
jmp
jo
xlat
add
cmp
mov
repz
adc
pop
pop
nop
sbb
xchg
frstor
xchg
scas
and
lock
jecxz
dec
fnsave
inc
sbb
and
sbb
mov
cmc
sub
jge
xchg
mov
add
test
rcr
sbb
or
inc
mov
gs
(bad)
ret
cmp
bound
pusha
xor
add
sub
sub
fwait
mov
pop
ds
xlat
test
inc
inc
sub
imul
loope
leave
cmps
sahf
xor
nop
sbb
mov
cmc
shr
fst
add
lds
jge
sub
dec
mov
inc
and
mov
das
inc
ret
imul
popa
aam
cld
push
sbb
xchg
and
imul
mov
push
cs
or
mov
sbb
in
lahf
or
shl
cmp
and
loopne
cmc
jae
mov
cli
mov
mov
jmp
popf
out
mov
fistp
mov
mov
sub
sub
inc
wbinvd
mov
(bad)
adc
mov
icebp
mov
pop
xchg
(bad)
sbb
movs
jns
je
inc
aad
sbb
push
repnz
jo
sub
mov
jp
cmc
mov
fdivr
jne
mov
add
jne
jmp
dec
cmps
xchg
xlat
adc
sub
or
clc
dec
out
adc
pop
test
jg
mov
les
call
repz
ins
mov
loope
add
lds
(bad)
btr
fild
popf
mov
jl
add
or
ss
sub
xchg
mov
xor
and
jae
pusha
inc
pusha
jmp
xor
test
scas
mov
push
sbb
lods
push
icebp
jnp
cwde
addr16
mov
and
mov
loopne
sbb
push
jle
test
or
push
(bad)
xlat
retf
loop
sub
aas
daa
enter
out
pop
div
into
xchg
out
scas
mul
xor
xor
fist
and
push
xchg
mov
cmp
aas
or
xlat
ja
inc
lods
xor
clc
outs
jecxz
ds
push
sar
mov
push
int3
aam
jmp
outs
mov
rcl
in
mov
outs
inc
xchg
dec
inc
lods
in
push
inc
outs
mov
push
inc
dec
push
test
sub
xchg
dec
in
sar
pop
xchg
es
ret
cmp
push
pop
sbb
push
xor
cdq
sbb
jecxz
mov
repz
dec
jnp
jmp
adc
(bad)
fisubr
sbb
adc
js
icebp
adc
fst
ja
psubq
jbe
test
push
loop
mov
dec
shl
pop
or
mov
dec
mov
xchg
dec
jmp
out
sbb
icebp
mov
ss
sub
fucom
or
cmp
sub
adc
pop
dec
jmp
cmc
js
(bad)
lahf
test
cli
cmc
idiv
ss
out
into
je
(bad)
popf
cmp
and
mov
lds
outs
pop
(bad)
pop
jo
movs
cmp
pop
scas
aaa
or
and
jbe
and
fadd
fld
adc
adc
ins
push
mov
sub
shl
dec
neg
daa
pop
push
push
sbb
fstp
sar
jnp
stos
leave
int3
inc
push
push
jb
(bad)
mov
mov
and
into
popf
dec
pop
add
mov
mov
scas
cdq
movs
inc
and
push
fst
and
mov
imul
jle
cmps
popf
mov
stos
add
mov
ins
nop
dec
adc
cdq
repz
dec
dec
scas
pop
and
in
or
test
dec
enter
test
mov
sbb
jmp
adc
mov
nop
sbb
pop
xchg
outs
add
mov
mov
out
ins
push
repz
jbe
outs
iret
repz
xor
xor
int
sub
xor
(bad)
fst
loope
jb
test
leave
sar
push
mov
push
xor
push
add
sahf
inc
call
mov
ret
cmp
ins
ret
fstp
daa
ficom
pop
mov
push
pop
jnp
sar
mov
stos
outs
mov
jns
inc
test
or
pop
mov
and
adc
sub
outs
xor
cmp
mov
lods
in
out
push
cwde
mov
and
imul
fist
out
xor
leave
inc
push
push
ss
pop
push
or
jg
lods
adc
lea
rcl
sar
jbe
jle
xor
jle
jmp
out
xchg
xchg
int
push
outs
pusha
pop
shl
out
js
cld
dec
lahf
ja
mov
add
mov
div
xchg
imul
ins
stos
ins
mov
fst
std
pop
icebp
cmp
fstp
sbb
lahf
pop
or
sbb
retf
sub
mov
int3
lods
inc
cmps
mov
sub
cmp
bound
push
in
mov
(bad)
lea
cwde
inc
jmp
test
pushf
aaa
(bad)
jmp
jge
mov
outs
pop
mov
cmp
and
ret
mov
adc
scas
inc
push
push
cli
push
add
fwait
mov
mov
jle
mov
sar
xchg
fcom
mov
xor
push
mov
ret
xchg
jge
loope
call
fild
push
sub
sub
inc
outs
sbb
aaa
sub
jno
pmaxsw
gs
jp
ret
loopne
test
mov
adc
mov
(bad)
cmp
sbb
xor
loopne
repz
jbe
fucomi
dec
push
out
dec
xchg
dec
outs
mov
aam
sub
add
fwait
pop
(bad)
icebp
xor
cdq
aas
adc
retf
jne
cmc
idiv
jns
push
inc
sub
cld
xchg
in
mov
imul
arpl
sub
scas
int3
(bad)
mov
dec
aam
cmc
dec
fstp
xlat
jae
popf
mov
into
ja
cdq
inc
cli
test
sub
fisubr
xchg
mov
or
ja
mul
dec
ins
and
or
icebp
out
cmp
push
add
fisub
and
xor
lock
mov
stc
push
stos
push
pop
push
sbb
bound
push
mov
bound
pusha
push
test
into
pop
leave
fnstenv
mov
sbb
(bad)
xor
jp
ds
or
mov
adc
xchg
sbb
sub
xor
jmp
or
fistp
in
movs
add
push
adc
dec
repz
fstp
(bad)
xchg
add
mov
call
daa
ins
mov
shr
popf
add
dec
jns
xchg
inc
mov
pop
jnp
repnz
(bad)
and
and
jecxz
and
aas
pusha
cmp
ds
aam
ja
fisubr
mov
arpl
stos
test
outs
fisub
mov
rcr
daa
pop
jb
add
add
push
xor
fisubr
adc
add
mov
sar
lods
jae
aaa
rcr
and
and
hlt
(bad)
mov
sub
in
adc
dec
xchg
test
push
sbb
pop
ins
nop
adc
adc
inc
inc
dec
xor
rcr
ss
add
shl
in
adc
cmp
or
inc
adc
out
push
add
mov
rcl
(bad)
addr16
add
lods
ins
rcr
jecxz
scas
xor
or
pop
push
ror
add
cwde
ds
sbb
xchg
mov
cld
es
out
xchg
and
popa
and
outs
mov
jmp
icebp
in
cmps
dec
in
lods
fcmovne
sbb
adc
cli
push
shr
adc
mov
mov
stos
bound
mov
and
mov
inc
(bad)
push
push
inc
fwait
pop
xchg
rol
sbb
icebp
std
lock
movs
dec
out
mov
cmp
daa
movs
js
sbb
rcl
shr
dec
pushf
(bad)
ss
aad
add
fidiv
adc
xchg
or
mov
stc
and
adc
scas
fistp
lock
int
frstor
or
jmp
mov
mov
sub
jb
aaa
xchg
loope
pushf
jne
outs
mov
in
sahf
xor
es
nop
sub
loopne
jne
aam
add
cmp
mov
popf
idiv
and
sbb
and
jmp
push
inc
push
cmp
jle
test
jns
or
fisttp
inc
js
and
mov
(bad)
sub
shr
call
sub
not
sub
adc
leave
pop
loopne
sbb
xor
xor
jg
out
mov
adc
lock
and
cmp
int
jno
mov
and
xor
push
lock
fstp
inc
test
loopne
mov
pop
imul
xor
popf
les
dec
mov
mov
lock
jb
and
adc
jb
or
cmps
xor
xor
jnp
mov
test
sub
cmp
xchg
sub
dec
mov
sbb
cli
(bad)
jmp
jle
mov
dec
shl
mov
sub
xor
(bad)
mov
out
out
stos
fwait
outs
jmp
std
les
(bad)
(bad)
xchg
adc
add
icebp
adc
out
sbb
cs
xchg
push
mov
push
cmc
rcr
mov
inc
aad
or
mov
inc
push
and
xchg
not
ds
mov
cli
leave
push
movs
sub
in
xchg
das
push
adc
call
(bad)
mov
fnstenv
inc
pop
jle
retf
push
ret
sbb
leave
push
cmp
cmp
mov
dec
or
jns
sbb
daa
mov
stos
ds
mov
push
fimul
rol
push
mov
sbb
imul
in
xchg
xchg
idiv
cli
mov
inc
push
jle
fdivr
aaa
loope
lahf
sub
push
scas
in
loope
mov
jmp
and
call
push
nop
push
loope
cmps
or
jns
mov
sub
cmp
test
add
jmp
pusha
push
(bad)
mov
sub
xchg
cmps
hlt
not
add
stos
mov
les
stc
ret
test
test
push
xlat
adc
add
fld
push
jae
xchg
adc
push
stc
in
inc
sbb
pop
pop
add
jge
aas
(bad)
jmp
ret
shl
pop
push
and
fstp
push
in
and
not
xchg
cmp
es
sbb
(bad)
cmp
cmp
inc
add
jecxz
sbb
icebp
div
cdq
icebp
push
fs
sbb
cld
rep
ss
fs
popf
popf
jg
jp
loope
aaa
or
dec
loopne
stos
cmp
xor
sti
fcomp
add
je
aam
dec
push
(bad)
xlat
cmp
cmps
xor
mov
mov
mov
(bad)
mov
repz
push
mov
aad
scas
aad
mov
push
bound
mov
add
adc
push
push
je
xor
pop
xchg
lods
and
outs
xlat
imul
push
les
pop
jle
aaa
lahf
inc
fld
(bad)
push
or
repnz
(bad)
ficomp
jl
cmps
ficomp
mov
(bad)
xlat
adc
daa
inc
fstp
cmp
ds
or
push
jno
add
or
and
sbb
int3
mov
or
or
(bad)
lds
jp
mov
(bad)
mov
push
movs
aaa
repnz
movs
dec
xchg
ficom
ja
aas
popa
clc
jns
call
sbb
shl
(bad)
(bad)
(bad)
rol
pop
mov
pop
mov
rcl
lds
mov
into
jbe
mov
push
aaa
in
ins
mov
dec
gs
cmp
adc
aas
int3
outs
mov
fs
lods
mov
test
sbb
pop
cwde
push
(bad)
mov
jmp
scas
jno
cmp
ret
stos
outs
mov
push
cwde
fbstp
add
xchg
sub
mov
pop
cmc
mov
or
xor
xchg
lea
lock
bound
cmps
mov
leave
nop
jp
leave
pop
dec
mov
mov
xchg
inc
dec
icebp
pop
sub
in
dec
mov
mov
inc
adc
push
sbb
mov
mov
and
jnp
iret
icebp
fimul
fsubr
iret
jmp
imul
out
pop
dec
sbb
jne
call
loop
jnp
jns
mov
rcr
test
icebp
out
pop
cmc
lock
shr
sub
in
loope
fwait
sti
addr16
mov
xor
arpl
xor
jg
mov
mov
push
fldenv
jae
xchg
scas
jno
(bad)
cld
ins
dec
lods
xchg
(bad)
ja
sbb
les
mov
test
jl
retf
adc
jmp
in
outs
test
add
sti
test
dec
dec
mov
add
jecxz
add
sub
xor
dec
cmp
pop
mov
adc
xchg
dec
dec
inc
repz
mov
add
pop
dec
lahf
inc
add
stos
xor
push
dec
pop
adc
(bad)
pushf
mov
scas
mov
gs
push
and
push
bound
enter
push
adc
cmp
pop
push
stos
cli
rcr
in
pushf
pop
outs
or
stos
lea
outs
adc
mov
lods
ins
add
pop
jp
leave
inc
sahf
jbe
cdq
das
call
test
(bad)
xor
js
ret
int3
call
xor
xchg
cwde
jo
add
aas
and
les
mov
sub
rol
add
xchg
outs
ja
xor
test
pop
pop
adc
sub
push
dec
and
xor
icebp
sub
dec
out
sub
dec
mov
pop
sbb
and
or
push
call
xor
jae
pop
xor
popf
mov
dec
fcmovnb
mov
jne
fld
hlt
jmp
inc
lahf
add
mov
in
stc
inc
jmp
into
mov
inc
sbb
pop
(bad)
into
add
into
inc
adc
inc
fwait
stos
push
jp
mov
rcl
ror
xchg
push
in
pop
fistp
and
fs
mov
lods
pop
fst
push
fild
es
lods
jae
daa
(bad)
mov
repz
aad
xor
inc
(bad)
mov
sbb
aam
nop
out
gs
imul
inc
rcl
or
cwde
hlt
outs
(bad)
out
adc
int3
scas
outs
ret
and
push
mov
aam
ret
ss
icebp
jmp
jno
mov
or
cmp
fisttp
fnstenv
adc
outs
lahf
dec
test
(bad)
lahf
retf
dec
add
stos
push
loope
out
pop
pop
mov
cdq
add
pop
add
adc
daa
and
inc
adc
out
outs
mov
lea
(bad)
sub
push
shl
jae
inc
and
(bad)
mov
repz
fmulp
and
pop
stc
jae
mov
mov
retf
push
shr
jne
test
mov
dec
pop
xchg
cmc
jmp
and
mov
mov
push
fst
jb
or
(bad)
daa
jmp
jmp
pop
or
fisub
sbb
fnsave
lea
or
dec
jb
retf
xchg
out
loope
dec
xor
out
cmp
push
imul
sbb
gs
or
adc
out
mov
add
pop
(bad)
loopne
sbb
inc
out
fs
push
pop
(bad)
(bad)
(bad)
imul
and
xor
xchg
sub
and
retf
and
fiadd
mov
jmp
and
sbb
xchg
pop
cmc
mov
or
xchg
sbb
scas
add
jns
sar
xor
mov
mov
cmp
inc
pushf
cwde
cli
stos
loop
mov
cs
jecxz
mov
push
pop
xchg
imul
imul
pusha
fwait
sub
les
popa
push
ds
xor
call
mov
inc
loop
xchg
add
scas
and
scas
std
in
fsubr
cmp
cmp
cmps
int
frstor
jmp
int3
mov
push
mov
fsub
push
(bad)
push
ja
test
cmc
jg
ficom
sti
and
test
sbb
call
adc
add
retf
ds
sar
mov
out
ja
popa
stos
stos
out
and
or
push
inc
stc
xor
mov
add
in
in
ja
pop
sti
dec
in
add
push
mov
add
ret
int3
push
repz
fistp
fs
movs
add
sub
popf
fs
jp
xchg
sbb
ins
js
test
call
mov
push
daa
mov
stos
sbb
les
mov
xchg
xor
pop
and
and
sbb
xor
and
fs
mov
bound
not
and
jmp
popf
(bad)
xchg
or
jbe
inc
(bad)
add
xor
in
xor
clc
inc
jecxz
fadd
pop
jmp
xchg
dec
push
pop
imul
or
xchg
mov
mov
jns
(bad)
scas
in
xchg
stos
or
pop
test
xchg
inc
inc
dec
out
lahf
sub
adc
cmp
lds
mov
push
dec
xchg
inc
mov
and
or
shl
ss
(bad)
sbb
and
dec
xor
pop
push
rol
cmp
mov
sbb
pop
es
cmp
adc
push
ss
mov
mov
jmp
pop
fcmovbe
shl
cmp
sbb
sub
jmp
enter
mov
addr16
je
or
loop
mov
mov
dec
(bad)
fs
push
xchg
cmp
sbb
out
xor
mov
jle
shr
es
stos
fadd
mov
aad
addr16
aas
cmp
bound
leave
xchg
mov
pop
jp
sbb
fdiv
aaa
jns
sub
push
xchg
mov
push
std
fidivr
mov
mov
das
(bad)
lea
pusha
shr
jb
inc
(bad)
mov
in
cld
cli
cmp
pop
sub
xchg
adc
adc
icebp
ret
adc
addr16
(bad)
movs
out
pushf
xor
fdivr
cmp
and
mov
daa
mov
inc
repz
lods
and
cmp
cmps
adc
mov
hlt
(bad)
in
mov
mov
test
push
adc
jnp
rol
loope
cmp
aas
mov
(bad)
fdivr
pop
dec
stos
push
gs
mov
movs
mov
xlat
add
mov
aad
and
int
out
inc
fidiv
bts
scas
ja
cwde
mov
into
and
xor
bsf
jmp
xor
pop
dec
fld
cmps
mov
ins
mov
out
out
dec
jbe
cmc
lock
dec
xor
xchg
clc
sub
mov
(bad)
xor
retf
or
push
xchg
aam
clc
fwait
adc
setp
lods
imul
mov
pop
mov
test
mov
sbb
imul
leave
add
adc
test
adc
xor
retf
in
cmp
cwde
sti
inc
neg
lea
push
jne
bound
adc
sbb
rcl
mov
lods
push
or
sub
sbb
fsubr
mov
dec
clc
sub
jge
fnsave
enter
xchg
add
idiv
xor
fldcw
sbb
add
movs
jmp
loop
popf
xor
repnz
cld
jb
sub
push
rcl
push
xor
fnclex
ja
add
add
nop
sbb
std
pop
xor
imul
sub
fmul
push
stos
jns
out
out
cmp
and
test
push
mov
fistp
aam
and
mov
push
add
or
retf
ss
mov
pop
(bad)
add
sahf
in
xor
loop
jne
stos
inc
dec
and
mov
mov
scas
cmc
pop
pushf
and
into
aad
cli
mov
rcl
and
sbb
ja
cmp
push
and
(bad)
lahf
stos
pop
pop
scas
or
pusha
xlat
jmp
cs
xchg
sbb
fbld
cmps
sar
outs
out
adc
push
fst
into
scas
(bad)
or
sub
cmp
ret
cmp
add
jmp
rol
fisubr
mov
sti
(bad)
neg
adc
adc
data16
xchg
mov
adc
fcomp
mov
push
and
dec
cmc
jle
mov
je
cmp
inc
iret
mov
in
aam
repz
xchg
push
fwait
or
jg
mov
mov
rol
push
cmp
and
popf
sub
xchg
adc
repz
sub
dec
inc
pop
cmp
cmp
pop
es
xchg
push
or
(bad)
fsubr
ret
or
sbb
dec
jb
fwait
outs
add
aad
pop
and
or
sub
dec
fidiv
mov
js
jo
ror
xchg
retf
call
(bad)
dec
cmps
push
pop
stos
dec
and
jb
jle
pop
dec
xchg
cmp
cld
sahf
in
mov
jne
fcmovnbe
and
push
mov
pusha
out
mov
stc
sub
adc
cmp
fisttp
cmc
add
(bad)
dec
sbb
aam
sar
add
mov
inc
sub
and
or
jne
cli
mov
push
adc
xchg
int
jg
pop
fistp
cld
adc
push
xor
fsubr
bound
mov
ins
ds
ja
(bad)
bound
add
push
shl
pop
mov
ins
inc
int3
outs
and
test
mov
mov
clc
push
aad
push
pop
imul
xor
out
push
mov
leave
cmc
add
xchg
add
cmc
dec
xor
mov
stc
xor
neg
push
retf
lods
pop
mov
pop
(bad)
out
dec
cld
ja
sbb
mov
inc
aam
aad
ds
test
cmp
xor
hlt
(bad)
cmp
ins
pop
and
mov
sbb
sub
mov
mov
jae
jns
iret
into
push
mov
stos
mov
dec
mov
ja
mov
pop
pop
mov
mov
int
test
mov
cmp
jnp
mov
clc
test
fcom
scas
jl
sub
xor
rcr
enter
or
cdq
sbb
pop
fistp
cmp
in
mov
xchg
cmp
push
xchg
retf
jo
cmps
pop
cmp
sbb
imul
ss
mov
xchg
jb
adc
pop
aaa
cmp
aam
inc
and
jecxz
mov
popf
mov
jne
aam
outs
ffree
mov
scas
stc
enter
inc
lods
fistp
ror
je
lods
adc
addr16
pushf
ins
xor
popf
mov
adc
test
out
jno
xchg
inc
pop
mov
mov
or
lock
leave
into
shr
in
aas
fdiv
jbe
mov
call
add
push
push
mov
lods
jg
lea
and
adc
dec
pop
(bad)
xchg
mov
mov
loope
jge
aad
or
ror
bound
frstor
cmps
fldcw
out
push
in
jns
stc
jns
outs
inc
push
jno
adc
push
adc
and
sub
popa
pop
and
or
sub
mov
sub
push
add
mov
or
inc
mov
add
fidivr
loopne
mov
(bad)
test
(bad)
call
std
and
data16
pop
dec
lds
aas
retf
jns
sub
imul
rol
mov
test
lea
mov
or
call
ja
stc
lods
js
(bad)
pop
sbb
mov
cmp
cmc
pop
mov
es
jecxz
xchg
das
lahf
daa
push
sti
sub
inc
cs
pop
mov
addr16
call
(bad)
cli
mov
inc
pop
(bad)
xchg
add
loopne
outs
inc
imul
shr
xchg
imul
(bad)
(bad)
cld
push
imul
call
mov
inc
mov
rol
mov
sub
lods
fiadd
mov
cli
mov
shl
ret
enter
test
xor
cmp
inc
dec
xor
push
mov
fstp
cmc
push
cmp
mov
and
pop
add
das
clc
xor
cwde
in
mov
pop
mov
cmps
imul
fadd
sbb
mov
xchg
int3
iret
mov
mov
(bad)
dec
stos
out
xchg
in
add
jns
cmp
sub
cld
jecxz
loop
inc
or
push
xor
ret
ins
add
mov
mov
ret
xor
jnp
jbe
scas
xor
outs
(bad)
cmp
xlat
addr16
cmp
push
xchg
rcr
movs
ds
adc
mov
rcr
mov
xlat
jle
fsubp
leave
gs
mov
pop
jae
ss
sub
mov
and
adc
cld
dec
popf
inc
lahf
std
push
in
test
std
jl
cwde
aas
rol
dec
add
sbb
jmp
jbe
and
int3
and
ret
fs
pop
mov
cdq
jl
push
call
popa
xlat
add
add
repnz
outs
xor
cmp
cmp
inc
cdq
idiv
scas
int3
jg
sub
sar
sub
dec
mov
jge
or
(bad)
jb
mov
or
inc
add
fpatan
(bad)
cmps
int
in
or
addr16
scas
xchg
mov
add
imul
mov
nop
sbb
sub
jmp
pop
enter
in
clc
outs
das
and
mov
and
mov
jbe
push
scas
push
add
mov
add
shr
push
ins
fwait
pop
mov
add
out
mov
aaa
or
cmp
(bad)
add
push
pop
pusha
jle
std
pop
pop
mov
cmps
cmp
xchg
jae
push
jbe
imul
imul
add
and
fs
jns
inc
add
cli
mov
rcl
mov
outs
ss
pop
dec
mov
xchg
pop
xchg
mov
cmp
sbb
xlat
(bad)
push
stos
aad
(bad)
mov
or
or
mov
pop
nop
cmp
lock
pop
(bad)
jl
outs
das
lods
test
jg
xchg
repz
into
rcl
pop
lods
stc
es
ret
sbb
and
bound
mov
mov
mov
mov
jno
outs
cmp
ins
pushf
sahf
nop
mov
fadd
ins
outs
imul
sar
mov
xchg
inc
jg
icebp
cmps
xor
scas
xor
add
mov
retf
mov
cmp
rcr
aaa
xor
jo
and
div
pop
lods
aam
loopne
mov
cmp
and
div
inc
sbb
(bad)
ss
fisub
jmp
mov
scas
dec
les
or
(bad)
cld
xchg
stos
sub
scas
dec
push
out
cmp
cmp
jae
cdq
outs
mov
stc
imul
test
pop
aad
sub
inc
push
cld
invd
ficomp
lods
push
mov
jbe
push
lock
adc
jne
out
xor
pop
mov
repnz
xlat
pop
stos
repz
add
div
mov
mov
test
cs
pop
push
out
jo
push
ret
ja
xchg
loopne
xor
fmul
pop
out
add
fcomp
psubd
repnz
mov
or
jmp
push
arpl
or
loopne
xor
outs
inc
dec
es
add
fsubrp
dec
mov
ins
sub
xor
push
inc
movs
mov
and
(bad)
stc
rcl
(bad)
add
xchg
push
pop
push
ins
sar
dec
mov
mov
out
and
loop
es
dec
inc
lods
in
mov
sub
inc
cld
jge
pop
fild
cmp
(bad)
repz
test
sar
dec
fs
push
xchg
inc
xchg
sub
lods
inc
fisubr
ds
cdq
xor
mov
daa
test
mov
frstor
das
aam
sbb
xor
sub
mov
jns
je
xchg
gs
adc
add
add
cmp
clc
xchg
add
and
xlat
pop
push
sar
xchg
iret
mov
in
cdq
repnz
or
out
sub
jg
movs
ja
sbb
ss
inc
cmp
dec
fs
inc
ins
jmp
adc
test
cmp
lds
sub
call
inc
xor
push
push
jmp
iret
into
cld
sbb
retf
jecxz
xor
jg
lahf
(bad)
enter
arpl
xlat
push
dec
mov
arpl
jl
inc
inc
loop
pop
sub
adc
add
adc
or
or
sahf
out
loop
or
mov
jp
mov
out
(bad)
stc
test
jg
push
inc
mov
mov
sahf
lods
mov
or
ja
stos
xor
cmc
lock
leave
cmps
fwait
out
scas
adc
pop
out
fcomp
(bad)
mov
pusha
enter
mov
mov
test
outs
retf
xchg
icebp
ds
cdq
jo
xchg
dec
ss
fsubr
xor
push
inc
push
fisubr
or
or
fistp
pop
xlat
push
and
aaa
test
rcl
add
mov
and
push
jp
daa
cmp
lea
mov
sub
mov
mov
jbe
mov
sbb
push
add
movs
xchg
mov
nop
aaa
icebp
adc
mov
inc
jecxz
sub
jge
arpl
or
ret
sbb
out
fs
adc
test
xchg
inc
test
pop
push
outs
adc
das
push
fidiv
ins
jb
pop
lahf
aam
push
cmp
jbe
pop
add
sbb
call
cmc
mov
adc
js
xchg
mov
push
and
push
stos
mov
frstor
fcom
out
cmp
(bad)
mov
mov
or
aas
xchg
jo
pop
stos
pop
adc
je
(bad)
lods
add
jp
push
pop
(bad)
rol
lds
aas
rcr
cmps
iret
popf
jmp
sbb
push
cwde
hlt
hlt
mov
mov
mov
div
ins
mov
call
outs
jns
sbb
adc
dec
sbb
jle
retf
pop
or
push
in
shr
push
ret
xor
sbb
(bad)
xchg
lds
xor
sti
xchg
je
sub
retf
ret
es
(bad)
movs
xchg
mov
jmp
sub
sbb
addr16
adc
out
fisub
jno
in
movs
mov
xlat
xor
push
repz
stos
add
xchg
xor
sbb
inc
sub
jg
jnp
ins
test
xchg
leave
mov
inc
cmc
sub
mov
xor
ffree
ds
loope
jae
and
mov
jbe
adc
stos
pop
push
imul
int3
push
mov
xor
adc
rcl
test
fs
sti
movs
cli
loope
scas
into
aam
xor
and
aas
test
xchg
das
cmps
bound
or
in
push
xor
jo
mov
shl
inc
imul
sub
jnp
arpl
rcr
add
or
out
adc
adc
dec
mov
ss
xor
call
(bad)
or
out
add
popa
call
fld
ficom
adc
xchg
sbb
movs
inc
pop
pop
inc
gs
enter
sub
mov
mov
test
fs
mov
cmp
inc
loopne
and
lods
sbb
jmp
pop
lock
sti
jae
xor
cs
dec
pop
mov
in
fucomi
ja
mov
cmps
xor
mov
push
retf
enter
sbb
adc
inc
mov
dec
in
mov
sub
adc
add
mov
(bad)
sti
shl
imul
pop
xchg
sub
fsub
cmp
dec
sti
cmc
jmp
cs
inc
mov
mov
pop
test
ror
inc
fist
mov
cwde
aam
sub
jp
jo
scas
push
out
lea
jns
push
or
cdq
mov
pop
add
and
adc
in
shr
ja
rcl
and
and
or
in
cdq
jmp
cdq
lods
adc
retf
mov
jno
nop
rol
cmc
jmp
fild
nop
jmp
(bad)
jmp
mov
popf
aam
scas
xlat
mov
mov
xor
inc
sbb
or
pop
jle
mov
stc
or
ror
pusha
adc
fs
or
add
mov
jnp
pop
inc
cld
mov
lods
pop
aad
sub
cli
mov
repz
pop
adc
or
out
pop
loop
fwait
inc
cmp
in
cmp
sub
cmp
dec
fild
(bad)
fdivr
ss
dec
dec
iret
jle
xor
call
and
sub
stos
adc
mov
inc
push
push
mov
sbb
add
movs
fnstsw
cwde
jg
and
jne
arpl
pusha
movs
sub
cmp
pop
movs
mov
xor
mov
adc
push
mov
(bad)
test
addr16
vandps
or
add
push
shl
and
jne
std
in
xchg
inc
mov
int3
int
cdq
mov
cmp
inc
pop
and
neg
jbe
(bad)
outs
and
jl
pop
and
xchg
dec
mov
sbb
fistp
repz
outs
repnz
mov
cmp
cmp
pop
push
cmp
lea
sbb
in
das
or
jg
ds
fwait
sbb
mov
sub
cmps
xchg
fucomp
cmps
iret
push
ins
fist
sub
sti
inc
xor
cdq
sbb
add
xchg
pop
(bad)
ins
mov
scas
ja
mov
fs
dec
and
mov
in
jl
jns
sbb
jg
scas
sub
ds
xchg
xor
cli
cmp
repnz
mov
cs
mov
in
call
aam
jg
ds
xchg
pop
(bad)
fbstp
mov
cld
cmp
pop
add
sbb
xor
out
in
ja
pop
out
out
pop
mov
and
ins
xor
add
dec
in
pop
ins
sub
push
jl
rcl
push
xchg
cmp
neg
sar
mov
pop
arpl
mov
out
xchg
mov
jno
nop
not
fild
pop
pop
and
scas
repnz
fsubr
xchg
inc
sbb
mov
das
lahf
dec
add
sbb
mov
(bad)
call
cwde
(bad)
in
scas
mov
dec
jp
pushf
jnp
cmp
add
popf
icebp
es
or
and
inc
aam
mov
inc
clc
cs
retf
and
movs
mov
jbe
or
pop
xchg
push
sbb
xor
xchg
xchg
popf
jne
pop
sbb
and
scas
test
mov
imul
jl
xor
mov
or
pop
sar
pop
sbb
sti
fst
out
test
shl
jecxz
dec
xor
sbb
adc
sbb
adc
popf
lods
int3
movs
adc
lahf
shl
popa
cmp
or
xor
cli
cs
aas
repnz
popf
or
push
mov
jge
clc
push
gs
lods
fnstsw
lods
out
or
ins
cdq
fadd
outs
mov
adc
cli
repnz
cmp
stc
push
les
push
add
call
push
inc
push
arpl
mov
push
in
out
les
push
mov
add
fcmovbe
lds
mov
xchg
adc
adc
call
pop
out
(bad)
and
lods
cli
jmp
pusha
sub
xlat
pop
xor
fstp
push
adc
push
jge
sub
movs
mov
pop
jmp
repnz
in
cmp
or
aam
fmul
(bad)
and
mov
cmp
mov
inc
inc
mov
dec
ins
call
cdq
into
pop
push
rcl
mov
inc
xchg
and
add
fwait
xchg
inc
jmp
je
ror
push
push
sbb
push
aaa
pcmpeqb
jmp
and
xlat
push
test
jmp
imul
ss
repnz
adc
add
scas
mov
push
gs
pop
inc
pop
xchg
sub
jmp
pop
pop
xor
push
inc
mov
xchg
iret
(bad)
pop
dec
push
xor
es
adc
mov
jg
mov
in
push
and
pushf
enter
push
loope
mov
enter
fiadd
lods
sub
pop
into
jns
mov
and
idiv
adc
mov
push
jns
cs
mov
mov
add
or
cmc
test
pop
sub
shl
mov
sbb
cwde
clc
test
sub
add
mov
inc
inc
inc
mov
sbb
pop
outs
mov
adc
xchg
adc
xchg
leave
xor
xor
shr
jecxz
add
sbb
add
adc
push
lahf
ss
arpl
sbb
xor
sbb
mov
push
adc
dec
jnp
rcr
repz
js
clc
in
cs
fisubr
jle
psraw
in
mov
mov
xor
stc
lods
pushf
imul
pop
daa
push
in
imul
imul
push
enter
adc
mov
xor
inc
push
dec
push
ss
idiv
fwait
iret
icebp
popf
arpl
test
cmp
ins
out
mov
addr16
xor
scas
push
cld
hlt
mov
mov
(bad)
(bad)
(bad)
mov
mov
cmps
pop
push
mov
inc
rcr
cmp
dec
cmp
adc
push
cmps
add
add
mov
arpl
push
xchg
dec
mov
jecxz
mov
push
push
fdiv
mov
test
in
cmc
cmp
ror
add
cwde
rcr
and
out
push
and
sbb
repnz
mov
pop
dec
shl
aas
pop
aad
dec
xchg
pop
xchg
mov
ror
das
in
or
inc
aas
xchg
(bad)
xor
xor
cmp
rcr
int3
daa
push
adc
enter
mov
test
push
xor
lods
inc
pop
in
inc
ja
or
fcmovnbe
xlat
pcmpeqw
add
xchg
or
pushf
dec
cmp
mov
add
mov
fld
fcom
pusha
lds
outs
fsubr
jmp
push
in
in
sbb
cmps
imul
scas
lods
pop
cld
adc
adc
adc
fidivr
add
lods
test
daa
out
dec
repnz
stos
das
addr16
sbb
cmp
stc
adc
cmp
sub
imul
cmp
lds
iret
test
int
imul
jmp
mov
bound
xchg
lea
push
add
xor
in
rol
mov
sar
js
sbb
pop
add
pop
in
icebp
jnp
test
sub
call
cmp
or
push
cli
adc
call
fxch
push
pop
sub
(bad)
cli
stos
pop
fimul
mov
jecxz
mov
mov
out
xchg
dec
add
push
in
retf
stos
js
jno
movs
push
retf
mov
pop
cmps
arpl
mov
scas
std
mov
movs
mov
mov
test
call
std
out
dec
outs
mov
mov
test
push
inc
jle
movs
xor
cdq
int3
jmp
push
shr
adc
xor
pop
push
inc
int
scas
int3
cld
sbb
adc
cmp
inc
or
jne
sbb
xor
and
mov
cmp
mov
jg
gs
inc
or
inc
dec
pop
sbb
xor
jmp
cmp
jl
inc
loopne
add
and
cmp
je
fisub
inc
pop
daa
adc
mov
or
call
arpl
pop
inc
mov
clc
dec
pop
xchg
jg
mov
icebp
mov
dec
xchg
inc
aaa
pop
mov
lods
jg
xlat
xor
loop
mov
mov
or
leave
ins
out
in
sbb
sub
into
les
mov
sbb
in
out
sbb
scas
clc
mov
sbb
jae
adc
mov
ror
or
xchg
lahf
out
ret
sub
jge
cmps
xchg
mov
xchg
dec
sub
pop
sahf
and
sub
mov
xor
pop
cmps
ss
pushf
dec
rol
rol
mov
inc
push
rol
(bad)
cmp
sub
icebp
sub
shl
lods
xchg
xor
int
jbe
jge
pop
retf
sbb
outs
out
cmp
fild
repnz
repz
syscall
movs
out
pop
stos
or
lock
dec
dec
add
sahf
mov
add
std
movs
pop
imul
clc
mov
and
xchg
aaa
inc
fwait
sub
js
div
scas
jns
add
xchg
stos
jge
lock
xchg
adc
jmp
add
int3
fisttp
mov
out
dec
inc
dec
(bad)
bnd
or
out
mov
jmp
mov
mov
mov
stos
sub
(bad)
call
retf
cmp
mov
bound
cmp
inc
mov
or
jge
out
loope
(bad)
dec
gs
dec
ins
mov
inc
sahf
inc
push
ret
ds
mov
cmps
aam
mov
addr16
in
or
mov
imul
setns
fcom
xchg
xchg
call
xlat
cld
mov
add
lahf
clc
sub
jb
es
daa
and
cwde
movs
(bad)
jle
or
nop
mov
jb
inc
cmp
aas
test
aas
aas
mov
aam
sbb
mov
add
jns
pop
push
mov
dec
dec
push
add
push
adc
enter
fistp
repnz
add
out
idiv
clc
push
repnz
sar
lahf
xchg
je
aad
pop
mov
lea
rcr
jbe
lahf
or
bound
jno
sub
sub
cli
push
pop
inc
enter
in
sub
jmp
popf
adc
popf
shr
push
jo
push
jl
mov
cmc
xchg
adc
sbb
sbb
push
bound
and
cmp
out
in
cmp
and
ss
adc
repz
push
inc
jno
stc
dec
sub
cmp
inc
mov
div
dec
mov
sub
push
mov
lock
push
sub
(bad)
(bad)
xor
xor
ins
pop
call
aas
faddp
cli
stos
xor
(bad)
push
mov
and
dec
mov
dec
ficomp
call
inc
mov
popa
std
and
dec
js
pop
sbb
and
sbb
dec
mov
movs
add
xor
mov
mov
scas
and
sbb
pop
hlt
retf
jp
movs
xor
in
push
movs
push
daa
xchg
cmc
add
xchg
and
xchg
jb
jno
fnstsw
pop
sbb
inc
and
inc
sub
adc
dec
fcmovnb
mov
fild
or
push
fxch
ds
xchg
std
dec
sar
add
inc
dec
cli
out
sbb
inc
data16
cwde
cmps
les
xchg
les
and
mov
dec
mov
jmp
sub
pop
retf
mov
mov
inc
(bad)
retf
test
fmul
sub
scas
sbb
cmp
(bad)
pop
push
and
mov
pop
dec
test
mov
call
outs
xor
(bad)
iret
cmc
jmp
iret
clc
mov
gs
in
sbb
fst
add
dec
test
sbb
fmul
imul
sub
call
fsub
jns
dec
fst
pop
pop
aad
dec
xor
sub
mov
test
inc
dec
ds
adc
cs
fucomi
mov
or
setl
out
and
neg
pushf
sbb
mov
ret
stos
sub
stos
mov
dec
dec
leave
jae
lods
clc
je
pop
rol
lds
inc
hlt
ret
mov
pop
repnz
sahf
xchg
jns
dec
jmp
pop
push
push
or
or
arpl
cmps
in
or
iret
shl
int
adc
in
sub
push
sub
in
aam
fwait
dec
or
lahf
add
xchg
adc
rcr
mov
retf
inc
repnz
sub
and
sbb
iret
push
loop
cmp
in
test
shl
shl
or
pop
and
add
aad
jbe
fisubr
ds
add
jne
mov
cmp
jl
test
test
xor
sbb
test
ins
xchg
(bad)
sbb
not
test
(bad)
hlt
mov
and
and
mov
push
mov
retf
mov
shl
loop
scas
retf
data16
mov
fstp
adc
std
gs
in
inc
fmulp
outs
pop
mov
and
xchg
popf
test
or
jb
ins
add
cmp
or
push
sbb
and
je
inc
pushf
lahf
mov
inc
sub
push
dec
movs
pop
aad
les
les
xchg
adc
vminss
addr16
add
push
xchg
cmp
dec
(bad)
aaa
outs
and
mov
sub
mov
jns
imul
imul
mov
test
xchg
aad
or
xor
addr16
push
pop
sub
rcl
pop
dec
(bad)
cmps
call
add
xchg
cmp
inc
arpl
dec
or
lds
adc
sbb
out
test
test
out
dec
sub
mov
and
cmp
push
sub
or
cmp
inc
div
icebp
xchg
lods
sbb
popf
lahf
test
cmp
mov
in
fmul
out
hlt
pusha
shl
popf
mov
retf
sar
outs
jno
lods
sti
mov
shr
int
mov
mov
daa
sbb
lea
add
jnp
sub
and
sub
cmp
mov
mov
or
jle
mov
add
pop
inc
sub
fdivr
xlat
inc
ins
xlat
pushw
scas
mov
(bad)
sub
lahf
test
cmp
fcom
pop
les
and
aam
cld
call
ja
cmc
mov
test
sub
mov
xchg
xor
pop
sbb
mov
aaa
inc
leave
jmp
cdq
dec
and
jmp
and
popa
cwde
pushf
(bad)
ror
adc
das
cmp
ret
jmp
pop
pop
and
fisttp
adc
sub
mov
push
test
inc
ins
xor
xor
adc
cli
push
ss
add
push
in
mov
ja
hlt
sbb
sub
aam
pop
xor
nop
cmp
sahf
inc
xor
jge
sbb
sub
cmp
fcmovnb
(bad)
stc
add
adc
push
shl
sbb
xor
add
xor
sbb
mov
rcr
(bad)
daa
fld
push
cmp
jbe
xor
sahf
inc
sub
pop
popa
sbb
jle
out
mov
loopne
push
int3
pushf
xlat
xchg
cld
ins
inc
xlat
lahf
sbb
fs
push
mov
fimul
std
cmp
pop
xor
xchg
out
in
jmp
lds
adc
sbb
dec
bound
xchg
mov
movs
addr16
inc
add
mov
daa
mov
adc
mov
out
imul
lock
aaa
fwait
inc
dec
out
dec
sub
and
jmp
mov
loope
push
pop
lods
sbb
adc
in
clc
mov
int3
pop
push
and
daa
mov
or
push
mov
dec
push
mov
pusha
pop
mov
dec
sbb
mov
das
adc
jbe
lahf
adc
or
in
adc
bound
inc
call
pushw
push
lds
xchg
sbb
movs
inc
cld
pop
imul
repz
pop
arpl
pop
and
jmp
fmul
dec
mov
ret
movs
and
sbb
dec
add
xchg
cmp
movs
cmps
mov
mov
(bad)
mov
adc
gs
mov
bound
shl
sub
pop
xor
cmp
xchg
push
daa
sti
mov
mov
mov
adc
nop
pop
sbb
repz
repnz
cmp
add
mov
jb
mov
mov
jmp
cmps
dec
or
scas
cmc
retf
push
sub
test
push
(bad)
popf
push
js
cld
cmps
ins
xchg
outs
cmp
stos
mov
mov
dec
and
sahf
cmp
add
jl
icebp
(bad)
aad
cmps
push
mov
or
mov
cmps
dec
inc
fld
adc
sub
aaa
call
cmp
jmp
cwde
lods
and
retf
inc
loope
mov
int3
cs
mov
push
out
add
stos
or
cld
fsubr
ins
out
sub
dec
sbb
(bad)
ret
test
les
into
jns
and
cmp
and
pop
stc
clc
jp
rcr
xchg
mov
cli
scas
call
test
daa
push
imul
push
cmp
pop
outs
test
stos
out
lock
pop
test
das
call
icebp
lea
cmp
clc
daa
sbb
inc
enter
sub
xor
js
pop
add
lahf
ds
int
push
adc
jb
cmp
jecxz
int
mov
mov
fwait
(bad)
jae
jmp
add
inc
inc
fisttp
ja
mov
add
ins
std
jp
mov
add
adc
jns
lods
fadd
xchg
ret
ins
push
jae
hlt
das
int
faddp
mov
jg
xchg
data16
pop
div
ror
popa
lahf
int
mov
nop
retf
cmp
and
cdq
pop
dec
pop
nop
xchg
popa
addr16
not
cmp
push
mov
std
movs
jg
jo
std
mov
or
cmp
cmp
push
and
jnp
(bad)
adc
mov
sub
cmp
scas
xchg
adc
daa
and
dec
mov
jle
test
mov
lods
xchg
imul
je
int3
cwde
xchg
mov
int
mul
add
pushf
jne
and
adc
fistp
les
enter
stos
stos
int3
mov
test
dec
pop
and
sub
lods
pop
mov
push
dec
sbb
repnz
add
in
and
jl
push
mov
repz
sbb
cmp
cmp
push
(bad)
push
retf
mov
(bad)
cmc
adc
lock
inc
jo
jae
retf
push
or
mov
into
mov
and
push
in
pop
sbb
cmp
or
(bad)
ror
mov
xor
(bad)
movs
test
xchg
mov
div
push
push
mov
sub
xchg
pop
retf
jnp
jmp
and
cli
pop
gs
dec
shrd
jbe
adc
dec
or
jns
scas
adc
outs
inc
fnstenv
retf
ins
aam
dec
aaa
xor
sbb
in
jae
or
pop
popa
jle
clc
push
push
retf
(bad)
jmp
repnz
pop
enter
in
jo
jmp
into
ss
dec
and
mov
sbb
arpl
push
or
or
test
mov
scas
inc
lock
in
repnz
loope
fisttp
(bad)
js
sub
push
movs
cwde
repz
rol
aaa
cld
scas
dec
pop
ss
mov
push
push
inc
mov
in
pusha
sub
fdivr
xchg
fcomp
pop
ds
cmp
jno
cmps
pop
test
or
inc
fidivr
pop
pusha
dec
jmp
das
cmp
movs
mov
sbb
and
pop
adc
rcr
cs
jnp
mov
sbb
mov
arpl
call
pushf
int
ins
xchg
mov
or
cmps
mov
ret
mov
rcr
pop
sbb
int
lds
popa
fld
mov
sbb
xchg
ret
mov
inc
cmps
inc
xchg
movs
in
cmp
aas
inc
out
jecxz
mov
jne
mov
jecxz
fidivr
shl
xor
in
xlat
movs
ret
mov
fild
test
or
push
dec
lds
mov
xlat
mov
ds
sub
mov
cmp
ins
repnz
xchg
pop
mov
out
jb
cwde
jle
xchg
fld
mov
popa
shr
and
ins
ds
mov
aam
in
xchg
rcl
jne
fiadd
jbe
jmp
mov
dec
jbe
call
inc
imul
inc
cmp
mov
jg
pop
fist
fidivr
cmc
in
sub
or
(bad)
pop
xchg
pop
pusha
(bad)
mov
sub
lock
xor
mov
adc
add
rcl
popf
cmp
xchg
dec
mov
mov
jnp
popf
add
fsubr
nop
sahf
inc
retf
mov
push
cmps
scas
push
outs
loope
xchg
push
mov
aam
fisttp
mov
add
lods
iret
xchg
aam
mov
push
xchg
mov
pop
and
xchg
out
psraw
cmp
scas
mov
sbb
shl
fs
loop
push
pushf
jmp
stc
push
(bad)
aam
mov
scas
inc
stos
mov
(bad)
xchg
inc
mov
shr
xchg
dec
add
cmps
dec
in
push
ja
fwait
pop
pop
je
outs
mov
mov
dec
stos
jp
loopne
cs
mov
out
jmp
fisttp
pop
hlt
ds
ins
xchg
sub
add
sar
(bad)
lea
(bad)
fld
out
mov
(bad)
sar
outs
sub
dec
mov
xchg
add
into
jne
outs
sub
xor
adc
or
int
cld
inc
stc
push
inc
jo
xchg
xor
add
adc
pop
or
enter
int3
mov
arpl
cmc
dec
lods
sar
cmp
std
pop
adc
into
jne
ds
push
inc
das
fsub
fild
out
int3
sbb
ins
shl
out
adc
add
push
js
push
mov
retf
add
shr
popa
xchg
cmp
sbb
inc
push
ret
inc
mov
dec
xchg
push
jbe
pop
adc
scas
push
push
push
push
imul
shl
mov
fcomp
pop
sub
inc
or
dec
jnp
mov
mov
mov
in
mov
jbe
and
push
ret
ins
cs
jmp
sti
loop
add
or
xchg
mov
scas
and
mov
xchg
pop
pusha
jp
jl
sub
adc
inc
sbb
xor
or
jns
div
std
xchg
loop
retf
out
fsub
xor
mov
sub
jno
sti
dec
in
cwde
or
leave
and
clc
add
mov
or
pop
(bad)
popf
or
aaa
push
mov
inc
push
shr
cmp
xchg
(bad)
mov
add
xchg
adc
mov
call
(bad)
pop
xor
idiv
cmp
cmps
inc
fucom
pop
je
aam
xor
sub
jbe
add
clc
push
xchg
lock
ret
or
mov
pop
imul
pop
ins
(bad)
mov
fs
enter
inc
push
int3
fcom
lods
push
pop
hlt
sbb
cwde
sbb
sbb
pop
mov
loop
xor
mov
pushf
cld
pop
xchg
mov
mov
dec
jmp
add
cli
or
inc
cld
mov
outs
mov
mov
push
rcr
fisub
aam
or
iret
xchg
xchg
sub
mov
xchg
sti
add
or
(bad)
movs
jmp
cmp
in
scas
push
outs
enter
sub
cmc
int3
lahf
in
stc
pushf
pop
into
or
ffreep
dec
push
lds
xor
inc
mov
jnp
movs
push
xchg
push
iret
out
lods
mov
fincstp
mov
adc
xor
mov
sbb
scas
loop
or
ss
imul
sub
inc
pushf
pop
fild
je
lahf
dec
add
bnd
and
(bad)
call
or
iret
pushf
rcr
xchg
sub
ret
dec
into
xor
dec
pop
out
loopne
mov
je
(bad)
or
std
(bad)
clc
je
int
lahf
iret
push
mov
mov
lea
scas
imul
(bad)
mov
fisub
mov
pop
and
dec
and
sub
adc
or
adc
inc
outs
lds
fwait
pop
add
out
lods
ret
xor
sti
loop
inc
pop
vfrczpd
mov
cmp
jae
in
mov
fldenv
je
or
add
push
loop
pushf
sub
or
push
or
daa
mov
mov
or
cmp
mov
xchg
retf
push
mov
mov
sub
in
xor
iret
pop
rcl
sub
outs
loopne
fwait
cdq
movs
mov
into
idiv
or
out
pop
adc
aad
rcl
push
imul
leave
xor
xlat
jne
loop
out
fadd
call
pop
aas
xlat
ds
test
mov
mov
cmp
lock
fcmove
xor
pop
daa
mov
out
pop
std
clc
pop
inc
enter
xchg
jg
pop
cwde
in
push
cmp
cmps
hlt
jbe
ins
and
and
pop
scas
ins
cmp
push
mov
mov
mov
cs
stc
cmp
mov
jle
ja
movs
mov
add
cli
aas
push
out
fdiv
or
repnz
inc
aas
inc
loope
dec
inc
mov
mov
call
jle
loope
clc
iret
mov
ror
icebp
mov
xchg
ins
movs
inc
mov
sub
test
push
xor
rcr
lods
add
cwde
out
jle
out
leave
mov
stos
adc
icebp
sbb
retf
jl
jns
fld
test
movs
rcr
push
int
jmp
adc
and
inc
pop
repz
pop
arpl
mov
xchg
cdq
movs
cwde
jle
sub
out
out
outs
push
jnp
inc
jo
push
das
addr16
push
inc
push
out
xor
cmp
xor
add
out
cmp
cmc
cmc
ins
cmps
fwait
int3
ret
aam
or
mov
lods
call
fst
xlat
push
call
jno
add
test
sub
cmps
mov
bound
repz
dec
aas
cs
scas
jl
sub
jp
sub
das
xor
xor
inc
add
jge
sar
pop
dec
aam
pop
sbb
mov
sub
test
or
iret
ins
fidivr
sbb
inc
mov
cwde
sbb
mov
and
cmp
or
inc
add
mov
ss
push
lea
add
lods
ja
jnp
retf
xchg
add
dec
cmp
pop
inc
fwait
add
push
pop
je
push
daa
inc
mov
cs
mov
jae
cwde
or
pop
stos
jg
mov
dec
das
mov
jmp
daa
xor
mov
sub
xor
push
jp
sub
(bad)
out
jmp
mov
gs
jo
sub
std
popf
in
popa
add
pop
or
mov
out
repz
pop
call
cld
pop
sbb
fcmove
hlt
jae
xchg
call
or
sbb
mov
jno
fild
dec
test
fucomi
mov
fidiv
ret
xor
xchg
mov
dec
xor
iret
xor
(bad)
lods
aas
(bad)
repnz
jnp
sbb
lods
popa
sub
cmp
add
mov
int3
fcom
adc
xchg
mov
dec
xchg
jns
cmp
inc
jg
and
fcom
jne
or
into
rcr
repnz
mov
dec
rcr
dec
movs
or
scas
mov
stc
imul
aam
shl
jecxz
add
stc
cmp
cld
add
mov
lds
add
mov
dec
call
cmp
movs
push
mov
aam
sub
jl
add
movs
and
pop
jge
dec
lahf
push
push
adc
jp
stc
dec
push
add
pusha
icebp
dec
add
jmp
std
xor
pop
mov
nop
mov
imul
or
push
or
les
adc
sub
or
add
sub
stos
cmp
es
xor
sti
gs
dec
test
sar
pop
pushf
and
mov
mov
jp
sbb
adc
push
mov
and
xor
fisttp
ror
(bad)
jnp
push
push
inc
test
push
pop
mov
mov
call
test
mov
or
jl
pushf
arpl
movd
cld
pop
or
std
inc
push
add
aas
push
jae
mov
idiv
dec
(bad)
mov
dec
inc
arpl
or
mov
mov
mov
mov
lock
ja
dec
out
push
jne
jo
les
out
jb
std
outs
jmp
out
scas
pop
mov
pop
movzx
add
or
aam
mov
ja
cli
push
adc
daa
xor
or
pusha
mov
out
xchg
adc
xor
lahf
mov
or
inc
fucomp
cmp
push
pop
call
scas
sbb
test
in
test
xor
ret
rol
imul
es
hlt
sub
xchg
push
or
xchg
pusha
cmp
js
shl
dec
in
mov
out
das
scas
icebp
shl
repz
lods
out
adc
add
jmp
mov
cmp
stc
arpl
cmp
mov
xor
je
(bad)
mul
mov
xor
movs
cmp
mov
adc
arpl
das
sub
not
pop
enter
dec
jl
scas
arpl
mov
jmp
xor
je
or
test
jp
cmp
add
aas
jg
jo
jbe
jae
mov
push
and
dec
test
push
cmp
test
out
and
or
and
fld
push
xchg
fadd
sbb
fidivr
jae
xchg
je
daa
stos
inc
pop
ss
rcl
(bad)
cmp
mov
(bad)
push
hlt
lock
pop
sub
pushf
mov
retf
mov
test
adc
cmp
es
adc
cdq
or
mov
pusha
fwait
repz
push
xor
mov
push
outs
cmp
jae
jno
xor
scas
mov
sbb
add
inc
bound
repz
stc
clc
ds
stc
cmps
inc
fdivr
inc
(bad)
iret
mov
sbb
dec
sbb
add
jmp
xor
movs
add
fidiv
test
or
push
ds
xchg
arpl
and
clc
lds
clc
mov
dec
retf
pop
cs
and
mov
dec
cmc
(bad)
jmp
es
push
pop
lahf
in
push
mov
(bad)
mov
dec
bound
xor
jmp
xchg
dec
dec
cmp
sub
adc
lea
int
mov
mov
jmp
push
loop
or
(bad)
mov
jl
and
sbb
es
pop
movs
je
ja
fld
sbb
fstp
jmp
(bad)
in
pop
mov
test
in
inc
cmp
ja
cmp
icebp
imul
push
adc
xor
dec
cwde
std
test
mov
arpl
xlat
out
icebp
push
xor
stos
dec
xlat
mov
repnz
(bad)
and
push
(bad)
push
lock
enter
icebp
addr16
dec
pop
mov
shr
sub
mov
inc
mov
xchg
retf
dec
and
xor
mov
div
sub
pop
in
mov
iret
cdq
mov
imul
cmp
mov
pop
mov
(bad)
mov
jp
ret
mov
push
add
or
mov
sbb
pop
dec
lods
iret
shl
mov
ret
jmp
sbb
sbb
mov
push
sti
jle
outs
and
ret
sub
mov
mov
cmp
xchg
(bad)
in
cs
repnz
jecxz
and
xor
int3
add
dec
retf
loop
fistp
ins
addr16
call
push
jne
pop
jns
loop
xchg
cmp
mov
adc
push
test
push
or
jg
dec
jb
ret
sub
in
push
mov
fcomp
adc
inc
adc
enter
rol
mov
fsub
mov
dec
pop
xor
aad
or
mov
mov
sub
cmp
test
inc
pop
sbb
dec
mov
ficomp
fsub
(bad)
mov
or
dec
arpl
and
ret
and
pop
(bad)
stc
sbb
mov
js
call
mov
and
(bad)
push
loopne
inc
mov
sti
or
leave
or
retf
les
push
iret
(bad)
idiv
xchg
cs
inc
jp
leave
push
push
sbb
xchg
fisub
outs
xchg
jmp
aam
shl
push
clc
call
dec
sti
bound
fwait
mov
push
mov
pop
push
pop
add
adc
jl
loope
add
gs
int3
or
push
or
push
inc
pushf
bnd
ret
jo
xchg
jb
adc
xor
inc
lds
push
pop
jecxz
arpl
cwde
pop
bnd
sub
mov
scas
es
dec
inc
sub
cli
push
or
aam
adc
dec
sbb
jo
jns
ss
jp
xchg
popf
cmp
(bad)
push
sbb
add
dec
xlat
mov
(bad)
arpl
xchg
fs
fiadd
pop
ins
and
xor
adc
and
inc
sub
or
movs
out
vmovdqa
mov
push
(bad)
stos
add
xchg
xchg
outs
cli
adc
sbb
add
or
lock
pop
movs
add
jle
jae
xor
mov
int3
xchg
cmp
cmp
ds
and
imul
adc
xchg
xor
aas
inc
mov
mov
push
sbb
cmp
mov
sub
inc
push
ds
sbb
add
jle
addr16
mov
cmp
xchg
bnd
test
adc
mov
test
adc
push
add
mov
into
push
jo
push
scas
lahf
xor
mov
push
xchg
inc
idiv
test
outs
out
gs
(bad)
out
inc
sbb
and
pusha
jle
jge
pop
and
jmp
mov
iret
out
push
pushf
out
xor
xchg
xchg
cmp
fsubr
cmp
add
and
push
pop
and
sbb
(bad)
call
shr
lea
cdq
in
jb
sahf
js
mov
or
inc
pop
retf
add
cld
stos
sar
pop
xlat
test
stos
inc
cwde
repz
inc
cwde
dec
jbe
cs
out
mov
jp
mov
jge
inc
repnz
fnstenv
cmovg
test
outs
and
jo
cld
aas
fild
popa
jge
mov
sub
call
nop
out
data16
pop
test
rcl
jg
lods
xchg
cmc
loope
in
scas
popa
ins
mov
or
add
aam
sub
(bad)
and
frstor
sub
into
scas
mov
js
aaa
das
mov
mov
or
sbb
loop
sbb
cmps
add
add
sbb
sbb
push
and
mov
(bad)
lods
jge
xchg
adc
fcomp
push
push
fwait
sub
adc
test
cmp
jle
mov
aam
pop
jo
imul
xchg
and
mov
sti
loope
out
mov
jle
sbb
add
jae
mov
clc
mov
pop
dec
imul
and
xchg
repnz
ins
daa
dec
jbe
inc
or
add
pop
jo
or
cwde
outs
enter
pop
ficom
mov
inc
inc
aam
scas
outs
or
sti
add
dec
jecxz
jle
or
dec
push
sbb
pop
add
jl
add
cs
rcr
pop
cmps
int
mov
xor
mov
mov
adc
mov
arpl
mov
xchg
xchg
jp
jno
icebp
mov
loopne
lods
pusha
or
rol
mov
repz
push
push
and
cmp
mov
mov
push
repnz
clc
cmc
and
dec
hlt
add
mov
xchg
and
pop
jl
add
mov
cli
loopne
scas
leave
je
adc
leave
dec
sbb
test
sbb
hlt
cs
mov
aas
push
fwait
stc
xor
imul
mov
lods
inc
dec
pusha
xchg
cdq
cmps
push
or
dec
(bad)
mov
sar
out
hlt
mov
test
and
neg
cmps
xchg
jl
rol
mov
pop
jp
lahf
dec
out
lea
stc
les
cmp
dec
mov
outs
sbb
jp
push
aas
repz
push
rep
outs
xor
sub
call
jmp
add
cmp
mov
dec
ret
scas
mov
push
mov
mov
sub
cmps
ja
ret
push
movs
fwait
cld
xor
cmp
mov
xor
or
push
mov
dec
jns
aam
dec
mul
popf
int3
fs
js
ins
add
or
xlat
aaa
dec
scas
iret
xchg
xchg
push
test
push
sbb
inc
pop
lock
mov
push
es
dec
jmp
or
cmp
int
add
adc
pop
pusha
adc
daa
sbb
loopne
jns
pop
movs
(bad)
out
add
xchg
outs
jns
cdq
mov
mov
mov
and
cli
movs
(bad)
fild
js
mov
cmps
repnz
cld
out
scas
push
adc
movs
dec
cdq
mov
inc
mov
jb
sub
inc
(bad)
adc
enter
push
mov
imul
adc
adc
sar
add
dec
inc
sub
cmp
shl
or
add
or
imul
je
test
js
call
fwait
nop
popa
mov
add
dec
push
into
lock
idiv
js
or
repnz
push
popa
and
jae
jl
scas
mov
outs
into
jle
cmps
sar
sub
arpl
mov
fwait
out
push
xchg
shl
(bad)
jl
jo
mov
xchg
mov
(bad)
scas
movs
lock
jae
xchg
mov
push
in
mov
sub
sar
sbb
movs
loop
mov
cwde
(bad)
dec
jo
cld
adc
gs
jp
pop
mov
clc
clc
addr16
cmps
in
and
loopne
mov
xor
cmps
sbb
jge
mov
push
in
adc
push
lock
mov
ins
inc
inc
popa
jp
sub
test
sbb
std
aam
lahf
add
and
arpl
mov
daa
cmp
popa
inc
sub
aas
sub
into
or
scas
push
mov
outs
inc
inc
dec
jo
js
mov
sbb
adc
xor
and
scas
test
div
mov
and
ret
aas
(bad)
jno
shl
mov
fidiv
sbb
pop
sti
clc
sub
push
loop
stc
adc
retf
mov
xor
or
stos
xor
shl
mov
adc
add
push
jmp
jg
call
fwait
iret
shr
sub
js
sub
mov
jbe
mov
jns
out
xor
pop
cli
xlat
mul
repnz
mov
mov
xchg
mov
mov
jo
inc
ss
ror
fist
ret
popf
inc
and
clc
xor
rcr
in
imul
movs
in
dec
pop
push
jno
sbb
popa
scas
icebp
lods
push
mov
daa
dec
stos
mov
popa
mov
jae
cmc
scas
mov
or
xor
and
jmp
pop
and
xor
test
cli
xchg
mov
mov
(bad)
rcl
push
(bad)
loop
retf
jmp
adc
or
dec
inc
fsub
out
xlat
in
dec
sub
fdiv
push
in
pop
in
pushf
(bad)
pop
fnstsw
xlat
sti
icebp
sbb
stc
add
mov
mov
adc
loop
sbb
jbe
pop
push
retf
dec
cmc
sahf
cmp
adc
mov
in
out
jp
or
(bad)
jae
and
cdq
xchg
je
xchg
add
(bad)
clc
push
push
into
ror
push
mov
fistp
imul
(bad)
pcmpgtw
hlt
cmp
xchg
iret
mov
dec
push
and
shl
xor
jmp
call
mov
push
xor
push
mov
inc
das
repz
adc
mov
loope
out
adc
aam
imul
and
push
repnz
repz
(bad)
test
fdivr
cmps
cmp
cs
sar
js
inc
sub
xchg
and
jo
cmp
into
cmp
xor
dec
mov
das
scas
mov
push
jmp
adc
push
aas
out
jne
dec
and
pusha
push
jno
cmps
imul
jbe
cli
jb
and
es
and
mov
std
xchg
fistp
rcr
jl
mov
adc
sub
inc
sahf
pop
inc
jo
hlt
inc
test
aas
xor
adc
test
retf
(bad)
call
adc
sub
lods
xor
loope
xchg
cmps
dec
sbb
lods
cmp
inc
icebp
dec
int
mov
fcmovb
cmp
pop
lea
bound
test
nop
mov
add
xchg
out
mov
mov
mov
or
lea
call
fcomp
adc
mov
xchg
cs
mov
retf
mov
jl
loope
scas
cmps
mov
mov
mov
ret
dec
retf
fild
pop
fsubr
pop
dec
loopne
(bad)
push
out
xchg
cs
popa
or
and
add
xchg
lea
hlt
add
mov
push
hlt
test
add
xor
hlt
pop
call
cmps
es
je
add
leave
retf
and
pushf
in
hlt
jmp
adc
jecxz
mov
and
out
push
nop
inc
pop
or
xchg
jbe
push
retf
mov
dec
jmp
xchg
into
pop
xor
test
mov
sti
sub
mov
xchg
sub
lods
iret
pushf
cwde
inc
cmps
stos
shl
sbb
(bad)
rcr
fdiv
lahf
pushf
inc
fisubr
xlat
dec
adc
cmp
push
mov
xchg
cmp
mov
outs
push
sub
mov
je
jno
push
test
rcr
test
or
test
shl
dec
rcr
cmp
or
sahf
mov
mov
sub
xchg
(bad)
xor
dec
and
test
fld
sbb
scas
(bad)
push
aas
ror
data16
mov
int3
ins
in
mov
call
shl
inc
movs
mov
xor
(bad)
in
adc
mov
and
mov
(bad)
add
jge
mov
pop
mov
call
clc
repz
test
arpl
(bad)
mov
pop
inc
jo
inc
in
neg
inc
add
sbb
push
frstor
xlat
push
sbb
ss
pop
arpl
cmps
pop
ret
push
inc
mov
mov
xchg
lock
stc
jae
mov
popf
stc
es
adc
loopne
mov
test
push
mov
xrstor
ss
lahf
push
and
(bad)
fsubr
mov
mov
push
je
mov
fimul
mov
and
(bad)
jns
pop
fbstp
test
retf
stc
es
aas
cmp
ja
mov
movs
(bad)
cmps
add
popa
ss
adc
dec
retf
gs
mov
in
push
or
adc
sti
and
cmps
das
js
out
add
aaa
jbe
xor
sbb
daa
dec
mov
enter
dec
scas
shr
ret
popa
popa
and
mov
pop
and
(bad)
xchg
and
cmp
data16
cmps
jo
lock
xor
mov
jb
fwait
xor
cmp
fcomp
arpl
push
je
sub
mov
lock
jnp
jb
and
lods
fidiv
dec
aas
mov
or
and
cmc
scas
out
push
pusha
inc
ss
rcr
xor
test
adc
xor
retf
icebp
(bad)
mov
adc
addr16
jle
shl
addr16
fwait
call
dec
push
and
dec
jae
imul
popf
jmp
xor
mov
add
cmp
test
ss
out
mov
dec
pop
data16
jnp
in
pop
gs
push
repnz
push
add
ss
inc
fisub
iret
aaa
xchg
or
mov
(bad)
outs
call
mov
ret
pop
xor
or
arpl
test
in
bound
stos
and
stos
cld
retf
pop
mov
(bad)
jbe
out
inc
mov
pop
adc
sbb
mov
repz
retf
and
outs
cs
and
inc
xor
movs
inc
adc
ins
jns
xlat
mov
cmp
sbb
int
loope
pop
xor
outs
cdq
pop
jnp
adc
xchg
sub
xchg
dec
pop
push
adc
and
xchg
push
mov
nop
cmp
fs
inc
pop
loop
mov
sbb
jnp
aad
sbb
imul
retf
and
mov
dec
ins
mov
pop
add
fistp
test
add
jp
cmps
adc
mov
sbb
sub
pop
mov
int
pop
sbb
loopne
(bad)
and
push
aam
iret
add
lods
pop
push
jae
dec
lock
push
fldenv
stos
pop
jle
fsub
mov
mov
jne
xor
fisubr
scas
(bad)
xor
mov
shl
pop
es
xor
frstor
shl
repnz
cld
vprotb
xchg
mov
rcr
repnz
push
or
sub
jmp
in
bound
idiv
repnz
sub
addr16
(bad)
in
cmp
sbb
jb
and
push
es
aas
pop
mov
add
mov
pop
jb
pop
call
stc
popa
daa
out
dec
pushf
sub
cmc
push
cs
xchg
push
sbb
mov
or
popa
pop
jle
movs
sbb
inc
dec
push
div
push
jo
out
(bad)
rcl
out
cmps
fwait
retf
enter
out
std
mov
push
sbb
aam
pop
pop
out
or
inc
pop
scas
xor
aam
xor
push
sbb
out
fs
out
bound
mov
jge
loope
int
push
pop
mov
gs
cmp
fs
sahf
imul
clc
inc
mov
cmp
adc
push
sahf
test
jmp
ror
loopne
sti
sbb
sbb
dec
ret
jbe
xlat
aad
sub
dec
test
mov
mov
cld
in
les
pop
mov
xor
jmp
xchg
jne
cmp
xor
lods
movd
xchg
pop
arpl
push
inc
fbstp
pop
popf
sbb
and
dec
pop
or
inc
push
popa
mov
mov
arpl
dec
mov
test
xor
aam
bound
mov
fistp
mov
adc
xchg
(bad)
popf
jmp
fbstp
test
scas
inc
and
lock
or
dec
add
test
inc
data16
scas
mov
mov
or
xchg
lods
int
mov
mov
clc
ja
dec
sub
leave
sub
stos
cmps
mov
xchg
lahf
test
mov
mov
push
(bad)
jmp
(bad)
movs
xchg
scas
jne
pushf
add
mov
and
mov
xchg
mov
push
gs
sbb
test
cmp
and
and
push
fucomip
lods
enter
pop
jge
movs
pop
test
(bad)
mov
mov
mov
xchg
mov
ds
daa
pop
pusha
fidiv
(bad)
leave
pushf
bound
std
inc
fsubrp
in
push
inc
lahf
mov
into
pop
dec
(bad)
xchg
sahf
jge
dec
adc
pop
inc
and
call
adc
inc
jo
out
fpatan
lods
xchg
(bad)
ret
in
jb
neg
rcr
rol
inc
in
cmp
clc
pop
cmp
jecxz
nop
ror
mov
dec
adc
rsqrtps
fs
cmps
push
inc
inc
movs
dec
inc
jge
dec
xchg
push
xchg
les
arpl
jmp
dec
jmp
sub
jge
jo
adc
jmp
in
mov
pop
icebp
sbb
push
add
in
push
inc
movs
dec
sbb
mov
out
stos
out
arpl
mov
mov
push
cmp
clc
(bad)
stos
stos
hlt
sbb
mov
dec
or
call
adc
scas
cld
sbb
xchg
jnp
push
cmp
cmp
push
adc
nop
mov
push
js
in
xchg
sar
clc
setae
mov
dec
lds
jbe
pop
push
xchg
adc
test
lods
clc
(bad)
popa
jl
stc
out
ror
retf
sub
sub
push
sar
sbb
and
rol
sahf
jb
dec
test
mov
pop
movs
not
sbb
jae
repnz
adc
imul
fiadd
lods
sub
enter
sbb
pop
inc
adc
jmp
push
cmp
push
pop
add
pusha
inc
mov
fnstenv
jno
loopne
mov
adc
xor
jmp
cs
cmp
cmps
clc
dec
mov
cmps
cmp
mov
es
adc
and
sbb
xor
aaa
aam
int3
popf
lods
jle
repnz
pop
inc
dec
cmp
fidiv
dec
adc
xor
repnz
mov
jmp
es
std
adc
and
mul
aam
jne
pop
sahf
fistp
cdq
fidiv
rol
out
mov
ins
inc
inc
xor
sub
mov
sub
dec
inc
mov
sbb
mov
sti
pushf
pop
xchg
xchg
xchg
lock
pop
sbb
mov
mov
std
addr16
pushf
in
loope
int
scas
mov
lods
dec
dec
pop
push
sbb
inc
in
mov
cld
call
in
jp
stos
movs
hlt
hlt
sbb
call
popf
clc
mov
cmp
sbb
clc
inc
pop
sti
jg
stc
les
in
mov
jp
and
pop
popa
lock
nop
pop
and
dec
cmp
dec
xor
and
ins
daa
int3
aas
sbb
xchg
xchg
adc
popf
fmul
enter
js
mov
sbb
repnz
ins
stos
pushf
das
mov
scas
adc
popa
call
nop
or
sub
dec
rcr
inc
mov
clc
ins
xchg
or
aas
fs
sbb
int3
add
rol
pop
mov
neg
mov
cmp
pop
out
shl
call
shl
mov
test
(bad)
fcmovnb
iret
inc
hlt
push
outs
push
adc
nop
jecxz
xor
iret
scas
pop
daa
cmp
mov
fstp
(bad)
dec
dec
(bad)
shl
cmp
movs
lods
sbb
jmp
pop
loope
daa
add
(bad)
pop
adc
mov
push
adc
in
push
outs
ins
pushf
scas
outs
xchg
xchg
sub
xor
cmp
call
mov
in
mov
out
mov
fadd
or
fimul
movs
pop
pop
jmp
push
cmp
add
push
imul
test
mov
xchg
pop
sub
leave
fwait
xchg
sub
iret
aas
push
add
mov
iret
jbe
stos
ja
push
js
push
xchg
add
in
sub
popf
stos
in
lds
or
in
es
shr
(bad)
dec
push
or
mov
popf
ins
in
push
bnd
jno
adc
std
cwde
cmps
inc
(bad)
daa
pop
or
fwait
jl
pinsrw
sbb
lds
in
xor
es
not
xor
call
push
je
repz
ror
fcmovnbe
and
adc
ins
jae
or
adc
dec
or
fscale
pop
or
fisub
add
call
outs
sar
dec
cmp
sub
mov
(bad)
cmp
pop
add
fwait
xor
xlat
or
ins
outs
and
add
repnz
inc
dec
push
sub
xchg
rcl
fwait
xchg
mov
movs
xchg
aaa
pop
add
jmp
cmp
dec
imul
loopne
out
repnz
jmp
nop
pop
mov
cmps
rol
js
jo
push
pushf
loope
ret
inc
js
mov
xor
mov
test
sahf
and
mov
fwait
push
ret
and
pop
in
fnstenv
gs
(bad)
loope
lea
movs
ret
call
hlt
pop
das
cmp
mov
mov
(bad)
cdq
pop
stos
mov
adc
mov
retf
nop
mov
cmps
xor
lahf
aas
sub
and
cmps
jbe
stos
mov
mov
js
jmp
mov
jp
jl
loop
push
fnsave
add
and
cmp
jns
xor
xchg
or
pop
xchg
mov
sub
(bad)
jmp
fcom
dec
addr16
mov
repz
xlat
pop
test
push
retf
dec
sub
sub
popf
add
hlt
icebp
cmp
fcom
clc
mov
mov
mov
in
dec
pop
add
pop
sub
push
repnz
cmp
daa
pop
mov
sbb
inc
xchg
jnp
popa
jge
or
(bad)
cs
mov
pop
loop
lea
imul
or
enter
pop
lods
retf
sub
cmp
adc
cmps
pushf
inc
sub
out
jle
icebp
jo
xchg
push
xor
mov
inc
(bad)
je
mov
push
cmp
mov
sub
stos
sar
xchg
ret
(bad)
inc
mov
(bad)
ss
add
aam
or
xchg
fsubrp
cmc
xor
and
add
add
es
arpl
cld
jmp
xor
out
mov
sub
les
cmp
inc
or
fmul
loope
adc
sbb
sahf
lods
std
ret
repz
in
jl
in
jo
movs
xchg
hlt
clc
jne
mov
xchg
inc
fcomp
adc
cs
push
push
inc
push
mov
imul
jl
jbe
ret
arpl
outs
mov
push
xchg
xlat
push
std
and
lods
(bad)
inc
clc
in
sub
mov
enter
mov
lods
xchg
fst
jg
retf
stos
inc
add
fwait
mov
pop
cmc
ror
inc
ins
mov
dec
push
adc
enter
sahf
mov
push
or
sbb
push
mov
stos
xchg
jnp
xchg
cmp
fwait
ins
jno
xchg
fsubr
in
ins
sbb
add
lods
arpl
repnz
pop
aas
cmp
shl
xor
add
pop
sbb
adc
push
push
add
lds
fisttp
jo
sbb
imul
jb
cmp
arpl
push
aad
pop
mov
cmp
or
fdiv
add
dec
xchg
scas
(bad)
mov
pop
inc
imul
mov
retf
jns
loope
jb
(bad)
cmp
push
test
jnp
sbb
fdiv
mov
cs
ret
addr16
loope
or
dec
sahf
xchg
sub
cwde
cwde
aad
out
mul
(bad)
leave
lds
adc
xchg
or
add
jnp
pop
fsubp
hlt
jae
aad
outs
ret
mov
retf
aad
mov
fcom
mov
xchg
push
ss
push
sbb
mov
adc
test
cmp
or
cmp
sahf
sbb
into
cmps
pop
or
dec
jl
addr16
inc
clc
or
jmp
loopne
outs
sbb
vandnps
ins
lds
jns
mov
inc
and
xor
imul
mov
lock
inc
jmp
inc
(bad)
sahf
imul
retf
fisttp
and
push
outs
sti
fwait
aas
or
jb
mov
js
xor
(bad)
jle
or
cmp
jge
test
fsub
(bad)
cld
pusha
mov
or
jle
inc
sbb
clc
pop
add
pop
sub
or
sbb
icebp
jge
jecxz
jp
mov
mov
inc
or
scas
add
rol
ins
mov
das
mov
enter
fdiv
mov
sub
jecxz
cmp
mov
xchg
sub
cmp
mov
mov
dec
call
or
imul
xlat
xchg
push
daa
sbb
hlt
lea
hlt
out
cwde
adc
jb
int3
(bad)
int3
dec
cwde
mov
loopne
xchg
add
inc
dec
lock
or
pop
inc
test
ror
or
fcomp
and
cdq
push
mov
pop
pop
and
jp
shrd
push
and
mov
jmp
loopne
scas
sti
push
loopne
out
pop
icebp
or
jo
repz
ja
xchg
xor
jecxz
nop
shr
pop
imul
jge
(bad)
ss
pop
pop
loope
dec
inc
sbb
(bad)
jcxz
lods
dec
addr16
sar
mov
or
and
mov
clc
push
and
imul
mov
dec
pop
aas
pop
mov
ins
loope
test
mov
jns
out
push
adc
add
add
mov
push
xchg
adc
rcl
dec
into
ret
adc
jg
iret
push
inc
popa
mov
mov
mov
mov
scas
inc
test
adc
das
cmps
jg
sbb
push
xchg
leave
xchg
or
out
inc
cmc
cmp
jnp
test
aas
jmp
and
inc
push
ins
sbb
cwde
xchg
out
aas
sbb
mov
sbb
xor
pop
mov
mov
aam
adc
sti
retf
lahf
mov
outs
pop
test
pusha
adc
xchg
mov
rol
dec
mov
adc
fs
jns
mov
cmp
int3
sub
jge
test
mov
out
xor
inc
or
lea
repnz
test
(bad)
xchg
push
lahf
sbb
enter
fimul
shl
adc
iret
adc
pushw
sub
jne
retf
mov
mov
test
pop
gs
jno
(bad)
push
mov
clc
lods
pop
jle
cmp
popa
ror
pop
jae
out
adc
or
push
push
add
movs
add
je
push
jle
add
das
dec
lock
cld
das
dec
cmps
rol
mov
xchg
pop
gs
fld
jg
sbb
cmps
sbb
pop
movs
mov
mov
popf
inc
in
stos
adc
or
sub
add
mov
push
test
mov
mov
cmp
ror
jge
and
xchg
sbb
in
pop
(bad)
leave
sti
mov
cmps
loop
jmp
mov
cmp
inc
mov
mov
dec
mov
mov
mov
cwde
test
pushf
or
repz
mov
popa
fst
ret
jp
fidivr
and
cmp
sub
pop
rcr
aam
add
mov
scas
out
pop
cwde
inc
dec
scas
push
pop
ins
and
loopne
push
imul
inc
ds
xor
lds
mov
sub
add
xor
jmp
fcmovb
lods
sub
dec
adc
dec
ror
mov
jns
hlt
or
and
jle
jno
sahf
push
ds
xchg
pusha
jns
jp
push
mov
jge
push
sbb
test
adc
lods
jge
mov
popa
dec
sbb
sub
fwait
sahf
xchg
pop
mov
dec
jae
out
cmps
push
iret
jno
cmp
ror
inc
jle
rcl
fdivr
rol
jb
push
pop
retf
adc
adc
sbb
jno
mov
cmp
cmp
and
les
cli
xchg
in
and
pop
or
adc
pop
xlat
shr
or
(bad)
jle
vmovddup
fdiv
push
mov
pop
(bad)
xor
and
pop
outs
inc
std
cwde
pop
mov
iret
xchg
adc
loop
bndldx
jp
ror
outs
cmp
mov
jbe
mov
enter
cmp
add
sbb
fs
sbb
mov
cli
jl
ins
xor
fldcw
iret
jmp
dec
mov
retf
adc
xor
inc
shl
adc
sub
(bad)
pop
mov
sahf
xchg
sub
cld
and
and
call
or
xor
inc
sub
hlt
adc
xor
push
xor
add
inc
cmp
adc
cmc
cdq
mov
mov
int3
(bad)
loope
inc
mov
(bad)
pop
push
mov
rcl
jge
loop
mov
sbb
sub
inc
pop
mov
hlt
jbe
(bad)
aad
cmp
cld
daa
sub
jb
sub
daa
mov
out
dec
das
jns
add
fs
out
xchg
iret
xor
add
adc
jecxz
jp
fidiv
jns
mov
lahf
adc
jns
(bad)
icebp
xchg
(bad)
(bad)
scas
xor
and
ins
hlt
cmps
jle
mov
mov
fld
inc
sub
or
dec
xchg
arpl
add
mov
pop
adc
jle
out
clc
xor
inc
or
pop
retf
xchg
pop
mov
lods
outs
int3
mov
cmp
in
pop
xchg
daa
stc
bound
xor
xchg
xlat
not
dec
addr16
sbb
or
cmp
mov
mov
nop
mov
ins
(bad)
sbb
mov
mov
add
lea
stos
xor
mov
add
add
jne
pop
jbe
rsm
jns
daa
div
out
cmp
ins
pop
or
mov
popw
sar
adc
sub
push
cmp
in
(bad)
sbb
movs
or
outs
sub
shl
(bad)
dec
xchg
(bad)
mov
cmp
jns
clc
push
dec
push
es
popa
mov
inc
inc
add
idiv
pop
mov
or
cmps
lds
mov
jecxz
or
lea
dec
bound
xchg
inc
adc
stos
repz
lock
es
adc
mov
pop
cmc
lahf
sub
push
imul
xchg
daa
dec
adc
test
push
sub
cmp
xchg
sbb
data16
sub
xchg
mov
ffree
addr16
rcr
sbb
xchg
loope
(bad)
mov
dec
leave
sub
in
not
outs
xchg
loope
mov
push
cmp
cmp
dec
mov
in
mov
movs
sbb
inc
or
cmp
inc
fcomip
or
test
retf
inc
jle
xchg
movs
cs
aaa
or
inc
leave
mov
ss
push
shl
sub
jae
retf
ds
lods
dec
adc
shl
cdq
xchg
fldenv
jp
or
jnp
xor
xchg
popa
xor
push
std
mov
jne
inc
and
rcr
xchg
test
push
xlat
fidivr
mov
xchg
cmp
dec
xchg
lds
int
ins
add
pop
pop
fsubr
dec
dec
imul
bound
dec
rcl
pushf
pop
call
pop
mov
int
sub
cld
lock
xchg
xchg
mov
mov
sub
cld
pushf
ds
push
adc
in
bound
ja
movs
push
sub
ins
pop
pop
retf
xor
ins
test
push
ret
cmp
jne
sub
inc
addr16
push
addr16
stos
lock
je
dec
sub
and
inc
cmp
pop
pop
push
and
mov
push
cmp
sahf
push
hlt
mov
mov
and
mov
psrlw
inc
mov
rol
mov
shl
cmp
mov
push
fcomip
icebp
and
fst
js
test
shl
test
stos
jno
in
dec
cdq
aas
or
add
and
sub
sbb
repnz
pop
lahf
rcr
mov
inc
(bad)
out
(bad)
or
loop
push
test
inc
jae
cwde
push
pushf
xchg
jmp
repnz
jnp
pushf
aas
push
and
daa
mov
scas
ret
and
stos
retf
test
add
js
lea
inc
imul
mov
mov
rcl
sub
out
xchg
jae
(bad)
and
stc
aad
cs
std
inc
jb
inc
or
mov
and
push
(bad)
in
pop
inc
cli
xchg
sub
sbb
adc
or
cli
(bad)
push
ret
cli
xchg
jecxz
mov
or
sub
jae
sti
frstor
ss
fild
adc
add
pop
mov
and
call
int3
dec
movs
push
sbb
in
or
push
and
imul
jb
test
out
shl
in
lods
js
inc
test
popf
lock
mov
scas
mov
sbb
mov
cdq
jae
cmc
add
sub
sub
les
mov
jae
push
stc
push
das
mov
js
cmps
retf
inc
(bad)
inc
int
in
pop
and
push
mov
stos
xor
mov
loop
std
and
std
sbb
xor
fiadd
fs
dec
into
xor
mov
or
cli
pop
mov
jmp
out
dec
fs
mov
(bad)
cmp
in
outs
mov
inc
dec
repnz
scas
xchg
aaa
cld
or
ficom
xlat
loop
aad
cmc
mov
arpl
shr
lahf
sar
add
push
cmp
cmp
ds
adc
dec
les
jbe
sub
xchg
scas
ja
mov
lds
stos
xchg
pop
push
xor
aaa
mov
sbb
cli
(bad)
lahf
test
fisubr
cmp
enter
dec
push
push
fs
(bad)
jo
cmp
(bad)
(bad)
add
aad
mov
jno
std
addr16
add
(bad)
ror
xchg
cwde
je
pop
adc
(bad)
xchg
add
xor
cmp
sar
rcr
addr16
icebp
je
xlat
shl
sbb
pop
stos
daa
scas
mov
cmp
ror
jne
push
out
ss
xor
lods
pusha
mov
adc
dec
pop
xor
add
movs
xlat
cmp
xchg
or
push
leave
ds
iret
inc
dec
in
mov
rcr
int
fsub
dec
mov
pop
xchg
movs
dec
lds
loop
cmp
addr16
gs
movs
push
and
ror
int3
pusha
and
imul
dec
shl
xchg
sbb
sahf
in
push
mov
movs
sub
add
out
adc
outs
inc
sar
bound
xchg
add
push
aam
cmp
xchg
pushf
jne
pushf
movs
sub
pop
cmps
xor
jbe
test
fcomp
mov
fnstcw
mov
gs
shl
sbb
shl
movs
fcom
adc
adc
jno
loopne
stos
mov
imul
push
sub
rol
mov
fisttp
nop
ja
sub
mov
push
pop
jl
pop
or
repnz
stos
pop
not
mov
imul
or
jg
ins
pop
loope
sub
cmp
xor
out
jo
pop
push
mov
pop
int3
mov
add
ret
pop
dec
in
std
mov
cmp
rol
movs
cwde
inc
inc
sub
aad
mov
es
ds
cwde
xchg
mov
and
xor
leave
clc
or
mov
ret
inc
mov
mov
xchg
jle
jmp
or
mov
adc
and
jmp
mov
std
add
inc
aas
xchg
cwde
dec
mov
cmp
xchg
fbld
dec
pop
adc
push
and
add
xor
cmp
xchg
sahf
scas
or
push
test
add
iret
pop
add
imul
aam
pop
sbb
scas
movs
mov
mov
ja
and
push
xchg
(bad)
(bad)
out
fs
jecxz
or
pop
and
scas
dec
fstp
das
out
xchg
in
aas
and
arpl
and
xchg
jno
ins
jmp
cmp
jb
fidivr
repz
xlat
or
outs
in
push
ins
dec
in
add
enter
jno
dec
and
adc
xchg
adc
lods
mov
cs
scas
mov
inc
in
push
(bad)
mov
(bad)
fst
cdq
test
jne
out
icebp
dec
add
fcmovne
scas
aaa
popf
xchg
or
add
aad
fild
js
stos
aam
pop
xchg
cwde
mul
jae
add
movs
and
and
cmp
adc
ror
pop
outs
sbb
retf
test
xchg
xchg
icebp
inc
out
xchg
cmp
das
fnstsw
loop
and
scas
xlat
std
xlat
push
cdq
fwait
cmp
xchg
adc
pop
fprem
leave
inc
inc
outs
mov
rcr
shr
jle
mov
sbb
js
test
cmp
out
sti
mov
pop
(bad)
std
popa
mov
(bad)
cmc
das
lahf
bound
call
add
jecxz
mov
pop
loopne
mov
scas
mov
dec
out
arpl
popa
adc
sbb
mov
loop
cmp
das
or
cmp
(bad)
out
pop
or
das
adc
sbb
mov
jnp
mov
push
test
movs
jno
xchg
push
inc
aas
and
cwde
fist
sbb
xchg
dec
mov
mov
push
dec
push
mov
sbb
js
pop
and
or
sbb
push
cmp
inc
pop
xor
aas
(bad)
daa
lock
loop
cmc
xchg
test
jnp
inc
mov
adc
hlt
imul
mov
xchg
sub
clc
push
pop
test
shl
lock
leave
or
jge
or
jo
cmps
jne
retf
xor
pop
mov
push
cwde
or
push
daa
sub
xchg
shl
xor
xchg
ins
out
push
cmp
mov
and
lods
int
sub
and
daa
pop
inc
xchg
inc
jno
sub
add
jp
sub
pop
shr
lahf
pop
js
inc
sbb
les
call
loope
dec
mov
pop
dec
mov
out
int
xchg
hlt
aaa
(bad)
sub
movs
fdivr
cli
cld
mov
add
and
mov
pushf
pop
sbb
mov
(bad)
cmps
xchg
repz
sbb
fwait
push
jg
sbb
movs
mov
dec
fistp
fadd
fmulp
mov
movs
cmp
cdq
pop
jb
mov
inc
js
dec
cmp
adc
shl
or
adc
xor
xchg
jno
mov
neg
out
cld
inc
ins
sti
lahf
sbb
cli
shl
in
mov
push
movs
shr
inc
add
retf
and
push
repnz
mov
mov
je
mov
cld
fidiv
mov
(bad)
sub
stc
and
mov
inc
mov
cmp
or
and
out
pop
mov
dec
lock
ret
sub
inc
iret
rol
xchg
jge
mov
test
int3
xlat
in
push
imul
cmps
or
xchg
dec
or
je
jno
cmp
push
ss
dec
call
or
pop
test
cmp
sahf
mov
cmc
ds
mov
jae
add
mov
jo
je
cmp
xchg
ds
outs
xor
sub
mov
out
jb
daa
lahf
mov
je
and
xchg
push
add
xchg
repnz
mov
fwait
imul
test
or
jecxz
(bad)
and
dec
ret
pop
sbb
pop
rcr
(bad)
inc
stos
pop
mov
xor
test
mov
jo
jle
js
sahf
add
adc
fidiv
sub
mov
push
xor
fist
inc
dec
shr
movs
test
hlt
cmp
shr
lock
repz
jp
retf
pop
cli
lds
or
dec
pop
ret
jl
out
push
fcom
retf
ds
mov
xor
mov
xchg
in
shr
cld
pop
inc
inc
jnp
cwde
push
cmp
jno
scas
inc
test
mov
lahf
pop
mov
dec
and
aad
dec
inc
sub
mov
adc
repnz
xlat
jo
mov
mov
sbb
(bad)
adc
lods
or
adc
ins
shr
(bad)
in
xor
sub
xchg
xchg
mov
ret
and
out
pop
cmp
and
aam
stos
mov
push
out
es
ficomp
lods
clc
ret
fld
imul
pop
das
jmp
adc
ja
sub
mov
mov
out
rcl
addr16
shl
sub
rol
xchg
xchg
mov
stos
adc
ror
nop
jae
stos
mov
aas
pop
and
repnz
xchg
sub
loopne
fwait
jmp
aam
jmp
fadd
stc
lds
scas
lock
xor
dec
icebp
or
mov
mov
js
cmp
xor
or
stos
mov
xor
lea
xor
sar
div
nop
in
cmc
pop
inc
add
mov
std
fsubr
test
cmp
test
sub
cmc
adc
sahf
add
test
adc
sbb
cmp
push
movs
push
mov
sbb
les
(bad)
jnp
push
xchg
pop
sub
fmul
jp
call
dec
aad
sbb
ins
call
jmp
push
sbb
addr16
xor
fisttp
mov
xor
pop
call
stc
sbb
int
or
sub
push
xor
shl
and
fbstp
fimul
outs
in
mov
mov
sub
daa
xchg
(bad)
nop
cld
push
std
push
or
ret
xchg
or
sub
(bad)
fdivr
stos
add
xchg
xor
jns
pop
es
cmp
test
(bad)
pop
mov
in
push
push
les
dec
sti
xor
daa
xchg
cli
pop
sbb
xor
pop
fcmovbe
push
push
daa
ja
xor
pushf
push
lock
ds
aas
xchg
shl
jno
or
or
pop
adc
cmp
or
pop
sub
cmp
std
inc
mov
(bad)
sbb
pop
loope
xchg
pop
sbb
pusha
mov
movs
inc
push
push
jo
leave
cdq
pop
test
mov
mov
out
adc
ja
cmps
xor
push
cmp
loop
mov
hlt
cmp
cmp
cwde
inc
aam
(bad)
or
pop
(bad)
pop
daa
sub
(bad)
ja
cmp
mov
xchg
pop
cmp
cmc
div
xor
outs
jne
lahf
inc
mov
mov
in
push
jmp
add
arpl
inc
retf
cmps
jle
mov
daa
dec
arpl
push
and
push
add
aad
push
je
leave
loopne
packsswb
imul
xchg
ins
push
aam
adc
jns
test
pop
out
fmul
xor
int3
push
retf
inc
movs
and
mov
adc
fisub
xor
dec
imul
push
imul
call
pop
(bad)
loopne
(bad)
aam
and
push
ds
cld
test
daa
or
xchg
not
cmp
adc
add
pushf
jecxz
aam
push
adc
es
or
jg
leave
test
pop
mov
push
call
nop
std
add
mov
imul
shl
pop
sar
pop
or
xchg
pop
in
xchg
fild
dec
add
push
or
dec
out
adc
iret
mov
loope
sub
into
fnstsw
std
or
mov
hlt
scas
cmp
loopne
add
(bad)
fadd
add
fs
mov
sub
idiv
es
daa
aad
call
and
xchg
or
mov
das
jecxz
lods
stc
mov
ss
out
inc
jns
jle
stos
mov
or
push
sbb
mov
mov
scas
adc
mov
cmp
jb
mov
push
and
sahf
out
push
aam
(bad)
cmp
icebp
inc
xchg
add
add
jo
sbb
adc
ins
cmp
push
sbb
hlt
scas
movs
dec
in
ds
es
pop
nop
mov
pop
or
cmp
sub
sub
lods
vhsubpd
sub
mov
xchg
xor
lahf
mov
xchg
arpl
dec
fist
inc
popa
movs
sub
dec
stos
call
xor
dec
jbe
sub
mov
scas
(bad)
xor
fnsave
sbb
jb
jbe
ficomp
or
pop
inc
sub
stos
test
pop
retf
sub
int
leave
cmps
cmp
add
add
jmp
rol
fadd
adc
std
(bad)
lea
jnp
cmp
fwait
gs
jne
(bad)
lea
add
or
in
xor
mov
inc
out
mov
push
into
xor
pop
fimul
mov
stos
aaa
mov
adc
movs
sbb
retf
jno
adc
outs
cs
cmp
jbe
mov
in
repz
lods
mov
fcmovnb
jmp
lods
adc
sbb
adc
cmp
and
mov
mov
stc
add
aad
movs
jle
iret
pusha
inc
xchg
pushf
loopne
inc
js
popa
(bad)
cmp
inc
imul
push
xor
iretw
pop
jp
xchg
fwait
ins
xchg
mov
test
sbb
mov
dec
pop
pop
sbb
jp
cmp
enter
mov
push
sub
imul
rol
sub
aas
das
xor
pop
aad
sub
mov
push
sub
jecxz
rol
aad
jbe
mov
dec
movs
pop
jnp
jp
jne
cmc
sub
inc
add
outs
pop
in
sub
dec
cmp
ins
mov
mov
push
test
lock
rcl
push
shl
leave
inc
popf
inc
test
mov
ret
sub
not
call
and
mov
add
(bad)
fild
mov
or
test
scas
or
ficom
add
out
in
push
push
cmp
out
mov
movs
and
bound
xchg
mov
pop
sbb
and
(bad)
mov
mov
popa
jp
fsub
mov
outs
les
fwait
jne
dec
mov
pop
xor
mov
cmp
fadd
adc
xor
pop
movs
sub
aas
ins
aas
fdivr
jne
push
push
into
xor
add
call
mov
jne
pushf
hlt
adc
mov
cwde
pop
imul
retf
or
mov
push
mov
sti
cmc
sub
or
test
es
xchg
js
loop
cmp
xor
call
fsubr
pop
mov
lahf
add
mov
cmps
fwait
adc
or
movs
test
sbb
iret
inc
pop
cmps
xor
xchg
mov
push
lods
sbb
mov
xchg
and
lods
cmc
inc
adc
push
jo
inc
repnz
dec
mov
mov
rol
fprem1
ja
popa
sub
add
push
(bad)
mov
clc
fild
cwde
rol
ss
sbb
cmps
dec
or
cwde
movs
arpl
dec
std
in
mov
mov
or
imul
lods
mov
into
cwde
xchg
pop
cwde
out
add
push
mov
dec
push
adc
out
inc
sti
les
or
jnp
mov
pop
add
xchg
sbb
xor
ret
outs
into
into
push
push
xchg
adc
sbb
movs
push
cwde
fsubp
xchg
push
(bad)
movs
call
jg
into
and
push
cli
aaa
aam
and
pop
(bad)
and
and
dec
imul
jae
inc
cmps
data16
fcomip
cmps
fdiv
imul
add
popa
sbb
xlat
jp
test
mov
inc
sub
packssdw
fimul
cmp
test
xchg
lahf
mov
cdq
push
adc
pop
ficomp
push
adc
(bad)
in
repnz
fwait
push
xchg
int3
jg
xor
pop
mov
add
jmp
pop
dec
add
lock
rcr
fsubr
sbb
lock
stos
cmps
mov
leave
fs
mov
cs
mov
inc
jb
pop
pop
xor
adc
sub
cmp
dec
lahf
inc
mov
js
es
fisubr
pop
adc
scas
in
loopne
sbb
jbe
ins
popf
int
out
dec
ds
mov
retf
mov
push
pushf
pop
push
stos
jle
or
add
push
xchg
or
je
sub
xchg
adc
loop
dec
fsubr
or
ja
or
xchg
mov
and
jecxz
adc
dec
mov
xor
vphaddbq
xchg
dec
iret
inc
pop
jge
jl
ror
push
cmps
addr16
ins
push
push
outs
push
push
jns
fild
inc
lahf
xchg
pop
fisttp
aad
mov
mov
sbb
sbb
dec
add
jle
scas
mov
pop
in
sbb
test
rcr
test
push
inc
xor
rol
jmp
sti
jne
mov
mov
cmps
in
inc
xor
fadd
sub
call
or
in
dec
or
cmp
mov
jle
push
xlat
inc
jecxz
mov
jo
fs
push
xchg
jns
aad
cmp
mov
out
mov
pop
inc
stos
inc
jle
xor
nop
int3
push
call
sub
fiadd
inc
add
push
cmp
gs
fld
cmp
pop
xor
ret
inc
jl
std
loope
pop
sub
mov
dec
and
mov
rcr
push
inc
(bad)
adc
push
scas
xor
popf
pop
pop
mov
pop
repnz
or
iret
dec
mov
and
xchg
shl
(bad)
dec
enter
mov
dec
pop
and
dec
push
ficomp
(bad)
jo
jno
dec
pop
pop
jmp
sbb
mov
fmul
(bad)
(bad)
jmp
mov
push
mov
ror
ret
ja
push
xchg
push
pop
movs
aas
outs
fcom
into
hlt
push
jg
das
inc
dec
test
cmp
inc
cli
div
fnstcw
stos
div
jle
inc
jmp
ret
adc
xchg
ins
push
sbb
fsub
in
test
pop
and
ins
out
scas
pop
dec
jecxz
popf
aaa
xchg
(bad)
out
sub
seta
ja
mov
mov
iret
xchg
jmp
sbb
popa
popa
sbb
aam
add
hlt
sbb
mov
test
div
out
ins
std
(bad)
and
sub
movs
xor
mov
scas
(bad)
into
stc
sub
fist
mov
push
jne
mov
loopne
ins
les
mov
cdq
and
cmp
popf
outs
pop
add
test
inc
ins
in
inc
shl
es
sar
inc
fsub
sub
lock
sbb
out
or
inc
jno
lds
stos
dec
push
pop
ret
push
daa
push
sub
jp
and
cmp
cs
and
shl
js
pop
and
jecxz
popf
mov
or
pop
push
dec
adc
cmp
push
xchg
jbe
fstp
fidivr
xor
xor
loopne
mov
ror
les
scas
jg
xlat
jo
jns
dec
pop
fist
inc
cld
mov
mov
adc
aad
jno
in
leave
popa
push
lds
loope
leave
xchg
out
dec
(bad)
dec
sub
xchg
sub
xor
test
dec
mov
pop
cmps
sbb
mov
aad
fcomp
and
movs
arpl
movs
cdq
dec
imul
rcl
cld
push
jle
mov
xchg
mov
movs
add
stos
mov
in
and
enter
fadd
push
icebp
test
jns
pop
pop
and
add
scas
movs
lods
pop
push
enter
adc
jne
and
pop
and
(bad)
sbb
mov
out
adc
lahf
clc
popf
push
sbb
xchg
mov
bound
sub
sbb
xchg
push
mov
arpl
mov
mov
(bad)
mov
loope
pop
sbb
jmp
or
sub
das
cmc
push
inc
out
lea
cmp
fiadd
jnp
std
fstp
pusha
cmp
fadd
dec
lahf
inc
cwde
ret
daa
mov
loopne
add
jo
retf
fmul
ja
sub
xchg
lds
sub
pop
ret
jns
fwait
into
dec
call
xchg
das
xor
scas
lods
out
adc
rol
lods
and
frstor
sub
mov
dec
mov
push
push
int3
cmp
sbb
mov
je
aad
jmp
adc
sti
mov
ror
cmp
shl
pop
dec
int3
call
mov
out
in
cmc
xchg
mov
jbe
add
and
icebp
or
xchg
dec
or
ret
mov
jnp
xor
es
fbld
pop
or
adc
ins
xlat
mov
jmp
pop
mov
xor
mov
sub
mov
cli
pop
push
mov
lock
pop
mov
cmp
and
add
sbb
jmp
add
hlt
mov
stos
adc
xchg
(bad)
in
loopne
add
dec
mov
div
push
sbb
movs
in
pop
movs
clc
and
xchg
ss
and
sbb
ins
in
in
cmpxchg
or
mov
frstor
test
xor
lods
sbb
test
fnstcw
hlt
dec
mov
or
cmp
shr
dec
xchg
dec
dec
or
jl
icebp
(bad)
ins
or
sub
and
iret
scas
jns
pop
cmps
xchg
dec
outs
pop
aaa
mov
cdq
jmp
sub
fbstp
jae
push
int3
adc
xor
js
das
bound
mov
adc
imul
iret
scas
cmp
aam
lods
bound
imul
inc
inc
inc
je
push
int3
jp
and
into
dec
les
test
add
push
and
xlat
je
and
stos
ret
jmp
les
or
and
xchg
clc
mov
mov
pop
popf
sub
scas
shl
in
lods
inc
xor
test
inc
mov
repnz
add
cmp
test
xor
cld
push
aas
sbb
sbb
popf
test
shr
sub
scas
nop
xabort
inc
xchg
jecxz
xchg
into
jmp
jp
add
pushf
jns
add
mov
jnp
mov
inc
sub
pop
dec
int
stos
pushf
and
popf
fwait
mov
sub
push
mov
mov
push
add
xchg
sub
mov
(bad)
jp
push
mov
mov
cmps
ret
jmp
mov
icebp
or
loopne
jno
fnstsw
push
gs
sub
std
in
pop
mov
push
stos
push
sub
idiv
push
into
mov
adc
sub
xchg
sbb
mul
cli
cmp
test
sub
inc
sub
mov
mul
inc
(bad)
fild
das
dec
pop
mov
mov
aam
arpl
shl
adc
mov
push
jp
sub
cmps
push
dec
pushf
add
pop
cmp
cmp
sub
xchg
and
call
pusha
pop
or
pop
xchg
cld
(bad)
lods
or
inc
(bad)
jno
xchg
and
stc
sub
xor
or
sbb
es
fisttp
std
and
mov
pop
jge
rcr
daa
pop
pop
fst
outs
fcom
pusha
cdq
cs
ins
mov
mov
idiv
mov
push
test
mov
sbb
cmp
shr
push
mov
mov
call
jmp
push
xor
out
rol
inc
sar
cmp
cs
pop
mov
jb
rcr
cmp
or
cmp
jb
sbb
imul
ins
rol
jae
adc
pop
jne
pop
jo
rep
sub
jmp
cld
aaa
sbb
cmp
fstp
mov
lods
pop
sbb
push
mov
xor
scas
dec
mov
xlat
mov
icebp
div
adc
inc
arpl
hlt
sbb
hlt
add
mov
mov
call
mov
add
xchg
fs
sbb
in
and
aaa
test
sbb
mov
(bad)
cmps
jp
or
xor
mov
or
std
int
xchg
xchg
push
or
outs
fidiv
sub
sbb
retf
xor
inc
xchg
sbb
xchg
or
mov
es
sahf
imul
cmp
mov
(bad)
call
inc
sar
adc
mov
cmps
or
or
or
push
bound
loopne
aam
cmc
rcr
mov
mov
aaa
sub
ret
sub
div
addr16
in
lahf
sub
jns
int
pop
mov
in
hlt
and
(bad)
jecxz
sub
out
scas
xor
scas
xchg
lock
cmp
(bad)
scas
inc
jo
fnstenv
lock
xchg
(bad)
mov
(bad)
mov
xchg
xchg
(bad)
or
cmp
lods
adc
pop
int
mov
cwde
sbb
xchg
sbb
mov
icebp
or
test
(bad)
xor
sbb
dec
push
inc
jle
fistp
push
mov
sub
or
cmc
cdq
test
mov
lahf
ss
xor
sahf
out
push
hlt
das
sub
xchg
jle
addr16
xchg
mul
mov
xchg
sbb
div
shl
sbb
mov
mov
adc
leave
arpl
dec
cmp
sbb
add
push
adc
stos
pop
psubb
cmp
xchg
push
in
inc
js
aam
fisttp
fistp
mov
addr16
fxam
or
and
jno
jns
test
fisttp
cmps
xor
ins
dec
repz
cmps
jp
sub
mov
dec
aam
lods
xor
lods
jmp
(bad)
push
in
call
nop
popa
cmp
ja
pop
sbb
push
jb
scas
push
pushf
js
fsubr
mov
xor
pop
sub
adc
fistp
add
jg
cld
ret
xchg
call
lock
ds
cmp
sbb
mul
outs
lods
push
dec
cmps
push
icebp
pop
in
sar
pop
cwde
push
scas
sbb
cmp
push
ds
dec
sub
lea
xlat
int
inc
or
push
xor
call
mov
mov
pop
call
fld
ins
jmp
jo
sub
popf
dec
mov
and
lods
aad
pushf
sahf
jne
(bad)
sti
dec
imul
div
loop
rol
daa
out
jae
mov
push
jo
mov
dec
mov
adc
and
cli
pop
mov
adc
or
outs
mov
mov
or
outs
test
mov
jmp
sahf
js
cmp
test
scas
pop
adc
xchg
sub
shr
xchg
stos
in
sub
ins
xchg
sahf
mov
clc
sub
and
or
adc
les
xchg
pop
rcr
xchg
cs
adc
in
jmp
jge
push
jge
fwait
xor
mov
xor
invd
pop
out
mov
jg
mov
(bad)
ret
das
std
sti
mov
je
push
das
pop
adc
ret
es
xchg
leave
add
cdq
jmp
cmp
cmp
nop
pushf
ja
data16
(bad)
ficom
fsub
xlat
pusha
jnp
push
int3
ror
mov
bound
ins
mov
fiadd
xor
and
jnp
lds
mov
aas
cmp
into
mov
in
cmp
mov
adc
cmps
pop
loope
retf
(bad)
bound
inc
std
(bad)
jp
pop
aam
rcr
js
test
(bad)
pushf
scas
arpl
imul
retf
repz
lock
jbe
test
pop
adc
std
inc
mov
loopne
inc
shl
or
jnp
aad
mov
les
retf
std
mov
add
inc
iret
fcmovnu
ins
sbb
sti
in
sub
push
jo
jecxz
jl
inc
leave
xchg
jge
loop
or
neg
and
mov
cmp
and
inc
pop
dec
sub
popf
std
aam
js
cmp
push
jge
lahf
adc
mov
inc
ficomp
pop
cli
sub
mov
and
loop
jmp
cmc
xchg
xor
lods
inc
pusha
xchg
inc
or
loopne
in
pop
inc
mov
adc
daa
movs
xchg
fsubr
cld
jg
movs
cmp
lods
and
inc
xchg
imul
push
lods
push
mov
jbe
sub
mov
add
(bad)
lock
pop
out
jecxz
idiv
or
or
xor
adc
into
in
mov
mov
clc
test
dec
xchg
(bad)
ins
sbb
dec
push
mov
ficomp
ins
mov
lahf
xlat
sbb
inc
pushf
xchg
out
fmul
repz
repz
or
cli
es
pop
test
xor
out
icebp
out
inc
push
cmps
fstp
dec
mov
mov
mov
jmp
adc
movs
clc
lods
mov
xor
adc
adc
jmp
and
rcr
add
rol
push
mov
dec
cmp
fadd
pop
out
addr16
mov
xor
push
mov
lea
jbe
rol
inc
fisttp
add
cli
push
jbe
(bad)
int3
push
lds
aam
gs
(bad)
not
shl
jno
add
in
jbe
mov
mov
inc
aam
cdq
adc
aam
xchg
retf
pop
add
retf
das
call
cli
ror
mov
rcr
lahf
xchg
in
ins
or
stos
dec
pop
dec
lahf
call
inc
pop
dec
xor
cmps
rol
cli
or
daa
shl
jmp
push
and
addr16
int3
cmp
adc
add
bound
data16
pop
cmps
int3
mov
push
and
cmp
popa
push
sbb
xor
bound
and
nop
retf
push
dec
repz
dec
test
movs
adc
retf
cmp
pop
iret
test
xchg
mov
lock
pushf
mov
(bad)
ror
lods
fistp
xor
jnp
jnp
push
xor
or
add
pop
jnp
imul
xchg
loopne
adc
sbb
mov
jae
mov
add
arpl
xor
jmp
dec
and
inc
addr16
movs
mov
outs
xchg
xchg
xor
popa
stc
cmps
fcmovnu
into
mov
fbstp
rcr
adc
push
out
pusha
mov
lds
mov
xor
or
mul
fstp
cdq
pop
cmps
mov
xchg
sbb
adc
dec
sub
cmps
dec
inc
lahf
(bad)
int
fadd
dec
cwde
mov
in
sti
mov
cmp
std
pop
push
adc
(bad)
push
in
into
div
inc
push
fiadd
rol
mov
push
mov
cmp
movs
sbb
mov
jbe
push
ds
std
test
inc
ds
lods
out
mov
inc
pop
pop
fstp
scas
(bad)
jge
in
xor
adc
lock
mov
mov
cmp
add
jmp
ret
push
ret
xor
mov
mov
cmp
and
loope
cmp
cmp
into
mov
and
push
jp
out
aas
pop
arpl
jo
(bad)
and
inc
mov
popa
std
in
gs
jmp
or
fcmovne
sbb
push
jmp
cmp
imul
retf
inc
dec
bound
retf
add
movs
loop
or
daa
lahf
rol
in
mov
or
sub
retf
rol
dec
es
sbb
dec
jp
push
mov
mov
inc
cmc
jmp
ficomp
and
lds
cmp
sbb
call
test
xor
jp
psubq
out
into
pop
pop
aaa
cld
aad
rol
mov
mov
adc
pop
mov
add
cld
mov
sub
aad
mov
cmps
and
out
stos
jp
add
push
jno
or
cwde
or
dec
xor
call
ins
(bad)
test
jl
outs
push
ret
gs
sub
sub
adc
shr
(bad)
xchg
jmp
into
sub
mov
and
neg
push
popa
outs
push
and
rcl
jo
mov
xlat
in
imul
cld
mov
sub
adc
xchg
aaa
test
sbb
fdivr
cmp
pop
push
sbb
push
xchg
inc
fisttp
mov
mov
adc
cmp
retf
mov
daa
xchg
je
dec
(bad)
push
mov
cwde
xor
inc
mov
and
xchg
aaa
mov
sub
inc
shl
push
and
(bad)
dec
sbb
shr
or
sbb
jmp
loopne
call
dec
mov
xchg
or
(bad)
lods
adc
(bad)
cmp
xchg
pop
daa
cmp
rol
fstp
xchg
outs
sahf
repz
loopne
and
adc
mov
mov
push
dec
xchg
xor
ss
cwde
ja
icebp
loopne
sbb
dec
adc
les
int
jne
in
sbb
mov
ins
lea
js
and
out
xor
fidivr
and
js
frstor
rol
les
jae
sbb
dec
arpl
ds
ret
in
das
cmps
inc
aas
add
test
int
fld
daa
mov
mov
sbb
or
push
jno
inc
mov
addr16
in
cdq
out
pusha
std
movs
dec
xor
xchg
adc
jbe
and
out
sti
add
in
fsub
(bad)
arpl
mov
mov
loop
scas
adc
mov
sub
or
outs
cmps
icebp
mov
inc
iret
inc
mov
xchg
test
xchg
ins
sub
cwde
out
inc
(bad)
and
mov
ficomp
mov
xor
ins
push
data16
imul
out
inc
push
clc
mov
inc
cmp
and
cmps
in
js
pushf
xchg
cmp
add
into
mov
inc
dec
rcl
test
mov
sti
cmp
stc
hlt
dec
retf
and
cmps
pop
inc
sbb
pop
movs
jae
sbb
inc
pop
dec
stc
fucomip
mov
dec
inc
sbb
leave
movs
cmp
arpl
or
sbb
call
jae
xor
lods
or
scas
push
jecxz
dec
adc
inc
sbb
out
mov
push
jmp
(bad)
stos
cmp
push
iret
mov
iret
sbb
mov
movs
add
sub
out
vmovupd
or
inc
push
ret
inc
(bad)
mov
je
jle
loope
xchg
jmp
fst
xchg
jmp
loop
int
sub
jmp
inc
dec
aaa
shl
pop
push
adc
mov
cmc
ror
adc
lahf
mov
push
adc
xchg
inc
out
daa
mov
or
cs
ficom
inc
iret
push
xor
cmps
adc
test
fsubr
xchg
fsubr
pop
outs
lods
mov
pop
inc
or
mov
pop
add
div
inc
mov
sub
adc
xor
and
jmp
jge
addr16
outs
es
out
jecxz
es
push
out
jnp
nop
retf
pusha
xor
jbe
add
iret
sub
cmc
and
push
out
les
mov
bound
cmps
cmovno
sahf
push
and
shl
lahf
push
dec
cmp
cwde
mov
rcl
sub
sub
mov
xor
jbe
cs
pop
das
(bad)
fwait
mov
in
mov
push
mov
dec
inc
mul
lods
lds
in
xchg
and
add
into
push
jmp
lea
in
pmulhuw
fild
sti
and
jg
xchg
(bad)
cmp
xchg
add
fsubp
ins
or
inc
rol
das
cmps
das
adc
cmps
cld
mov
sbb
movs
inc
repnz
mov
clc
mov
pop
iret
das
mov
xlat
mov
jb
int3
rcl
jl
jnp
adc
xor
ret
in
inc
movs
mov
(bad)
and
repz
mov
xchg
retf
mov
stos
test
dec
outs
cwde
cli
ja
pusha
(bad)
outs
rcl
adc
lock
xlat
or
sti
add
es
adc
jmp
mov
cmps
sbb
(bad)
retf
cmp
push
and
cld
mov
jb
fld
cmps
loopne
pop
cmp
mov
icebp
xchg
pop
fidiv
xchg
pop
jge
mov
shl
sbb
jmp
xor
sahf
lds
fisubr
test
mov
ret
sar
mov
inc
aad
adc
lods
dec
leave
mov
int
(bad)
lock
jb
sub
ror
cmps
push
gs
aam
jmp
(bad)
in
fcomp
outs
inc
out
aas
les
push
xchg
sar
popf
mov
rol
popa
xor
and
ror
mov
jg
inc
nop
daa
or
cmp
popf
setae
fprem1
mov
jae
shr
xor
aaa
adc
nop
adc
fs
dec
dec
mov
movs
daa
stos
nop
push
ins
arpl
enter
mov
out
fnstenv
sub
push
mov
pop
sbb
pop
pop
push
addr16
sti
cmp
jp
inc
pop
mov
out
push
lock
jle
pop
das
std
mov
dec
repnz
int3
and
cmc
pop
stos
je
or
mov
xor
(bad)
xchg
mov
cmc
xchg
jle
inc
cs
or
out
sub
jno
jg
imul
mov
pop
fidivr
clc
loop
stos
imul
adc
ret
das
lods
sub
dec
paddb
fwait
mov
push
xchg
fild
add
movs
das
add
popf
in
pop
aad
or
xor
(bad)
sti
mov
add
inc
and
xchg
pop
(bad)
push
into
inc
test
jne
mov
jb
dec
(bad)
push
dec
pop
fcomip
sbb
xchg
jle
in
inc
aam
hlt
pushf
pop
fs
ret
rcl
scas
jg
sub
inc
jb
fild
test
sbb
and
jbe
(bad)
aam
sar
sub
les
packssdw
pop
xor
inc
dec
outs
and
adc
and
mov
push
ins
jg
outs
mov
xor
push
call
sub
jg
lea
or
jp
mov
mov
int
xor
sub
cmp
push
sti
ja
enter
aad
fdiv
movs
pop
jb
int3
stos
adc
call
adc
rcr
sbb
mov
enter
sahf
add
int3
sbb
sbb
out
(bad)
mov
push
ret
xchg
ret
and
pop
mov
push
shl
and
add
add
mov
and
sub
int
sub
sub
and
xchg
inc
fdivr
retf
fs
es
in
test
mov
pushf
jo
hlt
adc
push
mov
in
call
es
(bad)
or
mov
sbb
add
mov
enter
xchg
iret
shl
jle
fldcw
popa
add
daa
add
int
(bad)
mov
cmp
or
inc
cmps
je
add
daa
add
neg
fwait
jbe
pop
jmp
jno
test
jmp
xor
int
loopne
fxch
or
cmp
and
jge
mov
sbb
jl
jmp
sbb
pop
dec
stc
mov
push
or
sub
test
inc
hlt
cmp
and
dec
cmp
mov
loopne
xor
add
xchg
inc
movs
mov
cwde
or
fld
xor
pop
test
push
jl
mov
(bad)
test
addr16
add
scas
jns
lods
pop
arpl
mov
jbe
test
jmp
dec
imul
or
push
ins
mov
jmp
xchg
cli
dec
dec
pop
sbb
mov
movs
add
outs
mov
push
mov
or
jb
and
mov
int
imul
popa
sbb
xor
push
lock
outs
inc
mov
push
jmp
dec
mov
(bad)
in
lock
cmp
jmp
jae
enter
cdq
mov
mov
out
xchg
mov
call
and
popa
sbb
pop
fwait
inc
mov
push
mov
jl
test
jmp
bound
sub
lods
mov
jmp
dec
stos
push
rol
repnz
data16
pcmpeqd
pop
call
dec
xchg
jg
sbb
mov
cmc
stos
xor
inc
jmp
outs
sti
rcr
lds
clc
adc
mov
pop
stos
pop
(bad)
(bad)
mov
dec
out
shr
call
jp
movs
pop
dec
fs
add
push
mov
aad
jmp
mov
mov
aaa
jns
lds
and
dec
and
jg
mov
rol
dec
pop
cdq
in
loop
test
call
imul
dec
xchg
mov
mov
inc
sub
mov
ja
movs
jne
jmp
mov
dec
add
fs
lods
lahf
pushf
push
and
(bad)
xlat
dec
es
test
in
mov
push
in
adc
imul
xchg
out
or
clc
jp
data16
sub
pushf
nop
xor
gs
cdq
add
push
pop
je
in
push
mov
out
cmp
dec
call
test
dec
xchg
cli
pop
adc
aad
pop
fld
mov
out
mov
out
adc
add
not
jb
push
add
iret
cdq
les
das
fs
not
push
aas
pop
dec
cmp
inc
sti
xor
scas
push
mov
sar
push
or
loopne
js
jno
call
sub
mov
pop
mov
fisubr
out
lods
data16
popa
mov
fst
fs
popa
movs
js
inc
xchg
inc
cmp
imul
test
iret
or
adc
xchg
pushf
imul
mov
push
not
adc
repz
cs
mov
scas
stos
pushf
or
cmp
pop
pop
mov
xor
adc
aas
push
jge
push
and
imul
out
test
push
not
ror
push
add
mov
and
nop
aam
cmp
mov
mov
push
stos
inc
leave
repz
test
adc
stos
ss
sar
int
in
mov
xor
js
mov
sbb
sub
fldcw
cmp
sub
sub
add
inc
out
mov
pop
mov
add
mov
shr
or
inc
mov
mov
push
adc
cs
push
or
or
mov
fidiv
mov
leave
(bad)
push
mov
ins
test
mov
pop
mov
imul
adc
push
pop
pop
in
ds
adc
and
aam
fmul
(bad)
jnp
movs
ins
stos
xchg
dec
stc
mov
int
cwde
sbb
movs
ins
and
or
push
inc
push
(bad)
push
or
aaa
ret
rcl
mov
pop
aad
arpl
jge
leave
sbb
and
mov
xchg
arpl
mov
jbe
pushf
js
pop
xor
xchg
dec
in
stos
sub
jno
sub
mov
(bad)
cld
popa
jge
dec
sbb
aas
mov
or
inc
lahf
aaa
cmp
sub
in
dec
les
xchg
shr
pop
loop
lods
push
pop
xchg
ds
fisubr
pop
push
cli
rol
int3
push
stos
imul
loopne
cwde
or
dec
aas
into
nop
or
cmp
lock
push
cmp
nop
jp
add
aas
xchg
cwde
and
push
add
or
mov
xchg
lahf
pop
mov
cmp
and
retf
repz
stos
out
sbb
push
inc
push
sub
out
fcomp
or
and
or
sbb
inc
dec
sbb
mov
cmps
mov
cmc
fisub
sbb
jae
or
pop
js
push
leave
cmp
dec
sub
mov
sub
cmp
dec
fist
push
(bad)
nop
pushf
cmp
js
dec
test
jmp
xchg
sub
dec
add
and
push
jne
jecxz
movs
lahf
inc
jl
mov
rcl
cmp
inc
pop
sahf
sub
into
bound
mov
lds
and
dec
adc
shl
xlat
fmul
mov
dec
xchg
outs
sbb
loope
iret
mov
addr16
cmp
adc
je
sub
and
jb
mov
mov
in
int3
ja
movs
(bad)
pop
fs
push
or
push
mov
mov
jnp
add
jns
fiadd
loopne
ins
rcl
stos
into
or
sub
dec
div
push
xor
dec
xor
mov
and
imul
sahf
lahf
test
out
add
pop
ins
pop
call
(bad)
ror
mov
jg
(bad)
in
jp
in
inc
pop
fmul
scas
fs
mov
repz
add
dec
in
in
jb
mov
repnz
sub
cld
inc
add
inc
data16
jl
cmp
rol
fild
mov
mov
xchg
mov
adc
je
dec
and
loopne
sti
(bad)
imul
adc
loop
arpl
fstp
pushf
xor
outs
ds
gs
mov
call
test
out
xor
mov
pop
sub
imul
add
(bad)
and
xor
inc
pushf
fadd
out
rol
mov
sbb
(bad)
mov
fdiv
cli
inc
fldcw
(bad)
test
push
dec
bts
fdivr
cmp
or
sbb
lods
imul
xor
push
scas
fidivr
dec
nop
mov
outs
mov
out
mov
leave
add
sub
sahf
and
jnp
ds
and
(bad)
ss
xchg
sbb
sbb
sar
dec
sbb
lea
cmp
movs
iret
mov
push
xchg
cld
xor
(bad)
cli
and
mov
add
xchg
ds
fsubr
div
jb
es
xchg
stc
call
sub
in
bsr
or
jg
pop
adc
out
js
xchg
sahf
outs
jl
cmp
shl
add
inc
xchg
and
add
je
mov
out
mov
retf
jae
cmc
loop
or
sbb
or
dec
pop
add
pop
mov
in
dec
sti
inc
inc
sbb
xor
int3
lods
(bad)
arpl
cmp
pop
push
aam
sub
xor
ret
sbb
mov
in
bsr
push
retf
cmp
and
and
pop
push
scas
jbe
je
je
test
xchg
mov
aaa
xchg
and
pop
or
or
lds
aad
dec
into
daa
mov
in
mov
test
arpl
test
repz
inc
dec
sub
xor
sub
cmps
movs
cmps
jg
cld
jle
mov
cs
ret
lods
push
jmp
jle
pop
pop
sbb
push
aam
lock
(bad)
aam
xchg
pop
sub
pop
xlat
and
rcl
fs
mov
cmp
xchg
test
idiv
pop
push
std
loop
fdivr
xchg
sbb
and
daa
push
add
xchg
cli
adc
lods
xor
loopne
fwait
jge
enter
lods
mov
loopne
add
fimul
in
add
ret
fnstsw
pop
inc
loopne
movaps
lea
in
mov
xor
imul
out
repz
fdiv
hlt
jg
adc
fild
loopne
adc
inc
test
mov
add
and
ja
lods
push
sub
dec
adc
(bad)
out
xor
jle
add
cmp
jbe
push
fcom
cmps
and
mov
lods
test
xor
ret
and
das
or
das
and
or
mov
scas
mov
fs
push
xchg
pop
out
stos
inc
xchg
pop
and
scas
sbb
out
push
jge
daa
int
xor
sbb
push
ds
in
and
int3
or
loopne
cwde
arpl
mov
push
mov
sub
out
inc
and
stos
push
js
push
pusha
call
mov
pop
add
jne
xor
pushf
div
push
(bad)
cli
dec
retf
lock
xchg
mov
xor
fstp
mov
dec
ss
and
scas
mov
test
stos
inc
sbb
mov
pop
mov
sbb
lock
in
gs
imul
fcom
(bad)
inc
sub
shl
xchg
ret
mov
int3
out
test
xchg
cmp
test
test
js
out
inc
cld
sti
xor
leave
push
pop
or
mov
pop
push
popa
add
aaa
push
sub
test
mov
cmp
(bad)
mov
ret
js
mov
repnz
je
std
or
xor
push
and
cmps
test
sti
push
push
mov
push
mov
std
mov
jno
and
arpl
scas
xchg
mov
xor
lea
xor
xchg
ret
fs
in
xor
or
push
fld
dec
retf
aam
push
jo
sbb
and
lock
pop
movs
jnp
mov
xor
pop
call
jnp
mov
std
mov
pop
neg
into
in
sbb
retf
jno
add
add
lock
sub
sbb
cli
mov
sub
jae
movs
lock
mov
shr
pop
xchg
xchg
pusha
retf
mov
loope
mov
fidiv
sahf
mov
add
cmp
in
sar
sub
leave
jle
dec
add
lahf
dec
mov
jp
repz
jns
pop
dec
(bad)
scas
ficom
mov
and
mov
je
out
scas
xchg
xlat
nop
stos
es
int
cmc
inc
adc
std
add
pushf
jns
sub
xor
je
repz
jmp
adc
in
dec
stos
inc
mov
mov
xchg
lock
or
sbb
popf
xchg
arpl
pop
sub
cmp
cld
fstp
mov
cli
push
adc
cli
ffreep
and
ret
scas
icebp
enter
lds
push
popf
test
dec
jae
(bad)
shl
jne
ins
imul
cmp
pushf
mov
sub
pusha
jge
pop
(bad)
xchg
xor
and
enter
jbe
fisub
imul
sbb
jge
jmp
sbb
(bad)
dec
int
and
loopne
push
in
dec
div
call
inc
cli
cmp
xchg
pushf
lahf
movs
lock
cmp
push
in
loop
jb
pop
jmp
iret
popf
sub
rol
cld
lock
jg
push
xor
enter
addr16
pop
arpl
popa
sbb
push
aad
cmp
add
imul
push
enter
(bad)
movs
sbb
push
loopne
jecxz
clc
cmp
xchg
inc
cmp
mov
ficom
shr
and
jmp
jne
jp
outs
push
pop
ret
ins
push
mov
jne
or
in
bound
inc
mov
xchg
fdivr
call
fwait
repz
jmp
daa
mov
fs
inc
or
add
not
xor
adc
test
repz
fsubr
icebp
cs
mov
call
sub
enter
mov
xor
pop
push
in
bound
(bad)
clc
in
lods
and
mov
add
mov
pop
adc
jnp
push
jb
jmp
add
cmp
(bad)
sub
add
stos
pop
push
fisubr
loopne
inc
xchg
jmp
addr16
mov
adc
sbb
xchg
popa
in
dec
mov
or
or
maxps
jnp
pop
fidivr
push
or
and
fist
cwde
pop
mov
in
cmps
dec
repnz
stos
cmp
jae
imul
adc
clc
sub
loopne
stos
in
sub
out
xchg
jb
lea
dec
mov
and
imul
mov
add
add
aas
jo
mov
mov
jl
movs
dec
inc
retf
push
mov
pop
sar
js
mov
in
lods
pushf
test
mov
ins
sbb
arpl
push
push
pop
jmp
pop
sbb
dec
pop
sub
mov
xor
and
clc
push
std
pop
fdivp
into
and
outs
repz
add
neg
cmp
dec
mov
mov
adc
das
push
adc
jns
loope
xor
int
lods
(bad)
sbb
imul
int3
push
clc
pop
fild
out
push
into
mov
push
imul
aad
and
or
shr
test
mov
jne
iret
sub
xchg
loope
mov
fldenv
jbe
xor
jo
mov
mov
retf
and
pop
xchg
push
arpl
adc
repnz
pop
pop
cmp
push
add
cdq
mov
retf
ins
mov
push
sbb
retf
add
stos
push
fadd
repz
mov
mov
ret
mov
adc
cli
dec
and
ins
mov
retf
and
sahf
xor
jecxz
or
aad
jb
inc
lods
stos
push
neg
aaa
mov
frstor
aad
pusha
popa
mov
push
out
pop
jmp
ret
mov
dec
push
inc
sub
dec
(bad)
cmp
adc
cwde
sbb
retf
mov
aam
mov
ret
push
in
ins
ss
add
icebp
lea
sahf
aam
mov
(bad)
test
in
sbb
ret
push
scas
mov
mov
sti
mov
call
xchg
leave
cmp
fbld
repz
lods
lock
or
in
inc
jne
xchg
addr16
cmp
xchg
jno
lea
push
lahf
jb
sbb
enter
test
lock
sub
popf
fsub
jl
ror
jo
add
leave
das
jg
das
adc
sub
ja
pop
enter
cs
cmp
jnp
push
xor
push
and
ror
adc
(bad)
mov
sbb
jl
jle
loope
xor
push
xor
xchg
pushf
or
mov
dec
sub
pusha
popa
cmps
mov
pop
and
mov
(bad)
(bad)
mov
adc
cmps
out
nop
mov
(bad)
out
jno
cdq
add
mov
push
mov
mov
pop
ss
out
aaa
or
adc
pop
gs
add
jge
sbb
scas
push
aam
dec
xchg
mov
mov
jo
or
ja
ja
call
jl
xchg
rol
nop
out
repz
jecxz
int3
repnz
or
retf
in
mov
mov
(bad)
push
das
adc
or
shr
inc
sbb
(bad)
jb
mov
mov
cmp
mov
xchg
out
in
xor
xchg
mov
sub
or
jb
scas
pop
cmps
xor
jg
iret
pop
add
shl
mov
and
aas
sub
jno
cmp
in
push
sub
dec
lock
std
xchg
cld
outs
imul
or
inc
sahf
jne
xor
push
dec
adc
jecxz
cmc
repz
arpl
xchg
sub
out
ja
push
aad
test
loop
push
dec
(bad)
loopne
loope
(bad)
leave
push
cmp
mov
(bad)
aaa
add
cs
cmc
ins
push
jnp
ja
jno
and
jp
inc
sbb
pop
int
mov
add
pop
mov
cwde
imul
je
out
dec
neg
jno
ja
fmul
sub
(bad)
inc
push
mov
inc
aad
and
add
rcr
push
xor
pop
aad
push
cmp
mov
or
push
mov
push
outs
cmps
inc
jb
mov
bound
shl
mov
add
adc
outs
mov
push
push
pop
stos
fcomp
or
loopne
subps
and
pop
scas
fcom
test
add
repnz
loop
mov
xor
enter
shr
push
push
js
pop
rcl
xchg
icebp
push
lods
(bad)
clc
push
push
retf
fimul
out
inc
out
enter
pop
dec
(bad)
jp
cld
ror
xchg
jns
xchg
aam
add
call
jbe
(bad)
cmp
xchg
add
call
sbb
out
in
fdivr
sbb
xchg
mov
push
xchg
mov
mov
popf
rcr
xor
or
jge
aad
pop
adc
sbb
outs
xchg
ins
stos
pop
push
add
sub
cmp
rcl
in
inc
pop
iret
aas
(bad)
out
pop
shr
push
rcl
add
popa
adc
pusha
rol
out
pop
popa
mov
pop
fld
je
sbb
pop
not
or
sub
in
out
jg
jno
lds
and
int
je
lods
stos
pop
cmp
hlt
pop
(bad)
js
mov
sbb
call
test
and
ja
movs
inc
rcl
mov
call
bnd
sub
or
loope
mov
xor
pop
(bad)
shl
out
out
mov
out
daa
pop
xchg
xchg
jge
add
cmp
mov
outs
cs
add
fs
sbb
fimul
xor
xor
mov
xchg
xor
cmp
jns
fist
push
(bad)
cwde
test
shl
pop
mov
pop
mov
mov
cmp
not
test
call
fs
lea
and
inc
push
dec
fwait
pop
inc
jmp
pop
sub
jno
adc
jo
arpl
jmp
pop
cmps
cmp
cmps
mov
or
jns
mov
dec
pop
int3
or
test
loopne
in
ret
jnp
sub
push
mov
lea
sti
stc
and
data16
cmp
shl
icebp
call
jbe
repnz
mov
icebp
cmc
xchg
bound
mov
fistp
pop
test
push
xchg
imul
cmps
sahf
mov
cmp
dec
je
stos
not
repnz
mov
mov
sub
mov
cmp
jge
xor
add
mov
xlat
sar
xchg
aas
loope
jp
jb
pop
inc
sti
add
in
js
cwde
and
jp
dec
retf
mov
cmp
cmp
add
mov
cs
ja
inc
jge
cmp
(bad)
movs
in
clc
imul
xor
mov
test
movs
ds
sahf
mov
add
fdivr
in
in
std
jmp
dec
xlat
cmps
dec
adc
test
inc
dec
mov
loop
mov
and
or
imul
call
ins
pop
gs
push
mov
(bad)
in
lods
push
fs
out
shl
cmp
mov
test
sub
aas
jns
push
pop
call
inc
in
mov
out
xchg
imul
jae
mov
popa
hlt
xchg
popa
push
in
inc
ret
pushf
lea
fistp
xor
mov
jns
ja
push
pop
push
fld
fwait
cs
dec
iret
mov
mov
push
test
mov
nop
enter
dec
jmp
mov
mov
push
xchg
ja
xchg
lock
outs
das
shl
push
in
xor
sbb
retf
shl
adc
cmp
mov
hlt
xchg
data16
inc
pop
in
sahf
adc
inc
cdq
sub
inc
jns
inc
out
(bad)
adc
push
push
adc
(bad)
int3
add
lahf
add
into
pop
jg
adc
mov
sub
cmp
dec
ds
and
jo
outs
or
adc
jae
cmp
imul
rol
mov
inc
mov
push
retf
fcmovne
xor
js
pop
aad
pop
pusha
sti
mov
ss
aad
icebp
push
sub
xor
fwait
aam
mul
mov
aas
daa
push
stos
push
mov
out
push
rcr
not
loopne
jmp
lock
gs
adc
int
fcmovnb
stos
xchg
push
jecxz
daa
or
push
daa
or
rol
lahf
retf
enter
mov
popf
pop
add
mov
xor
dec
int
mov
(bad)
adc
imul
stc
cld
push
xor
adc
fsubrp
cmps
(bad)
inc
fst
sbb
das
(bad)
xor
out
push
xchg
push
cmp
ret
fnstsw
xchg
loope
sub
out
adc
jns
pop
stos
aaa
or
(bad)
aam
mov
ror
(bad)
cld
xchg
rcl
retf
idiv
or
aaa
xor
push
and
fiadd
xor
in
mov
repnz
mov
in
pop
dec
hlt
mov
es
add
out
jbe
xchg
nop
sub
pop
mov
outs
inc
ret
sbb
adc
push
loop
xchg
shr
lock
xor
out
push
test
cmps
popf
adc
div
mov
gs
repz
jmp
add
xchg
add
mov
adc
and
popa
stos
fisttp
inc
mov
add
sbb
mov
inc
enter
(bad)
aam
jb
and
enter
sar
leave
mov
dec
jp
pop
inc
(bad)
(bad)
push
dec
pop
sub
jmp
test
push
popf
ror
inc
mov
test
mov
inc
sbb
fwait
gs
adc
call
rcl
mov
fwait
leave
sbb
lahf
mov
push
dec
sub
mov
hlt
jb
sti
stos
dec
and
mov
stc
scas
sub
fsubr
call
(bad)
fcmovne
in
mov
sbb
outs
pop
into
ins
cdq
add
mov
push
fistp
mov
mov
enter
fisub
sbb
push
out
xlat
sub
repnz
and
mov
xchg
mov
je
je
movs
jno
imul
clc
movs
ret
(bad)
clc
add
adc
and
mov
ficomp
out
xchg
jecxz
and
scas
pop
or
mov
in
out
js
in
push
jge
pusha
xchg
icebp
jbe
call
push
jp
mov
jo
fcmovb
dec
xchg
jmp
xchg
xor
pop
loop
cmp
sbb
or
mov
cwde
mov
mov
test
cwde
pop
or
adc
mov
in
out
nop
jbe
xchg
(bad)
(bad)
xchg
push
and
and
ins
fldl2t
hlt
repz
psllw
icebp
(bad)
mov
mov
xchg
push
pushf
push
xor
inc
lea
dec
jae
xor
outs
movs
outs
pop
xchg
adc
mov
jae
mov
movs
jo
lock
ret
es
pusha
pop
mov
xchg
adc
jg
inc
inc
add
sub
pushf
xchg
repz
fwait
mov
push
and
call
push
(bad)
and
sub
out
test
add
mov
and
cld
push
cmc
and
jp
xchg
xor
mov
add
test
inc
xchg
sbb
fcomip
xchg
popa
cs
push
js
das
cld
cmp
sbb
je
mov
and
fcom
sbb
sub
sbb
call
mov
loop
inc
fdivr
push
test
mov
sub
jmp
inc
test
mov
sbb
movs
retf
add
inc
add
sub
in
xchg
xchg
aas
clc
cmps
movs
pop
mov
in
xor
adc
ret
mov
and
pusha
mov
aas
mov
(bad)
add
fist
repnz
jnp
xor
rcr
sar
nop
adc
stc
mov
jecxz
adc
mov
sub
pop
cli
sti
repz
sahf
test
mov
fldenv
pop
mov
pop
loope
cmp
rcl
pusha
mov
jne
xchg
in
stos
imul
mov
jae
push
dec
dec
pop
mov
mov
xchg
aad
aas
ret
and
xlat
adc
jmp
push
cmps
shr
pop
imul
xchg
add
or
sub
jae
leave
adc
sub
dec
nop
jg
(bad)
lods
add
xor
repnz
daa
push
sub
ror
cmp
cmc
dec
lods
ret
dec
fcomp
push
mov
cli
jae
cmp
jnp
cmp
(bad)
fstp
push
neg
or
dec
mov
aas
test
(bad)
and
loopne
int3
and
jne
arpl
retf
(bad)
cs
stc
in
or
ins
inc
jl
ftst
jne
sbb
mov
adc
push
xchg
inc
popf
sbb
out
movs
dec
push
xchg
lds
mov
leave
fbstp
std
(bad)
or
int3
fbstp
fimul
lahf
jmp
cmp
push
test
push
sbb
ror
cwde
add
scas
in
adc
push
popa
mov
mov
mov
dec
dec
imul
xor
mov
inc
addr16
test
retf
pop
jmp
hlt
jne
jl
xor
mov
out
add
ss
jo
dec
popf
popa
pop
push
push
inc
sub
pop
arpl
cmc
sahf
jmp
aam
arpl
push
dec
cmps
mov
fbld
dec
mov
cmc
mov
and
jecxz
scas
sbb
inc
mov
inc
ss
xchg
fs
push
arpl
push
arpl
mov
ds
mov
icebp
lock
jmp
and
jl
(bad)
mov
inc
outs
sbb
pop
inc
jg
mov
mov
je
jp
sar
push
mov
sti
cli
call
inc
test
add
sub
aas
inc
icebp
pop
(bad)
fxch
mov
lahf
inc
outs
add
dec
daa
int3
push
ja
xchg
push
xor
call
je
push
stc
movs
mov
out
and
call
cwde
sub
push
(bad)
or
add
pop
std
in
(bad)
mov
jae
int
fld
in
sub
sbb
cdq
pop
push
test
in
adc
pop
inc
xor
push
lahf
cwde
les
sahf
dec
inc
neg
lahf
stos
lods
aas
jmp
nop
sbb
push
xchg
iret
xor
adc
cmp
fiadd
ss
popf
repnz
jne
xor
lock
(bad)
jg
jmp
(bad)
mul
sbb
xchg
xchg
cmp
xor
push
push
adc
imul
mov
pop
push
popf
(bad)
out
jns
cld
mov
or
mov
mov
sub
mov
ds
fisttp
mov
fsub
jbe
dec
pop
mov
ins
xor
lock
loope
xchg
sahf
xchg
ins
into
fld
mov
inc
jmp
shl
cmps
mov
push
pop
shl
inc
cmp
(bad)
xor
(bad)
fmul
adc
in
(bad)
xchg
stos
xchg
mov
inc
mov
popa
or
sub
aas
hlt
xchg
mov
inc
in
or
pop
sbb
in
int
xor
adc
mov
mov
call
aam
aad
jns
inc
out
lock
sub
xchg
xor
adc
pop
add
outs
jecxz
dec
add
loopne
xor
sbb
sti
push
stos
nop
sub
add
sub
ror
test
loop
popf
and
mov
int3
mov
hlt
(bad)
outs
add
push
test
and
push
inc
mov
aas
fdivr
fadd
enter
and
dec
mov
mov
mov
inc
aaa
jae
sub
scas
test
mov
cmp
jge
mov
fwait
sti
push
arpl
pop
(bad)
mov
inc
retf
push
sbb
scas
(bad)
(bad)
sahf
in
dec
lahf
repnz
dec
cwde
sbb
or
pop
xor
pop
cmps
in
divps
inc
and
jo
aas
into
mov
clc
fcomp
out
inc
sub
push
cli
aaa
cmp
aas
iret
mov
xor
or
inc
out
jne
jno
cmp
mov
popa
mov
fld
into
addr16
fisub
xchg
(bad)
fld
push
gs
pusha
adc
mov
dec
jmp
mov
mov
cmp
and
(bad)
ds
xor
pop
or
lock
or
sub
rcr
clc
outs
pop
pop
mov
mov
push
dec
lock
xor
ret
clc
sbb
(bad)
mov
sar
mov
stos
ins
push
dec
or
aam
jmp
add
aad
sbb
mov
push
push
xchg
inc
mov
ror
jg
imul
imul
push
xor
jmp
xchg
or
stos
cwde
(bad)
mov
sbb
inc
test
ror
js
neg
es
out
sub
or
xor
sub
dec
out
push
mov
cmp
pop
push
imul
int
xchg
loopne
popa
add
mov
gs
aaa
cwde
and
jmp
xchg
cld
mov
mov
jg
and
stos
pop
aas
dec
dec
mov
push
pop
(bad)
les
aaa
std
add
cmps
mov
cmp
shr
out
movs
xchg
mov
repnz
(bad)
cmp
dec
cmc
sub
dec
mov
and
pop
sbb
push
out
loope
xchg
dec
scas
xchg
ret
das
jmp
push
shl
push
or
inc
push
xor
push
jbe
pop
(bad)
or
jecxz
sub
cmc
sbb
xchg
push
popa
clc
cli
movs
sti
add
adc
mov
mov
mov
fidivr
push
cmps
xor
sub
mov
xchg
add
cmp
(bad)
adc
and
lea
test
cmps
xchg
test
mov
mov
das
call
cs
mov
mov
lock
xor
loope
(bad)
jbe
lods
cmp
retf
aaa
push
mov
mov
jae
or
out
ins
dec
ja
and
xor
(bad)
push
inc
mov
xchg
pop
loopne
das
ds
or
and
jg
in
or
xlat
mov
lock
shl
stos
push
sti
push
imul
jmp
jp
stos
ret
mov
es
inc
push
(bad)
call
xor
and
iret
fist
push
movs
pop
test
shl
fwait
mov
push
push
das
gs
pop
sbb
test
xor
xchg
jne
lea
dec
mov
scas
test
sub
mov
out
(bad)
repz
fimul
xchg
jmp
scas
mov
call
popf
rcl
sub
xor
cmp
jno
mov
dec
inc
int3
pushf
pop
je
inc
adc
or
aaa
jmp
fdivr
hlt
jmp
cmp
into
mov
je
dec
lods
cdq
pop
cmc
pop
lea
cwde
or
mov
cmp
rcl
ds
xor
shl
sbb
dec
mov
aaa
xchg
cmp
mov
pop
je
aad
mov
in
leave
lds
jge
jae
push
shl
shl
clc
fldenv
adc
dec
inc
push
inc
ja
sar
dec
and
jne
push
fs
out
(bad)
cmc
shl
or
out
mov
jbe
mov
sbb
jl
aaa
jnp
mov
mov
inc
adc
add
cmp
ds
mov
lea
and
mov
xchg
mov
fst
jne
aas
pop
fstp
nop
(bad)
mov
sbb
xor
movs
out
test
xchg
sbb
sub
shl
dec
inc
xor
mov
xchg
inc
test
mov
push
in
test
xchg
xor
cmc
inc
add
hlt
xor
out
add
cdq
dec
loope
and
iret
or
mov
push
push
or
cmps
in
retf
lea
push
fcomp
lds
cmps
sbb
mov
adc
inc
mov
lds
sub
das
loop
not
xor
aas
cmp
push
xor
out
push
and
cmp
jne
aas
repz
icebp
data16
ins
fnstenv
push
or
mov
push
push
cmps
jb
jge
mov
pop
out
jmp
sbb
mov
xor
add
outs
faddp
pop
cmc
into
lahf
dec
xlat
in
repz
xchg
clc
js
shr
popf
lods
push
fwait
xchg
adc
vmread
into
fisubr
int
inc
adc
stos
lods
jne
jno
loop
scas
xor
(bad)
push
ficomp
xchg
xor
loope
in
add
imul
scas
mov
sbb
mov
cmp
push
enter
or
lahf
daa
mov
std
and
jae
dec
xor
jnp
nop
xchg
and
or
mov
fwait
inc
pop
mov
mov
mov
fs
push
or
and
cwde
out
push
push
sti
pop
repz
rcl
xor
add
inc
aam
or
xchg
sub
into
sbb
je
fwait
enter
push
bound
xchg
push
mov
mov
retf
adc
sub
mov
cdq
xchg
arpl
imul
gs
pop
pop
test
sub
inc
push
push
mov
xacquire
mov
out
mov
ins
(bad)
xchg
mov
in
cmp
lea
into
lahf
movs
call
mov
in
outs
bnd
fdiv
adc
xor
sbb
int3
pop
test
push
adc
cmp
inc
les
arpl
and
gs
jge
xchg
std
or
rcr
int
rol
pop
je
push
xchg
sbb
adc
dec
sbb
xchg
xor
xor
mov
push
js
fwait
hlt
shl
loope
dec
imul
imul
popa
imul
adc
(bad)
mov
add
pushf
sbb
xor
stc
lods
int3
(bad)
pop
or
gs
jp
fnstenv
sbb
and
adc
cli
lahf
xchg
mov
jmp
jnp
test
js
jno
and
or
add
jecxz
pop
mov
(bad)
mov
mov
mov
dec
mov
sbb
ror
in
pop
and
pop
jecxz
mov
leave
mov
mov
pushf
adc
out
stos
int3
movsx
sub
(bad)
sbb
icebp
sar
or
xor
and
add
fistp
xchg
stos
lods
xchg
jne
je
aaa
in
ret
mov
inc
std
xchg
bound
dec
data16
xchg
push
xchg
mov
mov
mov
jecxz
cs
push
mov
stos
fs
test
(bad)
in
daa
fwait
mov
mov
cmp
in
xchg
leave
ins
cmp
sbb
lahf
sub
lock
pop
sub
js
mov
pop
sti
sbb
outs
pop
scas
daa
adc
aam
ror
xor
lods
mov
inc
push
add
mov
and
push
fs
cmp
aam
mov
adc
in
mov
xor
jb
ret
stos
mov
mov
cs
jle
or
pop
and
test
xlat
loope
mov
jno
push
dec
jmp
inc
inc
mov
inc
push
imul
inc
scas
test
out
popf
dec
int
in
push
stc
jecxz
mov
scas
jne
in
sahf
imul
sbb
mov
mov
cli
mov
pop
in
cmp
mov
cmp
fdivr
paddsb
push
mov
jne
rcr
daa
js
adc
dec
add
dec
nop
call
pop
mov
mov
js
nop
pop
and
mov
loopne
jge
cmp
stos
loopne
mov
lahf
pop
stc
lahf
xor
std
xchg
push
hlt
xor
xor
adc
mov
ins
cmps
sar
frstor
push
lods
cdq
xchg
sbb
lods
adc
push
ins
xchg
jmp
mov
sbb
mov
out
and
mov
or
add
pop
and
adc
mov
mov
fwait
sub
(bad)
outs
pop
cwde
std
jmp
(bad)
rcl
aam
imul
cmc
push
fimul
imul
mov
cld
cwde
or
xchg
enter
inc
daa
xor
(bad)
push
mov
mov
mov
sub
test
je
sub
neg
push
or
and
dec
cmp
or
pop
ins
out
inc
jmp
jb
fiadd
addr16
outs
mov
daa
mov
cmp
rol
pusha
in
daa
jmp
aam
adc
fs
push
popa
test
aaa
stos
in
fisubr
pop
pusha
add
jle
inc
mov
ins
jmp
sbb
ins
xchg
cmp
fcom
ins
pop
stc
ret
ret
sub
pushf
fmul
pusha
lods
stos
rcr
push
mov
sub
jg
ret
(bad)
jg
icebp
pop
adc
xor
or
not
cmps
clc
jecxz
cmp
pop
xor
inc
pop
lock
fwait
popf
mov
fild
cwde
push
inc
idiv
mov
cs
adc
popa
lods
test
pop
xor
adc
pop
mov
das
sbb
sti
jmp
iret
pop
arpl
jl
xchg
sub
aam
inc
aaa
sub
cmps
mov
jmp
mov
push
push
xchg
cmp
jb
inc
add
push
push
cmp
jne
daa
sub
fs
fsubr
jns
jl
add
pusha
ss
jl
push
gs
mov
call
or
sub
into
mov
scas
mov
jle
in
xchg
fs
es
lods
pop
pop
adc
bound
or
xchg
(bad)
push
mov
jns
in
sahf
pop
sti
jmp
es
in
sub
lods
jge
inc
or
gs
(bad)
sbb
push
sbb
dec
fcomp
les
adc
lea
or
pop
pop
sub
pop
cmp
mov
dec
les
sub
adc
mov
cs
rcr
xor
sbb
jmp
in
data16
mov
shl
fiadd
ins
or
inc
sbb
fs
xor
xchg
pop
pop
pop
out
inc
movs
fistp
and
lock
xor
cdq
push
dec
mov
fsqrt
mov
or
dec
or
outs
lods
stos
cmc
adc
fs
or
dec
xchg
cmp
jnp
iret
fwait
push
frstor
retf
and
ins
pop
aaa
cdq
js
fidiv
fstp
imul
pop
push
jl
adc
sub
mov
push
and
add
pop
mov
cmp
aaa
mov
inc
rcl
dec
mov
pop
sbb
jmp
push
jmp
imul
stc
sbb
outs
adc
retfw
jge
sbb
fnsave
iret
popa
mov
mov
jne
movs
or
adc
or
dec
(bad)
cli
pusha
mov
lahf
mov
out
in
adc
push
int3
rcr
enter
das
add
mov
stos
rcl
rol
lock
jge
mov
adc
inc
xor
es
push
pop
int
scas
xchg
adc
cmp
and
test
cdq
dec
push
sub
popf
jne
rol
imul
dec
call
movs
frstor
push
call
fcomi
imul
dec
xchg
push
pop
bound
sbb
mov
adc
loop
mov
push
clc
(bad)
loop
mov
mov
comiss
mov
or
movs
inc
imul
cmc
scas
in
inc
stos
shl
mov
dec
outs
inc
lea
std
dec
int3
pop
loop
jl
or
sub
mov
dec
into
(bad)
sbb
gs
mov
mov
sub
mov
fdivr
mul
cmc
mov
inc
call
jns
pop
xlat
adc
mov
int3
fcomp
lds
repz
mov
dec
push
add
sub
adc
and
ficomp
sub
pop
mov
out
cmps
jne
jg
rcr
mov
xlat
nop
cmp
jns
mov
jle
jo
pop
out
out
scas
fisttp
cmp
fnstsw
fisubr
mov
dec
movs
mov
mov
inc
xor
bound
add
mov
dec
dec
sub
in
push
test
add
sbb
and
outs
gs
mov
inc
(bad)
sti
adc
scas
xor
dec
out
dec
jns
jno
push
and
jp
retf
sub
test
cmp
nop
fist
les
jno
ins
in
jp
mov
sbb
movs
call
or
xor
loop
dec
rcl
les
jbe
mov
and
jb
int
clc
mov
pop
push
adc
add
fnstenv
mov
mov
icebp
lea
cmp
mov
inc
push
clc
shl
hlt
inc
lea
mov
push
cmp
mov
loopne
inc
add
fcom
sub
(bad)
mov
js
and
mov
sub
inc
icebp
aaa
ror
ins
in
push
aam
outs
xor
movs
test
sbb
ret
mov
and
mov
scas
in
loope
cs
pop
sub
dec
fistp
and
push
push
push
inc
(bad)
addr16
ins
inc
dec
push
pop
cmc
ja
cmp
lods
loopne
std
push
add
dec
mov
mov
push
and
rol
mov
call
sbb
out
or
or
pop
dec
push
popf
and
cmp
xchg
cdq
cmps
mov
push
cli
xchg
(bad)
rcr
retf
inc
ins
aam
xor
mov
jno
cwde
adc
mov
outs
pop
and
fadd
(bad)
jl
push
sbb
jne
loope
call
fcom
(bad)
les
xchg
cmps
dec
inc
pop
stc
jno
mov
aad
add
pop
or
jl
mov
rcl
inc
(bad)
mov
cmc
outs
int3
pushf
add
mov
mov
add
xchg
sub
test
hlt
adc
sti
inc
sub
inc
repnz
lods
jmp
mov
mov
sbb
popf
es
out
jnp
movs
icebp
adc
out
push
call
call
mov
xchg
mov
dec
cmc
pop
mov
or
movs
cdq
into
clc
fdiv
lods
jecxz
repz
aaa
or
xor
icebp
dec
sbb
xlat
add
jns
jns
(bad)
jnp
out
mov
add
nop
adc
imul
leave
jns
daa
or
pop
mov
mov
(bad)
jb
jbe
fwait
sahf
xchg
push
xchg
mov
xchg
icebp
mov
mov
stc
adc
mov
cmp
inc
jg
pusha
pop
jecxz
push
inc
cwde
aam
add
arpl
fidiv
jge
data16
mov
into
xor
xor
jl
mov
call
cmp
mov
mov
mov
cli
bound
mov
pop
sbb
mov
dec
sbb
mov
ins
sar
mov
cs
pop
fcomp
inc
and
xor
(bad)
mov
add
push
(bad)
dec
mov
int3
xlat
pop
pop
mov
push
cmp
fwait
out
inc
cmc
or
mov
cmps
in
cmp
xchg
jo
pop
repnz
icebp
shl
mov
xor
xchg
and
into
sbb
retf
jg
lods
xor
int
mov
adc
mov
outs
outs
es
sbb
rol
pop
nop
cmp
or
cs
mov
sub
test
sbb
cs
dec
(bad)
das
adc
and
xchg
int3
cmps
pusha
imul
push
fidivr
imul
adc
add
neg
push
pop
mov
mov
adc
add
mov
dec
pusha
mov
movs
add
mov
cli
stos
cmps
cmp
imul
mov
and
test
lock
out
sub
pop
adc
pop
add
outs
mov
sbb
xor
mov
sub
xchg
push
ins
cmp
int3
xor
pushf
inc
add
jb
scas
sub
sub
xchg
push
jb
and
fadd
xor
fadd
(bad)
fs
mov
popf
add
xchg
push
fld
jl
sbb
push
mov
fimul
pop
pop
(bad)
sahf
fadd
hlt
ror
out
enter
fldenv
outs
mov
add
inc
loop
and
push
sub
xor
cmp
mov
push
repnz
gs
sub
mov
test
call
mov
enter
push
retf
mov
ret
in
mov
scas
sbb
dec
lock
mov
xchg
daa
leave
mov
out
iret
jne
sub
ror
fstp
push
fsub
fistp
cwde
add
push
or
test
lds
mov
or
pop
mov
push
mov
pop
sbb
out
loopne
jbe
jne
push
rol
adc
pminub
std
mov
ret
jo
pop
inc
jmp
shl
test
mov
loop
stos
mov
pop
dec
enter
cmp
shl
stos
sti
data16
inc
(bad)
ja
pop
fcomi
pop
jp
and
enter
jb
and
(bad)
lods
daa
sbb
inc
rep
pop
test
jl
xchg
fst
(bad)
xchg
imul
hlt
mov
ret
ss
repnz
or
sbb
ins
push
fstp
sar
ja
je
xor
ret
jmp
push
aas
cmps
jbe
push
mov
nop
mov
outs
(bad)
mov
in
loop
mov
or
ja
aas
sub
sub
push
addr16
leave
callw
pop
jg
mov
dec
dec
sbb
inc
js
movs
pop
iret
jg
fbld
cmp
dec
xchg
jp
cs
aam
cmp
push
mov
pop
hlt
sub
xchg
rcr
data16
std
xchg
int3
jle
lds
sbb
lahf
adc
in
push
sbb
jmp
inc
mov
pop
cmp
loop
sar
lahf
inc
or
inc
inc
sbb
or
or
out
push
leave
lea
sbb
dec
push
ret
inc
mov
mov
out
jb
xor
outs
fild
jbe
shl
cmp
repz
inc
les
dec
les
(bad)
hlt
mov
dec
xchg
cli
or
ja
or
int
retf
mov
xlat
repnz
xchg
loope
imul
pop
mov
pop
ins
push
adc
jmpw
cmp
(bad)
lods
jmp
or
test
int3
inc
in
aam
cmp
int3
mov
pop
sub
sahf
int3
add
rcr
xchg
adc
nop
nop
scas
fild
jb
pusha
nop
or
push
out
pop
inc
div
and
push
cli
xchg
fstp
pop
in
xchg
push
not
jmp
push
inc
xor
shr
scas
repnz
sub
es
gs
into
xchg
cmp
jmp
xchg
push
cs
test
mov
cs
jl
pop
mov
jo
movs
es
pop
popf
mov
pop
out
sbb
stos
sbb
(bad)
pop
jnp
lds
push
push
sub
or
test
(bad)
cwde
xor
(bad)
call
and
addr16
rcl
or
or
lods
and
fs
add
pop
push
ja
cmps
lods
mov
loop
ret
mov
xchg
mov
loop
xor
test
ficom
lea
int
xchg
inc
out
pop
dec
adc
(bad)
popa
in
ret
mov
call
repz
adc
push
shr
add
cdq
pop
dec
popf
out
or
aaa
adc
ret
popa
stos
mov
inc
dec
(bad)
retf
imul
push
std
ret
cwde
mov
mov
cdq
push
loopne
jmp
and
ins
xor
sbb
retf
mov
pusha
cmp
jnp
js
fild
mov
push
xchg
mov
mov
push
adc
outs
xchg
mov
icebp
sbb
xlat
inc
test
out
sbb
push
mov
fbstp
sar
popa
ins
iret
dec
push
pop
rcr
mov
ret
aas
repnz
pop
xor
and
jmp
addr16
cmp
dec
add
ret
gs
imul
jle
sub
clc
dec
in
movs
(bad)
pop
in
in
add
and
cld
iret
aad
lds
dec
xor
fcom
ror
ins
add
js
div
push
mov
in
adc
in
or
pop
lds
es
fcmove
aad
add
cwde
(bad)
sbb
add
xchg
jmp
fcmovnbe
test
or
inc
push
pop
mov
pop
inc
xchg
call
lods
sbb
cmp
shr
shr
fild
xchg
scas
jns
clc
jmp
mov
test
aaa
cmc
adc
shl
aad
xchg
add
sub
lock
test
add
inc
lods
push
lock
pop
(bad)
mul
pop
jl
pusha
push
cli
xchg
cmp
cmovns
adc
sub
mov
out
xor
sub
xchg
adc
mov
mov
xchg
push
adc
mov
movs
fstp
sar
pop
push
cmps
jo
inc
or
dec
cs
mov
icebp
add
or
jnp
xor
mov
scas
mov
les
repz
idiv
mov
lds
or
jno
mov
pop
mov
stos
xor
mov
(bad)
sub
mov
jo
call
(bad)
xchg
pop
adc
cmp
jmp
mov
pop
sbb
cmp
xor
cli
mov
mov
inc
jns
stc
xor
add
loopne
push
fnsave
sub
stos
fdivr
xor
pop
xor
test
xchg
adc
jo
ret
sub
pop
fstp
std
inc
out
es
xchg
jmp
sub
add
(bad)
stc
frstor
inc
stc
jge
adc
icebp
dec
cdq
add
xchg
out
cmps
and
retf
mov
test
adc
push
add
div
ins
xlat
inc
aas
dec
xchg
xchg
stc
sbb
repnz
sbb
jle
ds
cmp
in
mov
add
cdq
and
jmp
iret
or
fpatan
cld
stos
xchg
popf
dec
sub
and
adc
push
xchg
nop
cmp
lea
in
dec
cmc
xchg
jne
push
sbb
inc
dec
addr16
pusha
repz
cmp
sar
in
out
in
xchg
aas
cmp
imul
test
popa
gs
fnstcw
cmp
test
pop
std
out
adc
push
mov
mov
dec
xchg
lock
sahf
loopne
cli
out
inc
push
retf
lods
xchg
cmp
mov
mov
add
mov
pop
adc
adc
xor
pusha
and
imul
outs
jae
jb
fild
icebp
ins
cwde
or
aaa
cld
add
(bad)
sbb
pushf
adc
inc
out
push
ror
mov
or
adc
and
push
aam
cdq
add
not
movs
jo
outs
test
jecxz
xchg
mov
add
fmul
jecxz
pop
push
push
jl
push
daa
mov
inc
sbb
dec
aaa
and
or
fadd
loop
dec
inc
cmps
sbb
adc
jle
xor
imul
in
or
mul
adc
sar
icebp
outs
add
xor
rcr
lahf
arpl
sub
push
sub
popa
or
scas
jmp
jmp
pop
push
sub
aam
add
pop
cmc
mov
sar
fdiv
xchg
and
not
mov
popa
ss
scas
lahf
fidiv
mov
inc
pop
or
mov
movs
jecxz
inc
stc
je
xor
outs
cwde
stc
mov
inc
test
lods
push
xchg
call
adc
pop
push
loop
jb
nop
cli
and
xchg
js
stos
lods
sbb
push
in
ja
icebp
pop
cmc
pop
stc
mov
nop
ror
aas
unpcklps
pop
jmp
sbb
sub
mov
push
dec
mov
and
arpl
(bad)
js
das
add
stos
mov
xchg
push
enter
xor
dec
hlt
shl
pop
(bad)
daa
scas
or
test
mov
das
test
jecxz
adc
adc
enter
stos
inc
jmp
jno
cmp
pop
nop
cmp
leave
mov
dec
inc
dec
repz
in
or
pop
in
sub
dec
sbb
xchg
cmp
inc
sub
mov
mov
lahf
mov
sub
daa
dec
sahf
sbb
xor
test
les
loop
xchg
ins
(bad)
or
fwait
int3
daa
jns
(bad)
sbb
pop
(bad)
out
dec
jae
add
xchg
xchg
ins
jae
lock
es
test
jmp
lds
sbb
movs
sti
sahf
int
mov
popa
push
jnp
mov
push
aam
movs
ins
das
mov
push
jbe
or
repz
imul
push
ins
sbb
pop
add
in
xchg
inc
jp
mov
push
or
pusha
mov
mov
sbb
(bad)
hlt
stos
jmp
iret
sbb
mov
mov
rcl
cli
inc
test
mov
pusha
sub
sbb
fidiv
(bad)
sti
aas
stos
icebp
cwde
and
jmp
out
cwde
stos
ret
inc
xchg
js
sbb
ret
popa
lods
retf
jns
into
data16
arpl
je
jg
mov
push
dec
xchg
jle
xchg
mov
mov
cwde
mov
icebp
mov
mov
xor
pop
dec
sbb
push
pop
mov
pop
xchg
cdq
jmp
xlat
push
xchg
test
dec
xchg
mov
sti
aam
xlat
sub
or
dec
les
or
inc
(bad)
xor
and
data16
push
call
out
jl
arpl
call
data16
ss
es
xor
shl
or
fisub
int3
xchg
or
repz
retf
push
scas
sahf
fiadd
xchg
(bad)
ins
ja
test
ret
stos
retf
fwait
lds
jne
sub
inc
mov
sbb
rcl
jnp
loopne
into
das
inc
cmc
or
jle
cwde
unpckhps
sub
dec
sbb
xchg
(bad)
ins
lea
scas
aas
je
or
aad
adc
movs
jnp
jno
dec
push
or
add
aam
cmps
scas
push
fbstp
loope
adc
xchg
inc
daa
retf
sbb
shr
xchg
pop
rcr
mov
add
mov
std
dec
pop
fistp
sti
or
xchg
aas
dec
mov
dec
push
jg
cs
push
(bad)
cs
xchg
or
and
or
xor
cmp
cmp
push
jmp
fnstenv
in
fld
repnz
mov
fmul
loope
scas
dec
punpckhbw
mov
inc
add
push
out
xor
test
fdivr
shl
dec
xor
push
dec
test
(bad)
sti
sub
data16
stc
cmc
(bad)
mov
jb
hlt
xor
mov
out
nop
sbb
xchg
ja
or
ins
ficomp
fild
aad
imul
call
arpl
xchg
add
repz
bound
cmc
mov
sbb
lock
add
xchg
jnp
push
cmp
push
push
cmp
push
mov
cmp
sbb
js
push
cmp
pop
mov
cmps
pushf
movs
je
xor
(bad)
cli
push
dec
xchg
gs
sub
movs
xchg
jl
or
test
lods
clc
int3
(bad)
xchg
pop
sbb
mov
sub
aas
int3
xchg
or
pop
inc
cmp
cmp
in
loopne
push
(bad)
mov
xor
rcl
mov
or
std
xchg
(bad)
xor
cmp
add
cmp
call
sbb
out
pop
lock
mov
adc
fisub
aam
sbb
fsubrp
leave
popa
ror
out
imul
cdq
adc
scas
loop
jae
and
outs
lock
push
mov
push
jo
sub
mov
mov
fs
jl
inc
sti
sbb
sbb
dec
ss
sub
les
call
(bad)
sub
gs
jne
cmp
mov
cmp
inc
mov
mov
gs
pop
dec
(bad)
push
stos
fisttp
xchg
pop
jp
add
sub
push
jg
mov
lahf
retf
and
sti
sub
pop
pop
mov
loopne
mov
xor
sbb
cli
pop
lahf
addr16
cmps
jecxz
loopne
pop
call
dec
sti
out
lock
fcom
cmp
xlat
pop
sub
sbb
mov
sub
ins
rcr
retf
mov
outs
loopne
sub
neg
sub
push
xchg
mov
dec
in
jecxz
adc
adc
mov
mov
mov
cmp
repnz
fidivr
nop
call
mov
scas
retf
aam
fld
mov
dec
inc
jmp
pop
imul
push
mov
leave
enter
add
mov
lock
ss
fldenv
(bad)
(bad)
xchg
dec
sbb
push
scas
ror
lods
jge
or
das
loopne
mov
popa
pop
mov
mov
repz
mov
adc
mov
test
cs
mov
test
dec
test
add
inc
inc
cmp
addr16
leave
fwait
xor
push
(bad)
hlt
pop
jns
stos
mov
pop
jmp
das
jmp
xchg
pop
ins
and
dec
mov
hlt
mov
inc
sar
loop
add
movs
cmps
out
rcl
dec
inc
popa
cli
sub
shl
dec
repnz
repnz
sbb
jle
pop
add
es
mov
xor
ins
rcr
or
jecxz
push
std
sbb
ins
adc
dec
idiv
cld
xchg
jmp
iret
jbe
leave
lock
mov
test
mov
add
inc
and
(bad)
cwde
inc
jmp
pushf
pop
retf
mov
inc
in
or
mov
pop
cmp
jge
aad
scas
ds
jp
xchg
fist
std
fidivr
push
mov
les
push
adc
lahf
mov
adc
jp
mov
mov
xchg
push
xor
adc
add
div
jp
(bad)
in
xor
sub
push
pushf
and
xchg
and
sahf
aad
in
(bad)
(bad)
loop
imul
ss
and
push
lods
mov
pusha
or
ret
dec
jbe
int
or
mov
push
or
jns
xor
mov
imul
lods
sub
adc
mov
add
aad
add
(bad)
call
cmps
xchg
movs
add
mov
mov
jge
leave
imul
(bad)
or
and
icebp
cmc
int
fisttp
push
ret
pushf
adc
add
sub
fiadd
lods
pusha
test
lods
ds
in
repnz
xor
mov
(bad)
push
sbb
(bad)
leave
pop
dec
mov
mov
lods
and
imul
cmp
test
fs
adc
(bad)
and
mov
xchg
push
add
mov
pop
mov
fstp
out
(bad)
movs
xor
mov
cmp
xor
push
pop
test
cmp
call
mov
xlat
fimul
xchg
mov
mov
daa
or
cdq
outs
mov
xor
rcl
jmp
mov
cmp
pop
sub
into
or
jg
fild
mov
adc
or
mov
lods
(bad)
fidiv
mov
pop
addr16
dec
or
ss
pop
fs
mul
sti
fstp
pop
inc
in
sub
cmp
retf
push
dec
and
cmp
cmp
push
xor
cmp
add
mov
and
adc
movs
adc
hlt
mov
pop
mov
add
or
out
xchg
pop
je
div
retf
adc
mov
add
xchg
xchg
inc
mov
mov
inc
push
sti
xchg
sub
pop
pop
nop
icebp
jge
or
push
rcr
(bad)
and
outs
out
sbb
sub
daa
push
dec
sub
cdq
adc
(bad)
pop
or
or
dec
jno
mov
adc
call
mov
sbb
mov
aaa
outs
push
out
out
mov
arpl
sub
fidivr
call
adc
jmp
jge
and
dec
mov
mov
mov
cmp
mov
adc
dec
in
or
popa
out
sub
pop
adc
jne
xchg
or
jne
enter
in
dec
mov
or
imul
movs
dec
aaa
jp
fwait
mov
xchg
or
call
in
cmp
mov
mov
and
inc
xor
adc
mov
mov
pop
dec
push
ret
mov
mov
sub
cmp
mov
jmp
test
scas
fdiv
loopne
fwait
push
lea
cmp
stc
xor
fs
dec
(bad)
pushf
int3
xchg
push
scas
mov
mov
std
pop
jns
inc
retf
or
mov
test
mov
jmp
or
sbb
aas
shr
mov
dec
idiv
out
pop
inc
enter
int3
mov
pop
jns
sub
dec
jno
push
scas
xchg
xor
enter
adc
arpl
jo
(bad)
pop
fnstsw
out
pop
pop
call
dec
mov
stos
mov
push
cmps
neg
xor
pop
stc
sub
push
out
jl
dec
lock
jnp
fsubr
push
mov
mov
or
mov
and
or
shl
add
fsubr
sti
hlt
repnz
loope
int3
pop
mov
mov
std
fadd
cmp
icebp
cmp
ret
add
add
sub
outs
mov
pushf
cli
out
cs
inc
dec
int
lds
repz
cdq
push
xor
fimul
dec
xchg
pop
jns
mov
and
xor
test
(bad)
call
outs
inc
cmp
sub
aam
xchg
xchg
mov
sub
idiv
lods
std
sub
cs
xchg
mov
bound
inc
push
cmp
jo
call
lods
in
sbb
ret
fsub
shr
cmp
repnz
dec
xchg
jns
pop
add
sbb
mov
mov
fst
push
lods
xlat
jge
mov
ins
add
pop
test
cmp
jb
pop
iret
loope
fucom
pop
jp
jmp
ins
movs
sbb
in
lds
push
xchg
jle
adc
fwait
test
cmp
pushf
(bad)
mov
cmp
pusha
arpl
gs
xor
aaa
dec
cmp
mov
jecxz
cmp
and
mov
test
in
and
ror
aam
add
push
cwde
mov
add
mov
xor
pop
ret
enter
sub
lahf
mov
pop
lds
fnstcw
rol
push
ret
test
push
jmp
sub
jl
retf
pushf
enter
inc
xor
jnp
stos
loopne
fucom
clc
mov
loope
xor
movs
adc
cwde
adc
pusha
sbb
hlt
retf
sbb
stos
inc
and
mov
dec
fcom
out
or
mov
sti
out
jmp
inc
or
mov
repnz
lahf
mov
idiv
pop
cmps
pusha
jge
or
fs
shl
fbld
outs
inc
(bad)
int
push
(bad)
lock
mov
pop
fsubr
xlat
mov
movs
cmp
jns
push
or
jl
imul
sbb
dec
mov
icebp
sub
aaa
xchg
mov
fist
adc
push
push
and
dec
jbe
push
int3
adc
cwde
add
fs
cmps
dec
push
mov
mov
popa
and
outs
(bad)
and
popa
push
movs
repnz
cdq
call
pop
and
ins
test
and
cmp
(bad)
jnp
sbb
cmovne
xor
(bad)
jmp
xchg
jg
cli
xor
outs
lahf
cmp
cmp
int3
mov
loope
outs
int
dec
jmp
or
and
aaa
dec
sbb
call
call
pop
dec
adc
cld
(bad)
scas
int
mov
pop
dec
sbb
fisubr
call
mov
adc
push
scas
iret
push
inc
jecxz
mov
shr
or
enter
xor
fdiv
cli
push
mov
sti
xchg
aad
jmp
(bad)
xor
inc
das
mov
sub
pop
inc
cli
retf
mov
scas
push
jmp
aad
pop
out
(bad)
cs
mov
mov
adc
call
aas
sahf
(bad)
dec
mov
xchg
(bad)
jbe
ret
pop
or
call
and
mov
aam
cmps
pop
dec
lods
push
mov
jo
jnp
mov
cmp
lahf
ds
stos
fcmove
or
push
push
xchg
call
sbb
mov
ret
mov
or
sub
imul
loope
cmps
xchg
into
mov
dec
fcmovnu
movs
inc
add
daa
inc
in
(bad)
dec
inc
and
fucomi
out
repz
add
lods
test
cs
int
pop
and
loopne
stos
cwde
inc
xor
out
stos
div
inc
pop
cdq
jo
dec
int3
jo
cwde
push
push
jl
push
inc
imul
int
and
mov
xor
pop
jle
mov
rcl
sub
mov
lahf
jae
push
jbe
jns
pop
push
mov
xchg
ins
out
push
(bad)
fistp
fst
shr
mov
inc
mov
xchg
out
sub
push
sbb
pop
mov
imul
inc
xlat
or
mov
add
sbb
mov
sbb
ret
mov
or
sub
in
inc
cmp
dec
imul
cmp
jbe
js
cli
xchg
loope
cmc
adc
popf
(bad)
xor
rol
(bad)
cmp
cmp
and
mov
addr16
call
jae
pop
test
or
or
push
push
push
push
stos
cmp
leave
mov
(bad)
stc
push
jns
mov
dec
or
adc
pop
leave
fistp
dec
(bad)
or
les
adc
mov
adc
jo
mul
sbb
mov
lahf
adc
sub
retf
scas
stos
and
ds
push
pop
adc
sbb
dec
(bad)
aam
sbb
dec
test
out
cmc
cmps
pop
pop
(bad)
pushf
and
jp
and
inc
in
mov
xlat
imul
in
xchg
sub
rcr
cmp
clc
bound
and
inc
js
lods
test
dec
pop
aad
adc
test
jae
je
xor
test
pop
fistp
adc
jp
xlat
mov
cmp
cmps
dec
lods
jmp
call
or
sub
sbb
jae
mov
mov
fisubr
jg
sub
(bad)
jp
mov
call
cmc
pop
jp
sbb
fild
(bad)
mov
rcr
and
loopne
rcr
cmp
mov
pusha
imul
mov
inc
popf
test
cmp
pushf
aaa
shl
hlt
pop
(bad)
stos
sbb
jbe
pushf
add
daa
movs
xchg
sbb
cli
adc
dec
outs
push
push
enter
mov
push
(bad)
(bad)
sahf
fdivr
xor
push
aas
(bad)
test
mov
das
or
dec
jp
cmp
cmp
mov
pop
test
lods
jle
mov
int
mov
adc
div
mov
es
jnp
push
iret
mov
sub
inc
pop
xor
jl
add
retf
sbb
ret
and
sbb
sbb
inc
dec
aad
into
int
push
out
imul
mov
ret
and
xchg
adc
(bad)
fs
add
xchg
outs
loope
and
cwde
pop
loopne
pop
leave
or
mov
mov
std
or
cs
add
in
ficomp
mov
aad
or
pop
movs
cmp
mov
out
mov
fwait
jmp
(bad)
call
inc
xlat
out
repnz
imul
(bad)
in
sub
bswap
push
and
or
dec
sar
iret
ss
xchg
dec
dec
ss
icebp
nop
jl
push
inc
fist
int3
outs
(bad)
ror
adc
jbe
push
imul
jecxz
lds
mov
iret
jne
add
fbstp
add
push
pop
movs
test
call
sub
sub
loopne
jno
movs
lods
xlat
xchg
mov
or
and
das
push
ins
push
fsubrp
pop
jge
sbb
dec
and
pop
pushf
mov
add
neg
lds
dec
mov
cwde
test
movs
hlt
not
sbb
xchg
iret
adc
pop
rol
pop
and
ja
jmp
push
push
pop
dec
or
test
xchg
in
lahf
popf
(bad)
push
cmp
mov
cs
outs
stos
iret
jp
stos
mov
mov
repz
sbb
cmp
shr
sub
retf
xor
adc
fcomp
push
stos
loope
jl
push
ret
and
gs
jge
gs
jne
cdq
mov
adc
xor
leave
adc
xor
and
mov
lea
repnz
xchg
scas
out
push
std
sahf
add
cmps
mov
push
xchg
(bad)
xor
lock
vphaddwq
sub
data16
mov
mov
push
xlat
pop
fidivr
add
jno
call
test
xor
mov
jp
sub
xor
sbb
xor
std
xchg
sbb
test
mov
push
xor
lock
mov
repz
retf
pushf
loop
sbb
in
cdq
adc
add
data16
or
cmp
sahf
mov
dec
loope
cmp
pop
rol
push
loopne
retf
stos
pop
pop
sub
pop
cli
mov
fwait
pop
cmp
and
test
jno
jmp
adc
push
cli
stos
pop
add
test
xor
clc
clc
sbb
rol
ja
mov
sbb
int
popa
mov
mov
sbb
out
adc
and
in
xchg
inc
icebp
dec
shl
add
sbb
push
add
or
ret
mov
push
and
je
mov
add
(bad)
arpl
lea
call
aas
shl
sub
cmp
jne
and
xchg
xor
push
std
loope
shl
gs
fadd
adc
mov
cmp
fwait
pop
mov
addr16
(bad)
sub
dec
imul
xchg
sub
xor
and
enter
adc
(bad)
icebp
mov
mov
test
shr
test
mov
and
jb
stos
icebp
aas
nop
mov
jg
inc
or
or
scas
into
adc
pop
repz
inc
retf
out
out
cmp
pop
sbb
add
jno
mov
int
stos
scas
push
cmp
pop
je
fnstenv
outs
sub
add
sub
cmp
sahf
pop
test
test
dec
sbb
shr
jns
in
xor
fcmovb
push
imul
popa
mov
cmp
sub
int
lock
das
dec
dec
scas
sub
ins
mov
push
pop
mov
imul
mov
xchg
push
dec
or
pop
nop
movs
cli
jb
push
mov
pusha
ins
mov
pusha
loopne
xor
loopne
loop
in
and
inc
das
retf
fbld
jle
jbe
add
xchg
leave
sub
push
and
retf
loopne
xor
call
fs
mov
mov
cmp
movlps
push
pop
icebp
add
outs
dec
cmp
div
sbb
fld
cli
ins
retf
cs
fadd
jno
xor
cs
mov
std
xchg
movs
and
loop
fwait
jno
stos
ror
cmp
lock
or
sub
test
mov
stc
ins
mov
and
mul
inc
and
or
std
gs
data16
inc
pusha
stos
xchg
push
sbb
adc
fucomip
cmp
ret
xor
xchg
or
dec
xchg
repz
lahf
dec
fild
mov
(bad)
hlt
cmp
aaa
jmp
inc
mov
sar
jge
add
xchg
jnp
mov
cli
pop
pusha
mov
ds
jo
(bad)
out
lock
bound
cmp
pop
bound
in
push
inc
bound
aas
push
lds
enter
sbb
mov
test
js
pop
cmp
xchg
pop
das
and
inc
cmps
push
scas
out
push
scas
(bad)
mov
mov
xchg
sub
cmp
and
sbb
add
adc
sub
pop
xchg
pop
jnp
call
sbb
out
mov
inc
xlat
dec
pop
dec
in
bound
lock
into
fmul
and
jo
repnz
jne
jb
mov
mov
(bad)
pop
add
mov
push
ins
out
push
sar
ret
add
inc
daa
(bad)
in
enter
pop
ins
cli
retf
cmp
adc
and
sub
fwait
repnz
(bad)
aaa
popf
adc
movs
addr16
pusha
mov
(bad)
mov
arpl
adc
ja
add
(bad)
mov
jb
xchg
mov
add
es
cmc
(bad)
ins
shl
paddb
sti
pop
in
test
arpl
or
int3
or
cmps
push
or
sub
or
mov
aas
sub
adc
jae
xchg
nop
dec
(bad)
mov
ins
jle
mov
test
jle
jp
iret
xchg
and
mov
cmc
dec
adc
xor
popf
imul
sub
pusha
pop
or
aas
adc
pop
push
in
push
das
mov
push
sbb
adc
lods
sbb
bound
mov
popa
pop
xchg
add
pop
mov
xor
in
arpl
(bad)
test
daa
pop
gs
xor
add
daa
nop
pop
or
inc
adc
push
test
and
fstp
mov
scas
shl
rcr
fdiv
mov
jae
jmp
(bad)
cdq
(bad)
(bad)
mov
dec
int3
repnz
jmp
mov
(bad)
pop
jnp
inc
xchg
lods
cdq
push
fimul
je
aaa
ficom
xchg
inc
mov
or
(bad)
popa
sub
add
fucom
stos
das
cmp
cwde
fmul
xor
or
jecxz
std
out
cwde
test
cmps
into
adc
sub
sbb
mov
mov
fisttp
adc
out
lods
jb
ret
xchg
loope
or
test
jae
fldpi
and
ss
xchg
or
push
dec
test
data16
adc
mov
hlt
stos
jo
add
int3
movs
pop
fdiv
pop
adc
mov
call
xchg
icebp
(bad)
scas
pop
cdq
cmp
dec
dec
jecxz
and
idiv
loopne
enter
jbe
xchg
fstp
xchg
sahf
adc
sub
jne
jp
sbb
and
push
sbb
and
mov
cmps
mov
ret
pop
pop
jecxz
(bad)
sahf
imul
in
ror
mov
inc
in
xchg
pushf
xchg
lock
mov
ret
stos
and
mov
iret
out
dec
mov
test
repz
cmc
sub
inc
fwait
movs
or
(bad)
pop
mov
push
stc
mov
data16
mov
or
stos
sub
dec
xchg
add
add
cld
daa
or
sbb
fst
sub
cli
or
nop
js
and
sub
xchg
pusha
dec
repz
dec
jmp
test
test
scas
sub
dec
mov
jno
xlat
xchg
lahf
mov
test
icebp
push
mov
lock
fsub
std
inc
add
jle
sahf
inc
retf
aaa
imul
mov
xchg
out
shr
mov
add
ror
dec
mov
add
mov
pop
xchg
inc
mov
cmp
mov
out
push
cmp
pop
hlt
push
sbb
jae
mov
int
out
xchg
xchg
clc
jg
pop
out
inc
xchg
adc
ds
add
ret
int
inc
sub
fsubr
mov
xor
xchg
int3
ds
loopne
aaa
sbb
fs
add
fld
cmp
leave
movs
neg
pop
pop
in
pushf
fst
int
inc
mov
jecxz
aad
iret
cmps
adc
in
mov
jns
xlat
cmc
hlt
gs
stos
sar
mov
xchg
mov
pop
stos
call
push
pop
out
sbb
ret
data16
cmp
adc
cmp
div
fwait
cmp
pop
pop
shr
mov
cs
imul
rol
and
sbb
das
in
dec
outs
ror
cmp
test
dec
ret
xchg
repz
jns
mov
pop
cdq
bsr
sbb
push
mov
mov
adc
rcr
in
sub
shr
in
(bad)
mov
fisubr
sbb
dec
ret
pop
aad
pusha
xlat
mov
cmp
outs
jmp
inc
jae
shl
lock
loope
(bad)
mov
lock
push
shr
rol
js
mov
outs
mov
dec
test
add
ss
fld
hlt
or
cmp
inc
cmp
and
js
cmp
or
fldcw
inc
dec
fisub
jne
out
mov
sar
call
pop
out
or
fnstsw
(bad)
ret
jnp
jge
bound
dec
push
push
adc
xchg
inc
or
les
jno
inc
stos
lahf
sbb
xor
ins
jmp
sbb
stos
add
lods
mov
in
es
adc
pop
jmp
cmp
enter
xchg
sbb
into
xchg
mov
push
ins
sub
mov
add
data16
cmp
inc
adc
pop
adc
and
push
clc
fcom
mov
and
and
(bad)
cmc
sub
xor
xor
mov
ror
mov
add
nop
mov
xor
add
xchg
or
cld
mov
add
daa
xchg
pusha
cmps
push
mov
in
push
loop
jno
outs
repnz
ss
in
jb
dec
jns
out
mov
dec
rol
push
add
or
cwde
leave
xor
push
pop
je
(bad)
aad
rcl
cmp
jecxz
ins
or
pop
mov
ficomp
cli
dec
fcmovbe
ja
fwait
push
(bad)
vhaddps
fsub
jmp
leave
cs
icebp
mov
(bad)
bnd
pop
push
mov
in
sbb
fnstcw
imul
mov
retf
fld
gs
mov
mov
pusha
sbb
in
mov
mov
out
out
out
inc
mov
push
mov
cli
arpl
enter
xchg
mov
fild
inc
push
xchg
xchg
jb
mov
in
mov
or
mov
out
loop
sbb
or
jg
(bad)
mov
mov
cmc
popa
test
enter
arpl
mov
pop
mov
mov
jbe
clc
pop
lds
leave
mov
inc
mov
fcmovnb
lods
pop
push
push
xchg
nop
xor
out
iret
int
aaa
jmp
stc
mov
dec
loop
aaa
retf
int3
mov
mov
call
cmp
shl
ds
mov
add
jnp
rcl
shl
mov
dec
mov
pop
xor
das
sti
mov
repnz
add
scas
jecxz
cli
cmc
bound
jb
pop
xchg
pop
jmp
pop
push
and
repnz
cmc
cli
in
dec
daa
push
stos
dec
sahf
adc
in
inc
adc
nop
and
push
push
jne
mov
dec
dec
xchg
and
int3
sbb
add
xor
daa
inc
shl
pop
push
repnz
je
push
jbe
mov
and
scas
add
aad
xchg
pop
jge
cmp
mov
daa
out
mov
mov
pop
jmp
sbb
mov
and
add
push
shr
push
sbb
movups
mov
bound
pop
test
pop
add
aaa
rcl
xchg
mov
data16
fwait
lods
dec
inc
xor
or
stc
add
aam
arpl
ficom
mov
loop
jns
adc
cdq
(bad)
das
push
cmp
fimul
cmps
mov
ret
xchg
stc
bound
mov
fcomp
add
nop
jmp
jo
in
pop
add
daa
add
js
cmps
ins
data16
ds
mov
mov
loope
sbb
push
mov
push
rcl
and
push
mov
cli
repz
inc
pop
leave
stos
xchg
xor
(bad)
jecxz
loop
and
retf
(bad)
(bad)
mov
push
sbb
ja
lar
je
adc
nop
ss
sub
loopne
test
inc
std
pushf
dec
jp
in
int
mov
int3
cli
cmps
adc
mov
dec
cmc
pop
nop
adc
fwait
adc
mov
mov
ds
cmp
leave
mov
rol
pop
inc
ffreep
mov
or
mov
ret
loop
hlt
cmp
imul
jle
adc
mov
push
fdivr
pop
je
adc
addr16
outs
add
sbb
nop
leave
push
add
stc
int3
dec
mov
adc
in
je
sbb
(bad)
sbb
lahf
pop
push
cld
sub
dec
mov
push
mov
add
inc
lock
jecxz
wbinvd
jecxz
(bad)
xor
mov
sbb
cmps
dec
gs
cmps
dec
push
iret
jae
dec
xchg
sub
pop
cmp
pop
fisub
in
add
pushf
add
cmp
or
mov
(bad)
int3
jmp
xor
mov
inc
xor
cmp
mov
cmp
call
es
mov
test
push
popf
mov
stc
sbb
loope
(bad)
sti
push
pushf
lock
mov
mov
pop
add
sub
call
xchg
shl
jb
enter
lahf
adc
clc
push
sub
sub
xchg
es
and
cwde
dec
int
jp
sbb
pushf
int
cmp
xchg
cmp
(bad)
pop
add
jns
vshufpd
push
sbb
and
stos
mov
add
loope
movs
test
jge
cmp
bound
pop
dec
enter
sahf
pop
or
xor
pop
fbld
mov
int3
cmp
inc
imul
lahf
out
sbb
sbb
mov
or
jp
dec
shl
lods
in
xlat
jge
push
mov
or
scas
ins
inc
addr16
js
push
daa
lds
jle
ret
mov
mov
push
and
cmp
sub
or
pop
adc
jmp
adc
mov
mov
and
mov
inc
sahf
out
call
jge
mov
and
adc
inc
(bad)
jae
pop
push
jge
jle
adc
std
mov
xor
cmc
push
jbe
int
mov
ins
call
jl
fwait
adc
arpl
mov
rol
cmc
pop
pop
push
lods
repz
lock
push
adc
bound
scas
jecxz
xor
mov
fst
pushf
aas
jmp
dec
enter
and
add
jmp
test
sbb
mov
stc
sti
xchg
jne
aas
fbld
mov
or
test
sub
xchg
mov
fistp
rol
adc
mov
les
inc
and
jae
push
mov
add
popf
fild
dec
mov
mov
(bad)
sub
shl
add
aas
jecxz
cld
add
repz
pop
mov
jge
dec
cwde
out
push
xchg
mov
or
sti
sahf
stos
ss
(bad)
inc
sub
and
shl
jmp
cwde
jl
neg
inc
mov
test
and
sbb
xor
mov
pop
daa
dec
les
pop
jne
xor
add
ror
add
sbb
adc
fcom
xchg
xor
or
jno
and
clc
sub
jns
push
mov
pop
xor
int
xor
cmps
push
daa
es
mov
xlat
enter
xchg
pop
fcom
pop
(bad)
pop
jnp
das
mov
fcom
es
dec
push
dec
lahf
pop
(bad)
jmp
mov
scas
cmp
or
je
pop
inc
cmps
jno
cld
loopne
push
inc
call
mov
out
retf
push
push
popa
cwde
jb
and
push
xchg
mov
push
pop
xor
pushf
outs
inc
inc
rcr
sbb
fmul
mov
jmp
mov
ret
imul
sbb
cmps
nop
push
fisubr
jle
add
cmps
mov
jne
test
stos
aaa
mov
jae
lahf
or
push
pop
shl
mov
push
push
xor
xchg
or
jns
adc
xor
mov
retf
arpl
jecxz
mov
sub
jge
dec
es
and
push
enter
lds
mov
push
hlt
add
(bad)
movs
mov
enter
push
or
test
push
xlat
jp
(bad)
mov
mov
jmp
inc
inc
jnp
inc
cmp
shl
ins
dec
into
lock
xor
and
imul
mov
shr
inc
pushf
in
pop
and
mov
test
rol
jae
sub
or
push
and
mov
emms
std
mov
mov
push
call
lods
ret
and
loope
js
pop
int3
sub
sbb
outs
xchg
inc
and
pop
fwait
test
xchg
dec
sbb
in
xor
sbb
adc
idiv
je
std
mov
xor
mov
mov
std
ins
vhsubps
inc
je
int3
push
dec
cmp
push
pop
jns
fcmovnu
mov
stos
pop
fiadd
mov
mov
call
cmp
jg
push
out
mov
repnz
cdq
jg
mov
and
mov
pop
mov
movs
fs
sub
sar
mov
aaa
or
dec
leave
adc
pushf
pop
or
fst
mov
mov
das
sahf
dec
fild
mov
jnp
shr
outs
shl
xor
and
xchg
(bad)
adc
aad
xchg
cmp
popa
mov
jle
cmp
push
jg
xor
mov
mov
test
adc
and
add
je
scas
sar
xchg
test
add
mov
ss
dec
inc
inc
(bad)
and
sub
jne
jnp
inc
lea
mov
rcl
and
sbb
pop
add
or
inc
inc
sub
(bad)
adc
and
mov
sub
outs
mov
add
fmul
rol
push
imul
ror
aad
xor
xchg
adc
arpl
sub
test
sahf
or
sbb
lahf
pop
mov
leave
lods
mov
mov
bound
out
loopne
or
push
and
fnstenv
cmc
lock
or
jno
aaa
lock
xlat
mov
outs
rcr
(bad)
or
mov
ins
push
mov
or
addr16
inc
pop
pop
or
or
jmp
mov
xlat
xchg
cs
adc
outs
lea
xchg
in
cmps
jp
push
stc
inc
repz
xor
sar
or
sub
(bad)
jae
loopne
fsub
nop
and
sbb
push
jge
call
mov
cmp
push
ret
sbb
dec
pop
sti
push
push
adc
pop
push
jp
add
shl
in
leave
retf
cmp
mov
xchg
ret
inc
pop
push
loopne
sub
or
clc
and
xchg
fnstenv
sbb
rcl
(bad)
test
out
mov
(bad)
fwait
add
in
xor
pop
(bad)
pop
movs
test
jns
add
adc
and
pop
dec
mov
push
sub
repnz
xor
dec
ins
cmp
cmp
jae
ss
jmp
mov
hlt
int3
(bad)
adc
test
or
xlat
enter
mov
xor
adc
adc
xlat
sbb
push
add
out
div
add
jno
mov
jl
jnp
and
fcmovb
stos
sbb
add
mov
push
inc
adc
xor
(bad)
lock
sub
mov
(bad)
ds
lahf
pusha
pop
lds
dec
add
iret
mov
pop
cmp
xchg
ret
mov
cs
add
cmp
jb
pop
push
mov
or
mov
mov
pop
cmp
loop
and
int
pop
push
mov
repz
fnstenv
jne
out
popa
je
(bad)
loopne
push
sbb
rol
xor
bnd
add
das
out
popf
sbb
out
movs
iret
call
dec
mov
cmp
ret
es
out
icebp
sbb
ret
addr16
out
lock
mov
in
clc
in
sbb
sti
out
fadd
loope
and
shr
pop
push
out
shl
stos
das
xchg
in
fstp
or
stos
add
ins
rcl
lahf
imul
inc
or
push
out
push
and
inc
fs
jne
push
adc
push
sub
call
xor
push
push
and
test
into
xor
in
fstp
fdiv
xchg
push
mov
xor
sub
lea
xlat
fsub
push
out
sti
mov
jb
jbe
in
outs
iret
inc
rcl
push
push
call
lods
cmp
jbe
(bad)
pop
cmp
jp
loope
inc
cwde
enter
mov
push
push
aad
push
sub
xchg
ds
pusha
clc
xor
jne
add
aam
fistp
xchg
out
imul
lea
arpl
jecxz
cs
in
test
xor
sub
cs
push
leave
cmp
imul
dec
sub
sub
push
adc
jl
mov
adc
les
inc
dec
mov
push
cdq
cmp
cld
loope
ret
sar
pop
dec
xor
scas
sbb
jle
mov
dec
xchg
das
jns
cs
sub
call
es
mov
retw
xor
scas
pop
push
mov
sbb
ins
pop
stc
(bad)
(bad)
rcl
jmp
mov
mov
repz
mov
scas
loop
add
fnstsw
cmps
xchg
fcmovbe
cmps
and
sub
push
inc
or
push
mov
and
addr16
xchg
test
lods
sub
arpl
test
push
jne
loop
cmp
and
push
out
add
pop
es
jecxz
nop
mov
repz
hlt
iret
ins
mov
add
sbb
(bad)
dec
jbe
jg
mov
jg
fdivr
dec
icebp
test
pusha
sahf
out
shr
mov
loope
jae
imul
shl
je
jns
loop
hlt
ror
imul
(bad)
and
push
sbb
jp
sti
fwait
mov
add
xchg
rcr
jmp
scas
ins
frstor
mov
aam
mov
inc
sub
or
and
xlat
pop
cld
xor
jno
push
loope
retf
cmps
lods
add
clc
push
es
in
repz
pop
pop
mov
mov
jp
xchg
mov
cmp
mov
jnp
popf
in
push
push
dec
and
sub
push
inc
sub
daa
in
repz
ret
jne
or
int3
dec
jp
stos
jbe
mov
inc
adc
imul
je
ja
lds
cs
xchg
and
pushf
call
cli
es
sbb
lock
in
xchg
add
jno
add
imul
jp
mov
xor
ja
and
sbb
rol
jo
and
dec
test
push
mov
sbb
dec
push
sub
pop
cs
fsubr
sar
pushf
pushf
cmp
daa
sbb
(bad)
popf
jmp
inc
into
les
ins
jmp
imul
adc
pop
call
push
or
xor
and
mov
or
into
scas
inc
test
je
(bad)
mov
inc
push
push
push
loopne
cmc
ret
xlat
push
dec
push
mov
xor
pop
add
cli
jnp
mov
jno
or
cmp
pusha
and
loop
xchg
dec
sbb
dec
ret
cld
(bad)
push
push
pop
pusha
adc
pop
sahf
in
jbe
rcl
push
out
jecxz
mov
aaa
arpl
mov
push
mov
daa
push
xchg
sbb
cmp
mov
out
jg
dec
(bad)
jge
fsub
or
dec
test
jnp
fwait
test
in
clc
adc
jmp
add
shl
xchg
call
fmul
leave
lds
or
mov
add
jmp
fcomip
jb
nop
jo
aad
(bad)
mov
adc
rcr
outs
push
mov
push
xor
dec
adc
lods
push
(bad)
pop
int
test
das
mov
aam
(bad)
std
add
adc
lods
daa
xor
nop
and
push
sar
add
push
mov
inc
lea
jb
loope
jp
pop
xor
dec
mov
es
mov
mov
jge
and
cs
aam
xchg
sub
push
pop
mov
leave
sbb
dec
mov
jmp
test
(bad)
jo
inc
mov
(bad)
out
lods
lahf
in
mov
push
sbb
sar
dec
sbb
cwde
adc
dec
cmps
mov
test
inc
dec
cli
call
add
adc
mov
leave
inc
mov
ins
pop
aam
mov
stos
pop
adc
(bad)
pop
fisub
inc
movs
add
frstor
or
cmp
ss
jbe
mov
mov
leave
cdq
test
iret
sbb
scas
mov
sti
data16
adc
aas
cmp
push
fiadd
and
retf
xchg
fnsave
or
lods
mov
pop
ret
push
es
sbb
rol
lods
dec
aam
cmp
pop
sti
or
das
enter
mov
sahf
mov
lds
jmp
and
fidiv
jno
dec
push
xor
xchg
dec
jb
add
mov
dec
in
jge
retf
aam
movs
hlt
aas
stos
pusha
inc
fisub
scas
pop
mov
xchg
fcom
xlat
push
jnp
stc
pop
and
mov
adc
out
nop
cmp
mov
mov
inc
dec
cmp
mov
leave
jl
jae
cmp
shr
rol
out
push
jnp
sbb
mov
imul
inc
fwait
cmp
lahf
bnd
data16
leave
aad
ss
cs
dec
fild
cmp
icebp
push
xor
dec
adc
lods
out
call
sub
mov
jge
add
sar
jg
stos
pop
fiadd
push
push
push
inc
int3
push
and
inc
cmps
push
jp
sti
sti
cmc
pop
sub
test
test
xchg
pushf
xchg
jne
not
pop
sbb
inc
popf
jmp
popa
mov
xor
inc
sub
cmps
loope
in
pop
pop
call
clc
mov
test
in
fisttp
int
arpl
mov
or
fimul
imul
aas
and
inc
xchg
fstp
mov
loop
pop
inc
pusha
pushf
rcl
jmp
adc
push
dec
call
test
mov
js
in
mov
bound
in
add
repz
cmp
test
call
mov
out
sbb
imul
adc
ins
test
jg
cmp
sti
test
ds
fwait
movs
enter
addr16
and
mov
jp
lea
fmul
xadd
dec
inc
push
or
cmp
lds
ret
call
dec
bound
adc
je
inc
push
adc
xchg
int3
fwait
adc
(bad)
xchg
push
mov
dec
pop
cmp
sbb
test
push
sub
fwait
add
pop
cdq
int3
xchg
jp
push
into
repnz
mov
lods
mov
icebp
xor
jg
inc
(bad)
fs
icebp
add
push
cmp
xchg
cmc
mov
mov
dec
rcr
xchg
(bad)
sbb
push
test
sbb
aaa
or
push
mov
sub
fs
cmp
ins
mov
in
outs
or
add
repz
jae
add
cmp
xor
jae
outs
pop
ss
jg
xchg
mov
aaa
dec
inc
loopne
frstor
pop
or
mov
scas
mov
cld
call
gs
pop
cld
push
xchg
xor
cli
stc
sub
and
jl
or
mov
call
retf
repz
pushf
out
bound
cmp
adc
and
xor
dec
stc
ins
(bad)
jnp
xchg
in
or
xor
adc
mov
movs
mov
nop
jecxz
lods
sahf
imul
xchg
adc
pop
call
push
ret
jmp
push
popa
jge
jns
sti
js
repnz
mov
xor
pop
in
shl
leave
cmps
jb
cmps
stos
rcl
lds
cmp
dec
xor
xor
(bad)
jp
or
dec
mov
mov
outs
mov
add
imul
adc
adc
ficomp
repz
mov
jns
mov
mul
enter
push
jp
mov
mov
push
fstp
inc
pop
out
push
cmp
mov
jecxz
inc
push
ret
sub
push
xchg
das
mov
call
es
push
mov
sahf
repnz
mul
into
mov
xchg
push
clc
mov
jmp
inc
dec
inc
in
stc
je
add
dec
lods
push
dec
in
ror
adc
lahf
cld
xor
push
daa
ins
or
mov
adc
dec
jmp
popf
rcl
add
or
push
inc
or
xchg
dec
aas
shl
scas
(bad)
ja
jbe
(bad)
dec
xchg
sub
loopne
mov
out
outs
jae
or
fsubr
pop
sbb
xchg
bound
pop
adc
rol
jmp
mov
add
dec
mov
bnd
repz
arpl
cmp
or
movs
mov
sti
fsubr
sbb
mov
call
dec
ins
push
in
mov
cmp
lods
stos
jmp
outs
inc
std
adc
es
or
pop
aad
and
imul
push
outs
cwde
and
int3
push
or
push
out
stos
xchg
cdq
cli
les
mov
sub
gs
test
ins
push
add
jb
xchg
jmp
jne
arpl
dec
aaa
sub
mov
push
dec
fdiv
xor
pop
or
movs
push
stos
enter
add
jle
jne
xchg
sbb
movs
pop
repz
cwde
xchg
adc
xchg
xor
xchg
sbb
mov
adc
icebp
aas
push
fstp
mov
mov
inc
ret
das
inc
pop
mov
jle
outs
add
pop
into
xor
mov
dec
mov
mov
push
movs
pop
mov
mov
sbb
or
popf
inc
sar
dec
clc
outs
xlat
pop
outs
imul
add
sub
cmc
cmp
(bad)
cmps
and
imul
leave
jmp
(bad)
stc
adc
ja
xchg
out
and
jbe
cmp
push
mov
div
mov
in
sub
call
fadd
cli
push
mov
cmp
call
movs
xor
xchg
call
jl
mov
sub
mov
and
add
movs
push
mov
test
pop
in
retf
int
lea
ret
rcr
jne
mov
cmp
cs
loop
(bad)
xor
add
cmp
inc
and
push
jno
(bad)
lods
jne
(bad)
sub
xchg
xor
mov
aad
aam
mov
dec
fadd
pop
(bad)
xchg
inc
xlat
jb
push
or
ret
aam
std
stc
iret
dec
enter
es
jp
sbb
cmc
mov
mov
(bad)
outs
sbb
aas
inc
or
xchg
push
mov
add
push
push
xchg
or
fist
inc
fs
ret
js
adc
and
jmp
(bad)
sbb
hlt
push
cld
or
jbe
(bad)
jmp
push
hlt
or
lock
xchg
xchg
xor
scas
push
cwde
sti
jbe
cmp
or
sti
mov
lods
add
push
mov
pushf
pop
and
out
xor
pop
es
out
sbb
mov
es
push
fcom
add
arpl
ror
clc
cld
mov
(bad)
dec
cmp
inc
xchg
sub
or
call
and
movs
fldcw
mov
push
add
push
mov
imul
mov
sub
xor
dec
pop
ret
shr
ret
shl
fistp
xor
jns
adc
cmp
daa
mov
jno
retf
push
shr
mov
dec
xchg
mov
(bad)
scas
(bad)
mov
je
push
cmp
stos
sub
push
mov
outs
daa
shr
pop
mov
(bad)
cmp
jb
(bad)
(bad)
pushf
mov
iret
xchg
jmp
into
or
mov
repnz
arpl
leave
sub
inc
lods
aam
ins
pop
pop
(bad)
cmp
inc
aaa
xchg
loop
sti
sub
retf
retf
adc
icebp
aam
es
xor
movs
daa
in
jmp
loope
push
push
and
xchg
clc
mov
cwde
pop
dec
sub
icebp
out
loopne
jo
and
xchg
dec
aad
loopne
mov
pop
jne
mov
and
out
addr16
fwait
test
mov
xchg
dec
arpl
int
push
fwait
pop
mov
or
mov
movs
mov
movs
icebp
lods
jge
sahf
mov
in
mov
int3
mov
aaa
call
cwde
dec
je
lds
mov
outs
fst
dec
call
dec
adc
repz
sbb
in
sub
xchg
xchg
das
adc
and
add
adc
je
imul
xor
test
cmc
xchg
sub
mov
adc
lahf
repz
cmp
xlat
pop
(bad)
sub
dec
repnz
js
out
sub
cmp
and
sub
mov
mov
loop
or
imul
(bad)
jns
fwait
pop
ja
pop
push
sub
xchg
call
mov
push
cmp
cmps
repz
adc
mov
adc
sbb
ins
in
inc
pop
inc
mov
mov
call
mov
iret
xchg
test
sbb
add
ss
fs
mov
dec
push
xor
in
add
hlt
das
sub
jb
ins
fsub
fcomp
outs
(bad)
mov
sub
shl
das
mov
cmp
push
sub
mov
inc
jl
jl
adc
mov
xor
popa
ror
pop
(bad)
sahf
xlat
mov
out
mov
dec
ds
jl
js
bound
sbb
daa
jp
dec
xchg
movs
push
xlat
pop
je
imul
test
sub
shl
dec
stc
push
pop
cmp
fistp
popa
sub
adc
inc
jecxz
add
jl
les
nop
jno
inc
scas
sub
jae
jmp
dec
gs
jne
hlt
out
dec
out
sub
fldenv
pop
pop
mov
test
stos
add
lds
cmps
retf
push
and
(bad)
int
fs
(bad)
cmp
add
inc
js
(bad)
or
jo
fisttp
push
xchg
add
imul
cmp
nop
nop
sub
sbb
xor
push
mov
fbld
push
ret
cmps
xor
(bad)
pop
jns
repnz
int3
xor
cmc
in
in
mov
mov
xchg
and
or
sbb
push
out
mov
fstp
push
sar
xor
test
xchg
jns
addr16
rol
sub
shr
gs
hlt
test
pop
cmp
mov
push
xor
add
pop
or
and
inc
add
fwait
sar
pusha
inc
jmp
out
jl
dec
es
cmps
xchg
mov
iret
add
(bad)
dec
fs
push
sub
inc
shl
das
stos
push
jae
(bad)
or
xchg
mov
inc
mov
add
jl
xchg
popa
stos
imul
cmps
loop
dec
popf
out
mov
xchg
(bad)
mov
mov
xlat
imul
push
loop
jmp
int3
add
mov
loopne
js
pop
adc
pop
and
(bad)
cli
inc
adc
popf
cmp
mov
test
stos
js
pushf
or
xchg
in
ss
xchg
mov
jmp
mov
daa
push
cdq
xchg
rol
fmul
into
push
je
repz
mov
dec
hlt
dec
retf
popf
add
dec
mov
sbb
jmp
sub
adc
bswap
iret
or
push
and
sbb
or
arpl
aad
das
daa
sub
sar
cwde
xchg
sub
test
xchg
cmp
(bad)
ror
xor
nop
movs
jo
or
push
movs
inc
push
dec
adc
mov
cmp
(bad)
rcr
jmp
dec
dec
push
pop
and
movs
stc
or
test
lahf
xchg
mov
icebp
test
lods
outs
mov
sub
scas
jno
jmp
sub
mov
sar
imul
repnz
and
sub
pushf
xor
cmp
adc
xchg
scas
ds
int
cmps
cmp
mov
push
mov
test
mov
jle
cli
fmul
or
test
fdivr
fist
outs
imul
xchg
cdq
nop
mov
mov
mov
(bad)
retf
pop
push
fs
rcl
xor
mov
cmp
dec
dec
cdq
mov
cmps
push
cmp
xor
sbb
jns
aam
add
cmovne
rcr
jns
aam
jno
out
leave
xchg
pop
pop
xor
cmp
fwait
in
push
mov
adc
std
popa
sbb
cwde
pusha
push
retf
dec
mov
push
push
xchg
mov
push
stos
hlt
call
std
adc
out
test
dec
mov
dec
int3
mov
out
outs
xchg
xor
and
mov
push
xchg
push
int3
iret
movzx
mov
in
shl
pop
loop
jmp
cld
mov
push
stos
les
lds
cmp
int
sub
cmp
mov
std
std
mov
adc
int3
dec
rcr
xchg
je
and
std
xchg
jne
into
outs
push
clc
and
out
pop
jae
cmp
sti
fisubr
pop
loopne
pop
adc
in
pop
sub
imul
xor
shl
xor
xlat
jge
leave
repnz
js
jg
jae
jnp
and
lods
mov
fstp
jl
cdq
pop
outs
je
xchg
fild
cwde
or
popf
scas
std
pop
not
sub
mov
mov
mov
xchg
and
inc
inc
sbb
jmp
lds
adc
aaa
(bad)
push
jge
xchg
mov
xlat
in
out
fimul
sahf
sub
adc
cmp
pop
fisubr
or
jae
les
jge
jmp
add
into
out
jno
rol
fldenv
pusha
inc
daa
push
mov
in
and
retf
outs
add
stc
rcr
adc
push
dec
or
xchg
mov
mov
fcomp
(bad)
push
cmp
jbe
shl
sahf
mov
fimul
mov
ss
idiv
pop
fisub
pop
jl
in
mov
outs
mov
pop
jmp
mov
ds
add
xchg
ret
mov
das
imul
rcr
or
sbb
adc
jbe
and
inc
(bad)
pop
loope
adc
sbb
fistp
sbb
mov
jmp
push
cs
xor
outs
xchg
movs
cmp
inc
mov
mov
jb
xchg
cmp
push
xor
and
pop
test
jge
rcr
inc
jb
or
xchg
fwait
call
add
aaa
push
cdq
push
xchg
cmp
leave
fnsave
jl
inc
pusha
push
(bad)
in
in
bound
cmp
scas
mov
adc
rcl
push
mov
add
add
inc
or
cld
mov
inc
xchg
push
sub
add
scas
jecxz
stos
pop
jbe
in
cwde
push
inc
push
sub
push
adc
test
mov
cmp
dec
(bad)
pop
dec
dec
(bad)
stos
cmp
nop
ja
xchg
or
pop
mov
sti
lds
inc
rol
jmp
fs
mov
fbld
add
aam
jo
aas
mov
mov
lods
xchg
pop
cmp
jmp
mov
pop
ror
sub
mov
stc
popa
add
inc
adc
jns
and
dec
(bad)
data16
mov
mov
add
push
xchg
(bad)
and
mov
dec
xor
fidiv
xchg
mov
shl
cmp
out
xchg
mov
mov
mul
cmps
jmp
ret
pop
or
and
sbb
and
scas
push
rol
inc
sub
mov
jne
retf
jae
je
out
fild
jne
sbb
mov
push
or
pop
stos
in
cmc
add
adc
(bad)
in
mov
push
xor
or
leave
add
inc
call
inc
xchg
jno
aas
leave
mov
cmps
shr
mov
dec
jmp
push
inc
cmp
xchg
or
sub
jecxz
ret
sahf
add
xor
and
in
lods
jl
fs
sbb
inc
repnz
sar
inc
out
xor
xchg
sub
jae
sub
retf
int3
rcr
push
mov
repnz
cmp
test
sub
retf
leave
jb
lods
lahf
clc
test
aaa
push
and
mov
inc
pushf
or
lods
jno
ds
shr
aam
sar
inc
loop
outs
cmp
lock
push
push
inc
mov
xor
pop
xor
inc
rol
rol
test
out
mov
outs
sub
jle
push
aam
push
and
xchg
mov
dec
mov
xor
or
je
mov
ds
cmp
sub
nop
scas
or
inc
dec
pop
data16
fstp
(bad)
xor
xchg
mov
push
fmul
bound
jbe
(bad)
jb
jp
fdiv
jno
ss
jns
mov
xchg
push
xor
push
in
push
cli
push
and
sbb
push
in
(bad)
sub
fwait
in
xchg
icebp
icebp
sar
ds
pop
fs
cmp
and
or
scas
pop
ds
mov
sub
mov
mov
inc
push
and
fdiv
dec
mov
pop
jbe
pop
cld
shr
hlt
xlat
ja
movs
jb
ficomp
loope
xchg
mov
jno
lea
stos
or
inc
movhlps
push
adc
(bad)
cmp
sub
movs
pop
out
aas
repnz
icebp
xor
in
sbb
(bad)
dec
or
mov
mov
(bad)
xor
adc
inc
cdq
mov
call
mov
shl
les
xchg
or
xchg
mov
icebp
int
mov
and
stc
mov
pushf
xlat
jmp
leave
popf
iret
cmp
ja
packuswb
pop
jno
outs
push
inc
pop
ret
out
rcr
test
leave
inc
enter
cmp
push
push
call
aam
sub
mov
xor
es
fstp
scas
int
sub
lds
and
fidiv
mov
(bad)
in
jp
sar
jne
call
push
test
jnp
sahf
outs
xchg
mov
cwde
je
loopne
cmp
mov
icebp
pop
push
lods
add
inc
sahf
cmp
aad
(bad)
cli
loop
fisubr
call
inc
shl
pop
pop
retf
sbb
je
sub
sub
in
pop
data16
inc
push
mov
lock
xlat
mov
xchg
jb
js
mov
cwde
enter
nop
sub
mov
add
cdq
in
jl
ja
adc
out
pushf
pop
push
sub
pop
(bad)
outs
inc
std
shl
dec
pop
xchg
push
pop
xor
clc
(bad)
(bad)
loope
xor
xor
mov
shl
cmp
call
xchg
sbb
mov
retf
fdiv
stos
mov
sub
aad
(bad)
mov
mov
icebp
imul
ret
sbb
push
outs
sub
scas
adc
dec
pop
ret
mov
sbb
addr16
std
test
jmp
pop
sbb
push
push
bound
test
lods
push
out
retf
xchg
mov
dec
dec
pusha
xor
dec
and
dec
xor
fstp
or
icebp
out
fmul
jnp
sub
mov
xchg
loop
pop
aam
jmp
jmp
pop
xchg
pop
adc
sar
(bad)
mov
add
(bad)
sub
test
cmp
add
cmp
in
mov
push
or
adc
repz
mov
jns
lods
mov
dec
jae
xor
jno
inc
out
stos
mov
nop
ret
es
pop
inc
push
mov
jnp
sub
loopne
pop
push
fldcw
ja
dec
xchg
loopne
mov
in
add
jle
push
out
dec
mov
adc
sbb
sbb
mov
ficomp
mov
or
add
pop
mov
imul
aaa
jmp
adc
fs
int
pop
pop
test
fidiv
hlt
int
shl
push
sahf
mov
cld
inc
rcr
add
jge
mov
add
jecxz
js
paddb
inc
repnz
mov
in
icebp
push
sub
imul
push
adc
ret
mov
sub
shl
out
sub
xchg
sbb
xor
pop
popf
dec
stc
pop
xchg
jno
popa
xor
ret
mov
dec
xor
push
cmp
or
retf
cmp
retf
dec
scas
ret
xor
out
ja
shl
aaa
into
mov
daa
ds
das
fwait
mov
inc
pop
ds
or
stos
(bad)
adc
cld
sub
jl
pop
xor
je
ds
xchg
fistp
mov
xlat
in
out
cmp
mov
loopne
pop
lods
dec
outs
bound
mov
xchg
aaa
pushf
mov
mov
dec
in
push
lea
inc
xchg
fst
sar
out
scas
sar
push
or
out
cmps
cmovp
(bad)
xlat
retf
rcl
pop
hlt
nop
push
fsub
out
mov
jo
rol
inc
adc
fsub
ret
(bad)
mov
ins
(bad)
repz
adc
jle
push
dec
jg
push
jo
cmps
mov
mov
adc
inc
cmps
scas
aad
inc
popa
stc
scas
and
dec
imul
cmp
test
sbb
and
mov
adc
xchg
call
loopne
push
scas
add
or
mov
jp
jae
xchg
push
repz
out
dec
dec
nop
test
cwde
add
(bad)
mov
pop
popa
dec
enter
loopne
ror
dec
jge
ins
cmp
leave
cwde
ja
imul
les
pop
cli
(bad)
mov
in
jecxz
dec
mov
enter
stos
loop
mov
les
mov
or
adc
jo
sub
add
dec
pop
pop
push
loopne
sbb
sbb
ret
inc
mov
jl
dec
mov
imul
ror
adc
and
imul
loop
call
jns
clc
int
xchg
pop
in
xchg
test
dec
shl
les
lea
fs
hlt
jo
push
or
mov
cld
push
add
sub
(bad)
aas
jg
shr
inc
adc
sub
jp
xchg
or
movs
loopne
dec
test
pop
push
push
sar
sbb
das
pop
in
movs
aad
mov
mov
adc
imul
push
cli
fcmovne
std
pop
jecxz
sub
jne
popa
leave
dec
inc
daa
test
push
inc
ins
fsub
add
imul
mov
sahf
xchg
push
aam
scas
enter
scas
jmp
popf
or
fs
mov
cmp
shl
pop
pop
dec
int
mov
and
mov
outs
jg
mov
mov
fisttp
mov
dec
loope
fs
push
jbe
dec
dec
jp
cld
outs
retf
stos
jae
das
adc
cmp
jmp
lods
cmp
pusha
mov
imul
and
xor
daa
dec
imul
mov
(bad)
sub
push
stos
inc
movs
outs
xor
test
jecxz
adc
dec
push
cmp
sbb
lds
fwait
(bad)
scas
pop
inc
pop
fstp
in
or
das
push
mov
lds
jo
es
aas
sbb
leave
sar
dec
(bad)
out
cmps
pop
xor
loopne
mov
ret
push
jmp
repz
mov
sub
loop
fwait
icebp
ficom
or
adc
push
push
loopne
out
inc
popf
mov
fcomp
pop
or
fiadd
popa
mov
stos
cmp
lock
hlt
adc
mov
push
cmp
add
ret
stos
and
or
sbb
loopne
push
inc
adc
cmp
or
add
add
sbb
sub
xchg
inc
cmp
push
ret
std
and
into
xor
cld
repnz
jge
imul
sbb
leave
mov
xlat
mov
cli
sbb
push
lahf
xchg
dec
dec
jnp
in
cmp
cld
xor
sbb
jg
lock
and
ficomp
mov
(bad)
adc
cs
retf
ins
jmp
sub
mov
push
(bad)
jmp
push
in
out
push
push
dec
cmc
mov
loop
inc
dec
mov
lods
cmp
mov
xor
lods
inc
scas
cmp
and
imul
mov
mov
outs
pop
add
jnp
lahf
out
mov
jp
(bad)
cs
cmc
pop
mov
sub
pop
or
(bad)
add
jl
popa
push
dec
fnstsw
xchg
data16
ins
cmps
cmps
data16
fs
mov
pop
cmps
cmp
aam
push
sbb
rol
int
into
gs
jno
add
adc
js
sub
mov
pop
(bad)
push
shr
aaa
adc
cmp
js
jae
shr
push
jmp
fldcw
loope
daa
sahf
cmp
inc
test
pop
dec
movq
sub
mov
es
fisttp
xchg
sti
imul
sbb
mov
add
stos
lea
push
adc
xchg
fstp
jmp
loopne
ss
pop
mov
sub
test
mov
pop
push
adc
pop
adc
(bad)
pushf
dec
mov
mov
sub
js
xchg
sbb
lds
jo
mov
lods
(bad)
dec
jnp
imul
addr16
jno
adc
xchg
lock
jp
jno
arpl
in
in
dec
repz
xor
xchg
dec
addr16
loope
or
mov
jg
inc
out
or
pop
jmp
adc
mov
das
loopne
aaa
lock
pop
add
dec
mov
scas
sti
adc
xor
clc
adc
das
push
pop
mov
sub
enter
cmc
int3
mov
pop
lods
cmps
add
out
cmps
aad
ret
scas
(bad)
sbb
ficomp
push
adc
je
jno
cmp
ins
mov
jle
ror
mov
mov
push
popa
or
jmp
push
addr16
mov
outs
mov
push
pop
gs
or
xchg
adc
push
jo
dec
add
cmp
xchg
sahf
jne
dec
inc
and
inc
mov
pop
(bad)
and
stos
push
push
xor
pop
ret
dec
sub
xor
adc
hlt
or
stos
sbb
or
jle
ficomp
cmp
mov
(bad)
fldcw
sar
test
data16
adc
sahf
mov
mov
sub
daa
(bad)
or
sub
retw
fadd
mov
icebp
sar
fxch
pop
aas
mov
mov
or
call
div
inc
test
push
movs
jnp
sub
sub
(bad)
repz
lods
adc
add
ret
mov
icebp
sub
rcl
in
es
repnz
rol
cmp
imul
ret
mov
xor
adc
fcom
inc
ins
mov
jmp
jmp
loop
sub
mov
ret
pop
jb
pop
push
test
sub
inc
adc
xchg
fdivr
dec
jp
jne
data16
and
outs
movs
or
call
test
push
add
ret
jl
pusha
sbb
scas
dec
out
std
jns
add
mov
sub
iret
mov
mov
sbb
aas
mov
or
lods
xchg
dec
test
out
stc
out
mov
or
mov
test
jne
shl
adc
jae
or
in
hlt
psadbw
(bad)
(bad)
ds
pop
call
pop
dec
dec
gs
pushf
jno
or
xor
loop
pop
sahf
inc
je
mov
pop
and
outs
dec
outs
out
(bad)
and
fst
dec
xchg
mov
or
fdiv
xchg
jmp
dec
aaa
std
mov
shl
pop
sbb
dec
mov
inc
jno
cwde
push
(bad)
xchg
push
arpl
mov
jnp
and
shr
inc
hlt
xchg
xor
dec
pop
imul
(bad)
mov
sub
mov
pop
into
jns
mov
cmp
dec
in
cs
in
push
outs
dec
push
test
hlt
into
add
sub
icebp
shld
sahf
xor
cmps
mov
mov
jne
lahf
lods
imul
(bad)
mov
add
cmp
push
stc
sub
test
in
ja
adc
(bad)
dec
in
push
aaa
jne
icebp
stos
arpl
xchg
rol
xchg
in
jb
fild
push
jmp
jecxz
sbb
sbb
jle
ret
inc
push
es
and
add
ret
and
xor
push
adc
test
adc
ret
leave
add
cmp
iret
lods
cmp
ins
push
cmps
sub
dec
xor
or
or
in
mov
jnp
rcl
test
mov
pop
xor
dec
jbe
mov
mov
popf
xchg
jmp
or
pop
adc
jecxz
clc
cmp
pop
les
loope
xor
retf
out
sbb
pop
ror
jno
push
adc
hlt
icebp
mov
sti
pusha
adc
sub
pop
push
mov
fld
ret
inc
and
xchg
mov
sbb
xchg
mov
pop
in
dec
push
and
mov
outs
lods
pop
aaa
jmp
pusha
sub
ins
mov
sub
sbb
adc
or
and
add
fwait
mov
add
jne
imul
xor
repnz
sbb
mov
and
xchg
ss
xchg
push
push
sahf
jns
test
xchg
cmps
aas
push
inc
and
xchg
lods
movs
test
dec
(bad)
xchg
popa
cwde
js
pop
fsubr
ss
push
rcl
out
cmp
xor
xchg
and
fisttp
xchg
or
jb
or
mov
push
push
jae
lods
std
aaa
add
pop
in
mov
cld
mov
cs
dec
sbb
jbe
data16
mov
and
bound
mov
cdq
or
fdiv
xor
into
mov
add
mov
addr16
xor
or
or
dec
fmul
jb
cmp
enter
xor
pop
rcl
push
es
jns
ficom
dec
jle
js
or
push
cwde
push
in
sti
mov
(bad)
jae
mov
push
outs
mov
mov
ret
and
push
add
and
cmp
or
daa
pop
pop
xchg
mov
xchg
inc
jb
int
sbb
pop
inc
mov
pusha
inc
ret
clc
mov
test
test
loopne
mov
int
or
stos
jns
dec
dec
mov
ins
mov
(bad)
or
aad
mov
adc
adc
aam
xor
sbb
daa
mov
imul
lds
dec
jle
mov
sub
mov
scas
xchg
(bad)
in
jle
jns
adc
ins
pop
inc
jo
sbb
xchg
cld
mov
mov
cmps
in
add
inc
xchg
xchg
jno
pop
dec
sbb
jno
sub
xchg
ds
and
fwait
cwde
scas
mov
mov
fnsave
xchg
push
addr16
and
xchg
or
fcomip
and
in
push
xchg
hlt
stos
jmp
cmp
ficomp
inc
popa
inc
movs
jae
(bad)
in
cs
push
pop
mov
arpl
jae
mov
bound
aam
mov
jno
call
xlat
cmp
cwd
xor
loop
sbb
fcomp
xchg
push
cmp
test
call
pop
or
and
sbb
pop
stc
add
pop
gs
sahf
mov
mov
js
inc
push
xor
sub
out
dec
sar
add
add
inc
mov
adc
sub
les
out
adc
add
fs
mov
sub
stos
ret
scas
lods
cli
adc
mov
jg
mov
jmp
xchg
push
dec
jae
nop
mov
loop
movd
or
cmp
mov
dec
enter
pushf
mov
dec
push
sbb
sbb
fs
jg
ja
bound
sub
in
xchg
inc
cli
repnz
aam
inc
adc
shr
ret
mov
dec
(bad)
jecxz
mov
mov
repz
pusha
pusha
les
push
mov
sbb
xchg
fdivr
mov
neg
mov
int
jmp
cmp
mov
out
repnz
cdq
sbb
xlat
out
into
out
pop
icebp
xchg
add
cmp
fisub
jg
mov
mov
outs
(bad)
fs
and
cwde
push
pushf
adc
into
aas
jmp
aas
pusha
gs
lahf
xchg
sti
sbb
and
cmp
adc
popf
jmp
scas
or
lods
xor
out
push
dec
jle
lahf
idiv
in
lock
rol
jbe
dec
cld
mov
lock
(bad)
xchg
mov
and
jmp
out
adc
mov
or
cmp
loopne
scas
mov
loop
pusha
fld
push
push
cmp
jecxz
hlt
imul
rol
mov
(bad)
mov
les
movs
inc
ins
and
cmp
jmp
aas
jne
test
sbb
add
sub
lock
inc
out
ja
loop
inc
idiv
test
and
jo
sub
fcomp
mov
test
mov
adc
mov
mov
mov
pusha
push
adc
fistp
(bad)
into
mov
adc
cmp
pop
sahf
xchg
in
jne
lods
mov
sub
jns
pop
and
and
div
je
(bad)
in
sbb
mov
std
push
sub
push
ins
mov
jne
stc
pushf
ror
or
and
movs
dec
sbb
dec
retf
in
sbb
jmp
dec
pushf
test
ror
inc
out
cmp
cmp
loop
jo
les
cmp
mov
mov
cmp
jle
add
inc
fistp
adc
ds
sahf
test
outs
cs
pushf
repz
dec
inc
and
(bad)
mov
test
push
rol
adc
inc
mov
pop
and
jg
push
outs
sar
fwait
aaa
xor
cmps
sub
shl
je
aas
mov
fisubr
aas
(bad)
in
ds
(bad)
dec
cmps
mov
mov
fwait
data16
pop
ret
inc
xchg
xchg
add
pop
nop
fidiv
pop
inc
sar
xlat
mov
sub
and
icebp
div
leave
out
and
out
cs
mov
lds
sbb
stos
loopne
push
xor
adc
jmp
mov
out
sbb
stc
jno
test
mov
add
push
dec
sub
inc
lock
(bad)
popa
push
mov
xchg
cmp
pop
jecxz
jmp
js
cmp
adc
mov
sub
in
mov
jbe
into
mov
sbb
jmp
out
xchg
loop
pop
sub
mov
inc
das
clc
test
adc
faddp
imul
mov
ja
add
loop
jo
push
imul
sbb
jle
mov
mov
and
int
lahf
rcr
stc
add
neg
and
call
mov
retf
push
push
cwde
xor
pusha
dec
fs
add
loope
jp
cs
push
repz
pop
add
test
jecxz
fidiv
xor
cmp
repz
out
sbb
dec
out
adc
push
jmp
sbb
jne
add
xor
pop
stos
mov
(bad)
(bad)
jnp
outs
pand
cmp
sbb
push
pop
sbb
inc
test
in
loopne
cld
inc
js
pop
push
jns
js
pop
push
xor
xor
div
std
or
test
push
hlt
add
mov
ja
adc
jmp
scas
(bad)
call
pop
add
ja
mov
or
stos
sub
(bad)
add
addr16
popf
ret
sub
adc
jl
xor
add
lahf
js
pop
xchg
xchg
push
rol
cmp
xchg
pop
das
push
shl
cmc
mov
xlat
jne
outs
cmp
int
sub
lods
add
and
xchg
adc
xor
jne
loop
dec
shr
sub
push
mov
dec
jne
and
cmps
xchg
mul
xchg
jmp
cmp
add
stos
rcr
cs
dec
xlat
mov
mov
xchg
push
pop
push
mov
sub
out
push
pop
jl
dec
cs
test
or
cmps
call
fiadd
mul
mov
es
xor
mov
inc
adc
std
inc
(bad)
std
jle
sbb
les
sbb
mov
cmp
push
call
jp
xchg
sbb
push
repz
or
fidiv
ss
and
sbb
pop
xor
mov
movs
xor
sub
hlt
std
fcomi
fs
adc
and
int
enter
pop
add
imul
dec
int
jge
and
retf
or
pop
push
mov
pushf
test
sub
dec
into
nop
and
scas
sahf
imul
adc
inc
repz
sub
call
cld
es
sub
push
and
rol
fnsave
inc
adc
ja
mov
xchg
jae
pop
int3
and
or
push
mov
mov
or
sbb
aas
scas
xchg
into
js
pushf
jmp
xchg
cmp
inc
int3
outs
cmp
sti
mov
test
xor
verw
cld
sub
jbe
shr
cs
popf
clc
push
stos
arpl
mov
outs
inc
aas
and
jbe
adc
fwait
dec
mov
pop
lods
mov
or
mov
arpl
fs
mov
aad
pushf
repz
(bad)
shl
push
jp
mov
inc
pop
jge
fldenv
sub
cmp
into
movs
stos
ret
shl
ins
or
push
outs
popa
adc
xchg
sbb
xchg
test
sbb
pop
in
dec
mov
ins
pop
add
xor
sbb
icebp
mov
nop
mov
lods
sahf
shr
mov
add
mov
cwde
es
or
test
mov
mov
fxch
fist
and
in
enter
and
lea
mov
jle
cmp
outs
out
(bad)
int3
cli
mov
mov
lods
lods
cmps
and
mov
pop
repz
fstp
jge
mov
retf
into
sar
lods
jecxz
arpl
sti
mov
retf
fnstcw
cmp
gs
cmp
sbb
or
inc
cmc
mov
push
push
jno
or
add
rol
xchg
mov
and
ins
movs
xchg
scas
sbb
fisttp
(bad)
jmp
retf
in
in
pop
add
nop
and
fimul
cmp
or
cs
int
sub
push
aam
mov
in
mov
std
loop
push
add
out
push
dec
push
fdivr
daa
mov
sub
out
ins
dec
sbb
jb
or
in
adc
xor
push
test
mov
jbe
push
dec
cmp
sbb
je
dec
daa
cmp
fmul
pop
xchg
mov
fdivr
not
(bad)
xor
sbb
pop
dec
mov
in
aad
test
cmp
lea
repz
(bad)
(bad)
retf
sbb
fsub
xchg
std
int
js
fist
add
push
mov
adc
sub
pop
test
dec
gs
call
aaa
inc
pop
fsubr
data16
(bad)
loop
inc
int3
int3
out
jno
sbb
lock
iret
sbb
imul
mov
out
or
call
sbb
(bad)
js
pop
lds
push
push
inc
gs
inc
jns
mov
retf
fadd
addr16
pop
mov
hlt
ret
mov
rcl
mov
xor
rcl
leave
add
xlat
inc
mov
cmp
ins
(bad)
into
jnp
leave
(bad)
mov
std
mov
ss
inc
sub
jbe
jg
aam
inc
push
pop
dec
sub
sub
xchg
nop
mov
xchg
retf
mov
push
push
cmp
mov
sbb
mov
and
out
cwde
sbb
push
pop
pop
jecxz
sbb
adc
jne
aaa
mov
xlat
sbb
aad
dec
repz
repz
mov
push
push
out
fmul
push
and
add
mov
imul
and
ficomp
frstor
outs
push
icebp
push
or
xchg
mov
daa
call
inc
jns
(bad)
shl
sub
cli
pop
fwait
xchg
int
(bad)
adc
cmp
ds
cmp
repz
xor
retf
xchg
retf
sti
sbb
xor
sub
mov
add
push
sbb
idiv
retf
sub
xchg
call
mov
ret
xor
shl
out
ins
mov
out
enter
sub
jmp
mov
shr
mov
dec
or
push
iret
and
scas
cmc
sub
fwait
sbb
jg
pop
ss
sahf
push
retf
ss
and
push
adc
xor
movs
loopne
not
out
and
jle
bound
pop
push
add
fcom
je
and
rcr
js
(bad)
jae
inc
rol
stos
push
(bad)
mov
ror
xor
dec
fwait
add
inc
mov
(bad)
cs
cmp
call
call
mov
cmp
xchg
aad
pop
cwde
and
sbb
scas
add
mov
scas
sbb
in
sti
mov
ret
pop
add
or
dec
fisub
sub
jg
fdivr
test
aam
dec
xchg
pop
fstp
dec
out
push
pushf
cmp
push
cmps
das
mov
test
ss
out
cli
jae
pushf
sub
mov
inc
call
shl
mov
jg
adc
aaa
or
sbb
jmp
sub
cmc
ds
sub
push
pop
js
aam
leave
inc
and
(bad)
push
add
aad
jnp
in
fild
fistp
test
lea
push
dec
mov
mov
aas
mov
xchg
dec
adc
popa
mul
retf
mov
(bad)
cmp
pop
xchg
cmp
sbb
cli
sbb
push
lea
and
sub
xchg
leave
mov
pop
int3
loopne
push
pop
nop
popf
lds
cld
dec
xor
sbb
cmp
xor
inc
cmp
data16
scas
cmp
enter
neg
inc
cwde
addr16
inc
xchg
push
in
jmp
movs
jl
out
sbb
fild
pop
lds
push
(bad)
sbb
movs
jns
dec
push
addr16
mov
(bad)
mov
mov
out
jle
enter
out
cwde
and
xchg
(bad)
push
int3
std
xor
leave
and
jo
push
dec
arpl
sub
js
sbb
stos
test
hlt
imul
cmp
mov
retf
jne
lods
test
movs
mov
movs
add
lock
pop
jmp
ds
cmps
cwde
ins
dec
inc
mov
in
and
jge
daa
add
pop
pop
pop
cdq
jmp
fs
push
cmp
dec
jge
lds
mov
pop
xchg
push
sbb
xor
cmp
(bad)
fisttp
xor
test
jg
sbb
dec
jne
xor
fmul
in
ror
test
adc
sbb
loope
mov
push
jecxz
(bad)
mov
add
cmps
push
into
adc
add
xor
sub
cmp
psubusw
mov
xor
and
jl
sub
and
das
mov
addr16
out
push
stos
sahf
js
jnp
inc
enter
xchg
fs
lahf
pop
jmp
pop
mov
push
or
jle
mov
out
leave
retf
dec
and
add
shl
movs
outs
add
mov
mov
out
sbb
pushf
mul
fdiv
sbb
mov
lock
gs
lods
mov
and
call
stos
push
movs
retf
xchg
dec
pop
sub
fs
mov
xchg
dec
nop
lods
loope
and
jg
in
das
(bad)
outs
loopne
imul
jl
retf
push
fsub
add
cmp
or
mov
(bad)
out
jns
iret
mov
xchg
pop
popa
leave
pop
aaa
inc
xor
jmp
fsubr
mov
and
addr16
push
push
jle
je
and
out
pop
jno
mov
test
pop
(bad)
call
out
inc
ins
icebp
pop
mov
sub
and
xchg
adc
mov
in
cmps
push
ins
dec
jmp
pop
pop
sbb
sbb
movs
stos
(bad)
dec
es
addr16
js
ins
xchg
fidiv
sbb
rol
sbb
adc
shr
nop
in
addr16
in
aaa
xor
fldcw
test
lods
cmps
ret
leave
(bad)
push
cdq
pop
push
pop
mov
out
(bad)
xchg
push
xchg
push
test
dec
and
cld
fwait
inc
push
and
mov
cmp
cmp
shl
lds
mov
push
shl
inc
add
imul
les
cmps
stos
mov
mov
mov
cmp
aas
cmp
pop
xchg
not
inc
sbb
mov
stos
repz
jo
sar
mov
test
arpl
(bad)
rep
aas
and
fcomp
and
dec
pop
adc
or
and
xchg
mov
pushf
jge
mov
cmp
mov
fst
stos
fistp
pop
loope
or
push
adc
je
cmp
sar
sahf
nop
fst
add
push
cmp
mov
jl
sbb
rcl
fist
push
xchg
in
sbb
and
jno
mov
ror
ret
outs
ds
rol
int3
repz
xchg
arpl
scas
movs
test
rol
aam
sub
enter
adc
fcmove
pop
repnz
mov
mov
add
add
jb
add
adc
jnp
push
scas
shl
(bad)
sbb
iret
jne
sub
inc
lds
mov
sub
call
push
jnp
sbb
xchg
or
mov
adc
or
inc
dec
xchg
(bad)
pop
dec
les
mov
mov
retf
ds
dec
inc
dec
add
into
outs
pop
pushf
icebp
stc
push
add
sbb
dec
jnp
cmp
cwde
xlat
mov
jl
iret
test
fild
jne
dec
das
ret
ror
and
cmp
jmp
jmp
ret
lock
std
das
fdiv
loopne
xor
hlt
iret
popa
fadd
jmp
adc
stos
(bad)
mov
mov
inc
imul
movs
test
repnz
retw
xor
(bad)
sbb
add
xchg
and
test
jae
dec
or
sbb
cmp
fdivr
gs
punpckhbw
cmp
ja
sub
mov
jne
jecxz
ds
cdq
scas
in
out
mov
dec
lods
add
test
sar
imul
fiadd
push
mov
push
fsubrp
movs
pop
cmp
push
out
or
into
mov
scas
movs
dec
mov
xchg
mov
mov
push
jl
mov
xor
sahf
(bad)
adc
lahf
mov
nop
mov
adc
je
sbb
aas
pop
into
xchg
xchg
pop
test
movhlps
movs
aad
(bad)
cmp
outs
sub
nop
or
rol
xlat
rcl
lods
jmp
popf
test
fstp
icebp
xor
popf
fcomp
cmp
jge
lods
mov
cmps
in
jo
iret
add
std
mov
xor
pop
pop
out
inc
xor
and
sbb
cmp
add
addr16
and
xchg
aam
pushf
call
pop
fild
and
iret
push
adc
jbe
add
pop
mov
jo
call
ins
ja
pop
test
lods
mov
je
rcr
adc
test
jecxz
(bad)
mov
jmp
jmp
cli
mov
sub
xchg
in
lahf
pushf
adc
jge
daa
das
in
jmp
dec
or
les
popf
adc
retf
jp
movs
and
mov
rol
pop
and
pop
cmps
xchg
mov
add
xchg
int3
sub
out
mov
bound
cmp
ds
test
retf
sbb
nop
ret
out
retf
cmc
and
mov
sbb
mov
adc
jmp
mov
ins
mov
sbb
and
push
es
imul
sub
int
mov
inc
or
dec
mov
adc
dec
std
push
ss
xor
in
xchg
rcr
sub
loope
push
jae
pop
push
outs
fadd
loop
(bad)
mov
int3
test
sbb
push
popa
mov
addr16
mov
jae
inc
xchg
test
test
es
aad
push
inc
pop
jnp
jp
fidivr
cs
mov
and
sbb
in
(bad)
jne
xchg
adc
lods
call
push
lock
movs
loope
or
dec
xchg
mov
mov
ficomp
add
out
pop
je
cmp
nop
repnz
in
pop
xchg
mov
sub
dec
iret
aam
xchg
outs
pop
pop
pop
pop
xor
cmp
mov
xchg
es
dec
int3
in
je
add
or
test
movs
or
dec
mov
jns
jg
xchg
aam
in
lods
xor
cld
call
enter
xor
mov
fisttp
sub
mov
push
push
and
push
inc
stos
iret
inc
movs
mov
enter
dec
popa
leave
daa
movs
fdivr
dec
adc
xchg
daa
fbld
aad
sbb
dec
mov
scas
sbb
test
pop
fnstcw
jmp
fiadd
test
and
cmps
fadd
jle
iret
sub
pop
jecxz
push
cmps
lods
mov
ret
sahf
test
popf
je
lods
adc
add
scas
inc
call
push
fwait
jg
inc
lds
sbb
ins
sahf
inc
mov
stos
pop
push
shr
adc
and
mov
jo
(bad)
pop
sti
fdivr
inc
fwait
mov
mov
mov
cli
pop
sbb
lahf
int
push
jp
adc
xlat
arpl
inc
cmps
outs
jmp
enter
outs
sar
maskmovq
idiv
call
into
cld
sub
mov
ret
xchg
lods
imul
adc
inc
cmp
out
and
ret
fld
mov
or
dec
addr16
mov
aad
into
retf
sbb
mov
mov
and
xchg
scas
inc
ins
imul
jle
pop
jbe
enter
out
jnp
loopne
sub
add
dec
sbb
jns
scas
add
xor
scas
or
inc
mov
push
lds
xor
push
mov
cmp
xchg
sub
and
out
scas
repz
out
adc
cmp
jnp
cmp
inc
adc
jge
dec
ret
scas
push
ret
nop
pushf
daa
sub
int
xchg
xor
adc
scas
(bad)
(bad)
mov
mov
int
dec
rcr
call
cmp
pop
or
scas
inc
xchg
out
mov
sub
in
mov
outs
test
xchg
and
push
inc
retf
push
cmp
push
jne
mov
push
stc
(bad)
js
adc
icebp
in
das
pop
cmp
mov
fisttp
fnstsw
ret
sbb
dec
hlt
push
pushf
xor
push
jns
daa
pusha
mov
ret
outs
outs
xchg
imul
stos
dec
arpl
sbb
or
sti
push
pop
pop
popf
and
cmp
dec
repz
iret
cwde
inc
adc
push
mov
inc
stc
mov
daa
ret
jmp
dec
call
xor
cli
das
pop
jns
and
aas
dec
push
mov
mov
rcl
js
int
mov
jmp
movs
jmp
add
pop
mov
cmp
mov
ss
lods
sbb
xchg
sti
mov
and
sbb
inc
xlat
and
fcomp
std
jecxz
adc
fmul
jg
sbb
push
push
push
into
add
cmp
fsubrp
call
xor
mov
inc
push
hlt
jo
adc
cmps
sub
cdq
sub
pop
and
outs
mov
sub
in
ret
into
fwait
push
hlt
ins
loop
mov
xor
inc
scas
arpl
int3
xchg
mov
xor
leave
sbb
xchg
pop
rol
test
mov
movs
push
add
lods
jno
cmp
xor
mov
push
pop
leave
xchg
fs
cmp
push
xchg
stc
int
xlat
fst
das
ret
xchg
mov
xchg
sbb
cdq
mov
(bad)
popa
sbb
mov
sub
jl
sub
mov
data16
dec
inc
or
ret
push
repnz
sub
xor
test
mov
and
scas
cmc
jmp
fwait
xchg
xchg
xor
push
fwait
mov
pop
jbe
pop
imul
sahf
mov
retf
mov
cmp
push
(bad)
aam
cmps
sub
(bad)
in
ins
jge
cld
cmc
jns
call
test
rcr
or
lods
retf
out
fstp
inc
ficomp
imul
daa
and
inc
cmp
shr
(bad)
push
fs
cmp
ret
js
stos
push
inc
mov
aaa
scas
pop
iret
in
call
sbb
fistp
sub
mov
in
mov
neg
mov
jns
out
sub
dec
push
enter
push
sbb
cmp
mov
rcr
(bad)
ficomp
(bad)
jmp
(bad)
fdivr
or
fmulp
fisttp
sbb
outs
dec
or
jp
pop
jge
inc
jg
jp
xor
dec
out
icebp
push
mov
mov
mov
jo
xchg
jo
out
mov
cs
rcl
add
mov
adc
adc
ficom
mov
and
pop
cmp
cmps
gs
mov
xchg
loope
bound
lods
pusha
jo
dec
sub
fcomip
sub
dec
inc
call
pop
mov
jecxz
mov
jmp
std
mov
ret
popa
mov
imul
xchg
dec
mov
add
sub
adc
pop
fbld
push
jo
mov
bound
xchg
out
mov
push
gs
(bad)
sbb
fcmovu
cmp
loopne
mov
pusha
outs
(bad)
arpl
movs
ret
icebp
sti
fisttp
jno
add
out
movs
push
push
fwait
dec
xchg
es
add
or
js
shl
mov
push
cmp
mov
xchg
mov
sub
push
adc
in
mov
push
xchg
dec
call
sbb
mov
jl
ja
aad
imul
xchg
shl
jmp
sub
dec
jg
daa
shl
add
int3
pop
clc
add
stc
cmps
adc
ins
ins
aad
nop
(bad)
mov
je
mov
dec
test
cmps
xchg
ror
(bad)
test
mov
or
stc
addr16
mov
dec
inc
loope
adc
repz
cmp
(bad)
dec
adc
mov
es
push
dec
cmp
xor
ret
add
iret
sbb
icebp
lods
ins
jmp
jge
push
out
push
rol
fidiv
mov
jg
(bad)
lock
pop
push
inc
movs
out
dec
inc
int
je
lods
adc
out
gs
neg
and
cmps
or
retf
pop
fisubr
inc
dec
ss
add
mov
fild
movs
xor
mov
and
cmps
imul
adc
sub
push
in
or
mov
call
push
inc
fmul
dec
pop
arpl
das
jle
mov
fisub
pop
push
jle
xchg
dec
daa
mov
cmp
outs
jb
inc
hlt
and
cli
adc
(bad)
cld
and
xchg
xchg
enter
ret
mov
adc
xchg
mov
pop
mov
aaa
rcl
mov
lock
sti
xchg
inc
jo
pop
dec
scas
lods
xchg
sti
mov
push
mov
mov
aam
adc
cli
xor
xchg
mov
std
aad
mov
mov
addr16
mov
mov
movs
inc
xor
call
mov
add
mov
neg
sbb
adc
adc
retf
lahf
mov
repnz
retf
sti
jle
cmp
cs
fcomp
retf
outs
mov
mov
adc
aad
(bad)
shr
pop
sub
jnp
clc
jle
mov
xor
(bad)
lods
(bad)
adc
outs
mov
outs
inc
movs
cwde
fcom
xchg
pop
mov
xor
ja
sbb
out
pop
xor
adc
(bad)
jmp
mov
ins
and
mov
push
ret
jg
lds
fdiv
mov
xchg
push
enter
shl
mov
fwait
loope
gs
mov
shl
test
fs
(bad)
lahf
mov
mov
adc
add
jne
icebp
shl
aaa
dec
jbe
push
sub
cld
add
retf
push
stos
push
lods
in
xor
xor
mov
jmp
test
xchg
aam
sahf
dec
jo
lods
jo
and
inc
sub
push
fsubrp
inc
xchg
sub
std
jmp
adc
inc
repnz
inc
nop
fxch
push
xlat
ins
push
xor
and
dec
sbb
movs
test
pop
jg
cmc
push
ret
ret
leave
xor
ret
push
adc
nop
adc
inc
mov
jg
lods
stc
xchg
lock
rcl
les
dec
mov
adc
and
inc
rol
ret
ffreep
scas
(bad)
dec
movs
ja
pop
mov
ja
(bad)
and
das
leave
test
mov
(bad)
inc
xchg
sbb
push
dec
into
aaa
cli
jns
and
movs
lds
dec
adc
imul
or
and
dec
sti
jl
shl
fstp
out
inc
inc
mov
mov
add
fisubr
mov
leave
dec
loope
mov
cmp
std
push
cmp
mov
lods
dec
(bad)
cmp
sti
pop
mov
push
push
xor
(bad)
sub
mul
aas
std
enter
xchg
mov
cwde
mov
pop
ins
xchg
ins
sahf
out
dec
jp
stc
sub
test
bound
sub
scas
mov
and
push
xchg
push
pusha
xchg
movs
nop
sub
std
bound
cmp
mov
sub
cmp
sahf
(bad)
pop
mov
call
and
sub
in
fmul
sbb
mov
(bad)
hlt
outs
mov
(bad)
call
cs
outs
dec
xor
pop
fs
push
pop
(bad)
push
icebp
es
arpl
mul
jg
sar
jbe
mov
push
or
ins
mov
es
enterw
frstor
aad
js
(bad)
fs
in
(bad)
ss
bound
rol
dec
lods
inc
push
xchg
jecxz
sub
iret
lods
dec
mov
int3
cmps
fisttp
adc
mov
out
jb
add
mov
rol
inc
scas
mov
jl
mov
jg
clc
ficomp
cmp
and
mov
cmc
pop
fwait
or
aas
fnsave
and
mov
and
out
in
mov
cmp
mov
dec
jl
popa
mov
mov
xchg
fiadd
sti
movs
clc
jmp
sahf
mov
out
inc
push
push
cmp
adc
mov
mov
cmp
aam
sbb
pop
jb
out
mov
or
cld
pushf
mov
daa
popf
les
test
inc
in
outs
fisttp
sar
pop
mov
mov
inc
add
mov
imul
jae
fcomip
mov
or
xlat
aas
aas
cli
xor
adc
retf
stc
xor
arpl
(bad)
push
(bad)
xchg
sbb
mov
std
push
mov
mov
xor
cmp
js
cmp
in
push
imul
repz
outs
xor
fwait
rcr
movs
and
aas
daa
mov
adc
(bad)
push
cli
mov
ss
test
movs
jb
mov
fcom
and
fbld
xor
mov
popf
call
movs
rol
out
mov
cmp
push
hlt
jae
dec
xchg
lods
xchg
mov
jno
enter
mov
push
jb
test
fldenv
adc
sar
sti
sti
cmps
and
xchg
shr
dec
mov
enter
jg
cmps
cmp
xchg
lods
mov
shr
sar
stc
out
in
arpl
mov
xor
out
aas
ret
jb
mov
imul
jmp
hlt
in
je
push
mov
ins
mov
outs
jge
inc
dec
mov
call
ja
inc
ds
sbb
adc
nop
cmc
mov
fwait
arpl
in
fisub
call
imul
jl
mov
outs
(bad)
inc
dec
lock
std
es
inc
cdq
xor
cs
jb
cs
iret
push
call
loopne
jno
dec
push
xor
(bad)
popf
inc
jg
(bad)
jae
inc
jg
cs
xchg
xchg
rcl
pusha
xor
(bad)
aam
(bad)
and
sbb
call
movs
ret
loop
xor
pop
xor
bound
test
pop
xor
xchg
xchg
es
inc
xchg
dec
or
push
push
and
sbb
or
inc
retf
lds
and
push
push
push
mov
mov
push
sbb
inc
or
enter
retf
ficomp
pop
bound
or
adc
xor
loop
inc
sar
jnp
sub
pusha
pusha
add
ins
and
es
and
cwde
push
inc
ds
and
ja
dec
add
jg
and
in
dec
cs
fisub
jle
aas
mov
sub
pop
rol
xor
mov
aaa
adc
xchg
jl
jl
test
push
push
pushf
or
xchg
jbe
stc
jbe
pop
lea
std
arpl
mov
inc
mov
js
jmp
sbb
cmp
icebp
ret
jmp
mov
movsx
cli
jne
mov
pop
iret
sbb
jbe
or
xor
test
sar
mov
adc
inc
clc
dec
das
mov
clc
adc
or
iret
mov
cwde
mov
jmp
mov
lea
push
inc
lods
addr16
pop
adc
aam
adc
(bad)
clc
cmc
add
add
mov
aad
loope
jmp
pusha
adc
fnstenv
rol
scas
xchg
leave
xor
adc
std
sub
aad
jg
mov
lods
push
fwait
cmp
sub
jbe
sbb
or
in
inc
inc
sub
xor
sub
into
pop
inc
mov
xchg
cld
(bad)
pop
xor
dec
arpl
lock
add
push
je
pop
inc
push
test
inc
test
stc
add
sbb
mov
adc
push
xor
iret
pusha
in
add
cmp
adc
pop
and
(bad)
xchg
push
movs
dec
mov
repnz
mov
movs
sbb
clc
pop
add
stos
aad
(bad)
out
add
inc
loop
jmp
test
jle
in
dec
ss
stc
movs
fnstcw
push
fmul
jmp
push
jo
pop
push
add
ret
inc
xchg
fisttp
sbb
daa
fidivr
xchg
cmp
fisubr
jo
dec
lock
sub
imul
test
ret
ins
jp
jecxz
sbb
ret
push
fmul
daa
inc
sub
les
pusha
ja
xor
fsub
rol
rol
clc
jl
fstp
in
sub
(bad)
loopne
imul
mov
call
in
rol
and
pop
imul
add
fstp
cmps
sbb
and
div
dec
popa
aam
mov
inc
xchg
scas
imul
and
cmp
push
mov
mov
mov
fstp
es
push
sub
outs
cli
inc
push
xchg
repnz
scas
repz
leave
mov
mov
ins
fadd
call
cmp
in
call
inc
pop
inc
cmp
data16
pop
xchg
add
adc
and
mov
push
push
retf
lds
push
into
and
movs
aam
out
jnp
sbb
int3
xor
dec
xor
test
pop
ins
jp
lea
sbb
pop
jle
inc
shl
cmp
ret
dec
adc
xchg
add
outs
pop
cs
add
jns
dec
adc
movs
cmp
jmp
test
shr
jne
or
ja
aad
mov
jg
stos
out
not
xor
loope
test
pop
dec
ficomp
dec
mov
xlat
dec
add
xchg
xor
outs
in
xchg
ja
sbb
cwde
into
fwait
std
les
loope
jg
loope
jmp
sti
sub
lods
mov
xor
mov
or
out
cmp
fidivr
jo
repz
mov
test
mov
xchg
add
mov
sbb
sub
mov
rol
push
xchg
push
dec
popa
test
int
repz
mov
into
(bad)
push
sub
es
sub
(bad)
out
lods
fiadd
fs
cmps
aad
xchg
js
imul
mov
fwait
cli
push
mov
scas
push
and
aam
jns
and
rcr
fnsave
cmp
movs
xor
push
push
pushf
daa
loop
dec
inc
jl
scas
hlt
dec
pop
sbb
into
movs
sub
mov
ret
inc
adc
mov
or
dec
sar
sbb
ins
jmp
sbb
mov
adc
and
scas
mov
enter
pop
jae
mov
adc
int3
std
ret
pop
jle
repz
xor
xchg
push
sbb
add
addr16
cwde
push
pop
pop
mov
pop
sbb
(bad)
push
inc
xchg
pop
jmp
ffree
outs
xchg
iret
adc
test
mov
and
aam
jge
nop
jbe
mov
out
repnz
sti
jp
pop
xchg
cmc
sti
jmp
rol
adc
es
mov
dec
in
inc
out
retf
push
pop
mov
cld
(bad)
mov
pop
cmp
push
bound
mov
jecxz
sub
mov
test
out
xchg
icebp
cwde
clc
sbb
imul
fidivr
shl
test
jg
stos
rcl
ss
pop
les
imul
jnp
add
fist
popa
pop
fiadd
inc
push
comiss
loope
add
test
ret
inc
jne
mov
jno
sti
loop
adc
and
arpl
inc
test
push
in
test
mov
movs
push
jecxz
aaa
fldz
(bad)
jne
mov
int3
aam
dec
(bad)
ret
add
pop
in
jge
ret
dec
fwait
xor
cmp
sbb
repz
and
xchg
add
add
mov
pop
idiv
and
xor
mov
fsubr
sbb
mov
push
push
imul
call
test
enter
dec
sbb
inc
pusha
(bad)
xlat
sbb
popf
mov
cmp
mul
push
push
cli
mov
inc
cmc
outs
sub
mov
mov
movq
inc
and
imul
mov
scas
das
pop
mov
mov
jb
scas
mov
loope
fbstp
in
lock
hlt
fcomp
dec
dec
cmp
mov
mov
jecxz
fisttp
push
xor
into
xchg
loopne
mov
sahf
mov
xor
test
addr16
mov
push
inc
icebp
mov
xchg
jae
and
lods
push
fdivp
fld
sub
cwde
in
pop
xchg
fwait
(bad)
in
fisttp
push
or
add
or
push
and
test
rol
pushf
imul
in
jbe
test
in
pushf
lock
stos
pop
add
rcr
or
mov
movs
sub
inc
push
repnz
call
cmp
nop
into
ret
dec
sub
inc
mov
and
push
jg
xchg
xor
mov
xor
add
pop
adc
push
adc
nop
adc
mov
push
test
cli
test
scas
inc
scas
int
(bad)
push
jecxz
cli
in
adc
fs
jb
add
xchg
out
test
rcr
jo
jl
xchg
and
sub
push
pop
aad
xchg
stos
mov
scas
test
addr16
in
xchg
jecxz
fsub
and
mov
lds
sub
dec
adc
mov
mov
lock
pop
jb
int
sub
test
dec
ret
pop
out
pop
xchg
imul
jb
jno
pop
ret
sbb
jmp
pop
adc
or
mov
mov
adc
test
xor
adc
loop
fldenv
shr
cwde
mov
call
sbb
cld
jno
pop
enter
retf
ds
sahf
fst
mov
bound
ja
add
add
popa
int
mov
sub
outs
lods
xor
inc
or
and
in
ins
test
and
popa
popa
xchg
dec
sbb
jl
mov
imul
clc
call
pop
inc
push
jge
cmp
cs
ret
ja
das
push
ror
adc
sti
mov
jg
call
xor
mov
dec
xor
cmp
inc
sub
pop
xchg
retf
rcl
lods
fs
daa
or
loop
xchg
mov
mov
adc
sub
iret
push
cdq
fucomi
rcl
scas
das
xchg
adc
push
mov
inc
xlat
imul
adc
push
out
push
lahf
les
adc
xor
mov
inc
push
xor
jl
jecxz
(bad)
repz
sub
imul
mov
sahf
fsub
iret
or
(bad)
in
(bad)
repnz
inc
mov
leave
mov
call
jno
in
jmp
in
shl
add
dec
sub
shl
mov
xor
or
jmp
add
add
add
sub
cmp
xchg
out
pop
sub
int
aas
inc
jp
call
sub
sub
lock
shl
outs
lahf
gs
movs
nop
cdq
mov
mov
xchg
pushf
mov
xchg
loope
add
adc
xchg
retf
pop
jmp
jo
push
rol
inc
outs
outs
adc
sahf
xchg
call
adc
jo
cmp
js
sbb
cmp
enter
cmp
sub
in
xchg
push
out
dec
pop
inc
lock
inc
gs
jmp
das
inc
lods
xor
sahf
cld
cmp
cld
test
mov
sahf
int3
idiv
sbb
mov
or
(bad)
mov
mov
cmp
mov
enter
cmp
stc
jno
inc
mov
in
sub
jnp
sbb
in
repnz
xchg
mov
cmp
jbe
pop
inc
jecxz
dec
(bad)
cli
lods
sbb
xchg
mov
xchg
daa
aaa
inc
cdq
xchg
shr
dec
mov
stc
aad
test
or
cld
leave
fwait
push
test
cdq
in
inc
pop
ds
cmp
dec
xchg
lods
and
(bad)
into
cmp
jno
cmp
lahf
mov
mov
sbb
cmp
xchg
and
and
mov
dec
shr
mov
push
and
add
in
cmp
ret
push
mov
call
lods
or
push
mov
js
retf
cmp
lock
lds
in
adc
movs
rcr
jle
paddusb
movs
push
and
jmp
hlt
jmp
sbb
jne
xchg
mov
xor
(bad)
mov
call
scas
adc
sbb
mov
fnstsw
test
pop
inc
mov
aaa
test
mov
or
xor
mov
rcl
popa
test
cmp
fist
pop
sub
or
into
retf
repz
mov
xchg
cmp
out
into
mov
fidiv
adc
ds
mov
fstp
or
mov
cmp
and
cmp
cli
jl
les
dec
das
out
jae
fstp
stc
add
jge
pop
or
mov
scas
push
push
lahf
xlat
js
cmp
popa
jmp
adc
pushaw
out
sti
pusha
(bad)
sbb
rol
xchg
enter
addr16
adc
push
stos
mov
jns
jne
push
mov
mov
test
iret
add
(bad)
int3
push
(bad)
dec
mov
shr
and
les
jmp
xor
fst
cmp
mov
push
jl
movs
nop
inc
sbb
push
cdq
and
cmp
mov
test
nop
test
pop
mov
inc
and
mov
popa
out
sub
(bad)
mov
mov
mov
dec
into
js
pusha
(bad)
sub
jo
dec
mov
inc
ja
test
test
cmp
jns
out
jecxz
retf
sbb
pop
outs
xor
and
das
add
adc
js
xor
int
or
scas
in
push
pop
imul
in
bound
rol
rol
sbb
jmp
and
(bad)
imul
pop
sub
fmul
jbe
pop
scas
cwde
mov
ret
sar
push
je
xor
push
stc
cdq
or
scas
dec
jb
lea
in
mov
jne
mov
inc
pop
std
call
rcr
fs
div
imul
std
and
dec
pop
jge
push
popa
inc
mov
loope
lock
pop
cmc
ret
les
mov
dec
loopne
ds
mov
mov
test
mov
mov
(bad)
and
jl
xchg
push
test
xor
inc
fcmovne
jb
xor
fdiv
push
les
test
pushf
pusha
popa
cli
push
push
loop
mov
inc
call
(bad)
or
aad
hlt
jmp
daa
fbld
scas
push
ror
rol
inc
out
cmovg
retf
das
xchg
cmp
push
mov
mov
jg
in
push
inc
retf
daa
mov
popf
xor
push
sbb
sub
cwde
jmp
inc
jp
loopne
cdq
cmp
cmps
push
stc
jp
xchg
iret
js
and
imul
test
test
push
gs
clc
jg
dec
mov
mov
xchg
push
(bad)
adc
into
and
inc
loope
xchg
clc
mov
sbb
arpl
repnz
scas
xchg
jbe
mov
out
sahf
mov
jle
sub
repnz
mov
and
sbb
fisub
xchg
push
lea
jo
cs
pusha
dec
jb
enter
mov
cld
xor
pop
add
mov
adc
ja
xchg
pop
and
xor
ror
dec
out
imul
aas
sbb
idiv
pop
sar
inc
and
xor
mov
sub
cmp
inc
sbb
mov
push
out
mov
xor
add
add
test
retf
and
or
cld
retf
xchg
mov
pop
bound
stc
or
pop
add
xchg
xlat
xor
push
pop
sahf
add
cdq
aas
std
outs
pop
xchg
hlt
add
inc
jge
jmp
adc
mov
call
xor
inc
push
mov
mov
repz
mov
dec
add
mov
(bad)
std
dec
lods
push
mov
dec
mov
adc
xchg
nop
mov
test
and
cs
test
mov
(bad)
jb
(bad)
cmp
fadd
sahf
jp
sbb
sub
fidivr
lahf
loope
rcl
ins
and
pusha
(bad)
(bad)
imul
jne
push
sub
push
ret
mov
inc
(bad)
jne
je
into
jb
lds
call
sub
mov
mov
shl
bound
mov
sar
(bad)
pop
inc
jno
paddq
pop
into
inc
(bad)
and
or
dec
dec
or
repz
ficomp
lss
ins
ret
pop
je
out
mov
or
(bad)
pop
add
mov
dec
ror
dec
push
push
sar
int3
mov
add
xchg
bound
aaa
xchg
jp
jecxz
push
dec
ret
push
xchg
adc
dec
mov
es
mov
shl
push
int3
or
pushf
jl
rol
arpl
cli
inc
xor
in
and
pop
push
dec
popf
jmp
rcr
pushf
lock
mov
mov
xchg
mov
mov
repz
(bad)
sbb
stos
ss
shl
adc
jb
push
adc
jle
pop
and
inc
jmp
sbb
xchg
mov
inc
add
cmp
jg
cmp
add
mov
add
add
fnstsw
add
out
pop
push
rcr
push
jg
inc
cli
or
xchg
inc
xor
(bad)
aas
fcmovbe
push
push
jbe
pop
idiv
or
jg
out
fdivr
xchg
sti
lock
cwde
mov
mov
xchg
addr16
inc
mov
pop
rcl
jnp
xchg
call
or
mov
jge
addr16
xor
mov
xor
inc
cli
inc
xchg
push
(bad)
mov
add
mov
hlt
mov
push
int
mov
fs
stc
bound
int3
jmp
mov
inc
cmp
fwait
mov
ror
add
dec
sar
jle
pop
out
xchg
or
sbb
imul
pop
jp
inc
test
lea
pop
inc
mov
and
mov
or
dec
push
cmp
cmps
and
jmp
cmp
outs
sbb
(bad)
imul
cmp
cwde
cli
imul
xchg
fild
push
jbe
in
outs
pop
pop
cmp
jae
mov
jne
or
and
xchg
mov
pop
daa
xor
sbb
mov
pusha
xchg
add
lahf
mov
test
jbe
inc
js
push
imul
xchg
jb
push
(bad)
clc
in
mov
dec
movs
or
and
ins
inc
and
mov
out
inc
repnz
and
aad
leave
xlat
or
inc
movs
hlt
push
sub
ja
ja
mov
and
enter
xchg
cmp
jne
pop
pop
rcl
xlat
cmovne
cmp
loopne
mov
push
dec
in
inc
mov
sbb
xchg
popa
adc
or
pop
fs
and
fdiv
(bad)
imul
loopne
adc
mov
pavgb
pop
dec
out
sub
scas
outs
add
push
xor
sub
xchg
and
jg
cmp
test
cmps
iret
mov
stos
shl
retf
add
dec
xor
push
mov
lock
sbb
sub
cmp
scas
imul
add
mov
adc
pop
std
xchg
fcomp
xor
mov
aam
pop
pop
inc
loopne
mov
push
dec
scas
jl
jne
xor
push
loop
mov
jbe
pop
ror
sahf
rcr
adc
repz
movs
dec
icebp
mov
fdiv
scas
cmp
xlat
in
outs
xchg
fnsave
aaa
mov
pushf
pop
test
fwait
rol
inc
and
push
and
sti
(bad)
mov
sbb
inc
pop
adc
xchg
ds
lahf
cli
call
mov
mov
or
(bad)
sub
or
jmp
or
hlt
js
into
(bad)
and
jb
inc
cmp
mov
jge
dec
clc
(bad)
cmp
xchg
mov
fisttp
xchg
mov
inc
adc
out
dec
(bad)
hlt
mov
xchg
cmp
sbb
pop
arpl
out
pop
or
cli
cli
sub
dec
ins
xor
ja
xor
pop
repnz
push
adc
add
mov
adc
(bad)
cmp
pop
mov
adc
and
xlat
dec
sub
mov
xchg
pop
lods
mov
cmp
ins
shl
movs
mov
xchg
aad
cmp
push
clc
out
push
sbb
enter
sbb
repnz
mov
push
into
adc
in
retf
cmp
sub
shr
(bad)
outs
pop
fcom
scas
lods
loop
out
sbb
mov
ss
jle
test
jmp
fnsave
mov
add
sub
clc
sbb
int
mov
push
mov
bound
cld
and
sbb
fild
cmp
add
push
jg
adc
push
cli
sbb
inc
sbb
movs
cmp
xor
jo
pop
mov
sub
sbb
je
adc
sahf
pop
retf
arpl
pop
sub
cmc
fidiv
(bad)
iret
icebp
add
xchg
and
mov
in
mov
mov
rol
sub
test
push
(bad)
inc
jo
lods
cs
inc
adc
fs
pop
or
pop
adc
shl
sbb
dec
hlt
jmp
sbb
test
or
gs
cmp
cld
jmp
sar
push
stos
push
mov
pusha
stos
xchg
sahf
jp
xor
aam
ret
pop
sbb
pop
clc
lock
ja
sub
jae
xchg
out
cmp
inc
cmps
fnstcw
push
test
fcom
pop
mov
push
rol
xchg
loopne
int
add
mov
jg
shr
xor
aad
sahf
pop
dec
(bad)
shr
pop
cmp
pop
and
out
icebp
and
jle
mov
fimul
test
aas
or
jae
cmp
test
into
jge
movs
fadd
call
rcr
sti
xor
xchg
repz
sub
movs
ret
xchg
outs
in
fst
lock
jns
nop
inc
ins
adc
mov
es
pop
mov
pop
imul
adc
cmp
add
outs
xchg
out
xchg
lock
mov
push
rcr
push
aam
xchg
leave
int3
adc
and
push
fild
xor
jmp
mov
push
hlt
movaps
dec
lods
xor
(bad)
loopne
fisttp
inc
push
mov
repnz
pop
mov
fs
rol
scas
or
in
iret
out
and
out
cmps
popf
out
jo
sub
je
pop
mov
cmp
fld
and
cmp
jp
jbe
jle
jbe
jno
xchg
sbb
dec
xchg
xchg
sti
out
jmp
loope
fdivr
cmps
mov
xor
repnz
push
xchg
jnp
and
lods
xor
out
addr16
xchg
mov
pop
sub
xor
repz
(bad)
jmp
or
aam
loopne
sub
cmps
clc
jmp
gs
mov
mov
sbb
pop
bnd
mov
je
das
rcr
add
sub
mov
cmps
loope
ins
push
mov
mov
out
xchg
or
icebp
js
dec
dec
jl
add
aad
cmps
inc
sti
inc
fldcw
cld
sub
popf
pop
inc
call
fwait
xor
ins
mov
dec
pop
dec
(bad)
mov
xchg
dec
mov
mov
and
xor
jb
jge
sub
pop
inc
cmp
push
pop
mov
icebp
in
div
jo
xor
fld
mov
outs
lahf
add
retf
leave
dec
jno
pop
arpl
jb
int
fisttp
jmp
jmp
lock
xchg
sar
inc
je
push
imul
mov
out
push
pop
call
add
inc
(bad)
jnp
scas
mov
xchg
pop
mov
mov
lods
dec
in
pop
aad
retf
sbb
mov
retf
push
stc
sbb
fmul
inc
mov
jl
cld
out
push
sbb
push
push
pop
popa
add
sbb
test
out
pop
mov
sub
cmps
nop
dec
fisubr
lock
dec
int
mov
loope
mov
data16
jle
fdivr
xor
iret
fs
(bad)
sub
mov
aad
ja
xchg
dec
ret
lds
mov
add
jmp
sub
data16
add
mov
xor
(bad)
pushf
ret
ja
dec
dec
popf
cdq
inc
add
pop
or
scas
dec
shl
inc
sub
and
mov
add
punpckhbw
jp
dec
imul
pop
cmp
into
xor
and
and
jle
repz
jecxz
mov
push
cmp
in
bound
hlt
pop
call
sub
hlt
mov
fcmovne
sub
adc
jle
and
shr
add
push
cwde
xlat
jno
sub
pop
retf
cwde
adc
adc
xor
stos
mov
mov
ja
cli
das
call
add
movs
std
pop
jp
sbb
lea
repnz
mov
fldpi
nop
fs
aad
shl
adc
les
cwde
sbb
aad
shl
cmp
pop
imul
xor
outs
hlt
push
icebp
mov
ret
iret
lahf
leave
cmp
dec
pop
cli
ss
test
es
jmp
and
jle
pop
add
mov
ja
xchg
xor
jmp
mov
lods
pinsrw
ror
mov
imul
dec
adc
(bad)
mov
add
xchg
hlt
cmp
sti
jmp
mov
pushf
adc
sbb
aam
jbe
mov
sbb
jbe
xor
inc
in
dec
sub
dec
test
or
clc
inc
mul
jo
cmp
sub
(bad)
movs
fisub
jl
xchg
jno
mov
(bad)
in
pop
mov
shl
popa
ja
push
add
mov
leave
daa
xchg
pop
shl
add
inc
(bad)
jnp
xchg
mov
xchg
int
or
xor
xchg
sub
arpl
in
fisubr
or
sub
jmp
in
lahf
xor
int
and
fnstcw
xchg
lock
inc
pop
cwde
jmp
sbb
sti
stc
ret
push
fwait
xlat
nop
add
neg
cwde
pop
mov
jae
push
test
(bad)
mov
hlt
mov
and
into
pop
mov
fmul
mov
sub
and
inc
jle
inc
das
cmps
call
shl
jp
call
lods
pop
aad
shl
imul
stos
ins
fist
xor
cld
das
pushf
mov
add
and
fistp
add
cdq
aas
in
mov
dec
or
sbb
or
shl
loopne
xor
inc
int3
adc
fwait
xchg
push
adc
out
jne
push
xor
add
loopne
pop
mov
test
or
daa
and
or
mov
push
pop
enter
mov
cmps
xor
inc
in
sbb
xlat
aaa
sub
call
add
sub
jmp
mov
add
aaa
test
push
sbb
inc
shr
fisub
ja
cmps
inc
and
mov
outs
mov
fild
into
ret
scas
sub
fbstp
add
and
and
sub
mov
pop
sahf
sub
test
bound
cmc
out
mov
mov
push
mov
cdq
movs
push
cdq
mov
iret
jo
adc
fcomip
movs
dec
fiadd
(bad)
ret
or
jl
cmp
int3
ror
inc
loope
xor
mov
and
jae
idiv
cmp
cld
scas
lea
sub
aam
shr
pushf
idiv
data16
clts
lds
mov
cmp
cmp
in
std
push
xchg
jae
mov
loope
daa
stc
add
ret
cdq
xchg
push
leave
mov
ror
push
and
sbb
push
pop
jns
in
rcr
and
dec
adc
lea
dec
repnz
pop
push
enter
div
test
xlat
mov
cmp
repz
jnp
xchg
adc
adc
sbb
xor
mov
jb
fisub
adc
out
lea
repz
cdq
fcmovne
iret
ss
push
daa
cmp
add
out
push
push
rol
dec
dec
stos
sub
cmp
ja
adc
and
inc
sub
das
(bad)
jbe
cld
xor
ins
xchg
std
cmp
mov
jmp
mov
fmulp
and
xchg
xchg
lods
xor
dec
sahf
add
inc
(bad)
into
aas
mov
das
mov
or
fisttp
lahf
rcr
pop
jmp
movs
int3
dec
push
scas
inc
sub
jbe
cmps
inc
add
fmul
jbe
add
loope
nop
dec
stos
jg
sub
adc
stc
clc
in
int
cmp
out
inc
loope
mov
daa
adc
xor
push
les
in
xor
dec
xchg
sbb
mov
fs
lea
push
jmp
pop
push
xchg
rcl
imul
dec
adc
mov
cmp
mov
or
fmul
fbstp
repz
scas
mov
mov
mov
xor
mov
aaa
fwait
mov
pop
inc
and
jnp
test
and
aam
pavgw
idiv
cld
dec
imul
(bad)
ins
add
ret
lods
add
xor
jnp
adc
inc
push
fdiv
push
mov
sbb
xor
sbb
test
fucomip
pop
xchg
add
(bad)
dec
push
fbstp
fisttp
jae
aad
or
push
add
and
pushf
ficomp
test
aam
into
inc
out
movs
(bad)
jne
(bad)
sbb
push
pop
mov
les
jmp
mov
add
pushf
leave
push
leave
jp
mov
ss
cwde
in
pop
push
adc
mov
and
pop
mov
pop
mov
ja
cmps
call
ins
pop
ror
adc
fild
shl
sub
and
dec
int
pop
inc
(bad)
push
in
mov
mov
(bad)
and
xchg
les
repnz
scas
push
cmps
sbb
test
xchg
pop
inc
jmp
out
hlt
rcr
mov
cld
jp
imul
mov
mov
(bad)
arpl
push
sub
dec
xchg
or
push
adc
or
xchg
xchg
(bad)
ins
inc
movs
sahf
lods
(bad)
cmps
mov
sbb
add
into
(bad)
std
mov
loopne
and
add
mov
popa
mov
test
jmp
frstor
jl
adc
xchg
icebp
movs
shr
pop
jle
mov
push
ins
in
mov
pop
adc
inc
and
aad
add
js
mov
adc
pop
sub
push
mov
pop
adc
cwde
(bad)
ins
ins
rol
(bad)
test
cmps
jge
mov
repnz
mov
fbld
jno
jae
rcr
pop
pop
adc
aam
scas
mov
push
mov
and
sti
push
inc
adc
xor
ss
push
xor
sub
adc
neg
shl
cmp
push
mov
shr
cmc
(bad)
cmp
push
add
push
mov
mov
jmp
dec
pushf
push
cmc
jns
jecxz
retf
xchg
int
ret
sub
adc
lahf
add
push
xor
aas
es
out
inc
or
out
leave
or
pop
test
js
sbb
lods
mov
pop
setno
jg
jbe
call
xor
addr16
(bad)
out
cmc
ins
sub
adc
sub
inc
cmc
sbb
adc
bnd
cs
cli
pop
jno
dec
dec
push
call
test
inc
mov
sub
mov
xor
test
jl
jp
xchg
pushf
cmc
int
xchg
outs
addr16
cmp
add
push
xchg
rcl
ss
fs
test
push
xchg
icebp
pusha
call
cli
sar
(bad)
pop
sbb
mov
(bad)
fdivr
sub
inc
and
lea
je
jl
rcl
pop
test
push
shl
div
hlt
fld
shr
mov
fcom
(bad)
fsubr
xor
outs
adc
inc
cld
jl
jecxz
sbb
psrld
pushf
mov
add
add
int
dec
gs
hlt
xchg
fbld
xchg
cmp
and
xchg
dec
xchg
mov
sub
int3
xchg
ja
push
mov
push
mov
loop
les
xor
cmp
daa
test
pop
push
jno
xor
fidiv
ins
fcomp
loope
mov
fnsave
xchg
loope
mov
pushf
and
push
(bad)
mov
inc
push
jge
sub
adc
stos
dec
xchg
xchg
pop
push
sbb
movs
mov
push
idiv
aad
pop
xchg
movs
movs
push
push
inc
icebp
jp
aas
mov
jbe
mov
shl
pop
mov
out
fistp
sar
inc
in
xor
jg
and
sub
xchg
ret
pop
cmp
cmps
ret
cmps
repz
inc
xor
sub
ins
sahf
scas
rol
mov
push
sbb
clc
mov
jge
(bad)
or
mov
nop
dec
sbb
or
or
leave
ja
mov
ds
ror
data16
pop
push
sbb
xchg
repnz
sub
jmp
(bad)
pop
das
xor
mov
cdq
imul
pop
(bad)
fsubr
inc
xchg
call
pop
shl
jo
ds
sets
loopne
mov
cmp
dec
push
nop
sbb
jne
jecxz
mov
mov
int
sbb
add
rcr
(bad)
enter
jne
xor
add
cmps
cli
inc
loopne
dec
jmp
ss
add
jmp
sbb
out
sub
cmp
lods
scas
pop
xlat
jae
movs
and
mov
mov
or
mov
nop
loope
inc
cs
push
cli
adc
mov
ror
in
(bad)
push
jo
xchg
mov
pop
enter
sbb
jecxz
leave
lock
(bad)
lods
jnp
xchg
mov
popa
push
retf
xor
and
mov
loop
dec
popa
pop
adc
adc
out
mov
out
call
aam
xchg
in
and
outs
fimul
(bad)
cmc
ficom
shr
mov
inc
mov
movs
push
les
test
test
add
ror
bound
xchg
(bad)
xor
jb
std
mov
std
sbb
repnz
pop
arpl
mov
loop
repz
inc
pop
jmp
inc
adc
or
and
es
sub
add
pop
sub
adc
adc
xchg
test
mov
pop
je
dec
add
outs
stc
mov
addr16
jno
push
xor
xchg
aam
cmps
nop
mov
push
pop
mov
sbb
or
push
mov
mov
pop
bnd
cmp
retf
adc
sti
inc
je
fld
lods
cmp
stc
mov
adc
fwait
sbb
sub
add
ss
sbb
fnstenv
push
xchg
inc
cwde
dec
pushf
jb
and
div
ins
add
add
hlt
sbb
into
push
sub
dec
lea
in
sbb
in
stos
(bad)
dec
dec
ret
inc
jae
das
xchg
pushf
mul
sbb
mov
cdq
jmp
cmp
int
push
dec
out
sub
push
cwde
adc
scas
(bad)
sbb
iret
sti
add
cwde
mov
in
std
jbe
sub
das
push
sub
jnp
movups
pop
push
xor
int3
stos
(bad)
loopne
stos
psubusb
cmp
retf
cmp
push
jl
pop
cwde
cmp
nop
call
(bad)
popf
and
jmp
aam
out
push
call
cmc
int
ret
dec
lea
retf
cmp
movs
xchg
sahf
mov
push
mov
outs
test
or
sub
mov
lock
mov
push
dec
or
fdiv
xor
sbb
jecxz
gs
(bad)
cmp
js
repz
or
xchg
sub
shl
xor
div
loopne
call
(bad)
push
icebp
inc
repz
adc
jecxz
mov
cli
cli
xor
jle
repz
inc
ss
inc
out
pop
fsubr
or
xor
and
enter
push
push
mov
push
test
push
(bad)
mov
inc
gs
ret
movs
jg
adc
sti
xchg
aad
push
add
sbb
add
ret
imul
mov
add
cmps
mov
call
lahf
test
imul
(bad)
stc
stos
outs
aad
jecxz
mov
inc
pop
retf
mov
xchg
je
out
jo
ins
rcr
(bad)
cmp
mov
inc
add
adc
mov
iret
icebp
add
push
add
dec
data16
test
push
mov
xchg
gs
test
arpl
mov
or
cmp
xor
add
icebp
out
fs
cmp
mov
out
cwde
pop
inc
push
push
imul
test
cmps
aam
and
iret
sub
jecxz
xor
push
loopne
mov
jns
dec
jns
or
icebp
ja
in
dec
in
pop
fs
jp
jle
loope
cmp
add
mov
call
sub
rcl
sub
(bad)
(bad)
sub
mov
mov
nop
inc
fmul
into
jbe
xchg
pop
adc
dec
push
jo
pop
pop
cmp
loopne
nop
jle
sar
into
xchg
retf
lods
mov
movs
jns
rol
data16
dec
jecxz
test
sar
and
sub
push
dec
jmp
fwait
pop
cmp
and
adc
ror
fnstenv
cmps
dec
loopne
gs
and
cmps
adc
mov
push
pop
rcr
jmp
or
mov
mov
inc
xchg
xchg
push
out
bound
cmc
(bad)
(bad)
je
dec
fimul
or
ret
jb
out
jb
jns
ret
jl
add
or
fucomp
mov
xor
jo
popa
jg
mov
mov
jge
test
aas
push
pop
pop
xchg
and
mov
outs
mov
pop
call
xlat
mov
arpl
ja
mov
xchg
in
lods
cmps
sub
in
xchg
repnz
dec
pop
in
and
out
sti
fwait
dec
xor
xor
sub
mov
mov
je
sahf
enter
out
retf
push
and
fisttp
retf
not
mov
pop
or
jl
or
push
adc
loop
mov
dec
pop
xchg
ds
into
fst
cwde
daa
fmul
xchg
out
push
jge
and
jb
movs
fmul
pop
je
xor
repz
jg
stos
aas
lods
mov
cmp
adc
or
pop
(bad)
pop
into
pop
rcl
pop
xchg
sub
shl
out
pop
jno
imul
popf
dec
xchg
pop
jne
mov
push
pusha
and
enter
lds
retf
or
xchg
sub
aad
mov
bound
jle
mov
loop
aaa
outs
mov
mov
imul
mov
mov
pop
mov
inc
clc
ret
pop
cmp
or
pushf
aad
loope
push
(bad)
ss
cmp
movd
icebp
sub
mov
push
sahf
cmp
inc
adc
jge
mov
cld
stc
adc
test
test
je
adc
test
cmp
xchg
daa
aad
mov
aas
xlat
pop
mov
mov
retf
in
fidivr
stc
sub
stc
out
jp
shl
pop
push
out
or
or
adc
jae
mov
icebp
es
js
call
mov
mov
xchg
jno
jecxz
and
pop
fdivr
mov
out
shl
and
xor
fisttp
fs
dec
and
cld
mov
retf
enter
mov
xor
fisubr
into
jns
xor
mov
movs
xlat
and
jle
sbb
mov
aaa
adc
ss
retf
rcr
loop
addr16
lea
pop
mov
adc
add
lds
repnz
add
mov
mov
jg
ret
mov
xor
ins
stos
pop
outs
aaa
jle
jne
sahf
retf
test
dec
xor
(bad)
xor
gs
mov
jo
iret
cmps
stc
sub
xchg
add
push
pop
xor
dec
stos
cs
ins
sub
pop
jnp
sub
bound
mov
enter
mov
xor
shr
rcr
sbb
mov
jl
call
out
aaa
inc
popf
cdq
or
lock
adc
or
dec
ja
inc
inc
adc
jl
in
dec
jmp
adc
popf
inc
jg
sub
pop
xchg
jge
mov
mov
push
cmps
push
pusha
dec
sti
call
push
dec
idiv
fld
xlat
inc
in
add
xor
jl
and
mov
mov
imul
loope
adc
iret
pop
xor
test
cmp
ja
add
mov
adc
adc
xor
jbe
jg
cmpxchg
dec
xlat
and
js
je
test
fstp
loop
fcom
sub
fidivr
out
jp
add
out
or
fcom
xor
ret
push
dec
mov
rol
or
and
push
cmp
push
sub
call
int3
out
test
cld
test
dec
sbb
test
(bad)
loop
inc
mov
xchg
ja
dec
inc
js
inc
addr16
pop
in
pop
jae
mov
fwait
add
mov
dec
lods
or
dec
cmp
xchg
imul
or
cmc
es
mov
(bad)
test
scas
push
or
mov
jb
int
dec
push
inc
mov
mov
or
fimul
cmp
pop
imul
push
sub
loopne
stos
in
loope
mov
adc
inc
loop
push
jb
sbb
cmp
cwde
jno
xchg
xor
ins
out
mov
fs
or
std
shl
xchg
leave
add
sbb
jne
jmp
sub
std
sub
ret
aam
xchg
movs
loopne
or
sub
sbb
pop
mov
dec
jmp
cmp
pop
and
jne
cmp
xchg
popf
push
or
mov
push
fidiv
aas
data16
jge
das
call
xchg
arpl
inc
sub
(bad)
sub
push
sub
cmp
push
sbb
loopne
lock
adc
adc
retf
test
lea
push
jbe
cmp
and
iret
sti
fimul
loope
sub
div
(bad)
enter
call
dec
enter
jbe
call
repnz
fisttp
out
xchg
push
(bad)
xchg
xor
ss
sub
inc
ror
movs
xor
icebp
lea
mov
loop
scas
push
pop
daa
iret
fucomip
xchg
in
cmp
aaa
and
repz
lahf
js
adc
sar
push
(bad)
pop
retf
sub
in
cmp
rcl
pop
add
push
mov
loop
add
jae
mov
cld
aas
dec
jo
popf
sahf
in
mov
cmp
sub
add
adc
inc
ins
ins
dec
push
sbb
add
mov
inc
ss
sar
js
inc
mov
fs
jo
mov
gs
mov
sub
jae
xor
ja
(bad)
mov
and
ret
add
retf
lock
xchg
stc
jne
jg
cli
jns
popa
aad
inc
mov
jbe
jae
mov
in
repnz
or
or
fisttp
dec
push
sub
jle
in
jge
call
mov
sub
in
out
jbe
test
stos
sub
push
cmp
push
pop
(bad)
jl
std
or
leave
mov
in
sahf
push
jno
pop
and
ficomp
outs
mov
ja
mov
arpl
mov
ja
dec
pop
pop
mov
das
xchg
push
not
xchg
jne
mov
mov
or
nop
les
sub
add
or
xor
fst
iret
or
and
adc
xchg
icebp
add
inc
adc
(bad)
cmp
xor
dec
add
jae
call
xchg
lock
mov
imul
lea
mov
ror
and
lods
dec
mov
loopne
pop
cmc
popa
(bad)
pop
mov
pop
add
dec
mov
out
imul
rcr
ins
das
clc
push
sti
bound
sub
mov
mov
xchg
and
mov
out
or
mov
test
or
fwait
retf
and
fnstenv
pop
aas
not
sub
sbb
sub
push
lods
xor
fimul
cmp
hlt
scas
push
mov
pop
ror
mov
jle
push
retf
ret
data16
pop
push
sub
scas
dec
int3
gs
aaa
xchg
cmp
mov
cmp
adc
fsub
xchg
jno
or
dec
ret
jl
xor
mov
mov
fbld
int
and
mov
push
in
jecxz
ins
cmp
nop
mul
mov
(bad)
pop
sar
inc
or
in
add
repnz
mov
xchg
mov
mov
outs
mov
cli
mov
(bad)
retf
icebp
retf
inc
mov
test
mov
das
shl
dec
jo
cmp
jo
push
outs
mov
retf
movs
cmps
ds
loop
fiadd
pop
push
pop
add
mov
dec
loopne
xor
int
fsubr
gs
(bad)
xor
sbb
pop
into
test
xor
mov
xchg
add
cs
or
ins
pop
xchg
dec
retf
push
out
addr16
fisttp
dec
pop
test
inc
push
or
dec
pop
dec
xor
pushf
pop
sub
popa
and
ror
inc
or
mov
pop
pop
outs
push
pop
shl
add
pslld
shl
into
xchg
call
sbb
adc
jg
cld
and
xchg
aad
iret
sahf
fild
repnz
adc
aam
sub
iret
jns
push
dec
push
adc
ds
bound
arpl
pop
push
push
pop
and
loop
mov
lods
xchg
daa
js
les
adc
lods
jge
xchg
dec
int3
repz
push
test
out
or
movs
outs
mov
pop
mov
mov
mov
adc
cmp
or
ror
not
push
mov
adc
rol
sub
cmp
inc
mov
pop
dec
pop
mov
test
out
mov
popf
inc
(bad)
icebp
(bad)
fbstp
inc
xchg
test
inc
aad
dec
mov
mov
mov
cmc
add
xchg
icebp
cld
sahf
jns
mov
call
pop
out
mov
mov
sbb
cli
dec
xor
pop
jo
sub
sub
pop
mov
lea
mov
movs
aas
sbb
adc
mov
pop
fdivr
fnstcw
pop
sub
scas
cmp
mov
and
retf
int3
vorpd
adc
jmp
rcl
mov
mov
shl
sti
dec
push
jmp
sub
mul
das
pop
pop
or
adc
mov
sub
mov
push
jmp
adc
mov
inc
push
push
push
test
sub
jbe
xor
xchg
adc
add
pop
xlat
xchg
test
dec
movs
std
jg
pop
mov
jmp
out
pop
rcl
sti
ins
or
js
jb
jb
in
mov
cmp
cmp
sbb
repnz
scas
adc
fild
push
pusha
fnstenv
iret
ss
fucomi
jnp
xor
add
sti
shl
out
repz
in
xchg
mov
sub
jbe
mov
(bad)
or
nop
sub
push
shr
jl
jno
cld
push
lahf
push
mov
cmp
adc
mov
xor
fs
fbld
pop
xchg
popf
push
jnp
retf
adc
fstp
fcmovnbe
clc
fiadd
xor
daa
scas
jae
dec
or
bound
or
stc
xchg
stc
inc
iret
fild
lods
rcr
and
sub
in
fimul
inc
mov
cmp
fs
pusha
and
mov
adc
xor
or
test
call
daa
ror
push
push
sbb
or
es
out
and
scas
or
aam
sub
adc
fistp
dec
loopne
ins
fld
fisub
gs
push
mov
jae
mov
cmps
test
or
add
clc
or
sbb
int3
cmp
retf
or
mov
dec
cmp
gs
inc
es
mov
jae
push
iret
cmp
ror
mov
clts
pop
mov
pop
int3
outs
mov
cwde
std
pop
pop
mov
cmc
rcl
ror
push
inc
lods
fsubrp
lock
or
test
push
shl
std
cmp
mov
stc
aas
xor
sbb
push
and
push
(bad)
out
es
sub
mov
popa
xor
aas
push
imul
stc
push
jl
loopne
gs
arpl
jno
clc
jl
ja
lds
rcl
lahf
lds
cld
sti
mov
sbb
xchg
or
nop
rcr
mov
cdq
push
pop
inc
(bad)
aam
pop
les
outs
or
or
sub
dec
xchg
fld
inc
inc
mov
out
ins
cmp
and
mov
and
fdiv
push
dec
jne
sub
push
mov
test
mov
pop
pusha
call
enter
imul
aas
mov
sbb
xchg
xor
or
es
push
push
cdq
or
or
cmp
add
xor
sub
or
std
sub
stos
jno
push
cli
mov
pop
push
push
adc
push
nop
and
es
rol
out
mov
pop
lods
pop
cmp
into
sub
mov
mov
mov
push
scas
imul
mov
leave
ja
add
dec
adc
push
dec
ror
sub
jp
xchg
mov
int3
adc
pusha
add
icebp
lahf
cmp
fnstenv
jg
mov
cmp
sub
push
mov
xchg
mov
sbb
out
adc
push
in
fcomp
out
xor
jmp
je
or
mov
shl
mov
xchg
inc
cdq
push
sub
mov
sbb
cmps
(bad)
mov
add
jns
call
or
int3
popa
ret
jmp
clc
mov
sbb
xchg
lds
inc
or
dec
push
and
dec
pop
mov
out
xlat
mul
mov
mov
inc
cmc
ror
add
push
loopne
lods
movs
movs
jge
bound
jmp
out
std
movs
hlt
sbb
push
movs
movs
out
xchg
(bad)
mov
and
gs
(bad)
fdiv
aas
and
fs
and
dec
sub
mov
iret
lds
cmp
and
mov
mov
or
adc
cld
xor
and
pop
es
xchg
push
jmp
push
xor
mov
xchg
(bad)
retf
fsubp
jecxz
aam
or
cld
cwde
push
ficom
pop
(bad)
cmp
je
push
mov
rcl
shl
icebp
stos
repnz
jge
repz
sbb
lock
je
stos
dec
out
rcl
push
sub
mov
sbb
pop
(bad)
rol
pop
mov
inc
je
out
bound
mov
mov
test
add
xlat
cs
cmp
cmp
cli
(bad)
push
pop
sub
push
adc
mov
out
int3
jae
mov
(bad)
pop
pop
mov
mov
pop
cmp
dec
clc
shr
jle
jbe
(bad)
jp
les
inc
sub
cwde
mov
aad
das
sub
ret
ficom
jb
mov
mov
adc
mov
in
mov
mov
adc
cmp
scas
pop
jge
push
pop
dec
imul
xor
push
sbb
stos
fadd
enter
and
cmp
sbb
inc
and
jo
out
jmp
xor
icebp
iret
(bad)
in
push
pop
cli
add
loope
popa
xchg
mov
lock
adc
div
adc
dec
and
cli
(bad)
mov
and
gs
pop
scas
xchg
pop
pop
mov
loopne
jecxz
xchg
in
cmp
mov
addr16
icebp
sub
loope
loopne
push
mov
es
cwde
pop
sub
push
shl
sbb
or
add
xchg
cmp
add
mov
fcmovbe
jmp
in
into
cdq
movs
clc
call
cld
das
mov
ins
hlt
frstor
aas
push
pop
push
cmp
mov
xlat
repnz
test
and
pop
xor
push
sub
mov
push
mov
push
fild
xlat
and
mov
lods
data16
outs
daa
pop
mov
mul
shl
aas
and
repz
fsubrp
sub
fs
or
mov
and
adc
into
push
imul
std
xchg
outs
jg
mov
xor
mov
ret
retf
inc
outs
jmp
xchg
pop
pushf
retfw
fnsave
sahf
sti
xor
pop
xor
inc
push
push
xor
movs
mov
cmc
push
mov
jg
les
pop
sub
pop
(bad)
mov
mov
jne
inc
nop
add
aaa
jne
push
mov
or
adc
pusha
or
adc
clc
int
ja
sbb
mov
inc
mov
inc
mov
movs
cdq
enter
cmp
inc
pushf
test
into
adc
jne
enter
fs
iret
stc
add
int3
and
les
push
test
call
cmps
imul
jb
push
push
push
inc
push
inc
test
mov
cmps
nop
mov
ja
mov
inc
push
nop
std
dec
arpl
out
mov
inc
cmp
push
jg
xchg
cli
stos
sbb
bound
pushf
js
xchg
or
mov
lods
repnz
popf
mov
xchg
dec
xchg
or
push
inc
fwait
ret
sahf
sbb
sahf
jge
pop
dec
cmp
sbb
dec
push
call
out
stc
mov
std
cmps
mov
inc
pop
cmp
fbstp
mov
shl
xchg
loopne
rol
shr
sbb
ss
jb
inc
and
shl
rcl
mov
(bad)
jb
sub
xor
push
mov
mov
repz
je
stc
jmp
mov
push
xor
ret
addr16
xchg
cld
scas
sahf
cli
(bad)
jnp
jns
mov
out
dec
ja
hlt
loope
push
mov
das
xchg
mov
push
and
stos
hlt
not
push
aas
sti
lods
fdivr
sub
pop
fistp
cmps
icebp
aaa
sbb
mov
adc
inc
push
add
loopne
shl
sub
mov
jmp
adc
push
and
(bad)
sbb
dec
sbb
xchg
out
sar
mov
mov
lods
adc
ret
mov
mov
push
outs
push
jmp
ret
sti
push
retf
or
mov
dec
rcl
add
popf
gs
xchg
push
mov
add
in
inc
imul
xor
inc
repnz
hlt
xor
dec
data16
mov
and
and
sub
out
jno
push
and
inc
dec
pusha
icebp
inc
inc
mov
dec
into
mov
sar
sbb
mov
imul
sbb
ins
add
xchg
add
pop
dec
mul
add
push
mov
dec
das
push
call
fidiv
fs
and
push
jnp
add
fbstp
dec
iret
or
mov
fmulp
pushf
stos
push
jle
into
mov
adc
sbb
adc
mov
and
adc
out
add
icebp
inc
js
jp
add
inc
sub
inc
mov
pop
(bad)
pushf
push
es
cdq
loopne
dec
rol
call
repnz
imul
mov
int
jne
mov
enter
sbb
adc
in
pop
sub
das
mov
jp
mov
ins
aam
lock
fnstsw
stos
aad
pop
sub
or
push
dec
push
mov
sbb
mov
inc
ds
data16
mov
(bad)
mov
mov
ja
dec
rcr
ja
pop
or
jae
int
and
in
xor
cmp
adc
fsub
and
pop
div
adc
nop
mov
inc
dec
sbb
adc
add
loop
pop
mov
aam
cmp
out
mov
cmps
pusha
in
cmp
leave
scas
sub
pop
leave
push
sbb
in
push
pop
mov
push
(bad)
xor
shr
rcr
push
jle
cmps
xor
aas
mov
jbe
bound
dec
(bad)
xchg
lock
in
xchg
mov
dec
loope
cld
scas
xchg
out
pop
jle
mov
js
stos
stos
lds
xchg
repz
mov
outs
mov
(bad)
test
xor
xlat
cmp
cmp
call
jo
es
sub
not
sti
enter
and
(bad)
leave
loopne
leave
popa
push
and
cmps
add
pop
cmp
shl
out
xchg
fisubr
jecxz
imul
mov
test
cmps
dec
leave
add
stos
test
inc
jo
adc
ret
lods
push
sbb
jbe
aas
mov
push
in
sbb
sub
repz
fsubr
inc
ja
jb
je
jle
movs
pop
cdq
ret
jnp
xchg
sti
push
mov
enter
aaa
jle
mov
call
out
xlat
jae
mov
mov
loop
test
or
inc
jno
sbb
mov
push
sbb
mov
int
adc
popf
js
jne
pop
nop
sbb
neg
mov
push
sbb
or
outs
pusha
out
inc
bound
pop
int3
dec
sub
xchg
int
fwait
pop
jp
xchg
push
and
or
leave
xchg
lea
jnp
fst
popf
fwait
lods
jmp
sub
jnp
cmp
cmp
test
(bad)
movs
dec
mov
adc
out
int
adc
call
mov
fwait
fs
nop
fcmovnb
mov
sahf
cmps
pop
aad
je
gs
jl
sub
ss
cmp
out
push
test
jecxz
xchg
sbb
cld
sbb
shr
fs
bound
mov
cli
cwde
or
xor
mov
sar
cmp
jp
and
pop
iret
pop
in
and
inc
jl
mov
jo
jnp
nop
mov
call
adc
out
mov
mov
add
xchg
mov
or
cmp
ds
ret
adc
lea
das
jns
mov
ret
sbb
jmp
mov
je
dec
sbb
bound
inc
fcmovne
loope
jae
pop
cmp
xchg
add
arpl
push
test
jmp
push
aam
ins
inc
and
mov
rcr
push
cmp
sub
outs
cli
inc
pop
xor
inc
out
dec
rcl
push
aad
jns
ret
pusha
scas
lea
jnp
mov
push
inc
ss
shld
and
mov
lods
shl
pop
sti
push
mov
les
pop
add
push
adc
jmp
jo
(bad)
(bad)
stos
div
add
sar
or
mov
xchg
in
aaa
jg
add
inc
jecxz
jl
fld
test
push
sub
call
mov
jmp
cmps
mov
or
(bad)
hlt
sbb
in
and
push
xchg
and
fs
mov
mov
add
push
xlat
sub
and
pop
mov
or
iret
popf
in
jmp
mov
inc
pop
mov
inc
rol
and
(bad)
and
retf
adc
push
cmps
mov
mov
ficomp
pop
or
js
out
sahf
add
xchg
cmp
sub
adc
adc
mov
mov
add
xchg
dec
cld
cmps
sbb
and
push
ins
outs
out
std
aad
(bad)
jnp
lahf
or
sub
in
inc
dec
fcmovb
into
mov
movs
outs
das
and
xchg
fbld
mov
sbb
stos
jl
scas
es
repz
or
arpl
dec
pop
mov
iret
loope
das
je
sub
mov
arpl
jmp
sub
stos
ficom
es
push
lock
(bad)
add
loopne
stc
aas
hlt
(bad)
sti
cmps
lahf
sahf
mov
scas
adc
jge
push
lea
mov
call
bound
cmps
or
pop
lds
fisttp
jbe
add
aas
loopne
(bad)
es
mov
inc
pop
jmp
int
push
sub
pop
cld
push
inc
retf
jb
or
out
loope
jmp
xchg
dec
int
stos
mov
data16
aam
xlat
aas
fdivr
out
or
pop
mov
cli
sub
lea
ins
aaa
rcl
gs
mov
iret
push
inc
ins
push
inc
jg
push
stc
bswap
pusha
(bad)
xlat
add
and
ds
xchg
int
je
pusha
popf
aam
adc
add
or
es
sub
cld
fcmovnbe
fld
sti
push
fs
add
cmp
or
fwait
xchg
stos
imul
mov
loope
stc
push
outs
(bad)
cmp
mov
inc
repz
in
outs
cmps
fdivr
movs
cli
enter
dec
retf
cmp
cmps
jle
out
xchg
jecxz
xchg
stos
add
adc
and
retf
mov
xchg
jp
xchg
sbb
jno
push
mov
sub
outs
sar
stos
pop
ficomp
push
test
add
pop
cmp
les
push
add
dec
int
and
pop
jno
mov
adc
jmp
dec
ss
pop
mov
into
pop
sbb
xor
popa
gs
ins
enter
pop
add
inc
call
xchg
and
sub
ss
pop
jp
arpl
int3
rcl
sti
and
xchg
es
dec
ja
mov
xchg
fsub
stos
adc
mov
and
xor
test
retf
ja
or
loop
stos
mov
inc
ja
cmp
sub
pop
pop
hlt
ret
sub
inc
and
stos
(bad)
out
sub
stc
jmp
aam
lods
movs
cld
outs
aad
aas
sahf
stc
inc
dec
jns
mov
repnz
(bad)
fldcw
push
and
jmp
pop
and
(bad)
retf
std
pusha
outs
jecxz
mov
bound
dec
in
jns
mov
lahf
xor
xchg
sbb
fcomp
iret
arpl
test
out
dec
mov
pop
clc
adc
and
int
ins
adc
iret
mov
mov
retf
addr16
out
lds
xor
in
retf
aad
push
(bad)
(bad)
push
mov
cs
enter
jecxz
push
cmp
adc
xchg
xchg
jae
stc
push
sbb
int3
test
push
fwait
retf
jno
ss
xor
dec
mov
test
fldpi
ins
rol
xchg
xor
and
push
popa
xor
xchg
sbb
imul
or
mov
xlat
icebp
xchg
cmps
cmp
mov
call
dec
std
retf
or
inc
jne
push
ret
xor
dec
scas
ins
test
cmp
mov
cmp
daa
jo
test
je
mov
stos
push
push
jno
xchg
dec
call
add
cmp
dec
daa
std
test
jge
repz
cmp
inc
leave
mov
jge
jno
dec
mov
repz
sar
sbb
je
or
test
aaa
inc
imul
push
xchg
inc
sti
adc
pop
sahf
mov
mov
xchg
mov
sbb
mov
pop
sbb
loopne
xchg
inc
xchg
les
mov
mov
addr16
dec
sbb
lods
scas
or
ja
das
push
mov
out
dec
das
xchg
nop
enter
retf
sbb
call
cdq
sar
cld
push
ja
lock
fld
sub
xor
jo
mov
sbb
bound
push
mov
loopne
inc
mov
push
out
shr
xchg
movs
jmp
inc
push
(bad)
gs
add
mov
retf
mov
cmp
mov
pop
ins
lahf
xor
mov
mov
stos
inc
mov
into
mov
push
xchg
icebp
int3
fild
retf
fsubr
pop
mov
jbe
addr16
sub
in
xor
and
pop
pop
(bad)
pop
or
push
(bad)
mov
cmp
imul
push
sbb
shl
data16
mov
cmp
adc
test
xor
js
mov
mov
clc
out
fnsave
in
push
enter
xchg
retf
cdq
push
push
adc
cmp
jmp
popf
dec
cmps
test
stc
and
sub
fadd
aad
aad
enter
jne
add
push
inc
cld
ret
cwde
xor
data16
hlt
daa
or
lock
xchg
imul
push
mov
jmp
(bad)
daa
jno
dec
sahf
sub
pop
ss
pop
ret
enter
mov
jle
scas
pop
pop
(bad)
fcmovb
(bad)
rcr
lds
pop
fnstsw
mov
pushf
mov
std
xchg
xchg
ror
es
xchg
xor
push
push
mov
cld
add
fidiv
lods
(bad)
and
movs
mov
push
loope
pusha
mov
xor
hlt
mov
adc
mov
dec
adc
mov
fdiv
push
mov
cmps
push
mov
push
das
(bad)
shl
push
jl
xor
imul
jl
add
repnz
mul
fcomp
(bad)
aam
add
out
imul
push
cdq
push
adc
(bad)
cmp
xchg
call
or
add
or
fdiv
lds
fnstsw
bound
popa
in
in
out
(bad)
into
pop
sbb
sbb
retf
jns
cmp
(bad)
jle
pop
test
jno
mov
mov
fnsave
push
pushf
test
pop
mov
add
lods
jmp
iret
cmp
adc
outs
and
sbb
adc
not
inc
mov
in
rcl
fisttp
sti
xchg
and
cdq
mov
pop
pop
add
xor
(bad)
setg
xchg
mov
xchg
mov
hlt
push
sbb
cmp
fsub
scas
lock
mov
call
call
sbb
jmp
xlat
xchg
sbb
sub
imul
(bad)
mov
cmps
push
test
(bad)
js
in
add
cmp
ja
inc
aas
mov
inc
and
pop
push
(bad)
mov
sub
scas
add
pop
fdivr
aam
rcr
retf
ret
test
inc
mov
movs
fcmovnu
fsub
sub
jb
push
push
sahf
sub
push
out
repnz
retf
and
das
ffreep
xor
mov
push
jmp
xor
sbb
loop
jp
adc
xor
rol
push
int
pop
sbb
das
jno
xchg
sahf
ret
xor
xchg
fadd
add
mov
aaa
fsubr
fbstp
stos
lds
cld
jne
mov
jns
movs
dec
inc
pushf
paddusw
ret
ss
mov
pop
inc
sub
ins
ret
gs
adc
inc
and
cli
adc
xchg
jmp
pop
xchg
(bad)
fs
ficomp
rcl
dec
rcr
sahf
sub
pop
div
mov
add
dec
scas
fadd
test
outs
cmp
repnz
pop
int3
(bad)
addr16
pop
push
leave
(bad)
mov
ds
adc
ins
add
adc
pop
pop
jae
cmp
movs
sub
in
int3
push
pop
jne
test
push
mov
loop
jl
test
test
inc
mov
daa
dec
fs
popa
scas
push
mov
push
js
jbe
pop
nop
and
jp
adc
mov
sbb
or
js
test
test
scas
cmc
pop
ins
loopne
jo
jnp
inc
sbb
fdiv
xchg
pop
sbb
and
aaa
jmp
xor
xchg
mov
inc
in
xchg
dec
push
inc
xor
inc
ss
mov
cmp
push
mov
jne
jle
cli
(bad)
jmp
scas
lahf
sub
(bad)
ja
jle
ret
cmc
jns
and
jp
fist
pop
or
call
or
test
mov
imul
and
sbb
clc
inc
(bad)
inc
ins
pusha
(bad)
stos
sbb
clc
test
test
dec
sbb
or
add
ja
jmp
icebp
jb
or
popf
movs
pop
sub
dec
cmp
(bad)
xchg
retf
mov
dec
push
sbb
adc
cmps
mov
jae
(bad)
mov
sbb
mov
add
retf
mov
sub
mov
enter
lahf
aas
mov
push
dec
push
pop
push
fs
sti
push
cmps
int3
rol
loop
addr16
push
inc
mov
popa
add
push
ins
lahf
(bad)
movs
cmp
outs
dec
aad
clc
sbb
ds
rcl
mov
adc
cmp
cmp
or
inc
push
mov
adc
in
pop
push
ds
cmp
push
std
jg
pop
mov
fidivr
gs
nop
dec
pusha
imul
and
das
pop
leave
aad
pop
call
dec
test
pop
inc
or
add
or
mov
ja
lock
hlt
jb
sti
jo
inc
pop
push
loop
push
jle
fst
ror
or
push
mov
mov
push
rcr
cmp
sbb
dec
add
dec
mov
pop
fild
mov
inc
push
xchg
dec
pushf
bound
mov
sub
xchg
mov
sub
jl
sub
lahf
shr
lock
js
mov
jle
mov
mov
(bad)
xchg
sbb
mov
jle
push
or
lods
jb
jle
sub
inc
xchg
out
ss
icebp
or
xchg
dec
adc
adc
imul
(bad)
loopne
arpl
sar
aam
lds
lods
in
jl
retf
jg
ret
pop
adc
mov
arpl
out
and
out
sub
fcomp
icebp
jno
pop
jnp
daa
sahf
scas
and
jns
mov
call
clc
mov
dec
add
cld
inc
out
movs
pushf
repz
and
xor
inc
retf
int3
scas
mov
dec
inc
pop
adc
ret
mov
adc
addr16
nop
add
rcr
or
xchg
jae
aam
mov
dec
js
mov
xchg
fld
faddp
lods
neg
and
rcr
stos
add
sbb
dec
lock
mov
bound
arpl
call
or
mov
pop
ins
loope
pop
xor
jp
inc
push
jae
les
pop
in
and
mov
xor
sub
xchg
gs
push
nop
cmp
push
addr16
les
in
add
je
(bad)
mov
cmc
adc
dec
push
call
ret
adc
mov
mov
xor
xor
and
push
dec
mov
aad
stos
ds
popa
icebp
int3
outs
push
mov
cdq
or
test
loope
xchg
lock
aam
adc
inc
add
call
jns
lea
mov
pop
cs
pop
repnz
arpl
loope
push
push
and
in
inc
mov
inc
addr16
dec
enter
(bad)
push
inc
mov
and
jbe
mov
dec
cmc
into
mov
or
mov
and
xlat
bound
loope
pop
aas
xor
popa
jl
cmp
adc
xchg
mov
test
push
xor
ins
scas
adc
dec
xor
sbb
add
mov
imul
mov
int3
inc
iret
out
pushf
sub
mov
test
mov
jmp
sahf
aad
jb
mov
pop
mov
sbb
sar
dec
jb
aad
bound
ins
(bad)
sub
in
fcmovnbe
in
icebp
sub
dec
in
mov
cli
add
fst
out
cwde
fldenv
add
int
in
stc
(bad)
aas
js
not
sbb
rcr
mov
xchg
add
jb
dec
sub
stos
test
fs
arpl
and
xor
adc
icebp
cmp
mov
in
and
ins
fnstenv
mov
jmp
inc
adc
xor
or
test
shl
call
cdq
xor
mov
out
pushf
mov
(bad)
xor
jae
sub
(bad)
in
arpl
and
icebp
stos
xchg
xchg
out
iret
fdivr
mov
into
lock
cs
sahf
xchg
mov
mov
xchg
out
jmp
fsubr
dec
mov
push
(bad)
inc
xchg
orps
jg
xchg
in
aas
pop
add
push
inc
cld
and
(bad)
fcom
loop
push
xchg
dec
cmp
dec
scas
sbb
mov
and
cmp
mov
cmp
sbb
pop
popf
mov
in
loop
sub
pop
dec
movs
push
pop
push
loopne
inc
mov
fwait
(bad)
pop
std
pop
scas
jnp
enter
(bad)
xchg
and
add
sbb
in
mov
cli
pop
in
fnstsw
dec
xor
mov
xlat
inc
(bad)
xchg
movhps
adc
add
loopne
mov
mov
(bad)
data16
je
gs
jle
inc
push
repnz
scas
or
mov
add
push
push
dec
fistp
mul
and
pop
mov
mov
and
xchg
adc
fs
lods
sub
sahf
jg
mov
mov
xlat
aad
dec
sbb
xchg
pop
pop
jne
add
clc
dec
ins
jae
(bad)
imul
pop
pop
push
pop
or
cwde
and
mov
add
data16
mov
out
gs
loope
pop
mov
xlat
xchg
or
dec
adc
les
push
mov
movs
mov
or
sahf
mov
jle
jmp
clc
mov
mov
pushf
pop
js
retf
sbb
push
pop
adc
sub
add
cmps
jp
add
std
xor
and
into
dec
lods
lea
or
add
movhps
and
dec
data16
call
(bad)
mov
fs
sbb
pop
ja
icebp
ss
gs
aaa
and
inc
jle
pushf
adc
stos
out
jecxz
outs
inc
xchg
sbb
sbb
stos
jge
xor
adc
add
repz
or
xlat
mov
mov
add
xchg
jb
push
leave
inc
fdivr
xor
in
dec
xchg
mov
adc
lods
int
or
dec
sbb
shr
sbb
repnz
push
jmp
ja
or
(bad)
ret
mov
mov
push
aas
adc
inc
aaa
push
cdq
adc
jecxz
scas
xchg
pop
push
add
int
sub
xor
jge
jle
xchg
pop
repz
call
mov
icebp
inc
jmp
retf
push
or
repnz
adc
pop
add
adc
jl
test
repnz
imul
add
sbb
jnp
repz
sahf
cmp
and
push
outs
cmps
or
push
mov
sbb
in
imul
dec
cdq
adc
or
push
into
adc
xchg
push
fbld
adc
mov
cmp
loop
mov
lds
cmp
jo
jmp
mov
call
scas
jmp
jo
sbb
jg
pop
mov
cmps
fst
bound
add
rcr
xor
cmps
xchg
sub
shl
push
aam
add
xchg
add
bnd
addr16
icebp
movs
bound
add
outs
jnp
sar
movs
push
jae
(bad)
ja
jmp
mov
sub
adc
pop
or
in
lahf
mov
out
jbe
int3
pop
jne
xchg
scas
test
into
(bad)
cli
sbb
daa
inc
or
stc
sub
dec
push
mov
jge
out
xor
pusha
dec
adc
das
push
pop
cdq
sub
add
outs
lods
pop
mov
xchg
push
or
scas
dec
lahf
repz
sub
lods
push
xchg
mov
lods
(bad)
mov
test
addr16
in
ret
or
in
mov
aad
sbb
push
aas
sti
rcl
mov
sbb
ficomp
sub
cmp
jle
outs
sti
pop
push
mov
movs
(bad)
(bad)
enter
push
push
pushf
jnp
ret
jne
das
jg
je
iret
cmp
test
popf
gs
dec
jne
sbb
mov
adc
cwde
mov
xchg
xor
pop
clc
jo
or
rcr
xor
not
jl
test
mov
cmps
push
int
iret
rcl
lea
xor
jge
adc
lahf
push
nop
or
sub
jp
mov
dec
test
mov
or
sub
(bad)
std
jbe
dec
jne
sbb
mov
outs
lds
jmp
mov
cmp
pop
ins
push
div
cmp
fcomip
pop
dec
call
retf
mov
xchg
(bad)
repz
xchg
mov
es
xchg
and
push
aam
fld
cmp
pop
fcmovbe
ret
mov
retf
mov
movs
aam
pusha
sbb
out
jg
jge
jle
sbb
cmp
or
adc
jmp
pop
or
call
or
(bad)
int
movs
int
inc
xor
mov
shl
push
shl
dec
repnz
push
or
rcl
jae
push
loope
in
pusha
mov
dec
test
mov
ret
add
and
jmp
out
pushf
push
sub
pop
push
pop
nop
mov
into
jmp
lock
mov
mov
xchg
dec
xor
and
dec
push
push
xchg
aad
xchg
mov
inc
es
xor
jnp
arpl
push
pop
sahf
nop
push
(bad)
out
test
or
stc
bound
out
je
call
test
fimul
int3
inc
lock
fidiv
or
les
dec
dec
push
jle
mov
cdq
cmc
mov
xor
push
hlt
test
jge
enter
push
cmp
sub
ret
(bad)
adc
mov
repnz
out
stos
inc
xchg
add
or
mov
dec
repnz
shl
enter
jl
adc
std
pop
jne
or
pop
imul
mov
mov
leave
pop
sbb
add
dec
jecxz
cmps
mov
imul
lods
mov
enter
jle
push
fisubr
mov
loop
scas
loopne
jl
fs
add
xchg
repz
not
push
das
loop
retf
ja
sti
xor
dec
adc
xor
dec
imul
mov
in
shl
nop
fadd
mov
test
dec
push
repnz
jno
jno
out
inc
arpl
mov
xor
sbb
loope
ins
cmps
sar
mov
and
pop
cmovge
fs
or
sub
iret
sahf
(bad)
ja
cld
cmp
jmp
call
mov
aas
inc
mov
ja
(bad)
cmp
dec
call
mov
or
outs
mov
jmp
mov
jmp
mov
xchg
mov
std
jl
test
aam
sub
jecxz
leave
loop
xor
lock
shr
push
pusha
mov
inc
push
and
jae
imul
jbe
arpl
pop
sub
xor
arpl
pop
sahf
adc
xor
xor
les
fisubr
ret
imul
div
imul
mov
clc
and
fisub
shl
xchg
stos
mul
or
cmp
mov
sbb
dec
xchg
and
dec
push
dec
ss
ins
jecxz
stos
push
xlat
in
cmps
and
(bad)
xchg
push
add
icebp
dec
push
clc
and
dec
mov
ret
lods
jno
add
mov
lds
sub
adc
xchg
mov
sub
push
call
jecxz
mov
dec
mov
cmc
ds
fwait
je
(bad)
sub
ins
xor
(bad)
pusha
pushf
jmp
xor
push
sub
add
jbe
aam
movs
jnp
mov
jnp
das
icebp
mov
pause
mov
lock
js
into
add
sub
rcr
data16
out
inc
hlt
mov
sbb
add
call
sbb
inc
xor
ret
push
dec
add
call
jge
ret
xchg
push
aam
cdq
clc
push
jmp
scas
and
pop
jmp
push
inc
into
outs
cmp
inc
iret
mov
xor
stos
cdq
(bad)
sbb
fcom
xlat
cdq
in
adc
or
test
(bad)
fst
mov
lods
dec
jno
sti
stos
gs
cmp
inc
hlt
lahf
cmp
aad
fnsave
jae
or
inc
or
mov
or
dec
scas
int
mov
test
xor
sbb
push
scas
aam
fwait
retf
xor
(bad)
fist
mov
aad
(bad)
adc
push
lahf
pushf
jmp
(bad)
or
icebp
push
pop
mov
pop
add
std
nop
push
(bad)
mov
jmp
addr16
ins
cdq
and
dec
inc
loopne
sub
mov
mov
sub
aaa
lea
adc
mov
stc
pop
sub
mov
daa
xor
cmps
pop
cs
call
arpl
out
jbe
mov
pop
add
inc
imul
jne
xchg
out
loop
adc
push
push
sub
mov
pop
in
jno
das
lea
mov
cdq
mov
xor
push
pop
arpl
jmp
xchg
mov
das
adc
sub
lods
jo
ret
mov
bound
stc
xor
and
inc
and
mov
jb
rcr
js
dec
adc
sub
sbb
ss
stos
ins
test
ror
jl
mov
add
stos
jo
fnstsw
cmc
mov
pop
sbb
ins
xchg
jle
es
adc
mov
fsubp
data16
add
xchg
sbb
mov
xor
sub
and
sub
mov
xchg
sbb
dec
sar
sbb
inc
dec
push
mov
outs
and
loopne
mov
in
outs
test
jbe
test
inc
or
fidiv
adc
jmp
cmps
and
dec
out
jmp
or
in
push
mov
div
(bad)
cmp
out
jo
aas
jmp
lds
adc
jge
ins
push
js
mov
pop
enter
test
(bad)
mov
loopne
jnp
shl
adc
inc
test
add
scas
sub
cs
out
retf
hlt
jno
mov
inc
mov
xor
test
dec
rcr
dec
lods
std
ret
jmp
adc
test
inc
mov
test
scas
stos
fs
fwait
xchg
xchg
fcomp
add
cmps
ins
iret
ins
mov
add
adc
mov
jno
imul
(bad)
pop
mov
(bad)
sbb
add
test
fwait
sub
ds
push
cmp
and
inc
iret
cmps
pop
adc
fbstp
jb
cmp
cmp
xchg
call
push
repnz
xchg
dec
dec
cmp
(bad)
sbb
pshufw
adc
clc
cmps
lahf
out
cmp
jle
mov
in
dec
jnp
pcmpeqd
mov
(bad)
dec
loopne
(bad)
jbe
jb
or
and
sub
inc
std
hlt
inc
push
ret
xchg
(bad)
dec
mov
and
push
fst
adc
push
jnp
repnz
mov
test
inc
adc
ds
fs
stos
mov
hlt
test
sbb
push
lea
xchg
push
outs
dec
jl
imul
(bad)
stos
mov
cmp
push
jecxz
fisub
movs
sbb
and
xchg
sub
cmps
mov
js
cdq
popf
neg
(bad)
(bad)
mov
es
out
jge
cmp
in
pop
dec
mov
stos
adc
fs
test
outs
push
xchg
fistp
imul
mov
add
cwde
into
pop
jnp
test
call
mov
jne
mov
enter
push
ret
cmc
fstp
push
out
push
pop
call
and
dec
cld
and
call
xchg
fwait
sbb
lods
or
lds
inc
sar
les
sub
mov
stos
in
ror
xchg
dec
sub
push
add
sar
shl
arpl
pushf
inc
cs
in
cmp
fwait
pop
push
(bad)
xor
cmovo
mov
cmp
adc
jb
lods
xchg
xchg
cli
add
dec
dec
ror
stos
sub
std
(bad)
aam
sti
inc
sar
shl
mov
iret
xchg
test
push
pop
mov
or
aas
call
mov
xor
push
ror
mov
test
inc
xchg
call
xchg
loope
jne
push
in
cli
sbb
fild
cmp
fcmovnb
and
xchg
inc
stos
mov
jle
and
mov
test
ror
lods
cmc
jl
adc
mov
lock
lock
inc
xor
outs
lods
stos
and
stos
mov
xchg
retf
lahf
fwait
mov
(bad)
iret
vpaddq
aam
push
mov
sub
test
in
cmps
inc
shr
pop
adc
jmp
fbstp
sbb
repnz
mov
cs
mov
lods
in
adc
push
into
adc
add
mov
or
repz
call
(bad)
out
or
sbb
test
in
inc
dec
jnp
xor
rcr
sbb
jmp
inc
push
sti
cmc
cmp
cmp
xor
call
cli
int3
bound
push
shl
push
imul
inc
jge
popf
pop
xchg
mov
sub
repz
cli
movs
inc
push
test
fiadd
into
sbb
cdq
inc
cmps
xor
mov
pop
(bad)
(bad)
aad
neg
dec
sbb
cli
mov
sub
jbe
nop
(bad)
pop
mov
mov
idiv
ss
aas
jg
in
jns
pop
lock
xchg
jecxz
add
imul
xchg
sbb
jmp
jmp
and
in
push
cmp
push
movs
jg
retf
fistp
test
pop
dec
repnz
mov
or
inc
push
and
inc
cld
add
movd
or
jns
jno
push
xchg
in
dec
les
add
std
jnp
rcr
nop
js
pop
cmp
mov
jge
shr
inc
and
jg
ins
mov
inc
push
xchg
jle
stos
sub
pop
retf
adc
or
mov
sahf
jo
mov
dec
or
or
mov
jg
inc
adc
cmp
int
imul
cmc
sti
xor
jge
stos
xlat
jmp
dec
mov
xlat
lea
jmp
imul
leave
fistp
rcr
add
js
imul
ins
mov
xchg
aaa
jge
ss
hlt
xor
lahf
cs
lock
loop
push
pushf
bound
retf
sbb
dec
fcomp
rcr
loop
dec
jg
ret
push
cmp
stos
mov
pop
mov
cmp
lods
ins
push
fmul
or
(bad)
and
sbb
pop
and
pop
shl
xor
fwait
loop
add
daa
push
or
mov
arpl
in
mov
aas
std
xchg
in
clc
gs
xchg
ret
dec
sbb
adc
sbb
jns
dec
iret
mov
mov
dec
movs
jae
mov
mov
add
sar
dec
inc
sbb
push
push
ja
sbb
loopne
mov
es
test
das
outs
lods
lods
or
or
pop
rcr
or
sbb
jmp
addr16
cmp
inc
mov
out
sbb
icebp
call
jmp
cmp
mov
xchg
push
mov
dec
inc
cmp
rol
mov
bound
mov
fist
inc
sbb
add
fcomp
pop
mov
pop
pop
cs
push
cmp
push
jp
mov
pop
sub
add
xor
popf
test
inc
pop
mov
mov
jnp
add
dec
fadd
cdq
and
and
mov
ret
jg
aam
xor
int
outs
iret
retf
sub
xor
les
push
sub
xchg
int
cmp
(bad)
and
push
lock
mov
neg
in
fst
mov
mov
(bad)
hlt
adc
adc
or
dec
mov
outs
pop
sbb
ja
cmp
inc
fadd
add
test
and
push
jno
std
pop
mov
movs
dec
fbld
xor
(bad)
leave
xchg
pop
jno
ror
fisub
aad
pop
mov
outs
and
or
mov
mov
sbb
sub
js
inc
out
es
imul
fucomi
mov
jmp
xchg
dec
push
mov
out
enter
data16
cmp
jns
dec
adc
fisttp
in
inc
mov
add
push
(bad)
fadd
mov
test
mov
pop
mov
and
mov
clc
cmp
fstp
movs
jmp
pop
xchg
add
int
and
jmp
sub
gs
jmp
xorps
fdivrp
je
lods
into
push
into
cmp
into
loop
dec
or
rcr
test
sub
mov
ret
jge
mov
(bad)
imul
mov
or
mov
mov
stc
pop
es
nop
loope
out
js
pop
mov
arpl
mov
xchg
sbb
aaa
add
dec
mov
leave
outs
popa
lahf
cwde
jge
test
clc
mov
pop
shl
or
stos
jno
ins
jmp
cmps
mov
(bad)
push
mov
fistp
pop
icebp
xchg
cmp
sahf
and
shl
movs
mov
mov
adc
adc
ret
mov
push
jecxz
cs
scas
call
cmps
sbb
scas
sbb
mov
adc
popf
fsub
sub
cmc
ss
(bad)
hlt
outs
jb
mov
jnp
test
shr
jne
and
mov
dec
mov
mov
fwait
movs
out
mov
out
xchg
xor
pusha
mov
xchg
enter
or
xor
sub
outs
jbe
lock
or
xor
pop
sbb
xchg
out
jae
xchg
gs
pop
mov
stc
popa
jl
aad
cli
sahf
mov
cmp
jo
out
cmps
and
adc
movs
test
es
cmp
ret
das
cwde
push
mov
(bad)
(bad)
cs
mov
push
call
sbb
pop
cwde
lds
sahf
jmp
outs
jmp
jnp
addr16
push
leave
and
les
jecxz
push
out
adc
and
add
adc
sub
xchg
jmp
sbb
inc
fmul
mov
cmps
icebp
xor
loop
into
dec
pusha
mov
xchg
stos
mov
outs
popa
xchg
sub
sbb
mov
push
in
and
jmp
repnz
out
popf
mov
jbe
inc
mov
xor
pop
das
push
add
jb
push
mov
arpl
mov
cmc
lods
pop
int3
jp
push
inc
dec
fwait
or
outs
jns
dec
push
hlt
xchg
dec
mov
(bad)
jg
mov
jp
or
leave
mov
inc
xor
xchg
pop
mov
xor
inc
xor
cmp
and
pop
inc
pop
jp
int
jo
in
cwde
inc
inc
sbb
fcom
mov
jge
inc
and
pop
lods
(bad)
scas
jle
mov
sbb
test
ret
cmp
mov
fs
retf
cmc
sbb
mov
pop
add
lea
jnp
jno
jge
and
shl
outs
mov
(bad)
movs
dec
shl
in
jp
jmp
fld
push
and
push
cmps
dec
or
or
xchg
sahf
sbb
ret
add
push
mov
xor
or
jne
jnp
xor
imul
mov
cs
xchg
dec
xchg
test
push
scas
je
mov
xor
cmp
or
fucomp
push
les
push
imul
push
fidivr
mov
push
pop
leave
and
in
dec
xchg
mov
sar
mov
and
xlat
(bad)
fadd
or
sub
jnp
inc
aaa
push
and
(bad)
sub
jecxz
jae
imul
xchg
mov
iret
jl
out
dec
jge
cdq
jmp
enter
xlat
push
fisubr
mov
stos
fs
bound
cwde
cwde
out
mov
mov
dec
scas
sub
mov
and
jbe
inc
imul
xor
pop
xchg
loope
pop
scas
out
pop
cmps
out
retf
sub
adc
int
mov
je
test
ret
lds
sbb
sbb
call
js
add
pop
sbb
and
xchg
out
into
inc
(bad)
enter
xor
cdq
ss
ret
rcl
cmp
gs
popf
add
xor
push
jp
shl
mov
sbb
fwait
mov
jmp
add
mov
pop
test
xchg
lods
out
sub
pop
fstp
cld
xor
xchg
xchg
jbe
cmp
das
push
es
sub
sub
jnp
mov
sbb
(bad)
sub
mov
ret
mov
repnz
(bad)
or
test
rol
data16
sub
sti
and
ror
imul
in
jbe
adc
mov
mov
or
pop
lahf
imul
jl
fst
fsub
popf
mov
jg
out
les
add
add
dec
loop
mov
shl
outs
dec
pop
dec
arpl
or
sti
pop
cdq
ins
daa
imul
imul
mov
inc
mov
mov
pusha
fadd
mov
sub
jnp
adc
add
xchg
inc
je
mov
inc
cmp
into
jns
js
in
and
sbb
in
stc
pushf
adc
push
and
mov
xor
(bad)
mov
mov
call
enter
test
nop
leave
push
jmp
jb
cmps
push
and
mov
rcr
mov
fdivr
mov
add
sar
jmp
pop
xor
out
xor
add
enter
popf
pop
jmp
xor
xor
mov
(bad)
adc
pushf
mov
and
arpl
fld
shl
pop
xchg
or
sti
cld
sub
sahf
daa
jns
jae
dec
xor
inc
pop
add
mov
call
or
nop
jecxz
push
icebp
pop
add
cwde
(bad)
rep
(bad)
fdiv
push
xor
hlt
(bad)
in
cmp
mov
mov
or
mov
sbb
loop
sub
xchg
jl
add
test
daa
xlat
cmps
jns
jle
ds
lds
inc
jbe
and
movs
push
sub
mov
jecxz
out
pop
sub
(bad)
lahf
dec
mov
or
and
lods
ss
pop
sahf
cmovnp
inc
icebp
mov
movs
lds
jnp
mov
leave
inc
jne
js
loope
das
jecxz
jmp
sub
popf
inc
mov
or
pop
imul
sbb
sbb
outs
leave
sub
add
dec
xchg
push
dec
popf
fld
dec
cmp
dec
dec
repnz
sbb
pop
push
pop
xchg
xor
ret
cmp
test
xor
push
test
sub
into
push
xchg
clc
jo
das
adc
out
ret
sbb
test
lock
sbb
pop
adc
pop
dec
xchg
hlt
adc
pop
mov
mov
mov
sbb
movs
lods
in
xchg
je
(bad)
dec
inc
mov
fcomp
(bad)
lods
xchg
bound
stos
sub
add
and
hlt
(bad)
into
inc
lods
hlt
inc
das
mov
fcom
pop
dec
push
fdivr
dec
punpckhbw
sub
push
pop
add
neg
mov
inc
leave
push
(bad)
jb
dec
jge
test
xchg
mov
sbb
gs
xor
test
pop
or
movs
cld
leave
shl
mov
mov
inc
cmc
iret
mov
in
in
rcl
js
pushf
dec
cmp
int
mov
data16
jae
xchg
leave
fisttp
test
sub
in
push
lahf
jo
lods
cmp
xor
stc
mov
pop
loop
fwait
push
or
bound
addr16
addr16
stc
out
sti
pusha
nop
enter
mov
das
mov
sbb
into
jne
mov
mov
xchg
or
fwait
sbb
ror
mov
mov
sub
loopne
add
ds
lahf
movs
movs
mov
(bad)
mov
lea
xchg
push
es
rcl
sbb
jecxz
xor
loop
cmps
cmp
outs
test
test
mov
fstp
xchg
jns
mov
imul
movs
loop
dec
sbb
ret
and
outs
mov
add
fld
pop
adc
cmps
mov
mov
enter
fs
push
mov
xor
mov
jp
(bad)
shl
and
push
rol
sub
popa
cli
cmp
test
loopne
std
lods
adc
sbb
data16
adc
sub
les
pop
xor
dec
add
mov
xchg
xchg
add
mov
or
xlat
mov
mov
xor
mov
repz
dec
mov
popa
jmp
test
inc
int
mov
push
sub
nop
and
inc
xchg
xor
sti
lods
fcmovnb
push
inc
mov
xor
or
mov
(bad)
bound
mov
add
cmp
dec
or
cmc
nop
mov
cmc
fisubr
xchg
ins
stc
(bad)
dec
outs
mov
push
hlt
(bad)
aam
sbb
add
xor
lds
dec
add
iret
sub
ror
call
add
push
add
cmp
loopne
(bad)
mov
sub
fisubr
imul
cli
mov
jmp
or
jg
ret
jne
jns
ror
fcomp
pop
test
addr16
hlt
jnp
sti
ins
call
ffreep
mov
jge
int
sar
std
inc
dec
aam
aad
test
mov
out
icebp
nop
fmul
pusha
push
sbb
adc
inc
push
cmp
bound
and
xchg
rcl
dec
retf
std
into
sbb
pop
test
jl
jae
inc
faddp
mov
ja
outs
mov
jno
stos
lods
mov
cmp
jl
dec
dec
ret
shl
sub
xor
adc
hlt
pop
cmp
mov
dec
inc
fbld
cli
mov
jmp
int
pushf
adc
rcl
outs
or
xchg
cdq
inc
mov
(bad)
push
cdq
fisttp
inc
add
add
ret
gs
sbb
adc
mov
mov
aad
mov
popf
jbe
outs
or
popf
cmc
fs
hlt
mov
dec
cwde
stos
je
imul
(bad)
rcr
mov
mov
xchg
pop
xlat
mov
sbb
xchg
repnz
sbb
sub
js
addr16
scas
inc
pop
mov
push
cs
in
bound
shl
jg
adc
xchg
ds
mov
dec
inc
in
dec
rcr
fbld
outs
popf
xor
(bad)
cwde
scas
(bad)
lahf
adc
les
sub
(bad)
mov
sbb
sub
adc
lds
icebp
mov
or
fst
xor
inc
aad
sbb
fs
aaa
loope
pop
imul
inc
cmp
mov
push
mov
xor
into
mov
and
std
sbb
mov
sub
jl
push
and
sub
js
stc
aaa
adc
mov
xchg
mov
dec
and
movs
mov
jbe
cmc
sti
rcr
push
cmp
addr16
jbe
std
pop
adc
pop
pop
sbb
inc
rcr
call
adc
aam
sbb
ins
jne
pop
fs
or
fwait
arpl
aas
fild
cmp
fs
adc
mov
jecxz
mov
pop
xchg
push
push
clc
mov
jmp
mov
push
dec
fndisi(8087
aad
int
popa
repz
mov
mov
cld
aas
pop
mov
cmp
aas
rcl
adc
icebp
int3
sub
int3
retf
fistp
push
stos
(bad)
xchg
mov
movs
js
(bad)
iret
push
mov
daa
scas
adc
in
mov
jbe
loope
push
xor
xlat
push
dec
jl
push
aad
movs
mov
mov
pop
pop
call
cmp
loop
ds
dec
sbb
sub
cmp
mov
les
in
push
adc
xor
icebp
mov
add
dec
std
cmp
mov
xor
js
ror
mov
stc
sti
and
xor
cmp
cdq
imul
dec
iret
(bad)
cli
mov
mov
push
xor
jp
inc
add
push
and
jmp
jb
sbb
jg
sbb
add
or
jecxz
mov
mov
fisub
xor
fidivr
jns
cmp
cmp
cmc
sub
das
bound
lds
pop
and
cmp
pop
mov
rol
sub
mov
fild
pop
jecxz
sbb
inc
sbb
lock
adc
push
dec
mov
das
fld
sub
mov
movs
jl
xor
ins
sub
fwait
sub
movs
push
mov
pop
sbb
lods
rol
add
nop
push
dec
(bad)
cmp
sbb
sar
movs
pusha
inc
fild
or
mov
sub
test
pop
add
ficomp
xor
push
test
imul
mov
icebp
icebp
dec
fdivr
jae
sub
cli
das
mov
or
lahf
inc
push
int3
push
pusha
xor
adc
rol
call
rcr
cs
jno
lods
(bad)
jle
hlt
sbb
icebp
stc
gs
xor
jge
faddp
mov
and
sub
dec
outs
dec
dec
(bad)
rcl
fimul
sub
add
cmc
jo
and
xor
imul
inc
mov
pop
stos
hlt
jmp
sbb
sbb
imul
or
imul
sbb
fwait
neg
(bad)
js
mov
lods
lahf
add
cdq
cmps
jne
mov
xchg
lds
jbe
mov
cmovs
and
cmp
lahf
or
cmp
(bad)
mov
loop
imul
sub
pop
mov
inc
pop
xor
ret
dec
loopne
mov
pop
mov
mov
push
lods
push
mov
push
call
sbb
jp
(bad)
mov
and
add
mov
repz
movs
fcmovnu
inc
out
das
cdq
retf
sbb
loop
adc
cwde
jnp
repnz
test
rcr
lods
mov
cli
dec
jbe
loop
stos
push
add
pop
mov
dec
clc
es
sbb
lock
cwde
xchg
xchg
in
cmp
repnz
aad
or
jle
xchg
cmps
sbb
dec
gs
xor
(bad)
stos
inc
xchg
xor
mov
and
lods
ds
sbb
mov
push
push
mov
stos
push
pop
in
add
mov
dec
pop
call
xor
lods
add
push
push
mov
adc
fisttp
ss
dec
jge
mov
(bad)
push
lahf
fbld
test
mov
xchg
ret
imul
xchg
mov
jg
or
fdivr
mov
mov
xchg
push
test
cmps
stc
mov
aad
call
xchg
jmp
sub
test
fdivp
fcmovbe
push
inc
xor
dec
aam
lock
xlat
cmp
cmp
out
setae
sar
sbb
enter
mov
rcl
in
or
dec
push
fsub
retf
mov
pushw
lock
push
and
jns
pushf
mov
or
xchg
ret
inc
xlat
test
cmps
dec
test
ret
dec
dec
sub
lahf
and
cli
xor
jmp
sahf
sbb
sti
mov
ins
outs
sub
lds
inc
push
(bad)
(bad)
jo
fldenv
iret
out
lock
in
mov
push
jp
pop
in
add
and
xchg
imul
cmps
jmp
dec
ror
add
aas
outs
lock
fadd
js
test
adc
jl
into
sub
repz
xchg
or
stos
sahf
les
pop
jg
adc
inc
sub
dec
in
mov
xor
mov
pop
sub
xor
and
es
shl
aaa
lock
or
mov
jp
cmp
pop
pushf
dec
jne
jle
stos
in
xchg
cwde
bound
cdq
loop
and
push
xchg
lahf
in
fwait
into
cmc
dec
jecxz
or
adc
mov
xchg
stos
adc
(bad)
ds
call
push
inc
dec
push
pop
std
sahf
pop
sbb
aaa
div
repnz
cmp
aas
sbb
push
pop
cmp
shl
jmp
pushf
jb
push
pop
gs
pop
bound
cmc
sahf
jo
int3
js
xor
jg
stos
data16
xor
cmp
cmp
pop
int
std
push
bound
jmp
xchg
jbe
loop
mov
mov
xchg
pop
or
addr16
rcr
fwait
cmps
adc
or
push
sbb
cmc
(bad)
stos
sub
push
push
cmp
outs
inc
mov
push
ins
dec
jno
nop
in
xor
in
ret
jns
mov
xchg
push
push
test
sbb
xor
(bad)
mov
ret
fadd
test
push
pop
ficomp
jg
mov
hlt
repnz
sbb
mov
pop
mov
sub
mov
jb
(bad)
shl
std
pop
push
sahf
jbe
mov
and
loopne
add
pop
loopne
je
cmps
outs
call
mov
js
scas
leave
call
fwait
dec
or
jb
test
ret
xchg
xor
push
pop
jne
aas
mov
addr16
inc
ficomp
xchg
mov
loop
or
scas
(bad)
cmc
in
clc
inc
rcl
mov
out
sahf
mov
jl
imul
jnp
cmp
cmp
mov
xchg
shl
arpl
push
dec
fnstcw
loopne
aad
add
sub
fcomp
cmp
in
xor
pushf
jmp
dec
scas
push
sbb
pop
nop
(bad)
movs
adc
dec
test
dec
dec
mov
cmp
nop
sbb
loop
aad
pop
mov
xchg
loope
loop
xchg
adc
pop
into
(bad)
mov
mov
repnz
jnp
pop
enter
xor
add
aaa
xchg
xor
inc
ret
in
pop
add
xor
mov
sub
add
outs
aam
int3
(bad)
push
retf
fs
call
inc
inc
jle
pop
adc
xchg
rcl
inc
(bad)
rol
(bad)
xchg
mov
imul
and
cmp
inc
inc
xor
jecxz
mov
ins
int3
xor
ror
mov
mov
sub
scas
mov
(bad)
mov
xchg
pop
movs
jmp
das
inc
mov
daa
inc
jmp
add
mov
js
push
sbb
ret
icebp
mov
ficom
xor
jg
aad
gs
aam
mov
aaa
cli
add
adc
in
loop
pop
fnstenv
outs
shl
(bad)
sub
fbstp
(bad)
cmp
stc
adc
mov
ror
jno
push
cs
jns
mov
adc
les
pop
(bad)
mov
or
xor
(bad)
push
jmp
out
mov
rol
xlat
call
out
dec
or
int
(bad)
push
cs
mov
jnp
mov
shl
das
(bad)
mov
popa
cwde
out
sti
mov
push
stos
test
pop
enter
bnd
push
les
ficom
adc
es
and
sbb
jl
jmp
sub
stos
jg
test
pop
(bad)
hlt
pusha
fs
pop
popa
jl
mov
cmp
push
movs
(bad)
and
dec
mov
push
test
(bad)
jo
cmp
repnz
push
enter
and
pop
(bad)
jb
fadd
cld
add
std
jge
(bad)
retf
sbb
dec
ret
into
add
push
rcl
inc
xchg
xchg
lds
mov
scas
cs
jp
adc
int3
fwait
jbe
push
xchg
pushf
mov
sub
rol
outs
leave
sbb
push
sub
ss
mov
push
pop
pushf
mov
adc
int
in
adc
stos
fidivr
cdq
test
push
repz
(bad)
push
test
fld
mov
adc
xchg
movs
add
push
xor
ss
(bad)
ja
jp
das
xchg
adc
xor
and
push
adc
pop
int3
js
mov
inc
imul
dec
into
in
in
mov
mov
mov
ret
push
and
jg
gs
push
je
mov
inc
movs
dec
adc
jne
and
pop
pop
loop
(bad)
cmc
clc
das
dec
dec
xor
and
xchg
cdq
sub
add
sbb
jb
inc
jle
xor
or
dec
adc
mov
push
add
dec
and
cmp
sub
mov
cmp
fs
fwait
stos
and
and
scas
push
mov
pop
jnp
cmc
sub
sub
mov
pop
xchg
je
xor
aad
das
or
loopne
pop
adc
sbb
push
je
mov
ds
jecxz
out
push
dec
pop
adc
add
dec
hlt
rcl
in
in
loop
into
test
imul
fld
out
cwde
adc
fwait
retf
jp
xchg
data16
xor
retf
aaa
sar
retf
pop
fild
add
mov
or
or
mov
jecxz
neg
popf
cld
inc
push
cmp
xchg
scas
dec
add
leave
push
and
xor
xchg
inc
sbb
adc
out
mov
xchg
adc
retf
add
out
ret
sahf
push
rcr
pop
fidiv
int
mov
mov
and
fadd
test
jo
jmp
push
in
xlat
pop
lods
adc
test
scas
lahf
adc
hlt
xchg
xor
out
or
jns
sub
push
out
adc
fnstsw
out
inc
popa
mov
aad
push
scas
(bad)
mov
pop
lds
jmp
imul
mov
cmp
xchg
sub
xchg
arpl
mov
out
lods
ins
in
xchg
div
(bad)
jge
dec
sub
pop
jge
cmp
or
adc
sub
out
mov
pushf
xor
je
(bad)
scas
mov
out
sub
jne
jg
fdiv
inc
sbb
mov
jg
jns
pop
xor
in
mov
ficom
out
sub
pminub
das
(bad)
aas
sbb
jg
stc
or
scas
and
scas
mov
jbe
adc
scas
dec
mov
push
and
xor
cmp
xchg
push
sub
outs
test
ror
outs
aad
mov
int
mov
jp
push
add
pop
popf
mov
pextrw
cmps
or
jmpw
ficom
sbb
aad
in
pop
pop
dec
xor
mov
fld
inc
movs
push
and
push
int
jp
and
push
mov
sbb
aam
aaa
test
cmc
adc
pop
int3
fwait
xchg
pushf
cmp
inc
pusha
test
into
mov
ds
cld
and
and
sti
das
sbb
sub
and
(bad)
sar
mov
pop
mov
jl
jg
fbstp
sub
aaa
mov
inc
mov
aad
or
fucom
das
psrld
idiv
frstor
js
fcomp
xchg
pop
push
cdq
cmp
test
das
sub
and
aad
sar
sbb
push
jae
fidivr
clc
mov
pop
mov
call
jae
push
add
(bad)
adc
push
rep
fisub
fimul
mov
nop
mov
shr
and
add
add
clc
rcr
(bad)
cmp
inc
or
shl
sbb
mov
xor
call
dec
inc
outs
push
mov
push
pop
mov
stc
jno
into
push
and
xchg
sub
push
jns
aaa
das
jge
stos
jg
mov
jmp
lahf
outs
mov
jmp
push
mov
test
jmp
imul
xchg
cli
das
sti
add
push
rcr
nop
imul
hlt
loope
mov
into
pushf
or
in
pop
test
or
in
in
and
and
daa
ins
or
adc
loop
iret
into
mov
mov
cld
(bad)
arpl
out
fnstcw
adc
mov
adc
jp
(bad)
ret
ret
cmc
sub
mov
xchg
and
push
adc
dec
(bad)
pop
sbb
test
xor
xchg
push
scas
add
xor
repz
ins
mov
cmps
hlt
neg
or
popf
pop
mov
clc
rcr
test
add
cmps
out
in
push
or
mov
or
mov
mov
or
mov
mov
ret
push
xchg
imul
xor
movs
add
jnp
cmp
aaa
dec
pop
ret
in
lahf
movs
shl
mov
popf
int
(bad)
push
cmp
xchg
fwait
mov
inc
xchg
arpl
push
stos
push
jp
xor
cmc
clc
dec
sbb
mov
or
dec
jg
in
xor
xchg
call
mov
or
or
addr16
js
cmc
jno
dec
cmc
cmp
adc
imul
int3
inc
jnp
cmc
xor
sbb
jmp
add
shl
inc
and
jge
pushf
faddp
or
cmp
mov
cmps
add
and
add
xchg
jmp
stos
js
jbe
imul
push
fwait
into
aam
cmp
sub
jbe
dec
(bad)
push
jno
shr
mov
add
jmp
adc
stc
cdq
aaa
push
dec
adc
xchg
in
jo
and
cdq
ss
out
(bad)
out
jnp
jl
daa
(bad)
push
fistp
push
mov
sbb
mov
out
sbb
push
lock
int
mov
rcr
inc
in
cmp
pusha
xchg
mov
jmp
ds
outs
mov
test
pop
pushf
into
jmp
outs
and
loopne
in
mov
mov
mov
adc
test
loope
call
daa
in
(bad)
push
fidiv
stos
pushf
gs
loop
inc
pop
xchg
mov
loop
std
frstor
shl
jmp
pop
ins
jle
jmp
and
xor
call
push
dec
call
or
(bad)
fisub
or
mov
adc
out
jge
dec
mov
sub
pushf
data16
xchg
cmp
mov
std
mov
jno
dec
mov
pop
cld
clc
pop
dec
sbb
jg
loop
out
mov
pop
ret
push
inc
in
lar
sbb
jbe
dec
xchg
mov
retf
jno
inc
mov
imul
cmp
icebp
inc
inc
push
jno
stos
sbb
lds
sbb
xchg
adc
mov
jmp
mov
add
imul
mov
cdq
jmp
or
sub
sub
mov
sub
aas
aaa
leave
stc
adc
and
mov
dec
xchg
adc
or
imul
jns
mov
xchg
(bad)
mov
mov
sti
sbb
lods
cdq
xchg
sub
daa
push
inc
adc
jmp
ret
retf
add
sub
push
cmp
adc
jle
pop
nop
push
cmp
push
int
fcom
movs
add
out
(bad)
cmp
cs
jne
push
scas
push
sub
and
mov
xchg
sub
ds
dec
jb
sub
pop
pushf
lods
mov
dec
sbb
push
and
not
fiadd
jno
std
cmp
in
push
es
std
sbb
jo
push
mov
and
ffreep
adc
cdq
pop
inc
sbb
rcr
mov
xor
mov
add
xlat
div
and
mov
push
clc
sbb
lods
push
pop
mov
movs
data16
jg
aad
cmps
sbb
mov
mov
ins
pop
out
stos
add
(bad)
clc
dec
mov
xchg
sahf
int3
bound
sub
mov
mov
cld
nop
add
pop
fstp
repnz
(bad)
pop
jl
pop
mov
ins
sub
sub
out
stos
mov
cmp
adc
mov
jg
cmovb
cld
cmc
mov
sbb
mov
adc
xchg
jmp
imul
adc
retf
dec
jmp
xor
pushf
and
(bad)
xchg
mov
dec
fsubr
mov
inc
cmp
mov
hlt
rcl
cmp
push
jne
and
inc
mov
xor
xlat
push
iret
pop
clc
pop
sahf
jne
mov
(bad)
mov
repnz
xor
cmp
sub
scas
mov
push
cmc
cmps
push
cwde
(bad)
adc
add
dec
call
cmp
lods
mov
pop
repz
ja
adc
pop
mov
cmp
nop
loope
hlt
arpl
sbb
(bad)
popf
test
mov
test
cmp
push
or
adc
scas
jl
or
pop
enter
push
ror
cli
cwde
leave
cmp
xchg
loopne
hlt
sub
in
mov
ret
lea
ins
daa
push
mov
pop
popf
add
or
icebp
mov
cld
fs
mov
enter
inc
leave
test
aaa
xor
popf
cmc
sub
xor
les
std
cs
mov
daa
inc
mov
es
cmp
push
xor
push
add
test
fimul
pop
pop
(bad)
adc
lds
sub
adc
ss
stc
out
fwait
dec
mov
lahf
fisubr
sub
mov
mov
cmps
mov
and
sbb
jnp
xchg
mov
std
mov
enter
stos
jbe
movs
scas
pop
push
sbb
pop
add
shl
jmp
xchg
push
push
mov
lods
fist
pop
add
imul
xor
shl
imul
retf
ins
sar
cmc
and
push
sub
pop
mov
sub
push
dec
into
add
mov
jle
loop
cwde
xor
loop
sar
leave
inc
inc
inc
pop
mov
mov
loop
xchg
in
dec
imul
cmps
and
lock
sub
push
dec
fist
imul
jle
jmp
jecxz
mov
pop
cmp
or
jnp
std
mov
retf
jecxz
cli
repnz
js
aas
in
push
stc
imul
pop
outs
fdivr
dec
xchg
mov
out
dec
push
cwde
mov
dec
cmp
test
ins
jge
and
ins
inc
cld
es
mov
sub
pop
mov
inc
mov
jl
movs
or
std
pusha
pop
retf
adc
jle
iret
add
fs
scas
sbb
mov
mov
lods
jae
das
cli
jno
add
xchg
ss
inc
popf
jae
idiv
xchg
xchg
sub
adc
mov
push
bound
into
sbb
cmp
cli
push
sbb
pusha
mov
aaa
es
outs
arpl
rcl
ror
repnz
popf
xor
loop
mov
js
leave
out
out
sub
push
frstor
out
loope
jle
scas
and
inc
rcr
xchg
xor
jmp
pop
inc
xchg
cmp
cmp
xchg
push
mov
cmc
in
sub
xchg
movs
pop
jl
push
dec
outs
mov
inc
xor
xchg
mov
mov
cld
and
push
stos
xor
add
mov
pop
fcomp
sub
mov
cmc
inc
xchg
inc
xor
js
xor
or
test
shl
int3
cmp
retf
(bad)
test
pop
ins
call
push
pop
fst
js
mov
imul
or
push
push
inc
inc
stos
lods
sbb
in
add
cmp
mov
pop
sub
(bad)
or
push
and
and
and
or
ins
sbb
sub
cmp
cmps
in
es
jnp
(bad)
in
push
fst
xor
xor
jnp
daa
push
lea
inc
and
push
aad
lods
xor
jmp
or
cmp
inc
nop
xor
push
push
into
inc
xchg
mov
push
and
sbb
xor
mov
in
(bad)
cmp
jbe
in
or
lods
shl
sub
adc
jae
pushf
cli
idiv
out
fs
xchg
sbb
cmp
in
ret
mov
mov
(bad)
out
loop
sub
test
repz
mov
retf
mov
mov
pop
fidiv
test
or
mov
adc
clc
int
inc
push
call
int
dec
in
fdiv
push
inc
xor
pop
fcomip
js
mov
pop
xchg
push
mov
xor
jbe
push
mov
(bad)
ror
cmc
dec
les
add
pusha
mov
xor
sbb
push
xchg
adc
(bad)
in
mov
ret
ins
in
out
or
iret
mov
pop
stos
dec
fsubr
movs
xor
push
loopne
mov
xchg
clc
or
xchg
mov
pop
xor
sbb
(bad)
pop
sbb
int
cmp
dec
xchg
xor
xchg
ins
(bad)
mov
int3
xor
retf
out
add
popf
mov
repz
lds
retf
jmp
std
sub
xchg
or
push
and
sbb
jo
mov
add
in
mov
shr
shr
mov
icebp
fistp
mov
(bad)
shl
stc
jecxz
clc
jns
clc
sub
scas
imul
dec
mov
fdiv
and
sti
cld
sbb
pop
(bad)
popf
pop
imul
retf
pusha
aas
stos
(bad)
dec
adc
dec
sub
jbe
jp
jmp
imul
addr16
inc
fbld
mov
xor
add
cmc
xchg
and
(bad)
dec
mov
imul
inc
mov
inc
ins
push
(bad)
xlat
inc
mov
stos
lea
scas
imul
mov
sub
loop
es
push
stc
mov
ror
jns
mov
mov
or
xor
pop
or
enter
mov
int
fst
and
mov
shl
xor
mov
mov
mov
add
mov
ficom
inc
fisubr
into
aaa
int3
cmp
jnp
push
clc
inc
xchg
shl
mov
sbb
cmp
pop
add
jle
outs
adc
ret
xchg
and
lds
jp
lahf
pop
cwde
xchg
dec
sar
lea
push
and
or
jne
inc
jnp
dec
lea
into
sbb
fisubr
(bad)
out
mov
mov
int3
data16
adc
dec
pop
call
push
mov
test
and
dec
test
sub
push
loop
xor
stos
sar
jge
es
inc
jge
xor
jmp
retf
enter
jno
add
jo
mov
rcr
rcl
je
ret
lods
sahf
mov
fs
cmp
or
cs
popa
in
push
mul
sub
ins
(bad)
cmp
xchg
ds
or
cmp
shl
(bad)
fsub
pop
xor
pop
mov
pusha
dec
fistp
push
jae
mov
test
fdiv
mov
xchg
fild
enter
sbb
xor
inc
int
jae
sub
nop
mov
movs
sti
or
and
mov
into
sbb
loop
ins
stc
sub
test
mov
mov
out
mov
add
(bad)
lods
sti
ja
jl
cmp
das
cmps
movs
push
iret
call
jnp
je
add
mov
pop
cmc
das
cs
sti
push
lea
imul
ret
in
push
js
sub
push
mov
stos
xchg
push
aam
mov
pop
in
jns
loope
in
and
pop
pop
or
ins
dec
test
mov
mov
mov
mov
(bad)
sub
sahf
cmp
retf
movs
jae
mov
in
mov
(bad)
sub
ins
jp
ror
mov
xchg
mov
add
push
pop
retf
adc
int
xor
inc
inc
fsubr
adc
lock
or
sahf
jmp
jecxz
inc
test
inc
cwde
pop
adc
cmp
mov
push
pop
mov
pusha
les
jl
jge
mov
pop
lahf
jle
addr16
mov
and
cmp
jns
sar
ins
loop
ds
(bad)
jmp
repnz
inc
inc
icebp
jp
pop
mov
push
inc
fisub
and
iret
sub
push
cmps
retf
inc
pop
pop
add
ret
cdq
imul
fdiv
arpl
mov
dec
jbe
ds
cmp
dec
adc
sbb
adc
mov
in
aam
adc
or
mov
inc
xor
or
xchg
and
add
cmp
push
cli
pop
aad
popf
jle
enter
xor
push
inc
mov
and
add
and
mov
jo
pop
cmp
push
push
mov
xchg
enter
xor
fsubp
adc
nop
sub
leave
out
cmp
adc
es
data16
movs
add
mov
fcmovbe
or
leave
mov
xor
add
mov
icebp
xchg
jo
sbb
xchg
or
iret
adc
push
shl
mov
ret
repnz
add
pop
cld
inc
dec
and
push
xchg
pop
cmp
add
bound
and
mov
xor
jge
repz
ins
sbb
repz
inc
popf
jno
pop
sub
or
ror
and
jne
sub
sub
jae
pop
dec
mov
inc
sbb
sbb
adc
xor
xchg
nop
push
sahf
jge
pusha
push
shl
push
inc
inc
jg
inc
dec
adc
sub
pop
cmp
rcl
adc
pop
loop
mov
cdq
mov
mov
movs
sub
push
les
mov
fs
add
rol
sbb
pop
and
pop
iret
cmc
adc
(bad)
cmps
ret
xchg
ret
in
mov
jl
movs
mov
xor
in
push
add
jg
cs
xchg
jmp
into
pop
fstp
sbb
stos
xor
cmp
movs
js
adc
repnz
sub
mov
cmp
mov
ja
inc
push
pop
fidivr
mov
stos
ins
cmp
retf
pop
aas
fiadd
(bad)
mov
call
push
clc
dec
or
int3
inc
xchg
pusha
and
sbb
dec
xchg
and
and
mov
jmp
push
push
adc
xor
add
in
ror
pop
cwde
jne
mov
arpl
mov
pop
popf
ret
adc
les
sbb
push
sub
push
xor
ror
pushf
neg
aaa
mov
lods
mov
jmp
fdivr
mov
mov
jp
xchg
fwait
rcr
inc
jnp
mov
movs
sbb
jno
pop
or
adc
cmp
xchg
dec
mov
fisubr
push
jae
je
mov
cmp
js
mov
and
mov
pop
pop
paddd
or
retf
mov
outs
jp
retf
inc
std
dec
ja
mov
jecxz
cmp
enter
cwde
fiadd
dec
(bad)
jg
lods
dec
jp
call
sti
sub
pop
push
out
or
popa
jl
jne
adc
adc
imul
pop
mov
add
cmp
dec
xor
mov
inc
in
jmp
push
sbb
jmp
(bad)
pop
xchg
sbb
les
push
ja
xchg
sub
push
mov
shl
mov
stos
stos
sbb
jnp
inc
imul
neg
std
shr
jns
fwait
push
lea
jle
into
mov
cmp
pop
into
aas
xchg
cmps
bound
mov
ss
sbb
nop
jecxz
mov
inc
(bad)
jno
sub
shl
out
repnz
int3
xchg
dec
ret
xor
push
rcr
or
bound
push
and
loop
push
in
mov
pop
cs
add
ss
add
add
add
lock
or
jge
test
inc
and
pop
bound
fs
rcl
repz
mov
into
inc
push
lods
in
pop
sub
(bad)
or
cdq
mov
pop
(bad)
lods
repnz
hlt
cli
retf
xlat
mov
(bad)
idiv
xor
dec
sti
outs
aam
dec
ror
mov
jo
std
xchg
aad
femms
pop
jl
retf
dec
sub
mov
or
mov
loope
hlt
leave
cmp
dec
ins
call
jg
cmc
int
ds
dec
mov
in
pop
repz
out
or
mov
icebp
stos
fcomp
loopne
data16
imul
xchg
loopne
xchg
nop
dec
and
jge
jbe
xor
dec
int3
cs
cmp
xchg
ins
mov
add
int
bound
add
fcom
imul
jecxz
add
bound
pushf
popf
xor
add
and
(bad)
dec
(bad)
xor
clc
mov
scas
push
add
push
cmp
outs
adc
in
ret
sti
jmp
mov
je
fdivr
pop
sub
inc
stc
stos
int3
jmp
adc
or
pop
mov
xchg
cmovle
(bad)
and
jnp
clc
mov
les
xchg
ret
hlt
test
fnstsw
and
jo
pop
add
xchg
in
pop
in
lea
cmps
fs
popa
fsub
push
out
pushf
lods
and
sar
inc
sub
in
sar
test
dec
(bad)
std
jne
sub
mov
ins
cmps
and
mov
xor
sub
call
xor
shl
pop
mov
dec
and
fcom
add
(bad)
fisttp
outs
pop
push
in
pop
shl
or
dec
rol
pop
or
jb
cwde
int
lds
push
movzx
mov
int
(bad)
jp
sbb
xor
cmp
(bad)
pop
inc
es
je
or
test
fmul
push
repz
pop
xchg
call
das
inc
repz
das
add
retf
adc
dec
mov
jl
xor
out
and
or
lods
je
daa
jp
data16
jo
out
and
aas
lahf
pop
or
addr16
or
icebp
xchg
push
and
lods
rcr
jmp
idiv
mov
loop
or
or
daa
mov
dec
push
ficom
cmp
xchg
xor
cdq
sub
out
mov
inc
movs
(bad)
in
retf
fldcw
push
push
sti
repnz
jp
popf
movs
(bad)
jp
pop
adc
push
lea
mov
icebp
xor
or
test
ds
outs
push
shr
cdq
xchg
jo
jecxz
dec
(bad)
jmp
pop
movs
cmp
jne
xor
xchg
xchg
or
sar
dec
ins
aam
inc
inc
jmp
jl
mov
ret
out
leave
(bad)
(bad)
nop
cmc
jne
xor
bound
xor
jmp
in
fs
mov
imul
mov
xchg
sub
pushf
cli
inc
mov
jns
icebp
ficomp
pop
fisttp
addr16
push
jae
in
xchg
sub
pop
dec
mov
gs
div
jmp
aas
pushf
mov
pop
mov
test
mov
cld
in
xor
clc
add
xchg
push
(bad)
dec
xor
sbb
sub
lahf
inc
bound
int3
mov
fst
dec
xchg
push
mov
and
loope
icebp
pop
cmp
stc
sub
jle
rol
mov
pop
or
clc
into
movs
dec
addr16
(bad)
xor
imul
xchg
add
scas
pop
sti
inc
mov
bnd
add
mov
gs
fsubr
std
mov
call
loop
(bad)
jl
jo
sub
mov
fisttp
mov
xor
pop
retf
ins
push
adc
iret
mov
sar
test
jp
cmp
inc
retf
xchg
adc
lea
pop
unpckhps
loope
adc
es
int3
push
dec
stos
test
xor
(bad)
inc
xor
cmps
(bad)
out
(bad)
and
mov
add
test
imul
call
jecxz
jbe
adc
mov
loopne
add
xchg
repnz
or
jge
pusha
int
xor
or
fldenv
int3
mov
test
mov
iret
in
dec
leave
outs
(bad)
call
jmp
shl
or
sbb
popa
pop
pusha
adc
push
(bad)
cwde
adc
mov
ins
clc
ror
push
iret
fistp
pop
fs
sahf
movs
aad
adc
call
xchg
jne
dec
xchg
shl
inc
in
dec
(bad)
rol
jecxz
sbb
sete
int
stos
lahf
mov
sbb
stos
xor
fnstsw
adc
sbb
stos
aaa
ds
cmp
pop
aad
into
adc
js
fs
jg
dec
pop
es
arpl
leave
and
test
jmp
sub
into
outs
outs
pop
xchg
cmp
in
test
icebp
(bad)
mov
jbe
push
into
jnp
outs
cmp
cld
clc
and
dec
test
and
mov
or
js
cmp
add
outs
jecxz
(bad)
pop
sahf
pop
fdivr
iret
mov
sahf
jmp
imul
xchg
push
or
(bad)
and
mov
xchg
sbb
pushf
and
adc
dec
inc
pop
and
adc
xchg
fstp
mov
mov
jle
ret
lods
ret
je
aaa
xor
and
hlt
jo
repnz
fisubr
sar
iret
imul
(bad)
fnstenv
mov
ins
push
mov
or
hlt
adc
mov
mov
lods
enter
scas
hlt
jbe
add
mov
int
and
jno
dec
(bad)
jl
out
or
add
clc
inc
xor
and
jmp
mov
push
cmp
sbb
xor
rcl
adc
adc
push
ret
xor
adc
mov
fsubr
or
fistp
stos
cmp
add
aam
out
pop
mov
fcmovnu
sub
mov
not
fucom
das
inc
xchg
sub
sbb
mov
dec
int
sbb
ss
inc
ja
cdq
add
xchg
xor
sub
test
fcom
jle
fsub
or
daa
popa
movs
xchg
jns
push
test
dec
sbb
scas
dec
sbb
test
push
pushf
in
out
mov
fmul
sub
dec
(bad)
jne
pop
xchg
outs
xor
(bad)
pushf
mov
stos
lds
cmp
adc
aad
aad
aaa
push
xchg
push
sbb
(bad)
gs
adc
test
repz
or
cmps
ds
std
loopne
addr16
or
add
mov
fs
xlat
xchg
dec
jnp
sbb
sub
enter
hlt
std
scas
fstp
push
ret
push
xor
sbb
jl
shl
pop
dec
ret
or
cmp
fwait
mov
and
mov
jb
retf
mov
dec
hlt
sbb
mov
(bad)
push
add
adc
or
mov
mov
mov
xchg
sbb
cvtps2pd
mov
xchg
or
mov
push
mov
dec
call
dec
pop
ins
das
lock
and
inc
xor
in
xor
and
into
mov
xchg
enter
repz
cmp
lods
imul
cld
inc
push
xor
mov
or
(bad)
out
cdq
mov
cmp
mov
pop
cmp
in
cli
pop
(bad)
cmp
jmp
std
mov
push
jo
and
std
test
dec
dec
dec
iret
sti
inc
jb
rcr
cmp
mov
retf
add
mov
jge
into
xor
dec
and
push
mov
popf
or
mov
fcomp
lds
pop
add
xchg
imul
popa
(bad)
mov
mov
mov
mov
sbb
bound
sub
or
xor
in
mov
dec
mov
in
sub
enter
adc
sub
out
cmp
sbb
jne
sub
pop
push
push
dec
js
push
sbb
outs
outs
sbb
cmp
lahf
sbb
cmp
push
xchg
push
leave
mov
mov
call
test
sti
lea
dec
or
or
sub
in
sbb
dec
jecxz
dec
xchg
hlt
adc
mov
sub
repnz
and
sub
mov
mov
pop
pop
sbb
pop
xchg
push
mov
mov
mov
les
jb
(bad)
in
fidivr
fdivr
test
cmp
dec
and
push
pop
push
int3
movs
je
je
stc
jecxz
mov
mov
mov
inc
fst
retf
(bad)
inc
out
ja
jl
adc
ds
ficomp
js
pop
push
inc
xchg
sub
mov
retf
stc
adc
mov
sbb
les
cmp
sub
sbb
mov
jle
fiadd
nop
or
test
jmp
add
pop
push
aad
mov
xchg
pop
das
pop
adc
std
add
cmp
addr16
mov
mov
retf
out
std
xor
mov
and
add
movs
cmp
test
inc
push
dec
adc
rol
imul
not
das
cmp
cwde
stc
xchg
inc
cmp
inc
scas
outs
and
and
sub
fcomp
pop
(bad)
push
enter
in
iret
inc
inc
mov
cmp
push
cld
pop
push
test
xchg
scas
adc
pop
inc
fisubr
das
jecxz
stos
pop
test
je
loopne
aad
popf
fninit
inc
push
jge
xchg
and
jnp
fisubr
in
enter
or
mov
and
aam
loop
js
loope
js
xchg
in
fwait
dec
push
stc
cmp
sbb
xchg
xor
push
mov
ins
(bad)
cmps
jns
enter
push
add
and
(bad)
push
or
addr16
pop
cwde
or
hlt
das
jl
sub
jo
jle
(bad)
std
pop
push
jecxz
mov
dec
in
dec
aas
retf
or
or
sub
sbb
xchg
and
mov
xchg
cwde
push
jp
ret
enter
out
fnstsw
in
ds
neg
jecxz
pop
cmp
out
xchg
pop
stc
inc
mov
xchg
sub
lods
shr
pop
jmp
dec
(bad)
xor
aam
je
adc
popf
sub
sbb
pushf
pop
repnz
mov
mov
jmp
dec
cli
cmp
mov
in
xor
movs
add
(bad)
mov
enter
loope
mov
jge
gs
and
rol
mov
jle
arpl
adc
rol
outs
pushf
sub
jle
popf
test
ret
out
fs
movs
in
jp
or
cmc
pop
mov
out
mov
test
xchg
das
push
cmp
(bad)
rol
int
sub
xchg
dec
mov
rol
xchg
add
shl
or
mov
movs
outs
push
add
pop
cld
pushf
fwait
nop
jge
sbb
and
sub
mov
pop
inc
ret
idiv
retfw
aad
aaa
jmp
cmps
jne
jle
dec
and
icebp
mov
sub
push
(bad)
mov
fimul
rcl
push
and
sbb
pop
imul
das
mov
jb
in
hlt
aaa
adc
leave
cmp
inc
xor
int3
cmp
adc
mov
sub
cmp
enter
shr
cmp
mov
push
jge
gs
lock
push
pop
aad
and
push
cdq
shr
loope
push
mov
mov
and
jae
out
shr
dec
inc
cmp
test
repnz
xchg
scas
xchg
fs
imul
ja
in
je
stc
mov
ret
inc
mov
fsub
int3
aad
pop
movs
into
ss
les
mov
pop
(bad)
sar
sub
sub
push
cmp
cld
and
sbb
dec
adc
fiadd
fmul
pushf
xchg
dec
xchg
data16
cmp
dec
cmp
mov
fist
sbb
push
mov
loope
retf
or
pop
cmp
xchg
push
mov
imul
add
sbb
movs
inc
rcl
or
add
lea
and
imul
inc
in
lock
shr
lahf
mov
(bad)
packssdw
pop
cmp
adc
pusha
inc
fs
add
repnz
jae
dec
or
hlt
mov
jo
idiv
(bad)
mov
inc
pop
aam
clc
pusha
sbb
je
arpl
mov
mov
data16
inc
dec
add
jmp
jae
xor
arpl
add
and
add
xchg
and
bound
jmp
stos
test
inc
xchg
pop
mov
rcr
or
leave
movs
push
cmc
add
in
or
add
lods
jns
push
mov
arpl
mov
jbe
jecxz
nop
inc
test
adc
xchg
and
sbb
mov
cmp
push
sbb
icebp
pop
pushf
jecxz
ret
mov
stc
inc
into
sbb
mov
inc
out
outs
scas
fcomp
scas
loopne
loop
inc
inc
jmp
sti
mov
int
fiadd
pop
cli
fisttp
ins
hlt
(bad)
mov
lods
or
jl
xor
jbe
mov
movs
shr
fimul
jecxz
inc
nop
mov
(bad)
aaa
xchg
push
dec
jecxz
pushf
cmp
xchg
add
jecxz
inc
fstp
mov
gs
push
jecxz
inc
mul
adc
scas
inc
test
cmp
rcr
mov
pop
pop
mov
and
repnz
mov
push
imul
ror
mov
dec
iret
gs
push
(bad)
int
add
inc
xor
add
out
xchg
sbb
call
sub
ss
sub
mov
ins
fld
out
or
mov
je
lahf
jb
cli
adc
pop
push
out
pop
mov
out
stc
adc
mov
jae
sahf
cmps
in
add
das
push
mov
push
adc
add
ins
bswap
movs
mov
movs
(bad)
mov
loop
fstp
aas
jb
push
test
xor
mov
mov
sub
das
push
vpunpcklqdq
gs
je
pop
leave
jl
jnp
cs
pop
mov
add
sahf
fcomp
mov
daa
push
dec
loopne
bound
ja
out
sub
jle
mov
cmps
adc
fidivr
loopne
push
unpckhps
bound
repnz
xchg
mov
jl
add
jmp
fdiv
dec
push
fs
not
stos
add
adc
mov
fimul
push
imul
or
inc
jg
mov
cmp
mov
icebp
add
clc
daa
es
jnp
or
pushf
cdq
mov
dec
dec
sub
out
mov
adc
adc
push
retf
ds
nop
mov
add
cwde
(bad)
pop
(bad)
and
dec
mov
push
push
push
sub
mov
xchg
cdq
jmp
sbb
cmc
add
or
jmp
push
sahf
xchg
sub
in
mov
mov
xchg
movs
ja
xchg
test
mov
cmps
dec
sub
call
lea
add
scas
xchg
ret
mov
sbb
int3
lahf
xchg
ins
fcmovb
push
addr16
and
or
or
(bad)
lock
mov
or
adc
out
repnz
adc
push
gs
fisub
mov
jne
pop
das
arpl
pop
pop
pusha
inc
mov
rcl
push
dec
lea
mov
or
mov
cmp
xor
hlt
mov
int
in
push
outs
dec
mul
dec
into
push
loop
mov
push
jae
pop
sbb
fsubr
xlat
ret
xlat
std
xor
ja
ja
push
add
dec
mov
mov
adc
retf
lods
pop
mov
nop
sahf
xchg
fcom
push
in
mov
test
xor
add
jbe
mov
sti
hlt
mov
push
bound
test
sub
xor
or
cld
xchg
and
in
lock
retf
xchg
int3
inc
loop
and
(bad)
jp
cmp
ds
push
or
aaa
pushf
cs
icebp
dec
mov
mov
fsub
out
out
fwait
adc
pop
stos
mov
mov
stc
pop
retf
aam
jmp
and
add
pop
fisttp
and
les
mov
and
sbb
fst
sbb
and
cli
repz
arpl
mov
push
mov
shr
cmp
jo
push
in
inc
pop
loop
in
or
aas
sub
bswap
fnop
sub
and
sti
fnstsw
retf
in
mov
mov
add
fidivr
dec
rcr
fidivr
sub
xchg
hlt
mov
daa
xchg
aaa
jnp
aas
adc
test
add
enter
xchg
addr16
xchg
fwait
xor
je
imul
cmp
adc
ficom
cmp
and
(bad)
ror
pop
fimul
or
fdiv
mov
rep
mov
jle
or
mov
ss
mov
xlat
int
or
push
rol
das
jg
jno
ds
sub
pop
scas
mov
int3
cmp
(bad)
das
ds
push
mov
vphsubbw
jecxz
adc
or
and
xlat
pop
das
bound
sbb
inc
mov
sbb
add
jle
loop
dec
or
mov
jo
push
popf
fwait
retf
add
fadd
clc
je
gs
into
xor
mov
fst
retf
add
aaa
and
adc
mov
cmc
lds
fld
cmp
aam
inc
iret
in
sbb
imul
or
jge
mov
adc
mov
js
push
adc
outs
mov
lahf
push
push
sub
ret
in
push
dec
cwde
sbb
jge
sbb
int
addr16
ror
adc
push
fs
dec
inc
sar
fucomip
jbe
inc
sar
daa
add
popa
inc
add
cmp
dec
xchg
xchg
pop
inc
js
xchg
xchg
xor
jb
or
test
sbb
(bad)
cmp
fldcw
add
pop
loopne
mov
neg
pop
loopne
cmps
mov
jo
or
add
mov
call
cmps
(bad)
push
pop
test
cmp
cmp
aad
xor
stos
popf
aas
stos
ins
mov
xchg
jbe
loope
inc
push
lds
jge
outs
jo
mov
jmp
enter
xor
leave
int
dec
push
imul
xor
add
rcr
aad
jnp
call
inc
loope
mov
iret
cmc
aaa
movs
mov
(bad)
add
sahf
and
jno
ret
out
pop
(bad)
daa
mov
int
mov
and
nop
inc
out
cli
push
jnp
push
loope
jecxz
cmp
das
xor
push
punpcklbw
xlat
jmp
push
pop
lea
in
xchg
test
jns
push
ret
movs
xchg
inc
or
cmp
cmp
(bad)
mov
xchg
adc
lds
arpl
or
std
jmp
scas
shl
mov
xchg
sahf
xlat
xor
mov
mov
fnclex
rol
adc
stos
shr
add
in
sbb
lea
adc
aad
cli
push
pop
bound
mov
fiadd
test
mov
sub
mov
fucomip
(bad)
sub
pushf
add
shl
cmc
cdq
sbb
retf
and
cmp
adc
push
outs
ret
addr16
jecxz
lods
retf
sub
data16
or
add
cmp
movs
mov
imul
push
jmp
popf
outs
call
add
movs
mov
add
jae
lds
enter
mov
cmp
mov
jg
mov
pop
inc
inc
jno
push
test
dec
pop
cmc
pop
imul
sar
enter
les
mov
dec
pop
push
jl
and
or
inc
loope
arpl
xchg
jmp
and
or
mov
jo
push
jl
jbe
push
mov
push
mov
sbb
jnp
jns
mov
popa
adc
repz
mov
das
xor
dec
shr
fld
stc
test
outs
aad
nop
fs
movs
xchg
pop
sbb
cdq
movs
mov
idiv
stc
sub
or
call
fnstcw
push
pop
sub
aam
mov
xchg
mov
xor
xchg
mov
add
into
aam
(bad)
int
mov
mov
popf
sbb
jle
call
dec
jnp
and
leave
in
aaa
dec
mov
fxch
and
(bad)
retf
push
mov
inc
mov
dec
adc
jbe
scas
mov
and
leave
cmp
pop
mov
pop
call
pusha
icebp
sub
add
fmulp
sbb
das
sbb
lock
mov
out
mov
ja
lea
in
mov
ins
add
fsubr
popa
mov
pop
lods
mov
jbe
add
scas
push
shl
push
mov
and
sti
add
mov
jecxz
sbb
pusha
jmp
cdq
fld
loop
inc
ficomp
clc
imul
js
iret
ja
mov
adc
inc
and
push
lahf
sbb
push
inc
js
jne
outs
cdq
daa
aaa
xor
mov
out
pop
pop
ror
cmp
enter
add
cmp
mov
or
int3
jbe
inc
fwait
inc
jbe
fsubrp
mov
or
loop
push
pop
jge
lahf
fs
or
lods
nop
mov
call
lods
aas
(bad)
cwde
push
jecxz
inc
cmp
and
fistp
pop
out
sbb
call
xchg
pop
push
jp
dec
sub
xchg
dec
cmp
lods
xor
inc
test
imul
pop
ins
pop
pop
int3
jnp
lds
or
or
daa
and
push
ret
loop
add
mov
mov
mov
push
repz
in
das
pop
pop
cmp
outs
jb
push
and
outs
xchg
pop
adc
loop
js
test
(bad)
sbb
aaa
ror
or
or
or
cwde
mov
bound
and
mov
push
or
sbb
call
jns
mov
ret
xchg
imul
(bad)
mov
retf
cdq
ss
sar
lods
js
ret
mov
adc
les
repnz
pop
outs
mov
push
dec
aaa
out
inc
pop
iret
and
in
test
fsubr
test
jl
ds
jae
jnp
idiv
push
xchg
push
pop
cwde
les
cmps
mov
inc
aas
pop
loopne
sub
les
mov
ror
(bad)
adc
mov
pop
shl
je
movs
jp
rcl
lods
cmp
inc
adc
mov
mov
fmul
cmp
gs
adc
sete
inc
mov
xor
std
int
sbb
nop
in
cmp
in
xchg
mov
cs
push
sbb
jl
mov
mul
int3
add
mov
cmp
pushf
data16
jge
lock
xchg
gs
aad
jbe
push
int
stos
push
out
sub
movs
scas
clc
aas
dec
jb
je
dec
jg
das
imul
lods
adc
imul
or
ins
movs
jns
and
in
push
push
xchg
cmc
ret
push
or
lds
and
sub
adc
mov
fist
and
sti
or
and
mov
xchg
scas
cld
cmp
(bad)
icebp
sbb
add
sub
cs
or
ficomp
jmp
xchg
mov
loopne
jnp
outs
push
test
cmp
retf
inc
sbb
mov
jmp
out
mov
inc
in
push
push
mov
pop
hlt
fiadd
adc
pop
stos
stos
in
mov
fld
sub
sbb
jge
dec
mov
(bad)
dec
or
jns
dec
adc
or
sub
call
leave
adc
pushf
lods
fcom
jge
sub
or
dec
jecxz
aad
leave
pop
inc
push
xchg
stos
test
xchg
das
outs
dec
in
jmp
pop
or
and
mov
mov
lods
popa
mov
or
mov
add
lods
rcr
lock
cwde
jp
inc
int
add
neg
ins
pusha
ds
mov
int3
inc
mov
sbb
jg
mov
pop
push
stc
adc
jb
ds
cli
pushf
es
jge
dec
dec
hlt
cmps
call
pop
mov
gs
mov
sub
pop
xchg
jge
push
jecxz
aas
push
jle
and
mov
or
mov
pop
(bad)
pusha
sahf
mov
loope
xor
fld
mov
scas
imul
mov
adc
gs
loop
aas
fadd
xchg
stos
mov
not
adc
arpl
push
mov
add
(bad)
pop
scas
nop
std
mov
fs
xchg
(bad)
add
cmp
xor
inc
je
mov
lea
shl
clc
mov
add
fist
push
icebp
cwde
sbb
aaa
fwait
data16
sbb
clc
inc
mov
rcl
cdq
out
push
sub
jge
pop
sub
jo
fisub
mov
xlat
mul
sahf
jne
mov
push
mov
cmp
and
(bad)
clc
adc
jge
jnp
push
cmp
jge
and
jl
in
repnz
push
jp
xchg
dec
inc
pop
mov
test
jns
push
pop
xchg
push
sub
cmp
sub
and
xchg
dec
bound
inc
adc
xchg
arpl
and
call
aaa
mov
js
hlt
jmp
(bad)
test
(bad)
fbld
mov
mov
das
push
cs
jne
neg
repz
rol
push
cmp
sbb
cdq
add
es
aas
or
sbb
push
push
add
or
loopne
ds
fcom
ins
pop
std
enter
(bad)
mov
loopne
scas
js
xchg
cli
dec
test
sar
and
cld
and
and
sub
(bad)
stos
dec
sub
mov
fiadd
hlt
dec
mov
push
lods
push
xor
mov
sar
xchg
mov
std
push
or
add
and
sub
not
dec
mov
fs
test
cwde
or
out
xlat
fild
cld
(bad)
or
retf
mov
(bad)
mov
scas
pop
test
xchg
cmp
push
cmp
fld
ds
mov
fild
pop
cmps
sub
(bad)
mov
mov
pop
mov
pop
jae
mov
aam
stc
pop
jmp
pop
adc
jle
ja
mov
dec
inc
cmp
push
mov
ss
popf
mov
dec
lods
bound
pop
jmp
sub
test
popf
jle
jle
call
pop
fs
and
ds
fdiv
add
jo
mov
movs
lds
push
pop
jle
aas
jno
enter
shl
mov
xchg
jg
jnp
lea
mov
push
mov
in
rcl
mov
or
sti
jbe
cmp
sar
jecxz
mov
lods
sub
imul
inc
add
jge
outs
mov
mov
shl
nop
inc
aam
sbb
test
inc
dec
or
xor
fadd
mov
and
adc
popa
xor
jo
jns
ficom
jae
jmp
jl
or
in
imul
outs
mov
cmc
jmp
pop
mov
hlt
dec
push
fmul
or
(bad)
repnz
ds
scas
mov
push
mov
ins
xor
sub
dec
and
scas
(bad)
and
cmc
jmp
inc
inc
mov
imul
and
xor
xor
cmp
sub
lods
test
fsub
lds
cmp
pop
xchg
lods
sub
rcl
dec
adc
sub
das
imul
inc
aad
nop
lods
nop
or
pop
aad
test
test
je
ins
mov
icebp
mov
jge
lods
jecxz
in
sub
fsub
nop
cmps
imul
daa
push
loop
and
push
push
xor
or
pop
sub
rcr
mov
retf
in
retf
cmps
mov
mov
sub
ret
xor
hlt
stos
cmp
push
aad
pop
repnz
mov
(bad)
mov
push
aas
adc
jns
mov
test
test
mov
pop
icebp
daa
aas
jg
pcmpgtd
(bad)
movs
movs
lock
jne
cmp
adc
jecxz
ins
mov
call
pop
loope
movs
mov
mov
int3
mov
cwde
icebp
icebp
call
add
std
xchg
popf
enter
in
jmp
mov
or
dec
pop
or
test
and
aam
jnp
stos
(bad)
adc
inc
lock
fisubr
or
mov
inc
out
enter
adc
or
xor
nop
ja
in
cmps
out
xchg
cmp
cmp
and
cwde
(bad)
outs
outs
test
add
dec
rol
pop
popa
and
mov
sub
jb
add
mov
das
sbb
outs
or
mov
or
jle
push
pop
adc
(bad)
fild
fst
mov
xchg
adc
mov
popa
or
mov
into
popa
jp
iretw
pop
jg
push
fs
cmps
push
sub
mov
cld
xchg
outs
mov
dec
inc
push
adc
dec
popa
lods
jb
cmp
mov
and
scas
and
xor
adc
(bad)
scas
repnz
adc
neg
test
pop
int3
cmp
fidivr
sub
sbb
dec
inc
into
ins
imul
xor
jge
stos
jmp
sbb
inc
xlat
arpl
out
test
pop
fucomi
pop
mov
xchg
out
(bad)
aad
adc
call
lahf
in
les
add
xor
and
push
js
sar
adc
(bad)
push
xchg
sbb
mov
sub
test
jge
or
push
adc
mov
sahf
clc
test
es
dec
sub
xchg
aad
push
pop
adc
fs
(bad)
ins
and
(bad)
adc
in
mov
push
mov
sbb
mov
(bad)
not
jg
fimul
pop
xchg
dec
push
rol
mov
pop
mov
mov
sbb
xchg
sbb
dec
gs
jle
pop
cdq
mov
jmp
loop
push
add
and
fst
xor
(bad)
mov
push
inc
or
cmp
push
fwait
aad
inc
and
ret
scas
push
xchg
leave
cmp
in
mov
cmp
loope
adc
test
out
push
aas
into
cli
cs
lods
mov
and
popa
xor
nop
sub
inc
sar
mov
cmp
lahf
jge
je
(bad)
stos
pop
sub
or
mov
sbb
cmps
pop
sbb
xchg
scas
dec
sub
sub
xchg
inc
inc
mov
and
cld
xor
inc
ret
fwait
push
fidiv
or
out
inc
in
test
in
cmp
mov
es
fldlg2
cwde
xor
clc
sbb
jns
(bad)
mov
mov
or
or
test
les
hlt
mov
aas
adc
dec
and
push
mov
fdivr
sbb
ret
ja
mov
ss
or
push
mov
sahf
cmp
adc
fwait
xchg
dec
jb
mov
push
xchg
in
xchg
in
jne
fnstsw
cli
pop
out
xchg
push
xor
sbb
and
xor
pop
pop
cld
dec
cmc
mov
cmp
pop
adc
outs
ret
pop
adc
and
shl
xchg
inc
loop
enter
popa
xor
jg
mov
int3
push
aad
fiadd
xchg
sbb
and
hlt
dec
sub
ds
in
cmps
call
jecxz
test
fst
ret
mov
adc
mov
and
cmp
and
aad
xchg
retf
inc
fild
pop
jbe
mov
sbb
retf
push
add
shl
pushf
push
pop
imul
aam
arpl
les
nop
jmp
pop
aas
sub
lods
ret
push
add
pop
mov
idiv
push
fiadd
sahf
inc
push
xchg
add
mov
jge
call
jmp
gs
cmp
sub
popa
les
sahf
sub
xchg
out
loopne
adc
xchg
mov
test
jno
sbb
std
cs
xor
(bad)
out
out
mov
int
jecxz
xchg
fcomp
bound
and
push
sbb
push
iret
mov
iret
push
imul
popf
fstp
cmp
in
add
adc
lods
pop
(bad)
enter
out
icebp
lods
ror
leave
test
icebp
shl
adc
cmp
(bad)
jmp
cld
xchg
mov
mov
scas
xor
cmp
iret
mov
push
imul
adc
sbb
sub
push
xor
das
lods
stos
imul
dec
mov
xchg
retf
iret
mov
(bad)
push
adc
aad
leave
sub
in
mov
pushf
adc
and
mov
test
mov
(bad)
outs
sub
pop
fcomp
cmps
lods
push
mov
push
adc
cmp
dec
sub
pop
or
sbb
sub
dec
sub
pop
imul
lods
cmp
fsubr
shl
dec
les
sub
pop
fisttp
pop
das
mov
popa
xchg
les
push
jmp
jp
mov
mov
adc
mov
sbb
movnti
adc
cmc
mov
es
sahf
in
movs
xorps
jecxz
push
jmp
int
sbb
or
ret
dec
pop
pop
xchg
les
imul
out
cdq
hlt
lds
dec
in
add
dec
pushf
jp
int
adc
lods
retf
fdiv
xor
pop
adc
mov
mov
rcl
or
int3
rol
iret
movs
adc
inc
aas
bnd
mov
retf
and
inc
sub
dec
pop
fadd
stos
imul
push
ss
in
arpl
mov
call
imul
and
iret
mov
jns
enter
aam
ficomp
and
cmp
jg
icebp
or
jae
adc
jl
popf
add
mov
dec
cmps
in
lea
(bad)
mov
dec
pop
cmp
mov
imul
lea
inc
jg
sbb
mov
fild
(bad)
pop
and
push
loop
clc
pop
out
in
mov
xchg
dec
mov
xchg
shl
popf
dec
leave
xchg
movs
sub
mov
jg
mov
or
jg
js
xchg
and
in
cmps
add
ret
div
xor
je
sbb
sbb
fadd
sahf
repz
xchg
push
loop
push
mov
ins
mov
adc
xlat
jmp
mov
push
pusha
xchg
imul
rcl
adc
je
inc
and
sub
adc
pop
mov
cmp
push
mov
out
adc
and
xchg
sti
jo
hlt
(bad)
cmp
jg
(bad)
push
mov
jnp
sub
cmps
(bad)
cmp
(bad)
jle
pop
cmp
lahf
xchg
(bad)
aaa
(bad)
test
icebp
scas
xor
iret
add
inc
or
xchg
leave
call
in
fiadd
les
jge
cmp
fcom
leave
cmp
in
xor
popf
ja
cmp
push
or
lds
push
sub
mov
mov
mov
in
leave
(bad)
rcr
into
out
lds
frstor
pop
adc
xchg
into
(bad)
es
dec
out
xchg
clc
mov
shl
adc
aaa
test
inc
xchg
nop
neg
inc
jne
test
cld
jp
aam
sub
push
mov
mov
ins
add
push
pop
mov
and
cwde
sub
jno
rcr
mov
xchg
in
push
test
xor
je
cmps
inc
xchg
mov
and
das
mov
aad
jnp
ja
std
inc
inc
jmp
xor
ins
adc
outs
cwde
lds
fs
loopne
shl
jp
inc
and
push
xchg
jmp
dec
mov
out
mov
and
or
xor
pop
jmp
jl
fwait
jmp
xor
xchg
add
loop
push
mov
push
bnd
int
test
ret
add
mov
xchg
shl
loope
mov
lock
enter
adc
sbb
adc
lods
rep
arpl
xor
adc
ret
inc
pop
call
jbe
loope
pop
push
loopne
add
cmp
stos
loopne
push
add
pop
pop
out
fs
ficomp
(bad)
fistp
ja
cmp
loope
jne
mov
ja
stos
in
dec
push
das
mov
(bad)
cmp
dec
push
mov
push
cwde
loopne
sub
or
popf
xor
in
call
push
xor
cmps
aad
(bad)
jg
cmp
mov
repnz
fdivr
mov
and
xor
leave
sbb
pop
push
adc
loope
inc
mov
sub
mov
xor
and
sbb
and
mov
call
ss
mov
jmp
pop
xor
mov
xchg
push
lahf
and
xor
sbb
imul
das
fdiv
bound
push
xor
test
push
stos
pop
and
xchg
xchg
(bad)
cmp
jg
ss
aam
jp
sbb
ret
jo
iret
mov
mov
jp
(bad)
fwait
loope
lods
mov
mov
jne
inc
pop
mov
fld
xor
(bad)
sub
les
popa
inc
push
mov
nop
cmp
jo
in
xchg
inc
dec
cmp
dec
out
int3
and
cli
or
adc
arpl
call
jno
cmp
fs
int
cdq
bound
and
test
(bad)
icebp
sbb
inc
mov
cmps
or
jbe
jp
pop
dec
jl
fdivrp
idiv
fucomp
int
mov
cmp
ret
ret
dec
repnz
out
scas
push
sbb
stos
loopne
adc
mov
adc
int3
dec
icebp
call
test
pop
jmp
enter
mov
mov
cmp
test
popf
retf
ds
shr
sti
loopne
mul
adc
adc
mov
sub
sub
cmps
pop
pop
xlat
pop
and
add
dec
and
jle
in
xchg
into
mov
sub
in
fdiv
jno
jle
cmps
add
out
mov
lock
adc
and
setns
in
lock
movs
push
cld
adc
mov
sti
jnp
rcl
(bad)
(bad)
cld
mov
popa
dec
xor
(bad)
xlat
or
sbb
cmps
inc
xor
jne
mov
adc
jnp
cmps
or
jmp
xor
jecxz
loop
retf
rcr
mov
leave
mov
sar
fdiv
mov
mov
sub
fcom
ins
jmp
mov
adc
jecxz
xor
pop
pop
aad
call
repnz
iret
mov
mov
add
sbb
fs
fnsave
sbb
popf
in
(bad)
xor
mov
xchg
adc
outs
retf
mov
loop
adc
jecxz
mov
mov
icebp
mov
xchg
loop
mov
mov
test
test
jmp
add
popf
cmp
pop
xor
imul
or
jp
(bad)
call
pop
int
cdq
ss
inc
adc
xchg
mov
out
hlt
(bad)
call
mov
sbb
dec
jmp
push
(bad)
std
data16
mov
in
enter
and
in
cld
sbb
out
sbb
push
jmp
(bad)
pop
jmp
pop
inc
push
sahf
loope
dec
call
push
adc
call
jno
je
cmp
mov
data16
and
div
lahf
or
ins
fstp
mov
shr
les
hlt
jle
iret
(bad)
enter
mov
das
icebp
mov
je
xchg
shl
mov
mov
mov
nop
push
jge
stos
out
cwde
mov
div
jns
repnz
in
add
fwait
and
cmp
mov
xchg
dec
lds
pop
scas
sahf
cmps
sbb
inc
jnp
push
jnp
push
push
push
add
hlt
mov
inc
mov
popa
lods
rol
hlt
mov
push
jecxz
(bad)
push
sti
sbb
inc
jp
inc
dec
pop
inc
loope
dec
cmp
adc
inc
movs
push
int
call
cmp
add
loop
in
scas
and
movs
sbb
test
ret
sbb
inc
mov
dec
in
retf
repz
sub
pop
cwde
nop
push
push
icebp
hlt
lock
std
dec
shl
ret
fnstsw
lea
test
pop
std
pusha
add
add
pop
pop
data16
inc
dec
dec
cmp
into
push
scas
mov
nop
shl
xor
ja
push
jns
pop
sub
test
fisttp
pop
mov
shr
outs
mov
cmp
aas
cli
arpl
cmps
idiv
and
iret
and
in
push
dec
sbb
dec
dec
addr16
lds
sbb
enter
in
mov
cmp
(bad)
fistp
pop
loopne
add
popf
cmps
xor
loope
ret
inc
cmc
sub
sbb
cmp
sbb
dec
mov
cmp
push
add
push
xchg
daa
xchg
inc
sbb
fcomp
or
adc
mov
ret
rep
sbb
mov
inc
mov
push
loop
js
xchg
sbb
mov
mov
xor
pop
cli
(bad)
pop
push
or
test
js
sub
jmp
jb
mov
icebp
xor
cmps
or
mov
repz
out
aas
mov
clc
mov
aam
add
xchg
popa
je
mov
test
fiadd
cmps
sub
ja
xor
add
cdq
mov
or
sub
lea
inc
retf
ficomp
(bad)
adc
mov
jg
push
mov
sbb
mov
cwde
shl
je
jmp
jae
sbb
out
jno
out
xlat
cmps
inc
int
add
mov
dec
add
pusha
xchg
push
mov
popf
mov
sti
movs
cmp
retf
pushf
popf
add
mov
int
clc
push
call
ss
call
(bad)
ins
iret
mov
popa
outs
hlt
sbb
mov
pop
fsubr
nop
and
pop
and
sub
dec
or
mov
retf
movs
vmovlps
fsub
cmc
jne
pop
shl
jae
mov
mov
ja
lods
lods
jbe
sbb
add
repnz
xchg
jp
pshufw
cmp
mov
ja
inc
daa
mov
xchg
lods
or
mov
xchg
loope
call
pop
fidivr
(bad)
daa
mov
xchg
jns
push
or
sub
jns
icebp
pop
xlat
mov
dec
push
fdiv
(bad)
mov
push
dec
jmp
dec
out
ror
push
aaa
in
add
loope
out
xlat
pop
adc
sub
add
popa
in
test
mov
into
ret
sbb
jp
in
stos
mov
(bad)
stc
dec
adc
mov
cmp
dec
movs
jne
psrlq
mov
mov
adc
in
daa
imul
inc
sbb
and
stc
or
jmp
out
sbb
xor
add
loope
adc
sub
adc
xchg
jmp
int
shl
inc
dec
jg
clc
xchg
pop
mov
mov
(bad)
fcmovu
retf
xlat
cli
int3
jns
xor
jmp
pop
popa
mov
add
rcr
sbb
xchg
xchg
pop
sbb
inc
pop
or
test
es
cmp
and
les
or
cld
pop
(bad)
ins
and
dec
or
(bad)
xchg
out
or
lods
out
xchg
into
movs
cld
cmps
cmps
in
pushf
xchg
adc
sub
or
dec
sub
pop
ret
imul
sbb
pop
mov
push
retf
lods
mov
loop
cmc
(bad)
cwde
cmc
jns
into
push
nop
call
(bad)
in
push
pop
movs
fst
and
stos
xchg
sar
push
scas
adc
pop
test
mov
cmp
adc
jb
dec
in
jg
jbe
mov
(bad)
loopne
out
(bad)
fsubr
daa
aam
or
aad
shr
mov
xchg
pushf
sub
jbe
call
into
(bad)
mov
jo
jle
mov
aad
ficom
jg
int3
add
add
or
mov
cmp
outs
and
sub
jbe
shl
mov
adc
pop
loope
add
lods
rol
jp
adc
repz
les
shr
xchg
pop
cwde
push
dec
adc
icebp
cmc
arpl
aam
jmp
out
mov
ficom
call
(bad)
aaa
add
push
and
les
add
ds
and
jb
addr16
xchg
and
sbb
test
loopne
mov
jne
fs
sar
(bad)
mov
cmps
pop
mov
cmc
jmp
sub
lods
repz
loopne
xchg
dec
and
or
dec
inc
sub
cmp
xchg
jb
fisubr
mov
fwait
cmc
xor
inc
mov
lods
mov
sub
xchg
adc
fnsave
imul
lods
rcl
jnp
test
ins
mov
(bad)
jbe
pushf
and
jmp
sbb
inc
(bad)
repnz
add
sbb
push
popf
out
and
sbb
mov
inc
mov
cmp
xor
mov
jmp
shr
in
aaa
jae
add
sbb
jmp
xor
pop
test
cmps
push
jb
inc
pop
leave
xor
je
sub
imul
jmp
pop
lods
mov
pop
dec
xor
jle
sbb
push
xchg
inc
dec
adc
repz
movs
xchg
enter
ins
daa
repnz
(bad)
inc
xchg
sub
pop
sbb
jge
jae
xchg
jge
rcr
in
dec
retf
xor
pushf
shr
mov
lock
int3
ret
aas
mov
pusha
dec
mov
jnp
sub
lea
adc
adc
aad
pop
ins
mov
leave
cmp
xchg
push
repz
adc
(bad)
push
int
(bad)
xchg
sahf
inc
mov
inc
or
mov
imul
sub
pop
fsubrp
enter
pop
les
add
and
sti
cmp
pop
arpl
out
or
int3
scas
mov
or
aas
inc
sub
xchg
jge
out
data16
mov
test
fnsave
je
add
cmps
sub
mov
adc
out
js
ds
sbb
out
sub
and
inc
cmps
sahf
mov
bound
inc
rol
retf
mov
fcmove
jno
cmp
in
out
or
inc
cmp
sbb
ror
xchg
rcl
aas
push
ja
in
aas
inc
cmp
inc
xor
ficomp
(bad)
jb
push
add
aaa
fsubr
jmp
call
mov
mov
lock
inc
arpl
inc
jle
push
in
out
sbb
mov
pop
or
movs
gs
adc
sub
adc
dec
sub
sub
aaa
outs
push
cmps
and
outs
pop
cs
pop
cmps
mov
or
out
cmp
sub
jb
mov
jns
jmp
retf
shl
aaa
ins
fnstsw
je
out
jmp
xchg
and
cmc
adc
sbb
sbb
mov
cmp
sbb
in
xor
dec
repnz
pusha
pushf
or
dec
ror
push
jne
jne
sub
jns
call
jne
dec
push
mov
data16
mov
in
dec
inc
(bad)
jmp
cmps
mov
(bad)
enter
mov
xor
aad
xor
sub
or
frstor
jb
sbb
jno
mov
rcr
cdq
addr16
jmp
lahf
adc
mov
imul
cld
jo
movsx
or
test
enter
sahf
stos
mov
push
push
and
add
scas
adc
mov
(bad)
loopne
sar
xchg
xor
pop
imul
add
xchg
push
jo
out
mov
rdpmc
push
or
sbb
jmp
aam
lods
adc
jae
sub
outs
aam
popf
nop
inc
xlat
cmps
stos
fidivr
cli
(bad)
dec
sar
push
in
add
push
nop
lahf
bound
test
into
das
adc
pusha
dec
arpl
inc
xchg
sahf
xor
stc
dec
xor
mov
push
ds
dec
sbb
shr
xor
popf
mov
xor
stos
inc
xchg
fadd
jecxz
xchg
dec
into
rcl
xor
popa
mov
repz
jne
stos
inc
add
in
cmc
push
jecxz
mov
adc
jbe
nop
xchg
inc
mov
sbb
rcr
fbld
lods
js
cmp
pop
cld
mov
loopne
fnstenv
mov
jecxz
fadd
fwait
mov
pop
jecxz
pop
mov
cmp
mul
outs
rcr
inc
jmp
xor
add
cli
xor
push
inc
clc
sbb
repz
int
fcmovnbe
xchg
mov
fistp
push
gs
adc
cmps
loope
stc
mov
adc
outs
xchg
xchg
ficom
rcr
retf
mov
sbb
mov
sub
in
idiv
jo
dec
and
adc
pop
loope
test
mov
xchg
jne
imul
test
mov
push
jnp
push
mov
addr16
and
mov
loopne
sbb
fmul
jbe
adc
in
pop
jne
imul
inc
or
stos
test
aad
sbb
push
adc
(bad)
mov
jo
imul
dec
bound
or
jnp
jae
out
cmps
cmp
xor
pop
mov
jge
stos
and
in
ds
dec
imul
cmp
mov
or
hlt
fbstp
and
imul
push
jmp
cmp
push
pop
inc
jge
jns
inc
sti
lock
inc
xchg
sub
dec
out
pushf
sub
bnd
call
push
sub
lods
push
push
jp
push
adc
out
scas
dec
mov
(bad)
xor
fstp
pop
mov
cmp
dec
inc
sub
sub
and
mov
pop
adc
inc
fwait
lock
in
mov
lahf
add
mov
push
inc
out
or
in
stc
pop
mov
ds
icebp
sbb
stc
pop
pop
sbb
mov
and
adc
mov
or
out
xor
test
fst
sahf
shl
push
mov
ds
loop
and
push
add
mov
push
inc
dec
push
scas
inc
loop
data16
cli
sbb
aad
push
bound
mov
les
(bad)
jl
daa
cmp
or
push
test
(bad)
cmps
sub
jge
jl
jmp
xor
dec
sbb
pushf
cmp
loop
hlt
fild
test
aad
jbe
cs
mov
ret
mov
xchg
xchg
mov
mov
add
(bad)
mov
add
sbb
xchg
cmps
aad
rcl
out
scas
jmp
ss
fsubp
adc
scas
jno
in
std
and
lock
adc
add
push
sbb
lds
clc
add
push
leave
xchg
push
push
mov
data16
repz
outs
in
lds
mov
xchg
sbb
and
jge
mov
dec
jmp
outs
int
dec
cmp
rcl
in
or
pushf
outs
sti
mov
test
fwait
pop
sbb
js
mov
xor
pop
fcmove
cwde
mov
hlt
mov
ja
je
mov
mov
mov
out
xor
push
gs
mov
xchg
test
inc
aam
jmp
dec
sar
push
and
in
ins
pop
mov
inc
rol
stc
jmp
xchg
xor
push
xchg
fxam
jbe
ds
xor
pushf
cmc
and
xchg
test
jo
sbb
push
sahf
jl
mov
dec
push
movs
pop
inc
gs
repz
test
mov
bound
shl
in
call
cmp
cmps
jne
mov
pushf
nop
shl
dec
pop
xchg
(bad)
outs
ja
fisub
cmp
or
or
loopne
sbb
sar
movs
pop
ret
inc
sub
aam
push
nop
fcmovnbe
aas
xor
cmp
ret
(bad)
mov
scas
xor
sub
rol
add
mov
inc
outs
leave
jnp
jecxz
inc
ret
pop
clc
mov
pop
out
inc
test
mov
imul
and
cmp
psrlq
cmp
cmp
out
aaa
sbb
jmp
push
scas
daa
rcl
push
inc
xor
iret
out
imul
stos
push
pushf
not
in
fs
or
mov
mov
push
sbb
inc
cs
xor
pop
mov
sbb
(bad)
add
dec
adc
mov
in
pushf
sub
sub
pop
mov
ss
lea
nop
xchg
fwait
sbb
out
cmc
mov
cdq
movs
scas
xor
repnz
sbb
popa
aas
sbb
inc
cdq
loopne
test
pop
scas
sbb
cs
sub
lods
(bad)
leave
aas
pop
jb
jp
aam
mov
push
and
cmp
and
das
ret
cmp
sub
mov
js
rcr
sbb
pop
scas
xor
je
std
pop
movs
shl
daa
push
sub
movs
inc
dec
enter
daa
inc
popf
aaa
js
cmp
pop
lea
js
fcmovnu
or
pop
shr
push
push
xchg
mov
push
in
inc
lock
mov
in
mov
adc
pushf
loop
aaa
das
sbb
in
fidiv
ds
jnp
add
push
fwait
push
xchg
pop
fstp
adc
mov
push
imul
call
mov
pop
aaa
jecxz
or
je
in
(bad)
leave
sahf
sbb
mov
ret
add
cmp
lahf
inc
jl
fucomp
fidivr
pop
xor
xchg
cmp
pop
sahf
ja
(bad)
fmul
fs
or
(bad)
hlt
in
mov
jp
push
and
inc
mov
nop
lods
out
lds
mov
mov
mov
sub
xchg
mov
cmp
dec
xchg
or
adc
out
lock
in
cld
mov
inc
push
jge
push
clc
adc
mov
and
ret
test
dec
mov
mov
and
xor
imul
pop
mov
inc
je
xchg
inc
(bad)
ins
add
mov
cld
(bad)
push
sbb
adc
inc
xchg
mov
sub
mov
sbb
add
and
jp
xchg
and
sahf
or
sub
arpl
xor
sahf
das
bnd
mov
sub
dec
adc
sbb
fs
sbb
lock
mov
mov
or
ror
jo
gs
pop
pop
ror
jae
cmp
or
(bad)
xor
(bad)
jmp
jno
mov
fisubr
jnp
int
jg
cwde
fist
pop
mov
js
jnp
js
gs
mov
pop
xor
jo
adc
add
cld
retf
lods
mov
rcl
jb
xchg
mov
xchg
stos
loop
mov
xor
push
fnstcw
(bad)
scas
push
xor
daa
jecxz
ins
fwait
(bad)
push
cmp
popa
ss
jbe
inc
sub
jl
sahf
pusha
jg
repnz
jns
cdq
scas
fs
popa
xchg
stos
(bad)
cmp
mov
jecxz
and
mov
pusha
outs
jmp
mov
jle
xor
xor
test
(bad)
cmps
retf
fistp
(bad)
ds
inc
hlt
mov
lahf
dec
adc
mov
movs
xchg
cli
xor
sbb
and
call
sahf
lds
xor
out
jae
repnz
adc
fucomi
jae
gs
aas
imul
mov
stc
or
movs
stos
mov
lock
or
cmps
arpl
(bad)
leave
jno
mov
data16
or
in
aas
push
mov
pop
pop
aaa
xchg
adc
sbb
cs
imul
in
sbb
inc
dec
call
call
test
cmp
clc
test
daa
fld
xchg
gs
out
push
std
sbb
lds
std
adc
shl
adc
scas
outs
outs
(bad)
mov
jne
cwde
pop
fdiv
xor
(bad)
ror
shr
in
call
mov
test
mov
bound
add
pusha
(bad)
lahf
call
adc
retf
adc
sbb
clc
lds
lea
mov
inc
pop
xchg
lods
push
stos
out
gs
pop
lods
mov
pushf
dec
add
cld
addr16
push
pop
xchg
sbb
lahf
sub
jl
push
cs
mov
call
cdq
out
repnz
aas
cmps
psadbw
jge
in
cmps
or
and
pop
mov
std
(bad)
out
and
push
sbb
aad
push
cdq
movs
scas
xor
jg
or
mov
ror
dec
jbe
out
pop
cmp
fs
mov
fsub
mov
sub
loop
sti
dec
push
movs
mov
fs
and
adc
push
sub
sbb
je
mov
jle
xor
jo
pop
out
loope
int
test
add
es
xor
inc
lea
dec
aas
mov
or
stc
daa
push
mov
call
xchg
ins
jno
push
cs
adc
nop
mov
push
test
test
leave
push
stc
push
pop
in
or
test
jae
out
dec
into
in
pushf
lds
cmp
push
jne
xor
cmp
test
int3
movs
xor
mov
jns
mov
mov
adc
ins
(bad)
xchg
jo
push
add
xor
inc
mov
call
je
xchg
inc
or
mov
sbb
adc
pop
xchg
cmp
add
mov
in
or
addr16
sub
sahf
dec
sub
stc
mov
aad
mov
mov
movs
jnp
sub
jo
ret
mov
stc
cmc
mov
loop
repnz
jp
out
repz
aas
aas
call
daa
xchg
lock
pop
ss
lahf
(bad)
(bad)
sti
or
in
sbb
push
mov
push
jb
fistp
sub
fild
dec
ret
lods
jo
das
xchg
pusha
inc
(bad)
push
jge
cli
push
jecxz
add
jmp
dec
int
jnp
xor
xlat
fadd
out
adc
stos
sbb
out
mov
add
cmp
test
into
xchg
bound
clc
jnp
mov
push
or
enter
out
push
pop
sub
fimul
loop
(bad)
retf
sti
jmp
fst
int3
or
cmp
ins
ins
aam
lahf
sub
adc
test
lods
jbe
ret
in
mov
push
call
push
and
(bad)
ss
or
add
push
(bad)
stc
aaa
jnp
movs
repz
int3
fwait
or
lods
xchg
pop
icebp
xor
fist
xor
sbb
test
scas
sub
push
cmp
iret
call
xchg
push
aaa
std
jo
dec
pop
pushf
(bad)
adc
out
lods
sbb
mov
xchg
xchg
rcr
loop
xor
add
loope
mov
xchg
mov
je
mov
sub
pop
mov
jns
loop
push
adc
adc
jmp
xor
add
js
or
sti
data16
jae
pop
cmp
pop
inc
sbb
dec
and
pop
mov
push
out
call
cmps
lods
and
pop
xchg
adc
cmp
shl
push
les
in
rcl
push
call
out
pusha
std
ret
dec
sbb
adc
mov
add
mov
lds
sub
or
shr
pop
out
sti
push
fisttp
dec
inc
shl
mov
ins
aad
mov
mov
(bad)
rcr
mov
add
mov
mov
rol
sub
push
dec
lods
sti
loop
std
out
int3
shr
shl
inc
in
or
daa
int
dec
or
fs
fs
(bad)
dec
push
jbe
in
es
rdmsr
les
xor
pop
dec
popa
fnstenv
clc
mov
popf
cmc
arpl
shl
mov
pop
xor
xchg
push
and
push
aas
xchg
jmp
fisub
(bad)
jmp
cmp
sti
movs
jae
inc
cmps
shr
push
and
sub
mov
mov
mov
dec
icebp
push
dec
scas
cmp
fldcw
cld
(bad)
add
fwait
add
add
inc
fwait
pop
imul
cli
push
add
xchg
inc
push
inc
mov
mov
movs
pop
mov
jmp
stc
and
fcom
pushf
push
leave
inc
add
jle
les
aas
sbb
cli
dec
outs
ret
add
lds
mov
push
outs
call
mov
lods
inc
retf
clc
sub
lock
pop
mov
inc
scas
pop
pop
sub
leave
sbb
cmp
mov
cld
and
(bad)
packuswb
icebp
push
fisubr
pop
and
jp
mov
push
not
retf
inc
cmp
sbb
es
mov
repnz
js
pop
pop
sbb
or
or
xchg
pop
mov
dec
out
or
push
and
jmp
daa
scas
dec
jb
sbb
in
stc
jns
in
push
mov
sar
fnstenv
dec
push
pop
mov
dec
stos
xchg
mov
sbb
jmp
repz
xor
ret
sub
in
ret
xchg
out
xchg
mov
loope
push
call
pop
test
mov
dec
popa
test
fwait
fwait
push
cmc
mov
out
inc
ins
or
add
mov
pop
mov
mov
push
push
scas
add
push
stos
jnp
fisttp
push
push
movs
mov
mov
pop
pop
pop
inc
repz
call
(bad)
retf
das
sub
retf
in
jle
pop
clc
fcom
mov
mov
add
dec
dec
xor
sbb
das
xchg
and
push
popa
add
mov
hlt
sub
mov
xchg
xor
fisubr
(bad)
jle
iret
stos
xor
jae
lds
push
sub
cmp
dec
add
into
sub
repnz
sub
dec
out
sbb
add
in
dec
loopne
mov
pop
ds
xchg
cmp
imul
add
xchg
inc
pop
xlat
mov
cdq
add
sti
jp
into
add
inc
xor
jg
shl
arpl
scas
movs
in
mov
mov
mov
ss
xchg
or
add
cdq
dec
push
mov
sti
inc
not
nop
cmp
outs
and
in
dec
inc
stc
cmp
adc
adc
dec
(bad)
cli
inc
or
(bad)
adc
push
sub
sti
js
ins
adc
mov
xor
dec
leave
and
jns
add
movs
scas
cmp
ficomp
test
inc
jecxz
mov
pop
ins
movs
mov
inc
inc
mov
std
push
fcomi
xchg
mov
mov
fsubr
sub
cmps
xchg
cmp
std
push
movs
sahf
inc
mov
xor
(bad)
ins
stos
fnstenv
shl
imul
imul
jmp
cmps
ret
retf
add
call
mov
(bad)
mov
cmp
cmp
cmps
push
xchg
je
push
mov
out
xor
sub
dec
in
shr
hlt
mov
adc
mov
cwde
stos
cmp
std
jp
cwde
(bad)
jae
test
dec
cmp
ds
add
xchg
shl
pop
test
xor
and
jne
enter
mov
test
popa
test
push
pusha
mov
push
xchg
mov
daa
cli
and
ins
cmp
in
cmps
cmps
test
(bad)
rcr
mov
addr16
jno
cmp
out
neg
xor
inc
sbb
dec
popa
data16
or
cdq
xchg
fwait
fwait
sbb
ror
pop
clc
jecxz
daa
loopne
arpl
fld
xor
dec
mov
adc
xlat
jp
jge
daa
mov
repz
push
cdq
jno
loope
bound
lds
hlt
movs
iret
sub
lods
icebp
enter
stos
bnd
fadd
movs
add
dec
inc
fdivr
mov
or
mov
imul
and
adc
jmp
push
fcom
hlt
sbb
sub
mov
lods
(bad)
cmp
add
sar
outs
dec
xor
and
and
xlat
(bad)
mov
lods
into
push
clc
ret
push
inc
push
pop
shr
rcl
xor
scas
mov
hlt
rcr
dec
lock
iret
outs
lock
mov
push
jmp
mov
ffreep
xchg
dec
mov
push
adc
into
cmps
mov
(bad)
xor
out
cmc
je
add
cmps
retf
adc
mov
lock
mov
sub
in
sbb
dec
and
sub
mov
stos
mov
inc
and
push
out
pop
andnps
pop
cmp
jmp
sub
test
fstp
inc
adc
cmp
or
repz
ret
in
mov
inc
std
retf
shl
pop
lahf
cmps
outs
pop
mov
leave
js
pop
mov
pcmpgtb
xor
loop
sbb
shl
leave
adc
das
aam
inc
loopne
or
jmp
ficomp
stos
out
fisttp
xchg
lock
add
xor
lods
int3
jg
div
dec
loopne
pushf
mov
addr16
outs
mov
pop
push
and
ins
inc
jmp
pusha
popf
int3
shl
pop
xor
js
cli
mov
adc
shl
pop
aas
ficom
mov
daa
push
outs
pop
(bad)
in
bound
fs
repnz
xchg
int3
xchg
in
mov
xchg
mov
aam
shl
sbb
push
inc
lods
xchg
mov
fdivrp
mov
mov
mov
inc
fisub
ret
sbb
out
sbb
add
xchg
xor
jne
lds
mov
xchg
fsubr
cmc
and
mov
in
mov
into
sti
jmp
pop
pop
iret
retf
push
hlt
bound
dec
push
fstp
jp
push
pushf
jmp
mov
inc
gs
(bad)
in
stos
mov
out
kunpckbw
xor
in
in
out
(bad)
leave
arpl
fdivr
rol
cdq
rcl
xor
xor
sbb
dec
shr
mov
mov
ret
inc
mov
dec
jbe
(bad)
sub
addr16
(bad)
mov
push
iret
add
popa
cmps
cld
add
xchg
jns
and
enter
jne
in
pop
inc
retf
sbb
sahf
push
cs
or
mov
mov
mov
mov
je
inc
jecxz
cs
mov
xor
jg
test
pop
or
aas
jne
mov
ins
scas
outs
popa
sub
stos
cdq
ror
adc
mov
and
call
add
fucompp
fwait
xchg
ds
adc
shr
or
repnz
pushf
(bad)
sbb
popf
pop
cmp
inc
in
fwait
cmp
cld
dec
cdq
mov
sahf
sar
xchg
and
jp
ins
xor
xlat
data16
pop
xchg
fadd
lds
dec
mov
sbb
fwait
clc
push
sbb
bound
xchg
mov
(bad)
xchg
(bad)
in
je
movs
jne
aad
iret
or
xor
cmp
das
mov
lock
xor
rol
ror
and
dec
aam
loop
scas
cdq
repnz
add
inc
ret
add
xchg
rcr
pop
scas
push
stos
adc
mov
fadd
and
fcom
lea
jle
fwait
test
mov
and
xor
aad
cli
mov
int
aas
mov
js
(bad)
adc
cdq
gs
mov
mov
inc
iret
push
daa
push
push
inc
push
movs
ds
ja
call
adc
idiv
test
sbb
repnz
cmp
out
pop
xor
cmps
xor
or
inc
xor
xchg
das
fld
push
adc
xchg
gs
jl
adc
cmp
es
les
(bad)
retf
test
or
mov
sbb
out
and
cli
ins
js
stos
outs
adc
adc
xchg
cdq
inc
and
cmp
add
test
les
add
sbb
mov
les
loope
mov
repz
aas
adc
dec
mov
outs
jbe
in
jp
inc
mov
sbb
repnz
inc
or
push
lods
lds
dec
mov
fild
bnd
lock
ror
xor
hlt
push
fistp
push
mov
dec
mov
fwait
iret
push
inc
imul
mov
mov
pop
sbb
stos
cwde
push
out
movs
or
(bad)
cld
push
add
fimul
test
xor
add
and
mov
mov
jl
mov
add
mov
test
xchg
fucomp
int3
sbb
add
fisttp
retf
mov
lock
pop
sub
add
outs
clc
out
sar
jnp
and
cld
pop
sub
pop
pop
dec
sub
repnz
movs
xchg
pop
push
popa
outs
adc
lods
shl
adc
retf
outs
xchg
jbe
adc
test
sub
pop
mov
cmp
lds
cmc
stos
data16
and
jnp
js
sub
pop
out
data16
push
clc
nop
adc
mov
call
xchg
xchg
(bad)
in
mov
sti
rol
int
fs
movs
or
test
or
jecxz
lods
adc
or
loopne
imul
retf
push
xor
push
add
cmp
fcom
inc
outs
push
ret
fistp
fistp
and
dec
mov
jecxz
push
jb
or
popa
jmp
mov
aas
bound
xor
nop
out
imul
ficomp
aaa
xor
sub
xchg
push
adc
inc
and
gs
int3
or
fisubr
leave
mov
push
mov
or
push
pop
xchg
fmul
add
or
ret
add
xchg
(bad)
pop
push
mov
retf
into
mov
lahf
push
xchg
aaa
xor
pushf
push
jb
cmp
adc
dec
hlt
xchg
aam
pop
retf
jmp
mov
jo
js
fadd
sbb
pop
xchg
mov
jo
lahf
sub
push
xchg
sbb
aas
push
pop
mov
inc
or
jno
adc
out
call
hlt
xchg
(bad)
lock
(bad)
pop
imul
mov
(bad)
cmp
mov
cs
nop
xor
jmp
adc
push
cmp
enter
jb
sti
(bad)
push
sbb
call
or
pushf
cmp
retf
ins
mov
xchg
xor
call
adc
nop
popa
in
aas
dec
cmp
test
mov
retf
push
call
or
es
mov
jmp
mov
adc
mov
pop
dec
call
xor
sbb
scas
cmp
and
cmp
je
int
or
dec
lods
jbe
pop
and
sbb
xor
movs
mov
push
inc
adc
(bad)
js
push
or
adc
lods
pop
ss
ins
jmp
and
pop
(bad)
sar
sub
xor
es
mov
cs
cmp
jmp
fild
(bad)
in
mov
mov
call
fadd
pop
daa
out
(bad)
test
jge
jp
mov
inc
mov
popf
dec
dec
mov
mov
inc
cli
fcomp
idiv
fsubr
js
xor
jp
mov
mov
(bad)
loope
pusha
push
arpl
cmc
cs
pop
push
sbb
mov
inc
mov
xor
in
out
mov
daa
das
jle
xchg
inc
mov
mov
push
sub
add
icebp
cwde
fdivr
or
jns
sbb
xchg
add
rol
cmp
jl
add
rol
enter
adc
mov
xor
mov
push
pop
mov
sbb
fldl2t
pop
dec
mov
adc
dec
mov
repz
xor
fisttp
cmp
daa
cli
mov
in
xchg
mov
and
dec
shr
and
not
in
or
lods
stos
cmp
mov
push
or
xor
or
or
xchg
shl
xor
out
out
sbb
inc
scas
(bad)
int
sub
add
call
jmp
adc
mov
xchg
iret
ret
in
aam
or
mov
mov
or
loopne
cli
aas
push
ja
xor
or
sub
std
add
mov
cs
popf
nop
inc
not
enter
aad
imul
popa
adc
fimul
inc
push
mov
clc
inc
and
std
loope
dec
out
je
sbb
adc
pavgw
sar
lahf
cmp
push
xchg
(bad)
pop
mov
mov
hlt
lock
pop
mov
mov
stc
jo
sahf
js
mov
dec
inc
push
sbb
inc
push
call
(bad)
clc
push
mov
push
or
mov
or
add
(bad)
mov
sbb
inc
aaa
sbb
xor
outs
stc
ja
push
pop
cdq
fdiv
dec
xchg
and
addr16
sbb
xor
jo
in
mov
mov
hlt
sbb
push
cld
test
dec
cmp
push
shl
cmps
adc
push
je
pop
dec
inc
and
(bad)
test
sbb
push
jns
pop
xchg
stos
add
dec
arpl
inc
and
jmp
jno
push
push
xchg
cmc
int
jnp
(bad)
sti
fcom
pop
bound
dec
sub
dec
int3
jne
mov
gs
dec
arpl
xchg
loopne
dec
xor
fcmovbe
outs
ror
push
je
push
or
shl
add
sbb
jecxz
push
xor
xchg
lea
test
repz
xchg
rol
movs
(bad)
ins
movs
shr
sbb
movs
call
into
lods
sub
jne
cmp
(bad)
not
cwde
xor
adc
int
lock
and
mov
adc
cld
inc
stc
scas
ret
mov
dec
sbb
inc
mov
and
icebp
mov
mov
call
sub
jne
ja
lahf
push
mov
sub
fmul
ins
dec
mov
ret
ins
xchg
or
xchg
ds
(bad)
push
add
inc
xlat
mov
not
jbe
(bad)
jmp
enter
jmp
shr
inc
add
jge
xchg
inc
mov
loopne
xor
inc
mov
xchg
jne
inc
mov
xchg
das
mov
aam
xor
out
out
neg
sub
add
loope
das
sub
arpl
mov
push
xchg
inc
inc
pop
jns
cmc
push
stos
cs
repnz
adc
pop
iret
rcr
scas
cdq
sbb
sub
mov
mov
mov
mov
push
push
xchg
mov
xchg
shl
pushf
cli
ss
and
retf
xchg
cmc
dec
fbld
test
cmp
jae
jecxz
popf
nop
jmp
cmp
or
cld
mov
sahf
fwait
adc
mov
cld
sbb
mov
test
cmps
fwait
(bad)
push
ins
cmps
data16
and
es
and
xlat
inc
jbe
not
loop
or
iret
mov
jl
cli
and
dec
lock
and
stos
cmp
jle
mov
and
fcomip
pop
and
sub
ss
mov
sbb
cs
adc
(bad)
cld
jmp
test
mov
or
movs
xchg
push
test
cmps
mov
adc
or
push
and
cmp
enter
sub
leave
fld
adc
or
aas
jecxz
sub
js
and
not
ins
ins
retf
ins
mov
sub
xchg
add
ja
pop
and
pop
call
retf
sbb
ins
lock
cmps
call
and
shr
push
ret
cmp
(bad)
push
add
pushf
jb
jbe
mov
pop
(bad)
out
lock
inc
sub
out
imul
mov
adc
repnz
pop
adc
pop
mov
mov
xchg
dec
dec
cmps
add
add
nop
jno
or
cs
push
pop
mov
fst
fisub
cmp
sahf
jecxz
xchg
adc
xor
jnp
mov
adc
stos
int3
retf
xchg
push
cld
call
pop
cld
xor
and
xor
sbb
loope
inc
pop
xor
mov
adc
sub
mov
shr
fiadd
mov
ja
lods
out
das
inc
addr16
in
int
dec
fcmovnbe
adc
and
pop
mov
loope
gs
out
(bad)
fmul
or
mov
rcr
lds
(bad)
jae
push
lock
mov
test
inc
dec
idiv
ds
int
(bad)
and
or
scas
push
xchg
sub
nop
das
jb
add
hlt
pop
add
sbb
mov
dec
sbb
jo
mov
sbb
ss
scas
je
(bad)
imul
cmp
mov
dec
pop
mov
xor
cmp
mov
dec
fsub
pop
adc
mov
pop
jge
and
imul
push
push
test
sub
dec
sub
nop
sub
test
outs
xchg
mov
sub
push
iret
(bad)
jmp
ins
or
gs
je
sahf
xor
or
out
mov
data16
xchg
mov
loop
mov
and
(bad)
jnp
pop
stc
or
(bad)
mov
arpl
loope
pop
dec
and
or
sub
push
outs
cmp
sub
lahf
cmp
bound
push
jmp
mov
test
mov
xchg
push
fild
loopne
lahf
inc
fldcw
sub
loope
out
leave
lahf
adc
cwde
idiv
loop
pop
sti
out
mov
int
inc
gs
jmp
xor
inc
mov
sub
popf
inc
sbb
outs
and
loope
xchg
popa
add
popa
jmp
pop
fiadd
mov
push
pop
adc
imul
inc
inc
xchg
cmp
xchg
and
lahf
test
inc
xor
dec
push
cmp
loop
add
xchg
mov
leave
arpl
sar
or
iret
xor
leave
or
stc
repnz
lahf
leave
dec
movs
sub
mov
jne
xchg
inc
or
jnp
mov
repz
in
xchg
ficomp
mov
dec
pop
seto
jo
or
jno
jg
mov
add
inc
mov
cwde
xor
sub
xchg
dec
pop
and
dec
xchg
mov
pop
jg
adc
lods
inc
cmps
mov
jmp
mov
cmp
mov
cs
and
push
adc
aas
jmp
pushf
jns
mov
jo
inc
mov
pop
and
push
cmp
into
mov
sub
sbb
fst
fistp
jmp
xchg
push
push
retf
int3
cmp
and
loope
cdq
movs
mov
add
mov
ds
sub
cwde
mov
sahf
in
inc
push
jb
cmp
popa
ins
in
jmp
mov
adc
cld
mov
int3
int3
mov
out
repnz
rcr
or
xor
jo
xlat
lds
mov
aad
mov
adc
stc
fidivr
clc
in
and
lds
inc
std
and
and
sub
push
cmp
cmp
xor
shl
(bad)
sti
mov
int
jecxz
cli
test
mov
ror
adc
mov
ja
nop
bound
gs
push
push
test
sar
(bad)
cmc
pop
dec
add
lds
sbb
(bad)
test
mov
lea
xor
popa
inc
call
cvtdq2ps
cwde
ins
cmps
jno
dec
sbb
js
add
inc
pop
outs
mov
mov
jo
ret
into
lds
in
popf
mov
inc
push
pop
pop
sub
pop
cmp
mul
ja
xchg
ins
jmp
or
xor
push
aam
lahf
sbb
pop
adc
icebp
inc
mov
enter
cmp
fldcw
das
test
pop
sub
das
(bad)
fdivr
cdq
cmp
(bad)
ds
and
adc
sti
cmc
imul
arpl
cli
inc
mov
push
aaa
inc
jle
mov
jmp
cmp
mov
xlat
push
les
push
and
jmp
test
test
mov
cwde
mov
test
cli
inc
lods
pandn
inc
xlat
loope
out
mov
push
les
mov
movs
xlat
outs
sub
mov
test
outs
or
add
xor
jmp
lods
movs
lods
(bad)
clc
loop
dec
adc
imul
xor
fwait
dec
repnz
outs
out
les
cmp
jmp
lods
aas
pusha
mov
or
(bad)
stos
adc
loopne
and
daa
dec
fnstenv
xchg
jmp
xchg
adc
jl
outs
push
jne
adc
jl
imul
cmp
out
and
pushf
ja
jl
scas
mov
sbb
into
repz
hlt
dec
and
inc
pop
repnz
and
add
in
in
ds
inc
popa
stos
fsub
js
sbb
jns
rol
sbb
fsubr
call
xchg
inc
sub
jge
fwait
cmp
je
lods
lock
and
cmc
into
adc
mov
scas
adc
lods
mov
or
adc
pusha
jge
retf
add
adc
cmp
in
mov
or
ins
das
ja
into
out
and
shl
les
add
cmp
div
jp
inc
sar
lahf
mov
(bad)
sbb
jecxz
and
retf
movs
les
pop
rcl
loope
push
sbb
retf
ret
or
push
mov
or
cmc
push
ror
mov
and
mov
ins
mov
mul
imul
ins
xchg
addr16
push
lea
imul
push
gs
in
bound
push
aaa
jg
in
lahf
push
aam
sub
sbb
pop
call
daa
xchg
jecxz
and
pop
loop
inc
cmp
xchg
fistp
mov
outs
sbb
and
(bad)
gs
push
inc
sub
jbe
scas
ret
xchg
(bad)
xor
test
fwait
mov
add
mov
shr
jae
ins
in
mov
fstp
jle
lock
xchg
and
lock
(bad)
pop
scas
or
es
jl
iret
xor
or
mov
cwde
rol
mov
pop
lods
sub
lods
xchg
add
xchg
in
xchg
inc
pop
jmp
xor
xor
dec
pop
fdiv
xor
scas
add
cmps
je
leave
(bad)
mov
jge
pusha
call
fs
pusha
lds
retf
mov
enter
inc
std
bound
jnp
jae
imul
inc
mov
mov
mov
pop
push
jno
scas
sbb
std
(bad)
sti
push
push
or
inc
mov
inc
pop
pop
loop
jno
jb
in
add
mov
and
jo
retf
xchg
aaa
es
dec
mov
movs
leave
cmc
cdq
jmp
iret
push
mov
mov
enter
sub
mov
fimul
retf
call
ja
mov
outs
clc
dec
pushf
int3
cli
pop
xchg
movs
mov
jge
data16
pop
imul
stc
cdq
jne
push
add
sub
or
gs
lea
pop
ret
(bad)
js
cdq
loopne
inc
mov
cld
jmp
xchg
jnp
test
lds
pop
sub
ins
jp
lods
lds
test
cdq
pop
jl
call
imul
sub
add
iret
add
mov
ins
xor
inc
adc
adc
and
xchg
pop
stos
into
adc
enter
out
pop
push
scas
mov
xlat
aad
jmp
fcom
out
pop
adc
aam
sub
stos
mov
and
(bad)
repz
mov
inc
or
sbb
mov
rol
push
dec
std
clc
push
push
push
adc
test
movs
pop
shr
cwde
mov
pop
add
pop
daa
sbb
loope
in
dec
jl
sbb
call
xchg
cmps
aas
pop
xchg
es
add
xor
pop
js
sbb
adc
aaa
jl
fsubr
movs
inc
shrd
jns
cmp
fdivr
mov
mov
test
or
jb
movs
aas
imul
test
js
cmp
jle
fsub
fstp
dec
call
mov
xchg
cs
add
or
sub
in
in
in
mov
add
sbb
test
xchg
pop
fiadd
pop
jp
in
fild
or
pop
dec
(bad)
pop
(bad)
out
mov
neg
rcl
fsubp
mov
cdq
xchg
sub
(bad)
aam
(bad)
pop
mov
jg
cli
sbb
retf
out
aaa
aas
push
and
push
add
(bad)
in
cmps
retf
jge
rol
mov
imul
stos
movs
out
call
test
xchg
nop
ss
es
in
xchg
inc
inc
or
cmps
stos
data16
in
cmps
cmp
mov
and
dec
sbb
pop
test
and
test
(bad)
lods
jge
call
xchg
sbb
les
movs
das
jno
xor
popa
xchg
mov
dec
aam
jbe
mov
cwde
add
(bad)
jne
xor
je
int3
data16
aad
jnp
mov
repnz
ror
fadd
jp
pop
enter
in
dec
sub
int3
cmovno
xchg
fs
rol
leave
inc
fisttp
into
pusha
jle
jmp
scas
fcmovb
ja
jge
or
add
push
ss
fcom
ret
test
xchg
bound
pop
push
jb
movs
dec
jge
repnz
adc
cmp
std
pop
xchg
stos
sbb
stc
or
inc
fdivr
mov
sar
mov
retf
out
pop
movs
lods
in
rcr
jmp
fst
jo
pop
js
mov
stos
repz
inc
adc
inc
scas
out
lock
int3
cmc
jbe
fsubr
xchg
ficom
std
jnp
test
dec
adc
xor
sbb
fmul
ret
push
sbb
test
std
cmp
aas
sub
pop
fcmovbe
out
cmp
xor
sbb
push
sub
imul
fwait
shr
jge
mov
ins
cmp
push
inc
lahf
dec
mov
inc
xchg
neg
mov
leave
xor
jno
jb
xchg
int3
ret
fwait
rol
call
movs
adc
cmp
mov
mov
cmp
or
pushf
sub
nop
mov
mov
popa
pop
in
scas
adc
lds
push
lea
pop
mov
int3
inc
(bad)
xor
mov
lods
and
or
jle
pop
cdq
jge
and
inc
ret
dec
xor
cmp
pop
push
jae
lock
cmp
inc
repnz
xchg
fldcw
call
test
push
mul
lods
popa
inc
dec
(bad)
imul
cmp
clc
pushf
cdq
icebp
mov
sbb
test
add
ja
cmps
mov
or
add
ja
in
gs
rol
dec
push
movs
push
sti
fcmovb
mov
into
cmc
loopne
mov
sub
push
loope
mov
dec
push
pushf
cmp
movs
sbb
fsub
xchg
int3
pop
fst
mov
or
aad
stc
test
xor
cmp
ja
mov
pop
push
cmp
add
cpuid
pop
mov
mov
push
jmp
jmp
frstor
(bad)
xchg
lahf
sbb
jmp
or
call
push
jg
mov
out
jb
dec
test
jle
pop
push
sbb
xor
lods
jg
jge
mov
mov
fs
pop
sub
test
stos
out
xlat
sbb
push
in
jno
icebp
clc
shr
jmp
(bad)
hlt
iret
inc
gs
pusha
test
sbb
pop
(bad)
arpl
sub
cmp
pop
test
mov
cmp
jno
sub
add
dec
sub
sub
mov
jmp
dec
ror
mov
test
jl
push
fimul
fwait
retf
lods
xchg
into
icebp
jg
mov
cli
mov
mov
outs
xchg
xchg
in
jp
sub
add
push
dec
and
aas
dec
fisub
pusha
push
daa
es
test
push
std
lods
and
pop
pop
(bad)
xor
pop
jecxz
xchg
mov
jp
cwde
je
adc
mov
mov
pop
or
add
(bad)
mov
jo
fcom
das
cmp
lock
add
cmp
pop
sbb
pop
lea
fdivp
and
add
mov
mov
out
fnstcw
push
scas
jno
mov
mov
xchg
out
mov
cmp
sub
cmp
mov
mov
int3
push
inc
(bad)
iret
test
mov
test
inc
inc
ret
jge
push
adc
xchg
add
cmp
test
dec
sub
fs
push
lds
mov
or
cmp
mov
les
fnstenv
inc
jnp
shl
shl
call
sbb
(bad)
pop
jno
cs
mov
push
cli
je
pop
int3
fist
push
adc
lea
sub
out
jnp
sbb
aas
dec
lods
push
out
push
call
or
pop
in
mov
mov
sbb
xchg
sbb
repz
scas
xchg
push
add
lea
fisttp
cmp
ret
iret
idiv
aaa
mov
sub
mov
and
mov
push
sbb
cmp
adc
shl
shl
pextrw
push
bound
fild
pop
push
je
mov
dec
xor
call
push
add
dec
mov
add
outs
sbb
sub
lahf
push
(bad)
fisttp
adc
jmp
jno
loope
retf
pop
loopne
js
addr16
dec
test
xchg
dec
aam
xchg
jae
leave
adc
into
enter
cmp
mov
mov
or
cmp
jmp
call
sub
retf
pop
mov
cmp
jae
push
mov
cmp
arpl
mov
icebp
adc
xchg
imul
out
mov
jle
xchg
shufps
jecxz
sub
pop
or
leave
xchg
sub
ror
out
les
or
mov
add
push
add
mov
dec
mov
mov
aaa
jns
jae
fwait
sub
mov
adc
dec
push
sti
hlt
sub
xor
add
add
leave
cmp
lea
inc
test
aas
xchg
push
pop
outs
in
aad
shl
ds
rcl
aaa
aaa
xor
movs
mov
adc
push
ret
ret
cs
jmp
fmul
neg
jmp
jl
mov
loop
das
mov
dec
pop
sub
dec
jno
pop
and
jne
das
imul
je
outs
add
sbb
mov
aad
imul
sub
ds
pop
pop
sub
inc
fild
mov
cmc
inc
mov
mov
(bad)
popf
std
pmulhuw
jge
out
loopne
aam
outs
cdq
sub
mul
es
je
inc
test
adc
pop
data16
ins
inc
mov
shr
add
mov
pop
aas
stos
mov
jbe
dec
je
mov
xchg
rcr
sub
xchg
call
inc
xchg
bound
xor
push
(bad)
mov
sub
push
test
or
cmps
cwde
rcr
jl
shl
adc
test
sbb
or
jae
dec
xor
fsub
or
mov
adc
mov
mov
popf
jg
push
fwait
mov
ret
pop
pop
mov
movs
les
ret
sbb
add
xor
or
(bad)
jecxz
mov
add
pop
inc
inc
shr
ins
cmp
aaa
jg
les
ins
aas
nop
in
test
cmp
sbb
jo
xchg
cmc
xor
lock
cmp
push
aad
sub
xchg
fwait
ss
inc
jmp
nop
scas
xor
jo
xchg
(bad)
add
push
add
xchg
stc
xor
and
leave
dec
(bad)
cmp
or
dec
loopne
hlt
and
push
jmp
or
aaa
popf
cmp
dec
push
movs
sahf
in
cli
push
cmps
push
mov
nop
repz
ficomp
in
xchg
xchg
cs
jbe
jl
hlt
les
sbb
jg
jp
fbstp
and
lods
xor
ins
lods
xchg
inc
aas
add
rol
mov
pop
popa
jne
xchg
enter
retf
hlt
add
cli
in
mov
outs
inc
movs
je
push
and
and
dec
jge
hlt
lods
dec
or
fwait
adc
add
sbb
sbb
xchg
(bad)
int3
shl
pop
lock
push
sub
js
mov
fmul
push
dec
pop
aaa
(bad)
popa
or
jg
jnp
stc
push
jge
pop
repz
inc
or
cmp
pop
test
cs
rcr
dec
clc
xor
sbb
aam
xor
adc
adc
cmp
jnp
inc
nop
movs
pusha
sub
call
out
(bad)
cmps
rcl
mov
and
les
ret
mov
push
inc
test
iret
xlat
in
and
shl
xchg
add
push
hlt
inc
lahf
mov
mov
aam
xor
in
xor
mov
xor
inc
xchg
mov
std
lock
bound
push
into
in
lfs
out
(bad)
jne
ins
mov
mov
cmps
cmp
xor
sbb
adc
mov
call
push
(bad)
inc
(bad)
(bad)
jg
cmp
sub
icebp
arpl
adc
nop
and
and
aad
jne
fist
dec
loop
bound
xor
imul
fdiv
push
mov
pop
mov
xchg
test
call
inc
mov
dec
arpl
and
jo
aas
jns
ret
ds
clc
jle
dec
stos
imul
jae
xchg
add
les
test
test
mov
mov
pop
std
pop
aas
jno
lods
fild
xor
mov
or
cs
jmp
cmp
mov
mov
stos
sbb
test
aad
fst
loop
(bad)
call
outs
adc
lds
xchg
sbb
sub
push
mov
jb
push
dec
mov
ins
aad
ja
movs
shr
pop
mov
fsubrp
cmp
shl
sbb
and
bound
and
cwde
and
add
out
outs
mov
xlat
ror
jns
inc
cmps
jp
push
push
dec
and
std
icebp
loop
popa
and
push
mov
push
xchg
scas
fimul
or
xor
and
jo
(bad)
push
mov
lods
mov
sbb
sbb
repnz
pop
stos
add
push
dec
nop
sub
or
dec
test
pushf
stc
xchg
push
mov
(bad)
in
ds
cmp
ds
jno
adc
xchg
stos
mov
dec
jp
cwde
shr
or
inc
pusha
imul
inc
mov
jecxz
jae
mov
mov
adc
pop
xor
test
jns
add
ret
leave
push
push
outs
sub
(bad)
shl
cmp
pop
jle
aam
push
sbb
push
stos
adc
imul
sub
rcr
xchg
pop
test
pop
cmp
push
out
neg
lds
hlt
pop
mov
outs
add
sub
call
outs
(bad)
mov
xchg
push
and
call
adc
out
mov
inc
es
xor
mov
sbb
popa
mov
mov
call
jle
cmp
inc
push
mov
mov
cmp
idiv
pop
and
add
or
fnstenv
in
rol
mov
or
and
call
inc
pushf
push
sub
imul
fistp
and
outs
out
jg
stc
cdq
or
nop
jmp
mov
push
dec
jbe
pop
inc
imul
sti
xor
std
sbb
mov
adc
or
nop
jg
inc
sub
int3
and
mov
pop
jmp
(bad)
lea
imul
fwait
mov
add
(bad)
clc
and
push
add
pushf
sub
add
fdivp
inc
push
mov
jmp
ja
mov
test
jge
dec
hlt
adc
out
in
xor
and
lahf
mov
sub
stos
mov
aas
loope
fisub
jns
aad
pop
outs
sti
int
mov
(bad)
push
in
and
call
pop
jle
jns
arpl
mov
dec
or
cmp
jae
stos
mov
popf
cs
retf
ja
add
xor
popf
inc
repz
inc
popf
adc
lods
(bad)
das
sbb
in
pop
call
out
cmc
push
mov
data16
sub
sub
pusha
into
popf
push
dec
ret
or
mov
pop
sbb
push
push
arpl
rcl
xchg
data16
pusha
hlt
gs
xor
sahf
sbb
sar
add
popa
add
fld
pop
fisub
sub
and
jle
sub
in
cmp
push
adc
jne
xchg
(bad)
das
fcomp
out
loop
stos
imul
add
popf
addr16
pop
ret
sbb
jo
jp
jbe
mov
lea
mov
and
sti
adc
shl
cmp
cmp
out
std
sub
mov
loop
ret
jmp
sub
ret
mov
and
cmps
mov
into
pop
lods
pop
mov
pop
lds
out
jmp
aas
arpl
movs
cmp
lock
mov
add
adc
ret
pop
jo
cmp
shl
push
mov
xor
add
xor
dec
push
cmps
loope
test
daa
scas
or
mov
fild
xor
out
out
mov
sti
inc
aaa
call
mov
in
pop
mov
or
int
in
and
pushf
ror
jns
lods
pop
add
dec
sbb
cmp
jp
mov
scas
sbb
or
adc
imul
and
or
dec
out
ficomp
push
repnz
pushf
jl
aas
pop
push
pop
push
fsub
pushf
fidivr
dec
cmps
jmp
pushf
movs
std
mov
xchg
mov
push
push
fadd
sub
in
inc
mov
stos
add
dec
or
fs
mov
and
xchg
mov
jg
fprem1
xor
in
out
sbb
jge
fisttp
jl
ficomp
inc
gs
gs
fwait
imul
lea
inc
in
fldenv
sub
test
shl
stos
inc
inc
popa
(bad)
or
add
jl
lock
and
retf
aas
inc
dec
and
dec
cli
neg
cmc
add
test
movs
inc
adc
jae
repz
imul
push
(bad)
cmps
hlt
sahf
inc
loop
sub
cmp
push
jle
add
loopne
mov
in
sbb
xchg
dec
test
jg
out
icebp
and
dec
push
daa
jge
push
pop
in
jnp
cmp
jns
mov
sub
pop
cli
cmp
and
push
popf
xchg
popf
(bad)
lahf
xchg
retf
dec
shr
xor
mov
rol
outs
pusha
sub
imul
jmp
or
outs
pop
pop
xchg
inc
pop
fadd
push
sub
dec
jo
push
and
int
(bad)
fcomp
add
adc
ja
mov
jb
not
mov
inc
pop
retf
mov
ins
stos
adc
rcr
outs
push
ss
and
movs
add
retf
aam
test
icebp
nop
pcmpeqb
mov
arpl
in
(bad)
call
and
lds
sub
cmp
and
and
sahf
shl
out
or
adc
sbb
rcl
sbb
xchg
jmp
popa
das
xchg
fdivr
cmp
jmp
inc
mov
pop
test
jmp
push
adc
add
mov
mov
xchg
loopne
add
scas
in
jno
test
push
and
ins
outs
imul
and
not
dec
stos
push
(bad)
jae
xchg
xchg
push
mov
scas
pop
adc
adc
add
add
sbb
(bad)
push
sbb
add
pop
lods
sahf
mov
dec
jg
mov
jmp
adc
jmp
push
mov
jne
daa
mov
rcl
movs
jmp
outs
jmp
(bad)
cmp
std
cmps
xchg
cmp
jae
xor
ret
jnp
xor
clc
scas
ss
cs
icebp
push
out
add
mov
sbb
cwde
add
sbb
in
daa
push
add
mov
clc
dec
xchg
sbb
jo
fmul
cli
sub
xchg
adc
shl
scas
movs
jecxz
jecxz
inc
test
add
jb
xor
push
(bad)
(bad)
jns
mov
gs
jnp
xlat
loope
ficomp
ins
pop
and
shl
cs
dec
push
fstp
out
jge
ins
push
mov
mov
dec
aam
or
xlat
retf
jg
xor
aaa
pop
test
lods
cmps
or
cmp
ja
ret
fistp
test
jl
mov
jnp
int3
retf
add
push
pop
pop
jae
popf
cmp
xchg
xchg
in
aas
sti
imul
inc
test
adc
imul
jge
out
icebp
sub
sbb
out
jp
les
stc
lea
stos
lea
call
jle
das
xor
les
out
push
and
fbld
lahf
and
int3
popa
rol
mov
ins
push
pop
ds
fisttp
shl
and
xchg
adc
lea
mov
adc
mov
stos
cmp
cli
femms
adc
movs
inc
ret
mov
lds
add
fidivr
xor
bound
repnz
retf
mov
jno
neg
mov
(bad)
adc
pop
test
jbe
daa
xor
in
xchg
iret
fisubr
mul
clc
sub
xchg
mov
loop
or
out
xor
jmp
pop
mov
fcomp
pop
retf
loope
in
dec
adc
or
fdivr
(bad)
mov
rcl
out
and
test
jecxz
push
lods
inc
dec
push
call
dec
add
sub
outs
pop
hlt
and
in
xor
cmp
xchg
inc
aaa
jns
lea
push
outs
sub
iret
fistp
mov
mov
mov
xor
pop
pop
cmp
dec
jne
fs
pop
dec
shr
pop
jge
inc
pop
neg
cli
xchg
sbb
aam
mov
sbb
mov
dec
inc
pop
inc
add
adc
dec
push
(bad)
inc
adc
mov
add
popa
mov
ret
push
xchg
pop
fbld
loopne
push
js
cmps
aam
adc
mov
sti
call
rol
jb
in
mov
xlat
cmp
sub
cmp
lds
add
imul
cmps
shr
mov
(bad)
in
push
jnp
sub
push
push
mov
lahf
iret
jno
xchg
mov
lock
add
xchg
retf
pop
fs
or
test
sub
mov
sbb
inc
push
xor
jp
mov
outs
in
xor
or
add
rol
cwde
dec
push
xlat
dec
movs
ss
stos
mov
pop
or
pop
dec
imul
int3
and
lahf
test
dec
inc
out
push
clc
jg
jp
xchg
call
jge
fcmovb
cs
ret
iret
push
mov
xor
mov
adc
(bad)
or
xlat
std
sub
shl
call
rol
jmp
pop
ins
jns
sbb
jbe
cdq
mov
rep
or
jae
ficomp
add
mov
mov
mov
push
jle
fisub
loopne
add
pop
add
jmp
jmp
inc
cmp
jmp
jne
jb
jb
sub
outs
cs
mov
das
mov
adc
scas
stos
out
js
adc
repz
xor
xchg
jmp
pop
dec
and
or
fistp
inc
mov
test
idiv
(bad)
sbb
jge
push
(bad)
adc
or
ds
repz
sbb
icebp
xor
xchg
aad
in
cli
dec
outs
dec
mov
arpl
sub
cmp
scas
push
std
or
stos
or
pop
mov
arpl
jne
movs
push
and
ds
sbb
fwait
add
adc
ds
in
jp
or
out
loope
int3
xchg
pushf
outs
loopne
lahf
aad
and
pop
repz
fwait
mov
hlt
jp
or
and
lahf
popa
ins
sti
and
data16
imul
xor
jp
sar
jne
or
dec
mov
out
jmp
mov
mov
(bad)
or
xchg
mov
imul
adc
outs
mov
das
leave
cmp
ss
jbe
push
in
add
pminub
outs
ja
mov
out
repz
pop
add
mov
aaa
lea
jns
push
xchg
add
aaa
add
adc
push
xlat
out
sahf
adc
clc
pushf
gs
jo
xor
pop
dec
dec
xor
lock
xor
cwde
fwait
movs
nop
xchg
jnp
and
mov
add
call
mov
dec
xchg
popa
sub
add
xlat
mov
sbb
sahf
clc
(bad)
pop
mov
push
pop
sub
jno
retf
leave
ret
movs
jb
pop
add
ins
icebp
std
cmp
scas
jbe
pop
loopne
cmp
shl
es
push
lods
aaa
pusha
pusha
mov
pop
fist
cmc
push
(bad)
fmul
call
sahf
mov
fsubr
inc
mov
adc
push
adc
cmp
ins
jne
sahf
lea
lods
dec
stos
repz
(bad)
xchg
shr
xchg
jmp
sub
mov
mov
dec
push
fnstcw
xlat
push
mov
push
call
cmp
fiadd
jno
sbb
cli
test
movs
jmp
or
push
add
mov
(bad)
mov
jl
test
xor
stos
sub
pop
sbb
lea
fnstenv
pop
inc
je
adc
out
mov
mov
cwde
ret
fs
cmp
adc
xor
add
fcmove
adc
sub
cmp
pop
sti
xchg
push
sub
nop
sbb
xor
push
out
fmul
daa
(bad)
cld
or
or
jp
(bad)
sub
lods
jle
jbe
jae
and
sahf
xchg
or
jg
stos
mov
and
mov
sti
lock
icebp
add
push
mov
movs
cs
inc
mov
bound
jnp
out
sub
retf
out
mov
inc
ja
jmp
xchg
xor
xor
jae
jl
cmp
dec
xlat
fwait
sub
mov
in
sbb
and
sbb
dec
fisubr
clc
loop
cld
mov
mov
mov
daa
add
int3
inc
shl
aaa
ja
mov
pop
imul
loope
inc
cs
std
out
jmp
dec
push
push
lock
lock
xchg
shl
arpl
pop
loopne
in
mov
xor
test
xchg
js
add
cmp
sub
neg
jecxz
mov
stc
push
jne
stc
dec
std
inc
imul
mov
sub
xchg
jle
and
sub
(bad)
out
ins
jge
in
sbb
jne
mov
fsub
fild
retf
repnz
ror
inc
outs
movs
jge
hlt
bound
daa
mov
int3
sar
js
fsubr
out
arpl
sbb
fwait
adc
iret
mov
mov
out
iret
dec
xor
ds
cdq
cmp
xchg
iret
sahf
cmp
popa
fadd
xor
xchg
popf
test
cld
mov
xchg
pushf
je
sbb
jbe
out
lea
sub
pusha
sub
cmps
push
jecxz
jecxz
ret
frstor
test
(bad)
enter
ja
scas
pusha
test
fwait
adc
sub
cmp
push
push
jg
popf
jbe
jecxz
aas
xchg
dec
mov
mov
jl
mov
clc
cmp
mov
mov
push
icebp
mov
add
aas
push
addr16
adc
aaa
in
dec
jmp
jmp
jmp
push
call
cmp
inc
test
jle
jno
cld
xchg
dec
cmp
adc
sbb
add
fwait
xchg
imul
and
ret
mov
adc
mov
mov
out
pop
outs
test
sub
push
test
xor
test
sub
out
popf
mov
mov
in
sub
stos
into
gs
jl
int3
cmc
imul
pusha
mov
imul
mov
imul
pop
and
fsubr
lods
adc
scas
movs
es
popf
mov
dec
mov
sub
inc
xchg
inc
sbb
shr
enter
out
leave
dec
xchg
in
adc
add
mov
mov
ds
enter
jp
xchg
xor
popf
dec
jnp
push
add
pop
les
pop
dec
mov
fnstcw
dec
add
call
pusha
dec
add
cdq
jle
sbb
ds
push
test
lds
in
loop
xchg
mov
push
xchg
cmp
push
xchg
xchg
xchg
push
cmp
cwde
sbb
jo
pop
add
mov
in
in
hlt
test
mov
and
and
xor
xchg
js
pusha
sbb
sti
(bad)
and
test
sub
push
out
push
adc
xchg
sub
test
hlt
int
inc
cmps
in
add
mov
movs
jne
pop
mov
std
imul
(bad)
into
ficom
pushf
call
push
imul
jno
cli
fwait
mov
jl
xor
mov
stc
push
and
mov
mov
pop
stos
mov
adc
mov
das
(bad)
adc
sbb
scas
mov
out
pop
and
or
test
test
inc
sbb
sub
int
inc
jmp
popa
retf
(bad)
jno
mov
aad
dec
ja
inc
ror
and
fist
sbb
retf
lds
(bad)
push
int3
jl
mov
mov
loope
pop
push
xchg
xchg
aam
es
pop
popf
or
sbb
je
imul
out
mov
sbb
inc
sahf
sbb
adc
stos
nop
sbb
cdq
arpl
shr
mov
jae
jo
adc
fmul
mov
push
mov
ret
movs
out
lds
gs
repnz
pop
or
dec
fiadd
lahf
fdivr
jne
adc
fnstcw
leave
mov
jns
cmp
lahf
mov
sbb
add
cwde
inc
stos
xchg
jnp
idiv
fst
fnstcw
mov
cmp
or
cld
aaa
xlat
popf
mov
cdq
and
add
sub
sub
and
mov
adc
push
repz
jo
dec
retf
popf
mov
scas
or
xor
jnp
pop
(bad)
push
stos
or
jmp
adc
retf
bound
xor
loop
in
mov
sti
xlat
cli
pop
test
mov
hlt
or
(bad)
xchg
ret
inc
dec
adc
call
pop
hlt
pusha
popf
sti
push
lock
retf
int
in
push
call
mov
(bad)
fdivr
test
inc
cmp
xchg
jo
jb
aad
ss
xchg
or
call
imul
out
ja
sub
ret
or
or
xlat
int
adc
or
loopne
mov
in
rcl
xchg
scas
inc
cmp
add
(bad)
clc
mov
mov
cmp
xor
movs
sahf
cmp
je
daa
xor
lods
rcr
lock
(bad)
pop
test
sbb
push
sub
jae
pop
fistp
js
inc
mov
mov
scas
repnz
mov
imul
sub
int3
(bad)
and
xchg
mov
sbb
hlt
lds
mov
(bad)
imul
call
stos
sub
xor
sub
icebp
mov
fnstsw
adc
mov
mov
mov
ds
daa
adc
mov
cmp
inc
inc
(bad)
fstp
aas
or
sub
cmp
into
push
(bad)
scas
and
adc
loope
ror
cmp
stc
pop
dec
cmp
enter
iret
sti
add
iret
mov
push
sbb
test
aaa
imul
retf
sbb
fcomip
xchg
pop
or
popf
(bad)
inc
fcomp
loopne
xchg
dec
rcr
xor
mov
int3
push
dec
and
clc
sbb
in
cmp
mov
sahf
mov
jg
mov
mov
jge
inc
(bad)
sbb
sbb
adc
xchg
adc
ss
pop
out
push
test
push
(bad)
lods
fstp
shr
retf
mov
jae
dec
or
jle
add
inc
aam
fiadd
jns
sbb
inc
out
in
ror
pop
dec
add
xor
neg
dec
pop
test
push
cwde
in
sub
adc
cld
push
int
push
mov
shr
xor
mov
mul
dec
je
lods
dec
pusha
fcom
mov
popf
sti
call
int3
(bad)
repz
jns
pop
mov
mov
inc
outs
adc
push
xlat
scas
into
xor
out
dec
nop
push
or
mov
xlat
push
or
or
rcr
inc
shr
dec
retf
outs
mov
std
cmp
add
lahf
(bad)
in
inc
ja
ret
ins
mov
mov
push
adc
jecxz
mov
or
mov
dec
mov
and
clc
dec
in
pop
fadd
jge
sbb
pop
cmp
push
int
icebp
add
fstp
mov
fsub
jnp
mov
push
fldenv
push
jmp
ret
xor
sti
push
mov
xchg
mov
lods
arpl
loopne
outs
aad
bound
and
das
sub
fidiv
mov
dec
mov
dec
sbb
clc
shl
scas
jecxz
and
icebp
ss
push
mov
jb
add
ins
sub
dec
mov
repz
stos
sbb
icebp
js
add
xor
in
iret
jno
cmp
test
mov
pop
or
inc
inc
inc
out
cmp
dec
in
adc
xchg
sahf
stos
mov
push
dec
push
adc
mov
stc
psubsb
lahf
adc
inc
add
sahf
xchg
scas
add
bound
inc
cmp
dec
xor
out
push
sub
(bad)
or
loopne
dec
mov
adc
add
adc
xor
and
iret
loopne
or
sbb
sub
ins
xor
cmp
push
in
or
mov
sub
push
pop
(bad)
je
jmp
jns
jns
cmp
mov
adc
push
mov
dec
das
dec
movs
or
mov
or
es
out
mov
stos
xor
std
mov
shl
jo
add
mov
cmp
jb
xchg
pop
adc
dec
mov
sub
push
loop
fnstsw
xor
mov
mov
loop
in
mov
icebp
mov
rep
gs
sub
push
sbb
lahf
xchg
pop
xchg
cmp
sbb
loop
sbb
adc
jmp
mov
push
inc
js
xor
arpl
pop
fwait
mov
mov
xchg
std
dec
pop
pop
cmps
mov
iret
out
ss
cmp
jle
(bad)
or
push
xlat
add
sti
xchg
fild
jb
into
loop
lahf
mov
outs
outs
gs
fstp
into
xchg
xor
mov
xor
dec
icebp
mov
nop
(bad)
stos
rcl
pop
bound
jmp
mov
movs
scas
mov
xchg
idiv
xchg
ret
popf
add
jnp
cmp
jns
sub
fild
ror
push
mov
adc
dec
shl
call
enter
adc
and
(bad)
out
clc
dec
push
aad
retf
cmp
inc
(bad)
cvttps2pi
mov
inc
mov
dec
ffree
cli
pop
out
mov
ins
leave
sub
sub
repnz
cmp
dec
jp
stc
pop
inc
sub
jbe
jne
push
jns
sbb
idiv
or
sbb
xlat
push
xor
es
xchg
add
das
data16
xor
jns
addr16
mov
dec
aad
je
adc
push
je
ds
pop
pop
push
in
cdq
mov
push
cs
rcl
fs
aas
frstor
or
dec
pop
and
imul
mov
sbb
dec
imul
mov
aaa
pop
retf
fisubr
jmp
stc
and
pcmpgtw
pop
inc
sbb
cwde
jge
push
mov
ret
lahf
dec
pushf
jbe
cdq
fprem
out
inc
or
sti
pushf
inc
mov
mov
cmps
hlt
mov
push
cmps
stos
loop
mov
and
out
add
leave
lods
push
add
cmp
push
fldcw
cmp
jae
mov
call
jecxz
adc
inc
(bad)
cmp
outs
adc
(bad)
int
sub
sar
or
ret
lods
icebp
cdq
jmp
int3
test
retf
enter
and
rol
mov
mov
(bad)
jae
(bad)
adc
sub
rcr
push
popf
cmp
sub
xor
aaa
outs
jnp
imul
data16
out
add
jne
lods
dec
push
sub
loop
adc
jb
jmp
cwde
bound
aaa
add
and
in
leave
pushf
mov
jno
or
dec
cli
push
int3
xor
cmp
js
push
mov
sti
push
data16
pushf
aam
(bad)
and
imul
xchg
icebp
mov
dec
push
icebp
in
sub
fldcw
les
mov
pop
pop
push
ret
sar
sbb
xchg
iret
ja
scas
popf
hlt
or
mov
sbb
retf
push
lds
push
lahf
dec
mov
nop
xchg
icebp
dec
les
xchg
ds
test
enter
shr
sti
(bad)
int
retf
daa
arpl
lock
and
(bad)
lahf
mov
fwait
pusha
xor
pusha
jmp
rcr
cld
fcom
cdq
sahf
idiv
cld
test
mov
adc
rol
cmp
mov
leave
test
dec
and
(bad)
push
movs
jno
and
mov
mov
mov
stc
cmp
jmp
aas
in
cmp
ja
mov
imul
loop
or
test
addr16
inc
fild
loope
fisubr
dec
xchg
stos
jle
push
add
sbb
mov
add
in
cmp
adc
mov
in
mov
cli
add
js
sbb
push
mov
(bad)
in
fistp
iret
out
jp
daa
jmp
jmp
popf
dec
pusha
and
retf
and
daa
(bad)
fcom
adc
dec
xchg
mov
jae
(bad)
clc
add
adc
rcr
movs
push
mov
data16
adc
pop
(bad)
fsub
adc
or
inc
xor
xchg
sbb
test
and
sahf
cmps
xchg
adc
out
(bad)
jl
js
sbb
dec
mov
mov
xor
inc
std
add
mov
sub
(bad)
sbb
cmp
or
ret
in
mov
mov
or
dec
ins
jae
sbb
xor
jne
cmp
pop
xor
int3
sbb
pusha
cmp
cmp
outs
mov
sbb
xchg
jecxz
int3
sbb
cmp
shl
dec
jge
movs
jle
fst
cmc
mov
mov
push
cmp
or
mov
leave
ja
fist
ja
pxor
test
addr16
mov
jae
fwait
bound
adc
dec
scas
add
fnstsw
ins
es
push
push
mov
shr
xor
arpl
stc
mov
(bad)
cmp
dec
sar
repnz
add
push
cmps
pop
mov
pop
inc
mov
aam
sbb
in
loop
push
jp
sbb
and
(bad)
mov
pop
push
(bad)
mov
fdiv
jmp
cmps
jg
dec
pop
cmp
sub
popa
xchg
pop
cmp
cmp
lods
(bad)
fldcw
dec
adc
sub
mov
inc
retf
or
movs
sbb
dec
or
(bad)
push
mov
jns
sbb
std
stos
dec
mov
aaa
pop
scas
lock
sub
sub
sub
retf
mov
pop
lock
cs
imul
xchg
cmp
out
(bad)
cmc
leave
xor
daa
int
(bad)
das
lods
test
imul
lea
sub
retf
dec
bound
adc
ds
fsubp
xor
sub
shr
mov
and
jno
mov
test
ja
daa
sub
or
in
std
mov
mov
scas
cmps
pop
pop
and
xchg
fs
add
or
sbb
mov
(bad)
cli
loope
sbb
(bad)
loope
in
ret
add
arpl
add
nop
mov
or
cmp
dec
imul
pushw
inc
adc
ins
sub
xor
jmp
mov
(bad)
sti
(bad)
(bad)
mov
jle
mov
outs
(bad)
jb
inc
mov
sar
and
adc
sub
gs
std
inc
inc
xor
lahf
add
inc
out
out
dec
xor
aam
inc
mov
mov
mov
add
and
adc
jb
pop
sbb
xlat
sbb
mov
popf
dec
mov
loop
mov
je
movs
push
add
bound
push
push
(bad)
mov
add
dec
xor
push
jmp
adc
ja
push
pop
loopne
ficom
inc
out
call
push
aas
push
cld
xchg
loop
call
mov
push
cmp
pop
sbb
repz
aaa
(bad)
push
add
jecxz
gs
or
repz
dec
mov
clc
(bad)
sub
mov
push
push
xor
js
or
cmps
aas
xor
(bad)
jb
xor
inc
leave
(bad)
(bad)
fistp
cmp
rol
sub
jmp
mov
mov
mov
cld
gs
mov
sahf
mov
push
add
gs
push
push
xchg
out
and
push
stc
not
push
adc
adc
shl
cli
push
jle
(bad)
jmp
adc
xor
sub
not
jg
push
rcl
lds
lock
loop
arpl
add
push
add
sbb
xchg
ins
out
push
pop
icebp
test
mov
fsubr
lahf
(bad)
push
mov
pusha
push
aad
in
jbe
push
cmps
inc
jmp
push
dec
xor
ror
mov
pop
fnstenv
call
outs
repz
add
daa
add
jae
add
pop
jo
sub
bound
jo
add
mov
mov
adc
daa
add
jb
or
test
sti
xor
retf
aas
jne
mov
push
dec
and
jmp
dec
rcl
cmp
pop
jo
push
mov
pop
xchg
dec
adc
dec
mov
mov
in
push
xchg
cdq
mov
gs
sub
mov
pop
inc
mov
or
inc
cmp
aad
mov
cmp
jbe
inc
inc
ret
mov
adc
call
es
out
xor
or
lods
dec
pop
sar
dec
mov
inc
sub
adc
mov
add
pop
lea
mov
and
push
add
xor
test
mov
xchg
jge
inc
pop
mov
dec
clc
sar
ror
cmps
popa
adc
repnz
mov
sub
sahf
push
repz
push
adc
leave
or
repz
sub
pop
retf
pop
dec
pop
add
stc
inc
jo
mov
pop
mov
lods
aas
xchg
inc
ss
lahf
push
shl
mov
jmp
jb
and
ja
jns
sahf
call
out
aam
or
xchg
sbb
cmc
jb
jge
cs
addr16
(bad)
js
into
push
lea
mov
sbb
loopne
cli
and
enter
adc
in
push
lock
scas
fwait
pop
dec
xlat
jmp
retf
add
and
mov
mov
xor
push
cs
stos
fwait
jle
fwait
mov
movs
pop
sbb
jl
cmc
popf
mov
jne
retf
mov
dec
push
pop
push
jge
jge
push
inc
inc
mov
(bad)
aam
cwde
cwde
pop
into
lods
loop
pop
sbb
xchg
jb
jne
jle
xor
dec
lds
dec
jecxz
hlt
inc
mov
shl
xchg
test
xor
not
fdiv
neg
sub
inc
in
in
aam
push
dec
ds
dec
lds
mov
mov
ret
mov
jb
cmp
ins
push
call
fmul
push
xchg
jmp
or
repnz
ds
jno
in
mov
mov
call
mov
xchg
outs
pusha
test
mov
push
mov
cmc
sub
mov
stc
dec
dec
ss
cmps
sub
into
push
jmp
mov
or
test
mov
or
call
jmp
inc
and
shl
call
pop
inc
test
pop
sahf
add
xor
and
mov
outs
jae
outs
sub
jnp
jg
daa
fmul
call
cmp
mov
jmp
lea
daa
pop
call
sub
lock
xor
mov
nop
int
inc
mov
retf
jne
sbb
dec
gs
or
dec
adc
mov
pushf
push
mov
pop
jl
ret
or
fs
jo
fs
mov
mov
pop
jae
add
fwait
imul
cmc
jae
sbb
cmp
ja
dec
jmp
mov
div
xor
mov
push
or
out
iret
rol
push
pop
mov
xchg
std
cmp
push
pop
movs
jnp
mov
pmulhw
fld
je
push
(bad)
cwde
and
xchg
in
inc
inc
pop
out
inc
mov
mov
mov
les
xchg
add
add
cmps
push
test
jae
mov
sbb
cmp
xor
jno
dec
pop
js
or
lods
mov
out
xchg
aam
jmp
in
push
adc
xchg
ss
pop
adc
loope
lahf
adc
in
gs
and
fisubr
cmp
adc
(bad)
test
inc
(bad)
jecxz
add
fldenv
xchg
repnz
fsubr
lahf
push
mov
pop
and
fwait
call
cld
je
idiv
or
ror
stc
fwait
(bad)
dec
push
js
xchg
xchg
imul
loop
dec
or
imul
xor
xlat
enter
push
sbb
icebp
cmps
sbb
xchg
add
std
cmp
or
lds
jnp
adc
ins
cwde
aas
pop
bound
mov
cs
xchg
das
mov
mov
pop
jp
cmps
(bad)
or
inc
lds
sub
aas
push
or
inc
pop
jno
add
daa
jle
mov
mov
test
rcr
or
mov
dec
cmc
(bad)
dec
dec
hlt
xor
scas
mov
cmp
test
xchg
mov
pop
sar
pushf
pop
sti
pop
push
or
in
pcmpgtd
addr16
mov
push
pop
xor
sbb
inc
test
stc
pop
jmp
and
jnp
dec
or
mov
pop
add
dec
movs
aaa
xchg
test
lods
mov
(bad)
sbb
jg
pop
cmps
mov
or
outs
cmp
mov
cld
push
out
int
push
and
rol
inc
mov
fs
inc
jns
je
sbb
push
mov
into
jo
popa
mov
sub
add
mov
enter
loop
out
out
fistp
sbb
imul
aam
and
fsubr
call
pusha
lds
jo
ins
sar
cmps
pop
xchg
jecxz
add
push
imul
ret
push
sbb
int3
xlat
mov
or
aaa
xor
cmps
pop
dec
sbb
shl
xor
loop
sbb
sbb
pop
mov
xchg
push
adc
jnp
std
in
mov
inc
mov
inc
dec
xchg
mov
inc
dec
mov
add
test
outs
xchg
retf
idiv
fmul
and
pop
div
(bad)
xchg
jb
(bad)
retf
(bad)
dec
das
mov
test
clc
into
adc
retf
mov
int
imul
movs
xor
sbb
cld
mov
inc
or
mov
mov
mov
dec
mov
out
(bad)
bound
sub
lock
shl
cmp
fucomip
stos
cmp
in
popa
push
ror
and
inc
stos
dec
xlat
pop
shufps
jns
ins
hlt
out
sub
out
add
pop
pop
mov
imul
retf
jg
cmp
lahf
add
xchg
ret
add
pop
adc
hlt
popf
cdq
xor
jg
mov
test
pushf
(bad)
int3
jecxz
mov
sub
aas
cwde
xchg
inc
movs
mov
or
jb
hlt
dec
push
aad
cmp
xchg
push
jmp
popf
adc
push
outs
mov
cli
sub
add
retf
mov
inc
std
(bad)
cmp
cmp
mov
sahf
mov
iret
mov
adc
aad
push
adc
out
retf
xor
mov
or
sbb
aaa
dec
cmp
daa
test
xchg
fcomp
sub
push
sub
ins
arpl
pop
loope
sub
in
mov
jge
pop
or
cmp
leave
push
bound
mov
mov
sbb
movs
arpl
jp
loopne
mov
div
push
cli
cmc
(bad)
(bad)
into
daa
xlat
in
xchg
dec
ins
jle
xor
xlat
js
shl
or
mov
xor
loopne
push
push
push
mov
sbb
test
pop
mov
test
arpl
imul
int3
pop
add
aaa
(bad)
sub
cs
add
jmp
mov
lock
xchg
or
ror
repz
loope
fistp
outs
cmp
mov
fidiv
add
hlt
cmp
xchg
aas
(bad)
in
xor
(bad)
aam
sbb
jp
and
or
dec
leave
jae
cmc
jp
jne
(bad)
cmc
out
lahf
jmp
retf
int
mov
adc
dec
pop
test
dec
out
arpl
mov
add
sub
adc
push
pushf
push
ins
add
popf
iret
mov
fcomp
jbe
movs
or
(bad)
icebp
jo
push
imul
dec
and
xchg
out
cmps
outs
mov
sbb
jp
push
in
cdq
outs
retf
call
cmp
jp
(bad)
scas
stos
or
out
gs
ror
(bad)
icebp
xchg
jmp
ret
sbb
jno
mov
shr
inc
add
pop
jbe
pusha
cdq
cmp
push
sbb
sub
in
(bad)
in
xor
xchg
popf
jae
cmps
mov
test
bound
jg
in
xlat
sahf
hlt
mov
cmp
xor
ins
pop
imul
loope
cmp
stc
sub
sbb
sub
jmp
outs
cli
push
cmp
in
stos
and
loop
sbb
mov
scas
and
fild
js
mov
inc
retf
stos
stos
mov
inc
popa
dec
cld
jmp
mov
jp
xchg
mov
xchg
int
add
arpl
jg
xchg
(bad)
inc
hlt
mov
cmp
cli
into
mov
loope
xchg
pop
cld
fbld
add
mov
dec
jp
pop
ins
mov
imul
rcl
cmp
pop
jl
jmp
pop
xchg
sbb
(bad)
dec
int
lods
cld
pushf
mov
std
arpl
aam
mov
sub
stos
mov
push
mov
scas
and
jno
dec
(bad)
mov
addr16
cli
call
sbb
add
inc
dec
lods
push
pop
push
cmp
jl
js
ja
shr
dec
or
inc
bound
cs
xor
xor
cmps
push
xor
shl
mov
mov
jae
xrelease
mov
aam
pop
rcr
cmp
dec
or
ret
add
xchg
fsub
push
addr16
test
add
cmp
and
adc
in
nop
sbb
inc
lds
or
popf
stos
dec
shl
mov
cmps
add
pop
mov
(bad)
xchg
jp
add
pop
dec
popa
retf
mov
mov
or
out
and
test
cmp
cmps
jecxz
shl
push
mov
test
js
lods
enter
jae
add
mov
push
imul
rcr
xchg
cmp
(bad)
out
mov
es
ficomp
dec
int3
addr16
retf
fistp
lds
ret
add
ins
xor
mov
jmp
inc
dec
sub
pop
jmp
push
adc
in
test
jp
push
ins
add
inc
push
add
fucomi
shl
gs
add
(bad)
push
cmp
mov
ins
(bad)
push
mov
aaa
mov
ret
imul
sbb
(bad)
(bad)
loope
pop
push
xchg
dec
jecxz
popa
add
fs
call
cwde
fnstcw
sub
movs
add
outs
repnz
add
mov
inc
cmp
(bad)
shl
or
adc
repz
push
mov
outs
ret
sti
pop
xchg
jmp
xchg
mov
sub
mov
cmp
fmulp
out
inc
stc
cmp
pusha
xchg
test
fld
push
in
movs
mov
adc
into
aaa
adc
push
and
pusha
call
xchg
pushf
iret
call
cmp
xor
mov
mov
cmp
sub
add
jp
inc
mov
sub
mov
es
fild
out
repnz
mul
pop
ins
aas
pop
shl
clc
pop
cs
pop
fidivr
mov
js
jmp
sti
or
mov
dec
repnz
mul
(bad)
fsubrp
mov
push
inc
mov
mov
nop
sub
jecxz
push
adc
push
mov
jle
ins
cmp
mov
jg
and
xchg
cmp
adc
xchg
mov
int3
mov
sbb
push
cmp
dec
mov
aad
arpl
jecxz
(bad)
push
dec
mov
jl
icebp
movs
shr
cmc
fnstsw
push
(bad)
jns
loope
into
repz
lock
mov
dec
dec
xchg
test
lea
xchg
sub
loop
mov
test
cmps
aam
ret
clc
jle
shr
call
jno
mov
lods
ficom
js
pusha
inc
dec
cmp
je
jge
adc
adc
mov
sbb
inc
mov
(bad)
fmul
ret
mov
test
jp
or
add
arpl
xchg
mov
std
xor
icebp
jb
mov
stc
sbb
adc
bound
mov
pop
bnd
ins
outs
call
xlat
mov
mov
in
cmps
das
pop
push
(bad)
ffreep
or
push
mov
cld
(bad)
(bad)
xchg
push
jmp
test
call
mov
jno
xlat
sbb
call
xchg
inc
and
cmp
out
fisubr
and
jo
sbb
push
test
scas
mov
iret
ret
test
jp
leave
lock
cmp
jle
bound
mov
cwde
inc
aaa
call
mov
mov
fisttp
xor
mov
adc
adc
mov
mov
mov
xor
std
xor
mov
and
mov
jle
or
test
jo
loope
aas
dec
cld
jmp
ins
ret
arpl
mov
mov
or
aam
dec
cmps
jns
loopne
adc
sub
adc
(bad)
imul
les
mov
(bad)
in
fist
nop
loopne
xor
cdq
ret
xlat
imul
jno
jae
or
pushf
dec
fdivp
scas
jns
stc
sbb
repnz
dec
adc
mov
std
in
mov
movs
cmp
retf
jno
ficom
xchg
push
arpl
iret
adc
cdq
push
retf
shr
jne
mov
dec
push
pop
adc
sbb
popa
repnz
in
adc
arpl
xor
sub
retf
add
clc
adc
mov
adc
cmc
aas
fcomp
fs
cli
inc
pop
rcl
mov
add
push
cmps
retf
mov
call
jne
rcl
sbb
inc
movs
ret
jns
xor
push
call
inc
(bad)
int3
repz
push
sbb
in
lods
push
fs
cdq
arpl
fcom
or
adc
inc
cmps
add
das
out
sub
ds
add
das
xor
mov
mov
xchg
outs
fwait
movs
fstp
add
loopne
lock
clc
scas
iret
iret
mov
xchg
or
or
add
sub
cmc
in
jge
cmc
mov
jp
sti
mov
in
int
sti
adc
jecxz
out
test
or
and
mov
cmp
movs
mov
scas
and
sub
mov
lahf
int3
call
mov
push
scas
add
out
(bad)
addr16
sub
push
adc
push
loope
push
cdq
test
jle
jnp
add
mov
scas
xchg
sti
cmps
inc
aad
rcl
jmp
cmps
sub
push
mov
pop
mov
sbb
push
xchg
call
jns
pushf
fxch
xchg
sub
movs
aad
add
mov
outs
(bad)
shr
pop
hlt
mov
test
les
pop
test
mov
pop
ror
stos
fsub
mov
push
lock
ffree
daa
aam
push
imul
push
inc
cmps
pop
adc
(bad)
xchg
mov
pusha
mov
addr16
mov
scas
aad
xchg
jns
mov
mov
les
sub
addr16
push
cld
(bad)
and
mov
rol
sbb
mov
dec
(bad)
in
add
add
adc
call
jae
(bad)
pop
or
dec
xchg
cmp
ins
mov
pop
cld
nop
nop
fdiv
daa
popf
mov
xor
leave
out
xchg
or
movs
add
dec
test
mov
pop
mov
pushf
and
push
cmp
aas
gs
xor
imul
or
fstp
or
mov
sub
cmp
ret
imul
mov
mov
push
fiadd
ror
mov
xchg
sub
cmp
adc
mov
lahf
mov
sub
mov
les
pusha
mov
cmp
mov
mov
cmp
sub
mov
into
scas
aad
bsf
xchg
pop
shr
cmp
dec
mov
sub
pop
push
in
push
jp
or
aaa
jg
sub
in
popf
mov
mov
cmp
jecxz
out
mov
or
push
jo
sahf
mov
cwde
push
add
inc
(bad)
and
cmp
xchg
out
pushf
aas
jmp
pop
jmp
movs
and
dec
push
xchg
aad
jl
adc
lock
pop
mov
fcom
movs
adc
out
xor
into
movs
sbb
in
xor
mov
call
dec
mov
stos
sbb
out
fwait
mul
les
sbb
push
sbb
or
imul
pop
das
sbb
jno
inc
dec
cmps
mov
mov
mov
cld
xor
mov
jg
adc
sbb
jmp
jo
scas
cmp
cwde
mov
aad
rcr
in
xchg
xchg
movs
push
and
enter
adc
ud2
dec
add
xchg
shl
xchg
inc
outs
xchg
inc
popa
pop
mov
push
pop
add
add
aas
push
movs
pop
dec
add
aam
jbe
pusha
js
aam
gs
push
jnp
inc
push
leave
adc
mov
fadd
stc
outs
push
pop
fstp
ficomp
pop
push
sub
inc
icebp
inc
xor
in
sub
mov
dec
sbb
xor
jbe
cmps
rol
sbb
mov
dec
or
fisubr
gs
enter
mov
sbb
das
(bad)
not
out
hlt
out
enter
mov
inc
cdq
adc
cld
aad
daa
push
jecxz
test
pop
mov
pop
stos
jo
sub
mov
xchg
push
out
push
push
xor
xchg
inc
call
inc
fsubr
jnp
and
shl
push
int3
rcr
fst
mov
and
gs
ja
or
xchg
inc
sbb
xor
xor
push
test
dec
cwde
mov
xor
push
in
cmp
dec
pop
jbe
sbb
out
ret
mov
sahf
xchg
clc
cmc
inc
cdq
imul
push
addr16
add
fidivr
and
mov
jmp
inc
pop
(bad)
fwait
pop
pop
mov
dec
cmc
cmp
fbld
gs
scas
push
dec
or
int
cld
adc
aaa
jnp
and
icebp
rol
(bad)
rcr
lods
(bad)
ficomp
xchg
fild
out
ds
push
(bad)
sbb
std
imul
movs
iret
repnz
movs
in
pop
test
jmp
dec
or
add
call
fs
mov
stc
ret
stos
add
aaa
ror
dec
push
fwait
ja
jecxz
push
push
in
nop
test
out
pop
repnz
jge
(bad)
ror
mov
fisub
cdq
(bad)
pop
pop
stc
data16
(bad)
xchg
push
stos
sub
dec
pop
aas
add
aad
mov
push
aad
xchg
fsub
jbe
add
mov
repnz
cli
mov
xor
lods
mov
aas
in
ja
fdivr
push
dec
or
(bad)
outs
jg
lds
add
dec
adc
retf
femms
iret
scas
mov
adc
hlt
and
aad
dec
cmp
or
aad
adc
aam
mov
mov
in
and
call
xchg
jno
retf
sub
mov
pop
fwait
mov
xor
jbe
xchg
ss
jmp
(bad)
cmps
aam
lock
sbb
mov
cld
imul
inc
bound
add
mov
xchg
adc
ficom
mov
std
fisttp
xor
jnp
std
sbb
xor
jae
loop
adc
scas
sbb
jae
jo
stos
pusha
enter
mov
push
pop
dec
cmps
test
in
xlat
xchg
jno
rcr
inc
out
sar
out
neg
pop
ficomp
xchg
jbe
fistp
xchg
push
icebp
pop
cmp
dec
mov
test
inc
out
dec
ins
cmp
enter
inc
or
jg
fnstcw
(bad)
mov
push
test
(bad)
rcl
dec
aas
or
xchg
cwde
clc
lods
mov
sub
shl
iret
and
pop
outs
(bad)
dec
ficomp
cs
sub
dec
aas
jb
inc
sub
in
inc
or
sbb
lea
mov
jb
jbe
and
push
sar
sbb
dec
ins
jae
mul
repz
jbe
inc
mov
pop
enter
and
test
jp
xor
cmp
movs
and
out
add
inc
jbe
or
(bad)
sbb
add
fnsave
shl
ja
jle
aam
ins
pop
cwde
pop
add
xor
jg
shl
stc
mov
push
inc
scas
mov
aas
inc
mov
jmp
in
(bad)
repz
sar
and
fiadd
out
lea
sub
inc
cmp
xlat
xchg
pop
or
inc
pop
movs
cwde
nop
fwait
ins
pop
in
mov
cmp
ins
test
and
je
cmp
and
push
jmp
test
(bad)
lahf
(bad)
mov
hlt
and
repnz
push
mov
mov
push
mov
(bad)
rcl
cmps
ret
fistp
jae
ret
out
cmp
adc
shl
inc
leave
mov
inc
arpl
mov
sar
shl
cwde
jns
loope
mov
inc
sub
or
or
aam
enter
nop
outs
mov
mov
push
sub
aas
outs
pop
out
jge
mov
aam
xor
shl
xchg
xchg
mov
(bad)
idiv
cmp
outs
imul
aad
je
mov
loopne
and
mov
nop
test
(bad)
les
fwait
mov
outs
sbb
ins
mov
cmp
dec
aas
jge
xchg
ins
inc
into
add
cmp
xor
ss
sub
mov
ret
inc
mov
scas
popf
push
jmp
rcr
imul
xor
data16
xchg
add
xor
mov
out
(bad)
jne
out
dec
leave
xchg
repnz
xchg
cmp
shr
aad
aas
icebp
pop
pop
leave
add
push
jmp
cmp
rcl
movntps
(bad)
je
fistp
xor
cmp
push
jmp
xor
push
ret
jge
add
cmps
mov
shl
pop
arpl
mov
cmp
scas
fsubr
fistp
adc
dec
jb
sbb
xchg
adc
jmp
jbe
mov
out
call
icebp
cld
mov
shl
mov
imul
out
or
push
mov
outs
mov
push
es
mov
ins
mov
test
mov
stc
jnp
add
adc
push
jecxz
outs
fiadd
rcl
mov
dec
sub
out
push
mov
inc
pushf
les
outs
mov
sahf
or
jmp
icebp
shl
jecxz
mov
or
cs
push
sub
das
mov
test
js
into
call
adc
fcmovnu
and
and
mov
add
mov
and
aad
jae
scas
sbb
test
mov
aaa
inc
sbb
jmp
std
inc
lahf
push
and
xor
sbb
sub
mov
and
sbb
data16
inc
jmp
pop
push
lahf
xor
jns
iret
push
xor
xor
or
aaa
sbb
retf
mov
fidiv
mov
or
jno
(bad)
clc
or
push
lock
jbe
dec
loop
sub
cmc
(bad)
push
in
mov
or
sbb
jo
jg
push
pop
sub
dec
dec
aas
in
jl
and
pop
jae
popa
in
jg
lea
mov
addr16
xor
retf
fld
(bad)
in
or
repnz
push
xchg
imul
inc
aam
jmp
adc
cmps
(bad)
xchg
push
add
das
pop
inc
mov
jmp
xlat
push
cmps
out
mov
jmp
inc
(bad)
mov
mov
pop
jno
movs
aaa
retf
enter
retf
xor
or
ror
retf
mov
out
(bad)
cmc
mov
xor
(bad)
jb
(bad)
leave
shr
movs
aam
and
xchg
loop
sbb
out
retf
jp
xor
mov
inc
and
mov
rol
add
pop
push
shr
imul
pop
sar
jnp
or
or
mov
fbstp
push
cwde
mov
push
je
xchg
cmp
sbb
sub
inc
adc
adc
jl
pop
push
call
aas
(bad)
xor
mov
dec
dec
xchg
mov
mov
mov
jmp
shl
popa
mov
dec
pusha
retf
adc
in
das
ret
cwde
fwait
std
retf
add
inc
jne
stos
aaa
ret
xor
and
daa
pop
es
ficom
lahf
xor
ror
iret
and
scas
adc
jno
pop
pushf
cmp
cmp
sbb
imul
sub
mov
and
mov
or
ins
bound
mov
aas
mov
rcl
(bad)
(bad)
jg
sbb
outs
xor
cli
(bad)
push
xchg
jmp
add
das
sub
pusha
jg
lods
repz
mov
movs
sub
add
push
push
add
ins
out
jbe
repnz
sbb
add
fwait
or
cdq
or
jbe
push
shl
sbb
test
cmp
mov
aaa
cmps
inc
xlat
jae
aam
mul
leave
aaa
aaa
xchg
iret
ret
mov
cmp
cmps
jp
rcl
jne
mov
pop
fs
mov
out
sub
xor
push
fisub
(bad)
cmp
in
ins
push
pusha
fist
add
or
out
aas
cld
push
rcl
push
jo
xchg
lock
jmp
pop
jne
inc
aaa
int
stos
xor
dec
cmc
jle
sbb
xor
dec
cmc
sub
sahf
xor
retf
sub
sbb
pusha
jne
dec
mov
imul
leave
pop
add
lds
xchg
push
and
sbb
adc
pop
jbe
push
sbb
fstp
sub
cmp
push
sbb
fld
or
ss
cmp
inc
mov
push
xor
jne
push
into
adc
lock
retf
sbb
lods
dec
cld
test
inc
xor
pop
xchg
pop
sub
sub
sub
repnz
adc
out
inc
idiv
ins
and
aas
push
push
movs
shr
and
jae
and
cld
jecxz
or
push
aas
xor
dec
inc
and
into
in
add
or
push
das
lds
jle
push
pushf
xchg
icebp
dec
or
cs
fs
xchg
int3
cmp
mov
cld
(bad)
loope
cmp
pop
sub
ss
popa
push
adc
cmp
push
fdivr
cs
dec
imul
(bad)
and
mov
in
push
clc
loop
retf
stos
rcl
jae
scas
jg
cmp
jns
push
sbb
add
les
pop
xchg
jg
cmp
inc
push
mov
call
push
mov
xor
fs
retf
pusha
into
mov
push
jecxz
jg
jg
aaa
xchg
inc
jmp
mov
add
in
std
ins
add
dec
lods
out
lahf
push
iret
sub
xchg
nop
cs
mov
mov
adc
sti
sub
(bad)
(bad)
dec
out
mov
sbb
cmp
jne
rcl
fs
add
or
cmc
jl
mov
and
scas
dec
stos
out
fdiv
in
sbb
cmp
push
mov
(bad)
adc
jb
mov
sbb
ds
fimul
sub
mov
loope
ret
imul
cmp
je
cld
sub
jno
sub
pop
je
int3
sbb
stos
lea
retf
or
adc
addr16
inc
xor
sub
cmp
add
xchg
in
inc
mov
mov
cmp
out
stc
je
sar
adc
add
int3
fld
fidiv
adc
push
ret
and
xchg
add
or
pop
std
stc
xor
or
retf
mov
mov
cmp
xor
mov
mov
push
jbe
lock
imul
mov
jo
loopne
pop
push
or
fisubr
out
int
pop
jne
ja
lea
cmp
(bad)
adc
mov
add
mov
and
adc
sbb
cmp
pop
or
sbb
in
push
pop
stc
sub
inc
sar
out
pop
fidivr
leave
pop
add
scas
jo
es
sbb
ss
mov
inc
(bad)
adc
cmp
jle
pop
cmp
jg
xchg
rcl
push
fdivrp
scas
inc
mov
inc
push
je
loopne
ja
adc
push
or
pop
mov
out
into
adc
in
mov
aaa
arpl
inc
out
out
sbb
or
push
fistp
inc
shr
pop
std
iret
jg
call
push
mov
sbb
cdq
popa
nop
mov
xchg
xor
cmc
fdivr
sbb
mov
mov
ja
mov
clc
fist
dec
cmps
and
dec
adc
or
cmps
xchg
jns
pop
cmp
mov
xchg
xchg
cdq
loop
sub
or
stos
jle
push
xor
adc
std
sti
shr
in
test
adc
movs
adc
mov
jg
cli
scas
jnp
xchg
xor
int
arpl
fcmovnbe
sbb
dec
sbb
int
push
dec
add
adc
dec
ins
cli
in
(bad)
push
std
repnz
inc
lds
push
iret
ja
pop
or
daa
and
jns
sar
xchg
pop
mov
pop
ds
cmp
pextrw
fsub
jne
inc
test
and
(bad)
nop
push
xchg
in
dec
adc
retf
stos
lock
and
das
and
xor
xchg
push
or
ret
sbb
jae
pop
inc
test
test
fdiv
int3
push
movs
inc
mov
test
sub
pop
fsub
add
inc
mov
xor
stos
arpl
into
repnz
cmp
test
mov
or
and
call
fwait
inc
add
sub
int3
int3
sbb
xchg
xchg
xchg
or
cmp
jp
mov
push
pop
cs
jge
mov
mov
scas
mov
(bad)
jbe
pop
call
fwait
repz
xchg
adc
and
xor
pop
test
sar
lods
dec
je
cmp
adc
or
mov
xchg
sbb
mov
mov
pop
xchg
retf
xchg
inc
pop
mov
adc
mov
add
cmps
cmp
stc
pop
je
lods
scas
sar
rcr
stos
dec
stos
xchg
mov
stos
jmp
adc
loope
aas
cmp
cmp
dec
and
movs
adc
mov
sub
jmp
mov
or
pop
jmp
xor
(bad)
shl
or
sub
or
dec
in
mov
and
inc
xchg
cli
sbb
(bad)
mov
es
cmp
cmp
mov
ss
mov
adc
(bad)
bsf
mov
fadd
pop
mov
push
dec
cmc
push
ficomp
xor
mov
cmp
add
stc
jns
test
sub
xor
stos
cmp
mov
inc
daa
sbb
mov
mov
cld
push
inc
addr16
mov
pusha
fwait
mov
inc
icebp
ret
dec
rcr
enter
call
lds
jo
jae
jge
add
aam
imul
pop
inc
nop
xor
sti
leave
jb
adc
xor
lods
lods
rol
popf
repz
xchg
mov
les
out
xchg
sbb
pop
xchg
inc
inc
repnz
mov
rol
scas
xchg
arpl
push
int3
outs
cmp
sub
enter
loopne
fs
lahf
ror
fisttp
mov
inc
jnp
mov
loop
xor
lock
jmp
daa
pusha
push
int3
ins
addr16
adc
or
fsin
out
call
ror
inc
ficom
jbe
pop
sub
or
push
xlat
mov
pop
jmp
xor
ror
pop
xchg
mov
adc
addr16
frstor
push
leave
pop
mov
in
fsubr
test
jle
jl
vphaddwq
hlt
cwde
stos
push
mov
mov
jae
clc
adc
xor
push
push
xlat
jle
pop
mov
hlt
in
out
and
das
retf
and
jno
mov
pop
ins
ret
pop
ja
mov
popf
dec
ins
add
rol
aam
push
fist
das
cwde
sti
mov
xchg
(bad)
sub
jge
or
push
out
sub
adc
mov
push
fmul
gs
xor
mov
or
mov
shr
arpl
inc
test
sub
sar
cmc
daa
mov
adc
imul
add
call
loope
scas
add
sbb
test
cmc
in
push
out
add
dec
popf
or
(bad)
jbe
sbb
pop
pusha
cdq
sub
out
clc
xor
or
in
xchg
into
xchg
or
cmp
push
dec
adc
adc
xchg
scas
push
loope
fwait
cli
pop
enter
mov
mul
(bad)
(bad)
repz
dec
and
adc
push
push
ret
xor
dec
cmp
leave
ucomiss
adc
cmp
inc
sti
popf
bound
jbe
bound
imul
inc
nop
out
arpl
cli
addr16
mov
push
cwde
sub
xchg
ret
sub
shl
pop
mov
adc
or
cmc
or
imul
mov
(bad)
pop
jmp
inc
cld
inc
and
out
xor
jecxz
and
jo
sti
pop
dec
mov
mov
data16
add
aaa
sub
loop
jp
sub
popf
mov
and
sbb
shl
add
cmp
dec
pushf
or
cld
bnd
imul
retf
jg
test
mov
scas
mov
cmp
cmp
aam
fcmovne
sub
xor
xchg
mov
push
daa
repz
pop
pop
push
add
or
sbb
inc
int
fidivr
fnsave
dec
xor
pop
mov
ret
xchg
loope
and
daa
fsubrp
shr
punpckhbw
(bad)
jp
add
(bad)
retf
mov
mov
push
cmp
dec
sbb
outs
imul
push
fs
lods
adc
mov
mov
lods
es
shr
mov
pushf
push
es
stos
in
mov
mov
(bad)
stos
mov
push
sbb
jg
fcom
mov
push
inc
sti
pop
scas
push
pop
and
mov
cwde
outs
daa
int3
mov
add
mov
mov
inc
loopne
fs
mov
cmc
and
daa
mov
jecxz
and
imul
jp
fst
adc
pop
xor
mov
into
push
pop
mov
retf
icebp
and
fistp
inc
out
xor
adc
mov
inc
or
inc
in
pop
repz
retf
or
dec
(bad)
ds
xchg
xor
movs
xor
add
sbb
dec
add
xor
lds
cmp
in
add
ret
out
cmps
lods
push
xor
adc
fs
inc
div
dec
js
and
pushf
(bad)
cli
fild
out
xchg
and
daa
call
arpl
inc
movs
mov
sbb
jg
adc
mov
rol
jmp
dec
inc
mov
jge
lds
mov
mov
sbb
adc
pushf
cmp
jge
xchg
and
jns
imul
sub
clc
add
outs
jmp
in
mov
sbb
jecxz
int3
cmps
cmp
sub
sbb
fnstenv
cwde
or
ret
imul
push
mov
pop
div
in
lock
mov
pavgw
inc
sti
out
mov
push
or
lea
sub
stc
mov
sbb
mov
xor
daa
je
shr
mov
retf
xlat
js
jb
test
or
xor
pusha
and
dec
repnz
jne
lahf
sbb
(bad)
pop
mov
push
popf
mov
fdiv
lds
mov
(bad)
sbb
arpl
retf
cmp
jno
jno
aas
mov
push
movs
call
inc
sub
pop
jge
(bad)
cmp
data16
mov
inc
adc
and
lahf
aad
xor
pop
and
lock
jno
add
(bad)
pusha
not
jecxz
mov
lods
push
mov
jne
outs
fs
test
mov
mov
fiadd
and
cmps
fcomp
stc
xlat
pop
mov
push
pop
or
dec
movs
mov
scas
sbb
push
sub
cmp
jo
aas
pop
sahf
push
loopne
xchg
add
stos
inc
sbb
xor
push
mov
or
bound
or
das
adc
add
mov
inc
(bad)
add
sti
data16
cmps
fcmovu
enter
sti
bound
push
pusha
and
push
(bad)
fiadd
sub
pop
addr16
fcom
adc
into
lahf
or
mov
gs
sbb
loope
or
lods
jb
sub
loop
xchg
cmps
iret
pop
cmp
adc
sbb
fst
push
sub
xor
mov
cmp
mov
adc
xor
in
xor
(bad)
sbb
das
jbe
jne
jp
inc
mov
mov
ror
test
sbb
add
add
ret
and
mov
mov
in
clc
mov
inc
dec
mov
mov
inc
xchg
dec
add
push
cmp
fldenv
mov
shl
mov
push
pop
sbb
mov
cmp
fldcw
lods
jns
xor
mov
cs
xor
in
mov
test
cmps
mov
push
mov
lahf
fistp
or
dec
dec
pop
sar
out
out
call
fmul
ss
stos
mov
in
sar
mov
(bad)
cwde
int3
mov
fisttp
cmp
pop
lods
and
(bad)
push
inc
arpl
jl
cmp
fist
sti
cmp
and
push
jo
sub
cmp
inc
ret
and
cmp
add
jns
aas
dec
adc
mov
jle
aad
out
xchg
(bad)
rcl
in
adc
ret
test
sub
push
sbb
push
ja
mov
ret
aad
stos
push
xchg
add
pop
sti
icebp
popa
push
int3
mov
test
popf
out
jne
mov
xchg
stos
adc
fsubr
ss
mov
shl
mov
pop
outs
mov
add
loope
dec
mov
outs
push
std
lock
cmp
jp
adc
inc
xor
push
dec
mov
sbb
or
test
pop
les
cmp
aam
add
lock
out
(bad)
adc
or
xchg
lods
sub
retf
ret
(bad)
or
js
xor
mov
sbb
adc
rol
sbb
bound
or
jbe
sub
call
push
cld
fs
sub
jmp
jae
lods
imul
pop
sub
ret
pop
push
fwait
add
inc
xor
mov
imul
push
in
mov
pop
pop
sbb
das
test
es
xchg
mov
adc
test
pop
clc
leave
sbb
xchg
test
retf
adc
sbb
mov
jae
js
push
lods
push
sub
jno
popa
in
call
out
dec
adc
inc
mov
fbld
aas
or
xchg
inc
fwait
sub
mov
sti
sub
or
jnp
data16
int
(bad)
dec
gs
pushaw
loopne
sub
out
es
or
enter
(bad)
unpcklps
in
and
cdq
sbb
inc
mov
aad
mov
imul
push
stos
hlt
out
add
cwde
repnz
int3
mov
movs
cwde
xor
mov
arpl
enter
cmp
imul
or
jno
cmps
aad
xchg
and
pop
lock
fwait
lods
loop
cmp
mov
mov
in
jmp
mov
cmps
mov
std
ret
popf
mov
ins
adc
mov
inc
popa
dec
dec
mov
sub
add
daa
pop
in
sub
sub
imul
and
dec
sbb
ror
add
les
dec
mov
lds
js
and
dec
mov
(bad)
ins
jecxz
ds
rcr
stos
cld
sbb
imul
vpxor
xor
xchg
dec
cmp
mov
out
(bad)
outs
jg
cwde
and
jbe
or
(bad)
(bad)
pop
icebp
sbb
int
iret
hlt
int
aas
sub
adc
push
dec
dec
dec
scas
fisttp
mov
(bad)
(bad)
(bad)
iret
das
xchg
and
mov
pusha
(bad)
xchg
inc
and
iret
gs
or
add
retf
cld
and
shl
jecxz
fs
pop
add
sub
jns
jp
in
push
mov
cmp
scas
loope
pop
fnstsw
sub
ret
jbe
xor
push
mov
(bad)
cmps
dec
ret
clc
xchg
inc
adc
mov
pop
pop
std
(bad)
gs
icebp
jbe
fs
push
pop
pusha
mul
push
jo
mov
mov
cmp
xchg
mov
nop
pop
and
(bad)
shr
shr
les
pop
repnz
lahf
sbb
jl
retf
adc
xchg
inc
(bad)
sti
sub
sbb
test
popf
pusha
mov
pop
sbb
xchg
retf
push
adc
mov
and
cmp
ror
fld
adc
mov
fsub
xchg
jmp
cmp
rcl
mov
(bad)
lods
(bad)
movs
fwait
and
xor
das
fisub
pop
mov
add
push
push
cmps
mov
cmc
in
push
cmp
mov
(bad)
jbe
in
lods
int
daa
sub
repz
lea
jb
inc
test
add
jno
mov
jb
loope
jmp
xchg
scas
cmp
adc
or
inc
lds
fimul
movs
(bad)
pop
adc
jg
pop
or
add
xor
test
dec
loopne
not
jmp
push
mov
pushf
adc
jb
retf
pop
cdq
jg
xor
loopne
sbb
adc
(bad)
xor
movs
call
adc
push
add
or
and
push
push
dec
jnp
cwde
(bad)
(bad)
fisttp
mov
dec
in
sahf
hlt
cmps
daa
xchg
das
shl
aaa
and
mov
dec
hlt
je
xor
mov
add
push
repnz
ficom
leave
call
ret
sbb
pushf
test
sbb
cmp
imul
mov
push
fadd
rcr
(bad)
pop
dec
xor
mov
jno
jb
cmps
imul
lods
jecxz
xchg
pop
les
sbb
cmp
aaa
ja
call
jb
dec
inc
or
mov
ins
sub
adc
mov
jnp
jecxz
mov
pop
shl
ds
cmp
add
dec
sbb
test
sbb
push
mov
test
adc
mov
loop
push
idiv
xchg
ins
inc
lods
xchg
inc
sbb
push
sbb
jnp
out
push
jg
imul
and
mov
dec
xchg
jmp
xor
lahf
push
dec
inc
icebp
aam
inc
sub
jmp
jne
mov
and
les
arpl
add
cwde
int
adc
sti
sub
mov
add
pop
scas
mov
inc
sbb
fistp
retf
jno
in
imul
push
cmp
and
sbb
shl
mov
push
xor
sub
sahf
lds
cli
pop
imul
les
or
retf
sar
add
adc
jle
int
(bad)
add
in
xchg
push
test
stos
cmp
inc
test
gs
es
dec
leave
imul
and
cmps
mov
jmp
mov
push
push
sub
mov
ret
cmps
fistp
inc
neg
clc
out
lods
imul
add
fisttp
mov
xchg
mov
es
test
addr16
outs
inc
pop
fucomip
sbb
repz
push
sbb
cmp
je
mov
push
adc
or
pop
cmps
test
mov
aam
div
adc
clc
test
je
outs
sbb
sbb
mov
mov
daa
mov
sub
add
jecxz
(bad)
dec
pop
mov
jge
leave
push
test
sub
repnz
cld
ja
iret
xchg
jg
sub
pop
bnd
jnp
pop
cwde
xchg
sbb
xlat
mov
scas
jg
jno
popa
jns
jb
fisttp
clc
push
arpl
inc
cmps
pop
sub
pop
fnstsw
sub
cmp
out
pop
mov
dec
sahf
pop
cwde
jmp
cwde
mov
cwde
cmc
arpl
call
test
ror
push
mov
aas
mov
dec
lock
rcr
adc
inc
cwde
jns
jb
jl
dec
cwde
stos
pop
cmp
adc
xchg
scas
and
mov
outs
cmp
lahf
push
xor
into
nop
repz
inc
pop
add
adc
outs
adc
rcr
xchg
push
test
or
cmp
fcom
test
push
loop
data16
jl
popf
sbb
gs
imul
sub
jne
out
adc
fmul
cmp
ja
dec
fs
loopne
push
pop
pop
mov
inc
mov
es
out
sub
push
scas
jge
add
jae
or
stc
push
out
dec
nop
dec
ins
xchg
jle
es
jae
xor
inc
add
push
xlat
rep
push
xchg
or
shl
cli
sti
imul
jo
xor
imul
clc
jp
jl
aam
inc
cmp
(bad)
ss
int
add
sbb
test
or
push
sbb
sbb
adc
mov
jnp
jecxz
jl
dec
loop
or
add
push
js
xor
fidiv
mov
ja
push
stos
daa
clc
int
lds
cmp
cmps
in
shl
dec
das
or
dec
mov
and
xchg
jge
cwde
(bad)
mov
mov
daa
popa
add
inc
sbb
xchg
enter
test
pop
mov
mov
leave
std
lock
add
pop
xor
xchg
nop
mov
push
pop
dec
push
and
mov
push
jle
sub
sbb
fadd
out
push
inc
pop
sbb
retf
adc
lsl
jne
sbb
in
add
xchg
dec
xor
imul
add
mov
out
mov
pop
xchg
and
imul
lods
dec
test
cdq
mov
clc
sbb
add
sahf
imul
inc
dec
push
int
xchg
arpl
add
mov
push
mov
mov
adc
and
data16
mov
mov
adc
mov
fnstcw
push
aas
je
mov
jnp
mov
es
in
les
mov
clc
in
mov
dec
mov
icebp
or
push
jbe
je
ins
push
mov
out
mov
and
cmc
adc
or
ja
xor
enter
data16
aad
dec
jb
sbb
ins
mov
sti
dec
mov
add
or
(bad)
xor
mov
push
lahf
test
jae
inc
lahf
pop
pop
push
add
mov
cmp
popa
pop
in
(bad)
sti
push
dec
and
lahf
(bad)
push
cmp
into
fucomp
in
jne
ss
leave
(bad)
loopne
cmp
pop
mov
daa
scas
dec
cli
aad
pop
sub
xor
or
enter
retf
sti
out
int
push
pusha
and
cld
adc
aas
pop
inc
sbb
jl
adc
(bad)
inc
mov
call
dec
test
ds
gs
mov
xchg
sbb
stos
xchg
fist
lods
dec
and
movs
fxam
fimul
xor
push
sub
or
pop
xchg
sti
or
ins
bound
cmp
or
iret
jmp
inc
addr16
mov
(bad)
jle
or
and
call
cmp
bound
sub
inc
add
lods
xor
out
xor
rol
inc
pop
and
xor
(bad)
cmp
out
lahf
int3
push
fcmove
pop
and
dec
ins
xlat
sub
sbb
dec
repnz
or
mov
hlt
rcl
ins
lock
cmps
cmp
mov
(bad)
(bad)
push
mov
sti
jg
push
push
in
int3
icebp
xchg
pushf
ins
leave
xlat
or
cmp
lods
sbb
push
in
lahf
cld
sbb
fidiv
rcr
or
sub
aas
fnstsw
mov
xor
cmp
pusha
jo
jecxz
xchg
xchg
cmp
and
push
push
movs
jo
int
xlat
mov
je
mov
push
jecxz
cmps
rcl
sbb
outs
cmc
nop
lods
mov
jns
outs
push
sbb
mov
mov
jg
shl
fstp
leave
mov
ins
xchg
lea
inc
fwait
xor
jno
sbb
imul
mov
je
inc
xor
rcr
fst
dec
enter
or
push
aam
jl
xor
stc
sub
call
fld
shr
cdq
pop
inc
cli
push
adc
fst
and
adc
pop
inc
test
shr
sub
test
cmp
jge
or
mov
fisubr
in
lock
dec
sbb
imul
leave
dec
out
add
fbld
xchg
call
addr16
mov
xor
adc
mov
dec
in
jmp
push
jge
sbb
das
cmp
push
xor
sub
cld
mov
push
pop
test
sub
sbb
loope
stos
xchg
xchg
jmp
fwait
xchg
add
mov
jecxz
js
adc
push
and
and
sti
push
(bad)
enter
ds
sub
inc
call
xor
xchg
cmp
imul
(bad)
mov
jbe
in
jecxz
pop
cmps
inc
sahf
fcomip
mov
das
adc
mov
xchg
hlt
fldcw
push
push
push
fidivr
mov
xor
retf
jle
(bad)
jae
mov
lds
or
cmp
cmp
sbb
inc
pop
sti
dec
and
popa
imul
loope
sub
pop
mov
jle
jno
idiv
inc
ins
xchg
adc
and
dec
scas
or
and
or
sbb
in
cmc
mov
clc
xchg
pop
add
inc
sub
mov
sbb
push
pop
pop
jae
out
add
inc
pop
fcmovbe
js
sub
outs
mov
push
mov
cmp
mov
xor
ins
add
hlt
add
loop
adc
jno
mov
shl
jne
loope
cld
sar
cmp
add
pop
mov
mov
cmps
gs
int3
loop
or
or
std
jno
mov
(bad)
shl
push
mov
jecxz
add
arpl
pop
xor
jg
xchg
xchg
mov
cmp
imul
int3
add
sbb
jl
fstp
sub
add
imul
nop
xor
sub
clc
jg
movs
push
mov
shr
mov
ins
ret
mov
pop
and
mov
test
loop
call
mov
push
pop
pop
cmp
sbb
mov
dec
dec
clc
call
aaa
es
cld
mov
iret
fst
gs
bound
ds
mov
push
sbb
xor
out
or
fnstsw
push
bt
xchg
test
and
mov
ins
dec
sbb
dec
(bad)
jecxz
adc
pusha
mov
aam
sti
popa
cmp
test
retf
dec
inc
sbb
test
push
bnd
mov
sbb
push
aaa
or
adc
push
pop
dec
xor
mov
mov
fdivr
into
dec
jmp
mov
scas
add
cmp
cmp
enter
mov
and
sbb
outs
adc
xchg
dec
push
cmp
xor
jbe
loopne
sbb
movs
and
add
jb
pop
mov
add
xchg
adc
(bad)
call
lea
xor
fiadd
rol
jne
push
sti
cmp
sbb
and
rcr
adc
or
dec
ins
aas
push
lds
fwait
iret
push
daa
push
call
into
add
sbb
in
gs
mov
xor
fimul
sar
(bad)
push
cdq
popa
jnp
sub
nop
mov
xor
jo
push
push
addr16
or
and
jno
inc
fstp
leave
ret
lahf
mov
add
or
fstp
push
pmaxub
(bad)
mov
fwait
adc
jae
gs
aas
js
push
mov
sub
cs
add
sub
or
add
cld
adc
lods
xchg
dec
in
dec
in
jae
retf
mov
cmps
lods
repz
pop
imul
xchg
scas
xchg
or
push
sbb
fst
mov
lds
adc
pusha
loope
pop
test
cmp
inc
nop
lods
mov
inc
xchg
fstp
(bad)
in
cmp
pop
clc
iret
lds
push
cmp
push
mov
add
(bad)
xor
inc
pop
push
enter
mul
mov
mov
(bad)
jmp
pushf
mov
jo
in
sbb
mov
ror
xor
nop
add
cmp
add
sbb
add
add
leave
mov
shr
in
cmp
dec
bound
pop
iret
xor
js
movs
jg
pop
lods
cmps
int
or
jecxz
outs
or
shrd
retf
(bad)
scas
jmp
int3
not
jg
in
pop
stos
pop
xlat
leave
inc
xor
jae
neg
mov
pop
jecxz
xchg
es
dec
in
mov
mov
xor
int3
in
les
xchg
mov
sbb
pop
ror
aaa
pop
adc
or
in
inc
aas
cmps
int3
dec
in
dec
xchg
psllq
popa
imul
(bad)
test
adc
scas
inc
pop
fcomp
cli
cld
pop
(bad)
outs
or
and
adc
jnp
into
push
out
(bad)
rcr
mov
mov
enter
push
(bad)
cmp
jae
cli
(bad)
lahf
int3
push
xchg
sub
rol
push
jo
test
inc
in
lods
add
aad
xchg
sbb
mov
outs
jl
mov
std
inc
and
add
xlat
cmps
xchg
inc
aam
fmulp
xchg
sbb
js
out
cmc
mov
sub
sti
ins
sahf
mov
or
aad
ss
add
sub
sub
call
jb
test
(bad)
(bad)
mov
jbe
inc
push
mov
(bad)
sbb
(bad)
mov
out
rol
mov
adc
lock
retf
ficom
or
pop
adc
inc
lods
dec
ss
pushf
mov
stos
inc
mov
push
jo
mov
fsub
push
jle
cmp
mov
(bad)
mov
lock
std
rcl
addr16
aad
mov
sub
sbb
sbb
ret
jecxz
data16
xor
test
jns
fstp
xor
lock
xchg
fdiv
xor
inc
dec
and
push
adc
call
dec
mov
sbb
jae
das
inc
mov
in
pop
daa
je
jge
fisubr
inc
out
sbb
cmp
lods
sbb
dec
xchg
test
pop
mov
mov
(bad)
in
(bad)
(bad)
mov
ss
es
ds
push
std
xor
add
std
mov
mov
movs
fistp
sbb
pop
das
pop
ss
cmp
inc
std
sub
sub
or
or
or
pop
(bad)
add
pop
hlt
push
push
pop
push
jbe
retf
ret
xchg
nop
dec
loop
xor
mov
mov
dec
mov
dec
jb
jmp
std
pop
out
dec
push
popa
sbb
test
and
es
sub
or
mov
and
ss
outs
jge
pop
cmp
mov
mov
rcr
je
test
or
mov
mov
dec
and
mov
sub
jne
or
movs
xor
xor
xor
push
call
and
lods
in
push
outs
push
dec
es
shl
mov
push
jmp
and
mov
pushf
jmp
ret
imul
std
inc
out
dec
pop
or
and
stos
pop
push
xchg
scas
arpl
cdq
sbb
fdivr
pop
sbb
repnz
pushf
cdq
sbb
mul
jp
call
stc
mov
and
mov
fmul
push
add
pop
shl
(bad)
dec
pusha
shr
push
mov
xor
retf
pop
int3
ret
cld
fdivr
aas
sbb
and
nop
stc
xchg
dec
mov
or
cmp
in
ins
scas
arpl
inc
int3
inc
cmp
xor
add
int
push
pop
xchg
jge
std
rol
push
or
stos
cmc
and
retf
arpl
xchg
mov
mov
addr16
(bad)
movs
ficom
stc
jge
or
lods
fs
je
bound
mov
fwait
movs
loopne
cdq
add
add
in
icebp
sub
xor
repz
cmp
les
inc
dec
sar
pop
cmp
movs
movs
les
in
push
inc
imul
fsub
out
jle
pop
mov
jb
xor
out
inc
int3
test
repz
xlat
sbb
outs
adc
sub
sub
xchg
icebp
bound
icebp
xchg
or
jne
mov
xor
jg
pop
daa
xchg
mov
je
rcl
xchg
arpl
(bad)
gs
fwait
loopne
mov
add
cld
mov
out
push
scas
mov
bound
pop
xchg
jae
add
fs
mov
pop
mov
and
jne
dec
xchg
gs
cdq
pop
adc
inc
shld
ss
sbb
iret
dec
jns
icebp
pop
in
cmc
adc
loopne
push
(bad)
int3
and
adc
inc
std
xchg
jp
sub
pusha
hlt
adc
ds
dec
jnp
daa
std
je
push
dec
mov
js
xor
xor
dec
mov
fisub
cmps
(bad)
sbb
lahf
xor
fistp
lods
pop
pop
pop
std
xlat
sub
mov
lods
scas
repnz
fisttp
pop
in
ds
jl
lea
pop
shrd
in
imul
ucomiss
data16
pop
ss
gs
out
stos
jnp
jno
mov
mov
jno
icebp
and
inc
mov
push
adc
jb
push
test
xchg
es
out
rcr
jo
cmps
stos
(bad)
cmp
int3
jae
pusha
imul
jb
mov
icebp
cmps
mov
test
xchg
jle
and
push
dec
dec
mov
jmp
fwait
icebp
fs
lods
jae
(bad)
jmp
pop
idiv
pusha
jp
pop
jl
sbb
add
sti
mov
inc
mov
sub
adc
sahf
aaa
xlat
mov
out
mov
inc
iret
iretw
icebp
mov
aas
(bad)
sub
inc
ss
test
stc
sbb
push
shl
sub
add
xchg
sbb
mov
test
int3
add
push
xchg
sar
add
sbb
data16
sbb
cdq
sbb
nop
push
xchg
mov
adc
cli
(bad)
outs
push
out
xlat
les
mul
rol
mov
mov
repnz
adc
jns
xchg
fadd
test
mov
jne
into
enter
push
mov
rcr
jnp
xor
(bad)
movs
inc
aas
cld
adc
das
add
add
cmp
push
rol
call
xchg
js
or
cdq
add
ficomp
ja
cmp
mov
aad
mov
sar
clc
in
mov
mov
cld
adc
pop
lds
mov
xchg
xchg
scas
fstp
mul
and
xor
inc
add
std
repnz
(bad)
into
jecxz
punpcklbw
sti
mov
dec
mov
pop
in
mov
retf
mov
cmps
int
sahf
inc
mov
pop
jb
sahf
leave
in
mov
sub
fld
sub
mov
inc
jp
jne
push
mov
shr
jbe
pusha
cld
mov
cld
shl
add
sbb
push
test
fstp
jbe
int
cdq
push
sub
jae
test
mov
cmp
xchg
ja
and
fcmovb
cli
stos
aad
mov
call
xor
mov
stc
dec
push
fiadd
arpl
sub
jp
fnsave
add
adc
(bad)
in
mov
gs
ror
xchg
sbb
xchg
xchg
test
sbb
imul
adc
(bad)
into
out
les
ret
mov
add
test
jl
popa
paddw
mov
fisttp
cmp
inc
mov
lea
out
mov
loopne
enter
cmp
mov
and
int
sbb
jmp
pop
add
movntq
mov
ret
lock
sub
mov
popf
xor
ror
scas
stc
sbb
fwait
mov
inc
(bad)
retf
pop
xchg
xchg
inc
in
cli
mov
or
pushf
into
je
and
loop
add
ror
mov
and
adc
or
xchg
lock
push
fwait
rcr
das
inc
cwde
xor
inc
dec
nop
inc
stos
mov
jmp
adc
hlt
inc
movs
cwde
je
mov
ins
or
call
push
out
or
mov
(bad)
dec
mov
jecxz
add
mov
jg
(bad)
dec
or
shl
or
rcr
jecxz
aas
icebp
mov
das
pop
add
mov
jbe
adc
call
mov
or
cmp
pop
out
fisubr
push
repnz
fwait
jnp
pop
sub
in
imul
mov
pop
mov
push
out
push
sub
mov
daa
jae
test
iret
shl
xchg
jp
dec
push
push
div
into
jnp
mov
add
ret
mov
in
int3
or
pop
cmps
jle
pop
lock
push
jbe
mov
or
add
and
enter
mov
loopne
nop
nop
cmp
xchg
mov
fld
dec
push
xlat
sub
idiv
push
add
inc
rol
aad
fnstsw
or
and
jo
retf
popa
jne
xor
mov
pop
dec
jnp
lahf
paddsb
inc
outs
mov
sub
xor
pop
dec
xchg
fnstcw
aad
lea
bound
mov
in
out
lods
pop
jge
jae
cld
jl
sar
pop
enter
push
ret
mov
push
mov
icebp
push
nop
adc
sub
lea
and
jge
in
mov
aam
ret
mov
les
xchg
xchg
adc
loop
cmp
test
jb
idiv
test
loope
dec
test
xchg
xchg
hlt
call
jmp
inc
call
sub
out
dec
sub
(bad)
out
inc
rcr
pop
outs
jp
mov
std
cmp
cmp
dec
inc
xchg
cmp
jmp
icebp
or
jecxz
pop
repnz
mov
inc
shl
inc
(bad)
mov
xor
lds
cmp
ds
dec
loopne
mov
sub
cld
ja
cwde
add
fadd
mov
sar
ins
jp
add
push
shr
test
stos
mov
push
retf
or
imul
cmp
push
add
mov
in
mov
ret
(bad)
mov
push
jae
or
fwait
lfs
into
addr16
jl
or
hlt
ja
inc
jbe
dec
add
push
loop
arpl
adc
mov
xchg
push
pop
out
sub
mov
cld
jae
adc
jbe
jmp
sbb
jns
sub
add
sub
jne
sbb
repnz
retf
jns
or
add
mov
in
je
jmp
xchg
dec
xchg
cmp
pop
popf
sbb
(bad)
cmp
jne
and
adc
ss
mov
mov
push
(bad)
pop
imul
int
pusha
leave
sbb
call
in
ret
lods
mov
mov
push
xor
iret
aam
lds
int3
pop
xchg
ret
sbb
fdiv
dec
sti
sub
cmp
and
pop
xchg
mov
adc
cs
mov
sbb
js
dec
loope
jnp
call
mov
je
les
mov
sub
or
loope
aam
out
cmc
add
cmp
inc
dec
xor
out
jbe
xchg
scas
push
(bad)
int
mov
pop
mov
mov
mov
dec
xor
pop
outs
enter
push
std
sbb
xor
sub
dec
outs
xchg
ret
lods
iret
xchg
(bad)
and
mov
(bad)
out
shl
xchg
xor
clc
adc
mov
xor
add
hlt
movs
adc
outs
imul
xchg
pusha
mov
adc
mov
sbb
inc
movs
dec
stc
cdq
xchg
cdq
inc
ins
inc
pusha
test
clc
inc
fistp
jecxz
imul
cwde
stos
call
imul
xchg
fdivp
iret
(bad)
ins
shl
adc
cdq
mov
cmc
xlat
dec
outs
xor
xor
ror
or
cmp
push
loopne
push
cmp
scas
retf
adc
stc
pop
push
dec
push
ins
push
adc
mov
mov
sbb
push
movs
loope
call
inc
mov
sub
(bad)
not
stos
es
dec
stos
pop
add
xchg
pop
cmp
and
cdq
mov
jg
adc
and
pop
inc
xchg
int
dec
push
mov
push
sbb
push
rcr
jp
fisub
int3
pop
add
leave
lock
icebp
sub
cmp
jg
sub
jp
cwde
aaa
mov
fisubr
iret
hlt
push
xchg
jg
scas
lock
inc
lahf
jbe
movs
jae
mov
mov
sub
std
call
xor
scas
dec
and
adc
daa
add
xor
mov
clc
out
retf
pusha
mov
mov
retf
push
retf
mov
jns
mov
pushf
jno
ins
jne
jo
and
(bad)
out
dec
retf
in
pop
loope
cmp
mov
lea
(bad)
iret
imul
pop
fdiv
adc
int
inc
xor
xor
sti
jp
cmp
mov
cld
int3
mov
arpl
fsubr
pop
cli
fisttp
xchg
xchg
xor
push
in
pop
ret
adc
imul
sub
fmul
ror
stc
push
int
adc
dec
fiadd
lds
xchg
dec
mov
neg
std
in
rol
das
call
jae
outs
loope
pop
cld
test
jg
xor
mov
call
test
xor
lock
mov
or
idiv
add
sbb
sbb
dec
mov
sbb
pop
movs
pop
mov
pop
add
cmp
or
out
and
ds
out
push
push
(bad)
mov
in
mov
cmps
push
sub
sub
adc
pop
cwde
pop
mov
movs
adc
out
(bad)
in
mov
and
jecxz
or
mov
retf
aas
sub
aas
xchg
int3
stos
pop
mov
add
jnp
sahf
mov
retf
cmp
ret
add
jl
ds
sti
js
mov
cmp
test
pop
mov
jg
fld
push
shl
mov
pop
leave
cmc
adc
jno
mov
and
push
pop
mov
imul
clc
push
pop
jno
(bad)
and
ret
cwde
fbld
lods
scas
cmc
and
movs
adc
inc
lock
cmps
add
inc
or
and
test
pop
cmp
adc
pop
mov
fcmovnu
add
jle
push
sub
pop
dec
stos
inc
pushf
dec
jecxz
mov
mov
std
addr16
or
es
pop
xlat
jae
dec
mov
mov
mov
mov
cmp
xor
add
mov
jae
popa
into
pop
loop
adc
mov
mov
lods
pop
push
popf
fdiv
int
scas
jmp
mov
mov
scas
les
shl
push
sub
cwde
mov
dec
push
cmps
scas
cs
mov
inc
push
rol
data16
mov
aas
shl
addr16
pop
mov
inc
call
jnp
inc
xchg
lahf
iret
mov
retf
das
pop
(bad)
mov
stos
push
jge
enter
and
inc
leave
push
adc
fs
in
push
bound
jo
(bad)
or
retf
jbe
imul
jl
or
out
jb
(bad)
mov
cs
adc
repnz
or
sub
lods
das
loope
adc
shr
pop
or
adc
scas
loopne
rol
add
scas
fsub
push
call
stos
and
js
jecxz
shl
dec
cdq
stos
ds
push
sub
and
dec
nop
and
cmp
sub
push
and
lahf
add
push
jns
mov
or
cld
sbb
jmp
pop
and
out
(bad)
pop
xchg
xor
push
lds
scas
pop
push
mov
mov
bound
xlat
pusha
ret
jmp
enter
mov
sti
and
pop
and
stc
jb
fcmovnbe
daa
dec
sar
adc
retf
fild
test
les
sub
fstp
mov
jmp
mov
mov
mov
movs
scas
lea
jne
inc
outs
sbb
(bad)
cli
jmp
js
adc
sub
aaa
data16
cdq
cmc
fdivr
addr16
ins
mov
push
cmp
mul
push
inc
pop
and
mov
inc
xor
adc
sub
popf
xor
fs
push
outs
(bad)
sbb
arpl
sub
arpl
xchg
adc
imul
pop
out
pop
mov
cdq
pop
jl
push
in
mov
sti
mov
jbe
dec
mov
push
sti
mov
arpl
call
fist
je
aas
and
pop
mov
and
adc
bound
fnstcw
stos
jl
retf
xchg
sbb
ds
push
lea
aas
cld
(bad)
xchg
mov
sbb
repz
inc
mov
sbb
out
ret
enter
retf
sub
add
clc
fild
ret
aad
add
in
mov
push
pop
add
pop
stos
fs
mov
into
idiv
adc
in
sbb
cmp
dec
pop
aam
xchg
jmp
test
sbb
mov
mov
lods
leave
xchg
mov
aam
mov
jno
fisttp
xor
sbb
push
dec
outs
fcom
pushf
fs
outs
and
or
int3
inc
retf
cmp
push
retf
cmp
mov
xchg
data16
fs
scas
cmps
xor
sbb
cdq
mov
int3
nop
int
lahf
cs
adc
mov
pop
adc
mov
sbb
jge
fidiv
mov
sbb
sub
out
cdq
mov
xor
mov
lds
mov
shl
push
mov
repz
mov
cmc
add
xor
in
and
pusha
mov
xchg
cmc
mov
call
mov
mov
in
inc
mov
adc
test
shl
dec
inc
out
xchg
sbb
out
cmc
ja
cli
push
and
pop
ds
sahf
xor
push
in
push
mov
and
inc
dec
sbb
or
mov
neg
mov
call
int
and
push
addr16
retf
jne
repz
pop
cdq
aas
adc
inc
jnp
adc
jbe
(bad)
lock
or
gs
mov
mov
lahf
ror
(bad)
out
in
popf
add
or
test
mov
out
cs
push
addr16
rcr
pop
xor
xchg
daa
sub
or
test
movs
inc
pop
stos
stos
jp
(bad)
jns
icebp
retf
daa
(bad)
rol
inc
std
out
cmp
cmp
dec
ds
jo
mov
es
xlat
addr16
in
jl
cli
jl
in
dec
loopne
or
sti
out
mov
cwde
enter
add
xlat
mov
cmp
xchg
icebp
jno
clc
push
jmp
out
jg
mov
xchg
out
in
dec
pop
add
pop
adc
std
addr16
mov
sbb
xchg
popa
cmc
cmp
or
cdq
mov
jle
stos
jbe
std
test
adc
rcr
lds
jle
sti
xor
sbb
fdiv
dec
aas
aam
sub
test
test
sbb
push
(bad)
rcr
clc
in
mov
push
aas
lock
loop
inc
not
sbb
cld
inc
inc
lds
ficom
sar
inc
pusha
push
ret
push
ds
inc
push
cdq
mov
fwait
cmp
stos
loope
outs
pop
or
out
inc
cmp
fdiv
test
ins
out
ret
sub
mov
frstor
xor
sub
imul
fisub
ror
jns
mov
cdq
aad
repnz
or
pop
rol
loope
jo
jns
add
inc
pop
and
imul
mov
rcr
int
push
cs
xchg
mov
(bad)
les
pop
push
fcmovbe
loope
stc
sti
push
push
call
and
push
jb
jne
(bad)
movs
jge
and
imul
mov
(bad)
aaa
mov
and
fwait
add
ds
xchg
test
sbb
jno
into
sahf
cmp
out
xchg
movs
push
and
xchg
ror
loope
(bad)
mov
retf
clc
aaa
scas
outs
(bad)
ins
imul
and
inc
mov
push
rcl
jg
lods
and
sbb
sub
mov
adc
cmp
pop
mov
pusha
shr
add
gs
sar
pop
add
sub
push
fadd
pop
loope
push
or
jl
push
icebp
adc
xor
cmp
scas
test
or
xor
jmp
jno
mov
retf
sub
jmp
dec
getsec
cs
in
and
(bad)
ds
in
jecxz
sub
dec
pop
dec
inc
out
stos
push
and
mov
add
test
ds
xor
push
adc
sbb
cmps
cmc
test
or
lock
enter
cdq
popa
fdiv
repz
sbb
aas
loop
push
mov
lahf
or
mov
nop
jl
arpl
fs
push
jns
mov
mov
ja
shr
mov
fbstp
mov
(bad)
pop
push
sbb
adc
lock
add
lahf
adc
pop
clc
ret
xchg
addr16
jl
sub
adc
fisttp
ror
inc
not
sbb
iret
cs
mov
xchg
shl
cmp
enter
icebp
mov
or
icebp
push
aaa
sbb
mov
or
cmp
hlt
movs
push
jg
and
xor
inc
jmp
(bad)
pop
push
xchg
sbb
dec
jnp
sar
in
add
std
or
popf
sbb
mov
ret
mov
loopne
xchg
cmp
inc
xlat
adc
icebp
and
repnz
dec
stos
cmp
das
outs
push
mov
bound
fsub
push
mov
jbe
adc
loope
mov
cmp
mov
cdq
xchg
sti
push
ret
ret
and
jg
jg
add
mov
add
push
in
in
(bad)
(bad)
jbe
out
add
retf
mov
mov
je
mov
jne
dec
add
adc
test
(bad)
int3
or
sub
in
aam
xor
or
ins
mov
loopne
fidiv
xor
cmc
push
int3
aam
rcr
stos
inc
cmp
je
dec
mov
lahf
call
pop
pop
pop
adc
mov
mov
sbb
add
gs
mov
add
ins
test
mov
pop
cmp
(bad)
jo
dec
and
mov
dec
cmp
mov
adc
scas
jns
ret
ins
ret
sbb
daa
sub
mov
push
mov
popa
lds
out
pusha
ss
mov
sbb
mov
sub
(bad)
jno
xchg
pop
in
ins
cmp
dec
adc
inc
aaa
fcmovne
pop
(bad)
call
cdq
cmp
inc
jne
sbb
pop
jb
js
(bad)
scas
or
mov
fcom
sbb
bnd
pushf
jmp
mov
(bad)
mov
sti
js
pushf
loope
cmp
xchg
adc
add
and
xchg
mov
stos
(bad)
data16
cmp
and
sbb
xor
mov
inc
or
ins
mov
enter
stos
jnp
ja
xor
jp
hlt
fst
and
xchg
sbb
retf
sub
dec
xchg
push
scas
jg
fisub
xor
clc
test
mov
cmp
or
xchg
scas
adc
mov
ret
es
mov
cmps
add
mov
sub
test
test
sub
sti
jle
gs
adc
xor
sar
mov
inc
fiadd
leave
cmps
shl
xchg
ins
sub
in
inc
xchg
xor
add
bound
and
push
xrelease
in
das
cmc
scas
inc
xor
or
inc
xchg
addr16
shr
test
push
cli
inc
sub
gs
iret
cmp
xchg
loopne
mov
jmp
fcomp
test
outs
jmp
cli
icebp
inc
std
inc
dec
and
xor
aam
icebp
jno
pop
adc
mov
pop
stos
in
sub
movs
bound
call
or
dec
add
sub
push
aas
(bad)
push
jecxz
jmp
mov
and
(bad)
arpl
shl
std
jmp
fdiv
jge
aad
imul
cmp
ds
or
aaa
sbb
out
inc
gs
std
pop
call
push
and
in
repz
cmp
xor
xchg
lods
add
mov
ins
in
push
rcl
ins
fst
pushf
ret
xor
xor
sbb
in
in
xor
scas
jmp
std
fsubr
jp
shl
adc
aam
loope
jns
(bad)
adc
ret
(bad)
call
addr16
xchg
repnz
mov
push
jmp
mov
mov
dec
(bad)
gs
adc
cmp
out
scas
inc
pop
cdq
add
xchg
out
xor
push
fdivr
les
shr
cs
outs
and
or
inc
mov
in
mov
pop
lods
lods
mov
cld
movs
int
into
pop
and
loop
push
shl
xor
cli
cmps
fs
fistp
xor
jecxz
cld
xor
sbb
lea
xchg
shl
pop
(bad)
dec
xor
or
xor
aam
push
inc
xchg
(bad)
push
push
mov
(bad)
inc
xchg
stc
push
pop
mov
mov
cmc
popa
rcl
cmp
jbe
mov
(bad)
cld
sbb
mov
lahf
dec
mov
test
rol
mov
pop
mov
adc
push
fiadd
aam
cmp
retf
mov
sbb
cmp
popf
push
shl
sub
dec
adc
dec
jno
jne
cmp
pop
cdq
sub
mov
repnz
stos
push
arpl
aam
call
cs
and
in
imul
les
daa
pop
in
in
stos
dec
xchg
xor
(bad)
in
outs
or
sbb
jae
mov
mov
sbb
nop
cmp
ror
lahf
pop
sub
int3
test
ins
sbb
pop
or
cmps
jb
test
(bad)
mov
lods
cmp
lock
lods
stc
push
pop
jmp
cmp
rcr
add
sub
sbb
push
xchg
cmp
loop
fadd
jecxz
and
or
in
inc
jmp
aaa
dec
pop
dec
sub
lods
scas
(bad)
mov
dec
and
inc
or
test
xchg
fwait
adc
shl
dec
mov
cs
and
rcr
std
or
js
dec
push
mov
les
into
or
sub
add
ja
inc
sahf
jle
push
push
stos
pop
lods
(bad)
aam
adc
xchg
aas
adc
movs
bound
sbb
and
dec
sahf
ss
mov
mov
push
shr
int
push
gs
push
inc
popf
sbb
pop
add
fs
mov
sbb
cmc
jnp
dec
add
inc
xchg
mov
hlt
push
push
inc
push
jmp
adc
adc
call
inc
adc
jg
aad
in
addr16
jo
out
test
or
fidiv
xor
push
das
fst
ret
aaa
inc
or
sahf
mov
in
xchg
sahf
xor
out
xchg
jnp
mov
jl
aad
mov
inc
mov
aam
dec
cs
and
in
sub
(bad)
cli
ds
lods
xor
and
int3
fdiv
jae
shl
cmp
mov
jge
cmp
call
rcl
sar
xor
shl
push
sbb
sub
outs
xchg
daa
fistp
ja
or
dec
vcomiss
add
add
pop
fiadd
retf
adc
pop
add
clc
sub
mov
stos
jp
(bad)
jg
and
xchg
dec
adc
int3
fnstenv
icebp
sub
dec
add
push
inc
out
xchg
imul
dec
popf
cmp
xchg
mov
adc
stc
clc
mov
aaa
mov
push
cmp
and
sub
sub
dec
adc
cmp
bound
mov
jmp
and
add
cmp
pop
in
arpl
push
lods
(bad)
je
aam
xchg
pop
pusha
es
fist
cli
pop
sahf
in
mov
ja
fucomip
xchg
mov
add
mov
cmp
icebp
cli
mov
dec
cli
push
mov
add
movs
fsubr
xchg
xchg
pusha
cmps
rcr
ror
push
sbb
outs
stos
fsubr
or
addr16
int
mov
sub
push
fisub
pop
sub
lods
outs
fsub
jae
outs
in
cli
lods
imul
xchg
cmp
push
mov
out
test
std
push
shl
cmp
pop
mov
inc
test
cmp
push
xchg
jne
push
jmp
jge
xchg
or
pusha
ins
call
scas
cwde
pop
mov
das
out
sar
mov
aaa
dec
or
xor
cdq
xchg
sub
aas
or
(bad)
retf
pop
sub
ins
mov
(bad)
and
dec
mov
dec
xchg
out
mov
and
mov
mov
mov
push
ret
pop
jno
push
js
jbe
popa
push
int
pop
fst
fsubr
jmp
inc
cmp
fild
outs
(bad)
push
mov
xlat
sub
pop
cmp
loop
mov
rcr
mov
js
lods
xchg
dec
jo
xchg
les
sub
test
popf
out
lock
rcl
mov
mov
and
dec
(bad)
jmp
repnz
inc
push
loope
cli
jp
jno
jle
in
ror
ror
inc
adc
sbb
in
jg
jae
je
dec
out
xchg
mov
shl
rcr
push
loopne
rcr
xchg
mov
lods
pop
adc
cwde
sahf
and
div
cs
xchg
mov
mov
fimul
jg
sub
iret
(bad)
retf
lods
pop
movs
cdq
frstor
dec
jb
mov
ins
sub
add
push
xchg
std
mov
mov
movs
jb
jbe
mov
dec
icebp
sar
ss
add
shl
ss
jp
call
and
inc
mov
mov
ds
ja
pop
dec
gs
pop
shl
mov
retf
cmp
cld
fisttp
jge
cmp
pop
push
cdq
cmp
mov
(bad)
(bad)
retf
shr
call
loopne
mov
pusha
adc
(bad)
mov
repz
test
mov
inc
lods
test
mov
push
out
dec
push
push
mov
repz
ret
sub
add
shl
jo
test
call
lea
mov
(bad)
pop
xor
pop
gs
xchg
adc
jle
jmp
sub
cmp
mov
and
sub
loope
(bad)
rcl
loopne
push
inc
jp
sub
es
dec
js
mov
cmp
cmps
ror
mov
mov
loope
mov
fcomp
stos
ja
inc
add
jmp
add
dec
jmp
mov
aas
imul
test
dec
cmp
inc
repnz
(bad)
repz
dec
ror
mov
xor
or
mov
mov
adc
fbstp
and
cmp
mov
cmp
and
mov
addr16
int
rcr
outs
lds
adc
mov
je
in
ficom
out
aad
stos
mov
inc
or
jne
cs
pop
cmp
jp
jecxz
sbb
dec
outs
add
jmp
cmp
add
xchg
mov
test
in
xchg
loopne
in
or
mov
outs
xchg
add
push
mov
or
sar
sub
mov
push
in
popa
sbb
and
cs
sar
mov
mov
mov
nop
fwait
ds
sub
xor
out
sub
lahf
arpl
ficomp
popf
cwde
mov
cmps
pop
lods
sbb
and
in
das
ins
stc
mov
jg
cs
call
fsub
xor
push
or
ins
addr16
ds
push
xchg
ja
ja
nop
or
xchg
scas
or
push
xor
jne
lahf
jbe
cmps
pop
push
mov
dec
dec
pushf
jecxz
cmp
or
push
mov
std
xchg
sbb
fwait
sub
je
in
(bad)
pop
(bad)
shl
push
fnstsw
jecxz
inc
xchg
out
popa
inc
pop
adc
popa
icebp
mov
dec
pop
das
shr
mov
xor
test
jmp
sbb
cmps
mov
sbb
scas
push
nop
inc
push
cmc
dec
adc
push
or
or
mov
pop
cmp
in
sub
jmp
push
ja
push
imul
ss
pushf
(bad)
mov
push
std
or
shl
mov
add
adc
sbb
cmps
stos
es
leave
imul
ds
cmps
and
mov
in
push
js
mov
sbb
pop
jl
inc
push
xchg
push
inc
add
stos
int3
dec
add
inc
movs
adc
aaa
dec
mov
add
adc
xor
js
ins
xchg
cmp
pop
push
mov
xor
stos
mov
xlat
mov
les
mov
mov
xor
jne
dec
cmc
adc
aaa
mov
js
cwde
pop
sbb
icebp
movs
adc
mov
fbld
mov
pop
xchg
stc
test
cli
cmp
sub
in
jae
popa
test
nop
inc
popf
dec
icebp
ja
mov
rol
loopne
je
loope
fiadd
inc
pop
xor
rol
scas
pop
inc
ins
vmptrst
push
and
imul
mov
aaa
pop
mov
add
aam
adc
arpl
inc
cmp
dec
inc
lods
push
add
jb
dec
cmp
xchg
int
xor
mov
fsubr
jo
lea
stos
sub
in
mov
mov
addr16
or
sub
(bad)
xor
sub
mov
mov
adc
cdq
dec
lea
das
pusha
outs
loopne
scas
callw
and
pop
mov
into
jmp
pop
stos
pop
jb
mov
icebp
fdivr
imul
push
inc
mov
popf
out
mov
push
das
sbb
mov
loop
mov
outs
jg
enter
xchg
xchg
sahf
das
int3
pandn
push
sbb
cmp
(bad)
fs
dec
add
pop
test
cdq
sub
inc
sub
jbe
mov
adc
ss
popf
(bad)
xchg
pop
aam
es
out
dec
dec
(bad)
movs
nop
push
daa
lods
mov
rol
ds
fsub
not
std
or
sbb
cmps
lahf
dec
popa
add
xor
xor
pop
mov
cwde
pop
movs
jle
popf
sbb
push
cmps
sub
fmul
ret
push
mov
jmp
push
pop
cmps
jns
mov
je
stos
test
ins
inc
dec
clc
cmp
push
test
imul
bound
in
xor
mov
test
sbb
jge
jbe
push
std
mov
push
add
mov
ins
mov
sbb
pop
jns
aas
xor
pop
cmps
add
add
ret
(bad)
cmp
pushf
dec
jno
dec
lds
inc
pop
je
test
aas
fsub
loopne
repz
xor
stos
sbb
mov
xor
ins
or
bound
stc
cmps
icebp
add
and
dec
scas
fcomp
pop
out
push
enter
xchg
cmp
jg
adc
cmp
mov
inc
loope
inc
(bad)
mov
cmp
or
mov
push
mov
mov
(bad)
jno
imul
xor
fidiv
sbb
dec
test
sti
(bad)
(bad)
pop
mov
xchg
stos
shr
xchg
(bad)
nop
xor
push
es
outs
fcomp
lds
xchg
jne
sar
sbb
clc
sub
loope
push
mov
rcl
je
scas
fld
pop
iret
shl
jecxz
sahf
sub
cmp
inc
lea
jb
cmps
nop
add
loope
cwde
jle
fs
fcom
mov
xchg
mov
loopne
jg
lds
and
sub
cmps
aas
(bad)
(bad)
jo
(bad)
out
pop
dec
repz
ins
jp
in
xor
imul
push
jp
jb
add
lds
fwait
inc
dec
popa
or
loope
add
jmp
jl
pop
enter
sbb
xchg
jo
sar
movs
jge
mov
sar
mov
out
pop
loope
leave
xor
scas
jnp
or
mov
rcl
adc
add
xchg
sahf
push
mov
bound
mov
mov
xor
shr
rcl
sub
lods
inc
data16
mov
push
pushf
sahf
hlt
cmp
dec
mov
ret
pop
mov
arpl
cmp
pop
inc
daa
lds
adc
or
fnstsw
sbb
xor
icebp
xchg
add
fild
in
and
add
push
mov
dec
mov
lahf
mov
iret
jnp
add
sub
sbb
mov
rcr
pop
cwde
jbe
outs
mov
loope
xor
ret
enter
xlat
lea
mov
mov
adc
pop
mov
inc
stos
mov
shl
retf
lea
test
inc
out
test
aam
mov
push
xor
dec
xor
jge
cld
pop
lock
je
div
jae
add
int3
push
and
arpl
iret
xchg
in
scas
lods
jp
mov
mov
cmp
dec
(bad)
movs
add
nop
add
jl
pop
mov
xor
mov
ss
mov
movs
test
inc
outs
cdq
fdiv
cli
jne
popa
mov
xchg
(bad)
int3
xchg
mov
inc
pop
ins
or
mov
sahf
js
inc
or
repnz
arpl
mov
es
in
sub
call
test
add
push
aas
mov
jbe
mov
sbb
pop
cmp
xchg
adc
sbb
lds
sub
pop
or
jbe
xlat
pop
ffree
and
push
int3
sbb
cmp
jge
stos
out
sub
shl
add
sbb
dec
jg
outs
mov
fwait
mov
(bad)
fcmovb
xor
js
ds
repz
xor
mov
jle
vunpcklps
and
and
(bad)
cmp
(bad)
das
mov
sub
test
sub
adc
mov
shl
stos
retf
push
rol
daa
shr
jmp
push
and
outs
shl
(bad)
pop
xchg
inc
xchg
lea
mov
inc
js
gs
das
int
cmp
imul
pop
dec
inc
sbb
cmc
jmp
fstp
rol
cmp
add
mov
dec
scas
sub
icebp
in
test
test
or
push
jo
(bad)
clc
and
sbb
mov
call
xor
mov
dec
dec
cdq
pop
gs
sub
lods
pop
popa
(bad)
mov
iret
pop
dec
mov
push
and
call
xor
adc
xor
or
jns
fcomp
xchg
dec
xor
addr16
xor
jae
xchg
dec
xor
out
add
scas
xor
xchg
pop
mov
leave
inc
sbb
and
psrlq
dec
inc
fst
pop
mov
in
iret
out
adc
call
rol
dec
jno
rol
and
iret
cs
inc
test
xchg
inc
mov
popf
pop
xchg
(bad)
in
and
shl
mov
jns
(bad)
mov
xchg
cmovp
cmp
and
sbb
dec
call
clc
loopne
shl
test
jge
mov
fist
aaa
and
sbb
pop
test
out
cmp
inc
mov
sar
cs
cld
inc
jb
in
ins
sbb
sub
or
dec
jmp
xchg
inc
or
cmp
jmp
push
push
cli
inc
movs
out
jl
outs
in
fwait
cmovs
inc
pop
pop
retf
retf
mov
aas
(bad)
loop
lea
add
jns
cmp
jmp
(bad)
xchg
je
mov
mov
dec
inc
enter
inc
push
push
scas
int3
xchg
xor
sub
pop
psubb
xchg
inc
xor
shl
ds
fild
xchg
cmps
sub
mov
cmp
and
jb
push
popa
imul
imul
mov
or
push
jecxz
xor
pop
hlt
bound
adc
push
dec
inc
in
jle
sti
inc
pop
xchg
sub
data16
mov
jbe
cmp
fidivr
enter
push
mov
(bad)
jp
das
add
iret
push
and
cmp
xchg
xchg
shl
inc
shl
nop
test
test
sahf
out
scas
and
inc
mov
stc
daa
in
out
cld
std
(bad)
pop
sbb
dec
xchg
mov
call
movs
ret
jo
push
push
shl
mov
rol
mov
cmp
enter
(bad)
ror
jle
shl
sub
cmps
bound
movs
and
test
pop
jecxz
pop
(bad)
mov
xchg
push
inc
repz
jnp
outs
retf
inc
inc
mov
inc
mov
xchg
dec
into
push
dec
sub
fwait
pop
xor
(bad)
clc
jp
movs
in
stos
div
pushf
cmp
and
jae
xor
mov
cld
mov
mov
cmp
mov
dec
mov
add
dec
arpl
xor
leave
scas
das
sub
xor
xchg
popf
imul
lods
ja
(bad)
jmp
cmps
xchg
push
test
(bad)
fisubr
jg
jecxz
out
jmp
cmp
es
jo
sbb
or
or
test
push
rcl
sar
lds
mov
add
or
add
jo
mov
push
icebp
mov
call
jae
fmul
jne
dec
ss
xchg
sti
push
pop
ror
loope
fdiv
mov
mov
pop
std
inc
jmp
ret
loope
cmps
aas
dec
mov
fist
inc
je
ror
sbb
jg
pop
ds
movs
pushf
dec
mov
xchg
sub
push
dec
out
add
mov
push
ss
ja
iret
push
cmp
sbb
jecxz
cmp
lahf
pop
sahf
call
iret
jo
cmp
mov
leave
aam
pop
xor
je
ret
jp
jb
mov
repz
stos
push
pop
jo
das
sbb
dec
mov
lock
cmp
jo
xor
ins
sbb
dec
adc
xlat
push
xor
cwde
out
dec
es
adc
or
adc
clc
cmp
push
jmp
inc
push
into
pop
inc
xor
and
and
arpl
or
jle
adc
pushf
push
pop
mov
rcl
pop
push
arpl
pop
dec
icebp
in
bound
jb
cmc
sti
mov
xchg
xor
gs
adc
pop
cmp
mul
cs
push
xchg
add
jecxz
cmc
movs
pop
add
pop
sub
loopne
imul
mov
call
jp
inc
and
bound
cdq
and
jnp
mov
or
push
cmp
xchg
pushf
and
mov
retf
lods
sub
or
inc
in
imul
ja
fbstp
mov
nop
jle
push
(bad)
jl
pop
mov
repnz
fs
mov
mov
sub
imul
dec
jecxz
cli
pop
and
ins
xchg
stos
xor
dec
int3
nop
scas
in
push
xor
bound
xchg
mov
call
xor
xchg
(bad)
shr
and
push
fistp
xlat
bound
jbe
lock
scas
stos
xchg
jmp
into
mov
jb
pop
ja
sbb
or
cs
or
push
int3
or
jb
jle
pop
pop
mov
js
jb
jge
adc
fs
in
icebp
aam
data16
les
and
jecxz
inc
call
xor
out
pop
sub
cmp
mov
scas
addr16
and
push
mov
cmp
sahf
retf
mov
dec
xchg
icebp
mov
cli
push
lods
jl
ss
mov
xchg
ror
or
mov
clc
pushf
add
cmc
sub
mov
mov
retf
cli
(bad)
lock
or
add
add
sub
sahf
popa
fs
add
mov
rcl
push
lds
dec
stc
cmp
add
jno
imul
push
test
and
call
mov
cmps
les
sti
aaa
fs
mov
and
popf
aad
cmps
jo
cmps
aam
xchg
mov
sbb
cmp
cmp
pop
inc
add
movs
cmp
out
fimul
add
and
ret
cmp
mov
cmp
ss
cmp
loopne
push
sahf
jmp
gs
cmps
fld
cmp
add
inc
loop
jg
fist
jbe
inc
cmp
mov
inc
push
jle
movs
sahf
popf
dec
dec
jecxz
xor
or
mov
pop
popa
popa
jl
in
gs
mov
inc
std
ss
mov
fsubrp
and
int
adc
jmp
fimul
and
inc
and
out
mov
mov
xchg
out
sub
jmp
cdq
fild
aam
out
es
inc
test
(bad)
ror
les
sbb
inc
push
sub
mov
cmp
mov
out
pop
dec
or
push
dec
and
push
push
push
inc
(bad)
iret
or
jle
imul
loopne
or
(bad)
inc
and
rcl
stos
movs
sti
dec
fcomp
jmp
cmps
repz
push
inc
fs
mov
sar
test
fstp
push
dec
sub
popa
xchg
scas
pop
iret
adc
pop
jne
or
xchg
inc
fisub
lods
sti
in
push
sub
sbb
and
repz
fmul
sbb
mov
mov
pop
(bad)
cwde
loope
xor
or
push
dec
sbb
mov
and
dec
int3
pop
fwait
or
pop
cmp
adc
(bad)
mov
push
arpl
mov
jge
dec
jb
push
jmp
lahf
fwait
retf
dec
jle
loope
lods
mov
adc
mov
inc
sbb
(bad)
in
movs
cmc
push
imul
push
retf
dec
(bad)
pop
jl
dec
fwait
mov
sbb
jae
div
pop
add
sbb
pop
call
push
pop
add
into
jge
cmp
enter
nop
mov
pop
lock
int
pop
stc
icebp
call
(bad)
(bad)
mov
push
xchg
retf
sub
pop
lea
cmp
sbb
mov
xchg
clc
fcmovu
in
sti
aas
mov
fisubr
pop
fwait
emms
imul
shl
repnz
stos
loop
aam
bound
repnz
jmp
jecxz
mov
xchg
rcl
xchg
imul
jnp
lock
pop
out
in
pop
sub
xchg
xor
mov
gs
movs
mov
test
lahf
inc
(bad)
sub
and
and
push
mov
adc
lock
sbb
xor
aaa
inc
cdq
shl
sub
add
retw
ret
addr16
rol
push
cmp
xchg
call
je
mov
fwait
and
icebp
leave
cld
pop
ins
mov
mov
aam
mov
repz
ret
mov
pop
dec
ss
pop
aas
je
test
retf
sbb
sahf
call
fcmovu
sbb
(bad)
out
bound
pop
mov
stos
cmc
push
mov
mov
test
xor
sti
mov
addr16
sub
pushf
jae
ja
lods
sub
daa
shl
inc
push
lods
inc
shl
ficomp
sbb
inc
cmp
imul
stos
adc
add
outs
xor
leave
mov
div
jg
adc
sbb
mov
popf
repnz
retf
hlt
add
loop
sti
aas
xchg
mov
mov
sbb
jno
test
fadd
cmps
ja
jno
addr16
(bad)
cmp
cli
sub
pop
int
pop
in
imul
call
(bad)
sub
cmp
dec
xchg
into
mov
cmp
out
xchg
xor
aaa
mov
std
stc
xchg
jmp
and
das
loop
lods
ror
int
clc
hlt
shl
jle
fcomp
adc
pusha
dec
pop
xchg
mov
(bad)
and
push
in
adc
mov
mov
pop
xchg
shl
jmp
lock
cmc
add
mov
mov
fadd
sbb
div
scas
cwde
stos
jge
fidiv
push
out
test
cmps
mov
int3
add
in
hlt
mov
(bad)
jle
ins
lods
retf
pushf
push
jp
xor
or
ret
mov
add
sar
loopne
ds
retf
pop
cmp
sbb
and
in
cmp
test
sub
mov
pop
sub
push
pop
xor
inc
enter
cld
dec
xchg
stos
fcomp
cmp
sub
mov
std
cs
mov
inc
sub
cmp
push
mov
mov
push
jnp
ret
add
repz
jne
or
mov
xor
scas
adc
adc
xlat
test
xchg
mov
cmp
jl
(bad)
lock
xchg
mov
imul
leave
add
popf
mov
mov
mov
sub
lods
pop
int3
pushf
popa
or
cmp
fwait
(bad)
lock
jp
arpl
xor
push
cs
lahf
aam
mov
pop
fwait
stc
push
cmp
push
dec
pusha
mov
call
and
mov
sbb
jae
mov
inc
dec
test
cld
(bad)
retf
or
sub
add
mov
inc
or
std
sbb
inc
push
cmp
xor
mov
add
inc
stc
add
clc
mov
rcr
inc
mul
dec
adc
or
and
mov
(bad)
cmps
addr16
stc
fsub
clc
ins
mov
dec
sbb
jmp
push
cld
inc
cmp
push
mov
fst
test
stos
mov
jno
fsub
dec
fdivr
jo
call
out
inc
xor
cmp
pop
mov
adc
(bad)
repz
adc
ss
jp
(bad)
cld
push
call
rcr
popf
jnp
icebp
mov
out
mov
in
jne
call
rcr
jne
cmps
stc
pop
rcr
out
mov
or
xor
cmp
hlt
nop
fild
outs
sbb
inc
adc
xor
popf
fadd
push
out
xchg
dec
stos
adc
mov
or
(bad)
push
xor
div
and
push
add
mov
and
retf
and
dec
cs
ret
fwait
jb
dec
shl
int3
test
retf
pop
pop
jmp
dec
retf
adc
pop
(bad)
jo
xchg
push
ror
test
(bad)
(bad)
in
push
(bad)
push
sahf
inc
fs
pop
ret
cwde
push
repnz
xor
xchg
enter
inc
hlt
jns
jmp
lods
addr16
sub
(bad)
repnz
aam
mov
clc
adc
iret
rol
dec
add
lock
scas
cmp
and
ss
jg
adc
fnstsw
enter
xchg
inc
test
rcr
xor
xlat
xchg
arpl
sbb
sbb
fmul
mov
leave
or
dec
adc
ins
adc
daa
in
ret
and
pop
addr16
or
sub
repnz
dec
das
mov
fs
(bad)
xchg
push
sub
loop
test
xor
inc
cmc
add
mov
adc
nop
test
mov
mov
push
stos
int3
fwait
sub
stc
jne
or
pushf
jmp
push
aas
(bad)
into
fcomi
aam
imul
cmp
mov
sti
repz
(bad)
jmp
sbb
ret
adc
retf
mov
sbb
mov
cdq
cmp
mov
je
je
dec
adc
cld
dec
adc
sbb
sub
imul
in
add
inc
cmp
xchg
dec
lds
rcr
popf
lock
(bad)
shl
cmps
pop
data16
sbb
es
xor
adc
stos
std
ds
scas
les
ror
fimul
pop
dec
add
test
mov
das
fld
inc
bound
shl
enter
(bad)
push
push
int
mov
lds
xchg
push
add
out
aam
mov
out
mov
movs
cmp
push
mov
nop
cmp
repz
adc
jmp
jmp
mov
push
ins
pop
pop
jmp
mov
mov
mov
xor
sbb
adc
push
data16
das
pop
fwait
int
ins
nop
arpl
inc
jmp
pop
jno
(bad)
xor
in
inc
xor
repz
popf
xor
fstp
cs
push
retf
jb
int3
(bad)
(bad)
mov
dec
out
xchg
mov
xchg
add
movs
nop
mov
es
jle
scas
mov
dec
jno
mov
cmp
daa
inc
or
(bad)
pop
jbe
ds
mov
or
into
xchg
shl
pop
adc
rcr
test
in
outs
cmps
cs
lahf
mov
inc
xchg
sub
scas
dec
pop
cmps
xor
adc
mov
jno
ds
xor
int
rcl
push
push
mov
push
(bad)
mov
movs
shr
in
in
mov
xchg
xchg
or
es
sbb
mov
arpl
adc
rcl
adc
lods
clc
jo
jnp
pop
push
or
js
je
mov
push
fstp
stc
(bad)
cmp
add
test
(bad)
shl
retf
dec
lahf
dec
fiadd
aas
pop
xchg
fwait
pop
sub
ins
add
inc
push
loope
movs
fwait
jbe
adc
jl
push
xor
ds
xchg
(bad)
jecxz
popf
xchg
mov
cs
sub
inc
pop
dec
aad
jne
cwde
arpl
ins
movs
adc
stc
fild
inc
fadd
xor
dec
daa
sub
test
ror
ins
mov
or
sub
sub
scas
clc
push
imul
add
adc
xchg
imul
xor
fisttp
dec
sub
cmp
mov
sbb
mov
jmp
mov
or
sub
push
fs
mov
and
clc
and
add
stc
cmp
es
mov
bnd
pop
js
ret
test
xchg
fcmovb
gs
lea
addr16
add
inc
add
xchg
call
cdq
dec
std
push
xor
mov
xchg
jecxz
dec
mov
dec
(bad)
xchg
xchg
mov
stc
mov
xor
dec
mov
jg
in
inc
stos
jnp
das
aam
fild
scas
iret
add
loop
xor
out
scas
(bad)
(bad)
ds
pop
adc
cmp
and
adc
les
push
je
stos
into
mov
scas
adc
leave
dec
or
or
xchg
ds
xor
loopne
adc
ds
dec
adc
pop
inc
push
(bad)
call
stos
movs
cs
aam
and
cmc
pop
nop
imul
in
sti
xor
fs
mov
pop
dec
stos
or
jl
lea
dec
clc
shl
dec
cwde
repnz
mov
xchg
repz
pop
mov
inc
lahf
arpl
mov
rcl
dec
mov
inc
nop
gs
lea
inc
xchg
jle
push
clc
xchg
or
push
dec
dec
cmp
test
loopne
shl
sbb
xchg
js
lock
mov
stos
push
test
enter
pusha
mov
shl
dec
shr
and
jne
lea
fwait
mov
retf
mov
mov
es
je
je
enter
pop
xchg
cmp
and
pop
jnp
bound
inc
sub
xor
retf
cmp
jno
in
pop
les
gs
mov
pop
in
dec
mov
pop
xchg
ror
jne
jge
jnp
mov
sbb
gs
pop
int3
pop
retf
mov
mov
push
icebp
lea
les
sub
data16
push
pop
pushf
inc
jg
push
ret
(bad)
mov
inc
mov
imul
mov
pop
and
jb
in
xchg
aam
xor
stos
int
mov
in
outs
ret
lea
hlt
or
mov
or
jmp
out
adc
mov
retf
or
xor
adc
mov
leave
les
in
jle
sub
in
fwait
bound
mov
push
imul
ins
int3
cmps
pop
fsubr
test
fbld
mov
fcomp
mov
das
xchg
add
cli
push
(bad)
cmc
outs
js
ret
jmp
and
xchg
lds
xchg
ins
xor
lock
xor
inc
dec
mov
jne
or
mov
xchg
rcr
xchg
jbe
sbb
in
push
(bad)
pop
leave
mov
and
xor
cmps
mov
cmp
xchg
daa
inc
aad
sub
aad
xor
xor
inc
in
lahf
pop
mov
mov
adc
pop
pop
arpl
rol
in
retf
(bad)
mov
shl
adc
repnz
mov
jo
cli
sbb
std
sbb
popf
mov
dec
pop
inc
dec
lea
mov
add
pop
push
aas
xor
push
outs
test
ins
int
ja
stos
mov
sub
xchg
or
mov
pop
shl
cmp
mov
rol
nop
push
sub
jge
sub
gs
sbb
popa
cmp
pop
sub
dec
mov
adc
imul
push
push
sbb
pop
sub
push
out
das
or
mov
pop
shl
xchg
xlat
dec
in
pop
movs
fs
cmp
jmp
(bad)
push
xor
sbb
adc
mov
pop
mov
mov
imul
jmp
fwait
loop
mov
out
push
pop
fxch
mov
push
cmp
fwait
jbe
push
dec
pop
xchg
fsubrp
sar
mov
and
ret
add
jmp
es
jno
retf
inc
fild
add
xchg
push
xchg
(bad)
addr16
cmps
push
test
push
or
inc
dec
sub
mov
jb
repz
mov
push
sbb
xchg
clc
sub
jle
and
outs
xchg
mov
shr
fldenv
(bad)
mov
arpl
popa
and
scas
jbe
jnp
into
inc
jl
data16
jmp
fisubr
xchg
jg
and
pop
dec
fs
div
scas
aad
cmp
pop
jl
inc
es
pop
sub
jnp
or
inc
cdq
aas
jl
cmps
xchg
push
push
push
mov
push
sbb
jo
add
dec
cs
or
outs
leave
les
xchg
xor
out
cmc
adc
jge
xchg
dec
pop
mov
int
push
mov
or
outs
xor
jns
in
js
or
mov
push
push
sub
dec
jmp
fucomi
cmp
inc
inc
mov
(bad)
ds
push
call
aaa
pop
inc
js
lds
iret
dec
adc
lock
mov
sbb
and
ficomp
dec
mov
lea
icebp
sbb
jae
(bad)
mov
cmps
repz
mov
sub
sar
dec
(bad)
icebp
cs
out
and
mov
cdq
adc
adc
cmc
jecxz
push
test
ror
add
leave
pop
(bad)
mov
dec
outs
mov
out
jb
push
cld
bound
pop
loope
xor
stos
sbb
add
into
ins
jmp
bound
push
movs
nop
ret
xor
cmp
mov
rol
mov
dec
jnp
ja
sar
or
inc
pop
ror
cmp
adc
jmp
das
outs
out
arpl
pop
outs
mov
cmp
repz
loope
or
loopne
aas
lods
jecxz
and
mov
iret
cmps
mov
out
or
sub
stc
and
lds
pop
push
dec
cmp
cmp
mov
call
movs
adc
jb
dec
out
pop
pop
xor
fsubr
and
mov
xchg
(bad)
into
jnp
cli
cs
pop
loope
mov
jecxz
jno
les
mov
push
adc
dec
ins
clc
aam
xor
aad
cwde
add
jno
sbb
cmps
or
movs
out
pop
jmp
and
add
push
adc
pop
pusha
(bad)
fistp
or
jge
jne
xchg
imul
in
or
shl
sar
jno
fild
fwait
das
data16
mov
cmp
call
(bad)
mov
add
dec
push
sbb
cmp
call
sti
call
outs
ds
retf
or
xor
xchg
pop
ja
pop
scas
mov
test
or
jmp
sub
adc
lods
jle
leave
jmp
imul
test
mov
mov
out
out
loopne
test
(bad)
fsub
sbb
pop
mov
pusha
out
inc
stos
xchg
jp
stc
fcomp
loop
cmp
push
imul
fcomp
shl
jae
add
sub
in
add
pushf
scas
(bad)
add
(bad)
into
aam
rol
add
pop
xor
jno
retf
push
in
lock
and
adc
mov
sub
sub
ficomp
and
dec
cmp
popf
sti
stos
xor
add
pop
fbld
mov
cld
sbb
xor
jecxz
(bad)
and
push
push
jmp
shl
cmc
mov
or
js
neg
clc
retf
daa
stc
int
push
ficomp
outs
out
cmp
push
retf
pop
or
sbb
pop
mov
sub
clc
clc
and
dec
in
or
xchg
or
jecxz
(bad)
mov
sub
int
outs
test
xchg
push
sub
les
scas
cmps
mov
xor
rcl
js
clc
js
or
ret
mov
dec
jnp
test
or
xor
in
adc
repnz
jmp
push
adc
cld
cmp
mov
icebp
and
cdq
lock
jp
adc
add
cmps
fbstp
ds
inc
(bad)
jmp
int3
mov
gs
aas
mov
inc
cmp
retf
sbb
sbb
sbb
shr
or
xor
fldcw
mov
in
mov
enter
ins
aam
xchg
pop
pop
sub
sbb
xchg
test
sub
imul
push
repnz
inc
bound
push
cmp
ins
ins
push
out
and
xor
inc
mov
mov
in
inc
xchg
std
pushf
adc
outs
in
add
pop
js
fbstp
jg
push
cli
dec
pop
stos
jne
or
sub
jmp
cli
cmp
ss
xchg
sbb
shl
jns
mov
xlat
add
outs
aad
imul
pop
rcl
mov
mov
mov
in
xor
rcl
loopne
dec
(bad)
(bad)
imul
movs
pop
inc
fs
daa
stos
dec
enter
inc
in
and
sbb
xor
ret
cmp
pop
or
mov
cld
mov
loope
pop
lds
push
ins
loop
mov
cmp
pop
push
arpl
jo
outs
push
mov
sub
dec
shl
shl
cmp
dec
and
frndint
hlt
mov
inc
pop
lds
frstor
ja
call
xor
pop
xor
add
pop
cmps
push
repz
lock
and
(bad)
push
popf
retf
imul
std
lahf
aam
jne
icebp
xchg
(bad)
out
cmp
clc
bound
push
jmp
push
out
xlat
movs
pop
mov
stos
ror
cmp
push
mov
mov
ss
out
mov
pop
cli
in
retf
xor
xchg
inc
jle
rol
push
inc
movs
cmp
mov
(bad)
mov
mov
jle
inc
mov
inc
sbb
mov
test
dec
mov
aad
out
xchg
push
jge
call
mov
push
or
jnp
sub
aaa
mov
int
adc
inc
or
or
dec
sti
mov
mov
mov
dec
jl
cmp
data16
xchg
inc
jnp
fs
sbb
push
and
inc
xchg
fld
mov
or
arpl
push
push
jmp
mov
cld
ins
xor
push
movs
pop
es
movs
call
cmp
loope
mov
xor
iret
xchg
rol
push
scas
(bad)
pop
push
fnsave
xchg
sbb
test
mov
movs
pop
xor
mov
mov
adc
mov
add
mov
retf
es
call
mov
cmp
pop
add
sub
clc
mov
rol
repnz
mov
sub
test
jecxz
fist
xchg
xor
in
mov
sbb
add
mov
cmps
popf
dec
loopne
stos
aam
cmp
(bad)
lock
iret
xchg
pop
clc
mov
sbb
dec
out
push
pop
pop
xchg
inc
xor
icebp
adc
and
push
sbb
add
pop
mov
and
clc
test
ss
test
fstp
mov
add
cli
jb
cli
movs
xchg
adc
and
retf
cmc
mov
add
daa
lds
sbb
jbe
fidiv
jmp
ja
sub
cmp
add
inc
jge
mov
push
push
mov
ins
push
dec
stos
(bad)
test
int
adc
mov
push
lods
lahf
leave
mov
pop
in
mov
rcr
and
dec
dec
pop
push
aam
scas
fwait
movs
outs
(bad)
mov
fcom
daa
test
das
pop
ds
or
pop
(bad)
aaa
pop
icebp
inc
mov
xchg
xor
sub
rcr
test
je
ja
sub
jbe
sub
sahf
pushf
jmp
jae
(bad)
pop
inc
cmp
rcr
mov
and
jp
jo
inc
das
clc
pushf
dec
pop
inc
and
stos
xor
or
lea
sub
js
out
(bad)
and
or
call
pop
xor
mov
fwait
pushf
or
or
dec
gs
int
push
repz
push
mov
(bad)
in
jl
sti
test
adc
fst
adc
ins
hlt
mov
jbe
mov
fiadd
xor
push
loop
stos
cs
inc
xor
call
test
cwde
jne
push
je
adc
sahf
in
das
out
enter
test
sbb
or
imul
or
push
ss
xchg
dec
inc
leave
mov
or
mov
pop
out
das
lds
sbb
fld
inc
aas
xlat
retf
xor
add
pushf
test
ds
mov
into
pusha
adc
(bad)
stos
push
popa
mov
dec
aam
or
push
sub
sub
into
popf
aad
push
aaa
adc
push
or
sub
rol
je
out
mov
cmp
data16
xchg
fst
mov
add
out
ss
mov
lods
inc
xor
mov
jb
pop
movs
pop
adc
gs
pop
jge
leave
xor
jne
or
dec
push
pop
stos
in
dec
in
ds
dec
pushf
cmp
scas
and
pop
enter
loope
fcomp
mov
jmp
div
mov
sub
and
pop
inc
xor
jl
ficomp
jmp
sub
sbb
and
es
xchg
inc
dec
inc
dec
inc
aam
neg
jmp
sahf
test
xchg
daa
outs
xchg
push
push
xchg
adc
xor
fisttp
shl
or
xchg
scas
sbb
push
jmp
cli
into
dec
adc
sub
popa
(bad)
lock
lods
mov
rcr
(bad)
pop
cmp
pop
inc
sbb
bound
pop
fisub
inc
push
aad
lahf
mov
and
movs
cmp
jns
leave
inc
movs
sbb
mov
add
rsm
push
dec
fisttp
std
(bad)
scas
fistp
and
adc
jae
inc
xor
test
or
stos
arpl
fdivr
aaa
ffreep
mov
push
push
mov
jl
xor
mov
das
pop
pop
mov
rcl
sub
inc
jne
add
out
mov
out
call
push
sub
adc
call
jne
mov
out
mov
push
cdq
add
pop
in
test
lods
sub
(bad)
mov
out
mov
mov
(bad)
cld
repnz
scas
(bad)
mov
int
jp
arpl
fmul
ja
add
inc
fld
adc
fucom
(bad)
in
xchg
movs
test
jo
(bad)
(bad)
xchg
test
scas
adc
or
(bad)
cmp
inc
ds
mov
mov
aad
jnp
sub
sbb
push
jns
lds
test
nop
inc
ja
std
ror
jne
sub
jae
retf
lahf
jne
and
xchg
fbstp
pop
scas
push
imul
mov
call
inc
mov
xchg
mov
adc
test
sbb
test
aaa
mov
imul
sbb
lea
jle
bound
push
jge
xchg
jmp
rcr
sbb
rol
enter
into
adc
test
test
je
xchg
push
inc
mov
nop
cdq
out
in
cwde
out
and
call
sbb
cli
push
call
xchg
sti
mov
pop
aam
add
scas
shl
push
nop
fwait
cmps
dec
mov
scas
fbld
dec
hlt
lds
pop
mov
aaa
inc
lds
aam
imul
fmul
xor
xor
dec
inc
xor
gs
jecxz
mov
or
inc
gs
js
ds
shl
xchg
outs
sub
sahf
xchg
xchg
retf
retf
outs
scas
popf
mov
fcomip
sbb
dec
nop
pop
sub
jno
mov
out
outs
push
fbstp
outs
outs
add
push
shl
lahf
mov
lea
ret
retf
dec
xchg
gs
pop
xor
xchg
scas
push
mov
fbstp
jb
daa
fmul
arpl
(bad)
dec
cmp
mov
lea
ret
sahf
daa
in
jge
dec
sbb
mov
sub
loop
mov
cmp
ret
enter
add
xchg
push
movs
mov
pushf
inc
outs
push
pop
mov
fldcw
sti
bswap
call
pop
hlt
mov
xchg
icebp
xchg
popf
mov
adc
int
dec
xlat
or
add
rcr
dec
adc
xlat
jae
pop
ret
test
sti
sub
cmps
pop
jl
inc
push
cli
cmc
rcl
mov
dec
dec
ror
fwait
cmp
jp
ins
fnstenv
mov
jmp
cli
(bad)
mov
xor
ja
inc
in
inc
push
call
mov
shl
ret
les
dec
shl
push
dec
stos
fstp
mov
cmp
inc
fsubr
mov
xor
mov
mov
mov
cmp
and
jae
or
icebp
pextrw
sbb
adc
lds
stos
test
out
pop
fcom
add
enter
movs
movs
cmp
pop
bound
imul
pop
inc
rcr
sub
inc
cmp
inc
fs
scas
or
ss
dec
inc
push
dec
pop
stos
ds
(bad)
lods
xor
jle
mov
test
in
call
inc
icebp
mov
outs
mov
mov
stos
mov
add
(bad)
mov
repnz
shl
aad
cmc
or
dec
inc
cdq
cdq
xchg
cld
rcr
or
ins
xor
aam
test
scas
out
cmp
jp
xchg
clc
stc
je
pop
xor
in
adc
in
clc
sbb
add
fisttp
sub
sub
dec
stos
cli
sbb
lock
adc
bound
lds
mov
pop
jp
fwait
addr16
sub
adc
call
dec
mov
mov
sbb
icebp
test
ja
sti
sub
ss
sbb
je
loope
aam
pop
ds
inc
cmp
lahf
and
(bad)
shl
mov
pop
popf
pop
pop
call
push
in
jae
sub
ret
out
in
adc
pushf
cmp
push
inc
int
test
repz
adc
cmp
out
push
inc
stos
pusha
leave
popa
and
es
pusha
and
push
test
movs
cld
ret
cmp
jns
push
xchg
cli
icebp
and
clc
fadd
into
or
popa
rol
and
push
jmp
adc
fdiv
jl
popa
shl
dec
stos
mov
inc
lods
sahf
gs
push
loopne
and
scas
cmp
in
test
and
dec
or
mov
clc
ins
dec
repz
inc
xor
loope
or
inc
add
std
sub
mov
xor
lods
push
xor
push
lods
push
fdivr
dec
add
outs
mov
pop
jge
mov
jle
jo
xchg
mov
dec
inc
adc
mov
ficom
idiv
xor
sahf
in
sti
mov
fcomp
mov
shl
push
pop
inc
fidivr
sbb
leave
pop
inc
iret
xor
inc
pop
mov
xchg
mov
popf
add
shl
bndldx
retf
jo
jbe
gs
in
repz
jmp
test
xchg
out
out
and
jnp
or
jg
(bad)
xor
stos
mov
push
xchg
imul
cdq
push
cld
aam
and
sahf
jg
xor
pop
xlat
rol
add
lods
pop
mov
rol
outs
mov
leave
shr
fdivr
sti
jne
sti
push
sub
cmp
fidivr
fs
repnz
add
push
mov
les
jg
loop
inc
out
mov
aam
call
stos
xor
test
lahf
mov
xor
sub
aas
xchg
fmul
leave
call
sbb
mov
popa
popa
sub
and
mov
dec
xchg
out
clc
inc
or
sub
and
aam
cmp
adc
dec
mov
rcr
mov
pop
jle
jbe
push
test
adc
mov
nop
dec
bound
jbe
icebp
jmp
push
adc
inc
mov
inc
add
push
rol
outs
js
mov
and
dec
or
stos
mov
scas
ja
mov
mov
rol
movs
cmps
clc
ss
fnstsw
ins
inc
por
cs
mov
fiadd
jo
lods
pushf
int
sbb
clc
xor
xchg
pop
aad
call
sbb
fucomi
in
mov
gs
inc
mov
ss
pop
loope
add
cmp
fdivp
and
jecxz
inc
dec
clc
jno
gs
nop
xor
push
cmc
push
dec
push
pop
dec
and
fnstenv
push
adc
lds
ins
stos
gs
lea
adc
lds
scas
mov
adc
fs
inc
cdq
icebp
pop
retfw
fcom
xchg
out
fcom
adc
sub
mov
lds
and
cs
sar
rcl
cmovo
adc
pop
or
rcl
test
inc
cmp
jecxz
sti
jne
and
xor
xor
fs
sbb
adc
xchg
inc
dec
push
sub
ins
out
outs
push
in
mov
fsub
jo
sbb
dec
dec
out
repnz
adc
lea
mov
jmp
xchg
dec
jno
sbb
jmp
outs
push
mov
ret
jecxz
ins
ret
nop
out
jae
rcr
sbb
cld
out
dec
repz
or
iret
jg
std
inc
mov
jb
ja
mov
stos
(bad)
dec
dec
pop
clc
jbe
or
arpl
cmp
mov
adc
add
cs
pop
pop
add
dec
sub
loopne
xchg
test
add
ss
fbstp
sbb
cld
popa
push
cmps
(bad)
enter
xchg
mov
mov
dec
int
repz
test
sub
or
adc
int
daa
push
imul
and
mov
pop
push
test
std
push
jmp
xlat
(bad)
fwait
xlat
pop
xchg
aad
loop
in
and
call
mov
mov
enter
fld
cmp
(bad)
icebp
push
cs
lods
call
sub
pop
xor
loop
mov
movs
sub
and
cli
cmp
sahf
mov
or
inc
or
leave
fucomi
jbe
mov
sbb
add
retf
pop
outs
inc
cmp
dec
out
cdq
jae
jge
(bad)
repnz
shl
cmp
mul
push
sub
adc
push
sub
sahf
imul
cmp
hlt
adc
aad
es
push
sub
pop
jp
daa
inc
mov
rcr
out
rcl
lods
adc
sub
shr
or
xchg
leave
clc
pop
jns
mov
es
scas
sbb
jle
pop
dec
dec
fwait
jns
mov
call
lds
dec
jnp
fmul
fnstcw
sbb
imul
loopne
xchg
in
adc
mov
sub
cmp
inc
cmc
pop
les
sub
loopne
es
hlt
jns
adc
sbb
fidivr
out
pop
mov
mov
aaa
mov
(bad)
outs
pop
push
fild
sub
iret
jns
mov
inc
popa
(bad)
test
pop
inc
adc
mov
adc
xor
jge
add
jl
cwde
ins
xchg
xor
jo
dec
sub
aas
or
mov
movs
push
mov
adc
sub
adc
jg
inc
xor
ds
mov
(bad)
dec
adc
das
(bad)
test
mov
inc
add
nop
dec
call
dec
jecxz
jb
inc
and
xor
jne
fisub
sbb
jg
mov
mov
sub
dec
xchg
push
jo
enter
popa
jge
inc
ja
leave
add
outs
mov
mov
cmp
int
in
sbb
out
inc
ins
lahf
iret
inc
shl
inc
mov
pop
iret
sub
cwde
add
sti
movs
fstp
int
pop
data16
mov
jl
xor
loopne
jmp
f2xm1
sub
mov
test
mov
dec
(bad)
jbe
inc
mov
loop
fnsave
retf
jge
add
dec
pop
mov
scas
loop
gs
retf
pusha
test
lea
cmp
loop
mov
dec
mov
xchg
cmps
or
ja
bsf
push
or
in
adc
in
rcl
mov
sub
ins
int3
test
popf
push
mov
out
and
add
mov
int3
push
push
retf
mov
sbb
(bad)
icebp
stos
sub
xchg
out
or
imul
inc
jmp
push
pop
mov
fcmovb
jmp
xlat
js
jmp
mov
xor
cmp
jecxz
sub
data16
mov
mov
cmp
xor
mov
add
cmps
jp
mov
ret
push
mov
dec
inc
pop
mov
jae
outs
repz
jo
nop
and
jno
mov
xchg
ja
in
jb
cli
jge
dec
(bad)
push
xor
mov
adc
pop
push
iret
addr16
or
addr16
xor
push
mov
push
inc
pop
adc
nop
mov
xor
inc
lea
scas
out
stos
stos
add
pop
leave
xchg
jmp
ja
cmp
sti
and
mov
mov
ret
adc
hlt
div
xchg
int3
jnp
test
mov
sub
jmp
xchg
cmp
test
js
out
fs
pop
sub
test
cmps
lods
xor
and
clc
pop
stos
xor
mov
xor
xchg
rcr
jecxz
es
xor
popf
push
fadd
cmp
sub
sub
sbb
lock
iret
lds
xchg
lahf
into
retf
or
arpl
fwait
mov
inc
addr16
ss
ja
pop
or
lods
mov
xchg
js
and
loopne
fiadd
fsubp
fnstcw
xor
jbe
xchg
xchg
fcmovnb
ss
add
fmul
or
arpl
ja
sbb
pusha
ds
imul
dec
retf
or
push
or
sub
xor
cmp
mov
xchg
and
aam
and
push
xchg
pushf
pop
push
jnp
push
stc
xchg
sub
cmps
pop
gs
sbb
cmp
or
sbb
inc
cmp
xchg
fs
mov
lahf
cdq
mov
xlat
movs
jbe
ja
nop
pop
(bad)
je
into
cmp
push
icebp
addr16
ret
pop
cmps
mov
ds
push
out
inc
test
je
sub
sbb
cmp
mov
or
jmp
(bad)
jge
push
ret
(bad)
and
mov
xor
aad
dec
int
mov
sahf
loope
pop
mov
(bad)
mov
push
int
mov
xor
add
xchg
rcr
movs
fistp
in
in
cld
mov
ds
jno
aam
sbb
(bad)
mov
xchg
push
add
test
fs
in
cmp
cmc
and
push
sbb
scas
cmp
pop
sub
mov
loop
out
inc
rcl
jnp
mov
lods
fldcw
mov
mov
jno
and
fsub
ja
adc
pop
push
and
mul
mov
pop
mov
mov
pop
xchg
pop
pop
or
fwait
shr
add
jmp
les
inc
retf
and
imul
mov
push
out
xor
xor
jb
icebp
and
dec
or
dec
xchg
jge
mov
imul
sar
enter
sub
pop
in
retf
pop
rcl
mov
repz
ret
push
push
mov
pop
push
jmp
push
jmp
cmc
in
or
xor
test
push
cld
cwde
xchg
or
pop
movs
pop
test
es
cmp
imul
loop
fisttp
ins
push
ret
mov
ret
(bad)
cmp
cdq
test
mov
shr
push
mov
stc
and
xor
xchg
mov
sub
push
cmp
inc
push
mov
mov
jmp
fisttp
fnstcw
jae
imul
(bad)
sub
jl
fcmovbe
dec
pop
sbb
push
aad
test
mov
mov
jne
stos
and
dec
shr
jo
push
and
mov
mov
add
out
xor
in
cmps
add
xor
dec
test
std
aaa
cmc
adc
stc
pop
pop
sub
pop
iret
movs
les
(bad)
(bad)
loope
xchg
ret
nop
pop
xlat
jmp
push
(bad)
inc
inc
mov
and
lds
sub
fist
sub
add
movs
inc
cmps
fisttp
jmp
mov
repnz
and
sbb
and
in
enter
adc
xor
ins
xor
push
push
xor
retf
clc
xor
jns
mov
sub
pop
popa
cmp
and
pop
mov
xchg
shl
mov
push
ror
das
push
cmp
push
retf
lahf
jle
repnz
aaa
cmc
xor
cmps
and
pop
mov
out
stc
lahf
ins
pop
xchg
xor
out
mov
pop
imul
pop
sub
mov
or
movs
fld
jne
cld
cmps
lock
xchg
lods
in
mov
mov
push
xor
in
xchg
cmps
cs
add
mov
mov
lahf
jo
cld
push
es
or
mov
inc
fwait
sbb
in
ds
repnz
inc
ja
mov
imul
scas
dec
xor
add
push
je
daa
fistp
pop
mov
pop
(bad)
retf
xor
fsubr
fwait
cdq
xchg
add
les
rcl
lahf
xchg
aaa
jge
push
inc
cmp
fcom
ins
dec
mov
(bad)
div
les
jo
bound
jno
sbb
mov
push
dec
or
pop
dec
pop
(bad)
push
jge
xor
shl
mov
call
fdiv
(bad)
ror
xlat
outs
pushf
xor
ja
retf
or
aad
outs
test
pushf
icebp
jmp
imul
add
movs
stos
fdiv
push
in
and
xchg
ret
mov
pop
movs
leave
je
stos
pop
(bad)
jnp
ds
je
or
imul
sahf
adc
dec
adc
pop
lea
sbb
movs
std
xchg
loop
inc
bound
rcr
jae
sbb
popf
and
mul
daa
ins
nop
ret
pop
nop
das
xor
jmp
gs
loope
and
(bad)
movs
cmp
inc
jge
ret
jb
jb
push
sbb
xor
mov
enter
push
movq
xchg
mov
pushf
xchg
push
rol
movs
pop
pop
imul
stos
push
push
jge
push
daa
xchg
shr
cmp
inc
push
xlat
xor
(bad)
nop
jmp
mov
sbb
or
jge
push
aam
iret
psubusw
cmc
les
push
inc
out
ret
or
add
shl
cmp
call
lahf
ss
ror
jne
mov
retf
push
and
movs
mov
xor
adc
jnp
retf
mov
inc
int3
adc
push
jae
mov
mov
cdq
jmp
jb
push
mov
jbe
jno
std
je
sbb
adc
add
add
dec
aam
inc
ds
les
out
cmc
ret
push
cwde
(bad)
adc
pop
js
push
inc
das
pop
fs
inc
stos
out
pop
mov
mov
pop
mov
and
cmp
fst
sbb
jecxz
jmp
ins
nop
push
add
add
xchg
lea
mov
movs
dec
jno
dec
sub
outs
in
std
stos
loopne
sbb
(bad)
cmps
mov
and
pop
inc
repnz
popa
mov
push
movs
or
std
shr
call
add
pop
adc
loop
aad
mov
cli
cmps
sbb
sbb
pop
call
sbb
pop
in
mov
pop
imul
fldenv
cmp
rol
ins
test
xchg
and
dec
add
dec
frstpm(287
test
jecxz
xor
inc
in
inc
cmp
mov
fistp
int
test
add
push
(bad)
xchg
add
fwait
pop
sub
xchg
ins
xor
xor
jge
mov
arpl
pusha
mov
stc
jl
and
test
inc
sahf
mov
sbb
mov
fild
push
dec
fwait
std
and
aad
or
and
repnz
cwde
xor
mov
int
mov
sbb
mov
lock
inc
fsubrp
or
mov
push
sbb
xchg
imul
mov
loop
push
in
mov
xchg
(bad)
fisttp
cmp
and
sbb
sub
dec
popf
ss
pop
mov
das
add
pop
les
add
dec
xchg
rol
out
pop
pop
cmp
mov
fnsave
das
push
fimul
pop
or
sbb
mov
pop
(bad)
fucom
add
cs
pop
jge
outs
xor
fs
data16
das
movs
repz
ror
pop
mov
inc
jo
rcr
inc
mov
dec
mov
cmps
jb
faddp
add
cwde
push
push
sbb
lock
xchg
pop
mov
xor
or
retf
jmp
mov
scas
inc
sti
xchg
retf
mov
inc
mov
push
push
sbb
nop
mov
mov
cld
mov
dec
push
and
jo
data16
xchg
xchg
mov
ins
cmp
dec
sbb
inc
(bad)
sub
cmp
add
jge
mov
mov
arpl
scas
test
xor
(bad)
or
out
jmp
js
retf
test
mov
cld
xchg
inc
fstp
call
and
arpl
pop
imul
pop
sub
cmps
jg
lahf
fistp
mov
pop
adc
fcomp
cs
std
xor
inc
mov
jge
int
aas
inc
(bad)
loopne
mov
dec
mov
mov
pushf
push
mov
dec
cmp
inc
ins
adc
and
pop
ins
mov
lea
xor
mov
es
xchg
fld
adc
mov
inc
adc
cmp
idiv
sub
stos
sub
jns
push
ss
(bad)
lock
add
cs
jge
shr
xchg
mov
sahf
mov
pop
jmp
pushf
add
ret
loopne
popa
jb
adc
dec
mov
mov
shl
xchg
addr16
adc
cmps
and
pop
mov
pop
aam
fcomp
stos
mov
and
ret
inc
mov
leave
pop
cs
retf
mov
sub
imul
sub
xor
pop
xlat
fcmovnu
repnz
sbb
adc
ret
aaa
mul
ret
pop
inc
jl
cmps
xchg
lea
ss
dec
fcmovu
leave
ror
jl
cli
push
jae
inc
lea
sbb
jle
stc
rcr
out
pop
push
mov
dec
loop
mov
aas
push
push
sbb
clc
add
add
cmp
mul
pusha
sti
or
outs
mov
ja
psubusb
cmp
movs
sub
pop
sub
inc
xchg
out
push
xchg
data16
(bad)
popf
and
fild
cli
(bad)
scas
(bad)
push
mov
fidiv
gs
stos
pop
js
dec
stos
out
std
aaa
or
push
cmps
out
inc
idiv
fnsave
push
mov
mov
loopne
shr
(bad)
ret
arpl
loop
add
and
push
cld
neg
cdq
or
lea
or
jmp
mul
outs
into
xchg
jae
xchg
fidiv
stos
lock
fsub
push
sbb
ror
push
bound
cmp
mov
mov
ins
popf
add
(bad)
jge
sbb
inc
inc
sub
and
xor
jmp
fld
repnz
ins
pop
rcr
ss
scas
cmp
popa
jmp
jmp
inc
test
sbb
cmp
inc
out
imul
shr
push
sub
mov
(bad)
dec
cmp
jo
mov
sbb
call
ins
mov
xlat
or
push
adc
add
mov
fs
sub
xor
sar
mov
(bad)
mov
dec
push
mov
xor
jns
cdq
ficom
add
add
inc
lea
(bad)
lahf
push
mov
dec
(bad)
or
mov
mov
fidiv
imul
int
pop
out
and
(bad)
data16
scas
mov
xchg
loop
pop
fadd
inc
fs
xchg
imul
(bad)
sub
xchg
pop
xor
cmp
push
push
adc
xor
add
aam
pop
aas
mov
popf
sbb
and
xchg
xchg
imul
inc
out
outs
test
loop
fdivrp
std
rol
pushf
frstor
enter
pop
cwde
mov
jle
shr
cmp
xor
push
inc
sahf
retf
or
adc
(bad)
movs
les
fwait
push
sub
mov
aaa
cmp
out
fisubr
sbb
popa
mov
cmp
cwde
lds
sub
adc
jb
xchg
into
add
jae
pop
test
jnp
jge
fsub
sub
inc
inc
push
jns
xchg
adc
push
mov
arpl
push
retf
mov
(bad)
mov
inc
jg
stc
inc
mov
ja
shr
fxch
imul
xchg
fdivr
std
dec
test
into
mov
cmp
pop
add
jno
ja
jecxz
cmps
pop
push
fdivr
bound
(bad)
jg
(bad)
add
dec
dec
lock
clc
mov
jbe
sbb
mov
arpl
arpl
inc
jge
fnstsw
jbe
xor
push
js
ins
out
and
popf
iret
xchg
xchg
mov
dec
or
mov
(bad)
lock
call
shl
fwait
sub
mov
xor
(bad)
movs
xor
pop
test
stos
pop
jmp
test
add
sbb
push
xchg
adc
mov
ins
mov
sub
iret
ret
cmp
cmp
and
fstp
mov
ja
mov
inc
jns
push
cmp
repz
pop
data16
xchg
aad
mov
stos
frstor
dec
mov
push
adc
adc
push
cmc
dec
inc
retf
pop
fmul
and
and
(bad)
xchg
jmp
stc
xchg
ins
xor
mov
sub
pop
mov
fs
dec
adc
int3
jae
and
inc
popa
push
bound
mov
dec
or
test
sbb
pop
aaa
sub
sahf
movs
mov
enter
ja
arpl
cwde
(bad)
pop
jmp
jge
test
mov
mov
in
dec
mov
fadd
imul
rcr
ins
outs
add
repnz
mov
inc
nop
(bad)
mov
(bad)
retf
cmps
adc
enter
and
add
mov
jp
inc
test
call
fst
rcl
nop
mov
jae
inc
inc
mov
(bad)
jmp
xlat
lock
sub
mov
leave
retf
fbstp
cmp
jno
push
stos
int
leave
(bad)
(bad)
fsub
mov
cs
out
iret
fsub
push
xchg
pop
sbb
scas
jne
ja
ins
aad
pop
inc
js
das
sub
stc
mov
icebp
mov
mov
xor
dec
push
sub
inc
and
ins
xchg
jmp
pop
dec
das
xor
cmps
or
add
jecxz
mov
movs
push
sub
loope
imul
inc
ins
adc
iret
fistp
and
fst
int
mov
xor
in
adc
inc
mov
xchg
xchg
ins
dec
ss
aam
sti
mov
mov
cmp
sub
call
mov
popf
cmps
pop
retw
int3
and
cs
test
inc
xor
(bad)
adc
cmc
adc
xor
inc
pop
pop
mov
ja
ja
xchg
push
into
push
out
cmps
(bad)
push
mov
mov
imul
fs
mov
in
cmp
sahf
sahf
jmp
cmps
outs
push
mov
comiss
add
fcmovnb
enter
and
in
nop
jecxz
pop
popa
push
loop
pop
push
pop
xchg
mov
imul
inc
ret
inc
mov
xor
cmp
jne
xchg
cmp
push
packssdw
popf
call
xor
pop
in
pusha
popa
nop
and
enter
or
popf
mov
add
rcl
push
or
aam
add
retf
push
ss
jmp
cmp
in
jb
out
cmp
push
pop
rcr
push
jecxz
cwde
sub
inc
adc
adc
pop
add
xchg
int
fadd
in
xchg
cld
or
and
pop
mov
enter
ds
dec
push
push
jae
(bad)
push
fdivrp
mov
(bad)
xchg
gs
scas
inc
adc
jb
push
mov
pop
nop
pop
dec
imul
fimul
jbe
adc
adc
imul
loop
ds
(bad)
jg
cmps
adc
aas
repz
xor
lea
fcomp
add
pop
sbb
or
inc
add
push
(bad)
in
push
mov
mov
sub
daa
daa
xchg
xor
arpl
fmul
ret
pop
push
sbb
sbb
pushfw
shr
in
xor
stos
sub
sar
add
bound
pop
add
shr
xchg
cmc
aas
sbb
mov
mov
jp
xor
lods
sbb
push
ffreep
call
inc
dec
outs
push
jnp
loopne
mov
shr
mov
(bad)
stos
sbb
xchg
mov
pop
sbb
pusha
mov
js
movs
leave
and
mov
repnz
je
push
lods
mov
xchg
lods
hlt
dec
aam
dec
stos
and
inc
(bad)
popf
(bad)
in
(bad)
jge
in
xchg
pop
sahf
sub
scas
scas
fidiv
cdq
and
dec
and
repz
pushf
pusha
cwde
mov
hlt
push
cld
jg
jle
outs
das
cli
xor
imul
push
xor
inc
shl
shr
push
sbb
outs
adc
shl
dec
pop
test
bnd
sbb
and
outs
std
ret
mov
lea
ins
scas
xchg
add
add
sbb
test
test
dec
loopne
xlat
fstp
clc
mov
mov
mov
push
sub
inc
add
inc
out
add
cmp
xchg
xor
pushf
sbb
sti
and
out
mov
movs
pop
fld
jl
mov
js
pop
sahf
pushf
je
push
aam
mov
(bad)
mov
add
push
mov
jb
call
mov
sub
rcr
fisttp
jae
jnp
pop
imul
adc
loopne
aad
test
or
fmul
mov
xchg
xor
test
ins
xchg
jno
push
jb
xchg
inc
jg
int3
movs
out
or
push
jmp
xor
ror
jg
or
jmp
ret
addr16
cmps
pop
hlt
add
cmp
mov
mov
sbb
push
sbb
test
sub
clc
cmp
cwde
and
ret
jmp
add
fcmovu
je
push
mov
pusha
jb
sbb
ror
shr
mov
div
cmp
adc
jae
iret
hlt
jg
add
int
dec
or
clc
outs
iret
push
jnp
add
js
int
aam
jmp
jge
ss
nop
loopne
push
outs
repnz
lahf
sbb
sub
inc
cmp
xchg
inc
imul
add
fsub
or
mov
add
add
push
in
cli
xor
pop
popa
repz
lahf
pop
pop
adc
(bad)
hlt
mov
xor
nop
jno
dec
pop
cs
sub
loope
jno
push
cwde
jp
popf
cli
repz
mov
dec
mov
shl
loop
cmp
adc
(bad)
and
fcom
gs
mov
jmp
ror
ss
inc
out
pop
jb
and
(bad)
push
mov
xor
retf
mov
xor
sub
jmp
add
mov
aaa
idiv
sbb
bound
xchg
(bad)
loop
js
(bad)
mov
int3
jae
jge
fmul
popa
imul
rol
stos
test
xchg
(bad)
mov
cwde
gs
idiv
pop
neg
ja
fmul
data16
fild
push
jl
dec
test
and
iret
push
(bad)
ret
in
je
ret
sahf
aam
and
mov
inc
mov
loopne
inc
xor
popa
sub
add
div
bound
loope
call
xor
xchg
add
call
rol
fild
shl
xor
sub
call
icebp
(bad)
std
outs
or
cmps
loopne
dec
add
hlt
ror
pop
xchg
hlt
inc
add
cwde
movs
mov
mov
ds
push
les
mov
mov
pop
mov
rcr
jle
add
das
int3
jle
scas
inc
mov
int
rcl
mov
int3
xchg
or
stos
pop
jmp
clc
cmc
xchg
stos
cmp
aam
(bad)
sbb
ficom
inc
sahf
loop
inc
pop
aad
cmp
movs
jp
fcom
arpl
or
loopne
xchg
push
sbb
shl
ss
es
add
pop
lock
dec
mov
sbb
and
sub
popf
call
mov
and
adc
sbb
out
fucomp
ss
xor
nop
push
into
dec
xchg
cmp
(bad)
push
xor
pop
dec
sub
ret
or
fwait
cld
int
cdq
add
pusha
and
retf
jmp
sub
or
fmul
jp
or
jg
pop
rcr
aad
pop
mov
mov
(bad)
movs
mov
mov
inc
push
mov
pop
cmp
ss
(bad)
dec
call
sub
mov
dec
test
jbe
cmp
inc
or
lods
xchg
adc
sti
cs
stos
cmp
xchg
clc
mov
or
pop
(bad)
jge
fiadd
sub
push
fst
and
cli
pop
push
cwde
cmp
sbb
jae
repnz
fnsave
mov
ds
dec
dec
ror
xchg
push
(bad)
jmp
cwde
xor
xchg
cmp
outs
test
pop
sbb
xor
pop
push
(bad)
outs
aaa
mov
jae
div
outs
addr16
pop
idiv
mov
sahf
stos
pop
sub
stos
jge
pop
push
pop
popf
popf
out
cli
mov
push
dec
sbb
imul
test
ret
mov
add
add
push
(bad)
mov
inc
cli
xor
inc
repz
fnstcw
aad
ss
(bad)
jbe
das
movs
push
cdq
(bad)
mov
outs
iret
cs
or
push
std
jno
cld
pop
mov
mov
repnz
fwait
clc
into
adc
outs
fwait
daa
js
in
pop
mov
add
ret
call
imul
ret
jecxz
arpl
mov
popa
push
dec
dec
mov
mov
or
rcl
or
xlat
clc
pop
mov
hlt
out
sbb
xor
push
les
dec
xor
jo
test
outs
pop
leave
mov
fbld
imul
sub
pop
(bad)
cmp
xchg
ret
rcl
cmp
push
movs
pop
stos
mov
jb
lock
stc
lahf
cmp
int
mov
push
push
imul
dec
push
call
xchg
clc
lds
movs
call
sahf
test
cmp
and
in
aaa
ins
cmc
and
idiv
nop
aas
add
adc
cwde
mov
(bad)
mov
push
jmp
mov
push
call
push
mov
add
loope
mov
sub
sub
mov
stos
or
cmps
mov
mov
fist
fistp
mov
or
int3
mov
out
adc
push
mov
mov
jmp
jecxz
cli
lahf
arpl
xchg
mov
inc
mov
and
dec
stc
push
nop
je
pop
(bad)
aad
mov
pop
js
sbb
lock
scas
cmp
and
jle
adc
shl
jb
pop
push
jge
xchg
dec
mov
push
jge
out
cdq
dec
(bad)
xor
mov
xchg
outs
mov
test
mov
inc
ret
xor
mov
test
movs
jle
pop
je
lahf
rcr
hlt
cmps
test
xchg
inc
retf
mov
addr16
push
call
test
xor
lods
and
mov
shr
xor
xchg
(bad)
and
jmp
les
mov
pusha
sub
cdq
xor
cvttps2pi
sti
cs
mov
jecxz
mov
jl
in
and
mov
jmp
test
inc
aaa
mov
ins
inc
shl
cld
sub
int
mov
sbb
jge
jns
ins
cmc
shr
or
popa
jno
pop
fild
inc
jno
add
push
sub
iret
sbb
xor
mov
add
dec
dec
sub
pop
call
or
push
jo
xchg
jmp
clc
xor
retf
test
cmps
mov
xchg
fimul
std
mov
cmp
iret
call
ds
pop
push
add
loopne
jl
push
fwait
xchg
cmp
enter
lods
cmp
xchg
test
arpl
jne
cmp
pop
nop
retf
cmp
jle
pushf
or
aad
xchg
loopne
popa
jl
(bad)
push
cs
sti
push
into
int3
xchg
ja
ins
cmp
call
cmc
inc
imul
push
(bad)
pop
inc
jno
lock
mov
jno
les
rcr
jl
or
call
cld
xor
xchg
dec
loope
sbb
ror
fisubr
and
or
or
popf
pop
fcomp
push
sub
sbb
sub
ds
mov
jmp
lds
outs
(bad)
sbb
pop
jl
mov
adc
inc
loopne
js
pop
je
xor
add
pushf
lock
xor
mov
cmp
ror
repz
clc
or
xor
sbb
jecxz
pop
xchg
cwde
and
gs
adc
lods
xchg
jbe
fs
jecxz
in
inc
xlat
call
test
mov
jns
mov
pop
loope
sbb
ds
pusha
pop
pop
in
push
ffreep
adc
(bad)
jle
rol
add
cld
popa
data16
sbb
test
out
jle
push
or
in
aad
and
iret
sub
cs
inc
dec
out
pop
std
cli
or
and
rol
les
push
sbb
scas
sub
out
iret
jno
mov
mov
mov
mov
dec
sub
pop
cmc
mov
mov
out
imul
imul
adc
lods
pop
rcl
sub
cmps
jae
gs
movs
inc
int3
sahf
(bad)
shl
arpl
mov
loopne
cmp
and
fucomi
sbb
inc
jle
mov
call
inc
out
jp
arpl
loop
push
fmul
xchg
enter
jmp
ret
add
cdq
je
mov
cld
cmp
sub
sbb
mov
pop
imul
je
sbb
imul
ins
push
xor
cmc
or
int3
inc
ret
bound
inc
fst
enter
dec
or
lahf
add
adc
inc
test
inc
mov
cmp
or
fsincos
push
and
mov
sahf
clc
push
pop
push
popa
cmc
or
dec
push
jo
and
jne
cmc
hlt
jae
add
dec
mov
mov
sub
xlat
movs
into
mov
xor
push
mov
outs
jne
out
in
mov
or
xchg
pushf
pusha
lock
jmp
dec
repnz
ins
(bad)
outs
fild
shl
enter
test
int3
mov
and
cmp
cmp
sar
stos
jb
stos
(bad)
cmp
adc
icebp
xchg
xchg
xchg
push
adc
pop
mov
mov
ficomp
sbb
stos
push
dec
aaa
push
adc
test
cmps
std
ja
test
dec
xor
dec
addr16
fnstenv
mov
xlat
int
ficomp
xor
shl
(bad)
sti
pop
lahf
and
adc
or
ins
jle
jg
inc
and
cmp
mov
add
push
xchg
xchg
add
adc
outs
in
scas
call
stos
push
inc
add
xchg
mov
mov
retfw
mov
dec
sub
in
push
cmp
inc
mov
dec
or
push
mov
dec
jnp
sbb
jmp
mov
mov
addr16
mov
xchg
pusha
ja
fld
push
dec
push
mov
cmps
sub
jmp
push
popa
into
mov
test
call
or
jge
inc
out
push
test
inc
xchg
xchg
movaps
fcmovne
dec
sub
or
(bad)
xchg
mov
js
ret
loop
pop
call
stc
cmp
mov
sbb
xor
test
xor
mov
cmps
mul
aas
out
push
dec
inc
xor
fadd
push
(bad)
rcl
popa
pop
inc
cmp
push
or
imul
and
cmp
popf
ins
iret
mov
popa
xchg
sbb
push
mov
inc
addr16
mov
cmps
outs
in
cs
inc
popa
and
jno
push
xor
xchg
lods
cld
out
xchg
shr
loopne
or
jecxz
cmc
cld
mov
mov
(bad)
xchg
popf
sbb
ins
jle
cld
hlt
mov
ret
sbb
mov
hlt
sbb
jns
mov
fnstsw
cmp
mov
stos
loopne
mov
adc
push
cmps
xchg
push
xor
mov
test
push
fs
int3
mov
in
test
in
push
shr
xor
pop
fild
mov
(bad)
int3
mov
jno
in
and
dec
pop
arpl
mov
repz
or
int
fnstenv
pop
mov
inc
jo
mov
call
cmps
sbb
inc
fisubr
test
xor
mov
pop
mov
ret
xchg
dec
xor
mov
ins
and
push
sub
pop
ficomp
imul
inc
adc
fdiv
mov
aad
mov
fst
pop
jnp
cwde
xor
scas
lock
loop
mov
add
pop
add
test
les
mov
cmp
mov
xor
push
sbb
sti
add
or
js
fs
and
test
ret
in
imul
inc
out
inc
mov
ret
dec
sbb
fld
loop
out
xchg
icebp
cdq
xchg
movs
jb
and
xor
cwde
push
mov
nop
mov
aam
adc
fisub
aad
nop
or
ds
xor
push
shl
call
push
add
jno
jne
movs
daa
shl
inc
out
pop
fadd
out
jne
cmps
fidiv
adc
mov
cs
dec
in
arpl
push
xor
mul
ja
jnp
sbb
cs
xchg
sbb
xor
mov
out
dec
mov
aad
pop
retf
push
sbb
inc
fdiv
daa
rcl
xor
inc
cwde
jbe
xchg
test
add
iret
pop
cmp
call
push
repz
inc
cmp
jno
ret
xor
push
jmp
push
or
xor
clc
mov
dec
adc
cmps
jnp
mov
cmps
xchg
sbb
mov
(bad)
aam
or
cmps
aam
push
movs
and
lock
rcl
ret
jmp
add
dec
cwde
adc
jmp
pop
dec
outs
mov
cdq
push
push
loope
arpl
xor
test
stos
out
jb
ret
xchg
cmps
test
sbb
push
sbb
add
sahf
fxch
(bad)
sbb
or
mov
outs
jbe
sub
in
push
dec
in
mov
dec
rcl
mov
enter
in
(bad)
(bad)
or
popa
sub
outs
outs
shl
aaa
enter
dec
add
and
adc
jmp
or
(bad)
jne
cmp
fmul
and
push
pop
jo
dec
cs
pusha
loop
test
mov
cwde
aam
popa
pop
shl
pop
cli
mul
push
stos
xchg
dec
pop
cmps
add
or
js
ss
pop
enter
icebp
loope
fild
add
jne
psraw
imul
sub
mov
movs
xchg
scas
mov
fidivr
arpl
aam
not
jnp
pcmpgtw
clc
push
push
test
sbb
jne
cmp
sahf
cwde
cs
push
pop
jecxz
imul
sub
xchg
retf
dec
fstp
jbe
cmc
shl
xchg
xor
out
in
out
ja
(bad)
mov
into
retf
ret
mov
sahf
movs
dec
pop
push
push
xor
cdq
int
repnz
in
cmp
jle
adc
cmp
add
adc
fst
mov
push
cmps
rcl
add
jmp
movs
xchg
and
pop
gs
popa
cmp
test
mov
jb
mov
adc
or
and
sbb
fst
clc
add
mov
call
jecxz
mov
nop
dec
jo
popf
push
mov
xchg
dec
inc
xor
push
jne
xor
movs
loopne
or
das
cmp
add
xchg
sub
mov
fbld
cld
or
jg
and
mov
mov
test
xor
test
inc
popf
mov
dec
(bad)
and
mov
test
loope
cmp
push
jl
imul
popa
fld
cmp
adc
pop
jns
mov
out
and
adc
push
in
pushf
sar
jg
ficom
aad
addr16
adc
daa
nop
push
mov
movs
mov
int
scas
dec
fcomp
sbb
adc
loopne
jne
dec
outs
dec
mov
mov
xchg
stos
js
adc
lahf
mov
cmp
out
jle
xor
lods
xchg
and
fild
call
nop
mov
call
mul
adc
pop
cli
mov
fild
loope
dec
fldcw
std
and
and
add
and
cmp
pop
mov
test
jbe
(bad)
mov
jne
add
lahf
pop
xchg
mov
inc
push
ja
adc
jns
push
mov
int
sbb
lea
hlt
inc
movs
adc
cmp
dec
dec
xlat
mov
in
sub
jne
add
add
jae
pop
fisttp
dec
lds
mov
aad
shl
and
stc
and
shl
xchg
fmul
lock
push
inc
pushf
mov
dec
mov
adc
sbb
mov
in
mov
mov
jge
mov
and
cdq
and
movs
ror
nop
or
lods
and
cmp
into
inc
lods
clc
mov
mov
push
(bad)
pop
out
hlt
pusha
std
push
or
(bad)
pop
out
std
scas
test
or
cdq
cs
and
aad
fcomp
dec
(bad)
pop
xchg
dec
inc
sub
fwait
dec
add
ficomp
fst
dec
pusha
sti
xchg
retf
dec
mov
push
mov
mov
sbb
dec
call
test
pop
out
cmc
out
cmps
push
mov
pop
dec
sti
cld
xchg
cmps
push
outs
test
repz
jnp
xchg
add
out
enter
xchg
std
inc
(bad)
cmc
xor
jb
mov
or
xchg
mov
push
pop
mov
add
add
into
retf
and
xchg
or
sub
je
pop
sub
fadd
das
icebp
xchg
push
jb
das
mov
pop
cwde
jnp
or
sbb
and
jp
enter
adc
sbb
jmp
push
add
push
sbb
popa
push
mov
arpl
mov
(bad)
jmp
cmp
xchg
inc
popf
mov
ds
pop
mov
sbb
cmp
cmp
jl
and
or
or
cmps
xchg
or
lock
cdq
and
out
in
push
pop
mov
xchg
inc
cdq
js
jmp
push
inc
int
scas
adc
sub
xchg
sahf
jmp
js
inc
mov
add
popa
popf
xlat
dec
gs
retf
cmp
ret
jecxz
aad
pop
and
pusha
into
or
push
(bad)
xchg
fsub
jl
jns
inc
mov
mov
jecxz
fnstcw
fsubr
test
aad
mov
hlt
pusha
lea
rcr
retf
call
add
rcl
jno
(bad)
je
pusha
xchg
cmps
and
jo
add
ret
cld
adc
mov
shl
add
call
cmp
mov
mov
sub
adc
cmc
loope
inc
cmp
pop
mov
daa
clc
cli
xor
jecxz
call
sbb
sti
and
or
push
(bad)
push
xchg
adc
adc
out
fdecstp
aad
cmps
sbb
mov
fwait
and
push
dec
and
(bad)
inc
mov
sbb
and
pop
ins
pop
in
movs
(bad)
test
cmp
test
sbb
push
cld
inc
out
out
stc
sub
pop
ds
pusha
jecxz
push
imul
sbb
aam
cmp
pusha
sub
xchg
mov
adc
cmp
jge
fdivr
in
imul
pop
xchg
repz
ds
enter
cmps
aas
pop
or
dec
jmp
xor
and
dec
bound
xchg
sbb
pop
dec
xchg
sub
xor
ror
dec
cmc
fist
xchg
popa
pop
dec
outs
or
fisubr
xor
(bad)
(bad)
rcr
test
je
es
xor
sub
cwde
movs
add
push
dec
mov
cmp
retf
cwde
sub
call
cmps
ins
xchg
aam
mov
cmp
out
addr16
inc
hlt
sub
fstp
sbb
mov
arpl
outs
pop
hlt
gs
pop
mov
int
outs
rol
xchg
xor
cmps
jmp
in
mov
rcr
jnp
lahf
xchg
pop
add
xchg
rcr
(bad)
mov
xor
jp
xchg
cwde
mov
sub
dec
lods
ds
inc
inc
fstp
sbb
xchg
gs
push
dec
lahf
retf
adc
dec
xchg
push
iret
repnz
mov
add
popa
pop
jb
sbb
xor
add
lahf
jno
js
push
stos
mov
mov
lds
mov
leave
in
cmps
adc
dec
ret
aad
add
mov
lds
sti
dec
stc
ds
test
repnz
push
js
movs
mov
fld
repz
movs
jmp
std
xor
scas
cli
mov
jg
cld
shr
hlt
jl
adc
push
add
mov
xchg
mov
and
pusha
sub
ret
xor
pop
aas
pop
icebp
mov
fisubr
mov
jecxz
pop
sub
int3
cmp
addr16
jle
stos
ror
pop
mov
lea
add
(bad)
adc
xchg
sbb
(bad)
mov
mov
retf
jne
inc
push
shr
cwde
les
add
and
into
mov
dec
test
shr
cmp
jae
les
aad
test
or
push
cvtps2pd
dec
nop
ins
(bad)
aas
or
enter
push
popf
inc
arpl
sub
xor
cmps
xchg
sub
and
xchg
push
clc
xchg
adc
lahf
push
adc
mov
push
inc
mov
sbb
test
mov
mov
setg
xchg
mov
clc
adc
fistp
pop
inc
mov
xchg
in
pop
xchg
add
mov
push
cmc
daa
fidiv
dec
js
add
dec
cs
out
sbb
xor
push
push
mov
jns
loop
mov
jnp
ins
dec
(bad)
fcom
stos
clc
adc
dec
and
mov
xor
mov
retf
mov
dec
lods
cmps
js
hlt
sbb
dec
ret
dec
mov
nop
int
and
jge
jmp
daa
jle
jg
jae
jge
adc
mov
mov
(bad)
and
adc
or
adc
sbb
in
pop
pop
pop
xchg
(bad)
pop
dec
(bad)
shr
lahf
xor
or
sti
cmp
nop
cdq
fistp
xchg
and
cwde
jecxz
sub
dec
push
or
add
movs
xchg
inc
repz
push
in
cmp
pop
shl
pop
sahf
mov
sbb
stos
fmul
push
xchg
call
inc
ins
cmps
clc
and
sub
scas
jb
gs
or
xor
pop
inc
arpl
adc
pop
sar
mov
fnstsw
stc
repz
out
fwait
cmp
int3
xchg
pop
out
mov
sub
jmp
inc
dec
cmp
adc
and
and
aad
jne
sub
pop
jmp
mov
dec
sub
retf
test
jbe
(bad)
xor
leave
fstp
sbb
xchg
fcmovnbe
mov
rcr
jg
jge
inc
shl
push
dec
test
add
loope
clc
add
pop
inc
repz
das
ret
jo
movlps
xchg
int
clc
or
pop
sbb
fisttp
ss
push
sub
and
and
and
cmp
imul
xor
mov
jo
and
jecxz
jecxz
test
jmp
mov
ja
cmp
jnp
add
push
cmps
mov
mov
lods
clc
in
jae
xchg
and
sbb
ret
outs
dec
add
rcl
adc
loopne
push
lods
rcl
les
push
or
jmp
arpl
clc
pop
pop
fwait
lods
mov
cmp
push
sbb
add
sub
outs
push
dec
into
aaa
push
ins
mov
int
sub
mov
bound
jp
dec
inc
adc
xlat
xor
fcmovu
push
stos
popf
add
fcmovb
cli
addr16
cmp
sub
sbb
add
inc
mov
dec
mov
call
push
lods
imul
shl
je
hlt
sub
jecxz
xor
shr
or
sub
jns
and
jno
and
pmulhuw
mov
lea
shl
jns
inc
mov
dec
add
int
push
mov
nop
imul
mov
mov
adc
test
ja
mov
inc
push
cmp
xor
sub
mov
dec
push
mov
clc
(bad)
das
mov
in
(bad)
fmul
test
lds
push
(bad)
loope
int3
gs
lock
inc
add
mov
inc
xor
cwde
imul
(bad)
shl
out
stc
push
ss
clc
or
stos
ror
push
and
mov
pop
js
cmp
mov
sar
test
stos
ins
adc
inc
xchg
rcl
sbb
arpl
ret
inc
test
repz
clc
cs
gs
xchg
fstp
push
shr
adc
popf
mov
cdq
in
in
call
push
xor
add
in
xchg
pop
mov
sbb
dec
pop
adc
cmp
pop
loopne
xchg
repz
sub
test
rol
inc
(bad)
in
pop
in
in
mov
nop
cdq
or
(bad)
mov
in
jmp
jo
mov
mov
hlt
out
call
xchg
popf
jmp
lahf
jne
lahf
jno
jmp
xor
fdiv
shr
ret
jns
out
sub
inc
enter
push
in
retf
inc
adc
cmp
cmps
mov
jno
fsubr
adc
into
jg
mov
(bad)
js
cmp
imul
aad
mov
ds
ja
mov
xchg
jne
scas
or
mov
inc
add
mov
and
add
sar
movs
lods
pushf
sbb
js
std
(bad)
retf
push
xchg
stc
add
sub
pop
mov
inc
stos
std
sbb
inc
cwde
sar
je
imul
pop
mov
mov
and
pusha
ss
mov
pop
pop
pop
test
out
shl
push
add
cmp
(bad)
mov
ja
and
mov
and
popf
xchg
xchg
xchg
pop
xchg
cmp
div
loopne
les
push
scas
cs
in
dec
adc
rcl
mov
sahf
pop
jp
(bad)
aad
xor
jg
pop
mov
sbb
test
rol
addr16
xchg
sub
iret
xchg
ins
ds
adc
adc
dec
or
mov
lods
sbb
cmp
inc
dec
icebp
inc
and
jno
mov
cmp
loopne
ins
adc
sbb
pop
lahf
xchg
pop
push
push
call
mov
fimul
sub
das
and
mov
(bad)
cmps
mov
xor
mov
inc
retf
cwde
push
loop
jmp
inc
cdq
enter
xor
jnp
or
lds
adc
xor
fnsave
mov
or
mov
xchg
retf
bound
fcom
jb
stos
mov
scas
mov
adc
inc
ins
lds
out
add
std
add
sbb
cmp
into
sub
aas
mov
addr16
aaa
xchg
(bad)
mov
ficom
add
add
fsub
mov
fwait
jecxz
dec
and
pop
jecxz
inc
fxch
ins
repnz
add
mov
push
jle
ins
sub
xlat
inc
xchg
jno
adc
cmp
adc
jp
lahf
test
int
add
push
out
daa
movs
pop
clc
popa
dec
movs
(bad)
add
push
rcl
call
push
dec
jae
adc
cmp
rcr
div
cmp
repz
loopne
cdq
aam
scas
sub
call
imul
int3
mov
jmp
in
mov
or
pop
and
pop
icebp
push
push
fmul
jge
xor
inc
in
les
and
inc
scas
mov
cmc
lods
dec
sti
shl
mov
mov
enter
movs
rol
shr
pop
cmp
mov
jae
ins
xchg
js
add
aad
ss
and
mov
call
push
dec
pushf
mov
enter
jb
jnp
cli
call
loopne
push
add
and
push
and
mov
into
mov
fdivr
mov
inc
and
or
add
aad
xchg
dec
jecxz
jno
mov
adc
ffreep
rol
push
push
add
out
mov
movs
iret
pop
gs
fdiv
loopne
(bad)
sar
fwait
jo
jo
push
xor
aas
add
outs
push
dec
sbb
aam
cld
fiadd
inc
xor
push
and
retf
nop
repnz
call
fistp
stos
sti
inc
pop
ret
and
mov
push
and
div
data16
cmp
cwde
gs
push
and
xchg
(bad)
adc
jns
cwde
or
jg
mov
fld
add
xchg
pusha
sbb
and
pushf
movs
sbb
xor
call
int3
mov
sahf
hlt
cli
fcomip
add
adc
fdivr
into
retf
rcl
loope
shr
xchg
and
mov
mov
ins
(bad)
cmp
xor
dec
int3
sbb
loope
mov
sub
mov
imul
jbe
arpl
add
(bad)
xchg
inc
lahf
jle
and
in
call
outs
cmp
cmc
sub
xchg
aas
leave
mov
xchg
adc
jp
push
push
push
adc
xchg
stos
inc
mov
frstor
js
push
mov
ss
or
lods
retf
xchg
xor
push
jmp
imul
bound
ss
cld
sub
jp
in
add
pop
push
sti
adc
mov
ret
dec
xor
push
inc
retf
inc
pop
mov
jle
out
fcom
xchg
cld
inc
push
ins
push
xchg
cs
mov
push
dec
xchg
add
in
int
jl
mov
jnp
mov
fnstenv
aad
cmp
and
sahf
jp
xchg
mul
rcr
cmp
jmp
call
mov
dec
hlt
das
repnz
int
lahf
std
or
sbb
int
jb
fcmovb
sbb
push
push
test
push
into
imul
loop
ss
mov
sahf
push
popa
xchg
sub
mov
sar
pop
hlt
xor
int
and
pop
arpl
jmp
jg
mov
fmul
fucom
adc
mov
not
dec
mov
out
fnstenv
(bad)
pop
inc
rcr
inc
mov
gs
pop
loope
xchg
ins
enter
jmp
jne
(bad)
push
pop
jno
test
ins
mov
pop
movs
or
xor
pop
inc
xor
popa
jl
lahf
xchg
sbb
push
add
sub
das
jnp
dec
push
sbb
inc
adc
je
mov
cmps
jecxz
cwde
pop
stc
push
rcl
pop
jmp
sub
mov
xor
mov
and
outs
fstp
xor
ret
aad
in
es
sub
(bad)
aad
mov
test
add
bswap
out
maxps
jge
adc
cmp
pop
push
pop
cmps
fidiv
push
inc
ret
adc
call
scas
sub
sbb
cmp
push
sbb
ins
mov
jge
pop
push
xor
test
dec
push
add
nop
aam
idiv
xchg
mov
push
(bad)
stc
repz
(bad)
cmps
mov
sub
popf
and
adc
and
pop
fdivr
into
mov
loop
movs
push
jo
rol
sub
dec
jmp
xchg
scas
xor
dec
sub
fwait
xor
aam
test
mov
cmp
lock
cmc
fmulp
cdq
and
push
xchg
or
or
push
call
es
dec
stc
imul
pop
imul
retf
pop
(bad)
cmps
leave
test
push
pop
in
hlt
int
mov
out
adc
xor
xchg
sbb
adc
adc
mov
mov
shr
fld
out
jno
sbb
enter
add
push
fldenv
out
push
mov
add
aad
mov
sbb
fcomp
inc
mov
ss
inc
mov
ins
dec
jg
mov
and
imul
(bad)
iret
loope
push
rcl
pushf
rcl
test
popf
jae
push
cmp
inc
sub
les
sub
jbe
and
dec
and
sahf
aas
std
push
aam
aam
adc
adc
enter
jecxz
into
or
jl
push
les
cmp
pusha
push
pop
dec
mov
or
adc
push
icebp
or
jecxz
mov
jmp
mov
repz
mov
xchg
inc
xchg
retf
mov
sub
sub
lods
xor
inc
cmp
scas
loopne
div
rcl
leave
je
push
lahf
(bad)
xchg
dec
nop
push
xor
pop
mov
(bad)
sub
jge
and
mov
fnsave
stos
or
add
sbb
cmp
add
mov
or
sub
or
ss
push
dec
pop
(bad)
cwde
push
inc
call
sub
lods
rcl
push
sub
movs
jg
pop
iret
int
xor
out
dec
and
and
mov
fidivr
aad
outs
sub
lods
inc
and
cmp
icebp
ret
mov
imul
mov
mov
mov
in
fmul
pop
mov
xchg
jl
div
ins
mov
xchg
mov
xchg
adc
fcom
inc
(bad)
push
or
out
sbb
rol
mov
rol
das
adc
imul
int3
push
daa
lds
cmp
adc
aad
into
and
xor
sbb
cmps
sub
xchg
out
outs
adc
stos
cmps
ja
pop
mov
test
lahf
ja
xchg
ss
push
leave
jg
mov
imul
cdq
mov
daa
xchg
ss
xor
adc
cmps
jb
scas
movs
fnstsw
adc
add
push
or
pop
ds
ja
test
jno
cwde
(bad)
loope
loope
js
mov
add
loop
push
and
fucom
aas
xchg
aam
mov
ja
xlat
(bad)
data16
std
mov
(bad)
pusha
leave
mov
scas
fldcw
push
loopne
inc
cmp
fisttp
mov
xchg
jns
sub
retf
and
xchg
(bad)
dec
jle
sbb
or
std
mov
and
pop
jbe
ror
push
(bad)
jmp
popf
mov
rol
push
xor
les
mov
(bad)
jo
cmps
or
sar
push
movs
push
lods
call
jnp
mov
(bad)
mov
adc
imul
movs
pop
mov
leave
fcmovbe
and
jp
sbb
pop
fidiv
imul
loopne
adc
icebp
arpl
cwde
fwait
or
push
jne
mov
call
aam
pop
or
sub
push
inc
pop
movsx
mov
data16
or
(bad)
push
push
jbe
(bad)
mov
xchg
xchg
sbb
push
xchg
mov
sbb
outs
and
es
lahf
(bad)
push
jno
rcl
out
mov
xlat
xor
or
das
cdq
xchg
cdq
mov
hlt
mov
icebp
push
fbstp
fcomp
shr
shl
mov
lods
pop
inc
(bad)
pop
les
and
xchg
add
pop
ror
int
test
push
out
inc
push
sub
adc
sbb
fs
inc
cwde
adc
(bad)
data16
rol
or
cwde
fcomp
sbb
cwde
loop
adc
add
stos
stos
jle
dec
dec
pop
fs
and
sub
dec
and
sub
adc
jnp
cmp
addr16
iret
mov
mov
cmp
add
jp
lea
ja
repnz
outs
por
in
daa
jp
xchg
cmp
xor
xor
fidivr
xchg
cli
xchg
cwde
pusha
call
adc
xchg
push
mov
scas
xchg
ffree
ret
adc
cmp
call
jae
or
bnd
cmp
shl
or
leave
aaa
test
call
sar
jne
jle
mov
push
inc
leave
cs
test
ret
and
push
or
(bad)
fnstsw
mov
xchg
fmul
js
and
or
into
mov
xor
mov
mov
pop
xchg
xor
dec
xor
loop
xchg
mov
outs
jne
inc
mov
rcl
lock
ficomp
test
pop
cmp
mov
push
pop
shr
(bad)
fild
sbb
(bad)
pop
sar
push
pop
adc
daa
shr
dec
push
jne
jno
(bad)
sub
jecxz
lods
ror
inc
xchg
or
jmp
xchg
in
daa
dec
stos
enter
retf
push
btr
daa
pop
xchg
imul
add
int3
cmps
mov
sub
push
shl
jno
mov
jo
sub
jno
xor
xchg
xchg
pop
add
cli
or
loope
cmps
add
mov
jns
jecxz
mov
pop
mov
in
xchg
or
jle
jmp
ins
jno
xchg
mov
test
cwde
cmp
loop
jg
cmp
pop
push
mov
rcl
xchg
cli
sub
mov
pop
xlat
dec
push
dec
outs
inc
inc
rcl
repnz
jnp
retf
jl
mov
dec
push
jno
pop
mov
aaa
punpckhbw
cmp
add
fst
mov
leave
stc
xchg
ja
jg
nop
test
sbb
pop
sbb
frstor
mov
test
mov
cmp
mov
addr16
jbe
arpl
imul
push
mov
clc
xchg
cli
xchg
adc
ins
and
je
rol
fld
xor
pop
sti
jecxz
inc
fdivr
stos
ds
loop
in
inc
in
test
cmps
aaa
xchg
push
add
rcl
int
loop
mov
and
(bad)
lock
push
sub
stc
dec
cmp
int3
cmps
jp
push
lea
test
ja
xor
jb
push
out
xchg
jl
mov
and
repnz
push
ror
adc
jmp
ds
int
add
xchg
sub
mov
fsub
push
push
fs
xchg
or
movs
inc
pop
push
mov
and
add
lock
dec
push
cmp
pop
(bad)
sbb
(bad)
sub
or
mov
push
sub
fs
hlt
sub
mov
mov
pop
into
sbb
xchg
pop
sub
or
xor
push
mov
lods
mov
shl
add
dec
(bad)
(bad)
xor
pop
loopne
mov
nop
and
mov
xchg
or
test
fcomp
outs
dec
iret
jno
push
mov
sub
mov
stos
cmps
les
lods
call
ja
out
(bad)
mov
pop
hlt
pop
cmps
mov
lods
jnp
xchg
lods
xchg
add
adc
jo
arpl
mov
cdq
cdq
ins
or
outs
sub
xchg
daa
inc
movs
xlat
push
cmps
out
mov
xor
xchg
cld
mov
std
mov
dec
aam
and
mov
neg
dec
adc
pop
ret
cmps
retf
aaa
imul
in
cmp
mov
in
sbb
cmp
sbb
sbb
das
rcl
push
push
call
add
es
stc
push
dec
push
xchg
outs
dec
call
xor
aas
adc
xor
mov
add
push
sahf
rcr
mov
loopne
mov
dec
or
xchg
test
movs
jb
push
adc
pop
pop
mov
sub
and
inc
and
dec
adc
mov
retf
mov
adc
jne
push
pushf
(bad)
xlat
mov
(bad)
fwait
add
mov
daa
fiadd
popf
(bad)
fiadd
mov
pop
(bad)
fldenv
jecxz
adc
loope
sbb
and
pushf
xor
ins
stos
in
out
jmp
outs
inc
sbb
outs
(bad)
pop
pop
(bad)
fadd
scas
lock
lahf
sti
xchg
hlt
inc
mov
cdq
cmp
ins
cwde
fsub
ror
aam
jecxz
repnz
fwait
mov
sub
adc
sbb
cdq
mov
js
or
repz
lea
retf
jb
push
sbb
mov
aas
outs
or
aaa
mov
stc
cld
call
hlt
dec
add
mov
outs
ds
rcl
cmps
lock
xor
pop
dec
sti
push
popa
mov
nop
scas
outs
(bad)
loopne
mov
pop
rcl
cld
popf
idiv
jne
out
data16
ret
and
sub
stos
xchg
cmp
or
in
mov
sub
sub
fsubr
jl
(bad)
hlt
push
dec
in
stos
or
inc
jl
cmp
popa
and
leave
pop
mov
add
or
jns
movs
or
sub
test
pop
mov
and
mov
int3
mul
std
mov
iret
inc
push
xor
inc
adc
inc
vshufpd
xchg
fsubr
daa
ins
mov
js
sbb
das
fnstsw
retf
cmp
gs
push
mov
out
inc
shl
gs
mov
(bad)
mov
mov
fadd
add
iret
pop
cmp
mov
js
add
test
or
adc
mov
mov
hlt
xor
adc
add
fistp
iret
js
or
mov
mov
mov
adc
mov
test
aad
push
push
mov
pushf
sub
mov
fwait
data16
dec
imul
fs
mov
sub
fstp
fld
push
movs
shl
or
aad
lods
push
call
dec
loope
push
mov
mov
mov
inc
call
enter
neg
add
ss
lods
lahf
stos
sar
lahf
shl
sar
sub
daa
push
in
push
or
bound
stos
push
cmp
pop
sahf
mov
movs
xchg
fnstsw
jns
push
mov
mov
xchg
jb
and
inc
icebp
sub
mov
mov
sub
div
mov
mov
loopne
pop
jns
mov
xor
xchg
arpl
movs
push
sub
cmp
jae
jle
mov
sub
mov
push
cmps
into
(bad)
pop
and
hlt
mov
jbe
cmp
aaa
cld
inc
call
andnps
vmulps
inc
(bad)
sub
loop
jnp
jecxz
xchg
or
mov
xor
or
adc
loopne
popf
mov
(bad)
ss
dec
les
jecxz
mov
nop
out
fmul
pop
iret
scas
aaa
xor
movs
leave
push
mul
pushf
dec
stc
and
xor
cld
or
das
jl
jg
fld
scas
pop
adc
xchg
fucomi
push
jmp
push
jb
xchg
inc
movs
(bad)
xadd
sbb
mov
mov
jl
sub
cmp
jo
sbb
cs
xchg
push
mov
cmp
sti
aam
sti
call
pop
sbb
jo
fs
jmp
shl
stos
inc
je
cmps
(bad)
cmp
mov
popa
mov
imul
sahf
stos
ror
and
lds
scas
jbe
pop
js
inc
retf
int3
pusha
ror
inc
pop
in
pop
pop
push
xchg
xor
arpl
inc
out
dec
pop
mov
push
imul
jl
movs
mov
sub
pmuludq
(bad)
leave
test
clc
dec
mov
aaa
jl
jp
push
xchg
inc
loop
shl
pop
hlt
jmp
sbb
and
stos
mov
aaa
cmc
pop
ss
mov
cmp
or
and
xor
shr
inc
popa
jge
push
dec
mov
jmp
ja
pop
das
pop
mov
shl
jg
(bad)
stos
test
out
(bad)
in
mov
add
dec
and
mov
cmps
mov
mov
retf
jns
js
xor
enter
(bad)
(bad)
push
jnp
mov
add
shl
repz
shl
popf
adc
xchg
sub
cmp
xchg
iret
icebp
dec
xor
test
das
or
inc
jmp
mov
cmp
mov
cwde
ins
dec
fdivr
ja
push
or
fs
xor
pop
mov
ins
das
pop
mov
sub
scas
add
iret
test
ins
and
mov
rol
inc
mov
add
push
fistp
fwait
dec
jo
add
jecxz
sub
ja
leave
and
retf
or
pop
cmc
xchg
std
xchg
mov
in
pop
xor
jb
xlat
lods
fbld
imul
aas
imul
rcr
cmp
jmp
pushf
xor
stc
jb
push
mov
inc
cmp
lock
add
sub
outs
dec
mov
popa
jg
adc
push
das
pop
movs
sbb
popf
mov
(bad)
aad
int3
jae
aam
xchg
(bad)
in
jl
shl
cmp
psubsw
(bad)
adc
movs
xchg
xor
cwde
int3
jmp
pop
xchg
stc
adc
jmp
gs
jge
out
adc
push
mov
inc
add
add
popf
pop
mov
pop
(bad)
sbb
sahf
xchg
sbb
sub
xchg
bound
lods
sahf
fidiv
dec
inc
call
lock
jge
cmps
mov
push
bound
out
pop
mov
and
loop
push
cmps
out
nop
ss
push
out
inc
mov
imul
arpl
dec
sub
or
hlt
cmp
mov
in
retf
adc
jg
inc
cmp
mov
xor
cmp
or
lock
int
jmp
je
and
mov
fucomi
retf
js
pop
jmp
adc
fiadd
cs
cmps
mov
stos
clc
pop
lock
aam
inc
gs
not
fcomp
lods
mov
push
sub
cmp
sahf
addr16
push
out
loope
pop
adc
enter
idiv
xor
repz
mov
sti
imul
iret
ins
out
loopne
inc
mov
xlat
fnstcw
inc
pop
dec
(bad)
call
outs
outs
dec
push
sub
or
dec
cmp
mov
jge
test
test
les
mov
int
(bad)
jle
add
ret
test
inc
and
mov
loope
inc
aad
jmp
mov
imul
and
out
test
jbe
imul
mov
and
push
test
sbb
pop
iret
mov
or
call
inc
jns
mov
jns
xchg
mov
cmps
frstor
xor
xchg
dec
aad
mov
bound
xchg
stos
and
fs
test
cmps
sar
jno
(bad)
push
ss
jmp
jb
or
xchg
xor
pop
and
pop
ins
mov
and
adc
ficomp
pop
mov
not
push
push
js
jg
sbb
ret
loopne
cdq
jno
addr16
jmp
inc
pushf
pop
or
leave
xchg
jmp
out
por
popa
and
leave
pop
jle
push
mov
ret
jle
lea
mov
sub
sub
clc
lahf
outs
cwde
push
jmp
cmps
jnp
ret
mov
cli
ret
ja
cld
xor
std
jl
push
in
jmp
pushf
test
lock
cs
aas
inc
mov
sbb
int3
cmp
jmp
sub
push
scas
imul
rcr
inc
sbb
aam
imul
push
js
iret
push
adc
sub
lods
js
inc
lods
sub
repnz
pushf
(bad)
jge
fistp
das
sbb
stos
out
cdq
dec
xchg
movs
je
fdivr
ds
mov
cmps
idiv
fadd
sahf
sub
adc
das
and
int3
aas
leave
ins
scas
push
pop
push
mov
jle
jmp
inc
retf
popa
lods
dec
lahf
cmp
in
mov
pop
ror
iret
jmp
aad
js
popf
aaa
loopne
pop
fdivr
jnp
mov
inc
xchg
and
push
jae
mov
jb
ror
lock
push
and
sub
xchg
cdq
mov
pop
inc
mov
sub
shl
mov
push
ret
(bad)
fisub
aas
jmp
test
sub
ret
div
inc
das
out
xor
rcl
loope
daa
cmps
out
sub
cs
js
pop
mov
ficomp
pop
outs
test
push
pop
jge
xchg
xchg
outs
add
xor
add
push
jg
scas
and
push
(bad)
or
enter
(bad)
packsswb
pushf
jg
sub
shl
jno
cld
adc
lahf
sbb
mov
movs
jne
sbb
xchg
cmp
push
leave
movs
mov
jb
xor
mov
outs
cmp
jbe
add
cli
daa
mov
stos
jb
cmc
std
mov
cmps
add
gs
call
sbb
and
cmp
js
jne
mov
aad
mov
mov
adc
mov
xchg
shl
jg
sub
ret
push
ja
and
cmp
xchg
leave
dec
and
retf
fimul
mov
sub
pop
out
dec
lds
push
pop
inc
sahf
or
xchg
push
adc
addr16
sub
out
jg
stc
adc
loop
cmps
sar
adc
push
cmp
push
(bad)
fxch
arpl
jge
or
jp
stos
in
rol
out
scas
add
movs
add
cld
ror
ins
ins
xchg
jle
cmp
pop
xchg
cmp
sbb
sbb
retf
inc
dec
jl
loopne
push
xor
sub
or
movs
mov
inc
pop
stos
xor
mov
ror
test
xor
cmp
pop
lahf
and
adc
call
nop
mov
mov
mov
(bad)
cmp
jmp
cmps
cmp
inc
xchg
adc
add
xchg
xlat
(bad)
leave
jns
sbb
(bad)
push
cmp
test
into
xor
sub
stos
sub
ror
enter
inc
ja
imul
xchg
xor
mov
or
mov
adc
mov
push
movs
ror
add
adc
mov
das
shl
jno
cmc
in
fimul
retf
cwde
xor
jne
outs
jmp
or
and
sub
push
stos
outs
lea
dec
mov
sub
adc
cwde
mov
scas
mov
add
lds
mov
sbb
into
into
daa
bound
push
cdq
dec
cmc
popf
fs
sbb
ret
dec
pop
jmp
ja
sub
mov
arpl
or
adc
xchg
inc
cmp
sbb
jb
out
daa
arpl
in
ja
(bad)
leave
push
pop
push
dec
int
ja
mov
mov
les
lock
xor
pop
loop
adc
movs
mov
sub
mov
pop
aam
inc
shl
sub
inc
and
jne
scas
and
sbb
pop
cmps
push
xor
movs
ror
imul
ss
lea
in
inc
push
mov
mov
fstp
xor
out
into
push
stos
mov
and
sahf
shl
enter
adc
fsubp
xlat
enter
xchg
mov
inc
sub
or
movs
mov
shl
push
fist
sub
pop
fwait
sahf
stos
push
dec
xchg
pop
mov
mov
dec
inc
test
sub
inc
inc
pop
movs
fwait
dec
mov
jecxz
in
mov
aas
sbb
fld
sub
inc
test
xchg
dec
push
dec
mov
int3
cmp
in
shl
jb
mov
test
ds
in
and
aad
imul
jmp
xor
sub
pushf
xchg
rcl
es
(bad)
das
or
stc
and
and
scas
sti
pop
lea
or
dec
mov
rcl
stc
sub
push
mov
push
inc
or
cmps
inc
add
mov
mov
daa
or
mul
int3
iret
loop
nop
jne
mov
lods
mov
mov
data16
jno
push
fxch
push
mov
push
and
sbb
adc
ss
out
les
pop
ins
jno
imul
int3
cmc
jmp
out
push
ret
jle
aas
call
sahf
(bad)
loopne
sub
(bad)
std
pop
hlt
call
mov
or
pop
mov
in
movs
sbb
mov
(bad)
in
dec
in
mov
out
cdq
mov
cdq
test
lods
push
jecxz
xchg
fnsave
lahf
mov
xchg
ret
mov
adc
sbb
pop
pop
fld
xor
push
aaa
jg
xchg
and
lea
mov
mov
cmp
gs
mov
ror
mov
sti
mov
movs
pop
xacquire
adc
jae
xchg
and
adc
xor
jecxz
sub
sar
mov
mov
cmc
sub
call
(bad)
ja
mov
pop
retf
inc
das
inc
dec
ds
int
fwait
or
xor
aaa
test
ja
cmp
je
jnp
mov
out
mov
cmc
shr
xchg
adc
pushf
add
or
sub
shl
cmps
dec
or
cmps
inc
xchg
push
icebp
sahf
push
addr16
mov
in
ins
aad
pop
cld
retf
xchg
jno
mov
sub
pop
js
dec
jae
icebp
dec
movs
ja
pop
mov
stos
lahf
lahf
jl
xchg
enter
in
repnz
stc
jb
inc
arpl
clc
mov
sbb
test
mov
pop
pop
stos
xchg
or
imul
sahf
rcr
ins
push
lock
mov
inc
push
dec
pop
add
sbb
scas
mov
loope
dec
stos
jne
push
(bad)
repz
stc
xor
fmul
pop
cwde
stos
sbb
xchg
add
pop
mov
xchg
sar
push
idiv
and
jno
lock
cdq
ins
jmp
fwait
sbb
adc
shr
mov
cs
inc
ret
mul
push
add
cld
adc
and
imul
retf
inc
push
and
out
(bad)
jae
sbb
push
inc
mov
push
pop
ins
cmps
cli
jg
mov
in
data16
push
and
shl
call
loope
jmp
jg
dec
inc
les
xchg
cmps
dec
repnz
repz
movs
xchg
sbb
hlt
bnd
add
mov
or
pop
mov
shl
popf
push
repnz
fadd
lods
xor
cmp
add
aad
popf
inc
mov
sbb
mov
aas
jae
mov
or
xchg
jp
in
cmp
gs
sbb
pop
mov
and
std
mov
push
aaa
inc
jmp
div
push
lock
data16
push
sbb
int3
arpl
loope
cli
int
and
sahf
mov
dec
add
clc
aaa
ds
pop
dec
clc
rol
ins
movs
pop
jecxz
cmps
int3
mov
imul
ret
inc
(bad)
mov
dec
sbb
cwde
retf
adc
xchg
cmc
not
cmp
loop
xchg
sub
lds
int3
imul
mov
dec
mov
cmp
and
pushf
xchg
shr
mul
add
dec
xchg
stos
(bad)
mov
fcomp
dec
mov
mov
xchg
fwait
mov
and
(bad)
call
mov
mov
push
cmc
push
xchg
mov
and
inc
data16
jnp
es
push
fadd
addr16
jmp
aas
jle
imul
lock
or
into
cdq
js
int3
iret
mov
xchg
inc
mul
xor
inc
(bad)
aas
cmps
or
jge
cmps
pop
iret
lds
add
mov
arpl
add
add
jp
and
xor
sub
mov
pop
sbb
frstor
jne
lods
sbb
inc
mov
push
pop
fs
adc
nop
into
pop
cmc
je
pop
mov
aad
pusha
and
cmps
mov
stos
iret
mov
repz
sbb
cwde
add
push
lods
push
outs
gs
mov
aad
inc
ins
hlt
mov
ds
imul
inc
sub
push
and
or
pop
out
in
and
cmp
dec
hlt
mov
out
ds
jbe
pop
scas
(bad)
mov
sub
pop
repnz
cwde
scas
mov
frstor
push
mov
mov
jmp
push
mov
jo
xchg
data16
pop
out
jne
cmc
repz
dec
jecxz
je
jo
lods
add
cmp
imul
and
push
hlt
mov
adc
lods
pop
test
and
or
out
mov
mov
mov
jmp
sbb
add
xlat
sbb
push
sub
sbb
(bad)
add
imul
pop
or
sub
push
sbb
pop
cmp
mov
mov
push
adc
adc
and
in
fs
(bad)
push
dec
jg
outs
mov
call
mov
xor
mov
cwde
icebp
xchg
sbb
out
pop
mov
fimul
adc
neg
add
xor
pushf
ja
sbb
jne
retf
xchg
call
jbe
sub
retf
pop
fldcw
jmp
adc
mov
and
sahf
rcl
shl
imul
or
lods
repnz
fcomi
adc
fs
icebp
cmp
out
lods
(bad)
int
das
jl
adc
stc
imul
xlat
mov
mov
cmp
ret
fstp
add
out
adc
jmp
ins
fisttp
inc
ins
out
mov
dec
jno
mov
iret
add
dec
dec
push
adc
xchg
cmp
mov
js
out
inc
pop
or
outs
test
scas
or
or
mov
cdq
mov
mov
jb
loope
les
std
xchg
mov
mov
lock
cmps
mov
test
jo
cmp
imul
push
inc
or
push
ror
out
jmp
cwde
and
lahf
sub
push
ficom
mov
or
push
cmps
xchg
imul
sar
dec
clc
in
push
mov
lds
mov
mov
fs
inc
das
xchg
jl
cmp
cmc
mov
out
fiadd
pop
or
adc
xor
movs
jb
push
imul
jne
lods
push
mov
xor
test
lods
hlt
clc
lahf
or
or
add
pusha
mov
or
dec
sbb
ins
push
push
fsubr
xchg
jno
(bad)
jl
xchg
dec
mov
pop
cmp
icebp
mov
add
dec
in
cmp
add
push
mov
dec
test
dec
mov
cdq
cli
xor
sbb
cmc
imul
(bad)
mov
sub
mov
ja
xor
xor
sbb
pusha
enter
or
xor
inc
and
div
fimul
pusha
mov
cdq
(bad)
push
rcl
std
cmp
cmp
and
es
popa
outs
xchg
or
aas
mov
cld
mov
sub
cmp
int
push
mov
sbb
ss
cli
out
push
inc
(bad)
jae
in
cmps
test
movs
das
mov
fist
sub
test
ss
mov
xor
jb
sub
movs
cmc
or
inc
inc
mov
sbb
retf
ror
sar
shufps
mov
out
(bad)
shr
mov
das
imul
fwait
rol
jmp
and
into
pop
bound
popa
push
es
cmp
add
into
jecxz
ror
adc
mov
sbb
fcmovnbe
jl
sbb
pop
xchg
test
push
and
mov
inc
loop
in
lods
jp
xchg
add
jae
outs
arpl
xor
mov
out
xchg
adc
mov
test
stos
sub
mov
movs
or
jl
std
mov
inc
cmp
sar
or
dec
(bad)
adc
dec
addr16
jecxz
popa
adc
imul
jbe
jp
in
sbb
in
sbb
jl
movs
sub
mov
xchg
push
or
leave
clc
xlat
mov
cli
sub
mov
dec
mov
push
ins
repz
(bad)
imul
div
inc
addr16
or
push
out
mov
dec
add
dec
sbb
sbb
icebp
imul
mov
mov
ror
stos
retf
bound
ja
shl
jl
es
cmc
sahf
xchg
pop
scas
popf
sub
pop
xchg
mov
icebp
rol
mov
test
mov
dec
xchg
pop
sbb
iret
popa
pop
fnstcw
push
data16
jno
test
je
cli
jmp
cmp
outs
(bad)
cld
or
retf
arpl
dec
aaa
mov
js
popa
fwait
je
jg
pop
sahf
xor
lahf
dec
jge
mov
ror
inc
adc
mov
xlat
leave
movs
(bad)
fst
jl
push
adc
lods
bound
mov
sbb
xor
sbb
jbe
cmc
sti
call
(bad)
daa
sub
sub
jp
adc
rcl
sub
xor
fs
scas
xlat
ins
pop
inc
aas
inc
mov
xchg
enter
xchg
pop
jns
mov
xlat
cld
sub
lea
mov
js
das
mov
xchg
adc
addr16
xor
in
dec
hlt
cmp
pop
inc
sub
push
sub
popa
fadd
outs
mov
mov
or
mov
aas
ja
adc
out
ins
add
test
mov
cmps
mov
cmp
jae
mov
stos
mov
(bad)
ss
pushf
sub
arpl
std
cmp
xor
std
pop
inc
dec
loop
fs
push
fs
add
pop
cli
mov
cmp
xor
inc
test
jo
pushf
xchg
call
mov
cmps
add
addr16
jl
fxch
aas
jmp
test
jecxz
and
adc
mov
jl
shr
dec
loopne
dec
cmp
ins
ins
ror
int
xchg
fwait
das
call
scas
inc
jmp
mov
add
xchg
sti
ins
xchg
out
push
jle
xor
mov
dec
mov
pop
fs
jge
fnstcw
into
cld
(bad)
jb
(bad)
xchg
adc
push
aam
(bad)
nop
(bad)
lods
clc
outs
fsub
lds
xchg
pop
lds
xor
out
and
jecxz
push
ret
clc
dec
pusha
pop
test
fild
xlat
mov
pop
ins
aas
stos
imul
les
xor
mov
push
xchg
retf
mov
cmp
fisttp
push
mov
dec
cdq
in
xchg
mov
adc
xchg
arpl
cmc
sub
inc
cmp
pop
fcom
jmp
addr16
in
pop
xor
arpl
movs
cs
test
cdq
mov
pop
iret
adc
jb
and
(bad)
retf
aad
je
test
int
rol
jmp
cmp
xor
inc
pop
lods
or
int
xchg
ins
ret
sub
cld
or
lahf
inc
jbe
inc
test
pop
mov
cld
rcl
sbb
rcl
(bad)
popa
loopne
mov
mov
jecxz
mov
dec
(bad)
in
outs
cdq
ss
ins
push
mov
aam
mov
pop
sbb
pusha
pop
bound
pcmpeqd
cmp
jle
and
dec
mov
mov
movs
aad
lea
inc
xor
mov
aas
ins
adc
je
test
les
das
cwde
xchg
cmp
sub
enter
aas
push
mov
sbb
repz
inc
ja
dec
jnp
cmps
dec
cmps
outs
jbe
ja
loop
adc
adc
xchg
scas
sbb
(bad)
dec
mov
daa
push
inc
or
mov
bound
sbb
imul
retf
or
arpl
(bad)
loop
pop
xchg
dec
and
pop
ror
and
dec
ficom
cmps
jl
jmp
mov
mov
jge
lods
mov
int
pop
cmc
pusha
movs
mov
daa
loop
push
xor
dec
int
icebp
xchg
inc
push
lds
or
dec
and
add
mov
fbld
(bad)
loop
push
call
pop
call
pslld
lock
fld
push
pop
dec
rcl
jecxz
retf
fadd
fs
or
fldcw
daa
jp
mov
fwait
xor
inc
and
mov
mov
pop
arpl
adc
lahf
mov
stc
jns
cmp
push
push
mov
fst
jp
xchg
jbe
dec
jae
fdiv
sti
push
sahf
cwde
pop
pop
mov
shl
adc
push
inc
adc
jnp
je
out
inc
dec
jmp
jl
sub
retf
movs
or
sub
dec
xchg
out
aad
stos
cs
inc
mov
jnp
neg
push
lods
not
push
pop
cmp
in
add
in
add
adc
ins
or
(bad)
(bad)
xchg
add
les
or
imul
add
shl
push
(bad)
sahf
mov
mov
jp
cli
in
mov
jae
in
dec
dec
enter
or
les
dec
mov
dec
lods
mov
push
xor
ficom
addr16
loopne
(bad)
fst
xor
(bad)
fldcw
jecxz
cmc
rcr
jno
ror
je
adc
dec
or
cmp
es
icebp
(bad)
or
ss
xchg
mov
sub
fs
push
fisub
movs
popf
fist
das
or
stc
and
or
jl
fidivr
aam
inc
test
cld
lods
cmps
cmp
push
jp
mov
dec
fnstenv
pushf
add
lahf
mov
add
shr
(bad)
or
rcr
lahf
jge
adc
aas
sbb
add
push
int
sub
mov
push
cs
adc
mov
into
dec
push
js
and
adc
push
outs
jg
das
adc
cmp
into
mov
pop
imul
mov
cmp
arpl
das
add
push
dec
retf
enter
cmp
inc
or
jle
xor
imul
pop
push
jne
mov
inc
cmp
cld
and
in
ins
sbb
cmp
mov
cmp
cmps
call
dec
pop
jno
sub
mov
rol
mov
int3
jmp
mov
dec
and
dec
cmp
xlat
daa
dec
cli
call
sbb
cmps
test
loope
aam
fcmovbe
loop
pusha
outs
inc
cmp
jno
pop
shr
lds
out
adc
pusha
inc
mov
sub
mov
mov
jg
fucomp
xchg
push
ror
nop
push
jmp
test
xchg
jmp
les
xor
jns
pushf
inc
mov
ja
and
xchg
mov
inc
cld
test
and
push
jno
aam
cli
pop
repz
in
xchg
jae
sar
xchg
repz
ja
mov
ret
xlat
pop
mov
scas
pop
scas
inc
clc
adc
pop
push
mov
jne
mov
mov
int3
pop
cs
jmp
ins
mov
push
fstp
clc
into
xchg
push
(bad)
xchg
xchg
(bad)
movs
adc
(bad)
jo
cpuid
loop
push
sub
ins
stos
jae
adc
jecxz
cmps
shl
iret
jo
jge
mov
xlat
ss
mov
(bad)
mov
dec
xlat
or
xlat
inc
cmp
push
int
scas
jmp
sbb
pop
jl
mov
jb
scas
mov
xchg
pop
inc
and
and
aaa
daa
fsubr
pop
stos
ins
movs
jns
(bad)
mov
mov
push
or
sub
mov
loop
pop
js
daa
fist
jge
sbb
add
xor
sub
xor
sbb
outs
cs
scas
push
and
inc
jmp
mov
adc
adc
lock
dec
mov
les
mov
rcr
scas
stos
mov
and
pop
xor
lea
pop
cwde
pop
mov
pop
enter
mov
or
addr16
xchg
mov
mov
std
xchg
scas
data16
add
dec
dec
stos
adc
dec
sub
adc
or
jnp
aas
sub
push
mov
popa
popa
ins
mov
fnstenv
jp
mov
pop
hlt
jl
in
dec
out
or
inc
inc
call
mov
mov
je
mov
fidivr
adc
push
loopne
jle
bound
das
inc
mov
xchg
sbb
ss
xchg
icebp
mov
(bad)
mov
xor
lods
jmp
fidivr
inc
les
dec
lock
xlat
jbe
xor
xchg
mov
add
and
in
dec
mov
add
bound
xchg
shl
dec
je
mov
ficom
and
dec
aad
add
repnz
loopne
outs
push
inc
test
(bad)
and
mov
xor
jecxz
or
pop
shl
into
inc
lds
mov
push
popa
gs
pop
arpl
scas
xchg
and
push
std
lds
mov
rcl
gs
push
int
jp
pop
cmps
jg
icebp
lock
adc
pop
add
(bad)
push
cmp
mov
and
clc
jl
cmps
dec
dec
ins
push
outs
stos
mov
mov
mov
mov
pop
push
mov
sahf
and
das
or
in
je
add
jp
dec
push
out
iret
mov
js
daa
fcmovb
adc
adc
or
sti
retf
sub
jns
adc
movntq
push
mov
push
mov
rol
mov
shr
jae
mov
jnp
inc
addr16
dec
add
sahf
call
mov
cmp
add
mov
retf
sbb
and
div
ds
push
xchg
mov
cmp
sbb
ja
cmc
push
dec
cwde
aam
adc
adc
(bad)
xor
lea
or
mov
dec
jl
into
mov
add
lods
pop
push
or
sbb
stc
sbb
adc
cmp
mov
arpl
hlt
and
xor
inc
push
adc
fiadd
movs
cmps
pop
jge
sbb
(bad)
xchg
nop
mov
jb
inc
xchg
stos
repnz
(bad)
jg
push
iret
fbld
xchg
mov
das
idiv
ss
mov
hlt
inc
push
mov
(bad)
jno
mov
fiadd
sub
adc
xchg
inc
jp
es
fist
call
or
cmps
push
cmps
scas
xchg
aad
retf
push
fisttp
stc
stc
dec
sub
dec
adc
int
mov
adc
int3
daa
mov
in
(bad)
xchg
mov
stos
cwde
rep
dec
mov
fimul
int3
and
dec
ror
mov
jb
mov
cmp
test
(bad)
push
and
iret
out
rcl
xchg
les
push
mov
xchg
outs
pop
adc
or
fiadd
xchg
cmp
sahf
loop
push
jmp
jns
ffree
xchg
sub
(bad)
sbb
dec
cmps
lahf
jp
xchg
lock
cdq
clc
xor
inc
not
and
lea
push
inc
lock
out
fs
mov
imul
xor
pop
pushf
jns
lods
push
pusha
mov
outs
mov
jle
out
inc
adc
cli
xchg
inc
pushf
pop
dec
gs
fistp
popa
pop
and
xchg
adc
sbb
js
(bad)
test
es
test
add
inc
and
addr16
dec
retf
mov
or
stos
push
mov
ret
inc
cmps
xchg
dec
and
popa
movs
imul
imul
int3
fst
daa
xor
out
dec
mov
sub
test
cmps
loop
or
push
sub
sbb
sbb
sbb
aas
ins
enter
in
adc
push
(bad)
push
out
mov
and
mov
adc
lahf
and
xchg
data16
rcr
push
ror
mov
sbb
aam
mov
jb
jne
and
inc
fst
cli
mov
ds
pop
dec
(bad)
in
movs
sub
push
std
enter
das
sbb
cmps
ja
dec
mov
cmps
ins
inc
int
jp
js
and
xchg
ret
xchg
mov
inc
push
sub
add
outs
ins
out
cmp
sbb
inc
fidiv
movs
cmp
xchg
or
sub
adc
and
fdiv
outs
adc
xchg
in
sbb
mov
bt
stc
loope
xchg
enter
fdivr
mov
retf
sar
push
push
(bad)
int
shl
mov
sbb
pop
sub
js
cdq
xchg
(bad)
(bad)
pop
sbb
push
loope
aaa
(bad)
xchg
movs
test
ins
add
push
(bad)
loopne
mov
add
js
aam
shl
xor
scas
call
into
sub
inc
in
(bad)
jns
movs
sub
data16
into
loop
add
das
sub
sub
shl
cmc
add
fist
mov
sub
xchg
xchg
dec
ja
dec
scas
fwait
adc
std
jns
inc
pop
add
sbb
(bad)
test
pop
jns
inc
and
pop
aas
dec
out
and
xor
gs
mov
jnp
iret
imul
shl
dec
or
aam
ss
jge
(bad)
imul
ret
je
mov
out
mov
xor
fwait
sbb
nop
out
xor
inc
out
int
addr16
jne
xchg
sbb
sahf
and
mov
xchg
sti
xchg
(bad)
fist
das
cmps
mov
out
xchg
add
cmp
jae
xchg
(bad)
pop
sub
xor
es
add
rcr
or
pop
xchg
jnp
or
inc
dec
(bad)
(bad)
inc
pop
stos
inc
pop
es
fnstcw
and
mov
dec
cmp
inc
out
sbb
push
mov
or
cmp
lahf
ret
jb
sbb
mov
das
xchg
das
push
rol
jle
popa
(bad)
fild
adc
div
pusha
dec
cmp
das
inc
(bad)
fcom
jmp
xor
lods
jbe
aad
jno
push
push
ins
sbb
lahf
add
jecxz
mov
sub
cmp
dec
je
sbb
scas
sub
pop
sbb
movs
jo
xor
jg
in
mov
ins
and
fisttp
arpl
sbb
in
dec
aam
dec
inc
cmps
adc
dec
push
pop
bsf
mov
adc
pop
loop
jno
addr16
retf
mov
cwde
inc
cmp
adc
xchg
xor
push
sbb
(bad)
fxch
jae
repnz
push
mov
out
pop
xchg
mov
mov
fucomp
popf
push
dec
dec
xor
lods
mov
cli
pop
mov
ja
retf
or
and
outs
inc
adc
jle
push
ret
loopne
inc
mov
push
jg
in
dec
pop
mov
inc
(bad)
jo
fld
scas
cdq
scas
cwde
or
pop
repnz
pop
pop
call
xor
pop
stc
pop
movs
stos
jecxz
fs
fisubr
cli
fisttp
xor
repnz
and
movs
sbb
pop
dec
ret
add
xchg
push
pop
aaa
jb
xor
arpl
pop
and
ins
jecxz
and
aaa
or
jmp
leave
mov
mov
outs
push
cmp
jge
or
mov
fild
mov
jae
out
jne
mov
mov
xchg
inc
inc
inc
in
icebp
test
and
out
cmps
dec
cmp
es
fwait
mov
xchg
pop
into
cmps
add
mov
(bad)
loope
xor
cmps
test
dec
lods
lds
adc
sbb
adc
test
mov
outs
cli
sub
xchg
dec
fwait
jo
movs
neg
jae
std
(bad)
fisttp
sbb
push
jp
adc
sub
fild
pop
in
xlat
jae
xor
lods
mov
mov
push
pop
nop
pop
retf
sahf
inc
xchg
adc
xor
ins
mov
out
test
push
pop
aaa
dec
test
inc
idiv
mov
and
xchg
push
jmp
jb
push
cmps
ds
inc
sbb
lock
outs
repz
cld
xchg
push
test
stos
pop
lea
jl
sub
dec
inc
addr16
loop
or
mov
xlat
add
fmul
or
push
js
call
nop
add
pop
test
xchg
add
add
cmp
cmp
cs
cmp
(bad)
mov
push
mov
test
stos
mov
inc
jmp
or
adc
aad
adc
xor
pop
hlt
leave
ins
jmp
ror
shl
mov
jecxz
jns
xchg
sub
cmp
push
mov
mov
cmps
jb
test
xchg
shl
shr
mov
jl
jo
arpl
inc
dec
or
aam
ret
bound
mov
cmp
imul
jg
pop
not
es
add
pop
and
pop
imul
loopne
repz
lods
(bad)
pop
rcl
rol
pop
shl
mov
and
cmp
adc
fwait
sbb
jmp
pop
pop
jae
test
push
or
retf
sbb
mov
sahf
aas
cmc
sahf
repnz
add
dec
xchg
push
and
iret
jbe
jno
mov
add
mov
or
fstp
jne
js
add
iret
jmp
and
cmps
or
jge
lds
pop
popa
mov
in
ret
mov
xlat
ins
fmul
xchg
cdq
test
inc
out
lds
pusha
dec
test
mov
lock
daa
pop
jl
pop
ret
fadd
pop
jbe
pop
mov
rol
stos
sbb
(bad)
scas
ds
lods
or
push
jae
mov
jmp
and
sbb
jns
pop
stos
mov
fisubr
in
inc
add
aam
imul
mov
idiv
mov
cmp
or
ins
lea
xchg
or
jbe
mov
ins
ins
mov
in
into
call
push
test
cwde
sub
das
sub
in
fs
je
add
cmps
push
xor
icebp
int3
sti
pop
and
jge
imul
mov
loop
iret
mov
push
sub
or
jecxz
push
or
clc
aaa
push
test
fistp
lahf
inc
cmps
shl
fst
mov
arpl
push
ss
push
mov
fistp
sub
fcmovnb
addr16
and
push
add
test
repz
loopne
xor
jo
xchg
lahf
aas
data16
mov
xlat
dec
xchg
xchg
loopne
dec
jge
pop
dec
jne
xor
mov
nop
sbb
add
lods
stos
pop
mov
cmp
push
outs
mov
mov
push
mov
xor
mov
xor
push
inc
dec
mov
push
(bad)
lds
mov
dec
addr16
mov
pusha
cld
ins
retf
mov
xchg
or
jbe
daa
mov
scas
xchg
or
inc
mov
scas
iret
mov
fwait
(bad)
dec
scas
cmp
cdq
pop
xlat
jmp
daa
mov
in
sbb
in
icebp
test
stos
(bad)
or
sub
out
(bad)
rcl
dec
sbb
mov
stos
push
in
inc
adc
or
xor
dec
ficom
mov
add
mov
mov
cmp
pushf
sbb
mov
sub
cmps
inc
addr16
xor
xlat
xor
movs
dec
jg
out
imul
mov
leave
jns
mov
jl
into
rep
ret
jp
xor
sbb
adc
ins
cmp
pop
mov
sbb
mov
jb
and
(bad)
pop
adc
sub
aam
cli
mov
pop
mov
adc
mul
xor
jo
xchg
sbb
pop
int3
inc
scas
mov
jl
fcom
sub
les
add
pop
mov
sub
sub
cdq
ror
dec
push
outs
sub
cli
jo
pop
add
or
sbb
lods
inc
mov
cmps
out
gs
mov
loope
not
or
inc
imul
(bad)
adc
ror
iret
push
fwait
enter
mov
rcr
cld
sbb
fsubr
jmp
xchg
sahf
inc
(bad)
sub
adc
fist
lods
daa
push
cli
cmp
in
jl
mov
movs
add
xchg
or
imul
mov
xor
fld
test
pop
mov
xor
cmp
jmp
push
jge
mov
repnz
jmp
ins
sub
fistp
nop
xchg
dec
lock
sbb
sbb
pop
push
xor
mov
and
pop
mov
test
pusha
(bad)
push
xchg
dec
sbb
jge
add
out
test
(bad)
not
xchg
jmp
out
push
cdq
xchg
jmp
dec
shr
outs
add
outs
pop
inc
mov
xlat
jno
out
std
fist
cmps
popf
xchg
jno
dec
sbb
mov
pop
mov
adc
hlt
dec
pop
fnstenv
xchg
xchg
scas
fwait
adc
sub
pop
add
and
loope
sbb
sbb
mov
push
jmp
xor
jns
dec
ins
loope
inc
fcmovnbe
mov
or
xor
hlt
call
hlt
and
sub
cmps
shr
xchg
fucomp
cmps
(bad)
sub
jne
rol
das
adc
(bad)
mov
lods
inc
pushf
lahf
pop
or
mov
sbb
adc
inc
mov
sbb
lock
pop
xchg
or
pop
mov
pusha
dec
jne
xor
jne
ret
mov
sbb
addr16
push
pop
pop
movs
mov
enter
mov
dec
ins
mov
nop
pop
loop
mov
mov
sbb
push
xchg
jbe
jge
dec
popf
push
jp
pop
mov
and
pop
lds
movs
inc
jae
mov
adc
mov
(bad)
lds
inc
sbb
popf
lahf
xchg
aaa
mov
lds
adc
jae
movs
mov
mov
out
ins
xchg
daa
pushf
and
or
fst
outs
pop
pop
(bad)
(bad)
ret
(bad)
cdq
clc
cmp
and
js
imul
add
push
ret
xchg
adc
cmp
stos
adc
or
push
inc
imul
dec
jle
mov
(bad)
xchg
(bad)
jne
ins
mov
arpl
add
mov
or
movs
inc
idiv
add
xchg
out
jecxz
mov
stc
(bad)
mov
mov
fs
ficom
cmp
cli
xor
fwait
pop
out
mov
jmp
inc
mov
stos
add
jge
cmps
rcr
jmp
xor
xor
xchg
dec
fdiv
sbb
stc
push
push
or
test
mov
fs
push
outs
out
jle
inc
(bad)
pop
pop
ins
sti
cld
repz
pop
dec
sbb
jg
push
cmp
sbb
jb
jnp
(bad)
cmp
mov
ja
out
dec
call
pop
(bad)
cmp
mov
pop
jmp
fwait
and
loope
jns
dec
sar
jne
push
test
test
mov
into
adc
sub
sub
jl
test
cmc
cmps
lea
push
fisttp
pop
or
push
popa
in
mov
or
in
sti
jo
xchg
and
enter
mov
push
add
stos
retf
mov
xchg
hlt
mov
jecxz
mov
pop
mov
cmps
retf
mov
jne
mov
mov
fsub
sub
mov
ror
je
das
xchg
loop
in
jle
jns
pop
xor
(bad)
mov
sub
retf
or
dec
cmp
cmp
mov
cmps
and
test
dec
mov
add
xchg
inc
enter
xor
xlat
dec
daa
sbb
inc
and
jns
je
xor
inc
mov
retf
fs
mov
lahf
mov
pop
push
and
out
in
mov
xchg
push
push
xor
pop
in
ds
mov
jb
das
popa
pop
mov
aaa
cmp
inc
call
aad
(bad)
sbb
cld
fwait
in
loope
das
push
stos
pop
xor
push
add
into
jle
pop
inc
daa
in
retf
dec
test
nop
add
cli
aas
pop
xchg
push
or
call
inc
or
imul
push
xor
ret
ins
mov
and
imul
in
cdq
add
jmp
xor
push
shr
(bad)
fstp
sub
mov
mov
mov
test
hlt
in
xor
leave
aam
inc
inc
mov
inc
aad
cmp
icebp
cmp
aam
push
xchg
cmp
inc
xchg
pusha
pop
jbe
or
or
cmp
sbb
ins
lahf
addr16
cdq
dec
pushf
js
test
test
fs
int3
mov
xchg
add
jge
adc
pop
sub
pop
daa
mov
add
and
cld
pop
out
push
or
clc
(bad)
dec
inc
fidiv
lods
ds
(bad)
popf
repnz
cs
xor
lods
call
mov
xor
fisttp
jge
push
push
out
sahf
ficomp
mov
mov
arpl
xor
mov
lahf
lahf
sub
xor
shr
js
jnp
sbb
jl
adc
push
call
add
jecxz
movs
mov
add
test
ss
pop
pop
mov
jp
push
xchg
xor
addr16
lock
dec
imul
gs
fstp
test
je
rol
mov
inc
pop
cmp
neg
xor
inc
or
sub
inc
mov
retf
push
mov
or
add
mov
pop
xor
sub
cmp
(bad)
dec
fnstsw
pop
cdq
inc
pop
mov
cwde
xchg
int
mov
out
sbb
fiadd
fidivr
mov
jno
bound
xor
sub
mov
jp
test
leave
xchg
and
or
imul
cmps
or
inc
xchg
pusha
adc
xchg
cwde
nop
mov
cmp
and
pusha
ja
inc
mov
lods
jb
(bad)
push
mov
pop
xchg
push
or
xor
push
test
or
repz
adc
(bad)
pop
imul
dec
das
inc
adc
fwait
xchg
or
sti
xchg
(bad)
loope
mov
mov
mov
mov
xchg
add
push
push
mov
jge
jnp
mov
mov
repz
cmp
push
clc
push
imul
and
cmp
push
inc
retf
jns
fucomip
mov
test
cmp
in
retf
adc
fst
xor
out
shr
cmp
jne
(bad)
je
pop
mov
xchg
jo
adc
push
loopne
lods
or
adc
test
and
jmp
cmps
jo
imul
je
pop
mov
pop
jnp
cmp
leave
pop
inc
in
push
fdivr
sub
gs
mov
popf
movs
sub
std
jmp
int3
test
mov
inc
fstp
push
sbb
imul
(bad)
pop
jae
pop
or
inc
inc
cdq
jnp
jbe
(bad)
(bad)
in
les
test
mov
mov
pop
outs
in
xchg
mov
mov
mov
xchg
repnz
xor
and
out
push
(bad)
in
mov
les
pop
out
cwde
push
pop
movs
(bad)
mov
test
mov
or
cli
cli
rcr
rcl
inc
mov
enter
push
and
adc
adc
sub
add
lea
lock
inc
xchg
jne
or
enter
stc
test
pusha
out
xchg
push
adc
jbe
cmp
adc
rcl
repnz
push
imul
scas
fimul
(bad)
jb
mov
mov
(bad)
or
jl
pop
jg
mov
ds
or
inc
dec
aad
and
push
in
das
push
adc
xchg
push
in
mov
push
cmp
inc
lods
stos
clc
xor
inc
mov
ins
sbb
mov
gs
add
dec
add
cmc
push
stos
(bad)
jge
push
add
lds
pop
sbb
sub
rol
sti
popa
inc
(bad)
mov
fild
push
call
rcl
(bad)
pshufw
stos
mov
aad
ret
pop
call
shr
push
xchg
mov
jo
lods
out
jnp
lock
xor
js
xchg
jo
loopne
test
aad
ins
mov
stc
sbb
or
or
clc
outs
add
pop
imul
leave
sahf
out
pop
(bad)
out
ja
mov
lods
adc
push
add
and
inc
arpl
adc
inc
xor
lea
jge
adc
(bad)
or
std
(bad)
lods
leave
lods
(bad)
jmp
dec
hlt
jg
or
leave
idiv
outs
ss
rcr
ret
repnz
mov
adc
jle
lea
addr16
push
lahf
jge
xchg
sub
xchg
call
sub
push
inc
out
push
fs
out
mov
sub
sbb
pop
mov
adc
mov
mov
fiadd
addr16
enter
fisttp
ret
cmc
mov
adc
ins
fcomp
mov
jne
fstp
test
test
push
adc
shl
pop
push
mov
and
mov
jns
outs
movs
adc
out
pop
and
pushf
call
imul
outs
cmps
fldz
xchg
pop
out
ds
fmul
cmp
lds
add
sti
pusha
es
xchg
aas
fistp
xor
dec
xor
aaa
ds
mov
scas
mov
iret
cwde
jno
push
lods
xchg
pop
mov
test
mov
addr16
push
jae
mov
cmp
push
sbb
jnp
adc
or
mov
mov
loope
fst
pop
push
mov
pop
adc
or
push
jo
out
retf
int3
push
xchg
dec
sub
sbb
pusha
add
sti
scas
(bad)
cmp
cmps
std
xchg
jb
(bad)
adc
dec
movs
xor
repz
jge
shl
xchg
inc
xor
mov
cmp
push
mov
mov
sub
das
mov
inc
xlat
aaa
adc
movs
or
in
lahf
mov
lock
push
sub
pop
test
and
jbe
xchg
neg
pushf
sbb
loop
cmp
pusha
inc
mov
xor
(bad)
mov
adc
add
ss
and
rcl
push
cdq
movs
cmc
and
(bad)
fist
jae
mov
and
mov
gs
add
jae
arpl
test
dec
imul
mov
cmp
and
mov
cmp
dec
inc
or
fld
adc
cmp
or
or
sbb
jo
xor
xchg
xor
pop
in
jl
ret
fisttp
(bad)
rcl
bound
mov
lock
fwait
cmps
jne
fild
xchg
movs
push
add
data16
movs
or
or
jl
mov
ror
xor
mov
lea
clc
pop
sub
sub
jae
push
out
loopne
dec
and
and
xchg
push
repz
add
xlat
pop
sbb
push
rcl
adc
ss
loop
loope
and
inc
mov
xchg
fs
mov
cld
sbb
mov
loop
or
aad
adc
ds
dec
(bad)
or
arpl
mov
xchg
dec
int
test
add
popf
retf
xchg
call
inc
(bad)
retf
jp
into
nop
mov
mov
std
or
pop
stc
retf
cmp
ret
sub
in
vmwrite
test
add
in
sbb
repnz
mov
inc
cmp
sahf
adc
mov
fisub
and
(bad)
(bad)
aas
inc
mov
mov
dec
or
call
stos
xchg
sbb
imul
mov
inc
retf
inc
xlat
mov
cmps
xchg
stc
pop
pop
outs
ret
call
mov
stos
cld
and
jne
lods
iret
(bad)
xchg
test
adc
push
mov
mov
xor
int
mov
add
dec
mov
lahf
inc
test
ret
les
xor
sbb
inc
sub
iret
sahf
in
cmp
sub
fucom
adc
and
jecxz
les
gs
xor
push
aas
les
or
mov
lahf
jmp
fldl2t
push
jmp
cdq
fxch
mov
dec
mov
fxch
rol
iret
dec
pop
sar
fidiv
imul
dec
iret
mov
(bad)
(bad)
stos
jl
push
mov
ins
(bad)
mov
jb
in
or
dec
loope
cli
in
scas
or
imul
sbb
movhps
mov
into
jbe
pop
cmp
mov
cmp
jp
arpl
inc
jae
adc
adc
xchg
mov
push
es
je
mov
adc
ret
add
imul
scas
stc
or
inc
icebp
inc
push
ror
add
jne
fcmovnbe
sub
mov
pop
jns
pop
mov
dec
scas
mov
arpl
popf
xor
aad
or
xor
sub
mov
fadd
pop
inc
lods
push
adc
ins
inc
gs
jbe
ds
ins
test
enter
xor
enter
push
ror
pop
into
or
out
mov
jbe
mov
jmp
add
sbb
xchg
leave
inc
sbb
pop
add
xchg
pop
sti
xor
add
test
push
js
imul
pop
cdq
jmp
fs
adc
or
sub
jnp
cmp
xchg
loopne
ss
fidiv
nop
mov
cmp
pop
(bad)
and
inc
mov
movs
repz
outs
and
mov
popf
daa
outs
retf
call
aad
shl
lds
lods
div
fadd
iret
jo
lods
loop
and
test
das
and
test
mov
mov
cmp
xchg
mov
jnp
and
dec
pop
out
repz
jg
sahf
xchg
(bad)
jle
aad
xchg
xchg
arpl
adc
mov
pop
xchg
mov
pop
mov
inc
push
and
jge
pop
push
imul
xchg
push
cmp
pop
movs
iret
mov
inc
sbb
push
fidiv
xor
nop
nop
xchg
xchg
pop
cdq
ins
mov
push
jmp
xor
fnsave
jge
or
adc
and
xor
pop
mov
mov
push
or
jmp
add
in
outs
or
icebp
adc
and
sahf
outs
or
mov
popf
(bad)
adc
(bad)
lods
mov
jae
pop
pop
mov
xchg
ret
push
out
push
xchg
or
std
push
xchg
cwde
mov
sbb
dec
jnp
or
adc
xor
push
or
mov
or
mov
push
rcl
push
fild
inc
push
mov
ss
push
pop
cs
push
xchg
sbb
xchg
cmps
in
jno
pop
mov
inc
ret
pushf
lods
gs
sbb
sub
and
leave
jmp
jmp
pop
jbe
leave
icebp
inc
mov
pusha
clc
cmc
mov
cwde
data16
(bad)
popa
fistp
dec
mov
jo
and
adc
mov
pop
xchg
xor
(bad)
cmc
adc
rol
lods
mov
jne
add
pop
or
int
pop
jge
std
shl
or
mov
pop
pushf
call
jmp
test
or
mov
clc
jmp
and
push
mov
jns
push
popf
adc
adc
cmps
mov
jae
dec
sub
mov
push
hlt
stos
repnz
enter
pop
cmp
out
pop
fisttp
sar
inc
or
inc
int
adc
aam
sub
out
pushf
ins
add
mov
mov
call
mov
fld
hlt
in
mov
xor
mov
xchg
jg
aam
aad
or
jns
sub
add
mov
aam
aas
mov
push
mov
add
push
push
push
ja
bound
dec
pop
fdivr
clc
movs
mov
sbb
mov
ret
les
imul
movs
xchg
add
inc
dec
je
inc
jmp
imul
mov
mov
adc
mov
loope
stc
fwait
scas
xor
cmp
rol
loope
stos
das
sbb
mov
or
cmp
sub
sub
out
xchg
into
stos
ret
call
cmp
mov
jbe
fcomp
and
es
cmp
int3
mov
call
(bad)
mov
cmp
(bad)
mov
(bad)
mov
inc
out
cmp
pop
mov
sbb
ja
pushf
shl
xor
rcl
cmp
inc
(bad)
retf
inc
adc
mov
mov
cmp
xchg
sbb
inc
repnz
(bad)
test
and
loopne
in
push
cmp
lea
ret
dec
xchg
add
(bad)
jb
xchg
rcl
mov
popa
adc
lods
sub
sub
pop
sbb
sti
cmp
ror
sub
ret
xor
ret
push
fsubr
call
inc
clc
or
adc
and
push
adc
xchg
xor
sbb
mov
xor
pusha
inc
repnz
retf
push
cmp
sahf
push
daa
mov
rol
jmp
bound
dec
cmp
mov
fcmovne
jge
in
jge
es
sub
xor
inc
aas
and
movs
imul
je
inc
dec
outs
cwde
scas
mov
push
push
or
fld
or
shl
sti
inc
aad
ror
ret
cmp
sub
adc
lods
xchg
iret
xor
retf
xor
in
mov
bound
add
inc
js
pushf
popa
mov
pop
aam
fcom
daa
sub
push
cmps
dec
add
cs
and
idiv
call
imul
dec
adc
in
and
outs
clc
movs
in
or
movs
into
mov
mov
call
out
fadd
jle
js
rcr
ret
dec
test
sub
outs
out
lods
pop
adc
lock
cli
ror
scas
(bad)
xor
popa
xor
enter
add
inc
dec
fs
outs
mov
and
rol
movs
shr
fbld
sub
je
hlt
out
adc
xor
dec
fisttp
ror
repnz
mov
dec
push
mov
call
pop
jl
and
cmps
cmp
ins
cmc
mov
es
ins
stos
sahf
test
adc
or
add
mov
xor
stc
outs
rol
jne
push
nop
sti
stos
mov
in
in
mov
cmp
aad
outs
leave
cmc
xchg
rcr
mov
xchg
outs
and
cmc
outs
mov
sub
cmp
inc
leave
stos
jnp
lock
rcl
mov
xor
adc
sbb
pop
ins
and
mov
mov
inc
jecxz
iret
fwait
sbb
xchg
in
lea
mov
movs
pop
or
loope
rol
stos
and
cs
and
mov
les
retf
mov
loopne
repz
and
arpl
sbb
out
cmc
div
aam
fs
or
pop
leave
call
sbb
call
mov
xor
arpl
scas
inc
pop
jmp
daa
pop
sbb
xor
loope
outs
pop
cmp
out
jb
jno
push
add
mov
clc
in
(bad)
jno
data16
pop
sar
cmp
mov
(bad)
cmps
pop
mov
add
jns
loopne
mov
or
and
xor
lds
fbld
fmul
pop
adc
sti
or
sbb
ret
mov
mov
push
pop
lods
fucom
icebp
cdq
es
iret
ret
pop
push
aaa
xchg
push
std
fwait
push
dec
fld
pop
into
mov
ins
iret
ret
sbb
scas
dec
sar
or
stos
sti
jae
adc
nop
lods
ja
int3
sbb
movs
test
cli
adc
aad
and
xchg
add
jge
jmp
xor
pushf
sbb
repnz
push
ffreep
xchg
dec
xor
jnp
repz
pusha
and
mov
in
dec
mov
popf
jge
fmulp
inc
cli
jge
mov
dec
mov
rcl
hlt
int3
cs
(bad)
int3
mov
adc
shr
pop
cs
adc
pop
xchg
jg
ins
xor
fs
(bad)
push
cmps
arpl
jecxz
mov
cli
pusha
std
sbb
pop
push
rol
sbb
into
push
xchg
pop
push
fs
scas
inc
call
shl
jb
or
rol
icebp
cmp
jo
ficom
pop
enter
mov
xor
sbb
test
ds
hlt
lock
dec
jne
cdq
add
ss
(bad)
in
jl
pop
jecxz
mov
test
dec
adc
xchg
cld
hlt
mov
sbb
sbb
add
loopne
sbb
xchg
fisubr
bnd
cld
pop
or
(bad)
cmp
into
or
xlat
cwde
push
test
stos
retf
(bad)
loop
pop
adc
int3
dec
icebp
addr16
fsubr
lea
ds
aas
inc
add
pop
mov
movs
fmul
cmp
int3
push
xlat
pop
pop
push
sbb
js
mov
and
cli
pop
inc
hlt
inc
pop
jmp
sub
add
int
aad
retf
and
inc
add
sbb
xchg
call
inc
xchg
or
sbb
test
jns
retf
sub
mov
sar
cwde
into
adc
and
sti
jge
mov
mov
outs
mov
jae
xchg
jb
mov
pop
in
inc
mov
int
mov
xor
and
fmul
pop
pop
test
nop
scas
inc
lds
enter
pop
mov
adc
xchg
(bad)
jne
cmps
push
xchg
retf
mov
jp
sbb
cmp
pop
(bad)
rcr
xchg
outs
frstor
retf
xlat
stos
jl
push
popf
dec
jmp
iret
jnp
gs
xchg
lock
fmul
movs
pop
fsub
gs
mov
test
ins
cwde
ja
mov
shl
pop
mov
stos
stc
inc
jae
dec
mov
mov
mov
(bad)
pop
mov
rcr
pop
test
mov
shl
out
xchg
xor
push
jg
sti
or
mov
repnz
cmp
in
cld
adc
dec
(bad)
sbb
in
mov
ret
enter
enter
jmp
enter
cmp
jae
jo
popa
sub
cmp
retf
loopne
leave
enter
cld
cmc
xchg
in
cmps
jae
or
cmp
lea
iret
jl
add
sbb
or
mov
add
xor
jo
adc
enterw
lods
jno
pop
cwde
outs
mov
jno
jge
add
hlt
inc
pop
leave
sub
out
jp
stos
sbb
sub
add
mov
mov
push
shl
dec
mov
sbb
ret
scas
call
ja
cmps
fisttp
ins
js
ror
pop
inc
jne
jp
fnstsw
add
retf
and
stos
inc
stos
sub
int
mov
jg
(bad)
fst
test
enter
pop
sbb
loope
or
xor
cmp
push
call
in
push
pop
mov
push
in
add
cmp
xchg
rcr
mov
jne
or
inc
and
popf
ror
sbb
lahf
or
sub
mov
add
jns
sbb
sar
xchg
ror
mov
dec
cmp
rsm
fsubr
mov
mov
push
jge
sbb
ret
scas
fsub
add
repnz
call
jp
mov
shl
push
and
jge
xchg
js
nop
fist
lock
fist
or
imul
scas
sub
jmp
cmp
(bad)
and
iret
retf
inc
aaa
mov
icebp
mov
xor
fisttp
cmc
loopne
or
xchg
push
loopne
xor
stc
pop
sbb
mov
cmps
or
jmp
in
mov
xchg
and
push
call
cmp
mov
add
sbb
sub
cdq
fbstp
js
or
into
clc
mov
movs
push
fcomp
sbb
sub
mov
mov
push
dec
add
jns
push
(bad)
or
popf
cs
cld
lods
repz
pop
bound
pop
push
jns
or
fistp
ds
aad
mov
push
pop
xor
scas
repz
jb
test
xchg
arpl
jecxz
idiv
sar
xchg
scas
pop
repnz
inc
lods
(bad)
loopne
mov
adc
dec
loope
add
pop
mov
ror
jp
aam
cld
popf
test
jno
xchg
xchg
mov
sub
mov
mov
mov
lods
gs
xlat
movs
pushf
sbb
push
imul
in
adc
sub
pop
push
adc
push
mov
fwait
cld
cmp
or
retf
inc
cmp
mov
lahf
pop
cli
dec
call
fwait
retf
jl
data16
(bad)
ins
test
loopne
sub
jp
movs
mov
cdq
add
sbb
aad
cmp
cmps
xor
sbb
js
pop
fs
push
cdq
and
popa
mov
out
inc
or
addr16
push
mov
shr
dec
iret
push
outs
push
jl
fld
fbld
or
inc
push
sbb
call
mov
add
pushf
arpl
or
call
addr16
lds
jp
mov
add
cmp
cmp
mov
mov
and
stc
pop
add
push
imul
adc
mov
gs
(bad)
sbb
outs
retf
outs
lods
push
mov
sub
add
cdq
imul
bound
sub
rcr
dec
add
jg
mov
or
add
test
ret
mov
sub
pop
mov
loopne
(bad)
mov
xchg
adc
jns
leave
sbb
repz
jmp
outs
jle
push
xor
sub
or
frstor
scas
mov
add
call
or
aam
adc
data16
stc
mov
sub
pop
push
dec
rcl
inc
cmp
das
add
fsub
add
in
in
mov
push
outs
push
sub
inc
cmp
dec
loop
ins
stos
in
jecxz
pop
mov
sub
xchg
mov
ret
imul
jecxz
ins
jge
std
popa
inc
and
sub
dec
inc
imul
les
jae
in
xchg
popa
cmps
sub
dec
xchg
mov
jecxz
stos
cmp
pop
mov
adc
addr16
cli
cmp
mov
lahf
jl
push
add
cwde
adc
add
xor
fist
mov
call
das
dec
ins
es
cmc
lods
pop
in
dec
jnp
scas
ret
std
cdq
inc
inc
xchg
xchg
ss
pushf
aas
push
push
lea
arpl
push
adc
pop
(bad)
imul
and
aam
add
cli
jns
lods
inc
push
and
push
or
xor
adc
stc
adc
popf
(bad)
fadd
(bad)
scas
xor
inc
popa
repnz
rcr
sbb
jp
mov
add
xor
adc
cmc
stos
add
xor
mov
cmp
jmp
push
jb
or
js
arpl
stos
inc
sti
int3
cmc
sahf
stos
jmp
sti
inc
(bad)
sub
stos
sbb
add
loope
add
push
sbb
hlt
xchg
add
xchg
jne
mov
pop
das
into
xchg
lods
or
sub
pop
loope
or
hlt
cmp
xchg
ja
pop
loop
jle
xor
push
inc
and
xlat
fnstenv
jns
aad
and
sub
cmps
jp
dec
cli
xchg
mov
inc
xchg
mov
adc
xchg
hlt
sahf
push
sbb
or
(bad)
jns
into
adc
push
clc
xor
sub
adc
inc
out
mov
push
(bad)
ins
arpl
fisub
out
popa
cld
pmulhw
mov
cli
pop
iret
lods
out
nop
pop
aas
lock
push
pop
bound
and
xchg
lock
les
movs
sub
test
shr
aas
jmp
ins
add
call
jbe
call
sbb
inc
fild
js
jbe
dec
(bad)
scas
cli
mov
into
mov
inc
fsub
in
push
pop
retf
push
inc
js
call
mov
sub
test
ss
push
imul
xor
pop
xchg
sbb
mov
sbb
add
mov
xchg
scas
cmps
add
sub
jecxz
dec
sbb
inc
or
cmp
in
xor
add
xlat
lods
shr
mov
or
psubw
xor
aad
in
sbb
and
out
add
sbb
jp
mov
xor
cmp
push
(bad)
xchg
out
push
add
inc
dec
movs
push
xchg
push
or
push
push
push
push
and
vsqrtsd
push
loop
sub
repz
mov
repnz
sbb
xchg
aas
(bad)
fmul
pushf
add
mov
out
or
xor
aad
pop
add
(bad)
aaa
push
cdq
jo
aad
xchg
push
xor
mov
xchg
cmp
test
ret
jno
xor
sbb
ror
adc
xchg
cmps
data16
ret
sahf
add
hlt
imul
aam
dec
inc
fist
jno
cmp
das
idiv
mov
and
xor
add
and
imul
xchg
sahf
div
sbb
rcr
inc
inc
push
in
(bad)
xor
inc
cmps
or
pop
jge
aam
lock
mov
xor
test
ficomp
enter
push
pop
in
lea
mov
or
pop
add
ss
loope
dec
cmp
sbb
mov
cwde
clc
dec
dec
cdq
and
jp
mov
addr16
sti
mov
pop
mov
cmp
cs
add
lods
popf
push
lods
and
push
aad
(bad)
in
dec
leave
aas
mov
and
(bad)
add
xor
pop
nop
mov
inc
mov
jb
lods
adc
rcr
dec
or
push
(bad)
push
xor
arpl
in
aam
ja
mov
sub
and
sbb
xchg
int3
push
cli
stos
mov
sub
xchg
clc
retf
imul
add
inc
imul
and
fdivrp
xchg
cmp
xor
js
cmp
xor
sub
popf
cmps
lea
sahf
hlt
and
cmc
dec
div
xchg
mov
adc
sbb
adc
push
out
shr
lods
adc
xchg
dec
xor
and
push
hlt
repnz
xchg
cli
out
sub
or
adc
mov
adc
xchg
add
jl
aaa
cli
mov
ins
pop
repz
dec
fst
aad
pusha
shl
(bad)
push
adc
cmc
add
mov
mov
dec
or
out
leave
repnz
ret
int3
add
dec
push
mov
fld
adc
adc
sbb
outs
cmp
mov
inc
cmps
into
test
push
push
je
clc
and
fsubr
cld
out
leave
shl
jbe
inc
and
adc
out
jle
cli
jno
stos
lods
dec
sbb
movs
fimul
or
popa
imul
xor
inc
pusha
mov
inc
jmp
out
dec
shr
push
inc
mov
xchg
outs
pop
sub
addr16
clc
dec
xor
(bad)
test
mov
mov
push
and
pop
sti
xor
sub
xchg
aam
lock
mov
pop
cld
rcl
push
in
mov
mov
aad
add
in
jns
mov
fcomip
(bad)
retf
push
arpl
mov
outs
or
mov
mov
test
retf
xchg
xor
xchg
sub
dec
test
mov
xchg
add
jno
test
ds
mov
mov
push
std
xchg
xchg
cmp
jb
imul
stc
cmp
iret
pop
or
add
les
sbb
aas
sar
inc
cld
pop
aad
push
pop
cmps
or
add
(bad)
ret
jno
in
jg
lock
add
sbb
jmp
inc
jl
push
sbb
xchg
or
mov
add
jg
lock
into
jl
sbb
add
jp
fild
shr
inc
adc
imul
in
xlat
or
jecxz
mov
ins
mov
aas
jg
and
jp
cwde
inc
sahf
retf
mov
sbb
fwait
push
push
xchg
sub
out
xlat
dec
lahf
xor
adc
sub
jns
and
test
mov
leave
idiv
xor
repz
dec
cmp
dec
sbb
add
retf
add
cmp
xchg
sub
leave
or
cmp
mov
ret
add
adc
dec
adc
scas
addr16
test
ret
enter
push
inc
jns
call
pushf
mov
cmc
(bad)
jae
or
aaa
push
mov
aas
inc
mov
stos
sti
dec
(bad)
mov
cmp
mov
fcmovu
lods
pop
aam
imul
add
dec
sti
iret
push
jle
jmp
(bad)
ins
enter
loope
xor
dec
je
xchg
xchg
ret
push
push
je
fidiv
sar
xor
loop
out
(bad)
dec
in
cmp
ret
or
mov
mov
sahf
inc
leave
push
bound
ror
js
(bad)
fsubr
cli
jmp
mov
sub
or
or
ins
iret
mov
cli
jmp
call
les
rol
mov
mov
(bad)
dec
xor
xchg
xor
(bad)
lea
inc
ret
mov
inc
enter
enter
or
inc
dec
cld
xchg
adc
and
and
lods
dec
test
inc
icebp
xor
jbe
clc
mov
icebp
push
pop
lds
xchg
(bad)
aas
or
sub
xchg
mov
cli
pop
mov
mov
jbe
arpl
ror
add
pop
fsub
lahf
add
(bad)
and
sbb
fdiv
cli
retf
nop
xor
pop
push
jl
xor
jb
xchg
jle
lds
(bad)
(bad)
push
imul
int3
cmp
push
push
jne
adc
rol
and
xor
push
gs
lods
fcom
fld
mov
dec
mov
aas
xor
fdiv
pop
push
or
into
test
mov
ins
mov
inc
sbb
lea
jmp
fucomip
sub
in
push
ds
mov
pop
div
jne
mov
retf
push
cmp
sbb
and
loopne
pop
lock
(bad)
aad
add
es
mov
sbb
sub
xor
das
pushf
imul
sbb
pop
lock
aad
xchg
mov
or
push
dec
sbb
pop
or
fwait
push
mov
pop
hlt
nop
add
fisttp
lahf
cmp
push
lods
inc
pop
cmp
mov
repnz
mov
jnp
add
sbb
out
adc
push
int
or
jae
pop
fisttp
aas
add
pop
push
cmp
popa
data16
and
cmp
mov
mov
pop
into
fcmovnu
pop
mov
pop
int
jns
sub
cmp
pusha
xor
mov
dec
lahf
mov
ja
outs
rcl
jge
jbe
xchg
cmp
pop
out
pop
mov
pop
enter
sahf
jmp
jg
mov
popf
mov
mov
std
push
jb
sub
mov
sub
lods
fcomp
mov
fwait
call
ss
into
mov
test
lock
lods
xor
xchg
and
mov
dec
enter
imul
and
jmp
add
push
stc
mov
pushf
aad
scas
in
or
es
push
dec
div
mov
push
pusha
ror
jae
not
les
outs
mov
mov
ja
dec
ffree
inc
pop
jp
mov
adc
ja
fbld
adc
loop
mov
es
mov
push
in
stc
out
not
mov
dec
bound
std
pop
imul
in
lods
adc
cmp
dec
fs
in
pop
(bad)
int3
repz
test
(bad)
or
push
sbb
int3
jmp
mov
aas
sti
jo
pop
add
retf
sbb
cmp
mov
pop
jbe
pop
inc
xchg
cmps
ja
mov
pop
sub
mov
cmp
mov
rcl
retf
out
push
jp
sbb
scas
pop
fmulp
inc
cmp
ret
nop
adc
xchg
jae
jp
mov
inc
inc
loop
retf
jne
xchg
adc
mov
and
adc
int3
and
push
sub
sub
fist
in
shr
jmp
xor
ret
repnz
pop
jge
xchg
imul
loop
imul
cs
loop
shl
mov
push
(bad)
and
in
sbb
mov
les
out
cmp
mov
dec
ins
cmp
addr16
xor
or
shr
das
jle
mov
jbe
repz
jmp
pop
add
loop
add
push
in
or
daa
cmp
inc
sbb
and
add
fsubr
add
add
cmc
xor
or
cmp
dec
stc
icebp
push
int3
adc
daa
clc
adc
cmc
stos
and
xor
fwait
scas
pushf
bnd
cld
cli
jmp
dec
push
enter
jmp
icebp
movups
mov
mov
stos
push
jle
stos
xchg
inc
test
sbb
test
pusha
push
dec
add
dec
popa
data16
imul
imul
cmp
jmp
lds
(bad)
adc
(bad)
int
dec
sub
pop
sbb
hlt
sti
sub
mov
nop
jb
outs
dec
and
dec
mov
xchg
mov
je
pusha
xchg
fld
lds
ffree
and
mov
ds
aas
stos
dec
movs
ficom
push
xchg
add
mov
xchg
test
sub
fcomp
pop
(bad)
sub
ins
xchg
jge
xor
push
outs
lock
dec
pop
push
dec
mov
out
xlat
inc
jp
aaa
inc
push
loop
(bad)
jnp
pop
pusha
fild
sbb
ds
sub
xchg
ror
imul
dec
push
xchg
jae
push
mov
and
test
iret
outs
int
repz
je
aaa
dec
fucomp
pushf
je
and
aad
loopne
cmp
push
push
and
cmovl
mov
ds
dec
xchg
jp
retf
movs
inc
cli
cld
out
adc
push
pop
xchg
mov
jb
adc
(bad)
fistp
into
add
push
and
adc
into
cmp
xchg
sub
sub
add
push
jns
(bad)
shr
fsub
inc
hlt
es
pop
sub
mov
jb
jo
cmp
mov
adc
sbb
mov
fs
das
sar
test
or
pop
xor
lods
cld
sbb
xor
push
repnz
mov
lods
mov
movs
iret
jne
xlat
repz
aad
or
sub
add
add
fmul
inc
pop
les
(bad)
(bad)
arpl
movs
xchg
aam
int
mov
into
dec
imul
cmp
repnz
enter
andps
fs
sub
mov
cmc
shr
push
test
mov
jle
xchg
mov
les
std
pop
xchg
jno
xor
imul
add
inc
test
dec
xchg
cmp
(bad)
imul
pop
cdq
inc
clc
test
pop
inc
and
les
in
pushf
mov
stos
movs
mov
(bad)
mov
stc
test
xchg
jae
xchg
hlt
push
add
sub
jns
push
mov
int
arpl
push
jl
add
jp
cld
mov
jne
mov
mov
mov
pop
jl
xor
xor
xchg
ins
jns
out
xchg
xchg
or
scas
repz
or
loop
sti
cmp
call
xlat
xlat
add
mov
les
leave
scas
pop
push
or
mov
and
jecxz
lds
jne
xchg
shr
shl
pop
scas
pop
add
push
ss
xchg
add
cld
(bad)
lahf
xchg
lods
sbb
repnz
loopne
cwde
mov
sbb
and
loopne
idiv
call
enter
pop
lods
sbb
pushf
xchg
mov
cmp
adc
(bad)
es
neg
xor
push
and
push
(bad)
cmc
dec
jg
movs
fimul
sub
out
lods
out
sbb
mov
jge
outs
in
aaa
jecxz
data16
sbb
add
sub
mov
js
repz
ins
aaa
xchg
outs
pop
or
pusha
push
stos
jle
cdq
cwde
inc
add
pop
adc
mov
es
xchg
gs
sub
pop
push
sti
xchg
and
and
pop
pushf
sub
mov
movs
pop
int3
fwait
ins
addr16
inc
mov
dec
jge
sbb
in
ja
ret
adc
mov
ret
imul
pop
fmul
dec
push
dec
movs
cmps
mov
and
fist
loope
push
ins
pop
jg
das
icebp
fldenv
jbe
leave
adc
sbb
fistp
pop
pop
jle
int
inc
ds
shr
push
pop
or
xchg
test
push
xor
fnsave
jmp
mov
icebp
sub
xor
push
sub
mov
rcl
cld
call
jmp
cld
shl
mov
xchg
es
inc
dec
jg
sbb
pop
ja
dec
inc
adc
mov
imul
sub
and
cmps
sar
(bad)
mov
mov
popw
imul
aas
mov
mov
packssdw
add
pop
rcr
retf
mov
mov
jl
and
retf
dec
jecxz
std
ds
inc
mov
mov
fiadd
push
sbb
inc
out
inc
adc
or
push
mov
les
fstp
jno
pushf
inc
add
out
icebp
in
adc
(bad)
aaa
aas
(bad)
(bad)
adc
loopne
mov
or
pop
in
push
retf
aam
(bad)
mov
ja
mov
fs
fcom
cmp
pusha
arpl
jnp
push
cmp
aam
cmp
mov
dec
xor
(bad)
hlt
add
or
fcmovnb
pop
pop
sub
dec
pop
sub
pop
inc
mov
dec
(bad)
fisttp
call
clc
and
imul
int3
jns
ret
push
push
push
xor
dec
adc
inc
dec
cli
mov
mov
lds
jae
cld
rol
and
fnstenv
inc
xlat
jmp
fdivp
es
retf
int3
or
dec
xchg
or
jl
cmp
jge
cli
lods
pop
neg
js
add
mov
addr16
outs
inc
test
dec
ret
adc
or
sub
fcomip
sbb
enter
push
mov
push
jp
xchg
shl
add
pop
std
daa
xor
inc
pop
(bad)
jmp
xchg
int
bound
push
sahf
ins
retf
inc
(bad)
xchg
mov
adc
cmp
mov
jmp
cmp
jbe
iret
lods
mov
xchg
ss
push
xor
arpl
pop
dec
in
pop
int
stc
inc
sti
adc
call
std
jnp
cmp
add
xchg
pop
(bad)
aad
sbb
ret
outs
mov
inc
out
in
xor
call
pop
scas
jl
dec
test
mov
and
pop
lods
das
ins
pop
hlt
inc
ror
add
mov
and
jmp
(bad)
retf
cmp
push
lods
sub
jne
cmp
inc
(bad)
fst
mov
mov
not
dec
xchg
add
lea
or
sbb
nop
and
inc
or
call
js
mov
enter
shr
pushf
cmp
dec
shr
mov
frstor
pusha
add
rcr
mov
xchg
pop
arpl
add
push
(bad)
in
inc
mov
(bad)
mov
xor
push
push
xor
ret
sar
jmp
ret
sub
enter
and
(bad)
push
inc
pop
pop
cwde
cli
loop
jno
cmp
pop
loope
dec
popf
xchg
pop
cli
push
add
cld
jo
std
out
shl
mov
sub
jne
mov
xor
nop
enter
adc
in
mov
pop
popf
mov
add
call
push
js
add
aam
addr16
shr
rcr
push
ins
dec
mov
or
push
shr
jno
lds
dec
and
cli
xor
addr16
and
movs
int3
loop
cmps
jo
imul
clc
fistp
cli
aad
jne
fucomp
pop
and
adc
call
mov
push
inc
out
ins
std
mov
jbe
jb
in
into
and
fadd
test
sub
clc
jb
dec
cmp
pushf
jmp
mov
(bad)
scas
push
int3
push
ret
or
arpl
cmp
xlat
out
mov
cld
scas
adc
fidivr
fwait
xlat
pop
inc
dec
ror
cmp
rol
mov
repnz
icebp
(bad)
(bad)
les
lock
pop
outs
test
xchg
daa
in
pop
aaa
jmp
nop
dec
pop
into
pop
pop
cs
gs
xor
js
arpl
movs
dec
mov
sbb
add
(bad)
mov
jbe
pop
jmp
ja
mov
cmps
mov
pop
pop
not
scas
sub
sti
jnp
int3
and
push
inc
pop
mov
and
jmp
adc
js
adc
lock
dec
mov
sub
sub
mov
ror
lds
(bad)
mov
sbb
test
outs
pop
cld
hlt
ins
sub
sbb
jl
xor
xor
enter
rol
jg
cmp
jecxz
leave
daa
sbb
mov
push
popf
repz
sub
popa
dec
jmp
lds
xchg
jne
inc
fcompp
pusha
and
jge
jb
ins
jecxz
jmp
adc
cdq
inc
sbb
mov
or
out
les
dec
repz
outs
mov
cwde
dec
sbb
inc
xchg
ins
out
cdq
push
or
mov
mov
sbb
scas
mov
sbb
ret
cmp
clc
fistp
cmps
lods
(bad)
outs
or
imul
hlt
popf
aaa
test
or
jmp
mov
pop
scas
sub
inc
arpl
sbb
fwait
mov
fisub
push
push
pop
das
push
inc
ror
repz
jne
cmps
fsub
xchg
or
imul
(bad)
(bad)
ins
retf
mov
cmp
mul
push
in
ds
sbb
loopne
push
aad
int
outs
fist
jmp
mov
inc
sbb
xchg
pusha
inc
int3
cmp
leave
fisttp
call
addr16
mov
mov
test
and
pop
fadd
ins
cmp
jmp
nop
lahf
arpl
addr16
jecxz
or
cmp
aaa
out
les
add
pop
rcl
ret
mov
push
inc
mov
(bad)
pop
arpl
sub
setl
cmovle
jae
test
test
add
and
adc
sahf
ss
lods
lods
cmps
inc
dec
sub
jg
xchg
ds
cmp
inc
aas
xchg
adc
adc
fldcw
mov
mov
test
in
mov
sub
jns
add
xor
jl
mov
lds
pop
rcr
xchg
mov
push
inc
ror
dec
inc
xchg
imul
fistp
(bad)
adc
das
sub
stc
dec
aaa
popf
hlt
add
pop
movs
sub
sbb
pop
aam
sub
out
mov
xchg
add
and
and
mov
cmps
repnz
adc
inc
push
add
nop
add
xchg
push
add
mov
fdiv
inc
cld
shl
xchg
inc
inc
dec
test
and
jne
out
dec
imul
cmp
cmp
out
xchg
push
push
sbb
ret
dec
add
or
mov
pop
retf
jp
jns
and
pusha
imul
adc
push
xchg
ss
push
or
loop
mov
mov
mov
les
fnsave
rcl
sahf
mov
push
mov
aas
inc
push
sbb
xchg
sub
mov
dec
jns
cmp
mov
fst
pop
adc
cmp
push
xchg
arpl
psrlq
pop
loope
xor
icebp
jae
rcr
pop
inc
inc
scas
add
adc
xrelease
mov
and
addr16
je
cmc
ja
mov
enter
test
cmps
jle
jne
dec
in
aam
mov
aam
stos
xor
scas
push
cwde
xchg
les
cld
and
xor
mov
imul
pop
aaa
outs
or
ret
cmp
cmp
cs
dec
es
xlat
push
cwde
nop
or
mov
shl
jns
into
or
and
sub
leave
inc
fwait
dec
dec
push
(bad)
in
fimul
dec
jno
add
icebp
sub
movs
in
scas
rol
(bad)
push
mov
out
fsubr
and
adc
ss
jp
dec
das
xlat
mov
mov
dec
mov
rol
dec
xor
mov
(bad)
repz
scas
pushf
push
xchg
call
(bad)
sub
js
in
and
stos
cwde
addr16
and
adc
push
inc
pushf
cmps
cmp
shl
(bad)
jb
scas
sbb
(bad)
xor
inc
mov
cmp
sbb
(bad)
pop
je
and
sub
dec
(bad)
or
mov
push
mov
push
les
jbe
je
mov
dec
loopne
and
adc
mov
ja
and
cmp
add
shl
xchg
aad
and
add
adc
mov
in
in
mov
out
pop
xchg
jae
(bad)
mov
dec
xor
jle
out
xchg
sbb
add
and
dec
push
pop
shr
jno
jne
adc
mov
stos
sub
je
ins
mov
mov
mov
addr16
mul
cmp
test
sub
xchg
cmp
adc
in
add
into
and
and
add
sti
aam
jnp
xchg
out
movs
add
mov
call
sub
(bad)
sahf
in
xor
shl
xor
ror
inc
sub
fisttp
retf
fisub
std
(bad)
in
push
mov
mov
dec
iret
xor
dec
arpl
aaa
mov
int3
adc
mov
out
inc
xchg
push
jnp
mov
inc
add
add
or
push
movs
dec
mov
xor
das
stos
pop
outs
nop
cwde
mov
cmp
sbb
ja
ret
cmps
cmp
imul
push
repnz
push
push
clc
(bad)
pop
sbb
push
call
mov
jo
xor
push
mov
sub
adc
push
inc
std
(bad)
imul
mov
xor
in
xor
call
shl
and
and
jle
cmc
lahf
mov
out
fs
shl
sbb
mov
(bad)
(bad)
pop
and
mov
cmp
xor
jb
shr
mov
cmps
and
jmp
rcr
iret
mov
in
jae
mov
mov
push
dec
pop
aas
adc
inc
adc
fs
ret
out
sub
mov
int
jg
push
and
sbb
jno
rol
push
dec
mov
inc
mov
push
and
lods
xor
out
movs
push
cmp
xor
pop
repnz
and
loop
cwde
xchg
mov
and
jge
shl
and
push
pusha
pop
pop
sbb
jmp
jp
push
and
inc
ficom
bound
xchg
mov
cmc
adc
dec
lods
inc
mov
in
xchg
cmps
mov
test
rcr
sub
mov
fistp
ins
jmp
inc
repz
cmps
dec
test
outs
call
popa
jmp
aaa
in
(bad)
in
in
sbb
mov
stos
jl
add
mov
repz
(bad)
lock
xor
xchg
pushf
adc
pop
jne
rcr
inc
movd
outs
out
xchg
in
test
and
xchg
fst
repz
mov
xor
cmp
mov
mov
lea
lea
inc
in
sbb
push
retf
into
sti
push
fisubr
dec
dec
sub
dec
pop
pop
mov
mov
ret
in
das
adc
add
add
movs
jg
dec
sub
ins
repz
xchg
mov
sbb
or
or
outs
mov
dec
sbb
(bad)
ss
sar
jle
outs
pushf
icebp
and
push
xchg
mov
(bad)
in
dec
scas
loopne
(bad)
imul
arpl
xor
fisttp
sub
pop
dec
sahf
pop
push
popf
pop
sbb
in
in
jne
scas
adc
cmp
dec
lods
adc
loopne
cmp
cwde
push
aaa
jle
out
enter
clc
push
cmp
(bad)
jae
sar
cmp
test
pop
and
mov
cs
jae
fcmovnbe
inc
jge
or
or
je
xor
sbb
cmp
mov
ins
test
(bad)
mov
or
jno
test
cdq
sti
mov
inc
pop
mov
mov
xor
scas
popa
push
jmp
clc
sbb
dec
leave
dec
pop
jg
daa
mov
(bad)
aaa
mov
xchg
cmp
mov
not
cld
fsubr
iret
and
(bad)
stos
in
adc
sbb
push
xor
retf
mov
mov
cdq
repnz
into
add
popa
cmps
dec
mov
int
inc
enter
inc
mov
inc
lock
cwde
arpl
mov
daa
repz
into
ds
addr16
pop
stc
mov
retf
(bad)
jp
xchg
aad
imul
pusha
(bad)
mov
cmps
jecxz
ret
cld
fwait
inc
retf
mov
or
xchg
push
jae
add
jmp
fist
sub
push
mov
xlat
imul
les
cmp
cdq
or
mov
pop
mov
mov
into
sub
jbe
leave
daa
mul
cmp
cwde
sbb
inc
in
mov
dec
xchg
cdq
or
ins
cdq
js
scas
imul
xchg
cmp
movs
rsqrtps
mov
cwde
shl
aaa
jmp
out
arpl
dec
and
xor
or
mov
(bad)
lds
fistp
jae
cmc
inc
icebp
mov
sbb
movs
mov
popf
push
mov
xchg
pop
xchg
cs
dec
pop
jp
mov
sub
or
aad
into
jnp
ffree
cmc
out
or
fs
jbe
or
mov
shl
test
ds
pop
dec
add
xlat
jmp
(bad)
(bad)
out
leave
nop
xchg
ins
fs
xchg
lea
lock
aad
ror
pusha
fld
mov
out
or
adc
jge
adc
cwde
push
andps
push
jmp
test
stc
je
add
(bad)
lods
fld
gs
add
add
gs
sub
(bad)
mov
and
mov
pop
shr
shl
ror
imul
sub
pop
add
push
cld
push
sbb
push
pop
sar
sbb
and
adc
or
and
imul
ins
out
jl
aad
xchg
and
or
dec
pop
sbb
mov
fmulp
jmp
data16
xchg
push
(bad)
mov
mov
fidivr
mov
mov
push
jge
mov
jl
mov
leave
and
fucomip
xchg
cmps
inc
lods
jnp
je
fldenv
mov
je
or
inc
cmp
and
(bad)
fst
mov
sub
xor
or
rol
pushf
retf
jecxz
pop
and
mov
dec
test
les
push
fidivr
push
and
mov
inc
jmp
xchg
fucomi
outs
rcr
neg
xchg
sbb
fidiv
xor
arpl
scas
adc
cmp
shr
repnz
and
ret
ror
scas
pop
stos
mov
(bad)
xchg
into
sub
lea
dec
mov
mov
cwde
mov
(bad)
jmp
ds
xor
outs
jne
jmp
xchg
pusha
mov
mov
and
je
call
cmp
push
mov
or
mov
bound
in
sub
cdq
fdiv
aaa
sbb
cs
data16
fidivr
push
or
mov
xchg
xchg
sub
stos
sub
jecxz
cmps
pop
or
cdq
mov
pop
enter
loope
jl
test
add
push
mov
es
into
fs
xor
xor
and
xchg
ret
mov
push
cmps
mov
cmp
call
or
jmp
fadd
xchg
iret
jbe
add
fbld
cmp
icebp
std
lods
xor
sub
popa
jmp
pop
push
test
jbe
inc
nop
mov
push
mov
inc
imul
inc
xchg
in
aas
ins
lds
adc
cli
lods
or
and
mov
cdq
mov
call
push
popf
jb
ja
pop
jge
repz
fst
mov
mov
and
fldcw
fisttp
test
pop
mov
shl
ss
lods
enter
sti
dec
rcl
inc
scas
std
mov
cmps
mov
test
mov
and
mov
std
test
sar
xor
sar
and
inc
pop
aad
inc
imul
cmp
cmp
arpl
jmp
mov
sub
mov
xlat
and
into
clc
mov
push
add
cmps
jno
push
sbb
mov
adc
jmp
jns
xor
push
mov
add
gs
jnp
(bad)
retf
and
sub
enter
pop
adc
or
test
inc
ret
inc
sbb
(bad)
(bad)
xor
and
fs
adc
mov
pop
xor
ret
outs
mov
xor
jmp
fmul
or
hlt
sub
mov
pop
movs
push
push
xchg
mov
inc
iret
push
inc
int
xor
add
mov
ins
(bad)
jae
js
jbe
aad
dec
daa
cs
(bad)
ret
inc
nop
inc
mov
and
test
adc
cmp
jne
stc
call
sbb
rcl
nop
xor
ja
mov
fucomp
push
jle
inc
push
jo
imul
mov
mov
xchg
lahf
mov
mov
jae
enter
cmp
inc
xchg
sbb
adc
mov
lock
(bad)
loope
cmp
push
call
or
je
out
adc
jge
inc
xchg
inc
mov
imul
hlt
or
cwde
add
sar
add
mov
adc
add
push
sti
add
add
add
gs
fwait
hlt
or
(bad)
fidiv
shrd
pop
popf
pop
xchg
ret
or
fld
and
mov
shr
xor
mov
push
(bad)
pop
out
dec
daa
das
js
stos
mov
pcmpgtd
inc
cmc
adc
or
das
and
test
dec
sub
adc
in
loopne
stos
push
fsubr
inc
push
fimul
ins
in
lods
xchg
je
adc
popf
jns
push
cmp
test
aad
test
adc
(bad)
fst
cmp
sub
mov
dec
mov
mov
dec
push
dec
lahf
mov
mov
outs
xchg
in
scas
gs
cwde
xor
mov
popf
in
call
push
test
repnz
(bad)
mov
lahf
xchg
or
std
ficomp
lahf
pop
cmp
xchg
call
adc
out
xlat
idiv
inc
mov
arpl
aam
jg
push
cmp
ss
jle
mov
mov
cmp
mov
mov
jge
ror
jne
pop
xchg
jle
lahf
inc
mov
dec
loope
test
push
int3
pop
jle
mov
ror
in
in
mov
in
daa
cs
unpckhps
(bad)
and
add
cmp
scas
int3
lahf
mov
test
pop
push
pop
out
lea
fnstcw
lods
xchg
fwait
leave
and
aas
into
ficom
pusha
mov
je
mov
ror
test
out
cmc
lahf
mov
cld
and
test
inc
cmc
bound
and
ficomp
outs
sbb
jb
aas
stc
ds
clc
cmps
xchg
ss
arpl
mov
in
sbb
sub
cli
outs
jnp
jb
(bad)
hlt
pop
xchg
fdivr
cwde
add
mov
xchg
sti
adc
and
retf
push
int
sbb
mov
bound
or
jbe
xchg
add
push
cmp
jne
inc
cld
gs
and
(bad)
pusha
jns
data16
or
sub
shr
push
(bad)
fidiv
and
sub
mov
jmp
or
out
dec
mov
pop
in
add
sahf
(bad)
shl
adc
ret
sub
mov
sub
hlt
push
mov
jnp
sbb
or
jle
hlt
pop
sahf
das
dec
inc
push
clc
sub
sbb
or
jae
mov
mov
aas
xchg
cmp
bound
(bad)
xchg
xchg
adc
dec
or
nop
les
xor
out
lods
cmps
xor
xor
sub
mov
nop
out
add
xor
mov
mov
inc
pop
pusha
jnp
in
or
jae
jl
add
ins
ds
mov
xor
aaa
aam
pop
add
popa
icebp
cld
nop
mov
mov
out
aaa
or
scas
or
add
shl
and
xchg
loop
sbb
clc
aas
adc
lock
xor
mov
outs
cmc
dec
call
ja
les
cmp
test
out
retf
mov
fs
mov
cmp
out
into
pop
sub
icebp
jge
seto
test
pop
xchg
push
jmp
mov
push
pop
imul
ins
jg
mov
js
movs
xor
xchg
push
inc
mov
mov
dec
cld
add
push
retf
test
xchg
test
jmp
jnp
xor
enter
mov
xor
int
mov
int
fwait
sbb
jno
mov
nop
mov
push
xor
sub
jbe
mov
mov
and
clc
cmps
inc
mov
cs
push
pop
gs
mov
or
add
pop
lods
jns
add
ja
xchg
cmp
inc
xor
adc
xor
and
jmp
sbb
retf
push
(bad)
(bad)
lahf
xchg
in
pop
out
fistp
pop
bound
and
xchg
mov
ret
(bad)
jle
cmps
cli
cdq
mov
xor
and
cmps
pop
(bad)
xchg
shr
dec
sub
outs
imul
cmps
xor
and
scas
cwde
dec
hlt
mov
xchg
lahf
int3
pop
lahf
cmp
shl
mov
ffree
hlt
add
pop
(bad)
jae
pop
inc
push
aas
pop
(bad)
dec
sbb
fs
jb
loope
sbb
xchg
inc
pop
and
shl
dec
fs
inc
call
jl
push
and
ds
in
imul
std
cmc
add
fmul
and
ja
fimul
xlat
cdq
popf
adc
imul
and
mov
fsubr
in
mov
scas
dec
mov
(bad)
add
mov
bound
mov
and
bound
and
sub
adc
push
xchg
adc
mov
outs
rcl
add
jl
icebp
data16
(bad)
pop
pop
popf
add
fs
(bad)
sbb
test
push
aas
in
ret
inc
aaa
icebp
inc
jle
add
ret
cdq
lods
fisub
ins
dec
test
mov
fst
mov
fs
push
mov
aam
sahf
call
lock
iret
retf
movs
jmp
lea
and
inc
add
sar
sub
cld
add
mov
jmp
out
jle
dec
in
int
repz
out
fisttp
rol
(bad)
sbb
xor
xchg
jns
mov
stos
cwde
fidivr
mov
push
inc
xchg
xor
jle
int3
or
mov
(bad)
pop
jb
hlt
aad
and
jecxz
pop
and
shl
dec
scas
and
sub
ins
dec
jg
or
xchg
aad
lea
(bad)
cmp
mov
int
icebp
(bad)
and
enter
xchg
push
in
mov
mov
xor
add
inc
aad
stos
jne
imul
and
es
jne
or
jne
in
rcl
imul
cmps
ds
in
pop
adc
cmp
into
pop
adc
lds
pop
loope
pop
inc
sub
jge
push
pop
call
inc
mov
inc
jne
xchg
das
pusha
push
push
and
retf
xor
stc
inc
jmp
mov
(bad)
push
pusha
xor
pusha
fst
push
nop
pop
fisubr
xor
push
in
xchg
adc
neg
mul
push
jbe
test
outs
mov
cmp
lods
and
in
sub
loope
xor
stc
rol
adc
jae
push
mov
aaa
sbb
add
xor
ins
scas
fld
shl
ja
mov
mov
xchg
mov
jecxz
pop
mov
jne
lock
in
inc
cmp
mov
pop
xchg
adc
add
pusha
mov
popf
arpl
jne
hlt
clc
js
mov
in
jnp
and
add
lods
sub
push
fcomp
ret
pop
pop
mov
mov
or
jmp
test
js
mov
aaa
(bad)
cwde
imul
sub
retf
push
pop
push
std
call
or
jg
(bad)
ret
outs
frstor
fld
neg
jne
mov
fucomi
pop
(bad)
fcmovnu
xor
jbe
das
xor
adc
call
or
ja
mov
or
inc
sub
mov
mul
call
nop
jp
inc
js
sahf
dec
ins
mov
outs
dec
ja
mov
sub
(bad)
xor
call
mov
retf
call
sub
or
xchg
out
leave
xchg
mov
cli
fwait
push
in
xchg
mov
test
outs
add
or
pop
mov
jmp
cmp
fisttp
adc
jo
pop
fdiv
jecxz
daa
mov
and
pop
cmp
test
sti
mov
cmc
cmp
nop
push
pop
dec
gs
(bad)
bound
dec
push
iret
call
and
pushf
add
addr16
lock
and
rcr
pop
fs
ins
jnp
addr16
les
addr16
jo
out
(bad)
mov
retf
lods
pop
call
xchg
test
xchg
inc
jns
xchg
inc
mov
jb
scas
neg
fwait
aas
adc
ins
fs
ja
movs
dec
add
stos
imul
je
add
push
lods
jo
or
jp
and
je
jno
stos
lods
lea
ret
xchg
std
xchg
fisttp
aas
dec
jp
or
mov
in
or
mov
mov
setle
xor
mov
outs
cmp
gs
aaa
cmp
xor
xchg
xor
mov
loop
cs
aad
push
nop
mov
data16
push
in
scas
movs
(bad)
jmp
(bad)
sbb
xchg
sub
dec
arpl
mov
xor
ja
xchg
jne
adc
jbe
jo
inc
scas
pop
cs
cmps
dec
idiv
jbe
test
xlat
pop
scas
sbb
sub
sub
mov
std
cmp
aaa
inc
sar
lods
add
xor
js
stc
cmp
jae
push
pop
xchg
push
cmp
not
retf
lds
add
mov
ds
jae
add
cmp
fisttp
add
sbb
cmc
cli
xchg
mov
fdivr
sbb
xlat
or
inc
mov
inc
cdq
fild
xor
adc
cli
loope
xchg
mov
test
daa
jmp
fcomp
ins
int
adc
in
xchg
(bad)
mov
in
jp
test
adc
cmp
adc
lods
mov
jge
std
and
jle
sbb
cmp
jg
aam
addr16
ins
fld
mov
mov
mov
out
or
test
leave
cmp
nop
nop
inc
jns
jae
rcl
mov
dec
stos
ret
int
test
loopne
adc
mov
dec
lds
inc
fild
add
cmps
sti
mov
push
xchg
pushf
sbb
push
mov
addr16
out
mov
xor
scas
mov
or
inc
fsub
je
sbb
inc
mov
push
call
dec
cmp
push
mov
lds
loope
xlat
jo
add
jl
push
push
pop
outs
ret
xchg
in
xchg
pop
ins
sub
in
loopne
imul
mov
mov
mov
pop
xchg
and
cmps
aaa
aad
scas
sahf
push
mov
mov
xor
cli
inc
xchg
out
add
mov
xor
mov
arpl
imul
shr
shl
neg
jg
rol
inc
pop
pusha
sub
shl
jp
xor
or
dec
inc
aam
mov
test
xor
je
add
mov
fs
sbb
test
icebp
loopne
dec
test
jg
mov
add
pop
jnp
sub
inc
mov
adc
int3
jmp
das
jbe
in
repz
cmp
hlt
sub
mov
xchg
mov
pop
cmps
and
int
fs
xor
enter
sbb
mov
xlat
push
add
xor
mov
pop
or
test
idiv
int3
mov
jle
cmp
int3
jmp
push
ret
aas
popf
into
xchg
bound
dec
sub
sub
call
xchg
lods
mov
push
xchg
sub
aam
ret
sub
jmp
adc
dec
stc
jno
sub
mov
scas
cs
pop
test
idiv
xchg
xor
sbb
shl
xchg
or
adc
jnp
shl
push
jne
xchg
and
fwait
lock
outs
sub
cld
dec
test
xchg
inc
mov
icebp
loope
dec
or
sub
or
jl
popf
dec
xchg
(bad)
stos
add
push
xor
push
jnp
fidivr
fwait
arpl
mov
xor
mov
cmps
mov
adc
retf
add
or
hlt
pop
or
pop
sub
shr
mov
cld
je
test
xor
rcr
xchg
jg
lods
jmp
cmp
hlt
cmps
retf
aam
fucomp
and
jp
inc
scas
call
cmp
and
xor
jbe
sub
or
adc
cli
mov
lods
or
xor
out
out
and
mov
fstp
mov
mov
sar
(bad)
mov
mov
imul
inc
push
adc
pusha
cmp
or
fwait
nop
scas
rcl
jne
add
inc
fidiv
and
aas
xchg
xchg
xchg
pop
js
popa
in
fst
xchg
jl
into
fsub
ss
mov
dec
aad
jl
scas
and
xor
push
test
dec
mov
jbe
stos
add
out
mov
mov
xchg
add
and
mov
inc
dec
xchg
jle
pusha
and
inc
or
icebp
aam
pop
jno
xchg
ds
movs
mov
pusha
scas
call
inc
pop
adc
cmps
rcr
mov
ret
push
dec
xchg
int
mov
xchg
jle
xchg
fwait
neg
push
xor
or
or
mov
and
(bad)
out
je
sahf
pop
into
repz
jb
pop
xlat
bnd
jp
(bad)
or
aam
mov
call
addr16
movs
icebp
xor
jo
dec
rcr
and
mov
or
inc
ss
pop
mov
bound
enter
dec
and
aam
sub
xchg
inc
lods
imul
xchg
es
es
fbstp
and
test
popf
mov
pop
pop
pop
and
outs
dec
sub
imul
inc
mov
mov
xor
jno
(bad)
jl
enter
cmp
enter
xchg
(bad)
add
fldcw
loop
adc
scas
and
cmp
push
xchg
xlat
mov
scas
pop
push
sub
fisubr
stos
gs
dec
nop
pop
mov
sub
dec
mov
or
mov
mov
fistp
xchg
repnz
xchg
sti
rol
xor
cmp
call
add
or
fst
mov
adc
pusha
cmps
jg
and
call
sbb
cwde
sub
test
jmp
push
jg
and
pop
sbb
jb
stc
repz
mov
movs
out
imul
dec
and
sbb
or
sub
lods
add
mov
jl
xchg
pop
cli
(bad)
pusha
adc
adc
dec
xor
inc
mov
data16
sbb
add
jno
dec
loopne
add
push
adc
in
mov
inc
rcr
xchg
mov
mov
aad
jl
sti
adc
pop
sub
mov
xor
dec
jp
push
in
nop
out
jg
mov
sahf
lahf
pop
pop
xchg
paddd
or
xchg
pop
mov
pop
or
aam
mov
es
sbb
and
(bad)
hlt
adc
or
retf
nop
pop
cmps
xchg
jg
mov
stos
pmaxsw
mov
mov
mov
fdivr
push
jne
fmul
sar
adc
and
push
xchg
jno
ret
iret
and
cmps
and
pusha
outs
mov
cmp
mov
mov
in
lds
shr
xchg
out
mov
jmp
ret
mov
repz
sub
(bad)
rcl
ror
and
cmpxchg
movs
(bad)
push
rcl
popa
pop
aad
retf
lock
mov
xchg
jbe
inc
add
push
mov
cli
xor
xor
fstp
imul
test
cmp
sub
ins
cmps
dec
out
ss
xchg
ds
push
push
loopne
adc
mov
push
hlt
mov
(bad)
cmp
hlt
es
in
and
fisub
nop
jb
imul
sbb
mov
jnp
sub
pop
sbb
mov
cmc
cmc
into
out
daa
or
int3
pusha
add
pushf
cmp
aas
mov
cmp
in
(bad)
dec
sbb
xor
jno
mov
and
ret
bnd
pop
adc
pop
shr
inc
into
inc
lea
aas
mov
aad
test
push
mov
push
mov
icebp
add
cmp
mov
xor
mov
mov
mov
and
xchg
out
test
mov
adc
rcl
ror
push
rol
test
jp
and
mov
push
lahf
mov
in
mov
xlat
mov
cmp
sub
sbb
pop
sbb
mov
ret
xor
daa
aam
icebp
jne
in
inc
outs
mov
or
sub
xlat
out
and
shl
test
jmp
sbb
push
imul
pop
imul
(bad)
jg
stos
sub
adc
push
add
popa
mov
dec
lock
xor
ror
or
scas
retf
push
inc
dec
lds
cmp
sub
sub
pop
lahf
outs
ss
lods
inc
sub
das
adc
push
scas
mov
mov
xor
dec
(bad)
jl
mov
jle
dec
jmp
mov
pop
outs
test
stos
or
ss
movs
mov
pop
mov
dec
pop
adc
cmps
mov
sbb
sub
xchg
sub
(bad)
mov
out
jmp
push
adc
out
or
mov
mov
out
cmp
xchg
lds
jle
dec
and
rep
add
xchg
inc
cmp
js
xchg
daa
out
push
outs
mov
sub
mov
icebp
loope
fdiv
ret
fsubp
in
jmp
fnsetpm(287
and
leave
push
mov
sub
mov
push
mov
ret
bound
xchg
dec
dec
sahf
jnp
sbb
push
and
arpl
rol
shl
aad
movq
push
and
cs
les
and
in
or
fst
xchg
mov
nop
push
aas
fwait
or
fbld
sub
(bad)
sub
xchg
out
leave
add
adc
jne
rcl
repz
pop
jmp
fwait
popf
or
fidiv
jl
jmp
and
in
xor
inc
mov
and
push
loope
pop
push
jmp
retf
or
cwde
lahf
and
into
jmp
pop
call
cli
js
(bad)
icebp
fisub
adc
jl
sbb
or
movs
inc
mov
jae
add
fild
fcom
(bad)
sbb
inc
out
or
outs
xchg
rcr
ja
and
bound
sbb
or
jp
cmc
push
pop
imul
popf
(bad)
jb
push
scas
test
sahf
popf
in
xchg
cld
ss
xchg
add
shl
fs
push
and
mov
scas
add
mov
jmp
jnp
mov
iret
mov
mov
pop
adc
iret
mov
xchg
push
jno
retf
sar
stc
add
jbe
imul
and
fcmovbe
call
sub
xor
sbb
push
dec
cmps
(bad)
pop
push
shr
cld
inc
ret
es
shl
dec
rol
scas
jns
jmp
jge
loop
pop
sub
jne
add
mov
inc
data16
rcr
rol
pop
add
nop
add
in
mov
xor
out
xor
mov
cs
leave
ja
dec
mov
out
fiadd
mov
adc
xor
call
out
loope
cli
popf
in
mov
xor
into
lock
imul
lods
or
push
sti
jbe
fsub
or
das
sbb
jae
test
int
push
and
cmps
dec
push
je
movs
ror
fild
fwait
ins
jecxz
enter
imul
outs
jne
into
mov
sub
fs
sbb
xchg
add
repnz
loop
mov
mov
dec
lahf
or
test
ror
addr16
and
push
loope
fst
sahf
push
cmps
pop
sbb
jbe
(bad)
cmc
mov
rcl
(bad)
mov
hlt
mov
in
inc
lea
(bad)
repnz
jbe
xor
jns
or
pop
dec
push
loope
outs
pop
leave
pop
mov
fcmovnbe
outs
and
out
sbb
nop
aas
iret
stos
push
xor
lods
cld
mov
stos
cmp
(bad)
jmp
jl
jl
loop
sub
nop
pop
inc
cmp
ja
test
or
fcmovnu
fucom
jle
rcr
ja
jne
cmp
dec
and
je
retf
lods
xor
pop
stc
(bad)
icebp
xchg
ins
stos
or
lahf
inc
loope
pop
push
rcr
jecxz
(bad)
shl
sbb
loope
adc
push
push
push
idiv
or
push
aam
pop
and
pop
and
out
dec
lock
ret
add
mov
pop
adc
jle
stc
inc
add
xchg
(bad)
xor
aaa
xor
(bad)
cli
out
jmp
mov
in
sbb
mov
fild
popf
dec
hlt
lds
jp
stc
inc
pop
stos
inc
pusha
(bad)
js
in
ret
and
inc
test
imul
mov
mov
retf
out
cli
lahf
pop
jno
cmp
and
jmp
sub
ds
out
jnp
add
ins
fadd
add
and
pop
movs
push
mov
ror
xchg
add
ror
rol
lock
cmp
(bad)
shr
xchg
sahf
outs
xor
inc
jg
lods
mov
retf
mov
mov
lds
sahf
mov
and
rol
shl
(bad)
shl
fldcw
clc
cmc
xchg
mov
rcr
pop
les
sbb
test
lds
cmp
pop
stos
and
or
aam
pop
mov
out
xor
xlat
sbb
repnz
jge
and
fs
pop
cmp
movs
ds
ds
dec
pusha
fwait
out
retf
jb
repz
pop
js
pop
jne
push
mov
add
lods
or
lea
cmp
inc
mov
clc
xchg
pop
jmp
test
bound
movs
ret
adc
mov
fwait
xchg
jae
xor
and
popf
sub
cwde
arpl
fisttp
mov
(bad)
shl
sub
ins
mov
dec
pop
scas
ret
fbstp
or
(bad)
int
cmps
or
lahf
and
movs
jmp
jbe
sbb
mov
dec
test
push
gs
and
push
jle
lea
std
xchg
push
jle
bound
inc
sub
inc
popf
jbe
rcl
fadd
pop
sti
fdivr
xor
mov
out
scas
sar
mov
lods
loop
cmp
pop
mov
inc
mov
mov
adc
sub
out
inc
adc
(bad)
and
rol
shl
in
add
ins
dec
test
outs
jp
jle
push
mov
es
xchg
leave
movs
xor
xor
pop
xchg
lock
jne
jmp
rcr
lea
xor
inc
jecxz
fcomip
sub
xchg
bound
int3
scas
sar
jno
adc
popf
scas
sbb
outs
lahf
and
jle
fsubr
jecxz
add
movs
fild
icebp
aam
scas
push
dec
cwde
pop
mov
add
icebp
jmp
xor
test
sbb
mov
out
ror
sbb
xor
test
and
(bad)
jp
icebp
sub
imul
xchg
mov
mov
fwait
inc
in
rcr
sbb
mov
imul
(bad)
rcr
mov
dec
jp
es
adc
sub
xor
sbb
loop
pop
dec
cwde
inc
and
data16
mov
js
shl
popa
stos
js
mov
test
pop
imul
lea
repz
cwde
loop
mov
jo
adc
sbb
adc
cmp
out
lock
pop
mov
cmp
int3
inc
cmp
iret
mov
push
div
pop
mov
cld
mov
pop
test
dec
push
dec
jne
cmc
mov
leave
pop
mov
inc
mov
addr16
xchg
mov
mov
jg
mov
lods
mov
test
xchg
lods
mov
or
sar
xor
mov
sbb
dec
clc
push
test
push
sbb
mov
mov
pop
mov
gs
outs
push
mov
sub
leave
retf
xchg
mov
inc
mov
xchg
pushf
mov
cli
sub
or
xor
into
neg
sbb
inc
inc
sub
jae
add
mov
xchg
dec
cmps
xchg
sbb
or
repnz
cwde
imul
mov
jae
loop
sub
popa
sub
out
adc
in
inc
daa
push
loopne
retf
jo
and
xchg
gs
aas
pop
mov
and
ror
retf
cmp
outs
push
lahf
jo
pop
int3
(bad)
sub
push
xor
test
cmc
push
mov
adc
jge
cmps
and
(bad)
int3
inc
cdq
int3
dec
movs
add
cmp
data16
pusha
add
enter
push
ror
dec
test
and
sub
or
push
cmp
out
popa
cmc
int
in
xchg
jmp
out
test
lds
inc
movs
cmps
inc
inc
xor
dec
push
addr16
std
ret
loope
adc
jmp
jmp
lds
adc
mov
in
cmp
xchg
rol
adc
lods
jno
loope
daa
xor
in
push
cmp
add
push
pop
es
cdq
push
ins
xor
dec
adc
and
das
pop
sub
pop
or
and
mov
xor
sbb
(bad)
pusha
sub
out
jecxz
pop
pop
dec
fiadd
push
jb
stos
scas
mov
mov
jnp
fmul
arpl
lods
into
retf
sahf
nop
xor
push
inc
mov
cmp
push
gs
cmp
cs
fnstcw
test
ins
inc
(bad)
test
aas
loopne
add
adc
push
sub
xchg
pop
dec
and
add
mov
sahf
std
inc
mov
jns
imul
hlt
jae
stc
shr
push
mov
neg
es
cmp
xacquire
xchg
loope
xchg
test
add
(bad)
xchg
push
push
cs
fs
cld
dec
lods
xlat
ficomp
test
enter
hlt
lahf
pop
cmp
ret
add
daa
or
sbb
mov
pusha
inc
push
pop
scas
mov
test
jns
dec
xchg
scas
cmp
cmp
and
xor
(bad)
jmp
cmp
dec
out
sub
dec
inc
fnstenv
shl
into
pop
jge
adc
js
or
and
jecxz
pushf
cmp
mov
add
inc
dec
clc
sub
mov
push
inc
std
dec
rcl
(bad)
pop
cs
sahf
fisttp
mov
or
mov
gs
ja
cdq
adc
int
shl
mov
pop
movs
add
mov
fcomp
(bad)
aaa
or
ins
into
inc
xor
iret
cmp
fwait
lods
and
aaa
retf
test
xchg
stos
jecxz
push
inc
lahf
addr16
mov
inc
sahf
jg
cld
push
ins
(bad)
jae
cmp
(bad)
(bad)
push
dec
push
test
pushf
in
enter
push
or
cmp
arpl
sub
xchg
pop
adc
add
push
test
xchg
xchg
hlt
push
jmp
mov
retf
dec
pop
adc
int
js
sbb
inc
pop
shl
popa
ret
adc
lds
cmp
and
inc
data16
jnp
xchg
mov
aaa
aaa
lea
mov
add
pop
mov
pop
fadd
xor
push
outs
push
xchg
cwde
ins
addr16
enter
push
mov
loope
dec
mov
ins
xchg
(bad)
fadd
pop
pop
pop
int
pop
dec
pop
mov
mov
xchg
jo
or
jnp
add
test
jnp
sbb
add
mov
mov
cmp
sahf
ds
dec
push
jmp
lock
call
adc
lods
inc
jb
jmp
ret
cmp
test
ins
pop
mov
ret
pop
mov
pop
xchg
pop
mov
mov
push
cmp
fsubp
fisubr
mov
jae
leave
retf
cmp
movs
aaa
and
jecxz
imul
dec
add
lods
pusha
enter
int3
mov
push
dec
mov
into
rcl
xlat
movs
aaa
jne
outs
test
stos
mov
sbb
or
xor
and
mov
fs
jge
pop
push
push
push
ret
mov
jp
mov
in
sbb
fidivr
push
adc
push
push
fistp
cld
mov
imul
pop
ret
push
push
ins
jae
sbb
jo
pop
fdivrp
pop
cli
daa
xor
aas
lahf
adc
icebp
int
mov
scas
test
cwde
xlat
test
mov
pop
mov
pop
xchg
push
and
add
stc
and
jb
dec
scas
mov
jle
lods
sbb
inc
dec
scas
jns
mov
mov
cld
add
aas
lea
clc
ret
test
ret
and
loop
or
pop
fiadd
js
adc
les
cld
aam
cmp
xor
and
pop
sub
pop
ret
push
or
adc
mov
dec
jecxz
shr
cmps
dec
pop
ret
and
add
scas
imul
inc
ss
(bad)
jmp
push
pop
out
add
add
xchg
enter
mov
jp
daa
push
and
mov
aaa
rcl
mov
adc
mul
movs
cdq
dec
out
out
call
int3
fcom
mov
cli
cmp
cmp
pop
push
adc
jbe
repnz
lock
jp
inc
mov
lea
out
or
mov
fidiv
inc
je
fbld
and
jl
clc
mov
push
or
cmp
jno
mov
inc
add
mov
inc
nop
bound
aam
sbb
sahf
xchg
pusha
push
dec
pushf
bound
js
mov
xchg
xchg
push
loop
jecxz
div
popf
adc
cdq
or
inc
in
mov
idiv
lds
push
dec
outs
cs
(bad)
and
call
arpl
and
in
popf
jecxz
mov
dec
(bad)
pop
popf
imul
dec
add
loope
mov
mov
hlt
fmul
fisub
jle
fnstcw
fld
mov
in
outs
imul
arpl
cmp
mov
fidiv
or
cld
call
lds
fidivr
xchg
ficom
adc
push
lock
shl
into
jp
cmp
mov
add
adc
sar
push
fmul
aam
iret
sub
cmps
sub
in
repz
sbb
movs
call
inc
xchg
and
push
pop
pop
xor
jnp
mov
ret
xlat
cwde
ror
scas
daa
daa
jbe
pop
fidivr
fild
or
pop
jmp
mov
(bad)
sub
addr16
out
(bad)
(bad)
icebp
mov
cli
pop
fwait
push
test
xchg
push
into
jae
ins
inc
mov
cmp
ror
in
cmc
inc
sahf
add
xchg
jp
push
mov
es
inc
test
cmp
into
int
mov
jae
push
bt
inc
mov
mov
retf
cmp
push
pushf
cmps
adc
(bad)
pop
je
(bad)
loop
cmp
daa
inc
push
cmps
icebp
loop
mov
imul
mov
iret
xor
mov
in
int
imul
jnp
mov
cmps
add
push
fnstsw
push
sbb
int3
add
fcomi
mov
adc
mov
fnsave
jge
add
mov
inc
or
fdivr
and
addr16
pusha
lods
fimul
jne
sti
fiadd
lods
dec
cmps
pushf
xchg
fist
sbb
sub
repz
mov
cmp
sbb
add
or
cdq
xor
sbb
inc
jecxz
cli
cli
mov
adc
mov
(bad)
loop
push
mov
xor
dec
push
pop
xor
lea
pop
push
pop
sahf
pushf
xor
dec
xchg
sub
add
xchg
dec
or
ins
sub
mov
call
ret
dec
sar
lds
std
mov
in
mov
jne
rcl
sti
inc
call
mov
jge
sbb
xor
sbb
lods
iret
cmp
cmc
inc
jbe
pop
dec
(bad)
dec
repnz
push
in
mov
pop
jae
push
and
leave
imul
xchg
nop
fcom
jb
cld
mov
sub
ret
stc
cmp
jnp
repnz
pop
ins
outs
pop
aam
fwait
jmp
mov
pop
xchg
es
inc
jne
mov
push
pop
pop
cmp
cli
jae
repnz
adc
and
fcomp
pop
xchg
(bad)
clc
aaa
pop
inc
les
push
ins
repz
mov
enter
dec
push
leave
cdq
jo
retf
or
jae
ss
in
adc
jmp
mov
fstp
mov
mov
add
out
or
dec
shl
pushf
(bad)
leave
and
aam
adc
or
or
sbb
cli
leave
bound
jne
mov
ja
jae
mov
inc
shl
mov
hlt
and
dec
mov
fmul
jecxz
stos
add
add
inc
popf
dec
out
jle
movs
sbb
stos
cdq
fdiv
mov
(bad)
or
shl
out
mov
jmp
(bad)
or
fwait
push
xor
sbb
clc
popa
adc
repnz
xchg
jo
pop
call
(bad)
ins
cmp
xchg
mov
lea
outs
push
gs
div
pop
or
sbb
push
mov
inc
(bad)
rol
mov
mov
sub
bnd
scas
pop
xlat
fst
jl
dec
stc
test
cli
push
push
or
repnz
xchg
into
ror
iret
pushf
add
pop
mov
pushf
lods
lds
mov
mov
fld
sbb
(bad)
scas
add
jmp
add
pop
and
seto
cmp
cs
movs
xor
jne
jg
cmp
in
(bad)
popa
jno
call
ret
jae
mov
pop
mov
dec
xchg
inc
arpl
rcl
icebp
mov
mov
dec
mov
mov
movs
jb
dec
test
mov
(bad)
int3
dec
pavgb
popf
push
or
in
jo
fcom
stos
fucomi
(bad)
dec
stc
rol
or
or
xchg
shl
in
test
movs
data16
pop
push
fisttp
(bad)
sti
xchg
dec
daa
aaa
pop
cmps
shl
retf
sbb
out
in
dec
daa
pop
ret
adc
repnz
and
jecxz
and
std
shl
push
add
dec
movs
mov
sbb
mov
into
fcmovu
shl
fs
sahf
jmp
xor
jnp
sub
and
sub
and
call
xchg
stos
ror
xchg
mov
hlt
or
nop
scas
sahf
aaa
mov
outs
imul
sbb
add
cmps
push
inc
sar
adc
cmp
sub
cmc
je
xchg
into
(bad)
and
cli
sub
mov
test
clc
ins
inc
lods
xchg
mov
or
sahf
or
pop
mov
cmps
jecxz
pop
stc
sbb
idiv
jl
rol
ret
or
and
out
loopne
push
mov
pop
cmp
cmc
cmp
bound
movs
xor
fbld
jb
pop
into
pop
aaa
stos
mov
fimul
sahf
cmc
pop
inc
or
push
sbb
dec
dec
push
cs
cwde
pop
ins
ret
cmps
sbb
jl
mov
imul
or
clc
mov
or
pop
out
dec
jae
jb
jecxz
call
jno
fstp
mov
mov
pop
push
xchg
fmul
mov
mov
xor
mov
fisubr
jne
mov
clc
std
mov
inc
cmp
cmps
sub
leave
mov
or
shl
rcr
dec
ret
cmp
sahf
fldenv
lahf
jge
and
jge
xor
imul
sbb
push
xchg
cwde
mov
push
ja
mov
adc
jae
adc
sub
popa
test
inc
cli
pop
add
dec
jl
add
cdq
stc
ins
lock
in
mov
mov
sbb
cmps
es
push
push
dec
xor
(bad)
cli
xchg
fs
sub
mov
pop
xor
add
leave
repz
cmp
lahf
test
test
xchg
xchg
je
jae
mov
push
pop
push
leave
fild
xchg
addr16
in
stos
sbb
xor
shr
lods
inc
mov
(bad)
rol
int3
sub
cwde
sbb
jmp
cli
xor
xchg
jae
and
ds
cmps
imul
mov
dec
out
std
into
or
jbe
push
mov
sbb
push
mov
jmp
inc
inc
test
lahf
jmp
and
lea
and
out
retf
call
inc
lods
bound
mov
push
jmp
and
jp
mov
or
xchg
sar
daa
or
outs
inc
pusha
sub
test
je
outs
cmp
jo
sub
cmps
mov
sub
nop
dec
retf
sbb
dec
push
cmc
pop
and
cwde
dec
dec
imul
std
sbb
jle
push
jmp
jmp
enter
xor
or
jae
adc
adc
mov
and
ror
dec
sbb
xor
retf
push
sbb
ror
sub
test
cli
sbb
gs
and
xchg
xor
push
xchg
fstp
push
sbb
jp
xor
inc
pop
loope
sbb
cmp
mov
dec
cdq
or
sbb
loope
adc
arpl
cmp
cmps
mov
imul
out
pop
call
xor
mov
clc
mov
movs
mov
pop
popf
cmp
ins
add
ds
ret
or
push
pop
or
mov
lock
mov
mov
push
fcom
movs
push
jle
ds
in
jmp
ret
gs
daa
cmps
rol
inc
or
jmp
mov
inc
mov
mov
jg
mov
outs
data16
outs
and
inc
arpl
sbb
add
ret
call
and
jb
xchg
xor
movs
cdq
data16
in
stc
xchg
xchg
jl
fld
outs
aaa
in
out
push
rcl
popa
pushf
mov
mov
imul
popa
mov
add
dec
adc
(bad)
sub
movs
push
lea
iret
inc
xlat
sub
(bad)
bound
sub
pop
bound
lahf
(bad)
cmc
ins
dec
add
xchg
inc
push
mov
or
stos
sbb
mov
adc
mov
lea
pop
pop
xchg
inc
or
retf
jecxz
fst
push
lds
test
xchg
push
sahf
xchg
adc
inc
ja
push
out
sub
out
mov
outs
push
push
test
adc
push
jmp
jb
pop
xor
inc
jmp
imul
out
xor
xor
js
push
push
ja
or
arpl
adc
sbb
sub
xor
jmp
and
mov
jne
mov
sbb
jno
lea
adc
inc
xchg
cli
fld
jmp
push
or
cmp
std
mov
test
xchg
out
lock
xor
sbb
shl
in
mov
cmp
sub
fst
mov
add
inc
mov
mov
mov
fstp
ins
mov
mov
mov
pop
xor
adc
jl
jae
pop
in
sar
cdq
cmc
jnp
mov
push
fst
arpl
nop
sub
je
and
test
stos
dec
sbb
imul
and
xchg
xor
shr
aad
inc
rcl
cli
jo
mov
pop
dec
push
addr16
mov
ins
test
mov
add
lea
xchg
das
je
jbe
cmp
inc
ins
mov
mov
iret
out
xchg
sbb
push
test
cmp
push
enter
mov
xor
lahf
mov
(bad)
iret
jge
iret
jmp
jg
inc
jae
cdq
jle
mov
mov
inc
cdq
lea
fdivr
lds
in
mov
cmps
lds
inc
pop
cmps
add
xor
jge
arpl
mov
inc
call
inc
ret
(bad)
sbb
outs
fs
push
je
scas
fdiv
jp
xchg
adc
repz
pop
mov
jo
movs
shufps
shr
adc
inc
mov
sbb
pop
popf
mov
(bad)
xlat
gs
pop
dec
or
imul
xchg
jno
call
mov
xchg
or
xchg
dec
movs
cmp
or
mov
cwde
(bad)
jnp
fidivr
cmps
ror
fisub
fwait
addr16
mov
lahf
aad
pop
loope
mov
xor
clc
(bad)
mul
xchg
add
outs
sub
iret
jp
repnz
add
into
clc
in
stos
pop
das
popw
and
imul
xchg
mov
ins
mov
ins
mov
cmp
loopne
lods
jmp
in
call
push
push
mov
pop
push
test
inc
aaa
jecxz
dec
dec
or
sbb
jmp
gs
push
xchg
mov
and
movs
sub
add
adc
(bad)
and
mov
or
adc
mov
and
cmp
inc
pop
push
cmp
push
or
nop
js
ret
sbb
arpl
sub
mov
mov
cmp
gs
fucomi
sub
or
cs
shr
lock
pop
lock
rcl
cmps
inc
sbb
and
push
(bad)
stc
push
test
cmp
cld
or
mov
dec
xlat
pop
loop
cld
jl
jae
push
add
mov
adc
mov
xchg
dec
stc
push
lock
pop
mov
xchg
fist
out
dec
sbb
pushf
ins
(bad)
adc
inc
repnz
mov
das
mov
jae
xchg
inc
test
(bad)
mov
adc
pusha
mov
xchg
(bad)
sub
ffreep
mov
mov
not
loopne
loope
repz
es
mov
fdiv
sub
cmp
lds
mul
cmps
adc
idiv
adc
leave
(bad)
jp
jecxz
data16
and
inc
in
popa
xor
loopne
jg
mov
add
xor
mov
popa
dec
xchg
pop
mov
leave
sar
in
loopne
clc
push
pop
pop
push
mov
sahf
and
mov
mov
outs
jge
loopne
loop
loope
shl
cs
fidivr
dec
loope
lock
imul
stc
xor
lock
std
push
sub
jno
mov
dec
push
jmp
out
mov
lahf
jmp
iret
leave
ds
pop
jmp
or
dec
push
jbe
gs
xchg
(bad)
ds
je
movs
dec
ret
lock
dec
daa
push
pushf
shl
call
mov
adc
pop
mov
(bad)
mov
out
outs
clc
pop
fstp
call
sbb
pop
jmp
bound
push
sbb
(bad)
hlt
int
fnstsw
jmp
cwde
add
std
add
loopne
mov
mov
xor
push
cmps
(bad)
aad
mov
or
inc
daa
arpl
imul
pop
cmp
jge
call
cld
mov
das
aad
stos
and
sub
xor
test
lods
fisttp
mov
lock
cld
or
dec
adc
sbb
push
aad
add
jne
stos
pop
mov
in
mov
xchg
repnz
into
sahf
sbb
adc
fidiv
stc
lods
les
sahf
xor
test
jno
rcl
pop
push
repnz
mov
sub
or
jge
cmp
push
stos
add
fbld
imul
and
mov
sub
out
sub
aam
aam
(bad)
mov
mov
stos
cmp
sub
(bad)
mov
jno
xlat
pop
push
fistp
cmp
rcr
inc
pop
fisubr
jae
adc
xchg
add
enter
jecxz
pushf
mov
push
js
cmp
sbb
out
jmp
mov
jbe
fnstsw
mov
mov
inc
test
push
adc
cdq
repnz
aam
sahf
stc
pop
push
sti
mov
jp
gs
mov
cwde
cmc
mov
out
out
dec
out
mov
sbb
cmp
fcomp
push
pop
cli
xor
(bad)
sub
imul
(bad)
out
cdq
sbb
add
das
pop
pushf
ja
dec
arpl
dec
fs
data16
les
push
into
ror
test
add
inc
jae
mov
mov
cmps
dec
push
mov
dec
shl
xor
mov
popf
and
mov
in
in
mov
das
hlt
and
fld
fcmovnbe
outs
aaa
loop
addr16
lods
retf
xchg
(bad)
push
inc
data16
mov
add
cmp
jge
lahf
movs
and
push
call
pop
(bad)
out
jne
and
add
cmps
dec
bnd
sub
push
mov
out
jecxz
or
xor
xor
dec
pusha
mov
fimul
and
xchg
inc
cs
out
adc
push
imul
mov
fldpi
mov
pop
push
repnz
in
and
cmp
or
lods
pop
cdq
(bad)
dec
mov
mov
sbb
push
mov
push
fs
daa
mov
out
ror
shr
mov
rcr
push
mov
jae
mov
mov
hlt
mov
xor
jnp
sbb
add
ins
arpl
aam
cmp
inc
sub
fdiv
pop
pop
jl
retf
mov
lods
dec
or
and
jmp
push
pusha
ds
pushf
stos
test
mov
mov
popa
out
push
mov
out
aad
mov
mov
cs
push
nop
adc
repz
(bad)
lods
gs
mov
(bad)
movs
dec
sti
dec
dec
sbb
cmps
mov
mov
jmp
ror
sbb
sub
cmc
jns
push
push
enter
fldcw
jp
dec
xor
pop
mov
outs
rol
shl
popa
sahf
sub
cmp
inc
mov
call
scas
stos
sub
cmp
xor
adc
sub
mov
or
and
push
xchg
out
(bad)
mov
gs
hlt
rol
jno
mov
cmc
inc
mov
dec
dec
out
out
stos
push
pop
jl
or
loopne
in
sbb
icebp
mov
push
and
mov
ret
push
into
mov
out
dec
call
in
je
sahf
gs
xchg
into
rol
or
and
xchg
adc
repz
sbb
push
or
sbb
inc
arpl
test
ins
int
mov
cdq
or
mul
enter
retf
pop
xor
enter
scas
and
arpl
xchg
or
sbb
fpatan
stos
mov
xlat
movs
or
mov
call
jle
and
pushf
cmps
imul
add
pop
dec
mov
or
lods
or
pop
jge
or
retf
repz
int3
repnz
or
mov
mov
push
push
pop
cmp
inc
mov
sub
retf
xor
mov
xlat
cmp
enter
enter
push
(bad)
das
inc
and
pop
sbb
cli
test
sahf
(bad)
repz
int
mov
stc
sub
jecxz
sbb
jno
into
stos
scas
xchg
inc
adc
dec
adc
pop
add
jnp
xchg
sbb
mov
cli
das
jmp
cmc
cmps
xlat
popf
push
mov
int
push
jl
push
sbb
arpl
mov
mov
mul
mov
stos
aad
add
xchg
push
add
arpl
fidiv
dec
adc
leave
fs
pusha
sbb
jecxz
sub
fwait
mov
or
push
jge
adc
movs
mov
ror
in
inc
sub
sbb
mov
lea
push
jno
in
xchg
push
cmp
rcl
cmp
aaa
jmp
mov
xchg
adc
pop
push
push
jmp
test
out
adc
lock
rcl
cld
repz
push
imul
fsubp
mov
xchg
call
out
rol
push
mov
push
push
mov
(bad)
pop
dec
dec
dec
retf
cmp
repnz
ja
mov
stos
bound
dec
aas
jae
xchg
data16
cmp
jmp
inc
or
repnz
nop
shl
mov
jecxz
cs
in
adc
scas
leave
dec
mov
ins
push
or
popf
push
sbb
(bad)
xchg
aaa
stos
shr
mov
pusha
retf
inc
daa
cmps
std
ret
or
ror
push
cmp
pop
mov
xchg
(bad)
add
cmp
hlt
inc
(bad)
jp
cld
loopne
sbb
shl
mov
jmp
pop
push
push
pop
jno
int
nop
repnz
jle
mov
les
xchg
cmp
ds
push
cwde
dec
jns
(bad)
sahf
cmps
mov
and
in
xchg
imul
imul
mov
cli
cdq
cmp
outs
mov
in
fsubr
sar
mov
pop
outs
cmps
out
ds
in
mov
pop
jmp
pop
bound
jl
add
retf
xor
dec
call
cmp
sub
push
popa
popf
(bad)
jge
cwde
pop
mov
push
pop
cmp
frstor
lock
xchg
dec
mov
fs
imul
dec
test
xchg
inc
stos
aas
xchg
jae
pop
ror
xor
jl
stos
repnz
imul
jbe
cmp
cli
mov
std
sbb
push
cmps
movs
jg
mov
lock
loop
fidiv
cmps
xlat
push
xchg
adc
add
movs
loopne
loop
mov
xor
outs
mov
push
push
not
mov
sub
push
mov
cmp
inc
adc
adc
mov
mov
jnp
cwde
sub
div
push
sub
push
or
inc
push
(bad)
jns
xlat
fld
js
jge
mov
jmp
and
sbb
lock
repnz
mov
jmp
push
js
sbb
jp
or
(bad)
cmp
in
cdq
push
jo
mov
dec
mov
lods
and
add
aad
pop
nop
fwait
stos
mov
fldenv
frstor
cmp
adc
inc
repnz
imul
fs
aaa
pop
adc
xor
ins
scas
cmp
ss
pushf
cmp
jno
mov
dec
mov
mov
pop
dec
mov
or
or
out
push
push
mov
inc
outs
jbe
sbb
mov
inc
jbe
fwait
bound
int3
inc
fcomp
cli
cmp
pop
xor
push
dec
pop
shl
retf
sbb
in
sub
pshufw
imul
addr16
inc
cmp
inc
mov
pop
dec
push
adc
(bad)
stc
imul
rcr
pop
inc
gs
mov
cmc
or
ss
and
inc
mov
push
(bad)
push
imul
xchg
test
cmp
jns
pop
inc
cwde
lea
mov
and
push
inc
mov
test
or
iret
dec
aaa
aaa
mov
or
mov
sub
pop
sar
or
jne
xchg
in
pop
cmp
xchg
imul
and
ret
inc
sbb
jmp
xchg
cmp
and
jge
std
(bad)
and
retf
cmc
mov
fprem1
lods
inc
loopne
jbe
mov
mov
cmp
cmp
scas
jne
(bad)
and
xchg
scas
out
mov
or
and
jl
dec
and
(bad)
bound
xor
int
adc
cmp
mul
cmc
adc
push
xchg
pop
rcl
outs
mov
sub
call
je
mov
xchg
xor
mov
lods
(bad)
into
mov
ja
mov
xor
retf
data16
rcr
sub
retf
push
mov
mov
xchg
fs
inc
sub
pop
(bad)
lods
inc
mov
cmp
sbb
scas
arpl
sub
popf
inc
dec
in
adc
sub
popf
xchg
push
mov
cld
call
sbb
mov
xchg
ins
and
arpl
icebp
rcl
popf
push
mov
adc
jbe
push
or
test
(bad)
mov
jle
xchg
push
or
push
imul
es
jns
sub
fdiv
mov
cmc
in
inc
rcl
push
dec
mov
inc
daa
fist
cli
dec
jg
adc
stos
scas
(bad)
sti
xchg
mov
loopne
cmp
repnz
and
dec
movs
mov
and
jnp
out
popf
jb
out
pop
das
mov
(bad)
mov
adc
pop
dec
scas
mov
cmc
out
push
js
sub
icebp
fmul
push
xchg
enter
dec
fdiv
xchg
push
stc
inc
jle
jb
test
shr
int
fisubr
nop
or
jns
rol
int
mov
xchg
iret
sub
or
ins
mov
ds
pop
add
pop
lods
repz
in
push
loopne
scas
xchg
push
jne
repnz
fmul
ja
sti
iret
push
push
fbld
push
pop
dec
inc
adc
add
pop
cs
or
rcl
sti
imul
and
mov
in
in
jp
jnp
add
outs
loope
je
xchg
jae
cs
fst
sub
mov
sub
add
out
fld
(bad)
adc
dec
popf
dec
mov
(bad)
not
mov
shr
jnp
nop
pop
push
and
mov
fistp
cs
adc
stos
or
inc
jge
cmps
aaa
movs
mov
ins
pusha
mov
pusha
scas
jecxz
push
push
mov
sub
ins
pop
mov
mov
call
(bad)
push
sub
add
push
or
mov
test
xor
jecxz
xor
and
cmp
rcr
(bad)
mov
nop
jbe
pop
cmp
mov
in
cmp
nop
push
xor
inc
cs
dec
in
mov
sbb
mov
push
push
retf
test
lods
xchg
mov
repnz
adc
inc
xchg
shl
cmp
ret
fmul
sbb
ret
addr16
mov
push
mov
dec
jns
mov
cli
test
das
test
or
adc
mov
add
aam
stc
sbb
push
add
repz
icebp
test
ds
sti
and
bound
push
or
ins
pop
mov
lock
neg
add
adc
clc
cmp
test
inc
sar
add
leave
or
push
adc
jecxz
mov
adc
pop
cmp
out
pushf
adc
and
xlat
jmp
pusha
imul
pop
std
(bad)
jmp
stos
in
and
xor
in
dec
jo
out
push
or
shl
sub
scas
sti
int3
pusha
sub
inc
lea
(bad)
call
xchg
loop
shr
jmp
adc
xor
or
(bad)
pop
retf
pushf
add
nop
dec
(bad)
xor
push
xchg
cmp
sbb
in
out
inc
jp
push
(bad)
and
daa
xchg
pop
bound
mov
push
xor
xor
bound
mov
push
div
xor
inc
je
sbb
sbb
ret
fst
or
dec
movs
pop
call
dec
xchg
mov
cwde
addr16
mov
mov
ss
and
lock
and
sub
frstor
or
adc
cmp
daa
movs
ja
loope
arpl
inc
mov
cmc
bound
cmp
lea
inc
mov
pop
jne
mov
xor
sub
iret
repz
xchg
mov
aaa
das
cmps
jle
mov
mov
mov
(bad)
jecxz
push
iret
sbb
ja
movs
cdq
test
hlt
dec
pop
mov
adc
pop
push
shl
or
pop
pop
inc
scas
mov
lahf
gs
pop
pop
jg
cmc
mov
pmuludq
dec
scas
cwde
adc
loopne
popa
lea
in
mov
gs
call
sahf
dec
pop
das
cmps
xor
lods
je
pop
cmps
xor
cmp
dec
fiadd
inc
arpl
pop
or
pop
dec
shl
(bad)
inc
or
fyl2x
(bad)
outs
ins
movs
sbb
popa
ja
test
jmp
dec
mov
test
loop
ficom
lahf
sub
(bad)
cmps
and
lahf
lds
imul
jnp
cmp
push
mov
fldenv
or
fadd
inc
or
pop
nop
ret
xchg
les
daa
imul
and
fmul
adc
and
pop
sbb
mov
dec
mov
push
add
cmc
ds
push
push
mov
cmp
xor
xchg
call
arpl
imul
pushf
fsub
jns
dec
push
test
and
aaa
pop
rcr
cwde
push
hlt
mov
out
add
es
lahf
(bad)
out
out
cmp
sub
pop
push
xlat
in
mov
jmp
loopne
retf
jecxz
adc
pop
mov
or
or
cli
popf
inc
inc
xchg
in
mov
mov
mov
sub
out
add
pop
mov
lods
data16
in
out
adc
ret
fcmovb
test
pop
fcmovbe
or
test
xchg
retf
or
icebp
ss
cli
lds
inc
pop
adc
cld
xlat
dec
bound
mov
ja
inc
test
scas
mov
aam
clc
push
js
mov
outs
loopne
lods
push
adc
jns
shr
outs
neg
pop
rcr
jmp
shr
mov
cwde
ret
sbb
pop
or
adc
lods
daa
dec
xchg
xor
fld
cmp
movs
sub
mov
cmps
inc
jmp
xchg
and
inc
xchg
xchg
dec
sub
pop
aad
jo
lock
xchg
mov
and
xchg
(bad)
jnp
movs
jl
ja
mov
xor
js
(bad)
adc
push
jl
push
rcr
imul
or
scas
repnz
push
int3
xchg
stc
sub
cmp
cdq
and
jmp
mov
jbe
lahf
std
movs
shr
(bad)
shl
push
jle
fild
mov
in
sbb
stc
jmp
sub
shr
ins
add
ss
outs
out
push
mov
inc
inc
xchg
icebp
add
fsub
jg
lods
lods
rol
add
fisttp
aam
dec
daa
out
mul
mov
scas
lds
dec
mov
mov
lods
mov
pop
mov
popf
aaa
scas
sbb
add
mov
adc
loope
mov
in
dec
loope
scas
fcmovnbe
or
jecxz
xor
sub
and
arpl
or
lock
enter
sti
push
test
adc
and
fidiv
adc
leave
adc
cwde
push
xchg
cmp
(bad)
mov
iret
push
cmp
(bad)
inc
call
es
icebp
mov
xchg
call
cld
fidivr
fcmovnu
mov
(bad)
sub
jae
cmps
mov
stos
pushf
pop
nop
dec
mov
xor
(bad)
bound
push
in
pop
nop
sub
jg
mov
rcr
jge
in
popa
xchg
push
push
cli
cli
inc
and
push
push
rcr
add
mov
inc
(bad)
fs
rcl
inc
lds
pop
pusha
adc
dec
mov
inc
(bad)
sbb
xchg
mov
test
mov
shl
jne
lods
and
mov
mov
inc
xchg
push
dec
adc
sbb
popf
shl
adc
imul
fimul
pop
xor
(bad)
jo
inc
dec
retf
xchg
mov
sbb
cmp
jnp
mov
sti
(bad)
pop
pop
adc
into
addr16
jno
sbb
xor
cmp
imul
inc
add
out
inc
mov
pop
jmp
out
cmc
sub
in
in
sub
shl
jg
dec
pop
cwde
jecxz
push
and
jle
adc
push
cwde
adc
idiv
div
fst
int3
outs
call
int3
call
jns
(bad)
cmp
cwde
enter
xor
frstor
add
les
hlt
jns
pop
push
out
call
cmp
xor
and
mov
push
sub
jmp
and
cmp
pop
xchg
aaa
jp
pop
fidivr
sub
sbb
adc
push
inc
push
inc
lock
xchg
xchg
pop
rcr
push
aad
jnp
movs
fs
aas
dec
xchg
mov
cmp
je
push
call
(bad)
jmp
pop
stos
int
jp
ds
fidiv
xchg
nop
sbb
pushf
cli
and
mov
mov
xchg
ds
cmps
hlt
cmp
fidivr
sub
pusha
clc
lea
in
fld
or
inc
and
inc
retf
and
xchg
outs
push
loope
daa
mov
retf
xchg
imul
cdq
adc
and
sub
fnclex
jp
loope
mov
out
fs
retf
cwde
dec
inc
aaa
pop
mov
inc
sbb
xor
lods
pop
cmp
pop
cmp
sbb
lahf
iret
arpl
icebp
pop
ret
scas
mov
xor
inc
sub
aad
je
fdivr
and
clc
push
xor
jne
(bad)
stos
inc
jo
idiv
out
or
lods
jp
stos
mov
cli
(bad)
hlt
jp
push
(bad)
add
pop
and
add
cmps
xchg
xchg
repz
(bad)
jb
push
adc
out
out
dec
mov
pop
out
fimul
cwde
mov
fs
push
cmp
sbb
add
xor
or
rcl
push
test
ins
cmp
nop
ins
stos
into
sub
ds
out
mov
sar
sub
daa
pop
xchg
cmps
mov
rcr
jp
pop
push
test
sub
(bad)
sbb
addr16
xor
jnp
ja
inc
cs
xor
fcmove
retf
call
or
hlt
les
xlat
in
aas
jl
pop
(bad)
push
pop
outs
sub
ret
adc
cmps
fstp
ret
aad
clc
frstor
into
inc
aas
inc
jmp
mov
add
mov
push
mov
push
jmp
jno
int
add
dec
mov
sbb
fstp
out
ins
cmp
inc
or
inc
(bad)
hlt
mov
ror
arpl
cdq
cmc
adc
int
mov
ins
repnz
cmp
and
test
push
jl
stos
mov
clc
setno
xchg
inc
test
fs
pop
jo
or
inc
jns
(bad)
stos
jns
push
mov
adc
mov
dec
idiv
pop
sub
push
call
repz
mov
push
rcl
inc
or
das
adc
or
add
bound
retf
dec
out
ja
pop
sbb
clc
jae
jnp
call
scas
lods
sub
mov
paddusb
stos
or
ins
push
or
dec
out
bound
xchg
icebp
pop
cmc
and
movs
ins
mov
xchg
outs
jb
(bad)
ret
pop
mov
and
sar
inc
addr16
(bad)
mov
pop
cmp
xchg
sub
pop
ret
jb
add
cmp
cmps
dec
inc
inc
fcomp
xchg
pop
push
push
cmp
loop
push
mov
inc
jae
inc
pusha
xchg
push
setp
data16
data16
pop
lods
pop
in
dec
pop
xchg
imul
nop
(bad)
in
rol
xchg
add
push
push
pop
mov
fdiv
clc
pop
sub
cwde
jge
sbb
movs
cmps
aad
cmc
fnstenv
in
div
(bad)
fidiv
enter
or
ins
jmp
cmp
inc
test
xor
push
jmp
ss
out
ret
jne
sti
or
jno
rol
sub
call
jmp
fcom
and
sahf
inc
pop
xchg
sub
sbb
mov
bound
inc
adc
push
lds
pop
cmp
mov
pop
lods
or
or
inc
push
popf
arpl
ja
inc
jo
push
std
mov
mov
ret
in
inc
cld
mov
imul
cmp
das
sub
push
or
and
cmps
shr
popf
mov
add
lock
push
cwde
fdivr
or
sar
push
xor
aaa
cs
adc
test
push
test
xor
test
hlt
jg
shr
test
pop
mov
(bad)
out
bound
mov
test
adc
xlat
mov
cmp
jb
ficom
movs
out
arpl
test
outs
jmp
call
push
mov
xor
cli
es
dec
inc
dec
icebp
cmps
cmps
shl
fwait
push
cs
xor
dec
xchg
push
adc
sti
inc
sub
inc
into
aas
pop
jl
sbb
std
neg
lock
out
repz
out
xchg
mov
xchg
adc
xchg
inc
in
das
lods
add
push
mov
(bad)
mov
inc
and
out
cld
or
loop
loope
cmps
out
cmps
icebp
inc
push
mov
mov
mov
fstp
inc
punpcklwd
clc
pusha
sahf
fstp
(bad)
xchg
mov
aad
inc
test
dec
jmp
add
push
cwde
jno
push
fs
jae
sub
mov
dec
mov
dec
mov
mov
(bad)
xchg
fnstcw
outs
mov
cdq
mov
inc
push
cmp
adc
xchg
inc
mov
and
add
sbb
ror
cmp
and
mov
fmul
xlat
les
and
jecxz
mov
mov
mov
pop
push
shr
in
rcl
inc
and
sub
lea
in
sbb
iret
xor
mov
cmps
icebp
shl
dec
clc
xchg
(bad)
hlt
mov
mov
and
adc
pop
sub
xchg
icebp
xchg
sar
jae
call
das
pop
outs
aam
adc
fsubr
mov
add
in
or
shr
and
sub
inc
adc
mov
or
xchg
mov
lds
xchg
fld
cmp
adc
push
mov
lock
add
imul
clc
shl
(bad)
arpl
mov
cmp
adc
movs
xchg
xchg
pop
fstp
sbb
jns
mov
xchg
inc
mov
add
(bad)
bound
mov
mov
cdq
aam
push
test
addr16
cmp
xor
mov
aaa
or
jmp
xor
xchg
or
cmp
dec
jmp
es
inc
adc
ds
in
mov
pop
popf
pop
out
mov
scas
cmp
repz
jmp
xor
call
push
dec
add
lods
xchg
cmp
out
pop
clc
xchg
scas
mov
mov
xor
out
pop
sub
lea
aam
in
mov
sub
jle
cmp
or
xchg
cmp
in
xchg
xchg
mov
jg
pop
in
shl
shl
inc
shl
mov
mov
aad
fist
call
dec
cmp
cmps
mov
and
daa
push
and
gs
icebp
enter
aaa
popa
lahf
mov
aad
cmp
repnz
loopne
fadd
pushaw
stc
adc
mov
cmp
es
in
push
imul
les
cmps
mov
out
into
addr16
fdiv
or
retf
inc
jge
xlat
ret
pop
sub
mov
loop
push
adc
scas
(bad)
test
jecxz
push
push
jne
cmc
outs
mov
sbb
pop
pop
adc
push
aas
xor
inc
jle
add
in
jge
add
or
ret
adc
xchg
or
test
leave
inc
mov
inc
jo
xor
add
pop
add
adc
xchg
mov
int
add
stos
xor
jne
shr
push
fmul
cmps
cmp
sub
ss
pop
sub
xor
cld
fistp
test
in
sar
mov
dec
mov
fimul
clc
ins
lods
sub
push
and
gs
dec
out
aaa
dec
sti
xchg
repnz
jl
mov
out
ret
xchg
ficomp
and
popf
shld
mov
outs
xor
mov
in
xor
scas
cmp
stos
pop
inc
cmp
fistp
cmps
jne
repz
cmp
cmp
arpl
mov
bound
inc
nop
push
xor
mov
mov
xchg
enter
paddq
and
cmp
push
push
jb
fdiv
lods
outs
aas
xor
ins
enter
mov
mov
mov
scas
sahf
cdq
mov
mov
mov
mov
stc
add
popf
pop
push
jle
fbld
test
sub
sub
mov
and
add
fs
push
mov
movaps
pop
add
fnstsw
movs
ret
dec
dec
retf
dec
mov
aas
pop
cli
sbb
in
mov
lock
icebp
and
sbb
and
imul
jnp
mov
and
mov
frstor
or
inc
call
imul
(bad)
jl
mov
(bad)
pop
cmp
sub
push
fidiv
addr16
or
cmp
pop
imul
dec
cld
sbb
or
in
in
mov
mov
sbb
shl
xlat
mov
jl
mov
or
cli
ficom
push
or
mov
mov
popa
sbb
into
cmps
xchg
and
sub
cmps
push
push
jno
jecxz
push
es
jecxz
loopne
and
adc
inc
xchg
sbb
mov
js
cmp
sub
dec
xor
dec
or
or
leave
adc
iret
adc
in
sbb
stc
or
div
mov
popa
sbb
pop
cmp
not
push
mov
repz
or
mov
mov
pop
into
xor
xchg
inc
imul
cdq
rcl
sti
cs
(bad)
sbb
test
test
or
xchg
(bad)
das
loope
mov
jnp
mov
adc
mov
rcl
cwde
int3
jbe
fidivr
xor
jp
inc
das
shl
ret
push
push
cmps
inc
xor
test
lds
ret
fisubr
jae
sub
add
scas
dec
add
mov
inc
pop
cmp
loope
repnz
inc
jno
mov
mov
dec
call
inc
and
sub
pop
mov
mov
jecxz
push
or
pop
scas
nop
dec
leave
inc
lock
pop
xchg
mov
out
std
adc
inc
sbb
mov
cmc
icebp
cmps
pop
(bad)
mul
rcr
mov
(bad)
cs
jge
shl
mov
push
mov
mov
mov
mov
mov
pushf
xchg
xor
adc
pop
mov
int
icebp
push
mov
cmp
hlt
jle
jmp
push
sub
sar
dec
aad
cmp
ret
jp
icebp
stc
data16
cmp
int3
and
mov
cmp
mov
rcr
mov
mov
fwait
xchg
xchg
add
xor
mov
push
in
cmp
push
push
cmovbe
cmps
and
nop
outs
mov
cmp
add
ins
jg
fnstsw
mov
nop
xchg
int
xor
js
shl
mov
sub
stos
hlt
(bad)
xchg
jbe
mov
loope
add
in
cmps
(bad)
pop
test
pop
or
movs
sub
movs
and
fcomi
jg
icebp
in
inc
sbb
mov
inc
xor
pop
push
sbb
inc
jo
dec
or
push
imul
mul
pop
pop
mov
sbb
jnp
enter
mov
lods
test
dec
sti
adc
js
pop
fidivr
cwde
cmp
movsx
stc
in
mov
cwde
movs
xor
push
loopne
pop
aaa
pop
mov
nop
push
pop
call
into
dec
pop
bound
mov
arpl
adc
adc
cmp
mov
gs
push
jg
cmc
pop
sub
test
test
push
imul
dec
pop
push
test
cmp
fs
hlt
and
inc
pop
push
mov
jne
movs
sti
cld
(bad)
pop
mov
bound
or
fdiv
pusha
pop
retf
int3
xchg
cmp
das
cs
sub
mov
pusha
xor
cmp
cmps
xor
ficomp
stos
push
sti
mov
dec
fstp
xchg
std
stos
push
fstp
jbe
xor
stc
movs
daa
pop
idiv
outs
sahf
dec
ret
and
addr16
pop
std
mov
pop
pop
jl
cmp
add
adc
sbb
pop
ja
out
jge
dec
and
nop
sahf
fwait
test
je
jne
fcom
sub
in
push
dec
add
inc
movs
popa
nop
rol
xchg
jmp
jae
mov
enter
pop
dec
lds
xchg
ror
sbb
push
xchg
hlt
add
push
dec
int
mov
adc
(bad)
lods
loopne
pop
enter
out
das
cmp
lds
cwde
lock
sub
fadd
adc
and
scas
xor
push
adc
aas
mov
jno
sbb
mov
inc
div
inc
not
mov
lea
fidivr
or
mov
fldenv
jae
int3
cmp
push
cmp
add
push
sbb
test
and
cwde
lahf
xchg
into
adc
aaa
fnstenv
mov
mov
repz
push
pop
fimul
mov
dec
mov
int
popf
cmp
imul
aaa
jne
xchg
jmp
lods
push
scas
call
js
mov
popa
sub
cmp
push
jno
jno
shr
dec
xor
push
push
pop
push
xor
mov
fsub
fwait
adc
sbb
jmp
xor
jbe
out
jle
xchg
jns
mul
aam
ror
xchg
adc
pusha
mov
nop
into
std
ins
and
scas
loop
imul
jge
(bad)
xor
dec
aam
retf
cmp
cmp
rol
shl
mov
jmp
add
pop
and
adc
sbb
es
cmp
inc
inc
inc
test
pop
jge
pop
mov
inc
or
(bad)
or
or
icebp
std
xchg
pop
cld
fstp
pop
add
mov
ficom
jge
fcom
into
stos
pop
mov
fidivr
inc
sub
rol
ret
dec
stc
mov
mov
aam
lds
jge
in
jmp
jbe
dec
dec
or
add
mov
out
leave
arpl
repz
ret
lds
icebp
xchg
test
push
mov
aaa
jne
jp
jo
(bad)
pop
ret
aas
or
cmc
ss
iret
cmp
data16
sub
icebp
sub
dec
loopne
or
fdiv
ins
repz
xor
stos
mov
jno
cmp
sbb
shl
sub
xor
xor
pushf
and
mov
out
mov
shl
inc
mov
mov
and
xcrypt-ecb
cmps
dec
inc
fimul
fnsave
cmps
inc
add
daa
aad
mov
mov
or
xor
adc
leave
sahf
and
cmps
fnstcw
jg
xchg
xlat
pushf
push
xor
in
jne
idiv
mov
loop
push
outs
shl
push
dec
mov
inc
sub
push
push
mov
mov
push
xor
mov
add
inc
and
or
and
cdq
retf
inc
mov
jns
add
repz
hlt
mov
mov
adc
icebp
push
jmp
mov
mov
(bad)
and
sahf
daa
xchg
retf
and
add
cmps
popa
or
cmp
neg
scas
pop
lock
sbb
dec
ins
mov
cmc
sub
adc
jp
add
jae
loope
adc
sti
add
push
adc
cmc
or
cdq
mov
jns
inc
cmps
aas
cld
push
mov
cwde
jne
shl
fcmovnbe
push
xor
inc
or
jns
(bad)
fnsave
fbld
pop
add
dec
cmp
push
adc
mov
mov
mov
and
xchg
test
xor
or
push
(bad)
sti
pop
fstp
pusha
into
push
sub
sub
cld
test
jmp
das
mov
and
(bad)
xchg
jge
lods
retf
and
stos
jecxz
addr16
loope
push
sbb
lods
clc
cld
test
shl
sub
add
mov
mov
pop
ret
daa
xchg
or
add
(bad)
fisubr
movs
mov
sub
fisubr
and
lods
sbb
ret
repz
sbb
(bad)
mov
inc
pop
mov
mov
dec
neg
nop
(bad)
fldcw
fdivr
(bad)
sub
retf
cmp
aas
dec
cmp
pushf
out
or
jno
out
cmc
and
out
icebp
cs
cli
outs
mov
jnp
dec
sti
jnp
jo
push
loopne
mov
sbb
imul
hlt
cmps
shr
push
and
jle
xchg
in
ss
cmp
jns
retf
and
rcr
xchg
sub
push
xor
push
mov
xor
popa
xor
inc
jno
cli
mov
dec
mul
jno
ja
loop
push
packsswb
retf
mov
and
xchg
mov
sbb
jb
call
xchg
mov
mov
ins
cmp
lock
int
push
push
pop
push
neg
add
or
jnp
or
push
fsubr
pop
cmp
push
lods
in
push
or
mov
pop
aas
test
xor
int
mov
xor
xchg
xlat
cmp
aad
push
out
ds
xlat
ss
mov
adc
xor
xor
std
xor
pop
pop
hlt
loope
stc
mov
add
mov
adc
sub
mov
push
lds
ss
and
mov
inc
mov
test
xchg
lahf
mov
ja
mov
sti
xchg
xchg
xchg
mov
jno
js
jno
mov
mov
aaa
fbstp
mov
icebp
out
adc
adc
jns
jns
fcmovne
push
es
popf
xchg
xchg
test
shr
mov
pusha
daa
int3
call
mov
mov
sub
sbb
ins
gs
(bad)
retf
cmp
je
dec
leave
push
add
jns
cmp
mov
lock
mov
cmps
(bad)
int
icebp
and
movs
lods
imul
cmc
sub
sbb
pop
(bad)
xchg
push
out
test
add
push
inc
add
push
data16
mov
dec
add
fdivr
(bad)
xchg
into
ret
call
aaa
jae
mov
stos
xchg
adc
add
cwde
sub
cmc
out
mov
int3
or
gs
and
in
dec
cwde
and
rcl
pusha
push
ins
dec
lods
pushf
push
cmp
stos
mov
xchg
sub
imul
ds
cmps
test
lods
dec
popa
test
int3
push
jg
xor
hlt
or
ficom
inc
retf
fsubr
sub
jns
cdq
in
adc
and
in
cmp
cwde
xlat
clc
adc
icebp
pusha
mov
pushf
dec
mov
hlt
cld
mov
(bad)
aad
ret
scas
xor
push
dec
sbb
test
adc
cmc
fsubr
sub
inc
or
das
imul
xor
cmp
xchg
test
jo
aam
clc
or
pop
iret
aad
into
ret
pop
fist
outs
scas
pop
or
and
adc
ror
pop
xchg
lds
lds
fsub
or
xor
mov
not
test
scas
sbb
pop
(bad)
add
dec
call
fadd
scas
in
mov
(bad)
pop
out
aaa
jns
add
out
mov
icebp
sub
push
mov
out
sub
pop
add
push
adc
(bad)
aam
icebp
cmps
lods
enter
movs
cmp
into
xor
mov
xor
inc
aas
arpl
xchg
cmp
and
mov
popf
cmp
aam
push
loop
push
outs
and
dec
inc
in
mov
add
mov
xor
cmc
dec
repnz
clc
mov
sbb
push
cmps
in
or
inc
mov
push
and
cmp
inc
mov
in
outs
(bad)
push
xchg
hlt
and
and
sbb
mov
cli
stos
inc
out
inc
or
sub
cli
ins
sub
xchg
jl
pop
(bad)
or
push
test
push
inc
and
push
dec
call
sar
imul
sub
lock
cmc
aam
fnstenv
and
cmp
push
or
dec
aas
mov
test
out
push
movs
mov
xor
inc
and
les
xlat
xor
pushf
and
sbb
vpextrw
lds
mov
mov
mov
clc
adc
push
lea
jnp
hlt
cmp
adc
add
fmul
hlt
inc
jl
push
cli
sub
cs
jge
sbb
mov
add
addr16
es
xor
add
sti
leave
inc
je
test
out
pop
inc
ror
(bad)
pop
push
sub
scas
leave
push
neg
rol
mov
(bad)
mov
jecxz
fstp
movs
ss
dec
test
xlat
in
cmp
dec
jne
bnd
cmc
aaa
out
outs
ret
cmps
pop
cmps
loopne
fcom
mov
arpl
or
clc
lahf
mov
scas
aam
xchg
or
enter
push
pop
or
leave
mov
dec
je
test
ror
movs
mov
dec
cli
cmps
push
jp
sub
jnp
mov
mov
cmp
fsubr
rcr
push
mov
pop
call
out
ins
mov
add
and
and
cmp
popa
outs
jle
jle
xchg
inc
jmp
aam
outs
mov
pop
jns
sub
push
sub
sahf
xchg
data16
add
test
retf
xchg
ficomp
loope
sbb
ss
rol
inc
pop
retf
inc
test
or
or
out
rcl
ins
mov
fbstp
mov
xchg
mov
inc
cld
nop
mov
mov
retf
sbb
ins
jmp
push
aas
scas
xchg
inc
jnp
sub
sbb
pop
es
loope
adc
xchg
outs
movs
dec
mov
or
iret
jl
jnp
addr16
mov
cdq
sub
add
sub
push
imul
int3
fwait
jge
dec
or
jae
fidiv
repnz
sahf
jecxz
cwde
sbb
cli
ret
dec
inc
cwd
imul
or
add
push
jge
int
mov
and
jbe
dec
mov
inc
mov
(bad)
pushf
mov
test
mov
sub
cmp
cmc
pushw
into
xchg
and
inc
lods
cmp
mov
shl
pop
push
jmp
adc
sar
in
(bad)
adc
mov
cmps
loopne
inc
(bad)
outs
mov
sub
inc
and
push
scas
retf
in
cmp
lock
in
jne
xchg
add
movs
stos
aam
lods
imul
cmp
pop
fs
xor
outs
movs
stos
sub
js
xchg
jbe
push
sahf
mov
pop
inc
cli
fnsave
(bad)
mov
sbb
mov
pop
imul
jge
push
and
(bad)
mov
push
inc
fist
fsub
int3
cmp
shl
inc
inc
sbb
cmp
push
lds
jno
in
stc
and
out
ins
stc
inc
pop
push
ins
loop
xor
push
jmp
adc
test
ins
out
or
jl
clc
sub
lock
loop
(bad)
data16
cs
ret
jns
mov
xchg
loopne
fsubrp
outs
stos
push
inc
icebp
adc
cmps
push
jmp
push
cmp
mov
mov
daa
or
adc
and
icebp
repz
ins
shl
add
xor
call
push
stos
call
popa
lock
cmp
push
(bad)
stos
aaa
dec
test
mov
idiv
(bad)
mov
fiadd
(bad)
xchg
jmp
jecxz
xor
stos
mov
in
fisubr
mov
push
test
xchg
add
sbb
jge
or
inc
xor
mov
movs
adc
sbb
test
inc
inc
or
xlat
test
fdiv
dec
das
mov
dec
inc
dec
xor
jmp
cmp
(bad)
mov
pop
loop
push
fwait
mov
outs
inc
movs
adc
adc
adc
add
xchg
int3
sbb
and
mov
ins
push
mov
sub
xchg
mov
inc
push
xchg
sbb
imul
inc
aam
inc
jle
inc
and
stos
scas
cli
into
fdiv
mov
shr
imul
and
mov
int3
xchg
fs
cs
inc
adc
inc
call
(bad)
sbb
sub
push
or
sbb
push
push
shr
jp
xlat
sub
popf
sbb
data16
out
clc
inc
dec
imul
mov
sbb
xlat
jnp
int
ss
ins
push
jecxz
outs
iret
aaa
sbb
test
add
nop
xchg
out
mov
arpl
cmp
leave
fdivr
jmp
fbstp
push
ja
dec
mov
ja
fcomi
mov
out
jno
add
adc
test
pop
out
enter
xor
push
sti
js
ins
(bad)
push
dec
outs
sub
pushf
jmp
pop
popa
xor
pop
loopne
jle
mov
mov
fwait
adc
cdq
inc
push
shl
jg
dec
clc
adc
add
lock
adc
cmp
in
push
xor
scas
fs
lahf
xor
ret
push
jne
int3
sbb
aaa
cmp
stc
and
(bad)
mov
inc
adc
ret
jo
jp
jge
nop
out
retf
and
jl
sub
rcr
out
inc
out
popa
dec
jmp
pop
add
mov
mov
push
push
lahf
std
ret
std
pop
ja
sub
xor
sbb
mov
cmp
fbld
mov
jno
ret
push
xchg
iret
(bad)
mov
test
xchg
arpl
push
addr16
adc
cmp
or
js
sbb
data16
mov
or
mov
out
shr
xchg
mov
jo
icebp
xor
daa
(bad)
sahf
std
push
sub
xlat
lods
cmp
sti
loop
pop
xor
movs
add
das
or
das
in
daa
nop
push
inc
mov
push
aad
jo
mov
retfw
dec
std
add
stos
pop
mov
add
in
mov
loop
leave
in
cmp
or
loopne
pop
jl
lds
test
es
inc
fsubr
out
pop
add
aaa
clc
adc
xor
(bad)
pusha
jmp
pop
push
or
xchg
fcom
aas
arpl
xchg
test
push
imul
mov
test
popa
clc
std
or
inc
jp
mov
add
xor
es
fstp
mov
clc
pop
das
xchg
sbb
xchg
add
push
into
shl
push
into
int
push
push
mov
push
retf
or
xor
test
scas
popa
sub
fdiv
les
leave
(bad)
scas
jbe
es
stos
sahf
dec
cmp
sahf
add
sbb
les
push
fs
mov
xor
push
or
jp
rcl
(bad)
(bad)
mov
sub
retf
fndisi(8087
jmp
push
or
cmp
mov
mov
lods
call
push
and
outs
loop
daa
popf
ja
jnp
mov
cmps
pop
test
test
or
jne
pop
push
cmp
(bad)
mov
mov
push
jnp
(bad)
rcr
lock
mov
xor
mov
ja
sub
fild
xor
pushf
fcom
and
mov
add
inc
mov
inc
xchg
ss
mov
loop
xchg
mov
dec
pop
push
mov
shl
(bad)
lahf
fnsave
xor
lock
cs
aam
fiadd
scas
dec
arpl
ret
sbb
and
mov
mov
cli
popf
xor
sbb
ret
popa
movs
jle
mov
lods
sbb
push
and
aam
fild
test
or
mov
aam
add
adc
mul
jns
jg
push
pop
sub
xchg
jo
cwde
adc
nop
and
loope
dec
scas
test
inc
pop
dec
mov
rcl
xor
in
(bad)
jle
dec
sti
push
imul
and
cmp
stos
(bad)
sub
dec
test
inc
cmp
mov
jecxz
popf
ja
fmul
push
mov
lea
mov
pop
adc
mov
and
lods
mov
dec
or
nop
push
repnz
push
cmp
mov
push
jbe
out
jmp
gs
mov
jmp
jle
add
lods
call
xchg
mov
push
push
(bad)
cs
shl
push
jle
scas
sub
xchg
sub
pop
ss
jae
add
mov
cmp
add
daa
(bad)
in
rcr
gs
xchg
and
xchg
and
lock
into
jmp
daa
push
inc
in
ror
xor
dec
(bad)
jmp
or
mov
and
adc
push
push
std
sbb
inc
cvtps2pi
es
add
dec
ret
add
dec
add
xchg
popf
jle
sahf
push
cmp
adc
addr16
sar
sbb
fbld
adc
or
call
xchg
sub
shr
add
jb
inc
idiv
or
loop
push
fmul
ret
shr
(bad)
sbb
push
jmp
std
cmp
pushf
pop
mov
(bad)
cwde
out
cmc
sbb
mov
fcmovu
(bad)
jp
cmps
fbld
xor
cdq
mov
lods
or
jmp
out
push
dec
and
popa
sbb
pop
pop
inc
lock
loop
add
cmp
(bad)
and
(bad)
dec
inc
imul
cld
add
push
push
cmp
mov
mov
lock
and
rcl
ds
or
xchg
ss
xchg
sub
ins
mov
pop
test
push
push
mov
retf
mov
sub
jo
jge
mov
enter
jb
adc
jecxz
mov
jle
add
mov
enter
out
jg
dec
pusha
and
test
cs
in
cmp
lds
jnp
push
dec
pop
out
addr16
mov
mov
jb
arpl
shl
mov
fwait
stc
out
ds
cmc
stc
mov
(bad)
out
pop
aaa
or
int
push
push
test
retf
ins
inc
mov
bound
ins
imul
call
test
iret
dec
inc
retf
push
add
dec
push
pop
ins
fcom
mov
cld
xor
lahf
cmp
(bad)
or
xor
push
aaa
sti
pop
repz
std
imul
xchg
sbb
int3
fbstp
dec
cmc
(bad)
push
jae
mov
jl
pop
jmp
sti
xchg
popa
xor
mov
call
jp
mov
rol
mov
mov
or
mov
fsub
dec
xchg
mov
jg
(bad)
and
push
mov
adc
fist
xor
rcr
clc
lahf
mov
out
repz
inc
push
mov
adc
sub
mov
(bad)
jne
ret
cmp
lahf
jle
(bad)
xchg
pop
push
cdq
jb
sbb
push
lock
ds
jge
mov
mov
shl
lahf
dec
out
(bad)
jae
add
push
loop
sub
addr16
push
cmp
jge
and
or
in
jo
hlt
fbstp
sbb
fist
sub
xchg
sar
mov
sbb
imul
xchg
xor
xor
xlat
xchg
rcl
dec
mov
ss
sub
xchg
mov
movs
ficom
ss
xchg
int
mov
cmps
test
shl
retf
movs
push
js
mov
mov
mov
std
dec
inc
add
ss
add
push
ret
xor
mov
popa
adc
int
jp
in
(bad)
xchg
pop
ret
icebp
das
push
jmp
hlt
in
ret
sub
aad
test
cmp
ret
jmp
sbb
repz
push
fcmovbe
cs
xchg
pop
pop
cmps
adc
les
mov
ds
inc
xchg
cmp
pushf
cmps
or
add
pop
mov
add
push
dec
jecxz
retf
adc
les
mov
mov
in
xor
daa
jnp
dec
in
ins
and
jl
enter
pop
setb
and
call
mov
mov
dec
lods
xchg
mov
neg
add
jno
ret
lods
cld
mov
cmp
push
mov
jo
in
call
ss
mov
inc
sub
leave
das
dec
ret
push
mov
loope
sub
mov
mov
adc
cmc
xor
aad
ins
loope
test
mov
rep
pop
xchg
ret
fsubr
xor
imul
jb
(bad)
hlt
jmp
fisttp
xchg
add
leave
cmp
(bad)
lds
lock
add
fidivr
inc
and
ins
sbb
movs
mov
mov
cli
adc
mov
dec
repz
and
cmp
mov
cmp
mov
out
add
retf
cs
inc
dec
mov
sbb
outs
movs
push
inc
out
and
jne
sbb
inc
imul
mov
pop
aam
ins
cmp
cli
fbstp
rcl
out
ret
lahf
fcmovnb
ds
in
(bad)
mov
xchg
mov
mov
(bad)
jns
ficom
xchg
stc
xor
add
mov
in
sub
in
add
adc
int3
movs
shl
jnp
dec
push
push
sbb
or
int
mov
sub
aas
psrad
pop
push
cdq
call
pop
imul
mov
adc
dec
xchg
jno
xor
push
adc
sub
test
adc
mov
stc
jae
pop
rcr
push
cld
hlt
fnstsw
push
test
das
fld
mov
inc
push
call
lds
outs
ja
lock
ja
cmp
inc
or
mov
lods
lods
push
fstp
or
scas
mov
out
push
stos
sub
in
xchg
scas
sbb
mov
inc
ja
enter
pusha
xchg
lock
int
inc
dec
or
dec
adc
sbb
cmc
and
cdq
cdq
sbb
lds
ret
mov
inc
sub
cmp
loopne
pop
inc
jo
mov
or
sbb
aaa
or
(bad)
mov
push
(bad)
push
or
inc
mov
add
mov
push
sub
ds
push
inc
mov
dec
xor
pop
sub
or
mov
xchg
sbb
or
jns
or
sbb
sbb
div
jns
or
push
(bad)
(bad)
aam
mov
mov
cmp
dec
jmp
push
loopne
cli
dec
addr16
ret
ret
lds
ret
fldcw
add
dec
imul
mov
xor
sub
stos
aas
pop
adc
cmc
sub
addr16
ss
sahf
adc
cwde
retf
int
pop
dec
xor
xor
sub
inc
cmp
ret
rcl
mov
pop
sbb
daa
neg
mov
adc
out
rcl
(bad)
push
clc
jae
sub
jbe
stc
inc
bound
bound
sbb
sbb
mov
in
jp
xchg
sub
or
in
and
jge
pop
je
mov
ror
loope
cmp
leave
je
call
enter
addr16
xor
ret
xchg
jns
jmp
cmp
pusha
out
sub
inc
fldenv
xor
push
jmp
cdq
loop
(bad)
cld
retf
and
or
push
and
pop
lahf
push
mov
xchg
cmp
inc
xor
inc
pop
imul
pop
push
dec
popf
addr16
jle
xchg
in
xchg
sahf
sar
jne
cwde
stc
out
cmp
xlat
test
bound
sbb
jo
ret
into
fidivr
stc
addr16
inc
mov
cmp
and
lds
mov
retf
cdq
out
fwait
mov
pop
push
sub
ret
add
scas
dec
call
in
dec
push
pop
retf
in
jl
pop
shl
lfs
cmp
int3
adc
out
or
pop
repz
daa
div
div
inc
cmc
xchg
gs
pop
fstp
mov
std
aad
sbb
shl
fist
rcl
mov
and
pop
ins
sbb
popf
or
jge
xor
aaa
xor
or
clc
dec
imul
add
(bad)
xchg
dec
xor
(bad)
std
int
in
adc
and
pop
mov
pop
cs
cmp
loop
cmp
(bad)
jnp
std
enter
shl
xchg
mov
mov
(bad)
xor
or
and
daa
cmp
mov
jno
jns
sub
in
in
push
inc
out
pop
adc
sub
sub
aad
mov
popa
aas
add
daa
cmp
test
cli
ss
out
(bad)
shl
test
xchg
inc
lahf
jge
movs
xor
lock
ins
jle
push
out
dec
pop
mov
xchg
push
es
test
push
shl
clc
test
int
in
and
retf
adc
ror
dec
push
lds
fs
or
push
hlt
jl
push
sbb
xor
stc
jge
sbb
in
mov
cmps
das
clc
pop
cmps
mov
cmps
mov
adc
inc
hlt
out
push
fstp
jbe
movs
scas
loopne
adc
mov
call
jmp
mov
fcomp
push
push
dec
jmp
bt
repz
mov
add
xchg
mov
call
aam
push
sbb
in
push
sbb
aam
cmp
inc
pop
enter
lods
jns
out
fnsave
xchg
mov
repnz
jns
stos
fadd
mov
movs
push
mov
mov
arpl
xor
adc
cmp
movs
scas
push
pop
jbe
and
inc
jne
push
out
inc
popa
sbb
je
ds
mov
jno
ret
bound
leave
imul
inc
in
stos
jmp
fist
lahf
adc
xor
movs
inc
or
imul
or
push
mov
pop
das
add
jg
stc
movs
mov
mov
adc
jg
js
xchg
inc
fdivr
popa
fldenv
jecxz
adc
lods
sbb
loop
pop
mov
dec
add
shl
imul
jb
and
dec
xchg
adc
or
call
and
sub
or
mov
push
push
xchg
sbb
dec
mov
adc
sub
(bad)
(bad)
out
jne
pop
pop
sub
pop
dec
sahf
cmp
add
mov
sbb
gs
mov
push
dec
cmp
nop
scas
ret
(bad)
(bad)
and
mov
adc
mov
add
dec
(bad)
sbb
in
sbb
outs
inc
mov
popf
jmp
fcmovne
adc
add
outs
cdq
imul
imul
inc
pusha
xor
xchg
inc
mov
lea
jo
stos
pop
xor
dec
jb
jb
inc
and
adc
std
test
aad
jmp
imul
ret
nop
fimul
sbb
aad
and
mov
and
jae
mov
repz
inc
mov
pusha
or
rcl
xchg
xchg
or
adc
add
and
mov
mov
stos
pop
fild
jecxz
sub
dec
lock
or
ret
in
lock
leave
fnstsw
or
mov
cmps
fstp
and
cld
(bad)
fimul
in
jg
dec
push
mov
dec
loopne
mov
(bad)
and
and
inc
push
fsubr
or
xlat
inc
adc
pop
mov
mov
ins
or
(bad)
enter
mov
push
push
and
or
hlt
loope
xor
jmp
cld
sub
push
lock
(bad)
data16
clc
pushf
pop
push
and
aaa
rol
inc
xchg
fwait
pop
push
fs
or
add
(bad)
imul
sub
inc
mov
loop
call
fdivp
dec
ins
mov
jmp
lds
fsqrt
mov
in
hlt
(bad)
jp
pop
mov
sbb
sbb
xor
sbb
pop
pop
xchg
out
dec
xor
repnz
cmp
or
add
add
jecxz
pop
or
xor
dec
mov
loopne
pop
mov
push
adc
add
xchg
retf
xor
or
fisub
iret
scas
pop
movs
inc
cmp
fwait
mov
push
jl
sub
into
adc
mov
inc
sub
cmps
dec
leave
or
int3
and
shl
mov
inc
xor
lahf
adc
mov
jecxz
outs
or
xchg
dec
xor
(bad)
aam
outs
loopne
cmp
lahf
xor
das
xor
imul
lock
hlt
sbb
cmp
jne
cwde
mov
leave
cmp
cwde
mov
jle
adc
sbb
mov
mov
stc
ret
int3
xor
mov
pop
ss
push
out
cmp
and
mov
test
pop
das
and
add
nop
popf
sub
ins
repnz
sbb
ret
xor
sbb
fs
js
icebp
fidiv
imul
sub
pushf
mov
cmp
arpl
mov
mov
and
mov
inc
scas
inc
mov
xchg
sub
loope
sub
aaa
icebp
das
push
loope
stc
outs
popa
sahf
dec
dec
int3
cs
cmp
scas
sub
inc
push
popf
sbb
mov
(bad)
mov
fisttp
mov
cwde
repz
retf
add
pusha
adc
shl
xor
imul
push
mov
push
cs
cwde
js
push
ror
loopne
sbb
ret
out
jns
shr
and
mov
addr16
xor
adc
aam
out
loopne
call
daa
mov
mov
cdq
outs
repnz
mov
push
jbe
pop
inc
sub
sub
sbb
retf
ret
lea
adc
rcr
mov
pop
fld
sbb
and
std
aad
sub
cmp
cld
xor
stc
in
jbe
mul
mov
mov
lds
inc
repz
add
and
and
mov
lods
pop
mov
and
int
stos
jae
or
or
mov
cli
aad
dec
sbb
aad
jg
(bad)
mov
mov
xor
imul
repnz
xchg
push
xor
ins
cld
mov
push
aas
outs
std
xchg
xor
xor
mov
loopne
(bad)
retf
mov
mov
icebp
inc
and
int
inc
hlt
pop
pop
jecxz
shr
ret
push
xlat
sti
jg
dec
jg
(bad)
cmp
pop
mov
leave
shl
loopne
xchg
jo
jg
loope
and
add
cmc
adc
or
push
pop
push
add
or
les
push
xchg
sahf
imul
sbb
inc
lds
pop
push
std
lea
or
fadd
inc
loope
ror
pop
mov
sbb
push
sbb
stc
and
and
jmp
dec
adc
inc
jmp
(bad)
shl
inc
push
or
cmps
xchg
xchg
imul
add
popa
(bad)
and
adc
push
ds
jmp
push
xchg
or
push
aas
rol
adc
(bad)
or
es
xchg
xlat
movs
(bad)
iret
inc
pop
lods
popf
pop
lds
mov
ror
std
aam
ret
mov
imul
sub
pop
mov
std
gs
dec
sub
cli
xlat
ss
mov
dec
cld
les
sti
popa
pop
sti
sub
add
mov
xchg
mov
cmps
push
imul
mov
jge
dec
ret
xchg
pop
push
push
sbb
inc
or
add
aam
adc
add
loop
sar
mov
cvtps2pd
jle
cs
leave
popf
add
dec
or
ror
movnti
xchg
iret
mov
cmps
xchg
out
mov
mov
(bad)
(bad)
adc
ins
leave
jl
sub
out
leave
or
pop
pop
jo
(bad)
push
and
fstp
pop
xchg
or
in
pop
inc
lahf
enter
rol
pop
xchg
outs
inc
jle
mov
div
in
fstp
sbb
mov
dec
or
ret
(bad)
pop
push
sbb
jmp
shl
cli
pop
xchg
daa
fs
and
es
adc
push
leave
mov
ins
add
mov
sti
or
imul
fs
je
jl
xchg
pop
clc
test
ror
out
out
ins
in
jnp
in
fsub
dec
fwait
xchg
outs
ins
inc
mov
pop
mov
add
loopne
add
adc
sbb
stos
clc
repz
stos
sub
cmp
pop
jecxz
mov
jge
mov
sub
jno
stc
retf
cmp
mov
out
movs
cmp
por
add
xlat
das
push
cld
lods
push
xchg
cmc
rcr
add
push
jno
dec
pop
xchg
les
xor
out
sub
(bad)
mov
(bad)
push
xchg
cmp
mov
leave
call
cmp
xchg
das
mov
mov
mov
mov
and
pop
sar
fsubrp
mov
(bad)
cwde
push
cmps
shld
cmps
sub
mov
jg
xchg
dec
repnz
mov
ret
jecxz
and
aas
mov
jl
repz
xor
add
sub
cmp
sbb
sbb
mov
and
inc
retf
sbb
dec
jns
sbb
repz
jmp
mov
faddp
les
mov
retf
jmp
icebp
inc
push
mov
js
arpl
xchg
pop
jbe
leave
pop
jno
cmpps
inc
push
aaa
sbb
sbb
push
out
jg
add
jmp
jg
push
mov
jnp
mov
lea
adc
xchg
or
cmp
fucomip
inc
(bad)
fld
rol
mov
jnp
ret
lds
test
xchg
pop
stos
mov
movs
push
push
dec
fld
pop
shl
xchg
cli
fnstsw
mov
cwde
pop
lock
xor
mov
mov
out
push
lds
inc
(bad)
mov
ins
leave
ja
dec
push
cmp
sbb
rcr
mov
mov
mov
shl
jns
out
mov
stc
out
cmp
xchg
dec
inc
out
or
sbb
xchg
dec
push
shl
sbb
arpl
mov
push
inc
jbe
iret
mov
sub
cmp
je
mov
gs
ficomp
jnp
test
push
dec
jmp
clc
stc
mov
inc
dec
scas
inc
adc
popa
pop
push
in
xchg
lds
addr16
mov
mov
stc
test
int3
push
mul
xor
and
push
or
mov
stos
cwde
dec
sub
ss
scas
inc
dec
iret
sbb
mov
test
shufps
jns
bnd
jecxz
std
mov
std
test
push
or
or
adc
bound
cmps
test
mov
int
in
cmp
cdq
mov
add
sbb
out
(bad)
cld
call
repnz
inc
stos
mov
in
(bad)
mov
lea
or
test
data16
ret
test
or
pop
cld
arpl
(bad)
std
xchg
int3
jge
out
jb
clc
test
push
mov
loopne
push
cld
in
jge
jl
inc
add
int3
test
not
adc
pop
push
mov
push
mov
inc
fcom
jns
mov
push
add
mov
xchg
and
xchg
sub
pop
inc
pop
out
jmp
jmp
dec
cmp
test
std
out
and
pop
mov
jl
mov
push
push
dec
pop
add
adc
test
lea
hlt
lods
or
shr
mov
fbstp
(bad)
jns
dec
jle
add
cwde
xchg
fidivr
sub
(bad)
mov
dec
hlt
add
adc
mov
ins
hlt
push
dec
enter
cld
cwde
out
out
outs
popf
mov
je
in
pushf
loopne
pop
imul
fwait
dec
add
icebp
xor
push
or
into
pusha
push
clc
sub
fdivr
in
cmc
jmp
into
sub
fwait
adc
inc
and
and
mov
popa
test
push
rcl
call
mov
xchg
jecxz
bound
out
mov
or
loop
push
(bad)
jecxz
cmp
imul
jmp
test
pop
cmc
xchg
call
mov
xchg
fwait
xchg
pop
xor
dec
icebp
bound
add
pop
cmp
mov
xor
jmp
push
push
test
and
mov
sub
outs
jno
dec
or
mov
in
das
and
or
mov
call
stos
pop
repnz
sub
xchg
fstp
mov
rol
sbb
push
jmp
pop
cmps
pop
cmc
inc
ret
cmp
loope
call
xchg
mov
in
dec
sub
js
(bad)
jl
fwait
cmps
je
and
sub
shr
dec
bound
popa
data16
lock
and
add
add
shl
rol
dec
fdivp
fldcw
pop
sbb
mov
push
retf
sub
push
js
iret
xor
pop
mov
movs
data16
in
push
lock
cmp
je
push
xor
cmp
add
in
lock
sbb
mov
js
into
add
mov
sub
push
xchg
stos
ins
loopne
sub
enter
les
test
inc
and
mov
mov
mov
mov
popf
adc
loop
xchg
pop
sub
sbb
dec
test
and
jmp
fidivr
pop
cdq
or
in
xor
jbe
mov
pop
sub
outs
fwait
xchg
das
test
jg
in
mov
sbb
inc
pop
jbe
mov
sar
xor
mov
jno
pop
aam
push
in
out
es
cmp
pushf
xchg
or
adc
fisubr
pop
xchg
jmp
aas
test
int3
pop
out
pop
cld
fisttp
inc
dec
xchg
iret
into
repz
ds
mov
addr16
(bad)
aam
cli
je
and
or
loop
mov
aaa
mov
dec
imul
lea
mov
xor
sbb
xchg
inc
mov
in
movs
sbb
test
outs
sbb
sbb
and
leave
fisttp
jno
mov
add
sbb
dec
sub
call
jle
leave
jne
(bad)
pop
xor
icebp
jne
jl
retf
ins
jnp
nop
in
adc
xchg
out
pop
mov
adc
mov
sub
dec
sub
cmps
jb
sahf
push
xchg
mov
shl
inc
sbb
fcmovne
aad
xchg
mov
cmps
mov
pop
sti
movs
or
mov
and
out
mov
dec
hlt
retf
rcl
loopne
test
mov
and
in
or
dec
sub
sub
imul
jmp
imul
sbb
sbb
dec
popa
jno
cmp
popf
fist
cs
int3
fnstcw
push
xchg
mov
(bad)
loope
mov
sbb
add
pop
adc
movs
imul
fcom
xchg
fdiv
inc
push
jmp
fs
inc
mov
push
mov
mov
push
stos
push
jmp
xchg
(bad)
loop
bound
sub
(bad)
cmps
xor
push
(bad)
jle
leave
dec
das
aaa
sub
sub
leave
fst
call
inc
push
int3
scas
stos
pusha
(bad)
mov
dec
js
and
sub
ds
add
(bad)
xor
pop
fcmove
das
std
movs
gs
or
cmp
std
movs
sub
arpl
lods
fistp
push
pushf
dec
xor
je
aad
and
mov
imul
jns
or
lods
scas
mov
xchg
fcomp
fstp
and
loop
pop
js
(bad)
push
fist
jbe
dec
mov
rol
sub
adc
daa
mov
sub
popf
mov
outs
mov
mov
loopne
and
ret
and
mov
adc
repz
xor
jecxz
fidivr
dec
jae
shl
movs
in
out
(bad)
mov
add
pop
(bad)
das
aas
aaa
sub
sub
push
outs
sar
mov
(bad)
rcl
bound
xlat
and
dec
cmc
rol
(bad)
fld
fisub
lods
adc
jmp
ret
nop
(bad)
jno
adc
outs
mov
jmp
scas
or
jp
icebp
jns
and
arpl
adc
fnsave
and
retf
leave
jmp
test
adc
pushf
jb
lea
xor
movs
iret
pushf
pop
imul
lds
push
mov
jo
mov
stc
dec
mov
outs
inc
shl
retf
or
xlat
cld
fcom
xchg
jae
push
bnd
xor
popf
mov
push
imul
in
jb
fimul
aam
movs
fild
inc
call
xchg
mov
(bad)
and
jne
in
in
fs
push
jg
and
inc
cmp
sub
repz
or
pop
jns
nop
loop
lock
test
lods
jle
fcos
dec
jge
je
lea
out
gs
push
imul
pusha
cmps
pop
adc
cld
scas
jns
xor
cld
loop
push
sub
mov
cmp
mov
aam
enter
arpl
aad
mov
test
ror
inc
dec
ret
push
sbb
out
or
imul
dec
inc
or
ss
pop
enter
jg
sar
stos
xor
mov
pop
xor
loopne
inc
neg
xor
(bad)
imul
sub
inc
push
xchg
jmp
call
xor
add
lds
int
pop
add
jae
pop
inc
jo
adc
fld
xchg
adc
fstp
sbb
xor
sbb
cmp
pop
mov
pushf
cmp
mov
call
mov
les
sbb
aad
adc
jl
sub
mov
out
fdivr
sbb
mov
cmp
push
mov
mov
rcl
enter
xor
repz
push
and
jmp
sti
mov
adc
sbb
inc
mov
xchg
mov
outs
iret
repnz
fbld
sbb
push
les
cmp
rcl
inc
aad
adc
push
pop
loope
bsr
daa
sub
nop
push
scas
call
fsub
fidiv
dec
call
add
rcl
sub
call
mov
jge
stos
rcr
mov
push
xchg
dec
or
outs
sbb
sbb
out
cmps
inc
leave
arpl
int3
pop
push
or
fiadd
xor
in
into
mov
(bad)
outs
and
push
and
dec
mov
push
pop
fisubr
outs
and
adc
pop
out
push
pop
sbb
xchg
or
cli
cmp
in
out
pop
popa
xchg
mov
out
adc
cmp
ret
retf
mov
adc
inc
adc
sbb
xchg
lds
push
jb
push
mov
push
inc
and
fstp
mov
inc
mov
in
xor
add
out
in
pop
or
pop
shl
ss
mov
inc
sar
ficomp
(bad)
mov
xchg
and
mov
mov
mov
cmp
xchg
adc
pop
or
jne
mov
jecxz
(bad)
iret
in
mov
js
or
sbb
push
sbb
out
sbb
mov
inc
mov
mov
mov
sub
or
or
inc
mov
inc
sub
sub
sub
xor
mov
xor
sub
aaa
out
fcomp
stc
pop
mov
pop
mov
in
test
inc
jne
sti
cmp
test
int3
push
outs
stos
es
fistp
push
inc
movs
pop
push
ins
mov
aad
aad
jle
fst
fisubr
fisttp
bound
test
push
aad
mov
cwde
xchg
rol
or
xchg
jge
pop
jnp
xchg
das
or
cs
cmp
pop
inc
push
icebp
sar
sub
pop
hlt
jns
pusha
mov
jnp
loopne
xchg
mov
push
cwde
and
cwde
jbe
fs
fisub
push
jle
mov
sti
les
gs
fldcw
out
mov
push
cmp
inc
(bad)
nop
pop
xchg
out
push
bound
pop
daa
cs
dec
test
inc
addr16
mov
repnz
popf
fnstsw
sbb
mov
inc
cmp
jecxz
inc
repnz
cdq
and
sub
jno
fist
ss
add
ins
push
jae
or
mov
jne
pop
call
pop
stos
test
test
mov
test
loope
jl
pop
out
mov
push
sub
in
jl
dec
test
dec
sbb
ja
(bad)
pop
sbb
fdiv
aaa
push
mov
and
retf
mov
nop
cmp
jl
xchg
mov
dec
sub
test
adc
sbb
mov
add
xor
mov
in
hlt
pop
into
ja
jle
hlt
mov
iret
mov
mov
shr
nop
mov
aas
cwde
cwde
jecxz
frstor
popa
jle
pop
and
loope
lock
ss
push
jge
add
and
adc
ss
sub
pop
lock
int3
or
imul
pop
push
icebp
or
jno
sbb
jae
and
inc
loope
cmp
cmc
mov
je
ins
sub
aad
jge
call
rcl
inc
sbb
mov
jp
or
hlt
or
jle
jecxz
into
out
jo
inc
xchg
sbb
or
nop
mov
dec
sub
xchg
push
int3
sbb
lods
and
bound
std
(bad)
ffreep
lods
leave
dec
cmp
sub
adc
cmp
and
or
pop
shl
call
enter
inc
gs
test
repnz
stc
call
arpl
cmp
fs
fs
mov
inc
clc
push
aam
inc
(bad)
or
les
sbb
aas
(bad)
push
ins
(bad)
adc
loop
outs
mov
add
sub
dec
mov
nop
arpl
jp
in
mov
ret
adc
jbe
and
icebp
scas
ret
repz
add
cmp
and
imul
aam
outs
sub
lds
sar
pop
jo
xchg
fild
je
push
into
bound
pop
popf
sar
push
sub
in
mov
mov
sar
test
pusha
dec
out
mov
fisubr
in
ja
retf
sbb
jecxz
inc
dec
mov
jbe
adc
cmc
jbe
and
and
jnp
bound
pop
hlt
push
outs
cdq
sub
cmp
(bad)
(bad)
mov
push
pop
out
push
in
mov
add
mov
push
enter
(bad)
popa
aaa
pop
xor
cmp
not
mov
clc
rcl
lods
and
test
rcl
xchg
mov
inc
inc
cld
xor
sahf
pop
mov
pushf
adc
fstp
and
inc
retf
sbb
aas
cld
jmp
inc
and
loop
add
mov
mov
(bad)
sti
inc
xchg
jns
shr
mov
fdivr
(bad)
loope
cvtps2pi
fmul
cmc
xor
es
add
jge
lods
mov
push
mov
xchg
pop
push
and
fwait
mov
dec
sahf
inc
popa
mov
mov
sbb
daa
aam
ins
mov
push
(bad)
and
in
stc
pop
jo
cwde
inc
push
and
je
mov
pop
pushf
ss
aad
xchg
aam
or
or
cli
dec
rol
shl
in
enter
xor
cmps
ins
adc
stos
inc
enter
cmp
fstp
cmp
(bad)
mov
das
inc
lods
add
aas
loope
mov
add
pop
adc
mov
xchg
fs
jmp
aam
(bad)
pop
adc
add
inc
nop
pushf
xor
sbb
pop
xor
int
adc
xchg
(bad)
test
shl
in
test
das
add
div
fidivr
int3
les
mov
stc
bound
xchg
push
adc
xchg
lods
aaa
rcr
sub
outs
retf
repnz
test
pushf
test
xlat
sbb
mov
mov
mov
jbe
adc
(bad)
jge
or
scas
aam
pop
ins
mov
pop
bound
xor
mov
out
dec
stc
dec
cmp
inc
cs
sbb
or
xchg
rol
mov
mov
push
dec
cmps
mov
pushf
je
add
mov
ds
xor
push
(bad)
add
and
mov
lock
xchg
push
clc
mov
adc
push
xchg
mov
xchg
sbb
cmp
loope
push
mov
out
add
sub
imul
pop
push
in
pushf
outs
iret
pushf
out
iret
jbe
pusha
mov
jg
imul
inc
jp
js
nop
cmp
adc
div
xor
ds
shl
or
cmp
xchg
iret
sbb
xor
mov
inc
mov
mov
outs
leave
jp
into
(bad)
repz
and
push
repz
lods
inc
jl
loope
push
inc
retf
sub
dec
push
push
xor
inc
pop
(bad)
xor
mov
pop
movs
retf
pop
(bad)
(bad)
push
dec
lock
or
not
push
pop
into
jb
imul
and
sub
mov
jg
xor
jmp
pop
push
fwait
push
xchg
push
fbld
out
sbb
adc
mov
and
pop
adc
dec
mov
inc
mov
jne
cs
fwait
add
adc
add
push
inc
mov
or
iret
or
ret
cs
jmp
cdq
sub
mul
call
mov
shr
xor
out
jle
sbb
mul
xor
ret
mov
retf
inc
mov
xlat
cwde
out
cmp
int3
cmp
push
add
sahf
push
test
sar
hlt
aad
lahf
out
das
mul
mov
mov
cmps
dec
adc
xchg
mov
lahf
sub
mov
xchg
push
daa
sub
(bad)
iret
fimul
xor
retf
push
xchg
jno
mov
ret
lods
jbe
movs
test
cli
inc
cmp
and
fldcw
and
dec
jl
lock
out
inc
mov
jo
scas
fst
mov
test
mov
loope
(bad)
les
pop
test
loope
dec
sub
mov
test
push
pushf
ss
xor
xchg
jo
cmp
dec
ret
add
fidivr
scas
inc
xor
es
push
loop
adc
fwait
repz
cmp
cmc
mov
sbb
fs
(bad)
mov
mov
repnz
(bad)
adc
ret
fs
xchg
mov
out
pop
jmp
cmp
div
out
cmp
mov
xor
inc
push
sbb
mov
ins
sub
lods
(bad)
inc
mov
add
sahf
cmc
daa
call
push
daa
fwait
ret
fld
sub
cli
sar
nop
jecxz
ja
(bad)
ins
rcr
imul
pop
and
xchg
pusha
sub
(bad)
and
or
mov
sub
ins
imul
jge
xchg
lea
push
jl
sbb
dec
jns
bswap
mov
or
inc
and
sub
pusha
pop
mov
lods
mov
cmps
xor
mov
arpl
jb
mov
lods
test
iret
sahf
and
test
xchg
mov
aas
sub
xor
mov
pop
cli
bound
retf
and
imul
push
popa
ret
fimul
and
inc
mov
xchg
fucomi
or
mov
shl
jno
mov
enter
ret
stos
add
sub
mov
repz
pop
mov
pop
outs
sub
jnp
retf
aas
cmp
or
and
sti
mov
into
xlat
add
icebp
mov
pop
(bad)
inc
mov
or
cmp
jns
outs
cmps
add
mov
repnz
icebp
cmps
imul
sbb
xchg
pop
(bad)
push
jno
inc
xor
shl
aas
adc
enter
hlt
clc
push
std
mov
pop
adc
mov
mov
xchg
pop
push
test
lahf
mov
adc
or
adc
dec
jne
adc
mov
adc
rcr
adc
lock
mov
xor
dec
ja
xchg
dec
sub
repnz
or
or
push
leave
mov
cmp
adc
mov
xchg
jo
es
push
sub
loop
dec
inc
xor
call
jl
popf
sbb
(bad)
das
(bad)
sar
dec
jbe
js
stos
loop
fdiv
(bad)
mov
xchg
xor
or
jae
aaa
sub
arpl
cwde
fs
cmp
mov
push
jmp
xor
in
cwde
retf
es
lar
push
outs
adc
ins
hlt
scas
into
test
loope
jmp
lea
pop
xor
mov
pop
mov
retf
scas
cmp
ret
hlt
icebp
inc
and
dec
adc
jae
push
(bad)
stc
dec
pop
loopne
mov
xlat
cmc
dec
int3
push
(bad)
sub
dec
xchg
test
push
xchg
(bad)
mov
jmp
jge
mov
push
sti
loop
das
lods
(bad)
push
das
cmp
aaa
pop
(bad)
xchg
retf
and
or
dec
mov
cmp
mov
fiadd
dec
ds
push
add
rcl
cwde
stos
jmp
mov
push
xchg
dec
int
pop
in
(bad)
out
add
sbb
enter
dec
jge
or
fistp
add
mov
nop
jns
sub
xor
jp
rep
cs
stos
or
jno
bswap
imul
sti
out
jmp
sub
push
iret
(bad)
in
sbb
dec
dec
cdq
add
pop
retf
ret
inc
push
push
ror
mov
neg
mov
in
xor
imul
or
in
stos
repz
or
xchg
paddusb
lods
aas
(bad)
in
sti
inc
dec
push
(bad)
(bad)
clc
sti
inc
mov
ins
adc
out
loopne
scas
xchg
sbb
ror
shl
ss
shl
enter
sbb
mov
iret
fsin
jbe
outs
dec
cmp
xchg
sti
and
cmps
sbb
cwde
es
xor
add
test
jb
xor
jmp
xlat
mov
mov
retf
mov
pop
test
scas
cmp
mov
daa
loopne
inc
pop
or
xchg
enter
lods
shr
std
cmp
xor
or
aad
sbb
ins
pop
jns
es
lds
cli
movs
in
(bad)
fistp
fisubr
xor
data16
mov
sar
data16
div
les
push
in
pop
sbb
fisubr
(bad)
(bad)
nop
cmp
adc
scas
dec
dec
mov
push
inc
sub
sub
pop
into
or
retf
xchg
inc
jg
in
mov
xlat
sbb
int3
stc
mov
mov
jmp
add
iret
in
push
push
dec
(bad)
fistp
mov
jmp
pop
adc
cmc
push
push
fs
stos
ds
add
jo
ret
cmp
adc
sub
add
add
add
mov
pop
push
sub
(bad)
jae
je
test
movs
call
mov
mov
inc
sub
inc
jle
mov
call
shl
mov
mov
adc
dec
push
loop
inc
dec
xor
test
push
mov
int3
jb
xor
retf
sbb
out
pop
push
xchg
push
sub
js
mov
and
aad
sub
rcl
sub
jno
sbb
clc
add
popf
call
pop
outs
inc
adc
push
jp
dec
mov
xchg
jle
jmp
xlat
ins
das
push
xchg
mov
or
push
ds
jmp
add
arpl
jle
xor
or
popf
pop
sahf
scas
aad
not
das
push
jl
lock
idiv
out
pop
push
mov
xchg
inc
call
mov
(bad)
adc
add
int
inc
fwait
daa
fsub
xlat
dec
mov
pusha
std
pop
rcl
daa
fs
adc
sbb
push
addr16
(bad)
out
xchg
adc
out
dec
lods
shl
in
dec
dec
gs
jle
push
int3
in
xor
scas
cmp
aad
shl
inc
or
in
jmp
aam
fnstsw
jne
add
popa
lock
sub
fadd
add
test
not
aad
daa
loop
inc
xor
shl
sub
push
loopne
shl
dec
push
add
and
mov
arpl
scas
jecxz
lods
lods
push
and
out
mov
and
add
adc
leave
lods
and
fld
xchg
fimul
out
pusha
fidiv
adc
aaa
add
neg
fild
lahf
aad
ins
xchg
ror
pop
aam
(bad)
scas
adc
inc
xchg
or
imul
pop
sub
int3
rcr
aas
lods
stos
or
adc
je
imul
dec
adc
out
sti
inc
cmp
push
sub
in
adc
and
sub
push
push
sub
retf
shr
iret
fsubr
iret
or
push
mov
xor
cld
loop
fs
and
neg
cmp
cmp
xor
iret
sbb
add
push
xor
shr
cs
push
push
pushf
ror
pop
push
gs
ret
test
movs
and
jbe
xchg
xchg
cmp
push
xchg
test
push
push
(bad)
lock
loope
imul
or
sbb
mov
in
test
sbb
dec
imul
cs
hlt
(bad)
push
mov
jb
lds
dec
ficomp
cmp
fs
fild
pop
fisttp
adc
mov
sbb
pop
enter
cli
add
inc
popa
xlat
pop
mov
add
jnp
push
sub
nop
jo
jmp
test
shr
adc
xchg
inc
cmp
jp
xor
lods
call
jnp
ins
jl
jne
sar
xor
repnz
cmps
push
mov
jb
in
jecxz
or
sub
pushf
(bad)
aas
inc
cld
cmc
jg
adc
pop
sub
mov
xchg
cmc
popf
jno
test
repz
or
lea
adc
sub
dec
pop
call
out
aas
sahf
shr
aad
or
adc
sub
mov
mov
sub
or
xor
cmp
jl
dec
xchg
dec
call
sub
jne
std
or
gs
nop
push
int3
pusha
sub
jmp
lods
xchg
adc
and
add
lods
gs
jp
lods
xor
add
adc
(bad)
adc
imul
mul
ret
clc
icebp
in
ss
mov
fimul
fisubr
and
repz
(bad)
push
out
das
cmp
shr
sub
cdq
pop
fisttp
push
lods
into
pop
xchg
lds
add
lea
xchg
xchg
xchg
pop
xrelease
mov
xor
xchg
dec
call
daa
jo
inc
dec
(bad)
out
mov
ret
fsub
or
sbb
aaa
fs
pop
sar
dec
das
xor
jmp
nop
mov
cs
fcomp
popa
enter
fdiv
pop
inc
std
or
sahf
test
mov
jp
(bad)
daa
(bad)
loope
sbb
movs
bound
inc
test
popf
sub
lock
adc
mov
int
imul
cmp
in
xlat
adc
jne
push
push
jmp
xchg
mov
pop
into
add
mov
call
fcmovbe
push
aam
stos
ja
add
js
dec
push
repnz
(bad)
or
pop
cmp
cmp
pop
xchg
pop
mov
sub
test
push
mov
xchg
aaa
bound
div
jmp
inc
pop
adc
loopne
(bad)
jle
pop
push
mov
add
mov
mov
inc
mov
mov
push
dec
or
add
sbb
shl
pop
add
push
mov
or
push
loope
add
fisub
sbb
sub
test
out
(bad)
call
pop
cmps
pop
mov
in
movs
scas
dec
data16
inc
mov
and
mov
jmp
xor
xor
movs
fst
jo
or
call
cmp
mov
lds
xchg
jo
mov
das
(bad)
lea
(bad)
out
adc
call
std
inc
adc
(bad)
fist
dec
outs
and
mov
cmp
mov
pop
cmc
sbb
pop
ret
adc
ja
and
sub
mov
pop
add
lods
push
cdq
jge
adc
fiadd
jb
in
fsub
int3
add
in
jl
or
xor
mov
test
adc
(bad)
dec
movaps
xlat
mov
mov
in
js
call
pop
cmp
mov
or
and
test
and
fst
(bad)
mov
adc
fimul
mov
pop
mov
or
adc
sub
movs
fldenv
and
out
xor
jae
test
jnp
xlat
and
and
popa
cwde
sub
mov
adc
lods
mov
and
mov
loopne
hlt
ret
push
cmp
in
pop
add
push
mov
add
jp
ins
jge
or
lods
into
and
aad
dec
jno
sahf
mov
popa
adc
outs
fdiv
sbb
and
ja
sbb
mov
loope
fild
mov
xchg
push
mov
ds
push
mov
dec
pusha
aaa
sbb
jnp
stos
sbb
sub
test
pop
sub
and
bound
sub
out
add
adc
sub
xor
jp
adc
retf
dec
push
sbb
mov
mov
cli
xchg
jp
ficom
sub
pop
fmul
adc
mov
adc
dec
aas
add
push
lods
cdq
lods
xor
out
and
jg
(bad)
in
mov
out
xor
outs
and
dec
xlat
dec
pop
jl
scas
push
daa
sbb
mov
jge
call
pop
xor
stos
mov
mov
or
loope
xchg
push
scas
(bad)
xor
add
mov
jmp
mov
push
loopne
in
movs
add
mov
pop
cmp
and
pop
ja
cmps
or
pusha
test
cdq
xlat
icebp
jmp
and
and
jnp
(bad)
cli
mov
push
rcl
jne
add
or
inc
mov
mov
mov
cmps
mov
aam
mov
mov
in
or
test
(bad)
aad
lahf
pusha
in
lds
xchg
out
out
retf
cdq
cmp
dec
in
adc
mov
cmps
pop
aaa
and
push
mov
pop
pop
inc
test
call
loopne
fimul
xchg
scas
dec
dec
jmp
or
jbe
addr16
outs
cmp
ror
inc
sbb
jge
sub
adc
push
out
je
addr16
aas
cld
or
stc
lods
ds
sbb
mov
fwait
add
jo
jle
ficom
inc
jo
mov
xor
int3
in
jb
mov
(bad)
mov
cmp
inc
scas
std
rcr
lahf
lea
jmp
push
nop
add
inc
ret
mov
lods
cmp
call
fnstsw
xor
enter
jmp
imul
retf
xor
inc
cmp
fs
sahf
jb
test
sub
pop
pop
cmps
inc
nop
(bad)
jbe
dec
fs
mov
sub
and
add
mov
push
mov
ins
and
cs
cdq
fcmovnb
dec
or
fmul
fwait
sahf
push
mov
push
or
or
xchg
fdiv
sahf
je
and
inc
xchg
out
lods
adc
sbb
sbb
shr
pop
jo
jmp
jnp
sbb
repz
inc
jmp
cli
ficom
cld
add
mov
cdq
add
xor
rcl
and
jo
add
cmps
or
dec
icebp
jecxz
cli
ja
inc
jnp
cmp
inc
push
mov
shl
cli
jge
cmp
shl
(bad)
fmul
lods
xchg
xchg
mov
mov
cli
mov
mov
adc
xchg
pop
ret
dec
fsub
jg
lods
push
xor
daa
sub
or
and
cmp
aas
sahf
and
push
out
sbb
lods
fcmovnbe
in
sub
pop
pop
lahf
std
pop
sbb
sbb
mov
test
mov
je
test
jne
test
call
and
dec
pop
dec
aam
adc
int
add
frstor
inc
ret
fcom
out
rol
mov
jns
cli
fs
sti
addr16
jns
jmp
mov
pop
cli
mov
lods
adc
fnstsw
fcom
and
fs
ins
inc
mov
je
xchg
sbb
jp
lahf
rcl
shr
int3
add
or
pop
(bad)
repz
jle
popf
pop
fs
and
mov
aaa
push
sbb
in
add
dec
frstor
jns
pop
inc
sub
ins
push
(bad)
cwde
(bad)
mov
mov
cmp
and
sar
aas
out
jbe
or
std
das
aas
cmps
pushf
cdq
in
gs
popa
stos
aas
movs
mov
jg
mov
xor
cmps
mov
in
arpl
call
sub
aaa
aaa
inc
daa
sbb
mov
and
inc
fnstcw
cli
and
jb
outs
leave
dec
mov
mov
mov
sub
js
retf
mov
pop
pop
aam
mov
add
ret
fsub
mov
sub
out
push
sub
xor
mov
sbb
and
gs
jno
xchg
push
push
lfs
push
aaa
outs
sbb
inc
nop
push
xor
jge
inc
aam
(bad)
xchg
push
sbb
(bad)
adc
(bad)
pop
jb
(bad)
xchg
mov
pop
add
test
jnp
pop
cdq
pcmpgtb
sub
leave
rcr
add
mov
xor
xor
or
xchg
jae
mov
lods
test
jns
leave
out
ja
add
xor
(bad)
and
push
xchg
and
mov
jb
or
mov
xor
inc
shl
inc
jbe
mov
push
or
lock
repnz
std
and
in
add
loop
mov
and
les
xor
pop
(bad)
push
adc
sbb
dec
dec
mov
add
repnz
repz
out
xor
jns
push
adc
mov
mov
sub
sbb
test
inc
cmps
mov
scas
push
ds
ret
out
pusha
jnp
inc
icebp
xchg
and
movs
loope
jecxz
fistp
outs
inc
cmp
or
fcomip
or
rol
pop
jmp
dec
sub
loope
and
cmp
mov
mov
sub
cmps
xor
addr16
iret
gs
mov
cld
jbe
mov
dec
inc
inc
fstp
inc
jle
aad
sbb
jae
xor
aam
mov
ret
sub
loopne
sbb
jmp
scas
mov
jae
loop
clc
pop
loope
pop
idiv
aad
in
pop
xchg
clts
and
sbb
addr16
mov
jl
arpl
aad
in
ret
or
(bad)
xlat
or
imul
dec
xchg
js
sbb
out
cli
and
rcr
ins
pushw
xor
ficomp
or
mov
scas
mov
xchg
call
or
cmp
mov
adc
mov
xchg
mov
adc
out
cmc
cmp
inc
push
lods
dec
dec
sbb
repnz
std
jns
jl
fistp
push
sub
adc
fistp
mov
xchg
cmp
dec
jmp
jbe
fmul
fadd
cmps
cmp
push
pop
mov
clc
pushf
sub
stos
fwait
inc
repz
addr16
push
paddw
jl
cmp
mov
cwde
inc
or
pop
pop
add
sbb
mov
imul
push
jge
rcl
or
mov
sub
aas
pop
push
leave
test
enter
inc
push
cdq
push
xchg
xor
popf
arpl
je
bound
movs
pop
mov
stos
push
lods
dec
inc
mov
scas
mov
jge
movs
test
pop
or
mov
push
xchg
mov
test
lods
movs
es
(bad)
cmp
push
pop
inc
pop
ins
in
test
les
(bad)
not
test
in
ret
pop
cdq
and
cmp
(bad)
push
(bad)
scas
add
shl
and
test
jnp
je
push
xor
mov
mov
sbb
icebp
adc
cli
add
call
add
fdiv
jg
jne
in
push
mov
jnp
int
mov
jns
in
ret
mov
adc
sahf
mov
xchg
pushf
out
in
popa
mov
aam
inc
cmps
jmp
inc
pop
inc
arpl
inc
aas
or
inc
xor
add
mov
mov
rcr
imul
nop
push
pop
xor
test
xsha1
cmps
dec
jle
cmp
mov
mov
lea
dec
ret
les
jmp
test
pop
fadd
or
xor
mov
jge
jne
adc
add
(bad)
xchg
cmp
add
sub
xchg
(bad)
ror
int3
xor
sbb
mov
mov
inc
push
ins
out
push
test
push
or
outs
out
sub
neg
cmc
pop
(bad)
dec
clc
mov
cmps
cwde
frstor
in
add
out
and
pop
loop
(bad)
mov
mov
stos
sbb
pusha
int3
mov
jle
cmpxchg
outs
xchg
repz
mov
lock
mov
push
out
sbb
dec
inc
adc
mov
inc
loope
ret
inc
mov
jle
clc
imul
(bad)
icebp
test
call
test
(bad)
mov
mov
jle
or
mov
in
fcmovnbe
or
int
mov
ss
out
ja
and
add
icebp
pop
mov
sub
cdq
imul
ss
xor
pushf
xchg
inc
(bad)
icebp
out
or
dec
dec
jae
lods
cld
mov
pop
imul
jne
mov
in
neg
adc
xchg
dec
adc
push
lahf
(bad)
iret
inc
imul
jno
jmp
dec
sub
pop
(bad)
jae
dec
test
add
dec
imul
mov
jae
jg
mov
jb
shl
dec
xchg
add
cmp
xchg
dec
cmp
jle
pop
sub
mov
and
ins
jl
jg
pop
call
adc
lods
lds
mov
mov
repz
idiv
(bad)
and
push
mov
sub
outs
ss
arpl
pop
mov
test
movs
ins
pop
loop
mov
add
arpl
add
inc
call
or
in
mov
pushf
inc
inc
ret
arpl
out
push
or
lock
sbb
or
add
shl
sbb
(bad)
xlat
fst
loope
dec
cmp
or
push
pop
mov
pop
mov
cmp
outs
xor
out
xchg
(bad)
das
dec
sub
inc
jp
rcl
mov
xchg
dec
popf
jl
fidivr
std
cmp
out
mov
(bad)
xlat
(bad)
pusha
call
inc
enter
sahf
xchg
arpl
int3
stc
push
cwde
dec
stc
inc
sub
shl
xor
lahf
mov
pop
leave
inc
(bad)
ja
imul
leave
popa
repnz
out
push
in
xor
out
and
push
cmp
mov
stos
ud0
xor
(bad)
scas
xor
daa
xchg
je
aaa
(bad)
pop
add
mov
push
idiv
bound
sub
mov
scas
pusha
popa
in
test
jae
nop
stos
pop
mov
jmp
sbb
or
out
inc
(bad)
int
and
sbb
(bad)
push
push
fisttp
sub
pop
push
adc
add
das
cmps
xchg
mov
mov
dec
(bad)
push
mov
imul
mov
xchg
rcl
iret
xchg
retf
cmp
or
call
fstp
test
jmp
imul
mov
int3
mov
loope
xchg
inc
inc
and
fist
cmp
cmps
pop
mov
adc
mov
fwait
movs
(bad)
or
aaa
dec
sub
push
fcomp
jb
xor
sbb
(bad)
jp
push
sahf
jmp
jle
pop
cmps
jmp
pop
fild
mov
das
pop
xchg
out
cli
in
cmp
into
push
stc
or
inc
mov
bndldx
inc
push
sub
and
xor
inc
jg
or
xor
xchg
bound
add
popa
adc
lahf
jnp
xor
inc
xchg
xchg
outs
or
test
stos
or
into
addr16
out
and
int
std
jmp
sbb
mov
or
xchg
xor
cli
push
cwde
sbb
mov
fiadd
rcl
pop
lods
pop
daa
mov
cs
and
dec
inc
adc
loop
jo
mov
out
xor
adc
adc
jg
cdq
neg
inc
call
arpl
xor
pop
add
add
xchg
xchg
aaa
pop
mov
in
and
or
mov
pop
cmp
lods
test
inc
je
dec
and
sbb
ret
fs
scas
fmul
sbb
add
xlat
rol
mov
mov
sub
lds
and
or
mov
iret
or
out
mov
mov
aaa
retf
xor
mov
xchg
pop
jl
push
arpl
movs
inc
scas
lahf
ret
adc
push
cmps
data16
imul
jge
adc
mov
ins
sahf
lods
ja
fimul
pop
jns
nop
pop
jns
pushf
ins
sub
sub
push
je
inc
call
ins
enter
aad
xchg
in
leave
gs
mov
pusha
mov
leave
mov
xchg
or
pushf
dec
nop
(bad)
ins
mov
and
mov
lock
pop
push
arpl
add
(bad)
adc
sub
mov
ds
add
xchg
das
in
or
outs
add
dec
sahf
cmps
int3
cmp
aas
leave
iret
inc
call
fs
xchg
das
imul
std
or
leave
sbb
lods
aaa
dec
loop
test
add
test
push
mov
call
arpl
mov
ret
dec
dec
fwait
push
mov
and
mov
xor
fbld
(bad)
call
and
push
xor
jmp
aam
vaddpd
fnstenv
or
mov
(bad)
call
scas
ficomp
dec
imul
cwde
cmps
adc
sbb
adc
or
sub
shr
retf
push
xor
addr16
push
pusha
iret
jne
pop
dec
sbb
xchg
jne
or
sbb
xor
jns
inc
or
inc
add
mov
pop
mov
push
xchg
pop
mov
dec
iret
push
pop
mov
gs
rcl
adc
fisub
add
jae
pop
and
pushf
fldenv
pop
adc
xchg
mov
jne
mov
stos
popa
push
fldcw
xchg
stos
push
loop
dec
mov
cmp
push
test
mov
adc
adc
or
call
inc
add
and
scas
aas
ins
in
jle
xchg
mov
es
std
pop
jnp
loop
pop
jb
(bad)
xchg
js
fmul
in
xor
enter
pop
ret
xor
ins
(bad)
jbe
dec
cmc
mov
or
dec
xchg
adc
xchg
push
xor
pop
int3
test
outs
and
rcl
push
scas
into
ret
retf
and
(bad)
xchg
test
call
das
pop
xor
dec
ins
xor
pop
into
jb
mov
arpl
mov
xor
cmp
(bad)
push
xor
pusha
sbb
lock
scas
push
jbe
into
fcmovnu
inc
or
dec
mov
adc
shl
jg
lds
dec
pop
sbb
sbb
mov
test
cdq
push
stos
or
push
mov
or
stc
adc
jg
out
aaa
push
sbb
inc
mov
mov
xchg
lods
pop
leave
cld
dec
das
push
ins
push
add
and
lods
dec
aaa
push
sub
dec
ror
cmps
data16
lods
ret
nop
push
lds
jno
inc
arpl
push
test
sub
ficom
(bad)
fcmovnb
sub
push
in
sub
and
clc
jmp
nop
mov
scas
sbb
sbb
inc
sub
sub
jmp
mov
inc
into
cmp
adc
fwait
js
fcmove
dec
push
(bad)
xchg
imul
repnz
popf
(bad)
in
xlat
xor
xor
mov
ins
js
shl
das
loop
in
repnz
ds
cmps
mov
shr
pusha
pop
adc
bound
or
sti
and
aas
scas
jbe
jb
neg
inc
lods
test
mov
std
push
jmp
stc
pop
aam
lods
repz
lods
ror
mov
sti
jle
push
cmp
jbe
mov
outs
lods
int
push
(bad)
data16
sti
dec
in
mov
push
dec
sbb
adc
push
iret
stos
in
sahf
or
lods
pop
push
mov
adc
cmps
into
and
jle
lods
sbb
fidiv
rcr
call
es
icebp
xor
add
and
adc
imul
hlt
sub
mov
mov
test
mov
or
test
push
sbb
adc
ja
dec
push
out
call
mov
xor
addr16
out
mov
or
retf
test
mov
pop
xchg
cs
xor
arpl
(bad)
ja
jnp
ud0
repnz
mov
jmp
cmps
(bad)
int
inc
push
cli
mov
pop
cmp
sub
inc
ss
sub
ret
mov
std
scas
(bad)
cmps
sbb
pop
sub
pushf
sub
jmp
dec
or
pxor
in
int3
repz
mov
cdq
jb
mov
cmc
adc
add
cmp
out
and
jl
jae
pushf
in
jb
push
fidiv
lea
and
in
mov
sub
and
jae
sbb
mov
out
push
add
mov
sbb
fbld
pushf
ret
loop
test
fadd
int3
sbb
xchg
cwde
push
imul
sub
stos
inc
adc
js
xchg
xchg
stos
push
mov
lock
stos
call
pop
jge
(bad)
aam
mov
mov
jl
sbb
cs
jno
aad
dec
add
scas
mul
dec
mov
adc
pop
jno
int3
mov
cmp
sub
hlt
and
inc
lods
sbb
and
or
mov
ins
dec
sti
popa
jmp
inc
or
cmps
push
fmul
push
adc
push
leave
mov
out
mov
sub
enter
push
jle
sbb
xor
xchg
cmp
push
dec
mov
outs
jns
lds
push
popa
jbe
loopne
imul
or
es
out
mov
(bad)
in
stc
clc
call
into
ss
dec
movs
mov
pop
loop
scas
neg
aad
nop
add
mov
and
xor
enter
div
(bad)
dec
js
jbe
mov
or
pop
xchg
cmps
dec
fbstp
sub
shr
imul
mov
ficom
mov
jae
lock
inc
mov
jne
lock
das
jbe
loop
or
and
aas
cmc
mov
mov
js
loope
aam
out
xchg
lea
(bad)
fcomp
or
(bad)
out
xchg
sti
aaa
jl
xlat
dec
dec
push
mov
shl
mov
dec
in
addr16
bnd
ror
das
and
bound
and
movaps
mov
mov
jecxz
mov
adc
repnz
je
aad
leave
iret
retf
add
inc
ret
(bad)
jns
hlt
push
fnsave
push
pop
test
mov
push
fisub
mov
pop
or
jl
mov
(bad)
iret
movs
sar
scas
leave
clc
jbe
sbb
(bad)
xor
cli
and
jp
pop
in
inc
test
add
ins
test
inc
jae
xor
(bad)
rol
and
aam
ret
movs
cli
data16
call
mov
add
ds
and
pushf
fsub
call
xor
or
enter
push
jecxz
inc
mov
push
jl
sub
jge
sub
and
leave
in
(bad)
cs
imul
xchg
xor
les
and
mov
in
test
popa
call
pop
(bad)
pop
sub
sbb
stos
mov
sbb
or
jae
mov
cmps
pushf
mov
movs
sbb
ja
cmp
arpl
cdq
inc
popa
xchg
enter
(bad)
lock
int3
push
retf
jb
xor
addr16
cli
mov
adc
(bad)
fsub
dec
mov
test
sub
stos
int
mov
int3
into
sahf
rcr
push
sub
xor
repz
sub
adc
xor
push
xor
fimul
dec
jp
sub
mov
scas
jb
sbb
xor
inc
jne
push
jmp
cli
mov
jb
loop
(bad)
lahf
popa
rcr
dec
gs
xchg
dec
iret
mov
enter
sti
je
popf
inc
shl
into
jle
xchg
fidivr
pop
xchg
scas
xor
jns
jl
push
lock
std
and
ret
mov
xlat
pop
push
test
sub
shl
aas
cli
jbe
cmps
jb
out
not
pop
clc
or
mov
pop
fstp
fcomi
mov
cmc
pop
repnz
fcomp
xor
sbb
or
pop
cmp
inc
hlt
ds
mov
xchg
pop
xchg
mov
lock
jo
adc
xchg
cmp
mov
out
test
cmps
imul
iret
repz
pusha
mov
push
dec
imul
inc
cmps
or
fwait
hlt
add
dec
mov
rcr
std
jb
(bad)
js
xor
inc
stc
fild
dec
sbb
adc
xchg
mov
xor
std
mov
mov
test
rcr
xchg
aam
xchg
adc
lds
pop
adc
cmp
ret
cmp
pop
add
adc
add
mov
idiv
and
jl
sub
scas
jo
mov
icebp
imul
or
push
stos
push
les
in
mov
arpl
fsub
daa
mov
cmp
sbb
jmp
sbb
(bad)
xchg
pop
mov
dec
dec
push
retf
pop
(bad)
xor
inc
cdq
sti
out
or
out
mov
xlat
fiadd
dec
addps
push
push
xlat
adc
rol
fnstsw
mov
sti
inc
nop
dec
jge
cmps
ja
pop
and
iret
nop
xor
int3
sub
xlat
mov
sub
mov
arpl
or
xor
fnstsw
into
jb
imul
ficomp
push
icebp
dec
pop
mov
pop
mov
ds
mov
enter
push
dec
cld
xchg
ss
outs
and
mov
inc
cmp
icebp
div
mov
add
adc
sub
ror
js
sbb
push
test
loopne
and
repnz
push
pop
loop
fnsave
jae
call
daa
idiv
scas
(bad)
fdiv
add
jbe
hlt
push
xor
mov
fwait
dec
jp
shr
add
pop
imul
arpl
cmp
jmp
add
pop
stc
mov
cmp
in
add
mov
ins
std
das
js
pop
inc
jbe
popf
aaa
dec
and
and
pop
mov
dec
shl
jo
sbb
pop
or
xor
mov
hlt
and
xor
cmps
ret
mov
les
retf
push
shl
fstp
(bad)
cwde
sahf
in
enter
rcl
adc
cmps
mov
xchg
fstp
arpl
repnz
add
and
mov
sbb
jg
ja
lods
sub
and
int3
adc
cld
inc
jnp
inc
cwde
sbb
jmp
mov
add
push
sti
aaa
or
xchg
pop
inc
icebp
xor
mov
sub
dec
cmp
shl
pop
retf
push
repz
inc
(bad)
out
neg
fdivr
les
and
dec
retf
popf
or
jle
push
mov
retf
sub
cmps
clc
loope
xchg
dec
out
scas
cmp
xchg
nop
pop
dec
add
es
jge
sbb
nop
outs
jl
out
fwait
test
sbb
sar
mov
xchg
mov
fcom
jae
jno
rcl
add
in
aam
inc
movs
popf
lods
aas
(bad)
ror
cmp
lea
in
clc
sar
pop
xchg
pop
pushf
test
add
pop
inc
cs
retf
adc
push
cmp
pop
pop
rcr
xchg
mov
aad
add
inc
mul
popa
outs
retf
push
add
xchg
fs
adc
fistp
std
loopne
leave
fwait
mov
push
je
out
pop
sbb
jmp
jl
arpl
mov
psadbw
(bad)
ret
idiv
scas
pop
mov
in
test
add
or
mov
add
mov
icebp
pusha
sbb
(bad)
iret
les
lahf
push
push
jae
sub
fdivr
retf
stos
sub
out
adc
pusha
mov
mov
fstp
inc
dec
(bad)
in
sbb
jl
inc
(bad)
test
and
scas
ins
xor
jmp
in
push
inc
xchg
pop
ret
int
or
lahf
xor
push
jno
and
call
cmps
addr16
cmp
rol
xor
sbb
hlt
jl
fld
adc
out
add
in
dec
xor
dec
ret
hlt
fs
cmps
out
call
(bad)
add
out
mov
out
or
push
loopne
enter
inc
mov
pop
adc
jmp
or
add
cdq
psadbw
cwde
addr16
mov
sub
mul
mov
cmp
sbb
or
fcom
mov
cmp
jp
pop
push
jecxz
jge
push
aam
push
adc
test
cmps
and
sbb
or
dec
mov
push
inc
arpl
jmp
dec
push
dec
mov
push
out
call
push
mov
lahf
adc
out
jbe
mov
jns
cs
or
cmp
retf
cld
and
mov
jge
aad
or
gs
push
xor
add
mov
sti
xor
mov
sbb
pusha
out
sbb
or
les
les
test
inc
mov
retf
inc
neg
or
sar
sbb
xchg
dec
inc
and
stc
sar
and
cmp
mov
dec
dec
push
adc
xor
mov
inc
(bad)
test
push
pop
fisubr
inc
stc
inc
jae
xchg
add
or
xchg
(bad)
repz
call
pop
sbb
pop
ror
sbb
jecxz
vcvttps2dq
out
stc
xor
js
mov
cmp
mov
or
ret
shr
outs
sahf
mov
xchg
mov
fcmovu
and
idiv
xor
xor
pop
jmp
push
lods
inc
lea
rcl
or
sar
test
mov
aaa
jo
mov
gs
retf
rcl
xchg
add
or
jmp
aas
cmp
mov
push
jl
imul
out
dec
mov
clc
outs
sub
xchg
fadd
fiadd
sar
push
cmp
(bad)
push
cmps
mov
xor
cmp
sahf
out
sar
cmp
push
or
outs
inc
arpl
push
push
mov
mov
sbb
jmp
fnsave
adc
into
es
pop
mov
push
ret
sbb
xchg
loope
xor
jecxz
adc
or
ror
mov
push
mov
mov
add
push
push
mov
mov
ficomp
fnsave
pop
leave
icebp
xchg
sub
lahf
mov
(bad)
jbe
dec
addr16
jmp
xor
dec
jmp
sub
gs
adc
not
fdivr
(bad)
(bad)
test
xor
(bad)
jae
xchg
in
xchg
imul
adc
fst
mov
cs
jb
fs
aam
xchg
xor
stc
push
or
jmp
cmp
add
push
test
pop
cmp
xor
inc
scas
iret
enter
shr
in
mov
pop
aaa
pop
xchg
cli
add
xchg
dec
jo
jne
lods
sbb
iret
loop
cmp
outs
dec
jb
call
sub
in
xor
cwde
je
(bad)
dec
adc
xor
dec
xor
repz
sbb
jmp
and
(bad)
jle
push
jnp
pop
cmps
scas
div
rcr
or
shl
retf
ret
jg
rol
sahf
enter
jl
test
jmp
loopne
xchg
xor
xor
sub
scas
ins
lea
(bad)
xchg
lds
psubsb
pop
pop
call
xchg
xchg
jp
cmp
push
shl
add
scas
ja
inc
imul
popf
cmps
push
mov
add
xor
test
ja
loopne
lea
jecxz
jp
mov
cmp
dec
push
mov
in
dec
mov
loopne
xchg
jns
ins
inc
adc
nop
shl
aas
adc
test
sahf
aas
jns
test
hlt
enter
pop
aad
and
push
gs
jae
cmps
jmp
ins
outs
cmps
pop
dec
push
push
mov
call
push
test
sbb
rcr
inc
add
jge
mov
int3
add
dec
jl
inc
data16
inc
cdq
inc
xchg
cmps
lahf
sub
in
fwait
push
jnp
js
das
jno
jbe
stos
mov
div
xor
xlat
mov
ds
hlt
mov
or
int
pop
jg
mov
rol
cmps
jb
fwait
les
and
jmp
imul
xchg
push
pop
xor
popa
retf
or
adc
retf
sbb
sub
movs
mov
mov
movs
sahf
inc
iret
das
(bad)
add
repz
movs
jb
sbb
xor
(bad)
nop
mov
dec
xlat
jmp
hlt
jo
jp
push
sbb
xchg
and
jecxz
retf
xlat
and
inc
sub
lea
int3
lock
(bad)
jns
cmp
xchg
jns
push
and
test
add
rcl
sub
pop
add
jle
lea
int
lods
push
fild
loop
pop
dec
les
add
test
call
adc
int
mov
jecxz
push
imul
call
daa
or
std
cmp
mov
dec
ds
aad
cmp
sbb
sbb
dec
or
lea
lods
int
inc
fcmovb
pop
cmps
xchg
ss
push
call
jne
dec
movs
mov
cmp
sahf
xchg
je
dec
fstp
into
in
pop
and
adc
ins
rcr
inc
or
mov
xor
add
scas
sti
and
jl
test
jns
dec
jb
daa
add
leave
mov
leave
es
ins
(bad)
shl
sub
(bad)
push
nop
ins
push
in
jmp
xor
movs
mov
aad
pop
cmp
sub
mov
push
fisub
jg
scas
dec
in
pusha
pop
xor
xor
xor
out
and
push
clc
ins
sbb
scas
or
xchg
mov
adc
jge
cmp
iret
fxch
jl
jg
shl
cmp
repnz
cmp
sbb
lds
daa
sbb
push
cli
xor
add
mov
push
cli
jmp
xlat
dec
and
cs
call
(bad)
rsqrtps
pop
jnp
mov
mov
imul
aas
clc
add
inc
push
and
enter
and
loopne
rcl
ret
fmul
icebp
aad
(bad)
int3
add
push
push
mov
cdq
imul
imul
cmp
pusha
iret
add
jnp
add
mov
jl
push
(bad)
jb
movs
in
inc
nop
xor
mul
push
sar
or
inc
push
pop
sbb
add
cmp
mov
into
push
pushf
sbb
pop
dec
mov
jl
mov
out
cmps
std
fidivr
jl
neg
mov
loop
adc
jae
repnz
mov
mov
ins
fsqrt
xlat
push
(bad)
into
or
push
mov
daa
mov
cdq
xor
dec
pop
xchg
push
pop
out
mov
movs
inc
cmp
and
xchg
(bad)
icebp
fcomp
leave
cmc
and
xor
fs
(bad)
jg
and
dec
scas
inc
pushf
mov
stos
imul
fstp
mov
iret
jmp
(bad)
jmp
jne
cmp
push
fs
cld
mov
ins
mov
sahf
inc
mov
jne
ficomp
add
dec
sbb
push
loope
cmc
iret
daa
rcr
xor
adc
out
pop
push
mov
xor
push
es
ss
es
loop
mov
ds
push
sbb
fsubr
rcl
in
sti
lods
mov
in
jbe
inc
lahf
(bad)
dec
retf
mov
and
jmp
pop
adc
mov
lock
xor
adc
lea
addr16
les
fmul
call
jge
int3
stos
inc
mov
cmp
das
imul
xor
jge
inc
push
stc
ret
stos
sbb
pop
inc
test
or
lods
dec
fnstenv
push
add
call
mov
sti
shl
sub
push
(bad)
push
out
loopne
xor
pop
jnp
shr
fidiv
stos
dec
xor
pop
add
cmp
pop
jns
mov
mov
mov
jb
or
test
pop
imul
inc
lods
lock
dec
test
das
xor
add
int3
mov
loope
sub
ja
jno
mov
inc
pusha
std
call
mov
sbb
retf
mov
shl
outs
dec
push
and
dec
and
les
xor
fstp
lock
cdq
lods
out
mov
push
push
loop
mov
or
xor
(bad)
rol
ret
mov
jne
fsubr
shl
(bad)
push
mov
(bad)
adc
(bad)
add
ficom
add
jno
push
sbb
cmc
pop
inc
dec
into
dec
sbb
add
repz
dec
xor
cmp
fistp
inc
jb
adc
add
outs
inc
nop
xlat
test
call
ror
mov
icebp
jecxz
ret
xchg
mov
xchg
lds
mov
ret
xor
fsubr
fsubrp
adc
aam
jg
test
int
in
ret
cmp
adc
pusha
mov
movs
jnp
add
in
loopne
sub
mov
(bad)
pop
mov
ja
adc
xor
and
js
jb
mov
mov
jo
(bad)
outs
outs
add
jns
xchg
push
ror
pop
ins
ret
loop
jmp
(bad)
stos
jl
retf
jno
fcomp
mov
inc
sbb
ja
push
inc
cmp
into
outs
mov
mov
mov
movs
hlt
stos
and
push
mov
(bad)
fcom
mov
push
or
cdq
(bad)
cwde
xchg
sbb
gs
mov
push
xchg
sbb
add
mov
mov
dec
leave
xchg
pop
movs
adc
ins
inc
mov
push
or
or
jp
fst
arpl
mov
mov
mov
inc
push
or
lock
jne
inc
shl
xchg
xchg
dec
xchg
arpl
mov
pop
das
fist
nop
push
push
cmp
xor
mov
push
cmp
lods
cmc
clc
js
sub
rol
sub
(bad)
mov
add
or
mov
cmps
adc
and
outs
jbe
jg
push
(bad)
fsubr
ja
dec
div
push
mov
add
dec
icebp
push
push
mov
mov
sub
pop
or
push
leave
jp
scas
fcmovu
je
dec
out
xlat
xor
sub
adc
mov
out
cld
fcomi
popa
push
mov
outs
mov
push
xchg
fiadd
xor
pop
jmp
adc
xchg
cmp
imul
arpl
or
stos
mov
mov
push
jb
inc
dec
aaa
pop
mov
push
leave
sahf
int3
inc
or
sub
mov
jae
jne
xor
mov
push
(bad)
adc
mov
dec
test
xor
out
fsub
cmp
sbb
div
pop
jno
fimul
mov
mov
add
xchg
retf
adc
mov
mov
stc
xor
sub
mov
pop
cwde
and
fsubr
sti
sub
pop
push
push
jno
imul
lea
mov
mov
inc
int3
in
pop
outs
enter
adc
inc
test
or
in
stos
dec
jne
call
inc
stos
jnp
jb
mov
or
dec
adc
push
mov
movs
shl
dec
jmp
adc
dec
sbb
into
lea
je
push
mov
movs
jp
lods
pop
std
sbb
sbb
mov
(bad)
adc
ror
add
mov
ret
ror
lahf
xor
movs
mov
pop
icebp
hlt
sbb
dec
xchg
movs
mov
loopne
nop
sub
cmp
mov
test
rcr
aad
or
xor
fnclex
test
sti
repz
add
or
mov
hlt
cmp
push
int
xor
imul
lods
mov
mov
fldenv
(bad)
in
in
inc
je
test
jmp
aad
dec
out
cmp
retf
sbb
in
sub
xchg
(bad)
jmp
inc
jae
pop
cmp
int3
push
xchg
jg
rcr
inc
inc
xor
ins
inc
inc
pop
dec
mov
clc
push
(bad)
inc
repz
jmp
imul
mov
sti
daa
jg
ret
pop
inc
pushf
cmp
dec
cwde
pop
out
retf
xchg
dec
jle
dec
in
loopne
xor
sub
xor
popa
out
sub
adc
sar
mov
aam
and
xchg
test
ret
sub
in
in
icebp
sub
repnz
mov
cmp
popa
dec
push
retf
inc
ins
mov
inc
mov
push
call
sub
imul
and
or
lahf
mov
test
and
sub
push
test
fstp
and
push
xchg
pop
out
fsubp
pop
push
cmp
and
fcom
mov
ss
and
fldenv
retf
xchg
adc
push
rcr
ss
and
fisttp
(bad)
mov
iret
fisttp
call
push
loopne
pop
dec
cmp
fcomi
mov
rol
push
sbb
pop
data16
mov
cld
test
inc
bound
addr16
cli
pop
push
jae
mov
jae
inc
rcr
das
sbb
dec
in
lods
fldenv
fs
movs
push
jecxz
imul
add
je
fnstenv
sbb
cmovp
es
mov
mov
loop
call
sbb
add
adc
retf
mov
test
mov
std
cmp
or
stc
das
pop
(bad)
loop
sbb
xor
test
adc
cmp
enter
push
outs
sub
(bad)
mov
mov
loop
xchg
mov
shl
dec
xchg
cdq
mov
jbe
outs
xor
push
xchg
movs
sbb
ins
pop
popa
pop
cmp
xchg
push
mov
mov
fs
scas
inc
popf
in
jnp
data16
sub
mov
call
enter
xchg
popa
std
ret
and
pop
sar
ja
fstp
push
lahf
test
cmps
inc
pop
sbb
int3
out
xchg
ja
aaa
out
xchg
sbb
neg
sbb
xor
lock
cmp
ss
dec
fist
call
test
or
pop
inc
cli
jnp
pop
inc
sbb
aam
cs
in
test
mov
lea
xchg
or
pop
mov
stos
scas
mov
popa
cmp
mov
sbb
arpl
pop
movs
or
jecxz
je
adc
dec
dec
int
and
ror
leave
push
mov
sub
pop
inc
jnp
lahf
pop
jmp
imul
pusha
sub
test
inc
mov
xchg
pop
push
mov
dec
pop
push
fdivr
cmps
lock
cwde
mov
scas
retf
xchg
fisubr
jmp
outs
push
push
mov
stos
dec
into
adc
push
adc
shl
les
or
sub
adc
stos
outs
ins
xchg
mov
push
clc
dec
pop
push
leave
pop
and
push
and
inc
aam
rcr
cmp
fdiv
cmps
fnsave
mov
loop
jl
mov
icebp
cmp
mov
ss
jge
mov
cmp
in
ss
or
imul
outs
mov
aad
ret
(bad)
in
cmp
xchg
inc
ss
retf
cld
mov
add
leave
mov
inc
clc
mov
outs
sbb
jo
jb
or
xor
outs
out
dec
mov
mov
outs
jae
cmp
stos
out
mov
mov
cmp
cdq
mov
into
mov
adc
xlat
(bad)
jb
sti
outs
mov
pop
fidivr
shl
dec
pop
sar
(bad)
loopne
sbb
sbb
sbb
arpl
xor
pop
pop
pop
ds
mov
sub
xor
pop
push
jle
or
inc
pushf
je
or
mov
shl
or
pop
add
mov
and
dec
sar
xor
sbb
jmp
add
out
out
dec
inc
pop
call
(bad)
cdq
addr16
dec
sub
sub
gs
push
sbb
push
stos
mov
or
sub
call
stc
add
outs
mov
fcmovb
js
ret
int
sub
neg
mov
pop
std
sub
sahf
mov
das
test
add
pop
jbe
shl
dec
mov
imul
mov
mov
push
lods
leave
cmpxchg8b
outs
add
ret
push
fs
cmp
pop
xchg
cmp
xor
fmul
outs
daa
aas
imul
dec
lahf
js
push
movs
push
pop
mov
fisubr
sbb
imul
dec
(bad)
adc
scas
adc
or
or
repz
pop
mov
call
loope
mov
(bad)
xchg
jmp
push
or
in
jns
xchg
cs
add
dec
inc
add
es
ret
cwde
push
add
cmp
stos
push
or
cdq
inc
sbb
retf
add
dec
jmp
scas
pushaw
xor
sbb
push
test
xor
inc
addr16
xchg
dec
rcl
pushf
inc
pop
mov
shr
clc
or
push
iret
int3
ins
jl
mov
jnp
out
movs
pop
cwde
ret
imul
icebp
jne
nop
jl
jge
adc
les
je
push
sbb
retf
aas
mov
inc
sbb
xor
dec
lea
add
sub
cmp
lods
repz
mov
push
repnz
(bad)
sbb
es
jmp
sar
shl
sub
mov
ficom
test
stos
(bad)
adc
dec
retf
arpl
pushf
int3
dec
dec
icebp
push
inc
adc
jp
js
(bad)
cmp
and
xchg
xchg
cdq
adc
jae
xor
push
data16
pop
fld
adc
sbb
mov
push
push
add
sbb
(bad)
mov
xor
sbb
clc
popa
mov
outs
or
adc
xchg
mov
push
jmp
pushf
and
retf
movs
test
cld
inc
cld
mov
inc
lahf
dec
inc
les
movs
fnsave
mov
aaa
fidiv
jmp
dec
add
pop
xchg
xchg
fnstcw
jmp
adc
adc
jo
xor
cmp
mov
sub
mov
cmps
in
cmps
outs
sub
pop
jmp
or
fcomp
dec
sbb
in
pop
dec
test
hlt
movs
stc
sbb
ins
inc
out
mov
aas
mov
xchg
in
sbb
mov
into
addr16
arpl
inc
ds
pop
dec
mov
out
jp
xchg
(bad)
mov
adc
adc
xor
jns
fsub
push
sub
(bad)
cmp
mov
xlat
sahf
lea
cs
mov
push
push
sub
loopne
add
inc
jbe
fisub
in
mov
into
jge
cmc
clc
dec
jecxz
dec
or
jecxz
dec
add
and
jmp
add
das
(bad)
repnz
and
xchg
das
fdiv
ds
jns
ins
fwait
cmps
cwde
pop
mov
mov
xchg
or
rcr
cmp
out
vpaddsb
aam
lods
pop
call
cwde
cs
loop
add
cmp
jae
movs
pop
repz
mov
mov
lods
ins
mov
pop
push
movs
pushf
enter
add
inc
add
jae
outs
adc
sbb
loope
adc
sub
shl
add
retf
sbb
jecxz
aas
int3
lods
jmp
push
jmp
loop
(bad)
call
xchg
pop
inc
test
(bad)
pop
cli
fistp
pop
rol
cmps
lahf
fs
fcomp
(bad)
jg
push
xor
cmp
pop
(bad)
xchg
push
cmp
xor
push
in
mov
jb
out
add
rol
jg
movs
mov
and
inc
xchg
add
fadd
adc
and
rcr
(bad)
or
repnz
jmp
jnp
cmp
cmps
fwait
adc
xor
inc
ds
mov
js
xchg
mov
das
iret
fidiv
(bad)
out
lea
jp
aam
jne
aad
aam
xchg
add
jno
iret
out
in
mov
cmp
les
lahf
aam
xor
xor
aad
pop
daa
dec
jbe
cdq
xor
or
jmp
adc
or
clc
out
test
scas
nop
cmps
fiadd
xchg
aam
push
in
cwde
stos
lds
les
pusha
xchg
and
push
loope
add
das
pop
leave
mov
fistp
pop
repnz
jo
pop
push
sub
dec
mov
pop
inc
sar
jae
retf
outs
std
adc
adc
inc
push
mov
mov
loopne
daa
add
ret
xchg
(bad)
sar
mov
jne
out
fwait
(bad)
mov
pop
into
cmc
es
push
(bad)
cli
(bad)
repz
rep
loopne
je
repnz
ss
add
aaa
pop
push
test
hlt
cmp
imul
fst
xlat
mov
ins
sub
out
test
dec
(bad)
ficomp
sub
popa
das
out
sbb
add
nop
sbb
jno
clc
dec
(bad)
lea
xchg
fmulp
mov
rcr
(bad)
cli
aas
je
dec
jle
rcl
mov
sbb
in
adc
pop
(bad)
xchg
sbb
xchg
pop
aas
jl
jl
dec
mov
jecxz
data16
imul
push
out
ja
arpl
int3
xchg
add
rcl
pop
cmp
retf
xor
(bad)
pusha
pop
sti
mov
inc
loop
mov
xor
and
hlt
fild
int
adc
add
xchg
mov
push
push
push
ins
out
jmp
sar
inc
xchg
add
sub
sub
adc
lds
add
aas
push
and
sti
push
inc
outs
adc
retf
push
or
mov
retf
push
in
sbb
xchg
div
loopne
xor
or
jne
mov
xor
and
push
mov
cmp
test
aam
dec
das
push
mov
fimul
in
je
jl
or
inc
push
ror
or
gs
push
mov
dec
out
mov
cmp
loopne
in
xor
sbb
xchg
mov
and
ret
jae
cdq
push
mov
in
push
or
add
cmp
push
mov
fldcw
outs
and
jmp
cmps
push
(bad)
test
adc
dec
inc
cld
rcl
adc
mov
inc
mov
inc
cwde
outs
(bad)
push
aaa
lea
add
dec
sub
fnstcw
inc
in
stos
adc
mov
inc
sub
pop
push
push
fnstsw
fs
cmp
cld
mov
ror
xor
les
mov
es
int
stos
lahf
jle
hlt
std
fidivr
cmp
add
mov
sub
mov
ret
mov
dec
dec
dec
aam
xchg
sub
fist
jl
sti
cdq
mov
push
adc
shl
mov
movs
pop
jb
adc
sbb
mov
aas
in
mov
xchg
fstp
or
arpl
les
and
hlt
mov
xor
scas
loopne
add
inc
mov
adc
bound
push
nop
mov
in
in
pop
fbld
retf
push
idiv
jns
aaa
mov
xchg
stos
sub
jp
xchg
dec
es
clc
nop
jge
ret
and
lods
mov
jl
cmp
mov
es
pushf
jmp
push
xchg
inc
lahf
pop
dec
pop
jp
test
sahf
xor
fisub
js
daa
bound
push
pop
clc
test
pop
popf
popa
stc
mov
add
pushf
dec
pushf
jbe
jl
push
sub
fnstcw
(bad)
mov
(bad)
adc
mov
popf
fbld
inc
(bad)
fsub
(bad)
retf
adc
movs
(bad)
daa
pop
cmp
faddp
arpl
cli
popf
inc
push
sbb
jno
mov
les
call
gs
inc
jb
or
stos
sar
ret
sub
(bad)
push
fs
mov
(bad)
pop
out
or
outs
add
gs
mov
push
popa
xor
fcomip
mov
push
pop
push
retf
fdiv
pop
stc
call
sub
popf
sbb
scas
and
in
add
dec
jl
ret
adc
or
test
adc
xor
mov
loope
imul
dec
adc
push
fisubr
arpl
sub
dec
int
jbe
enter
les
xchg
cmp
dec
pushf
data16
sub
repnz
add
out
mov
push
jmp
mov
jg
xchg
(bad)
icebp
dec
mov
lods
jmp
push
in
jg
ss
or
mov
es
test
add
rcr
pop
imul
sbb
daa
jp
mov
les
pop
and
adc
cmps
shr
or
repnz
mov
cli
ret
mov
fist
mov
fmul
es
adc
mov
jmp
push
mov
pop
add
adc
inc
jne
sub
dec
mov
sbb
test
dec
inc
push
push
mov
inc
mov
aad
push
inc
aad
mov
stc
pop
mov
xchg
or
mov
dec
xor
jnp
nop
lods
es
mov
std
addr16
loope
add
adc
sti
rcl
and
add
mov
jmp
inc
or
stos
pop
in
mov
and
or
hlt
inc
push
inc
sub
mov
pop
inc
mov
sbb
cwde
aas
or
mov
mov
test
daa
fsubr
loopne
jmp
shl
jp
mov
mov
scas
in
inc
inc
ret
jb
stos
jp
in
jl
int
jb
fisttp
or
(bad)
mov
mov
mov
push
or
mov
std
xchg
sbb
xchg
repz
inc
sahf
into
xchg
(bad)
sbb
int
loopne
inc
mov
dec
xor
sub
fwait
call
stos
mov
rcr
frstor
pop
adc
(bad)
call
push
rol
popw
pushf
push
out
test
xor
jmp
jae
mov
add
ss
scas
sub
or
outs
repz
xchg
xchg
add
fcmovne
sbb
fcmovbe
xor
jmp
int
jl
ins
imul
jmp
mov
jae
jecxz
retf
or
sub
sub
sbb
nop
cmp
ss
loope
pop
adc
or
inc
rcl
cmps
pop
and
cmps
inc
mov
adc
bound
or
and
xor
cmp
daa
les
xchg
mov
adc
daa
cmps
ss
jmp
fcom
shl
mov
test
adc
cmp
sahf
push
fdivr
and
fist
add
div
mov
neg
in
lock
es
cwde
in
and
hlt
sbb
add
(bad)
adc
jno
push
in
stc
jae
repnz
xchg
mov
inc
or
out
into
icebp
ins
mov
or
test
dec
scas
fist
sbb
jmp
xor
sbb
mov
iret
jecxz
push
inc
inc
push
cmc
fnstsw
pop
test
loop
mov
cmp
sti
int3
lea
les
std
cmps
mov
push
dec
add
inc
xlat
xor
mov
lods
adc
sbb
call
adc
sbb
int
and
sbb
sti
xchg
repz
sti
or
or
xchg
clc
pop
dec
pop
pusha
mov
mov
imul
(bad)
in
out
test
adc
mov
popa
call
shl
sub
jmp
inc
bound
inc
aad
std
cmc
pushfw
and
inc
repnz
repnz
cmp
mov
rol
cwde
jmp
shl
adc
(bad)
ins
dec
mov
jno
and
jg
mov
adc
shl
adc
int
pushf
pushf
in
or
mov
or
imul
push
cmp
(bad)
mov
jle
cmp
neg
jl
fbstp
mov
test
test
add
paddd
dec
adc
fsubr
jbe
or
adc
shr
out
std
push
cwde
out
in
into
adc
std
xchg
sub
(bad)
aam
or
jo
push
sar
js
rol
daa
dec
inc
cmp
jmp
push
jne
mov
sbb
mov
(bad)
pop
out
adc
cmc
sub
inc
mov
retf
call
jno
retf
pop
pop
(bad)
xchg
mul
xchg
jmp
add
adc
adc
jmp
push
js
aaa
(bad)
sub
or
out
inc
sub
cmps
mov
mov
jne
push
outs
(bad)
jo
std
xchg
ins
scas
inc
test
xchg
adc
aaa
mov
int3
push
(bad)
jb
scas
int3
and
ja
fdivr
popf
cmp
push
cdq
push
and
adc
je
std
rcl
mov
imul
(bad)
cmp
aad
pop
pop
aam
(bad)
call
imul
in
dec
sbb
fistp
xchg
out
getsec
jge
push
add
add
les
cmp
and
jbe
mov
cmp
(bad)
sub
sub
lea
test
ins
dec
jb
fadd
rcl
aas
iret
adc
test
call
std
adc
ins
(bad)
enter
inc
pushf
fs
(bad)
sar
mov
jl
push
jge
sub
scas
ins
xchg
out
pop
mov
push
dec
fxch
push
outs
push
daa
ja
hlt
(bad)
mov
adc
xor
fdiv
xrelease
in
lds
ja
mov
aam
(bad)
push
and
pop
push
stos
aaa
or
repz
mov
out
adc
(bad)
rol
(bad)
cli
xchg
shr
sbb
dec
mov
push
mov
arpl
in
inc
inc
mov
sbb
adc
stos
in
sbb
dec
or
fld
sbb
cmp
dec
addr16
test
cmc
scas
push
popa
call
mov
test
inc
les
sub
inc
xlat
adc
fs
es
inc
jns
pop
inc
vfrczps
out
pop
es
and
pop
(bad)
xlat
add
ins
scas
out
outs
mul
mov
fild
sub
fstp
(bad)
adc
jg
jae
fnstenv
and
jmp
mov
add
sbb
sub
ja
and
inc
or
fs
lea
adc
daa
xchg
push
mul
data16
sbb
inc
int3
jo
jmp
stc
push
xchg
mov
mov
xor
mov
push
ret
pop
loop
xlat
fsubr
sbb
mov
inc
sahf
(bad)
xchg
out
stc
arpl
cdq
adc
add
ds
jae
or
or
retf
jmp
pop
fsubr
ficomp
test
push
lds
addr16
cmp
or
ins
fucom
pop
inc
test
inc
mov
cdq
jmp
pop
sar
xor
push
mov
push
inc
aas
inc
ins
fidivr
adc
jmp
retf
mov
jbe
mov
adc
and
and
xor
push
push
jp
iret
pop
push
push
mov
cmp
sub
lock
clc
mov
arpl
dec
stc
inc
test
mov
lea
in
push
mov
mov
mov
gs
add
cwde
sub
cmp
cli
pushf
sbb
test
pop
dec
xor
daa
int
or
xchg
mov
or
add
fsubr
scas
inc
cmp
and
jbe
pusha
dec
stos
jb
adc
push
jmp
mov
pop
rcl
xor
addr16
jmp
scas
loopne
and
retf
fmul
mov
dec
mov
adc
sub
lahf
mov
je
and
ss
xchg
pusha
or
jne
fbstp
cli
add
scas
lods
imul
nop
sbb
fst
daa
mov
cmps
addr16
mov
push
jle
cmp
sbb
push
test
xchg
and
cmp
adc
loope
dec
or
in
sub
sbb
xchg
inc
data16
add
shl
out
sub
in
sub
test
push
or
inc
xor
mov
xchg
cmps
stc
mov
push
test
stos
mov
ins
dec
sub
les
out
test
jmp
dec
jns
mov
inc
mov
mov
inc
loop
sbb
mov
jge
call
scas
iret
sbb
xchg
jbe
pop
add
or
cs
shl
loop
enter
jge
movlhps
push
pop
(bad)
and
dec
cmc
fiadd
mov
dec
js
rcr
arpl
bnd
sbb
mov
jl
xchg
mov
mov
mov
(bad)
mov
push
shl
mov
aaa
dec
mov
repz
add
and
(bad)
mov
fidiv
loopne
sub
ret
lds
adc
jb
ret
test
out
xor
ins
stc
pop
aas
cli
and
sub
sbb
or
loope
popa
pop
(bad)
cmp
inc
adc
ins
xchg
mov
mov
adc
sbb
bswap
cmp
mov
mov
into
(bad)
hlt
mov
cmps
int
in
retf
or
lea
sub
aad
imul
adc
sti
push
scas
cwde
aam
(bad)
cmp
loop
or
xor
loopne
add
call
cmp
jmp
pop
sub
cld
shl
ss
fs
adc
daa
lahf
jno
(bad)
pop
jns
mov
stos
and
aad
stos
cli
jg
add
xor
xor
loope
xlat
or
inc
cmp
xor
ss
push
jl
enter
stc
and
stos
fiadd
cmp
loope
mov
jl
ins
ds
inc
cwde
scas
sub
mov
mul
cmp
jae
mov
dec
add
pop
xlat
jle
push
cmp
loopne
adc
out
xor
inc
and
jbe
icebp
inc
adc
std
outs
and
pop
and
(bad)
pop
shl
dec
lods
lods
fnsave
and
push
(bad)
scas
lahf
jns
push
test
xor
pushf
cmp
sub
lds
(bad)
cmp
and
mov
shl
ins
adc
lods
ja
hlt
inc
and
js
sahf
fadd
add
movs
inc
aad
xchg
mov
es
add
sti
add
xor
popa
dec
xor
neg
pop
xor
(bad)
push
jge
js
bound
retf
and
aaa
inc
test
jno
es
and
movs
xchg
fucom
cmc
or
ror
fwait
push
and
pop
inc
add
ret
dec
push
xchg
inc
pop
add
jmp
pop
fld
bound
jmp
cmp
jno
cmp
dec
mov
adc
push
sub
sar
fidivr
in
(bad)
mov
nop
sub
icebp
loope
mov
adc
sub
mov
out
and
mov
jno
cmp
les
and
mov
and
aaa
je
outs
hlt
fadd
mov
rcr
loop
mov
nop
xchg
scas
jae
mov
out
push
test
pop
into
pop
adc
loope
es
jb
cdq
adc
lea
xchg
pop
(bad)
and
mov
out
mov
cmp
lds
(bad)
pop
imul
cmp
imul
sbb
push
mov
and
rcl
mov
and
(bad)
jbe
push
cwde
push
xchg
int3
jl
xor
push
xchg
outs
imul
cs
cmps
ret
call
mov
jb
xor
push
and
sbb
stos
popa
(bad)
sbb
and
sbb
inc
out
xchg
add
pop
cli
pop
push
out
xchg
adc
stos
sub
adc
sub
stos
dec
scas
fbld
(bad)
mov
leave
xor
xor
xchg
mov
and
or
or
icebp
aad
fdiv
js
lods
cmps
and
(bad)
repnz
jge
mov
call
adc
das
js
not
and
data16
mov
movs
data16
dec
in
fcomp
xchg
inc
mov
mov
test
fbld
push
in
mov
out
mov
push
out
scas
aam
jp
movs
loop
xor
cwde
xchg
imul
sub
add
mov
sub
(bad)
lods
pop
mov
rol
mov
dec
jmp
pop
mov
jge
jne
movs
ja
pop
shr
sub
pop
ret
retf
xor
stos
adc
dec
scas
mov
mov
adc
push
add
fwait
cld
or
ins
mov
lods
fwait
repnz
cs
adc
pop
aaa
and
pusha
into
sbb
and
pop
adc
ss
out
nop
jns
push
jmp
imul
push
and
cmp
and
sub
lods
in
test
and
mov
stos
movs
add
fnstsw
mov
into
pop
in
dec
les
test
mov
ret
or
inc
lahf
dec
xor
in
retf
pop
test
sahf
adc
je
(bad)
dec
into
dec
mov
push
in
adc
dec
cmps
jge
mov
int3
ja
push
pop
cdq
add
adc
ds
push
pop
jecxz
pop
pop
sub
fild
cmp
stos
mov
cmp
cmp
lea
push
aad
shl
or
inc
mov
jae
sar
cmp
dec
sub
test
cmp
pop
aas
je
inc
pop
ins
stos
in
inc
mov
cmp
add
(bad)
rcr
and
add
dec
inc
cmp
das
xchg
mov
pop
test
icebp
ja
pop
iret
fwait
test
pushf
loope
add
sbb
or
adc
(bad)
movs
cmp
add
repnz
jl
mov
mov
mul
add
out
sub
sub
sub
push
and
add
(bad)
(bad)
xchg
sahf
or
dec
mov
dec
sub
dec
cli
mov
je
cmp
add
cmp
ret
or
mov
loopne
dec
scas
push
sub
cld
adc
fisub
dec
jne
xor
or
int3
aam
shr
arpl
mov
dec
fild
mov
xchg
mov
sub
adc
add
mov
sbb
push
jecxz
test
pop
movs
es
popa
out
repnz
cmp
pusha
dec
not
cmp
test
pop
push
pop
hlt
loop
adc
jae
les
les
pop
cmp
xchg
xor
jecxz
mov
or
xchg
sbb
xchg
retf
clc
adc
xor
mov
pop
push
jbe
sbb
les
mov
std
int3
jmp
fbstp
sbb
sbb
jle
mov
sbb
ja
(bad)
stos
sbb
cmp
xchg
mov
sub
mov
(bad)
cli
enter
mov
lea
je
scas
outs
test
retf
mov
pushw
fidiv
and
add
mov
(bad)
fbstp
mov
cmps
dec
stos
mov
loopne
test
clc
push
sbb
lods
sub
sbb
or
out
jg
popa
mov
push
pop
out
rol
push
fwait
nop
pop
pop
pop
pop
jbe
xchg
sub
scas
(bad)
int
push
push
out
aam
nop
sbb
mov
cmc
dec
adc
and
add
pop
xchg
xchg
add
jnp
dec
sub
ror
add
push
lds
nop
shr
dec
adc
adc
aas
out
fisub
popf
in
pop
test
ror
loope
adc
and
sbb
stos
jl
adc
xor
pop
cdq
stos
cmp
inc
int3
mov
xor
or
test
fucom
pop
and
adc
pop
aam
adc
sbb
pop
test
push
jno
xor
pop
xor
push
clc
aas
mov
xor
or
scas
push
dec
in
stc
sbb
mov
mov
lods
retf
sub
std
sub
or
cli
adc
loop
fs
mov
mov
pusha
or
jae
in
lock
dec
data16
push
sbb
push
leave
push
repz
push
xor
int
push
xchg
ins
sbb
or
cmc
ds
mov
inc
adc
fisub
loopne
cmp
lahf
add
mov
mov
mov
aam
xchg
xor
scas
push
jo
ret
xchg
sub
(bad)
dec
in
mov
inc
out
in
and
repz
lahf
cmp
push
aaa
mov
cmp
out
push
ja
adc
mov
sbb
div
mov
pop
in
repz
daa
mov
fild
cdq
lods
ja
adc
int
push
xlat
dec
cmps
adc
je
jg
sbb
std
cs
sbb
adc
clc
pushf
and
mov
loopne
xor
cli
shr
xchg
dec
retf
mov
movs
cmp
dec
div
xlat
fidivr
push
mov
aad
aas
cmps
fmul
dec
loopne
mov
ret
imul
(bad)
mov
adc
sbb
ret
idiv
sar
xor
out
mov
(bad)
cmc
add
cdq
in
push
sub
mov
lds
fsub
inc
ins
into
lods
std
cmc
inc
or
jge
stc
ds
dec
jns
rol
pop
mov
adc
ins
mov
call
movs
mov
push
xchg
push
cli
test
outs
into
xlat
jg
call
(bad)
sbb
adc
es
sahf
push
adc
data16
fimul
into
cmps
lods
adc
jmp
sbb
movs
dec
imul
mov
mov
daa
test
loop
inc
adc
and
jno
es
mov
ins
dec
mov
or
xchg
xchg
imul
mov
adc
cmp
iret
mov
xlat
dec
jg
push
shr
or
adc
xchg
add
cmp
fadd
sub
imul
enter
jecxz
imul
scas
mov
cmp
mov
and
fisub
repnz
mov
mov
stc
sub
pop
mov
xchg
shr
loopne
retf
lea
xlat
ret
in
xchg
jae
xor
call
ja
mov
jecxz
xor
jo
js
xchg
lock
adc
xchg
xor
sbb
and
sbb
jle
and
sub
mov
xor
popf
xlat
sar
je
mov
and
ja
inc
add
or
outs
inc
retf
adc
pop
lods
pop
adc
pop
call
pop
xor
adc
xchg
xchg
inc
lods
mov
retf
out
nop
push
lea
jecxz
sahf
pushf
ret
leave
ins
jmp
add
fadd
xchg
sbb
scas
push
push
mov
inc
push
fisttp
xlat
push
jle
or
and
mov
sbb
aad
gs
(bad)
(bad)
mov
push
add
xlat
retf
popf
jge
xchg
rcr
popf
ins
aaa
retf
and
scas
xor
fidiv
out
sar
add
jmp
sub
imul
pop
ret
mov
sub
fist
mov
mov
fsubp
push
add
cmp
adc
dec
pop
fdiv
jg
pop
outs
push
addr16
dec
out
aad
shr
rcr
fmulp
xor
xchg
lods
xor
push
sti
xchg
fistp
jo
outs
mov
add
pop
(bad)
or
cmp
test
outs
mov
sti
mov
adc
inc
in
out
dec
and
(bad)
call
ins
gs
loop
push
arpl
cmp
dec
push
and
push
sub
adc
dec
enter
sti
jne
jb
jnp
scas
mov
ins
or
xchg
jecxz
jl
xlat
pushf
outs
fmul
addr16
xchg
xlat
bound
ins
sbb
sti
out
hlt
adc
xor
dec
jns
cld
jne
out
xchg
sub
push
int
mov
mov
je
mov
test
xor
jb
pop
pop
in
(bad)
mov
add
movs
scas
cmp
call
bound
xchg
mov
dec
daa
or
int
inc
cmp
xchg
adc
fucom
adc
inc
xor
cmp
sar
push
mov
mul
jo
rcr
(bad)
dec
pop
mov
mov
iret
addr16
mov
lods
sbb
xchg
dec
xor
inc
mov
push
or
clc
jae
cwde
fstp
retf
jge
test
xchg
rcl
hlt
adc
js
(bad)
and
lahf
hlt
add
jno
lds
int3
jecxz
cmp
sbb
mov
bound
add
inc
aam
aad
test
mov
push
mov
mov
imul
int3
dec
inc
mov
loope
sub
cmc
jne
push
mov
test
mov
mov
adc
lock
pop
nop
mov
pop
rcl
stc
or
cmps
pop
sbb
scas
push
das
movs
bound
mov
dec
sub
pxor
adc
lods
imul
xor
or
mov
sub
adc
and
mov
jmp
inc
movs
test
or
mov
in
and
pop
xchg
daa
sub
into
push
xlat
pusha
mov
(bad)
stos
ins
and
mov
icebp
pop
xor
add
loopne
outs
jl
ficom
call
pop
adc
scas
data16
pop
jnp
ja
inc
push
xor
(bad)
jne
fldcw
xchg
hlt
ins
mov
mov
push
pop
cmc
mov
add
push
push
leave
ja
sub
jge
jle
sub
loope
mov
jbe
aam
adc
retf
jecxz
dec
fs
mov
sti
daa
jb
pop
pop
ja
cmp
sbb
xor
repnz
out
mov
push
inc
mov
div
cmp
or
lods
cli
jecxz
ins
lock
std
mov
xor
pop
into
pop
dec
rcl
fs
sub
pop
sbb
gs
cmp
dec
add
dec
cmc
bound
in
data16
sar
xor
inc
outs
pop
dec
ds
aam
movs
je
popf
test
(bad)
mov
ret
ds
fbld
dec
pop
mov
xchg
inc
repz
sbb
int3
or
test
out
test
pop
pop
and
mov
sbb
dec
add
cmp
jo
rcl
jns
xor
jl
ret
push
inc
mov
mov
movs
jmp
adc
xchg
cmps
lahf
push
pop
sub
movs
mov
xor
jle
les
xor
je
and
aas
mov
cli
inc
mov
cwde
sub
and
in
pop
sahf
(bad)
xor
cmps
cld
stos
in
adc
jle
out
ror
ss
push
leave
test
mov
sahf
mov
addr16
jl
retf
pop
ins
out
sar
cmp
adc
retf
cs
cdq
adc
jns
test
and
xor
pop
sub
xor
jmp
pop
in
(bad)
fstp
add
jmp
cmps
stc
pusha
arpl
pop
fcmovne
into
js
arpl
or
sar
retf
add
movs
push
retf
push
dec
int3
enter
mov
dec
int3
cmp
mov
jbe
aas
(bad)
sub
shr
pop
cmp
push
jg
(bad)
mov
scas
add
sti
sub
enter
repnz
xchg
add
mov
push
shr
mov
fist
aad
pop
mov
and
pop
sar
adc
pop
imul
fxch
mov
sub
enter
retf
outs
(bad)
add
xchg
cmp
adc
loop
das
inc
rcr
stc
adc
push
in
xchg
xlat
push
jno
add
setb
out
xchg
repnz
ds
out
pop
lods
adc
in
ret
xchg
sbb
mov
mov
mov
div
repz
or
movs
enter
and
cdq
movs
push
jnp
imul
or
pushf
xor
(bad)
xchg
sub
push
pop
mov
xchg
(bad)
pop
js
aas
ss
js
pop
xchg
push
int3
inc
sub
daa
fimul
xchg
les
jg
or
repnz
cmps
push
pop
mov
into
cmp
add
inc
ret
sahf
mov
mov
aaa
mov
sbb
cmp
outs
add
xchg
mul
popf
push
arpl
push
jmp
lock
inc
retf
fs
out
push
mov
xor
mov
adc
pop
jb
inc
inc
mov
xor
adc
aaa
in
fwait
mov
mov
mov
sub
sub
xlat
loope
pop
pop
cmps
pop
pop
jb
xchg
pusha
mov
sub
popa
or
sbb
lods
mov
rol
jg
push
je
pop
(bad)
xor
imul
inc
dec
popf
inc
sbb
int
pop
lea
outs
clc
jno
and
arpl
xor
adc
mov
sti
and
xchg
jb
mov
mov
dec
sbb
pop
add
fs
or
rcl
sub
push
ins
xor
lea
push
mov
shl
mov
xor
mov
adc
test
ds
mov
xchg
jge
xchg
pushf
sub
(bad)
pop
mov
cs
daa
sub
(bad)
mov
xchg
or
jns
sbb
repz
dec
js
or
cmp
jo
push
push
ja
and
mov
cwde
dec
sub
adc
loopne
into
dec
mov
cld
scas
dec
sub
scas
mov
daa
aam
jae
in
sar
pop
xor
cmps
sar
mov
xchg
cvtps2pi
dec
hlt
pop
and
loope
jmp
scas
call
fnstenv
inc
shl
fxch
lds
test
mov
mov
or
sub
fbld
dec
cmc
dec
xor
jge
test
xchg
test
jns
mov
mov
push
or
mov
retf
sbb
test
dec
repz
sbb
shr
or
fcmove
idiv
dec
rol
push
dec
xor
jo
jnp
cmp
nop
jae
add
xchg
daa
aad
xor
ret
push
ins
pop
ins
mov
call
int3
and
xor
(bad)
hlt
xor
push
mov
rol
lods
sub
inc
jecxz
adc
jecxz
jne
and
pop
ins
test
es
outs
jp
mov
lahf
retf
(bad)
pop
sub
imul
fwait
retf
add
jle
pop
aas
aam
or
pop
inc
(bad)
iret
sub
mov
outs
jle
pop
cmp
dec
fiadd
ss
adc
or
add
aas
mov
cdq
or
sub
adc
or
cld
stc
inc
mov
push
mov
imul
pop
(bad)
not
cmp
fisub
push
stos
jmp
icebp
shr
push
imul
or
mov
sub
(bad)
and
dec
fdiv
push
pop
rol
dec
inc
daa
ja
cmps
ds
icebp
stc
fsubr
push
or
or
mov
fldcw
jbe
or
adc
lods
pop
xchg
xchg
jecxz
cmps
popf
sbb
je
pop
xor
sahf
das
and
mov
adc
fs
lock
xchg
cld
pop
fs
not
or
icebp
push
and
xchg
hlt
sbb
loopne
dec
daa
daa
loopne
dec
mov
add
pop
add
push
mov
sbb
(bad)
cmp
adc
movs
in
mov
fs
xlat
xor
pop
int
pop
or
mov
mov
mov
rol
(bad)
test
arpl
inc
outs
and
or
ins
ds
push
inc
out
test
imul
inc
xchg
pop
push
int
inc
push
cmp
sub
push
aad
out
push
push
(bad)
mov
xchg
push
scas
mov
sar
in
cld
je
test
call
or
add
pop
add
psubusb
sbb
sub
adc
pop
(bad)
cmp
ins
jb
xchg
push
test
(bad)
mov
out
(bad)
mov
fwait
push
(bad)
mov
dec
ficomp
ins
mov
test
ins
stos
les
repz
cmc
test
clc
out
mov
mov
loop
cmp
xchg
arpl
es
and
inc
int3
popf
jnp
mov
mov
mov
jg
pop
add
nop
mov
xchg
mov
mov
arpl
push
cmps
xchg
shr
sbb
mov
cmp
jle
pop
adc
lock
lahf
(bad)
in
adc
push
jle
call
retf
enter
add
jne
jae
test
jb
sub
enter
inc
push
dec
mov
cld
xchg
xor
sub
cs
mov
xchg
mov
cmp
mov
iret
sbb
dec
mov
or
mov
fcomp
pop
(bad)
aas
adc
mov
jns
jmp
outs
push
leave
lods
aad
inc
jb
push
cmp
and
mov
cmps
dec
leave
cs
jg
pop
ins
push
daa
mov
dec
jl
jecxz
push
jle
imul
lahf
xor
jecxz
sbb
cld
mov
push
jl
jg
adc
push
cmps
pop
test
xchg
aaa
rcl
movs
into
xor
ret
mov
out
dec
cmp
sub
ja
inc
push
fdivr
psubsb
cli
push
xor
xchg
inc
je
push
mov
idiv
xchg
ds
mov
mov
sub
xchg
outs
clc
fdivr
nop
mov
sbb
and
stos
add
sbb
and
lods
cmp
lock
jno
jle
or
ror
je
xchg
mov
dec
pop
test
test
cmp
dec
cmps
sub
(bad)
push
movs
fadd
push
xchg
push
adc
repnz
(bad)
imul
add
aad
aad
dec
(bad)
cmps
in
scas
pop
cmp
pop
repz
test
sub
xchg
pop
outs
sbb
enter
shl
push
outs
and
jmp
arpl
fldenv
xchg
adc
scas
mov
dec
fisttp
add
pushf
or
mov
retf
sub
and
and
inc
pop
fdivp
inc
push
xchg
sti
js
mov
das
fst
movs
and
mov
mov
shl
mov
jne
dec
mov
xchg
mov
inc
pop
mov
push
xor
neg
dec
mov
dec
adc
pop
jmp
add
movs
mov
aam
add
loope
lock
(bad)
(bad)
sub
or
sub
jae
std
in
test
into
and
jne
sub
xchg
imul
das
mov
jb
push
mov
push
cmp
into
push
mov
out
pop
sbb
out
cwde
stos
rcl
xchg
jecxz
ja
mov
push
retf
pop
mov
ins
cmp
adc
pop
ds
lods
scas
push
lock
and
(bad)
mov
mov
push
and
shl
adc
push
cmp
fsub
and
mov
leave
cs
cmp
pop
xor
mov
mov
jno
pusha
pop
xor
mov
jg
mov
ror
jle
pop
call
or
(bad)
cmp
xor
shl
push
cmps
enter
mov
sbb
and
icebp
test
in
ds
mov
cmp
adc
sub
xor
push
mov
sbb
bound
mov
push
(bad)
js
cmp
pop
pop
or
jo
cdq
adc
cmps
sub
push
into
cmp
in
and
add
out
mov
(bad)
cmc
retf
adc
pop
jnp
repnz
enter
push
or
(bad)
lock
xchg
push
out
repz
push
addr16
or
pusha
(bad)
mov
mov
xchg
mov
mov
std
aaa
hlt
clc
scas
mov
ror
push
xor
cs
shr
push
es
push
imul
ins
push
fcom
shr
fild
movs
or
imul
xchg
stos
pop
stos
inc
jl
cmps
stos
dec
xor
in
mov
(bad)
int3
sbb
xchg
jl
pop
das
jb
add
bound
or
popa
loop
clc
push
cdq
xor
fidiv
popw
add
lea
add
adc
push
or
sti
jb
mov
adc
stos
call
push
rep
and
sti
xchg
xchg
adc
inc
pop
or
cmp
adc
retf
call
shl
outs
das
call
xor
mov
pop
xchg
xchg
and
jg
ret
mov
call
jge
repnz
cmp
test
loop
pop
mov
jno
popa
mov
pop
inc
xor
mov
pop
cmp
(bad)
in
int
jmp
or
mov
dec
bnd
add
sbb
and
mov
shl
cmp
add
out
mov
or
(bad)
(bad)
imul
sbb
jbe
in
gs
in
lea
push
cld
cdq
mov
pop
fbstp
dec
out
and
mov
push
mov
xchg
mov
xor
or
adc
push
mov
nop
add
jb
fidivr
jmp
mov
loope
xlat
int3
dec
outs
adc
(bad)
in
inc
or
mov
mov
js
movs
and
cmp
outs
test
outs
rcr
outs
stc
and
(bad)
or
pop
test
aaa
xor
xchg
pop
(bad)
mov
jmp
pop
lods
scas
std
sub
xchg
neg
mov
shr
enter
mov
dec
in
ret
sub
add
cmp
dec
inc
pop
lea
fdivr
mov
js
jge
call
dec
movs
xor
cs
push
jne
mov
adc
aaa
xor
lea
leave
pop
cmp
dec
mov
daa
loope
and
mov
inc
push
mov
mov
xor
ins
xchg
rcl
in
(bad)
leave
arpl
add
popf
xor
(bad)
cmp
push
sti
rcl
cdq
sbb
mov
pop
call
adc
(bad)
mov
sbb
mov
lahf
rol
je
mov
jp
stc
xor
mov
loopne
fwait
ret
push
push
out
mov
cdq
ins
nop
mov
jae
dec
das
daa
xchg
xor
mov
sub
and
xor
scas
sbb
cmps
sahf
xchg
stc
ficomp
cmc
add
out
sbb
sub
std
clc
and
dec
lds
xchg
fucomp
sub
pop
pop
pushw
pop
push
cld
ret
fld
test
cmps
jno
push
xor
dec
inc
lds
mov
adc
iret
mov
test
xor
fcmovb
test
push
call
js
(bad)
out
or
ss
retf
jns
push
(bad)
mov
dec
pop
jns
mov
inc
push
lahf
and
pop
sub
jmp
jne
fwait
gs
jno
fild
xlat
or
fild
or
mov
inc
call
pop
scas
mov
inc
stc
sar
sbb
jge
push
sub
shl
adc
sti
or
jge
cmp
popa
arpl
push
inc
xchg
push
jno
push
inc
jbe
js
neg
pop
aad
dec
sbb
mov
sub
dec
push
jno
nop
ins
push
popa
pop
sbb
fld
sbb
lods
or
jg
je
sub
arpl
fistp
das
inc
jmp
loope
or
pop
jge
cmp
fidivr
in
ror
test
rol
mov
sub
adc
stc
adc
in
scas
push
cmps
and
call
xor
and
pop
mov
imul
in
jmp
mov
adc
fwait
jmp
pop
test
mov
nop
pop
mov
shl
idiv
retf
add
je
sbb
inc
ret
mov
or
sti
fst
add
xchg
push
ret
sub
scas
rcr
je
daa
pop
(bad)
in
leave
stc
adc
mov
lods
pop
imul
push
dec
call
cmps
aas
or
les
mov
mov
movs
pop
sbb
(bad)
imul
lock
inc
mov
add
push
jle
retf
imul
jge
mov
outs
jne
jno
or
scas
imul
inc
icebp
(bad)
jle
pushf
stos
fucomip
icebp
retf
mov
push
jle
lock
adc
clc
push
or
cmps
fldenv
or
arpl
jbe
jecxz
xor
adc
dec
aaa
inc
popf
iret
push
sbb
iret
push
sub
ja
repz
xor
out
pop
dec
cmp
or
in
dec
adc
mov
or
cmp
sub
and
add
push
nop
cli
(bad)
into
outs
bound
repz
int3
cmp
int
and
into
xchg
ins
mov
inc
mov
fsub
test
xor
cmp
pop
xchg
ror
adc
jb
test
push
cmc
sti
ret
int3
sbb
xlat
popf
jecxz
mov
aam
sbb
call
sbb
loope
push
in
pushf
inc
ficom
mov
fwait
adc
adc
or
mov
cmp
or
xchg
cmc
and
add
dec
(bad)
gs
imul
xor
jae
adc
lock
mov
fs
adc
mov
ret
(bad)
(bad)
xor
aas
enter
movs
mov
out
mov
adc
test
sbb
dec
mov
lods
mul
dec
loope
ret
inc
xchg
add
sbb
cmp
mov
xor
pop
test
add
mov
ror
mov
stc
xchg
jae
sahf
adc
arpl
jnp
push
js
aas
das
add
es
dec
fsub
imul
sub
push
pmaxub
pop
mov
sub
loope
punpcklbw
icebp
sahf
stos
sbb
sbb
add
fild
cmp
stc
sbb
aam
dec
inc
test
adc
int3
cmp
ror
cmps
aas
cmp
mov
jbe
mov
cdq
xchg
bnd
je
adc
daa
fxch
arpl
ret
sub
push
enter
xchg
adc
pop
xchg
repnz
imul
cmp
sar
dec
das
rcr
jo
sbb
xchg
inc
xlat
and
pop
dec
into
sbb
push
rcl
pop
jae
cmp
je
mov
inc
push
mul
fadd
xor
push
cdq
mov
adc
mov
jmp
pop
loope
xchg
mov
pop
das
int3
push
loopne
ins
pop
mov
inc
inc
ins
and
inc
mov
sub
outs
lods
test
mov
push
jno
daa
je
xchg
test
push
adc
outs
lahf
inc
test
jmp
xchg
jmp
adc
adc
out
sahf
mov
jmp
cdq
(bad)
push
or
ror
mov
jg
inc
sar
fcom
jp
xchg
retf
jmp
dec
fst
out
cld
sub
es
inc
mov
call
fidiv
dec
push
push
pop
or
push
sti
arpl
lea
movs
(bad)
fsub
and
jnp
xor
push
test
xchg
inc
jmp
mov
in
or
stc
mov
iret
es
(bad)
or
and
cdq
jne
clc
adc
or
xor
push
mov
enter
vmovdqu
call
push
mov
cdq
mov
iret
inc
or
pop
inc
xor
or
pop
cmps
jmp
inc
int
inc
in
adc
xlat
mov
out
cmp
bsf
push
bound
aad
jnp
dec
adc
in
xor
js
xchg
int
fld
xchg
adc
jno
pop
inc
sub
mov
and
fwait
or
sar
cwde
aaa
aaa
std
hlt
cmp
push
sub
inc
out
xchg
mov
int
cld
into
jae
or
and
popa
jb
iret
fnsave
dec
xor
dec
lds
pusha
dec
movs
es
adc
push
adc
in
xor
mov
mov
inc
pop
xchg
mov
and
jne
cli
inc
inc
inc
pop
sbb
dec
push
mov
lock
leave
dec
jae
mov
inc
stos
test
js
out
xchg
jbe
and
sbb
test
retf
cs
push
push
push
out
out
add
(bad)
(bad)
stc
ins
push
sub
or
loope
aad
push
jge
ror
aaa
sbb
test
call
push
push
pusha
int3
jg
or
mov
(bad)
call
sbb
aaa
push
xor
mov
inc
pop
lods
push
sub
dec
cli
retf
leave
stc
lock
jl
int3
int
es
and
xchg
xor
(bad)
mov
push
and
push
imul
jae
dec
mov
pop
and
into
jge
mov
or
jne
es
cmp
in
or
mov
mov
ja
cs
test
cmps
rol
inc
mov
les
jge
imul
add
jp
sub
add
mov
scas
mul
and
dec
lea
mov
fwait
aaa
sbb
in
lock
popf
and
cli
loopne
jae
aam
lods
rcr
cmp
xchg
mul
vmovntps
mov
jmp
cwde
xor
lods
test
sbb
xchg
xor
xchg
sub
movs
xchg
out
and
outs
dec
push
loop
popf
jle
xchg
sbb
jnp
push
test
sti
dec
jmp
xchg
(bad)
pop
loope
stos
ret
inc
pop
xchg
dec
inc
inc
mov
test
cmp
sub
retf
jge
pop
shl
data16
mov
xchg
jns
jb
imul
pushf
add
ja
jb
xor
cmp
in
or
icebp
inc
sbb
and
jmp
jae
and
sbb
mov
jg
iret
mov
sbb
pop
cs
leave
scas
jp
cs
add
retf
retf
xchg
cld
or
and
cwde
inc
(bad)
shl
push
jne
movs
mov
mov
add
jmp
(bad)
outs
pusha
pop
imul
cwde
jecxz
lds
jnp
push
retf
test
dec
jbe
mov
cli
data16
(bad)
out
add
or
or
fcom
les
or
in
inc
movs
out
out
fwait
cdq
outs
fs
fsubr
mov
outs
pop
call
(bad)
mov
sub
popf
fs
jmp
pop
call
and
push
jle
into
pop
test
sbb
stos
xor
or
mov
mov
std
jp
je
mov
test
mov
imul
lock
adc
mov
jns
out
(bad)
or
lods
scas
(bad)
aaa
nop
jge
mov
jns
cmp
jno
mov
jns
ret
mov
int3
in
jle
pop
xchg
out
aaa
fbld
xchg
xchg
mov
jg
aas
pinsrw
pop
push
in
inc
(bad)
and
inc
dec
ret
or
inc
popa
mov
jmp
es
adc
mov
sub
dec
xchg
imul
outs
sub
jno
xchg
push
xchg
retf
add
inc
dec
cmc
adc
inc
mov
jmp
addr16
sbb
pop
add
sar
cld
add
cmp
sar
mov
loop
or
push
(bad)
bound
mov
movs
and
mov
dec
outs
test
sub
out
or
aaa
rcr
jnp
gs
fnclex
mov
mov
stc
pop
jge
stc
push
sub
hlt
cmp
xor
cvttps2pi
xor
test
aas
sub
aam
gs
jle
loopne
sub
js
cmc
(bad)
std
aas
imul
xchg
dec
(bad)
dec
mov
adc
xor
das
aam
loopne
cmp
jne
and
lahf
jmp
xchg
push
pop
xchg
(bad)
sub
push
and
(bad)
and
inc
shl
ret
jbe
xchg
xchg
lahf
xor
push
and
leave
iret
pop
jns
fadd
xlat
shr
std
ins
les
retf
cli
ins
bound
popa
inc
push
shl
aad
xor
out
mov
pop
les
add
pop
(bad)
inc
stos
inc
sub
std
jae
dec
jecxz
or
int3
inc
jb
sbb
sahf
sub
sbb
mov
stc
pushf
out
cld
(bad)
mov
push
lea
push
test
cmp
xor
shl
int
retf
lods
xchg
add
fwait
mov
xor
jb
fcmovu
dec
mov
fistp
and
fucomi
shl
sub
fisttp
loopne
cdq
out
or
mov
xor
sub
and
adc
sbb
jne
hlt
mov
push
push
lahf
inc
cld
ja
in
push
pop
je
and
cmp
aam
and
sub
jg
add
cmp
inc
fdivrp
or
xchg
gs
add
adc
mov
push
fst
stos
push
sbb
mov
pop
push
aaa
dec
test
lods
arpl
add
leave
pop
push
ins
hlt
mov
scas
push
(bad)
jb
xor
jbe
aaa
mov
xchg
mov
mov
sub
(bad)
arpl
call
mov
stos
pushf
fcomi
lods
xor
sbb
mov
sar
outs
cmc
and
into
add
cli
aaa
add
js
and
jle
out
rcr
je
xor
loope
cwde
cmp
xchg
ss
mov
jne
ror
cmp
outs
pop
cmp
in
cmp
sub
adc
imul
adc
mov
jle
cmp
adc
rcr
imul
mov
xchg
add
mov
fldlg2
pop
push
js
mov
mov
adc
or
sbb
pop
or
sub
add
and
pop
pop
out
movs
fdivr
and
xor
data16
push
loop
mov
pusha
into
lock
xchg
repnz
daa
call
jbe
jle
adc
xor
inc
stos
jae
jl
ss
xor
loope
enter
jbe
xchg
mov
mov
xchg
adc
push
sbb
(bad)
pop
mov
mov
sub
in
shl
cmp
int3
push
sbb
jmp
pop
or
hlt
por
xor
push
ret
xchg
xchg
pop
cmps
in
cmp
xchg
ja
add
iret
imul
jmp
jnp
push
dec
cmps
adc
fs
fwait
sub
dec
in
sar
movs
call
xchg
or
and
stos
fs
out
pop
xor
and
xchg
jae
lahf
xchg
rol
popf
inc
inc
sbb
test
pop
push
fs
inc
sbb
aad
jl
aam
pop
sbb
sbb
push
ret
xor
push
sahf
outs
push
fbld
packsswb
add
arpl
sbb
mov
and
sub
mov
sbb
sub
out
lea
pop
shr
imul
mov
mov
in
adc
xchg
or
fidiv
jnp
sbb
xchg
pop
or
xor
fwait
mov
(bad)
xchg
jg
into
mov
repz
cli
push
dec
dec
idiv
sbb
xchg
mov
pop
mov
in
cmp
stos
pop
mov
lods
int
lahf
les
or
(bad)
in
mov
or
pop
das
outs
mov
and
jl
jnp
xor
nop
xchg
cmp
jp
imul
shr
mov
outs
js
pop
rcr
jns
or
rol
call
pop
dec
pop
mov
add
shl
xchg
ret
loope
dec
jnp
xchg
ja
push
imul
sub
push
adc
mov
and
push
out
imul
mov
push
in
push
xor
jp
scas
xchg
push
jmp
stos
xchg
cdq
popf
pop
leave
imul
fistp
loop
push
push
popf
sub
(bad)
push
or
cmc
out
cmp
mov
sbb
jge
xor
ja
stos
js
cmp
and
movs
jmp
mov
adc
mov
inc
add
out
or
enter
pushf
or
xor
and
ret
xchg
test
in
js
add
add
mov
enter
in
adc
push
(bad)
mov
xchg
cmps
jne
movs
mov
mov
dec
push
(bad)
xor
mov
xchg
js
push
or
in
sbb
rcl
push
xchg
jecxz
push
push
scas
clc
dec
adc
push
movs
xchg
mov
aad
in
outs
xlat
or
fdiv
in
js
sub
xor
xor
or
loop
mov
jecxz
mov
mov
and
cmp
hlt
cld
mov
dec
loop
pop
add
and
sub
mov
dec
lea
ss
dec
cmps
cdq
xchg
in
(bad)
aam
lea
inc
jb
(bad)
jmp
cwde
xor
push
pop
xchg
push
fnsave
ror
js
adc
mov
daa
aas
ins
cmp
shr
inc
icebp
hlt
nop
or
xchg
movs
mov
in
in
push
inc
jns
mov
pop
mov
lock
mov
arpl
call
push
bound
mov
pop
or
mov
dec
loop
pop
push
jg
jbe
dec
out
cmp
pop
je
adc
push
loop
shl
adc
adc
sbb
mov
add
jo
stc
adc
or
dec
sbb
cmp
enter
xchg
in
xchg
dec
aad
int
test
addr16
cs
jno
mov
int
cwde
jp
jnp
add
es
sbb
xchg
stos
std
mov
out
adc
xor
cld
fadd
sub
xor
inc
xor
inc
or
or
or
or
int
adc
mov
adc
jb
xchg
inc
push
rcr
cli
cld
retf
sbb
push
add
add
dec
dec
arpl
cmp
fwait
adc
jg
and
(bad)
nop
jb
add
bound
leave
pop
xchg
and
or
imul
test
pusha
(bad)
xchg
push
(bad)
mov
icebp
cmc
mov
div
loopne
push
dec
iret
addr16
or
adc
and
in
scas
xchg
and
iret
jge
jno
add
cmp
sbb
sbb
push
fcmovnbe
mov
hlt
xlat
mov
mov
xor
cmp
push
imul
and
call
ins
jno
aad
inc
inc
fs
sub
stc
sub
add
jl
mov
pop
retf
pop
xchg
dec
add
adc
cdq
repz
aas
(bad)
repnz
adc
or
stc
xlat
ret
mov
mov
movs
pushf
outs
mov
scas
lods
call
cmp
adc
cmp
mov
test
jae
(bad)
push
pushw
test
adc
jecxz
push
pop
pop
jecxz
scas
and
(bad)
cmp
bswap
movs
popf
out
jb
in
xchg
das
add
in
repnz
ror
ds
lds
or
das
rcl
adc
sbb
cmc
xor
test
dec
add
dec
jle
inc
mov
bound
rcl
test
cmp
es
int3
loope
aaa
dec
sub
adc
fnstenv
loope
ror
sub
(bad)
mov
mov
loop
mov
sub
xor
xchg
cmp
push
dec
jb
sub
and
or
gs
daa
in
rol
ret
add
cmps
cmp
mov
xchg
test
and
xor
inc
jecxz
push
(bad)
mov
adc
femms
test
jns
je
jne
dec
pop
pusha
adc
and
mov
cmps
stc
push
(bad)
push
fimul
clc
xchg
inc
xchg
pop
jmp
cmp
cli
cmp
adc
ss
jno
inc
mov
xor
inc
push
push
add
sub
iret
mov
cdq
int
push
sbb
jg
inc
leave
jg
in
pop
jge
push
lds
sar
xchg
push
xor
push
fs
cmp
ins
mov
ror
ret
mov
es
jle
add
out
pusha
jp
jp
push
mov
(bad)
jmp
mov
out
sub
and
(bad)
sub
xchg
mov
cs
fst
sti
adc
push
xor
ja
pop
clc
mov
cmps
jb
jmp
sbb
cmp
js
xchg
loop
jl
xchg
shr
fstp
fldenv
(bad)
bound
mov
mov
stc
out
hlt
sbb
mov
inc
(bad)
push
add
lods
pop
hlt
inc
push
fstp
adc
cwde
in
xchg
jns
xor
retf
aad
and
mov
aam
cmps
adc
sub
sbb
(bad)
cmp
mov
jno
movs
es
lods
add
sub
push
xor
retf
mov
push
and
or
call
inc
dec
mov
js
dec
stos
fst
rcr
pushf
push
pop
das
and
sbb
shr
xchg
in
cmc
data16
mov
xchg
xchg
shl
mov
push
sti
icebp
xchg
push
fs
idiv
scas
cdq
mov
nop
push
jl
(bad)
call
cmps
cmp
and
pop
(bad)
pop
jae
or
mov
lahf
mov
jp
cmp
jle
xchg
and
mov
cld
dec
xor
in
mov
jne
nop
imul
jo
rcl
leave
jge
add
repnz
mov
retf
mov
inc
xor
dec
movs
outs
sub
push
clc
(bad)
push
mov
sub
dec
cmp
pop
ss
retf
div
jecxz
xchg
fdivr
int
repz
imul
dec
adc
sbb
lock
sbb
inc
addr16
test
hlt
add
pop
cmp
jb
and
aas
hlt
xchg
sahf
movs
push
js
dec
or
jae
aad
add
push
inc
mov
push
lods
enter
shr
or
pop
imul
add
pop
xchg
pop
jmp
into
outs
or
test
jne
add
fstp
mov
mov
push
or
mov
push
jmp
lock
cmp
pop
xor
jmp
xchg
aam
out
sub
pushf
jne
out
dec
and
mov
mov
push
adc
xsave
das
in
lods
jne
and
aad
sbb
mov
mov
mov
clc
retf
dec
sbb
aas
popf
aam
jg
pop
dec
loop
inc
mov
call
mov
shr
dec
mov
mov
mov
mov
inc
mov
or
sti
scas
inc
dec
mov
mov
add
mov
xchg
xchg
mov
out
retf
pop
daa
loopne
ret
test
jnp
loop
out
cmps
in
pushf
enter
not
lods
repnz
jnp
mov
xlat
aad
imul
int3
mov
ror
pop
sahf
mov
mov
outs
ret
mov
rol
fwait
ror
js
into
aam
add
adc
xor
sub
jmp
xchg
ror
mov
pop
clc
outs
ror
or
adc
xchg
int
add
in
xor
cmp
mov
push
lods
(bad)
jmp
adc
inc
enter
loopne
leave
push
push
sbb
adc
xlat
or
repz
enter
test
and
hlt
imul
or
dec
cs
mov
cmps
jl
inc
mov
retf
adc
pop
dec
out
lahf
pop
sahf
mov
mov
dec
mov
inc
xor
lods
push
out
jb
sub
clc
(bad)
dec
pop
mov
fldcw
shr
test
push
outs
sahf
push
mov
sub
std
iret
sub
cdq
(bad)
enter
clc
fsubr
fwait
pop
retf
push
mov
movnti
pop
adc
cmp
aad
sbb
jle
fsub
pop
inc
repnz
(bad)
daa
jmp
mov
fldenv
dec
sub
lods
(bad)
ja
and
cmps
(bad)
mov
sar
mov
dec
cli
into
push
add
pushf
cmp
movs
shr
dec
dec
imul
xlat
iret
mov
adc
fs
adc
xchg
loop
cmp
adc
nop
out
mov
ret
movs
or
sti
aad
sbb
xchg
mov
daa
push
mov
gs
jp
mov
cmp
mov
ret
mov
sahf
scas
inc
clc
mov
outs
jge
jbe
imul
out
movs
rcl
lds
sub
mov
sbb
dec
mov
push
inc
inc
inc
dec
jae
movs
push
push
(bad)
inc
call
(bad)
and
dec
push
(bad)
xchg
lods
les
ds
imul
je
add
jns
sahf
in
jecxz
add
iret
cmps
xchg
outs
outs
mov
int3
out
jnp
stc
mov
fbstp
outs
cmp
cld
call
leave
fs
into
imul
add
(bad)
mov
pop
mov
jo
mov
mov
aad
xlat
cld
lahf
jecxz
fcmove
mov
loop
nop
(bad)
fist
ja
push
loope
sub
lods
into
inc
jne
xchg
je
das
pushf
push
js
popf
inc
adc
cs
in
leave
pusha
mov
cmp
sahf
mov
sub
fisub
cmp
into
inc
sub
js
add
aad
inc
inc
pop
sbb
hlt
cmc
or
and
jnp
sbb
pop
(bad)
int
pop
push
imul
les
out
pop
jb
fld
cwde
js
jne
rcl
sti
(bad)
fld
cmp
test
sub
ins
call
icebp
mov
inc
push
dec
lahf
sub
xchg
add
int
jecxz
mov
movs
(bad)
cld
adc
dec
mov
icebp
inc
imul
sti
ins
rol
pop
push
mov
mov
ja
je
jnp
inc
xor
inc
adc
nop
or
jp
pusha
sub
mov
sbb
popa
xchg
or
jno
mov
stc
mov
(bad)
xor
retf
adc
dec
in
in
xchg
dec
push
or
xlat
add
mov
inc
add
xor
ror
data16
imul
jmp
repz
inc
dec
add
pop
xlat
xchg
ins
mov
jg
(bad)
push
pushf
mov
das
push
xor
(bad)
sbb
pop
out
mov
xchg
push
fisttp
(bad)
mov
cli
retf
(bad)
mov
pop
pop
test
xchg
cmps
and
xchg
or
sbb
pushf
xchg
mov
gs
call
jno
mov
sub
movs
mov
mov
nop
cdq
push
pop
movs
(bad)
shl
aam
cmp
ror
or
sti
movs
add
sbb
dec
dec
xor
cmp
fdiv
adc
sbb
dec
out
push
push
jo
dec
sbb
dec
retf
sbb
push
das
call
inc
or
or
rol
push
mov
sbb
mov
xchg
or
cli
mov
call
dec
mov
fidiv
dec
shl
xor
and
push
sbb
std
push
pop
and
and
and
ud0
lods
xchg
dec
cmp
add
pop
ficomp
outs
idiv
cmp
fs
add
nop
or
pop
repnz
bound
xor
sub
jns
mov
jbe
nop
inc
pop
std
cdq
xlat
fstp
test
movs
std
xor
ja
mov
rol
push
scas
es
cmps
cmc
add
in
jmp
mov
mov
push
mov
mov
push
adc
mov
add
out
jp
mov
and
xchg
scas
mov
cli
sbb
mov
call
rcr
(bad)
mov
loope
xor
lods
jg
shr
fsub
and
je
fadd
lds
hlt
sbb
pop
leave
sbb
mov
cmps
add
js
mov
clc
adc
push
mov
pop
pop
jg
repnz
in
sub
cmp
and
pop
nop
xor
daa
push
mov
pop
xor
addr16
fisub
pop
ret
jmp
push
js
inc
pop
lea
sbb
pop
dec
xchg
aaa
out
jle
mov
mov
inc
mov
out
xlat
imul
repnz
or
sti
mov
dec
pusha
shr
pop
sbb
or
pushf
daa
push
inc
popf
cmps
jmp
iret
push
jne
jl
or
mov
jl
or
int3
fldenv
pop
pop
push
iret
arpl
fdiv
shr
xchg
repz
jmp
jmp
bound
clc
lds
xor
nop
scas
ret
xchg
div
cs
out
inc
popa
dec
popf
xor
xor
push
lea
cmp
jge
mov
cmp
ins
or
pushf
jmp
jae
dec
xor
lahf
xchg
dec
lods
arpl
add
sbb
xchg
out
and
dec
ret
scas
sub
xchg
jno
(bad)
fiadd
cmp
push
je
xor
sub
dec
hlt
dec
xor
dec
xor
jbe
add
mov
mov
in
pop
inc
fs
fbstp
sbb
pop
mov
ins
xlat
lock
fucomp
int3
nop
loopne
int3
sbb
adc
cld
in
adc
enter
push
adc
push
cmps
dec
leave
mov
cmp
rsqrtps
xor
lock
xor
push
scas
add
frstor
xchg
scas
ds
aas
clc
ins
pop
sti
call
enter
inc
(bad)
fwait
ins
in
dec
mov
mov
jg
test
cli
inc
add
mov
pop
mov
leave
gs
inc
inc
arpl
mov
add
add
sub
push
lds
(bad)
sub
mov
stc
add
retf
pop
addr16
lds
jne
inc
loope
cli
push
fcmovbe
and
rcl
test
sub
sbb
cmp
push
or
push
dec
inc
xchg
(bad)
push
mov
ins
in
adc
fdiv
dec
fmul
lea
fstp
push
sub
add
bound
mov
(bad)
mov
jmp
pop
jl
stos
mov
lods
std
inc
div
jo
stos
aaa
std
nop
in
jbe
sbb
xchg
clc
nop
test
adc
pop
cmc
pop
leave
jge
push
push
jns
mov
mov
and
and
stos
xor
add
and
lock
sbb
mov
cmp
mov
and
ror
sbb
das
popf
fisttp
cdq
dec
jecxz
cmp
push
mov
leave
add
push
xor
in
adc
nop
inc
outs
pop
ret
dec
xor
inc
(bad)
jecxz
cmovnp
jge
cmp
add
out
test
mov
int
jb
clc
into
out
adc
mov
fnstenv
outs
cmps
nop
dec
pop
mov
dec
fadd
sbb
lods
push
loopne
je
mov
jns
mov
bound
cmp
jge
enter
in
daa
xor
jno
gs
pop
ins
jecxz
xchg
mov
dec
in
data16
pop
adc
int
sub
cmp
push
inc
js
xor
xor
cmp
sysexit
cmp
hlt
aam
ret
retf
inc
pusha
out
push
jns
fwait
inc
and
movs
or
sbb
sbb
dec
xor
adc
and
push
popa
bound
mov
and
cwde
mov
jnp
(bad)
mov
push
mov
inc
or
mov
pop
fcomp
fld
not
movs
add
test
inc
jne
push
rcl
push
mov
mov
adc
mov
or
pop
xor
retf
test
xchg
cmps
in
jp
test
and
sbb
mov
bnd
fs
inc
jns
ror
data16
and
and
loope
mov
iret
clc
sub
jns
mov
movs
sar
mov
xchg
add
out
cmp
cmp
push
add
arpl
les
mov
mov
out
sbb
fisttp
js
push
add
repz
cli
jmp
test
(bad)
call
sub
xchg
jne
push
push
movs
stos
sub
scas
cmps
sbb
test
(bad)
mov
into
test
std
or
cmp
cmps
popf
mov
daa
xor
mov
mov
stos
in
cmp
mov
rol
in
or
inc
pop
das
xor
sbb
mov
cmp
lods
pop
push
sar
or
(bad)
add
inc
jns
(bad)
fcomp
dec
int3
imul
jmp
mov
jmp
push
scas
adc
jp
xlat
jnp
mov
leave
(bad)
fimul
loopne
jne
daa
in
jb
aaa
or
jle
in
mov
jno
imul
mov
push
xchg
fwait
in
sbb
shl
(bad)
fidivr
xor
or
retf
gs
leave
cld
mov
inc
mov
std
cld
push
(bad)
push
pop
ins
or
aad
(bad)
scas
adc
push
mov
rcl
jecxz
popf
clc
ret
pop
cli
pushf
jne
ins
mov
sar
int3
int3
mov
scas
fsubr
or
sub
(bad)
xor
loopne
(bad)
sbb
sti
push
xchg
fmul
call
pop
gs
push
cmp
add
out
dec
pop
shl
cmp
push
int
mov
add
xor
mov
and
push
adc
add
and
cmp
jle
imul
sub
das
xlat
push
inc
inc
push
xchg
test
jns
mov
fsubp
test
push
nop
inc
into
inc
push
pop
jecxz
pop
pusha
in
cli
dec
and
push
add
mov
mov
sub
sub
call
inc
push
fs
push
and
or
in
xchg
pusha
add
or
lahf
jecxz
sub
xor
pop
push
pushf
ret
or
and
dec
repnz
pop
aad
test
rcr
scas
and
stos
add
jno
adc
and
push
sbb
add
sbb
imul
jmp
inc
push
mov
mov
(bad)
bound
mov
stc
xchg
stos
pusha
sbb
xor
(bad)
push
mov
push
sbb
jge
in
mov
enter
inc
push
push
xchg
inc
lahf
ja
xor
rcl
lahf
fimul
fnstenv
or
pop
les
out
xchg
mov
imul
push
cmps
fnstsw
les
pusha
and
sub
jecxz
mov
test
cmp
icebp
test
add
or
cmp
mov
mov
shr
sub
pop
lods
test
hlt
test
jnp
ror
es
sbb
imul
mov
and
jecxz
jg
sahf
mov
or
fsubr
inc
or
push
sti
mov
push
inc
jb
pop
adc
jb
and
mov
bound
iret
mov
inc
mul
nop
nop
iret
sahf
retf
hlt
cmp
xor
sub
pop
int3
iret
mov
jecxz
repnz
mov
inc
nop
(bad)
mov
push
pop
xchg
popa
push
retf
push
xor
jns
repz
push
jmp
fisttp
and
push
add
rcl
ja
cdq
dec
xlat
movs
pop
lds
pop
push
lock
cmp
dec
or
xor
mov
sub
int3
popf
jp
in
adc
or
pop
cmp
mov
xor
add
adc
mul
dec
inc
adc
jb
adc
push
mov
cwde
cmp
call
jmp
lahf
add
mov
call
pusha
push
in
inc
fisubr
inc
mov
mov
pop
cmp
add
add
imul
ja
inc
push
and
dec
inc
lods
iret
adc
or
mov
cdq
fisttp
xchg
sahf
jp
jbe
fwait
add
loope
(bad)
mov
xchg
mov
loopne
out
stos
pusha
sbb
imul
push
outs
bound
stos
sbb
or
mov
jp
or
sbb
mov
push
mov
mov
push
fs
add
pop
cmp
out
popa
jecxz
mov
add
aam
and
ret
dec
pop
inc
sub
and
mov
xchg
jo
popa
movs
mov
inc
push
jmp
gs
jp
jg
lea
jecxz
add
inc
adc
push
jo
push
lods
and
je
stos
cmps
cmps
xchg
jg
hlt
dec
sbb
fldcw
jmp
inc
(bad)
add
fidiv
ds
cmc
xor
std
xchg
dec
adc
xor
call
ss
sbb
out
aas
or
hlt
or
or
aas
movs
cmp
out
mov
out
into
sub
nop
jmp
cmp
cmc
xchg
cmc
call
jp
jno
ret
mov
sahf
nop
dec
cwde
clc
cwde
movs
mov
ja
test
jb
sub
ror
neg
xor
cli
das
xchg
rol
lahf
lods
cmp
xchg
(bad)
mov
add
add
mov
jl
push
mov
xchg
sbb
dec
mov
mov
xor
call
sbb
add
aaa
or
jp
pushf
xor
pop
clc
iret
mov
jmp
push
mov
push
push
not
nop
arpl
outs
jl
imul
jle
adc
in
mov
pop
dec
fmul
inc
loopne
ret
xchg
in
pop
cmp
xchg
out
call
cdq
adc
stos
cld
bound
out
in
jg
pop
call
pop
(bad)
aam
push
fsub
and
clc
push
adc
jg
ins
mov
mov
mov
mov
in
and
cli
push
sub
(bad)
idiv
add
mov
rol
fidiv
(bad)
inc
test
xor
scas
xor
in
xor
lahf
out
sbb
scas
loop
shr
add
ret
es
loop
enter
inc
xchg
fsubr
pop
or
add
pop
es
adc
mov
xchg
shl
inc
adc
nop
mov
jp
or
out
aam
or
test
cmp
ret
out
mov
add
cmps
hlt
lea
mov
sbb
sbb
leave
shl
lds
pop
sub
(bad)
cs
add
cmp
add
pop
out
adc
push
push
jae
mov
ficomp
push
jo
xchg
fiadd
hlt
push
mov
mov
(bad)
ret
sub
sahf
adc
sahf
into
pop
jmp
pop
sbb
mov
arpl
xchg
dec
xor
int3
call
or
mov
div
into
mov
jbe
pusha
dec
rcl
std
xor
push
mov
jg
adc
in
popa
adc
nop
mov
push
iret
cwde
dec
sub
push
adc
jp
ins
ficomp
(bad)
adc
test
ret
push
ins
cdq
push
jnp
jp
retf
outs
push
(bad)
aaa
lods
getsec
pushf
xor
dec
(bad)
out
jle
or
sbb
mov
lods
jo
stos
xchg
aam
dec
adc
xchg
lods
cmc
retf
push
or
call
cwde
fimul
daa
inc
jne
out
and
sub
mov
icebp
add
dec
add
jl
sub
add
inc
sub
mov
mov
loope
jmp
pop
push
sub
je
add
ins
add
or
ror
clc
xchg
lock
(bad)
push
jp
push
mov
mov
cli
hlt
shl
jg
sbb
or
mov
mov
mov
cmp
aas
mov
inc
into
sbb
push
add
syscall
pop
sub
or
jne
jo
ds
push
call
bound
xchg
fist
pop
inc
outs
mov
inc
push
bound
lahf
fwait
ins
pusha
add
out
(bad)
mov
into
mov
fsub
ja
mov
jbe
pop
jl
call
cmp
movsx
mov
(bad)
push
mov
stc
pop
fadd
jns
jle
test
and
pop
xchg
cmp
and
adc
xor
and
popf
jge
int3
fidivr
pop
or
sub
push
xchg
ja
stc
cld
and
adc
xchg
push
ins
inc
cmp
je
fsub
(bad)
idiv
inc
cmp
pop
call
pop
and
ins
adc
inc
ret
push
adc
jmp
mov
int3
jp
popa
mov
repz
clc
repnz
scas
mov
inc
test
mov
clc
imul
sub
jg
aaa
push
int3
inc
fdivr
movs
imul
test
int
pop
cli
out
sub
enter
bound
(bad)
jmp
inc
jge
test
xor
fmul
dec
call
cmps
sub
mov
inc
out
mov
fisub
mov
aas
lock
mov
lods
scas
je
add
push
popf
cmp
(bad)
in
je
cli
imul
fwait
cmp
sub
inc
sbb
retf
xchg
add
outs
mov
les
pop
push
cmp
cmp
mov
cld
pop
aaa
ror
and
ret
inc
mov
sti
mov
inc
aam
push
cli
inc
inc
pop
stos
jo
sbb
repnz
ja
push
pushf
test
hlt
jge
pop
xchg
sub
and
imul
pop
xor
loope
movs
call
or
cmp
mov
adc
cmc
lahf
in
call
popf
add
mov
jge
(bad)
mov
and
ja
shl
fs
mov
jecxz
shr
and
xor
adc
fs
cmp
mul
push
add
pop
pop
mov
mov
gs
inc
add
jne
loope
scas
fwait
aaa
cmp
ror
add
push
ror
(bad)
sub
mov
push
arpl
sbb
cmp
hlt
cmps
mov
cmp
sub
test
or
shr
and
(bad)
mov
daa
rol
ror
int
movs
rcl
cmp
int
mov
mov
in
pcmpgtd
rol
imul
scas
out
sub
mov
adc
aaa
arpl
mov
(bad)
loop
into
cmp
shl
mov
sub
repnz
push
adc
push
fidivr
push
jne
cdq
mov
cmp
mov
stos
mov
shr
pop
lock
(bad)
test
xchg
pop
(bad)
fldenv
mov
(bad)
sbb
std
jb
dec
repz
sbb
sbb
call
mov
push
popf
das
fild
loop
in
add
cmp
in
mov
mov
icebp
fstp
xchg
rcl
lods
div
pop
inc
push
jns
sub
clc
push
outs
pop
or
enter
sti
jns
es
pop
psadbw
dec
or
push
ror
call
stos
xchg
mov
inc
stc
les
test
cmp
mov
data16
mov
xor
add
mov
and
mov
outs
jp
das
inc
bnd
(bad)
aad
mov
fwait
mov
daa
ss
lea
into
and
inc
mov
in
lahf
inc
pop
retf
xor
jge
mov
mov
es
inc
fdiv
pop
out
popf
jo
ja
pop
dec
clc
mov
shl
jge
(bad)
mov
jbe
add
xchg
pop
mov
jns
fldenv
test
and
xor
jmp
xchg
int
and
sti
sti
call
mov
jle
xlat
jo
jl
push
mov
stos
xlat
clc
neg
cmps
add
xor
mov
push
pop
inc
in
xor
int
sbb
nop
(bad)
lock
out
mul
sbb
cmp
jmp
popa
jmp
stc
pop
mov
outs
cli
mov
lock
cmp
push
in
lods
data16
sub
sub
(bad)
(bad)
daa
xchg
stos
xchg
bound
jmp
inc
outs
push
loop
arpl
dec
or
nop
ins
cmp
iret
sub
mov
std
nop
int3
scas
xor
push
xchg
shl
adc
call
adc
stos
scas
or
std
jecxz
ror
jg
sar
fs
loopne
mov
retf
lea
adc
sbb
cli
jo
pop
cmp
jg
fdiv
adc
and
in
cmp
sub
in
sbb
rcr
pushf
adc
cmp
add
nop
(bad)
xchg
mov
adc
outs
test
mov
jnp
mov
jb
mov
in
jb
pusha
das
dec
pop
mov
mov
fld
movs
mov
and
cmp
xchg
sti
mov
leave
test
leave
pop
inc
xchg
fdiv
sub
daa
imul
repz
or
into
jecxz
(bad)
pop
fimul
imul
stos
jae
aas
jne
bound
lahf
xchg
cs
add
ret
je
xor
mov
sub
pop
pop
aas
call
adc
out
jl
(bad)
mov
jno
jp
data16
sar
repnz
pop
movs
aam
shl
cld
cmps
adc
dec
jnp
ins
xchg
das
dec
xor
enter
lock
leave
ret
dec
ficom
pushf
call
xchg
mov
or
(bad)
imul
cmp
(bad)
push
mov
repnz
lods
cs
mov
loope
sub
out
nop
retf
call
pop
enter
in
pop
pop
xor
test
xlat
dec
jge
push
(bad)
jg
cmc
xor
rcl
hlt
imul
lahf
fadd
fmul
or
test
pop
add
hlt
pop
jl
dec
mov
arpl
add
std
mov
in
xchg
std
jno
(bad)
and
sbb
pop
mov
into
aad
sbb
or
jge
xor
push
fldenv
sbb
ficom
cld
fcom
out
ret
and
fs
aad
lods
and
imul
jmp
pop
inc
mov
push
xchg
jmp
sub
mov
or
shr
into
sub
das
xchg
mov
jno
pop
rcl
jnp
or
cmp
jnp
lds
mov
mov
fwait
(bad)
jmp
(bad)
in
movs
add
mul
std
lahf
aam
cmp
fmul
mov
mov
int
mov
xor
daa
mov
or
movs
ret
es
cmps
ja
popf
popf
les
xor
popa
mov
addr16
jmp
addr16
bound
dec
push
into
imul
inc
ror
scas
inc
mov
repz
ds
sti
cmp
fild
ins
(bad)
push
or
scas
sub
stos
cmp
pusha
fist
in
add
inc
(bad)
pop
fsubr
push
test
ret
mov
into
mov
int
and
stc
cld
jge
fs
fisubr
in
mov
repnz
pop
dec
retf
dec
in
xchg
mov
push
rol
inc
mov
cmps
mov
cmps
push
jl
repz
xor
sar
xchg
sub
jmp
test
mov
jns
adc
shl
pop
sub
sub
sar
scas
push
adc
dec
jbe
pop
adc
test
daa
xor
test
imul
mov
sbb
shl
bound
out
outs
inc
push
lock
add
aam
leave
cwde
mov
jecxz
enter
stos
sub
mov
add
mov
mov
pusha
mov
mov
pop
cmp
addr16
fs
enter
jmp
fcmove
and
fistp
sub
jae
stos
ret
fimul
jmp
mov
(bad)
in
pushf
in
adc
xor
add
jnp
call
mov
mov
dec
pop
mov
dec
aaa
(bad)
(bad)
cli
push
xchg
mov
and
call
mov
dec
pusha
in
jle
push
(bad)
bnd
imul
retf
fs
loopne
jo
push
xor
lahf
(bad)
jmp
iret
scas
jge
jle
arpl
movs
pop
lea
mov
jge
js
add
bound
js
or
dec
fisub
pop
int3
sahf
lds
and
xor
data16
mov
shl
pop
add
inc
js
xor
(bad)
je
ins
jmp
xchg
sbb
loope
cdq
mov
(bad)
je
mov
les
cmc
sub
mov
cwde
shl
das
mov
outs
sbb
adc
stc
fs
sub
pushf
dec
imul
jmp
mov
mov
or
cmp
js
into
test
cmp
jle
call
cmps
add
loope
and
dec
xlat
push
xchg
dec
mov
dec
push
lods
(bad)
ins
cmps
or
inc
mov
test
push
scas
push
mov
add
(bad)
xor
sbb
cmp
and
ins
inc
lds
aas
cmp
jo
add
and
inc
xchg
cmp
addr16
jle
push
inc
mov
mov
xor
sub
je
test
inc
push
sub
shr
pop
(bad)
push
cmp
xor
push
mov
xor
and
test
mov
test
mov
and
xchg
stos
jno
pop
retf
add
mov
sbb
xchg
pop
(bad)
sub
ds
loopne
or
loop
add
aad
outs
cmp
aas
hlt
stc
push
mov
push
movs
mov
fcomp
dec
pop
std
ja
pop
inc
inc
adc
in
inc
cmc
mov
sub
fs
in
shl
mov
aad
cld
ins
push
les
mov
and
mov
test
mov
cmp
cmp
adc
fst
cs
sub
ds
cmps
in
(bad)
push
inc
imul
push
mov
xchg
enter
mov
xor
mov
push
maxps
pusha
pop
jecxz
clc
loope
out
push
repnz
xchg
in
sbb
wrmsr
xchg
cld
dec
jg
jae
xchg
psubsw
das
repz
sub
mov
inc
ja
xchg
sub
enter
(bad)
mov
pop
inc
arpl
xor
test
sub
popf
and
das
pop
fucom
jp
(bad)
fimul
enter
or
out
ins
icebp
test
push
pop
jg
stc
lds
int3
push
stos
ss
in
bound
push
adc
mov
cmps
dec
cmp
push
movs
jae
test
mov
stos
aad
pop
movs
shl
jne
retf
sub
jp
push
loope
mov
aad
dec
sub
push
pop
mov
pop
or
retf
imul
out
xor
repnz
and
ja
adc
mov
outs
sahf
cmps
pop
(bad)
sub
adc
out
xor
stos
aas
out
sbb
dec
stos
imul
adc
mov
push
loop
addr16
cmp
mov
std
dec
mov
in
sub
add
xchg
pop
and
iret
jmp
imul
mov
sbb
sub
clc
ret
mov
fstp
jb
es
mov
lahf
dec
cmovbe
sub
jle
(bad)
fmul
shr
loope
xchg
dec
inc
or
jae
aam
pop
dec
add
out
test
lods
and
push
and
fs
loop
enter
add
xor
or
fiadd
adc
test
mov
mov
clc
sti
fcom
pop
int
fimul
pop
jno
and
hlt
outs
add
inc
rol
shl
(bad)
cmp
or
call
and
add
stos
jle
add
bnd
or
push
xchg
jecxz
xchg
retf
pusha
(bad)
sti
bts
icebp
ins
sub
or
shr
pop
jb
xlat
xchg
out
out
push
movs
xor
fst
addr16
outs
das
not
data16
xor
in
inc
fs
mov
addr16
jge
mov
ss
mov
sub
sti
lods
mov
aaa
icebp
je
call
mov
pop
jl
int
outs
in
add
neg
adc
xchg
sbb
push
imul
retf
mov
scas
mov
rcl
repnz
xchg
popa
cmp
(bad)
inc
(bad)
sahf
pusha
retf
push
lds
ret
fisub
mov
leave
adc
clc
mov
xor
pushf
scas
lods
(bad)
ds
lods
sti
adc
cdq
sbb
mov
clc
mov
inc
(bad)
push
sub
mov
repz
xchg
(bad)
mov
xchg
pop
imul
imul
hlt
imul
stos
jb
ins
lods
nop
imul
out
or
add
jle
shr
jnp
mov
rcl
or
retf
mov
fcmovnu
lahf
or
jg
cmps
daa
or
popf
sbb
or
xchg
dec
xchg
xor
push
sub
cmps
sub
xchg
in
or
or
jmp
aaa
test
cmp
cli
std
push
jge
xchg
jmp
or
aam
lds
cwde
je
cld
ins
pop
lds
xchg
test
inc
aas
sub
out
push
test
mov
sbb
pop
outs
test
lds
arpl
hlt
and
push
xlat
cmp
push
and
jmp
adc
and
adc
das
bound
aas
test
popf
and
(bad)
sbb
loop
lea
ja
(bad)
ja
mov
or
ror
and
stc
jae
test
mov
sub
xchg
mov
add
loop
mov
push
shl
cmp
xchg
ror
cmp
(bad)
xchg
mov
or
sbb
movs
imul
pop
ins
adc
adc
stos
shr
leave
out
ins
test
lods
dec
mov
(bad)
cmp
pop
into
add
cmp
push
dec
xchg
imul
in
cmc
std
not
push
cld
push
jae
inc
iret
mov
mov
hlt
push
sub
sub
add
stos
mov
cmp
ficom
pop
xor
es
popf
mov
ins
mov
mov
sti
add
xor
and
mov
xor
adc
dec
mov
and
nop
inc
jno
mov
mov
mov
call
addr16
repnz
test
sub
xchg
cmc
in
push
call
xor
fld
fld
jmp
jmp
dec
jae
(bad)
lods
pop
or
or
outs
inc
test
call
xor
hlt
sub
inc
imul
test
in
mov
pusha
cmps
cmp
scas
dec
push
xchg
scas
(bad)
jg
xchg
lods
push
mov
mov
cmp
xchg
(bad)
push
jo
dec
push
mov
push
mov
push
push
push
xchg
imul
jmp
or
and
imul
fisubr
ins
xor
mov
push
fdiv
test
call
mov
or
out
stc
xor
popa
clc
retf
and
adc
xchg
inc
cmp
xor
or
cs
pushf
rcl
lods
shl
ret
retf
pop
sbb
cwde
mov
push
ins
or
mov
rcl
pop
or
lds
xchg
sub
ja
xor
mov
in
(bad)
test
adc
shr
lahf
stc
(bad)
pop
jnp
mov
add
sbb
jbe
test
rcr
ins
js
or
outs
jb
and
sbb
into
push
in
pop
clc
xor
and
rcr
enter
js
pop
inc
and
std
outs
cmps
outs
xchg
pushf
adc
rcl
loope
pusha
pusha
out
cmp
and
loop
mov
lods
clc
ja
ja
fucomp
pop
cwde
cmp
mov
dec
or
mov
or
imul
jmp
out
out
loopne
test
lock
inc
inc
popa
mov
rol
inc
inc
adc
sub
xchg
jecxz
rcr
push
inc
sahf
mov
repz
cmp
pop
lods
xchg
sbb
movs
loop
pop
mov
inc
pop
xor
dec
leave
mov
cmp
(bad)
pop
inc
lds
cwde
cdq
xlat
lds
pop
les
cld
cmp
cmp
cld
dec
je
sbb
adc
int
or
jnp
cmp
loope
cmp
mul
ja
mov
jbe
mov
add
cmp
inc
dec
ret
sub
adc
mov
scas
daa
out
jecxz
popf
jo
pop
test
sahf
mov
call
faddp
add
mov
mov
xchg
lods
rol
loop
jmp
pop
imul
sbb
test
lds
loop
not
push
bound
test
pusha
cdq
ins
xor
cs
sbb
test
mov
ins
pusha
mov
jo
push
test
mov
jo
sbb
add
xchg
adc
mov
or
inc
fwait
xor
sar
sbb
xor
jns
call
cli
or
cmps
popf
into
sbb
int
inc
sahf
mov
xor
push
sub
xor
cmp
jbe
mov
push
in
sti
jmp
sub
push
ficom
(bad)
(bad)
shr
inc
mov
aam
pop
sbb
out
(bad)
mov
xcrypt-ctr
cmps
pop
imul
dec
jge
add
pushf
cmp
jp
and
jmp
adc
adc
test
inc
cmps
and
sti
xchg
fldcw
aaa
pop
test
lock
push
dec
jno
cwde
fs
movs
or
dec
test
div
jge
pop
out
pop
ds
jmp
rol
dec
cmp
sbb
cmp
adc
push
adc
pcmpgtw
add
jmp
inc
mov
mov
adc
sbb
mov
add
and
jb
mov
adc
mov
pop
sub
cwde
dec
add
push
add
mov
and
pop
xor
push
mov
popf
out
and
add
rol
adc
fs
mov
sub
push
cmps
pushf
push
loopne
je
mov
nop
aas
and
jmp
es
movs
lock
ss
and
loope
punpckhbw
rcr
mov
scas
into
das
pop
xor
ins
cs
and
sbb
mov
rcr
add
sbb
mov
in
test
das
ins
sub
sbb
pop
(bad)
mov
mov
cmp
mov
and
dec
clc
mov
and
pop
dec
in
fnstsw
in
das
and
gs
sar
ret
hlt
push
jo
mov
addr16
or
jno
icebp
xor
xor
daa
cmps
fistp
mov
pop
add
hlt
lds
adc
leave
push
and
in
xlat
sti
pop
sar
in
inc
pop
fadd
sub
pop
cmp
dec
mov
ds
xchg
movs
dec
out
dec
add
jmp
dec
xchg
mov
mov
pop
mov
sbb
and
ja
cmp
fsubr
push
dec
cmc
in
push
xchg
lods
xchg
rcr
rcl
mov
xor
and
inc
(bad)
sub
out
div
imul
sub
or
xchg
add
inc
cmp
movs
call
inc
mov
xor
sub
push
ins
stc
push
das
sti
dec
jb
sahf
loopne
call
jle
leave
dec
mov
outs
mov
dec
add
mov
in
js
repz
pop
xchg
(bad)
ret
push
inc
xchg
mov
mov
movs
(bad)
xor
dec
ja
stos
inc
and
mov
ja
xchg
out
cmp
rcr
fbld
pop
mov
test
inc
ret
and
add
push
leave
test
cmp
add
mov
jae
push
dec
fmul
mov
add
add
mov
cmp
push
idiv
push
cmp
xchg
pop
inc
enter
stc
push
jecxz
xchg
aaa
or
mov
sub
(bad)
pop
dec
mov
clc
in
xchg
inc
mov
loopne
jmp
stc
or
push
pop
push
stc
adc
(bad)
popa
imul
sbb
test
jo
leave
fwait
sbb
jl
jae
ins
js
adc
sub
cmp
mov
loope
sbb
xchg
pushf
(bad)
sbb
and
push
icebp
rol
arpl
clc
std
jl
jae
push
sbb
and
and
sub
jnp
jne
imul
ss
lahf
xchg
pushf
sbb
or
jb
loope
(bad)
mov
push
daa
mov
outs
or
inc
fisubr
in
imul
scas
repz
stos
icebp
sub
popa
xchg
fcomip
xor
jl
(bad)
into
inc
jns
loopne
push
and
adc
pop
icebp
stos
cmp
adc
fldenv
mov
xchg
push
call
fsubr
int3
pop
fimul
jmp
bnd
lock
jmp
dec
pop
pop
sub
nop
lahf
add
mov
ja
inc
mov
fstp
xchg
pop
movs
sub
push
cmp
inc
push
mov
pop
adc
mov
loope
sbb
cli
popf
cmps
xor
aas
mov
shr
mov
cmp
inc
je
sub
fadd
daa
imul
sbb
test
jl
xor
movs
(bad)
push
hlt
add
pop
add
xchg
inc
retf
inc
lods
int
pop
pop
std
cmp
ss
xchg
mov
retf
and
mov
int
mov
sub
pop
enter
pop
xlat
rcl
dec
les
jle
adc
repnz
inc
outs
fsubr
repz
in
and
or
dec
sub
test
hlt
imul
jbe
cmp
mov
xchg
rol
jns
jno
stos
sub
out
jp
pop
or
inc
js
(bad)
imul
lea
dec
aas
out
xchg
xor
dec
inc
ficomp
and
lods
sub
pop
xchg
call
dec
mov
push
fucom
movd
or
add
push
pop
test
mov
xlat
je
jl
imul
mov
outs
(bad)
loopne
(bad)
jae
jns
das
add
(bad)
mov
pop
in
lahf
or
out
mov
mov
pop
cli
mov
and
xor
pop
test
dec
dec
jg
mov
shl
outs
adc
pusha
dec
inc
jne
pop
pop
call
scas
inc
pushf
lods
in
cmp
add
sahf
ins
pop
xchg
inc
pcmpgtb
ret
jecxz
std
mov
push
aad
sti
xor
adc
mov
retf
in
imul
mov
sbb
xchg
and
pop
call
test
inc
popf
stos
inc
test
or
into
push
rcr
dec
mov
adc
push
fistp
jnp
add
lods
cmp
mov
jne
mov
aam
mov
jne
mov
mov
scas
movs
mov
sub
adc
sub
pop
ss
add
inc
ror
scas
movs
aas
ins
int3
add
lods
or
inc
loopne
in
enter
or
inc
adc
or
sub
cmp
and
mov
mov
out
mov
pop
sub
test
add
hlt
sub
(bad)
and
push
retf
jl
shl
push
lods
in
rcr
fwait
push
xor
mov
xchg
and
dec
in
mov
cmp
std
fiadd
addr16
mov
stc
imul
nop
push
mov
data16
aas
cmp
push
test
loop
cwde
adc
rcl
sbb
(bad)
(bad)
inc
xchg
mov
xchg
in
lods
call
lock
dec
aaa
mov
clc
fst
in
adc
push
cmp
cmp
mov
push
add
scas
dec
mov
cmp
adc
xor
out
or
push
xlat
dec
imul
rcr
mov
push
dec
cmp
rol
gs
push
xor
jecxz
rcl
pop
out
mov
cdq
push
rcr
loopne
(bad)
add
pop
push
push
push
inc
add
inc
sub
adc
sahf
(bad)
mov
(bad)
jmp
push
pop
sub
into
out
enter
call
or
push
shr
mov
cli
cmp
(bad)
imul
dec
push
xor
out
xchg
fwait
mov
mov
fmul
stos
cmp
cld
adc
dec
pop
sahf
aam
inc
ss
sbb
ret
xor
cmp
mov
and
das
or
xlat
mov
test
push
ins
(bad)
int
inc
jne
stc
mov
test
add
jno
adc
or
int
push
je
std
dec
adc
push
xchg
add
inc
jae
mov
test
or
shr
xchg
call
int
mov
arpl
out
adc
cmp
pop
adc
fidiv
call
(bad)
out
mov
pop
iret
xchg
and
jno
out
dec
push
test
xchg
dec
mov
(bad)
adc
xchg
(bad)
dec
and
adc
mov
lods
lock
sahf
mov
push
cmp
push
pushf
fstp
mov
push
mov
inc
mov
hlt
(bad)
sahf
fcomp
push
push
mov
lea
out
jg
cmp
in
retf
xchg
xchg
jae
and
cmc
clc
cs
mov
(bad)
out
in
cmp
(bad)
pop
push
mov
and
cmp
shl
inc
cli
cdq
popa
inc
jnp
inc
repnz
movs
jp
iret
inc
inc
dec
retf
cmp
and
mov
dec
jns
sbb
loop
sbb
sbb
add
(bad)
loopne
add
lea
mov
xchg
fstp
xchg
sub
cmp
cli
cwde
add
xchg
fld
mov
jae
test
iret
test
mov
dec
mov
xchg
int
fwait
jg
gs
in
xchg
fmul
jne
aad
(bad)
xchg
jp
into
inc
xchg
ds
pop
xlat
xchg
inc
test
cmp
jle
out
in
mov
loop
xlat
jmp
lahf
sub
je
xor
xchg
push
sbb
cmp
mov
and
xor
xchg
loope
cmp
fadd
dec
movs
fistp
mov
ja
rol
cmp
jno
jbe
pop
in
bound
push
lahf
shl
pushf
inc
dec
loopne
mov
fldenv
loopne
jp
retf
mov
addr16
and
and
cmc
ins
es
mov
xchg
push
clc
in
ja
dec
cmp
mov
adc
cmps
sub
adc
xchg
cwde
fs
fld
pop
and
cmp
sbb
ror
lds
jae
push
pop
sub
in
rcr
sbb
repz
inc
push
sbb
mov
inc
fild
or
xchg
ret
shld
xchg
in
pop
or
mov
mov
pop
sbb
adc
ret
cli
jbe
add
add
sub
mov
push
mov
rol
xor
arpl
loope
adc
sub
outs
pop
lods
jne
test
inc
sti
mov
xchg
jmp
jmp
xchg
or
dec
int3
stos
iret
scas
in
jle
xor
jnp
xchg
cmp
mov
(bad)
cmc
lods
dec
add
xchg
inc
adc
test
imul
push
loop
xchg
and
and
loopne
xor
xchg
mov
mov
call
xchg
call
xor
xchg
adc
adc
loop
jnp
adc
movs
iret
dec
(bad)
fsubr
mov
mov
push
rcl
int
xchg
cdq
and
xor
push
inc
aas
leave
into
cmp
cmps
ss
arpl
mov
sub
pop
mov
jns
mov
fnstcw
addr16
adc
xor
lds
gs
mov
test
mov
jo
mov
dec
sub
ret
ret
ins
test
xor
sti
scas
pop
shl
xor
out
add
push
test
and
sub
sbb
cmps
(bad)
movs
mov
xor
ret
adc
stos
test
and
add
imul
cmp
push
dec
mov
in
cmps
retf
mov
(bad)
out
sbb
in
mov
mov
pusha
(bad)
inc
jbe
mov
cmp
cmp
push
mov
and
shl
xchg
dec
in
stos
add
sar
pop
push
adc
mov
pop
arpl
push
or
add
lods
or
out
add
daa
stos
loope
pop
popa
xchg
jp
or
(bad)
jl
sahf
arpl
and
call
fsubr
cwde
aaa
cmp
mov
adc
mov
mov
mov
jmp
inc
jl
jle
sbb
xor
sub
mov
retf
mov
test
je
sbb
pop
jne
out
mov
pop
jne
sub
cmp
fwait
inc
cwde
in
std
cmps
(bad)
push
outs
pop
push
rol
lds
push
jp
test
mov
hlt
add
xor
mov
or
dec
ret
movs
push
sbb
popa
inc
xchg
push
mov
sbb
fist
adc
push
push
jle
iret
jmp
jge
xor
sti
and
dec
cmp
sub
hlt
das
sbb
mov
push
daa
sbb
stos
dec
dec
in
add
inc
imul
imul
cmps
mov
push
setge
or
outs
dec
inc
mov
jno
sub
pop
inc
popa
hlt
les
retf
mov
test
out
jle
dec
dec
mov
pop
adc
pusha
mov
mov
ins
cli
mov
ss
icebp
dec
loop
rol
push
not
jmp
sti
cmp
stos
mov
pop
pop
cmps
inc
sti
stc
pushf
ror
sar
out
mov
es
cmp
xchg
pop
sbb
ss
xchg
nop
ror
mov
xor
movs
loopne
jns
lods
cmps
stc
dec
aaa
cld
stos
cwde
outs
ins
test
sbb
aaa
push
mov
das
cmps
dec
adc
cmp
xchg
mov
aaa
sbb
js
cmp
in
pushf
aad
sti
ror
xor
out
daa
vpavgb
nop
inc
inc
leave
mov
aad
fadd
and
movs
mov
leave
sahf
movs
in
mov
sbb
push
sub
mov
cmp
pop
xor
mov
cmp
fidiv
adc
lods
outs
(bad)
jbe
sub
pop
and
into
gs
int
arpl
into
jle
lahf
sub
cmps
sbb
cmps
stos
mov
ja
call
fwait
or
add
dec
push
ror
xchg
or
bswap
xchg
ja
stos
out
and
add
leave
into
jecxz
mov
fbstp
sahf
mov
enter
dec
iret
pushf
leave
movs
fs
ret
jnp
cmp
xchg
or
jo
lods
or
dec
rol
pop
loope
retf
and
out
adc
sub
or
xchg
das
dec
lds
or
out
inc
push
fs
outs
pusha
mov
das
pop
scas
ins
mov
(bad)
and
jge
sbb
xchg
push
test
ret
dec
int3
fldenv
out
ficom
cli
pop
pop
cmp
aam
rcr
ins
inc
sub
pop
jno
jecxz
push
sub
ins
mov
mov
add
and
(bad)
pop
aad
mov
jmp
popa
or
ret
adc
stos
into
xchg
inc
movs
gs
sbb
or
sub
bound
rcr
adc
push
mov
jge
mov
xor
leave
push
sub
mov
pushf
pusha
mov
xlat
leave
adc
or
mov
mov
dec
sbb
inc
xor
cs
and
stos
outs
jo
xchg
out
add
add
(bad)
and
sbb
jae
sbb
ins
sbb
xor
xchg
xor
mov
mov
(bad)
shr
or
test
clc
pop
mov
xor
jle
jne
je
outs
stos
hlt
cmp
xlat
pop
mov
and
hlt
retf
add
jae
(bad)
rcl
in
mov
xchg
mov
mov
adc
in
stos
dec
inc
(bad)
dec
into
cs
lea
jecxz
dec
lahf
stc
or
add
and
aas
push
es
ins
lods
and
lods
sbb
fsub
xchg
outs
or
iret
pop
sub
call
pop
push
xchg
out
into
retf
mov
xchg
retf
loop
test
imul
xor
movs
dec
mov
add
dec
xor
fistp
push
fnstenv
mov
adc
into
push
js
ins
jmp
mov
mov
cmp
in
call
fldenv
imul
jbe
mov
loope
(bad)
cmp
push
fsubr
out
inc
add
jmp
dec
add
add
ret
jge
or
add
fist
sbb
xor
int
cmps
push
xor
stc
inc
xor
pop
fistp
xor
pop
popf
hlt
in
xchg
add
cmps
icebp
push
ret
rcl
or
ret
pop
mov
mulps
pop
adc
fadd
mov
mov
pop
aas
(bad)
or
inc
mov
mov
mov
retf
jb
inc
stc
pop
cmp
mov
cmp
int3
push
not
inc
aad
push
mov
xchg
push
inc
sub
stos
out
stos
push
shl
ins
pop
inc
pop
loope
fwait
mov
aad
push
pusha
(bad)
mov
cmp
add
pop
ins
xor
cdq
push
out
and
pop
or
push
pop
fldenv
sbb
dec
xor
jmp
les
test
iret
inc
pop
cmps
shl
adc
mov
push
adc
(bad)
sub
xor
aas
xchg
stc
mov
push
aam
mov
pop
pop
mov
ficomp
mov
pop
in
jno
xor
cmp
sub
push
je
(bad)
jmp
cs
adc
inc
add
imul
inc
cmp
sub
repnz
jge
stc
sub
int
addr16
fisubr
aam
xchg
loopne
jl
xor
aam
xor
dec
sbb
dec
out
pop
out
aaa
ins
jne
cwde
mov
std
pop
aas
jb
test
inc
mov
enter
int3
mov
fwait
push
hlt
fcom
add
cdq
fdiv
dec
(bad)
in
inc
shr
mov
and
test
out
mov
pushf
out
(bad)
sub
mov
fdivr
scas
jl
and
mov
ret
xlat
imul
dec
xchg
pusha
gs
inc
sub
pushf
pop
fwait
in
pop
mov
dec
mov
mov
adc
and
adc
sti
out
fld
sahf
cdq
ror
btr
mov
sar
in
adc
sub
ret
inc
or
sub
gs
push
shl
mov
ins
cmp
int3
inc
test
ficom
or
mov
sub
or
movs
jne
pop
push
push
sub
pop
test
sbb
das
inc
cs
fs
xchg
xchg
rcl
cmc
scas
call
aad
div
jnp
shl
out
add
cmps
ins
cmp
and
popf
mov
push
adc
fimul
or
xchg
or
mul
test
aas
sub
or
cmp
dec
mov
cli
fisubr
push
mov
dec
cdq
in
add
int
pop
xchg
jnp
mov
stos
xchg
mul
cld
lahf
imul
test
or
mov
dec
xchg
sbb
sahf
cmp
sbb
jl
sub
retf
pop
inc
mov
frstor
add
(bad)
lea
and
or
xor
test
fisubr
mov
popf
hlt
out
or
pop
out
ret
mov
push
mov
hlt
jno
mov
mov
and
bound
(bad)
test
je
or
fistp
ret
data16
repz
leave
mov
cs
retf
iret
clc
xchg
push
adc
jg
mov
imul
xchg
ins
push
stos
xor
gs
lahf
retf
xchg
ja
mov
retf
xor
mov
jne
and
scas
movs
jnp
jle
pop
inc
adc
(bad)
and
in
push
iret
rcr
and
sbb
pushf
into
movs
mov
push
test
jns
jp
loopne
(bad)
xor
cli
sub
sub
inc
pop
push
jmp
mov
(bad)
xchg
add
stc
add
mov
jp
mov
das
dec
or
retf
xchg
fwait
out
sbb
mov
pop
je
(bad)
outs
inc
jb
iret
add
popa
leave
dec
mov
mov
movs
push
inc
aam
mov
pop
icebp
push
mov
xchg
sub
mov
fsqrt
ja
leave
repz
test
sar
mov
mov
out
mov
jmp
push
mov
out
jle
out
out
mul
cdq
sub
ret
fdiv
mov
(bad)
fdivr
adc
inc
popf
push
leave
out
push
cmc
or
daa
mov
push
push
das
mov
call
jmp
cmp
jbe
xor
scas
fcomp
es
jle
jmp
movs
shr
and
ins
or
test
call
mov
out
jo
cli
pop
popf
mov
or
movs
fs
stos
jge
pop
out
push
pop
dec
mov
jmp
retf
jns
sbb
xchg
(bad)
das
cwde
or
shl
outs
mov
addr16
repnz
adc
and
mov
outs
pop
scas
push
aaa
xchg
mov
loop
mov
xlat
mov
sbb
mov
mov
shl
pop
test
mov
mov
fstp
outs
mov
(bad)
cli
adc
jmp
lods
jge
and
rol
outs
adc
mov
movs
adc
push
dec
ror
add
mov
ror
sbb
std
push
sub
mov
(bad)
out
pop
lahf
dec
ins
icebp
and
inc
jne
dec
jle
(bad)
xchg
sub
push
and
(bad)
aaa
loope
cmp
rol
pop
mov
jle
add
add
cmp
push
push
jnp
cmc
mul
and
stos
fiadd
add
aam
jecxz
sub
dec
fwait
push
sub
frstor
js
push
out
push
pop
sbb
mov
inc
sar
rcl
or
cmp
add
mov
sbb
push
pop
adc
outs
inc
scas
stc
mov
sahf
cmps
add
aaa
aas
fnstsw
retf
js
into
dec
out
mov
arpl
cmp
pop
push
mov
das
sub
loop
rcl
enter
cmp
jnp
sbb
ja
out
pusha
mov
pop
cmp
push
mov
int
push
inc
mov
xor
je
mov
mov
stos
sub
repnz
call
push
dec
stos
rol
pop
sti
ja
nop
loope
cmp
mov
and
movs
out
or
sbb
sahf
call
cs
outs
sub
cmp
jbe
inc
mov
and
loop
ret
div
dec
rcl
inc
jnp
je
pop
xor
cli
adc
in
xchg
add
mov
(bad)
into
outs
std
loope
cmps
in
(bad)
cmp
lahf
test
dec
fst
push
sar
push
xor
retf
outs
push
cli
adc
cmp
or
xor
push
push
dec
cli
in
xor
aad
outs
push
lock
xchg
jmp
out
sbb
jbe
daa
mov
sti
clc
sub
movs
inc
punpcklbw
nop
mov
adc
xchg
add
adc
lock
mov
mov
movs
and
sbb
and
daa
jae
cmp
sbb
dec
rol
inc
popf
xchg
les
and
mov
pop
and
(bad)
out
inc
cmp
sub
add
jno
fisttp
mov
xor
jle
lds
and
js
in
jo
out
jb
push
mov
int3
and
lods
jl
call
pop
inc
test
cmps
fcom
bound
push
out
icebp
mov
fmul
cmp
xor
push
mov
addr16
jns
sub
fcomi
push
push
clc
lods
out
loope
mov
or
rcl
es
dec
jecxz
movs
jmp
sub
pop
sbb
push
pop
inc
cli
xlat
push
or
imul
sahf
and
or
fadd
arpl
cmps
jnp
ret
lea
nop
mov
inc
jae
(bad)
jns
cwde
pop
mov
bound
sub
into
mov
push
aad
xor
jg
pop
lea
ds
enter
pop
and
call
imul
sbb
cmps
data16
out
adc
shl
sbb
xchg
inc
cmc
out
out
xchg
sub
fwait
fs
jnp
push
ja
in
dec
xchg
out
test
out
movs
aad
xor
dec
or
arpl
mov
jo
clc
cld
and
leave
adc
xchg
sbb
xor
dec
pop
lds
jno
int
dec
jbe
mov
lods
jg
ins
push
push
lock
rol
cmp
(bad)
push
(bad)
cdq
mov
push
fcomp
in
push
in
cmp
mov
mov
push
xor
or
shl
sahf
int3
or
in
shl
inc
mov
lea
or
mov
mul
jle
outs
stc
push
out
push
fisttp
push
in
hlt
cwde
shr
mov
scas
push
sub
test
sub
or
inc
movs
fistp
ficomp
cmp
mov
loop
pop
mov
addr16
aad
xlat
xchg
sbb
cwde
or
xchg
mov
movs
test
mov
cdq
loopne
rcl
pusha
aas
xchg
push
(bad)
cmovb
mov
jnp
push
or
movs
pop
mov
dec
adc
fistp
xchg
call
mov
add
push
stos
addr16
or
cdq
imul
xor
mov
jmp
lock
xchg
fldcw
pop
pusha
adc
rcl
in
addr16
outs
cmp
dec
fdiv
mov
inc
call
movs
or
ror
idiv
or
(bad)
lods
and
jb
out
fsub
push
sub
mov
inc
shr
inc
lods
movs
leave
daa
mov
inc
in
mov
retf
dec
(bad)
cmp
fcom
cmp
(bad)
(bad)
ins
aaa
dec
in
shl
inc
lds
shr
mov
test
iret
stc
cdq
lods
sbb
fst
ds
pop
(bad)
movs
data16
int3
movs
sub
(bad)
addr16
inc
mov
imul
push
(bad)
scas
shr
out
outs
mov
sub
jp
add
jmp
sti
outs
gs
sub
xchg
dec
xlat
jge
and
adc
rol
gs
sub
xchg
push
add
cwde
test
sbb
loopne
clc
cmc
les
and
pop
push
ret
push
mov
in
mov
(bad)
jle
gs
aam
xchg
cmp
push
jmp
xor
xor
hlt
mov
out
adc
popa
cld
jne
not
scas
das
or
stos
inc
jne
and
fmul
inc
jno
pop
stos
(bad)
mov
nop
inc
js
push
call
inc
mov
mov
sbb
in
lds
xor
or
sub
fst
mov
and
rol
ss
dec
call
test
loop
movs
inc
in
or
aaa
or
sbb
rol
ficomp
stc
cmp
push
mov
xor
sti
push
outs
pop
jmp
xor
and
lahf
add
jge
push
push
sar
lods
mov
jo
pop
push
dec
sub
(bad)
imul
mov
jns
jl
cmp
rol
into
cmp
xchg
aas
pop
jp
mov
sub
add
(bad)
cdq
sbb
push
out
test
xor
lahf
sbb
cli
mov
push
inc
xchg
push
fild
xchg
add
lods
pop
push
sub
dec
scas
push
add
pushf
fucomip
push
sbb
popa
pop
add
hlt
int
js
adc
int3
(bad)
xchg
and
push
mov
sub
xor
inc
push
pop
xor
xor
stos
jbe
shr
sub
mov
repz
mov
cmp
idiv
xchg
adc
loop
pop
xor
fisubr
mov
or
sti
pop
enter
adc
sar
call
push
aad
jmp
dec
mov
repnz
sbb
mov
loope
xor
pusha
lock
out
sbb
dec
jle
xor
cwde
xor
sub
dec
mov
jp
stc
push
mov
cmp
dec
and
in
mov
add
pop
iret
push
sbb
jnp
dec
fmul
jb
fadd
gs
fdiv
shr
inc
rcr
adc
xchg
xlat
mov
outs
inc
lods
aas
cmp
mov
fbld
pavgb
dec
and
aas
into
dec
(bad)
jle
(bad)
repnz
and
dec
enter
inc
cmps
and
leave
and
jg
sub
fs
mov
jp
outs
pusha
je
pop
(bad)
mov
sbb
inc
and
cld
jns
stos
add
sahf
mov
daa
adc
jo
dec
add
sub
out
cmp
les
and
xchg
pop
ins
jmp
ins
shl
add
out
cwde
pop
inc
arpl
cwde
xor
lods
jge
stos
xchg
jno
dec
call
ret
dec
dec
je
fisubr
into
gs
jp
jle
mov
dec
mov
nop
jp
sbb
cmp
dec
cmp
jne
inc
(bad)
add
sub
push
mov
lea
aad
xchg
mov
repnz
ss
mov
sub
inc
gs
push
xlat
xchg
mov
call
sbb
mov
mov
frstor
call
sub
stc
dec
push
sub
cmps
in
(bad)
imul
test
mov
pop
fsub
xor
push
out
mov
rol
mov
(bad)
data16
dec
sbb
add
es
and
add
pushf
inc
or
pusha
push
push
jecxz
lahf
aas
out
das
test
out
or
dec
adc
adc
xchg
lds
fs
sbb
mov
xor
clc
repz
aas
sbb
or
mov
popa
xchg
adc
xor
pop
mov
lds
clc
or
adc
add
fwait
dec
out
and
jmp
dec
jg
dec
loop
les
xchg
or
pop
fsubrp
repnz
fistp
xor
retf
movs
popf
or
mov
cmp
es
add
mov
dec
les
jne
push
bound
inc
xlat
mov
fld
push
sti
dec
test
inc
fistp
mov
fiadd
or
add
cli
inc
adc
daa
push
or
js
sbb
xchg
cmp
dec
sub
cmp
and
aas
hlt
cld
mov
je
aas
xchg
jl
sub
adc
sub
sbb
repz
push
cmps
push
in
and
xchg
fadd
adc
xor
stos
and
popa
sub
shr
and
test
mov
sahf
jmp
fs
dec
cmp
dec
mov
adc
push
cmp
xor
shl
outs
xchg
push
cmp
cmp
mov
(bad)
in
and
xchg
or
dec
sbb
xor
lock
sbb
out
xchg
stos
cmps
inc
std
call
xchg
push
in
cmps
int3
xchg
and
in
jmp
xchg
pop
jne
mov
adc
sbb
aad
test
cwde
stos
mov
push
adc
enter
icebp
mov
fisttp
inc
xchg
imul
sahf
jns
mov
not
xchg
lds
mov
sub
retf
(bad)
pop
out
je
cmps
xchg
out
lds
in
rcr
fdiv
adc
mov
cmp
adc
xchg
popf
out
adc
dec
test
inc
push
bound
mov
outs
leave
jbe
fsubrp
sbb
pop
mov
nop
xor
jnp
push
cmp
imul
and
dec
pusha
dec
inc
sar
pop
call
dec
(bad)
aas
and
dec
outs
mov
fcomp
adc
and
and
rcl
test
sbb
xor
sbb
in
cmp
pusha
and
popa
cmp
add
cmc
test
jno
sub
pop
rcr
movs
mov
lods
pusha
dec
fild
rcl
cmc
jae
pop
cmps
push
data16
cmps
js
push
jne
js
jnp
sub
clc
sbb
and
push
mov
add
and
xchg
cmp
ret
test
mov
mov
xchg
(bad)
std
inc
sbb
add
cwde
test
sar
or
popa
into
mov
jmp
pop
or
fwait
mov
cmp
sbb
cmp
fnsave
jmp
stos
pop
cmps
in
lea
adc
in
mov
sub
xchg
sub
add
cmp
pop
repnz
popf
inc
movs
mov
fs
mov
in
cli
jecxz
outs
mov
mov
mov
je
sbb
popa
retf
mov
sub
pop
xchg
mov
test
stc
push
push
xchg
jne
in
inc
fistp
pop
jmp
mov
ret
sbb
sar
(bad)
sbb
adc
pop
mov
sub
and
imul
clc
rcr
test
pop
mov
xchg
pusha
mov
aas
sbb
xchg
in
mov
fistp
imul
mov
mov
shr
daa
jmp
in
sbb
mov
ds
fild
in
fdiv
lods
xchg
sub
or
fld
and
das
lods
in
cmp
outs
mov
fsub
sbb
mov
adc
cmc
je
aam
ds
cs
sbb
cwde
adc
or
inc
adc
mov
lahf
scas
add
(bad)
cdq
bound
stos
fstp
inc
push
inc
mov
cwde
mov
retf
je
std
cmp
fistp
loopne
sahf
add
push
and
jae
arpl
adc
sti
jae
inc
in
inc
xchg
and
inc
push
mov
push
adc
jp
retf
mov
sbb
push
aad
test
sbb
cli
and
repnz
mov
(bad)
lods
stc
enter
dec
sbb
sahf
adc
outs
jp
or
dec
sahf
mov
ss
adc
pop
mov
cmc
in
sub
push
jmp
mov
push
jns
das
push
aaa
call
ins
jns
cli
mov
inc
jg
stc
add
pop
jle
lock
push
imul
jp
call
sti
jmp
ret
js
frstor
mov
fnstcw
sbb
lock
ret
lds
and
push
outs
int
xchg
shl
pop
in
(bad)
jbe
mov
stos
jo
mov
lea
mov
cs
mov
adc
daa
push
das
pop
or
adc
and
repnz
das
cmp
sub
cwde
into
mov
pop
sbb
mov
nop
xor
shl
outs
cmps
out
inc
add
mov
xor
mov
jl
movs
or
test
push
push
sbb
rcr
xchg
stos
stos
clc
adc
adc
(bad)
xor
inc
jg
scas
inc
into
sti
add
imul
pop
cmps
cmc
adc
imul
xchg
adc
jae
cld
das
repnz
mov
adc
and
cmps
mov
repz
call
add
leave
loopne
cs
test
sbb
fidivr
cmp
push
mov
sbb
jge
(bad)
ins
jb
mov
jo
pusha
push
jle
outs
cmp
push
pop
movs
mov
into
mov
ins
push
inc
arpl
and
jg
jle
push
fiadd
cmc
pop
(bad)
mov
imul
mov
inc
mov
stos
dec
das
outs
mov
cmp
push
cvtps2pi
cli
cmp
arpl
cdq
aas
inc
cdq
mov
sbb
ds
jmp
jp
ror
adc
arpl
mov
cmc
xor
sar
mov
ins
inc
mov
sahf
push
push
pushf
push
jae
mov
xchg
and
test
xchg
loop
test
or
ds
sub
repnz
in
sbb
xchg
push
pop
inc
cmps
(bad)
outs
mov
mov
inc
test
push
icebp
and
daa
dec
and
cwde
fist
fadd
jne
loop
lea
inc
xchg
jb
sub
push
lods
cmp
mov
gs
add
inc
jne
stos
xchg
inc
sub
movs
pop
adc
jno
push
into
adc
push
sub
dec
and
movs
punpckldq
aad
or
dec
test
dec
inc
icebp
bnd
mov
and
cmps
xor
daa
inc
xor
xor
adc
cmp
dec
pop
test
pop
in
mov
dec
xchg
mov
mov
cs
retf
in
ror
and
ret
add
dec
mov
pop
mov
popf
lahf
add
imul
and
cmp
aad
dec
scas
mov
call
push
inc
dec
add
lahf
mov
pop
sbb
bound
xchg
(bad)
adc
ret
dec
cmp
js
outs
scas
add
jge
inc
adc
leave
(bad)
cmc
xchg
mov
cmp
add
xchg
in
mov
jo
loope
dec
jle
stos
in
mov
xchg
mov
mov
or
in
sub
aaa
pop
hlt
jl
lods
dec
add
stc
dec
psubusw
mov
jno
call
add
mov
jg
cmp
push
or
ror
data16
sahf
outs
xchg
shl
nop
and
mov
into
mov
and
sub
call
add
dec
or
jne
out
and
jge
hlt
sub
outs
jbe
cli
out
and
ret
sbb
rcr
pop
retf
inc
xor
nop
aas
jle
pop
pop
push
jns
mov
xor
sbb
jg
icebp
or
push
sar
leave
xlat
cli
vdivpd
pop
neg
pop
aaa
and
sahf
push
test
addr16
(bad)
aad
xchg
xchg
pop
cmp
lods
loopne
dec
mov
push
shl
mov
sahf
jmp
js
mov
sub
inc
out
mov
push
and
mov
int3
test
ja
push
jns
jp
test
idiv
sub
leave
jbe
xchg
test
jge
retf
jge
cmp
jmp
sbb
cdq
clc
xor
cli
cmp
mov
pushf
push
jecxz
cld
fwait
sbb
inc
mov
mov
push
int3
or
mov
jg
and
jbe
or
iret
jne
cmp
fmul
cmp
into
loope
ds
xchg
(bad)
in
lock
xchg
xor
bound
dec
push
xor
mov
cmp
call
inc
adc
jp
xchg
mov
xchg
cdq
fsub
sub
push
dec
rcr
scas
(bad)
sub
in
imul
push
jns
cmps
mov
cmp
sgdtd
or
test
retf
popa
out
std
mul
(bad)
xlat
or
or
dec
das
inc
sbb
cmps
push
and
scas
or
inc
xor
inc
jne
popa
xor
push
ror
jl
xchg
adc
hlt
hlt
int
frstor
aam
enter
or
pop
movs
adc
ficomp
(bad)
sub
pop
test
ret
test
loop
in
inc
test
cmp
gs
jle
add
sar
sbb
imul
sti
(bad)
out
jmp
fldenv
pop
es
out
jmp
and
stos
cmps
adc
xchg
les
cld
and
movs
and
inc
add
lds
and
sub
data16
shr
out
out
mov
push
in
xor
fucom
icebp
dec
push
pop
scas
inc
xchg
loopne
pop
xor
inc
push
out
fldenv
fsub
jne
das
xchg
cmp
xor
pop
out
lods
test
inc
es
sub
mov
push
xchg
out
pop
push
inc
imul
sub
add
push
push
xchg
lock
push
shl
and
pusha
or
sub
lods
jae
dec
jnp
(bad)
rcl
jl
arpl
lods
mov
outs
les
(bad)
in
js
aas
clc
push
dec
adc
jmp
pop
(bad)
adc
sbb
(bad)
fist
jns
mov
inc
push
xchg
fdiv
pop
imul
leave
aad
mov
mov
out
push
add
pop
push
leave
dec
dec
iret
xchg
inc
adc
mov
outs
jle
into
ins
(bad)
cdq
scas
shl
mov
jg
(bad)
xchg
in
jg
xchg
movs
xor
dec
shl
mov
add
repz
push
inc
xlat
xor
push
daa
ror
inc
pop
jbe
mov
sbb
cdq
imul
xlat
push
mov
shl
adc
push
in
aad
pusha
jo
jne
scas
fstp
int3
out
in
cs
push
leave
jno
shl
sbb
dec
sbb
mov
repnz
xor
push
(bad)
fidiv
fldenv
pushf
xchg
pop
and
aam
pop
dec
push
imul
imul
mov
pop
jmp
inc
sub
movs
xor
mov
loopne
push
les
sbb
mov
fld
cmp
mov
xchg
mov
jmp
sbb
dec
out
mov
xchg
or
or
push
(bad)
jmp
(bad)
les
sar
hlt
pushf
shr
xchg
adc
fnstenv
jle
test
pop
dec
outs
out
out
daa
fwait
dec
out
add
movs
xor
jmp
dec
inc
inc
xor
out
push
lock
and
jg
jno
dec
(bad)
cmp
pop
pusha
pop
popa
push
and
add
mov
dec
and
in
stos
mov
daa
lock
xchg
aam
neg
loop
pop
xchg
in
push
push
stos
mov
aam
xchg
add
stos
jle
mov
das
rcr
(bad)
div
jne
loop
push
scas
sahf
inc
int
mov
adc
push
sti
cmc
bound
test
xor
push
shr
mov
mov
mov
mov
popa
jne
inc
add
loope
dec
outs
push
test
dec
xor
cmps
les
sbb
dec
(bad)
cmc
daa
popa
test
push
push
jnp
inc
aaa
xchg
lods
and
repz
scas
pop
mov
mov
adc
inc
xchg
sbb
test
mov
call
retf
xor
jbe
cmp
mov
(bad)
jmp
jae
repnz
gs
push
pushf
dec
and
jo
xor
push
ds
retf
sbb
cmp
shr
repz
dec
cs
add
add
pop
mov
std
aad
cli
cdq
mov
out
out
mov
jb
(bad)
pop
fst
mov
(bad)
jmp
sti
scas
dec
mov
jnp
pop
mov
mov
cmp
repz
aaa
push
fbld
movs
(bad)
xchg
fnstcw
lods
daa
loope
int
mov
movs
(bad)
(bad)
and
sti
mov
jbe
aaa
sub
cmp
(bad)
dec
add
stc
div
mov
rcr
or
inc
cmp
(bad)
pop
jge
sbb
cld
enter
push
lds
sbb
pushf
push
mov
aam
in
popf
sti
pop
dec
sti
mov
jno
ret
dec
cmp
jecxz
outs
push
sub
dec
add
mov
call
add
adc
push
cli
jmp
fmulp
push
leave
cs
adc
or
nop
pop
loop
(bad)
jns
inc
xchg
retf
bnd
ret
mov
cld
call
jnp
adc
aad
lds
fnstenv
inc
xchg
dec
(bad)
and
(bad)
mov
xchg
repz
aam
out
xor
cmp
sub
ins
les
inc
xor
pop
jl
jb
imul
sbb
bound
jecxz
pop
call
retf
int3
sbb
(bad)
mov
in
inc
xor
jne
fdiv
and
push
ins
mov
int
scas
loopne
sbb
into
jbe
push
add
push
ins
xor
mov
je
mov
and
mov
xor
push
mov
cmp
outs
mov
or
mov
mov
pop
or
cmovns
gs
leave
cmp
sti
pop
ins
and
fiadd
ds
loope
lea
jno
nop
nop
and
mov
mov
aad
outs
adc
dec
sbb
fcmovnbe
sub
pop
mov
movs
mov
dec
xchg
addr16
aaa
inc
push
rol
xchg
push
or
les
sbb
pushf
xlat
hlt
scas
in
outs
scas
add
mov
adc
(bad)
xlat
adc
pop
dec
pop
scas
imul
aas
and
into
mov
push
inc
mov
cmp
mov
mov
mov
js
add
dec
sub
leave
imul
cmp
stc
sbb
and
enter
xor
jmp
xchg
lahf
xor
and
pop
fdivr
stc
nop
cli
sub
inc
mov
xchg
mov
out
call
and
imul
jmp
dec
dec
sbb
cmp
push
jne
or
fucomip
popa
xchg
icebp
adc
(bad)
fwait
push
sub
inc
(bad)
cmp
pop
arpl
or
mov
or
inc
rol
adc
xor
pop
dec
xlat
jae
cmps
xchg
repnz
es
scas
sbb
cmps
mov
test
lahf
loopne
inc
sub
daa
add
lahf
push
xor
cli
jns
lock
pop
jge
not
cmp
inc
pop
or
out
scas
lahf
cmp
adc
clc
cdq
sbb
in
cmps
les
dec
mov
lods
add
pop
adc
fadd
test
xchg
in
xor
cmp
mov
inc
fstp
lock
hlt
movs
xchg
cmp
movs
jge
dec
in
shl
rol
sub
movs
xchg
dec
mov
ficomp
in
(bad)
in
or
add
rcl
or
jne
loope
adc
imul
lods
div
enter
mov
xchg
jecxz
push
xchg
adc
inc
mov
cmp
jo
mov
sub
xchg
cwde
ds
jmp
sbb
cmp
loop
hlt
callw
jo
leave
or
aaa
retf
stc
repnz
fidivr
jbe
pop
cmp
(bad)
push
les
mov
mov
and
jno
jbe
aaa
(bad)
pop
dec
imul
inc
imul
cmps
dec
push
inc
dec
sbb
fistp
push
(bad)
ins
enter
shr
out
xor
cmp
dec
cli
es
lahf
arpl
(bad)
icebp
ja
sbb
xlat
pop
inc
cmc
xchg
daa
pushf
xor
call
cmc
push
pushf
iret
add
xor
push
mov
pop
push
inc
ret
and
or
aad
mov
cli
in
icebp
shr
repnz
aaa
ja
icebp
clc
arpl
mov
sbb
imul
or
lds
enter
dec
push
jno
shl
jne
jne
outs
cmp
out
mov
bound
js
jae
cdq
in
jmp
add
sub
les
(bad)
stos
ds
cmps
mov
pop
mov
lea
and
push
xor
push
lods
push
outs
movs
iret
xlat
(bad)
jmp
in
gs
loope
mov
fld
dec
jle
push
xchg
repnz
mov
inc
or
gs
xor
or
inc
adc
sub
push
dec
lock
cli
movs
retf
pop
ficomp
inc
outs
enter
dec
cld
shl
xchg
mov
fstp
(bad)
cmp
mov
adc
xor
sbb
aad
test
dec
cmp
inc
xchg
in
dec
cwde
mov
mov
jmp
ds
sub
push
je
leave
fistp
cmc
out
mov
or
sub
adc
loope
mov
fcmove
sti
enter
pop
pusha
out
shr
imul
jg
and
fwait
inc
xchg
cmp
out
inc
fsubp
lahf
cmps
mov
push
(bad)
and
cmp
imul
cmp
mov
loop
in
dec
cmp
aaa
jecxz
push
addr16
xchg
int
pop
ficomp
lea
icebp
cmp
ror
pusha
(bad)
jo
sub
in
dec
and
cmp
and
mov
imul
movs
push
out
push
and
rol
pop
sub
test
loopne
enter
fst
pop
outs
push
jne
jbe
in
sahf
xor
cmp
sbb
imul
xchg
lea
jbe
push
pop
dec
inc
aad
loop
add
sbb
xor
jmp
cmc
fisttp
pop
lods
outs
aaa
sbb
jns
xchg
pop
jmp
fist
adc
adc
xchg
push
call
or
(bad)
shl
test
pop
and
xchg
fnsave
mov
xchg
xchg
adc
pop
in
xchg
pop
sub
adc
push
sbb
push
and
jecxz
mov
mov
hlt
jg
mov
and
dec
adc
jo
and
icebp
inc
xor
mov
or
pusha
stos
frstor
xor
pop
cld
jnp
test
rol
xchg
pop
xor
lea
lock
cmps
pop
(bad)
jg
xor
cli
push
xchg
inc
popf
fs
xor
imul
mov
push
fwait
mov
sti
inc
sti
js
retf
(bad)
or
jl
ja
lock
push
(bad)
adc
lods
in
les
repz
jle
leave
(bad)
cs
loop
push
test
dec
in
jno
(bad)
movs
imul
aam
and
outs
inc
loopne
mov
dec
cmp
sahf
sbb
add
icebp
fsubr
inc
jno
push
jbe
aam
aad
adc
inc
int
cmc
test
push
repz
fsub
mov
icebp
add
repz
jmp
mov
lea
call
nop
test
jmp
mov
outs
and
pop
and
cld
loopne
sub
data16
fdivr
or
mov
jp
adc
push
and
imul
mov
mov
sbb
jns
pop
nop
retf
cmp
js
mov
xchg
cdq
xchg
iret
mov
stc
psraw
xlat
dec
xchg
out
sahf
in
mov
sbb
jns
ins
mov
adc
and
mov
outs
fsub
sbb
adc
and
sti
push
div
add
aad
mov
xchg
pop
in
inc
and
add
sbb
add
sbb
sub
or
sub
mov
inc
ss
jmp
pusha
out
cdq
pop
and
icebp
xor
pop
mov
ins
jle
adc
adc
xchg
dec
fs
xor
cmp
inc
cmps
mov
pop
push
test
adc
or
cld
mov
iret
leave
sbb
sbb
es
int3
je
pusha
call
mov
icebp
(bad)
aaa
div
xchg
(bad)
or
hlt
or
sahf
not
sti
std
call
or
mov
and
fmul
push
sbb
xor
aas
push
push
pusha
popa
jle
inc
arpl
(bad)
fst
(bad)
sub
jmp
or
stc
neg
hlt
sbb
jg
leave
fidiv
pop
jo
sar
(bad)
jb
push
fdivr
or
or
pop
inc
xor
xchg
jb
ins
or
inc
mov
jnp
lods
(bad)
enter
repz
jo
push
xor
xchg
and
outs
cmp
xor
lahf
aad
shl
cmp
int
mov
inc
jp
aad
test
xor
push
ja
inc
push
out
pop
loop
inc
rol
or
add
push
mov
sbb
add
add
cdq
pop
scas
cmp
or
std
inc
dec
rcr
out
into
mov
pop
sub
push
inc
test
pusha
fsubr
mov
sbb
test
pop
pop
fdivr
pop
(bad)
mov
imul
inc
xor
inc
aaa
adc
mov
out
mov
cmp
div
rol
pop
xor
xchg
bound
inc
mov
out
loope
jmp
mov
pop
pop
addr16
sub
call
mov
pop
adc
inc
mov
pop
call
es
call
mov
fcmovnb
cmp
int
fimul
cmp
jg
fimul
sbb
push
das
pop
jb
jge
dec
stos
add
enter
retf
jmp
jno
mov
pop
lods
bound
in
jmp
rcl
or
imul
fnstenv
mov
add
jb
addr16
scas
stos
daa
or
idiv
aam
adc
sbb
daa
jl
int3
aaa
xor
movs
adc
in
pop
ds
ret
jnp
cld
imul
stc
enter
fwait
push
jno
xor
pop
into
jp
or
icebp
sahf
push
out
sub
sub
add
xor
mov
(bad)
inc
cmp
test
cmps
cld
out
cmp
in
fst
mov
dec
mov
jecxz
push
fst
and
pusha
push
lods
sbb
(bad)
adc
mov
fxch
repz
push
mov
or
mov
sbb
or
outs
fbld
xor
call
xchg
mov
ds
and
stc
sahf
pop
push
cmp
pop
sar
fdiv
arpl
outs
lods
ror
sar
rcl
sbb
shl
cs
pusha
lea
pushf
ja
adc
cdq
ror
pop
sub
rol
jle
jmp
aam
cmp
cmp
xchg
sti
xchg
inc
inc
sub
es
mov
(bad)
xchg
cmp
out
push
stc
in
sti
cs
xor
popf
mov
jge
outs
mov
(bad)
cmc
mov
pop
and
inc
cmp
(bad)
movs
enter
mov
inc
or
out
jnp
sbb
or
mov
adc
inc
daa
sbb
push
cmp
jae
sub
xor
leave
inc
scas
pop
dec
or
addr16
add
pop
js
lods
push
and
pop
mov
mov
inc
test
ins
mov
dec
push
enter
lods
add
sbb
(bad)
jmp
mov
mov
xchg
outs
iret
inc
or
out
adc
xchg
mov
mov
jmp
push
inc
push
lods
and
rcl
sub
jge
dec
je
jbe
repz
sbb
mov
inc
cmps
enter
(bad)
das
cmps
in
jge
jae
nop
ret
inc
mov
adc
adc
cmps
add
in
ins
call
dec
scas
sub
xor
ss
add
ficom
dec
lods
nop
loop
mov
mov
inc
(bad)
sti
cmp
pushf
fidiv
or
or
dec
push
fcmovu
push
retf
in
data16
inc
aam
xor
stos
dec
mov
and
push
jle
repnz
mov
gs
addr16
fbstp
jp
inc
add
jmp
les
mov
push
cmps
jns
adc
out
and
mov
ret
and
clc
lds
pop
adc
jl
jmp
and
adc
adc
imul
mov
sbb
pop
daa
jne
sbb
and
push
and
sub
test
movs
jge
adc
push
repz
outs
push
mov
push
sub
push
rcl
push
mov
xor
push
data16
sbb
pop
fldcw
pop
in
leave
pop
fldcw
xchg
ror
mov
int
add
aam
(bad)
test
or
mov
sbb
cmc
int3
out
add
mov
cmps
or
rol
cwde
xlat
comiss
(bad)
bound
pushf
adc
std
in
push
and
cmps
push
cs
push
shl
cwde
or
or
mov
frstor
mov
fs
repz
test
repz
dec
fwait
bound
or
hlt
(bad)
into
ins
daa
ret
adc
cmps
push
dec
dec
and
jmp
popa
mov
pop
xor
(bad)
pop
aad
jecxz
dec
fiadd
loop
or
inc
aas
sub
xor
add
push
ret
loop
cld
imul
sbb
imul
and
jo
cmps
mov
push
scas
mov
int3
adc
mov
in
aaa
mov
mov
ror
xchg
loop
pop
popf
pop
(bad)
fiadd
test
mov
inc
mov
mov
sbb
loopne
and
dec
adc
mov
loop
mov
mov
pop
(bad)
xchg
and
xchg
out
popa
or
imul
loopne
adc
je
fwait
iret
sti
mov
movs
pop
adc
pop
and
mov
rcl
cmp
loop
pop
and
enter
dec
mov
arpl
std
jno
iret
fld
das
push
jp
or
cwde
or
cdq
pushf
jp
cmp
loope
shl
leave
sar
inc
fsub
push
retf
lea
sub
ret
aas
push
repz
push
adc
seto
shl
sbb
mov
cmp
sbb
mov
sbb
cli
fiadd
js
push
sub
lahf
sub
dec
jae
lds
pop
pop
dec
popa
in
sub
sbb
pop
xor
inc
jmp
xchg
pop
pop
lock
push
(bad)
(bad)
sub
mov
xor
in
aad
std
cmp
add
aad
dec
arpl
hlt
add
and
les
mov
jmp
cdq
je
test
inc
(bad)
mov
sbb
mov
add
cs
pushf
ja
sti
xor
push
stc
test
push
jg
arpl
xchg
sbb
and
imul
adc
clc
loope
xor
dec
adc
sahf
cwde
mov
(bad)
clc
xchg
push
fdivr
call
in
fimul
and
pinsrw
vmwrite
jo
not
clc
test
push
and
dec
inc
in
inc
outs
in
ret
aaa
adc
popa
cmp
(bad)
call
cdq
inc
int3
xchg
mov
jg
clc
cdq
repz
pop
mov
in
push
jle
jle
rol
std
nop
jb
jge
pop
and
or
int3
imul
rol
xor
out
cs
lods
retf
ins
or
and
cmps
lds
mov
jne
adc
idiv
and
cmc
int
call
xchg
cmp
fmul
mov
in
fcom
jl
push
push
xor
inc
jbe
sbb
stos
shrd
test
inc
mov
ret
push
xlat
mov
push
or
jmp
pop
cmps
fucomp
cmp
xlat
cmp
add
repnz
add
scas
inc
lahf
out
movs
xchg
cmp
xor
push
adc
or
push
sbb
and
mov
push
jp
jmp
nop
jae
push
jne
add
sbb
outs
mov
shr
and
mov
std
add
call
xchg
jns
ins
cmp
rol
xor
div
sub
jne
sbb
cmp
test
cdq
mov
push
mov
retf
popa
aaa
dec
mov
lea
movs
ins
rcl
adc
jo
and
sbb
stos
pusha
stos
repz
sbb
js
inc
xor
call
mov
stc
cld
gs
repnz
push
or
push
mov
lock
lahf
mov
retf
xor
inc
ja
ret
imul
adc
in
test
push
adc
sbb
cdq
sbb
pop
mov
xor
sub
mov
dec
leave
add
loope
sub
xchg
cld
rcr
xor
aam
in
(bad)
mov
xchg
lods
inc
outs
pop
push
push
push
mov
sar
cwde
jge
icebp
push
mov
fs
mov
iret
in
pop
inc
push
pop
add
dec
pop
pop
mov
dec
or
sahf
int
mov
mov
clc
cmp
jno
mov
adc
(bad)
sub
and
lock
dec
sbb
xchg
sub
push
or
js
ds
and
jnp
xor
shr
in
stos
mov
add
push
push
in
xchg
cmps
sub
inc
int3
xor
mov
inc
out
inc
xor
ja
jbe
inc
jmp
jns
fadd
lods
out
jg
jl
sbb
and
and
adc
pusha
jo
sbb
ss
aas
pop
xchg
aad
loopne
ret
pusha
aam
sti
xor
push
cmp
cmps
cmp
adc
push
hlt
xor
dec
jl
xchg
int
retf
inc
or
push
jp
xor
or
add
les
push
mov
pop
clc
addr16
cmps
jae
mov
int3
rcl
(bad)
or
mov
pop
fwait
and
test
stc
jge
stos
add
or
dec
cwde
ins
push
sub
inc
push
clc
xchg
mov
mov
ss
sbb
jmpw
inc
jl
and
add
sub
or
dec
popa
or
in
out
jb
xchg
sbb
nop
inc
imul
stos
sbb
not
dec
iret
iret
push
outs
fwait
mov
xchg
mov
icebp
leave
add
add
xchg
cmova
mul
dec
inc
jmp
pop
push
(bad)
aas
shr
xor
mov
rol
jno
in
fwait
outs
sub
sbb
les
ins
scas
mov
dec
and
dec
icebp
nop
lock
in
sbb
jb
xchg
mov
dec
add
push
test
loop
sub
mov
cdq
iret
or
cmp
shr
sub
fs
mov
mov
inc
lods
sub
arpl
scas
xor
xor
aad
das
into
out
imul
mov
js
inc
nop
leave
xchg
mov
test
xchg
lds
inc
pop
add
pusha
inc
cmp
(bad)
sub
sub
cmp
adc
push
hlt
ds
adc
sbb
cmps
mov
cwde
mov
mov
aad
dec
pop
xchg
mov
cmps
fldcw
iret
test
mov
cmps
int
add
icebp
jle
scas
or
inc
xbegin
pop
cwde
xchg
call
retf
cmp
jne
xor
arpl
fisttp
clc
add
lds
mov
mov
fld
add
push
es
xor
dec
xchg
in
mov
pop
pop
and
ss
hlt
sub
(bad)
ficomp
(bad)
jge
sti
call
out
xchg
sub
inc
jb
add
scas
movs
fidiv
imul
pminsw
dec
in
xchg
inc
adc
iret
push
xchg
out
shr
test
pop
fimul
ss
adc
inc
cmp
adc
js
jb
and
es
jae
test
push
adc
ss
mov
cmps
mov
std
cmp
cmp
sbb
mov
mov
push
call
xor
push
test
xchg
in
xchg
(bad)
ins
loop
or
fcmovnb
aad
inc
in
divps
xor
mov
mov
xchg
pop
cwde
jl
inc
mov
shl
jl
adc
icebp
dec
mov
dec
mov
out
mov
inc
arpl
sub
push
and
sub
inc
or
mov
xchg
popa
mov
push
and
jno
hlt
dec
loop
dec
xor
(bad)
cmps
inc
shl
sbb
adc
les
movs
in
pop
jb
imul
outs
mov
cs
sbb
cmp
scas
test
fadd
in
or
xlat
sbb
outs
fadd
es
call
cmp
mov
cmp
cwde
sti
push
and
jae
in
mov
shr
cmps
sbb
outs
loop
js
cmps
fcmovne
add
cmp
add
xchg
mov
clc
shl
and
lock
add
int3
push
adc
outs
cmp
adc
not
into
xor
loope
push
es
sti
(bad)
xor
dec
inc
daa
xor
add
jmp
mov
je
movs
adc
test
xchg
ins
test
sbb
mov
adc
enter
das
mov
xor
sahf
ins
pop
div
push
pop
cmp
addr16
xor
pop
mov
out
in
in
inc
add
sub
mov
add
push
add
mov
je
shr
sahf
push
movs
pusha
movs
lahf
dec
and
repnz
push
cmp
adc
push
jmp
outs
jge
mov
mov
stos
stc
jecxz
and
in
sbb
sub
mov
mov
fdivr
adc
inc
cmp
pop
mov
push
mov
retf
jl
jmp
jno
sbb
leave
adc
int
lds
imul
popf
(bad)
in
fstp
and
pop
aaa
jg
cmp
ret
pop
pop
out
iret
(bad)
popa
int
mov
pop
and
add
call
mov
mov
neg
xchg
pop
shl
pop
mov
xor
je
imul
pop
jne
(bad)
mov
call
sbb
push
out
mov
out
mov
mov
sub
inc
(bad)
xor
sbb
loopne
or
sbb
push
shl
fiadd
sahf
faddp
loop
inc
cmps
push
ss
cwde
xchg
hlt
addr16
mov
sub
or
enter
mov
cmps
(bad)
aam
pop
ins
mov
in
xor
jae
(bad)
xor
dec
mov
sar
mov
call
repz
movs
jmp
sbb
rcr
out
jp
xor
neg
leave
scas
fwait
push
call
int3
cld
mul
fidivr
jae
out
pushf
rol
add
inc
sbb
dec
fwait
imul
out
cmp
mov
dec
inc
ds
addr16
inc
fiadd
and
push
xchg
or
int
ret
popa
imul
jl
test
sub
sbb
pop
cmp
in
in
retf
push
mov
mov
add
ficom
addr16
mov
sbb
pusha
cld
push
and
dec
sbb
sub
dec
shr
repnz
(bad)
xchg
aaa
ret
test
nop
fincstp
dec
mov
mov
fistp
(bad)
pusha
pop
pushf
sbb
jge
push
aaa
or
add
cmp
movs
mov
ror
lock
cmp
int3
jp
es
inc
(bad)
ss
lods
jle
(bad)
int
(bad)
pop
mov
push
ja
lods
arpl
adc
add
shl
(bad)
movs
cmp
adc
push
jnp
or
clc
lods
or
push
mov
cmps
mov
mov
std
retf
sub
sbb
ror
adc
test
xchg
or
jge
mov
repnz
rol
xor
test
cmp
jmp
jnp
fs
add
xchg
pop
pusha
push
mov
aam
mov
or
mov
repnz
mov
mov
or
mov
loopne
mov
push
cmovs
shld
aam
inc
fisub
inc
data16
not
das
mov
xor
and
jae
rcl
pop
cmp
xlat
push
in
out
pop
mov
cmp
jp
cwde
inc
or
cmc
xchg
es
push
jecxz
retf
scas
sti
hlt
and
mov
jno
shl
mov
in
pop
push
inc
ret
inc
mov
dec
enter
dec
push
jo
pop
sbb
adc
test
xchg
fdivr
(bad)
mov
test
pop
sub
inc
push
add
in
lea
mov
lods
fisub
in
xchg
lea
push
hlt
mov
icebp
je
push
push
or
cmp
mov
dec
fmul
pop
jp
ins
jnp
cmp
mov
sbb
jmp
xchg
scas
(bad)
cmp
push
adc
retf
adc
cmp
cmp
sbb
pop
outs
mov
xlat
mov
ret
sub
pop
shl
and
xchg
sahf
and
pop
cdq
gs
jmp
push
call
fs
aas
aaa
shl
push
sub
aam
sbb
ret
pop
sahf
lahf
rcr
retf
inc
push
adc
scas
push
inc
push
int3
jns
test
mov
movs
pop
(bad)
inc
mul
jmp
int3
movs
and
dec
dec
inc
nop
adc
sub
pushf
outs
shr
push
jmp
dec
dec
sbb
jmp
jle
out
pop
push
mov
shl
aas
adc
jo
or
adc
or
repz
fwait
(bad)
iret
pop
jbe
xor
push
adc
ss
jne
call
fdiv
mov
dec
call
inc
adc
xor
jnp
jmp
mov
and
dec
push
fwait
retf
add
inc
lea
fs
sub
out
xchg
imul
icebp
inc
call
jecxz
cmps
add
or
scas
daa
add
pop
aaa
outs
sub
movs
ror
pop
inc
cmp
jb
pushf
push
out
repz
(bad)
xor
push
fimul
mov
mov
or
push
xor
inc
(bad)
rol
stc
push
lea
cmps
pusha
stc
int
popa
xchg
adc
mov
aaa
xor
mov
pop
adc
cmps
and
mov
or
sahf
cld
cmps
pop
test
nop
bound
jne
fisub
mov
mov
ror
and
(bad)
push
jle
bound
fbld
lds
push
mov
aam
ins
xchg
adc
push
pop
xor
cmp
sbb
aaa
and
int3
ja
adc
mov
ror
mov
jmp
imul
js
out
cwde
(bad)
dec
loope
lds
cmps
neg
dec
sub
cmp
fwait
adc
sbb
and
call
mov
jp
add
dec
adc
lock
pop
jae
lods
mov
imul
rcr
push
add
inc
call
push
fwait
jbe
ins
xor
imul
fbld
or
(bad)
mov
mov
out
cld
xor
xor
mov
rcr
pop
pop
push
push
mov
call
or
ss
iret
mov
mov
mov
(bad)
das
jge
or
(bad)
inc
push
mov
adc
shr
out
inc
iret
in
in
daa
stos
ins
cmp
retf
into
add
daa
sar
sub
mov
call
jle
int
add
inc
popa
out
cmp
inc
fmul
enter
aas
pop
xchg
mov
jp
sub
dec
jp
and
mov
mov
inc
call
xchg
add
ja
and
push
daa
int3
cmp
out
aam
mov
and
and
adc
mov
aam
sahf
fdiv
jge
ss
sbb
movs
or
mov
iret
mov
dec
mov
pushf
ficom
neg
hlt
mov
push
and
pop
cmp
sub
pop
or
stc
mov
fcom
dec
mov
dec
push
jae
xor
xchg
and
sbb
mov
mov
outs
xor
push
xchg
daa
mov
inc
push
repnz
and
call
push
ds
test
loopne
push
sub
outs
(bad)
mov
addr16
add
mov
inc
push
repnz
cmps
sub
jbe
sub
jbe
push
inc
xchg
cli
dec
sbb
cmovno
fdivr
out
sbb
dec
icebp
je
jbe
gs
fcmovnbe
push
add
mov
enter
cmp
mov
dec
movs
cmps
adc
idiv
aam
pop
cmp
pop
(bad)
xchg
pop
jecxz
outs
xor
push
jg
fistp
jmp
icebp
or
pushf
cmps
xchg
cld
xlat
sbb
push
and
cmc
nop
aaa
sub
add
hlt
aaa
sar
or
mov
jmp
sbb
mov
jo
out
mov
or
adc
mov
and
fcomp
neg
dec
inc
ins
cwde
stos
rcr
sar
in
aad
stc
mov
mov
mov
inc
xchg
lock
mov
mov
stos
nop
mov
sub
push
lods
in
repz
dec
enter
dec
xor
(bad)
or
nop
jne
fscale
test
les
jle
pop
mov
cmp
mov
mov
dec
mov
add
cdq
not
js
cmp
adc
jmp
int
sbb
cmp
push
movs
mov
andps
add
push
ss
ret
stc
mov
js
imul
mov
test
xchg
mov
(bad)
jl
cmps
jg
call
push
dec
cmp
or
hlt
inc
xchg
xor
cdq
int
xchg
mov
aas
mov
aas
sub
pushf
adc
imul
test
(bad)
(bad)
popf
jge
pusha
sbb
call
leave
mov
and
rol
mov
jl
mov
cs
addr16
das
or
jmp
push
out
(bad)
pop
mov
mov
shl
mov
gs
add
mov
sub
xor
outs
cmps
sti
inc
add
imul
aas
jno
push
add
xor
fdivr
scas
cli
sti
mov
mov
ret
and
sbb
cmp
cwde
add
int
cmp
mov
or
inc
aas
fwait
cmp
mov
inc
or
cdq
fidivr
jg
pushf
out
mov
xchg
std
push
shl
mov
cmp
aas
xchg
push
jno
in
test
dec
sahf
add
cmps
cld
pop
aad
sbb
jno
std
loop
retf
add
fisubr
inc
clc
jle
push
mov
ror
out
fadd
daa
out
lods
sahf
retf
inc
push
pop
cmp
pop
mov
sub
mov
imul
cmp
test
aad
mov
jnp
sub
jo
cli
fisubr
adc
or
push
and
lods
imul
dec
inc
cmp
add
(bad)
pop
mov
stos
xor
add
test
cmp
inc
sub
xchg
cmp
bound
cmp
mov
scas
xchg
popf
pop
lea
push
test
adc
test
shl
loope
and
stos
das
mov
loopne
popa
jl
and
jl
scas
mov
dec
outs
xor
or
mov
mov
mov
les
inc
ins
pop
cwde
test
repz
xor
fdivr
inc
pop
das
dec
sbb
push
hlt
lahf
retf
cwde
imul
adc
ret
test
add
sub
ret
popf
mov
push
loopne
vmovd
mov
imul
pop
pop
jo
mov
les
outs
scas
repz
jge
mov
mov
pop
cmp
push
out
mov
jle
jg
jmp
or
sar
lods
sbb
(bad)
(bad)
stc
nop
inc
ins
xor
ds
push
outs
pop
cmps
cmp
pop
adc
call
push
inc
mov
add
adc
out
push
shl
imul
jl
addr16
stos
dec
int
mov
inc
xchg
lea
enter
cdq
je
bound
pop
stos
idiv
xor
or
pop
js
inc
add
imul
push
xchg
test
rcr
push
push
lahf
inc
and
in
push
or
xor
xchg
adc
dec
or
dec
mov
or
xor
mov
cld
(bad)
jnp
stos
dec
test
idiv
adc
jnp
mov
mov
inc
ret
xchg
sbb
aaa
imul
imul
pop
mov
push
xchg
outs
aad
jmp
pusha
adc
movs
dec
outs
pop
mov
cmp
adc
adc
sbb
xor
dec
in
dec
rcr
jno
mov
mov
jecxz
jae
int3
int
pusha
ds
shr
xor
xchg
jne
movs
hlt
or
lods
and
lea
cmp
xchg
add
dec
loopne
mov
push
mov
iret
shl
retf
mov
es
cmp
out
pop
test
out
popf
pop
aas
test
push
inc
mov
mul
pop
pop
aad
adc
imul
rcr
push
mov
mov
in
stc
cmps
ds
(bad)
cmc
push
sbb
dec
or
leave
xor
or
sub
sbb
jns
mov
sub
and
call
es
pop
sbb
pop
popf
in
mov
jo
(bad)
je
out
sbb
jp
inc
sbb
jp
ret
dec
push
mul
cmp
imul
dec
(bad)
jne
or
cli
repz
(bad)
push
inc
scas
loopne
retf
adc
cli
fsub
dec
pop
add
scas
mov
mov
push
movs
xor
(bad)
sub
sti
imul
adc
clc
jp
sub
ins
cmp
retf
and
outs
test
loop
cmp
repnz
lods
and
mov
pop
(bad)
push
xlat
fidiv
arpl
mov
inc
sub
sbb
mov
iret
dec
push
(bad)
cmc
movs
pop
pop
cmc
pop
jno
mov
jae
scas
cmp
inc
xor
pop
adc
daa
pop
mov
xor
xor
and
mov
call
dec
push
jg
xchg
mov
ja
mov
popf
rcl
ins
div
push
xchg
clc
inc
push
xchg
stos
jns
(bad)
neg
inc
mov
jl
xor
scas
repz
push
dec
ins
xchg
loop
adc
into
(bad)
call
adc
push
cmp
jg
and
daa
pop
sbb
(bad)
sbb
sbb
ret
adc
inc
xor
mov
ret
repnz
adc
aaa
call
inc
mov
(bad)
mov
mov
mov
dec
fsub
push
call
unpckhps
push
pop
jle
out
scas
add
outs
ins
fdiv
jmp
icebp
mov
lahf
(bad)
dec
cmp
fs
xor
xchg
or
ins
cmps
push
cmp
jnp
pop
imul
lock
push
loop
repz
jp
xlat
stos
pushf
jg
out
jecxz
imul
mov
mov
sub
add
push
cmp
outs
push
rcl
and
rcr
dec
push
push
sbb
rcr
nop
push
sub
dec
xor
sbb
stos
jno
mov
dec
sub
pop
cmp
and
movs
jbe
mov
ins
or
jge
xor
in
pusha
cli
(bad)
je
sub
mov
repnz
push
daa
(bad)
sub
in
push
(bad)
mov
and
xchg
jg
loopne
pop
into
std
jbe
fbld
mul
mov
jmp
push
lock
lods
or
add
sti
sbb
pop
lahf
pop
jecxz
lods
add
ss
push
dec
aam
inc
movs
(bad)
and
mov
lea
out
xor
jmp
mov
cmp
mov
retf
sbb
leave
jge
leave
cmp
cmp
cmp
iret
jg
dec
jmp
gs
out
mov
lea
push
mov
cmp
aam
pop
dec
f2xm1
push
fsub
hlt
push
dec
bound
cmps
mov
xor
jg
cmp
hlt
mov
out
test
clc
cmps
repz
outs
push
xchg
mov
add
and
or
es
pop
sti
mov
sbb
xchg
sbb
push
daa
loop
ret
mov
aas
dec
scas
add
std
dec
lods
ret
add
add
fisttp
or
rcl
mov
sub
fadd
jno
push
aas
(bad)
push
out
frstor
xor
data16
cmps
pop
mov
mov
pusha
rcr
cwde
outs
aam
fs
ret
or
xchg
xchg
inc
cmp
jle
icebp
cld
icebp
jmp
jp
mov
adc
out
sub
aad
sahf
inc
cmp
dec
sbb
adc
stc
mov
stc
mov
sar
cdq
into
xor
in
das
pop
aad
or
dec
sub
(bad)
jp
jae
mov
push
cli
xor
das
arpl
sbb
aam
into
dec
push
std
mov
shl
mov
ds
ins
aas
cmp
call
out
jnp
cdq
dec
ror
xor
xlat
sbb
ret
sbb
movs
add
dec
dec
repnz
sbb
shl
mov
mov
add
jbe
stos
xchg
sub
mov
mov
xor
cwde
(bad)
xchg
add
jmp
xor
gs
cdq
adc
mov
and
call
in
jl
xor
int3
cmp
jb
xor
inc
arpl
adc
jae
sub
repnz
mov
loopne
jae
xor
mov
jmp
xchg
xlat
scas
xor
ins
xor
stos
jmp
xchg
push
call
xor
repnz
mov
add
retf
in
pop
cmps
add
jo
xchg
or
add
cmp
dec
adc
dec
mov
sub
mov
cdq
push
test
sar
inc
shl
jmp
mov
mov
lahf
fld
mov
mov
cmps
dec
xor
loopne
push
push
mov
int3
push
fdivr
push
data16
mov
xor
inc
mov
loop
movs
movs
test
jne
rcr
jmp
xchg
sub
inc
push
xor
mov
stos
in
xchg
mov
addr16
popa
xlat
dec
mov
jne
inc
sub
test
dec
add
cmc
test
sub
repnz
add
mov
sub
xor
pop
mov
xchg
outs
into
mul
mov
sbb
mov
mov
mov
in
sub
sbb
dec
push
shl
dec
add
add
das
add
jbe
pop
iret
pop
mov
lods
movs
and
in
mov
popa
adc
sbb
and
dec
into
xor
sahf
rcl
jb
test
sub
jecxz
fsubr
inc
sbb
and
lods
retf
sub
js
cmp
mov
out
aas
add
das
stc
icebp
xor
adc
rol
div
popa
nop
retf
jne
xor
pushf
std
sbb
test
mov
mov
mov
pushf
and
jns
daa
iret
mov
cmp
sbb
xchg
call
xor
add
xchg
xor
sub
and
pop
mov
(bad)
xor
pop
fldcw
ss
sbb
jns
les
pop
pop
or
fisubr
mov
(bad)
mov
push
and
lods
jmp
pop
nop
and
pop
mov
jmp
jnp
aaa
or
dec
imul
pop
test
mov
jo
and
ret
xor
out
adc
test
or
ficom
adc
adc
das
xor
mov
lods
push
aad
xor
xchg
jmp
rol
out
loop
iret
jecxz
in
push
add
pop
retf
shl
jp
adc
mov
cli
(bad)
mov
sub
mov
das
xchg
ja
mov
icebp
push
mov
nop
shl
retf
jo
sbb
out
in
mov
mov
add
sub
stos
add
data16
add
jge
loope
sbb
cmps
push
add
adc
xchg
jno
cmc
bound
jbe
sbb
ja
(bad)
lock
fisttp
mov
cdq
xor
or
xchg
inc
ds
iret
pop
fiadd
inc
xchg
not
lds
ret
fs
popa
inc
jmp
scas
fcomp
pop
(bad)
aad
imul
movs
push
bnd
not
inc
mov
das
and
pop
sub
push
daa
ror
jg
int
mov
ins
fldenv
lods
xor
aas
aas
lds
sub
lock
dec
cmc
xchg
sbb
cli
mov
(bad)
fimul
pop
jbe
std
pop
pop
cld
mov
ret
dec
mov
fild
dec
(bad)
sbb
addr16
inc
sbb
adc
mov
or
mov
es
icebp
jne
in
mov
lea
inc
xor
adc
adc
leave
je
push
(bad)
sti
inc
push
std
shr
sbb
xchg
pop
clc
cmp
pop
mov
(bad)
loope
mov
or
fsub
xlat
pushf
xor
out
repnz
xor
sub
icebp
lods
dec
xor
les
sbb
push
div
shr
dec
stos
outs
sbb
mov
xor
in
dec
and
int3
lahf
pop
inc
adc
mov
lods
adc
jl
mov
mov
mov
addr16
sub
arpl
mov
aaa
dec
mov
fstp
cmp
add
test
xor
and
inc
adc
int3
inc
cmp
fadd
inc
sub
aad
int3
int3
push
mov
xor
mov
dec
jle
mov
test
arpl
jb
call
jnp
adc
push
inc
mov
jge
test
jecxz
jle
scas
push
inc
xchg
pusha
rcr
stos
popa
mov
pop
add
into
sar
add
sahf
in
push
xor
jns
jbe
dec
repnz
mov
and
push
das
jbe
dec
dec
inc
add
inc
adc
aas
and
jmp
xchg
mov
movs
sbb
shl
push
push
lea
inc
jns
hlt
adc
inc
jmp
jmp
adc
iret
(bad)
js
sub
stc
repz
(bad)
or
cwde
sub
xchg
fstp
cmp
xchg
stos
nop
not
inc
xchg
sub
or
pop
mov
mov
mov
mov
fcom
sub
repnz
mov
push
retf
sub
loop
cmp
repnz
jp
mov
pop
add
add
inc
push
cmp
adc
push
inc
push
adc
enter
mov
push
fst
stc
adc
call
jne
mov
xchg
gs
dec
and
add
mov
add
add
mov
dec
call
fisubr
mov
sahf
lods
es
inc
xchg
cmp
xchg
je
add
inc
mov
sbb
sbb
mov
mov
int
jmp
push
out
and
mov
fsub
popf
aad
adc
nop
and
loopne
aam
sahf
add
aam
push
loope
mov
(bad)
mov
(bad)
mov
fadd
(bad)
adc
loope
ins
inc
inc
sti
push
xchg
add
adc
loopne
sbb
out
xor
jne
nop
push
in
hlt
mov
pop
push
and
in
js
jne
push
mov
add
scas
dec
sub
cmps
popf
pop
sub
cmp
xchg
inc
retf
test
cmp
pop
dec
scas
stc
pop
shl
loop
mov
xchg
xchg
loopne
movs
pusha
pop
movs
adc
push
inc
fisttp
out
inc
nop
dec
pop
xchg
ja
(bad)
fwait
mov
test
sub
jp
stos
repz
jbe
add
cmp
and
adc
dec
pop
nop
and
inc
mov
cdq
dec
adc
sub
cmp
(bad)
fisub
test
repnz
(bad)
inc
popf
nop
jge
fild
push
or
jge
repnz
sub
cli
and
mov
xchg
push
mov
je
push
rcr
jb
xchg
jb
adc
pop
pushf
arpl
xchg
outs
mov
lods
sub
xor
ret
mov
dec
jp
retf
adc
push
push
imul
mov
aaa
jg
mov
fist
jmp
xor
dec
sti
cdq
add
adc
dec
and
ret
out
in
push
cmp
dec
xchg
push
fild
adc
ja
jns
xor
iret
or
sbb
push
shl
loope
pop
cs
gs
in
ja
cmp
pusha
ror
retf
pop
jl
inc
cmps
push
push
lahf
xor
cmp
cmc
daa
adc
jmp
sahf
idiv
popa
enter
pop
in
outs
or
dec
jecxz
mov
jbe
cdq
mov
sub
(bad)
or
or
les
(bad)
iret
pop
shl
sub
and
ds
mov
adc
hlt
push
lds
push
mov
mov
adc
jecxz
add
std
dec
xchg
lods
sbb
cli
aad
aaa
cli
sub
in
adc
fisub
arpl
push
mov
cmp
mov
push
arpl
ins
cdq
jae
mov
adc
adc
cmp
cmp
(bad)
jg
push
enter
lods
ins
mov
test
fdivr
lahf
les
adc
ret
cli
(bad)
jnp
push
hlt
and
pop
jnp
in
xchg
dec
adc
adc
out
stos
(bad)
fisub
in
dec
sbb
inc
test
mov
mov
mov
sub
cmove
sub
out
lods
add
in
pop
(bad)
jo
mov
dec
aas
dec
dec
aad
les
test
jbe
shl
pop
fbstp
(bad)
dec
aam
dec
mov
shr
adc
cmps
ss
jge
xchg
test
enter
inc
test
cmp
adc
jg
xlat
push
je
icebp
xchg
push
movs
rcl
sub
mov
xor
push
cwde
pusha
jle
mov
data16
sbb
sbb
inc
icebp
sub
shr
add
in
out
arpl
jo
fcom
iret
jae
jbe
std
cmp
cmps
mov
sbb
dec
test
add
mov
jno
adc
inc
inc
aaa
mov
pop
jmp
inc
xor
cdq
mov
sar
les
cdq
mov
sub
sub
jmp
dec
push
inc
sub
cmp
and
mov
stc
mov
movs
mov
mov
cmc
pop
pop
sub
cmc
cmps
(bad)
fstp
inc
aam
inc
sbb
call
jge
jae
les
neg
push
mov
sahf
push
popf
sbb
xchg
or
imul
enter
fmul
jae
xlat
inc
sub
loope
cmp
mov
scas
xchg
dec
imul
lds
das
loopne
je
cdq
sub
int
daa
xchg
push
aas
popa
popa
mov
movs
mov
cwde
stos
ja
cmp
jle
test
dec
(bad)
pop
inc
sahf
pop
fs
sbb
pop
xchg
popf
(bad)
pop
mov
mov
stc
mov
dec
dec
and
or
in
inc
xor
dec
repnz
adc
push
pushf
stos
xlat
pushf
or
mov
jmp
iret
rcl
test
add
cmp
nop
push
retf
out
sub
sub
jne
imul
sub
out
xor
iret
dec
retf
jbe
sti
or
test
push
icebp
imul
(bad)
xlat
push
push
mov
jp
in
dec
mov
add
dec
ins
test
jmp
add
add
scas
adc
popa
test
repnz
jns
out
or
jae
(bad)
out
mov
push
ins
daa
or
cs
ins
jnp
shl
sub
mov
mov
pop
idiv
bound
pop
pushaw
cdq
jbe
clc
(bad)
cmp
fisttp
pusha
sbb
or
jae
add
push
cli
inc
jl
or
js
mov
add
cmps
mov
daa
xchg
scas
sti
aam
push
retf
cld
xchg
sbb
jecxz
add
bound
xchg
pop
push
dec
data16
cli
add
lea
add
xchg
mov
jmp
dec
add
jns
and
fistp
movs
add
test
push
lahf
leave
push
dec
push
and
cmp
sub
add
enter
xor
aad
xchg
cmp
add
mov
push
jns
and
sbb
add
stos
sar
outs
add
inc
cli
and
retf
or
cmp
xor
scas
ja
mov
inc
push
out
daa
inc
out
int
inc
call
lods
mov
(bad)
das
loope
mov
cdq
sub
(bad)
or
scas
ficomp
jne
(bad)
(bad)
and
sahf
mov
pop
mov
sbb
icebp
rol
jge
(bad)
pop
pop
pop
mov
mov
dec
cmc
cdq
scas
inc
mov
loope
mov
fidiv
cmp
les
inc
push
xchg
mov
scas
sbb
mov
adc
xchg
rol
push
sub
sahf
jp
jp
jge
pushf
pop
sahf
and
cld
and
es
push
cmp
sub
xor
jecxz
cwde
cmps
pminsw
shl
push
mov
call
stos
test
stos
jne
(bad)
push
out
ds
jmp
mov
loope
sub
xchg
adc
jae
pop
hlt
mov
ret
cmp
pop
aam
inc
mov
sbb
mov
xchg
dec
push
jno
xor
pop
(bad)
jl
stos
mov
dec
pushf
dec
dec
cmp
add
aaa
xchg
sub
fstp
mov
(bad)
out
fdivr
push
(bad)
mov
call
push
jae
push
jmp
sbb
stc
outs
jno
xor
mov
jge
scas
mov
dec
mov
sti
push
popa
test
or
pop
stos
dec
adc
jne
fsubr
cmp
jmp
out
mov
lods
shr
mov
imul
mov
sbb
dec
dec
clc
hlt
pop
leave
mov
pop
jnp
aas
cmp
cmp
push
das
mov
pop
mov
sub
cmp
pushf
shl
sbb
ins
out
inc
leave
test
inc
mov
jmp
cmps
lgs
fist
ret
pop
rol
push
dec
and
pop
inc
(bad)
adc
add
fcmovb
int3
xchg
dec
jmp
repz
adc
fcomp
out
and
ins
das
and
inc
mov
push
ja
sub
or
or
xchg
cmp
mov
xor
push
push
adc
inc
test
mov
dec
ins
daa
push
jecxz
into
sbb
in
add
or
xlat
sbb
es
mov
cmp
dec
lea
rcr
jne
dec
stos
ficom
retf
xchg
inc
test
dec
ret
sbb
inc
push
int3
fs
addr16
adc
cmp
or
movs
xor
stos
cdq
xlat
inc
add
sub
dec
cld
xor
jge
inc
push
inc
fdivp
in
jle
mov
jmp
or
add
aaa
sahf
xchg
rcl
ss
inc
cdq
lahf
ret
mov
push
lods
mov
aam
jne
mov
add
sbb
sub
ror
cmp
ror
mov
mov
retf
ins
adc
test
add
aam
pop
imul
jge
xor
jecxz
arpl
ja
sub
bound
retf
rcl
mov
dec
cmp
xlat
stos
fidivr
movs
ja
aas
jle
je
mov
loop
pop
call
lahf
add
and
xor
loope
jge
mov
sub
dec
push
scas
mov
fisubr
inc
loope
repz
sub
movs
push
mov
pop
and
(bad)
xchg
mov
xchg
mov
ror
mov
inc
pop
pop
mov
add
js
adc
jg
add
xor
pop
add
pop
pop
ins
jne
push
test
xchg
test
loop
xchg
jno
das
lods
dec
mov
addr16
popf
scas
xchg
movs
xor
push
(bad)
sub
fistp
inc
cmps
out
jl
inc
inc
mov
xchg
das
data16
loope
and
inc
mov
stos
pop
add
mov
jbe
rcl
xchg
aam
mov
adc
les
mov
pop
clc
gs
dec
rcl
inc
push
ja
mov
cmp
inc
mov
sbb
sub
in
sub
(bad)
and
add
call
jmp
and
les
test
dec
icebp
mov
lds
jle
jb
cwde
add
xor
or
pop
xchg
and
popa
add
jns
pusha
jecxz
lds
sbb
xchg
cdq
shl
add
xchg
jle
jbe
fcmovu
scas
js
call
gs
repnz
dec
sub
fisubr
mov
retf
mov
adc
jne
jp
mov
jl
es
outs
ret
ins
xor
jl
sbb
mov
je
jp
aad
xlat
cli
test
adc
cmp
retf
sub
(bad)
dec
mov
jb
mov
test
add
lods
or
mov
(bad)
and
or
pop
out
sbb
mov
push
dec
mov
inc
fcom
(bad)
mov
imul
push
popf
jae
les
jge
dec
nop
scas
div
mov
sub
scas
rcl
js
hlt
movs
es
(bad)
xchg
push
stos
scas
scas
adc
push
jbe
xchg
(bad)
jmp
jmp
rcl
xor
popf
mov
and
and
retf
inc
fwait
cmps
or
mov
mov
push
mov
icebp
mov
mov
jo
fsub
mov
out
jae
data16
push
bound
mov
imul
retf
mov
jns
bound
fs
scas
lea
fistp
lods
int
arpl
cmp
shl
jne
mov
pusha
sub
pop
in
and
sbb
mov
mov
idiv
cmp
arpl
sub
sub
mov
mov
aaa
jg
retf
push
xlat
repz
adc
fucom
movs
in
iret
dec
outs
outs
sbb
ret
scas
push
int3
xchg
dec
sub
in
in
push
mov
or
push
jge
mov
push
outs
jge
sbb
pop
dec
shl
test
xlat
sub
int3
rcr
scas
jmp
mov
xchg
push
idiv
adc
cwde
aad
rol
or
int3
fstp
pop
jno
xchg
lods
mov
call
push
push
inc
jp
mov
sub
mov
mov
cli
mov
test
sbb
push
inc
cmc
or
ja
retf
loopne
push
out
sbb
push
dec
mov
xor
xlat
stos
jns
fdiv
and
test
int3
cmp
pop
ds
sub
cwde
cdq
jo
outs
loopne
test
inc
xor
or
jae
fdiv
ret
scas
sbb
add
add
push
daa
jae
add
mov
dec
sbb
loop
rol
das
add
and
in
lea
sub
dec
test
or
xchg
pop
ror
out
(bad)
and
jge
add
scas
mov
in
and
and
jo
mov
loop
(bad)
mov
shl
pop
sub
aam
gs
pop
mov
lahf
jge
mov
int
jmp
ins
das
xor
mov
out
xor
call
sti
or
mov
rol
jmp
dec
(bad)
mov
add
jno
leave
inc
aam
sbb
add
cmc
push
xchg
das
scas
lock
sahf
cmps
ja
fcmovnbe
dec
fwait
movs
sub
outs
push
out
mov
rcl
popa
aad
mov
cwde
add
sbb
ret
sar
je
out
cdq
mov
(bad)
rcl
mov
push
enter
sbb
leave
and
jg
ja
test
push
pop
xchg
add
jl
mov
sbb
add
fs
inc
dec
or
dec
dec
stc
xor
adc
mov
push
sbb
xor
loop
arpl
pop
adc
push
fdivr
ret
js
cmp
mov
push
les
cs
test
fisub
sub
retf
push
cmp
pop
test
lods
adc
fst
fstp
mov
jae
pop
out
pop
pop
sbb
or
daa
xchg
hlt
jmp
imul
mov
in
push
sub
adc
pop
xchg
cmps
xchg
cmp
fadd
rcr
dec
ins
loopne
ret
test
(bad)
xchg
aam
dec
aas
add
mov
(bad)
cmps
leave
cmp
je
stc
jmp
pop
sbb
rol
push
xor
ds
loope
shl
xor
fstp
addr16
cdq
retf
aam
setg
xchg
retf
xor
call
ret
or
or
in
jnp
lock
loope
pushf
(bad)
lock
imul
add
push
xchg
loope
scas
jle
stos
push
cdq
cmp
pop
and
jne
pop
jno
mov
mov
cmps
dec
inc
push
movs
cmp
(bad)
movs
add
dec
fisttp
test
mov
(bad)
dec
js
jmp
mov
fcmovb
fs
out
daa
mov
mov
jno
or
cmp
rcr
mov
jns
cmps
pop
fisubr
loopne
repz
idiv
jl
adc
shl
inc
xchg
adc
pop
xchg
jecxz
fdiv
dec
in
xchg
aam
sub
aas
push
daa
cmps
sub
push
in
mov
jne
sbb
sub
xor
xchg
jbe
dec
inc
and
ja
jp
stc
jbe
in
jle
(bad)
mov
hlt
jle
retw
not
or
mov
bound
ds
mov
jmp
stos
adc
ret
loope
je
or
fild
adc
fstp
test
adc
jo
xor
mov
frstor
xor
or
fwait
call
(bad)
sbb
push
sub
mov
jno
je
pop
cs
aad
cmps
sbb
je
scas
sbb
inc
adc
xchg
iret
pop
fucomip
mov
(bad)
cwd
int3
imul
adc
jnp
fdiv
cs
fs
xchg
(bad)
retf
retf
or
adc
cdq
test
mov
cmp
xor
ret
retf
into
and
xor
add
mov
outs
cmp
mov
jb
fbstp
push
xchg
outs
push
das
push
cmc
lock
loop
pop
loope
or
popa
repnz
js
pop
loope
push
loope
mov
lods
add
neg
sbb
sets
sub
(bad)
jmp
pushf
pop
jmp
cmp
jno
fs
add
mov
into
xchg
int
call
mov
test
push
(bad)
jo
adc
inc
jg
push
mov
test
test
sub
repnz
and
cdq
in
shl
mov
push
mov
into
sti
mov
(bad)
ds
call
jns
js
ficom
push
loop
popf
neg
cmp
scas
popf
lahf
(bad)
jbe
fist
cmps
adc
retf
or
fs
frstor
outs
rcr
lds
pop
lods
std
das
das
dec
xor
add
and
lods
mov
cmps
adc
xchg
fimul
dec
ins
and
dec
clc
(bad)
dec
jmp
mov
bound
inc
mov
call
(bad)
mov
cmp
shl
ret
jnp
mov
jecxz
rcl
les
xchg
xchg
shl
mov
pop
(bad)
xor
mov
sbb
jnp
sub
(bad)
and
pop
sub
out
stos
shr
and
xchg
xor
inc
jnp
cmp
push
sahf
test
cld
mov
not
pop
mov
cmp
and
test
jb
mov
test
sbb
mul
xchg
rcr
push
or
jae
mov
in
retf
jle
xor
and
in
mov
in
outs
mov
pop
or
stc
fstp
out
and
aam
nop
mov
scas
lds
push
adc
int
inc
es
mov
iret
mov
imul
mov
mov
xchg
inc
movs
addr16
mov
(bad)
sti
xchg
jl
sar
xchg
iret
push
(bad)
(bad)
pop
inc
pop
pop
push
jg
push
test
xor
int
jb
sbb
xchg
add
into
xchg
pop
loope
in
hlt
cli
imul
scas
repnz
mov
sub
sub
fstp
mov
lods
retf
jbe
mov
mov
sub
push
dec
xchg
sbb
or
pop
mov
or
push
cmp
xchg
jmp
and
and
ds
push
inc
or
xchg
sub
xchg
and
imul
bound
in
xchg
dec
scas
sbb
cdq
idiv
jno
rcl
loop
xor
test
mov
push
in
jmp
scas
push
aad
push
dec
mov
dec
adc
test
lock
aad
imul
(bad)
mov
pushf
loope
pushf
dec
push
and
dec
or
xchg
dec
lahf
scas
adc
in
fmul
or
or
push
xor
jnp
xchg
scas
sbb
xchg
cmps
and
cdq
push
xchg
sbb
add
fidivr
gs
add
popa
sub
aaa
nop
fistp
loope
adc
or
rcr
in
aad
mov
jo
lock
pop
pop
mov
fild
push
mov
icebp
idiv
dec
int
mov
and
jmp
dec
xor
sub
jmp
test
mov
adc
inc
mov
and
mov
adc
or
sbb
ins
iret
lods
pop
stc
imul
dec
jecxz
dec
pop
pop
xchg
(bad)
sub
test
jl
add
das
sbb
sub
xchg
inc
imul
in
dec
mov
mov
sub
(bad)
jbe
cmc
or
cmp
or
mov
ds
outs
and
cmps
test
cwde
cmp
pop
icebp
mov
(bad)
jl
push
out
xchg
loop
and
cmp
or
xchg
out
dec
xchg
sar
sbb
sbb
xchg
dec
add
(bad)
mov
xor
add
out
pop
scas
xchg
xchg
(bad)
xchg
sub
lahf
retf
jae
neg
pop
movs
sub
jbe
rcr
lods
loop
loope
(bad)
jno
mov
arpl
out
cmp
rcl
fdiv
fstp
lahf
(bad)
in
outs
ins
mov
out
pause
outs
push
push
pop
loopne
jmp
repnz
push
arpl
call
ja
xor
cmp
or
xlat
cmps
into
lahf
daa
dec
mov
push
clc
bound
xor
fst
sahf
outs
inc
(bad)
rcl
scas
jnp
pusha
fstp
pop
loop
xor
out
jo
or
ja
ffreep
movs
call
movs
hlt
fiadd
and
jl
pusha
ja
mov
or
aad
jnp
sub
push
sbb
jmp
mov
test
jb
mov
mov
push
pushf
push
cmp
adc
loope
add
or
xor
xor
dec
add
mov
das
test
xchg
in
dec
mov
xor
jg
mov
lds
out
test
inc
jmp
loop
ficomp
scas
cli
and
xchg
xor
push
mov
mov
cmps
ret
arpl
out
retf
leave
mov
pusha
xchg
jg
or
mov
xchg
int
popf
push
mov
stos
jo
aas
fs
mov
sub
mov
mov
or
mov
xlat
lods
sbb
add
dec
mov
cmps
mov
sbb
jmp
jmp
test
cmp
add
add
gs
dec
mov
je
es
inc
mov
test
xchg
inc
jo
jne
sub
(bad)
mov
ret
outs
les
inc
lock
dec
xor
push
idiv
js
fmul
sar
in
ret
xor
or
jns
xchg
xchg
sub
mov
or
fisubr
dec
mov
hlt
cmp
ds
cmp
adc
fld
test
mov
ficomp
pop
pop
aad
pop
push
(bad)
sbb
push
ret
cwde
ins
fistp
sahf
lds
adc
jae
push
push
xchg
cmp
cmc
(bad)
mov
mov
dec
(bad)
mov
aaa
cmp
jmp
icebp
dec
inc
je
mov
fist
jo
inc
idiv
and
mov
mov
iret
ror
mov
fidiv
lea
and
lea
push
mov
mov
jmp
mov
stos
mov
xor
jmp
pop
ror
pushf
xor
fisubr
cwde
test
cmp
test
fs
sbb
fcmove
fwait
aam
clc
ret
dec
sub
lock
rcl
push
mov
add
sbb
lds
mov
jnp
leave
in
arpl
les
cmp
inc
test
ja
or
ret
push
ins
shl
add
jo
(bad)
mov
xchg
mov
push
(bad)
mov
pop
sub
jns
mov
ror
test
cli
pop
fucomi
sub
outs
add
sbb
xchg
sti
out
mov
pop
dec
das
cvtpi2ps
xchg
out
jmp
mov
sub
jb
movs
jge
leave
out
leave
dec
mov
mov
xor
dec
shr
sbb
enter
icebp
mov
sbb
leave
pop
imul
cmp
jl
and
lods
push
mov
sub
mov
fsubr
mov
sar
add
cmps
add
test
pop
add
sub
sar
add
nop
call
ret
jge
aaa
sbb
call
fs
adc
sub
xchg
xor
test
outs
mov
pop
retf
sub
jp
sbb
push
pop
movs
inc
out
jmp
xor
lods
jge
fsub
and
in
cs
outs
enter
out
adc
aaa
aas
or
jmp
xor
dec
cmp
jns
xchg
aam
cld
mov
cmps
sbb
int
jle
data16
retf
int3
add
pop
ja
je
dec
xor
(bad)
(bad)
sahf
and
call
add
lods
xchg
cmp
aas
js
jae
push
add
es
pop
loope
arpl
mov
ins
add
cmp
push
out
add
aas
pop
or
je
jecxz
fist
xchg
es
adc
cmc
in
or
cli
mov
mov
mov
adc
mov
mov
mov
rcr
ret
push
push
push
cvtpi2ps
imul
add
int
in
fsubr
dec
cmp
xchg
push
cld
inc
lahf
out
cmp
pop
adc
jae
fcomp
inc
mov
loop
aaa
hlt
fs
cli
xor
fnstsw
pop
rol
sub
outs
adc
dec
xor
pop
sbb
das
mov
pop
mov
jo
ins
dec
mov
pop
das
fimul
retf
mov
pop
mov
push
rcr
xor
jmp
lea
out
fmul
fadd
dec
pop
ja
pop
mov
pop
or
in
in
adc
in
xor
in
or
retf
out
jb
rol
inc
adc
cwde
scas
sub
push
adc
clc
adc
ss
addr16
rcr
ret
cmps
fimul
das
mov
shr
pop
jl
and
xchg
push
pop
add
xlat
fiadd
(bad)
mov
ror
div
jl
mov
and
int3
jno
jecxz
mov
push
add
xor
cmp
fsub
into
push
bound
mov
mov
(bad)
dec
dec
retf
or
mov
dec
clc
cmp
cmp
out
jo
jb
inc
sbb
adc
jno
push
sub
cld
into
enter
jns
lahf
in
and
adc
cmp
sti
pusha
ret
cmp
jne
jmp
push
inc
push
mov
and
cmp
(bad)
into
sub
inc
mov
loop
and
ja
popa
xor
leave
sahf
bound
xor
inc
cmp
dec
mov
out
jmp
test
ja
ja
xchg
stos
(bad)
fcomp
adc
adc
sti
scas
nop
sub
pop
push
sub
cmp
cld
pop
jmp
or
mov
sti
push
stos
lds
or
jmp
inc
sti
gs
jb
push
dec
in
inc
cmps
scas
stc
push
pop
iret
mov
pop
add
loopne
test
jae
out
sub
jmp
out
push
aam
sahf
cdq
jge
dec
aas
das
push
bound
outs
mov
or
ja
les
add
jmp
rcl
sbb
push
and
dec
mov
movs
iret
xlat
or
in
fs
sbb
pop
fild
push
inc
enter
retf
inc
mov
in
or
sub
or
xchg
jne
rol
jbe
push
xchg
stc
in
sbb
adc
mov
not
pusha
(bad)
fdiv
push
dec
ret
cmp
xor
mov
mov
and
inc
test
cmp
lods
sub
and
(bad)
jne
mov
adc
push
push
add
retf
cmp
popf
push
je
clc
mov
cmc
mov
cmp
cmp
or
xor
repz
or
mov
lods
(bad)
std
xor
and
addr16
test
and
jle
sub
adc
cli
inc
sbb
mov
call
pop
mov
dec
ret
inc
cmp
mov
std
sar
adc
mov
lahf
push
sub
dec
inc
and
jne
pusha
rol
and
in
das
add
lock
dec
and
xchg
aas
js
cmps
fadd
sar
fidivr
(bad)
dec
test
mov
sbb
scas
nop
xchg
out
sahf
pop
fcom
ret
dec
adc
out
mov
(bad)
and
(bad)
lds
dec
(bad)
pop
mov
fidivr
adc
popa
ins
jl
push
adc
pop
mov
rcr
and
repz
std
sbb
mov
adc
and
repz
cmp
daa
or
shl
int
retf
gs
jns
push
inc
mov
or
dec
pop
and
cld
sub
jl
xchg
or
xor
adc
sub
clc
and
ror
or
call
xlat
test
in
cmp
jns
xchg
imul
stc
repnz
sbb
jnp
arpl
cwde
and
inc
push
sbb
pop
pusha
jno
mov
cmp
sub
rcr
retf
lods
jle
test
pushf
wrmsr
mov
in
aaa
cmp
xor
(bad)
sub
or
push
fs
dec
or
adc
cmp
pop
sbb
outs
ret
adc
jne
js
sub
jno
scas
cs
xchg
push
push
test
sbb
fcomp
scas
fwait
cmps
bound
lds
pop
cwde
pop
dec
pop
dec
sbb
out
push
fbld
push
pop
mov
leave
pop
test
add
and
pushf
jmp
push
stc
inc
inc
(bad)
mov
int3
in
jnp
not
and
sub
lods
loope
xor
mov
mov
pop
xor
pusha
dec
aad
test
pushf
mov
jge
sub
aaa
ds
ficomp
es
mov
jg
movs
(bad)
aam
pop
test
push
mov
add
rol
pop
mov
cmps
pop
mov
push
or
dec
mov
ffree
shr
out
shr
xchg
push
mov
mov
cmp
cmp
out
jecxz
xchg
cmp
jmp
xchg
sub
cmp
scas
cmps
mov
pop
sub
fimul
jb
mov
add
aad
jbe
ss
cmp
lahf
xchg
movs
aad
(bad)
or
push
and
cmp
mov
push
call
(bad)
std
jmp
pop
cmp
cmp
repz
movs
cmps
iret
inc
or
jno
mov
inc
dec
add
ins
repnz
les
aad
mov
test
enter
cmp
addr16
push
shr
rcl
jae
icebp
mov
mov
push
mov
lods
push
cmp
stos
fwait
stos
jmp
call
pop
xlat
stc
inc
or
das
push
stc
cld
push
inc
dec
in
jmp
pop
cli
mov
gs
or
jmp
xchg
sub
mov
outs
and
pusha
mov
fwait
adc
push
mov
xchg
cmp
adc
mov
inc
lods
xchg
or
cmp
xor
xor
lahf
sub
jge
adc
inc
jns
leave
pusha
or
push
or
or
bound
xchg
jge
inc
add
mov
iret
sbb
or
push
(bad)
or
jecxz
mov
lds
push
shr
add
into
sar
aaa
mov
scas
xor
outs
movs
movq
enter
and
jno
idiv
xlat
cmc
mov
rcr
jg
sbb
fwait
(bad)
jno
jbe
mov
lea
imul
xchg
out
dec
(bad)
dec
(bad)
iret
fisubr
dec
jae
push
add
add
retf
sbb
adc
ins
lock
je
jge
sub
in
hlt
sbb
loop
iret
add
jno
hlt
mov
pushf
in
mov
and
mov
movs
add
inc
mov
call
inc
mov
adc
inc
rol
mov
popa
jecxz
or
inc
outs
push
(bad)
mov
add
dec
mov
test
inc
cdq
cmc
mov
mov
into
pop
addr16
sbb
push
sub
inc
dec
cdq
sub
std
pop
es
cmp
jecxz
and
sbb
mov
add
rcl
add
sar
dec
cmps
xchg
sti
in
pop
in
or
imul
test
jb
xor
test
sbb
sub
dec
pop
shl
aam
inc
(bad)
jle
xchg
jbe
cmp
les
mov
stos
jae
das
mov
bound
mov
lods
jle
xor
in
leave
iret
fistp
pop
in
into
aad
inc
pop
into
cmp
jae
call
dec
inc
xchg
retf
mov
mov
jb
mov
pop
ins
xor
aas
sbb
in
scas
mov
stc
push
inc
jno
lods
xchg
cli
icebp
ret
jle
lods
jge
sar
mov
fstp
in
scas
fiadd
mov
scas
in
dec
dec
shl
enter
xlat
xor
enter
cmp
(bad)
dec
cmp
sub
rcr
cmp
pop
pop
fst
inc
jmp
(bad)
cwde
retf
in
fisubr
jnp
(bad)
int3
fisttp
stos
adc
repz
mov
mov
push
je
stc
mov
xchg
xchg
neg
movs
js
loop
add
test
jmp
leave
daa
in
mov
jle
shr
in
les
loope
add
pop
icebp
xchg
cld
data16
and
mov
ret
or
popf
mov
jmp
addr16
call
les
adc
or
xlat
clc
cmp
push
push
ja
int
pandn
and
cdq
lock
rol
xchg
fiadd
pop
pop
and
aam
xchg
clc
into
(bad)
leave
and
rol
mov
repnz
test
mov
sbb
dec
and
and
mov
ins
push
xor
movs
mov
add
sub
nop
icebp
test
push
(bad)
pusha
(bad)
pop
cmp
outs
dec
sub
(bad)
iret
inc
inc
(bad)
cmp
xchg
pop
int
mov
(bad)
jp
call
dec
and
fadd
iret
sbb
pop
mov
aam
test
cmp
inc
iret
cmps
fstp
loopne
mov
or
mov
inc
pushf
js
adc
jne
and
cmp
loope
fidiv
test
push
xchg
jnp
into
xchg
pop
sub
adc
pushf
mov
clc
repnz
jecxz
nop
pushf
aad
in
mov
inc
and
adc
(bad)
enter
add
inc
mov
pop
aas
sbb
(bad)
loopne
sub
and
push
mov
and
sbb
aad
mov
(bad)
icebp
jp
shr
pop
sbb
fmul
iret
ss
cli
outs
mov
aam
cs
push
jnp
push
fwait
(bad)
ret
mov
jmp
push
mov
cmp
adc
or
mov
daa
into
icebp
fcomip
jge
pmulhw
cdq
dec
xor
jmp
inc
or
mov
and
pop
cdq
ret
jo
call
shl
cli
or
push
dec
pop
sbb
pop
inc
push
adc
into
mov
ror
xor
ret
pusha
test
in
push
push
mov
push
xlat
lock
lods
jno
push
popa
xor
xchg
arpl
sub
dec
jecxz
ret
fs
dec
fdivrp
or
stc
int3
push
adc
repz
sub
mov
xchg
inc
ins
div
call
mov
ror
imul
call
inc
es
fsubrp
out
and
call
cdq
call
ja
in
or
jge
pop
stos
pushf
jae
inc
fiadd
push
xor
push
daa
xchg
xchg
cmp
adc
sub
fistp
add
xchg
ja
ds
sub
movs
mov
jne
fwait
xor
sub
xor
test
out
loop
cmp
enter
fxch
repnz
aam
dec
cwde
test
cmp
(bad)
ss
ret
in
xor
rcr
stc
outs
jmp
pop
mov
(bad)
stc
mov
movs
sbb
js
rol
stc
sbb
and
outs
or
jns
ror
mov
inc
int
jno
mov
mov
bnd
hlt
mov
jmp
mov
std
loop
sub
movs
mov
cmp
xchg
pop
or
push
or
jo
loope
mov
aam
xchg
cld
mov
xor
cmp
loop
add
lods
push
aam
push
test
cmp
adc
sar
pushf
or
stos
add
into
sub
inc
(bad)
push
cmp
xchg
lds
sbb
pop
pop
dec
mov
call
push
xor
mov
xchg
adc
xchg
jg
mov
inc
jmp
inc
adc
in
lds
push
int3
push
push
mov
pop
(bad)
jmp
sub
popa
pop
pop
jo
xor
mov
mov
(bad)
fcmovnb
jae
jnp
xor
adc
pop
pop
jne
and
mov
imul
cmp
out
mov
clc
adc
cmp
push
retf
cmp
adc
cmp
push
push
mov
pop
fwait
test
fiadd
jae
ffree
push
(bad)
lods
mov
xchg
sub
xchg
push
in
jp
mov
imul
arpl
daa
add
ja
pop
add
mov
or
or
(bad)
(bad)
xchg
pop
bound
inc
sub
jl
add
xchg
adc
ret
fs
or
and
lods
mov
xchg
pop
pusha
scas
xchg
add
adc
mov
iret
out
jle
xor
fxch
jb
jbe
push
cli
mov
sti
ret
jnp
cmp
test
mov
mov
dec
inc
dec
stos
dec
jo
jae
gs
inc
adc
xchg
hlt
inc
mov
(bad)
gs
mov
imul
cmp
cmp
into
push
ins
imul
mov
jecxz
jmp
ffreep
lock
add
and
loop
push
neg
sbb
jmp
cmp
sub
leave
mov
jb
push
xchg
sub
mov
inc
xchg
add
cmp
xchg
push
dec
sbb
bound
loop
arpl
inc
mov
das
adc
int
ror
add
sub
retf
mov
xchg
push
xchg
arpl
dec
daa
xlat
out
jle
mov
mov
(bad)
add
cs
adc
pop
sub
call
lock
xor
sub
mov
cmp
jl
cmp
out
ret
sbb
xchg
call
pop
das
and
or
xlat
cmp
cmc
inc
mov
clc
mov
test
ds
dec
setnp
sub
int3
sbb
ss
out
inc
inc
and
addr16
or
inc
inc
mov
mov
pop
cmc
test
call
pop
and
test
pop
adc
dec
inc
lea
repz
scas
sbb
dec
mul
jno
hlt
jnp
ficom
inc
and
jmp
in
addr16
fidivr
ss
mov
aam
aas
imul
or
test
push
xchg
cmp
pop
sub
sub
xchg
fmulp
add
mov
daa
aas
sub
push
and
cli
addr16
xor
std
imul
cmps
ins
sub
data16
aad
push
dec
jo
sub
xchg
test
jno
push
packssdw
in
(bad)
mov
mov
pop
push
fld
sub
hlt
fild
xchg
imul
pop
cli
loopne
mov
push
test
add
popa
push
push
popf
mov
adc
pop
std
into
add
iret
sub
ds
mov
lock
sub
stos
into
sub
jmp
outs
jge
fimul
pop
data16
push
nop
inc
adc
mov
and
push
adc
jg
retf
cvtpi2ps
dec
mov
sbb
xchg
movs
mov
pop
sub
mov
jle
arpl
mov
cmp
mul
cmpxchg
div
cdq
js
pop
repz
jmp
push
dec
add
jmp
adc
mov
mov
adc
cld
popf
dec
loope
adc
(bad)
jb
add
mov
mov
aaa
fsubr
jbe
icebp
add
mov
jmp
fisttp
mov
jae
inc
adc
push
sbb
mov
add
inc
fcom
pxor
cs
outs
retf
adc
jns
mov
lahf
mov
push
nop
xchg
nop
test
ins
add
loopne
jle
jbe
inc
aaa
inc
fisttp
push
jge
fcomp
pusha
add
pop
cmp
rol
mov
pusha
sub
mov
or
xchg
sahf
push
iret
retf
adc
cmp
sub
ss
js
xchg
dec
mov
call
inc
pop
or
adc
sbb
sub
and
or
(bad)
jp
sub
ss
lea
adc
adc
out
test
xor
cmp
fld
lahf
push
test
cld
in
mov
jb
cmps
movs
adc
(bad)
mov
xbegin
and
adc
lds
inc
das
inc
hlt
jns
test
pop
cmp
fldenv
outs
push
call
adc
leave
sbb
mov
adc
dec
xor
pop
pop
fist
cmp
(bad)
mov
sbb
push
jb
lods
(bad)
xor
sub
mov
xchg
test
pushf
(bad)
and
pop
mov
popf
les
cmp
cmp
mov
sub
adc
dec
icebp
cli
dec
jo
ss
jmp
xor
push
mov
in
pop
dec
cli
fmulp
(bad)
and
test
pop
outs
mov
push
aad
les
sbb
fisttp
scas
and
or
and
push
leave
shl
dec
mov
sub
push
and
jmp
cwde
ds
or
shr
dec
dec
lock
lds
pop
(bad)
ret
inc
push
stos
(bad)
mov
pushf
push
mov
mov
das
popa
aas
shl
test
or
push
push
mov
sbb
sub
jo
and
push
mov
aad
pop
cs
jp
sbb
add
stos
clc
mov
jmp
lock
cmc
out
into
repnz
push
cwde
dec
aas
popf
(bad)
fadd
addr16
int
daa
push
lods
outs
xor
cld
cdq
test
movs
inc
xchg
(bad)
push
xor
inc
sub
out
lds
pop
ja
xchg
daa
idiv
ins
pop
mov
push
jmp
mov
push
movs
cmc
in
popf
sbb
repz
ret
and
mov
and
xor
in
push
and
(bad)
(bad)
cmp
adc
fld
std
mov
div
jo
dec
add
add
in
cmp
cmp
pop
scas
enter
icebp
hlt
leave
rcr
dec
imul
out
lds
dec
loopne
jb
scas
sub
ja
fdiv
pusha
cld
pop
xchg
xchg
aaa
or
icebp
retf
ror
push
loope
push
xchg
pop
scas
push
(bad)
pusha
js
jmp
das
lods
jne
(bad)
lea
cmp
pop
dec
pop
pop
pop
cmp
or
sar
xchg
mov
icebp
ds
xor
mov
mov
mov
cmc
cmp
into
or
dec
arpl
or
xor
push
cmp
sub
mov
mov
das
adc
jmp
inc
cs
imul
enter
loop
retf
cmp
cmp
inc
and
clc
mov
pushf
int
outs
sahf
xchg
xor
std
lahf
push
sbb
sbb
xor
popa
in
psrlw
pushf
pop
fstp
repnz
push
dec
sbb
push
mov
fnstcw
out
in
push
push
into
jmp
sub
inc
and
ja
xor
aas
lods
not
retf
dec
mov
stc
cmp
inc
or
xor
push
pop
mov
pop
push
in
jns
icebp
pop
dec
sub
mov
xor
daa
jno
or
adc
add
maxps
iret
push
mov
adc
pop
cmp
nop
bnd
sub
lea
out
xchg
xchg
xor
test
sbb
inc
in
adc
loop
pop
dec
ror
pop
push
push
jp
sbb
out
mov
fsubr
loope
adc
mov
mov
fdivp
arpl
retf
movs
mov
mov
dec
cmp
push
stos
mov
fild
fnsave
pop
(bad)
push
add
fdivr
sub
xchg
lock
pusha
or
and
rol
xor
arpl
nop
sub
aas
hlt
or
xlat
sub
sub
nop
arpl
push
hlt
sti
push
ret
add
iret
mov
repz
adc
push
sbb
int3
cmp
aad
inc
pop
sub
inc
xchg
cmc
rcr
dec
mov
retf
scas
out
mov
and
mov
add
mov
mov
sar
inc
mov
mov
out
into
dec
pop
jo
ficom
call
pushf
jl
adc
or
mov
xchg
xchg
or
addr16
pop
das
es
sub
mov
pop
ss
add
gs
ret
aas
arpl
pop
adc
sbb
cmc
mov
(bad)
cwde
stc
sub
mov
inc
int
inc
pop
out
aaa
retf
or
xor
das
mov
jae
jne
mov
push
cmps
bound
pushf
dec
lds
cmc
or
scas
xchg
addr16
xchg
ins
cmp
loop
nop
rcl
gs
push
add
lahf
xchg
adc
jge
out
in
mov
pusha
and
jmp
jecxz
mov
inc
popf
fstp
call
push
pop
jne
ficomp
pop
js
iret
push
pop
call
inc
jl
pushf
fiadd
jbe
out
(bad)
call
out
jnp
or
cdq
dec
fdiv
inc
retf
aaa
mov
xor
inc
jg
jo
sub
mov
(bad)
ins
sub
cwde
pop
xor
push
adc
inc
mov
pop
mov
fidiv
sbb
add
in
mov
movs
aam
daa
clc
mov
imul
mov
push
popa
jecxz
arpl
aad
bswap
cwde
pop
les
movs
or
and
movs
in
sahf
icebp
in
adc
iret
iret
cmp
fist
jmp
dec
ror
push
jb
rcl
xchg
push
pop
jnp
dec
mov
cld
or
push
clc
and
in
adc
lods
sub
pop
sbb
xor
push
stc
xor
jmp
arpl
push
scas
cli
mov
push
xlat
cmp
xchg
sahf
stc
push
mov
in
stc
pop
jae
or
push
or
imul
test
mov
fst
sub
shl
pop
pop
cmp
jp
jo
add
hlt
mov
xor
addr16
retf
es
mov
hlt
sub
movs
xchg
inc
jmp
test
aas
xor
jnp
gs
cmp
loopne
add
pop
xor
mov
shl
pushf
movs
lods
aas
scas
out
lods
xor
retf
jbe
cmp
or
sbb
and
nop
les
rcr
sbb
(bad)
out
xor
sub
pop
mov
push
cld
or
lds
div
mov
push
test
push
jmp
jge
push
dec
shl
ror
sbb
fsubr
push
or
cld
mov
outs
test
add
in
es
add
xchg
adc
adc
sbb
loope
adc
lahf
mov
adc
pop
sbb
inc
daa
mov
or
iret
xchg
inc
ffree
in
out
jmp
ror
cwde
or
mov
test
xchg
(bad)
(bad)
mov
out
dec
push
je
stc
adc
lahf
xchg
push
mov
fsub
jmp
clc
adc
cmps
scas
and
inc
daa
loop
pop
pusha
(bad)
ficom
add
mov
test
(bad)
pop
movs
out
or
pusha
mov
push
sub
push
call
mov
in
xor
scas
push
cmp
xchg
jae
xor
dec
jge
movs
sbb
xchg
dec
call
sbb
cmp
xchg
mov
xchg
dec
cli
jbe
cmc
nop
retf
xchg
outs
cmps
arpl
loop
hlt
sti
cmp
and
div
int
push
push
xchg
dec
lods
loopne
js
stos
cmp
scas
fidivr
mov
addr16
(bad)
fisub
ds
bound
jno
pop
sbb
repz
xor
inc
lea
sbb
nop
inc
xchg
data16
loop
cmp
cmp
stc
push
fcom
aad
pop
pop
leave
imul
lock
jb
xchg
lea
inc
mov
dec
cmp
lea
fist
xor
popf
cmc
aam
push
lds
jb
mov
sub
lds
cmps
push
retf
push
push
jmp
fadd
or
or
rcr
sub
aad
xor
jg
cli
aad
sbb
jl
pop
push
pushf
mov
jae
pop
jbe
ret
lds
jnp
retf
or
sbb
ficom
dec
gs
addr16
(bad)
push
out
or
fwait
pop
pop
add
jecxz
scas
rol
xchg
mov
icebp
inc
mov
loope
xor
mov
lock
scas
mov
loopne
mov
mov
jmp
mov
aad
outs
rcr
iret
jecxz
mov
pop
xchg
sbb
das
pop
imul
and
xchg
popa
arpl
into
jbe
inc
and
sub
pop
jge
ins
dec
push
(bad)
arpl
rcr
xor
repnz
out
es
ror
pop
mov
shr
dec
xchg
pop
pop
and
retf
mov
ret
mov
mov
fidiv
mov
jae
rcr
data16
or
inc
or
jecxz
scas
(bad)
cmps
xchg
ret
dec
mov
pusha
push
pop
cmp
mov
cs
test
inc
jne
retf
jae
push
test
lea
ins
imul
repz
sbb
mov
scas
adc
mov
dec
mov
dec
mov
mov
pop
(bad)
xor
pop
std
sbb
adc
xor
dec
cmp
jp
xor
cld
jmp
inc
je
loopne
add
cmp
inc
sti
test
sub
cwde
cmp
ja
iret
push
popf
fisttp
cmp
pop
test
fadd
scas
sbb
and
or
ret
(bad)
imul
mov
jo
sti
fsub
inc
jg
mov
loopne
xchg
push
push
add
fmul
gs
cmps
mov
sub
and
mov
stos
adc
cmp
int3
test
pop
aaa
mov
int3
mov
scas
sbb
cmc
mov
mov
xor
leave
inc
add
es
stos
movs
push
mov
lods
in
loopne
pop
pop
leave
cwde
adc
inc
xlat
in
adc
loop
fcomi
xchg
int3
test
not
in
jbe
adc
jne
mov
sub
mov
fisubr
cmps
jnp
into
mov
or
fild
inc
mov
xchg
adc
pop
and
sbb
push
dec
inc
lea
sbb
xor
(bad)
out
out
jp
int3
in
inc
stos
jmp
xchg
mov
imul
mov
pop
cmp
pop
dec
xor
idiv
cli
ds
push
stos
sbb
push
mov
es
(bad)
pop
mov
bound
mov
movs
aam
add
cld
sub
js
sbb
(bad)
je
ret
cdq
aam
push
sbb
pop
sti
loopne
loope
jnp
mov
dec
xchg
sbb
retf
cli
inc
mov
cmp
(bad)
rol
pop
push
xor
clc
je
(bad)
jae
call
arpl
in
sbb
xchg
and
cmp
jb
push
lods
xor
mov
pop
rol
cdq
push
jmp
jbe
mov
xchg
pop
int3
test
and
inc
(bad)
mov
inc
pop
and
and
clc
imul
jecxz
addr16
adc
inc
fcom
and
cdq
outs
out
jle
mov
xor
loope
sub
pop
loopne
pop
into
push
retf
adc
jnp
mov
inc
add
or
cmp
sbb
icebp
jg
test
(bad)
scas
xor
mov
(bad)
fiadd
movs
fnsave
mov
jmp
cmp
imul
icebp
leave
and
jg
jmp
xor
mov
clc
and
xchg
xrelease
clc
or
pop
xchg
icebp
(bad)
or
inc
push
inc
lods
arpl
adc
inc
inc
mov
cmp
xchg
dec
mov
cli
mov
and
(bad)
addr16
push
adc
in
gs
pop
pop
xor
test
lahf
lds
xchg
(bad)
or
(bad)
ds
mov
iret
adc
fmul
add
adc
pop
jae
mov
movs
dec
dec
cli
push
fcmovb
cwde
jno
push
dec
adc
mov
xor
dec
cdq
out
cdq
mov
in
dec
rcl
daa
call
push
sub
mov
aaa
hlt
xor
mov
aad
push
xor
sbb
(bad)
and
(bad)
sti
popa
int3
movs
inc
pushf
sub
sub
or
outs
or
jb
fwait
daa
rcr
push
mov
retf
pop
ret
push
lods
mov
adc
and
cs
pop
fadd
movs
cmp
push
cdq
in
stos
rcl
stos
mov
test
aaa
(bad)
jle
adc
imul
xchg
(bad)
sar
cmp
pop
daa
cmps
mov
mov
fcomp
sub
sub
mov
gs
cmps
xchg
out
fbld
mov
(bad)
aam
inc
xor
mov
out
loop
call
nop
and
dec
fbld
sub
push
(bad)
xchg
push
je
cwde
xchg
sti
inc
loop
cmp
popa
mov
xchg
xor
adc
and
mov
dec
add
or
sbb
es
cmp
cmp
sbb
pop
(bad)
jne
je
sub
inc
push
shl
xor
(bad)
popf
jmp
jnp
out
cwde
(bad)
pop
nop
cmps
(bad)
fs
xchg
pop
xchg
xlat
(bad)
mov
sub
and
popf
mov
mov
movs
add
fs
clc
(bad)
pop
xor
jne
adc
xchg
jecxz
push
push
mov
std
fstp
fstp
jge
out
je
ret
dec
out
dec
or
icebp
mov
ins
shl
addr16
cmc
add
mov
lds
(bad)
nop
sub
mov
es
ss
call
pushf
call
sbb
add
cmp
scas
cmp
daa
cs
outs
pop
lods
xor
pop
lods
lea
sub
pop
xor
mov
hlt
xor
sbb
mov
add
dec
xlat
jbe
les
mov
mov
(bad)
fsubrp
stos
pop
into
jno
pop
ret
imul
xchg
fidiv
mov
mov
xchg
add
inc
loope
scas
mov
jae
jmp
mov
xchg
sbb
test
fdivr
cmp
cmp
inc
fidiv
and
loop
or
test
inc
push
mov
mov
ins
into
stos
fs
or
sbb
cmp
xchg
pop
push
lods
mov
mov
call
popa
or
(bad)
cmp
sub
fidiv
jp
jle
in
sub
inc
jle
jg
push
inc
aad
call
nop
pop
stos
jb
xchg
inc
out
bound
add
stos
jno
mov
icebp
add
jg
sub
and
cmp
mov
jecxz
add
cmp
xor
rcl
shl
fisttp
xor
inc
iret
sbb
sbb
adc
adc
fisub
leave
xor
cli
lds
je
js
push
mov
arpl
out
xlat
je
imul
mov
jns
jp
imul
and
mov
lds
pop
jge
into
xlat
and
lahf
loope
fisttp
imul
in
sti
fwait
cdq
ret
stc
iret
retf
mov
vunpckhps
dec
test
outs
ins
fnsave
sti
mov
(bad)
fadd
and
mov
cmp
stos
dec
inc
jmp
in
scas
inc
sbb
lock
xor
sbb
add
mov
(bad)
fdiv
sbb
cwde
adc
push
aam
sbb
fdivr
orps
lea
mov
cmp
gs
add
mov
xchg
fld
mov
cmp
cmp
dec
dec
clc
push
lods
pop
inc
pop
mov
push
sub
(bad)
cmp
in
mov
stos
out
or
and
push
pop
rcl
(bad)
xchg
and
cmp
or
repnz
dec
lds
out
inc
add
test
jnp
push
cmp
ins
rcl
cld
add
and
xor
mov
retf
mov
mov
pop
das
out
xlat
imul
ja
test
stos
ja
loope
es
jl
les
xchg
ret
xchg
rcl
pop
xchg
and
mov
shr
sar
inc
cli
sub
outs
sti
sahf
xchg
in
(bad)
fistp
cld
fiadd
call
dec
inc
aaa
cmp
xor
stos
inc
mov
cmc
mov
pop
pop
lds
mov
fnstcw
(bad)
push
or
push
shl
(bad)
pop
add
call
cdq
ins
mov
cld
sub
mov
fbstp
sahf
add
mov
inc
loope
icebp
add
aam
push
stc
in
sub
sbb
dec
and
mov
cmp
adc
jnp
jmp
call
repnz
dec
repnz
push
in
or
mov
xchg
xchg
or
jnp
mov
sbb
outs
push
or
jle
cs
icebp
aas
inc
repnz
push
lods
push
add
jecxz
int
les
imul
or
xor
jbe
jecxz
push
mov
cmp
aam
mov
fs
xchg
mov
clc
aad
(bad)
nop
push
mov
and
lea
or
pusha
pop
jmp
iret
xor
pop
ret
fidiv
pop
inc
(bad)
arpl
mov
js
ret
inc
cmp
sahf
jmp
imul
mov
and
test
(bad)
sar
push
jl
addr16
sub
test
imul
stos
or
js
test
(bad)
push
scas
jecxz
es
dec
adc
pop
push
push
ja
into
ror
nop
pop
jge
inc
pop
cmp
mov
sbb
aam
cmps
retf
or
in
cmps
dec
aad
adc
sub
and
and
test
xchg
fdivr
push
fistp
iret
sub
loopne
mov
pop
jmp
int3
jp
adc
xor
inc
(bad)
std
push
pop
push
dec
push
jmp
xchg
mov
in
sub
test
js
xor
jg
test
and
or
hlt
loopne
fstp
push
xor
xchg
sbb
and
cmp
fcmove
mov
test
mov
pushf
popa
xchg
sti
imul
(bad)
int3
mov
fild
or
mov
mov
dec
and
les
in
stos
rcl
sub
out
into
retf
movs
push
inc
sar
outs
mov
inc
sub
push
call
pop
mov
daa
xor
imul
(bad)
repnz
dec
xchg
fwait
mov
add
dec
and
lock
inc
lock
mov
(bad)
jns
aas
hlt
inc
inc
lahf
bswap
add
aam
retf
and
cmp
sahf
xor
xlat
retf
cdq
aad
cmp
mov
call
ja
ins
loopne
sbb
stos
push
mov
xlat
push
and
sub
out
sar
add
int3
int3
clc
std
adc
xchg
test
in
aad
mov
jmp
xor
stos
pop
mov
xor
mov
adc
dec
(bad)
data16
loopne
mov
jg
out
adc
cmps
pop
sti
mov
xchg
adc
jecxz
and
ror
jle
ret
mov
fist
test
test
ja
out
adc
mov
jg
inc
data16
xchg
add
test
cld
xchg
adc
mov
imul
mov
cld
scas
mov
ss
ins
push
iret
mov
jl
fild
xchg
fidiv
jg
hlt
in
cmp
cwde
hlt
fistp
test
mov
dec
outs
(bad)
outs
ret
push
xor
js
int3
add
clc
pusha
push
stos
push
push
xchg
xor
pop
mov
mov
pop
jno
dec
fistp
dec
xchg
push
push
je
call
cmp
dec
and
fcom
test
jmp
addr16
xchg
jae
les
push
xor
aad
dec
lods
add
jae
ds
pusha
fwait
sbb
adc
sub
arpl
dec
(bad)
jno
adc
mov
xor
dec
add
out
repz
dec
push
xchg
(bad)
pop
test
ins
scas
xor
test
rcl
loope
sbb
addr16
jns
fbld
fsubr
mov
jl
fistp
adc
int3
ror
mov
pop
test
test
and
cmp
jle
lods
pushf
jae
push
mov
clc
hlt
cmps
pop
jnp
bnd
or
fiadd
ins
and
dec
fwait
mov
push
push
jno
(bad)
(bad)
push
lods
jno
cmp
jge
dec
jp
aad
cli
sbb
ja
(bad)
xchg
pushf
int
dec
mov
jns
pop
push
je
push
and
fdivr
(bad)
bound
push
mov
out
cli
sub
pop
call
movs
mov
pop
mov
popa
dec
cld
mov
mov
push
mov
ja
scas
jmp
mov
mov
jmp
ds
fisub
imul
stc
es
retf
outs
pop
mov
inc
shr
lock
mov
pop
lock
mov
xchg
rcl
cmp
push
jns
aad
jmp
and
rol
ja
jno
xchg
and
jp
movs
mov
jnp
sub
mov
daa
ret
lods
call
out
cmp
repnz
fstp
neg
mov
add
mov
dec
stc
das
mov
push
push
outs
repnz
in
cmps
cmp
test
push
inc
loop
mov
mov
pop
cmp
pop
rol
clc
in
push
or
outs
mov
mov
pushf
cdq
dec
push
out
cmp
pop
xor
jbe
cmps
fdivrp
repz
in
and
add
sbb
jmp
dec
dec
fild
test
icebp
mov
mov
movs
mov
(bad)
test
call
xor
cdq
dec
out
xchg
mov
iret
adc
popf
sbb
call
(bad)
mov
push
aaa
out
ficomp
daa
or
mov
ds
pop
mov
pop
adc
push
mov
dec
retf
jl
cmps
cmp
cmps
xchg
fldcw
pushf
hlt
jg
fucom
and
and
sbb
sbb
jge
loopne
in
push
sub
in
stos
cmp
xchg
pop
sub
cmp
pusha
inc
jnp
mov
std
imul
xor
pop
cs
xchg
in
inc
xlat
fild
xlat
leave
addr16
test
mov
aam
mov
and
inc
mov
adc
int3
xor
sub
movs
xor
xor
mov
int3
dec
jecxz
lods
pop
push
inc
sar
mov
sub
mov
push
jbe
mov
rcl
arpl
popf
shl
(bad)
sbb
adc
dec
push
inc
jge
or
jno
push
bound
je
pop
js
sub
pop
es
xor
mov
and
ja
xor
int3
(bad)
hlt
and
sbb
sbb
out
xchg
dec
pop
fstp
sub
aas
mov
ret
mov
xlat
mov
shl
cmp
sub
sub
jl
lds
rol
xor
test
or
add
push
xchg
fisub
and
loope
ins
ins
call
dec
xor
sub
in
lds
jno
sub
lea
mov
xchg
imul
push
dec
fs
mov
mov
jl
inc
rol
mov
out
fwait
dec
repz
sbb
icebp
and
cmp
shl
sti
int3
push
test
add
pop
cmps
sub
mul
push
or
or
sbb
sti
sbb
mov
sub
aas
inc
sub
je
adc
fsubr
adc
mov
std
mov
and
add
adc
fld
xor
push
inc
jmp
xchg
push
nop
or
retf
add
stos
outs
test
jg
xchg
jl
shl
add
shr
pop
outs
enter
cmp
cmp
or
add
push
cmps
pop
push
pushf
fst
ret
add
loopne
sbb
retf
ret
aad
popf
pop
or
rcr
xlat
dec
imul
jbe
sub
shr
repnz
movs
xchg
repnz
adc
ss
inc
push
inc
adc
pop
mov
jle
and
out
inc
in
and
add
cmp
rcl
pop
scas
sub
dec
mov
xlat
clc
iret
imul
xchg
jae
call
jbe
in
sbb
xlat
popa
aad
frstor
lahf
ds
icebp
xor
mul
mov
mov
add
pop
xor
(bad)
push
push
mov
pop
jecxz
xchg
shl
sti
ins
and
addr16
or
rol
cmps
mov
sub
pop
jo
jg
xchg
sar
out
jmp
push
(bad)
pop
fist
test
inc
mov
stc
pop
adc
movs
inc
movs
in
pusha
cdq
ins
sahf
scas
sub
inc
sar
jecxz
push
imul
mov
lock
out
outs
jne
cmps
(bad)
lock
fwait
in
and
iret
bound
cmp
or
enter
add
dec
jmp
cmp
dec
push
jmp
nop
int
cmp
stos
ins
or
sub
push
mov
(bad)
sahf
mov
jmp
mov
jno
push
pop
retf
cmp
xchg
mov
cmc
sub
loop
cmc
sti
sar
in
fidiv
(bad)
xchg
enter
inc
retf
mov
adc
mov
mov
cmp
inc
and
cmp
xchg
mov
inc
fsubr
dec
add
cmp
jecxz
add
jnp
inc
add
xlat
movs
or
fstp
cs
xchg
xchg
movs
inc
mov
adc
cdq
aaa
xor
shl
and
loop
push
mov
test
dec
jns
xchg
sbb
push
mov
test
sti
sti
retf
or
sub
les
rol
imul
mov
add
(bad)
mov
dec
repz
mov
pusha
sar
and
iret
call
mov
(bad)
leave
out
mov
jnp
mov
sub
in
cmp
in
es
dec
xor
mov
push
xchg
push
pop
dec
int3
adc
inc
adc
jnp
repnz
(bad)
int3
in
pop
(bad)
loope
das
pop
xor
push
cmps
pop
sbb
(bad)
fidivr
imul
mov
bound
sar
mov
pop
fbld
cmp
pop
icebp
retf
mov
out
add
fnsave
mov
add
xchg
imul
enter
sbb
xchg
jle
test
pop
push
adc
ins
aad
pop
mov
and
sahf
adc
ret
cmp
cmp
(bad)
xor
aam
push
dec
xchg
pop
shl
push
xchg
lods
aaa
into
inc
xchg
lods
pusha
out
push
and
dec
out
add
or
jno
and
ins
mov
rcr
sbb
xchg
cmp
out
jne
add
ror
stc
mov
lock
sbb
cmps
push
push
mov
jl
(bad)
loop
pop
add
fsubr
push
pop
jmp
push
les
popf
test
dec
sbb
inc
shl
xchg
std
cmp
test
adc
xchg
push
movs
sub
retf
adc
or
add
pop
pop
dec
sbb
mov
pop
aas
sbb
in
pop
out
ficom
inc
fmul
hlt
sbb
fucomp
push
mov
jmp
es
bound
adc
ret
add
lahf
xchg
inc
int
mov
push
xor
sub
adc
mov
push
jo
add
push
jge
ret
inc
lock
pushf
loopne
adc
aam
(bad)
lods
stos
rcr
outs
(bad)
clc
xchg
inc
push
sub
bswap
push
rcr
xchg
mov
test
cli
enter
jo
rcl
dec
ds
sub
and
pop
nop
adc
mov
dec
test
xchg
dec
push
inc
imul
push
cmp
outs
dec
cmc
push
add
movs
les
mov
xchg
sbb
cmps
mov
mov
ret
clc
punpckhbw
adc
sahf
pop
imul
jae
repnz
std
mov
or
xor
iret
call
pop
sbb
shr
xor
inc
ror
ficom
inc
outs
or
jb
mov
dec
or
mov
dec
hlt
test
and
cdq
clc
pop
push
in
ja
mov
mov
sub
fstp
div
dec
rcl
inc
jae
jge
mov
pop
(bad)
jo
lods
into
mov
mov
test
clc
call
mov
fst
push
ss
pop
repz
pusha
add
push
push
mov
xor
sbb
addr16
fisttp
sub
cwde
adc
bnd
sub
adc
test
jge
mov
xor
jb
cmp
pop
jle
and
inc
xchg
das
call
push
fsubr
add
aaa
dec
(bad)
fbstp
xlat
jnp
stos
mov
mov
pop
jmp
inc
push
xchg
xor
fdiv
cmp
mov
(bad)
xchg
(bad)
loope
push
rol
ret
push
pop
add
cld
outs
and
adc
(bad)
push
xchg
div
enter
(bad)
dec
mov
out
xor
mov
mov
std
ins
sbb
jg
jns
inc
into
sub
mov
pop
sub
ror
js
sub
add
pop
stc
adc
xchg
in
inc
cdq
nop
mov
enter
es
mov
mov
mul
adc
rcr
ret
pop
jno
(bad)
in
pop
(bad)
in
push
int
ins
shr
add
clc
push
dec
and
jo
dec
xchg
mov
dec
add
mov
mov
mov
(bad)
push
push
jb
adc
dec
adc
push
mov
inc
retf
arpl
jne
in
inc
mov
cmp
arpl
jns
aam
add
mov
sub
int3
scas
enter
dec
es
xchg
retf
in
and
inc
and
pop
pop
dec
stc
push
jmp
jno
outs
add
cmp
jmp
xchg
pop
jge
add
test
mov
push
push
aam
int3
inc
add
mov
neg
je
dec
das
cs
pop
(bad)
cmp
pop
call
int
mov
push
js
jae
and
leave
sub
mov
push
mov
push
mov
mov
clc
stos
fs
retf
xor
push
fs
not
ret
call
jmp
adc
outs
outs
dec
fs
jns
dec
mov
push
repnz
shl
xchg
mov
inc
(bad)
test
repz
scas
lahf
addr16
lods
retf
sub
sti
push
lods
add
sub
movs
add
sub
dec
jne
add
xchg
es
es
imul
jo
adc
add
out
add
das
cmps
adc
aas
push
mov
xchg
and
popf
stc
pop
aam
or
ficom
xchg
or
pop
dec
xchg
dec
stos
loope
push
push
(bad)
xor
ror
pop
push
xor
cmps
jnp
cwde
add
fnstenv
xor
sahf
pop
ins
mov
push
adc
adc
xchg
rcl
push
call
mov
mov
retf
push
mov
mov
mov
or
inc
mov
or
mov
push
ret
mov
lock
dec
push
mov
cmps
dec
icebp
xor
es
es
mov
in
cmp
cs
or
sahf
and
imul
jnp
mov
leave
aas
imul
pop
xchg
add
fadd
test
loop
add
enter
push
fcom
or
sar
sub
dec
push
aaa
ja
mov
cmp
push
mov
jg
call
cmp
mov
inc
sbb
jae
dec
cmp
xlat
adc
mov
jnp
in
loop
retf
add
and
lods
pop
shr
push
and
push
mov
add
lods
jb
pop
sbb
lea
jo
rcl
imul
xchg
jns
fisub
sub
inc
mov
imul
jno
push
inc
scas
pslld
sub
sti
inc
in
gs
pop
int3
dec
dec
aas
pop
lods
movs
dec
lods
js
cmp
or
adc
jecxz
adc
xor
hlt
mov
xchg
fs
jo
cmp
scas
or
mov
cs
imul
hlt
aas
sbb
cli
lods
jge
adc
push
cmp
cwde
mov
cwde
or
mov
xchg
xor
out
adc
bound
mov
add
test
dec
mov
pusha
sar
xchg
xor
pusha
fcom
dec
js
cmps
mov
xor
jbe
imul
sub
jo
adc
add
or
in
xchg
cmps
dec
pop
xor
cmp
mov
jge
jl
in
neg
es
or
or
imul
jnp
mov
call
push
mov
xor
adc
fwait
aas
das
push
mov
pop
jne
xor
je
aas
sub
aad
sub
mov
pop
push
jge
stos
push
cvtdq2ps
aam
clc
(bad)
push
mov
fsub
jge
sub
loope
les
dec
test
cdq
mov
cmp
test
inc
push
jne
sbb
mov
jae
jmp
fwait
mov
and
(bad)
(bad)
cli
mov
sbb
(bad)
inc
imul
sbb
popf
popa
push
pop
int3
pop
(bad)
data16
or
pusha
loop
test
sbb
shl
and
js
sub
add
cmp
dec
sub
loopne
lods
jl
dec
or
or
xchg
in
push
pop
jp
ror
add
repz
out
jl
std
cmps
or
cmovle
mov
add
or
cld
and
xchg
leave
jp
sbb
mov
mov
sar
inc
push
cwde
je
enter
mov
js
jge
xchg
inc
enter
dec
push
call
jmp
js
call
xor
dec
inc
inc
and
or
mov
(bad)
es
add
xchg
fs
jb
out
jo
test
ss
mov
mov
xchg
jae
int
mov
xchg
int3
push
push
mov
stos
pop
pop
push
jl
cmp
out
mov
xchg
mov
push
mov
add
jb
adc
in
out
out
jb
bound
outs
aam
popf
cmc
mov
es
ss
clc
dec
cwde
pop
push
push
sbb
xor
scas
pop
test
pop
js
dec
jge
dec
addr16
push
or
(bad)
data16
outs
sub
test
sbb
dec
xchg
lods
sar
scas
mov
sbb
xor
xor
mov
sti
shl
xor
retf
sbb
ja
jge
xchg
popa
or
ins
into
enter
or
int
js
ins
cmp
mov
out
bound
ret
(bad)
mov
out
add
dec
dec
leave
push
push
mov
mov
cmps
clc
cmp
mov
mul
inc
or
mov
pop
movs
cmp
push
aaa
ret
sahf
movs
jge
dec
add
and
sub
es
sbb
pop
stos
dec
js
xchg
out
or
dec
push
cmp
repnz
lods
sbb
aad
ins
and
not
cmp
scas
mov
popf
loop
adc
jecxz
lods
lods
sub
js
fwait
mov
pop
stos
adc
jge
inc
dec
jbe
or
add
ins
push
xchg
mov
fsubr
fcom
lea
jb
xchg
push
sar
dec
popf
mov
imul
jo
lock
not
jo
inc
sbb
cld
into
cmp
push
cmp
(bad)
mov
call
fucom
dec
mov
icebp
inc
push
test
or
test
pushf
or
imul
sub
cmp
(bad)
or
mov
fcmovb
push
out
sbb
xor
xor
daa
fimul
mov
ret
outs
push
adc
mov
out
aam
push
push
add
mul
in
push
pop
(bad)
push
arpl
add
into
pop
sub
jg
das
aam
xor
imul
call
stos
cmp
pop
por
inc
mov
das
mov
or
adc
out
sub
xor
ror
xor
movs
or
mov
pop
das
xor
mov
lahf
outs
(bad)
mov
jge
test
xchg
xor
int3
jecxz
cmp
push
jecxz
dec
loop
xor
test
jbe
rcr
movs
cmc
in
xchg
mov
push
neg
mov
enter
ins
fs
or
adc
mov
fadd
ficom
mov
mov
xchg
mov
inc
xchg
jmp
sub
fidiv
push
nop
mov
cmp
pop
xchg
rcr
xlat
mov
mov
jl
test
inc
mov
push
test
loop
and
sbb
rcl
sub
leave
xor
sub
(bad)
shl
ds
xor
mov
fisttp
int
enter
adc
(bad)
out
jne
sbb
rcr
mov
mov
cmp
cmp
or
cmp
sahf
mov
daa
xlat
mov
pop
pop
pop
cmp
je
lds
sbb
lods
push
clc
cmp
cmc
popa
jmp
mov
(bad)
enter
fild
dec
cs
xchg
pop
js
aad
dec
mov
(bad)
xor
call
xchg
loope
dec
loopne
adc
in
add
pop
lahf
enter
sub
jge
(bad)
mov
adc
sbb
or
popa
mov
xchg
mov
mov
outs
jno
idiv
into
(bad)
ins
fs
shr
add
mov
push
xchg
sbb
test
icebp
push
in
jns
push
inc
cmps
jmp
out
movs
adc
dec
mov
lea
sub
fcomp
mov
mov
sub
push
jle
out
adc
(bad)
dec
push
sub
xor
mov
mov
pop
ins
push
mov
xchg
add
test
sbb
xor
inc
inc
push
stos
pop
hlt
inc
ficomp
shl
scas
idiv
clc
sbb
add
inc
sbb
fisttp
inc
xor
inc
push
mov
fs
ss
and
xchg
aam
dec
inc
jnp
jno
not
xor
push
jmp
push
mov
movs
mov
test
pop
mov
je
add
pop
adc
lods
clc
mov
inc
or
or
in
xor
pop
pop
pop
jns
loopne
or
or
dec
aam
xchg
sub
mov
ret
push
mov
scas
(bad)
not
cmp
pop
fisubr
pop
lods
imul
inc
xchg
mov
(bad)
rep
cmps
nop
fs
jmp
add
in
sahf
std
mov
sbb
xor
ror
mov
aaa
dec
push
push
jcxz
or
cmps
pop
adc
in
adc
imul
pop
xchg
pop
sub
ret
gs
dec
mov
daa
cmc
jb
adc
adc
sahf
adc
pop
and
js
lahf
jne
and
pop
inc
in
call
shr
lods
mov
div
or
fisttp
jns
mov
sub
xchg
xor
fdiv
lahf
sub
inc
scas
clc
jno
jo
pop
(bad)
mov
sbb
(bad)
fdiv
in
cmp
pop
and
add
xor
mov
ret
xchg
xlat
xor
mov
pop
mov
mov
push
dec
push
xor
jp
inc
das
inc
adc
push
adc
dec
daa
in
cmps
bound
sub
pop
ss
test
pushf
popa
mov
mov
ins
test
sub
and
adc
jne
mov
(bad)
mov
movs
je
sbb
lahf
rcr
adc
imul
mov
ins
mov
mov
push
rcr
pop
stc
enter
xor
arpl
jbe
imul
add
not
mul
out
enter
sbb
scas
mov
mov
or
nop
cmpxchg
pop
shl
cmp
push
dec
jae
mov
push
lods
cli
adc
cmp
lods
xchg
xor
mov
add
push
mov
pop
mov
or
adc
xor
push
int3
shl
adc
outs
add
int3
jb
gs
retf
or
je
ins
call
cmp
imul
(bad)
sti
shl
mov
jo
daa
imul
pop
xor
ins
fwait
stos
dec
add
sbb
cmp
jmp
xor
repz
push
data16
jo
jbe
out
jp
xlat
and
popf
inc
cmp
sbb
js
and
addr16
push
and
in
lds
push
push
bnd
test
add
rcr
std
jne
imul
sbb
cmp
or
int
repz
aaa
pop
lock
pop
fldcw
hlt
mul
cwde
sub
mov
add
mov
popf
and
adc
cmp
ds
fisub
inc
adc
test
mov
add
test
xchg
pop
(bad)
nop
xchg
add
ins
mov
fs
push
sbb
movs
cmp
sub
mov
push
push
mov
call
adc
iret
jmp
dec
jmp
aam
repnz
ins
cmp
jg
xlat
mov
call
sbb
test
scas
test
mov
rcl
cli
jno
jne
pop
dec
loopne
sub
ja
in
retf
dec
xor
jbe
adc
loope
pusha
fnstcw
pop
adc
js
test
mov
sub
mov
dec
idiv
sub
fidivr
lods
retf
sub
not
out
cli
mov
loop
jmp
push
stc
shr
xchg
test
xchg
mov
into
retf
test
lods
inc
mov
shr
icebp
loopne
jmp
rcr
cmp
scas
mov
movs
dec
(bad)
dec
dec
mov
push
jae
inc
jmp
jmp
icebp
arpl
and
mov
cwde
daa
aam
out
fimul
gs
inc
jo
shr
dec
xor
xor
daa
popf
out
cmp
je
or
cmp
cmp
vpmacssdqh
(bad)
es
mov
mov
push
push
pop
jns
test
(bad)
sbb
push
push
mov
sbb
sbb
and
mov
cmc
jb
scas
icebp
xor
dec
mov
in
or
add
cmp
in
dec
mov
add
ins
pop
cmps
add
lock
ins
test
retf
push
fist
fcom
scas
ret
lods
sbb
enter
fwait
out
fld
(bad)
dec
call
je
hlt
or
xchg
mov
cs
dec
mov
pushf
lods
fidivr
(bad)
jp
shr
imul
loopne
xchg
cmp
mov
adc
mov
inc
xchg
mov
pop
daa
mov
mov
jle
(bad)
mov
xchg
lds
not
out
std
ins
jno
pop
bound
ja
mov
push
fldenv
stos
jno
outs
push
sti
loope
dec
mov
xchg
jecxz
add
dec
jo
sar
ror
jno
rcl
and
lods
inc
sub
inc
repnz
cmp
jno
inc
mov
inc
sub
dec
test
pusha
and
lods
mov
fnstcw
xchg
or
call
fdiv
adc
loop
add
imul
lock
fiadd
je
mov
push
inc
shl
outs
xchg
mov
or
test
jmp
mov
arpl
mov
ror
cs
fistp
mov
xchg
outs
cmps
imul
dec
jle
test
sbb
outs
jle
cmp
mov
sbb
sub
fisub
data16
dec
pop
or
push
imul
adc
cdq
cmp
fadd
push
inc
lods
xor
jnp
test
sbb
xchg
sbb
leave
or
lods
arpl
imul
or
pop
mov
pop
mov
loop
jae
jns
xor
sub
cdq
lods
(bad)
in
mov
adc
mov
in
gs
mov
ret
cmp
sub
ret
and
out
xor
sub
xor
mov
test
in
and
call
ins
cmp
xchg
out
or
hlt
in
outs
cmp
pusha
sar
mov
inc
xchg
adc
cmp
push
enter
pop
das
dec
cmp
dec
imul
pop
test
ror
repnz
mov
mov
std
std
loopne
in
xchg
ror
jp
xchg
fdiv
jno
sub
clc
in
jo
call
pop
fsub
inc
sbb
dec
es
jno
dec
adc
retf
in
push
adc
mov
jbe
push
inc
mov
dec
icebp
push
add
ins
aam
(bad)
jmp
fdivr
imul
xchg
sbb
pop
mov
imul
push
mov
test
shl
mov
shl
aas
dec
adc
pop
(bad)
dec
xor
daa
out
inc
add
dec
cdq
sub
or
jmp
out
imul
sub
push
mov
pushf
out
mov
dec
fwait
in
jle
fidiv
mov
push
ret
call
scas
add
mov
pusha
arpl
and
mov
add
(bad)
and
push
mov
shr
out
and
xor
cli
loope
mov
xchg
cmc
mov
xlat
mov
add
sbb
aam
lea
pop
add
lods
loope
fst
xchg
enter
sbb
shr
lahf
xchg
into
mov
mov
in
xor
imul
pop
loopne
sti
stos
mov
sbb
mov
mov
mov
sub
stos
mov
mov
pusha
ror
fwait
xchg
cmps
call
jg
sub
or
add
aam
jne
add
loope
sar
fdiv
test
inc
add
call
add
pusha
clc
push
ret
add
leave
js
add
test
xor
jecxz
ficomp
pop
stos
pop
inc
retf
mov
fsub
inc
mov
scas
js
js
shl
add
mov
fstp
call
out
leave
mov
sahf
(bad)
cmp
mov
shl
push
pop
dec
add
loope
cmps
dec
jmp
retf
or
cmp
sbb
mov
stc
push
or
das
jne
ja
fwait
in
add
stos
mov
or
push
imul
pop
jmp
sbb
inc
pop
jge
dec
sbb
fisttp
ins
push
ret
sbb
push
adc
adc
movs
gs
cmps
pop
aas
mov
lods
ret
xchg
data16
icebp
sbb
inc
je
xor
cld
push
sub
dec
(bad)
jbe
ficom
dec
inc
(bad)
out
out
adc
scas
adc
je
jle
inc
mov
bound
outs
sub
jno
mov
push
into
push
clc
jmp
sub
or
test
dec
xchg
(bad)
iret
xor
push
gs
in
jno
push
mov
add
mov
jnp
sbb
dec
pop
sbb
lds
pop
inc
imul
clc
outs
gs
dec
loopne
(bad)
fisttp
out
sub
xchg
fcmovne
aaa
pop
pop
dec
mov
mov
(bad)
pop
push
scas
clc
adc
dec
sbb
jnp
hlt
stc
mov
cwde
mov
inc
xlat
xchg
(bad)
aaa
xchg
pop
inc
xlat
push
movs
ret
or
imul
inc
sub
mov
out
ss
adc
pop
stos
mov
dec
cmc
pop
cmp
call
arpl
push
sub
push
mov
jmp
adc
mov
mov
jb
jp
dec
and
test
in
outs
aam
ror
jle
mov
iret
movs
sbb
pop
mov
pop
xor
sar
jae
mov
dec
retf
bound
mov
add
aas
nop
pop
mov
xlat
lock
mov
sahf
dec
push
mov
cli
stc
push
shl
jecxz
sub
pop
mov
gs
cmp
retf
mov
pop
xchg
bound
out
mov
(bad)
lock
xabort
jle
shr
xchg
push
jns
xor
dec
pop
mov
sub
and
adc
add
ficom
call
push
cmps
jnp
int
lods
mov
sub
add
fadd
lea
dec
dec
sub
shl
into
mov
call
and
xor
pop
shr
ins
push
push
xchg
aad
push
(bad)
das
movntps
mov
imul
push
test
lock
pop
sbb
jb
and
push
xlat
sbb
in
mov
xor
cmp
or
rep
ins
sbb
call
dec
add
mov
call
stc
inc
mov
inc
xor
int3
xchg
les
add
dec
(bad)
loop
retf
mov
outs
clc
clc
add
dec
mov
mov
add
sbb
repz
mov
xchg
push
cmp
fiadd
cmp
sbb
dec
adc
add
adc
mov
bsf
adc
je
xlat
ret
sub
mov
jns
lods
std
jb
stos
ss
sti
jae
lods
ror
adc
fisttp
mov
mov
dec
cwde
lock
prefetchw
or
add
xor
mov
cmp
push
mov
jg
daa
into
and
mov
push
(bad)
clc
push
cli
lahf
mov
lods
fxch
fwait
adc
fcomp
bound
les
(bad)
mov
imul
push
ss
cmc
cmp
push
jecxz
lods
jnp
xchg
(bad)
cmps
xchg
gs
inc
icebp
add
push
xchg
(bad)
dec
vsubss
push
data16
jns
int3
mov
jno
dec
loope
(bad)
(bad)
in
sti
cmps
jmp
ds
cli
mov
mov
jg
(bad)
loopne
mov
xchg
(bad)
mov
or
pop
lahf
mov
ss
and
or
lahf
or
bound
and
add
cmp
div
mov
in
mov
cli
push
inc
aam
sbb
nop
xor
sbb
jo
les
(bad)
cmp
out
std
pushf
jmp
xchg
push
in
rol
nop
dec
push
mov
add
into
lods
test
push
mov
ins
mov
mov
lds
jg
cmp
nop
lea
ficom
fbld
push
(bad)
xchg
mov
mov
push
dec
dec
push
jl
fwait
sbb
jle
fld
bound
mov
rcl
xor
fs
test
(bad)
icebp
mov
pusha
outs
adc
fiadd
adc
add
sub
lock
adc
or
inc
mov
jae
fcom
in
neg
test
xlat
mov
xor
jp
lea
hlt
inc
(bad)
pop
pop
int
cmp
dec
add
push
or
cmp
inc
jmp
sub
mov
movs
and
sbb
mov
or
or
inc
retf
aas
scas
lea
jbe
xchg
jns
xchg
aam
mov
leave
and
jae
pop
sti
outs
loop
cmp
fwait
jnp
jo
or
adc
xchg
test
jle
mul
in
icebp
sbb
icebp
cmp
gs
fsubr
lea
call
popa
dec
sbb
jns
jecxz
jge
xor
adc
ins
ss
mov
cmp
xchg
mov
movs
inc
mov
inc
out
rol
call
ret
dec
lahf
sbb
dec
inc
xor
adc
push
cmp
retf
jno
inc
sub
daa
xchg
inc
adc
inc
out
jo
into
fisttp
pop
aam
or
scas
retf
jp
sahf
cmc
in
push
add
jecxz
or
movs
sbb
inc
daa
jg
fs
push
es
mov
pop
mov
push
or
and
pop
jbe
ret
jp
int
add
sub
(bad)
dec
push
xlat
mov
hlt
mov
pop
mov
jne
imul
cmp
mov
cdq
pushf
stos
push
adc
jge
fmul
jb
cmp
jne
push
pop
loope
(bad)
mov
(bad)
adc
jge
aad
outs
add
adc
cmps
test
add
mov
mov
call
jb
loope
in
mov
rcl
pop
aaa
xlat
cmp
xchg
pop
ror
pop
xor
or
push
or
cmp
repz
lods
jl
leave
push
and
ret
shl
aas
lea
xlat
shr
add
out
ds
in
dec
inc
pop
ret
jnp
lods
sahf
mov
cs
shl
adc
call
adc
inc
mov
mov
js
push
ret
push
mov
cmp
mov
aad
scas
jmp
xor
jb
push
inc
jge
push
addr16
std
mul
sbb
or
cs
push
test
fucomi
test
in
and
jle
daa
ret
mov
mov
sub
add
fld
fwait
sbb
bound
loopne
inc
lahf
icebp
gs
neg
outs
outs
jne
pop
jecxz
test
adc
faddp
mov
push
mov
call
test
cmc
data16
mov
xor
push
inc
int
arpl
cmps
cmp
cld
xchg
inc
das
enter
sbb
fsub
xor
fisub
adc
sbb
mov
mov
stc
cs
popa
jo
(bad)
fimul
das
adc
fnstcw
call
rcr
xchg
into
cs
and
push
cmp
mov
lahf
cmps
sbb
dec
lock
out
inc
(bad)
and
aaa
ja
mov
jnp
mov
pop
pushf
push
mul
enter
aas
mov
pop
pop
imul
mov
(bad)
sahf
out
pop
add
dec
ja
dec
push
outs
adc
pusha
and
push
repnz
pusha
mov
pop
ja
and
sub
push
cmp
ffreep
stos
(bad)
ins
fsubp
iret
push
sub
mov
inc
push
mov
into
outs
ss
outs
push
in
popa
pop
inc
in
loopne
leave
xchg
sar
jecxz
xchg
adc
dec
sbb
sbb
mov
jecxz
loop
dec
and
sbb
xor
mov
pushf
rcr
jae
and
cmp
and
cmc
retf
sub
xor
loopne
(bad)
sub
and
mov
pusha
xor
fdivr
mul
clc
adc
in
aam
add
push
push
fxch
mov
gs
dec
push
pop
inc
sub
scas
test
lock
(bad)
cmp
xor
pushf
in
push
mov
inc
fdivr
or
or
aad
sbb
inc
jno
jnp
jge
dec
retf
das
inc
mov
xlat
shl
or
or
cmps
cdq
popf
(bad)
lea
outs
jbe
mov
in
jmp
sub
fidivr
bound
cmp
ss
mov
xlat
xchg
jns
call
aas
add
lahf
retf
int
bound
xor
pop
mov
addr16
mov
ret
xor
je
sar
xor
adc
je
into
std
push
xlat
or
cmp
lods
mov
rcl
adc
push
adc
sub
(bad)
(bad)
push
in
and
sbb
popa
mov
test
mov
or
dec
xchg
fstp
test
push
and
lds
pop
or
cmp
shl
rcl
add
pop
dec
xchg
cmp
jp
iret
inc
out
loope
popf
add
add
mov
lods
iret
(bad)
out
dec
into
pop
stos
lock
scas
icebp
add
pop
inc
mov
std
adc
sbb
sub
lahf
push
xor
rcl
mov
aas
mov
dec
jb
jmp
rcl
pop
lock
mov
imul
fnstsw
dec
lds
xor
mov
jmp
dec
(bad)
inc
xchg
lock
sahf
mov
xor
add
jo
add
in
cmps
sub
cld
and
mov
fdivr
sub
jno
adc
gs
and
nop
in
jae
ins
stos
enter
fcom
jnp
bound
aam
jbe
push
jmp
jb
mov
repz
xchg
les
xor
cmps
pop
push
inc
xor
(bad)
dec
in
xchg
mov
pop
hlt
sub
sbb
mov
test
scas
cmp
repz
cmp
and
xchg
mov
stc
nop
pop
std
mov
mov
in
xlat
pop
mov
and
push
push
call
sbb
loope
sar
mov
fwait
mov
jecxz
push
mov
stc
add
jo
shr
into
mov
sbb
add
mov
adc
pushf
dec
jbe
call
retf
dec
sti
ret
jmp
fbld
push
inc
imul
sysexit
inc
cmps
aas
fidiv
mov
mov
push
loopne
out
imul
in
adc
xlat
pop
movs
fucomip
jg
ja
add
xchg
(bad)
sahf
sbb
xor
pop
pop
xor
dec
out
cs
xchg
and
inc
clc
sub
dec
clc
ins
cmp
xchg
or
shr
mov
dec
test
pop
jge
pop
inc
push
out
pusha
or
pop
and
jo
xor
xchg
jle
cmp
push
jmp
adc
iret
shr
movs
push
and
call
xchg
cs
dec
push
in
sub
mov
or
mov
sub
repnz
call
daa
jmp
sub
(bad)
scas
sar
add
lods
lods
add
enter
jle
jmp
jo
pop
jmp
mov
mov
add
inc
test
(bad)
int
adc
rcr
(bad)
out
cli
call
add
sub
xchg
inc
stos
xor
cmp
aaa
cmc
mov
(bad)
xor
call
test
or
das
out
xor
sti
jp
mov
outs
neg
test
dec
les
loopne
pop
adc
movs
push
sbb
scas
mov
mov
mov
add
sub
inc
add
pop
sbb
push
(bad)
shl
imul
sbb
cmp
fild
jecxz
mov
addr16
inc
lahf
pop
ret
push
push
ins
fbstp
cmp
ret
es
inc
dec
pop
or
inc
push
aam
fmul
add
or
int
add
cdq
test
popa
jae
dec
jmp
test
and
jne
sbb
xchg
in
xor
sub
into
or
jg
fs
push
pop
shl
fistp
std
push
aad
rcr
xchg
test
and
push
stos
cwde
xor
call
daa
daa
(bad)
sbb
leave
das
cmp
or
sbb
add
mov
adc
dec
xor
fldenv
bnd
add
lahf
jb
js
xchg
inc
test
adc
in
mov
aaa
xchg
pop
cdq
cld
jg
pop
mov
and
sub
push
mov
sbb
sbb
int
(bad)
jp
pop
aaa
jmp
add
mov
cmp
cmp
xchg
int
push
daa
scas
dec
xchg
cmp
repnz
add
stos
jmp
xor
neg
jne
std
add
out
push
inc
mov
mov
sub
fucomp
sbb
lods
cmp
lea
sti
in
mov
loopne
mov
xlat
arpl
mov
xor
repnz
mov
xchg
add
lods
and
xchg
push
jecxz
cmp
mov
push
leave
push
pop
jo
test
jl
mov
daa
sti
xor
(bad)
jo
or
mov
popa
test
cdq
mov
or
and
faddp
push
inc
clc
loope
jl
mov
mov
xor
outs
xchg
xchg
es
outs
adc
shr
(bad)
pop
pop
jle
dec
repz
daa
data16
inc
push
aas
sub
cdq
shr
mov
sbb
stc
adc
test
imul
jne
sub
out
cmp
cmp
jl
lods
arpl
push
mov
and
dec
icebp
lahf
out
pop
jmp
push
test
rol
mov
mov
sar
ja
push
fcomp
or
mov
retf
das
cld
int
lds
retf
sub
hlt
or
jl
add
jg
xchg
xchg
jge
idiv
hlt
cld
jl
pop
pop
xchg
mov
xor
xchg
push
imul
aad
aaa
xchg
test
pushf
call
fwait
inc
pop
xlat
pop
cmovbe
bound
pop
mov
sub
adc
test
sbb
mov
jne
jmp
and
test
cwde
mov
fist
push
nop
xor
and
call
sbb
jmp
and
in
pop
sub
cmp
fwait
mov
or
inc
iret
cmp
adc
or
jns
push
adc
push
ja
cmp
idiv
outs
pop
xor
xor
pop
pop
adc
mov
cmp
xchg
clc
int3
loop
jp
sub
ss
aaa
xlat
icebp
mov
lds
dec
jo
or
cmp
pop
xor
adc
jns
ins
mov
(bad)
adc
scas
shl
mul
bound
sbb
mov
int
mov
mov
aam
adc
in
int
adc
cmps
mov
sbb
push
cwde
jl
sbb
dec
mov
and
scas
sub
jmp
pop
mov
add
aas
dec
ret
aas
popf
daa
inc
cmp
test
mov
loope
jno
mov
add
enter
das
mov
mov
push
dec
pop
xchg
lahf
sub
xchg
push
ins
fsubr
lods
imul
mov
int
push
dec
mov
sub
mov
and
icebp
pop
mov
mov
gs
jne
pop
je
mov
shl
cmp
push
xlat
imul
bound
xchg
pop
mov
sar
jmp
lock
pop
jbe
xor
and
mov
add
std
mov
xor
into
add
outs
and
mov
sub
xor
shl
out
js
mov
lahf
lock
sub
hlt
dec
xchg
xor
fmul
mov
call
and
add
pushf
sub
(bad)
aad
fs
dec
cmp
xor
dec
mov
test
xchg
es
jbe
in
fld
pop
imul
mov
ret
pop
cs
add
or
jne
jb
neg
jmp
jmp
dec
ret
hlt
mov
jno
out
inc
out
fs
push
dec
xor
imul
cmp
jl
pop
mov
jecxz
jno
and
shl
push
arpl
lds
ja
pop
lock
push
xor
xlat
ins
sbb
pop
push
xlat
jns
jge
mov
stos
xchg
push
shr
dec
(bad)
cdq
inc
stos
sub
push
outs
dec
shl
fsubr
push
(bad)
adc
mov
sub
cmp
in
mov
or
outs
mov
loope
out
repz
sahf
lds
xor
pop
jmp
mov
lea
fistp
mov
add
out
push
pop
pop
movs
fidivr
scas
loope
sti
js
xlat
cmp
jns
jmp
mov
(bad)
cmp
dec
mov
jae
cmp
sti
xchg
aaa
aas
push
inc
push
(bad)
or
sub
cmp
xchg
push
xchg
stc
inc
shl
out
xor
adc
mov
push
mov
xor
test
sbb
aad
or
addr16
loopne
adc
xchg
mov
popa
inc
and
or
int3
jg
cmp
lock
rep
mov
sbb
jg
mov
jl
xor
test
xchg
mov
fstp
fiadd
jmp
push
mov
mov
xor
movs
repnz
pusha
cmp
mov
cmp
ins
popf
mov
outs
test
jns
and
and
lods
adc
push
sbb
mov
jge
inc
sub
lods
xor
sbb
mov
mov
je
mov
adc
sub
call
xor
fist
idiv
mov
(bad)
mov
lahf
mov
sbb
xchg
lea
in
xor
mov
fwait
jmp
sbb
int
push
cdq
cmp
sahf
nop
lock
pop
scas
xchg
and
and
sbb
xor
or
pop
pop
xchg
and
mov
xchg
xchg
mov
or
outs
inc
jmp
and
add
mov
cmp
mov
adc
pop
or
dec
mov
jno
dec
imul
test
add
pop
mov
mov
out
jle
adc
adc
mov
xchg
jo
lods
lock
add
adc
adc
into
sar
pop
mov
inc
sub
add
call
cmp
mov
inc
out
xchg
fwait
xor
and
rol
daa
xchg
das
add
push
xchg
jae
add
arpl
cmp
mov
add
hlt
pop
add
les
es
hlt
dec
mov
push
out
pop
popf
daa
jbe
jmp
movs
and
mov
or
xchg
mov
shl
nop
or
adc
int3
mov
ins
xchg
outs
jp
jno
scas
aas
xor
pop
pop
dec
cdq
push
push
push
adc
mov
inc
mov
in
cmp
sub
ds
mov
add
or
mov
mov
cld
sahf
cwde
jp
sahf
out
ds
rcl
dec
and
test
arpl
cmp
inc
pop
popa
jg
mov
mov
mov
dec
shl
out
ins
addr16
clc
imul
sahf
pop
fist
rcr
sub
int3
shl
jne
imul
inc
jecxz
mov
mov
sub
fidiv
pop
sub
or
repnz
mov
rol
fdivrp
jle
sahf
and
test
loop
push
in
mov
inc
aad
repnz
mov
cmp
push
imul
mov
int
add
fld
js
xchg
into
sar
xor
jnp
mov
and
add
std
je
cmp
dec
lods
in
sbb
cmp
cdq
jnp
imul
sub
data16
sbb
xchg
mov
sar
(bad)
sbb
scas
pop
lea
mov
(bad)
sti
stc
xchg
(bad)
fwait
shl
inc
test
rcr
xchg
add
mov
arpl
ret
or
lock
fucomip
or
jp
cmps
mov
int
lock
sbb
inc
cmps
jecxz
test
or
mov
pop
fsubr
or
aam
mov
sub
xor
push
mov
pop
mov
xchg
adc
loopne
mov
push
inc
add
jge
pushf
mov
jle
(bad)
push
jmp
aas
cmp
jp
pushf
adc
mov
jns
push
mov
push
mov
das
out
sub
mov
add
cmp
mov
loopne
pop
rcr
push
mov
sbb
rol
div
enter
cmp
mov
aad
adc
sub
dec
fdivr
ins
or
(bad)
or
dec
pop
cld
rcl
dec
sbb
test
scas
and
xchg
xchg
add
cmp
add
aad
pop
and
addr16
xor
mov
dec
div
cdq
(bad)
mov
push
or
sbb
dec
xor
inc
add
addr16
and
cmp
dec
clc
adc
inc
nop
adc
inc
xor
xchg
call
adc
mov
add
adc
adc
test
or
es
sbb
mov
int
mov
pusha
fcmovnu
push
call
clc
mov
sbb
not
pop
push
lahf
scas
jns
aam
loop
data16
ss
ret
int
or
ret
mov
jno
push
daa
mov
std
mov
lahf
pusha
popf
push
adc
cld
test
inc
out
mov
cli
sub
mov
mov
pop
cdq
lds
ffree
call
add
add
cmps
mov
pop
jge
cmp
mov
call
fiadd
adc
sub
push
mov
xor
jl
(bad)
push
pop
push
scas
adc
outs
pop
sub
fwait
jp
jge
int3
sahf
xchg
aas
inc
in
mov
test
inc
pusha
mov
inc
scas
retf
in
adc
inc
mov
ins
sbb
les
dec
push
push
fistp
outs
cmp
hlt
mov
mov
cmc
je
inc
adc
jl
adc
lods
cld
dec
repz
jl
xor
cmp
call
popf
cli
sbb
cld
out
fidiv
lea
jo
mov
mov
push
fmul
clc
fstp
cld
xlat
inc
sub
(bad)
cmp
sbb
test
pop
jecxz
scas
mov
xor
xchg
sub
cmps
retf
jecxz
inc
int
mov
pop
sbb
cmp
jp
jne
xor
test
dec
imul
push
pop
rcr
jmp
sbb
je
jl
into
inc
inc
jno
adc
aas
pop
xchg
adc
inc
ds
mov
and
inc
or
call
pop
mov
inc
out
lahf
stos
inc
imul
sahf
out
es
xchg
and
and
push
aaa
sbb
retf
outs
(bad)
adc
dec
stos
add
imul
inc
xchg
not
jl
cmp
aas
push
push
inc
les
mov
repnz
cmp
call
popa
push
mov
mov
jg
sbb
pop
jl
stc
add
xchg
and
(bad)
int
xor
xchg
lods
pop
(bad)
dec
or
js
popf
test
mov
inc
mov
je
repnz
std
mov
fidiv
stc
inc
enter
retf
mov
inc
mov
push
ins
call
jl
dec
sbb
stc
xchg
jl
inc
or
je
dec
(bad)
daa
cwde
mov
repz
outs
cmc
in
mov
sub
sub
mov
lock
in
cmp
pop
sbb
sub
xor
lds
sbb
adc
jo
fninit
mov
in
mov
add
inc
ret
dec
inc
mul
scas
stos
mov
fcmove
popa
jae
hlt
mov
scas
sub
ss
js
fs
jl
or
adc
jp
imul
inc
jno
(bad)
push
retf
mov
je
or
movs
xor
inc
test
mov
pop
not
xor
mov
push
cmp
and
inc
stos
icebp
jg
mov
xchg
test
adc
cmp
push
mov
jp
cmp
je
mov
lock
(bad)
and
stc
sbb
jns
imul
xchg
push
push
stos
gs
mov
inc
jb
shl
retf
xchg
mov
imul
shr
mov
xchg
sbb
xchg
and
daa
daa
test
fdivrp
push
xchg
inc
sbb
mov
xor
(bad)
cmps
das
mov
sub
movs
mov
hlt
std
add
add
mov
into
rcr
mul
lods
pushf
push
aam
mov
mov
adc
enter
out
dec
(bad)
inc
shr
inc
jb
inc
jg
pop
and
mov
movs
dec
in
shr
dec
and
retf
mov
add
mov
stc
hlt
dec
mov
and
test
sub
jne
xchg
add
and
pop
sub
jp
(bad)
mov
xchg
push
popf
mov
adc
lds
inc
jno
xchg
pop
mov
pop
mov
loop
pushf
popf
movs
xchg
les
xchg
mov
xchg
pop
sbb
xchg
mov
(bad)
and
ret
cmp
icebp
adc
fwait
cwde
ins
cwde
mov
test
adc
and
jb
mov
call
mov
mov
iret
ud1
in
pop
add
adc
cld
dec
aaa
aad
mov
push
xlat
rcr
sub
aad
xchg
or
add
ror
popf
adc
push
sub
jno
pop
cmp
or
stos
ret
dec
push
xchg
mov
adc
mov
scas
add
pop
push
inc
nop
xlat
scas
push
ins
or
(bad)
js
cmc
fcomip
xor
jmp
stc
ret
add
inc
les
cmp
aas
xlat
pop
push
cmps
outs
sub
jge
cmc
sub
push
repnz
mov
daa
hlt
(bad)
out
movs
xchg
pop
inc
dec
or
mov
jne
mov
call
inc
pushf
imul
out
push
mov
out
mov
push
cld
pop
jl
popf
xor
pop
fld
sub
dec
mov
cmp
sub
shl
out
mov
dec
jp
mov
ror
jo
test
jns
nop
sbb
xchg
adc
pop
cmc
dec
mov
mov
test
mov
xor
push
pop
hlt
cs
pop
into
in
js
jno
ret
mov
mov
out
sub
mov
aas
std
into
jle
xlat
icebp
jne
icebp
or
rcl
jne
daa
je
push
mov
data16
xchg
sbb
nop
clc
es
pop
jecxz
mov
inc
xchg
mov
outs
loop
add
jno
retf
fisttp
cmp
sub
cmp
add
int
or
mov
sahf
stos
dec
sbb
(bad)
aas
inc
dec
repnz
stos
loopne
retf
iret
int3
outs
and
stos
jg
into
sbb
sub
in
ret
push
push
enter
dec
pop
xchg
jo
int
cmp
mov
mov
xchg
pop
outs
call
sbb
fimul
imul
and
mov
(bad)
das
in
add
ds
xchg
jo
movs
or
je
jg
sub
dec
xchg
call
jmp
mov
adc
sbb
mov
pop
push
ds
imul
cld
cdq
pop
mov
mov
imul
mov
in
in
mov
cmps
jge
mov
sub
adc
out
xor
adc
jo
xor
dec
xchg
sbb
push
loopne
stos
sub
fs
(bad)
ror
pop
and
mov
pushf
pop
mov
(bad)
(bad)
pop
mov
in
and
mov
push
addr16
xor
adc
outs
int3
repnz
pop
jmp
push
out
ror
shr
sahf
jae
mov
cmp
ja
imul
push
pop
mov
push
test
loop
or
movs
ja
fstp
sub
and
pop
jecxz
xchg
std
arpl
xor
outs
pushf
xchg
ret
aaa
fsub
test
mov
sub
fidiv
push
pop
adc
popa
adc
xchg
jg
jmp
pop
mov
mov
add
out
ffreep
sbb
repnz
in
push
mov
xor
cdq
push
mov
dec
mov
cmps
movs
inc
pushf
(bad)
or
mov
shl
rcr
stos
sbb
or
jecxz
cmp
dec
inc
rol
mov
int
iret
pop
push
retf
aad
jo
mov
add
shr
cmps
push
jmp
inc
sahf
dec
pop
cmp
add
imul
adc
or
mov
iret
loope
cmp
es
pop
push
jg
call
push
nop
daa
sbb
mov
stos
jno
jbe
shr
js
push
xchg
(bad)
or
adc
jmp
or
xor
scas
fs
fsubr
int
inc
push
push
mov
sahf
xchg
xchg
sub
aam
ret
adc
mul
and
add
cld
mov
pusha
sbb
gs
xor
xor
leave
out
daa
arpl
cmp
xchg
int
lods
ins
mov
push
pop
xchg
push
jle
and
cli
inc
loop
inc
int
jb
jo
outs
jmp
aas
mov
mov
mov
add
jmp
jp
imul
or
fwait
pop
and
mov
jb
les
(bad)
nop
call
xchg
test
xchg
add
inc
scas
fild
cmp
std
sub
dec
jmp
xchg
pop
in
scas
jnp
xchg
xchg
or
lods
hlt
fstp
in
std
jg
shl
lds
mov
test
loope
hlt
jmp
or
mul
lods
lahf
mov
xor
(bad)
fild
pop
into
sti
lods
out
fcom
xlat
ficom
inc
fnstcw
mov
sbb
push
xchg
call
call
fwait
movs
out
jae
cmp
cmps
inc
jge
inc
inc
cmps
(bad)
cmc
cli
xlat
aad
dec
jo
hlt
rcl
pop
mov
xchg
fptan
push
adc
out
pop
fld
mov
jo
and
push
sub
and
add
into
ror
and
shl
xchg
movs
bound
test
mov
cmps
(bad)
mov
(bad)
pop
gs
mov
jbe
sbb
dec
dec
dec
pop
aaa
ds
imul
mov
push
mov
inc
sbb
fwait
addr16
test
and
ja
pop
call
sbb
nop
sbb
mov
cs
push
cmp
jbe
xor
jno
repnz
scas
jno
add
in
repnz
mov
inc
sub
and
add
pop
mov
sahf
jle
scas
test
imul
in
fild
xchg
inc
push
retf
sbb
retf
jecxz
jmp
add
mov
repz
cmp
jge
lods
xchg
xchg
ja
sub
or
out
pop
sbb
sub
xchg
bound
fimul
jo
xlat
sub
sub
mov
test
dec
cmps
sub
call
out
or
test
cwde
lods
sub
inc
inc
test
inc
xchg
pop
or
sub
adc
call
pop
mov
jbe
fstp
outs
pop
push
inc
inc
pushf
xchg
push
sbb
mov
pop
bound
and
and
inc
jae
repz
jmp
add
mov
sbb
retf
dec
inc
mov
dec
aaa
mov
pusha
cmp
dec
test
xor
lahf
push
push
xchg
stos
out
jmp
bound
sub
fwait
bound
mov
mov
popa
fldenv
pop
ds
add
outs
mov
mov
mov
mov
mov
out
test
inc
dec
cwde
xlat
mov
and
clc
pop
int3
aas
test
(bad)
jno
das
jle
rol
cdq
lds
cmp
scas
jnp
es
loop
jbe
test
mov
add
mov
les
ret
ds
pop
loopne
cmp
inc
in
and
test
aaa
or
jne
jbe
cli
ror
mov
cdq
shl
jno
aam
scas
into
cmp
ret
mov
sub
mov
jge
rcl
loope
aad
and
daa
jl
push
cmp
popf
xchg
test
shl
push
inc
in
das
push
jnp
out
dec
ret
(bad)
add
mov
scas
jnp
stos
mov
pop
loope
push
leave
bound
fs
inc
dec
dec
loop
cdq
push
sbb
test
(bad)
jns
push
xchg
retf
rcl
sbb
loop
call
out
loope
test
ds
in
mov
loop
sub
loop
(bad)
js
lock
rol
xchg
das
pop
and
jmp
repz
cmp
mov
enter
test
push
adc
lods
dec
xchg
dec
stc
arpl
xlat
mov
cs
cld
xchg
pushf
mov
popf
adc
(bad)
mov
jge
inc
scas
stos
lods
add
xlat
xor
outs
retf
test
mov
(bad)
xor
xchg
cmp
je
out
in
jns
cdq
std
loop
call
ror
push
mov
and
xor
pop
jp
retf
jae
or
inc
hlt
sub
add
lea
cmps
popf
and
push
loope
scas
add
cmps
pop
cmps
int
push
popa
push
and
sub
push
stos
add
mov
sub
(bad)
daa
mov
mov
iretw
dec
loope
xor
push
xchg
mov
push
inc
imul
push
cmps
test
test
cmp
mov
fwait
mov
js
adc
popf
mov
in
and
loope
lods
cs
push
aas
sub
call
js
adc
cs
cmps
(bad)
daa
stc
popa
out
cmp
sub
or
icebp
mov
mov
neg
sbb
fdivr
shl
cld
shl
shl
test
aas
jg
into
call
jp
push
mov
sbb
shr
mov
push
mov
add
xchg
jle
add
lods
dec
fiadd
sub
add
mov
mov
push
imul
jae
dec
hlt
lock
ins
ja
lock
inc
mov
xlat
test
push
aad
dec
mov
push
int3
sbb
cmp
jb
or
jae
xor
xor
mov
ins
add
xlat
(bad)
popa
stos
sub
adc
out
mov
mov
in
xchg
push
push
into
retf
(bad)
cld
inc
jns
and
or
scas
or
dec
ins
in
or
jae
ins
(bad)
retf
dec
and
sub
adc
lock
sub
imul
or
imul
jae
jl
sahf
push
movs
int3
lea
outs
jo
cmp
repnz
iret
sub
xchg
xchg
mov
pushf
xchg
cli
mov
and
js
xchg
fiadd
push
in
test
mov
hlt
fsubr
rol
mov
jg
adc
shl
int3
and
or
arpl
movs
test
aad
cmc
mov
and
(bad)
idiv
stos
cli
inc
fbstp
enter
test
icebp
jns
push
test
mov
mov
clc
aas
das
jnp
jecxz
dec
jle
jmp
fstp
or
push
lahf
jle
fsubr
and
cmps
cmp
movs
stos
and
out
in
inc
mov
pop
pop
push
shl
push
or
retf
push
js
xchg
cmp
jge
test
jle
or
test
cmp
adc
mov
push
mov
mov
fistp
xor
sub
les
in
stos
sti
(bad)
arpl
inc
imul
xchg
stos
jne
jmp
mov
mov
push
sub
ror
fnstcw
scas
pop
adc
or
jbe
ins
hlt
ins
fnstcw
inc
int3
cdq
add
inc
cdq
sub
mov
mov
and
clc
ror
xchg
fs
scas
jl
dec
and
adc
xchg
cli
cmps
xchg
fld
xor
out
sub
inc
pusha
aam
dec
add
jns
test
pop
jp
xor
sub
aad
inc
sar
out
cmp
dec
lods
fdiv
adc
sub
mov
scas
arpl
xor
push
jle
inc
neg
fiadd
arpl
pop
cmps
jo
cmp
test
loope
cs
cdq
fwait
mov
leave
adc
jmp
adc
xor
daa
adc
imul
popf
push
(bad)
fwait
out
clc
cmp
dec
je
mov
mov
and
push
test
iret
fdivr
push
xchg
pop
xchg
xchg
cmps
lods
es
(bad)
int3
test
call
sub
ds
sbb
test
(bad)
xor
add
xor
scas
gs
mov
enter
push
popa
gs
and
xchg
fwait
mov
fisttp
out
repz
cmps
movs
push
aad
sbb
inc
xchg
aam
pop
cmp
xor
inc
fldcw
dec
rol
xchg
pusha
dec
jne
pop
test
jmp
les
or
mov
adc
push
and
aam
lea
xchg
in
fldenv
xor
push
inc
mov
test
sub
sub
stc
enter
sbb
mov
sub
out
or
push
std
xor
enter
cmps
sahf
sti
sub
sub
ds
and
push
int3
lahf
cdq
out
xor
ins
sar
adc
cmc
mov
mov
jp
pop
push
mov
xchg
test
ficom
push
mov
arpl
jbe
add
mov
loop
push
and
scas
ret
push
jl
dec
fcom
outs
data16
jae
sbb
push
out
sbb
cmp
call
add
push
les
(bad)
sahf
cmp
push
addr16
imul
std
adc
fwait
sub
call
push
dec
scas
or
cmp
lock
xchg
mov
(bad)
test
or
push
call
sbb
mov
mov
pop
mov
pushf
jno
repz
movs
mov
in
in
xchg
adc
cdq
xlat
je
fcmovb
jp
ds
sub
ret
mov
jecxz
retf
and
cmp
and
inc
sub
push
cmps
icebp
out
das
fbld
add
out
sbb
sbb
lods
add
test
ins
add
(bad)
data16
push
hlt
lock
push
in
ja
imul
push
sbb
movs
push
loop
dec
push
inc
daa
xor
sub
fidiv
outs
inc
sti
and
pop
xchg
loop
push
push
mov
xlat
cmps
nop
add
pop
and
adc
adc
(bad)
jne
movs
xor
push
stos
cmp
pop
jp
iret
jecxz
sbb
push
jb
mov
pusha
xlat
stos
push
jbe
stos
mov
push
sbb
pop
out
out
arpl
(bad)
scas
in
adc
push
adc
dec
pop
pop
jno
mov
xchg
mov
or
aaa
sti
adc
sti
sbb
leave
inc
in
push
das
lea
mov
adc
std
js
enter
fidiv
mov
fisttp
push
rcr
test
int3
pop
popa
inc
call
push
imul
daa
sub
add
xor
xor
xlat
mov
inc
(bad)
fstp
retf
cmp
fnsave
fs
lock
scas
mov
or
dec
aas
push
mov
shl
ret
push
push
in
xor
pop
daa
mov
in
xchg
or
push
lds
and
xchg
or
mov
call
loopne
inc
call
pop
call
and
lock
and
loope
sub
gs
ins
cmp
maxps
dec
sbb
leave
fild
ins
add
sub
add
call
pushf
cli
test
jmp
sub
push
nop
and
xor
out
imul
mov
(bad)
jl
loop
inc
fst
jae
pop
xor
fmul
mov
jb
cmp
and
into
cwde
mul
jne
(bad)
loop
mov
test
pop
adc
fidiv
inc
xor
dec
jmp
aad
das
sbb
(bad)
bound
dec
pop
add
leave
lds
neg
shrd
sar
hlt
lods
(bad)
xor
repnz
jmp
inc
pop
add
test
pop
inc
rol
es
stos
push
push
or
pop
fcmovnb
mov
setbe
push
outs
cli
test
sbb
loope
inc
inc
lods
xor
mov
je
bound
retf
fdiv
pop
mov
inc
sub
xchg
test
jnp
jns
mov
aaa
sub
pushf
dec
jg
mov
pop
ja
les
in
jae
inc
ror
sub
clc
inc
sbb
call
and
adc
and
adc
add
sub
imul
mov
icebp
sub
and
loopne
ja
mov
cmp
inc
cmp
add
cld
(bad)
add
ins
sar
(bad)
adc
lea
ds
mov
lahf
and
add
jmp
stos
pusha
fild
add
push
stos
and
lock
sbb
rcr
push
clc
sbb
sub
lahf
out
cmps
and
inc
jnp
out
push
cld
ficom
fwait
jp
int3
mov
xchg
dec
clc
sub
imul
and
js
push
dec
jo
or
mov
movs
out
retf
xor
dec
outs
loope
in
dec
popf
sub
push
icebp
jae
scas
and
adc
xchg
xchg
hlt
sbb
push
adc
cmps
cmp
pop
(bad)
mov
cmps
int3
cdq
retf
ret
shl
fiadd
adc
clc
mov
(bad)
loope
shr
in
bound
ret
adc
add
sub
xor
jns
fwait
adc
xchg
in
inc
sbb
scas
imul
leave
cmps
mov
div
movs
cdq
mov
jge
add
dec
adc
jmp
or
lds
aas
mov
jge
push
movs
mov
dec
int
rcl
aaa
mov
imul
xor
push
cs
loop
pop
je
mov
cli
xchg
mov
loopne
jno
jmpw
sahf
mov
fdiv
std
inc
stos
retf
and
(bad)
mov
pop
jbe
mov
scas
jle
inc
push
or
cmps
popf
sar
adc
jg
lds
vpshlb
nop
test
add
mov
cmp
jp
xor
ret
dec
mov
enter
xor
fnstcw
and
mov
or
and
ja
imul
lods
lock
mov
mov
and
ins
(bad)
fnstsw
xor
sbb
inc
test
fdiv
mov
(bad)
repnz
nop
pop
ins
and
in
(bad)
lods
imul
aam
or
pop
and
or
sbb
loope
fldcw
inc
sub
cmp
out
sbb
(bad)
mov
adc
in
add
fsub
adc
mov
xchg
xor
mul
pop
mov
aam
in
retf
sub
lods
jl
ja
icebp
ins
(bad)
ficom
mov
add
call
add
in
(bad)
sbb
hlt
lods
add
push
pop
xchg
sub
popf
fs
xchg
jae
aam
cmps
sbb
sub
imul
je
ret
jge
push
ds
mov
mov
std
outs
add
ficom
inc
std
sti
int3
int3
push
test
loope
inc
inc
and
fdivr
or
je
mov
leave
shl
in
or
push
cmp
cwde
call
popw
nop
dec
out
fisubr
dec
cwde
out
push
in
aaa
mov
stc
cmp
jns
leave
adc
mov
ins
jmp
cmp
(bad)
cmp
jecxz
mov
int3
jmp
mov
or
pushf
push
fistp
aam
add
sub
mov
xchg
ror
test
push
mov
jae
sub
out
push
pop
fwait
cmp
jecxz
cld
das
pop
ja
and
int
pushf
stos
dec
mov
pusha
mov
add
dec
call
jmp
cmp
inc
lock
pop
(bad)
lods
jae
xor
ror
fwait
mov
cmp
inc
stos
pop
outs
fcmovne
xor
jge
retf
das
test
lods
sub
lahf
fmul
jmp
jae
inc
push
push
jg
out
aam
cmps
in
mov
adc
aad
jo
mov
test
test
pop
push
repnz
fisttp
pusha
push
dec
add
cmp
mov
cld
nop
loop
push
add
outs
jne
into
imul
(bad)
jmp
push
push
in
adc
cdq
(bad)
xor
xchg
in
popa
sar
mul
jge
clc
rcr
mov
movs
mov
mov
dec
pushf
retf
push
cdq
sbb
mov
pop
je
push
mov
adc
sbb
mov
clc
mov
ins
leave
push
push
push
dec
in
(bad)
int3
jb
mov
xchg
mov
aam
jp
cmp
mov
dec
popf
pop
ret
ds
push
cmps
imul
sbb
or
sete
adc
or
daa
bound
shl
inc
or
jns
(bad)
pop
add
call
scas
mov
sbb
inc
out
(bad)
mov
repnz
mov
pop
jno
nop
dec
add
adc
or
and
dec
inc
fcmovnbe
enter
pop
movs
jb
lds
or
mov
add
loop
pop
sahf
stc
(bad)
xor
movs
loop
test
jp
shl
call
std
test
jns
push
sbb
add
loope
dec
and
xor
das
div
lar
mov
pop
movs
cs
ror
dec
jl
and
(bad)
mov
cmp
or
pop
cmps
fidivr
ins
aad
fs
ret
ret
pop
hlt
pop
loopne
mov
jne
pop
in
in
inc
into
xor
lahf
or
xchg
dec
adc
cmp
loope
loopne
outs
arpl
fcmovnbe
dec
inc
fistp
mov
add
loopne
mov
fs
dec
inc
mov
xchg
push
sbb
out
push
rcr
js
inc
mov
(bad)
and
mov
retf
sbb
pop
inc
jp
loopne
ret
(bad)
(bad)
movs
pop
packssdw
jb
(bad)
mov
fs
xor
imul
je
dec
test
retf
adc
mov
in
sbb
imul
mov
push
add
mov
mov
in
or
dec
jae
sti
mov
cmps
inc
inc
(bad)
add
jg
or
mov
xchg
dec
inc
movs
mov
sti
xchg
xchg
pop
fcom
clc
cmp
dec
js
or
sub
xor
dec
push
and
in
scas
arpl
dec
inc
outs
xchg
push
pop
lods
call
sti
aas
xor
js
sub
pop
ror
scas
xchg
lea
xchg
fisubr
push
mov
and
sti
imul
sub
in
jl
cdq
pop
sub
ds
inc
inc
jp
retf
movs
mov
inc
retf
imul
mov
les
mov
add
fsub
inc
data16
mov
jno
mov
xlat
sbb
pop
fbstp
scas
loope
xor
mov
push
dec
add
mov
push
and
inc
xor
add
stos
imul
pop
dec
ins
or
stc
sbb
rol
and
std
cmc
out
ret
push
je
loope
out
sbb
(bad)
out
mov
ss
inc
cmps
mov
add
cmp
pop
push
out
mov
cwde
aaa
imul
push
cmp
jne
jb
mov
and
xor
sbb
out
aaa
push
dec
loope
sub
jge
fwait
pushf
in
xchg
in
ins
push
ja
xlat
jns
hlt
mov
jno
int
xchg
sbb
(bad)
retf
nop
cmp
add
not
push
daa
mov
inc
sub
or
or
xor
xchg
int
fnstcw
pop
(bad)
mov
fwait
jae
lock
or
dec
mov
hlt
(bad)
sub
sub
mov
adc
sub
fld
inc
push
sub
adc
adc
sbb
jg
call
cwde
inc
cmc
ins
mov
(bad)
push
cmp
or
cmps
gs
xchg
mov
mov
add
movs
dec
scas
inc
fisub
sub
sub
fnstenv
cmp
pop
call
or
imul
aam
mov
ret
jge
mov
sbb
imul
shl
mov
and
mov
ja
cmp
fmul
xchg
mov
jbe
loop
mov
shl
inc
add
aaa
jmp
xchg
jge
js
test
adc
scas
sub
push
mov
(bad)
jb
mov
cdq
cmp
xor
int3
aas
out
out
cmc
pop
stos
xchg
test
call
jge
mov
jne
loop
adc
(bad)
sti
pop
inc
popa
inc
inc
mov
pop
jmp
adc
dec
sti
out
stos
adc
popa
not
les
adc
in
arpl
xor
(bad)
pop
cwde
push
les
out
or
or
jno
push
out
jno
and
or
push
adc
(bad)
sub
fmul
lods
cld
test
inc
ret
popf
and
mov
xchg
das
test
inc
fadd
or
jo
fsubr
xchg
jge
out
adc
and
cmp
mov
popa
adc
retf
inc
lock
icebp
sbb
enter
and
xor
sahf
loope
xchg
in
test
pop
sahf
repnz
xor
jge
shl
cmp
adc
cmps
sub
sar
shl
dec
sbb
push
inc
idiv
icebp
sub
sub
enter
test
in
sub
jae
inc
xor
or
sti
cmp
add
xor
lock
outs
outs
scas
or
mov
push
scas
lds
(bad)
shr
push
jne
xor
mov
int
add
cmp
add
lods
jns
(bad)
adc
in
shr
stc
scas
mov
repz
pop
xchg
outs
pop
sub
add
jno
movs
mov
jge
or
push
or
cdq
xor
push
test
nop
fs
inc
movs
lods
test
add
lock
jmp
jle
inc
mov
mov
jne
fdivp
pusha
out
mov
pop
cmps
inc
popf
and
das
fist
(bad)
arpl
ins
mov
xchg
cmp
stos
pop
inc
movs
dec
cdq
ja
int
(bad)
mov
pop
pop
retf
or
sub
and
(bad)
in
(bad)
iret
mov
sbb
js
sub
inc
jo
call
cmp
adc
cmp
jno
ds
mov
sub
mov
or
xor
movs
push
repnz
fwait
jb
mov
mov
xor
int
sbb
mov
add
mov
jnp
loope
data16
aas
out
inc
sub
and
inc
test
ins
fsubr
mov
add
sub
rcr
xor
ret
and
pop
mov
aas
mov
xchg
shr
mov
jl
lods
fcmovb
fistp
mov
sub
push
add
sub
cmp
(bad)
jle
sub
xchg
test
xchg
cmps
jae
lds
push
mov
leave
jmp
(bad)
push
dec
repnz
pop
stos
sub
mov
dec
mov
cmp
mov
pop
sbb
cwde
mov
add
jecxz
sub
sbb
aam
xor
outs
imul
stos
(bad)
es
or
pop
pop
ror
adc
push
retf
xchg
push
mov
xchg
add
ret
ss
int
sti
mov
sbb
pushf
mov
lock
shl
sub
cwde
mov
jp
idiv
add
jns
fidivr
std
imul
shl
idiv
mov
mov
mov
repnz
enter
sub
fisubr
test
(bad)
sbb
(bad)
xor
dec
sub
adc
imul
sub
pop
or
int3
cs
jmp
jg
mov
mov
aad
ret
test
add
sbb
out
jb
fs
push
mov
sub
jle
pop
(bad)
pop
xor
pop
mov
jno
les
add
mov
add
pop
aam
mov
das
clc
adc
arpl
xor
pop
jg
pop
jnp
jo
lahf
aaa
aas
je
adc
movs
push
test
xchg
jb
(bad)
int
sub
or
dec
xor
adc
dec
cmps
push
int
mov
inc
mov
cdq
cmc
shl
(bad)
(bad)
pop
adc
jg
ret
imul
jae
or
(bad)
mov
or
jp
xchg
inc
add
mov
mov
in
dec
lods
or
ret
ja
cmp
jmp
jle
inc
dec
sub
lods
pop
out
xchg
inc
ror
out
mov
stc
inc
(bad)
pop
inc
add
in
fldenv
cs
pusha
rcl
mov
jmp
mov
out
inc
jno
es
mov
jmp
(bad)
or
sub
inc
(bad)
xchg
lds
inc
sbb
std
fwait
inc
daa
xchg
push
jo
pop
call
inc
jmp
hlt
bound
aas
pop
cmp
and
sub
in
adc
ret
mov
test
hlt
jae
fsubr
fwait
pop
cmp
lock
xchg
in
popf
aaa
clc
cs
imul
inc
out
retf
mov
loopne
repnz
call
je
ret
mov
cmp
inc
mov
lods
push
push
rcr
mov
das
add
popf
ret
(bad)
mov
or
xchg
fidivr
jns
add
jne
imul
pushf
fcom
mov
adc
lock
jmp
and
mov
ss
inc
jno
xchg
pop
inc
out
jecxz
(bad)
jmp
sbb
neg
or
mov
xor
adc
mov
out
push
out
xchg
push
jp
fisttp
mov
call
rcl
cmp
repz
in
aaa
sbb
xlat
repnz
sbb
cmps
xchg
nop
rcl
sub
pop
bound
dec
mov
es
addr16
fldcw
mov
adc
cmp
aaa
in
xchg
xchg
mov
fimul
mov
mov
aad
ins
xor
mov
ins
fsub
and
and
enter
into
xor
ror
push
push
test
lahf
pop
sub
iret
test
sub
std
jge
ret
fsub
js
das
jb
inc
movs
or
stos
and
pop
dec
jecxz
xchg
lock
cmc
outs
ror
aaa
sub
pusha
imul
adc
xchg
pop
and
stos
dec
icebp
dec
(bad)
pop
sub
in
clc
cmp
mov
mov
push
jmp
inc
ret
dec
shr
retf
shl
jmp
(bad)
repz
jmp
fdiv
jo
inc
ins
mov
(bad)
add
or
jae
ins
mov
mov
scas
scas
sub
cmp
in
adc
scas
push
lahf
dec
mov
(bad)
jmp
push
jbe
pop
push
mov
jns
dec
cwde
push
add
add
rcl
neg
jb
xchg
cld
test
mov
pop
sub
or
stc
xor
push
xchg
sbb
imul
pop
cdq
pop
test
push
xchg
mov
(bad)
inc
sub
add
ficomp
xor
jmp
scas
mov
or
mov
neg
add
enter
ss
push
push
inc
cmp
inc
pop
(bad)
mov
js
cmp
lock
xchg
and
pushf
push
rcl
fimul
lods
imul
stc
cs
mov
add
fs
je
pusha
lock
jle
fstp
movs
xchg
mov
xchg
hlt
test
ret
call
not
mov
sbb
mov
mov
icebp
call
sbb
xchg
scas
fldenv
aad
mov
out
jge
outs
fisubr
ror
cmps
mov
dec
push
fbld
daa
fwait
push
bnd
int
push
push
(bad)
or
das
sbb
sbb
jne
push
push
sbb
push
movs
mov
mov
fidivr
hlt
mov
mov
out
sbb
add
(bad)
and
jbe
icebp
inc
dec
xor
xchg
mov
popa
sti
sub
sbb
and
mov
adc
adc
mov
sub
push
jp
jae
mov
aas
out
pushf
or
rcl
xchg
cli
jmp
pop
xor
and
xor
xlat
stos
out
mov
adc
add
aad
mov
in
mov
movs
les
adc
mov
inc
lock
mov
add
pop
inc
inc
aad
clc
jne
sub
cwde
cmp
push
mov
and
mov
jg
loop
adc
dec
xchg
inc
jnp
sbb
xor
dec
stos
test
inc
inc
add
add
push
and
outs
xor
inc
add
cmp
cmp
addr16
(bad)
data16
aaa
loopne
std
or
push
jmp
rcl
mov
mov
icebp
mov
hlt
push
mov
inc
mov
fadd
out
fcomp
mov
sbb
stos
retf
push
push
mov
rcl
(bad)
mov
push
lock
adc
xchg
xlat
inc
cld
jo
imul
ja
in
daa
and
push
loop
out
push
jecxz
repnz
add
jo
shl
icebp
sar
(bad)
int
ss
sub
gs
dec
or
sub
mov
inc
gs
xor
lods
cs
add
cmps
sbb
test
jnp
jbe
mov
addr16
sub
jmp
hlt
mov
popa
fldz
ins
sub
pop
movs
shl
ss
scas
xor
dec
inc
jg
ret
js
clc
mov
adc
mov
sub
retf
dec
adc
inc
fcom
mov
repz
add
mov
ja
mov
es
pop
enter
fwait
xor
sbb
push
movs
ret
xchg
mov
mov
mov
mov
fdivr
imul
and
jmp
shl
rol
(bad)
fld
cmp
call
or
and
nop
fcom
mov
seto
sahf
fist
dec
(bad)
push
xchg
in
pop
mov
aad
fsubr
ss
xsavec
idiv
or
cli
sub
mov
mov
push
or
pop
sbb
hlt
imul
test
push
adc
sub
in
cmps
repnz
pop
jle
dec
out
mov
push
aas
or
ud1
test
jno
adc
arpl
(bad)
fld
push
dec
add
mov
mov
ss
aaa
popf
stos
xor
pusha
movs
or
inc
bound
sub
out
or
inc
sti
scas
cmp
dec
xchg
fcomp
je
into
lahf
jbe
jns
dec
sub
inc
ror
(bad)
jb
push
stos
loop
adc
push
mov
xchg
fs
in
in
fldcw
stc
and
mov
shl
add
push
jno
dec
xchg
addr16
sbb
mov
int
jp
adc
fdiv
loope
sub
mov
clc
imul
jl
shl
inc
outs
jb
add
(bad)
ror
xor
pusha
pop
jecxz
mov
call
dec
push
in
push
jmp
sar
pminub
push
ja
cmp
mov
inc
fxch
cmp
or
ret
sub
jne
push
lahf
and
xchg
sbb
popf
jge
sub
nop
xor
ret
ret
xchg
rcr
cmp
sbb
scas
dec
mov
xchg
cs
cmp
rol
pop
sbb
and
mov
mov
cmps
mov
cmp
xor
mul
cwde
add
pop
shl
bound
cmp
fadd
cmp
dec
std
lea
loop
adc
xor
nop
cmp
adc
lds
out
aam
enter
xor
clc
(bad)
pop
push
shl
push
(bad)
out
inc
cdq
popf
pop
dec
dec
sbb
jmp
sub
push
in
sbb
popf
or
arpl
add
cmp
shr
or
mov
xchg
and
dec
adc
das
xchg
sbb
ss
imul
pop
leave
pop
jl
adc
adc
cmp
pop
test
or
je
jno
ds
stos
(bad)
pop
fmul
add
leave
(bad)
rcl
nop
jnp
das
dec
jns
cwde
iret
sbb
gs
push
dec
mov
mov
mov
pop
and
dec
outs
and
nop
(bad)
stc
add
ins
cmps
xor
pushf
jnp
jbe
jp
cwde
ret
iret
pop
push
jae
mov
fnstcw
in
push
push
jns
sub
loope
repz
inc
(bad)
sbb
test
jmp
dec
xor
push
sbb
and
(bad)
rcl
mov
imul
jmp
push
cmp
inc
iret
sbb
sar
push
jnp
push
fist
bound
repnz
(bad)
hlt
int3
adc
daa
add
and
inc
ins
and
jae
(bad)
mov
mov
push
fistp
dec
jae
jmp
or
test
cmp
mov
imul
inc
push
adc
or
arpl
mov
bound
jecxz
mov
cwde
pop
imul
cs
das
and
cmp
push
jp
retf
or
fistp
fdiv
(bad)
mov
mov
inc
das
pop
sbb
test
dec
out
mov
cmp
fisub
jbe
popf
outs
jg
lahf
push
xchg
inc
(bad)
daa
iret
icebp
xchg
pop
sbb
lahf
cmps
lds
pushf
jp
dec
psubsb
pop
sub
pop
minps
aad
fs
sbb
cwde
sbb
out
fs
adc
or
stos
and
ret
jp
out
push
ins
lock
mov
dec
jb
and
xchg
push
mov
(bad)
stos
lods
repz
jmp
inc
addr16
push
call
jmp
and
dec
shl
and
in
cli
les
add
(bad)
cmp
into
xchg
cli
sbb
pop
loope
mov
fadd
sbb
xor
inc
stc
and
push
repz
xchg
(bad)
dec
psrld
imul
pop
cmp
push
pop
mov
inc
popa
aam
outs
adc
dec
xchg
xor
pusha
push
cmp
sbb
add
push
popf
ret
xor
and
data16
(bad)
xor
jecxz
je
pop
test
xor
inc
test
mov
repz
inc
pop
jecxz
sbb
cmp
cmp
sti
test
fbld
mov
outs
xchg
imul
pop
lahf
add
repz
mov
pop
mov
xor
sbb
sub
pop
add
out
jle
fimul
mov
dec
in
mov
sti
mov
ins
push
mov
inc
push
sti
jno
inc
add
in
je
pop
pop
jne
jns
ds
mov
aam
retf
ins
outs
cdq
pusha
fadd
cwde
scas
fmul
jmp
mul
aam
pushf
xchg
cmp
vmovups
int
xor
pushf
addr16
adc
aas
lea
in
sub
mov
fucomp
popa
xor
popa
ret
inc
jns
fsubr
add
or
jmp
icebp
sahf
cmp
out
into
and
aas
das
gs
inc
leave
rol
fnstenv
pop
sub
cmp
xchg
cld
or
add
rcr
inc
or
(bad)
fsub
mov
(bad)
adc
sub
jae
mov
cmps
enter
stc
xchg
fst
xor
mov
mov
test
out
stos
(bad)
sbb
mov
lods
call
add
in
fucom
bound
test
in
cld
leave
repz
iret
aas
or
sbb
xor
lahf
push
repnz
imul
mov
mov
add
jle
sub
push
lods
fiadd
cmp
pop
cli
lahf
sti
aas
mov
dec
or
inc
push
mov
dec
jno
rcr
inc
inc
dec
test
push
mov
adc
adc
jne
jecxz
pop
adc
pushf
push
imul
lahf
pop
adc
nop
xchg
lods
inc
add
shl
(bad)
xlat
int3
out
aas
push
(bad)
imul
add
das
cli
inc
sbb
cmc
add
bound
xor
imul
xchg
dec
mov
mov
rol
jge
pop
mov
mov
test
xchg
sub
push
(bad)
mov
dec
test
mov
xor
xchg
xor
jle
(bad)
fwait
xor
jecxz
std
mov
cli
jno
(bad)
into
and
ret
addr16
frstor
data16
movs
out
push
pop
and
popa
pop
ret
out
adc
jnp
mov
or
jae
enter
adc
test
cs
retf
in
hlt
test
lds
push
lods
inc
inc
(bad)
loope
imul
aam
xchg
int3
xchg
push
lods
stc
bound
xor
and
test
daa
mov
loope
mov
push
sub
mov
and
push
mov
mov
pop
inc
mov
outs
(bad)
xor
xor
push
ins
xchg
or
les
sbb
call
sub
aad
and
push
sub
mov
xor
xor
ret
das
test
movs
sar
push
push
push
loopne
stos
stc
fst
mov
xchg
test
pushf
xlat
push
pop
aaa
adc
iret
sbb
cmps
inc
les
ins
(bad)
jecxz
mov
scas
mov
dec
sbb
bound
push
rol
mov
mov
bound
es
add
inc
inc
and
mov
jno
adc
aas
pusha
out
je
(bad)
xlat
ret
mov
adc
cmp
retf
xor
test
aaa
xchg
nop
mov
and
mov
jge
push
repz
shl
dec
stc
out
in
ror
sbb
jae
fmul
jmp
push
std
adc
mov
scas
mov
push
jge
fucom
mov
jne
shl
xchg
fldcw
fmul
in
jae
movs
push
sub
outs
scas
xchg
and
jle
sub
call
jnp
jmp
sbb
(bad)
xchg
int
not
ins
jns
pop
adc
adc
in
dec
gs
jnp
arpl
dec
push
jbe
xchg
pop
mov
and
sbb
stos
inc
adc
shr
popf
dec
xlat
int
inc
pop
ja
xor
std
cli
ds
sbb
gs
cmp
cmc
repnz
sub
cld
cmp
pop
cmp
dec
cmp
xchg
daa
int
fcmovnb
lods
bnd
inc
sub
or
addr16
sbb
sub
ss
pop
or
es
sub
sub
mov
adc
adc
mov
fst
ins
push
fisttp
fwait
loope
dec
push
sar
pop
mov
cmp
fiadd
or
dec
jecxz
ins
aam
and
loop
pop
adc
int
bound
cmp
xlat
jl
movaps
retf
mov
add
repnz
cmc
xchg
dec
cmp
xchg
sbb
push
outs
push
(bad)
mov
xchg
add
jp
push
js
je
test
bound
sbb
pop
bound
stos
cmp
inc
jecxz
push
dec
push
add
adc
xchg
xor
imul
xchg
shl
push
pop
sub
mov
lock
mov
ret
or
stc
jo
movs
mov
test
sub
sbb
and
hlt
imul
mov
mov
lods
cmps
test
jns
pop
fimul
lods
pop
xchg
pushf
push
mov
mov
les
pop
test
dec
mov
sub
mov
and
or
push
pusha
or
popf
pop
inc
xor
sub
sar
fisubr
mov
dec
in
inc
mov
pop
xchg
or
add
mov
stos
inc
cmps
or
add
repnz
pop
jno
das
cmc
sbb
xor
jae
pop
test
test
dec
dec
sbb
cld
xchg
outs
jbe
clc
jae
into
jge
repz
push
mov
fmulp
adc
dec
out
cmp
repnz
imul
leave
mov
imul
aad
idiv
cmps
(bad)
fadd
push
pop
adc
or
adc
retf
mov
xor
sbb
xor
cmps
fsubr
jns
popa
jne
jmp
or
mov
les
test
lea
cmp
xchg
out
int3
push
js
sbb
cmp
pop
mov
sti
pop
add
sub
cmp
mov
cmp
sub
cld
mov
lods
fld
xchg
push
icebp
push
out
sub
ins
jae
push
pop
cli
adc
adc
sbb
dec
jns
das
hlt
jnp
push
outs
pop
jo
push
(bad)
dec
ja
call
dec
xchg
and
retf
in
jno
add
loop
aas
jg
xchg
leave
mov
sbb
or
xchg
cmp
push
or
add
jnp
jno
mov
fadd
lock
fsub
(bad)
inc
imul
sbb
pushf
sbb
jbe
aaa
fisttp
mov
fs
sub
stos
inc
aaa
xchg
add
jg
mov
or
(bad)
movs
into
inc
xlat
xor
jle
jno
and
lock
test
lds
jb
add
inc
sbb
jae
movs
jbe
data16
ror
stos
test
cmc
mov
(bad)
pop
leave
jo
in
mov
sub
je
imul
aad
aam
(bad)
clc
jle
test
push
xchg
out
jmp
test
sub
cmp
leave
cmp
xor
cmps
jnp
xor
and
sti
shr
icebp
cwde
mov
and
out
adc
not
pop
cs
loop
sub
mov
pop
retf
outs
or
xchg
cld
repnz
shl
pop
(bad)
test
std
lods
xchg
cmp
xor
pop
addr16
fsub
mov
stc
iret
dec
mov
hlt
inc
and
sbb
cmp
jecxz
or
cmp
jno
rcr
cs
xor
test
mov
enter
or
popa
push
and
out
lods
and
in
pop
outs
inc
aam
lds
or
pop
inc
pop
into
(bad)
mov
sahf
dec
adc
lock
icebp
outs
(bad)
(bad)
aad
nop
outs
add
cmp
aam
jno
stc
mov
add
outs
nop
(bad)
mov
push
sbb
(bad)
sbb
cmp
jb
ds
int
out
mov
mov
or
cmps
cmp
push
pop
or
(bad)
or
adc
nop
inc
popf
dec
jb
pop
dec
sahf
jg
push
call
dec
loope
retf
mov
mov
xor
sti
pop
mov
dec
(bad)
cwde
dec
xor
sub
pop
pop
mov
je
cmc
mov
stc
cld
mov
fistp
lahf
in
cld
inc
cmp
push
push
shr
dec
sub
push
dec
daa
or
xchg
(bad)
xor
push
mov
(bad)
jmp
inc
repnz
scas
or
cmp
aad
jge
sub
pop
arpl
lds
pop
or
cmp
cmps
or
inc
and
daa
call
ror
xchg
mov
xchg
lods
jl
xor
adc
push
xor
stos
add
inc
imul
pop
cmp
call
scas
and
mul
in
mov
adc
pop
jecxz
mov
xor
xchg
in
push
mov
fdiv
mov
fistp
cmp
mov
jmp
cmp
adc
sbb
push
retf
inc
push
push
repnz
in
ror
popa
add
cmps
je
xlat
mov
shl
pop
inc
cmp
sbb
dec
xchg
xor
dec
int3
mov
push
xchg
push
dec
xchg
aaa
icebp
xchg
and
xchg
or
leave
or
cmp
in
bound
or
pop
ds
shl
jo
cdq
xchg
push
je
fxch
cmp
shl
sub
or
outs
push
in
xor
jl
dec
mov
add
mov
test
sbb
mov
add
xchg
jl
loope
xor
std
cmp
push
mov
ret
adc
aad
lods
gs
cld
aad
cmp
xchg
ds
clc
mov
mov
daa
pop
sbb
sub
push
mov
sti
xor
stos
adc
inc
jne
push
mov
jnp
inc
cmc
push
aam
ret
pop
fwait
mov
pusha
and
mov
fstp
mov
adc
or
movs
ja
dec
cmp
pop
fnstsw
hlt
add
pop
pop
pop
and
sub
ficomp
mov
sbb
ja
and
imul
fdivr
and
push
sub
int
push
ret
jno
add
(bad)
sub
or
stc
jle
add
mov
adc
js
xlat
clc
and
pop
retf
stc
dec
in
push
lods
xor
je
shl
push
sti
jmp
and
dec
pop
inc
int
inc
mov
leave
cs
push
mov
aad
jbe
in
ins
stc
es
push
jne
mov
dec
cmp
inc
adc
int3
push
push
in
mov
or
jmp
movs
xchg
push
add
loopne
fmul
sub
in
(bad)
leave
mov
leave
and
nop
pusha
int
(bad)
or
stos
inc
in
(bad)
in
pop
or
sub
mov
sahf
or
push
cdq
mov
push
pop
sti
fcom
pop
xchg
in
fstp
jmp
sahf
stos
pusha
pop
mov
dec
in
mov
xchg
imul
aas
ins
arpl
inc
inc
fisub
fucomi
dec
mov
mov
push
jns
sub
je
dec
aam
sub
xlat
mov
imul
je
out
adc
inc
gs
xor
xchg
adc
mov
out
add
inc
inc
loope
dec
ror
leave
jne
adc
add
mov
(bad)
and
dec
and
pop
popf
aaa
outs
jle
mov
inc
push
(bad)
scas
fcmovb
cmp
cmc
add
jns
jnp
(bad)
shr
nop
adc
or
call
push
dec
hlt
and
bound
add
lahf
movs
bound
adc
sub
int
xor
inc
xor
cmps
popa
mov
mov
sub
and
mov
sar
push
lods
lock
(bad)
xchg
loopne
sub
sub
jge
mov
lea
pop
push
loopne
test
mov
in
cwde
sub
mov
lods
push
push
leave
and
jmp
mov
jb
ss
mov
js
cdq
add
and
mov
push
push
in
fld
xor
jns
push
(bad)
dec
aad
lea
in
cmps
inc
imul
inc
(bad)
push
inc
xchg
xor
jg
das
pop
movs
cwde
in
cwde
or
(bad)
ficom
int
xor
loop
arpl
in
push
push
daa
cmps
out
pop
aaa
scas
pop
ins
or
xchg
inc
out
mov
and
(bad)
in
dec
pop
inc
add
adc
fist
ficomp
test
pop
sahf
stc
and
test
inc
js
add
pop
pop
add
repz
out
adc
inc
add
and
jo
fnstcw
sub
push
jp
and
in
lods
(bad)
(bad)
adc
(bad)
lods
mov
scas
push
mov
sub
push
mov
and
fmul
sbb
mov
and
cmp
stc
ins
adc
xchg
loop
jmp
fcmovnbe
adc
push
inc
std
sub
dec
mov
add
retf
iret
in
je
push
fcom
cmp
fdivr
psubusw
push
movs
gs
popf
rcr
xor
in
mov
(bad)
and
fsubr
xor
(bad)
test
loope
push
push
neg
out
sub
xchg
lods
add
xchg
ror
push
pop
retf
add
mov
repz
es
aam
and
in
xor
into
inc
(bad)
adc
jnp
(bad)
gs
addr16
mov
jne
mov
(bad)
jge
addr16
fsub
xchg
jb
mov
lock
shl
push
(bad)
mov
in
adc
fwait
and
outs
xchg
add
je
dec
sti
shr
imul
sub
mov
mov
inc
jne
test
add
repz
mov
mov
cld
fucom
lods
and
dec
mov
dec
into
jae
adc
jo
add
jne
loopne
in
aas
or
sub
imul
callw
add
add
retf
retf
call
icebp
jmp
dec
jo
add
scas
push
repz
dec
jge
inc
lds
jb
mov
dec
xor
mov
or
inc
mov
sbb
cmp
int3
cmp
xchg
in
not
mov
stc
xchg
ret
mov
(bad)
jo
fs
scas
dec
or
(bad)
clc
les
outs
xchg
mov
xchg
stos
add
dec
xor
add
xlat
cmc
nop
xor
icebp
imul
and
mov
imul
movs
aaa
aaa
mov
jl
and
xchg
(bad)
in
push
jnp
bound
jmp
ins
dec
and
jmp
daa
fiadd
test
aaa
adc
mov
test
xor
movups
and
dec
shl
dec
mov
mov
mov
ror
xchg
aaa
jmp
cli
stc
das
cmc
xchg
lods
sub
mov
dec
inc
repnz
pop
ins
leave
mov
retf
pop
lods
jnp
fild
mov
shr
lods
jmp
nop
(bad)
jg
push
push
sub
mov
int3
cdq
xchg
inc
test
push
in
adc
ror
inc
movs
mov
jno
loope
sub
pushf
push
mov
je
mov
ret
xor
neg
test
lods
rcl
(bad)
in
ins
pusha
cmp
cmp
push
cmp
cmc
xor
xor
jnp
jno
inc
call
std
xchg
test
imul
pushf
mov
jecxz
ret
(bad)
frstor
arpl
sub
ret
or
call
scas
(bad)
sar
mov
dec
push
sub
dec
out
lahf
inc
dec
adc
jmp
out
movs
inc
adc
ret
cmp
(bad)
repnz
inc
and
jo
call
mov
pop
sub
adc
cdq
mov
dec
cmp
mov
(bad)
imul
mov
mov
pushf
jg
shl
mov
pop
outs
outs
push
jno
icebp
cdq
jmp
and
push
sbb
push
je
out
jmp
test
(bad)
inc
jmp
sbb
call
and
jle
mov
xchg
inc
push
std
adc
xchg
xor
mov
push
shl
mov
int
add
or
hlt
pusha
addr16
xor
pop
jl
mov
stos
scas
jo
cld
add
sbb
push
test
mov
sbb
xchg
xchg
not
aas
dec
cs
push
push
sub
mov
xchg
scas
test
mov
mov
pop
adc
stos
add
or
jo
mov
add
pushf
rcl
fmul
cli
add
mov
repz
xchg
push
popf
mov
pop
add
loop
sbb
xor
xor
or
es
cmp
or
(bad)
scas
(bad)
fiadd
pxor
and
dec
loop
lea
push
movs
xor
xchg
mov
gs
sti
rcr
jecxz
scas
(bad)
test
dec
cmp
ror
sub
enter
cld
mov
mov
cwde
push
addr16
and
push
pop
pop
icebp
or
mov
lea
(bad)
mov
pop
(bad)
stos
bound
mov
push
jmp
sbb
clc
or
pop
sahf
push
call
nop
add
mov
je
mov
lahf
out
pop
mov
push
pop
cmp
sub
dec
push
sub
sbb
mov
inc
jnp
repz
jmp
call
test
lea
cmp
movs
xchg
repz
das
ror
lods
inc
sbb
push
ret
jns
ds
inc
sar
or
dec
xchg
mov
and
imul
adc
xchg
movs
ret
loope
test
call
test
out
lods
inc
(bad)
nop
iret
call
inc
es
aaa
scas
test
lods
(bad)
xchg
cli
loopne
iret
cmc
in
xlat
rcl
outs
loop
lock
jge
pop
jns
cmp
arpl
inc
sahf
xor
mov
out
pop
sub
jecxz
repnz
fadd
daa
push
sti
push
and
mov
das
or
dec
rcr
sub
aam
popf
cmp
inc
jb
push
hlt
outs
idiv
jl
fnsave
pop
or
retf
pop
hlt
jmp
ret
inc
cld
pop
adc
enter
xor
cmps
pop
lea
fisttp
xchg
adc
push
pop
xor
(bad)
dec
jmp
xor
xchg
xor
outs
mov
movs
rcl
(bad)
(bad)
mov
test
retf
pop
sub
mov
call
and
stos
adc
xor
dec
dec
stos
mov
cmp
popa
pop
sub
test
shl
fnsave
gs
add
pop
xor
xchg
repz
push
and
call
ins
push
inc
sub
rol
mov
arpl
adc
mov
pusha
shr
retf
in
jp
rcr
cmc
aam
stos
inc
xchg
dec
add
sub
cmp
push
sub
jge
sbb
std
push
int3
or
adc
dec
sub
inc
jle
dec
or
cwde
rcr
sar
sbb
cs
dec
sbb
and
mov
sbb
jl
xchg
xor
stos
fwait
sbb
jne
repz
xor
loopne
and
or
inc
push
shl
sbb
mov
call
adc
sbb
movs
jno
sub
sbb
ret
stos
cdq
jge
(bad)
(bad)
in
xor
(bad)
jb
cmc
jmp
ja
pop
ficomp
push
mov
fadd
cmps
in
mov
cdq
lods
aam
daa
rol
xchg
enter
jmp
push
data16
xor
(bad)
xchg
dec
gs
aad
inc
es
(bad)
and
outs
mov
push
mov
mov
inc
ins
jno
fs
movs
pop
mov
idiv
loop
mov
mov
sbb
in
xor
(bad)
das
aad
sub
cwde
lods
(bad)
pmaxub
push
xlat
pop
mov
popa
out
inc
jne
ss
in
push
or
dec
pop
xor
ret
sti
lock
std
add
adc
lock
(bad)
icebp
loope
mov
jg
jle
push
jecxz
or
in
in
cmp
mov
rcr
push
cli
les
mov
mov
ret
mov
movs
and
and
sbb
pop
mov
test
xchg
adc
push
popf
rol
stos
(bad)
iret
jae
jge
imul
sub
lods
mov
pop
pop
xor
js
in
adc
ror
pop
inc
out
adc
shl
xchg
inc
stos
push
mov
in
repz
push
mov
fisub
stos
fidivr
add
int
sbb
xchg
into
adc
sti
dec
mov
dec
ins
xchg
push
inc
nop
sub
dec
ss
mov
mov
add
ss
movs
inc
push
in
ret
fiadd
mov
jo
sbb
mov
jg
das
(bad)
mov
pop
mov
xor
(bad)
daa
xchg
cdq
imul
sahf
mov
mov
sub
(bad)
mov
scas
lahf
scas
inc
mov
push
ja
cmps
loope
cli
push
jo
jp
imul
xchg
lea
and
scas
xor
cmp
mov
push
jns
pop
cli
daa
xchg
retf
xor
inc
dec
pop
lock
scas
push
call
fcom
cmps
or
mov
fidiv
add
call
sbb
les
test
mov
sahf
inc
jbe
repnz
mov
aam
in
enter
and
xor
imul
rcl
push
lock
js
lods
jmp
cmps
inc
icebp
clc
jno
mov
push
or
aad
mov
scas
outs
(bad)
fstp
xchg
hlt
mov
call
lods
dec
sbb
scas
push
pushf
ins
fisubr
fwait
jl
mov
in
inc
inc
adc
and
imul
xor
mov
jns
xchg
cmp
sub
in
push
add
mov
(bad)
call
popf
mov
pop
jns
loop
pop
adc
daa
test
jne
xor
loope
loop
std
mov
pop
cwde
mov
or
leave
enter
add
xchg
lahf
stc
pop
aas
fldcw
loop
enter
add
mul
loope
(bad)
sub
add
nop
or
aaa
dec
adc
je
jbe
hlt
cmps
jne
jnp
pop
lea
inc
data16
adc
sbb
inc
jle
fisub
ss
mov
and
loopne
fdiv
fisubr
mov
pushf
sbb
imul
add
pushf
push
and
and
jp
push
sahf
pop
retf
add
clc
mov
mov
pop
dec
popa
sub
out
das
mov
push
loop
mov
or
dec
xor
iret
jmp
xchg
pop
(bad)
cli
outs
sub
out
pusha
lock
stos
sub
sbb
retf
add
mov
in
fild
retf
lock
xor
bound
out
rcl
lock
xchg
adc
lahf
and
pop
test
scas
pop
jns
and
xchg
sar
push
sub
pop
outs
std
call
in
lahf
sbb
mov
and
jmp
fimul
cmc
loope
loope
sub
or
test
pushf
lods
add
jo
retf
push
pop
adc
(bad)
rol
push
(bad)
push
jmp
iret
adc
jo
nop
sti
sahf
jmp
rol
sub
or
jae
add
mov
xchg
std
push
pushf
pop
mov
outs
xor
fisubr
outs
rcl
stc
mov
or
aam
add
dec
dec
dec
enter
adc
test
xchg
(bad)
popf
das
dec
cmp
and
jp
jmp
cs
xchg
inc
mov
sub
cmp
mov
stc
(bad)
mov
jp
add
adc
adc
or
jnp
and
iret
sbb
js
fistp
test
imul
out
mov
xchg
cmp
cli
or
rcr
sub
pop
pop
or
shr
mov
push
cmovp
jg
fidivr
jmp
mov
fmul
and
(bad)
icebp
iret
dec
out
lods
enter
gs
lock
iret
(bad)
adc
mov
pop
push
inc
pop
push
mov
mov
mov
mov
sub
add
rcr
push
inc
push
data16
dec
push
inc
cmp
mov
adc
and
stos
movs
sub
add
lods
test
push
fld
shr
xchg
add
jmp
add
jmp
cmp
test
and
rcl
sub
ret
adc
lds
dec
hlt
xchg
adc
cdq
in
xor
pop
fcom
fst
adc
sbb
and
hlt
dec
push
je
jmp
sub
push
adc
test
jns
and
gs
das
shl
lock
dec
mov
ret
jl
mov
sbb
rcr
(bad)
aad
ss
add
dec
sti
nop
shr
arpl
popa
mov
push
and
loop
(bad)
pop
loop
add
outs
mov
adc
out
imul
or
sub
fadd
div
(bad)
mov
in
push
scas
addr16
xchg
mov
jb
mov
and
mov
sbb
xor
mov
ds
push
sar
or
xchg
int3
dec
add
movs
test
jmp
lds
jg
test
imul
popf
fbld
adc
cwde
xor
sub
mov
in
or
xor
push
push
and
pop
sar
add
xor
into
or
(bad)
xor
(bad)
rol
popf
mov
sar
js
adc
fld
mov
aas
push
ret
jns
retf
cmp
push
add
xor
jnp
push
cmps
enter
sub
outs
adc
xchg
lea
lea
ror
mov
inc
test
dec
test
mov
call
sbb
lock
movs
sbb
inc
cli
xchg
or
or
add
xor
adc
outs
imul
add
mov
jecxz
mov
aas
mov
mov
and
pop
cmp
xchg
mov
ret
fmulp
and
dec
stc
jnp
mul
leave
pop
mov
daa
test
stc
or
add
cs
pop
mov
add
inc
aaa
sbb
int
cmp
aam
idiv
movs
adc
stos
movs
jnp
ret
xlat
jl
adc
ret
fimul
pop
xchg
cld
inc
sbb
sbb
popf
ffreep
sub
push
add
cmp
xor
push
ror
dec
or
imul
jp
in
(bad)
icebp
cwde
scas
arpl
cwde
cs
inc
and
xor
mov
xchg
pop
or
mov
add
jnp
daa
jmp
rol
ficom
mov
adc
stos
retf
push
fwait
jg
ss
fstp
lods
es
push
and
jle
dec
ret
cwde
xor
ret
mov
test
shl
dec
aam
pop
pop
sbb
iret
arpl
shr
mov
jb
cmc
aas
sub
sub
add
xlat
mov
sub
les
add
add
ins
call
push
cmps
and
clc
outs
scas
and
out
push
pushf
adc
fidivr
pop
sub
sbb
lods
mov
cmp
out
inc
imul
mov
pop
ds
mov
cli
sub
or
mov
add
inc
pop
mov
dec
mov
(bad)
stc
repnz
mov
repnz
int
push
dec
xor
sub
sti
inc
repz
ror
test
je
dec
cmp
lds
test
sbb
mul
jb
int3
scas
xor
mov
push
(bad)
aad
sbb
xor
inc
rcr
dec
cmc
mov
mov
lods
mov
daa
and
jp
sbb
ins
ss
cmc
and
ret
mov
jb
in
xchg
fdiv
push
add
mov
and
pop
or
sub
fcomip
andnps
inc
mov
jl
fisub
popa
fwait
sub
add
mov
mov
enter
test
jp
lods
mov
xor
ror
dec
ins
iret
stos
cwde
les
dec
push
pop
retf
mov
push
call
nop
ja
jo
test
or
cli
ror
xor
sahf
xchg
(bad)
addr16
mov
inc
out
mov
in
mov
lock
xchg
dec
push
vsqrtpd
xchg
frstor
inc
test
inc
adc
scas
ret
mov
cmp
dec
int
fs
scas
daa
mov
scas
add
add
jae
cmc
mov
rcr
ficom
daa
dec
jne
stos
jge
pop
popf
(bad)
nop
mov
test
lds
fucomip
xchg
cmc
mov
mov
jg
dec
push
(bad)
daa
jns
out
cmp
jmp
sub
in
das
movs
test
add
xor
(bad)
stc
pop
lock
and
mov
test
out
lea
fst
call
mov
icebp
jp
mov
adc
data16
pop
js
and
mov
sub
int3
(bad)
js
lea
scas
fidivr
arpl
fstp
xchg
sub
sbb
leave
out
loopne
sbb
imul
rcl
ja
dec
xchg
movs
mov
call
cdq
mov
cmp
jno
sbb
div
std
outs
ret
ss
call
mov
add
mov
mov
cmps
xor
push
inc
arpl
in
in
jle
adc
sbb
scas
lods
mov
out
cmc
popf
add
pop
in
sti
in
fistp
mov
add
mov
mov
ds
cmp
imul
fs
pop
pop
retf
stos
push
bound
out
cmp
or
or
imul
movs
js
mov
or
adc
sbb
inc
xchg
aas
pop
aas
dec
sbb
jl
popf
ret
push
pop
xchg
xchg
push
jl
pop
jmp
test
push
xchg
call
rol
mov
bound
cmp
shl
pusha
cmc
dec
push
xchg
push
mov
fld
push
fisub
je
pop
push
out
mov
dec
sti
adc
dec
test
cmc
popf
lahf
jb
rcl
push
or
scas
fs
ror
mov
cmp
and
cmps
out
fist
es
dec
mov
std
in
call
stc
pop
sbb
xor
sub
outs
js
adc
cmp
nop
popa
pusha
cmc
inc
aaa
test
popa
popf
mov
das
or
imul
adc
jae
mov
lock
xor
icebp
fild
sub
jb
shl
push
mov
push
out
xor
stos
es
pop
mov
adc
sbb
adc
les
push
call
xchg
in
mov
test
xor
(bad)
xchg
mov
test
cmp
jbe
cld
(bad)
jmp
arpl
push
xchg
(bad)
jmp
(bad)
gs
inc
in
xor
sub
inc
mov
xor
dec
shl
sub
jne
lahf
arpl
popf
fild
mov
ror
inc
or
shl
popa
dec
xlat
inc
loopne
jae
jge
(bad)
cwde
xor
add
jno
clc
xor
inc
in
ret
into
sbb
(bad)
adc
enter
pop
xor
in
and
pop
jmp
out
retf
(bad)
out
cdq
mov
mov
sub
(bad)
inc
lds
push
sub
lea
sbb
inc
pop
xor
jle
mov
dec
mov
stc
mov
dec
xchg
int3
dec
test
push
push
aas
xor
(bad)
or
shl
xlat
pushf
pop
ret
scas
jle
dec
scas
push
icebp
pop
or
push
enter
out
dec
jg
mov
leave
fisub
adc
ss
out
aas
add
mov
js
outs
jmp
mov
dec
gs
cmc
and
push
mov
pop
inc
add
or
dec
dec
je
dec
lods
das
lods
jb
inc
jg
les
mov
xchg
aaa
sbb
cdq
cwde
inc
jb
pop
or
push
mov
push
psubb
sbb
aad
xchg
mov
scas
and
pop
or
cld
into
out
loopne
out
push
ret
(bad)
retf
jmp
sub
adc
cdq
xor
inc
data16
mov
push
int3
stos
pop
jp
popf
add
xchg
inc
jge
mov
inc
sbb
mov
sbb
mov
adc
inc
arpl
into
push
cld
push
mov
inc
push
or
sbb
mov
pop
std
scas
aas
mov
pusha
mov
aam
ins
xor
or
stos
mov
cmp
jge
cmc
mov
in
test
test
popf
mov
jb
jmp
test
mov
bound
ins
movs
inc
loope
ins
retf
test
out
shl
je
int3
cmp
lea
push
and
mov
test
lods
enter
movs
jge
loope
lods
or
stc
leave
test
adc
add
jbe
ja
cmps
shr
mov
cmc
icebp
jo
retf
les
neg
inc
jp
mov
push
enter
cmps
pop
in
push
stos
ret
lock
sbb
push
and
retf
call
(bad)
(bad)
xchg
xor
popa
jns
jg
xchg
jb
mov
mov
(bad)
mov
cmc
adc
hlt
and
push
mov
or
mov
dec
add
push
lahf
add
xchg
cmp
jmp
dec
rdmsr
pop
scas
rcr
je
les
adc
stos
(bad)
dec
je
add
popa
mov
movs
jp
xchg
push
sbb
xchg
rcl
cmp
push
je
int3
xchg
repnz
imul
stos
(bad)
adc
into
cld
scas
jbe
and
(bad)
sub
sub
push
xor
lahf
mov
mov
or
mov
mov
jmp
and
add
inc
dec
and
mov
mov
pop
push
ss
sub
mov
xchg
and
pop
mov
and
xlat
inc
xchg
aam
stc
xlat
popa
test
mov
test
sub
cmp
cwde
adc
ret
pop
dec
push
loopne
inc
imul
cdq
shr
pop
stos
mov
ss
and
add
sbb
das
adc
clc
outs
cdq
sti
adc
(bad)
fidiv
push
rcr
mov
inc
dec
mov
adc
scas
sbb
jae
neg
repz
outs
call
ficomp
mov
(bad)
(bad)
cli
stc
in
sub
adc
cmp
jmp
das
das
repnz
jo
and
sub
(bad)
out
out
cmp
mov
push
call
dec
jo
cmps
loop
jmp
(bad)
jl
test
lods
inc
leave
xchg
loop
fist
addr16
cmp
leave
popf
cmp
gs
in
adc
adc
mov
test
xchg
imul
aad
pushf
idiv
ret
fldenv
aad
xchg
dec
inc
and
retf
std
mov
test
dec
pusha
add
cmps
push
gs
cmps
jnp
fs
test
sub
lods
and
mov
mov
adc
jmp
out
add
mov
add
mov
gs
call
push
hlt
shl
mov
imul
push
xchg
sar
mov
cmp
xchg
sbb
inc
xchg
xor
les
sbb
sub
inc
je
dec
lock
push
mov
mov
pop
adc
mov
imul
je
data16
or
stc
loop
jge
retf
or
sbb
adc
mov
aas
dec
xchg
fisub
dec
test
pop
sbb
fisub
mov
mov
mov
push
cmp
push
mov
and
and
icebp
(bad)
dec
cli
push
aas
cmc
into
pop
je
fwait
imul
test
das
fyl2x
int
pop
pop
push
add
rol
lods
pop
jle
retf
test
scas
retf
cs
pop
push
mov
xchg
mov
cdq
stos
xchg
sub
or
sbb
cs
lahf
out
movs
out
addr16
cli
pop
ds
inc
ds
sbb
or
xchg
add
push
scas
rcl
repnz
icebp
pop
movs
ficomp
cdq
mov
mov
xor
(bad)
in
pop
stos
fsubr
sub
dec
push
dec
mov
adc
in
fiadd
sbb
mov
and
push
iret
ja
scas
pop
mov
dec
cwde
stos
jl
into
or
test
mov
jb
inc
aad
aas
push
xor
push
cmc
loopne
xchg
dec
cmp
add
(bad)
ret
loopne
pop
lods
or
test
adc
xor
iret
adc
xor
test
dec
out
sbb
rcr
inc
sub
mov
movs
pop
dec
and
mov
in
js
and
retf
popf
xchg
jge
ret
pop
add
aad
sbb
mov
in
mov
cmp
ins
jg
push
mov
add
add
jno
dec
repz
add
in
push
out
or
ds
stos
cli
lock
xor
inc
mov
call
push
pop
clc
jmp
mov
mov
cmp
adc
retf
es
out
xchg
jg
cmp
cs
xchg
loop
xchg
fstp
mov
sahf
stos
dec
std
test
into
inc
cmp
or
mov
inc
out
push
mov
inc
sbb
in
cmps
inc
and
xor
mov
in
sub
sbb
shr
add
pop
inc
inc
(bad)
mov
inc
das
out
or
sub
push
sbb
or
std
frstor
jo
adc
xchg
loop
fild
dec
test
cld
retf
xchg
les
call
inc
loopne
xchg
retf
jl
and
push
xchg
inc
xchg
xor
rcl
adc
cmp
or
push
arpl
push
dec
cmps
adc
lds
icebp
mov
ret
jo
(bad)
cmp
daa
push
sti
fst
dec
out
and
jmp
pop
pop
popf
je
xor
xor
lock
pop
cld
jae
cmc
jle
push
add
fisttp
mov
adc
inc
jmp
enter
add
xchg
push
jmp
les
data16
aas
(bad)
in
sub
cmps
adc
sub
clc
pop
jo
and
mov
and
inc
xor
mov
jge
loope
mov
lods
outs
stc
leave
jle
mov
cmp
fsubr
mov
and
fdivr
push
jb
mov
out
add
dec
and
push
les
adc
xor
or
sub
sbb
pushf
popa
push
mov
xlat
xchg
repnz
js
scas
sahf
int
pusha
or
jmp
ja
sub
jge
pusha
mov
lahf
outs
mov
mov
sbb
or
cmps
xchg
es
cmp
xlat
push
retf
xor
inc
fcomp
cmp
int
js
xor
sahf
push
and
xor
mov
cmps
or
fistp
cmp
sbb
fwait
jmp
xlat
mov
imul
jp
data16
jo
add
or
hlt
mov
(bad)
aad
pop
sub
fcom
mov
sbb
mov
dec
rcl
sbb
push
retf
dec
int3
loope
mov
pop
and
out
loope
fdiv
mov
cmp
xchg
in
cs
pop
xchg
outs
sar
mov
mov
adc
xchg
imul
push
cld
in
sbb
ja
push
sbb
add
or
mov
cwde
cdq
adc
stos
mov
mov
xchg
(bad)
dec
js
cmps
xchg
jne
(bad)
test
cmp
shl
sub
lock
xlat
cmp
retf
call
sar
pop
sub
and
xchg
(bad)
ret
mov
add
and
or
xchg
sub
retf
jb
mov
pop
jno
or
sub
pop
addr16
or
ja
sti
aad
imul
sub
push
gs
lock
fadd
sahf
and
and
pop
sbb
pop
es
inc
push
cmp
jns
fmulp
mov
std
loopne
mov
pop
in
(bad)
cwde
mov
inc
rcl
ret
movs
aas
gs
fnstsw
sub
jecxz
call
cs
jno
xchg
xor
xchg
mov
pop
xor
addr16
push
push
xor
sar
popa
mov
or
or
mov
mov
cmp
pop
pop
movs
pop
adc
ficomp
cmp
test
cwde
out
cmps
jl
in
push
cmc
cmps
mov
cmp
lods
dec
sbb
shl
inc
inc
inc
xor
cmp
cmp
sbb
in
mov
fstp
jge
mov
mov
mov
call
gs
push
xchg
cdq
push
and
inc
jmp
jle
test
std
mov
xchg
mov
es
or
mov
mov
test
pop
xor
test
mov
ror
out
xlat
mov
add
inc
or
fsubr
mov
push
test
jbe
fcom
pop
dec
lods
inc
(bad)
xor
cwde
rcr
mov
vpcmpgtw
add
sub
xchg
data16
icebp
nop
dec
mov
jno
les
pushf
sbb
cmp
les
or
cmc
xchg
mov
loopne
movs
jb
xchg
daa
pop
push
stos
(bad)
pop
dec
repnz
jmp
mov
es
stc
xlat
dec
fbld
xchg
ret
push
test
call
cmp
inc
jge
pop
and
and
push
push
cs
adc
jl
(bad)
cs
ror
dec
(bad)
sub
sbb
movs
clc
std
pop
xchg
mov
jns
nop
inc
stos
xor
jl
sub
sbb
cmps
pushf
ja
cmp
icebp
add
or
mov
test
push
lods
fdivp
or
jbe
dec
pop
fucomi
lea
(bad)
adc
sbb
pop
enter
or
sub
test
lods
jae
call
mov
inc
xor
cmps
ins
cmp
je
js
push
shr
mov
and
in
add
jnp
test
sbb
or
pop
ds
(bad)
test
sti
jp
pop
pop
jle
jne
cmp
loopne
adc
mov
xor
(bad)
push
clc
mov
aas
pusha
jb
bound
mov
mov
cmps
mov
mov
lock
arpl
imul
jne
pusha
adc
sbb
dec
push
dec
or
xor
inc
inc
adc
mov
(bad)
rcl
pop
test
fistp
daa
or
ja
mov
popa
(bad)
xor
lods
aad
jae
aad
inc
jmp
out
sub
jnp
(bad)
fs
push
mov
mov
daa
outs
nop
shl
pop
jae
sahf
or
and
call
dec
xchg
mov
fistp
arpl
or
rcr
jmp
jbe
xor
jecxz
push
cmp
xchg
pop
jg
push
jne
sub
fisubr
fcmovne
adc
xor
xlat
int3
add
or
push
mov
arpl
test
popf
xor
ror
cmp
pop
sbb
lods
fsubr
jmp
xor
out
lock
sbb
sub
jmp
or
fstp
adc
xor
icebp
in
shl
push
mov
adc
push
inc
xor
sar
mov
or
(bad)
push
mov
jno
and
arpl
lar
leave
pop
pop
dec
sahf
jbe
mov
adc
push
push
cmp
lahf
adc
repnz
ret
push
xchg
add
loope
lods
mov
rcr
and
je
addr16
lods
stos
cld
div
mov
aad
mov
ins
mov
outs
rol
cs
and
jns
inc
xchg
xor
add
add
dec
loope
mov
dec
lock
jle
test
sbb
or
daa
xchg
mov
dec
sbb
jnp
mov
je
out
movs
inc
sbb
mov
inc
fs
xchg
xchg
or
lea
out
movs
cmp
in
iret
pop
pop
sub
dec
fild
jnp
test
daa
lds
outs
xor
mov
dec
movs
push
sbb
adc
jge
sub
and
in
fidiv
add
jl
dec
mov
ja
sahf
adc
xor
xchg
dec
rol
adc
(bad)
lods
push
jns
push
aad
mov
jg
rcl
jae
push
mov
mov
lock
inc
xlat
(bad)
push
es
std
and
popf
fisttp
jo
into
repz
xor
inc
push
push
test
mov
mov
push
adc
out
jnp
mov
retf
cmp
xchg
sti
aam
fdiv
mov
push
jmp
shl
pop
mov
in
sub
push
clc
xor
cld
ins
sbb
ins
add
pushf
or
xchg
and
jge
je
std
sbb
mov
or
mov
dec
cmps
jno
lods
xor
dec
and
jb
mov
pop
cmc
jle
dec
data16
dec
in
pop
pop
fmul
div
pushf
into
imul
jbe
inc
test
in
jo
add
ffreep
arpl
sbb
xchg
inc
add
inc
push
out
cmp
or
shl
loop
aas
xchg
mov
cmc
rol
fwait
or
xor
je
push
sub
mov
mov
mov
cmc
ret
enter
push
jmp
and
xchg
xchg
aaa
loopne
into
movs
pop
push
push
test
sub
and
jae
ret
xor
sbb
je
and
outs
out
push
(bad)
call
shl
jmp
retf
ror
lahf
call
(bad)
out
inc
sbb
bound
popf
addr16
hlt
jmp
je
inc
into
jb
std
je
push
loopne
dec
xchg
dec
pop
or
cmp
(bad)
popa
jae
pushf
cld
sub
or
xchg
push
(bad)
lock
clc
inc
xor
ja
mov
xchg
pop
jp
popa
enter
and
int3
add
mov
xchg
adc
push
daa
add
add
out
mov
adc
aas
jmp
jns
or
aam
sahf
lods
inc
adc
and
das
xchg
fdiv
out
or
xor
in
mov
ret
rcr
jno
mov
shl
mov
pop
mov
cmp
aam
cwde
fcmovu
fldcw
rol
adc
jmp
pop
jp
retf
push
out
mov
sub
fsub
sti
add
sbb
cmp
adc
stos
xchg
(bad)
mov
aad
bound
jmp
call
ret
push
aas
jns
xchg
dec
out
dec
lods
pop
adc
dec
cld
sbb
inc
push
fsub
rol
adc
test
adc
push
push
rdpmc
push
pop
maxps
imul
inc
jge
rol
inc
in
pop
xor
movs
sub
(bad)
mov
jmp
sbb
jmp
(bad)
cmc
mov
imul
cs
movs
push
adc
push
pop
and
mov
shr
imul
push
(bad)
(bad)
push
push
in
(bad)
push
shl
jmp
cmp
aas
fsub
mov
add
or
jb
sbb
retf
mov
xor
mov
pop
inc
test
sub
adc
pop
add
jle
(bad)
push
repnz
outs
jle
ins
dec
leave
stos
std
or
and
pushf
outs
cmc
cdq
les
and
or
out
stos
data16
mov
ds
mov
add
xchg
je
pop
sbb
mov
ss
out
das
pop
shr
adc
or
mov
mov
ss
add
mov
add
and
cmp
(bad)
jmp
and
or
cmp
test
push
int3
add
in
movs
aaa
pop
xor
fwait
lds
or
imul
mov
clc
arpl
adc
sbb
mov
add
ficomp
into
dec
mov
ror
test
sub
push
nop
lods
jo
mov
ins
cli
adc
cdq
jbe
pop
sub
nop
lods
dec
(bad)
loop
aas
mov
pop
cmp
cmp
loope
adc
push
jge
xor
adc
cdq
sub
mov
add
sub
scas
inc
cmp
cmp
call
mov
add
cmps
mov
ins
inc
iret
sub
mov
and
jae
ja
ficom
xor
dec
xchg
fdivr
call
mov
(bad)
fild
lock
mov
popf
in
push
ret
pop
sar
mov
xchg
jle
inc
push
sahf
cmp
xchg
xchg
out
into
xchg
stos
push
(bad)
adc
push
(bad)
sub
push
xchg
(bad)
dec
xor
mov
inc
jmp
dec
pop
fnstsw
hlt
mov
jo
sbb
or
nop
js
pop
js
popf
stos
loop
jg
std
daa
mov
hlt
rol
int
jb
repnz
and
xchg
mov
bound
retf
jle
rol
sbb
and
sbb
jl
xchg
mov
pop
mov
or
push
ds
pop
call
imul
inc
data16
sbb
pusha
push
sbb
in
inc
loop
mov
cli
(bad)
fstp
cmps
sbb
mov
xor
mov
jl
das
and
inc
cmp
mov
popa
ror
and
pop
mov
popf
xchg
comiss
daa
mov
out
addr16
ja
xchg
ror
pop
fiadd
mov
movs
rcl
sbb
mov
push
or
pusha
pop
mov
arpl
dec
daa
imul
mov
add
sub
retf
stos
outs
cli
call
je
jae
lods
jnp
cmp
mov
jae
dec
popa
es
cwde
mov
(bad)
mov
mov
mov
pop
dec
or
adc
rcr
adc
ffreep
mov
cmp
(bad)
push
and
in
and
and
dec
fnstenv
imul
sub
test
dec
pop
retf
gs
test
adc
push
retf
jge
adc
(bad)
out
cmp
fistp
sub
mov
fstp
mov
dec
mov
ficomp
add
mov
mov
mov
jge
mov
clc
mov
mov
jecxz
repz
sbb
xchg
rol
nop
daa
(bad)
out
add
mov
std
xor
and
call
fnstsw
sub
mov
movs
and
jl
fcom
pop
xchg
ss
retf
pusha
ret
mov
ja
xchg
add
dec
sar
sti
mov
sub
out
inc
sub
mov
movs
mov
adc
cmp
aaa
sub
aas
jb
jmp
xchg
jle
rcl
rol
xor
mov
das
and
xor
stos
mov
stos
dec
addr16
push
lds
or
dec
rcl
cmp
test
xchg
inc
xor
jmp
add
mov
push
dec
shr
ret
and
push
cmp
fsub
add
hlt
cdq
(bad)
jb
xchg
add
call
jnp
add
lods
jno
ds
lds
pop
lahf
mov
stc
or
call
cmp
push
daa
inc
arpl
jle
adc
inc
push
(bad)
stc
cmps
movs
sub
pop
jb
add
cmc
push
mov
cmp
loope
fld
adc
loopne
pop
fisttp
mov
test
add
ja
les
ret
call
and
cmp
xchg
jmp
or
stos
cmps
mov
stos
jg
lods
in
popa
xchg
mov
xor
xor
sub
mov
sub
or
mov
inc
push
pusha
jo
fdiv
imul
jns
test
leave
adc
ins
pop
repz
call
test
or
and
inc
(bad)
push
jbe
adc
je
loopne
hlt
in
(bad)
pop
cli
pop
add
xor
loope
add
mov
adc
xor
inc
jns
pushf
popf
or
out
lds
cmps
sahf
scas
cmps
xor
cld
icebp
gs
bound
lea
fcom
adc
(bad)
not
fs
std
(bad)
loopne
cmp
add
pusha
or
gs
cmp
hlt
push
mov
shl
in
inc
fstp
pop
retf
jns
inc
out
arpl
lods
mov
pop
jno
daa
and
cmc
xchg
pushf
pop
std
das
rol
out
xchg
hlt
hlt
icebp
sbb
rcr
xor
mov
mov
stos
mov
shl
inc
fbstp
or
imul
sub
lock
test
and
loopne
shr
lods
movs
out
inc
movs
push
arpl
sbb
(bad)
mov
pop
sbb
repnz
jge
or
or
cmp
mov
in
rol
pop
or
mov
outs
jno
cs
push
cwde
fiadd
pop
mov
jle
push
repnz
cs
lods
rol
xchg
pop
scas
mov
test
data16
inc
idiv
lahf
test
mov
adc
adc
sub
shr
ja
pop
lds
inc
js
into
or
xchg
loop
into
retf
and
mov
pop
add
out
retf
cmp
lock
jmp
fidiv
or
mov
jl
int
mov
xchg
sub
jmp
gs
stc
fist
mov
push
mov
xchg
jns
int3
pusha
in
test
imul
and
(bad)
mov
jno
push
adc
out
mov
sbb
pushf
(bad)
cmp
push
sahf
jp
movs
in
xor
nop
loop
mov
mov
mov
sub
xchg
sbb
rcl
cmp
fsubr
(bad)
aad
inc
outs
arpl
mov
pcmpgtd
rcl
xchg
and
jmp
jle
lods
sbb
pop
ret
and
iret
pop
mov
mov
test
cmc
and
jg
lahf
xchg
mov
adc
daa
xchg
cmp
out
add
sub
push
mov
test
jge
sti
inc
xor
or
aaa
mov
stc
ret
jle
inc
cmps
cs
cmp
jmp
retf
or
mov
mov
jecxz
hlt
stos
and
in
repz
pushf
adc
retf
in
and
add
push
inc
dec
pop
or
mov
cli
loope
enter
mov
sbb
sbb
push
dec
pop
adc
sbb
push
cmp
and
ret
pushf
mul
(bad)
dec
cmp
mov
xor
test
iret
pop
int
mov
adc
int3
inc
lods
aam
retf
dec
scas
sahf
jbe
clc
xor
popa
repz
stc
and
jns
pushf
jbe
(bad)
(bad)
in
cmc
push
dec
dec
(bad)
cmc
or
mov
jmp
dec
inc
cli
mov
jle
or
push
mov
popa
mov
stos
mov
dec
sbb
mov
inc
adc
jnp
jno
jp
dec
or
sbb
xlat
cmp
and
in
arpl
inc
ret
or
std
jp
dec
jb
push
adc
jb
adc
inc
rcl
mov
and
xchg
bound
popa
cwde
dec
rol
add
inc
xchg
dec
jp
(bad)
nop
xchg
(bad)
mov
and
aaa
cmp
sub
ret
lods
push
mov
fistp
and
gs
fisub
nop
jp
and
movs
or
mov
push
jp
imul
sbb
(bad)
jne
push
pop
repz
xchg
sub
ud2
or
jnp
idiv
pop
cdq
sbb
sbb
out
push
nop
cmp
inc
xchg
mov
hlt
movs
jno
mov
push
aad
cmp
lods
sub
loopne
sub
push
pop
nop
nop
inc
mov
pop
fwait
adc
cmp
daa
mov
popa
out
scas
daa
adc
push
or
pop
jbe
push
cdq
sbb
jb
ins
mov
stc
jecxz
mov
cmp
leave
sbb
sbb
lahf
jge
jmp
pop
inc
sahf
mov
loopne
frstor
fmulp
push
dec
sbb
popf
jmp
dec
in
mov
adc
mov
retf
call
xchg
out
or
retf
jne
mov
add
arpl
xlat
mov
jle
xchg
or
test
js
push
pop
dec
xchg
and
xchg
(bad)
in
imul
or
movs
push
jp
xchg
mov
adc
adc
mov
mov
(bad)
(bad)
or
iret
xchg
mov
push
fdiv
xchg
mov
stos
mov
ret
sbb
mov
mov
cmps
cwde
or
(bad)
push
push
cmp
int3
fisub
stos
adc
rol
add
xor
cld
cmp
ret
rcr
adc
lods
cmp
mov
mov
fcom
adc
daa
or
cld
add
jae
inc
sbb
add
jo
jmp
test
imul
inc
je
sbb
cs
adc
mov
dec
and
mov
dec
add
mov
ds
mov
push
stc
xor
aad
lock
shl
neg
neg
cmp
adc
cld
mul
in
jmp
and
sbb
pusha
ja
jle
int3
pop
call
icebp
ret
or
scas
mov
push
mov
call
xor
mov
xchg
push
mov
sahf
fst
mov
fisttp
mov
mov
das
test
cmp
mov
pop
jp
inc
iret
push
fidivr
dec
jle
mov
std
stos
shl
xlat
cmp
pop
jg
in
inc
fucomi
sub
inc
ret
and
or
retf
imul
fidivr
push
jl
outs
inc
dec
nop
or
popa
sbb
stos
(bad)
mov
lods
sbb
sbb
(bad)
xor
push
add
sbb
or
ss
mov
loope
xor
sub
jb
jle
or
add
adc
add
mov
push
jge
scas
call
or
fmul
lods
retf
and
and
or
dec
mov
pop
(bad)
cmc
mov
int
add
push
mov
push
mov
mov
aam
and
cmc
dec
push
inc
inc
jp
fs
and
push
xor
pop
mov
fidiv
push
mov
and
std
xchg
sbb
cwde
cli
retf
dec
push
fs
lds
inc
int3
out
(bad)
pop
jno
dec
call
mov
jnp
adc
sbb
mov
pop
aas
cmp
movs
xchg
and
mov
mov
fstp
ds
add
add
sar
stos
ss
xchg
mov
das
push
retf
and
gs
mov
xor
push
or
std
out
pop
aas
leave
sbb
push
mov
vpor
retf
shl
cmps
push
aas
test
or
cmp
mov
pop
idiv
iret
out
push
xchg
xor
jnp
rol
adc
mov
sbb
and
adc
cmp
xor
push
mov
inc
outs
fld
and
pop
mov
xchg
mov
inc
fadd
aam
mov
dec
inc
cli
nop
xor
jne
jne
inc
adc
cmc
push
mov
outs
jnp
xchg
loope
adc
jle
ficomp
imul
mov
fnstcw
lock
pop
scas
adc
xchg
mov
and
dec
cmps
jne
sahf
daa
inc
popa
xor
bound
dec
jl
fisub
dec
fisubr
inc
lea
imul
in
xor
ins
push
cs
inc
mov
add
add
gs
loope
jae
pushf
xor
rol
mov
mov
lock
add
dec
std
nop
mov
call
jne
cdq
int
pop
jnp
call
mov
dec
(bad)
call
push
scas
jmp
cmp
stos
mov
shl
test
jmp
and
fs
retf
inc
lods
in
push
inc
mul
and
das
cmp
rcr
scas
test
stos
mov
cmp
mov
(bad)
leave
dec
add
push
pop
mov
cmp
and
and
(bad)
mov
pop
inc
movs
dec
add
add
jmp
call
loop
icebp
inc
es
push
sub
adc
add
ins
inc
out
mov
outs
stc
push
ja
xchg
(bad)
das
pop
gs
scas
push
jmp
in
shl
cmps
cmp
scas
mov
xor
mov
into
pop
inc
push
cwde
retf
test
out
push
dec
mov
sub
leave
add
xor
pop
movs
sbb
xchg
dec
test
xor
pushf
sub
bnd
dec
or
jle
in
hlt
(bad)
aam
call
push
imul
or
dec
loope
mov
sub
out
mov
into
xor
out
fcomip
aas
pop
cli
fst
pop
add
push
cmps
je
add
mov
imul
imul
push
shl
cmp
xchg
cmp
or
jecxz
sub
fistp
pusha
imul
clc
loope
repnz
mov
gs
adc
inc
cmp
xchg
jmp
cli
pop
rcr
push
and
xchg
mov
and
dec
sub
add
loope
xor
lock
sub
in
pushf
enter
lds
lea
and
cmp
pop
cmp
fsub
(bad)
mov
into
loop
stos
repz
sbb
mov
and
sahf
mov
cmp
shl
and
add
cmp
pushf
mov
in
das
ror
ficomp
cmc
jmp
mov
fisubr
sbb
add
div
jecxz
inc
sar
adc
(bad)
pop
iret
mov
jge
nop
cmp
js
mov
xor
jae
add
mov
add
push
xchg
add
cdq
push
mov
call
inc
pop
sahf
and
nop
or
pop
test
cwde
inc
sub
pop
or
dec
test
cmp
inc
(bad)
in
mov
mov
repnz
fwait
inc
push
sub
sbb
inc
sub
push
adc
push
call
inc
std
or
and
loop
fld
mov
mov
jmp
test
or
xchg
xchg
xor
in
arpl
in
cmp
jmp
(bad)
cmp
or
sub
mov
and
inc
or
mov
xor
jo
xchg
and
loopne
retf
aam
push
add
data16
pop
xchg
pop
aas
ds
mov
out
je
xor
mov
cmp
stos
xor
xor
mov
ret
mov
enter
push
imul
out
and
loop
inc
or
pop
cmp
mov
cmp
ror
pop
and
leave
test
mov
ret
ret
stc
mov
mov
add
cmps
jl
push
(bad)
cmp
jle
push
ret
jecxz
mov
test
or
add
jg
loop
push
push
popa
adc
test
xlat
fnstenv
pushf
daa
xchg
cmp
mov
dec
lds
push
and
sub
cwde
push
jecxz
rcr
inc
sbb
movs
movs
outs
cld
(bad)
xor
and
xchg
ret
out
inc
lods
ins
cmp
sbb
aaa
xchg
sub
nop
mov
mov
rcl
test
int
outs
and
into
arpl
popf
mov
xor
aaa
jecxz
jmp
mov
arpl
call
popf
lds
ins
push
cmp
dec
cmps
sbb
cmp
pop
push
mov
push
jno
pusha
rol
test
inc
pop
sahf
ret
das
jbe
mov
cmps
push
stos
cli
xchg
(bad)
(bad)
nop
scas
push
loope
inc
lods
mov
add
pusha
lock
pop
inc
lea
mov
mov
sub
mov
cmc
push
inc
add
cli
test
and
(bad)
cmp
inc
jnp
fiadd
outs
push
jbe
aam
or
jnp
out
ins
add
mov
into
mov
and
repnz
shl
loop
mov
pop
mov
scas
dec
and
jp
xlat
in
lods
push
lock
jp
cmc
jmp
nop
sub
push
lock
aaa
cmp
not
jo
xor
outs
lahf
std
call
add
or
mov
xchg
pop
fwait
lods
in
xlat
pop
mov
(bad)
fldcw
stos
pop
xchg
pusha
jns
adc
nop
xor
es
call
push
fcomp
fsubr
push
mov
stos
mov
fidivr
xchg
sub
or
mov
mov
or
dec
dec
test
fld
mov
push
iret
jg
sti
dec
stc
pop
xor
sub
push
in
sahf
jmp
add
cs
mov
loopne
fidiv
ret
dec
imul
daa
add
mov
xor
adc
data16
push
pop
and
mov
and
fcom
mov
pop
jg
add
jmp
ins
xor
repnz
outs
sti
fdivr
mov
sti
inc
(bad)
add
pop
cmp
jecxz
fs
push
push
or
mov
pop
or
jg
leave
add
inc
lods
out
test
pushf
imul
add
pop
inc
lock
jne
fisttp
in
pop
repnz
xor
mov
test
mov
lahf
ror
les
sbb
or
fnstenv
cmp
ins
je
(bad)
repnz
neg
and
inc
jp
cmp
and
inc
pop
push
xchg
stos
push
add
jbe
fist
and
add
idiv
clc
sbb
mov
push
sub
jae
mov
mov
jl
push
xchg
out
or
mov
cmp
dec
fnstenv
fmul
jge
dec
mov
ret
push
enter
adc
sbb
les
sbb
sub
shl
mov
jl
mov
jno
movs
in
push
mov
xchg
mov
and
ret
aas
mov
jns
mov
stos
cmp
ds
icebp
js
mov
pop
jg
push
cmc
xor
pop
mov
fwait
mov
jmp
pushf
out
inc
jae
int3
and
adc
cs
sbb
push
cdq
fild
mov
imul
aaa
mov
add
adc
xchg
loopne
cmp
cmps
push
hlt
pop
(bad)
mov
and
sub
cmp
sbb
shl
shr
(bad)
jmp
xor
data16
in
inc
test
mov
scas
mov
aam
and
mov
es
sub
push
jge
cmps
jno
inc
mov
dec
mov
jmp
mov
adc
inc
push
push
test
xor
xchg
pop
not
push
les
jns
xor
shl
out
aam
pushf
push
imul
cmc
pop
push
adc
xchg
js
jmp
push
arpl
mov
lock
jno
(bad)
jmp
das
cmp
inc
lea
xchg
jnp
sahf
mov
xor
and
and
retf
mov
sahf
icebp
imul
cmp
jg
pop
scas
jne
push
jp
jl
pop
jp
clc
hlt
xchg
out
ins
popf
and
jecxz
out
daa
sbb
mov
push
cmp
mov
sub
mov
xlat
push
(bad)
retf
repnz
jae
adc
sub
sahf
aaa
dec
push
adc
aam
pushf
mov
mov
aaa
call
(bad)
fcomi
cmps
lahf
neg
and
xchg
jmp
ja
in
cmps
into
(bad)
sub
or
sub
xchg
imul
mov
jo
jno
(bad)
pop
xor
retf
jae
pop
(bad)
and
fisttp
movs
add
cmp
adc
xchg
ror
mov
arpl
ficomp
xor
add
add
repz
out
cmp
movs
es
(bad)
loop
jnp
mov
sti
sub
clc
bound
push
in
retf
cmp
xchg
mov
mov
shr
fdivp
(bad)
mov
(bad)
mov
dec
sbb
aas
out
dec
in
cld
inc
scas
xchg
std
daa
cld
out
pop
dec
mov
adc
popf
in
scas
mov
cmps
xchg
dec
das
stc
xor
cdq
xor
dec
jl
xor
xchg
sbb
mov
xchg
ss
and
(bad)
pop
not
mov
loopne
fwait
(bad)
cld
push
outs
and
xchg
in
xchg
inc
aad
sahf
outs
mov
int3
outs
rol
aam
xor
rol
sbb
mov
into
cmp
das
ret
stc
or
rcl
clc
popf
sub
adc
hlt
inc
adc
stos
adc
or
ja
je
inc
scas
inc
sub
daa
sbb
or
imul
adc
pop
inc
stc
pop
dec
jmp
bound
arpl
or
mov
xor
test
data16
stos
add
push
jo
fmul
cmp
xor
jb
bound
mov
dec
movs
jno
and
dec
xchg
and
xchg
ficomp
and
and
push
or
pop
push
pusha
cld
hlt
push
jge
jp
hlt
cwde
jge
arpl
inc
adc
inc
mov
inc
test
push
cmc
ret
fcomip
mov
inc
pushf
sbb
jmp
retf
into
enter
in
mov
fadd
mov
xor
nop
lock
pop
and
xchg
xchg
xchg
cwde
jno
add
mov
test
xchg
popf
inc
push
xlat
pop
bound
or
sbb
or
cmp
or
sub
lods
fwait
jb
pop
call
arpl
std
mov
icebp
sbb
sti
jg
jmp
int
aas
mov
fs
add
int3
ret
and
and
jle
hlt
iret
leave
and
aam
push
cmp
ficomp
clc
mov
fmul
adc
movs
xor
cmp
add
mov
ins
imul
(bad)
jmp
mov
call
fistp
jno
inc
dec
mov
stos
test
pop
jno
add
ds
arpl
push
mov
jmp
jg
sbb
inc
test
push
xchg
out
jg
ins
and
push
test
mov
jnp
xchg
dec
jg
add
push
(bad)
pop
push
dec
xchg
stos
xchg
adc
lock
(bad)
aad
scas
rol
sbb
inc
mov
cwde
in
mov
je
mov
push
ret
imul
inc
leave
scas
scas
popa
frstor
lea
xor
adc
ins
dec
xchg
or
and
imul
xor
mov
xor
and
mov
mov
xor
into
mov
call
xor
and
push
pop
in
mov
stos
pop
and
mov
or
push
call
or
test
dec
dec
push
cmc
std
add
and
jae
sbb
loopne
adc
xor
pop
adc
push
aad
push
shl
push
jl
cmc
mov
cwde
mov
ror
cmps
mov
std
shl
ret
fsub
icebp
adc
(bad)
popa
or
and
jo
xchg
int
add
jb
jbe
dec
fisttp
sub
cwde
popa
or
adc
(bad)
sub
je
sbb
adc
push
paddusb
jmp
inc
in
jnp
xor
sub
and
pop
ror
add
mov
xchg
ror
and
adc
and
push
data16
in
ret
and
out
cmp
imul
popf
in
jmp
inc
mov
jmp
mov
jle
add
cmp
pop
mov
pop
adc
int
pop
(bad)
shl
sbb
out
push
jb
xchg
add
arpl
sbb
inc
and
enter
or
mov
xor
int
imul
movs
(bad)
sub
in
repz
dec
(bad)
jecxz
sahf
sahf
or
retf
call
cwde
sub
add
stos
mov
adc
es
push
push
sub
out
and
adc
pop
clc
xchg
xchg
or
inc
cmc
jecxz
xchg
jne
push
out
sub
pop
push
mov
cmove
sbb
xchg
les
adc
int3
ror
cmp
pop
jbe
pop
les
stos
mov
pop
dec
test
xor
push
imul
fcomp
(bad)
xor
dec
sub
sbb
xchg
fistp
ins
arpl
not
mov
mov
sub
inc
pop
lods
(bad)
shr
cmp
jmp
test
sbb
adc
mov
mov
aam
icebp
jg
xor
dec
repz
jp
call
push
mov
lds
adc
jno
push
les
inc
cdq
and
cmp
sar
jmp
push
or
int3
imul
movs
loope
repnz
mov
pop
js
out
mov
aad
stc
push
pop
inc
enter
loop
shl
xchg
mov
xor
jb
sub
dec
add
dec
xchg
vmovlps
mov
pushf
aas
ins
mov
int3
movs
cmp
arpl
or
add
pop
add
cmps
adc
adc
xor
outs
pop
(bad)
or
adc
dec
std
scas
sub
mov
hlt
(bad)
into
jl
test
mov
add
add
sbb
test
and
xor
and
out
neg
push
rcl
push
fidiv
push
jne
sub
es
test
loop
jp
aam
and
push
ret
test
and
mov
add
lahf
mov
rcl
push
xor
sub
lods
add
dec
mov
inc
clc
mov
sbb
lds
jmp
sub
mov
jns
lods
jg
adc
cmps
jmp
push
retf
sbb
mov
adc
or
mov
(bad)
sbb
mov
mov
jnp
jg
sti
les
adc
(bad)
inc
iret
mov
ins
dec
pop
xchg
out
in
mov
push
test
ins
fisubr
in
jg
das
stc
inc
aad
pop
mov
jmp
sbb
outs
in
mov
push
mov
and
scas
xchg
dec
dec
pushf
sbb
xchg
gs
cwde
cmp
cmp
fidivr
pop
pop
sar
push
jmp
adc
cdq
test
sub
xor
or
ins
mov
out
cmp
push
(bad)
clc
jl
or
add
outs
ins
dec
cmps
loop
mov
push
sbb
lea
inc
mov
pusha
pop
inc
fs
pusha
fiadd
aaa
daa
shl
or
test
aas
cmp
jns
ret
inc
retfw
ins
mov
add
pop
xchg
xchg
adc
fisttp
pop
loope
test
jge
or
scas
(bad)
adc
aam
(bad)
lock
ret
sub
adc
cmp
fdivr
out
sub
cmps
mov
sub
sahf
jge
xchg
idiv
pop
or
sub
dec
sub
mov
pop
jl
push
add
inc
in
movs
cmps
outs
xchg
int3
sbb
imul
lahf
addr16
ss
jne
jnp
jne
xchg
and
test
jns
and
and
mov
fwait
or
aaa
pop
mov
mov
ficomp
mov
push
adc
push
stos
mov
not
pop
in
sar
sub
mov
sbb
adc
cmp
repz
jmp
mov
outs
pop
adc
enter
pushf
mov
mov
adc
sbb
cmc
es
shl
loop
dec
xchg
loopne
mov
push
out
mov
sbb
(bad)
dec
push
rcl
xor
dec
mov
or
arpl
fidivr
into
js
xchg
push
push
(bad)
pop
pop
xor
ret
call
push
and
xor
pop
inc
inc
xchg
mov
sub
fdiv
mov
(bad)
fisttp
in
push
scas
cmp
sub
icebp
xchg
and
das
adc
(bad)
leave
pop
push
mov
iret
imul
fincstp
push
sub
pop
lds
ror
out
clc
outs
add
popa
and
fidivr
aas
leave
dec
pusha
cli
jmp
pop
ds
xchg
pop
adc
in
sub
arpl
in
push
adc
ror
and
adc
test
movs
rol
call
movs
sbb
enter
xor
jb
pusha
test
(bad)
push
shl
dec
xchg
add
test
int3
cmp
sub
in
xchg
adc
ret
int3
and
mov
push
daa
or
mov
das
or
cs
(bad)
popf
mov
les
inc
das
push
out
mov
sub
jp
pop
loop
pop
mov
dec
pop
stc
add
stos
and
aaa
or
mov
push
retf
loope
shl
div
out
pop
push
ins
adc
int
fisub
xchg
cli
adc
ss
add
rcr
and
sub
mov
cwde
mov
(bad)
push
in
mov
vmaxsd
xlat
retf
sub
mov
cli
jns
cmps
fistp
popf
inc
outs
mov
or
push
adc
test
icebp
inc
test
movs
cmc
pop
mov
mov
inc
test
repz
fimul
shl
xchg
retf
adc
fnsave
loope
mov
mov
shl
jb
jb
fwait
pop
stos
inc
imul
(bad)
data16
pop
jecxz
xchg
jle
pop
std
push
sub
push
jl
pop
jno
das
rcl
jns
cmc
inc
aam
rcl
stos
popf
dec
test
clc
fsubr
dec
(bad)
fdivp
add
icebp
bound
add
jmp
rcl
mul
add
mov
push
sub
mov
mov
sub
jmp
gs
and
mov
bound
or
jle
jnp
mov
movs
gs
clc
in
cmp
clc
(bad)
mov
xchg
aam
cmp
or
mov
dec
(bad)
jge
daa
pop
or
(bad)
inc
adc
pushf
lods
es
mov
pop
cmp
mov
mov
call
loop
xor
dec
pop
inc
das
(bad)
jl
add
jne
(bad)
fwait
movs
pop
adc
fcomp
jmp
pop
inc
xchg
sbb
stos
jle
pop
jnp
cs
dec
mov
push
popa
inc
lahf
addr16
sti
not
(bad)
or
push
test
test
sub
retf
cmps
xchg
cmp
(bad)
adc
cli
ret
xor
and
pop
mov
push
mov
lods
adc
cmps
ja
mov
scas
dec
test
inc
iret
xchg
adc
push
icebp
jg
sbb
or
hlt
mov
push
and
fdivr
jmp
inc
jp
adc
retf
or
or
and
sar
ss
push
adc
int
mov
(bad)
push
test
mov
pop
pushf
or
xchg
ror
loop
ins
push
daa
shl
nop
mov
lods
cmp
daa
xor
add
pop
xor
inc
dec
stc
in
mov
fisubr
lods
in
mov
push
ror
xchg
(bad)
(bad)
gs
inc
and
add
jns
imul
xor
cdq
(bad)
into
fwait
ret
imul
fldcw
inc
ret
sub
rol
cmp
and
pop
pusha
sub
cmp
jo
mov
aad
sub
mov
(bad)
jle
rcl
pusha
test
and
mov
xchg
lock
mov
lea
sub
loopne
neg
enter
adc
fisub
pop
mov
ins
popa
int3
out
jp
xor
clc
mov
test
sahf
mov
ins
imul
cli
icebp
stos
jo
and
ins
mov
sub
push
sub
clc
fsincos
in
xlat
ins
mov
sub
loop
fisubr
mov
jmp
mov
popf
sbb
mov
in
xor
inc
or
fdivr
push
pop
ret
sub
aaa
ja
icebp
mov
out
ret
xchg
xchg
cmp
and
or
jno
and
cmp
inc
jne
xor
arpl
push
jl
ret
dec
sub
sbb
out
mov
(bad)
mov
inc
sbb
fstp
imul
shl
inc
test
sub
bnd
cli
in
mov
dec
shl
add
lahf
loope
add
loopne
mov
shl
and
xchg
lods
out
gs
lods
jnp
dec
pop
jl
push
jp
cmc
jmp
ss
(bad)
sbb
lods
aad
cmp
jmp
push
(bad)
fsubr
aad
imul
adc
mov
je
pop
call
add
je
mov
mov
jno
sub
jb
and
imul
jae
or
enter
mov
lds
jne
push
push
fwait
push
or
fs
mov
mov
retf
imul
sbb
loopne
aam
sub
and
sbb
sub
addr16
cs
jp
sahf
mov
inc
xchg
push
movs
cmp
jb
push
xchg
inc
lods
pop
jae
adc
or
adc
xchg
and
rol
add
pop
dec
or
fsub
add
movs
push
push
mov
push
xchg
cmps
adc
sub
in
ret
and
sbb
ds
les
inc
iret
arpl
pop
fcmovnu
pop
mov
mov
mov
icebp
lds
ins
fsubr
and
enter
out
xor
(bad)
jo
fsub
push
(bad)
mov
icebp
inc
adc
shl
push
cmps
mov
dec
xchg
push
inc
pushf
lock
push
stos
hlt
cmc
repz
mov
xchg
and
jns
hlt
imul
fnstcw
ss
xchg
(bad)
sub
jl
jmp
inc
ret
sbb
addr16
sbb
repz
jecxz
pop
ror
cmp
scas
mov
adc
pop
repnz
sub
adc
enter
and
in
sbb
xacquire
or
sub
cmps
rcr
ss
gs
ss
andps
and
les
popa
jo
push
mov
ret
or
pop
xlat
int3
pop
xchg
push
dec
into
adc
or
ret
sti
popa
test
pop
scas
push
aaa
inc
aad
cmp
add
xlat
out
push
inc
and
dec
mov
push
dec
and
clc
and
mov
mov
test
aam
outs
das
dec
inc
rol
or
mov
aaa
sahf
les
cmp
inc
push
rcl
push
iret
mov
and
xor
mov
push
ins
adc
imul
mov
lock
repnz
cmp
push
das
pop
imul
hlt
bound
movs
fwait
jge
call
into
push
in
ss
dec
cmp
pop
push
jno
(bad)
(bad)
pop
sbb
jb
xchg
mov
(bad)
pop
jno
cmp
aas
dec
fwait
call
into
fcomi
push
jp
test
push
fscale
enter
fbstp
cmp
shl
xchg
xor
cwde
pop
clc
cdq
sub
mov
arpl
xchg
xor
mov
mov
jae
mov
ins
es
push
imul
pop
sbb
xor
or
mov
push
out
dec
or
jne
gs
ins
add
enter
dec
ins
les
inc
movs
add
cmp
xchg
mov
outs
bound
or
stos
icebp
out
popf
xchg
add
dec
jg
shl
push
add
adc
adc
out
call
les
jg
out
fadd
movs
adc
fnstenv
mov
push
add
adc
adc
pop
cli
jecxz
push
push
daa
sti
pop
in
xchg
gs
inc
(bad)
retf
aad
jmp
repz
pop
lock
cdq
mov
test
or
imul
arpl
xchg
int
(bad)
(bad)
push
sbb
pop
pop
mov
add
inc
sbb
mov
jg
pop
or
and
push
push
lds
and
leave
ret
and
out
aam
jecxz
push
shl
imul
xchg
out
ret
inc
cmc
jmp
aam
stos
imul
test
push
(bad)
imul
cmps
cs
enter
stos
popa
jns
jl
fst
cmp
(bad)
jecxz
daa
pop
push
repz
ds
test
xchg
fs
dec
push
int
imul
stc
jp
cmp
mov
jmp
out
aam
int3
ja
out
push
mov
rcr
aad
fadd
aas
adc
jnp
xlat
outs
movd
stc
cmp
lock
sahf
or
sub
mov
out
pop
add
inc
mov
loope
xor
xchg
or
xrelease
sub
mov
sbb
push
test
aad
cmp
mov
mov
dec
pop
push
int3
pop
call
push
fdiv
adc
cwde
sti
sbb
jo
stos
pop
fld
call
push
cwde
jle
je
push
mov
cmp
popa
dec
inc
hlt
inc
ret
imul
cld
sbb
xor
pop
push
add
mov
scas
stos
jmp
sub
mov
(bad)
dec
mov
jae
and
mov
fist
xor
pop
mov
ins
popf
ins
dec
ja
mov
lock
sbb
icebp
push
push
retf
xor
or
cld
fisttp
fnstenv
mov
mov
ds
jb
ja
cmp
scas
fs
dec
push
into
mov
hlt
inc
jmp
pop
jmp
fadd
movs
or
mov
loopne
mov
arpl
jno
adc
retf
sub
jp
mov
xchg
or
daa
data16
(bad)
fistp
add
aaa
cwde
pop
xor
test
or
aaa
fstp
icebp
fwait
cli
movs
pop
sbb
pop
movs
les
jmp
ja
pop
fmul
sbb
cmp
fsubr
adc
inc
sti
lea
js
inc
pop
icebp
gs
cmp
cdq
xchg
mov
pop
add
addr16
sar
or
outs
sub
js
test
pop
dec
dec
dec
ss
loopne
add
dec
xchg
xor
outs
mov
mov
pop
cmp
dec
push
in
out
repnz
ret
(bad)
arpl
sbb
nop
rol
fisub
and
xlat
push
xchg
int
adc
aaa
and
popa
push
stos
nop
inc
scas
mov
dec
jbe
call
pop
shl
jns
cmp
adc
dec
pop
stos
popa
jecxz
push
sbb
int3
dec
or
out
repnz
xlat
stc
into
mov
and
sub
push
shl
jmp
pop
xor
sbb
(bad)
pop
dec
iret
scas
jp
cli
xchg
push
or
xor
ja
(bad)
sbb
mov
int
out
or
fwait
push
lods
imul
test
cs
movs
push
xchg
mov
xor
add
js
iret
lock
dec
add
add
xchg
fstp
arpl
fst
lahf
xor
fsub
adc
popa
dec
and
daa
sahf
mov
xchg
cmp
dec
les
js
out
es
aad
into
arpl
test
out
js
dec
and
int3
lock
(bad)
mov
or
(bad)
sbb
dec
cmp
shl
adc
xchg
xor
js
inc
dec
lahf
jge
aam
retf
hlt
cmp
lea
mov
ss
stos
jb
push
xchg
shl
ret
xor
scas
adc
inc
add
mov
xlat
mov
mov
xor
xor
(bad)
cli
outs
cs
ret
mov
fistp
mov
cmp
mov
mov
push
mov
movs
hlt
mov
out
sub
pop
xchg
xor
es
pop
xor
jl
push
(bad)
(bad)
jno
pop
lods
ror
popf
or
lods
and
xor
nop
outs
sub
shl
outs
pop
sbb
(bad)
in
jecxz
jmp
push
push
push
(bad)
rol
mov
mov
mov
xor
arpl
iret
add
pop
stos
xchg
and
mov
jae
dec
dec
pop
in
rcl
pop
cli
pop
dec
and
ror
mov
dec
icebp
cmps
into
daa
sbb
add
push
cwde
out
push
push
mov
nop
mov
jmp
lds
add
lods
aam
movs
outs
repz
cwde
addr16
ja
retf
sbb
or
add
js
jb
retf
fld
xor
and
in
mov
jmp
sahf
je
adc
pop
enter
cld
sti
js
je
pop
inc
mov
fnstenv
add
or
adc
repnz
(bad)
xchg
leave
push
cmp
sbb
aam
add
sbb
mov
test
add
(bad)
ins
add
out
fwait
pop
ret
aaa
dec
mov
popa
mov
stos
inc
sub
fnstsw
loope
mov
lds
add
cmp
loopne
and
stos
push
cmp
ret
cmps
xchg
xor
in
fistp
or
push
test
jecxz
mov
jge
and
ja
shl
je
mov
mov
out
dec
xchg
xchg
repnz
xor
rcl
inc
dec
and
mov
jne
mov
bound
xor
ins
inc
xor
es
mov
movs
cmp
enter
aas
xchg
imul
or
aam
dec
stos
(bad)
jmp
pop
dec
enter
ret
push
sub
pop
ret
outs
daa
jle
mov
push
sbb
sar
movs
mov
aam
cmc
(bad)
cli
jmp
mov
int
(bad)
inc
cmp
push
xchg
popf
jmp
in
jl
dec
data16
movs
(bad)
dec
or
dec
cmp
inc
es
nop
adc
mov
mov
pushf
push
cmps
cli
in
out
jecxz
retf
(bad)
lds
ficom
in
scas
fmul
dec
push
cwde
jl
leave
lods
cmp
fcomip
jmp
xchg
mov
pop
ins
or
scas
ficomp
pop
add
xchg
arpl
pop
or
arpl
adc
mov
(bad)
mov
enter
ficomp
dec
sbb
adc
add
cwde
mov
push
mov
dec
fimul
pop
icebp
ins
ja
mov
pushf
xchg
cmp
mov
(bad)
sbb
mov
inc
xchg
push
add
loope
jnp
push
mov
jmp
stos
hlt
mov
inc
lahf
jecxz
xor
pop
jmp
bound
push
sub
adc
fadd
mov
test
and
inc
ins
(bad)
cmp
les
mov
aam
push
mov
mov
out
hlt
push
pop
mov
xchg
jmp
or
mov
mov
pusha
push
sub
shr
fdivr
xchg
leave
sar
xor
jmp
sub
out
frstor
call
inc
lods
and
pop
xchg
or
loop
fucom
popa
add
mov
pop
(bad)
and
scas
push
pop
loop
lahf
sbb
imul
shr
pop
xor
jg
mov
dec
mov
add
pop
jbe
ret
sub
into
xchg
in
stos
(bad)
push
jecxz
lea
xchg
nop
retf
test
xchg
and
cmp
fs
inc
mov
imul
loope
mov
xchg
xor
fs
cmps
je
mov
ss
sbb
mov
inc
mov
(bad)
fstp
jp
add
or
lahf
mov
xchg
neg
inc
movs
and
dec
cmpxchg
mov
inc
ins
cmps
cld
arpl
loope
xchg
push
arpl
lahf
shl
dec
mov
jno
sub
push
fild
adc
cld
jmp
test
xor
adc
loope
and
adc
test
adc
fild
out
and
mov
aad
lock
cmp
mov
and
cmps
mov
jnp
sti
cld
mov
(bad)
mov
rcl
pop
out
mov
push
scas
push
retf
jge
mov
mov
cli
repnz
aad
and
(bad)
cli
inc
loopne
loope
inc
adc
ja
jns
adc
retf
ss
data16
mov
mov
mov
cwde
mov
adc
and
aam
xlat
xor
mov
cmp
cmps
(bad)
lock
mov
rcr
scas
pop
enter
adc
icebp
pop
sub
jnp
push
add
pop
adc
push
and
mov
data16
js
inc
(bad)
dec
aas
xchg
movs
out
mov
psubd
and
pop
xchg
fldenv
in
dec
or
xchg
in
je
mov
mov
mov
outs
lock
test
in
test
cmp
or
movd
jl
loop
xor
ins
movs
push
cmps
mov
inc
pop
repnz
imul
sub
shr
adc
ret
not
lds
js
(bad)
repz
jb
fsub
jmp
push
mov
add
push
sub
ror
push
mov
xor
xor
je
push
int
pop
mov
out
jl
sub
mov
std
mov
mov
shl
pop
loope
dec
daa
jno
xchg
mov
retf
adc
bound
stos
cmp
std
bound
adc
add
cdq
outs
xchg
dec
cmps
sub
mov
fwait
aam
idiv
out
sbb
imul
retf
jb
xor
shl
jp
cmp
push
push
retf
pushf
pop
sub
add
xchg
mov
jecxz
out
arpl
outs
mov
push
adc
mov
add
jle
inc
fs
test
cld
pop
ds
cmp
mov
mov
ret
inc
pop
dec
push
test
lea
dec
mov
pop
scas
add
imul
adc
out
cmp
sbb
(bad)
ja
xchg
mov
jne
shl
int
div
in
loope
outs
lea
pop
int
aad
adc
add
inc
(bad)
adc
imul
out
(bad)
cs
push
out
sub
out
add
cmp
in
das
xchg
mov
loop
jge
call
test
mov
outs
sub
fwait
ss
mov
add
dec
mov
jecxz
fisttp
(bad)
mov
mov
inc
sbb
icebp
sub
mov
xchg
cli
fadd
sti
pop
and
test
imul
cmp
iret
shl
ins
mov
int
int
sub
ret
call
push
lock
adc
(bad)
in
sub
fcomip
out
jnp
pop
cmp
cmps
cli
gs
xor
fidivr
stc
xchg
in
push
ja
cmps
xchg
movs
xor
out
push
jno
ds
xchg
jecxz
add
jp
mov
pop
inc
adc
pop
and
pop
sar
pop
inc
pop
xchg
mov
cmp
das
dec
mov
aad
inc
das
push
xor
in
cmp
mov
add
mov
je
mov
mov
push
sbb
rol
ret
adc
pop
retf
and
mov
inc
lock
sub
push
fimul
leave
cli
mov
and
(bad)
cmp
fs
out
aas
xor
cmps
nop
adc
mov
movs
lds
clc
ins
mov
out
pop
push
or
cmpps
sub
xchg
inc
outs
jbe
or
shl
fst
sub
jg
mov
call
adc
push
push
inc
mov
xchg
or
test
jbe
shl
add
cmp
stos
xchg
xor
sub
cmps
jne
fwait
in
fidivr
out
cmp
aad
sahf
lea
cmp
lock
xor
pop
dec
lea
bound
adc
and
inc
cmp
stc
retf
scas
lea
or
pop
pop
mov
pusha
pop
add
int3
daa
cmp
fnsave
gs
xchg
in
sub
pop
outs
add
dec
nop
or
xchg
xchg
and
xor
xor
add
xchg
cmps
xchg
aas
mov
xor
or
pushf
mov
lock
push
outs
cmp
cmp
pop
and
and
sbb
dec
inc
inc
sbb
xchg
sbb
repz
movs
or
jmp
push
cdq
loopne
mov
pop
ins
and
cmps
pop
loopne
js
sub
cmp
(bad)
repnz
sub
cdq
aas
add
cwde
cmps
ss
push
pusha
inc
inc
pop
sub
adc
add
or
mov
js
add
aas
inc
icebp
stos
sub
(bad)
xlat
xor
jmp
push
sub
mov
js
nop
push
push
shl
out
or
mov
sub
adc
imul
mov
sbb
call
cmp
sti
pushf
jmp
pop
xor
arpl
enter
xor
sub
jge
cmp
push
(bad)
jmp
add
jae
and
jne
xchg
test
mov
adc
pushf
or
xor
adc
mov
push
js
lock
mov
sub
in
dec
dec
imul
adc
dec
mov
das
movs
adc
call
jb
pop
mov
xchg
add
xor
fsubr
jb
xchg
dec
movs
cli
or
dec
daa
inc
rol
jno
cmp
jnp
fistp
and
pop
jge
jecxz
push
jnp
push
push
jns
sub
inc
or
mov
xchg
repz
stc
inc
dec
sbb
sub
pop
call
push
sbb
push
cmp
repnz
sti
mov
jae
xchg
pop
cmps
mov
and
dec
and
ins
adc
jnp
movs
jbe
out
mov
mov
(bad)
add
jg
mov
jmp
jecxz
xor
shl
xchg
mov
test
add
xlat
jmp
adc
cs
sbb
cmp
sbb
out
xchg
mov
push
hlt
fcmovnbe
int
imul
mov
adc
xor
and
adc
pop
sbb
lahf
and
add
push
clc
mov
cmp
mov
inc
sbb
(bad)
cli
(bad)
pusha
lock
fist
xor
dec
gs
adc
test
xchg
mov
outs
popf
int
push
(bad)
fsubr
mov
sahf
gs
mov
or
jno
fsubr
mov
scas
xor
ja
fucomip
jl
jns
(bad)
sahf
and
inc
sbb
(bad)
sbb
(bad)
and
push
push
or
mov
sub
adc
push
pop
es
loopne
nop
adc
(bad)
out
pop
iret
cmps
xchg
sub
lods
dec
and
loop
inc
mov
lea
cld
cli
jmp
test
imul
cmp
addr16
or
bt
inc
aaa
pushf
inc
mov
jne
sub
(bad)
pop
and
or
iret
push
sub
cmps
stos
and
stos
int
ss
mov
cmps
jecxz
mov
add
push
out
mov
jp
out
adc
shr
add
ficom
mov
adc
mov
mov
jge
paddusw
clc
push
daa
jmp
fst
shl
mov
lea
pop
aas
pusha
mov
(bad)
push
test
add
mov
push
pop
stc
pop
daa
xchg
cwde
push
(bad)
test
mov
cmp
and
popf
lds
inc
sbb
sbb
adc
rol
xchg
ret
mov
jle
data16
neg
xchg
ds
ja
sbb
in
pushf
sahf
push
jmp
mov
xor
push
jmp
push
icebp
and
dec
(bad)
inc
mov
sbb
call
pop
adc
inc
add
and
xchg
cdq
and
and
retf
xchg
pop
push
xchg
push
das
jmp
mov
test
mov
xor
jns
rcr
or
push
es
jbe
sar
and
add
jae
mov
adc
shr
pop
enter
fadd
xlat
jne
dec
clc
int
leave
fst
in
lods
rcr
mov
call
pop
mov
mov
mov
imul
sub
scas
add
sbb
jne
adc
test
xchg
mov
add
dec
test
sub
cmps
jmp
cmp
jmp
xor
mov
lock
jg
cmp
adc
inc
push
jbe
jmp
int
push
sahf
jp
cmp
push
in
and
ficom
adc
jmp
xchg
jecxz
cmp
xchg
loope
xchg
and
jecxz
movs
ss
cmc
inc
mov
fs
jle
sahf
cmp
add
ret
fdivr
xor
adc
push
inc
add
add
push
rcr
pop
sub
add
inc
cmc
or
mov
jg
dec
rol
fwait
push
shl
mov
xchg
in
jl
scas
add
mov
jne
mov
push
mov
dec
out
lods
push
add
mov
mov
cmp
fnstcw
lods
jbe
push
pop
push
test
loop
mov
jmp
pop
add
cmp
push
jnp
(bad)
jg
je
inc
add
data16
or
fld
sub
int3
or
sub
mov
mov
mov
sub
inc
jb
pop
cmp
(bad)
clc
movzx
dec
mov
push
bound
fist
cwde
mov
xchg
mov
iret
add
les
sbb
adc
xchg
pop
pusha
cmps
sbb
outs
rol
jmp
mov
cmp
stos
xchg
pop
shl
add
sahf
push
dec
push
mov
sar
call
rol
ss
sub
push
lods
sahf
push
hlt
xchg
hlt
lahf
sub
mov
shl
xchg
adc
xchg
lods
push
in
rcl
pushf
fisttp
sub
call
pop
pusha
add
(bad)
xor
je
mov
scas
pop
arpl
loopne
outs
cdq
enter
enter
dec
adc
mov
(bad)
shl
cmp
sbb
test
xor
int3
test
and
aaa
aaa
adc
in
(bad)
ret
xchg
(bad)
icebp
fs
mov
push
fiadd
es
sahf
ds
int3
and
in
loope
dec
shr
test
mov
fisttp
mul
xlat
scas
jbe
or
popa
sbb
push
loope
mov
data16
clc
aas
fidiv
dec
daa
test
push
cwde
imul
in
push
rcr
jae
test
xchg
arpl
sub
sahf
addr16
sbb
jmp
sbb
mov
mov
pop
mov
sbb
dec
rol
and
jp
xor
push
and
add
push
lods
repz
xor
cmps
ins
cli
call
jb
sbb
in
bnd
xchg
xchg
outs
fisubr
dec
outs
xchg
xor
pop
stos
jp
inc
and
cmps
pop
lods
repnz
adc
pop
aaa
mov
lgs
imul
rcl
mov
aas
add
je
(bad)
push
fmul
sbb
dec
cmp
mov
ins
mov
jo
xor
mov
jae
popf
pop
cmp
and
or
daa
xchg
(bad)
mov
cdq
mov
mov
mov
inc
push
adc
daa
mov
pop
in
or
inc
sub
xchg
adc
add
popf
xlat
bound
(bad)
push
in
fwait
popa
jbe
inc
ret
fisub
fs
adc
xor
push
dec
add
push
cmp
loope
int
and
mov
cmp
lods
scas
inc
push
idiv
in
call
pop
cmp
sbb
push
rcl
inc
test
fidiv
bound
aam
sbb
jmp
dec
adc
icebp
push
pop
inc
loop
pop
outs
retf
or
ja
loop
pop
and
mov
outs
test
dec
nop
lahf
adc
xor
mov
mov
movq
adc
or
out
imul
aas
pop
aaa
call
outs
mov
mov
mov
call
jmp
cmp
push
daa
(bad)
jmp
inc
movs
push
push
ret
mov
rsqrtps
add
jmp
test
mov
mov
dec
sub
jnp
mov
dec
sub
sbb
dec
into
mov
les
pushf
jne
add
add
lods
jnp
push
imul
cld
push
adc
mov
sbb
mov
push
into
popa
test
push
fdiv
pushf
loope
mov
inc
lds
xchg
test
dec
gs
sbb
adc
push
push
je
test
or
xor
aas
mov
movs
fs
inc
mov
ins
out
mov
pushf
pop
xor
xchg
in
aaa
imul
aaa
sti
cmp
imul
push
shl
es
fisubr
inc
loop
pop
jecxz
mov
push
adc
in
adc
xchg
sub
rcl
fcom
and
popa
push
out
inc
addr16
pop
inc
movs
sbb
dec
(bad)
pop
(bad)
add
or
cmc
nop
xor
cwde
mov
gs
inc
jmp
pop
mov
mov
dec
and
les
mov
add
(bad)
pop
mov
popf
and
xchg
lahf
mov
les
scas
cmp
cmp
movs
sbb
jg
or
sub
and
xchg
and
test
js
(bad)
push
aaa
cmps
dec
(bad)
gs
pop
cld
ins
dec
bound
in
cmp
std
test
icebp
lock
xchg
xor
or
cmp
outs
pushf
adc
bound
loop
mov
mov
out
iret
mov
cmp
and
cmc
test
xchg
addr16
fcmovnu
not
data16
add
mov
mov
retf
adc
lods
sub
mov
xor
(bad)
fadd
cmp
test
and
cmp
loopne
jg
std
cmp
mov
mov
mov
nop
mov
mov
adc
and
shr
xchg
cmp
retf
shl
std
aad
call
pop
add
mov
clc
dec
jnp
pop
jne
int3
pushf
nop
cmc
out
pop
sub
xchg
call
xor
and
repnz
int3
and
inc
iret
push
xor
xchg
faddp
add
inc
loope
jnp
cli
mov
cli
xor
fsubr
sub
ret
ds
test
jb
push
cmps
or
aaa
cmc
pop
clc
push
(bad)
fild
mov
mov
pop
pop
neg
jb
add
js
(bad)
cmps
cli
mov
out
(bad)
xchg
cmps
lods
icebp
mov
(bad)
dec
inc
pop
ins
pusha
dec
fild
or
push
lods
fmul
or
inc
add
popf
icebp
int
mov
mov
push
xor
mov
(bad)
jl
leave
push
dec
cmp
add
jg
adc
sti
xchg
xor
or
rcr
xchg
hlt
add
sbb
js
xchg
dec
sbb
test
mov
rcr
fistp
mov
jnp
jmp
dec
pop
ins
pop
in
dec
xchg
jns
lds
inc
sbb
inc
mov
mov
add
shl
push
les
xor
sahf
test
fldcw
leave
mov
and
imul
shl
js
or
inc
push
mov
sub
fdivr
mov
push
push
dec
push
mul
push
mov
add
adc
in
lock
repnz
cmps
pop
daa
(bad)
jecxz
test
stos
mov
mov
out
mov
jb
repnz
cmp
(bad)
ss
repnz
aam
popa
shl
mov
rcl
mov
sbb
into
fldcw
pop
add
push
inc
fadd
lahf
xor
adc
jg
push
repnz
sbb
icebp
xchg
push
mov
sbb
call
or
(bad)
jne
adc
(bad)
into
lods
push
push
adc
leave
mov
sub
fbld
cmp
xchg
add
push
cmp
mov
daa
repnz
jmp
ss
fdivrp
cmps
mov
xlat
test
or
pusha
mov
test
dec
movs
dec
dec
push
stos
adc
aaa
sbb
pusha
nop
and
push
lea
dec
inc
mov
fnstcw
jo
outs
sysenter
(bad)
adc
rol
xor
fwait
mov
push
cmp
add
jge
aad
(bad)
out
(bad)
call
fiadd
mov
test
jl
in
and
mov
jmp
psllw
and
pop
sbb
in
mov
push
out
lahf
and
dec
xor
int3
xlat
mov
mov
into
xor
push
test
cli
daa
cmp
jno
xchg
xor
call
adc
rcl
retf
lds
add
xor
(bad)
jl
pop
push
dec
arpl
fwait
mov
pusha
aaa
jo
push
in
fadd
jmp
sti
mov
mov
sbb
fisub
dec
inc
push
bound
xor
sbb
rcr
test
cmc
or
sub
mov
es
pop
adc
inc
hlt
fnstcw
stc
inc
dec
jge
or
xchg
dec
xchg
dec
cs
adc
xchg
scas
cdq
fnsave
imul
sub
pop
sbb
lock
inc
sbb
and
lea
add
xlat
leave
xchg
es
push
and
or
fcmovb
xchg
mov
(bad)
mov
dec
mov
jmp
cwde
fnsetpm(287
xor
jns
lock
ds
adc
clc
rcl
jecxz
cwde
mov
stos
xor
dec
mov
mov
aaa
pop
loop
mov
sbb
cld
mov
add
or
cwde
xchg
sbb
in
push
jmp
ror
push
mov
jo
inc
(bad)
imul
jns
ret
call
cmp
scas
pop
das
(bad)
adc
mov
ja
push
outs
xor
push
into
and
xor
jle
mov
pop
mov
or
pop
fisubr
pusha
jb
jge
inc
iret
sbb
jecxz
ret
cmp
out
cmp
enterw
inc
cmps
int
ja
push
dec
stos
popf
fucomp
jge
arpl
shl
sbb
dec
mov
and
or
dec
neg
lods
and
adc
test
lock
xor
inc
hlt
idiv
push
imul
mov
(bad)
loop
xor
loop
imul
stos
ror
and
sub
jbe
mov
fst
test
test
push
ds
aam
scas
jmp
mov
or
pusha
mov
sahf
inc
xor
movs
add
sbb
mov
in
add
push
and
jle
lods
fistp
add
sti
cmc
outs
movs
pop
ins
mov
cmp
js
mov
scas
arpl
inc
and
cmps
test
call
sbb
repnz
or
shr
jl
xchg
push
out
cmc
and
sbb
add
aam
mov
jno
mov
jb
cmps
movs
inc
mov
adc
cmp
pushf
into
sub
mov
dec
ins
repnz
imul
or
cdq
and
pop
hlt
jmp
loopne
(bad)
sbb
or
inc
mov
retf
stos
jne
pop
jbe
xor
inc
jl
stc
jecxz
imul
mov
div
dec
jg
pop
mov
sbb
pusha
fild
and
ins
test
scas
pop
push
cmp
and
xor
loope
lods
bound
xchg
out
fistp
out
ret
repnz
stc
in
cli
mov
call
jle
out
enter
jb
je
pop
jo
stc
ret
test
mov
adc
dec
repnz
in
call
push
dec
push
mov
call
sub
xchg
fist
jo
adc
gs
mov
sub
stc
inc
psubsw
pop
push
je
push
add
inc
or
xchg
fs
outs
ja
aam
dec
pop
cmp
cmp
sbb
mov
ficom
pop
dec
jecxz
push
call
sbb
push
mul
jae
clc
adc
mov
test
cmp
sar
xlat
dec
retf
dec
inc
mov
fnsetpm(287
mov
cmps
jmp
movs
mov
jno
fwait
fwait
enter
imul
mov
in
jb
(bad)
sti
sub
aas
inc
add
sbb
push
inc
gs
xchg
hlt
mov
jns
xchg
push
jnp
std
sub
ror
inc
mov
inc
jge
pop
xor
test
into
jp
push
mov
and
stc
jb
mov
(bad)
sbb
dec
jmp
ror
cmp
dec
adc
movs
inc
sbb
test
mov
in
mov
adc
out
mov
fild
dec
jmp
(bad)
mov
(bad)
enter
outs
sar
pop
mov
lods
cmp
pushf
inc
movs
loopne
leave
fistp
xchg
in
div
clc
pop
dec
(bad)
fiadd
push
les
shl
in
push
xchg
aad
pop
add
jnp
mov
add
loop
fs
or
in
(bad)
pop
out
inc
add
mov
imul
mov
add
retf
(bad)
mov
rol
cmp
div
mov
mov
pop
retf
jb
sbb
(bad)
iret
mov
mov
pop
aad
(bad)
cmp
fdiv
dec
or
and
(bad)
enter
adc
(bad)
inc
(bad)
jae
pop
pop
pusha
inc
jnp
push
cmp
mov
call
xchg
pmulhuw
xor
cmc
mov
dec
xor
imul
mov
clc
addr16
ror
adc
fsubp
pop
adc
pop
adc
(bad)
sub
hlt
mov
in
inc
cmp
mov
sub
sub
xor
dec
dec
cmp
adc
into
ficom
add
push
test
into
adc
mov
retf
in
mov
jg
out
or
cmp
clc
mov
shl
jo
xchg
cmps
aam
sbb
rcr
test
jbe
mov
or
out
fbld
xor
scas
jnp
loope
cmp
std
xchg
xchg
mov
rcr
cmp
mov
and
jmp
mov
mul
cwde
xchg
lock
sar
pop
mov
sub
fstp
inc
cmp
(bad)
push
pop
lock
jae
sbb
nop
mov
bound
ficomp
jbe
dec
in
cmps
out
xchg
or
inc
repnz
fst
sbb
enter
add
xchg
aas
popf
(bad)
push
into
dec
jle
scas
fidivr
inc
gs
push
mov
mov
repz
sub
xchg
(bad)
(bad)
loope
xchg
xlat
mov
cwde
into
stos
mov
es
popf
mov
sub
hlt
adc
pusha
lods
and
arpl
cs
lahf
jecxz
inc
aas
pusha
cmc
push
and
cld
rcl
sub
lock
popf
pop
stos
push
jl
jo
test
push
loope
and
icebp
sti
(bad)
icebp
add
cmp
pusha
test
xchg
pop
dec
dec
mov
pusha
mov
gs
mov
cmp
sar
test
pop
popa
inc
bnd
dec
mov
mov
pop
jbe
push
rcl
bnd
stc
sub
scas
lea
cmc
movs
mov
mov
test
mov
shl
add
pop
xchg
loope
push
lea
loopne
cli
sub
and
ret
inc
cli
lods
sbb
push
inc
fs
or
adc
stos
mov
push
cmps
sbb
pop
adc
pop
ins
mov
push
mov
jle
mov
pushf
and
shl
es
sbb
jg
outs
lahf
or
xor
jmp
mov
mov
xlat
pop
repz
sbb
mov
dec
push
(bad)
mov
mov
ret
adc
pushf
shl
ins
sub
pop
xchg
(bad)
xor
dec
(bad)
arpl
cld
cmp
loope
sub
mov
sahf
mov
push
xchg
or
pop
mov
pop
lods
dec
outs
cs
pusha
xor
or
dec
pop
and
xor
les
jo
mov
gs
scas
mov
pop
jmp
mov
(bad)
dec
ds
dec
pop
xor
sahf
xlat
xchg
retf
movs
dec
mov
lea
inc
shl
sub
addr16
pop
es
call
nop
inc
push
fs
fisttp
or
sar
pushf
jmp
jmp
xor
leave
js
cmp
(bad)
fadd
fsubr
mov
lea
cmp
mov
in
and
dec
mov
retf
aas
inc
daa
aad
and
(bad)
div
ficom
sub
cmp
fidiv
or
in
dec
(bad)
mov
dec
push
sar
jae
or
mov
arpl
shl
(bad)
or
fsub
mov
mov
push
cmc
arpl
xchg
push
or
sub
mov
jmp
push
(bad)
cdq
dec
mov
ds
or
push
sar
adc
repz
sub
mov
ins
mov
fnstsw
and
int3
dec
jnp
xor
dec
adc
cmp
mov
(bad)
mov
out
and
(bad)
shl
inc
sbb
in
xlat
mov
jns
lahf
repnz
mov
mov
aas
sbb
ficomp
out
popa
sub
js
call
xor
test
fwait
retf
mov
dec
xor
lock
movs
fmul
fcmovnu
mov
ret
dec
sbb
enter
imul
sub
divps
push
mov
es
bound
cli
or
jnp
test
and
xor
jne
pop
clc
xchg
data16
(bad)
sub
aad
std
shl
and
outs
lods
mov
mov
dec
cmp
fsubp
jnp
inc
or
arpl
test
xchg
icebp
loopne
int
cmp
xor
in
jnp
stos
add
push
push
test
fidivr
inc
and
mov
inc
fimul
push
push
xor
scas
sub
push
pop
outs
sbb
test
loope
in
imul
mov
bswap
scas
test
push
add
dec
scas
stc
sbb
add
cmp
das
je
or
jb
and
xchg
jmp
fnstcw
inc
pop
and
dec
les
sbb
dec
add
mov
or
xchg
xchg
inc
lods
mov
ja
mov
test
dec
sub
(bad)
hlt
xor
fiadd
xchg
cmps
es
pop
dec
jmp
test
inc
push
or
out
(bad)
into
jo
shl
mov
leave
bound
and
push
jecxz
mov
jle
stos
outs
arpl
pop
pop
repz
add
out
adc
mov
inc
sbb
jae
mov
inc
aaa
pop
cmp
pop
mov
repnz
pop
push
and
dec
popf
pop
sbb
iret
pop
dec
xchg
sbb
in
mov
fwait
shl
jge
leave
js
imul
popa
lds
sbb
add
repz
je
fcomp
xchg
pop
inc
cmp
and
dec
popa
or
jp
sub
push
div
popa
bound
xor
ja
jg
cmp
sbb
jmp
push
add
add
arpl
popa
test
mov
ret
push
push
push
add
push
dec
mov
xchg
jle
cmp
push
or
pushf
cs
adc
add
outs
mov
movs
mov
shl
push
dec
(bad)
fimul
jp
in
add
fisubr
push
push
or
xor
push
aaa
jo
pop
add
js
(bad)
loopne
ins
(bad)
repnz
xor
mov
loop
sti
xor
pop
push
data16
or
push
pop
push
popf
sub
pop
out
ss
test
and
lahf
mov
call
jge
adc
ret
jnp
jmp
in
mov
and
jo
movs
inc
in
jo
jl
shl
jmp
mov
xor
push
xor
and
dec
mov
enter
cmps
inc
out
sub
push
pop
cmp
ret
js
leave
pop
int
mov
pop
pop
std
fs
or
or
and
inc
sti
out
jmp
sbb
mul
jno
es
sub
mov
sahf
push
fs
push
cmps
shl
add
sbb
gs
movs
xchg
and
mov
push
sub
lock
in
test
inc
les
add
jne
test
outs
inc
loop
xchg
cs
mov
pop
cmp
sbb
xchg
or
ja
out
ss
addr16
add
das
fisttp
call
or
rol
adc
pop
sbb
cli
popf
inc
and
repz
lods
xor
jecxz
pop
dec
fadd
int
(bad)
das
das
aad
enter
(bad)
push
or
mov
test
pop
arpl
cmp
inc
jecxz
test
icebp
mul
mov
fild
cmp
shl
(bad)
adc
icebp
xor
and
add
scas
lods
lea
xchg
pusha
ja
lea
out
and
pop
mov
aas
fidivr
repz
xchg
ins
fnstenv
and
popf
xor
scas
xor
sub
sbb
xlat
outs
in
pop
xor
adc
mov
sbb
addr16
dec
add
cs
jg
cmp
inc
or
ja
sbb
cs
test
mov
inc
cdq
sar
mov
lods
mov
or
movs
lock
fs
sar
push
sbb
daa
cli
rcr
ret
adc
cmp
pop
popa
pop
aaa
lahf
mov
dec
and
test
inc
xchg
ins
sbb
fwait
mov
jbe
sub
mov
jns
shl
popf
mov
xchg
jae
je
lods
test
xlat
pop
push
dec
cmp
cmp
or
push
out
out
mov
sub
mov
add
bound
mov
out
outs
test
mov
shl
ret
sbb
jne
or
push
mov
lods
inc
loop
mov
gs
cli
inc
add
fmul
fadd
into
mov
cmp
mov
stc
xchg
mov
and
daa
repnz
pop
or
pusha
or
movs
pop
aas
not
dec
cmp
imul
xchg
push
xchg
mov
cs
mov
or
std
imul
jge
dec
jmp
adc
popf
xchg
std
mov
xchg
add
adc
push
dec
push
dec
push
mov
(bad)
out
push
sar
shr
mov
lds
out
pop
mov
int3
pop
fwait
mov
movs
inc
mov
stc
in
movs
bound
mov
test
add
mov
adc
cmp
int
lods
and
pop
mov
adc
xor
addr16
and
sbb
lea
hlt
jmp
jle
jp
or
shl
push
sub
fsubr
mov
pop
sbb
sbb
scas
and
adc
push
lods
mov
sar
xchg
arpl
test
sbb
cmps
push
and
fidiv
iret
dec
test
scas
inc
add
jno
stos
jno
sub
in
dec
in
leave
pop
cli
mov
xchg
das
popa
sub
pop
rep
and
cwde
sub
neg
xor
punpckhwd
fdivr
aad
inc
xor
pop
xchg
in
addr16
cld
repz
xchg
sahf
shr
cmps
jmp
es
fs
test
out
xlat
dec
mov
push
retf
int
inc
icebp
pop
cmp
(bad)
jns
add
push
ror
push
stos
xor
push
push
mov
add
nop
jo
jecxz
sti
mov
mov
retf
in
or
std
fwait
xchg
and
jge
sar
and
mov
(bad)
(bad)
jns
outs
sub
adc
xor
sbb
leave
jns
and
fwait
push
lahf
pop
xchg
std
jns
and
loope
jo
scas
xchg
inc
cdq
push
imul
jge
mov
pusha
jb
stos
mov
aaa
sbb
push
fcmovnbe
inc
sub
(bad)
and
shl
sar
adc
adc
sub
scas
add
or
cmp
xor
fsubr
inc
mov
(bad)
mov
(bad)
adc
jae
pusha
sbb
mov
or
pop
ja
sahf
fdiv
cmps
jnp
aam
push
inc
dec
push
inc
mov
jbe
pop
dec
push
rcr
fadd
mov
and
fidivr
std
fwait
mov
mov
mov
les
popa
int
jmp
aam
sbb
pop
call
inc
mov
add
in
ss
add
or
and
add
movs
xor
pop
or
xchg
test
sub
(bad)
aaa
and
push
icebp
mov
xor
(bad)
sbb
mov
and
lods
xchg
test
jge
retf
jb
add
push
in
and
sub
inc
pusha
mov
dec
push
xor
xchg
ins
pop
loope
pushf
jp
and
sar
jae
adc
add
sub
pop
jnp
aam
scas
ins
cmp
ret
popf
pop
push
or
pop
mov
test
sbb
into
jmp
cld
daa
out
jo
pop
bound
mov
jae
in
xchg
and
mov
test
mov
stos
or
das
mov
fld
fnsave
and
mov
(bad)
mov
push
pop
jg
sub
popf
inc
mov
cs
add
inc
fild
test
call
dec
cmp
pop
fild
test
arpl
mov
adc
(bad)
js
pop
adc
ins
cdq
sub
xchg
clc
mov
dec
repz
jnp
or
inc
int3
or
in
ror
push
clc
(bad)
sbb
jno
into
pushf
iret
add
repz
cmp
mov
mov
outs
push
popa
scas
out
add
hlt
push
adc
repz
cmc
fbld
jns
cdq
cmp
je
inc
mov
lds
rcl
xlat
adc
repz
adc
sub
push
imul
sub
mov
jmp
ins
adc
jmp
push
mov
(bad)
sub
je
(bad)
jmp
or
icebp
mov
fs
enter
jecxz
and
sub
rcl
rcr
or
rcl
adc
clc
in
pop
shl
xor
pop
ret
mov
mov
repnz
cmp
adc
pop
push
(bad)
iret
mov
or
inc
loope
fwait
rol
jb
jno
add
push
xor
inc
jo
pop
or
(bad)
jge
gs
jmp
aad
stos
push
mov
imul
fcmove
pop
fidivr
in
pop
jg
add
pusha
frstor
hlt
push
mov
ins
aaa
cmps
add
mov
js
push
loop
xor
pop
cmp
out
xchg
sbb
cmp
pop
mov
cmp
sub
neg
cdq
jmp
pop
xor
dec
dec
add
mov
inc
jb
nop
jae
in
cmp
and
adc
or
and
fadd
pop
mov
outs
cld
jecxz
push
icebp
adc
jb
hlt
loop
fbstp
dec
jge
push
lahf
sbb
in
and
add
pop
hlt
mov
inc
cmc
or
pop
inc
scas
jmp
mov
adc
xchg
xor
mov
fsubrp
push
mov
xchg
out
mov
jnp
(bad)
xor
int
sbb
push
inc
xchg
and
xor
cmp
nop
cmp
fiadd
or
cld
jae
add
xchg
inc
mov
pop
hlt
clc
cmp
dec
xchg
and
dec
cmp
or
jmp
iret
cmc
aam
fldpi
and
pop
mov
jecxz
or
and
imul
mov
out
and
int
mov
bound
push
jns
jle
shl
sti
sbb
jmp
movs
adc
xchg
pusha
arpl
adc
call
(bad)
mov
imul
push
inc
jle
out
imul
movs
loop
xor
jmp
cmp
dec
arpl
xchg
test
xlat
xchg
pop
shl
dec
dec
jge
pop
retf
(bad)
out
shl
call
cwde
pop
adc
outs
pop
sbb
lahf
xlat
movs
fs
sub
xchg
and
es
jl
dec
push
in
sbb
leave
cs
adc
sbb
dec
in
iret
push
call
stos
fsubr
mov
scas
and
or
shl
test
inc
shr
aam
stc
pop
cmp
mov
pop
mov
cmp
sub
sub
xchg
mov
in
repz
jno
add
loop
aas
(bad)
or
xchg
cmps
ret
add
popa
sbb
icebp
movhps
ror
ror
dec
pop
into
lods
inc
lods
xchg
fs
mov
(bad)
cs
shl
xor
adc
(bad)
rcl
call
gs
push
and
cmps
popa
or
sahf
jp
adc
int
jmp
mov
sub
xor
and
cmp
mov
hlt
js
sbb
es
aam
or
pop
push
int
popa
adc
or
adc
adc
mov
dec
and
sysret
inc
xchg
xor
(bad)
push
mov
outs
lods
rcr
and
push
fwait
jg
sub
or
xor
fisubr
jmp
and
pop
int
dec
jns
pop
imul
xor
mov
aad
pop
(bad)
cmc
outs
adc
and
(bad)
popf
xor
pop
and
in
add
aam
mov
xadd
xor
push
add
jg
js
inc
push
sbb
cmp
ret
inc
mov
dec
push
pushf
jbe
xor
inc
out
xchg
imul
shr
xlat
xor
cmp
imul
out
enter
outs
jg
inc
adc
xchg
aad
stc
icebp
push
add
mov
aad
pop
arpl
int
arpl
out
xchg
out
cmp
shl
dec
mov
mov
add
jmp
sub
loopne
movs
xor
retf
pop
lahf
mov
outs
pop
sub
call
int
test
clc
aaa
fcmovb
loope
dec
imul
jecxz
inc
mov
xor
lds
pusha
mov
rcl
aam
arpl
int3
mov
pop
(bad)
leave
inc
or
pop
ret
xchg
adc
mov
ins
popf
add
loopne
hlt
daa
lds
cmp
cld
and
jbe
dec
sub
mov
fwait
dec
fist
aam
aas
sbb
xor
out
pop
push
jne
bound
dec
mov
fsubr
xlat
push
xchg
and
jbe
cmps
add
fwait
xchg
cmp
jmp
(bad)
lahf
xor
repz
add
xchg
test
(bad)
lock
inc
xchg
idiv
jg
jnp
data16
push
mov
lds
mul
mov
mov
and
out
push
(bad)
xor
fist
dec
add
outs
fist
test
ffree
jns
or
rol
sbb
xchg
aaa
mov
cmp
mov
ja
push
gs
mov
xor
test
pop
jg
inc
xlat
clc
lods
pop
mov
or
call
jge
movs
pop
cld
add
das
mov
loopne
into
adc
in
mov
call
adc
ja
cmc
inc
inc
repnz
cmp
retf
mul
jg
push
mov
cmp
das
xor
iret
cmp
inc
cmp
ins
mov
or
and
add
jg
sti
sub
mov
mov
jmp
jmp
cdq
push
in
in
xor
and
cmp
or
pop
sbb
mov
push
mov
jp
cmp
mov
(bad)
and
mov
xchg
outs
mov
adc
cdq
mov
hlt
les
test
jp
mov
imul
std
scas
mov
shl
loop
lock
push
push
ins
int
jns
lds
call
movs
pop
mov
jg
inc
(bad)
(bad)
mov
test
aaa
xchg
cmp
push
hlt
jle
jo
mov
std
mov
push
xchg
in
leave
stc
(bad)
cmp
push
fbld
xor
shl
in
mov
clc
jp
push
test
or
dec
shl
push
dec
jg
mov
jb
push
es
outs
and
std
ror
sbb
movs
iret
cmp
retf
mov
push
sbb
je
push
pop
es
push
sti
shl
stos
adc
sahf
dec
addr16
xchg
xor
or
mov
je
jnp
cmp
jmp
arpl
stos
cmp
movs
clc
and
mov
inc
lods
or
scas
or
jbe
sar
and
and
arpl
xor
pop
and
lods
in
jmp
and
fcmove
hlt
cmc
and
mov
mov
inc
mov
js
movs
stos
adc
les
pop
dec
inc
sub
mov
ss
shl
xor
adc
int3
jnp
dec
mov
jp
inc
cmp
or
push
cmp
pop
mov
sbb
pop
jae
and
lods
out
push
inc
mov
cld
fs
in
test
mov
jmp
sbb
stos
jl
scas
cmc
sbb
es
stos
adc
sti
jmp
sbb
fcom
add
popf
dec
mov
push
xchg
push
fisttp
test
inc
jb
sub
mov
jb
ret
js
(bad)
cmp
hlt
and
int3
cmps
pushf
outs
iret
cmp
mov
mov
sub
jmp
pop
and
sbb
fdiv
in
pop
out
aam
jle
bound
pop
into
(bad)
adc
mov
out
inc
mov
aas
stos
cmps
xchg
ror
fisub
loop
addr16
mov
das
popf
push
fisubr
popf
add
xlat
scas
push
xchg
pop
popa
in
aad
push
xchg
xchg
cmps
mov
push
xor
and
sub
repz
pop
fisttp
shl
adc
dec
or
pop
sar
mov
ds
sbb
call
and
das
inc
push
daa
pop
pop
dec
fimul
jo
add
dec
pop
push
jle
cmp
cmp
inc
sbb
push
ins
sub
push
enter
out
push
mov
sbb
jno
fwait
in
cmp
addr16
gs
fild
or
out
call
pop
inc
xchg
pop
dec
shl
dec
jno
idiv
hlt
mov
lock
outs
adc
iret
xchg
arpl
out
lahf
data16
jbe
clc
addr16
jmp
mov
adc
add
outs
outs
inc
and
(bad)
std
xchg
(bad)
mov
ja
sub
or
sti
mov
ds
mov
push
pop
nop
out
xor
sub
fld
push
test
xor
adc
push
je
(bad)
fmul
jg
shr
jmp
(bad)
sub
addr16
cmp
dec
cmps
fstp
jecxz
data16
xchg
in
jnp
push
les
push
mov
pop
sub
xchg
(bad)
out
lods
nop
xor
sbb
out
and
pop
xor
aaa
or
movs
mov
shl
dec
call
cmp
cld
mov
xlat
mov
jb
pop
jo
outs
cmp
mov
jae
in
rcr
sub
mov
int
rol
jmp
pusha
push
cmps
sub
adc
stos
sti
push
add
inc
popa
outs
pushf
cmp
mov
jl
dec
(bad)
pop
dec
xchg
push
(bad)
shl
jge
paddsb
dec
aaa
xchg
and
adc
scas
push
aad
icebp
popa
adc
pop
push
push
dec
cwde
les
gs
dec
das
sbb
and
adc
mov
emms
mov
inc
mov
cdq
jne
sti
cmp
cmp
xchg
iret
mov
mov
mov
xchg
ins
adc
jnp
retf
xchg
sti
pop
sbb
mov
add
inc
adc
rol
test
mov
cmps
sbb
pop
mov
mov
std
inc
or
hlt
inc
js
add
push
xchg
daa
int3
mov
xchg
(bad)
int
inc
(bad)
cdq
fstp
sbb
mov
fwait
mov
jne
xchg
in
icebp
sub
or
mov
mov
or
xor
movs
bound
sbb
mov
and
lock
xchg
div
in
loopne
movs
mov
gs
ins
adc
mov
ret
es
cmp
les
test
iret
push
dec
adc
aaa
int3
ret
pop
pop
out
loope
xchg
mov
(bad)
xor
adc
jmp
popf
or
lods
push
aaa
dec
js
cmp
lahf
and
xlat
inc
push
pop
xor
lods
mov
or
mov
xor
cmp
lock
or
add
mov
out
scas
(bad)
adc
nop
out
jg
mov
cld
scas
cmp
ins
outs
popf
xchg
or
cmp
mov
push
push
and
call
jo
xchg
xchg
xor
add
mov
add
mov
(bad)
dec
pop
dec
sbb
shr
jl
add
das
stos
dec
xlat
add
repz
pop
sahf
pop
sbb
clc
(bad)
ds
push
inc
mov
dec
repz
xor
inc
push
dec
fwait
dec
pop
test
inc
pop
and
cmp
bound
fisttp
mov
cmp
in
fs
call
cmp
in
xor
int3
int3
xchg
xchg
jmp
inc
dec
cs
jb
fistp
jns
mov
repz
sub
push
fild
out
addps
leave
pop
mov
loopne
mov
sbb
(bad)
pop
fs
aas
mov
or
mov
jl
adc
stos
add
mov
jnp
pop
cmovno
in
sub
stc
jns
cmp
add
dec
dec
add
cmps
xor
lahf
js
fistp
mov
(bad)
sbb
les
sbb
add
mov
jg
mov
cmps
push
xchg
or
loope
retf
movs
mov
sub
xchg
jne
mov
test
nop
ror
xor
arpl
jmp
sub
test
mov
mov
add
xor
lods
pop
xchg
push
cdq
xor
mov
adc
and
(bad)
adc
movs
mov
in
xor
xlat
repnz
inc
inc
jns
and
push
retf
stos
sti
aad
dec
sbb
push
xor
(bad)
imul
outs
mov
mov
jg
(bad)
scas
or
je
rcl
sub
push
push
mov
push
jg
or
sub
sti
dec
mov
pusha
mov
xchg
retf
pop
push
lfs
jle
icebp
lods
sbb
and
lahf
jne
dec
jmp
repnz
(bad)
fwait
adc
dec
adc
sub
jmp
and
fs
hlt
imul
cmps
fild
xchg
int3
sub
out
dec
inc
movs
push
push
rol
cs
not
arpl
adc
jmp
and
push
mul
cmp
push
fcmovb
xor
or
gs
xor
lahf
cmc
mov
ins
add
sbb
jno
jbe
jle
mov
ds
push
popa
ja
dec
lea
popa
les
test
push
je
add
dec
sbb
adc
xchg
mov
test
dec
gs
sub
aas
jbe
add
push
outs
lock
loope
mov
inc
jne
scas
and
sbb
push
mov
xchg
jmp
(bad)
enter
lds
lahf
push
shl
shr
mov
stos
fs
sbb
mov
test
lods
loop
ins
(bad)
(bad)
ret
rcr
loopne
fidivr
or
hlt
popf
(bad)
cmp
sub
xchg
nop
mov
movs
jmp
add
add
nop
aaa
mov
cmps
in
mov
dec
int3
inc
cdq
pop
jp
fcom
xchg
or
jae
call
cmps
add
in
fisttp
dec
popa
mov
ret
in
and
cmp
xchg
lds
aas
es
inc
mov
xor
dec
adc
fiadd
ds
lds
popf
sub
pop
xchg
pop
push
sahf
or
fmul
jb
idiv
xor
out
stc
mov
or
pop
dec
or
dec
retf
pop
pusha
inc
fsubr
push
test
sbb
mov
xchg
(bad)
out
and
jmp
xor
stc
les
mov
add
pop
xchg
stos
cmp
stos
cmp
cwde
fisttp
sbb
sar
call
imul
fninit
mov
enter
xchg
jmp
sbb
fmul
stc
push
mov
fwait
es
push
mov
test
jg
cld
out
loopne
pop
cmp
inc
xchg
movs
xor
or
arpl
and
sbb
movs
jmp
movs
mov
ins
sub
xchg
add
imul
cmps
and
sbb
popa
es
ds
push
out
aaa
pop
push
repz
sbb
adc
push
add
ins
push
fxch
sti
(bad)
test
push
idiv
int3
test
sbb
cmp
ins
jp
mov
xchg
data16
jno
pop
add
inc
iret
or
ficom
lock
mov
(bad)
mov
aas
cmp
retf
out
les
xchg
ds
xchg
dec
ja
loop
and
dec
add
xor
je
xchg
(bad)
lea
mov
sbb
pop
adc
add
or
mov
mov
in
pushf
loope
xchg
cld
ret
iret
fisub
mov
sbb
or
push
test
sub
(bad)
out
ret
add
in
scas
sahf
add
xchg
stos
stos
inc
mov
dec
mov
push
rcr
outs
call
or
or
pop
jb
xor
stos
xor
jmp
push
and
scas
ret
imul
sbb
cli
(bad)
mov
push
xchg
lea
jmp
sbb
cmc
arpl
mov
xchg
push
mov
out
sbb
cmps
popa
xor
ja
hlt
xchg
pop
mov
aad
push
pop
lahf
lea
retf
lea
dec
je
and
mov
xlat
ja
jp
ins
xchg
mov
shl
aas
data16
inc
and
cmps
loope
xchg
data16
xor
sbb
aad
lea
sbb
mov
dec
pop
mov
add
jns
scas
pop
mov
xchg
pop
into
mov
psadbw
pop
mov
inc
arpl
data16
les
xchg
lahf
icebp
dec
ss
cmc
dec
xchg
xor
xchg
dec
jmp
jno
outs
pop
push
mov
mov
dec
pop
les
jne
jnp
mov
or
(bad)
sbb
cs
out
xor
popa
push
xor
jns
or
dec
pop
stos
xor
cmp
outs
fstp
mov
xchg
aas
inc
and
add
mov
gs
jge
xor
add
aam
aad
xchg
mov
xchg
xor
jmp
jecxz
loop
rcl
jnp
sub
fstp
xor
fnsave
inc
out
iret
sub
mov
dec
xor
stc
int3
jg
aad
add
xchg
mov
mov
jmp
ror
in
sbb
sbb
push
mov
repnz
(bad)
mov
xor
stos
or
ucomiss
test
jge
popf
mov
mov
jp
int
inc
mov
sti
cmp
(bad)
mov
jp
in
jge
mov
out
mov
repz
(bad)
call
jno
jmp
test
aaa
imul
xchg
cmp
out
pop
pop
pop
(bad)
xor
clc
sbb
cmp
inc
adc
test
pop
and
mov
movs
push
stc
cmc
cdq
inc
jno
paddusw
push
mov
inc
xor
push
cmp
sub
cdq
mov
dec
(bad)
xchg
fisttp
dec
mov
add
mov
pusha
arpl
loope
xchg
scas
add
pop
sub
or
popa
dec
xor
and
or
push
sub
sub
and
dec
pushf
or
inc
xor
inc
push
jecxz
cld
or
cs
aas
cmp
push
bound
pushf
pop
je
mov
shr
add
or
fmulp
rol
pop
jge
push
std
or
adc
test
imul
je
or
cld
mov
outs
loope
pop
or
cmp
mov
adc
cmp
or
dec
and
pop
(bad)
nop
add
icebp
and
cs
pop
sub
push
mov
shl
mov
mov
mov
ret
je
jbe
fwait
loopne
push
pop
aam
inc
pop
cdq
pop
xor
ja
xor
xchg
aad
(bad)
retf
sub
add
in
adc
inc
aaa
or
sbb
jnp
adc
jo
iret
test
mov
cmps
inc
js
in
or
aam
call
pop
mov
pop
fdiv
or
scas
retf
add
add
add
aas
ds
jg
shl
icebp
adc
xor
adc
sub
sbb
dec
xchg
sbb
cmc
push
pop
xchg
inc
inc
call
xchg
sar
adc
ds
pop
adc
jne
mov
repnz
icebp
(bad)
jle
inc
jge
pop
fmul
lock
sbb
jl
test
pop
jno
sbb
and
(bad)
mov
sub
sub
fs
jmp
dec
fcmovne
jp
in
inc
aaa
add
jp
inc
jmp
jg
inc
loop
scas
sahf
fcom
push
push
mov
dec
aam
inc
sahf
add
xchg
inc
scas
js
mov
push
cmp
mov
stos
pop
push
add
inc
ret
out
xchg
sbb
(bad)
mov
sub
xor
cmp
fwait
lahf
mov
dec
sbb
pop
xor
imul
shl
fidiv
scas
xchg
fcom
dec
push
js
adc
cmova
and
jae
pop
pop
jg
popa
add
cmps
mov
jne
(bad)
mov
and
push
add
scas
mov
out
mov
mov
mov
ds
adc
(bad)
dec
sbb
addr16
leave
pop
pop
and
(bad)
fst
idiv
mov
aad
clc
sbb
enter
sti
xor
jns
aaa
push
rcl
xchg
add
mov
adc
sub
inc
add
mov
in
dec
and
xor
aas
xchg
inc
iret
stos
push
scas
sub
push
daa
dec
sbb
in
inc
sbb
fstp
xor
aaa
retf
adc
xor
out
cmc
mov
pop
and
jge
scas
fst
psubusb
es
enter
in
(bad)
fdivr
jnp
sbb
adc
imul
outs
test
and
and
jmp
sbb
pop
mov
out
and
repz
or
mov
fldcw
ret
out
(bad)
cmc
push
pushf
es
in
mov
sub
mov
mov
mov
pushf
sbb
fs
in
(bad)
sbb
xchg
imul
je
cmp
mov
sahf
out
pop
ret
call
mov
push
sti
or
add
jmp
mov
dec
lock
xor
fs
xor
fcom
xor
cs
aad
imul
fisttp
adc
out
out
call
aad
pop
ret
pop
push
ins
mov
sub
dec
xor
das
dec
imul
repnz
adc
push
mov
mov
sub
push
sbb
ret
data16
ss
mov
xor
pop
jge
inc
jne
jb
call
mov
out
popf
out
jmp
mov
call
in
loop
mov
fcomp
cld
nop
jmp
test
sbb
(bad)
jmp
pusha
adc
retf
add
fwait
xor
je
aam
aam
push
and
leave
(bad)
adc
sahf
mov
push
shr
gs
and
jp
data16
out
sub
fcmovnu
jle
inc
jmp
add
fdiv
mov
rcl
jns
repz
stos
and
mov
pop
inc
pop
hlt
cs
call
(bad)
pop
bound
push
mov
rol
mov
neg
cdq
fisub
sti
mov
and
rol
sub
cdq
fstp
(bad)
cmp
icebp
fnsave
mov
xor
sub
pop
mov
and
ins
or
ja
add
mov
xor
sub
nop
out
xor
pop
push
add
pop
scas
add
mov
ret
mov
xor
mov
sub
in
push
sbb
ins
(bad)
xchg
jmp
and
and
loop
xchg
push
dec
sub
mov
xor
shl
ds
xchg
push
dec
hlt
add
cmp
add
repz
jb
not
lods
int
(bad)
pop
lods
jb
and
xor
inc
shrd
sub
push
jnp
in
and
jbe
test
aad
mov
je
xor
mov
hlt
retf
test
push
lods
mov
fsubr
and
(bad)
mov
shl
not
cmc
pop
cmp
pusha
jns
aaa
(bad)
ja
and
jmp
inc
mov
dec
and
push
stc
mov
jp
jae
jne
mov
xchg
es
or
jmp
jg
lods
jno
xchg
ins
js
nop
sub
les
push
retf
iret
cmp
es
pushf
cs
mov
pushf
mov
(bad)
sbb
test
gs
sbb
xchg
imul
out
adc
nop
aaa
add
or
xor
adc
add
add
mov
xchg
fwait
xor
lods
mov
mov
imul
mov
adc
inc
cmc
ret
shl
mov
pop
popa
fnsave
dec
sbb
jmp
into
xchg
sub
inc
push
mov
cmc
loopne
inc
es
adc
xlat
lock
mov
jmp
adc
pusha
mov
pop
xchg
push
xor
pop
(bad)
pop
int
xchg
sahf
mov
or
sub
mov
inc
adc
add
stos
add
cmps
and
lods
mov
xor
mov
enter
fmul
pop
pushf
xchg
add
ficom
aad
sub
cwde
jnp
xchg
sbb
dec
inc
and
adc
push
cmp
outs
or
mov
out
jne
nop
mov
xor
aad
sub
mov
xor
scas
movs
xchg
adc
pop
cmp
xchg
daa
push
cmps
sub
xchg
or
je
cmp
ror
(bad)
(bad)
cli
sbb
ins
aas
dec
mov
fisub
(bad)
cmp
sti
and
mov
bound
dec
push
xor
jle
cmp
jmp
das
fcmovnu
sbb
(bad)
fiadd
mov
dec
push
cdq
xlat
not
sub
mov
cmp
mov
fldenv
pop
mov
push
mov
push
sbb
addr16
cmp
in
jge
pop
sub
(bad)
inc
lods
imul
or
retf
adc
cmp
pushf
aaa
jb
adc
je
pop
sub
arpl
das
xor
cmovno
dec
mov
dec
test
and
and
and
test
dec
lods
outs
lock
mov
jmp
mov
nop
sbb
mov
mov
mov
push
in
pop
std
call
cdq
sub
(bad)
xor
cld
and
ret
(bad)
call
adc
retf
out
sub
in
mov
repz
sbb
cmp
daa
rcr
scas
and
xor
or
pop
cmp
retf
or
or
out
pop
sbb
adc
ret
ret
mov
mov
scas
(bad)
sbb
sbb
mov
data16
mov
xchg
add
dec
stos
mov
dec
cwde
dec
mov
mov
pop
jno
(bad)
and
xlat
(bad)
xor
js
cmp
mov
out
adc
adc
dec
addr16
dec
mov
sbb
and
out
int3
cdq
push
jnp
inc
dec
data16
mov
popf
add
pop
cmp
push
cs
inc
pop
stc
inc
or
dec
and
out
ds
mov
push
mov
sbb
lea
cmp
stos
xchg
stos
pushf
pop
cwde
push
xor
mov
into
movs
mov
retf
sar
outs
int
inc
cmp
jbe
stos
cli
test
mov
cli
aam
es
and
nop
in
ret
mov
cmps
sub
sbb
mov
cmp
pushf
lahf
inc
gs
fwait
xchg
sub
xchg
aam
sub
stc
add
xchg
mov
test
add
or
xor
cld
mov
mov
aam
fs
mov
lods
mov
stc
cs
sbb
mov
jae
inc
sbb
outs
jns
jle
adc
mov
pop
popa
xor
dec
fptan
repz
inc
enter
jle
add
add
retf
adc
cmp
(bad)
xor
lds
xlat
add
ins
jg
mov
mov
sbb
into
sbb
mov
repnz
leave
loopne
mov
and
mov
gs
sbb
clc
adc
xchg
xchg
ds
jo
test
adc
fisubr
xlat
jecxz
jae
(bad)
dec
jl
test
push
mov
dec
sub
pusha
fistp
inc
add
fistp
xchg
cmp
pop
rol
bound
xor
aaa
sahf
inc
pop
add
scas
mov
das
gs
(bad)
vmovhlps
pop
fst
pop
sbb
in
adc
ret
mov
mov
add
push
lock
cmp
shl
lods
(bad)
push
xchg
inc
mov
mov
jge
out
push
jnp
push
stc
jge
mov
dec
or
sbb
sbb
(bad)
shl
cmp
mov
push
cmp
arpl
test
sbb
repz
inc
xchg
test
cmp
or
popa
bnd
sbb
lea
sbb
cmc
pop
mov
stc
repnz
ja
push
test
pop
mov
inc
adc
cmp
js
add
in
inc
add
fmul
stos
mov
pop
addr16
mov
dec
jp
sub
inc
(bad)
popf
sbb
outs
daa
sbb
xchg
daa
dec
sti
and
dec
jmp
aaa
(bad)
sub
xchg
mov
movs
adc
xor
faddp
push
cli
add
fcom
mov
bound
inc
push
dec
jno
push
ins
cld
adc
lahf
(bad)
xor
push
outs
pusha
loope
mov
push
adc
retf
xchg
je
inc
or
dec
dec
mov
arpl
pop
fwait
push
jae
ret
or
arpl
jnp
and
daa
cmc
jecxz
jne
in
loopne
xchg
mov
mov
push
adc
(bad)
push
ins
pop
xor
sti
and
sbb
cmp
or
outs
cmp
ja
dec
push
scas
pusha
mov
loope
lea
scas
mov
stc
mov
sub
adc
ins
dec
and
jl
int3
jecxz
pushf
jmp
sti
iret
sub
stos
nop
leave
idiv
repz
or
inc
mov
or
movs
jle
dec
xor
ret
lods
add
push
ret
push
or
repz
mov
jmp
jecxz
cmp
adc
mov
push
xor
cli
or
or
inc
mov
xchg
sbb
jmp
shr
mov
push
pop
mov
add
sbb
ja
pop
mov
fbstp
into
imul
inc
loope
lahf
xchg
sbb
stos
adc
jnp
inc
dec
xor
mov
add
mov
pop
sbb
test
cdq
xor
adc
inc
dec
cmc
data16
call
lds
jo
outs
ds
cmp
int
or
dec
(bad)
in
cmp
pop
outs
shl
pop
mov
cdq
dec
push
mov
call
dec
dec
xchg
jae
int3
jns
inc
retf
push
add
xchg
jl
add
push
call
add
into
pop
imul
mov
add
xchg
adc
adc
jnp
sahf
aad
int3
sub
enter
ds
mov
in
hlt
xchg
mov
mov
pop
add
cdq
cs
sbb
outs
xchg
push
pop
fst
and
jl
xchg
call
ss
int
xchg
fadd
add
xchg
mul
repnz
mov
push
sahf
jge
mov
push
add
add
dec
sbb
and
dec
das
pop
cmp
dec
jge
shr
mov
push
int
jo
xor
xor
xchg
push
adc
in
mov
sub
ss
dec
mov
je
adc
xlat
cld
(bad)
hlt
call
and
xchg
jp
and
repnz
test
inc
dec
cmps
cmps
daa
in
(bad)
(bad)
pop
aaa
call
repz
outs
outs
fs
xor
mov
dec
out
ss
in
ror
(bad)
in
mov
rcr
sbb
ds
icebp
(bad)
sti
push
out
and
test
je
adc
cmp
aaa
lods
out
test
xor
xor
das
jno
bound
retf
mov
and
sub
out
jnp
fwait
and
mov
cmp
xor
fs
lock
mov
push
and
popf
retf
ja
retf
cwde
and
mov
call
mov
cmps
std
int3
jl
mov
scas
cmp
aad
fistp
add
push
adc
sahf
sbb
mov
and
mov
test
inc
lea
std
ins
sti
xchg
mov
lods
cld
test
int
inc
retf
mov
xor
mov
cli
jno
adc
test
jecxz
pop
mov
pop
push
mov
add
(bad)
ficom
dec
div
sub
cwde
leave
dec
push
cs
ret
ds
xor
jb
or
outs
mov
in
bound
mov
shr
dec
mov
into
push
es
pop
cmps
mov
push
loope
inc
push
sti
xor
and
mov
mov
push
sti
xor
ds
jae
(bad)
aam
fwait
scas
into
hlt
(bad)
mov
test
add
mov
inc
add
cmp
cwde
adc
outs
mov
icebp
or
mov
into
cld
lock
mov
mov
aad
bswap
out
mov
lock
rol
stc
cmp
out
lods
pop
sti
stc
lahf
cmp
test
xchg
rcl
gs
stc
jp
fistp
sbb
cmps
in
jb
and
hlt
mov
fidiv
add
hlt
in
loope
sub
cmp
xchg
stos
cdq
or
jmp
stos
xchg
cmp
movs
cs
adc
add
jge
jp
mov
inc
pop
jmp
push
adc
sbb
inc
inc
mov
out
cmp
movaps
add
repnz
adc
add
adc
stc
xchg
mov
(bad)
jmp
(bad)
into
(bad)
pushf
pop
imul
retf
gs
xlat
(bad)
adc
outs
outs
icebp
jp
lock
mov
xchg
or
ret
pop
test
adc
sub
(bad)
mov
push
test
xchg
fwait
das
retf
repz
mov
jg
lea
dec
pop
fdiv
sbb
test
cmp
test
pop
fdiv
mov
mov
dec
add
push
mov
xchg
fdiv
sbb
daa
push
xchg
out
cmc
ror
cs
jb
mov
test
shl
(bad)
out
cmc
es
push
(bad)
out
mov
in
inc
pop
movs
popf
rcr
loopne
and
cmps
imul
pop
ja
js
lods
push
push
bound
test
outs
dec
adc
mov
sub
xchg
xor
in
mov
pop
sbb
movs
lods
jecxz
sbb
xor
dec
(bad)
das
test
popa
popa
imul
adc
pop
nop
mov
aas
popf
clc
mov
ins
push
or
adc
test
add
scas
fwait
adc
jmp
pop
cli
sub
mov
cmp
mov
out
jmp
pop
xor
xchg
cmp
dec
pop
xchg
adc
xor
inc
mov
add
fistp
dec
icebp
pop
movs
sub
in
mov
pop
mov
fstp
loopne
pusha
test
fiadd
outs
les
call
inc
push
mov
ins
shr
iret
out
std
push
pop
repnz
(bad)
test
rcr
sti
gs
nop
pop
outs
into
mov
inc
inc
es
xchg
mov
xor
mov
jmp
int
les
push
adc
mov
and
adc
shl
cld
call
adc
ja
dec
mov
xchg
push
xor
xor
adc
(bad)
push
and
lods
mov
xchg
cdq
not
movs
int
fucom
xchg
(bad)
(bad)
es
mov
xor
jmp
je
test
cmps
scas
leave
add
mov
dec
inc
(bad)
add
test
pop
rol
movs
sbb
sbb
or
add
adc
adc
(bad)
movs
fwait
inc
fwait
cmp
cld
gs
sub
adc
pop
pushf
push
mov
adc
inc
ins
inc
shl
adc
adc
jg
and
dec
cli
and
jne
xchg
aam
cld
mov
popa
xor
shr
or
xchg
sub
(bad)
dec
imul
jae
cmc
jnp
jnp
or
or
pushf
xchg
sbb
in
adc
retf
repz
or
jg
das
enter
jmp
jae
mov
add
mov
mov
and
push
mov
cmp
inc
jnp
cmp
xchg
test
pop
cwde
outs
xchg
cmp
adc
or
jb
mov
je
daa
imul
sbb
jne
loope
rcl
dec
loope
out
add
add
inc
rol
movs
xlat
mov
pop
cmps
fadd
ret
sub
xor
bound
fs
mov
sbb
dec
mov
jmp
inc
pop
sub
retf
shl
add
adc
ins
sbb
les
loop
loop
xor
mov
out
test
call
scas
mov
movs
xchg
push
push
pop
add
popf
(bad)
or
mov
fsub
adc
sbb
loope
lahf
je
sbb
or
mov
mov
lea
mov
xchg
xor
int3
jp
pop
sbb
rol
push
dec
fs
jl
or
mov
arpl
fldcw
mov
lock
test
cs
repz
mov
bound
pop
ins
jno
jo
xchg
mov
jno
cmp
sub
cld
inc
pusha
pop
ins
inc
xchg
call
and
jae
popa
cdq
int
aas
sbb
xchg
xchg
inc
shr
mov
push
scas
sbb
pop
xchg
push
cli
cmp
jo
pushf
sbb
fadd
xchg
into
cmpps
sar
pop
fbstp
(bad)
clc
nop
cdq
shr
lock
and
imul
inc
inc
iret
mov
test
sbb
rcr
push
call
cmp
outs
xchg
dec
aad
and
sbb
pop
call
inc
mov
push
jmp
cs
lea
pop
pop
(bad)
jo
int
mov
jae
(bad)
fist
sbb
and
out
xor
and
stos
outs
adc
sub
or
addr16
sbb
mov
repz
inc
dec
sar
xor
add
js
mov
loop
sub
call
inc
(bad)
out
scas
dec
cdq
or
repz
shl
in
xchg
mov
mov
push
lods
jg
shl
sbb
mov
test
aas
std
push
mov
mov
call
cli
pop
sbb
aas
cmp
inc
cdq
cmp
pop
pusha
mov
scas
or
sahf
clc
imul
ror
dec
les
sbb
repnz
int3
push
mov
icebp
repnz
dec
or
daa
aas
jns
add
sbb
pop
push
(bad)
test
pop
mov
adc
shl
ficom
(bad)
out
mov
cmp
out
pop
dec
or
pusha
shr
in
cdq
xor
push
cdq
pop
mov
mov
pop
fucomi
shr
aam
js
dec
add
add
push
mov
xchg
jle
imul
mov
ss
xor
fs
nop
push
jmp
js
ret
sbb
pop
pusha
cmc
push
push
iret
leave
mov
sahf
or
loopne
enter
stos
xchg
call
test
cmp
mov
sub
jmp
(bad)
xchg
movs
test
sub
movs
(bad)
loopne
pop
add
jno
cmc
pop
inc
fcompp
jg
mov
loop
outs
xor
test
push
jge
(bad)
jb
inc
jl
test
cmp
mov
sub
jmp
mov
test
jae
das
(bad)
xor
mov
loop
fsubrp
mov
sti
inc
ror
movs
cwde
in
jmp
es
mov
enter
sbb
fs
and
sub
sub
leave
jge
mov
mov
out
cs
sub
aad
cmp
je
inc
dec
jno
sbb
adc
add
fnsave
xchg
rcr
jle
xor
dec
and
add
(bad)
add
sub
jl
mov
daa
lahf
pop
push
dec
fcmovbe
and
jmp
pop
mov
cmp
push
jne
push
xchg
retf
xor
or
or
inc
lea
rcr
retf
movs
ret
(bad)
mov
repz
add
dec
push
xchg
xor
gs
shr
jbe
cwde
mov
scas
sbb
cs
adc
xchg
xor
xlat
inc
mov
mov
ins
test
lods
add
call
in
sbb
(bad)
dec
addr16
sbb
dec
dec
addr16
push
dec
and
ss
dec
inc
pushf
fwait
inc
jbe
adc
push
repz
xchg
dec
mov
adc
(bad)
sbb
inc
fucomi
or
pop
fst
lds
int3
mov
mov
cdq
pop
mov
popf
mov
pushf
retf
or
jo
fdiv
ret
or
fbld
lods
sub
mov
add
fucomip
js
mov
push
mov
dec
inc
icebp
dec
fbld
dec
loope
loop
cmps
into
or
aaa
jne
push
inc
or
movs
push
fidivr
inc
xchg
js
mov
into
aad
repnz
push
mov
mov
xchg
dec
push
jno
bound
push
loope
lea
mov
cmp
aam
pop
and
pop
lods
mov
call
adc
cmps
and
call
retf
inc
in
xor
bound
pop
iret
test
mov
cmp
inc
and
mov
jmp
sti
xor
fisub
test
movs
xor
xchg
mov
pop
stos
fcom
(bad)
adc
jmp
ja
cmp
cld
push
dec
xchg
sub
or
push
mov
and
and
movs
mov
mov
pushf
mov
retf
rcl
push
ret
rcl
(bad)
aas
sbb
mov
sbb
stos
cld
out
xchg
xor
out
add
leave
sub
popa
jne
imul
sub
mov
pop
shl
mov
scas
daa
jns
fstp
or
(bad)
xlat
push
pushf
jmp
xchg
rcl
adc
loop
xchg
push
cmp
jmp
ins
sar
in
dec
sub
or
inc
xchg
xor
data16
stos
cmc
xor
stos
call
jmp
mov
stos
sub
test
call
cmp
sbb
outs
sub
ins
push
rcr
jns
jmp
dec
mov
push
jg
cmp
sub
push
add
jp
mov
jge
or
xor
inc
mov
int3
sub
dec
or
adc
add
popf
test
out
in
je
stc
mov
mov
or
add
stc
xchg
xchg
arpl
or
sub
inc
pop
push
mov
(bad)
mul
dec
js
and
dec
gs
lea
pop
sbb
xor
jle
mov
jp
ret
nop
imul
iret
cmp
movs
sub
(bad)
xor
lock
push
and
jne
push
jg
(bad)
int3
test
xchg
jle
popf
sbb
outs
push
lock
into
out
cs
jno
jae
clc
retf
icebp
add
js
mov
pushf
test
dec
mov
pop
mov
and
and
into
lock
mov
jnp
out
add
int3
or
imul
and
aam
add
cmps
mov
cmc
fistp
lock
test
int
aad
pop
repnz
inc
pop
xchg
movs
sub
imul
cmp
mov
(bad)
ins
adc
iret
dec
pusha
xor
out
addr16
and
mov
es
sbb
jae
aam
imul
jns
xor
cmp
or
cmp
xchg
je
adc
cmps
mov
and
add
dec
mov
jns
call
jge
arpl
xchg
mov
pop
dec
or
pop
jmp
mov
mov
fadd
cld
mov
repnz
or
add
aas
rcl
sbb
inc
pop
bnd
ins
inc
int3
inc
(bad)
fidivr
popf
(bad)
mov
call
loop
in
dec
iret
sbb
xlat
add
and
scas
ret
aam
ror
(bad)
outs
xchg
xchg
and
or
(bad)
jmp
ins
and
cmp
cld
mov
dec
cmp
mov
sub
imul
dec
push
ja
push
jecxz
movs
and
jle
dec
je
popf
xlat
scas
add
sbb
xchg
sar
or
adc
push
jb
stos
imul
das
stc
mov
dec
push
mov
addr16
inc
jp
cwde
cdq
adc
sub
xchg
ret
add
or
mov
mov
jnp
dec
cmp
adc
call
lea
xchg
jne
aam
inc
cwde
into
iret
sub
aaa
adc
or
cwde
imul
or
js
imul
ror
aas
rol
out
add
rcl
xchg
xchg
xchg
pop
rol
jnp
(bad)
xchg
call
in
pinsrw
mov
push
or
push
xchg
push
(bad)
mov
pop
lds
push
or
ret
push
bound
xor
xor
xor
(bad)
aaa
mov
daa
popa
mov
gs
add
mov
push
mov
retf
mov
retf
sahf
push
les
cmp
aas
jo
jo
sahf
mov
sbb
mov
sbb
sub
xchg
pop
mov
stos
fcom
aad
pushf
fldcw
test
(bad)
(bad)
lods
cli
mov
popa
sub
ret
cmps
push
fcmovnbe
adc
mov
pop
test
jne
test
dec
push
retf
jmp
xchg
and
sub
in
mov
xchg
jno
jno
js
jne
es
ret
das
jmp
into
and
es
aas
xchg
les
ins
add
dec
cwde
add
mov
push
fst
jmp
fbld
cdq
pop
rol
adc
popf
inc
cmp
(bad)
xchg
pop
outs
fidiv
sub
fucomp
jge
jle
rcl
test
xor
jno
jnp
mov
fs
pop
enter
rol
(bad)
les
in
push
cmp
adc
cmp
sti
or
ins
push
pop
sbb
fdiv
xchg
xor
sbb
mov
sar
xor
(bad)
cmp
lods
mov
inc
push
fisubr
jnp
jo
cmp
mov
push
cmp
mov
fwait
adc
or
test
mov
inc
ds
cmp
lds
push
inc
out
sub
push
shl
and
mov
call
lds
stc
xlat
mov
rcr
shr
sub
mov
test
sub
lds
bound
sub
pop
xchg
add
mov
cmps
(bad)
sbb
imul
scas
mov
sbb
sub
test
push
pop
fsub
xchg
test
xor
cmp
xchg
aaa
add
xchg
xor
add
or
xchg
dec
(bad)
push
scas
xchg
fdiv
test
outs
sahf
jp
lods
aas
mov
push
jp
ficomp
pushf
xor
les
hlt
aas
mov
push
xchg
stos
or
fisttp
mov
mov
mov
inc
add
xor
cmc
daa
outs
fld
push
imul
push
mov
out
clc
jo
xchg
push
sti
les
xchg
sti
aad
mov
dec
shl
cmc
nop
lds
mov
jmp
mov
push
inc
rep
sbb
cmc
sti
loope
adc
xor
ins
sti
inc
out
addr16
xchg
cdq
arpl
adc
test
rcr
xchg
dec
push
mov
sub
add
(bad)
jo
cs
pop
adc
mov
pop
inc
retf
mov
jmp
loop
sbb
mov
bound
cmp
dec
dec
sbb
hlt
int3
jo
inc
pusha
daa
mov
pushf
out
sbb
jne
cmp
sub
or
adc
mov
xchg
sub
push
or
ss
add
mov
push
cmp
pop
retf
xor
adc
aaa
cdq
sbb
scas
test
mov
dec
pop
fwait
test
into
push
fwait
test
lahf
rep
mov
xor
iret
fninit
mov
lea
ret
jo
addr16
daa
xlat
dec
inc
sub
mov
mov
cmp
aas
hlt
dec
jb
xchg
pop
sbb
imul
(bad)
gs
int3
fdiv
cdq
push
movq
mov
das
inc
pop
cmp
rcr
retf
fadd
nop
out
fldenv
jmp
stc
jl
sbb
adc
or
fincstp
addr16
enter
adc
dec
dec
inc
dec
push
mov
inc
jo
xchg
mov
(bad)
cmp
jbe
jne
sbb
or
mov
lds
sbb
sub
or
fnstenv
mov
sbb
mov
out
(bad)
jmp
out
sbb
fild
mov
cmp
xor
mov
pop
jo
shr
sahf
test
(bad)
je
push
adc
(bad)
xor
jmp
sub
(bad)
aad
fist
retf
jae
fadd
or
sub
(bad)
sub
(bad)
ficomp
fdiv
sub
jle
push
arpl
add
sti
nop
cmps
in
mov
lds
in
ss
xor
ficom
cld
jo
mov
loope
je
lds
daa
xchg
fstp
xchg
mov
pushf
xchg
je
push
jnp
cdq
pop
sbb
loope
int
jg
xchg
dec
les
shl
aad
ror
aas
adc
outs
inc
push
sahf
xor
or
(bad)
retf
fcom
outs
jecxz
push
cmps
lahf
gs
int3
ret
jmp
gs
jmp
jmp
out
mov
lea
ins
add
mov
mov
sbb
pop
jbe
pop
push
adc
xor
sahf
mov
lods
mov
int3
test
out
dec
imul
mov
push
inc
sbb
stos
inc
and
jl
dec
mov
sub
sub
push
xchg
clc
mov
fwait
outs
ret
mov
fadd
mov
sti
xchg
test
out
or
fild
cmps
ins
dec
cmps
shl
cmp
in
mov
call
stos
fsubp
or
ret
out
sub
mov
xchg
sbb
fninit
xchg
dec
hlt
fcom
adc
imul
jle
ss
out
push
outs
std
sti
fsubr
clc
(bad)
sti
pop
or
in
out
and
dec
ror
je
lock
sbb
fadd
jne
cmp
dec
jecxz
mov
jmp
sbb
push
dec
cmp
scas
es
cmp
sar
cdq
ins
xchg
sub
test
stos
scas
fnsave
icebp
and
test
(bad)
mov
adc
jns
add
mov
in
or
cmps
sbb
jmp
mov
inc
in
mov
xor
repz
ds
push
rol
push
out
iret
xor
adc
or
dec
lods
sar
add
jge
fsubr
sar
push
ss
stc
inc
(bad)
fwait
(bad)
cmp
cs
jge
and
jp
cmps
xchg
inc
mov
clc
cdq
dec
sub
mov
xor
ins
jb
neg
outs
add
mov
mov
ror
and
movs
push
adc
out
mov
imul
add
xchg
xchg
rcr
push
sub
js
push
inc
jb
jb
mov
inc
stc
push
je
mov
loope
push
push
mov
stos
cmp
adc
or
xchg
lea
pop
xor
pop
fs
fucomp
aas
or
aas
dec
ins
sahf
dec
cmp
neg
jecxz
imul
inc
jge
stc
jns
repz
sti
cdq
xchg
sub
sub
data16
je
dec
lock
cwde
loopne
mov
sub
movs
lods
mov
bound
push
sbb
ficom
mov
cmp
outs
dec
or
add
pusha
call
pop
push
push
and
push
adc
xchg
ficom
jle
cmc
pop
outs
ins
es
into
or
movs
dec
inc
popf
in
sbb
mov
ret
mov
cmp
push
test
jecxz
aam
(bad)
cmp
or
jmp
loopne
xor
lods
cs
fsub
push
rcr
out
mov
sbb
outs
(bad)
out
push
int3
mov
iret
xchg
leave
and
adc
out
jmp
scas
repz
loopne
test
sub
icebp
add
fstp
xchg
int
sbb
aam
dec
test
cmp
aam
nop
mov
push
test
inc
jecxz
jle
fmulp
pop
cmp
sar
xor
xchg
ss
mov
sub
cwde
popa
cmp
gs
or
xor
cli
pop
lock
cdq
cmps
dec
add
call
shl
leave
or
or
and
jmp
sbb
inc
push
cmps
mul
nop
sub
push
add
pop
retfw
or
inc
sub
rcr
mov
push
pop
pop
xor
mov
push
mov
call
add
rcl
in
jp
cmp
cmp
movs
xor
adc
xor
mul
push
jne
mov
pop
stos
pop
xor
mov
mov
imul
aas
sub
cmc
enter
jl
xchg
jns
mov
jmp
in
pop
add
hlt
ret
push
push
pushf
pop
xor
pop
ja
cmp
stos
mov
or
in
ins
mov
pop
or
cmps
loope
mov
mov
cdq
jmp
cmp
push
(bad)
scas
movs
mov
icebp
dec
push
dec
cmp
(bad)
xor
fs
retf
shl
inc
add
adc
mov
repnz
inc
pusha
sahf
or
cli
xchg
pusha
pop
call
pop
sbb
sub
mov
ret
lock
dec
ret
retf
mov
mov
pop
xor
push
push
push
inc
in
lods
sbb
jmp
jle
inc
dec
inc
ror
cmps
aaa
loop
(bad)
mov
sbb
iret
jge
(bad)
mov
xor
outs
jno
sbb
lods
add
mov
cmp
lds
sbb
xor
or
das
adc
dec
add
cli
(bad)
repnz
xchg
rol
pop
ja
outs
cmp
retf
cmp
imul
addr16
call
enter
xor
add
sub
sbb
dec
aas
adc
or
icebp
sbb
mov
int
jl
std
fsubr
repz
add
fwait
ja
loope
fcmovnbe
in
sbb
xchg
adc
or
mov
(bad)
aad
push
jnp
mov
jnp
and
and
mov
jae
inc
xor
mov
jmp
sbb
or
inc
mov
xchg
pop
xchg
adc
mov
jl
js
or
(bad)
mov
nop
mov
pop
push
mov
aad
mov
dec
jnp
pop
adc
test
adc
jne
stos
jle
call
(bad)
aam
jbe
xchg
mov
cs
push
(bad)
push
call
sar
aaa
push
and
xchg
and
inc
loop
retf
inc
stos
mov
out
jge
mov
adc
push
retf
cli
push
push
movs
(bad)
mov
xor
jmp
jmp
movs
test
push
jp
outs
(bad)
and
pop
ds
fprem
leave
addr16
adc
or
ins
cmp
popa
pop
mov
or
mov
or
cld
in
call
movs
sti
sbb
das
(bad)
fs
jp
sti
sub
enter
movs
pop
sbb
adc
push
into
push
dec
cmps
inc
cmp
push
in
and
cmp
or
mov
dec
ret
int
sub
prefetch
mov
jbe
or
and
mov
inc
stc
stc
pop
outs
les
fiadd
dec
push
mov
cmc
mov
ja
xchg
aam
pushf
lods
pop
xchg
je
or
jmp
or
(bad)
js
and
dec
or
pop
add
jl
jo
mov
in
add
add
cmp
mov
mov
aaa
adc
or
cmp
inc
hlt
retf
pop
lock
push
bound
mov
adc
inc
popf
mov
dec
addr16
push
sbb
mov
lods
popa
pop
push
(bad)
stc
lods
mov
pop
inc
xchg
in
stc
loop
xchg
push
dec
dec
icebp
data16
movs
lock
ins
adc
jne
cli
shl
retf
mov
(bad)
aad
jge
addr16
loopne
add
sub
pushf
addr16
add
imul
pop
mov
arpl
pop
in
adc
fisub
mov
ret
mov
movs
cmps
pop
sbb
sub
iret
adc
xchg
xor
xor
inc
into
(bad)
push
sbb
ds
leave
and
sar
sub
stos
popa
aam
xor
and
xchg
into
imul
loop
pop
unpcklps
inc
dec
je
sub
or
fwait
jecxz
setb
call
popa
jp
lods
add
cmps
jge
popf
adc
jp
xchg
(bad)
jns
sub
in
pop
mov
fisttp
movs
dec
fld
and
out
cmp
call
retf
loopne
or
mov
xor
cs
rcr
les
push
fs
inc
jg
int3
dec
sar
cwde
add
jecxz
mov
into
push
sbb
sub
rol
xchg
fwait
jg
icebp
jns
mov
push
mov
dec
imul
leave
adc
push
rcr
xor
retf
push
add
add
jbe
push
cmp
pusha
mov
mov
mov
out
rcl
mul
push
loop
cmp
inc
sbb
out
fcom
jns
scas
inc
cwde
inc
in
test
enter
dec
inc
pushf
cdq
mov
(bad)
mov
mov
add
ja
aad
inc
je
sub
cdq
pop
cmp
call
sbb
movs
(bad)
lock
sub
push
xchg
push
jp
and
cmp
mov
adc
call
inc
aas
pop
rol
cmc
pop
scas
adc
nop
sbb
test
mov
loopne
pop
cmp
jg
pop
pop
(bad)
addr16
neg
jmp
enter
pop
jle
not
fiadd
sbb
test
inc
loop
pop
push
(bad)
mov
mov
xor
aaa
aam
mov
mov
cld
bound
jle
mov
adc
loopne
sti
mov
jo
mov
dec
pop
mov
ins
(bad)
sbb
stos
out
mov
mov
jmp
je
adc
inc
dec
addr16
out
lds
nop
inc
lea
scas
stos
repz
icebp
jmp
push
popf
or
out
dec
sar
and
jb
xor
mov
retf
repnz
fwait
imul
add
xor
pop
into
sti
pop
push
(bad)
lahf
sub
das
call
ds
jmp
test
nop
mov
inc
jne
sub
test
jge
sub
mov
mov
repnz
push
outs
sbb
cmp
sub
or
out
sbb
dec
aad
cli
mov
sti
sbb
adc
test
mov
sub
aam
fisubr
cwde
or
cmp
push
ins
sbb
cmp
cld
addr16
cmp
xchg
or
std
push
ror
pop
and
stc
jge
mov
aad
xchg
sti
repz
jne
cwde
js
pushf
pop
inc
movs
inc
cmps
mov
mov
out
clc
xlat
enter
and
inc
lahf
dec
mov
sub
mov
int3
push
int
pop
xchg
sub
xor
repnz
xchg
cmp
push
pop
pop
pop
rol
xor
test
pop
cdq
fdivr
cmp
dec
test
sbb
sub
call
stos
and
mov
adc
xchg
or
cmp
aam
mov
in
mov
aad
sahf
mov
xchg
aam
dec
inc
icebp
shr
and
scas
push
xor
or
add
fiadd
push
sbb
adc
mov
and
push
xchg
mov
push
or
frstor
fisubr
push
xchg
jne
adc
ds
mov
loope
add
pop
sbb
retf
mov
enter
mov
add
rcr
inc
call
jne
xchg
push
(bad)
stc
aam
cdq
loopne
fstp
fild
inc
cdq
or
jge
pop
xchg
cmp
sbb
stos
iret
(bad)
mov
das
hlt
in
aad
xchg
aaa
push
adc
(bad)
xor
adc
dec
mov
adc
dec
popf
pop
xchg
call
out
shl
inc
inc
and
pslld
sbb
xchg
jmp
les
or
pop
imul
test
fbstp
icebp
jmp
shl
mov
cmp
jg
mov
out
xchg
and
dec
and
mov
bound
sub
cwde
aam
dec
mov
icebp
inc
mov
or
ja
inc
neg
push
push
push
pop
push
add
adc
cmp
dec
ins
stos
ss
dec
mov
ficomp
call
loop
cmp
(bad)
xlat
mov
jp
(bad)
in
mov
sub
xchg
(bad)
mov
lock
retf
xchg
mov
mov
lods
and
out
sahf
adc
in
loopne
ds
push
pop
pop
in
pop
movs
ds
jno
or
push
into
(bad)
(bad)
jecxz
cdq
xchg
loop
lea
inc
xor
pushf
stos
mov
mov
jmp
sbb
neg
or
cmp
(bad)
pop
rol
jbe
mov
mov
inc
pop
jl
sub
aas
retf
test
call
cmc
inc
jae
fwait
mov
mov
js
jmp
dec
(bad)
arpl
lods
mov
clc
in
jmp
and
xor
adc
dec
retf
mov
(bad)
(bad)
push
and
inc
test
xchg
lea
popa
out
dec
push
std
call
xor
sub
and
daa
ss
ds
xchg
mov
je
pop
cdq
or
rol
inc
ins
pop
pop
popf
ja
sbb
aaa
loop
inc
popf
sub
fs
fdivr
and
add
aas
bound
xchg
out
cmc
dec
push
daa
push
add
mov
scas
jecxz
dec
sub
mov
mov
dec
sub
cli
(bad)
fild
cdq
jo
sub
or
fstp
cld
pop
pop
(bad)
nop
call
pop
dec
mov
scas
out
adc
sub
jb
or
xlat
test
addr16
pop
push
push
(bad)
mov
adc
aaa
push
push
adc
fld
pop
out
push
hlt
mov
aas
mov
inc
xchg
mov
ret
jmp
mov
js
hlt
cdq
cmp
xchg
lock
(bad)
xor
mov
out
aaa
shl
ja
jg
jns
ja
sbb
inc
pop
(bad)
stc
dec
sub
dec
fdivr
mov
and
fld
jae
stc
icebp
sbb
sub
icebp
dec
test
ficom
leave
and
fidivr
cmp
and
mov
mov
jmp
fadd
xlat
xchg
call
xchg
and
pop
and
cdq
inc
adc
ins
push
mov
add
(bad)
fstp
and
mov
pop
imul
cs
out
aad
retf
jecxz
xchg
pushf
lock
rcr
stos
pop
outs
pusha
outs
loope
and
pushf
and
hlt
pop
cmc
cmp
inc
cmp
push
les
mov
test
cmps
test
add
jge
and
in
add
fwait
rol
cmc
inc
pop
push
and
stc
ror
pop
movs
jle
push
or
(bad)
cdq
sub
out
push
fnstcw
pop
and
ss
adc
hlt
push
jns
clc
push
dec
mov
and
sub
inc
minps
int3
xor
les
fmul
or
(bad)
out
gs
xor
push
cli
in
mov
stos
xor
pop
pop
push
and
ret
xchg
data16
push
aam
jp
pushf
and
daa
nop
arpl
and
sbb
mov
lea
pop
inc
rcl
adc
jge
xchg
xor
inc
ret
dec
adc
inc
pop
sub
xchg
mov
data16
out
(bad)
stos
xor
mov
fwait
mov
(bad)
fwait
push
mov
hlt
mov
popf
xchg
and
scas
imul
mov
pop
mov
push
inc
dec
mov
in
jb
mov
mov
into
adc
es
push
sub
jle
shl
and
mov
mov
stc
sar
dec
(bad)
cmc
xchg
(bad)
jg
add
cmp
lds
movs
aad
push
das
in
loopne
repnz
rol
mov
sub
add
mov
sub
fs
mov
gs
jo
mov
mov
stos
mov
retf
dec
retf
std
sahf
cwde
std
loope
mov
push
sub
es
add
test
or
mov
ret
pop
inc
jl
pop
jb
jbe
je
sar
sbb
ror
(bad)
jle
nop
push
hlt
(bad)
sahf
cmp
mov
add
cmc
pop
mov
adc
xor
repnz
fxch
pop
jmp
cmp
dec
test
fwait
adc
sub
jg
inc
jbe
pop
ss
mov
inc
mov
pop
xchg
js
add
xchg
clc
push
in
dec
mov
add
pop
push
xor
mov
test
sub
dec
sahf
out
outs
neg
xor
in
jns
cdq
outs
jmp
xchg
sub
mov
into
xlat
dec
ffreep
adc
jmp
xchg
call
test
pop
dec
sbb
nop
rcr
xchg
mul
(bad)
xchg
cli
pusha
(bad)
or
jecxz
pop
leave
adc
cld
jmp
repnz
movs
mov
jg
and
(bad)
and
dec
jno
adc
(bad)
std
bswap
pop
addr16
imul
fwait
cmp
out
mov
push
jp
sub
and
mov
arpl
mov
xchg
or
in
jmp
jns
xchg
(bad)
call
adc
aas
and
fnstsw
push
(bad)
or
xchg
(bad)
sub
jecxz
in
xor
and
mov
iret
pusha
cmp
imul
add
jae
daa
cmp
or
adc
mov
pop
mov
mov
mov
(bad)
fcmovnbe
mov
jns
iret
icebp
dec
dec
out
sbb
or
arpl
paddw
mov
jbe
xchg
in
jno
icebp
add
push
xor
scas
inc
sbb
sbb
mov
inc
call
rdtsc
mov
fsubr
push
loope
jg
and
push
or
mov
and
fs
push
(bad)
ds
nop
lock
jmp
sbb
dec
pop
gs
xchg
pop
dec
inc
mov
aas
inc
inc
mov
cmp
cs
rcl
mov
mov
inc
aas
and
or
xlat
sub
inc
pop
neg
pop
adc
xlat
jbe
mov
xor
cmps
adc
push
loop
jnp
(bad)
ins
seto
adc
bound
jne
xor
cdq
or
and
cli
sbb
add
pop
mov
jmp
sbb
loopne
jnp
cmps
xchg
sbb
push
mov
cmc
js
dec
mov
stc
cmp
call
gs
push
jb
aam
stos
push
out
cmovb
xchg
nop
cmp
shl
sbb
movs
xchg
bnd
ds
addr16
loop
xlat
push
call
rcr
sub
mov
dec
dec
mov
pop
adc
imul
daa
(bad)
fnstsw
pop
mov
xlat
out
cmp
sbb
fs
bound
mov
sbb
push
(bad)
and
cmp
jecxz
popa
movs
push
cmp
push
sfence
fimul
mov
xchg
in
add
mov
inc
or
sub
scas
in
fucomi
outs
in
pop
in
syscall
jb
pusha
push
push
inc
jnp
call
inc
xchg
mov
sub
and
or
nop
enter
sub
ret
mov
lods
jne
in
call
scas
inc
(bad)
(bad)
sub
sbb
mov
lea
and
test
sub
in
aas
lock
jp
push
mov
pop
mov
stos
or
pop
(bad)
(bad)
or
sbb
xchg
mov
es
xor
push
rcr
adc
fcmovbe
sti
int
xor
popf
pop
sub
add
fadd
lods
cmp
arpl
cmp
icebp
js
add
mov
stc
inc
sbb
xchg
mov
mov
pop
push
and
push
xchg
lahf
(bad)
in
movs
movs
cmc
ss
cmp
out
(bad)
cli
(bad)
js
cmc
in
mov
ret
out
ret
(bad)
(bad)
pop
idiv
out
lea
dec
aad
out
inc
outs
jmp
jne
test
sub
and
pop
aam
div
pop
dec
xchg
mov
sbb
dec
mov
sub
inc
sbb
xchg
jmp
jo
and
mov
in
mov
and
xor
sbb
and
dec
in
mov
cmp
mov
or
loop
or
and
cmp
ins
and
pop
push
aas
mov
sbb
mov
gs
sbb
mov
retf
loop
push
mov
fld
dec
push
inc
or
pop
mov
cmp
mov
cmc
test
sub
jbe
jbe
aad
adc
call
dec
cmp
jb
mov
sub
(bad)
fnstsw
(bad)
fst
adc
mov
push
push
jno
jle
add
lea
pshufw
fyl2x
rcr
or
dec
push
shr
loop
push
popa
jl
push
movs
adc
xchg
adc
mov
jno
idiv
xor
imul
push
xchg
xchg
pushf
xlat
xchg
outs
scas
cmps
jne
jecxz
daa
outs
pop
cmps
rcr
dec
sbb
cmps
adc
inc
pop
into
pop
shr
popa
repz
mov
lea
lock
int3
dec
dec
daa
push
pop
cmp
mov
pop
mov
mov
adc
xchg
pop
mov
imul
dec
fwait
iret
(bad)
popa
aam
xchg
push
sub
push
mov
hlt
xchg
outs
mov
lds
xor
loop
or
mov
jle
clc
jnp
dec
aam
inc
xor
xchg
mov
lea
or
cmp
add
dec
jle
and
mov
outs
push
enter
inc
(bad)
and
dec
adc
scas
jo
aaa
aas
dec
mov
mov
jmp
(bad)
retf
push
push
mov
and
outs
shl
pop
stos
push
push
shl
or
pop
cmp
clc
jmp
pop
ss
adc
ins
xor
or
nop
xlat
mov
jmp
mov
sbb
jnp
das
in
sbb
test
adc
addr16
jbe
xchg
or
mov
repz
daa
cmp
push
imul
push
inc
push
cmp
out
cli
shl
mov
mov
pop
loop
jbe
xor
inc
xor
mov
pop
call
sbb
inc
pusha
js
add
add
imul
add
xor
pop
lods
mov
test
pop
nop
adc
not
xor
inc
adc
adc
mov
and
dec
mov
xchg
jae
mov
call
mov
cli
jae
and
sti
push
push
push
ss
sub
jl
gs
push
fisttp
ret
ret
jg
outs
mov
imul
in
(bad)
(bad)
adc
and
in
out
std
mov
push
hlt
xor
jl
int
push
fwait
sub
mov
lock
mov
pop
in
xchg
xor
sub
call
jmp
inc
mov
shr
(bad)
movs
xor
es
xchg
mov
sub
dec
mov
pop
aas
fsubr
pop
sbb
in
sbb
ins
mov
nop
push
inc
jp
mov
sbb
popf
dec
add
and
nop
fdivr
out
add
pop
jo
cmc
add
sbb
sbb
leave
fldenv
(bad)
adc
arpl
mov
mov
pop
idiv
movs
push
sar
push
push
add
in
int3
fimul
fistp
xchg
jne
xchg
pop
aad
int
retf
dec
imul
cmps
jecxz
inc
xchg
xor
add
xchg
jle
pop
lods
pop
(bad)
mov
stos
adc
jmp
pop
or
test
test
sub
out
pop
fidivr
cmps
mov
push
popa
mov
mov
movs
inc
fcomp
outs
mov
and
pop
pop
mov
cmp
ret
pushf
(bad)
ja
bound
mov
mov
stos
int3
test
add
loop
jnp
or
int
sar
fsubr
out
xlat
test
mov
mov
add
imul
jp
lahf
mov
outs
mov
mov
mov
shl
clc
int3
call
icebp
pop
into
call
cmc
mov
mov
loope
stos
and
xchg
xor
dec
(bad)
sar
push
cli
pop
jg
cmp
cmp
fnstsw
mov
mov
jg
imul
mov
inc
jae
lods
imul
sbb
(bad)
pop
xor
cmp
fidivr
mov
out
js
jo
pop
movs
int3
jnp
mov
mov
pop
stc
push
clc
mov
in
(bad)
mov
sub
fdiv
scas
sub
jnp
jno
pushf
push
js
in
popa
add
add
jl
loope
xchg
cmc
mov
inc
movs
cmp
sbb
inc
xchg
dec
inc
jl
cmp
mov
idiv
icebp
jmp
in
inc
sbb
ins
pop
cmc
pop
adc
mov
sahf
lods
or
into
or
xor
cmp
jne
pop
jl
dec
test
inc
mov
cmp
jno
xchg
xor
(bad)
pop
cli
xor
in
mov
inc
mov
outs
movs
cmp
sbb
push
movs
test
jbe
sbb
int
test
outs
cmp
dec
cwde
fs
cmp
and
mov
ss
push
sti
sbb
nop
or
pop
xor
pop
inc
jnp
retf
push
icebp
dec
test
mov
scas
movs
imul
mov
ins
in
sar
stc
(bad)
jmp
xor
stos
xor
and
stos
mov
jmp
in
add
and
shr
add
xchg
inc
inc
add
add
add
mov
hlt
cmp
ins
test
cmps
mov
add
mov
mov
push
mov
fnstsw
es
inc
out
pop
jnp
and
pop
jecxz
leave
dec
jbe
add
push
mov
xor
lods
cli
cmp
push
fwait
jmp
je
imul
mov
aad
sub
sub
out
ret
dec
add
hlt
xor
sub
es
push
dec
and
dec
xchg
scas
and
inc
sar
cvtdq2ps
scas
dec
jns
push
push
mov
fmul
mov
iret
aam
add
jbe
lea
stos
loop
lods
repnz
jmp
cld
out
cwde
xchg
inc
cmc
je
lods
lods
pop
stc
dec
sub
add
add
scas
xchg
push
dec
cmc
gs
and
arpl
adc
jo
or
(bad)
mov
sar
ret
dec
(bad)
ds
rcr
repnz
loopne
addr16
mov
add
sar
and
fisttp
push
jae
js
add
outs
fwait
add
call
jg
inc
mov
scas
or
mov
je
dec
inc
in
adc
adc
xor
and
lea
rcl
add
ja
mov
add
sbb
into
enter
cmp
loope
xchg
jmp
dec
push
or
outs
repnz
(bad)
inc
into
into
ins
lahf
mov
neg
or
cmp
add
in
sub
sub
scas
fnsave
mov
(bad)
loopne
inc
sub
test
je
xlat
jp
sub
inc
(bad)
cmp
jp
outs
cmp
ins
jb
inc
adc
test
mov
cli
jbe
gs
cwde
ret
pushw
ins
movs
adc
push
xchg
int
xchg
dec
out
dec
mov
and
enter
mov
sbb
popf
sbb
mov
out
not
ins
cld
mov
jo
call
xor
pop
je
push
xor
test
aam
mov
push
fsubp
jae
jmp
mov
sar
les
inc
inc
push
adc
pop
adc
lods
loopne
xor
push
mov
dec
jge
jo
cmps
pop
imul
clc
mov
or
lods
xchg
mov
cmp
cmc
cwde
sub
imul
les
cmp
xor
jmp
cdq
xor
inc
mov
mov
fwait
sub
rol
js
out
mov
fisub
mov
cwde
dec
mov
add
and
mov
mov
mov
mov
call
mov
daa
(bad)
pop
inc
retf
(bad)
mov
outs
pop
push
xor
mov
cs
test
je
cmp
(bad)
push
stc
xor
popf
sbb
mov
pop
sub
push
dec
into
(bad)
mov
(bad)
sti
mov
or
xchg
(bad)
dec
jle
xchg
rol
jp
lods
test
cmp
push
sub
out
inc
pop
mov
pop
jne
sub
stos
nop
clc
xchg
sbb
mov
fsubr
push
xor
jl
fcmovu
xlat
push
test
mov
and
mov
cli
fucomi
ss
int
add
sub
popa
push
in
icebp
setnp
(bad)
jbe
inc
bound
jae
inc
iret
aam
pop
loop
test
pop
call
mov
lods
mov
sub
mov
or
lea
rcl
sub
mov
es
call
mov
mov
xchg
scas
aas
daa
dec
and
es
sbb
nop
mov
icebp
or
mov
sbb
pusha
test
cmp
cli
cmps
xchg
jg
rcr
mov
jno
and
out
xor
adc
das
loop
clc
sub
or
mov
(bad)
shr
xor
mov
sar
cmp
stos
mov
mov
jnp
je
and
mov
jnp
ja
or
rcl
push
inc
test
jmp
push
push
inc
inc
sahf
hlt
pushf
xchg
pop
stos
sub
pop
jmp
sub
push
ins
or
xchg
mov
push
mul
scas
icebp
push
mov
cli
adc
fst
mov
aad
sti
daa
push
sbb
fstp
das
loope
shl
dec
ins
jno
pop
push
stos
xor
and
ins
sub
lock
neg
into
pop
cmp
in
mov
imul
xchg
cmps
push
push
and
mov
neg
xor
pop
repz
aaa
xchg
dec
push
pop
dec
les
(bad)
push
or
or
ins
test
scas
xor
cs
jg
mov
mov
fs
pop
adc
push
jmp
jp
std
repz
sub
nop
outs
and
fwait
dec
push
stos
add
push
cli
fwait
addr16
push
and
ror
in
mov
(bad)
jle
jmp
sub
pop
pop
arpl
jb
xchg
cwde
div
test
and
mov
nop
dec
cmp
and
mov
data16
std
(bad)
push
into
or
mov
adc
bound
fldcw
inc
fs
stc
xchg
mov
jns
mov
push
scas
pop
ret
repnz
out
into
lea
add
jg
call
add
cli
push
xchg
push
addr16
popa
mov
adc
out
cmc
test
in
inc
jle
dec
adc
les
push
mov
cld
mov
pop
and
es
pop
dec
mov
mov
mov
cdq
stos
jns
cld
fimul
mov
add
sbb
mov
out
popf
pop
pop
stos
mov
(bad)
fbld
cmps
pop
cs
std
in
sahf
lahf
dec
nop
add
cmp
xor
setbe
scas
pop
outs
cmps
into
mov
ins
lds
push
les
pusha
add
pop
pushf
cmp
cmps
lods
push
jmp
fidiv
das
std
aaa
bound
in
jb
mov
and
ins
dec
mov
mov
imul
stos
and
fild
push
test
mov
inc
mov
pop
pop
cmc
push
imul
mov
loope
adc
das
jns
add
sub
xor
sub
pop
shr
cld
ins
xchg
cmp
out
sub
inc
(bad)
js
call
or
pop
mov
stos
mov
outs
fisttp
imul
mov
xchg
xchg
out
pusha
mov
out
xchg
ss
push
gs
jb
sbb
xor
push
xlat
mov
hlt
cli
into
and
mov
sbb
call
in
adc
mov
lock
xchg
out
ss
or
mov
out
xchg
test
adc
cld
push
aas
mov
shr
dec
ret
loopne
push
add
popf
mov
sbb
jmp
jmp
cmp
cmp
sbb
mov
and
inc
or
pop
leave
outs
pop
xor
or
inc
fdiv
inc
pop
xchg
adc
ins
push
pop
mov
mov
xchg
repz
jmp
fild
mov
cmps
iret
mov
into
movs
jl
dec
add
shr
daa
sub
ret
je
jle
(bad)
and
or
stos
mov
fstp
jl
or
push
lds
mov
data16
and
mov
leave
leave
sbb
adc
sub
mov
push
sbb
scas
ja
dec
movs
(bad)
mov
psrld
popf
sub
dec
cmps
movs
pusha
cwde
aas
sbb
push
jg
clc
inc
test
jmp
mov
pop
adc
sahf
or
xlat
pop
add
fld
cmp
leave
jl
jnp
xor
xchg
aas
cmp
pop
cmp
das
sub
sub
popa
dec
ja
clc
xor
push
pop
inc
add
stos
(bad)
sub
sbb
pop
fwait
sbb
fidiv
les
push
pop
mov
jns
push
mov
fs
cmp
inc
cld
jbe
lock
dec
addr16
xchg
out
xor
ds
retf
inc
xor
inc
(bad)
movs
mov
cli
add
ds
jno
mov
js
(bad)
adc
lahf
loopne
sub
push
jge
jp
mov
xor
in
dec
mov
jns
xchg
adc
in
enter
stos
mov
adc
leave
xchg
sbb
xlat
xor
or
mov
mov
sti
sti
dec
and
rcr
sub
fwait
adc
inc
daa
jne
cmp
cmp
cs
out
rol
imul
mov
mov
sbb
jnp
add
inc
arpl
mov
inc
addr16
xchg
popa
dec
call
adc
jmp
xor
in
pop
fstp
dec
ss
or
nop
jl
(bad)
xchg
into
popf
adc
sbb
adc
cmp
cs
add
add
mov
scas
and
jns
jbe
fld
cmp
cmps
data16
popf
test
sbb
dec
sub
pop
(bad)
mov
loop
or
lock
das
out
mov
jmp
mov
sub
xchg
cmps
js
inc
sbb
xchg
pop
loop
and
mov
nop
adc
add
pop
xchg
jp
pop
adc
mov
inc
enter
cwde
fs
xor
or
fisubr
(bad)
mov
fcomp
ja
inc
fcomp
push
outs
(bad)
clc
mov
sahf
push
or
fmul
nop
and
leave
inc
xchg
inc
sahf
sar
shl
cmp
fbstp
(bad)
lods
hlt
inc
sbb
jmp
pop
xchg
dec
popa
xchg
pop
fisub
popf
sbb
jae
pop
add
jmp
mov
push
or
test
in
add
pusha
mov
arpl
cdq
outs
dec
add
sub
aad
fst
ret
xor
fwait
sbb
pop
inc
cdq
in
inc
ins
jae
dec
add
inc
pop
fidiv
push
sbb
dec
cs
pop
call
int
es
adc
or
mov
lock
push
adc
outs
and
bound
and
xchg
mov
mov
add
pop
mov
movaps
add
add
mov
push
stos
xor
cmps
sar
shl
xor
or
adc
cld
test
fcmovu
paddsb
pop
(bad)
xchg
pop
jnp
inc
jl
loopne
nop
iret
rcr
or
mov
out
xchg
mov
out
or
adc
cmp
ss
jne
cli
jo
ficomp
std
rol
pop
fdiv
cmp
scas
iret
push
(bad)
aad
ds
sbb
sub
jg
push
jl
cs
mov
jne
outs
inc
dec
loopne
cmps
pop
je
sub
pop
xchg
pop
ds
out
sbb
sub
mov
ror
lods
loopne
sub
(bad)
jb
iret
jmp
push
adc
sub
push
fwait
stos
dec
sahf
adc
push
sahf
jne
adc
lahf
inc
or
pop
cmps
mov
daa
sub
adc
fwait
push
(bad)
sbb
push
cmps
dec
setno
push
pop
mov
leave
(bad)
ror
repz
retf
ret
in
gs
bound
dec
xchg
imul
xor
sub
mov
sbb
cmps
jbe
ror
mov
xor
sub
push
mul
fwait
fs
fwait
push
mov
or
clc
pushf
push
pop
inc
mov
xchg
icebp
sub
lods
fisubr
retf
sbb
push
icebp
sbb
retf
repnz
(bad)
cli
mov
or
adc
rol
lds
(bad)
add
dec
les
mov
push
mov
fcmovnu
or
dec
pop
push
cmp
cdq
pop
cli
and
enter
cmp
les
les
push
xchg
jb
stos
dec
push
add
in
or
add
xor
outs
(bad)
mov
dec
xchg
out
shr
push
lahf
movs
jbe
in
fnstcw
add
retf
scas
sub
push
sbb
loopne
pop
lds
inc
cmp
mov
(bad)
push
leave
test
mov
jmp
(bad)
sbb
aad
fdivr
mov
lock
pushf
mov
mov
mov
mov
iret
loope
inc
das
ror
pop
push
test
mov
test
in
ds
shl
cmps
dec
jbe
xchg
movs
gs
ficomp
jb
jmp
int
inc
frstor
fldcw
cmp
in
xor
inc
lahf
std
pop
jbe
jo
xor
pop
into
or
call
push
jl
jp
mov
sub
jmp
repz
loope
cmp
mov
je
mov
fldcw
movs
push
mov
xchg
jecxz
leave
mov
cmp
cmp
mov
mov
dec
xlat
jb
and
xor
dec
cs
imul
cwde
ss
lea
js
pop
push
cmp
jl
pushf
sbb
push
adc
outs
inc
outs
pusha
lea
xor
mov
je
xor
imul
jmp
movs
push
and
jno
pop
pop
mov
pop
cmp
cmps
xchg
test
pop
mov
mov
ret
mov
mov
inc
icebp
xchg
arpl
lock
mov
mov
xor
dec
inc
lds
add
push
adc
aam
dec
or
loop
adc
ret
repnz
aaa
add
adc
mov
sbb
cmp
push
cmp
sbb
rcr
pop
mov
jp
jae
ins
addr16
dec
shl
mov
and
or
vpsubd
out
out
fwait
ret
cmps
push
mov
mov
mov
inc
mov
xchg
(bad)
jnp
mov
adc
adc
pop
add
scas
fwait
dec
pop
xchg
adc
dec
pushf
arpl
fist
inc
out
fistp
stc
shl
push
cmps
cmp
or
out
in
out
fwait
cwde
add
lahf
lock
(bad)
dec
dec
mov
adc
xchg
push
loopne
sbb
lods
lock
cmc
pop
outs
mov
fidiv
pop
leave
ins
and
push
pushf
rcr
mov
mov
or
sbb
(bad)
repz
ror
test
rcr
cmp
mov
test
out
outs
shr
pop
ss
add
bound
xor
xchg
fdivp
jmp
test
xchg
repnz
cli
cmp
test
call
in
imul
xor
inc
adc
sbb
pop
les
stos
jecxz
paddsb
xchg
(bad)
(bad)
cmp
mov
imul
loopne
(bad)
arpl
and
cmp
push
hlt
rcl
aad
jbe
push
rol
mov
fwait
mov
cwde
out
movs
jmp
sti
das
adc
sub
popf
jmp
pop
ss
js
idiv
loope
stos
test
adc
add
jmp
jg
mov
mov
mul
lods
sub
loop
adc
sbb
or
push
pop
rcl
xchg
popf
sub
fwait
mov
jae
add
stc
jp
or
frndint
ja
mov
dec
sub
xor
dec
mov
cmp
pop
xchg
fsub
xlat
pop
or
ret
pop
mov
push
or
imul
xchg
mov
cdq
outs
adc
in
adc
add
loope
sti
in
test
push
out
jb
pop
cdq
movs
cmp
ficomp
cmp
neg
call
fmul
ins
pop
lods
rol
repnz
xor
lods
aas
xor
mov
cmp
test
xor
ret
jl
adc
test
add
(bad)
xchg
inc
outs
imul
pop
in
movs
or
xchg
popa
call
sub
scas
dec
push
das
leave
pop
or
xchg
sbb
pushaw
sbb
shr
dec
and
cmp
stos
xchg
and
and
test
jae
xor
fild
cmp
loope
int
push
lea
xchg
mov
ss
movs
inc
movs
and
pop
xchg
scas
xchg
test
jns
ins
test
cmps
and
inc
test
jno
outs
movs
sub
sbb
cmc
sbb
test
push
gs
xchg
sub
mov
cpuid
xchg
xlat
pusha
mov
sbb
test
lds
xchg
and
pop
loopne
retf
scas
js
fxch
and
add
dec
mov
sti
or
lods
mov
mov
sti
jl
adc
addr16
mov
pop
(bad)
xchg
add
jo
cld
ret
pop
das
cmp
mov
hlt
mov
adc
lock
dec
mov
loopne
lods
aad
adc
or
fs
and
jno
xchg
iret
jb
xor
inc
or
push
cmp
push
inc
rcr
ret
or
lock
lock
fisttp
lea
jg
add
xor
scas
shr
hlt
add
xor
adc
rol
in
or
(bad)
push
push
int
out
dec
push
aam
cld
inc
shl
mov
inc
adc
stc
loopne
mov
adc
and
hlt
mov
jmp
mov
retf
std
cmc
adc
and
out
clc
mov
fild
in
imul
(bad)
mov
inc
mul
ret
ins
cmp
bound
sbb
call
pop
addr16
out
daa
ins
sbb
cmp
and
and
xchg
retf
sub
or
inc
out
push
enter
enter
fisttp
gs
pop
xor
dec
sub
cmp
lods
inc
cmp
fild
in
mov
mov
aas
fsubr
xchg
jl
add
sbb
out
leave
pushf
iret
jno
scas
xchg
dec
sub
pop
jmp
sahf
outs
ret
test
fcom
adc
jnp
xchg
add
les
ret
mov
gs
aaa
pushf
inc
add
cmp
cwde
std
enter
mov
(bad)
jecxz
dec
aad
sbb
in
clc
sbb
retf
js
frstpm(287
xchg
adc
out
add
sub
jl
sbb
add
and
push
dec
add
in
cmps
add
sub
xor
nop
cwde
jmp
jbe
popf
dec
and
push
add
aaa
xchg
or
popa
xchg
adc
sub
mov
movs
in
scas
add
fdivr
jl
ret
(bad)
ds
and
inc
sub
add
loope
out
cwde
in
(bad)
aaa
mov
sti
int
(bad)
retf
(bad)
test
aam
ins
outs
mov
fld
mov
xchg
mov
push
ret
pop
pop
mov
lea
inc
ret
pop
adc
daa
ins
pop
enter
adc
in
mov
pop
nop
icebp
test
pop
push
pop
push
fistp
cmp
and
xor
scas
add
xor
push
inc
jne
xchg
pop
inc
arpl
pop
or
sub
test
xchg
inc
push
jl
mov
scas
aas
imul
repnz
push
das
mov
dec
or
dec
retf
push
cmp
repnz
push
out
cmp
enter
movs
or
push
nop
push
jno
pop
idiv
cmps
pop
mov
loopne
sbb
int3
and
clc
gs
enter
pop
mov
mov
addr16
push
pop
sbb
xor
mov
push
scas
xchg
dec
add
aaa
loope
mov
inc
aam
mov
mov
icebp
xlat
adc
out
sub
or
jmp
dec
lds
sahf
xor
enter
adc
cdq
out
lock
inc
pusha
sbb
pop
add
std
icebp
retf
or
mov
push
js
cmp
add
adc
gs
xor
iret
sub
xor
mov
jg
sub
fcomp
dec
sub
pusha
movs
loop
cmp
jge
stos
push
mov
mov
push
pop
stc
jne
sbb
xchg
test
push
call
cmp
js
add
loopne
(bad)
ss
adc
out
jge
add
por
add
xor
stos
jge
leave
mov
xchg
aam
adc
add
(bad)
ret
test
ins
lock
lods
sub
or
ret
mov
pop
ds
stos
hlt
xchg
or
pop
and
scas
lock
pop
pop
add
inc
inc
scas
sub
or
dec
arpl
jmp
mov
sti
push
cmp
pop
shl
inc
inc
and
fdivr
pop
xchg
sub
retf
out
jmp
(bad)
push
sbb
and
int
ret
inc
adc
pop
lock
test
and
into
stos
push
mov
stc
shl
mov
xor
stos
dec
cmp
jge
cwde
or
push
je
and
adc
jge
fidiv
sbb
xchg
add
rcr
ss
daa
nop
movs
outs
fcmovbe
stos
adc
xor
mov
scas
sub
push
fiadd
push
rcr
jecxz
xchg
mov
inc
xchg
cmc
pop
movs
jo
mul
pop
js
fs
push
(bad)
shr
ret
and
ss
jns
sbb
jl
push
pop
aad
add
add
daa
fidiv
rdmsr
fisttp
xchg
addr16
test
int3
lods
(bad)
sbb
push
leave
sbb
repnz
inc
loopne
mov
rcr
push
jne
dec
fbstp
fnstsw
arpl
xchg
or
jns
test
jbe
dec
loope
les
cmp
mov
shl
push
xlat
mov
push
sub
fbld
lods
xor
fwait
pop
gs
mov
pop
inc
mov
ficom
push
pusha
push
add
test
js
mov
ds
out
arpl
mov
repnz
inc
sar
mov
popa
dec
outs
add
iret
sbb
jg
mov
adc
ins
movs
pushf
cmp
adc
push
mov
mov
shl
inc
test
int
push
cmp
nop
test
fcmovne
loope
jl
mov
cmp
aad
mov
jp
xchg
das
fcmovnbe
inc
mov
daa
shl
sahf
lahf
mov
xchg
call
sub
mov
lods
cmp
movs
or
aad
hlt
add
les
jl
(bad)
jo
fadd
xchg
cmp
int3
or
jl
or
push
sbb
sub
jmp
(bad)
pop
test
fwait
mov
inc
sbb
popa
xlat
leave
loopne
mov
out
lds
gs
mov
cwde
dec
lods
sbb
(bad)
or
mov
jo
mov
mov
mov
cs
mov
clc
pushf
lods
mov
jecxz
int
add
gs
pop
jmp
add
adc
stc
push
pop
mov
mov
(bad)
xor
shr
xor
rol
(bad)
in
imul
retf
aas
out
test
and
(bad)
int3
xor
push
ret
or
cmp
dec
xor
int
fisubr
xor
std
push
cmp
imul
test
pop
cmp
jl
call
das
xchg
mov
mov
xor
outs
pop
iret
lahf
in
jns
xlat
mov
enter
cli
jl
jns
shl
mov
push
ins
mov
not
mov
sbb
out
and
mov
and
sti
repz
ds
movs
pop
icebp
pop
ja
gs
jmp
das
int3
cmc
hlt
jno
mov
aam
loop
pop
inc
jecxz
push
aaa
mov
jmp
scas
add
and
and
test
cs
mov
jo
mov
mov
(bad)
not
dec
xchg
into
pop
(bad)
inc
adc
arpl
or
stos
cmp
dec
repz
daa
retf
outs
push
fiadd
pop
pop
inc
push
jge
mov
cmp
push
and
cmc
sbb
sti
sahf
and
dec
(bad)
fwait
xchg
out
dec
test
int3
push
jae
dec
cmp
jae
outs
dec
mov
lods
inc
pop
int
adc
inc
cli
pop
lea
int
outs
mov
mov
ss
push
cmp
stc
addr16
mov
mov
arpl
jno
and
loop
das
shl
das
shr
lds
(bad)
jmp
fwait
movs
jp
push
dec
rcl
out
cli
aas
lods
dec
out
xor
ror
mov
popa
and
ja
or
mov
out
jb
xor
jp
xchg
fwait
xchg
jge
adc
pop
out
sbb
push
dec
inc
test
or
in
push
retf
mov
out
mov
loopne
mov
std
and
mov
push
lods
pop
in
int
mov
add
or
ficom
repnz
mov
neg
jmp
dec
cli
mov
xchg
xchg
adc
inc
and
mov
dec
int
lods
jns
mov
xlat
pushf
xor
pop
cmp
xor
sub
mov
movs
pop
mov
mov
mov
sar
clc
ins
inc
sub
cmp
hlt
cwde
cwde
jb
add
pop
pusha
movs
mov
xchg
fwait
mov
jmp
mov
ja
adc
jge
pop
into
imul
jno
sub
inc
mov
cmp
jge
pop
fdivr
xchg
jp
jle
inc
cmp
iret
inc
or
(bad)
je
nop
ror
mov
cmps
cmp
add
les
out
mov
mov
scas
push
mov
test
std
sub
dec
lock
xchg
sbb
cmp
test
push
pop
push
mov
add
dec
je
xchg
sar
push
jns
push
or
inc
pop
les
int
and
cmp
xchg
ret
cmps
std
fimul
fstp
popf
sbb
dec
xor
ins
ins
inc
xchg
mov
cmp
jae
mov
pop
pop
pop
inc
mov
test
inc
pop
push
cmp
jae
pop
mov
push
jle
xchg
cwde
inc
pop
js
or
or
in
adc
xchg
pop
popa
push
adc
stos
xchg
addr16
test
hlt
pusha
stos
or
inc
repnz
std
dec
jo
fisubr
and
mov
fld
pushf
arpl
mov
and
jmp
xor
stc
ficom
ss
movs
and
imul
xor
xchg
mov
repz
lahf
add
mov
fidiv
pop
pop
sub
and
xchg
data16
psubb
jo
inc
xor
inc
aam
cwde
ret
dec
test
test
fs
mov
and
cld
nop
push
xchg
pop
mov
mov
inc
inc
shr
jo
add
push
mov
xor
imul
stos
movs
jge
fcmove
test
dec
or
add
scas
movs
outs
mov
mov
pop
sbb
fdivp
xchg
popf
mov
sbb
pop
pusha
fdivr
movs
test
mov
xor
stos
aas
addr16
xchg
sbb
push
pushf
push
test
mov
sti
inc
fldcw
adc
xchg
call
or
or
arpl
fwait
and
aad
and
jg
xor
mov
adc
cmp
enter
js
inc
shl
sub
push
outs
mov
inc
or
push
push
or
(bad)
je
xor
(bad)
sbb
outs
or
movs
jmp
jbe
jp
jns
xchg
mov
aam
mov
mov
mov
sbb
mov
mov
jge
repz
fwait
push
jns
or
ins
mov
ss
dec
dec
mov
push
in
cmp
(bad)
retf
aad
xchg
mov
sub
cmp
push
(bad)
outs
mov
cmp
xchg
add
or
repnz
or
int
add
sub
out
inc
mov
push
mov
dec
cmp
pop
dec
int3
xor
movs
or
mov
mov
mov
retf
xor
(bad)
cdq
pop
(bad)
jecxz
sbb
jg
cmp
(bad)
pop
jnp
xor
clc
sbb
jb
pop
repz
cmp
fdivrp
add
aas
push
test
mov
dec
mov
sub
sub
pop
stos
(bad)
in
adc
shr
xor
pop
sub
sbb
dec
pop
mov
mov
push
jge
mov
das
ss
cwde
mov
xlat
sbb
sub
adc
aam
sti
pushf
sbb
scas
push
cwde
movs
dec
jle
rcl
adc
hlt
(bad)
pop
jp
inc
push
outs
movs
int
mov
sbb
inc
loope
cmp
(bad)
sbb
stos
or
arpl
add
xor
xchg
dec
push
sub
sbb
push
loopne
mov
lahf
push
sub
sub
ja
cmc
movs
(bad)
aas
jbe
into
rcr
jne
xor
add
es
clc
xchg
and
int3
mov
dec
(bad)
test
fst
adc
into
cmp
sti
arpl
bnd
jnp
push
imul
ds
outs
fidivr
mov
fbld
hlt
adc
aam
mov
xor
pop
stos
mov
not
(bad)
imul
lea
adc
xor
cmp
cmp
cmps
pop
psadbw
ret
test
mov
imul
and
cmp
dec
pop
dec
(bad)
add
imul
fsin
rol
out
mov
mov
pop
add
leave
and
popf
mov
pop
leave
in
mov
pop
fidivr
lods
sar
or
fwait
sub
int
call
mov
arpl
mov
sbb
xor
jge
lea
shl
xchg
aas
icebp
adc
or
fs
(bad)
pop
stc
scas
jnp
add
xchg
adc
adc
fdiv
imul
mov
in
mov
arpl
out
cmp
fcom
jb
in
ds
hlt
in
inc
sar
cli
enter
xchg
fs
(bad)
ja
cwde
arpl
xchg
inc
fmul
sbb
mov
push
std
test
jmp
cmp
aam
push
or
and
xor
mov
pop
xlat
movs
inc
call
sti
mov
sbb
ins
repz
xor
scas
xchg
mov
ret
cdq
mov
cmp
or
jle
sub
fstp
clc
dec
(bad)
lea
in
mov
pusha
int
cdq
cmps
pop
(bad)
sbb
adc
jmp
push
jl
fidiv
pusha
cmp
loope
mov
mov
mov
popa
movs
ret
cmp
ss
aam
dec
mov
xchg
adc
and
or
or
in
xchg
and
mov
test
xchg
mov
inc
add
repz
outs
sbb
or
or
cmp
test
cwde
popf
push
jg
xor
or
popa
mov
aas
cmp
in
nop
pop
mov
fdiv
mov
mov
push
je
add
or
sub
sub
es
rcl
adc
sub
inc
cli
sub
in
sahf
pop
je
jnp
rol
js
xor
cmp
or
inc
inc
mov
dec
movs
(bad)
pop
shl
movs
sbb
popw
mov
push
push
(bad)
dec
mov
call
xor
add
jns
data16
in
mov
test
xor
scas
dec
js
cmc
rcr
dec
sbb
into
sub
mov
idiv
(bad)
adc
inc
push
nop
push
(bad)
loope
js
xor
fiadd
push
test
mov
adc
or
sbb
jbe
add
sbb
inc
push
faddp
in
mov
cs
inc
imul
into
sub
or
add
neg
push
sub
jmp
mov
jmp
and
or
fisttp
jmp
push
cmp
dec
in
xlat
ins
adc
out
int3
inc
cmps
mov
cmp
add
pop
test
cwde
cmp
sti
pop
repz
les
pushf
retf
pop
jb
xchg
pop
test
xor
adc
sbb
(bad)
in
push
sub
ret
repnz
ret
xor
cmp
test
sahf
in
or
outs
movs
je
stc
out
or
rol
xchg
inc
xchg
add
jns
and
cmps
xor
xchg
ja
jg
leave
fistp
add
imul
push
test
adc
aaa
js
hlt
mov
push
lea
in
push
push
mov
test
(bad)
or
scas
add
adc
xchg
xor
loop
rcl
ins
pop
sbb
or
add
mov
bound
gs
cmps
in
(bad)
nop
ret
fstp
mov
in
sahf
ficomp
(bad)
push
icebp
adc
cwde
push
in
retf
sub
(bad)
daa
mov
pop
cmp
add
push
cmp
mov
xchg
dec
jp
mov
pop
je
dec
sub
out
adc
push
sub
jnp
fcomp
push
(bad)
jle
daa
(bad)
jmp
leave
mov
fnstcw
push
xor
adc
shl
jl
jmp
es
add
xor
ds
push
popa
cmp
clc
fmul
pop
dec
arpl
jns
mov
and
sbb
fstp
fwait
adc
test
pop
sar
adc
mov
aaa
lods
xchg
fadd
stos
mov
ins
push
pop
int
gs
jmp
xchg
lods
cmc
mov
mov
jo
mul
out
sub
inc
out
sub
outs
cmp
ja
push
xchg
pop
cmps
mov
mov
xchg
push
sbb
bound
rcl
scas
iret
out
xchg
add
call
aad
inc
aam
and
pusha
mov
jge
repz
jns
sbb
test
jbe
std
imul
call
dec
ss
adc
fdivr
clc
ds
inc
sti
int3
mov
xor
out
pop
ret
enter
inc
sbb
xor
jle
leave
sub
sub
add
mov
aam
and
retf
divps
leave
inc
push
jnp
jb
pop
and
inc
loope
pop
arpl
pusha
cmp
icebp
inc
mov
sub
call
or
mov
mov
cmp
std
mov
adc
adc
cs
out
push
add
fsubr
cli
jmp
dec
loope
nop
loop
in
add
out
inc
mov
aas
daa
rcl
sub
mov
sub
sub
dec
cs
mov
jns
and
inc
dec
nop
inc
mov
or
fstp
inc
shr
dec
pop
xor
pop
mov
and
dec
and
or
cmp
push
mov
mov
sbb
jae
push
in
sub
iret
cmp
ins
adc
pop
inc
mov
clc
pop
and
clc
pop
popa
popf
jmp
and
adc
pop
and
push
or
repz
and
gs
aam
pop
fisttp
imul
test
xor
cs
lahf
pushf
cs
push
fbstp
ret
int3
pushf
adc
fs
adc
push
fistp
cmps
cmp
push
xchg
clc
pop
jbe
ins
sbb
mov
jg
movs
mov
sub
jb
adc
jmp
fiadd
jg
stos
cmp
and
cmp
pop
pop
hlt
mov
imul
mov
xchg
mov
(bad)
stc
pop
loope
push
nop
fld
xchg
xchg
int
sar
mov
gs
mov
push
addr16
sub
pop
mov
jno
or
std
ss
(bad)
out
ret
xchg
shl
hlt
scas
test
daa
cmp
frstor
xlat
or
cmp
fild
enter
ins
inc
jne
fcom
xchg
lock
xor
scas
sbb
cmps
mov
fcmovb
sub
das
std
push
pop
mov
inc
vandps
adc
in
xchg
jne
xchg
outs
jmp
call
xchg
xchg
out
mov
ss
je
cmp
sbb
cmps
(bad)
jg
retf
mov
jg
std
mov
das
(bad)
movs
jne
mov
mul
popf
mov
or
cmc
cmp
mov
mov
adc
push
mov
adc
ret
aaa
xchg
pop
je
xor
jmp
addr16
mov
pop
ror
mov
sub
cmp
pop
mov
fistp
xor
pop
std
xor
mov
xor
xchg
xchg
jb
jbe
xor
bswap
(bad)
cmps
icebp
mov
aad
gs
pop
cmp
arpl
or
sub
sbb
cmc
outs
mov
push
aad
mov
dec
push
sti
shl
aad
pusha
xlat
sub
leave
mov
adc
cmp
pop
shr
cld
jo
jecxz
inc
add
xor
popf
xchg
dec
imul
fmul
fimul
cmps
bound
gs
jns
sub
arpl
jbe
(bad)
daa
sub
sub
rol
jnp
add
mov
inc
xor
xchg
push
(bad)
les
mov
push
and
inc
test
push
rcr
push
pop
imul
mov
mov
cs
jne
out
or
xor
ficomp
add
adc
lods
cwde
into
daa
add
xor
in
out
call
or
pop
test
xchg
push
in
das
aaa
fld
push
call
ins
pop
fldl2e
idiv
mov
and
cmp
movs
out
or
inc
repz
sbb
lods
push
pop
jge
xchg
cmp
loopne
mov
push
jp
rcr
iret
sbb
aad
add
cdq
jbe
xchg
push
repz
mov
cmp
pop
sub
leave
test
adc
test
cmp
mov
pop
ins
gs
dec
sub
fnsave
inc
out
xchg
sbb
test
sub
mov
(bad)
in
call
repnz
and
ins
mov
pop
xchg
dec
pop
out
(bad)
adc
repnz
mov
xchg
push
and
cmp
and
or
in
mov
mov
int
or
out
push
fmul
mov
(bad)
pop
xchg
ins
out
or
sub
sbb
mov
inc
xchg
pop
nop
cli
sub
arpl
jbe
hlt
add
aas
pop
gs
cmp
ja
inc
aam
xor
cli
stc
lods
sub
inc
aas
jg
test
adc
jno
mov
xlat
movs
cdq
in
lahf
mov
sub
jmp
sahf
sbb
push
inc
lahf
mov
push
mov
mov
pusha
js
out
test
lea
xlat
mov
shr
dec
in
out
and
pop
or
aas
cmp
pushf
ins
xor
jmp
lock
movs
repz
repz
mov
out
sbb
sub
ror
mov
sub
ja
sub
fs
xchg
inc
aas
cmc
shl
push
imul
push
repz
les
xor
stos
jg
and
stos
jnp
or
mov
pop
pushf
dec
mov
stos
add
sub
and
inc
movs
and
test
mov
sbb
dec
lods
xor
sbb
jmp
mov
xor
xor
pop
xchg
xchg
pop
sub
(bad)
outs
and
lods
mov
out
mov
les
aam
mov
jo
pop
sbb
mov
ss
pop
cdq
sbb
sub
sub
add
pop
and
adc
mov
xlat
repz
(bad)
out
lock
int3
inc
(bad)
push
xlat
and
sbb
ror
out
jg
mov
(bad)
jo
cmc
add
xor
scas
pop
xchg
jnp
movs
cmp
xchg
jmp
adc
sbb
test
nop
scas
sbb
xchg
test
(bad)
pop
add
adc
je
xlat
loop
xchg
or
cwde
xchg
pop
sub
imul
inc
add
jae
xlat
inc
mov
int
pop
mov
cmps
cmp
pop
push
scas
inc
adc
imul
xchg
cmp
sar
mov
inc
aaa
and
sub
xchg
aaa
push
xlat
inc
or
int3
sbb
jl
xchg
push
fwait
xor
mov
pushf
dec
gs
movs
xchg
(bad)
sahf
repnz
jno
in
mov
int3
ss
mov
leave
mov
add
ficomp
test
cs
movs
pop
cmp
add
jmp
popf
enter
mov
dec
test
push
(bad)
(bad)
push
xchg
jge
repz
test
shl
fdivr
xor
int3
cli
xchg
pop
jmp
lea
or
inc
stos
cld
jae
test
les
and
push
push
dec
repz
jb
imul
aam
or
mov
dec
xchg
ss
mov
lods
push
fmul
lea
fstp
icebp
out
ja
sub
mov
hlt
lods
pushf
leave
scas
inc
lods
sub
pop
in
fldenv
mov
sub
(bad)
xor
cmp
mov
popa
fld
xchg
mov
push
retf
aam
das
loop
aaa
out
xchg
ficom
int
mov
mov
stos
sbb
dec
std
xor
rol
push
les
rol
jb
push
push
dec
xchg
loop
pop
in
push
mov
inc
cmp
mul
lahf
jl
add
lahf
jge
mov
cmp
inc
dec
icebp
dec
lock
mov
mov
mov
(bad)
push
sbb
hlt
xchg
mov
ja
lahf
mov
aas
mov
gs
test
xchg
les
pop
sbb
inc
mov
and
test
add
sti
jmp
stos
jmp
dec
push
jle
jns
dec
sbb
(bad)
mov
aad
adc
out
cmc
cld
xor
loop
inc
xchg
push
aas
bound
inc
and
(bad)
cmp
add
jae
repz
cmp
push
mov
imul
or
dec
jns
test
out
rcr
shl
test
cmps
xchg
inc
mov
fist
enter
shl
in
sbb
xchg
or
dec
outs
into
repz
push
lahf
test
fwait
xchg
mov
dec
adc
xchg
popf
test
xor
adc
xchg
push
popa
in
stc
pop
test
push
push
pop
pop
push
clc
push
xor
or
jle
mov
jbe
or
das
push
pop
into
out
movs
xor
call
ror
xchg
jmp
pop
push
scas
sbb
cmp
xlat
(bad)
ret
push
dec
pop
mov
retf
retf
dec
dec
xor
test
retf
dec
pop
push
icebp
dec
cmp
jns
xchg
aas
and
add
test
mov
in
jae
add
mov
shr
jle
stos
test
sbb
cmp
out
push
test
lock
gs
jle
mov
xor
xor
popf
rol
loopne
out
int
shl
test
push
mov
leave
ja
jo
jg
push
pop
mov
pop
pop
ins
adc
addr16
loope
test
hlt
jne
mov
cld
js
daa
mov
sub
sahf
out
test
in
add
xor
rol
cmp
mov
arpl
test
adc
pop
mov
jg
mov
sti
aad
mov
or
mov
mov
in
lods
lds
jbe
leave
out
in
dec
dec
outs
iret
mov
pop
dec
icebp
push
iret
dec
ins
push
fs
call
cmp
jp
inc
xor
and
leave
out
add
or
inc
call
jb
leave
and
pop
dec
cmp
pop
push
mov
push
and
cmc
dec
pop
add
pop
and
mov
or
popf
outs
push
loop
stos
jmp
sbb
mov
mov
fprem1
xchg
xchg
inc
xchg
mov
jo
std
(bad)
cmp
cmc
mov
call
icebp
push
scas
push
sbb
mov
sbb
repnz
jo
(bad)
in
jno
mov
and
pop
sub
ja
pop
mov
adc
cmp
enter
cli
cli
test
lock
dec
xchg
pop
push
xor
outs
pop
jae
jmp
mov
and
sub
mov
xor
ins
stc
je
bound
push
dec
xchg
push
(bad)
add
es
ret
xor
fwait
mov
xor
inc
xor
cwde
out
mov
and
aad
cmp
test
hlt
cmp
std
dec
repz
loop
and
pop
mov
ja
(bad)
mov
(bad)
ficom
imul
mov
jmp
cmps
aas
jmp
(bad)
sbb
inc
mov
pop
repz
das
add
cmp
popf
daa
adc
dec
jmp
dec
xor
push
mov
rcl
push
shl
mov
pop
or
loope
dec
stos
xchg
jae
jmp
pshufw
xor
bound
jb
outs
in
int
sbb
(bad)
or
test
ret
aam
and
adc
push
mov
dec
push
add
xor
out
jns
fistp
neg
in
std
pop
mov
inc
int3
adc
pop
(bad)
mov
enter
fld
fisttp
dec
mov
adc
xchg
sahf
in
mov
inc
ret
sbb
pop
mov
mov
cld
and
push
fucomip
push
mov
popf
xchg
gs
mov
xchg
pop
aas
push
jl
cli
ret
push
pop
rcr
xor
data16
pop
pop
pushf
(bad)
arpl
fmulp
dec
fdivr
dec
cmp
int3
cli
jns
pop
mov
mov
scas
inc
push
xchg
inc
sub
jmp
add
aas
je
add
mov
push
adc
mov
xchg
js
push
push
retf
arpl
push
rol
dec
arpl
xchg
jno
inc
jge
mov
xchg
pop
and
xor
xchg
cli
add
mov
xchg
shl
loopne
and
mov
add
pop
(bad)
out
add
mov
xchg
mov
ins
and
xchg
hlt
test
idiv
jae
mov
pop
mov
push
ret
inc
pop
sbb
(bad)
(bad)
dec
scas
sub
or
fsub
fistp
and
or
shr
xor
call
and
add
sub
cmp
cld
push
imul
push
pop
add
pop
clc
or
lods
out
or
mov
ss
mov
call
jmp
addr16
pop
fistp
xor
or
push
dec
jns
retf
sbb
add
dec
inc
push
divps
stos
add
add
fdivr
test
push
push
xor
mov
repz
ret
adc
mov
cmps
mov
sub
leave
mov
jae
mov
std
jae
fnstsw
jmp
fsub
(bad)
xchg
push
test
in
xor
xor
pop
mov
jge
bound
gs
fcomp
xchg
jns
and
loopne
jae
xchg
xor
dec
add
nop
in
adc
test
rol
mov
in
imul
frstor
push
psrlw
and
and
xor
xor
in
pop
pushf
jmp
pop
push
cmps
mov
jge
bswap
sbb
outs
inc
cmp
and
rcl
into
(bad)
jmp
push
xor
and
ja
adc
mov
iret
out
sbb
cdq
adc
mov
mov
lahf
rol
dec
fsub
adc
loope
or
daa
jmp
inc
iret
inc
repz
push
mov
ficomp
adc
movhlps
and
inc
fsub
or
push
pop
icebp
lods
fisubr
mov
jg
movs
dec
pop
or
cmp
mov
push
inc
xchg
xchg
lahf
call
mov
pop
push
ror
xor
lods
push
pushf
or
dec
jl
hlt
fisubr
sub
xchg
xchg
jecxz
or
std
ficomp
ds
push
push
jmp
pop
mov
push
jb
and
retf
jae
jl
out
icebp
mov
or
mov
pop
jl
(bad)
inc
cmps
fst
std
cmp
jns
loopne
popf
dec
and
imul
je
jmp
in
pusha
rcl
pop
pop
mov
mov
inc
adc
adc
pop
or
jmp
sbb
out
push
(bad)
pop
mov
mov
jne
sub
xchg
inc
retf
(bad)
call
add
mov
and
enter
jns
push
adc
xor
iret
cmp
cmp
ss
pop
out
in
and
inc
adc
es
or
call
jg
sbb
jns
lods
lea
sub
pop
sar
les
and
mov
in
dec
pop
js
xor
push
and
nop
mov
scas
xchg
push
pop
dec
adc
add
xchg
mov
sub
mov
scas
fnsave
and
mov
mov
mov
sbb
es
cmps
adc
push
inc
add
imul
adc
adc
in
in
cmp
or
cmp
aaa
xchg
int3
add
adc
test
cwde
xchg
jo
inc
jle
jge
jecxz
cmps
rcr
jl
xchg
push
mov
mov
and
mov
das
dec
loope
sbb
outs
fbld
test
mov
test
sub
enter
(bad)
dec
test
sti
test
jmp
jno
cmp
sbb
arpl
add
shl
lea
mov
(bad)
mov
scas
in
push
adc
lods
cmp
mov
repnz
cdq
add
and
jmp
jge
mov
aaa
jg
mov
mov
out
je
push
lahf
test
outs
pop
push
cdq
push
sbb
je
cs
out
call
add
xor
jl
mov
jp
add
or
pop
pusha
push
pop
jns
pop
and
or
(bad)
call
aad
sub
scas
mov
test
imul
hlt
xchg
mov
das
pop
mov
clc
bound
sti
mov
push
mov
sub
popa
or
xchg
mov
xor
jecxz
ja
cdq
dec
std
shr
into
or
jo
fld
mov
addr16
lods
stos
jb
cmp
loope
xor
mov
pushf
mov
sub
mov
cmp
push
into
es
dec
mov
add
(bad)
movs
xchg
out
or
aas
retf
xor
shl
xor
xchg
retf
test
loop
into
mov
in
xor
stos
iret
dec
mov
repz
sar
(bad)
sub
cmp
dec
mov
sub
mov
imul
mov
fwait
mov
xor
cwde
jmp
mov
sbb
hlt
js
pop
rcr
sbb
imul
and
cmp
cld
movs
ret
ret
outs
in
dec
xor
and
adc
fidiv
xor
push
in
lea
vcvtsi2ss
mov
lods
sbb
cmp
sub
xchg
xchg
dec
cmp
fmul
pop
rcr
movs
or
mov
rcr
loopne
cmp
push
cmp
mov
icebp
loopne
rcr
dec
mov
test
imul
xchg
push
inc
outs
call
xor
cmovle
push
xor
(bad)
xor
jnp
dec
lahf
mov
xchg
arpl
jne
pop
xor
es
xor
jle
xor
cmp
mov
ins
add
or
cmp
hlt
cmp
loop
fxam
call
sbb
xlat
cmp
inc
mov
inc
inc
xchg
or
add
mov
cdq
push
push
sub
lods
mov
dec
ds
jl
xchg
sahf
pop
mov
out
inc
add
add
jbe
repz
or
jg
jno
fwait
adc
retf
stos
pop
int
sbb
push
or
xchg
push
shr
test
pop
lods
sahf
inc
aam
mov
out
dec
cli
jo
sbb
sbb
jno
xchg
into
test
and
arpl
mov
test
jne
scas
pop
sbb
loope
gs
and
cwde
push
out
(bad)
leave
mov
lods
fild
fild
leave
bound
cmc
push
imul
xchg
arpl
xor
or
enter
cs
mov
(bad)
dec
push
mov
inc
push
adc
mov
adc
xlat
imul
pop
and
fmul
cwde
mov
call
cmp
jl
sbb
popf
xchg
(bad)
icebp
js
pop
cmps
jge
or
add
mov
jne
aaa
sub
push
ret
fadd
xor
cmp
pushf
popa
cmc
mov
in
(bad)
outs
jg
imul
dec
in
jmp
mov
cmp
outs
iret
or
(bad)
xor
mov
sbb
fidiv
into
in
mov
xor
addr16
cmp
loope
hlt
add
adc
mov
mov
dec
leave
add
lahf
rcl
aaa
cdq
idiv
daa
inc
into
push
push
sti
fidiv
and
fisub
sub
add
and
(bad)
inc
cwde
lahf
in
add
sbb
add
mov
arpl
adc
lods
jmp
cmps
cdq
inc
dec
call
or
repz
mov
out
mov
jne
inc
dec
inc
push
outs
addr16
ins
add
adc
jbe
sbb
push
and
xor
sbb
mov
pop
dec
mov
popa
rcr
cmp
push
jno
sahf
xchg
push
jge
cmc
inc
leave
mov
inc
jns
hlt
mov
and
cmc
jo
aad
pop
cli
jo
rcl
add
inc
mov
xchg
sub
imul
imul
dec
mov
inc
mov
je
scas
jp
fsub
mov
popa
inc
fcompp
xchg
mov
mov
sub
xor
pop
xor
push
inc
addr16
sbb
cwde
xor
mov
inc
xor
jge
jno
jg
mov
mov
xlat
(bad)
and
mov
push
or
fisubr
bound
push
xchg
les
(bad)
das
sbb
inc
jl
loope
bound
or
cmc
retf
adc
enter
ins
mov
or
mov
pop
sar
cmp
pop
xchg
sub
jmp
adc
aas
inc
push
lahf
pop
adc
out
imul
sub
in
lods
dec
(bad)
or
jl
(bad)
fisttp
push
sub
in
or
retf
fsubr
adc
jnp
mov
cmps
in
retf
cmp
xlat
inc
pusha
mov
data16
hlt
mov
mov
add
jge
popf
push
xchg
retf
mov
dec
mov
fwait
xchg
pop
int3
push
das
mov
rol
out
in
addr16
mov
or
rcl
sbb
jg
imul
(bad)
cmp
stos
popf
sbb
daa
and
jle
in
mov
or
test
jno
outs
sbb
jl
std
aad
xchg
mov
ins
(bad)
fwait
movs
sbb
lock
in
leave
pop
cmps
popf
cdq
fwait
pop
mov
pop
add
movs
test
out
test
fnstsw
pop
push
ss
xchg
or
(bad)
jns
sbb
ins
neg
popa
push
ret
jns
sar
and
jecxz
test
cmps
or
mov
sahf
or
mov
aam
fs
xor
push
cmp
out
jnp
ror
xor
push
adc
lds
pop
xchg
cmps
fsub
jno
pop
jne
mov
mov
add
xchg
pop
stos
jp
or
outs
or
jecxz
push
jmp
jnp
jno
lock
add
repnz
add
mov
in
jne
sbb
xchg
dec
std
mov
push
ins
ret
lds
movs
movs
xchg
mov
xor
enter
les
stos
movs
cmp
mov
inc
pop
fucompp
fcomp
movs
mov
sbb
stos
jle
jae
push
pop
stos
les
inc
mov
retf
into
ja
pop
outs
rol
cli
jb
dec
enter
jg
(bad)
retf
aad
hlt
outs
outs
repnz
mov
inc
aam
xchg
jo
adc
dec
in
scas
cld
mov
push
pop
sahf
idiv
sub
enter
push
cmp
pop
in
xchg
push
cmps
(bad)
jne
lds
cdq
int3
jg
inc
or
int3
jmp
add
mov
pop
or
add
xchg
and
test
mov
mov
int
into
jecxz
mov
mov
jne
or
jecxz
mov
aas
jns
jb
and
test
out
das
xchg
movs
pop
xor
lahf
mov
sbb
out
rol
cmp
outs
in
pusha
adc
adc
xor
inc
jb
sbb
and
aas
rol
shl
jo
dec
mov
jno
mov
inc
fisttp
or
nop
push
nop
call
add
sbb
push
aam
outs
test
dec
test
dec
jo
push
imul
data16
test
setle
jns
fwait
pop
bound
aam
fisub
stc
test
jmp
jmp
mov
inc
test
jge
les
sub
push
dec
cld
rol
outs
ja
mov
sbb
pop
jae
sub
mov
out
cmps
sbb
add
cmp
dec
add
or
jo
mov
fld
adc
cwde
fimul
dec
(bad)
inc
jmp
loope
outs
mov
(bad)
mov
mov
mov
fs
fiadd
push
xor
in
push
out
jo
cmp
ds
mov
adc
push
xchg
fs
xchg
pop
and
mov
test
scas
lahf
(bad)
mov
sbb
fwait
shl
fldenv
adc
(bad)
ss
hlt
jg
outs
cmc
ret
mov
xchg
loopne
cmps
jmp
xchg
xor
push
neg
cwde
retf
js
adc
cmps
xlat
or
sub
psrlq
lock
xchg
mov
xchg
aas
push
ja
adc
pcmpgtw
(bad)
jmp
jne
pop
xchg
lods
mov
leave
mov
out
dec
or
mov
call
cmps
dec
fisub
bnd
ds
jl
outs
outs
mov
xor
adc
xchg
pop
inc
movs
imul
xchg
jle
jb
push
jmp
jmp
iret
js
inc
push
dec
xor
sub
lock
jmp
int3
retf
adc
mov
lahf
mov
movs
pop
jl
fist
adc
or
jns
lods
jmp
xchg
(bad)
xchg
mov
sub
and
sub
pop
push
std
fucomip
jecxz
add
sti
sar
mov
and
push
pop
outs
ror
mov
outs
mov
pushf
jp
and
adc
pop
and
sbb
or
dec
adc
inc
xor
fild
ins
mov
add
test
jmp
cmp
aad
jbe
or
fucomip
iret
into
adc
out
push
mov
mov
(bad)
(bad)
xor
xor
sbb
cdq
add
cmp
add
mov
jnp
pop
(bad)
int
ret
sbb
and
add
jl
neg
aad
xchg
fild
mov
mov
seta
test
mov
daa
mov
sub
mov
cmp
shl
push
mov
mov
xor
adc
nop
dec
call
test
fist
jle
cld
dec
pop
add
(bad)
(bad)
jecxz
ins
adc
es
push
mov
fsub
popa
div
adc
jecxz
ss
repz
lods
sbb
mov
mov
inc
lods
(bad)
sub
lods
mov
mov
cmps
add
pop
dec
dec
mov
inc
test
clc
inc
call
test
lock
and
mov
mov
fsubr
sub
imul
ja
test
mov
dec
push
(bad)
sbb
out
div
inc
xor
lahf
or
mov
stc
das
xchg
add
and
jmp
sub
sahf
jmp
inc
aas
data16
pop
fistp
cli
add
(bad)
leave
in
std
jl
or
fsub
sbb
js
and
cmp
hlt
xchg
inc
xrelease
mov
push
test
push
pop
adc
and
aaa
pop
push
movs
mov
(bad)
sub
sub
mov
rol
test
xlat
cdq
loopne
pop
enter
clc
sub
je
(bad)
fdivp
sbb
jne
outs
dec
xor
jg
add
jmp
pop
(bad)
mov
lahf
popf
push
and
stos
add
adc
pop
loopne
ins
add
sbb
mov
sub
push
cmp
xor
pushf
outs
loopne
and
lods
pop
adc
dec
fnsetpm(287
push
jecxz
xor
mov
(bad)
sbb
repz
frstor
mov
cdq
call
mov
and
popa
push
push
icebp
lods
in
fimul
xchg
lods
inc
xchg
pop
in
add
inc
mov
popf
pminub
into
call
pop
or
xchg
cmc
add
les
adc
or
fnstcw
out
mov
or
jnp
mov
std
fild
scas
jmp
add
fistp
outs
cld
jle
data16
xchg
or
sahf
jmp
stos
mov
arpl
sbb
push
adc
icebp
xchg
je
in
aaa
jb
retf
mov
jb
dec
pop
ja
xchg
lahf
xor
dec
xchg
mov
(bad)
xchg
call
sbb
mov
retf
test
add
aaa
adc
popa
dec
or
sbb
mov
sub
loopne
js
adc
cmp
mov
sar
lods
aad
sti
jp
push
mov
mov
repnz
push
out
pop
test
pop
(bad)
mov
call
push
fld
mov
popa
rcl
pusha
leave
xor
int3
pop
clc
(bad)
xchg
xchg
mov
shl
sbb
call
out
mov
jnp
popf
jo
ins
imul
test
mov
xchg
xor
and
in
adc
std
sbb
leave
sub
test
xchg
add
mov
fdivr
shr
iret
retf
and
inc
jl
mov
shl
mov
or
inc
jp
out
cmp
ret
jg
and
jne
cmp
ss
ins
jno
dec
scas
xchg
(bad)
mov
mov
loope
out
pushf
loopne
lds
inc
add
outs
xchg
shr
enter
push
sub
mov
inc
xor
inc
and
jmp
movs
jb
out
add
inc
and
cmps
repz
ficomp
or
test
xlat
lods
xchg
mov
jo
sub
jp
shl
ficomp
push
pop
outs
or
cmc
(bad)
push
add
mov
lahf
loop
loope
mov
sbb
sti
outs
push
scas
mov
jg
mov
mov
jnp
jb
out
ss
jecxz
jmp
push
sbb
fst
mov
jae
es
fbstp
retf
jns
xor
jp
cmp
stos
sar
xor
aam
jmp
shl
sti
int
je
xlat
sbb
(bad)
nop
(bad)
sub
aaa
push
mov
movs
mov
sub
cmps
(bad)
or
popf
out
and
int3
js
xchg
mov
dec
sub
call
or
dec
aas
jmp
mov
sub
sbb
lods
lea
imul
aad
enter
nop
mov
data16
sub
push
aad
push
mov
cmps
and
lahf
(bad)
sub
fsubr
adc
mov
pop
sbb
mov
and
clc
jae
in
cmp
push
daa
adc
cmp
(bad)
call
dec
or
xchg
xchg
fild
xor
mov
mov
outs
pop
mov
mov
sbb
aam
mov
adc
fs
popf
in
popf
cmp
out
xchg
neg
mov
call
inc
stos
jge
adc
add
pop
push
mov
jmp
(bad)
ins
cmp
hlt
sbb
hlt
mov
dec
(bad)
daa
mov
int
mov
jmp
ficom
pop
daa
std
dec
movs
push
ins
mov
mov
mov
push
jle
mov
sbb
add
push
ja
adc
jp
repz
xchg
sbb
out
mov
mov
jmp
and
fs
rcl
add
inc
cmps
or
mov
into
adc
cld
sbb
xor
xchg
outs
cdq
outs
in
cdq
and
sub
jl
leave
mov
(bad)
ss
setnp
call
clc
nop
iret
idiv
adc
std
dec
push
adc
or
pop
pop
xor
xchg
push
(bad)
jo
fs
push
mov
arpl
or
int
sar
inc
ds
dec
retf
dec
adc
lock
lahf
inc
xor
cli
(bad)
xchg
jecxz
jp
mov
mov
ins
jp
xchg
and
js
sti
dec
jne
js
sub
mov
clc
retf
lods
jl
add
movs
(bad)
xor
jge
cmp
push
add
pop
and
inc
data16
shl
jp
enter
and
outs
pop
ins
repnz
in
push
and
adc
es
ins
ds
xor
scas
mov
in
xchg
push
mov
jp
mov
mov
dec
push
outs
les
mov
xor
push
xchg
cmp
dec
adc
(bad)
dec
xor
pushf
or
idiv
adc
mov
pop
pop
ret
arpl
lods
fwait
cmps
sahf
or
add
in
sti
pop
mov
inc
xchg
dec
fbstp
xchg
mov
sub
jb
mov
push
jno
add
sti
test
or
xor
pop
mov
call
pop
pop
jnp
inc
push
inc
dec
pop
inc
and
push
cmp
lahf
out
fsubp
stc
sahf
pop
in
fist
test
fcmovb
push
and
cmps
pop
cmps
pop
ss
lds
leave
popf
jb
sbb
xor
shr
sbb
add
sub
xor
or
in
stos
cmp
mov
(bad)
mov
add
(bad)
cwde
mov
frstor
jnp
jb
(bad)
test
mov
adc
xchg
pop
in
mov
cmps
icebp
xchg
jne
mov
add
jmp
test
shl
imul
fwait
scas
add
jmp
mov
cmp
xchg
je
cmp
xor
retf
sub
inc
aad
fadd
rcr
lahf
cmps
add
cmp
push
pushf
adc
sahf
sbb
es
cld
mov
or
mov
jnp
pop
popa
cmp
push
xor
mov
sbb
cmps
and
dec
xor
out
jns
sbb
jns
pusha
xor
pop
(bad)
adc
fwait
and
out
inc
mov
test
xor
aaa
test
or
aas
lds
add
mov
fnstenv
dec
rcr
xlat
(bad)
out
fcomp
lods
add
dec
push
nop
jno
popf
jnp
sbb
adc
retf
(bad)
push
mov
mov
iret
dec
push
mov
iret
jo
addr16
cmp
stos
push
mov
retf
mov
jle
outs
inc
fucomp
push
cld
inc
xor
xchg
add
test
in
mov
dec
cmp
clc
ret
pop
xor
sbb
popa
pop
std
(bad)
outs
and
xchg
out
adc
adc
push
jb
aaa
sub
or
out
jae
push
jns
call
cs
loope
loop
xchg
cmc
jecxz
cs
imul
xor
dec
jp
shl
cld
arpl
aaa
dec
rcl
cmps
pop
xchg
lods
dec
stc
in
test
pusha
mov
ret
mov
inc
adc
jnp
mov
fwait
pop
aas
push
xchg
xchg
xchg
shr
jo
sub
xchg
xchg
sbb
dec
xor
xlat
xlat
add
shr
xchg
push
rcl
add
fwait
enter
scas
and
out
mov
cmp
sbb
xchg
outs
(bad)
xchg
fs
fdiv
add
dec
sahf
inc
dec
push
mov
xor
fwait
or
and
cwde
mov
add
pop
jo
popa
sbb
int
lock
mov
dec
icebp
mov
inc
jp
imul
jae
mov
xchg
jge
(bad)
mov
popf
lds
mov
out
mov
sar
aad
ins
sub
jecxz
pop
jl
sahf
shl
and
sub
jl
sub
fsubr
test
cwde
add
into
inc
xor
cmps
dec
popf
imul
inc
test
(bad)
sub
push
and
jl
arpl
loop
inc
xor
and
rcl
and
mov
dec
repnz
out
aas
test
in
dec
push
fist
xchg
sbb
sar
inc
mov
cli
jle
idiv
aaa
or
cwde
and
test
or
dec
xor
mov
js
ja
mov
stc
xchg
jg
fst
scas
pop
mov
adc
jno
cld
add
dec
inc
int3
mov
in
(bad)
sub
arpl
into
mov
int
(bad)
dec
dec
iret
ret
or
test
mov
or
ins
lahf
ins
enter
pop
pop
test
cwde
pop
and
stc
sub
sub
jmp
inc
push
aaa
lahf
(bad)
lods
jb
or
mov
call
nop
enter
jnp
add
call
mov
or
inc
mov
jbe
loope
nop
xchg
repnz
scas
in
mov
inc
mov
mov
(bad)
mov
fnstenv
mov
or
adc
jnp
lods
hlt
repnz
mov
pop
outs
mov
mov
fs
xor
enter
cli
in
stos
inc
aaa
aaa
shr
and
iret
arpl
or
(bad)
call
test
cmp
int3
(bad)
push
jns
jae
out
dec
mov
mov
xor
pop
adc
cs
repz
jmp
push
xor
outs
mov
cmps
loop
ret
xchg
pop
xor
scas
mov
cld
(bad)
add
and
pusha
test
mov
data16
adc
pop
idiv
sahf
xchg
inc
inc
xchg
fisubr
fnstcw
xchg
retf
xchg
cli
cwde
sbb
fild
sbb
jns
fcomi
stos
scas
in
shl
out
xlat
mov
ret
push
dec
dec
xchg
dec
pushf
adc
enter
inc
pop
adc
ret
ret
xchg
xlat
retf
outs
sar
cmp
cmp
int3
icebp
jo
cmps
iret
addr16
retf
pop
cmps
mov
xor
in
jge
mov
sub
inc
retf
frstor
xchg
gs
add
rcr
js
mov
xchg
jg
push
and
test
rol
cwde
mov
js
inc
js
xchg
pop
stc
xor
jnp
sahf
ins
adc
nop
pop
out
pop
addr16
iret
fild
adc
scas
out
sub
push
jecxz
rol
mov
nop
clc
xchg
xor
xchg
fild
es
jmp
sub
mov
pop
rol
jmp
hlt
aad
push
stos
inc
inc
xchg
jnp
enter
(bad)
iret
sti
pop
test
dec
push
add
iret
mov
jo
test
mov
dec
jmp
or
cmp
sbb
mov
xchg
pop
retf
shl
leave
fidivr
cmp
retf
sti
call
push
mov
aam
or
loope
dec
push
pop
sbb
and
dec
jl
and
push
add
mov
jecxz
xchg
adc
sub
push
inc
outs
(bad)
sub
push
cmps
xor
xor
out
mov
call
repnz
lods
adc
mov
out
rcl
mov
pop
repz
jecxz
push
scas
repz
lods
imul
mov
sar
pop
add
idiv
(bad)
mov
xor
repz
sub
rcl
shl
test
retf
movs
cli
inc
xchg
sahf
test
jb
cs
jae
inc
ret
cmc
ror
pop
dec
cmps
and
aaa
jno
mov
and
mov
fsub
xchg
inc
xchg
mov
dec
fld
call
inc
xor
inc
add
es
cmp
and
mov
out
loop
mov
(bad)
push
fist
xlat
mov
adc
sub
stc
and
(bad)
sti
push
scas
mov
lods
sbb
ffreep
xchg
inc
jg
je
mov
add
(bad)
lock
cs
call
jle
and
sub
xor
mov
push
aaa
int
pop
mov
dec
sbb
rcr
fcmovnb
int3
(bad)
ins
cmp
jbe
dec
nop
ins
lods
imul
inc
sub
xchg
push
jg
sbb
inc
lea
out
fldcw
or
mov
aad
fisubr
xchg
into
rcl
add
add
sahf
jecxz
push
sbb
and
pushf
jge
(bad)
cmp
dec
cmp
retf
inc
cmp
imul
fdivp
jle
and
outs
xor
add
mov
hlt
in
aaa
(bad)
fs
adc
inc
data16
dec
into
arpl
clc
std
mov
push
rol
ss
ret
fcomp
test
jbe
daa
inc
popf
cli
cmp
push
xchg
push
mov
pop
xor
lahf
inc
mov
pop
stc
mov
pop
dec
mov
and
jnp
fdivp
and
fdiv
xor
push
jg
into
(bad)
aas
je
in
and
jl
mov
jno
test
popa
pop
add
mov
mov
xor
push
push
out
dec
out
stos
xor
rol
jl
sbb
and
pushf
mov
add
clc
ds
jmp
or
(bad)
mov
push
std
inc
hlt
push
rcl
pop
stc
push
adc
addr16
sbb
push
push
dec
jp
cmp
dec
(bad)
imul
fcomp
fild
lds
cmps
dec
scas
gs
jle
cli
mov
sti
iret
mov
cmp
pop
aam
jl
cwde
pop
add
addr16
mov
inc
adc
pop
inc
jae
call
outs
jmp
jo
enter
or
jle
fnstsw
mov
aad
sbb
dec
push
sbb
fcom
push
sub
std
rcl
retf
dec
or
jbe
lods
jl
adc
shl
inc
sti
(bad)
aam
add
cmp
mov
pushf
gs
inc
jb
mov
jl
sbb
dec
pop
das
mov
mov
push
cmp
test
sbb
pop
sbb
test
icebp
cmps
xchg
and
mov
mov
pop
adc
popa
test
adc
xlat
mov
shl
in
inc
or
jp
adc
xchg
scas
movs
push
loop
mov
enter
scas
ss
fdiv
scas
cdq
push
jne
jmp
jg
cmp
(bad)
ret
sub
loop
fcmovnb
stos
inc
push
mov
lods
pop
push
and
call
out
js
or
scas
in
mov
mov
push
pushf
pop
fs
iret
scas
sub
sbb
out
jnp
pop
push
mov
pop
lods
or
stos
adc
sti
enter
xchg
es
mov
jmp
(bad)
mov
xor
xchg
fidiv
ins
cli
add
add
hlt
pop
jb
inc
jl
mov
adc
mov
xchg
dec
fld
loop
add
cmp
mov
in
inc
aad
hlt
xor
mov
sti
xchg
cmp
hlt
fs
and
xor
call
push
and
leave
arpl
adc
sub
ss
adc
dec
aaa
sbb
jmp
inc
mov
and
(bad)
and
int
sar
sbb
call
mov
retf
inc
daa
ss
int
call
inc
inc
shr
mov
gs
or
(bad)
fisub
dec
jb
test
cmp
add
imul
mov
jae
fs
push
lods
mov
sub
popa
push
jg
jg
inc
in
add
mov
lds
call
es
shr
dec
popa
popa
gs
ins
fisttp
xchg
sub
pop
inc
xchg
out
pop
cwde
stos
dec
dec
mov
mov
sub
or
ficomp
xor
jmp
movs
sub
inc
push
gs
out
nop
popa
repnz
cdq
clc
popa
iret
mov
fistp
xchg
pop
pop
sbb
aad
in
adc
xchg
movs
and
dec
and
sbb
sub
jbe
pushf
push
cdq
call
aaa
hlt
jecxz
in
pop
test
and
test
push
sbb
loope
push
int3
lahf
pop
ror
pop
and
mov
or
or
pusha
cmp
lods
or
cmp
clc
jbe
sbb
fwait
scas
add
lds
sub
xchg
in
dec
sbb
pop
loope
outs
ret
xchg
inc
mov
lods
mov
mov
mov
jo
sub
mov
fcmove
xchg
ret
push
in
idiv
jecxz
lock
jns
sub
stos
mov
push
sub
mov
cmps
cmp
mov
arpl
inc
mov
aad
fdivr
rcr
iret
in
mov
cmps
xor
pop
fwait
aas
and
in
add
ins
fild
aad
test
push
jmp
sbb
dec
in
aas
mov
ficom
push
pusha
fsubp
jno
xchg
aad
xor
test
mov
cmovg
retf
push
sbb
sub
popf
pop
ret
out
push
xchg
popf
push
sub
push
popa
jle
push
mov
popf
cvtpi2ps
adc
xchg
ret
push
mov
adc
out
imul
dec
add
lahf
xchg
mov
imul
fnstcw
fcmovbe
push
cmp
mov
sti
jle
mov
(bad)
cld
dec
pop
jp
cmp
sbb
and
movs
add
inc
aad
sbb
fdivr
stc
jnp
rcl
imul
ja
add
loopne
fisubr
dec
and
and
repnz
outs
sti
jns
bswap
sbb
sbb
sub
jp
inc
call
or
mov
cmp
sbb
xor
mov
dec
sti
push
mov
jp
sti
push
jecxz
clc
and
inc
bound
jg
or
xchg
mov
leave
out
push
into
test
xor
xor
xchg
sbb
mov
(bad)
hlt
in
popa
nop
repnz
cmc
dec
ss
push
and
test
push
or
movs
leave
mov
scas
jmp
and
add
cmps
jnp
aas
cld
es
div
test
scas
shr
out
adc
sbb
jmp
int
fwait
lea
jae
jbe
sub
repnz
push
les
mov
push
test
pop
mov
adc
lods
call
push
mov
cli
jbe
not
inc
and
retf
cmps
call
mov
mov
xor
outs
outs
or
outs
(bad)
and
movlps
out
pop
movs
adc
mov
or
inc
stos
dec
sbb
bnd
shr
mov
out
xor
sbb
cbw
xchg
sbb
test
push
test
inc
jo
push
jb
xor
add
ins
inc
daa
mov
mov
add
xchg
in
push
add
cmp
(bad)
arpl
sub
mov
stc
imul
push
aas
add
mov
je
pop
icebp
cwde
push
(bad)
mov
fistp
mov
and
cdq
pop
outs
xchg
or
popf
mov
push
imul
dec
pop
gs
fsub
out
sti
adc
test
sub
int
xchg
lea
pop
cdq
xor
and
push
rcr
mov
and
pop
cmp
out
out
sti
mov
xor
bound
sbb
leave
rcr
xchg
add
sar
loop
int
ror
jns
clc
test
or
inc
int
fdiv
test
mov
lahf
test
jns
or
cmp
pop
dec
jl
mov
dec
cmp
cld
add
jp
cdq
xor
int
sbb
pop
dec
aad
cmp
dec
movs
dec
arpl
aas
add
push
stc
(bad)
test
pop
push
jg
aas
je
sub
outs
sbb
shl
sub
jp
and
inc
imul
or
in
cmp
sub
stos
push
shr
adc
xchg
leave
push
out
jecxz
(bad)
popa
mov
mov
popf
test
inc
push
dec
add
sbb
sti
shr
mov
stos
movs
ficom
fild
pop
dec
(bad)
test
jge
push
test
jae
clc
(bad)
cld
lahf
nop
push
das
add
adc
out
ins
popa
iret
into
hlt
sub
ficomp
dec
mov
add
or
cwde
mov
sbb
sub
dec
das
icebp
adc
fwait
mov
imul
xchg
rol
or
mov
xor
les
mov
cli
icebp
jnp
test
mov
jl
(bad)
icebp
pop
fxch
in
cmps
mov
int3
retf
sub
in
shl
or
(bad)
loope
ins
xor
imul
jp
fs
shr
or
mov
daa
push
scas
pop
mov
movs
int
stos
xor
dec
sbb
xor
sbb
mov
jmp
jmp
rol
xchg
adc
outs
dec
jmp
inc
stc
leave
xchg
jmp
jb
pop
and
jmp
jnp
mov
mov
jnp
sub
cmps
xchg
lock
int3
fs
xchg
fwait
or
dec
jecxz
adc
fcomip
xor
and
mov
inc
sar
jb
cs
xchg
fbstp
ds
lock
lods
push
jb
xchg
mov
data16
mov
push
xor
out
imul
mov
cs
shl
mov
pop
cdq
pop
sub
(bad)
and
stc
clc
mov
sbb
mov
mov
(bad)
or
(bad)
pop
lahf
fild
out
adc
sbb
mov
cmps
pop
mov
enter
adc
jle
mov
push
mov
jp
pop
movs
xor
sbb
sti
and
cs
test
xchg
mov
push
pop
test
mov
jl
(bad)
repnz
cmp
out
cmp
push
and
fstp
mov
jae
out
out
or
popf
inc
add
xchg
lahf
lods
(bad)
les
mov
and
pop
movs
dec
inc
mov
in
dec
pop
dec
rcl
xor
sub
cmp
lds
and
imul
and
xor
loop
push
xor
adc
mov
movs
xchg
popa
lea
mov
cmp
popf
mov
mov
pop
fdivr
mov
and
pop
mov
mov
cmp
sub
mov
adc
fstp
aam
jle
xor
int3
loopne
mov
inc
cmp
and
pand
mov
or
cdq
repz
stos
outs
call
(bad)
test
in
mov
pop
test
aam
idiv
mov
mov
ret
cmp
lds
popf
mov
cld
popa
inc
fsubr
xchg
ret
test
jecxz
inc
out
inc
shr
pop
jl
mov
mov
shl
inc
pop
cmps
push
cmp
rcl
dec
inc
mov
jnp
xchg
inc
lea
push
sub
mov
adc
xchg
cmp
repz
adc
adc
pop
xchg
sahf
jno
xchg
push
pushf
cmp
mov
xor
sbb
jb
js
push
lods
mov
mov
(bad)
fcom
sub
sub
inc
fbstp
jbe
ja
push
sub
inc
int
and
mov
movs
inc
sbb
pop
sub
inc
outs
ret
into
pop
cmp
adc
push
mov
cmp
stc
pop
fstp
sbb
cmps
xor
sbb
adc
xchg
movs
addr16
test
sbb
ds
cs
mov
gs
popf
push
sub
sub
or
fisub
cmc
pop
stos
inc
fistp
jle
xchg
int
sbb
enter
not
cmp
cdq
cmc
repnz
pop
ret
fwait
sahf
inc
dec
sar
and
xlat
sbb
xor
sbb
loop
mov
lock
call
inc
(bad)
jle
iret
movs
dec
xchg
cdq
aaa
inc
inc
imul
lock
out
enter
adc
mov
dec
in
mov
sar
icebp
pop
add
inc
stc
cmps
or
and
stos
mov
adc
arpl
in
jl
les
out
xchg
int
lock
xor
xor
retf
stos
hlt
out
imul
and
xor
fidiv
jno
test
out
leave
rcr
add
add
lea
ja
mov
(bad)
jns
dec
ret
(bad)
push
pop
lock
sub
and
popf
lock
leave
dec
retf
or
adc
icebp
push
cwde
fdivr
out
out
jle
cmp
aas
push
cld
out
fsubp
or
icebp
test
mov
ds
push
les
int3
mov
jg
out
inc
jns
add
push
mov
sbb
sub
sub
lock
inc
jmp
mov
inc
cmp
out
stos
cmp
jno
push
rcr
jecxz
sti
push
aad
xchg
pop
lds
jmp
mov
mov
pop
jnp
inc
or
daa
dec
mov
inc
push
cmp
pop
mov
bound
push
xor
lock
mov
dec
sbb
ror
or
xlat
cmp
mov
jl
xor
and
lea
cmp
jge
sti
xchg
pushf
add
pop
xrelease
scas
lds
mov
dec
test
(bad)
jmp
fs
mov
fs
arpl
cmp
mov
sbb
sub
push
sub
pop
mov
xchg
and
movs
add
pop
addr16
mov
and
push
or
cs
jl
(bad)
fidivr
mov
stos
or
adc
push
pop
das
dec
adc
push
call
or
inc
push
or
inc
aam
push
and
aad
mov
fwait
xor
test
inc
inc
pop
ror
jmp
(bad)
(bad)
mov
dec
mov
rcr
aam
js
addr16
inc
pop
jecxz
cwde
xchg
(bad)
dec
rol
in
mov
je
call
xor
add
jo
cwde
clc
jg
inc
xor
mov
icebp
inc
jge
(bad)
jmp
ret
scas
pop
jg
(bad)
shl
mov
mov
sti
icebp
adc
add
xchg
lea
vmovups
(bad)
pusha
push
xor
dec
xchg
nop
dec
popf
rcl
mov
popf
out
out
(bad)
inc
xor
xor
rcl
push
xor
or
xor
out
adc
pop
add
out
lahf
adc
sbb
xchg
pop
pop
jg
mov
pop
mov
sub
ins
rcl
push
bound
fst
xor
and
adc
and
movs
push
gs
inc
push
inc
fimul
shl
cmp
fisttp
test
fild
jecxz
mov
int
push
cmc
nop
pusha
mov
(bad)
fnsave
test
imul
and
push
xchg
jno
(bad)
jb
pop
popa
xor
fisub
aad
cmc
mov
dec
ficomp
add
add
aas
sahf
ret
jnp
es
or
das
adc
pusha
mov
jle
jb
cmps
mov
inc
(bad)
jne
not
jmp
loope
xor
mov
inc
call
cmp
dec
sub
cmps
mov
xchg
(bad)
mov
jo
stos
das
sbb
movs
rol
cmp
les
sar
popa
fsub
clc
loop
xchg
inc
sar
clc
call
add
aad
leave
pushf
in
pop
inc
adc
add
pushw
mov
cmc
movs
call
push
hlt
pusha
cmp
xchg
mov
push
fs
cwde
jae
(bad)
push
mov
ror
adc
(bad)
jle
mov
cmps
jl
shl
stos
and
call
inc
loopne
add
(bad)
cmc
inc
es
les
mov
pop
icebp
jl
loop
mov
in
cmp
cmp
or
imul
in
leave
clc
pop
mov
lahf
ret
dec
sub
mov
or
mov
aas
inc
or
icebp
sub
mov
retf
mov
jge
loop
scas
mov
mov
jg
jo
xlat
inc
jne
out
mov
cs
loopne
scas
inc
imul
loopne
cmp
aad
cwde
iret
add
and
jmp
into
test
jne
and
fldenv
aad
ret
mov
xor
xchg
fcomp
push
or
inc
aas
loop
cwde
push
jbe
loop
leave
jmp
ins
push
dec
mov
xchg
ret
mov
xchg
lea
jmp
sub
imul
pop
lods
and
bnd
jmp
push
fsubr
mov
loope
js
paddq
mov
cmp
xor
test
xchg
out
xor
sub
inc
cwde
mov
or
inc
je
dec
mov
dec
cs
add
shl
out
add
xchg
mov
add
je
jns
ficomp
in
sub
ss
test
pop
in
cwde
(bad)
lds
movs
(bad)
(bad)
jp
sar
xchg
jp
xchg
dec
shl
icebp
cmc
xchg
sti
(bad)
mov
mov
or
xchg
and
movs
call
cwde
aad
js
xor
mov
popa
cmp
cmp
sub
adc
adc
das
ja
pop
push
in
shr
or
jg
das
cdq
fsubp
jle
jp
fwait
shr
and
add
call
inc
dec
mov
out
shl
lods
mov
test
inc
fwait
repz
mov
in
ret
fidiv
or
adc
enter
mov
mov
sbb
cmp
pop
and
clc
push
mov
imul
in
mov
jae
add
shl
stc
xchg
cmp
adc
pop
fsub
xchg
cs
das
lods
scas
je
pop
fisubr
or
jge
in
adc
jne
jge
mov
pop
cmp
sub
mov
pop
cmp
daa
ret
fdivr
cmc
inc
inc
mov
dec
mov
mov
fst
addr16
push
out
icebp
jmp
push
mov
inc
mov
xlat
mov
gs
jno
jno
sub
push
(bad)
xor
aaa
pop
adc
mov
xchg
or
cmp
dec
in
(bad)
or
mov
xchg
pop
xchg
xchg
or
mov
daa
jbe
cwde
cmp
push
bound
ins
push
adc
mov
outs
mov
cmp
xchg
daa
dec
inc
and
js
xor
xchg
cs
dec
sub
fstp
scas
pop
mov
imul
fs
(bad)
in
sub
rcl
dec
add
retf
cld
inc
rol
add
push
cs
jp
cli
sub
xchg
mul
stos
push
cdq
lahf
and
dec
push
and
inc
inc
(bad)
pop
std
fisttp
sbb
push
imul
stos
rcr
mov
sbb
sub
jns
fbld
lock
cld
out
sub
mov
cmp
(bad)
dec
test
das
in
imul
adc
repz
in
xchg
icebp
sbb
push
fdivr
jb
fsubr
aad
in
push
(bad)
jbe
xor
jge
out
mov
aas
pusha
test
inc
mov
and
sbb
jns
jecxz
test
mov
inc
std
mov
int3
pop
sbb
es
mov
pop
addr16
arpl
mov
inc
test
push
fwait
cmp
lds
clc
arpl
int3
push
fmul
in
push
add
pop
adc
push
loopne
stc
repnz
sbb
mov
in
ror
jnp
mov
fnstenv
sub
cli
aaa
add
mov
pusha
aaa
out
inc
jl
mov
xchg
(bad)
in
(bad)
sti
pop
pop
or
push
xor
mov
and
sub
in
iret
aam
bound
inc
scas
mov
adc
or
and
fcomp
mov
dec
jg
rcr
test
loope
xchg
xor
xchg
arpl
fcmovbe
sub
sbb
fstp
xchg
and
sub
shl
retf
xchg
sub
mov
inc
popf
aad
push
ret
inc
(bad)
out
sub
jbe
sbb
push
adc
test
cld
sti
ds
(bad)
cld
outs
cmps
mov
sbb
xor
pop
xchg
or
add
pop
test
into
mov
outs
pop
inc
ins
mov
adc
adc
xchg
pop
sub
test
add
or
and
les
popa
pop
sti
outs
retf
mov
out
sbb
pop
lods
popa
mov
adc
inc
xor
out
mov
and
inc
sbb
inc
dec
and
test
pop
stos
cs
addr16
(bad)
xchg
cmp
mov
div
bound
sbb
jno
in
pop
push
or
mov
pop
pop
jno
push
sbb
sahf
pop
sbb
daa
pop
adc
cld
lahf
jecxz
lock
(bad)
adc
cmp
sub
xor
xor
mov
jno
pop
adc
jle
pop
push
cmp
xchg
pop
fwait
add
and
dec
fisttp
inc
pop
jne
shl
add
mov
fisubr
and
xchg
cs
pop
dec
cmc
lds
popa
dec
mov
mov
xor
cmps
pop
pop
aaa
mov
xchg
mov
pop
sub
sti
fidiv
mov
ret
add
fucomi
sub
ins
cmps
push
fild
cld
jns
shl
test
(bad)
jb
iret
pop
jmp
adc
xchg
(bad)
xchg
jne
jne
adc
into
add
mov
pop
les
fdivr
lods
xchg
data16
test
mov
pop
hlt
mov
push
pop
pop
das
cmp
pop
imul
jg
pop
jno
loope
pop
mov
mov
xchg
mov
hlt
iret
adc
and
addr16
adc
ss
cmp
loope
mov
das
scas
arpl
je
push
or
enter
cmp
gs
ds
mov
inc
aas
inc
mov
pop
pop
lods
repnz
pushf
mov
sti
dec
add
test
ja
mov
inc
mov
(bad)
cmp
das
adc
(bad)
cmp
loope
and
cmp
outs
mov
das
das
pop
jg
outs
mov
rcr
dec
and
fstp
sub
daa
jecxz
test
sahf
fcmovbe
and
cmp
scas
pop
and
xor
dec
daa
add
push
inc
xor
fild
aad
and
hlt
ds
jne
xor
movs
ja
(bad)
rcl
pop
lock
xor
add
popf
jmp
iret
fdiv
add
aad
mov
cmc
and
adc
inc
xor
sub
cmp
add
xor
jnp
test
(bad)
jecxz
das
sahf
clc
jecxz
mov
jbe
js
sub
pop
test
cdq
ss
or
xor
or
mov
test
sbb
xor
jg
mov
add
xchg
jmp
mov
xor
ds
dec
(bad)
fs
mov
jo
sbb
movs
xchg
pop
popf
mov
dec
jp
iret
(bad)
lea
test
cmp
push
adc
jae
mov
and
push
push
and
retf
xchg
ss
popf
sub
outs
stc
inc
xor
cmp
or
mov
dec
add
xor
dec
sar
push
mov
fstp
jle
cmp
mov
mov
dec
mov
push
imul
jg
ror
je
dec
adc
pusha
cmc
mov
shl
fucom
or
cli
pop
or
ror
push
stos
out
(bad)
pop
and
cmp
sbb
push
cmp
mov
retf
sub
mov
mov
sub
sub
arpl
jns
cs
sbb
movs
aas
fmul
add
sub
loope
lock
(bad)
mov
stos
pusha
fisttp
xchg
outs
int3
repnz
pop
push
adc
xor
add
retf
scas
cmp
retf
add
push
retf
push
pop
ins
(bad)
js
cmp
movups
fcom
add
ss
pop
or
mov
pop
aas
mov
sbb
or
mov
sub
ins
jbe
add
pop
dec
inc
test
and
and
jle
fcomp
dec
in
outs
xchg
mov
xchg
add
dec
inc
shl
enter
(bad)
int
jbe
xchg
stos
jecxz
push
dec
fiadd
je
(bad)
pop
cmc
and
dec
add
inc
in
sub
cmp
outs
fucomi
rcr
sbb
stos
cld
cmc
out
(bad)
sbb
inc
jnp
fs
push
lods
call
xchg
retf
sub
push
inc
lods
out
mov
(bad)
in
sub
mov
and
(bad)
fld
xchg
stos
mov
sub
sub
rcr
loopne
cli
jge
xchg
out
ins
lods
xchg
clc
stos
hlt
inc
sbb
fcomp
add
xchg
sbb
loop
pop
rcr
fild
xchg
loop
sti
jae
inc
mov
sar
mov
push
push
jo
inc
(bad)
mov
retf
js
sub
cs
dec
outs
or
stos
fcom
ds
push
fidiv
jle
jbe
xor
inc
fbld
leave
mov
ffree
push
ror
ror
pushf
imul
lock
scas
mov
xor
add
mov
mov
xor
packsswb
push
jge
pop
or
pop
jnp
cmp
stos
jle
lds
loopne
jnp
leave
lahf
cmps
or
mov
cmp
or
ret
inc
mov
int
enter
frstor
enter
add
aaa
cmps
mov
cli
das
adc
cs
inc
or
or
mov
pop
test
jnp
bound
jns
outs
sub
push
add
push
call
test
loopne
(bad)
out
and
push
fisub
loope
out
sub
push
adc
lods
push
mov
mov
dec
jl
ds
adc
dec
inc
cli
mov
mov
and
inc
icebp
stos
dec
test
jge
cmps
imul
inc
push
sahf
jmp
sub
lahf
xor
lods
pushf
pop
pusha
adc
hlt
or
mov
sbb
dec
dec
push
push
adc
xchg
repz
wbinvd
jp
push
nop
mov
in
out
gs
pop
jns
mov
and
(bad)
push
in
int
jge
dec
pop
inc
xbegin
inc
cmps
pusha
scas
movs
fnstsw
sub
adc
retf
dec
scas
push
(bad)
or
je
lahf
je
mov
pusha
out
cmp
fisubr
in
sahf
xchg
sbb
dec
scas
xor
loope
js
mov
stc
xor
and
aad
hlt
in
inc
ret
test
in
jnp
or
fnstenv
movs
inc
push
adc
ds
inc
pop
pop
test
sub
pop
push
cmp
cmps
sbb
stos
(bad)
call
test
aas
enter
or
outs
inc
add
mov
inc
sbb
test
dec
sub
jmp
mov
sub
cmp
out
pop
and
mov
les
mov
call
hlt
dec
(bad)
xlat
mov
cmp
out
jns
mov
into
cmp
fstp
fdiv
and
jle
jecxz
ret
popa
call
fcmovnb
xchg
jns
gs
jmp
and
inc
mov
and
inc
dec
cwde
pop
inc
adc
cs
push
cmc
dec
push
movs
jge
mov
test
cmp
addr16
leave
mov
pop
fwait
into
sub
push
jmp
shl
sub
movs
outs
cmp
mov
cwde
mov
cmp
lock
popf
mov
leave
dec
jg
sbb
sbb
fiadd
imul
(bad)
sub
fcom
in
movs
hlt
mov
sub
xchg
jnp
repz
dec
mov
mov
inc
sub
pop
scas
add
dec
es
mov
or
and
mov
imul
xchg
inc
iret
retf
fisubr
pop
loop
inc
sbb
xor
mov
add
call
push
mov
xchg
cmp
mov
leave
cs
icebp
popf
mov
add
lods
pop
dec
fisttp
in
cmp
js
mov
xor
adc
jns
(bad)
mov
jecxz
mov
xor
jmp
lods
adc
(bad)
out
dec
cdq
jne
les
sbb
sbb
jle
add
mov
jl
ret
add
pop
xor
ficom
adc
mov
in
xchg
fild
shl
sub
daa
fwait
mov
fadd
sbb
jecxz
pop
out
mov
adc
sahf
push
pop
jmp
clc
cmp
xchg
pop
shr
aam
(bad)
into
dec
imul
xchg
pop
xchg
popf
xchg
outs
xor
jae
inc
or
aaa
sti
jbe
xor
pop
enter
pop
pop
sub
push
fld
xchg
jno
repz
cmc
inc
xchg
aaa
push
(bad)
(bad)
fnsave
retf
cwde
ja
sub
sub
mov
scas
mov
aad
stc
fcomip
mov
lods
call
adc
dec
sbb
mov
sub
xlat
jbe
scas
addr16
cdq
mov
scas
jbe
jns
cmc
dec
sbb
mov
jmp
fsub
sub
sbb
and
or
mov
cmp
test
aam
jmp
test
mov
jecxz
sbb
in
int
pop
nop
fnstsw
jb
jmp
jae
in
ins
(bad)
mov
and
clc
mov
xchg
mov
cmc
cmp
jo
mov
inc
lahf
mov
loopne
dec
dec
cmps
mov
sub
hlt
cli
ret
ret
jb
sub
or
jp
jmp
in
lea
jmp
lahf
cmp
and
or
jmp
jl
pop
jne
mov
dec
push
sbb
mov
mov
jmp
fcom
ins
mov
loop
push
jbe
and
aad
imul
xchg
imul
sub
inc
daa
rol
inc
outs
jecxz
imul
jl
arpl
in
sub
push
lea
inc
xchg
or
ror
sbb
mov
clc
call
test
cmp
fist
mov
jle
jge
pop
push
lahf
dec
test
data16
cld
mov
and
cli
xchg
xor
fcmovnbe
mov
aas
jno
pop
jp
loopne
(bad)
and
into
add
xacquire
cs
jle
push
js
int
cmc
(bad)
xor
xchg
das
dec
arpl
data16
dec
fmul
jae
mov
inc
sbb
ficomp
pop
fist
gs
cli
lock
mul
pcmpgtd
fsub
popf
jns
jp
inc
adc
ja
jns
add
inc
cmp
adc
cmp
mov
mov
adc
stos
jno
enter
in
stos
repz
mov
mov
adc
ret
dec
movs
ja
mul
call
push
repz
mov
pusha
shl
repz
mov
cmps
push
sbb
or
pop
mov
jno
jl
cmp
xor
jo
loop
mov
add
call
in
es
jne
movs
xchg
retf
std
xchg
adc
cmc
cmp
lahf
(bad)
xor
(bad)
dec
sar
xlat
sbb
push
dec
icebp
mov
(bad)
mov
jbe
dec
cmp
sub
pop
shl
pop
or
pop
sub
(bad)
and
or
sahf
xor
cli
lock
fisttp
iret
pop
dec
pop
ja
jo
cwde
pop
(bad)
cmp
push
push
inc
fld
pop
imul
stc
mov
scas
cs
cs
xor
push
aaa
mov
dec
mov
jmp
popf
js
xor
mov
inc
mov
push
dec
mov
pop
cmp
and
sub
push
adc
dec
aad
pushf
pop
jecxz
jmp
or
and
leave
and
push
ins
loop
jno
mov
push
(bad)
cmp
neg
std
and
cmc
loop
mov
and
cmp
retf
adc
in
mov
xchg
jmp
stos
dec
push
xchg
mov
and
mov
mov
addr16
repnz
ins
add
imul
movs
imul
or
in
push
and
or
ret
js
cld
or
push
jbe
icebp
mov
push
inc
cmp
xchg
gs
mov
out
xchg
sbb
mov
push
arpl
ret
adc
mov
test
mov
sbb
pop
sbb
enter
sub
pushf
js
(bad)
jl
loop
jmp
sbb
hlt
pop
in
or
jp
pop
mov
xlat
and
mov
sub
sti
sahf
or
lea
(bad)
test
sub
icebp
pop
xchg
add
push
addr16
or
les
adc
dec
stc
inc
add
das
inc
sbb
jle
cmp
gs
lock
cmp
xchg
add
data16
sbb
xchg
cld
or
push
popa
pusha
lods
jecxz
jb
vmwrite
shl
inc
jmp
js
and
test
sub
je
fdivr
jge
jg
mov
cmp
xchg
arpl
leave
push
mov
scas
in
popf
sbb
push
dec
mov
jp
aaa
pushf
(bad)
mov
retf
aad
mov
ss
pop
push
cs
cmp
and
jbe
jl
pop
pop
dec
fldenv
push
sar
and
(bad)
dec
out
imul
outs
or
sbb
retf
push
fdivr
cmp
mov
std
push
sub
mov
jbe
test
adc
xor
jmp
cmps
call
push
aaa
les
sub
stos
movlhps
jns
jne
dec
movs
sub
pop
lea
dec
and
popa
jl
idiv
outs
xor
loopne
pusha
cld
fwait
push
pop
pop
lods
sbb
xor
xlat
sbb
sbb
add
out
into
adc
pop
lods
pop
repnz
leave
ds
adc
dec
mov
in
dec
rcr
push
outs
pop
jo
cwde
mul
repz
inc
loopne
sahf
cmp
adc
xor
jl
repz
sub
sahf
movs
dec
mov
add
scas
test
push
stos
push
mov
jmp
push
movs
adc
in
add
inc
xchg
jle
sub
add
push
(bad)
xor
xchg
clc
shr
cli
dec
call
sbb
je
add
jp
or
lahf
je
sub
jle
call
lock
inc
add
sub
and
cwde
push
lds
mov
repnz
adc
lock
mov
inc
pop
rol
mov
out
dec
test
mov
fndisi(8087
test
mov
cmps
test
mov
movs
bound
aam
ret
cmps
dec
test
gs
pushf
sbb
jl
shl
xchg
mov
imul
sub
add
push
hlt
int3
call
and
jmp
leave
mov
lahf
ins
mov
lods
pop
jae
stc
adc
pop
popa
fs
cmp
fs
add
out
invd
cmp
pand
inc
jb
shl
mov
mov
sahf
(bad)
call
ss
mov
mov
pop
into
xor
sti
xchg
cwde
ffreep
mov
clc
(bad)
pop
and
or
pop
test
sbb
fsubr
std
adc
or
ins
mov
int3
push
inc
pop
push
pop
sbb
cmp
dec
imul
lock
xor
mov
test
fdivr
xlat
pop
popf
push
push
cmp
cmp
or
xchg
ins
inc
dec
dec
cmps
cmp
leave
cmp
pop
cmp
loopne
jbe
ss
rol
xor
xor
fisubr
lds
add
into
dec
scas
cmp
cmp
ins
aaa
or
xchg
shl
add
mov
mov
fsubr
push
xor
popa
dec
pop
std
pusha
push
sti
mov
push
cmp
cmps
aaa
or
arpl
push
aad
mov
xor
daa
lds
mov
or
(bad)
lea
or
sub
ins
and
ins
and
iret
shr
dec
push
vpshad
mov
daa
push
mov
mov
pop
mov
cdq
cmp
fist
div
pushf
cmp
fmul
mov
mov
ins
push
mov
push
loop
sbb
ds
jo
cmp
xchg
inc
sahf
loope
and
mov
mov
pushf
mov
add
xchg
repnz
fild
jae
aaa
mov
mov
es
int
sbb
scas
(bad)
xor
in
or
repz
mov
lods
ja
jne
jo
xchg
sub
hlt
loope
mov
inc
adc
outs
sar
pop
mov
popf
(bad)
sti
clc
lock
inc
sbb
or
sti
icebp
and
pop
cdq
mov
aad
cmp
sub
mov
stos
scas
mov
and
pushf
rcr
adc
out
out
popa
pop
cli
je
jo
add
xor
adc
adc
leave
mov
ins
sbb
adc
jp
inc
inc
mov
jno
ror
fstp
ins
mov
dec
xlat
out
pop
inc
push
(bad)
repz
out
es
mov
cmp
inc
ins
push
das
test
fwait
dec
sbb
mov
dec
mov
push
inc
jg
jae
popf
pop
imul
cmp
sti
dec
mov
clts
out
jle
or
in
dec
cmp
dec
mov
push
pop
dec
fisubr
pop
add
inc
stos
mov
ror
mov
call
adc
cmp
sub
movs
test
shl
adc
nop
std
ins
jno
iret
mov
mov
cmp
test
lea
fwait
xchg
pushf
push
mov
mov
shl
push
push
pop
test
mov
push
in
mov
sbb
or
cmc
ins
call
lds
xor
aas
inc
ss
mov
loope
pushf
mov
mov
adc
loop
scas
xchg
scas
jp
popa
add
outs
mov
rcr
sub
icebp
das
mov
test
jg
xor
ins
push
and
pop
xchg
(bad)
std
fidiv
outs
mov
inc
dec
js
sub
cld
xchg
sbb
jne
test
adc
cdq
fwait
daa
push
sbb
clc
jne
nop
test
mov
out
ins
pop
outs
and
jl
das
cmp
inc
mov
and
sbb
xchg
imul
cwde
mov
dec
inc
ja
test
dec
inc
pushf
scas
stos
mov
xchg
lea
lods
cmp
or
and
mov
add
out
adc
cmp
(bad)
push
or
and
in
mov
sti
inc
iret
or
push
retf
mov
xchg
hlt
dec
xchg
push
lea
xchg
lods
cmp
(bad)
(bad)
pop
sbb
mov
call
shl
push
stos
movs
xchg
mov
jp
push
out
sub
push
cmp
pop
test
sti
int
mov
pusha
cmp
(bad)
fst
mov
loopne
je
outs
xor
mov
jl
scas
sub
scas
outs
shl
inc
dec
in
leave
retf
xor
inc
add
cmp
mov
inc
cmp
pop
cmp
std
adc
mov
push
ror
sbb
mov
xchg
test
sbb
ror
pop
push
add
movs
je
dec
loopne
lds
div
mov
inc
shl
jmp
or
xchg
test
jl
ds
arpl
adc
or
dec
cmp
(bad)
js
mov
ds
dec
fnstcw
stos
repz
(bad)
mov
outs
adc
and
loopne
and
psllw
jecxz
shl
call
inc
add
xchg
nop
fidivr
test
repnz
das
pop
pop
add
aad
mov
les
xor
push
and
(bad)
fimul
cmps
jmp
or
das
repz
jae
pop
push
stc
das
push
xor
jge
xor
adc
or
pusha
mov
push
(bad)
jnp
cli
pop
jae
scas
mov
push
lods
fisttp
dec
std
mov
aam
test
jmp
movs
or
or
sub
jmp
mov
in
fmul
bnd
pop
mov
adc
or
jno
mov
lahf
sbb
push
sub
jns
(bad)
adc
jb
mov
ins
test
aad
addr16
cs
xlat
inc
pop
popa
add
retf
cli
cmp
cmp
jns
xor
mov
les
mov
and
jp
retf
xchg
fnstsw
dec
push
pop
sub
retf
pop
xchg
scas
jo
push
push
out
dec
(bad)
mov
in
hlt
sub
pushf
mov
xchg
xlat
push
and
(bad)
ins
push
ret
sub
ins
aam
dec
inc
dec
jp
fstp
xchg
ret
in
or
test
jmp
or
cmp
inc
mov
imul
loop
adc
mov
pop
mov
gs
dec
clc
mov
push
jl
aad
scas
xchg
iret
adc
fldcw
pop
add
inc
outs
pop
cwde
and
loope
sub
mov
sbb
add
pusha
(bad)
mov
ss
cmp
fisttp
xor
dec
cmp
push
inc
inc
fwait
xor
pop
or
(bad)
int3
jne
or
pop
shl
mov
add
cmp
sbb
shl
lahf
js
cmp
xor
add
jbe
add
push
ret
cmp
dec
imul
inc
push
inc
stos
adc
mov
push
jb
sbb
fstp
rol
push
mov
test
(bad)
call
sbb
xor
inc
dec
inc
popf
jmp
sbb
jle
adc
les
test
or
and
mov
in
cmovnp
adc
cmp
xlat
arpl
mov
out
mov
out
cmps
jne
inc
iret
xchg
retf
inc
ins
sahf
jmp
test
je
stos
shl
push
in
or
inc
out
nop
test
inc
push
mov
test
test
jne
xor
mov
mov
cmc
nop
mov
pushf
xchg
jno
das
sub
in
(bad)
adc
xchg
sahf
jmp
fidivr
les
dec
push
(bad)
jmp
sub
lods
mov
push
(bad)
cmc
push
scas
rcr
xor
xor
rcr
ds
out
mov
dec
xchg
xchg
cmps
xor
jmp
or
push
adc
lds
leave
scas
fsub
fwait
repz
xor
mov
xchg
mov
add
nop
movs
leave
rsm
dec
mov
dec
cmp
dec
stc
pop
or
mov
adc
pop
inc
lods
(bad)
ror
cmp
mov
or
pop
aas
rol
pop
out
(bad)
rol
fwait
inc
imul
pusha
jmp
jp
xor
ss
lea
sahf
fwait
mov
cli
sbb
sub
and
mov
or
sub
lahf
call
mov
pusha
movlps
sahf
imul
xor
popf
pop
adc
push
into
or
xor
push
sbb
lods
push
adc
(bad)
aam
scas
loope
dec
pop
aaa
add
push
enter
sbb
loopne
sar
cmp
aaa
and
mov
add
(bad)
imul
mov
ja
(bad)
fcmovnbe
out
jge
pop
daa
push
inc
leave
mov
add
repnz
inc
mov
cs
xor
dec
mov
aam
repnz
pop
mov
jne
bound
repnz
jle
adc
inc
pop
outs
adc
call
mov
call
push
mov
xor
pop
in
push
or
ss
out
xor
add
sbb
rcr
and
cmp
div
gs
jp
inc
xlat
test
ror
call
call
icebp
lea
fwait
loop
repz
pop
mov
cmc
push
inc
and
in
adc
jmp
add
sbb
cmp
ds
jecxz
push
lea
cmc
xchg
mov
into
cmc
or
fcom
cli
jp
sar
les
cmp
pop
xor
ror
inc
jae
xchg
out
dec
sahf
mov
xor
mov
push
cwde
dec
mov
retf
sub
or
mov
and
stos
inc
jae
or
dec
dec
add
sub
pop
aam
mov
out
jmp
mov
dec
jno
test
adc
xchg
jb
loop
sub
fistp
inc
cwde
mov
add
dec
and
cwde
cmp
cmc
arpl
lock
adc
mov
and
imul
ja
sbb
inc
jge
aam
push
ror
mov
sub
(bad)
and
hlt
inc
dec
inc
sbb
xchg
or
or
sbb
jo
pop
test
dec
adc
push
ds
cwde
cli
lea
out
push
stos
out
adc
ret
(bad)
sub
(bad)
mov
xor
and
shr
dec
pop
mov
nop
sbb
jg
and
dec
ins
rol
pop
dec
adc
or
mov
je
es
loope
(bad)
sub
cmp
sub
in
jnp
add
fwait
cmp
sbb
jge
sub
loop
xchg
jge
(bad)
xchg
sub
test
xchg
and
add
pop
cmp
mov
sub
fsub
cmps
xchg
in
loopne
jmp
stos
jbe
popf
or
xor
(bad)
and
shl
mov
gs
xchg
jle
lahf
cmps
(bad)
call
lods
jns
scas
sub
imul
jno
dec
call
and
add
pushf
jp
adc
dec
jnp
out
push
ret
pop
outs
xchg
mov
xor
fistp
xchg
cmp
pushw
add
out
lds
xchg
xor
in
arpl
ins
pop
cmp
popf
dec
xchg
pop
neg
pop
das
ins
dec
mov
jae
sbb
int3
mov
add
cmp
daa
xor
push
sbb
std
or
enter
loope
xor
push
out
pop
(bad)
jb
cld
shl
cmp
sbb
mov
add
cmp
and
loope
clc
jp
add
add
dec
fidiv
mov
std
inc
mov
shr
lock
mov
out
mov
out
ficom
mov
hlt
(bad)
push
aaa
cwde
mov
push
and
cwde
leave
cwde
mov
test
fld
loop
jbe
lods
sbb
(bad)
jp
cmps
jno
jnp
sbb
test
mov
xchg
loopne
dec
cli
les
aam
xchg
movs
das
sub
adc
adc
(bad)
aaa
push
call
sub
sti
xchg
rcr
data16
xchg
cmp
scas
add
pop
xor
hlt
ret
mov
gs
hlt
mov
ja
cmp
mov
sub
sti
mov
stos
(bad)
sti
sti
adc
loopne
leave
push
mov
repnz
retf
sub
in
or
hlt
jae
jg
je
xor
push
mov
in
xchg
hlt
sbb
or
push
ss
scas
jmp
dec
jecxz
jmp
sbb
call
adc
push
jno
scas
and
cmc
cmc
pop
and
add
shl
mov
jecxz
shr
rcl
dec
sbb
xchg
push
push
xchg
aas
out
and
mov
jge
popf
mov
pop
mov
jae
movs
xor
jecxz
pop
movs
xchg
rcr
icebp
push
lds
inc
nop
push
sbb
call
(bad)
data16
fisub
inc
jb
(bad)
cdq
arpl
pushf
push
jnp
repnz
sbb
fs
adc
loope
inc
sbb
push
lods
popf
stc
pop
lods
cmps
sub
lods
cmps
jns
je
cmp
pop
push
jmp
xchg
sbb
mov
pop
mov
scas
ss
adc
aad
aaa
mov
retf
xchg
pop
pop
xor
das
nop
sbb
sub
and
and
stos
call
jo
(bad)
push
and
xor
shl
add
mov
shl
sub
mov
adc
mov
cdq
sub
fmulp
aas
inc
xor
jno
jbe
xor
mov
sub
xchg
imul
imul
or
and
out
or
outs
repz
add
iret
test
dec
cmp
mov
and
pop
xor
(bad)
xchg
mov
add
xacquire
mov
or
and
movs
lock
jecxz
xor
les
loopne
cmp
arpl
pushaw
dec
dec
fs
xchg
fst
lods
movs
retf
mov
mov
out
mov
pop
mov
adc
adc
jbe
xchg
xchg
or
in
sbb
pop
jno
pop
push
or
imul
mov
loopne
mov
cli
out
xor
dec
sub
jno
pop
xchg
(bad)
pop
jp
js
mov
(bad)
(bad)
cmp
in
pop
cmps
jge
scas
js
jae
cmp
fisttp
jo
push
inc
jmp
mov
jo
aas
push
lods
popa
repz
imul
inc
mov
xor
push
retf
mov
inc
dec
out
scas
adc
pop
into
lods
mov
cdq
push
dec
sbb
mov
cwde
movs
pop
ja
pop
int3
push
xor
xor
out
mov
(bad)
data16
cmp
mov
test
mov
and
fcmovb
(bad)
test
mov
test
mov
movs
push
cmp
mov
jno
(bad)
dec
add
test
push
mov
cmp
clc
xor
outs
out
xchg
jae
mov
arpl
sbb
push
adc
xor
call
sub
push
push
idiv
fadd
test
mov
xor
mov
or
leave
imul
enter
aad
xor
sub
push
mov
xor
inc
add
ret
fsub
push
xor
hlt
cs
inc
push
sbb
scas
scas
ins
(bad)
int3
mov
repz
popf
outs
xor
repz
push
mov
xor
test
hlt
(bad)
mov
mov
shl
mov
jns
ficom
cdq
int3
push
enter
mov
fisttp
ja
pop
lahf
std
outs
mov
dec
fimul
cmps
or
cmp
les
pop
push
sub
fsub
mov
mov
jle
lea
scas
cld
xchg
sbb
(bad)
xor
add
in
test
inc
dec
fcomp
cmps
ret
mov
jo
xor
xchg
lahf
clc
gs
adc
xchg
pop
jg
mov
stc
mov
mov
mov
lods
or
imul
fs
(bad)
rcl
rcl
xor
in
push
mov
dec
dec
xlat
xor
loopne
je
mov
lds
jb
div
xor
xacquire
xchg
ret
lea
call
inc
dec
movs
dec
aaa
(bad)
je
das
or
scas
add
popf
gs
into
inc
jmp
inc
push
test
mov
fdiv
out
lods
xchg
xchg
jmp
xchg
std
cwde
ss
sbb
mov
repz
mov
cmp
std
cmp
mov
mov
or
pop
and
push
xchg
les
push
lods
(bad)
mov
jmp
sub
clc
(bad)
shl
dec
jmp
mov
fcmovbe
sbb
cmp
jmp
repz
xchg
and
lahf
dec
dec
fld
sub
mov
std
add
test
push
inc
pop
pop
mov
je
int3
cmps
push
dec
je
mov
push
movs
jp
jmp
enter
sbb
sub
cli
in
ins
into
lea
dec
mov
shl
jne
out
das
ror
push
sbb
hlt
sbb
pop
enter
test
xchg
add
aad
out
fiadd
ror
fisttp
(bad)
mov
xor
adc
out
daa
inc
lahf
sub
pop
pop
cs
fs
xor
cmps
jmp
jbe
mov
addr16
scas
shl
dec
clc
mov
repnz
xchg
dec
sub
pusha
sbb
mov
(bad)
clc
mov
xchg
cmps
in
push
fdiv
or
add
std
mov
jae
pop
and
push
(bad)
icebp
sbb
mov
push
mov
add
fisttp
adc
test
inc
iret
lahf
sbb
mov
or
mov
pusha
cmc
retf
add
fcmovnb
push
and
xchg
and
jge
imul
pop
add
std
arpl
add
fmul
les
call
add
sti
in
ins
adc
inc
jg
pop
inc
inc
mov
sbb
into
icebp
sub
dec
xchg
or
lock
stos
push
push
pusha
xchg
mov
push
int
sbb
test
sub
(bad)
jmp
jbe
sbb
add
int3
mov
arpl
fild
aad
pop
ret
cmps
or
sub
test
lds
inc
arpl
bound
dec
mov
sub
lds
pop
push
ret
mov
(bad)
push
jno
loopne
or
sub
dec
pop
lods
push
(bad)
push
daa
jae
mov
dec
cmps
push
lds
xchg
ror
int3
xchg
and
mov
dec
rol
lahf
fwait
loope
jno
mov
fucomp
sbb
mov
mov
jmp
add
jp
add
push
inc
jmp
jno
cdq
sub
std
pop
add
sar
outs
cmp
mov
jecxz
leave
sbb
mov
int
icebp
jmp
ds
add
pop
call
mov
in
jmp
(bad)
cmps
test
xchg
fistp
test
dec
pop
jl
int3
ins
nop
mov
imul
adc
or
cli
dec
popf
and
rcr
std
shr
cld
cld
popa
mov
je
jle
mov
mov
dec
cmps
shr
jns
xor
add
repz
out
mov
fld
sbb
or
push
xor
cdq
mov
push
ins
add
push
ins
(bad)
mov
test
lea
sbb
sbb
inc
pop
add
fs
cmp
fnsave
cmp
jo
mov
cmc
xchg
jo
or
pop
mov
jecxz
jmp
stc
mov
daa
popf
dec
arpl
clc
outs
inc
ins
mov
and
cmps
push
mov
xlat
xor
sub
mov
fbld
mov
jmp
adc
loopne
inc
adc
stc
imul
push
xor
push
iret
cmp
stc
cmp
adc
mov
cmp
retf
fisubr
aad
add
loopne
sahf
fiadd
ss
xor
pop
fadd
mov
ror
jp
nop
pop
cwde
and
xchg
popf
leave
xchg
or
ret
repz
test
cdq
imul
cmp
inc
repz
xlat
shl
jmp
ins
jae
add
cli
test
xchg
dec
mov
mov
stos
retf
lods
mov
das
jae
rcl
loop
gs
dec
xchg
add
lss
add
dec
mov
sbb
pop
scas
js
hlt
or
sub
mov
retf
push
jg
mov
jo
sbb
add
fstp
imul
mov
mov
(bad)
mov
lods
scas
dec
mov
cli
jmp
repz
mov
hlt
add
mov
(bad)
retf
cmp
test
push
aam
dec
push
add
loope
xor
fs
jle
cld
cmp
mov
pop
pop
adc
arpl
pop
mov
lods
adc
movs
mov
loop
add
outs
ss
mov
or
rol
test
pop
test
and
and
xor
aaa
and
add
fucomp
(bad)
fnstenv
repz
adc
sub
aaa
imul
xor
xor
inc
ins
and
xor
push
xchg
mov
(bad)
cmp
fwait
mov
mov
lahf
pop
das
ror
in
jecxz
ins
dec
data16
inc
call
pop
mov
xor
push
popa
add
sbb
in
sti
adc
sbb
bound
dec
and
hlt
pop
(bad)
idiv
(bad)
out
scas
dec
mov
sub
pop
(bad)
(bad)
jbe
movs
pop
fcom
push
pusha
or
pop
mov
jne
loope
repz
cmp
das
ds
cwde
xchg
aaa
and
stc
pusha
adc
push
aas
loope
jae
fwait
mov
loope
outs
xor
or
ret
mov
stos
xchg
sub
or
sub
xchg
loopne
xor
jmp
push
fdiv
cmp
cmps
stos
xchg
out
je
inc
xchg
cmp
or
xchg
inc
in
test
push
pop
movs
dec
mov
out
repz
jle
xchg
pushf
sub
push
pop
mov
push
push
ror
lods
imul
sahf
inc
adc
cwde
(bad)
cmc
data16
ins
add
sub
xlat
enter
push
imul
mov
mov
mov
adc
mov
dec
std
fs
xchg
xchg
mov
ret
iret
xchg
mul
pcmpeqd
push
push
mov
lods
mov
or
adc
lock
cmp
sub
ds
scas
sbb
test
xchg
popa
cdq
ret
gs
ds
sub
push
ret
or
pop
add
pusha
stos
mov
cmp
jl
dec
into
push
ret
add
fs
sbb
pop
or
sti
loope
repz
mov
xlat
jmp
pop
call
popf
or
fnsave
clc
xor
outs
sahf
pop
popf
mov
in
out
imul
imul
sub
ds
jecxz
add
or
pusha
cmp
sub
fs
mov
repnz
pop
in
jg
sub
cli
and
jnp
xchg
or
fwait
xor
add
cmp
enter
stos
rol
out
jle
mov
cmp
pop
ja
xor
mov
std
stc
mov
adc
pop
xlat
test
sub
outs
and
push
push
inc
adc
mov
jns
aam
push
mov
and
pop
or
cs
or
(bad)
jp
ret
out
inc
pop
mov
jb
aam
mov
push
push
xor
outs
jge
mov
sbb
mov
repz
repnz
push
js
xchg
mov
push
jo
stos
out
cmp
dec
arpl
mov
hlt
cmp
adc
int
adc
mul
ret
test
dec
lods
scas
push
lock
mov
or
retf
out
sub
popf
ins
mov
in
xor
int
mov
leave
mov
test
dec
movs
popf
add
sbb
mov
push
pop
pop
xlat
sbb
and
jns
imul
jl
pop
imul
cwde
fidiv
shr
fisubr
aam
jle
sti
(bad)
adc
push
jb
popf
sbb
in
push
(bad)
cmp
imul
push
jmp
int3
xor
push
js
jmp
cwde
pop
dec
pop
ror
xlat
adc
inc
ret
adc
fild
cwde
lds
(bad)
scas
dec
cs
jne
pusha
fwait
dec
ins
or
rcl
lods
arpl
dec
loop
ret
push
and
sbb
mov
outs
pop
inc
pop
mov
call
repnz
pushf
retf
push
adc
and
xchg
mov
gs
xchg
push
imul
mov
fmulp
int
aaa
sub
xchg
mov
push
mov
das
sbb
mov
cmps
lahf
mov
sbb
add
mov
or
and
adc
(bad)
pop
pushf
fadd
aaa
jmp
xor
mov
pop
cmp
out
call
mov
pop
in
jp
scas
xor
jg
adc
mov
pop
retf
(bad)
cmp
out
push
xchg
mov
pop
push
enter
mov
imul
ss
jecxz
in
sub
mov
mov
cld
mov
mov
inc
pop
daa
or
xchg
jecxz
(bad)
pushf
add
mov
ror
sbb
ins
icebp
out
inc
cmp
fwait
jo
pop
push
das
sar
push
jg
push
xchg
adc
xchg
test
pop
arpl
xchg
int
lahf
sub
mov
cli
mov
sbb
sub
push
inc
retf
sbb
mov
xor
inc
mov
mov
mov
(bad)
movs
cs
add
pusha
add
cmp
lods
push
pushf
mov
pop
sbb
push
and
pop
fiadd
leave
stos
cmp
add
fsubp
push
mov
push
mov
js
xlat
sbb
mov
push
rcr
pop
dec
inc
pop
xchg
sbb
cs
dec
mov
mov
push
adc
or
retw
sub
jno
and
ret
pop
dec
(bad)
je
(bad)
fwait
retf
in
ret
out
pop
aas
push
mov
test
mov
dec
jmp
sbb
aas
xor
and
cmps
pop
call
mov
push
stc
in
or
retf
xchg
stos
cmp
push
mov
pop
xchg
js
jns
inc
data16
into
bound
shl
pop
dec
xchg
xchg
push
push
add
mov
clc
or
inc
scas
mov
test
or
jns
pop
push
icebp
or
into
add
sbb
and
sbb
jmp
xor
movs
in
das
movs
mov
dec
mov
jg
out
dec
shl
(bad)
and
mov
not
les
push
cld
inc
push
dec
adc
xor
test
stc
ds
sub
inc
add
xchg
mov
int3
sub
cmp
and
addr16
cmps
lods
fs
mov
push
mov
cdq
nop
xchg
push
xchg
xor
inc
pop
fwait
icebp
mov
sahf
lods
repz
jmp
push
ja
xchg
add
div
lahf
pop
sbb
aad
ds
fcmove
mov
ja
jmp
xchg
test
or
bound
inc
sbb
repz
adc
clc
stos
iret
mov
fmul
fmul
lock
adc
inc
and
dec
xchg
aas
or
inc
sub
les
fist
icebp
push
xchg
sub
pop
push
imul
pop
jbe
push
movs
cmp
or
mov
je
bound
jg
or
jle
out
dec
data16
inc
ret
loop
iret
shl
outs
sub
cld
stos
das
xchg
dec
pop
in
add
mov
xchg
dec
sub
pushf
(bad)
call
retf
data16
movs
xchg
mov
xchg
cwde
xchg
mov
sbb
xor
mov
aam
xchg
mov
mov
xchg
xor
ds
push
pop
std
retf
lods
cmp
inc
sbb
mov
(bad)
xor
pop
stos
aaa
fisttp
out
push
sahf
inc
and
lock
fisttp
(bad)
push
pop
pop
pop
(bad)
and
cli
movs
retf
jb
icebp
imul
or
jl
xor
xchg
pushf
mov
push
mov
ins
repz
pop
sbb
fld
mov
neg
(bad)
pushf
ins
fld
push
adc
add
movs
shr
(bad)
test
mov
call
ret
pushf
mov
mov
xor
mov
inc
lahf
rcr
dec
mov
xlat
push
jg
jmp
sbb
imul
adc
leave
jo
mov
(bad)
shl
sub
mov
jmp
push
push
jbe
add
out
xchg
ds
(bad)
sub
lods
ds
mov
popf
xchg
add
test
add
sar
shr
mov
push
(bad)
jns
das
setp
dec
adc
popf
and
adc
jns
aam
mov
xor
sbb
mov
cwde
call
fisubr
adc
das
adc
out
bound
ja
fisub
add
xchg
stos
cmp
test
in
(bad)
mov
lods
cmp
jl
mov
jge
mov
rol
push
cmp
pop
xor
hlt
icebp
adc
add
or
jns
js
out
cmp
jl
ror
das
xchg
adc
push
xchg
dec
out
add
pop
pop
leave
mov
jb
dec
das
mov
fxch
xchg
sub
inc
cmp
pop
or
pop
(bad)
adc
push
sbb
fbld
mov
sub
jmp
and
retf
jbe
stos
adc
(bad)
sub
popf
ds
mov
mov
jo
dec
iret
sti
mov
sbb
lods
cmps
test
fs
mov
popf
push
and
(bad)
addr16
lods
aas
fcomp
ret
movs
sub
jno
cdq
push
cdq
ss
push
xor
fldlg2
add
jle
shl
repnz
jl
xor
mov
sbb
in
pop
jle
inc
pushf
mov
jle
push
fs
inc
cmp
sub
shr
into
jle
int3
push
je
lods
cwde
push
popf
inc
xchg
push
(bad)
daa
pop
je
shr
jl
add
stc
lahf
mov
push
loope
call
sbb
pop
arpl
inc
jecxz
or
adc
mov
adc
add
lds
inc
scas
pop
arpl
stos
out
cdq
arpl
fdiv
ja
loopne
fisubr
fs
test
inc
mov
pop
mov
adc
xchg
add
outs
mov
xor
arpl
adc
out
pop
jl
jmp
repnz
mov
retf
mov
pop
mov
std
dec
cmp
jb
lods
sub
jle
jns
test
lock
pop
outs
les
and
adc
add
sbb
out
adc
rol
mov
cmp
hlt
dec
imul
push
add
sbb
cs
jle
rcl
lock
call
sub
xchg
push
test
xor
xchg
push
shr
fiadd
pop
sti
shr
and
add
xchg
mov
movzx
xchg
inc
ins
call
xor
jno
(bad)
in
ins
pop
xor
mov
mov
adc
bound
xor
pop
aaa
jg
hlt
ret
jmp
pop
aas
lahf
mov
dec
pop
sar
adc
loope
cmp
sahf
mov
or
sbb
movs
arpl
pop
xchg
clc
push
loop
and
dec
jecxz
fsub
fild
mov
mov
sub
ins
push
mov
add
out
add
rcr
mov
xchg
add
loopne
lea
pushf
adc
dec
test
mov
cmp
add
popf
mov
push
mov
in
jo
mov
pop
jmp
ja
cmp
loop
adc
repnz
fld
jno
mov
push
je
mov
ins
sub
fs
or
cmp
ss
and
jne
mov
inc
push
or
jmp
mov
jge
sti
fst
lock
sahf
adc
xchg
fisubr
cmps
lea
(bad)
cld
mov
dec
out
stos
mov
mov
xchg
jg
mov
adc
cld
jo
xchg
dec
or
rcl
ja
(bad)
mov
call
pop
les
xchg
add
mov
(bad)
adc
fisubr
sbb
out
aas
add
inc
neg
lock
sub
stos
hlt
int
pusha
sub
pop
adc
stc
jns
repnz
scas
bound
fbld
imul
push
stos
xor
mov
inc
aam
js
adc
cmc
mov
test
adc
ror
pop
mov
scas
or
or
test
outs
mov
xchg
jg
call
loop
ss
stos
mov
mov
jb
mov
pop
mov
jns
add
mov
mov
inc
stos
push
nop
xchg
inc
fcomp
repz
repnz
ficomp
inc
nop
jmp
cmps
gs
pop
mov
int3
fmul
pmullw
aaa
inc
mov
mov
jge
cli
mov
sbb
idiv
loope
jae
cmc
and
mov
scas
shr
mov
in
mov
inc
dec
inc
jno
push
hlt
add
add
sub
or
jg
cwde
out
and
sub
push
push
mov
daa
fmul
jbe
gs
mov
clc
ret
sbb
xchg
xchg
outs
push
cmp
mov
or
adc
xchg
inc
jne
fstp
outs
cmp
cmp
sahf
jl
inc
lock
stos
ss
stos
mov
aam
xor
rol
mov
add
jle
sub
dec
mov
shl
(bad)
xchg
fisttp
cmps
xchg
push
xchg
jmp
jl
arpl
loop
and
push
sbb
test
add
mov
jnp
or
retf
mov
pop
in
cmp
pop
repz
loop
xor
mov
call
and
test
mov
aas
out
aaa
inc
je
int
(bad)
pop
nop
repz
popf
adc
inc
dec
inc
enter
jne
pop
mov
pop
pop
rcr
aas
cmp
in
cli
adc
shl
lods
adc
(bad)
mov
jg
movs
mov
bnd
fs
adc
outs
loop
shl
scas
pop
and
adc
(bad)
jns
pop
icebp
das
add
dec
rol
jno
or
ret
xor
cmps
pushf
jb
inc
in
jae
push
mov
cdq
pop
cld
int
adc
cmp
and
imul
test
and
lods
pushw
jmp
add
xor
pop
push
fadd
jp
cmps
call
ja
dec
mov
(bad)
mov
iret
test
call
scas
mov
scas
popf
out
mov
fidiv
and
and
aaa
clc
dec
mov
push
hlt
inc
push
fnsave
test
add
repz
xor
pop
ins
fst
data16
inc
xor
add
pop
xchg
xor
ret
mov
imul
xchg
sar
retf
xor
dec
dec
or
popa
fdivr
pop
push
dec
out
push
or
cmps
dec
and
in
in
or
je
je
mov
rcr
push
xor
adc
bndstx
push
jae
lahf
xchg
cld
inc
leave
dec
add
inc
call
es
mov
shl
or
test
or
push
test
push
jbe
and
xchg
mov
movs
daa
int3
mov
mov
test
js
inc
in
jl
fsubr
jae
addr16
es
shr
out
mov
xchg
adc
inc
dec
retf
pop
xor
cwde
jne
sbb
push
jno
or
xchg
mov
add
aas
mov
pop
stos
or
inc
imul
int3
ins
sub
inc
ins
push
push
int
aad
and
into
popa
dec
popf
and
mov
mov
mov
in
lods
retf
and
call
cmp
mov
aaa
int3
(bad)
in
shl
es
das
cld
(bad)
fild
(bad)
gs
scas
cli
jmp
popf
push
sbb
jecxz
je
cmp
push
addr16
adc
mov
aaa
add
ins
fsub
sub
rcl
jbe
out
das
sbb
push
push
(bad)
pop
dec
pop
mov
add
retf
iret
icebp
lock
aas
adc
inc
push
push
fsub
out
ds
shl
jmp
and
adc
cld
mov
lea
ret
psubsw
in
xchg
cmp
dec
xor
ins
hlt
jmp
adc
ret
sbb
push
out
sub
cld
sbb
je
cmc
neg
ins
xchg
pop
out
repnz
scas
sub
in
and
mul
ins
imul
enter
test
gs
push
aas
xor
sti
jp
fisubr
cmc
gs
lds
or
in
sar
sbb
jp
mov
aad
(bad)
shr
pop
mov
push
sbb
and
cmps
mov
dec
mov
gs
popa
lock
push
mov
loopne
inc
outs
push
add
jb
aad
adc
fnstenv
mov
xchg
into
fst
mov
outs
and
dec
inc
jbe
push
ss
mov
call
sub
loopne
cwde
mov
sub
jecxz
out
mov
add
outs
add
mov
add
xor
(bad)
cmp
mov
pop
retf
push
sbb
sbb
pop
(bad)
jb
ins
xchg
sub
add
xlat
xchg
mov
pop
inc
push
outs
push
cdq
in
shl
lods
push
sub
push
sub
mov
pop
jo
pop
pop
jp
ret
enter
dec
dec
xor
pop
mov
nop
out
repz
es
push
arpl
scas
sub
nop
mov
sub
push
clc
cli
xor
call
xchg
lds
xchg
jae
in
push
out
addr16
sub
stos
cdq
adc
push
das
out
adc
das
mov
jp
or
push
cli
sub
bt
mov
icebp
in
outs
fiadd
sub
jecxz
mov
adc
imul
jecxz
mov
leave
cmps
add
stc
(bad)
std
pop
outs
stos
mov
push
pusha
xchg
pop
and
pop
popf
push
movs
inc
stc
iret
dec
call
xor
cli
pop
pushf
(bad)
js
dec
add
pop
clc
push
sbb
out
pop
fiadd
pushf
fs
test
test
scas
lock
add
lods
pop
cmp
ss
sub
push
sbb
jnp
xchg
sbb
ret
(bad)
das
lds
mov
jle
test
mov
push
rcr
pop
push
pop
aaa
mov
inc
int3
daa
jns
cmp
dec
nop
jecxz
mov
mov
jg
push
int3
aas
arpl
inc
xchg
(bad)
imul
sub
adc
pop
sub
stc
jo
or
arpl
inc
cdq
mov
dec
pop
fnstsw
addr16
movups
lods
shr
add
mov
jnp
nop
call
dec
ins
(bad)
popa
ficom
icebp
sub
add
pop
sub
popa
jnp
push
cmp
hlt
jmp
lahf
and
xor
cmc
jae
arpl
bound
aad
sub
das
inc
inc
mov
dec
rcr
test
(bad)
mov
sub
pop
mov
mov
ret
es
std
ins
jno
xor
jmp
div
mov
push
(bad)
pop
gs
and
mov
pop
ret
push
inc
adc
add
xchg
cmps
add
shr
xor
dec
push
rcl
repnz
cmp
repnz
pop
xchg
test
xchg
xchg
test
inc
or
xor
shr
dec
mov
xor
shr
(bad)
xchg
mov
dec
mov
(bad)
outs
xchg
int
inc
pop
das
and
push
and
dec
and
push
lock
push
inc
xor
pop
dec
stos
jo
jb
mov
add
jg
fs
addr16
ror
push
push
sub
or
hlt
stos
rol
popf
push
xchg
cmp
jge
int
cli
cdq
std
cmp
bound
iret
xor
xchg
xor
xchg
or
mov
pop
or
fwait
int
inc
jl
mov
push
imul
mov
stos
clc
or
and
mov
cmp
sti
cmp
and
repz
mov
movs
daa
mov
scas
push
test
xchg
pushf
sti
inc
adc
stc
mov
loopne
push
pusha
popa
mov
dec
imul
loopne
dec
aas
xlat
mov
daa
retf
jno
sub
dec
mov
sub
mov
addr16
cmp
ins
(bad)
cmc
and
jo
jo
and
cmp
(bad)
mov
test
test
and
mov
cmp
popf
gs
xchg
mov
mov
cmc
or
xchg
adc
mov
dec
add
in
sbb
dec
test
aas
and
fs
xor
mov
lods
pop
jo
xor
pop
cmps
sbb
mov
div
mov
aad
jno
cmp
repnz
jo
jno
jmp
loope
add
mov
sbb
mov
test
mov
mov
pop
cmp
loop
les
enter
leave
mov
jge
or
enter
imul
ret
push
push
adc
sti
popa
imul
push
popa
fidivr
dec
es
cli
pop
stos
mov
inc
sahf
xchg
sbb
xchg
icebp
das
popf
add
jle
(bad)
jbe
mov
mov
adc
cs
push
(bad)
sbb
(bad)
ret
jmp
repnz
jbe
and
outs
mov
or
sub
outs
xlat
(bad)
mov
outs
mov
push
fiadd
enter
xor
cmp
stos
dec
addr16
retf
xor
in
ins
mov
cmp
xchg
pop
neg
pop
bound
xor
lods
xor
inc
xor
xchg
pop
mov
in
imul
enter
xor
mov
pop
dec
or
push
push
or
aaa
dec
stos
lahf
mov
push
jmp
xor
in
jg
or
or
mov
sub
xlat
add
dec
mov
jle
popa
pop
nop
loopne
xchg
cmps
repz
push
sub
icebp
ds
mov
inc
mov
mov
adc
ficom
(bad)
pop
or
push
gs
xchg
cli
int3
(bad)
sti
cdq
jns
imul
loope
mov
push
jp
out
jo
scas
or
movs
mov
or
pop
push
iret
movs
sbb
jns
es
test
push
cdq
aaa
stc
push
jl
data16
inc
xchg
ins
dec
push
int
imul
aam
xchg
push
dec
adc
ds
mov
sub
outs
push
jbe
sub
jle
shl
cmp
adc
adc
mov
inc
sbb
js
stos
out
dec
add
jge
jnp
push
loopne
xor
sub
in
out
cli
xor
bound
shl
add
inc
ret
xlat
inc
adc
shl
loopne
xchg
jmp
mov
dec
in
xor
gs
loope
sub
fidivr
sbb
retf
xchg
inc
fidivr
fnstcw
dec
inc
imul
pushf
adc
outs
in
movs
ja
iret
mov
push
adc
rcr
and
test
ret
stc
scas
jo
pop
xor
shr
inc
in
mov
pop
(bad)
lods
mov
sbb
cmc
movs
jae
jae
addr16
stos
push
repz
cmp
or
mov
sbb
sub
xchg
dec
lds
lds
inc
push
shl
pop
movs
sub
dec
inc
clc
add
cmp
in
and
lock
outs
retf
(bad)
mov
push
retf
push
inc
(bad)
retf
cmps
jo
cmp
mov
js
dec
daa
cdq
inc
ins
adc
es
cmp
pinsrw
or
mov
mov
pushf
test
jb
xor
dec
mov
pop
xor
ret
mov
nop
pop
popa
test
add
ret
std
xor
adc
out
test
mov
gs
cmp
popf
mov
inc
mov
pop
retf
pushf
adc
add
test
out
out
xchg
gs
sub
sahf
adc
pop
int3
mov
or
pop
cld
sahf
sbb
xchg
mov
aaa
loopne
pusha
and
mov
pop
cmps
cli
cmc
jl
or
adc
(bad)
xchg
and
stos
scas
cmp
cmp
dec
or
fs
shl
mov
test
arpl
and
out
shl
push
aaa
repz
push
scas
adc
lods
hlt
pop
sbb
cs
xlat
jnp
retf
add
repz
mov
nop
sbb
aad
or
clc
nop
and
dec
stos
ret
loopne
push
xor
mov
cmp
pop
stc
in
and
(bad)
or
repnz
neg
xchg
cmp
mov
leave
fld
repnz
push
cli
mov
pop
fidivr
pop
lods
cmps
sub
mov
cwde
test
sub
fld
popa
imul
in
icebp
popa
pop
bswap
shl
mov
lods
or
not
adc
bswap
xchg
add
pushf
repnz
inc
mov
mov
mov
push
js
jg
or
adc
push
or
sub
dec
gs
fldcw
push
push
mov
sbb
imul
jbe
(bad)
sti
ds
jmp
push
dec
cmps
or
aaa
jno
xchg
push
stc
imul
rcr
xor
loope
into
or
sub
hlt
loope
or
adc
mov
ins
js
jmp
outs
push
fistp
sub
cs
ret
(bad)
je
sbb
xchg
sbb
inc
js
mov
add
mov
pop
test
retf
mov
idiv
push
sbb
adc
sbb
sbb
jle
stos
cmp
xor
mov
stc
stos
into
pop
inc
inc
addr16
in
xor
mov
(bad)
outs
sub
ja
add
xchg
mov
ret
push
push
push
push
jmp
aam
daa
pop
icebp
xor
add
sti
cmps
mov
cwde
arpl
mov
mov
(bad)
fcom
jge
aas
enter
retf
(bad)
mov
pop
mov
xchg
in
arpl
shl
jl
retf
pop
and
sbb
add
dec
pop
pop
push
adc
jne
jnp
int
mov
dec
sbb
mov
dec
inc
mov
mov
popa
pop
or
or
xlat
or
sti
inc
pop
mov
add
mov
pop
inc
ret
cmp
push
lods
add
jle
inc
imul
push
cwde
sbb
gs
in
and
and
mov
fwait
cmc
push
inc
popa
push
mov
mov
mov
inc
mov
dec
add
cmp
clc
mov
lahf
mov
mov
loop
inc
adc
frstor
sub
std
stc
ficom
mov
js
mov
and
ficom
add
clc
in
cmp
fsub
pop
xchg
cmp
inc
push
test
jmp
ins
xchg
nop
movs
xchg
into
push
inc
seta
xlat
jle
sub
xchg
push
or
aam
in
jl
js
adc
lods
pop
bound
ja
push
jl
or
xchg
ret
push
mov
int3
dec
mov
xor
dec
or
div
retf
xchg
jl
sub
pop
xlat
jne
push
mov
in
out
cmp
inc
imul
dec
or
fs
nop
arpl
(bad)
(bad)
loopne
sub
dec
xchg
jno
daa
mov
add
jne
outs
arpl
cmp
imul
inc
xor
bound
test
xchg
jmp
je
and
xchg
mov
scas
sti
test
outs
fidivr
cmp
cmp
movs
add
push
sbb
push
xchg
sbb
cwde
or
sahf
inc
xchg
bound
push
mov
loopne
gs
mov
es
out
mov
sysret
pop
sbb
(bad)
cmp
pop
iret
pop
aam
(bad)
aam
sbb
ror
pop
xchg
aas
pushaw
mov
icebp
mov
jg
or
fcomip
cmps
test
jle
lds
or
imul
aaa
das
test
sbb
xor
inc
shl
dec
out
dec
push
jno
stc
xchg
mov
cmps
mov
in
test
sub
rcr
or
mov
push
std
ret
test
jmp
fbld
dec
cmp
scas
jmp
inc
(bad)
adc
dec
pop
add
icebp
fnsave
retf
xchg
jae
adc
add
fdivr
pop
jne
leave
push
push
cmp
xchg
dec
loop
jne
xor
movs
push
push
sahf
data16
sti
gs
push
push
push
gs
pop
and
shl
mov
xchg
dec
xchg
in
cmp
dec
xchg
mov
inc
jb
adc
jno
push
(bad)
(bad)
fxch
out
nop
ds
fmul
std
or
pop
mov
add
imul
adc
mov
cmp
dec
xor
and
push
scas
test
mov
mov
and
in
(bad)
fdiv
dec
xlat
and
push
sub
es
test
(bad)
data16
je
or
inc
pop
xor
hlt
scas
and
push
outs
xchg
es
xor
sti
or
lods
sbb
xor
(bad)
js
jmp
mov
or
shl
dec
arpl
xchg
sbb
test
in
stos
push
ret
inc
out
ss
mov
and
in
lahf
ss
push
hlt
arpl
mov
mov
or
mov
mov
sub
pop
add
rcl
nop
or
lds
adc
and
ins
std
and
mov
mov
xor
stos
(bad)
jmp
mov
hlt
sbb
cmp
sub
fwait
jmp
cmp
push
(bad)
adc
cmps
ret
sub
loopne
sub
fcom
pusha
je
cli
inc
je
lods
imul
fidiv
pop
aad
mov
nop
xor
clc
xor
xchg
sbb
xchg
push
ss
inc
xchg
jge
inc
std
inc
jle
add
mov
repz
mov
out
dec
scas
add
addr16
lds
adc
jae
loop
call
sbb
imul
mov
xchg
icebp
and
adc
imul
xor
xchg
cmp
mov
aam
xchg
test
(bad)
cmp
dec
adc
sub
mov
enter
xor
push
popf
ss
dec
mov
out
sub
mov
jg
jp
aam
pusha
(bad)
jecxz
jge
mov
(bad)
mov
iret
in
add
push
xlat
mov
aad
mov
ins
int3
repz
push
mov
mov
outs
int3
sbb
dec
inc
je
mov
clc
or
cmp
adc
jg
and
mov
cmp
and
cmp
mov
or
push
jecxz
hlt
aam
stc
fwait
stc
jg
push
cmps
nop
cmps
or
sub
and
jns
icebp
push
inc
test
push
stos
clc
xchg
xchg
push
pop
outs
sub
retf
xchg
xchg
xor
mov
fcom
repnz
add
loop
sar
punpcklwd
cmp
cld
push
fiadd
and
jp
push
fwait
rol
mov
xchg
loopne
in
stc
xchg
aaa
mov
shl
fwait
dec
inc
aas
fiadd
popf
pop
outs
mov
fs
mov
call
sbb
fadd
(bad)
jge
jl
shl
and
out
xor
xor
test
push
mov
std
rcl
sub
dec
rcr
mov
(bad)
out
jbe
and
sbb
adc
pop
cli
ror
jns
mov
mov
ficomp
retf
jmp
shl
pop
std
push
mov
cmps
dec
daa
add
rcl
sub
or
mov
retf
inc
imul
fist
jne
test
idiv
inc
or
xchg
pop
mov
sbb
mov
sbb
lea
mov
xor
pop
loop
jbe
loope
fnstenv
cmp
fsub
inc
dec
add
mov
and
fwait
aam
mov
push
xchg
loopne
enter
sti
ror
pop
stos
outs
and
(bad)
push
fimul
dec
movs
mov
xor
popa
pusha
test
pop
in
cs
dec
pop
icebp
fadd
or
push
or
outs
enter
aas
xor
sti
xor
push
call
shl
enter
shl
push
jbe
push
cmps
mov
push
push
xor
gs
cmp
sub
test
xchg
and
enter
pop
inc
mov
push
ss
inc
(bad)
jae
dec
mov
cdq
ins
icebp
or
and
mov
or
sbb
inc
sbb
lods
int3
clc
add
add
dec
lds
outs
aas
fdiv
cmp
xor
test
dec
dec
bound
mov
lahf
or
sub
mov
push
sub
push
dec
mov
inc
sub
pop
popa
mov
push
sub
rcl
xor
xchg
dec
lahf
and
mov
aam
imul
pop
mov
icebp
jne
movs
inc
xrelease
xor
dec
pop
aaa
or
push
push
mov
or
cdq
sub
test
sub
fmul
xor
mov
(bad)
push
xchg
(bad)
xchg
jae
out
pop
push
xchg
mov
sbb
dec
outs
ret
push
sub
in
mov
out
mov
mov
iret
ficom
stc
or
cs
int
sahf
mov
add
inc
nop
mov
and
adc
or
adc
aaa
div
xchg
sbb
dec
scas
push
clc
and
pop
hlt
xor
pusha
xchg
mov
inc
je
cmp
nop
pop
mov
fwait
jmp
jne
jno
or
and
aam
jno
cld
movs
loopne
outs
daa
shl
fistp
nop
pop
les
mov
lods
rol
sbb
xchg
mov
int3
pop
sbb
cmp
mov
lock
pop
ins
cmp
mov
sbb
repnz
inc
ror
mov
sbb
push
pushf
and
out
stc
mov
(bad)
mov
cli
test
mov
mov
mov
imul
dec
iret
sbb
jmp
xchg
xchg
xor
or
mov
sub
add
push
fcmovu
test
xchg
lahf
pop
dec
mov
jmp
movs
ds
inc
add
lahf
push
inc
gs
push
mov
inc
test
sar
or
pop
xchg
dec
in
aas
push
mov
and
pop
imul
shl
repz
jo
pop
jae
sbb
hlt
and
inc
jle
aas
aad
cmp
pushf
mov
dec
or
push
outs
popf
xor
xchg
inc
and
dec
jo
push
push
test
pop
in
gs
addr16
imul
xlat
push
sbb
jb
aam
pushf
je
and
add
pextrw
jle
mov
xor
ja
sub
sbb
inc
cmp
inc
out
into
repnz
push
fild
xchg
pop
scas
cmp
pushf
inc
add
xlat
cs
shr
fstp
mov
ja
or
adc
and
mov
out
mov
retf
adc
out
and
mov
arpl
mov
cld
mov
arpl
imul
fisub
in
jb
aaa
mov
sar
jns
jecxz
or
imul
jge
adc
int
jmp
and
rcl
gs
fldz
int
nop
add
enter
shl
cld
mov
pop
cmp
inc
cmp
pop
imul
retf
es
bound
addr16
scas
daa
bound
std
sti
mov
adc
lods
xchg
out
mov
cdq
arpl
fiadd
sub
aas
pop
fst
adc
clc
pop
daa
mov
loope
pop
cmps
push
ja
lods
mov
lock
fadd
xchg
data16
sub
test
xchg
jle
inc
imul
jno
movs
or
jge
sbb
push
sbb
pop
test
aad
pushf
cmp
retf
and
push
xor
push
mov
jmp
mov
mov
xor
lahf
fwait
gs
mov
mov
pop
jmp
push
aaa
sar
repnz
repnz
mov
ret
xor
popa
repz
stos
sub
mov
ja
ins
or
and
retw
loop
das
aam
xchg
ja
jo
mov
mov
mov
data16
cmps
les
popa
call
leave
aas
push
fist
loop
sbb
popf
jmp
lahf
xchg
jg
push
push
arpl
jbe
cs
(bad)
aam
outs
call
inc
fadd
lock
ds
push
mov
sbb
inc
pop
sbb
dec
jecxz
shl
js
cmp
or
push
(bad)
sbb
ds
mov
push
js
fdivr
lods
dec
mov
mov
xor
inc
movs
sub
stc
mov
and
test
mov
or
daa
(bad)
daa
or
jmp
push
rcl
pop
and
dec
bound
lahf
push
xchg
sub
inc
lods
imul
mov
or
mov
pop
stc
aas
arpl
xor
pop
mov
ret
and
adc
sbb
fstp
push
mov
sahf
ja
addr16
sub
inc
mov
or
(bad)
sub
mov
xor
cmp
pusha
dec
call
outs
repnz
sub
push
and
fidiv
popf
stc
mov
push
pop
and
inc
mov
leave
pop
mov
sbb
push
daa
cld
push
sbb
jo
inc
jns
ds
pop
(bad)
xor
cwde
add
xchg
rol
mov
fsubr
jg
jg
repz
sbb
lds
add
inc
into
(bad)
in
out
mov
ja
test
cwde
fsubr
lea
pop
movs
enter
pusha
sbb
aaa
cmps
sub
out
dec
mov
frstpm(287
rcl
mov
push
pop
aaa
pop
fwait
inc
imul
mov
dec
xchg
jp
mov
jae
sbb
mov
cs
jg
mov
mov
out
loopne
ins
and
sub
js
lods
loope
cmps
push
sti
cdq
add
mov
retf
or
xor
sar
xchg
es
xlat
iret
std
je
clc
std
jge
imul
jb
test
loopne
in
adc
inc
fwait
or
fcomp
fst
inc
retf
push
sbb
jno
sti
sub
or
and
es
jmp
push
das
aad
and
dec
or
jbe
fld
bt
loope
mov
dec
scas
mov
jmp
into
cmc
dec
pop
sbb
fld
inc
sbb
mov
add
fisttp
dec
dec
(bad)
xor
jle
pop
mov
dec
xchg
mov
daa
adc
sbb
stos
scas
ja
jno
push
cwde
or
sti
jo
adc
rsm
or
loop
fidiv
and
scas
xchg
out
out
push
mov
mov
push
and
sub
mov
and
inc
and
pop
rcr
mov
push
ficomp
xor
fnsave
aam
or
adc
(bad)
hlt
in
jle
lahf
and
cwde
pop
outs
add
sbb
shr
xchg
or
dec
pop
mov
jae
dec
or
mov
jo
jmp
pop
push
inc
stos
cdq
repz
xchg
push
cld
loopne
mov
into
test
jb
ror
mov
push
retf
adc
icebp
sub
mov
movs
add
js
into
push
cdq
cmp
pop
in
mov
add
aaa
repz
mov
fimul
mov
retf
sti
cmp
addr16
fadd
cmp
jmp
xor
cmp
inc
mov
sbb
jnp
and
dec
add
cmp
leave
cmp
jl
push
test
cmps
int
xchg
mov
sbb
lods
ficom
test
pop
xor
jnp
cmp
fmulp
shl
fsubr
jmp
cmovge
and
mov
jl
fdiv
sbb
mov
mov
jns
mov
scas
xchg
dec
vmovlpd
fcmovu
mov
stos
adc
sbb
sahf
bound
ss
and
jle
fld
mov
call
lock
call
cmp
cmps
or
outs
loope
bound
nop
cmps
jmp
(bad)
test
fs
mov
daa
xchg
xor
inc
(bad)
sub
cmc
pop
movs
data16
outs
loopne
call
loopne
and
rcr
xor
cld
jbe
jg
or
add
pop
mov
mov
sbb
rol
push
ins
enter
add
imul
inc
add
daa
xchg
push
movs
repz
aam
ds
movs
adc
por
scas
inc
fld
outs
and
(bad)
jle
and
push
lods
shl
add
mov
test
cld
mov
pop
loop
fmul
jp
mov
rol
dec
das
pop
not
arpl
ror
cmps
out
sbb
inc
push
mov
idiv
test
fwait
mov
cmp
jmp
cdq
inc
lods
ja
(bad)
sbb
inc
add
dec
(bad)
mov
(bad)
in
neg
cmp
imul
jp
mov
scas
inc
mov
frstor
lock
stc
sbb
call
fldenv
popa
xchg
dec
and
cmp
push
xchg
out
or
mov
mov
test
test
sub
bound
mov
dec
mov
inc
jp
pop
jmp
xchg
jae
fdivr
enter
ja
jae
fstp
add
or
rcr
dec
jecxz
jmp
or
mov
cmc
and
cmp
pop
jecxz
ss
jmp
js
sahf
mov
push
xchg
dec
add
push
hlt
xlat
mov
mov
jb
and
xlat
inc
mov
add
pop
xor
cmp
nop
jmp
es
sbb
(bad)
aad
in
out
call
adc
inc
leave
clc
mov
mov
sub
test
inc
xor
mov
pop
shl
pusha
pop
push
jecxz
les
add
clc
aam
cmc
leave
(bad)
int
out
ins
sar
mov
mov
sbb
jl
fs
or
inc
xchg
mov
(bad)
stc
or
push
rol
sbb
outs
jo
or
sbb
lock
imul
jmp
mov
outs
xor
lods
pop
enter
adc
xor
shr
or
mov
mov
push
adc
in
das
hlt
sbb
ror
adc
inc
and
push
sbb
inc
xor
cmc
mov
or
lods
call
hlt
or
push
aaa
xchg
xchg
(bad)
mov
mov
xchg
test
fisubr
xor
push
cmp
xchg
mov
dec
mov
sub
sub
inc
repz
movs
cdq
cmp
xlat
adc
jp
call
mov
push
retf
lock
adc
or
xchg
(bad)
outs
sbb
xor
out
scas
test
test
add
dec
push
xchg
out
jb
mov
xor
mov
scas
xor
retf
mov
mov
sbb
xchg
fdiv
test
ret
call
adc
mov
lds
push
daa
cmp
push
sbb
neg
and
pop
aam
cmp
cdq
aam
push
retf
rol
inc
(bad)
xor
and
js
shl
jmp
js
fidiv
pop
push
outs
jo
sub
cmp
imul
mov
js
cmp
pop
leave
xchg
int3
sub
adc
es
int3
or
xchg
sar
inc
fmul
int
es
add
aas
lods
sub
bound
sbb
jmp
dec
xchg
jns
lods
fnstsw
imul
data16
sub
aad
jns
data16
imul
jp
inc
loop
pop
jae
inc
pop
ins
add
arpl
and
push
out
outs
in
dec
inc
mov
lds
and
test
into
hlt
xchg
rcl
cli
js
fstp
inc
or
je
movs
imul
mov
and
push
mov
addr16
aaa
xor
xchg
loope
dec
push
xchg
imul
pop
retf
mov
xor
or
ja
pop
xor
cmp
outs
pop
icebp
hlt
mov
mov
sub
jns
out
je
inc
aas
out
mov
gs
sub
push
movs
mov
js
movs
(bad)
pop
add
push
jmp
das
aas
and
sbb
add
mov
dec
mov
(bad)
or
mov
call
and
cmp
sti
fwait
sti
std
fcom
add
push
out
in
rcr
dec
loop
call
out
xchg
(bad)
into
pop
fwait
jmp
cli
addr16
inc
aaa
push
frstor
dec
dec
jbe
pop
add
mov
add
pop
dec
fwait
pusha
mov
or
popf
jbe
inc
stos
sbb
or
fadd
xor
cs
cmp
pop
xchg
aas
shl
jns
sbb
lahf
ss
add
jmp
xor
dec
xor
test
popa
std
sar
loopne
mov
xor
inc
mov
pop
icebp
mov
xchg
cs
loopne
cmps
outs
popf
pop
mov
repz
enter
sbb
xor
mov
lods
data16
and
add
popf
jb
jb
fcomp
cs
cmp
xchg
movs
xchg
inc
cmc
mov
cmp
add
inc
sbb
or
lahf
pop
pop
add
cmp
mov
cmp
lods
jge
cdq
fwait
xor
fmul
jmp
push
cmp
and
mov
xchg
xchg
push
(bad)
retf
sub
pop
int3
popf
aaa
xchg
mov
mov
or
pushf
or
or
fst
mov
cwde
adc
(bad)
push
pop
dec
test
xchg
imul
dec
jecxz
push
dec
sbb
shr
add
out
je
mov
jbe
xchg
mov
xor
ss
popf
add
mov
inc
out
leave
repnz
and
sbb
add
mov
xchg
sahf
mov
call
pop
in
dec
sahf
jb
jbe
jns
cmp
cmp
fnsave
sub
push
and
or
ins
push
out
rdpmc
mov
inc
and
pop
repz
and
dec
jb
mov
mov
push
mov
(bad)
repnz
fisub
push
fsubr
ins
sbb
inc
ja
jbe
dec
push
xor
and
mov
(bad)
test
sbb
mov
and
repnz
fsubr
daa
mov
and
cmps
sub
mov
mov
into
cmp
sub
enter
push
aad
call
mov
jno
or
das
outs
ret
cmp
out
outs
and
loope
xchg
lock
xchg
mov
test
arpl
out
mov
xchg
mov
repnz
cdq
inc
out
movs
dec
std
sub
pop
jbe
popa
mov
push
stc
sbb
ds
xlat
mov
loopne
sbb
cmp
rcl
ins
push
push
mov
jnp
add
cs
or
push
sar
cld
xor
pop
ins
rcr
inc
(bad)
pop
or
mov
addr16
mov
pop
cmps
cmovnp
cmp
cs
cwde
xchg
outs
dec
test
push
pop
gs
arpl
add
and
inc
fdivr
push
int
mov
mov
in
(bad)
cli
push
pop
out
btc
fsub
shl
sub
lods
dec
mov
jge
or
cdq
xchg
jmp
jp
xor
aam
pop
mov
shr
cmps
call
es
mov
sub
sub
aaa
aaa
mov
fwait
jmp
cmps
and
mov
push
(bad)
lea
jo
push
cmp
ds
or
adc
xor
test
mov
rcl
sbb
cmp
loope
mov
dec
xchg
daa
call
mov
cmp
adc
xacquire
xor
lock
lock
xchg
cmp
retf
dec
movs
or
push
pusha
nop
lods
mov
mov
dec
adc
inc
sub
out
outs
gs
out
jnp
mov
dec
inc
mov
fdiv
call
cli
stos
sbb
xchg
mov
ins
jecxz
push
inc
push
out
sar
mov
in
ret
xchg
cmp
pop
test
pop
pop
lds
add
inc
stos
push
fnstenv
push
cli
(bad)
jae
xchg
adc
je
dec
xchg
pushf
cmp
mov
cmp
std
stos
addr16
sbb
cs
gs
mov
das
int
out
cdq
or
cmp
in
push
fs
mov
loop
and
adc
movs
xchg
lods
icebp
adc
and
or
or
cmp
ror
loopne
pop
jmp
xor
mov
xchg
cmp
add
or
int
and
retf
sub
jecxz
adc
pop
enter
mov
(bad)
stos
xchg
retf
xchg
js
dec
cmp
fist
xchg
cmp
dec
loop
jmp
mov
ret
mov
push
stos
sub
ins
or
xor
pusha
std
fmul
xlat
fild
std
xchg
pop
js
icebp
sbb
lahf
or
xchg
(bad)
and
daa
push
movs
sbb
in
sub
inc
dec
enter
xor
xchg
sbb
(bad)
int3
inc
pop
jbe
movs
(bad)
and
inc
and
lahf
outs
mov
jnp
(bad)
mov
mov
pop
rcr
shr
fimul
mov
(bad)
jo
jb
sar
mov
imul
xchg
(bad)
ficomp
jns
movs
pop
jns
loopne
inc
movs
pop
cmp
sbb
push
sub
pop
lahf
int
in
mov
mov
dec
inc
sbb
(bad)
in
adc
into
xlat
mov
cmp
adc
jl
adc
lds
ror
ss
mov
imul
cmp
icebp
push
lods
adc
enter
rol
add
ja
dec
pop
mov
sbb
fild
sub
imul
mov
out
and
pop
movs
cs
push
inc
repnz
and
enter
retf
daa
push
push
pop
lods
repz
mov
inc
jns
cmp
in
xlat
jno
stc
or
pop
in
push
sbb
or
test
mov
(bad)
shl
add
sbb
out
xchg
push
fild
ja
lods
lods
ds
pop
mov
rol
into
movs
bound
sbb
cmps
cmp
adc
or
das
dec
mov
int3
aad
test
xchg
das
mov
xchg
mov
add
xor
out
fmul
js
adc
lods
xchg
adc
outs
adc
dec
jae
cld
in
jmp
les
cmp
and
stc
into
aam
adc
dec
pop
rcl
lds
iret
xor
test
push
imul
xchg
inc
gs
js
pop
fs
inc
sbb
jo
jne
jae
jmp
sbb
mov
dec
xchg
aam
cmps
cmp
xor
xchg
imul
mov
loope
mov
mov
mov
pop
pop
cmp
mov
lock
clc
enter
loope
pop
scas
mov
xchg
mov
adc
sti
ficomp
add
out
cmp
inc
stc
lods
clc
inc
imul
cmp
out
outs
mov
lds
rcr
mov
push
loop
(bad)
fldcw
add
aaa
mov
in
and
mov
cmp
data16
imul
std
in
ja
adc
stos
xor
(bad)
cmp
push
ror
addr16
out
pop
and
adc
pop
lds
out
cmps
ret
pop
lahf
gs
fcomp
push
mov
sub
and
xlat
push
pop
push
fwait
sbb
fistp
arpl
imul
retf
shr
jo
or
sub
push
mov
mov
dec
dec
pushf
jnp
and
sub
jb
fisub
xchg
imul
out
and
xchg
xor
adc
jno
repz
jo
cdq
lock
sub
or
fstp
jns
aad
cmp
cld
and
pop
sbb
add
ss
(bad)
int
adc
leave
push
inc
nop
jbe
push
je
mov
cdq
(bad)
aad
call
in
pop
in
jg
cs
mov
fwait
lods
pop
cmp
dec
push
sbb
lds
in
iret
push
js
fs
inc
jns
lods
les
call
jns
sbb
pop
pop
out
call
ins
arpl
and
aaa
repz
sbb
jns
cmp
outs
mov
jno
lds
xor
(bad)
call
cmp
mov
out
lods
mov
or
js
cmps
icebp
push
pop
mov
mov
pop
jno
retf
sahf
stc
dec
mov
ja
dec
(bad)
out
push
adc
mul
sub
std
js
mov
push
jb
mov
xor
or
mov
mov
push
ror
mov
loopne
sub
loopne
fidivr
(bad)
xchg
sbb
les
jne
inc
xor
test
push
pop
clc
lds
(bad)
inc
pop
shr
sub
push
and
adc
push
and
lods
repz
add
sub
pop
mov
dec
push
popa
add
lds
jle
fldcw
in
dec
mov
inc
call
repz
(bad)
jecxz
or
mov
icebp
popf
xchg
adc
test
in
aad
add
stc
xor
icebp
sbb
dec
imul
jmp
jp
scas
adc
push
add
ret
inc
lods
popf
mov
inc
sar
jl
sub
pop
dec
push
push
mov
gs
push
(bad)
retf
cmps
lods
pop
xchg
jnp
in
jae
xor
pop
push
sub
add
in
das
aam
stos
ss
addr16
std
out
fcomip
xor
ficom
daa
test
xlat
ret
xchg
and
adc
pushf
push
add
stos
in
inc
lea
test
fisubr
jb
or
adc
mov
dec
arpl
(bad)
lea
(bad)
adc
mov
xlat
dec
xor
pop
sbb
iret
loop
(bad)
pop
scas
jo
xchg
stos
paddq
dec
pop
test
xchg
movs
inc
arpl
push
xchg
pop
vmovupd
dec
pop
mov
xchg
or
mov
iret
pop
jp
cmc
inc
test
xor
adc
push
mov
mov
jg
into
push
enter
test
js
mov
cli
dec
movs
cs
cmps
adc
mov
adc
shl
dec
sub
fst
xor
xchg
inc
mov
mov
push
sub
sbb
inc
xor
jecxz
test
lds
pop
and
pop
jo
aaa
sub
movs
mov
(bad)
in
shr
je
adc
mov
mov
mov
cmp
call
jmp
push
fcom
sub
or
inc
mov
add
fild
adc
enter
shl
pop
cmp
out
vpminsw
xor
test
enter
in
sub
fwait
cmc
cdq
and
pop
xor
cmp
jo
in
pop
in
inc
cwde
rol
push
or
or
and
jle
mov
aad
cdq
sub
call
gs
inc
movs
addr16
xchg
adc
cmps
jb
repnz
ss
add
daa
out
and
in
mov
and
inc
or
cmp
arpl
add
jae
mov
aam
pop
enter
adc
movaps
xchg
mov
xchg
movs
push
sbb
loopne
xor
lahf
out
cmps
fisttp
fucom
jge
ds
fwait
xor
inc
test
mov
mov
xchg
cmp
pop
fnstsw
xchg
and
mov
fwait
lea
xchg
pop
xchg
cmp
adc
push
pop
xor
retf
mov
addr16
je
(bad)
stos
mov
xor
arpl
imul
pop
popa
cmp
arpl
daa
sbb
jge
sub
dec
fs
xor
movups
in
lods
sbb
call
pop
cwde
and
movs
test
add
or
sub
adc
xor
shr
(bad)
push
sbb
push
call
les
xchg
inc
fiadd
int3
ror
test
inc
fmul
mov
mov
test
pushf
xchg
sbb
mov
xchg
dec
mov
hlt
es
jb
jb
mov
jge
mov
aam
gs
jl
cmp
and
jmp
js
jg
nop
push
rcr
cmp
loope
cli
push
leave
test
push
jmp
ss
push
sbb
xor
int
push
cmc
mov
inc
aas
shl
xchg
aas
xchg
cwde
push
mov
out
sub
jbe
out
ins
jb
and
and
std
es
cmp
cmp
out
mov
mov
lock
js
jecxz
sbb
and
adc
mov
repz
mov
pop
daa
or
and
ja
loope
aad
iret
or
push
or
aad
push
push
inc
(bad)
xor
cmp
dec
mov
mov
xor
jecxz
icebp
(bad)
mov
cli
daa
push
jae
jp
fucom
cmp
mov
in
mov
xchg
and
jmp
add
test
mov
jle
ss
cmp
jmp
mov
fisttp
push
inc
mov
call
add
movs
adc
out
jns
or
pop
add
and
retf
ins
pop
cmp
fdiv
jle
push
in
iret
inc
sbb
sub
xchg
rol
push
mov
push
out
mov
inc
cmc
mov
push
loop
cmc
dec
cmp
xor
xchg
jecxz
adc
mov
sbb
xor
or
cmps
gs
xchg
dec
sete
push
add
push
sbb
jne
mov
xlat
test
sbb
cld
push
scas
cmp
mov
hlt
out
mov
adc
loope
push
sub
mov
adc
repz
jle
adc
push
cmp
xchg
jbe
mov
adc
icebp
mov
and
test
xchg
scas
fcomp
loope
dec
fs
hlt
call
add
out
popf
mov
jnp
fiadd
mov
cmp
mov
imul
jbe
retf
sbb
rcl
fucomi
push
and
icebp
or
cmc
or
xlat
mov
add
test
movs
push
sub
xor
ja
in
xlat
adc
or
sbb
das
adc
sub
xchg
aam
push
and
mov
pushf
loop
push
movs
add
xor
pop
or
inc
xchg
call
daa
mov
mov
shl
pop
jl
shl
out
sti
fs
inc
test
sbb
xchg
scas
in
ret
enter
or
in
fidiv
sbb
sub
movs
push
jp
push
out
bound
ins
push
xchg
mov
dec
sbb
neg
call
or
pop
pop
mov
inc
mov
retf
(bad)
sub
lock
add
fdiv
xor
pop
out
inc
mov
sbb
int
stos
or
int3
mov
das
jo
mov
mov
sbb
loop
(bad)
sti
lods
cli
xor
or
and
jmp
xor
retf
aaa
mov
cmc
retf
mov
dec
sub
inc
fxch
lods
or
sar
pusha
into
mov
data16
rcl
call
cmps
pop
test
mov
adc
mov
aaa
pop
dec
cvttps2pi
dec
inc
xor
cmp
arpl
xchg
imul
pop
push
or
outs
inc
(bad)
sbb
sub
ss
nop
mov
dec
mov
xor
addr16
lds
mov
jns
(bad)
add
lahf
and
push
fmul
mulps
add
xchg
rcr
call
stos
add
cmp
js
rcl
mov
pop
pop
hlt
push
sbb
mov
and
mov
xchg
sub
sub
sbb
(bad)
and
ss
and
cmp
lahf
retf
or
daa
mov
push
ds
push
dec
mov
jo
inc
out
xlat
xchg
sbb
push
mov
rcr
jae
pop
dec
ret
sub
or
push
enter
aaa
xor
icebp
push
in
push
mov
fsub
test
int3
inc
outs
shr
(bad)
pop
dec
test
xchg
xadd
nop
push
xchg
mov
mov
cmp
data16
data16
mov
push
repnz
mov
and
leave
mov
sbb
mov
test
scas
pop
adc
mov
xchg
jbe
cmps
sbb
mov
ror
(bad)
mov
push
ret
std
iret
outs
ficom
lods
jge
sbb
xchg
mov
mov
out
jle
arpl
lds
push
mul
cli
pop
(bad)
repz
mov
or
adc
ror
das
ins
imul
retf
dec
rol
xlat
push
aas
inc
xor
loope
dec
xchg
push
fsubr
jmp
inc
xchg
jle
icebp
inc
scas
scas
rcl
(bad)
cmp
dec
push
xor
xor
(bad)
push
or
push
movs
and
fs
adc
f2xm1
add
fdiv
sbb
jno
sti
adc
data16
mov
mov
jnp
pop
test
inc
mov
jb
(bad)
cld
bound
mov
add
outs
sub
rcr
mov
out
(bad)
fstp
sub
aam
cmps
add
call
xor
or
jns
pop
mov
cmps
or
xchg
mov
test
push
pop
push
inc
stos
ins
outs
mov
pop
sar
movs
push
mov
mov
cmp
loope
stos
outs
mov
dec
addr16
mov
scas
add
fidiv
inc
fldcw
std
loopne
xchg
sbb
cwde
std
jmp
(bad)
or
add
or
lea
and
mov
adc
jmp
push
mov
es
add
inc
add
les
js
dec
pop
mov
xadd
nop
or
data16
fist
pushf
mov
pusha
fadd
dec
out
and
push
mov
push
xor
pop
xchg
enter
ds
mov
(bad)
pop
mov
jl
test
or
pop
jo
orps
loopne
stc
out
push
ss
stos
mov
jp
mov
in
clc
xor
jp
dec
sub
jge
xchg
or
dec
nop
pop
mov
xchg
stc
cmc
test
pop
out
ret
aam
in
rol
or
shl
jp
ins
xor
dec
cli
fdivr
outs
mov
test
movs
push
push
icebp
movs
sbb
and
and
push
mov
cmps
pop
(bad)
dec
inc
jg
lea
cs
or
jb
sub
test
sbb
popa
repz
and
in
xor
cld
jge
inc
(bad)
enter
pop
iret
scas
xchg
stos
pop
addr16
iret
cmp
lods
(bad)
push
sub
xchg
std
fcmovne
lods
fdivrp
shl
jg
ja
fst
inc
jmp
add
retf
or
adc
sti
xchg
jmp
push
ins
jecxz
push
int3
mov
xor
mov
(bad)
in
push
nop
aas
dec
loopne
pop
pop
mov
loopne
sar
jp
mov
(bad)
ss
mov
daa
pop
jb
jl
dec
mov
mov
std
push
bound
or
ja
push
ss
test
pushf
bound
stc
adc
cdq
pop
and
mov
mov
pop
mov
inc
push
inc
(bad)
lods
jbe
imul
jno
jnp
xor
cmp
out
in
and
mov
movs
fwait
cwde
fwait
sbb
pop
mov
psrlq
retf
test
cmp
mov
push
inc
xchg
test
ins
out
push
xor
js
cdq
cmp
pushf
rcr
das
push
mov
rol
movs
rcr
inc
xchg
popa
and
mov
xor
jns
in
stc
sbb
sahf
or
pop
xchg
jbe
repz
jl
les
cmp
push
adc
jmp
(bad)
fwait
jmp
enter
cmp
mov
movs
push
mov
cs
mov
jl
(bad)
adc
lahf
xor
dec
lea
je
cmp
dec
push
lea
outs
add
push
xor
pusha
push
stc
mov
xchg
push
fmul
hlt
je
fadd
int
or
les
xor
outs
xor
pop
into
xchg
mov
scas
sub
out
leave
push
sub
add
push
xchg
or
xor
push
nop
xor
dec
ret
bound
dec
jmp
cmp
repz
jg
sbb
retf
cld
push
push
mov
and
hlt
ss
inc
mov
jge
mov
push
pop
cmp
shl
mov
out
je
popf
test
mov
es
fistp
xor
cld
jmp
push
and
sub
fs
js
movs
dec
push
outs
mov
fwait
jb
mov
arpl
and
mov
inc
(bad)
jge
push
iret
jne
cmc
hlt
xchg
fist
arpl
mov
push
shl
les
mov
sub
mov
out
loopne
test
cmp
lock
scas
pop
into
jg
into
jbe
in
(bad)
sbb
adc
neg
imul
cmps
sub
ds
mov
xor
sub
sbb
push
adc
mov
dec
in
push
jg
or
cmp
mov
dec
daa
jnp
cs
lock
and
shl
and
icebp
ds
shl
imul
sbb
pop
adc
cmp
out
test
pop
fdivr
scas
std
sub
cmp
dec
xchg
or
inc
(bad)
jecxz
push
cld
retf
add
(bad)
mov
mov
mov
fidiv
push
out
jnp
push
mov
arpl
inc
leave
cli
pusha
outs
retf
es
xor
cmps
sbb
aas
jl
add
dec
dec
jmp
adc
cmps
cli
jbe
sub
dec
ja
cld
test
cmp
pop
cs
jp
mov
popf
push
sbb
stc
das
or
sbb
cmp
test
cmps
pop
or
aad
fnstenv
cld
ss
jmp
jle
cli
sub
aad
sub
data16
cmp
push
outs
sub
sbb
jle
out
cwde
in
outs
dec
xchg
daa
test
imul
fucomi
and
cmps
(bad)
ds
repz
bound
arpl
scas
rcl
retf
repnz
add
leave
lea
imul
add
dec
cmp
in
mov
push
pop
sub
pop
cwde
jb
mov
add
dec
repz
sbb
lds
inc
loope
xchg
push
cmp
push
call
mul
inc
(bad)
push
push
add
repz
xor
mov
xchg
out
in
mov
dec
mov
js
mov
in
stos
or
repnz
sbb
inc
add
push
or
scas
push
imul
jl
lods
(bad)
mov
div
jns
(bad)
sbb
inc
jb
pop
xor
imul
outs
call
shl
cld
xor
xor
cmp
lahf
or
(bad)
aaa
adc
paddsw
push
inc
mov
dec
test
sbb
sub
test
rcr
cmp
outs
mov
stos
(bad)
add
xlat
mov
mov
xchg
adc
and
pop
fwait
adc
test
ffree
stos
jo
sti
jno
mov
add
inc
(bad)
popa
es
cwde
bound
popf
out
sbb
add
dec
data16
cmp
(bad)
cld
out
mov
je
dec
mov
les
imul
test
sbb
push
dec
xchg
test
jl
in
adc
sbb
mov
push
xchg
sbb
sub
ds
mov
jb
scas
xor
add
popf
fs
jb
gs
mov
retf
and
push
cs
dec
stc
and
ss
inc
cmp
add
cli
outs
mov
sub
not
inc
fyl2xp1
jae
loope
or
cmp
cmp
jo
xchg
test
aam
mov
or
inc
std
pop
inc
ins
cmp
fbstp
outs
test
mov
ins
loopne
xor
mov
js
mov
cmp
sbb
inc
pop
mov
dec
adc
into
dec
and
sub
dec
push
push
addr16
fld
add
sbb
test
jg
and
pop
xchg
fldenvw
sahf
enter
idiv
fst
inc
jne
push
cmp
loop
push
lods
dec
inc
stos
out
aaa
loop
cmps
ins
rcr
enter
aas
clc
and
add
dec
ins
cmp
dec
mov
movs
stos
cmp
loop
stc
nop
mov
int
or
hlt
pop
je
scas
ret
aam
retf
rcr
inc
cmp
mov
loop
push
into
(bad)
neg
pop
push
pop
test
test
fsubp
retf
jle
adc
scas
xlat
or
pop
cmp
and
idiv
pop
mov
inc
sahf
cmps
cli
inc
test
inc
adc
push
jbe
ret
in
cmp
jae
aaa
pop
add
adc
imul
and
(bad)
aam
into
dec
cmps
imul
xchg
jecxz
nop
mov
or
push
pop
stos
xchg
xchg
mov
or
add
inc
loop
scas
fs
fs
daa
or
push
in
add
mov
retf
loope
scas
in
cmp
pop
pop
loop
(bad)
les
inc
jp
cmps
or
iret
(bad)
int3
inc
mov
sbb
push
test
mov
jmp
out
mov
push
lea
popf
iret
ret
sbb
xor
fwait
in
add
iret
cmp
push
jb
and
mov
and
xchg
mov
ret
(bad)
stc
call
out
sub
out
or
jo
out
arpl
fadd
mov
jle
push
test
pop
sub
xor
mov
and
jl
test
push
shl
in
pusha
sbb
std
ins
(bad)
fcmovnu
mov
inc
xchg
pop
ret
enter
xchg
in
cld
aam
mov
dec
mov
mov
js
arpl
out
fwait
lods
push
pushf
or
fidiv
mov
jp
pop
push
jbe
in
out
gs
sub
into
out
stc
(bad)
clc
es
in
and
(bad)
sub
mov
push
pop
jmp
lds
jnp
sub
mov
aaa
daa
fdivr
mov
js
push
cli
fmul
xchg
jb
jae
xchg
gs
sub
cld
popf
jmp
data16
(bad)
loopne
jg
jl
adc
std
mov
xchg
pop
scas
arpl
inc
add
adc
push
in
xor
inc
aam
mov
or
and
xchg
mov
mov
scas
adc
xchg
lea
push
punpckldq
retf
pop
(bad)
std
or
cmps
mov
fsubr
fs
mov
cmc
jns
mov
jne
cmc
mov
push
inc
mov
aaa
dec
xor
ret
ss
(bad)
call
adc
outs
or
scas
out
xor
lods
push
in
inc
fiadd
scas
mov
int
test
fsubrp
dec
cmp
xchg
popf
mov
xlat
stos
push
sub
std
xchg
jle
add
and
jae
adc
shl
jecxz
and
sub
mov
inc
fisubr
aad
ror
sub
adc
dec
inc
push
or
sub
addr16
popa
ds
add
sub
xchg
cld
aad
mov
pop
in
test
mov
outs
pop
hlt
mov
and
xor
lods
cld
sbb
and
inc
aam
or
ja
imul
jmp
scas
sti
fwait
mov
mov
add
loop
sbb
dec
repnz
mov
rol
jmp
fld
jmp
test
dec
daa
(bad)
popa
mov
rol
enter
adc
jg
jns
mov
xchg
iret
orps
ins
movs
mov
ror
pushf
retf
dec
mov
ja
dec
mov
stos
je
jne
aad
sbb
sbb
shr
rol
inc
jle
or
mov
add
pop
pop
cmps
mov
loopne
call
dec
cmp
fstp
pop
xor
fcom
sbb
mov
nop
sar
pop
and
mov
push
shl
fidivr
popf
inc
sbb
aam
pop
push
mov
cmp
xchg
ins
mov
into
xor
xor
dec
push
(bad)
nop
sbb
fsub
jg
adc
and
int3
in
jg
xor
out
cwde
fisub
mov
sbb
aad
cmp
add
mov
pop
add
(bad)
mov
xor
ret
lea
add
ins
out
sub
ja
xchg
lds
lods
mov
xor
mov
cli
push
or
xor
retf
xchg
dec
mov
iret
shr
je
sbb
out
enter
mov
adc
inc
xor
bnd
bound
sub
and
leave
mov
jne
pop
cmp
sbb
imul
jnp
inc
sub
mov
jmp
or
jmp
add
ds
mov
xchg
jb
cmp
ja
sub
dec
loop
scas
dec
bound
add
pushf
push
int
mov
or
add
test
xor
(bad)
imul
(bad)
test
cmp
push
adc
shl
dec
stc
adc
aas
mov
outs
xchg
adc
jp
out
pop
xor
dec
imul
push
fdiv
push
out
xlat
pop
xlat
adc
pop
test
mov
(bad)
cmp
jmp
outs
mov
in
sbb
(bad)
(bad)
fiadd
sti
jge
lods
adc
gs
add
and
push
mov
and
aad
aas
(bad)
cli
rcr
sbb
pop
pop
retf
imul
loop
leave
pop
cli
fdivp
mov
push
cmp
in
cmc
loope
pushf
loope
mov
pop
pusha
lods
fs
imul
into
mov
mov
leave
mov
sbb
pop
and
xchg
int
fadd
sbb
jg
fcomp
iret
ret
ror
sti
cmp
jno
retf
rcr
and
imul
stc
scas
cmp
(bad)
in
mov
rcl
out
pop
cmps
push
dec
stc
pop
cmp
ror
gs
lahf
and
mov
retf
sub
cmp
sti
out
stos
shl
mov
loop
xor
test
mov
sub
push
out
ins
jnp
xchg
add
jno
xor
leave
mov
jle
arpl
xchg
mov
sbb
mov
mov
cmp
fs
(bad)
pop
popa
mov
(bad)
push
xchg
adc
dec
xchg
jnp
or
pop
jbe
cmp
jmp
jp
xchg
jns
(bad)
sub
(bad)
aaa
data16
xlat
mov
or
xchg
jo
popa
mov
push
jle
jg
and
jne
inc
jmp
jbe
add
fisubr
mov
mov
call
push
cmps
adc
inc
mov
add
xchg
in
jns
test
adc
movs
mov
in
rcr
inc
mov
dec
scas
ja
push
xor
ja
jbe
mov
int3
stc
clc
ret
int3
or
retf
cwde
dec
mov
fwait
inc
mov
sub
adc
jmp
jns
mov
or
sbb
sbb
xchg
xor
das
xchg
inc
jns
ins
outs
enter
adc
push
cli
mov
cmp
out
shr
push
mov
sub
sub
sub
push
xlat
mov
aaa
adc
mov
in
inc
jecxz
adc
(bad)
dec
aas
or
push
mov
cmp
mov
xchg
add
mov
and
mov
cmc
ret
or
push
mov
xor
jo
cmps
cmp
jmp
sbb
inc
data16
xor
mov
cmp
push
cmps
outs
ficomp
jne
into
mov
out
push
or
je
mov
xchg
imul
data16
repnz
xchg
xor
jg
push
fs
test
leave
inc
icebp
pop
out
rcl
push
fistp
add
(bad)
jmp
jae
mov
jmp
jg
inc
retf
sahf
xchg
loopne
mov
ja
xchg
or
sbb
mov
arpl
push
std
or
sub
and
repnz
or
out
stos
sbb
pop
ins
push
lahf
fimul
xor
mov
push
inc
neg
push
mov
jbe
push
loope
xor
out
mov
xor
adc
int3
lahf
bound
data16
jne
(bad)
fisttp
pop
iret
mov
enter
call
dec
outs
push
mov
shr
xor
dec
sbb
rol
xchg
dec
xlat
jb
mov
push
jns
cmps
push
aaa
fidivr
adc
sub
xchg
jle
cmc
push
(bad)
test
lods
jno
fwait
mov
int3
cmp
jae
in
push
mov
cld
adc
adc
(bad)
jp
iret
pop
or
xlat
sbb
test
das
pop
sahf
in
xor
inc
dec
mov
add
rcl
mov
lock
cwde
pop
rcr
inc
xchg
push
xchg
icebp
addr16
cld
lds
neg
stos
fdiv
(bad)
or
xchg
mov
xchg
pop
jns
inc
ds
sbb
in
push
sbb
pop
dec
aam
test
in
addr16
aam
lea
jb
adc
mov
outs
ret
jge
dec
loopne
in
imul
bound
inc
adc
xchg
clc
pop
mov
cli
jno
loope
mov
jns
jbe
adc
rol
call
fstp
inc
dec
jno
popf
shl
mov
adc
cdq
ss
xchg
mov
out
push
mov
xchg
xchg
xor
je
add
int3
cdq
sar
sar
mov
pop
xor
jnp
pop
add
cwde
leave
ins
mov
gs
(bad)
jo
rol
fldln2
mov
shr
lock
out
test
cmps
dec
mov
(bad)
(bad)
jne
sbb
sub
cs
push
lock
das
sub
mov
lock
lods
jp
xor
je
mov
retf
sbb
sub
call
retf
shl
mov
mov
arpl
mov
test
stc
stc
adc
push
and
rcl
out
jb
inc
mov
ror
jnp
jl
sub
sahf
add
lock
gs
jmp
inc
sub
xor
xor
shl
xor
mov
xchg
jo
stc
inc
ins
or
popf
sbb
mov
ins
jns
lods
rol
sub
sar
xchg
stos
arpl
(bad)
mov
in
jno
mov
mov
popf
mov
or
jbe
cld
mov
aad
cmp
addr16
or
jle
sub
xor
movs
push
mov
jbe
add
sbb
scas
ret
and
lock
sbb
mov
lds
push
mov
rcr
inc
cmp
imul
xchg
mov
adc
add
iret
fimul
inc
adc
std
loopne
or
ret
lds
dec
adc
and
add
cmp
push
add
bound
pop
sub
retf
sbb
mov
lods
shl
outs
retf
cmc
fidiv
mov
repnz
std
add
fst
inc
cmp
loopne
sub
adc
mov
out
ret
cmp
ds
enter
inc
or
inc
fstp
sub
mov
fiadd
jp
jb
(bad)
cmps
jg
mov
pop
pop
in
push
repnz
and
mov
stos
stos
cmps
xchg
and
pop
sbb
in
fwait
scas
sub
imul
sbb
inc
loope
or
imul
mov
mov
push
shl
icebp
dec
aas
push
cwde
cli
sbb
jle
jmp
push
mov
ror
push
js
push
cmp
stos
fld
(bad)
dec
add
dec
loope
sbb
push
xor
dec
fiadd
test
or
mul
mov
out
rcl
shr
push
mov
push
xchg
pusha
push
jo
cmps
sbb
dec
or
add
leave
mov
outs
test
pop
adc
jns
ss
push
daa
fist
scas
test
add
mov
repz
cli
ins
add
xor
mov
push
jno
jle
xchg
push
mov
gs
mov
loop
out
outs
popa
les
mov
sahf
aas
push
adc
scas
mov
pushf
loop
push
adc
mov
xor
outs
push
fisttp
call
jne
pop
cmp
ins
test
out
sub
mov
xchg
jo
pop
pop
int3
mov
mov
mov
mov
ret
dec
add
or
sbb
rcl
dec
sti
pop
stos
(bad)
repnz
leave
out
xor
clc
or
mov
repz
mov
xor
push
adc
mov
jecxz
jne
arpl
pop
jmp
stos
icebp
lods
xchg
inc
dec
shl
loopne
xor
adc
mov
push
sub
sub
inc
or
jno
aaa
mov
(bad)
outs
mov
outs
cmp
mov
pusha
cmp
cli
fidivr
adc
cmp
shl
or
and
push
test
mov
ds
in
mov
bound
arpl
inc
lods
(bad)
jno
mov
in
mov
xchg
push
outs
mov
repz
test
mov
pop
add
cmp
inc
movs
mov
mov
pop
stc
ret
fcmovb
xlat
(bad)
fisttp
add
jae
adc
mov
sbb
xor
mov
dec
cmp
jge
inc
push
bound
movs
ja
ja
nop
lods
lods
hlt
xlat
cdq
cmp
mov
jb
dec
xor
push
lds
sbb
inc
(bad)
push
hlt
int
cld
cmp
and
and
pop
push
or
adc
mov
arpl
repnz
lea
dec
movs
pop
jl
cmps
arpl
fs
dec
test
rcl
pop
pop
jg
inc
jnp
xchg
or
jg
jmp
into
inc
out
xchg
fmulp
cmp
daa
dec
dec
xchg
mov
stos
sub
sub
cli
shl
adc
jo
push
inc
and
int3
or
popa
aas
ficom
cmp
mov
pop
outs
adc
mov
inc
jae
xor
es
ror
add
xchg
inc
std
push
jmp
push
shl
jns
fld
fstp
dec
cld
ins
clc
pop
int3
push
hlt
adc
fwait
xchg
pusha
loope
pop
outs
test
or
pushf
or
push
repz
push
xor
pop
scas
cmp
(bad)
xchg
push
cmp
jns
pop
push
fs
jl
inc
push
addr16
in
(bad)
test
mov
jnp
push
pop
pop
sahf
mov
mov
leave
fwait
sub
movs
dec
cmp
daa
test
retf
jmp
popf
sub
cmp
cs
fistp
mov
mov
xchg
xlat
pop
ins
int3
test
push
lods
jl
sbb
xchg
or
adc
arpl
in
or
(bad)
retf
mov
neg
popf
call
lds
lock
loopne
push
pushf
(bad)
or
xchg
out
into
out
dec
std
ins
xor
aaa
adc
pop
mov
sar
xor
popa
push
(bad)
cmp
adc
movs
jb
popf
scas
(bad)
mov
sbb
adc
call
add
test
mov
(bad)
sub
sbb
popf
popf
pushf
cmp
ret
jl
mov
push
jnp
add
ja
(bad)
push
sti
and
mov
mov
sbb
cdq
sbb
rcr
into
sub
adc
ins
jle
push
pushf
ins
imul
add
jle
sbb
cdq
mov
dec
cld
ins
mov
pop
addr16
dec
xrelease
enter
or
dec
push
dec
rcr
pusha
test
xchg
dec
push
push
fldenv
hlt
pop
ins
jo
popa
add
stos
push
xchg
outs
jl
in
cmps
xlat
mov
in
ror
(bad)
cld
in
and
adc
mov
sub
jmp
(bad)
std
test
mov
icebp
pop
dec
cmp
jl
or
js
pop
sub
sbb
dec
sub
fwait
cdq
add
jb
ins
push
stc
or
pop
popf
arpl
or
sbb
mov
xlat
mov
push
pop
js
or
and
hlt
add
js
pop
mov
call
es
rcr
sbb
ja
ret
not
sub
scas
jge
std
xor
xlat
(bad)
cmp
aam
movs
leave
add
dec
in
test
popf
clc
inc
std
out
nop
je
sbb
and
mov
push
mov
dec
sub
dec
cdq
data16
lods
jmp
jbe
leave
push
and
mov
mov
out
(bad)
mov
or
loopne
int
jmp
cmp
mov
mov
(bad)
and
and
ins
cmps
pop
out
ins
aas
pushf
jns
xchg
add
jnp
or
imul
inc
adc
aam
and
add
(bad)
call
xchg
retf
cdq
mov
stos
jg
mov
int
pop
js
jmp
fsub
pusha
push
int
popa
pop
scas
or
call
js
pop
mov
das
in
push
les
lds
(bad)
push
sbb
repz
mov
cmps
and
popf
sub
mov
aad
scas
cmp
call
mov
push
jns
cld
dec
lods
mov
iret
and
sub
mov
push
sahf
adc
int
jne
dec
or
jp
ffreep
stos
lods
fidiv
ins
jbe
cmc
jg
je
jl
xchg
push
push
xchg
jg
int
pusha
ss
xor
xchg
movs
mov
jo
loope
pop
dec
scas
in
adc
sub
mov
xchg
call
aas
fimul
bound
jbe
mov
xlat
dec
fxch
pop
sbb
int3
and
in
shl
repz
imul
mov
fdecstp
push
pop
arpl
push
shl
and
scas
sbb
jno
dec
cmp
neg
stc
fcomip
adc
nop
jno
leave
ins
lds
mov
and
sahf
add
fwait
inc
mov
lahf
clc
arpl
out
jo
(bad)
jno
repnz
mov
fidivr
mov
mov
mov
ret
addr16
adc
fld
mov
cmp
mov
test
mov
pop
xchg
jae
ret
cs
inc
scas
(bad)
push
pop
jnp
pop
out
inc
fisub
push
jmp
jb
std
cmp
movs
mov
and
xor
cmps
hlt
out
in
aam
pop
adc
sub
(bad)
adc
outs
pushf
mov
xor
inc
outs
imul
cmp
and
clc
jbe
(bad)
jo
rcl
loop
hlt
in
fadd
lahf
enter
jecxz
repz
iret
arpl
retf
adc
pslld
push
mov
ss
imul
pop
in
call
pop
pop
test
mov
mov
fwait
push
ret
rcl
add
jle
rcl
daa
inc
push
loopne
mov
movs
aad
xchg
scas
push
iret
mov
enter
fwait
add
mov
test
cmp
or
cmp
lods
movs
fst
jle
in
or
push
movs
in
movs
(bad)
or
or
imul
je
add
(bad)
pushf
or
inc
ds
arpl
stc
xchg
aas
jecxz
cmp
pop
fwait
dec
scas
mov
xor
and
push
push
sar
jnp
mov
xchg
mov
int
test
ins
fcom
dec
call
add
cmps
dec
repz
pop
jg
repz
js
in
or
push
sbb
sbb
pop
push
dec
jg
xchg
mov
mov
xchg
(bad)
jbe
push
cmps
inc
imul
cdq
dec
stos
(bad)
out
es
jno
mov
push
jle
jle
stos
push
icebp
sbb
mov
xor
ins
lahf
fbstp
dec
sub
outs
push
repz
test
push
in
inc
lea
into
push
pop
stc
imul
fsub
and
jmp
mov
lods
scas
sub
dec
xchg
test
inc
mov
mov
inc
adc
leave
mov
cmc
sar
enter
pop
push
push
add
and
icebp
dec
xlat
dec
mov
loope
pop
out
add
popf
outs
mov
and
in
cmp
xchg
xchg
xchg
jecxz
or
inc
shr
rcl
test
dec
sub
fbstp
cmp
movs
cld
(bad)
fcom
mov
push
jl
inc
aad
pop
lds
pop
xor
and
xor
mov
lea
pop
jno
sub
stos
sub
popf
repnz
call
jns
sub
aam
push
sar
or
stc
retf
sti
sbb
adc
sbb
push
test
cmp
inc
mov
ins
dec
dec
cld
pusha
cli
mov
add
sbb
adc
pop
push
dec
sbb
mov
pusha
sub
and
mov
aam
xor
jmp
dec
punpckldq
mov
or
or
xchg
and
xlat
loop
mov
xor
mov
pop
nop
mov
in
inc
stc
in
or
push
loope
or
mov
int
xor
mov
sub
xor
je
cmp
mov
sar
lods
jge
cmc
outs
jnp
cmp
int
and
mov
xor
inc
aaa
(bad)
cmp
push
nop
bound
sti
inc
dec
pop
push
lods
sysexit
xchg
adc
add
lods
shl
pop
rol
mov
cmp
add
xor
setne
stos
pop
shl
xlat
bound
adc
jge
fld
jnp
push
aam
rcl
std
mov
inc
mov
pop
pop
lods
adc
mov
shr
jnp
popf
test
jmp
sbb
mov
cmps
(bad)
clc
pop
std
xor
mov
jge
mov
sbb
sar
enter
addr16
mov
call
hlt
int3
(bad)
mov
cld
out
out
dec
mov
js
sbb
adc
out
mov
and
and
movs
jnp
pop
lods
imul
or
sbb
test
mov
dec
lock
fmul
retf
mov
push
add
xchg
retf
fild
jb
mov
cwde
popa
daa
into
add
jle
xchg
jo
popa
jo
pusha
not
jno
and
jb
int
outs
cmp
rcl
cmp
jae
(bad)
test
mov
mov
jb
sub
(bad)
(bad)
jmp
call
loope
pusha
sar
or
test
in
dec
push
movs
nop
push
and
pop
fs
retf
enter
pop
aad
ffree
jge
cmp
cmp
dec
retf
sti
xchg
xor
call
xchg
repnz
es
scas
jge
and
ret
pop
ins
not
cld
cld
or
lahf
jae
lods
test
std
mov
idiv
jp
pop
out
and
mov
cmp
pop
cld
lds
out
cmp
mul
xchg
jne
loopne
shr
push
xor
sahf
les
inc
imul
mov
mov
movs
cmps
jne
adc
push
div
and
repnz
(bad)
and
fmul
movs
(bad)
mov
movs
ret
jbe
cld
dec
cmc
xchg
sbb
sub
pop
sub
or
imul
sub
jp
xchg
cmp
jl
dec
stos
push
push
int
pusha
mov
enter
add
mov
imul
add
cmp
lahf
daa
push
ds
jp
ficomp
inc
mov
lods
mov
cs
fcmovb
push
and
add
ss
imul
sbb
cmc
sub
or
pop
fadd
adc
jmp
lds
cs
pop
xor
jg
popa
lea
les
dec
lock
(bad)
jecxz
pusha
or
outs
les
xchg
ror
in
dec
xchg
test
fdivr
pop
xor
repnz
and
fisubr
pop
pop
scas
push
outs
add
pop
push
mov
call
push
xchg
and
fcom
push
mov
leave
adc
and
cmp
or
mov
fild
add
int
mov
add
fsubp
ins
mov
test
clc
or
int
dec
add
cmp
cmp
ret
(bad)
xor
mov
iret
leave
idiv
mov
mov
mov
sbb
out
(bad)
xlat
pop
push
rcl
sar
fisubr
or
(bad)
repnz
pop
push
jmp
aaa
xchg
test
xchg
dec
daa
mov
and
adc
mov
cmp
mov
adc
xchg
xchg
and
cli
inc
push
xchg
shl
sbb
jmp
stos
icebp
fs
fstp
or
pop
es
out
ficom
(bad)
and
sti
fs
or
mov
xchg
stos
mov
mov
out
xchg
sbb
bnd
into
inc
pushf
adc
or
js
dec
ins
dec
add
or
sub
sar
xor
push
in
push
or
into
iret
nop
cwde
in
lds
das
stos
mov
mov
sbb
or
inc
(bad)
stc
or
fnstcw
add
inc
inc
mov
enter
push
sbb
push
imul
xchg
jl
stos
inc
xlat
push
fcmovbe
sbb
leave
enter
cmc
mov
jno
(bad)
sahf
ins
push
mov
mov
pusha
ror
dec
es
inc
(bad)
stc
sub
add
push
xchg
ror
adc
pushf
mov
not
call
push
add
or
push
mov
(bad)
int
stc
popf
les
mov
js
mov
mov
(bad)
mov
dec
sbb
jle
push
adc
pop
inc
xchg
push
jmp
loopne
xchg
popa
rcl
aad
jmp
popf
je
imul
mov
cmp
adc
mov
add
xor
cli
push
jmp
mov
cmps
mov
aad
xor
jp
mov
hlt
sbb
mov
pop
out
inc
ins
rol
outs
add
mov
int3
add
dec
nop
stc
mov
rol
inc
mov
in
mov
hlt
xchg
pusha
xlat
out
and
lds
push
das
rol
int3
clc
sbb
push
mov
adc
hlt
pop
loopne
imul
inc
mov
fst
cmp
add
test
loopne
push
cld
sbb
aaa
enter
or
sti
xchg
and
inc
(bad)
mov
jo
push
inc
in
inc
out
addr16
add
jns
xchg
ja
sub
test
and
call
out
push
dec
and
or
push
repz
(bad)
cmps
mov
sahf
inc
ror
or
mov
leave
test
loopne
inc
test
aaa
jmp
dec
cmp
fld
enter
nop
dec
jnp
ret
mov
xchg
push
mov
pop
push
mov
sbb
retf
loope
fisubr
div
xchg
adc
inc
jo
and
in
(bad)
fwait
(bad)
mov
or
loope
sub
cmp
mov
mov
in
mov
jae
add
mov
retf
lock
cmc
daa
js
xlat
lea
(bad)
jmp
add
xor
xchg
out
lds
sbb
or
in
arpl
call
in
inc
scas
and
clc
aaa
jg
mov
push
pop
aaa
mov
pusha
push
xor
add
mov
aas
daa
jo
imul
repnz
ins
iret
mov
add
pusha
inc
in
mov
jle
fxam
add
xchg
icebp
and
mov
das
retf
test
sub
jge
sbb
icebp
(bad)
jge
aam
xchg
xchg
mov
push
and
dec
cmp
mov
jnp
jecxz
push
imul
call
fdiv
pop
int
fwait
jecxz
push
adc
shl
mov
jmp
cmp
neg
(bad)
jb
scas
aam
out
xchg
outs
sbb
lahf
or
ror
pop
(bad)
cmps
fs
inc
call
mul
not
push
shr
mov
add
jg
pop
shl
out
(bad)
jmp
inc
jmp
out
pushf
push
aad
popf
adc
jo
sbb
xchg
push
das
jle
push
fmul
cld
leave
mov
pop
inc
add
sub
adc
or
cmp
out
cmp
cmp
pop
jge
hlt
or
shr
(bad)
pop
or
repnz
push
cmps
rol
inc
imul
mov
adc
sbb
aas
pop
cmp
mov
inc
inc
fcmovne
cmp
and
not
and
pop
adc
sbb
sub
dec
or
adc
lds
or
scas
fmulp
scas
cli
sbb
push
lahf
sbb
pushf
sti
cmc
jb
inc
xor
pop
sti
lock
jmp
fimul
cmp
frstor
div
jmp
mov
dec
cld
and
cdq
add
or
adc
out
xor
loop
mov
mov
sahf
ja
in
xchg
mov
pusha
inc
sbb
repnz
clc
push
sub
dec
push
lods
(bad)
pop
(bad)
adc
ret
aas
mov
sbb
and
mov
(bad)
sub
lds
and
jmp
lods
push
xor
mov
enter
and
cld
adc
push
or
mov
xchg
adc
pop
xor
pop
fidiv
and
jmp
cmp
cmp
dec
push
(bad)
test
mov
fcom
inc
mov
iret
addr16
cdq
scas
mov
div
retf
cmp
mov
mov
cli
lahf
adc
cmp
cdq
mov
inc
cmp
sub
movs
sbb
dec
adc
pop
sbb
push
aaa
dec
or
stc
cli
and
jmp
adc
jno
ins
and
sbb
into
and
aas
js
fistp
or
sti
cmp
arpl
sti
inc
xor
pop
mov
cmp
pop
ret
dec
movs
out
push
xchg
mov
mov
inc
jnp
jb
add
test
mov
or
fisub
loope
pop
dec
push
loop
or
imul
cmc
xchg
push
push
fimul
dec
jp
push
or
movs
xor
and
dec
cmps
xlat
or
in
fld
cmps
je
daa
mov
sar
imul
push
les
scas
aas
mov
add
mov
(bad)
push
test
cwde
xor
(bad)
fidivr
sti
sub
test
ins
cld
lahf
cmps
mov
aam
fimul
add
arpl
push
push
cmps
cs
movs
in
popw
mov
int3
outs
adc
sbb
mov
outs
xor
lods
or
pop
and
inc
add
and
mov
xor
jmp
cli
xchg
mov
loope
add
sub
data16
ficomp
stos
jle
cmp
adc
jno
mov
pop
xor
outs
and
add
mov
int
and
ja
sub
or
int
in
pop
mov
xchg
push
stc
add
sbb
imul
(bad)
shl
mov
stc
dec
imul
repnz
inc
(bad)
cld
ret
mov
cmp
enter
pop
pushf
xchg
adc
mov
sub
mov
movs
in
mov
out
jmp
nop
push
cmps
pop
mov
lock
sbb
xor
cwde
cmps
and
xchg
in
or
sbb
sbb
dec
(bad)
add
out
xor
or
shr
push
shl
mov
pop
sbb
or
adc
call
xor
mov
aaa
mov
test
out
out
out
mov
or
mov
inc
sub
shl
mov
in
rol
inc
add
push
pop
jbe
sbb
arpl
in
movs
test
mov
sub
mov
inc
or
jnp
(bad)
int
xchg
popf
jmp
push
mov
adc
jmp
dec
stc
dec
mov
scas
xor
cmc
les
test
adc
mov
adc
sub
cld
pop
push
adc
sbb
lahf
or
daa
mov
push
add
adc
sub
fsubr
xadd
rcl
cld
hlt
mov
mov
ins
mov
inc
sub
mov
test
inc
stos
stos
iret
pop
fsub
lahf
and
mov
xor
inc
push
(bad)
adc
inc
inc
fdiv
sbb
xchg
mov
inc
fstp
movs
fsubr
test
cmc
sub
pop
popf
inc
mov
dec
lods
test
xchg
das
jge
aam
cmp
test
aad
mov
call
pop
add
mov
push
sahf
dec
(bad)
call
jbe
cmps
test
jp
add
sahf
das
sub
xlat
imul
dec
dec
push
icebp
pop
push
mov
data16
test
jne
shl
(bad)
in
jns
sbb
mov
ja
into
mov
fs
int3
fwait
pop
cs
push
in
pop
sahf
add
stos
popf
(bad)
inc
les
cmps
inc
mov
das
and
lea
hlt
es
mov
inc
push
mov
and
sbb
cmp
mov
or
imul
ja
retf
mov
fist
sti
push
ret
xor
or
pop
out
pop
and
push
out
loop
cdq
(bad)
mov
dec
in
push
mov
mov
jg
inc
adc
ins
push
ins
pop
jb
out
mov
cmp
sahf
pop
dec
popa
pop
jp
pop
inc
sub
loop
loop
or
test
aas
cmp
pushf
call
xchg
mov
cld
cmp
sub
(bad)
out
cmp
fwait
aas
sub
stc
sub
or
(bad)
les
cmp
push
push
sbb
lds
in
test
cmp
jno
shl
push
jbe
sar
iret
adc
sub
mov
adc
fcmovne
sub
push
xchg
xchg
or
fisubr
repnz
or
xlat
jb
fwait
sub
mov
push
(bad)
push
vpcmpeqw
sub
daa
and
xchg
jne
aam
xchg
ret
(bad)
jmp
sbb
mov
fs
(bad)
sub
mov
xor
out
lock
(bad)
mov
xor
scas
or
mov
daa
mov
enter
lods
jns
mov
sbb
idiv
dec
(bad)
jnp
pop
shl
aaa
cmp
inc
dec
leave
mov
fwait
pop
mov
jne
mov
mov
adc
sub
jno
lods
retf
inc
pusha
inc
xchg
pop
out
jmp
pop
dec
xor
inc
pop
mov
push
mov
(bad)
xchg
mov
(bad)
(bad)
jne
push
dec
mov
dec
jbe
imul
sbb
das
pushf
mov
outs
fs
pop
vmovsd
daa
xor
fs
mov
lea
inc
mov
mov
imul
sub
lods
lock
jge
mov
mov
xor
and
test
leave
stos
jns
mov
push
fucom
das
out
jmp
jecxz
lock
retf
inc
sub
xor
dec
inc
cmp
mov
or
push
mov
mov
adc
jnp
inc
or
sub
rol
(bad)
aad
lods
enter
rcr
out
shl
mov
or
pop
jle
out
loope
and
retf
pop
lods
jg
aad
inc
inc
or
cs
mov
jle
push
mov
test
dec
sub
jecxz
mov
or
sbb
mov
sbb
rcl
test
cmps
mov
ds
mov
shr
inc
add
out
add
(bad)
je
add
push
test
lds
sbb
icebp
mov
outs
rdmsr
or
(bad)
rol
cld
dec
xor
sub
retf
pop
das
pushf
jmp
pushf
out
lods
daa
out
pop
xchg
adc
dec
sahf
es
sub
out
jne
ja
sbb
mov
jne
jb
out
sub
adc
dec
pop
ds
sti
das
and
es
jmp
leave
mov
add
movs
xor
inc
xor
movs
shr
push
fistp
int
sub
ret
(bad)
cmp
shl
cmps
hlt
pop
adc
lods
cmp
or
push
pop
out
fwait
jp
ror
mov
call
jle
push
sub
or
fnstsw
mov
push
dec
arpl
ret
inc
aad
and
aaa
dec
mov
dec
jno
mov
mov
bound
inc
sbb
int3
rcl
lahf
shl
mov
pop
mov
dec
xchg
mov
mov
test
repnz
push
enter
mov
xor
dec
cmp
in
mov
shl
mov
mov
pop
cmp
loop
xor
cmp
xor
test
push
pusha
clc
mov
cdq
hlt
imul
cmp
movs
out
pop
into
(bad)
bound
inc
jmp
inc
ds
shrd
add
and
jae
cmp
repz
into
and
leave
mov
inc
jns
xor
add
inc
out
scas
jns
xchg
in
mov
jmp
sahf
enter
jo
dec
or
das
pop
je
inc
aad
repz
dec
and
pop
fsub
out
pop
sub
add
push
add
int
dec
inc
cld
idiv
(bad)
mov
les
xchg
or
sti
iret
shr
lods
push
add
dec
sub
pop
push
repnz
fisttp
std
xchg
fs
fisttp
fistp
mov
adc
inc
inc
(bad)
mov
aam
test
mov
mov
imul
shl
mov
fistp
ret
xchg
icebp
push
mov
jle
mov
loope
add
jnp
mov
movs
repnz
fldcw
xchg
push
push
bound
data16
xchg
daa
daa
mov
inc
les
lahf
push
imul
out
dec
rcr
or
jl
xchg
jne
mov
adc
dec
jle
mov
push
(bad)
std
rol
mov
loopne
lea
das
adc
xor
sar
js
(bad)
and
push
stos
pushf
leave
imul
mov
xchg
(bad)
pop
leave
cmp
and
sar
mov
xor
sar
sub
repz
jno
(bad)
jmp
ss
xchg
push
aam
dec
jl
arpl
mov
fiadd
and
pop
stc
xchg
cmps
lods
hlt
cmp
dec
jo
fisubr
leave
add
or
leave
pop
popf
(bad)
pop
dec
(bad)
mov
nop
test
popa
cmps
and
cmp
and
jge
xchg
std
cmp
cmps
or
fisttp
jae
lock
sub
jecxz
jo
iret
fadd
add
mov
(bad)
rcl
mov
cmp
mov
(bad)
rcr
cmc
mov
jo
pop
das
ret
dec
xor
cwde
sbb
cmp
dec
or
fwait
xchg
sub
pop
ins
mov
and
dec
adc
mov
leave
addr16
cmp
mov
jp
loopne
and
mov
(bad)
les
fild
jp
in
outs
mov
pop
adc
and
jmp
adc
mov
or
repz
adc
repnz
jle
mov
cmp
mov
ds
dec
sar
repnz
pop
fimul
outs
inc
push
mov
movs
push
xor
push
jge
jbe
dec
jb
in
cmp
(bad)
arpl
outs
mov
cmps
(bad)
loopne
sub
mov
ds
in
jmp
push
jne
int3
mov
push
sub
cmp
lods
mov
jnp
lods
nop
dec
sub
push
mov
mov
in
pop
bound
xchg
mov
cli
or
hlt
ror
movs
mov
push
and
out
sbb
add
dec
sbb
mov
scas
aaa
js
repnz
(bad)
fist
push
mov
mov
pop
aam
add
push
dec
dec
or
jnp
loopne
and
jle
lds
push
mov
xlat
clc
mov
imul
ins
retf
sub
in
push
aaa
xchg
into
hlt
test
jmp
mov
xchg
ds
mov
jmp
mov
pop
cdq
jbe
rcr
scas
xor
push
hlt
xchg
xchg
sub
lods
loope
push
push
xchg
xor
mov
pop
out
dec
arpl
out
jno
jp
sbb
iret
jns
hlt
pop
and
fld
inc
mov
ret
push
cmp
scas
arpl
pop
inc
aas
jb
sbb
jge
mov
push
in
rol
and
addr16
cdq
std
fcom
cmp
jmp
dec
mov
pusha
mov
imul
xchg
or
addr16
pop
add
daa
jno
add
push
jno
cld
enter
add
add
cmp
mov
push
cmp
ds
jge
les
iret
push
bound
push
jae
punpckhdq
jge
fsubr
mov
popf
mov
pusha
mov
and
test
stc
adc
mov
lahf
es
scas
imul
adc
cmp
ss
fwait
das
push
adc
jno
push
inc
pop
add
repnz
fist
dec
fst
aas
in
push
jle
xchg
inc
mov
aas
sub
pop
mov
loopne
ret
hlt
(bad)
cdq
jg
push
jg
adc
(bad)
jo
ret
sbb
stos
jbe
test
xor
inc
xchg
scas
sbb
cmp
mov
fisttp
call
add
push
retfw
cmp
adc
inc
outs
cmp
jbe
jp
iret
dec
mov
arpl
push
test
ins
sub
repz
mov
mov
mov
stos
out
xor
jns
movs
imul
and
div
add
xor
cld
xchg
dec
push
lods
pop
shl
sti
xchg
add
jbe
fwait
lock
shr
xor
cmp
sub
jnp
xchg
and
push
sub
repnz
xor
ss
jno
aam
fwait
and
push
ss
pusha
call
push
aas
inc
movs
xlat
out
in
shr
hlt
mov
pusha
stos
fwait
aaa
retf
jo
out
sbb
mov
loop
stc
repz
ficom
retf
scas
leave
cmp
mov
into
adc
in
mov
push
sbb
xchg
aad
arpl
adc
(bad)
jns
mov
test
lea
call
ret
cmp
adc
ins
mov
mov
mov
movs
mov
xor
xor
adc
xchg
adc
inc
xchg
dec
mov
or
inc
(bad)
fisttp
data16
daa
aam
pop
dec
out
jnp
inc
lahf
fld
adc
pop
pushf
les
mov
test
mov
stc
repz
and
mov
mov
sbb
out
in
push
les
and
movs
movs
jnp
in
in
cmps
(bad)
and
inc
xchg
aaa
fidiv
jmp
or
data16
mov
and
or
xchg
and
push
push
mov
movs
inc
sbb
test
push
pushf
fcomp
(bad)
es
aaa
push
xlat
inc
mov
mov
jecxz
mov
outs
mov
dec
rol
cmp
lea
and
inc
mov
jae
loope
test
pop
aam
movs
cli
fldenv
rol
into
call
push
mov
rcr
aaa
jg
inc
stos
out
jns
ds
or
(bad)
popf
lock
stos
jp
sub
inc
jg
sbb
cli
(bad)
shr
call
add
and
or
xlat
xor
lods
(bad)
pop
or
pushf
int
ficomp
rol
in
in
sahf
sahf
xor
jb
loopne
mov
stc
jae
mov
dec
and
std
sti
xchg
dec
shl
rol
push
lds
data16
inc
out
dec
cmps
sub
fcmovbe
push
push
and
dec
jne
mov
dec
lahf
xlat
push
jbe
dec
mov
add
addr16
jmp
and
rol
outs
xchg
dec
mov
xchg
test
call
mov
pop
jo
sub
(bad)
out
adc
aam
or
imul
push
daa
mov
jbe
push
es
mov
pop
les
es
pop
mov
sbb
xchg
mov
mov
jo
push
push
or
ja
pusha
fidiv
sbb
scas
pop
inc
popf
and
aaa
pop
push
jl
or
xchg
gs
in
xor
cmp
sahf
das
xor
clc
clc
js
push
xor
adc
movs
add
push
dec
call
push
jo
std
(bad)
mov
xchg
imul
imul
push
fwait
aas
push
adc
cdq
mov
add
cli
fmulp
and
imul
xchg
and
jbe
retf
fwait
push
adc
inc
jp
sahf
js
cld
ss
mul
mov
pop
test
adc
lock
cwde
add
and
jp
push
hlt
add
jbe
cli
mov
or
jmp
ret
mov
pop
pop
loopne
xchg
lahf
ret
inc
jae
xchg
adc
jns
scas
int3
cld
adc
or
retf
mov
sub
es
mov
(bad)
imul
pop
sbb
inc
pop
icebp
inc
sbb
rol
pop
fbld
jae
push
cmps
gs
adc
sbb
into
and
add
dec
rcr
xchg
outs
jno
mov
adc
inc
inc
jmp
cmp
loop
ficomp
push
cli
icebp
inc
cmp
xor
sub
(bad)
out
adc
(bad)
and
fnstenv
dec
into
and
out
sub
dec
sbb
push
(bad)
sbb
mov
sahf
xchg
sbb
dec
dec
cmp
mov
popa
cmp
jmp
mov
fld
pop
adc
repz
inc
xchg
shr
outs
cwde
mov
jo
xchg
mov
jl
pop
dec
xchg
and
jne
push
sub
shl
and
ins
out
loope
into
xor
scas
add
adc
test
adc
adc
sbb
cmp
shl
std
push
dec
sub
cmp
push
xor
lea
lods
jecxz
cmp
cli
mov
xchg
jnp
enter
test
xchg
fdivr
stos
mov
xor
neg
(bad)
enter
dec
mov
(bad)
mov
add
or
sbb
fucomp
sub
(bad)
shl
adc
or
xchg
sub
sub
ret
jle
retf
push
and
push
inc
jp
shl
pop
retf
imul
mov
mov
je
pop
(bad)
ret
xchg
not
and
sub
mov
loop
popf
out
add
sub
dec
mov
jnp
hlt
in
inc
int3
mov
mov
pusha
pop
cmp
xor
fadd
jge
mov
jl
ja
jae
(bad)
aad
push
ins
xchg
mov
pop
bound
daa
sub
mov
fsubr
enter
add
icebp
js
pop
inc
mov
imul
sbb
fwait
pop
add
lea
shl
sbb
popa
lods
cmc
pop
cmp
and
mov
adc
ja
sub
fnsave
adc
imul
xchg
loope
adc
push
stos
ds
sbb
inc
sbb
xor
pop
push
aaa
ins
fld
cmc
stos
xchg
addr16
(bad)
retf
aam
xchg
loopne
popa
pop
mov
cmp
test
fwait
jmp
mov
cmp
rep
aas
mov
test
sbb
inc
stos
dec
push
xchg
ss
shl
xchg
(bad)
adc
mov
push
fisttp
loopne
xor
jb
cmp
jmp
add
inc
adc
pop
jl
mov
adc
dec
mov
stc
jmp
add
inc
dec
jo
mov
aam
daa
push
popa
in
mov
(bad)
enter
mov
add
clc
sub
jb
addr16
stos
mov
mov
loopne
push
lock
popa
jmp
cld
das
jo
pop
cld
add
jbe
mov
ja
sbb
test
test
es
lods
cdq
gs
push
inc
add
(bad)
inc
fcomi
dec
inc
cdq
and
sbb
xor
pop
adc
mov
mov
mov
xchg
shr
jecxz
stos
and
les
mov
adc
scas
aam
ret
aas
js
xchg
aam
sub
stos
and
sbb
stc
dec
mov
icebp
dec
shl
pop
lea
jne
ins
in
jns
fisttp
ror
jns
mov
dec
dec
jle
cmc
cmp
cwde
jl
shl
sbb
jne
movs
sbb
add
outs
fimul
lods
or
and
sub
call
retf
xchg
retf
aam
cmp
loope
mov
jns
and
push
or
cmps
push
jl
sbb
xor
int3
or
ret
retf
or
inc
in
mov
mov
pop
jl
repnz
repz
xchg
push
pop
adc
rcl
pop
or
jmp
mov
mov
sub
dec
enter
nop
adc
mov
dec
pop
mov
cmp
cmps
sbb
jge
mov
sbb
sar
push
into
jns
test
(bad)
aam
cmc
dec
(bad)
xchg
push
out
(bad)
mov
cmp
inc
inc
xchg
mov
xor
arpl
cmp
jecxz
inc
mov
scas
fsubr
fnsave
adc
xchg
push
cmp
neg
fadd
pop
push
pop
xchg
dec
xchg
ror
inc
pop
pop
pop
mov
xchg
outs
sub
add
push
mov
mov
mov
sub
jno
pop
dec
mov
fwait
xchg
jb
fsubr
call
ds
test
loop
lods
mov
mov
jae
or
hlt
sar
fwait
sbb
cld
nop
int
xor
arpl
cmp
sbb
shl
push
mov
movs
xchg
ffreep
shl
mov
das
int
inc
push
and
jge
lods
inc
mov
mov
(bad)
popa
dec
mov
mov
out
ja
sub
lods
ss
xlat
xchg
pusha
adc
retf
loop
not
pop
mov
mov
fs
and
pop
sub
push
nop
mov
push
xor
add
pop
push
pushf
cmp
hlt
push
aam
inc
mov
push
xor
test
shl
stc
es
or
sbb
lods
pusha
xor
lea
sar
lahf
pop
or
adc
pop
dec
sub
and
fimul
jno
imul
into
jbe
test
imul
or
lahf
mov
aad
leave
cmp
mov
idiv
jbe
icebp
and
into
mov
ret
imul
mov
rol
stos
pop
loopne
(bad)
(bad)
xchg
push
int
je
jo
mov
cli
rcr
pop
lea
mov
mov
add
loope
jmp
pop
test
pop
sahf
push
dec
mov
mov
or
mov
xor
inc
ror
clc
add
ret
gs
out
jl
jmp
add
mov
pop
(bad)
aam
dec
pop
mov
(bad)
fadd
pushf
cs
adc
popa
sub
xchg
mov
dec
mov
loop
jae
in
mov
out
clc
hlt
or
jae
in
clc
scas
inc
pop
mov
mov
cdq
mov
mov
sbb
outs
test
ficomp
mov
rcl
jno
jecxz
(bad)
test
cdq
xchg
jecxz
inc
std
hlt
jb
loop
ins
pop
adc
inc
jp
pushf
jg
retf
push
adc
test
(bad)
cmp
dec
sbb
cmp
aad
shl
vmovaps
mov
test
shl
sbb
aaa
(bad)
jae
push
jne
add
mov
(bad)
pop
xchg
popa
dec
sub
sub
xchg
out
dec
aas
inc
repz
dec
add
idiv
push
dec
jecxz
dec
push
add
dec
(bad)
pop
or
push
(bad)
pop
and
call
sub
fwait
aas
call
in
mov
push
adc
les
add
call
cmp
xlat
out
mov
scas
mov
mov
and
sub
fisttp
imul
es
cmp
xor
jno
xchg
dec
sbb
lahf
rcr
xor
fadd
test
and
or
dec
cmp
jecxz
(bad)
cmp
or
mov
stos
adc
mov
mov
mov
aam
mov
out
mov
jecxz
mov
sbb
lods
loope
in
pop
popa
out
scas
std
push
jmp
lock
nop
jo
fisubr
dec
cwde
aad
cmp
mul
cwde
push
iret
fstp
pop
iret
fisub
js
jge
imul
push
pop
mov
iret
mov
inc
dec
pop
mov
neg
inc
pop
lods
out
push
push
jno
out
shl
in
iret
lock
adc
ror
dec
pop
ins
mov
push
push
cmp
out
sub
data16
test
and
add
mov
push
push
imul
jb
pop
or
retf
xor
addr16
mov
xchg
loop
or
mov
in
or
push
mov
or
(bad)
push
stc
fwait
jecxz
pop
mov
xchg
int
jle
sub
dec
mov
or
jae
mov
pushf
scas
mov
sbb
inc
mov
mov
pop
je
inc
aaa
les
xor
movs
adc
neg
dec
mov
jb
jno
mov
jnp
pop
pop
adc
es
rol
sub
fsub
rcr
in
or
pop
jecxz
fst
rcl
xchg
ins
and
scas
mov
cmps
in
inc
mov
rol
cmps
adc
outs
pop
rcr
mov
mov
test
adc
pop
push
mov
mov
jo
scas
enter
enter
cmp
hlt
mov
pop
call
jmp
pop
retf
dec
sub
and
popf
adc
sbb
dec
mov
add
hlt
mov
(bad)
lock
sahf
pushf
icebp
or
jmp
mov
mov
dec
test
push
in
or
and
pop
daa
not
out
stos
out
popa
movs
daa
jne
stc
mov
ret
loop
cmc
out
pop
out
fadd
addr16
jnp
sbb
pop
cdq
bts
xchg
xchg
add
ins
xor
iret
add
mov
push
dec
iret
pushf
mov
pop
or
mov
test
mov
(bad)
mov
leave
push
inc
ror
mov
leavew
int3
lock
test
pushf
jmp
jle
xchg
push
js
add
xor
push
mov
mov
cmps
adc
push
loop
lea
jno
jle
pop
push
or
hlt
adc
mov
sbb
xchg
add
daa
xor
mov
test
mov
push
loopne
stos
pop
es
sbb
jb
dec
mov
mov
fs
gs
lahf
xchg
mov
(bad)
sbb
or
pop
sub
and
cs
jle
gs
pusha
dec
cld
retf
dec
pop
xor
sbb
push
push
into
cmp
cmp
jl
cmp
out
ss
or
add
xchg
repnz
dec
sub
dec
jnp
jns
add
pop
mov
mov
cwde
lods
xchg
gs
cdq
xor
fs
(bad)
out
lds
mov
mov
push
sbb
js
data16
popa
mov
mov
movhps
into
int3
cld
sbb
int3
mov
jbe
xchg
inc
rcr
ss
pop
pop
mov
sub
mov
and
cmps
and
(bad)
push
fucomi
ins
pop
mov
dec
(bad)
pusha
movs
(bad)
cwde
clc
sub
or
sub
push
loopne
cmp
in
arpl
arpl
xor
push
dec
hlt
inc
hlt
leave
push
push
cmps
adc
push
and
sahf
mov
fcom
and
cmp
jno
mov
xchg
not
mov
adc
out
scas
mov
add
push
shl
shl
and
pop
cdq
add
out
adc
in
enter
sub
push
mov
xchg
je
cld
pop
sub
lods
retf
or
push
xor
jmp
dec
dec
in
loope
loop
inc
(bad)
sahf
jge
mov
mov
or
jo
ds
sbb
out
std
scas
stc
xor
cld
arpl
popa
jns
movs
imul
pop
jne
push
mov
mov
and
add
movs
loop
js
mov
dec
mov
or
idiv
jge
scas
mov
into
mov
movs
jb
adc
aaa
mov
and
test
mov
mul
sbb
daa
jle
ficom
xchg
in
loope
sbb
mov
sub
shr
outs
mov
sar
fsub
stc
cmp
and
push
ret
mov
sti
pop
test
fucomi
jno
call
cld
inc
xor
add
push
movs
clc
dec
mov
mov
dec
sbb
jo
rcl
(bad)
pop
xor
jg
mov
cmc
pushf
or
add
in
cmc
test
sub
nop
add
call
inc
sub
je
iret
inc
mov
or
jmp
hlt
les
xor
test
dec
or
mov
fsubr
adc
int3
and
xor
jne
dec
(bad)
cmps
std
jge
fmul
rcl
stos
pop
ret
adc
ret
dec
(bad)
test
xlat
shl
push
mov
loopne
push
mov
cdq
pop
mov
mov
mov
mov
repnz
xchg
cdq
inc
lods
sbb
in
idiv
cmp
sub
int3
int
and
pop
mov
dec
or
hlt
in
ficomp
retf
jecxz
and
and
test
(bad)
sub
and
loopne
sub
jg
or
sbb
ins
imul
xchg
fs
(bad)
out
mov
test
mov
(bad)
pop
xchg
mov
mov
inc
fldcw
addr16
aas
outs
sub
mov
and
xor
jnp
out
or
cdq
or
call
loopne
into
lock
(bad)
mov
jnp
fwait
jbe
xchg
or
xor
push
jne
dec
clc
push
shr
dec
jmp
xchg
neg
into
and
lods
icebp
outs
lahf
cmp
push
call
dec
(bad)
imul
add
adc
xor
push
push
fdiv
sbb
in
rcl
jle
nop
mov
(bad)
fchs
outs
cmps
sbb
add
or
mov
and
pop
or
ret
pop
mov
lds
or
in
ds
mov
cs
push
loopne
lea
xchg
cli
sbb
sti
xor
jno
cdq
loopne
ficomp
ja
int3
pusha
addr16
xor
(bad)
out
pop
pop
(bad)
mov
dec
in
sbb
xor
dec
jbe
pop
mov
and
das
xchg
cs
jmp
add
jle
mov
bound
sub
mov
mov
pop
mov
push
arpl
popa
push
icebp
sbb
cld
cmp
mov
retf
std
ja
clc
fucomip
push
or
mov
adc
clc
push
scas
jp
fdiv
test
(bad)
dec
push
sbb
arpl
test
mov
call
arpl
mov
stc
iret
test
xchg
dec
ja
and
dec
push
sahf
sbb
aas
mov
cmps
movs
ffree
mov
pusha
mov
(bad)
rcl
ins
data16
mov
std
fisub
aam
(bad)
or
nop
ficom
mov
sbb
mov
pop
lods
les
xchg
stos
and
add
push
jno
jb
dec
cmp
mov
outs
leave
jo
repnz
sub
adc
pop
mov
jl
popf
dec
and
or
lds
nop
and
jae
fdivr
js
sbb
mov
aad
pop
push
sti
nop
aam
xchg
cmp
not
inc
frstor
rol
add
call
mov
pop
in
mul
int
mov
mov
jle
pop
loopne
sbb
cdq
(bad)
out
mov
addr16
rol
sbb
mov
loop
adc
mov
push
aaa
dec
or
sbb
pop
add
js
lock
fdivr
in
frstor
push
push
push
pop
cmc
mov
mov
sbb
pop
jno
leave
ins
jmp
mov
loope
imul
(bad)
xor
push
cdq
dec
mov
fist
ins
xchg
call
arpl
adc
loope
aaa
push
aam
jecxz
ja
out
sahf
sub
pop
jl
mov
mov
jne
mov
mov
xchg
dec
lods
inc
imul
jge
push
mov
lods
adc
jbe
outs
das
jne
sbb
push
pop
push
cmp
sub
or
test
cli
xlat
(bad)
int
jmp
inc
mov
jmp
scas
dec
xlat
jle
aaa
mov
sub
cmp
es
add
inc
rcl
inc
or
hlt
sub
ss
and
cmps
lea
pop
inc
jns
mov
xchg
ret
jmp
inc
repz
mov
test
add
ds
outs
nop
mov
pop
fdivr
push
sbb
mov
push
repnz
jle
mov
mov
xor
mov
inc
iret
jg
fyl2xp1
sub
add
mov
cld
lock
fstp
mov
movs
cwde
test
mov
cmp
xchg
movs
adc
es
jp
lea
xor
sahf
jp
xchg
add
sub
sti
cmps
or
push
mov
into
ror
loope
xchg
(bad)
outs
mov
jb
mov
test
adc
adc
fstp
xchg
std
call
fxch
inc
popf
clc
push
mov
arpl
in
push
xchg
(bad)
mov
and
xchg
mov
cs
scas
pop
std
dec
pop
jb
repz
fwait
xchg
outs
pop
movs
mov
leave
add
in
push
and
fimul
dec
pop
sbb
fwait
lods
cmp
sbb
add
(bad)
idiv
les
sub
adc
(bad)
icebp
or
in
push
cwde
loop
dec
and
mov
push
xchg
mov
std
imul
sbb
jae
add
stos
cli
out
scas
(bad)
fs
test
fcomp
je
nop
add
cli
dec
fild
jg
pop
add
or
sbb
aam
or
push
dec
push
neg
fdivr
inc
xchg
imul
mov
xor
mov
repnz
rcr
adc
and
push
adc
ins
fcom
mov
in
imul
daa
mov
mov
push
movs
add
add
xchg
sahf
mov
cmp
or
sahf
stc
mov
mov
jmp
mov
xor
inc
xchg
or
out
pop
mov
push
sbb
outs
sbb
in
lea
jle
inc
inc
jmp
jge
addr16
pop
rcl
inc
inc
out
sub
sti
push
dec
lds
push
inc
stos
nop
mov
loop
pop
das
das
call
movs
xchg
cmc
sub
jb
jl
fbstp
xor
mov
adc
or
scas
sub
in
mov
inc
test
add
dec
mov
xchg
test
iret
dec
jno
sub
sbb
cld
rol
push
mov
adc
adc
fsubr
std
push
sub
pop
sub
mov
jns
pop
add
adc
cmc
add
sub
cmp
sbb
dec
push
pop
paddsw
push
ret
mov
mov
xor
shr
leave
pushf
jecxz
pop
cli
mov
push
pusha
daa
xlat
push
test
inc
push
idiv
push
adc
repz
into
sbb
push
or
dec
jmp
xor
jb
jbe
inc
sub
push
cwde
pusha
je
les
fcom
std
fpatan
xchg
aaa
pop
adc
jnp
je
xchg
mov
pop
(bad)
ins
mov
(bad)
popa
cwde
jmp
xchg
lods
call
pop
into
fwait
jle
dec
fnstenv
aaa
int
xchg
mov
mov
inc
dec
inc
leave
xchg
in
xchg
mov
mov
push
ficom
inc
jne
mov
push
loop
or
cld
test
jp
cmp
adc
ja
pop
inc
inc
imul
mov
mov
das
sub
pusha
jl
cld
into
mov
inc
call
push
inc
adc
sub
pop
mov
stc
and
ja
je
mov
cmp
enter
and
fwait
scas
(bad)
into
aas
pop
jo
lods
and
mov
outs
inc
neg
leave
adc
sub
mov
and
cmovnp
int3
outs
jg
xor
lock
pop
icebp
cs
pop
adc
out
mov
sbb
das
(bad)
dec
test
mov
test
sub
pop
and
call
mov
fwait
aaa
stos
inc
sbb
das
or
shl
jp
push
aaa
xchg
in
mov
cld
dec
popa
mov
ds
push
imul
push
(bad)
jnp
in
jbe
pop
jnp
sub
out
pop
hlt
addr16
enter
jne
shl
clc
jo
sbb
lds
leave
pop
mov
aaa
cmp
pop
movs
cmp
mov
ret
fcmovnu
jp
js
movs
sbb
ret
popf
adc
scas
inc
mov
sub
xchg
push
test
imul
add
data16
jns
daa
jp
jecxz
test
icebp
xchg
xchg
adc
add
lea
int3
(bad)
sub
out
nop
rol
pop
push
cmp
mov
daa
dec
retf
inc
adc
in
call
sub
push
aad
pushf
mov
adc
or
test
retf
pop
out
cmp
cwde
fpatan
stos
test
and
add
bound
lock
or
pop
add
cmp
xchg
mov
jmp
cmp
sub
and
clc
inc
mov
leave
repnz
rol
sub
adc
stos
push
dec
ja
cmps
mov
nop
leave
sbb
cmc
fld
imul
fiadd
(bad)
jae
daa
loope
jmp
cmp
push
imul
(bad)
mov
sti
sub
cwde
sbb
adc
xor
arpl
jmp
test
or
mov
dec
fistp
sub
xchg
sbb
xchg
xchg
into
jmp
push
jnp
out
jp
push
call
shl
or
add
enter
mov
mov
push
cmp
sbb
cld
shl
aas
mov
jle
pop
test
js
div
mov
xchg
cs
xor
arpl
or
mov
cld
int3
outs
enter
clc
shl
push
sub
sbb
xor
push
iret
sbb
mov
xchg
sub
mov
movs
pop
push
mov
aam
test
arpl
inc
cwde
mov
lods
mov
mov
sbb
test
dec
mov
mov
ja
outs
cdq
jl
cmps
jnp
loopne
jecxz
cmp
mov
sti
jmp
clc
ins
adc
lahf
rol
mov
in
adc
ret
test
sbb
mov
fwait
jne
mov
sub
push
pop
xlat
sti
sbb
ins
jmp
adc
lahf
cmc
push
push
and
stos
push
leave
mov
test
(bad)
jmp
and
and
ret
scas
and
cmc
jae
fst
lea
xor
lods
jecxz
or
mov
lahf
mov
movs
pop
jl
xlat
add
jnp
adc
out
cdq
inc
shl
out
cmp
pop
and
pop
dec
push
mov
ror
rcr
es
sahf
jb
das
push
sub
ss
iret
jae
rep
jl
ret
pop
add
mov
scas
pop
xchg
xor
imul
jg
xchg
mov
lock
jnp
jo
adc
push
int
ss
or
out
inc
mov
arpl
cmc
push
es
test
adc
rol
mov
stos
in
mov
mov
sbb
(bad)
push
in
or
pop
jno
daa
ja
inc
mov
push
push
sub
mov
loope
ficom
inc
mov
mul
in
out
loopne
aas
add
and
fnstenv
mov
in
push
ins
mov
into
dec
cmp
sub
jae
xor
shl
and
mov
mov
(bad)
outs
fcom
rcr
and
in
mov
ins
stos
loopne
fmul
xchg
push
sti
push
jns
imul
(bad)
imul
fmul
mov
mov
aad
dec
xchg
add
sar
sub
lahf
hlt
cwde
mov
pop
or
lods
les
mov
pusha
push
popaw
mov
outs
dec
ja
xchg
dec
lods
loopne
mov
cmp
int3
mov
inc
jno
mov
mov
ret
mov
movs
cmp
mov
push
push
xor
jbe
subps
push
mov
stos
xchg
cli
daa
dec
int3
add
cs
xchg
fiadd
push
(bad)
iret
xor
adc
dec
rcl
push
dec
retf
fcom
out
out
cmp
xlat
test
shl
std
and
fwait
inc
into
outs
push
dec
jmp
(bad)
mov
and
(bad)
jmp
es
(bad)
in
dec
ror
inc
push
add
outs
mov
sahf
cdq
jno
in
push
cdq
sub
sub
mov
mov
push
fwait
xchg
out
xchg
mov
add
leave
jne
xor
(bad)
pop
pop
loopne
pop
(bad)
mov
stos
sbb
sub
lods
les
jae
inc
mov
cwde
xlat
std
movs
cdq
scas
inc
xor
sub
sub
mov
(bad)
cs
push
addr16
dec
cmp
je
mov
pop
xchg
mov
adc
loopne
and
gs
add
xchg
lea
sbb
clc
push
int
jbe
or
fcmovnb
loop
xchg
xchg
aad
mov
in
into
shl
mov
add
shl
jae
mov
cmps
mov
adc
ret
lahf
xchg
add
sbb
popf
mov
adc
aam
inc
imul
cli
scas
cwde
or
xlat
imul
fld
xchg
mov
and
dec
dec
or
nop
out
xchg
lahf
das
and
lds
pop
sbb
popa
xchg
pop
std
loop
pavgw
hlt
mov
adc
inc
inc
mov
cmps
pop
scas
sahf
jno
sub
xchg
into
(bad)
xchg
imul
je
fadd
adc
mov
sub
add
mov
cmp
cmp
popf
pop
call
pop
dec
jmp
jbe
pop
sbb
xor
loopne
add
push
loope
shl
clc
pop
cmp
mov
jo
ins
pop
iret
mov
rcl
lds
js
fsubrp
jecxz
in
sbb
mov
call
mov
aas
dec
inc
sbb
rol
push
adc
jo
dec
add
(bad)
lods
sbb
xlat
mov
pop
pop
out
xor
add
cld
or
mov
xchg
pushf
inc
adc
adc
or
call
mov
mov
enter
add
data16
mov
pop
push
dec
mov
std
retf
out
pop
inc
loope
xchg
das
emms
std
scas
jns
sub
jno
call
and
mov
mov
rcr
cmp
dec
fdiv
je
les
lods
inc
mov
xor
dec
les
xchg
inc
ja
adc
cmp
into
lods
inc
jge
dec
push
jno
pop
add
or
cmps
mov
bound
in
xor
cmc
inc
lods
add
jmp
jle
hlt
or
std
or
sbb
pop
mov
(bad)
pop
xchg
cmp
jno
mov
pop
xchg
add
clc
sbb
aas
loope
pop
push
leave
sub
and
sub
and
dec
lock
adc
retf
ds
enter
or
inc
xor
inc
shl
loopne
jae
and
dec
test
dec
loopne
shl
jae
ret
stc
xor
adc
adc
shr
sub
mov
sbb
hlt
(bad)
ret
out
sub
inc
cli
jnp
jle
sahf
out
call
in
cmp
arpl
xor
xchg
ja
pop
dec
inc
ja
xor
out
ja
pop
out
xchg
push
mov
pop
icebp
xchg
adc
mov
cmp
sbb
pop
xor
dec
in
xor
loope
repz
fist
push
pop
scas
into
mov
das
and
fadd
cmps
outs
in
outs
dec
test
sub
or
or
push
aad
pop
mov
mov
inc
data16
mov
and
jmp
retf
push
lods
fld
hlt
lahf
inc
stos
test
ficomp
(bad)
ins
dec
inc
dec
fmul
jb
retf
jecxz
retf
(bad)
cmps
or
sbb
nop
call
dec
or
mov
jp
data16
and
lods
lea
ss
or
ds
in
imul
repnz
and
std
sub
jg
imul
and
ds
out
cwde
gs
fcom
push
cdq
fucomi
push
adc
shl
mov
jge
cld
int
leave
mov
push
and
in
aam
adc
sahf
sti
jnp
xchg
pop
push
inc
(bad)
leave
mov
test
push
xchg
aad
jl
mov
clc
je
dec
adc
or
push
mov
outs
lea
dec
cmc
push
mov
mov
jb
mov
mov
(bad)
test
dec
xor
out
adc
pusha
sub
sbb
pusha
xlat
les
cdq
or
push
in
adc
fcomp
adc
xlat
mov
sbb
sbb
add
(bad)
add
sbb
jb
ret
push
adc
sub
cli
mov
cld
in
dec
add
enter
leave
shr
icebp
and
jb
mov
shl
jmp
shl
in
fdivr
mov
mov
in
aas
int
div
xchg
xchg
adc
test
or
lock
les
fcom
adc
pop
(bad)
and
or
fs
pop
jmp
dec
adc
(bad)
call
xor
or
mov
arpl
scas
(bad)
pop
movs
ins
call
stc
imul
mov
jns
and
mov
jb
ror
mov
and
xchg
push
jae
mov
lahf
int
inc
outs
jle
cmp
icebp
les
stos
pop
push
rcl
jno
adc
fstp
inc
outs
sbb
pop
je
and
or
dec
aam
sub
cmc
cdq
inc
mov
xor
xor
xor
rcl
cld
jno
add
sub
mov
sub
ins
fdivr
pop
movs
push
sub
add
cmp
in
xor
in
add
out
mov
in
mov
(bad)
mov
ja
pop
aaa
pop
scas
xor
repnz
ds
cs
scas
add
out
stc
hlt
in
shl
retf
into
adc
fsub
popf
out
retf
dec
in
stos
or
mov
stos
fstp
rol
dec
inc
in
clc
xchg
push
push
jnp
mov
sahf
pop
add
mov
aas
arpl
jae
jae
jmp
adc
jl
das
mov
inc
sar
mov
cwde
aas
cmc
jg
cld
jmp
rol
mov
stc
leave
inc
mov
jp
into
inc
test
popf
xchg
pop
in
add
cmp
orps
aad
pop
jge
fmul
je
(bad)
int3
retf
daa
xor
sbb
sbb
push
iret
mov
pop
mov
cli
outs
int
jge
cld
jb
push
xchg
sub
ja
add
xor
enter
ds
shr
jbe
out
adc
rcr
xchg
sbb
pop
mov
push
aas
out
inc
add
sub
cmp
lods
rol
sub
sub
(bad)
(bad)
sbb
push
mov
jb
push
ret
inc
outs
push
(bad)
aad
mov
cmp
cmps
cmp
mov
imul
hlt
jp
cmc
das
pop
add
call
ins
in
ja
mov
xchg
inc
dec
hlt
sub
sub
pop
sahf
push
cld
cdq
mov
bound
or
xor
and
pop
test
adc
add
sbb
mov
adc
(bad)
not
jp
mov
jmp
pushf
popa
ror
push
in
jb
popf
jae
and
xor
xchg
ret
dec
inc
ss
sbb
pop
pop
xor
xchg
sbb
in
cwde
mov
cmp
xchg
(bad)
and
mov
jno
(bad)
xlat
mov
ja
add
xor
adc
push
cmps
idiv
jl
adc
fsubr
pop
jmp
sub
xchg
mov
fs
shl
fisub
jmp
arpl
dec
scas
outs
xchg
fldcw
sbb
jle
aad
mov
push
mov
mov
jge
cmp
or
pop
popf
pop
add
cmp
push
int3
(bad)
jb
stos
out
in
and
popf
add
or
pop
lock
call
dec
xchg
pop
fisttp
gs
hlt
(bad)
sub
xor
mov
push
(bad)
xor
dec
jb
and
add
pushf
cmp
leave
xor
hlt
mov
popf
ins
enter
mov
fsubr
cmp
jae
cli
xor
dec
fld
xchg
nop
inc
std
mov
pop
stos
popf
addr16
sub
outs
push
icebp
in
xchg
jo
pusha
jmp
aaa
repnz
(bad)
push
xor
test
xchg
mov
sub
shl
cdq
xchg
(bad)
sub
inc
clc
scas
mov
ss
fmul
sahf
clc
cmp
or
add
inc
xchg
xchg
and
call
mov
adc
adc
pop
aas
add
lods
js
iret
mov
dec
cwde
cmp
div
jge
inc
dec
into
(bad)
popa
xchg
retf
inc
repz
test
pushf
lahf
test
repz
cli
fstp
in
(bad)
mov
cmp
push
jns
stos
(bad)
mov
xchg
call
popa
xchg
ret
mov
mov
dec
pop
int3
dec
mov
adc
test
add
jmp
mov
jno
adc
iret
popf
popf
enter
mov
sub
popa
lods
add
cmp
and
pop
mov
ss
pop
repnz
adc
xchg
adc
out
mov
xchg
mov
cli
add
and
data16
fdivr
lods
jecxz
inc
gs
push
add
fiadd
daa
jle
dec
pop
mov
test
fsub
and
adc
mov
aam
inc
cmp
or
bound
adc
cmp
or
push
mov
and
sbb
scas
shr
fsub
mov
push
fisubr
je
out
dec
push
xchg
add
bound
mov
cmp
jmp
ud2
mov
mov
jle
movs
mov
xor
mov
adc
shl
mov
icebp
loopne
jecxz
pop
jge
data16
cmp
std
mov
out
dec
popa
cli
iret
scas
push
nop
stc
in
inc
mov
(bad)
xor
fisub
shr
imul
mov
dec
(bad)
inc
or
rcl
xchg
jmp
cld
(bad)
mov
xchg
cli
nop
ret
xor
xor
jle
ins
cmc
les
mov
out
shr
mov
push
fisttp
mov
(bad)
xchg
icebp
jmp
ja
pop
xor
icebp
xor
(bad)
cs
sub
ins
pop
sub
cld
fcmovne
leave
imul
icebp
cli
lahf
lods
lea
fadd
fs
or
ret
test
jnp
add
ins
push
and
popa
into
mov
jmp
push
fst
sub
xchg
cdq
lock
cmp
retf
xchg
pusha
and
pop
mov
shl
add
cmc
jmp
push
leave
mov
sub
fidiv
adc
push
call
ss
xchg
out
adc
push
mov
test
pushf
cmps
cli
sub
imul
fidivr
stc
push
fld
daa
shr
add
push
inc
cmp
mov
ficom
in
pop
outs
pop
(bad)
mov
fimul
test
dec
fisub
jg
adc
adc
push
pop
(bad)
and
mov
push
(bad)
fld
mov
ja
enter
or
or
cs
jge
lea
add
jl
retf
push
ret
xor
test
sahf
and
repz
mov
ds
clc
xor
push
xchg
(bad)
xchg
popa
cmp
fimul
cmps
add
cmps
sbb
sub
cmp
scas
and
test
jae
mov
and
je
dec
mov
imul
movs
mov
mov
setl
in
push
outs
xchg
adc
inc
das
in
inc
ret
push
xor
jp
xor
xor
mov
ins
sbb
ja
push
mov
adc
and
in
(bad)
and
mov
dec
dec
xor
stc
inc
es
mov
je
fst
inc
jnp
(bad)
adc
shr
bound
mov
or
ret
dec
sub
sbb
gs
mov
(bad)
gs
adc
add
stos
mov
mov
pushf
or
and
push
jns
pop
fild
push
popa
div
mov
mov
or
outs
(bad)
pushf
push
jne
add
shr
xor
pop
jle
into
maskmovq
bound
nop
in
pop
push
push
ficom
xchg
mov
or
test
mov
adc
test
or
movs
sub
out
adc
(bad)
push
xchg
ret
xor
mov
jo
adc
sub
jmp
(bad)
pop
ins
inc
push
neg
xor
sti
cdq
outs
ds
icebp
dec
mov
fwait
jmp
add
adc
cmp
lock
stos
mov
or
call
xchg
xchg
test
mov
retf
loop
test
ss
das
xor
cmp
hlt
pop
call
popf
(bad)
iret
cmps
mov
mov
jae
xchg
fisubr
push
push
mov
ins
dec
cmp
jp
hlt
add
push
cdq
inc
xor
daa
xchg
xchg
xor
push
mov
jl
sahf
push
shr
in
adc
and
cmp
jne
pop
or
lea
cmp
mov
add
push
cmp
cmp
sub
jno
hlt
inc
nop
xchg
int
adc
sti
pop
xchg
sub
sub
loop
neg
(bad)
clc
arpl
aam
(bad)
sbb
mov
cmps
cmp
aaa
and
mov
loope
xor
mov
arpl
loopne
dec
aas
call
and
scas
sbb
xor
mov
jmp
lods
xor
jnp
xchg
retf
cdq
leave
inc
bound
(bad)
out
leave
popf
scas
daa
mov
retf
jb
popa
xchg
adc
dec
sub
fnsave
xchg
push
sbb
addr16
dec
scas
sti
or
mov
pop
fild
adc
push
ret
pop
add
sbb
call
hlt
popa
ret
xchg
dec
xchg
loope
xor
lea
or
ficom
xor
xor
mov
ret
aas
popf
imul
xchg
or
cmps
jecxz
aam
fs
in
int3
pop
mov
repz
push
adc
push
or
pop
std
pop
jns
fdiv
sahf
dec
or
sbb
mov
outs
out
cmovle
fsubr
dec
sbb
xchg
fstp
imul
mov
jne
add
hlt
mov
xchg
mov
add
xchg
push
push
iret
xchg
and
pop
mov
int
push
in
retf
scas
mov
jb
addr16
xchg
test
scas
out
fsub
cli
loop
or
xor
cmc
sub
sub
mov
cld
fstp
movs
mov
std
and
ins
rcr
outs
add
sub
mov
cmp
pop
or
ja
mov
stos
cmp
rcl
cmp
adc
daa
cmp
add
mov
xor
fstp
daa
inc
(bad)
mov
stos
ja
shl
pop
push
lock
call
push
fisub
push
call
out
or
mov
mov
lods
std
cs
mov
(bad)
push
push
cmp
inc
(bad)
push
pop
retf
les
test
dec
mov
popf
xor
xchg
jmp
cwde
out
imul
push
dec
sub
fxch
push
mov
mov
sub
sahf
mov
pusha
lahf
mov
cmp
xor
pop
arpl
lahf
out
imul
sbb
enter
jae
xchg
mov
test
or
mov
loopne
sahf
rcr
sbb
inc
jmp
out
sar
and
cmps
cmp
lahf
push
aaa
inc
jno
xchg
inc
repnz
aas
and
and
jle
ret
sbb
dec
cmp
xchg
jle
inc
icebp
(bad)
rcr
int3
jno
ss
xor
mov
push
pop
sub
mov
dec
jp
loope
or
mov
push
mov
inc
mov
(bad)
fld
test
xor
(bad)
aam
jg
and
pop
xchg
shl
in
in
cmps
dec
mov
hlt
nop
xor
mov
lods
retf
repz
jl
push
fmul
ins
js
aam
and
jbe
in
sbb
sbb
push
mov
test
out
or
and
cli
cmp
jle
fcomp
jmp
ja
pushf
adc
ret
dec
fcomi
lods
dec
(bad)
jmp
mov
cwde
outs
cmp
fcomp
adc
(bad)
jno
push
shl
repnz
pop
data16
in
pusha
mov
or
gs
repnz
in
movs
push
jge
xchg
jbe
jg
add
rcl
aad
mov
loop
int
daa
fst
scas
mov
popf
mov
and
inc
loopne
iret
pop
dec
ror
not
jle
inc
xor
test
push
clc
sub
cmc
adc
mov
cld
cmps
adc
xchg
jg
pop
add
fs
lahf
xchg
push
fldcw
in
push
nop
ja
pop
push
mov
inc
cmp
mov
xchg
cmp
or
push
sahf
or
xchg
ins
dec
cmc
idiv
scas
aam
iret
add
(bad)
and
mov
adc
shl
add
outs
add
mov
std
and
stos
cmp
pop
lahf
test
(bad)
xlat
pop
scas
push
cdq
adc
add
fidiv
inc
xor
mov
scas
cli
and
sbb
jmp
cli
aad
repnz
(bad)
mov
ror
pop
inc
mov
pushf
xchg
sbb
aaa
in
call
enter
scas
(bad)
dec
stos
gs
fsubr
not
aaa
gs
mov
mov
imul
cmp
push
inc
adc
pop
bnd
aas
jo
jns
inc
aam
or
mov
clc
inc
sbb
sbb
inc
cmp
int3
xchg
xlat
or
mov
nop
out
mov
in
mov
cli
call
mov
jecxz
call
mov
das
mov
push
bound
shl
stc
or
fwait
xchg
fidivr
aas
mov
ja
jg
xchg
sub
fist
shl
jmp
mov
ins
push
sub
mov
mov
out
fstp
cmp
adc
dec
xor
push
pop
mul
mov
xchg
rol
inc
test
jp
jl
push
xor
mov
aaa
cmp
addr16
fld
xor
sahf
pop
fcomp
js
loop
or
fwait
add
imul
cs
add
mov
sbb
into
jg
cmps
shr
fdivr
iret
fcmovnb
mov
rcl
test
xor
shl
pop
mov
pop
lods
lahf
push
jne
daa
jge
(bad)
in
call
leave
or
and
scas
sub
enter
(bad)
xlat
xchg
or
xor
fnstsw
sbb
sub
xchg
icebp
mov
popf
lock
(bad)
pop
(bad)
sbb
not
push
sub
arpl
retf
int
ins
inc
inc
in
scas
leave
sbb
adc
(bad)
jnp
test
jmp
pop
dec
adc
gs
aad
ret
or
fld
xchg
icebp
fidiv
(bad)
jnp
sbb
xor
xchg
mov
jbe
push
jnp
fcmovnu
scas
idiv
mov
add
fcomp
sbb
icebp
or
repnz
mov
jae
dec
dec
daa
out
in
and
pop
repnz
addr16
sbb
popa
or
mov
dec
jmp
or
test
hlt
mov
jle
xor
scas
and
jo
imul
call
sub
mov
dec
clc
jecxz
mov
sbb
sbb
xchg
inc
inc
jnp
outs
out
inc
sbb
cmp
test
inc
sub
nop
lock
cmp
cmp
adc
mov
je
shr
addr16
pop
push
push
rol
cwde
leave
xor
into
mov
cli
mov
inc
ror
cmp
arpl
and
cdq
inc
nop
test
jb
mov
test
or
in
clc
std
push
aad
mov
adc
out
dec
xor
xor
fidivr
test
adc
sbb
pop
(bad)
mov
push
and
call
arpl
ret
xor
mov
adc
or
jb
gs
push
es
mov
enter
mov
pop
loopne
push
add
pop
pop
mov
data16
mov
sbb
movs
jbe
jne
clc
sbb
adc
fidiv
movs
mov
push
inc
jno
push
les
adc
lods
mov
mov
les
fucomp
inc
scas
aam
add
repnz
adc
in
add
pop
add
sbb
sbb
inc
inc
jmp
push
push
mov
jae
cmp
xor
scas
and
xor
lods
lock
ret
ins
imul
(bad)
imul
ja
ins
ins
xor
(bad)
popw
adc
(bad)
mul
cld
das
jo
pop
dec
in
leave
cmp
call
mov
push
push
fldcw
icebp
and
aaa
out
pop
mov
mov
cmc
xchg
cmp
xchg
push
mov
mov
inc
pushf
fbld
jg
cmp
mov
out
les
or
or
jmp
sbb
test
in
push
mov
adc
fs
movs
fsubr
aam
cmp
popa
inc
fadd
adc
cmp
call
mov
push
xchg
xchg
xchg
mov
das
cld
adc
fiadd
jns
push
fld
lods
into
pop
test
and
adc
outs
sbb
out
in
xor
sub
test
sbb
mov
push
fmul
popf
adc
pop
or
daa
inc
and
in
push
das
sub
imul
cmps
mov
inc
test
dec
fsubr
or
rcl
add
(bad)
aaa
pop
mov
scas
sub
pop
mov
mov
add
fidivr
int
arpl
repnz
aam
sub
adc
add
push
or
push
mov
js
fst
(bad)
shl
sbb
outs
mov
hlt
mov
inc
sbb
popa
rol
inc
inc
sub
repnz
mov
mov
jo
mov
xchg
aas
cmp
ds
xchg
pushf
jl
mov
aaa
dec
out
xchg
sub
int
or
and
clc
mov
fwait
mov
fs
jg
xor
ss
cwde
adc
(bad)
jb
jo
sti
out
xchg
push
and
in
sub
cwde
push
mov
dec
or
pop
sti
push
adc
nop
retf
fld
jg
adc
jne
cmp
mov
jmp
fucomip
ror
sbb
mov
xor
mov
sti
jmp
shl
stc
dec
sbb
sbb
mov
lahf
ret
add
mov
push
ret
inc
sbb
mov
pop
adc
je
cmps
sbb
fist
lock
inc
fprem
fcmovu
cmps
cmp
push
pop
sbb
or
push
cwde
mov
inc
dec
es
pop
loope
movs
repnz
or
xchg
movq
xor
add
movs
imul
fnstenv
pop
lods
(bad)
lds
push
add
sti
aas
mov
out
outs
shl
push
pop
mov
loope
out
repnz
mov
stc
call
ja
idiv
movs
ret
bound
int3
push
jns
cmp
out
int3
jg
retf
ficom
popa
cmc
ficomp
xchg
xchg
arpl
mov
jmp
push
push
inc
or
rcl
xor
xchg
(bad)
xor
xor
adc
iret
mov
stos
cmp
cmps
frstor
sti
bound
mov
pop
push
test
xchg
(bad)
cmp
sub
pushf
xchg
mov
jge
mov
or
adc
das
mov
jl
int
and
dec
shr
mov
je
pop
and
movs
mov
clc
test
xchg
inc
cmc
adc
push
xor
dec
fxch
xor
pop
mov
cmp
dec
test
scas
cmp
out
mov
jp
mov
cwde
or
std
pusha
sbb
pop
push
icebp
dec
xchg
mov
lods
pop
or
data16
imul
mov
test
push
sub
xchg
and
fwait
out
jecxz
das
inc
(bad)
ror
adc
add
imul
repz
pop
jb
inc
jl
pop
jecxz
out
mov
pop
loope
mov
cmp
cli
cmc
lds
push
lods
adc
add
lds
and
in
jecxz
ret
stc
sbb
popf
mov
mov
mov
or
les
ins
adc
aam
cmp
sahf
in
sbb
inc
out
adc
pop
loopne
aam
add
inc
push
pop
push
inc
(bad)
out
pusha
test
xchg
lods
mov
aam
dec
xchg
dec
pop
aam
test
test
cmps
sub
lahf
cld
jg
mov
jae
scas
add
aam
repnz
pmaxub
out
sbb
cmp
iret
hlt
loop
mov
inc
sbb
cld
adc
xchg
inc
add
pop
cld
bound
dec
xchg
retf
cmp
mov
lock
pop
push
loop
sub
jae
dec
ret
dec
push
loopne
inc
lods
ja
add
sbb
pop
mov
cmp
adc
(bad)
push
mov
sbb
inc
(bad)
(bad)
mov
add
xchg
imul
sbb
xchg
xchg
add
jmp
data16
je
js
ins
cmps
adc
pop
pop
inc
xchg
ja
or
mov
int
push
xor
pop
pushf
jno
ins
jb
repz
ss
mov
sbb
out
lds
into
jnp
rcl
mov
das
js
adc
or
mov
adc
mov
xchg
mov
(bad)
or
push
lds
and
ins
pop
repz
ja
int3
add
mov
or
mov
mov
rcl
and
test
ins
xor
xor
cdq
mov
mov
inc
pop
movs
adc
dec
dec
outs
mov
ds
push
or
in
lds
cmp
repz
leave
lahf
cmp
not
sub
shr
mov
(bad)
mov
dec
jb
dec
mov
sub
pop
and
in
(bad)
sbb
xlat
cld
xchg
ret
cli
test
fst
bound
jno
mov
sti
dec
push
pushf
adc
inc
loop
add
jbe
leave
sar
mov
or
sar
fild
xchg
add
cmc
cmps
jge
mov
rcl
scas
psubw
pop
fisttp
pop
je
sbb
ins
and
mov
loop
pushf
pop
push
inc
std
mov
mov
or
in
sahf
sbb
mov
add
adc
movs
push
cmovbe
jb
jecxz
out
not
out
push
push
clc
jnp
arpl
std
xchg
cmp
jg
dec
call
std
add
mov
inc
sub
jbe
test
mov
xchg
xchg
cmp
adc
je
jmp
inc
vmovupd
mov
inc
dec
and
push
fwait
stos
jmp
cmp
adc
call
aaa
scas
adc
dec
mov
nop
imul
jb
mov
adc
sub
dec
mov
push
clc
push
dec
shr
sbb
cmp
mov
mov
std
push
sub
dec
stc
in
out
mov
fstp
out
xor
cli
shr
dec
lods
and
or
clc
test
xchg
pop
out
inc
test
and
(bad)
dec
sub
ins
pop
add
aam
pop
jb
add
xchg
jbe
cld
pop
dec
mov
aad
jns
stc
dec
push
inc
push
dec
fcom
loop
cmp
pusha
push
dec
cmp
ds
inc
in
(bad)
and
mov
push
jle
pop
ds
jl
enter
out
xor
sub
das
popa
mov
enter
scas
(bad)
pop
ret
dec
inc
fisub
and
xor
sbb
mov
(bad)
xor
cmp
adc
out
aas
mov
dec
xchg
loop
std
cmps
mov
popa
xchg
or
shl
fisttp
inc
loope
or
jg
loope
ja
add
shl
cmp
es
addr16
out
dec
push
add
jbe
daa
xor
mov
cmc
push
sbb
test
sbb
mov
(bad)
dec
sti
mov
icebp
cmp
sub
cmc
adc
inc
sbb
(bad)
mov
call
mov
into
jbe
mov
mov
jge
lock
out
leave
rcr
out
jl
xor
in
jp
and
hlt
hlt
adc
lds
or
es
sub
sbb
xchg
xchg
mov
cmp
pop
lock
jl
jnp
(bad)
ins
enter
test
imul
adc
lock
sbb
push
push
pop
and
inc
mov
pop
add
sub
arpl
add
enter
cwde
icebp
ins
cwde
scas
or
inc
ds
aam
mov
inc
leave
(bad)
frstor
push
nop
fcom
dec
inc
or
stc
add
movs
aam
sub
sbb
sbb
pop
cli
pop
xchg
sahf
movs
push
xor
iret
fwait
sar
fcomp
push
mov
fmul
mov
je
sbb
movs
add
out
(bad)
fldenv
jnp
pusha
cmps
int3
imul
popa
stc
imul
cmp
mov
sub
jb
jecxz
pop
cld
and
push
adc
mov
test
xchg
push
stc
jmp
lea
xchg
dec
fsub
push
les
bswap
dec
mov
outs
shl
and
dec
jmp
lods
mov
scas
jne
dec
xlat
fisubr
push
adc
inc
cs
idiv
scas
xor
dec
mov
or
cmps
in
pop
je
and
adc
pop
leave
adc
mov
test
call
(bad)
rol
add
xor
out
xchg
stos
adc
pmullw
xchg
mov
sub
cmp
xor
inc
cdq
fdivr
arpl
mov
dec
mov
push
mov
dec
mov
push
push
mov
sbb
pop
xchg
adc
hlt
push
iret
lods
retf
and
and
addr16
mov
xor
sahf
loope
and
es
mov
sub
dec
and
cmp
call
push
ror
push
mov
loopne
shr
shl
sub
aas
push
sub
rol
adc
lods
push
scas
dec
adc
xchg
sub
lea
ja
jnp
popf
cmp
rol
xor
mov
bnd
add
js
(bad)
xchg
jnp
int
pop
sub
pop
sbb
dec
fwait
aam
xor
out
cmp
xor
mov
mov
jns
sub
push
fisub
or
mov
movs
and
aam
inc
pop
(bad)
data16
imul
popa
call
(bad)
arpl
sbb
jne
mov
aam
push
jnp
mov
shl
outs
xchg
jns
test
sbb
jno
dec
lahf
in
(bad)
mov
mov
or
aaa
jbe
fisub
in
cmp
bsr
pop
mov
inc
jne
cmc
stc
fs
test
and
cdq
ins
divps
movs
adc
aad
cld
(bad)
dec
gs
rep
add
fist
mov
mov
fldenv
outs
mov
sub
aas
sub
ret
push
sbb
and
inc
lods
(bad)
in
fstp
push
mov
sub
loopne
and
and
ins
test
lea
push
call
rcl
mov
icebp
xor
(bad)
mov
das
stos
sbb
dec
or
ficom
sbb
xor
cmp
pusha
fst
nop
xchg
jg
jo
jp
pop
pop
push
adc
sbb
inc
cmp
arpl
ins
sub
cld
cmp
push
loopne
into
pop
mov
aad
frstpm(287
push
pusha
mov
test
mov
in
daa
and
mov
dec
iret
bound
imul
ja
cdq
ds
std
xchg
lahf
lock
iret
xchg
imul
xchg
and
lods
aad
jb
push
neg
ds
push
and
jnp
pop
sti
stc
enter
xor
xor
inc
in
dec
dec
daa
je
jo
dec
pushf
xor
xor
mov
pop
cmp
retf
cwde
and
loopne
inc
jge
stos
inc
arpl
and
aam
sahf
mov
jmp
mov
mov
retf
sub
and
mov
repz
adc
mov
xor
scas
cmp
les
pop
scas
icebp
std
cmp
mov
sqrtps
cmp
and
aas
jo
push
test
loop
pop
jmp
mov
scas
dec
jl
rcr
aaa
push
int
les
enter
xchg
loop
arpl
xchg
jno
shr
add
loope
inc
jbe
xchg
push
cli
mov
rcr
ret
pop
push
out
mov
jae
xor
pop
xor
imul
in
xlat
movs
cli
mov
rcl
add
and
mov
jbe
ss
(bad)
pop
stos
or
cmp
add
jae
add
push
popf
xchg
xor
xor
or
mul
daa
cmps
retf
movs
(bad)
add
scas
mov
repnz
mov
xchg
xor
pop
cdq
shl
dec
(bad)
(bad)
dec
pop
cli
mov
cdq
fsub
stos
imul
push
push
addr16
(bad)
in
push
in
nop
int
or
or
std
pop
pusha
jno
and
fdivr
push
adc
cli
les
gs
mov
(bad)
jge
fnstenv
jge
add
mov
mov
sub
ins
dec
bound
dec
mov
jp
shr
sub
(bad)
dec
(bad)
mov
adc
sbb
push
mov
data16
addr16
das
pop
loopne
bound
inc
xor
(bad)
mov
xchg
cdq
rol
cwde
imul
mov
sbb
or
add
mov
fadd
outs
jbe
scas
push
ret
inc
clc
adc
inc
jbe
gs
push
inc
add
jb
sar
mov
es
push
(bad)
push
and
xchg
addr16
fmul
ins
pop
ss
mov
loope
dec
jle
dec
cs
imul
pop
out
mov
dec
(bad)
pusha
out
inc
into
enter
mov
and
gs
fcomp
in
xor
sahf
or
xchg
xchg
repz
loope
in
(bad)
pop
inc
pop
setg
ds
mov
jmp
popa
push
(bad)
mov
mov
xchg
icebp
(bad)
lods
jp
xor
rcr
leave
repz
js
lahf
mov
sub
lods
jecxz
pop
mov
retf
or
jl
gs
(bad)
mov
adc
sar
outs
nop
pop
add
into
mov
xchg
mov
mov
cmps
dec
dec
pop
pop
cmp
rcl
mov
mov
cmp
lds
adc
bnd
out
data16
push
sub
pop
into
xchg
out
mov
xlat
data16
test
outs
mov
je
xchg
sti
push
cmps
aam
adc
xchg
cmp
pop
(bad)
idiv
into
retf
inc
jb
xchg
push
pop
fwait
xchg
add
aas
out
mov
enter
call
xadd
mov
mov
add
into
cmc
push
(bad)
cmp
xchg
stos
cmp
pop
retf
outs
ja
scas
mov
xor
sub
ret
outs
jl
loop
(bad)
push
dec
jl
movd
in
adc
adc
pop
adc
push
inc
fcom
nop
push
adc
int3
js
or
pusha
in
xor
mov
std
pop
shr
lods
adc
mov
sub
ja
inc
rcl
sbb
sbb
mov
sub
inc
loop
mov
lahf
push
lahf
ins
je
movs
mul
sub
sbb
pop
pop
(bad)
movs
adc
in
inc
mov
test
push
cmp
inc
lods
mov
je
frstor
rcl
mov
mov
into
aam
sbb
ja
or
(bad)
popa
in
jno
(bad)
sbb
sub
inc
jl
test
mov
mov
pop
les
adc
ja
stc
lahf
and
pop
mov
cmc
sbb
(bad)
loope
sub
rol
movs
or
imul
pop
popa
outs
sub
and
mov
mov
mov
pop
push
and
adc
adc
ret
cmp
jmp
test
jmp
push
xchg
in
and
push
and
jnp
add
and
xchg
loope
cli
pushf
dec
pop
inc
fcmovnbe
xor
idiv
pop
bound
mov
inc
ret
cmp
cmps
(bad)
aam
lods
jl
mov
cmp
xchg
mov
fwait
(bad)
retf
stos
jb
add
repz
cmp
ffreep
movq
mov
cmps
fdivrp
fiadd
mov
outs
and
rcl
fisttp
fmul
cmp
out
and
retf
inc
sub
dec
nop
retf
or
outs
lea
xor
test
in
xor
cli
fldcw
lods
or
mov
fimul
stos
dec
aas
or
jo
add
sbb
test
test
retf
dec
inc
lods
loopne
movs
mov
sub
pop
pop
popa
loope
pusha
loop
xlat
and
in
jle
fs
test
(bad)
add
fadd
movs
fcom
les
mov
ins
adc
aas
enter
sti
retf
or
retf
sbb
mov
sub
or
sbb
fbld
cmp
push
jmp
jecxz
mov
mov
outs
xor
jge
xlat
jb
inc
das
mov
sub
push
push
and
(bad)
ror
add
xchg
or
push
(bad)
mov
cmc
mov
xor
cli
adc
adc
fdivr
mov
mov
xor
icebp
mov
adc
mov
out
fiadd
add
pop
call
sbb
cmp
icebp
lods
and
(bad)
in
sub
into
loope
sbb
pop
cmc
jnp
fdiv
(bad)
cmps
mov
sbb
mov
int
leave
pop
arpl
enter
cmp
(bad)
rsm
fimul
ja
xchg
in
push
rcr
int
push
pushf
jae
mov
scas
ja
mov
dec
sub
push
ror
popf
imul
movd
rol
pop
shr
shl
aas
lods
out
pop
add
dec
pop
test
jge
loop
pushf
pop
sbb
es
mov
push
(bad)
scas
inc
mov
bound
cmp
inc
sub
mov
sbb
cmps
lock
sahf
in
es
mov
shr
mov
movs
pop
cwde
push
in
retf
aad
int3
aas
jmp
sub
imul
mov
scas
push
cmps
sub
push
cmp
cmp
ja
lahf
loopne
rcl
hlt
xchg
(bad)
xor
inc
mov
ror
jecxz
lods
mov
mov
mov
repnz
in
add
push
js
sbb
add
cwde
adc
dec
pop
clc
cs
xchg
xlat
and
(bad)
xchg
ins
mov
sbb
push
fimul
jp
pop
pop
cld
data16
mov
loop
fdiv
jmp
jg
adc
inc
enter
pusha
add
ss
fs
adc
jmp
add
jmp
aam
sub
stos
test
mov
push
pop
mov
es
shl
cs
sub
das
jle
sub
jg
inc
dec
fdivr
inc
inc
dec
jmp
jecxz
icebp
popa
mov
add
xchg
aam
or
scas
adc
sub
mov
cdq
movs
xor
gs
movs
sbb
inc
repnz
inc
inc
mov
retf
out
fwait
stc
clc
mov
pop
cmc
call
cmps
dec
gs
pop
ret
dec
cmps
addr16
inc
pop
sub
int3
test
xchg
xlat
sub
mov
imul
add
mov
stos
pop
aaa
pop
pop
mov
fnstenv
test
mov
les
or
sub
add
xchg
mov
das
xchg
imul
mov
shr
mov
inc
jg
push
jns
jmp
sar
and
stos
cmp
imul
popa
xor
call
lock
cli
in
add
jge
mov
push
rcl
or
mov
adc
xchg
inc
sbb
inc
ftst
pop
jmp
sbb
(bad)
cmc
(bad)
pusha
xor
mov
shl
sbb
loopne
ss
fsub
jg
jb
in
lds
xchg
int3
mov
bound
shr
(bad)
test
sbb
sub
dec
xchg
jle
(bad)
js
push
fisubr
mov
dec
ficom
aad
enter
push
lods
fadd
cdq
or
es
pop
fxch
js
mov
dec
mov
fdivr
rcl
rcr
imul
bound
aam
xor
(bad)
in
pop
inc
mov
dec
sub
(bad)
jle
popf
stos
out
xchg
xchg
jo
add
outs
(bad)
cmp
enter
cmp
int3
mov
push
sbb
jle
mov
lds
push
or
and
mov
or
pop
ror
mov
or
div
push
enter
fdivr
fidiv
scas
cwde
test
jae
cmp
add
inc
shl
cld
lock
sub
outs
cmp
mov
mov
cmp
mov
and
sbb
pop
and
mov
cmovp
or
je
xchg
sub
adc
dec
fdiv
es
mov
dec
cmp
and
fwait
sbb
push
aaa
fs
xor
push
mov
addr16
jae
add
dec
(bad)
aam
mov
std
add
(bad)
cdq
daa
mov
xlat
lahf
and
pop
mov
inc
push
xchg
jo
je
sahf
sbb
xlat
cmp
sub
pop
inc
xor
xchg
mov
jo
fst
xchg
xchg
repnz
xchg
je
pusha
ja
add
dec
scas
lds
stos
push
adc
pop
mov
fisttp
outs
repz
mov
mov
mov
ret
vcvtss2sd
cli
fs
ret
test
(bad)
or
fsubr
ret
loope
jg
(bad)
int
int3
sub
paddw
cmp
and
cmp
shl
jge
sbb
jbe
mov
lods
sbb
int
stos
sbb
mov
neg
(bad)
lea
push
cmp
add
adc
jmp
fwait
and
int3
out
xor
cmp
xchg
xchg
mov
dec
or
data16
nop
pushf
int
repz
adc
sbb
or
jmp
pop
sbb
cmp
xor
push
dec
fisub
fistp
sub
test
cmp
stc
loope
xor
ss
jecxz
mov
out
push
cs
int3
mov
xor
pop
enter
mov
out
dec
inc
cdq
push
stos
mov
movs
sub
(bad)
jmp
popf
lock
push
cwde
cmp
pop
arpl
mov
imul
ror
(bad)
cli
adc
jg
jl
je
shl
cmp
xor
jae
pop
xchg
jmp
xchg
js
adc
fs
(bad)
mov
lods
xchg
cmp
or
test
int3
in
xor
das
pushf
inc
in
pop
adc
xor
dec
xchg
cmp
retf
rcr
add
jmp
loopne
xor
pop
push
xor
inc
retf
cld
cmp
jb
adc
push
add
out
xor
(bad)
(bad)
push
and
jge
cmp
aam
(bad)
icebp
mov
sub
popf
pop
and
(bad)
mov
in
fcmovnb
push
nop
addr16
xchg
jmp
out
loope
pop
cmp
mov
add
mov
jno
in
or
aaa
push
or
adc
repz
or
push
dec
dec
ja
dec
xchg
inc
jbe
mov
in
andps
inc
std
sbb
test
test
mov
aaa
gs
adc
fwait
jo
int3
bound
aaa
pop
sbb
fidiv
shr
jg
jns
mov
rcl
data16
xchg
jns
stos
iret
pop
adc
jbe
mov
repnz
mov
pop
lods
sbb
xchg
std
pop
adc
out
call
cmp
mov
push
lea
push
cdq
jno
int
jmp
les
rcl
and
pushf
div
dec
jmp
sub
mov
mov
fimul
sbb
jl
adc
stc
fistp
or
mov
inc
jecxz
(bad)
lea
xor
adc
push
add
das
aaa
ja
inc
pop
mov
xchg
mov
xchg
mov
aad
idiv
jmp
inc
(bad)
sar
movs
dec
ins
or
pop
pop
mov
push
jo
in
in
adc
adc
adc
arpl
js
outs
call
xor
leave
cmps
xchg
cmp
aaa
dec
xor
and
mov
out
lds
es
rcl
cmp
push
and
jns
mov
cmps
push
fwait
sbb
iret
cmp
imul
gs
(bad)
hlt
ret
(bad)
push
mov
cmps
pop
mov
jno
cdq
popa
cwde
inc
into
sbb
jecxz
dec
pop
rol
or
adc
cs
cmp
jmp
pusha
into
(bad)
in
dec
xchg
jb
dec
cmp
and
and
mov
gs
mov
xchg
pop
xchg
inc
xchg
add
loop
pop
cmp
xchg
adc
sbb
inc
into
cmp
jecxz
inc
dec
lock
movs
retf
xchg
jg
cmp
fstp
xor
sub
dec
add
ins
jl
pop
test
out
mov
dec
sbb
push
outs
rcl
jae
aam
adc
clc
cmp
add
sbb
adc
pop
push
gs
div
sub
cmp
sbb
in
inc
scas
out
rcl
jp
jp
cmp
xchg
jbe
push
xor
adc
and
push
pop
push
fcmovnb
into
pushf
aam
stc
les
pusha
inc
mov
add
xor
xlat
cmp
inc
adc
rcl
mov
int3
scas
scas
mov
int
aam
inc
cmp
lock
sub
das
sbb
add
or
mov
out
push
mov
cmp
and
add
sbb
or
jbe
pop
stos
shl
adc
nop
mov
xchg
mov
dec
xchg
vpunpckhdq
pop
das
outs
sub
scas
push
punpckhdq
data16
add
add
pop
retf
mov
mov
add
mov
sbb
push
out
sub
in
push
mov
adc
ja
imul
addr16
xor
ror
pop
adc
data16
sbb
scas
mov
jno
ds
jmp
mov
cmp
xchg
dec
das
mov
call
or
lahf
mov
xchg
fs
mov
xchg
mov
pop
xor
cdq
and
push
enter
or
div
jbe
mov
sti
and
pop
nop
out
cmp
stos
shl
jle
out
xor
sub
cmp
jl
cdq
aam
or
mov
cmp
fmul
div
push
repnz
test
in
aam
add
mov
adc
mov
add
retf
stos
out
pusha
push
mov
mov
data16
lds
pusha
push
gs
jno
pop
out
mov
fdiv
(bad)
inc
rcr
xor
adc
rcr
clc
cmc
jle
adc
jno
ins
xchg
movs
movs
pop
or
popa
movs
pop
in
and
shr
jecxz
(bad)
mov
idiv
cdq
mov
sbb
in
mov
ins
arpl
shl
lods
dec
div
xor
jmp
inc
inc
out
data16
mov
cwde
and
jle
add
dec
push
div
jge
push
mov
int3
lds
xor
retf
mov
cmp
(bad)
mov
adc
adc
loope
iret
shl
push
outs
movs
dec
xor
add
(bad)
fnsave
ss
push
cwde
mov
lods
dec
es
aas
aas
ins
xor
cmp
mov
nop
aas
mov
sbb
adc
js
mov
xchg
mov
gs
ins
or
clc
clc
xor
lods
pop
fadd
xchg
icebp
clc
inc
icebp
cmp
jb
add
mov
adc
sbb
gs
cli
imul
inc
repz
pop
scas
scas
xchg
and
lea
mov
sub
(bad)
call
inc
or
push
cld
out
sbb
push
cld
pop
xchg
cmp
add
mov
or
fldenv
push
cmp
dec
ror
sbb
cld
add
or
hlt
dec
cld
jecxz
data16
push
ror
xor
xor
icebp
pop
pop
pop
pop
lds
ss
into
cmp
pop
adc
out
enter
lock
bndstx
dec
xchg
or
stos
shr
add
in
stc
push
jl
mov
fisttp
imul
fistp
fmulp
mov
mov
inc
xor
pop
in
cmps
pop
xchg
shl
mov
shl
xchg
into
xor
cmps
test
fsub
fldcw
push
pop
fild
jp
add
xor
xor
popa
mov
ja
pop
mov
add
mov
xchg
xchg
popf
sub
jmp
jne
cmps
cwde
add
adc
sub
xchg
xchg
push
ror
call
jmp
mov
jmp
dec
(bad)
shl
dec
clc
sbb
stos
push
loopne
leave
test
sbb
test
ins
mov
lahf
cmc
sub
and
gs
mov
pusha
inc
adc
fild
jle
mov
pushf
aaa
xchg
adc
mov
xchg
mov
xchg
push
es
repnz
jecxz
cmp
mov
inc
adc
mov
xor
in
cmp
(bad)
daa
adc
(bad)
lock
addr16
iret
mov
mov
jge
add
xor
jne
sub
mov
or
iret
xor
je
mov
pusha
icebp
bswap
inc
in
repnz
xlat
call
push
adc
adc
std
loope
sbb
out
mov
push
dec
push
data16
into
and
test
clc
jnp
aad
pop
cld
push
push
mov
sbb
pusha
enter
loopne
test
xor
ret
adc
daa
imul
inc
cwde
or
pop
stos
repnz
aaa
imul
mov
mov
inc
sub
pop
or
cmp
pop
jmp
sub
inc
cmp
xchg
add
pop
adc
ja
xlat
idiv
pop
push
repz
mov
xlat
xor
xchg
iret
and
(bad)
(bad)
dec
mov
sub
hlt
inc
shl
sub
lahf
into
fisub
retf
add
andps
aam
dec
in
jb
and
ins
mov
push
sub
fwait
push
aaa
sub
sbb
mov
push
retf
sub
in
aaa
push
mov
out
loope
push
add
push
jecxz
sbb
xchg
call
sbb
arpl
xor
mov
lea
xchg
sahf
xor
aam
mov
out
pop
push
add
mov
cmps
xor
dec
scas
in
arpl
cli
sar
cmp
ror
and
fwait
lahf
addr16
inc
(bad)
cli
sbb
fist
leave
scas
jl
dec
fwait
push
(bad)
mov
mov
lock
fldcw
jg
jmp
adc
jmp
fmul
cli
jno
imul
adc
inc
out
mov
rcr
jecxz
sar
jp
pause
push
dec
adc
and
fsubr
mov
fsubr
jge
fcomp
(bad)
cmp
inc
shl
out
sbb
sub
xor
scas
fxch
retf
dec
mov
cmp
loope
mov
in
popa
adc
xchg
mov
movs
call
dec
xchg
enter
movs
xor
jg
aas
popf
adc
mov
cmp
fild
cdq
xchg
loope
xlat
lock
sbb
lea
xchg
leave
mov
mov
fist
sub
jnp
mov
push
cld
adc
jo
retf
ficom
shr
gs
jnp
xchg
pop
pop
mov
add
cmp
mov
adc
into
mov
icebp
sahf
dec
repnz
lock
fcmovnbe
jp
movs
in
lods
(bad)
mov
fwait
jns
outs
xor
push
jo
test
lods
test
fsubr
xlat
mul
xor
fwait
mov
popf
sub
outs
jb
mov
out
imul
xchg
adc
and
test
sub
jmp
sub
int
out
xor
inc
pop
push
ins
aaa
movs
scas
data16
jmp
push
test
jne
enter
repz
aaa
int3
pop
jecxz
mov
fild
jmp
ins
cmc
xchg
and
cmps
push
dec
xchg
scas
pop
sahf
or
(bad)
cmp
cmp
or
mov
push
ret
mov
mov
jmp
(bad)
clc
or
sti
cmp
sbb
rol
daa
sar
rcl
jb
inc
fs
sub
inc
xchg
push
mov
inc
pop
xchg
cmp
xor
xor
mov
xbegin
or
xor
push
retf
adc
adc
sub
xlat
sbb
scas
adc
daa
(bad)
jl
ret
jbe
sahf
shl
jmp
aad
lods
fimul
pop
xchg
and
sbb
test
in
jle
shl
xchg
adc
(bad)
sub
adc
pop
ins
nop
bswap
mov
push
fbld
pop
xchg
fsub
jb
rcl
test
mov
test
sub
cwde
clc
stos
xor
les
or
and
out
(bad)
mov
pusha
xor
sbb
call
jmp
(bad)
push
jg
inc
jbe
sbb
(bad)
pop
cmp
aas
in
dec
xor
jmp
push
(bad)
(bad)
mov
cmp
rcr
jnp
les
lds
sub
mov
fs
call
not
and
inc
mov
lds
cmp
xlat
rol
jg
inc
fs
rep
ja
aas
bound
ret
retf
out
mov
out
xchg
les
jmp
push
mov
inc
pop
adc
xor
xchg
jecxz
jl
pop
jb
loop
mov
pusha
test
inc
dec
repnz
cld
or
pop
mov
push
push
fbstp
adc
jmp
push
imul
lea
pop
test
pop
retf
js
add
enter
mov
xchg
out
mov
fisttp
mov
push
inc
mov
addr16
jne
lock
add
sub
xor
pop
sbb
add
and
xlat
pop
popa
mov
mov
inc
je
and
outs
in
cwde
loopne
fwait
repz
or
push
sbb
xchg
adc
in
dec
inc
cmp
aam
sbb
dec
push
arpl
das
sti
idiv
sbb
loop
std
test
adc
in
ret
lods
adc
fisubr
es
rol
cli
mov
cwde
scas
popa
ja
and
fist
push
push
cmp
push
xchg
add
pop
jecxz
inc
ja
pushw
mov
shl
sub
inc
cmp
cmp
call
pop
push
les
sub
cmp
cmp
and
(bad)
sub
push
shr
push
jg
fadd
jl
neg
bnd
(bad)
mov
pop
es
and
or
fistp
fwait
les
sub
stc
push
or
fild
jmp
lods
push
aad
mov
cmp
loope
sar
test
pop
jp
push
dec
cdq
pop
sub
rcl
out
dec
cli
jne
dec
pop
dec
dec
or
outs
add
sub
sbb
add
pop
or
push
mov
fimul
ret
repnz
and
fistp
cs
dec
ret
(bad)
lock
scas
or
sbb
fisubr
fstp
imul
push
push
mov
mov
push
pop
arpl
or
sbb
pusha
data16
pop
movs
les
jp
shr
xor
xor
cmps
loope
cdq
dec
gs
mov
sub
dec
(bad)
mov
mov
mov
(bad)
sub
xor
gs
and
scas
sub
sbb
and
retf
hlt
sub
sbb
push
inc
(bad)
fxam
inc
lahf
fisttp
retf
test
or
push
pop
sub
adc
xchg
push
dec
inc
mov
cmp
aas
and
add
cmps
pop
adc
mov
out
push
ds
shl
pop
das
retf
mov
fsqrt
es
mov
retf
hlt
imul
push
dec
jmp
sub
aam
aas
xor
push
cli
in
ja
xchg
jbe
sbb
and
xchg
mov
and
sbb
fistp
leave
retf
jmp
adc
xchg
retf
dec
call
inc
jae
stc
cmp
rcl
jns
iret
in
dec
in
add
je
mov
mov
mov
imul
sbb
pop
jb
sub
push
mov
push
stos
mov
arpl
adc
add
loop
sbb
clc
arpl
daa
jmp
in
adc
cmp
test
add
xor
repnz
mov
xchg
mov
pop
xor
(bad)
stc
pop
(bad)
(bad)
in
out
mov
idiv
movs
aam
xor
cmp
add
daa
bound
(bad)
pop
add
cmp
mov
jmp
jp
loop
dec
dec
xchg
cmp
dec
(bad)
jl
xchg
mov
in
fs
ret
cmp
inc
sbb
mov
mov
(bad)
sbb
mov
ins
xchg
test
sbb
icebp
xchg
and
call
push
gs
pop
mov
inc
mov
pop
pop
mov
fsubp
jo
adc
adc
ins
mov
in
adc
dec
jle
xchg
clc
cs
mov
out
cld
les
inc
adc
or
mov
cmp
jmp
push
push
in
aaa
dec
imul
push
pop
mov
mov
jmp
jge
mov
mov
retf
fcom
js
push
jno
mov
or
sti
in
mov
ret
and
mov
iret
cmp
sbb
push
xor
add
lahf
inc
rcr
inc
imul
lods
push
pop
div
imul
mov
je
icebp
sub
shl
inc
ins
adc
push
into
loop
test
jge
xchg
ret
retf
rcl
push
outs
mov
cmps
cs
cld
mov
dec
js
cmp
pop
sar
sub
jecxz
(bad)
scas
in
mov
push
add
inc
or
lds
clc
jbe
retf
xor
pop
mov
or
adc
aad
(bad)
in
lods
cmp
inc
clc
nop
pop
fistp
js
or
mov
or
inc
fsubr
inc
sbb
mov
fsub
aam
dec
xor
sub
mov
mov
lds
outs
ds
mov
cmps
aad
xor
mov
cmc
xor
stos
jl
aaa
das
sbb
sub
loop
jge
lds
jne
arpl
dec
out
cmc
cmp
inc
mov
push
cdq
hlt
inc
in
xchg
xlat
bound
cmc
retf
call
fwait
inc
push
mov
movs
jp
test
pop
into
mov
fisub
mov
icebp
retf
mov
dec
sub
pop
into
ja
mov
addr16
arpl
xchg
or
outs
mov
les
xchg
daa
or
jp
push
dec
cdq
jbe
jno
and
cmp
jne
shl
out
sub
jge
push
jne
sti
add
pop
repnz
ret
ret
nop
push
and
aad
gs
push
std
bound
outs
sub
fimul
(bad)
mov
and
jp
std
stos
xor
jnp
sbb
imul
popf
add
fwait
inc
push
pop
scas
int3
pop
aaa
and
mov
(bad)
pop
jmp
inc
imul
retf
aaa
push
sub
fiadd
sbb
cmp
push
and
pop
aas
jp
icebp
in
cmc
or
cmp
mov
loope
sbb
sub
push
add
pop
pop
retf
add
mov
sbb
push
gs
adc
mov
inc
call
mov
xchg
dec
dec
aaa
fisttp
leave
inc
dec
or
mov
js
lahf
pop
imul
mov
arpl
fdiv
add
inc
dec
adc
outs
sbb
jecxz
xchg
mov
inc
je
jnp
aad
add
mov
mov
pop
mov
mov
pop
or
(bad)
test
inc
pop
adc
in
shl
xor
cmp
int
clc
rcr
nop
(bad)
xor
lahf
inc
sub
movs
mov
or
and
add
div
adc
ins
pop
ins
add
int3
imul
push
cmp
div
cmp
inc
(bad)
fnstsw
xchg
mov
mov
sbb
jecxz
xor
or
add
xor
adc
scas
xchg
les
and
or
clc
mov
rcl
xchg
rcr
pop
add
lods
mov
jecxz
dec
sbb
xchg
nop
mov
pop
sub
cmps
xchg
(bad)
fcmovne
(bad)
dec
and
xchg
fmul
in
and
push
sti
adc
mov
dec
cmps
sub
fild
icebp
jl
mov
loopne
clc
inc
int
iret
cmp
dec
push
test
sbb
and
adc
test
xchg
fs
mov
out
sbb
mov
in
mov
out
or
rcl
mov
sbb
push
ja
ror
fs
cs
jnp
data16
jne
add
add
enter
push
sbb
clc
inc
ret
rol
sbb
test
dec
cmp
icebp
adc
aas
add
nop
pop
and
mov
fs
in
inc
push
pop
pop
out
xchg
sub
jecxz
adc
xchg
retf
or
jmp
pop
psubb
int3
shr
and
pop
les
push
push
sbb
fnsave
lock
xor
mov
icebp
inc
in
sub
scas
sub
jge
adc
das
loop
lods
jo
mov
daa
pop
sbb
enter
add
mov
mov
and
popf
cli
loop
mov
xchg
sub
mov
sar
push
int3
add
pop
xchg
sahf
push
mov
int3
jno
xchg
or
ss
jmp
pop
aad
dec
(bad)
jmp
sub
pop
cdq
pop
jge
ds
pop
out
sub
(bad)
arpl
outs
lods
jns
or
and
xchg
push
(bad)
aam
inc
lahf
aad
mov
add
xor
sub
lods
mov
loopne
inc
aad
pop
mov
stc
dec
add
push
cmps
mov
cdq
mov
pop
push
lock
mov
sbb
sbb
xor
jne
into
mov
xchg
ins
or
icebp
gs
inc
pusha
or
jo
rcr
inc
int3
xchg
mov
jmp
pop
sub
imul
mov
stc
and
sub
mov
mov
push
push
sahf
jno
dec
xchg
inc
pop
mov
fwait
add
hlt
pop
out
jae
push
push
cs
les
movs
retf
inc
sub
pop
pop
xlat
lahf
int
out
aam
and
add
and
outs
pop
movs
pushf
into
mov
lods
mov
pop
pop
popa
sbb
xor
aam
push
nop
dec
in
outs
xchg
movsx
icebp
aas
pop
and
pop
push
scas
mov
jo
add
jno
add
adc
dec
mov
xchg
jnp
inc
test
loope
mov
mov
sub
(bad)
jmp
outs
mov
popf
xchg
push
lahf
rol
and
int3
adc
mov
(bad)
cli
dec
je
pop
sub
fbld
mov
dec
ss
leave
inc
movs
pop
jmp
jp
cmp
or
mov
cli
dec
dec
pop
into
loopne
mov
pop
xor
xchg
popa
je
pop
or
std
mov
movs
xor
cmp
or
ss
movs
imul
jmp
inc
jmp
jo
mov
hlt
mov
aad
and
mov
sbb
inc
sub
add
ror
popa
mov
addr16
int
rcl
rcl
xor
push
mov
aam
push
(bad)
or
test
ins
jl
jmp
pop
xchg
pusha
lea
popa
mov
pop
idiv
push
sub
inc
pop
push
mov
les
fucomi
xchg
jbe
mov
xor
sti
scas
and
mov
fisubr
jno
xor
test
repnz
(bad)
and
ret
pop
in
std
mov
mov
dec
icebp
or
and
not
dec
mov
sub
or
imul
loopne
lahf
cmp
mov
sub
jmp
clc
add
ins
sub
inc
out
mov
mul
in
daa
scas
push
add
mov
jge
int
push
jns
add
xchg
cmc
mov
and
dec
mov
(bad)
add
(bad)
dec
arpl
cs
adc
xchg
cwde
mov
call
and
sub
and
pop
shl
mov
mov
test
or
dec
fnsave
ins
and
and
jl
aad
stos
xchg
push
retf
adc
xor
inc
repnz
mov
dec
in
(bad)
dec
test
xor
mov
outs
fdiv
push
inc
retf
gs
mov
out
jne
call
ins
xor
pop
std
lea
dec
cs
int3
jbe
sbb
outs
icebp
call
out
mov
push
push
arpl
xor
scas
dec
push
out
out
cli
and
in
add
sub
and
add
mov
sysret
jg
jle
aad
test
int3
daa
pop
cs
mov
stc
push
dec
jg
push
icebp
xor
dec
pop
test
bnd
pop
popf
inc
mov
popf
pusha
push
mov
(bad)
and
gs
imul
xchg
gs
ret
loope
fdiv
in
dec
lock
push
in
(bad)
(bad)
cli
dec
sbb
(bad)
fwait
jl
les
call
adc
or
push
into
xor
call
cwd
inc
push
pop
jae
pop
or
in
mov
leave
test
(bad)
cwde
or
xchg
sub
push
cmp
jns
clc
ds
sbb
sbb
fisttp
pop
rol
fist
sub
push
call
loope
add
xchg
ror
jge
cmp
sbb
jae
add
sbb
jns
out
xor
dec
inc
jl
std
mov
or
jns
(bad)
jbe
lds
add
push
pop
push
in
push
call
rcl
rcl
iret
das
je
dec
mov
adc
ss
xor
fisttp
and
xor
lock
xchg
mov
mov
mov
enter
test
in
je
jo
lods
out
loop
jnp
enter
push
push
fnstsw
mov
push
xor
(bad)
enter
ds
ss
or
shl
dec
test
movs
in
fcom
aad
xchg
jno
(bad)
pop
(bad)
jno
dec
out
fstp
mov
fyl2xp1
jbe
fiadd
push
arpl
cmp
test
inc
lea
test
rcr
sub
scas
jecxz
repnz
fcomp
xchg
xlat
movs
fs
dec
mov
pushf
mov
mov
pop
add
mov
test
add
leave
jno
pop
xlat
jle
push
mov
mov
ss
xchg
frstor
jno
and
sti
push
push
jbe
je
xor
or
pop
push
cs
push
mov
adc
pop
push
into
cmps
jmp
cmp
pushf
pop
sub
(bad)
mov
nop
push
xor
dec
(bad)
out
(bad)
fdivr
out
jmp
dec
daa
fld
aaa
inc
nop
sti
data16
addr16
inc
test
pushf
mov
in
shl
dec
sub
cwde
mov
sbb
mov
add
pop
addr16
cwde
rcr
out
cmp
pop
pop
movs
mov
or
push
push
or
les
ret
(bad)
xor
dec
ss
fwait
fxrstor
loop
mov
sbb
adc
pusha
cmp
add
js
sbb
das
(bad)
push
loopne
add
mov
ss
mov
jne
xchg
into
and
cmps
xor
dec
cmc
mov
js
arpl
mov
push
jp
pop
aaa
jp
dec
sbb
pop
and
sub
jp
xor
or
aaa
mov
loop
mov
xchg
push
imul
ja
retfw
cwde
setl
fdivr
adc
inc
popa
xchg
jecxz
push
push
jae
jge
aam
sub
(bad)
lahf
xor
pop
fldenv
data16
in
mov
mov
outs
cmp
popf
xchg
out
js
xchg
cs
sub
fisub
jb
mov
(bad)
lds
out
out
addr16
push
or
or
or
sub
cmp
or
sub
xor
adc
and
jns
lods
adc
aaa
adc
imul
mov
int3
jns
(bad)
mov
dec
sub
inc
ror
dec
jmp
(bad)
cli
iret
inc
xor
push
or
fldcw
out
cmps
mov
iret
rcl
inc
pusha
dec
push
mov
mov
(bad)
sub
nop
cld
sbb
dec
popa
xor
add
adc
sti
inc
push
cld
mov
popa
(bad)
leave
cwde
ins
test
cmps
fcomi
gs
into
in
jmp
mov
fisubr
icebp
std
pusha
cmp
and
iret
or
pop
push
cwde
aad
jmp
fst
call
adc
sti
mov
or
or
retf
outs
fiadd
xor
cmps
lahf
cmp
mov
push
and
push
cmp
push
xor
imul
adc
lods
int
sti
pop
mov
cmp
push
div
sbb
test
shl
aaa
mov
les
dec
fsub
pop
jmp
adc
jno
fdiv
(bad)
(bad)
and
dec
mov
jp
push
mov
push
push
ds
outs
add
mov
imul
ds
add
xor
push
cwde
jbe
int3
inc
add
and
pop
lds
sub
sbb
stos
or
jno
ror
or
test
mov
xchg
stos
adc
pushf
movs
inc
xlat
mov
jl
cmp
clc
inc
pop
add
clc
mov
(bad)
xor
adc
xor
popf
cmp
and
dec
repnz
xchg
jae
pushf
mov
test
or
fcmovu
xchg
sub
sub
adc
(bad)
xlat
pop
mov
mov
shl
add
mov
mov
or
(bad)
mov
pop
out
and
sbb
fmul
mov
jp
sub
xchg
adc
xlat
nop
mov
dec
in
mov
loope
dec
es
jo
mov
dec
inc
push
pop
(bad)
and
sub
dec
xchg
cmps
sbb
sbb
sbb
scas
cwde
out
pop
cmp
dec
and
sbb
dec
dec
and
pop
xor
sar
test
cmp
call
inc
std
fiadd
inc
es
repnz
cmp
jne
dec
mov
jp
xor
jno
rol
cmc
adc
retf
cpuid
xor
jmp
sub
fldenv
(bad)
(bad)
push
dec
je
mov
movs
jbe
stos
retf
(bad)
and
dec
lahf
popf
push
cli
test
and
mul
and
mov
aad
ret
push
sbb
dec
(bad)
inc
mov
mov
and
rcr
add
mov
mov
sub
jmp
bound
hlt
xor
xchg
mov
aaa
retf
or
daa
push
in
or
outs
fsubr
ja
fcom
(bad)
in
fdivp
push
and
arpl
cmp
pop
xor
cmps
jmp
cvtpi2ps
mov
xchg
scas
xor
rcl
(bad)
lods
repnz
in
jbe
mov
and
mov
xor
loopne
mov
test
and
cmp
fucomi
dec
movs
pop
mov
mov
aas
jmp
cmps
fcom
add
mov
adc
ins
pop
addr16
adc
bound
jno
fwait
aad
int3
leave
dec
add
lock
dec
dec
cmps
mov
fmul
push
and
pop
sub
jge
pop
push
xor
push
in
ret
std
sbb
loopne
popa
jae
sar
adc
mov
push
(bad)
clc
inc
mov
cmp
mov
(bad)
mov
sub
test
or
jp
sub
(bad)
jge
addr16
push
xor
in
jae
call
xchg
les
aam
jmp
enter
fdiv
pop
pop
js
push
dec
adc
mov
loope
enter
repz
push
inc
jle
mov
in
aam
out
sub
sub
ror
pop
in
iret
adc
fcmovnu
and
retf
sub
sbb
fdiv
movs
cs
jb
or
inc
mov
not
adc
sub
xchg
ja
mov
mov
shl
sbb
in
icebp
bound
xor
xchg
gs
cmp
fcmovne
dec
fbstp
into
int
rcl
pop
repz
test
fs
arpl
mov
pop
retf
rcl
push
jmp
jnp
or
inc
fadd
aaa
stos
ror
popf
jp
xor
mov
xlat
mov
mov
mov
aad
push
out
inc
mov
push
push
dec
in
mov
mov
stos
and
inc
cmps
mov
lea
and
or
xor
dec
dec
int
fstp
dec
out
in
mov
cmp
rcl
mov
or
jge
aaa
sar
outs
and
pop
pop
popf
cmc
inc
cmp
dec
shl
lahf
push
arpl
into
mov
jo
cmp
sbb
pop
(bad)
aad
xchg
xchg
sahf
and
adc
mov
and
add
jb
imul
popf
sub
out
mov
scas
dec
xchg
cmp
cwde
sbb
or
test
xchg
jnp
(bad)
xor
push
aam
or
xchg
rcr
jle
call
jne
(bad)
cli
cmp
out
pop
aam
pop
aaa
and
mov
add
fs
aas
pop
sub
and
(bad)
aad
fnstsw
scas
jl
inc
(bad)
stos
jbe
and
inc
adc
stos
not
pushf
stos
pop
mov
mov
add
pop
sub
add
xor
and
shl
movs
dec
mov
mov
cmp
iret
jp
imul
inc
xchg
pop
jno
sub
and
cs
xor
(bad)
mov
ins
aad
lds
fadd
cmp
mov
jnp
add
icebp
or
mov
xchg
and
sub
ss
clc
(bad)
mov
sbb
dec
cmp
shl
lock
xchg
mov
jp
xchg
dec
cli
xchg
mov
jg
(bad)
push
pushf
iret
push
sbb
sbb
sub
sbb
jmp
div
mov
xchg
iret
les
xlat
xor
lahf
sahf
push
aad
inc
repz
mov
mov
adc
and
imul
div
dec
ds
pop
fs
add
dec
fmul
retf
dec
or
xor
mov
push
mov
dec
in
aam
movs
sbb
dec
mov
vsqrtss
pusha
mov
(bad)
ins
xlat
retf
loop
mov
das
ret
jmp
mov
cmps
stc
pop
jl
std
(bad)
enter
jge
push
stos
retf
out
and
xor
cmp
movs
fwait
and
jle
loopne
mov
fmul
lahf
xor
push
add
das
xchg
or
loop
mov
(bad)
push
fs
rcl
dec
test
mov
scas
sub
cmp
cmp
movs
int
sub
jle
das
jmp
imul
mov
div
inc
dec
sbb
cmp
xchg
xchg
cwde
inc
push
pop
(bad)
test
jge
in
jno
mov
repnz
jae
mov
push
cmp
adc
mov
pop
sti
test
lahf
ins
gs
ffreep
mov
cdq
call
pusha
test
into
in
pop
cmps
cmp
push
ret
shl
in
jno
or
lds
movs
cmp
mov
cs
adc
pop
pop
es
xchg
scas
jb
mov
lods
mov
sub
and
daa
adc
mov
mov
pop
mov
cmovle
xchg
pop
shl
cmps
inc
dec
pop
repnz
sub
lea
add
jecxz
xchg
fisubr
(bad)
cs
cmp
aas
loope
fwait
mov
mov
clc
pop
sysexit
inc
outs
sub
sbb
jne
pop
imul
lea
hlt
jnp
fstp
mov
aaa
push
out
shl
dec
(bad)
in
sbb
loope
pushf
dec
imul
xchg
(bad)
jecxz
jns
mov
xor
in
jle
mov
popa
mov
test
mov
cdq
pop
dec
retf
adc
mov
sbb
mov
(bad)
push
push
loopne
lahf
(bad)
xchg
inc
ret
mov
loope
and
xor
jp
ins
cmp
rcr
xor
imul
mov
sahf
jp
xchg
out
dec
jp
jp
fnsave
pop
sub
and
movs
jno
pop
rol
inc
adc
cmp
add
data16
xchg
je
and
add
sahf
cwde
cmp
outs
out
and
xchg
xor
ficomp
loopne
mov
adc
out
ret
sbb
aad
mov
xchg
xor
(bad)
add
xchg
pop
mov
rcl
mov
dec
xchg
int
push
jo
cmp
and
push
scas
cld
and
sahf
sbb
in
lods
pushf
mov
ds
pop
das
inc
cmps
ret
arpl
mov
pop
ja
sbb
imul
push
jns
out
scas
aaa
pop
popa
and
js
add
inc
mov
mov
jecxz
push
test
jnp
pop
add
test
shr
(bad)
jp
and
mov
sbb
(bad)
call
imul
ins
sub
xchg
add
imul
pop
mov
repnz
cdq
pop
popf
jmp
add
add
jmp
pop
mov
aaa
idiv
sbb
pop
mov
push
mov
mov
dec
stc
out
retf
in
and
ret
mov
test
nop
sahf
mov
pop
int
stos
mov
and
cmp
int3
mov
ins
sub
push
into
lods
sub
inc
xchg
mov
mul
mov
xor
cmp
rcl
pop
xlat
push
add
ret
inc
lds
cwde
mov
retf
inc
cmp
fwait
test
adc
xchg
jle
stos
fwait
jb
mov
jle
mov
retf
cwde
bt
cmp
ret
cmc
add
jo
icebp
mov
ins
cmp
imul
call
shl
vsqrtsd
xchg
int3
test
mov
imul
mov
inc
push
push
in
jle
dec
sbb
jg
mov
push
daa
div
xchg
dec
popa
shl
cmps
mov
mov
cmp
lea
push
neg
and
pop
aam
and
sti
lock
inc
lahf
pop
or
test
mov
pop
xchg
add
jle
enter
imul
mov
xlat
cmp
push
push
adc
mov
scas
fucom
int3
outs
mul
push
jne
inc
outs
and
test
ds
cs
cmp
ret
mov
mov
fisubr
or
mov
dec
jnp
sbb
call
loop
dec
shr
jg
mov
inc
cli
leave
mov
sbb
call
jae
sub
adc
ss
push
mov
xor
dec
cld
fistp
push
pop
ins
cli
add
add
stos
jae
fistp
xchg
adc
scas
inc
test
mov
nop
xchg
mov
jmp
nop
lea
fild
xor
gs
sahf
inc
add
add
jp
ds
pop
xchg
fidivr
mov
call
sbb
shl
jno
xchg
out
pop
stc
aad
mov
test
jb
fstp
fnstsw
js
dec
data16
fwait
xor
jmp
bound
in
loope
adc
and
stc
frstor
pop
pop
push
es
xchg
retf
add
int
cmp
outs
xchg
das
idiv
sub
push
leave
push
pop
test
ins
push
movs
lahf
cmp
ins
(bad)
icebp
cmp
xchg
pop
fisubr
pusha
stos
(bad)
push
fisubr
push
jb
outs
fadd
dec
xchg
ret
lds
cmp
pushf
cmps
inc
imul
jb
cmp
lds
xchg
add
jo
ja
xchg
arpl
inc
ds
add
test
imul
js
std
cmc
mov
mov
jbe
shl
lock
fst
sbb
out
or
(bad)
sub
push
shl
or
sub
fistp
push
mov
mov
jno
les
scas
push
(bad)
nop
aad
dec
call
adc
push
push
std
xor
push
es
mov
and
push
pop
pop
xlat
mov
mov
cmp
or
(bad)
movs
sahf
xchg
adc
out
push
adc
push
out
rcr
jmp
ins
inc
repnz
xchg
jle
psadbw
(bad)
add
mov
clc
cmp
sbb
add
mov
xchg
retf
fstp
add
xchg
into
xchg
mov
mov
retf
xor
and
mov
or
or
mul
mov
not
inc
enter
(bad)
adc
stc
cmp
gs
add
push
sub
push
lods
sbb
(bad)
out
jp
enter
out
cmps
fs
scas
adc
stc
mov
sub
repz
or
dec
inc
inc
clc
data16
sbb
loope
ss
cmp
cdq
push
add
cmps
shr
xchg
fist
xchg
ja
loope
stos
stc
xchg
or
div
mov
or
dec
sbb
xlat
adc
jmp
jns
(bad)
push
adc
and
out
jmp
inc
fisttp
outs
mov
dec
xchg
je
mov
sbb
cwde
xor
or
and
xlat
jae
cmp
add
cmp
lahf
(bad)
in
out
outs
jmp
out
push
cs
mov
scas
dec
xchg
leave
es
and
in
mov
mov
or
jns
jae
jbe
test
sub
mov
sbb
push
shr
sub
pop
std
push
xchg
into
inc
outs
push
(bad)
aam
sbb
cmp
dec
je
add
cmovge
retf
je
jb
aam
mov
add
cmp
cmps
jg
ficom
pop
(bad)
lea
mov
call
push
repnz
mov
mov
fwait
push
outs
sub
jb
iret
movs
test
pop
retf
aam
xor
test
inc
adc
test
jns
(bad)
into
inc
jmp
addr16
sbb
sar
sub
mov
(bad)
mov
cdq
fild
add
mov
dec
outs
mov
fistp
add
int3
mov
xchg
test
xchg
sbb
sahf
mov
push
mov
adc
(bad)
adc
icebp
es
sub
(bad)
dec
jae
jne
cmc
xchg
or
push
jne
and
test
dec
push
loopne
mov
(bad)
sub
sub
jne
adc
cmps
adc
and
ja
shr
push
push
pop
iret
cmp
xor
mov
cld
mov
mov
jne
jg
sbb
sbb
inc
call
add
sti
loope
sbb
fnstsw
dec
fdiv
inc
call
xchg
add
or
jo
loopne
lods
jg
mov
fnsave
mov
stos
std
stc
call
mov
sbb
popa
xor
mov
push
int
rol
pushf
in
sbb
sahf
inc
pusha
stos
popf
push
pushf
mov
xchg
jge
loopne
repz
xor
mov
mov
pop
xor
ds
movs
not
call
sub
xor
(bad)
int3
ret
pop
sub
cmp
mov
xchg
add
pop
movs
or
sub
push
jp
fucomi
outs
mov
xchg
add
dec
sub
push
push
in
hlt
ins
ret
sbb
jle
xchg
jmp
jecxz
fistp
nop
into
xchg
mov
(bad)
ficomp
xor
jb
loope
add
push
fisubr
icebp
mov
pop
ss
and
imul
dec
ds
mov
loop
daa
mov
pop
xor
loopne
es
adc
ja
xor
and
jge
xlat
inc
jle
dec
arpl
or
mov
cmps
cmps
cmp
sub
sbb
and
push
cld
imul
in
inc
jg
iret
sub
xchg
jmp
retf
xlat
arpl
xchg
inc
mov
out
jmp
push
aam
mov
inc
fld
test
xor
repnz
jno
or
out
gs
cmp
fiadd
out
int
fisttp
and
enter
adc
mov
jp
mov
push
test
nop
mov
and
push
add
test
lock
ins
jns
(bad)
dec
sbb
aas
xchg
aaa
iret
(bad)
adc
pop
aam
jbe
lds
leave
jl
push
jne
mov
lahf
mov
xor
jmp
movs
xor
sub
repnz
jmp
fist
arpl
jp
pop
xchg
mov
in
mov
test
dec
pop
adc
(bad)
(bad)
adc
inc
push
pop
inc
arpl
cmp
cs
aas
hlt
(bad)
xchg
ins
retf
sub
dec
inc
mov
cld
bound
add
scas
xor
fs
and
ret
popa
dec
pop
shl
mov
out
mov
ins
movs
add
iret
cmp
std
call
cld
cmp
jecxz
loopne
mov
jg
push
pushf
xchg
sub
mov
rcr
push
rcl
add
ja
popf
cwde
pop
aas
scas
popf
int3
mov
(bad)
aam
sbb
(bad)
and
mov
sbb
aas
cmp
mov
inc
xchg
add
es
or
js
and
jp
sar
hlt
sub
repz
adc
add
jo
pop
aaa
inc
aad
scas
ins
mov
jp
cld
mov
retf
and
fst
lods
and
mov
cli
sbb
cli
dec
call
ds
dec
dec
out
mov
(bad)
js
mul
loopne
cdq
and
sbb
xchg
cmp
xchg
add
xchg
sbb
(bad)
jg
jae
cmps
push
jge
inc
test
aam
ja
push
das
sti
gs
fisub
pop
(bad)
or
or
sbb
jbe
cmp
or
mov
fwait
cmp
add
sar
or
jle
neg
push
out
aas
in
je
inc
ret
punpckhbw
or
sub
adc
loope
mov
arpl
lea
add
ss
ja
mov
dec
cwde
in
aad
dec
mov
mov
aad
inc
imul
adc
out
xor
adc
adc
cdq
inc
and
xor
and
ror
mov
jl
mov
outs
mov
sbb
dec
add
jo
pop
ret
push
in
mov
push
cmp
leave
aas
test
imul
adc
xor
pusha
sbb
loopne
jl
inc
and
js
(bad)
out
nop
inc
stos
cmp
inc
fisub
or
outs
sub
scas
mov
repz
mov
jnp
pop
dec
stos
cdq
fisub
into
(bad)
ss
mov
bound
rcr
scas
mov
mov
cmp
jg
jbe
add
or
mov
inc
jle
mov
loope
or
out
ins
push
lea
and
(bad)
xchg
fwait
xchg
push
repz
in
or
ret
sbb
adc
cmp
idiv
in
in
pop
and
shl
dec
cmp
jo
push
sbb
add
lock
jle
test
mov
and
ficomp
inc
out
pop
push
cdq
push
outs
in
lahf
outs
aam
mov
add
shl
and
out
call
(bad)
cld
mov
fwait
sahf
cwde
outs
es
jo
movs
mov
frstor
sub
jmp
or
enter
mov
or
push
aas
jo
xchg
cs
scas
mov
cs
push
out
ins
loopne
jl
cwde
inc
dec
jle
ror
jp
mov
or
dec
sti
mov
xor
repnz
dec
out
and
pop
xchg
mov
dec
(bad)
std
dec
jp
xchg
data16
inc
mov
imul
out
push
stos
cmp
cld
mov
xchg
inc
ret
mov
call
jb
outs
mov
scas
repz
mov
adc
adc
xor
shr
add
inc
ss
mov
in
mov
pmuludq
aas
or
in
push
push
cdq
sbb
addr16
cmp
xchg
inc
pop
dec
xchg
mov
movs
mov
pop
adc
inc
add
xor
add
dec
test
les
sbb
aas
add
aaa
repnz
inc
daa
jle
inc
outs
and
stos
inc
fwait
imul
je
dec
inc
sahf
cmp
adc
ja
sbb
pop
mov
cmp
test
add
dec
sub
adc
cmp
ret
out
loope
das
add
sbb
retf
scas
mov
aas
ret
xchg
xor
(bad)
adc
mov
or
and
rcr
mov
mov
fdiv
jno
es
call
ret
popa
xchg
push
pcmpeqw
stos
test
ds
jle
pop
(bad)
jecxz
jbe
movs
jbe
xor
push
cwde
test
dec
push
xchg
mov
dec
loope
sbb
loope
test
bound
hlt
xchg
in
add
fs
mov
pusha
iret
jo
or
sbb
sbb
inc
iret
cmp
mov
in
pop
xor
fisub
fs
sti
or
cmp
icebp
add
leave
xchg
std
mov
pop
add
outs
sahf
pop
daa
add
inc
jecxz
jmp
pushf
mov
push
sar
outs
int
add
(bad)
std
jg
or
push
outs
retf
jbe
xor
into
in
sti
mov
pop
or
xchg
adc
cmp
push
stos
sar
push
arpl
mov
mov
jle
xchg
push
movs
into
xchg
mov
sub
dec
movs
je
xchg
lods
cmp
dec
fisttp
push
sub
inc
pop
into
rcr
repz
and
aam
xor
je
call
sub
bound
popa
in
mov
xchg
cmp
pop
ins
scas
cmp
sub
xor
cmp
xchg
mov
adc
enter
inc
pop
hlt
fs
sub
xchg
mov
xchg
and
jge
xchg
pop
mul
add
adc
shl
mov
xchg
pop
fadd
arpl
mov
dec
ins
stos
and
sbb
(bad)
jo
fidiv
inc
es
dec
iret
mov
mov
adc
cmp
popf
aaa
fsubr
jge
inc
out
dec
inc
sbb
jnp
push
pop
jl
retf
adc
push
sub
sar
retf
push
cld
pop
mov
adc
adc
ins
lahf
jnp
cmp
shl
sub
inc
jnp
iret
lahf
cmps
(bad)
ja
mov
mov
in
mov
adc
push
mov
xor
outs
fimul
rcl
sub
cli
fst
and
xchg
(bad)
fadd
fs
or
adc
frstor
mov
push
add
jle
xor
stos
cmp
stos
in
mov
mov
int
aad
in
arpl
and
and
inc
cmc
push
retf
idiv
pop
mov
cmp
jo
cmp
(bad)
jns
iret
lds
lds
xchg
data16
cmp
out
push
(bad)
rcl
mov
cmp
sbb
xor
icebp
lods
pop
popf
pop
dec
pop
xchg
and
mov
xor
push
out
call
fsubr
stos
cwde
pop
cmp
inc
mov
out
rcr
sti
je
pop
pop
push
dec
inc
ins
sbb
xchg
cwde
sbb
mov
cwde
inc
mov
icebp
xchg
push
bound
ins
inc
pop
dec
push
and
clc
jecxz
outs
push
dec
mov
gs
push
div
in
xlat
fdivp
push
jecxz
sub
or
ds
mov
jge
loope
aam
xchg
xchg
push
pop
push
imul
mov
lods
(bad)
and
loop
mov
lds
mov
gs
mov
and
and
push
mov
test
push
and
inc
mov
mov
mov
inc
hlt
in
and
inc
sub
mov
psubsb
push
sub
out
cmp
push
fimul
inc
sub
stc
imul
or
add
cli
rol
mov
mov
dec
push
add
push
std
mov
fcmovb
xor
inc
dec
mov
fistp
mov
inc
adc
mov
lods
mov
es
jne
call
pop
xor
jmp
adc
jnp
out
imul
popf
cdq
loopne
frstor
mov
cdq
call
xchg
xor
sub
pop
xor
mov
gs
sbb
ror
xor
sub
retf
repz
ja
(bad)
(bad)
dec
test
xor
push
paddsb
mov
call
sbb
xchg
adc
fxch
pop
mov
in
sbb
mov
mov
fstp
mov
fcmovne
outs
mov
imul
js
add
cmp
push
and
pop
mov
mov
jge
pop
mov
cmp
test
cdq
ret
cmp
pop
enter
inc
cmpxchg
(bad)
out
dec
in
ss
rcr
imul
repz
fnstcw
ficom
xchg
retf
sub
imul
cmps
or
pop
add
lock
ins
and
dec
cmps
mov
push
out
rcl
stos
xchg
sub
sub
pusha
push
and
adc
loop
call
xor
jmp
pop
lds
adc
mov
cmp
lahf
std
ja
cwde
cmps
xor
mov
adc
mov
test
mov
aas
jl
arpl
pop
or
pusha
popw
in
sar
mov
add
fwait
popf
xor
mov
pop
(bad)
scas
xchg
(bad)
iret
mov
pop
xor
clc
cmp
mov
add
or
ja
stos
in
push
jl
stos
mov
or
add
imul
xchg
test
je
je
mov
jmp
and
jecxz
stos
xchg
out
mov
test
or
inc
out
inc
daa
scas
imul
xchg
jmp
aas
scas
mov
cmc
out
inc
push
jbe
lds
sbb
pushf
push
mov
jmp
loopne
jns
ds
and
jb
mov
and
lds
push
mov
outs
adc
in
fwait
int3
xchg
loope
int
inc
xchg
mov
and
sbb
xchg
pushf
imul
or
cmp
iret
lock
inc
ror
aam
(bad)
neg
cmp
jae
jno
not
and
inc
sbb
rcr
das
mov
add
xchg
pop
outs
cmp
imul
mov
sub
push
out
jle
jns
cdq
das
adc
gs
and
shl
daa
or
in
out
es
xchg
mov
add
sub
inc
lods
mov
push
adc
dec
shl
(bad)
dec
cmovle
mov
sub
mov
mov
add
pop
dec
pop
push
push
sbb
cmps
xor
or
dec
icebp
push
fs
xor
ja
cdq
arpl
lahf
mov
mov
in
loop
psrld
ins
mov
adc
mov
add
push
mov
and
adc
sbb
into
adc
stos
das
ret
sub
mov
in
ins
jecxz
sbb
ficom
add
stc
inc
or
in
mov
imul
rcl
daa
inc
fidiv
and
int
pop
inc
or
pop
mov
mov
aas
mov
test
fmul
clc
sub
dec
cdq
mov
(bad)
sub
sub
jns
adc
gs
ret
in
outs
jne
dec
jae
outs
cmc
sar
scas
fisttp
cmc
outs
dec
or
push
sbb
push
xlat
cmp
shl
push
mov
lock
retf
xchg
adc
mov
cdq
in
scas
call
stc
dec
(bad)
(bad)
call
lahf
mov
pop
mov
inc
cmc
push
daa
push
lock
dec
jecxz
push
mov
in
lods
cmc
mov
mov
xchg
xor
push
pusha
mov
mov
mov
retf
pop
mov
ror
aas
fs
out
(bad)
add
in
pop
cmc
or
in
es
rcr
sub
mov
out
sbb
movs
js
nop
mov
(bad)
stos
mov
xchg
pop
xchg
xor
aas
sbb
pop
xchg
iret
sbb
cmp
aas
fisttp
addr16
(bad)
inc
jge
call
leave
adc
outs
retf
xor
mov
fdivrp
(bad)
icebp
test
mov
movs
xlat
and
(bad)
(bad)
jne
fist
push
(bad)
jne
sbb
xchg
mov
cmps
jmp
or
dec
xor
dec
fiadd
add
stos
push
xor
lods
loope
dec
sbb
push
xor
and
mov
pop
je
sub
adc
fisttp
xor
xor
loopne
arpl
ja
daa
iret
retf
pop
xchg
push
pop
int
test
sbb
jle
cwde
push
xchg
cmp
and
push
adc
fstp
add
nop
pop
mov
and
mov
sbb
xchg
(bad)
push
jle
fisubr
pop
cmps
add
js
(bad)
pop
add
sti
scas
int3
mov
fs
sahf
cmc
shl
xchg
add
dec
jo
mov
xchg
inc
arpl
repnz
fisttp
pop
ins
cwde
jle
pop
sub
jb
and
xor
(bad)
test
leave
inc
in
mov
jb
mov
loop
das
rol
test
inc
adc
mov
aam
mov
jns
ss
dec
in
pop
hlt
nop
mov
xor
in
in
mov
popa
xor
out
pop
ror
sub
push
add
stos
enter
cdq
xchg
add
retf
pop
xchg
xor
dec
iret
(bad)
jg
inc
mov
push
shr
scas
or
mov
stos
and
adc
add
movs
retf
or
mov
and
(bad)
mov
xor
push
pop
repnz
repnz
and
and
rol
pop
inc
jp
icebp
fbld
mov
icebp
add
lahf
mov
ja
fnstsw
xchg
mov
jl
retf
dec
xor
daa
les
inc
add
int
jl
frstor
jle
dec
ss
inc
call
add
stos
fbstp
or
and
cmp
dec
jp
cwde
fst
aam
mov
adc
jb
and
xchg
jb
push
je
(bad)
repz
mov
lds
out
cdq
test
popa
addr16
cmps
sub
stos
(bad)
xchg
xchg
and
push
pop
and
and
add
int
test
add
cwde
and
sahf
in
popf
lahf
lock
adc
daa
shl
ja
aad
call
add
outs
cmp
adc
mov
jo
std
inc
jp
in
sbb
xor
push
pop
xchg
sahf
push
call
mov
(bad)
dec
popf
out
sub
fs
(bad)
ja
gs
sbb
mov
(bad)
and
mov
loop
out
mov
mov
xor
push
xchg
mov
in
pop
popf
cmp
cmps
in
out
jne
cs
icebp
mov
lods
sub
loopne
imul
xor
jecxz
push
test
js
sub
jl
test
es
push
jmp
into
mov
mov
fcmovne
sbb
aad
ror
out
adc
mov
sub
iret
movs
fwait
int
xchg
bound
imul
xor
icebp
repz
xchg
inc
mov
fidiv
sbb
je
xlat
push
dec
leave
jno
sub
mov
dec
aaa
jg
push
cmp
jo
fnsave
push
inc
mov
pop
fxch
aas
pusha
js
inc
jns
out
and
add
and
adc
sahf
lss
ret
cmps
cmps
cmp
jge
push
mov
xor
adc
and
inc
fld
sub
jmp
fsubr
jns
push
mov
popa
ror
cmp
lods
push
sti
call
mov
sub
adc
inc
js
hlt
ficom
gs
loopne
into
enter
js
push
fnstcw
scas
mov
mov
(bad)
cli
test
mov
test
not
jmp
sbb
cmp
repz
xor
icebp
mov
cmp
jmp
mov
(bad)
int3
(bad)
mov
pop
(bad)
sub
mov
xchg
retf
into
sub
in
adc
xchg
jne
xchg
or
mov
jmp
adc
lock
mov
loope
out
and
jg
fnstcw
jge
stos
dec
aaa
lock
test
jecxz
dec
cmp
pusha
mov
pop
push
rcl
inc
xchg
(bad)
dec
divps
push
shl
test
cld
push
shl
mov
push
retf
or
pop
call
xor
loope
das
push
sub
push
xchg
dec
aaa
cld
pusha
out
push
cmc
shl
fcom
pushf
fistp
or
sbb
adc
stc
sar
ins
dec
fldenv
jecxz
jge
or
das
test
pop
inc
mov
das
sub
mov
es
inc
pop
mov
sti
add
or
test
jno
mov
cmp
xor
ret
cmps
(bad)
movs
xlat
dec
mov
scas
call
push
sub
cmp
lahf
int
push
pop
cs
xchg
popa
fist
pop
pop
outs
push
push
push
mov
sbb
jne
(bad)
sub
sub
mov
jmp
mov
fimul
fldcw
es
push
and
jns
rcl
mov
or
lds
jecxz
sbb
mov
add
loopne
ds
sbb
into
jns
mov
sub
add
xlat
xchg
xlat
mov
data16
xlat
int
mov
pop
sub
adc
cli
mov
fcom
movs
add
outs
popf
cmp
push
or
push
ins
push
cld
pop
mov
mov
and
and
jns
scas
iret
xchg
sub
adc
push
mov
movs
xchg
ss
aaa
out
mov
mov
mov
in
pushf
pop
dec
add
retf
sbb
imul
out
or
or
ret
pop
mov
sbb
cmps
pop
ret
mov
das
sbb
xor
jp
pop
lds
aas
xchg
out
adc
in
and
cld
enter
retf
mov
repz
loopne
mov
push
lods
jle
fnsave
or
rep
xlat
ret
into
mov
mov
dec
aaa
mov
jae
add
call
fimul
mov
(bad)
push
jno
(bad)
std
fwait
cmp
lahf
or
pushf
(bad)
pusha
pop
cmp
popf
xchg
scas
jmp
mov
clc
jl
jns
fild
push
add
dec
out
js
sub
inc
pop
mov
icebp
fs
clc
les
xchg
jecxz
mov
and
push
mov
dec
fs
mov
aam
push
ds
xchg
jg
mov
enter
je
data16
jmp
jmp
ret
scas
aaa
test
push
call
lahf
pop
mov
xor
cmp
mov
aas
jge
adc
popa
mov
minps
push
xchg
sbb
arpl
lock
daa
pop
pop
xchg
or
call
jbe
sahf
add
pop
scas
ss
aaa
jne
and
lea
ret
add
and
das
(bad)
call
mov
cmc
retf
loope
push
mov
push
inc
xchg
ror
or
les
lods
lds
xchg
jg
mov
or
int
out
call
out
mov
xlat
cmp
mov
retf
fwait
stos
pusha
pushw
jno
das
into
fs
add
test
xor
mov
xor
repnz
jae
xchg
jmp
aaa
stos
adc
xchg
repnz
cmp
pop
gs
ror
test
fbstp
out
(bad)
movs
leave
cmp
mov
repnz
inc
push
leave
cs
sbb
stos
pop
fst
mov
inc
test
cmp
(bad)
movs
stos
push
push
fist
mov
inc
lea
cli
enter
sub
lods
inc
sub
in
cmp
mov
hlt
mov
jmp
loope
repnz
push
push
add
sub
cmp
mov
and
jnp
fstp
mov
aam
gs
mov
and
jg
mov
jg
push
arpl
mov
(bad)
mov
xchg
popa
push
(bad)
rcl
cmp
fwait
std
cmp
add
mov
ffreep
sub
xor
(bad)
jmp
pop
mov
imul
xchg
mov
outs
(bad)
xor
xchg
adc
test
adc
xchg
jae
in
add
in
aas
and
jl
xchg
mov
jl
jb
scas
push
sub
xor
adc
inc
fstp
inc
or
mov
cmp
imul
dec
add
sub
inc
pmulhw
daa
add
out
das
add
xchg
ins
xor
call
rol
(bad)
cwde
ins
lahf
jb
in
pop
repz
mov
dec
jecxz
leave
adc
cmps
repz
pop
shl
into
sub
mov
jnp
jne
xor
dec
mov
rol
in
mov
imul
aam
pop
loop
jne
and
pop
jno
cwde
and
inc
call
ss
push
inc
or
and
mov
imul
sbb
sbb
loop
cmps
scas
jmp
sbb
inc
fimul
mov
outs
inc
bound
das
pop
mov
adc
icebp
call
mov
je
int
(bad)
ror
cmp
xchg
and
movs
lea
sub
enter
(bad)
test
mov
iret
mov
sub
fst
jmp
fiadd
jle
and
sahf
jl
push
push
ja
dec
rcr
leave
sahf
ins
dec
imul
jge
scas
mov
add
push
adc
lods
sbb
adc
or
out
pop
imul
fidivr
sub
mov
in
cld
lds
scas
out
ss
xor
jno
pushf
gs
xchg
std
xor
jmp
jb
int3
mov
pop
jmp
jmp
mov
or
mov
jno
pop
xor
push
mov
mov
or
dec
pop
lea
(bad)
rol
jo
mov
ja
jmp
in
les
sub
repz
std
in
ret
dec
or
push
mov
mov
mov
mov
adc
pop
ins
jb
sbb
inc
xor
ja
pop
je
mov
sbb
or
fs
inc
mov
not
lods
out
pop
jo
jp
pop
repnz
jns
ror
int
scas
and
das
loope
shl
arpl
xchg
test
push
retf
or
sub
repnz
xor
test
out
inc
stc
mov
stos
frstor
sbb
jmp
gs
dec
int
int
jae
pop
test
(bad)
mov
dec
sub
cmp
pop
adc
popf
jp
rcr
cmp
pushf
xlat
loopne
cmps
jnp
inc
push
or
add
in
mov
pusha
arpl
inc
imul
sub
fbstp
cmp
add
inc
pop
dec
cs
out
icebp
movs
iret
out
jg
aam
mov
jae
pop
push
inc
mov
xlat
popa
es
in
push
enter
xor
lahf
aam
jecxz
clc
pushf
adc
stos
cmc
icebp
dec
adc
mov
and
leave
ret
cmovge
cld
icebp
repnz
jno
int
loopne
aad
in
sbb
or
adc
les
call
adc
retf
test
add
icebp
jae
push
ret
stos
pop
add
fwait
retf
sbb
xor
and
arpl
cli
pavgb
mov
sti
ss
dec
inc
push
es
mov
mov
jp
push
sar
inc
cmp
(bad)
mov
fs
jmp
xchg
(bad)
pop
ins
mov
js
pop
mov
rcl
push
xchg
and
dec
pop
and
adc
xor
mov
or
js
and
jae
xchg
cmp
pop
pusha
imul
popa
(bad)
mov
gs
mov
push
xor
int3
cmp
data16
shl
bound
push
lea
lds
aas
push
ja
pop
pop
arpl
mov
push
dec
push
sbb
leave
sub
jecxz
ins
mov
pop
and
arpl
sbb
ins
test
cmp
stos
mov
clc
mov
sbb
es
xchg
mov
ds
xor
pop
out
jb
and
das
in
jl
adc
inc
jo
xchg
xchg
push
jbe
nop
popa
jne
pop
mov
popa
push
inc
cwde
dec
movntps
rcr
mov
jmp
out
pop
fs
ds
sub
test
add
adc
in
or
dec
add
das
jl
sub
add
xor
test
jge
in
int
dec
loopne
sbb
icebp
cmc
stos
cwde
inc
repnz
imul
inc
out
sub
jns
ret
sti
and
push
mov
push
aad
push
fdiv
adc
inc
mov
bound
mov
sahf
add
loope
xchg
lahf
call
ret
call
test
dec
cmc
mov
inc
fist
out
aaa
push
inc
adc
stos
push
adc
jo
(bad)
pop
ja
sar
add
int
mov
imul
fstp
and
retf
sbb
inc
leave
sbb
jns
shl
jp
lea
dec
repnz
outs
xchg
fwait
sti
mov
ficomp
icebp
add
xchg
mov
adc
push
(bad)
and
ins
mov
fwait
call
xor
out
mov
cld
add
aas
cmp
ja
mov
(bad)
jb
or
test
mov
sub
jecxz
cld
ss
fstp
cmc
movs
inc
xchg
add
cmps
fcmovnu
mov
jg
es
stos
int
mov
push
sbb
jbe
mov
cli
xor
je
cmp
sbb
imul
adc
push
sbb
push
pop
mov
cmp
cld
imul
aas
mov
ss
add
scas
js
aad
not
je
leave
mov
adc
inc
ins
arpl
retf
std
fild
loope
(bad)
sar
(bad)
push
dec
out
(bad)
stos
(bad)
sbb
loope
retf
adc
test
out
pop
sar
(bad)
ror
and
cmp
mov
jnp
inc
xchg
shr
add
jne
add
leave
loop
or
stc
sbb
dec
das
xlat
je
retf
jo
jmp
cmp
fimul
stos
rcr
jle
cld
jnp
cmp
lods
ret
bound
pop
nop
sub
stc
(bad)
pop
mov
fidiv
bound
lahf
shr
mov
rol
push
fsub
ins
test
cmp
sbb
inc
dec
push
inc
xchg
xor
(bad)
mov
in
shr
imul
not
dec
or
jge
sub
jne
dec
test
rcr
fisub
mov
arpl
inc
and
xor
shl
call
mov
aam
cmp
or
xchg
jnp
dec
pop
dec
scas
push
xchg
lods
jae
jbe
jb
xchg
push
xchg
stos
sar
xchg
mov
jnp
jp
bound
retf
lods
stc
mov
and
cmc
adc
cmp
jp
mov
jbe
pop
push
cld
mov
ja
test
ret
cmp
jl
lahf
enter
mov
inc
and
dec
ret
push
fild
popf
jecxz
cld
mov
and
dec
cmp
inc
(bad)
imul
jge
pop
adc
in
aas
call
out
test
gs
pop
cmp
cmp
adc
inc
inc
xchg
add
aaa
add
fidivr
ror
hlt
(bad)
icebp
push
sbb
and
mov
xor
push
jge
xor
push
or
test
jae
ret
dec
cli
gs
pop
or
cmp
ja
xchg
call
sbb
fst
(bad)
jo
ja
jle
or
mov
scas
and
stc
mov
imul
inc
mov
pusha
fisubr
adc
mov
ror
(bad)
pusha
push
loope
push
push
cmp
inc
ja
icebp
loopne
cmp
mov
push
pushf
jle
add
pop
jge
mov
mov
sar
test
jae
stos
xor
or
push
retf
repz
xchg
sub
xchg
cld
into
stos
ret
add
es
push
xor
sbb
shl
movs
repz
push
shl
sub
xor
dec
scas
std
pushf
or
add
and
jns
je
fisttp
push
ss
sbb
inc
retf
mov
dec
add
xchg
dec
into
xlat
push
hlt
test
(bad)
fdiv
and
ins
pop
sub
xchg
adc
lea
jb
mov
cld
out
cmp
aaa
push
dec
xchg
adc
retf
xlat
jne
xor
cmp
cmp
dec
add
clc
cwde
fsubr
cmp
jmp
pause
popf
or
cdq
addr16
cld
push
adc
icebp
data16
push
push
mov
lahf
inc
sbb
push
fwait
or
mov
xchg
(bad)
in
push
addr16
adc
mov
lds
sub
into
fbstp
fbld
sub
int
aas
sub
popa
mov
jmp
and
push
inc
cwde
jns
test
outs
cli
push
jmp
and
aaa
xor
scas
push
mov
(bad)
jb
mov
pop
(bad)
xor
xchg
pop
outs
inc
or
das
sbb
cs
push
inc
clc
inc
pop
mov
or
and
push
lods
pushf
pop
cmps
sar
mov
mov
jle
push
push
lods
nop
je
mov
shl
cli
lahf
aas
stos
mov
mov
(bad)
mov
add
ja
adc
je
hlt
cmp
push
stc
or
push
fld
mov
and
cmp
hlt
inc
cmp
stos
mov
outs
push
fist
push
daa
inc
into
mov
xor
xor
push
stos
cdq
mov
loopne
push
adc
popa
xchg
test
mov
sub
cmps
dec
jl
xchg
push
jg
xor
rcl
pop
data16
pop
cmps
push
ret
cmp
jecxz
iret
jns
add
adc
cmp
jb
mov
test
les
add
jmp
cmps
mov
xchg
push
jp
fs
cmc
dec
cmps
lods
loop
jl
loopne
stos
xchg
gs
cs
scas
and
int
outs
cs
mov
mov
sub
cdq
xchg
cmp
xchg
xchg
inc
push
jnp
ja
mov
pop
xlat
in
jecxz
popf
add
pop
sbb
fdiv
mov
xchg
sub
arpl
push
loope
or
loop
cs
add
push
test
pop
fs
popa
push
xor
clc
mov
jbe
sbb
add
adc
lahf
jl
pop
jne
(bad)
mov
out
mov
call
dec
cmp
mov
add
add
sti
repnz
push
inc
mov
add
into
dec
dec
sub
mov
add
repz
cmps
jg
push
movs
dec
adc
jns
xchg
mov
stos
xchg
mov
xor
sub
push
(bad)
add
sub
jno
pop
icebp
sub
xchg
mov
movs
sti
push
mov
adc
push
fistp
lods
mov
test
jbe
mov
clc
sar
mov
js
and
pop
mov
pop
in
daa
add
call
xor
jo
cmp
pop
(bad)
int3
cli
add
and
dec
add
sub
cs
mov
int3
mov
jge
shl
clc
lods
lods
popf
cmps
cmps
iret
call
xor
(bad)
lods
inc
pop
mov
dec
ja
xchg
xor
mov
adc
dec
aam
test
or
jg
es
push
(bad)
cli
sahf
jmp
push
lock
cmp
in
mov
push
inc
jbe
(bad)
dec
or
mov
push
or
in
sub
jo
rol
cli
add
mov
loop
mov
xchg
int
push
call
test
xchg
in
fmul
pop
sbb
shl
icebp
push
pop
outs
adc
fidiv
xchg
out
adc
arpl
loop
call
js
dec
mov
frstor
lods
push
out
retf
aad
sahf
inc
mov
test
arpl
cmps
dec
mov
mov
jnp
jmp
fwait
jb
push
in
push
lahf
xor
lods
cs
mov
xchg
(bad)
add
pop
pop
push
pop
ins
leave
pop
xchg
pusha
gs
adc
(bad)
outs
pushf
fistp
loop
pushf
inc
loopne
xor
push
xlat
xchg
mov
sbb
nop
adc
add
mov
pop
mov
and
pop
shl
mov
sbb
cmp
int
repz
jmp
sti
into
pop
mov
pusha
fistp
movs
sub
add
push
sbb
out
push
inc
sbb
addr16
out
mov
adc
push
push
aam
xlat
ins
jg
jp
enter
cmp
jo
ret
ss
stc
or
and
xor
sub
pop
fldcw
mov
cmc
mov
fsubr
and
xchg
imul
maskmovq
not
push
mov
inc
adc
sbb
(bad)
mov
or
fwait
pop
mov
inc
int
jecxz
add
sub
(bad)
or
jge
mov
jo
fisubr
lods
mov
imul
sub
lea
cwde
outs
mov
or
mov
nop
scas
retf
add
and
lds
call
cmp
push
push
cmp
mov
add
in
xchg
hlt
jmp
add
(bad)
pop
into
ror
add
jbe
xor
(bad)
scas
mov
or
xchg
lahf
xor
mov
int
(bad)
xchg
push
mov
rol
retf
xor
out
aad
mov
scas
enter
retf
fist
mov
es
pusha
cmp
and
dec
add
add
in
adc
mov
xor
dec
(bad)
popa
test
ret
push
mov
mov
sub
sub
xchg
popa
movs
js
mov
xor
call
repz
sub
addr16
in
outs
out
popa
mov
daa
jl
popa
sub
shl
(bad)
pusha
shl
icebp
or
mul
inc
retf
add
mov
dec
and
ins
ss
ds
pop
dec
adc
add
pop
fisttp
mov
lods
mov
jp
xchg
push
(bad)
ss
out
jo
xchg
mov
or
inc
or
xor
leave
xchg
xchg
test
jp
sbb
cmps
int3
xchg
sub
sbb
pop
cmps
mov
loope
and
jo
fadd
repnz
inc
lods
fwait
aad
aam
xchg
repz
or
xchg
or
push
add
jae
sti
sar
out
xor
push
call
test
movs
sbb
inc
inc
pop
sub
push
mov
and
imul
mov
ret
rcr
es
lds
icebp
rol
jnp
fisub
inc
mov
cs
movs
pop
mov
call
xor
shl
fld
cmps
enter
fsubr
jo
cmps
inc
pop
xchg
adc
mov
in
fst
inc
lods
stos
call
jo
push
cmps
or
ja
movs
repnz
dec
mov
dec
and
xchg
cmps
call
push
cs
lea
cmc
inc
xchg
lahf
fs
fstp
daa
(bad)
push
jmp
inc
jmp
or
add
mov
inc
repz
dec
jmp
or
aad
retf
imul
dec
dec
arpl
out
xchg
inc
ret
or
push
and
jp
push
jns
scas
call
cmps
frstor
mov
(bad)
cmc
mov
stc
cmps
(bad)
mov
aaa
stos
sbb
(bad)
fsqrt
sub
je
inc
and
xchg
dec
push
mov
cmps
cmps
pop
cmp
cmp
rol
cwde
xchg
movs
mov
jns
cmps
cld
imul
aas
sbb
std
pop
cmp
movs
cld
mov
mov
xor
xchg
mov
(bad)
fsubr
aam
push
and
fcomip
addr16
sub
jg
add
pushfw
or
mov
ins
repnz
lahf
push
retf
nop
mov
mov
ds
xor
repz
je
push
pushf
sbb
or
(bad)
jp
mov
retf
xlat
ret
adc
ja
sbb
aam
push
int
xor
ret
fst
push
or
test
mov
mov
mov
(bad)
mov
adc
sti
icebp
retf
dec
lea
je
rcr
mov
aaa
dec
retf
and
popf
mov
stos
xor
inc
jl
int
dec
sub
test
or
xor
mov
fwait
iret
fist
out
push
out
shr
out
cmp
mov
shl
sbb
out
adc
shl
ror
jne
mov
arpl
xchg
cmp
inc
aas
int3
outs
movs
or
add
push
ret
ret
div
jl
jmp
mov
setno
push
rol
sti
mov
or
sub
sbb
pop
mov
inc
add
inc
xchg
cmp
mov
repnz
popa
add
(bad)
lea
fadd
bound
and
cmp
inc
pop
pop
(bad)
mov
mov
pop
dec
aam
mov
xchg
add
dec
shl
test
stos
jge
inc
cmp
mov
stc
sbb
push
lea
icebp
dec
test
cli
mov
stc
cmp
push
cmps
enter
retf
jle
sub
jmp
inc
xor
mov
mov
xchg
movs
rcl
dec
into
pusha
rcr
jle
cdq
outs
rol
imul
inc
prefetch
test
repz
test
pop
pusha
push
push
jecxz
fdiv
lods
dec
in
std
jl
fisub
pop
dec
int
fwait
(bad)
(bad)
leave
test
xor
rcl
fimul
fdivr
add
sub
sub
sbb
inc
mov
imul
es
mov
or
mov
pop
fsubr
test
push
cli
shr
mov
lods
ffreep
cs
inc
test
scas
retf
mov
jbe
mov
xor
sub
fcmovb
call
popa
arpl
add
jb
adc
push
and
xor
or
jo
int
cld
bound
adc
(bad)
cmp
dec
ror
inc
mov
fadd
pop
mov
cli
adc
bound
stos
cmp
icebp
fwait
mov
cs
adc
fcmovb
aad
stos
repz
mov
ret
mov
cmc
loop
sub
sbb
out
shl
inc
push
and
xchg
rcr
call
cmp
cs
xchg
or
push
xor
test
inc
cmp
cmp
and
push
test
add
lods
fstp
pop
out
mov
in
pop
cdq
not
mov
pop
jb
xor
xchg
fnstenv
fisubr
lods
and
adc
xor
mov
xor
pop
js
cmc
dec
jle
imul
add
retf
jp
lods
sbb
xor
mov
xor
addr16
xor
adc
adc
pop
push
ja
sbb
sub
add
dec
and
fsubr
scas
adc
cmps
dec
iret
pop
dec
xchg
xchg
ret
addr16
sub
cwde
outs
pushf
fst
mov
stos
xor
dec
push
jle
stos
fmul
aaa
mov
test
inc
int
dec
xchg
(bad)
movs
xchg
das
jb
outs
loop
jge
dec
sar
dec
and
retf
cdq
sub
xor
dec
int
shl
outs
push
mov
cld
jo
sbb
push
and
cmp
push
cwde
ins
movs
enter
and
cmp
cmp
mov
and
adc
cmps
push
sbb
retf
add
or
sahf
out
sahf
cli
mov
add
repnz
pusha
sub
dec
aas
popf
cmps
and
(bad)
mov
rol
cmp
(bad)
retf
test
adc
jecxz
adc
xchg
or
push
and
js
das
inc
sub
mov
jmp
fadd
push
call
jg
(bad)
sahf
movs
adc
ret
xor
stos
repz
xchg
ja
fwait
movs
inc
out
lds
xchg
dec
xor
fisubr
popa
mul
jg
add
mov
jae
in
pop
fwait
and
sbb
lock
movs
loopne
push
fstp
mov
pusha
xchg
add
les
dec
aas
(bad)
retf
sub
xchg
jmp
das
mov
inc
mov
ins
nop
lea
jle
mov
push
and
movs
in
ins
xor
leave
bound
clc
jno
sbb
mov
ret
xor
pop
sar
in
sbb
mov
cmp
lods
inc
jp
repnz
fs
lods
mul
rcl
in
dec
cwde
aam
and
bswap
leave
scas
or
jo
outs
mov
fwait
mov
idiv
or
call
ror
loope
mov
sbb
mov
cli
or
cmps
sbb
add
mov
xchg
enter
aad
popf
outs
mov
mov
pop
inc
xchg
push
aam
imul
mov
mov
or
ror
in
push
xchg
out
sub
ret
into
xchg
mov
jecxz
into
pushf
stc
jge
push
cmc
push
test
out
and
pop
mov
test
xlat
ds
push
mov
cmp
jmp
retf
push
(bad)
test
push
(bad)
sub
dec
and
(bad)
cmp
xchg
dec
inc
dec
sub
mov
fdiv
clc
xor
or
and
push
push
sbb
test
push
fild
cmps
xchg
cmc
inc
xchg
int3
add
jns
call
push
sbb
fidiv
movs
(bad)
das
inc
sub
lods
push
or
outs
dec
sbb
adc
(bad)
fidiv
sub
ficomp
and
xchg
int3
jnp
pop
xor
push
sahf
jmp
mov
ins
and
push
mov
sbb
push
adc
push
xor
dec
aas
or
mov
es
fidivr
ror
inc
and
mov
jno
xchg
clc
sahf
dec
sub
cmp
test
pop
sub
popf
les
pop
aam
and
call
pop
push
sub
ins
push
out
xchg
push
out
xor
xchg
add
inc
test
add
loope
aas
rcl
and
add
stos
mov
mov
cmp
sub
imul
sbb
jl
(bad)
movs
mov
and
popf
cmp
arpl
and
xchg
gs
imul
addr16
cmp
dec
jbe
add
pop
leave
clc
sbb
mov
add
les
lock
sub
stos
imul
xchg
mov
gs
mov
mov
cli
mov
mov
pusha
js
jns
scas
dec
sbb
lahf
push
pop
mov
cmp
dec
fs
sahf
cmps
push
mov
into
sub
cwde
pop
xor
fmul
xchg
xchg
sub
mov
xor
outs
jnp
jmp
inc
dec
or
ja
sar
shl
pop
pop
std
mov
cdq
lahf
push
call
pop
xchg
retf
mov
(bad)
cmp
inc
cmp
xchg
stc
inc
loope
loopne
pop
jle
push
add
into
mov
mov
mov
cmp
adc
add
jecxz
xchg
fdivr
sub
(bad)
fld
sbb
or
(bad)
jp
jp
stos
loope
and
xchg
push
add
pop
or
xor
out
push
fsubr
(bad)
sbb
cdq
push
pop
mov
jne
in
or
push
push
outs
jo
sbb
add
push
test
lds
xor
mov
push
inc
bound
dec
out
xor
add
add
vmovaps
mov
inc
mov
add
push
nop
loope
push
dec
pop
in
les
pop
outs
adc
int3
stos
mov
(bad)
dec
pop
sbb
push
push
or
ins
cdq
add
imul
div
mov
cmp
xlat
pop
les
mov
out
jne
mov
sar
push
bound
jno
retf
call
and
fnsetpm(287
xor
das
hlt
sbb
ds
inc
and
xor
outs
std
and
and
mov
mov
inc
std
out
xor
outs
out
mov
jmp
push
cmp
repz
repz
nop
jecxz
mov
adc
fwait
xchg
xor
jae
xor
push
jl
dec
popf
xchg
fs
cmp
sub
and
psrld
add
pusha
cmp
pushf
mov
(bad)
jo
mov
stos
jmp
mov
push
clc
and
mov
jecxz
or
mov
repz
or
movs
or
iret
lea
shl
jmp
mov
xor
dec
mov
in
and
fwait
inc
adc
xor
call
and
sub
sub
mov
mov
dec
mov
dec
(bad)
xor
sub
cmp
fwait
add
mov
xabort
xor
fcomp
cwde
and
cmp
adc
sar
cmp
jno
jge
cmp
xchg
push
mov
cmp
sahf
outs
cmp
es
aam
or
mov
cmps
sti
imul
mov
sti
pusha
ins
add
mov
lds
jmp
fadd
shl
(bad)
div
dec
mov
in
or
sbb
out
pop
lock
outs
cmps
scas
or
push
inc
xor
push
jle
addr16
fist
sahf
sbb
inc
or
xchg
mov
xchg
adc
xor
je
loopne
mov
sbb
(bad)
shl
rcl
bound
cmp
and
popa
lods
dec
push
loopne
stos
not
enter
in
pop
mov
adc
cwde
(bad)
jmp
cmp
imul
loope
imul
mov
mov
or
push
pop
ror
mov
mov
mov
daa
retf
in
or
or
retf
and
xchg
out
or
repnz
xor
jns
jne
xlat
mov
cmp
rol
jno
pop
jns
mov
or
inc
jecxz
xchg
mov
sti
mov
dec
mov
push
and
and
adc
(bad)
movs
out
push
mov
icebp
call
dec
imul
rcr
push
pop
adc
enter
xchg
mov
mov
fcom
in
pop
or
nop
adc
sub
dec
out
sub
pusha
pop
adc
pop
xor
and
push
mov
add
xchg
xchg
pop
dec
pop
(bad)
and
sub
mov
or
ins
xor
js
or
fwait
les
into
mov
(bad)
int
push
sub
std
sub
ret
(bad)
cmp
cli
je
ins
fld
jo
mov
and
sahf
mov
cmp
popf
fld
in
test
inc
dec
push
fsub
xor
sbb
cs
mov
and
lea
(bad)
sub
xchg
dec
xor
mov
jno
das
in
lock
bound
shr
punpckhbw
(bad)
fcmove
mov
push
jo
add
stos
imul
mov
pop
das
sbb
int3
adc
aaa
jle
pop
push
mov
mov
fidiv
add
call
jnp
outs
scas
and
scas
gs
sub
cdq
mov
fistp
and
imul
lahf
cs
shl
pop
sub
out
jo
mov
lods
sti
adc
(bad)
ins
adc
xchg
and
mov
inc
fs
movs
mov
call
daa
inc
push
jns
dec
or
inc
stos
loopne
out
push
ret
or
call
int3
and
fnstsw
dec
sbb
ds
jge
stos
hlt
and
push
jg
push
mov
and
or
inc
xchg
push
cmp
int3
jg
loopne
adc
mov
pop
mov
xchg
stos
xor
popa
cmp
cwde
jl
sub
push
inc
in
cmp
jno
test
push
mov
xlat
pop
mov
xchg
ss
int3
in
pushf
adc
fwait
mov
jne
mov
outs
fisub
dec
xor
outs
mov
mov
clc
dec
gs
test
retf
jg
xor
in
add
jl
cmp
and
push
and
pushf
or
fstp
mov
lds
inc
sbb
or
push
in
aas
vpcmpeqb
lahf
cmc
or
mov
arpl
sub
rcr
ret
dec
aad
push
add
or
inc
in
adc
repnz
je
xchg
xchg
and
adc
pop
add
jl
push
out
movs
add
enter
js
jno
sbb
cld
loop
call
xchg
xor
jb
test
sbb
(bad)
addr16
out
inc
jbe
push
xor
fisubr
sti
cwde
(bad)
inc
mov
loop
xor
int3
cmp
mov
dec
adc
xchg
fwait
jnp
pop
cmp
ret
mov
retf
jle
xchg
lock
mov
sub
aam
push
push
push
pop
fldenv
mov
pop
movs
jl
in
std
jmp
shl
dec
scas
adc
lods
not
ret
movs
sub
popa
xchg
sahf
fdiv
mov
lock
mov
cmp
jp
scas
es
jmp
add
and
cmc
enter
stos
xchg
xor
popa
ficomp
scas
mov
jge
add
pop
ret
xor
aaa
shl
jno
rol
(bad)
repnz
out
mov
and
scas
inc
out
dec
addr16
icebp
jns
adc
imul
mov
leave
xor
popf
cmp
jecxz
dec
push
pop
mov
ja
scas
add
xlat
mov
push
xor
jb
js
lods
pusha
mov
inc
inc
mov
push
pop
std
fstp
and
pop
int3
in
daa
add
mov
hlt
jl
mov
loop
jle
fisub
push
ss
jle
lahf
push
imul
jl
bound
mul
adc
iret
in
pop
test
mov
cmps
fcmovnu
bound
pushf
sub
or
pop
inc
and
xor
retf
clc
rcl
inc
(bad)
xor
mov
add
push
inc
adc
mov
rcl
xchg
xor
or
popf
pop
inc
fstp
ins
lea
push
xor
out
(bad)
fisub
xor
out
add
xor
cmp
inc
loopne
es
xchg
cmc
fmul
call
mov
lds
out
xchg
push
cs
cmps
pushf
mov
jg
inc
jns
xor
or
cmps
jecxz
std
jae
or
cmp
retf
dec
push
dec
inc
ds
jns
call
cmp
mov
aam
adc
lock
shl
pop
movs
in
sbb
ins
and
pop
pushf
inc
stos
fcomi
xor
jno
mov
dec
jle
xchg
(bad)
(bad)
cmp
pop
and
(bad)
mov
clc
xchg
popf
sbb
or
sub
and
retf
pop
jo
fcomp
pop
shr
not
jp
cmp
outs
in
cmp
mov
add
sbb
and
pushf
xor
sub
adc
sub
std
out
imul
mov
mov
inc
ss
inc
in
nop
mov
inc
loope
clc
and
jae
outs
sub
mov
mov
out
mov
idiv
adc
cpuid
xchg
pop
stc
inc
out
push
cmp
lock
(bad)
cli
retf
(bad)
test
xor
mov
iret
push
dec
sub
lahf
sub
or
adc
out
adc
and
loop
jmp
iret
mov
popf
int3
cmp
jl
xchg
push
(bad)
call
inc
aas
ds
mov
lea
xchg
imul
pop
repz
jl
outs
inc
inc
enter
or
pop
mov
jae
loop
inc
jp
fwait
push
scas
dec
add
in
into
cmp
lods
push
mov
shl
inc
int3
stos
daa
test
mov
cmp
push
sbb
cmp
cmp
in
lods
cmp
test
movs
mov
xchg
mov
sbb
call
outs
push
jecxz
and
cmp
lahf
cld
mov
push
mov
dec
pop
stos
aam
inc
stc
popa
sar
jle
cdq
mov
dec
sahf
and
imul
mov
loope
scas
test
adc
pop
and
ss
push
lahf
xor
ficomp
pop
imul
in
jecxz
cmp
and
fwait
pop
sub
(bad)
xchg
jmp
jnp
in
ins
dec
imul
inc
pop
mov
push
ja
pusha
mov
xor
int
mov
cs
dec
cmp
inc
add
pop
or
outs
cmp
pop
cld
xchg
add
cmp
cmps
add
mov
into
(bad)
adc
mov
adc
mov
stc
jecxz
iret
in
imul
xchg
fimul
push
mov
es
ja
add
test
pop
mov
cwde
jecxz
cmp
aas
pop
mov
or
push
jp
je
jmp
fadd
push
and
call
pushf
mov
mov
or
(bad)
enter
push
jp
dec
jnp
leave
imul
cli
mov
mov
or
xor
pusha
mov
fwait
aas
sbb
xchg
cmps
aam
(bad)
fistp
sub
push
mov
sub
setns
sub
bound
addr16
mov
ret
pop
sti
cmp
dec
lock
jl
and
adc
push
dec
jbe
and
mov
std
fdiv
xor
div
push
lods
fcomp
sub
xchg
add
jecxz
mov
mov
mov
jmp
xor
idiv
jne
push
mov
and
and
add
into
and
mov
icebp
rol
pop
and
in
ss
mov
pop
mov
mov
adc
fcmovu
mov
icebp
jo
retf
loop
cs
jmp
adc
ficom
xor
sahf
loop
stos
(bad)
int3
loope
movs
ins
lea
xchg
syscall
pop
cld
push
int
leave
jg
fiadd
mov
or
mov
push
pop
iret
bnd
jle
leave
cld
arpl
inc
in
scas
test
out
cmp
inc
and
xor
pop
fistp
out
and
mov
mov
xor
fidiv
in
mov
or
lahf
cld
sbb
(bad)
test
ds
arpl
adc
dec
mov
cmp
ins
and
cmp
out
mul
mov
cmps
popa
scas
(bad)
or
cmp
(bad)
aad
lahf
in
rol
xchg
mov
pop
jae
inc
jbe
mov
enter
and
sub
jl
jmp
xor
pop
je
jmp
aad
pushf
aad
stos
mov
jb
call
fucom
mov
lods
mov
jnp
push
adc
repnz
outs
add
cmc
or
inc
cmp
mov
xchg
mov
mov
push
lods
mov
and
push
ffreep
fsub
sti
and
(bad)
movs
pop
xchg
ins
pop
pop
xchg
jo
in
ss
xchg
test
jne
push
movs
and
pop
outs
popa
mov
mov
push
inc
or
int
rol
adc
sbb
aam
clc
jp
(bad)
cmp
lahf
jno
shl
add
mov
dec
lea
mov
jle
jl
mov
mov
jb
aas
popa
jno
cmovno
mov
sbb
mov
push
jle
inc
mov
cbw
push
mov
adc
mul
outs
and
jns
cmps
out
cdq
dec
ret
fcmovne
(bad)
cmp
repnz
pop
stos
dec
xlat
fdivr
pop
jmp
shl
jbe
lock
mov
ja
fist
mov
dec
xor
cmp
mov
stos
aas
fnstsw
xchg
neg
mov
xchg
or
and
cmp
dec
dec
and
imul
xchg
inc
dec
adc
scas
loop
add
mov
call
add
hlt
shr
adc
idiv
push
rol
sub
retf
xchg
add
sahf
sub
jns
dec
mov
and
cwde
fldcw
aas
push
mov
jb
jmp
lea
call
jns
fcomi
cmp
xor
mov
or
(bad)
sbb
mov
(bad)
(bad)
mov
popf
out
jge
push
mov
xor
(bad)
jns
dec
or
sbb
sbb
lock
sub
xor
pop
mov
xlat
lods
mov
push
inc
adc
out
and
js
or
mov
into
jb
nop
push
std
mov
aaa
push
repz
cmovno
sbb
fild
aaa
sbb
sub
mov
data16
add
sbb
les
leave
push
das
ret
jno
add
adc
pop
inc
neg
jp
adc
in
dec
aam
into
rol
mov
xor
std
sub
in
daa
retf
xor
ficom
and
or
imul
rol
add
and
inc
mov
cmp
dec
pop
xchg
push
xchg
jb
shr
ds
fsub
out
mov
jne
and
int
add
jg
xor
dec
mov
test
cmp
fidivr
or
rcr
adc
pop
sub
call
adc
push
cmp
into
loopne
mov
jbe
sub
adc
add
fwait
stos
dec
ret
jmp
cmp
add
inc
repz
or
cmp
icebp
cmp
adc
and
out
or
mov
add
mov
pop
pop
ins
out
outs
xlat
(bad)
dec
(bad)
sub
es
xor
jmp
pcmpgtw
mov
push
fist
cmps
ss
jmp
xchg
mov
scas
cmps
dec
dec
fstp
mov
mov
xor
dec
xchg
xor
pop
dec
xlat
scas
push
les
cs
jb
popf
xchg
mov
lea
pop
xchg
inc
cmp
jo
enter
fst
or
stos
mov
inc
imul
add
loopne
push
cmp
rcr
in
mov
test
leave
jno
add
jnp
mov
lea
rcl
jnp
fsub
pushf
and
xor
imul
xchg
cmp
out
jbe
scas
and
xlat
push
jmp
sbb
out
stc
rcr
and
xchg
pop
adc
dec
outs
push
dec
pop
pop
sbb
in
jmp
dec
popf
or
popa
loopne
mov
std
data16
mov
loope
cli
popa
movs
adc
out
jne
loopne
mov
imul
dec
mov
mov
or
out
(bad)
add
shl
shl
mov
out
test
mov
test
js
push
push
test
cmp
outs
(bad)
cmp
call
shl
jae
out
mov
inc
pop
mov
jnp
lea
daa
or
lods
ds
inc
lods
pop
retf
popf
adc
hlt
push
push
push
pusha
test
and
(bad)
fidiv
inc
imul
mov
in
shl
aam
or
daa
in
stos
(bad)
mov
ins
aad
mov
jne
popf
out
imul
sbb
es
mov
movs
dec
or
ds
mov
jno
jnp
ud1
or
mov
int3
jae
jle
lods
cld
xlat
mov
cmp
iret
ins
sub
mov
mov
test
enter
xchg
mov
imul
sub
and
adc
daa
inc
add
test
xor
mov
aas
pop
mov
es
mov
sbb
cmps
or
adc
cmps
or
call
adc
call
xchg
call
and
stos
mov
(bad)
fnsave
inc
jae
stc
jne
(bad)
leave
(bad)
sbb
inc
out
push
je
cmp
arpl
dec
xchg
imul
and
sub
xchg
mov
aas
out
(bad)
dec
cmp
gs
repz
jmp
shl
dec
outs
sahf
jmp
xchg
scas
pusha
enter
lock
push
movs
jg
mov
outs
and
mov
mov
pop
movs
jo
movs
movs
xchg
mov
(bad)
mov
cmp
xchg
xor
add
pop
mov
push
push
xchg
sub
imul
or
adc
add
(bad)
sbb
scas
and
sub
(bad)
cld
ins
(bad)
je
push
out
mov
ins
mov
or
leave
and
in
pop
mov
inc
sbb
dec
adc
pop
or
aas
dec
sahf
jecxz
xor
(bad)
push
jne
dec
call
arpl
lea
sub
pop
daa
push
xchg
jge
push
out
test
cmp
add
pop
nop
movs
xchg
arpl
enter
test
movs
ins
fs
or
popf
and
lods
xchg
retf
or
sub
jbe
adc
sub
fucom
mov
popa
imul
loopne
add
fdiv
(bad)
cld
or
cdq
inc
or
stos
lds
xchg
shr
(bad)
push
xchg
sub
cmps
xchg
(bad)
js
add
fdiv
push
arpl
add
nop
cs
xchg
adc
or
add
mov
or
(bad)
in
aam
cmp
pop
(bad)
mov
shl
(bad)
and
ds
hlt
jbe
sub
inc
sub
std
out
and
rcr
loop
jmp
pop
fdiv
add
daa
in
pop
xor
xchg
mov
aaa
jbe
je
leave
pushf
jno
xor
sbb
pusha
pop
lods
movs
cdq
mov
xchg
fsub
fwait
xchg
push
stos
mov
jno
inc
repnz
sahf
int
sbb
dec
repz
pop
xlat
push
add
xchg
daa
in
sub
push
mov
in
repnz
retf
xlat
daa
cld
mov
jl
std
sbb
retf
iret
mov
push
adc
scas
out
sbb
fdiv
fsub
sub
stc
inc
into
jnp
clc
cmp
and
data16
out
ficom
dec
arpl
mov
test
push
mov
push
mov
mov
mov
iret
loope
fucomp
retf
aaa
add
ror
mov
fcom
jbe
sub
dec
and
xor
push
imul
aas
mov
cmp
add
cdq
push
and
push
outs
adc
imul
add
gs
sbb
rcr
ins
cmps
cmp
inc
dec
adc
es
repnz
sti
cwde
and
ss
loope
mov
cdq
aas
nop
push
xchg
jo
dec
or
sti
pop
mov
fadd
sub
bound
jle
xchg
xor
xor
adc
xchg
mov
fmul
sbb
sbb
mov
xlat
icebp
inc
retf
xlat
cld
jecxz
inc
fist
mov
add
jae
fisubr
test
or
outs
(bad)
xchg
test
out
div
jp
mov
ss
idiv
fidiv
dec
mov
xchg
into
lock
sbb
fmul
mov
fcom
bound
hlt
sub
stos
xchg
aaa
or
add
or
mov
and
nop
cld
dec
dec
jns
mov
xchg
xor
jbe
rcr
mov
loop
popa
push
jge
mov
mov
jge
fiadd
inc
movs
sar
mov
int
ja
mov
mov
pop
in
lods
adc
loop
dec
je
dec
retf
lahf
push
fst
(bad)
jmp
arpl
mov
imul
out
add
mov
cmp
push
daa
or
jg
ffreep
movs
or
mov
jo
fadd
cmp
inc
add
or
inc
xor
mov
or
rcl
dec
out
aaa
repnz
aaa
inc
loop
cs
push
sbb
push
imul
ret
push
xchg
fisttp
xchg
mov
mov
outs
je
fcomp
adc
dec
push
pavgw
test
push
unpcklps
lea
and
push
jge
sbb
popf
push
and
outs
dec
sahf
or
add
mov
sbb
sub
(bad)
jmp
daa
popf
or
rcr
sub
or
imul
mov
je
push
push
aas
movs
jp
sub
lea
mov
cld
enter
mov
mov
bound
jecxz
and
jp
push
cmp
icebp
mov
retf
mov
test
scas
jle
adc
loope
jge
push
mov
int
test
scas
ins
retf
push
pop
bound
popa
stos
xchg
pop
jb
ja
inc
mov
aas
fidivr
and
adc
adc
into
in
int3
mov
ja
xor
inc
adc
(bad)
outs
sti
jmp
sub
nop
mov
cmps
mov
mov
add
inc
repz
fstp
mov
fdiv
or
mov
dec
mov
adc
je
addr16
xchg
aad
and
jnp
add
jg
fs
inc
sub
addr16
or
cdq
lods
dec
sub
stos
xchg
(bad)
icebp
nop
xchg
nop
pushf
pop
enter
mov
sub
mov
retf
mov
push
lods
or
dec
adc
gs
pop
dec
push
or
jno
mov
sub
out
aad
lahf
xor
ret
out
hlt
mov
cmp
mov
push
jae
inc
add
in
sbb
sub
or
popf
sub
(bad)
jae
xchg
ret
in
cmc
div
xchg
lock
adc
mov
adc
jmp
push
hlt
int
div
dec
(bad)
in
xlat
jmp
sbb
sbb
add
or
cmp
imul
mov
push
rcr
or
(bad)
out
lahf
popf
lods
lods
push
leave
xchg
mov
mov
sub
js
cmp
call
jno
test
mov
xor
xlat
out
cmps
and
cmp
cmps
lds
inc
sub
or
fdivr
cmp
push
aad
dec
gs
sbb
in
xchg
mov
shr
dec
xor
mov
daa
in
int3
sbb
mov
or
inc
push
ja
frstor
mov
test
test
mov
fstp
(bad)
mov
add
enter
mov
and
adc
jmp
int
pop
inc
mov
pushf
jbe
add
or
push
and
daa
pushf
or
in
mov
lahf
je
jbe
adc
jnp
sbb
inc
inc
inc
stc
jnp
lds
outs
add
xchg
popf
sar
jp
shl
inc
adc
adc
push
div
cld
push
mov
int3
popf
(bad)
cli
(bad)
call
sub
sti
cld
fadd
fcomp
jns
repz
pop
cs
loop
mul
loop
out
dec
mov
lods
int3
nop
and
dec
retf
pop
inc
mov
or
add
mov
mov
jmp
imul
jle
inc
xor
sub
and
xor
arpl
pop
jbe
pop
sbb
lock
pop
add
xor
mov
(bad)
aam
jno
sbb
lock
lea
movs
pop
pushf
rcr
or
fs
xchg
retf
out
push
(bad)
gs
lods
or
dec
aad
jbe
fisubr
jbe
popf
mov
imul
mov
push
(bad)
xor
loop
rol
jmp
movs
std
cmp
jmp
fxch
popf
mov
imul
ret
js
and
test
call
and
aas
in
clc
sti
cmp
daa
adc
sub
or
jb
leave
sti
js
shl
cmp
mov
push
dec
adc
shl
(bad)
(bad)
aam
xor
push
popf
xor
cmp
or
jle
and
mov
pop
cmova
cmp
sub
(bad)
dec
or
jp
addr16
xor
loope
daa
enter
ficomp
jmp
cmps
mov
cli
lea
mov
cli
adc
lods
adc
jge
adc
mov
jg
jns
cli
jnp
bndldx
jb
mov
les
(bad)
into
or
and
mov
push
fisttp
retf
xchg
fwait
jecxz
jl
mov
pop
xor
mov
sub
sbb
and
cmp
pop
scas
stos
rcl
cmp
mov
(bad)
jmp
stos
adc
add
mov
sbb
outs
add
clc
cld
mov
xlat
mov
ror
or
loop
std
lock
and
jae
fsubr
push
sbb
add
dec
xchg
adc
push
mov
mov
lds
push
leave
ins
jmp
jecxz
add
std
(bad)
addr16
jbe
pop
sbb
fnstcw
push
sahf
mov
int
aam
(bad)
jl
xchg
call
jge
and
(bad)
push
add
cmc
fmul
std
jecxz
mov
cmp
pop
add
cmp
ret
ja
retf
push
loopne
xchg
sub
fisubr
sub
and
jmp
enter
mov
jg
xor
loop
test
and
rcr
shl
and
push
(bad)
mov
inc
rol
mov
or
call
in
add
jecxz
xor
push
mov
xchg
and
iret
(bad)
mov
test
cmp
xor
int
ja
mov
js
repnz
and
out
fidiv
pop
cmp
lock
dec
jecxz
jbe
dec
ds
jmp
adc
mov
xchg
push
dec
cmp
test
dec
hlt
ins
pop
xlat
aas
inc
push
loop
popa
mov
mov
scas
ret
rol
ss
(bad)
cmp
repz
popa
(bad)
je
call
sar
xchg
adc
cmp
jns
mov
and
cli
add
jg
sti
add
lods
adc
ja
aam
add
rcr
cvtpi2ps
rcl
push
scas
pop
adc
bound
gs
or
icebp
cs
inc
mov
jmp
cli
ret
sub
mov
xchg
add
push
xor
rcl
adc
push
addr16
xchg
push
mov
ret
pop
imul
hlt
clc
jecxz
gs
dec
mov
cmps
jle
mov
in
cmc
sub
outs
inc
pop
ror
pop
cmp
inc
icebp
dec
out
jo
inc
inc
mov
jnp
dec
add
std
push
call
sub
sbb
stos
test
adc
or
add
sub
push
fwait
adc
pusha
mov
shr
test
adc
setae
xchg
jbe
dec
in
shr
outs
and
cmps
push
loope
das
out
push
call
push
mov
inc
inc
mov
add
sbb
popf
jecxz
stos
cmps
pop
sub
outs
popf
jb
inc
cmp
mov
ins
popf
jp
cmp
add
jno
dec
call
jne
int
xchg
ins
and
and
cmps
dec
push
adc
jne
dec
stc
mov
mov
aas
cmp
dec
or
or
and
add
int3
jg
mov
(bad)
mov
add
mov
mov
and
ret
nop
int3
ret
into
retf
pop
add
and
outs
push
push
fwait
clc
pop
sbb
mov
popf
and
xor
mul
jb
xchg
add
mov
add
mov
loop
std
push
jmp
push
jmp
pop
jb
and
dec
xor
dec
cmp
jmp
jp
mov
aas
lea
xchg
in
lea
dec
test
jle
icebp
call
dec
inc
jmp
cmp
loopne
or
popa
js
jp
clc
jbe
fwait
jae
loop
adc
shl
cmp
mov
sub
push
mov
cmp
repz
mov
es
lea
sbb
add
fst
mov
(bad)
sbb
adc
mov
cli
inc
movs
cmc
mov
or
mov
push
mov
mov
(bad)
push
ins
cld
jmp
hlt
jmp
xor
sbb
repnz
xchg
out
jno
leave
dec
pop
arpl
pop
dec
(bad)
cmp
cmp
mov
or
shr
ror
push
adc
xor
inc
add
(bad)
aad
loopne
dec
adc
xchg
xlat
adc
fadd
hlt
loop
pop
popf
es
cs
xchg
dec
pop
inc
enter
(bad)
stos
out
inc
adc
cmp
lock
ja
loopne
hlt
mov
lock
shrx
test
mov
aaa
dec
std
adc
xor
push
xor
pop
push
std
cmps
or
int3
imul
aas
cmps
out
fsubr
(bad)
mov
mov
outs
inc
loop
std
js
icebp
add
ret
or
xchg
adc
cmps
or
out
jne
xchg
daa
fist
cmps
lahf
sub
jo
xlat
movs
inc
or
jo
mov
xlat
outs
sub
into
iret
leave
mov
sbb
add
xchg
lock
inc
loope
jbe
inc
cmp
ins
in
mov
shl
stos
lods
pop
add
jmp
into
sub
cmp
cld
das
pop
sub
scas
push
(bad)
pop
ins
xchg
mov
sahf
cs
jno
movs
movs
mov
sbb
mov
pop
rcr
cmp
or
jbe
cld
(bad)
mov
cmps
jecxz
sbb
inc
inc
pop
sub
ret
movs
dec
out
push
jnp
push
dec
adc
enter
fcmovne
and
push
enter
fcom
jmp
int3
lods
push
ins
mov
push
mov
mov
xchg
and
mov
(bad)
imul
pop
add
add
ficom
sbb
pop
sbb
fld
jb
pop
ss
mov
fst
mov
jmp
shr
into
or
ret
ror
ds
ja
ror
ja
and
(bad)
xor
(bad)
push
retf
cmp
mov
data16
add
adc
cmps
mov
mov
add
mov
push
mov
jge
adc
sbb
and
fiadd
loope
sbb
shl
loop
cmp
sub
sbb
fistp
pop
popa
iret
sbb
pop
pop
jle
jno
jmp
sti
jno
push
nop
sub
mov
out
jecxz
hlt
mov
sbb
mov
sbb
test
xor
jg
mov
and
mov
ins
ss
rol
ret
add
push
test
aaa
push
mov
lahf
pop
jb
faddp
pop
inc
dec
inc
jp
push
add
scas
(bad)
inc
repnz
xchg
jno
push
adc
cld
jno
outs
sbb
jl
retf
ficom
shl
sub
push
and
mov
dec
add
sbb
cmps
test
mov
in
sbb
(bad)
gs
xchg
aas
adc
pmulhw
fistp
js
int3
jg
sbb
cdq
xor
mov
add
adc
fcom
cmps
pop
ins
jg
push
fistp
xor
xchg
mov
mov
mov
xchg
xlat
cli
fcomp
pop
jl
cmps
cdq
inc
or
pop
out
je
xchg
cld
loopne
bnd
ret
mov
mov
leave
jle
cmp
push
scas
(bad)
mov
icebp
ja
sbb
xchg
test
mov
mov
dec
pop
xor
mov
cmp
sub
lahf
test
cmp
or
clc
adc
gs
push
mov
pop
xor
mov
mov
jns
fs
push
and
dec
jmp
cmp
retf
les
mov
dec
psrad
stos
js
jg
jns
call
xor
jmp
(bad)
out
call
push
into
pop
pop
cli
es
cdq
push
add
jg
pop
cmps
inc
inc
call
jns
imul
das
retf
scas
mov
mov
in
ror
call
mov
mov
cmp
frstor
push
adc
fidivr
in
lahf
out
pop
mov
ss
stos
inc
fstp
mov
xchg
or
or
add
stos
test
inc
mov
(bad)
frstor
mov
inc
shl
jl
pop
lea
jo
or
mov
sub
mov
mov
pushf
or
cmps
mov
fst
in
movs
movs
or
mov
dec
lock
push
mov
ss
jo
(bad)
sub
cmc
dec
outs
pop
xchg
xchg
sbb
xchg
into
jecxz
(bad)
and
jno
cmp
lods
in
lock
je
test
mov
dec
lahf
add
arpl
lods
adc
add
add
fldenv
push
cmp
mov
shr
push
in
test
lods
xor
push
pop
xchg
push
add
add
or
inc
int3
xor
into
movs
leave
aaa
mov
daa
pop
cmps
adc
(bad)
call
push
sub
pusha
pushw
add
push
xor
jmp
adc
movs
mov
or
popa
cmp
setnp
mov
add
in
cmp
es
jl
pop
add
dec
in
stos
xchg
lock
test
push
pop
std
bound
and
or
mov
xor
imul
in
push
loopne
into
(bad)
and
xor
dec
mov
and
push
lods
inc
mov
mov
rol
fmul
leave
popa
pop
mov
pop
fild
loope
int3
popf
xor
call
scas
fwait
jge
fmul
pop
push
cmc
std
push
or
fbld
dec
sbb
rol
add
inc
mov
push
jge
xchg
popa
repnz
xor
aas
mov
retf
les
and
mov
lahf
shl
out
inc
lds
addr16
sbb
pushf
pop
push
jle
push
and
jl
pop
call
inc
bound
inc
jmp
cmp
mov
into
mov
jo
adc
inc
and
fimul
dec
cmp
sub
jo
jne
scas
retf
mov
cld
and
jle
std
or
push
jmp
pop
int
jae
out
or
sbb
cdq
jae
popa
cmp
cmp
add
les
les
dec
dec
mov
adc
pop
sub
and
sub
sub
pushf
test
test
mov
dec
adc
inc
int3
rcr
ficomp
pop
xor
xlat
ins
(bad)
xor
mov
mov
fsubr
xor
dec
dec
cmp
or
push
inc
inc
dec
jl
push
add
inc
ja
push
call
mov
stos
lea
mov
adc
int3
fisttp
pop
push
aas
adc
mov
jg
repz
je
out
leave
push
adc
lods
mov
in
jnp
pushf
or
sub
cli
jecxz
xor
jne
dec
out
mov
stos
out
(bad)
xor
sbb
call
aam
mov
jmp
xor
mov
xchg
mov
xor
outs
cli
add
add
push
(bad)
sbb
ds
pop
mov
inc
fwait
ja
retf
mov
popa
mov
mov
test
movs
jl
dec
or
adc
inc
(bad)
(bad)
fdivr
add
xchg
loopne
sbb
push
push
cli
cwde
data16
stc
sub
cmps
jno
sbb
mov
adc
sub
or
bound
sub
jb
push
jne
(bad)
daa
clc
add
sub
(bad)
rcl
outs
or
xlat
cmc
out
sti
and
mov
jns
shl
or
cmc
cmp
or
pop
lods
iret
xor
sub
dec
sub
mov
call
cmc
sahf
repnz
cs
sbb
(bad)
loope
or
jge
cmp
sahf
dec
xchg
add
sub
shl
jp
inc
mov
push
pop
nop
sti
xchg
sbb
iret
lods
das
iret
sbb
dec
adc
and
cwde
push
jp
retf
not
push
fistp
in
xchg
xor
pop
imul
cmp
int
aam
scas
jo
add
shl
mov
sub
xor
adc
cdq
shl
push
jnp
and
xor
pusha
jo
out
cld
aaa
mov
adc
pop
rsqrtps
or
pop
aaa
and
mov
(bad)
retf
jge
out
push
aam
push
lahf
mov
leave
out
scas
in
inc
cdq
xchg
(bad)
imul
call
cmp
sbb
push
clc
fnsave
or
or
or
bound
outs
ret
sbb
fxch
fwait
push
xor
clc
jbe
pushf
jbe
inc
mov
mov
(bad)
mov
push
out
sub
mov
ret
adc
sbb
enter
or
fidivr
shl
fcmovne
cmc
(bad)
inc
in
ins
mov
movs
and
jg
and
(bad)
pop
jnp
fmul
ja
daa
in
cmp
xchg
jbe
cs
jl
mov
or
popf
movs
popf
dec
mov
sub
mov
into
pop
movs
push
cmc
inc
shl
rol
push
pop
pop
jmp
aad
stos
clc
push
ja
shr
(bad)
int3
xchg
outs
mov
jns
push
mov
sbb
jecxz
cmps
dec
mov
push
fwait
retf
(bad)
les
enter
xchg
hlt
test
mov
jnp
sbb
movs
add
stc
pop
mov
xchg
lods
adc
in
(bad)
push
mov
retf
das
push
(bad)
fisttp
call
retf
(bad)
sbb
jl
xor
mov
sbb
pusha
jle
retf
jmp
cmp
dec
fdivr
scas
sbb
les
mov
cli
xor
mov
cdq
fsubr
xchg
(bad)
repnz
neg
xor
(bad)
call
or
xchg
jg
cmp
cmp
dec
psrlq
cld
(bad)
popf
xor
(bad)
mov
cmps
mov
retf
ins
ja
clc
fstp
ins
hlt
shl
test
xchg
jg
jo
and
scas
mov
fiadd
shl
loope
lds
lods
clc
lods
push
and
mov
or
and
retf
or
add
int3
icebp
mov
push
imul
movs
addr16
adc
out
das
call
das
adc
xchg
xchg
push
mov
mov
mov
mov
jo
jne
jle
sbb
and
jnp
stos
jp
jecxz
inc
iret
mov
stos
and
xor
lds
shr
jg
ror
mov
inc
jmpw
pushw
jne
stos
jbe
aam
cmp
inc
jecxz
add
sub
fistp
popf
rcl
jno
xor
cmc
in
jb
lods
clc
fs
rcl
mov
sahf
retf
lds
jge
retf
cs
ret
mov
xor
(bad)
ins
push
popf
je
fwait
jge
les
and
xchg
pop
cmps
xor
cmps
pop
xor
fimul
add
xor
sbb
inc
jge
mov
js
fiadd
je
or
sahf
sbb
retf
dec
dec
mov
dec
jnp
sbb
ja
lods
mov
and
repz
je
lahf
aas
xchg
jb
out
or
add
sub
jne
daa
xchg
sti
jno
retf
push
outs
adc
ins
add
repnz
dec
(bad)
ret
jmp
lahf
lods
call
iret
(bad)
sar
mov
cmps
gs
or
xchg
jnp
cmp
test
adc
adc
fdiv
cdq
fistp
mov
or
push
inc
mov
add
cmp
dec
push
aam
mov
sahf
imul
push
mov
stc
inc
add
(bad)
out
or
repnz
jae
sbb
fwait
aaa
jmp
inc
daa
cmp
sub
pop
das
xor
jnp
inc
dec
inc
jmp
mov
addr16
sbb
cmp
enter
jns
mov
inc
sbb
daa
(bad)
mov
push
push
sub
int3
fisubr
ret
fdivr
fnsave
add
push
inc
repz
xor
rol
xchg
fucomi
mov
out
sub
jl
shl
inc
sub
push
dec
(bad)
in
push
(bad)
repz
adc
mov
push
aas
inc
add
mov
mov
jae
mov
enter
shr
enter
les
cmc
pushf
mov
in
js
popa
std
mov
in
scas
lods
xchg
mov
jge
push
jbe
and
or
add
(bad)
inc
jmp
stos
out
(bad)
jne
icebp
xchg
mov
xchg
(bad)
in
outs
loope
inc
scas
fistp
fstp
shl
call
jmp
xchg
xchg
sti
pushf
push
mov
(bad)
movs
lods
(bad)
ins
dec
call
jecxz
jecxz
pandn
rcr
inc
cmp
cwde
addr16
xchg
mov
(bad)
pop
and
cs
dec
lea
adc
pop
(bad)
popf
xchg
or
dec
cmc
ins
(bad)
and
cmp
xor
lahf
pop
sti
push
xor
cmp
mov
add
lock
pop
or
and
lds
fild
sbb
mov
loopne
ss
fmul
int3
sar
adc
ret
jle
fsub
int
mov
mov
push
sahf
test
mov
aas
fcom
in
or
pop
and
sub
call
xor
lods
lods
jns
pop
std
sub
jle
std
pop
mov
push
mov
mov
and
cmc
ficom
iret
inc
fwait
push
test
add
xchg
aas
cmovb
call
aad
ror
cld
repnz
pop
out
and
gs
out
or
movs
cmp
pop
xchg
mov
fistp
(bad)
mov
lahf
sbb
retf
pop
cmp
mov
rcl
cld
xor
mov
movs
fisttp
cdq
sar
ficom
test
fadd
(bad)
in
jbe
(bad)
jp
cmp
bound
mov
outs
xor
mov
popa
sbb
inc
cwde
push
ret
stos
or
pop
jmp
cmp
jge
rcr
or
rcl
popf
mov
mov
inc
fmul
xor
add
stos
pop
retf
or
(bad)
pop
loop
loope
xor
cmp
push
cs
(bad)
loop
repz
xchg
push
int3
(bad)
jns
push
inc
and
and
data16
pushf
mov
adc
jg
das
push
jbe
arpl
xor
mov
sti
imul
pop
int
mov
test
repnz
push
lea
pop
out
and
mov
inc
adc
or
mov
test
outs
lods
fistp
jnp
xor
scas
sbb
dec
ins
jb
cs
mov
shr
aas
ds
adc
lock
jle
aaa
mov
(bad)
sub
push
rol
lock
adc
test
pop
pop
dec
mov
mov
mov
mov
fcmovb
add
mov
sbb
lds
int
(bad)
jl
add
cs
mov
repz
retf
rcl
arpl
sti
sar
xor
into
inc
bnd
nop
dec
test
ret
pop
outs
dec
add
test
in
or
jns
xor
adc
or
outs
dec
cmp
and
inc
rol
nop
dec
xchg
sbb
call
out
sbb
sbb
xor
mov
sbb
pusha
cmp
scas
pop
aad
enter
imul
push
xor
pop
in
push
data16
add
sbb
(bad)
outs
cmps
lahf
inc
pop
js
add
adc
sbb
inc
jo
jns
xchg
mov
push
ds
or
mov
jo
leave
(bad)
jo
jp
sub
daa
jnp
ret
or
(bad)
stos
(bad)
mov
inc
inc
mov
or
adc
jmp
dec
cdq
inc
jmp
test
fbld
jb
(bad)
cwde
mov
mov
ffree
fisttp
ja
mov
sub
sub
jne
sbb
add
pop
or
xor
sbb
enter
sub
xchg
adc
sub
(bad)
stc
popa
push
or
mov
jg
sub
xchg
into
scas
into
icebp
push
and
inc
or
jne
mov
out
imul
sbb
mov
fisttp
mov
push
xchg
int3
call
jbe
sub
stos
xchg
enter
int
mov
neg
sub
das
mov
xor
adc
xchg
pushf
add
push
jnp
or
lods
cmc
push
add
cmp
out
sti
mov
hlt
or
pop
pusha
cmps
cdq
pop
test
dec
pop
popa
mov
push
and
(bad)
out
stos
xchg
dec
cmp
adc
lods
int
dec
out
or
ret
(bad)
jle
and
je
and
add
push
outs
mov
mov
ins
popf
cmp
push
push
pop
(bad)
fld
in
jno
stos
cmp
push
add
(bad)
cmp
or
jg
ins
iret
daa
in
dec
cmp
mov
(bad)
push
sub
dec
pop
clc
push
(bad)
mov
data16
and
push
shl
retf
and
fsubr
cmp
or
pop
cmp
push
and
jp
bound
inc
dec
call
push
je
fs
or
shr
push
es
iret
das
push
mov
pop
mov
mov
in
bound
int3
adc
scas
xor
stos
pop
push
dec
adc
or
into
adc
xchg
mov
add
out
sbb
push
(bad)
scas
or
adc
(bad)
jge
mov
sbb
pop
ss
stos
rcr
cmp
rcl
sub
or
stos
cli
push
push
and
inc
scas
sbb
leave
xlat
pop
xchg
cwde
jl
daa
jecxz
ds
xchg
xchg
mov
scas
jae
scas
std
sbb
fbld
nop
scas
pop
(bad)
stos
leave
rol
(bad)
and
mov
test
push
jno
aad
inc
out
mov
sub
sbb
into
mov
aaa
and
dec
and
test
lahf
jecxz
test
add
sbb
mov
ss
xchg
(bad)
mov
cwde
dec
and
test
xor
test
out
and
lds
fs
in
test
mov
inc
dec
pop
jp
xchg
mov
adc
fstp
cmp
mov
adc
inc
mov
(bad)
lock
cmp
imul
add
ret
mov
jg
sbb
aad
fmul
pop
dec
sbb
(bad)
ins
cmps
jecxz
hlt
push
je
fnsave
rol
lea
and
xchg
mov
add
in
(bad)
(bad)
pop
aad
lea
mov
inc
test
mov
mov
add
mov
inc
loop
mov
sti
in
(bad)
xor
adc
int
mov
retf
xor
call
ret
(bad)
jge
mov
push
dec
scas
cmps
inc
mov
int
jmp
repnz
int
fnstenv
pop
daa
jg
xchg
sub
cli
mov
inc
cmp
xchg
push
dec
mov
jmp
gs
jle
jp
mov
dec
stos
jg
(bad)
aam
fadd
loopne
mov
pushf
inc
(bad)
pop
in
cld
add
call
outs
push
sub
test
push
ins
out
push
shr
mov
(bad)
lahf
mov
scas
ins
dec
jns
pop
jnp
and
(bad)
gs
add
jmp
add
shl
jmp
pop
retf
ins
ficomp
and
jp
daa
ds
ins
mov
sbb
or
call
sbb
shl
jp
inc
test
ja
outs
dec
and
inc
aas
push
fsubr
add
sub
or
cld
(bad)
push
mov
cld
in
xor
jo
push
xlat
adc
push
imul
dec
call
xchg
fsubr
jb
daa
popa
pop
push
pop
ret
pop
xor
ret
imul
push
jmp
ds
sbb
in
loopne
das
add
pop
xchg
jle
movs
push
std
ret
xor
push
stos
cmps
cmc
das
(bad)
push
jle
(bad)
fdiv
lods
fisttp
add
xchg
xchg
add
mov
add
das
ret
or
cwde
cmp
push
sub
inc
es
bswap
mov
xchg
mov
cld
xchg
sbb
fnstenv
sub
retfw
xchg
and
lea
(bad)
jne
popa
pop
and
in
cmp
cmp
adc
nop
das
cmps
retf
xor
jae
mov
add
(bad)
dec
and
xchg
xor
inc
sbb
stc
xchg
mov
loopne
lahf
pop
mov
lds
repz
stos
in
jb
or
std
js
cmp
dec
jb
mov
(bad)
jmp
mov
addr16
jl
adc
inc
xchg
repnz
in
mul
mul
ja
inc
dec
(bad)
leave
out
stos
inc
mov
frstor
mov
inc
cmp
cmps
mov
retf
jg
outs
lock
jmp
imul
xchg
dec
cmps
mov
out
push
xchg
movs
xchg
mov
cmp
cmp
cwde
loope
dec
jge
inc
cmps
bound
pop
push
sbb
les
outs
das
xor
inc
push
loopne
ja
sub
sub
sbb
addr16
out
push
popa
xchg
mov
jl
dec
arpl
aas
mov
movs
add
arpl
mov
push
rcl
jle
mov
xchg
cmps
mov
sar
and
xchg
and
jle
cmp
(bad)
jp
xor
sbb
cmp
push
int3
shl
xchg
call
dec
ins
mov
repnz
mov
cmp
dec
cmp
retfw
out
add
adc
xchg
xchg
sbb
dec
lahf
pop
sbb
lock
in
xor
xor
mov
scas
xor
(bad)
mov
aam
mov
cmp
mov
ss
add
dec
and
sbb
js
xor
or
jmp
dec
popa
jmp
xchg
loope
ja
xor
pop
retf
in
xchg
sub
add
adc
rol
dec
cmp
cs
xlat
or
es
pop
stos
mov
(bad)
and
sbb
sbb
push
push
xchg
push
push
and
repnz
popf
movs
cmp
pop
push
dec
inc
out
lods
or
or
pop
inc
jmp
ja
movaps
in
inc
pop
imul
xlat
(bad)
std
dec
mov
cmp
fldcw
jno
push
ss
mov
mov
sub
dec
sbb
mov
out
xchg
in
mov
fs
into
repz
cmp
cmc
mov
leave
in
(bad)
cmp
mov
imul
add
mov
cmps
xchg
inc
lods
add
mov
push
sub
or
mov
jno
cmp
sbb
jb
mov
mov
pop
cwde
test
ins
std
mov
das
in
sbb
inc
movs
cmp
jb
lock
cmp
xchg
shl
mov
lock
aas
adc
push
xor
mov
xor
lahf
push
xchg
and
mov
push
test
pop
rcr
mov
popf
xchg
push
jl
nop
sub
dec
xor
mov
cs
ficom
inc
mov
sbb
dec
in
mov
or
pop
add
rcr
mov
inc
push
push
daa
outs
enter
adc
jmp
(bad)
int
jns
(bad)
in
test
fistp
dec
xchg
outs
pop
data16
popa
mov
shl
fiadd
push
out
jle
xor
adc
cwde
mov
outs
jnp
in
fstp
into
loopne
or
jge
mov
ret
inc
xor
cwde
retf
iret
mov
imul
inc
repz
jbe
cmp
push
fldenv
movs
ss
movs
mov
mov
add
jp
out
xchg
xlat
jb
xor
mov
xchg
fimul
mov
in
ins
jbe
(bad)
cdq
fistp
mov
sub
inc
inc
pushf
inc
cmp
mov
shr
ins
sbb
inc
cmp
cwde
iret
or
cs
mov
mov
inc
add
in
iret
test
inc
pop
jmp
and
cmc
mov
mov
xor
sbb
mov
inc
jg
retf
std
pushf
and
mov
mov
or
sub
cli
imul
dec
es
les
xchg
jne
mov
dec
jg
imul
xor
cmps
mov
std
xor
mov
cmp
xor
adc
icebp
mov
fisubr
in
adc
imul
pop
test
lahf
test
scas
pop
mov
inc
sbb
jnp
ss
shl
add
add
pop
mov
cmp
mov
and
movs
cmp
enter
xchg
test
and
adc
ret
xlat
jg
(bad)
loopne
sbb
int3
sbb
int
inc
jmp
push
imul
push
mov
pusha
jns
je
fwait
xchg
and
out
shr
add
or
push
inc
mov
xor
mov
test
jae
and
retf
outs
es
mov
or
or
jp
mov
mov
mov
fisub
adc
enter
dec
imul
mov
push
in
add
inc
nop
dec
mov
add
ficomp
pop
leave
inc
and
sar
movs
(bad)
iret
xlat
out
vmovaps
(bad)
cli
sub
out
sub
jbe
mov
mov
enter
adc
out
shl
mov
sbb
pushf
imul
ins
call
or
cs
mov
shr
mov
outs
imul
xor
adc
fs
or
pop
hlt
mov
(bad)
xor
cmc
or
pop
push
loopne
ror
or
(bad)
push
sbb
push
stos
lahf
add
push
mov
sub
cld
aad
dec
or
(bad)
mov
test
pusha
arpl
xchg
sub
rol
fidivr
sahf
test
add
in
pop
cmp
imul
cmp
inc
add
push
jno
xor
rcr
pop
pop
sbb
pop
or
cmp
mov
mov
pushf
inc
jb
adc
xchg
pop
cmp
cdq
in
fisttp
mov
mov
imul
sar
mov
mov
cs
bound
call
adc
call
jmp
clc
aad
and
mov
imul
push
mov
fsub
jl
sbb
xor
test
xchg
ds
or
adc
movs
xchg
call
push
xor
xchg
test
ss
sub
lods
add
cmps
cmp
test
mov
(bad)
std
push
sub
xchg
aad
dec
adc
sahf
sbb
dec
sar
mov
lahf
push
mov
iret
cdq
sbb
inc
jp
ins
cmps
and
dec
daa
mov
mov
pop
or
(bad)
mov
cmp
pushf
add
test
mov
cmc
sub
or
(bad)
jnp
test
jae
bound
cld
clc
push
mov
cmps
dec
pop
mov
retf
bound
(bad)
xchg
adc
ret
xchg
and
pop
sub
sbb
mov
jno
(bad)
aaa
stc
mov
jne
scas
cmp
pop
xchg
mov
enter
or
js
arpl
pop
push
dec
out
push
inc
cli
mov
pop
in
call
(bad)
cwde
shr
sub
xchg
inc
sar
shl
xchg
jp
stos
iret
mov
imul
add
jle
jle
test
pop
ins
fwait
and
inc
inc
pop
jbe
ins
daa
or
and
movs
inc
je
imul
inc
cs
jnp
ret
adc
or
jmp
cwde
les
mov
mov
ins
inc
sti
sub
popf
inc
and
push
jmp
or
mov
add
inc
xor
pop
or
mov
loop
push
lock
cdq
lock
test
enter
addr16
shl
adc
jg
xchg
adc
dec
push
jne
mov
xor
cld
xchg
out
push
and
sbb
sub
(bad)
(bad)
adc
fmul
je
cli
test
dec
inc
xor
xchg
popf
and
mov
or
nop
fsub
lods
mov
and
pop
cdq
test
dec
cmp
into
fwait
ror
cmp
jnp
or
jo
dec
cmp
cmp
mov
lock
lods
stos
pop
aad
repz
cs
pop
pop
mov
pop
or
xor
mov
lds
dec
test
cwde
and
cmps
jmp
fsubp
cmps
cwde
mov
or
mov
(bad)
sti
xor
lahf
xlat
sub
or
repnz
pushf
push
cmp
shr
cmp
cmp
fdivr
or
and
pop
xchg
push
push
test
dec
dec
and
loope
and
cs
rol
addr16
dec
and
lock
in
mov
sbb
and
sub
xlat
data16
or
pop
xrelease
jg
loopne
inc
cmp
cmp
dec
push
ffree
push
out
outs
movs
jo
enter
(bad)
shr
imul
mov
cmp
mov
retf
in
gs
adc
arpl
mov
mov
(bad)
add
clc
mov
xor
adc
and
fs
add
sbb
ret
xchg
jp
add
xor
or
mov
in
ret
dec
and
aaa
call
popf
out
sub
inc
jno
add
mov
sbb
sub
pop
pop
fs
pop
cmc
or
ret
jp
jmp
popa
mov
dec
in
daa
mov
cmps
in
retf
dec
jg
rol
pop
dec
jno
cmps
sbb
dec
dec
popa
cmp
xchg
js
mov
ror
cmp
jecxz
js
loopne
loopne
jmp
mov
repz
lock
sub
stc
add
sub
test
int
test
mov
fisttp
xlat
push
add
xchg
sti
js
xlat
iret
sti
push
aaa
sub
dec
mov
push
xchg
shl
push
adc
cmp
lods
outs
ss
fisttp
xor
stos
fistp
popf
test
bound
adc
je
lea
mov
movs
sar
or
hlt
shl
adc
jns
mov
cmp
in
cmp
mov
or
ret
jbe
dec
test
mov
mov
es
sub
xchg
pop
jmp
inc
pmullw
movs
mov
jle
mov
mov
stos
jle
adc
stos
jg
pop
xchg
cwde
(bad)
popa
icebp
in
ja
xchg
popf
and
jg
and
cmps
jae
inc
lock
aas
push
push
pop
fdiv
je
icebp
inc
cs
push
or
mov
mov
dec
loope
cmp
xchg
call
rol
int
adc
ss
mov
ret
stos
jcxz
push
jmp
cs
sbb
xchg
ins
in
inc
inc
mov
push
cmp
jg
aam
push
int3
sbb
xor
pop
xor
push
or
fwait
xchg
dec
jp
inc
paddq
or
mov
daa
int3
sub
and
mov
iret
ds
sbb
movs
clc
mov
fwait
sti
push
push
repz
sbb
sub
mov
leave
push
sahf
pusha
cmc
cs
or
test
fist
outs
cs
repz
jg
mov
lods
nop
js
inc
aas
ins
add
add
jle
xchg
cmps
in
ins
sahf
jae
push
cwde
sub
jae
repz
mov
inc
aam
out
xor
dec
das
jae
test
xchg
sub
sub
inc
pop
or
outs
pusha
iret
mov
jecxz
add
adc
scas
add
and
push
test
pop
scas
pop
nop
and
cld
xor
mov
jle
outs
rcr
push
jg
(bad)
sub
add
ds
mov
mov
pushf
mov
cmp
dec
pop
push
jne
and
nop
test
call
sbb
sub
scas
xchg
out
mov
mov
cs
jo
push
sbb
sbb
stos
shl
xor
fadd
dec
loope
jl
in
xchg
mov
or
out
add
dec
(bad)
ja
push
ror
xchg
pop
std
sbb
mov
les
push
sub
sbb
rol
sahf
jbe
push
and
in
out
in
sbb
stos
imul
mov
in
pop
imul
cwde
xor
mul
arpl
lahf
jo
fisttp
push
inc
xlat
ror
pop
push
inc
adc
jge
aad
inc
loop
jge
sbb
pop
lods
pop
daa
arpl
sbb
ins
jle
mov
jg
popf
ds
mov
sub
pop
dec
div
mov
ins
sbb
fucomp
sbb
lods
dec
lds
daa
inc
cmp
minps
sbb
or
inc
fldenv
jns
dec
clc
or
xor
std
std
inc
jb
adc
stc
sbb
loop
adc
fnstsw
fcom
cmps
pop
aaa
cli
mov
fimul
cmp
mov
sub
jmp
in
and
mov
pop
xor
fdiv
push
imul
mov
nop
cmp
and
leave
pop
jbe
fwait
out
xor
sbb
loopne
hlt
or
in
jge
cmps
xor
mov
jle
sbb
pop
outs
or
cmc
lds
mov
cmp
dec
imul
cmp
mov
adc
dec
push
loope
xchg
popf
or
enter
sub
es
repnz
ja
test
xchg
inc
xchg
or
add
cmp
add
pop
cmps
gs
sbb
mov
dec
lds
push
xor
call
(bad)
dec
pop
das
xchg
call
inc
mov
js
lods
cld
xchg
and
ds
jne
push
push
into
xor
nop
out
pushf
and
fdivr
mov
in
shl
test
inc
test
fnsave
pop
add
push
pop
mov
in
push
aam
mov
xchg
aas
push
adc
sub
and
pop
mov
repz
lock
mov
jmp
mov
(bad)
jne
xor
adc
aad
mov
push
jle
ins
pop
popa
sbb
dec
inc
imul
rol
sub
mov
cwde
push
cld
mov
sbb
adc
in
push
mov
test
lds
add
xchg
sbb
pop
mov
xchg
les
(bad)
xchg
cmp
and
adc
repnz
jecxz
in
inc
dec
es
lahf
adc
retf
bound
add
call
lods
enter
shr
mov
jnp
arpl
ins
mov
call
pusha
pop
mov
stos
cwde
mov
or
stc
lds
fisub
in
aas
adc
aam
stc
push
push
jb
rol
sti
and
test
jl
push
adc
rol
mov
add
mov
and
cmps
fstp
mov
lock
test
gs
daa
xor
icebp
call
dec
dec
pop
lock
mov
inc
push
sbb
adc
mov
xor
ds
jns
sbb
mov
shl
push
mov
outs
mov
mov
sbb
shl
ja
and
faddp
adc
xor
and
push
cli
mov
mov
jg
jne
xchg
out
movs
adc
popf
test
(bad)
mov
ins
outs
push
or
test
or
ror
push
pop
test
xlat
sub
push
mov
cdq
jle
movs
inc
or
rcr
jb
jb
push
inc
movs
push
mov
mov
je
xchg
add
pusha
ja
shl
imul
sti
xchg
xchg
xchg
sbb
mov
push
rcr
outs
nop
sub
jns
add
sahf
and
jmp
je
loopne
dec
add
aam
adc
bound
sub
(bad)
movs
(bad)
mov
adc
mov
fwait
sub
inc
and
pop
pop
imul
sub
adc
sbb
pop
ins
jns
sar
(bad)
pop
xchg
cwde
cwde
aas
daa
arpl
push
mov
(bad)
leave
cmp
outs
out
retf
inc
loope
dec
sbb
call
jg
aaa
fs
loop
sub
shr
retf
cmp
retf
push
sub
jge
(bad)
or
outs
mov
repz
mov
push
test
mov
div
jmp
dec
(bad)
and
popf
xchg
out
sub
mov
xor
inc
inc
jbe
push
xchg
or
dec
mov
in
jmp
or
sbb
(bad)
fidivr
stos
add
xor
(bad)
lea
(bad)
es
xchg
popf
idiv
add
in
repz
sub
aad
fstp
cmc
fmul
cmc
ret
pop
dec
into
cmp
jbe
lds
or
xor
scas
adc
xor
cmp
cmp
hlt
outs
dec
out
push
dec
or
cwde
jmp
or
cmc
lea
lahf
and
in
add
stc
and
sbb
add
das
jmp
mov
push
or
cmp
out
repnz
jbe
scas
rcl
shl
loopne
cmp
inc
inc
sbb
loopne
xor
test
mov
inc
add
inc
imul
cmps
mov
pop
mov
(bad)
jae
adc
sub
lahf
outs
in
ja
je
loope
(bad)
mov
push
mov
test
push
cmps
mov
mov
not
gs
int
fcomp
imul
mov
aas
setp
leave
movs
adc
adc
jnp
fucomp
ds
imul
js
popf
jg
xchg
outs
fwait
push
repnz
xchg
mov
or
rol
fild
mov
sub
(bad)
jmp
xor
mov
sub
sti
sbb
test
cmp
out
cli
arpl
xor
and
retf
aaa
and
(bad)
leave
sti
daa
shr
repnz
icebp
or
cmp
cmp
mov
pop
pop
pop
jl
xchg
stc
xchg
jb
fdivr
(bad)
sahf
(bad)
jmp
mov
mov
aas
and
call
sbb
int
ficomp
adc
pop
in
fbld
test
ins
mov
ja
or
int
sahf
pop
fiadd
xchg
pusha
aas
xchg
and
call
fild
int3
mov
sbb
add
ins
fistp
data16
repnz
into
lds
inc
jb
adc
push
sahf
fist
dec
stos
pop
inc
int
sbb
mov
cmp
xor
jns
loop
jg
jbe
xor
adc
or
loopne
pop
lock
aaa
inc
(bad)
out
push
adc
jo
jmp
loopne
xchg
imul
call
push
xor
add
xor
inc
data16
jmp
out
dec
mov
xchg
rcr
aad
fsubr
retf
xchg
sbb
fisub
cmps
sbb
ror
and
(bad)
les
dec
mul
rol
pop
out
dec
xchg
sahf
mov
mov
test
jbe
lea
addr16
(bad)
sahf
mov
adc
pop
and
xor
and
idiv
jne
dec
jle
js
and
je
sbb
sub
sbb
push
push
add
pop
scas
mov
add
jecxz
repz
sub
dec
xchg
sub
push
pop
cmp
xchg
mov
dec
adc
jg
dec
int
jmp
or
ffree
mov
fwait
shr
sub
xchg
and
and
call
fs
outs
inc
push
int
xor
push
int3
sub
setno
sbb
adc
jmp
dec
clc
or
popf
retf
mov
jle
lahf
and
xor
je
into
sbb
dec
ret
retf
adc
ror
cmp
mov
adc
fcom
jle
xchg
push
adc
jge
jl
pop
rcr
or
je
cwde
sub
dec
cmp
ret
fcmovnbe
push
pop
cmc
mov
hlt
dec
cmp
add
in
call
lods
cmps
(bad)
pop
loope
mov
mov
xor
clc
lahf
pop
mov
inc
cwde
jo
stos
test
dec
cmc
mov
xchg
xor
mov
pop
ret
pop
shr
xchg
popa
out
dec
xchg
add
mov
scas
outs
push
sti
mov
pusha
push
ror
es
fwait
jg
adc
adc
popa
push
js
std
das
ret
add
xor
jg
hlt
mov
jae
dec
loop
mov
or
pop
xor
stos
lods
mov
or
add
in
cmp
jne
jb
sahf
ret
shr
mov
int3
test
repnz
stc
sub
scas
add
mov
cmp
mov
fdiv
and
or
jne
out
push
pop
lock
push
fldenv
in
fild
xor
cmp
loop
loop
or
adc
repz
call
cmp
push
or
sub
pop
adc
test
jg
mov
adc
xchg
xor
fisttp
sub
push
push
sub
arpl
fdiv
pop
xor
mov
xchg
xchg
test
hlt
movs
xor
xor
mov
jne
mov
push
out
pmaddwd
add
sbb
jmp
call
cmp
gs
sar
loope
popf
sti
dec
and
push
cmps
sbb
or
mov
xor
shl
sbb
ins
movs
sbb
push
xlat
jge
retf
xchg
and
dec
sub
add
loop
pop
pop
sub
or
mov
(bad)
pop
pop
mov
not
mov
mov
ins
in
mov
ins
push
push
push
loopne
jne
mov
lds
mov
arpl
xor
or
add
pop
cmps
and
xor
jp
or
retf
inc
es
shl
xchg
adc
and
(bad)
pop
stos
ja
dec
rcl
ret
in
mov
idiv
(bad)
jnp
int
and
push
rcl
or
xchg
push
inc
popa
jo
sbb
(bad)
push
addr16
adc
push
or
cmp
push
jae
add
xlat
xchg
idiv
mov
in
dec
in
rcr
adc
xchg
mov
sbb
or
sbb
push
cdq
sbb
enter
add
aam
cmp
cmp
repnz
xor
fidivr
pushf
pop
sub
dec
rcl
jno
clc
mov
adc
push
fist
mov
adc
xor
ja
js
mov
jnp
and
loop
pop
lea
cmc
push
cwde
rcr
pop
movs
mov
push
fwait
jge
push
jae
inc
es
inc
mov
inc
or
jg
and
jl
js
mov
in
daa
movs
add
mov
mov
ds
js
mov
ret
das
jge
sub
fwait
cli
sub
jae
add
mov
mov
cmps
dec
push
inc
fidiv
jge
lock
fwait
ror
xor
adc
outs
loope
cmp
inc
scas
and
ret
ins
push
hlt
push
jmp
int3
pop
xor
xchg
xlat
nop
jp
xor
mov
push
(bad)
js
cwde
sbb
dec
aad
xchg
cmp
inc
xchg
retf
xor
push
xor
dec
test
cld
std
sub
test
sti
loopne
jbe
mov
scas
std
movs
cli
push
aas
lods
sub
ffreep
ja
pop
mov
jbe
fnstenv
nop
jge
pop
fs
out
adc
sbb
mov
jecxz
sub
fisubr
lock
cmp
sub
xchg
js
or
jl
cmc
inc
push
dec
adc
shl
jecxz
dec
fwait
int3
mov
mov
dec
jo
jbe
and
jg
out
pop
mov
dec
in
xlat
rcr
jmp
aam
mov
rol
mov
mov
je
out
aas
push
inc
adc
into
jbe
dec
mov
mov
aam
cli
not
jb
mov
aad
or
sub
inc
into
dec
out
into
stos
es
sahf
adc
xchg
scas
pop
xor
add
dec
jo
or
push
and
mov
jle
pusha
popa
aas
xchg
push
stos
ja
push
ins
sub
or
pop
retf
aaa
mov
outs
mov
xor
add
adc
test
push
jns
xlat
xor
mov
loope
mov
cmp
inc
jb
push
push
mov
dec
fs
mov
shl
inc
adc
ins
movs
mov
syscall
es
inc
fdiv
add
dec
sub
(bad)
rol
push
out
add
push
jae
cmp
(bad)
lea
xchg
mov
out
mov
rcl
mov
out
mov
scas
lea
cmc
adc
lahf
movs
leave
ins
xor
jge
mov
and
mov
sub
jne
pop
sar
pop
push
sub
test
mov
(bad)
mov
jg
inc
add
pop
jmp
(bad)
fdivr
inc
out
lock
(bad)
loop
sub
aad
rcr
(bad)
out
addr16
dec
sub
and
cld
adc
inc
es
call
test
loopne
mov
inc
out
ret
adc
nop
push
xchg
out
or
loopne
ja
mov
in
mov
les
xor
stos
ins
and
push
in
sub
fdiv
inc
adc
jge
xchg
inc
popf
mov
lock
sub
cld
pop
push
popa
mov
mov
adc
mov
enter
loop
mov
jge
push
sti
sbb
add
inc
mov
scas
sahf
popa
mov
cmps
mov
and
sub
cmps
repz
test
and
outs
xor
fst
leave
mov
adc
cmp
or
xchg
dec
sbb
(bad)
ror
ins
fwait
cld
rcl
test
push
(bad)
jno
mov
(bad)
sub
adc
iret
sub
jnp
xor
dec
cmps
jae
loopne
retf
stos
lods
xchg
les
push
sub
jg
xchg
jp
out
xor
in
icebp
in
mov
mov
repnz
data16
ret
out
addr16
ds
test
xor
sahf
dec
mov
or
stos
or
test
fld
jle
(bad)
adc
pop
mov
addps
mov
dec
mov
lods
push
mov
adc
xor
sub
retf
fs
jne
mov
loopne
mov
mov
idiv
cdq
into
hlt
and
sti
inc
int3
xchg
in
je
jne
int
psrad
or
jmp
bts
je
add
mov
cld
xor
stc
repz
je
dec
xor
mov
hlt
pusha
xchg
cld
out
xchg
fcmovbe
or
ror
push
shl
inc
jbe
lea
bound
shl
into
and
shl
cmc
mov
and
pop
inc
mov
popf
dec
xor
cld
push
stos
test
mov
int
sti
jne
rol
hlt
push
out
push
push
stos
movs
push
jmp
ror
push
and
jbe
xchg
dec
in
xor
dec
sbb
mov
push
in
retf
dec
cmps
push
std
ss
pop
add
add
bound
or
mov
int3
jmp
in
cmp
shr
fadd
ins
jns
lods
out
adc
dec
push
stc
nop
cs
jl
inc
fs
std
pop
push
dec
xchg
xor
dec
iret
ret
and
js
sbb
mov
xchg
mov
ficom
stos
call
mov
or
lahf
movs
inc
dec
cwde
cmp
mov
cmps
pop
leave
cmps
retf
mov
dec
or
add
push
mov
or
jb
jp
in
sub
adc
jo
pop
(bad)
mov
pop
xchg
movs
or
in
jo
push
push
ror
je
ret
aaa
retf
test
das
pushf
pop
pop
movsx
rcl
lahf
movs
add
xchg
inc
ja
sub
lea
lods
add
inc
jne
imul
imul
ret
xchg
into
pop
or
lea
jo
sub
sub
shl
into
test
xchg
pop
stos
xchg
popf
dec
movs
mov
lds
cmp
aas
or
mov
rcr
sub
lods
das
cmp
(bad)
cmp
iret
aad
mov
mov
into
lahf
xchg
int3
sbb
call
pop
xchg
int3
not
xor
pop
xchg
sti
xor
xlat
adc
xchg
lods
add
popa
lock
loopne
outs
add
loop
jae
dec
adc
push
lahf
movs
ficomp
push
repnz
in
xor
mov
lea
sub
aaa
jle
xor
ins
mov
out
addr16
daa
hlt
and
jmp
aaa
(bad)
in
adc
jo
xor
mov
frstor
ss
aam
and
cmp
loopne
imul
idiv
cs
adc
jne
sbb
push
scas
add
xchg
sti
outs
push
aam
pop
out
or
ss
movs
mov
mov
lock
push
mov
movs
je
fist
push
arpl
xor
add
xor
mov
sub
xchg
dec
sub
int
loop
jo
xlat
xchg
jmp
push
loope
push
and
push
ja
add
xchg
rol
dec
jno
xor
test
adc
sub
call
imul
xor
xchg
push
dec
adc
aad
jns
jbe
lea
xor
push
cs
or
les
imul
test
push
ja
ins
sbb
in
sub
sub
xor
ja
arpl
jb
inc
pop
je
lahf
retf
mov
repnz
(bad)
pop
mov
stos
loopne
addr16
in
inc
cld
fnstenv
ror
ss
pushf
ins
jle
loope
jb
adc
mov
push
out
mov
push
fbstp
mov
fxch
dec
aad
repz
jmp
push
pop
or
push
pop
inc
and
daa
scas
in
mov
and
jns
inc
dec
or
sahf
nop
fistp
jbe
fdiv
popf
and
test
repz
pop
aas
sub
lods
je
jg
mov
xchg
ja
ins
sti
imul
lock
sbb
and
inc
inc
jge
xchg
mov
jo
imul
cmp
lea
test
lods
sub
leave
test
mov
and
movs
fiadd
jae
out
sbb
repnz
jg
xchg
out
sub
inc
ins
not
pop
sbb
out
retf
in
add
adc
xor
push
test
jnp
jmp
push
les
dec
test
xchg
pop
and
sbb
retf
rcl
jmp
dec
rep
or
cmps
push
sti
enter
and
mov
loope
aas
dec
in
mov
jp
fsubr
lea
or
imul
jp
mov
pop
test
lods
jne
dec
xchg
icebp
xchg
cmp
and
sbb
movs
int
test
push
pop
mov
std
push
sub
inc
dec
in
push
mov
test
jmp
jecxz
iret
jl
inc
repz
add
and
sub
add
or
popa
out
mov
pcmpeqb
ror
mov
and
pop
mov
fistp
mov
jmp
repz
in
push
cld
aam
movs
cmp
mov
popa
xor
push
ret
movs
cwde
in
mov
in
mov
les
dec
shl
stc
mov
gs
call
test
movs
dec
mov
test
xchg
adc
xor
mov
nop
jg
add
or
scas
sub
in
aaa
xchg
cdq
outs
cmp
jl
xchg
and
repnz
scas
dec
ds
pushf
xchg
rol
and
stos
int3
cmp
sub
mov
cli
popf
push
sub
jl
inc
ss
inc
sbb
sbb
adc
add
into
jb
push
mov
(bad)
(bad)
mov
dec
cmp
repz
enter
cmp
in
sbb
sbb
ss
mov
dec
ss
repz
movs
in
cmp
or
mov
mov
and
mov
mov
imul
cmp
imul
mov
jmp
push
fs
sti
or
and
sbb
cli
pop
aad
jb
xchg
enter
add
movs
in
nop
mul
pop
imul
pop
data16
inc
cs
jmp
push
out
mov
cmp
mov
and
mov
dec
inc
and
sbb
sbb
(bad)
mov
inc
cmp
inc
les
lods
cli
in
scas
inc
and
test
sbb
movs
and
mov
cmp
dec
data16
dec
cmc
ins
dec
push
cmps
(bad)
jo
xchg
ins
and
mov
pop
lds
xor
in
inc
cdq
xchg
xor
push
dec
cmps
cli
jge
movs
xor
inc
and
ror
stos
and
mov
arpl
and
pop
jnp
pop
adc
loope
mov
jecxz
xor
push
cmp
retf
ss
mov
and
adc
ds
loope
adc
push
xchg
sbb
dec
retf
adc
cmp
scas
mov
outs
ror
hlt
mov
ins
(bad)
xchg
fild
outs
and
mov
pop
pop
imul
sub
ss
push
lods
mov
ja
jns
xor
pop
stos
add
adc
cmps
sahf
fsubr
popw
in
hlt
push
in
inc
ins
adc
xchg
movs
jo
push
push
test
jnp
shl
ins
or
enter
inc
sbb
sbb
mov
jno
adc
sbb
push
pusha
mov
ss
dec
cmp
out
xchg
inc
sub
fld
xchg
jno
dec
mov
jbe
(bad)
push
mov
mov
(bad)
push
inc
out
in
call
outs
xchg
jge
mov
adc
cmp
mov
jg
ja
mov
and
ror
mov
jp
pop
cld
mov
je
and
pop
retf
arpl
leave
xor
enter
jns
cmp
das
pop
mov
jns
lods
or
jmp
dec
jo
pop
daa
loop
xor
adc
icebp
mov
mov
movs
inc
mov
std
push
jecxz
sbb
push
stc
std
or
sub
call
cmp
xchg
pop
jl
or
xor
jb
dec
movs
xchg
add
jmp
push
mov
scas
sbb
mov
je
inc
sub
cld
sbb
(bad)
push
lods
inc
xor
retf
push
ja
test
push
xor
arpl
fnstenv
push
test
xchg
jmp
js
jae
and
inc
xor
in
outs
das
xor
inc
js
aad
adc
out
jo
inc
xchg
inc
dec
jne
adc
jg
lock
loopne
push
test
sub
(bad)
out
xor
mov
mov
inc
fwait
sbb
push
add
iret
scas
cs
or
in
xor
mov
inc
cmp
jo
rcl
call
and
mov
test
sahf
mov
xchg
int3
jge
xchg
mov
jb
push
mov
jg
(bad)
nop
mov
mov
push
and
push
aas
jecxz
mov
push
mov
mov
pop
cwde
std
outs
rcr
retf
ins
nop
xor
mov
cdq
mov
inc
aaa
sub
dec
push
sub
test
mov
arpl
test
pop
cmp
inc
jns
cdq
pusha
mov
mov
ret
test
popa
push
int3
es
ret
sub
cld
ret
es
mov
xor
sub
shl
xchg
add
push
push
lock
dec
adc
xchg
mov
pop
mov
mov
mov
je
into
and
xchg
jge
(bad)
jp
daa
jecxz
push
mov
out
lds
inc
pop
jbe
int3
cmp
or
adc
and
sti
add
aas
clc
jmp
mov
add
cmp
push
js
adc
push
mov
fadd
mov
xor
adc
setae
retf
pusha
dec
push
push
add
jcxz
mov
pop
xchg
out
sbb
loop
sub
adc
stos
ds
xchg
data16
jmp
(bad)
xchg
push
xlat
test
lahf
push
loopne
push
dec
pop
mov
and
xchg
xchg
adc
lods
iret
mov
xor
xchg
stc
popf
jmp
mov
out
in
push
jnp
pop
neg
(bad)
std
ja
cwde
popa
outs
push
dec
test
push
add
sbb
and
fild
pop
loop
ret
jns
dec
std
data16
dec
or
jns
in
add
sub
or
push
lock
mov
cwde
push
outs
push
adc
cmp
(bad)
fist
push
adc
arpl
addr16
mov
inc
gs
push
loope
lods
ds
ja
in
popa
or
stos
xor
pushw
xor
mov
cmp
daa
push
pop
jae
mov
(bad)
mul
bound
dec
leave
pop
xchg
jno
out
(bad)
or
aad
dec
(bad)
mov
xor
dec
inc
gs
fstp
(bad)
xchg
ret
push
dec
inc
push
int
popf
pop
cmp
popa
lods
cmp
xchg
cmp
jg
stc
ins
jne
jg
cld
and
sbb
and
or
fistp
arpl
in
pop
sbb
xor
adc
jns
(bad)
add
jnp
inc
inc
inc
mov
fldpi
mov
inc
movs
adc
jnp
in
xchg
les
xchg
lahf
nop
push
scas
inc
xchg
sbb
or
push
or
add
xor
stos
push
push
and
sub
test
test
jmp
(bad)
mov
or
aad
addr16
sub
pop
retf
sbb
push
arpl
or
les
cli
mov
or
dec
pop
pop
mov
in
sub
icebp
jecxz
iret
mov
out
out
mov
xchg
inc
or
cmc
xor
and
jmp
lahf
in
sub
icebp
sbb
mov
int
cwde
jle
fsubr
js
mov
jae
xchg
sub
aaa
nop
mov
fstp
jmp
outs
enter
retf
dec
xor
add
add
lods
div
adc
cld
js
jno
mov
pusha
mov
mov
inc
arpl
sub
cmp
mov
imul
scas
stc
xor
ins
scas
pop
fld
add
jecxz
mov
cmp
dec
mov
xor
enter
mov
xor
fst
sbb
jno
mov
ss
adc
and
jp
inc
je
sbb
fld
bound
cdq
adc
or
dec
xor
sbb
xchg
sbb
gs
ja
test
xor
or
repz
and
jbe
(bad)
add
add
adc
cmp
jl
push
push
enter
mov
inc
adc
movs
pop
rcl
inc
ins
push
ins
inc
loope
jecxz
inc
push
push
repz
jne
es
xchg
cmp
or
pop
(bad)
push
out
mov
fwait
push
or
fadd
imul
xor
daa
inc
(bad)
jle
push
push
xor
xchg
sbb
or
arpl
je
jae
shr
and
xchg
fnstsw
fiadd
cmp
jge
movzx
cmc
cmp
jb
push
popf
pop
pop
test
cmp
enter
pop
xchg
ret
sahf
or
in
mov
adc
rol
lods
outs
inc
inc
add
xchg
dec
mov
ds
(bad)
les
ret
mov
popf
xchg
test
dec
cmp
jecxz
in
mov
or
dec
das
mov
push
mov
push
fist
push
xchg
adc
push
or
or
jg
fsub
pop
xchg
imul
and
dec
push
jecxz
mov
and
and
stos
je
jl
inc
popa
lds
int
(bad)
into
jmp
sbb
cmp
imul
adc
mov
cmc
fmul
dec
adc
cld
movs
jb
fdiv
gs
pop
out
jp
jg
les
inc
sub
shl
xchg
retf
(bad)
mov
enter
inc
fld
pop
inc
adc
dec
iret
cmp
imul
xchg
cmp
out
cli
fs
movs
push
loop
xchg
pop
into
or
std
dec
cs
inc
mov
call
lea
hlt
mov
rol
cmp
or
mov
mov
jno
adc
mov
hlt
aad
adc
push
add
pop
aam
shl
fs
push
sbb
stc
shl
pusha
cmps
jb
or
test
jmp
dec
test
fist
fiadd
shl
gs
mov
fdivr
mov
add
aad
or
mov
jno
cli
adc
mov
(bad)
xor
or
xchg
outs
push
xor
mov
and
js
xchg
dec
neg
adc
out
jae
jo
mov
fmul
enter
movs
iret
cld
push
mov
xor
or
adc
or
sub
test
mov
daa
movs
fsub
push
ficom
out
cmp
push
pop
fsub
xchg
mov
or
xchg
loop
xor
xor
adc
ins
or
xlat
lock
add
in
mov
ret
call
cwde
sub
jns
sub
into
sbb
test
mov
adc
ret
vunpckhps
mov
addr16
adc
lods
(bad)
pop
cmps
sub
stc
sub
sub
push
sbb
and
push
leave
jae
(bad)
sub
mov
adc
dec
lods
cmps
and
in
cld
sti
jmp
pop
pop
fwait
jne
neg
push
mov
or
fwait
inc
fucomip
ja
(bad)
mov
(bad)
and
mov
lahf
sub
add
adc
cmp
mov
cmc
cwde
inc
imul
mov
(bad)
in
or
sbb
or
and
ss
ss
popa
jo
ins
cwde
out
repz
sub
cmp
mov
xchg
jecxz
dec
adc
jo
ss
sti
into
retf
or
int3
hlt
daa
bound
sub
daa
out
jmp
or
or
sbb
xchg
int
mov
and
cld
in
test
fs
dec
mov
gs
jl
pop
retf
xor
xor
xchg
xor
es
cmp
dec
pop
xchg
inc
jmp
mov
adc
or
sub
int3
inc
mov
rcl
lods
mov
in
mov
push
xor
or
pop
jo
dec
push
xchg
or
stc
or
pop
(bad)
pop
fwait
cmp
addr16
cmp
stc
jae
dec
mov
push
sub
iret
jbe
inc
retf
push
pushw
enter
add
xor
pop
mov
mov
pop
ins
(bad)
xor
arpl
in
mov
jecxz
lods
stc
mov
jbe
jo
pop
test
jl
js
test
or
mov
ret
jge
mov
push
mov
add
or
mov
mov
and
sahf
fcomp
movs
arpl
ret
mov
iret
ret
push
(bad)
jecxz
data16
jg
xchg
cs
push
jo
cmps
retf
cdq
jns
cdq
mov
ja
gs
inc
inc
out
pop
add
pop
mov
adc
fidivr
xor
div
pushf
sbb
sub
das
lods
stc
sti
push
imul
fs
push
push
test
mov
(bad)
jmp
movs
inc
fs
imul
cmp
cmp
or
jnp
inc
js
(bad)
mov
sub
pop
push
pop
jnp
cmps
clc
std
out
sub
(bad)
xchg
lea
pop
or
outs
sahf
push
sahf
std
sub
cs
or
jb
in
jl
cmp
add
jnp
push
loopne
jle
mov
mov
inc
jmp
adc
retf
jne
jbe
call
push
scas
mov
je
xor
stos
xchg
pop
es
xchg
cdq
mov
(bad)
dec
pop
adc
mov
cmp
in
in
pop
or
das
push
sub
inc
(bad)
call
push
jbe
inc
(bad)
sbb
adc
add
(bad)
es
into
sbb
cmps
xchg
lock
sbb
sbb
cmc
adc
das
scas
jmp
sbb
lds
shl
test
bound
fwait
jbe
and
and
les
es
xchg
ins
push
mov
push
adc
or
inc
js
iret
cmp
lea
inc
and
pop
and
cmp
xchg
sahf
popa
(bad)
icebp
adc
add
xchg
xlat
shl
cli
repnz
test
sbb
in
jmp
xchg
int3
cmp
outs
add
lds
out
add
lods
inc
push
aam
call
xchg
cmp
in
push
adc
in
jl
xchg
push
add
lea
(bad)
push
cmc
pop
jmp
mov
ss
xor
aaa
ror
sbb
xchg
addr16
sbb
mov
mov
shr
sti
mov
ins
das
jns
test
mov
dec
dec
inc
sub
das
fimul
nop
cmps
mov
xor
cdq
imul
aaa
push
leave
ins
jle
mov
loop
ret
adc
pop
and
fisubr
xlat
test
jae
cmp
daa
jmp
popa
push
adc
and
mov
pop
and
inc
scas
mov
dec
xor
loop
push
(bad)
arpl
aaa
jecxz
mov
popa
or
push
lock
addr16
call
les
fadd
sbb
loope
sub
mov
mov
daa
popa
fmul
pushf
cmp
icebp
xor
test
xchg
and
gs
loopne
mov
neg
das
or
loop
push
cwde
mov
mov
ror
call
mov
jae
dec
jbe
mov
xchg
dec
xchg
xchg
pop
sub
cld
cmps
ins
inc
js
(bad)
fdivr
and
pusha
and
js
pop
or
dec
dec
add
pusha
and
(bad)
jno
cli
jo
inc
sbb
jno
or
push
mov
icebp
lds
xchg
mov
aas
lods
aaa
mov
sti
pushf
xor
fldenv
add
mov
push
imul
add
mov
pop
ror
sub
dec
ss
fs
ror
add
mov
and
sub
mov
fs
(bad)
mov
mov
mov
clc
lods
in
jmp
dec
jae
out
aas
push
hlt
inc
pop
xchg
mov
clc
cdq
push
and
mov
aas
add
dec
(bad)
pusha
(bad)
clc
inc
pop
jnp
nop
stos
jg
dec
test
jns
jle
mov
xlat
mov
(bad)
xor
leave
dec
inc
sti
std
dec
cmp
outs
std
lock
neg
jl
sbb
pop
ds
cmps
mov
or
jno
mov
scas
dec
or
push
xchg
hlt
mov
jmp
push
inc
mov
in
dec
push
xor
out
mov
fs
xchg
ror
mov
in
out
or
and
ins
sub
ficomp
sbb
cwde
mov
je
mov
lahf
lds
push
sbb
xor
mov
add
(bad)
and
sub
cmp
aas
cmp
out
sbb
test
add
pop
(bad)
push
test
aam
shl
lods
push
mov
jo
push
mov
adc
call
sbb
mov
push
in
cmp
sub
repz
adc
mov
leave
or
int
jmp
cmpxchg
call
cdq
in
jmp
jge
dec
mov
sahf
adc
jnp
add
iret
ret
clc
add
scas
int3
cmc
ds
jecxz
push
jg
(bad)
retf
xor
mov
push
dec
icebp
fucomp
ret
int3
sub
mov
mov
push
adc
and
sbb
(bad)
push
adc
loop
(bad)
rcr
test
out
shl
test
mov
push
add
pop
js
lds
icebp
mov
sbb
or
loop
add
movs
test
cmp
(bad)
jg
leave
xchg
pop
mov
inc
fdivrp
add
sbb
mov
mov
daa
cmps
fdivrp
retf
mov
pushw
sub
outs
mov
inc
xor
adc
ins
pop
cmps
xor
test
push
cmps
dec
pop
and
loope
xchg
outs
xchg
xor
(bad)
stos
pushf
outs
into
jg
mov
xor
ja
pop
or
arpl
mov
sbb
out
mul
jmp
dec
aam
push
sti
scas
stc
pop
adc
or
outs
push
and
or
div
aam
cs
cmc
mov
(bad)
cmp
xchg
sub
out
movs
push
add
dec
ins
adc
(bad)
fsub
xlat
pusha
les
lea
dec
sbb
lds
push
js
mov
fs
push
sub
sbb
sbb
pop
add
mov
mov
jge
jg
add
xor
sbb
js
fdiv
outs
mov
rcl
jae
sub
rcr
ret
rcr
aad
shl
push
mov
popf
ja
ds
fsubr
out
mov
jl
xchg
ds
mov
movs
cmp
mov
jb
std
ret
push
jns
cs
and
dec
dec
shr
xchg
scas
mov
mov
mov
jbe
(bad)
test
sub
and
pop
jge
lods
std
icebp
sbb
push
imul
fwait
pop
enter
xchg
and
lds
mov
fwait
adc
(bad)
out
fcmovnu
inc
leave
add
jp
fiadd
movs
mov
sub
lods
cmp
inc
push
imul
imul
cld
mov
and
jae
out
mov
push
(bad)
je
jns
into
rcr
rol
in
xor
addr16
fild
mov
int3
push
push
bound
repz
inc
mov
jmp
lds
mov
sub
add
jae
mov
je
inc
mov
xor
push
push
jg
jle
ret
mov
lahf
loope
mov
mov
imul
loope
xor
jo
mov
sbb
scas
sbb
jo
xchg
dec
dec
bound
popf
lahf
aam
pushf
aad
shl
sub
test
fistp
cwde
xchg
rcl
mov
addr16
xchg
movs
sub
in
dec
mov
cmp
cmp
int3
dec
imul
cmc
mov
push
movs
fxch
call
jb
(bad)
cwde
dec
xor
xchg
pop
xor
dec
test
sub
repz
xor
nop
gs
dec
mov
and
mov
enter
adc
dec
sbb
popa
adc
in
adc
xchg
aas
mov
arpl
mov
cmp
int3
jl
mov
xor
(bad)
gs
in
test
lods
push
ins
dec
adc
adc
sub
loopne
stos
dec
mov
push
mov
push
aas
jecxz
jns
js
inc
cmp
or
pop
cmps
inc
(bad)
mov
mov
sub
or
push
(bad)
(bad)
push
cmp
mov
dec
mov
inc
jp
mov
sub
dec
inc
and
(bad)
pop
fnstsw
mov
test
or
test
sbb
ret
out
cmp
cmp
addr16
xor
adc
jmp
jo
or
outs
jecxz
fsubrp
leave
jns
jbe
sub
push
fld
jge
and
out
cmp
fst
fst
xchg
cli
loopne
push
push
add
jno
mov
popa
mov
push
js
jb
shl
pop
repnz
outs
stc
sbb
cwde
sub
dec
mov
and
jne
push
test
outs
pop
xlat
(bad)
or
(bad)
mov
sbb
inc
(bad)
xor
ret
arpl
sbb
mov
dec
cs
test
push
mov
and
pop
lds
adc
fcom
push
out
jle
popa
test
call
dec
cmps
xchg
out
pop
push
jle
and
mov
inc
test
(bad)
(bad)
imul
push
dec
add
mov
mov
inc
(bad)
dec
aas
icebp
xlat
jle
retf
loope
ins
sbb
imul
test
fs
in
outs
jp
sub
jno
loop
mov
std
out
mov
test
fwait
movs
xor
int3
pop
(bad)
ins
mov
loopne
shl
bound
pop
jno
jne
inc
adc
mov
adc
inc
xchg
jle
and
loopne
scas
stc
jo
cmp
cmp
sti
fistp
pop
dec
mov
fist
popa
ds
mov
ss
jns
cdq
shl
ds
inc
and
lock
gs
pop
cmp
ja
or
cli
sbb
repz
cmc
push
int
mov
jmp
push
cdq
stos
cmp
push
adc
std
mov
addr16
push
idiv
ss
mov
push
xor
jns
push
sahf
jns
sbb
in
out
dec
sahf
int
(bad)
(bad)
es
mov
jmp
jns
xchg
cmc
icebp
mov
adc
inc
lods
and
jo
loope
call
ss
iret
inc
lock
ror
sbb
in
int
lahf
das
imul
clc
xor
xor
int3
mov
hlt
icebp
inc
pop
popa
sbb
jg
imul
cmp
sub
cs
jbe
dec
(bad)
aam
pop
popa
inc
add
lea
sub
sbb
or
ret
sahf
mov
loop
fstp
mov
(bad)
and
xchg
stc
inc
and
fimul
push
xor
fsub
push
aad
cld
fbld
pop
mov
seto
xchg
add
sub
jp
jmp
adc
xchg
adc
xor
inc
xor
pop
lock
or
jb
outs
push
mov
sbb
push
inc
or
cli
addr16
(bad)
push
mov
add
(bad)
dec
cmp
push
ja
cwde
loope
jnp
rcl
adc
arpl
pop
sub
mov
xchg
cmp
pop
or
mov
adc
stc
loope
push
hlt
popf
mov
dec
or
fsubr
mov
sub
xchg
ret
nop
lds
dec
sub
dec
mov
or
sub
arpl
or
xchg
imul
sub
push
pop
cmp
ret
pop
mov
fdivr
outs
in
out
jno
cmp
loop
sub
test
xor
fptan
stc
(bad)
cmp
fs
add
cmp
stos
enter
std
ja
or
push
pop
aam
xor
out
out
sbb
xlat
xor
retf
mov
or
pop
fwait
mov
popf
data16
lock
in
cmps
push
or
jmp
mov
mov
jmp
pop
in
mov
mov
movs
or
dec
push
inc
push
cmps
xchg
pop
add
inc
sbb
std
ror
cwde
js
push
mov
inc
inc
jnp
dec
(bad)
adc
cmps
shl
ret
stos
dec
movs
test
inc
arpl
adc
pop
stc
cmp
es
cmp
aad
and
sbb
mov
dec
jmp
jmp
jl
psubusb
rcl
mov
cmps
sub
mov
xchg
fdivr
jbe
jl
clc
push
out
sub
or
adc
and
jle
push
xchg
retf
or
pop
xor
jno
rol
neg
inc
xchg
and
sti
in
ds
dec
pop
ror
inc
addr16
loopne
lods
cmp
loope
pusha
daa
push
pop
mov
mov
xor
pop
mov
in
adc
mov
hlt
(bad)
in
cmp
dec
addr16
scas
dec
pop
mov
pop
shl
dec
loope
xchg
cmps
rcl
jo
rcr
jo
jns
je
test
push
xchg
xchg
xor
lds
cmc
push
in
push
test
stc
add
mov
push
jmp
or
and
mov
push
scas
test
jo
cld
outs
stos
out
retf
lock
sub
mov
jbe
mov
fild
movs
xor
push
mul
inc
sub
nop
adc
pushf
ror
jecxz
adc
cmp
cmc
lods
in
jo
enter
dec
push
sub
mov
push
mov
mov
and
arpl
ins
xor
xchg
and
mov
jo
inc
sub
test
imul
es
mov
int
(bad)
sub
sub
mov
out
sahf
loope
jmp
out
repz
xor
jg
adc
pop
popf
std
add
inc
mov
mov
dec
aaa
fistp
xchg
pop
mov
jmp
pop
repz
xchg
nop
mov
dec
push
pop
xor
jnp
rol
and
and
movs
mov
dec
jg
(bad)
stos
xor
adc
shr
xor
call
fwait
enter
fisttp
pop
inc
push
push
retf
jmp
push
xor
add
or
(bad)
jo
and
jge
daa
cwde
stc
aad
add
lahf
push
aad
jl
add
jg
xor
sbb
jne
mov
retf
(bad)
fnsave
pop
cmps
out
pop
jbe
retf
ret
pop
mov
(bad)
sbb
mov
adc
fdivr
xchg
cwde
ret
bound
jno
xchg
mov
mov
aas
into
mov
dec
adc
(bad)
clc
jnp
call
aam
pop
shl
stos
pop
(bad)
fucomip
jb
jno
test
aas
fsubr
jle
pop
xchg
dec
in
sub
or
in
mov
adc
or
movs
push
cmp
sub
mov
mov
or
ins
sbb
fld
xchg
sti
ret
dec
movs
add
adc
ficomp
ror
mov
call
push
repnz
inc
jmp
xchg
add
xchg
out
mov
xchg
loope
inc
out
std
sub
in
mov
mov
jb
push
xor
inc
mov
in
addr16
je
leave
push
mov
jp
inc
in
sub
arpl
cwde
repnz
(bad)
cmp
or
ret
add
mov
fwait
popf
daa
shl
xor
inc
in
dec
fs
mov
dec
jg
std
push
fld
jnp
inc
pop
jecxz
pop
out
pop
cwde
xchg
jb
imul
or
push
dec
and
in
xchg
test
add
movs
mov
xchg
fwait
push
les
push
repnz
out
pcmpeqw
js
mov
scas
adc
mov
rol
xchg
aam
adc
loopne
fistp
outs
ret
and
std
les
cmps
dec
xchg
push
cmp
mov
xor
xor
inc
jmp
outs
and
test
scas
mov
adc
xor
adc
push
gs
jns
mov
push
mov
sbb
or
jl
pop
shl
retf
mov
loope
fwait
jno
mov
xchg
repz
pop
adc
(bad)
xor
jle
sub
xchg
mov
test
mov
push
xchg
pusha
mov
ret
outs
inc
jmp
mov
add
movs
out
sub
pop
mov
je
cmp
movs
shl
aam
and
sub
fcomp
(bad)
aas
inc
add
cmps
or
mov
dec
jb
fld
push
stc
hlt
js
stc
and
hlt
jns
aam
pusha
test
lods
ficom
test
pop
loop
xchg
retf
fidiv
sbb
cmps
retf
in
xor
call
fsubp
fsub
movs
into
add
bound
add
xor
pop
stos
and
pop
sbb
sbb
shr
bound
(bad)
out
scas
mov
fs
stc
jns
mov
pop
and
movs
or
push
mov
push
sbb
test
(bad)
je
call
jmp
fidiv
rcr
jecxz
mov
dec
xor
mov
cmp
or
or
movs
sbb
out
cmp
shl
aad
ja
sub
xor
and
lock
fmul
xchg
cmps
jo
and
les
inc
rep
lods
aas
sar
dec
lock
cli
rol
arpl
dec
imul
inc
sub
lahf
mov
aaa
aad
pushf
test
or
mov
dec
neg
mov
repz
pop
dec
ds
sbb
inc
dec
lea
mov
jne
pop
sti
stos
mov
mov
mov
fmul
daa
fadd
mov
jns
ins
mov
or
repz
fnstcw
sbb
cld
shr
outs
aas
add
sub
movs
(bad)
mov
outs
test
ds
inc
jecxz
fucomp
int
out
or
(bad)
push
loope
jg
lock
shl
js
retf
sbb
jnp
jo
sbb
stc
iret
or
aaa
inc
div
mov
cmp
into
push
add
nop
in
sbb
jecxz
fcom
push
or
neg
jl
jnp
dec
aam
fisubr
mov
mov
mov
movs
ret
in
fs
pop
xor
mov
jmp
or
outs
add
pop
faddp
pushf
rcl
xor
stos
das
wrmsr
push
pop
lea
and
xchg
sbb
pop
stos
jns
push
fild
lahf
pop
out
xor
repz
and
cmp
add
scas
mov
or
mov
mov
cmp
pop
sbb
jns
test
mov
inc
add
mov
adc
test
dec
adc
fdivr
mov
fimul
icebp
add
xchg
mov
adc
(bad)
inc
mov
xchg
mov
icebp
mov
cmc
pop
scas
aaa
ret
inc
ins
pop
sbb
or
push
cmp
xchg
mov
sbb
dec
or
dec
fstp
rcl
dec
jecxz
sub
push
in
push
sahf
pop
push
push
div
dec
push
ins
adc
xor
enter
dec
sbb
dec
test
sti
jmp
xor
fst
ret
aad
call
stos
and
jp
int3
dec
pop
push
or
xchg
sbb
sub
cmp
pop
adc
jb
test
(bad)
retf
push
hlt
adc
arpl
(bad)
retf
push
lock
lds
xor
ret
fstp
inc
jb
(bad)
repz
outs
ins
(bad)
adc
cmc
shl
mov
lods
mov
jbe
mov
jbe
sub
into
dec
mov
and
stos
iret
xor
lds
fcmovu
sbb
popa
mov
xor
mov
mov
mov
mov
push
and
cmps
inc
and
mov
pop
ret
sbb
(bad)
jl
leave
hlt
les
jle
movs
mov
cmps
ret
out
aaa
cdq
fcom
mov
dec
inc
pop
xchg
repnz
clc
sbb
push
out
cmps
or
test
xchg
popa
fwait
cdq
jmp
hlt
fs
jnp
xchg
mov
and
or
mov
inc
cmp
retf
mov
in
xchg
sub
into
addr16
or
mov
dec
mov
cmp
pop
mov
mov
das
movs
xchg
arpl
jmp
rol
cdq
jmp
xchg
sub
xchg
shl
add
xchg
pop
dec
inc
pop
sbb
call
loop
int
xor
out
pop
(bad)
jnp
sub
push
inc
mov
jae
inc
shl
adc
es
jo
stos
aaa
out
or
push
call
cmp
loope
ja
push
or
gs
jmp
pop
and
mov
in
xchg
out
sti
and
lock
mov
push
lock
lahf
ss
shr
fld
mov
sub
es
call
xchg
add
sub
int3
cli
retf
mov
rol
ja
mov
push
xor
loopne
in
sti
movs
mov
lahf
pop
pop
sub
sub
aaa
cmp
in
out
pop
les
xchg
cmps
cmps
repnz
imul
xlat
xchg
xchg
dec
fsub
cmp
je
add
dec
lods
mov
xchg
inc
test
iret
sbb
out
stos
sbb
addr16
or
add
cmc
out
popa
jbe
mov
imul
pop
xchg
mov
sbb
add
js
jae
pop
jo
into
cwde
push
fisttp
loop
cdq
loope
inc
jmp
scas
jmp
lods
xchg
cmp
int
push
shl
pop
mov
lods
lock
adc
xchg
ss
ja
leave
jo
fadd
popf
xchg
and
xchg
dec
push
mov
push
pusha
cld
in
out
outs
out
int3
mov
mov
inc
popf
test
data16
(bad)
sahf
inc
popf
cli
xor
xor
xchg
in
inc
dec
ins
stc
or
cmps
popf
jnp
mov
addr16
jb
cmp
jmp
pop
dec
ss
loope
adc
cwde
push
lods
add
cld
leave
xchg
std
addr16
sar
fdiv
aad
cs
mov
sbb
pushf
mov
inc
call
pop
(bad)
mov
icebp
arpl
mov
dec
loopne
sbb
ret
dec
cmp
xchg
(bad)
bound
push
gs
xor
cmp
adc
mov
arpl
pop
arpl
or
xor
pop
pop
out
and
mov
fldcw
nop
jp
sbb
in
mov
mov
mov
lock
inc
and
sbb
sahf
mov
xlat
inc
adc
repz
pop
jnp
adc
std
mov
push
aaa
dec
std
mov
jl
lahf
rcl
(bad)
aam
sahf
iret
cmp
ss
and
fidivr
mov
retf
dec
pop
sub
inc
loope
nop
add
cmc
push
in
out
mov
loopne
imul
mov
jle
pusha
fadd
rcl
and
inc
inc
push
xchg
or
sub
lock
mov
fcom
push
pusha
inc
sbb
adc
ror
xor
cmps
pop
jns
and
jns
jno
jge
sub
dec
inc
sbb
adc
mov
jbe
adc
jp
sub
push
push
pop
mov
push
in
mov
push
arpl
pusha
cmc
lods
jae
loope
or
jecxz
lea
clc
(bad)
lahf
xor
pop
bound
mov
(bad)
sub
jo
push
push
ins
fcomp
imul
test
sbb
xor
or
mov
shr
retf
ins
(bad)
jmp
fisttp
cmps
sub
daa
clc
mov
pop
mov
mov
and
fistp
inc
nop
jb
jo
sti
or
mov
mov
xor
leave
iret
(bad)
and
mov
pop
mov
adc
mov
cmp
lahf
cmps
jp
or
movs
push
dec
sub
cli
loop
aam
out
ins
aad
stc
pop
popa
add
addr16
enter
jle
inc
retf
or
fldcw
pushf
cs
fst
mov
and
add
mov
repz
mov
lahf
nop
out
ret
dec
cs
adc
mov
retf
mov
mov
cmp
pop
sub
cwde
(bad)
scas
retf
(bad)
sbb
into
outs
out
std
jle
int
xchg
xor
repnz
add
shl
pop
or
push
add
mov
mov
imul
jmp
sub
adc
icebp
mov
cdq
pop
imul
mov
push
sub
pop
aad
cmc
push
hlt
imul
xor
test
cmp
add
sbb
xchg
test
inc
mov
inc
std
push
ds
ss
adc
xor
push
pop
mov
inc
stos
(bad)
sti
add
add
mov
mov
mov
lahf
fldlg2
lock
mov
mov
(bad)
dec
push
add
fcmovnu
test
or
retf
cmp
mov
push
stc
and
pop
das
inc
pop
xor
xlat
cmp
int
add
jo
outs
imul
pop
sbb
leave
loop
jmp
or
es
test
ror
jnp
mov
pop
retf
enter
lahf
stc
shl
push
jno
test
les
leave
pop
sub
in
test
pop
sbb
test
adc
add
mov
test
cmps
add
ja
mov
imul
ret
popa
shr
dec
pusha
sbb
loop
popf
sub
sysexit
or
pop
push
mov
sbb
loopne
push
xor
cmps
add
mov
test
out
enter
out
outs
cmp
jmp
mov
dec
in
adc
push
or
aaa
sub
xor
inc
inc
es
mov
xor
jmp
mov
xchg
test
test
push
add
jne
jmp
cld
in
out
jecxz
mov
in
icebp
add
mov
cmps
xor
xchg
pop
inc
repnz
pushf
(bad)
stos
(bad)
pop
inc
sti
mov
pop
cmp
dec
mov
adc
sub
jo
nop
sbb
xchg
adc
xchg
aad
cmp
mov
xor
and
(bad)
retf
in
jno
shl
mov
xor
or
fimul
iret
dec
or
addr16
je
pop
mov
jo
iret
push
retf
shl
cmp
not
jmp
into
xchg
adc
hlt
pop
repz
adc
in
and
xchg
mov
jmp
std
cmps
int
jecxz
(bad)
sti
lock
data16
aad
nop
dec
adc
mov
cmp
ss
loop
and
stos
repz
push
jne
(bad)
mov
iret
dec
or
jno
mov
adc
outs
or
rcl
or
jae
and
in
push
xchg
push
cdq
dec
fucomip
mov
mov
dec
test
push
xchg
jmp
and
cmps
dec
adc
into
test
and
adc
push
pop
add
adc
cmp
sar
repnz
stos
dec
ret
rcr
call
cmp
inc
jo
add
jp
mov
adc
fsubr
push
xchg
mov
xchg
push
sub
bound
test
das
(bad)
retfw
sbb
mov
in
in
loopne
adc
in
ins
pop
push
xchg
mov
sub
lea
mov
call
outs
nop
xlat
sub
sbb
push
dec
push
xchg
and
adc
in
(bad)
jecxz
mov
int3
rol
out
into
inc
lds
mov
pop
clc
ja
push
(bad)
jne
xchg
jnp
inc
mov
jecxz
dec
sbb
mov
inc
and
jge
ficomp
int
sub
mov
pop
cli
pop
pop
jnp
and
or
(bad)
xor
je
xchg
loope
dec
dec
xor
mov
rcr
stos
ins
out
retf
sbb
push
dec
cmp
fwait
push
add
cmp
inc
out
xchg
mov
push
cmc
mov
inc
out
or
int3
push
shl
jbe
into
xchg
sbb
push
push
jmp
sar
and
es
repnz
movs
hlt
hlt
das
add
fwait
ins
sub
pop
fcomp
movs
push
pop
stc
sub
mov
jno
fistp
xor
sbb
mov
stc
mov
aad
es
adc
cld
sbb
add
xchg
mov
shl
xor
sub
je
lods
sbb
pop
adc
mov
sub
mov
cdq
clc
xor
movs
lds
mov
test
xor
cmc
xchg
test
cmps
les
xchg
clc
xchg
jg
rcl
sub
bound
cli
stos
idiv
pop
lods
mov
ror
pop
call
xor
ret
popa
jb
pop
push
(bad)
pop
loop
ins
pop
sub
cli
test
inc
jle
fnstcw
cmc
mov
mov
enter
and
loopne
add
in
scas
xor
loopne
and
cmp
arpl
xchg
dec
mov
pop
dec
loope
sbb
fisubr
jns
jae
int3
retf
lods
pushf
stos
pop
and
add
pop
loopne
dec
dec
or
(bad)
mov
std
repnz
dec
into
lods
xor
mov
lock
sar
repnz
adc
jmp
in
or
fcomp
es
icebp
jecxz
mov
scas
out
cmp
dec
cmp
xchg
cld
sub
fcmove
cmp
movs
lds
push
adc
xor
or
or
mov
idiv
sbb
ret
inc
daa
xor
ins
jo
outs
ins
mov
add
and
and
push
push
jne
loopne
cmp
pop
jp
mov
into
cmps
loop
fsub
xchg
fistp
outs
mov
ins
das
int3
lea
mov
fwait
sbb
jmp
mov
sbb
xor
jge
push
jmp
out
pop
mov
es
hlt
xchg
(bad)
jmp
call
imul
aas
repz
sbb
add
stos
fild
stc
or
mov
mov
test
ins
inc
or
mov
outs
adc
arpl
jo
mov
mov
push
fwait
cmps
stos
push
dec
inc
mov
xor
mov
mov
and
int
sbb
test
int
adc
adc
fwait
cmp
add
int
mov
jbe
sbb
adc
mov
jp
jmp
xor
(bad)
jne
or
inc
lods
push
mov
ficomp
inc
cmp
mov
and
leave
mov
add
mov
(bad)
movs
adc
neg
jge
mov
push
pop
dec
mov
cmps
mov
loope
adc
mov
cld
cdq
add
cmps
inc
lds
fs
(bad)
std
mov
adc
pop
push
int
call
gs
sub
xchg
mov
bswap
into
push
movs
jl
fld
call
idiv
or
fwait
adc
call
nop
push
push
xor
inc
xlat
jno
arpl
hlt
loopne
repz
das
xchg
jmp
movs
push
xchg
cwde
fcom
in
loope
fdiv
out
clc
dec
dec
loopne
push
cmc
pop
jmp
outs
push
jns
dec
or
repnz
setne
sbb
push
jno
inc
push
iret
test
xlat
xchg
pop
cdq
xor
mov
pop
pop
data16
fimul
xor
popa
inc
repz
sub
xchg
and
mov
nop
cmp
pop
push
dec
repz
in
fstsw
lock
sbb
out
pop
aad
cmove
in
cmps
sti
jb
sub
xor
(bad)
out
and
mov
dec
hlt
mov
pop
int3
cld
loope
es
xchg
imul
push
mov
ficomp
loopne
icebp
cld
inc
fcomip
jo
mov
cmp
xor
inc
sub
aam
popa
inc
mov
and
mov
mov
xchg
fld
mov
sbb
xchg
cmps
and
rcl
mov
push
and
test
in
jg
adc
pusha
test
lods
cli
(bad)
(bad)
int3
sahf
xlat
cmp
dec
or
dec
jmp
repnz
adc
popa
push
xor
pop
(bad)
add
cdq
out
js
in
and
jp
test
addr16
aas
cmps
test
sbb
jno
scas
add
xchg
rol
inc
cmp
pop
pop
mov
imul
pop
icebp
pop
mov
loop
and
jle
ins
mov
mov
js
stos
cmp
push
cmp
retf
and
jbe
cmp
xchg
mov
push
inc
mov
test
mov
pop
cmp
sbb
push
pop
lods
test
cmps
std
fsub
pop
cmp
into
scas
add
inc
cmp
push
lods
add
xchg
popa
add
scas
cmps
icebp
pop
dec
retf
out
test
mov
xchg
xchg
inc
mov
add
push
fwait
je
inc
js
and
ret
adc
jo
test
cdq
call
(bad)
jecxz
xchg
vmovlps
test
xchg
call
ss
(bad)
repz
shl
xchg
mov
sub
out
call
push
mov
mov
(bad)
fistp
or
push
pusha
push
popf
retf
mov
fdivr
lahf
outs
push
add
loop
sub
xchg
and
mov
call
dec
mov
pop
imul
xor
pop
rcl
pop
cmp
popa
inc
lods
and
jo
inc
icebp
jnp
ds
add
dec
dec
sub
mov
mov
pop
scas
int
mov
pop
fadd
mov
jecxz
jnp
test
xchg
xor
add
mov
xor
loope
ret
xlat
iret
aas
mov
into
dec
mov
jmp
loope
cmp
inc
or
or
stos
pcmpgtw
int
push
mov
mov
xchg
push
leave
ror
mov
push
inc
xchg
cli
sbb
cmp
and
aaa
cmp
mov
cwde
test
xor
push
adc
xor
add
dec
xchg
out
inc
mov
enter
nop
packsswb
sub
pop
mov
lods
ret
and
fadd
sbb
xor
xchg
imul
aam
mov
xor
cmp
cmp
lods
out
or
(bad)
clc
pop
ret
mov
retf
xlat
xor
cdq
in
mov
loope
push
xor
fcom
ss
mov
pop
stos
sbb
xor
loope
jae
rol
mov
(bad)
cwde
cmp
fsub
jmp
addr16
dec
xchg
cs
(bad)
je
dec
mov
outs
mov
mov
lock
jnp
xchg
test
ins
pushf
adc
sbb
push
mov
xchg
pop
add
dec
adc
or
jae
or
pop
inc
lock
jo
(bad)
inc
mov
clc
adc
mov
and
push
xchg
std
push
xor
inc
mov
sub
aaa
inc
les
push
add
or
stos
xor
scas
cmp
cmps
mov
sbb
cwde
adc
imul
mov
outs
adc
dec
movs
lods
sub
cmc
push
xlat
lods
loope
ror
jno
xor
in
add
pusha
rcl
mov
push
jno
add
push
adc
mov
lods
sub
popf
repnz
mov
xor
push
xchg
sub
call
out
add
cmp
push
popa
(bad)
push
sahf
adc
pop
es
jecxz
dec
cwde
and
and
mov
scas
inc
jo
push
int
es
pop
adc
outs
push
mov
jmp
pop
mov
and
cmp
mov
mov
push
cwde
test
adc
(bad)
and
sbb
je
sbb
das
in
movs
dec
js
cs
aas
shl
mul
cmp
and
stc
fcmovnb
repz
mov
popf
das
rcr
outs
lds
jp
hlt
movs
mov
mov
test
and
pusha
jp
xchg
in
fdivp
fcomp
jae
popa
mov
loope
scas
loop
fwait
iret
inc
inc
out
aas
fdivr
or
fwait
jne
mov
adc
mov
mov
mov
scas
imul
cmp
ds
fldcw
aas
pop
pop
sar
add
mov
ror
(bad)
cld
repz
jae
fld
sbb
push
jbe
dec
or
xchg
sbb
add
test
lea
jecxz
into
loopne
push
test
mov
fcom
push
mov
inc
daa
(bad)
aas
call
ror
imul
addr16
aaa
xchg
and
mov
jp
(bad)
xchg
aam
pop
jmp
mov
inc
push
test
ret
push
and
nop
pop
cmp
jmp
sub
xor
inc
sub
xchg
bound
rcl
xor
pop
cmp
push
mov
mov
and
and
add
or
test
test
xlat
fisubr
adc
xor
mov
aad
(bad)
pop
punpckhdq
push
jo
jne
xchg
and
in
sahf
stos
jge
enter
xlat
push
cld
mov
push
in
leave
lock
adc
out
jnp
(bad)
pop
test
dec
or
adc
es
sbb
shr
push
sar
lods
mov
push
xor
mov
cdq
xor
shl
shl
adc
push
ficomp
mov
ret
jp
repnz
enter
cmp
cwde
test
adc
cwde
or
dec
in
push
inc
inc
mov
inc
inc
mov
mov
mov
cdq
jns
jge
adc
in
lahf
cmp
mov
out
jno
(bad)
fcom
jmp
or
out
stc
cmp
or
and
ins
mov
dec
fld
das
sbb
rcr
inc
adc
pushf
fld
sub
dec
mov
mov
(bad)
and
pop
fidiv
jecxz
sbb
sbb
xor
nop
xlat
and
test
and
popf
fisubr
or
mov
sbb
xchg
adc
hlt
aaa
mov
push
sub
push
mov
pop
lds
out
test
xor
cmp
jno
pop
mov
mov
(bad)
inc
(bad)
sbb
das
int3
aam
(bad)
test
pop
stos
ds
jbe
xchg
mov
je
leave
out
jp
xor
out
xor
pushf
xor
mov
das
adc
add
mov
(bad)
ins
aad
xchg
inc
dec
mov
pop
and
jo
sub
arpl
das
scas
fwait
aaa
out
jb
xchg
aaa
rcr
popf
xor
bound
bound
addr16
pop
out
dec
xchg
mov
adc
add
mov
vcvtpd2ps
mov
xchg
sti
icebp
sub
loopne
ins
mov
out
arpl
fbld
sbb
out
add
pop
loop
xchg
les
out
and
mov
repz
mov
cs
sti
push
xor
ror
repnz
loopne
adc
jb
out
mov
push
xor
pop
in
cmps
mov
add
mov
pop
or
add
mov
setb
imul
ja
bound
into
xor
(bad)
cwde
jmp
shl
and
mov
mov
jns
lahf
sti
(bad)
outs
ficom
mov
sub
xchg
mov
mov
rcl
stos
add
adc
cmc
repnz
inc
xchg
outs
jmp
push
xor
push
inc
and
loop
outs
lahf
out
cmp
jmp
xor
shl
(bad)
shl
test
jge
retf
jae
jnp
mov
push
xchg
repz
cmc
jp
into
ins
imul
and
mov
sbb
lds
or
call
popf
gs
xor
jne
mov
(bad)
cwde
jns
enter
call
fidivr
mov
xchg
inc
pusha
inc
enter
mov
fisttp
icebp
xor
push
pop
ins
and
mov
mov
xchg
mov
sbb
shr
sbb
gs
cs
push
sar
and
(bad)
xchg
xchg
cmp
fistp
imul
pop
sbb
push
cmp
test
enter
adc
(bad)
(bad)
xchg
call
rol
add
dec
jecxz
add
enter
pushf
sub
mov
push
cld
in
dec
jne
adc
outs
stc
fisttp
repz
jmp
fwait
mov
rcl
or
into
adc
jmp
xchg
cdq
(bad)
pusha
dec
dec
retf
(bad)
sub
jno
pop
pop
cmc
push
cmp
adc
out
sahf
inc
adc
mov
faddp
jbe
push
adc
outs
push
jge
push
dec
mov
daa
add
inc
mov
jp
sbb
fstp
ins
or
pop
dec
iret
cmp
add
hlt
repz
arpl
or
jns
lahf
outs
out
ds
xor
jl
(bad)
repz
xchg
inc
inc
call
xchg
mov
mov
and
call
ins
xchg
out
jno
xchg
dec
pop
xchg
pop
aas
pop
and
jmp
stos
jg
retf
fdiv
sub
add
fsubr
ins
sub
in
mov
cmp
pop
leave
test
xor
cmp
mov
push
ror
cwde
dec
inc
pop
push
imul
xchg
sbb
loope
xor
leave
movs
cmps
push
jmp
mov
cs
test
sub
add
arpl
neg
mov
sub
add
inc
mov
add
jge
dec
pushf
scas
push
inc
sub
lods
fisubr
ret
or
jb
rcr
pop
xor
(bad)
gs
xor
cmc
pop
inc
lods
(bad)
and
jp
dec
or
jo
mov
test
out
pop
scas
inc
jb
sub
push
sub
stos
jmp
add
push
push
mov
jae
aas
sub
mov
push
(bad)
mov
aam
cmp
(bad)
aam
pushf
xor
pop
push
ss
push
xor
icebp
cmp
pop
sub
xchg
mov
inc
cmc
cmp
int
add
cmp
cld
(bad)
clts
mov
stos
test
sbb
enter
mov
jg
in
xchg
rcl
add
daa
pop
push
int3
sbb
(bad)
pop
sub
jmp
lods
das
sub
mov
adc
jmp
or
dec
cmps
call
cld
jo
push
and
pop
push
pop
and
enter
xchg
mov
neg
add
push
js
arpl
mov
mov
mov
mov
adc
pushf
retf
jo
mov
cmc
inc
xor
(bad)
in
daa
stos
cs
fs
stos
xor
pushf
mov
sbb
sub
dec
ja
lahf
pop
xchg
sahf
add
mov
cmp
dec
test
test
mov
mov
sahf
les
lods
repnz
fldcw
outs
push
mov
jae
jno
out
push
aam
dec
ret
imul
xor
add
mov
cmp
jmp
je
mov
mov
push
cmp
lock
inc
in
jae
xchg
daa
add
sbb
loopne
out
mov
adc
cmp
and
stc
iret
cmps
ja
mov
fbstp
(bad)
pop
xchg
cs
std
xor
ret
jbe
mov
sub
mov
mov
movs
jns
fwait
xchg
cmp
in
stc
lea
pushf
les
or
xchg
cld
aaa
cmp
imul
jno
mov
xchg
fisttp
in
mov
xchg
movs
and
test
mov
stos
inc
loop
ds
cmp
outs
jg
mov
les
(bad)
call
ins
test
jbe
repz
cwde
cld
movs
iret
dec
fisubr
popa
adc
(bad)
and
xchg
push
ja
mov
mov
or
inc
loope
push
dec
sub
push
shl
cmc
sar
cs
xchg
pushf
mov
cmps
mov
pop
mov
jmp
leave
dec
mov
int
xchg
sub
push
cmp
fbstp
mov
aam
pusha
mov
push
pop
out
push
add
push
xor
and
enter
pop
and
mov
(bad)
sbb
stos
fs
pop
lahf
jo
sti
pop
push
loopne
imul
stos
loope
sub
jmp
mov
and
mov
fwait
cs
xchg
cmp
(bad)
inc
dec
jo
movs
sbb
pusha
add
jb
mov
add
inc
scas
mov
je
jbe
rcl
imul
ffreep
fs
retf
out
mov
mov
dec
pop
push
xchg
sbb
sub
inc
cmp
rcl
mov
repnz
out
dec
inc
mov
and
dec
mov
pop
push
shr
add
rcr
test
retf
ja
jnp
cmp
dec
add
mov
into
cwde
fcom
lock
js
pop
or
clc
in
sbb
dec
xor
test
(bad)
(bad)
jbe
push
sbb
or
mov
inc
dec
out
nop
ja
and
in
or
jmp
and
mov
adc
jb
gs
daa
icebp
pop
dec
push
adc
jp
cwde
inc
push
test
neg
aas
imul
push
sar
mov
je
add
mov
inc
jbe
pop
push
rcr
mov
lods
push
sub
mov
jns
pop
sbb
dec
enter
jl
aad
data16
retf
sub
(bad)
icebp
retf
mov
in
mov
scas
push
daa
ins
shr
pop
pop
inc
imul
push
retf
jns
pop
jb
test
add
repnz
(bad)
lea
jmp
imul
dec
mov
push
je
lods
data16
jmp
int
mov
push
inc
jo
int
out
push
sub
fprem1
xchg
xchg
cmp
sub
jge
jo
pop
stos
fwait
mov
movs
push
ror
fmulp
(bad)
(bad)
retf
into
pushf
cmp
sar
(bad)
jo
ss
sbb
xor
adc
imul
mov
add
shl
ds
push
push
jmp
inc
(bad)
gs
cwde
stos
push
mov
push
pop
cmc
mov
xor
jg
sti
outs
and
hlt
push
out
mov
and
mov
lock
test
std
xchg
jo
sub
and
pushf
(bad)
icebp
test
fdivr
mov
mov
sub
mov
jmp
jb
jbe
repnz
push
dec
(bad)
cmp
xchg
dec
push
push
test
jno
push
pop
es
(bad)
mov
std
ins
imul
repz
lods
push
cmc
call
xchg
pop
sub
xchg
ret
cli
lea
bound
into
add
or
jmp
push
movs
adc
loop
inc
nop
cmp
test
mov
clc
push
imul
push
shl
(bad)
sbb
adc
pop
daa
aas
daa
add
mov
cli
ret
neg
repnz
imul
mov
adc
mov
jp
inc
mov
xor
cmp
shr
in
push
push
out
push
pushf
ret
xchg
lea
call
pusha
ja
repz
sbb
fisttp
cmps
mov
into
and
jmp
shr
pop
movs
sub
jns
inc
pop
out
movs
mov
inc
nop
push
dec
or
sbb
xchg
inc
inc
ror
ins
sbb
sub
(bad)
(bad)
std
pusha
arpl
jmp
dec
pop
loop
gs
jmp
xchg
pop
jle
xchg
aam
inc
(bad)
adc
jno
repnz
jae
popf
lahf
inc
and
sbb
sbb
add
pop
rcr
clc
adc
push
outs
or
add
xchg
jns
enter
mov
pop
cdq
sub
mov
jne
sub
mov
loope
xchg
je
into
sahf
cmps
xchg
loopne
push
pop
jmp
nop
std
ret
sbb
mov
cld
enter
retf
jbe
jl
aad
xchg
sub
imul
mov
stc
adc
pop
rol
xchg
in
xlat
adc
dec
xchg
jge
movs
mov
fmul
(bad)
xchg
xchg
jno
push
retf
mov
lods
dec
inc
test
or
push
aas
sbb
fadd
cmp
mov
xor
fwait
mov
pop
mov
lahf
stos
(bad)
sub
outs
lds
leave
gs
retf
daa
push
push
popa
fsubr
mov
std
sub
mov
ins
test
mov
pop
pushf
xor
loopne
cmp
or
in
div
out
jge
adc
xor
xchg
popa
adc
sub
inc
mov
lea
jl
xchg
jno
cmp
xor
icebp
mov
cmps
xor
mov
jne
jg
push
cld
ins
adc
push
test
push
ret
and
push
push
pop
pop
rcl
pop
add
pop
sub
mov
or
xor
aaa
or
imul
loopne
pop
outs
dec
cmp
add
leave
scas
push
sbb
ret
push
xchg
or
sub
xchg
xchg
xchg
jl
js
pusha
outs
loop
mov
retf
pusha
pop
std
repnz
fidivr
stos
rcr
jmp
and
jne
mov
pop
ins
dec
int3
pop
or
sub
(bad)
mov
xor
rcl
push
movs
scas
xor
sub
int
retf
cmps
sbb
adc
mov
jbe
mov
push
jne
inc
cmps
dec
iret
mov
imul
neg
add
gs
rol
out
sti
mov
or
xor
stos
pop
out
fwait
xchg
cmps
lds
cmc
xor
stos
inc
in
or
and
popa
adc
test
mov
xlat
retf
shr
mov
aaa
ret
test
cwde
(bad)
out
mov
pop
push
push
xor
aam
cli
sbb
scas
mov
pop
rcl
shr
and
push
ret
mov
cmc
and
(bad)
fcmovu
mov
repnz
cmp
cmc
xchg
hlt
mov
adc
loopne
fadd
mov
pusha
cmp
aad
shr
(bad)
in
mov
mov
or
or
pop
or
jg
(bad)
inc
pop
enter
mov
push
push
out
outs
call
ror
call
icebp
dec
clc
xor
push
shl
xor
or
stos
fs
add
cmps
cdq
ret
loope
xchg
cmp
add
dec
and
adc
ins
sbb
ins
test
inc
pop
dec
xchg
rol
and
mov
pop
mov
icebp
dec
retf
fdivp
ret
sub
call
shl
pop
or
popw
push
push
popa
and
arpl
push
daa
cmp
out
or
cdq
(bad)
out
add
stos
addr16
pop
out
push
adc
pop
mov
call
and
mov
or
aad
lea
mov
push
cmp
sub
adc
ja
mov
adc
out
and
jns
adc
sub
dec
es
sub
push
add
and
fcomp
fwait
mov
jne
cmp
popf
fucomp
dec
std
lock
inc
movs
xor
je
add
xacquire
xchg
xchg
push
pop
lds
sahf
jmp
push
dec
in
cmp
cwde
jg
jnp
pop
jnp
popa
fisubr
dec
(bad)
fxch
mov
mov
dec
bnd
pop
jo
push
and
pusha
cdq
test
mov
mov
inc
movs
mov
test
ret
xor
cwde
mov
jle
dec
mov
mov
sbb
mov
(bad)
lock
cli
or
jle
cmp
dec
aad
and
jnp
shl
add
mov
mov
mov
test
sub
adc
add
ds
(bad)
ja
aas
adc
jo
inc
or
dec
pop
outs
jb
dec
pop
ja
ret
xor
call
cs
dec
mov
movs
add
fnsave
cmp
int3
xchg
(bad)
push
mov
xor
mov
xchg
jae
sti
dec
stc
sub
sbb
mov
push
sub
sub
sbb
xchg
clc
lea
aad
ror
or
jmp
xchg
pushf
or
shr
test
xchg
jo
js
xchg
and
xor
push
das
xor
mov
out
loope
push
cmp
mov
into
xor
pop
or
push
push
repnz
dec
into
adc
retf
adc
push
jecxz
ror
ret
dec
sbb
popf
sti
sti
add
xor
adc
jg
cmp
rcr
jns
inc
test
fsubr
call
pop
pop
sub
lock
adc
add
fild
aad
and
fcomp
cmp
frstor
mov
sti
cld
jnp
nop
xor
ins
je
and
push
repz
jns
mov
add
ret
xchg
pushf
out
sbb
pusha
out
pop
les
jge
xlat
push
stos
fwait
cmp
xchg
repnz
add
jns
mov
dec
xchg
inc
loopne
push
push
mov
in
int
adc
js
repnz
push
test
(bad)
(bad)
jge
stos
and
imul
je
fistp
mov
xchg
scas
inc
call
cli
pop
call
test
lods
je
sbb
push
xchg
xor
push
lock
sar
inc
push
or
cmp
mov
ss
xchg
push
ficom
cvtps2pi
xchg
fwait
mov
jecxz
or
outs
dec
inc
mov
or
add
scas
or
mov
cmc
sbb
fstp
and
sahf
scas
sub
mov
data16
ja
cmp
dec
daa
lea
jne
cmps
fiadd
sbb
mov
rcl
jge
pop
in
adc
ja
adc
cmc
mov
mov
enter
test
ds
dec
fst
and
cmp
xchg
sub
jp
fisubr
pop
jne
and
pop
sbb
gs
or
test
dec
jmp
repz
cmc
jmp
dec
push
sbb
push
cli
jmp
jle
out
add
aam
gs
outs
bound
lods
xor
jne
loopne
aas
repz
and
hlt
xchg
pop
lods
iret
icebp
adc
add
xchg
loop
pop
test
or
sahf
stos
mov
test
shr
jae
xor
cmp
inc
out
pop
xor
shl
cwde
nop
repz
adc
inc
test
fimul
adc
fdiv
xchg
inc
scas
jge
mov
test
xchg
ja
test
inc
imul
sub
add
mov
lods
pusha
pop
(bad)
jmp
or
out
or
cmp
mov
out
ins
mov
jb
cmp
push
xchg
jl
cmc
push
mov
push
ins
mov
sahf
mov
in
or
call
sahf
fwait
mov
sub
add
jnp
push
lahf
aam
js
ss
mov
cmc
mov
adc
mov
aam
dec
mov
sbb
push
sub
call
cmps
ja
add
pusha
xchg
cdq
xchg
sub
jg
jp
cmp
imul
inc
jmp
retf
cmc
stos
in
xlat
cmps
adc
outs
outs
cmp
jecxz
mov
cmp
xchg
stos
jg
clc
add
imul
cld
enter
cmc
or
fstp
(bad)
xchg
push
dec
clc
movs
adc
mov
push
jo
push
aam
cli
stc
in
pop
es
add
in
dec
popf
(bad)
sbb
add
adc
mov
mov
popa
aaa
mov
jnp
xor
adc
mov
sar
shl
push
mov
ds
inc
adc
test
xchg
or
loop
xchg
lea
inc
sbb
cmps
xchg
mov
in
loop
jmp
repz
mov
add
xchg
sbb
jo
(bad)
into
rol
retf
pop
sub
lods
sub
fisttp
repnz
mov
cmc
mov
(bad)
aas
add
mov
or
adc
or
push
movs
sub
sbb
xchg
xor
mov
(bad)
jns
adc
pushf
inc
daa
add
add
mov
mov
pushf
mov
dec
fnclex
and
(bad)
ficom
fmul
outs
int3
xchg
repz
daa
jno
xor
pop
push
dec
adc
xor
sbb
sub
inc
mov
lods
sbb
ror
movs
push
dec
ins
in
sahf
add
pop
xchg
test
test
mov
xor
add
xchg
push
mov
je
into
out
mov
jge
ins
dec
mov
mov
or
pop
cmps
stos
add
cmp
inc
dec
sahf
adc
jb
sub
(bad)
mov
xor
push
stos
ins
data16
lds
in
push
mov
arpl
jae
fld
daa
stos
cmps
cmps
push
xor
jl
pop
sbb
pop
int
inc
(bad)
fimul
inc
sub
xchg
and
push
and
cmp
cmp
test
jae
sti
les
dec
cdq
(bad)
adc
xlat
rol
cwde
push
cmps
or
cmp
aad
imul
and
stc
push
sar
movs
es
ficom
sbb
or
dec
jp
les
fsubrp
out
mov
mov
ret
mov
mov
fisub
push
mov
in
rcl
push
jle
in
stos
or
aad
pop
dec
in
addr16
mov
jne
loope
sub
and
(bad)
retf
std
es
xchg
out
scas
cmp
repnz
call
popf
test
sub
pop
pusha
and
shl
cmps
push
jno
sub
mov
mov
out
fs
xor
in
or
repz
shl
cmp
gs
push
sbb
mov
sub
movs
mov
sbb
jle
sbb
mov
cmp
mov
sbb
das
mov
movs
adc
push
xor
sahf
and
mov
test
xchg
mov
pushf
test
data16
push
loopne
repz
(bad)
mov
pop
ds
cmp
xchg
sar
mov
or
test
stos
out
or
jno
sahf
rol
xor
sbb
inc
add
sub
test
pop
and
hlt
cwde
ins
mov
add
push
cmc
not
call
cld
dec
xchg
call
loop
shl
pop
sbb
dec
clc
add
mov
call
bound
rcr
mov
retf
pop
shr
inc
out
mov
ds
cmps
mov
mov
call
push
push
xchg
outs
movs
inc
pop
push
nop
retf
fistp
xor
and
or
loop
lds
cmc
test
sbb
sbb
add
test
aad
jecxz
mov
and
xchg
call
scas
xchg
fs
loope
aad
cbw
xchg
mov
jne
mov
push
jo
sub
add
cmps
cdq
mov
pusha
gs
leave
mov
clc
ror
push
xchg
mov
jle
cmp
(bad)
repz
popf
mov
xor
add
icebp
push
dec
cmp
sub
pusha
and
sbb
fistp
push
mov
ins
jl
dec
pop
cmp
ret
adc
sbb
jl
mov
mov
sub
lods
adc
ror
icebp
mov
pop
cdq
mov
sub
imul
test
or
int
mov
imul
mov
frstor
shl
(bad)
jl
xor
jbe
test
loope
nop
ret
or
les
cmp
push
cmp
push
cmp
sahf
dec
push
jo
ret
ror
mov
outs
loope
inc
sub
pop
mov
dec
inc
adc
in
jl
mov
fstp
jae
and
icebp
adc
hlt
push
movs
inc
xchg
nop
add
or
xchg
adc
push
xchg
mov
pop
es
test
fistp
shl
sub
scas
je
rol
stos
inc
ret
pop
shl
mov
(bad)
adc
fwait
imul
add
mov
rcl
cld
int
jg
jb
mov
mov
and
dec
clc
xor
jno
fwait
lea
in
xchg
mov
push
sbb
mov
xchg
and
adc
div
mov
out
bound
imul
xchg
rol
mov
or
jnp
outs
push
add
test
call
icebp
imul
or
mov
sub
stc
dec
fmul
cmp
adc
pop
mov
inc
mov
pop
or
jne
sar
fstp
mov
sbb
test
sub
push
shl
dec
push
xchg
frstor
fwait
mov
pop
sbb
in
mov
dec
fst
mov
sahf
add
dec
(bad)
repnz
mov
mov
mov
sbb
sbb
mov
popf
cmp
sub
pop
add
or
retf
mov
mov
in
and
daa
or
mov
bound
out
dec
xchg
xor
int
xchg
cmp
(bad)
sub
fcomp
dec
cli
cmc
outs
stos
mov
or
loopne
es
sti
mov
pushf
mov
cwde
test
inc
sbb
and
sbb
call
(bad)
fcomp
xor
pop
clc
ins
pop
ret
pop
cmp
xchg
cmc
xchg
ja
loopne
xor
and
mov
outs
addr16
push
xchg
push
xchg
dec
cmp
sbb
loopne
add
in
not
inc
imul
mov
or
in
stc
pop
je
dec
outs
sbb
arpl
cmp
pop
pop
xchg
ins
retf
test
inc
xchg
add
or
and
popf
xlat
lds
push
mov
sub
movs
mov
inc
ja
jo
jno
push
add
or
and
sub
jg
pop
ss
inc
push
dec
int
cmps
fisttp
mov
xor
xor
or
or
std
pop
jae
les
jle
sbb
sub
push
cmp
push
pop
cli
inc
mov
(bad)
adc
iret
dec
xor
jno
push
repz
adc
sub
cdq
cdq
pop
cmp
fs
in
pop
loopne
push
sti
and
add
std
ins
adc
js
stc
lahf
loope
xchg
jb
loop
gs
lahf
addr16
mov
push
std
push
pushf
xor
sub
stc
(bad)
lea
(bad)
sbb
call
(bad)
sub
call
xchg
sub
iret
and
popf
push
repz
jae
jnp
xchg
jge
loope
ins
movs
cmp
jle
mov
ss
(bad)
rcr
sbb
adc
xchg
xchg
and
(bad)
rol
cld
repnz
pop
xor
push
inc
cdq
push
stos
and
xor
sbb
or
out
pop
pop
jp
mov
adc
in
cwde
fcomp
cmp
and
iret
aas
mov
xor
xor
sbb
pop
sub
pop
mov
test
or
sub
out
(bad)
retf
mov
or
aad
xchg
aaa
sub
push
mov
mov
rol
xchg
and
sub
aad
pushf
dec
in
call
(bad)
enter
movs
mov
jl
imul
add
pop
shr
mov
lods
sub
jle
(bad)
iret
inc
test
jb
(bad)
and
jle
mov
cmc
out
cld
dec
pcmpgtw
xchg
mov
xor
popf
and
int
lods
lods
mov
inc
mov
dec
xor
dec
mov
and
lods
pop
adc
push
xchg
rcr
mov
clc
push
ret
and
(bad)
mov
or
push
test
stc
(bad)
es
bnd
add
jl
mov
pop
inc
ss
(bad)
mov
leave
xchg
xchg
push
movs
js
or
inc
jb
stc
push
mov
and
ror
shl
fisttp
in
movs
arpl
out
push
icebp
dec
pandn
push
dec
push
xchg
dec
jno
mov
fisttp
pusha
mulps
test
pusha
dec
and
sub
pop
sti
lds
sub
mov
inc
rcr
popa
xchg
fcom
mov
cmc
inc
in
pop
aad
xor
sub
jnp
stos
ffreep
fisttp
stc
fdiv
pop
and
xor
xchg
mov
sub
mul
test
push
icebp
or
xchg
xchg
jmp
movs
adc
aas
retf
inc
in
mov
jp
add
jmp
arpl
fwait
pop
fwait
js
cmp
jno
mov
stos
mov
cmc
push
pop
ds
jnp
xchg
and
js
pop
sahf
loope
es
ds
rol
sub
pusha
pop
mov
and
fidivr
dec
fcmovbe
cmp
mov
or
or
adc
adc
pop
mov
(bad)
(bad)
push
mov
aad
sub
sub
jge
add
mov
fild
imul
aaa
ror
or
and
xchg
jle
aaa
mov
mov
sbb
or
pusha
scas
push
xchg
and
cdq
xlat
loope
arpl
jmp
cmp
jmp
retf
and
sti
jo
fisttp
lods
ror
xor
sbb
cmp
popf
retf
call
es
daa
out
shl
add
xor
cld
sbb
pop
bound
ja
mov
inc
jg
jl
ficom
or
cli
sub
add
mov
xor
cdq
nop
or
retf
hlt
ret
inc
sub
jbe
mov
mov
push
pop
or
fadd
in
arpl
push
rcr
cmc
shl
or
loopne
cmps
push
pop
xacquire
xchg
fdivr
or
and
out
es
sbb
not
inc
push
mov
fild
pop
xor
add
pop
imul
fnstenv
retf
xchg
mov
sbb
into
inc
popf
lea
sub
inc
lods
jbe
sbb
mov
sbb
ds
or
push
xchg
movs
sub
add
test
push
test
enter
jge
stos
(bad)
aad
rcr
cdq
pushf
sar
inc
xchg
mov
repnz
add
cmp
stc
mov
(bad)
lods
xchg
or
jle
add
lods
push
mov
mov
test
xchg
int
or
scas
aaa
add
push
adc
xlat
arpl
push
sub
test
adc
adc
xor
add
sub
ds
mov
mov
inc
mov
push
addr16
mov
push
push
adc
cmp
loopne
mov
and
jecxz
cwde
shl
jl
pop
fidivr
call
sbb
or
test
ins
pushf
mov
pushf
pop
sbb
cmp
sbb
cmp
mov
jl
out
jp
push
std
sub
add
pusha
fild
push
icebp
ret
xchg
lahf
das
in
xor
enter
jae
(bad)
imul
mov
fmulp
xchg
aam
int
mov
sub
adc
(bad)
sub
cmp
int
jae
push
imul
cmps
mov
ss
push
jmp
pop
or
adc
and
(bad)
jae
ret
adc
(bad)
inc
sub
popa
adc
xor
mov
(bad)
push
cwde
mov
push
pop
jae
sbb
pop
adc
daa
ja
imul
cmp
pop
mov
push
out
mov
and
mov
hlt
mov
mov
mov
dec
jle
sub
dec
pop
(bad)
push
and
repnz
cmp
icebp
mov
and
sub
cmp
or
add
push
int3
idiv
arpl
in
movs
jecxz
adc
aad
cmp
cwde
push
mov
push
daa
mov
mov
bnd
mov
sahf
cwde
aad
fwait
int3
sbb
(bad)
mov
cmp
mov
push
arpl
or
jmp
or
in
ret
cmp
sub
int3
dec
sub
jl
dec
cmp
sub
add
arpl
out
cli
repz
sbb
jo
xchg
ins
das
jo
pop
inc
mov
daa
icebp
add
dec
pusha
clc
cmp
add
or
jmp
and
mov
add
dec
and
shr
sbb
sub
movs
cwde
test
in
(bad)
cdq
sar
addr16
mov
(bad)
xor
and
fnsave
(bad)
rol
inc
mov
cmps
dec
push
cmc
cmp
cwde
mov
xchg
xor
ret
jmp
jle
mul
xor
jo
dec
loope
xchg
rcr
mov
and
and
xchg
inc
test
scas
aam
pusha
xlat
shl
add
cmp
cmp
inc
pop
pop
push
push
sbb
lahf
cmp
scas
adc
fld
push
pushf
inc
pop
and
adc
(bad)
cdq
loope
sub
inc
test
xchg
xchg
or
push
sbb
pop
inc
out
pop
sahf
and
adc
(bad)
sub
ss
push
dec
stos
cld
dec
pushf
das
dec
pop
leave
rcl
mov
dec
ret
shl
hlt
mov
xchg
mov
mov
sbb
pop
mov
sbb
shl
mov
xor
sub
cwde
(bad)
js
nop
xlat
xor
jo
repnz
iret
inc
xchg
sub
pusha
das
cdq
imul
mov
dec
in
dec
or
fadd
push
stos
stos
ds
xor
out
or
ficomp
pcmpgtb
cmps
inc
xchg
sahf
pop
and
and
cmp
dec
and
(bad)
cld
div
jbe
ss
int
add
(bad)
fucomp
js
pop
aaa
out
xchg
stc
mov
outs
out
sar
stos
stos
aaa
jmp
inc
mov
push
xor
hlt
sbb
int
cmp
mov
cmps
xchg
outs
adc
sub
out
imul
into
outs
pop
cmp
lods
mov
mov
xchg
je
pop
lea
or
jmp
mov
push
inc
fimul
nop
or
pushf
sbb
inc
push
mov
ja
dec
daa
mov
mov
adc
in
add
call
mov
xchg
jmp
jb
nop
sub
lods
or
daa
add
xchg
dec
mov
fs
cmps
push
sub
pop
adc
hlt
stos
cs
nop
lods
xchg
mov
faddp
in
ror
add
int3
sti
xchg
mov
or
gs
add
je
mov
fisttp
fmul
mov
movs
pop
stc
add
pop
pop
pop
iret
mov
xchg
dec
je
cmc
outs
nop
cmp
dec
xor
fdivr
and
rol
or
add
ror
or
mov
xor
test
jecxz
inc
pop
mov
repz
cmps
dec
hlt
arpl
shl
shl
mov
lods
ret
jmp
pop
stos
dec
movs
enter
xchg
lahf
sahf
(bad)
leave
js
add
cmps
ret
push
adc
or
fsub
inc
cld
push
adc
sbb
fisub
lea
mov
ret
inc
mov
jnp
fimul
pushf
jne
ins
inc
in
and
mov
enter
retf
in
pop
cmp
mov
arpl
popf
push
dec
xor
cmp
lds
icebp
mov
adc
pop
loop
dec
mov
cmp
cli
aaa
add
push
xor
xchg
cmp
ss
push
psrad
pop
out
int3
cdq
loopne
fwait
pavgw
out
jae
cmp
add
out
sbb
jecxz
pop
mov
sub
loop
mov
jnp
xor
sbb
fdiv
inc
in
in
arpl
cs
dec
ret
pop
push
inc
mov
cmc
jae
xchg
xchg
pop
retf
cdq
push
xor
cmp
das
sbb
adc
in
mov
sbb
pushf
xor
add
jl
int3
mov
iret
xor
mov
mov
test
xchg
or
push
jl
(bad)
cmp
and
pop
cmp
jns
jg
(bad)
retf
or
pop
sub
xor
das
rcr
xor
pop
mov
les
jecxz
stos
int
adc
sub
nop
fild
push
loop
pushf
repnz
push
xor
hlt
mov
push
inc
mov
and
dec
xor
xchg
cmp
mov
sbb
scas
arpl
(bad)
in
out
loope
cmp
out
in
sti
dec
pop
aad
outs
adc
and
jmp
loope
dec
or
push
shr
xor
xchg
test
mov
fiadd
pop
lds
jnp
test
sbb
sbb
jmp
int
ltr
mov
in
test
mov
addr16
xor
push
repz
mov
cdq
xor
(bad)
mov
cmp
daa
or
mov
jge
jo
xchg
stos
xchg
or
sub
xchg
retf
jle
mov
out
mov
push
or
mov
sbb
mov
push
push
cmp
jb
popf
inc
fsubrp
push
sbb
sub
pushf
test
je
movs
mov
in
test
aam
jb
and
mov
mov
clc
mov
test
pop
xor
into
jae
dec
cmp
add
xor
or
push
and
add
add
test
mov
dec
push
xor
aad
rep
sub
sub
fs
xchg
xor
imul
jg
leave
pop
xchg
imul
ins
mov
cdq
pop
xchg
arpl
inc
pop
ret
ss
es
rcr
lods
ja
paddsw
cmp
add
xchg
xlat
jecxz
mov
mov
cwde
rol
xchg
stos
and
adc
int3
scas
xor
movs
je
mov
xlat
add
jb
fnop
in
movs
sbb
jle
push
jno
xor
(bad)
fisttp
mov
dec
pop
mov
dec
adc
and
fadd
clc
stc
test
bound
clc
fwait
xchg
fistp
xor
and
jo
adc
aam
dec
mov
adc
or
stos
pop
addr16
fiadd
lods
cmc
xchg
stc
pushf
addr16
dec
jae
std
in
ja
or
pop
fld
call
pop
(bad)
dec
popf
jl
push
jbe
mov
arpl
dec
push
mov
dec
jbe
out
rcr
mov
psubsb
ds
outs
lahf
mov
pusha
jle
cmp
adc
shl
or
jge
mov
or
pop
pop
aam
scas
jle
sub
sub
mov
jns
in
xchg
mov
sar
xchg
mov
movs
stc
cmc
mov
rcr
imul
ror
cli
add
lea
imul
aaa
seto
mov
stos
mov
mov
std
add
mov
or
fcomip
or
test
jg
cmc
cmp
jne
and
aam
sbb
jbe
outs
or
jns
cmc
in
pop
add
cmp
xchg
push
lahf
(bad)
enter
jnp
mov
or
leave
pop
test
xchg
icebp
and
mov
sub
mov
out
clc
outs
jmp
dec
imul
xchg
in
arpl
clc
das
jae
(bad)
lea
imul
ret
aam
loopne
movs
out
test
mov
shr
push
xchg
pop
adc
les
test
xchg
(bad)
retf
js
mov
mov
push
sub
add
retf
lock
(bad)
stc
xor
pop
push
pop
ficom
je
ret
adc
imul
fstp
cdq
mov
jbe
mov
gs
test
xchg
retf
sbb
nop
pop
dec
push
jmp
js
test
mov
cmp
xchg
xor
jmp
mov
xchg
and
inc
xlat
xor
ss
cli
or
or
add
add
nop
repnz
lods
or
xor
sub
cli
adc
and
mov
clc
and
push
mov
ror
stos
cld
stos
mov
ret
and
(bad)
les
outs
in
rcl
inc
retf
out
shr
pop
mov
jne
xor
jecxz
stos
in
(bad)
(bad)
push
sbb
les
mov
sbb
sbb
stos
jg
inc
inc
xlat
jns
xor
pop
test
inc
imul
cmp
(bad)
pop
push
jbe
addr16
call
pop
or
cmp
dec
pop
push
adc
out
xchg
mov
cs
adc
sbb
sti
pusha
mov
cs
push
cdq
dec
retf
fild
shr
xchg
ds
mov
xchg
retf
mov
call
dec
cdq
clc
sub
jo
jecxz
nop
sub
fwait
inc
shl
adc
pop
and
loopne
xor
mov
push
out
xchg
dec
sar
outs
xor
cmc
ja
inc
inc
ins
gs
jo
hlt
add
mul
out
jl
test
popa
jg
repz
cmp
push
mov
sub
mov
push
adc
(bad)
jne
adc
imul
fild
sbb
xor
dec
sbb
add
fstp
loopne
cs
andps
ins
xor
shl
xchg
repnz
(bad)
rcl
popa
mov
out
nop
rcr
push
push
xchg
movs
lods
mov
movs
mov
fcom
nop
fidiv
fistp
idiv
sbb
push
dec
pushf
add
cld
sbb
mov
(bad)
fmul
sub
loopne
sbb
pusha
iret
push
mov
mov
pop
fs
pusha
cmp
adc
xchg
sbb
les
xchg
mov
repnz
or
add
sbb
das
adc
iret
pop
cs
or
clc
add
xchg
jg
push
retf
cmps
pop
js
pop
jge
dec
xor
or
adc
jmp
dec
movs
icebp
imul
stos
dec
loop
nop
dec
adc
fisubr
aad
push
dec
jnp
adc
stos
js
test
dec
iret
cmp
add
stos
jo
das
sbb
lahf
movs
or
xlat
push
jp
mov
jne
mov
dec
xor
call
mov
mov
mov
push
aad
inc
clc
inc
push
fisttp
xor
int
jp
adc
sub
push
and
pushf
push
push
sahf
mov
in
outs
movs
ret
test
test
adc
inc
ret
nop
mov
sub
dec
loope
int
or
int
mov
pop
rcr
inc
pop
mov
retf
mov
dec
movs
and
loop
int
lods
popf
out
ret
sub
shr
cld
sti
and
bound
mov
fadd
lods
pop
fisub
xchg
mov
nop
enter
mov
jge
scas
sub
ds
adc
cwde
fisubr
stc
mov
jecxz
mov
dec
xchg
je
or
lods
inc
imul
xor
push
sub
add
xor
popa
movs
(bad)
jns
mov
sbb
jno
mov
inc
jbe
push
jp
sbb
and
dec
mov
mov
sub
ds
sti
push
jmp
lods
das
lds
(bad)
ret
adc
dec
jae
pushf
rol
adc
aad
push
into
inc
les
xor
mov
clc
ds
jge
push
add
ins
lock
scas
mov
xchg
cld
nop
xor
push
lods
push
not
and
or
es
into
and
push
pop
fnstsw
push
les
xor
jmp
lods
nop
loopne
sub
cwde
or
xlat
pop
xchg
out
dec
test
mov
mov
(bad)
pop
fnsave
ins
loopne
mov
(bad)
out
cwde
test
pop
(bad)
xchg
inc
adc
cmp
retf
cwde
mov
outs
cs
outs
movs
cmp
cmp
es
mov
mov
or
jecxz
std
add
loope
daa
adc
sbb
mov
dec
aas
mov
imul
cmp
ret
int3
test
pop
imul
arpl
call
bnd
inc
sub
mov
arpl
repz
jmp
int3
outs
xchg
sar
mov
shl
inc
mov
pop
dec
fldenv
jle
outs
pop
dec
mov
jmp
or
and
adc
jl
adc
or
mov
pop
jbe
ss
(bad)
iret
fnsave
fwait
(bad)
stc
inc
dec
pop
aas
loopne
dec
mov
fsub
retf
(bad)
dec
(bad)
mov
and
imul
jmp
scas
cmp
jge
xor
addr16
adc
mov
bound
adc
sub
mov
sub
push
pop
jae
add
in
js
sub
loopne
les
push
and
xchg
xchg
push
inc
pop
arpl
jg
loop
cmp
push
and
repnz
mov
imul
mov
add
mov
cwde
adc
add
(bad)
pop
and
mov
mov
add
mov
fincstp
cs
jno
or
(bad)
push
mov
jge
lahf
clc
(bad)
dec
outs
sar
push
cmps
sbb
jno
shl
enter
(bad)
outs
push
mov
mov
xor
aas
xlat
das
imul
loop
mov
dec
ds
pop
daa
int
push
or
fbstp
cs
jne
jne
das
stc
pop
in
in
mov
clc
sub
js
adc
jmp
lock
push
aas
int3
cmc
mov
jmp
popf
lock
push
je
jbe
sub
fs
cmp
(bad)
(bad)
mov
pop
ja
mov
lds
jle
das
fidivr
ficom
cmps
mov
movs
push
sbb
movs
cmc
imul
ja
jecxz
dec
fisubr
test
fwait
shl
inc
rcl
in
repnz
cmp
lods
stos
inc
mov
add
shl
imul
outs
inc
mov
test
sbb
jecxz
out
add
mov
xor
sub
add
pop
ins
jle
lahf
inc
cld
jmp
xchg
sbb
vfrczpd
pop
push
ror
or
(bad)
pop
imul
lods
icebp
aam
dec
rcr
test
sbb
mov
mov
push
outs
arpl
loop
fcomp
xor
xchg
sub
mov
outs
and
inc
inc
nop
xor
icebp
jns
add
push
xor
rcl
cmp
mov
aad
fnstenv
jle
push
retf
push
push
jle
jle
mov
pop
test
cmp
bound
fwait
xor
shl
xor
popa
movs
out
mov
dec
lods
mov
mov
int
hlt
add
or
cmp
call
and
mov
retf
xor
pop
aaa
cmp
test
push
xlat
dec
test
or
sub
jmp
mov
push
lods
daa
cmp
cdq
mov
jge
dec
lea
mov
aad
sub
or
jb
jns
fcomp
xor
sbb
aad
and
adc
dec
fcom
mov
cmc
clc
lock
cmp
daa
outs
inc
mov
sbb
les
add
mov
imul
xchg
cli
pop
pop
mov
das
scas
clc
icebp
sbb
imul
ficom
inc
std
sbb
sbb
mov
cli
ins
pusha
ss
dec
jmp
daa
iret
push
retf
push
sub
inc
ins
int3
pop
cs
aaa
loope
jle
pop
retf
mov
sbb
pop
push
or
int
je
js
es
cmp
push
inc
stos
popf
movs
lock
dec
sahf
clc
pop
ins
inc
addr16
hlt
stos
mov
push
xchg
rol
dec
mov
xor
shr
or
(bad)
cmp
mov
xchg
rcl
xchg
imul
std
mov
xchg
mov
cmp
fiadd
daa
cld
sub
cmp
xchg
lahf
or
mov
adc
xchg
inc
test
jge
jmp
dec
sbb
mov
sbb
jle
ins
jmp
shr
not
leave
fsubrp
outs
lods
cmp
jg
cmp
test
jno
nop
and
sbb
xor
aaa
fmul
ins
pop
sub
xor
add
inc
push
xor
in
cwde
out
je
ret
outs
out
and
ds
xchg
adc
aad
in
imul
xor
xor
popf
int
mov
dec
cmc
test
xchg
jl
jg
aaa
mov
iret
xlat
jno
lods
loope
pop
ins
mov
imul
jnp
fldcw
les
sbb
xchg
add
mov
add
lock
mov
jge
xor
pop
rol
xchg
push
test
push
push
hlt
ret
popf
cs
or
enter
hlt
xchg
fldenv
pop
popa
jl
xor
pusha
enter
mov
out
fsubr
js
xor
js
inc
inc
xor
stc
stc
and
cmp
sahf
fsubrp
mov
xor
ret
or
jp
jp
fimul
dec
or
or
push
and
cld
in
leave
push
sub
lea
mov
xchg
retf
sar
mov
daa
in
sti
cdq
push
ror
(bad)
sbb
movaps
adc
(bad)
adc
test
arpl
clc
xchg
neg
adc
mov
push
jge
ss
aam
cmp
jge
dec
pop
inc
in
lods
sbb
adc
or
(bad)
jp
lahf
(bad)
jns
test
mov
jnp
rcl
sbb
xchg
inc
mov
jns
pusha
iret
xchg
mov
cld
dec
dec
sbb
in
xor
dec
mov
test
in
sub
and
xchg
jne
rcl
pop
(bad)
or
(bad)
aas
scas
mov
es
lods
inc
mov
jecxz
and
icebp
jmp
adc
int
push
add
int
xlat
loop
ja
inc
sub
and
push
mov
fnstcw
or
dec
fs
add
ins
push
and
mov
sub
stos
xor
sbb
inc
pusha
stc
mov
shl
dec
rcl
jnp
push
jae
sbb
daa
mov
fstp
mov
dec
sbb
sub
fnstcw
cmps
pop
mov
aad
bound
dec
dec
scas
aas
push
jbe
pop
jne
dec
mov
mov
mov
das
adc
call
hlt
jecxz
xchg
aam
in
dec
sbb
fcom
jne
pop
xor
jno
jnp
xor
xchg
in
push
pop
xor
cmp
div
fsub
inc
mov
dec
(bad)
jle
movs
(bad)
(bad)
mov
call
push
jbe
jmp
stos
es
jb
cdq
and
js
or
xchg
out
or
dec
sub
lock
lds
sahf
aad
ficom
outs
outs
xchg
fcmove
dec
shr
nop
pop
dec
xchg
pusha
add
dec
out
push
pop
into
cmp
jecxz
stc
pop
push
movs
pop
enter
xchg
cmp
sti
pop
mov
xor
inc
mov
dec
shr
add
daa
xchg
enter
mov
ret
inc
je
mov
push
or
jbe
cld
in
add
jg
dec
push
enter
call
sbb
add
loop
imul
and
push
nop
adc
nop
push
test
mov
jns
rcr
mov
fdiv
stos
sbb
add
xor
sbb
adc
or
jb
loopne
movs
push
pop
mov
dec
test
cld
push
or
mov
xor
mov
pop
movs
std
mov
imul
mov
cs
fisubr
push
dec
mov
xor
mov
dec
in
movs
sub
scas
xlat
sbb
and
inc
xchg
(bad)
fistp
push
sbb
mov
(bad)
int
div
inc
sub
dec
dec
cld
es
jg
test
outs
jnp
pop
pop
hlt
adc
out
push
daa
and
lahf
gs
fnsave
dec
arpl
ds
xbegin
mov
loope
and
fistp
adc
fistp
leave
aas
hlt
mov
sub
(bad)
jge
sub
inc
arpl
mov
mov
xchg
xchg
cmp
jae
dec
into
out
dec
(bad)
in
lock
(bad)
lea
mov
sub
xor
xchg
popf
inc
sahf
cmp
lods
pop
jbe
int
stos
and
dec
inc
sbb
pusha
add
sub
cmp
xchg
push
xor
mov
cli
(bad)
inc
mov
xchg
push
test
sbb
fs
lods
cld
xchg
sar
icebp
push
jae
pop
xchg
xor
fs
retf
and
nop
and
shl
push
imul
in
fwait
test
pop
stos
rol
mov
scas
push
jmp
dec
das
lds
lods
or
dec
enter
fs
lea
sti
js
(bad)
das
sub
cmp
inc
inc
scas
(bad)
jno
repnz
jns
or
ret
push
ret
out
sub
cmp
mov
test
hlt
push
retf
je
arpl
das
pop
(bad)
mov
fsub
or
ja
(bad)
(bad)
loop
or
xor
jle
dec
aaa
mov
sbb
faddp
in
and
mov
jae
or
or
mov
out
daa
push
sbb
sub
pop
stos
mov
add
(bad)
xchg
imul
mov
in
sar
imul
inc
aad
mov
dec
cdq
mov
mov
fs
call
xor
pusha
out
inc
out
nop
sbb
mov
mov
retf
xor
(bad)
iret
push
xor
pop
out
les
mov
xor
dec
push
sti
pop
pushf
popf
adc
xlat
outs
in
icebp
gs
inc
sub
iret
mov
mov
repnz
test
dec
leave
loopne
enter
jl
pop
xor
out
dec
mov
push
daa
ss
dec
pop
mov
push
add
cmps
sbb
neg
enter
pop
fs
cmp
mov
xchg
outs
mov
loopne
dec
mov
inc
sub
(bad)
fldcw
dec
imul
fpatan
mov
add
in
lods
adc
aam
leave
and
cs
movs
not
and
loope
dec
pushf
xchg
inc
pop
pop
jb
scas
movs
xchg
push
enter
sub
and
popf
in
or
shl
pushf
and
mov
out
inc
cwde
call
popf
xchg
ds
lods
and
add
or
(bad)
mov
in
data16
inc
stos
and
dec
jae
fimul
in
iret
jne
nop
pushf
ins
cli
dec
in
std
jmp
call
mov
repz
mov
sub
sub
mov
loopne
cs
sub
pop
push
(bad)
mov
aaa
retf
or
(bad)
xchg
js
inc
sbb
repz
lods
push
push
popa
pop
popf
js
mov
loope
and
cmp
inc
jo
jge
call
jno
je
jno
jmp
jmp
test
pop
sbb
xor
add
(bad)
shr
ror
cdq
sbb
es
xchg
imul
and
xchg
ret
pop
mov
fld
add
push
cmp
cld
inc
push
nop
in
imul
mov
popa
gs
aad
mov
pop
pop
and
pop
inc
sar
or
jb
pop
shl
inc
pop
fistp
mov
pop
ffree
xchg
jle
sub
mov
add
mov
cmp
xchg
jmp
test
mov
imul
jp
bound
imul
dec
cld
mov
f2xm1
push
imul
cmp
push
imul
repnz
mov
xchg
pop
mov
mov
lds
sti
test
or
ds
cmp
fcom
out
out
out
stc
or
(bad)
add
mov
stos
mov
push
pushf
lods
ja
or
into
mov
dec
(bad)
imul
push
push
pop
adc
pop
add
mov
out
or
(bad)
and
test
ds
adc
xor
adc
and
add
in
mov
movs
test
inc
mov
xor
stos
xchg
jmp
loopne
dec
in
pop
adc
jg
aas
mov
mov
fs
into
imul
lea
int3
sbb
ins
mov
outs
stos
enter
rcr
pop
out
sub
sub
xchg
fdiv
cdq
in
retf
(bad)
cmp
cmp
pop
pop
push
fiadd
iret
mov
add
sub
xor
pop
clc
xchg
adc
xchg
sbb
test
in
push
mov
add
sbb
stos
add
jp
cmp
fsubrp
shl
jbe
push
movs
test
rcr
cs
inc
xchg
cli
inc
mov
sbb
test
jecxz
cmp
out
jne
adc
jae
neg
pop
in
rol
jmp
scas
jae
xor
sahf
dec
jno
movs
mov
xchg
pusha
arpl
inc
pop
jge
pop
mov
mul
sti
sbb
fst
ret
pop
into
jmp
push
test
ret
mov
cwde
cld
aaa
std
add
xchg
add
test
and
inc
repnz
iret
aam
push
ror
dec
addr16
adc
adc
arpl
outs
outs
and
xor
addr16
fwait
inc
icebp
jbe
gs
(bad)
ins
jb
rcl
push
jecxz
data16
out
mov
scas
pop
scas
fisttp
mov
xchg
sub
mov
imul
cmps
push
stc
retf
sub
rol
mov
jle
pop
adc
adc
cmp
pop
mov
mov
(bad)
or
inc
pop
lahf
gs
inc
(bad)
jge
cmc
nop
repz
mov
in
loope
xchg
fistp
imul
movs
mov
lahf
mov
cmps
xchg
jae
sti
das
mov
push
jae
xor
pop
mov
popf
ds
ret
ins
add
test
push
dec
jns
shl
adc
cli
daa
xor
std
test
fistp
pusha
fild
xor
outs
sub
int3
mov
pusha
stc
adc
in
rcl
pop
std
ja
(bad)
jns
(bad)
inc
push
in
shl
sub
sahf
mov
jmp
test
sub
js
and
mov
inc
adc
push
jae
add
or
add
movs
pop
dec
iret
and
pushf
sbb
dec
loopne
xchg
fsubr
sub
cmp
mov
mov
sbb
ss
push
scas
sub
xchg
dec
inc
sbb
push
pop
not
int3
rol
or
and
push
dec
and
mov
stos
jo
cmp
loopne
test
and
dec
fdivr
gs
je
repnz
(bad)
or
out
xchg
sbb
inc
adc
cs
or
xchg
jb
mov
or
test
sub
inc
fstp
push
pushf
rcr
outs
outs
sub
xor
dec
sub
pop
or
xchg
dec
mov
push
lock
add
mov
lock
test
sbb
loop
pop
movs
pop
test
cmp
cmp
in
and
cmp
sti
fmul
scas
(bad)
aam
stc
mov
fcom
add
fistp
push
mov
or
push
pop
and
pop
add
stos
loopne
mov
sbb
or
add
add
inc
ret
xchg
sbb
mov
jle
mov
sbb
lds
fs
adc
jl
push
dec
sub
(bad)
ss
(bad)
shl
mov
and
rol
(bad)
jmp
cmp
dec
enter
adc
shr
popf
xor
add
xchg
push
int
pop
hlt
aas
enter
sub
jae
push
imul
fild
daa
mov
lods
dec
imul
sbb
mov
iret
push
scas
fnsave
ret
data16
or
shl
inc
jbe
cli
mov
outs
ret
fmul
jbe
jmp
mov
inc
cmps
retf
lods
aaa
add
inc
pop
xchg
cmp
adc
jle
out
sbb
jns
fadd
out
cdq
ss
adc
call
jge
xor
inc
aaa
add
sar
adc
mov
pushf
leave
fmul
push
loopne
xchg
les
sub
mov
in
jbe
cmp
pop
fs
call
push
in
ins
sbb
out
mov
mov
fs
(bad)
pop
sbb
popf
adc
call
enter
popa
retf
inc
push
mov
mov
cmps
mov
enter
push
adc
call
mov
mov
test
es
sbb
mov
in
clc
ror
mov
or
jmp
cmc
lahf
repz
inc
sbb
(bad)
fld
xor
add
scas
mov
std
fwait
push
inc
lods
cmp
scas
xor
and
inc
cmp
jmp
mov
sub
adc
add
pop
inc
push
rcr
cmp
ds
in
pop
mov
idiv
adc
dec
imul
pop
retf
xor
ror
(bad)
pop
hlt
jecxz
int3
jp
mov
clc
xor
xchg
sahf
pop
jmp
inc
mov
mov
jb
adc
(bad)
cwde
xchg
mov
out
test
push
in
cmc
lods
mov
scas
out
sbb
(bad)
mov
push
outs
enter
repnz
and
aaa
ins
pop
test
rcl
sbb
outs
mov
mov
fwait
nop
ds
inc
out
dec
add
fild
sbb
cmp
stos
ret
lahf
shl
mov
cmc
adc
mov
jae
and
add
inc
mov
mov
xchg
sbb
mov
div
xlat
emms
pop
mov
pop
mov
or
sbb
pop
rol
scas
rcl
arpl
aas
loope
jns
push
jae
or
scas
test
mov
and
(bad)
pop
mov
xor
or
mov
movs
adc
rcl
and
mov
xchg
cs
mov
add
pop
jbe
dec
fstp
minps
cmps
add
push
add
sub
jbe
push
push
lock
sahf
(bad)
cmp
movs
cmp
stos
xchg
push
sbb
push
pop
dec
test
aad
sub
cmp
(bad)
pop
int
das
aaa
sbb
xchg
loop
loope
xchg
pcmpgtd
ins
and
cwde
push
sub
lods
jb
pop
(bad)
jmp
or
lds
xor
mov
das
in
cmp
adc
and
mov
cdq
sub
test
add
push
xchg
mov
dec
les
and
(bad)
loope
dec
aas
sub
movs
or
add
out
jp
adc
arpl
mov
pop
jae
pop
inc
sub
and
(bad)
aaa
add
cmp
addr16
dec
ds
mov
mov
jno
aas
ret
or
aad
xchg
or
xchg
add
xchg
push
mov
inc
sti
add
pop
fsub
mov
fdivr
sahf
dec
jecxz
push
xor
ins
repnz
fidivr
add
or
lea
shl
jp
out
push
adc
jp
pop
sahf
das
stos
mov
add
js
jnp
out
(bad)
cs
sub
cmp
lods
xor
mov
xchg
adc
add
test
je
adc
inc
xchg
jle
pop
inc
xchg
pusha
ret
cmp
stos
cld
push
sti
add
and
mov
imul
cmps
xor
or
std
cmc
test
hlt
retf
into
mov
iret
sar
mov
xchg
jl
in
cld
add
xlat
fimul
xchg
pushf
mov
mov
cli
mov
sti
mov
enter
aas
or
shl
xchg
jecxz
sub
and
rol
push
fistp
add
shl
xor
mov
ds
cmp
sub
scas
outs
or
fs
int
lea
aam
jne
xor
jg
test
inc
dec
stos
xor
ret
adc
sbb
retw
jbe
js
jne
lock
pop
data16
mov
(bad)
fwait
mov
js
push
ret
cmp
sub
bound
inc
ror
pop
xor
push
mov
add
push
mov
neg
jae
popf
and
fbstp
sbb
iret
cmp
jp
in
cmp
fldenv
and
sub
jo
adc
add
dec
xchg
xchg
cmp
bound
xchg
xchg
dec
test
lea
pop
push
pop
ror
jnp
pop
movs
and
adc
in
(bad)
int
and
loopne
cmp
mov
lods
mov
jg
ss
adc
inc
out
pushf
out
xor
(bad)
or
daa
and
jle
pop
and
addr16
sub
and
imul
cmps
cmps
inc
pop
or
mov
aaa
mov
sbb
mov
dec
pop
les
bswap
in
jge
xlat
sti
mov
shl
cdq
ret
iret
pop
and
sub
xchg
mov
fstp
mov
outs
sub
xlat
out
push
cmp
dec
sbb
ja
dec
test
loop
xchg
aad
and
jae
cmp
mov
clc
(bad)
(bad)
test
scas
jne
xor
mov
adc
jge
pop
cld
add
or
(bad)
fsubr
sub
xchg
fiadd
daa
fsubr
fwait
push
int3
jae
test
mov
cmc
inc
repz
mov
shl
inc
xor
pop
rcl
pop
inc
or
fnstsw
add
leave
fadd
adc
fild
frstor
repnz
and
cmc
mov
pop
push
mov
cmps
in
sbb
loopne
inc
jge
sub
mov
mov
push
mov
add
fistp
mov
inc
popa
out
(bad)
cmp
ds
xchg
mov
ret
xlat
mov
sar
scas
push
mov
xlat
mov
(bad)
mov
xor
xchg
xchg
adc
push
xor
cwde
xor
jo
or
mov
cmp
jno
cmp
or
pop
jge
inc
mov
add
xchg
dec
sbb
or
xchg
int
shr
enter
pop
fist
cmp
(bad)
cmc
jecxz
adc
mov
pop
aas
imul
sahf
lods
inc
pop
inc
and
lea
ds
lods
into
lock
jno
mov
mov
push
push
jne
test
and
mov
xor
(bad)
scas
loope
and
movs
xor
adc
fsubr
cmp
addr16
xchg
cdq
clc
lock
imul
push
outs
lock
fnop
xchg
pop
inc
mov
fdiv
in
jmp
aas
retf
js
jmp
ins
jmp
fbld
cmp
inc
adc
out
test
enter
dec
std
movs
pop
gs
dec
scas
or
cmp
sub
out
inc
cmps
fnstcw
movs
rcl
add
cmp
push
mov
out
jns
fsub
imul
(bad)
call
int
jmp
sub
or
xchg
sub
leave
mov
jg
scas
jae
cmp
jl
and
repnz
mov
aam
arpl
pusha
addr16
lea
std
(bad)
cmc
sub
shr
xchg
sub
and
inc
fist
xor
dec
push
fstp
stc
(bad)
and
stc
mov
pop
inc
xchg
add
call
add
pop
add
fld
or
add
loopne
(bad)
sub
xchg
loope
xor
sbb
inc
bound
arpl
sbb
lods
ins
add
push
in
es
mov
jp
or
mov
pop
jmp
dec
xchg
sbb
xor
jl
xchg
push
pop
dec
push
cmc
out
sbb
ins
pushf
addr16
(bad)
dec
dec
xchg
sbb
adc
dec
ret
popa
les
mov
(bad)
je
add
ss
enterw
mov
cmp
pushf
and
xchg
mov
dec
jo
daa
or
hlt
or
inc
add
scas
cmp
imul
out
cmp
pop
movs
xchg
hlt
mov
xlat
in
adc
in
add
mov
iret
cmp
jo
fcmovne
(bad)
pop
leave
cli
jge
ficomp
jne
lods
jl
mov
pusha
fs
cmp
clc
pop
int3
dec
push
out
sub
(bad)
and
int3
inc
(bad)
jns
adc
sysexit
mov
outs
(bad)
push
das
fnstsw
test
loope
dec
inc
ins
adc
shl
jns
xchg
aad
jle
fild
ja
jp
rcl
sbb
adc
jo
in
jmp
push
mov
out
inc
movs
push
dec
xor
cmps
inc
leave
stos
dec
xor
xor
xor
mov
or
dec
hlt
mov
daa
les
es
lds
jp
push
mov
xchg
push
mov
mov
mov
or
mov
bound
mov
push
fwait
inc
jbe
sbb
imul
hlt
xor
push
add
ins
mov
daa
xchg
test
jle
push
inc
hlt
sbb
cmp
imul
inc
sbb
ins
mov
nop
xchg
push
cmps
inc
(bad)
push
in
aas
iret
out
jmp
add
cdq
bound
rol
mov
xor
jbe
test
fdivr
sub
sbb
inc
or
push
or
lods
fidiv
sub
push
jp
out
add
movs
push
pushf
dec
mov
inc
aam
inc
pop
(bad)
xlat
ja
fcmovne
ficomp
mov
cmp
and
mov
xchg
add
xchg
mov
and
xchg
adc
mov
add
aad
push
aaa
pop
rcpps
and
leave
dec
ins
stos
ror
lock
bound
outs
aas
sub
pop
dec
outs
ret
and
push
std
dec
pop
mov
mov
push
sub
bound
lock
clc
bound
fsubr
movs
(bad)
int
push
push
cwde
jmp
scas
in
jecxz
leave
inc
or
and
fsubr
aaa
outs
cmp
inc
rcr
je
pop
adc
dec
cmp
jmp
ins
daa
pop
(bad)
std
enter
ss
dec
cmc
ss
pop
jmp
js
push
repz
in
cmp
les
mov
mov
or
and
js
out
call
adc
xchg
lea
rcr
jmp
jnp
int3
sti
cmc
cmp
pop
inc
fmul
xlat
sahf
in
out
jl
out
iret
js
cs
mov
jge
shl
loop
add
mov
inc
inc
pop
mov
outs
das
mov
lahf
inc
dec
pusha
sar
jle
sbb
test
int3
push
mov
(bad)
fild
push
mov
pop
ins
dec
mov
data16
(bad)
imul
jns
adc
mov
das
mov
add
fld
imul
loope
cmp
out
data16
in
test
pop
(bad)
dec
jecxz
or
lds
jg
jns
outs
add
cmp
in
adc
sub
xchg
mov
mov
test
into
daa
icebp
sbb
cmp
and
cmp
push
mov
xor
cmp
pop
jp
scas
push
jg
imul
test
mov
add
and
and
push
jb
and
adc
sbb
aam
adc
push
loope
sbb
mov
nop
pop
(bad)
leave
pop
and
pop
cmp
(bad)
dec
inc
leave
or
sbb
or
shl
dec
movs
test
mov
cmp
jecxz
clc
mov
repz
movs
jmp
addr16
xchg
sbb
iret
hlt
cdq
lock
fs
xchg
lods
xor
or
jae
xor
test
xchg
imul
das
rcr
cmp
lea
push
outs
stos
sbb
gs
mov
pop
lahf
popa
push
sub
or
lea
cmp
or
xor
(bad)
mov
mov
cmps
sbb
out
pusha
add
xor
mov
sbb
adc
xchg
ret
sti
inc
aas
add
xchg
xchg
jle
pop
xchg
je
bnd
adc
outs
(bad)
cdq
stc
pop
(bad)
mov
jmp
shr
(bad)
cmc
iret
jle
sub
jae
xor
sub
xchg
cwde
aaa
push
mov
push
repz
mov
jmp
add
in
mov
add
test
and
mov
inc
test
mov
js
sbb
mov
dec
in
or
mov
in
pushw
cmps
ins
arpl
cmp
add
xchg
push
inc
add
mov
sub
inc
sub
jl
movs
inc
push
cld
movs
dec
cmp
adc
xor
leave
jmp
fldcw
and
test
xchg
std
pop
add
cmp
ins
mov
fadd
movs
imul
and
into
fwait
daa
repz
cdq
fnsave
pop
add
xor
xchg
fucom
push
sub
les
test
rol
mov
inc
xchg
mov
adc
imul
push
lds
fs
js
jne
mov
and
jbe
sbb
mov
dec
clc
sbb
fiadd
and
or
xchg
sub
scas
mov
out
out
cdq
fs
push
xchg
scas
imul
and
stc
loope
stos
inc
pushf
pop
les
push
xchg
cdq
push
push
scas
cs
and
or
inc
pop
pop
mov
mov
sbb
pop
mov
jmp
mov
fwait
and
lea
pop
or
xlat
mov
in
dec
adc
push
sbb
daa
xchg
cli
sub
mov
jmp
or
push
enter
outs
in
in
movs
lock
ror
mov
adc
test
and
sahf
lods
rcl
jbe
shl
jae
mov
add
pop
repnz
mov
inc
leave
das
xchg
and
fisubr
xlat
push
push
es
jns
adc
lds
cmp
cli
sub
xor
jl
jg
xor
outs
and
xchg
loope
outs
and
clc
inc
fst
sub
sbb
mov
jp
movs
push
ror
cmps
add
sub
sti
inc
fadd
aad
dec
mov
cmp
lea
dec
fisubr
shl
(bad)
cmc
and
pop
bound
dec
ret
pop
mov
mov
push
aas
scas
mov
push
add
retf
push
bound
je
bound
mov
mov
jl
pop
dec
adc
adc
scas
out
lock
popa
dec
lea
cmp
dec
fild
and
mov
cmp
pusha
imul
cs
sub
xlat
ss
das
dec
push
mov
inc
dec
retf
clc
mov
jecxz
mov
jno
out
xchg
push
sahf
dec
sbb
icebp
dec
aas
pop
jno
shl
retf
jnp
push
sahf
fidivr
adc
(bad)
fstp
sbb
jo
in
sbb
lahf
sbb
stc
push
jmp
xor
inc
movd
add
pop
fcom
push
fwait
(bad)
cmp
movs
cmp
push
jecxz
mov
jmp
loope
jae
jp
mov
rep
sbb
(bad)
or
cmp
mov
pop
rcr
retf
xchg
xchg
xchg
pop
jne
or
jo
cmps
out
and
xchg
cwde
ss
stc
pop
inc
pop
push
popa
push
arpl
inc
inc
cwde
ins
outs
or
ret
jo
or
mov
scas
js
mov
cmps
push
mov
xor
adc
std
rol
out
inc
cmp
sub
repz
into
pop
xchg
or
push
(bad)
rol
adc
pop
pop
out
test
adc
mov
mov
jne
mov
cmp
push
test
inc
sar
mov
and
aaa
inc
mov
and
xchg
xor
cmp
push
shl
(bad)
sub
dec
mov
pop
xor
mov
mov
push
call
sahf
push
mov
mov
jo
loopne
adc
(bad)
jmp
push
sahf
fild
sbb
aam
mov
ret
push
push
push
mov
xchg
jne
lock
cmps
adc
sbb
sbb
std
inc
cli
rol
lock
sub
dec
push
mov
jnp
xchg
sahf
in
sbb
ins
push
es
out
pop
movs
loopne
jmp
or
pop
shl
xor
scas
out
xor
enter
adc
fabs
xchg
inc
repz
sub
sub
push
mov
in
mov
int
bound
nop
push
retf
adc
icebp
ins
imul
adc
pop
stos
cmp
ret
or
pop
mov
lods
inc
xor
mov
aas
jae
cmp
cmp
int3
cmp
pushf
jb
pop
adc
repnz
in
cmps
push
shl
pop
pop
jbe
scas
pop
int3
dec
cmps
sub
sub
cmps
xlat
(bad)
out
into
jno
xchg
stos
inc
pop
scas
xchg
adc
hlt
(bad)
dec
gs
pusha
mov
inc
dec
push
pop
adc
(bad)
xor
bound
lods
pusha
xor
lahf
mov
push
and
iret
pop
mov
or
cmp
pop
or
out
ins
pop
fsincos
sbb
dec
fstp
rcl
ret
xchg
pop
cld
lods
push
pop
(bad)
mov
out
dec
leave
movs
fild
mov
dec
jnp
sub
outs
pop
dec
jo
xor
std
cmp
rcr
call
pop
or
pusha
inc
stos
or
cmps
mov
mov
mov
push
push
sbb
xor
cmp
jnp
aad
cmp
jg
dec
sbb
mov
mov
ins
movs
xlat
xor
lock
xchg
into
enter
ret
cmp
xor
xor
sahf
jmp
nop
stc
mov
cdq
sub
and
add
push
jmp
and
inc
sub
sbb
aam
out
popf
mov
scas
nop
lods
cmp
mov
test
add
sbb
push
outs
mov
adc
shl
test
sti
lea
xlat
mov
inc
icebp
aaa
outs
in
iret
sub
lea
cmc
ret
add
jb
mov
rol
jne
mov
inc
leave
mov
or
xor
ss
mov
sub
sbb
or
push
jp
mov
(bad)
fstp
sahf
les
mov
cmp
es
sub
js
movs
cmps
xchg
ss
sub
xchg
push
pop
add
mov
inc
mov
sub
vcvttss2si
js
in
fcmove
loope
sahf
test
cwde
fwait
mov
push
dec
mov
cmp
ret
push
cs
adc
leave
sub
sahf
aad
cld
enter
push
test
or
in
pop
neg
push
cmc
loopne
popa
in
in
cs
cmp
dec
sbb
stos
and
outs
mov
jmp
sub
fsub
das
pop
add
fisttp
popa
or
shl
lock
add
into
scas
fmul
xor
cmp
(bad)
bound
jnp
dec
stc
cmp
xchg
mov
out
hlt
or
xor
jle
popa
mov
jbe
jge
adc
and
xchg
push
push
sbb
in
popf
xlat
mov
test
inc
fucomp
jl
sub
add
pop
dec
inc
push
sub
xchg
push
jp
lahf
pushf
xchg
xchg
push
mov
lods
push
mov
lock
mov
scas
out
daa
fnsave
test
int3
push
sub
pushf
rol
sub
stos
mov
ja
and
inc
inc
fwait
pusha
call
mov
or
xor
xchg
pop
(bad)
clc
mov
push
push
stos
in
(bad)
dec
gs
sahf
sbb
dec
sbb
nop
and
aam
pop
arpl
xor
sub
mov
test
movs
dec
sbb
and
jno
popf
push
fmul
jl
in
xor
cmp
mov
jle
das
daa
aas
cmp
push
sub
js
stos
mov
scas
rcr
dec
xchg
retf
xchg
imul
mov
clc
loop
fidivr
cld
retf
pop
nop
jp
(bad)
fild
call
ja
jle
mov
ins
inc
push
(bad)
pop
scas
cmp
sbb
arpl
fdiv
es
lods
sbb
aad
lods
sub
adc
arpl
xlat
sub
into
add
shl
push
cmp
aam
cld
in
mov
mov
in
call
mov
mov
out
mov
push
cmpxchg
adc
inc
pop
jbe
pushf
push
jmp
mov
xstore-rng
cmps
inc
ret
(bad)
lea
aam
cwde
sub
test
imul
cmp
inc
stc
ja
inc
hlt
hlt
push
xchg
enter
or
pusha
cmp
das
push
jns
call
in
xor
xchg
ja
mov
add
sbb
push
inc
push
ret
cwde
leave
add
adc
jmp
xor
mov
arpl
out
test
and
stc
push
aad
(bad)
sub
fs
fwait
(bad)
mov
inc
cmp
and
push
push
outs
outs
or
in
xchg
inc
out
je
jle
daa
adc
icebp
loop
cmp
mov
xor
mov
popf
xor
(bad)
pop
push
and
(bad)
push
sahf
lock
inc
pop
lahf
sub
les
or
pop
jns
pop
jo
pop
jbe
out
lahf
cmp
add
dec
cmp
inc
or
fcom
or
test
loope
mov
popf
ror
cmp
or
retf
retf
dec
jmp
inc
mov
aas
leave
pop
cmp
xchg
jnp
repnz
fnstcw
mul
jno
xchg
jo
ret
call
nop
pop
dec
and
push
test
clc
ds
iret
jno
sar
movs
fidivr
(bad)
fidivr
adc
sub
mov
adc
or
jle
jmp
(bad)
jle
shr
dec
rcl
je
dec
sar
xchg
and
sbb
push
inc
mov
out
cmp
mov
push
dec
pop
je
in
push
aam
rcr
push
arpl
mov
xchg
cmp
jge
sbb
std
in
out
mov
sub
xlat
std
sbb
pop
jo
lea
call
cmps
stos
cmc
(bad)
xchg
mov
push
idiv
leave
or
test
cmp
jle
and
mov
psubusw
pop
jl
hlt
pushw
ja
nop
(bad)
fild
call
mov
ins
outs
xchg
inc
fisttp
bound
sahf
and
fst
popa
xor
gs
fiadd
add
mov
xor
popf
inc
mov
jne
ins
mov
push
add
sub
shr
imul
cdq
fbld
sbb
lock
sbb
sbb
jbe
pop
or
push
or
pop
mov
xlat
sbb
dec
jbe
or
pop
pop
mov
aaa
push
vcmpsd
mov
jns
loope
sub
sbb
(bad)
add
test
sub
adc
jb
pushf
movs
arpl
(bad)
ret
sti
mov
dec
mov
push
rol
daa
icebp
mov
fist
mov
xor
and
inc
push
call
cmps
hlt
mov
test
cmp
pop
inc
xor
hlt
rcl
mov
movhps
add
aam
jnp
imul
pop
add
cs
ins
stc
ja
sub
xchg
push
ss
ret
aaa
fwait
mov
fldcw
fistp
test
push
and
aad
xor
jb
mov
inc
pop
nop
mov
ins
jge
sbb
jbe
rcl
fs
mov
and
sbb
jne
int
pushf
cmp
push
sub
ins
sub
retf
mov
xor
jmp
(bad)
int
nop
lods
aas
in
stos
sub
int3
xor
lock
inc
mov
cmc
sar
add
mov
mov
aaa
mov
ret
mov
inc
popa
pushf
sub
xor
ds
cmp
jle
lea
shr
out
(bad)
xor
push
dec
pop
fsubrp
arpl
or
adc
cmp
int3
inc
bound
mov
dec
and
jne
clc
cmp
rcr
push
pop
mov
mov
xchg
mov
jb
xchg
daa
sub
(bad)
outs
popf
scas
cs
sub
aad
or
movs
fst
test
int3
xchg
mov
jg
jle
leave
test
jmp
icebp
data16
xchg
pop
ret
sub
jb
xor
in
xor
push
out
stc
adc
xchg
enter
or
jbe
popa
cmps
inc
adc
(bad)
nop
in
push
jno
call
not
sub
arpl
rol
jno
mov
mov
push
jo
rol
(bad)
xor
mov
sbb
shl
jb
stc
add
ds
das
dec
push
pop
or
or
xchg
jae
das
lea
sti
pop
jl
nop
add
xchg
and
(bad)
out
arpl
mov
mov
mov
push
dec
inc
mov
jnp
pop
jns
hlt
inc
push
cmp
fld
idiv
jo
jns
sbb
sub
push
and
stc
pop
mov
loop
and
mov
sbb
daa
mov
mov
(bad)
push
or
icebp
pop
sbb
or
cmp
adc
fwait
push
push
pop
pop
stos
adc
ret
cli
sub
jecxz
lods
inc
and
(bad)
pop
sub
mov
adc
pop
icebp
(bad)
sti
adc
add
shl
test
inc
cmp
adc
or
pop
inc
lock
fwait
test
pop
cmp
data16
pop
lock
sbb
mov
iret
mov
lods
xor
stc
inc
pop
movs
lahf
das
and
mov
sub
mov
dec
mov
loope
pop
sub
push
mov
mov
mov
xchg
mov
mov
or
lods
dec
and
mov
aad
nop
push
das
cmp
ds
daa
pop
sub
jb
push
xchg
ins
mov
frstor
into
inc
(bad)
push
xchg
or
lods
and
and
sub
enter
sub
cli
xchg
fst
push
mov
mov
cmp
push
pop
arpl
mov
cmp
(bad)
ret
retf
fs
ins
aam
out
add
add
inc
xor
and
add
retf
mov
pop
mov
sbb
out
inc
in
repnz
jbe
daa
cmps
ja
loope
and
mov
sar
aaa
jmp
pop
cld
int
sub
int3
in
scas
cmp
fimul
outs
or
mov
jp
out
mov
dec
xor
pushf
jae
retf
xor
and
or
in
adc
sub
mov
jne
mov
(bad)
sbb
xor
add
fsub
cmps
dec
cs
dec
mov
dec
mov
and
xchg
or
shr
sub
mov
xchg
or
movs
mov
sub
call
mov
xchg
pop
push
and
pop
push
scas
xchg
mov
dec
or
(bad)
xchg
lahf
ins
sub
popf
inc
(bad)
jbe
add
jo
jmp
stos
fisub
sub
push
fild
mov
pop
inc
movs
fdivr
sbb
mul
jecxz
cs
mov
mov
outs
jo
lods
add
xchg
aad
imul
lods
lea
pop
daa
push
inc
jb
das
xor
push
inc
out
mov
es
adc
and
fs
outs
mov
pop
(bad)
lock
sbb
scas
jp
inc
test
icebp
test
jge
cwde
inc
adc
mov
jmp
sbb
out
add
push
popf
sub
push
rcr
int3
inc
or
fs
mov
mov
imul
jmp
add
fdivr
fucomip
ja
xor
xchg
addr16
js
cmp
mov
cmp
jo
lea
bswap
call
gs
or
mov
xchg
nop
cmp
or
cmps
jno
out
add
int
inc
xlat
push
out
fst
inc
pop
push
inc
hlt
icebp
jecxz
mov
ds
or
push
mov
loop
push
out
mov
add
cmp
sbb
dec
rol
out
push
mov
jge
push
cli
test
out
bound
mov
cs
stc
dec
enter
cmp
jmp
mov
sbb
shr
mov
xchg
xchg
test
push
cmp
pop
nop
shr
mov
push
add
outs
bound
outs
out
push
pop
outs
pop
cmps
and
(bad)
push
jmp
movs
cmp
mov
xchg
add
int
fidiv
sbb
xchg
xchg
cmp
mov
xchg
lahf
jmp
add
inc
sbb
add
dec
(bad)
fst
es
add
adc
or
pop
xor
sbb
hlt
jg
pop
adc
pushf
push
(bad)
sahf
scas
(bad)
xor
in
(bad)
aaa
je
hlt
sub
arpl
pusha
sbb
cmp
mov
add
mov
(bad)
sub
jmp
es
push
lods
jle
jmp
and
jo
push
in
inc
add
pop
mov
add
in
ret
mov
(bad)
in
mov
jmp
adc
sbb
in
ror
mov
push
mov
es
out
cli
imul
pop
inc
cld
sub
fnstsw
loopne
push
test
pop
add
jecxz
and
push
ins
into
jns
nop
add
mov
xor
int
stc
fidivr
mov
(bad)
push
mov
int
pusha
aas
add
mov
fnsave
clc
int3
xchg
xchg
mov
(bad)
fild
adc
(bad)
push
mov
rol
fisub
sti
xchg
popa
xchg
aaa
call
jo
cli
xor
inc
add
or
pop
hlt
jae
pop
sbb
out
cwde
xor
lock
or
ss
adc
sbb
pop
int3
clc
push
das
fcom
stc
jb
cmp
popf
jge
ret
or
mov
push
and
and
aaa
xchg
loopne
iret
call
push
adc
outs
jne
xchg
xchg
mov
adc
xchg
adc
(bad)
in
adc
inc
jp
xchg
in
loope
cmp
mov
lock
shl
mov
stos
xchg
mov
js
mov
mov
pop
inc
dec
aam
jle
mov
fdiv
push
xchg
jnp
pop
and
push
add
and
cdq
mov
xor
pusha
pop
in
mov
fstp
hlt
(bad)
mov
jge
xor
stos
int3
mov
fs
js
sbb
fwait
cmp
adc
out
mov
add
mov
xchg
adc
and
xor
gs
cwde
jg
test
out
out
mov
imul
ja
lea
jle
repz
inc
sar
int
scas
fcmovnu
sub
ss
push
mov
xchg
add
(bad)
imul
clc
test
jle
pushf
adc
retf
stc
stc
sbb
lahf
push
cmp
repz
daa
pop
pushf
sub
xor
fcmovnbe
jbe
sahf
repz
movs
mov
dec
fld
fstp
lods
(bad)
jge
lods
adc
(bad)
ss
mov
dec
add
mov
sbb
pop
leave
dec
pop
mov
add
fldcw
dec
movs
dec
mov
xor
xchg
test
fld
scas
lock
push
pop
cmp
out
pop
je
bound
xor
adc
adc
pop
cdq
fmul
mov
ds
jle
push
in
ins
sub
inc
data16
sbb
jmp
add
sbb
inc
adc
mov
add
mov
jne
inc
push
xchg
xchg
inc
and
sbb
xchg
or
push
or
dec
xchg
lock
xchg
add
push
xchg
mov
mov
std
push
(bad)
fdivr
int3
push
ror
(bad)
pop
adc
xchg
popa
xor
cmp
inc
daa
cmps
(bad)
and
adc
pop
les
test
xchg
push
sbb
pop
pop
and
sub
pop
dec
push
mov
mov
add
addr16
in
ror
mov
mov
test
into
lock
cmps
adc
retf
mov
dec
ror
dec
mov
jno
std
das
fcomip
or
cmp
inc
inc
es
shr
jle
sub
cdq
shl
clc
sbb
sub
ja
popf
fmulp
pop
mov
dec
sub
push
push
test
inc
inc
(bad)
fst
fs
into
xor
inc
xor
cmps
arpl
jnp
jb
jbe
or
js
pop
in
test
lds
and
(bad)
adc
jmp
rol
or
cs
push
fdivr
pop
push
int
repz
imul
out
mov
pop
xchg
fdivr
scas
mov
fild
ret
retf
xchg
stos
sub
movs
and
adc
retf
out
add
clc
gs
cmp
push
jae
pusha
pushf
mov
pop
imul
nop
jg
push
push
sub
test
fmul
(bad)
push
mov
push
jl
rcl
stos
imul
push
xchg
add
into
jae
push
aaa
add
push
pop
dec
mov
out
inc
add
mov
cmp
push
inc
mov
dec
pushf
pop
adc
xor
retf
push
lea
dec
and
ds
and
xchg
ja
mov
push
test
(bad)
jecxz
popa
(bad)
test
int3
std
iret
call
movs
outs
xchg
dec
pop
pop
add
loopne
push
pop
cmc
fld
scas
daa
dec
scas
not
repz
arpl
les
dec
push
cld
and
ss
loope
sbb
mov
mov
sub
ins
or
pop
cmc
fld
mov
mov
jmp
outs
sub
test
shr
sbb
xor
push
scas
and
pop
sbb
cmp
add
arpl
fisttp
jbe
pop
call
retf
nop
fnstsw
fdivr
test
ss
or
xor
pop
ror
repz
ins
aaa
scas
jno
push
push
leave
sbb
shl
pop
je
nop
sbb
ds
mov
cli
mov
xor
stc
sub
pop
leave
cmp
scas
jp
imul
sub
or
dec
mov
(bad)
mov
mov
test
leave
inc
iret
xchg
int
cwde
mov
mov
test
mov
add
in
jle
test
je
jnp
dec
inc
mov
(bad)
jg
cmp
pop
lahf
shr
push
lahf
mov
pop
add
inc
push
push
xchg
stc
jecxz
cmp
mov
or
or
clc
jbe
push
lds
adc
mov
loope
xchg
pop
test
repz
aaa
cmp
mov
aam
pusha
push
aad
aas
pop
lock
jmp
mov
daa
xor
xor
adc
ins
inc
mov
out
loope
jmp
adc
xchg
outs
cmp
pop
mov
cmp
stos
ret
scas
cmp
dec
push
mov
jmp
add
jge
outs
(bad)
pushw
mov
fisubr
retf
xor
das
pop
or
cmp
add
(bad)
xchg
std
lods
cs
mov
addr16
inc
outs
sahf
cmp
(bad)
or
push
jmp
cmp
(bad)
popa
je
cdq
gs
lea
int3
aad
push
je
mov
xor
xchg
xchg
jle
test
and
aas
ret
sbb
pop
rcr
inc
fimul
cmp
cmc
sbb
outs
cs
mov
cld
and
jl
mov
ds
aad
std
fcom
push
aad
dec
mov
xchg
ds
jmp
(bad)
dec
and
cmps
mov
pop
mov
movs
call
leave
call
push
jne
mov
cmps
cmp
shl
mov
sub
xchg
pop
jo
cwde
imul
xchg
pop
bound
stos
jbe
or
hlt
cli
ins
loopne
push
mov
xchg
stos
dec
sar
(bad)
sub
das
xchg
mov
cld
jl
(bad)
cdq
wrmsr
pop
int
add
inc
rol
aaa
cmc
inc
fiadd
and
mov
icebp
cmp
stos
inc
and
jl
pop
xchg
sub
fcmovu
push
jl
mov
clc
mov
aas
pop
dec
addr16
sbb
push
(bad)
pop
dec
das
and
xchg
add
shl
cmps
mov
pop
sub
pop
jmp
sbb
lahf
push
mov
mov
mov
jp
or
ror
sti
(bad)
xor
and
mov
fcom
mov
cmp
push
scas
push
xchg
addr16
das
jae
add
(bad)
aas
loope
xchg
jp
aas
pop
dec
sub
popa
pusha
mov
mov
test
push
fstp
cs
push
jl
jbe
out
fldz
cmc
mov
dec
mov
cmp
push
sbb
cmp
fisub
xor
cld
xor
push
xor
enter
pop
repnz
push
mov
or
xchg
out
mov
jae
or
(bad)
stc
lds
jno
push
or
sub
xor
push
repnz
cdq
pop
xor
inc
sbb
push
call
aam
loopne
out
daa
mov
mov
loop
push
mov
adc
(bad)
xor
aas
pusha
aaa
pop
out
retf
test
xor
les
and
mov
and
std
hlt
inc
test
aad
xchg
into
adc
dec
scas
js
mov
ror
sub
and
xor
loope
or
ds
and
sbb
loopne
add
int3
sub
aas
enter
les
push
(bad)
cmc
add
cwde
fist
call
pushf
add
into
push
cmp
cmps
cmps
push
mov
ror
cs
sbb
jno
in
leave
ror
repnz
fcmovbe
ins
mov
out
xor
pop
pop
adc
inc
add
stos
sti
dec
dec
jmp
xlat
mov
test
adc
ficom
cld
adc
pop
ret
push
push
loop
ja
js
mov
mov
inc
dec
xchg
sub
repz
cmps
clc
and
sub
jnp
mov
xor
das
xchg
pop
xchg
mov
fisttp
or
lea
dec
sbb
je
jecxz
mov
or
push
jecxz
bound
push
icebp
mov
call
in
jns
nop
adc
mov
adc
pop
pop
stos
shl
dec
call
jnp
in
cld
repz
enter
hlt
aad
(bad)
fiadd
nop
into
sbb
pop
push
sbb
jmp
fild
int3
stos
and
mov
retf
push
jnp
movs
clc
in
dec
fstp
xor
or
mov
out
int
(bad)
stos
loope
gs
fucom
cmc
and
les
out
out
sub
hlt
test
jbe
adc
mov
lahf
ret
mov
mov
stos
dec
or
mov
cli
imul
adc
int3
fistp
mov
out
mov
mov
mov
lea
add
xchg
xlat
mov
mov
rcl
add
mov
in
arpl
icebp
in
add
cmp
and
ins
cmps
sti
xchg
shr
arpl
or
mov
cmc
int3
ss
sub
or
in
mov
adc
shl
or
int3
and
jb
inc
push
push
adc
xchg
sbb
lods
xchg
daa
adc
push
je
retf
int3
cmps
jbe
repz
mov
fisttp
lds
aaa
and
mov
jge
lock
jo
retf
cmp
add
scas
sbb
jne
mov
pop
js
es
xor
xchg
loopne
std
ja
jmp
push
and
mov
inc
jl
lock
cmps
add
lds
mul
mov
push
and
imul
fisub
inc
loope
pop
xor
dec
lock
mov
inc
aaa
dec
cwde
sub
inc
mov
dec
jb
push
push
popf
leave
aaa
cmps
jmp
loop
mov
jbe
sub
push
shr
cmp
ins
xchg
fnstcw
mov
dec
cmp
outs
frstor
xchg
mov
clc
xchg
cmp
xchg
lea
xor
scas
test
mov
cmp
and
lahf
add
adc
clc
xlat
shl
push
adc
cmps
movs
gs
mov
jmp
pop
sub
jle
scas
rol
iret
rcl
fsub
push
(bad)
mov
jbe
into
cmp
push
sub
hlt
mov
rcl
dec
into
fwait
mov
jecxz
add
lds
fs
adc
leave
sub
call
pushw
pop
dec
out
out
push
sub
into
fmul
push
fsub
int
mov
push
int
push
pop
sbb
cmc
mov
sbb
push
repz
pushf
add
adc
dec
mov
cmp
sti
lods
and
popf
mov
rcl
xor
out
fndisi(8087
int3
lds
cmps
cmp
sub
add
es
retf
repnz
pop
addr16
es
(bad)
mov
aaa
jg
mov
add
adc
push
cmc
neg
or
push
or
(bad)
xor
loope
mov
std
je
test
ret
adc
stos
pop
cdq
retf
call
push
jbe
sti
or
ins
push
in
aaa
cmp
xor
int
xor
outs
dec
dec
nop
fidiv
jp
jle
add
hlt
mov
(bad)
(bad)
js
jmp
imul
dec
cmp
dec
adc
mov
sbb
mov
fwait
push
jo
sti
and
mov
add
test
cmp
inc
movs
cmp
stos
fwait
xchg
sti
fwait
mov
test
xor
fldenv
enter
jmp
pop
inc
pushf
push
cmp
jbe
or
fnstsw
pop
int
ins
pop
loope
push
clc
add
cdq
cwde
shl
cmp
inc
xlat
aad
ret
lds
int3
outs
repz
inc
mul
inc
adc
bound
push
imul
int
sbb
sbb
mov
aas
cmp
mov
call
loop
mov
cs
(bad)
mov
dec
pop
jae
lods
outs
jecxz
cli
ficomp
pop
ds
pop
cmp
daa
and
or
ret
and
sub
push
in
and
jne
inc
adc
stc
and
pushf
sbb
and
in
mov
call
xchg
and
jmp
fs
les
mov
fidiv
cmp
mov
hlt
rcr
ins
cmps
sub
mov
pop
les
jb
hlt
adc
sar
push
mov
lahf
or
out
pop
clc
mov
sbb
and
sbb
cmp
dec
mov
cwde
test
push
test
in
mov
dec
sbb
mov
or
icebp
nop
adc
rcr
jp
sbb
dec
outs
mov
hlt
jmp
or
or
ficomp
mov
retf
or
ror
push
iret
push
and
sub
push
or
das
icebp
dec
add
shr
(bad)
or
test
cmp
pop
jecxz
loopne
(bad)
loope
pop
lds
outs
imul
sbb
inc
cmp
call
addr16
ss
jge
popf
(bad)
lock
jnp
jae
test
mov
repz
sar
nop
pop
outs
mov
xor
cmps
xor
rcl
dec
int3
xchg
les
cld
loope
dec
das
fcomp
sbb
test
jbe
(bad)
retf
dec
fwait
adc
mov
nop
jne
ret
(bad)
push
cmp
fdivr
stc
pop
loopne
push
dec
mov
and
cwde
rol
out
(bad)
pop
add
cmc
dec
cmp
stos
sbb
xor
fs
test
(bad)
fwait
aas
retf
lahf
sub
retf
loope
pusha
xchg
shl
ds
push
(bad)
lods
(bad)
mov
lds
aam
sub
nop
xlat
aas
fcom
xchg
cli
ins
out
mov
cli
lds
push
in
je
ja
scas
fisubr
xchg
sub
push
adc
test
scas
push
push
std
inc
in
and
movs
cmp
aad
out
fwait
jns
fisttp
pop
add
(bad)
xchg
outs
jl
fadd
jb
adc
dec
and
mov
sbb
sub
test
movs
aas
je
inc
shl
pop
cmc
push
mov
pusha
ins
aaa
in
pop
push
mov
add
mov
in
mov
inc
out
cs
in
adc
cmp
mov
sub
and
dec
stc
xor
loop
jg
leave
(bad)
imul
adc
je
test
xor
sbb
or
in
or
inc
daa
mov
jle
mov
lods
cs
dec
mov
sub
xor
aas
movs
popa
or
fcom
jno
mov
jp
data16
push
dec
shl
xor
popf
sub
jns
fistp
push
push
xchg
std
das
mov
jge
pop
loop
cmps
pop
and
idiv
mov
mov
(bad)
jne
(bad)
dec
aad
cld
push
in
cld
push
outs
dec
push
repz
sbb
fwait
loop
es
add
lds
es
pushf
jmp
and
or
sub
dec
jbe
mov
and
dec
push
push
out
mov
fidiv
bound
pinsrw
cmp
sub
push
test
icebp
adc
pop
sar
pop
pop
fsub
imul
scas
cld
mov
jb
xor
xchg
push
in
jo
dec
sub
push
mov
xor
ret
push
jbe
push
scas
push
xor
gs
push
or
pop
ret
data16
movs
ds
repnz
mov
test
ds
cmp
sub
es
nop
adc
outs
xchg
mov
or
push
fadd
cmc
jns
ficom
sbb
adc
rol
outs
shl
test
clc
dec
cmp
or
mov
push
loopne
and
movs
or
fbstp
cmps
jno
add
mov
scas
pop
add
pop
mov
pop
pop
inc
cmp
sar
push
xchg
jns
arpl
cmps
cld
fiadd
out
or
retf
push
xchg
inc
cmp
leave
adc
xlat
dec
imul
loope
nop
test
out
in
sbb
mov
push
sub
packssdw
mov
imul
sub
cmc
jmp
mov
jo
sbb
xor
rcr
pop
fwait
and
jmp
cdq
rcr
add
outs
je
(bad)
fld
and
inc
cmps
scas
mov
jp
sub
adc
mov
shl
movs
iret
shl
sbb
pop
movs
and
xor
lock
(bad)
ds
mov
push
cmp
(bad)
leave
pop
mov
pop
rcr
add
test
push
mov
jmp
and
mov
push
mov
and
mov
sbb
mov
sub
dec
dec
cmps
rcr
sub
xchg
cld
xor
jae
dec
imul
in
retf
dec
inc
mov
aad
aad
and
in
daa
pop
adc
mov
ins
sub
xchg
ds
and
inc
mov
cmp
sti
pop
xor
(bad)
retf
or
inc
retf
xchg
mov
aam
jmp
cdq
inc
mov
(bad)
cmp
(bad)
push
ins
mov
push
xor
loope
jno
sub
sahf
jp
loope
adc
stos
adc
jbe
test
hlt
cmp
xor
arpl
cmps
ror
pop
sbb
jge
unpcklps
jl
ja
sub
cmps
call
push
pop
adc
xor
lock
mov
cmp
movs
xor
dec
pop
xor
mov
int
push
outs
inc
cwde
mov
(bad)
sbb
sub
mov
into
fs
rcr
leave
fld
push
gs
xchg
mov
sahf
inc
or
rcl
retf
fnstsw
inc
daa
outs
add
(bad)
in
shr
mov
shl
pop
aas
lea
out
ror
dec
adc
inc
in
dec
scas
xor
cmp
imul
in
fidivr
dec
cmp
aam
push
js
fcomi
mov
test
aaa
and
xchg
outs
xor
pusha
adc
pusha
mov
retf
sqrtps
test
inc
je
jb
adc
aas
sbb
fmul
pop
mov
js
std
sbb
xor
imul
aad
in
xlat
loope
sbb
mov
jp
dec
cmp
adc
mov
sub
add
rcr
and
mov
mov
jge
pop
sbb
mov
ret
push
(bad)
mov
cmc
movs
xchg
sbb
sti
push
jg
call
xor
loopne
mov
les
mov
ret
jmp
test
and
ret
inc
or
mov
dec
enter
loop
dec
inc
sub
cpuid
xchg
xchg
inc
dec
call
cmp
and
dec
adc
(bad)
mov
das
imul
je
xchg
jmp
js
rcl
sub
call
(bad)
addr16
push
adc
lods
push
cli
pop
in
scas
push
jmp
jecxz
das
dec
mov
fcomp
sbb
and
mov
popf
into
xor
int3
mov
push
arpl
and
mov
dec
mov
jno
scas
push
xchg
inc
push
jno
repnz
jb
cmc
xchg
movs
cmp
loope
loopne
shr
jno
rcr
jb
mov
mov
cmp
pop
test
icebp
cmp
aas
dec
inc
mov
neg
ror
sbb
mov
sti
mov
sub
push
add
or
shr
sub
mov
repnz
std
lods
xchg
cli
xchg
dec
mov
cmp
mov
shl
inc
inc
xlat
daa
add
fs
mul
(bad)
dec
repnz
retf
mov
mov
addr16
mov
imul
outs
adc
out
xchg
rcr
ds
jmp
pop
gs
sub
inc
ret
inc
or
cmps
jg
jno
movs
and
mov
add
push
fild
push
xchg
jbe
nop
xlat
jle
fucomi
or
in
cld
xor
pop
dec
sub
outs
retf
cmp
inc
sbb
xchg
xor
imul
(bad)
neg
ficomp
out
outs
cmc
adc
popf
scas
ss
es
add
jmp
into
fwait
lock
mov
aas
xor
fiadd
fstp
mov
lahf
dec
add
push
jb
xor
sbb
(bad)
push
fcom
xchg
fadd
mov
clc
mov
jmp
test
repz
sbb
xor
sti
call
xchg
push
xor
pop
mov
cmp
sti
cld
popa
and
cwde
inc
in
idiv
jmp
loopne
or
push
movs
cmp
daa
popf
adc
stos
lock
popf
popf
mov
(bad)
or
enter
int
(bad)
xchg
dec
ja
std
test
mov
in
aaa
cmps
popf
int3
dec
or
inc
test
dec
nop
inc
lahf
stc
int
fadd
push
frstor
and
xchg
imul
je
pop
xchg
push
jno
mov
ja
or
clc
js
psrld
push
push
xor
clc
sbb
cli
loopne
lock
adc
push
cwde
or
jecxz
scas
inc
fimul
sub
pushf
ret
pop
repnz
pop
jae
push
adc
(bad)
sub
nop
adc
add
mov
ror
(bad)
push
test
(bad)
(bad)
mov
add
xor
push
inc
in
sub
adc
je
push
fdiv
push
or
ins
loopne
add
xchg
mov
inc
int3
stc
mov
out
inc
shl
cmp
cs
loop
sub
cdq
pop
add
repz
ins
jne
mov
cmps
aad
fisttp
push
cwde
nop
cmp
cli
sti
pop
loop
ins
mov
(bad)
(bad)
and
adc
or
cmp
(bad)
dec
mov
pop
pusha
stc
out
sbb
push
dec
out
jmp
mov
das
call
jne
aas
dec
lock
inc
push
pop
add
dec
imul
in
jnp
mov
mov
inc
cmps
add
xor
add
aad
dec
cli
js
inc
mov
call
adc
js
cmc
aas
xor
mov
push
aaa
scas
in
inc
mov
add
in
add
repz
lock
out
cmp
scas
push
imul
(bad)
fist
cdq
or
mov
mov
and
lahf
sub
push
(bad)
lods
mov
fild
imul
ret
or
and
lods
leave
xchg
mov
in
test
jmp
(bad)
jmp
dec
or
inc
lock
(bad)
dec
push
sbb
gs
repnz
scas
sbb
stc
mov
xor
add
mov
push
(bad)
jne
jmp
xchg
mov
cmps
add
js
cmp
push
cs
dec
bound
sar
sbb
cwde
adc
daa
push
sub
lds
data16
mov
pusha
jae
outs
mov
sub
adc
add
(bad)
inc
push
retf
pop
stos
dec
push
aaa
aaa
mov
sub
sub
shl
jbe
cmp
popa
pop
cmp
adc
xchg
push
xor
ins
repz
dec
je
hlt
pop
add
das
xor
add
popa
lods
inc
xchg
pop
add
sub
inc
enter
xor
stos
sbb
push
sub
(bad)
push
xchg
or
sbb
or
xor
outs
imul
sar
bound
xchg
push
sbb
ins
pushf
cs
test
ins
cld
je
mov
mov
jg
sbb
dec
mov
sbb
adc
or
inc
out
fs
movs
jl
jmp
inc
inc
mov
(bad)
idiv
mov
mov
adc
das
mov
and
lods
push
push
fistp
pop
jle
push
ins
mov
rol
in
jl
or
mov
retf
cmp
xor
cmp
addr16
xor
fimul
jnp
out
mov
push
jge
ret
out
mov
loopne
inc
sbb
in
pop
jmp
ret
test
mov
das
mov
cmp
push
inc
xor
adc
outs
pop
add
jl
cmps
cmp
dec
dec
sub
mov
addr16
icebp
adc
pop
cmc
lock
(bad)
mov
add
inc
xchg
sub
jnp
push
test
add
stos
pushf
cs
mov
jns
mov
sbb
mov
inc
cdq
ds
lods
jp
lock
and
rcl
pop
stos
aas
mov
in
shl
mov
dec
xchg
mov
aaa
shr
sbb
(bad)
fmul
sbb
cmovp
dec
xor
and
jge
popf
mov
add
dec
add
out
cwde
out
out
in
daa
clc
pop
scas
adc
bound
loop
ss
test
add
sbb
pop
iret
lea
int
rcl
and
std
jns
jns
outs
pop
stos
sbb
ss
sbb
retf
push
push
dec
rcr
psrlq
add
call
push
test
and
out
es
jae
xor
add
push
fnstenv
mov
lds
pop
loope
adc
sub
xor
jb
clc
or
es
out
cmp
sub
jnp
mov
ret
ret
mov
(bad)
out
pop
int
sbb
xor
(bad)
cmp
popf
adc
mov
xchg
pop
test
sbb
cmc
ror
retf
inc
sbb
cmp
ret
retf
push
push
repz
punpckldq
imul
es
fadd
jne
push
or
adc
pop
add
cli
and
cli
das
jmp
sbb
cmp
aam
sub
dec
addr16
cmp
ja
aas
popa
(bad)
ds
xchg
and
in
sbb
cli
fcmove
inc
int
out
push
aam
inc
xchg
sub
inc
cmp
sbb
push
in
repz
mov
leave
pop
push
cmp
inc
sub
es
mov
mov
in
int
mov
std
or
shr
jne
sbb
dec
ficomp
adc
outs
push
(bad)
or
inc
fisttp
icebp
shl
xor
mov
mov
inc
cli
sbb
xor
ja
fstp
lahf
std
(bad)
adc
(bad)
cli
nop
jbe
adc
inc
xchg
pop
pop
adc
sub
mov
in
fdivr
daa
push
jb
inc
push
mov
adc
xlat
(bad)
xor
or
xor
cmp
dec
mov
xchg
leave
(bad)
icebp
aad
mov
in
and
mov
cmp
in
mov
test
pop
mov
cmc
shl
jne
(bad)
fcmovbe
or
(bad)
btc
clc
xchg
popa
(bad)
(bad)
js
and
jmp
pushf
fldenv
(bad)
pop
and
dec
(bad)
lods
xchg
inc
out
xchg
and
mov
and
cmps
cmp
imul
nop
jge
ins
xor
jo
out
cmps
mov
int3
test
test
sti
(bad)
iret
dec
jnp
retf
cmp
jno
sbb
xchg
fimul
sbb
push
stos
test
test
and
push
neg
push
pop
pop
in
(bad)
pushf
dec
dec
dec
adc
jno
retf
movs
sahf
sbb
inc
dec
into
in
mov
lods
inc
pop
cmp
push
mov
adc
aam
pop
lock
fstp
(bad)
sahf
aad
pop
ret
jbe
jl
or
loop
xchg
in
mov
pushf
les
sub
push
pop
pop
pop
dec
imul
scas
mov
scas
dec
inc
mov
mov
adc
xchg
ds
and
out
cmp
sub
stos
and
mov
inc
pop
sbb
xlat
mov
mov
push
ja
xor
lods
xchg
ror
(bad)
and
(bad)
xchg
sbb
and
and
rcr
not
jbe
cmps
int
dec
(bad)
and
lods
lods
ret
jle
adc
sub
xor
and
mov
pop
mov
test
push
mov
clc
xor
jl
iret
push
sub
dec
mov
sbb
daa
sub
push
mov
ret
cmp
fiadd
js
pop
jecxz
sbb
jbe
loop
fcom
retf
ins
dec
mov
jae
aam
sub
mov
and
stos
mov
clc
fisub
int3
sub
aam
xchg
xor
movs
push
je
retf
imul
dec
int3
pop
fdiv
pop
fwait
in
popf
popa
push
xchg
movs
inc
sub
mov
ds
pop
xor
mov
lea
shl
adc
outs
dec
shr
adc
push
or
int
sbb
addr16
popa
push
loop
adc
loop
xchg
jp
into
stos
mov
and
stos
cmp
pusha
push
neg
out
push
mov
fbld
xor
fst
sbb
pop
repz
xor
add
das
mul
pcmpgtw
fnstsw
or
(bad)
imul
pop
dec
jo
mov
add
scas
mov
stos
jo
pushf
dec
push
push
fadd
scas
movs
pop
icebp
rcr
sub
mov
xchg
sbb
xor
sti
repz
outs
dec
jne
shr
push
and
std
imul
inc
scas
dec
mov
mov
cwde
and
ss
pop
mov
cmp
cwde
ins
jp
pop
ror
icebp
fbld
sub
or
dec
sbb
aad
div
jo
inc
and
add
(bad)
add
pop
mov
add
dec
mov
neg
loop
fisub
jnp
adc
or
mov
enter
or
es
add
xor
mov
call
test
mov
inc
lods
aaa
int
ss
call
out
or
xor
pushf
test
loopne
jg
jns
call
sub
es
in
jnp
repnz
pusha
imul
push
dec
jp
aas
aad
jge
inc
pop
inc
scas
loopne
bnd
shl
imul
dec
data16
lahf
push
mov
xchg
rcr
test
inc
fdiv
addr16
fucomp
lods
fnstcw
lahf
shl
shr
dec
dec
mov
(bad)
cmps
mov
and
loop
and
fs
pop
push
cmc
nop
cs
sub
rcr
mov
sbb
fbld
rol
push
push
jmp
jbe
jmp
push
push
aaa
adc
inc
mov
in
(bad)
sbb
xor
cmps
adc
jo
sbb
inc
xchg
add
jbe
xchg
mov
lds
jae
imul
repnz
movs
(bad)
xor
scas
cdq
or
sbb
pop
sub
cmp
xchg
in
jae
in
stc
es
idiv
scas
sti
mov
mov
test
(bad)
imul
or
push
jmp
es
nop
mov
(bad)
ja
aaa
(bad)
sub
cli
movs
div
loop
mov
bound
xor
add
repz
sub
cmps
aas
call
sbb
leave
into
aas
sub
fistp
(bad)
dec
test
push
xchg
daa
mov
inc
xor
mov
nop
aas
ss
jno
adc
mov
sub
jmp
push
or
jmp
push
stos
or
mov
fmul
jne
jecxz
int3
popf
sub
pop
add
jge
retf
stos
jmp
data16
fimul
or
test
add
dec
rcr
ja
mov
clc
mov
ret
aam
xchg
mov
push
inc
mov
repnz
enter
adc
dec
hlt
(bad)
xor
out
cmp
in
xor
sbb
retf
test
inc
sub
cmps
les
sbb
cmp
sbb
sub
or
gs
out
aam
retf
sub
inc
xchg
adc
mov
mov
retf
push
dec
push
movs
mov
lock
mov
leave
sbb
test
sbb
hlt
fs
inc
div
clc
sahf
fld
or
mov
imul
dec
sti
aam
dec
pusha
mov
pop
faddp
sub
sbb
cmp
stos
sub
adc
popf
lods
and
mov
cmp
xchg
inc
mov
and
lea
aad
cmp
mov
jp
psubw
add
pop
cmp
lods
inc
jns
add
and
pushf
sti
(bad)
mov
test
bound
std
add
aam
push
fist
bound
lock
dec
dec
inc
xchg
inc
or
push
bound
int
scas
aad
ret
inc
fxtract
adc
xchg
imul
push
sbb
js
or
and
sbb
popa
inc
push
or
xor
dec
pusha
shr
div
jb
inc
repz
or
leave
into
pop
test
jl
movs
lea
sbb
xor
leave
adc
mov
pop
push
cmp
in
popf
movs
mov
loop
repz
push
inc
mov
lock
retf
jmp
pop
clc
xchg
jae
daa
movs
ss
fstp
shl
rcl
dec
loopne
mov
or
add
sbb
pop
mov
cld
dec
sbb
or
enter
das
pop
lods
push
shl
or
cmp
rol
in
test
xchg
jno
inc
iret
jge
movs
fisub
pop
(bad)
(bad)
stc
jle
(bad)
jno
or
mov
test
pop
int
pop
aas
fild
jnp
cld
and
out
cmp
mul
xor
add
sbb
adc
add
or
stc
pop
repz
jns
xchg
mov
leave
jmp
or
clc
bound
mov
dec
push
shr
ror
stc
in
loope
xor
retf
or
adc
in
push
sub
gs
sahf
outs
les
cld
sbb
sbb
inc
mov
sar
mov
xchg
ret
daa
pop
xlat
fprem1
icebp
adc
dec
outs
sbb
and
imul
(bad)
cmp
mov
inc
cmovge
in
adc
mov
pop
adc
sbb
add
push
or
jmp
rcr
movs
jno
inc
sbb
wrmsr
mov
int
addr16
ja
sbb
inc
loop
mov
lea
fild
(bad)
and
mov
adc
xchg
push
pop
mov
ror
push
xchg
mov
and
cmp
mov
or
aas
cmps
and
jae
aaa
adc
dec
inc
stos
sbb
cmp
or
ss
push
stos
mov
retf
sbb
mov
lods
add
jnp
out
push
push
out
jl
or
push
aas
ror
sub
xrelease
loop
sub
repnz
inc
mov
outs
inc
fcmove
sub
mov
adc
push
and
gs
inc
in
shl
jge
xlat
(bad)
fsubr
push
mov
adc
jp
xchg
call
mov
test
mov
sub
test
push
loope
loope
jo
dec
int
and
mov
imul
cmp
mov
fwait
test
stos
mov
test
call
push
jo
bound
enter
pushf
sub
(bad)
cmp
mov
xor
lahf
das
dec
adc
push
sahf
sbb
dec
cmp
inc
dec
and
in
jmp
pop
into
mov
mov
test
mov
jecxz
jle
loopne
std
ret
jb
(bad)
clc
push
es
cmp
(bad)
or
push
dec
pop
push
or
add
icebp
cmp
sub
in
je
push
fsub
(bad)
xor
je
and
dec
jecxz
mov
cld
sub
je
cmps
sahf
stc
adc
pusha
pop
jl
call
xchg
inc
and
ss
ins
je
fnstsw
ror
pop
and
rol
rol
test
retf
jnp
loope
and
rcl
xchg
int3
xchg
mov
mov
sbb
pop
lods
pop
and
out
adc
xchg
mov
mov
jecxz
sahf
inc
ror
pop
inc
or
mov
or
cmp
sub
jg
jae
sub
bound
adc
aaa
mov
sahf
mov
mov
push
jp
or
cmp
(bad)
(bad)
add
test
movs
jo
stos
sub
das
push
mov
fldenv
rcl
dec
xchg
fisubr
push
and
mov
xchg
gs
push
gs
loop
mov
fwait
pop
or
mov
enter
sti
xchg
push
pop
cmp
pop
adc
inc
jmp
in
or
sub
push
imul
jno
pop
sub
in
jl
xchg
(bad)
in
inc
dec
sub
(bad)
pop
jmp
mov
les
fdiv
out
push
sahf
cmp
jae
mov
cmp
ins
or
and
cmp
imul
xchg
shl
fidiv
cli
int
mov
bound
push
pop
jl
push
outs
inc
cmp
pop
outs
(bad)
jmp
loop
xor
sub
jmp
xchg
lahf
dec
mov
mov
sub
mov
ror
(bad)
test
push
adc
mov
jnp
cmp
lock
jnp
dec
push
dec
or
or
aad
xchg
pop
leave
inc
aas
xchg
sub
in
xchg
mov
lock
jbe
gs
pop
pop
aaa
xor
pushf
arpl
mov
call
dec
mov
nop
push
lock
push
iret
inc
outs
jno
jle
test
jmp
adc
popa
enter
sub
mov
mov
in
(bad)
lods
mov
repz
inc
sbb
shr
into
loope
lock
(bad)
xchg
or
or
mov
test
xchg
sub
ja
jg
sub
dec
repnz
inc
out
xchg
repz
push
mov
sti
jae
pop
add
sbb
(bad)
push
pop
ret
ins
mov
aas
or
pop
jo
add
(bad)
jmp
dec
leave
mov
ins
or
pop
pop
out
or
or
or
xchg
xchg
lds
xchg
out
sub
xlat
push
mov
adc
(bad)
and
cs
int3
enter
das
cdq
scas
xor
add
mov
imul
push
aam
sbb
ret
xor
(bad)
ss
and
adc
cmps
pop
test
leave
movs
jg
inc
test
push
adc
dec
stos
rcr
mov
mov
ja
fmul
in
xchg
popf
int3
inc
jg
add
std
ja
cmp
mov
dec
jge
mov
mov
mov
ret
dec
xchg
retf
ficomp
mov
leave
mov
xlat
inc
mov
dec
rcr
push
jae
(bad)
imul
data16
dec
sub
adc
cwde
std
fdivr
sub
adc
test
and
mov
add
jbe
inc
out
shr
stc
jg
shr
push
add
dec
xor
mov
outs
aam
and
inc
in
fnstenv
jmp
xchg
mov
jmp
push
int
shl
xchg
test
cmps
pusha
cmc
inc
xchg
iret
adc
iret
ror
fs
or
outs
pop
(bad)
jo
and
bound
(bad)
cmp
mov
jae
ficomp
bound
fist
mov
push
or
out
fwait
adc
call
jb
popa
nop
mov
shr
and
xor
jne
inc
fwait
adc
sar
sub
adc
pop
xor
movs
cmp
sub
xor
pop
mov
mov
ins
xlat
adc
inc
das
cmp
mov
adc
movs
mov
pop
and
fimul
pop
pop
vcmpps
mov
fild
popa
rol
dec
push
mov
jne
xor
add
int3
out
mov
cmp
pusha
sbb
push
pop
adc
and
dec
(bad)
sub
call
pop
and
enter
ds
sahf
pop
sbb
retf
jnp
repnz
fadd
outs
pusha
scas
pop
cmc
neg
xchg
sub
aad
xchg
sbb
inc
popa
or
imul
cmp
outs
loope
lds
cmps
ret
adc
aam
jmp
pop
data16
stc
in
mov
jmp
or
xchg
dec
std
mov
xchg
push
jnp
sbb
mov
ins
adc
pop
cmp
shl
repnz
pop
xchg
(bad)
into
(bad)
cld
sub
xlat
rcl
mov
or
shl
test
inc
es
ss
add
ins
add
arpl
sahf
cmc
clc
mov
push
pop
xchg
test
mov
in
cmp
jmp
mov
inc
push
(bad)
out
push
mov
push
mov
outs
jle
nop
enter
(bad)
adc
jbe
sahf
stos
nop
jle
test
fs
ss
add
jge
es
(bad)
xor
pop
xchg
xlat
adc
icebp
mov
xor
js
aas
or
out
inc
push
jl
stc
mov
test
cs
call
add
test
shl
call
cmp
inc
jns
mov
mov
hlt
cmps
jmp
(bad)
mov
cmp
ds
pop
or
inc
sbb
sub
xchg
adc
sub
sar
add
cmp
call
mov
aaa
and
int
adc
jbe
push
push
dec
push
aas
dec
adc
xlat
stos
adc
dec
xor
shl
ret
push
dec
or
in
into
std
cmp
bound
lahf
ja
jnp
push
sub
sub
sbb
sahf
cmp
push
in
xlat
jo
outs
mov
fwait
pop
jge
enter
ins
mov
call
xor
cli
daa
mul
jb
mov
mov
cmps
push
fs
jb
jae
mov
lods
dec
dec
mov
outs
push
xchg
cmp
push
mov
cmp
mov
(bad)
pop
sub
dec
pop
mov
jne
jne
xlat
xchg
sub
inc
dec
push
pop
(bad)
push
push
sub
mov
add
outs
cmp
jno
inc
std
retf
cmps
xchg
in
retf
call
push
jnp
mov
push
mov
lods
xchg
pusha
pop
dec
xor
mov
adc
je
xor
dec
cmp
cmp
imul
dec
mov
aas
and
adc
xchg
mov
mov
test
xchg
ret
and
out
push
daa
xor
mov
inc
out
lods
jmp
mov
lods
pop
cli
mov
xor
out
les
mov
iret
lahf
mov
lea
das
loope
icebp
dec
call
inc
pop
pop
cmps
inc
imul
push
(bad)
lods
call
mov
sub
mov
or
les
sar
jno
cmp
fnstsw
retf
xlat
fstp
mov
pop
xor
sub
das
push
jno
jp
(bad)
out
push
sbb
sti
pop
jbe
das
daa
xor
push
test
inc
mov
into
cwde
sbb
test
push
cmp
dec
cmp
in
shr
xchg
sub
xor
fdivr
(bad)
pusha
fistp
sahf
lods
loope
jecxz
(bad)
cmp
jns
mov
sub
adc
cdq
adc
inc
daa
dec
and
aaa
aam
xor
xor
jmp
sub
fcomp
sti
call
xor
inc
inc
mov
cs
ds
(bad)
(bad)
mov
imul
lods
ss
mov
pusha
fstp
add
jp
mov
test
test
inc
sub
in
outs
fs
cmp
dec
pop
mov
aad
test
in
add
fucom
pusha
leave
pop
cdq
mov
inc
neg
aad
aaa
dec
aad
pushf
dec
xchg
add
sbb
in
cmps
fisub
sbb
or
or
cmps
add
xor
adc
push
jmp
xor
mov
pxor
push
in
(bad)
xchg
(bad)
aam
cld
retf
push
mov
fs
add
jbe
mov
dec
jle
shl
add
outs
les
lock
xchg
jo
clc
movs
rcl
daa
fild
sub
mov
test
mov
fwait
pop
jb
fstp
fist
(bad)
fiadd
sti
stos
clc
push
inc
mov
mov
loope
mov
jae
push
mov
cmc
xor
out
or
mov
movs
sbb
aam
test
mov
and
or
mov
add
sbb
xor
adc
bound
ret
fcmovnu
jbe
inc
sub
sbb
cli
scas
stos
call
push
test
icebp
inc
lahf
retf
xlat
xchg
or
std
jg
ror
fisub
xor
xchg
ds
out
and
pop
push
or
push
push
xchg
es
in
(bad)
mov
mov
icebp
repnz
mov
fwait
add
arpl
loop
fwait
jnp
in
shl
es
inc
sar
xor
mov
(bad)
xor
popf
mov
jg
xor
cld
outs
lds
fwait
jo
loope
add
adc
dec
fdivr
cmp
fwait
mov
imul
xchg
add
jge
out
mov
mov
and
push
pop
int3
aas
xchg
inc
mov
dec
fdivr
pop
std
lds
jmp
fidivr
jnp
outs
xchg
and
push
(bad)
mov
cmp
int
test
inc
cmp
inc
and
push
adc
jnp
popfw
cmc
out
dec
fisttp
mov
scas
inc
pop
xchg
jbe
mov
leave
in
stos
mov
cmp
mov
push
(bad)
je
dec
or
(bad)
cmc
pop
test
pop
dec
in
mov
pop
mov
gs
jecxz
dec
ror
pop
mov
or
xchg
test
sbb
mov
call
jmp
repz
out
outs
xlat
push
ret
pop
jbe
lahf
(bad)
adc
inc
and
fs
cmp
ss
jl
lods
ret
cs
lea
mov
jb
dec
mov
lods
adc
jle
enter
retf
dec
clc
xor
xor
jne
cmps
push
dec
sub
cld
hlt
adc
push
daa
jg
shl
into
pop
cs
xor
daa
test
jb
sar
test
mov
mov
bnd
mov
pop
mov
out
cmc
xchg
mov
adc
ins
(bad)
xchg
stos
pop
mov
dec
cmc
mov
callw
ror
pushf
imul
add
mov
sub
mov
mov
scas
pop
jle
sub
push
push
jne
ror
jl
sub
sub
xchg
stc
sar
ins
cmp
cmp
pop
sub
push
mul
loopne
xchg
jns
dec
pop
jns
sub
mov
push
or
sub
adc
sbb
xchg
xor
add
push
sub
sub
sbb
pop
xchg
je
pop
out
push
leave
nop
jge
movs
pusha
aaa
shr
pusha
inc
mov
pushaw
and
mov
push
sbb
mov
inc
xor
mov
(bad)
movs
stc
aad
retf
mov
xchg
fld
pop
retf
adc
stc
mov
push
(bad)
ins
push
mov
pop
call
xchg
add
ret
pusha
popf
dec
pop
rcr
adc
inc
int
and
mov
dec
rcl
inc
int
mov
lods
sub
test
xor
xor
imul
mov
(bad)
cld
dec
aas
(bad)
lds
cmp
fwait
pop
mov
imul
and
rol
aas
pop
pop
or
push
es
xlat
sub
pop
adc
pop
mov
fist
pop
and
int3
mov
cdq
stos
or
ret
je
inc
ror
xor
icebp
push
dec
push
mov
dec
inc
pop
stc
or
mov
cmp
cli
ret
stc
mov
cdq
adc
loopne
in
lahf
sar
aas
dec
shl
fs
adc
cmp
lock
lods
jo
hlt
pop
dec
loope
cdq
jno
mov
push
rep
ins
es
mov
or
scas
mov
daa
loopne
call
mov
or
push
in
daa
sub
mov
push
aas
das
mov
dec
enter
ror
(bad)
add
aas
dec
push
bound
sti
aas
repnz
loop
fucomi
sub
xlat
popa
aaa
test
cmps
cmc
push
into
dec
es
inc
jle
xor
outs
dec
loop
adc
dec
or
pop
lahf
jge
inc
scas
cmc
(bad)
cmp
and
gs
(bad)
mov
push
push
mul
xchg
sub
jp
cdq
jecxz
push
cdq
ins
imul
pop
fs
rep
cmp
mov
js
nop
sub
mov
das
stc
or
push
stos
fld
sbb
ret
jbe
pop
pushf
aaa
les
imul
aam
stos
mov
pop
xchg
jmp
and
repnz
jge
jne
xchg
xchg
ins
dec
loope
xchg
sti
jmp
jmp
ss
mov
xor
sub
idiv
test
xchg
shl
mov
je
fcomp
mov
cs
(bad)
mov
ds
pop
add
cmp
std
pop
test
push
sti
out
idiv
fwait
sbb
mov
in
jno
jmp
inc
int3
push
bound
or
sub
stos
leave
pushf
sbb
jo
cmp
cwde
stos
and
mov
call
dec
mov
fcmovbe
pop
xor
stos
sbb
popf
outs
sbb
das
xchg
pop
aas
jge
imul
dec
fs
add
es
dec
cs
je
pop
push
sbb
aaa
cmps
mov
and
or
jmp
fdiv
pop
mov
or
shl
fstp
add
pop
push
dec
adc
ins
out
xchg
rol
xchg
mov
add
les
pop
pop
xor
add
dec
in
fcom
and
push
neg
int
fcmovnbe
dec
xchg
out
ja
sub
je
ja
xor
mov
sbb
rol
inc
sbb
cmp
push
pop
pushf
adc
mov
scas
(bad)
cld
test
pusha
std
lods
mov
add
(bad)
out
popa
mov
push
jp
arpl
sub
xlat
mov
fwait
and
les
xchg
sub
sbb
add
jmp
pop
xchg
inc
retf
icebp
jnp
sub
push
mov
mov
pushf
sbb
je
cmp
and
dec
not
lock
stc
mov
adc
aam
(bad)
gs
mov
mov
sub
in
bound
xchg
aaa
retf
or
sar
sub
cmp
stc
ja
sbb
jae
shl
jmp
stos
push
dec
arpl
iret
mov
jge
test
sub
or
lods
pop
loop
aam
popf
mov
cmp
xchg
clc
int
cmp
or
jbe
xor
ja
(bad)
add
es
fidivr
rcr
fnsave
or
adc
in
outs
stos
out
(bad)
or
jle
retf
jl
xor
out
inc
dec
jae
pop
sub
sub
jbe
aad
shl
and
or
std
cdq
sbb
xchg
xor
or
js
fidivr
inc
ror
cli
inc
and
or
call
sbb
movs
push
(bad)
and
gs
xchg
ss
push
in
push
outs
loopne
xchg
sub
push
xor
lea
mov
daa
bound
cld
(bad)
or
sbb
sub
jge
fimul
dec
add
cmp
ret
nop
add
mov
dec
faddp
jg
and
popf
adc
in
dec
div
mov
sub
sub
ret
mov
pop
sub
push
popa
shl
mov
mov
or
inc
rcl
mov
shl
mov
add
push
js
pop
jle
sub
fbstp
pop
xchg
mov
jbe
adc
in
fwait
int
jmp
add
or
xchg
xor
in
(bad)
cmp
mov
and
out
or
push
out
pop
cmp
cmp
sar
hlt
clc
pop
inc
sbb
adc
into
aas
into
jle
adc
xor
cmc
xor
mov
sbb
xchg
jmp
xor
pop
mov
stos
and
in
ja
sbb
out
retf
data16
lods
and
js
ds
inc
sub
ins
cmp
in
jno
xlat
and
mov
pop
mov
retf
jbe
es
cwde
ror
push
aad
adc
in
shl
ds
sbb
xor
shr
push
mov
fsubr
xor
push
sub
hlt
sub
js
das
or
in
call
and
cmp
ret
push
sub
lds
arpl
cmp
mov
dec
mov
leave
cmp
push
xor
call
mov
inc
loopne
add
in
jmp
mov
adc
or
clc
aas
sub
lods
ds
push
lods
sti
cmc
in
jne
cmp
mov
pop
mov
mov
push
mov
jmp
mov
popf
nop
pop
sbb
mov
inc
jnp
pop
mov
imul
dec
test
hlt
scas
out
bound
push
mov
ret
cmp
sbb
sbb
push
fistp
dec
mov
std
dec
cmc
imul
ret
aas
jl
pop
jmp
mov
mov
mov
gs
adc
mov
jb
stc
and
das
sar
in
mov
pop
cmps
or
imul
adc
jmp
jne
rol
leave
test
xlat
shl
jbe
add
push
push
sub
sub
pop
dec
sub
mov
addr16
lods
mov
test
mov
(bad)
fisubr
lahf
mov
mov
xchg
in
rcr
mov
and
fwait
in
addr16
(bad)
sub
fisub
mov
xor
sbb
bound
iret
and
jb
idiv
mov
test
popf
(bad)
cmp
xlat
xchg
fisttp
ret
push
dec
sbb
mov
push
add
adc
int
test
adc
or
addr16
inc
push
xchg
bound
jecxz
mov
push
cmp
add
fadd
lods
jno
mov
test
mov
adc
add
push
imul
mov
ficom
sub
stos
pop
outs
dec
mov
push
out
inc
inc
xor
inc
adc
and
sbb
mov
jmp
push
mov
push
retf
or
aam
xchg
cmp
push
je
add
jmp
lds
repz
out
mov
inc
out
setnp
ja
sbb
in
dec
jmp
jmp
icebp
es
push
mov
and
sbb
mov
mov
jb
clc
mov
or
mov
and
shl
je
mov
or
inc
mov
pusha
es
arpl
adc
pop
xchg
(bad)
adc
mov
push
adc
hlt
popf
push
cmp
fstp
movs
fadd
cmp
xchg
dec
sbb
mov
add
int3
shr
or
pop
inc
pushf
and
cmp
scas
jecxz
arpl
cmps
loop
xor
mov
pop
addr16
in
add
add
push
xchg
sub
inc
test
stos
pop
inc
stc
popa
aas
mov
icebp
add
add
push
sub
push
push
cwde
jo
dec
jp
pop
or
and
pop
jle
cmp
xchg
dec
int3
js
inc
scas
movs
or
inc
gs
xor
add
xor
jge
aas
cli
int
das
retf
enter
jae
and
xchg
adc
stc
stc
cs
retf
imul
call
pop
xor
add
jge
popf
es
adc
into
sub
pop
je
mov
loope
and
(bad)
cmp
mov
push
ins
and
cld
dec
in
fwait
and
popf
mov
jmp
mov
add
fadd
add
sahf
popa
inc
add
call
mov
mov
cdq
lea
std
mov
inc
popf
push
mov
pop
adc
cmp
or
and
ret
scas
push
bsf
xchg
mov
adc
jmp
jno
push
dec
icebp
test
adc
ds
test
repnz
xchg
pop
cmps
xor
add
mov
outs
bound
cmps
pop
loop
push
fmul
test
inc
xor
xchg
mov
or
das
cli
sbb
ficom
xchg
out
cld
lods
das
pop
xchg
clc
xchg
sahf
shr
scas
aaa
ret
mov
xor
(bad)
(bad)
fwait
mov
cmc
(bad)
cmps
push
push
cmp
mov
or
je
adc
and
call
mov
and
inc
lods
cmc
cmp
mov
cmp
add
dec
mov
mul
lahf
les
lods
stos
inc
aam
adc
cmp
lods
popa
and
out
xor
mov
adc
(bad)
repnz
cmps
repnz
sub
jge
or
popf
out
cmp
fstp
push
inc
jno
pop
(bad)
stc
push
out
jecxz
cmp
and
mov
and
jle
div
cmps
or
ret
lea
adc
mov
sub
jae
leave
not
jge
out
jnp
dec
mov
daa
xor
sbb
clc
cld
ja
inc
mov
inc
cmps
inc
mov
mov
push
call
pop
movs
lods
mov
xchg
push
ins
mov
inc
lahf
and
stc
ficomp
lods
xchg
adc
push
add
neg
inc
(bad)
push
or
xchg
dec
jle
xchg
pop
ja
mov
jecxz
sub
inc
jnp
cmp
or
ins
dec
cmc
or
cs
pop
int
adc
or
ficom
push
pop
inc
loopne
dec
leave
neg
push
loop
dec
test
jle
lahf
xchg
out
js
ret
sbb
sub
adc
test
sub
dec
jl
xor
jge
idiv
pushf
daa
adc
xchg
add
xchg
mov
push
sbb
cs
ins
mov
fmul
jne
jae
pop
cmp
sbb
jo
ja
in
inc
retf
scas
jmp
shl
sahf
mov
shl
adc
nop
hlt
mov
sbb
push
mov
add
retf
pop
(bad)
int3
ins
xchg
(bad)
sbb
jmp
(bad)
cli
out
xlat
add
mov
ja
xchg
xor
addr16
dec
popa
call
arpl
(bad)
pop
in
sbb
push
test
and
xlat
pop
push
jge
dec
adc
adc
daa
mov
push
adc
push
ins
cmps
je
dec
cwde
push
mov
xchg
rol
lahf
inc
xor
dec
pop
std
fmul
sbb
addr16
sar
sub
(bad)
jmp
cmp
jns
add
popa
loope
push
xor
and
out
xchg
movs
test
lds
mov
cwde
repz
push
gs
xor
mov
fcomi
stc
xchg
loopne
or
cmp
inc
push
and
xchg
cmp
dec
pop
cmp
cli
pop
out
jo
out
sti
push
add
pop
arpl
push
sub
push
cli
sub
iret
or
pop
stc
loopne
adc
shr
cmps
cli
and
in
stos
hlt
mov
xchg
js
cld
adc
xlat
xchg
adc
aas
fwait
xor
push
mov
daa
and
mov
dec
loopne
and
pop
jmp
xor
fadd
push
xor
ja
jp
mov
adc
xchg
xchg
mov
xchg
hlt
adc
or
xlat
lods
mov
push
push
and
cmp
dec
sti
nop
push
jb
mov
pop
xor
or
sbb
sub
pop
scas
into
xor
or
xor
popf
(bad)
imul
fsubrp
pop
fwait
mov
xchg
cmp
aaa
add
push
mov
sbb
jb
mov
xchg
rcl
ret
sbb
mov
xor
out
pop
scas
addr16
fld
test
sbb
push
into
mov
lea
sub
mov
xor
jne
pavgb
mov
jl
cmp
cmp
mov
xchg
js
nop
add
idiv
xor
jle
repz
sub
adc
repnz
dec
stos
or
push
xor
and
mov
jge
inc
or
sar
add
(bad)
mov
pop
call
add
nop
and
jo
jo
leave
jmp
(bad)
xor
out
fisttp
mov
cmps
stc
pop
pop
add
lods
jne
push
das
in
(bad)
sub
mov
cmps
les
lahf
cmp
popa
pop
icebp
push
or
int3
sbb
mov
jmp
sbb
retf
aas
jecxz
in
add
dec
adc
and
pop
call
fsub
pop
dec
mov
les
das
mov
call
ins
fs
lea
jo
add
bound
repz
lea
(bad)
mov
jmp
jl
xadd
jnp
adc
out
mov
data16
ins
jmp
mov
xorps
sar
shr
addr16
lock
sub
mov
jnp
loopne
repz
lods
push
xchg
(bad)
aas
idiv
call
outs
push
adc
xchg
cmp
pop
test
sti
cmp
and
sub
mov
pop
rep
and
pop
or
out
pushf
test
jg
ss
push
loope
and
adc
ret
out
into
jae
lahf
inc
dec
inc
cs
sbb
pop
push
rcr
fdivr
out
shl
les
adc
push
cmp
jle
xor
inc
clc
(bad)
cmps
sub
sub
es
jbe
idiv
jmp
mov
cs
cmp
mov
stos
int
or
(bad)
jg
mov
push
ins
sub
cwde
loopne
enter
lods
and
sbb
adc
jecxz
dec
outs
outs
mov
jge
pop
xor
(bad)
xchg
cmp
loopne
mov
xor
out
and
jle
cmps
jae
out
test
cmc
mov
mov
test
dec
sub
adc
out
out
xchg
in
jecxz
jae
(bad)
pop
bnd
das
cmc
mov
ins
jbe
and
cmp
popf
fld
or
jecxz
(bad)
push
fdiv
hlt
mov
fnsave
jge
inc
xor
or
rcl
cmp
pushf
xchg
xor
rcr
cmp
mov
sub
jae
pop
loope
xchg
adc
nop
(bad)
outs
rol
fdivr
and
or
pmulhw
mul
adc
pop
xchg
leave
cmp
cmp
nop
cmps
aas
fnstsw
aas
fidiv
fcmovnu
add
or
dec
rol
add
hlt
adc
jbe
cmp
imul
jge
das
dec
shl
sbb
ins
push
(bad)
cmp
xchg
sub
mov
out
popa
xchg
pop
xchg
and
in
add
jl
inc
stos
xlat
push
enter
ret
or
sub
pop
inc
loop
ja
dec
and
pop
add
push
outs
and
dec
xor
pop
push
ret
push
add
fcomp
mov
dec
adc
sub
mov
ror
in
mov
mov
in
test
(bad)
in
addr16
mov
adc
call
xlat
test
adc
pop
push
movs
adc
push
pop
sub
pop
mov
pop
mov
pop
sbb
mov
ja
inc
fist
and
add
pop
inc
cmp
out
(bad)
pushf
jbe
stos
out
in
fistp
mov
sub
or
imul
outs
sbb
adc
fnsave
sbb
or
adc
adc
xlat
push
pop
stc
icebp
sub
cmp
imul
push
loopne
out
sahf
mov
into
lods
mov
adc
mov
lock
mov
shl
dec
push
fild
fwait
outs
jmp
push
pop
xor
jg
test
mov
and
aaa
xor
test
mov
std
call
rcl
push
xor
sti
or
push
das
iret
mov
or
paddb
add
in
sub
mov
inc
loopne
pusha
inc
xlat
push
sub
pop
sahf
mov
(bad)
fisubr
dec
retf
arpl
inc
pusha
cmp
cdq
sbb
pusha
test
push
add
mov
mov
ins
cmc
push
ret
outs
mov
jns
xor
fucomip
cmp
adc
jl
jmp
lea
in
xor
push
retw
jle
add
jbe
scas
xchg
aad
jmp
mov
inc
bound
imul
scas
sub
inc
fldl2e
push
fadd
and
jecxz
sbb
movs
mov
mov
xor
add
cmp
mov
or
mov
fild
lods
sub
ss
fcomp
out
xor
sub
mov
cmp
jnp
sub
add
inc
ja
pop
xchg
xor
xor
mov
inc
xor
hlt
in
shl
jb
mov
sbb
addr16
pop
jae
adc
push
std
jl
sub
mov
sbb
sti
push
jecxz
or
call
and
mov
xchg
repnz
sbb
sub
dec
cmp
jl
(bad)
rcr
add
add
in
mov
dec
adc
adc
(bad)
xchg
out
mov
jl
xor
cmc
jns
xor
fld
sbb
push
jge
shr
jle
cli
mov
push
test
shl
mov
xchg
dec
inc
in
data16
mov
adc
fidivr
xor
mov
int
jmp
xor
cmp
and
cli
lods
mov
lock
cdq
ss
xor
jnp
call
pop
js
adc
dec
jl
in
and
fwait
movs
mov
cmc
ds
mov
sbb
data16
lock
dec
stos
jbe
hlt
pop
sub
and
retw
jecxz
mov
inc
popf
pop
ficom
pushf
nop
aad
mov
std
mov
imul
push
xchg
sub
add
xchg
loope
inc
pop
xchg
int3
enter
pop
mov
das
xor
dec
adc
and
enter
inc
push
add
adc
xor
outs
arpl
daa
xlat
leave
adc
mov
and
sbb
dec
sbb
addr16
and
test
in
(bad)
mov
rcl
lea
fwait
cmp
popf
dec
xlat
push
xor
cmp
mov
ds
mov
mov
std
aas
dec
jo
sub
sub
or
test
data16
ficom
repz
retf
xchg
pop
push
shr
sar
mov
mov
add
jge
or
add
push
cmp
test
cmc
call
pop
and
pop
sbb
(bad)
push
test
cwde
xchg
jnp
das
pop
jecxz
mov
(bad)
xor
mov
icebp
fbstp
(bad)
sub
mov
inc
dec
adc
ds
pop
cmp
popa
(bad)
jg
push
and
jmp
mov
lods
fpatan
adc
mov
sub
outs
jecxz
push
jge
cmps
aaa
cmp
cmps
clc
test
stos
push
cmp
pmuludq
cmps
xchg
push
repz
inc
jmp
out
pop
or
call
xor
dec
add
cmp
into
sbb
rol
add
sar
mov
outs
cmc
mov
jmp
and
sbb
pop
inc
cmp
stos
rcr
sub
jbe
mov
call
popf
in
lock
and
test
hlt
jecxz
push
cld
ss
jnp
lock
dec
jp
(bad)
repz
mov
shl
mov
ins
cmps
or
enter
addr16
push
dec
cmp
and
xor
sub
inc
js
jmp
inc
jne
dec
mov
jb
cmp
popa
out
div
fdivr
adc
push
add
xchg
adc
(bad)
push
fist
jmp
and
sub
xchg
sbb
enter
loope
push
ja
jne
and
aad
lods
mov
jl
jecxz
add
mov
addr16
ror
and
sub
sbb
nop
push
push
(bad)
fld
mov
pop
or
movs
test
xchg
aas
push
scas
imul
inc
popf
test
adc
sahf
mov
mov
inc
shl
repnz
and
or
or
pop
ja
out
jo
jne
xchg
(bad)
jmp
iret
mov
push
jp
aas
xor
les
enter
cmp
pusha
retf
outs
pop
adc
popa
dec
adc
outs
jp
push
(bad)
test
adc
lods
test
and
cmc
in
(bad)
xor
fimul
repz
pusha
or
(bad)
add
std
inc
ds
in
xlat
lods
pushf
mov
lea
xor
xchg
out
lea
sbb
pop
xchg
cs
pop
jmp
outs
pusha
test
xchg
jnp
iret
daa
sub
pop
stos
test
sbb
pop
loop
fs
sub
(bad)
sbb
push
jo
push
pop
je
xlat
enter
xor
or
pop
fnstsw
jne
adc
inc
push
jge
inc
pop
mov
addr16
arpl
shl
xor
push
(bad)
outs
mov
cmp
nop
retf
cmp
adc
(bad)
pusha
fstp
xchg
pop
mov
sbb
push
mov
sahf
pop
jbe
cmc
ret
adc
imul
movd
and
xchg
xchg
mov
jge
jb
aaa
movups
or
fst
add
push
cmps
and
pop
in
(bad)
mov
xlat
xor
and
inc
inc
push
cmp
mov
das
out
push
lods
(bad)
into
je
(bad)
(bad)
adc
jnp
pop
dec
jecxz
xor
pop
outs
data16
xchg
jl
or
hlt
and
lods
mov
xor
leave
mov
pop
mov
outs
and
cmp
out
xchg
in
cmps
push
lods
jg
mov
out
pop
imul
outs
cmp
outs
inc
fdivr
out
sub
push
imul
add
xor
mov
shl
data16
fwait
sub
cmps
cmc
mov
jno
pop
push
inc
mov
loopne
lods
int3
mov
lea
jge
mov
xchg
adc
mov
sti
inc
nop
push
pusha
mov
adc
aas
mov
scas
mov
jmp
in
out
ret
adc
sbb
xor
pop
push
or
mov
(bad)
popf
mov
and
jmp
imul
scas
inc
ret
cmp
rcl
clc
dec
outs
sbb
cld
sbb
lods
add
mov
cmp
cmps
lods
cmc
inc
mov
sbb
cmp
add
inc
outs
or
or
mov
pop
add
aam
popf
retf
xor
push
mov
fimul
cmps
lods
adc
add
out
int
out
call
dec
inc
ds
pop
and
pop
es
jl
xchg
(bad)
out
pop
dec
test
and
sub
mov
and
pop
pop
popf
(bad)
fwait
adc
add
xor
xchg
cmc
stos
(bad)
(bad)
shl
popf
jle
jl
mov
pop
and
xor
into
fidivr
mov
cmp
fcom
gs
cli
jp
stos
rcl
ret
sbb
mov
sub
push
daa
sub
(bad)
or
mov
bound
cmps
jg
mov
arpl
or
xor
pop
mov
dec
repnz
inc
push
mov
repz
std
pushf
push
in
xchg
ret
adc
cmps
pop
call
out
ja
in
and
mov
add
inc
fsub
push
nop
jb
daa
sub
test
cmc
mov
xor
or
in
loop
add
xchg
cmp
mov
pop
pop
add
push
pop
stos
or
int3
outs
xchg
cli
mov
push
dec
xchg
jecxz
test
fs
aad
es
int
not
ror
arpl
bswap
and
xchg
xor
pop
xchg
push
add
mov
cs
sub
sahf
rol
xor
inc
loope
mov
jbe
into
add
or
inc
scas
inc
ss
jno
sbb
int
fld
sbb
adc
ret
(bad)
jbe
aas
cli
dec
mov
call
out
xlat
mov
shl
push
jmp
mov
ffreep
loopne
pop
repz
mov
xchg
call
call
call
or
shl
iret
pop
outs
lods
dec
fsub
inc
cmp
push
push
call
xor
cli
cmps
cmp
jb
pop
xchg
mov
push
add
mov
jle
push
pop
hlt
ret
add
aas
call
inc
pop
push
xchg
push
xchg
icebp
push
dec
ss
popf
mov
sub
or
js
hlt
(bad)
cmps
inc
movs
jo
es
pop
sbb
aam
adc
mov
adc
out
dec
jnp
sbb
push
movs
add
mov
repnz
cmp
(bad)
mov
inc
repz
into
iret
xor
rcl
cmps
adc
inc
and
das
xchg
daa
mov
mov
cmp
cmp
inc
xchg
popf
ins
sbb
dec
retf
jae
or
fdiv
and
or
cmp
or
test
lods
sub
or
jge
or
bound
fidivr
sbb
mov
fs
mov
adc
fisub
mov
test
mov
into
xor
jno
cmp
fldcw
addr16
jbe
mov
push
xchg
mov
cmc
sub
fsubrp
dec
jl
lock
fstp
xchg
add
cmp
push
jnp
enter
scas
pusha
jo
repz
loopne
push
push
jle
add
xchg
sub
mov
push
mov
jmp
cld
out
sbb
sub
jg
(bad)
nop
cmp
cmp
adc
xchg
ins
add
(bad)
push
xchg
inc
out
shr
test
sbb
sahf
int
retf
xor
(bad)
xchg
inc
aas
out
xor
ss
pop
jmp
icebp
fstp
pop
arpl
add
and
xchg
or
pop
fcomp
(bad)
shl
dec
cli
add
xor
mov
adc
push
retf
lock
xor
pop
pop
fsub
adc
aad
ret
mov
mov
jnp
xor
in
cmp
xchg
and
scas
jns
add
push
and
ficomp
adc
js
sub
shl
mov
xor
out
pop
jne
xor
je
jo
loope
cmps
cmp
push
mov
xchg
scas
mov
inc
retf
jo
jl
jnp
push
cmp
mov
movs
pop
adc
push
fst
inc
adc
out
dec
scas
inc
or
jnp
fisttp
inc
hlt
jl
mov
xlat
inc
fst
push
scas
mov
test
test
out
sahf
clc
in
and
ins
mov
mov
ja
mov
imul
mov
mov
(bad)
jmp
movs
cmp
inc
and
les
jle
in
add
test
jb
fild
call
inc
jno
jo
imul
repnz
mov
jae
pop
fmul
or
mov
gs
retf
sub
stc
push
adc
aaa
add
out
je
fcomp
cmp
rol
pop
in
retf
or
xlat
mov
stos
xor
pop
out
clc
add
ds
cli
scas
pop
add
push
enter
retf
mov
sbb
xchg
mov
xlat
dec
or
jno
xchg
mov
xor
stc
mov
jns
mov
into
call
std
ret
cmp
add
call
xchg
div
sub
mov
push
retf
lds
and
(bad)
fnstcw
lahf
lea
out
outs
dec
mov
pop
cmps
jno
xor
popf
adc
gs
hlt
jge
push
imul
or
ss
ss
(bad)
mov
sub
cmp
int
hlt
add
jmp
in
jmp
push
repnz
shl
push
add
fyl2x
pop
mov
cmps
cmps
pop
or
mov
daa
add
int
aam
dec
jmp
in
cmps
mov
loopne
xor
(bad)
(bad)
add
add
fstp
adc
sub
std
adc
mov
dec
pop
jmp
addr16
ss
cmp
call
stos
mov
pop
into
cld
movs
loope
or
out
pop
or
enter
ja
test
push
push
sbb
mov
inc
fmul
pushf
sub
fistp
mov
and
cs
or
push
xchg
dec
sbb
xchg
push
jg
idiv
loop
and
and
lahf
hlt
mov
in
adc
xor
xor
inc
adc
aam
dec
inc
adc
sbb
push
jp
jmp
fwait
bound
fimul
mov
cmps
dec
and
inc
lds
add
js
aaa
ins
inc
adc
scas
inc
loop
addr16
jmp
push
fdivr
stos
int3
xchg
mov
jecxz
pop
adc
imul
into
(bad)
call
xor
(bad)
push
inc
inc
test
xor
stos
pop
add
mov
push
rcl
add
push
pop
cmps
dec
lock
or
out
or
jl
pop
xchg
not
inc
add
movs
mov
mov
push
shl
fimul
sub
in
mov
adc
and
scas
pushf
scas
icebp
sar
sbb
sti
ins
das
push
jns
mov
mov
cmp
cmp
xchg
sub
sub
cld
xchg
inc
je
mov
in
rcl
jge
xchg
and
jns
popf
enter
or
int
mov
ret
jb
or
and
icebp
xor
ret
mov
push
xchg
sbb
jo
or
cmp
sbb
xchg
loop
js
ja
mov
mov
xor
cmp
mov
cli
jo
dec
inc
rcl
stc
out
(bad)
fimul
mov
test
sub
ja
psubb
add
pop
or
mov
into
mov
mov
sbb
stos
lods
cwde
push
inc
loope
mov
xlat
inc
ja
push
push
ja
pop
mov
es
loop
pop
pop
mov
pop
or
dec
sbb
sar
or
mov
aam
adc
es
je
in
inc
xchg
lea
jle
data16
(bad)
cmp
cld
(bad)
int
icebp
gs
(bad)
cli
in
lock
test
pop
inc
mov
enter
dec
and
lea
mov
cmp
push
das
jle
xchg
loop
mov
jbe
js
mul
mov
sbb
leave
push
add
push
cmp
icebp
fistp
call
mov
cmp
mov
leave
aaa
or
sahf
pop
out
jp
pop
out
lods
out
or
pushf
aaa
mov
jg
mov
dec
ja
sbb
jge
adc
mov
mov
mov
clc
sub
pop
das
pop
aas
and
xchg
cwde
xchg
cld
mov
inc
sbb
push
xchg
dec
jge
xchg
add
add
shl
(bad)
push
std
mov
mov
sub
(bad)
mov
push
fwait
add
xchg
pop
xchg
enter
xchg
cmp
or
or
mov
mov
fsubrp
add
inc
pusha
inc
inc
push
cmp
mov
or
mov
arpl
sub
or
movs
adc
pop
lea
lahf
jo
imul
out
gs
inc
xor
aad
dec
jmp
mov
push
xor
mov
das
out
sti
movs
pop
xor
sbb
cld
dec
or
mov
or
sti
cmc
jl
retf
call
aaa
imul
fwait
ror
xor
int3
add
std
dec
pop
sti
adc
rol
inc
cvtps2pi
test
mov
test
pop
(bad)
push
push
mov
xchg
sbb
inc
lods
dec
adc
dec
dec
lods
scas
pop
cmp
jmp
pushw
pop
xlat
jne
movd
fsub
fs
cmp
jl
(bad)
das
mov
loope
ret
lock
push
ds
mov
sbb
lods
dec
leave
fimul
in
jmp
and
fimul
push
cmp
(bad)
mov
xor
ss
dec
and
pop
loope
aaa
mov
inc
mov
sbb
push
mov
add
jne
mov
(bad)
jle
push
lods
out
dec
adc
psllw
push
arpl
fmul
push
mov
sbb
xor
ds
sahf
push
or
int3
inc
retf
pushf
push
dec
movs
stos
sbb
test
(bad)
in
jecxz
sbb
(bad)
xchg
sbb
test
mov
push
push
mov
(bad)
dec
pop
repnz
icebp
xor
push
dec
jno
bnd
xchg
adc
add
es
nop
sbb
cdq
or
int3
stc
ins
xlat
sbb
leave
rcl
mov
cmp
test
or
mov
inc
sbb
push
adc
cmp
stc
dec
cmp
adc
pop
mov
sbb
out
sbb
ret
sub
mov
out
lods
cwde
adc
pop
cmp
jl
das
push
add
in
popf
mov
mov
fldenv
or
push
scas
sti
and
aam
out
stos
shl
mov
out
retf
sbb
bound
pop
jno
ds
xchg
push
sub
lds
jb
xchg
pop
mov
jb
aad
cmp
or
cdq
pop
and
mov
xor
dec
into
hlt
or
ds
in
and
movs
pop
adc
mov
xchg
xchg
pop
int3
fwait
lea
inc
xor
pop
mov
jnp
hlt
mov
test
movs
fdiv
cdq
scas
aas
int
dec
xor
inc
inc
pusha
mov
or
stos
outs
jnp
xor
aam
xor
ret
js
repz
data16
(bad)
fdivr
sub
sub
lods
lods
sub
push
sahf
into
xchg
bound
xlat
dec
add
dec
imul
pop
loope
adc
mov
aad
dec
xchg
inc
(bad)
test
movs
sub
or
test
popa
dec
xor
cs
xor
dec
inc
add
js
cmp
fwait
mov
pop
cmp
(bad)
mov
push
mov
int
aaa
clc
test
inc
xchg
or
or
out
ret
and
(bad)
pushf
xchg
int
jmp
les
pop
test
dec
mov
out
and
test
icebp
jo
xor
in
add
ret
das
loope
mov
xchg
fild
xchg
ins
adc
jmp
push
stos
test
popa
jmp
stc
inc
mov
fs
cmps
in
lahf
adc
mov
sbb
neg
mov
fmul
movs
sub
xor
repnz
xchg
or
jge
jle
arpl
repnz
mov
adc
push
sub
xchg
fs
jp
inc
add
imul
retf
mov
repnz
ret
(bad)
mov
adc
mov
ins
fsub
mov
or
pop
xor
xor
cdq
add
xchg
fsub
xchg
jnp
cs
mov
jb
fmul
cmp
arpl
mov
cdq
dec
repz
jo
dec
mov
stos
adc
lea
dec
fmul
jmp
std
(bad)
xchg
sbb
and
jne
add
adc
aad
adc
cmp
jecxz
pop
push
mov
jo
ds
pop
adc
mov
adc
mov
adc
inc
sbb
xchg
mov
push
push
imul
test
test
fstp
or
or
jo
lock
lds
push
test
or
jmp
and
imul
adc
leave
inc
sub
sbb
dec
cmps
loopne
dec
push
adc
out
inc
jb
mov
sbb
repnz
pop
js
adc
in
jno
pop
ror
adc
push
fiadd
pop
icebp
test
add
dec
push
sbb
xchg
inc
mov
hlt
std
jp
jo
aam
mov
push
jp
pop
shl
cmp
xor
mov
mov
add
lock
jle
mov
or
lods
vunpcklps
aad
pop
loope
sbb
outs
in
stos
push
aaa
push
fcomp
lahf
retf
dec
mov
pop
pop
xor
call
aad
and
aaa
cmp
lods
and
pop
stos
lahf
fcmove
sti
retf
adc
test
fs
ds
in
inc
pop
fstp
sub
clc
add
push
pop
ss
push
aam
adc
cwde
jo
jg
push
outs
push
jnp
data16
mov
cmp
in
adc
jecxz
jnp
or
mov
mov
(bad)
jnp
dec
pop
lds
and
inc
in
ror
jns
js
sbb
or
imul
pop
dec
fiadd
xchg
jp
bound
dec
or
cmps
lods
pop
or
data16
inc
and
jmp
sbb
out
sar
lahf
jo
vmaxsd
add
jb
sbb
sub
push
lods
or
(bad)
xchg
cmp
sub
push
jmp
scas
ret
push
cmps
stc
pop
mov
inc
mov
or
sub
popf
lods
lahf
sub
addr16
aas
mov
(bad)
sar
loopne
pusha
jle
pop
dec
fndisi(8087
mov
popa
mov
call
adc
shl
cdq
inc
test
(bad)
sbb
adc
xchg
out
push
aaa
sub
xor
loope
mov
push
jne
cmc
repz
mov
xchg
jp
jge
loop
gs
inc
ret
and
adc
fsub
jbe
adc
cmps
pop
stos
mov
call
inc
push
jne
xchg
stos
adc
mov
mov
mov
xchg
rcl
repnz
cli
jecxz
or
and
ja
pop
sub
shl
mov
cmp
pushf
movs
dec
addr16
mov
sub
ret
add
sub
aad
mov
adc
mov
dec
add
into
jl
fistp
addr16
mov
mov
(bad)
or
or
mov
aas
daa
add
jmp
and
iret
mov
sub
cmp
sub
pop
cli
stos
and
(bad)
int
inc
out
outs
sbb
or
vmulss
sub
(bad)
lods
in
mov
(bad)
rol
push
call
ins
shl
into
sub
dec
xchg
and
fldz
jnp
cmp
mov
pop
adc
sysret
mov
ins
cs
and
call
imul
in
xor
leave
vlddqu
push
(bad)
ja
xchg
out
cs
jl
push
mov
adc
js
cmp
call
retf
mov
xor
aaa
xor
and
pop
retf
mov
xchg
ja
out
inc
push
aas
mov
(bad)
movs
in
dec
cmp
arpl
fwait
loop
aam
cmp
cdq
js
mov
stc
push
dec
aas
sub
xchg
pop
fnstcw
in
xor
sbb
dec
fisubr
push
sbb
add
stos
jo
shr
cmp
ss
cwde
and
clc
sahf
jl
call
xchg
mov
xchg
out
ret
fsub
daa
arpl
pop
pushf
mov
pop
lock
sub
inc
out
lock
sbb
popf
popf
and
dec
retf
adc
mov
shl
(bad)
fcom
jbe
jge
std
cli
pusha
push
jmp
movs
jo
xchg
jno
retf
int
scas
mov
adc
test
call
call
jnp
pop
xor
sbb
mov
js
pushf
dec
nop
inc
fld
repz
mul
xchg
mov
or
mov
sub
and
addr16
jmp
dec
retf
leave
xor
pop
mov
popf
sub
jns
and
cmps
mov
dec
inc
stos
jns
mov
push
gs
(bad)
jno
xchg
mov
fs
mov
in
xor
add
mov
dec
inc
sub
xor
aas
rcr
xchg
add
push
jle
movs
retf
fst
hlt
xchg
dec
int3
cs
add
xchg
mov
sub
add
inc
push
and
push
test
xlat
aaa
inc
mov
jg
sbb
adc
mov
std
jge
pop
lock
icebp
addr16
xlat
xor
neg
adc
mov
inc
(bad)
and
rol
pop
xchg
and
movs
nop
add
les
or
mov
inc
shl
sbb
fstp
sbb
xchg
cdq
sbb
iret
jbe
lds
jo
mov
sbb
pop
add
fist
xor
xor
outs
jg
push
mov
call
sub
push
mov
and
jmp
call
mov
loop
cmc
inc
push
das
enter
cmp
add
lock
cmps
xor
loopne
sbb
ins
sbb
out
lods
adc
stos
mov
sub
ja
pusha
jno
scas
stos
add
sbb
cmp
retf
or
(bad)
sub
adc
and
(bad)
repz
mov
mov
repz
push
sub
mov
mov
push
pop
jo
fsubr
mov
adc
mov
(bad)
lods
fistp
jno
inc
xor
(bad)
mov
adc
jmp
add
cmps
fiadd
mov
jbe
mov
push
inc
sub
or
loopne
and
dec
test
imul
add
mov
ror
repz
mov
push
addr16
mov
push
mov
cmp
push
adc
ror
fdiv
retf
test
inc
lods
sub
addr16
mov
cmc
ror
lods
dec
xchg
xchg
pop
jle
les
scas
push
addr16
daa
and
retf
in
push
push
aad
mov
jne
jecxz
cdq
lahf
mov
sbb
in
(bad)
je
or
(bad)
push
push
push
test
scas
adc
adc
cmc
and
fs
xchg
pop
(bad)
mov
(bad)
cdq
mov
cmps
mov
and
dec
or
push
mov
inc
movs
sub
loope
sbb
or
mov
popf
(bad)
fwait
xchg
dec
fmulp
aam
pop
jmp
lea
dec
pop
ja
(bad)
daa
adc
mov
(bad)
fdivr
scas
cmp
sub
ret
(bad)
mov
daa
adc
xor
push
pusha
xor
mov
clts
jb
xor
adc
sub
loopne
push
call
es
cmc
sub
fdiv
mov
sub
xchg
mov
out
sub
cs
mov
sub
pushf
dec
mov
inc
in
loopne
in
and
mov
cld
popa
cli
rol
out
jne
inc
jmp
mov
or
test
fldenv
mov
sahf
int
fidivr
push
ss
in
jbe
sub
enter
in
inc
cmp
jmp
cmp
xor
jp
mov
add
das
rol
adc
push
adc
icebp
cmp
les
das
aaa
mov
out
pop
dec
stos
cmp
enter
adc
jae
mov
xchg
jnp
outs
jl
xor
mov
in
and
cmps
lods
pop
xlat
(bad)
jmp
or
std
push
movs
ins
outs
jno
push
add
aaa
dec
mov
push
pop
xor
xchg
jmp
mov
xchg
retf
xchg
arpl
inc
imul
sar
xor
jl
enter
cmp
sar
push
ss
stos
sub
ss
retf
daa
ss
(bad)
js
fdivr
pusha
je
or
adc
mov
mov
push
xchg
adc
lock
(bad)
jns
aam
jmp
add
mov
idiv
pusha
enter
and
and
cli
mov
and
jge
add
add
scas
daa
xchg
stc
call
ja
outs
in
xchg
xchg
jns
and
movs
pop
in
mov
mov
mov
pop
jnp
ror
dec
add
repz
push
mov
xchg
je
cmp
xlat
jo
jb
ins
jbe
xor
lds
push
in
jle
cld
cli
rcr
mov
sub
jl
sbb
fistp
xchg
fnop
pop
or
adc
dec
cwde
pop
jb
jle
push
les
jl
aaa
add
xchg
rcr
mov
setb
xchg
js
and
dec
call
ins
jns
inc
cmp
fimul
ins
or
mov
adc
lods
rcl
jae
cmp
jmp
inc
adc
cld
adc
inc
pop
mul
mov
mov
mov
mov
xchg
addr16
cwde
inc
or
push
shr
js
pusha
xchg
cdq
je
pop
or
pop
ficomp
dec
arpl
jl
int
jno
push
sahf
jno
enter
jns
pop
adc
popa
cmp
shl
xchg
sub
mov
in
imul
fistp
cmps
and
retf
mov
fsubr
mov
scas
or
or
cdq
lods
add
sub
test
out
cld
mov
rcl
imul
jle
mov
adc
in
cmp
or
push
mov
jmp
mov
sbb
mov
jle
fdivr
xor
arpl
test
icebp
jbe
shl
hlt
jecxz
vmulpd
mov
jnp
(bad)
aad
mov
sahf
mov
out
pop
sbb
das
scas
jmp
push
cdq
pop
jmp
(bad)
call
pop
stc
mov
dec
jae
inc
aaa
rcl
mov
enter
mov
pusha
or
sahf
out
or
or
jb
test
sub
xchg
inc
nop
cmps
push
xchg
mov
xor
movs
push
mov
jo
popf
inc
ins
pop
sbb
push
push
fld
aas
mov
add
cmp
popa
and
sub
gs
sub
cdq
lea
cmp
es
sbb
push
sar
or
push
cwde
repnz
test
cwde
push
aad
cli
out
outs
jl
call
dec
pop
inc
pop
push
mov
cs
mov
pop
into
mov
cdq
in
jb
or
std
jb
cmp
pop
das
inc
and
ja
inc
or
mov
imul
cmp
(bad)
popa
cld
xor
mov
ja
mov
stc
xchg
jmp
or
sbb
adc
test
inc
loopne
loop
repz
loop
loope
cmps
mov
push
cmp
les
xchg
repz
mov
jecxz
leave
scas
(bad)
fisttp
rcl
or
loope
sub
xor
cmp
int
loope
xor
leave
mov
retf
jge
call
mov
lock
mov
fwait
cli
cmps
adc
mov
ds
int
cmps
cs
(bad)
push
add
aad
ret
aad
sub
(bad)
in
das
lods
rol
add
test
pop
sbb
cmc
(bad)
and
pop
jnp
inc
push
or
xchg
pop
scas
sub
dec
iret
fist
daa
mov
imul
or
mov
inc
push
jl
mov
mov
jo
jecxz
pop
cmp
int3
push
sar
aas
ja
and
jnp
jo
pop
xchg
(bad)
(bad)
in
or
imul
xchg
mov
push
ror
cmp
mov
out
mov
adc
push
in
(bad)
xor
inc
out
cld
in
cmps
push
imul
hlt
mov
jp
xor
retf
test
ins
call
xchg
fldcw
mov
xor
pop
cmp
mov
xor
xchg
mov
mov
popf
mov
xlat
fst
jmp
leave
out
cs
inc
iret
aad
(bad)
movs
push
dec
dec
ins
pop
sub
dec
cmp
(bad)
movs
sbb
sub
sbb
pop
jmp
lods
hlt
sbb
lds
in
std
inc
nop
(bad)
int
xchg
hlt
mov
inc
popa
push
jg
cmp
sbb
xchg
sbb
and
inc
lds
mov
mov
jl
cs
int3
jne
inc
dec
and
pushf
xor
addr16
dec
js
jecxz
mov
(bad)
sub
sbb
adc
mul
pop
lods
sub
stc
fwait
mov
stos
mov
sub
loopne
scas
out
pop
mov
push
in
sti
sbb
dec
xlat
(bad)
mov
test
sub
ror
xchg
pop
push
std
ficomp
movs
or
sub
mov
cs
out
pop
aam
and
sub
retf
jmp
movs
dec
sahf
add
test
into
jns
and
rcr
in
stc
jo
aaa
jle
lahf
or
push
call
in
mov
cmp
mov
(bad)
aam
jmp
out
inc
out
mov
and
mov
daa
ins
call
mov
and
cmp
icebp
retf
mov
dec
dec
rol
or
cmp
xchg
pop
and
jae
popa
mov
rcr
or
and
mov
sub
jo
sub
mul
push
popf
lea
push
dec
adc
repz
cmp
add
or
arpl
ret
xor
inc
popf
cmp
mov
adc
and
jae
inc
sub
lds
pop
pop
das
add
push
xchg
sti
loopne
dec
icebp
rol
loop
dec
movs
pop
fisub
and
stos
mov
sbb
sbb
lea
shr
jmp
jae
rcr
mov
popf
xor
dec
add
mov
pop
add
gs
nop
mov
pop
mov
shr
xchg
sub
or
and
cmc
(bad)
test
sub
cmc
(bad)
retf
lock
xor
add
in
into
inc
(bad)
aad
loop
cli
bound
int3
add
adc
jmp
imul
dec
xchg
cmp
pop
in
xchg
lahf
scas
shl
pop
ficom
aam
lea
pop
ss
daa
ins
or
push
sbb
mov
out
in
ins
(bad)
push
cwde
fisttp
and
sub
sbb
mov
sbb
imul
adc
push
cmp
das
lods
fdiv
test
add
or
jae
jle
sbb
test
inc
cmp
adc
jne
and
jle
je
cmp
shl
xchg
into
or
sti
es
add
xor
mov
out
sbb
dec
std
aas
ret
sub
movs
out
ffreep
and
lahf
pop
xlat
jecxz
pop
clc
daa
push
jmp
push
xchg
dec
xchg
add
dec
sbb
in
cmp
jae
int
popf
ins
xchg
stc
jl
dec
push
or
(bad)
adc
xor
es
sbb
inc
sar
adc
pop
push
sbb
mov
scas
scas
pop
out
or
(bad)
rol
xchg
test
out
arpl
add
pop
or
je
xchg
scas
sbb
loop
outs
and
mov
add
popf
mov
or
cmps
les
cdq
ins
rcr
pushw
dec
ins
add
jecxz
sbb
sbb
aam
cmp
inc
fwait
mov
push
in
movs
mov
and
inc
add
icebp
dec
pop
push
push
push
add
xlat
pusha
inc
or
out
sahf
jb
retf
in
mov
(bad)
out
mov
mov
fidivr
xlat
jmp
aam
xor
push
lods
xor
lahf
jecxz
dec
scas
jmp
sbb
or
sti
sub
push
dec
push
jno
mov
xor
add
rcr
add
adc
imul
aaa
shr
(bad)
pop
xor
out
pop
ds
xlat
in
loopne
pop
movs
frstor
and
sub
push
icebp
stos
mov
pop
xlat
rcl
fs
sub
repz
sti
inc
(bad)
xchg
cmp
daa
push
out
(bad)
xchg
out
inc
jnp
mov
xchg
pushf
adc
jno
imul
dec
fisttp
jg
add
inc
jbe
mov
mov
sbb
push
and
xor
adc
or
fsubr
inc
and
dec
push
mov
mov
pop
dec
inc
jb
mov
add
mov
out
or
out
in
cld
imul
cmp
out
mov
sub
ret
aam
pusha
xchg
dec
cld
sub
or
(bad)
hlt
jne
jno
or
retf
mov
outs
mov
add
mov
hlt
int3
nop
div
clc
cwde
add
(bad)
loope
jae
stos
sub
(bad)
push
cmps
mov
cmc
cmc
les
(bad)
fisttp
cli
push
hlt
sbb
dec
lock
outs
imul
sar
je
loopne
jmp
arpl
push
xchg
aam
aas
adc
stos
mov
mov
cmps
retf
test
mov
(bad)
icebp
arpl
ds
stos
push
mov
nop
mov
dec
test
sub
pop
push
pusha
out
imul
cmps
loope
fwait
push
outs
inc
inc
jne
jo
std
lods
sti
call
dec
loop
and
js
daa
icebp
cmp
out
int
iret
dec
lods
cli
retf
sub
add
or
xor
pop
fs
jge
ins
bound
mov
or
out
fcomp
jmp
sar
mov
sub
sbb
mov
in
xchg
pop
mov
xor
popa
inc
or
mov
sub
leave
test
push
sub
mov
jno
dec
lock
pushf
mov
repz
add
outs
mov
xchg
jmp
repz
aam
shl
popf
xchg
push
rcr
nop
inc
jmp
push
push
pop
aaa
xchg
add
pop
outs
rcl
mov
movs
in
mov
sar
sub
xor
call
inc
mov
sbb
ja
mov
sar
push
push
push
sub
lock
lea
inc
xor
xchg
pusha
cmps
shl
or
or
mov
scas
icebp
loopne
enter
adc
pop
jge
invd
jbe
jno
loopne
mov
jp
mov
cmc
out
outs
xchg
sbb
mov
sub
stc
push
(bad)
push
stos
jns
std
pop
cmp
stos
or
iret
test
bound
xchg
inc
ss
mov
xor
add
push
pop
dec
(bad)
bound
fbstp
test
sub
shr
inc
je
aam
mov
xor
imul
sub
xchg
or
je
ret
and
fwait
mov
out
stos
sahf
inc
cmp
mov
inc
or
push
jmp
and
jbe
mov
xchg
dec
mov
inc
pop
inc
or
cmp
mov
cmp
inc
pop
inc
je
xor
push
repnz
jge
xor
and
and
adc
cs
cmp
retf
jle
and
sbb
loopne
push
jmp
push
mov
cwde
mov
clc
add
and
xchg
cmp
mov
pop
add
add
sub
mov
cmp
jge
mov
jmp
sbb
mov
pop
push
jp
adc
je
sbb
jb
mov
dec
outs
int3
imul
dec
xor
jnp
nop
int3
sub
loop
xor
push
push
nop
mov
inc
cmc
scas
fcom
(bad)
mov
sub
call
mov
(bad)
push
pusha
fs
cmp
dec
adc
xlat
(bad)
rcl
es
dec
test
adc
jo
in
mov
(bad)
gs
test
inc
fiadd
js
aas
(bad)
dec
hlt
call
lods
and
sub
mov
push
pop
jge
int
test
jnp
loope
and
sub
push
dec
outs
cwde
xor
retf
test
mov
inc
cmp
xor
mov
and
sbb
cmp
mov
mov
fwait
inc
fsub
inc
pop
dec
push
mov
std
jmp
or
push
fidivr
out
test
or
sub
jo
(bad)
stc
inc
xor
cmp
adc
mov
fsub
scas
sbb
push
outs
in
inc
out
call
ret
sbb
cmps
movs
test
mov
jne
xchg
inc
ror
mov
iret
pop
adc
out
push
shl
push
ja
shr
sub
fcmovnb
rol
push
or
adc
mov
repnz
push
(bad)
aaa
data16
stc
mov
inc
pop
mov
sub
jecxz
cmp
mov
shl
mov
dec
xchg
sbb
add
shl
xchg
shr
aas
pop
outs
or
nop
pop
fwait
add
sbb
ret
add
mov
pminsw
sbb
cli
mov
gs
sar
mov
fdiv
movs
cmp
sub
lds
call
jmp
push
and
enter
ja
jmp
cmc
out
jmp
lea
mov
and
(bad)
pop
ret
push
mov
add
movs
push
xchg
pop
cmps
imul
jecxz
les
xor
shl
sbb
push
(bad)
clc
lds
test
or
push
jmp
loop
mov
test
rcl
in
jae
sbb
aad
lock
push
jmp
ds
dec
mov
adc
ja
mov
push
outs
cld
or
ja
retf
inc
rol
into
xor
dec
ret
push
add
push
in
test
or
ins
ret
cmp
lds
jge
je
movs
push
add
ins
jno
cmps
push
mov
xchg
test
xchg
stos
out
bswap
xchg
js
(bad)
aam
aaa
sub
and
push
pop
sbb
cwde
push
mov
out
adc
dec
(bad)
iret
and
imul
mov
rcl
popf
movs
push
mov
das
imul
pop
call
push
push
or
fist
arpl
scas
in
push
mov
jbe
jmp
add
imul
imul
dec
inc
push
push
(bad)
cdq
xchg
call
pop
repnz
xchg
xchg
jmp
sbb
ds
mov
pushf
in
xchg
outs
pop
cmc
or
and
pushf
cmp
xchg
cli
cld
sbb
and
jnp
pop
jmp
scas
outs
lahf
and
fdiv
dec
inc
xchg
or
sbb
and
push
push
inc
call
inc
jl
or
cmps
mov
xchg
ins
xchg
and
or
jle
lahf
push
inc
sahf
push
inc
cmp
xchg
ds
loop
add
loope
rcr
mov
fldcw
inc
movs
mov
clc
jne
mov
inc
mul
mov
sbb
dec
jo
add
sub
repnz
add
sti
push
dec
js
adc
stos
mov
cmp
jl
retf
sub
shl
fwait
stos
mov
inc
repnz
stos
movs
jno
mov
repnz
jae
leave
or
push
movs
mov
jge
into
sbb
cmp
jnp
inc
mov
iret
dec
fdiv
clc
dec
mov
jmp
jbe
nop
int3
fistp
add
cmc
jmp
mov
call
cmp
jge
rol
and
or
cmps
adc
jns
xchg
fsubr
fdivr
in
adc
(bad)
shl
jge
xor
lods
retf
jge
mov
push
sbb
mov
push
mov
xor
ja
mov
retf
icebp
stc
loope
mov
hlt
popa
inc
or
xor
xchg
les
mov
xchg
mov
xor
es
xor
push
outs
push
sub
adc
into
jmp
xchg
daa
mov
inc
std
cmp
inc
dec
hlt
sbb
mov
ss
cmp
pop
ss
jne
js
push
adc
in
arpl
push
sar
(bad)
xchg
pushf
inc
(bad)
jge
mov
cmp
es
and
test
cdq
jecxz
jge
bound
test
fdivr
int
xor
scas
inc
ds
inc
xor
pusha
dec
enter
add
jge
sti
inc
(bad)
je
cmps
mov
cli
fcom
mov
add
sub
hlt
iret
xchg
xlat
add
outs
jecxz
adc
mov
addr16
popa
pop
loope
cmp
shl
adc
pop
mov
les
ror
mov
into
mul
push
retf
repnz
ror
and
dec
lods
inc
add
test
test
inc
mov
rcr
std
jge
add
loop
fucom
lahf
dec
adc
push
sbb
sbb
push
fsub
xor
vmovq
fld
add
add
add
and
call
pop
xor
mov
xor
cmc
jae
mov
xor
mov
(bad)
dec
jg
mov
jge
adc
mov
and
(bad)
nop
mov
dec
in
cmp
pop
push
sub
ins
nop
jbe
xchg
xchg
mov
xchg
dec
adc
pop
aaa
dec
ret
pusha
ret
sbb
lods
popa
sbb
scas
ins
adc
lods
mov
icebp
lock
dec
int3
dec
retf
lock
pmulhuw
add
lgs
int3
fwait
test
enter
jb
(bad)
leave
(bad)
je
xchg
xchg
cmp
addr16
push
adc
dec
or
and
inc
mov
mov
movs
les
fist
shl
scas
repz
and
cmp
dec
mov
shl
push
call
dec
push
nop
popf
and
sbb
rcl
fisubr
add
mov
outs
push
fmul
rcl
(bad)
fcomp
sti
cld
xchg
rol
fbld
mov
ds
out
xor
pop
movs
jmp
xor
mov
jae
sub
mov
dec
out
ins
adc
out
sbb
jmp
pop
nop
mov
ins
jecxz
neg
ins
imul
mov
fmul
push
(bad)
push
(bad)
mov
xchg
addr16
sub
daa
cwde
lock
loop
inc
and
(bad)
jno
pop
mov
ds
mov
jecxz
sahf
sbb
xor
jo
dec
out
test
nop
sti
in
cmp
test
test
add
xchg
sub
adc
cs
cmps
dec
push
and
cmp
sub
retf
mov
out
cmp
call
test
les
sub
xor
movs
sub
aaa
dec
ja
sub
in
cs
mov
fs
sbb
ins
and
(bad)
sub
arpl
aad
fisub
out
cmp
pop
xchg
fbstp
rol
xor
sbb
sub
ss
fs
scas
je
add
sbb
shr
add
mov
(bad)
and
inc
fsubr
out
xor
dec
mov
mov
cmp
in
cmc
xchg
jnp
ret
dec
xchg
jnp
pop
sar
inc
iret
data16
inc
adc
cmp
push
retf
dec
shl
and
inc
cld
jae
pushf
scas
dec
sti
jns
pop
out
jmp
push
arpl
rcr
add
and
scas
or
rcr
shl
add
aaa
ins
jne
repz
xor
and
out
mov
or
sti
xlat
mov
sub
mov
jne
xor
push
fsubr
mov
xchg
loope
lods
rol
loope
sar
cmp
dec
cli
popa
sbb
stos
enter
jmp
call
push
cdq
push
adc
stc
add
push
inc
popa
ins
daa
rol
sub
and
mov
je
es
sub
jmp
push
lds
test
adc
dec
jne
cmp
stc
inc
(bad)
std
fadd
pop
dec
mov
out
int3
lahf
xor
xchg
lahf
cdq
inc
adc
pop
xchg
jae
je
cmps
(bad)
enter
push
mov
in
leave
int
in
rol
cwde
jp
jg
adc
cmp
xor
mov
fist
and
fistp
sub
sar
sub
sbb
xor
mov
loop
das
fldenv
retf
add
es
ins
and
push
int3
push
scas
movs
and
jge
adc
(bad)
xor
lds
mov
retf
cs
fadd
lock
jmp
mov
adc
jmp
jmp
ret
and
ficom
mov
pop
sbb
mov
psubb
iret
cli
pop
adc
repz
push
jno
pop
jne
inc
ds
inc
mov
dec
inc
mov
stc
movs
jmp
fstp
in
push
icebp
jl
push
push
and
sbb
and
cli
inc
mov
and
movs
xchg
push
and
jg
adc
imul
jle
mov
sbb
inc
push
outs
es
outs
jns
or
sub
icebp
je
(bad)
imul
add
loope
and
mov
and
adc
lods
(bad)
dec
in
dec
rcr
retf
xchg
int3
clc
pop
pop
shl
imul
out
push
mov
pop
mov
inc
mov
mov
lahf
add
sahf
stos
xor
inc
rcr
push
xlat
repnz
repnz
inc
sbb
xchg
pop
adc
push
or
cli
adc
sbb
and
xchg
jmp
test
push
sbb
mov
shl
sub
test
sub
jae
push
mov
sahf
pusha
mov
stos
mov
push
rol
(bad)
xchg
fsubr
sub
repz
pop
cmc
add
pushf
jmp
dec
xlat
mov
enter
cli
loop
or
(bad)
sahf
mov
stc
jo
and
pop
cdq
cmp
out
(bad)
out
pop
(bad)
(bad)
jl
clc
(bad)
cli
stos
addr16
mov
movs
or
arpl
cwde
mov
pop
data16
popf
rol
xor
or
lods
enter
dec
scas
sub
mov
mov
sub
xor
push
icebp
xchg
add
push
cmc
push
dec
popf
dec
gs
stos
ins
adc
add
call
jne
imul
mov
push
mov
ret
dec
sbb
sub
aam
mov
mov
test
daa
sub
addr16
or
sbb
lock
arpl
inc
fdivr
sub
rcr
ret
stos
jno
stc
frstor
mov
outs
adc
adc
lahf
push
into
out
xchg
out
mov
out
or
imul
das
outs
aaa
mov
jp
int
loope
mov
(bad)
pop
pop
cmps
scas
xlat
inc
arpl
addr16
scas
data16
into
dec
bound
push
mov
call
jne
adc
cmp
and
ins
sbb
mov
rol
out
mov
xchg
and
sbb
cmc
lods
call
or
repnz
ret
push
(bad)
jecxz
sbb
xchg
dec
adc
shr
fyl2xp1
iret
out
mov
or
push
jmp
jns
mov
and
sar
dec
pop
(bad)
xchg
sbb
push
mov
jmp
pop
icebp
mov
jne
out
and
jb
jecxz
push
outs
push
fcom
xchg
loope
inc
jns
fcom
outs
scas
retf
inc
arpl
adc
mov
inc
ins
inc
mov
lahf
test
jp
imul
enter
lea
retf
add
(bad)
mov
and
dec
ficomp
xor
fist
shl
mov
dec
mov
imul
mov
sahf
js
call
add
sbb
lods
xor
sbb
test
sub
push
adc
xor
in
pop
mov
inc
mov
stos
mov
xor
or
dec
outs
adc
sub
jnp
aas
mov
loope
push
fstp
push
mov
mov
pop
cwde
mov
in
jmp
adc
data16
(bad)
mov
lea
punpckhdq
mov
out
add
scas
push
imul
and
cmps
sahf
rol
sti
push
push
and
push
and
push
mov
outs
lods
lea
sbb
add
or
sub
xor
push
and
or
xlat
push
retf
pop
mov
inc
mov
cli
lds
push
sbb
data16
jno
mov
mov
xchg
sbb
aas
jp
pop
fsub
mov
pusha
jle
dec
inc
scas
les
lods
inc
xchg
iret
mov
sar
push
and
arpl
sahf
mov
cmp
mul
scas
rcl
das
mov
ins
imul
ins
cld
xchg
pusha
xor
das
(bad)
cmp
and
inc
push
xchg
fst
xor
mov
adc
test
mov
rcr
jbe
mov
add
jne
inc
jo
sub
cmp
in
mov
out
addr16
push
add
std
fild
js
jb
retf
push
dec
xor
dec
loope
retf
xchg
pusha
jnp
inc
into
popa
pop
shl
pop
add
adc
fst
repz
jmp
mov
sahf
add
out
popf
sahf
inc
rcr
adc
jbe
mov
inc
push
push
div
sbb
mov
pop
ss
mov
int3
rcr
cmp
clc
shr
mov
xchg
dec
inc
jge
sbb
imul
in
sti
pop
fwait
cmp
addr16
retf
nop
adc
cmp
or
out
int
jne
das
aad
jne
nop
mov
lds
cmc
dec
lahf
ins
push
enter
fldenv
(bad)
jo
push
cmps
xchg
lea
mov
dec
(bad)
dec
cmp
jo
les
(bad)
not
test
push
sub
pusha
push
scas
pop
je
and
and
imul
xchg
fucomp
inc
add
sbb
pop
addr16
pop
mov
hlt
pushf
mov
fcomp
pop
add
mov
mov
push
cmp
lds
(bad)
(bad)
call
fiadd
mov
xchg
or
and
mov
dec
pop
jl
gs
and
cli
sbb
push
int3
inc
lds
xchg
call
inc
call
adc
cdq
xor
cmp
loopne
(bad)
call
lods
push
repz
pop
inc
iret
cwde
mov
mov
push
pop
fcmovnbe
xchg
and
jo
jmp
pop
cli
adc
test
xor
push
adc
push
mov
(bad)
sbb
int
mov
test
and
js
jmp
rcl
and
aas
test
pop
mov
pop
mov
(bad)
scas
sub
jne
dec
fsubr
mov
rcr
sti
cmc
icebp
aad
mov
(bad)
int3
push
sub
add
push
push
sbb
xor
push
fmul
movs
dec
fild
cmp
mov
inc
or
push
aas
xchg
push
jg
retf
or
xchg
jge
pop
popa
(bad)
loop
sub
sbb
jae
jnp
shl
xchg
ss
cli
loopne
movs
js
cmc
div
int
out
ret
int
inc
retf
test
leave
movs
push
loop
les
dec
cs
dec
jmp
fild
aaa
push
jbe
push
push
sub
scas
jmp
dec
adc
jmp
mov
xor
xchg
cmp
xor
mov
stc
pop
jg
movntps
xchg
into
(bad)
icebp
jns
ins
adc
and
cmps
sbb
out
sub
and
neg
ret
push
movs
sub
push
ja
aad
dec
ja
aas
int3
fwait
pop
nop
ror
jnp
xchg
clc
xchg
cmp
inc
inc
sbb
call
in
mov
mov
aad
adc
xor
xchg
and
popa
xchg
jbe
lahf
(bad)
ds
xchg
push
fldcw
(bad)
call
cmp
jge
mov
inc
jnp
jle
xchg
cmc
xor
mov
fisub
push
cwde
(bad)
js
xlat
mov
jmp
sahf
mov
cdq
loope
(bad)
fcmovnbe
bnd
dec
push
jne
(bad)
adc
retf
xchg
inc
add
popa
bound
sti
fwait
push
push
lock
ins
cmps
jb
rep
dec
add
mov
mov
mov
xor
sbb
sbb
mov
stc
mov
xor
outs
sub
aam
sub
push
mov
fs
clc
shl
inc
fisub
inc
push
xchg
push
fwait
(bad)
push
sub
mov
or
pop
mov
ror
pop
jg
adc
jg
loopne
cdq
add
push
xor
not
adc
adc
jmp
push
div
jp
in
in
test
sbb
cmp
dec
loopne
and
cmp
and
lea
pop
(bad)
out
mov
test
fld
sbb
fimul
mov
jg
push
jno
test
into
(bad)
cmc
cld
sub
into
dec
(bad)
mov
fisubr
mov
clc
or
xor
rol
cmps
or
cmps
dec
mov
pop
sub
pop
add
push
pop
inc
scas
jp
sbb
mov
dec
cs
stc
loop
enter
inc
shr
mov
mov
push
rol
mul
fldcw
xchg
xchg
call
sub
out
es
addr16
xor
imul
mov
fwait
iret
add
dec
es
pop
sub
jns
adc
call
push
(bad)
sub
loope
out
push
jp
mov
or
in
aas
sbb
cld
lods
sbb
test
loop
call
xchg
retf
out
push
stc
push
daa
jno
xor
or
mov
outs
outs
movs
sub
sar
xor
dec
fstp
shl
test
push
test
jnp
jne
inc
mov
cmps
pop
add
inc
dec
aad
cmp
popa
sbb
fistp
xor
dec
sbb
rcl
(bad)
pop
stos
and
cmps
or
imul
addr16
in
adc
movs
sub
add
loope
scas
(bad)
into
xchg
inc
adc
inc
adc
rol
das
popa
push
fiadd
ins
inc
jnp
inc
jecxz
mov
xchg
or
(bad)
(bad)
(bad)
cmp
inc
add
popa
and
inc
lahf
mov
out
inc
mov
(bad)
add
pop
lods
(bad)
mov
loopne
aas
push
push
mov
lods
adc
rcl
jg
cmc
fdivp
add
pop
cwde
pushf
ins
mov
mov
retf
(bad)
rol
dec
in
push
cmp
mov
xor
ret
into
adc
rcr
push
imul
pop
sub
mov
adc
xchg
push
hlt
std
inc
fs
imul
adc
(bad)
jne
push
jmp
inc
ins
cli
jno
xor
jp
jns
test
mov
lods
ret
addr16
inc
popa
adc
push
iret
and
jne
outs
das
jae
pop
cmp
jne
sar
ror
repnz
push
push
div
dec
lods
aas
adc
push
sbb
jno
mov
jge
mov
nop
jmp
pop
add
mov
mov
xor
mov
jne
clc
xchg
cld
scas
mov
or
enter
or
mov
lods
fild
push
(bad)
in
inc
movs
pop
dec
push
mov
xchg
cdq
mov
add
dec
adc
dec
(bad)
hlt
adc
dec
repnz
pop
das
imul
cmp
add
popa
sbb
leave
test
xor
into
call
xlat
pop
push
fdiv
fs
daa
dec
adc
imul
movs
xchg
pop
push
mov
and
xlat
mov
(bad)
sti
xor
inc
pop
add
icebp
ror
aam
repz
fist
or
cdq
xor
retf
stos
neg
mov
dec
packuswb
pop
mov
adc
aaa
dec
repnz
xchg
jle
sahf
sbb
in
pop
or
rcl
jns
mov
fsubr
addr16
cmp
pop
adc
pop
mov
push
icebp
stos
push
mov
sbb
loop
or
lock
(bad)
sub
adc
mov
jmp
adc
cmps
xor
scas
add
pop
aaa
in
mov
jns
fisttp
(bad)
push
jle
and
aad
call
cmp
mov
jl
sbb
or
adc
fisttp
push
mov
xor
into
out
adc
mov
mov
or
retf
inc
jno
xlat
push
push
or
scas
mov
cmp
mov
pop
push
iret
(bad)
inc
jne
add
xchg
push
adc
rcr
movs
mov
out
jo
loop
loop
jmp
mov
push
mov
mov
add
cli
push
popa
(bad)
(bad)
aam
and
push
imul
xor
or
xor
sub
and
jne
div
into
fcomi
xor
rcr
push
fcom
ret
lods
pop
stc
or
xlat
sub
ror
jne
push
add
jmp
xchg
(bad)
pop
test
inc
fnstenv
sbb
pop
je
lahf
xchg
ret
nop
movs
cmps
lock
xor
mov
xchg
bound
loope
sbb
mov
xchg
cmp
push
lea
pop
div
pop
mov
cmp
ret
inc
and
cld
adc
cwde
jecxz
call
mov
mov
addr16
jle
xchg
sub
adc
add
das
dec
or
mov
inc
bound
popa
mov
mov
mov
dec
(bad)
ins
out
int3
repz
repnz
and
gs
out
cmp
in
call
dec
lds
mov
out
lock
jo
mov
fstp
enter
push
sbb
push
cdq
push
lock
stos
jb
push
ret
and
dec
sub
retf
cmp
mov
int
nop
pop
shl
mov
lea
pop
ds
push
pop
push
stos
icebp
outs
mov
jae
cmps
div
adc
pop
mov
xor
push
hlt
pop
test
jnp
jb
mov
lahf
data16
retf
xchg
ja
or
dec
pop
cmp
dec
mov
mov
xchg
test
(bad)
sbb
fisttp
jecxz
push
mov
addr16
adc
cmc
lods
jge
sbb
mov
push
movs
psubusw
(bad)
(bad)
stos
ja
cs
pop
or
or
popa
or
pop
push
loope
xchg
cld
mov
push
pop
leave
xchg
int
mov
fcomp
repz
fwait
add
mov
pop
sti
jbe
stos
sahf
pop
stc
dec
or
jnp
push
jo
sti
xor
mov
push
inc
and
aaa
sbb
leave
cmps
js
sbb
xor
mov
pop
adc
pop
ins
jo
xor
sbb
iret
cmp
stc
xchg
out
je
sbb
sub
imul
repz
xor
inc
movs
rcl
test
arpl
pop
movs
cmp
es
mov
adc
loop
das
add
jmp
loope
cdq
out
in
out
jg
and
jmp
aad
fidiv
(bad)
or
mov
cmps
and
out
shl
mov
enter
bound
outs
jg
aam
lea
cmc
cmp
shl
lock
ds
xlat
adc
sub
gs
cmp
cmps
jb
dec
jo
and
sar
push
mov
pop
inc
movs
pop
shr
pop
rcl
cli
(bad)
mov
inc
pop
jmp
push
mov
or
push
sub
and
xor
mov
nop
fmul
add
dec
in
fcmovu
mov
hlt
jmp
aas
stc
jo
mov
nop
mov
repz
iret
outs
loop
cli
loop
stos
(bad)
in
test
push
stc
fwait
xor
aad
mov
xor
fsubr
mov
fcom
sub
xor
nop
gs
into
lock
mov
aaa
mov
jmp
dec
jo
mov
mov
xchg
popa
cmp
and
mov
sti
(bad)
inc
in
aaa
push
stos
pusha
loop
mov
inc
popf
popa
inc
inc
out
sbb
push
lds
sub
sbb
imul
add
mov
rcl
ins
jnp
jb
outs
call
sbb
ficomp
push
jmp
jmp
or
add
into
xor
push
lods
adc
imul
mov
dec
mov
(bad)
daa
test
jg
inc
jnp
ss
adc
push
sbb
cmc
mov
mov
outs
mov
sahf
fdivp
(bad)
adc
mov
jbe
shl
fs
or
push
rcl
rep
sub
call
mov
aaa
sub
call
js
pop
jne
jmp
inc
cs
xchg
dec
retf
lahf
aad
cmps
cs
adc
cmc
lea
call
and
add
ins
push
xor
shl
in
inc
fs
ja
add
loope
adc
lock
mul
cwde
out
jbe
stc
sub
and
pop
mov
sbb
jl
pop
dec
pop
rol
inc
jns
(bad)
retf
fistp
xchg
mov
test
mov
sbb
inc
test
and
mov
lock
mov
sar
pop
mov
push
jno
cmp
sbb
push
fdivr
ins
jecxz
inc
jecxz
dec
inc
frstor
mov
outs
fsubr
stos
and
push
add
sbb
xchg
gs
scas
cwde
mov
rol
in
sbb
cmp
adc
lods
int
fnstenv
xor
rcl
ficom
dec
lahf
out
fcom
loope
(bad)
fild
cmc
out
mov
cmp
ss
ds
inc
cmp
retf
mov
outs
jmp
jmp
mov
lahf
sbb
jo
and
test
mov
mov
inc
sbb
into
xlat
sub
sbb
mov
popa
cmp
xor
xor
js
adc
or
add
call
dec
and
dec
mov
jmp
lahf
pop
mov
jmp
inc
lock
sti
sub
dec
lods
icebp
aas
clc
jne
les
dec
fldenv
adc
fs
inc
shl
xchg
and
mov
icebp
mov
xchg
mov
mov
bnd
mov
fidiv
stos
adc
(bad)
or
out
jns
bound
test
mov
inc
cmp
enter
mov
mov
mov
in
ins
cmps
popa
cmp
push
mov
fnstcw
in
jp
pop
mov
fadd
and
ret
add
(bad)
and
enter
daa
cmps
vunpckhps
jmp
sbb
shr
add
addr16
mov
call
push
xchg
in
xor
das
mov
xor
sub
out
mov
xchg
outs
xabort
hlt
xchg
xor
clc
ss
iret
mov
add
aaa
out
push
(bad)
inc
imul
xchg
push
xor
sti
add
jp
fcmovbe
lock
add
clc
dec
xchg
rcl
out
pushf
(bad)
mov
fidivr
pop
int3
enter
dec
imul
dec
xchg
push
rol
imul
add
xchg
test
mov
rcr
sti
mov
imul
fcmovnbe
(bad)
je
pop
jmp
fisttp
ror
stos
cdq
pushf
sbb
popf
sti
jae
xchg
mov
push
xlat
movs
cmp
sub
and
imul
cwde
and
pop
jmp
xor
sar
inc
adc
dec
(bad)
mov
mov
lock
aad
push
xchg
mov
mov
and
in
xchg
mov
lods
cmc
fcom
xchg
mov
xor
and
xchg
dec
imul
mov
ss
jns
jns
imul
adc
imul
xor
rcl
pop
mov
jge
repnz
jmp
(bad)
cmp
in
mov
mov
adc
lock
xchg
push
dec
(bad)
dec
punpckhdq
lahf
rol
call
ss
rcr
cmps
mov
mov
sbb
test
xor
pop
jecxz
sbb
adc
(bad)
rcr
mov
push
iret
out
jmp
xchg
popa
push
add
xchg
and
pop
add
add
mov
push
and
push
inc
xor
mov
sbb
jno
xchg
pop
xor
pusha
repnz
adc
mov
ins
popa
shr
clc
add
xlat
adc
out
mov
aad
movs
iret
pop
icebp
test
jb
inc
(bad)
xor
and
push
push
aam
xchg
wrmsr
out
je
and
jmp
clc
xor
mov
popa
xor
cmps
imul
shr
movs
in
leave
jecxz
cmp
test
inc
pop
jnp
add
(bad)
stc
cdq
push
sbb
adc
addr16
scas
cmp
stc
sahf
bnd
xchg
bound
repz
inc
addr16
add
jecxz
inc
inc
std
push
mov
jmp
jmp
imul
dec
xchg
sar
test
idiv
mov
xchg
ror
neg
jp
push
add
fstp
cmp
sar
call
retf
fst
jmp
addr16
push
imul
inc
and
inc
adc
dec
sub
sub
popf
add
movs
adc
test
pop
gs
ret
push
jp
call
(bad)
aad
outs
mov
pop
sbb
mov
stos
add
ins
sbb
stos
mov
ds
adc
ins
lods
sbb
stc
xchg
push
(bad)
js
xlat
ret
out
xor
sub
stc
in
outs
push
out
in
ins
sbb
xor
imul
jno
push
push
daa
ja
pop
outs
test
or
jbe
fst
test
lahf
inc
sub
nop
mov
test
push
xchg
push
push
cmp
dec
pusha
sub
aam
call
gs
xor
imul
push
enter
(bad)
and
not
cmp
(bad)
sub
dec
fild
sbb
scas
fidivr
ror
cmp
xor
std
jne
retf
xchg
fsubr
ror
(bad)
jle
or
mov
shr
mov
sub
adc
mov
(bad)
cmps
paddq
dec
lea
pop
push
aas
repz
jnp
rol
enter
not
jno
sub
sahf
and
out
push
xchg
and
call
mov
movs
push
in
ins
icebp
xchg
jmp
mov
mov
sti
adc
sbb
push
mov
cmp
sbb
inc
leave
pop
xlat
aad
cdq
ins
add
aas
cmps
or
xchg
or
mov
retf
pop
cmc
push
shl
and
jbe
mov
ss
fidivr
in
xchg
dec
retf
shr
fimul
fsubp
loope
xchg
sbb
pop
cwde
pop
cmp
or
sub
push
retf
pop
jnp
mov
test
sbb
jl
or
and
jle
sub
arpl
cmp
dec
xor
stc
lods
sbb
imul
xor
mov
push
jno
jmp
sti
aad
cmp
cdq
(bad)
xor
jle
sahf
mov
add
xor
sbb
into
cld
jae
sub
pop
xchg
jmp
push
push
add
shl
in
loop
sbb
(bad)
inc
mov
ins
adc
stos
pop
lea
in
fcomp
xor
ja
outs
or
fwait
dec
xor
out
and
(bad)
sub
sbb
lock
jae
push
mov
cwde
addr16
int3
scas
jae
test
addr16
pop
es
cmp
mov
out
hlt
or
jns
mov
add
hlt
sahf
pop
add
dec
daa
xor
sar
fadd
cld
mov
jge
xchg
dec
clc
fld
sbb
or
rol
fadd
sbb
dec
xchg
ret
add
jns
cmps
jno
cld
dec
pusha
test
rol
iret
mov
xor
inc
mov
mov
ins
in
mov
mov
retf
pop
(bad)
loope
enter
pop
mov
sub
or
dec
xor
fmul
mov
ins
pop
pop
add
or
not
into
sbb
arpl
add
into
or
sub
dec
jp
call
push
not
cwd
clc
sti
xor
add
pop
pushf
lds
shl
retf
push
jno
rcl
and
inc
imul
neg
push
stc
arpl
xchg
or
and
add
div
jle
ins
movs
cmp
dec
mov
mov
loopne
inc
add
arpl
(bad)
mov
mov
mov
or
sub
enter
popa
mov
jmp
jae
mov
fwait
(bad)
movs
mov
and
fiadd
out
cli
and
icebp
xchg
mov
mov
(bad)
push
fadd
mov
call
pushf
retf
adc
imul
or
cdq
and
iret
and
in
mov
test
jl
and
add
xor
addr16
mov
xchg
call
in
scas
(bad)
sbb
(bad)
sti
gs
and
or
adc
mov
sub
in
cmp
icebp
mov
fisttp
xor
std
scas
sub
dec
mov
xlat
mov
jmp
xchg
test
nop
add
mov
aam
mov
pop
pusha
jno
lahf
lds
fs
rol
pushf
fs
fmul
lods
or
pop
lods
pusha
adc
xor
pop
jae
mov
pop
not
fsubrp
ret
and
inc
in
or
scas
iret
rcr
sbb
push
adc
ret
dec
into
pushf
adc
in
xchg
mov
mov
scas
adc
push
pusha
mov
lock
sub
inc
add
rcr
cmp
daa
mov
mov
mov
jnp
mov
jae
adc
mov
cdq
push
lods
dec
inc
int
pop
out
jb
add
adc
and
dec
cwde
ins
lods
outs
push
mov
pop
ja
jp
push
daa
dec
(bad)
ficom
xor
push
lea
sbb
lea
ficom
push
in
stos
shr
jne
(bad)
test
add
dec
pop
jge
mov
in
sub
rcl
into
mov
call
xchg
sar
sbb
or
in
xchg
nop
sti
std
jmp
jae
add
push
add
ja
and
jp
fstp
fwait
mov
out
in
or
sub
inc
shl
adc
loope
mov
inc
xchg
mov
pusha
adc
or
and
or
jmp
movs
cs
pop
repz
push
sub
mov
je
in
int
mov
and
cdq
scas
in
leave
and
mov
or
xor
or
jecxz
pop
aas
jns
xor
jmp
dec
jmp
lods
ror
mov
adc
jg
mov
pop
and
test
cmp
mov
dec
inc
push
adc
mov
shl
(bad)
leave
cwde
arpl
int
out
or
or
test
push
adc
shl
cmc
inc
sub
lock
add
addr16
and
lods
mov
pop
ret
(bad)
cdq
shl
mov
cdq
cwde
and
mov
test
test
(bad)
and
jne
sub
cli
(bad)
sahf
aas
cli
jmp
aaa
mov
shl
push
aad
mov
mov
sahf
dec
fnstenv
inc
push
adc
pop
mov
sub
aam
pop
cmp
jbe
adc
addr16
pop
pop
mov
mov
inc
sar
rcl
(bad)
aad
jp
jns
(bad)
pusha
sbb
imul
ret
cmc
daa
daa
sub
retf
mov
test
lock
mov
inc
dec
shl
icebp
movs
mov
sbb
es
sbb
jo
es
sbb
outs
mov
call
test
add
es
sbb
in
or
out
in
(bad)
retf
lock
call
sub
lock
mov
and
push
imul
mov
pushf
cmp
rol
mov
int
or
out
push
addr16
test
sar
aaa
xchg
inc
jl
inc
add
fmul
mov
jne
push
retf
sub
push
jp
sbb
fild
inc
push
mov
mov
mov
not
enter
daa
pop
(bad)
es
dec
in
pusha
inc
shl
scas
pop
in
xchg
ds
test
mov
dec
push
jge
adc
cwde
enter
adc
cmp
popf
dec
mov
and
nop
dec
jb
addr16
cmps
dec
adc
push
pop
cmps
push
sub
jecxz
sti
mov
shl
call
int
mov
add
out
gs
les
xchg
add
push
xchg
not
push
and
xor
cli
nop
mov
pop
push
mov
lds
push
push
dec
in
jae
xchg
and
ins
and
xor
cmp
iret
mov
dec
lods
xchg
jecxz
int
ret
mov
jns
jae
gs
cmp
and
in
add
lods
xor
xchg
xchg
lds
cli
sbb
jecxz
and
stc
test
sbb
add
or
or
loopne
push
dec
aam
jge
nop
sbb
adc
add
sti
stos
in
xor
mov
add
mov
ins
jp
adc
xchg
movs
push
jne
stc
xchg
mov
cmp
imul
xor
cmp
jnp
into
test
fs
pop
jae
inc
dec
cld
or
mov
arpl
and
jnp
cmps
fist
mov
nop
not
xchg
sub
add
push
sbb
jo
aaa
xor
pop
test
pop
daa
or
jmp
fdiv
daa
fadd
pushw
movs
into
jg
and
adc
js
add
(bad)
pop
into
jmp
ret
xchg
xchg
or
adc
cmp
inc
jg
sbb
leave
std
das
ficom
xchg
dec
sub
push
cmps
out
pushf
sub
or
repz
push
out
idiv
cwde
aas
lahf
jnp
cwde
popa
jae
mov
xchg
stc
repnz
pusha
adc
je
mov
fdiv
es
mov
test
repnz
inc
jmp
inc
or
inc
push
or
xchg
jns
add
or
cmc
xlat
sub
ret
inc
pop
jle
pop
inc
jo
xchg
push
data16
add
loopne
mov
retf
sub
out
clc
inc
(bad)
ins
lods
jmp
sbb
inc
sub
xor
add
push
cmc
push
gs
pushf
out
or
xchg
push
jbe
or
jb
jge
xor
push
dec
mov
(bad)
outs
cmp
xchg
out
popf
jmp
loopne
xchg
sbb
out
loop
jmp
lock
gs
test
ret
push
jo
aaa
addr16
pop
retf
scas
cmp
dec
sbb
(bad)
fild
movs
push
cdq
fistp
and
sbb
jmp
dec
sub
retf
mov
inc
sub
bound
leave
or
xchg
gs
ror
dec
cwde
das
icebp
and
mov
mov
xchg
adc
xlat
adc
push
cmp
and
inc
aad
dec
push
fdivp
jns
aam
dec
es
and
loop
adc
adc
js
xchg
int3
adc
sub
jmp
pop
jg
fsubr
icebp
(bad)
(bad)
sbb
mov
stc
mov
into
mov
sbb
inc
dec
cmc
cmp
stc
cmp
dec
and
mov
test
mov
repz
and
(bad)
jecxz
ret
cmps
repz
inc
add
clc
out
in
or
mov
jle
es
push
out
mov
cmps
aaa
retf
out
xor
lods
sbb
sbb
data16
movs
push
icebp
in
in
and
lahf
add
cmp
xor
jl
mov
sub
fucom
mov
and
and
das
out
mov
out
mov
xor
dec
cmp
les
adc
lods
cmp
add
test
(bad)
aaa
icebp
add
bound
std
gs
jo
cmc
or
ss
out
pop
inc
xor
sar
xor
fwait
and
mov
dec
(bad)
aam
cld
shl
movs
mov
in
int3
cmp
dec
sbb
or
dec
stos
sbb
pop
jno
sub
push
pop
xor
pop
dec
mov
push
cmp
adc
inc
fisttp
adc
in
int
jp
pop
cdq
pop
mov
sti
ja
rcl
push
or
ins
push
jno
stc
add
xor
xor
sub
adc
inc
and
fidivr
add
sbb
push
mov
sub
mov
sub
mov
(bad)
sub
push
inc
add
pop
sbb
adc
inc
adc
or
jno
pop
xchg
jecxz
pop
call
jbe
sbb
dec
aas
repnz
cvttps2pi
loope
or
push
xor
jno
fisttp
inc
jnp
test
and
ja
call
pop
sqrtps
push
mov
jne
mov
xchg
lahf
jp
dec
nop
out
jbe
in
loop
or
jge
fmul
xlat
pusha
fs
fild
jp
loope
mov
adc
push
sahf
and
xor
jp
int3
out
fdiv
mov
push
jae
call
sbb
or
outs
test
movs
mov
fmul
retf
adc
(bad)
fwait
icebp
mov
leave
jg
fs
movs
cmp
and
dec
cdq
imul
icebp
jecxz
std
push
in
push
fld
cwde
cmp
fwait
int
sbb
rcl
sti
jnp
pop
push
lds
mov
les
std
stos
mov
test
and
jmp
ror
xchg
data16
cs
(bad)
popa
popa
repz
std
ret
xor
dec
inc
ins
push
arpl
and
mov
fsub
mov
pop
aam
(bad)
and
bound
jl
push
add
test
out
xchg
sub
enter
add
mov
mov
(bad)
jg
push
mov
add
mov
xchg
or
sbb
ret
lahf
lods
xor
cmp
ficom
cmp
push
call
pop
imul
cwde
xchg
jmp
jnp
cmp
outs
jecxz
sbb
sub
test
push
std
in
xchg
sub
out
test
jnp
sahf
rcl
dec
ss
sub
rcl
mov
inc
or
mov
in
movs
data16
mov
inc
std
cdq
mov
in
loope
popa
mov
dec
std
cmps
aaa
addr16
js
neg
mov
dec
add
xor
jns
(bad)
imul
mov
(bad)
jl
cmc
stos
fistp
imul
std
pushf
xchg
imul
je
push
jecxz
push
jmp
and
sub
cli
sti
mov
leave
cmps
movs
in
pop
outs
(bad)
push
mov
out
cmp
je
(bad)
fsub
iret
adc
lea
jl
scas
cwde
push
sub
mov
repz
and
lea
or
dec
and
cmps
call
cdq
add
jmp
jns
mov
adc
push
cwde
test
xchg
repnz
jno
fcom
retf
retf
lods
addr16
ret
out
xchg
mov
cli
mov
dec
sub
inc
xchg
cmp
repnz
loope
dec
inc
cmp
mov
neg
out
mov
movs
ds
(bad)
pop
adc
lods
pop
xchg
lock
cmps
call
pop
jmp
and
and
outs
sub
popw
fxch
inc
popa
test
cmp
dec
je
mov
adc
aaa
outs
mov
dec
xor
ret
lods
jmp
add
and
adc
loopne
in
je
repz
and
sub
rol
add
fs
or
pushf
int
pop
sbb
(bad)
inc
dec
mov
mov
jb
or
and
jg
sar
xchg
add
cld
outs
dec
outs
dec
pop
out
sahf
pop
ss
add
xchg
cmps
mov
jmp
xor
fs
and
shl
fdiv
jg
in
daa
(bad)
push
mov
cld
xor
mov
jb
lods
xchg
mov
mov
ds
jecxz
cmps
fidivr
fsub
push
jbe
scas
sbb
jmp
arpl
add
in
cmp
xor
stos
data16
das
adc
push
aas
pop
add
imul
mov
dec
inc
lock
inc
or
retf
loopne
mov
scas
lods
or
lahf
jmp
fs
jo
xor
sbb
les
std
nop
mov
jne
xlat
xor
clc
xor
sub
or
push
pop
scas
add
cmp
in
sbb
and
inc
int3
adc
lock
lods
mov
push
das
sbb
repnz
in
fisubr
jne
push
sub
xor
pop
jno
fistp
mov
test
(bad)
push
mov
cmp
pop
ror
add
push
jp
hlt
hlt
ss
xchg
fsub
je
jg
mov
or
call
dec
jecxz
mov
fnstenv
mov
fucompp
addr16
jle
(bad)
pop
xchg
repnz
addr16
imul
into
and
push
push
aaa
iret
not
inc
add
add
jbe
pop
pop
leave
pop
mov
sub
iret
inc
or
popf
mov
adc
or
mov
mov
cs
adc
dec
test
pop
icebp
and
rcl
and
paddb
mov
sbb
in
mov
stc
cdq
repnz
sub
mov
or
sbb
xchg
mov
loope
lahf
in
jmp
loopne
or
hlt
pop
sbb
cmps
and
ret
sub
inc
inc
xlat
push
jbe
inc
or
cli
push
stos
mov
push
and
mov
aaa
xlat
pop
dec
xor
mov
mov
pop
sub
pop
daa
dec
push
jne
jle
cmp
dec
retf
movs
jnp
push
cmp
fwait
adc
jo
and
sbb
clc
daa
(bad)
push
call
xchg
mov
dec
push
sub
and
clc
cdq
movs
push
sti
push
cmp
in
int
outs
fst
xchg
dec
push
iret
xor
sub
pusha
sbb
pop
jb
lock
push
push
mov
ficomp
test
popa
mov
xor
mov
(bad)
enter
neg
pop
in
stc
cmps
xchg
rcr
pop
xor
xor
mov
loop
jmp
inc
sub
into
retf
jo
or
mov
adc
je
or
stc
add
out
test
jnp
xchg
repnz
data16
dec
lods
pop
sub
fidivr
lock
repnz
mov
bound
in
ins
adc
(bad)
int
push
dec
sub
popa
push
(bad)
out
das
mov
add
(bad)
jle
test
out
mov
pop
xchg
or
jmp
adc
in
or
pop
push
shl
jmp
call
adc
adc
dec
sbb
call
jne
cmc
xor
int3
ss
ja
adc
in
sub
out
or
(bad)
scas
and
cmp
(bad)
lahf
push
es
loope
lock
aaa
arpl
inc
dec
and
adc
adc
cmp
push
fwait
jne
mov
push
loopne
loop
inc
test
mov
(bad)
dec
add
movs
stos
ds
push
cli
cmp
inc
nop
lods
sub
dec
pop
adc
outs
jecxz
push
sub
xor
inc
cmps
aad
xor
sub
push
out
shl
jg
sub
sbb
and
sar
popa
jnp
xor
fnstenvw
ins
inc
inc
push
call
sahf
ss
xor
cld
pop
push
dec
pop
xor
xor
test
pop
cdq
sub
fiadd
xor
loope
and
dec
mov
lods
sub
xor
xor
prefetchnta
fdivr
cmps
in
in
xor
sub
ret
and
mov
inc
jns
sbb
jp
es
or
mov
fist
stc
(bad)
aad
mov
dec
xor
jmp
mov
xchg
cmp
out
(bad)
and
or
jns
fwait
dec
fdivr
cmc
inc
push
mov
nop
cmps
fs
or
pop
and
or
push
data16
cmps
in
jno
xor
scas
dec
or
lds
jno
mov
and
xchg
inc
test
mov
pushf
out
sub
jp
out
add
cmp
leave
ret
cmps
mov
pusha
xor
sbb
fmul
fadd
retf
mov
icebp
rcl
in
pop
inc
jl
je
scas
fidiv
rol
scas
loopne
jmp
shl
out
xlat
push
fidiv
fnstsw
sub
dec
pop
xchg
add
lahf
mov
fild
pushf
outs
cs
or
rcr
xor
sbb
(bad)
jmp
or
mov
push
inc
inc
int
adc
sub
aas
push
sub
add
std
fld
out
dec
push
cmp
mov
sbb
cli
es
neg
in
mov
test
aad
loop
(bad)
dec
and
in
bound
cmc
push
jg
pop
inc
icebp
stos
adc
xor
mov
jp
dec
imul
ja
(bad)
scas
add
xchg
sub
and
lods
mov
retf
data16
test
xor
test
add
test
clc
aam
push
inc
cs
call
fst
pop
xchg
pop
into
mov
retf
push
xor
retf
int
icebp
rcl
and
cmps
inc
mov
xor
xor
dec
retf
lock
push
in
push
cmps
push
pop
and
adc
fisttp
in
inc
push
jnp
sub
addr16
jg
inc
mov
pop
mov
xor
stos
jle
stos
add
sar
xchg
cmp
les
mul
popa
jnp
pop
repz
dec
push
in
xchg
mov
enter
mov
fidiv
pop
cmc
sti
stc
cmp
ins
mov
ja
shr
pusha
jl
sub
(bad)
test
push
mov
and
outs
lock
in
push
das
pop
test
add
ret
fld
stos
dec
and
mov
xor
mov
test
mov
fdiv
inc
icebp
xchg
gs
jmp
jmp
sti
mov
push
repnz
mov
pop
cli
imul
cli
push
out
jle
pop
adc
lds
or
xor
jecxz
mov
fnstenv
add
mov
add
push
fcom
pop
cmp
popa
and
int3
bound
out
popf
in
add
cli
ror
sub
imul
mov
dec
mov
cmps
aaa
mov
mov
xor
shr
fldenv
cs
imul
push
cmc
movs
jne
xchg
lods
int3
inc
xchg
fsub
data16
fcmovnb
xchg
cmps
push
xor
mov
fidiv
jl
sub
pop
push
mov
sub
mov
xchg
shl
aas
repz
les
lds
adc
sbb
push
or
stos
xor
push
xchg
jb
push
mov
stc
js
mov
push
mov
test
cwde
ret
sbb
ja
cmps
inc
sbb
inc
div
sub
aaa
enter
iret
xchg
and
ds
es
or
lea
mov
push
mov
push
repz
retf
das
dec
mov
pop
sub
mov
mov
cwde
push
jg
clc
out
jmp
out
pop
cmp
ins
push
cmps
cmp
xchg
popa
push
clc
(bad)
adc
inc
loop
icebp
pop
add
pop
push
push
jno
xchg
nop
inc
fsubr
nop
clc
daa
xor
loopne
(bad)
sahf
xchg
xor
dec
call
loop
mov
jg
inc
out
mov
in
rcr
push
leave
jns
fisttp
pop
sub
sub
cmp
mov
iret
(bad)
jmp
test
xchg
pushf
rcr
cmps
or
ds
xchg
jge
fucomp
scas
outs
in
shl
fnstenv
retf
scas
outs
jge
sbb
in
mov
ins
lods
retf
mov
ins
cli
sbb
lock
cld
bound
std
adc
or
or
mov
clc
cmp
loopne
mov
cdq
sub
mov
movs
or
xchg
dec
rcl
or
aas
icebp
cmps
xchg
mov
hlt
fucomi
jmp
(bad)
adc
rcr
test
out
xchg
dec
imul
mov
pop
lahf
ret
scas
xchg
ins
mov
lea
push
push
jnp
clc
lods
pop
sub
dec
nop
or
test
jmp
push
retf
sub
push
fiadd
add
jb
xchg
xchg
jmp
(bad)
out
pop
pop
push
pop
fs
adc
sbb
call
hlt
inc
mov
push
mov
jg
or
out
arpl
jmp
push
mov
cs
push
lock
lods
adc
fwait
adc
push
retf
mov
cli
(bad)
jbe
nop
pop
dec
icebp
cld
mov
test
iret
cdq
(bad)
cmp
cmc
sti
cmp
mov
scas
(bad)
lock
adc
out
add
lods
mul
out
push
mov
cmp
mov
inc
cmp
push
(bad)
mov
inc
jle
popa
call
pop
adc
dec
and
and
fisttp
(bad)
sahf
adc
cwde
movs
sub
push
pushf
push
fldcw
cmp
inc
sub
loope
cmps
mov
sbb
push
sahf
mov
xor
mov
sub
in
int3
dec
sbb
mov
fidiv
or
fwait
(bad)
jp
pop
mov
ret
xor
push
(bad)
push
sahf
jne
cmp
cmp
cmp
in
adc
jbe
rcl
out
aas
mov
imul
or
out
addr16
xchg
call
cwde
data16
ret
outs
sub
lahf
dec
add
das
cmp
mov
dec
dec
jmp
and
neg
jne
(bad)
imul
xchg
mov
xor
dec
stos
xor
or
lods
mov
push
jmp
retf
pusha
ret
mov
outs
xchg
int
sub
adc
out
sub
fst
in
sbb
fild
push
mov
cmp
sahf
aam
adc
(bad)
lahf
mov
pusha
jmp
pop
add
inc
inc
jl
adc
xor
js
push
icebp
clc
hlt
add
or
add
in
or
sub
xchg
or
aaa
loop
xchg
xchg
jbe
add
jge
cmps
js
dec
(bad)
sub
xchg
out
rcl
aam
pop
xchg
cmp
push
or
outs
inc
xor
jecxz
dec
out
mov
add
fsub
jmp
pop
stos
stos
outs
stc
mov
mov
push
push
sbb
push
fmul
test
jno
(bad)
jge
rcr
pop
lock
nop
inc
std
in
outs
(bad)
call
int3
sbb
(bad)
push
jb
jae
ror
cmp
cdq
sti
push
pop
or
jmp
cli
arpl
xor
cmp
push
shl
lahf
and
imul
arpl
enter
add
and
sti
nop
cs
test
mov
pushf
ins
mov
push
xor
cvtps2pi
cmp
or
xor
cs
(bad)
and
out
pop
mov
dec
(bad)
sub
sti
cmp
jp
mov
(bad)
sbb
push
push
outs
loopne
mov
rcr
dec
xor
or
dec
pop
adc
pushf
hlt
pusha
dec
stc
pmaxub
or
add
add
fsubr
sub
cli
fistp
cmp
jae
int3
or
sub
fsubp
inc
jbe
push
imul
mov
imul
or
jae
mov
pushf
add
retf
(bad)
(bad)
xchg
push
clc
imul
fwait
pushf
pop
cmp
cli
ins
mov
add
mov
call
mov
push
fidivr
mov
sbb
idiv
sar
addr16
xor
push
test
movs
rol
mov
nop
mov
movs
cld
test
div
test
(bad)
mov
jno
aam
pop
int
pop
test
loope
mov
(bad)
jno
pop
cs
add
loop
push
pop
mov
dec
nop
xor
mov
cmc
retf
cmc
leave
mov
nop
enter
push
outs
sbb
leave
lea
jge
mov
cwde
js
sbb
lods
and
outs
(bad)
mov
stc
push
or
adc
mov
cwde
push
mov
loope
adc
retf
pop
jg
jp
in
push
jmp
or
or
add
xchg
retf
jmp
pushf
sub
adc
pop
push
push
loope
(bad)
fidiv
or
and
sbb
sub
add
xlat
lahf
push
dec
adc
out
(bad)
into
xchg
adc
or
cld
push
sar
and
sti
lds
mov
retf
lea
das
xor
mov
pop
adc
sub
popa
dec
xor
ret
iret
push
add
jnp
mov
in
hlt
inc
in
pop
dec
shl
mov
dec
js
(bad)
fistp
mov
stc
mov
sbb
cmp
lds
mov
sahf
sbb
mov
sbb
mov
stos
push
mov
xchg
mov
ss
pop
adc
(bad)
arpl
sbb
jmp
mov
jbe
jge
jne
cmps
fcmovne
and
movs
pop
dec
aas
add
inc
xor
test
mov
jo
push
(bad)
xlat
shl
pop
push
jg
add
dec
lods
lahf
mov
scas
mov
inc
dec
add
sbb
cmp
daa
jle
pop
inc
inc
daa
cmp
mov
push
inc
lds
loope
jo
mov
mov
cmp
pop
jae
stc
pop
xchg
push
mov
xor
dec
cmp
popf
jp
fwait
dec
jp
xor
in
sub
in
add
sbb
add
dec
push
bound
adc
cmps
jg
sub
sbb
arpl
xchg
pop
ins
adc
sar
add
ss
xor
out
(bad)
adc
mov
mov
addr16
(bad)
mov
pop
mov
dec
cmp
or
out
and
out
out
(bad)
push
pop
pop
fstp
jae
mov
xchg
and
dec
add
dec
sub
mov
sbb
xchg
and
xchg
pminub
adc
test
sub
sub
dec
or
sar
or
mov
pusha
test
scas
in
out
jb
inc
std
es
shl
cmps
les
inc
push
adc
daa
mov
outs
push
inc
jl
test
(bad)
adc
sub
fldcw
ins
in
test
icebp
jne
xchg
bnd
or
pop
nop
ror
sar
jle
jo
xchg
adc
cmp
inc
jge
fs
xor
cmp
fcom
push
inc
rcl
xchg
pop
cmp
(bad)
pop
mov
sub
inc
push
sbb
fbstp
pop
jmp
pop
std
mov
jecxz
test
(bad)
xchg
sbb
dec
int3
mov
das
push
xchg
jg
mov
push
xchg
sub
mov
dec
in
stos
pop
adc
push
add
push
in
dec
and
push
fistp
hlt
sub
stos
or
repz
sub
shl
xchg
jne
cli
mov
clc
outs
ins
cmp
imul
out
and
jecxz
mov
stc
cmp
push
push
push
fidivr
scas
fwait
mov
aam
out
imul
dec
scas
bnd
jmp
mov
div
cmp
pop
outs
or
and
jne
imul
sahf
xchg
jmp
pop
mov
mov
rol
xchg
push
xchg
cmp
push
dec
fs
nop
addr16
push
fcmovu
stos
mov
sub
pop
dec
cs
sbb
ss
dec
cmp
lods
movs
cmps
xchg
push
outs
xlat
adc
pusha
pop
pop
out
push
fist
movs
outs
push
mov
jns
cmp
sub
std
fwait
ja
adc
(bad)
shr
xchg
(bad)
jl
dec
outs
movs
cdq
cmovle
and
inc
mov
pop
in
test
push
imul
outs
clc
je
cld
fadd
pop
mov
popa
push
jle
add
jl
cmps
xchg
in
sti
aaa
clc
shr
sbb
add
sub
cmps
add
add
fcom
aam
test
mov
outs
sbb
clc
stc
dec
mov
into
retf
jge
shl
imul
(bad)
xor
fisttp
add
repz
clc
xor
cmp
mov
pop
push
jl
addr16
js
adc
xor
jg
inc
mov
iret
push
out
pop
xor
jge
xchg
hlt
pop
xchg
in
rol
loope
ins
sbb
popf
mov
nop
sbb
sbb
pusha
fisttp
mov
out
xchg
enter
data16
and
stos
sub
xchg
and
addr16
scas
or
fnstcw
mov
xlat
clc
fisttp
cwde
dec
and
(bad)
in
stos
outs
cmp
in
sti
fidiv
dec
in
dec
pop
(bad)
and
mov
sbb
jbe
sub
or
int
jg
pop
pop
xor
xchg
inc
test
pop
cwde
mov
mov
push
(bad)
out
dec
inc
js
cli
mov
es
xchg
jb
mov
mov
sub
mov
push
adc
sub
add
sub
xor
sub
pop
cmc
jle
inc
push
aaa
sbb
movs
ror
test
sbb
mov
and
sbb
jp
ja
adc
lahf
jecxz
push
mov
push
rcl
bound
rol
jno
fnsave
fbld
push
loope
out
icebp
cmp
arpl
fidiv
or
xchg
mov
repnz
arpl
ds
mov
sbb
adc
scas
mov
mov
jae
popf
call
xchg
and
test
fcomp
data16
arpl
out
xor
mov
imul
iret
loop
cdq
and
mov
jge
scas
scas
sub
neg
repnz
inc
pop
cmp
cdq
add
add
push
test
mov
and
push
push
cmp
paddq
lahf
push
aam
hlt
movs
mov
xchg
mov
xchg
pop
xchg
in
xchg
nop
test
sub
mov
lods
sbb
lahf
mov
add
inc
movs
push
or
cmp
adc
js
aas
je
fs
or
push
sbb
mov
add
out
enter
mov
not
in
test
mov
push
xor
push
ds
(bad)
mov
xchg
ror
mov
adc
cmps
jb
int3
adc
ins
sbb
mov
fld
jae
sub
ins
lahf
or
rcl
pop
test
rcl
mov
loopne
in
popf
test
out
jns
mov
std
mov
scas
push
jp
sbb
shr
aaa
(bad)
xor
mov
repz
adc
rol
inc
cmps
mov
adc
(bad)
sub
add
pop
or
jnp
cmps
jmp
xor
nop
loopne
imul
mov
(bad)
pushf
call
push
in
stos
in
add
in
lahf
call
sar
addr16
jbe
jp
jno
jmp
into
xchg
(bad)
mov
fimul
adc
lods
fld
dec
test
outs
mov
std
retw
hlt
ds
dec
jno
jle
ins
jnp
jno
int3
mov
(bad)
xchg
jbe
test
mov
cmp
push
(bad)
dec
push
push
out
cld
(bad)
inc
pop
inc
push
pop
cmp
sbb
leave
adc
aaa
push
xor
jo
jecxz
test
jle
lods
adc
mov
xchg
idiv
lock
dec
xor
sbb
jae
mov
dec
pop
push
les
lock
ret
sbb
mov
xchg
adc
xchg
pop
sar
and
xor
push
mov
mov
mov
hlt
(bad)
jmp
aad
sbb
in
(bad)
pop
cmps
fwait
mov
and
xchg
or
rol
jae
inc
(bad)
jmp
add
daa
adc
adc
lea
das
retf
dec
daa
cmp
push
test
sbb
and
in
xor
or
pop
sbb
push
cmps
lds
add
dec
sub
outs
ss
out
pushf
push
mov
mov
icebp
mov
pmaxub
pop
out
aam
loop
push
sti
sub
scas
mov
mov
(bad)
(bad)
sbb
aaa
in
sub
out
or
addr16
pop
dec
cmp
sub
mov
jmp
xchg
(bad)
push
repz
fcomi
stos
mov
inc
pusha
ret
mov
daa
dec
inc
call
ret
ret
lock
xor
xchg
in
clc
mov
inc
sub
sub
sub
push
dec
mov
adc
sub
mov
mov
mov
cmc
inc
mov
cmps
hlt
jg
call
lods
stc
or
dec
rep
jb
(bad)
fadd
and
(bad)
(bad)
jno
(bad)
int3
loopne
int
add
jbe
enter
pop
ja
stos
adc
mov
adc
(bad)
iret
jns
clc
cmps
jo
adc
inc
mov
mov
ret
mov
xor
jecxz
jmp
das
out
mov
(bad)
cmp
jge
mov
ds
add
loop
dec
dec
leave
push
sbb
shr
lods
fsubr
sahf
add
mov
cmp
lea
retf
pop
mov
dec
xchg
fstp
jbe
inc
adc
sbb
stos
enter
mov
cmp
inc
hlt
retf
and
add
mov
push
fsubrp
daa
bnd
pop
dec
loope
sbb
sbb
fdivp
xchg
add
sub
pop
inc
je
loopne
loopne
mov
test
test
dec
sbb
in
jb
push
add
(bad)
or
imul
into
data16
xor
pop
icebp
std
aaa
cli
jo
push
push
fimul
mov
je
jge
jne
mov
aaa
sbb
push
xor
adc
in
dec
push
daa
rcl
(bad)
cmp
pop
es
in
lock
pop
retf
mov
fwait
scas
push
outs
pop
mov
mov
(bad)
mov
aad
dec
lea
inc
into
inc
sti
fidiv
mov
(bad)
jb
inc
push
(bad)
mov
aam
xor
fcom
fcmovu
cwde
rcl
fadd
addr16
and
pop
xchg
fisubr
(bad)
ss
call
or
in
xchg
lods
jecxz
push
cs
idiv
jae
add
mov
dec
and
enter
jns
(bad)
cdq
lods
sub
fst
aad
xor
pop
fwait
jns
call
stos
and
inc
push
adc
inc
sub
outs
mov
and
or
lods
pop
iret
cmp
push
test
pop
pop
test
jle
lea
arpl
xchg
loope
xlat
mov
sub
ja
dec
popf
inc
(bad)
lock
pop
push
or
iret
push
lods
popf
aad
adc
data16
add
xchg
inc
fwait
cwde
in
sbb
mov
xor
xor
mov
call
das
add
fistp
or
xchg
repz
cmp
or
push
cmps
or
repz
aam
cwde
and
sbb
fld
fcom
add
cdq
pop
int
ja
jb
cdq
inc
jns
cwde
repz
mov
das
dec
test
out
xchg
aad
push
push
cvtps2pd
cdq
sbb
std
xchg
sar
pushf
test
mov
mov
cmp
mov
pop
dec
retf
mov
jb
pop
ret
and
pop
add
xchg
mov
jge
cmp
out
cmp
call
cmp
or
rcr
ret
arpl
ja
mov
shl
cmp
in
cli
(bad)
inc
push
aaa
test
mov
mov
xchg
pop
jb
pushf
xchg
jp
sbb
pop
pop
xchg
cmp
cli
rol
add
dec
aas
popf
sbb
push
and
movs
xchg
jae
fist
pop
cli
xchg
aaa
pop
fist
dec
xor
(bad)
fld
or
push
mov
pop
mov
cwde
push
gs
xor
dec
adc
dec
ins
scas
mov
or
sbb
int
adc
cmp
xchg
jg
xchg
push
fadd
dec
sbb
jne
rcl
jne
pop
sbb
sub
sbb
add
sbb
call
fcmovu
xor
call
dec
gs
xor
mov
inc
popf
pop
sub
sbb
push
rcl
sub
or
ds
or
dec
ins
loopne
xchg
lock
add
mov
mov
sbb
push
jbe
call
xchg
add
fucom
(bad)
aam
out
dec
out
push
or
inc
(bad)
es
fidiv
dec
daa
aas
(bad)
ss
jae
das
jbe
fwait
dec
lods
sbb
ds
loop
inc
mov
pop
adc
retf
loope
icebp
or
mov
in
pop
dec
retf
neg
mov
(bad)
mov
fs
xchg
pop
and
jmp
push
mov
push
add
and
fsubr
mov
push
pop
test
cld
jge
sbb
jb
pop
ds
int3
dec
mov
and
mov
mov
add
xchg
adc
xchg
push
outs
inc
add
and
ds
loope
sub
xchg
dec
jae
js
xchg
sub
push
sbb
inc
sbb
pop
mov
jmp
jb
not
inc
or
cmp
lock
adc
bound
rcl
mov
aaa
cwde
xchg
xor
stos
in
or
pushf
xchg
movs
bound
push
comiss
mov
iret
inc
mov
jmp
xlat
push
dec
xor
sar
test
or
cmc
mov
ins
mov
push
jae
enter
add
mov
(bad)
dec
and
pop
scas
cmps
(bad)
js
jp
adc
jmp
pavgw
dec
xor
lock
xchg
js
sbb
push
sbb
shl
add
mov
lahf
mov
call
and
das
cdq
fcom
ja
sub
clc
neg
sbb
mov
push
aaa
(bad)
mov
pop
or
inc
fstp
in
jmp
shl
out
call
repnz
movs
cmp
out
fiadd
cld
int
aam
sub
and
rcr
cmp
shr
inc
int3
cmp
push
push
adc
jecxz
cmp
and
jge
add
(bad)
mov
fimul
jmp
mov
addr16
call
push
xchg
cli
push
push
mov
push
jbe
not
cmp
jae
xchg
aad
ret
ret
fs
and
arpl
stc
inc
stc
jo
retf
cmp
hlt
daa
push
jnp
loopne
loop
mov
cmps
sbb
mov
cmp
(bad)
xchg
xchg
cs
retf
add
ret
adc
(bad)
in
mov
dec
pop
mov
xor
mov
out
pop
loop
push
mov
or
and
aam
outs
sbb
pop
adc
(bad)
repz
addr16
jp
aad
cmps
lock
lds
bsr
into
out
retf
lock
test
ret
jmp
jg
or
stc
scas
xchg
push
mov
xchg
push
and
mov
inc
add
xchg
outs
cs
test
cdq
test
pop
lds
and
dec
(bad)
mov
push
int
leave
cmp
sbb
jp
retf
inc
dec
jmp
ja
inc
xor
and
ins
std
mov
and
pop
xor
pop
lds
mov
pop
mov
xchg
or
leave
add
rcl
gs
mov
jmp
pushf
sar
lea
mov
sbb
xor
daa
call
call
call
in
jns
int
or
pop
(bad)
shl
ret
stc
cwde
add
dec
jp
pop
mov
push
push
xchg
and
in
xchg
xchg
jne
lods
or
test
std
and
sahf
push
mov
mov
js
dec
mov
push
cmp
dec
rep
repz
or
rol
mov
cmp
dec
retf
leave
rcr
jle
pop
jns
xchg
cmp
das
jmp
mov
movs
popf
mov
mov
stc
xchg
jae
mov
xchg
push
js
pop
mov
bound
retf
cs
cld
out
sub
xchg
jge
std
cs
jp
mov
out
inc
mov
xor
leave
dec
push
sub
xlat
xor
(bad)
or
xor
sbb
dec
retf
sbb
out
xor
jne
mov
push
stc
dec
xor
mov
and
or
cmp
test
dec
es
sub
pop
fiadd
jns
stos
repz
pop
and
test
push
jae
jmp
xor
sbb
mov
dec
inc
arpl
mov
lods
in
shl
iret
xchg
push
aam
xchg
lea
dec
cmp
add
bound
(bad)
sbb
ins
adc
dec
or
dec
arpl
push
sahf
xchg
mov
adc
push
mov
jbe
arpl
push
xchg
test
idiv
jge
add
adc
and
aaa
and
mov
cmp
or
inc
jle
or
mov
jnp
mov
xor
test
fmul
adc
add
fs
push
stos
jecxz
mov
shr
xor
fbstp
jo
jns
std
pop
test
ret
push
fbstp
and
pop
push
mov
out
or
jecxz
out
sub
out
std
mov
in
sbb
push
mov
scas
mov
mov
mov
add
sbb
sti
lahf
jnp
add
cmps
dec
lahf
jecxz
out
sti
retf
lods
ins
aam
ins
and
movs
dec
jo
cmp
pop
das
push
pop
pop
pop
mov
or
fsubr
retf
stc
mov
dec
es
(bad)
jns
mov
mov
push
jb
sub
jmp
sbb
push
dec
jno
xor
mov
arpl
ja
cmp
sub
push
js
fadd
dec
add
push
ins
aas
aam
stos
in
outs
cwde
js
cmc
xchg
inc
push
fist
mov
mov
jle
in
mov
in
daa
es
fidiv
mov
mov
gs
or
mov
iret
xchg
lahf
test
inc
les
sbb
mov
sbb
sbb
aas
jns
mov
sbb
stos
push
ret
pop
or
adc
mov
jle
adc
add
mov
and
les
mov
inc
push
in
xor
or
sbb
loope
loop
daa
mov
xor
(bad)
div
add
call
icebp
ins
comiss
lds
jbe
dec
not
or
sbb
cmp
mov
adc
or
push
mov
(bad)
retf
sub
sub
sub
jmp
inc
out
(bad)
mov
test
movs
inc
not
mov
and
retf
or
fdivr
(bad)
pop
lods
mov
mov
and
inc
jno
call
jecxz
sub
push
dec
lahf
ret
loopne
mov
pop
icebp
outs
mov
arpl
xchg
push
popf
je
dec
inc
popf
mov
sbb
sub
inc
inc
mov
std
fimul
push
rol
ds
rcr
fwait
mov
jno
clc
cld
jmp
add
rcl
adc
jmp
das
sub
sub
inc
fs
lods
pop
cmp
and
sahf
cmp
sbb
jmp
loop
jo
daa
dec
jp
out
ret
mov
or
cmps
enter
add
test
cmp
dec
jmp
sbb
mov
mov
mov
mov
retf
mov
or
sbb
xchg
xor
inc
(bad)
sbb
repz
je
(bad)
cmp
(bad)
jnp
inc
xchg
mov
and
xor
jnp
dec
or
frstor
mov
out
pop
push
jmp
and
call
jmp
neg
mov
cld
and
cmps
lock
aad
xor
sbb
adc
pop
and
xchg
cmp
mov
mov
stc
pop
pusha
int
in
fcom
push
movs
push
xchg
mov
js
jg
sub
mov
mov
imul
add
mov
push
aas
or
out
fsubr
dec
or
adc
stc
outs
mov
push
xchg
and
scas
xchg
sbb
cmp
push
mov
and
(bad)
imul
mov
mov
and
pmaxub
pop
lds
ds
test
stc
sbb
jne
out
ss
cmps
gs
cmp
add
push
and
cmp
icebp
and
xchg
lock
mov
ret
add
int
shl
mov
dec
js
nop
not
ret
repnz
xlat
pop
js
cmp
test
and
and
call
cmps
mov
xor
ds
sub
aas
mov
or
nop
mov
xchg
add
add
add
call
loope
scas
mov
mov
(bad)
mov
loop
cmp
push
aam
movs
fisubr
adc
mov
pop
inc
pop
and
xchg
cs
adc
popa
cmps
dec
daa
arpl
jge
mov
movs
dec
dec
sti
fbld
out
adc
popf
pop
pop
clc
sub
stos
mov
out
clc
inc
fmul
sub
cld
pop
xchg
pop
inc
or
out
cmp
aam
xchg
xchg
dec
pop
dec
lock
enter
outs
cmp
mov
mov
xchg
int3
mov
in
inc
pop
mov
fwait
sbb
push
or
push
ds
dec
mov
lods
cdq
in
sub
js
mov
and
movs
jmp
popa
inc
lods
adc
sbb
pop
xor
cwde
xor
mov
(bad)
add
xor
fidivr
les
pop
and
or
nop
add
je
loopne
mov
sbb
xor
(bad)
test
ret
fsubr
aaa
jmp
ficomp
xchg
pop
jg
addr16
sbb
aas
mov
scas
adc
mov
mov
(bad)
mov
lea
and
jnp
sub
pop
loope
fist
aas
(bad)
imul
cmps
add
lock
inc
mov
or
(bad)
mov
outs
imul
popf
sbb
fnstenv
dec
(bad)
mov
pop
popa
dec
out
std
jnp
ss
adc
pop
lahf
ret
repz
das
dec
lahf
ins
rcl
sub
sub
xor
ds
inc
loope
push
jle
xor
out
cmp
xchg
sub
(bad)
scas
int
dec
ja
cmp
shr
dec
mov
pop
pop
out
mov
pushf
iret
xlat
sbb
mov
xchg
out
or
mov
adc
jbe
mov
icebp
xchg
imul
div
jo
jle
lds
lahf
sub
(bad)
jnp
jmp
popa
stos
jno
mov
fidiv
out
jmp
dec
mov
cs
inc
adc
or
fst
imul
dec
fucomi
outs
push
ret
sbb
ret
std
out
loope
and
jp
test
fbstp
add
div
or
(bad)
and
scas
pushf
jmp
das
mov
push
aas
int
push
test
xor
add
out
pop
mov
sbb
(bad)
push
shl
jmp
jp
mov
jb
inc
push
or
add
cmp
push
icebp
mov
fild
loopne
xchg
xor
in
xor
scas
mov
out
adc
(bad)
jmp
sub
imul
cld
sub
imul
retf
stos
push
fidivr
pop
sbb
push
sar
ja
loopne
inc
outs
xor
(bad)
pop
mov
lods
js
xor
add
jbe
pop
in
xor
and
test
nop
push
shl
and
mov
hlt
sbb
jmp
inc
(bad)
jns
jnp
(bad)
jecxz
push
push
or
enter
cwde
outs
cmp
jo
cld
test
jl
rcr
pop
popa
inc
cmp
mov
mov
inc
adc
add
scas
xchg
stc
sub
or
add
sub
inc
cmps
or
jle
cmp
aaa
dec
out
pop
mov
push
mov
or
xor
(bad)
xchg
xchg
mov
daa
jmp
ficom
in
loop
mov
jb
dec
push
add
(bad)
push
cmps
test
inc
inc
push
dec
and
retf
test
adc
loop
fcomp
sub
fcom
pushf
add
pop
mov
sub
push
or
push
sbb
push
sub
scas
adc
cwde
cmp
shl
dec
cmp
push
movs
push
ds
dec
sbb
mov
stos
mov
repnz
or
jmp
not
jne
xlat
xor
xlat
shl
jmp
stos
jmp
stos
les
(bad)
adc
add
adc
or
out
cmp
mov
inc
or
sbb
adc
mov
mov
pop
inc
inc
imul
pushf
rol
dec
daa
inc
adc
sbb
mov
aam
out
ins
sbb
push
xor
mov
inc
ret
sbb
xchg
inc
sub
adc
mov
cwde
(bad)
xor
sub
and
out
stc
fs
rcr
jmp
(bad)
mov
mov
in
inc
push
jg
push
add
push
call
push
aas
call
into
imul
hlt
cmp
sbb
loopne
push
jmp
pop
out
xchg
fistp
pushf
mov
fcmovnu
dec
mov
movs
xor
nop
cmp
aas
or
jmp
pop
add
loop
adc
and
lahf
repz
daa
adc
inc
mov
sub
xchg
mov
inc
out
dec
into
push
call
dec
adc
push
inc
jne
sub
pop
cld
cmps
add
mov
jl
sub
mov
cmp
push
sbb
js
and
cmc
push
sti
movs
inc
xchg
(bad)
lods
gs
loopne
fsubr
lods
cmp
push
test
mov
pop
stc
xor
adc
(bad)
mov
aas
(bad)
dec
xchg
loope
loopne
push
xor
(bad)
sbb
ja
mov
cdq
jle
pushf
cwde
dec
mov
and
sbb
shr
xor
inc
repnz
cmps
call
movs
or
aas
xor
into
rol
dec
push
sbb
inc
xor
jecxz
addr16
dec
shl
sbb
adc
lods
ror
jbe
add
in
js
retf
lods
sbb
cmp
xor
pop
inc
add
jns
daa
loopne
in
dec
push
mov
jecxz
fidivr
mov
jne
ficom
xor
or
cmp
jns
and
je
mov
test
or
(bad)
addr16
(bad)
mov
out
ficomp
scas
xchg
sti
mov
mov
or
xchg
adc
sbb
jle
imul
lods
mov
mov
out
or
lea
stos
cmps
xchg
inc
(bad)
in
jnp
cs
mov
inc
mov
movs
mov
and
shl
shr
ss
mov
dec
stos
dec
cmp
and
idiv
xor
inc
scas
add
ds
add
rcl
cmps
pop
xchg
das
and
sbb
fbstp
mov
and
test
stos
js
mov
adc
std
lods
cmp
imul
and
sahf
mov
loop
aas
ins
adc
js
ja
jae
dec
mov
or
pop
jle
jbe
scas
and
cmp
mov
add
inc
or
gs
iret
hlt
pop
movs
mov
pop
test
loop
and
rol
xchg
lahf
push
dec
sbb
push
sbb
mov
out
mov
pop
push
xchg
test
pop
adc
and
je
in
adc
cmc
ss
and
adc
mov
sbb
fst
daa
addr16
fnsave
sar
(bad)
ror
fwait
cmp
out
call
sbb
out
dec
jbe
fwait
sub
cmp
dec
clc
push
sbb
sub
sbb
ins
es
fisub
mov
loopne
sub
fs
cmp
out
ja
cld
jno
xchg
ins
int3
mov
push
mov
push
cli
sub
jno
push
retf
xor
nop
xchg
adc
sbb
mov
pop
mov
xor
dec
aam
enter
inc
loopne
push
sbb
retf
rol
mov
push
pushf
inc
add
push
xchg
and
(bad)
je
mov
sub
and
in
sbb
cdq
mov
mov
mov
cwde
pop
mov
icebp
or
push
lods
rol
push
pop
fsubr
xlat
jns
push
sub
lods
bound
xchg
pop
sbb
mov
pop
xor
mov
or
sbb
stos
sbb
shl
sub
adc
in
call
jg
dec
je
sbb
push
push
imul
or
xchg
adc
fadd
iret
sub
mov
rcr
jp
or
inc
ins
loop
icebp
jbe
out
test
or
test
sbb
outs
xchg
addr16
or
jb
cmp
inc
adc
xchg
or
in
es
test
dec
jmp
nop
jo
mov
(bad)
in
aaa
out
inc
clc
ret
mov
inc
cmp
adc
add
(bad)
mov
pop
or
std
xchg
add
ret
call
push
mov
das
mov
mov
ins
repnz
leave
repz
std
xor
mov
fisttp
pusha
jg
jae
push
pop
xchg
popa
sbb
and
outs
jnp
cmc
(bad)
or
or
xchg
jmp
mov
cwde
and
mov
inc
inc
stos
sub
mov
adc
pop
fstp
or
inc
pop
bound
mov
pusha
and
ficom
jo
or
mov
sbb
out
lea
jns
fst
ret
jecxz
mov
sub
xchg
cmps
gs
xor
pop
pop
mov
out
fdiv
adc
mov
sbb
inc
test
xchg
jge
adc
mov
movs
aam
jae
adc
or
mov
or
jl
adc
mov
jo
push
data16
pop
call
cmp
lods
jo
sbb
fstp
xchg
test
js
mov
ins
int3
cld
test
add
add
push
movs
fs
rcr
cwde
sbb
fisttp
inc
lock
lea
mov
xchg
add
into
lods
mov
mov
push
and
icebp
push
fwait
call
mov
jo
xor
loopne
xchg
inc
push
jmp
enter
mov
cwde
out
dec
or
in
xchg
ret
pop
xor
imul
push
fnsave
sbb
sub
aad
aaa
jnp
inc
pop
push
aam
cmp
push
xor
adc
cmp
dec
lds
ins
pushf
mov
scas
mov
push
les
add
imul
stos
es
pop
hlt
jae
mov
mov
imul
shl
shl
mov
in
test
imul
js
sub
push
(bad)
cld
push
scas
int3
xchg
add
inc
push
cs
aad
cs
pop
dec
sti
(bad)
pop
ror
aaa
and
sub
pop
aam
push
mov
inc
jmp
fsub
ss
in
call
inc
cmp
mov
sub
fldln2
push
ja
cmp
or
pop
scas
mov
and
xor
xchg
pop
gs
mov
sub
int
and
sti
ja
add
xor
cmp
cmp
out
mov
sub
adc
add
inc
inc
(bad)
into
(bad)
cmp
cmp
sub
and
movs
inc
xlat
(bad)
mov
outs
scas
push
rcl
jp
jg
inc
out
add
xor
lods
icebp
bound
lods
add
ds
imul
and
repz
popf
xor
adc
leave
test
sbb
retf
fimul
rol
dec
fnstcw
mov
jae
and
cld
adc
adc
(bad)
enter
mov
movs
xchg
add
mov
lea
mov
test
pop
dec
or
fldenv
stos
add
adc
pushf
inc
clc
lock
sahf
int
mov
popa
ffreep
ficom
cwde
ret
pop
dec
es
scas
jmp
repnz
inc
xor
adc
stos
fst
daa
jbe
add
pop
arpl
jle
xor
ja
adc
mov
mov
mov
xor
retf
sbb
dec
arpl
leave
push
mov
or
xchg
sub
or
mov
icebp
call
mov
in
scas
push
or
dec
adc
addr16
into
push
inc
shr
sub
xlat
loope
stc
push
mov
(bad)
cmc
xchg
cmp
retf
dec
adc
sub
les
arpl
inc
pop
retf
sub
and
mov
int3
(bad)
(bad)
pop
shl
cdq
sub
sbb
fdivr
xchg
mov
(bad)
outs
fstp
adc
xchg
push
xor
shr
shl
adc
fsub
push
not
add
mov
cmp
(bad)
xor
mov
enter
mov
jg
shl
cmp
and
sbb
mov
hlt
cdq
stos
mov
adc
adc
pop
out
mov
or
inc
xchg
hlt
hlt
(bad)
fcmovne
push
mov
mov
popa
add
xor
mov
mov
test
sbb
mov
les
sahf
xchg
clts
pop
out
push
inc
cs
and
cmps
iret
dec
sbb
iret
popf
retf
mov
movs
inc
pop
stos
and
mov
sub
mov
call
mov
sub
scas
or
jmp
jne
cmp
or
pop
leavew
jnp
xchg
add
pushf
lock
ret
jnp
aam
sbb
sub
sbb
iret
ins
add
(bad)
repz
(bad)
fisttp
dec
adc
das
popf
gs
inc
push
jl
or
add
bound
xchg
aad
push
dec
and
cmps
leave
jns
push
outs
xchg
xchg
adc
dec
and
inc
rol
jmp
js
fisttp
xchg
sub
rcr
outs
jl
mov
sbb
dec
(bad)
cmp
push
sub
(bad)
xchg
dec
sub
push
xor
addr16
xor
scas
sbb
lds
xchg
and
jge
add
dec
mov
dec
xchg
jbe
and
mov
and
(bad)
pop
jmp
mov
js
(bad)
adc
pop
jno
sbb
movs
div
jle
fidivr
xlat
xchg
das
xchg
pusha
imul
pop
popf
cdq
or
mov
repnz
fldenv
xchg
stos
xchg
pushf
pop
mov
call
fidivr
loop
jbe
out
or
xchg
add
repz
icebp
loop
add
or
ret
(bad)
and
xor
mov
data16
dec
push
fiadd
lock
ja
es
enter
pop
adc
push
sahf
mov
add
pop
iret
loopne
jl
pop
ja
jnp
adc
or
test
pop
cmps
dec
outs
push
mov
pop
dec
or
sbb
aaa
loopne
movs
sub
inc
mov
das
aas
fdivr
out
jmp
jnp
(bad)
fcom
loopne
daa
cmp
add
in
and
dec
dec
xchg
push
jnp
shl
lds
mov
inc
mov
dec
pop
stos
dec
xchg
push
jle
(bad)
push
movs
mov
xlat
idiv
xor
mov
addr16
mov
sub
(bad)
inc
call
inc
out
les
pop
or
out
jo
jne
mov
xchg
aad
imul
in
adc
cmps
mov
add
clc
ins
ret
pushw
push
mov
ins
cmp
movs
adc
or
xchg
xor
movs
inc
dec
jnp
mov
adc
and
icebp
jle
cwde
loop
and
jge
and
jge
add
and
ins
fstp
dec
push
call
and
cmps
add
(bad)
xor
mov
mov
inc
mul
mov
mov
xchg
mov
inc
pop
pop
sub
std
mov
aad
popa
inc
pusha
fiadd
shr
inc
mov
je
jl
std
ss
aam
mov
xchg
popa
inc
into
popa
out
jmp
sbb
add
repz
or
pop
xchg
jp
fwait
movs
xor
sub
xchg
je
sbb
in
data16
bound
in
mov
xchg
cli
adc
mov
mov
sti
retf
pop
jl
mov
pop
scas
mov
daa
jne
rol
mov
xor
aas
xor
cmp
jg
(bad)
aad
ret
cwde
cmps
frstor
sbb
xchg
aam
shr
movs
cmp
cmp
adc
xchg
into
xchg
jmp
and
adc
mov
rcr
repnz
xchg
ret
inc
ss
fisubr
aad
jle
inc
daa
cwde
int
adc
lods
repz
push
or
mov
imul
int
adc
fimul
in
mov
ss
lds
dec
add
jmp
inc
xor
idiv
jp
mov
ficomp
gs
loopne
mov
dec
aad
and
scas
loope
cwde
adc
ins
les
cmp
sbb
movs
scas
fsubr
addr16
or
sub
fnstcw
dec
in
scas
sub
stos
scas
dec
inc
aad
lea
(bad)
shr
ins
sti
pop
mov
mov
ss
xchg
cmp
test
mov
push
repz
or
sbb
inc
sbb
int
jle
lock
jnp
scas
(bad)
jmp
dec
iret
xchg
cmp
lods
enter
jmp
retf
je
ds
mov
std
lods
jg
dec
lock
fistp
mov
jecxz
rol
leave
push
das
add
dec
popa
stc
inc
adc
inc
aas
ret
push
ja
arpl
pushf
cli
xor
inc
cmp
paddsb
retf
or
cs
mov
add
push
cmp
jle
cdq
cs
lea
mov
jnp
(bad)
repz
sti
xchg
inc
sbb
cs
xchg
movs
test
mov
test
mov
enter
dec
aaa
ret
pop
call
jo
pop
mov
mov
in
xchg
cmp
mov
scas
jp
mov
sbb
shr
sbb
pop
fsubr
ds
xor
xor
adc
popa
add
xchg
push
pop
(bad)
clc
cdq
scas
imul
ret
cmp
cmp
push
add
fwait
cdq
std
bound
push
push
mov
das
mov
jl
pop
adc
cmp
cmps
scas
loop
ficom
pop
jns
mov
stos
out
fs
aas
fs
jbe
aad
and
cmp
mov
sbb
push
and
in
inc
xor
mov
out
jnp
je
xchg
aaa
mov
pop
mov
cmp
xchg
movs
adc
into
sti
iret
push
std
cmp
jo
daa
push
push
sub
inc
(bad)
aaa
xor
sbb
mov
lahf
cli
dec
ror
fwait
ret
or
daa
add
sbb
and
xchg
adc
movs
push
shl
popa
lea
sub
dec
fcom
(bad)
push
faddp
daa
mov
adc
inc
jmp
mov
ins
pop
pop
repnz
outs
jmp
add
and
inc
sar
popa
int
out
sti
and
repnz
xchg
cmps
mov
mov
lahf
movs
add
mov
xchg
stos
test
cwde
div
inc
push
cs
(bad)
push
lds
cwde
pop
aad
and
ja
fs
pop
jl
and
sbb
cdq
jae
scas
mov
cmp
inc
je
jo
dec
push
ds
or
jmp
add
sub
xchg
adc
xchg
movs
in
sar
sub
cmp
ror
pop
(bad)
pusha
pusha
sub
jecxz
arpl
inc
pop
or
cld
adc
out
dec
pop
jp
sbb
cmp
aas
movntq
outs
shl
adc
dec
les
lods
div
ss
retf
inc
mov
lock
xchg
pop
cmp
(bad)
xchg
(bad)
cdq
sbb
mov
retf
mov
and
cmp
sahf
jnp
scas
loope
add
jbe
lds
aam
(bad)
cmp
out
lods
jns
movs
aam
or
iret
mov
dec
mov
inc
fst
adc
loope
push
(bad)
pop
mov
adc
xor
sbb
cli
pop
pushf
cdq
shr
add
inc
imul
mov
movs
lods
dec
fisubr
lods
mov
cmp
retf
(bad)
xor
arpl
dec
add
arpl
(bad)
mov
adc
sub
push
jle
out
test
sub
pop
or
mov
fild
push
adc
or
lods
cmp
dec
in
loopne
aam
iret
pop
mov
enter
inc
adc
fisubr
jle
fld
jb
mov
and
out
xchg
aad
cdq
cmc
data16
cld
jo
out
je
ins
adc
lea
aad
stc
dec
mov
ss
adc
icebp
push
pop
idiv
jbe
sub
sub
test
mov
(bad)
shr
inc
addr16
cmp
aas
sbb
(bad)
div
pop
xor
sbb
or
nop
mov
data16
cmps
sahf
adc
pop
cmps
jno
clc
jmp
pop
and
ins
xor
inc
xchg
sti
stc
jge
nop
(bad)
add
(bad)
sti
aas
push
out
nop
mov
or
xor
loopne
push
fisub
enter
or
jb
addr16
call
push
adc
dec
enter
mov
jb
int
sub
mov
popa
aas
push
outs
enter
lds
xchg
int
pop
add
sbb
stos
pop
jmp
adc
out
js
pushf
or
mov
mov
and
xchg
mov
sbb
inc
icebp
shl
push
pushf
jl
femms
out
call
mov
mov
xor
aaa
retf
adc
jl
(bad)
test
dec
jmp
xor
pop
or
jp
ror
aaa
imul
cli
fnstenv
in
push
pop
inc
stos
push
and
clc
std
jae
pop
imul
mov
xchg
mov
jl
add
jge
mov
rcl
fdiv
in
pop
dec
sub
mov
shl
adc
mov
adc
ins
mov
sbb
outs
aas
movs
movs
push
add
fnstcw
pop
out
stos
push
mov
mov
cmps
popa
jnp
bound
sbb
xorps
cmp
or
and
fcomp
cmp
dec
sub
aam
call
xor
xor
adc
mov
pop
push
cmp
sbb
jecxz
pop
arpl
gs
inc
and
ins
scas
pusha
lods
rol
sbb
clc
cmc
jg
add
test
(bad)
ror
cwde
pop
xchg
jg
and
pop
sub
rol
sub
fnsave
leave
in
add
dec
inc
jmp
or
pop
dec
dec
rcr
or
fild
gs
push
lods
fsqrt
lea
sbb
ds
and
outs
push
into
dec
mov
pop
inc
adc
cdq
push
xchg
cwde
cmps
sub
mov
std
in
or
bound
int3
les
mov
int
not
add
aas
xor
ret
dec
stc
neg
cmp
add
gs
addr16
pusha
inc
out
sti
repz
into
and
sub
outs
push
and
push
add
mov
mov
xor
pop
cmp
sub
xchg
mov
push
lods
mov
inc
mov
xor
sbb
jge
cmp
mul
repz
daa
popf
push
inc
sti
xchg
lods
gs
or
mov
push
(bad)
inc
mov
out
sub
ds
loop
xchg
dec
adc
mov
xchg
(bad)
loope
aam
jne
add
fnstsw
sub
push
mov
fwait
sbb
shl
sub
push
out
mov
cdq
jp
jae
inc
dec
shl
test
and
rol
add
push
retf
sub
arpl
mov
adc
xchg
stos
jne
add
inc
mov
sub
inc
sbb
or
imul
mov
pusha
and
movhps
ins
out
test
add
stc
or
mov
ins
mov
pushf
dec
xchg
cli
xchg
mov
xor
clc
adc
or
mov
jo
fisub
mov
adc
gs
clc
mov
loope
stos
or
mov
aad
out
retf
out
xchg
loop
(bad)
cmp
clc
rcl
outs
(bad)
jb
jmp
in
dec
mov
es
jg
int3
mov
cmps
mov
sbb
pop
cmps
xor
out
jp
fisubr
push
stc
repz
imul
mov
(bad)
fwait
retf
xchg
mov
pop
jp
inc
xor
or
pop
lahf
and
pop
movs
loope
cs
jmp
pop
cmp
xchg
lds
aas
je
shl
cmp
shl
int3
xor
test
or
rcl
scas
jnp
test
aaa
sub
xor
sahf
cli
ja
stos
xchg
pop
rol
jmp
pop
pop
rol
dec
js
shl
enter
dec
jno
scas
dec
jno
and
call
data16
sub
into
pop
out
arpl
jne
inc
cwde
shl
std
jb
rcl
mov
xor
scas
ds
mov
cs
ss
and
jnp
lods
xchg
(bad)
lahf
hlt
sahf
dec
jge
js
adc
pop
cmp
mov
call
push
loop
fcmovb
test
scas
test
adc
test
jns
outs
jbe
push
jae
verr
jns
mov
inc
mov
icebp
xor
das
out
adc
mov
adc
push
and
aas
dec
xor
mov
cwde
add
dec
fmul
stc
sbb
mov
call
mov
adc
xchg
or
sub
leave
sbb
call
loope
mov
mov
cs
mov
call
adc
xor
xchg
fwait
mov
jbe
leave
les
mov
sbb
inc
cs
and
mov
out
test
xchg
rcl
cwde
push
push
test
lods
add
dec
jmp
jb
sar
jno
add
lahf
jp
cmps
xor
mov
xor
outs
xor
cmp
jne
cmps
pop
sub
popf
pushf
mov
dec
scas
jnp
cdq
cld
movs
arpl
enter
bound
jo
cmp
or
and
into
rol
fnstcw
adc
jbe
jbe
add
cwde
mov
inc
xlat
mov
movs
dec
ret
pop
sub
in
push
ror
jg
pop
jl
jle
movs
adc
out
add
(bad)
mov
push
call
out
jmp
pop
ins
dec
test
cmc
sub
or
xchg
int3
test
or
adc
inc
cmc
fcomp
int
jg
pop
mov
test
xchg
mov
lock
imul
sub
out
fwait
xchg
mov
or
inc
arpl
add
daa
sub
test
popa
arpl
cmp
add
test
test
cld
ds
sbb
jmp
fnstcw
test
jns
xor
sbb
mov
sub
jg
lods
mov
ror
lahf
sbb
fdivr
pop
xchg
push
in
pop
ret
inc
loop
or
out
je
mov
pop
int3
fcmove
loopne
cmp
cmp
mov
fcmovbe
js
mov
test
cmps
jg
cdq
enter
ficom
or
mov
or
fcomp
xchg
mov
pop
loop
mov
xor
cmps
lock
inc
fcom
mov
mov
adc
xor
sbb
nop
cmps
in
push
pusha
adc
jae
cmps
(bad)
arpl
mov
aas
repz
jo
jno
addr16
sub
xor
push
in
data16
add
dec
jns
(bad)
xor
xor
dec
adc
adc
push
jmp
aaa
and
int
xchg
cld
xchg
xchg
jb
aam
test
ds
dec
mov
scas
xor
shl
sbb
dec
xchg
and
mov
push
ins
xor
xchg
and
sbb
cdq
sub
adc
bound
mov
repz
mov
dec
sub
sar
pinsrw
int3
rcr
push
mov
push
cs
mov
dec
bound
add
fs
cli
mov
inc
icebp
cmps
and
jae
js
loope
mov
jno
push
stos
sti
loop
adc
daa
loopne
int
adc
dec
lods
hlt
fimul
outs
test
pop
sbb
and
(bad)
or
test
sahf
mov
in
push
dec
ins
movs
mov
adc
inc
lods
repnz
mov
push
push
mov
push
popa
sti
mov
repnz
pop
mov
and
xor
mov
inc
stos
loop
xchg
mul
mov
int
sbb
push
mov
jmp
out
neg
xlat
and
jne
mov
and
mov
enter
xlat
dec
add
push
xchg
jmp
push
stc
in
adc
mov
shl
adc
xchg
dec
and
pop
jmp
loope
int3
xor
jmp
fwait
sub
out
add
xchg
(bad)
or
outs
(bad)
mov
xchg
dec
sub
std
mov
pusha
gs
out
jb
or
(bad)
mov
xor
fild
scas
and
jns
call
dec
ins
test
cmp
jnp
in
mov
dec
push
push
push
add
jbe
stos
add
popf
in
push
jb
xchg
mov
adc
fbstp
stc
test
push
ret
mov
jl
add
xor
aaa
adc
push
int
bound
push
mov
mov
aam
popa
mov
jg
jle
cmps
sbb
mov
pop
pushf
ds
xor
ficomp
enter
addr16
xchg
sahf
or
pop
dec
cmc
imul
fst
dec
adc
push
dec
ja
in
cdq
sub
sub
repnz
(bad)
mov
and
dec
and
ins
push
add
in
mov
adc
ja
pop
and
cmp
jecxz
dec
not
sar
jle
int3
nop
ror
fistp
inc
(bad)
scas
loopne
call
sbb
fcom
inc
cs
cli
dec
cmp
outs
push
fwait
or
fdiv
sub
retf
jmp
jmp
xchg
lock
inc
mov
movs
sub
leave
fld
pop
out
push
leave
add
shl
xchg
retf
jbe
nop
mov
pop
mov
scas
dec
mov
cmp
cmp
mov
push
ins
sbb
pop
pop
pop
movs
shr
jnp
fild
dec
push
cmp
lea
xchg
pushf
push
test
idiv
push
sbb
cld
xchg
and
(bad)
test
retf
pop
shl
(bad)
adc
pop
out
ins
mov
ret
fsubr
out
scas
push
xor
mov
pushw
das
js
mov
mov
loope
(bad)
pushf
mov
cmc
or
fldln2
addr16
faddp
xchg
adc
mov
pop
fwait
pop
imul
fdiv
adc
push
aaa
popa
mov
jp
mov
xchg
(bad)
inc
(bad)
sbb
push
xchg
adc
dec
int
cmp
lods
inc
shr
sbb
sbb
dec
out
int3
int3
inc
cmp
push
(bad)
push
in
pop
jno
nop
(bad)
jne
pushf
movs
cld
cmc
sub
stos
or
outs
retf
xor
sbb
fucomi
inc
test
repnz
jmp
lds
push
or
add
je
lahf
shl
pop
add
inc
lahf
lea
dec
popa
call
(bad)
cwde
bound
popa
pop
mov
aam
lods
aas
ds
sub
push
data16
fsub
cs
or
inc
xchg
mov
fs
cmc
test
sub
repnz
ss
mov
sub
pop
loope
sub
outs
push
hlt
xor
nop
mov
xor
cmovs
add
dec
stos
and
bound
mov
(bad)
mov
push
cmps
dec
cmps
and
cmps
push
sub
mov
mov
icebp
mov
and
retf
ss
mov
add
pop
push
add
test
mov
mov
push
fisttp
cli
sahf
push
sub
test
or
mov
pop
xchg
les
popf
std
pop
movs
jle
(bad)
or
idiv
dec
fimul
pop
movs
xlat
ds
sub
jb
enter
js
lock
cmp
outs
pop
mov
xor
push
stc
(bad)
xor
adc
clc
ss
lods
stc
dec
dec
jmp
push
in
fcomp
shl
out
jl
jl
sub
sar
xchg
jbe
add
xor
inc
xchg
add
bound
shl
fsubr
fs
out
pop
jmp
shr
push
(bad)
in
popf
xchg
clc
dec
push
outs
and
pop
xchg
add
(bad)
ret
ret
popf
mov
jmp
shl
push
sar
sub
iret
xor
(bad)
ins
sbb
(bad)
jge
neg
xchg
popa
or
pushf
xor
jne
fs
or
pushf
imul
sbb
pop
out
lds
mov
and
push
sub
jmp
(bad)
xor
out
pop
test
or
enter
fistp
clc
cmp
(bad)
clc
xor
lods
aad
cmc
pop
mov
rol
pop
or
cmp
fs
xchg
push
push
cmp
int3
xlat
xchg
cmp
inc
jle
mov
ins
jge
or
fcom
in
xchg
jmp
cmps
cmp
mov
adc
loope
ret
lahf
fld
inc
jmp
aam
in
leave
popa
xchg
retw
adc
mov
enter
xchg
mov
cmp
jge
sbb
cli
xor
pusha
xor
outs
pop
jb
das
iret
(bad)
out
sub
rcr
les
dec
xchg
ds
mov
ja
retf
or
gs
inc
mov
into
std
in
and
mov
sbb
inc
pop
add
mov
fdiv
rol
out
mov
xor
rol
xchg
lahf
call
pop
or
fdiv
rcl
rol
movs
mov
push
gs
into
push
push
int
mov
xchg
loopne
pop
jl
or
jg
xchg
int3
or
stos
cli
jnp
stc
pushf
aam
shl
push
xor
and
leave
out
ret
sub
mov
sub
pop
push
mov
mov
jbe
mov
add
stos
je
jecxz
int3
or
fmul
jbe
cdq
jnp
dec
cmp
pop
outs
mov
es
jmp
sbb
icebp
popa
push
clc
or
jmp
test
stos
cmp
pop
in
jb
push
je
jns
movs
imul
cmp
scas
push
push
adc
mov
mov
fiadd
dec
nop
out
pop
aaa
sbb
push
mov
fnstcw
out
pop
out
ja
(bad)
inc
mov
and
cwde
pop
sbb
mov
dec
mov
sar
shl
inc
mov
enter
jnp
fcmovbe
sbb
mov
stos
ds
test
cli
xor
push
sbb
out
adc
sahf
stos
sbb
or
imul
sub
aaa
mov
(bad)
sbb
mov
push
enter
iret
int
and
push
and
push
loop
retf
sbb
push
imul
pop
cmp
jl
mov
jp
lock
mov
xor
adc
cmps
test
aam
in
mov
pop
mov
inc
ss
or
add
cmc
mov
mov
sbb
xor
in
pop
dec
sar
cwde
sar
jp
iret
lahf
jl
sbb
movs
jg
sbb
into
mov
and
jo
sub
push
shr
jbe
sub
sahf
jns
shl
cmp
(bad)
adc
mov
ss
dec
cmp
arpl
fild
sbb
sub
add
ret
jg
sub
test
arpl
pop
pop
inc
bound
mov
mov
mov
das
stos
inc
repnz
into
sub
dec
jge
jge
stos
mov
lods
mov
dec
mov
cs
push
or
inc
movs
mov
movlps
int3
in
mov
sbb
sub
pop
mov
rol
jne
popf
jmp
push
xor
test
pop
(bad)
stos
push
xchg
cld
dec
xor
add
out
sbb
imul
outs
fs
lods
sbb
mov
iret
and
adc
inc
push
fisttp
ss
shl
jge
fimul
mov
pop
jp
pop
dec
(bad)
loopne
sbb
lea
sub
add
mov
dec
mov
test
mov
xor
fnclex
sbb
imul
hlt
(bad)
aas
mov
jl
fld
push
std
push
jp
not
test
fstp
pushf
ficomp
cli
lods
outs
fcomp
mov
mov
push
sti
(bad)
lahf
xchg
cmp
or
int
lods
loopne
jecxz
test
cmp
mov
shl
lea
push
enter
pop
mov
xchg
test
sub
mov
ins
mov
fdivp
push
and
and
stos
dec
mov
mov
pop
sbb
mov
clc
gs
lods
adc
add
scas
dec
addr16
lds
sbb
mov
mov
inc
retf
mov
sahf
jno
popf
jmp
or
mov
cdq
or
sbb
push
xchg
leave
inc
jo
bnd
rol
add
dec
into
adc
cmp
mov
or
push
jo
inc
mov
xor
xchg
dec
inc
cmp
in
dec
(bad)
adc
push
mov
les
xor
sbb
iret
pushf
push
repz
push
or
cmp
repz
arpl
icebp
ror
stc
ror
jp
dec
neg
and
adc
aam
cdq
pushf
stos
mov
cmps
je
xchg
mov
(bad)
daa
nop
pop
fsub
cmp
in
cmp
pop
stos
lds
adc
pop
inc
(bad)
sub
xchg
imul
and
sub
add
call
lods
xor
ss
mov
add
add
(bad)
test
mov
jb
jmp
daa
(bad)
enter
add
and
fistp
(bad)
jns
pop
aad
sbb
je
mov
cmc
pop
push
adc
xor
repnz
mov
(bad)
and
jns
movs
xor
retf
ror
lea
xor
adc
dec
fdivr
test
in
outs
pop
or
loop
push
iret
pop
les
and
push
std
mov
outs
data16
int
outs
ss
jmp
imul
and
or
cmp
push
out
mov
in
cmp
stos
cwde
mov
test
or
and
xchg
call
inc
nop
xchg
add
(bad)
retf
je
test
ds
adc
(bad)
push
cdq
test
add
mov
push
aad
mov
xchg
in
fucomp
mov
adc
fld
(bad)
inc
xchg
cmp
sahf
push
aam
mov
rcr
into
push
mov
clc
mov
arpl
rol
jne
push
push
out
cdq
sub
cld
adc
push
movs
test
jmp
iret
jmp
mov
pop
xchg
imul
int3
loope
lock
inc
adc
adc
jle
xchg
sbb
xor
xor
data16
add
cmp
xor
mov
ds
inc
sbb
add
push
jns
xor
inc
push
(bad)
aas
or
cmp
cdq
mov
or
(bad)
pop
mov
lea
sti
push
and
movs
int3
jmp
pop
dec
sti
cmp
mov
ret
fld
outs
xor
retf
das
jmp
cmp
cmc
outs
popf
stos
push
add
adc
in
and
rol
or
stos
loopne
ds
pop
and
inc
ffree
add
outs
sbb
mov
jae
scas
xor
lock
fwait
in
and
push
clc
pop
in
(bad)
icebp
aas
jg
arpl
retf
xchg
mov
(bad)
(bad)
in
rcl
out
imul
imul
outs
ret
(bad)
dec
mov
push
sti
push
nop
call
mov
pop
pop
mov
mov
fcom
cmc
dec
xchg
jne
stos
ja
ss
movs
mov
inc
dec
xchg
ds
rol
add
retf
shl
test
push
out
in
xor
fimul
push
sahf
ja
xor
test
xor
xor
mul
out
push
ss
cmp
lahf
cmps
mov
xchg
mov
adc
jle
mov
lods
sbb
sub
mul
shl
mov
sbb
sub
xchg
fs
sbb
mov
mov
jecxz
dec
mov
pop
jge
das
mov
rol
outs
push
out
movs
adc
mov
std
push
imul
addr16
in
push
lock
in
jae
dec
mov
cmc
pop
pop
dec
mov
xchg
aam
out
retf
adc
jno
jg
das
out
ret
push
lahf
push
jb
sub
cmp
mov
gs
add
aad
(bad)
(bad)
adc
movs
aaa
fwait
ror
sbb
cmps
test
mov
aaa
cwde
leave
or
mov
mov
mov
sub
cmp
mov
test
scas
mov
jmp
xchg
outs
retf
(bad)
aaa
cld
cmp
bnd
xchg
pop
mov
imul
addr16
rcr
aad
out
push
hlt
adc
push
cmps
mov
adc
adc
cmp
sub
(bad)
leave
in
js
inc
repz
cwde
xor
xchg
cli
dec
push
xchg
pop
aad
xlat
jmp
dec
(bad)
pop
sar
arpl
(bad)
sbb
add
xchg
xchg
xor
cmps
adc
dec
cs
mov
adc
dec
fldcw
jmp
dec
leave
(bad)
jbe
and
xlat
push
inc
inc
mov
sub
push
dec
mov
cmc
scas
fwait
inc
pop
adc
leave
sub
rcl
adc
fild
adc
in
xchg
inc
mov
dec
xor
enter
sbb
jl
leave
sub
mov
mov
and
mov
dec
mov
repz
mov
addr16
mov
fdiv
or
mov
sti
retf
push
retf
cmps
mov
jbe
rol
push
mov
out
jns
std
(bad)
jmp
cdq
or
push
scas
jl
and
out
xchg
xor
cmp
jecxz
sbb
push
gs
dec
cmp
dec
lds
cmps
mov
ret
fldcw
xchg
test
add
or
push
and
cdq
sbb
pop
cmp
stc
(bad)
scas
jp
cdq
add
and
adc
jno
data16
inc
jbe
fild
stc
and
pusha
push
into
dec
and
int3
sbb
xor
dec
test
xchg
mov
aaa
adc
loop
repnz
(bad)
shr
jnp
ret
jo
lods
loope
pop
hlt
cdq
(bad)
(bad)
cdq
adc
jmp
fs
push
xchg
in
push
push
inc
pop
pop
jl
mov
mov
sbb
nop
pop
rcr
(bad)
jmp
out
out
add
daa
mov
loop
sbb
sbb
sti
sbb
lods
sbb
jmp
jne
mov
adc
sbb
mov
mov
cmc
cmp
neg
jmp
adc
mov
xor
fidivr
jle
mov
ror
ror
pop
push
inc
ret
mov
jns
pop
stc
std
sub
mov
xor
and
dec
call
jns
add
(bad)
xor
outs
xchg
sbb
dec
push
push
call
(bad)
mov
ror
xor
retf
lds
sbb
mov
dec
pop
in
sub
xor
retf
aam
clc
mov
jno
das
or
dec
mov
and
gs
iret
add
cld
fnstcw
fbld
cmps
sar
loop
in
adc
in
lock
dec
lds
scas
push
addr16
adc
xchg
cmp
ret
cmp
aad
xchg
inc
mov
lahf
cwde
jmp
mov
cdq
movs
jo
xchg
pushf
pop
or
out
aas
neg
push
fimul
sbb
fdivr
pop
jle
jae
in
adc
mov
repz
or
(bad)
(bad)
loopne
aas
fwait
adc
and
cmp
pop
add
ds
shl
mov
(bad)
add
mov
(bad)
sbb
push
fst
sar
xchg
mov
mov
loopne
push
mov
cs
fsub
adc
shr
fisubr
mov
cmp
cmp
outs
arpl
fistp
cld
fst
mov
and
pop
loop
jmp
test
pop
and
fcomi
call
cwde
sar
inc
and
mov
rcr
mov
pop
jg
inc
xor
xchg
add
ins
clc
aas
int3
cmp
or
or
mov
in
xlat
scas
jecxz
xchg
push
pushf
lods
sbb
dec
stos
hlt
sub
pushf
sbb
gs
jno
mov
pop
fs
pop
mov
loopne
daa
xchg
data16
fisub
call
cmps
push
jecxz
out
and
test
cmc
push
xchg
idiv
add
jge
push
pop
ss
mov
sub
repz
and
lds
rcl
mov
into
or
ds
adc
pushf
jne
pushf
shl
and
loope
gs
sub
fidiv
cmp
mov
sbb
in
jle
jo
sar
inc
(bad)
jge
sar
int
es
ja
(bad)
shl
enter
pop
je
dec
(bad)
jmp
push
lahf
mov
daa
retf
cmp
sbb
add
sub
cmps
xlat
icebp
fmul
xor
sbb
lea
repz
jge
pop
fwait
sbb
leave
mov
sahf
jnp
hlt
dec
out
movs
rol
mov
lock
out
mov
mov
or
mov
fidiv
mov
popf
jmp
imul
mov
dec
lock
xor
popa
or
mov
jno
mov
into
cmc
aaa
push
aad
sbb
stos
sub
imul
out
fidiv
sar
mov
inc
adc
mov
push
ret
sbb
(bad)
enter
jl
jns
aam
callw
pop
mov
xlat
mov
push
dec
cmp
jecxz
dec
dec
xlat
sbb
mov
mov
paddd
pop
cmp
aaa
jmp
push
jecxz
jns
adc
xor
push
mov
inc
(bad)
mov
in
push
enter
nop
bound
adc
in
add
inc
in
add
sub
or
cmps
retf
int3
cmps
repz
adc
cli
inc
mov
lds
loopne
inc
cmps
test
cmps
mov
mov
iret
js
pop
jle
aaa
movs
mov
call
push
adc
(bad)
lock
cmps
pop
scas
out
outs
or
xchg
sub
or
xor
xor
jmp
fdiv
fwait
and
iret
fldcw
xor
in
pop
adc
or
lods
lock
test
retf
jecxz
pushf
(bad)
je
xor
cmp
sahf
sbb
add
inc
das
stos
pop
mov
inc
stc
mov
inc
pop
mov
cmp
std
cmp
out
int
mov
into
lahf
sub
xor
and
ins
sub
adc
jmp
fiadd
or
clc
das
pop
jl
sub
pop
outs
mov
bound
push
ffreep
push
cmp
pop
xchg
mov
shl
imul
outs
add
adc
or
dec
fs
jmp
fucom
or
sahf
retf
mov
jb
lds
(bad)
cmp
rcl
push
xchg
xor
xchg
nop
lock
lea
mov
add
ja
repnz
xchg
dec
aam
add
mov
dec
adc
xchg
mov
push
scas
cmp
or
scas
iret
dec
cmp
push
rcr
imul
ds
call
add
loopne
add
inc
fdiv
fcmovu
sub
sub
test
sbb
scas
jns
cs
jecxz
pop
jge
xor
cmp
add
push
pop
push
mov
xchg
inc
retf
bound
and
mov
in
jae
ja
mov
mov
cmp
out
pop
aaa
int3
shl
add
inc
lds
outs
mov
ror
push
jmp
cmp
(bad)
std
or
push
xor
and
jmp
pop
ins
adc
mov
mov
mov
in
cmc
mov
in
cs
jno
dec
imul
cmp
dec
cwde
or
inc
out
add
mov
adc
(bad)
mov
loop
pop
in
xchg
mov
inc
adc
fsubr
fcomp
call
lahf
jbe
out
daa
ret
call
or
inc
ins
sbb
ins
cmp
sbb
push
pop
mov
pand
adc
out
or
jl
pop
fisub
jle
sbb
in
xchg
xchg
stc
push
ror
jae
mov
fsub
mov
push
imul
sbb
jmp
cmp
sub
mov
jle
adc
repz
aaa
xchg
mov
int
pop
push
scas
jg
(bad)
push
dec
loop
xchg
push
bound
xchg
lock
cmp
sub
xchg
pop
mov
lods
cmp
xchg
sbb
in
fisttp
cmp
jae
ins
jbe
fsub
mov
ja
int3
mov
test
js
push
adc
xchg
test
xor
inc
or
loop
pusha
add
(bad)
cmp
xchg
pop
jmp
ins
mov
aad
and
pop
(bad)
and
scas
imul
(bad)
fbstp
shr
pop
popa
push
cmps
mov
xchg
(bad)
cmp
arpl
and
rol
and
mov
sbb
scas
in
pop
arpl
jnp
and
and
es
sub
sbb
sub
cmp
(bad)
popa
cmc
repnz
(bad)
mov
mov
fcmovnb
outs
sbb
hlt
popa
and
ds
aad
add
sub
inc
call
test
ret
cmp
not
ss
sbb
adc
mov
push
imul
jo
add
ret
sub
sar
sbb
inc
mov
push
xor
movs
sub
xor
bound
test
add
fisubr
mov
or
jmp
xor
cmp
sub
mov
xor
scas
pop
pop
nop
lock
adc
icebp
es
call
fimul
rcr
jmp
loopne
push
dec
and
jae
xchg
jae
mov
cmp
adc
fwait
pushf
(bad)
bound
push
imul
in
fs
and
pop
imul
push
pop
add
mov
repnz
or
repz
inc
mov
xchg
sahf
pop
repnz
dec
push
cmp
call
and
jp
js
rcr
ins
mov
push
ds
test
adc
mov
ss
stc
jne
(bad)
in
aas
add
in
pop
aaa
scas
or
push
mov
push
push
out
xlat
int
out
(bad)
mov
scas
mov
cmpxchg
into
lahf
mov
xchg
cmp
loopne
add
pop
test
fst
cmp
sub
test
inc
mov
mov
dec
(bad)
push
dec
jmp
sub
sbb
xor
jo
into
inc
jmp
mov
(bad)
stc
repnz
xor
mov
sar
sub
in
paddsb
test
jb
shr
int3
test
jb
ins
mov
test
repz
fiadd
cwde
in
dec
js
fwait
call
inc
sbb
div
and
xor
mov
inc
aas
hlt
in
jecxz
dec
sti
and
inc
call
test
jg
sbb
mov
xor
and
bound
out
dec
out
inc
push
cmps
jns
inc
imul
les
test
in
test
shl
mov
xchg
mov
jmp
sub
outs
test
fs
push
mov
ja
and
imul
xor
push
ret
jns
ja
add
mov
xchg
loope
push
jecxz
sub
push
pop
xchg
sbb
inc
add
push
ret
mov
jecxz
int3
imul
sub
mov
pushf
jmp
out
push
push
jmp
fldcw
dec
cmc
ins
fstp
int3
lock
push
scas
add
sbb
lahf
cwde
pop
cmp
jge
out
lods
jns
ja
cmc
xchg
push
enter
movs
js
adc
call
call
test
sub
pusha
pop
sub
outs
mov
movs
cld
data16
ins
sti
push
mov
cmp
inc
cmp
retf
jo
pop
mov
retf
cld
je
mov
pushf
xchg
pop
xchg
fcomp
mov
dec
repz
jbe
sbb
ss
pop
aaa
mov
bound
jmp
add
jae
sbb
imul
in
aad
xor
repz
ss
adc
dec
aaa
test
cmps
pop
push
dec
rol
es
cli
xchg
sar
xor
inc
or
push
jg
mov
out
dec
retf
push
repz
mov
int3
adc
cld
fsubr
es
dec
dec
lods
pop
in
add
bound
ja
(bad)
das
rol
ret
mov
mov
push
jb
cld
test
jp
fucomi
inc
movs
ret
mov
repz
pop
fucomip
pop
mov
sahf
js
pop
mov
repz
dec
call
ja
adc
clc
add
inc
pop
loopne
aas
mov
xchg
std
int3
into
leave
cli
add
or
xor
popa
add
(bad)
out
aad
icebp
vmovaps
lods
dec
cmp
std
call
or
dec
or
fdivr
mov
push
push
(bad)
sub
add
dec
in
test
push
adc
pop
sub
mov
adc
(bad)
scas
dec
fnstcw
and
fcomp
inc
loope
sbb
call
iret
in
inc
dec
and
push
push
lods
rcl
into
push
icebp
inc
add
imul
mov
xor
sar
or
scas
dec
and
repz
or
jnp
push
sub
mov
mov
movs
jmp
stc
cdq
pop
and
xchg
push
jmp
ss
lods
adc
mov
sub
test
lea
in
movs
retf
inc
(bad)
idiv
movs
mov
in
fwait
popa
jp
sub
addr16
or
popa
lods
pop
lods
cli
push
pop
pusha
inc
pop
dec
xlat
iret
imul
push
or
loopne
mov
add
jo
or
dec
mov
scas
or
cmp
xchg
add
mov
rol
sub
inc
sub
verr
ficomp
and
jne
leave
push
xlat
(bad)
das
movs
dec
inc
stc
xchg
daa
adc
push
mov
dec
stos
sbb
scas
mov
cmp
mov
push
arpl
mov
mov
je
sahf
sub
cmp
mov
(bad)
xchg
mov
add
cmp
cmp
les
iret
inc
or
mov
mov
mov
jae
xor
cs
idiv
push
add
jae
sbb
fwait
ins
mov
and
mov
shl
pop
in
jne
sbb
mov
jne
jns
clc
mov
adc
jno
jmp
push
adc
fdivp
fwait
pop
adc
rcl
imul
loop
xor
repnz
retf
mov
xchg
data16
gs
adc
xor
xchg
cli
inc
xchg
pop
ds
cmp
ins
push
lock
xchg
pop
and
in
sub
and
les
adc
pusha
xor
cmc
mov
xchg
or
cmp
mov
shl
movs
dec
adc
dec
fist
test
dec
sahf
mov
nop
popa
jp
adc
in
ja
sahf
in
mov
xchg
push
jo
mov
xor
mov
mov
jp
or
aam
repnz
inc
lods
jl
mov
mov
xchg
jge
out
jmp
fsubr
adc
sti
dec
jle
gs
dec
adc
daa
mov
aas
enter
popa
sub
(bad)
aam
test
or
pop
sbb
and
mov
push
adc
mov
in
(bad)
or
cdq
fs
je
pop
inc
mov
pop
aam
or
mov
adc
push
jo
data16
arpl
mov
pop
cld
lea
out
iret
inc
jle
inc
mov
add
sbb
pop
jle
loop
dec
add
mov
fxch
push
push
push
pop
dec
and
in
or
mov
or
inc
imul
and
jecxz
mov
iret
or
mov
daa
xor
add
xchg
jmp
and
pop
dec
aam
lea
js
jnp
icebp
pop
aad
sub
adc
inc
lock
cmps
pop
inc
add
int3
inc
cmp
and
cmc
ss
movs
rcl
shl
loopne
fadd
sti
(bad)
and
retf
adc
pop
sbb
in
sub
jge
data16
push
jl
dec
jmp
push
(bad)
pushf
inc
movs
or
test
lock
jno
push
xchg
pusha
xor
pop
sbb
or
outs
ret
in
sbb
sub
push
mov
pop
dec
cs
in
pusha
adc
add
jge
xchg
div
js
jecxz
sbb
mov
cmp
push
inc
mov
call
sbb
sbb
sub
dec
sbb
sub
xchg
aam
xor
mov
out
sbb
mov
mov
js
xchg
adc
lea
inc
jp
hlt
movzx
iret
or
xchg
mov
mov
pop
or
popf
xchg
and
jns
cli
jmp
sbb
fdivp
push
bound
imul
pop
xor
fimul
cmps
sub
push
imul
ss
sub
mov
movs
xchg
jae
test
test
xlat
icebp
aas
push
test
and
dec
fimul
push
adc
pop
mov
push
enter
in
pop
pop
jmp
mov
call
add
les
or
cld
cmp
loopne
inc
adc
retf
xchg
mov
mov
dec
pusha
imul
jp
mov
es
pop
(bad)
scas
or
in
mov
and
into
push
mov
fadd
ins
pop
out
inc
mov
call
repnz
push
push
xlat
loope
into
and
mov
xor
jns
pop
outs
sub
outs
xchg
push
mov
jecxz
sbb
stos
mov
(bad)
aam
imul
sub
aam
pop
jg
ds
mov
mov
mov
out
xchg
dec
int3
cmp
adc
and
adc
out
jmp
test
in
imul
sub
int
imul
jns
mov
test
xchg
ret
out
push
adc
ret
test
scas
rol
inc
fsub
lock
add
fadd
icebp
fild
fstp
mov
ja
mov
mul
mov
jbe
sahf
nop
lods
xor
out
int
push
stc
or
pop
dec
cmp
mov
mov
inc
fnsave
and
into
pop
sbb
ss
cmp
gs
sub
inc
ret
sub
(bad)
jbe
jbe
and
bound
add
neg
bound
mov
scas
stos
push
loope
ds
mov
out
adc
sbb
shl
into
jbe
mul
inc
cmc
or
test
mov
push
in
sahf
push
mov
push
sub
sub
inc
xchg
mov
add
or
inc
lods
add
leave
xchg
dec
xor
pop
xchg
movs
add
xor
xchg
adc
sub
nop
pop
fmul
sub
ret
jo
pop
mov
inc
test
(bad)
fstp
cmp
ret
lods
mov
sbb
xchg
push
test
sahf
mov
xchg
sub
pop
cmps
inc
mov
repz
or
jae
out
sub
ss
out
jle
inc
lods
aas
cli
mov
pop
test
test
push
cs
mov
cmp
cwde
push
sbb
or
mov
pop
inc
(bad)
movs
jo
or
inc
mov
dec
in
mov
lods
and
mov
fnsave
add
mov
je
push
mov
mov
daa
mov
es
adc
repnz
and
pusha
stos
gs
nop
loope
sub
lds
lock
ror
inc
(bad)
shl
dec
test
scas
icebp
fwait
adc
sub
inc
loopne
mov
mov
enter
(bad)
int
inc
pop
xchg
xor
data16
mov
dec
push
mov
mov
jle
in
mov
jbe
ins
mov
fidivr
pop
jne
lods
addr16
push
jmp
mov
cmp
or
pusha
movs
fistp
mov
add
push
repnz
mov
mov
mov
jnp
sub
cs
ja
jle
pop
ret
xchg
adc
ror
dec
xlat
lds
aas
outs
cmp
xlat
mov
xlat
lock
aas
in
dec
inc
xchg
retf
pop
adc
sbb
dec
pop
adc
push
popf
mov
(bad)
push
fadd
adc
dec
aas
and
mov
(bad)
fldenv
loope
mov
and
or
daa
fdiv
mov
mov
xchg
sub
lods
cmp
mov
xchg
cmp
into
and
pop
ffreep
shl
mov
xor
mov
dec
push
repz
mov
stos
and
daa
push
cmp
dec
xchg
xor
or
popa
test
fst
inc
cmp
pop
in
std
mov
add
jae
out
in
jmp
ins
ret
or
jecxz
pop
movs
gs
cmp
add
mov
pop
pop
or
push
out
pop
mov
xor
add
add
mov
stos
retf
out
sbb
not
pop
sbb
mov
fmul
push
movs
dec
out
inc
lahf
gs
gs
ja
xchg
movs
or
or
push
dec
or
ret
test
and
sub
jge
jo
pop
sub
push
adc
in
xor
or
pop
mov
ror
out
and
(bad)
fcomp
rcl
dec
inc
test
sub
retf
sbb
iret
ficom
or
dec
jle
dec
jo
inc
jb
xor
addr16
movs
mov
repz
dec
les
jl
fidiv
lods
rcl
xchg
xchg
xchg
jp
push
in
cmps
pop
push
sbb
adc
pop
jne
outs
adc
(bad)
popa
retf
xor
jbe
lods
adc
repz
adc
push
cmc
ret
int3
xchg
jae
dec
mov
xchg
dec
fldcw
and
inc
add
test
sar
xor
movs
js
inc
fsub
adc
xchg
push
int
aaa
mov
mov
cmps
dec
cmps
mov
cmps
in
push
pop
xor
jnp
adc
sar
mov
outs
mov
xor
in
(bad)
test
mov
lods
cmp
jmp
inc
push
pop
(bad)
jno
add
jns
fwait
xchg
cs
lods
push
add
add
xchg
or
icebp
add
loopne
sti
(bad)
add
or
mov
cmp
or
lds
mov
push
in
leave
ins
sbb
loop
ins
aas
push
xchg
lea
pop
imul
mov
dec
dec
xchg
adc
pusha
imul
xchg
ror
(bad)
dec
popf
add
sbb
sub
sti
imul
shl
push
jno
xor
xor
fucomip
pop
mov
add
fcmovnbe
xchg
ins
shl
(bad)
mov
mov
dec
mov
jae
push
mov
lahf
movs
aad
ins
jb
mov
jb
ret
lods
retf
mov
ins
xlat
retf
cmp
stc
aam
fsubrp
or
and
add
mov
rcr
rcr
cwde
lods
or
addr16
cmp
xor
and
sbb
push
add
adc
fadd
shl
xchg
adc
inc
jecxz
jmp
adc
and
jecxz
dec
sbb
mov
or
mov
xchg
push
jp
jmp
jo
aas
imul
fs
pop
push
push
adc
sbb
sub
or
shl
loopne
and
mov
or
jno
pop
stos
xchg
inc
dec
add
das
sbb
fimul
movs
fcmovb
mov
push
test
cmp
dec
sub
and
enter
fild
cmc
(bad)
(bad)
xor
add
mov
jmp
cmp
(bad)
push
sbb
ror
mov
fnstcw
(bad)
std
xor
ret
(bad)
loopne
imul
adc
call
fsub
xor
scas
adc
mov
out
inc
lahf
pop
cmp
and
(bad)
pop
sub
cmp
jl
and
push
inc
cmp
push
sar
push
fidivr
fcom
rcl
xchg
add
repz
retf
sub
sub
xor
shr
fist
rcl
jnp
xchg
push
ds
jno
pop
mov
and
mov
inc
jmp
and
scas
push
and
sub
mov
ins
mov
jne
mov
shl
pop
(bad)
mov
fstp
data16
call
ror
xor
dec
ror
in
xchg
leave
xor
mov
push
jbe
and
movs
jno
cwde
or
xor
stos
sub
inc
fist
ret
cli
scas
jmp
or
adc
sbb
sub
mov
add
call
(bad)
fcmovne
pop
or
in
(bad)
cmp
lds
jp
mov
inc
fimul
ret
ins
push
xchg
mov
lea
inc
sbb
out
jae
sti
jo
push
loope
test
mov
into
xchg
cwde
mov
mov
fs
retf
(bad)
jmp
mov
mov
cmp
and
in
aam
dec
xlat
scas
fs
cli
mov
in
fdivr
mov
sbb
push
ins
mov
mov
sub
out
push
push
adc
es
bound
(bad)
iret
call
(bad)
jmp
lock
movs
dec
jb
pop
lock
mov
out
test
pop
mov
imul
loopne
xchg
ja
pop
inc
shr
idiv
sbb
push
xchg
push
and
jecxz
mov
mov
sub
je
mov
out
pop
mov
repnz
std
pop
cmps
dec
inc
xor
jecxz
jmp
mov
or
stos
jmp
mov
dec
mov
cmp
jmp
lods
dec
adc
sub
repnz
inc
aad
aad
push
addps
popf
ret
aad
je
popa
adc
test
fst
fcom
jbe
add
retf
mov
adc
mov
sub
into
neg
adc
bnd
mov
outs
loop
mov
jnp
int3
aaa
dec
jge
shr
(bad)
mov
in
dec
lds
jmp
fisub
cdq
xchg
(bad)
fcmove
aaa
sub
xchg
out
pop
push
outs
add
cld
loop
push
mov
stos
xor
out
rcl
and
mov
or
mov
out
in
cmp
idiv
fadd
jl
rcr
and
pop
leave
lahf
out
ds
xor
add
push
fwait
sbb
pop
xchg
mov
push
cmp
or
and
adc
mov
test
loope
sbb
add
mov
(bad)
fadd
cmps
inc
cmp
bound
and
cmp
jb
test
and
ss
mov
mov
in
(bad)
scas
sub
je
jp
pop
into
scas
(bad)
xchg
xor
pop
sbb
or
push
loop
and
dec
sahf
movs
js
retf
xchg
stos
dec
loop
dec
stos
test
add
jle
sahf
das
xchg
mov
cmps
xor
aas
adc
xchg
fisttp
shl
mov
and
sub
(bad)
popa
enter
adc
xor
xchg
sub
ss
cmps
or
and
dec
ins
fstp
dec
movs
jmp
sbb
and
pop
lods
test
mov
cdq
jne
arpl
stos
add
inc
cmp
dec
bound
jne
aad
aas
sti
cmps
xchg
xchg
je
call
loop
add
fisubr
adc
jns
fcmovb
rcl
repz
adc
ret
or
data16
pop
scas
aad
outs
int3
inc
mov
ins
ins
mov
xor
pop
shl
scas
(bad)
cs
sbb
ret
int3
(bad)
scas
xchg
enter
mov
inc
arpl
push
mov
out
push
and
call
dec
xchg
adc
pop
jmp
es
xor
icebp
pop
and
in
or
sbb
sqrtps
outs
in
call
mov
pop
xchg
aam
or
xchg
pop
pop
das
arpl
cmp
jge
mov
and
push
or
dec
xchg
dec
in
ror
(bad)
cmp
dec
jo
adc
jle
cmovb
add
cmps
xchg
adc
jecxz
fwait
pop
cmp
test
std
retf
scas
xor
retf
sbb
inc
test
out
aaa
pop
jp
or
jmp
cmp
inc
stos
test
push
cmp
mov
movs
jmp
jmp
sbb
out
retf
fnstsw
call
mov
mov
xchg
xor
fadd
arpl
xchg
in
pop
dec
sub
movs
adc
lods
test
into
xchg
inc
pushf
mov
xchg
lds
jno
mov
xchg
aas
xor
jae
(bad)
int3
mov
pusha
adc
sub
pop
and
imul
nop
imul
push
les
fimul
mov
dec
arpl
loope
retf
call
jbe
mov
cmp
inc
aas
aas
or
pop
cmp
std
(bad)
fld
inc
fsub
sub
jmp
sub
dec
fstp
call
add
in
push
adc
cmps
pop
cmp
push
push
ins
popf
sub
jp
sbb
das
je
pop
mov
or
inc
std
(bad)
stc
mov
aam
sbb
pop
mov
xor
jecxz
xchg
scas
repz
push
inc
js
sbb
push
adc
mov
je
jno
mov
ds
gs
not
cmp
jne
push
or
leave
sub
cld
push
clc
xlat
popa
repz
stc
fs
out
(bad)
sub
fwait
popf
js
sbb
inc
inc
push
adc
adc
(bad)
mov
lea
sar
push
push
test
cmp
sub
cmp
addr16
inc
(bad)
aam
push
dec
pop
cmp
loopne
in
mov
mov
(bad)
jmp
xchg
pusha
fs
sbb
movs
ja
inc
shl
inc
js
pushf
rcr
jno
xchg
xor
add
or
sub
daa
cmps
inc
xchg
jae
xchg
lds
stc
cmp
push
xchg
cmp
xor
ins
shl
in
mov
and
clc
test
xchg
sub
jg
retf
or
mov
mov
pop
mov
cli
movs
mov
push
or
xlat
or
stc
mov
imul
adc
sub
in
xor
leave
dec
cmp
adc
das
adc
in
test
mov
xchg
dec
push
ja
xor
and
sbb
shl
xchg
cwde
pop
sbb
pop
rol
dec
mov
jno
enter
pusha
xchg
lods
add
sub
ficomp
xor
addr16
stc
mov
lea
sbb
mov
push
and
inc
inc
xor
sub
ror
mov
imul
or
into
or
rol
loop
ins
retf
or
xchg
mov
std
(bad)
xor
jo
shr
test
push
jg
popa
mov
daa
cmc
dec
popf
cdq
es
xor
jge
or
add
jno
push
or
mov
mov
mov
clc
aad
or
push
or
loope
add
pop
or
ret
mov
mov
data16
cmp
aad
inc
or
jae
cmp
sahf
add
test
(bad)
jae
scas
jp
es
or
aam
cmp
xchg
mov
jg
lods
jnp
xor
in
out
jns
dec
sti
in
(bad)
outs
bound
cli
xchg
imul
pop
idiv
sar
mov
fwait
test
je
ds
jg
pop
aad
cmp
test
test
jne
jmp
mov
aad
retf
mov
adc
ror
test
outs
or
mov
dec
mov
jmp
dec
dec
shl
cmps
sub
popf
pop
mov
lods
test
adc
jns
or
into
mov
mov
fbld
inc
inc
ss
lods
in
outs
cmp
push
sbb
mov
mov
imul
pushf
xor
arpl
aaa
cmp
inc
inc
mov
push
or
xor
fistp
imul
inc
pop
fmul
std
mov
ret
movs
xchg
sahf
(bad)
(bad)
test
or
mov
sub
or
loope
inc
sub
mov
cmc
pop
sti
leave
add
sub
or
adc
dec
jne
mov
xchg
push
test
aaa
popf
mov
xor
iret
stc
(bad)
rcr
test
imul
xor
push
dec
outs
xchg
neg
inc
(bad)
enter
iret
jg
pop
inc
test
sbb
(bad)
out
push
xlat
or
movs
lods
call
inc
jg
mov
aaa
mov
shr
in
xor
xor
cmps
xor
inc
je
xchg
cmc
rcr
mov
push
cmp
test
rol
aad
clc
push
sbb
cmps
ss
mov
(bad)
sub
xor
clc
or
cwde
arpl
sub
ja
cmp
adc
cli
shl
jne
sbb
fild
xor
imul
and
push
iret
stos
and
jge
popa
aas
mov
jmp
add
stos
scas
fwait
jmp
icebp
inc
push
sbb
ins
xchg
dec
mov
add
lods
adc
sbb
adc
sbb
in
mov
jecxz
fmul
jo
sbb
sub
mov
lahf
(bad)
sub
xor
mov
inc
push
sub
cld
idiv
mov
das
jmp
cmp
js
in
nop
cmc
mov
xor
push
cwde
push
inc
jne
dec
sbb
mov
add
mov
sub
add
adc
jecxz
mov
cs
leave
fnsave
push
pop
sbb
neg
popa
rcr
imul
mov
push
fisttp
xchg
mov
push
cli
jns
inc
inc
jb
cwde
mov
call
js
add
mov
pusha
cld
out
ror
out
aas
frstor
imul
out
retf
sbb
push
stos
pop
jo
jge
fst
push
pop
push
dec
(bad)
out
push
or
arpl
aad
cmp
fcom
xchg
out
repz
dec
lods
jmp
or
or
xchg
cdq
(bad)
das
shr
(bad)
jmp
or
cli
lock
sub
out
add
rol
jo
pop
popfw
or
xchg
imul
(bad)
sub
int
out
add
push
inc
mov
sbb
in
xchg
out
mov
jmp
div
mov
cmp
(bad)
cmp
mov
push
test
xor
pop
cmp
enter
cmp
mov
push
imul
in
adc
mov
pop
mov
mov
mov
bswap
or
add
loop
gs
dec
push
ins
adc
cmp
test
test
jp
or
dec
jae
outs
lahf
and
test
pop
jmp
dec
(bad)
and
push
mov
sbb
fisub
in
dec
ds
adc
push
test
and
arpl
in
pop
cmp
mov
mov
and
lods
stc
aaa
aad
cli
imul
adc
inc
jmp
mov
rcr
in
xchg
sub
xchg
inc
jno
push
cmp
and
icebp
int
mov
nop
xchg
or
ja
addr16
imul
dec
jl
rcr
pop
mov
cmps
push
stos
jae
aaa
loopne
xor
sbb
pop
sbb
push
or
sti
popf
lea
popa
sbb
sbb
mov
push
hlt
hlt
in
lods
sar
(bad)
pop
or
xor
xchg
dec
hlt
mov
sub
dec
xchg
and
ret
jns
ss
xor
cdq
fs
xor
cmp
sti
lea
stc
movs
add
fwait
loop
imul
ret
in
imul
or
arpl
loop
sub
cld
(bad)
mov
(bad)
(bad)
(bad)
jmp
mov
jnp
repz
aad
sub
sar
xchg
pop
jnp
xchg
test
xchg
data16
jl
sbb
sub
jmp
jmp
or
sbb
xchg
outs
push
repnz
fistp
mov
jnp
mov
adc
stos
sbb
and
ror
js
push
int
mov
ror
imul
add
or
inc
jp
sub
cmp
out
xchg
fldenv
in
in
iret
mov
jo
sbb
push
xor
pop
scas
outs
mov
adc
adc
mov
jge
(bad)
std
fstp
mov
lds
cmp
xchg
lods
out
cmp
fdivr
sbb
popf
xchg
jmp
add
jle
js
outs
inc
inc
push
mov
or
xchg
push
add
lea
jb
mov
push
mov
push
not
fsub
xor
fs
(bad)
mov
repnz
adc
in
dec
pop
add
and
adc
aam
test
jns
stc
fsub
add
sbb
jne
lea
fmul
cmp
imul
cmp
jnp
mov
js
fwait
in
cs
out
test
jg
pop
mov
xchg
repnz
cmp
shl
test
lods
(bad)
jae
icebp
ret
xchg
enter
adc
sbb
push
xor
pop
mov
add
(bad)
rcl
mov
push
or
mov
jnp
sbb
ds
not
mov
mov
add
cmp
mov
jno
mov
jmp
not
cwde
arpl
push
xchg
jge
mul
add
inc
mov
mov
inc
mov
out
xchg
repz
iret
pop
jb
ja
xchg
jno
cmp
jo
clc
outs
mov
icebp
pop
es
scas
inc
mov
data16
scas
xor
push
push
and
loop
call
jo
push
mov
push
lods
sbb
cwde
enter
cmps
push
jmp
jle
cmps
fisttp
and
shr
(bad)
rol
sti
lahf
mov
mov
lds
sbb
loope
sub
loope
inc
stc
cmp
ficomp
jecxz
jmp
pop
push
xchg
sete
stos
pop
dec
pushf
push
adc
shl
mov
add
push
pop
fldenv
inc
dec
mov
shr
sub
(bad)
mov
jecxz
fiadd
dec
sub
pushf
cmp
stos
leave
imul
js
pop
mov
imul
jno
test
retf
test
inc
mov
test
jo
movs
mov
cs
and
repz
das
or
xchg
or
call
or
popa
cld
sbb
retf
fs
inc
fsubr
sbb
enter
pop
daa
aas
outs
push
out
call
adc
fisubr
icebp
cmps
int
outs
sbb
rol
mov
mov
aam
mov
ins
retf
loope
sub
fnstcw
sbb
addr16
shl
fcmovnu
js
jl
jo
sub
cs
mov
test
add
fs
jne
lahf
daa
aad
or
movs
add
das
push
pop
sbb
push
(bad)
sti
mov
mov
data16
adc
mov
dec
cmp
retf
sbb
mov
ret
jae
test
mov
das
repz
int3
mov
xor
xor
mov
in
mov
and
mov
arpl
outs
inc
cmp
and
in
dec
dec
mov
sub
and
gs
push
jmp
xchg
sub
(bad)
loopne
inc
test
xor
sub
or
sub
popf
jmp
mov
enter
(bad)
stos
sbb
push
xchg
rcr
mov
and
aaa
mov
cmp
jmp
mov
dec
clc
xchg
add
inc
das
(bad)
stc
and
add
das
dec
cli
retf
fcomi
imul
mov
inc
mov
jb
addr16
jl
xor
sbb
sub
fs
mov
ins
aas
cmp
sbb
jnp
es
jae
int3
nop
xor
jbe
or
repz
pushf
into
ret
mov
in
mov
in
sub
mov
xchg
sbb
aam
pop
out
(bad)
push
ins
aaa
test
jae
dec
inc
push
xchg
mov
push
inc
out
pop
jmp
les
je
adc
mov
imul
mov
xor
sub
iret
cmp
inc
cmp
mov
fs
aam
pop
call
jae
push
and
dec
jg
aas
sbb
lea
sbb
inc
test
pusha
add
out
and
test
in
ins
clc
pop
not
mov
loop
pop
stos
push
sbb
jle
arpl
iret
jne
gs
jmp
push
(bad)
aad
in
jp
sub
xchg
sub
pop
fdiv
ja
cwde
jb
dec
jno
and
test
stos
mov
cmp
dec
mov
fwait
pop
daa
loopne
nop
inc
and
xlat
dec
inc
xchg
scas
cmp
ja
mov
sub
push
mov
push
push
cmp
gs
and
or
xor
and
xchg
and
push
sub
ficomp
inc
gs
pop
jle
sbb
nop
imul
gs
pop
ja
aad
gs
hlt
out
pop
jmp
enter
sub
push
movlps
ins
addr16
dec
cmp
in
(bad)
cli
sub
outs
push
sub
push
aas
adc
xchg
div
mov
cmp
push
jg
fstp
out
das
jbe
pop
arpl
dec
jnp
iret
and
cmp
dec
mov
fmul
and
retf
in
inc
fwait
push
cmp
push
test
xor
mov
push
cmp
cld
popa
push
data16
out
cli
jle
mov
push
sub
cmps
call
add
outs
add
sbb
jge
stc
and
retf
xor
gs
push
sub
stos
retf
dec
mov
das
push
sbb
std
xor
push
add
jno
mov
and
rcl
out
dec
pop
lds
push
in
pusha
scas
aaa
mul
add
jge
adc
call
jnp
out
add
stc
push
es
stos
and
push
cdq
fidiv
dec
or
ins
repnz
leave
adc
xor
xchg
bound
adc
lock
jns
ror
push
iret
daa
xor
aas
fs
std
lock
xlat
in
jl
xor
adc
test
inc
dec
mov
adc
add
inc
imul
imul
add
ds
xor
loope
jg
test
int3
inc
cmp
cld
or
call
ret
cmp
stos
inc
sub
in
adc
sahf
ret
jp
(bad)
xchg
movs
add
out
sti
(bad)
mov
mov
ds
push
jg
lock
xor
mov
mov
mov
(bad)
in
cld
idiv
adc
enter
xor
mov
jbe
(bad)
sahf
dec
jae
mov
das
retf
mov
sub
cdq
paddb
out
cmc
das
and
xchg
rol
rcr
ret
or
vpmacsdqh
pop
setle
scas
push
xchg
ja
xor
sub
mov
loope
push
lods
push
sub
aam
mov
inc
and
push
xor
jae
adc
dec
sahf
pop
fistp
daa
movs
mov
pop
cmp
push
push
stc
push
stos
push
movs
aaa
sub
adc
cmp
and
fild
push
shr
je
mov
jl
pop
inc
xchg
(bad)
out
mov
jbe
mov
(bad)
cld
dec
xor
repnz
aam
sbb
add
aaa
sub
pop
outs
pop
jle
add
mov
inc
push
out
out
ss
add
retf
push
gs
lahf
icebp
xchg
ficom
mov
pop
int
(bad)
sbb
ins
xchg
pop
sub
xchg
pop
scas
cld
fisub
ins
fcom
sti
dec
ins
push
adc
sub
call
ret
xchg
loopne
mov
jge
test
in
and
sbb
push
in
shl
fmulp
jg
xor
mov
test
adc
add
inc
ja
cmp
add
sbb
das
stos
sbb
fcmovnbe
mov
mov
xchg
or
(bad)
mov
pop
fadd
or
(bad)
push
fnstenv
mov
rcr
push
or
add
or
mov
call
in
(bad)
dec
js
xchg
outs
jo
je
mov
ret
sub
and
test
mov
ret
xor
push
gs
sti
or
cmps
(bad)
in
cmp
sar
retf
inc
and
sar
mov
mov
ficom
or
test
push
cmc
in
cwde
push
icebp
mov
out
bound
cmp
shl
bound
push
cmp
or
jg
mov
stos
mov
xchg
cwde
cmp
fadd
push
mov
std
mov
ret
or
in
sar
bound
daa
cwde
jmp
scas
retf
retf
xchg
pushf
loop
dec
pop
cmps
dec
test
jmp
call
cmp
inc
and
sub
and
repz
addr16
mov
jle
sti
mov
in
mov
sub
pop
xchg
add
push
push
js
cmp
popf
xchg
pushf
mov
pop
sti
or
mov
aas
pop
pop
pop
inc
call
adc
mov
sti
pop
pop
push
call
pop
mov
push
jp
cld
sar
inc
call
sbb
cmc
mov
push
lods
jno
and
sbb
cmp
inc
test
fcom
sbb
adc
lea
jbe
test
xor
jg
dec
sbb
pop
jno
leave
pop
shl
jbe
mov
mov
imul
fdiv
lods
cli
lahf
in
push
inc
sub
dec
nop
stc
in
push
mov
or
ja
push
sub
or
enter
cmp
fadd
xor
shr
sub
ret
leave
jp
cmps
xor
cld
jl
sub
(bad)
pop
sub
adc
(bad)
popf
mov
arpl
mov
cld
lods
xchg
ucomiss
cli
add
cmp
call
ins
movs
jo
fs
fsubr
pusha
jg
jecxz
mov
call
sub
mov
mov
fcmovnbe
aaa
jecxz
and
fmul
push
xchg
aas
mov
mov
ror
mov
aaa
lods
ror
jae
(bad)
pusha
lahf
push
in
and
mov
mov
test
pop
repnz
push
pop
jmp
sbb
mov
test
mov
pushf
movs
xchg
out
sub
and
cmp
rcr
and
ss
ins
xchg
test
push
ret
xor
jmp
mov
jns
add
jnp
xchg
in
lods
aaa
pop
pop
adc
mov
mov
addr16
cmc
ret
jg
das
cmc
(bad)
cmp
push
xchg
js
(bad)
mov
data16
fcmovnb
es
push
pop
jp
ds
stc
sub
inc
or
jno
shl
sub
inc
add
xchg
movs
and
mov
dec
sbb
movs
fist
mov
and
mov
jl
popf
dec
in
pop
xor
mov
pop
fidiv
inc
mov
jb
mov
or
sahf
and
icebp
les
jne
mov
dec
jle
mov
jno
jbe
xchg
mov
pop
fs
inc
lea
jmp
xor
mov
mov
and
loopne
loopne
cmp
xchg
pop
es
sub
std
add
lea
or
dec
ss
pop
mov
iret
mov
dec
lods
jbe
cmp
inc
scas
mov
inc
inc
adc
outs
call
ret
mov
xor
xchg
dec
mov
jecxz
adc
sbb
inc
jmp
inc
mov
pop
stc
xchg
shl
jns
fiadd
call
cmps
js
add
(bad)
out
popa
dec
xor
clc
mov
mov
arpl
cmps
push
gs
iret
dec
adc
leave
adc
xchg
push
jno
pop
je
xchg
cmps
fnstenv
jnp
movs
and
inc
(bad)
and
pop
fistp
jmp
popa
and
mov
dec
jae
dec
or
cwde
ror
add
fwait
pop
inc
ss
xor
test
fwait
add
xor
and
outs
pop
mov
fsub
xchg
mov
repz
fldenv
cmc
mov
inc
lds
pop
lea
fnstcw
sub
mov
sbb
fisttp
mov
adc
inc
(bad)
jmp
(bad)
movs
pop
jge
mov
dec
mov
mov
xchg
push
mov
dec
repz
push
scas
pop
rcr
and
push
mov
fisub
cmp
mov
inc
sar
xchg
jmp
sar
gs
jb
repz
pop
lods
sti
cli
mov
fild
pop
lahf
mov
fbld
idiv
mov
adc
xor
iret
sbb
retf
mov
popa
cmp
hlt
mov
loop
ss
pop
mov
mov
dec
mov
lods
mov
xor
pushf
(bad)
icebp
fwait
mov
mov
or
test
and
dec
add
mov
(bad)
mov
loopne
movs
mov
sub
ja
in
mov
or
pop
mov
xchg
inc
mov
cmp
enter
cmps
push
jmp
adc
mov
gs
mov
call
push
cmc
push
sub
jbe
or
push
rcr
jo
adc
dec
test
sub
sbb
bound
hlt
inc
sar
dec
dec
fidiv
stos
and
sbb
div
pushf
nop
add
pusha
popa
stos
movs
arpl
cdq
push
call
jmp
pushf
pop
ror
fnop
inc
add
mov
cmc
or
adc
sub
(bad)
mov
ss
xlat
adc
int
or
fwait
mov
stc
pop
adc
cmc
mov
pushf
mov
mov
jg
out
adc
and
les
sbb
das
mov
mov
jne
or
cmp
inc
jns
or
fwait
add
rcr
loop
mov
fnstcw
adc
jb
pop
xlat
inc
outs
cdq
jmp
mov
jne
les
hlt
jecxz
sbb
xchg
imul
fist
add
xor
or
pusha
stc
cmps
xchg
stc
int
cmp
(bad)
pop
jo
dec
daa
fisubr
adc
movs
push
mov
adc
lods
stos
xchg
add
sub
push
xor
mov
add
addr16
mov
call
pop
xor
addr16
push
inc
movs
aas
pop
jmp
mov
inc
aam
sahf
ins
jnp
jl
loopne
dec
pop
mov
fs
(bad)
xchg
jecxz
inc
gs
xchg
dec
pop
add
retf
jmp
loope
mov
adc
mov
(bad)
lods
mov
scas
icebp
sub
cmp
push
jp
inc
fdivr
mov
out
or
dec
mov
int
movs
scas
pushf
dec
je
int
dec
add
outs
mov
xchg
repz
pop
imul
push
sub
dec
or
xor
push
das
jmp
fidiv
mov
aaa
mov
rcr
inc
dec
push
pop
fisub
fwait
jmp
add
pop
out
scas
add
(bad)
pushf
repz
inc
mov
xor
inc
xchg
jge
add
imul
icebp
test
add
adc
jno
or
sub
daa
cmp
pop
xchg
or
(bad)
test
ins
jmp
aaa
jle
jge
(bad)
rcr
add
push
jg
push
sahf
les
push
repz
xor
rcl
repz
pop
dec
in
loop
mov
cmp
scas
jp
mov
sbb
mov
mov
mov
inc
push
das
mov
mov
or
popf
cmp
jl
xchg
dec
or
dec
or
adc
inc
sub
ud1
and
push
adc
pusha
sub
adc
fld
push
out
test
cmps
out
shl
out
shr
mov
aam
xchg
ficom
rol
jmp
repnz
shl
mov
pop
or
and
mov
rcl
push
mov
aam
mov
daa
jno
jp
int3
inc
in
mov
call
mov
ins
fmul
iret
mov
repnz
sub
movs
pop
and
lods
sbb
mov
repz
ret
nop
popf
std
rol
sub
mov
jecxz
(bad)
mov
outs
clc
lock
jecxz
and
es
fisttp
aad
scas
cwde
cwde
sub
fisub
push
pop
lea
dec
movs
in
outs
ss
stos
xor
mov
in
scas
push
dec
mov
xchg
xor
es
loop
ins
jne
inc
enter
les
adc
rcr
retf
xchg
push
sar
ss
and
adc
push
fstp
cmp
in
and
xor
daa
(bad)
cs
mov
fucomp
popf
jns
fldenv
stos
mov
mov
or
sbb
sbb
adc
enter
lods
sbb
cmp
sbb
sub
dec
sbb
loop
sahf
pop
sub
add
jmp
adc
cdq
sub
ret
inc
xchg
jne
es
jbe
jo
and
inc
aaa
leave
and
mov
ret
loop
enter
fs
test
aam
scas
in
pusha
retf
repnz
add
pop
lock
bound
inc
sub
call
cmc
gs
jbe
cmps
lods
sbb
inc
test
cs
retf
cmc
sub
or
(bad)
sbb
mov
sti
into
cld
mov
leave
cmp
cwde
rcr
adc
scas
ret
(bad)
out
icebp
daa
jo
cmp
inc
outs
and
or
xchg
sub
inc
add
mov
or
sub
sub
mov
xchg
xchg
xor
pop
mov
adc
fld
and
das
fsubp
rcr
push
and
outs
int
mov
pop
sub
mov
ret
push
jl
inc
cwde
adc
xor
int
push
inc
aas
jmp
cmp
sbb
push
(bad)
cmp
adc
mov
ficom
jne
in
in
out
xor
sahf
int3
movs
pusha
data16
add
fild
test
cmp
mov
inc
inc
mov
mov
inc
ror
ror
call
sbb
adc
cmp
sbb
jmp
lds
hlt
dec
push
pop
out
test
(bad)
jmp
dec
mov
inc
test
cmp
pop
sub
jle
mov
in
repz
ret
xchg
mov
ds
(bad)
std
xchg
retf
mov
aas
test
dec
sub
gs
scas
jg
push
mov
in
mov
cs
jbe
push
je
mov
mov
mov
lods
mov
test
push
pop
inc
aaa
clc
clc
xor
dec
xor
(bad)
stos
sub
movs
aas
leave
pop
jle
fstp
push
(bad)
fs
out
cmps
outs
mov
xor
push
mov
adc
icebp
int3
call
mov
push
test
mov
xor
xchg
inc
dec
fnstsw
int
mov
dec
lods
push
cli
inc
neg
mov
div
sub
ret
jae
(bad)
mov
in
xchg
xor
rol
push
sti
jne
dec
xor
push
jne
fbstp
int
sub
ds
add
and
jae
daa
loopne
enter
or
aas
mov
imul
sahf
clc
sar
mov
and
call
dec
jns
jl
cmp
pop
test
cmp
(bad)
in
mov
mov
push
sub
fsubr
loop
fild
ins
aas
(bad)
fdivr
xchg
int
ja
cmps
push
rcr
sbb
xlat
cs
dec
mov
push
pop
xchg
push
lahf
inc
(bad)
push
xchg
xchg
stos
adc
pop
jmp
aas
xchg
call
mov
pop
into
adc
rcl
jge
hlt
push
into
sahf
mov
jmp
js
xlat
jmp
jmp
mov
push
xor
xor
sbb
adc
inc
loope
mov
mov
xchg
test
push
(bad)
fidivr
(bad)
outs
pop
push
inc
cmp
std
out
sbb
jae
push
scas
test
sbb
lds
sub
mov
out
push
pop
push
xor
dec
mov
retf
std
rol
ds
clc
sahf
inc
xor
clc
mov
movs
ins
enter
inc
mov
sbb
ficomp
cmp
adc
inc
pop
leave
adc
jns
add
cmp
push
loop
dec
enter
repz
pop
push
icebp
sub
call
push
in
inc
pop
test
sbb
jp
xchg
test
imul
pushf
rol
repnz
jnp
cmp
scas
daa
in
loop
xlat
aas
mov
push
sub
add
es
dec
cld
jp
push
loope
stos
outs
repnz
sti
(bad)
int
cmp
idiv
sahf
jne
dec
(bad)
sub
mov
jle
std
jo
lods
push
pop
jo
adc
ins
inc
cmp
inc
arpl
jp
pop
mov
icebp
ja
mov
mov
in
cwde
cmp
add
sub
jge
adc
mov
dec
cmp
(bad)
shl
sti
pop
or
movs
jo
in
sub
mov
mov
pop
(bad)
les
stc
push
adc
cmp
sub
in
push
push
xlat
paddsb
lds
ret
ds
adc
xor
neg
(bad)
jo
jp
push
stos
and
or
and
xor
fsubr
data16
outs
push
adc
add
mov
inc
sbb
test
into
das
sbb
mov
repnz
xchg
mov
xor
sub
adc
xchg
repz
(bad)
pop
xchg
cmps
(bad)
xchg
test
std
push
xor
(bad)
addr16
out
mov
hlt
shl
shl
and
jge
imul
mov
sub
xchg
pop
xor
test
aam
inc
pop
cmp
jg
(bad)
add
jns
std
lds
lds
mov
jl
scas
sbb
sbb
xchg
outs
inc
out
ins
cmp
push
(bad)
out
ffree
dec
(bad)
push
fwait
aaa
xor
sbb
sbb
push
push
scas
aad
pushf
dec
xchg
or
inc
clc
cs
test
movs
jno
adc
or
mov
push
je
aas
mov
test
lahf
pop
fstp
dec
stc
xchg
clc
clc
pop
push
cmp
lock
leave
int3
jge
and
push
cmp
les
inc
sbb
jae
cmp
pop
xchg
sub
xor
push
sbb
or
and
xchg
xchg
sub
mov
and
in
xor
jb
dec
es
call
sub
xchg
sar
cmp
push
and
rcr
fcomp
push
mov
das
daa
mov
(bad)
mov
icebp
aam
xchg
pop
ja
or
jo
jo
mul
cmps
jne
jg
nop
fld
mov
mov
xor
sar
add
add
cmps
or
loope
jecxz
adc
mov
fcomp
adc
push
inc
mov
sub
test
jge
push
dec
sub
xor
movs
sbb
es
sahf
jae
retf
jno
mov
push
imul
pop
ror
sbb
pushw
jp
cdq
dec
add
aas
push
aam
lock
sbb
mov
sub
mov
add
pop
popf
adc
hlt
enter
call
hlt
xor
adc
mov
rcr
aaa
inc
(bad)
(bad)
cmc
push
(bad)
inc
lods
sub
sbb
mov
int3
and
pop
adc
call
inc
stc
jp
(bad)
sbb
mov
xchg
xor
cmp
loope
scas
mov
pop
hlt
(bad)
gs
dec
icebp
sub
cs
jo
aas
lds
mov
cmp
stos
int
loope
xor
gs
mov
mov
mov
push
jbe
add
cs
cmc
push
add
repnz
repz
sub
inc
pop
int3
lods
stos
adc
int3
mov
push
imul
and
dec
mov
jae
and
cmp
mov
movs
push
out
sbb
hlt
fs
push
mov
or
xchg
push
ins
(bad)
into
popa
and
add
jae
sbb
into
jle
pop
icebp
mov
dec
jbe
(bad)
fcomp
push
iret
and
or
rcl
mov
add
popa
push
sub
or
out
push
hlt
pop
bound
or
xor
outs
pop
cmp
xchg
in
pop
cwde
xor
bnd
pop
loope
shl
inc
jnp
push
push
adc
add
mov
xchg
cmc
out
sbb
hlt
mov
jno
mov
push
pop
mov
and
loop
push
aam
cwde
dec
cmp
fld
ds
or
imul
outs
mov
mov
retf
test
mov
mov
pop
sti
push
mov
dec
arpl
jl
add
or
push
inc
mov
sbb
mov
jecxz
dec
push
sbb
movs
int3
int3
sbb
gs
and
lods
in
xchg
int3
(bad)
pop
repz
mov
sub
bound
and
pop
fsub
jnp
xor
fld
or
sar
dec
pop
inc
outs
dec
jl
adc
in
out
rol
scas
test
and
bound
inc
push
fisubr
or
jbe
or
repnz
push
out
test
jl
or
mov
sbb
add
adc
not
rol
adc
add
ja
inc
fadd
and
jg
add
mov
lahf
mov
sbb
mov
inc
mov
cmc
test
je
dec
mov
ret
adc
dec
adc
inc
mov
inc
mov
cli
dec
xchg
lods
mov
dec
add
retf
xchg
cmps
fsub
imul
push
sub
stos
in
es
cmc
mov
dec
aas
and
ret
dec
pop
sub
out
mov
es
test
retf
pop
cmps
pop
xor
jae
ror
or
aaa
rol
shl
rcr
movs
cmps
ret
ret
int3
(bad)
lock
inc
xchg
adc
add
xchg
dec
mov
inc
adc
movd
jecxz
jp
cld
sbb
or
and
push
xchg
movs
out
inc
push
mov
mov
ins
mov
jae
pop
aas
bound
push
ficom
cmps
lock
or
idiv
sub
adc
jns
xchg
aas
mov
out
xor
cld
mov
push
sahf
scas
cli
mov
jb
jg
sub
ins
mov
and
jbe
xchg
dec
enter
dec
sbb
ins
and
stos
push
sub
fbld
call
mov
dec
icebp
mov
cmp
add
outs
push
ret
adc
mov
push
into
js
fwait
je
mov
mov
fidiv
xor
pop
int3
push
xor
and
daa
pop
jo
movs
out
cmc
mov
mov
jo
cmc
das
jne
xchg
test
paddusb
stc
pushf
adc
and
mov
outs
push
adc
mov
xchg
jnp
jmp
or
scas
push
loope
xlat
test
or
add
sub
and
out
outs
xchg
adc
mov
mov
sub
xor
and
loope
xor
lods
and
(bad)
pop
rcr
dec
adc
pop
mov
imul
xlat
adc
xor
inc
aam
ins
ret
mov
push
pop
xchg
repz
mov
push
dec
cmps
arpl
aas
les
and
pop
hlt
out
add
adc
jnp
jns
popa
xlat
pop
test
inc
cdq
cmp
mov
jb
lods
sub
ret
xchg
jns
jbe
push
test
iret
dec
repz
(bad)
jmp
rol
push
lock
test
push
popa
out
in
cdq
ficom
adc
sub
xor
data16
daa
bound
push
fnop
xchg
test
out
repnz
pusha
mov
inc
dec
(bad)
jmp
enter
(bad)
push
xor
xchg
leave
jge
fild
inc
jmp
sbb
and
add
ins
mov
sar
retf
fsubr
imul
int
add
loop
pop
cmp
xchg
mov
loope
fisub
push
rcl
fdivr
retf
mov
mov
jne
repnz
dec
outs
inc
(bad)
movs
cmps
jns
pusha
je
pusha
adc
sub
or
push
xchg
(bad)
loope
xchg
loope
xor
mov
stos
push
jae
sbb
movs
push
mov
cwde
push
(bad)
mov
cli
xlat
push
scas
jae
push
arpl
repnz
loopne
cmp
push
scas
sub
adc
mov
cmp
sbb
jne
xor
sahf
xor
(bad)
jb
mov
dec
jo
les
dec
and
cli
loopne
add
scas
ror
mov
mov
cli
add
xchg
jbe
cli
rcl
cmps
cwde
rol
push
jp
xor
jbe
(bad)
mov
hlt
xor
dec
iret
xor
pop
xor
mov
les
xchg
mov
cmps
inc
xor
retf
xor
je
(bad)
push
mov
jmp
push
and
adc
sar
lods
inc
sbb
or
fiadd
add
adc
popa
test
xchg
mov
sub
pop
fwait
dec
add
stc
sub
or
imul
imul
jae
je
xchg
or
cmp
jp
mov
(bad)
scas
in
add
inc
(bad)
push
dec
psubusw
mov
jnp
out
bound
lods
jno
pop
jmp
mov
xor
test
or
or
in
adc
adc
dec
ds
mov
cmp
stos
sar
mov
lock
cli
out
test
aam
mov
lea
push
mov
ret
pop
enter
xchg
add
push
cmp
daa
shr
xor
pusha
loope
retf
cmp
icebp
xchg
sbb
adc
dec
in
sar
and
into
mov
lahf
nop
ficomp
and
fmul
sub
jo
and
js
stc
mov
and
push
jp
inc
pop
and
or
inc
sbb
mov
aaa
fst
out
adc
cli
xlat
push
push
sbb
ins
rol
adc
aad
inc
sar
mov
push
xchg
adc
dec
push
imul
add
xor
loopne
push
jb
ds
or
fdiv
data16
inc
push
js
arpl
test
cld
pop
sti
jmp
mov
jbe
lea
fmul
jmp
(bad)
xor
jae
pop
fdivr
push
ret
xadd
jae
xlat
push
inc
xor
pop
aad
xchg
inc
cmp
xchg
ja
push
out
ret
pop
mov
in
fcomp
sahf
movs
mov
adc
out
nop
xchg
push
mov
iret
bound
xchg
add
sub
mov
jb
inc
sub
movs
test
inc
cmp
inc
dec
sbb
jnp
std
mov
in
aad
out
jne
xchg
pop
mov
les
dec
cs
jae
jg
cmc
(bad)
fcmovbe
jecxz
xchg
fst
inc
mov
ins
aas
dec
pop
lahf
mov
push
pop
inc
gs
retf
xchg
sub
(bad)
inc
fwait
push
cli
inc
pop
imul
jg
adc
fcmovb
push
pop
sub
cmp
fwait
mov
fwait
push
mov
and
ret
(bad)
jge
lods
push
sbb
std
xlat
in
int3
inc
test
cwde
call
or
mov
push
xor
fidiv
imul
adc
stos
push
std
add
add
jge
fistp
jmp
pop
ret
cli
pop
call
mov
(bad)
int3
ss
push
dec
icebp
mov
jmp
dec
adc
jmp
adc
stos
add
dec
fdivr
pushf
int3
jge
or
int
mov
mov
std
adc
pop
mov
push
mov
pop
jo
sbb
ror
addr16
xchg
xlat
pop
imul
fidivr
call
in
xchg
xchg
xchg
outs
pop
ret
ins
fimul
sbb
jmp
imul
mov
mov
jle
jle
push
mov
sub
pop
lds
sti
icebp
int3
dec
daa
(bad)
and
neg
mov
sbb
in
inc
shl
jecxz
arpl
cmp
push
icebp
mov
pop
retf
jb
repz
leave
add
dec
lahf
mov
sbb
adc
pop
push
push
rcr
(bad)
jbe
pop
test
push
mov
push
aaa
scas
mov
cmp
or
fidiv
push
xchg
outs
icebp
popf
ret
pushf
not
daa
pop
adc
aas
loope
push
cmp
sbb
push
inc
xor
retf
and
mov
adc
pop
pop
fild
pop
add
in
xor
pop
mov
xchg
imul
fnstcw
adc
aam
div
neg
or
inc
aaa
cmp
mov
hlt
sahf
imul
shl
and
in
call
fdivr
aam
rol
mov
dec
pop
jp
xor
scas
mov
call
les
xchg
out
push
aas
jo
inc
std
aam
sub
fnsave
cs
mov
sub
mov
sub
addr16
or
add
fadd
and
jnp
sub
cmp
ret
ja
jnp
test
out
movs
jl
ja
jo
repz
lods
sbb
hlt
xchg
ds
xchg
loop
nop
lods
add
pop
movs
das
(bad)
adc
jmp
jge
ss
add
sbb
or
adc
cdq
mov
push
xchg
pop
inc
movs
adc
pop
jnp
mov
xchg
push
mov
or
retf
mov
mov
shl
push
out
inc
push
xchg
push
adc
or
dec
pop
inc
inc
int3
and
pop
ret
pop
es
xchg
js
loopne
dec
pop
stos
jbe
ins
cmps
fwait
loop
outs
xchg
idiv
jbe
mov
fs
mov
xor
push
outs
bound
std
dec
jb
jmp
loopne
aam
and
xchg
dec
loope
cmp
(bad)
fimul
popf
es
mov
xor
vmptrld
push
je
jecxz
lods
fwait
mov
cli
aad
push
mov
sbb
pop
mov
mov
jne
jp
lds
enter
cmp
pop
push
pop
call
xor
sub
add
and
cdq
dec
sbb
hlt
repnz
lahf
or
and
push
fs
addr16
inc
fisttp
ja
in
pop
scas
dec
mov
int
fdivp
loope
jp
lahf
jle
ret
daa
push
dec
or
mov
rol
mov
lods
icebp
push
cmc
ror
sub
dec
loop
arpl
or
push
xchg
push
xor
cld
adc
shl
cmp
xchg
xchg
xchg
fistp
pop
xor
push
sub
(bad)
repnz
enter
mov
mov
sub
arpl
or
std
cmp
out
ja
retf
add
addr16
mov
push
or
pop
cs
pushf
mov
fwait
sti
cmp
mov
(bad)
mov
jmp
icebp
inc
push
aad
repnz
mov
scas
xor
je
inc
sbb
sub
sbb
adc
dec
in
cmps
add
idiv
test
dec
ffree
pop
push
xchg
jnp
mov
lods
out
pushf
dec
ret
(bad)
clc
das
pop
sar
pop
dec
adc
and
sub
cwde
jle
mov
sub
test
in
inc
pop
jnp
dec
outs
loope
sbb
sbb
jb
retf
cdq
iret
cld
cli
jne
nop
and
imul
loop
sti
adc
mov
nop
add
sbb
and
lods
(bad)
mov
pop
out
or
dec
jge
and
inc
or
mov
jns
cmp
mov
ds
aaa
dec
cmp
jle
test
cs
cmp
out
cld
cmps
xor
and
mov
out
or
sub
jmp
mov
and
popf
dec
sub
imul
fwait
sbb
out
jbe
xchg
cmp
dec
test
add
jmp
fadd
jns
lods
fild
cmp
push
lock
rcr
div
cmp
cmp
jl
sahf
sbb
inc
adc
and
jl
push
(bad)
adc
sub
and
call
lds
sub
imul
and
push
dec
xchg
test
and
xor
cmp
movs
xchg
dec
movs
(bad)
ja
loopne
inc
jmp
mov
daa
mov
gs
dec
test
dec
jmp
fbld
es
mov
iret
std
mov
or
loopne
cmp
cdq
xchg
dec
sbb
add
sub
xlat
repz
or
fs
adc
sbb
push
call
inc
and
pop
shl
lock
sbb
push
cld
(bad)
jnp
in
jle
xor
ror
bound
or
jae
movs
jbe
ins
mov
cmc
in
and
rcr
gs
jmp
ror
push
adc
inc
or
jne
dec
stc
or
adc
shl
js
pop
loope
inc
mov
mov
or
jle
mov
jl
fadd
ins
(bad)
dec
ins
mov
ret
test
pushf
int3
dec
add
movs
inc
lods
dec
jmp
or
ds
push
mov
push
out
sbb
jno
je
mov
cwde
jbe
bound
shl
xor
mov
or
and
cmp
push
faddp
pop
push
push
adc
mov
pushf
mov
fistp
scas
cmp
mov
jl
inc
outs
jo
dec
and
push
jne
push
pop
mov
adc
xor
lock
cs
adc
mov
xor
lea
jl
add
pop
add
xor
scas
fistp
add
aam
sub
fnstsw
aad
and
push
or
arpl
(bad)
ficom
sbb
or
cmp
xor
sub
push
outs
mov
dec
ror
outs
in
dec
cmp
adc
jo
(bad)
sahf
mov
jmp
inc
cmp
mov
and
jle
(bad)
and
push
pop
sub
out
mov
pop
movs
imul
iret
cli
jmp
cmp
adc
sub
cwde
jg
add
or
or
out
stc
lds
xor
enter
xchg
push
(bad)
jp
xchg
test
or
leave
(bad)
mov
fs
mov
push
pop
es
or
cmp
mov
mov
xchg
rol
pop
call
ja
dec
mov
push
cmp
adc
dec
and
leave
inc
call
iret
push
jmp
push
jne
mov
add
out
jbe
arpl
mov
add
dec
les
jns
sti
pop
push
arpl
std
mov
cmp
test
sbb
cmc
fisttp
es
cmp
adc
loopne
jbe
mov
repz
xor
(bad)
call
in
fldenv
mov
out
es
push
adc
push
test
cdq
out
mov
stc
scas
inc
dec
dec
popa
dec
sub
adc
xchg
xchg
rcr
popf
dec
adc
(bad)
mov
movs
add
stc
div
mov
inc
leave
outs
(bad)
mov
popa
cmp
stos
test
pop
or
or
and
ror
mov
jmp
rcr
inc
lods
adc
xchg
cmps
jp
jnp
enter
xor
pop
and
loopne
or
and
sbb
scas
mov
shl
outs
dec
lahf
lea
sbb
scas
inc
cmps
int
fld
sar
cdq
popf
adc
dec
ins
cdq
ds
pop
push
into
jg
jmp
test
rcl
dec
pop
imul
xadd
inc
fucomi
enter
jo
jb
jo
pusha
xchg
dec
jge
gs
xor
and
xchg
mov
jecxz
test
shr
scas
or
inc
loop
dec
stc
(bad)
rcr
pop
ret
test
cmp
fwait
ja
pushf
sbb
add
cmp
mov
sbb
arpl
add
in
jb
adc
pop
sub
push
cmp
cmp
sti
adc
daa
shl
push
cmp
out
inc
sub
test
sub
aas
loop
push
fsub
iret
and
pop
or
(bad)
aam
add
cmp
jge
xchg
std
push
call
mov
xchg
bound
pop
sub
xchg
mov
outs
pop
js
nop
sbb
xor
arpl
fwait
push
fimul
loope
xlat
jecxz
(bad)
iret
inc
rol
pop
sahf
stos
call
jae
fwait
mov
add
stos
push
and
push
inc
ret
ins
mov
mov
sub
jno
fisubr
cmps
fistp
mov
imul
adc
inc
pop
inc
std
call
xchg
adc
mov
(bad)
cmp
into
cmp
ret
ds
cli
pop
sbb
data16
mov
cmp
and
outs
pop
retf
xchg
ins
popa
add
test
mov
pop
inc
xor
sub
test
jmp
js
fwait
popf
cmps
xor
jb
lahf
dec
pop
or
pop
das
out
cmps
adc
(bad)
push
dec
sub
ins
movs
sub
add
mov
cmp
in
or
xlat
shl
test
repz
mov
mov
aaa
cdq
popa
fcmovne
popf
stc
ret
test
inc
dec
stos
cdq
scas
pusha
xor
pop
dec
adc
xchg
fcom
cmps
mov
out
mov
sbb
movs
xor
ret
mov
imul
out
call
xor
mov
repz
or
push
inc
lods
js
xor
cmp
add
sub
xchg
sahf
neg
mov
push
xchg
mov
sahf
in
jbe
pop
repz
(bad)
js
pop
jp
in
mov
add
push
mov
fisubr
outs
data16
(bad)
call
push
mov
push
mov
lods
lock
or
fdivr
fcomi
cwde
pop
shr
inc
ins
or
push
dec
fs
xor
ins
jg
jg
push
pop
imul
pop
pop
sbb
or
push
push
add
pop
inc
push
inc
cmp
sbb
mov
or
jl
xchg
out
lahf
lods
jp
dec
int
push
push
jecxz
xchg
into
dec
mov
xor
hlt
retf
cld
mov
in
gs
dec
inc
dec
sti
push
and
cmp
jl
inc
ror
mov
addr16
fxtract
jmp
jle
push
push
push
ror
aad
adc
pop
add
and
sbb
xchg
adc
fnstcw
das
imul
mov
test
test
ins
dec
mov
scas
fdivp
jp
ret
in
mov
mov
xchg
and
ret
stc
xchg
push
stos
pop
or
and
gs
mov
mov
cli
sbb
into
repnz
pop
mov
add
idiv
shl
xchg
add
mov
in
movs
aas
mov
pop
cmp
push
scas
mov
es
das
cs
xor
sub
arpl
retf
jp
test
dec
inc
mov
or
dec
jbe
adc
es
scas
push
and
xchg
pop
lock
das
jae
mov
call
iret
retf
cmc
cmp
xlat
stos
cmc
sub
imul
test
icebp
add
out
xchg
add
out
mov
lds
add
or
lods
cmp
popf
mov
ja
sub
inc
ins
data16
sub
jle
es
daa
jl
into
mov
mov
js
sub
loope
fbld
jmp
inc
xchg
(bad)
in
or
(bad)
or
pop
int
xlat
sub
dec
pop
add
or
lea
pop
in
dec
mov
jns
lods
jp
ret
out
push
dec
outs
inc
adc
mov
inc
movs
fisubr
cs
xchg
push
mov
inc
dec
pop
add
sbb
outs
or
aaa
stos
pop
adc
or
cdq
fstp
popf
rol
sbb
js
push
in
repnz
xchg
cmc
(bad)
sub
lods
scas
aas
pusha
inc
stos
ret
(bad)
xor
mov
sub
mov
add
fld
adc
adc
cmp
dec
pop
mov
movs
pusha
scas
dec
repz
xchg
jl
popf
mov
sub
jae
adc
fidivr
cdq
or
outs
test
fs
inc
cmp
rol
dec
mov
rcr
loop
adc
ja
jbe
xor
(bad)
call
cmps
mov
xchg
das
mov
(bad)
test
sbb
push
mov
mov
xchg
pop
mov
fistp
pop
ins
pop
stc
sub
dec
xor
or
push
cs
mov
and
and
xchg
inc
stos
mov
gs
and
lahf
sbb
push
sbb
dec
push
add
adc
dec
jbe
int
sbb
sbb
(bad)
cmp
mov
out
jne
movs
mul
leave
adc
leave
repz
ins
jmp
scas
setl
push
mov
mov
frstor
push
imul
std
inc
sar
add
loope
into
aas
push
pop
fld
ss
and
hlt
dec
enter
mov
js
sub
push
int
inc
fwait
lods
cmp
xchg
dec
aas
xor
jecxz
and
retf
jg
push
in
retf
jl
lea
jmp
jge
pop
pop
iret
sbb
scas
mov
xchg
xor
(bad)
shl
sbb
ss
imul
adc
pop
(bad)
xchg
into
ds
add
test
jp
pop
jbe
ffree
dec
imul
xchg
sbb
or
sub
xor
movs
test
add
xlat
retf
sbb
gs
sub
pop
xchg
ins
push
push
fnstcw
xchg
xor
push
shr
stos
aam
lds
sbb
adc
pushf
inc
ss
shl
inc
xor
stos
fmul
out
jns
xchg
mov
push
mov
dec
dec
dec
pop
and
inc
test
mov
inc
std
jo
out
mov
inc
loope
cmp
stos
ss
popa
pop
into
pop
cmp
and
cdq
(bad)
sbb
add
ror
adc
mov
dec
aaa
nop
add
outs
test
mov
fdiv
sub
retf
aad
mov
pop
(bad)
add
int
mov
or
les
stos
jmp
fmul
lods
or
cmps
lea
jno
repnz
(bad)
gs
inc
pop
jp
xchg
and
or
jle
ja
mov
pop
icebp
stc
sub
jmp
xchg
adc
adc
push
stos
jmp
pop
test
ins
mov
mov
fwait
xor
sbb
or
sbb
fld
inc
jb
or
mov
je
adc
adc
leave
cdq
test
mov
cli
push
pop
js
test
sbb
add
ds
mov
shr
(bad)
fsub
pusha
cmp
fstp
pop
jo
into
sbb
ret
or
inc
(bad)
sub
out
or
pop
push
and
in
mul
add
imul
aas
ds
loopne
je
mov
push
or
push
jnp
add
pop
sbb
mov
movs
mov
mov
shl
jg
mov
outs
nop
fcomp
cmc
xor
inc
loop
pop
jge
aaa
mov
div
dec
xor
cmp
mov
mov
out
sar
test
cmp
and
xor
shl
aas
mov
inc
mov
push
scas
cs
jb
div
pop
hlt
(bad)
std
retf
pushf
fbstp
add
jb
repnz
push
xchg
and
xor
iret
inc
adc
nop
icebp
inc
mov
stc
int3
cmp
sbb
(bad)
mov
fwait
and
push
js
add
sbb
lock
dec
xchg
pop
ds
ins
cmp
dec
retf
mov
xor
add
pop
ja
ss
jnp
xor
cmp
mov
pop
data16
mov
xchg
xchg
dec
popa
pop
ss
js
inc
arpl
cmp
xchg
dec
push
xor
test
push
ss
aam
sub
xchg
test
stos
cld
push
(bad)
out
lds
mov
nop
lods
sbb
leave
nop
sbb
shl
and
retf
inc
lea
pushf
xchg
dec
in
inc
lea
mov
add
adc
(bad)
dec
scas
xchg
in
test
push
add
sub
fadd
shr
movs
(bad)
and
add
stos
movs
pop
jmp
pop
cmc
aaa
xchg
ins
xchg
push
gs
xchg
and
out
xlat
rcl
mov
and
div
nop
dec
mov
mov
gs
and
xor
hlt
into
pop
ja
enter
mul
stos
data16
mov
aas
pop
xchg
test
mov
test
mov
cmc
mov
xchg
cmps
(bad)
mov
aaa
cld
xchg
daa
movs
cld
mov
push
sub
aad
lea
mov
dec
mov
pop
lahf
jg
xor
lds
aas
jns
mov
into
jle
pusha
jecxz
xor
aaa
add
xchg
sub
je
arpl
dec
retf
mov
jbe
fst
outs
in
leave
arpl
and
pop
movs
dec
push
hlt
xchg
loope
xchg
out
mov
mov
iret
mov
xor
sub
dec
push
adc
lods
mov
mov
in
adc
int3
cld
inc
sti
inc
add
(bad)
pop
fst
imul
cmp
xor
push
repz
cdq
xlat
xchg
lea
xor
ds
test
dec
leave
inc
mov
sahf
pop
aaa
pusha
mov
icebp
dec
push
jae
mov
imul
xchg
bound
ss
stos
std
dec
(bad)
pusha
sbb
pushf
sbb
jae
mov
jno
add
aam
mov
(bad)
cdq
xchg
add
mov
cmp
mov
push
cdq
aad
mov
mov
mov
enter
dec
(bad)
mov
data16
and
sbb
push
dec
imul
in
mov
outs
lds
fdiv
jae
jns
pop
xchg
fist
into
arpl
mov
add
mov
jecxz
jbe
pop
(bad)
push
push
mov
cwde
cmp
les
aad
mov
lods
mov
jmp
sahf
iret
add
(bad)
jb
outs
push
hlt
nop
mov
cs
jl
push
cli
dec
xchg
adc
jle
fld
ins
fdiv
(bad)
cwde
stc
in
inc
pushf
std
pop
push
outs
jae
mov
outs
fdivr
call
sub
dec
jle
std
jmp
push
(bad)
out
(bad)
fidivr
icebp
push
mov
dec
dec
cmp
in
dec
aas
movs
outs
addr16
add
and
shr
xchg
or
jmp
movs
in
mov
mov
sahf
mov
cld
bound
ins
in
mov
loope
mov
ret
jl
test
add
xchg
and
les
pop
adc
cdq
dec
dec
dec
pop
sub
enter
fsub
stos
leave
lods
dec
out
jnp
xor
pushf
xor
outs
inc
lds
int3
pop
pop
jnp
xchg
les
or
(bad)
push
mov
fsubrp
sbb
sub
add
cmp
imul
mov
jmp
hlt
js
jo
inc
dec
mov
mov
and
(bad)
jmp
ror
inc
or
(bad)
jmp
bound
mov
mov
fdivr
cdq
jle
int3
js
(bad)
outs
pusha
arpl
sub
ds
pop
pop
aad
sahf
test
pop
mov
sub
js
sti
push
test
dec
(bad)
adc
fistp
in
mov
push
xchg
adc
sub
adc
fstp
pop
mov
push
iret
push
inc
hlt
xchg
mov
dec
mov
mov
aaa
push
hlt
and
mov
lea
(bad)
hlt
repnz
and
stc
push
fst
inc
test
outs
imul
xchg
fwait
mov
xor
sub
in
repnz
jl
sbb
push
mov
mov
fidiv
shl
mov
adc
test
xchg
in
rol
cs
loop
in
out
fcmove
push
jl
dec
gs
sti
out
ret
test
mov
stos
call
stos
dec
loopne
loopne
mov
adc
xchg
sub
cmp
xor
sbb
cwde
mov
adc
inc
loopne
pop
push
les
leave
cmp
add
out
mov
pop
ins
or
mov
sti
sbb
aas
mov
push
push
xlat
shl
mov
jecxz
sahf
mov
mov
lock
call
mov
hlt
scas
sti
movs
sub
jg
in
ds
xor
arpl
xor
mov
fadd
xor
add
adc
scas
adc
cmc
mov
stos
sub
add
add
sub
shr
add
leave
dec
cwde
mov
imul
push
mov
fwait
cdq
ja
sahf
and
outs
cmp
das
es
mov
mov
add
and
push
pop
or
jle
jb
push
sub
push
imul
call
jb
fsubr
mov
shr
cmp
jo
nop
leave
shl
mov
popa
test
or
into
(bad)
cs
sub
dec
jmp
jae
and
inc
and
(bad)
fxch
mov
or
leave
mov
fstp
(bad)
pop
push
inc
push
cmp
jmp
inc
push
sub
imul
sub
xchg
jmp
pop
fimul
xchg
test
sub
test
lods
xchg
jns
test
xchg
inc
or
out
push
ins
jbe
call
pop
fwait
sub
mov
xchg
adc
xchg
es
pushf
pushf
mov
push
imul
mov
inc
gs
xchg
test
int
mov
ss
jecxz
call
cld
push
cmp
jl
call
xchg
pop
or
sub
add
cmps
sbb
mov
cs
jmp
pop
int
cmp
xchg
aas
sbb
add
mov
pop
lds
sbb
or
push
js
push
test
ret
pop
test
add
std
and
ret
retf
sub
lods
xchg
test
sar
inc
sar
jb
lea
xchg
repz
jge
sbb
lea
mov
data16
pusha
and
xor
pop
sahf
fs
add
dec
or
sub
mov
enter
mov
ins
push
push
jle
cmc
dec
sbb
fild
es
mov
cli
pop
sbb
sub
and
jbe
jne
mov
push
int
shl
xor
lock
xor
push
je
in
mov
in
push
sar
lock
mov
hlt
add
cmp
xor
add
mov
(bad)
enter
les
mov
jle
cmp
mov
(bad)
push
and
fstp
int3
aad
xor
call
aam
jns
cwde
cmc
pop
add
push
inc
jnp
stc
mov
in
mov
fnstcw
pop
adc
dec
or
xchg
inc
mov
ja
mov
lea
cdq
xchg
out
sti
icebp
imul
rcr
(bad)
les
jl
lock
or
aas
add
aam
int3
xchg
rcl
clc
fidiv
adc
enter
cmp
or
dec
mov
mov
loope
mov
mov
xor
cmps
jb
dec
not
not
lds
adc
lods
movs
in
pop
mov
sub
jo
dec
add
(bad)
jg
ror
fstp
fisttp
sbb
test
mov
int
pop
cwde
pop
sub
add
call
hlt
pop
mov
sub
jb
dec
sbb
(bad)
cs
sub
outs
int
aas
daa
loop
and
in
and
int3
arpl
and
retf
stos
in
cld
loopne
mov
mov
test
inc
scas
or
cmp
sar
inc
js
sbb
outs
loop
dec
mov
xor
pusha
jbe
mov
push
popf
jmp
sbb
xor
pop
jecxz
shl
cmp
arpl
popf
ja
pushf
cmp
ins
adc
es
js
xlat
ror
cmp
xor
mov
mov
movs
addr16
or
push
mov
inc
xchg
cwde
pop
shl
test
pusha
ins
push
cmp
sub
pop
aas
adc
imul
xchg
pop
repnz
mov
lahf
sbb
cwde
push
push
mov
cdq
xlat
cmp
mov
cld
adc
dec
inc
les
push
sar
(bad)
xchg
adc
call
(bad)
clc
pop
adc
loopne
pushf
loopne
mov
aaa
sbb
mov
add
je
addr16
scas
fst
ror
addr16
add
(bad)
sbb
xor
imul
push
call
fadd
out
xchg
je
jge
mov
fdiv
xor
xor
in
sub
lock
test
jle
or
(bad)
xor
ds
js
aas
and
pop
xlat
cmp
loope
lea
push
add
jmp
push
inc
popa
loopne
xor
enter
aam
repz
cmp
gs
mov
daa
fs
test
cmps
test
adc
movs
lods
or
retf
xor
loope
pop
in
push
inc
jge
cmp
sbb
cmp
cmp
mov
scas
dec
and
mov
push
inc
rcl
mov
push
jl
xor
ror
mov
test
aad
sbb
inc
repz
pop
add
ret
jmp
jmp
outs
sbb
mov
call
pop
and
jecxz
jmp
fsub
outs
add
cmp
mov
inc
jmp
xor
cmp
inc
inc
clc
adc
cmps
and
xchg
loop
xlat
pop
das
or
push
push
lahf
jne
sub
adc
sub
cmp
jmp
fisttp
push
frstor
ror
fs
leave
fild
adc
retf
loop
pop
jae
retf
and
ror
ret
aaa
das
mov
jns
popf
cs
add
adc
test
inc
ret
lea
stc
(bad)
lea
lea
jae
movs
cmp
scas
sub
(bad)
xchg
dec
and
(bad)
(bad)
mov
mov
add
push
out
js
jp
mov
xor
add
cmp
in
call
mov
inc
and
aas
bound
sbb
leave
jg
ss
push
hlt
pop
cmp
sbb
mov
sbb
xor
dec
mov
inc
mov
loop
fs
pop
test
mov
xlat
mov
sub
mov
ficom
add
xchg
aam
(bad)
pop
or
div
cmp
mov
ss
cmp
add
add
push
and
sbb
mov
inc
push
mov
lods
or
sbb
jmp
leave
shr
fcmovu
jo
sbb
jle
push
out
gs
(bad)
cmp
(bad)
pop
sub
mov
push
jmp
pop
in
push
mov
stos
mov
mov
inc
sub
jno
out
sbb
rcr
js
cdq
add
sbb
jmp
ja
test
sti
mov
in
mov
(bad)
es
xor
jmp
idiv
mov
(bad)
cld
int
jns
cs
(bad)
jne
or
shr
xchg
dec
dec
ja
loopne
ins
and
idiv
mov
add
movs
mov
jg
mov
mov
jne
and
cmp
sub
ret
leave
jnp
mov
ja
lods
out
mov
inc
les
pop
mov
jle
cs
(bad)
push
fstp
ja
and
cs
(bad)
mov
and
enter
popf
pop
fisub
dec
clc
loop
dec
out
(bad)
pop
push
dec
push
push
mov
push
lds
movs
leave
mov
xlat
pop
add
push
jae
cmps
mov
fbld
rcl
outs
repz
sub
les
or
lods
shr
and
es
mov
add
stc
pop
call
pop
das
(bad)
loop
in
sub
aas
sbb
pop
or
fnstsw
fdivp
and
fsubr
xchg
or
sbb
in
mov
inc
repnz
out
xchg
ja
add
inc
adc
idiv
dec
pop
mov
xor
pop
pusha
push
or
jno
cmp
stos
and
cwde
(bad)
mov
aaa
xor
mov
stc
lock
stos
fstp
xchg
xchg
xchg
popf
in
iret
mov
shl
add
and
adc
scas
nop
inc
jnp
cmp
call
shl
icebp
jp
popf
ret
inc
xor
fstp
(bad)
popa
xchg
dec
enter
adc
mov
jno
and
scas
sahf
jno
out
cld
mov
cld
cmp
fcomp
fild
jnp
sub
push
adc
out
fcom
data16
js
ds
frstor
sbb
or
push
ja
ss
jo
daa
add
or
jmp
int3
loope
inc
inc
ja
ret
fstp
mov
enter
stos
push
mov
retf
sbb
in
ja
jno
repz
push
mov
mov
in
sar
xchg
not
sahf
aaa
push
into
xor
mov
(bad)
mov
inc
movs
xchg
stc
inc
jmp
sti
ret
ja
ret
push
mov
(bad)
in
lea
and
sbb
xlat
jl
pop
lods
and
sbb
clc
xchg
(bad)
lea
repz
jb
dec
pusha
cld
xchg
sub
int3
leave
arpl
jne
add
mov
mov
and
js
lahf
jl
or
test
loope
in
inc
xor
inc
xchg
push
arpl
xchg
popf
push
(bad)
shl
pop
mov
jne
mov
jnp
xchg
and
addr16
push
sbb
jno
xchg
pushf
call
std
stos
cmp
sar
fcompp
(bad)
fild
es
dec
test
dec
(bad)
cmp
add
jbe
adc
cmp
jbe
xchg
add
mov
aaa
pusha
push
push
daa
mov
das
fimul
pop
xor
jns
out
and
cmp
jbe
enter
dec
fisttp
jae
fs
push
bound
scas
imul
mov
out
addr16
mov
xchg
out
cmp
pop
pusha
push
mov
pusha
out
sub
sub
and
outs
jnp
push
lahf
(bad)
addr16
xor
(bad)
test
sar
and
adc
shl
stc
xor
mov
imul
jno
daa
xchg
add
dec
(bad)
inc
retf
popa
cmp
aas
mov
test
icebp
mov
sub
cwde
inc
pushf
adc
dec
lds
cmp
ret
ins
push
mov
and
ds
mov
pop
test
ffree
and
cmp
inc
adc
lea
pop
push
cmps
add
adc
add
fst
push
dec
scas
push
mov
(bad)
push
mov
jmp
js
or
fistp
iret
dec
loope
aas
sbb
mov
out
mov
cmps
mov
popa
in
sbb
xchg
rcr
nop
xor
cwde
sar
jmp
repz
ficomp
pop
adc
xor
loopne
imul
sub
fdiv
dec
jo
ins
jg
data16
adc
pop
lock
fcomp
jb
pop
and
mov
push
outs
mov
mov
dec
mov
xor
clc
gs
cwde
mov
leave
cld
cmp
dec
sub
sbb
fdivr
xlat
leave
or
sub
mov
mov
lea
xor
cdq
out
dec
cmp
inc
mov
push
or
xchg
mov
in
xor
or
faddp
add
and
xor
jns
adc
pop
jnp
(bad)
fist
xor
stos
ins
push
pop
jl
sbb
xchg
ins
jae
in
mov
outs
rcr
imul
cld
mov
xchg
sub
mov
sahf
inc
aas
or
jl
ds
shl
mov
retf
cmps
push
adc
mov
pop
dec
cwde
add
lods
push
mov
call
mov
test
(bad)
loope
xor
xchg
adc
les
sbb
xor
mov
cli
daa
in
sbb
jge
xchg
test
mov
pop
pushf
pop
push
cmp
mov
mov
xor
ret
popf
in
push
les
xor
cwde
cmp
leave
mov
mov
cmc
test
pop
sub
outs
push
add
inc
sti
cmp
mov
sub
inc
mov
mov
or
ja
cli
cmp
mov
push
pop
pop
add
mov
mov
lds
add
add
xor
xchg
xor
xor
rcr
add
pop
mov
xor
frstor
jmp
loope
jne
and
ss
(bad)
jae
(bad)
bound
mov
pusha
orps
adc
aam
or
xor
mov
lods
outs
cmc
loop
mov
add
test
dec
popf
cmp
and
inc
das
ret
out
xchg
xchg
test
push
ins
outs
pop
sbb
push
mov
or
cld
jecxz
jl
rol
mov
fidivr
addr16
jo
mov
mov
sti
pop
or
push
div
shl
and
inc
xor
inc
dec
loopne
cmp
je
mov
fdiv
ds
mov
fcmovbe
into
jns
jp
out
inc
mov
xchg
or
mov
cmp
mov
xchg
dec
dec
adc
dec
gs
neg
mov
sbb
pop
ret
sbb
sub
xor
stc
test
sub
loopne
fsub
add
jp
cdq
inc
inc
stc
push
mov
gs
jl
push
xor
std
or
pop
sahf
sar
xchg
adc
mov
jb
pop
adc
pop
push
scas
retf
jl
data16
pop
pop
int
dec
sub
cmp
cmp
retf
test
jle
dec
mov
psrlq
or
(bad)
lods
mov
bound
sbb
jl
mov
pop
pop
cwde
nop
inc
iret
sbb
mov
inc
in
leave
in
sub
iret
sub
sub
out
pop
out
loope
mov
mov
bound
imul
aas
mov
idiv
shr
sar
jecxz
lods
movs
xor
scas
into
sbb
adc
push
jne
stos
(bad)
fcomip
mov
bound
pop
mov
cmp
arpl
movs
lods
ja
inc
xchg
movntps
pusha
in
sub
imul
cs
dec
ficomp
gs
les
loope
in
(bad)
(bad)
jg
push
mov
sbb
and
sbb
lods
movs
aaa
shr
lahf
(bad)
loopne
xchg
popf
jg
retf
sahf
jg
iret
loope
shr
cwde
push
call
push
pop
imul
leave
lods
aad
or
std
aas
push
out
sbb
jmp
into
psubd
out
xchg
out
out
push
ds
(bad)
xor
fmul
inc
adc
cld
pop
xlat
loope
in
fsubr
jge
dec
lods
dec
lock
xchg
mov
stc
jne
leave
cmps
adc
idiv
leave
pop
cmp
fisttp
xchg
movs
push
iret
rol
jmp
imul
retf
add
fcom
push
pop
cdq
xor
push
add
mov
aaa
in
pop
dec
fs
adc
mov
mov
add
jmp
jecxz
into
stc
out
xor
fsincos
mov
push
retf
call
mov
pop
lea
sbb
ds
mov
sub
jne
call
cmp
jb
enter
or
enter
rcl
sti
or
mov
cmovbe
jo
push
inc
jg
mov
push
call
sbb
movs
mov
or
mov
sub
daa
(bad)
fld
mov
nop
movs
xchg
js
xor
pop
scas
js
stc
aas
(bad)
retf
and
and
jb
cmc
fs
dec
xor
push
mov
je
cmp
leave
dec
xor
mov
dec
inc
add
fld
ret
push
cmps
movs
mov
inc
add
add
pop
into
stos
shl
out
aad
inc
ja
cmp
pop
xor
inc
mov
add
jmp
(bad)
cmp
push
adc
adc
sbb
xchg
ins
lock
mov
jecxz
and
dec
inc
(bad)
xchg
xor
je
inc
popf
fst
ret
mov
mov
xlat
xchg
pop
ret
pop
push
fistp
jl
cmp
fcom
xchg
push
push
setbe
arpl
or
lods
cmp
push
bound
cmps
(bad)
push
cmp
xor
bswap
in
sub
test
in
jg
cmps
cmc
popa
cvttps2pi
retf
mov
sbb
add
sub
sub
xchg
push
mov
cmp
jbe
cmp
and
push
inc
hlt
sub
cmc
sbb
mov
not
es
cmps
xor
pop
add
test
push
adc
psubsw
push
pushf
sub
js
addr16
adc
adc
pusha
ja
sar
xor
popa
test
sti
mov
cmps
scas
fdiv
movs
pop
iret
arpl
adc
mov
shl
push
enter
iret
in
nop
fisttp
fild
mov
sbb
push
pop
call
out
mov
xchg
bound
push
mov
xor
std
add
adc
mov
mov
jge
push
sbb
(bad)
cmc
and
sub
stos
(bad)
mov
fld
stos
sub
xor
arpl
inc
imul
xlat
inc
out
in
sbb
xchg
push
(bad)
fsub
add
xchg
ret
cdq
int3
popa
inc
lock
aaa
lahf
jbe
xchg
mov
jne
ins
cmps
jl
(bad)
test
pop
retf
and
sub
cmp
pop
cmps
or
adc
fidivr
clc
mov
loope
jl
frstor
push
in
mov
adc
jo
mov
push
inc
sub
inc
and
push
icebp
lds
xchg
lahf
jmp
sub
test
mov
xor
push
pop
or
leave
push
sbb
popf
bound
inc
xchg
fld
adc
mov
hlt
dec
jnp
xchg
into
mov
mov
aaa
jg
or
inc
(bad)
push
push
or
jae
std
mov
mov
and
shr
test
(bad)
aas
test
fadd
push
xor
fucomi
retf
or
jae
(bad)
and
aas
pop
or
pop
mov
nop
es
iret
cmc
xor
adc
loope
fimul
stos
arpl
lahf
in
adc
ret
mov
call
pushf
jg
push
repnz
movs
int3
add
ja
pop
or
lods
push
xchg
jmp
sub
jg
xor
xor
neg
pop
ficomp
sbb
jge
out
pop
mov
sub
dec
test
in
xchg
cmps
outs
in
ror
push
in
call
in
mov
fwait
xor
mov
mov
inc
scas
push
fbld
pop
mov
loope
cmp
pop
inc
lahf
push
xchg
leave
add
sub
lods
dec
mov
imul
out
inc
push
pop
cmps
outs
pop
mov
ins
(bad)
sahf
jl
mov
fadd
movs
xchg
add
jmp
imul
push
mov
mov
iret
rcl
push
ss
fwait
xchg
mov
ftst
popa
push
xchg
fsubr
outs
jle
arpl
(bad)
and
sub
sub
mul
test
neg
xchg
lods
mov
pushf
adc
je
outs
mov
fcomp
cmc
mov
hlt
jecxz
(bad)
jp
cwde
(bad)
cmc
or
dec
loop
adc
or
jmp
bound
repnz
icebp
das
(bad)
out
ins
out
jo
aaa
mov
push
mov
or
add
inc
and
mov
sbb
xor
jnp
pop
out
xchg
(bad)
pop
enter
add
cmp
addr16
lods
pop
std
xor
inc
or
neg
bound
test
ins
jle
push
cdq
retf
add
lods
xor
sub
adc
cmp
jb
push
out
js
(bad)
(bad)
in
rcl
xchg
shl
std
sub
push
dec
or
sbb
test
sbb
cs
ins
imul
dec
xchg
adc
les
pop
push
pusha
mov
mov
lods
mov
add
sub
cmps
inc
xchg
test
push
inc
jne
jns
xor
cmp
aad
dec
pop
push
jbe
addr16
and
scas
ins
pop
add
scas
cli
sti
cs
xor
aad
out
enter
pusha
loopne
fistp
mov
mov
jb
or
sbb
arpl
lock
jl
and
xor
sar
ins
call
sbb
mov
push
xor
cwde
adc
mov
pop
mov
es
outs
retf
cmp
in
retf
inc
int
sbb
adc
sub
dec
das
fs
popa
mov
in
jmp
ficomp
enter
cmp
imul
pop
dec
sub
push
cli
xor
in
push
(bad)
call
jl
add
inc
ins
cmc
pop
mov
dec
pop
xchg
sub
push
xlat
mov
in
fistp
jns
or
(bad)
mov
loope
leave
jo
cmp
fidivr
pop
(bad)
repz
(bad)
push
sub
dec
out
inc
ins
sub
mov
xor
sahf
ja
add
adc
pusha
sbb
cdq
push
push
sti
mov
bound
or
int3
pushf
adc
int
loop
sti
jg
scas
aaa
movs
push
cs
loope
popa
mov
inc
pop
cmp
pop
mov
pushw
sub
and
dec
push
loop
mov
lods
or
jmp
retf
cld
mov
push
sbb
mov
mov
jo
mov
inc
add
push
inc
mov
sbb
lea
mov
out
dec
aad
mov
mov
xor
imul
or
cmp
shr
add
dec
leave
mov
retf
in
inc
jmp
sbb
fs
js
add
add
stos
sbb
jmp
and
xor
fistp
out
pop
xor
push
mul
les
pop
out
mov
jl
(bad)
retf
into
int3
aaa
mov
cdq
popa
shl
cmp
mov
loop
mov
fisub
cli
lock
sub
adc
lock
or
xor
jbe
test
hlt
mov
sahf
int3
daa
xchg
mov
outs
jbe
xlat
or
xor
mov
sbb
je
das
push
test
or
sub
cs
sbb
or
dec
xor
sahf
sbb
mov
push
jmp
fwait
jne
dec
imul
cmps
xchg
test
daa
xchg
ins
xchg
outs
push
sahf
xchg
scas
xlat
push
or
pop
in
int3
mov
pop
stos
fidiv
push
jo
and
mov
or
xchg
xor
daa
xor
and
js
in
movs
pop
out
loope
xor
sar
adc
test
inc
push
fstp
stos
arpl
sub
ret
test
jns
sub
mov
es
xor
outs
cmp
sub
push
sub
add
jae
xchg
cmc
arpl
div
mov
mov
dec
and
fcom
push
push
push
in
jne
add
xor
fucomi
dec
cdq
call
xchg
cmps
(bad)
push
xchg
xchg
mov
xor
daa
(bad)
mov
mov
fmul
les
sahf
xlat
jne
jnp
dec
or
mov
adc
xor
sub
mov
fucomp
inc
cmp
fild
mov
into
push
retf
push
push
add
adc
adc
and
or
push
push
mov
shl
pop
sub
cmps
push
xchg
sub
and
sub
call
add
dec
mov
xchg
xchg
mov
loop
test
loopne
stc
test
xchg
aam
sar
cmp
sar
xchg
and
cli
push
lods
les
aad
jp
out
dec
ins
stc
sub
pop
lea
pop
ins
or
test
jae
std
mov
out
inc
jmp
jge
retf
retf
or
out
mov
test
dec
fisub
add
adc
sbb
stos
je
push
sbb
test
pop
jbe
repz
ret
adc
ins
out
mov
xchg
in
xchg
sahf
or
mov
neg
mov
retf
nop
mov
lahf
mov
push
jmp
sbb
push
adc
push
xchg
adc
repnz
adc
sbb
outs
mov
cmp
pop
loope
addr16
loopne
icebp
adc
xchg
fistp
call
adc
repnz
cmp
dec
push
jo
fsubr
neg
dec
fmul
je
scas
dec
popa
ror
cmc
pop
pop
mov
fdivp
mov
xlat
cmp
lock
dec
sub
mov
pop
jns
lahf
call
int
jl
call
jne
int3
mov
test
mov
push
mov
in
or
push
sbb
push
fucompp
jmp
icebp
scas
ss
ss
xchg
fild
add
mov
stos
ins
sub
sbb
loop
mov
cli
jp
pop
pop
ret
test
lock
push
xor
movs
and
mov
mov
(bad)
fistp
mov
add
and
out
xchg
(bad)
bound
sub
pop
retf
data16
and
jne
inc
sub
mov
pop
test
ja
or
lods
adc
retf
adc
int3
push
dec
cs
cwde
dec
sti
cmc
fdivr
push
and
jne
jge
loop
push
jae
adc
cmp
ja
mov
sahf
jmp
pop
stos
jnp
and
mov
push
xor
and
test
(bad)
iret
cdq
jmp
sub
adc
jg
das
addps
mov
in
das
dec
in
lods
lock
or
inc
mov
adc
push
addr16
mov
add
and
les
cmc
xchg
gs
add
je
aas
sbb
test
sti
sub
lock
rcl
mov
push
cmc
mov
mov
push
pop
jmp
aad
pop
pusha
test
xor
cwde
stc
inc
test
call
nop
add
or
loopne
jle
cs
lods
popa
sbb
pop
and
mov
in
jg
pop
mov
sub
bound
mov
dec
sbb
movs
shl
mov
leave
ja
push
mov
lock
fst
jnp
fbstp
dec
fistp
les
repz
jge
mov
ror
cmp
mov
test
mov
dec
stos
or
fstp
sbb
dec
sub
movs
dec
sub
lods
lahf
xchg
mov
aaa
lods
sbb
in
out
cld
call
rcl
dec
push
aaa
loop
imul
add
add
mul
add
jl
or
cmp
mov
movs
or
dec
jo
in
les
rcr
shl
mov
mov
pop
repz
add
imul
and
sub
sub
jnp
xor
add
mov
xor
add
push
add
ficom
mov
mov
xchg
dec
add
adc
jb
scas
xchg
mov
inc
je
loope
out
mul
xor
popa
dec
into
in
fs
in
and
sbb
mov
add
xor
fstp
sar
in
pusha
mov
ins
data16
ins
loope
push
and
in
sub
ret
push
out
aas
clc
inc
sbb
test
fld
(bad)
pop
add
sbb
fisttp
xchg
sub
xor
shl
and
out
xor
ret
sbb
mov
jl
je
call
push
cli
js
lea
cwde
and
and
test
mov
aaa
mov
cmc
sbb
loopne
into
xor
ja
rcr
loopne
je
xchg
js
xor
call
mov
cmp
sub
stos
aad
mov
(bad)
ror
xchg
dec
in
and
mov
hlt
jb
retf
aad
dec
pop
bound
cli
adc
addr16
and
int3
icebp
call
iret
shl
inc
sti
sub
or
int
imul
jae
push
aam
sbb
(bad)
push
icebp
cmps
cmp
jg
int3
call
xchg
xlat
xlat
push
out
adc
dec
not
in
rcr
ja
mov
stos
add
jno
(bad)
pop
or
fstp
repnz
and
cli
sbb
fs
dec
sub
or
xchg
or
push
fst
adc
int
test
pushf
pop
mov
cmp
int3
ret
dec
cli
retf
inc
add
pop
inc
push
ror
sub
imul
ins
pop
jo
repz
mov
and
je
and
cmc
xor
mov
fs
dec
aas
sti
ficom
push
adc
enter
movs
aad
int
loope
sub
mov
imul
dec
cmc
repz
popa
(bad)
repz
jno
lods
adc
loope
pop
fs
jno
or
mov
arpl
sbb
shl
pop
sbb
xor
cmps
push
xor
cmps
and
stos
inc
mov
adc
mov
and
sub
inc
std
and
stos
sbb
and
jecxz
add
shr
mov
test
mov
imul
jne
mov
aam
shr
bound
pop
xchg
out
xchg
les
jb
cmc
mov
movs
arpl
ficomp
lea
jno
jmp
test
in
pop
dec
pusha
jl
retf
aad
cmc
xchg
inc
mov
imul
push
sub
push
xchg
mov
mov
xor
movs
into
fistp
push
clc
dec
(bad)
sub
xchg
adc
shl
xlat
mov
ds
push
fs
xchg
push
or
mov
sar
ds
addr16
leave
cmp
out
and
imul
mov
push
or
push
xor
inc
push
push
rol
jecxz
retf
test
ror
push
movs
push
push
test
xor
aas
push
jp
nop
les
das
leave
and
(bad)
inc
jp
mov
ret
xor
dec
fld
cli
xor
pushf
das
aam
add
xchg
push
mul
fst
fisttp
int3
lea
push
rcr
cmps
fstp
popf
adc
add
pop
scas
cmc
bound
pushf
adc
jl
sbb
pop
sti
adc
and
dec
and
cmp
mov
fld
les
inc
aam
or
push
ficomp
inc
inc
idiv
push
cmp
cmp
push
xor
(bad)
pop
or
add
mov
cmp
adc
imul
dec
idiv
in
repz
movs
out
fs
jp
jmp
mov
xor
arpl
or
lods
bound
pop
mov
stos
movs
sahf
inc
fs
xchg
xchg
fisub
fwait
lock
adc
sti
inc
lods
cmp
cs
out
jl
mov
in
std
hlt
push
and
dec
lahf
pop
sbb
dec
je
mov
je
js
test
mov
cmps
aad
fimul
outs
aas
je
fisttp
scas
lods
push
out
jns
cmp
add
call
cmps
test
jb
push
jmp
lods
dec
add
nop
adc
cmp
test
sbb
jo
xor
mov
lds
cmps
retf
adc
cwde
mov
mov
fisub
add
or
push
repnz
idiv
mov
int
cmp
push
dec
inc
loopne
leave
retf
fs
popa
das
adc
pushf
lock
xor
or
nop
fld
ins
xor
adc
jp
mov
aam
push
data16
psubsw
stc
add
ins
inc
push
push
pop
loope
xor
sbb
call
push
inc
mov
and
push
call
and
pop
das
cdq
jbe
adc
and
or
addr16
adc
add
imul
mov
push
push
adc
jbe
fisttp
retf
popf
cdq
or
cmc
pop
jle
or
sbb
inc
pusha
out
aam
jne
xchg
fidiv
pop
cli
and
call
sbb
ins
ins
imul
int
cwde
aam
mov
pop
into
jmp
xchg
adc
out
sahf
fstp
popf
out
aam
xchg
fnstcw
push
das
in
fcmovbe
mov
aaa
fcom
push
loop
jecxz
mov
push
(bad)
sub
mul
mov
and
sub
jnp
sbb
push
jge
sbb
sub
scas
sub
inc
cdq
adc
push
mov
or
aaa
les
push
(bad)
adc
xlat
and
aam
mov
jle
out
and
fstp
retf
push
out
mov
jp
add
and
dec
xchg
mov
sub
call
aas
adc
add
inc
bound
sbb
mov
fcomp
out
inc
mov
jne
pop
sti
mov
cmp
sub
xchg
js
mov
dec
mov
inc
push
mov
mov
shl
leave
frstor
ret
mov
loope
mov
sbb
icebp
cmp
adc
xor
lods
jl
and
pop
xchg
xor
dec
movs
cmp
pop
sub
cmp
cmp
outs
cmp
xor
mov
pop
xchg
dec
pop
out
mov
aas
adc
push
xchg
mov
xchg
call
mov
pop
adc
lds
sti
pop
and
push
adc
call
or
shr
fdivr
iret
jno
jle
out
add
ja
push
mov
ret
mov
inc
ret
jp
adc
cdq
sub
aad
fs
mov
lods
xor
mov
mov
arpl
ins
test
xlat
pop
es
ss
imul
test
xchg
dec
xor
or
dec
sbb
mov
test
dec
stos
repz
lods
pop
pop
and
inc
movs
pop
cdq
(bad)
xchg
add
jbe
fcom
push
aas
xchg
mov
imul
pop
or
inc
add
inc
pop
ja
mov
pop
mov
dec
cmp
imul
sub
fsub
out
fdiv
mov
das
imul
jne
add
jl
leave
sbb
cmp
jnp
outs
into
inc
clc
pop
push
xchg
cs
cmp
enter
mov
and
push
(bad)
ret
gs
aad
or
jge
mov
dec
bndstx
dec
outs
or
loopne
out
retf
jecxz
sbb
jae
retf
xchg
stos
mov
shl
(bad)
sub
mov
pop
div
mov
xchg
cli
mov
mov
push
jbe
dec
(bad)
movs
push
and
aaa
pop
xor
push
(bad)
adc
je
popa
movs
push
xchg
and
xor
add
repz
mov
mov
xor
fnstenv
cli
inc
add
pop
sub
sub
or
aaa
xchg
xor
fadd
xor
iret
mov
inc
fisubr
and
scas
add
and
jmp
je
mov
adc
mov
and
addr16
and
ins
scas
mov
add
test
neg
sar
jbe
or
jb
xor
fnstcw
push
data16
sub
std
cmp
sti
mov
mov
loop
push
sub
loopne
repz
mov
sub
mul
xor
xchg
cmp
or
lods
data16
sbb
dec
int3
xchg
enter
fldenv
and
cdq
inc
pop
mov
aas
mov
mov
inc
ja
sbb
mov
out
and
xchg
push
jmp
popf
inc
and
mov
fmul
xchg
nop
sahf
xlat
or
pop
add
pop
rcl
push
push
ficomp
xchg
sub
pop
cmp
sahf
cmps
rol
push
call
je
cli
lahf
test
scas
xchg
cmp
scas
push
in
addr16
pusha
mov
and
mov
(bad)
xor
lods
and
data16
push
icebp
xchg
jle
cmp
out
popf
movs
push
rcl
add
adc
dec
jge
dec
pop
cs
cli
mov
mov
push
inc
adc
outs
jnp
sbb
ds
int
inc
add
ds
fsubr
fs
out
loope
xor
scas
push
cmp
mov
stc
push
cwde
std
mov
xchg
aam
or
cmp
sahf
neg
push
dec
cmp
not
cli
mov
ret
jae
add
leave
enter
and
clc
sahf
xchg
das
push
sar
sub
pop
fsub
push
xlat
loope
fiadd
into
and
mov
dec
adc
fwait
cmps
xchg
enter
and
inc
out
cmp
adc
add
dec
mov
pushw
repnz
jle
jo
stos
retf
(bad)
iret
arpl
jno
mov
xchg
stc
push
lds
jo
or
xor
cmp
xor
repnz
sar
mov
and
dec
cli
sbb
push
aaa
push
lock
push
scas
lds
fmul
or
add
mov
xchg
cdq
sbb
push
inc
sub
jo
jmp
sub
pop
das
(bad)
in
adc
das
pop
adc
jb
pop
mov
jne
jg
call
mov
leave
dec
pop
je
add
stc
dec
nop
xchg
repnz
(bad)
dec
mov
xchg
jl
pop
sbb
push
sbb
ins
cs
and
(bad)
call
(bad)
loop
and
inc
sub
xor
lods
mov
cmp
pusha
int
mov
xlat
gs
rcl
gs
das
arpl
dec
jmp
inc
cmc
fcomp
bnd
mov
or
inc
pop
inc
test
pop
fcmove
pop
cmp
fmul
pushf
push
push
lock
out
cmp
push
push
add
xor
in
stos
in
pop
fld
push
lea
push
cmp
cdq
push
jp
out
sar
ret
test
push
push
adc
push
jg
push
jl
inc
mov
mov
iret
sbb
push
scas
dec
pop
int
stc
or
cmp
xchg
sahf
mov
mov
cmp
cmps
arpl
xor
mov
sub
fisubr
cmc
out
adc
pusha
lods
in
add
and
inc
jmp
adc
mov
imul
inc
push
rol
push
mov
outs
(bad)
pop
cmc
dec
sar
rol
dec
sub
mov
push
and
inc
adc
push
sbb
call
into
and
mov
adc
fst
or
jae
(bad)
pop
mov
lods
or
mov
add
or
mov
arpl
test
ror
inc
gs
cdq
or
fs
xor
mov
iret
enter
int
repz
mov
(bad)
mov
out
shl
std
js
jmp
lds
add
loop
adc
cmp
jno
test
imul
xchg
mov
gs
rcl
pop
adc
mov
ds
mov
inc
retf
or
stos
mov
cmps
cmps
sbb
mov
iret
fsub
pop
ins
xor
dec
popa
sub
or
mov
cmp
sub
xlat
mov
jl
mov
gs
add
cmps
sbb
add
add
outs
enter
out
ficomp
in
xchg
jae
(bad)
jb
inc
(bad)
fcom
cmp
pop
fild
dec
jae
mov
cwde
mov
retf
mov
jo
ja
and
and
ret
xor
dec
not
cmc
aad
test
jp
out
xor
nop
mov
test
jp
pop
fst
xlat
jmp
rcr
fnstenv
clc
ins
inc
inc
fiadd
xchg
loope
push
test
lea
ftst
cmp
out
ins
push
inc
call
fadd
test
adc
mov
shr
out
mov
jb
sbb
push
push
mov
icebp
jae
call
mov
clc
adc
and
xor
aas
neg
std
and
add
inc
push
jo
push
rcpps
je
(bad)
jecxz
bound
popf
inc
cmp
out
cmp
imul
inc
hlt
jg
ja
dec
fiadd
(bad)
inc
xchg
cmp
dec
cmp
cmp
pop
fadd
dec
inc
dec
pavgb
repnz
mov
int3
cld
loop
push
popf
sub
es
fadd
push
fist
lahf
je
inc
mov
jb
add
push
std
jecxz
or
nop
sbb
icebp
call
out
or
icebp
sti
and
(bad)
loope
cdq
mov
mov
int
push
test
pop
or
pop
aad
jmp
outs
sbb
cmp
inc
fwait
sub
add
mov
mov
push
in
test
sub
daa
push
shl
xchg
cld
cmp
(bad)
fnsave
mov
popf
and
ds
sub
int3
mov
mov
cmp
mov
fcomp
fidiv
retf
inc
push
adc
out
push
sub
jb
cmp
mov
nop
ins
call
or
xchg
mov
mov
xor
popf
and
stc
xchg
cmp
push
xchg
add
xchg
jbe
cld
jno
sbb
popw
cdq
loopne
mov
xor
jmp
out
sti
mov
aam
and
dec
cmp
mov
(bad)
sbb
or
add
jne
sar
sub
mov
and
dec
pop
jmp
cmp
movs
pop
dec
and
movs
jne
xchg
mov
out
push
imul
mov
add
mov
xchg
cmp
pop
pop
jl
(bad)
and
mov
jo
xor
xchg
stos
jmp
outs
inc
clc
fiadd
dec
jns
loope
ds
push
or
xchg
loope
sub
xchg
cmp
sahf
ds
bnd
(bad)
ror
int3
fsubr
jmp
or
cmp
scas
iret
movs
mov
cmp
add
inc
retf
scas
into
xchg
xchg
test
pop
loopne
retf
inc
jg
mov
call
xor
pop
push
push
dec
inc
div
cmc
movs
mov
sti
loope
or
aam
jno
jecxz
jo
push
jo
dec
adc
call
mov
hlt
sbb
or
call
and
mov
adc
jge
push
sbb
sbb
ror
pop
and
dec
mov
cmps
pop
movs
jb
add
enter
pop
inc
jmp
sub
mov
xlat
or
addr16
xchg
ret
mov
dec
and
cdq
daa
jle
lock
arpl
movs
pop
neg
xor
scas
push
jbe
mov
or
lea
xchg
mov
outs
sub
xchg
pushf
pop
arpl
jnp
sbb
mov
dec
mov
sub
test
out
jae
outs
xor
les
mov
sub
imul
mov
jnp
in
xor
imul
xor
and
jg
jle
mov
mov
mov
mov
mov
sbb
or
loop
int3
out
cmp
sub
ret
out
imul
jg
and
pop
inc
lods
in
lock
mov
popa
or
dec
pop
in
jae
dec
inc
sub
xor
ins
pop
nop
sbb
(bad)
push
daa
add
int
leave
mov
inc
inc
or
cmp
ds
sbb
nop
mov
pop
or
test
fwait
sbb
mov
imul
xchg
add
sub
pop
cmc
ret
push
and
jge
scas
faddp
das
in
mov
or
aas
sub
pop
(bad)
fld
adc
sti
and
adc
and
or
add
addr16
inc
mov
repz
and
or
fcmove
arpl
in
mov
cdq
test
adc
and
arpl
cmp
fisubr
inc
jno
pop
cmc
mov
pop
fs
cmp
xchg
aaa
cdq
icebp
dec
fidiv
hlt
out
mov
push
das
add
mov
adc
(bad)
push
aad
(bad)
loopne
lds
les
(bad)
push
inc
dec
jbe
(bad)
fcmovnbe
or
sub
pop
outs
mov
sbb
mov
push
scas
stos
movs
mov
cmp
pop
inc
mov
scas
sub
adc
cwde
leave
stc
bound
stos
stc
xor
mov
cwde
dec
popa
sub
jnp
stc
jbe
jb
pop
mov
cs
xor
cmp
pop
inc
cmp
mov
jg
dec
mov
xchg
pop
out
aas
daa
bound
out
jp
and
out
retf
dec
nop
enter
fsub
push
das
lea
adc
pop
in
xchg
aaa
sahf
lds
sbb
cmp
test
mov
add
xchg
mov
jp
psubb
cs
mov
sub
add
(bad)
pop
inc
pop
xchg
mov
cmc
call
mov
aaa
stc
dec
inc
or
xchg
mov
sub
and
aas
lods
fidivr
jnp
add
ins
jmp
fistp
lahf
mov
mov
popf
inc
xchg
xchg
mov
xchg
ret
dec
addr16
adc
inc
xor
(bad)
mov
stc
or
mov
xchg
in
retf
inc
xor
pop
ins
mov
push
jp
in
jge
mov
jl
dec
out
mov
adc
inc
rcl
fdivr
and
jnp
mov
shr
jb
ins
jl
idiv
daa
push
mov
je
adc
ucomiss
fsubrp
stos
sbb
mov
push
add
je
stos
push
jbe
pusha
gs
mov
dec
and
test
imul
cmp
mov
retf
lods
or
jg
add
leave
jbe
mov
jo
repnz
inc
std
lahf
pop
jno
or
sub
cmp
sub
mov
mov
call
mov
inc
pop
mov
mov
push
mov
or
push
dec
jge
push
shl
sbb
sbb
jmp
out
stos
mov
imul
sub
inc
aad
sub
stos
sti
pop
out
mov
loop
mov
stos
nop
pop
ja
fiadd
pop
mov
shl
cmp
xchg
dec
cmps
retf
push
xlat
pop
dec
push
jnp
pop
sbb
or
pop
inc
or
adc
adc
mov
jne
fisubr
jns
in
jmp
mov
es
push
lahf
(bad)
mov
inc
sub
outs
mov
and
jecxz
rol
movs
icebp
dec
cmp
out
pop
mov
mov
push
mov
sbb
mov
dec
adc
sub
cmp
fs
fmul
cmp
aaa
mov
push
cwde
arpl
fwait
(bad)
jb
jmp
pop
dec
add
push
scas
cld
xlat
mov
outs
dec
inc
daa
mov
xchg
int3
mov
movs
sahf
fsub
pop
xor
xor
sar
add
push
push
and
sub
test
or
mov
ss
or
and
aas
(bad)
sbb
inc
xchg
test
dec
xor
ds
jae
test
test
sbb
mov
xchg
maxps
sub
or
lods
push
retf
lea
movs
enter
cmps
push
push
push
jno
jl
lods
test
sub
adc
in
in
jnp
mov
not
push
pop
(bad)
retf
jmp
cmp
mov
and
stc
sbb
idiv
test
sbb
into
es
clc
cmp
js
add
mov
cmp
dec
ret
xor
ror
sahf
push
jns
pop
scas
cmp
div
in
das
pop
dec
fnstsw
cmp
adc
push
and
arpl
adc
test
sub
xchg
out
fld
(bad)
cmp
ds
adc
rcl
push
stos
in
icebp
mov
ret
adc
mov
pop
dec
test
push
jmp
jbe
mov
xchg
sub
xchg
lods
popf
xchg
push
pop
pop
jg
popf
stos
es
mov
inc
mov
std
fidiv
(bad)
ins
add
stos
jae
aad
xlat
stc
push
push
jp
jecxz
mov
scas
movsx
fimul
hlt
ret
loop
cmps
mov
(bad)
stc
lods
mov
pop
pop
test
push
jg
cmp
jno
fmul
ja
jo
adc
cmp
ja
cmp
cmp
push
cmp
and
out
jle
(bad)
mov
inc
pushf
cld
push
(bad)
icebp
xchg
fist
loopne
fcom
mov
sbb
in
sbb
mul
shr
sahf
addr16
jns
std
test
mov
aas
and
std
ins
pop
push
les
stc
mov
sub
sub
ins
and
pop
mov
sub
in
movs
je
mov
inc
and
mul
mov
push
push
enter
add
dec
xor
mov
rcr
or
cld
jno
mov
cmp
xchg
inc
mov
dec
in
nop
or
es
mov
addr16
mov
fs
push
fs
cld
dec
jb
(bad)
(bad)
dec
mov
lds
sbb
scas
cld
fprem
mov
aas
mov
jbe
call
test
cmp
sbb
loop
add
cmp
ja
xor
dec
mov
dec
(bad)
(bad)
pop
ret
mov
leave
push
daa
dec
addr16
mov
(bad)
(bad)
test
and
sub
out
pop
mov
sahf
jp
sbb
jb
sub
in
imul
xchg
fst
mov
jno
mov
test
and
dec
test
xchg
mov
hlt
mov
lea
sub
cmp
xor
mov
and
mov
xchg
mov
cmp
out
push
jne
or
scas
cdq
outs
aas
or
push
push
hlt
and
mov
in
mov
nop
push
push
dec
not
xor
mov
repz
push
inc
rcr
call
(bad)
cmp
sbb
(bad)
mov
pop
lods
jl
bound
cmps
int3
loop
fisttp
xchg
movs
jnp
in
mov
mov
cmp
sub
call
cmc
ss
xor
dec
imul
and
mov
inc
outs
mov
inc
mov
aad
adc
mov
mov
cmp
stos
mov
scas
fistp
or
cli
xor
addr16
in
in
mov
and
dec
mov
out
imul
dec
or
dec
pop
add
dec
stc
inc
adc
gs
jnp
(bad)
aas
(bad)
sbb
cli
pop
jns
cmps
xor
mov
dec
mov
cdq
sub
add
repnz
dec
mov
jno
in
sub
(bad)
fld
dec
dec
pop
mov
xchg
sub
and
lods
mov
aad
pop
imul
mov
in
cmc
into
xchg
or
jae
jnp
or
jae
sub
sar
push
cmp
loope
jno
retf
cmp
in
mov
inc
add
cmp
pop
aas
sbb
ss
js
fidiv
push
push
cwde
shl
xor
das
pop
es
nop
mov
ds
add
push
movs
(bad)
test
pop
or
jnp
ins
pop
cmp
arpl
inc
dec
dec
call
add
inc
in
cmp
and
pop
mov
or
mov
cmps
test
xchg
ja
adc
(bad)
lods
fwait
div
stc
pop
imul
imul
ror
mov
cmp
rol
clc
jae
mov
push
xor
and
xchg
jo
test
cdq
push
jae
dec
or
(bad)
dec
pop
(bad)
push
push
inc
dec
cmp
cmps
cmp
inc
cli
adc
pop
jge
push
mov
js
sub
call
jp
addr16
outs
push
mov
push
sub
mov
and
mov
lds
pop
(bad)
pusha
adc
mov
repnz
pop
mov
retf
outs
cmc
and
das
mov
sub
mov
lahf
mov
mov
imul
fdivr
mov
es
push
jae
sub
xor
push
dec
push
stos
scas
stos
xor
mov
daa
push
mov
stc
cmp
add
cmps
aas
inc
jnp
hlt
cld
jb
in
and
mov
jnp
mov
dec
int
pop
mov
int3
fwait
mov
add
push
ds
dec
push
push
pop
loope
cmp
(bad)
in
mov
cwde
and
js
test
lahf
loope
mov
stc
cmps
and
fimul
std
mov
sub
(bad)
repnz
mov
retf
repz
cmp
jbe
js
jl
inc
or
cmps
in
jbe
xchg
xor
sub
fist
mov
push
cmp
out
xor
outs
jmp
or
sub
lods
enter
enter
push
xchg
ja
inc
xor
push
mov
test
gs
movs
out
nop
and
and
icebp
xor
dec
mov
loop
dec
dec
imul
adc
sub
push
push
inc
arpl
in
fs
movs
and
and
sbb
ins
push
push
lahf
inc
dec
shr
pop
shl
mov
inc
pop
and
(bad)
cmc
xor
das
adc
dec
loopne
stos
mov
mov
ror
add
pop
push
mov
test
daa
inc
cmp
adc
sbb
jno
mov
sbb
mov
fmul
popa
xor
add
push
(bad)
int
movs
push
fs
mov
and
(bad)
pop
jnp
aas
cs
int
fadd
stos
push
nop
cli
jg
iret
sub
xor
pop
in
es
lock
cmp
lahf
mov
(bad)
xchg
mov
sub
scas
or
jle
aas
sub
cs
jno
vmovaps
outs
pop
sbb
xchg
mov
push
sub
js
mov
nop
out
pop
add
or
ja
cmp
cs
jnp
push
xchg
adc
adc
pop
outs
sbb
pop
ficom
pop
or
popa
pop
pop
retf
xor
aas
ret
dec
push
sub
mov
jg
dec
fimul
pop
neg
pop
cld
fstp
inc
adc
inc
jl
inc
xchg
xchg
dec
mov
sub
sub
lods
outs
mov
jmp
call
jns
mov
nop
xchg
pop
test
ficomp
ins
jg
mov
mov
jge
mov
mov
jmp
pop
or
cmps
dec
sub
retf
pop
mov
fwait
sbb
jmp
or
(bad)
or
retf
(bad)
sub
movs
push
mov
mov
jno
xchg
cmc
mov
xchg
dec
pop
mov
fnsave
add
inc
push
sub
inc
ds
in
vpsrld
dec
popf
in
cdq
ret
or
push
inc
outs
mov
jl
cmc
xchg
mov
call
retf
xor
sub
into
call
addr16
out
push
shr
in
mov
jp
fcom
clc
mov
push
ror
pop
and
fmulp
(bad)
xor
adc
push
xchg
inc
push
cld
stos
xor
adc
jno
pusha
pop
imul
inc
in
pop
pop
mov
call
dec
nop
mov
mov
leave
aad
out
mov
icebp
cmp
ficom
loopne
iret
mov
and
cmp
xor
pop
jecxz
mov
dec
addr16
cmp
ret
xor
add
cdq
xchg
xchg
les
out
sub
push
ret
cmp
push
repnz
sbb
int3
fdivr
dec
sbb
cdq
mov
popa
aaa
mov
sub
into
(bad)
jns
push
push
cmp
add
test
or
jne
je
adc
nop
pop
cmps
cmp
push
sbb
iret
je
jp
and
jb
xchg
push
out
sub
cmp
pop
or
lock
fcom
mov
jnp
push
daa
xchg
mov
(bad)
aad
ins
ja
cli
test
sbb
or
out
mov
adc
rol
xor
fmul
pop
sub
shl
mov
call
adc
outs
inc
ds
cmp
pop
dec
pop
adc
xor
aaa
arpl
cmp
xchg
add
dec
clc
shl
or
mov
push
and
mov
adc
mov
dec
jecxz
push
test
cmp
jecxz
jb
sub
sub
xchg
imul
(bad)
dec
mov
or
sub
cdq
aam
push
sahf
fsub
xchg
fs
dec
mov
aas
cmp
dec
shr
nop
add
aas
js
in
push
inc
add
(bad)
icebp
outs
outs
mov
jmp
jmp
xchg
out
sbb
xchg
mov
sub
ss
and
jge
out
std
aad
jo
fidiv
ror
mov
mov
lea
test
push
fwait
push
test
out
sub
and
lea
cdq
retf
imul
not
jns
push
and
pop
adc
sub
mov
(bad)
mov
pop
mov
inc
test
mov
push
xchg
stos
pop
shl
dec
out
cmp
mov
push
mov
or
retf
push
and
and
sbb
fs
adc
lahf
cmp
and
imul
xor
mov
add
gs
out
or
or
cmp
adc
mov
outs
mov
scas
add
cs
push
int
loopne
inc
out
jmp
mov
js
scas
dec
retf
movs
(bad)
cmps
inc
and
call
les
sub
pop
push
inc
or
(bad)
ins
xchg
out
out
or
push
jo
ret
ret
cmp
pop
inc
push
fcomp
rcpps
jae
add
aas
jp
inc
jmp
pop
dec
or
gs
jecxz
arpl
push
pop
in
ret
fstp
mov
dec
enter
xor
jb
add
push
scas
scas
jns
adc
cdq
fld
xor
nop
mov
and
shl
pop
xor
push
add
gs
xchg
mov
inc
dec
add
and
jg
mov
and
sub
sbb
shld
add
mov
push
shl
add
in
fist
xchg
mov
and
jno
in
or
xchg
inc
dec
push
aam
les
popa
adc
rcl
out
retf
or
adc
add
shr
sub
push
or
leave
es
mov
pusha
mov
or
xor
xor
dec
dec
dec
add
ds
fsubr
mov
in
test
cmps
movs
or
stos
sbb
mov
cmc
dec
mov
ds
out
pop
dec
ret
mov
into
fs
dec
inc
and
ins
loopne
scas
adc
mov
xchg
or
jns
jg
lahf
xor
pushf
retf
inc
sub
add
mov
xchg
sti
test
push
rcr
mov
stos
add
or
ins
xchg
xchg
not
sub
repz
mov
cmp
pop
arpl
mov
jmp
add
rcl
push
sbb
adc
sub
rol
popa
shl
mov
ficomp
push
pop
fidivr
dec
lods
and
test
outs
in
sub
cli
adc
jnp
jnp
out
mov
daa
clc
and
xchg
sar
or
push
pop
aaa
(bad)
rol
imul
jb
outs
nop
aad
mov
out
mov
mov
pop
(bad)
lds
mov
scas
push
sub
addr16
cmp
cdq
inc
mov
inc
cdq
jae
fist
jl
ins
stos
stos
jp
adc
jge
mov
sub
in
xchg
push
mov
(bad)
(bad)
shr
sbb
repnz
mov
and
push
and
addps
mov
lods
cs
jmp
push
pop
das
mov
pop
xor
push
mov
add
loop
xchg
and
test
dec
or
mov
cmp
cmp
loopne
sbb
pushf
fs
add
adc
bnd
aas
or
push
pop
sbb
sar
inc
in
sbb
mov
dec
cmp
aas
test
lock
loop
mov
ins
out
mov
pop
mov
sub
ins
pushf
lods
adc
dec
xor
or
stos
mov
jae
jb
mov
or
jbe
movs
icebp
inc
jnp
loope
std
loopne
movs
sub
out
shl
inc
les
retf
and
mov
mov
dec
xchg
jb
cmp
out
mov
push
push
(bad)
icebp
jl
push
mov
xchg
test
cmps
push
mov
imul
repz
fdivr
sbb
sub
xor
adc
pop
jae
ja
xchg
jle
push
dec
dec
add
loopne
test
addr16
mov
dec
sbb
pushf
and
add
push
(bad)
ror
inc
sub
or
pop
les
dec
(bad)
in
xor
stc
mov
cdq
call
pop
mov
mov
cli
dec
int3
fcompp
data16
test
push
jo
mov
cmc
add
mov
inc
pop
push
imul
fistp
cmp
ja
fwait
push
and
fdivr
add
pop
cmc
sub
mov
or
call
fisttp
jb
ficom
inc
or
ja
ja
xchg
(bad)
pop
repz
inc
pushf
outs
sub
or
dec
pop
add
out
xlat
fstp
add
sbb
xchg
in
xor
xor
xchg
loop
cmps
shl
nop
ins
jnp
movs
mov
xlat
stc
dec
mov
mov
fcom
out
sbb
sub
std
inc
bound
add
std
imul
jg
imul
mov
fsubr
sbb
add
stc
jecxz
nop
jo
enter
out
xchg
out
jg
and
(bad)
stos
dec
clc
cmps
jmp
mul
pop
adc
push
sub
int3
iret
js
into
mov
push
pop
movs
mov
xor
(bad)
lock
inc
(bad)
mov
out
sbb
cmp
xor
sub
clc
inc
pop
add
cli
jle
in
ffreep
jg
cld
enter
sub
pop
ror
mov
mov
mov
mov
ds
test
push
mov
fnstenv
(bad)
ds
movs
cvtpi2ps
ret
ins
sbb
sar
mov
ret
sub
in
and
retf
sbb
sub
inc
mov
mov
add
xor
pop
retf
movs
adc
fidiv
ret
jne
loopne
push
jnp
fisubr
pavgw
loop
sbb
je
stos
aad
jnp
dec
push
and
stos
inc
nop
mov
imul
jnp
or
(bad)
jno
mov
loope
fisub
int
movs
je
xchg
daa
pop
xor
test
mov
repnz
div
addr16
nop
fwait
aad
les
das
push
push
pop
sub
loopne
jo
jno
jmp
cmp
sbb
test
pop
cmp
pop
pushf
das
das
mov
xor
inc
mov
cmps
mov
dec
ds
call
mov
add
sbb
cmps
or
xchg
or
(bad)
push
and
pop
pop
(bad)
inc
pop
sbb
jnp
(bad)
and
push
mov
jns
push
inc
cmc
in
cs
shl
clc
hlt
sti
lahf
push
retf
in
add
dec
jmp
out
aam
cld
or
add
mov
pop
or
mov
lds
sub
clc
and
inc
xor
push
inc
cld
or
inc
cmp
dec
aaa
js
sar
cld
stos
xor
(bad)
fisub
and
stos
mov
cs
and
(bad)
mov
cmps
lahf
dec
xchg
jne
repnz
cwde
pushf
jmp
fdivr
rcl
test
lods
push
sbb
jb
inc
ret
add
lds
into
xor
xchg
popf
jne
mov
jmp
outs
hlt
adc
xchg
int
xor
pop
ja
stos
nop
sub
in
dec
mov
pop
xchg
frstor
jmp
pop
bound
xor
ins
xchg
sbb
scas
cli
pop
imul
jne
imul
out
retf
add
out
js
push
mov
jno
jp
xor
inc
jae
mov
(bad)
call
(bad)
lods
mov
int
cmp
call
xchg
mov
imul
or
je
in
hlt
cmp
mov
sbb
rcr
pop
mov
sub
adc
faddp
inc
repnz
pop
mov
(bad)
cli
dec
adc
cs
mov
xchg
sub
ins
cmp
movs
retf
lea
ins
(bad)
rcl
cmp
push
xchg
adc
add
mov
and
add
or
dec
push
xchg
imul
and
dec
into
cmps
ret
lods
cmp
stos
pop
sbb
and
adc
aad
stc
scas
xchg
xchg
inc
clc
sub
(bad)
inc
cli
daa
lods
mov
add
pop
pop
ds
popa
jl
int3
mov
fcomp
stos
jle
jae
scas
hlt
mov
jmp
mov
inc
call
(bad)
in
cmp
sbb
mov
pop
cwde
add
gs
sahf
mov
cmp
rcr
movs
addr16
cmp
mov
iret
dec
push
loop
push
imul
xor
dec
movs
ret
pop
retf
(bad)
mov
retf
push
jge
dec
or
jmp
fidivr
pusha
inc
ja
mov
retf
mov
cdq
pop
rcl
sbb
test
aas
sti
xchg
sahf
push
ret
mov
aaa
in
jno
cli
out
inc
call
lds
cmp
out
sbb
scas
cmp
pushf
clc
push
stc
loop
popf
dec
and
dec
bound
sub
sub
jmp
out
(bad)
jge
mov
neg
pop
mov
int3
jp
(bad)
fcomp
push
add
jo
jecxz
mov
sar
dec
pop
aaa
sub
int
ds
shl
das
mov
enter
add
xchg
(bad)
icebp
mov
movs
es
(bad)
das
stos
je
hlt
mov
xor
outs
push
outs
sbb
outs
test
mov
adc
test
dec
popa
and
test
cmc
xlat
sub
jp
pushf
rcl
out
out
xor
enter
mov
mov
cs
pop
fidiv
cmp
sbb
imul
test
movs
mov
pop
sbb
xchg
pop
je
sub
mov
inc
and
fdivr
sbb
loop
fimul
aaa
fisttp
fist
fcmovb
cmp
mov
cli
leave
mov
call
push
aas
fisttp
fsub
inc
int
hlt
mov
push
jle
xor
mov
dec
cmp
aam
jno
addr16
sub
jle
or
mov
mov
jge
pop
cmps
dec
sbb
iret
fwait
stos
mov
cmp
movs
cmp
(bad)
cdq
mov
mov
xor
inc
stc
sub
mov
rol
xor
data16
mov
mov
mov
and
sar
jnp
mov
cli
lock
xor
bound
inc
jnp
add
push
(bad)
push
cwde
pop
je
lods
sub
jne
jno
mov
in
mov
icebp
daa
addr16
pop
ss
out
cdq
jl
gs
xchg
fsub
or
mov
sub
(bad)
fwait
jo
sub
daa
jns
adc
sub
adc
int3
dec
dec
inc
test
movd
jle
test
rcl
jl
aas
jne
fcomi
loopne
mov
fs
out
pop
and
aam
jae
cli
out
lahf
or
push
push
xchg
and
loop
mov
and
mov
mov
movs
lds
jg
cmp
mov
sub
repz
or
dec
popf
dec
push
fs
test
mov
or
mov
neg
movs
jno
jmp
call
data16
out
and
mov
inc
stos
and
and
and
loope
movs
fcomp
mov
ins
jmp
sbb
jmp
mov
sub
outs
clc
lods
out
push
pop
push
jl
lds
inc
cmp
mov
add
mov
inc
pop
mov
sub
lods
sbb
fmul
inc
mov
mov
(bad)
test
gs
in
sbb
cmps
lock
es
call
pusha
pop
mov
sbb
xchg
fwait
xor
push
jle
addr16
cdq
pop
adc
push
test
out
shl
data16
push
loopne
jmp
dec
retf
mov
or
xor
sti
clc
call
daa
lea
pop
rcr
mov
cmp
cdq
sbb
iret
jp
xchg
push
dec
mov
push
repnz
and
aam
mov
scas
sub
jne
in
dec
xor
shr
loop
movs
cld
mov
stos
lea
popa
js
pop
xor
pop
pop
pop
push
loopne
dec
or
fwait
lock
mov
mov
xor
xchg
and
mov
adc
inc
leave
mov
fild
mov
popa
ret
fidiv
mov
(bad)
xchg
stos
ds
and
mov
xchg
xor
dec
xchg
push
pushf
add
jge
pop
nop
mov
xor
or
clc
clc
iret
pop
xchg
jecxz
cmps
movs
push
or
dec
cmp
cmps
les
ret
dec
icebp
aad
iret
ss
dec
cli
rcr
add
sub
mov
mov
adc
jg
int
jne
aam
cmp
cmp
stc
or
and
xchg
aaa
xchg
cmp
jne
shl
daa
mov
out
xor
fld
out
xchg
frstor
jmp
or
sub
out
sar
cmps
iret
sub
fdiv
push
sub
test
in
aas
aaa
aad
inc
pusha
in
jecxz
test
das
popa
imul
lods
add
push
movs
ss
add
pop
dec
xchg
pop
mov
push
push
xor
ficomp
xchg
push
std
inc
into
inc
add
or
ins
push
aaa
and
popa
sub
and
pop
out
outs
mov
push
stos
pcmpeqd
loopne
enter
in
inc
out
xchg
icebp
mov
inc
mov
lods
cmp
data16
cmp
out
out
add
clc
or
shl
pcmpgtb
push
mov
or
xchg
mov
pop
adc
dec
lahf
lods
ins
outs
imul
xchg
pop
outs
pop
iretw
dec
fcmove
mov
lods
call
push
xchg
mov
in
cmp
mov
cmp
or
test
pop
xor
call
pop
and
push
cmps
lods
cmp
jl
sahf
mov
sbb
fcomp
lock
or
test
adc
(bad)
popf
movs
adc
ret
jno
cmp
bound
in
bnd
rcl
push
repz
cmp
mov
das
xor
dec
fwait
call
jge
aad
push
ds
pushfw
mov
xchg
add
loope
cmp
cdq
inc
iret
push
sbb
ret
cmps
ins
in
cmps
add
or
jl
push
sub
mov
in
out
jno
xchg
in
jno
mov
adc
xchg
mov
(bad)
sbb
pop
push
xor
std
sar
adc
sub
mov
movs
leave
arpl
inc
inc
sbb
aas
add
aaa
and
adc
pop
lods
(bad)
fisubr
or
push
xlat
xor
leave
dec
xor
mov
outs
pop
xor
and
and
neg
(bad)
mov
xchg
push
and
das
mul
aad
adc
clc
aad
xchg
sub
ret
iret
pop
retf
lock
or
add
mov
dec
cld
or
pop
mov
jmp
mov
retf
jle
add
pop
std
sub
nop
inc
iret
fucomi
jmp
into
mov
cli
enter
fstp
pop
pop
fiadd
mov
lds
adc
and
test
mov
int
push
repz
adc
push
scas
xchg
mov
jnp
movs
lock
imul
out
pushf
lahf
sbb
pop
fimul
pop
out
inc
mov
push
adc
mov
xchg
bound
movs
mov
xchg
push
mov
ret
jo
rcr
pop
mov
fimul
sub
or
and
xor
cmps
xor
fsubr
lea
sahf
data16
inc
in
out
lods
div
sub
pop
mov
add
(bad)
enter
or
xchg
lahf
push
mov
adc
popf
mov
scas
mov
aad
jl
inc
mov
inc
cwde
sbb
pop
xchg
bound
push
push
inc
out
daa
movs
xchg
adc
je
ds
(bad)
mov
(bad)
mov
mov
mov
sbb
or
mov
arpl
loopne
outs
adc
in
sub
(bad)
stos
jnp
jae
popa
and
jecxz
ds
lahf
js
test
aad
jl
adc
sbb
mov
mov
daa
mov
pop
retf
neg
adc
cmp
(bad)
jbe
ss
fcmovnb
imul
sub
inc
xchg
cmp
pavgw
cmp
xor
outs
call
mov
dec
jbe
(bad)
dec
jmp
lods
mov
add
jecxz
cmp
dec
stos
nop
mov
ins
jns
sub
add
mov
pop
jle
or
push
icebp
dec
imul
mov
popf
and
shl
mov
retf
dec
dec
and
cmp
push
pop
jle
xor
(bad)
std
dec
or
jb
mov
add
nop
neg
xor
pop
sub
int
and
add
not
inc
pop
dec
rol
add
push
lea
mov
ffreep
inc
sahf
adc
or
xchg
loop
cmp
mov
sub
jge
pop
and
jg
pop
movs
pop
leave
xlat
xchg
push
jmp
pop
daa
imul
ss
mov
add
fcom
push
gs
jge
rcl
mov
ins
mov
xchg
inc
pop
mul
test
mov
das
sbb
aas
retf
adc
sbb
pop
inc
push
mov
imul
adc
cmp
fwait
pusha
mov
xor
add
imul
ret
nop
fs
push
xchg
int3
scas
xor
lock
push
adc
(bad)
pop
stos
or
imul
test
mov
cmp
adc
mov
cmp
xchg
sar
xchg
cmp
and
lea
push
inc
int3
scas
loop
xchg
adc
cmps
fnstenv
outs
dec
movups
fcmovu
fs
push
jns
loopne
push
data16
pusha
jbe
call
xor
movs
fist
in
fsub
(bad)
mov
mov
pusha
popa
mov
dec
fist
xchg
mov
aas
nop
jle
adc
popa
xchg
mov
std
sbb
sar
lods
push
pop
test
xor
int3
stc
pusha
arpl
sub
or
push
xlat
add
cmc
mov
sbb
scas
sbb
div
stos
out
test
pusha
in
sbb
adc
adc
jmp
jecxz
popf
test
dec
sbb
frstor
xor
shr
xor
jge
js
sar
push
cwde
add
test
shr
(bad)
jle
lods
test
(bad)
aas
dec
add
cmp
cli
push
shl
mov
fiadd
sub
repnz
(bad)
out
popa
or
repz
and
retf
fs
(bad)
ror
mov
fst
mov
movs
cmp
fimul
jbe
mov
prefetchw
or
std
push
cmp
repz
stos
inc
les
pop
test
sbb
adc
into
lahf
popa
std
repz
sbb
dec
ficomp
push
push
je
adc
shl
rcr
fwait
dec
mov
repz
aam
enter
adc
or
stc
pop
sbb
imul
outs
jne
push
add
xchg
stc
cwde
push
(bad)
mov
pop
cmps
pushf
out
pop
jecxz
jg
mov
push
mov
sbb
adc
out
rcl
and
and
(bad)
or
lods
jg
inc
jg
jo
jecxz
(bad)
lods
stos
and
pop
cmp
pushf
dec
xor
fld
es
xor
inc
sub
add
push
shl
cmps
mov
mov
inc
xchg
lds
inc
mov
cdq
fistp
dec
push
rol
jbe
in
mov
xchg
or
inc
rcl
pop
cmp
cld
xchg
icebp
sti
es
cmp
mov
sub
sub
popf
leave
mov
addr16
inc
jbe
push
repz
xchg
lds
sub
leave
push
inc
arpl
or
int3
js
jle
mov
inc
pop
pop
clc
cwde
repz
hlt
adc
xchg
inc
jge
lods
sub
jb
icebp
lods
int
mov
popf
or
(bad)
dec
aaa
call
dec
retf
push
test
mov
dec
cmp
cmc
xor
jle
sub
cmp
jecxz
clc
test
add
sub
ds
mov
arpl
xchg
fs
fbstp
cld
xor
je
xchg
mov
scas
clc
jns
fstp
aam
pop
aam
fnsave
idiv
aaa
jns
push
rcr
or
inc
dec
and
mov
pop
mov
ds
sahf
jb
pop
sbb
das
arpl
jmp
popa
fistp
adc
inc
(bad)
push
jae
sub
sub
retf
adc
iret
cmc
aam
outs
das
(bad)
adc
jecxz
dec
lock
mov
jle
call
fnsetpm(287
cli
je
in
xor
ja
cmp
outs
cmp
daa
inc
push
stos
mov
inc
xlat
loope
jno
sbb
int3
xchg
nop
mov
test
test
sbb
cmc
sbb
pop
aad
sub
xlat
sti
arpl
arpl
outs
test
in
adc
ds
jle
pop
in
mov
inc
mov
ror
jae
and
or
aaa
pop
neg
pop
test
lods
mov
aad
xchg
ja
jbe
push
div
mov
xor
mov
test
jae
(bad)
jmp
and
sar
inc
test
inc
test
fidivr
sbb
iret
jg
mov
dec
xchg
xor
adc
repz
ret
cmps
cvttps2pi
ins
in
sub
shr
imul
jmp
scas
pop
pop
cdq
call
dec
add
dec
fadd
mov
(bad)
out
jae
adc
jno
dec
js
and
test
cmps
rcl
daa
pop
stos
fs
popa
inc
js
test
mov
lock
shr
scas
(bad)
and
neg
lahf
das
jp
pop
jge
sbb
pop
in
push
jge
inc
mov
pop
mov
repz
iret
clc
aaa
jne
add
jmp
lods
sub
dec
jns
cmps
into
retf
jmp
add
and
push
sbb
cld
iret
jne
mov
jmp
out
pop
ficom
lea
pop
push
scas
out
add
lods
add
xor
ret
dec
mov
fs
shl
retf
cmp
mov
mov
jge
ins
dec
and
xchg
jnp
jo
mov
retf
nop
jbe
pop
xchg
adc
hlt
call
retf
pop
ja
dec
retf
pop
imul
(bad)
mov
xchg
fimul
enter
inc
and
mov
inc
pop
popf
ret
in
mov
(bad)
inc
fsubr
pop
add
dec
or
xchg
and
and
add
in
shr
mov
xchg
inc
rol
xchg
cli
imul
scas
ret
or
in
mov
add
jmp
addr16
ins
and
cmc
cmp
sbb
imul
test
arpl
ror
push
scas
mov
pop
jae
mov
jp
push
push
shl
pusha
pop
cld
xchg
cmp
push
clc
inc
cmps
xchg
outs
jb
xor
lods
data16
(bad)
mov
loope
mov
mov
(bad)
xor
es
js
cmp
repz
fnsave
and
in
arpl
xchg
xchg
mov
ficomp
fmul
jge
int3
imul
pop
jg
fdivp
dec
xor
xor
(bad)
jp
push
and
mov
scas
scas
(bad)
mov
sbb
ret
fcom
fldenv
xlat
xor
or
retf
bswap
mov
xor
mov
jb
daa
aaa
sub
dec
fiadd
jmp
sti
scas
mov
repz
scas
xchg
jne
dec
lock
test
repz
mov
pop
cli
jge
cli
mov
mov
fisubr
out
xchg
or
xchg
int3
(bad)
(bad)
adc
cli
out
idiv
mov
or
add
add
dec
push
sub
jbe
iret
jo
inc
and
mov
mov
lahf
out
call
cmps
inc
dec
aaa
mov
pop
(bad)
(bad)
push
sub
mov
retf
xlat
inc
loopne
push
cmc
jae
mov
dec
adc
jno
fs
mov
jo
retf
jp
scas
push
jno
add
popa
loop
das
xchg
or
adc
push
mov
stos
mov
mov
sub
pop
pop
push
mov
xor
(bad)
jmp
daa
inc
and
jle
or
dec
dec
dec
std
stos
sub
add
jecxz
adc
div
and
hlt
push
mov
arpl
cdq
and
rol
push
stc
fidivr
cmc
mov
inc
xor
jge
adc
mov
movs
cs
ja
call
adc
sbb
add
mov
xchg
mov
jge
dec
test
xor
shr
cmps
adc
call
(bad)
lods
adc
dec
add
pop
cli
jne
jg
das
push
cmp
sbb
cmp
out
bound
push
jb
aad
in
sbb
cmp
fnstenv
sbb
and
adc
repz
adc
test
adc
(bad)
js
cli
jl
xchg
scas
movs
pop
out
sahf
sbb
pop
imul
sbb
pop
cmp
aaa
fld
imul
shr
movs
ret
cmp
outs
mov
mov
iret
pusha
xor
icebp
pop
mov
push
jl
ret
gs
inc
push
and
adc
fstp
dec
shl
sub
les
loop
aad
scas
push
jmp
mov
dec
mov
ficomp
sub
cdq
inc
in
xor
add
push
dec
cmp
rcl
jge
enter
or
mov
add
sub
and
fcom
mov
ud2
inc
je
ins
(bad)
jmp
cmp
scas
inc
cdq
sahf
mov
jb
jecxz
shl
dec
ins
dec
xchg
sbb
lock
mov
jb
jmp
pop
xor
mov
(bad)
cli
cdq
push
cwde
xor
data16
rcl
inc
dec
sbb
loopne
push
mov
pop
dec
pop
dec
jecxz
nop
out
mov
and
jle
hlt
mov
outs
into
jnp
les
mov
mov
cs
int
neg
int
xchg
repnz
push
cmp
div
stos
pop
xor
jle
mov
xlat
fwait
rcl
(bad)
cmp
jle
mov
push
cmp
outs
dec
out
mov
or
je
inc
and
outs
in
push
or
cmps
jae
or
sub
xchg
add
(bad)
cli
aad
icebp
pop
xchg
xchg
imul
cwde
addr16
mov
or
pop
inc
mov
mov
pop
jns
(bad)
push
inc
xchg
test
xchg
into
or
add
cli
mov
call
lds
pushf
jmp
call
jae
dec
fwait
pushf
test
lahf
imul
scas
mov
ja
cmps
repnz
cmps
pop
dec
shl
daa
mov
push
pop
dec
pop
or
add
or
sar
jns
sahf
jnp
stos
inc
ret
rcl
cmp
inc
xor
mov
adc
mov
fucomip
loopne
cmp
adc
dec
inc
loope
loope
fistp
sbb
or
jno
sub
les
and
xchg
cmp
in
out
cmc
ret
cmp
mov
nop
repnz
xor
jmp
mov
add
sbb
aad
xlat
jmp
fnstenv
dec
or
xchg
out
mov
popf
stos
push
movs
mov
aaa
neg
mov
leave
adc
jmp
loop
fimul
stc
ins
mov
sub
das
add
mov
push
in
or
jmp
es
fbld
mov
gs
adc
xor
sbb
aas
lea
std
js
cmp
jbe
iret
dec
jg
es
movs
xlat
pushf
test
stos
scas
fs
rol
pop
push
cmp
(bad)
out
or
rcr
jp
rcl
popf
test
pop
mov
inc
adc
or
jle
movs
jp
fwait
dec
add
pop
sub
ror
rol
xchg
fldenv
sub
dec
add
(bad)
jnp
and
mov
in
test
sub
mov
cwde
sbb
dec
(bad)
cmp
mov
xlat
lds
sbb
xchg
ret
jge
fst
sahf
pop
pop
push
retf
add
lea
packssdw
das
mov
sti
jmp
adc
jns
je
xchg
ja
bnd
jecxz
jbe
out
dec
pushf
mov
jl
lea
jecxz
xor
add
pop
pushf
pop
mov
daa
jmp
pushf
cs
mov
inc
stos
gs
mov
scas
push
xor
inc
xchg
dec
dec
ret
adc
cmps
mul
mov
test
jge
pop
xor
popa
and
int3
loop
shr
sub
push
or
adc
out
push
shl
mov
pop
imul
int
mov
cmp
sbb
and
out
into
cmp
push
pop
inc
jle
rcr
sbb
dec
jecxz
cmps
scas
or
xlat
sbb
add
pinsrw
and
popa
popf
push
cmc
stos
test
ss
pop
sub
les
out
subps
test
test
mov
xor
scas
popa
pop
adc
mov
cld
daa
cmps
or
mov
jo
sub
cmps
xor
arpl
stos
(bad)
loop
push
out
sub
test
test
outs
push
and
or
sub
mov
and
hlt
sub
lds
push
ret
push
loopne
aam
aad
imul
cmps
jecxz
push
cs
jne
mov
xor
mov
out
push
push
push
cmp
imul
ins
sbb
es
jp
movs
adc
fisttp
cmp
xlat
mov
xor
xlat
mov
pop
out
into
mov
aaa
dec
daa
jl
(bad)
push
je
push
inc
fidiv
sub
jl
jb
ror
mov
scas
inc
into
hlt
(bad)
shl
cmp
test
xchg
mov
mov
xchg
xor
and
mov
pop
xchg
lock
ins
imul
fiadd
sub
mov
imul
nop
in
jl
fbld
idiv
dec
sbb
and
inc
popf
push
mov
fcomp
movs
mov
push
jmp
fdivr
push
cmp
loopne
push
inc
mov
push
mov
sub
and
pop
mov
jge
clc
mov
xlat
jecxz
es
fwait
and
jmp
xor
(bad)
daa
es
in
leave
sar
sbb
xor
sti
mov
push
leave
in
dec
sti
pop
xchg
lods
xchg
sbb
xchg
rcr
je
inc
daa
adc
loopne
dec
jns
shl
pusha
and
mov
push
popa
cmp
and
ret
call
std
jne
dec
popa
xor
and
loop
sti
cdq
push
cmps
repz
lods
lahf
jg
out
(bad)
movs
mov
and
and
jg
ret
iret
xchg
adc
mov
mov
adc
dec
dec
cs
jae
add
pop
and
dec
adc
xchg
(bad)
jmp
out
jno
fisubr
icebp
ss
test
sbb
or
xor
shr
or
int3
fwait
cs
or
jp
hlt
popf
pop
jne
std
dec
cmps
not
xchg
mov
jmp
test
cmp
xor
je
ds
add
scas
mov
mov
pop
jne
jae
dec
shl
imul
mov
test
sti
and
sahf
jg
adc
inc
das
loope
shl
add
jae
mov
jl
cmps
or
sbb
push
fadd
add
sub
in
xor
call
(bad)
fisub
xchg
(bad)
sar
stos
stc
rcr
es
xor
inc
mov
adc
mov
stos
out
dec
ins
jge
mov
aas
mov
es
mov
add
rol
cmps
xor
dec
push
out
cmps
dec
notrack
jb
push
push
and
ud1
ficomp
add
mov
imul
mov
pop
sbb
dec
jb
aas
mov
clc
jb
pop
jecxz
movs
(bad)
mov
push
test
add
inc
mov
es
(bad)
repnz
or
mov
fisttp
sbb
cmps
mov
jp
ss
mov
(bad)
movs
cmc
xor
sub
push
jecxz
fcmovb
jne
imul
nop
popf
mov
dec
jecxz
scas
dec
data16
and
jbe
outs
sbb
mov
cmp
ror
lods
fldcw
fist
iret
jbe
mov
fdiv
mov
cmp
mov
cmps
nop
dec
or
(bad)
mov
pop
mov
sub
dec
or
(bad)
clc
inc
ins
xchg
lods
sub
fild
xor
adc
xor
mov
stos
adc
adc
stos
cli
add
ret
mov
pop
(bad)
mov
cmp
f2xm1
addr16
xchg
je
out
xor
mov
ds
test
push
jae
jp
xchg
in
imul
mov
mov
popf
addr16
sub
cmp
push
sbb
shl
cmp
retf
sub
in
aad
test
cmp
inc
and
mov
mov
or
int
push
add
loopne
or
scas
add
into
xchg
ret
loop
dec
cmp
jbe
sbb
mov
fisttp
jnp
stos
shl
push
push
sahf
arpl
(bad)
cmp
push
inc
pop
pop
movs
ins
xor
enter
cli
stos
sti
inc
or
jbe
mov
aaa
test
xchg
sbb
mov
mov
jmp
sub
pop
cld
dec
add
mov
lock
mov
ficom
sbb
mov
sub
(bad)
sti
adc
pop
lock
xchg
aas
push
cld
sbb
xchg
ins
sbb
dec
mov
and
mov
lds
retf
cmp
jl
push
retf
addr16
cmp
dec
icebp
ins
fidiv
jne
mov
push
pop
cs
es
mov
mov
das
call
add
sbb
imul
xchg
cmps
cdq
xor
inc
pop
push
sbb
xchg
lods
dec
inc
mov
js
shr
cld
test
sbb
ret
add
mov
(bad)
mul
cmp
sbb
inc
adc
cmps
mov
repnz
inc
lods
mov
scas
pop
and
mov
cmps
sbb
mov
call
inc
data16
test
arpl
loope
and
dec
cld
inc
retf
jg
xchg
adc
push
mov
je
xchg
push
or
add
xor
xchg
sti
js
in
xacquire
adc
jge
add
push
xchg
cmps
sbb
sub
(bad)
(bad)
test
sahf
out
mov
enter
push
stos
loope
push
arpl
and
call
or
or
pop
pop
(bad)
sbb
sbb
jl
test
pop
clc
retf
loop
pop
pop
(bad)
fist
xor
mov
leave
pop
imul
xchg
in
cmp
out
sub
xchg
nop
stos
push
(bad)
inc
cmps
cmp
cdq
pop
in
mov
hlt
hlt
div
cmps
push
leave
repnz
(bad)
cmp
mul
shr
test
cmp
cmp
test
inc
push
xchg
out
ficom
mov
lock
sbb
jge
ins
cmp
aaa
std
xchg
out
int
les
test
mov
hlt
int
pushf
lods
test
sahf
xor
push
cdq
mov
mov
mov
icebp
lahf
test
(bad)
xchg
prefetch
xchg
mov
xor
sbb
pop
test
arpl
pop
movs
popaw
dec
loope
in
call
int3
inc
loopne
mov
jbe
test
mov
(bad)
sar
push
cmp
jmp
pop
inc
lds
lock
stos
ret
lods
enter
stos
imul
xchg
cmc
ds
cmp
xchg
or
leave
ret
and
xchg
cmp
jp
jno
push
mov
cmp
sbb
push
ss
xor
test
dec
out
or
jg
and
fcompp
outs
call
pop
repnz
inc
sbb
push
pop
jo
cmp
pushf
push
rcr
loopne
and
(bad)
mov
movs
pop
push
shl
retf
adc
call
scas
add
(bad)
cwde
sbb
dec
movs
pop
or
ss
and
sbb
cmp
sbb
mov
mov
int3
and
sbb
ror
mov
hlt
sahf
mov
and
jecxz
into
nop
mov
test
xchg
test
and
xchg
pop
push
push
mov
and
inc
cmp
imul
dec
ins
and
jb
mov
test
sub
mov
jbe
lods
ret
movs
mov
imul
dec
adc
pop
test
cmps
sbb
pop
push
outs
cmc
sub
jge
and
cwde
movs
into
xchg
in
pop
push
adc
pop
mov
mov
mov
mov
fs
aaa
fwait
pusha
sub
xor
iret
stos
ins
mov
loope
test
push
add
outs
ins
(bad)
adc
mov
jmp
aam
call
dec
sar
test
daa
arpl
cmp
(bad)
sbb
ret
sbb
repnz
sbb
ss
dec
sti
push
inc
fcmovbe
arpl
stos
aad
pop
jmp
imul
ffreep
or
(bad)
les
pop
lds
adc
mov
mov
fistp
and
cmp
jmp
fmul
inc
and
(bad)
aaa
int3
inc
std
mov
inc
imul
and
sahf
dec
jo
push
dec
sbb
sub
inc
in
xor
xchg
fisubr
push
mul
sbb
clc
push
xchg
imul
and
xchg
sub
or
dec
lods
shr
mov
pop
mov
mov
push
out
inc
movs
shl
in
(bad)
mov
sub
shl
and
out
pop
sbb
retf
(bad)
sub
adc
sbb
popa
xor
jl
mov
mov
scas
xor
test
daa
stc
add
mov
xor
adc
stos
sub
aas
push
mov
cmp
jl
cmp
jge
dec
mov
pop
sbb
jle
sbb
out
push
push
ret
clc
adc
sbb
sub
shl
dec
std
out
jl
sar
add
jbe
jecxz
jmp
in
jo
sbb
xlat
loopne
jns
push
cmp
test
dec
inc
stc
mov
test
xor
adc
sub
popf
xchg
imul
mov
sahf
xor
(bad)
sbb
or
xchg
mov
xchg
lea
(bad)
add
jecxz
pop
into
ja
jg
in
inc
adc
repnz
dec
adc
fadd
imul
or
push
mov
dec
fwait
pop
mov
iret
scas
pushf
mov
jmp
adc
pop
shr
test
push
les
mov
cwde
shr
mov
mov
mov
cmp
loopne
ret
call
jmp
mov
stc
or
out
sub
dec
push
fisub
push
sbb
pop
in
popa
xchg
pop
call
ss
lods
jnp
(bad)
jmp
mov
leave
idiv
std
and
inc
mov
xchg
or
adc
mov
shl
and
mov
mov
mov
dec
das
xlat
repz
cmp
add
mov
aas
and
arpl
pushf
addr16
or
cmp
mov
stos
out
mov
cwde
lds
or
lahf
sbb
sar
pop
enter
fistp
pushf
add
pop
dec
push
dec
dec
ds
inc
lock
mov
adc
xchg
daa
adc
ret
in
jne
xchg
cmp
dec
mov
cmc
xor
adc
adc
push
add
mov
lods
retf
push
mov
push
or
in
add
inc
fs
fldcw
push
inc
ins
sbb
pop
cmp
mov
popa
shl
sahf
mov
jns
cmps
dec
(bad)
mov
add
or
(bad)
add
in
loopne
jl
retf
sbb
jne
dec
int3
mov
ja
test
daa
enter
push
aad
(bad)
mov
xor
inc
in
jne
mov
pop
adc
arpl
inc
aam
or
lea
mov
addr16
mov
xor
sar
test
jmp
in
cmps
sbb
fwait
jl
cld
pop
cmps
rcr
(bad)
stos
add
cmp
mov
mov
cli
pop
push
push
cmp
inc
push
popa
mov
and
cmp
and
cmp
dec
call
aad
pop
cwde
in
(bad)
and
xchg
sbb
retf
in
mov
retf
xor
fld
out
push
sbb
test
or
pop
mov
push
stos
outs
mov
adc
mov
cmps
call
jmp
pop
pop
pop
mov
ss
cmps
xchg
push
adc
push
dec
stc
cmps
mov
mov
cld
arpl
stc
adc
shr
jmp
add
popa
sub
fadd
aam
test
nop
sub
push
or
sub
ins
fdivr
and
mov
dec
fcmovbe
out
bound
(bad)
fldl2e
imul
test
pop
stc
sub
xlat
rol
xlat
cmp
loopne
cmps
mov
adc
ret
clc
lods
mov
mov
xor
lea
fistp
into
fdiv
(bad)
jge
push
xchg
xchg
pop
cmps
movs
mov
ficom
sbb
call
aaa
add
xor
or
inc
fbld
popf
push
xchg
mov
mov
mov
pop
mov
and
sbb
push
push
stos
stos
stos
in
fwait
push
sbb
inc
loope
add
jb
je
aam
fld
sbb
adc
mov
add
push
jo
fdiv
mov
test
jg
adc
ins
mov
std
and
shr
mov
fiadd
and
ret
xor
xchg
xor
add
jo
nop
xchg
mov
or
fmul
push
dec
cmps
(bad)
push
inc
ins
jl
xchg
daa
mov
imul
xchg
push
jecxz
in
mov
test
(bad)
fstp
sub
popa
mov
arpl
inc
mov
les
arpl
jns
mov
jg
jne
std
imul
mov
xor
and
xchg
jo
sub
adc
inc
fst
cmps
push
mov
adc
xchg
pushf
cmc
push
ja
xchg
dec
out
lock
push
sub
pcmpeqw
ss
sbb
mov
nop
jb
rcl
sbb
fwait
mov
das
add
ins
shr
cmc
arpl
jmp
ror
sar
dec
lea
les
mov
lahf
iret
cli
add
shld
mov
jge
jnp
adc
mov
lahf
fstp
outs
and
sbb
adc
leave
std
jl
in
aaa
sbb
popa
and
fldenv
imul
add
push
call
jmp
dec
xchg
test
fidivr
rcl
pop
xchg
push
sub
pusha
leave
out
ficomp
test
int
cmp
(bad)
(bad)
xchg
(bad)
(bad)
xor
lea
outs
sbb
push
mov
stos
in
push
sub
and
fiadd
fnsave
cmps
aam
add
stc
cdq
cs
je
mov
shr
out
scas
rcr
mov
sbb
std
mov
dec
xchg
jle
scas
mov
or
rcr
sbb
hlt
repz
loopne
xchg
pop
jb
xchg
cdq
retf
mov
jp
adc
and
fs
lahf
add
pop
inc
out
sub
push
mov
loop
pop
push
xor
cs
cld
xor
addr16
pop
or
xchg
int3
add
jb
push
or
mov
jo
cmps
lahf
fs
pop
addr16
adc
fld1
mov
shl
iret
jmp
retf
and
xchg
mov
ficom
mov
jae
shl
aas
clc
mov
imul
push
fld
mov
ror
lds
fnstsw
dec
cdq
shr
aad
lea
pop
inc
pop
mov
sub
dec
jmp
pop
mov
aam
pop
adc
rol
pop
ror
sbb
push
xchg
push
arpl
fwait
add
rcl
ret
js
inc
jae
mov
loop
push
mov
das
js
or
xor
mov
icebp
test
enter
idiv
mov
cmp
push
int
clc
fmul
jbe
mov
jne
jle
lods
movs
pop
xchg
int3
fild
sti
jo
mov
adc
or
cwde
sub
xchg
sbb
repnz
and
mov
jmp
bound
loop
retf
sbb
sub
ja
xchg
push
xchg
add
add
or
xor
xor
xchg
dec
leave
adc
adc
inc
lahf
xchg
push
pop
pop
cdq
retf
xor
movs
sbb
xchg
call
rcl
sbb
pop
scas
pop
es
(bad)
pop
dec
push
add
ss
mov
sub
vaddsd
lods
(bad)
add
test
mov
jg
ret
leave
(bad)
outs
int
sbb
data16
and
pop
cwde
and
in
lahf
pushw
shr
push
or
imul
xchg
sub
jge
fisttp
jge
in
cmp
push
xchg
fist
sub
xchg
sti
dec
xchg
sbb
cli
stos
call
cs
retf
add
(bad)
and
and
jecxz
or
add
loop
mov
int
sbb
fdivp
test
mov
xchg
xchg
iret
pop
rol
xlat
mov
mov
pop
xor
mov
add
test
sbb
fistp
sub
mov
xor
sbb
ja
out
fcom
in
xchg
pop
mov
or
cmp
adc
popa
js
and
sti
jge
cmp
sub
xor
shl
jo
cli
push
add
aaa
ins
mov
iret
push
dec
pop
or
fstp
fnsave
jmp
sub
mov
sar
inc
stc
sub
sub
imul
push
ja
dec
aam
aas
(bad)
mov
mov
xchg
sbb
jne
fs
adc
cld
out
push
sub
jmp
or
xchg
jg
sbb
fdivp
or
nop
std
aas
out
fisttp
adc
and
mov
dec
pop
mov
inc
ror
lahf
sbb
jb
hlt
or
shl
pop
xchg
jp
or
sub
ret
aam
xchg
(bad)
jmp
pop
test
movs
push
adc
lea
pop
jns
mov
cmc
pop
nop
(bad)
loopne
add
out
aas
call
sar
pop
ja
inc
imul
data16
in
adc
popa
mov
push
and
push
adc
out
add
gs
add
ret
rep
cmps
sbb
clc
int
xor
sub
cmp
cmp
std
loopne
je
adc
cli
jbe
inc
outs
dec
xchg
sahf
cmp
lods
retf
cmp
addr16
sub
dec
jne
mov
xor
mov
add
loopne
mov
popa
xlat
jns
idiv
ins
or
or
lea
mov
and
test
cmc
push
imul
iret
inc
dec
aad
stos
jo
das
fsubr
push
je
nop
or
mov
mov
xchg
sub
inc
stc
not
mov
jp
outs
fsub
retf
in
or
sub
add
js
add
(bad)
push
lock
dec
cmps
retf
fcmovu
sbb
les
in
adc
mov
iret
xor
dec
in
mov
fcmovu
stc
adc
cmp
xchg
push
loope
in
mov
sbb
adc
xor
add
inc
sub
(bad)
xchg
stc
test
add
dec
pop
and
cmc
jae
lock
mov
add
xchg
nop
icebp
out
into
dec
aam
pop
outs
scas
adc
sbb
stc
mov
pop
dec
lahf
shl
or
jb
repz
push
push
fild
xchg
aam
jne
push
arpl
js
mov
call
dec
pop
aaa
fidivr
or
call
(bad)
fld
sub
or
dec
push
inc
mov
sub
add
fdivr
ins
shl
sub
push
in
pop
out
mov
(bad)
sub
push
mov
test
cmp
jmp
mov
retf
ficom
and
mov
inc
sar
in
add
and
xchg
das
enter
push
out
call
sub
mov
sahf
in
fisttp
int
adc
pushf
push
pop
out
cmps
lods
push
xchg
inc
push
jmp
call
fnstenv
aam
push
add
fild
add
ja
stos
popa
or
pop
sti
pushf
jle
arpl
out
ja
lock
daa
pop
loopne
adc
mov
stos
(bad)
cwde
in
mov
mov
xchg
sbb
iret
mov
ret
mov
outs
xor
cmc
jp
pop
je
jbe
inc
into
mov
adc
mov
jecxz
xor
jb
dec
sbb
out
jl
fisub
ret
pushf
imul
js
mov
out
cmp
xchg
jmp
lahf
inc
fucomp
test
adc
xlat
or
push
(bad)
outs
es
fcmovu
cmp
push
adc
dec
adc
cmp
mov
ins
jp
or
sub
in
ja
enter
enter
sbb
mov
jne
lods
push
out
xor
inc
mov
test
mov
in
inc
es
enter
add
mov
cmps
out
xchg
pop
ret
sub
je
pop
xchg
ror
xchg
lea
mov
bound
push
push
inc
test
sub
test
or
test
aaa
mov
and
retf
scas
retf
sbb
daa
rcr
dec
cld
push
jge
cmp
add
loopne
inc
jae
mov
inc
out
dec
push
sub
out
adc
push
in
and
push
adc
sbb
push
clc
repnz
fnstenv
fidivr
pusha
pop
iret
xchg
test
mov
es
jnp
loopne
stos
mov
mov
and
xchg
test
nop
jo
pop
dec
mov
xchg
ja
inc
sbb
adc
and
xchg
dec
outs
push
retf
inc
jge
inc
leave
dec
push
adc
dec
imul
cld
test
ins
in
aas
mov
not
sbb
or
xor
jp
fwait
outs
mov
add
push
or
xchg
hlt
or
fs
sbb
push
push
adc
xor
mov
aas
push
fwait
push
or
outs
(bad)
std
mov
dec
inc
cmp
cli
mov
fimul
pop
cmp
pop
and
js
(bad)
ret
enter
cmp
jb
cmps
add
lea
(bad)
das
cld
js
adc
cmp
sbb
std
push
retf
ror
push
ds
add
xchg
xlat
pop
imul
sub
cmp
sbb
retf
mov
hlt
movs
pop
mov
lods
ds
xor
lods
lds
xor
call
(bad)
and
mov
add
inc
xchg
xchg
push
jp
pushf
je
dec
sub
rcl
pop
mov
mov
(bad)
and
pop
ja
jl
mov
movs
mov
ss
push
pminsw
jns
stos
out
add
and
or
dec
mov
or
clc
hlt
stos
ror
inc
outs
(bad)
pop
retf
sub
mov
mov
fidivr
and
mov
hlt
lea
add
cmp
dec
mov
fist
mov
sbb
call
cwde
daa
mov
xchg
dec
sar
jge
sbb
pop
xchg
pusha
cwde
mov
inc
xchg
mov
xchg
push
sub
sqrtps
fcomp
jle
jl
mov
lahf
(bad)
int3
mov
retf
mov
push
cmp
cld
ret
mov
mov
sar
xor
arpl
sti
aaa
lods
mov
jecxz
sbb
mov
arpl
out
clc
int3
push
ret
xor
mov
ja
pop
xor
aad
xchg
jo
xor
test
push
adc
scas
dec
sbb
aas
cwde
pushf
pop
sub
mov
je
imul
test
xchg
std
retf
ins
mov
ret
imul
jns
cli
retf
xchg
xlat
jg
pop
fild
pop
scas
out
xor
mov
out
call
test
xor
ds
pop
push
fisubr
cmc
ja
loope
test
test
jno
add
cmp
call
xor
xlat
dec
fisub
adc
ds
(bad)
fcmovnb
int
popf
dec
push
cld
dec
in
mov
ins
jb
sbb
mov
repnz
dec
and
scas
pop
jl
and
mov
in
leave
fdivp
in
shl
or
neg
cmp
sbb
fwait
pop
sti
ins
pop
or
mov
pop
dec
popa
and
mov
lea
cld
xor
loop
(bad)
rol
inc
sbb
cld
pusha
and
push
jecxz
stos
mov
shr
mov
push
shr
cmp
mov
or
out
mov
shl
stos
sbb
cmp
pop
mov
leave
and
mov
loope
cmp
xchg
and
je
inc
inc
cmps
aam
out
mov
movs
rol
out
nop
pop
pop
mov
gs
nop
pop
fst
das
mov
outs
lods
fs
stc
cmp
fidiv
(bad)
rol
sub
sub
cwde
cmp
sahf
inc
xchg
pushf
out
or
ficom
cwde
lods
add
into
rol
dec
out
retf
push
call
nop
adc
pushf
mov
aas
dec
loope
inc
retf
pop
sahf
add
out
cmp
xlat
out
dec
xchg
xor
jae
jne
jns
add
cs
cmp
repnz
call
adc
pop
retf
fiadd
out
mov
int
sbb
hlt
lock
cmps
add
std
fidiv
dec
movs
adc
or
mov
adc
fcomi
mov
arpl
push
aas
loope
lods
test
out
out
(bad)
stos
jnp
pop
call
cld
loop
les
or
invd
inc
out
push
(bad)
mov
out
jno
and
cs
xor
pop
call
sbb
and
sahf
sti
addr16
lods
mov
inc
dec
sub
pop
je
loope
cmp
repz
xchg
mov
push
fidiv
lods
in
sti
xor
mov
push
neg
push
inc
add
scas
adc
dec
mov
fld
or
pusha
mov
outs
xchg
stc
sub
lahf
and
movs
sbb
cmp
or
push
jbe
jecxz
pushf
sbb
or
pop
cmp
jmp
inc
fstp
repnz
cmp
mov
mov
mov
rcr
mov
sbb
shl
sbb
inc
arpl
mov
xchg
sub
aaa
hlt
sbb
jmp
je
int
sub
imul
or
and
dec
and
or
xchg
cli
mov
cmp
xor
inc
loop
stos
sbb
fnsave
stc
fstp
and
sub
cli
std
mov
adc
fdivrp
fisttp
fild
adc
inc
push
int3
sar
or
cmp
lods
pop
jb
jmp
mov
or
add
mov
mov
aam
add
pop
ss
push
jmp
cmp
jbe
mov
fcmovbe
js
sbb
je
jle
inc
add
not
in
sub
nop
ja
mov
dec
and
sbb
sbb
popf
not
adc
retf
add
add
push
das
push
out
movs
fst
movs
daa
adc
inc
fpatan
ror
mov
loopne
mov
cmp
push
fdivr
xor
pusha
inc
test
jmp
outs
stos
sbb
shl
gs
xor
and
mov
nop
dec
push
in
jmp
push
adc
adc
mov
inc
out
(bad)
retf
mov
ret
pop
fild
xchg
lahf
pop
(bad)
unpckhps
add
push
or
les
or
sbb
je
imul
xchg
push
adc
sub
mov
jbe
xchg
jnp
inc
fnsave
mov
push
data16
jno
jle
in
repnz
into
aad
mov
adc
and
movs
mov
clc
adc
inc
psubusw
(bad)
faddp
push
(bad)
daa
fld
sub
xor
rol
sbb
adc
jg
pushf
imul
addr16
ins
test
inc
movs
jne
xchg
inc
iret
lahf
jg
inc
or
push
mov
clc
std
ret
rcr
jne
or
test
dec
push
adc
jp
or
pop
jle
les
xchg
mov
iret
and
test
xchg
and
ja
pop
das
ret
and
js
fidivr
ret
dec
xchg
mov
xor
icebp
sahf
ins
xchg
mov
mov
or
inc
jne
shr
dec
mov
movs
dec
mov
push
mov
or
mov
jge
mov
mov
add
lock
lea
out
push
hlt
das
sbb
sub
aam
movs
(bad)
xor
shl
loopne
xchg
sub
cmps
jmp
push
je
or
loop
inc
sbb
pop
loope
ror
ds
movs
cmp
cmp
fnstenv
sub
mov
adc
inc
jns
(bad)
xchg
ds
popa
shl
xor
and
cmp
and
pop
dec
mov
add
push
movs
mov
xchg
mov
cmp
mov
inc
ins
int3
or
dec
leave
out
in
adc
lea
aam
shl
mov
dec
das
dec
xchg
mov
push
jb
jmp
jo
xchg
jle
sub
and
jnp
push
mul
mov
xor
sub
bound
idiv
jne
jo
add
xlat
mov
mov
xor
out
int
sub
mov
jnp
(bad)
push
xchg
call
retf
(bad)
or
arpl
clc
cmp
mov
sar
rcr
in
fdiv
pop
pop
cmc
or
mul
test
out
jl
fldenv
sub
xchg
push
stos
push
fnstsw
imul
mov
and
cwde
je
inc
into
ja
or
int3
pop
push
enter
pop
jge
push
pop
mov
cmp
jns
ret
inc
jmp
jb
xchg
in
mov
jbe
test
xchg
out
mov
lock
push
sbb
and
iret
pop
fninit
clc
push
in
cs
test
movs
sbb
aad
scas
cmc
sbb
pusha
mov
(bad)
jmp
jo
xchg
and
xor
adc
push
mov
test
mov
fcmovb
ss
jle
scas
not
pop
xchg
jg
push
ds
push
retf
addr16
mov
adc
sbb
push
dec
jmp
xlat
fcmovu
xchg
inc
test
(bad)
movs
fadd
xor
mov
mov
mov
push
je
cmc
(bad)
and
or
and
je
std
adc
ret
dec
(bad)
out
fwait
ins
out
push
pop
push
cdq
dec
dec
sbb
test
mov
sub
and
cs
mov
jo
sub
clc
xchg
sub
inc
xor
lods
in
rol
fs
sub
loop
push
mov
dec
dec
in
mov
into
cmps
aam
sbb
mov
and
sbb
xor
push
sbb
fs
enter
call
test
and
repnz
shl
into
push
sbb
sub
sbb
and
add
lea
mov
or
xchg
aam
pop
xor
mov
pop
sbb
and
xchg
xchg
or
cli
inc
pop
mov
cmp
fadd
push
gs
and
shl
ins
and
and
test
jnp
sbb
push
fiadd
dec
adc
xor
push
pop
xchg
sub
inc
ficom
push
adc
lods
lock
fbstp
mov
jp
cld
cmc
loopne
cmp
inc
or
ror
(bad)
push
xor
adc
repz
test
mov
jno
lods
jo
mov
ror
mov
dec
(bad)
hlt
push
cmp
test
call
jns
nop
lahf
push
test
test
bound
popf
jmp
daa
imul
in
sub
mov
int3
out
cmp
call
xor
fdiv
xchg
stc
mov
sbb
mov
adc
cmp
call
loope
fnstsw
and
lods
je
push
movs
std
in
mov
push
out
lahf
enter
fldenv
sub
js
jae
adc
scas
xor
ret
dec
mov
or
(bad)
movs
hlt
mov
xor
or
clc
lds
dec
add
pop
xor
sbb
add
mov
je
mov
pop
mov
(bad)
and
js
mov
clc
or
(bad)
aaa
imul
jno
ds
mov
int
fidivr
fimul
pop
dec
pop
push
mov
adc
pop
and
shl
mov
pop
retf
xchg
shl
jl
lods
cdq
cmp
in
xchg
(bad)
xchg
lock
scas
dec
retf
xchg
pop
adc
(bad)
fs
inc
(bad)
mov
inc
nop
add
(bad)
retf
leave
xchg
(bad)
jecxz
push
(bad)
jb
and
popa
and
cmp
rol
sub
jp
mov
icebp
stc
cmps
call
(bad)
fstp
mov
jne
xor
test
sub
pop
(bad)
mov
test
ins
pop
mov
lea
lahf
nop
or
adc
jmp
mov
sti
inc
pop
push
cmps
jae
jbe
pop
ret
sub
xchg
push
or
push
inc
dec
mov
aaa
mov
lock
es
stos
lea
push
loop
shl
push
outs
add
jbe
mov
pop
stos
imul
xor
inc
in
mov
push
mov
push
imul
dec
outs
push
pop
mov
ins
add
aad
lds
and
sub
dec
or
in
jmp
inc
add
pop
sbb
in
mov
add
loop
test
aas
retf
fs
je
jbe
sbb
in
inc
dec
movs
jne
outs
dec
xchg
xor
inc
in
test
scas
shr
xor
cmp
jg
loopne
loop
out
pop
daa
push
jbe
jmp
pop
lods
jp
add
test
push
and
pop
hlt
call
js
int3
cmps
mov
iret
leave
xchg
jge
pop
mov
loopne
fwait
cmp
movs
imul
outs
cmps
cwde
xchg
or
out
movs
les
rcl
gs
and
scas
cmp
adc
es
adc
dec
jo
pop
sbb
pop
pop
ret
or
or
mul
mov
lds
fcmove
test
lods
data16
fwait
xchg
pop
in
sbb
push
mov
ret
adc
stos
les
adc
inc
push
aad
imul
pop
jecxz
out
pop
jmp
mov
pop
adc
ret
cwde
loop
ret
fs
adc
dec
inc
shl
stos
popa
movs
sub
pop
stos
inc
mul
add
push
mov
pop
iret
(bad)
es
adc
shl
cmc
or
sbb
adc
mov
and
mov
mov
adc
iret
ss
lods
loop
leave
mov
fwait
jle
arpl
sub
inc
xchg
clc
pop
movs
push
lods
mov
sub
adc
(bad)
cmp
loop
xor
out
push
or
jecxz
dec
int3
xchg
cmp
call
sbb
(bad)
sub
mov
mov
(bad)
mov
idiv
fidiv
and
jo
xchg
pop
shl
pushf
neg
fs
or
add
sahf
jne
pop
inc
sub
std
jbe
test
adc
ss
xchg
fwait
add
cmp
jmp
sub
pop
jle
mov
jecxz
in
fdivr
mov
mov
into
icebp
out
fadd
pop
push
(bad)
cmp
addr16
je
push
mov
aas
js
(bad)
cdq
or
dec
dec
push
jge
inc
ret
stos
repnz
sbb
repz
and
inc
fdiv
pop
or
dec
add
sub
mov
in
test
in
test
xchg
stos
enter
ret
stos
xchg
push
add
loopne
push
pop
(bad)
js
mov
test
push
das
and
test
aas
cwde
ror
cwde
mov
inc
(bad)
sub
cs
ret
je
fcom
or
sub
mov
cmp
xchg
fdiv
cmp
or
push
lods
icebp
rcr
mov
dec
jne
imul
push
div
xchg
mov
sbb
jb
stc
jg
js
aad
xor
in
add
mov
adc
test
shl
mov
mov
lahf
xchg
lods
into
outs
inc
arpl
repz
and
xor
aaa
aam
popa
and
fwait
call
scas
data16
xor
dec
sub
add
imul
pushf
sub
dec
xchg
adc
sbb
and
add
xchg
xchg
xlat
or
and
jae
jno
adc
out
sub
sub
xor
or
xchg
add
or
out
repz
xlat
inc
fs
cwde
push
scas
adc
aaa
js
jle
mov
jg
xor
pusha
cmp
js
lea
dec
ds
jge
ds
jge
and
push
bnd
test
test
daa
imul
mov
pop
jno
daa
outs
pop
idiv
imul
sub
mov
sar
imul
cmp
sti
sub
lock
mov
lods
add
xchg
cld
mov
mov
or
imul
sub
or
cmp
lock
call
repnz
xor
push
aaa
test
loop
out
imul
les
outs
test
jb
pop
test
rol
or
add
pop
add
jb
cmp
retf
pop
sub
clc
movs
js
xor
or
sub
dec
adc
xchg
out
lahf
jno
lods
mov
add
or
jne
mov
rol
sub
sub
in
popa
or
fwait
jno
xchg
jl
xchg
(bad)
dec
dec
cmp
sub
pop
and
sbb
cmps
xor
or
cmps
add
and
mov
fidivr
push
dec
jne
inc
ficomp
jmp
fidiv
cmp
out
pop
xor
dec
and
sbb
rcl
pop
fimul
cwde
fst
ins
pminsw
fidiv
push
scas
addr16
sbb
fist
pop
add
test
mov
sar
daa
sub
sbb
add
or
hlt
or
out
adc
ja
out
popf
mov
test
and
add
lods
push
ja
(bad)
scas
push
mov
cmp
addr16
pop
jae
mov
sub
daa
sbb
and
fcmovu
mov
xor
jb
pop
add
repnz
fcomp
retf
ins
inc
and
cli
loope
xchg
xlat
dec
mov
(bad)
dec
aad
mov
scas
sub
test
sbb
sbb
add
mov
xchg
loop
mov
repz
sbb
fadd
sub
adc
test
dec
mov
mov
call
lods
pop
jb
enter
das
sbb
push
jmp
fwait
lock
aaa
xor
jmp
add
mov
adc
fiadd
and
int
aaa
mov
or
fcomp
pop
pop
mov
ret
sbb
(bad)
jae
jmp
add
mov
xchg
aaa
cdq
adc
outs
mov
cmp
movs
xlat
fcom
scas
out
push
lea
jp
dec
cwde
stc
mov
mov
outs
jnp
sub
out
cmp
cmp
add
xor
scas
sub
movs
pop
or
not
inc
dec
jnp
iret
dec
out
push
je
or
xchg
daa
mov
lahf
out
xchg
aas
inc
sub
mov
pop
inc
mov
cmp
jne
sbb
cld
iret
adc
test
test
fwait
test
repz
or
cmps
es
mov
or
mov
daa
mov
mov
lods
int3
mov
dec
test
(bad)
pop
(bad)
xchg
jle
mov
inc
add
inc
cmc
aad
loop
mov
xlat
or
mov
mov
aam
xchg
lock
mov
add
push
xor
sub
pushf
loope
hlt
xchg
add
les
cmp
push
fyl2x
mov
dec
mov
push
rol
xor
xor
cli
sar
loopne
sbb
ret
cmp
xor
mov
movs
mov
sbb
xchg
imul
ins
push
lea
jmp
test
sub
mov
adc
mov
call
call
xchg
in
ins
mov
push
test
nop
cmp
push
jge
mov
add
in
mul
push
dec
push
in
popf
aas
mov
xlat
pop
pop
imul
adc
sbb
xor
cmps
push
cmp
nop
ror
push
retf
pop
sahf
mov
dec
mov
xchg
xchg
outs
jne
lds
and
cdq
cmp
out
mov
je
adc
ja
outs
in
inc
sbb
(bad)
or
jns
mov
test
adc
int
jmp
inc
fbstp
xchg
ret
and
lahf
cmp
scas
dec
dec
dec
or
div
mov
data16
int
das
addr16
imul
adc
in
pushf
stos
scas
push
sbb
and
bound
cdq
test
inc
sbb
add
xor
mov
dec
mov
jecxz
movs
call
out
in
retf
mov
dec
test
rol
jns
(bad)
outs
das
lds
pushf
aaa
sub
mov
dec
ins
add
jle
mov
hlt
xchg
je
int3
(bad)
jmp
fld
rcl
and
or
jbe
out
and
not
fdivr
dec
or
out
push
es
or
mov
dec
cmp
pop
dec
imul
dec
push
outs
inc
sub
jmp
adc
shl
jl
dec
sbb
lods
jnp
and
(bad)
shl
mov
fwait
and
cwde
loop
int3
(bad)
div
ret
(bad)
cvtps2pi
inc
xchg
dec
imul
and
out
inc
popa
pop
jmp
rcl
std
xchg
pop
dec
xchg
cmp
pushf
push
cli
add
sub
in
clc
icebp
mov
mov
imul
out
jp
int
inc
adc
xchg
push
outs
lods
rcl
test
jle
mov
(bad)
or
pop
movs
outs
pop
mov
cmp
not
cwde
cmp
je
fwait
and
mov
xchg
sbb
mov
mov
int
bound
and
mov
or
mov
dec
xchg
ins
pop
leave
jo
jl
inc
cdq
retf
loop
push
xor
loop
cmp
in
pushf
dec
sbb
pop
jp
jnp
and
push
fmul
mov
pop
lods
xchg
les
jmp
mov
push
addr16
jge
les
and
pushw
ffree
rol
or
icebp
es
aas
pop
cmp
push
xchg
adc
fsub
inc
jo
test
call
pop
jle
cmc
xchg
inc
les
lock
xor
fisttp
daa
jmp
add
je
call
add
fidivr
js
sahf
retf
push
xchg
xchg
enter
daa
and
mov
test
aam
je
icebp
mov
fst
shr
dec
mov
xchg
lds
push
shl
mov
imul
push
sub
cmp
push
sbb
jle
in
pop
inc
or
retf
dec
sub
mov
mov
je
repnz
test
push
push
repnz
hlt
leave
fs
jmp
movs
push
cmc
mov
pop
cmp
xchg
dec
call
bound
cmp
std
pop
pop
mov
cmps
mov
leave
popa
sahf
sahf
sahf
inc
cwde
enter
cmp
test
mov
imul
dec
ds
enter
mov
(bad)
push
dec
sub
cs
inc
push
mov
adc
ret
rep
les
sub
dec
push
and
jo
mov
mov
shl
leave
jle
shl
ret
jae
mov
cmps
repnz
adc
push
mov
icebp
imul
xchg
jmp
cli
jo
stos
or
and
ficom
jmp
xor
mov
or
std
not
sti
ss
cmp
xor
imul
push
cmp
jp
pop
stos
push
inc
xchg
scas
push
pusha
xor
test
and
xor
(bad)
mov
jge
mov
rcr
and
jb
repnz
repnz
outs
(bad)
inc
jecxz
add
test
or
(bad)
fidivr
xchg
shl
or
sub
inc
and
dec
dec
shr
jmp
xor
jae
mov
push
xchg
inc
jns
and
or
jbe
ficomp
out
fiadd
cwde
mov
lods
sbb
(bad)
fisubr
in
mov
xor
push
adc
clc
and
addr16
stc
adc
sbb
into
jge
jo
movs
das
dec
test
pop
pop
push
lea
dec
lea
out
xchg
aaa
jmp
add
gs
sub
push
fnstenv
add
ret
stos
xor
aaa
dec
xchg
rcl
(bad)
retw
loopne
xor
jl
or
repnz
loop
rcr
and
icebp
fld
loope
adc
idiv
mov
adc
ja
test
mov
loop
out
sbb
lds
scas
in
mov
pushf
mov
loop
pop
sbb
popa
inc
test
push
sub
adc
dec
ins
loopne
push
xor
xlat
fnsave
mov
rol
pop
or
add
aaa
pop
loope
cmp
inc
out
out
mov
enter
jmp
cmps
mul
inc
call
pop
fld
dec
xchg
lods
in
or
push
fwait
out
movs
ret
movs
mov
aam
mov
pusha
mov
leave
cmp
(bad)
ror
jnp
test
or
xchg
int
enter
and
mov
loopne
add
push
mov
pop
addr16
fnsave
out
jno
mov
mov
sub
dec
mov
jl
jb
aam
mov
stos
icebp
es
adc
pop
mov
cmps
rcr
adc
shl
shr
sub
mov
repz
mov
and
(bad)
or
sub
cmp
or
jl
xor
xor
adc
sbb
mov
popa
pushf
mov
jle
inc
sub
mov
push
out
(bad)
out
imul
mov
sub
andps
out
test
in
cmp
pavgb
and
fs
stc
into
mov
cs
fucomp
xchg
mov
js
add
pushf
jl
fldenv
fdivr
inc
xchg
sbb
rcr
xchg
mov
loope
push
data16
mov
stos
xchg
adc
cmp
outs
neg
je
stos
cmps
pop
sub
and
mov
sbb
scas
clc
cmp
sub
and
mov
cmps
loopne
inc
or
inc
inc
pop
in
sahf
mov
cs
dec
lods
cmp
sub
mov
sub
lds
adc
pop
inc
add
(bad)
stc
in
out
(bad)
in
xchg
jmp
sbb
cmp
cmp
push
ins
neg
loop
dec
sub
adc
fnstenv
jae
xchg
pusha
cdq
jg
out
inc
(bad)
sub
mov
pop
and
icebp
add
jbe
and
dec
adc
mov
pop
stos
cdq
fadd
lods
fidivr
xchg
push
push
inc
sbb
mov
xchg
(bad)
imul
sub
addr16
sub
xchg
mov
push
mov
mov
ins
out
xor
loopne
data16
scas
xor
shr
inc
dec
sub
sti
jb
ins
loope
es
jg
pop
jnp
pop
jbe
test
daa
pushf
sub
subps
pusha
in
push
mov
shr
sub
add
and
sahf
and
out
dec
xor
int
outs
cwde
adc
ret
push
je
out
xor
stos
fiadd
ss
mov
adc
xor
in
inc
mov
xor
jno
pop
out
push
mov
aas
in
mov
sahf
stos
adc
cld
sub
push
jnp
out
lea
inc
dec
cmp
mov
clc
dec
(bad)
shr
jp
inc
(bad)
sbb
xchg
in
push
mov
mov
aam
dec
lds
out
jb
clc
les
ret
mov
sub
jg
jno
movs
shl
and
cmp
xor
xchg
lock
mov
adc
ret
jge
sub
cli
mov
sbb
neg
pusha
jle
imul
das
and
pop
adc
pushf
jae
scas
push
sbb
lods
data16
mov
fistp
jnp
inc
cmps
jl
pop
movs
adc
popf
mov
push
data16
adc
pop
clc
push
push
xchg
leave
stos
xchg
(bad)
loop
dec
int3
ds
(bad)
nop
mov
mov
xchg
cmp
push
stc
or
loop
(bad)
dec
jmp
mov
mov
fwait
cmps
ret
jbe
jae
movs
popa
ret
or
leave
cmps
or
out
fisubr
call
shr
inc
jae
inc
ret
push
xchg
inc
(bad)
jge
or
add
jl
fs
outs
jge
std
mov
nop
adc
clc
sbb
ja
enter
ins
adc
add
adc
lahf
and
sbb
dec
dec
(bad)
xchg
mov
hlt
mul
xor
pop
jno
sbb
daa
cs
adc
xchg
push
es
xchg
clc
sub
adc
into
das
int
dec
xor
sbb
mov
jle
mov
push
sub
rcl
repnz
mov
movs
pop
nop
dec
ret
stos
push
xor
movs
arpl
adc
js
(bad)
mov
pop
out
(bad)
pop
sbb
shl
test
dec
dec
mov
push
push
adc
fld
lahf
hlt
pop
(bad)
sbb
ins
cwde
call
jle
(bad)
xor
cli
add
je
jge
sbb
inc
mov
ins
push
or
in
pusha
or
or
pop
jno
mov
dec
cwde
repnz
scas
xor
sbb
adc
loope
and
dec
aaa
(bad)
jl
inc
arpl
add
and
push
and
add
mov
mov
push
jae
xchg
cmp
cli
add
imul
rcr
je
scas
adc
jmp
hlt
sub
pusha
sub
ret
pop
dec
sti
xchg
nop
sub
shl
add
mov
aaa
sbb
cmp
sbb
mov
arpl
mov
mov
jb
jnp
xor
hlt
cmp
es
push
and
mov
sbb
add
adc
rol
lds
call
adc
pop
xchg
mov
(bad)
(bad)
daa
add
push
jecxz
cmp
and
loopne
movaps
jae
movs
pop
mov
aam
or
loop
add
inc
mov
jmp
movs
add
lods
mov
or
xchg
sub
jns
nop
cwde
dec
fst
and
out
popa
ret
test
dec
leave
out
or
imul
iret
rol
xor
popf
pop
(bad)
jo
mov
adc
and
push
outs
cmps
out
icebp
jecxz
outs
gs
jne
xchg
and
psrlq
(bad)
cmp
inc
aad
rol
in
cwde
jae
fsubr
inc
dec
es
sar
jl
mov
mov
call
(bad)
enter
xor
leave
adc
mov
pop
add
push
dec
adc
ffreep
stc
add
scas
ret
push
sub
mov
movs
adc
mov
movs
bts
pop
or
push
or
pop
inc
aam
pop
jmp
inc
mov
dec
sbb
sub
jnp
sbb
mov
(bad)
adc
jl
jecxz
test
(bad)
sub
mov
mov
repz
mov
icebp
test
add
mov
mov
or
fdivp
mov
neg
jecxz
in
sub
add
jbe
mov
in
inc
jmp
inc
jae
cmp
(bad)
fcmovne
or
inc
mov
jmp
sar
retf
stos
push
ja
jecxz
push
jae
inc
push
dec
cwde
leave
rol
cmps
pop
inc
mov
sub
add
mov
iret
pop
pop
out
cmp
pushf
xor
test
jge
or
sbb
(bad)
pop
push
xchg
mov
int3
fstp
dec
or
cdq
pop
je
popf
push
js
mov
add
leave
bound
jb
pop
or
mov
jae
test
in
mov
outs
xchg
add
mov
push
mov
imul
cdq
popa
ja
psubusb
dec
and
jo
pop
cmps
mov
(bad)
and
outs
loop
lea
dec
jns
scas
and
pop
xchg
fidivr
jle
mov
inc
inc
sub
jg
jne
add
neg
out
aad
lods
sub
xchg
push
adc
pop
or
fidivr
ret
loop
outs
hlt
sbb
sbb
jbe
aad
fs
mov
imul
adc
out
fild
test
inc
jg
push
or
xor
dec
or
xor
mov
sbb
jbe
cmp
add
cdq
push
jb
mov
xor
add
push
outs
dec
inc
scas
pop
sub
adc
icebp
or
call
stos
push
sbb
loope
in
retf
dec
jecxz
dec
xor
pop
jb
dec
pop
adc
xor
outs
clc
pop
inc
hlt
sbb
jne
sahf
mov
nop
loopne
std
dec
jge
or
mov
or
adc
xlat
or
stc
pop
push
jl
stc
ret
stos
jge
jmp
inc
push
mov
adc
ja
nop
lods
cmps
je
and
xchg
pop
imul
fidivr
jo
ret
pop
outs
push
mov
aas
jecxz
add
cmp
imul
hlt
sbb
push
leave
aaa
jmp
pop
int3
xchg
mov
fcmovu
mov
dec
xchg
rol
push
pusha
ins
fbstp
call
les
xchg
ficomp
sub
push
sti
xor
inc
int
xor
out
repnz
push
inc
adc
xchg
push
jae
jmp
cs
movq
xor
dec
rep
push
out
popa
dec
sti
(bad)
hlt
xchg
lea
sbb
sub
outs
inc
xchg
mov
xchg
cmp
sub
fucomi
lds
adc
jns
xchg
add
jo
loop
xchg
stos
inc
fimul
(bad)
call
xor
cmp
repnz
jecxz
inc
sbb
cmps
pop
ins
fist
push
cmp
ja
popf
aaa
retf
add
inc
sub
aaa
mov
data16
dec
out
cmps
aam
cmp
fwait
mov
cmps
dec
jne
sbb
jns
mov
and
pop
sbb
lods
mov
jmp
test
pop
popa
mov
mov
out
ins
mov
mov
ins
test
push
rcl
imul
dec
push
jae
sbb
rcr
mov
mov
cmp
icebp
mov
stc
mov
div
inc
mov
movs
mov
outs
pop
cmp
cli
sbb
mov
les
popf
xchg
pop
mov
lods
aad
pop
xchg
jmp
pop
fwait
xor
ja
cmps
mov
lods
fs
test
test
test
ins
retf
push
cdq
jp
in
retf
cmp
cdq
jg
adc
inc
fisub
xchg
fdiv
pop
xchg
push
je
out
mov
pop
jno
xchg
aaa
sub
jns
cmp
fs
mov
clc
mov
ja
or
xlat
mul
fwait
inc
sub
(bad)
cwde
inc
inc
jp
cmp
xor
add
add
pop
(bad)
lods
or
sahf
jae
mov
xor
lock
sub
ror
loope
dec
movs
dec
push
fwait
shl
pop
inc
cmc
or
cmps
and
cdq
scas
push
push
in
stc
jge
gs
stc
and
xor
cmc
out
data16
test
xchg
jnp
test
rol
mov
mov
nop
mov
jg
fcomp
sub
push
add
jae
fsubrp
mov
inc
(bad)
mov
dec
add
sbb
dec
rol
xchg
(bad)
pop
push
jne
xchg
in
popa
mov
sub
int
int
in
xchg
add
adc
addr16
mov
movs
mov
jnp
test
ss
pop
stos
test
adc
out
adc
or
sbb
pop
int
hlt
call
aaa
gs
cs
iret
add
push
or
(bad)
jmp
shl
lea
retf
xor
gs
pop
(bad)
imul
push
push
mov
pop
test
icebp
inc
inc
je
push
cdq
das
jp
sub
xlat
(bad)
dec
xchg
xor
hlt
cld
mov
mov
cmps
mov
inc
dec
fs
push
into
fisttp
jg
pusha
out
xchg
or
cmps
fild
out
xlat
loop
pop
xchg
push
cmp
xchg
movs
jecxz
mov
aaa
int3
pop
xchg
mov
push
xor
push
sub
add
sbb
jb
and
out
pop
cmc
mov
lods
cwde
aam
js
xor
outs
mov
add
cmc
dec
xor
pop
repnz
pop
add
xor
(bad)
mov
lods
and
sbb
mov
mov
jp
mov
jns
imul
(bad)
stc
in
rol
cld
iret
add
push
dec
test
jbe
add
cmc
and
pop
sahf
adc
jg
mov
xor
mov
les
ror
mov
imul
or
jne
inc
add
enter
fisttp
dec
fwait
dec
xor
dec
adc
mov
mov
jle
pop
add
inc
sahf
sub
movs
xchg
(bad)
in
inc
pop
and
sbb
cwde
mov
test
inc
popf
mov
jmp
stc
neg
push
fcmove
mov
jl
iret
jg
xor
or
fst
dec
mov
in
xchg
jns
or
adc
add
inc
and
pextrw
and
or
mov
push
mov
leave
pushf
xchg
data16
test
and
mov
cdq
sub
mov
jl
pusha
call
lahf
aam
test
push
pop
dec
pop
mov
jmp
call
popf
leave
dec
cdq
add
cmps
mov
inc
addr16
das
lods
mov
es
arpl
icebp
cmp
mov
jne
icebp
in
or
push
rcr
mov
cmp
and
xor
push
sub
out
cmp
or
std
or
out
push
add
popf
cmps
shl
xchg
sub
test
stos
data16
idiv
(bad)
movs
xchg
lock
mov
popf
sub
xchg
shr
aas
cs
and
shr
xchg
push
lahf
mov
not
cmp
ins
shl
ret
and
pop
movzx
pop
or
push
(bad)
jmp
shr
push
xchg
lds
cs
fs
or
jg
rcl
call
jns
and
jp
adc
mov
ja
loope
repz
lock
sbb
add
inc
adc
jne
pop
stos
add
dec
fsub
fadd
jecxz
sahf
and
or
ret
add
ret
popf
enter
dec
popa
push
setb
xor
jg
sub
hlt
arpl
and
mov
push
scas
in
push
mov
clc
pop
movs
rol
jg
lea
jne
xor
iret
add
xor
push
stos
test
imul
cmc
std
in
dec
cmp
or
or
adc
add
and
xchg
add
dec
stos
and
xchg
cmp
mov
out
test
cmp
push
into
dec
scas
int3
popf
lahf
leave
push
pusha
aas
scas
pop
fidiv
mov
ror
pop
ds
add
inc
not
imul
inc
mov
sbb
outs
inc
pushf
jno
and
repnz
pop
jmp
cmp
push
jnp
cmps
adc
aaa
mov
sub
mov
cli
pop
sub
jmp
jo
mov
(bad)
stos
mov
arpl
cmp
and
add
cli
pusha
movs
jl
xchg
sbb
xchg
xor
ins
test
xchg
movs
mov
sbb
cwde
ret
cmp
inc
daa
cdq
sub
stc
jl
xchg
(bad)
mov
jnp
pop
push
add
loope
pop
mov
jg
(bad)
mov
fild
stos
cwde
out
js
out
test
sbb
test
out
pop
fstp
fcmovu
aad
push
repnz
aas
xor
(bad)
call
mov
jecxz
jno
movs
fld
int
out
test
push
loopne
call
push
es
jmp
mov
in
push
hlt
dec
ret
or
ds
cmp
or
clc
adc
adc
cli
rol
in
retf
inc
pop
ficomp
push
popa
outs
les
sub
mov
sbb
xor
xchg
mov
adc
loopne
adc
mov
out
(bad)
xor
and
cmp
pop
jo
jno
and
rol
push
(bad)
and
push
(bad)
xchg
or
ins
outs
sub
retf
je
ss
push
or
sbb
jecxz
jmp
jecxz
sub
loopne
xor
repz
cmc
jae
fnstsw
mov
pop
cs
scas
rol
xchg
pop
cmp
test
and
mul
xchg
push
push
xchg
adc
xchg
shl
ficomp
sub
jne
pop
sub
sub
jmp
cmp
out
addr16
fisttp
mov
sahf
xchg
sub
push
mov
shl
add
and
jp
hlt
pop
loopne
test
xor
push
fnstenv
cmps
lods
lds
or
xchg
rcl
jbe
bound
xor
adc
js
jle
frstor
push
add
jnp
pushf
clc
in
movs
out
sbb
out
test
inc
test
xchg
fidiv
cmps
adc
mov
retf
cmps
imul
jge
rol
iret
repnz
push
xchg
pop
out
or
lahf
ja
adc
pop
clc
push
dec
inc
loope
call
call
dec
ss
push
repz
fiadd
lds
mov
add
int3
or
ja
popa
mov
xchg
dec
sub
push
mov
and
sti
adc
add
js
push
outs
add
cmp
xchg
sub
push
test
xchg
mov
mov
xor
retf
push
cmp
or
js
popf
xor
int
fsub
add
pop
scas
cmp
and
mov
cmps
sub
loope
xchg
movs
inc
push
sub
add
movs
fadd
loopne
push
jo
mov
push
lock
cdq
test
adc
and
mov
sti
xlat
add
daa
jnp
jne
ss
leave
mov
pusha
sub
adc
not
mov
aas
push
xchg
jg
push
jmp
adc
xchg
imul
sbb
mov
sbb
jg
icebp
call
das
ins
dec
mov
sti
pushf
jmp
mov
and
add
popf
adc
loope
jns
ror
das
hlt
jo
jae
nop
dec
mov
add
xor
outs
mov
adc
or
fsubrp
fdivr
out
loopne
inc
outs
jmp
aaa
std
mov
cmp
or
jecxz
inc
das
push
(bad)
retf
ror
and
or
imul
jecxz
gs
cwde
push
popa
outs
call
ins
jbe
pushf
jl
adc
jb
idiv
pop
daa
adc
imul
js
das
(bad)
hlt
adc
in
push
lahf
fadd
stos
aam
sub
jl
pop
jns
cmps
dec
outs
gs
jge
xor
jmp
mov
push
test
cwde
into
pusha
mov
test
jl
cmp
jmp
mov
bound
dec
pop
mov
cmps
cdq
xchg
inc
imul
aam
iret
mov
push
iret
or
add
jnp
xor
ss
js
sub
or
jmp
clc
sub
and
mov
dec
mov
das
mov
mov
jp
les
push
sbb
aad
enter
jae
jne
iret
jmp
outs
(bad)
mov
inc
fwait
dec
xchg
add
dec
int
sbb
je
frstpm(287
mov
push
outs
sti
or
stos
imul
in
sub
xchg
dec
ss
mov
mov
mov
fiadd
jecxz
jmp
shl
jp
ins
inc
pushf
sbb
out
lods
jge
mov
jp
clc
test
jnp
mov
stos
dec
movs
lods
or
and
jl
std
mov
aad
test
(bad)
in
pop
fidivr
pop
iret
fbld
ret
add
mov
and
jbe
cli
pop
adc
mov
shl
sub
pop
or
xchg
mov
hlt
pop
cmps
lahf
inc
(bad)
in
icebp
clc
popf
out
icebp
in
ds
dec
xchg
test
jp
or
stos
out
mov
dec
mul
jns
mov
out
inc
aam
push
mov
call
sar
das
jo
lds
int3
mov
inc
out
retf
call
push
sbb
pop
test
mov
in
pop
scas
dec
pop
pusha
xchg
push
fistp
jg
mov
and
lods
and
cs
jns
neg
mov
mov
push
dec
inc
inc
inc
dec
das
jno
add
je
data16
std
and
test
add
(bad)
cs
cld
or
mov
loop
xor
inc
push
and
jmp
arpl
mov
in
adc
movs
cwde
idiv
xlat
hlt
das
sbb
mov
push
rcr
int3
scas
repnz
push
xchg
dec
mov
sub
movs
jb
stos
adc
cmp
mov
shr
jne
xor
sbb
pop
cmp
cmp
int3
or
cmp
cmps
lods
sub
(bad)
(bad)
std
mov
push
dec
inc
retf
shl
push
mov
push
cmps
retf
push
mov
or
mulps
sub
add
and
loope
and
dec
clc
dec
mov
mov
and
inc
jmp
cmc
inc
je
stc
and
pop
jo
addr16
dec
jecxz
jge
push
out
jo
stc
movs
ins
daa
xchg
or
xlat
ret
daa
jp
sbb
mov
mov
adc
pushf
mov
dec
scas
pushf
xor
sbb
jmp
mov
lods
test
inc
test
xor
in
daa
aam
mov
and
cmp
cmps
in
fld
push
fs
adc
pop
das
shl
out
cmps
and
clc
adc
mov
ins
sbb
arpl
and
jbe
mov
(bad)
inc
popf
inc
and
test
inc
adc
add
jae
pop
out
and
out
mov
lock
adc
retf
jmp
mov
fild
das
in
or
push
retf
inc
out
and
xlat
push
mov
push
fsubp
pop
lods
cmc
jnp
data16
fwait
xor
sar
mov
mov
repnz
push
ins
cmc
adc
or
ins
out
and
fs
dec
ins
test
jge
add
int
push
cmps
pop
idiv
scas
mov
call
sbb
lea
in
jns
xchg
adc
xor
in
imul
test
mov
call
mov
stc
bsr
pinsrw
pop
loop
push
mov
mov
jle
push
fisttp
and
xchg
mov
xchg
test
test
fidivr
mov
jno
jb
fwait
dec
and
scas
iret
and
mov
out
in
inc
sub
cmp
pop
shr
xor
and
outs
js
int3
inc
inc
jmp
xor
cmp
stos
and
push
fmul
push
jecxz
push
mov
std
aaa
pusha
inc
inc
pop
dec
xchg
sbb
(bad)
pop
push
jg
repnz
mov
cmps
cmc
fucom
sub
dec
test
lds
aad
push
arpl
(bad)
jmp
cdq
lahf
dec
imul
push
push
mov
inc
and
movs
test
test
inc
xor
fisttp
jno
fiadd
mov
cld
push
sbb
pop
and
mov
xchg
pushf
fistp
sbb
sysexit
mov
retf
pop
dec
pop
leave
jo
adc
mov
out
push
mov
jmp
push
cli
pop
in
test
repz
loop
or
cdq
retf
rcl
xchg
pop
mov
out
push
xchg
adc
out
icebp
sahf
pushf
push
stc
jecxz
sub
push
pushf
repz
jl
in
loop
adc
cli
call
mov
jmp
or
push
push
inc
js
ins
test
xor
jnp
loopne
mov
sub
mov
outs
mov
inc
sub
jns
push
repnz
outs
jg
xor
pop
or
je
pop
das
bound
adc
xchg
cmp
int
sbb
xlat
xchg
cmp
sbb
lahf
lods
dec
clc
xlat
add
jmp
inc
jmp
xchg
jnp
pop
jle
mov
repnz
pop
popf
movs
fcomp
lods
cmp
mov
shl
mov
and
inc
fdiv
mov
lods
inc
loopne
mov
cmp
xor
cli
imul
sbb
xor
popf
psrld
je
mov
mov
cmp
push
mov
ss
jle
mov
popf
fwait
and
sub
inc
or
popa
lods
shr
fwait
xchg
push
hlt
mov
sub
shr
int
inc
and
mov
inc
xchg
xchg
or
xlat
popa
sar
push
push
xchg
jecxz
xchg
mov
out
push
jmp
jne
mov
test
sti
das
aas
call
adc
and
and
shr
and
cli
mov
pop
jmp
jl
in
sub
sub
inc
movs
xor
sub
xchg
mov
and
and
test
jge
and
adc
cmp
dec
pusha
daa
es
pushf
dec
and
sub
xor
adc
xchg
and
add
cmps
enter
pop
call
imul
mov
movs
scas
mov
and
das
clc
sub
mov
mov
(bad)
clc
cmp
jo
sbb
sar
mov
sub
inc
hlt
xor
adc
(bad)
ins
pop
icebp
xor
pop
loope
imul
icebp
inc
dec
ss
daa
pop
stos
cwde
adc
icebp
fdiv
adc
test
sub
mov
xor
mov
push
xchg
(bad)
push
sub
or
(bad)
loop
adc
dec
jns
aas
mov
push
push
jb
inc
pop
push
sub
in
pop
xor
mov
jnp
push
sbb
pop
ja
test
mov
aad
cmps
or
jne
fst
xchg
add
fwait
adc
push
pop
fisttp
push
push
or
push
(bad)
mov
jae
mov
aad
and
in
adc
push
mul
mov
sbb
mov
loopne
xor
int
icebp
cmp
aas
jne
fsubrp
inc
cmps
clc
imul
xchg
retf
das
pushf
push
dec
dec
or
and
int
mov
aaa
and
push
push
dec
out
mov
adc
add
inc
mov
adc
cmps
sbb
adc
push
into
in
mov
and
push
call
sbb
inc
mov
jmp
es
mov
jae
push
xor
imul
or
int
sbb
movs
xor
dec
fldenv
and
shl
pop
lea
inc
sub
inc
push
add
mov
and
adc
add
mov
test
cmp
out
fild
jmp
inc
call
clc
cmp
into
inc
xchg
pop
loope
sbb
shr
mov
scas
adc
jle
add
(bad)
(bad)
orps
cmp
mov
pop
fcomip
pushf
or
sub
inc
dec
test
cdq
sbb
adc
xchg
lds
cdq
into
push
add
fstp
aas
sub
inc
sbb
bnd
pop
lds
mov
sbb
sub
js
sbb
out
repz
loope
cli
retf
dec
pusha
xchg
pop
add
jb
or
leave
and
das
arpl
push
rol
inc
popa
js
ror
loopne
jns
add
add
leave
loope
mov
rcr
dec
and
hlt
pop
shl
loop
jns
or
mov
xchg
cwde
out
lods
dec
test
dec
or
mov
(bad)
mov
ins
enter
mov
mov
lahf
outs
cmp
mov
std
ret
and
inc
mov
sti
or
cld
dec
fwait
das
jl
or
das
pop
ins
imul
jb
clc
mov
jbe
cmp
out
dec
mov
pop
and
test
out
mov
jecxz
push
movs
jne
sbb
pop
adc
aaa
cmp
fcomp
push
xchg
add
cmc
retf
pusha
mov
cmp
inc
icebp
fst
repz
cmp
adc
setno
fmulp
pop
repz
fstp
cmp
pop
push
ins
xchg
sub
mov
adc
dec
dec
mov
or
push
shl
inc
jno
mov
xchg
mov
ja
adc
std
in
push
adc
push
xor
retf
cwde
jecxz
fidivr
pop
dec
push
mov
int3
fstp
loop
mov
or
shl
scas
mov
inc
ret
sbb
inc
inc
dec
clc
dec
sub
(bad)
push
pop
popa
into
rcr
or
or
jnp
jne
(bad)
jnp
sbb
mov
retf
or
loop
les
or
or
add
pop
dec
cmp
enter
push
push
clc
cmps
int
std
xor
fisubr
fsubr
mov
ror
jo
bound
or
jg
and
imul
mov
mov
lock
ins
test
jmp
sti
xchg
(bad)
ja
imul
sub
sub
sub
inc
(bad)
jmp
out
and
xor
aad
(bad)
ds
or
sti
sub
js
pushf
scas
push
shr
stos
inc
push
jnp
js
iret
outs
adc
sub
cmp
sub
add
repnz
push
cmc
jno
and
imul
mov
call
mov
gs
adc
lds
leave
mov
les
gs
or
jecxz
pop
arpl
scas
addr16
repz
mov
repz
mov
leave
adc
or
test
not
jbe
mov
iret
jae
mov
inc
jle
scas
xor
mov
mov
xchg
into
sar
movs
sbb
or
mov
ins
sub
sbb
sub
fstsw
ins
xchg
jne
add
mov
cmp
push
inc
push
ret
jmp
fisttp
out
cmp
pop
das
fild
ds
(bad)
jmp
pop
ror
out
add
cld
or
fidivr
data16
bound
pop
or
repnz
fisttp
enter
data16
sbb
push
mov
sub
mov
push
outs
dec
jp
stos
jno
pop
arpl
mov
movs
mov
adc
sub
lds
mov
in
jmp
test
mov
mov
daa
ret
cwde
jge
test
pushf
mov
adc
movs
push
jmp
cmc
lds
je
pop
dec
fmul
in
jmp
cmp
pop
inc
and
pusha
jg
mov
mov
mov
jle
push
sub
(bad)
sub
ins
test
(bad)
cli
and
or
mov
js
movs
ss
daa
add
mov
(bad)
mov
xor
aas
popf
in
xchg
fbld
jp
test
add
xor
in
adc
mov
or
pop
jno
out
xchg
out
lock
outs
add
cmp
xchg
add
xor
in
fwait
xchg
(bad)
popf
cmp
in
cwde
pop
iret
jge
(bad)
mov
arpl
pop
adc
pop
scas
mov
hlt
shr
outs
test
(bad)
sti
icebp
add
mov
and
movs
adc
jbe
(bad)
cs
popa
rol
push
shl
ja
ret
xor
int3
loope
xchg
adc
adc
imul
dec
sbb
mov
fst
sbb
les
scas
push
shr
push
xchg
jge
jo
jns
int
and
sbb
cmp
mov
rol
aas
sub
mul
daa
in
xor
sub
jg
(bad)
rol
bound
jecxz
pop
leave
mov
(bad)
shl
das
sub
jnp
inc
out
sbb
xchg
nop
cmp
fisub
mov
sub
or
lock
mov
inc
push
push
mov
enter
retf
sbb
cmp
cmp
or
or
adc
cdq
mov
inc
in
inc
rcl
jl
imul
mov
cmc
call
cdq
lahf
call
jg
cmp
sub
outs
cmc
xchg
sbb
mov
out
sub
push
retf
inc
mov
popa
xor
mul
aad
jg
in
cmps
ret
retf
test
test
push
dec
lods
mov
icebp
(bad)
shr
lock
rol
inc
jp
sbb
inc
mov
xchg
out
xlat
xchg
inc
jns
outs
push
or
inc
cmp
xchg
iret
call
jl
ret
add
enter
inc
mov
stc
arpl
popf
push
push
inc
addr16
pop
dec
loope
cmp
clc
push
or
jl
shr
lea
mov
(bad)
js
scas
xor
retf
jg
repz
cmps
sti
(bad)
daa
inc
in
adc
or
fs
ins
pop
ret
mov
or
cs
xor
sbb
jae
leave
push
adc
add
pusha
jno
cld
mov
mov
push
inc
ins
jae
and
aaa
jnp
fisub
adc
jno
cmp
call
xchg
pop
pop
loop
in
in
ins
and
adc
or
ins
jb
icebp
fs
ins
inc
stc
jae
mov
inc
icebp
das
pop
les
sti
pop
push
push
shl
movs
adc
cdq
cmp
sbb
jle
sub
xchg
in
out
pop
push
inc
adc
shl
int
in
lea
or
cli
add
ret
aad
fild
std
fisttp
add
xchg
enter
jb
fisttp
jle
rcr
adc
dec
test
int
jns
and
dec
leave
es
and
and
adc
sti
adc
add
cmp
les
adc
shl
adc
jecxz
js
jl
ins
js
mov
(bad)
repnz
jmp
pop
and
sub
push
neg
and
enter
pop
mov
inc
xchg
imul
cld
cmp
xor
sbb
aad
cmp
les
mov
sbb
cdq
test
ret
add
jle
push
sbb
cmc
loope
imul
dec
push
mov
push
int3
popa
mov
jmp
jmp
mov
xor
jmp
les
adc
repnz
cli
mov
(bad)
pop
fwait
mov
push
jle
hlt
push
ja
movs
out
sti
and
push
frstpm(287
adc
addr16
xchg
lea
popa
sub
inc
(bad)
push
cld
inc
mov
mov
outs
nop
mov
inc
movs
lods
cmp
call
out
ffree
sub
jae
lock
scas
mov
mov
into
xchg
fild
sub
(bad)
into
aaa
push
mov
mov
cmp
inc
in
push
mov
sub
fdiv
popf
test
push
adc
push
or
sub
mov
sub
es
mov
loopne
les
clc
stos
adc
pop
pusha
rcr
ss
dec
in
adc
mov
sbb
mov
and
xchg
icebp
dec
sub
mov
enter
rol
dec
inc
mov
ins
sub
push
cs
cdq
jns
adc
sbb
mov
(bad)
cmc
dec
push
inc
clc
call
sub
mov
dec
dec
xlat
and
loop
(bad)
(bad)
jmp
push
ja
outs
fcom
aas
adc
pop
jg
inc
jno
leave
retf
pop
cmp
mov
clc
out
push
pop
ret
sbb
sbb
mov
jb
push
sbb
xchg
ins
mov
push
call
jp
dec
xchg
mov
xor
inc
or
cdq
mov
inc
(bad)
call
mov
push
adc
sbb
(bad)
ds
je
xchg
dec
mov
inc
rol
jno
adc
cdq
test
xor
mov
popa
sub
and
out
cmp
push
pop
test
push
sbb
cwde
push
inc
and
ds
inc
stos
or
(bad)
paddusw
rol
ja
popf
mov
loope
pop
inc
data16
pop
push
pop
inc
pop
xor
arpl
leave
es
push
xchg
pop
and
fisubr
xchg
jg
fiadd
fidivr
push
int
sar
inc
fld
in
mov
and
adc
imul
sub
ret
test
aaa
icebp
push
pop
push
scas
outs
jno
out
dec
int
retf
outs
push
shl
ins
mov
test
xlat
xchg
test
shr
lods
stos
push
shr
cli
sub
cmp
in
leave
loop
and
out
jl
sub
mov
sub
das
aas
dec
cdq
mov
push
push
adc
(bad)
push
call
and
sahf
mov
xchg
dec
inc
fmulp
dec
sti
xchg
xchg
test
adc
jle
dec
dec
test
call
fs
inc
pop
inc
out
mov
in
pop
sbb
jns
mov
push
xchg
dec
jmp
retf
jno
push
popa
lea
push
ins
lock
mov
push
xchg
dec
cmp
push
dec
pop
add
mov
push
pop
dec
jno
mov
adc
retf
mov
mov
das
inc
sti
cmp
mov
(bad)
mov
jae
sub
mov
mov
fs
xor
es
fbstp
(bad)
jne
push
xor
pusha
inc
mov
dec
icebp
add
js
dec
(bad)
rcr
inc
dec
dec
enter
jmp
jl
and
sub
pop
cld
mov
out
add
adc
aad
mov
mov
cmc
sub
pop
out
stos
(bad)
(bad)
adc
cs
inc
std
out
adc
and
data16
dec
pop
adc
adc
ret
out
pop
or
fld
mov
xchg
je
inc
cdq
inc
mov
xchg
lods
fcomp
cmp
cld
hlt
outs
and
dec
xchg
jmp
scas
test
adc
lea
les
cs
pop
ds
sub
pop
(bad)
ins
mov
into
xchg
pop
mov
(bad)
mov
stos
and
add
sub
pop
add
popa
aad
stos
int3
or
test
fnstenv
jecxz
jnp
sub
ror
pop
inc
and
imul
retf
mov
ins
and
add
mov
lea
pop
push
mov
lock
sub
cdq
and
or
lea
loopne
mov
jno
and
cdq
fs
lods
push
test
push
aas
outs
call
sub
sub
movs
jnp
sub
mov
(bad)
xor
repz
sbb
lahf
ret
pop
mov
jne
outs
rol
xchg
cmp
xor
jns
fnstsw
sub
sbb
add
dec
inc
xor
(bad)
xchg
sub
andnps
loopne
hlt
pop
jl
fiadd
pop
dec
sub
mov
call
fucomi
cmc
fcom
inc
mov
push
popf
aam
mov
ins
dec
iret
movs
aad
cmp
outs
or
outs
dec
push
fild
or
sub
aaa
hlt
(bad)
xchg
call
push
dec
pop
cmp
arpl
cs
call
add
(bad)
in
imul
lahf
(bad)
stos
jo
pop
fnstenv
mov
sub
setnp
into
mov
mov
mov
push
xor
jo
jmp
cmps
pop
adc
cmp
test
pop
push
loope
xchg
jmp
pop
fistp
mov
and
data16
or
pop
popf
xchg
pop
and
iret
sub
adc
imul
cmp
sub
inc
pop
mov
bound
inc
cli
push
mov
bound
mov
dec
cld
adc
cld
xlat
sub
xor
pusha
jae
scas
mov
xchg
jg
js
and
mov
rcl
pop
sbb
xor
jle
mov
jae
sti
xchg
rol
adc
clc
div
push
mov
or
(bad)
pop
add
arpl
inc
pop
jecxz
mov
xchg
jo
ret
push
sub
inc
je
nop
mov
repnz
mov
test
in
fsubr
add
sub
adc
jno
fcmovbe
test
mov
push
test
inc
frstor
fs
inc
vpminub
sbb
cmp
sub
sub
mov
inc
mov
pop
mov
xor
pop
dec
adc
stos
cs
xchg
adc
(bad)
and
lods
(bad)
sbb
ins
jmp
pop
aas
or
jmp
stos
cmp
ds
mov
popa
add
push
xlat
cli
and
mov
cmp
add
bnd
adc
push
outs
sbb
(bad)
and
dec
jb
sbb
or
add
leave
bound
mov
dec
inc
mov
jbe
or
sar
lods
or
movs
dec
xchg
addr16
mov
xchg
fiadd
mul
sub
movs
stc
mov
adc
stos
fldcw
push
ss
and
(bad)
stos
or
out
aas
mov
dec
out
shl
fwait
cmp
bound
retf
pop
jecxz
int3
push
iret
jg
test
fldenv
inc
sti
push
jo
les
clc
and
movs
cmp
test
mov
push
test
aad
stos
pop
pop
clc
jl
aas
and
jecxz
sub
cmps
pop
addr16
cmp
out
lods
pop
cmp
cli
lock
daa
and
pop
int3
rol
mov
ins
jne
cmps
hlt
xchg
in
push
sahf
inc
ja
stos
xor
sub
or
inc
cld
call
pop
sub
add
mov
add
pusha
lock
or
dec
xchg
(bad)
jmp
stos
mov
mov
imul
mov
test
mov
push
adc
daa
mov
cld
or
adc
loop
adc
popa
and
cmps
call
mov
add
xchg
popf
xor
leave
push
jb
adc
cmc
dec
mov
fadd
xchg
(bad)
push
sbb
lods
lahf
inc
dec
mov
lods
inc
sar
push
fisub
xor
lods
mov
xor
mov
arpl
fstp
cmp
in
mov
cld
cmc
adc
inc
adc
mov
xchg
es
loop
lods
pop
and
xlat
leave
les
rcr
out
inc
push
mov
dec
(bad)
mov
dec
jecxz
shr
xor
cmp
(bad)
rcr
outs
mov
out
sbb
iret
cmp
test
stos
cdq
repz
xchg
pop
test
bound
std
dec
pushf
push
mov
(bad)
dec
inc
xor
cmc
or
jmp
rol
enter
aaa
mov
(bad)
mov
xchg
ins
fidiv
test
mov
or
xchg
clc
sub
inc
loopne
enter
mov
stos
push
jns
dec
pop
bound
mov
neg
outs
jno
test
(bad)
mov
xor
ss
test
add
repz
ret
dec
sub
jp
cdq
ja
jmp
cmc
mov
mov
push
loop
pop
inc
leave
xor
cmps
or
rol
mov
fcmovbe
(bad)
jmp
scas
or
sub
mov
call
jg
aad
jno
mov
adc
test
ins
jle
(bad)
sti
dec
or
int3
test
add
and
imul
jg
lock
add
push
adc
int3
test
push
imul
sub
sbb
sbb
mov
xor
inc
repz
push
cli
mov
jo
adc
ret
sub
pop
xor
xor
sahf
or
jo
cmp
(bad)
cmp
or
mov
sbb
out
cs
push
or
dec
mov
or
pop
les
jge
daa
aam
repnz
popa
inc
retf
add
or
sub
add
xor
cwde
jp
mov
or
in
dec
mov
pop
cmc
rol
cwde
cld
stc
mov
icebp
into
jl
inc
stc
in
mov
mov
iret
dec
adc
scas
jg
shr
dec
inc
rcl
xor
outs
mov
jnp
retf
jne
mov
sub
push
xchg
xchg
addr16
add
leave
xchg
inc
xor
jbe
(bad)
das
inc
outs
ret
lods
sbb
and
jmp
mov
scas
add
lods
(bad)
fsub
inc
(bad)
push
cmp
in
adc
inc
jnp
in
fnstcw
pop
push
sar
inc
aaa
mov
xchg
xchg
add
and
js
inc
dec
mov
pop
ja
aas
sti
ds
sub
xor
movs
and
inc
cmp
das
jl
xchg
rol
ret
(bad)
xchg
rcl
sbb
out
inc
mov
mov
sub
pop
add
jecxz
sub
or
scas
jno
xor
sbb
out
mov
pop
fstp
jne
pop
leave
fcomp
in
mov
ror
nop
or
pop
sub
cmp
mov
movs
gs
xor
cmp
mov
retf
xchg
hlt
leave
sahf
push
lock
arpl
imul
mov
arpl
jns
retf
or
cld
mov
in
popf
outs
stos
pop
cmovl
out
jbe
mov
sub
xlat
shl
mov
dec
(bad)
xor
fisub
or
sub
mov
nop
outs
loope
xlat
imul
cmp
or
jnp
(bad)
jecxz
in
inc
sbb
mov
xchg
push
mov
and
mov
in
xor
aas
adc
sub
adc
into
jl
mov
sti
movs
cmp
push
mov
cmp
fst
popf
enter
pop
jmp
pusha
inc
mov
dec
push
bsr
enter
xor
jne
mov
mov
cmps
(bad)
and
pop
cmps
mov
mov
push
mov
mov
jo
dec
xor
push
cmps
les
jbe
push
lahf
pushf
mov
call
cmp
cmp
mov
sbb
mov
xchg
xchg
data16
fisubr
push
and
mov
jmp
test
mov
xor
push
repnz
mov
sub
xlat
mov
jne
pop
iret
or
sbb
xor
xchg
cmp
jle
pusha
pop
add
fst
enter
hlt
push
in
bound
fwait
push
mov
pop
xchg
xlat
das
cmp
fsubr
xchg
pop
cmp
or
aad
push
gs
sbb
and
ret
ja
dec
or
(bad)
xor
aam
mov
cld
mov
cs
and
popf
mov
xor
into
out
sub
push
fild
pop
mov
fistp
sub
ret
frstor
into
ror
outs
mov
sbb
xor
jnp
xor
(bad)
dec
or
and
iret
mov
ret
hlt
ror
push
mov
stos
pop
ins
jbe
mov
mov
in
or
scas
es
jnp
xchg
jge
sub
mov
and
inc
movs
push
sbb
sub
jne
into
lea
daa
outs
jbe
and
jp
cmps
push
outs
push
jmp
arpl
enter
hlt
mov
(bad)
mov
push
sbb
mov
add
and
and
ins
add
push
sub
cmp
push
xchg
adc
mov
xor
mov
call
jb
das
add
je
lock
sar
mov
mov
xlat
jp
popa
xor
xchg
(bad)
into
jnp
mov
cmc
not
cmp
addr16
fisub
shl
imul
sbb
test
jp
test
cmp
mov
daa
(bad)
xchg
add
repz
dec
mov
adc
jns
xchg
repnz
loop
jle
pop
pop
in
xchg
pushf
aas
loope
push
fsubr
mov
jb
xchg
sahf
icebp
adc
cmp
in
pop
cmp
shr
retf
sti
rcr
(bad)
push
mov
jbe
jle
dec
arpl
cmp
inc
je
popf
xor
cmp
inc
xchg
push
jle
popa
pop
lahf
mov
stos
jl
stc
hlt
and
pusha
cmp
jnp
mov
cmp
mov
sub
xchg
mov
test
and
push
sbb
jmp
ror
cdq
(bad)
adc
sub
xor
daa
pop
outs
fsubr
xchg
(bad)
sbb
das
inc
adc
adc
bound
ds
jns
inc
and
dec
test
jmp
pop
gs
push
mov
gs
bound
ja
dec
ret
pop
jge
inc
outs
cwde
sub
mov
jmp
jo
test
cmps
mov
jbe
test
test
inc
add
inc
cmp
fsubr
std
ds
sub
daa
add
push
outs
push
pextrw
adc
aam
call
mov
outs
test
sub
enter
fisttp
add
sbb
sub
mov
shl
cmp
enter
mov
cmps
test
inc
xchg
inc
dec
fisttp
mov
inc
loop
pop
and
sahf
sahf
mov
and
jns
mov
pusha
daa
dec
xchg
pop
arpl
ins
repz
call
cmp
add
pop
pop
mov
sar
add
movs
sbb
es
jmp
mov
sub
push
adc
ret
push
pop
mov
sub
pop
xchg
xchg
cld
mov
in
in
sbb
xor
cmp
mov
jnp
cmps
or
cmc
mov
mov
or
cmp
les
clc
and
or
dec
stc
mov
sub
jg
arpl
mov
sub
cmp
pop
fmul
add
dec
push
xchg
dec
(bad)
scas
sub
mov
dec
mov
jg
jl
call
jmp
and
sbb
and
mov
stos
call
stc
mov
sub
sub
fst
xchg
inc
dec
je
add
adc
sbb
clc
mov
cld
test
mov
loop
test
adc
movs
xchg
ret
sub
pop
inc
dec
test
repz
push
or
test
lds
or
xor
icebp
jle
jmp
mov
push
xlat
jnp
pop
out
cmp
jecxz
push
not
test
test
loop
dec
push
mov
pop
jg
pop
add
imul
push
xchg
sub
jbe
iret
pcmpgtw
into
(bad)
mov
mov
jnp
das
adc
nop
pop
inc
mov
ja
repz
push
mov
xchg
mov
cwde
push
dec
mov
dec
mov
xor
adc
jmp
push
add
xchg
adc
sbb
nop
sti
aam
add
stc
adc
iret
pop
cmp
out
xor
xchg
imul
xor
jmp
mov
and
loopne
lods
adc
push
loope
push
pop
jns
adc
mov
fsub
jp
mov
ret
add
leave
mov
cmovo
cmp
test
fiadd
xchg
ja
les
mov
imul
pop
add
xchg
jmp
imul
shr
push
xchg
mov
or
int
xchg
int3
popa
pop
jo
inc
repz
in
in
jne
cmp
shl
push
ja
fist
push
sar
not
scas
ret
stos
and
sub
(bad)
std
mov
or
jle
dec
jb
pop
jnp
jae
and
repnz
xor
lds
les
mov
jp
push
mov
mov
push
xor
cs
popa
mov
sbb
movs
ret
xor
adc
sbb
lock
lock
add
add
dec
sbb
cmp
ret
out
(bad)
mov
test
pop
in
push
mov
outs
push
in
or
lea
mov
into
fisttp
repz
sbb
(bad)
add
rcr
inc
movs
or
pop
nop
pushf
retf
pop
push
movs
sar
xchg
aam
cmc
jmp
xor
xchg
icebp
in
mov
cmps
push
ror
push
pop
outs
fcom
xor
lods
adc
mov
mov
inc
and
jle
adc
jno
or
or
push
and
adc
pop
mov
imul
test
mov
test
in
out
inc
rcl
pop
xor
inc
sbb
test
std
jo
imul
xchg
es
shl
push
adc
add
ins
outs
ja
cmc
rcl
lea
ins
add
inc
sub
mov
pop
sbb
stos
mov
xchg
rep
into
jmp
ss
imul
cwde
sub
pop
mov
cdq
jne
mov
rol
repnz
push
out
push
and
(bad)
enter
retf
mov
pop
cld
jmp
xchg
jmp
cwde
xor
fs
mov
sti
mov
push
sbb
mov
test
iret
sbb
cmp
shl
cwde
xor
aam
sub
outs
aaa
call
mov
cmp
clc
jno
repz
data16
(bad)
mov
or
cmp
test
(bad)
jp
sub
(bad)
movs
sbb
mov
sub
mov
dec
hlt
sbb
popf
int
movs
pop
pop
mov
scas
or
xor
mov
or
scas
js
xlat
neg
sbb
shl
cmp
cs
das
xor
cmps
leave
cwde
inc
dec
mov
mov
cmp
jns
dec
push
mov
imul
mov
aaa
rcr
mov
cmp
sbb
cli
jae
lods
repz
das
push
cmp
push
inc
outs
sbb
xor
add
jb
inc
call
test
fdivr
out
pop
aam
(bad)
fdiv
ficomp
ja
in
inc
push
jo
pop
imul
push
add
xchg
inc
enter
mov
aad
out
outs
ss
pop
das
mov
fcomp
push
neg
stos
xchg
cmp
pop
jecxz
mov
push
rcl
cmp
repz
inc
cmp
je
or
and
imul
sub
push
xor
test
sub
iret
jne
xchg
in
pop
xchg
inc
sar
pop
sbb
mov
pop
ret
jae
jnp
shl
xchg
rol
(bad)
lock
stc
mov
jmp
retf
mov
rol
dec
push
icebp
(bad)
rol
dec
push
push
cmc
push
xchg
loope
stos
pushf
mov
xlat
and
in
call
sahf
or
mov
pop
jne
xor
pop
lods
xor
push
push
mov
stc
imul
cs
pushf
jg
xchg
mov
jno
xchg
push
dec
test
pop
in
das
xlat
lock
clc
pop
imul
add
enter
and
mov
cwde
push
lock
out
pop
push
repz
push
xchg
out
jl
imul
aas
fcom
push
jmp
ss
in
test
popf
xor
jmp
cdq
mov
sahf
nop
pop
(bad)
inc
push
test
js
mov
ror
cmp
jne
inc
bound
or
lock
into
sub
adc
add
add
sbb
jmp
mov
or
in
push
push
ret
(bad)
lods
lds
mov
pop
jne
mov
(bad)
mov
push
or
xor
in
xchg
into
cdq
mov
test
cmp
pop
call
xchg
mov
and
stos
and
cmp
jno
jns
lahf
out
lods
pop
inc
mov
(bad)
shl
sub
mov
call
jnp
je
jge
repz
test
cmc
inc
loop
mov
daa
xchg
sbb
repnz
sbb
retf
inc
pop
cld
adc
sti
retf
repnz
cmp
sub
sahf
pop
scas
xchg
jmp
push
mov
xchg
outs
jecxz
ss
outs
jle
pop
inc
mov
data16
cmp
push
pop
rcr
add
sar
sti
add
mov
sub
out
aas
dec
mov
and
mov
idiv
and
sbb
pop
ja
and
mov
jle
xchg
daa
outs
cli
lods
sbb
sbb
outs
push
jl
mov
mov
int
movs
cmp
outs
shl
cmp
sbb
leave
inc
add
es
and
mov
movs
shr
add
sahf
lds
cli
lock
pop
mov
repnz
inc
aaa
mov
nop
xchg
or
jne
pop
sub
js
mov
or
not
dec
sar
pusha
loop
cmc
or
xchg
jnp
inc
icebp
add
dec
and
cmps
repz
js
mov
jns
data16
aas
add
rcl
dec
push
ror
sbb
push
xchg
cmps
adc
iret
pop
shr
jmp
sti
pop
jb
lods
push
movs
and
(bad)
xchg
add
jnp
pop
xchg
std
inc
mov
jno
dec
retf
mov
inc
(bad)
push
aad
add
je
cld
push
add
or
inc
dec
lods
xchg
stc
sub
adc
inc
retf
call
and
push
es
mov
cld
sub
jns
mov
rcl
retf
xchg
mov
cwde
(bad)
imul
mov
dec
popf
stos
add
fyl2xp1
hlt
in
into
mov
pop
jl
mov
test
pop
js
push
xchg
data16
push
mov
hlt
dec
fstp
inc
in
mov
test
std
lea
xor
movs
ins
mov
xchg
mov
pusha
jae
xchg
inc
pop
inc
pop
pop
inc
or
adc
inc
int3
into
in
mov
or
xchg
jmp
enter
in
mov
xor
sub
xor
bound
and
inc
out
ret
xchg
mov
or
in
int3
pop
sbb
in
cmp
jmp
add
xor
and
pop
hlt
pusha
leave
inc
add
mov
or
aad
jo
push
push
inc
adc
mov
ds
imul
and
mov
hlt
imul
mov
jp
adc
repnz
push
rcl
jmp
mov
sbb
test
enter
rol
outs
in
add
jmp
sub
inc
mov
enter
or
xchg
(bad)
movs
sbb
daa
mov
es
dec
mov
mov
pop
(bad)
and
aaa
xor
and
inc
or
and
push
xchg
cmps
mov
arpl
mov
pop
dec
or
movs
push
pop
or
xchg
mov
pop
push
shl
frstor
stos
xchg
cwde
fwait
xchg
inc
stos
call
pop
ret
pusha
add
or
add
push
jmp
ins
pop
ret
iret
mov
cld
or
fbstp
lods
int3
in
jae
mov
dec
stos
aaa
sub
shr
mov
inc
mov
pop
in
cmp
cmp
bound
lods
pop
ret
(bad)
loopne
pop
sbb
jno
cli
push
xchg
ss
hlt
aad
or
xchg
add
sbb
shr
cmps
sub
mov
mov
adc
sar
jb
cmp
xchg
in
popa
push
shl
aas
or
pop
ss
(bad)
sub
test
dec
jl
rol
pop
fsubr
mov
add
xchg
loope
inc
in
add
sbb
das
nop
sar
dec
inc
or
imul
sar
ret
push
xor
into
xchg
sub
out
cmp
cmp
jge
pop
or
jns
loopne
jne
inc
sbb
xchg
dec
popf
stc
test
test
stos
shr
mov
fucomip
xchg
xor
mov
mov
ss
jne
jecxz
mov
mov
bnd
es
jae
xor
fcomp
cmc
sbb
push
popf
fsub
cmp
pop
sbb
icebp
cmp
popf
aad
add
ss
stos
pop
repnz
sbb
mov
(bad)
inc
test
mov
cmp
out
sub
repz
hlt
out
movs
loope
int
shl
jne
leave
mov
fxch
push
adc
inc
pop
mov
pop
dec
cmp
xchg
in
dec
push
push
cmp
jnp
xchg
rcr
push
call
xchg
daa
jne
push
cmp
mov
test
cmp
repnz
xor
mov
and
in
fstp
cmps
pushf
popf
inc
movs
in
cdq
xchg
xlat
jb
fstp
push
inc
add
mov
xor
es
jecxz
adc
pusha
adc
out
add
dec
and
xor
sbb
call
add
pop
cld
and
(bad)
clc
addr16
sbb
add
fwait
es
ret
das
cmp
jns
lahf
in
sub
pop
cmp
lea
movs
rol
dec
adc
shr
cmc
cli
sub
sar
jge
sysexit
outs
test
jp
inc
in
adc
out
outs
in
mov
dec
ja
jecxz
lods
jbe
out
xlat
fs
(bad)
sub
mov
mov
les
or
jae
and
outs
sbb
inc
out
mov
inc
pop
in
loopne
sti
xor
lahf
xchg
dec
xor
test
leave
jns
cmp
xor
mov
inc
jl
popf
xchg
fnstenv
xchg
and
loope
pop
adc
sub
movs
pop
inc
jb
pop
adc
push
sub
arpl
or
jg
cmp
jae
movs
add
jmp
or
push
cmp
aad
dec
cmp
or
xor
sar
sar
lea
push
or
mov
add
test
xor
mov
enter
inc
test
push
pop
in
fst
cmp
test
add
jg
and
fistp
or
leave
ds
ret
xchg
jp
fs
sar
mov
loopne
jmp
adc
jg
imul
retf
fisubr
and
repnz
fstp
aas
inc
pusha
imul
and
and
sar
mov
std
mov
push
mov
test
jne
jno
sub
push
icebp
fist
cs
pushf
int
xor
cmp
lds
popa
pop
push
popf
push
ret
mov
or
push
adc
lods
mov
push
adc
retf
in
(bad)
pop
xchg
fnstsw
ret
push
call
mov
aaa
popf
ret
push
mov
pop
adc
or
adc
(bad)
adc
fadd
mov
ins
mov
xlat
add
jbe
cmp
sbb
adc
test
mov
and
sbb
mov
call
mov
jo
dec
popa
bswap
cmp
outs
pop
and
push
and
in
mov
xchg
lds
fisub
retf
(bad)
retf
lsl
repnz
adc
xor
iret
fsubp
js
jb
(bad)
fsubrp
adc
push
lds
aam
xor
and
xchg
or
call
pusha
push
sub
daa
dec
fs
or
pop
xchg
sar
outs
loop
retf
jbe
xlat
cmp
js
push
shr
mov
mov
popa
cmps
mov
shl
iret
dec
mov
sbb
adc
mov
push
imul
ret
inc
sbb
hlt
cmp
fld
mov
sub
pop
jp
inc
xor
mov
call
push
and
inc
outs
adc
mov
lods
scas
les
dec
leave
jne
retf
shl
bound
mov
fdiv
cld
lods
sbb
addr16
shr
adc
jae
cmps
call
test
(bad)
(bad)
ret
imul
call
retf
loop
add
call
fnstenv
(bad)
lods
dec
outs
mov
ins
aad
int3
xor
jecxz
icebp
in
push
daa
and
and
sbb
xchg
push
push
aaa
cmp
jecxz
cmps
mov
pop
(bad)
int3
shl
cmc
hlt
and
inc
cmps
pop
cmp
(bad)
mov
call
(bad)
jmp
dec
sub
nop
cmps
push
in
cmp
add
mov
sar
push
inc
sub
les
je
jne
sub
sbb
pop
add
cmp
fdiv
sub
xor
dec
dec
xor
xor
xor
stos
shl
or
cmp
push
pop
ds
retf
iret
stc
pusha
iret
mov
xchg
stos
and
xlat
and
jmp
cmp
ret
mov
jo
dec
ror
ins
jb
cmp
imul
push
cmp
jecxz
ins
pop
(bad)
cs
and
xor
jl
pusha
xchg
mov
(bad)
sbb
out
and
add
cmp
pop
inc
add
(bad)
fwait
sub
mov
addr16
mov
jg
jno
sbb
xchg
xchg
test
and
fs
jbe
push
fild
aad
cmp
jns
and
ret
jo
mov
in
fmul
mov
and
sbb
mov
adc
cmp
enter
or
dec
adc
shl
movs
popa
jge
jmp
mov
xor
(bad)
iretw
dec
mov
ficomp
(bad)
ds
xchg
jnp
mov
cmp
xor
inc
xchg
rol
movs
xchg
ins
mov
mov
mov
jns
adc
test
das
fidiv
retf
mov
or
sbb
gs
and
jb
mov
sub
mov
dec
push
scas
repz
imul
in
push
lea
lock
in
mov
adc
and
cmp
ins
sub
imul
sbb
hlt
push
cld
mov
xor
adc
cmp
rcr
pop
add
lea
and
lahf
sbb
adc
xchg
pslld
xor
sub
outs
stos
arpl
add
mov
fs
pop
popf
push
mov
sbb
loope
or
test
mov
imul
loope
std
icebp
add
ja
jo
(bad)
sub
inc
icebp
cmp
retf
sbb
mov
mov
test
sub
bound
mov
iret
inc
in
xchg
mov
jle
mov
or
dec
push
(bad)
mov
arpl
les
pop
das
jmp
cmps
adc
loopne
add
mov
movs
bound
adc
(bad)
mov
push
enter
xchg
and
jno
leave
retf
inc
pop
and
(bad)
and
dec
jmp
test
js
dec
lds
mov
movlps
daa
inc
pop
or
call
or
lock
js
pop
shl
outs
xchg
push
out
ffreep
push
add
bound
retf
sub
jl
dec
ret
sub
mov
sub
mov
add
inc
and
movs
lds
pop
inc
and
xlat
addr16
xchg
pop
fwait
or
mov
push
pop
pop
push
jg
nop
inc
aaa
shl
push
shld
nop
or
or
fs
jge
addr16
jns
dec
sub
mov
lods
xchg
imul
(bad)
cmps
maskmovq
aam
dec
data16
movs
xchg
sub
loope
xchg
out
movs
popf
jp
rcl
fs
ror
push
inc
int
cdq
and
and
stos
loop
mov
add
push
mov
xchg
mov
ins
ins
adc
es
mov
pop
bound
or
jmp
inc
aaa
ja
mov
fcom
stc
mov
mov
jg
sahf
pop
adc
ins
push
or
push
pop
(bad)
pop
inc
dec
jne
out
aaa
sub
push
fst
add
jp
retf
pop
mov
fwait
jmp
jl
jmp
and
ror
es
and
outs
rcl
pop
out
les
dec
xor
jno
fmul
or
imul
stos
aas
lods
loopne
push
dec
sub
mov
fisub
fst
ins
mov
pop
cmps
outs
inc
adc
or
sbb
add
mov
sti
cmps
inc
dec
rcl
or
retf
ds
cmps
xchg
pop
lahf
xor
or
push
xchg
cld
sbb
aaa
clc
jbe
fdivr
mov
push
mov
xor
xchg
push
cmp
jg
mov
sbb
add
(bad)
sahf
mov
je
(bad)
mov
adc
fnstsw
push
mov
add
xchg
sbb
leave
mov
push
cmps
sub
int
mov
mov
sti
xchg
in
rcr
mov
test
add
call
xor
call
out
mov
jge
inc
sub
jp
inc
push
mov
add
cld
xor
cmps
in
add
sbb
jns
fst
or
mov
cmps
jne
daa
or
movs
inc
cmp
pop
sbb
xor
push
in
loope
pusha
aaa
sbb
sti
les
mov
cmp
xor
ds
jae
and
sbb
scas
jmp
sbb
dec
cmp
inc
cmps
ins
je
adc
loope
iret
mov
and
push
out
xor
cmp
mov
jecxz
jns
mov
in
in
leave
jo
lods
in
imul
movs
addr16
test
mov
iret
push
stos
dec
add
dec
jl
cmp
cmps
xchg
pop
inc
dec
jmp
pop
js
dec
ja
scas
imul
xor
sub
pop
inc
test
pop
fnstenv
mov
mov
and
out
xchg
(bad)
jae
clc
vmwrite
(bad)
mul
pop
rcl
dec
repnz
hlt
or
rol
jecxz
dec
sub
mov
cmp
mov
xchg
retf
jl
jne
and
clc
out
pop
cmp
push
push
test
and
xor
(bad)
adc
scas
popf
cmp
jb
xchg
loope
(bad)
aas
dec
cmp
xor
retf
inc
jecxz
loope
sbb
push
adc
jne
ja
inc
cmps
pop
aaa
dec
cmp
push
dec
rcl
pop
xor
jo
gs
xchg
mov
pushf
push
(bad)
ret
dec
jg
mov
jg
popf
test
mov
jb
add
shl
cmp
or
outs
pop
imul
out
sub
mov
in
sub
gs
xor
mov
jno
dec
xchg
call
call
mov
in
mov
adc
xor
call
add
mov
das
mov
xchg
adc
loope
jge
pop
adc
repnz
xor
nop
iret
test
jecxz
sub
inc
xlat
sub
dec
mov
cmps
push
xchg
hlt
cmp
call
mov
call
pop
xlat
mov
push
hlt
jns
loop
test
and
add
cld
ret
xchg
retf
xor
add
xor
ins
test
add
cmps
test
push
xlat
popf
fstp
dec
cmps
ss
xor
int
pop
mov
call
fmul
jne
inc
dec
pushf
rcr
jbe
das
jne
push
jecxz
addr16
and
cld
dec
mov
jge
xchg
xor
sub
and
in
inc
(bad)
sbb
push
cmp
and
pusha
add
fs
add
add
nop
jg
xchg
sbb
adc
repnz
push
push
fwait
lahf
iret
or
daa
mov
xchg
shl
popf
mov
ins
adc
pminub
shl
imul
lock
mov
outs
or
xor
fxch
push
sub
mov
stos
std
popa
(bad)
aam
jne
in
ficom
(bad)
pop
int3
sbb
test
adc
repnz
sub
(bad)
adc
addr16
add
iret
push
mov
xchg
in
xchg
mov
popa
out
or
push
popf
out
ret
fsubr
or
in
xchg
retf
mov
nop
mul
xor
lods
inc
sti
adc
inc
sub
or
inc
lods
into
or
mov
scas
inc
popf
adc
mov
push
sub
push
pop
pop
ret
and
sub
cmp
sbb
aaa
(bad)
aaa
pop
repnz
dec
or
cmp
movs
sbb
leave
ins
cs
push
pop
les
pop
stos
inc
movs
jl
repnz
fisub
cwde
sbb
(bad)
xor
push
not
fwait
out
imul
ret
xor
fcomp
mov
cmp
or
push
cmp
cmps
push
rcl
and
pop
mov
retf
inc
pop
xchg
jecxz
imul
neg
xor
adc
mov
sub
rcr
inc
push
push
test
shl
popa
leave
mov
xchg
movs
out
leave
stos
add
aas
sbb
dec
mov
xchg
cdq
cmp
xor
scas
push
add
sahf
xor
mov
call
xor
cdq
adc
movs
sub
pushf
sub
aaa
rcl
clc
dec
jp
mov
cmp
fwait
mov
mov
cmp
sbb
bound
dec
mov
mov
and
add
stos
icebp
popa
jecxz
jnp
addr16
mov
xchg
xchg
mov
sub
sub
in
sub
packuswb
es
clc
add
pop
mov
adc
pop
es
cmp
addr16
xor
movs
ja
ss
sbb
sub
movs
sti
fwait
adc
add
mov
mov
sbb
add
pusha
mov
in
fst
xor
push
inc
popf
sti
push
bt
imul
out
jl
cmp
(bad)
dec
das
and
test
je
neg
int3
cld
(bad)
xor
adc
shl
cmps
or
or
mov
sub
and
mov
adc
dec
add
idiv
(bad)
sar
mov
js
adc
cli
aam
ss
sub
stos
imul
in
stos
scas
bound
movs
retf
sbb
jle
lods
gs
cli
fcmovnbe
mov
push
or
mov
sahf
stc
jge
jbe
add
jle
out
fistp
ins
push
or
popf
xlat
sub
jl
mov
inc
jnp
rol
inc
(bad)
jnp
and
fidiv
repz
or
adc
aam
test
sbb
sbb
int
push
out
test
scas
pop
jle
adc
lea
cmc
icebp
ins
ins
mov
sub
sub
adc
jbe
out
mov
test
adc
shr
sbb
pop
push
inc
pop
iret
mov
data16
in
sbb
dec
or
scas
out
enter
aas
enter
idiv
ror
addr16
jecxz
inc
shr
jae
call
and
xor
mov
jmp
sbb
jne
jle
pop
loopne
psrad
jle
aad
data16
lods
pop
aaa
pop
jb
xor
idiv
(bad)
rol
push
pop
mov
pop
vmread
enter
fild
iret
hlt
movs
fistp
loopne
mov
mov
add
neg
fnstenv
in
aad
push
pop
cli
repnz
xlat
jo
shl
pop
inc
cmps
aam
and
inc
xchg
xchg
aaa
sbb
popf
push
aam
imul
jno
call
sbb
ins
icebp
push
les
mov
inc
or
adc
mov
mov
ret
dec
cmp
and
cwde
fild
out
push
jb
idiv
mov
repnz
push
mov
or
enter
dec
test
xchg
pop
add
xchg
push
inc
push
jp
and
rol
dec
fcmovne
jl
mov
adc
aam
xchg
mov
mov
jns
push
mov
cdq
add
scas
test
std
cmc
gs
xor
lds
mov
inc
xchg
push
iret
leave
add
xchg
xchg
imul
mov
ret
aaa
xlat
arpl
xchg
adc
inc
fwait
mov
adc
sbb
cmp
lea
jecxz
sub
icebp
sub
pop
and
inc
loope
lea
adc
push
adc
not
ja
pushf
adc
icebp
mov
mov
sbb
add
push
sbb
mov
and
mov
jle
jecxz
mov
stos
add
rcr
js
shl
push
or
mov
jg
mov
movs
mov
xor
aam
test
enter
jmp
and
out
cld
lahf
aad
in
add
ins
xchg
loop
lods
test
xor
ret
xchg
sti
fwait
mov
xor
inc
int
add
pusha
push
nop
pop
outs
call
mov
xchg
cmp
inc
dec
push
inc
jge
mov
or
add
fst
out
call
fistp
popf
push
and
push
or
(bad)
pop
imul
or
rcr
sbb
pop
pop
ret
jo
ffreep
repnz
and
and
dec
sbb
test
cmp
fist
jnp
mov
mov
and
fiadd
sbb
push
test
push
jg
daa
out
sbb
std
mov
stos
stmxcsr
dec
(bad)
or
push
jno
inc
nop
dec
sbb
inc
mov
lock
pop
sbb
icebp
mov
es
pop
dec
jge
shl
loopne
cld
iret
or
fcomp
lahf
inc
fistp
or
shr
xchg
fwait
pop
call
cmp
(bad)
pop
aas
out
xchg
push
mov
maxps
push
aad
jp
adc
mov
mov
(bad)
and
loope
mov
mov
mov
xchg
jg
or
mov
dec
pop
sbb
xor
pop
jmp
dec
jg
inc
addr16
cmp
mov
dec
xor
push
dec
jne
push
adc
dec
cs
ins
out
dec
pop
lods
dec
mov
es
lock
jae
call
imul
sbb
cli
pop
enter
xchg
clc
cmp
xchg
pusha
pop
addr16
jmp
inc
test
xchg
mov
ins
push
mov
cmp
sub
dec
pop
arpl
dec
bnd
test
imul
cmp
push
out
add
je
out
lock
xchg
xchg
movs
scas
add
pop
pop
lea
(bad)
and
ins
mov
sbb
clc
jp
(bad)
inc
dec
jno
int3
pop
adc
xor
jno
and
fnstenv
pop
inc
test
fcmovnb
adc
add
jno
or
and
test
in
mov
jmp
fild
int
(bad)
pusha
mov
sub
outs
rol
lea
pop
movs
lods
popf
(bad)
stos
cs
inc
lea
call
call
daa
pop
stos
or
fbld
iret
adc
push
add
pop
inc
les
call
pop
dec
arpl
and
add
jp
sbb
or
inc
cli
scas
sub
jmp
shr
(bad)
bound
test
aas
in
mov
rcl
push
push
xchg
fwait
push
stc
sub
hlt
mov
pop
pop
cmp
call
jb
or
pop
pushf
xlat
ret
cmps
pop
mov
adc
push
(bad)
call
cwde
rdmsr
sub
pop
and
call
inc
or
xor
fild
mov
out
and
pop
stos
push
neg
std
xor
cs
and
mov
push
xchg
test
(bad)
imul
retf
scas
pop
fdivr
xchg
scas
dec
pop
(bad)
movs
icebp
jp
into
jbe
pushf
fmul
sub
cmps
es
data16
neg
sub
loop
rcr
in
add
jmp
hlt
pop
ss
aad
test
mov
pop
retf
daa
jno
cdq
xor
push
jl
mov
mov
aam
or
xchg
pop
add
lods
in
adc
or
and
jne
out
imul
pushf
push
in
xor
jb
jo
pop
xor
cli
sub
push
jne
push
test
inc
push
sbb
xor
and
retf
xchg
retf
mov
or
sbb
dec
and
mov
(bad)
mov
push
xchg
jae
int3
movs
sar
or
or
mov
dec
icebp
add
adc
icebp
add
repz
sbb
test
adc
adc
loop
jl
ins
mov
lea
fcom
mov
mov
xor
daa
sbb
push
mov
cdq
xchg
jg
gs
pop
jecxz
xchg
cmc
pop
(bad)
xlat
bound
scas
jl
adc
sahf
ret
mov
pusha
mov
shl
jae
inc
sub
stos
or
call
xchg
aaa
push
sahf
sbb
loope
nop
addr16
stos
mov
sub
dec
cmp
and
xchg
popa
test
xlat
mov
inc
cmp
aam
mov
cmp
pop
imul
std
aaa
(bad)
push
es
loop
mov
push
dec
and
add
sub
mov
ins
add
fstp
fld
cli
jns
jge
ret
or
push
inc
jl
test
sbb
xchg
paddd
leave
ret
int3
mov
int
xchg
or
push
mov
scas
in
not
inc
push
in
test
fnsave
(bad)
mov
idiv
mov
push
jno
cmps
mov
mov
or
je
lods
mov
popa
aad
mov
rcr
scas
stc
and
addr16
pop
ins
and
gs
and
gs
push
cmp
inc
cmp
pop
sbb
int
jl
push
clc
push
out
mov
xchg
add
mov
sub
cli
loop
out
or
outs
mov
scas
or
mov
out
sbb
mov
in
xor
das
pop
outs
push
xchg
rcl
xor
in
pop
cmps
cmps
xor
in
pop
and
stos
mov
or
lahf
aaa
push
(bad)
dec
mov
call
iret
push
(bad)
adc
cmp
sub
mov
push
or
rcr
out
into
mov
test
sbb
test
push
daa
imul
cdq
cmps
retf
mov
in
cmp
int
mov
push
inc
or
gs
pop
outs
(bad)
mov
call
dec
pop
cmp
mov
sbb
inc
xchg
inc
fisubr
jns
pop
push
div
arpl
inc
jge
ror
repnz
add
pushf
test
cs
std
(bad)
sub
test
int
retf
add
(bad)
pop
jp
test
inc
or
ds
sbb
in
xor
pop
mov
dec
push
icebp
shl
mov
push
adc
inc
mov
sub
jmp
fimul
and
or
bound
scas
inc
inc
call
in
cmp
pop
adc
retf
dec
lea
jge
loop
(bad)
popa
and
xor
jbe
push
mov
jmp
cmps
outs
retf
(bad)
dec
inc
fmulp
loope
mov
ins
xchg
out
data16
sbb
fdiv
lahf
js
pop
xlat
(bad)
in
cwde
int
cdq
sub
pop
stc
shr
mov
or
bound
cmc
xchg
xchg
xor
ret
push
jle
sbb
sahf
addr16
lods
outs
aas
and
mov
xchg
and
mov
xor
xchg
int
push
inc
shr
dec
mov
adc
aaa
add
in
iret
mov
or
js
cmp
cmp
pusha
clc
mov
ins
pop
(bad)
mov
add
xchg
cmp
add
retf
xchg
cmp
arpl
push
xchg
retf
push
cdq
push
loopne
std
push
jmp
xchg
mov
cmp
push
lahf
mov
xchg
aad
mov
adc
and
mov
sub
cmp
and
int
clc
shr
neg
xchg
sar
or
arpl
fbstp
xchg
call
enter
call
ficom
mov
mov
or
jo
push
mov
jmp
xchg
or
sbb
and
(bad)
test
mov
or
mov
cmps
aaa
cmp
jmp
mov
stc
xlat
out
adc
mov
loop
(bad)
cmps
xchg
call
rcl
imul
(bad)
bound
fsub
or
push
movs
mov
rcr
rol
jnp
jge
loop
xor
lea
lock
jle
jge
sbb
call
add
jg
cli
adc
cs
(bad)
out
lods
inc
sahf
pop
fcom
mov
test
loop
es
mov
xchg
inc
xor
and
movs
imul
in
or
mov
ret
shl
and
loop
mov
call
push
daa
adc
mov
inc
(bad)
call
inc
arpl
mov
in
les
ror
xor
leave
lods
ss
mov
xchg
jo
rcl
in
gs
cmp
sbb
cwde
mov
cmp
imul
ds
push
movs
int
clc
mov
xor
into
pop
in
mov
xchg
dec
mov
sar
gs
leave
stos
adc
add
or
daa
mov
and
mov
jecxz
stc
push
xchg
test
jns
xchg
jg
cmp
mov
mov
push
lea
mov
jb
(bad)
mov
(bad)
out
les
cmp
jo
mov
pop
out
ret
fldenv
mov
fsubr
aam
(bad)
call
mov
push
pop
js
xlat
push
es
adc
dec
xchg
mov
mov
xor
mov
xor
cmps
dec
in
out
and
mov
inc
mov
jmp
loope
imul
add
push
loope
call
jg
jmp
stos
and
push
jmp
fdivp
push
xor
dec
pop
push
mov
pop
ret
add
sbb
or
xchg
test
adc
push
add
adc
int
pop
fnstsw
(bad)
loopne
(bad)
lods
jmp
je
add
xor
mov
std
cdq
(bad)
push
movs
sbb
xchg
stos
fcom
sbb
push
nop
pushf
xchg
cmp
xchg
aaa
std
xchg
mov
std
std
xchg
push
pop
and
push
addr16
shl
int3
and
xchg
inc
jmp
mov
out
imul
cmps
push
mov
ds
pop
sub
jl
cmp
cld
cli
jbe
sub
mov
aad
in
cli
movs
jnp
sbb
mov
add
mov
dec
stos
sti
fwait
cli
and
and
jg
loope
cmp
cmps
sbb
ret
add
outs
js
into
push
stos
fsubr
jle
xchg
mov
loop
in
outs
xchg
adc
jbe
or
push
mov
popa
sbb
retf
lods
xchg
lahf
dec
outs
or
ret
adc
icebp
rcl
mov
ror
test
jmp
scas
add
test
inc
mov
loope
and
lahf
xchg
lock
cdq
stos
rol
aad
mov
into
in
sub
retf
xlat
fidivr
push
push
cmp
xchg
mov
cld
inc
or
imul
(bad)
dec
mov
fldenv
inc
rol
jg
xchg
mov
inc
outs
in
adc
add
xlat
test
push
data16
inc
push
(bad)
cs
cmp
aam
xchg
(bad)
cmps
adc
lahf
ja
stos
xchg
sbb
shr
and
sti
and
(bad)
nop
dec
dec
pop
mov
ins
mov
pop
dec
imul
mov
int3
mov
lahf
shr
xor
js
pop
aam
jnp
and
lahf
frstor
shr
pop
enter
push
mov
sbb
dec
movs
imul
push
xchg
clc
and
add
and
fs
sbb
xlat
test
(bad)
and
jns
call
xor
dec
mov
mov
fdivr
cdq
mov
fmul
push
sub
mov
call
xchg
inc
cmc
jle
dec
pop
hlt
push
mov
fs
cmp
(bad)
push
xchg
ret
jge
and
xor
fimul
lods
mov
jno
adc
mov
std
loope
sub
fs
popa
out
or
sbb
lock
push
fdiv
sbb
(bad)
adc
ret
jbe
test
into
lahf
mov
call
lahf
loopne
pop
(bad)
movs
stos
cmc
add
adc
xor
bound
in
mov
jl
inc
(bad)
pop
(bad)
and
push
jmp
push
movs
je
xor
stc
sub
mov
mov
sar
pop
pushf
stos
jmp
test
pushf
add
or
dec
pop
lods
and
mov
sub
mov
sbb
ja
adc
int3
sbb
adc
mov
daa
popf
jno
pop
sub
xchg
rcl
cdq
inc
fdiv
mov
dec
test
inc
fs
ins
(bad)
(bad)
mov
test
mov
mov
and
addr16
pop
in
dec
and
sub
lahf
add
cdq
pop
xchg
jecxz
(bad)
and
sbb
and
sub
push
or
aaa
mov
repz
das
outs
pop
out
jle
in
xor
mov
imul
cmp
repz
xor
ins
add
test
jmp
sti
cmp
jecxz
sbb
in
std
mov
mov
imul
fcomp
inc
dec
in
shl
adc
and
jno
inc
mov
imul
mov
cmps
addr16
scas
ds
dec
xor
out
mov
or
sti
jge
data16
scas
xor
pop
fbstp
out
push
cmp
push
imul
aaa
aaa
jp
inc
cmc
pop
movs
jo
leave
scas
adc
jae
(bad)
je
sbb
out
adc
mov
xchg
shl
jne
in
and
cwde
fbstp
lahf
mov
xor
(bad)
into
push
cdq
pop
or
aas
sbb
pop
out
lahf
pop
sti
jp
mov
fstp
movs
pusha
rol
das
push
aas
jle
cwde
and
imul
xor
mov
test
mov
xor
cmp
mov
sbb
adc
adc
call
(bad)
xor
pusha
mov
cdq
ins
fidiv
repz
and
push
in
int3
popa
pusha
in
pop
mov
push
gs
aam
and
add
inc
xlat
pop
jb
popa
mov
sbb
sub
mov
jmp
cld
jmp
cs
or
loope
add
mov
push
es
mov
push
add
inc
inc
push
xor
pop
dec
repz
je
ins
popa
xor
mov
cmp
iret
dec
sub
stos
jle
pop
jmp
shl
gs
test
repnz
mov
shl
test
mov
push
or
xchg
mov
inc
idiv
imul
lahf
jmp
jbe
pop
jno
xor
inc
cs
sub
cld
mov
movs
sub
or
data16
or
xor
repnz
inc
push
push
sub
jnp
in
mov
sub
xchg
jnp
(bad)
jb
pop
stc
or
rep
sub
fcom
dec
in
lods
lds
cmp
mov
mov
fbstp
lea
ret
jbe
cmp
test
cmp
ins
inc
pop
and
(bad)
rol
(bad)
int
jo
mov
aaa
in
sbb
repz
dec
dec
sbb
xchg
cdq
jb
push
push
hlt
inc
mov
inc
arpl
mov
js
sub
jl
mov
xor
movs
js
lock
ret
add
sub
pop
(bad)
(bad)
pusha
pop
mov
push
sbb
sbb
add
in
or
inc
inc
xchg
sahf
in
loope
sub
sbb
add
hlt
outs
inc
pop
rcr
neg
pusha
adc
and
outs
das
xchg
int
jmp
popa
jb
pop
outs
jmp
mul
cli
retf
mov
mov
jns
push
out
sbb
arpl
sbb
lahf
mov
jo
je
push
mov
push
cmc
sub
in
xchg
and
pop
out
lds
xchg
call
add
pop
mov
gs
add
mov
jae
add
mov
sub
(bad)
fmul
or
aas
xlat
push
stos
sbb
cmp
inc
mov
test
fadd
mov
(bad)
cmp
ficomp
mov
scas
sub
adc
sbb
fiadd
xchg
push
xchg
or
in
sar
jmp
idiv
or
xchg
scas
adc
in
in
enter
movs
jmp
push
mov
push
mov
ret
cmp
lods
xor
loopne
lahf
mov
xor
xchg
xor
cmp
push
jo
ret
into
ss
mov
mov
mov
jbe
pop
jb
fild
xchg
sbb
add
pop
movs
sub
out
data16
or
sahf
div
imul
std
int
mov
enter
pop
fisub
(bad)
jge
push
shl
das
mov
mov
sbb
mov
aas
push
fidivr
shl
push
xor
xlat
enter
fld
push
mov
adc
jmp
xor
loop
aam
xchg
and
push
(bad)
inc
in
dec
in
test
hlt
cld
push
outs
xor
out
test
ror
cwde
cmp
cmps
jecxz
jge
popa
cmps
sbb
stos
dec
add
out
fistp
scas
rcl
test
imul
mov
sub
push
test
test
mov
out
loopne
test
adc
pusha
add
mov
(bad)
ja
(bad)
popa
fdiv
ins
outs
retf
aas
or
mov
push
movs
pop
pushf
dec
xor
ss
sbb
xor
mov
lods
push
sub
loop
ret
jg
sub
loope
push
push
jno
and
jecxz
sahf
data16
pop
inc
lds
jecxz
sub
sti
jo
mov
mov
jb
jmp
lods
test
out
pushf
fist
jg
add
aas
or
fnsave
mov
mov
rcl
add
sbb
scas
sbb
scas
lahf
stos
outs
in
xchg
jnp
dec
sbb
rcr
(bad)
into
pop
shl
les
pop
ficomp
shl
mov
sub
xchg
dec
jne
push
int3
daa
adc
adc
push
add
in
xchg
and
pop
ficomp
or
mov
sub
inc
add
std
and
mov
push
mov
cmp
jb
mov
(bad)
bound
mov
test
les
dec
xor
jecxz
jg
adc
or
stos
cmps
xor
pop
pop
loopne
dec
pop
push
mov
test
xchg
adc
or
pop
ficom
xchg
and
ja
test
es
ret
lods
mov
out
cs
aad
outs
push
xor
out
sbb
test
mov
in
or
jle
mov
lahf
mov
cmp
cmp
(bad)
or
jnp
and
adc
dec
mov
hlt
test
add
movs
aas
mov
and
mov
sbb
add
dec
mov
cs
rcr
cmc
push
das
nop
out
ficomp
les
inc
jmp
push
jmp
xor
aam
into
in
hlt
and
mov
out
add
rcr
(bad)
mov
std
arpl
ja
sub
imul
push
xchg
cmps
mov
(bad)
cwde
das
push
mov
xlat
dec
or
pop
sub
and
add
add
scas
int
loop
push
test
in
gs
test
and
int3
or
out
cmc
in
mov
pop
lods
jne
in
rol
dec
sahf
pop
aas
sbb
repnz
adc
push
cmp
or
push
movs
add
pop
retf
aam
and
sub
pop
cmp
idiv
sbb
retf
retf
test
adc
push
adc
ins
clc
sub
out
scas
sbb
sub
fdivr
shr
mov
push
sub
out
std
and
scas
sub
mov
dec
mov
shr
xchg
adc
xor
popa
push
adc
int
push
mov
xchg
ins
jno
mov
retf
push
imul
repnz
iret
push
out
jbe
xchg
neg
mov
shl
xor
jle
inc
cmp
jl
and
mov
iret
mov
jae
dec
pop
jg
enter
push
data16
std
sub
(bad)
scas
bound
adc
(bad)
lock
or
repz
jmp
jnp
into
call
sahf
and
call
cs
int
mov
xor
pushf
ret
dec
loop
outs
mov
das
(bad)
sbb
cs
sbb
div
lock
movs
push
adc
inc
iret
mov
dec
pop
mov
shl
mov
mov
aam
mov
mov
retf
movs
add
call
mov
add
(bad)
xchg
scas
shr
lahf
loopne
xchg
movs
mov
fcmovb
pop
in
test
push
inc
mov
inc
jnp
mov
repz
test
cmps
ret
jbe
and
dec
xor
cwde
inc
push
popa
rol
fisttp
cdq
fs
out
xchg
sar
xchg
push
adc
push
inc
or
push
retf
je
xor
(bad)
xchg
(bad)
loop
scas
pop
imul
fadd
inc
xchg
test
mov
cli
(bad)
stos
jbe
test
scas
cmp
retf
cmps
pushf
iret
es
push
cmps
xchg
sub
dec
lods
je
dec
out
(bad)
pop
test
or
into
rcl
popf
and
lahf
movs
in
repnz
sub
push
ret
jmp
punpckldq
gs
int3
or
pop
jmp
jge
dec
daa
aaa
shl
fwait
std
pushf
in
test
inc
xchg
jle
rcl
out
les
in
dec
push
mov
mov
jmp
pop
test
dec
test
mov
mov
mov
fmul
mov
out
push
popf
cmp
aad
mov
movs
mov
int
icebp
jb
(bad)
xor
dec
cmp
jle
pop
or
(bad)
xor
mov
in
(bad)
fimul
and
shl
outs
outs
test
(bad)
add
leave
xchg
stc
fisubr
sbb
xor
loop
mov
mov
stos
ja
mov
popa
jbe
dec
leave
push
out
js
push
clc
and
jno
mov
add
das
stos
mov
icebp
ja
cmp
retf
js
adc
sbb
aad
leave
sub
call
xchg
xor
outs
in
dec
jmp
ja
xlat
clc
add
mov
shr
in
int
mov
aaa
rcl
mov
cli
lods
lock
in
enter
jmp
shl
add
fs
cmps
test
outs
(bad)
mov
stos
inc
xchg
xor
and
xchg
mov
aam
and
jae
inc
lock
in
test
mov
inc
sub
mov
stos
push
mov
mov
imul
ja
sub
cmp
jno
mov
pop
imul
jmp
mov
ds
ret
(bad)
sti
pop
and
pop
sub
cmp
es
inc
fwait
mov
js
push
mov
in
jns
cmp
push
jl
mov
es
mov
repnz
push
iret
adc
out
mov
inc
mov
jno
arpl
(bad)
dec
fnstsw
imul
mov
fsub
fwait
add
ins
outs
push
mov
aas
pushf
xchg
inc
jl
xlat
cmp
and
stc
icebp
loop
leave
mov
imul
out
rcr
xor
mov
xchg
add
leave
adc
pop
lds
and
pop
enter
pushf
adc
or
jnp
add
xchg
call
lods
jecxz
pop
jle
mov
and
pop
or
test
pop
mov
sub
rol
ret
out
add
stos
jle
or
dec
jae
mov
xlat
loop
nop
mov
xor
pop
and
int3
sbb
sbb
xor
gs
call
xlat
add
or
cld
add
mov
sub
cmp
sahf
jmp
inc
cwde
stc
cld
and
mov
add
jmp
(bad)
sahf
push
mov
pop
mov
mov
add
jp
sar
je
cdq
inc
push
pop
into
(bad)
push
lock
push
aas
mov
cmp
and
mov
popa
xchg
fidiv
(bad)
mov
mov
adc
test
pop
int3
fmul
adc
out
and
mov
clc
add
loop
pop
aam
les
pop
cmps
sub
push
mov
mul
inc
xor
and
pop
rcl
cmp
cmp
lea
jge
std
clc
inc
test
mov
xor
dec
in
leave
mov
dec
mov
sbb
or
scas
hlt
add
cmp
vmwrite
inc
imul
fdiv
xor
dec
push
sar
add
dec
cmps
in
fsub
mov
sub
hlt
pop
jl
push
hlt
cmp
sbb
xor
push
inc
aaa
push
cwde
dec
sub
ds
fcomp
fstp
call
xchg
sub
js
bound
adc
xchg
mov
dec
in
les
jae
lods
pop
lods
ins
add
sub
popf
sub
push
add
add
add
push
clc
xchg
imul
outs
movs
add
retf
push
in
fbld
xor
inc
adc
ins
add
xor
pop
xchg
ins
or
outs
das
push
push
gs
add
mov
repnz
in
mov
aas
sahf
mov
sbb
mov
aad
cmps
mov
pop
call
je
mov
cmp
mov
(bad)
cld
inc
mov
repz
stos
outs
jbe
jae
test
mov
or
and
out
xor
and
dec
jge
mov
mov
pusha
cld
sub
in
ret
xor
or
jae
and
ins
mov
popf
xchg
fs
(bad)
sti
or
into
inc
xchg
or
aad
loop
lods
pop
and
add
popf
(bad)
cmp
dec
mov
scas
xlat
dec
shl
(bad)
sub
sbb
xor
cld
int
js
mov
sub
xor
outs
add
mov
push
and
sbb
jb
push
mov
cmc
and
ja
daa
fcom
mov
mov
leave
pusha
aad
mov
pop
into
xor
dec
cmp
enter
mov
loop
jmp
test
jmp
int
ret
fdivr
or
pop
pop
popa
pandn
adc
sbb
jmp
xchg
xchg
pop
adc
repz
and
push
cmp
ficomp
pop
nop
jne
dec
aaa
jbe
mov
add
test
pop
addr16
pop
scas
sbb
push
(bad)
(bad)
xlat
cmps
mov
jo
pushw
xchg
add
push
lds
mov
inc
mov
or
ja
sahf
mov
sub
cmp
test
cmps
jmp
popa
or
iret
mov
and
aad
inc
cmps
stos
mov
sub
sub
das
pusha
pop
or
cmc
jge
mov
jp
hlt
xor
cmp
push
cmps
loop
or
mov
xchg
idiv
xchg
mov
xor
mov
ss
sub
es
push
xlat
aaa
rcr
xchg
jno
sub
cmp
xor
mov
or
daa
dec
les
mov
push
cmp
jg
lds
inc
stos
push
in
mov
adc
rcr
mov
jb
adc
jecxz
test
hlt
mul
and
push
fidiv
outs
icebp
add
xchg
adc
cli
dec
fst
pushw
cwde
jne
(bad)
test
push
dec
loopne
ficom
sub
xchg
imul
sbb
inc
pop
fs
cmps
lahf
pop
cmp
cmp
pop
(bad)
sti
jp
aam
mov
jne
and
or
jae
jmp
lds
add
pop
cmc
or
inc
jl
add
(bad)
popa
jnp
xchg
icebp
(bad)
dec
push
xor
adc
ins
jbe
sbb
xor
shr
addr16
xor
mov
cmp
or
xchg
cmp
jmp
loop
aaa
cmps
lods
add
lea
push
cmp
stc
pop
mov
and
test
hlt
or
in
or
fs
arpl
inc
lahf
dec
test
jle
repz
adc
daa
iret
rcl
pop
test
fst
lahf
mov
mov
aam
call
lods
and
mov
inc
xor
(bad)
fisub
cwde
adc
bnd
imul
(bad)
imul
mov
xlat
push
xor
adc
push
dec
arpl
arpl
mov
and
mov
rdmsr
sub
mov
jbe
adc
jl
int
lock
into
lds
cmp
repnz
neg
rol
push
out
in
cld
sub
fld
pop
mov
shl
or
daa
xchg
and
lods
pop
push
adc
mov
sbb
xchg
iret
data16
pop
inc
mov
xchg
(bad)
ja
in
mov
loope
adc
mov
xor
(bad)
fs
popf
cmps
dec
xchg
ins
pop
stc
sub
pop
cli
iret
(bad)
inc
pop
into
pop
scas
retf
lahf
mov
mov
jo
lods
pop
and
lock
cmp
adc
out
mov
lahf
fst
and
mov
push
in
and
and
or
movs
mov
retf
mov
data16
mov
xchg
push
jb
in
iret
cmpps
xchg
lock
(bad)
std
out
mov
shr
push
and
inc
jbe
mov
jge
mov
push
or
and
mov
push
push
xor
jnp
pop
dec
and
mov
jno
stos
jbe
pop
popf
cmp
mov
xchg
inc
and
add
pushf
or
jge
jbe
call
ret
and
and
mov
cmps
dec
jle
dec
dec
jle
ret
adc
aam
cmps
mov
add
mov
lahf
or
(bad)
stos
inc
jecxz
rcr
ins
lock
cs
adc
fnstsw
adc
add
inc
addr16
push
clc
xchg
addr16
cli
loope
or
icebp
mov
xchg
iret
mov
cmps
movs
xor
add
js
lock
ja
mov
jg
push
cmp
adc
mov
and
pop
iret
stc
pop
icebp
mov
shl
cmp
jb
aad
(bad)
pop
jmp
gs
les
mov
push
jle
stos
fisttp
push
loop
or
test
mov
shl
addr16
imul
je
sbb
shl
mov
je
pop
jg
pop
sub
shr
loopne
test
lahf
jmp
iret
pop
or
mov
jg
sub
cmp
push
call
repnz
mov
add
cmp
add
push
pop
mov
jp
cli
stc
jne
push
clc
add
add
(bad)
push
out
repz
xor
adc
scas
mov
int
or
dec
or
jno
xchg
out
mov
xor
mov
pop
xchg
aam
(bad)
js
lods
dec
int
int3
test
jmp
aam
inc
sti
ror
fisub
adc
mov
leave
xchg
and
sbb
mov
pop
dec
jnp
lahf
mov
xchg
cli
call
aad
mov
and
cmp
mov
aam
mov
dec
out
jo
sbb
scas
fisubr
and
arpl
pop
cmp
sub
lea
shr
ja
in
out
xchg
and
push
xchg
in
push
dec
inc
push
popf
js
(bad)
call
in
pop
into
cli
leave
sub
int3
xor
and
sahf
(bad)
cmp
pop
sbb
inc
in
inc
repz
cwde
pop
dec
pop
sub
mov
call
jbe
mov
xor
mov
xchg
inc
and
xchg
sub
push
nop
mov
cmp
cmp
fwait
repz
retf
loopne
mov
stos
out
repz
add
mov
push
fld
push
iret
cld
int3
(bad)
xchg
add
dec
in
pop
or
sub
pusha
xchg
enter
loope
cwde
mov
or
imul
test
outs
clc
xchg
out
push
mov
sar
in
(bad)
pop
cmp
aad
jns
mov
push
ds
mov
mov
popf
mov
sbb
jne
ds
lock
imul
out
push
and
outs
pop
fwait
psrad
imul
ret
sti
fmul
mov
into
push
gs
mov
popf
adc
push
adc
cmp
cmps
mov
mov
lea
inc
mov
and
jo
inc
and
inc
sub
leave
adc
sub
aaa
cli
fwait
pop
mov
push
pop
sbb
cli
pop
fwait
sub
(bad)
fdivp
pop
adc
div
(bad)
sti
jge
(bad)
sbb
jnp
int3
loope
(bad)
sti
nop
jl
in
cmc
mov
mov
ins
inc
push
pop
and
cli
xchg
es
lahf
dec
nop
and
push
repnz
inc
sub
lds
call
test
stos
lods
jno
in
in
add
dec
push
or
inc
xchg
lock
jnp
in
mov
mov
push
aaa
(bad)
aaa
test
xchg
push
stos
ret
stc
pop
jo
les
movs
call
sub
jl
int
popf
sub
inc
cmps
inc
mov
jmp
scas
add
dec
cli
scas
inc
dec
sbb
loope
fdiv
cmp
xchg
(bad)
and
push
out
fwait
jb
jmp
cld
add
hlt
inc
fdiv
jae
lea
mov
pop
les
(bad)
cmp
sahf
push
jno
in
dec
adc
pop
ret
shl
loope
outs
xchg
adc
push
mov
fs
sbb
adc
fwait
(bad)
sbb
or
fist
cmp
fiadd
scas
cmp
dec
xchg
pop
mov
shl
mov
pop
cmp
fcomp
rcl
add
xchg
inc
dec
ins
das
jle
jne
or
ret
addr16
stos
jecxz
lock
mov
sub
aam
popa
adc
cmp
outs
dec
pop
pop
cmps
ja
(bad)
adc
div
loopne
inc
inc
(bad)
dec
lods
or
jge
or
loopne
cwde
pushf
or
(bad)
and
cmovg
mov
cmps
sbb
dec
adc
pop
movs
js
ds
pop
dec
mov
mov
arpl
pop
adc
mov
sbb
adc
out
rcl
mov
mov
rol
sub
mov
cwde
mov
in
xchg
in
push
jb
inc
cdq
aam
mov
ret
icebp
xor
fstp
xor
mov
imul
mov
dec
shr
dec
in
cmc
call
cmps
and
push
and
fistp
scas
gs
adc
inc
jno
movs
idiv
mov
mov
add
imul
mov
je
mov
outs
repnz
dec
xor
int3
dec
fstp
inc
jo
cmps
inc
ss
test
call
mov
cmps
mov
pop
mov
aas
xchg
test
sbb
pop
push
push
push
mov
mov
out
mov
or
mov
inc
xor
cwde
mov
mov
cs
outs
dec
aad
out
test
jns
mov
inc
ret
ror
in
icebp
xchg
jae
(bad)
mov
adc
pop
inc
mov
cmps
mov
push
inc
psubusw
ja
mov
lock
imul
cmc
shr
sub
int
outs
dec
pop
or
jno
out
jge
sar
data16
pop
ins
inc
sbb
aad
scas
sbb
mov
mov
mov
movs
fimul
push
not
mov
sahf
push
and
repnz
mov
or
popa
push
les
fidiv
and
inc
sub
or
and
mov
ja
(bad)
pop
jae
push
sbb
daa
pop
dec
out
push
cmp
retf
sar
add
mov
ror
cmps
nop
mov
mov
mov
das
inc
popf
xchg
loop
(bad)
jnp
sbb
(bad)
jle
enter
call
icebp
(bad)
and
inc
ins
add
sahf
pop
cmc
(bad)
push
sbb
in
inc
bound
sbb
enter
(bad)
repz
clc
jne
mov
out
sbb
push
arpl
fsubr
in
out
shl
pop
jne
outs
mov
mov
cmp
out
jl
in
pop
mov
(bad)
sub
(bad)
jbe
push
add
lea
push
into
aad
retf
sbb
cmc
enter
movs
push
xor
popf
adc
test
into
inc
cmp
lea
xor
fnstsw
add
jb
push
sub
loope
sti
add
icebp
sbb
cmp
pusha
cmp
aas
inc
call
dec
push
cmp
cmp
retf
bnd
imul
arpl
mov
lahf
mov
adc
cmps
fadd
fsub
(bad)
dec
outs
call
dec
mov
jo
iret
in
jecxz
loopne
mov
das
mov
retf
mov
(bad)
and
ins
sub
imul
jmp
jo
fild
xchg
jae
sar
pop
mov
fadd
sbb
sbb
push
push
sar
sbb
jae
leave
sub
stos
js
jnp
mov
adc
idiv
mov
fmul
mov
push
inc
sbb
inc
dec
shl
enter
mov
ja
mov
std
movs
sub
pop
cwde
pop
push
fnstenv
mov
pop
neg
(bad)
fst
repz
push
cmp
push
cmp
xchg
rcl
xor
cmp
dec
fist
test
fcmovnbe
stos
ret
aaa
into
mov
xor
xor
and
adc
in
adc
jne
adc
mov
fnsave
mov
cmp
in
push
loope
retf
mov
inc
jae
add
inc
lea
ins
or
inc
push
fyl2x
dec
push
mov
mov
(bad)
rcr
cdq
sbb
dec
int
mov
(bad)
not
test
pop
(bad)
push
and
sahf
fs
xchg
sbb
sub
cs
mov
ret
dec
mov
and
dec
movs
mov
jo
call
in
pop
loope
xlat
jb
(bad)
in
pop
stos
mov
shl
inc
std
fabs
call
inc
sub
test
xchg
in
jp
jle
or
pop
iret
idiv
test
and
jle
cmps
das
mov
imul
or
inc
adc
inc
dec
inc
out
push
arpl
stos
sar
ds
xchg
and
ins
out
out
sbb
lahf
aas
sbb
test
inc
push
jp
pop
popa
jge
and
mov
dec
mov
lods
mov
aam
test
(bad)
or
mov
xchg
fmul
dec
add
enter
pop
dec
arpl
jbe
pop
cli
inc
mov
adc
clc
(bad)
pop
adc
mov
popa
pusha
(bad)
xor
fisttp
loopne
add
and
mov
outs
jg
ror
mov
xor
sub
xor
dec
(bad)
call
sti
leave
inc
mov
push
mov
and
push
push
push
out
jo
addr16
jle
pushf
mov
push
mov
pop
cmp
jg
shl
bound
dec
jl
mov
outs
std
int
(bad)
in
lods
and
mov
inc
fcmovne
rcl
mov
cmp
fs
jle
ins
sbb
mov
imul
xor
lahf
mov
sahf
xchg
out
xchg
jbe
jmp
daa
mov
ret
dec
sbb
adc
ror
mov
sbb
adc
hlt
call
nop
rcr
retf
jmp
idiv
push
and
cmp
into
adc
fcmovnb
ret
fucomp
sub
sbb
jg
ins
(bad)
jo
lock
jo
cmp
shl
pop
dec
xchg
imul
in
(bad)
call
push
in
mov
lods
push
mov
outs
dec
adc
aad
nop
je
jnp
mov
cmp
sbb
arpl
scas
add
loop
inc
lds
in
mov
lock
sub
(bad)
jle
sbb
sbb
je
xlat
scas
inc
add
loop
loop
pusha
pop
pop
pop
push
xor
retf
test
jns
shr
add
ret
inc
sar
std
call
xor
repz
cmp
aam
sub
push
rcl
xor
mov
pop
rcr
push
jae
popf
push
stos
xor
stc
jg
imul
mov
pop
xchg
arpl
ss
movs
mov
jb
iret
ins
cli
or
repz
aas
mov
jb
mov
fiadd
mov
push
cwde
mov
push
pop
xchg
or
xchg
adc
pop
leave
jns
and
test
cmps
cmps
data16
scas
out
xchg
xchg
inc
fdivr
jo
push
test
(bad)
dec
xchg
pop
xor
pop
stos
add
add
mov
repnz
out
mov
xchg
or
scas
sar
setne
xor
out
mov
sub
inc
fbld
add
sub
add
sbb
mov
and
mov
aaa
fld
fs
xor
jmp
repnz
and
xlat
bound
inc
jbe
mov
in
add
cmps
cmp
clc
pop
and
add
cwde
xor
sbb
sbb
cmp
setle
cli
xor
jnp
mov
sar
nop
push
and
inc
xor
imul
int
rol
add
lea
sub
test
mov
add
and
sbb
xchg
dec
into
lods
push
test
add
inc
mov
and
or
stc
lahf
int3
in
mov
btr
fs
or
scas
div
inc
mov
test
int
in
repnz
push
inc
leave
and
ins
mov
mov
cli
movs
icebp
lods
fcmovbe
in
enter
push
mov
aad
psubusb
fcom
dec
adc
cmp
xor
lds
inc
ret
xor
sbb
into
jl
cmc
sar
leave
push
imul
mov
aam
imul
in
inc
loop
loop
adc
scas
test
pop
cld
cmc
pop
lock
dec
cli
cmps
dec
push
arpl
stos
or
xchg
cmp
(bad)
dec
movs
inc
cmp
and
mov
mov
mov
jno
shr
adc
mov
cmps
adc
dec
and
ja
and
arpl
movs
xchg
cmp
daa
mov
and
aad
xlat
ja
cmc
and
xlat
pop
mov
xchg
dec
xchg
mov
jo
jecxz
push
mov
sti
push
cld
xchg
mov
movs
(bad)
xchg
inc
int
mov
mov
pop
cmc
mov
sahf
fcom
mov
lea
dec
mov
scas
and
jbe
dec
int
pop
mov
arpl
pushf
ror
lods
and
cwde
cmp
inc
mov
jnp
mov
xor
je
jb
sbb
gs
loopne
imul
dec
popf
xchg
pop
mov
cmp
push
xor
or
pop
fstp
data16
(bad)
shr
sbb
push
dec
mov
lea
ins
and
gs
imul
mov
int
pop
add
data16
xchg
sub
or
push
mov
cmp
shr
lods
push
movs
lods
jnp
dec
cmp
or
in
arpl
dec
daa
dec
mov
jmp
outs
mov
sbb
add
dec
je
xchg
add
cmps
mov
jns
mov
jg
ror
shr
mov
push
jo
outs
jp
data16
dec
repz
xor
lods
mov
mov
imul
outs
mov
dec
sub
test
pop
fs
iret
cmps
loope
pop
fcmove
and
clc
stc
dec
ins
add
xor
inc
add
addr16
xor
lea
cli
sub
xchg
push
cmc
test
bound
inc
add
call
ds
and
mov
imul
ds
sti
clc
xchg
mov
icebp
pop
jp
sbb
call
cwde
js
jle
push
xchg
jmp
fsubp
mov
sbb
mov
dec
inc
dec
jmp
lea
popf
enter
ret
lahf
mov
icebp
je
push
sbb
sbb
dec
sbb
adc
fidivr
ss
mov
into
pop
sti
repnz
(bad)
(bad)
mov
inc
not
fcom
ficom
call
or
mov
cmps
mov
fld
rol
jl
mov
push
in
push
sahf
pop
pushf
fiadd
xor
test
sbb
cmp
mov
lahf
and
xchg
add
sbb
or
xlat
aad
push
add
push
push
push
mov
div
lea
sub
xchg
or
dec
clc
and
push
movs
pop
xor
jb
ret
(bad)
lsl
jno
jg
jle
aaa
push
js
scas
xchg
sbb
mov
push
sbb
pushf
in
mov
sbb
pop
dec
mov
fdivr
adc
mov
ja
adc
inc
fmul
jp
jnp
cmp
in
xor
cmps
ins
jmp
cmp
dec
pop
or
test
aad
mov
aaa
jle
dec
mov
sub
push
mov
outs
cmc
and
push
icebp
cld
sti
ror
pop
imul
adc
stos
js
(bad)
rcl
ins
in
sbb
adc
loopne
sbb
arpl
push
sbb
mov
push
push
mov
popa
and
hlt
adc
adc
popf
imul
nop
add
jae
pop
(bad)
jp
xor
aam
(bad)
int
cmp
pop
outs
inc
mov
and
dec
rol
ja
xlat
(bad)
fwait
lahf
loopne
push
dec
scas
and
ss
mov
icebp
ret
xchg
sub
js
mov
and
enter
mov
(bad)
in
call
cmp
xchg
xor
test
jmp
mov
out
jb
mov
sub
and
xchg
xor
mov
(bad)
repz
mov
or
adc
inc
sbb
push
push
pop
dec
bound
jp
push
xchg
sbb
add
adc
aam
add
pop
sub
xor
and
adc
repnz
int
movs
inc
cmps
repz
ja
std
or
jge
xor
jae
cld
xor
loope
mov
dec
lahf
dec
jge
jp
ds
jne
inc
retf
pop
jmp
inc
das
add
push
xor
jl
and
sub
mov
or
or
and
fstp
scas
les
js
int3
sub
gs
dec
gs
jle
inc
xchg
fdivp
pop
pop
lods
in
dec
add
push
jb
jb
es
push
xor
cmp
sti
fisub
fdiv
xchg
fs
adc
enter
dec
shl
pop
sar
xor
in
sub
or
ss
movs
test
adc
sub
push
fisttp
push
pop
xchg
inc
fs
mov
ins
lods
pop
jnp
sahf
fsub
inc
mov
inc
dec
scas
jne
ja
mov
dec
mov
in
sub
cwde
aam
jnp
push
shl
cmp
add
xchg
jmp
ss
or
mov
xchg
retf
and
retf
cmp
ins
xchg
xchg
cli
ret
jo
in
cmp
sub
ja
fld
jae
retf
cli
lods
mov
xchg
hlt
popf
in
lea
jo
test
pop
jns
fist
add
xor
int
inc
push
sub
iret
jnp
xchg
je
jno
ja
sub
fld
mov
in
mov
loopne
push
int
jnp
inc
pop
dec
ret
fsqrt
sbb
daa
int3
jno
inc
loop
jno
sbb
cmpps
hlt
data16
inc
sub
and
(bad)
cmp
jl
jecxz
inc
adc
imul
mov
cmps
jp
dec
int3
mov
jmp
cmc
bound
mov
fisubr
add
movs
cmp
call
cmp
jbe
icebp
std
movs
and
repnz
cld
addr16
xchg
test
loopne
jmp
cwde
popa
loope
in
scas
repnz
push
test
sbb
mov
imul
adc
mov
mov
fcom
rol
sbb
ret
sub
mov
popa
jb
jp
sbb
fs
sub
test
dec
les
mov
jge
lea
rol
(bad)
dec
pusha
out
sbb
xchg
and
pop
add
adc
pop
adc
inc
lods
inc
fs
in
clc
pusha
ds
pop
mov
mov
dec
(bad)
jmp
scas
sub
sub
call
jns
mov
and
adc
sbb
(bad)
loop
(bad)
push
add
xchg
mov
ds
inc
push
push
dec
jle
push
in
push
mov
ins
pop
repnz
ja
or
inc
adc
aad
das
pop
(bad)
(bad)
nop
out
popf
add
hlt
and
jl
pop
cwde
nop
fcom
ins
and
ins
cmp
in
jb
push
adc
test
xchg
repz
sub
pop
xchg
sub
add
xchg
movs
xchg
mov
(bad)
dec
sbb
and
lock
push
ret
push
(bad)
push
mov
adc
cmp
push
dec
loope
mov
push
cmp
xchg
int
push
mov
or
and
idiv
ret
sbb
inc
dec
mov
fs
ret
test
ds
xor
pop
push
out
sar
out
cvtdq2ps
and
xor
pop
out
lods
aad
dec
xchg
inc
mov
daa
(bad)
lock
sbb
aas
div
sub
sub
add
xor
ja
mov
ss
or
cmp
scas
and
in
sub
sbb
mov
mov
scas
scas
pop
adc
mov
pop
mov
pusha
jno
pop
cmps
in
outs
mov
loopne
xchg
movs
sar
cmp
popf
bound
add
adc
fst
jb
mov
in
(bad)
(bad)
out
mov
dec
imul
dec
cld
les
and
mov
mov
outs
or
sbb
cmps
test
adc
rol
and
xlat
push
xchg
push
push
fwait
dec
adc
push
cmc
imul
and
inc
xchg
data16
pop
je
jle
pop
cmp
mov
push
xchg
(bad)
dec
out
sahf
js
adc
(bad)
and
cmps
jecxz
ret
enter
les
jp
(bad)
(bad)
cmp
clc
call
ins
daa
mov
xchg
ins
sub
push
movs
jnp
movs
pop
shl
retf
(bad)
jmp
(bad)
and
and
popa
or
fisub
xor
fistp
sti
stos
sar
inc
inc
push
push
(bad)
(bad)
movs
xchg
test
stos
and
adc
and
mov
mov
push
adc
dec
mov
xor
adc
push
std
mov
mov
adc
inc
mov
pop
icebp
cmp
cmps
jnp
push
cld
and
fld
xor
pop
mov
je
imul
dec
dec
jnp
int
(bad)
in
mov
mov
in
pop
test
fs
jno
add
mov
mov
mov
lea
xchg
out
jno
cli
mov
icebp
pushf
sbb
mov
lahf
xchg
retf
icebp
into
ficomp
push
jnp
cmp
xlat
and
mov
shr
push
mov
fistp
ja
(bad)
mov
sub
call
mov
add
sbb
ret
add
xchg
fldenv
mov
ds
dec
jmp
cmp
push
not
test
cmps
test
dec
sbb
push
xchg
xor
sub
dec
add
sub
icebp
call
cdq
adc
jo
ror
movs
xchg
mov
or
not
enter
aas
add
mov
les
jle
xor
(bad)
stos
in
inc
mov
jns
das
lahf
bound
xchg
int3
cs
sub
jg
jmp
shl
jmp
dec
pop
movs
sub
add
repnz
and
sar
outs
lods
lods
loop
inc
dec
fmulp
push
jb
sbb
push
stc
int
enter
aad
fisub
push
xor
mov
bound
dec
sbb
fs
inc
dec
xchg
fadd
nop
(bad)
push
aad
call
xor
jp
mov
cld
pop
sbb
(bad)
into
mov
gs
in
adc
retf
mul
jl
cmps
sub
dec
mov
dec
sub
dec
dec
shl
inc
add
mov
pop
or
jecxz
jmp
outs
retf
jne
addr16
jbe
(bad)
icebp
ss
xlat
lods
in
mov
sti
sti
or
popf
in
dec
pop
push
(bad)
mov
ret
jg
mov
mov
outs
(bad)
aad
mov
ja
out
rol
imul
into
mov
test
mov
mov
gs
mov
xor
add
mov
js
cmc
mov
pop
test
xchg
das
out
push
or
popf
adc
scas
pop
sbb
jmp
push
xchg
mov
cli
loopne
xor
cmp
inc
imul
shrd
pop
bound
scas
retf
xchg
retf
lods
int
and
sub
mov
pop
lods
pop
push
pop
shl
(bad)
cmps
fldcw
xlat
mov
aas
stos
sete
xchg
stos
lahf
push
jbe
pop
rcr
(bad)
xor
retf
sbb
(bad)
or
pop
ss
jbe
lmsw
cld
mov
xchg
outs
shl
aam
dec
sub
lahf
mov
mov
pop
js
adc
cmp
xchg
ret
fsubr
push
xor
repnz
mov
push
(bad)
mov
xchg
inc
cmp
sar
push
sbb
out
(bad)
sbb
rcl
clc
push
push
jg
pop
push
xor
push
mov
dec
jle
cmc
mov
adc
cmp
int
sub
or
xor
pop
ins
xchg
inc
jae
dec
loop
rol
adc
pop
mov
mov
or
sub
jecxz
icebp
mov
sub
je
mov
dec
fistp
push
fimul
js
jp
sar
mov
push
sahf
pop
xchg
push
cmc
js
xchg
js
in
sub
in
xchg
rcl
sti
dec
out
fist
jl
jne
cmp
sub
add
cmp
div
adc
fwait
data16
jns
into
xor
cmp
mov
ffreep
mov
ins
popf
and
outs
and
rcl
pop
(bad)
imul
nop
stos
mov
fidiv
jns
in
push
or
imul
iret
push
scas
sub
and
(bad)
movnti
das
aaa
or
shl
hlt
neg
clc
add
stc
out
xor
xchg
xchg
jle
jne
jns
xchg
fild
mov
aam
das
(bad)
clc
sbb
ficomp
mov
cmps
and
sbb
jle
in
shl
jo
and
add
or
and
inc
add
out
daa
dec
ss
imul
mov
fld
adc
mov
mov
pop
adc
test
daa
cmp
xor
stos
(bad)
leave
sub
sbb
cmc
mov
stc
mov
jle
mov
jbe
mov
or
sbb
movs
mov
mov
mov
mov
mov
dec
in
shl
dec
sub
ja
inc
xor
mov
cmp
jle
dec
inc
inc
cmps
and
jbe
inc
movs
pop
movs
bndldx
sti
or
hlt
push
mov
lock
sub
mov
icebp
ss
jmp
mov
dec
cld
add
test
dec
pop
xchg
or
popf
in
xchg
cdq
leave
inc
inc
sti
add
mov
sti
sbb
xchg
fbld
cmp
bound
sbb
lock
rcr
sbb
pop
(bad)
jnp
idiv
jo
repz
invd
push
or
and
or
mov
mov
leave
mov
xor
cld
push
test
or
cmp
sub
pop
call
out
mov
push
cmc
lahf
int3
mov
lea
cwde
in
or
cli
lahf
mov
pop
mov
cdq
outs
push
mov
cmp
and
sbb
xor
adc
ficom
add
jb
retf
xor
jg
cmp
mov
pop
or
lock
lea
dec
ret
sub
mov
shl
push
push
inc
test
lods
cmp
mov
cmp
mov
xor
xor
rcr
stos
cmp
inc
add
dec
leave
push
push
(bad)
sub
push
fsub
outs
(bad)
nop
xor
mov
inc
ins
imul
cli
retf
cmp
lods
fdiv
sub
addr16
lock
and
imul
dec
arpl
clc
in
mov
push
or
imul
push
mov
inc
adc
sar
jbe
out
jle
repnz
outs
fsubp
pop
mov
and
add
xchg
fadd
sub
mov
in
in
sbb
sub
add
sar
(bad)
push
scas
movs
mov
jo
daa
cmp
inc
stos
inc
jo
ja
std
and
jne
fstp
mov
cmps
sub
dec
cmp
cmp
loopne
push
out
inc
jp
enter
sbb
test
jmp
loopne
and
jg
inc
das
fwait
loopne
sub
cld
imul
into
int
jne
dec
test
dec
and
dec
lods
test
daa
inc
mov
jle
or
sbb
test
int
shl
out
lock
js
cmp
and
popf
outs
adc
fsub
cmp
jecxz
in
inc
enter
jmp
repz
push
push
jno
bswap
popf
mov
xor
mov
sbb
jle
push
pop
std
inc
lock
pop
(bad)
adc
scas
hlt
cmpxchg
jb
xor
add
jge
mov
inc
adc
in
test
sbb
aam
sub
sbb
mov
xor
retf
pop
or
(bad)
cmc
scas
push
popa
ins
mov
rol
sbb
mov
mov
push
movs
push
test
call
stos
pop
mov
iret
sub
xor
aad
scas
(bad)
inc
sbb
mov
mov
mov
push
adc
push
pop
int
mov
mov
popa
mov
dec
xchg
bound
adc
rcl
div
outs
and
add
push
cmp
lock
mov
popa
aaa
retf
sub
push
xchg
cli
call
jnp
dec
cmp
imul
dec
mov
sti
fsubr
mov
popf
mov
(bad)
jmp
retf
mov
fadd
mov
inc
pop
jns
call
mov
mov
push
call
lea
nop
nop
dec
das
loopne
cld
rol
pop
pop
add
jnp
mov
(bad)
and
mov
push
das
push
mov
call
icebp
push
pop
add
or
cmp
stos
ret
push
sub
int3
pop
cwde
out
rol
sub
leave
fucomip
dec
xor
lea
xchg
and
cmp
call
pop
rol
push
shr
jo
push
sbb
mov
pop
push
mov
jae
cwde
or
jle
add
lahf
fst
icebp
cli
cmp
pop
inc
push
cmp
aad
adc
ficom
jb
pushf
or
test
mov
mov
pop
sub
ror
push
jnp
pop
add
xor
push
mov
dec
or
mov
xchg
ret
inc
jp
fs
int
outs
jecxz
cmc
jne
inc
sahf
jbe
cwde
pushf
int3
or
xor
sub
pop
ret
pop
jnp
pop
jmp
jg
inc
jne
sbb
iret
xor
pop
in
mov
sbb
mov
mov
add
movs
inc
in
and
pushf
mov
sbb
adc
rol
or
push
push
sbb
(bad)
push
outs
xor
xchg
aaa
cmp
adc
fcomp
xor
daa
sub
fdiv
add
xchg
(bad)
scas
dec
mov
out
xor
pop
mov
add
loope
stos
add
xchg
or
xchg
xchg
fadd
inc
loope
mov
sub
outs
xchg
pop
dec
xor
adc
and
aad
in
loope
lds
ins
test
loopne
int
cld
pop
jo
jb
sbb
fld
lds
movs
jne
out
dec
jnp
popa
jno
adc
pusha
xor
xor
jno
pop
fwait
dec
or
out
cs
and
lds
or
jmp
push
dec
sbb
cmp
int3
retf
cmp
mov
and
push
and
dec
mov
retf
sub
cmp
idiv
pop
adc
(bad)
xchg
rcl
cmc
lea
xlat
ja
cmp
inc
pop
cmp
test
jne
rcl
cld
or
fcomp
and
loopne
cmp
push
add
loopne
(bad)
daa
lds
js
mov
cmp
stc
popf
jno
lods
push
jo
and
loopne
mov
mov
sahf
gs
es
lds
call
(bad)
add
cmp
dec
mov
fnsave
pop
xlat
mov
aam
(bad)
in
or
in
push
xchg
sub
es
sbb
out
(bad)
lahf
inc
inc
sahf
xor
push
pop
push
pop
imul
lds
js
push
outs
cli
gs
jle
aam
dec
jbe
data16
test
mov
gs
pushf
addr16
adc
sub
xchg
push
sar
pop
sbb
outs
xchg
cmp
inc
dec
push
in
adc
jo
shr
int3
dec
mov
mov
loopne
(bad)
aam
test
ucomiss
jb
outs
jo
jno
sbb
and
lea
shl
aad
push
jecxz
mov
cmp
jle
push
lds
xor
cmp
push
pushf
mov
dec
in
pushf
(bad)
push
cmp
or
mov
fdivrp
movs
jne
mov
xchg
loop
or
mov
mov
je
cmps
pusha
into
mov
push
test
mov
das
pop
xor
cmps
aad
jmp
jb
fnstenv
xchg
mov
mov
pop
sub
xchg
cld
shl
dec
ret
dec
pop
pusha
imul
xor
adc
out
dec
pop
outs
fidivr
cdq
gs
outs
inc
mov
cdq
test
push
stos
(bad)
enter
inc
push
out
repz
mul
test
stos
mov
mov
cmp
xor
jp
adc
pop
adc
jnp
dec
cmp
cmc
adc
push
cwde
sub
xchg
pop
or
dec
nop
add
cdq
je
push
sub
jg
jo
ror
mov
les
sahf
push
and
jg
dec
pusha
int
les
or
cmps
jnp
push
mov
loop
dec
data16
inc
ja
shl
adc
imul
jae
lss
fisubr
ret
hlt
cmp
jle
mov
mov
inc
xchg
stc
cwde
push
inc
cmp
jmp
jno
and
pushf
lock
push
pop
scas
les
(bad)
lea
cmps
cmp
push
and
add
xor
push
pop
jle
xchg
test
out
xor
clc
xchg
adc
rol
fcom
sub
call
cmp
push
retf
jmp
dec
sar
add
sbb
or
(bad)
div
popf
jns
inc
xchg
jae
jg
stos
sbb
inc
es
gs
cmp
data16
sbb
xor
pop
sahf
mov
jmp
(bad)
aad
les
add
je
add
rol
imul
jns
ret
push
push
std
adc
push
push
sbb
mov
mov
(bad)
gs
mov
arpl
mov
ja
xor
or
cwde
nop
mov
data16
jg
adc
sti
ret
nop
call
xor
xchg
fwait
and
sub
sbb
mov
xlat
jl
adc
(bad)
jecxz
fmul
repnz
scas
(bad)
aas
adc
ror
mov
jg
scas
and
or
bound
aad
mov
movs
aaa
jp
gs
leave
jmp
leave
ins
jae
jbe
jae
(bad)
sbb
inc
jmp
cli
adc
pop
outs
jmp
mov
cmp
bound
sbb
mov
add
aas
or
retf
into
cmp
jo
mov
sbb
mov
push
jb
cmps
mov
jmp
mov
test
xchg
mov
push
iret
xor
gs
aam
pop
inc
mov
mov
daa
cmp
imul
adc
jmp
aam
cmp
es
sbb
outs
cmp
add
jns
add
mov
mov
fwait
lds
push
(bad)
mov
xchg
pop
in
push
inc
xchg
sbb
mov
test
cmc
sub
cmps
xchg
add
pop
pop
leave
imul
ins
rcl
jle
jno
(bad)
adc
sub
xor
stc
ins
imul
cli
mov
push
das
ins
stc
test
lea
pop
cli
inc
add
sar
push
lods
pushf
or
aas
mov
into
imul
arpl
stos
inc
je
sub
xor
add
sub
fcomp
movsx
in
and
test
in
jnp
or
push
jge
jge
repz
imul
mov
fld
pushf
dec
jmpw
sbb
mov
xor
call
mov
inc
(bad)
cmc
adc
jge
shr
mov
out
hlt
xor
shl
jne
mov
pop
sti
stos
jae
jmp
fstp
mov
out
sub
jae
jo
dec
movs
jecxz
repz
jecxz
pop
sub
push
jnp
inc
in
pop
mov
mov
adc
aas
fcomp
ja
dec
xor
adc
push
out
test
pusha
pop
dec
jge
sbb
adc
std
call
je
inc
cmp
scas
sub
adc
xchg
and
mov
enter
fwait
mov
jle
jmp
es
jmp
cmp
dec
mov
mov
push
or
daa
cmp
cmp
xchg
jnp
jo
enter
xor
bnd
inc
pusha
push
jne
(bad)
cmp
ins
push
out
(bad)
pop
mov
lods
test
fwait
or
adc
jg
repnz
xchg
call
pop
loop
push
pop
xchg
ror
and
inc
push
retf
outs
sbb
das
fs
xor
das
int3
dec
or
adc
inc
imul
cs
add
jmp
jge
push
jns
sub
adc
(bad)
pop
daa
and
push
xor
lods
imul
pop
mov
div
cmp
repnz
cdq
dec
js
jl
xor
lea
xlat
fld
push
inc
sbb
push
pop
jne
fistp
inc
ret
sub
sbb
call
sbb
push
aam
sub
call
push
push
or
fwait
fwait
pop
scas
inc
xchg
lahf
sbb
ss
xor
or
adc
mov
xchg
sub
(bad)
call
jae
retf
scas
ror
pusha
test
push
jnp
rol
in
pop
xor
ja
sub
xchg
mov
jno
add
adc
push
mov
and
pop
jg
sti
push
in
and
mov
push
imul
in
mov
pop
movs
push
push
loopne
mov
jl
pop
inc
push
loope
inc
add
mov
inc
jb
push
out
iret
sub
ror
retf
xor
jnp
mov
mov
cmp
jmp
sub
and
mov
mov
mov
mov
push
sub
div
sti
loope
or
adc
cmp
jns
rcr
push
push
mov
enter
sbb
jnp
imul
jae
mov
mov
cmp
cmp
fst
push
xchg
lock
sbb
add
fcom
inc
cmp
shr
mov
popa
addr16
inc
sub
fs
adc
sbb
mov
jmp
mov
pop
mov
jae
inc
mov
mov
sub
sbb
dec
and
stc
es
cmc
and
adc
into
fild
jmp
dec
pop
push
jg
jecxz
sub
cmps
pop
cmp
scas
ret
jns
out
ins
ins
imul
inc
movd
scas
dec
jns
cs
xor
into
push
or
pop
xchg
jo
dec
(bad)
sbb
retf
mov
xchg
inc
pop
jle
hlt
repz
idiv
(bad)
mov
test
je
nop
xor
ja
xchg
lahf
lods
push
ins
movs
or
cdq
adc
es
dec
mov
or
push
mov
mov
jmp
test
out
sbb
inc
test
mov
aas
mov
or
jb
repnz
in
xlat
fdiv
cmp
sbb
jecxz
pinsrw
sbb
clc
ret
cmp
pop
mov
mov
push
fcomp
in
sub
mov
sbb
movntq
out
inc
enter
iret
mov
mov
xor
mov
movs
sbb
push
(bad)
xor
adc
pop
jle
sbb
ins
pop
push
add
out
clc
lea
retf
inc
scas
mov
inc
aam
ret
push
shl
hlt
scas
and
jmp
je
retf
(bad)
test
sbb
push
stos
dec
(bad)
arpl
cmp
and
stos
xor
xor
mov
xor
jl
shr
xor
jno
es
dec
or
setae
xor
les
int
sub
ror
pop
jle
ret
jns
jno
fsub
je
fmul
pop
mov
fmulp
inc
push
jmp
mov
cli
pop
jno
dec
jne
pop
test
int
outs
and
je
(bad)
in
push
repnz
xor
jge
dec
mov
stos
mov
jae
inc
cmp
mov
dec
mov
arpl
xor
not
rcr
push
into
icebp
(bad)
shl
shr
repnz
inc
mov
add
pcmpgtb
movs
or
mov
les
enter
fwait
mov
xor
(bad)
loop
xchg
inc
pop
adc
imul
add
btc
xor
and
into
mov
or
imul
xor
repz
pushf
jl
call
stc
outs
popf
xchg
fstp
sbb
or
fbld
mov
fsub
cdq
loope
cmp
xor
les
lock
jae
ja
cwde
xor
and
inc
aad
rol
ins
mov
sub
push
pop
adc
loop
and
pop
fld
data16
push
out
push
or
sbb
pop
arpl
cmc
sti
mov
scas
push
dec
lock
or
xchg
push
inc
xchg
xchg
add
stos
pushf
mov
(bad)
lds
outs
mov
jmp
aam
vaddsubps
aas
xchg
adc
(bad)
cmp
and
add
(bad)
div
mov
push
(bad)
stos
scas
push
xchg
test
aaa
adc
test
jge
cs
popa
lds
fimul
ds
ins
jns
test
aas
nop
neg
jo
popa
les
xchg
pop
pop
push
push
popa
push
and
aas
enter
popf
xchg
pop
jle
adc
jge
and
into
mov
push
inc
xchg
inc
push
cmp
or
daa
(bad)
popf
jmp
push
ss
fld
leave
test
adc
cdq
jl
mov
push
scas
adc
add
xchg
lods
into
push
add
and
fcmovb
lods
movs
add
mov
cld
xchg
cmc
sub
mov
push
ror
ror
pusha
mov
mov
cmp
out
xchg
daa
ss
jne
in
fwait
mov
in
cmp
push
dec
and
dec
xchg
int
xor
int3
call
retf
das
mov
cmp
clc
mov
lock
retf
pop
int3
movs
xchg
in
stos
add
nop
(bad)
xchg
idiv
sbb
jl
mov
lea
mov
loop
cmp
push
cmp
mov
xlat
push
mov
repz
add
test
or
mov
mov
stos
mov
xor
xchg
inc
pusha
std
cmp
mov
cwde
adc
mov
fisubr
shl
push
nop
inc
(bad)
aam
jle
ins
lock
cmp
icebp
(bad)
ret
mov
daa
mov
or
(bad)
(bad)
or
or
cli
mov
adc
bswap
into
adc
cmp
inc
les
nop
(bad)
mov
xlat
loopne
test
in
test
test
sbb
pop
adc
rcr
cmc
retf
add
pop
sbb
or
jnp
shl
mov
(bad)
(bad)
shl
int3
test
outs
sbb
test
ss
ss
dec
push
imul
jb
mov
jno
int
pop
stc
jb
mov
pop
jnp
jmp
hlt
cmc
xor
sbb
cmp
fldcw
push
(bad)
pop
scas
aas
xlat
popa
mov
les
aas
aas
adc
sbb
not
push
push
sub
or
dec
popa
test
and
dec
rcr
cmps
pop
jge
sub
ins
ficom
mov
mov
out
xor
xchg
mov
sub
dec
mov
inc
ds
outs
repnz
jmp
sar
sub
outs
lods
push
jg
jnp
lods
xchg
aam
jg
xlat
sub
push
cmp
mov
pop
daa
dec
lods
js
pop
dec
stos
dec
(bad)
cmp
fcmove
es
pop
or
call
jmp
data16
cli
ficom
sub
sbb
enter
dec
jl
sub
adc
cmp
cmp
je
push
xchg
adc
jae
xchg
test
mov
repz
aad
mov
cmp
mov
aad
out
mov
push
mov
push
mov
paddsb
mov
and
mov
stc
cli
adc
mov
mov
das
ss
mov
cs
test
add
outs
dec
enter
cmp
movs
stos
in
and
add
(bad)
adc
sub
cmp
in
je
sub
jge
js
xchg
stc
ins
adc
lahf
mul
pop
js
add
jg
icebp
scas
mov
jmp
fisubr
sbb
call
lods
mov
test
dec
inc
call
(bad)
cmp
push
sahf
xor
xchg
jno
scas
adc
call
shl
mov
int
xor
add
sbb
inc
data16
adc
cmps
dec
pop
xor
ret
pop
and
gs
ss
int
push
push
dec
adc
inc
mov
add
movs
mov
mov
retf
sar
stc
mov
and
or
add
sub
(bad)
loop
xor
std
(bad)
das
loope
push
or
shl
jecxz
and
dec
fidiv
sbb
popa
jns
cwde
lds
sub
or
fwait
inc
out
inc
movs
je
out
out
fs
xor
(bad)
fcom
mov
sbb
mov
sbb
ficom
shl
fxch
inc
jge
push
xchg
dec
lods
push
popf
lock
fbstp
cmc
mov
mov
enter
jg
inc
pushf
mov
mov
inc
sub
pop
sbb
out
cmp
out
andps
stc
push
dec
(bad)
cld
not
mov
add
jle
stos
ins
mov
sbb
(bad)
mov
neg
rcl
mov
cmp
dec
inc
(bad)
cmp
fs
push
outs
jae
movs
add
dec
sbb
gs
ins
xor
jae
icebp
pop
nop
push
ficom
push
or
aaa
sub
inc
cmp
pop
fisttp
in
aaa
jne
cdq
aad
fisubr
or
cmp
or
jmp
adc
add
xchg
outs
adc
cmps
jl
rol
in
sub
clc
xchg
mov
mov
jbe
pushf
(bad)
aas
sbb
xchg
sub
jae
in
push
stos
ret
dec
ds
mul
lock
jns
das
popf
add
ror
xchg
cmp
test
aaa
or
or
or
or
add
sbb
movs
bnd
push
pop
(bad)
cld
mov
add
test
sbb
xlat
test
mov
fstp
inc
int3
jnp
or
pop
dec
pop
cs
dec
xlat
or
sub
fld
pop
jg
sar
loop
popf
xchg
stos
dec
mov
rcl
pop
mov
loop
dec
stos
pop
adc
adc
or
out
ss
into
sti
jge
and
imul
dec
pop
mov
or
pop
xor
pop
loopne
loope
std
icebp
stc
dec
xor
add
out
stos
pop
mov
sub
shr
jae
pop
push
cld
cli
aad
jae
cmp
fst
aaa
mov
jp
int
iret
cmp
js
fcom
mov
or
mov
cmp
xchg
cmp
xor
and
cdq
add
cdq
popf
or
les
sbb
daa
push
mov
jne
(bad)
mov
(bad)
push
and
js
sti
cwde
adc
sub
add
mov
mov
mov
fs
(bad)
xchg
xor
xchg
es
adc
xchg
lods
popa
stos
mov
push
pop
cmp
imul
das
data16
ret
push
and
pop
imul
icebp
jbe
and
fnstcw
mov
nop
ins
jmp
or
dec
cld
mov
movs
push
repnz
push
in
push
pop
je
lea
idiv
outs
mov
test
pusha
jge
jnp
pop
loopne
jo
inc
(bad)
adc
jge
dec
pop
out
in
ss
jbe
and
icebp
or
xchg
mov
in
(bad)
push
push
mov
pop
int
xor
popa
mov
jae
iret
stos
mov
shl
js
mov
nop
pop
sti
and
push
test
mov
and
rcl
jle
les
test
inc
lods
jne
test
push
in
fbstp
push
fnstsw
popa
mov
push
mov
sub
(bad)
jge
dec
and
(bad)
adc
adc
mov
add
stos
push
fisubr
mov
xchg
cmc
sub
scas
fwait
add
and
repnz
(bad)
sti
mov
mov
mov
ss
xchg
lea
fsub
xlat
jp
bound
xor
lods
rcl
inc
push
in
test
bound
pop
mov
in
xchg
cmp
xchg
cmps
out
les
dec
not
xchg
jne
xchg
popf
jnp
(bad)
lahf
add
mov
inc
popw
jb
or
jne
jbe
out
adc
inc
and
sub
sbb
out
gs
icebp
inc
or
xchg
(bad)
cmc
aam
ins
xchg
sub
lods
xchg
in
fld
arpl
xchg
mov
(bad)
sub
sbb
fst
xlat
xor
mov
push
retf
and
or
bound
push
xchg
ret
nop
cs
out
jno
aaa
add
add
cs
fst
fld
ins
int3
aad
(bad)
fsub
jns
mov
hlt
ds
xor
fsubr
popa
push
cmp
jge
js
sbb
pop
call
inc
shl
movs
loopne
xchg
test
ja
mov
enter
jo
out
push
gs
js
cmps
cs
dec
or
out
cli
jno
test
cwde
ror
xlat
aas
leave
jns
mov
xchg
test
in
(bad)
xlat
(bad)
xlat
cwde
sub
bound
push
xchg
inc
in
xchg
lock
in
mov
jp
(bad)
out
jbe
retf
test
push
xchg
mov
adc
sahf
lock
xor
scas
adc
push
xor
mov
arpl
iret
mov
call
xor
cmp
jno
ja
mov
xor
sar
sub
or
sti
sub
ins
call
div
and
cdq
cmc
add
icebp
xor
jmp
cmp
xchg
mov
movs
or
mov
inc
jns
mov
push
xor
mov
inc
psubw
popf
pop
fidiv
shl
outs
dec
xchg
(bad)
int
out
popa
sub
pop
or
ja
xchg
cmp
hlt
add
mov
sbb
rcl
sub
xchg
pop
not
gs
sbb
cmp
retf
xchg
xor
jbe
xor
aam
(bad)
add
inc
or
sub
mov
and
jae
jno
into
ret
pop
or
dec
jno
pop
ja
pop
in
fcmovb
mov
mov
sbb
mov
enter
sbb
je
and
jo
adc
es
lock
ins
push
outs
sti
or
inc
jns
ret
xchg
xchg
xchg
xchg
push
mov
jae
mov
inc
jl
sub
mov
jge
pop
jne
fbld
pop
xor
std
and
fld
and
ret
cmp
popa
cmps
sub
js
test
sbb
jmp
aam
fwait
xchg
push
inc
int3
mov
mul
nop
ret
add
lods
xchg
fwait
stos
imul
arpl
mov
or
icebp
lods
sub
xor
add
scas
in
cdq
add
movs
mov
ins
mov
(bad)
cmp
call
cmp
lods
cld
push
popf
test
add
fs
stc
jb
lahf
call
xchg
jge
jmp
scas
xor
lods
lea
push
stos
lock
adc
(bad)
std
fisttp
loopne
dec
sub
out
test
fidivr
cmp
xor
xchg
dec
pop
into
xchg
and
sti
test
pop
dec
stos
jno
imul
cmps
les
addr16
and
fwait
xor
iret
jmp
mov
xor
mov
and
fisubr
or
add
rol
adc
xor
stos
das
add
push
aas
mov
jmp
pop
lods
sar
xchg
jb
mov
fst
pop
mov
clc
add
es
jns
adc
mov
add
in
shl
js
inc
sub
mov
cmp
xchg
sub
movs
cmp
adc
xlat
push
xchg
xor
jecxz
movs
or
stos
(bad)
out
fcom
ja
lods
and
cmp
cmp
js
and
pop
or
pop
push
imul
mul
jl
ins
jg
add
mov
sti
daa
inc
int3
mov
mov
mov
mov
pop
std
daa
push
mov
mov
ins
fcmove
jbe
xchg
lods
test
mov
dec
pop
add
and
pop
retf
xor
cld
nop
jb
inc
mul
or
inc
dec
sub
mov
neg
jmp
sbb
dec
sti
out
test
test
std
ret
out
cwde
inc
xor
ds
(bad)
outs
pop
addr16
fimul
and
test
jae
add
fld
sub
sub
mov
xor
add
adc
sti
pop
push
into
jnp
mov
jg
test
mov
ret
mov
out
idiv
into
dec
fnstcw
das
lahf
sahf
add
pop
sub
xchg
adc
ja
add
or
into
mov
cmp
dec
pop
ds
adc
push
mov
mov
mov
cdq
in
push
enter
ins
adc
jbe
cmps
rol
stos
cmp
ss
test
mov
mov
scas
stos
jle
aad
cmp
mov
or
cmp
adc
fbld
loope
mov
sahf
rcl
pop
in
mov
or
add
(bad)
addr16
dec
push
mov
clc
sub
lock
sbb
aas
push
push
setbe
push
shr
es
test
push
xchg
jge
xchg
jbe
mov
ret
ja
lds
mov
div
popf
adc
das
mov
clc
outs
data16
sub
cmp
outs
add
sbb
add
ins
retf
jnp
jg
or
sbb
jle
pop
mov
push
or
xchg
mov
jo
fcomp
adc
nop
jmp
mov
sar
je
aad
adc
sbb
sub
fidiv
mov
inc
scas
or
inc
and
call
jmp
mov
inc
cmp
mov
icebp
jl
iret
fs
adc
sbb
inc
dec
inc
mov
int
add
push
cdq
fs
aas
sbb
rcl
mov
inc
cmps
or
sub
sub
adc
dec
in
adc
lds
dec
sub
cmp
xchg
shr
adc
xchg
fld
and
cmp
xchg
das
dec
jmp
or
xor
movs
jmp
xor
mov
cmp
push
mov
xor
push
mov
push
hlt
fisttp
or
jge
call
mov
mov
loop
cwde
mov
retf
repz
push
sbb
popf
push
mov
sti
js
dec
mov
jo
pop
jmp
inc
sub
xchg
mov
hlt
sahf
and
add
mov
in
push
jecxz
int
pop
inc
pop
(bad)
xor
psrld
ss
dec
adc
inc
add
je
call
lods
lock
cmp
pusha
ins
sub
cwde
push
bound
lods
sub
mov
and
repnz
enter
adc
xchg
push
push
cmps
jnp
or
adc
dec
cmps
(bad)
icebp
dec
test
loopne
mov
cmp
retf
dec
out
ds
fistp
jbe
push
daa
imul
jle
jmp
sti
and
aas
ror
cmp
xchg
cmp
std
cdq
sbb
cli
sar
pop
xor
add
xor
add
mov
ds
jp
stc
gs
fstp
stos
and
dec
push
mov
cmp
push
idiv
(bad)
pop
sbb
iret
test
jle
es
cmc
(bad)
push
sbb
sub
clc
rcr
call
dec
sub
mov
sahf
or
ret
pop
fs
hlt
xchg
and
jle
(bad)
sbb
mov
jmp
or
mov
test
int3
adc
xchg
leave
inc
and
loope
xchg
dec
mov
push
(bad)
xchg
adc
push
inc
out
cmp
cmp
jb
cmovp
cmp
aam
or
popa
pop
jle
movs
xor
out
push
stc
movs
mov
cdq
jo
push
xchg
sub
push
clc
shl
es
xchg
stc
xchg
jg
cld
(bad)
rol
int3
scas
pop
test
ror
bound
push
sbb
sub
push
shl
dec
and
iret
sbb
cld
fisttp
in
repz
and
mov
or
test
inc
and
pusha
dec
sbb
xchg
aas
cmp
or
jecxz
ror
xchg
hlt
ret
bswap
mov
inc
or
mov
or
push
dec
adc
popf
cmc
jmp
das
push
jne
mov
mov
cdq
aas
lds
inc
test
or
xor
mov
inc
xchg
(bad)
pop
movs
enter
jp
fmul
jecxz
gs
lds
xchg
cmp
loopne
xchg
ret
out
imul
pop
or
dec
lods
push
loopne
lods
pusha
neg
push
enter
jns
sbb
cmp
(bad)
aad
div
in
lock
jl
cmp
and
pusha
or
jmp
jae
mov
jle
pop
jle
xlat
mov
fldenv
xchg
sbb
dec
out
and
add
daa
mov
mov
and
leave
mov
jl
pop
dec
push
imul
leave
push
sbb
xchg
cwde
and
neg
sub
sub
es
fstp
(bad)
adc
test
pop
push
pop
outs
movs
repz
push
cmp
int
mov
pop
inc
xor
int3
test
xor
xchg
push
jae
push
loope
call
lea
or
sbb
test
out
fadd
inc
add
and
daa
sub
addr16
cmp
mov
mov
int3
mov
mov
cmp
sbb
ret
push
jmp
movs
movs
test
inc
in
fimul
add
(bad)
add
int3
mov
cmp
or
adc
jl
push
xor
xchg
cs
fs
frndint
(bad)
mov
cld
mov
adc
retf
push
adc
cmp
fld
cmp
and
jne
adc
aad
and
in
push
push
test
icebp
cmps
add
rol
fcomp
(bad)
rcr
loope
bound
and
adc
out
cmp
sub
ins
add
icebp
sahf
and
adc
das
mul
mov
sub
cmp
pop
mov
or
je
and
and
iret
imul
mov
add
lahf
stos
push
jmp
movs
into
test
ret
mov
aaa
data16
adc
push
in
das
inc
mov
dec
stos
loopne
sbb
enter
das
call
add
test
das
out
mov
fild
mov
(bad)
lock
jl
enter
jne
jmp
add
pop
fild
aad
add
jge
cld
retf
mov
sbb
fwait
push
push
sub
fmul
scas
adc
cmps
jnp
adc
fwait
cmps
lock
ds
inc
cmc
shl
cmps
js
jp
jne
mov
aad
enter
push
cmp
das
aaa
mov
scas
xchg
cmp
pop
test
fnstcw
add
add
movs
lods
sbb
lahf
in
lock
sub
xchg
mov
daa
cdq
adc
jae
jnp
inc
pop
loope
stos
add
adc
aad
pop
rcr
out
addr16
mov
jae
mov
mov
(bad)
enter
inc
bnd
out
icebp
lods
int
sub
out
popf
je
fst
push
int
mov
sbb
stos
enter
loop
xchg
popa
mul
and
push
adc
mov
jp
sbb
dec
rcr
or
aaa
out
fs
(bad)
lods
popf
mov
sbb
mul
retf
movs
ins
fisttp
or
lea
xchg
movs
scas
sub
ret
sub
adc
push
bound
cmp
push
xchg
dec
sub
fsub
xor
mov
dec
jno
adc
dec
icebp
or
lds
xchg
shr
shr
sub
sbb
sti
sub
push
and
mov
and
dec
pop
lods
es
inc
aam
pushf
mov
into
fisubr
out
xchg
imul
lahf
mov
mov
mov
jb
loop
push
push
out
lods
and
and
repnz
lods
push
push
test
mov
xchg
cmp
stos
push
cmp
ds
mov
cmp
jecxz
fbstp
mov
push
mov
mov
pop
loope
pop
xor
in
sub
xor
dec
mov
pop
jmp
xchg
out
push
pop
sbb
retf
jbe
xchg
call
lods
add
jmp
les
out
outs
pop
sbb
(bad)
shl
mov
and
stos
sbb
inc
mov
lea
outs
ja
in
cmps
push
mov
cmp
xchg
adc
retf
icebp
pop
loop
out
int3
jmp
cmc
mov
mov
in
jno
xchg
imul
jle
sub
adc
jbe
imul
pop
mov
dec
das
cli
fcomp
sbb
push
mov
lahf
sub
mov
mov
cmp
xchg
xchg
sti
out
aad
enter
test
mov
aad
int
pop
mov
or
in
xor
cmp
sar
call
adc
xchg
mov
inc
mov
popa
out
push
and
enter
push
sbb
ds
sar
xor
(bad)
retf
lds
and
push
leave
xor
mov
(bad)
adc
add
outs
pop
or
add
dec
add
cmps
inc
and
inc
loopne
ret
dec
fwait
dec
or
fnstsw
jp
push
lock
test
mov
xchg
jae
mov
sbb
pushf
mov
shr
mov
or
xor
mov
adc
pop
jo
cmc
sub
shl
mov
pop
mov
aaa
call
cmp
push
add
sbb
jns
sbb
sub
mov
mov
ds
fwait
ror
push
das
rcl
int3
sub
jnp
adc
cdq
cmps
add
mov
shl
add
std
xchg
hlt
cmp
retf
lahf
sub
and
xchg
jae
sbb
(bad)
ja
repnz
aas
call
mov
outs
jnp
mov
and
in
add
retf
test
mov
jecxz
cdq
ret
aad
push
mov
push
bound
pop
jb
inc
scas
es
sbb
cmps
pop
daa
(bad)
lds
retf
push
push
pop
inc
stos
sub
out
push
xor
lahf
push
sahf
cs
or
adc
clc
mov
(bad)
mov
test
cmp
dec
inc
jmp
xchg
adc
or
and
sbb
jge
scas
pop
imul
mov
stos
cmc
syscall
mov
pop
div
adc
jno
and
inc
cmp
or
jge
inc
push
lods
std
shl
jle
lock
pop
cmp
dec
repnz
(bad)
and
sbb
or
gs
lods
inc
arpl
arpl
xchg
stc
movs
jb
mov
mov
lods
in
sbb
mov
push
inc
push
mov
pop
sub
dec
retf
mov
jb
sub
adc
push
int3
or
inc
cmp
inc
test
mov
sub
mov
mov
mov
fild
shr
sbb
and
retf
jp
cli
dec
aad
mov
pop
mov
xchg
cdq
ror
mov
pusha
(bad)
ret
jbe
and
leave
inc
cmp
cli
or
dec
repz
push
jae
mov
mov
push
aam
sub
(bad)
es
dec
test
jb
js
mov
dec
(bad)
sub
and
rcl
lods
sub
adc
or
jb
pop
aam
jmp
call
xchg
jns
cmp
or
cmps
pop
rcl
mov
cmp
sbb
call
ficomp
xchg
daa
std
dec
into
into
mov
repnz
lods
adc
mov
in
jmp
push
scas
push
pop
movs
mov
data16
sahf
push
or
fwait
jbe
popf
mov
jl
and
shl
fidivr
sar
mov
cmp
xlat
bound
test
stos
pop
into
sbb
les
cwde
clc
pop
repnz
loop
inc
pop
sub
test
(bad)
push
and
adc
in
xlat
cmp
pop
repnz
pushf
test
mov
mov
xor
push
mov
sub
ins
jno
scas
sub
and
loopne
jle
xchg
test
dec
fwait
jecxz
jnp
test
inc
test
nop
mov
punpckhbw
(bad)
sar
mov
sub
xor
fadd
sub
sbb
call
js
test
test
jp
xor
mov
arpl
icebp
mov
cmp
loope
adc
push
lock
ja
xor
leave
push
loopne
push
lods
int3
in
int
sbb
jbe
bound
test
cmps
das
cmp
pop
sbb
shl
rol
shl
add
or
add
xchg
shl
xchg
dec
cmp
mov
xchg
cmp
leave
js
or
addr16
fsubr
ficom
leave
out
in
jno
imul
mov
(bad)
fcmovnu
js
into
test
jno
cwde
in
add
lods
pop
mov
add
inc
and
mov
fiadd
xlat
pop
out
mov
mov
aas
xchg
dec
inc
add
xchg
cmp
popa
or
lock
lahf
xchg
push
inc
push
sbb
mov
repz
xchg
push
in
outs
inc
mov
sbb
inc
ja
loop
xchg
inc
jae
test
inc
shl
daa
adc
movs
test
mov
inc
jb
bound
bound
or
ins
pop
dec
ins
add
mov
inc
push
(bad)
or
or
sbb
sbb
mov
dec
std
out
sahf
sub
xchg
push
shl
pop
popf
ins
out
adc
les
int
sub
pop
xchg
lods
sbb
cmps
lea
repnz
mov
inc
out
mov
test
sub
(bad)
adc
leave
jo
pop
mov
js
push
out
mov
shr
movs
gs
fnsave
ins
fcmovnu
sbb
sub
add
aas
mov
add
shl
inc
in
mov
dec
push
cmp
sub
mov
lods
repnz
jmp
mov
xor
stos
std
adc
or
aad
xor
out
cmps
jo
inc
stos
and
gs
sub
imul
jnp
and
jp
std
and
in
aam
push
or
jnp
push
sub
xchg
fnstenv
sub
out
into
mov
(bad)
loopne
jmp
add
and
outs
mov
pushf
mov
ins
dec
pushf
call
call
lea
ins
mov
pop
cdq
pop
arpl
movsx
or
dec
rcl
dec
aad
mov
pusha
int
sbb
ret
add
pop
in
xchg
(bad)
das
push
sar
sub
imul
loope
sbb
(bad)
mov
mov
loope
sub
dec
cmc
stc
mov
mov
adc
jnp
cwde
pop
lods
fs
or
or
js
cmps
xchg
cmp
mov
xchg
and
lods
mov
clc
mov
jbe
(bad)
sti
pop
(bad)
cmps
icebp
jecxz
mov
mov
test
sbb
jb
retf
mov
mov
sbb
pop
mov
shl
mov
xchg
push
xor
and
inc
mov
retf
sbb
push
in
push
jp
or
cmp
push
and
and
push
into
ins
pusha
jne
jbe
movs
sbb
rol
mov
sbb
or
mov
or
cmp
dec
inc
mov
cmp
or
jno
pop
(bad)
cmc
sub
daa
sub
add
leave
pushf
je
test
adc
in
movs
mov
pop
je
adc
sbb
xrelease
sbb
add
cmp
add
scas
or
xchg
pop
or
sti
stos
rcl
add
stos
cmps
rcl
pop
das
call
push
ins
and
and
int
push
mov
mov
popf
in
adc
nop
call
xchg
ja
fwait
lea
loop
mov
pusha
or
pop
jecxz
imul
(bad)
xchg
(bad)
clc
mov
scas
pop
xlat
test
dec
lds
jecxz
ffree
inc
(bad)
pop
stc
push
test
scas
pop
call
adc
out
in
push
sub
adc
loope
retf
in
aas
(bad)
test
loope
sbb
jnp
jecxz
add
pop
repnz
xchg
push
shl
mov
mov
aad
pop
ds
pop
fs
(bad)
rcr
in
cmp
ins
push
das
jns
(bad)
(bad)
push
mov
mov
not
dec
rcl
xor
push
xchg
adc
imul
mov
aad
jmp
cmc
rcl
aam
shr
popf
jae
in
imul
stos
fidiv
ja
daa
xor
bound
mov
xchg
dec
rcr
into
std
cmp
fidivr
xchg
dec
cmps
sti
test
pop
pop
clc
sub
retf
(bad)
ss
sahf
hlt
inc
pop
lods
shr
fwait
cmp
scas
into
mul
jo
sti
addr16
loop
outs
enter
inc
push
push
cmp
mov
loopne
mov
jne
iret
inc
dec
sbb
ja
fs
not
inc
add
out
mov
mov
dec
fldcw
sbb
jns
into
mov
ja
push
pop
dec
outs
outs
fs
mov
add
out
mov
mov
neg
in
jbe
cmp
dec
fsubr
and
imul
mov
les
shr
ja
pusha
mov
add
xor
dec
add
mov
xor
jp
iret
mov
push
cmp
fld
in
fsub
nop
inc
push
inc
sbb
loope
dec
cmps
ja
out
sbb
jmp
pop
mov
mov
pop
xlat
sti
mov
in
sbb
pop
pop
test
idiv
imul
pop
mov
inc
out
jl
add
xor
jns
std
push
mov
in
cdq
sbb
xchg
aas
mov
popf
(bad)
pop
cli
xchg
or
jl
push
jns
fwait
repnz
arpl
ret
out
lahf
retf
inc
ja
ss
gs
mov
bound
or
jnp
adc
pop
cdq
stc
std
shl
or
adc
push
out
xchg
inc
sbb
fiadd
fnstcw
leave
push
lahf
and
std
daa
repz
xchg
mov
sbb
iret
sub
out
mov
dec
outs
mov
sub
jmp
loopne
jb
mov
inc
test
mov
push
and
xchg
cmps
and
push
cmp
loope
imul
mov
mov
mov
mov
stos
pop
add
sbb
add
add
test
aad
jne
cmp
jo
leave
push
aad
fcomp
loop
std
scas
inc
cmp
pop
mov
ins
pop
inc
ins
xor
sub
adc
das
jnp
adc
imul
sbb
fisttp
jmp
sbb
leave
movs
in
or
sbb
cmps
xor
inc
loopne
inc
mov
call
pop
xor
sar
fnstsw
or
ss
jmp
mov
cs
into
stc
xchg
cdq
je
arpl
sbb
pop
adc
cli
cmp
sar
mov
pop
addr16
push
sub
xor
fsub
mov
lea
inc
mov
ss
cwde
jno
mov
test
lock
(bad)
shl
xor
mov
xchg
cmp
adc
and
icebp
sar
(bad)
jmp
jg
std
stos
sbb
and
push
mov
xor
sub
xchg
dec
repnz
xor
inc
xchg
inc
inc
cmp
sbb
mov
add
in
jnp
test
push
retf
push
sbb
das
movs
mov
repnz
aam
cld
ss
xchg
mov
out
out
popa
mov
xchg
shr
nop
pushf
xor
mov
mov
loop
dec
sti
add
inc
ror
aad
ret
cmp
lahf
inc
stc
and
jecxz
test
cmp
cmp
sub
and
jle
loope
add
mov
test
add
out
outs
gs
push
shl
sub
lods
xchg
cmp
fild
sub
les
mov
inc
xchg
data16
mov
loop
and
es
mov
(bad)
sbb
pop
sub
mov
jae
mov
dec
sub
mov
push
inc
jne
test
adc
lahf
std
jmp
xor
daa
sub
arpl
int3
mov
push
inc
push
jmp
add
cld
add
int
sub
push
sar
mov
data16
call
cmc
mov
cmp
adc
aam
fchs
sbb
cdq
mov
stos
fsubr
add
in
pop
push
sbb
arpl
(bad)
ds
adc
clc
adc
sub
jmp
dec
sbb
inc
repnz
jbe
cli
aad
das
sbb
mov
xlat
cmp
pusha
xor
rol
xor
(bad)
push
jae
sar
xchg
mov
xor
cmp
adc
pusha
fdiv
push
jp
call
les
ds
jb
js
in
cmps
dec
test
xor
or
out
adc
add
sar
push
call
adc
inc
mov
das
cmps
push
(bad)
fcomp
lock
mov
push
addr16
sub
jb
xchg
cld
pop
std
cdq
add
adc
idiv
mov
test
pop
imul
inc
push
xchg
push
mov
jle
pusha
pop
inc
fwait
enter
cdq
arpl
ins
xchg
movs
sbb
or
cld
add
mov
xchg
(bad)
add
cmps
lea
xchg
sub
scas
loope
sub
fsub
pop
paddw
movs
in
(bad)
add
jne
in
les
das
add
and
scas
jb
sub
inc
rcl
adc
dec
ja
cld
call
addr16
das
int
jb
xchg
or
mov
das
inc
mov
pop
inc
dec
retf
je
mov
cli
jg
xchg
sub
aam
test
push
and
div
xchg
jp
shr
(bad)
xor
xor
ss
cmps
push
jecxz
and
in
pop
jg
jae
or
call
push
lahf
out
mov
ins
test
ficomp
jb
outs
jmp
out
pop
fiadd
adc
sub
mov
in
inc
add
fcomp
sbb
dec
mov
add
or
aaa
jmp
lea
push
cli
or
dec
movs
pop
xor
inc
imul
adc
lods
call
movs
sbb
xor
sbb
jle
fcomi
daa
lock
inc
sub
mov
add
int
xchg
ja
dec
call
mov
or
imul
mov
mov
outs
jp
sub
cmps
inc
div
outs
or
xchg
pushf
or
iret
mov
jle
inc
dec
nop
and
aas
jp
call
push
cwde
pusha
jns
dec
inc
dec
pop
hlt
or
test
or
jmp
dec
xchg
lahf
xchg
or
clc
mov
mov
lock
mov
bound
imul
pop
hlt
push
aaa
sbb
mov
inc
inc
xchg
sbb
mov
cdq
fst
mov
repz
adc
sahf
hlt
out
das
inc
pop
out
and
push
lods
add
mov
lds
cmp
cmp
(bad)
fsubrp
mov
loope
clc
and
add
out
dec
clc
cmp
retf
adc
rcr
jbe
jg
inc
pop
mov
mov
pop
jns
or
fsub
and
jmp
(bad)
mov
arpl
retf
mov
cmp
ret
jge
jmp
icebp
sbb
pusha
outs
fld
and
adc
push
xchg
push
push
inc
jp
out
test
call
jp
add
popa
out
sbb
jno
enter
xchg
cmp
dec
and
dec
mov
jmp
imul
jmp
push
sub
push
xchg
push
and
rcr
mov
sub
nop
stc
mov
sub
mov
pop
xchg
repz
push
jmp
xor
sub
push
int3
sub
clc
loope
(bad)
in
mov
and
dec
adc
fwait
loopne
cmp
cmp
repz
fcomip
ds
shr
(bad)
repnz
ins
sbb
mov
out
in
xchg
push
pop
pop
fisttp
dec
lahf
(bad)
repz
cmps
movs
rcr
dec
xor
xchg
icebp
pop
mov
and
icebp
or
or
xor
xlat
jp
jae
or
cmp
arpl
mov
or
sbb
pop
add
jno
call
out
mov
jb
jge
and
cmp
fcmovnb
mov
and
pop
mov
push
int3
mov
xchg
test
pop
add
test
ins
pop
mov
add
mov
stc
lahf
inc
inc
jo
fs
retf
out
sub
sahf
push
mov
arpl
cmc
mov
inc
mov
mov
cmc
dec
dec
jg
pop
mov
push
cmp
enter
mov
and
lds
ror
sbb
pop
pushf
cmc
cmc
or
cmps
loop
xor
cs
add
inc
dec
sub
lods
sub
in
jo
aam
pop
mov
add
(bad)
popa
xor
push
jnp
xchg
test
and
mov
push
pop
and
into
push
push
sahf
arpl
popa
aaa
test
dec
call
xchg
xor
fbld
lock
call
mov
mov
test
fimul
pop
daa
test
mov
jo
sub
jo
jp
sub
xor
cwde
shr
jmp
idiv
cmc
pop
xor
or
sbb
iret
call
fiadd
imul
out
repnz
lds
or
push
mov
fdivr
fwait
sub
mov
fidiv
inc
mov
fisttp
sar
stc
(bad)
in
je
outs
test
jge
sub
ret
xor
test
inc
cmp
daa
mov
mov
xchg
and
fisub
pop
call
xor
sahf
sub
mov
shr
mov
(bad)
jge
xor
in
mov
iret
loop
mov
pop
pop
(bad)
cwde
pop
(bad)
mov
sbb
imul
rcr
stos
mov
std
lds
or
(bad)
stc
xlat
xchg
test
jnp
ins
rcl
xchg
scas
pop
pop
xor
retf
mov
(bad)
push
fdivr
mov
or
push
jae
cld
bnd
jne
stos
cli
repz
idiv
stos
add
sub
ins
gs
mov
shr
leave
aad
stos
and
daa
inc
sbb
jg
inc
adc
int
push
jmp
cmovo
fs
xor
je
mov
mov
sub
mov
jmp
pusha
imul
xchg
jo
adc
mov
in
xchg
retf
mov
jg
mov
mov
adc
dec
pop
out
ds
xchg
push
fwait
adc
or
out
aas
adc
xchg
jecxz
adc
aam
sbb
test
or
dec
lods
pushf
push
push
or
out
jmp
in
sub
pop
call
mov
jl
loope
lods
loope
pop
or
scas
mov
loopne
push
add
cs
or
mov
std
pop
and
lds
gs
pop
sub
push
mov
sbb
nop
out
xor
into
mov
sbb
xchg
mov
push
push
push
xchg
fucomi
xor
out
sti
loopne
mul
add
sbb
repnz
adc
jmp
call
xchg
data16
add
jg
lock
xchg
adc
push
in
repz
int3
popa
fsub
dec
cmps
inc
or
cmp
in
jnp
test
mov
hlt
or
in
jmp
xchg
je
in
fld
cmp
call
sbb
popf
dec
sahf
lods
lock
cmp
nop
pop
xchg
cmc
mov
clc
push
into
and
mov
(bad)
xor
sti
pop
pop
fadd
nop
stos
arpl
hlt
leave
sbb
sbb
jmp
ret
xchg
adc
mov
push
fst
retf
inc
and
mov
adc
add
or
outs
pop
out
dec
inc
mov
jecxz
push
aas
or
scas
aaa
aam
jmp
inc
add
int
push
stc
pop
cmp
sub
jmp
fisttp
pop
cwde
imul
iret
jmp
ret
mov
(bad)
mov
aas
scas
arpl
xchg
sbb
fneni(8087
aaa
call
aad
mov
push
dec
aaa
int
cmps
out
out
test
add
add
dec
mov
add
scas
push
shr
test
stc
retf
je
push
mov
push
and
rol
push
rcr
fstp
sub
imul
sti
call
movs
jns
fnstcw
outs
xchg
xchg
lock
jb
nop
icebp
push
pushf
into
inc
out
es
(bad)
and
or
push
jb
pop
xchg
iret
cmp
mov
jmp
icebp
push
ins
rdtsc
pop
adc
jae
aaa
hlt
inc
adc
xor
mov
ins
cld
sub
jle
mov
add
mov
sar
and
adc
mov
stos
ins
imul
repnz
jmp
jno
into
xchg
sub
gs
jl
fiadd
imul
dec
icebp
shl
jle
stos
pop
jo
sbb
jle
iret
pop
inc
bnd
(bad)
fist
xor
cs
mul
pop
xchg
cmp
mov
dec
cs
sub
es
aas
and
imul
in
out
pop
retf
add
popa
fisttp
sbb
dec
jmp
scas
lock
ds
call
jmp
jns
lahf
inc
push
and
es
popa
scas
mov
cs
loopne
hlt
cmps
inc
sbb
shr
inc
out
mov
call
test
into
jecxz
jg
add
ret
mov
or
fst
hlt
xchg
adc
sbb
fistp
cmps
and
lods
idiv
mov
sub
je
jae
ins
xchg
out
sub
cli
jnp
mov
adc
aaa
or
fisub
ja
in
loopne
(bad)
fld
xchg
ja
pop
mov
les
jns
(bad)
add
sub
scas
xchg
mov
das
shr
movs
xchg
stc
int
push
bound
push
push
xchg
loopne
je
push
loopne
pop
inc
arpl
jo
push
mov
mov
xor
jge
fs
sbb
cs
xchg
(bad)
pop
cmp
jle
push
push
cs
les
adc
cmp
push
xchg
inc
hlt
cdq
dec
dec
add
neg
xor
fidivr
xchg
clc
push
cwde
pop
mov
ins
or
mov
adc
sub
dec
lahf
mov
jnp
jns
jp
dec
fmul
sar
sub
jae
inc
sub
stc
pushf
mov
mov
enter
pop
sahf
jo
scas
aad
sub
ror
in
xor
push
mov
pushf
nop
inc
or
dec
add
pop
clc
shl
dec
push
ficom
retf
xor
aam
adc
mov
mov
adc
bound
inc
ror
int
and
pop
scas
jle
pop
push
fs
ret
push
ret
mov
xchg
out
icebp
lea
mov
daa
jo
add
push
xchg
aaa
sub
mov
sub
cwde
mov
xor
lea
into
test
into
shr
test
push
push
dec
imul
(bad)
retf
out
das
(bad)
std
mov
fsub
nop
(bad)
jnp
xchg
nop
sbb
pop
out
pushf
pop
ret
mov
inc
cmp
lods
inc
xor
or
test
push
imul
jno
push
inc
pop
jo
popa
sbb
or
aaa
clc
mov
div
jnp
(bad)
sbb
repz
cs
out
xor
adc
cmp
xchg
rol
jbe
ds
sub
clc
sbb
ins
ds
add
jge
xlat
add
dec
cld
xlat
and
pop
ret
fcom
test
inc
fwait
in
cli
hlt
aam
mov
stc
mov
add
add
and
adc
fldenv
jbe
(bad)
push
mov
aaa
sar
out
adc
pusha
push
test
mov
inc
or
inc
fstp
add
jmp
or
mov
sub
imul
pop
call
dec
inc
jecxz
cmps
mov
icebp
pusha
inc
xlat
push
or
js
in
pop
stc
inc
test
adc
add
cmp
nop
push
adc
xchg
fist
lahf
in
mov
sti
jmp
clc
ret
jo
and
hlt
ret
inc
and
loopne
aad
inc
stos
aam
es
mov
pop
stos
jo
xchg
add
ss
jo
retf
add
cdq
(bad)
or
adc
xchg
jbe
mov
xchg
pop
dec
enter
pop
cmps
sbb
push
fiadd
bound
and
pop
mov
and
add
pusha
pop
inc
mov
int3
xchg
inc
sub
imul
lea
mov
mov
dec
jmp
inc
pop
fs
or
jmp
stos
loop
icebp
hlt
push
ds
loop
pop
into
push
adc
add
cmc
fcmovu
jne
push
clc
jns
mov
sbb
call
cmps
or
mov
sti
xchg
or
and
outs
mov
outs
jg
test
adc
mov
bound
sub
pop
into
jbe
and
jle
xor
arpl
outs
cmps
xlat
addr16
and
jmp
retf
movs
adc
inc
retf
cmp
js
out
adc
xor
dec
or
cwde
dec
push
rcr
xchg
or
int3
je
aad
adc
repnz
in
sbb
pushf
cmp
imul
mov
sub
(bad)
xchg
mov
imul
(bad)
jge
ret
cmp
je
repnz
cwde
adc
xor
push
xchg
push
shr
inc
clc
mov
mov
mov
loope
pushf
xchg
xchg
mov
cmp
js
lods
popf
or
sti
enter
into
fcomip
imul
das
cmps
add
mov
shr
cmp
mov
xchg
and
es
pop
stos
lods
scas
movs
sbb
pop
fistp
jge
xor
aas
cwde
iret
jb
mov
js
and
jb
pushf
push
push
mov
inc
mov
dec
pushf
push
lods
xchg
pop
push
xor
mov
cmp
cmc
push
imul
lock
xchg
les
(bad)
push
and
jmp
dec
icebp
dec
nop
and
inc
retf
sub
pop
jno
test
repz
cwde
dec
out
mov
adc
in
mov
int3
lods
add
pop
mov
fimul
mov
xor
std
xlat
dec
sub
pop
stc
pusha
call
and
aam
fwait
sbb
jle
das
mov
mov
mov
hlt
inc
pop
push
adc
(bad)
mul
mov
mov
je
pop
adc
outs
cmp
fwait
dec
mov
pop
add
mov
ficomp
lock
addr16
dec
data16
pop
or
jmp
ss
push
inc
inc
cdq
and
rol
adc
es
addr16
sar
pop
mov
shl
sti
mov
and
mov
inc
push
pop
gs
xchg
push
sbb
push
fistp
and
test
addr16
test
cli
popf
inc
fs
int3
lahf
mov
push
inc
sub
in
aaa
mov
xchg
fiadd
adc
stos
shl
pusha
test
lods
fsubr
pop
gs
push
jp
inc
call
mov
add
push
out
ins
dec
xchg
mov
mov
jp
add
sbb
cmp
inc
push
jo
idiv
push
(bad)
jb
pushf
enter
jns
xchg
inc
xchg
push
cmp
fcmovne
mov
inc
jno
ds
adc
test
aad
jae
mov
lea
xchg
add
jle
xchg
test
inc
cmp
cmp
jnp
mov
cmp
fiadd
pop
(bad)
ja
add
xchg
mov
cld
mov
cs
pop
xor
mov
repz
int
sbb
popa
sbb
js
dec
mov
in
xchg
push
mov
xor
push
sbb
(bad)
sub
cli
xchg
dec
cmps
cmp
call
fild
add
sar
retf
xor
jge
out
sbb
xchg
lds
ror
dec
scas
jecxz
jp
iret
sbb
xchg
xlat
fbstp
pop
xchg
mov
shl
push
out
pop
out
push
mov
lock
inc
mov
jbe
or
and
out
(bad)
leave
cmp
pop
and
fiadd
cmp
retf
fild
sbb
rol
pushf
xchg
xchg
inc
mov
and
cwde
fwait
test
cld
or
dec
add
neg
sub
shl
dec
jmp
mov
dec
and
test
adc
mov
xlat
add
aad
jnp
std
shl
pop
jmp
pusha
xor
loopne
inc
sbb
lods
in
mov
scas
sbb
xor
sub
or
or
in
fbstp
push
idiv
ror
add
cdq
or
or
add
call
stc
cdq
call
(bad)
cmp
aas
pop
rol
jmp
les
(bad)
aad
mov
(bad)
cld
cvtps2pi
dec
jmp
inc
and
enter
mov
mov
add
idiv
pop
mov
or
push
cs
pop
push
push
dec
pop
test
and
leave
movs
mov
pop
mov
jns
cmp
adc
(bad)
mov
or
xchg
enter
(bad)
pop
mov
ins
adc
sbb
es
inc
jne
scas
outs
aaa
sbb
fild
add
loop
aam
ss
mov
ss
mov
push
cmp
cwde
lods
or
dec
(bad)
cmps
adc
and
sbb
pop
jmp
outs
fcomip
pop
cmp
mov
sahf
mov
ret
jae
pop
mov
out
cmc
jnp
jp
out
cli
xor
adc
call
ret
jg
leave
or
leave
sbb
sub
out
add
or
cwde
test
repz
cmp
retf
je
fiadd
fstp
pop
ja
adc
(bad)
rcr
test
(bad)
nop
inc
xchg
adc
dec
pusha
outs
mov
jle
pop
dec
dec
das
sbb
sbb
add
pop
sbb
gs
cmp
pop
fbld
jb
inc
sub
sub
ss
sbb
inc
ret
mov
(bad)
out
sub
sti
mov
sub
hlt
pop
push
pop
in
sub
mov
jb
push
hlt
hlt
xlat
inc
xchg
jp
mov
shl
pop
push
pop
cmp
and
ins
xor
sub
repnz
mov
cmps
sbb
es
retf
cdq
mov
xchg
fwait
inc
add
and
xlat
adc
xchg
movs
and
sub
mov
sbb
jmp
aad
jns
outs
push
adc
xlat
jbe
stc
mov
outs
into
gs
hlt
cmp
stos
dec
jne
and
les
test
inc
push
cmp
leave
mov
push
cmp
xchg
sbb
loope
outs
sar
adc
dec
arpl
adc
jmp
arpl
xchg
xchg
retf
stos
cmp
cld
mov
xor
idiv
rol
movs
mov
jecxz
out
sbb
test
mov
inc
push
das
fsub
test
jg
int
pop
cmp
mov
push
mov
inc
xchg
aaa
fwait
add
mov
ret
add
int3
adc
loope
mov
push
ret
sub
jo
adc
test
addr16
xor
inc
mov
psrlw
pop
dec
add
mov
imul
mov
xor
into
test
mov
cmps
stos
popa
push
shr
xor
add
sub
test
stos
add
adc
dec
xchg
cld
stc
not
sti
ss
adc
inc
xchg
je
stc
ret
sti
sbb
mov
pop
ja
out
cld
mov
inc
mov
test
push
push
push
xor
js
jno
cmp
stos
loopne
mov
sub
jns
pop
cli
movs
sahf
inc
jo
push
arpl
div
in
inc
in
mov
rcr
sahf
bound
inc
xor
or
jl
ja
push
movs
or
pop
inc
jmp
shl
gs
in
iret
int
mul
mov
loope
rcr
ror
xchg
dec
or
mov
ds
aam
jmp
cld
xchg
or
imul
cmp
pop
fist
add
jmp
dec
pop
pusha
mov
outs
enter
in
mov
push
and
dec
ret
inc
cld
and
idiv
test
add
leave
dec
into
sti
cdq
dec
mov
cmp
test
mov
xchg
inc
sub
mov
push
sar
int
mov
inc
xor
mov
xor
xchg
in
mov
sbb
bound
pushf
out
fisubr
in
mov
pop
sub
jno
cmps
in
pop
add
adc
fadd
(bad)
xor
mov
add
data16
mov
pop
mov
and
imul
fild
dec
shl
std
dec
cmp
lock
or
jnp
push
inc
(bad)
jl
test
push
jle
jmp
out
add
inc
out
fldenv
sbb
loope
and
mov
push
dec
test
xor
clc
pusha
sub
mov
hlt
addr16
sahf
pushw
call
sbb
fadd
push
sub
in
mov
inc
xchg
dec
cs
pusha
aam
retf
jne
xchg
mov
mov
pop
cmp
push
sub
inc
xlat
into
push
js
pushf
addr16
xor
mov
mov
(bad)
lock
pop
out
xchg
and
pop
and
jmp
vpcmpgtb
cwde
lds
sub
imul
je
ficomp
clc
mov
sub
(bad)
jl
jg
ds
lds
push
sub
daa
cmp
dec
mov
push
and
outs
inc
mov
and
push
sub
jae
jno
pop
les
cli
fidivr
shl
lea
ss
les
pusha
pop
and
shr
out
inc
cmp
popa
clc
in
xor
(bad)
shl
mov
mov
lods
dec
(bad)
cmc
aas
adc
in
shl
pusha
lods
je
pushf
mov
jp
(bad)
imul
clc
loopne
ror
pop
sbb
js
add
scas
push
inc
mov
movs
loop
mov
pop
dec
xchg
cmps
stc
dec
(bad)
xchg
call
cmp
and
xor
jne
adc
pop
pushf
outs
cmc
inc
cld
(bad)
jge
test
test
mov
in
outs
lea
adc
retf
call
jecxz
cmp
ja
cld
mov
adc
cmp
fiadd
sahf
or
dec
jbe
xor
push
jecxz
pusha
jnp
and
jbe
jmp
ror
and
(bad)
xor
sbb
hlt
jge
in
repnz
sbb
sbb
xchg
and
icebp
xor
push
mov
out
xlat
inc
imul
in
xchg
icebp
lock
(bad)
mov
push
rcr
outs
or
movs
ret
pop
xor
xor
sub
adc
jns
stos
or
stc
cld
or
movs
lods
mov
iret
sti
xchg
mov
fidivr
data16
shr
std
ins
lea
dec
and
xor
gs
mov
or
and
out
enter
push
out
ror
pop
stc
dec
ins
jbe
ins
invlpg
xchg
cmps
(bad)
movs
pop
int3
xor
adc
fidivr
rol
push
fcom
mov
pop
inc
dec
mov
inc
aas
jo
lods
xchg
cdq
mov
xchg
das
push
xor
clc
xchg
mov
imul
push
mov
sbb
xchg
and
pop
ins
and
mov
arpl
mov
push
push
xchg
int
in
popf
or
clc
ins
jns
fcmovb
inc
fdivr
shr
jmp
outs
mov
jbe
xor
test
imul
adc
push
jnp
je
pop
(bad)
dec
lock
xchg
push
or
test
ins
data16
mov
(bad)
mov
dec
xor
shl
jbe
(bad)
loopne
mov
hlt
outs
out
sar
mov
mov
or
lahf
and
add
aam
jmp
loop
inc
adc
dec
mov
shl
loop
lods
(bad)
lods
mov
jecxz
cmp
cmp
ret
leave
mov
push
adc
in
xchg
pop
(bad)
pop
xchg
nop
lods
das
out
or
sub
and
jl
inc
icebp
and
aaa
mov
mov
dec
call
inc
movs
ins
cs
not
push
shl
fimul
mov
aas
sbb
into
mov
push
aaa
mov
in
cmps
cmp
fwait
dec
or
push
inc
into
cmps
jmp
cmps
cmp
loop
data16
jns
add
mov
or
rol
cmp
popa
push
pop
sbb
push
adc
cmc
dec
aad
retf
(bad)
neg
push
sbb
sbb
xchg
xor
call
inc
clc
lahf
aaa
dec
sbb
pop
mov
cld
test
popa
ins
fwait
mov
mov
jno
jbe
and
fwait
shl
js
(bad)
push
mov
xchg
loop
add
cmp
xchg
adc
mov
pushf
dec
daa
cmp
lock
repnz
sbb
add
(bad)
push
mov
pop
sti
and
sub
cs
js
add
inc
dec
dec
xchg
adc
ins
push
cmp
cmp
pop
dec
cwde
addr16
xchg
ror
mov
retf
es
stos
mov
loop
hlt
or
sub
out
jge
and
clc
je
dec
sbb
mov
adc
das
mov
push
stc
fwait
dec
mov
int
sbb
jp
mov
push
pop
mov
rcl
into
mov
dec
call
int
js
ja
mov
outs
add
lahf
loope
fild
stos
pop
add
dec
cmp
jne
inc
sub
bound
sub
scas
stos
xor
xchg
mov
xor
fld
mov
cmp
add
cmp
shr
je
push
shl
(bad)
or
push
in
push
lock
mov
retf
pop
xor
mov
or
jmp
lods
lods
dec
shl
xchg
rcr
and
mov
lds
aad
push
pop
dec
sub
mov
mov
loop
imul
loop
push
and
push
inc
out
push
pop
add
sbb
mov
loop
mov
dec
in
inc
iret
jnp
jns
stos
aaa
or
fld
addr16
sar
fistp
and
xchg
push
pop
xor
ins
mov
outs
or
jg
mov
(bad)
fst
in
inc
call
dec
enter
sub
jns
jns
fwait
pop
jb
test
daa
ror
mov
sbb
ja
rcr
cdq
cli
ss
xchg
jmp
dec
std
mov
pop
imul
xor
call
mov
rcl
ret
jae
sbb
movs
cmc
cmc
push
jo
or
imul
dec
shl
pop
inc
es
mov
pop
or
out
outs
shr
sar
cmc
retf
sbb
cmp
in
pop
jp
lock
(bad)
mul
ss
push
sbb
dec
xchg
sub
ror
cld
leave
push
xchg
addr16
lahf
push
fdivr
mov
ror
cmc
(bad)
call
aas
pusha
cs
dec
sbb
xor
mov
pop
call
jg
ltr
dec
scas
(bad)
inc
mov
jmp
ins
and
je
mov
int3
and
into
sbb
fs
sbb
sub
sub
lods
pusha
scas
cmp
sbb
(bad)
xchg
and
mov
je
call
iret
add
leave
xchg
inc
mov
pop
stos
sbb
js
mov
je
mov
call
jae
push
jo
mov
adc
sbb
jmp
je
loopne
ret
inc
dec
cmps
sbb
dec
out
jne
pop
jnp
mov
mov
jo
adc
leave
pop
(bad)
push
inc
fs
fst
jne
jle
adc
sar
jbe
sbb
cmp
cmc
cmp
aad
inc
icebp
mov
xor
ss
push
sub
std
ror
inc
scas
add
pop
add
inc
clc
sar
outs
xchg
cmps
stos
push
lds
xlat
das
test
cs
daa
std
outs
das
and
in
leave
mov
jnp
stos
jp
mov
in
cwde
push
test
pop
in
data16
int
xchg
jge
and
aas
jmp
sub
or
iret
inc
push
add
aas
mov
push
push
adc
fwait
adc
fcom
lock
rcl
icebp
pop
push
or
and
mov
(bad)
jecxz
rol
push
and
sbb
aad
mov
clc
fist
mov
mov
pop
jp
mov
xchg
sub
add
jns
shr
push
lock
adc
rol
sahf
adc
test
jg
or
aad
dec
loop
jns
sti
shl
in
loope
add
cmp
icebp
fxch
ret
cdq
nop
adc
pop
or
sti
fild
aaa
cmp
rol
call
dec
shr
push
rcr
repnz
cdq
outs
inc
adc
wrmsr
jmp
cld
lock
adc
mov
jb
xor
fstp
mov
ret
xchg
jmp
popa
into
out
lea
cwde
push
enter
sti
call
mov
mov
jg
mov
mov
lds
repz
ficomp
cmp
sbb
xchg
in
sbb
sar
aas
add
fild
stos
add
adc
xchg
and
cli
dec
xor
inc
cmp
aam
sahf
sbb
scas
(bad)
fisubr
idiv
or
in
mov
enter
sub
scas
adc
loop
pop
mov
out
fisubr
mov
das
shr
imul
inc
pop
jl
rcl
pop
jmp
xchg
ret
jns
xchg
xor
push
(bad)
in
cld
mov
add
test
fiadd
mov
ins
addr16
ja
gs
or
mov
lahf
sbb
push
es
mov
pop
aaa
lds
add
xlat
mov
test
xchg
cmp
pop
ja
fstp
jle
or
(bad)
mov
outs
push
mov
idiv
inc
xchg
adc
sbb
test
scas
inc
ins
mov
icebp
clc
xchg
loope
outs
outs
stos
sbb
sub
jecxz
or
out
sti
rol
add
cwde
mov
(bad)
popa
inc
mov
xchg
add
adc
push
mov
scas
cmps
arpl
sbb
mov
inc
aam
call
je
(bad)
mov
xor
jbe
fcomip
popf
and
icebp
popf
retf
retf
cmps
out
test
fwait
sub
jg
jle
sbb
test
mov
js
ret
push
xor
repnz
adc
(bad)
fidivr
sub
in
mov
sbb
bound
xor
(bad)
mov
push
sbb
loop
lods
ins
sub
pop
ret
pop
inc
xchg
mov
retf
fistp
fs
aam
imul
cld
repz
or
xor
cdq
mov
jb
and
jmp
stos
sbb
sbb
sbb
mov
or
fsub
jmp
(bad)
push
iret
imul
(bad)
cmp
or
jmp
dec
cdq
stos
or
adc
fwait
xor
(bad)
jb
mov
add
mov
cmc
or
div
rcl
dec
rcr
movs
std
jne
mov
enter
jg
aam
in
push
fstp
mov
shr
mov
sub
cmps
or
sbb
add
sbb
jl
arpl
jg
addr16
mov
popf
and
movs
out
and
dec
sbb
xchg
lock
and
jns
mov
pop
(bad)
mov
cld
cmps
aas
mov
mov
in
popf
outs
(bad)
lock
or
pop
out
xchg
test
dec
sti
popa
retf
mov
loope
fwait
sbb
dec
and
fldenv
out
into
add
fadd
gs
push
inc
ret
iret
out
mov
je
(bad)
mov
and
or
mov
popf
xchg
das
ret
mov
les
mov
dec
in
les
dec
mov
lea
inc
sbb
ror
iret
xchg
js
stos
aam
mov
test
clc
mov
mov
inc
lea
xchg
clc
push
dec
add
leave
add
cdq
(bad)
enter
cmp
repnz
icebp
fldcw
rol
push
mov
(bad)
dec
in
sub
bnd
dec
int3
sub
xchg
sub
mov
mov
jns
jp
pop
pop
or
mov
xor
dec
cmp
loope
inc
into
cwde
leave
jmp
jmp
test
mov
ja
adc
mov
and
sbb
xchg
fiadd
sbb
loope
pop
push
jge
outs
jge
xor
cmp
jmp
dec
rcl
in
aaa
mov
inc
add
xchg
(bad)
ss
add
mov
xor
(bad)
sbb
add
ins
mov
jmp
sbb
imul
call
je
sub
dec
or
in
cwde
push
and
jg
and
mov
test
jecxz
jbe
or
sbb
dec
xchg
add
sbb
add
dec
dec
movs
fst
rcl
arpl
and
into
push
scas
jmp
cli
mov
cmp
clc
or
adc
ret
xlat
pop
bound
jg
push
jmp
mov
mov
pop
imul
jg
iret
lock
push
and
add
loopne
mov
aad
jecxz
stc
out
or
pop
xor
in
jbe
push
xor
test
cld
add
cwde
push
mov
test
fnsetpm(287
and
data16
cli
pop
loope
adc
cmp
xor
in
pop
in
xchg
cmc
push
inc
jb
daa
daa
inc
jmp
cs
push
add
scas
cmp
mov
jbe
dec
and
fcomi
(bad)
cmp
movs
dec
xor
(bad)
cmp
test
cmps
sar
jmp
jae
xor
jno
das
data16
sbb
cmp
inc
in
xchg
xor
jmp
ins
mov
add
scas
or
pop
sti
cwde
jle
fistp
jl
jbe
popf
(bad)
push
fidivr
inc
bound
adc
xchg
dec
dec
xor
es
imul
in
jl
add
mov
jl
add
daa
popa
ja
(bad)
sub
icebp
ins
sbb
aad
clc
xchg
sbb
(bad)
push
or
or
jnp
dec
xchg
cmps
outs
in
leave
and
scas
xor
xor
pop
inc
pop
push
hlt
sbb
jg
dec
jae
imul
(bad)
dec
imul
or
mov
loopne
leave
adc
sub
push
jl
(bad)
ret
xchg
data16
push
fs
mov
xor
ret
jle
icebp
cmp
add
gs
fcomp
retf
xchg
mov
mov
dec
retf
push
cs
ret
cmp
in
xchg
aas
out
adc
arpl
into
sbb
cmp
sbb
fs
mov
push
mov
pushf
add
cmp
fild
sub
mov
movs
rol
adc
ret
ficomp
xor
mov
and
fsub
fcomip
ret
mov
jno
dec
or
push
fs
dec
fsubr
cmp
jle
leave
xor
fisubr
stos
mov
daa
mov
pop
sbb
stos
adc
xchg
and
and
cmp
mov
cdq
or
imul
add
stos
jo
sbb
out
jb
idiv
sbb
xchg
pop
inc
push
cmps
and
push
mov
add
dec
cmp
push
jne
mov
out
aas
or
imul
retf
pop
scas
fisub
test
jnp
cmps
and
adc
aam
and
shl
pop
pop
out
scas
lods
in
or
cmps
popf
call
cwde
jne
mov
movs
fs
mov
xor
inc
push
xor
ds
test
icebp
iret
cmp
mov
imul
(bad)
cmp
loop
push
mov
inc
push
push
data16
pushf
pop
les
push
fsubr
cwde
loopne
sbb
ins
sub
stos
pop
or
jb
imul
adc
adc
sub
fiadd
std
les
outs
and
inc
and
hlt
jmp
jns
cld
dec
and
imul
add
les
test
lock
push
cmp
pop
std
aad
cmps
outs
loope
adc
ins
test
mov
push
dec
out
lock
xor
mov
jno
int3
aam
jle
stos
les
or
das
cmc
mov
lds
lahf
loopne
cmc
push
mov
mov
adc
fwait
dec
ror
bound
bound
pop
and
lahf
mov
sub
mov
cwde
dec
int3
scas
xchg
adc
jp
stos
jbe
outs
gs
mov
mov
sbb
jecxz
ror
adc
in
in
lds
jno
shr
cmp
pop
dec
adc
dec
dec
mov
xor
sub
dec
or
sbb
push
adc
or
lds
add
or
adc
int3
hlt
(bad)
cmps
test
daa
mov
addr16
in
xchg
push
cmp
lods
xchg
in
loope
cmp
neg
fld
lods
test
adc
int3
imul
add
shl
(bad)
sti
adc
dec
aas
adc
add
dec
mov
loope
mov
or
ja
cmp
nop
sbb
shl
loop
cmc
push
jbe
(bad)
clc
adc
mov
and
ins
xor
cmp
dec
jp
push
pop
or
dec
jg
sub
sar
mov
adc
xor
rol
scas
cdq
push
mov
sahf
mov
push
fsub
ja
or
jmp
cmp
mul
mov
dec
(bad)
mov
icebp
cmp
mov
and
jge
cmps
ret
dec
mov
pop
cwde
or
ins
inc
jle
ins
mov
in
int3
std
adc
mov
cmp
adc
std
dec
add
ja
nop
fmul
jne
and
sti
adc
add
loope
mov
mov
mov
add
pop
aad
xor
arpl
xor
js
fldenv
dec
sub
jno
call
hlt
bt
repnz
dec
cmc
sti
xor
and
lock
repnz
imul
cmc
pop
cld
xchg
xchg
sub
mov
adc
(bad)
mov
in
jle
call
add
outs
pushfw
jg
add
sbb
xchg
pop
push
adc
mov
not
sub
mov
jns
xor
cwde
cmp
inc
xor
jmp
mov
jl
(bad)
imul
aas
mov
sbb
movs
and
mov
cmp
jg
mov
into
mov
lock
aas
mov
int3
fisttp
push
adc
jb
xor
pop
sub
mov
in
xor
dec
fwait
adc
inc
xor
dec
jle
mov
fs
jmp
pop
ret
and
bound
out
jns
adc
xor
jmp
retf
pop
mov
xchg
and
xchg
call
jmp
(bad)
jmp
or
aad
mov
pop
xchg
shl
icebp
mov
sbb
push
sbb
arpl
and
add
lea
mov
mov
pop
dec
push
adc
xor
rcr
sub
xor
mov
inc
or
ins
dec
sti
cwde
mov
cmp
call
cmc
jl
mov
sti
cdq
in
loopne
retf
mov
(bad)
adc
(bad)
or
gs
mov
scas
or
int3
mov
xchg
xor
mov
xchg
lock
ficom
lea
cmc
or
addr16
dec
mov
pop
or
push
jle
cmp
push
fild
xchg
and
push
xchg
out
stos
pop
pop
test
adc
test
sbb
inc
stos
int
out
dec
jmp
cmps
inc
dec
dec
sub
fld
gs
cld
arpl
mov
adc
and
add
xor
mov
int3
cmp
xchg
(bad)
mov
sub
pop
repz
leave
scas
test
adc
or
movs
push
mov
pop
test
mov
fmul
and
jg
jecxz
in
inc
mov
movs
sti
mov
repnz
out
(bad)
out
fsub
lods
inc
or
jge
into
xlat
repz
cdq
inc
int
jmp
les
cmps
xchg
imul
sub
in
pop
loop
(bad)
aas
sbb
xchg
or
ret
mov
push
and
mov
mov
pop
mov
pop
xor
xchg
test
mov
outs
pop
mov
out
sbb
xlat
sub
bswap
outs
les
push
add
mov
fcomp
fdiv
cmp
out
sbb
cmp
mov
dec
lock
mov
sub
(bad)
pop
adc
loopne
push
push
xchg
scas
lods
out
div
ja
fldenv
push
jno
fwait
sahf
shl
pop
ds
and
add
arpl
jnp
sbb
sbb
mov
rcr
fnsave
sbb
in
icebp
pop
xchg
aam
(bad)
std
call
(bad)
call
xor
aam
mov
daa
mov
xchg
sbb
imul
dec
pop
imul
push
loop
pop
pop
jmp
pushf
bound
lods
sub
(bad)
or
cdq
adc
or
xchg
aam
dec
mov
out
push
int
pushf
push
ret
out
sub
nop
sar
or
xor
adc
pop
jns
push
push
lods
pop
add
popf
sbb
jno
inc
lahf
mov
mov
(bad)
test
adc
out
dec
or
sub
loop
cmps
or
sub
sbb
xor
xor
jae
pop
fs
cmp
mul
push
jge
jl
mov
iret
out
adc
mov
in
mov
sub
aad
call
nop
fmul
aam
or
lods
fiadd
jmp
bt
pop
and
pop
enter
and
hlt
mov
clc
fwait
and
inc
fst
sbb
sar
mov
xor
(bad)
dec
push
pop
pop
adc
rcr
cld
data16
sub
mov
mov
add
adc
mul
lahf
lahf
and
dec
call
mov
and
sbb
ficomp
add
push
shl
cs
push
fisub
retf
aas
ret
movs
pushf
icebp
mov
and
rcr
pusha
or
mov
pusha
ret
inc
fldenv
in
(bad)
and
repnz
mov
inc
xchg
lods
inc
sub
hlt
xchg
push
cmps
je
mov
retf
xchg
jo
lods
loop
sahf
aas
fsubr
rcr
inc
pop
jno
xchg
loope
push
ret
mov
mov
gs
rcl
in
jle
shr
fisub
fimul
popa
dec
dec
movs
xchg
and
cwde
jle
mov
repz
push
sub
adc
pop
sbb
out
pop
add
jl
cdq
push
adc
or
mov
cmps
sbb
iret
fild
repz
add
jg
fs
push
add
and
retf
cdq
inc
cmp
das
mov
scas
das
in
cmp
jno
sub
adc
ja
or
pop
add
mov
dec
inc
or
pop
jle
dec
lock
ret
bound
inc
jmp
push
js
add
push
xor
loop
adc
(bad)
fisub
fwait
jp
push
push
nop
stc
ja
add
jbe
push
jg
ins
mov
mov
lods
xlat
mov
cmps
push
lods
adc
xchg
dec
xchg
scas
ficomp
mov
adc
aaa
test
xchg
pop
in
inc
jbe
mov
cmp
repnz
mov
inc
mov
data16
jmp
rol
jnp
inc
xchg
and
xchg
pop
sbb
cmp
ds
inc
inc
jmp
jb
out
adc
shl
jl
int3
data16
jb
shl
cmc
pop
fcmovnbe
or
(bad)
jbe
fsubr
out
inc
add
dec
pop
lahf
pop
mov
movs
jbe
cmp
mov
je
cmps
mov
cmp
lods
xchg
push
mov
xchg
imul
add
(bad)
pop
jno
aad
hlt
adc
sub
cmp
xor
push
adc
je
pop
imul
push
xchg
div
call
mov
pop
loope
clc
clc
fild
dec
xchg
call
xchg
mov
push
outs
mov
outs
rcl
inc
leave
and
es
popf
mov
nop
fidiv
mov
add
xchg
ss
or
test
pop
jb
adc
jl
and
and
xchg
pushf
mov
int3
mov
in
cwde
sti
icebp
jnp
pop
rcr
pushf
clc
mov
inc
xchg
out
call
pop
xchg
scas
pusha
aas
iret
arpl
mov
into
xchg
arpl
mov
data16
(bad)
adc
rol
and
cmps
scas
push
loop
test
nop
inc
out
sbb
and
xchg
(bad)
repnz
push
jbe
push
and
call
adc
arpl
nop
cld
fisttp
mov
or
mov
fild
adc
movs
or
sbb
mov
push
repnz
pop
push
(bad)
mov
into
add
push
jecxz
cmp
push
in
ds
inc
(bad)
movs
dec
add
xchg
mov
das
xchg
add
xor
ins
xor
xchg
fwait
or
pop
sahf
adc
push
adc
mov
scas
pop
sbb
jl
aas
sbb
dec
dec
aam
push
enter
push
int3
jmp
outs
clc
adc
bound
and
adc
test
iret
sahf
inc
jg
jle
xchg
mov
inc
mov
sahf
enter
xor
sbb
loopne
pop
repnz
xor
out
adc
mov
and
out
add
pop
ret
dec
shr
out
mov
push
es
pop
lds
shl
fcomp
push
dec
test
aas
bnd
jae
into
sub
pop
or
ds
sub
test
std
mov
icebp
stos
xchg
rol
adc
pop
adc
add
xchg
push
xchg
mov
cli
call
inc
scas
jg
jg
test
and
leave
jecxz
mov
jmp
pop
loope
rcl
dec
mov
test
jge
(bad)
dec
cwde
cli
push
data16
fsubr
cmps
mov
clc
popa
in
push
fidivr
shl
or
inc
push
fwait
add
push
cdq
(bad)
cmp
cli
xchg
dec
mov
in
je
scas
add
add
loop
jg
ja
int3
outs
movs
sbb
inc
adc
sub
movs
sti
mov
jno
push
xor
adc
int3
dec
(bad)
mov
adc
push
ja
pop
dec
xchg
cmp
cmps
nop
mov
xor
push
cmps
dec
in
imul
mov
xchg
leave
in
and
mov
aaa
dec
pushf
inc
push
(bad)
mov
fsub
or
cmp
mov
loop
out
mov
(bad)
stc
mov
arpl
ror
into
inc
bound
fnstsw
fcom
xor
xchg
stos
xlat
ret
xchg
or
pop
push
pop
idiv
mov
pop
dec
and
jle
loop
icebp
das
cld
mov
dec
sub
lea
fistp
mov
xor
and
xor
xchg
call
push
push
sub
xlat
dec
mov
mov
cmp
in
push
or
or
lock
xor
cmp
pop
ror
(bad)
mul
mov
fcomp
adc
stos
push
movs
jle
push
cmp
fnstcw
mov
pop
dec
cs
jmp
test
lock
sbb
je
cli
scas
mov
jge
fiadd
out
add
and
inc
pop
and
sbb
dec
aad
jle
test
xchg
scas
push
fs
xor
inc
mov
ins
jle
dec
sub
loop
in
cmp
jmp
cmc
jecxz
jmp
leave
dec
and
xchg
out
push
push
jbe
jo
mov
xchg
lods
ficom
addr16
jmp
jns
fistp
mov
mov
sub
addr16
push
cmp
lds
iret
mov
pop
(bad)
cmp
push
test
stos
dec
shl
sahf
xchg
pop
xchg
mov
dec
loopne
mov
imul
sub
jae
js
rcr
sub
xor
inc
and
mov
or
sar
inc
and
out
call
imul
outs
or
and
loop
jnp
out
gs
adc
mov
rcl
and
cmp
stos
or
ja
mov
add
out
xchg
jle
and
icebp
inc
(bad)
repnz
inc
cli
jns
stos
sub
(bad)
in
mov
push
add
push
push
fiadd
fldenv
ret
rcl
adc
fcom
adc
aad
xchg
js
xchg
lock
out
sub
ror
repz
cdq
cs
nop
std
paddusw
int3
popf
cld
out
mov
adc
mov
fwait
(bad)
in
pop
add
fstp
out
ret
ds
ins
lahf
jne
xor
jo
mov
pop
or
dec
push
add
movs
das
cmovno
cmp
mov
or
ret
ret
movs
call
outs
mov
outs
add
xchg
lock
lahf
pop
and
out
jae
mov
std
or
pop
inc
jl
test
xchg
mov
jne
ins
ins
jne
(bad)
jl
je
loop
push
xchg
or
push
ret
lock
push
mov
push
pop
inc
rcl
sbb
dec
in
imul
enter
mov
mov
(bad)
mov
addr16
cbw
add
mov
jecxz
or
hlt
add
(bad)
jmp
jns
mov
inc
in
fnsave
iret
retf
xchg
jnp
xchg
mov
aaa
add
inc
lock
push
daa
mov
ret
jle
clc
mov
inc
(bad)
(bad)
adc
lods
push
inc
inc
into
aam
mov
push
xchg
ret
and
cmp
in
cdq
xchg
pop
mov
shl
adc
jle
idiv
(bad)
std
cmp
dec
and
xchg
test
ds
dec
std
mov
mov
mov
adc
das
mov
ret
sbb
je
jns
out
(bad)
or
lods
dec
loopne
sub
das
retf
and
mov
mov
call
(bad)
cmp
push
and
push
dec
dec
inc
mov
adc
in
mov
push
cmc
adc
pop
lea
pop
cmps
fcom
inc
and
sbb
(bad)
scas
fsubr
pop
(bad)
or
js
jbe
stos
dec
sbb
ins
add
mov
mov
out
dec
fisubr
and
sbb
mov
in
push
stos
loope
out
sbb
ja
shl
add
inc
and
xchg
lock
mov
and
popf
cmp
in
and
sti
lahf
stos
xor
and
and
cdq
sbb
sbb
xor
and
sbb
mov
out
xchg
push
scas
mov
pop
mov
aas
xchg
jmp
nop
or
(bad)
mov
dec
sbb
loopne
bound
out
cmp
mov
push
leave
fsubr
retf
outs
jge
mov
push
adc
in
jmp
sahf
inc
and
outs
mov
or
leave
addr16
fbld
jmp
jo
jl
int
call
cmps
xor
stos
pop
pop
stc
mov
call
leave
imul
stos
adc
mov
mov
mov
rcr
adc
(bad)
cli
push
pop
stc
pop
dec
or
jne
ins
jg
push
outs
sub
jp
movs
rol
cmp
push
call
cs
fbld
mov
mov
cmp
lds
pop
cli
dec
fs
pop
xchg
lods
jne
push
ror
push
cmps
mov
mov
add
push
std
xchg
and
loop
fnstcw
imul
sub
push
add
fbstp
les
bound
add
nop
aaa
fs
jmp
fwait
lods
ficom
pop
rcr
adc
sbb
jg
xor
push
in
pop
cmps
or
fdivr
mov
cdq
jmp
lods
mov
jnp
(bad)
or
cld
pusha
cld
cmp
mov
repnz
sub
icebp
push
dec
ins
fwait
rol
shl
mov
mov
sub
push
xchg
call
ret
fcom
add
cmp
test
lock
fdivr
pop
sbb
xchg
cmp
in
add
in
inc
xor
dec
shl
mov
pop
fstp
inc
mov
push
cmp
mov
xchg
mov
int
iret
adc
sbb
pop
leave
xor
movs
jp
mov
je
jp
ja
add
das
pop
scas
sbb
cmova
das
jae
out
cli
dec
xor
popf
mov
out
fdiv
sar
mov
inc
mov
xchg
sub
dec
scas
imul
in
imul
and
sbb
das
ror
scas
add
leave
cmp
jmp
loope
mov
arpl
int3
cmp
xchg
dec
je
ret
movs
jae
sbb
or
adc
es
and
cmp
ss
xlat
pushf
mov
jb
pusha
in
jnp
mov
xor
xchg
into
inc
jg
ins
cs
cmps
int
dec
sbb
and
push
cdq
mov
mov
fcom
sbb
fwait
rcl
int
jl
cmc
sbb
pop
mov
push
sub
jl
inc
sub
test
cmp
jp
nop
xchg
mov
xchg
pop
sub
add
aaa
and
pop
cmp
in
and
cmp
lods
stos
mov
mov
lds
mov
xlat
adc
scas
sbb
fdiv
xchg
icebp
jmp
inc
fld
push
push
arpl
cmp
mov
xchg
out
sub
push
in
mov
bound
mov
xor
mov
fsub
loopne
shr
add
jecxz
adc
test
jbe
sub
inc
mov
in
stos
aaa
ja
or
jecxz
arpl
fwait
cs
mov
aad
xchg
lds
ret
or
xor
mov
sub
fsubr
pop
inc
pop
(bad)
call
xor
test
jo
mov
pushf
outs
xlat
repz
out
jl
es
sar
xchg
je
shl
adc
imul
clc
and
and
jle
xchg
test
call
repz
pop
ss
lock
cwde
in
lds
xchg
xchg
sti
pop
xchg
sub
rcr
fwait
mov
push
mov
adc
loopne
aad
and
outs
out
or
outs
loop
jecxz
inc
ss
sub
pop
lahf
push
mov
stc
ret
imul
ins
xor
imul
enter
fsubr
adc
or
add
out
sti
sub
hlt
ret
lea
(bad)
ss
(bad)
mov
push
cld
ss
stos
out
mov
icebp
int
inc
inc
adc
mov
push
pop
push
sti
pop
mov
mov
ds
push
fistp
in
push
push
lea
push
fmul
sar
int
sub
repnz
lea
test
fsub
rcr
push
adc
icebp
pop
sahf
mov
je
fist
sahf
xor
test
cs
push
or
jmp
fwait
cwde
int
xor
jno
add
add
fisubr
iret
pop
and
repz
fmul
test
nop
repnz
call
xor
out
ret
cli
or
stos
ret
test
bound
sub
arpl
les
jbe
inc
cmps
push
out
scas
or
inc
cld
mov
mov
inc
test
xor
cmc
cmps
and
and
aas
mov
imul
xor
xchg
xchg
lahf
hlt
shr
je
sbb
or
sub
aaa
dec
jmp
in
pushf
push
jmp
pop
cmp
iret
sahf
xlat
push
ret
fmulp
adc
popf
pop
es
add
lods
movs
dec
fsub
fistp
out
mov
or
add
(bad)
leave
mov
div
jno
in
push
xor
sar
jns
push
xor
lods
dec
xchg
push
push
ret
push
dec
rcl
jo
cmc
jle
sub
xlat
das
stos
fsubr
pop
sbb
and
mov
xchg
(bad)
adc
ret
push
dec
sub
lods
xlat
lahf
mov
fstp
aas
arpl
lds
xchg
inc
pop
or
mov
add
sbb
xchg
movs
push
fdiv
jmp
iret
mov
add
test
push
inc
sbb
mov
lds
icebp
imul
ja
scas
pop
push
and
mov
mov
lock
(bad)
lahf
dec
cmps
jmp
mov
jne
adc
mov
mov
jnp
in
xor
sub
jmp
fst
adc
mov
push
pop
arpl
xchg
repz
add
mov
aas
xchg
or
jmp
data16
add
inc
ret
popf
mov
sbb
dec
stos
fisttp
cld
aas
mov
rcr
fwait
mov
xor
xor
inc
out
(bad)
cmp
inc
fsubr
push
shr
sbb
jl
rcl
inc
mov
jg
xchg
(bad)
jl
xchg
rcr
jmp
mov
push
dec
jge
cwde
shr
into
inc
gs
sahf
dec
iret
mov
ins
imul
pop
stos
push
jmp
in
jb
call
pop
fwait
adc
inc
cwde
jne
inc
test
sti
aaa
dec
pop
pop
push
cli
fisub
scas
inc
hlt
fucomi
mov
add
(bad)
cmp
push
mov
or
push
jmp
repnz
xor
pop
jg
xchg
ins
push
dec
sbb
mov
push
inc
sub
push
pop
pop
mov
in
pop
ins
into
or
std
out
hlt
push
cmp
out
ret
cld
lahf
mov
sbb
xchg
xor
sub
ins
pop
nop
sub
add
shl
fsubp
in
enter
dec
sahf
and
and
push
leave
jp
cmp
and
jecxz
push
pop
add
fwait
scas
retf
mov
fdiv
jbe
jmp
xchg
xor
sub
shl
sub
add
sub
and
clc
mov
dec
xchg
jbe
cwde
sbb
jge
add
pop
pop
retf
pop
out
das
push
or
call
push
loopne
mov
bound
adc
jb
scas
jmp
jmp
jnp
outs
mov
call
mov
push
icebp
leave
and
mov
icebp
aas
cmp
jle
cmp
mov
jle
int
xor
jnp
cmps
fisub
cld
lahf
imul
dec
lahf
push
sub
fistp
das
push
cmp
sbb
mov
or
jbe
add
mov
and
popa
xchg
repz
add
mov
out
xchg
sub
jmp
push
adc
imul
jne
mov
call
ins
xchg
fmul
aad
call
mov
add
mov
stos
push
sub
mov
fimul
(bad)
dec
in
lahf
mov
jl
sub
and
mov
lods
ss
mov
sub
sbb
hlt
xchg
mov
cdq
test
pop
sahf
retf
ins
in
sub
dec
(bad)
ret
cmp
cmp
pop
imul
rol
mov
retf
ss
nop
enter
sbb
mov
pop
ret
cwde
jl
mov
aaa
fistp
mov
fbld
js
jmp
adc
xchg
dec
fsubr
cmp
xchg
dec
jns
test
mov
xor
sbb
pop
ins
vphaddubd
test
or
mov
cmp
lods
lods
(bad)
xchg
lods
mov
loope
mov
arpl
xchg
jecxz
outs
xchg
xchg
or
add
shr
in
add
cmp
out
stos
mov
sbb
gs
stos
sahf
inc
mov
std
sub
ss
jge
neg
popf
iret
jge
xchg
pop
cld
lds
test
mov
inc
cmp
(bad)
cmps
in
pop
cmc
into
lahf
aas
(bad)
and
and
or
js
loop
mov
sub
push
mov
push
es
mov
add
lea
pop
mov
or
lods
mov
hlt
ret
test
xchg
mov
jp
aad
int
push
ret
mov
pop
inc
pop
ins
or
enter
mov
cmps
ss
pop
aad
sbb
mov
fsubp
xchg
jl
icebp
scas
aad
test
jge
pop
xchg
mov
sub
les
xor
mov
not
jb
clc
sbb
fimul
jb
rcr
retf
xchg
les
inc
jl
jbe
adc
push
push
repnz
push
or
push
xor
push
and
dec
inc
cli
out
jnp
xchg
in
or
or
fsubr
inc
mov
inc
inc
sbb
or
ror
dec
cmp
inc
and
adc
inc
add
push
jno
jle
retf
pop
hlt
mov
inc
test
nop
enter
dec
loopne
ins
jno
fld
test
inc
jge
scas
mov
adc
icebp
lds
aam
push
(bad)
clc
dec
aad
xor
loope
jo
sbb
jno
hlt
mov
int
xor
mov
nop
(bad)
pop
lea
out
aas
mov
stc
aaa
jge
cs
repz
xor
stc
push
ret
xchg
sbb
jb
xlat
push
mov
sbb
inc
(bad)
adc
mov
inc
dec
bnd
jl
ja
sub
shl
sub
sub
pushf
cs
mov
lock
aas
cmp
sub
or
jb
cwde
call
lods
out
outs
jnp
clc
sub
icebp
mov
push
scas
sub
(bad)
pop
leave
jle
fistp
scas
or
dec
jg
fiadd
mov
mov
scas
js
xor
cmp
into
mov
mov
and
(bad)
cmp
inc
mov
adc
mov
push
pop
xor
stos
xchg
push
repnz
fistp
jo
sbb
out
dec
in
int
lar
mov
pop
xchg
adc
dec
retf
mov
test
mov
stc
cmp
addr16
ins
int
mov
add
sbb
sub
enter
pop
pop
in
jb
pop
cwde
rcr
sub
out
stos
sub
fist
jbe
call
fldenv
jno
loope
mov
mov
imul
lahf
mov
idiv
(bad)
pop
fisubr
loopne
push
je
jle
pop
lods
das
sahf
xchg
cmp
or
sti
push
jno
test
mov
add
fcom
inc
pushf
jmp
xchg
mov
pop
xchg
lea
outs
xor
data16
cmc
adc
mov
fstp
inc
bound
into
mov
adc
sub
popa
retf
mov
out
sub
cmp
shl
test
push
sbb
pop
push
jne
scas
jno
mul
or
mov
ds
out
add
lods
call
or
adc
jg
adc
dec
rcl
add
add
imul
test
xchg
push
and
adc
mov
je
or
nop
jp
cs
mov
shr
frstor
xor
fadd
lea
mov
jns
scas
xchg
jo
shr
mov
es
mov
mov
jae
jbe
retf
jecxz
out
in
or
enter
sbb
mov
cmps
or
idiv
scas
rol
mov
pop
hlt
or
scas
cmp
fistp
imul
mov
xor
mov
inc
xor
xor
dec
movs
dec
ret
mov
adc
repz
cmc
and
cmp
mov
arpl
push
scas
mov
(bad)
daa
cld
shl
stc
adc
sbb
popa
and
fcomp
adc
push
mov
inc
jl
(bad)
cmc
and
ret
pop
adc
hlt
movs
add
test
ret
dec
inc
(bad)
and
test
mov
push
mov
stc
pop
or
pop
or
ficomp
sbb
mov
iret
jbe
mov
es
aas
sbb
push
mov
fiadd
loope
cmps
cld
or
add
push
pop
aaa
inc
or
pop
scas
(bad)
pop
sub
xchg
push
gs
adc
test
popf
dec
shr
jmp
mov
inc
mov
jns
cmps
inc
xchg
dec
sub
(bad)
ins
xchg
and
push
dec
shr
or
fcomip
adc
frstor
in
(bad)
lods
add
shr
xchg
xlat
jmp
aaa
jb
or
sub
cmp
adc
(bad)
xor
cmp
push
shl
aaa
mov
gs
(bad)
xor
call
popa
dec
add
xchg
push
mov
sbb
popa
mov
add
mov
adc
aad
mov
mov
jl
mov
mov
inc
pop
jno
cs
test
stos
sbb
enter
or
dec
xchg
test
int3
lds
ins
test
add
cdq
lds
cmp
test
mov
mov
fucomp
lods
pusha
inc
(bad)
sahf
sbb
retf
fidivr
jecxz
sahf
inc
mov
ret
adc
or
fidiv
loopne
sahf
mov
in
mov
aaa
lock
iret
jb
test
int3
push
add
adc
mov
jns
int
xor
mov
pop
iret
push
enter
je
icebp
adc
popf
xchg
in
adc
mov
sbb
pop
in
rol
xchg
imul
icebp
popf
aaa
mov
(bad)
test
or
sub
(bad)
dec
call
cld
xor
or
xlat
mov
dec
dec
sub
and
repnz
adc
lds
fnstsw
retf
int3
mov
jns
xchg
inc
in
push
ds
ret
adc
xor
cmp
in
cwde
mov
sub
mov
loop
js
mov
pushf
cmp
jb
pop
jmp
addr16
cld
mov
setno
jno
xchg
(bad)
ins
mov
pand
cmp
cmp
cld
retf
push
(bad)
pop
ficomp
mov
pop
mov
ins
or
loope
sbb
xchg
cmp
fcomp
je
shl
shl
lods
sbb
ret
jp
enter
mov
sbb
enter
mov
xor
cmp
sar
dec
fld
sbb
xor
(bad)
imul
test
jnp
sbb
icebp
dec
cmc
xlat
jnp
stc
out
(bad)
sub
ss
inc
mov
test
rcl
jbe
aam
mov
fisub
call
sub
(bad)
sub
mov
ins
or
ins
call
adc
adc
das
out
ins
mov
nop
std
mov
outs
fisttp
mov
cmc
jo
jns
shl
in
push
movs
movs
mov
push
mov
mov
push
adc
jo
int3
sbb
or
cmp
adc
aad
xchg
popf
xchg
inc
mov
mov
(bad)
xchg
adc
in
xchg
aam
pop
fdivr
jge
and
sub
retf
push
repnz
dec
std
out
into
and
inc
into
shl
sbb
iret
(bad)
(bad)
test
xor
cmp
test
cmp
pop
clc
pop
dec
shl
or
mov
mov
mov
or
adc
stos
lods
mov
xor
pop
jae
mov
pop
out
dec
xchg
mov
xor
loop
in
ins
popa
popa
pop
xchg
cs
cmp
jns
xor
mov
xor
in
mov
es
lahf
xlat
mov
lea
xor
mov
mov
push
or
inc
sub
and
sbb
fwait
cs
push
outs
ss
xor
xor
sahf
imul
mov
movs
push
push
mov
mov
mov
mov
je
fcomip
mov
sub
shr
sbb
xchg
inc
ss
or
scas
test
cmp
lea
test
out
push
fmul
xchg
loope
jbe
out
mov
sar
dec
repz
and
icebp
call
xlat
and
adc
lea
jbe
enter
fbstp
lods
xor
pop
out
in
and
push
sbb
fisttp
ret
xchg
adc
add
into
clc
je
in
inc
cmps
xor
xlat
aad
sahf
es
jg
sub
jo
cmps
arpl
and
in
mov
icebp
aas
mov
pop
add
setae
inc
jl
xor
adc
mov
xchg
call
cmp
aaa
jno
sahf
adc
sbb
out
lods
sbb
shl
(bad)
retf
iret
mov
stc
mov
mov
leave
call
ret
enter
inc
dec
outs
xchg
ds
dec
mov
dec
test
jns
iret
in
cmp
cli
adc
hlt
pop
and
mov
into
and
test
(bad)
lods
cmps
fsub
fs
sub
popf
je
jae
jns
xchg
dec
iret
pop
fdiv
fcomp
or
cmp
popf
fcom
jp
jnp
in
lods
sbb
pop
loope
jmp
adc
frstor
enter
test
cwde
xchg
cli
add
inc
or
mov
mov
fidiv
test
mov
aad
inc
pop
popf
mov
lods
in
adc
fldenv
enter
push
xchg
pop
test
scas
xchg
jge
shl
nop
pop
mov
rol
pop
inc
mov
fwait
inc
add
push
lahf
mov
adc
rcl
je
sar
xor
add
dec
ja
imul
inc
aad
jle
mov
cwde
ror
fs
jmp
pop
adc
std
xchg
test
pop
fisubr
ret
lods
jns
in
or
jbe
retf
inc
pop
jbe
inc
fist
je
adc
cmp
pusha
mov
dec
mov
ins
sbb
in
mov
sti
add
jmp
or
out
fidiv
cdq
fisubr
call
mov
sti
xchg
aam
lods
(bad)
fidivr
retf
sahf
fmul
xor
adc
enter
pop
sbb
mov
mov
mov
push
mov
jg
inc
div
cld
sbb
and
mov
inc
pop
push
jne
movs
mov
xchg
mov
adc
call
aam
mov
scas
push
sbb
add
xchg
hlt
inc
mov
xchg
sub
outs
inc
cmps
mov
movs
pushf
xor
sbb
mov
and
pop
push
mov
xor
mov
data16
loop
iret
mov
pushf
loope
jl
test
add
jmp
add
call
sub
cmp
mov
std
cli
xor
loop
push
xor
lds
or
inc
adc
movs
jbe
cmp
or
sahf
xor
scas
neg
or
pop
sbb
mov
inc
xchg
mov
cmp
xlat
test
pop
out
and
push
pop
jge
xchg
jno
leave
call
out
inc
cmp
in
add
fimul
ins
retf
adc
in
js
jmp
sbb
enter
cmp
adc
mov
mov
xlat
mov
sub
inc
or
mov
inc
and
push
mov
sbb
rol
adc
xchg
stc
jmp
inc
scas
sar
out
jge
outs
mov
push
inc
aad
cmp
push
add
xor
xlat
cli
jmp
adc
test
cld
cwde
call
int3
push
dec
out
retf
jns
sti
movs
out
cmp
mov
cmps
jecxz
ret
cdq
mov
mov
mov
into
pop
xor
push
push
pop
mov
(bad)
js
ins
xchg
daa
and
scas
xchg
push
jno
cmc
test
enter
cmps
test
mov
shr
and
sbb
jp
xchg
xlat
sbb
lods
jmp
pop
je
mov
daa
adc
or
test
jno
pop
fmulp
ds
mov
xor
shl
fwait
dec
aad
sbb
scas
pop
es
xchg
dec
add
shr
arpl
add
pusha
data16
mov
push
jns
fiadd
hlt
scas
mov
pop
stc
cmp
std
cld
in
adc
inc
retf
cmps
inc
movs
and
xor
and
into
cmp
ja
xor
out
and
push
mov
sbb
ret
mov
je
cld
inc
add
dec
push
std
outs
scas
xchg
mov
xor
dec
stos
xchg
ss
xchg
aaa
cwde
call
lock
and
jecxz
shr
fidiv
lods
and
mov
pusha
push
jae
stc
je
mov
xor
jo
sub
pop
sub
sbb
imul
sbb
pusha
test
mov
push
xlat
cdq
cdq
push
push
pop
xchg
mov
lods
js
xor
bnd
or
lea
pop
mov
cmps
mov
loopne
aam
test
and
push
dec
push
xor
stc
push
retf
push
in
jns
rol
(bad)
gs
enter
sahf
pushf
dec
ror
out
div
adc
fdiv
clc
inc
stos
call
popf
dec
in
add
mov
lock
std
or
adc
dec
mov
push
cmp
sub
push
push
xchg
sbb
sub
pushf
test
fdivr
ror
in
jmp
xchg
ret
out
and
aad
and
push
mov
movs
jmp
fistp
inc
cmps
mov
movs
cmc
aam
sub
mov
lock
jb
mov
js
cld
jg
arpl
scas
sub
push
ins
outs
test
iret
dec
mov
stc
push
(bad)
in
adc
inc
icebp
test
xchg
in
pop
xchg
jecxz
popa
rol
(bad)
in
pop
(bad)
outs
mov
jnp
mov
and
aaa
daa
lods
into
imul
inc
ins
pop
dec
cli
rol
jae
cmc
fsub
xor
jmp
(bad)
xlat
adc
mov
sbb
adc
in
int3
in
addr16
mov
mov
inc
aam
xor
push
stos
dec
push
fdivr
outs
in
push
add
pop
(bad)
mov
movs
imul
dec
stc
iret
mov
jbe
scas
sub
xchg
fisttp
pop
jns
cmp
add
(bad)
ja
pop
add
or
xlat
sub
jg
ja
xchg
sbb
mov
xchg
mov
je
pop
aam
xchg
xchg
adc
mov
sbb
sub
adc
sbb
push
jno
ss
retf
inc
mov
xchg
aaa
shl
push
and
inc
push
pop
lahf
mov
cmp
mov
call
and
push
lods
rcr
pushf
pop
sub
inc
mov
outs
adc
pop
mov
mov
add
stos
inc
imul
out
jmp
xlat
dec
mov
mov
push
test
cmp
sbb
lds
out
inc
retf
repz
inc
scas
imul
lods
sub
sar
fucomip
pause
movs
aas
icebp
(bad)
or
(bad)
cmp
pop
hlt
add
fld
pop
xchg
call
xchg
xor
push
and
push
cmp
aad
int
test
into
out
jb
ret
mov
ret
dec
les
out
xor
lds
mov
mov
repz
test
ret
lods
mov
jmp
js
cmp
sahf
lods
inc
rcl
and
adc
mov
daa
(bad)
push
(bad)
sbb
in
sahf
mov
mov
adc
xchg
out
pop
(bad)
cmp
xchg
call
mov
(bad)
mov
jecxz
inc
add
jg
jns
aas
in
or
in
loop
std
mov
lds
cmp
pop
cwde
fsub
xchg
mov
movs
call
push
push
mov
(bad)
and
fisttp
push
or
push
pop
add
cs
movs
push
jno
jnp
dec
sub
xor
xor
retf
aas
mov
pop
out
push
test
sbb
out
adc
enter
sub
add
or
jo
cmp
and
es
bound
ret
xchg
repnz
xor
out
aaa
in
ins
pop
sbb
ja
scas
shl
ss
add
repz
cmps
add
mov
xchg
jmp
dec
loopne
mov
cli
aad
movs
jge
mov
in
inc
mov
dec
cmp
sub
adc
xor
mov
and
popa
arpl
inc
jl
pop
(bad)
cmp
push
mov
jle
inc
add
dec
mov
test
movs
das
jae
pop
loope
es
xchg
sar
add
inc
pop
push
pop
rol
add
test
xlat
pop
idiv
adc
bound
ss
outs
aaa
sub
loop
dec
add
pop
aad
retf
dec
jl
cld
mov
mov
fistp
mov
mul
out
pop
xlat
scas
jle
fstp
call
lods
inc
in
ins
adc
or
add
fisub
lds
push
jl
dec
push
cmp
add
ret
test
es
jmp
add
stos
loop
cwde
stc
sar
xor
sub
push
arpl
push
mov
or
or
cmps
jae
int
push
adc
dec
ss
add
mov
pop
mov
(bad)
push
inc
ret
mov
sahf
pop
jae
jle
push
ret
mov
in
cmp
int3
not
fs
mov
pushf
pop
pop
adc
add
fs
mov
jge
jg
xchg
sbb
pop
jge
outs
pop
mov
jmp
mov
cmp
das
adc
std
cmps
movs
ret
sub
lahf
int3
retf
lahf
lock
and
fstp
test
mov
gs
mov
inc
jp
out
fmul
sahf
or
push
dec
cld
push
inc
and
les
jbe
inc
adc
pop
pushf
inc
cmp
xor
adc
ins
xor
pop
xchg
mov
push
sbb
or
mov
mov
pop
add
jno
xchg
dec
mov
mov
xchg
push
and
sbb
lds
mov
inc
pop
jmp
fwait
clc
retf
fsub
ror
arpl
outs
(bad)
mov
scas
inc
scas
imul
js
mov
lods
out
sub
xchg
cs
std
je
aad
pop
mov
hlt
(bad)
xlat
loop
jne
sub
jl
(bad)
ss
iret
pop
lds
xor
stos
and
imul
(bad)
aam
lahf
shl
and
mov
mov
add
fistp
mov
inc
push
lahf
fcomp
enter
dec
push
cmps
rcr
push
mov
inc
add
jg
cmp
jp
add
shl
dec
add
retf
addr16
inc
loop
shl
imul
inc
push
sahf
jp
jbe
ficom
call
mov
jae
pop
adc
xor
add
xor
daa
push
cld
add
inc
in
enter
pop
mov
cmp
mov
daa
mov
dec
sti
dec
out
fsub
inc
popf
test
std
xor
jle
retf
test
gs
pop
addr16
sahf
jmp
jmp
inc
push
cmps
pushf
out
push
push
mov
loop
push
and
mov
push
sti
aaa
and
cld
jcxz
xchg
adc
dec
jno
into
mov
push
or
inc
psrlw
jbe
mov
das
jg
fmul
call
mov
adc
mov
out
sub
cwde
add
cmp
and
(bad)
sti
add
test
loope
xor
(bad)
adc
pop
jle
cmp
outs
jb
jmp
dec
push
sub
icebp
cwde
sbb
in
es
inc
mov
xor
pusha
mov
sbb
and
xor
sbb
cs
pop
ds
push
cwde
in
and
push
jno
jmp
xor
or
xchg
scas
sub
push
xlat
mov
jae
pop
xlat
mov
inc
fsubr
inc
pop
mov
xor
dec
mov
or
cmp
jmp
out
mov
call
popf
xchg
icebp
inc
push
lea
pop
sbb
and
and
and
cwde
mov
pop
mov
(bad)
in
inc
arpl
rcr
sti
jno
clc
es
call
out
aad
sysexit
dec
fs
pop
dec
ja
dec
imul
push
ror
rcr
jl
imul
lods
or
xor
inc
inc
sbb
mov
inc
jo
xor
mov
xchg
jp
cmp
popa
aam
mov
mov
adc
fcom
lds
mov
imul
dec
scas
into
ss
jmp
add
add
add
fsub
xchg
push
arpl
and
cmp
fistp
inc
xchg
mov
sar
dec
dec
cwde
lea
sbb
mov
enter
mov
jns
(bad)
std
mov
lahf
sbb
cdq
add
loop
mov
pop
(bad)
test
adc
push
pushf
add
inc
shl
in
sahf
dec
xor
test
cdq
arpl
push
pop
mov
pop
jecxz
inc
retf
stos
jmp
inc
test
push
pop
and
mov
push
mov
xchg
clc
fmul
(bad)
inc
xor
ror
(bad)
gs
sub
cwde
inc
push
(bad)
aaa
in
fisubr
sbb
pop
mov
adc
mov
xchg
ss
push
mov
jge
aam
fild
mov
pushf
cld
mov
pop
fist
ret
daa
sbb
push
or
loop
(bad)
aad
es
(bad)
std
pusha
js
jnp
sahf
bound
inc
mov
sub
and
shl
push
jbe
xchg
in
push
push
mov
push
inc
mov
clc
mov
adc
or
mov
das
std
xor
ror
jmp
and
daa
xchg
jge
test
inc
jnp
push
pop
rol
push
mov
sub
cli
push
dec
xor
sbb
jmp
xlat
mov
push
popa
idiv
dec
jge
test
ret
loope
xor
sub
retf
adc
mov
pop
ret
fdiv
mov
push
frstor
xor
add
test
jle
dec
repz
pop
xchg
add
(bad)
int
and
xor
mov
jp
adc
fld
adc
test
xchg
popf
scas
sub
fdivr
in
pop
out
sub
jge
mov
(bad)
or
sahf
cmp
inc
mov
mov
pop
fwait
mov
jnp
mov
jnp
xchg
cmps
mov
pop
push
aad
dec
aaa
mov
lods
mov
lds
icebp
call
(bad)
mov
sar
or
nop
mov
in
ins
pop
call
add
pushf
mov
fwait
xchg
jno
(bad)
xor
jmp
cmp
data16
imul
mov
mov
pushf
jmp
mov
mov
or
call
and
pop
rcr
push
sti
in
out
ret
dec
repz
cli
lock
mov
pop
adc
mov
jle
cmps
xor
push
ror
pop
jno
les
inc
jae
push
mov
pop
cs
sbb
test
sub
clc
push
popa
cdq
sahf
in
mov
or
lahf
and
jge
(bad)
cmp
jne
imul
loop
push
jge
jg
ins
cmp
mov
(bad)
cmp
fwait
adc
outs
pop
test
mov
movs
(bad)
add
into
out
mov
clc
ins
lock
pop
add
(bad)
outs
loop
imul
cmp
aas
jno
lea
jmp
pop
pushf
repnz
push
lock
inc
mov
sahf
pop
mov
icebp
mov
adc
xor
mov
leave
imul
retf
outs
lahf
pop
cli
shr
je
cmp
cmovno
push
cmp
add
retf
cmps
xor
or
push
jne
add
imul
jp
out
ror
outs
loopne
int3
call
inc
dec
jo
mov
addr16
xchg
aad
adc
es
or
js
popa
stc
lea
ja
fstp
pop
xchg
(bad)
jmp
xchg
test
ficomp
jo
arpl
lods
adc
adc
arpl
or
ss
shr
int3
xor
fsubr
dec
ficomp
sub
cmp
mov
or
test
leave
or
dec
mov
enter
inc
add
sub
adc
repz
dec
jbe
xchg
xor
aas
pop
dec
pop
push
les
arpl
sbb
push
cli
and
(bad)
stos
mov
cs
adc
aad
jmp
pop
inc
scas
gs
push
call
gs
jle
mov
dec
cli
pop
rcl
inc
adc
out
dec
xchg
mov
cmp
jo
adc
ins
jle
dec
xchg
cmp
mov
and
fdivr
jg
jmp
ret
cmp
jns
ud1
(bad)
js
sub
js
dec
mov
in
imul
addr16
push
icebp
in
sub
stos
int3
std
std
outs
pushf
jmp
ja
adc
mov
retf
sub
xlat
loope
jnp
ds
and
imul
pushf
sub
sar
ds
xchg
cmp
adc
js
out
imul
aas
test
lds
or
pop
add
mov
dec
push
cmp
cwde
fwait
cmc
test
pop
call
(bad)
xchg
pop
add
inc
ror
cli
fist
dec
test
jmp
push
out
dec
fwait
inc
icebp
or
jle
pop
sahf
pop
mov
xchg
loop
nop
sti
aas
lea
adc
inc
leave
or
jb
(bad)
das
push
js
imul
push
cmp
push
movs
pop
pop
mov
push
adc
shl
jno
and
xor
push
push
pop
dec
sbb
or
cmc
loopne
pop
push
add
or
pusha
imul
mov
out
cwde
test
xchg
push
loopne
retf
inc
call
xor
stos
xor
adc
clc
sti
pop
je
mov
mov
dec
push
pop
mov
or
inc
pop
and
test
movs
pop
sbb
lods
ss
jmp
sbb
sar
push
fcmovu
imul
push
adc
xor
xor
sbb
int
fcomip
rol
pusha
ds
inc
jge
cwde
jnp
pop
mov
pop
ret
push
xor
and
div
shl
sbb
sbb
mov
cmp
fistp
gs
in
fwait
call
and
retw
add
xor
adc
pop
hlt
pushf
test
popf
lahf
pop
or
sub
cmps
jp
dec
pop
or
lods
aaa
dec
jmp
fsubr
test
std
ret
lock
xlat
adc
xor
jmp
shl
out
jmp
or
xchg
mov
out
mov
mov
xor
push
adc
pusha
xchg
sub
and
rcl
movs
mov
cmp
pusha
ins
inc
fst
test
mov
ss
(bad)
mov
adc
loopne
sbb
mov
add
(bad)
jae
dec
cs
jae
jg
push
retf
mov
(bad)
imul
inc
adc
cmps
mov
or
mov
cmp
ror
nop
lahf
sub
inc
out
out
mov
adc
cmc
loope
push
and
jns
or
xor
call
pop
icebp
sbb
mov
test
loope
mov
dec
js
and
stc
inc
lea
(bad)
xor
stos
adc
push
lds
movs
in
imul
test
jle
dec
push
pop
loopne
sahf
mov
pop
or
jnp
shl
stos
and
imul
aaa
push
jecxz
leave
cld
out
lods
xchg
mov
push
cld
adc
pop
xchg
push
test
jno
rcl
scas
jno
and
gs
mov
dec
add
dec
cs
inc
sar
and
jg
lods
sub
shl
xchg
mov
xchg
mov
loopne
push
xlat
add
mov
mov
xor
fstp
ss
cmps
mov
add
push
fadd
adc
lahf
retf
ins
push
pop
inc
add
js
lods
lahf
dec
inc
sti
mov
jo
icebp
inc
push
shl
hlt
addr16
retf
mov
lock
or
xchg
test
mov
fdiv
sbb
dec
jle
ficomp
push
pop
test
pop
int3
mov
aas
jns
in
cmp
cmps
ja
xlat
mov
data16
or
int3
cmp
cmc
or
adc
jbe
pusha
and
jmp
inc
mov
xchg
xchg
movs
push
push
xchg
daa
mov
movs
out
test
xchg
out
es
(bad)
mov
pop
sbb
push
pop
mov
cmp
scas
jbe
inc
jo
popa
push
mov
xchg
iret
mov
outs
or
xchg
test
and
out
and
loopne
clc
aad
fsubp
add
pop
pop
iret
xor
dec
jecxz
cdq
mov
cmp
dec
in
(bad)
sahf
std
inc
ja
add
fcom
sub
xchg
pop
push
push
movs
jae
sub
inc
jle
(bad)
xor
test
addr16
inc
fs
sbb
into
pop
imul
or
clc
inc
add
and
outs
cmp
mov
lea
or
lods
arpl
xchg
(bad)
stc
js
push
ror
sbb
test
arpl
or
or
in
pushf
push
cmp
fidiv
jae
sbb
xor
add
aad
fisubr
(bad)
cmc
or
push
push
sbb
loopne
and
inc
jne
(bad)
(bad)
cld
ret
and
(bad)
adc
cmp
push
and
add
mov
jo
push
ins
xor
lods
xchg
pop
int
call
cmp
mov
adc
mov
addr16
xchg
sub
test
mov
shl
cmovb
mov
ss
imul
repz
add
inc
cmp
int
(bad)
dec
leave
push
stos
out
jmp
lea
adc
iret
lods
(bad)
leave
clc
mov
push
mov
out
into
leave
test
inc
jo
sub
retf
sub
out
mov
push
movs
mov
icebp
xchg
dec
sub
pop
push
popf
ficomp
fucomip
and
imul
add
xor
and
rol
in
stos
mov
xchg
adc
or
ror
jbe
out
sbb
mov
repz
mov
mov
pop
push
mov
xchg
ja
cmps
mov
fistp
sbb
dec
pop
dec
mov
cmps
or
cli
sub
nop
test
or
test
lods
sahf
adc
or
fcomp
jmp
mov
inc
jne
jns
movs
push
jae
sub
cmp
movs
xchg
jo
fmul
add
(bad)
retf
cli
xchg
out
mov
mov
in
gs
jecxz
push
adc
in
aad
fild
pop
out
mov
ror
jo
xor
jl
lods
pushf
and
mov
jae
sbb
dec
sbb
call
in
xor
inc
cmp
in
push
pop
jge
dec
ror
retf
clc
or
cwde
dec
adc
mov
inc
jmp
(bad)
dec
mov
adc
outs
int
stc
cmps
fs
mov
dec
fldenv
sub
ret
xor
sar
adc
sti
fsub
pop
mov
repnz
sbb
adc
je
jg
out
pop
fwait
inc
(bad)
cmp
adc
movs
sbb
add
cmp
je
popa
pop
cmc
sbb
pop
cs
add
sub
and
add
xchg
xor
cmps
and
lods
mov
retf
xlat
test
into
ficom
add
cmp
push
hlt
cmp
out
inc
add
pop
mov
pop
ja
rcr
cmp
(bad)
lea
rol
dec
ret
adc
jmp
sub
rol
fnstsw
inc
adc
test
(bad)
sbb
sub
inc
sbb
adc
lock
sbb
or
dec
in
push
xor
push
sub
mov
cmp
cmc
pop
or
cmps
in
out
retf
mov
(bad)
std
mov
push
ins
mov
ss
or
pop
jl
adc
movs
imul
mov
jl
or
xor
xor
sbb
adc
xor
adc
fst
cmp
lods
jo
jmp
fst
(bad)
fcmovne
out
test
sbb
test
pop
mov
add
xchg
jne
iret
jge
neg
push
outs
out
mov
das
out
sub
add
and
movs
sub
nop
ds
loope
pusha
loop
cmp
popa
test
repz
fs
add
pop
mov
cwde
sub
lock
repz
or
ds
popa
aad
stos
lods
mov
pop
pushf
inc
rdpmc
inc
or
fs
stos
mov
cmp
clc
push
stos
jp
push
adc
push
and
pusha
popf
push
xchg
mov
out
shr
movs
jo
test
inc
mov
xchg
mov
in
sbb
xlat
lds
into
push
(bad)
mov
dec
aad
inc
popa
jl
adc
mov
(bad)
imul
pop
(bad)
nop
pop
mov
jecxz
xor
jmp
clc
add
ret
ret
(bad)
mov
xlat
or
jae
inc
mov
arpl
cdq
and
retf
ret
dec
adc
scas
sub
ror
or
data16
cmp
mov
das
cmp
hlt
mov
sub
pop
(bad)
mov
add
lods
xchg
leave
sub
xchg
fwait
jle
xor
out
add
push
call
add
out
out
in
cmp
ja
retf
mov
fisub
dec
xor
(bad)
dec
mov
lods
dec
jl
or
popf
popf
aas
int
or
push
adc
aad
ja
retf
jge
push
cmc
push
xor
jae
scas
hlt
pop
stos
jnp
push
rol
xchg
retf
inc
mov
inc
mov
ret
setb
push
movs
jo
and
or
rol
daa
and
add
fmul
(bad)
mov
push
or
movs
repz
inc
xchg
fadd
and
jl
movs
inc
jnp
lds
sbb
test
loopne
inc
mov
xlat
adc
cmps
arpl
dec
mov
ret
nop
jae
add
test
fdiv
jo
(bad)
sbb
(bad)
stos
and
cmp
lahf
rcr
and
adc
lock
mov
sub
mov
dec
mov
jmp
(bad)
sbb
pop
repnz
retf
mov
scas
jb
and
jmp
pop
push
lods
std
sar
imul
std
pop
mov
je
lds
ja
cmp
sub
aam
mov
mov
mov
fs
es
ins
sar
popf
add
add
and
inc
jmp
lods
aas
xor
adc
jmp
and
sahf
je
addr16
std
xor
leave
dec
div
mul
jecxz
fsub
in
mov
fcom
lahf
xor
push
popa
ss
ficomp
jmp
jo
sub
rol
imul
ficomp
inc
adc
dec
inc
mov
mov
jecxz
jle
xchg
scas
mov
fnstenv
pop
mov
icebp
inc
dec
outs
int
fwait
movs
or
cmp
sar
std
jle
add
shr
ins
jle
mov
nop
adc
out
out
dec
add
cmp
pop
out
xlat
add
aas
mov
xor
je
push
mov
shl
adc
xchg
xor
mov
outs
or
adc
mov
hlt
ss
jp
lods
mov
dec
test
cmps
test
mov
mov
cmc
jnp
xor
test
push
mov
aad
cmp
or
pop
mov
mov
addr16
pop
out
xchg
jp
cmps
sub
inc
add
icebp
mov
ds
rcl
jmp
inc
mov
mov
xlat
mov
mov
xchg
leave
mov
add
pop
arpl
and
lds
inc
leave
pop
inc
jnp
jo
addr16
pop
inc
mov
xchg
inc
(bad)
push
xchg
jge
loop
inc
adc
cld
lds
fwait
adc
test
pop
dec
in
push
ds
in
mov
xor
aaa
sbb
stc
call
test
ret
sti
dec
in
xchg
push
bound
xchg
cmp
xchg
lds
mov
movs
call
mov
inc
push
es
push
adc
lds
push
call
ret
push
push
repnz
jne
xor
sar
dec
rep
sub
mov
xor
out
mov
das
aam
or
jnp
xor
jae
lods
xchg
fsubp
fisub
pusha
imul
mov
setge
cmps
ret
dec
rcl
dec
cwde
call
je
out
test
outs
push
and
jmp
mov
inc
std
sub
add
js
stc
jp
jl
inc
(bad)
(bad)
jmp
mov
fbld
sub
stc
sar
dec
or
sbb
xchg
mov
bound
call
popf
sub
jo
retf
aas
fnstcw
scas
cmps
and
mov
mov
shl
lea
jns
ds
xor
mov
clc
sub
and
dec
xchg
dec
sub
mov
or
loop
xchg
es
mov
and
xchg
push
fst
cwde
pushf
xchg
sti
inc
in
cwde
icebp
cld
jle
aaa
(bad)
and
sahf
outs
jns
and
push
push
push
hlt
adc
jo
or
gs
(bad)
sbb
or
xchg
xchg
dec
sbb
xor
repnz
adc
mov
xor
push
cmps
adc
adc
and
es
fiadd
inc
cmc
fld
jl
xor
adc
push
mov
es
je
sbb
aaa
pop
call
les
out
add
mov
and
pop
xor
mov
sbb
aas
sbb
dec
js
dec
adc
les
cwde
mov
fst
ins
popa
adc
nop
mov
ud2
mov
popa
in
ret
jns
and
lahf
daa
rol
aad
xor
push
sahf
push
xchg
out
xor
mov
ret
push
sub
adc
scas
aad
jge
sub
cmps
in
add
sti
mov
pop
or
and
jecxz
xchg
push
inc
loope
ds
adc
mov
adc
in
add
mov
ret
pop
push
cmc
and
push
data16
ss
sbb
jmp
aad
sub
adc
jne
cs
arpl
pop
sub
test
mov
popa
dec
and
call
mov
les
adc
fisub
push
mov
ins
jno
cmp
scas
addr16
xor
scas
pop
jae
stos
sbb
inc
ins
mov
sar
fiadd
fwait
jp
push
push
ins
cmps
cli
inc
adc
dec
or
push
sar
inc
add
push
imul
jnp
xchg
imul
add
or
pop
dec
test
fld
push
mov
loopne
adc
gs
fwait
sbb
mov
and
push
lds
jmp
push
push
js
and
scas
shl
sbb
imul
loop
das
cs
fdiv
adc
fstp
jae
xor
pop
push
sub
imul
xchg
inc
sub
mov
loop
xor
aaa
jecxz
sbb
jns
mov
add
and
repnz
icebp
fs
mov
ret
sbb
fadd
cli
cmp
rcl
call
inc
fild
adc
xor
cmp
and
movs
push
dec
into
push
cmp
outs
xchg
cmc
test
mov
loopne
pop
push
sbb
mov
pop
jnp
or
or
mov
and
mov
lods
out
mov
rcl
push
in
es
xor
or
std
jle
jl
adc
and
push
add
inc
out
mov
or
stc
xchg
cmps
lock
dec
(bad)
fcomp
mov
and
sub
out
and
sub
or
loop
inc
xor
xchg
add
out
fucom
outs
inc
xor
jno
push
test
lods
cld
pop
push
sbb
rcr
lock
neg
xchg
sbb
mov
sbb
mov
repnz
(bad)
cmps
movs
cwde
pop
xor
sbb
add
xchg
push
inc
xchg
sbb
add
out
imul
leave
addr16
retf
movs
and
scas
xchg
movs
push
ficomp
mov
cdq
xchg
jp
inc
xchg
sub
sbb
mov
imul
inc
hlt
addr16
xchg
dec
adc
inc
jo
jo
cmps
ins
cmp
adc
push
mov
xor
mov
dec
xchg
retf
dec
jbe
and
pop
mov
add
pop
addr16
daa
shl
mov
rsqrtps
sbb
retf
xor
mov
scas
sbb
and
dec
sbb
js
inc
mov
dec
and
inc
xor
inc
fld
sub
and
xlat
in
dec
lahf
aad
xchg
pop
cmp
es
xchg
das
ins
ins
jb
cmp
sub
gs
fnsave
fcomp
sahf
dec
cmp
pop
and
mov
and
movs
xor
push
pop
add
nop
lds
dec
inc
cmc
(bad)
cmps
scas
push
jb
int
inc
push
push
bound
in
ins
jae
hlt
jb
std
repnz
jno
sbb
movs
fist
addr16
sar
mov
aad
cmp
mov
daa
sbb
outs
push
aad
sub
ror
mov
scas
push
pusha
cmps
mov
add
call
fst
mov
push
mov
jae
test
rcr
pop
loope
xchg
cmp
adc
mov
sub
or
ins
cmp
fs
es
xchg
int
scas
or
dec
push
test
retf
jmp
or
addr16
adc
inc
pop
or
mov
out
dec
(bad)
cmc
fnstenv
aaa
xchg
jg
ret
or
std
pop
repz
sahf
inc
adc
cmps
xor
les
mov
pop
mov
pop
xchg
addr16
and
mov
outs
test
addr16
bound
inc
push
(bad)
in
jecxz
xchg
sub
mov
xor
mov
sub
sub
test
jo
out
in
in
and
fs
mov
rcr
in
sub
retf
push
pop
pop
jae
test
xor
inc
adc
xor
imul
loop
mov
inc
fwait
and
jmp
into
lds
shl
xor
xor
hlt
add
(bad)
jo
stos
inc
cwde
inc
add
dec
rol
inc
adc
jmp
pop
xor
imul
adc
cmp
retf
test
mov
or
bound
jmp
xlat
outs
inc
mov
lea
dec
(bad)
sbb
sbb
adc
stc
jp
jecxz
or
cli
mov
inc
lods
loope
mov
cmp
and
aad
cld
(bad)
sub
dec
mov
mov
sbb
xor
xor
retf
jne
inc
shl
scas
add
fisubr
out
test
mov
pop
lock
jge
xchg
and
repz
shl
cmc
jo
add
shl
jns
adc
jb
jae
xor
push
add
out
push
mov
ja
mov
dec
xchg
cmp
stos
sti
inc
leave
fs
call
retf
or
fsubr
and
pop
xchg
xchg
dec
ins
popf
jae
cmp
sub
push
lea
(bad)
iret
fs
xlat
xor
cmps
icebp
call
xlat
ror
push
pop
int
mov
and
xor
inc
jecxz
out
pop
cld
and
xchg
or
mov
mov
std
xor
pop
lods
jle
int
pop
shr
push
call
xlat
xchg
cmp
jp
int
lods
jae
adc
stos
fcom
xchg
pop
ret
loop
pop
jno
or
das
inc
(bad)
fisub
add
add
popa
lods
fild
jo
jne
icebp
mov
ror
es
mov
test
dec
mov
sbb
test
jl
jle
scas
ja
jmp
(bad)
jb
out
dec
call
rcl
scas
icebp
or
stos
(bad)
jnp
mov
mov
imul
mov
or
sahf
cmps
test
jo
leave
ror
scas
adc
mov
lea
push
inc
mov
icebp
jmp
outs
fidiv
pop
int
fistp
cdq
pop
or
xchg
dec
iret
shr
fst
lock
cmps
scas
adc
xchg
xchg
cli
movs
movs
lgs
cld
stos
mov
inc
aam
inc
xchg
fcomp
rcl
div
pop
cmps
mov
scas
iret
xor
ins
data16
push
stos
cld
icebp
sub
push
aaa
ins
arpl
out
or
mov
mov
push
inc
cmp
in
shl
fwait
mov
enter
mov
pop
push
jnp
out
ins
inc
adc
ret
dec
inc
imul
sub
ret
(bad)
cmp
or
inc
inc
xlat
nop
loopne
bound
add
or
mov
out
add
sbb
mov
mov
or
iret
cmc
adc
pop
sub
push
push
inc
imul
push
or
jge
jmp
adc
or
jl
or
mov
out
mov
cmps
mov
mov
aaa
xchg
dec
push
mov
vpcmpgtb
aam
inc
mov
imul
jns
pop
or
cdq
pop
cdq
jmp
mov
retf
in
adc
fiadd
btr
call
or
xchg
xlat
es
sub
out
bound
sub
sub
mov
mov
ds
das
out
outs
and
and
xchg
loope
mov
jg
mov
scas
push
push
pop
inc
sbb
icebp
pop
jo
pop
shl
adc
sti
sub
or
mov
stos
pop
cmp
cmp
jmp
cs
mov
mov
mov
pop
push
jne
cmp
and
mov
pop
imul
cwde
ins
retf
and
cmp
ins
xchg
lock
jns
daa
fs
imul
nop
cmp
scas
sbb
shl
jp
cwde
iret
adc
pop
mov
inc
add
test
pop
stc
xchg
scas
(bad)
std
ret
dec
fimul
fwait
aad
loopne
sti
jo
lea
gs
mov
sub
cdq
js
mov
cmc
es
mov
gs
xchg
mov
pop
push
mov
movs
ret
loope
jae
inc
mov
dec
jle
out
dec
cdq
imul
sbb
pop
repnz
in
push
adc
and
push
xor
dec
jmp
fsubr
mov
inc
adc
(bad)
jl
sbb
dec
std
adc
dec
and
mov
shl
cmp
pop
fs
mov
mov
out
sbb
dec
add
xor
mov
hlt
call
mov
xchg
ins
cmp
call
dec
fprem1
in
xor
cmp
mov
xor
or
shr
xchg
push
jo
mov
jnp
push
inc
cmps
lods
jae
inc
lea
sti
imul
je
or
ret
loope
dec
jb
repz
dec
lea
dec
xchg
jae
sti
div
dec
add
nop
test
ins
lods
imul
loopne
aam
rcr
call
jo
push
and
addr16
(bad)
sar
out
das
xchg
js
or
jbe
mov
xchg
mov
cmps
xor
xchg
lods
ror
xchg
mov
and
bound
jecxz
cmc
psubw
sbb
sub
cmp
pop
inc
mov
xor
sbb
mov
mov
jno
sbb
cli
fs
aam
(bad)
nop
inc
ret
mov
and
call
xchg
or
pushf
cmp
mov
xchg
movs
cmp
xchg
test
xor
cmps
push
ss
adc
rcr
jge
sub
sbb
in
test
inc
dec
mov
jmp
jp
adc
push
or
jb
popa
gs
shr
clc
popa
or
add
and
mov
in
push
movs
push
mov
inc
popf
dec
stc
push
or
add
xor
mov
ds
mov
jae
inc
or
sub
cmp
popa
loope
mov
adc
add
add
push
add
cs
mov
jge
mov
fist
mov
adc
bound
adc
stos
mov
pop
xor
pop
movs
sbb
mov
pop
xor
mov
push
mov
xor
sub
movs
test
inc
cmps
sbb
cmp
sbb
daa
inc
repnz
imul
pop
push
repz
adc
cmps
xor
inc
xor
fild
dec
stc
cmp
inc
jp
inc
popa
cld
enter
cld
pop
mov
or
cmps
push
std
retf
clc
sbb
mov
popa
adc
repz
fld
dec
ss
mov
repnz
and
popf
in
and
iret
mov
sub
mov
fist
cvttps2pi
jg
(bad)
cld
nop
sbb
and
sbb
add
lods
add
arpl
mov
jbe
push
aaa
inc
mov
cmp
outs
in
retf
out
mov
add
sbb
push
mov
or
idiv
pusha
out
xchg
pop
pop
es
inc
test
test
cld
add
inc
lock
adc
dec
mov
push
fs
inc
repz
xlat
jp
ins
push
test
ins
dec
cmp
fmul
pop
dec
dec
adc
aaa
out
or
xchg
jns
mov
(bad)
iret
mov
aam
(bad)
push
shl
ret
arpl
jmp
xchg
jecxz
mov
xor
add
and
stc
jl
jg
cmps
dec
call
pop
dec
stos
jmp
bound
sbb
push
xchg
xchg
mov
ins
(bad)
ins
ror
add
sbb
xor
pop
inc
xchg
sub
mov
and
pop
push
xchg
mov
mov
jmp
xchg
push
and
ds
inc
mov
mov
not
shr
pop
add
inc
sub
sbb
add
dec
push
mov
pop
mov
leave
dec
lahf
popa
out
lods
ja
pop
mov
inc
cmp
xor
mov
fdivr
stc
sbb
pop
xchg
dec
inc
cmps
jmp
loopne
cmp
jbe
movs
cdq
jle
fcmovb
inc
jb
jg
add
cmp
imul
ins
inc
xor
(bad)
mov
mov
mov
jno
(bad)
push
xchg
jl
xchg
in
imul
repz
push
inc
aam
and
je
jb
cmp
(bad)
lods
(bad)
stos
into
cwde
xor
jbe
mov
test
mov
sbb
sub
jg
pop
out
repz
movs
push
pop
icebp
xor
mov
shl
jg
jecxz
lods
mov
scas
cmps
test
clc
loop
cmps
movs
or
jnp
jle
inc
jns
cmps
int
cmps
or
cld
and
pusha
arpl
dec
mov
mov
push
stos
sub
fadd
mov
stc
xor
xchg
jmp
cmps
leave
sbb
xchg
adc
cmp
inc
cmp
and
loopne
mov
js
xor
(bad)
loopne
call
sahf
push
inc
in
mov
dec
mov
fs
cdq
ja
ins
bound
push
mov
pop
iret
fldenv
pop
aam
repnz
scas
pusha
stc
jmp
jne
xchg
adc
data16
inc
jp
cmp
jp
(bad)
(bad)
pop
je
push
jg
test
xor
aas
xchg
or
pop
xlat
out
int3
push
dec
ins
push
xchg
iret
imul
jmp
(bad)
scas
push
inc
cld
push
push
dec
ss
inc
in
adc
fisttp
mov
dec
dec
cmps
mov
push
dec
add
lods
xor
out
xchg
xchg
js
(bad)
fidivr
and
mov
cmp
mov
cmp
lahf
in
pop
mov
jo
leave
int3
inc
lds
fidiv
cmp
out
stos
(bad)
shl
cmp
or
out
test
popa
add
das
sahf
xlat
jne
pop
shl
pop
in
les
rcl
movs
jno
adc
and
mov
jecxz
mov
jle
ss
in
add
sbb
adc
xlat
repnz
jle
fistp
sub
stos
jg
mov
imul
xchg
jecxz
sub
sbb
loopne
push
out
(bad)
fwait
xchg
leave
nop
mov
mov
jp
out
in
lds
inc
pop
test
sahf
stos
cld
add
ret
inc
dec
loopne
fistp
dec
rol
dec
push
rol
test
adc
mov
xchg
pop
cmp
jmp
jmp
xor
nop
cmp
mov
(bad)
aam
pusha
sbb
mov
in
mov
out
adc
jmp
mov
jbe
mov
rcl
iret
lahf
push
jns
out
icebp
jae
mov
xchg
ins
mov
or
sbb
mov
and
mov
inc
pusha
addr16
push
lods
(bad)
push
push
cli
les
aad
ja
mov
sub
pusha
and
xchg
inc
int
fcomp
out
lods
dec
mov
cmc
jae
push
arpl
push
test
mov
imul
jmp
adc
aas
mov
ret
movs
call
scas
and
rcl
aad
mov
icebp
jmp
push
clc
and
jge
jb
mov
cmovae
ret
mov
jnp
or
cdq
das
jl
in
sub
cmps
fimul
inc
xchg
adc
mov
aaa
std
pop
xor
pop
fidivr
push
pop
inc
repnz
jp
lods
mov
sbb
cmp
cmp
pop
repnz
sbb
xor
bound
scas
out
jo
es
das
mov
dec
test
ss
jne
and
pop
dec
xchg
inc
inc
add
jl
mov
mov
xchg
inc
or
jbe
xlat
pop
rcr
sub
or
mov
or
rcr
std
xor
leave
dec
adc
jle
js
mov
push
int
mov
gs
cwde
mov
repnz
add
lods
ja
nop
lock
fmul
xchg
cmp
sub
push
sbb
and
pop
mov
pop
jmp
push
inc
mov
adc
add
fucomip
cmp
popf
cmps
mul
out
addr16
jns
lods
pop
pminub
or
sub
sub
shr
repnz
sbb
adc
add
in
std
add
ds
cs
sbb
out
jmp
lahf
in
jg
arpl
clc
mov
jecxz
fcomp
out
fld
jns
ror
cmp
test
fstp
pop
add
cmp
xor
mov
pop
ror
mov
xor
adc
push
xor
repnz
in
ret
push
inc
mov
xor
repz
and
mov
sbb
cmc
sub
pop
mov
jns
sub
sub
call
xchg
fwait
sbb
mov
outs
test
adc
sub
add
adc
jle
jmp
fcomp
daa
mov
js
and
xor
mov
ins
xchg
xor
ja
mov
pop
fisub
out
mov
(bad)
fistp
xchg
loop
sbb
scas
stos
repnz
pusha
jg
adc
fcom
jmp
mov
sahf
mov
movs
adc
adc
test
sbb
cmps
popa
call
hlt
sbb
fnstcw
cs
jle
push
cmp
fwait
jo
cmc
mov
inc
movs
cmp
dec
cld
ds
jno
ss
nop
mov
stos
imul
xor
lock
mov
push
pop
add
inc
(bad)
popa
inc
or
enter
shr
je
inc
xchg
mov
lds
xchg
jle
out
pop
xor
adc
pop
xor
aaa
(bad)
sar
mov
push
dec
xchg
mov
mov
sub
mov
jg
in
je
add
sub
int
lea
out
mov
int
xchg
xchg
imul
test
mov
cmp
outs
lods
(bad)
sbb
jnp
sub
xchg
xor
or
mov
xchg
shl
xchg
jne
dec
outs
xchg
xchg
je
fldenv
jmp
xor
push
mov
inc
push
dec
cmp
out
push
push
ss
fdivr
inc
inc
mov
adc
in
(bad)
es
xchg
inc
xor
jb
fcmovne
pop
outs
cmp
pop
or
lahf
and
js
and
gs
sbb
not
sar
cld
sahf
clc
movs
dec
retf
imul
retf
jl
pop
or
sbb
add
adc
leave
nop
or
es
xor
cmc
and
inc
test
bound
movs
fcomi
xor
inc
jmp
sbb
loope
into
inc
sbb
lock
lock
mov
jg
test
in
in
fdivr
setae
mov
mov
inc
in
sub
xchg
adc
or
jb
fsubr
jecxz
lods
dec
inc
xchg
(bad)
mov
fs
popf
and
dec
dec
sbb
fnstsw
fwait
sti
pop
stos
mov
loop
out
std
jnp
addr16
ret
repz
ja
cmps
scas
add
mov
cmp
dec
mov
cwde
ds
pop
stos
icebp
jb
test
sub
retf
pop
nop
and
adc
push
xor
push
fwait
div
cmp
in
xor
ss
jl
(bad)
std
pop
das
and
test
sub
sub
lds
cmp
fucomp
adc
cmps
addr16
pop
or
pop
out
(bad)
or
add
ficomp
mov
shl
xor
sub
push
jg
(bad)
(bad)
dec
stos
movs
sub
push
sub
and
and
adc
adc
mov
lock
mov
push
shl
dec
cld
xchg
popf
movs
ror
es
cmp
dec
add
or
cmp
(bad)
push
stc
lods
mov
fisub
mov
in
xchg
adc
mov
int3
dec
jle
nop
sbb
test
mov
daa
ret
mov
loope
fnclex
jbe
jl
xor
fwait
xlat
repnz
adc
dec
std
or
aam
jmp
int
loopne
mov
retf
xchg
(bad)
jmp
adc
add
jmp
mov
aaa
call
scas
ss
fild
lahf
pop
xor
sbb
jle
dec
dec
imul
std
mov
retf
sbb
stos
xchg
dec
imul
jno
out
mov
sub
mov
ss
xor
jl
and
retf
dec
xchg
std
dec
test
or
dec
popa
(bad)
jno
mov
mov
gs
push
sub
lock
mov
ror
popa
outs
cmp
fwait
cli
inc
pop
and
adc
xor
mov
in
mov
popf
mov
and
dec
fiadd
push
or
test
cmp
inc
aam
rcr
bound
and
sub
sub
dec
dec
jbe
sbb
pop
fdivr
repnz
sub
imul
fsubr
rcr
(bad)
sub
outs
addr16
mov
and
aad
fmul
cmp
jb
add
cmc
shl
cwde
fistp
in
sbb
dec
sahf
cmp
inc
mov
and
ss
push
add
aam
imul
js
lock
cmp
pop
(bad)
jmp
mov
or
and
inc
jne
push
sbb
fdivr
pop
das
out
mov
cmp
fs
imul
adc
cwde
ficom
adc
mov
clc
loopne
or
dec
pop
lds
shl
(bad)
xchg
aam
push
mov
mov
jo
sbb
or
hlt
mov
jnp
lds
adc
inc
btr
add
clc
push
loope
repz
xchg
pop
imul
rcr
push
mov
jno
(bad)
add
(bad)
cmc
xchg
scas
hlt
push
cmp
xchg
leave
mov
call
and
sbb
mov
out
cmp
push
mov
mov
pop
jmp
loopne
mov
and
pop
cmovle
and
cmc
test
add
xchg
loop
adc
and
pop
pop
sar
sbb
clc
push
pop
push
cmp
sbb
and
movs
xchg
mov
test
sub
aad
repz
xor
or
and
call
neg
repz
jo
xor
dec
mov
push
jnp
push
repz
xchg
ficomp
xchg
out
push
jmp
jge
fsub
push
and
cmp
imul
int
xchg
or
aam
sbb
aas
lods
inc
or
stc
lock
sbb
push
stc
and
cmp
into
imul
jg
bound
fisttp
jp
dec
sti
push
and
jp
cmps
ss
mov
shr
iret
es
aas
bound
adc
add
xlat
jne
dec
call
pop
pop
ja
fst
push
lods
adc
jae
(bad)
jmp
int
xchg
inc
out
les
sti
add
mov
push
and
push
lods
pop
das
loop
jae
jmp
jb
icebp
in
mov
jo
mov
ret
xchg
scas
cld
mov
rol
popf
push
inc
cmp
xor
bound
and
jg
xcrypt-cbc
cmps
adc
stos
or
das
xchg
aad
add
das
(bad)
mov
clc
push
sub
cdq
cwde
scas
add
in
mov
sahf
imul
aad
scas
or
ror
mov
sub
add
cmp
jle
lods
add
popf
mov
pop
cmc
sub
in
in
pushf
lods
movs
jo
frstor
pushf
cdq
jle
addr16
xchg
jl
lock
(bad)
mov
jmp
jg
scas
mov
pop
js
in
leave
sbb
ins
xchg
lahf
or
mov
out
inc
cld
aaa
out
data16
je
(bad)
cmps
lock
jo
xor
fs
ss
in
dec
in
xor
jle
call
sub
popa
jl
aad
ja
pop
mov
xchg
push
dec
call
pop
loopne
add
inc
int
ins
inc
jb
push
aam
mov
sub
inc
lea
loope
mov
cmp
xchg
cmp
jmp
dec
jb
add
and
mov
retf
fimul
dec
pop
dec
gs
ins
(bad)
jo
jns
test
repz
xchg
pusha
in
mov
mul
or
cmc
(bad)
mov
jle
lock
pop
cld
sbb
xor
xchg
stos
ins
push
or
mul
in
es
add
jae
sbb
mov
sbb
bound
lods
aaa
into
fistp
dec
add
aaa
or
test
sbb
xchg
(bad)
push
add
xchg
into
fistp
les
xchg
mov
fst
pop
lea
test
mov
aad
cwde
sub
stos
in
jb
push
cmovae
out
jnp
xchg
sbb
xchg
inc
dec
jb
imul
shl
sub
cli
mov
dec
and
aam
scas
in
push
jge
enter
ss
or
ins
inc
pop
dec
les
std
mov
fild
pop
addr16
pop
test
daa
(bad)
mov
push
call
add
sbb
adc
fimul
mov
and
pop
push
inc
xor
inc
sub
in
outs
sti
lock
jae
mov
ret
jne
mov
clc
int3
push
dec
push
push
mov
mov
jmp
jnp
jmp
scas
mov
xor
inc
test
push
call
jb
mov
inc
jno
pop
(bad)
inc
imul
and
add
stc
push
repz
loop
das
inc
adc
add
cmp
pop
fdivp
repz
mov
add
jmp
mov
sub
xor
jp
mov
add
ins
mov
(bad)
movs
adc
inc
pop
lods
les
into
add
outs
jmp
xchg
test
jbe
call
aas
lods
sbb
aas
cmp
push
aad
aas
scas
pop
(bad)
jae
adc
test
div
xor
aam
dec
jmp
mov
sbb
cli
pop
add
pop
pop
cmp
pop
in
cli
mov
pop
xchg
mov
in
pop
add
scas
xchg
mov
fidivr
es
inc
or
fdiv
mov
es
inc
mov
inc
test
call
pop
push
add
pusha
movs
xor
and
ficomp
test
pop
loop
cmp
mov
(bad)
mov
neg
rcr
sub
scas
call
sub
jmp
dec
sub
repnz
mov
les
dec
sbb
push
mov
scas
mov
mov
push
sub
pop
stos
out
pop
out
push
fyl2x
cmp
cmp
sti
xlat
push
cmp
pop
loopne
xchg
test
arpl
jnp
cmc
mov
mov
or
adc
adc
push
pop
sbb
push
mov
(bad)
je
in
and
jbe
xchg
clc
pop
loope
xor
iret
dec
(bad)
cld
jne
pop
and
mov
dec
rcr
or
call
jae
adc
jle
dec
sub
push
inc
sahf
sbb
mov
in
dec
cmp
dec
jp
icebp
pop
test
add
mov
aaa
movs
mov
neg
pushf
imul
mov
daa
movs
mov
retf
jmp
and
dec
movs
(bad)
nop
jns
add
mov
sahf
jmp
inc
mov
pop
icebp
test
mov
xchg
fisub
push
not
jmp
(bad)
loopne
test
idiv
jmp
test
xor
dec
push
xchg
int3
inc
pop
mov
pop
popa
and
arpl
xlat
xchg
cdq
test
in
or
jmp
xchg
(bad)
add
pop
pop
mov
dec
add
pushf
ds
pop
sub
push
ror
leave
mov
int
mov
jg
ds
fcomp
mov
outs
inc
cmp
mov
mov
fwait
dec
inc
test
fldcw
push
inc
mov
repnz
mov
pop
cmc
push
gs
push
cmp
call
mov
and
pop
mov
lock
dec
mov
xchg
mov
or
xchg
enter
push
(bad)
fdivr
mov
sub
add
neg
mov
or
mov
data16
sahf
jnp
push
jns
imul
(bad)
aas
pop
and
ret
mov
sub
sub
inc
sub
imul
ins
cmp
paddq
push
fimul
inc
push
cld
(bad)
in
mov
shr
mov
js
inc
mul
cmp
cdq
das
xor
cmps
adc
nop
or
dec
repz
push
addr16
repz
push
lahf
push
jb
push
xor
pop
mov
push
iret
je
add
shr
dec
iret
dec
data16
outs
test
cmp
and
pop
xor
and
push
scas
iret
icebp
mov
xchg
leave
stos
mov
pushf
cs
out
dec
imul
scas
mov
pop
test
add
cmp
mov
xchg
xchg
dec
mov
sub
jp
jg
aas
popf
or
pop
lods
fbstp
ja
push
retf
jo
pop
in
pusha
cmp
inc
pop
jmp
out
enter
push
or
cmps
xor
sub
fnsave
mov
push
test
xchg
xchg
push
aaa
add
jge
mov
jge
inc
dec
ins
sub
inc
popa
xchg
jecxz
loop
cmp
repz
(bad)
daa
sub
jne
ret
fsub
pop
push
daa
lods
adc
fcmovnb
push
xor
xlat
push
gs
lods
xor
rcr
je
and
stos
pop
dec
mov
(bad)
rol
jb
jns
push
push
inc
aas
lea
xchg
adc
iret
push
mov
mov
dec
lea
mov
aad
xor
xchg
add
push
add
test
pop
(bad)
outs
or
mov
lea
lea
mov
mov
repz
jecxz
and
adc
xchg
sub
jg
jmp
or
mov
es
push
sbb
dec
shl
jg
and
xchg
outs
jnp
push
mov
cdq
ret
in
scas
vcvtpd2ps
xchg
mov
pop
retf
pop
cld
inc
in
mov
cdq
mov
cmc
push
cmp
mov
repz
mov
sub
cmps
out
jmp
add
enter
or
adc
scas
add
push
dec
(bad)
shl
test
push
adc
movs
nop
xchg
fldcw
sub
cli
call
inc
push
inc
inc
or
inc
sub
inc
test
lods
inc
sub
mov
cmps
add
cmp
push
and
idiv
cld
imul
pop
movs
sbb
mov
jge
imul
add
ss
or
xor
pop
adc
in
cmps
inc
dec
xor
jo
inc
dec
push
mov
mov
push
ins
repz
cli
xchg
fsub
push
dec
in
test
ffreep
and
inc
pop
cmp
call
cmp
push
cmps
mov
leave
cmp
test
push
leave
inc
in
mov
xor
fwait
add
jb
es
or
dec
or
add
fwait
mov
xchg
iret
daa
cli
lock
inc
dec
cld
mov
pop
cmp
je
jns
sub
xor
dec
ret
mov
pop
and
enter
imul
xchg
push
(bad)
sbb
xor
ficom
sti
xchg
mov
retf
ffreep
pmulhw
inc
not
jae
cmps
call
retf
loopne
arpl
adc
jae
test
cmp
xor
inc
jmp
push
gs
mov
hlt
daa
dec
les
mov
adc
mov
loope
jge
jle
add
nop
add
and
out
and
mov
mov
xor
sub
push
nop
pop
pusha
add
mov
mov
mov
nop
nop
xor
jne
scas
xor
and
xchg
xor
xor
setg
dec
das
fld
xchg
jno
enter
sbb
sub
dec
les
lea
dec
fwait
outs
test
hlt
or
loopne
fucom
ins
fcomp
mov
xor
fldcw
jl
loop
out
inc
dec
fcomp
repz
push
aad
sbb
jne
and
cmp
scas
lahf
pop
pop
rcr
rol
ja
aad
add
pusha
or
xor
or
inc
fld
jno
sub
or
jge
es
adc
cmp
ins
cmp
pusha
xor
xchg
lds
pop
inc
jmp
push
leave
int3
call
xchg
or
mov
loopne
xor
add
xchg
pop
stos
push
jl
cmp
add
or
scas
push
cwde
add
jle
stos
pop
(bad)
in
test
test
jno
sbb
mov
mov
bound
es
sahf
push
add
nop
mov
pop
cwde
fiadd
sbb
sbb
mov
cmc
and
xchg
call
aaa
fadd
add
ja
add
mov
repnz
je
in
popa
in
jno
dec
test
sbb
scas
sbb
test
arpl
xor
xlat
loopne
adc
mov
cli
push
push
xor
outs
data16
leave
xlat
sub
add
pop
leave
sbb
mov
sti
pop
ror
mov
sbb
mov
js
movs
push
pushf
inc
mov
xchg
scas
lahf
(bad)
inc
loope
jmp
cmp
mov
icebp
push
push
ja
pushf
sub
test
inc
cs
in
fmul
jnp
or
xor
push
add
add
xor
xor
sahf
jmp
pop
cmp
shl
std
or
rcr
bound
mov
push
sbb
cmps
inc
popf
xchg
mov
pop
sub
fwait
jne
sbb
les
dec
xor
jmp
pop
push
shl
xchg
sbb
loope
xor
jg
and
mov
jmp
inc
and
and
xor
in
bound
imul
jmp
dec
addr16
inc
push
pop
and
cmp
mov
aaa
push
fidivr
test
sub
jns
xlat
cld
or
aas
mov
aas
lods
shl
jne
mov
cmp
js
pop
retf
add
rol
cwde
xor
mov
fst
cld
inc
in
jne
scas
test
(bad)
and
lods
xchg
retf
shl
sbb
push
rcr
add
sysexit
xor
fcomp
and
stos
test
test
jns
pop
cmp
outs
jp
es
mov
sti
retf
call
scas
and
sbb
jge
or
mov
add
(bad)
inc
fdiv
xchg
loope
push
rcl
mov
call
cdq
hlt
inc
jmp
mov
lock
(bad)
pop
or
pop
add
pop
dec
mov
dec
mov
mov
pop
nop
xchg
xor
pop
inc
sbb
jns
hlt
das
int3
adc
loop
adc
cdq
jp
cmp
add
mov
jg
jne
test
and
movs
(bad)
push
jl
cs
enter
sbb
pop
mov
and
stos
fld
addr16
dec
in
out
mov
out
and
cwde
leave
dec
fst
es
iret
(bad)
enter
fwait
pop
pop
sbb
in
int
add
adc
sbb
sbb
mov
int3
or
and
xchg
call
(bad)
aas
icebp
lds
in
test
call
sahf
movs
movs
ins
and
sbb
mov
xlat
stos
popa
mov
stc
sbb
shl
mov
retf
jge
mov
ins
dec
(bad)
rcl
cmp
shl
adc
call
cld
cld
sbb
test
xchg
(bad)
movs
mov
dec
and
add
retf
hlt
or
or
and
repnz
jp
sbb
jno
push
(bad)
in
push
or
sub
sbb
xor
jecxz
fcom
daa
call
into
loop
dec
jne
cmp
or
push
ss
(bad)
out
pop
out
stos
jbe
ds
loope
dec
enter
add
cmp
(bad)
cmps
jno
push
mov
into
adc
xor
fmul
mov
gs
test
adc
and
mov
dec
mov
pop
imul
xor
jo
sub
sahf
jnp
jns
dec
arpl
out
shl
sbb
cli
push
mov
imul
in
jmp
iret
jge
cwde
fcomp
je
fdiv
daa
xor
je
sar
xchg
or
mov
je
mov
inc
gs
and
add
(bad)
int
out
inc
pop
sbb
cld
adc
jmp
stos
jnp
or
inc
fs
sub
xor
repnz
jne
ins
leave
in
icebp
dec
jle
xchg
push
scas
lods
push
xchg
dec
nop
fisubr
pop
jmp
mov
aaa
push
ss
loop
mov
jno
mov
lea
aas
mov
xchg
inc
mov
mov
lea
ja
fdivr
mov
jns
add
call
test
idiv
aas
and
xor
fnstsw
adc
lea
push
push
ins
sar
sar
dec
cs
arpl
call
sbb
nop
jno
shr
adc
not
sbb
cmps
push
dec
jg
(bad)
cmps
call
xor
mov
out
pop
sar
add
xor
fs
out
ret
cmp
in
jg
push
dec
dec
(bad)
in
lahf
test
mov
repz
pop
xchg
mov
push
(bad)
mov
lds
rol
daa
cmp
out
les
jb
pop
daa
jmp
and
fneni(8087
and
adc
idiv
mov
xchg
int
cli
and
movs
cmp
(bad)
cmp
movsx
outs
pop
sbb
push
and
push
sbb
mov
push
imul
dec
cmp
inc
(bad)
stos
test
in
les
xor
stos
sti
xor
std
arpl
cmp
retf
lock
bound
call
sub
pusha
in
xchg
jo
xlat
adc
dec
sbb
movs
int3
shl
xor
pop
sahf
or
mov
cmp
adc
lahf
in
(bad)
pop
ror
not
and
ins
cld
inc
jne
inc
out
fs
cmps
ins
jl
(bad)
sub
dec
mov
xlat
test
push
popf
inc
into
push
xchg
xchg
sub
mov
stc
xor
outs
lods
jge
mov
xor
movs
pop
pop
bound
xor
fstp
mov
mov
repnz
jne
adc
fsub
js
dec
sti
pop
add
ds
int
(bad)
or
out
data16
sti
in
sub
loopne
leave
fcmove
loopne
push
mov
fdivr
jne
xor
mov
repnz
jge
add
push
loope
outs
pop
(bad)
and
mov
mov
xchg
xchg
pop
mov
sti
retf
push
dec
pusha
xlat
push
lea
call
ja
xchg
(bad)
into
clc
add
push
hlt
sub
sub
scas
in
inc
pop
cmp
pop
inc
push
jmp
adc
xchg
and
int3
adc
xchg
les
aaa
xchg
nop
sahf
jmp
data16
ja
div
lods
or
lds
(bad)
sahf
cmp
fst
int3
outs
mov
sbb
or
xor
add
push
ja
mov
sub
pushf
mov
iret
in
fcomip
dec
fstp
push
sbb
xchg
hlt
leave
add
lods
jns
mov
ret
pop
xor
ror
loopne
xchg
mov
pop
push
stos
and
mov
pandn
leave
sbb
sub
je
adc
inc
pop
pop
pop
mov
xchg
add
out
dec
push
into
fistp
add
aas
xchg
sub
or
adc
(bad)
and
aad
fisttp
mul
lods
jnp
fcom
adc
sbb
repnz
ins
int3
sahf
pop
mov
push
add
aaa
nop
cmp
out
mov
shl
es
jmp
stos
lods
mov
cmovae
adc
sub
scas
outs
pushf
cmp
jno
and
cs
jo
push
inc
js
pop
rcr
push
xchg
shr
pop
arpl
cmp
xchg
movs
jge
dec
xchg
pop
xor
push
idiv
fs
add
ret
add
inc
clc
jnp
repnz
jne
xchg
push
clc
dec
pop
call
lds
xor
leave
push
dec
bswap
or
cmc
leave
rcl
mov
rcl
fimul
jmp
cmp
test
lea
fild
ret
mov
fidiv
cdq
mov
scas
cmp
cwde
push
loope
sbb
pop
or
fcmovb
mov
lea
push
pop
scas
pop
test
xchg
cs
cmp
xor
jp
xchg
pop
and
or
scas
inc
dec
je
das
sar
mov
in
bound
add
jmp
stc
cmc
adc
mov
call
dec
add
mov
fidivr
mov
jb
cli
xor
jle
sahf
mov
cmps
adc
pop
jns
gs
add
jg
jae
sub
mov
xlat
dec
test
in
in
mov
sbb
pop
mov
pop
inc
mov
push
int3
aad
mov
jae
xchg
repnz
jecxz
xor
mov
push
xor
jb
test
stos
jmp
mul
bswap
mov
inc
mov
sbb
ret
ror
inc
push
mov
cmc
ins
ins
popf
adc
in
xchg
jae
test
in
inc
dec
shl
mov
inc
cmc
push
pop
lods
sahf
imul
leave
rcl
retf
xchg
pop
sbb
xor
xchg
in
mov
inc
outs
cmp
mov
in
lods
jle
xor
pop
mov
cmps
cwde
jae
push
cmps
push
mov
leave
sti
mov
test
mov
clc
or
mov
or
pop
scas
adc
fiadd
aaa
mov
add
jns
retf
cmp
fcmovu
js
cdq
imul
js
jp
outs
sar
cmp
jb
mov
sbb
ins
and
sar
call
push
mov
cmp
and
mov
xor
dec
and
push
(bad)
(bad)
xchg
ins
push
idiv
mov
push
push
or
push
xchg
fidiv
scas
cmp
call
pop
stos
mov
sub
pop
jno
out
rcl
xor
aad
mov
xchg
dec
add
hlt
repnz
mov
push
imul
aaa
ins
(bad)
movs
mov
sti
retf
xor
adc
inc
aad
enter
jmp
rcr
lods
and
push
sar
sub
xchg
push
inc
sub
add
mov
add
fisubr
lea
cmp
ret
ins
jmp
gs
mov
addr16
ins
out
jb
jp
xchg
pop
arpl
adc
dec
adc
test
mov
aad
sub
xor
fisttp
cmps
enter
lahf
into
mov
lods
call
inc
mov
mov
push
sub
pop
retf
mov
ret
xor
retf
mov
jmp
mov
inc
sbb
leave
cdq
out
repz
loopne
scas
adc
mov
pop
daa
jmp
pop
mov
push
xchg
mov
rol
xchg
out
cs
mov
sub
xor
inc
ins
out
pop
and
jg
in
inc
pop
mov
mov
sbb
mov
stos
lahf
das
fdivrp
adc
sqrtps
xor
adc
fdivr
dec
ins
daa
mov
lods
lock
lods
data16
stos
loopne
mov
nop
sbb
retf
(bad)
or
rcr
or
push
out
fdivr
fwait
test
lock
cmps
mov
stos
sahf
test
inc
test
mul
sbb
ins
add
mov
xchg
mov
stos
cmp
aaa
mov
dec
jbe
push
leave
or
xor
cmps
sub
mov
mov
jg
and
adc
(bad)
repnz
inc
ss
gs
jmp
shl
jno
dec
cmp
sbb
aas
dec
adc
inc
dec
xchg
xor
xchg
add
fsubr
push
cmps
nop
mov
adc
mov
mov
mov
add
cmps
ret
aas
or
mov
ins
jecxz
push
icebp
sub
out
and
in
fnstcw
(bad)
aam
xor
push
jp
xor
pushf
mov
repnz
pop
das
add
ja
dec
sub
stos
jnp
nop
shr
ins
jne
push
mov
call
(bad)
nop
ds
aas
das
jp
scas
enter
fist
jo
aas
or
cmp
sar
jno
jnp
pop
push
cld
push
push
shl
(bad)
jae
pushf
dec
test
jp
fnstcw
xlat
in
lock
mov
aam
fldz
pop
imul
or
daa
inc
int3
mov
enter
aaa
ret
leave
sub
mov
pusha
inc
jnp
movs
cmp
in
mov
mov
lahf
jns
pop
or
sub
lahf
or
mov
js
mov
(bad)
or
and
sub
lahf
adc
dec
ins
jmp
movs
hlt
stos
cld
xor
popf
mov
das
cmps
sbb
jb
in
push
hlt
clc
mov
data16
fcmovne
cmp
adc
loope
add
and
cmp
cli
pop
mov
xchg
inc
adc
lds
arpl
cmc
sub
les
fcom
fisub
jno
in
dec
sbb
dec
push
push
stos
xchg
retf
rol
mov
pop
pop
mov
test
or
pop
push
add
les
sub
sbb
and
shl
sti
fimul
fsub
xchg
ret
outs
ss
test
fisttp
cmp
fild
adc
jb
pushf
jecxz
dec
add
xor
fisub
xchg
mov
outs
mov
lea
lds
mov
das
jne
fwait
mov
add
ins
mov
xor
mov
jg
repnz
or
fld
dec
dec
or
lock
test
js
pop
ja
test
sub
sub
sub
add
ss
sahf
aad
aam
mov
jmp
cli
xchg
add
mov
push
jo
jle
scas
in
mov
mov
xchg
sub
or
retf
xor
mov
jo
add
sub
sahf
(bad)
pop
push
mov
sahf
cs
ficomp
and
gs
ds
add
test
add
mov
pusha
inc
lea
in
mov
hlt
test
cmp
arpl
addr16
push
or
fmul
adc
dec
aam
ja
pop
sbb
lea
stos
fimul
push
icebp
and
inc
mov
das
cli
arpl
xbegin
lahf
jmp
push
sub
push
mov
add
out
cli
das
mov
xchg
sbb
sahf
sub
lahf
out
es
cmps
fsubr
push
jo
mov
gs
mov
sub
jecxz
ss
out
xor
rol
loope
mov
imul
nop
inc
out
jle
sbb
cli
leave
or
fisub
xchg
cmps
into
outs
cld
(bad)
(bad)
adc
jne
repz
mov
mov
mul
fisttp
pop
in
test
xor
cmp
push
push
mov
shl
inc
iret
fwait
loop
pop
xor
pusha
cmp
lods
cmps
adc
ins
fdivr
iret
and
sbb
sub
push
xchg
pusha
iret
bound
daa
or
sub
(bad)
xor
fcomip
(bad)
mov
xor
mov
js
mov
dec
sub
lods
(bad)
mov
ret
ficom
call
xchg
icebp
bound
repnz
(bad)
cdq
(bad)
push
xchg
mov
mov
fisttp
sbb
mov
cli
aam
push
sbb
pop
push
xchg
mov
or
or
(bad)
shl
test
cmp
sbb
rol
and
cmp
add
inc
aas
test
and
push
mov
bnd
lods
shl
push
add
jnp
xchg
(bad)
pop
and
out
not
das
dec
arpl
stos
scas
push
lahf
cmp
loopne
ficom
jbe
mov
push
loop
repnz
mov
cmp
inc
xchg
xchg
adc
add
cdq
iret
xlat
stos
mov
inc
jmp
dec
inc
sub
int3
mov
cmc
pusha
(bad)
divps
adc
push
add
jle
xchg
out
add
out
cmps
mov
jae
pop
mov
lods
out
les
cmps
clc
jbe
mov
pop
adc
retf
cmp
mov
outs
pushf
out
in
pushf
ret
push
movs
mov
dec
(bad)
in
loopne
mov
sbb
xchg
mov
pop
sub
pop
fnsetpm(287
popa
movs
xchg
popa
push
retf
and
test
mov
mov
jae
inc
inc
mov
mov
push
out
movs
xchg
dec
sub
enter
ror
mov
lods
das
sbb
or
sub
mov
mov
jl
mov
shr
lock
repz
xchg
dec
lahf
jle
idiv
mov
and
add
int3
inc
cmps
xor
sbb
xchg
mov
sbb
in
pop
lock
push
sub
gs
dec
dec
sub
pop
shl
push
sub
aas
ror
push
cmp
js
sbb
mov
stos
scas
add
mov
dec
and
addr16
sub
mov
pop
inc
ins
push
xor
fnstcw
mov
inc
sub
jmp
pop
xchg
cmp
xchg
mov
(bad)
cwde
add
loop
xchg
jg
out
dec
cs
add
xor
cmp
and
ins
xor
dec
cmp
nop
push
aad
push
loope
imul
sti
pop
sub
stos
int3
cmp
icebp
es
fnstenv
xchg
fidiv
xor
imul
xchg
out
in
mov
stos
push
cmp
xor
cs
mov
(bad)
dec
fmulp
mov
and
movs
xlat
pop
retf
dec
mov
nop
nop
int3
rcl
pop
aas
icebp
imul
inc
push
push
repnz
xor
push
mov
cwde
movs
or
jns
mov
push
repz
mov
mov
cmp
(bad)
mov
and
pop
pop
pop
sbb
lock
pop
jns
push
xchg
inc
push
jnp
mov
mov
stos
clc
pop
jno
cmp
pop
mov
cmp
call
push
dec
les
jecxz
imul
sbb
repnz
mov
mov
jge
clc
pop
test
stos
lods
xor
xchg
leave
ss
(bad)
fisub
mov
adc
jbe
jg
stos
popa
ds
cmp
xorps
xchg
inc
inc
rcr
aaa
lods
ja
adc
ret
pop
push
fcom
repnz
pop
mov
dec
and
mov
dec
das
fcomp
stos
inc
sub
inc
mov
mov
push
in
cmp
fisttp
jmp
cmp
xchg
sbb
lea
data16
idiv
pop
sti
es
sar
(bad)
in
rcl
std
mov
mov
sahf
xchg
jmp
scas
lahf
push
ins
lds
adc
sub
and
adc
jecxz
imul
out
mov
push
inc
inc
adc
sti
dec
arpl
fisubr
push
(bad)
std
aam
or
fs
(bad)
inc
pop
push
addr16
(bad)
adc
das
std
xchg
mov
rcr
aaa
xchg
inc
dec
ror
fisub
data16
fisttp
mov
jp
or
cmp
mov
pop
xchg
movs
mov
push
ret
xlat
movs
jmp
mov
jge
pop
push
ja
data16
lock
xchg
out
or
xchg
push
rcl
dec
(bad)
mov
aas
daa
push
push
(bad)
int3
push
sbb
hlt
scas
mov
fucom
mov
sub
cs
mov
xchg
push
out
ret
add
pop
mov
xchg
lahf
ins
or
daa
ret
push
mov
jo
jno
loopne
outs
test
scas
ins
xchg
ror
mov
rcl
ret
and
nop
jns
hlt
imul
jmp
aad
and
imul
dec
dec
cmc
inc
stos
pushf
push
adc
(bad)
cwde
xor
bound
lds
into
iret
movs
mov
int3
fnsave
jmp
sbb
dec
movs
pop
or
push
pop
(bad)
inc
mov
mov
cmps
fadd
dec
mov
in
sub
add
sub
jo
rcl
adc
lods
loop
and
dec
mov
dec
mov
gs
add
mov
adc
cmc
cmp
jge
cmp
sub
std
sub
rcr
fdivp
pop
push
lds
scas
js
hlt
jno
xor
inc
ss
xchg
lods
add
fwait
push
enter
jmp
xchg
stos
sub
scas
and
sar
imul
push
push
sldt
pop
test
jmp
cmp
rcl
shl
ret
adc
cmp
fsubr
lea
push
scas
mov
imul
or
call
repz
cmc
adc
out
setle
lds
test
and
gs
(bad)
and
scas
sub
retf
cli
add
icebp
ror
mov
xchg
xchg
jp
jecxz
xor
jmp
or
cmc
adc
daa
inc
nop
jb
sbb
repz
cmp
mov
bound
xchg
mov
push
in
dec
dec
xchg
jb
xor
push
mov
stc
pop
sbb
mov
inc
mov
loope
push
dec
call
xor
mov
imul
sbb
push
xlat
cli
and
add
aad
push
pop
ja
loope
cwde
inc
addr16
sub
(bad)
pop
aad
ins
int3
add
mov
sbb
bound
retf
stos
lods
gs
popa
dec
mov
xlat
mov
jle
cli
pop
es
jecxz
cwde
iret
sub
xchg
ret
fild
push
cmp
push
adc
xchg
dec
sbb
adc
pushf
out
jno
fmul
push
sbb
pop
pop
ficomp
push
hlt
or
aam
jl
mov
add
jno
jns
lea
bswap
mov
xchg
(bad)
add
cmp
loop
sbb
in
mov
dec
sar
or
jp
js
push
fst
sub
jle
or
sub
jmp
inc
add
push
push
mov
imul
jg
stos
sbb
into
mov
mul
pusha
xchg
test
or
repz
jmp
pop
or
pop
mov
repz
mov
sub
icebp
xor
js
dec
add
idiv
or
xlat
pop
xchg
jno
scas
std
sbb
mov
mov
fisub
addr16
mov
loopne
daa
and
mov
mov
xchg
mov
out
nop
mov
xor
xchg
ret
call
mov
cs
dec
adc
jp
jo
in
nop
add
sub
pop
lods
and
lock
arpl
test
sar
pop
mov
clc
sbb
cmp
push
pop
stc
push
jae
loope
and
push
lahf
shl
inc
fsubr
popf
retf
mov
es
mov
mov
cli
stc
push
shl
jmp
out
mov
test
popa
fstp
mov
adc
movs
popa
xchg
dec
or
or
ss
and
add
mov
pushf
ins
fcmovbe
fmulp
and
sbb
jno
pop
mov
xor
push
outs
call
or
add
aas
jle
lahf
jo
fsubr
addr16
cmp
push
sbb
mov
ficom
add
mov
xchg
es
add
loope
in
rol
jne
push
rol
fs
pushf
jo
pop
hlt
cmp
arpl
ret
push
jp
inc
mov
cmc
faddp
xchg
jbe
sbb
xor
fiadd
in
sbb
stos
pop
sub
adc
test
xor
sbb
mov
clc
cmp
cmp
(bad)
sub
int3
addr16
xchg
fcmove
fcmovb
add
adc
in
push
and
in
sub
jle
and
aas
out
idiv
jle
out
dec
out
(bad)
jb
ss
pop
mov
sahf
loopne
push
jmp
jmp
retf
into
dec
xor
pop
adc
jge
mov
jb
jecxz
push
add
pop
xor
and
or
push
(bad)
cmp
or
xor
sar
push
lods
adc
mov
cwde
dec
fcmovnbe
xor
xor
and
jo
aaa
nop
fmul
ins
nop
imul
mov
pop
dec
cmp
mov
or
dec
outs
mov
shl
cli
out
data16
mov
inc
out
and
dec
jp
add
add
js
test
sub
loope
in
out
in
mov
inc
inc
call
or
inc
adc
jl
addr16
ds
test
ss
out
sbb
xchg
mov
fs
cmp
std
hlt
cmp
cmp
enter
mov
sub
xor
es
outs
mov
(bad)
je
(bad)
inc
adc
jo
push
data16
fstp
pushf
adc
cmc
pop
cmp
loope
lods
sbb
cdq
and
stos
in
fild
pop
aad
xor
(bad)
dec
pop
leave
xor
pop
or
mov
mov
stos
outs
cwde
cmp
inc
sbb
lods
fbld
jp
jo
popf
scas
cmc
nop
push
inc
adc
sbb
iret
rol
rcr
dec
cwde
(bad)
push
sbb
in
int3
jae
ds
xor
and
fimul
sahf
test
sbb
jo
pusha
mov
loop
test
iret
(bad)
mov
mov
xor
loope
repz
dec
mov
int3
dec
lock
ss
into
es
adc
je
add
jb
fcmove
push
sub
cs
es
out
xchg
aad
add
stos
out
add
test
push
stc
ins
xchg
pop
outs
loop
ss
das
in
cli
jns
push
lods
pop
into
(bad)
popf
pop
ror
sub
jns
enter
nop
push
loope
sub
push
(bad)
lock
into
mov
adc
loop
stos
sub
gs
dec
daa
loop
sub
jg
test
add
xchg
mov
mov
js
xchg
shl
pop
fsubr
cmp
pop
add
inc
cdq
adc
sub
mov
push
add
imul
sub
nop
and
inc
movs
cmp
bnd
daa
xlat
push
mov
push
sub
js
test
pop
xor
stc
cmps
pop
into
xchg
aad
mov
or
imul
ret
(bad)
push
add
cmp
(bad)
mov
out
imul
icebp
sbb
cli
cmp
out
std
and
jle
mov
adc
fst
push
sbb
lea
cmp
mov
inc
mov
mov
and
test
lds
sahf
loop
ret
xchg
fisubr
mov
pop
cmp
cli
and
dec
stc
popf
jmp
lods
je
add
sar
jmp
xor
xchg
mov
mov
test
jno
mov
div
jnp
stc
sub
inc
bound
jp
repnz
and
aad
jmp
test
xchg
mov
dec
xor
mov
jo
and
push
fist
pop
xchg
lods
add
(bad)
shr
mov
scas
loop
fldcw
cmps
xor
and
aaa
adc
outs
pop
clc
xchg
or
mov
jbe
test
int3
cmp
push
adc
aad
mov
xor
fsubr
pop
mov
shr
push
test
xor
scas
outs
out
xlat
sar
dec
mov
dec
mov
jo
jmp
in
int3
stos
scas
cld
call
xor
sub
mov
xlat
lea
aas
mov
xlat
inc
mul
mov
fdivp
clc
pop
fbld
pop
push
pop
cs
scas
fadd
mov
ss
pop
dec
and
ret
data16
jp
and
ja
pop
dec
xchg
scas
cli
repnz
es
stos
and
or
sbb
and
xor
inc
ds
imul
lods
and
lods
(bad)
loop
cmp
mul
cli
pushf
xor
test
jae
jae
pusha
daa
es
sti
mov
je
jl
addr16
or
aad
or
call
xchg
jmp
shl
imul
or
pop
das
sbb
jge
and
adc
and
xlat
stos
push
sbb
or
icebp
jp
jmp
sbb
pop
in
fistp
movs
or
xlat
jl
mov
adc
add
xchg
leave
scas
fucomp
jg
adc
sub
jmp
xchg
div
pushf
pop
pop
and
or
add
into
aas
pop
out
test
nop
push
jl
mov
scas
loopne
mov
dec
out
rcl
and
adc
inc
add
and
push
dec
sbb
loopne
jmp
add
mov
jmp
cmps
add
mov
ins
test
lods
jne
cmps
sub
push
mov
push
outs
sub
xchg
div
or
sbb
cmp
dec
cli
out
cmp
das
retf
sub
cmc
fdiv
jno
retf
add
add
cdq
cli
pop
jmp
inc
loope
sub
mov
cli
js
inc
and
cmp
xor
or
int3
dec
inc
out
cmps
shl
jne
sub
mov
cmp
mov
xchg
sub
xchg
out
push
int3
retf
(bad)
pop
in
dec
pop
(bad)
pop
push
xor
mov
pop
inc
test
(bad)
xchg
mov
ss
dec
jns
retf
jle
xchg
jge
test
dec
push
inc
in
push
fild
aas
mov
rcr
test
xchg
mov
add
into
je
push
gs
ficom
or
cmp
out
and
mov
shl
nop
fistp
jp
gs
xor
and
dec
out
push
repz
xlat
cdq
imul
jb
stos
popf
cmps
inc
jle
(bad)
adc
mov
mov
jl
scas
and
mov
sbb
sub
inc
retf
mov
push
mov
retf
add
hlt
cmp
push
scas
mov
in
xor
sub
test
movs
bound
mov
aam
ret
(bad)
pop
test
mov
sti
in
push
iret
mov
stc
add
cmp
xchg
or
pop
pusha
xchg
(bad)
xchg
movs
iret
sbb
inc
shl
test
dec
shl
mov
dec
popf
cmp
cld
push
xchg
sbb
lods
js
mov
fwait
adc
cmp
hlt
daa
fcomp
cmps
nop
mov
(bad)
or
xchg
xor
sar
mov
call
(bad)
aad
push
ja
ffreep
popa
sti
inc
mov
loopne
dec
xchg
pop
inc
jmp
or
jg
imul
and
sbb
aam
fld
ins
into
cli
jmp
cmc
push
pushf
jnp
pop
loopne
pop
jbe
stc
sub
imul
pop
scas
pop
sub
xchg
std
loopne
or
add
movs
jge
sbb
push
mov
dec
or
push
add
jmp
jp
sub
call
pop
push
les
inc
mov
loop
stos
scas
fcom
and
std
movs
sar
(bad)
fimul
push
dec
test
fcomp
data16
dec
xchg
push
mov
jg
ins
cmp
add
xchg
fidivr
xchg
mov
sbb
push
sbb
retf
shl
repz
sbb
dec
mov
pop
arpl
gs
and
popa
pop
in
mov
nop
push
fistp
mov
or
jnp
out
jns
adc
faddp
cwde
jg
je
ds
mov
call
or
out
ds
adc
add
pop
pop
leave
mov
imul
fsubp
xchg
or
mov
xchg
bound
dec
or
stos
in
add
ins
sub
imul
add
sub
hlt
mov
les
mov
and
cmp
xor
movs
jne
and
daa
aas
xor
inc
pop
xor
iret
xchg
call
jge
jns
push
dec
out
and
pop
adc
sbb
cwde
popa
int
pushf
loop
mov
xor
sbb
jno
loop
fcom
cmp
jnp
inc
ss
and
and
(bad)
cmp
dec
cmp
mov
scas
add
jb
ja
adc
enter
xor
xor
or
mov
mov
pop
pop
cmc
adc
mov
imul
and
and
outs
fadd
or
lods
fiadd
xchg
dec
adc
loop
inc
add
std
test
ins
(bad)
xchg
xor
dec
mov
xchg
aaa
jae
fs
jle
push
imul
sub
inc
pop
mov
gs
fistp
inc
js
pop
stc
push
pop
shr
rcl
test
dec
bound
mov
imul
sub
sar
and
call
sbb
bound
pushf
hlt
movs
pop
enter
mov
outs
das
stos
push
aam
call
jno
ret
jbe
imul
jl
cmp
loopne
inc
(bad)
sbb
popa
push
jo
mov
(bad)
xchg
ret
call
xchg
pop
mov
mov
push
xchg
pop
mov
fcom
inc
fstp
lods
dec
iret
sub
or
pop
mov
addr16
lds
sbb
test
test
adc
inc
cmps
int
pop
jmp
pop
(bad)
movs
int
stos
jl
pop
sbb
add
fsubr
nop
nop
cwde
cs
inc
ins
ins
hlt
arpl
and
icebp
and
mov
push
mov
xchg
and
pop
add
and
data16
fs
jge
inc
std
js
out
xlat
(bad)
out
adc
sti
ins
and
jno
and
cmp
jb
inc
and
adc
popf
bound
jp
ja
sbb
mov
ins
xlat
pop
aad
or
iret
and
xchg
and
ins
nop
sbb
ja
or
dec
cmps
ret
outs
sahf
das
adc
sti
(bad)
scas
adc
pop
sbb
xchg
aam
cwde
sub
lock
in
mov
dec
dec
push
jb
cli
in
or
push
mov
jecxz
popf
movs
jae
fcom
sbb
inc
mov
jp
and
push
out
shr
inc
sub
jge
imul
push
push
dec
inc
sub
ins
es
sub
lds
imul
mov
push
or
clc
xchg
fwait
sub
add
sbb
mov
push
fldenv
sbb
push
jmp
iret
inc
dec
les
and
icebp
cmp
shr
xchg
mov
int3
mov
iret
sub
push
je
cmp
lods
shl
inc
xor
add
adc
xchg
cmc
pop
outs
mov
hlt
(bad)
jle
hlt
sti
mov
into
call
rcl
sbb
and
bound
inc
shl
adc
add
xchg
lods
imul
jo
jne
or
(bad)
mov
lods
cs
enter
mov
div
scas
int
shl
mov
and
jmp
ret
xchg
lahf
je
ret
lea
push
add
sub
icebp
(bad)
sbb
add
jns
push
shr
out
adc
sub
jnp
cdq
jno
(bad)
xor
pop
in
pop
out
inc
lea
push
inc
fst
jbe
aam
cmp
add
lods
sbb
popf
addr16
mov
inc
(bad)
pop
mov
sti
push
retf
add
daa
mov
in
add
mov
fist
aas
xor
or
std
fbstp
arpl
mov
cld
ins
shr
pop
popa
test
adc
aam
push
cmp
cmc
xor
std
jge
and
inc
xchg
inc
popf
or
jmp
out
jo
stos
repz
or
and
ret
aaa
cwde
ret
xchg
ret
push
(bad)
addr16
or
call
aam
int
jmp
push
popa
jp
cmp
add
movs
xor
xor
mov
cmp
test
les
pusha
fistp
cwde
retf
xchg
push
out
xor
ins
pushf
cmp
jmp
and
adc
inc
mov
push
nop
mov
dec
lea
jns
ja
dec
(bad)
pop
fsub
sbb
dec
mov
mov
aad
sbb
pop
shr
xchg
mov
mov
int
xchg
rcl
scas
sbb
cmp
ret
push
jmp
int
pop
mov
retf
data16
cld
cmp
jp
scas
jl
cmp
sub
mov
jnp
push
clc
ins
add
shl
push
mov
lods
jp
in
imul
adc
mov
pop
add
aas
sbb
lahf
xlat
sbb
ja
xchg
fild
jge
mov
jae
mov
or
mov
jle
xchg
cld
jno
xchg
cld
fucomip
xor
mov
in
inc
(bad)
fnstsw
(bad)
(bad)
lods
mov
retf
and
addr16
jl
cmps
ja
pop
neg
pop
cmp
xor
jmp
pop
popa
inc
cmp
add
gs
dec
pop
and
mov
mov
xchg
cld
inc
ja
xchg
rol
fist
add
mov
in
int3
cmc
test
scas
test
pop
in
shr
ds
lahf
mov
inc
mov
inc
lods
push
retf
mov
jmp
xchg
and
xchg
test
shl
(bad)
cli
dec
push
rcl
rcl
arpl
hlt
mov
popa
cmp
ds
int
or
out
leave
cmp
pop
xchg
mov
retf
fs
sbb
jl
fadd
mov
dec
loope
out
inc
or
inc
or
fs
or
lock
lahf
xor
loope
lds
fdiv
add
mov
sar
cmp
pop
ret
(bad)
mov
popf
push
movlps
push
jae
rcr
sub
in
aas
lea
adc
leave
fidiv
cmp
aam
jnp
aas
xor
push
fild
inc
sub
test
sbb
inc
inc
frstor
ret
and
push
pop
jo
rcr
cmp
ret
test
sub
mov
out
mov
pop
test
jle
push
call
dec
jecxz
xchg
cmp
arpl
adc
loopne
add
dec
imul
jmp
push
cmp
jmp
js
repnz
xor
lods
fidiv
imul
fdiv
sub
stos
bound
mov
call
mov
mov
push
outs
inc
and
das
mov
ds
adc
xor
out
pop
cli
das
xchg
pop
sbb
cmps
pop
sbb
xor
or
pop
in
adc
pusha
int3
xchg
dec
loop
cdq
cmp
xchg
ds
jmp
ret
xchg
(bad)
add
inc
retf
xchg
test
jecxz
push
xor
xchg
sub
or
call
jmp
or
adc
scas
cli
or
call
(bad)
xor
jno
jg
mov
cmps
out
in
mov
add
test
shl
rcl
cmc
xchg
add
jno
call
int3
arpl
jns
nop
std
in
bound
mov
loop
mov
cwde
adc
scas
ror
jecxz
(bad)
pop
cmp
and
repz
xor
lds
or
mov
fld
add
js
mov
ja
mov
mov
ret
sbb
mov
call
or
mov
inc
and
push
jns
dec
gs
push
pop
jno
(bad)
mov
pop
jp
movs
push
add
push
push
xchg
cdq
hlt
rcl
scas
push
fdiv
ret
out
jne
(bad)
inc
pop
nop
retf
mov
sub
(bad)
sbb
pop
cwde
sbb
xlat
mov
fisub
mov
xor
mov
and
or
add
(bad)
shl
int3
rcl
xchg
out
mov
(bad)
iret
mov
lds
xchg
(bad)
jg
push
scas
or
jge
out
jl
mov
(bad)
xchg
cli
sub
inc
repnz
(bad)
push
pop
cdq
mov
mov
jnp
xor
mov
jl
les
mov
mov
mov
movs
movs
inc
je
scas
mov
xchg
dec
jg
xor
aad
daa
imul
pop
ret
push
sbb
sub
arpl
mov
div
ins
or
scas
hlt
sti
cmc
jnp
fwait
sbb
int3
mov
sub
outs
mov
out
dec
outs
push
sub
xchg
mov
cmps
imul
les
mov
data16
hlt
repz
jmp
stos
lock
gs
add
inc
ds
fwait
imul
push
int
add
fist
test
ds
push
dec
mov
psrlw
leave
xor
dec
repz
test
xchg
int
shl
cmp
daa
mov
pop
xor
add
xor
mov
in
pop
into
lock
int3
add
test
fcom
xor
jno
in
push
push
ss
loope
jge
into
addr16
inc
push
xorps
fsub
mov
test
mov
add
push
sbb
lods
jne
push
imul
jne
enter
mov
mov
cwde
mov
fucomip
popa
outs
jb
leave
sub
call
push
mov
fild
dec
sub
cmp
es
jnp
mov
adc
inc
fld
sbb
js
cwde
into
jle
cmp
cmp
adc
mov
stos
jmp
out
cld
mov
fidivr
xchg
adc
inc
cli
sub
cmps
aam
das
inc
and
or
arpl
mov
out
sbb
in
xor
lock
(bad)
ficom
mov
daa
mov
cmps
(bad)
pusha
repnz
cmp
lea
pop
pop
frstor
or
push
enter
in
loopne
adc
leave
aaa
mov
xor
jge
ds
call
popa
jmp
clc
popf
pop
fst
mov
repz
adc
arpl
sub
out
and
ficomp
add
inc
fild
in
cmp
or
call
mov
in
retf
rcr
cmp
sar
xor
cmc
retf
or
popfw
ins
mov
out
(bad)
pop
rol
loop
xor
loopne
mov
mov
call
pop
dec
aas
pop
outs
cmc
xchg
popf
outs
cli
xchg
and
push
ror
out
sti
std
sub
fistp
mov
ss
outs
xchg
outs
test
xor
push
sub
aas
add
hlt
into
pushf
lds
hlt
(bad)
jne
repnz
pop
repnz
ror
push
xchg
fucomi
and
sub
idiv
inc
push
sub
mov
test
lds
scas
sbb
add
mov
jo
pusha
pop
dec
mov
enter
lods
and
dec
mov
inc
jbe
js
aad
data16
retf
ss
out
js
dec
popa
loopne
repnz
push
jb
jl
and
push
mov
xor
cmp
repnz
and
and
fs
mov
xchg
xchg
or
pop
dec
jne
jl
in
outs
adc
fisttp
pop
mov
add
push
js
jbe
dec
pop
in
sbb
add
or
lock
int
mov
fldenv
das
sub
pop
jle
dec
dec
or
fpatan
mov
pop
mov
push
push
inc
dec
lahf
(bad)
test
cmps
adc
jge
dec
mov
or
and
rcl
xor
mov
inc
dec
jge
jnp
outs
push
sub
mov
push
shl
(bad)
out
repz
jmp
mov
mov
jne
cs
jp
push
inc
out
pop
das
gs
imul
dec
hlt
dec
in
fiadd
call
push
xor
mov
or
sahf
fcomp
xchg
das
dec
ds
xor
std
lods
xor
push
cs
or
out
cmp
fstp
imul
mov
(bad)
sub
ins
shr
sbb
mov
jo
sub
mov
and
fdivr
add
lods
das
pop
add
xlat
xchg
push
mov
sub
xchg
push
adc
mov
nop
(bad)
fldcw
pop
jbe
mov
cmp
sub
shr
and
inc
xor
sub
add
in
add
jb
hlt
and
push
dec
xchg
ins
sbb
xchg
xchg
push
jb
paddw
leave
ins
sbb
jg
ret
and
outs
jne
mov
rcl
jecxz
daa
sbb
push
jp
jp
adc
pop
call
cli
jb
sbb
fnstcw
fwait
test
jle
aas
push
push
lahf
loopne
jmp
mov
push
sar
add
cmc
mov
icebp
dec
inc
sub
jb
and
inc
mov
repnz
mov
jmp
(bad)
(bad)
test
xor
icebp
pop
mov
int
push
pop
push
mov
lods
jl
lds
lea
scas
jne
xor
adc
mov
mov
outs
js
dec
xchg
cli
clc
fstp
stos
push
cwde
jl
and
cmp
sub
add
mov
push
cmc
jae
repnz
dec
jg
jecxz
mov
mov
and
xlat
xlat
push
pop
loopne
mov
add
inc
loopne
xchg
jecxz
xor
xor
shl
outs
neg
cmp
cmp
push
cmps
mov
jbe
fs
imul
scas
dec
jecxz
bound
pop
mov
call
xchg
push
in
popf
popa
jmp
mov
dec
inc
mov
test
sub
mov
test
fisubr
jle
sub
cs
imul
cmp
pop
adc
push
fimul
dec
dec
jmp
push
mov
outs
retf
mov
test
sbb
mov
and
rcr
mov
ret
aad
mov
mov
sbb
mov
(bad)
js
loopne
bound
sub
mov
inc
pop
adc
jae
es
test
stos
mov
fwait
out
xor
movs
mov
mov
sbb
pop
or
jo
sar
mov
out
(bad)
and
cmp
push
je
add
in
push
loopne
movs
mov
das
test
jle
pop
cs
push
pop
sbb
xchg
iret
or
pop
and
mov
push
loop
cmp
mov
std
cmps
mov
cmp
and
in
pop
and
jbe
xchg
sbb
sbb
or
cmp
dec
push
sbb
pusha
jg
neg
shr
leave
rcr
imul
bound
imul
mov
mov
gs
mov
cmp
(bad)
push
adc
ret
ja
stos
dec
rol
xchg
hlt
sbb
xor
dec
(bad)
jns
arpl
adc
mov
int3
rcl
sbb
jmp
sbb
test
loopne
scas
jae
add
hlt
push
pop
lock
mov
xchg
add
dec
jecxz
mov
fs
jg
lea
loop
fdiv
test
jp
(bad)
cmp
sub
int3
mov
cmps
sub
arpl
data16
dec
mov
cmc
mov
adc
xor
add
adc
aad
icebp
shr
hlt
dec
mov
popf
test
daa
ficomp
mov
lahf
fcom
dec
inc
jbe
out
test
frstor
aam
(bad)
loop
lahf
push
popa
mul
inc
in
adc
and
(bad)
add
xchg
jmp
cmp
popa
or
rcr
sbb
out
or
test
stos
dec
mov
jl
pop
popa
nop
sub
popf
ret
cmps
aas
fnsave
cli
ror
movs
mov
push
adc
int
(bad)
retf
aaa
add
in
fwait
mov
push
adc
leave
aam
in
push
adc
arpl
sub
call
cld
jae
scas
mov
cdq
xlat
jg
fwait
or
leave
mov
lock
shl
out
pop
cmp
push
and
pusha
ss
pop
in
mov
int
sub
mov
add
sbb
xchg
and
sub
add
inc
push
sbb
jae
inc
pop
mov
jns
imul
or
add
in
in
xchg
test
(bad)
cli
lahf
add
ror
les
cmc
push
shr
push
lds
dec
call
adc
xlat
mov
test
push
or
(bad)
imul
add
and
retf
nop
mov
js
and
ins
and
out
sbb
outs
je
scas
cmp
movs
mov
imul
fs
and
ror
mov
call
popf
mov
aad
jo
aas
jge
sar
dec
(bad)
int3
fcomp
xchg
jl
(bad)
mov
inc
lods
cmp
jmp
aam
jg
sbb
dec
(bad)
enter
movlps
ret
xchg
out
fidivr
mov
arpl
sub
pop
cs
sbb
xchg
fldz
lods
movs
mov
movs
or
push
adc
sbb
inc
jle
vmovlps
dec
nop
(bad)
ret
arpl
mov
std
adc
inc
cdq
popa
inc
push
mov
xchg
sahf
jg
arpl
repz
xchg
jge
fbstp
pop
movs
adc
mov
outs
sub
lock
xor
inc
pop
(bad)
add
add
mov
xchg
pop
mov
push
xor
mov
dec
sub
out
out
mov
push
jns
sahf
bound
sar
push
aaa
fsub
jmp
inc
(bad)
jmp
adc
es
xlat
inc
shr
not
iret
cmp
mov
or
sub
cdq
aaa
in
stos
cmp
(bad)
mov
xor
mov
sbb
or
jbe
fs
test
mov
push
icebp
mov
mov
inc
push
sbb
jmp
or
les
push
mov
(bad)
stos
ss
sar
sub
or
cmps
(bad)
xor
mov
inc
call
test
fild
test
fucomi
test
(bad)
mov
outs
arpl
mov
pusha
or
mov
in
neg
push
sbb
adc
xchg
cs
call
clc
in
inc
les
jno
mov
or
jb
pop
pop
jnp
cld
inc
shl
dec
cmp
and
rcl
fwait
loopne
mov
xor
add
popf
pusha
cdq
out
push
fcmovb
or
test
loopne
push
push
add
into
sbb
jecxz
repz
mov
mov
push
mov
add
and
aas
adc
leave
shl
cmp
addr16
and
jns
cmp
mov
outs
ds
dec
sbb
inc
imul
push
test
jge
(bad)
clc
mov
popf
dec
jae
dec
mov
arpl
outs
and
push
xor
cmp
mov
in
jle
iret
inc
in
jbe
lock
mov
test
in
cmp
ret
js
fisttp
and
mov
pop
fstp
add
js
xlat
cmp
jge
cmps
cwd
pop
or
dec
adc
(bad)
mov
inc
iret
out
xchg
sar
ins
and
(bad)
or
or
cdq
mov
mov
loope
pop
cmp
dec
movs
dec
imul
lods
in
and
(bad)
in
je
inc
and
inc
pushfw
movs
outs
or
ret
sar
push
cmp
ja
mov
dec
in
cwde
mov
sbb
(bad)
xchg
pop
inc
dec
xor
ins
and
cmps
movs
loop
test
retf
lods
xor
pop
ss
xor
push
fwait
popf
cmp
(bad)
fidiv
lock
mov
sbb
sbb
movs
dec
stos
shl
aam
les
mov
mov
jae
push
inc
xor
or
jnp
jae
inc
add
aam
out
pop
fld1
scas
ret
lods
retf
lahf
sub
bound
test
dec
add
clc
ret
cwde
add
out
add
data16
shr
dec
fidiv
in
push
jmp
lock
jae
or
into
inc
jno
dec
or
add
adc
or
lods
daa
outs
sbb
sbb
(bad)
out
mov
sbb
das
lahf
fwait
test
ins
jg
pop
jns
inc
fcomi
in
in
mov
ja
mov
std
dec
pop
mov
inc
add
pop
icebp
out
push
or
sub
or
pop
inc
pop
xchg
mov
adc
mov
and
xor
push
mov
sbb
cmps
adc
mov
adc
jns
test
xor
cld
sbb
cwde
xchg
inc
jmp
xchg
enter
daa
inc
stos
inc
mov
fsub
cmp
or
mov
add
xchg
loopne
pop
mov
xchg
mov
and
sub
dec
ja
xchg
icebp
mov
pop
mov
mov
sar
jl
sub
dec
nop
mov
scas
push
loope
xor
movs
test
push
into
or
or
in
pusha
mov
or
movs
add
add
test
pop
cmp
lods
sub
xchg
mov
jae
xlat
pop
xchg
ret
cld
test
or
int
daa
aas
es
xor
iret
scas
stc
test
pop
jecxz
or
and
test
mov
push
in
repz
adc
clc
mov
cmp
xchg
(bad)
cld
inc
aaa
icebp
mov
pop
pusha
sbb
add
(bad)
push
adc
cdq
std
call
imul
sbb
mov
cs
das
push
fcomp
fdiv
pushf
bound
jb
push
les
cli
scas
nop
retf
pop
sti
pop
es
lds
or
repz
retf
pusha
jnp
cmp
push
out
adc
clc
test
xor
cmp
out
das
fidivr
sbb
adc
call
lods
call
(bad)
push
pop
mov
in
mov
js
mov
inc
xlat
or
and
scas
loopne
push
shl
inc
and
stos
mov
loop
push
fsub
lods
add
sbb
dec
jmp
or
data16
and
mov
mov
mov
and
xchg
mov
sar
popa
dec
mov
fs
cmp
enter
xor
repnz
jb
push
sbb
jb
sub
mov
xor
aaa
sbb
fucomip
and
push
cld
sub
pop
lock
xchg
pop
push
fild
gs
lods
add
dec
mov
inc
and
ss
pop
and
mov
repz
cmp
imul
hlt
in
mov
dec
jmp
cmovb
cmp
rol
clc
jb
gs
pusha
mov
mov
(bad)
or
js
(bad)
add
pop
inc
stos
xchg
sbb
outs
sbb
ror
xchg
push
adc
mov
adc
push
dec
mov
mov
fiadd
cs
xor
ret
inc
mov
jo
jle
shl
ret
lahf
(bad)
dec
gs
int
test
cmp
loope
mov
inc
sbb
pop
jne
inc
jnp
mov
jmp
sahf
mov
jns
rol
jmp
push
xchg
repz
lock
cmp
je
ficom
outs
mov
jmp
xor
(bad)
jg
ret
push
arpl
and
popf
dec
or
aas
les
leave
int3
and
sub
push
out
(bad)
mov
add
adc
mov
test
or
inc
fs
fdivr
jb
inc
cld
mov
jae
call
xlat
dec
pop
push
rcl
dec
je
adc
and
push
mov
sar
in
mov
cmps
and
fcomp
jmp
pop
adc
cmp
sub
mov
add
push
adc
aaa
cld
sub
mov
repnz
(bad)
cmps
xchg
pop
jnp
mov
or
lock
xchg
pop
jae
imul
stc
pop
dec
mov
call
sbb
in
imul
dec
jne
repnz
lahf
and
cmp
jecxz
pop
adc
mov
movs
or
in
test
jno
(bad)
mov
push
push
out
cmovns
and
call
push
push
inc
mov
lds
shl
arpl
jge
sub
pop
mov
js
jmp
out
(bad)
sub
and
cwde
pop
sar
cmp
jbe
repnz
std
test
pusha
int
cwde
mov
mov
mov
dec
stc
push
cmps
sbb
mov
add
popa
push
mov
aam
and
mov
cli
cmps
outs
inc
arpl
mov
add
pop
cmc
call
mov
and
or
mov
(bad)
addr16
rol
mov
ss
mov
jecxz
retf
mov
mov
add
xor
inc
inc
gs
(bad)
movs
sub
scas
repnz
adc
fcom
mov
jmp
arpl
sar
sbb
imul
or
in
jbe
arpl
and
push
xor
jmp
sub
sbb
xor
push
sbb
stos
in
mov
gs
jmp
adc
in
fisttp
jl
pop
movs
rol
retf
(bad)
jae
cs
ficomp
add
neg
push
jno
clc
ret
or
pop
pop
sbb
jnp
jmp
and
mov
mov
leave
mov
pusha
rcl
mov
mov
in
xor
inc
jge
mov
call
call
xlat
retf
div
leave
add
sub
jmp
sub
(bad)
or
mov
push
mov
sbb
scas
shl
pop
test
jb
mov
repz
adc
mov
xchg
sub
mov
xchg
fisttp
dec
in
(bad)
rol
jmp
sub
or
in
or
and
xor
adc
out
xchg
(bad)
fisub
fcomp
mov
mov
shr
inc
pop
push
loopne
imul
fild
add
jns
push
(bad)
(bad)
mov
nop
adc
mov
push
enter
ret
and
or
rcr
(bad)
mov
jecxz
(bad)
jne
mov
pop
jge
pop
mov
popf
imul
cmp
adc
adc
xor
not
mov
or
ror
dec
hlt
or
sub
adc
sbb
jg
xchg
daa
push
mov
imul
ins
mov
inc
fild
push
push
aam
mov
mov
mov
call
(bad)
int3
enter
rcr
scas
std
fcomp
jnp
inc
fucom
bound
data16
int3
and
sub
loopne
inc
into
xor
adc
std
pop
aas
out
jnp
jecxz
fld
cdq
sub
shl
mov
(bad)
push
(bad)
mov
push
pushf
loope
adc
repz
in
inc
xchg
sti
or
aaa
xor
xchg
into
mov
fst
inc
adc
and
(bad)
pop
jbe
mov
stos
in
js
xchg
push
sahf
pop
mov
xor
les
mov
dec
icebp
retf
mov
pop
lea
push
adc
ss
out
dec
jb
ins
inc
fisub
mov
icebp
repz
call
ret
test
pop
or
push
or
push
mov
fild
mov
mov
and
in
(bad)
arpl
in
and
inc
in
push
(bad)
sub
push
sti
mov
repz
ficomp
sub
dec
das
adc
inc
mov
mov
cmp
or
fild
(bad)
(bad)
clc
sbb
xor
rcl
data16
sub
loop
out
not
retf
clc
test
inc
mov
jge
push
lds
aad
mov
pop
dec
dec
pop
jbe
sbb
xchg
sub
mov
or
xor
dec
shl
jo
lods
xchg
or
push
dec
xor
loop
fs
push
inc
mov
lea
cmp
pop
dec
mov
pusha
push
stos
into
jle
push
mov
cs
sub
stos
out
rcl
nop
inc
icebp
mov
cs
and
clc
mov
pop
nop
mov
add
adc
repnz
clc
icebp
imul
adc
addr16
pop
push
add
sub
mov
dec
retf
mov
lock
pop
cmp
xchg
(bad)
fbld
out
mov
icebp
pop
mov
jbe
addr16
cwde
popa
and
inc
jno
xchg
push
adc
push
imul
sub
outs
jne
addr16
push
cmps
outs
inc
pop
test
jmp
pop
and
jp
ror
sub
mov
je
or
pop
mov
imul
adc
gs
mov
jp
in
cmp
jae
jmp
inc
adc
les
mov
xchg
out
push
or
cmps
lock
(bad)
pop
das
adc
loopne
(bad)
dec
and
in
jnp
push
xchg
out
aas
dec
ret
push
push
cmp
daa
repz
jbe
xor
sub
jmp
in
cmp
jmp
or
into
push
mov
sar
test
aas
imul
xor
imul
adc
xor
(bad)
jl
lock
mov
jmp
dec
jno
pusha
adc
in
push
shl
add
test
inc
ja
scas
in
loop
dec
scas
xchg
cdq
xor
dec
mov
mov
pop
scas
mov
arpl
loopne
fnstenv
push
inc
(bad)
or
int3
xchg
aas
xor
test
mov
int3
mov
push
scas
push
xor
add
adc
jne
dec
mov
cmps
cwde
add
movs
mov
fild
xchg
popf
fdivr
xchg
in
push
in
xlat
jns
fdiv
mov
push
mov
jns
jb
pop
cmp
ja
pop
(bad)
cmp
imul
xchg
inc
(bad)
scas
pushf
inc
lahf
and
into
iret
test
mov
mov
inc
fs
int3
test
and
pop
add
or
in
cmp
std
mov
and
lods
sbb
mov
call
add
stc
ja
arpl
or
js
push
out
lods
jg
outs
out
xor
xchg
jge
neg
mov
cmp
inc
rol
lods
cmp
retf
ret
das
or
out
jg
adc
cmc
push
rol
xchg
add
leave
mov
jg
imul
dec
test
das
fld
mov
push
(bad)
pop
rcr
sbb
fisttp
clc
shr
(bad)
fstp
int
sub
pop
int3
nop
ins
ins
xchg
pop
jnp
cmp
ins
push
mov
mov
dec
inc
jg
sbb
mov
add
pop
sub
fsub
pop
dec
(bad)
sahf
mov
jno
push
add
dec
or
mov
repnz
inc
call
in
sbb
sbb
sbb
div
inc
mov
sub
and
push
(bad)
retf
fistp
ja
mov
jo
gs
pop
fwait
jo
jle
test
cmp
sub
popf
push
cmp
sub
mov
mov
in
addr16
sub
pop
sbb
pop
mov
xchg
push
out
mov
stos
ret
popa
jb
loopne
test
(bad)
push
inc
cmp
dec
cmp
outs
(bad)
cmp
outs
test
and
jno
inc
and
scas
mov
ins
scas
call
xchg
out
and
mov
pop
mov
xchg
jbe
(bad)
lods
loope
lock
aaa
popw
add
ret
sub
jmp
xchg
jnp
fcomip
and
or
and
nop
add
stc
call
popa
pop
inc
pop
rcr
mov
push
(bad)
gs
rcr
push
rcr
push
sbb
mov
cs
xchg
mov
pushf
cmps
clc
out
pop
repnz
mov
movs
movs
push
jb
push
jmp
sub
sub
loopne
push
sub
fstp
push
shl
pop
das
mov
xchg
mov
cmps
jb
jl
clc
ret
daa
and
sub
add
inc
or
adc
xor
jmp
mov
clc
aad
jne
dec
adc
sahf
call
(bad)
fs
push
mov
jmp
shl
int
(bad)
jge
adc
mov
xlat
xchg
jae
pop
sbb
mov
sbb
dec
add
push
in
rcl
mov
retf
es
mov
into
jp
fwait
xchg
dec
jmp
xchg
ss
cmp
bnd
aaa
(bad)
xor
inc
push
jns
(bad)
mov
outs
sub
xor
jno
inc
movs
cmp
hlt
fidivr
cmp
jge
sub
fnstcw
ficom
lahf
or
shr
sub
ins
mov
icebp
int3
jl
mov
sbb
push
pop
mov
inc
div
fdiv
dec
xchg
jmp
cld
iret
sub
mov
jbe
sahf
mov
(bad)
fwait
popf
leave
fidiv
add
inc
adc
stos
(bad)
pop
xchg
push
fst
push
lea
loop
into
push
xchg
jb
mov
mov
jmp
out
jmp
movs
and
or
mov
mov
xchg
fisttp
or
popf
repnz
daa
je
in
pmullw
pop
mov
mov
and
mov
test
fcomp
int3
aam
pop
add
dec
and
pop
cmp
sub
ret
daa
cmp
pop
jge
ss
int3
xchg
test
jle
test
(bad)
xor
pop
jmp
cmp
xchg
hlt
mov
or
(bad)
and
aam
fwait
movs
pop
mov
(bad)
(bad)
and
sahf
pop
stos
cdq
js
inc
xchg
fimul
iret
fidiv
mov
mov
ret
xor
jle
(bad)
sub
push
pop
clc
retf
aam
gs
lds
stos
in
ins
mov
push
jae
pop
imul
mov
push
pop
sbb
dec
and
push
dec
sbb
inc
cmp
(bad)
and
sbb
das
xchg
(bad)
lahf
push
inc
xlat
repnz
ret
call
hlt
xor
mov
xchg
cmc
and
or
pop
mov
loop
stos
enter
lahf
push
es
data16
das
adc
jl
fild
jns
or
loope
add
cmp
push
jno
rol
call
or
xchg
fdivr
dec
adc
(bad)
pusha
xlat
mov
push
inc
mov
and
repnz
lods
sti
(bad)
(bad)
jmp
das
inc
pop
out
mov
jl
mov
pop
cs
mov
fwait
out
pop
or
pop
inc
push
or
mov
cmp
mov
jo
rcr
fldenv
inc
sar
mov
mov
inc
add
xchg
into
and
(bad)
lods
imul
sbb
shr
scas
lea
mov
rol
lds
sbb
mov
ins
cmp
xor
or
loopne
fcomp
inc
rcr
out
loope
mov
gs
lods
jb
sahf
mov
mov
push
inc
xor
mov
sbb
jmp
retf
mov
test
out
cmps
sbb
or
jmp
inc
mov
(bad)
push
cmp
in
and
mov
push
leave
test
mov
sahf
scas
lds
stos
rcl
sub
aas
inc
jne
retf
push
jo
out
xor
push
in
mov
test
add
mov
add
cli
movs
push
dec
test
inc
imul
adc
(bad)
sub
rcl
das
retf
push
scas
xor
movs
je
push
jno
dec
test
(bad)
stos
loope
test
int3
or
xchg
scas
inc
ret
and
cmp
inc
xor
xor
mov
sbb
(bad)
ss
push
adc
jp
push
sar
ds
sub
(bad)
retf
and
push
mov
imul
jge
or
iret
pushf
stos
sbb
pop
pusha
push
jno
push
enter
dec
mov
lea
ss
les
xchg
pop
pop
imul
push
xchg
shl
mov
pop
sbb
clc
fcomp
aas
mov
mov
(bad)
loope
imul
retf
sub
fwait
arpl
pusha
imul
inc
in
push
fwait
and
inc
(bad)
aam
push
inc
lahf
and
and
test
mov
push
jns
jle
dec
jne
mov
jmp
xchg
test
xor
sub
dec
sbb
sbb
adc
pop
nop
popf
fs
fdivr
movs
std
sahf
fwait
and
daa
pop
or
lds
iret
(bad)
push
inc
jo
les
iret
lods
les
mov
vmwrite
pop
sbb
pop
cmp
jbe
into
mov
ficom
idiv
fsubr
cld
int
and
push
cmc
jg
cmp
enter
sbb
jns
ins
cs
jne
ins
dec
xchg
inc
dec
xchg
cmp
inc
xchg
fisub
pop
nop
lods
out
cmps
xor
jp
jmp
xchg
jo
adc
and
pop
jp
out
retf
fxch
pushf
xchg
loope
sbb
rol
into
push
call
push
lock
or
pop
or
mov
nop
xor
neg
lods
out
xor
sub
mov
mov
sbb
mov
loope
mov
neg
sbb
pusha
pop
jecxz
enter
push
mov
push
arpl
jnp
dec
lahf
mov
sbb
pop
cmp
les
xor
dec
mov
int
ins
cmp
aam
inc
jbe
sbb
push
cmp
test
iret
xor
push
adc
push
bswap
cmp
(bad)
xchg
push
sbb
xchg
jecxz
cdq
test
aam
xor
(bad)
fcmovnbe
add
icebp
xor
add
test
sub
push
adc
pop
xor
mov
hlt
bound
sti
xchg
sar
dec
call
xchg
sbb
retf
out
(bad)
lods
dec
ror
mov
pop
add
push
add
out
mov
push
jl
into
sar
in
vunpcklpd
mov
push
icebp
movs
cmp
sti
nop
arpl
cmp
in
(bad)
xor
das
inc
cmps
mov
out
pusha
rol
stc
cmps
xor
sub
jnp
add
xor
jo
mov
popf
add
cmp
fsubp
call
xchg
fild
leave
inc
mov
mov
push
cmp
and
mov
icebp
scas
daa
jmp
or
retf
arpl
shr
enter
cmp
addr16
fstp
cmp
add
imul
shl
xor
adc
inc
loope
test
push
aad
jmp
std
mov
xchg
ja
fdiv
ret
adc
mov
(bad)
cmps
fimul
dec
loop
push
push
pusha
xor
mov
pop
sbb
lock
aad
mov
sbb
mov
call
mov
lds
inc
adc
add
lods
test
xchg
pop
inc
cmps
clc
push
gs
ss
pop
mov
loope
hlt
dec
test
pop
sbb
cmp
pop
jbe
pop
paddsb
aaa
test
push
cmp
popa
call
xchg
inc
cmp
cs
mov
mov
and
sub
cmp
int
out
retf
outs
mov
push
ss
push
in
adc
lods
(bad)
aad
aad
add
gs
inc
movs
stc
dec
push
add
jno
pop
scas
imul
jmp
add
push
sahf
arpl
add
pop
pop
fsub
ja
test
int3
arpl
cmp
aad
jmp
fnsave
dec
pop
stos
sti
js
aam
cmp
sysenter
push
sub
pop
neg
cmp
into
pop
sub
outs
pusha
test
push
mov
popa
into
sti
(bad)
pop
fsubr
push
je
or
push
sub
and
and
or
imul
fstp
pusha
into
mov
mov
sbb
sbb
loopne
sbb
js
sub
jae
adc
daa
inc
sbb
scas
stos
and
inc
push
not
cmc
(bad)
add
or
push
jg
sub
movs
iret
int
pusha
cli
hlt
movs
pop
stos
fs
sti
iret
aam
movs
loope
dec
xchg
pop
repz
out
or
dec
fisub
xchg
mov
outs
mov
(bad)
sbb
lahf
jl
aas
sbb
stos
js
cmps
fsub
cs
call
(bad)
and
mov
and
jne
mov
fdiv
cli
jo
cli
jp
(bad)
dec
adc
add
rcl
ror
std
sbb
jmpw
dec
mov
xchg
call
imul
sbb
div
mov
dec
or
js
(bad)
js
cmp
pop
enter
lods
(bad)
mov
add
cmp
ds
clc
std
xchg
mov
fadd
mov
je
inc
aad
dec
pop
loop
repz
dec
gs
mov
ins
jecxz
xor
cmc
ror
retf
(bad)
mov
bound
les
aam
dec
add
pop
xchg
ins
and
pop
xor
or
or
es
aam
inc
add
and
pop
ret
jnp
push
add
into
(bad)
jne
(bad)
push
loope
das
add
imul
or
scas
arpl
repz
repnz
or
dec
add
arpl
mov
adc
ss
inc
or
mov
dec
cmp
cmp
je
push
adc
pop
add
jg
imul
das
push
sub
cmp
stos
pop
jl
imul
repz
in
pop
xor
cmp
stos
pop
sub
add
xor
or
daa
sub
arpl
dec
movs
push
push
call
pop
cwde
jg
add
push
xlat
cmps
or
sbb
xchg
and
sub
mov
stos
and
or
cmp
nop
jo
ins
jmp
xchg
lahf
sbb
inc
xchg
mov
inc
jo
mov
(bad)
jae
push
or
add
mov
rol
daa
xlat
push
sahf
mov
in
xchg
mov
inc
mov
mov
jbe
je
mov
push
in
or
mov
call
inc
mov
mov
mov
cwde
fwait
mov
nop
enter
jmp
adc
in
es
or
mov
mov
hlt
add
mov
dec
mov
push
cmp
jnp
adc
in
popf
xchg
or
(bad)
dec
and
shr
xchg
fdiv
adc
jge
pushf
fucomi
ror
mov
add
push
adc
in
in
leave
adc
movs
shl
outs
clc
fadd
adc
cmp
in
push
inc
push
pop
mov
xor
pop
and
dec
lods
jg
call
ds
push
in
pop
neg
shl
retf
cmp
mov
inc
adc
cmps
inc
hlt
fstp
mov
add
ins
retf
lea
jbe
aas
mov
(bad)
jl
sbb
xor
je
fdivr
lahf
xor
inc
jecxz
sar
cmp
push
mov
test
scas
xchg
jl
ins
dec
dec
adc
lds
int3
popf
retf
mov
loopne
dec
or
inc
outs
mov
fnstcw
or
mov
out
fs
inc
jmp
push
cmp
xchg
inc
cld
fisttp
add
jnp
jnp
dec
rcl
call
sahf
stos
jmp
mov
aad
in
paddsb
outs
mov
cld
xor
pop
popaw
and
push
inc
ficomp
sbb
call
inc
aas
jge
inc
fdiv
pop
dec
stos
ins
mov
dec
pushf
gs
jmp
pusha
inc
fs
mov
xor
mov
popa
addr16
cwde
sub
xchg
fldenv
arpl
sub
popa
ret
mov
adc
arpl
add
adc
push
inc
add
invd
call
sbb
xor
js
lods
push
rol
dec
add
or
cli
cs
pop
or
movs
cmp
fistp
add
shr
cmps
leave
cdq
pop
aad
cmps
sbb
push
fild
dec
(bad)
xor
stos
mov
cmp
mov
fistp
xchg
ss
add
outs
ret
cli
ror
jecxz
xor
pop
or
cld
sbb
jmp
int3
xchg
jmp
push
inc
push
test
out
jmp
adc
mov
mov
inc
lods
ret
pop
std
mov
jge
in
fistp
mov
mov
add
jmp
and
jbe
add
iret
xchg
sub
inc
cmps
dec
cmp
dec
push
in
sbb
cmps
or
es
cmp
mov
adc
add
sub
add
cdq
sbb
cmovge
xchg
rsqrtps
or
enter
pop
cmps
icebp
dec
jns
inc
cli
rcr
pop
pop
push
jecxz
lds
mov
clc
repz
jmp
mov
and
xchg
sbb
mov
loope
popa
mov
enter
pop
xor
mov
jmp
repnz
sbb
arpl
pushf
mov
push
ret
push
or
shl
mov
movs
jns
adc
mov
push
loop
call
cwde
popa
test
scas
rcr
add
(bad)
out
jns
xchg
ret
inc
js
fcom
jmp
out
rol
mov
push
xchg
lahf
adc
loop
pop
mov
or
imul
push
sub
push
push
nop
mov
sbb
adc
das
clc
xor
cld
je
aaa
out
icebp
or
pushf
clc
stc
lahf
xchg
jge
sti
(bad)
stos
xchg
cmp
add
mov
popa
mov
add
mov
pop
or
mov
mov
mov
or
fsub
popf
loopne
jns
mov
add
(bad)
adc
movs
mov
pusha
cmp
fstp
jmp
pop
jecxz
scas
add
lock
sbb
scas
add
push
lods
mov
pusha
iret
push
cmp
leave
xor
sub
xchg
imul
inc
imul
mov
int
int3
fwait
lock
out
test
and
adc
cwde
fadd
pop
and
or
(bad)
sbb
dec
shl
sub
stos
add
push
push
iret
mov
call
mov
mov
call
mov
mov
push
outs
in
inc
in
adc
pop
mov
pop
adc
adc
pop
mov
call
enter
sub
dec
jae
test
mov
sub
hlt
jle
or
xchg
pop
rcl
sbb
sbb
sti
xor
push
out
sbb
call
jmp
clc
mov
mov
jo
cmc
mov
jns
inc
je
jnp
ds
lods
sbb
pop
outs
jg
mov
add
fidivr
addr16
lds
jle
fwait
mov
je
out
xor
cmp
sbb
pop
adc
pop
and
and
push
xor
or
jmp
(bad)
xchg
xchg
jns
mov
and
xchg
ins
ja
jge
add
in
popf
fstp
rol
jecxz
mov
push
retf
fild
push
pushf
icebp
jnp
add
push
pop
jmp
xor
mov
dec
pop
sub
clc
(bad)
or
sbb
mov
fistp
add
into
push
or
mov
pop
sub
adc
out
inc
xlat
les
xchg
xor
mov
sbb
outs
push
pushf
mov
fidivr
push
call
mov
daa
mov
pop
jg
popf
int
push
das
out
out
mov
in
std
retf
push
fild
adc
scas
push
(bad)
xchg
push
push
cs
push
retf
jne
daa
sub
outs
xchg
mov
lods
popf
loop
inc
pop
jl
bound
xchg
bound
call
movs
aas
shr
dec
push
pop
es
mov
push
(bad)
call
aad
leave
adc
cs
(bad)
xlat
outs
mov
pop
repnz
mov
add
inc
das
pop
jg
mov
jecxz
mov
xchg
jns
push
pop
xor
pusha
or
aam
jbe
out
jmp
inc
add
imul
adc
imul
pop
sbb
call
sbb
es
shl
xchg
pusha
ins
xchg
jmp
movs
or
mov
arpl
or
xchg
(bad)
sub
add
clc
(bad)
outs
mov
xchg
sub
xor
loope
push
fiadd
nop
jmp
mov
add
fldcw
fld
mov
cmp
(bad)
push
adc
ins
in
inc
push
dec
mov
push
inc
xor
inc
fst
jo
(bad)
fld
popa
push
inc
push
pop
pause
cs
sbb
adc
hlt
call
inc
int
adc
addr16
nop
movs
jmp
pop
clc
movs
cmp
push
daa
xchg
sti
cmp
test
sbb
jle
pop
push
adc
sti
mov
push
leave
mov
pop
xchg
mov
ss
pushf
cmp
icebp
sbb
jne
push
inc
dec
xchg
xor
lods
sub
jbe
push
ja
lea
nop
popf
mov
xchg
xchg
int
or
mov
(bad)
or
xchg
int
iret
sub
nop
retf
jno
fwait
add
ins
xchg
aaa
cld
je
add
je
pop
icebp
inc
jg
inc
pop
imul
outs
xor
cmps
je
fwait
call
call
hlt
out
cmp
and
cmovbe
shl
daa
iret
cmc
(bad)
into
and
lock
dec
push
ret
xor
jp
jnp
jno
cmp
adc
js
je
sub
call
cli
push
int3
xor
cmps
xchg
es
mov
mov
adc
scas
loope
pop
retf
ret
xor
lods
popf
jmp
into
fldcw
dec
in
(bad)
mov
cdq
loope
xchg
mov
sub
push
inc
mov
(bad)
std
jb
fmul
lock
shl
push
pop
mov
lods
adc
out
push
mov
jmp
ds
jmp
adc
xor
inc
pop
cmp
sub
inc
jmp
inc
push
leave
jb
xchg
sbb
jbe
cmp
xchg
(bad)
arpl
xlat
jmp
or
dec
sbb
pop
jno
push
pop
fsub
ror
fistp
fist
stc
xor
xor
dec
lahf
dec
xchg
sti
std
(bad)
shr
mov
add
aas
push
push
mov
mov
sub
xchg
cwde
pop
aad
(bad)
outs
and
pusha
hlt
ret
fnstcw
push
mov
adc
mov
adc
leave
into
rcl
jg
call
test
add
cmp
int3
ret
retf
pop
hlt
mov
push
gs
clc
xchg
lea
clc
or
adc
dec
mov
push
xchg
xor
pop
inc
popa
adc
push
mov
das
stc
test
and
cs
in
fs
cwde
stc
outs
xor
neg
pop
out
sti
sbb
retf
sbb
clc
test
push
inc
jmp
sub
ror
mov
fidivr
pop
jge
in
ja
inc
sbb
movs
xor
xor
push
ja
adc
pop
xchg
stos
mov
stos
imul
xchg
jmp
aad
arpl
ja
jne
rol
sub
push
jae
movs
mov
repz
sub
xor
jmp
fldenv
std
sti
dec
jge
push
ins
xor
pop
stos
(bad)
es
add
or
jno
ror
pop
pop
dec
(bad)
lds
das
adc
pop
push
mov
idiv
add
aas
popa
cdq
inc
movs
sbb
icebp
jae
mov
int3
push
sti
hlt
or
push
mov
mov
and
pop
aad
lds
xor
sub
lock
das
test
dec
sub
pop
shl
repz
cmc
mov
les
push
mov
lea
xor
ja
push
(bad)
aaa
sar
outs
clc
stos
xchg
inc
and
adc
pop
popa
sub
dec
push
inc
ret
ins
xchg
cmc
add
or
imul
dec
mov
and
mov
push
mov
lods
push
mov
push
fsub
push
or
fucomi
fadd
inc
cld
call
mov
jl
sbb
int
add
ret
ins
addr16
sbb
pop
push
add
pushf
pusha
xchg
push
pop
pop
xchg
jno
test
adc
das
dec
xchg
clc
mov
jle
bound
sub
mov
lods
in
dec
or
jp
fiadd
(bad)
cmp
aad
cld
out
fwait
and
push
xor
retf
sbb
jl
outs
cmps
mov
stos
mov
sti
loop
push
icebp
xchg
xor
jo
mov
pop
mov
std
jnp
fidiv
cmp
aaa
clc
shr
call
xor
jmp
test
sbb
mov
dec
mov
xor
dec
test
mov
inc
mul
fsubr
push
ret
xchg
and
push
(bad)
pushf
shl
xchg
pop
push
aad
aam
test
pop
mov
sbb
and
adc
test
aaa
push
cdq
inc
push
fstp
pop
fsub
data16
cdq
adc
fs
jmp
and
aaa
dec
cmp
repnz
xchg
mov
dec
repz
mov
stc
pushf
fadd
jmp
fs
rcr
or
fmul
ret
scas
sbb
mov
jle
(bad)
jl
adc
sbb
mov
jae
std
mov
dec
ss
jl
mov
or
(bad)
mov
ror
ins
ins
sub
enter
push
lods
push
dec
mov
mov
dec
and
mov
inc
stc
iret
push
(bad)
mov
cmp
jae
cdq
push
and
jmp
clc
xchg
jmp
dec
adc
lea
stc
aad
pusha
cwde
inc
sbb
test
inc
add
movd
xchg
fisubr
dec
sub
lds
imul
and
jmp
lods
rcl
push
test
ror
mov
xor
pop
xlat
push
add
ret
cs
ficom
jmp
mov
dec
into
sbb
mov
fs
cmp
aam
outs
and
cdq
add
lods
or
loope
add
mov
movs
jmp
rol
shl
inc
dec
pop
out
jne
pop
cmps
adc
idiv
inc
test
call
xlat
sub
scas
pushf
and
and
retf
or
mov
mov
or
enter
imul
imul
fild
mov
jmp
or
push
test
fldcw
mov
sar
stos
lock
xchg
(bad)
jg
fdivr
pop
xchg
adc
adc
fnstcw
arpl
jbe
push
push
ret
sbb
dec
jl
mov
sti
sti
and
test
dec
mov
sahf
ds
jne
int3
jmp
(bad)
push
ins
push
add
jno
imul
ror
push
or
xor
int
ret
(bad)
xlat
rcl
jns
xor
clc
push
fisub
mov
dec
push
jo
ret
inc
mov
push
xor
dec
aam
fisub
not
stos
hlt
and
jge
fdivr
mov
pop
(bad)
sar
leave
jo
outs
popa
or
arpl
jno
(bad)
dec
mov
(bad)
(bad)
icebp
or
cmp
mov
mov
or
std
out
pop
or
push
push
bound
aam
xor
jg
pop
cld
or
xor
sub
es
mov
ret
out
and
add
xchg
nop
mov
mov
jne
aas
mov
adc
xchg
bound
mov
rcr
dec
mov
jns
cmp
outs
dec
inc
lea
jp
xor
cmp
inc
into
adc
mov
popa
lahf
mov
leave
jno
loope
sub
out
inc
outs
test
inc
js
les
rol
mov
sar
add
int
mov
mov
sub
test
jae
clc
mov
sbb
ret
pop
jns
mov
ins
dec
and
mov
and
adc
push
mov
ret
xor
pop
adc
adc
lock
cmp
add
clc
scas
adc
and
mov
or
sub
or
test
fmul
adc
jg
ins
test
imul
std
repz
(bad)
mov
movs
or
sbb
call
push
iret
mov
xor
inc
mov
lahf
mov
cmp
jno
jge
cwde
inc
(bad)
aas
idiv
inc
lods
leave
adc
mov
imul
mov
push
mov
add
adc
add
xchg
mov
stc
jno
push
enter
mov
jmp
js
(bad)
in
pop
fptan
cdq
ficomp
jns
out
sahf
lods
push
sub
stos
or
jle
and
pop
sar
out
mov
xor
and
cld
aaa
mov
dec
jle
(bad)
(bad)
jl
nop
or
add
(bad)
xchg
sub
out
out
push
add
cwde
cmp
scas
out
lock
sahf
mov
inc
add
jno
ins
mov
out
je
lea
repnz
mov
cs
movs
xchg
push
xchg
pop
aas
mov
dec
xor
popa
int
mov
retf
test
mov
test
jb
pop
and
in
push
cmp
push
test
push
sbb
in
sub
fadd
mov
hlt
outs
aas
jmp
js
repnz
jle
jne
jno
enter
jecxz
mov
mov
xor
hlt
and
dec
neg
ret
mov
lahf
sub
xchg
lods
fcom
jmp
cmp
stos
xor
mov
jno
fcom
and
nop
dec
or
(bad)
cmps
xchg
jle
retf
add
loopne
dec
stos
test
or
das
or
out
mul
ins
and
add
xor
mov
xor
or
push
mov
jle
xchg
stc
shr
mov
mov
jle
data16
mov
xchg
in
stos
je
push
pop
cld
(bad)
mov
fcmovb
push
in
loopne
nop
pop
out
popf
je
lds
aam
push
or
pop
mov
inc
mov
std
fwait
pop
xor
fiadd
out
call
ret
dec
fnstsw
push
xchg
jle
pushf
sub
and
scas
lock
out
adc
and
cdq
mov
cli
jge
outs
in
jne
repz
mov
cmc
outs
pop
mov
sar
cmps
lock
mov
mov
adc
mov
icebp
(bad)
add
mov
(bad)
pop
test
push
dec
stos
and
or
shl
cmc
inc
mov
loopne
mov
xlat
jmp
xor
test
sub
fistp
jg
and
icebp
daa
jl
test
jle
xchg
cmps
sbb
mov
dec
mov
inc
movs
push
(bad)
outs
out
clc
rol
push
pop
pop
sub
xor
cmp
(bad)
add
push
cmps
lahf
mov
(bad)
dec
loope
adc
mov
out
repz
mov
in
xchg
(bad)
out
mov
cmps
jnp
cmp
push
pop
cmps
retf
ins
mov
in
repz
xchg
out
imul
dec
jecxz
jns
hlt
fsubr
cmp
mov
pop
rcr
neg
adc
xlat
out
addr16
out
mov
mov
(bad)
stos
xchg
leave
test
shr
add
adc
clc
ins
or
mov
jb
xchg
call
lahf
cmps
dec
dec
les
mov
(bad)
test
arpl
stos
push
stos
shr
les
cwde
add
inc
loopne
push
fmul
sub
mov
popf
add
(bad)
test
mov
sbb
mov
daa
repnz
adc
jns
jecxz
mov
jp
in
push
pop
das
adc
addr16
inc
gs
push
ins
in
sahf
xlat
pushf
pop
jl
adc
in
add
xchg
mov
mov
cmp
fmul
push
gs
cmps
pop
and
outs
mov
in
dec
add
(bad)
xor
icebp
pushf
neg
mov
in
sub
xchg
adc
inc
inc
cmps
pop
jmp
dec
jge
int
pop
cmp
loop
(bad)
pop
in
dec
sub
fisub
dec
cld
(bad)
btr
(bad)
pop
xor
ja
pop
mov
out
out
imul
xchg
push
cmp
outs
rcr
mov
push
in
jb
sbb
sub
xor
sbb
mov
xchg
fldenv
add
sbb
jp
add
xor
movs
cwde
outs
xor
cld
out
retf
clc
mul
cmps
xchg
mov
jl
dec
push
push
fistp
mov
xchg
cmp
inc
data16
cmps
scas
push
das
inc
cmps
dec
jl
mov
xor
jo
(bad)
ds
je
add
push
mov
lahf
mov
gs
dec
cmp
jle
mov
mov
mov
jno
loop
out
sbb
fsub
fstp
inc
int3
in
rol
repnz
pop
push
jnp
mov
cmp
es
pop
push
jno
aad
add
dec
jnp
add
dec
hlt
out
mov
(bad)
fadd
add
sbb
pop
and
mov
repz
int3
test
mov
int3
mov
daa
inc
push
or
test
cmps
popf
movs
and
fiadd
cdq
cmps
scas
xor
inc
clc
dec
in
xor
jmp
repnz
cmp
movs
cmps
adc
(bad)
pop
mov
(bad)
adc
or
test
mov
jns
sti
lods
pop
jecxz
and
mov
lock
push
sub
add
int
sbb
cmp
dec
dec
sahf
inc
out
fwait
xor
or
cmc
lds
pop
loopne
repnz
push
sub
(bad)
xchg
inc
jmp
inc
mov
out
mov
out
or
in
mov
sahf
mov
pop
or
inc
fimul
jmp
daa
mov
imul
sbb
addr16
mov
test
stc
mov
sbb
(bad)
shl
jle
cmp
aaa
das
out
out
dec
lahf
jmp
sbb
pop
add
push
lods
mov
stos
lods
push
push
cmps
mov
es
aaa
gs
xchg
push
mov
fiadd
retf
and
mov
imul
in
loop
mov
inc
test
pop
daa
outs
jl
xchg
dec
inc
(bad)
or
push
mov
mov
aad
test
adc
pop
add
mov
inc
popa
out
jae
pop
adc
dec
call
sti
xchg
jne
outs
aas
jmp
cmp
test
jnp
es
outs
(bad)
push
in
shl
jbe
adc
aaa
adc
inc
add
cmp
push
push
lods
and
cmp
sbb
es
pop
add
inc
cmp
int3
jnp
test
mov
fbstp
add
push
sti
jl
pop
stc
loope
(bad)
scas
xchg
ja
aam
and
inc
or
mov
and
ret
mov
fsubr
cs
jb
fs
inc
inc
cli
mov
push
xchg
jmp
stos
ret
gs
sub
cmp
push
shl
xchg
or
gs
or
dec
in
dec
sbb
pop
out
cmps
inc
es
mov
jae
add
xor
pop
add
(bad)
mov
pop
jmp
pop
mov
loopne
xchg
(bad)
idiv
inc
int
pop
loop
mov
xlat
cdq
data16
test
jne
ficom
aas
inc
inc
jg
fbld
push
sti
imul
add
push
add
outs
test
lods
mov
dec
es
lods
jnp
int
stc
or
hlt
mov
cmp
ins
scas
ret
imul
out
or
xchg
xchg
xor
mov
push
daa
xor
mov
cmp
push
mov
nop
mov
dec
test
xchg
cmps
xchg
jno
or
xchg
xor
hlt
mov
xchg
or
fwait
xchg
mov
sub
pop
cmp
xlat
movs
mov
ins
inc
outs
bound
aaa
jl
cmps
das
sbb
jl
xor
pop
or
cmp
jmp
rcl
sbb
popf
add
xor
fst
or
div
dec
das
mov
je
outs
inc
mov
fidiv
jmp
ret
cmp
mov
cdq
xchg
inc
ja
mov
jbe
or
mov
mov
jl
pop
mov
dec
sbb
mov
mov
je
xchg
push
push
sbb
loope
rol
xchg
in
push
jb
cmp
ficomp
push
fidiv
shr
push
arpl
ficom
dec
mov
xlat
jp
push
loop
fcomp
mov
loopne
test
inc
ja
xor
cs
jge
lahf
ins
fidivr
jb
dec
fs
lds
lahf
shl
dec
push
aaa
add
mov
pop
cmp
pushf
pop
inc
xor
and
mov
fsqrt
pusha
xchg
xor
xchg
js
rcr
mov
jl
and
int
mov
push
sbb
shl
ds
mov
cmp
in
adc
in
jbe
inc
pushf
pop
or
cmps
add
inc
xchg
test
pop
push
add
daa
xor
ins
jecxz
mov
stc
bound
into
icebp
hlt
sti
ss
fnsave
into
dec
aad
stos
mov
scas
fsubr
xlat
mov
(bad)
push
cmp
jne
mov
dec
xchg
fisub
repnz
or
xchg
enter
pop
push
sbb
sahf
jge
jle
sub
mov
imul
out
bound
push
test
call
gs
or
not
iret
xchg
(bad)
loope
sbb
cmp
mov
aad
stos
jg
fmul
mov
fs
hlt
cmps
das
icebp
loope
mov
add
push
loope
mov
lds
or
inc
stos
les
std
mov
lea
dec
or
icebp
mov
fnstenv
jp
test
add
jmp
and
icebp
push
xor
cld
adc
nop
movs
or
sbb
mov
pop
bound
push
add
bswap
pop
push
add
ss
jnp
gs
push
nop
iret
cli
sti
sbb
mov
stos
(bad)
xchg
push
dec
test
fist
call
test
test
xchg
inc
add
fcmovbe
aas
cmp
pop
or
push
add
outs
pushf
dec
out
add
inc
imul
sub
jp
data16
pushf
dec
and
pop
(bad)
mov
iret
data16
test
aam
les
int3
vphaddubd
push
add
retf
jl
xlat
push
and
daa
fbld
lea
movs
pop
or
pop
dec
mov
mov
jo
xchg
or
cmc
fs
movs
mov
mov
adc
jle
test
fisub
lock
or
push
mov
addr16
add
fidivr
pop
sub
imul
call
daa
xchg
pusha
shr
pusha
mov
enter
sbb
test
inc
ror
sbb
test
cmps
(bad)
into
and
xor
inc
mov
out
not
stc
push
jbe
dec
xor
sub
jmp
jge
movs
pop
in
in
fdiv
ds
jae
sub
push
xchg
sbb
fcom
sub
ja
inc
pop
pushf
movs
fld
push
inc
or
mov
test
xchg
or
aad
int
cwde
and
test
data16
(bad)
add
dec
mov
(bad)
ja
mov
fsub
retf
gs
jmp
mov
add
pop
mov
mov
fild
jg
out
mov
mov
mov
hlt
xchg
mov
xchg
shr
or
in
sub
jle
ficom
sub
cmp
push
mov
and
mul
cmc
out
adc
pop
stc
jne
jnp
xor
or
pusha
das
imul
pop
mov
cmp
leave
xchg
in
mov
sbb
test
mov
and
add
inc
sub
ds
jnp
sub
ret
adc
inc
jge
dec
xchg
mov
add
xor
pop
mov
and
rol
loope
stc
repnz
mov
or
inc
test
mov
shl
ret
sub
sbb
inc
dec
and
cmp
jg
bound
inc
jae
and
lods
cmp
dec
imul
dec
pop
sbb
pop
push
mov
(bad)
not
mov
or
lea
retf
mov
gs
adc
pop
int3
ins
mul
mov
inc
mov
fnstenv
push
clc
mov
mov
(bad)
daa
dec
sbb
and
add
cdq
xchg
mov
fisubr
jnp
cmp
dec
mov
sbb
sbb
rcl
pop
or
(bad)
jmp
mov
cmc
stc
ja
jb
test
(bad)
xor
lahf
pop
ins
or
mov
mov
jns
shl
fnstenv
out
pusha
popa
xchg
icebp
popa
mov
jp
out
pop
test
push
fsub
test
xor
shr
or
mov
xchg
int3
sub
mov
push
and
xor
shl
mov
cmp
cmp
stos
jo
sub
(bad)
xchg
add
dec
sahf
out
jl
ss
fmul
xchg
pop
jne
or
xchg
(bad)
cld
push
mov
sbb
pop
hlt
fstp
test
mov
pop
push
add
ja
ja
and
mov
add
mul
mov
mov
push
sbb
mov
inc
fisttp
test
xor
cmp
sbb
mov
mov
add
iret
and
movs
sub
jbe
jg
xlat
cmp
mov
aaa
ret
mov
jmp
iret
xor
adc
mov
sub
cmc
mov
ds
icebp
add
nop
cmps
push
(bad)
xchg
push
std
fld
outs
mov
cmps
neg
xchg
pop
cmp
push
push
dec
int
sbb
leave
adc
cld
jge
daa
or
adc
pop
xchg
shr
lods
push
xchg
sbb
mov
sub
xchg
xor
cmp
xchg
pop
mov
pop
mov
in
retf
push
add
call
imul
dec
or
cmps
movs
mov
and
xor
dec
popf
push
jle
std
sbb
ins
inc
into
dec
imul
pushf
mov
in
out
fwait
jne
stos
push
mov
(bad)
test
mov
aam
sub
imul
cld
mov
jle
ss
nop
stos
pop
pop
inc
inc
pop
scas
scas
sar
push
out
stos
pop
mov
cmc
in
inc
push
xor
xlat
fidiv
cld
loope
fcomp
jle
push
mov
popa
ret
dec
adc
push
dec
sbb
hlt
fwait
mov
(bad)
push
clc
adc
xor
or
not
test
mov
mov
leave
xor
push
jbe
fs
or
shr
scas
mov
pop
or
push
pusha
clc
std
dec
outs
into
xchg
sub
out
shr
out
lods
cwde
loopne
outs
movs
fisttp
or
push
mov
sbb
lock
(bad)
je
aad
loope
xchg
out
jecxz
inc
inc
cli
shl
leave
(bad)
aaa
inc
sub
loope
cmc
stos
jbe
call
into
cmp
sbb
jns
das
retf
loopne
mov
add
lea
jmp
pop
or
stos
jns
dec
(bad)
iret
adc
xchg
imul
add
popf
dec
pop
adc
and
jnp
pop
dec
das
cs
mov
push
push
mov
push
dec
jl
sub
scas
jl
dec
inc
adc
cmps
inc
bound
sub
out
into
lahf
aad
add
xchg
sub
adc
inc
cwde
pop
jecxz
cmps
outs
call
push
jnp
call
sub
repz
test
mov
adc
pop
cmps
stc
and
movs
jl
jmp
scas
mov
aad
inc
mov
aam
add
or
fadd
cli
je
scas
fmulp
dec
sbb
mov
out
xor
rcr
(bad)
fst
dec
outs
clc
rol
mov
xor
and
out
xlat
cmc
iret
and
and
fsubr
jmp
push
and
jmp
xchg
push
lea
retf
xchg
cmp
test
add
(bad)
inc
gs
push
jl
pop
adc
stos
loop
iret
es
nop
inc
out
outs
jo
xor
dec
repnz
pop
mov
adc
loopne
test
inc
pop
pushf
sub
xor
pushf
ins
adc
pop
sbb
push
mov
loope
movs
sbb
popa
test
mov
in
(bad)
mov
push
in
in
dec
jg
pop
mov
jns
adc
in
jmp
add
fs
push
inc
std
pop
fisttp
sub
or
jmp
add
jmp
out
sub
cli
popf
add
pop
fbstp
retf
inc
xchg
addr16
int3
(bad)
mov
cwde
data16
mov
push
out
xor
xchg
sbb
shl
adc
jge
jp
rcr
pop
out
push
ins
mov
(bad)
js
fwait
and
aas
mov
mov
aaa
fisubr
call
xchg
push
(bad)
imul
dec
add
test
mov
cmp
nop
dec
fld
fdiv
or
sub
push
and
xchg
or
cs
outs
jmp
cmps
test
lea
stos
mov
sub
fild
dec
jl
sub
xor
mov
adc
push
xchg
mov
cs
in
fdiv
sbb
pop
dec
shl
mov
xor
fcmovnu
hlt
inc
add
adc
fisttp
aaa
cmp
cmp
cdq
and
push
int3
data16
cwde
xor
adc
ret
mov
loope
mov
loopne
imul
retf
cmps
fsubr
sahf
jb
sub
sbb
push
hlt
mov
dec
push
xchg
mov
(bad)
int3
pop
xor
stos
dec
or
push
lods
push
jo
(bad)
in
inc
pusha
cmp
xchg
mov
retf
mov
pop
mov
or
cli
cdq
cli
xchg
dec
icebp
sti
imul
push
aad
shl
dec
fimul
sbb
outs
push
(bad)
mov
mov
push
jbe
pop
fnstsw
add
cwde
rcl
loopne
adc
fstp
js
inc
add
xor
and
mov
mov
clc
cdq
ja
xchg
ins
xchg
mov
mov
xlat
mov
mov
jg
bound
popa
lods
stos
(bad)
aaa
sbb
jb
call
cwde
and
or
adc
mov
int
call
jo
push
scas
(bad)
movzx
ss
pop
(bad)
add
and
imul
mov
add
sbb
jae
bound
stos
pushaw
dec
(bad)
push
ins
xor
aam
cdq
push
adc
mov
cmp
ror
hlt
repz
mov
or
or
xchg
scas
and
push
test
dec
scas
cmp
test
rol
outs
inc
jnp
mov
rcl
ret
sbb
or
in
jae
sti
in
xor
push
shl
std
dec
xchg
imul
retf
xor
lods
es
adc
into
push
push
inc
mov
add
sti
dec
jmp
jmp
aas
lock
ror
fbstp
jns
jmp
aam
out
gs
test
dec
xor
loope
mov
ret
imul
cli
push
sbb
inc
lahf
and
or
add
jecxz
adc
sub
lods
out
cmp
aam
push
cld
imul
std
or
shr
movhlps
mov
pushf
and
cmps
pop
repz
adc
cmp
scas
mov
shl
(bad)
sbb
inc
and
loope
jae
jae
fld
mov
jg
in
and
loop
bound
out
imul
fstp
(bad)
out
imul
loop
dec
cmp
mov
out
mov
inc
cmp
jmp
out
push
xor
sbb
jle
pop
std
xor
and
or
jnp
test
lods
lock
dec
(bad)
cmp
ror
(bad)
mov
rcr
push
xor
sub
into
test
dec
in
fimul
hlt
mov
sbb
rcl
int
jp
push
add
xor
ja
mov
ret
or
mov
push
mov
mov
mov
icebp
adc
lods
add
fild
cld
push
(bad)
rcl
push
and
dec
xor
(bad)
ss
mov
popa
adc
jno
push
imul
and
pushf
jbe
es
loope
add
scas
or
clc
pop
pop
or
(bad)
clc
mov
shl
ror
or
outs
cld
jnp
mov
sti
mov
mov
add
push
mov
jmp
push
lods
daa
enter
(bad)
xchg
xor
shl
mov
(bad)
dec
retf
ja
rcr
stos
es
test
sar
test
adc
add
stc
es
cmp
test
fwait
xor
sar
dec
imul
sahf
push
sbb
sbb
hlt
(bad)
daa
inc
adc
imul
pop
outs
cmp
mov
dec
cmp
jle
iret
call
sbb
call
ss
push
mov
mov
das
jle
mov
ins
bound
push
cmp
(bad)
lock
mov
gs
sub
pop
and
jge
pop
pop
ja
jmp
into
aas
pop
fadd
sar
sti
dec
sbb
mov
mov
and
retf
out
and
mov
adc
in
pop
jecxz
shl
aaa
jo
jg
dec
arpl
xchg
stc
dec
mov
xchg
out
and
rol
xor
stos
aaa
in
adc
(bad)
mov
and
arpl
jne
icebp
imul
addr16
movs
dec
pop
loopne
add
xor
xchg
in
xor
in
mov
(bad)
pop
sub
(bad)
and
xchg
cmp
aas
lods
call
mov
cwde
popa
add
lock
xchg
sti
(bad)
in
mov
ja
cmps
or
ss
mov
cmc
mov
mov
and
fwait
xor
or
pop
cmp
inc
call
icebp
jge
add
(bad)
jmp
lods
gs
jmp
(bad)
stos
scas
push
ds
adc
mov
(bad)
ret
mov
call
mov
xchg
fist
(bad)
data16
cmps
pop
xchg
gs
push
jb
sbb
aam
inc
push
dec
bnd
ins
bound
and
ret
imul
sahf
jns
ror
mov
jg
ins
cmp
call
fnstenv
repnz
lods
outs
outs
movs
test
stos
and
pop
and
mov
or
cwde
fistp
in
rcl
sbb
cmp
mov
jmp
dec
push
(bad)
popf
int3
mov
mov
or
retf
mov
ins
xchg
iret
push
jmp
sahf
xor
(bad)
fsubp
cmps
adc
(bad)
xchg
aam
fsubr
xor
adc
pusha
iret
push
xchg
stc
add
inc
jp
adc
in
jmp
test
cwde
adc
jno
jmp
outs
aad
jnp
pop
or
sbb
inc
mov
cdq
pop
cld
je
and
jo
je
pop
mov
add
inc
xchg
ret
aam
call
pop
mov
and
in
hlt
cmp
dec
test
arpl
adc
stos
les
cwde
movs
not
push
xrelease
movs
xor
ins
cld
sbb
pop
ret
push
xchg
je
test
shl
test
and
mov
xor
enter
mul
imul
pop
ficom
por
shl
aaa
repnz
call
bound
cmp
xchg
(bad)
movs
mov
xchg
ins
fcomp
dec
sub
dec
inc
ss
imul
ror
xchg
jecxz
jns
mov
sub
nop
test
push
gs
or
rcr
cmp
fisttp
fdivr
cdq
lahf
mov
fsubr
jne
fisubr
jbe
pop
xchg
lock
mov
mov
leave
shr
(bad)
xor
lahf
and
xchg
fiadd
jnp
ret
gs
popf
push
sub
xchg
xlat
xor
mov
ss
cmp
fisub
int3
lods
hlt
stc
cwde
loope
push
push
repnz
sbb
sub
jecxz
loope
and
div
je
xlat
ja
(bad)
and
test
test
push
lods
out
imul
rcl
jbe
stc
xor
mov
fs
mov
outs
in
(bad)
mov
inc
gs
or
repz
hlt
out
cwde
fiadd
movnti
jne
mov
add
pop
xor
loop
pop
jge
cmp
fcmove
ror
push
pop
xchg
cmp
daa
sbb
(bad)
xor
fstp
in
ins
xor
xchg
and
dec
dec
lahf
mov
cmc
jo
sbb
push
mov
cmps
cmp
cmp
xor
(bad)
cwde
push
pushfw
dec
mov
in
mov
daa
jge
or
push
scas
mov
nop
sub
loope
sub
ja
cwde
adc
ja
dec
pop
xchg
scas
scas
out
adc
mov
cmps
bound
sub
pop
inc
mov
pop
imul
lds
aad
mov
and
xor
aaa
nop
mov
sbb
mov
arpl
xchg
xor
fs
stos
dec
aaa
and
jmp
out
call
xor
sar
ja
scas
shl
xor
mov
test
daa
(bad)
int3
(bad)
repnz
in
mov
add
cmp
sub
movs
je
pop
pusha
(bad)
adc
mov
in
mov
xor
loopne
sbb
adc
mov
pusha
cdq
push
xor
sbb
imul
cld
ja
das
jl
pop
fcomp
pop
pop
in
xor
rcl
leave
push
sub
dec
jno
jns
inc
or
xlat
stc
pop
mov
ins
add
jecxz
and
les
sub
test
out
or
sub
xchg
and
add
outs
dec
inc
mov
je
inc
fstp
xchg
push
clc
pop
sub
xor
mov
aad
aad
jmp
pop
shl
dec
jmp
xchg
shr
xchg
fwait
pop
mul
push
jae
push
ret
inc
add
pop
mov
mov
jp
cmps
or
push
stos
cmc
jmp
xor
enter
jge
int
out
nop
adc
inc
mov
scas
jge
mov
xchg
addr16
mul
pop
ins
out
test
xor
mov
cmp
push
xor
sub
(bad)
movs
or
outs
enter
jmp
and
lock
shl
inc
sub
add
cli
cli
into
int
ds
call
xlat
pushf
xor
nop
cmp
and
inc
loop
jle
ret
or
xchg
jmp
sub
les
imul
jp
ret
pop
push
pop
inc
add
loop
inc
push
pushf
mov
and
in
cmp
xor
jns
push
xor
xchg
test
ins
aad
add
adc
jbe
mov
movs
jo
(bad)
mov
stc
jne
adc
push
xlat
loop
add
cmp
dec
mov
call
pop
fidiv
hlt
push
push
cmp
push
xchg
ds
shl
enter
cdq
call
xchg
sub
arpl
jnp
mov
and
or
mov
mov
imul
mov
shl
dec
iret
jno
ss
push
cmc
in
in
pop
dec
xchg
jae
push
(bad)
es
ss
je
mov
add
fwait
or
pop
mov
and
inc
pop
mov
or
imul
pop
dec
xor
cmp
mov
push
in
pushf
sbb
xchg
add
fwait
jno
js
xchg
pop
movs
sti
mov
imul
sub
int
add
aas
sub
push
popa
je
fild
in
or
xor
mov
mov
adc
mov
nop
jns
jbe
ins
push
popa
adc
daa
stos
mov
pop
push
cmps
dec
js
fnsave
xchg
(bad)
pop
(bad)
xchg
lods
mov
jo
jbe
push
mov
dec
ja
pop
sub
xchg
xchg
xlat
jae
(bad)
ins
mov
push
int3
mov
mov
or
or
loope
jmp
add
mov
outs
xchg
repnz
ds
xchg
mov
mov
pop
test
jl
outs
jmp
(bad)
mov
fld
in
mov
jno
das
and
inc
and
out
lods
add
loopne
mov
mov
in
adc
jo
in
out
xor
fidiv
cmp
dec
pop
xor
jb
push
xor
loope
outs
cmp
scas
mov
mov
push
xchg
mov
jne
xchg
pop
inc
mov
jmp
push
add
cmp
ins
add
je
mov
in
mov
loop
test
cmp
outs
add
mov
add
inc
aam
dec
fisubr
cmp
test
mov
pusha
push
ret
aam
sar
or
(bad)
cmp
stc
push
fsub
and
outs
fnstsw
inc
aad
test
sbb
mov
jecxz
and
inc
loop
aas
jo
push
xchg
ficom
lock
mov
test
jecxz
push
pop
fdiv
cmp
dec
and
add
loopne
ins
xchg
jb
shr
cs
(bad)
jg
mov
dec
jl
sbb
cwde
jl
or
int3
(bad)
jnp
fs
and
sub
jmp
(bad)
das
clc
(bad)
retw
pop
fdiv
or
inc
push
nop
mov
push
jp
pop
stos
repz
dec
and
cmp
cmp
out
adc
pop
mov
mov
pop
jmp
cmps
sub
mov
sar
jmp
ins
shr
push
sub
cs
ret
mov
ja
pop
enter
dec
pusha
xchg
cwde
mov
and
xor
jg
sahf
push
pop
pop
gs
loop
clc
loopne
bound
pusha
push
aas
mov
add
cmp
xchg
xchg
retf
mov
stos
inc
adc
jnp
mov
inc
mov
xchg
test
jmp
stc
outs
popf
adc
xchg
(bad)
pop
mov
pusha
inc
xor
arpl
scas
in
xor
dec
cmp
sbb
jl
or
sbb
aam
imul
loope
jnp
test
shl
inc
jl
dec
or
dec
mov
jle
cdq
or
inc
addr16
cmp
fisttp
sbb
mov
xchg
mov
enter
cmp
sub
test
xchg
cmps
bound
xchg
faddp
mov
mul
dec
popf
(bad)
sar
sti
out
jge
lea
scas
cs
or
sahf
cmp
out
mov
mov
sub
fs
xchg
mov
stos
mov
jl
aam
dec
push
dec
shl
outs
push
in
aas
shl
pop
jg
jmp
push
cld
popf
les
xchg
and
retf
test
or
sbb
(bad)
out
pop
int3
dec
pop
inc
and
mov
mov
sbb
sar
ficom
arpl
jmp
leave
out
cmps
cmp
shl
xchg
xchg
fs
sbb
pop
xlat
xchg
jp
sbb
push
scas
fsub
inc
cmp
mov
xchg
es
retf
rcl
cs
jg
inc
push
mov
enter
bound
bound
in
mov
jo
inc
(bad)
push
cs
and
js
mov
jecxz
xlat
call
mov
xchg
jb
out
and
inc
mov
push
inc
or
xor
sub
mov
jle
je
mov
mov
add
pop
repz
iret
or
mov
cmc
xchg
mov
cmp
test
jne
jmp
mov
and
js
sub
lock
cmps
push
aad
mov
ja
mov
call
repnz
jns
int3
cdq
xchg
add
xchg
cdq
pop
(bad)
pop
jecxz
jle
jle
rcl
cmp
cdq
pop
fwait
or
adc
ror
xchg
clc
mov
mov
push
jecxz
sub
aas
rcr
out
(bad)
and
xchg
int
mov
adc
mov
fldenv
hlt
mov
adc
add
add
ins
push
xchg
cs
cwde
cwde
mov
ret
adc
cmp
aaa
dec
mov
pop
jge
or
loope
jmp
jle
mov
pop
mov
and
cwde
push
jmp
inc
ret
cs
in
mov
loopne
fild
adc
into
xchg
xchg
lahf
(bad)
sbb
and
cmc
ds
repz
inc
mov
sbb
not
jle
sub
aam
inc
popa
aas
(bad)
push
push
repz
aad
xchg
dec
pop
aad
push
jno
push
call
inc
out
push
xchg
aam
scas
or
sbb
sbb
fwait
int3
jae
sbb
pop
dec
push
scas
jmp
fnstsw
xchg
pop
iret
cld
jmp
(bad)
lock
jge
ss
jl
xchg
call
loop
fidivr
mov
cdq
stos
aam
mov
cwde
ss
imul
rcr
pusha
stos
xchg
loopne
icebp
ins
mov
aaa
mov
scas
cld
push
(bad)
out
pop
retf
ins
pushf
inc
mov
mov
stos
cmp
retf
dec
or
push
repnz
loopne
pop
cld
ds
stos
xor
sub
shr
stos
in
repz
cmp
xor
in
out
add
add
pop
mov
and
and
inc
(bad)
call
retf
xchg
mov
dec
jb
add
mov
sub
lds
jecxz
hlt
inc
jno
adc
and
pop
jno
push
mov
or
out
aas
rcl
xchg
inc
sbb
dec
and
mov
cld
hlt
mov
int3
sub
and
adc
sbb
inc
xor
pusha
iret
or
retf
in
std
fnsave
mov
cmps
sbb
xchg
out
pusha
mov
sbb
xlat
inc
or
inc
pop
sti
std
pop
fs
or
sbb
push
lea
repz
addr16
(bad)
pop
add
clc
push
jae
xor
jl
fcmovb
jg
and
icebp
add
jns
pusha
ja
mov
xor
cmp
lods
jge
ret
sbb
xchg
cs
(bad)
std
ss
add
dec
(bad)
loope
jmp
push
mov
jmp
push
pop
hlt
gs
ss
and
aaa
mov
add
or
out
and
mov
mov
mov
dec
sbb
mov
(bad)
dec
leave
sahf
or
mov
bound
cmp
cmp
sub
inc
retf
fidiv
xor
rcl
aad
and
add
int
cmp
dec
mov
mov
sahf
fiadd
mov
lds
and
imul
call
or
clc
push
mov
outs
mov
xor
add
jb
pop
jb
inc
and
gs
inc
mov
je
cmp
dec
loope
cwde
call
push
push
out
or
stos
jmp
mov
xchg
or
pop
dec
mov
enter
lock
push
loopne
ja
adc
fwait
and
aad
sbb
sti
fcom
xor
xor
mov
adc
popf
mov
jmp
jne
adc
test
pop
jo
jmp
arpl
fs
fsub
int
gs
icebp
mov
rcl
pushf
inc
mov
add
ret
xchg
adc
xchg
pop
mov
sbb
jb
jmp
call
mov
sbb
in
cmp
jae
push
arpl
data16
popf
inc
std
mov
or
mov
loope
lds
aam
mov
test
ror
daa
dec
movs
cmp
dec
aam
cdq
add
push
sbb
xchg
outs
loop
nop
adc
sbb
mov
pop
mov
lds
(bad)
mov
mov
outs
mov
jns
bnd
imul
push
les
push
out
and
mov
aas
popf
aad
xor
imul
popf
movs
repnz
fsub
stos
xor
mov
dec
push
movs
inc
mov
loope
les
push
idiv
scas
adc
mov
lods
push
sbb
not
adc
xchg
cmp
daa
inc
mov
and
mov
push
mov
pop
jmp
sub
xchg
nop
mov
sub
in
ror
mov
inc
jo
mov
(bad)
fs
xchg
dec
sub
stos
push
adc
adc
call
das
jo
or
repz
out
inc
out
sub
xchg
iret
sub
fwait
jg
jl
sbb
pop
sbb
cs
cmp
idiv
or
mov
jecxz
push
push
test
ret
fld
jp
imul
vphsubbw
adc
mov
or
dec
mov
scas
in
mov
stos
not
xchg
mov
data16
cmc
push
ds
dec
dec
icebp
pop
call
nop
scas
jmp
pop
xor
ret
push
and
push
mov
push
mov
call
loopne
sbb
mov
jb
retf
sub
retf
and
push
cmp
loop
(bad)
lock
sub
(bad)
imul
xchg
sub
int
loopne
jne
js
inc
xchg
jo
xlat
inc
loopne
out
test
mov
pminsw
dec
pop
xchg
sbb
(bad)
adc
addr16
xchg
outs
or
push
pop
icebp
nop
jns
push
sub
pop
mov
sbb
mov
pop
mov
xchg
wrmsr
xor
sub
aas
(bad)
push
call
mov
mov
das
xchg
inc
fsubr
sub
mov
cmp
push
xor
jae
div
add
xchg
cmp
mov
ins
or
sub
pop
pusha
mov
jl
sar
xchg
jmp
add
retf
out
(bad)
cmp
cmp
jmp
imul
xor
jae
xchg
sbb
xor
sub
mov
scas
sbb
aas
fsub
sub
jo
(bad)
jmp
out
into
sbb
mov
dec
and
inc
popf
add
sbb
cmp
xchg
loopne
stos
in
not
push
cli
jl
out
dec
shl
xchg
(bad)
cld
xchg
repz
or
fsub
popa
jle
mov
rol
int
push
popf
mov
inc
inc
inc
aam
or
sbb
(bad)
loope
add
mov
adc
inc
mov
or
in
test
cmp
and
fst
push
lea
dec
inc
movs
sbb
test
fwait
cmp
retf
xor
pop
call
stos
dec
add
in
imul
out
dec
xchg
sub
add
mov
xor
aad
icebp
dec
sbb
inc
stos
stos
mov
jg
mov
ins
pushf
in
cmp
test
sub
and
lock
int
jae
ins
iret
js
rcr
mov
mov
lea
(bad)
cmp
out
and
scas
lock
xchg
sti
xchg
and
(bad)
xchg
mov
daa
in
stos
sbb
nop
pusha
popa
ds
sub
and
mov
lods
out
jg
out
das
lock
std
push
pop
inc
jne
jg
std
xchg
je
jp
adc
jl
arpl
fcom
sub
pop
std
or
repz
int
cdq
add
stos
cli
or
sub
jbe
sub
add
pop
mov
adc
pop
(bad)
sub
xchg
lods
fs
fist
jmp
mov
jnp
mov
sti
adc
cdq
repnz
push
dec
xchg
cmc
int
ja
in
add
pop
sub
sysenter
cmp
add
xchg
fcomp
and
test
cwde
repnz
retf
stc
pop
pop
cmp
pushf
lds
icebp
sub
outs
sbb
jle
mov
xchg
pop
or
push
sub
pop
cmps
dec
in
mov
fisubr
imul
ror
add
jbe
push
and
xlat
xor
push
fmul
lods
inc
pop
cmp
arpl
push
mov
jmp
mov
push
mov
sub
adc
or
retf
ins
test
mov
mov
daa
jmp
mov
clc
cli
repz
shl
jno
lods
cmps
ins
dec
jge
(bad)
inc
fmul
adc
xchg
stc
jne
push
sbb
lods
retf
mov
push
inc
gs
sbb
sti
fxtract
arpl
outs
(bad)
xor
hlt
in
std
cmp
pop
div
out
fwait
or
push
push
xchg
pop
mov
add
xor
sbb
in
test
sub
jmp
cmp
cdq
aam
test
ret
les
add
rol
daa
mov
cli
pop
add
xchg
xlat
rcl
adc
xlat
mov
pop
mov
mov
shl
daa
loop
adc
inc
xlat
sbb
loope
movs
les
in
pop
iret
mov
xchg
sbb
and
push
sti
cld
mov
sub
fldcw
std
mov
es
stc
pop
test
addr16
fimul
mov
xchg
arpl
and
nop
jnp
bound
xchg
jbe
dec
popf
out
(bad)
push
out
inc
cwde
repz
inc
dec
in
adc
xchg
xor
pop
jnp
add
jb
fiadd
mov
mov
pop
ret
inc
pop
push
push
and
pop
mov
pop
fs
add
push
mov
fst
xchg
pop
mov
inc
fst
adc
nop
sub
outs
into
sbb
fnstsw
lock
jmp
repz
in
mov
cwde
dec
mov
(bad)
jmp
push
pusha
mov
daa
pushf
or
ror
xor
mov
mov
mov
fwait
sub
dec
push
and
or
mov
xchg
rol
neg
or
push
cmp
pop
jnp
or
jge
(bad)
popf
inc
imul
dec
lock
lds
shl
jbe
xor
rol
inc
push
and
mov
cdq
mov
pop
xor
je
stos
repnz
leave
mov
sbb
mov
mov
(bad)
cmp
lods
sbb
fsub
ss
inc
adc
outs
cwde
add
or
add
call
fs
mov
push
xchg
pop
imul
cmp
lock
add
imul
out
adc
jbe
push
add
add
mov
in
add
mov
or
popf
cmp
push
pop
jp
popa
fbld
pop
in
pop
sub
push
pop
stc
mov
popf
xchg
test
sbb
dec
jg
ins
pusha
xchg
(bad)
je
in
mov
aad
popf
inc
add
cmp
add
xchg
ds
out
jp
(bad)
xor
inc
(bad)
sbb
cdq
dec
jl
loopne
aaa
sub
out
adc
mov
pop
push
es
adc
adc
sub
mov
cmp
fwait
lock
push
jae
jo
mov
dec
sbb
fsubr
(bad)
cmps
jmp
mov
icebp
or
push
inc
inc
hlt
cwde
jbe
xor
push
xchg
mov
lar
pop
pusha
xor
(bad)
lahf
sub
mov
push
push
adc
mov
retf
mov
and
out
mov
stc
push
addr16
jg
inc
cld
retf
sub
cdq
dec
imul
dec
fld
test
call
(bad)
jmp
xor
(bad)
cmp
cld
stos
call
xchg
dec
sub
gs
mov
mov
mov
and
dec
mov
and
lahf
pop
sbb
push
mov
mov
xor
pop
data16
test
call
jmp
xor
mov
inc
mov
cmp
test
mov
sub
mov
dec
je
ds
das
in
(bad)
jb
sub
mov
out
inc
xchg
js
jae
pop
cmp
fisttp
pusha
sub
mov
jp
cli
xor
dec
dec
popf
ja
pop
inc
and
mov
mov
or
and
mov
xor
sub
movs
data16
out
mov
hlt
mov
xor
loope
sbb
mov
push
and
fist
repnz
add
addr16
pop
outs
or
in
xlat
scas
jae
jmp
stos
push
sub
call
mov
outs
loopne
mov
jl
loopne
lods
pop
stos
jl
popa
jb
fsub
dec
repnz
jle
daa
dec
or
dec
mul
jmp
movs
pop
cld
cmps
push
arpl
cmp
sub
xor
jmp
and
retf
adc
scas
push
out
lock
sub
outs
dec
test
fucomip
loope
movs
mov
test
das
gs
sub
lahf
(bad)
call
push
mov
mov
repnz
movs
jbe
fwait
rcr
push
or
enter
sbb
lods
stos
out
unpcklps
mov
cmp
xchg
aas
mov
add
add
mov
xor
in
xor
sub
fisttp
jecxz
jae
shl
add
ror
pop
lds
jmp
call
push
fcom
inc
adc
bound
fisttp
pop
or
jp
add
mov
inc
arpl
stc
imul
pop
call
cmp
add
sub
std
or
pop
dec
in
imul
test
bound
add
mov
cmp
and
popa
sar
xor
inc
daa
sbb
icebp
loop
call
iret
es
mov
(bad)
dec
loopne
int
scas
push
add
ret
and
movs
sti
mov
or
movs
sbb
out
push
xchg
ja
xor
in
retf
add
lea
push
xor
add
mov
repnz
mov
push
mov
call
mov
xchg
dec
push
inc
scas
bound
fld
mov
inc
add
loopne
pop
fld
inc
and
mov
outs
jb
popa
xlat
sbb
dec
mov
sub
lods
adc
xchg
cmp
mov
fwait
mov
sar
bound
and
fstp
jmp
stos
loop
cmp
shl
sbb
in
ret
cli
fst
inc
ror
lods
mov
push
inc
pop
cdq
or
dec
ror
es
cmp
sbb
inc
sub
pop
fld
jecxz
inc
repnz
inc
mov
pusha
xchg
fld
leave
sub
ins
int3
mov
pop
and
clc
xchg
pop
push
test
adc
pop
dec
jne
into
in
jle
(bad)
neg
or
mov
movs
movs
gs
dec
xchg
ficom
mov
mov
cdq
fwait
adc
daa
mov
neg
in
sbb
(bad)
mov
fwait
cmp
cdq
mov
fstp
mov
out
aad
loope
es
mov
and
xchg
call
xchg
shl
sbb
cdq
pop
xchg
or
adc
test
sub
mov
hlt
addr16
jnp
and
into
mov
or
xchg
std
xchg
imul
mov
cmp
xchg
pop
mov
gs
jecxz
or
fiadd
xor
cmp
dec
jns
mov
dec
jae
cmp
movs
fistp
icebp
mov
xor
ret
dec
pop
es
aam
sbb
aas
pop
or
repnz
mov
fidivr
shl
cmp
iret
ins
push
mov
fs
jae
mov
push
mov
lods
inc
ins
ffree
fucomip
nop
jbe
or
fstp
loop
push
mov
sub
pop
rol
std
cld
dec
mov
test
repnz
xchg
aad
in
xchg
push
popa
sbb
add
mov
adc
jp
daa
xor
jno
fbstp
daa
push
cld
jg
xor
push
fild
cmp
xchg
sbb
enter
sub
inc
call
out
sub
js
pop
aam
retf
ins
xor
cmc
aaa
sub
xor
data16
dec
out
pop
mov
lea
sahf
data16
or
xchg
jnp
adc
shl
cmp
or
push
sbb
cmp
lods
sub
jnp
stos
pusha
add
sub
outs
pop
sub
sar
in
jb
(bad)
jne
jmp
popf
ins
popa
or
sahf
jnp
cmp
jne
int
iret
fsub
mov
(bad)
pop
ds
int
(bad)
out
push
icebp
out
aad
or
mov
mov
in
dec
stc
mov
and
sbb
sahf
sbb
push
push
mov
sbb
lahf
push
jge
mov
xor
fsubr
mov
aad
mov
pop
dec
out
fidiv
imul
adc
cli
cmp
cmp
jmp
add
movs
add
mov
cmc
jo
mov
ja
jne
loop
inc
vorpd
jle
jecxz
dec
ret
push
and
push
adc
mov
shl
dec
pop
or
sbb
das
cmp
add
ret
mov
les
and
xor
fistp
rcl
hlt
enter
fucomip
push
jns
push
outs
inc
xchg
mov
fld
sub
mov
xor
jo
(bad)
shl
jne
sbb
inc
and
pushf
(bad)
into
iret
arpl
cmps
stos
mov
jnp
outs
enter
jno
mov
xor
movs
dec
and
arpl
popa
jl
jp
push
adc
and
(bad)
icebp
or
lahf
mov
mov
mov
pusha
xor
push
lods
xchg
lahf
cli
push
and
pop
out
jp
push
std
inc
xor
out
jo
icebp
and
pushf
ins
out
xor
add
fnstcw
cmps
xor
rcr
and
ret
cdq
sbb
cmpxchg8b
(bad)
iret
push
and
shr
test
aaa
test
aam
jl
adc
dec
gs
push
jb
push
mov
call
out
add
jp
or
test
imul
sbb
inc
pop
fwait
xor
adc
mov
push
cld
mov
sbb
and
xchg
shl
repnz
jp
mov
or
push
retf
cwde
ret
xor
jmp
scas
xor
lods
mov
lods
in
cmps
jge
jbe
xchg
out
jno
les
out
enter
int
jecxz
addr16
enter
das
test
cmp
pop
in
cs
add
push
pop
lods
pop
xchg
retf
loopne
inc
in
push
scas
jbe
sti
pop
mov
mul
pop
mov
scas
icebp
popf
push
fisttp
cmp
add
mov
mov
mov
pop
(bad)
sbb
xchg
xor
(bad)
and
je
dec
popf
test
jne
mov
dec
and
ja
out
xchg
stos
aad
adc
lods
pop
lea
mov
push
cs
inc
mov
xor
pop
jg
fimul
dec
loopne
sub
push
mov
or
mov
xor
fs
ins
inc
scas
repz
nop
gs
call
pop
(bad)
dec
icebp
data16
imul
sbb
push
(bad)
imul
xchg
sub
or
jno
in
mov
std
sar
dec
js
repnz
dec
push
jns
sbb
push
inc
mov
add
lock
ficom
stos
mov
xor
jns
inc
xchg
dec
push
mov
dec
inc
in
xor
mov
sbb
xlat
inc
cmps
xchg
inc
fistp
mov
sbb
push
test
jmp
mov
repnz
xchg
mov
sar
test
arpl
ficom
pop
jecxz
inc
add
jae
sbb
pop
jecxz
clc
add
cmp
mov
pop
dec
cwde
mov
push
xchg
sbb
sahf
dec
xchg
outs
or
pop
mov
xor
call
dec
and
push
cdq
mov
(bad)
icebp
movs
popf
xchg
int
mov
(bad)
sbb
pop
sbb
in
mul
jne
mov
dec
xor
pop
scas
xor
adc
pop
sar
pop
pop
pop
loopne
dec
dec
into
and
mov
sbb
sbb
xor
and
and
mov
ja
imul
lods
test
scas
je
and
sbb
in
and
pop
mov
outs
(bad)
mov
pushf
mov
lea
sahf
sahf
jnp
or
jg
retf
inc
nop
data16
adc
cdq
mov
sub
jle
or
bound
stos
fcomip
(bad)
fadd
jmp
inc
pushf
xchg
out
cmp
mov
int
in
fsubr
outs
lea
mov
retf
push
test
xor
aad
mov
push
push
cmp
jmp
test
add
daa
inc
xchg
jle
pop
push
call
xchg
aam
and
in
add
lock
xchg
cmp
imul
in
or
and
(bad)
and
or
jmp
leave
inc
jns
pop
neg
rcr
movs
cmp
neg
push
in
and
stc
call
push
idiv
(bad)
cli
add
loop
pop
mov
mov
fs
ficom
retf
sbb
jb
nop
(bad)
mov
movs
pop
push
sub
sub
fs
clc
cmp
into
or
aad
xor
xlat
lahf
cmp
cmp
add
rcl
pop
sbb
js
les
fwait
lds
scas
xlat
xor
jg
jge
xor
scas
and
cdq
(bad)
jmp
push
fdiv
cmp
inc
test
sbb
xor
xchg
(bad)
imul
push
hlt
jg
dec
lods
cmp
pop
cmp
out
hlt
jg
das
outs
mov
call
(bad)
inc
popf
cmp
inc
int
and
fwait
mov
mov
adc
in
in
mov
ins
mov
pushf
push
xor
out
cmp
movs
mov
sub
fdiv
pop
xor
not
push
dec
pop
(bad)
add
dec
icebp
sub
lock
push
cmp
imul
sahf
mov
xchg
leave
shr
lea
dec
movs
inc
scas
loopne
and
data16
push
xor
mov
mov
jb
pop
out
jecxz
cmc
sbb
les
ret
mov
ins
inc
jl
jp
sub
dec
mov
adc
jbe
lds
icebp
loopne
shl
das
ins
inc
imul
cwde
dec
mov
jae
jne
sti
out
pop
in
xchg
sub
call
shr
mov
ins
cmp
leave
test
mov
cmp
sahf
lods
mov
nop
sbb
or
pop
push
cmp
in
xchg
adc
(bad)
ins
mov
(bad)
pushf
or
push
scas
out
add
sbb
(bad)
and
dec
add
in
cmps
test
mov
cmps
inc
push
cmp
sbb
adc
mov
repnz
jl
xor
test
push
mov
jnp
aam
(bad)
call
mov
ins
xchg
push
push
xchg
jge
mov
or
jns
fcom
adc
cmp
jle
and
pop
out
xor
in
outs
cli
push
sbb
fucomi
push
adc
repnz
jge
ret
jge
outs
or
rcr
xor
xchg
cmps
push
and
fs
mov
out
cmp
push
outs
rcr
aas
or
or
loope
je
push
mov
je
jp
or
movs
in
movs
int
popa
lods
mov
ins
pushf
pop
call
mov
inc
mov
fs
fidivr
adc
or
mov
pop
mov
mov
lahf
xchg
sbb
loopne
fisubr
stos
out
adc
inc
mov
inc
mov
cmp
inc
jnp
dec
mov
xchg
ficom
jp
and
out
or
mov
std
pop
daa
sbb
push
adc
jns
pop
xor
push
ins
out
push
cmp
add
js
pop
scas
fidivr
ins
enter
xchg
enter
sahf
and
mov
(bad)
test
jle
or
mov
in
mov
mov
jnp
ins
lahf
and
xor
gs
adc
bound
pop
push
mov
scas
jae
pop
xchg
sub
test
int
lea
daa
xor
mov
cmp
test
(bad)
in
mov
fadd
in
push
sahf
inc
jae
cmc
or
stos
jnp
sbb
xor
lds
movs
movs
sbb
jge
pop
jl
leave
outs
jns
stc
push
or
call
out
movs
aam
movs
cwde
jne
pop
xor
jns
rcl
aas
cmp
sub
push
nop
mov
jnp
add
push
sbb
cmc
sbb
cdq
scas
or
arpl
clc
test
xor
imul
adc
adc
mul
pop
sub
stos
and
das
mov
or
adc
pop
int3
and
sbb
inc
xlat
(bad)
mov
mov
frstor
jp
or
ss
fs
cmp
test
inc
jbe
jo
jno
gs
jmp
mov
je
push
repz
xchg
mov
cmp
scas
mov
inc
pop
xchg
neg
or
inc
int3
ror
dec
pushf
out
addr16
psrad
cmps
test
mov
push
(bad)
pop
mov
fnstenv
mov
xchg
xor
sbb
dec
push
mov
cmp
stc
pop
pushf
movs
ret
cmps
sahf
fcom
jne
push
stc
(bad)
mov
or
fst
enter
shl
mov
lds
sub
in
xchg
mov
dec
mov
neg
cmp
xlat
sub
cmp
push
push
pop
xchg
xor
sub
dec
push
mov
add
in
aam
fnstenv
push
or
xchg
push
mov
push
mov
xchg
and
in
sub
xchg
adc
nop
or
int
or
fist
adc
mov
imul
mov
cwde
ror
lock
and
push
aad
jne
xchg
hlt
sti
outs
inc
jmp
mov
inc
gs
sti
inc
mov
or
mov
sti
push
cmp
dec
mov
cmps
imul
dec
(bad)
fcomp
(bad)
fmul
(bad)
and
cmp
pop
mov
sub
(bad)
mov
add
sub
icebp
rol
cmp
push
sub
xlat
ror
cmp
jo
pop
xchg
mov
sbb
dec
sbb
inc
js
lahf
fistp
dec
repz
push
loope
in
or
loop
inc
stc
movs
xchg
mov
jp
fdivr
pushf
jmp
daa
inc
sbb
mov
out
pop
xlat
cmp
push
daa
pop
ficom
sub
inc
sti
and
arpl
and
int3
mov
xchg
data16
inc
ja
je
sub
outs
xchg
dec
(bad)
push
mov
enter
rcl
mov
inc
xor
mov
adc
mov
xchg
mov
clc
mov
and
inc
jnp
cmp
jbe
mov
or
cmp
mov
jl
and
lds
mov
add
shr
shl
(bad)
xchg
fdecstp
mov
or
imul
add
leave
or
and
outs
xchg
pop
ja
cmps
fisttp
inc
mov
xchg
or
and
pushf
xchg
add
and
pop
ins
push
mov
push
ret
mov
xchg
jmp
adc
iret
add
xchg
aas
(bad)
bound
inc
dec
out
pop
sbb
lods
jl
pop
outs
daa
cmp
in
(bad)
aaa
(bad)
test
retf
cmp
dec
mov
call
repz
fadd
sub
in
mov
or
lock
mov
movs
dec
icebp
pop
or
lods
push
dec
pop
mov
mov
jae
imul
ins
bound
mov
aad
cmp
push
mov
or
sub
fimul
push
sbb
ja
jl
push
pop
arpl
imul
xchg
aaa
pop
add
lahf
add
cmp
inc
into
push
jne
ret
inc
fmul
sbb
push
push
xchg
retf
mov
cmps
imul
adc
push
jo
int3
aam
loopne
shr
mov
and
jmp
mov
or
rol
loop
cwde
(bad)
xlat
pop
push
cmp
pop
inc
inc
or
jl
xchg
fdivr
out
das
jbe
scas
inc
loope
dec
mov
inc
das
push
stc
add
cmps
int3
gs
inc
pop
dec
sti
popa
es
aas
mov
stos
bound
shl
fdiv
push
push
mov
outs
xor
xor
dec
in
adc
pushf
call
xor
loope
mov
inc
pop
jmp
push
ds
movs
xchg
dec
ins
ds
mov
cmc
fsubr
inc
(bad)
push
lods
ins
pushf
fistp
sbb
repz
sbb
movs
lock
sbb
jl
lods
adc
mov
popa
push
dec
xchg
inc
jmp
sar
shl
fild
jmp
clc
xchg
imul
das
xor
cmp
jno
cwde
out
or
mov
inc
mov
adc
cmp
in
dec
popf
or
xor
push
inc
cmc
pop
ins
cmp
or
aas
(bad)
cmps
mov
cdq
jp
xchg
and
push
sub
pop
jmp
in
pop
or
jecxz
cmps
bound
push
xchg
push
cmp
test
js
pop
mov
mov
mov
enter
xor
ds
or
data16
push
inc
sub
push
dec
rcr
and
xchg
pushf
inc
sbb
push
in
push
cmp
(bad)
mov
jmp
sbb
cmps
xlat
add
enter
inc
ror
retf
mov
sub
mov
jae
inc
int
lock
xor
add
not
lods
or
and
fadd
or
mov
mov
(bad)
jb
ret
xlat
dec
pop
adc
dec
imul
cmp
(bad)
or
sub
xchg
(bad)
icebp
pushf
push
push
gs
push
fnstenv
xor
inc
mov
shl
dec
and
test
stos
imul
ss
imul
test
iret
cmp
mov
xchg
adc
cmp
add
outs
cmp
dec
sbb
pusha
add
xchg
ins
and
mov
mov
in
lock
add
mov
inc
rol
push
dec
out
push
repz
push
sar
xor
retf
mov
rcl
xor
cmp
xor
lahf
xor
dec
movs
xor
or
add
adc
aas
adc
imul
repnz
pop
sub
or
pushf
mov
nop
movs
ds
adc
mov
and
stc
in
ret
jne
jge
les
stos
leave
push
xchg
push
xor
jb
dec
sbb
push
(bad)
int3
and
adc
out
stc
popa
repnz
xlat
and
adc
mov
mov
push
push
ins
imul
xor
scas
jno
cmc
mov
mov
lds
aad
xor
sbb
js
dec
data16
repz
pop
and
cs
stos
les
mov
mov
cmp
imul
fistp
sub
outs
xor
(bad)
call
or
arpl
pop
les
in
cmp
xchg
push
push
xchg
call
dec
pop
mov
(bad)
enter
adc
push
mov
push
jmp
ret
push
in
aaa
popa
jmp
mov
push
sbb
xchg
shr
jl
pop
imul
idiv
dec
mov
stos
movs
inc
sahf
push
lods
cli
mul
movs
dec
outs
xchg
sbb
lahf
push
stos
rol
mov
movs
nop
jg
imul
outs
mov
adc
cmp
lds
cmp
mov
sub
repz
and
adc
dec
test
xchg
jae
adc
int3
pop
fbstp
and
hlt
fcmovnu
test
mov
pusha
int
or
imul
retf
in
cmps
mov
jo
call
jle
xlat
sub
pop
sbb
sbb
mov
fsubrp
das
pop
sti
daa
push
pushf
push
popf
inc
sub
add
ret
dec
xor
push
jg
popf
dec
dec
pop
aam
xor
and
retf
mov
push
js
or
ja
or
fsub
adc
stos
add
retf
cmp
fwait
ins
rol
mov
js
sub
arpl
or
xchg
sbb
mov
push
sar
add
mov
lds
jns
mov
add
repnz
sbb
cmp
cmp
or
adc
pop
push
and
push
les
test
sub
lock
pop
test
scas
or
jg
ds
cmp
cwde
shl
repnz
in
pusha
nop
bound
push
and
cmp
pop
jmp
fsub
cmp
popa
lock
ret
scas
dec
add
nop
sar
mov
stc
mov
xor
in
pop
sub
lods
adc
xor
push
aas
sub
push
ret
mov
shr
xor
add
and
fstp
shl
dec
jecxz
ror
pop
mov
ret
push
test
sub
js
mov
iret
inc
adc
or
push
add
ror
fcom
shr
mov
cld
adc
jns
sbb
test
push
inc
mov
je
jo
xor
nop
pop
sbb
mov
xor
jb
push
push
lock
mov
dec
push
jno
or
cs
adc
das
out
cmp
aaa
pop
cmp
aas
inc
ret
in
push
inc
xor
adc
add
push
scas
mov
mov
xchg
inc
test
xchg
jbe
out
dec
aam
gs
sahf
leave
jns
jae
adc
sbb
mov
jbe
sub
shr
ror
push
lea
sbb
mov
inc
cmp
xchg
cdq
repnz
sbb
stc
and
pop
ja
fnsave
push
xor
pop
sbb
jbe
push
fcomp
(bad)
mov
lods
iret
outs
dec
out
cdq
test
dec
jbe
(bad)
adc
in
push
lods
jo
mov
pop
mov
add
in
sahf
mov
dec
xor
imul
xchg
push
je
inc
rol
retf
gs
inc
sti
and
xchg
sbb
popa
in
push
cmc
fsub
stc
sbb
leave
xor
add
lds
dec
and
fiadd
or
in
sbb
cmps
sub
gs
aam
xchg
pop
xchg
mov
fwait
in
(bad)
adc
sbb
or
sbb
sbb
pop
push
mov
ss
lahf
cmp
icebp
jmp
mov
xchg
inc
repnz
es
aas
jle
fsubr
xor
cwde
stos
jl
test
pusha
ins
jmp
shl
pop
fldl2e
xor
in
sub
mov
movs
jle
stos
adc
ins
mov
ins
ficom
lahf
adc
push
mov
(bad)
xor
mov
sti
pop
out
push
repnz
pushf
(bad)
sbb
pop
pop
movs
adc
mov
adc
push
imul
sahf
out
lods
lock
adc
and
xchg
jnp
dec
mov
mov
cld
(bad)
aam
scas
rcr
pop
xchg
push
pusha
ds
add
cmc
mov
ret
es
pop
xchg
aam
dec
das
adc
push
adc
sub
mov
sbb
cmp
pop
call
mov
stos
mov
cmp
cmp
pop
call
int
mov
adc
sub
mov
imul
test
mov
call
xchg
or
(bad)
dec
fmul
dec
arpl
addr16
sub
xor
xor
aad
ficomp
push
pop
push
call
and
je
jns
pushf
out
retf
jl
dec
(bad)
mov
cmp
cmp
popf
add
lods
scas
(bad)
ror
je
xchg
fnstenv
fwait
sub
cmp
jne
(bad)
in
adc
push
jne
stc
xchg
fwait
mov
cdq
mov
dec
lods
gs
ds
xor
jmp
movs
repnz
or
das
ror
outs
daa
add
loope
cmp
xchg
adc
in
or
inc
loope
aas
imul
mov
push
and
test
mov
mov
imul
inc
mov
pop
pop
xor
push
pop
int3
lods
fist
in
cld
or
and
icebp
test
mov
xor
sbb
retf
jmp
test
dec
(bad)
lods
cld
shl
out
mov
sahf
dec
push
movs
fmul
loopne
xchg
call
aaa
mov
push
loope
fild
mov
push
mov
mov
movs
retf
inc
cwde
shr
sub
inc
lea
int3
or
dec
inc
test
sub
pop
sub
inc
xchg
iret
jle
mov
(bad)
xor
je
jo
cmp
fst
sbb
mov
sbb
cld
ror
jb
mov
clc
rol
addr16
(bad)
popf
adc
cli
in
sub
lods
mov
sub
adc
xchg
aas
push
mov
lea
xor
and
inc
repnz
loop
xchg
and
xor
int
add
mov
scas
clc
mov
or
imul
dec
sub
cmp
mov
sub
xlat
test
mov
in
pop
clc
sti
(bad)
retf
outs
in
push
loope
das
(bad)
or
cmp
jl
sub
pusha
addr16
xor
inc
js
adc
in
ret
jnp
mov
mov
xchg
lods
mov
daa
jge
adc
lds
cmp
ror
push
loope
loope
jl
push
add
xor
mov
inc
mov
popa
and
popf
daa
ret
(bad)
dec
arpl
stc
aas
loope
jnp
lahf
push
in
call
test
adc
push
hlt
daa
ffreep
ins
aas
ret
bound
stc
cmp
sbb
push
aas
ficom
mov
mov
dec
fld
test
(bad)
adc
sub
rol
pusha
push
mov
cmp
pop
push
fs
push
retf
addr16
or
movntps
imul
dec
ret
xor
fnstenv
mov
das
xchg
push
repnz
pop
loop
jo
fiadd
pop
cmp
sbb
test
pop
xlat
mov
loop
mov
lds
cmps
test
xor
jp
jnp
shl
mov
jecxz
pop
xchg
sub
xor
cmps
or
pop
push
ja
xor
dec
int3
nop
mov
sub
lods
push
add
lahf
fwait
pop
or
sbb
es
jae
add
mov
pop
push
scas
mov
dec
fist
cmp
int
scas
push
fmul
push
cdq
mov
ds
sbb
js
daa
and
repz
sub
lods
mov
pop
rcl
mov
nop
xor
jae
adc
sub
xchg
retf
push
inc
jne
cmp
push
and
hlt
adc
push
sar
test
call
fwait
xchg
and
loop
cmp
inc
in
cmp
inc
lahf
sbb
sub
jmp
add
push
lock
jb
cmc
rol
adc
shl
inc
mov
adc
popf
sti
aaa
popa
call
mov
rcr
or
xchg
jp
lea
push
jg
pop
inc
mov
shl
dec
xor
les
mov
sahf
test
scas
jae
ins
arpl
sahf
hlt
iret
shl
shl
cli
test
jb
adc
dec
data16
cwde
push
cli
(bad)
cdq
repnz
jbe
daa
mov
fisttp
scas
popa
mov
push
nop
ins
mov
add
retf
movs
cmp
and
in
adc
pushf
add
cmp
mov
cmp
icebp
mov
pusha
jp
mov
jbe
stos
call
add
xchg
add
js
shr
mov
jl
and
imul
dec
push
fcomp
shr
addr16
ror
mov
nop
or
mov
mov
retf
pop
aas
push
scas
arpl
js
rol
adc
push
mov
shl
cmp
(bad)
inc
in
jp
cmc
mov
mov
aaa
neg
pop
or
movs
cmp
in
retf
nop
sbb
(bad)
sar
sub
fistp
xor
int3
in
mov
cmp
shl
popf
mov
add
sub
enter
test
inc
rol
push
inc
addr16
mov
test
pop
inc
sahf
jecxz
into
ja
xlat
fisubr
xor
ror
call
xor
add
icebp
aaa
mov
outs
stc
mov
clc
cmp
and
stc
fdiv
retf
xor
pop
xor
mov
arpl
cdq
pop
int
iret
in
out
pushf
pusha
aad
std
imul
enter
push
push
outs
push
mov
jnp
lods
adc
sub
fistp
pop
add
jbe
jb
mov
cs
xchg
pop
cmc
adc
xor
test
pop
hlt
xchg
pushf
inc
sub
(bad)
and
inc
pop
sti
pop
ficomp
data16
pop
cwde
push
mov
jge
cmp
bound
jne
inc
popf
or
out
pop
sti
or
or
out
int3
sbb
dec
pop
inc
sbb
aas
mov
loope
mov
jge
add
mov
test
cmp
aas
jmp
lods
jp
or
jmp
mov
fs
leave
mov
jno
push
or
jle
xor
sub
cmps
sbb
cdq
inc
ror
leave
fcmovbe
nop
scas
jns
jnp
mov
adc
fld
xchg
aaa
loop
mov
add
sbb
jl
cmp
shl
cld
mov
push
xor
es
mov
or
mov
push
int3
and
xor
std
and
pushf
adc
aas
push
addr16
xchg
pop
or
lds
call
rcr
xchg
iret
cmps
test
jl
in
and
fnstcw
scas
fnstcw
mov
and
jno
pop
lds
jmp
inc
cmps
sub
sub
mov
cs
addr16
and
adc
pop
cmp
jmp
cmp
sbb
scas
les
adc
push
push
addr16
and
iret
fdivr
(bad)
iret
cmps
retf
or
ret
cmp
imul
adc
outs
or
dec
push
pop
bound
pop
pushf
mov
ret
adc
(bad)
shr
jno
sbb
int3
dec
inc
in
adc
rcr
pop
in
cmp
ss
js
frndint
jg
stos
sbb
jge
cmp
call
outs
shl
imul
xchg
in
mov
psubb
mov
mov
in
sub
adc
das
xchg
pop
retf
sahf
and
ins
shl
pop
xor
jnp
mov
and
lahf
leave
add
sub
iret
xor
pusha
push
(bad)
xchg
adc
pop
sar
nop
xchg
lods
in
push
iret
fstp
fldenv
push
adc
imul
inc
dec
scas
and
inc
sbb
(bad)
inc
mov
(bad)
pop
shr
mov
mov
push
call
nop
pop
cdq
sbb
lds
inc
add
jo
pop
arpl
gs
mov
cwde
stos
lods
xchg
frndint
retf
pop
iret
pop
adc
add
and
aad
mov
pop
icebp
(bad)
cld
jae
outs
or
sub
stos
mov
mov
mov
sbb
push
and
pop
in
popa
mov
push
dec
or
jbe
xchg
shr
cmp
rcl
fs
sbb
sbb
sub
jo
ja
movs
ret
or
jecxz
jb
xlat
pushf
adc
xor
scas
adc
es
(bad)
mov
pop
int3
imul
fdivr
sbb
test
fcom
xor
add
test
outs
mov
scas
adc
sub
pop
xbegin
sub
mov
or
scas
cli
push
iret
jecxz
jecxz
sbb
dec
inc
(bad)
rcr
jl
and
(bad)
xchg
shl
adc
nop
aas
daa
popf
add
gs
inc
dec
and
ret
ret
xchg
sub
mov
cmp
and
push
call
push
shl
test
rcr
rcr
retf
jae
adc
jmp
add
jns
lock
std
iret
ficomp
or
sub
add
icebp
cmp
xlat
mov
aad
xchg
lods
add
xchg
inc
stos
sub
add
jmp
loopne
inc
mov
retf
add
fstp
mov
hlt
sbb
xchg
cdq
push
xchg
push
xor
push
ins
bound
shr
xor
mov
test
out
pop
inc
mov
push
mov
retf
imul
cmp
mov
ret
sub
popa
movs
call
fiadd
or
jp
ins
int
mov
add
mov
adc
test
repnz
repz
sar
stc
sub
cli
mov
or
cmp
nop
imul
mov
xchg
jle
xchg
xlat
mov
sub
push
cmc
push
fwait
dec
mov
jb
jl
mov
sub
popa
or
xor
aam
jo
cmp
lds
addr16
ret
repz
cli
inc
mov
aam
adc
fisttp
push
jl
cmc
jmp
hlt
stos
mov
push
in
gs
pop
pop
mov
jbe
aam
cdq
add
aam
addr16
ficomp
fadd
lea
adc
cmps
xchg
stos
ret
or
test
pusha
add
mov
rcr
xchg
out
jmp
adc
and
dec
xchg
adc
std
cdq
push
mov
jne
inc
xchg
mov
ret
mov
inc
jmp
out
(bad)
rcr
in
xor
inc
loopne
mov
in
lahf
pushf
cmps
xchg
pop
adc
cmps
cmp
pusha
cmp
lds
dec
mov
pop
xor
call
int
jns
scas
data16
fxch
retf
mov
dec
jge
mov
xor
add
mov
es
inc
xchg
test
inc
out
push
cmp
pop
(bad)
cli
push
aaa
sub
cmp
loope
jno
dec
out
push
lock
ds
fs
pop
test
jns
(bad)
in
int3
push
or
out
outs
outs
or
dec
cmp
(bad)
adc
(bad)
cmp
inc
xor
inc
jbe
nop
out
jns
inc
dec
dec
retf
pop
fadd
icebp
jns
(bad)
xor
pop
repz
(bad)
mov
imul
xor
mov
inc
jo
pusha
inc
dec
fsub
(bad)
in
lahf
(bad)
iret
xor
out
daa
ret
and
mov
in
xor
es
and
pop
sbb
xchg
ins
je
(bad)
mov
ret
jp
stos
bound
rcr
retf
pusha
int
mov
in
xchg
test
daa
cmps
clc
iret
push
adc
mov
out
push
dec
sbb
leave
repnz
mov
mov
fistp
popa
iret
into
std
out
dec
dec
jl
dec
or
or
rcr
xlat
inc
adc
pusha
pop
or
out
jecxz
mov
call
shl
mov
mov
jne
data16
retf
dec
and
mov
xor
rcr
push
sti
xchg
sub
push
sbb
push
jmp
jecxz
add
mov
jp
es
push
adc
or
jle
mov
jnp
fld
int3
inc
push
and
cli
cmp
sub
in
and
pop
mov
cwde
adc
es
mov
int3
xchg
pop
test
and
add
sbb
sbb
sub
(bad)
adc
nop
test
dec
imul
ret
adc
fbld
cwde
adc
dec
nop
ss
push
mov
les
adc
(bad)
popa
dec
cmp
div
fcom
or
adc
jns
cs
pop
lods
sub
push
cmc
dec
or
call
retf
mov
jge
out
imul
push
les
imul
js
push
ins
cmp
rcr
jne
mov
sbb
mov
xchg
push
jge
sub
mov
mov
(bad)
enter
pop
jns
mov
(bad)
enter
loope
mul
pop
xchg
and
push
xchg
or
jmp
dec
jmp
mov
pop
jg
xor
gs
mov
mov
in
dec
push
jmp
inc
aas
fdiv
add
push
mov
mov
xor
ret
cmp
mov
sub
mov
sbb
add
adc
sbb
jae
mov
mov
(bad)
cld
dec
push
mov
xchg
ja
jle
call
(bad)
jecxz
cwde
fsubr
mov
inc
xor
pop
hlt
mov
add
mov
and
lock
xor
dec
out
bound
push
pop
icebp
jecxz
pop
jne
mov
mov
out
and
adc
rol
iret
mov
dec
popf
test
ins
(bad)
inc
shl
idiv
adc
imul
sbb
xchg
mov
pop
cmps
xchg
or
and
or
xchg
stos
dec
popf
stc
jp
dec
in
mov
adc
mov
(bad)
punpcklbw
cli
fcmove
sbb
add
pop
inc
or
jecxz
mov
jae
les
or
sub
xor
into
mov
sar
cmp
pop
mul
in
and
inc
inc
jg
shl
pop
sbb
cmps
sti
les
jo
in
inc
pop
out
dec
mov
sbb
jl
adc
cmp
cld
jl
lds
mov
mov
jne
xchg
xor
pop
pop
movs
pop
ror
cld
ja
push
ss
daa
pushf
in
xor
mov
(bad)
sbb
mov
fiadd
cmp
fwait
aad
aad
cmps
stos
xor
stc
add
lahf
das
outs
add
mov
jmp
in
mov
jae
pop
pop
push
xchg
pop
inc
inc
jecxz
xor
xor
into
cld
push
and
inc
inc
sub
cmc
shl
lods
loop
ins
scas
sbb
xlat
add
shl
ret
jne
rol
and
mov
mov
jl
jl
out
inc
call
adc
leave
daa
add
fcomip
in
cmps
test
push
loop
push
xchg
outs
not
adc
mov
push
popf
neg
movs
mov
scas
fld
push
push
adc
sub
push
push
ss
pushf
cmp
and
ja
nop
jo
xor
mov
das
pop
popa
mov
sbb
inc
ficom
mov
lock
push
mov
add
inc
inc
xor
cli
mov
push
sub
imul
inc
and
cmp
out
mov
outs
scas
push
test
es
cmp
cmps
loopne
xchg
sbb
arpl
aad
and
pop
js
add
lea
(bad)
pusha
ds
in
int
ret
fdivr
dec
cmps
dec
test
sub
sub
je
dec
cdq
and
and
pushf
retf
daa
mov
push
add
sub
(bad)
push
cmp
rol
sbb
int
inc
xchg
push
lock
call
rcl
lods
mov
xor
sub
mov
imul
mov
stos
xor
jae
pop
dec
fist
or
inc
shl
adc
adc
dec
fmul
or
and
aaa
xchg
in
sub
xor
push
ins
mov
dec
xor
cmc
lods
movs
dec
addr16
gs
idiv
jb
rcr
popf
fst
scas
iret
pop
retf
call
aad
addr16
mov
mov
push
or
fld
mov
cmps
fsub
dec
ins
pop
fisub
and
add
pop
pop
into
push
das
mov
and
jbe
scas
sbb
dec
imul
scas
or
mov
inc
mov
cmp
fistp
sub
test
(bad)
or
push
fmul
(bad)
ins
(bad)
cmp
call
out
xor
inc
push
shr
enter
fwait
dec
rcl
xchg
sbb
repnz
sahf
scas
call
pop
daa
push
add
push
adc
xchg
sub
jge
jne
fisubr
pop
sar
or
cmps
shl
xor
jmp
push
xchg
shl
or
inc
fnstcw
jo
fbld
and
xor
fucomp
test
fs
cwde
or
jecxz
add
cmp
xlat
inc
push
xor
xchg
xchg
fs
(bad)
xchg
xchg
movs
jg
call
stos
fbstp
mov
and
jae
neg
sub
hlt
sub
cmp
imul
popa
movs
jp
xchg
sbb
ror
sub
xchg
sub
sub
inc
das
jp
mov
call
or
stos
iret
inc
sub
das
and
mov
(bad)
jne
(bad)
pop
push
rol
add
movs
push
xchg
mov
dec
enter
cmc
push
jne
and
imul
imul
adc
popa
jg
mov
pop
cld
push
rcl
add
pop
pop
push
lds
fistp
mov
mov
push
aam
or
xchg
or
mov
or
cld
shl
dec
scas
add
out
xor
arpl
ret
bound
iret
pop
inc
outs
outs
jno
sbb
jae
lds
neg
adc
in
xchg
stos
jge
stos
mov
mov
sub
dec
xchg
mov
scas
cmp
cmp
fwait
add
mov
cmp
mov
jp
jns
mov
aaa
sub
js
push
imul
xchg
scas
pop
adc
ja
cmp
or
or
iret
es
icebp
push
loope
aaa
xchg
add
lods
sbb
and
mov
inc
pop
or
mov
stos
pop
mov
or
loope
test
iret
cmps
inc
or
popf
and
and
add
dec
inc
dec
fnstcw
or
inc
adc
and
sbb
jnp
adc
push
dec
or
ret
imul
push
das
xor
mov
test
(bad)
adc
mov
mov
sbb
retf
mov
sbb
mov
pusha
in
or
aaa
adc
and
scas
mov
push
(bad)
dec
push
pop
(bad)
and
xchg
outs
in
sti
mov
xchg
xchg
test
pop
jp
sbb
inc
fimul
xchg
pushf
aaa
add
mov
cli
dec
addr16
lods
push
push
adc
adc
xor
jnp
adc
popa
push
rol
mov
or
cmp
jecxz
add
jl
sub
fs
cmc
clc
mov
loop
mov
xor
push
and
imul
dec
std
cli
mov
and
out
mov
outs
shl
mov
and
xchg
mov
pop
xor
mov
and
or
div
dec
inc
sar
push
fcmovnu
(bad)
imul
sbb
jmp
xchg
sbb
mov
xchg
adc
rcr
adc
jg
stc
sbb
lea
movs
jmp
ins
or
and
inc
adc
lods
lods
sub
out
mov
xchg
stos
sub
push
mov
popa
pop
hlt
mov
and
in
(bad)
(bad)
std
inc
(bad)
push
jne
dec
mov
mov
sbb
pop
mov
int3
punpcklbw
or
inc
xor
into
xor
add
in
or
dec
sub
push
into
(bad)
lds
push
or
jb
lods
xor
stos
xchg
std
maskmovq
test
sbb
add
and
mov
or
in
inc
sti
push
dec
add
daa
mov
pop
mov
mov
dec
in
push
inc
cwde
popa
jns
sbb
stos
sbb
rcr
push
daa
lea
cmp
cmps
cdq
bound
mov
cli
pop
dec
mov
xlat
sub
mov
scas
push
movs
push
js
jmp
push
jmp
lods
repz
sbb
adc
pop
jno
leave
daa
daa
adc
repz
psubb
mul
out
mov
dec
ins
push
pop
out
ds
and
sbb
popa
clc
out
hlt
add
sar
rcr
dec
int
(bad)
fbld
jge
add
movs
mov
shl
adc
sub
jle
pop
in
xor
push
inc
pop
xchg
daa
adc
inc
mov
ds
shr
mov
out
cli
pop
sbb
mov
jo
xchg
(bad)
cmps
xchg
loop
add
sahf
test
movs
adc
or
sub
aad
mov
loope
or
sub
jle
add
push
xor
pop
inc
push
bound
(bad)
jbe
push
inc
test
mov
push
and
mov
movs
ror
in
into
pop
mov
jae
mov
cmps
mov
fs
push
cmp
fmul
sub
daa
test
add
in
sbb
test
(bad)
out
in
je
xchg
cmp
and
sub
inc
jo
stos
adc
xchg
in
xchg
out
bound
sbb
into
std
sbb
pushf
adc
cld
xchg
and
ret
fcom
and
int3
mov
jmp
fistp
js
lock
mov
cs
sbb
dec
mov
push
xor
rcl
jnp
out
rcr
movs
arpl
fs
and
push
fadd
pop
arpl
call
cdq
movs
outs
push
repz
fnsave
push
cld
dec
adc
sub
sub
cs
xchg
push
dec
push
mov
xor
cmps
add
cmps
pop
(bad)
xor
cmp
enter
(bad)
dec
jno
rcl
push
pop
(bad)
push
mov
push
(bad)
sub
dec
or
mov
gs
mov
xchg
and
dec
add
mov
cmp
dec
mov
adc
cdq
mov
adc
rcr
bound
push
shl
cs
xor
scas
idiv
ss
and
aas
ja
pop
(bad)
xor
ror
sub
cmp
stos
mov
leave
or
das
lahf
dec
cmp
mov
push
stos
inc
stos
cmp
mov
xor
fstp
out
push
(bad)
(bad)
dec
mov
movs
int
mov
sbb
inc
outs
cdq
mov
xor
je
iret
test
sti
mov
or
add
call
adc
mov
out
pop
mov
inc
scas
add
cmps
mov
int3
mov
dec
retf
jmp
push
inc
mov
jnp
sbb
jl
sub
lds
mov
outs
xor
xor
inc
pop
xchg
dec
in
adc
mov
dec
enter
retf
test
jno
push
(bad)
cmps
dec
outs
imul
jno
mov
add
fcomi
shr
loop
adc
lods
in
cmp
stos
js
lea
mov
bound
jle
out
stos
hlt
loopne
pop
shr
xchg
aas
sbb
stos
xchg
movs
dec
xchg
pop
fld
pop
mov
xchg
icebp
and
adc
int3
pop
stos
inc
test
and
ss
retf
adc
cmp
stos
into
dec
mov
inc
fyl2xp1
inc
xor
mov
call
pop
std
cmps
dec
ins
sub
mov
enter
jo
imul
retf
push
retf
cli
xor
iret
push
inc
push
enter
mov
test
push
xor
shr
sahf
inc
xrelease
stos
jbe
in
cmp
repnz
mov
mov
inc
adc
out
adc
push
loopne
arpl
xchg
fild
shr
(bad)
push
xchg
iret
dec
fs
xor
or
inc
outs
or
jb
mov
enter
jecxz
fcmovnbe
ja
mov
inc
call
std
pop
jb
xchg
js
inc
xchg
gs
in
jg
mov
(bad)
sub
dec
(bad)
inc
repz
sbb
or
xchg
mov
enter
fisttp
(bad)
or
movs
and
sti
and
push
cmp
sub
loope
sahf
inc
or
in
nop
add
mov
xlat
les
xor
jge
mov
jmp
mov
push
lds
sub
xchg
xchg
adc
dec
out
pusha
(bad)
imul
mov
cmp
popa
or
int3
ficom
popa
xchg
lods
enter
cmp
out
adc
jge
inc
jbe
daa
sub
push
outs
sub
adc
aad
pop
ins
in
jmp
sbb
outs
dec
xchg
cli
sbb
inc
daa
lods
rcr
int
lahf
sbb
mov
jmp
int3
(bad)
fsubr
nop
imul
loopne
ja
cdq
xor
(bad)
xchg
push
mov
jnp
mov
lock
or
sbb
push
fs
rcl
adc
das
ror
sahf
call
xor
jg
aad
aam
mov
jb
stos
jmp
fistp
and
mov
shl
test
lock
and
lahf
jae
dec
sbb
fdivr
and
inc
mov
and
cmps
fiadd
add
loop
or
lahf
movs
pushf
jne
xor
xor
sub
push
sbb
dec
(bad)
aad
jle
xor
jbe
jecxz
shl
mov
fbld
adc
pop
dec
addr16
mov
adc
xchg
sbb
movs
adc
lods
ins
cmp
cmp
cs
jns
ins
in
xor
push
xchg
aas
cmp
pop
fild
jnp
mov
push
mov
fwait
cmps
xchg
sub
mov
popa
pop
xchg
xlat
lds
xchg
mov
scas
dec
dec
test
out
into
out
push
and
fst
jecxz
cmp
fmulp
test
jae
sahf
dec
(bad)
or
and
jmp
hlt
mov
pop
and
jae
xchg
sub
enter
pushf
dec
out
add
dec
in
cmp
dec
or
cmp
fucomi
jg
add
sbb
(bad)
(bad)
sti
int
sub
rcr
jg
dec
sub
imul
pop
(bad)
jle
rcl
dec
push
push
sar
adc
mov
popa
sub
lods
cwde
pop
test
xor
cmp
pop
aam
sub
clc
ror
pop
jbe
mov
dec
inc
retf
test
scas
inc
arpl
sub
int
fincstp
cdq
push
imul
ins
cli
sub
xsha256
cmps
push
and
shr
loope
xchg
pop
mov
cs
lds
retf
clc
scas
add
inc
cmp
in
pop
test
sub
out
icebp
es
je
je
pop
pop
mov
cmp
sub
or
in
push
mov
mov
fist
int3
xor
jl
cmps
shr
ja
retf
sbb
xor
push
add
out
mov
sub
sar
pop
retf
call
mov
pop
daa
mov
cli
test
jae
test
xor
push
mov
pop
mov
adc
cmp
jl
movs
jbe
jnp
jp
xchg
mov
jb
sbb
frstor
xor
xor
push
setnp
jle
add
cwde
leave
ret
icebp
not
jmp
je
push
not
imul
ret
add
adc
and
aaa
or
fisub
fnstsw
test
ds
cld
iret
cld
shr
and
sbb
pop
iret
and
push
das
sub
and
inc
mov
mov
inc
and
ja
inc
lods
xlat
test
pop
inc
(bad)
mov
add
fld
xor
in
out
mov
and
xor
xchg
je
jp
out
mov
lds
loope
xor
lods
pop
iret
iret
xor
push
imul
out
jbe
inc
stc
inc
je
add
(bad)
not
int3
jge
loop
ins
cmp
test
in
dec
mov
adc
outs
ss
push
cmp
sub
lods
adc
pop
or
mov
sbb
stos
dec
test
or
cmp
or
(bad)
jl
call
(bad)
lods
or
jb
adc
jne
out
fdivr
inc
leave
cdq
jecxz
and
xchg
dec
cdq
sub
cdq
gs
sub
scas
cmp
mov
jge
arpl
in
test
outs
inc
pop
pop
or
pop
xchg
and
ins
lea
lock
fndisi(8087
mov
inc
gs
mov
out
movs
(bad)
call
out
rol
rcr
in
jmp
ret
dec
fsubr
mov
inc
aas
dec
shl
and
mov
and
(bad)
popf
out
out
sti
push
mov
mov
sub
inc
std
dec
mov
sbb
in
cmp
mov
sbb
pop
data16
sbb
iret
cli
imul
adc
loop
inc
pop
retf
add
xchg
jno
outs
fidivr
sub
sti
xor
js
daa
pop
sub
jne
pop
pop
out
hlt
jmp
cmp
mov
(bad)
cmp
jo
scas
pop
inc
adc
jno
sub
outs
dec
fistp
xlat
scas
ret
xchg
push
cld
ror
mov
jp
cld
shr
adc
hlt
out
mov
mov
aad
inc
fild
icebp
push
fild
dec
push
test
dec
loop
xchg
nop
mov
mul
movs
mov
pop
test
mov
in
inc
sbb
loop
cmc
dec
retf
inc
lock
rcr
adc
lahf
inc
pop
or
icebp
dec
stos
mov
lahf
int3
in
cs
push
aad
sbb
push
cmp
(bad)
dec
sub
push
lods
dec
out
mov
je
cmp
cmc
shl
adc
aad
and
in
test
js
and
popf
test
push
cmps
call
loop
retf
bound
call
push
cwde
jnp
bound
inc
cmp
jmp
je
sti
fcomp
mov
(bad)
xor
aas
push
cmp
pop
xchg
mov
cmps
push
cmp
adc
or
(bad)
shl
mov
inc
imul
stos
popf
out
jge
stc
and
js
out
fisttp
(bad)
sar
add
mov
je
aas
cli
inc
mov
je
hlt
add
cs
call
imul
mov
add
or
fdivr
or
mov
cli
xor
mov
out
aam
pop
lods
sbb
inc
ror
loop
lahf
arpl
das
mov
leave
adc
call
test
fild
push
xchg
jb
ror
std
dec
in
test
mov
imul
inc
out
retw
rol
retf
pop
hlt
imul
pop
pop
aaa
mov
mov
pavgb
inc
and
(bad)
std
movs
cld
fwait
pop
cmp
or
cmp
pop
dec
xor
xadd
jge
xchg
fidivr
call
imul
push
enter
fwait
(bad)
cmp
add
dec
mov
ret
popf
fmul
mov
cmp
pop
adc
lahf
mov
rcr
rol
mov
out
test
jg
es
jo
fwait
aad
jns
add
mov
inc
hlt
jbe
into
push
cs
pop
imul
ins
(bad)
aaa
je
jmp
xchg
mov
shl
mov
jg
rol
std
imul
(bad)
rol
out
sbb
jno
rcr
out
adc
repz
cmp
inc
cmp
dec
and
repnz
(bad)
dec
jo
xor
and
xchg
jnp
xor
dec
jmp
cmp
cmc
and
jmp
or
mov
push
jge
add
fisubr
push
rcr
jno
and
pop
shr
(bad)
jl
push
cmp
jp
jnp
pop
dec
test
push
dec
cmp
push
inc
mov
mov
aam
inc
iret
jns
pushf
scas
shl
xchg
or
and
in
fist
cmp
push
jl
test
push
jg
pusha
and
add
dec
and
jp
inc
mov
cmp
enter
dec
data16
jbe
jg
dec
(bad)
icebp
xchg
jg
push
aaa
adc
adc
pop
rol
loopne
pop
adc
xchg
call
sub
inc
fxsave
clc
scas
stc
mov
sahf
jb
mov
dec
cwde
fsub
mov
sbb
and
mov
xchg
ja
dec
mov
sar
mov
push
dec
aad
out
add
cli
sbb
dec
rol
cmps
hlt
rcr
xor
aam
jle
xor
mov
pop
lods
adc
pop
out
pop
aas
cmp
jae
bound
jmp
mov
not
cmp
inc
mov
ins
mov
pop
fnsave
addr16
sub
(bad)
cmps
mov
push
cmp
cmp
out
mov
sub
jns
cmp
cmps
add
dec
std
xchg
fst
adc
add
pop
nop
mov
mov
sub
loopne
adc
jbe
pop
adc
cwde
and
cmp
sub
stos
lods
(bad)
dec
sub
out
mov
sub
mov
(bad)
fwait
and
sbb
cmps
xchg
add
in
cmp
dec
jo
and
sbb
ins
retf
xor
jmp
add
dec
rcr
jmp
mov
xor
push
dec
das
sbb
cwde
push
mov
inc
jg
leave
push
lahf
mov
jo
(bad)
adc
xchg
movs
js
and
int3
add
cdq
mov
fimul
pusha
mov
jmp
movs
jg
pop
pop
retf
xor
jmp
arpl
dec
ds
inc
or
repnz
push
push
mov
aas
sub
pop
or
xchg
cmps
lock
test
jns
adc
pop
aaa
and
mov
cmc
push
add
bound
scas
pop
sub
(bad)
xlat
call
xor
sbb
imul
jmp
inc
hlt
push
ret
loope
push
xor
hlt
sub
jge
fnstcw
or
dec
pop
and
add
push
call
iret
imul
and
jge
or
xor
out
mov
lahf
int3
sbb
mov
outs
sti
lahf
push
ja
pop
dec
sysret
iret
add
inc
jecxz
int
pop
fisubr
cli
cmp
mov
mov
and
sub
jmp
push
pop
lods
and
mov
fisubr
jmp
xchg
(bad)
xchg
test
or
fs
inc
jecxz
pop
ins
ret
and
es
or
sbb
and
gs
js
shl
or
mov
cmp
stos
(bad)
imul
clc
mov
test
mov
jl
inc
push
std
dec
fs
lea
cs
icebp
cmc
xchg
push
cmp
jl
adc
sbb
test
jl
pushf
in
jmp
xor
adc
ins
xor
fldcw
push
push
mov
jmp
lods
aad
in
imul
jmp
xchg
sbb
fstp
sbb
test
out
sbb
dec
mov
in
xchg
sbb
xchg
pushf
outs
dec
mov
loopne
jge
cmps
or
cmp
xchg
cmc
lods
popf
add
cmc
xor
jnp
das
add
aaa
lahf
popa
sbb
add
data16
pop
shl
shl
dec
mov
adc
in
push
xchg
jbe
retf
aam
mov
(bad)
(bad)
sub
outs
inc
mov
hlt
pop
scas
add
xchg
enter
js
(bad)
jmp
and
rcr
sub
add
pusha
stos
sar
cmp
add
div
fld
gs
or
icebp
jbe
cmp
adc
xchg
push
jnp
mov
mov
jnp
mov
xor
test
test
clc
cmp
inc
das
movs
sub
ret
push
push
jge
lods
clc
(bad)
mov
int3
or
sub
fld
dec
adc
add
stos
ja
outs
mov
in
xor
and
(bad)
mov
idiv
and
adc
add
out
push
jl
movs
out
aam
mov
scas
mov
fldcw
add
cs
(bad)
mov
lods
icebp
sbb
inc
sbb
mov
mov
adc
jno
shr
xor
add
pusha
and
shr
dec
fwait
dec
dec
ret
push
hlt
pushf
fbld
add
movs
xchg
jo
mov
mov
pop
xor
shl
push
cld
mov
ins
xor
inc
cmps
mov
pop
sbb
xor
xchg
retf
mov
mov
fmul
in
or
push
push
fdivr
pop
xchg
mov
scas
cmp
cli
xor
fwait
jge
sub
jecxz
stc
mov
push
dec
jns
xchg
inc
outs
jecxz
popa
pop
mov
lds
pop
adc
inc
add
pop
clc
and
xor
xor
mov
pop
cmps
loope
sbb
inc
or
sub
enter
jb
jl
mov
adc
xchg
mov
rol
jmp
cld
out
lods
sti
int
jne
sub
pextrw
sub
dec
jno
fistp
rol
ror
fistp
aaa
dec
pop
inc
les
dec
dec
adc
pop
inc
fld
(bad)
test
push
test
test
push
into
pop
pop
movs
shr
xlat
shl
and
pop
call
jecxz
or
jns
(bad)
push
aad
jne
frstor
nop
mov
stos
adc
mov
das
cmps
in
scas
clc
pop
in
xor
xchg
jno
jl
dec
idiv
sub
lods
test
into
jae
fdecstp
mov
call
sub
(bad)
leave
stos
jg
xchg
mov
or
enter
mov
retf
pushf
stos
dec
(bad)
xchg
jmp
adc
jns
jo
ret
iret
cmps
mov
in
mov
fidiv
out
push
and
inc
mov
lds
test
pop
pop
xlat
imul
xor
cmps
sti
test
jmp
ficomp
mov
neg
lea
pop
jae
jo
jae
pop
mov
icebp
cld
xor
sub
mov
in
in
adc
jns
out
sub
shl
push
inc
in
jno
outs
add
jae
sbb
sub
repz
fisttp
adc
loop
jns
movs
adc
in
add
fdivp
in
add
and
xchg
scas
pop
neg
icebp
imul
leave
addr16
and
dec
loope
pop
mov
cmps
popa
popf
in
bound
daa
or
movs
or
and
in
mov
add
mov
dec
jecxz
mov
mov
(bad)
fdiv
push
sub
or
adc
mov
mov
cmp
mov
(bad)
stos
mov
inc
mov
or
mov
enter
xlat
mov
sub
pop
and
mov
movs
inc
fwait
ret
push
(bad)
iret
ja
(bad)
pop
mov
xchg
ret
pop
int3
jmp
arpl
xor
and
imul
and
sbb
std
mov
push
test
add
sar
pop
inc
lds
mov
mov
je
mov
inc
enter
or
les
(bad)
loopne
into
and
aaa
out
fimul
mov
jmp
adc
jno
add
sub
sub
aaa
rcl
mov
mov
repnz
aaa
test
mov
or
scas
inc
sbb
jmp
outs
add
mov
cmp
push
jg
or
pusha
les
mov
(bad)
jno
push
lods
push
(bad)
xchg
shr
jno
(bad)
mov
lock
add
adc
sub
jl
xchg
adc
cmp
mov
scas
nop
aaa
je
bound
(bad)
sub
push
inc
dec
cmp
dec
inc
and
adc
jmp
ret
sbb
cmovnp
or
data16
sbb
icebp
sub
mov
or
cmp
add
test
repnz
add
leave
retf
cmps
fsub
ror
xchg
sbb
pusha
fmul
(bad)
mov
jbe
fcom
xchg
(bad)
pop
and
cmps
(bad)
sahf
data16
xor
cmp
xlat
mov
mov
pop
out
int
jns
and
mov
cmc
mov
arpl
push
sbb
ins
call
retf
or
stos
lock
or
cmps
data16
jmp
inc
out
mov
jge
sub
xor
or
or
jecxz
xchg
cmp
lds
fs
dec
mov
mov
cs
jne
loop
mov
push
and
xchg
dec
and
scas
or
sbb
std
in
sbb
cmp
nop
jp
retf
mov
lahf
xchg
adc
jbe
mov
stos
repnz
push
jmp
(bad)
dec
adc
lock
jns
or
pop
pop
fdivr
jle
pop
mov
das
leave
aas
aas
and
rdtsc
scas
inc
jecxz
push
in
and
dec
faddp
(bad)
(bad)
mov
int
loopne
xor
loope
inc
or
shl
mov
and
mov
xor
in
scas
xchg
ss
in
xchg
mov
sbb
mov
jmp
call
jbe
cdq
cs
fiadd
fcomi
mov
out
(bad)
pop
dec
scas
imul
pusha
repnz
jae
add
mov
push
pop
setno
and
dec
mov
add
outs
aam
cld
je
xchg
xor
push
mov
mov
sbb
dec
mov
and
sbb
jno
out
ret
icebp
cmp
xor
push
stos
dec
inc
push
rol
ins
add
call
jno
cdq
pop
mov
add
loope
in
ins
repnz
sub
popa
jmp
imul
mov
cmp
xchg
and
cmp
out
push
sub
push
enter
mov
test
push
add
inc
dec
das
mov
ins
or
adc
mov
cmp
lods
loop
fs
jmp
nop
nop
jg
inc
pushf
in
mov
pop
push
or
popa
scas
mov
loopne
xchg
cmp
cmp
fbld
cmps
adc
daa
loopne
arpl
(bad)
dec
test
mov
dec
jmp
cmc
mov
(bad)
inc
imul
rcr
cmp
sbb
push
xchg
or
cdq
sub
cmps
lea
mov
xlat
popf
or
jl
cmp
xor
or
mov
push
inc
push
mov
dec
out
retf
push
dec
jbe
int3
inc
sbb
nop
push
loopne
rep
jmp
cmp
fwait
jmp
mov
aas
xchg
loope
mov
sbb
popf
or
jecxz
pop
js
push
icebp
pusha
loop
js
das
and
mov
add
dec
mov
add
inc
outs
dec
es
icebp
inc
push
scas
add
ins
shl
sub
dec
jns
sub
inc
cld
xchg
sub
or
es
cmp
loop
bound
dec
dec
jl
aas
gs
push
push
shl
enter
push
jg
xchg
pop
or
rcr
bound
cwde
dec
pop
sub
or
outs
inc
pop
jle
imul
fisubr
sahf
push
lock
out
xlat
xchg
daa
inc
arpl
scas
in
xor
enter
inc
(bad)
jb
leave
std
dec
mov
cmp
test
dec
add
xchg
sbb
jnp
inc
cmc
(bad)
xor
bound
(bad)
xor
sub
jbe
test
jge
inc
sbb
hlt
push
stc
pop
or
xor
inc
mov
imul
inc
cmp
push
jecxz
loop
ja
pop
fst
push
adc
add
aaa
retf
repz
ret
scas
and
outs
add
or
in
popf
hlt
mov
lds
sti
cmp
xchg
dec
aas
neg
cmps
mov
add
dec
xor
in
inc
repnz
icebp
es
ins
or
not
adc
sbb
adc
stos
fs
std
xchg
inc
push
mov
mov
pop
es
jle
pop
lea
stos
or
shl
cs
jmp
(bad)
out
jne
cmps
pop
and
ds
cmp
movs
(bad)
adc
mov
aam
adc
in
(bad)
pop
std
pop
(bad)
dec
sbb
(bad)
pop
adc
dec
in
adc
mov
cdq
ins
cmp
jo
push
ja
std
je
xor
dec
addr16
mov
arpl
daa
rcr
sahf
icebp
popa
mov
mov
cmps
xchg
add
in
sbb
mov
into
shr
out
inc
cmps
js
or
aas
mov
movs
sbb
mov
scas
stc
je
xor
add
fs
or
push
scas
ds
mov
inc
cmp
daa
mov
or
sbb
pop
stos
add
xlat
sbb
je
rol
mov
xchg
hlt
xor
cwde
pop
jg
jbe
out
sbb
or
jns
or
dec
mov
xor
lea
cmps
shr
loopne
inc
sti
mov
jnp
arpl
adc
add
je
and
inc
movs
cs
loope
mov
ds
ret
loope
jg
scas
mov
mov
rcr
jmp
mov
aam
mov
mov
ret
shl
xor
jb
(bad)
into
or
pop
cld
jo
sub
push
jg
lods
scas
jmp
xchg
or
ins
mov
mov
aam
fs
cld
iret
into
jae
push
lahf
fild
test
pop
mov
sub
adc
jge
test
sub
fadd
cmp
sub
and
push
cmp
and
and
inc
ss
mov
cmps
xor
push
jb
jmp
aam
test
jns
jne
clc
mov
loopne
repz
dec
jb
jno
mov
jne
dec
ja
adc
out
lock
inc
(bad)
neg
mov
popa
mov
cmp
test
push
scas
das
xchg
or
xchg
mov
repz
and
dec
sub
(bad)
sahf
popf
lods
xor
cmp
rcl
dec
jbe
xchg
mov
or
test
cwde
ins
cmps
test
pop
je
mov
jbe
add
sbb
push
fs
pop
jle
mov
add
or
mov
cs
xchg
lock
pop
cwde
rcl
mov
push
sar
mov
out
cmp
mov
cld
cmps
pop
out
cwde
retf
retf
mov
sub
sbb
xchg
jae
fist
(bad)
mov
add
call
sti
push
adc
xchg
mov
mov
lea
fcomp
and
pop
add
dec
pop
stos
movs
cld
sbb
call
dec
arpl
xchg
and
dec
and
movs
dec
loope
scas
clc
xchg
ins
mov
fs
xchg
leave
popa
push
adc
bound
adc
pop
or
jno
std
mov
add
jl
push
xchg
fwait
outs
dec
in
je
shl
mov
dec
test
jg
push
lods
jo
inc
add
cdq
(bad)
add
sub
(bad)
stc
adc
cwde
loopne
scas
rol
add
pop
dec
repz
jbe
inc
popf
les
mov
scas
mov
jmp
mov
lock
dec
sub
add
stc
inc
xor
addr16
xor
or
mov
stos
add
pop
jmp
loopne
ja
pusha
dec
fistp
lahf
adc
arpl
sub
push
adc
xor
xchg
pop
pop
adc
jnp
aaa
shr
ror
addr16
or
or
nop
clc
inc
sbb
repz
jle
mov
or
xchg
outs
push
cmp
fld
cdq
mov
push
push
adc
push
leave
pop
ficomp
fcmovne
dec
jbe
mov
int3
dec
es
mov
(bad)
stc
mov
popf
push
xor
enter
sbb
jo
out
iret
(bad)
jmp
dec
lea
mov
outs
stos
out
in
cmps
in
push
jg
ror
ja
pop
shl
xor
or
push
aaa
or
call
push
jmp
add
mov
inc
add
xlat
sar
inc
fldcw
bound
mov
push
loop
outs
mov
xacquire
push
loop
loopne
jp
or
or
sbb
mov
dec
ins
ret
jo
je
cld
out
lods
xor
dec
out
nop
mov
mov
jns
or
lock
pusha
cmp
imul
test
retf
or
call
mov
and
xlat
dec
popf
cmp
jns
stos
(bad)
test
icebp
sti
cs
push
stos
sbb
(bad)
aad
push
mov
sub
repz
lea
jo
fcom
cmp
pop
mov
cmp
in
mov
dec
xlat
ficom
out
retf
dec
(bad)
rcl
rcl
test
mov
and
pop
jno
pop
jnp
mov
lods
(bad)
movs
nop
pop
(bad)
repnz
pop
xor
or
jl
ins
fst
inc
jmp
fld
xor
xchg
sub
add
scas
inc
push
dec
adc
cmps
adc
call
shl
aas
or
mov
xchg
or
xchg
xchg
stos
repz
popa
ret
pop
(bad)
sti
xor
int3
xchg
sub
or
lods
popa
and
xchg
xchg
xchg
shl
adc
clc
gs
es
push
mov
mov
retf
loope
push
ss
mov
mov
test
iret
inc
lods
shl
xor
inc
(bad)
retf
pop
ss
and
popf
stos
dec
xchg
inc
pop
mov
jp
push
scas
movs
(bad)
xchg
in
pop
pop
and
jg
repz
(bad)
xchg
inc
pop
add
sbb
inc
push
xor
dec
imul
mov
xchg
shl
sbb
cmc
ds
sbb
(bad)
or
push
and
add
dec
fwait
nop
xchg
inc
pop
outs
out
movs
out
adc
sub
push
mov
ss
pop
push
pop
xor
or
in
lock
cmc
push
sbb
or
sbb
sub
ror
push
lock
push
(bad)
shld
test
sub
cmps
scas
mul
lods
out
xchg
xchg
cmp
sub
and
movs
retf
imul
sbb
mov
nop
mov
pop
mov
add
mov
sub
mov
mov
cmps
ss
sbb
xchg
data16
push
mov
sbb
pop
jecxz
mov
imul
repnz
and
xchg
xchg
jl
cmps
sub
enter
mov
ret
xchg
aaa
retf
enter
outs
mov
push
cdq
push
shr
cs
jmp
cld
cmp
dec
fnsave
ret
adc
mov
inc
mov
push
mov
stos
out
(bad)
test
in
jns
loopne
push
pop
mov
xor
jg
out
mov
add
pop
add
cli
cmp
(bad)
sub
loop
es
cmp
dec
mul
test
dec
mov
in
sbb
mov
shr
sub
arpl
or
sbb
mov
push
mov
inc
rol
jmp
and
mov
int3
cmp
stos
repnz
out
xchg
push
rcl
sub
mov
xchg
icebp
sti
in
push
test
mov
fs
gs
cmc
add
adc
out
jne
leave
jg
in
pop
inc
leave
jl
cmps
jb
mov
mov
sbb
and
sbb
aam
outs
push
shr
cmp
sub
das
xchg
std
or
pop
(bad)
ins
mov
fdivr
and
sub
sbb
cmp
dec
jecxz
sbb
jl
fistp
cli
mov
fwait
jp
cli
dec
dec
push
pop
push
out
pop
sbb
push
push
mov
pop
mov
stos
mov
xchg
call
mov
bound
jbe
fild
retf
xor
jmp
push
scas
adc
mov
sub
stos
mov
pop
mov
push
mov
aaa
test
nop
in
sub
vmulss
mov
dec
mov
mov
adc
or
push
mov
cmp
out
je
mov
in
aaa
add
jge
xor
outs
dec
enter
pop
stos
cmp
mov
or
ret
and
sbb
cld
mov
dec
mov
(bad)
dec
push
push
xchg
cmp
iret
push
pop
ds
xchg
imul
repz
pop
fist
xchg
and
or
jge
shl
fs
clc
jp
mov
mov
ss
dec
jl
add
and
xor
push
jecxz
sti
mov
aaa
add
(bad)
arpl
or
int
lahf
pop
out
aas
xchg
sahf
nop
ins
or
add
mov
jnp
push
in
xchg
jmp
mov
inc
daa
mov
outs
dec
pop
add
xchg
inc
icebp
lahf
xchg
jo
gs
es
cmps
dec
jnp
fsubr
into
xchg
xor
mov
sar
(bad)
jecxz
xchg
ins
xor
out
in
jne
leave
sub
push
add
ja
data16
mov
es
inc
stos
lock
call
and
fbstp
lock
cmc
je
inc
adc
icebp
cmp
ror
ffree
scas
hlt
push
(bad)
jle
(bad)
dec
mov
mov
pop
enter
lods
and
sub
pop
inc
jg
mov
xor
jae
push
mov
sbb
mov
popf
inc
xor
mov
ja
fld
pop
dec
fadd
repnz
xlat
jge
xchg
mov
loope
push
lods
cmps
fldln2
xor
mov
push
fsub
loopne
pop
out
ds
test
sub
pop
cmps
or
(bad)
arpl
mov
add
je
repz
pop
inc
xchg
and
call
xchg
jbe
rcr
iret
mov
jp
dec
ret
sbb
sub
fst
sub
(bad)
lods
adc
loope
xor
rcpps
mov
stos
mov
sub
jmp
int3
mov
cmp
retf
xor
mov
add
into
je
out
jno
pop
xchg
jmp
sbb
mov
inc
enter
outs
test
add
mov
xor
or
stc
mov
sub
ret
xchg
(bad)
bound
gs
push
mov
mov
cmp
pop
aam
xor
xor
js
mov
int
add
ficomp
sub
ss
cdq
sub
mov
out
fnstcw
cmp
inc
mov
ins
(bad)
ins
add
jnp
sub
fst
mov
add
(bad)
hlt
ficom
mov
lock
dec
arpl
dec
(bad)
ja
out
fadd
fcmove
outs
aam
pusha
or
inc
xchg
shr
js
pop
retf
pop
enter
fnsavew
ins
mov
stos
inc
outs
lds
cmp
rol
in
pop
dec
call
ret
xchg
push
or
adc
out
mov
lds
inc
and
push
push
xor
pop
dec
ds
cmp
push
inc
pushf
icebp
(bad)
jecxz
stc
aaa
mov
stc
or
inc
call
test
pop
sub
(bad)
pop
mov
pop
mov
jmp
fs
pop
xchg
aad
dec
test
out
and
int3
fs
mov
jg
jb
jno
pop
inc
add
sar
mov
push
popa
jmp
shr
sbb
out
sbb
sub
sbb
cld
inc
pusha
call
mov
imul
inc
jecxz
sar
adc
movs
scas
inc
inc
push
test
pop
hlt
idiv
xor
add
mov
mov
add
fld
and
push
out
inc
ror
inc
lahf
and
push
aad
cs
xchg
repz
jg
push
pop
fdivr
fist
or
add
push
fwait
push
push
mov
jp
lahf
scas
mov
add
adc
cmp
jl
inc
rol
or
sub
adc
jp
test
ins
pop
loop
pop
loope
in
push
cmps
lods
mov
(bad)
xchg
in
icebp
mov
pop
imul
ret
sbb
hlt
sub
dec
add
adc
mov
test
sub
xchg
fst
lods
pop
fs
push
inc
hlt
test
ins
shr
pusha
(bad)
cmp
jb
mov
scas
cmc
retf
aas
xchg
inc
cld
lock
dec
icebp
imul
das
js
cmp
daa
(bad)
fwait
cmp
sub
out
pop
loope
push
push
push
mov
jg
clc
lsl
movs
mov
and
es
xor
add
fwait
aaa
mov
scas
push
push
test
inc
mov
iret
mov
imul
test
sbb
aad
xchg
or
inc
popa
loope
imul
fiadd
cmp
fistp
in
xor
push
and
outs
adc
xchg
jmp
mov
mov
mov
rcr
mov
mov
sub
mov
scas
clc
test
repnz
or
aaa
inc
enter
inc
inc
xor
lahf
(bad)
dec
xchg
cmps
pop
fucomi
rol
or
push
test
xchg
or
or
mov
xor
or
jne
xor
and
jmp
lahf
jne
add
sti
(bad)
stos
or
mov
nop
mov
aaa
outs
ret
repz
push
out
cmp
cdq
cmp
data16
(bad)
lods
xor
leave
lods
xlat
xchg
(bad)
or
mov
test
(bad)
mov
xor
loop
stc
mov
hlt
cmps
sub
cmp
inc
add
adc
jo
mov
and
out
xor
das
shl
adc
pop
adc
retf
lods
push
popf
add
mov
push
popf
pop
dec
mov
xor
call
scas
fisubr
dec
imul
mov
jo
outs
cmp
call
cdq
mov
es
mov
add
in
imul
add
add
pop
test
push
inc
lock
jg
les
sti
es
pop
imul
xor
jmp
sbb
inc
jb
cs
outs
andps
call
sbb
rcr
int
ins
mov
mov
in
pop
jno
xchg
inc
mov
push
mov
push
std
xor
leave
mov
mov
inc
and
(bad)
and
leave
loop
ud0
aaa
mov
adc
push
cmp
xchg
rcr
fidiv
fidiv
test
xchg
xchg
pop
iret
mov
(bad)
fcos
ds
ja
(bad)
jg
adc
(bad)
jge
cmps
mov
adc
sub
ja
test
bound
lea
fst
pop
inc
mov
inc
repz
loopne
jmp
and
(bad)
in
mov
jmp
out
mov
fnstcw
cmp
scas
adc
sahf
mov
or
test
in
push
mov
aas
in
ds
xchg
ja
popf
fimul
out
dec
cli
jp
into
push
test
aad
test
and
loopne
cmp
xlat
pop
loopne
cmc
or
mov
nop
xlat
sbb
adc
mov
enter
dec
in
test
mov
das
jbe
push
pop
sbb
scas
xchg
jecxz
and
repnz
xchg
push
sar
leave
and
cwde
inc
adc
jge
mov
sbb
std
pop
ins
movs
adc
out
fild
aam
or
add
int
push
xchg
daa
int3
shr
xor
imul
fwait
sub
adc
movs
fstp
(bad)
in
(bad)
(bad)
xor
inc
or
arpl
sti
sub
in
sbb
nop
jle
sbb
mov
cld
loopne
int
pop
stos
xchg
adc
(bad)
sub
cmps
xor
scas
(bad)
mov
or
xacquire
push
jp
int
cmp
das
pop
xchg
repnz
retf
ins
add
mul
(bad)
mov
(bad)
bound
jmp
or
adc
xchg
push
imul
aam
xor
das
cmp
or
loope
shr
std
ins
neg
dec
inc
iret
gs
jmp
mov
pop
leave
jmp
sar
lods
(bad)
aas
mov
aaa
xor
rol
jno
in
sbb
ret
adc
or
js
aas
fmul
aam
xor
fistp
or
pop
add
sbb
push
jno
in
push
not
pushf
push
jg
fwait
xchg
imul
cmps
enter
outs
mov
call
inc
adc
push
retf
dec
cmp
lock
mov
xor
ret
jl
dec
jmp
mov
in
mov
sbb
and
push
fiadd
xchg
popf
xor
mov
ins
call
dec
cmp
mov
mov
jg
stc
sbb
mov
fisttp
sub
mov
movs
pop
xor
shr
ins
cwde
out
pusha
mov
xlat
cs
(bad)
enter
xor
out
add
jno
stos
xor
push
jp
(bad)
pop
das
test
std
ror
adc
iret
xchg
out
leave
xlat
les
pop
les
mov
mov
jl
sbb
inc
out
scas
add
adc
sti
and
aad
xchg
cwde
xchg
mov
cmps
cmp
popf
dec
adc
mov
repz
fs
pop
shr
hlt
xchg
not
out
cmp
cld
cli
mov
das
shr
mov
xrelease
shl
pop
in
mov
retf
je
sub
push
test
jnp
jle
dec
fdiv
sub
mov
pushf
out
mov
mov
daa
imul
adc
cmc
sub
mov
add
sub
out
push
jno
push
and
dec
lds
(bad)
loop
loopne
scas
sar
gs
add
call
clc
inc
out
cld
sbb
shr
popf
call
jno
pop
sbb
jecxz
out
sbb
in
ret
mov
jo
(bad)
sar
fs
clc
ret
adc
pusha
push
push
dec
add
std
cmp
ja
xor
sub
std
push
stc
mov
stos
scas
inc
jmp
mov
cli
sahf
push
and
in
mov
xchg
sahf
inc
inc
pop
mov
pop
adc
mov
pop
cld
sub
fsubrp
adc
jle
jle
lods
or
push
daa
cmp
add
sub
fbld
arpl
pop
mov
rol
jge
(bad)
cli
pop
clc
xchg
push
inc
(bad)
out
cld
jbe
pop
mov
inc
lds
mov
mov
pop
leave
fdiv
fcom
pop
out
pop
push
fstp
cld
add
xor
das
dec
outs
jae
loopne
mov
add
pop
imul
jge
inc
jmp
mov
push
jl
and
aas
sbb
pop
out
jmp
pop
xchg
add
mov
dec
jmp
mov
xlat
pop
cmp
push
fist
loopne
pop
movs
or
cmp
sbb
movs
and
pop
jmp
fwait
mov
or
pop
and
fldcw
sahf
dec
xchg
sbb
and
cmp
mov
mov
inc
dec
inc
sub
xor
addr16
xor
pusha
mov
xchg
inc
jns
or
mov
jb
sbb
pushf
call
jl
sbb
sub
adc
(bad)
lock
or
pop
push
dec
xor
inc
idiv
lods
sub
dec
pop
sub
dec
push
adc
out
dec
sub
inc
xchg
xor
outs
clc
fs
(bad)
or
adc
sbb
lahf
movs
add
sbb
mov
ret
xor
dec
sbb
adc
xchg
and
or
mov
out
jmp
push
sbb
and
fs
mov
pop
pop
icebp
inc
leave
mov
mov
shl
fnsave
lahf
mov
pop
or
and
es
inc
ret
repz
test
mov
xchg
jg
pop
sub
js
pop
iret
inc
lods
pop
int
int3
popf
int3
out
jbe
xchg
test
push
add
lods
arpl
mov
pop
mov
dec
pop
fsub
adc
mov
out
mov
rcl
loop
sub
iret
ret
fcmovnb
xor
out
jo
xchg
hlt
sub
push
adc
sub
mov
(bad)
mov
push
push
ret
sar
adc
sbb
and
scas
push
push
adc
adc
pushf
ret
mov
call
dec
test
sbb
mov
in
jg
push
add
mov
dec
test
and
ins
cdq
loope
sub
ret
mov
and
mov
adc
imul
repz
daa
push
jmp
jns
add
cmps
jne
jns
cdq
inc
sub
pop
frstor
pop
loop
cmp
jae
mov
ds
in
fld1
mov
dec
adc
push
adc
aam
and
pop
xor
xor
iret
aaa
fsubr
dec
push
mov
rcl
fcom
mov
mul
(bad)
mov
dec
mov
lahf
call
xor
(bad)
in
xchg
std
mov
jbe
shl
dec
adc
in
pusha
gs
push
jb
call
movs
or
aas
out
pushf
(bad)
jmp
mul
std
aam
pop
add
ret
dec
cmc
scas
xchg
ret
inc
aaa
sbb
xchg
mov
ret
ficomp
adc
imul
push
cmps
jmp
movs
call
jno
mov
mov
pop
add
in
imul
out
sbb
test
pop
push
lock
cdq
jecxz
add
fsubr
cmp
jno
jle
mov
jmp
cmp
pop
cmps
int
sub
xor
aam
push
test
push
dec
or
ja
fnstenv
aas
jg
(bad)
mov
outs
mov
sub
xchg
sub
pop
(bad)
xor
les
scas
mov
jg
inc
xchg
pop
jg
push
popf
ret
leave
fnstcw
push
mov
scas
out
lds
or
xchg
or
and
and
mov
into
bound
les
mov
mov
inc
iret
fsubr
adc
push
out
lds
pop
dec
outs
xchg
push
push
adc
inc
mov
push
jne
sbb
pop
fwait
push
mov
dec
xor
and
repnz
jno
pop
jnp
inc
adc
shl
pop
(bad)
(bad)
fldcw
and
mov
fidiv
je
mov
out
jne
mov
lahf
xchg
retf
sbb
das
les
xor
pop
xor
jb
pop
rcr
neg
push
add
stos
pop
cmps
mov
jmp
test
jne
inc
dec
xchg
fst
sbb
into
imul
cmp
pop
enter
fnstenv
cmp
inc
out
out
in
mov
dec
shr
fisubr
pop
dec
push
jle
adc
sub
dec
aaa
adc
sub
push
cmc
popa
xlat
clc
nop
call
sbb
fidiv
daa
mov
outs
les
out
nop
popa
add
cmp
lock
push
cs
push
imul
sub
pop
pop
aas
push
aad
test
jae
ja
jp
ret
lds
fld
lea
cmp
cmp
dec
into
adc
jl
das
stos
in
test
dec
fsub
cdq
nop
xlat
mov
pop
aaa
push
adc
cwde
adc
cmp
(bad)
mul
xor
mov
cmps
pusha
cmps
aas
cmc
mov
imul
pusha
jmp
lods
sbb
jle
adc
pop
fidiv
inc
repz
ja
xor
les
sub
adc
lahf
adc
mov
scas
xchg
neg
pop
ins
dec
stos
jmp
retf
aad
ud2
and
pop
or
dec
inc
inc
pop
mov
add
pop
es
xchg
ins
pop
push
push
out
fbstp
sbb
cmp
mov
cmc
outs
jmp
mov
dec
pop
aas
pushf
add
pop
inc
pop
data16
es
ins
jns
hlt
or
xor
sbb
(bad)
fwait
ss
adc
movs
rol
popf
lods
popa
inc
xchg
xor
ficom
out
lds
jno
(bad)
(bad)
push
sbb
mov
ds
std
call
call
lock
jae
or
mov
mov
imul
sbb
xor
hlt
adc
cmp
(bad)
sub
jo
lahf
cmp
(bad)
mov
lahf
push
pushf
mov
mov
and
in
mov
push
scas
add
mov
loopne
gs
arpl
and
or
mov
dec
fdivr
aam
cmp
scas
sub
inc
sbb
(bad)
xor
(bad)
cli
test
fs
pop
jns
ror
lea
add
mov
xchg
iret
push
inc
inc
xor
ret
fdiv
sar
pop
pop
inc
adc
mov
aad
cmps
jecxz
mov
push
xchg
addr16
out
adc
movs
mov
mov
xchg
cmps
out
push
test
or
cmp
lods
add
jecxz
and
sbb
xor
pusha
sbb
stc
in
nop
aas
outs
mov
stos
fmul
dec
or
mov
cmp
aam
push
(bad)
sar
jl
imul
js
movs
repz
in
ins
into
call
pop
push
loopne
inc
inc
push
stos
pop
sbb
inc
add
push
and
cmc
movs
pop
mov
mov
(bad)
mov
add
ins
jle
stos
cmps
sbb
sub
mov
xor
jecxz
sub
out
xor
cmp
add
cmp
and
inc
cmp
sahf
push
pop
mul
fsub
mov
dec
push
push
icebp
mov
loope
lods
push
std
popa
inc
jmp
and
(bad)
call
fisttp
inc
push
ins
push
adc
mov
and
(bad)
sub
int3
push
not
adc
cmp
jns
or
(bad)
outs
fnstenv
loop
add
cdq
pop
xchg
rcl
lds
adc
imul
dec
jbe
pop
repz
pop
setg
adc
in
and
test
jle
mov
sbb
fild
inc
cmp
pop
xchg
sbb
lds
ret
or
fwait
mov
cwde
sti
pusha
cwde
push
clts
xchg
cli
ret
shl
jmp
fnstcw
fadd
sub
xor
lods
hlt
aam
pop
inc
mov
js
push
and
cmc
sbb
push
sar
jnp
jp
add
sub
mov
rol
icebp
sbb
and
cld
std
xor
mov
ret
cmp
or
imul
ror
(bad)
mov
and
xchg
les
and
sub
adc
mov
into
cld
ins
(bad)
ret
pop
retf
ror
sbb
cmp
sbb
dec
xchg
mov
fidivr
sub
add
push
stc
inc
(bad)
sahf
loope
and
pusha
cmp
lds
xor
xor
das
push
pop
mov
push
fidiv
mul
xchg
pop
aas
mov
jae
sbb
in
mov
xchg
loop
js
pop
fstp
int
jns
fistp
movs
(bad)
push
cmp
pop
jmp
enter
ror
cmovnp
ins
dec
jmp
imul
push
loopne
aaa
mov
adc
cwde
inc
cmps
adc
mov
cwde
ret
sub
es
mov
fiadd
mov
sbb
test
out
cmc
test
mov
lahf
pop
dec
mov
cmps
aaa
push
or
sub
gs
mov
pop
push
fnsetpm(287
shl
das
jle
mov
mov
ja
or
(bad)
mov
arpl
adc
mov
ds
fidivr
call
push
cmp
cmp
out
std
hlt
pop
xchg
sub
std
out
sbb
fs
cs
xchg
jge
inc
adc
and
and
pop
xor
xor
pop
adc
stos
mov
inc
sub
enter
fdivr
pop
jl
adc
loope
call
xor
(bad)
test
sub
pushf
popf
mov
fisttp
jns
push
jp
ret
cs
sbb
sub
xchg
adc
or
lods
sbb
mov
in
call
jl
add
jge
dec
hlt
sbb
leave
cs
fdiv
mov
mov
xchg
mov
test
sub
dec
dec
(bad)
adc
repnz
mov
jg
xor
mov
sub
inc
mov
pop
fsubr
ss
and
imul
out
cmp
into
mov
pop
xchg
popa
fdivr
pop
pop
cmc
push
jb
adc
sbb
icebp
push
mov
pop
pop
cmp
xchg
jns
xchg
dec
fisttp
sub
shr
rcr
sar
ss
shr
add
daa
jbe
fstp
scas
clc
xchg
fwait
div
dec
mov
fsub
mov
lods
les
mov
mov
adc
pop
in
pop
adc
fsub
dec
mov
imul
lods
xlat
pushf
push
pop
or
sbb
jg
pop
xchg
retf
les
sahf
jecxz
mov
dec
fnstenv
pop
jle
xor
aas
xchg
ror
cmps
loope
js
cmp
ja
dec
jl
dec
jmp
adc
pop
pop
in
inc
sbb
imul
sbb
xchg
pop
lahf
or
push
scas
lods
mov
add
outs
mov
stos
sub
mov
fs
aas
push
inc
cs
xchg
ja
mov
into
and
xchg
xlat
dec
imul
dec
xor
jnp
inc
dec
add
push
push
stos
js
push
pushf
mov
loop
push
mov
add
daa
fiadd
or
movs
push
add
(bad)
adc
int
(bad)
mov
lods
leave
ret
mov
gs
sub
jns
lods
leave
sahf
std
sar
pop
mov
push
mov
mov
cmp
push
(bad)
in
cmp
std
dec
pop
ins
jmp
add
jge
ss
push
imul
and
or
mov
and
sub
fisub
pop
mov
aaa
jnp
out
jbe
sub
dec
add
cmps
out
ret
cmp
icebp
stos
sbb
mov
lahf
xor
pop
push
out
sbb
test
jo
(bad)
sbb
inc
push
mov
sahf
mov
retf
mov
fstp
pop
sub
aaa
in
sub
test
mov
push
dec
push
or
cdq
jge
sbb
sbb
cld
or
cmp
mov
idiv
cmp
or
repnz
pop
or
add
(bad)
jmp
jo
mov
ins
into
add
or
mov
push
in
aaa
scas
inc
sbb
addr16
mov
out
pusha
and
dec
cmps
adc
stos
pop
cdq
in
lea
xchg
data16
dec
fadd
push
call
fs
jbe
and
lods
and
pop
sub
xchg
sbb
mov
and
test
rcl
jne
icebp
stos
inc
and
xchg
push
mov
rol
fdiv
lahf
and
jle
icebp
pop
push
mov
aad
mov
push
nop
sahf
inc
retf
mov
loop
stc
adc
add
pop
sti
out
stos
pop
add
add
dec
ds
jns
jae
sub
inc
fbld
stc
mov
or
push
inc
mov
push
test
ins
repz
dec
jmp
and
and
add
sbb
repz
or
mov
dec
mov
imul
repz
clc
aaa
in
mov
aaa
cdq
sbb
repz
cmp
dec
pop
jb
cli
hlt
push
js
pop
push
jbe
adc
mov
and
pop
aaa
test
push
pop
ins
inc
sub
sbb
xor
dec
outs
mov
push
sbb
fs
sub
enter
add
imul
adc
mov
in
mov
and
icebp
sbb
in
imul
jae
mov
cmp
repz
sub
pushf
outs
sar
loope
pop
adc
xor
rol
or
mov
ret
sub
dec
inc
bound
push
ret
inc
and
cmp
outs
sti
idiv
mov
imul
stos
movs
fs
in
dec
pop
leave
pop
es
ss
push
(bad)
jmp
or
and
sub
aas
pop
xor
inc
ins
jae
ror
fwait
sbb
fwait
jecxz
in
test
mov
jo
test
inc
xor
and
fsub
push
pop
in
cmc
cmps
push
ins
pop
jmp
lods
cs
in
into
ja
in
nop
retf
xchg
aas
add
mov
stos
xor
in
pop
les
pop
imul
adc
push
aaa
mov
js
push
pop
jmp
add
cli
mov
pop
xchg
cmp
in
and
sbb
mov
loope
leave
push
(bad)
sbb
mov
sub
xlat
imul
int3
mov
icebp
movs
mov
mov
and
xchg
sar
imul
mov
cs
inc
cmp
xor
push
ds
mov
ret
movs
and
(bad)
jmp
dec
leave
das
rol
and
and
mov
mov
jg
test
jns
push
jne
mov
pop
pop
pop
and
outs
hlt
das
jns
xor
(bad)
in
adc
test
sub
add
stos
cmp
(bad)
lds
jecxz
pop
jle
sub
mov
jle
fsubr
xchg
cmp
push
mov
adc
xchg
xor
les
and
cmps
xchg
mov
sbb
sbb
movs
mov
out
mov
jae
in
dec
mov
cmp
mov
in
test
and
call
dec
jle
in
stos
nop
test
retf
sbb
adc
adc
fwait
and
fcmovnbe
mov
cmp
mov
pop
cli
in
inc
cmps
xor
inc
mov
cli
fidivr
ja
or
jb
cmc
pop
ja
push
cmps
push
inc
xor
lea
inc
cmps
popa
dec
rcl
out
popf
dec
add
test
jge
call
pop
add
loopne
xchg
popa
test
enter
and
jmp
inc
sti
pushf
aas
fcomp
mov
stos
xor
lods
pop
imul
mov
mov
xchg
sbb
jmp
lods
fsub
and
xchg
pop
das
aaa
hlt
test
scas
mov
scas
and
test
cli
xchg
mov
sbb
inc
xchg
pop
inc
add
adc
mov
dec
data16
fst
xchg
mov
les
inc
js
ds
aad
mov
inc
fdivr
rcl
daa
dec
mov
push
mov
aam
dec
leave
fimul
push
adc
call
push
add
or
rcr
push
mov
push
and
rcl
js
aad
addr16
jecxz
es
fisttp
(bad)
ficomp
xchg
mov
dec
mov
mov
adc
(bad)
fcmovnb
xchg
cli
std
mov
inc
pushf
dec
xchg
stos
or
leave
push
ret
pop
xchg
iret
sub
pop
stos
cmp
call
movs
dec
loopne
and
mov
fcmovne
xchg
push
mov
jle
push
je
popa
test
enter
bound
pop
mov
loopne
int3
dec
adc
jmp
add
das
imul
enter
xor
dec
(bad)
jge
xchg
xor
and
fisub
jle
out
lahf
jnp
in
sub
push
stc
jge
mov
lahf
inc
jno
ss
jns
rol
push
cli
mov
cli
xor
pop
clc
add
push
cmc
outs
(bad)
sbb
lock
test
xchg
int
call
call
sbb
push
stos
mov
dec
inc
popf
jmp
ins
loop
mov
int
mov
jecxz
mov
jns
adc
add
sti
ins
xor
mov
push
nop
cmc
rol
cmp
retf
jno
mov
cmp
cmc
shl
mov
adc
jo
push
dec
and
call
adc
test
mov
mov
xor
popa
lds
and
fidiv
dec
adc
in
psrlq
mov
mov
and
je
jae
inc
data16
ret
xchg
retf
or
jnp
es
(bad)
das
out
mov
ja
sub
cmp
fwait
or
pushf
mov
in
dec
idiv
adc
fdiv
ror
adc
mov
sub
cmp
enter
xchg
jae
lods
repz
addr16
inc
or
inc
lock
mov
pop
add
mov
adc
mov
jl
imul
jbe
and
ret
mov
fisub
jno
push
cmc
repz
pop
or
mov
(bad)
mov
test
xlat
dec
xor
pop
mov
bound
outs
push
jbe
mov
(bad)
mov
mov
inc
aam
mov
je
jae
and
out
sub
sub
stos
pop
mov
pop
(bad)
(bad)
inc
inc
ins
repnz
rcl
sbb
jae
inc
mov
jge
leave
repz
shl
es
jp
sbb
outs
cmp
pop
pop
lock
ds
fimul
cmps
in
addr16
in
xor
xor
mov
das
pop
dec
dec
shl
mov
inc
and
adc
xchg
push
aas
jmp
xor
nop
in
xchg
fwait
add
pop
daa
pop
xor
push
ror
inc
retf
cmc
sti
inc
dec
mul
sub
repz
pop
stos
rol
fsubr
lds
fisttp
sbb
dec
ror
push
dec
(bad)
mov
jecxz
mov
add
fadd
je
or
pop
loop
rcl
jl
dec
(bad)
jo
movs
xor
sub
inc
popa
fwait
inc
and
pop
and
push
mov
shr
or
(bad)
pop
and
ja
cmp
es
sub
add
jae
mov
cmc
lds
mov
dec
xlat
cmc
xlat
adc
and
rcr
or
pop
call
gs
repz
xchg
jp
hlt
mov
daa
cmp
shl
gs
test
into
dec
popa
add
inc
mov
jl
xor
(bad)
push
icebp
mov
out
cmps
pusha
xchg
enter
pop
jns
arpl
add
pop
mov
cmp
and
mov
shr
jge
arpl
daa
add
(bad)
test
aaa
xchg
stc
shl
int
jp
push
es
mov
jno
data16
stos
ss
lods
scas
aaa
enter
pushf
jns
bound
mov
or
imul
xor
jg
fnstcw
push
pop
pop
push
retf
cmp
test
mov
std
js
shl
aad
sub
shr
cmp
xchg
test
test
fdiv
sub
cli
mov
jo
cmps
sub
clc
outs
push
dec
popf
icebp
out
call
pop
fcomip
push
cmp
in
adc
cwde
in
sar
sub
xchg
mov
stos
mov
or
jmp
jecxz
scas
pop
jne
cli
(bad)
scas
jnp
dec
add
jo
mov
push
dec
retf
sahf
xcrypt-ctr
cmps
sbb
inc
adc
popf
sbb
out
aas
dec
sub
and
mov
push
inc
push
or
add
pop
and
inc
adc
cld
adc
xor
(bad)
stos
jb
mov
sub
adc
push
and
jmp
enter
xchg
mov
lds
retf
mov
sbb
int
in
add
retf
xor
loopne
test
inc
mov
lds
inc
adc
mov
loope
xchg
jno
cld
sub
in
jl
push
adc
cmp
sub
jmp
xor
imul
push
xchg
mul
movs
cs
pop
mov
stos
out
out
pop
inc
loopne
mov
fdivr
jmp
mov
fmul
adc
jo
imul
mov
dec
mov
rcl
aas
push
or
add
add
inc
std
stc
je
or
mov
push
pop
xchg
mov
rol
adc
imul
mov
inc
rol
pop
test
xor
add
mov
arpl
fisubr
ss
or
fsub
jo
inc
aam
mov
add
xchg
mov
jg
jno
mov
sub
sub
push
icebp
jp
jno
pop
push
mov
out
clc
fld
imul
out
call
retf
xor
mov
jo
sbb
fist
push
ins
mov
out
das
pop
je
pop
mov
xor
addr16
pop
pop
js
ins
movs
loopne
popf
nop
in
pop
jg
mov
pop
ficomp
iret
in
cwde
outs
cmp
leave
fs
mov
cmp
and
xor
adc
js
cld
iret
mov
scas
dec
push
pusha
lahf
call
inc
ret
add
and
adc
loope
enter
xchg
rcl
xchg
leave
mov
xor
jns
pop
loopne
cmp
fidivr
int
loop
sub
push
sub
pop
in
fs
shl
lock
test
add
test
repnz
les
push
pop
iret
sbb
ss
sbb
sub
push
and
add
inc
dec
jno
pop
in
loopne
push
addr16
dec
outs
and
dec
bound
jb
lea
or
hlt
add
jl
movs
arpl
inc
lea
mov
xchg
ja
xchg
(bad)
push
mov
dec
mov
enter
outs
xchg
push
xor
dec
dec
enter
daa
arpl
inc
aam
or
inc
mov
ja
(bad)
and
(bad)
xchg
aaa
loope
mov
out
and
xor
xchg
dec
ffree
mov
and
arpl
sbb
loop
hlt
mov
pop
mov
sub
in
inc
mov
das
out
adc
daa
cld
enter
out
mov
mov
push
inc
mov
in
mov
ror
iret
mov
mov
gs
movs
add
dec
mov
aaa
pop
mov
xchg
fbld
pop
cdq
sub
cmc
fld
mov
xchg
inc
mov
rcr
iret
adc
fisub
push
mov
adc
loopne
dec
loope
bnd
lods
dec
loop
and
in
cmp
lahf
fwait
push
jl
shl
jmp
enter
pop
scas
and
add
cld
pushf
xlat
iret
adc
mov
add
cmp
jno
ds
add
in
jo
sahf
xchg
test
mov
add
ds
or
sbb
or
ins
call
mov
imul
std
retf
and
sub
add
pop
pop
out
pop
inc
mov
js
inc
sub
dec
les
xlat
adc
jmp
sub
xor
xor
(bad)
push
cli
ficom
jnp
sub
bound
loope
movs
int3
xor
pop
(bad)
retf
idiv
pop
or
(bad)
fnstcw
and
fisttp
jl
push
mov
pop
dec
sbb
push
or
leave
mov
arpl
stc
in
dec
sub
out
ret
inc
mov
pop
stc
push
aad
mov
cmps
pop
add
icebp
push
fdivrp
and
(bad)
int3
mov
fldenv
test
dec
add
jbe
push
push
fwait
mov
ss
push
outs
mov
and
adc
add
not
add
add
push
aaa
cdq
nop
pop
div
xor
xchg
or
inc
mov
int3
adc
mov
xchg
cmp
inc
test
sub
hlt
pop
out
adc
addr16
push
sub
popf
sbb
jecxz
pop
adc
test
cmp
dec
aad
inc
jmp
loope
scas
push
mov
xchg
shl
repz
and
(bad)
ror
push
test
pop
mov
mov
icebp
jno
sub
ret
scas
mov
mov
xchg
pop
out
cmp
jno
inc
ds
loopne
sbb
inc
int3
jg
pushf
sbb
in
xchg
push
jmp
(bad)
push
mov
inc
scas
sbb
cwde
fnstenv
xor
dec
adc
cli
ja
or
sbb
pop
lock
sub
ins
cmps
mov
movs
mov
aas
pop
fmul
fild
repz
stos
sbb
xor
mov
je
adc
loope
loope
dec
add
jns
xchg
in
imul
stos
orps
jp
xor
inc
rol
adc
mov
lds
mov
push
cld
jg
mov
inc
xor
sbb
mov
into
jb
loopne
push
lods
fisubr
mov
into
imul
bound
js
mov
iret
inc
mov
aam
dec
xchg
fstp
and
jne
hlt
mov
or
(bad)
xchg
imul
mov
dec
adc
retf
int3
dec
xchg
cmp
pop
ja
repz
jb
adc
push
mov
(bad)
loope
stc
mov
dec
or
mov
jle
sbb
test
inc
daa
push
iret
adc
in
movs
jmp
iret
cmps
pop
cmp
jmp
add
dec
inc
xchg
mov
or
test
std
push
cli
fsubr
mov
pop
xchg
jbe
and
xchg
cmp
cdq
int
push
xor
mov
inc
adc
sar
mov
sub
test
pop
mov
jno
pushf
movs
cmp
jne
sub
or
pushf
xchg
adc
and
xchg
jae
add
retf
in
inc
loope
push
dec
rcr
sub
jmp
mov
mov
mov
sub
retf
and
or
out
pop
repnz
shl
or
inc
imul
cmp
stos
jo
sbb
jle
add
test
dec
xchg
push
mov
jmp
xchg
push
int
sbb
imul
mov
cmp
adc
addr16
jg
jbe
dec
jp
das
inc
push
pop
jecxz
cmps
xor
imul
push
inc
add
and
movs
dec
mov
sub
xchg
pop
in
std
push
mov
add
jno
enter
cmp
clc
pushf
sbb
sub
pop
ins
push
enter
fs
fst
or
add
frndint
cmp
sub
mov
dec
ins
mov
(bad)
dec
rcl
or
(bad)
cmps
sub
lock
cmp
adc
cmp
sub
test
stos
fadd
ins
fs
mov
sub
js
call
fs
mov
inc
dec
popa
je
(bad)
cld
jo
loop
pop
jl
push
push
aas
jl
daa
mov
xor
sub
das
cmps
jle
push
pop
xor
out
outs
or
out
stos
inc
inc
into
(bad)
addr16
popa
or
dec
xor
cmp
dec
mov
ret
push
mov
ret
xchg
cmp
sbb
arpl
pop
cmp
jo
jbe
(bad)
fidiv
or
sbb
xchg
les
loope
cmp
jge
xchg
mov
dec
jae
jne
fdiv
mul
mov
aas
or
sti
and
dec
popf
jl
sbb
pop
das
mov
mov
push
fs
xchg
xchg
mov
cmp
sbb
mul
lods
mov
outs
adc
int3
jle
mov
ja
test
jo
dec
mov
cdq
lods
mov
cli
ret
adc
ss
or
fdiv
js
add
or
out
(bad)
lods
ficomp
clc
mov
mov
rcr
xor
add
mov
adc
mov
ds
rcr
shl
mov
sub
cmp
mov
dec
mov
jmp
jg
pop
fsub
dec
movs
in
lock
leave
and
inc
bound
and
int3
add
outs
mov
aad
in
cs
push
pop
retf
retf
addr16
in
push
add
push
stos
mov
cwde
pusha
(bad)
in
fwait
or
lods
aaa
fs
and
sub
pusha
rcl
jns
imul
bound
adc
xor
test
dec
cmp
inc
(bad)
add
adc
enter
mov
stos
mov
lds
pusha
pop
cmp
retf
sub
rol
sbb
mov
shl
outs
ficomp
pusha
mov
pusha
rcl
mov
int3
xchg
imul
add
sbb
out
inc
lods
shl
rol
(bad)
jb
push
lods
jb
out
dec
sbb
repz
inc
inc
aam
mov
or
gs
std
cmp
dec
fwait
std
aam
jp
sbb
xchg
mov
loop
xor
adc
xor
mov
sar
add
pop
and
lods
das
inc
mov
out
jle
movs
sbb
mov
push
repnz
cli
sbb
dec
push
out
mov
lea
loop
push
movs
dec
mul
jbe
shl
hlt
and
mov
mov
fcomp
push
ins
and
lods
loope
and
cmp
mov
xchg
jecxz
ret
aam
fistp
loope
adc
pusha
mov
(bad)
push
lds
jo
fs
fcmovb
ins
dec
mul
sar
inc
jg
push
test
dec
cmp
push
inc
and
and
aas
inc
ja
xor
xor
mov
push
(bad)
inc
cdq
jo
out
ret
movs
mov
aad
mov
sub
or
add
shl
sub
imul
pop
xchg
adc
jl
sbb
cdq
fist
pop
enter
je
and
stc
pop
inc
int3
jmp
jle
inc
or
fidivr
xchg
sub
mov
mov
inc
pop
sbb
sub
sbb
mov
pop
xchg
adc
push
and
or
das
dec
in
jg
movs
pop
fld
nop
shl
enter
lea
adc
repz
jg
or
loope
pop
dec
sub
int
and
sub
imul
mov
add
inc
or
call
dec
push
ficom
and
xchg
loop
inc
outs
xor
enter
mov
jmp
idiv
inc
retf
(bad)
ror
sbb
stos
dec
(bad)
leave
in
in
jns
mov
sbb
sbb
and
mov
out
mov
out
mov
and
sbb
fild
popa
arpl
cli
adc
ins
scas
cmps
add
test
inc
ins
dec
dec
cmc
aad
icebp
xchg
pop
mov
lea
xlat
movs
cmc
retf
xchg
jg
inc
hlt
jns
pop
xchg
lods
pop
mov
push
std
xor
cmp
nop
jne
cmps
push
cmp
(bad)
mov
stos
pop
add
pop
ins
inc
popf
jmp
scas
dec
dec
fwait
cmp
push
mov
push
mov
add
pushf
rol
add
cmp
lea
mov
pop
or
or
jge
in
lods
pop
fs
clc
push
loopne
es
test
lock
mov
sub
test
jmp
push
adc
pushf
cmp
push
into
push
jecxz
cmp
aas
pop
aad
adc
daa
cmp
cmps
dec
mov
sahf
mov
cmp
jmp
clc
or
sbb
and
jg
sbb
aad
fistp
gs
ss
mov
and
iret
cmc
enter
xor
jle
outs
pop
das
or
adc
mov
stos
mov
setnp
xchg
mov
popa
mov
aam
or
xchg
xor
push
sub
or
mov
cmp
(bad)
fidivr
dec
stc
jb
mov
pop
sbb
inc
ror
sbb
daa
jge
in
stc
push
mov
pop
test
mov
gs
mov
cmp
neg
jle
dec
cmp
es
and
shr
in
fs
pop
xor
shr
and
stos
pop
dec
lahf
rol
(bad)
mov
cmc
cmp
sbb
dec
cmp
sbb
in
fcom
adc
inc
repnz
push
jbe
gs
scas
aam
sub
mov
inc
xlat
mov
xor
js
scas
std
ret
xchg
pop
pop
ds
pop
test
sti
jle
inc
cmp
call
(bad)
mov
push
es
repz
and
iret
les
dec
xor
fisttp
adc
lea
push
xchg
jo
fist
and
mov
xor
xchg
xor
imul
dec
xchg
mov
das
mov
shl
hlt
call
popf
pop
add
push
mov
mov
push
ja
js
pop
ret
push
xchg
jne
add
or
and
add
sub
mov
and
xchg
hlt
dec
or
clc
arpl
sub
and
pop
movs
xchg
and
mov
popf
xor
adc
push
mov
xchg
out
lds
sub
lock
mov
pop
and
xor
inc
xor
adc
xor
fbld
ds
ret
mov
dec
push
add
adc
push
lsl
xlat
ins
mov
out
mov
cmp
pop
sbb
sub
stc
push
pop
xlat
aad
lea
test
test
in
push
sbb
inc
sar
fs
sbb
fcom
pop
je
test
push
xchg
dec
add
ds
stc
mov
nop
popa
xchg
or
add
mov
xchg
paddsw
mov
gs
fidivr
movs
ret
cwde
paddd
stc
xor
test
cmp
cld
cmp
jge
into
ins
push
adc
cmp
std
jbe
test
push
jbe
dec
ins
or
bnd
lock
aaa
outs
loop
mov
inc
fcmovnb
pop
stos
xor
loopne
into
mov
xor
mov
iret
lahf
ret
test
lds
gs
in
cmc
lods
mov
out
sub
test
out
and
mov
mov
addr16
(bad)
sbb
fisttp
jne
inc
rol
(bad)
(bad)
(bad)
jae
jmp
cmp
xlat
mov
add
sbb
sti
xor
aam
mov
inc
loopne
pop
mov
movs
jbe
push
xchg
cmp
dec
adc
push
adc
fs
mov
or
mov
sub
add
add
scas
add
push
sub
xor
not
iret
mov
mov
xchg
inc
pop
xchg
daa
xchg
rol
cmp
add
imul
aaa
in
(bad)
xor
imul
mov
sub
or
cmp
shr
jl
push
mov
ins
mov
or
test
loope
push
outs
movs
cmps
leave
sbb
fsubr
nop
fwait
jle
fmulp
pop
(bad)
sbb
test
and
adc
push
mov
fst
icebp
mov
push
jge
cld
jo
inc
xchg
pop
fsubr
imul
mov
lods
xlat
adc
xor
and
or
sub
mov
mov
into
cmp
stos
cmp
or
add
push
shr
jne
pop
addr16
cmps
cmps
pop
ss
loopne
cmps
out
jno
bound
xor
dec
test
jmp
pop
sbb
cmp
scas
jge
dec
push
sbb
movs
popa
mov
pminub
ins
fldenv
pop
push
(bad)
out
jae
arpl
add
nop
enter
(bad)
not
ds
mov
test
iret
retf
sbb
jo
adc
aas
push
adc
mov
sub
test
cdq
outs
and
cli
adc
xchg
mov
sub
pop
cli
or
aas
aas
add
dec
dec
hlt
ins
loop
shl
sbb
adc
ins
dec
ret
xchg
retf
jbe
pushf
push
mov
(bad)
mov
mov
xchg
push
add
push
add
imul
cmp
mov
xor
std
int
in
sbb
lock
xlat
imul
inc
rcr
aam
dec
xchg
je
ds
test
repnz
mov
add
add
int
push
jns
in
mov
jb
xchg
loope
dec
sbb
(bad)
aad
adc
inc
fcmovnb
pop
clc
add
scas
fnsave
les
into
jne
(bad)
repz
test
mov
adc
push
mov
push
jg
(bad)
mov
add
push
mov
inc
inc
mov
push
je
retf
dec
sahf
dec
xor
std
mov
arpl
sub
pop
xchg
and
or
inc
cmp
sbb
(bad)
pop
and
cmp
pop
les
ret
shl
xlat
sub
dec
call
cld
mov
test
xchg
push
aaa
push
jmp
ins
jb
fdiv
dec
sbb
lods
xchg
sub
push
sbb
push
dec
xchg
test
or
inc
scas
loope
xchg
gs
jbe
adc
inc
xchg
mov
push
movs
leave
or
xchg
xor
xchg
leave
pextrw
jge
pop
or
cwde
shl
test
test
iret
or
push
sahf
retf
mov
jp
rol
mov
add
or
shl
out
xchg
retf
scas
adc
out
mov
or
pop
dec
or
sub
fistp
ficom
add
fwait
stc
pop
dec
lea
jae
mov
mov
inc
cmp
and
cmp
pop
aaa
popa
sbb
mov
dec
outs
outs
adc
cs
push
pop
dec
push
shr
(bad)
aas
xor
or
and
push
retf
cmc
jl
xchg
imul
shl
repnz
mov
adc
test
inc
adc
ins
jle
lods
cmc
test
pop
std
sub
cmp
ds
movs
mov
repz
xor
shl
(bad)
je
xchg
popa
jo
mov
icebp
adc
sub
jno
inc
ret
test
out
adc
call
stos
pop
popa
mov
mov
lea
cmp
call
lods
or
pop
sbb
jno
and
pop
mov
adc
test
leave
rcl
mov
out
jle
push
ins
(bad)
out
test
xor
jbe
jns
sub
aam
dec
ins
std
out
outs
ds
scas
mov
sbb
adc
stc
in
adc
sub
or
xchg
ret
scas
jno
call
sbb
lahf
mov
out
lock
xor
ins
dec
jle
jno
enter
fisub
mov
mov
mov
shl
and
jp
sub
jp
or
sub
aaa
gs
push
shr
mov
(bad)
mov
aam
mov
retf
xor
daa
and
sbb
pop
inc
sub
mov
pop
test
pop
pop
jecxz
xor
inc
inc
mov
mov
ret
cmp
mov
sbb
pop
cld
sub
rcr
xor
fldenv
or
fst
or
mov
lea
dec
jno
jl
lahf
add
repz
jg
imul
(bad)
xchg
mov
ficomp
dec
inc
pop
sub
jne
or
rol
mov
xor
xor
push
xchg
jbe
test
pop
loop
mov
pop
sahf
imul
repnz
push
cmp
mov
ror
mov
add
sahf
addr16
iret
lea
jg
jae
jb
mov
stc
cmp
call
jbe
add
xchg
dec
mov
jnp
and
clc
cwde
cmc
ss
jbe
lahf
sti
xchg
sbb
stos
sti
mov
mov
sub
aaa
mov
xor
cmp
repz
cs
test
mov
and
mov
je
sahf
(bad)
inc
cld
lds
dec
js
add
add
int3
loop
fld
cli
mov
iret
dec
gs
fcomp
dec
pop
mov
test
and
inc
stos
pop
xchg
ins
sub
jecxz
cld
or
jg
mov
call
dec
jmp
sbb
inc
loopne
iret
(bad)
jae
push
mov
xlat
idiv
sub
ror
xor
or
int3
jmp
sti
imul
imul
retf
inc
sub
pop
pop
ds
scas
call
retf
xchg
test
jecxz
push
lods
loope
pop
mov
jbe
jns
frstor
enter
add
ja
mov
push
push
cdq
(bad)
mov
cmp
ret
fwait
pop
or
jg
xchg
out
imul
mov
into
push
push
adc
push
inc
xor
adc
sbb
pop
xor
imul
in
mov
xor
mov
cdq
fld
or
sub
mov
push
fisttp
xor
add
dec
(bad)
arpl
retf
jae
repz
(bad)
mov
jns
std
adc
sub
pushf
cmp
sub
or
push
dec
pop
retf
aas
mov
sub
mov
jno
cmp
sub
dec
pop
jmp
sbb
push
mov
sbb
mov
adc
test
sbb
ja
push
or
adc
xor
retf
dec
adc
mov
ins
rcl
sbb
out
push
jmp
mov
jmp
stos
cmps
ss
and
xchg
loop
adc
ins
inc
xchg
xchg
(bad)
fdivr
cmp
pusha
(bad)
test
iret
call
stc
dec
jnp
and
inc
(bad)
rcr
push
pushf
xchg
dec
cs
clc
dec
es
adc
sbb
jge
mov
fild
jns
cmp
and
mov
js
int
pop
stc
lock
repz
mov
inc
mov
rcl
inc
push
jno
mov
iret
dec
test
(bad)
sub
adc
fst
mov
fnstsw
inc
adc
(bad)
repz
or
or
adc
mov
adc
push
pop
sbb
pusha
jo
jp
push
jmp
xor
push
pop
fdivr
pusha
push
inc
bound
in
dec
dec
push
cmp
pop
cdq
pop
mov
int3
imul
das
jmp
or
mov
xor
mov
das
lea
retf
nop
aad
add
dec
sbb
in
adc
jge
icebp
cmp
sub
jnp
ja
arpl
mov
rcr
mov
cmc
aas
mov
jl
call
mov
rcl
sbb
int3
fisubr
jne
or
jne
cmp
lds
fwait
mov
and
and
movs
bound
fst
add
in
out
jmp
sub
dec
addr16
mov
test
mov
xchg
mov
xchg
inc
mov
sbb
cli
aad
inc
std
mov
(bad)
adc
jb
dec
dec
sbb
repz
outs
stos
xchg
adc
fcom
test
jno
in
fwait
and
sbb
mov
jp
push
shl
int
jns
cwde
fist
xlat
cmp
ret
cmp
repz
gs
and
xchg
sub
pushf
adc
mov
push
ret
aad
add
pop
stos
lahf
test
mov
jnp
add
xchg
xchg
stos
inc
mov
leave
sahf
or
xor
xor
pop
dec
loopne
sub
(bad)
in
out
loop
push
or
js
mov
(bad)
mov
scas
call
gs
xor
or
and
rcr
sti
lods
pop
mov
(bad)
rcl
shl
adc
sub
aad
scas
xlat
rol
and
sbb
(bad)
fmul
mov
ins
cmc
pop
cmp
xor
jecxz
mov
inc
popf
xchg
(bad)
or
bound
lds
sub
add
(bad)
mov
cmp
push
and
leave
dec
ret
in
loop
cmp
cmova
scas
push
mov
mov
retf
leave
dec
call
cmp
push
mov
push
xor
call
(bad)
or
not
cmps
sbb
ret
in
movs
xchg
in
aaa
cmp
sahf
aaa
ja
ror
hlt
add
enter
push
aad
fild
sbb
cmp
lea
fisubr
sub
add
cmps
mov
fidiv
mov
fcom
push
nop
lea
jmp
scas
inc
aas
in
mov
or
mov
lahf
(bad)
and
fidivr
into
jle
(bad)
aam
ja
aaa
pusha
sbb
out
push
imul
push
sahf
std
sti
jl
cmp
sub
int3
out
pop
cwde
movs
or
or
adc
out
enter
sub
call
mov
clc
aam
(bad)
sub
loopne
iret
inc
pop
sbb
adc
adc
rcr
jo
dec
mov
jl
(bad)
mov
adc
scas
jnp
not
and
add
stos
cmp
cmc
mov
sub
and
cmc
add
mov
lock
inc
cmps
rcr
les
pushf
xlat
std
outs
es
mov
pop
mov
or
imul
sbb
or
pop
sbb
aaa
in
xor
or
xor
xor
shl
pop
test
outs
sub
rcl
out
jle
jmp
sbb
xor
cs
sbb
sub
mov
out
out
rcl
shl
bound
mov
push
inc
ror
fsub
outs
outs
icebp
ret
add
adc
xchg
cs
adc
(bad)
fnsave
add
jno
fimul
nop
add
or
imul
jle
cmp
out
mov
mov
ror
push
or
or
out
iret
pop
and
enter
(bad)
ds
jnp
push
cwde
and
mov
lahf
movs
aam
push
aas
(bad)
mov
pop
mov
push
cs
lock
outs
mov
mul
add
fucomip
jp
push
add
mov
dec
(bad)
dec
mov
mov
and
jae
js
lods
iret
fwait
or
adc
repnz
aas
xchg
xchg
lea
lock
cld
sub
mov
push
and
outs
and
pop
or
call
or
adc
jge
sub
cmp
cmp
cmps
scas
mov
sar
mov
in
or
add
xor
xor
inc
or
mov
xlat
out
stos
mov
pushf
xchg
jg
xor
add
ins
ja
pop
xor
daa
jecxz
sbb
xor
rcl
pop
jae
fild
sbb
imul
cs
cmps
call
cli
outs
out
rol
addr16
pop
xor
xor
sub
xchg
movs
inc
dec
push
sbb
out
xchg
test
mov
retf
xlat
ins
inc
js
cmp
jo
inc
clc
xor
xor
das
aam
mov
cmp
push
sbb
mov
or
cmp
inc
mov
shl
leave
pusha
in
cdq
hlt
sub
in
test
and
int
imul
mov
or
fcom
pop
cmp
cmp
lods
and
jbe
or
jne
mov
push
pop
(bad)
cmc
leave
pop
cmps
jmp
dec
add
adc
jl
adc
xchg
ins
imul
pop
inc
xchg
cmc
pop
lods
push
test
push
xor
xor
pushf
or
pop
cmp
sbb
push
rcl
rcr
push
mov
cdq
inc
in
int
push
cmp
mov
leave
dec
pop
stos
fimul
mov
test
and
mov
out
fistp
fwait
daa
outs
les
cmp
out
lea
ja
xchg
sub
push
rol
lock
mov
adc
push
adc
lods
pop
pusha
pushf
mov
push
into
pop
fist
cmps
jecxz
or
movs
int3
in
xlat
test
mov
dec
fld
mov
loop
pushf
sar
and
sub
sbb
mov
sub
dec
dec
dec
aam
push
lods
jae
pop
and
and
call
sbb
jb
inc
pop
jo
jmp
xchg
xchg
pop
dec
out
adc
lahf
loopne
inc
cli
imul
(bad)
pop
mov
pop
movs
push
in
cwde
out
sete
mov
cmc
mov
(bad)
xchg
cdq
fsubr
mov
xor
sti
nop
or
push
lahf
fild
xlat
jno
mov
xlat
fst
adc
jge
pusha
cli
push
cmps
loopne
(bad)
popa
adc
xchg
xchg
mov
jae
ins
add
fcomp
jl
pop
mov
add
or
imul
fwait
out
cs
sbb
or
(bad)
aas
sahf
hlt
ins
or
fdivr
(bad)
jbe
retf
push
rol
mov
test
xchg
pusha
mov
jl
movsx
mov
and
mov
aam
shl
in
mov
mov
jae
test
mov
imul
xchg
loope
push
sub
and
jecxz
test
dec
adc
(bad)
or
loop
aas
sbb
mov
loopne
xchg
push
mov
push
fdiv
nop
not
dec
test
add
xchg
in
jle
adc
cmp
jecxz
push
inc
fs
or
sub
push
pop
mov
inc
mov
sbb
out
es
mov
push
push
lahf
inc
jp
jle
jno
dec
xchg
mov
sti
push
inc
push
mov
push
mov
in
lock
or
xchg
nop
pop
adc
ins
(bad)
dec
rcr
sub
inc
call
stos
push
out
mov
mov
sbb
pop
loope
push
in
sub
daa
js
shl
xor
iret
pop
cmps
adc
jne
dec
add
jmp
dec
sbb
sub
call
jl
enter
jb
sub
fimul
pop
and
pop
js
xor
xchg
inc
push
cld
ror
mov
hlt
pop
sub
pop
jae
jmp
mov
mov
cli
(bad)
dec
sahf
cs
iret
xchg
or
repz
pusha
ins
cli
sub
add
sti
ss
sub
pop
push
push
xor
div
(bad)
out
sub
rcr
std
jge
sti
js
sub
jae
push
pop
cmps
aam
xor
mov
or
sbb
jmp
inc
fisub
cmps
dec
sar
(bad)
fldenv
dec
pop
jne
rcl
dec
mov
push
aad
jmp
xchg
xor
adc
pop
mov
pop
ss
ja
lock
jp
xchg
mov
push
xor
or
mov
push
cmp
cmc
lahf
(bad)
xlat
push
fisub
loopne
cmc
push
fimul
dec
adc
fnsave
shl
xchg
stos
loop
in
jmp
push
xor
outs
mov
imul
sub
pop
fisubr
add
cmps
loop
xchg
dec
and
imul
jae
or
inc
xor
ins
inc
out
sub
adc
pop
into
jmp
retf
mov
adc
xor
in
loope
cmp
lock
scas
int3
xor
ret
fidiv
stc
add
les
loopne
or
jbe
sub
es
stos
hlt
inc
stos
retf
inc
jno
xchg
pop
xchg
push
sub
in
out
inc
adc
sub
adc
push
mov
dec
sbb
out
cmps
repz
inc
or
jecxz
(bad)
xor
adc
cmp
xchg
mov
in
cld
mov
and
jmp
or
or
(bad)
sbb
arpl
xor
cmc
xchg
iret
mov
mov
dec
pop
int3
and
outs
retf
out
int3
lock
sahf
dec
jns
mov
xlat
popf
add
cmp
add
ins
aaa
xor
pop
jb
adc
je
mov
fld
mov
mov
ffreep
icebp
push
jns
stos
das
jb
pop
inc
popa
fcom
or
je
rcl
stos
dec
sub
cmp
shr
sub
sub
cmps
cmps
or
gs
pop
sti
xor
test
idiv
mov
popf
mov
push
mov
imul
mov
dec
sbb
ret
pop
test
mov
imul
das
pop
push
pop
pop
enter
scas
loop
mov
out
xchg
jbe
jmp
push
scas
je
not
mov
(bad)
mov
cmp
fwait
scas
push
pop
loope
inc
arpl
cdq
xchg
mov
call
cli
sahf
mov
jnp
lods
or
push
es
add
push
jmp
das
sbb
cmps
call
push
inc
fiadd
xchg
add
stos
dec
pop
mov
jle
pop
inc
push
(bad)
aas
cli
sbb
push
adc
push
stc
sub
inc
cmps
cmp
ret
daa
fisttp
dec
das
iret
mov
mov
lods
arpl
ret
xchg
pop
push
adc
cld
push
mov
hlt
mov
(bad)
mov
mov
and
enter
add
fdivr
xor
inc
mov
xchg
adc
int3
outs
xor
pop
add
retf
out
cmc
dec
les
inc
test
xor
inc
push
push
xchg
test
ret
js
xchg
pushf
and
stos
in
push
loope
cmp
xchg
sbb
aad
aad
xchg
adc
jl
aam
jae
ss
cmps
stos
lods
jmp
into
fst
mov
adc
fdecstp
jbe
jl
adc
add
push
mov
xchg
or
enter
sub
iret
lahf
pop
js
ss
scas
jmp
and
sbb
mov
dec
mov
sbb
aam
outs
pop
adc
sub
jno
mov
cmp
(bad)
stc
mov
dec
je
out
xor
idiv
fxch
jp
dec
scas
imul
pop
loop
xor
dec
mov
push
neg
inc
aad
cmps
jecxz
lock
sub
es
sub
push
js
inc
push
sbb
imul
jg
movs
shr
addr16
les
push
leave
das
add
push
or
and
data16
sbb
cvtdq2ps
xor
iret
pop
inc
out
addr16
cmps
lahf
cld
mov
out
xchg
mov
mov
pop
shl
test
push
mov
xor
cs
add
lock
add
or
pop
ja
add
jl
push
push
adc
jecxz
clc
sbb
loop
lock
pop
inc
xor
ins
mov
xor
pop
push
in
dec
mov
mov
sbb
fadd
dec
pop
push
call
fistp
test
test
call
leave
leave
jbe
int3
movs
add
int
dec
cmp
mov
jno
xchg
jl
sar
push
xchg
je
icebp
jo
sar
adc
mov
pushf
test
in
ins
ror
shl
or
inc
jo
test
bound
mov
(bad)
movs
xchg
add
mov
xor
pop
add
add
mov
mov
pop
mov
les
mov
bound
(bad)
pop
fild
pop
adc
stos
mov
and
scas
mov
jno
pop
jnp
ret
push
mov
daa
cwde
fild
test
push
cmp
push
in
pop
repz
fld
and
es
rcr
mov
mov
pop
mov
lds
rcl
js
into
inc
mov
jmp
retf
xchg
mov
sbb
push
(bad)
sub
and
popa
imul
into
leave
test
popf
inc
push
stc
adc
xor
dec
push
int
adc
pop
mov
fnstsw
jg
test
jecxz
dec
dec
inc
fst
or
sbb
sub
fs
push
shr
inc
jns
(bad)
adc
mov
pop
sbb
pop
add
sub
daa
dec
aaa
pop
adc
hlt
jb
or
imul
retf
xchg
push
sar
inc
sbb
jbe
ins
jl
test
(bad)
sti
aaa
inc
imul
loop
test
mov
mov
test
pop
xor
push
and
mov
xchg
xlat
jg
imul
ss
jae
fs
inc
(bad)
add
cmc
and
sbb
add
daa
ficomp
jle
sbb
cmps
ds
push
mov
add
sbb
ret
xchg
xor
neg
push
sbb
push
popa
nop
dec
iret
inc
psubq
cmps
out
xchg
pop
pop
mov
js
sub
mov
pop
cmps
inc
lea
test
in
test
mov
loope
adc
add
sub
fdiv
inc
fild
stos
jl
fwait
in
xor
out
pop
out
mov
mov
jmp
mov
cmp
xor
ins
cld
js
test
mov
push
mov
popf
and
fwait
jbe
test
mov
push
test
xchg
or
jmp
sti
and
push
ficom
pusha
shl
stos
cmp
bound
out
addr16
cwde
xchg
cmp
mov
out
int
cli
mov
int3
jnp
xchg
popa
jmp
dec
mov
ss
mov
cmp
(bad)
push
pushf
mov
neg
adc
pushf
out
push
pop
cwde
sbb
call
gs
pop
inc
fmul
xchg
cli
lods
mov
jmp
pop
adc
push
jmp
push
loopne
popa
loop
ja
sbb
xchg
stos
stos
retf
sbb
in
mov
lea
or
(bad)
cs
movs
popf
scas
stos
loopne
ds
je
loop
add
add
std
iret
shl
jb
adc
shl
push
or
inc
jle
mov
xor
fs
jl
and
pop
pop
mov
jnp
cmps
sub
mov
jo
ds
lea
adc
mov
je
iret
cmp
push
(bad)
iret
and
mov
or
stos
dec
fcomi
popf
jmp
shl
mov
xor
(bad)
popa
mov
xor
loope
jg
mov
add
fimul
jnp
hlt
push
fcmovb
mov
rol
pusha
int
xchg
jno
popa
cmc
(bad)
(bad)
mov
pop
pop
lea
ret
xor
and
sahf
das
xor
mov
jne
mov
bound
cwde
mov
fistp
or
mov
mov
sbb
adc
xchg
imul
fdivp
xchg
mov
in
cmp
xor
cmps
mov
mov
xor
mov
ins
mov
sub
or
gs
rcr
addr16
cs
add
and
mov
mov
out
cld
adc
sbb
dec
push
repnz
dec
sbb
pushf
outs
stc
sbb
je
cmp
jmp
dec
xor
dec
retf
rol
js
mov
push
cld
outs
or
les
push
fcmovne
inc
sub
dec
cwde
mov
cmps
(bad)
test
arpl
ss
mov
repnz
dec
popf
ret
jmp
sahf
int
or
and
(bad)
jmp
call
xor
frstor
(bad)
sub
jb
sti
push
xchg
lock
push
and
sub
and
pop
lea
add
jle
xchg
inc
aaa
dec
shl
mov
and
dec
in
movs
sub
scas
cld
ror
or
cmp
inc
mov
mov
lahf
or
sbb
xchg
pop
lea
lods
lods
cmp
addr16
ficomp
scas
add
sub
pop
popf
add
jns
(bad)
and
xchg
test
movs
scas
sbb
(bad)
ror
cmp
inc
ror
xor
(bad)
sub
add
pushf
add
fistp
push
dec
aam
mov
add
fild
sub
popf
jb
and
call
scas
sbb
in
cmc
mov
mov
adc
mov
mov
jns
cs
mov
das
lods
mov
in
arpl
or
mov
in
or
add
pusha
fidivr
add
adc
retf
or
mov
and
and
push
test
das
outs
into
bswap
dec
sub
aad
test
adc
cmp
mov
repnz
xchg
(bad)
adc
push
add
aaa
addr16
or
and
xor
sbb
movs
lea
sbb
nop
sub
int
xor
sub
xlat
add
cs
xchg
int
call
and
xchg
ds
call
mov
faddp
mov
add
mov
arpl
add
push
cmp
retf
push
mov
ins
xchg
test
je
xor
aad
fdivr
xchg
mov
lods
pop
sbb
pop
or
sbb
mov
dec
xchg
sub
das
mov
mov
out
jnp
mov
pop
jmp
push
jne
loope
sub
aas
nop
jo
and
das
arpl
push
inc
mov
sti
jne
movs
adc
xchg
push
popf
add
xchg
xor
shl
out
in
nop
out
pop
push
mov
js
retf
add
mov
or
daa
or
jbe
lods
push
lock
imul
cmp
adc
pop
and
or
fs
jbe
fcomp
mov
mov
(bad)
cld
aas
imul
mov
pop
ds
stc
ins
loope
sub
sub
(bad)
nop
add
addr16
adc
mov
or
inc
push
and
and
xchg
dec
loop
out
add
add
xor
xor
mov
in
mov
cmp
push
sbb
mov
mov
ins
pop
xchg
xor
xchg
xor
inc
fsub
aad
jae
cmps
mov
out
out
cld
push
xchg
mov
div
adc
(bad)
aas
add
fs
jne
into
xchg
inc
iret
(bad)
stc
adc
repnz
int
leave
cmps
stos
mov
(bad)
sub
dec
add
add
mov
sub
xchg
or
mov
inc
sbb
mov
imul
mov
cmp
int
xor
(bad)
dec
ins
(bad)
retf
loop
ss
mov
pop
inc
xchg
out
pop
fidiv
imul
ja
sub
push
call
mov
out
test
jb
push
ss
shl
les
push
or
stos
mov
mov
rcl
jns
loope
xchg
xlat
js
xor
sti
iret
sub
mov
out
(bad)
ficomp
data16
cdq
jge
(bad)
lahf
arpl
push
pop
std
in
sbb
repz
iret
cmps
fsubr
fisttp
mov
les
aad
adc
sbb
inc
or
(bad)
repnz
clc
fcom
fst
push
(bad)
mov
out
or
into
add
mov
jp
push
inc
push
test
cmp
cmp
mov
add
add
popf
clc
sbb
push
icebp
out
aam
(bad)
dec
rcl
jne
pop
scas
xchg
inc
fsub
push
mov
push
pusha
test
or
shl
add
ins
(bad)
dec
ja
ins
addr16
sub
outs
mov
rcr
out
pop
popa
inc
push
cvtps2pd
dec
xlat
adc
nop
adc
ins
sub
in
adc
fisubr
sti
xor
mov
mov
sbb
add
nop
int
sti
dec
retf
and
es
pop
mov
push
jnp
repz
movs
mov
lea
xor
pop
push
popa
lds
mov
mov
icebp
add
hlt
sar
bound
jl
cmp
ds
jnp
les
mov
dec
leave
jnp
or
out
int
add
push
and
sahf
fidiv
mov
xor
icebp
cdq
cmp
jle
cmc
push
xchg
movs
out
jns
lds
pop
fnsave
jbe
and
xor
mov
jmp
dec
sub
loope
jle
ja
add
add
sbb
das
xor
xor
aad
neg
loope
sub
dec
or
int
ja
mov
xchg
mov
cwde
dec
push
xchg
xlat
(bad)
dec
jbe
pushf
xchg
add
jecxz
inc
int3
cmp
or
push
jns
pop
arpl
pusha
test
jmp
je
mov
xchg
fist
dec
ret
jo
das
cmp
add
div
adc
hlt
push
ret
in
stos
imul
hlt
lods
lahf
jecxz
lock
inc
cmp
dec
xor
mov
ss
xlat
aam
cli
xchg
iret
mov
dec
mov
dec
mov
inc
mov
mov
mov
mov
shr
add
dec
sar
ins
ins
or
push
xor
xlat
or
mov
dec
adc
mov
mov
sbb
and
push
mov
shl
xor
xchg
dec
push
js
shl
mov
and
test
inc
inc
mov
sbb
pop
pusha
(bad)
jmp
sbb
inc
push
push
xchg
loop
outs
cmp
jb
inc
int
add
cwde
repz
xchg
cli
std
mov
push
add
mov
out
dec
pop
jnp
clc
mov
jge
push
fdiv
cmps
call
lds
pop
or
aam
popf
mov
push
push
cli
sar
scas
sbb
jnp
mov
mov
leave
iret
jne
dec
push
add
adc
ds
call
and
push
test
push
jmp
fidivr
dec
pop
sub
dec
iret
mov
or
dec
imul
jno
daa
pop
jmp
add
lahf
cmp
sub
cmp
neg
dec
and
xchg
add
mov
cmps
jb
mov
ret
and
jae
cmp
cmp
out
dec
inc
sub
idiv
dec
mov
enter
shl
push
pop
or
mov
or
sbb
dec
add
sbb
dec
push
jns
ds
jmp
or
jb
es
cmp
movs
inc
es
xchg
fnstcw
shr
mov
xor
fstp
call
xchg
out
jmp
int3
sbb
ja
ret
call
bound
pop
sar
rcr
mov
loope
mov
push
sbb
movs
jmp
daa
pop
cmp
mov
ins
call
and
pop
fimul
mov
std
mov
mov
not
push
xchg
push
sub
outs
fisub
sub
fwait
xchg
xchg
call
inc
adc
jp
ds
cmp
pop
mov
movs
jb
add
jnp
sub
sar
(bad)
xor
mov
std
mov
push
cdq
push
int
(bad)
push
imul
ret
jns
cmps
push
jnp
out
pop
or
mov
xlat
dec
(bad)
aad
mov
dec
jmp
push
pushf
push
and
adc
jno
ret
pop
je
sub
xchg
imul
fist
pop
mov
and
sub
add
lds
rcl
or
gs
cmp
test
test
add
pop
imul
jmp
stos
mov
enter
xchg
or
dec
dec
imul
mov
ret
lock
push
rcl
or
fiadd
jns
pop
in
jae
push
pop
iret
dec
sub
inc
ja
jmp
movs
add
inc
movs
ja
pop
and
cld
sbb
mov
daa
les
push
mov
mov
pop
aaa
and
push
mov
repnz
dec
loope
jbe
xchg
mov
clc
mov
and
pushf
mov
clc
or
adc
(bad)
sub
jnp
jp
sub
add
outs
sbb
outs
push
dec
sub
and
aam
mov
aam
sub
mov
pop
xchg
sub
sbb
or
or
stos
push
add
(bad)
jmp
sub
mov
sbb
and
cmp
cwde
dec
test
push
pop
enter
xchg
loop
push
and
(bad)
stc
mov
int
shl
adc
jnp
adc
mov
dec
or
xchg
jno
xlat
jmp
sub
xor
xchg
pop
dec
addr16
js
inc
mov
xlat
lods
mov
push
mov
and
inc
mov
add
in
adc
adc
mov
and
loope
cs
ins
movs
test
mov
pusha
pop
sbb
idiv
sti
arpl
cmc
xor
mov
jb
and
sbb
inc
pop
hlt
mov
push
in
out
in
cmc
xchg
xchg
adc
jae
fmul
xchg
or
push
xor
pop
daa
ja
inc
push
int3
push
dec
push
mov
lods
add
das
popa
mov
mov
clc
dec
push
in
(bad)
shr
mov
imul
stos
push
mov
jns
cli
jle
mov
loope
loop
stc
inc
pop
mov
push
aas
jno
mov
inc
lods
xor
stos
popa
adc
enter
sar
add
xor
inc
fdivr
sbb
sbb
aad
push
rcr
xor
jge
inc
mov
jle
retf
or
cli
inc
test
adc
xor
loopne
out
int3
jmp
and
movs
mov
mov
or
test
mov
scas
sbb
inc
das
push
xchg
pop
ja
jl
loop
je
das
jl
ss
mov
adc
push
pop
pop
out
push
pop
in
and
fldcw
lea
inc
pop
push
and
push
into
mov
mov
sar
cmp
(bad)
enter
pop
out
dec
fmul
push
add
icebp
mov
in
iret
add
xchg
shl
sub
sub
retf
and
jne
lea
or
jg
enter
das
test
test
scas
lods
aad
push
or
mov
push
jle
mov
and
push
xor
mov
int3
xchg
nop
mov
addr16
sar
inc
scas
pop
push
mov
fcom
push
data16
pop
(bad)
xlat
inc
mov
pop
xchg
test
jmp
push
cmp
push
push
rcr
data16
mov
xor
xlat
push
test
mov
sub
test
xor
(bad)
fimul
pop
pop
mov
hlt
loope
and
mov
xor
push
leave
xor
into
gs
inc
jmp
in
or
pop
sti
cmps
mov
nop
fmul
repnz
mov
dec
push
sub
cmp
xor
xchg
mov
bound
add
ins
inc
pop
jae
mov
push
add
mov
sbb
movs
xor
adc
jb
sbb
or
arpl
sub
cmps
sbb
mov
dec
iret
xchg
sub
loope
mov
sub
sub
in
les
sti
pop
movs
aas
sub
(bad)
mov
and
lods
into
out
scas
(bad)
or
sub
es
outs
cmp
movs
sub
jb
and
cwde
cmp
stc
iret
sti
mov
sti
add
cmp
adc
adc
mov
pop
add
in
push
mov
xor
jae
inc
int
rol
lods
pop
xor
(bad)
mov
xchg
and
popa
push
rcr
inc
cli
(bad)
or
loop
sub
iret
mov
into
inc
and
(bad)
imul
fwait
xchg
jnp
xor
fcom
mov
cmp
sub
scas
xor
mov
into
stc
cmp
lock
push
jle
je
cmpxchg
inc
movs
jg
sub
ja
nop
mov
dec
iret
std
cli
popa
mov
add
inc
aad
jle
sbb
add
ficom
shl
ds
mov
shr
add
neg
mov
loop
push
dec
addr16
xchg
sbb
jbe
lods
and
enter
dec
sbb
imul
sbb
call
or
xor
(bad)
cli
push
sti
nop
sub
aam
inc
je
push
stos
and
dec
lods
daa
adc
rol
pop
fisub
repnz
sub
je
mov
mov
mov
sub
outs
xchg
loope
cmp
jbe
inc
lock
or
repz
jl
pop
pop
cld
or
test
dec
sub
sahf
dec
xchg
xchg
mov
xchg
ss
(bad)
cmps
add
aad
fimul
in
cmp
sub
adc
js
sbb
int
add
cmp
or
aaa
xchg
mov
xchg
push
inc
js
add
ss
inc
xor
mov
or
test
stc
test
dec
sbb
pop
push
and
add
push
push
mov
test
leave
loope
hlt
stos
in
popf
fisubr
fmul
cli
and
out
xlat
js
repnz
sti
sub
std
xchg
adc
outs
cmps
sub
xor
xchg
xchg
shr
jo
xor
(bad)
mov
mov
stc
loop
inc
popa
or
es
je
cmps
out
sub
(bad)
outs
ja
int
or
fnstsw
scas
addr16
and
mov
clc
and
int
dec
clc
push
xor
adc
inc
mov
shr
or
sbb
pop
fs
in
jns
and
dec
sub
mov
dec
dec
cwde
fsub
jno
in
sti
add
cmp
icebp
mov
cmp
js
ja
dec
push
imul
aam
test
sub
aad
mov
sbb
gs
imul
mov
pop
fbld
pop
push
fs
xchg
(bad)
mov
and
xor
shl
paddb
int
pop
call
inc
inc
ret
lea
cmps
cld
cmp
jae
pop
inc
xchg
stc
lock
data16
aad
fld
jnp
sbb
mov
cmp
cwde
pop
lock
add
mov
mov
retf
cmc
inc
aad
push
(bad)
lahf
and
fadd
ds
sub
push
sti
clc
in
fstp
dec
jge
mov
(bad)
mov
mov
jmp
sbb
ds
push
fidiv
sub
stos
inc
outs
sbb
ss
aad
cwde
call
push
mov
sub
cs
repnz
mov
fmulp
mov
sub
das
sub
imul
cmp
sbb
push
jmp
(bad)
or
sub
(bad)
es
retf
adc
retf
inc
inc
std
or
lods
cmp
outs
jbe
mov
mov
jp
(bad)
cmps
lods
xchg
mov
cmp
cwde
cmp
sub
ret
xor
add
outs
adc
inc
js
xchg
(bad)
cmp
push
adc
shr
ja
mov
sbb
or
adc
cmps
adc
mov
pushf
pop
mov
aas
das
loope
mov
push
inc
stc
and
mov
out
rcl
jbe
adc
stos
sar
xchg
pop
xor
retf
lds
out
jl
sbb
and
xchg
mov
mov
aas
retf
xlat
imul
dec
cli
adc
(bad)
icebp
cld
adc
jne
inc
jp
cmp
(bad)
pop
mov
(bad)
push
jo
int3
pop
es
(bad)
sbb
imul
and
xor
pop
inc
ins
push
jns
push
sbb
or
cli
in
loope
mov
scas
xchg
xchg
mov
push
and
fldcw
sbb
aad
adc
sub
clc
cs
lea
(bad)
mov
push
mov
pop
xchg
mov
retf
mov
mov
out
mov
push
aaa
push
call
(bad)
and
int3
xor
sbb
ret
test
dec
sahf
daa
jmp
mov
jnp
cmc
cmp
xor
jbe
add
push
and
out
in
int
(bad)
cli
cli
or
(bad)
cmp
lds
sbb
jb
add
test
cli
mov
dec
pop
mov
cmp
adc
jge
push
loop
stos
or
sub
jle
push
mov
int3
xor
stos
or
test
aad
repnz
cmp
movs
sahf
add
inc
shr
cwde
mov
mov
or
sbb
out
jbe
cdq
or
in
or
andps
cwde
sub
mov
push
fs
inc
sbb
(bad)
(bad)
in
mov
aam
ins
ins
push
sub
pop
fild
xchg
cmp
repnz
in
scas
mov
icebp
imul
out
in
stos
add
cmp
xchg
mov
adc
imul
repz
into
mov
and
enter
add
push
fdiv
sub
sub
push
adc
and
cmp
mov
fcomp
cmp
jo
mov
push
psubq
aaa
ja
jp
add
js
retf
inc
(bad)
mov
or
inc
mul
jns
or
xchg
movs
lods
mov
ret
xchg
xor
test
nop
std
xchg
ins
bound
pop
fild
(bad)
inc
sbb
sar
cld
xchg
mov
or
in
mov
arpl
cmp
inc
fisttp
jmp
lock
mov
pop
xchg
pop
sub
in
fist
sub
pushf
sbb
iret
retf
sbb
mov
or
or
hlt
in
lds
dec
pop
xchg
xor
jbe
ins
mov
push
mov
push
sub
jns
pop
pop
mov
pop
add
sbb
and
inc
push
ficom
(bad)
dec
adc
xchg
jle
inc
inc
or
fstp
(bad)
(bad)
hlt
fadd
push
popa
or
ss
xchg
fidiv
(bad)
push
shl
neg
adc
push
add
inc
jae
sar
fdivr
rcl
out
sbb
cs
adc
loop
shl
pop
push
loope
xchg
retf
in
fcomp
sub
cmp
sub
loopne
sub
sub
lea
fsub
jb
pop
sub
jbe
or
arpl
in
push
pop
mov
(bad)
out
retf
enter
cmps
push
jmp
repz
or
pop
cmp
xor
inc
rcl
fs
(bad)
mov
dec
and
mov
ins
aas
mov
sub
sbb
adc
or
pushf
loope
cmp
sub
aad
adc
je
pop
adc
xchg
jne
pop
xchg
jmp
inc
div
int
fsub
xchg
(bad)
adc
dec
sahf
les
dec
hlt
call
xor
inc
xor
mov
mov
arpl
mov
imul
add
adc
pop
push
sbb
jle
sahf
loopne
jo
push
add
sbb
push
fwait
push
aas
in
sbb
ds
sub
enter
sub
stc
cmc
ret
push
and
adc
out
(bad)
retf
ja
xor
or
mov
loopne
adc
loop
sbb
dec
add
sub
xchg
sti
leave
inc
outs
not
or
mov
mov
inc
mov
sbb
int3
inc
mov
lds
dec
retf
cmp
sub
into
jns
adc
aas
imul
leave
mov
xchg
imul
int
push
jo
out
inc
dec
cmp
inc
movs
div
pop
add
cmp
add
jmp
lds
jmp
jae
adc
imul
xchg
clc
sbb
add
xchg
push
pop
adc
pop
mov
adc
jmp
mov
xchg
mov
jne
repz
aaa
pop
es
test
test
sub
adc
pop
mov
jbe
enter
cmp
adc
mov
jmp
mov
fldenv
sub
sbb
mov
sub
sbb
lods
cmp
out
les
xchg
ds
mov
push
mov
std
fs
cmp
popa
xchg
or
sub
jecxz
mov
cmp
fmul
and
sub
sbb
and
les
ds
pop
aam
push
mov
xor
out
inc
sub
lock
jmp
pop
and
cmp
push
sbb
(bad)
cmp
sbb
call
pop
jns
mov
push
push
xchg
push
mov
adc
rol
movs
push
xchg
and
xchg
mov
nop
pop
jmp
inc
sar
add
push
or
imul
push
hlt
sar
mov
xor
jne
mov
mov
or
cmp
or
stos
ficomp
into
shl
ror
lods
push
loopne
cmp
push
out
shl
pop
mov
xchg
mov
(bad)
adc
dec
retf
(bad)
dec
xchg
push
cmp
push
test
cmps
push
test
mov
out
mov
push
mov
pop
jbe
jp
and
push
jo
xchg
push
lahf
mov
xchg
mov
pop
sub
add
es
sar
inc
mov
mov
std
pushf
push
inc
cwde
nop
or
adc
faddp
outs
loop
jb
pop
cld
es
mov
push
ret
inc
and
sub
mov
mov
test
jp
aam
iret
je
das
adc
movs
cmp
sbb
mov
mov
xlat
mov
lock
mov
push
mov
or
sub
xor
sub
jge
mov
in
push
or
test
push
test
and
repnz
fist
dec
aad
sti
lds
nop
rcr
and
sub
pop
inc
mov
popa
mov
mov
fwait
pop
jmp
fadd
adc
jne
loope
fs
in
lfs
sbb
inc
push
mov
pop
cdq
inc
fidivr
lock
dec
xor
pop
pop
jp
(bad)
daa
jbe
test
push
out
add
cmp
jmp
xchg
add
cs
sbb
mov
xchg
mov
add
sahf
adc
jb
popa
ret
gs
cmp
inc
jmp
and
and
mov
mov
or
push
cmp
js
in
aas
mov
outs
call
push
cwde
lods
ins
jg
pop
cmp
pushf
adc
jbe
in
inc
jmp
adc
popf
push
push
mov
mov
lds
(bad)
add
inc
jne
(bad)
push
pop
loopne
and
popa
xchg
inc
imul
mov
cmp
inc
xchg
jle
cmp
mov
call
push
mov
(bad)
bound
cwde
outs
jp
or
mov
ror
ret
call
add
int
inc
ds
call
ret
out
ss
push
enter
clc
push
mov
les
out
scas
jl
mov
je
pop
push
shr
push
aad
push
dec
and
repnz
sub
jne
shl
loop
pop
lahf
jne
aad
sub
push
dec
aam
adc
into
scas
mov
in
fisttp
std
sub
scas
in
das
fld
movs
das
mov
out
pop
aam
inc
aaa
or
and
jl
push
fistp
adc
imul
adc
movs
das
les
xor
mov
add
push
jle
pushf
das
dec
pop
ret
sbb
jmp
push
pushf
push
dec
aam
and
xchg
jp
jmp
xchg
cmc
div
stc
loope
and
fisubr
adc
pusha
(bad)
call
mov
outs
popa
add
jp
pop
inc
enter
jb
pop
arpl
mov
xchg
sbb
jmp
fild
xchg
jmp
jae
inc
inc
loop
and
add
cld
test
call
add
push
test
and
push
xor
push
mov
(bad)
xor
ja
in
mov
inc
cmc
dec
cmp
inc
xchg
mov
neg
les
inc
xor
ror
in
and
test
(bad)
add
cmp
pop
loop
ret
mov
and
add
dec
and
shr
dec
sbb
pop
jno
scas
pusha
(bad)
cmp
fldenv
mov
fld
mov
sbb
movs
dec
outs
mov
dec
xor
sbb
test
fild
pop
icebp
sub
cdq
push
aas
push
sti
jge
xor
in
scas
daa
loope
fild
pop
pop
adc
mov
arpl
sbb
sub
inc
and
add
add
sub
inc
fild
push
mov
add
mov
mov
xlat
dec
lods
es
iret
pop
call
dec
daa
add
cmp
inc
push
scas
mov
cs
adc
fisub
adc
mov
in
lods
cmp
out
jmp
aaa
xchg
inc
mov
add
adc
rcl
ja
ret
push
icebp
adc
inc
out
in
ins
shl
test
aaa
push
dec
jle
and
shl
or
or
imul
mov
push
cmps
(bad)
xor
cld
clc
inc
mov
mov
mov
jl
in
repnz
repz
and
daa
ins
mov
cmp
sub
sar
inc
mov
cmp
bound
jmp
or
ins
call
pop
mov
jbe
sbb
cmp
iret
ins
push
jg
shl
aam
add
mov
jmp
jmp
mov
mov
push
aas
pop
bound
sbb
fdivr
mov
popf
and
int3
cmp
bound
inc
cmp
out
rcr
rcr
inc
(bad)
cmps
fcomp
daa
or
sub
sbb
arpl
jmp
jecxz
jmp
add
jecxz
adc
fs
fwait
enter
dec
mul
mov
das
sbb
dec
xor
aaa
mov
cwde
(bad)
mov
retf
xchg
out
xor
ins
das
pushf
cmp
sbb
rcl
movs
mov
mov
xlat
addr16
inc
rcr
inc
fidiv
push
fwait
jp
fisub
jg
repnz
mov
inc
repz
stc
jle
imul
ja
dec
xlat
adc
mov
les
lds
frstor
repnz
add
sub
xor
jmp
push
and
icebp
dec
and
and
out
xchg
inc
and
jmp
push
das
fldenv
loop
mov
je
inc
ins
sub
and
test
outs
mov
mov
loope
jmp
add
jns
js
inc
scas
inc
add
out
mov
ss
aas
adc
sbb
loop
movs
jecxz
and
inc
test
and
aas
adc
scas
xchg
lds
add
fst
js
rol
xchg
loop
mov
xchg
popa
repz
and
or
cld
cmps
shl
xchg
pushf
imul
fistp
inc
or
mov
add
pop
call
int
sbb
push
jle
out
mov
and
cmps
or
adc
ret
mov
rol
push
xor
pop
movs
loope
xchg
push
push
call
(bad)
cmp
push
or
(bad)
jl
ds
push
xchg
dec
addr16
ds
out
cmp
call
jmp
nop
jno
mov
mov
inc
ficomp
push
sti
(bad)
cmps
jmp
je
adc
shl
adc
cmp
lock
retf
data16
or
inc
or
sbb
sub
or
push
neg
in
pushf
pop
daa
aad
mov
push
test
dec
lods
mov
pop
ret
sub
sti
pusha
jl
or
es
add
sbb
sbb
ret
xor
je
fisub
jecxz
pop
js
scas
bound
cmp
adc
aaa
lock
pushf
push
pop
pop
sub
inc
gs
aas
mov
cmp
mov
mov
mov
fiadd
cmp
out
sub
mov
int
in
add
mov
nop
add
sub
(bad)
ins
bound
xchg
jae
(bad)
fdiv
xchg
shl
shl
lods
cmc
pop
icebp
sbb
lea
inc
adc
mov
jnp
cmp
pushf
inc
(bad)
fmul
jbe
mov
pop
test
inc
iret
fcmovnu
retf
jbe
mov
fnstcw
push
push
inc
sub
and
pop
nop
or
ja
or
bound
shl
aaa
loopne
dec
pop
pop
loope
into
xchg
enter
outs
mov
stos
loop
cs
repnz
mov
or
movs
inc
scas
sbb
xor
repz
pop
in
jno
fild
call
repnz
test
xchg
mov
dec
retf
jge
inc
popf
or
push
mov
loop
pusha
test
lahf
add
xor
stos
aam
mov
into
fwait
cmps
pop
repnz
push
inc
mov
fcmovnbe
(bad)
pop
xchg
in
add
popf
cwde
call
and
test
add
xchg
mov
cmp
xchg
clc
xor
fs
inc
jae
pop
test
mov
imul
movs
(bad)
int3
jg
push
inc
mov
push
call
pop
lods
int3
popf
je
das
scas
dec
clc
iret
pop
out
dec
inc
gs
ret
inc
jle
xchg
pop
repnz
nop
ret
sbb
into
adc
mov
(bad)
push
aad
dec
inc
mov
adc
sbb
xor
sub
push
pop
dec
es
mov
xchg
or
fild
sbb
sub
nop
(bad)
in
or
mov
je
cwde
rcl
and
out
cmps
jns
sbb
sub
cmc
xor
ror
mov
or
pop
inc
pop
or
adc
push
outs
inc
into
fsub
adc
mov
push
inc
std
clc
cs
and
arpl
lds
xchg
jecxz
mov
fmul
stos
mov
push
inc
(bad)
dec
adc
pop
ret
fmul
out
loop
push
cmp
out
das
mov
mov
jnp
aaa
xchg
shl
or
inc
or
mov
pop
aas
add
add
xchg
lea
or
movs
add
test
cwde
mov
mov
nop
sti
pop
mov
push
retf
xchg
pop
sub
pop
add
xor
add
aam
aas
xchg
adc
shl
mov
popf
and
mov
mov
mov
lock
mov
icebp
cmp
in
fsub
ret
popa
pop
scas
jle
js
rol
jns
cmp
icebp
leave
out
xor
xchg
ror
rcr
sti
cdq
adc
pop
push
cmc
neg
ret
or
and
test
in
pop
sahf
test
clc
test
scas
cmps
or
fwait
xor
lods
pop
jbe
movlps
cld
in
push
mov
movs
xor
loop
in
mov
push
les
das
jmp
adc
popf
xchg
popf
adc
ss
sub
scas
pop
push
sbb
inc
enter
or
jns
call
xchg
xchg
movs
xchg
mov
adc
rol
adc
jecxz
shl
fs
lahf
push
inc
test
(bad)
int
in
cmps
fmul
pushf
icebp
sbb
cmc
clc
mov
jl
jnp
std
adc
out
(bad)
sti
sub
ror
adc
dec
ror
imul
jae
loopne
inc
scas
(bad)
pushf
push
scas
out
xchg
nop
outs
jecxz
dec
mov
(bad)
lea
out
and
or
js
lock
pop
mov
cmp
pushf
sbb
sub
ret
arpl
sub
enter
mov
jl
mov
rcr
bound
daa
cdq
cmps
cmps
mov
push
movs
daa
retf
inc
mov
in
out
out
xlat
lahf
xchg
push
aad
out
fimul
push
fdivr
cvttps2pi
pop
es
fcom
jg
inc
popa
js
jno
adc
shl
jle
push
dec
sub
gs
dec
pop
bnd
mov
test
adc
rcl
out
loop
out
sbb
mov
pushf
idiv
inc
jno
stos
popf
push
addr16
je
sahf
ss
push
pop
lods
out
loope
inc
test
xchg
(bad)
(bad)
cmp
(bad)
cmp
repnz
pop
cld
icebp
xchg
jns
out
add
and
mov
idiv
leave
cmps
lea
nop
enter
scas
out
addr16
(bad)
jo
mov
cmps
imul
repnz
daa
test
jle
and
mov
sub
cmp
je
mov
sbb
test
pop
jne
add
mov
jae
mov
push
sbb
mov
iret
(bad)
loope
or
into
mov
cmps
leave
add
jb
jge
pop
add
cli
sysret
or
xchg
jno
lahf
cmp
xlat
sub
outs
mov
dec
mov
test
cwde
xchg
in
dec
(bad)
call
sbb
xchg
out
push
mul
ja
cmp
push
enter
push
icebp
pop
mov
adc
jno
mov
mov
dec
lods
pop
xchg
mov
push
fdiv
mov
in
inc
pop
jmp
leave
mov
lea
fdivr
dec
push
mov
cmp
stos
call
jmp
inc
into
xor
push
mov
mov
dec
(bad)
out
mov
int3
sub
cmp
jge
mov
ficomp
ror
jnp
push
mov
(bad)
cmp
push
iret
mov
adc
test
xor
mov
push
lods
fild
xor
bound
sti
mov
std
xor
(bad)
xor
dec
ins
push
inc
pop
fild
or
inc
ss
sub
mov
pop
and
xor
sub
adc
push
(bad)
jmp
int3
rol
aad
ret
ret
xchg
ss
pop
sbb
cmc
into
and
adc
enter
and
in
adc
sbb
into
mov
(bad)
adc
xchg
retf
jmp
sub
(bad)
pop
imul
(bad)
imul
(bad)
fdivr
and
popa
into
jmp
jp
and
and
fidivr
inc
mov
leave
popf
add
imul
push
call
je
retf
cmp
or
mov
jge
out
stc
push
jo
rcr
mov
les
xchg
test
cmp
pop
scas
push
cwde
stos
lods
push
in
add
test
dec
and
test
(bad)
shl
jae
cs
pop
mov
daa
(bad)
mov
mov
call
(bad)
iret
clc
out
inc
loop
sbb
int3
sti
sti
pop
nop
mov
pop
cdq
cld
push
dec
jle
(bad)
cmp
out
sub
fild
std
xchg
jecxz
in
(bad)
daa
fild
pop
loop
sub
aam
mov
cmp
inc
pusha
clc
mov
out
mov
dec
mov
jmp
cmc
shl
xchg
lock
paddsb
test
add
pop
jne
pop
cmp
iret
hlt
dec
loop
retf
cwde
mov
add
aad
sti
arpl
xor
cs
(bad)
xor
sbb
add
jg
fs
pop
sub
push
cmc
das
cdq
mov
pop
adc
jb
cmp
(bad)
call
mov
cmp
mov
fadd
pop
fstp
cdq
(bad)
ins
rcr
mov
and
aaa
fisttp
sub
push
fistp
dec
pop
fs
xchg
fst
repz
pop
adc
mov
xor
pushf
lods
or
xchg
push
test
push
sub
dec
in
adc
cmp
aaa
cmps
xor
and
mov
dec
push
cmp
xor
in
cmp
jno
xchg
xor
pushf
inc
ins
ret
jbe
call
sub
or
jb
test
push
cmp
pop
pop
add
das
push
and
imul
enter
mov
push
push
sbb
popf
cmp
sbb
inc
mov
mov
iret
push
pushf
mov
mov
sbb
ins
jae
daa
out
xchg
xchg
or
call
leave
sbb
aas
add
cmp
and
add
adc
jg
xchg
repnz
test
out
add
mov
mov
popf
clc
ins
jb
adc
js
push
out
sbb
sbb
push
iret
aam
and
iret
aaa
xor
xor
aad
fild
lds
mov
bound
imul
test
xchg
dec
fwait
ja
leave
das
out
jle
mov
or
das
and
pop
fwait
dec
retf
and
movs
rcr
pop
lds
and
jnp
pushf
jne
jle
jle
sub
loopne
call
pop
jecxz
or
fsubr
dec
movs
push
cli
dec
jo
xor
push
test
popa
or
mov
push
cmp
xchg
adc
ret
pop
loopne
fistp
call
adc
mov
pop
sub
xor
in
ficomp
mov
imul
loop
aad
and
les
pusha
dec
and
iret
add
es
pop
mov
mov
in
cmp
lock
rol
xor
out
xchg
inc
add
je
push
push
into
cmp
lahf
int3
add
xor
sub
out
movs
or
imul
jl
int3
push
pushf
mov
ja
push
add
imul
das
inc
xchg
and
mov
nop
cdq
cmp
mov
push
inc
jns
sahf
pop
xchg
test
sar
jg
pop
stc
jmp
aam
mov
xchg
pop
mov
retf
jb
sahf
pop
in
inc
adc
imul
push
retfw
cmps
adc
and
cmp
sub
sbb
call
leave
xor
adc
aas
pop
int
push
jmp
xchg
cmp
rsqrtps
mov
xor
push
cwde
inc
xor
or
pop
dec
(bad)
stc
add
lods
jmp
stos
mov
les
retf
or
loop
aaa
mov
pop
mov
inc
cmp
(bad)
idiv
jle
mov
mov
and
jge
aad
xchg
das
call
push
stos
data16
(bad)
popf
(bad)
scas
arpl
push
mov
(bad)
dec
int
or
retf
gs
push
push
loope
imul
lahf
inc
sub
retf
push
enter
cdq
sbb
xchg
popa
in
enter
pop
retf
sbb
in
retf
jge
pop
lock
test
(bad)
xchg
jae
pop
inc
sub
stos
fadd
sbb
arpl
add
push
ins
daa
in
montmul
cmps
or
jne
jne
jecxz
js
jmp
cmps
les
sbb
mov
mov
dec
dec
dec
jo
inc
sub
shl
jmp
xchg
je
test
jl
ja
and
push
(bad)
pop
adc
cmp
inc
jnp
xor
inc
les
jp
sahf
ret
or
lock
xor
inc
jecxz
das
or
sar
mov
cdq
ds
dec
push
mov
xor
lahf
mov
call
cmp
(bad)
addr16
movs
push
(bad)
mov
mov
sbb
sub
pop
inc
lock
adc
add
stc
js
imul
cmp
mov
xor
mov
movs
mov
test
ins
add
jmp
mov
jp
xchg
push
adc
loop
and
dec
dec
or
pop
pop
or
shr
mov
sbb
icebp
add
mov
stos
into
cmp
bound
mov
jg
sar
pop
adc
mov
call
pop
pop
push
aam
mov
enter
mov
pusha
test
sub
xchg
mov
sub
imul
lock
mov
push
pop
xchg
push
or
hlt
push
shl
fnstsw
stos
(bad)
in
sahf
aas
sbb
sub
scas
int
sub
cdq
push
or
pop
pop
mov
dec
jle
dec
push
into
dec
cs
or
inc
aad
idiv
pop
xor
or
jne
ror
and
aas
lahf
mov
jnp
or
push
xchg
(bad)
jnp
stos
cmp
inc
fcomip
mov
inc
movs
loope
sbb
or
pushf
xchg
aad
dec
jbe
rol
push
fiadd
mov
nop
sub
(bad)
mov
loop
test
mov
ds
jb
mov
inc
das
(bad)
dec
fcom
mov
stos
cmp
sub
addr16
xchg
mov
je
inc
fcmovnbe
ja
cli
and
out
xchg
into
pop
adc
xchg
dec
jmp
cmps
jle
add
inc
sub
sub
cs
adc
adc
mov
or
adc
xor
dec
add
test
xchg
imul
ficom
jg
dec
(bad)
arpl
jp
jno
pop
mov
icebp
out
push
dec
sub
fimul
add
jns
pushf
jle
(bad)
sahf
cmp
popa
(bad)
jl
fwait
inc
sub
mov
xchg
sbb
jmp
jns
cmp
pop
jae
push
xchg
mov
mov
inc
and
mov
mov
sar
pusha
sub
fiadd
or
cmp
mov
test
push
popa
sub
imul
aaa
pop
lods
mov
aam
inc
popf
call
and
clc
push
imul
(bad)
xor
dec
jg
mov
pusha
movs
cmp
out
lock
mov
shl
jne
(bad)
(bad)
cmp
cwde
push
clc
mov
data16
add
and
xchg
mov
call
xchg
aad
jbe
dec
in
je
cmp
inc
movs
mov
mov
mov
inc
dec
pop
test
fdiv
stos
icebp
sti
sub
inc
rol
dec
dec
add
ficom
lds
push
mov
mov
cmp
call
cmp
shl
jl
push
stc
test
(bad)
lahf
jbe
mov
xchg
and
je
mov
mov
mov
stc
iret
pop
sbb
mov
pop
cmp
push
mov
repz
dec
sub
pop
aam
inc
and
xchg
cmp
outs
popf
ja
jmp
movs
jle
xor
popf
bound
xchg
cmp
or
inc
jb
jno
mov
cdq
bound
jb
dec
test
jne
mov
push
xchg
fstp
sub
push
mov
lods
sar
pop
(bad)
dec
loop
sbb
loope
push
push
sbb
scas
cli
sub
and
fwait
test
repnz
and
xchg
stc
inc
sbb
jo
sbb
push
and
cmp
add
and
and
retf
mov
lods
(bad)
loop
adc
dec
pop
xchg
fcom
xchg
dec
stos
stos
pop
scas
stos
dec
mov
movs
mov
mov
cmps
mov
movs
ss
push
jmp
aad
es
mov
pop
nop
popf
aam
movs
arpl
dec
sub
xor
inc
push
ins
adc
xchg
xlat
out
mov
fndisi(8087
and
out
mov
xchg
jl
aaa
lds
outs
aad
cmp
mov
fistp
or
cmps
xlat
xlat
das
stos
mov
and
dec
xchg
retf
mov
mov
adc
mov
dec
test
adc
dec
ds
xchg
xchg
out
icebp
mov
cmp
xor
out
aad
shrd
popf
mov
jb
stos
aad
cmps
rcr
or
pop
in
dec
test
or
inc
cmp
or
add
popa
adc
iret
data16
adc
lods
pop
sub
sub
lods
ficom
and
and
mul
dec
add
jmp
xchg
xor
add
mov
sub
xor
aas
pushf
push
(bad)
fstp
push
addr16
aaa
cmc
cmp
xchg
jl
ins
jle
jp
mov
push
div
add
pushf
pop
shl
(bad)
xlat
rcr
cmc
or
mov
in
inc
xchg
mov
adc
sub
popf
xchg
jo
sbb
cs
test
out
add
sub
mov
imul
lahf
pop
data16
xchg
test
sub
enter
daa
call
add
cmp
cmp
and
and
pusha
frstor
cmp
xchg
jae
test
inc
cmps
loopne
repnz
out
xchg
dec
sbb
sbb
xor
push
call
mov
ins
mov
mov
std
out
ins
dec
cmp
lock
push
hlt
(bad)
in
xor
shl
mov
ins
nop
add
dec
cwde
add
sbb
ins
push
ss
scas
out
(bad)
jb
adc
push
or
ror
pop
adc
jb
fsubr
in
sbb
dec
call
gs
xchg
add
outs
arpl
xchg
not
ins
jae
pop
(bad)
xchg
dec
dec
add
or
nop
out
es
add
icebp
jp
(bad)
xlat
and
xor
push
pop
cmps
and
ss
mov
adc
sub
xchg
jg
sar
int3
sub
sub
loop
je
push
dec
push
sbb
bound
and
lds
dec
adc
mov
mov
fsin
xchg
and
ret
inc
or
aaa
mov
push
scas
movs
imul
mov
add
test
fisub
pop
ss
outs
sbb
mov
xchg
push
inc
sub
jmp
mov
leave
pop
add
call
hlt
jl
cdq
bound
out
hlt
into
rol
std
div
sar
(bad)
cmps
pop
lock
call
(bad)
call
sbb
repnz
mov
fbstp
lahf
mov
cmp
mov
inc
xor
popf
js
jg
mov
mov
test
sub
mov
out
push
js
stos
fisttp
fidivr
sub
xchg
jl
pop
scas
inc
inc
std
sbb
shl
dec
cmp
out
mov
xor
pusha
in
jb
ret
and
sub
pop
lea
cdq
push
cdq
fdivr
mov
pop
ins
daa
mov
push
mov
push
pop
cmp
xor
inc
xor
inc
fsubr
movsx
or
or
ins
in
sbb
jecxz
or
sbb
call
aaa
sub
cli
mov
fs
test
dec
mov
pop
or
jl
xor
or
loope
stos
add
(bad)
mov
in
sbb
mov
xor
repnz
jp
setb
frstor
int3
push
add
sub
inc
mov
and
cwde
xor
mov
stc
ror
ins
enter
iret
lock
adc
inc
imul
sbb
xor
dec
fxch
data16
ins
jle
out
pop
inc
nop
fidivr
xlat
mov
pusha
sub
lods
lds
in
jnp
pop
inc
cmp
push
sar
pop
pop
mov
stc
mov
jns
lods
call
imul
mov
daa
mov
add
mov
add
into
mov
and
retf
push
jno
fwait
pushf
push
ds
movs
jae
inc
stos
xchg
sbb
das
mov
(bad)
dec
neg
scas
js
das
mov
test
jbe
xchg
ja
shr
loop
out
sub
nop
imul
add
ret
pushf
mov
fstp
mov
mov
scas
add
pop
jle
xchg
xchg
js
mul
clc
(bad)
aas
mov
aaa
pop
shr
neg
or
rcl
mov
les
ret
jecxz
xor
repz
fwait
mov
xor
lods
jp
mov
add
sbb
hlt
das
fdivr
scas
test
test
adc
sbb
jg
cdq
sbb
xchg
rcl
outs
cmp
mov
call
fstp
and
(bad)
stc
loopne
fild
pop
retf
cmp
jb
sbb
fsub
mov
sub
das
rcl
jmp
push
sbb
push
retf
adc
mov
repz
aad
fs
shl
cdq
push
mov
data16
cmc
repz
inc
hlt
jnp
popa
mov
in
lods
dec
fild
fcomp
in
out
mov
xor
stos
jne
xlat
push
jmp
ror
out
sub
out
xor
sub
sub
add
and
sbb
add
fsub
and
je
mov
or
mov
jmp
dec
inc
and
ss
adc
jg
sub
and
and
xor
popa
pop
mov
enter
int
les
jb
lea
add
pmulhw
nop
mov
cmc
dec
nop
fwait
int3
inc
fcom
mov
jns
cmp
mov
repz
loope
or
adc
add
pop
not
loop
lods
not
into
pop
mov
cmp
xchg
addr16
nop
(bad)
or
cwde
repnz
sub
in
aas
aaa
in
or
test
ins
je
test
imul
or
cld
(bad)
lds
stos
pop
xor
jbe
cld
adc
fwait
rol
(bad)
std
popf
pop
pusha
(bad)
or
mov
dec
in
div
push
retf
aam
hlt
pop
in
jne
arpl
adc
lock
jmp
push
push
dec
sub
mov
jge
mov
rcr
add
gs
pop
pop
ins
sub
cmp
fdiv
or
and
out
jle
scas
aaa
ja
push
or
out
in
push
cdq
push
xor
adc
popf
clc
sub
adc
lods
sbb
adc
shr
fbstp
hlt
mov
mov
mov
enter
pop
sahf
repz
sbb
or
fcomp
mov
xor
jno
add
dec
(bad)
mov
or
nop
push
cdq
xor
lods
dec
mov
jmp
call
fnstenv
adc
fnstcw
sbb
rcr
push
jne
repz
xchg
test
cmp
fcomi
ja
push
push
stc
sbb
push
xor
mov
stc
int
lock
xor
inc
popa
xor
cmp
pop
and
mov
lea
cmp
repz
sub
and
mov
sbb
lods
mov
adc
and
aas
iret
aas
sub
mov
jbe
mov
ror
(bad)
pusha
mov
mov
jl
jecxz
and
loopne
mov
mov
retf
cmps
push
int3
popa
pop
movs
sbb
xchg
mov
cmp
lock
mov
sub
xchg
ret
push
and
aas
and
in
add
test
add
jb
mov
repz
pop
xchg
ret
xchg
popf
dec
or
push
gs
fbstp
std
push
jnp
xor
scas
mov
nop
jecxz
movs
sub
sbb
iret
imul
xchg
shr
repnz
nop
lods
in
jb
(bad)
pushw
push
fld
mov
in
mov
(bad)
pop
in
data16
loope
xchg
clc
sbb
adc
jl
outs
jo
cwde
out
cli
jecxz
cmps
cmp
out
lods
mov
pop
jae
mov
sbb
aaa
mov
ficom
les
ja
call
push
sub
dec
mov
pop
call
sbb
add
adc
(bad)
fisttp
xor
sub
mov
test
and
push
out
add
xchg
test
cs
dec
push
fstp
sub
leave
bound
call
(bad)
scas
mov
mov
dec
gs
lahf
sub
sub
jecxz
add
ret
(bad)
mov
stos
(bad)
pop
dec
outs
daa
jecxz
sub
and
sub
sbb
not
dec
xor
sub
pop
mov
xchg
movs
push
out
dec
mov
dec
dec
adc
pushf
mov
mov
push
xchg
dec
jne
sub
pop
and
push
xchg
fstp
out
push
mov
fmul
or
ins
sub
outs
mov
sbb
push
es
loope
mov
push
xchg
dec
xor
xchg
mov
outs
xchg
stc
cmp
push
(bad)
sbb
mov
push
mov
adc
mov
mov
xor
(bad)
mov
iret
mov
jnp
dec
jge
stos
add
movs
call
or
fidivr
xor
call
call
xor
clc
xchg
add
inc
and
hlt
and
cmp
sub
ret
pop
adc
sub
mov
inc
inc
mov
pop
xor
and
xor
clc
xor
push
xchg
hlt
xor
lods
int
dec
imul
fcom
xchg
ss
aaa
dec
(bad)
imul
pop
cmps
inc
and
in
jge
dec
sbb
cmc
add
ins
hlt
loop
scas
enter
xor
test
xor
xchg
add
daa
fisub
lods
pop
jg
leave
pop
out
enter
and
xchg
sbb
mov
jb
imul
push
test
inc
and
sti
dec
inc
jo
out
sbb
mov
pop
push
push
dec
pop
in
stos
push
mov
cmps
sbb
push
ja
loopne
sub
lods
test
stos
sbb
sub
lds
aas
(bad)
jae
in
leave
xor
lods
clc
push
(bad)
xchg
mov
xlat
dec
icebp
nop
mov
xor
shl
and
sbb
adc
je
mov
sahf
ror
xor
sbb
sbb
pop
scas
lds
repnz
into
push
jp
or
inc
mov
sbb
or
mov
icebp
or
jl
cmp
in
pop
jae
add
movs
les
dec
jno
jp
(bad)
and
mov
movs
mov
addr16
pop
add
aas
out
loopne
mov
inc
mov
or
movups
fisubr
sbb
jo
sub
cmps
das
fistp
repz
out
dec
or
and
and
cs
adc
mov
mov
lgs
idiv
pop
sar
cmp
xor
xchg
dec
rol
mov
pop
es
mov
and
ja
mov
inc
add
push
fst
pop
sti
ret
sub
mov
dec
(bad)
sub
cmp
(bad)
std
loopne
cdq
or
into
mov
lods
cmp
add
inc
ja
fadd
pop
(bad)
cmp
push
add
cmp
push
push
sbb
(bad)
sbb
in
scas
nop
add
mov
inc
int3
cmp
loopne
dec
ins
test
imul
jbe
and
mov
mov
ret
rcr
dec
cdq
xchg
and
pusha
sahf
adc
test
out
inc
adc
push
mov
mov
and
(bad)
sub
scas
(bad)
loope
sti
sub
and
out
in
pop
(bad)
loop
imul
mov
sub
sahf
cmps
sbb
rcl
sub
fwait
sub
cmp
pop
mov
int3
push
add
(bad)
pop
push
(bad)
stos
or
frstor
std
or
(bad)
jp
jmp
dec
ja
dec
hlt
hlt
xchg
sub
aas
pop
or
jl
jb
mov
sub
cli
xor
xor
or
neg
xchg
push
xchg
mov
out
jo
sbb
sbb
push
inc
adc
adc
lahf
pop
cmp
mov
shl
inc
fdivr
push
dec
xchg
add
jecxz
loopne
cs
gs
neg
shl
in
cmp
xchg
mov
leave
mov
loope
call
cmp
loop
inc
les
(bad)
in
cld
aas
inc
outs
mov
pop
lds
sbb
inc
in
xchg
cs
ss
aam
xchg
cmp
or
retf
sub
pop
sti
jl
fistp
jl
je
sbb
repnz
pop
(bad)
jp
and
push
imul
xchg
hlt
cwde
ficomp
loopne
cmps
fstp
out
xchg
sar
not
inc
jmp
xlat
xor
mov
aaa
jno
rcl
lea
mov
push
mov
scas
dec
into
push
enter
shl
adc
popa
fstp
jl
xchg
stos
sbb
adc
je
int3
cwde
rol
and
jp
jo
jo
cmp
and
(bad)
sub
mov
or
inc
xchg
sbb
call
lea
(bad)
adc
repz
fwait
mov
mov
repz
and
mov
xor
sub
shr
dec
jo
xor
es
jecxz
lods
push
or
jl
clc
pop
data16
sbb
adc
lea
pop
push
and
lock
sbb
ds
adc
mov
xchg
mov
push
loopne
inc
add
scas
cld
out
dec
mov
test
jbe
es
rol
rcl
fild
cmps
aas
jno
sahf
pop
push
cdq
loop
pop
jmp
(bad)
jl
inc
mov
dec
inc
ret
sbb
add
pop
push
fadd
enter
dec
scas
rcl
inc
push
pop
and
and
add
dec
or
mov
mov
int3
in
(bad)
sub
xor
jmp
xor
mov
cmps
aam
retf
addr16
jmp
add
pusha
std
cdq
(bad)
jg
ins
sub
inc
retf
sub
arpl
jne
jae
pop
out
pop
xchg
adc
dec
pop
cmps
mov
xchg
or
jb
dec
call
mov
adc
mov
out
jecxz
xchg
lods
adc
rcr
push
lock
cmc
out
loop
jmp
pop
mov
sti
push
scas
popf
xchg
shr
xchg
mov
xchg
gs
(bad)
sahf
shl
ds
ror
add
sub
cmp
mov
adc
scas
jmp
add
xchg
ins
jbe
xor
iret
dec
xchg
test
iret
sahf
dec
push
je
add
xlat
adc
imul
sub
enter
scas
out
retf
or
push
(bad)
jle
mov
dec
jae
and
call
jg
adc
xchg
push
add
xor
arpl
push
push
(bad)
add
dec
paddusb
push
push
into
std
xor
ret
adc
xchg
xor
push
cmp
mov
sahf
(bad)
mov
jmp
sub
(bad)
adc
aad
mov
lahf
dec
xor
mov
mov
loopne
loope
sub
or
rcl
mov
sbb
inc
dec
ror
(bad)
clc
push
ror
pop
jne
aaa
call
mov
sahf
inc
adc
scas
int3
arpl
jne
loope
lock
pop
and
push
or
jo
push
dec
pop
call
jp
fmul
data16
shl
push
jp
sbb
mov
add
xchg
lock
mov
sub
xchg
stos
add
(bad)
mov
mov
loop
dec
push
cmp
addr16
sub
dec
or
pop
push
or
pop
xchg
xor
fs
mov
leave
and
test
loop
and
vpternlogd
and
pop
pop
movs
mov
mov
loop
mov
inc
sub
and
cmp
daa
cmovne
mov
inc
xchg
or
or
push
and
inc
into
inc
fcomp
jbe
out
daa
mov
stos
ins
test
xchg
clc
jns
cdq
idiv
cmps
jge
adc
push
xchg
ja
out
std
loop
mov
cmps
cmp
arpl
dec
push
ins
mov
ja
loope
adc
ins
xchg
out
fs
cdq
ror
cs
xrelease
outs
popf
sbb
sahf
addr16
add
push
sub
nop
(bad)
icebp
sti
push
cwde
mov
adc
sbb
mov
jecxz
stc
add
mul
outs
xor
jmp
sti
xchg
fwait
les
jmp
clc
or
in
inc
push
mov
cmp
mov
pop
jle
inc
lock
outs
sub
(bad)
(bad)
sbb
dec
push
push
push
iret
clc
ins
jg
jno
mov
je
ss
int
lods
xor
dec
cli
xchg
(bad)
mov
gs
ins
daa
rcr
add
push
mul
jo
lods
pop
add
sbb
or
sub
stos
(bad)
mov
lods
inc
jne
sub
mov
push
mov
enter
adc
iret
add
mov
and
dec
push
inc
retf
dec
call
or
fcom
ret
out
pop
rcr
aam
pop
imul
inc
(bad)
ficom
mov
(bad)
mov
fist
pop
inc
arpl
jnp
dec
outs
js
mov
scas
aaa
inc
lods
mov
sbb
rcl
jnp
cmp
or
inc
pop
cli
jne
sbb
push
rol
jge
sub
lods
mov
push
sbb
sahf
mov
pop
jg
pop
jb
xchg
(bad)
ror
ror
mov
add
out
add
jae
push
dec
std
lahf
in
xor
fiadd
test
enter
stc
repnz
daa
jecxz
dec
je
pop
pop
(bad)
sahf
fild
push
adc
jle
jl
lea
clc
sti
xor
jns
in
jmp
stos
adc
mov
lea
into
fldenv
and
inc
mov
stc
mov
dec
je
mov
aas
dec
sti
cli
mov
loop
cdq
jl
out
inc
fadd
scas
ins
sbb
std
push
in
mov
mov
pop
and
arpl
daa
imul
xchg
rcr
mov
pushf
inc
push
or
mov
or
sub
inc
cmp
dec
arpl
nop
jp
xor
sub
retf
into
ins
repnz
fsubr
aad
mov
movs
cwde
sbb
cmp
xchg
nop
pusha
xor
inc
vhsubps
xchg
dec
jnp
jp
outs
xor
inc
(bad)
aad
mov
sahf
(bad)
cdq
jl
fwait
xchg
cmps
push
fadd
mov
and
shl
dec
push
arpl
lods
pop
push
xchg
sbb
sbb
sub
jle
lock
dec
add
bound
cs
mov
out
xor
xchg
scas
pop
mov
cs
es
in
inc
jmp
lods
jg
xor
test
push
xchg
mov
mov
shl
cdq
sbb
shr
pop
adc
dec
mov
mov
loopne
scas
add
push
fstp
pushf
xchg
fdiv
int3
ret
pop
push
and
sbb
loopne
push
mul
xchg
fld
idiv
cmp
aam
loope
fs
addr16
mov
test
ficom
add
sub
mov
sti
mov
clc
mov
and
es
dec
das
push
out
push
repnz
(bad)
xor
dec
jbe
xor
shl
leave
out
jp
sub
les
loope
outs
addr16
ja
sub
aad
add
mov
addr16
lahf
and
mov
popf
addr16
push
aaa
mov
mov
ins
adc
pop
outs
aaa
repnz
mov
int
push
ss
mov
and
fimul
dec
push
pop
leave
xchg
jge
push
inc
sub
mov
repz
(bad)
movs
mov
inc
dec
mov
push
mov
pushf
outs
push
movs
sub
cmp
cli
call
outs
xchg
ds
stos
cmp
out
cmc
mov
add
rol
push
stos
xchg
push
pop
inc
fadd
or
sbb
inc
out
std
addr16
xchg
scas
push
mov
pop
(bad)
stc
add
das
jne
adc
(bad)
clc
(bad)
movs
jmp
adc
out
mov
push
cmps
movs
and
mov
lds
cmp
xchg
jo
xor
mov
in
loope
mov
pusha
jb
cmc
push
xor
mov
cmps
mov
jb
test
inc
push
sbb
push
gs
(bad)
cmp
shl
push
sbb
or
xchg
in
push
jle
and
rcl
stc
pop
pop
int
test
int3
fcmovb
adc
das
mov
in
popa
adc
neg
loop
ret
ficomp
mov
outs
ror
rol
cmp
xchg
pop
mov
cmps
dec
imul
add
jecxz
les
push
std
push
pusha
cdq
shl
xchg
das
inc
repz
sub
pop
(bad)
das
cmp
pushf
sbb
int3
adc
xchg
xchg
xchg
mov
mov
cmp
inc
(bad)
movs
pusha
xchg
(bad)
(bad)
mov
xor
add
jp
pop
mov
jb
cmp
sbb
int
je
pop
or
xchg
fsubr
pop
in
test
leave
rcl
in
pop
mov
sub
push
cwde
add
test
stos
inc
out
dec
xchg
mov
inc
enter
or
(bad)
mov
mov
jp
pop
sbb
fst
mov
imul
mov
pop
sbb
test
bound
add
dec
push
clc
movs
jge
xchg
xchg
jbe
cmp
xchg
fld
adc
sub
es
jle
test
pop
or
cwde
xchg
in
mov
bound
mov
sub
push
enter
call
xor
fdiv
dec
lods
fs
add
add
shl
cwde
sbb
and
mov
shl
sti
cmc
mov
scas
dec
repz
and
mov
cmp
imul
jp
loope
das
cmp
lock
inc
add
xchg
aas
xchg
fcomp
mov
stos
mov
push
retf
inc
add
out
or
out
fbstp
fstp
test
dec
jle
xchg
movs
lahf
jb
call
shl
jns
ins
sti
sub
push
ret
(bad)
mov
call
push
mov
xchg
in
sub
test
gs
std
mov
mov
cmp
call
outs
jl
out
lds
test
inc
in
jp
in
cmc
sar
jp
add
mov
push
inc
test
push
dec
xor
jmp
in
xor
loope
(bad)
imul
daa
rol
imul
mov
jb
fisub
fidivr
mov
loopne
push
jmp
test
mov
xor
mov
add
jecxz
mov
stos
push
pop
jo
pop
mov
mov
inc
out
add
fsubr
xor
add
imul
call
xor
xchg
lods
cdq
loope
lds
xchg
pop
inc
xor
inc
sbb
fcomp
sahf
cmp
push
aam
shl
mov
mov
pop
dec
call
sbb
in
jne
xchg
or
xchg
int3
out
mov
in
add
mul
jl
sub
not
nop
ja
xor
sub
adc
push
dec
mov
sub
jno
in
cdq
jae
adc
ss
pushf
push
stos
fcmovbe
aam
add
popf
ja
inc
cmps
jp
mov
xchg
and
pop
(bad)
xor
into
repnz
fidivr
aam
jnp
cdq
pop
jno
mov
adc
aam
cmp
pop
popa
mov
push
aas
sub
loope
push
push
pop
in
(bad)
dec
mov
xchg
fcomp
add
(bad)
fstp
in
je
add
and
mov
lods
test
repz
ret
jp
sub
inc
xchg
jl
add
iret
inc
mov
mov
add
sbb
cli
dec
rcl
pushf
push
cmp
pusha
and
jecxz
aad
movs
jl
(bad)
std
inc
leave
push
and
loope
fs
(bad)
add
popa
sub
jbe
or
mov
xchg
push
pop
jmp
test
jb
jle
jp
xor
mov
popf
pushf
in
loope
shl
imul
pop
popa
add
mov
sbb
outs
push
call
cmp
shl
lds
mov
pushw
scas
fst
add
dec
jp
inc
call
test
pop
setp
sbb
cmps
push
push
outs
pusha
xor
or
or
rol
repz
push
scas
cmp
mov
inc
jmp
ins
das
mov
adc
into
sub
test
and
cmp
fcomp
mov
xchg
xchg
mov
jl
in
or
sbb
jae
fsub
ins
push
push
dec
dec
mov
(bad)
aam
mov
out
push
xchg
jns
fdiv
ins
xor
fsub
dec
into
inc
dec
ins
jb
in
retf
xor
je
mov
push
out
in
mov
push
inc
out
mov
add
(bad)
es
adc
les
sbb
iret
add
adc
out
mov
fisubr
ror
or
xlat
ror
cmp
mov
stos
es
adc
xor
movs
inc
xchg
rol
jle
jle
adc
stos
xor
cli
push
jmp
push
add
into
sub
daa
nop
push
cmp
sub
je
xchg
xor
pop
ror
sbb
inc
dec
dec
(bad)
gs
push
int
mov
(bad)
pop
std
fisttp
jp
ret
dec
popf
fcomip
jl
ss
pop
inc
movs
xor
cmp
jle
or
sub
dec
adc
mov
jo
or
xchg
sbb
jno
push
fptan
xor
ins
repz
lods
pop
push
and
arpl
int3
loopne
cs
fst
call
sbb
mov
dec
dec
and
dec
push
das
mov
or
jle
sbb
jne
out
or
mov
push
scas
xor
xor
daa
lock
dec
jo
fwait
dec
ss
fldenv
push
scas
jg
xchg
fmul
mov
ss
push
inc
mov
in
ret
mov
ret
push
mov
add
aas
cdq
add
mov
adc
dec
imul
jge
pop
inc
lods
sub
int3
retf
pop
ins
mov
retf
jmp
and
in
add
push
xor
cmp
ss
pushf
mov
xchg
and
inc
cwde
pmaxub
pop
push
cld
add
out
dec
ds
shl
jne
jo
jl
mov
xchg
repnz
retf
dec
add
lods
mov
addr16
(bad)
and
dec
hlt
and
pop
pop
fcos
stc
scas
lods
hlt
xchg
adc
push
cld
mov
icebp
xchg
lods
inc
add
jge
push
test
inc
pop
dec
cmps
xlat
movs
pop
fstp
dec
fadd
es
pop
inc
pop
call
(bad)
mov
loop
shl
rol
adc
fwait
push
jl
call
inc
xor
sbb
xchg
mov
into
inc
add
xchg
push
ret
jnp
test
aas
add
sar
pop
dec
jmp
push
push
fsubr
xchg
sahf
stos
pop
jno
adc
inc
fcomp
sti
test
icebp
nop
add
add
dec
inc
test
sub
popa
xor
fmul
out
call
adc
push
mov
aaa
into
jl
xchg
jne
sti
sbb
pop
dec
adc
or
push
mov
add
inc
out
cli
cld
cmp
mov
adc
xor
mov
xchg
test
mov
(bad)
sub
int3
loop
jns
adc
fs
xchg
xchg
mov
(bad)
dec
sbb
das
and
sbb
xor
(bad)
retf
(bad)
cmp
push
sub
push
ret
jge
and
mov
and
adc
ret
xchg
mov
adc
dec
jl
push
imul
sahf
mov
jo
xor
ret
enter
xor
xor
inc
push
and
retf
(bad)
into
mov
enter
adc
xor
and
mov
mov
and
xchg
and
sub
retf
imul
sub
jge
pop
sar
xor
jns
cmp
imul
pop
stos
mov
mov
mov
ss
aas
inc
pop
lahf
lods
mov
daa
shl
cmp
clc
or
adc
daa
mov
sbb
pop
rcl
add
push
mov
xor
sbb
xor
mov
and
push
idiv
add
addr16
mov
sub
movs
or
cmc
das
and
(bad)
imul
xlat
adc
jae
out
loope
out
test
aas
(bad)
ficom
cwde
cs
pop
shr
jo
cmp
icebp
lock
sbb
ret
cs
xchg
adc
push
sbb
push
movs
test
jns
sti
jmp
jmp
pop
mov
pop
ss
pusha
lock
cmp
mov
lahf
idiv
repnz
retf
mov
mov
or
imul
adc
pop
dec
cli
pusha
push
lea
pop
aad
sahf
mov
pcmpgtd
xlat
test
stc
jbe
aas
cmp
xor
rol
test
movs
retf
and
mov
mov
in
adc
bound
(bad)
adc
adc
sub
scas
xor
sti
psubsb
(bad)
pop
xor
mov
loope
mov
leave
sbb
cmp
mov
fsubr
lahf
stos
or
mov
cmp
call
les
xchg
or
icebp
add
test
sub
mov
jo
lahf
daa
loop
inc
inc
scas
fiadd
fbstp
sub
js
adc
dec
clc
and
xor
inc
jle
cdq
gs
cmp
shr
xchg
(bad)
fisttp
retf
sbb
cmps
mov
mov
test
addr16
jo
out
add
sub
lods
inc
push
mov
mov
(bad)
push
mov
dec
push
and
push
movs
add
push
push
lock
cld
sbb
cmp
in
das
in
pop
jb
xchg
mov
rcl
stos
xchg
jecxz
test
mov
add
pop
mov
mov
lods
repnz
and
call
xchg
mov
sahf
les
out
push
xor
retf
jmp
and
fs
jge
mov
mov
push
stos
push
(bad)
jb
mov
outs
retf
sub
aas
xor
xchg
popf
scas
mov
xor
shr
or
and
jmp
mov
pusha
frstor
(bad)
bound
lock
dec
and
inc
dec
push
repnz
mov
scas
mov
add
data16
pop
jbe
sbb
cvtdq2ps
es
mov
shl
imul
lods
mov
add
cli
loope
mov
xor
xor
stc
or
popa
je
xlat
stos
or
test
dec
push
cld
call
std
cs
push
fcomp
fmul
nop
or
xchg
stc
icebp
dec
ds
push
test
ror
push
adc
pop
rol
fidiv
xor
and
fadd
lods
adc
out
scas
push
je
jnp
es
pop
out
jno
xor
mov
sti
push
mov
mov
adc
xchg
dec
data16
icebp
add
imul
lock
cmp
out
outs
popa
pop
mov
mov
dec
aam
in
dec
adc
cli
je
or
scas
iret
sbb
fist
sbb
in
adc
push
jp
sub
sub
rcl
enter
outs
lods
push
jg
xchg
push
add
sbb
mov
cmp
push
lock
xor
mov
dec
cmp
dec
or
mov
(bad)
cld
mov
test
leave
add
ret
sbb
call
xchg
leave
sar
adc
push
pop
push
and
dec
enter
out
lds
mov
sub
cld
call
setns
add
or
stos
or
mov
arpl
mov
aam
adc
jmp
cmps
push
xor
dec
pop
and
dec
fisub
pop
(bad)
les
cmp
xchg
and
loope
lods
jmp
lahf
inc
shl
push
xchg
and
mul
fld
push
mov
fisttp
leave
lds
sub
xor
sbb
mov
or
dec
ins
imul
dec
cmp
mov
jmp
movs
mov
add
jbe
pop
into
xchg
scas
adc
xchg
bt
ins
push
jo
sar
dec
adc
movsx
pop
test
add
aad
add
sahf
push
cmp
push
dec
jmp
pusha
and
cmp
mov
mov
loope
lea
dec
adc
or
sbb
movs
cmp
inc
dec
test
or
retf
cmp
call
cmp
push
sysexit
or
in
data16
mov
add
push
add
retf
adc
jb
mov
jb
push
or
push
mov
xor
mov
jmp
add
lahf
not
xor
adc
pushf
jg
or
adc
inc
inc
loope
adc
movs
data16
xor
test
stos
addr16
mul
movs
pushf
inc
jmp
or
add
mov
dec
popf
jo
mov
clc
retf
es
retf
aas
pusha
sbb
mov
add
lds
sbb
jge
add
cmps
test
iret
add
push
xor
gs
jmp
cmps
cld
pusha
ins
mov
dec
cs
xor
scas
stos
mov
push
cli
adc
movs
sbb
lods
call
cmp
cmp
enter
push
sti
dec
mov
cmp
fdivr
cmc
pusha
outs
inc
in
(bad)
rcr
sti
int
movs
loop
cmp
or
inc
mov
xchg
shr
inc
fwait
inc
fild
push
pop
stc
add
shl
imul
sbb
mov
and
jmp
pop
push
ss
cmp
push
jp
scas
outs
fst
bound
cmp
popa
mov
(bad)
(bad)
jns
sbb
stos
and
in
retf
sbb
jmp
pop
into
lods
jle
mov
push
mov
push
(bad)
sbb
(bad)
into
dec
imul
pusha
call
(bad)
fisubr
dec
(bad)
pop
ficom
loopne
jge
and
stos
mov
fs
aas
aas
lahf
xchg
jno
inc
inc
scas
jae
add
mov
push
shr
les
push
pop
fdiv
nop
jb
jg
sbb
pmaddwd
cmps
adc
popa
lahf
push
or
push
sbb
pop
sbb
lahf
imul
add
add
or
sti
movs
push
mov
data16
enter
mov
or
adc
jno
movs
xor
pop
push
scas
fnstsw
cmp
fidivr
push
(bad)
xchg
sbb
inc
test
xlat
fild
rcl
push
(bad)
fdivr
call
and
sub
popa
adc
pop
(bad)
int3
idiv
mov
cli
idiv
xlat
aam
les
inc
cmc
test
xchg
mov
out
add
adc
mov
ins
pushf
push
cdq
iret
sbb
cmc
and
sbb
mov
inc
dec
or
out
sbb
es
mov
dec
xchg
out
icebp
aas
cld
lea
adc
popf
mov
push
int3
pusha
imul
inc
mov
les
push
addr16
xchg
loopne
inc
mov
jmp
pop
jns
leave
mov
aad
dec
loop
icebp
shl
ror
call
cmps
into
adc
xchg
stos
fnstsw
mov
ins
jecxz
pop
and
inc
aas
mov
and
push
pop
movs
inc
dec
jae
sub
or
dec
lock
or
shl
ret
jmp
in
and
and
aad
shl
cmp
and
dec
pop
loopne
adc
ins
pop
adc
xor
mov
(bad)
imul
push
scas
cmps
and
daa
mov
jge
lea
sbb
psubb
sub
pop
add
lods
adc
cmp
push
xor
mov
cmp
fstp
sbb
es
mov
inc
sub
push
sar
xchg
mov
(bad)
call
std
adc
cmp
xchg
sub
jge
inc
mov
sbb
popf
sti
sub
push
sbb
ins
(bad)
push
push
mov
push
xchg
push
and
retf
outs
inc
rol
sub
sub
sbb
data16
or
cmovg
(bad)
out
cmp
inc
add
sub
jnp
imul
inc
xchg
es
sub
ins
jl
jmp
cmps
std
(bad)
es
mov
dec
pop
leave
xor
mov
das
sbb
and
lods
iret
jg
movs
outs
jmp
std
xchg
std
xchg
cmc
ss
fwait
dec
retf
ins
jmp
dec
mov
push
push
mov
jmp
jp
je
pop
add
xlat
xchg
call
xchg
ret
clc
xor
ficomp
(bad)
sub
add
or
or
and
or
jg
test
and
cs
and
(bad)
pushf
(bad)
xchg
pop
call
ja
in
loopne
aas
loope
sahf
jge
shl
movs
cmp
outs
xchg
mov
sbb
das
in
stos
scas
push
xchg
daa
cmp
movs
pushf
or
cwde
mov
fstp
ins
out
scas
push
shl
iret
pop
es
xchg
rcr
(bad)
stos
xchg
movs
xor
mov
int3
fwait
imul
(bad)
xchg
test
mov
xchg
cdq
mov
aas
sti
mov
int3
cmp
lods
mov
iret
cs
sub
inc
and
test
retf
ret
sbb
jbe
push
fs
aaa
mov
jge
in
movs
das
push
or
jnp
iret
inc
or
mov
scas
xchg
call
inc
leave
inc
inc
add
ins
sbb
cwde
mov
push
adc
hlt
scas
and
popa
movs
loope
cmp
aad
outs
sbb
loopne
(bad)
pop
shl
rcr
push
(bad)
test
(bad)
xor
popa
pop
adc
retf
call
inc
or
or
pusha
mov
pop
or
and
sub
pop
and
(bad)
sub
test
or
repz
xchg
je
inc
mov
pop
mov
cs
adc
mov
sub
mov
jne
rep
cmp
add
xchg
push
pop
inc
push
add
fild
pop
jns
daa
cmc
inc
xor
(bad)
imul
out
pop
push
mov
les
jnp
jb
adc
jmp
mov
push
sbb
cmps
add
or
mov
push
ret
sbb
cmp
scas
push
or
arpl
inc
sbb
mov
cmps
pop
mov
sbb
dec
push
fstp
(bad)
xor
lahf
and
sbb
add
sub
add
out
xor
mov
add
xor
inc
and
dec
push
movs
stc
mov
clc
movsx
fimul
dec
mov
mul
sub
dec
jmp
jge
pop
movs
dec
int3
fwait
sbb
mov
leave
sahf
jne
lea
mov
push
dec
mov
sbb
mov
stos
mov
jmp
jne
clc
fsubrp
enter
jb
pop
sub
retf
pop
(bad)
jb
sub
xchg
sti
pusha
and
mov
pop
xor
sub
dec
xchg
sbb
mov
fs
inc
mov
daa
enter
and
lds
and
idiv
mov
dec
fst
mov
dec
cli
xlat
mov
call
dec
xor
sub
mov
cdq
lods
xor
sbb
imul
aam
push
mov
jle
les
pop
sub
xchg
fld
les
aas
fmulp
retf
rcl
jmp
ds
jns
into
fnstsw
loop
retf
dec
rol
clc
dec
loop
dec
lock
mov
xor
stos
pop
ret
fnstsw
xchg
lea
sub
in
movs
fcom
jo
stos
stos
xchg
pop
or
xor
xchg
sub
mov
(bad)
loope
jbe
pop
sbb
mov
jbe
jmp
fdiv
mov
fs
imul
jae
ror
bound
pop
in
mov
adc
dec
test
add
push
or
iret
xlat
push
push
aas
std
fsubp
(bad)
gs
xor
stos
push
xchg
inc
inc
cmp
sbb
mov
fcomip
xchg
xor
sub
test
mov
aam
out
(bad)
inc
ror
xchg
test
fadd
inc
test
leave
in
xor
dec
jmp
mov
sbb
call
aas
push
sbb
fwait
jp
(bad)
movs
call
(bad)
mov
fwait
inc
and
dec
out
rol
mov
push
sub
pop
popa
sub
ss
cli
je
fld
cdq
in
xlat
nop
jmp
mov
dec
cmp
dec
lock
or
iret
or
fwait
mov
or
es
push
and
mov
inc
mov
adc
mov
aaa
loope
pop
mov
(bad)
cli
lods
ret
pop
loop
pushf
cmp
nop
add
xor
or
fwait
xor
sbb
ins
jbe
iret
loop
stc
cwde
pop
jg
pushaw
cld
mov
xor
xor
xchg
rcl
jecxz
mov
mov
lea
out
push
and
popf
jge
dec
adc
in
sbb
retf
mov
mov
js
dec
ficomp
sub
in
(bad)
(bad)
fadd
stos
cmp
addr16
cmps
pop
shr
movs
rcr
xchg
jg
and
lock
sub
mov
jmp
(bad)
jne
cwde
add
inc
mov
int3
cwde
xor
gs
mov
cmp
mov
adc
(bad)
outs
bound
sbb
jno
dec
sbb
aaa
addr16
iret
jmp
mov
jmp
imul
jnp
scas
scas
pop
bound
les
or
jbe
xor
dec
(bad)
les
popa
fwait
lods
add
dec
and
sub
loop
mov
pop
(bad)
es
xchg
add
adc
std
push
cmp
mov
sub
pop
xor
mov
mov
cs
lds
inc
jmp
daa
cld
add
adc
nop
dec
cmp
inc
aas
imul
data16
dec
inc
xor
in
dec
fs
popa
mov
lods
dec
push
jne
in
mov
mov
push
int
mov
push
test
int
fisttp
push
cmp
xchg
pop
xchg
cli
ret
jp
mov
fistp
add
test
xchg
sbb
imul
xchg
and
fucomip
jle
gs
addr16
addr16
xor
enter
cmps
jnp
mov
clc
cmps
(bad)
dec
xchg
xchg
dec
push
sbb
cmp
mov
and
xchg
xlat
retf
mov
or
pop
push
inc
mov
mov
cmps
aas
cdq
dec
inc
adc
cdq
dec
fsubr
pop
les
(bad)
(bad)
jae
adc
jle
popa
or
call
xlat
inc
and
test
cmp
ss
outs
xor
data16
jbe
push
ja
adc
xchg
movs
dec
and
mov
add
xchg
inc
xchg
(bad)
lock
mov
cwde
and
sub
cmps
dec
repnz
sub
and
xor
sbb
cwde
sbb
adc
mov
push
out
repz
aad
enter
pop
jg
or
jns
mov
pop
into
hlt
adc
push
stos
or
or
clc
xlat
test
xchg
fadd
and
push
movs
mov
mov
pop
sbb
mov
sbb
xor
xchg
mov
push
mov
shr
(bad)
daa
or
scas
sub
dec
and
(bad)
js
ins
xor
pop
mov
aad
add
call
mov
cmp
dec
les
fs
sbb
jmp
mov
mov
sbb
int
mov
fxch
cmc
out
dec
mov
test
in
cmps
enter
nop
pop
inc
shl
adc
mov
jno
mov
mov
xor
mov
jo
or
aaa
stos
aas
add
xor
inc
ror
out
mov
nop
vmptrst
call
and
add
mov
repz
cs
das
pop
idiv
aad
adc
xor
cmp
adc
arpl
or
lds
or
into
add
out
test
sbb
and
dec
scas
or
push
jmp
sti
jmp
rol
ins
push
or
sti
xchg
cmp
js
cmc
fmul
xor
mov
imul
push
mov
sar
cmp
addr16
adc
push
jle
shl
xchg
xchg
int
scas
and
das
xchg
sub
repz
xchg
sbb
popa
pop
jo
lods
aad
arpl
pop
inc
aam
jmp
xchg
or
lahf
je
lods
(bad)
(bad)
(bad)
or
imul
push
xchg
js
outs
pop
je
adc
dec
out
and
jne
add
int
popf
mov
ror
xlat
cmps
pop
retf
add
xchg
adc
push
sti
sub
cmp
mov
aaa
or
adc
mov
pop
aad
inc
rol
in
imul
ficomp
(bad)
lahf
jge
std
jb
mov
lock
shl
jnp
add
repnz
int
pop
sub
xchg
fwait
idiv
mov
or
fld
in
stos
jmp
sbb
inc
xchg
bound
xor
xor
pop
fdiv
and
xchg
pop
(bad)
adc
data16
test
add
mov
sbb
mov
out
loopne
outs
pop
lea
push
xor
sub
adc
cwde
dec
jle
call
and
loop
loop
mov
jge
cmps
or
add
cli
loopne
jp
test
ret
shl
or
adc
push
and
cmps
into
sub
je
push
dec
dec
add
pop
sub
and
push
call
cmp
add
pusha
adc
inc
ror
(bad)
dec
pop
nop
sar
add
push
push
adc
iret
int
add
in
jns
jmp
add
mov
jg
pop
mov
sub
ins
je
stos
lahf
mov
ret
test
push
lods
add
dec
mov
shr
mov
out
cmp
and
sub
ins
dec
ds
inc
add
jecxz
ins
jno
in
or
adc
xchg
mov
cmps
movs
dec
leave
ins
sbb
cmp
shl
(bad)
cmp
dec
out
(bad)
mov
das
xor
mov
frstor
jmp
push
stos
mov
je
std
adc
add
sub
and
sar
inc
sbb
clc
dec
add
inc
repnz
push
test
ret
sbb
push
or
push
fwait
sub
mov
sbb
push
bound
pop
mov
in
jmp
sbb
dec
pop
or
stos
jne
out
ins
and
or
add
(bad)
aam
outs
(bad)
jno
adc
popf
or
xchg
dec
aas
pop
(bad)
out
scas
adc
add
(bad)
adc
sbb
and
pop
adc
dec
arpl
sub
xchg
pop
leave
jl
cmc
into
jmp
in
seta
jmp
push
xor
neg
lock
pop
add
mov
aaa
test
out
xor
push
repz
adc
mov
inc
cli
mov
pop
dec
(bad)
sahf
jge
cmp
retf
cmps
jmp
sahf
mov
xor
stc
cmp
aam
add
xchg
sbb
cld
packuswb
enter
stos
sbb
hlt
std
lds
je
pop
dec
arpl
(bad)
data16
nop
sahf
sub
(bad)
outs
test
test
mov
pop
and
in
jne
mov
mov
adc
xchg
inc
add
dec
xor
out
clc
sbb
xor
dec
mov
mov
cmovge
adc
xor
movs
loope
bnd
sar
and
inc
lock
aad
cli
cwde
dec
adc
xchg
jmp
leave
push
test
hlt
jmp
xchg
test
mov
rcr
popf
inc
cli
xor
shr
les
stc
test
pop
jne
and
out
sbb
addr16
xchg
push
call
jl
popf
(bad)
jne
fbstp
mov
mov
(bad)
aam
sahf
aas
or
call
out
mov
aam
mov
cmp
cld
add
psubw
dec
outs
xor
adc
mov
xchg
add
aaa
xchg
or
push
dec
jmp
pop
popf
xor
popf
and
inc
fist
popa
sub
div
inc
dec
nop
mov
xchg
repz
fwait
loope
push
ins
movs
inc
jmp
jnp
jmp
cld
loopne
cmp
popa
jo
mov
int
mov
mov
inc
xchg
addr16
stos
aad
out
dec
and
enter
retf
rol
push
lods
movs
mov
test
mov
(bad)
out
popa
jb
mul
fbstp
push
cmp
push
ret
lahf
mov
adc
movs
sti
cmp
xchg
scas
jmp
push
pop
jl
outs
test
sbb
mov
adc
cmp
adc
btc
adc
ins
mov
adc
jmp
cs
pop
ins
mov
dec
pop
shl
test
pop
xchg
xor
and
push
ss
jecxz
inc
js
(bad)
out
test
cld
jp
xchg
jge
ret
popf
aad
fisttp
cli
pop
nop
add
(bad)
stc
pop
pop
push
xchg
icebp
mov
daa
inc
(bad)
or
mov
inc
mov
fldenv
pop
sar
xor
cmp
cmp
mov
fsubr
shr
lock
retf
xlat
ds
cmp
sbb
add
adc
sahf
(bad)
xchg
mov
in
cmp
sub
popf
in
or
add
gs
push
jnp
xchg
in
movs
std
outs
inc
cld
pop
scas
loope
movs
adc
in
xlat
inc
xchg
jmp
loop
ins
rol
mov
cs
xor
cmp
add
adc
ret
pop
repnz
pop
lods
sub
add
pop
fbstp
inc
test
data16
and
inc
push
pop
div
fild
leave
mov
cmp
lea
fsubp
repnz
push
adc
mov
(bad)
std
jp
stos
ret
lods
mov
stc
inc
sbb
adc
ss
call
ret
fwait
adc
repz
mov
scas
mov
cmps
xor
inc
aaa
daa
jmp
mov
outs
mov
fwait
jno
and
clc
or
add
lds
das
hlt
add
mul
push
dec
dec
xchg
xor
rcl
loope
push
mov
dec
jae
in
inc
popf
or
popf
sub
inc
and
pop
adc
scas
iret
jp
mov
mov
push
xor
imul
enter
pop
ins
or
out
xchg
idiv
out
mov
cs
adc
stos
leave
mov
adc
inc
push
mov
test
jo
mov
adc
dec
mov
add
adc
fbstp
pop
pusha
pushf
pop
pop
mov
(bad)
loop
mov
sub
and
enter
rol
imul
cmp
xchg
sub
dec
retf
aaa
sub
sbb
pushf
or
imul
sub
mov
sar
data16
pop
xcrypt-ecb
cmps
movhps
pusha
push
xchg
mov
sbb
adc
popf
fdiv
ror
and
cmp
jle
push
lds
es
cli
mov
pop
fmul
cmp
jns
(bad)
loopne
inc
pop
add
mov
clc
stos
aam
nop
repz
jns
sbb
mov
js
std
fdivrp
push
xchg
push
jp
pop
repnz
or
mov
std
stc
push
cmp
fstp
imul
test
lods
add
sbb
jge
cmps
call
test
paddd
pop
in
jmp
hlt
and
aad
mov
stos
stos
call
jmp
dec
jg
cmps
stc
test
bound
pop
rol
in
jno
js
fwait
sub
sub
or
mov
scas
or
addr16
jecxz
adc
pop
arpl
xchg
leave
xchg
in
mov
push
push
clc
mov
(bad)
xchg
into
scas
pop
jae
loopne
fisttp
enter
stc
jmp
mov
cmp
retf
mov
jae
sub
loop
or
and
rcl
pop
popa
adc
push
mov
inc
jne
scas
cmp
mov
imul
ficom
fmul
(bad)
cld
icebp
pusha
(bad)
out
adc
mov
push
xor
inc
adc
lea
jecxz
div
aaa
bound
(bad)
adc
or
cmp
fucom
call
ret
and
sub
adc
mov
test
add
ins
je
mov
add
xor
test
mov
retf
cdq
aaa
sub
jmp
lahf
aaa
mov
xchg
shl
imul
fwait
mov
xor
inc
clc
mov
push
mov
stos
mov
mov
aaa
je
or
pop
into
jne
push
sub
das
mov
pop
scas
xchg
(bad)
jp
shl
repz
popf
daa
aad
cmps
jno
sbb
mov
arpl
(bad)
repz
repz
sahf
cmp
or
xor
adc
jno
add
xor
mov
adc
rcl
mov
loop
int
dec
dec
in
scas
sbb
outs
ret
scas
push
ret
lahf
pop
ins
shr
retf
mov
xchg
sbb
and
imul
jno
ret
shl
mov
pop
pop
jle
aam
(bad)
fist
jmp
mov
popa
loop
retf
stc
and
fucomi
popa
add
das
pop
push
push
retf
je
mov
popa
inc
sub
(bad)
pop
loop
xor
in
xchg
jnp
inc
adc
popf
inc
(bad)
pop
icebp
icebp
sub
pusha
fcmovnu
lods
daa
inc
jnp
fcom
shr
xchg
push
push
rcl
or
jmp
cmp
mov
xor
xchg
jnp
lahf
(bad)
out
xchg
adc
jecxz
adc
cmps
cmp
pop
dec
add
xor
jl
ret
sub
in
xchg
add
mov
pop
mov
pop
popf
cmp
xchg
or
ins
jns
std
out
dec
push
xchg
dec
sti
xor
xchg
imul
pop
(bad)
push
dec
sar
jle
mov
fsubr
hlt
fs
xlat
clc
mov
and
push
stos
sbb
cs
inc
cmp
add
fld
push
dec
bound
dec
fwait
push
arpl
mov
add
pop
cli
push
adc
xchg
mov
ds
(bad)
test
int3
xchg
or
(bad)
mov
test
inc
pop
xor
adc
test
pop
push
xor
pop
hlt
clc
retf
and
pop
pop
pop
ss
mov
js
pop
jmp
sub
dec
and
mov
jnp
dec
popf
adc
scas
sbb
jne
sbb
in
adc
push
adc
mov
xlat
push
mov
sbb
dec
sbb
sbb
and
jmp
pop
pop
cmp
mov
mov
out
sbb
fst
and
bound
imul
pop
in
das
xlat
enter
jmp
stc
adc
enter
dec
adc
pop
mov
in
dec
ror
adc
push
xor
movs
mov
jle
std
mov
mov
les
fnstsw
mov
jne
jge
push
pop
mov
adc
or
das
cmc
retf
and
cmp
mov
mov
out
fidivr
iret
sbb
inc
mov
pop
push
push
fdiv
add
push
or
adc
inc
shr
std
fisttp
cld
push
cmc
out
xor
dec
cmp
xor
cmp
aas
js
(bad)
jb
sbb
rcr
mov
xor
cs
push
cs
xor
data16
cmp
jl
pop
lock
xchg
jbe
and
jge
in
es
pop
inc
jmp
stos
mov
pop
icebp
push
push
aas
inc
jno
dec
mov
mov
mov
pop
lea
leave
xlat
pop
sub
and
dec
sahf
out
das
cmp
and
adc
out
ja
adc
rcr
sub
sysret
mov
imul
(bad)
out
cdq
std
retf
fwait
push
(bad)
lds
inc
adc
sar
xchg
loop
aad
add
lock
sub
adc
sub
pop
pop
call
pop
pop
fstp
std
leave
ror
lahf
mov
cmp
test
cmp
xor
xor
xor
shl
in
mov
je
sub
cmp
jo
sub
adc
dec
arpl
push
jbe
mov
mov
stc
jb
and
loopne
xchg
aad
(bad)
sbb
mov
jnp
push
mov
bound
icebp
add
ins
pop
jmp
or
adc
bound
stc
pusha
stos
add
xchg
pop
iret
sbb
outs
sub
pop
or
div
xchg
lock
mov
sub
sbb
add
cmp
(bad)
sbb
inc
mov
mov
ret
push
pushf
mov
cmc
and
dec
imul
and
add
(bad)
lods
xchg
mov
adc
aas
dec
loopne
lea
retf
xor
outs
cmp
xor
out
mov
mov
push
(bad)
out
and
cmp
bound
rcr
push
xchg
mov
sbb
dec
push
pop
pop
movs
inc
jbe
int3
pop
std
fs
scas
xchg
sbb
(bad)
std
popf
rep
das
sub
test
rcr
(bad)
fisttp
mov
dec
aaa
repz
inc
cmp
push
mov
mov
out
test
push
clc
cmp
inc
mov
lea
(bad)
fimul
push
jle
retf
add
xor
xor
sub
bound
jmp
xchg
mov
sbb
test
test
mov
pop
test
sbb
mov
mov
jle
xchg
arpl
cli
mov
test
lahf
xchg
das
pop
sbb
jns
js
sbb
ins
outs
and
das
pop
popa
mov
adc
mov
out
je
fs
push
push
fld
cs
jl
(bad)
lock
mov
imul
retf
push
mov
and
stos
jbe
sbb
dec
pop
cmp
inc
sub
inc
push
call
popa
jge
lock
dec
call
adc
dec
mov
aas
(bad)
scas
add
or
int3
push
or
call
push
in
jge
nop
in
lahf
xchg
sbb
push
sub
dec
cmp
mov
(bad)
mov
cmps
ror
push
add
dec
ficom
aad
(bad)
sub
pop
jo
inc
stos
std
std
mov
add
dec
in
lock
dec
cmp
add
ret
jge
jo
stc
sbb
and
ret
je
mov
sar
loop
hlt
fsubr
iret
mov
sub
rcl
cmp
sbb
aaa
ret
xchg
and
jge
mov
mov
hlt
sub
mov
cmp
xor
rol
dec
cli
dec
pop
dec
movs
add
mov
jecxz
mov
mov
ss
nop
outs
enter
xor
cmp
mov
cli
pop
mov
jns
mov
mov
ss
out
ja
sub
in
je
add
xchg
hlt
cmp
call
dec
sahf
dec
add
xor
(bad)
fcom
mov
aaa
fadd
mov
xchg
(bad)
arpl
sbb
sub
mov
nop
adc
in
jno
xor
js
or
out
loop
inc
xchg
xchg
imul
cmc
jp
or
jno
retf
add
add
xchg
cmp
call
out
test
xor
cdq
daa
or
and
jns
dec
scas
cmc
mov
or
outs
sub
cld
xchg
call
ror
cmp
outs
mov
jnp
inc
imul
cmc
(bad)
fwait
das
test
or
daa
add
jl
lods
call
xchg
sbb
inc
sahf
adc
add
pop
je
das
jbe
shr
mov
jb
pop
int3
push
stc
arpl
shr
mov
and
mov
inc
mov
gs
lods
push
jp
mov
sbb
cs
mov
mov
cdq
pop
sub
repz
or
lock
popf
xchg
(bad)
cli
jae
gs
cmp
xor
neg
jmp
test
xor
retf
mov
cs
lahf
bound
retf
ret
std
popf
sbb
test
xchg
lahf
fadd
sti
shl
out
or
adc
mov
mov
aaa
xchg
movs
pop
ret
cmp
retf
cmp
pop
jg
rcl
xchg
pop
arpl
aad
je
(bad)
jecxz
fs
lea
mov
cmp
jnp
pusha
in
inc
jp
setl
int
outs
pop
xchg
mov
icebp
mul
jg
or
mov
mov
cmp
cmp
or
retf
push
mov
std
jae
mov
adc
mov
clc
aad
es
daa
stc
imul
icebp
xchg
ja
fbld
pop
call
test
cdq
or
in
pop
or
push
xchg
mov
rep
sbb
cmp
jp
aas
pop
sub
mov
dec
sbb
int
mov
pop
jle
and
dec
mov
arpl
inc
or
sbb
pop
out
jmp
xlat
fld
or
mov
mov
sahf
je
icebp
push
adc
in
popa
hlt
icebp
push
movs
imul
mov
jbe
rcl
lock
ror
jno
dec
inc
dec
sbb
and
xor
ss
add
(bad)
xchg
addr16
cdq
call
cli
adc
shl
in
pop
mov
and
loop
or
nop
xchg
cmps
leave
js
lds
in
lods
sbb
jge
mov
(bad)
sbb
add
xchg
jmp
das
mov
rcl
xor
sub
movs
in
(bad)
loopne
int3
popf
push
pushf
pop
ds
jecxz
inc
aas
mov
cmp
loopne
cmps
jnp
pop
or
jmp
jb
int3
mov
xchg
fild
fimul
dec
fs
mov
hlt
and
in
adc
jl
xor
or
push
mov
das
mov
test
movs
dec
out
loope
jp
scas
repnz
mov
cmp
(bad)
jle
popa
jns
out
cmc
rcr
aas
push
outs
addr16
outs
ret
popf
xor
pop
jecxz
pop
loop
jle
adc
imul
inc
aas
gs
xor
adc
repz
mov
sub
mov
out
aam
sub
pop
sbb
nop
stos
adc
inc
push
pop
mov
mov
cld
and
aaa
rol
jmp
mov
jo
mov
jo
dec
dec
ret
sub
pop
mov
xchg
sbb
(bad)
je
push
add
out
xor
outs
and
(bad)
mov
fisub
(bad)
addr16
xchg
cwde
sbb
mov
call
dec
sbb
sbb
enter
sbb
sbb
scas
imul
stc
pop
xor
pop
dec
inc
mov
(bad)
xor
xor
fbstp
push
dec
pop
in
mov
push
mov
outs
inc
bnd
add
(bad)
scas
mov
fidiv
adc
imul
jmp
inc
or
add
add
mov
or
int3
jb
xchg
jecxz
(bad)
shl
fidiv
movs
nop
fistp
sub
or
movs
retf
pop
and
add
adc
js
adc
into
jbe
xchg
leave
fstp
arpl
mov
test
sbb
xchg
dec
push
push
inc
or
ins
das
dec
jp
fdiv
std
mov
shl
pushf
das
dec
sub
jmp
clc
in
dec
fmul
cmp
add
mov
sahf
or
lods
repnz
adc
or
pop
test
cmp
imul
sub
shl
rcl
cmp
sbb
rol
jnp
test
jae
xor
out
outs
lds
sub
push
xchg
mov
pop
xchg
ins
pop
gs
jb
pop
cli
fistp
jmp
in
xchg
xlat
jbe
and
xchg
ror
pushf
out
jmp
fcomp
push
sub
mov
jecxz
push
lea
mov
scas
fwait
lar
mov
xor
cmc
popa
dec
ss
dec
imul
sbb
ret
xchg
mov
ins
movs
out
mov
rcl
sbb
mov
jno
push
dec
pop
and
jb
inc
push
ins
add
clc
or
(bad)
shl
es
xchg
imul
outs
or
dec
sbb
or
push
inc
(bad)
icebp
or
leave
retf
jmp
and
mov
fwait
xchg
push
add
(bad)
adc
lahf
sub
push
and
fadd
ret
sub
ss
xchg
mov
mov
fimul
push
es
sub
push
mov
xor
popf
ss
(bad)
sbb
sbb
test
retf
add
mov
xchg
adc
pop
push
xchg
mov
call
das
fst
sbb
adc
loop
inc
outs
sub
popf
add
xor
xchg
in
fwait
sbb
and
lods
loopne
or
xor
popa
ret
fst
adc
cmp
mov
dec
cmps
mov
int
fidivr
pop
(bad)
sti
stos
arpl
xor
mov
cmp
in
clc
test
adc
fisubr
test
inc
cld
test
add
pop
(bad)
and
fwait
out
pop
sbb
scas
(bad)
call
pop
mov
inc
mov
or
mul
push
lods
xor
jb
shl
mov
pop
dec
adc
mov
cli
xchg
lahf
push
ins
sub
pop
lods
jmp
or
es
lods
es
mov
scas
sub
jg
jb
cwde
jb
test
and
addr16
(bad)
(bad)
fsub
push
and
inc
mov
mov
bound
xor
pop
jmp
sub
movs
jg
in
test
dec
jg
add
pop
cmp
out
and
mov
out
cld
repz
bound
jmp
push
cld
or
in
or
ret
cli
cdq
add
cmc
adc
pop
imul
cmp
sbb
mov
jns
je
cdq
(bad)
mov
mov
or
int
movs
push
mov
jbe
mov
mov
mov
mov
pop
xor
cmp
mov
adc
(bad)
std
xor
icebp
movs
and
daa
aad
ds
in
aad
pop
xchg
sbb
fs
inc
pop
mov
pop
clc
enter
cmp
mov
shr
js
cmp
inc
scas
aas
sti
xlat
pop
mov
push
cmp
xor
fnsave
stos
inc
mov
ret
xor
ins
shl
add
cdq
fidivr
xchg
sbb
imul
(bad)
fcmovu
addr16
mov
in
popf
mov
add
sbb
jmp
adc
jns
mov
mov
bound
sbb
sar
outs
aad
cmp
in
fnstcw
push
aas
icebp
enter
mov
sub
pop
mov
cdq
sub
and
imul
and
jle
sub
jno
or
xchg
xor
(bad)
pop
sahf
mov
jmp
jne
push
outs
in
in
mov
pop
lahf
out
fs
push
mov
and
mov
push
and
sahf
mov
and
sbb
fild
push
push
mov
mov
mov
xor
pop
cmps
out
mov
jge
push
xchg
mov
rol
out
loope
fstp
call
xlat
pop
or
jecxz
add
out
adc
inc
stc
(bad)
sub
sub
aaa
xchg
adc
sub
mov
dec
mov
ret
imul
jb
(bad)
clc
aas
xor
ret
or
into
xchg
dec
jb
mov
sub
mov
sbb
pop
or
or
dec
add
arpl
sub
xor
shr
loope
mov
sbb
add
cmp
xchg
out
scas
into
sets
lods
in
xor
retf
sti
sti
pop
xor
pop
and
and
xchg
jo
ror
mov
push
mov
pop
ror
fdiv
js
aad
and
add
(bad)
jne
(bad)
mov
(bad)
js
in
push
inc
test
mov
jo
retf
std
scas
jnp
(bad)
fcmovnb
adc
lock
int
mov
mov
jle
push
inc
push
cmp
push
push
and
add
cmp
sub
mov
xor
rcl
(bad)
adc
cvtdq2ps
std
cmp
jmp
and
ins
dec
fst
test
cmp
sub
inc
ja
mov
lahf
daa
inc
stos
ds
test
xchg
xchg
aam
or
mov
push
jecxz
ins
xchg
push
(bad)
mov
inc
pop
cdq
or
adc
cmp
mov
outs
mov
mov
stos
and
push
cdq
(bad)
sbb
enter
jl
enter
adc
mov
xor
rol
daa
or
mov
mov
mov
or
pushf
in
adc
cmp
sbb
pop
sbb
sbb
inc
mov
pop
jl
sub
jg
push
jle
sbb
pop
or
popf
adc
push
mov
pusha
imul
cmp
push
das
loop
cdq
das
jecxz
sar
lock
addr16
jns
movs
mov
mov
mov
stos
sbb
outs
es
or
push
leave
pop
and
xchg
fbld
fidiv
pop
xor
fwait
cmp
inc
jge
js
sub
inc
add
dec
xor
mov
sar
mov
nop
repz
jno
cmp
inc
pop
pop
push
jecxz
loopne
in
jne
sub
shr
clc
jle
adc
push
pushf
aaa
popf
or
adc
adc
loop
lock
stc
mov
sbb
dec
outs
push
jne
mov
in
ins
push
push
les
data16
dec
retf
adc
adc
mov
das
loopne
(bad)
adc
add
push
stos
enter
jmp
test
lods
in
fisttp
adc
and
test
mov
jne
inc
cmps
push
xchg
jne
cmc
sub
mov
sub
call
push
fimul
rol
pop
mov
int3
nop
and
inc
mov
push
int3
loope
inc
adc
or
stc
arpl
mov
std
or
cmps
cmc
add
in
and
xor
and
pop
rol
mov
ds
inc
mov
in
inc
sahf
push
in
push
btr
sub
leave
out
fild
es
enter
sub
sar
mov
ins
push
sbb
xor
and
mov
mov
adc
les
in
rcl
sub
xor
scas
xchg
loopne
sbb
clc
popf
and
lock
mov
or
and
data16
or
cmps
inc
cmp
sub
call
jge
movs
push
pop
fwait
arpl
es
sub
mov
imul
inc
dec
push
imul
mov
add
test
pop
add
sbb
sbb
sbb
add
cmp
cld
sbb
jae
pusha
and
outs
(bad)
xchg
add
cwde
sub
mov
test
or
sub
nop
xor
sub
int
imul
call
iret
dec
push
aam
xor
fs
pushf
call
rcl
aam
push
sbb
test
or
retf
pop
mov
or
shl
and
xchg
cmp
inc
out
or
inc
xor
enter
pop
mov
pop
mov
pusha
test
sbb
ins
in
scas
popf
ins
(bad)
or
adc
mov
out
fmul
jmp
rep
out
jns
lahf
int3
aam
sbb
jnp
loop
cdq
cvttps2pi
mov
mov
jnp
push
data16
movs
jae
cmps
and
xchg
ret
stos
cmp
pusha
aad
pop
xchg
jne
(bad)
add
iret
mov
sbb
dec
sub
ja
inc
retf
mov
jmp
aas
repnz
cmp
dec
xor
retf
scas
dec
push
daa
cmp
pop
ret
movs
mov
pop
mov
outs
cmps
push
enter
popa
dec
adc
or
shl
stc
arpl
cwde
xchg
xor
fwait
stc
leave
nop
test
inc
ficom
xchg
fwait
xor
lock
inc
ins
and
xor
add
pushf
das
pop
inc
add
sub
imul
cmc
dec
cwde
mov
das
add
cmp
inc
pop
movd
call
popf
popf
add
inc
jl
nop
inc
shl
pop
stos
imul
fldcw
push
push
pop
add
dec
or
add
in
cmp
outs
mov
mov
and
(bad)
add
cmc
je
lock
movs
xchg
je
xchg
xchg
stos
in
pop
jb
cmp
fnstsw
push
repnz
pop
jecxz
outs
mov
test
push
sub
push
push
(bad)
ficomp
movs
dec
sahf
inc
sub
fdiv
sbb
adc
inc
repnz
or
test
sub
lods
fsub
imul
mov
xor
dec
pop
xchg
cmp
jno
es
or
or
mov
dec
mov
mov
cs
xchg
push
sahf
and
inc
(bad)
jno
pushf
mov
sbb
sub
(bad)
outs
inc
mov
or
sar
fbld
cld
aaa
push
out
mov
js
cli
mov
rol
mov
inc
cmp
cmp
adc
fwait
jg
or
mov
ret
das
mov
mov
cmp
cmp
xchg
sub
hlt
cmp
cli
push
ss
adc
outs
xchg
arpl
(bad)
xchg
iret
adc
ds
(bad)
(bad)
cmp
add
mov
icebp
push
sub
push
adc
inc
out
push
sub
into
push
xchg
(bad)
ficomp
fld
(bad)
scas
push
and
cmp
int
jecxz
aas
mov
outs
fincstp
mov
ror
aas
jne
repz
aaa
ss
dec
push
sti
jecxz
scas
sub
ret
adc
mov
cmps
(bad)
je
dec
sub
pushf
js
add
clc
inc
shl
cmp
mov
gs
fnstenv
mov
cdq
add
pop
add
sub
test
fmul
sub
lds
xor
xlat
enter
inc
cmp
jmp
fs
sub
test
inc
in
shr
sbb
mov
jmp
outs
or
popa
hlt
lock
sahf
cmp
cmp
dec
stos
lahf
jae
jae
sub
fld
pushf
(bad)
mov
dec
sahf
lea
scas
mov
push
mov
jno
mul
push
movs
mov
xchg
loope
aas
jp
popa
add
pop
push
pop
cmps
and
dec
pop
ja
sbb
fcomp
xor
std
bound
daa
rcr
sbb
ja
lods
sub
push
mov
cmp
je
dec
in
and
mov
add
pop
in
add
(bad)
and
mov
(bad)
jg
pop
rol
repnz
mov
mov
cmp
gs
or
mov
cmp
jo
adc
stos
adc
push
cdq
out
aad
imul
inc
push
outs
adc
xor
sbb
mov
xchg
xor
aad
dec
xchg
add
enter
call
pop
push
sub
pop
xchg
mov
ret
mov
inc
sub
and
and
adc
stos
dec
jae
repnz
push
fistp
stc
pop
cmp
retf
rol
or
cmp
dec
loope
inc
fstp
sub
push
pusha
jae
dec
dec
fisttp
(bad)
pop
dec
aas
std
jp
and
xchg
fbld
and
sub
js
inc
pop
pusha
cmc
out
push
or
enter
sub
inc
xor
mov
and
bound
icebp
int3
cmp
icebp
sub
inc
jbe
mov
ret
outs
mov
aam
sub
mov
cmc
je
push
mov
cmps
test
in
inc
xchg
cld
lods
scas
xchg
test
mov
(bad)
mov
mov
popf
xlat
sub
fild
mov
addr16
jno
dec
xor
sbb
xchg
add
ja
int3
fldln2
inc
and
pop
adc
and
inc
sub
and
leave
(bad)
jg
mov
div
xchg
push
xor
lock
jmp
mov
xor
fdivr
sub
ja
retf
cdq
jo
mov
mov
xchg
fnstenv
cmp
add
dec
xchg
nop
jp
out
sub
ror
aaa
sahf
and
ret
leave
xor
and
(bad)
aas
mov
push
out
cmc
cmp
xchg
cmp
enter
add
xor
imul
push
and
mul
jno
add
fmulp
sub
inc
test
pop
out
iret
into
div
shl
icebp
mov
jno
adc
imul
das
mov
das
leave
jnp
dec
mov
xchg
push
dec
jbe
sub
adc
jecxz
inc
inc
and
inc
fucomi
jb
xchg
dec
push
cmp
cmps
mov
add
mov
mov
in
sar
pop
test
push
lock
xor
pop
fmul
dec
inc
and
push
push
in
cmp
imul
lods
jp
retf
sbb
into
add
jno
push
loop
out
mov
add
pop
xor
sub
cmp
rol
aas
add
jne
push
jae
jle
div
push
xor
call
(bad)
fs
std
cli
pop
jp
bound
repnz
pop
jbe
std
call
in
shl
cmps
xchg
repnz
pop
cmp
jmp
lds
je
pusha
inc
pop
cmps
mov
pop
clc
push
mov
loopne
sar
dec
mov
int3
xchg
aad
gs
or
lods
ror
adc
cdq
mov
shl
or
xchg
clc
xor
pushf
and
aam
and
mov
cmc
test
mov
inc
(bad)
pop
adc
mov
xchg
inc
mov
sub
stos
data16
(bad)
mov
lock
push
sti
addr16
scas
jmp
jmpw
sbb
mov
cwde
cmps
aas
test
lock
iret
and
pop
retf
pop
cmp
test
cld
fmulp
jo
mov
mov
stos
adc
retf
mov
imul
movs
push
dec
and
and
scas
fs
in
outs
jp
mov
cmp
aad
push
and
add
mov
cmps
or
popa
inc
call
pop
out
xor
or
lea
int3
pop
dec
xor
pop
test
pop
sbb
shl
push
lods
bound
stc
push
or
mov
stos
popf
sub
mov
xchg
mov
js
xor
call
aam
icebp
pop
bound
sti
adc
test
mov
mov
sub
test
dec
mov
mov
lahf
mov
mov
mov
jle
or
mov
out
into
loopne
outs
lods
pop
pop
adc
or
xchg
push
sahf
mov
test
xchg
fdivp
test
retf
je
lds
xchg
sbb
js
xchg
movs
aad
ret
sbb
jbe
adc
js
loope
push
fnstsw
or
and
pop
inc
fwait
in
outs
pop
ss
pop
lahf
pushf
test
imul
cli
sbb
add
pop
or
out
push
cmp
inc
or
xchg
es
mov
mov
jns
popf
lods
movs
pop
mov
ds
xor
loop
ror
ficomp
xor
cdq
inc
xlat
pop
xchg
xor
in
add
in
xchg
add
push
ret
mov
sub
xchg
dec
add
les
add
dec
or
cmp
pop
add
cli
into
xchg
dec
clc
lock
pop
jp
jmp
mov
lahf
sbb
inc
push
iret
(bad)
lock
mov
add
lods
stos
xchg
pop
fmul
pop
mov
int
cmp
cmp
int3
pushf
or
mov
mov
sbb
lds
out
jb
cmps
jmp
push
stc
loope
pop
xchg
dec
addr16
or
xchg
push
mov
sahf
stos
rol
cmps
inc
mov
(bad)
lods
xchg
cmp
cmps
jg
outs
sbb
mov
aad
xor
gs
adc
cmp
repnz
sub
mov
push
dec
ret
call
imul
(bad)
sub
cmps
push
sub
lea
jle
cmp
scas
and
movs
int3
fsub
out
dec
aaa
(bad)
mov
aad
ret
test
lods
and
xchg
or
outs
fld
xor
fwait
dec
fs
loop
cwde
xchg
mov
sahf
or
jae
mov
movs
mov
ins
jp
or
pop
pop
retf
fisttp
xchg
stos
pusha
pop
into
xor
dec
jmp
arpl
xchg
adc
clc
test
jmp
(bad)
sbb
sub
pop
mov
lods
fst
sbb
movs
inc
or
and
call
inc
je
dec
ins
xchg
push
pop
or
(bad)
fmul
enter
in
fdiv
scas
xchg
in
push
pop
fdiv
mov
pop
or
or
imul
and
dec
mov
shr
cld
jne
cmps
popa
cwde
dec
arpl
ja
gs
or
scas
popf
jo
test
and
rol
test
cli
push
inc
fdiv
xor
dec
add
pop
into
sub
aam
or
sub
cmp
(bad)
mov
sub
movs
adc
repnz
and
pop
addr16
cmp
pop
jmp
push
call
daa
dec
jmp
shr
inc
inc
neg
aas
inc
outs
push
stc
hlt
adc
rol
stos
xor
push
adc
pop
push
pop
imul
icebp
add
in
in
in
add
leave
and
sub
jo
and
inc
fnsetpm(287
jecxz
(bad)
fsubr
stos
push
cmp
inc
mov
daa
push
(bad)
or
retf
cmp
add
retf
jmp
test
movs
loop
aad
mov
xchg
ins
int3
je
(bad)
iret
or
sub
ss
in
sbb
cmp
movs
mov
neg
mov
leave
retf
inc
inc
mov
aam
lods
xor
sub
dec
or
or
out
into
repnz
add
cmp
test
popf
cmp
push
loopne
pop
outs
add
push
es
pop
jge
retf
ds
dec
pop
xor
sbb
pop
cwde
xor
dec
ins
jmp
jle
imul
and
sar
icebp
mov
jnp
int3
jo
fist
lea
dec
xor
lods
pop
sbb
lods
xor
pop
test
lods
fs
adc
call
cmc
aad
test
mov
lods
arpl
ret
sbb
(bad)
cmp
movs
aas
push
iret
mov
xchg
scas
mov
or
mov
(bad)
sub
cwde
aam
mov
inc
inc
aas
push
loop
sbb
sub
adc
(bad)
hlt
in
hlt
mov
mov
cmp
inc
xor
push
scas
cmp
iret
sti
inc
mov
dec
jp
or
mov
pop
sub
(bad)
jno
push
push
xor
add
push
shr
xor
clc
(bad)
ins
fst
and
inc
jp
inc
out
ficom
mov
xor
les
mov
js
outs
ins
and
xor
(bad)
pop
add
sub
popa
and
(bad)
int3
cdq
lds
es
xor
jle
scas
ds
aad
pop
pop
pop
xchg
jmp
stos
in
mov
cmc
jmp
mov
outs
push
add
adc
test
pop
sbb
push
inc
mov
pop
enter
mov
ret
loop
sbb
sub
test
outs
jbe
xchg
hlt
idiv
inc
lock
ret
and
add
mov
lock
cs
and
xchg
add
rol
pop
cmps
add
cmps
jne
and
inc
aas
das
fistp
jo
add
repnz
adc
jmp
and
mov
stos
dec
xchg
xchg
mov
lds
push
clc
jno
sbb
xor
outs
imul
inc
push
es
pushf
bound
pop
jg
cmp
int
push
ret
push
or
sbb
dec
call
pop
add
lock
jl
loope
call
pop
push
inc
or
mov
pop
in
cmp
pushf
adc
jmp
xchg
pop
mov
fs
stos
je
in
mov
sbb
ror
pop
sbb
adc
popf
vpextrw
mov
enter
xchg
lea
ja
mov
dec
xor
aam
das
mov
ins
xor
enter
out
shr
xchg
ins
inc
xchg
sbb
ds
mov
or
ret
enter
jbe
bound
sub
mov
sbb
les
int3
jecxz
lods
inc
cmc
push
shl
push
pop
push
pop
sub
push
test
nop
xor
pop
stc
xchg
jno
cld
mov
bound
(bad)
jo
mov
lock
out
adc
or
sbb
vsqrtss
jg
push
jg
call
das
and
cmp
sbb
call
clc
xchg
aaa
in
sti
(bad)
sub
icebp
jmp
arpl
dec
or
fs
jne
rol
stos
adc
mov
std
and
cwde
xchg
fist
es
fnsave
gs
bound
or
(bad)
push
inc
ds
pop
sub
sub
jns
mov
jno
scas
sub
test
xor
shr
fiadd
das
mov
arpl
inc
jbe
aas
or
es
or
jp
mov
sub
scas
test
fisttp
add
sbb
daa
lods
retf
mov
mov
and
aaa
inc
pop
test
test
or
popw
cs
jl
jg
sbb
jmp
jne
daa
cmp
or
rcr
xchg
mov
or
test
mov
lods
add
bound
call
jecxz
icebp
nop
fld
sub
jecxz
scas
dec
xlat
jne
push
jns
gs
push
in
aad
aad
std
push
lahf
jnp
in
(bad)
mov
movs
mov
(bad)
aad
aaa
aas
xchg
aaa
lods
mov
out
jmp
fcomp
outs
(bad)
or
out
jle
inc
xor
fcomp
jae
mov
outs
ret
pusha
cmp
lock
push
mov
stos
xchg
push
mov
push
repz
mov
fisttp
call
sysexit
pop
fsubr
xor
push
out
jmp
sbb
or
push
cmp
pop
fidivr
fist
jae
jl
idiv
test
add
inc
jne
sub
mov
call
rcl
aad
test
test
fist
inc
test
mov
ds
fdivr
adc
add
mov
cld
and
and
jae
mov
mov
into
xchg
mov
dec
mov
sub
in
retf
jno
and
repz
xchg
add
fnstsw
aaa
jmp
fwait
fs
xor
dec
aam
or
and
cs
adc
das
xor
fsubr
ret
inc
cmp
push
dec
xchg
je
sbb
out
ror
mov
dec
dec
mov
adc
out
daa
out
and
int3
enter
or
cmps
les
xor
sub
data16
push
shl
cmps
(bad)
xchg
jmp
push
ss
adc
xlat
fnstenv
shl
pop
aas
test
dec
cli
dec
clc
mov
sti
jle
inc
retf
ins
and
sbb
int
loop
push
loope
or
mov
(bad)
test
xchg
mov
(bad)
push
outs
push
add
adc
mov
rcl
lds
pop
adc
leave
push
mov
sbb
dec
scas
enter
fsubr
sbb
jmp
cmp
inc
push
xchg
cmps
sub
into
aam
mov
out
out
inc
pusha
ins
ins
pop
imul
mov
xchg
inc
push
mov
les
dec
mov
xchg
pop
xlat
pop
push
call
sub
mov
add
mov
sbb
inc
clc
push
gs
sbb
and
ss
sbb
mov
jno
sbb
sub
jae
pop
imul
test
mov
mov
in
into
pop
mov
out
dec
inc
mov
aad
ins
mov
js
nop
jns
sbb
pop
add
mov
push
ror
outs
cs
call
aad
or
sub
inc
dec
gs
pop
jp
nop
loope
repz
test
mov
and
xor
outs
int
mov
and
pop
mov
add
adc
add
clc
pop
retf
adc
cwde
rol
mov
idiv
and
daa
stc
xchg
hlt
push
or
push
mov
les
or
cld
sti
jmp
dec
shl
stc
and
cld
inc
mov
fist
fistp
test
dec
mov
fadd
dec
and
xlat
push
lahf
push
push
jo
inc
sub
pop
std
pop
test
iret
outs
xor
jnp
jg
ds
cmps
inc
out
stc
aam
mov
sub
movs
fcomp
(bad)
jmp
jns
sbb
adc
jmp
mov
push
cli
xor
mov
out
dec
sub
push
lods
and
ret
and
add
test
inc
rol
(bad)
and
loope
call
pop
clc
aaa
rcl
xlat
mov
jnp
add
sub
pusha
mov
js
ss
sub
mov
shl
arpl
xlat
(bad)
into
ja
movs
inc
push
shl
mov
and
push
pop
lds
jmp
sbb
xor
(bad)
push
(bad)
xchg
adc
pusha
adc
sbb
dec
leave
jmp
in
cmp
scas
pop
leave
cmps
ret
retf
adc
mov
push
xor
jnp
and
pop
or
or
out
sub
jmp
ror
jne
mov
pop
popa
fs
fsubr
xor
pop
out
aas
outs
jae
adc
sahf
ja
jle
adc
clc
cmp
dec
push
jbe
xchg
pop
xlat
xor
sub
popf
mov
push
and
lock
lea
lds
lods
leave
test
or
jno
aaa
(bad)
push
lea
jbe
fisubr
pop
(bad)
je
pop
add
sbb
clc
imul
mov
jo
inc
xor
or
pop
push
xchg
mov
adc
rcr
dec
repz
adc
add
pop
test
jg
xchg
dec
inc
icebp
adc
push
not
dec
std
imul
hlt
test
dec
sub
cmp
jbe
xor
mov
imul
data16
retf
cmp
and
pop
pop
dec
jg
das
xchg
dec
xchg
retf
ret
imul
cmp
bound
sbb
in
mov
mov
adc
add
or
mov
push
jns
and
push
lahf
out
dec
and
fild
pop
push
fist
(bad)
bound
sbb
dec
pop
lods
(bad)
sbb
shl
adc
mov
jne
and
out
mov
shl
inc
test
shr
aaa
pop
rcr
out
xor
and
add
call
mov
and
mov
dec
ins
cmp
sub
clc
in
test
xchg
sub
cli
jno
push
push
(bad)
sub
loop
movs
xor
and
in
jmp
push
mov
adc
in
pop
mov
push
mov
push
add
(bad)
xor
push
sbb
mov
xlat
rcl
jno
mov
daa
adc
repz
and
sbb
or
ins
ror
ret
neg
loopne
out
inc
or
inc
lods
sub
in
shl
fincstp
addr16
in
ja
es
shr
test
add
fisubr
mov
pop
ins
xor
jg
jns
syscall
lds
(bad)
lods
push
xor
movs
mov
mov
retf
mov
aaa
mov
jmp
in
jnp
mov
sub
xchg
bound
das
inc
dec
jp
jge
inc
and
mov
inc
mov
outs
scas
push
jmp
mov
inc
sub
and
sub
or
cmp
inc
stos
cmp
call
ins
sub
imul
ja
cmp
ret
cwde
mov
sbb
push
lahf
mov
ret
hlt
loop
cmps
sub
sbb
ins
mov
ins
sub
fnsave
dec
loopne
retf
sar
sub
xchg
inc
xchg
mov
push
scas
xlat
mov
popa
arpl
out
xchg
call
mov
dec
scas
pusha
mov
dec
addr16
pop
and
jp
cmp
shr
xor
mov
std
jmp
addr16
(bad)
int
dec
pop
adc
jmp
sbb
pop
mov
inc
ins
sbb
movs
mov
jmp
mov
sub
jmp
call
enter
or
in
jecxz
jp
mov
mov
(bad)
cmp
push
iret
icebp
xor
xor
pop
(bad)
test
popf
sti
adc
dec
fdivr
jp
loopne
and
fs
sub
test
(bad)
bound
out
ins
int
(bad)
adc
jp
xor
ror
sub
ins
dec
ret
cmp
rcl
aam
call
in
mov
or
shl
cwde
in
movs
sar
popf
mov
xchg
pop
lock
pop
xor
push
mov
or
dec
or
les
xchg
clc
in
test
pop
pop
ss
mov
cmp
sub
popf
xchg
popa
ins
jno
jno
pop
out
inc
adc
lods
into
leave
or
push
inc
ins
push
cwde
xchg
mov
or
xor
xchg
cs
pushf
int3
(bad)
rcl
das
pause
bswap
imul
cs
sbb
jecxz
or
pop
jp
(bad)
jno
int3
jmp
mov
or
out
shr
add
jbe
retf
cwde
cmp
inc
in
or
adc
cwde
push
ret
xor
retf
das
pop
into
and
xor
rcl
or
ja
ficom
pop
mov
and
ins
push
xor
bound
push
mov
stos
mov
in
and
bswap
sbb
pop
mov
or
adc
outs
mov
and
lods
test
pop
mul
imul
mov
xchg
sbb
rol
push
mov
pushf
cmps
mov
xlat
sbb
ret
sbb
push
jmp
add
jbe
or
popa
mov
cli
fwait
sbb
cli
mov
jmp
jp
fdivr
movs
push
push
sbb
sub
scas
sbb
(bad)
xlat
xchg
inc
outs
pop
test
icebp
lods
adc
xor
ficom
stos
or
ins
sub
inc
(bad)
repnz
sbb
xchg
rcr
iret
aaa
popa
push
jb
mov
pop
or
jno
stos
cld
or
jne
aam
jne
pop
mov
sub
(bad)
mov
mov
xchg
daa
sub
pop
xchg
lea
dec
push
retf
in
test
addr16
(bad)
arpl
fcmovne
test
xchg
mov
dec
dec
pusha
xchg
mov
push
mov
xor
jl
mov
ficomp
and
fistp
es
push
(bad)
shr
cmp
mov
pop
push
cmp
cli
(bad)
lock
int
je
imul
sub
pop
loop
icebp
jne
dec
push
mov
int
add
shl
push
sbb
lods
or
jno
and
xlat
xchg
inc
push
inc
or
fstp
adc
int3
arpl
cmc
sbb
nop
ret
retf
mov
adc
in
(bad)
cmc
adc
lds
pop
pushf
pop
inc
or
mov
jg
or
mov
sahf
(bad)
ss
repnz
or
inc
sub
jl
pop
sbb
stos
mov
dec
push
dec
jge
jb
jl
xchg
or
(bad)
(bad)
sar
adc
mov
out
mov
lods
ins
popa
rol
fist
loopne
(bad)
jp
mov
pop
loopne
sub
cdq
sbb
jmp
mov
loope
shl
sbb
lods
sub
mov
mov
jge
and
in
xchg
inc
test
mov
xor
(bad)
out
push
or
cmc
hlt
aas
aas
cld
mov
add
pop
jae
sub
stc
mov
lea
pop
mov
cmp
jge
fnsave
test
cwde
jl
stc
mov
ror
jmp
aam
dec
icebp
pop
test
mov
(bad)
fild
sub
sub
push
je
push
popa
sar
sbb
stos
sbb
imul
mov
sbb
ret
test
or
xchg
mov
div
mov
loope
and
mov
mov
sub
jne
mov
enter
shl
cmps
push
bound
lods
push
leave
xchg
push
std
stc
and
mov
rcl
loop
mov
sar
rcl
xor
mov
pushf
sbb
adc
pop
fnstenv
jmp
lods
or
dec
xor
fistp
push
push
sub
xor
mov
pop
imul
inc
mov
fdiv
in
add
add
test
adc
cmp
sub
test
shr
mov
push
dec
inc
mov
dec
fwait
cmp
dec
out
pop
xchg
rol
inc
mov
adc
push
jno
(bad)
ds
or
inc
adc
dec
pop
daa
dec
fwait
jbe
or
push
jecxz
jne
pop
sbb
(bad)
das
mov
push
es
in
mov
dec
imul
xor
add
mov
mov
dec
or
mov
sub
daa
les
test
mov
mov
in
or
sub
push
xor
and
mov
in
shl
sbb
mov
(bad)
jne
sbb
mov
mov
jecxz
ficom
test
or
call
popf
(bad)
into
test
mov
adc
ret
sar
stos
test
mov
adc
cmp
xor
ret
push
xchg
clc
mov
jge
aaa
retf
in
add
inc
ins
pushf
xor
int
into
pop
jae
outs
xchg
pusha
fist
or
push
push
adc
fldenv
sub
mov
test
ja
dec
mov
ret
push
(bad)
push
repz
arpl
push
mov
dec
repz
add
push
retf
ret
imul
iret
push
(bad)
cs
cs
call
(bad)
pop
hlt
push
pop
shl
and
enter
dec
and
and
xchg
xchg
shl
(bad)
cmps
cmp
aaa
cmp
movs
imul
xchg
imul
dec
add
mov
push
fnsave
cwde
adc
dec
or
adc
mov
or
retf
mov
cli
cdq
loope
enter
aam
xor
neg
mov
mov
mov
dec
dec
xor
xchg
test
(bad)
sub
cmp
push
outs
pop
xor
das
mov
cli
push
xor
push
lea
inc
push
sti
in
jg
movs
and
ret
inc
pusha
imul
sbb
push
mov
test
or
sahf
or
push
aaa
sbb
fst
(bad)
not
call
rol
(bad)
pop
mov
jp
inc
cli
scas
enter
mov
(bad)
in
add
mov
ja
arpl
ret
cmps
dec
and
push
sub
and
xlat
xchg
or
inc
sti
jb
xchg
lahf
neg
out
leave
(bad)
lds
cmp
inc
dec
mov
mov
pop
fdiv
outs
into
cmc
dec
pop
(bad)
cwde
or
jae
push
sub
int
or
dec
pop
jmp
mov
mov
movs
out
mov
sbb
iret
enter
jmp
push
sub
xor
and
call
xor
retf
into
xchg
sub
enter
add
mov
ret
call
(bad)
mov
xchg
and
aam
lahf
fnstsw
jno
repz
pop
ins
mov
pop
push
and
test
fnstsw
out
sub
push
mov
or
hlt
adc
loop
loopne
gs
aas
repnz
inc
and
cdq
sub
leave
mul
mov
das
gs
in
and
aaa
addr16
sub
or
fcmovnu
mov
loope
sahf
fmul
int
mov
pop
mov
sbb
xor
cld
pop
sub
cmp
(bad)
enter
xchg
mov
jmp
mov
rol
pop
scas
imul
imul
and
in
cmp
inc
pop
mov
les
push
add
leave
or
retf
mov
pop
inc
and
jnp
in
jnp
push
mov
cmp
and
in
mov
adc
inc
loop
test
into
aas
mov
mov
ret
(bad)
jecxz
not
jns
loop
and
mov
bound
sti
mov
pushf
cld
xchg
or
repnz
add
xor
mov
lahf
fs
out
cmp
cmovb
dec
mov
dec
test
movs
enter
idiv
jnp
cwde
dec
jb
sub
stc
jns
xor
mul
(bad)
div
scas
adc
inc
(bad)
mov
mov
sub
and
mov
mov
es
lds
outs
sub
xor
and
add
lahf
movs
adc
loop
scas
cwde
jns
dec
cdq
std
push
push
test
cs
mov
cs
sub
fiadd
dec
addr16
adc
cli
dec
add
mov
push
rcr
jnp
cs
or
std
sti
pop
mov
mov
fld
imul
jmp
dec
dec
scas
mov
mov
repnz
inc
pushf
fwait
gs
aaa
fidiv
pop
ds
pop
int
pop
fs
jae
out
mov
mov
test
dec
loope
dec
std
add
jnp
mov
lea
mov
in
adc
cmp
sub
mov
int
xchg
int
cmps
cmp
pop
out
fistp
xor
push
mov
cmp
xor
xor
addr16
xchg
lods
jg
aas
retf
dec
sub
mov
iret
jno
jmp
fdiv
popa
xor
mov
ret
jbe
sbb
cdq
in
xchg
cmp
(bad)
js
(bad)
and
xor
(bad)
mov
ja
(bad)
sub
or
jg
mov
gs
sti
mov
jle
fldcw
fbld
into
ins
push
(bad)
xor
mov
dec
outs
jne
mov
lods
xchg
ins
cmp
xor
sub
sub
mov
jns
clc
pop
pop
lods
sbb
push
test
adc
imul
push
pop
div
cmp
or
ret
lods
mov
icebp
pop
sahf
mov
imul
push
scas
dec
imul
push
xor
mov
add
test
jnp
movs
push
(bad)
sti
retf
lds
fldcw
scas
rcr
mov
mov
cmp
push
mov
out
lods
cmp
and
(bad)
pop
ds
pop
icebp
sbb
jne
inc
push
mov
cmc
int
into
jg
pop
xchg
inc
push
mov
xor
sub
mov
popa
shl
xchg
inc
cmp
jno
enter
mov
outs
dec
push
ret
push
ins
out
repnz
adc
cld
jle
dec
cmp
out
sbb
js
mov
mov
out
lahf
sub
mov
pop
xor
jle
pop
mov
cmps
out
jo
adc
out
jg
inc
idiv
inc
dec
test
pop
js
nop
mov
mov
jno
retf
sbb
dec
cli
enter
dec
sub
mov
and
in
fwait
dec
sbb
sbb
std
cmp
popf
into
inc
sub
inc
gs
not
pop
jmp
or
loopne
cmp
adc
int3
dec
ror
ds
and
push
jecxz
aad
into
push
xor
inc
xchg
mov
mov
or
test
mov
(bad)
adc
loopne
jge
inc
in
and
test
mov
xchg
fcom
int
jae
nop
mov
pop
loopne
nop
mov
(bad)
imul
push
jne
and
mov
out
retf
gs
mov
loop
pause
inc
aas
jnp
retf
jnp
pop
mov
or
mov
repnz
cmps
sbb
pop
data16
mov
repnz
push
imul
rcr
cmp
mov
popf
repnz
aas
jnp
jb
dec
scas
jp
in
scas
xchg
ins
jg
hlt
aaa
mov
xchg
xchg
fisub
fs
cmps
jnp
push
lods
xor
(bad)
jmp
bound
cmp
mov
jno
push
cmc
dec
push
jnp
push
leave
stc
into
retf
adc
rcr
mov
std
or
mov
mov
cwde
jnp
outs
and
jne
movs
ret
inc
dec
je
in
stos
push
jnp
dec
leave
jbe
dec
fdivp
inc
xchg
sbb
cmc
xor
cmp
push
mov
sub
aas
shl
fucomp
xchg
mov
mov
inc
cld
xchg
test
sahf
xchg
cwde
loopne
out
iret
mov
icebp
mov
test
fistp
imul
adc
(bad)
dec
push
jmp
sub
dec
mov
ss
and
and
scas
dec
mov
ins
pop
jo
cmp
xchg
(bad)
ins
mov
stc
test
mov
iret
out
adc
outs
push
fcmovu
jl
sar
ret
add
and
fidiv
cmp
repnz
add
nop
stc
in
push
and
add
and
stc
int
fbld
xor
xchg
shl
lods
sbb
js
mov
adc
in
jbe
sbb
fistp
mov
ja
sub
mov
outs
(bad)
adc
jmp
inc
stc
(bad)
xchg
cmp
lock
clc
push
push
push
mov
jge
lds
repz
inc
mov
xor
dec
aaa
arpl
jns
and
adc
fisubr
nop
hlt
cmp
pop
jp
jae
lahf
or
mov
mov
adc
je
shr
fist
out
xchg
mov
popf
cmp
or
stc
gs
xchg
xor
test
das
inc
dec
mov
mov
cmps
push
loopne
das
sbb
out
xchg
das
shl
pop
lods
test
test
sbb
add
inc
loop
sti
inc
stos
mov
mov
pusha
aaa
adc
sub
pop
xor
or
rcl
call
and
std
xchg
dec
stos
mov
dec
sub
sar
out
ss
cmp
nop
adc
sbb
pop
jecxz
jo
add
fisubr
mov
lds
mov
call
adc
(bad)
dec
movs
fcomp
sub
jmp
stos
adc
test
aad
test
(bad)
cld
ins
pop
retf
out
add
push
inc
jecxz
ins
movs
cdq
movs
fs
fimul
sbb
repnz
xor
lock
dec
cmc
jb
call
shl
les
inc
jecxz
add
dec
adc
lock
test
popf
test
cmp
sbb
scas
add
pop
mov
mov
or
push
xchg
push
add
xchg
mov
adc
in
sub
inc
dec
dec
pop
shl
lea
sub
jb
add
into
fs
aam
int
aas
daa
int3
pop
je
loope
ret
idiv
je
into
mov
int3
add
mov
inc
ret
mov
repz
and
mov
xor
dec
adc
lock
lock
push
mov
je
cmc
sar
pop
xchg
jne
jns
popf
addr16
dec
mov
shl
aas
push
mov
in
mov
pop
jecxz
push
adc
setle
lods
jnp
pusha
sub
ins
mov
mov
pop
xor
in
jmp
mov
es
add
das
ret
fwait
and
add
jae
div
test
jne
sti
neg
pusha
test
test
pop
pop
ja
xchg
sbb
or
add
cmp
sti
fnstenv
dec
mov
adc
and
xchg
test
shr
das
ja
loopne
xlat
jmp
mov
jecxz
adc
ret
rol
dec
(bad)
pop
jae
(bad)
dec
adc
les
outs
ja
shl
int
lds
push
jle
popa
loopne
rol
jns
call
lods
mov
sbb
fild
mov
clc
cs
gs
ins
enter
inc
fld
int3
hlt
add
xchg
sbb
lods
jmp
lds
pusha
and
mul
icebp
fisubr
ficom
mov
add
add
test
jbe
dec
dec
dec
test
xchg
fcomp
imul
ds
jnp
and
mov
xchg
jg
adc
add
je
movs
inc
jne
daa
xor
cmc
jp
mov
sti
hlt
push
xor
cwde
test
iret
push
scas
addr16
fsubr
xor
fwait
add
mov
in
xor
out
lea
push
inc
push
movs
push
jb
mov
loopne
pop
push
in
aam
(bad)
js
and
fdiv
sbb
(bad)
jns
addr16
push
dec
sbb
push
jge
inc
or
mov
(bad)
shl
repnz
mov
repz
or
idiv
(bad)
ds
pushf
loop
mov
fs
and
jecxz
ror
leave
repnz
(bad)
sub
adc
jp
test
imul
mov
stos
add
test
lea
mov
mov
sbb
inc
test
sub
add
mov
out
mov
pop
sbb
fiadd
sub
mov
mov
sub
adc
fdivr
iret
mov
mov
pop
mov
and
std
push
or
jne
es
sub
mov
rcl
dec
adc
int
movs
iret
xchg
adc
jb
out
movs
mul
sar
in
jo
mov
icebp
fwait
xchg
xor
jl
sub
aad
jecxz
inc
or
sti
lock
pop
and
(bad)
call
in
mov
mov
xor
js
aaa
inc
xor
push
cmp
ret
ins
pop
inc
mov
out
fstp
push
lods
clc
cdq
sub
sbb
pop
jb
pop
test
mov
ret
(bad)
pushf
(bad)
loop
mov
cmc
lahf
adc
aam
dec
daa
xchg
inc
mov
shl
or
(bad)
cwde
ret
add
fsubr
shl
les
xchg
cmc
inc
je
std
sub
sbb
ins
push
adc
iret
(bad)
fxch
data16
xor
iret
mov
mov
xor
cld
inc
cmp
cmps
mov
neg
and
in
xor
fild
mov
lds
mov
jp
adc
push
jge
sbb
imul
aam
(bad)
popa
push
add
sbb
mov
bound
adc
sub
add
shl
jecxz
xlat
ss
pop
leave
sub
div
push
push
inc
mov
mov
xor
call
call
add
fimul
cmp
cmc
jmp
inc
and
adc
adc
jp
int
adc
mov
pop
pop
and
ret
mov
push
sbb
and
jmp
stos
adc
xchg
dec
fisttp
and
mov
test
repnz
je
test
cli
jecxz
in
add
cs
mov
inc
adc
mov
cmp
mov
push
in
pop
or
and
add
stos
popa
mov
mov
pop
push
call
push
ja
xlat
ins
in
out
gs
mov
pop
cwde
xor
dec
or
out
repnz
mov
retf
gs
sbb
push
mov
loope
cmp
in
pusha
data16
adc
or
fmulp
fcmovne
xor
aaa
les
mov
test
mov
add
pop
jne
hlt
pushf
adc
cdq
rol
mov
mov
clc
push
xchg
xor
nop
sbb
fsubr
fucomi
jmp
xchg
scas
or
pop
inc
adc
out
out
pushf
xchg
adc
enter
add
mov
ins
call
cdq
xchg
jb
jmp
clc
cmp
lods
sahf
aaa
loope
fstp
fcomi
pop
pop
and
dec
xchg
loopne
push
jle
mov
icebp
imul
or
inc
fwait
add
pop
rol
mov
arpl
jle
xchg
dec
xlat
nop
push
call
add
js
or
out
fsub
sti
jle
pop
push
dec
es
dec
in
sbb
jno
jmp
mov
retf
cmps
adc
loop
idiv
xor
pop
mov
jno
nop
imul
(bad)
jle
cmp
xchg
jmp
popf
push
enter
je
mov
stos
sbb
xchg
push
arpl
mov
xor
xor
addr16
arpl
repz
sub
mov
cwde
push
sbb
sbb
push
adc
push
sub
call
xor
test
out
push
sbb
mov
cmp
cmp
xor
pop
jnp
cmps
(bad)
xchg
push
jbe
shl
popa
mov
add
jecxz
call
pop
gs
jns
add
cmc
jb
and
aad
pop
push
repnz
lods
xchg
mov
and
call
cmc
mov
adc
clc
push
pop
jle
test
xor
(bad)
dec
loope
fadd
loop
dec
popf
lahf
push
test
mov
inc
arpl
push
out
inc
fsub
adc
mov
mov
push
add
mov
push
ret
mov
mov
out
jbe
fdivr
push
test
adc
cmp
pop
mov
fisubr
(bad)
jp
mov
xor
mov
cmp
xor
aaa
lahf
push
cwde
inc
popf
stos
xchg
fwait
sub
push
fwait
mov
pop
sub
cmp
xchg
cdq
inc
daa
cmp
sbb
daa
cmp
fidivr
test
adc
inc
dec
pop
cmps
inc
add
sub
mov
out
nop
sahf
popa
outs
inc
and
sbb
jmp
xchg
es
lods
mov
and
outs
xchg
push
aas
shl
fdiv
addr16
pop
push
ficom
jp
adc
mov
inc
loop
pop
int
outs
adc
test
mov
cmp
fwait
sub
retf
push
ds
shl
and
jbe
test
or
lock
fiadd
or
loopne
inc
dec
inc
mov
xor
jno
enter
inc
test
dec
adc
leave
push
mov
fistp
dec
mov
aad
push
fistp
popf
imul
xor
mov
arpl
shl
lock
cmp
inc
add
add
fcom
rcr
out
shl
cmp
into
dec
fmul
pop
pop
lods
in
add
pop
in
xchg
pop
adc
int
dec
push
test
cs
xchg
das
mov
sbb
ds
jle
sbb
fst
mov
jecxz
jns
cwde
xchg
aas
in
mov
in
inc
xor
sub
pop
ret
es
fst
repz
adc
jg
jle
lds
jp
adc
(bad)
or
jae
inc
xor
add
inc
neg
pop
sbb
out
scas
repz
xor
push
in
icebp
inc
fld
jmp
call
push
cmp
push
mov
adc
add
sub
adc
std
add
inc
retf
(bad)
adc
mov
xchg
int3
popf
(bad)
fisub
loope
ficom
loop
sbb
out
push
sti
mov
or
nop
cwde
punpckhwd
and
mov
es
popa
out
(bad)
dec
push
pop
fisub
xlat
ja
add
sbb
mov
cwde
mov
(bad)
sbb
popa
movs
push
adc
out
out
dec
cmp
std
fstp
dec
push
sbb
inc
sub
mov
dec
pop
fisubr
call
mov
mov
dec
cs
mov
hlt
xchg
pop
add
inc
inc
loop
inc
daa
test
pushf
rol
jle
push
mov
pusha
pop
call
ret
pop
xor
fwait
jno
es
sbb
pop
push
inc
inc
cmp
inc
sub
xlat
push
enter
sub
dec
xchg
mov
rol
xlat
dec
rol
xor
arpl
xlat
xor
aad
inc
test
push
add
hlt
out
dec
mov
adc
inc
xor
das
sub
std
or
fwait
mov
add
(bad)
or
stc
imul
rol
sti
aas
mov
lods
and
lahf
cs
xor
leave
xchg
dec
addr16
jle
cmp
aas
push
aad
jnp
leave
mov
inc
mov
rol
je
cmp
add
int
movs
cmc
mov
jbe
je
jne
and
pop
pop
fadd
xchg
retf
xlat
aaa
cmc
xor
out
adc
jb
dec
pop
lods
jmp
pop
jo
call
(bad)
mov
mov
adc
daa
(bad)
icebp
scas
rcr
add
or
adc
(bad)
xchg
adc
cmp
xchg
jecxz
pusha
jecxz
mov
pusha
mov
outs
sub
movs
push
(bad)
scas
sub
pop
mov
cdq
mov
mov
jge
(bad)
push
or
inc
and
aad
mov
in
add
mov
into
test
cwde
mov
dec
mov
mov
popf
retf
sbb
and
les
repnz
xchg
inc
(bad)
xor
jnp
add
pop
cs
push
fcom
in
test
jmp
jmp
pop
jmp
and
xor
mov
dec
dec
loopne
cmc
sahf
in
push
xor
fs
fs
test
or
sbb
mov
inc
repz
sub
clc
cmp
aam
xchg
mov
loope
mov
inc
fnsave
inc
je
cmp
sbb
into
clc
mov
or
inc
mov
pop
imul
and
aas
cld
mov
jo
mov
xor
fmul
(bad)
pushf
rcr
scas
cmps
clc
call
ja
dec
lsl
sub
push
call
jle
call
fdiv
jae
xor
mov
arpl
push
and
cmp
sub
xchg
add
sahf
cli
out
cmps
loop
xchg
push
test
cdq
cmp
aas
xor
ss
mov
pop
stos
adc
adc
dec
ins
mov
cmp
sub
imul
int3
or
push
mov
shr
adc
imul
pushf
shr
mov
pop
xchg
js
mov
inc
jbe
aas
push
loop
jle
ror
in
mov
lock
jno
ss
(bad)
cmp
dec
fbld
sbb
mov
pop
push
js
out
daa
in
add
pop
jnp
mov
lock
ror
push
sbb
es
jae
adc
and
clc
lahf
add
mov
btr
jmp
mov
xor
mov
(bad)
cmp
scas
bound
retf
or
jae
mov
mov
test
mov
pop
cmp
cmp
jmp
jmp
pop
push
popa
scas
bound
test
jns
mov
push
jb
mov
mov
jge
xchg
add
sub
xchg
call
mov
fild
pop
jmp
mov
xor
mov
pop
xor
push
retf
push
add
mov
mov
dec
mov
pop
cmp
ins
scas
out
inc
(bad)
int3
push
and
(bad)
dec
mov
cmp
dec
outs
neg
add
das
sub
(bad)
fs
imul
aaa
mov
adc
std
or
popa
adc
je
outs
dec
sub
mov
dec
jb
sti
mov
and
aam
lds
fstp
cmps
dec
mov
daa
or
ret
push
jae
popf
pop
jno
adc
stos
sbb
mov
sbb
cmp
fadd
fidiv
xor
mov
mov
outs
ds
in
push
sub
mov
inc
test
sbb
and
sahf
jge
ret
adc
dec
inc
sahf
out
jmp
sub
push
fwait
pop
jmp
in
mov
push
loope
add
jl
jbe
cmp
inc
es
(bad)
add
rcl
xor
pop
sbb
xor
jae
mov
aam
pop
nop
and
loope
adc
xor
push
gs
cmp
jge
lock
inc
mov
mov
jne
dec
sbb
vscatterpf1qpd
mov
mov
or
mov
mov
mov
out
inc
sti
fadd
in
(bad)
shl
xor
in
outs
addr16
call
dec
addr16
retf
mov
mov
inc
xchg
lods
hlt
lahf
mov
mov
mov
cmc
xchg
cmp
out
clc
call
or
push
sbb
or
sar
adc
iret
pop
add
inc
je
add
xor
adc
das
fninit
test
dec
into
xor
inc
cdq
cld
fidivr
mov
add
mov
push
int3
(bad)
fist
dec
je
fcomp
push
stos
pop
jl
mov
fcomi
mov
imul
mov
dec
mov
xchg
jne
jle
fsub
into
pop
mov
scas
push
adc
cmp
mov
test
test
mov
(bad)
lock
(bad)
jle
pop
jp
clc
xchg
fld
shl
add
sub
daa
add
add
adc
pop
int3
cmc
imul
and
push
or
add
dec
push
(bad)
mov
sbb
ins
dec
mov
or
push
jle
(bad)
std
xchg
retf
dec
lfence
jmp
scas
shl
cli
dec
movs
inc
jo
add
pop
arpl
inc
mov
xchg
sub
mov
xchg
push
mov
add
(bad)
adc
gs
jecxz
int3
inc
je
jg
in
add
fbld
(bad)
push
loope
sbb
and
xor
xor
fimul
jbe
xchg
xchg
icebp
fld
daa
inc
adc
test
paddsw
mov
es
pop
jp
bound
mov
or
jmp
and
nop
fadd
stos
add
mov
aaa
dec
pop
push
stc
stos
repz
mov
mov
popa
fisubr
jge
push
pop
inc
mov
push
into
aas
and
ds
test
aam
xchg
popf
neg
repz
push
cmc
int
jae
int3
xor
call
aam
inc
(bad)
push
mov
sbb
sbb
xchg
mov
retf
sub
pop
fistp
out
repnz
pop
cmp
mov
lock
jecxz
cmps
pop
mov
mov
sub
mov
out
or
das
pop
sbb
stos
sbb
je
jecxz
mov
mov
movs
mov
add
bound
push
(bad)
arpl
bnd
jg
int
pop
leave
test
push
cld
jle
sar
in
out
iret
lods
dec
cmp
pop
xor
popf
sbb
jbe
inc
rol
retf
jne
fs
(bad)
push
dec
aaa
aad
pop
test
cmp
mov
push
aas
pop
mov
mov
rol
mov
pop
(bad)
fldcw
mov
push
cs
cmp
popf
jl
sbb
and
sbb
xor
mov
out
enter
sub
vpsadbw
pop
pop
mov
mov
fwait
mov
aad
cmc
cld
pop
mov
mov
adc
push
cld
jp
ds
jne
jmp
icebp
or
cmp
pushf
inc
(bad)
mov
adc
loope
cmp
test
(bad)
daa
ret
and
and
xchg
rcl
jo
repnz
dec
ret
ins
jo
add
outs
cli
push
pop
cmps
lods
fdivr
jo
cmp
or
ss
mov
or
xchg
push
adc
jno
or
cmps
clc
or
push
and
out
and
int3
repnz
int
(bad)
rcr
lods
in
inc
fwait
cld
and
mov
call
xchg
lods
in
jno
sub
popa
lea
xor
(bad)
xlat
outs
adc
and
aaa
push
sub
test
jo
bound
xor
mov
rcr
xchg
popa
jae
retf
cmp
pop
shl
je
loopne
leave
mov
(bad)
js
call
fimul
mov
enter
icebp
xchg
les
data16
pop
scas
ja
call
call
push
push
and
out
imul
out
shl
sub
shl
test
xchg
into
push
mov
mov
and
push
inc
jbe
(bad)
fdivr
add
cld
pop
jno
jmp
icebp
pop
mov
add
sub
movs
add
adc
pop
or
sub
addr16
test
xchg
jb
push
sub
shl
arpl
vphaddubd
jge
cdq
jle
mov
fwait
ret
pop
push
sar
sub
out
aas
xchg
ss
retf
sbb
xor
push
push
stos
sbb
dec
mov
aad
dec
jge
lods
mov
adc
jbe
(bad)
jmp
pop
xchg
xor
mov
jbe
ja
mov
pop
ror
adc
pop
xor
push
or
leave
inc
enter
jne
mov
cmp
sub
aas
ins
sub
sbb
idiv
mov
mov
xor
inc
add
inc
jp
lds
mov
(bad)
push
or
cs
push
push
psubb
xor
inc
out
test
rol
cmp
test
mov
sti
dec
sbb
retf
xchg
loop
inc
rcl
popf
pusha
mov
int3
outs
inc
jmp
test
cld
and
and
mov
cmps
lea
ret
fstp
daa
cmp
xchg
fmul
sub
or
pop
add
cmp
aaa
cmp
sub
push
test
dec
jl
fcomp
add
shl
and
lds
iret
and
sbb
call
sbb
es
inc
int3
mov
push
shl
outs
inc
xchg
imul
jle
test
test
push
inc
or
or
aad
mov
mov
scas
in
not
xor
xchg
sar
and
sbb
in
and
jae
repnz
ffree
out
mov
sub
pusha
mov
sub
jecxz
and
sbb
mov
arpl
push
and
mov
jle
xchg
rol
aam
jae
mov
push
cs
fbld
sub
icebp
test
ss
push
mov
sub
addr16
pop
jmp
pop
bound
in
mov
adc
js
dec
pop
dec
push
scas
fcmovne
or
(bad)
aam
cmc
push
xchg
cmp
inc
fsub
adc
jbe
jg
pop
arpl
add
lea
div
xchg
dec
out
imul
adc
ror
mov
(bad)
in
pop
sahf
cmp
fs
addr16
call
jb
in
jecxz
inc
or
jnp
ins
ss
cmp
push
mov
fs
shl
lock
mov
inc
aas
fcomp
aaa
mov
gs
dec
and
stc
pushf
cmp
(bad)
push
lea
ds
mov
adc
std
shl
sbb
dec
add
ds
sub
sub
fild
repz
stos
call
inc
push
test
iret
int
outs
add
aam
mov
push
xchg
adc
sbb
aam
clc
test
mov
or
fiadd
stc
and
xor
out
gs
push
inc
cmps
in
pop
mov
mov
add
adc
in
outs
and
xor
iret
xor
xchg
xchg
pop
xor
and
std
xlat
jmp
xchg
add
pop
mov
out
pop
sbb
in
dec
(bad)
sub
out
mov
inc
pop
mov
xor
clc
nop
pushf
jge
pusha
sbb
adc
mov
ret
inc
push
sar
mov
pushaw
sbb
rcl
sahf
pop
xor
ret
jmp
pop
jecxz
lea
mov
push
mov
int3
mov
cwde
mov
jl
push
fisttp
aad
cmp
adc
push
mov
mov
or
into
push
sbb
cs
sar
cwde
mov
push
xchg
test
fstp
in
stos
repnz
shl
pop
and
push
loope
push
xor
scas
pop
sub
rcl
les
js
jo
in
cmp
inc
fcmovnu
ins
xor
xor
push
nop
push
mov
sar
push
cmps
int3
fsub
popa
pop
xor
les
or
and
sub
ja
push
in
xor
lods
xor
pop
xchg
(bad)
stos
jl
fwait
push
int
jne
shl
call
fcomp
mov
jl
mov
outs
(bad)
rol
scas
pop
jmp
pop
clc
mov
mov
fiadd
into
pushf
outs
int3
sbb
test
pop
pusha
jnp
test
xor
sbb
scas
jl
xor
dec
movs
aad
adc
cmp
xor
ins
cmc
dec
in
cmc
sub
mov
xchg
aam
mov
shl
fs
mov
cmp
mov
jl
sub
add
mov
pop
jl
pop
xor
dec
dec
leave
aam
pusha
or
scas
pop
mov
cmp
xor
fchs
mov
xchg
mov
pop
(bad)
fwait
lock
add
pop
and
push
bound
mov
pop
mov
js
push
in
jg
enter
push
sahf
stc
movs
mov
loop
fadd
rcl
leave
inc
jecxz
mov
ret
xor
addr16
jns
inc
jmp
pop
dec
inc
jns
inc
xor
or
adc
outs
jae
into
adc
std
or
pop
jne
repnz
(bad)
arpl
pop
sbb
sub
cs
mov
out
xchg
and
push
mov
out
enter
ret
(bad)
xchg
sahf
push
mov
mov
std
jmp
pop
dec
sbb
xchg
rol
inc
push
cmc
and
inc
jne
pop
or
mul
loopne
fwait
inc
xchg
shl
ror
jmp
sub
xchg
xchg
int
outs
jp
sub
cli
adc
in
aas
in
les
and
dec
pushf
pop
jmp
scas
cmc
xchg
enter
loopne
fimul
pop
mov
in
xchg
mov
adc
pop
jmp
popf
imul
aas
mov
mov
hlt
test
mov
int3
popa
fild
sbb
leave
mov
mov
fnstsw
fsubr
push
mov
xchg
aad
push
dec
je
sbb
xchg
shl
jo
jl
jo
cdq
cmp
sub
aam
out
push
jge
and
or
push
repnz
mov
sub
adc
push
jge
xor
out
dec
(bad)
repz
sub
adc
jno
pop
dec
cmp
ss
inc
(bad)
cs
imul
xchg
xor
imul
mov
neg
pop
mov
loopne
sbb
out
fld
inc
sub
ja
jmp
cmp
add
(bad)
sbb
inc
jo
mov
ret
jle
adc
mov
mov
aad
mov
mov
dec
ror
dec
pop
jmp
and
fidiv
mov
mov
loop
ja
pop
jmp
in
xor
adc
push
cmp
retf
cs
pop
je
bound
shl
mov
ret
jae
mov
shl
pop
iret
add
jnp
or
xor
jmp
inc
pop
int3
in
adc
loopne
inc
sbb
loopne
leave
popa
and
sbb
mov
inc
rcl
mov
(bad)
push
loope
sub
xor
or
push
or
fsub
jmp
fldcw
push
cmp
(bad)
xlat
ss
ja
inc
sub
aaa
add
push
shl
pop
(bad)
pusha
mov
and
inc
jb
xchg
dec
push
not
jmp
cmp
gs
mov
mov
out
fwait
jae
fidivr
call
and
jns
adc
mov
push
movs
(bad)
out
cmps
call
inc
mov
icebp
dec
jg
lahf
sbb
cmps
scas
mov
out
repz
mov
mov
ret
push
ds
adc
daa
fstp
mov
inc
adc
xchg
inc
pop
add
mov
and
adc
or
retf
inc
ja
jbe
cmp
pushf
mov
pop
adc
mov
xchg
mov
nop
(bad)
sbb
or
fidiv
jo
sbb
pop
dec
adc
mov
xor
or
rcl
fstp
push
or
scas
push
scas
mov
push
(bad)
(bad)
ja
aam
in
and
gs
mov
cmp
ficom
mov
push
xor
add
jge
stc
test
data16
mov
cdq
push
jle
mov
mov
dec
lods
repz
in
inc
icebp
es
pop
pop
or
sub
in
sub
mov
dec
popa
mov
fxch
mov
lea
in
dec
and
sub
xchg
jae
adc
pop
or
add
add
nop
ret
sbb
bound
mov
push
push
mov
les
mov
(bad)
cs
add
fdiv
stc
pop
xor
test
shl
dec
inc
mov
aam
movs
pop
psllq
movs
push
add
or
fld
push
add
nop
sub
bound
mov
out
mov
bound
mov
fsubp
fcomi
movs
mov
adc
inc
inc
jmp
stc
sub
(bad)
in
mov
dec
jnp
xor
mov
or
sub
cmps
call
loope
xchg
imul
cmp
sbb
xor
lods
leave
cmp
dec
mov
(bad)
push
mov
or
sub
shl
and
xchg
adc
push
int
dec
and
or
outs
fdivr
or
test
and
inc
push
into
aad
in
pop
out
mov
or
jmp
les
mov
jnp
fidiv
inc
sbb
ins
push
test
xchg
jge
adc
xchg
dec
call
mov
xor
fwait
out
fwait
mov
fld
nop
fnsave
sbb
push
cwde
ret
stos
jne
rcl
inc
pop
(bad)
cld
dec
test
pop
cld
xchg
push
shr
ret
scas
fbstp
add
in
or
out
mov
xchg
dec
xchg
jno
or
js
movs
xor
setl
test
mov
movs
mov
or
cmp
mov
xchg
and
xchg
in
xor
in
xor
test
adc
push
test
leave
out
or
jns
adc
jg
push
cmp
sbb
stos
test
xchg
push
or
(bad)
push
out
lods
mov
stc
push
mov
xor
jge
jnp
dec
sahf
cmps
adc
cmc
mov
mov
cmp
adc
sub
inc
push
mov
jae
add
and
fwait
xor
ds
jmp
cli
fsubp
vpaddq
pop
rcr
ja
inc
mov
icebp
test
leave
mov
ins
add
xor
mov
outs
les
jmp
iret
outs
stos
push
neg
stc
shl
loopne
xlat
test
aam
clc
mov
pushf
pop
in
push
lods
xlat
into
pop
inc
jbe
or
sbb
imul
mov
pushf
pop
mov
pop
inc
adc
addr16
mov
not
enter
sub
cmp
mov
nop
frstor
mov
mov
out
in
mov
add
xor
inc
sub
dec
xor
or
jp
inc
fisttp
mov
(bad)
mov
outs
xor
xor
jno
fwait
sbb
pop
xchg
adc
push
lahf
(bad)
imul
pop
test
add
jne
pop
sub
xor
(bad)
lods
fidivr
mov
xor
shl
retf
ins
imul
repz
push
retf
pusha
cmp
(bad)
int3
jg
mov
clc
jecxz
mov
imul
out
push
mov
(bad)
or
and
not
push
adc
ds
xor
inc
out
jmp
jne
cmp
xor
pop
sub
repz
pop
jno
data16
mov
jmp
sti
pop
pop
repnz
(bad)
leave
sti
mov
cmc
(bad)
lock
aaa
and
lock
jecxz
dec
push
push
(bad)
and
retf
test
(bad)
inc
test
imul
mov
lea
mov
dec
mov
pusha
(bad)
enter
(bad)
je
sar
cmp
js
xor
out
ret
push
arpl
ror
dec
xchg
mov
mov
pop
cmps
les
pushf
xchg
push
(bad)
movs
enter
push
or
in
out
adc
jp
cmp
and
or
xor
cmps
mov
sub
jo
or
scas
xlat
fisttp
in
cs
cld
lods
and
imul
cmp
cld
inc
in
mov
in
out
jno
lods
xchg
shr
sub
cmp
fst
mov
push
fsubp
outs
ins
pusha
push
adc
sbb
ret
jb
mov
(bad)
sbb
test
and
cmp
in
mov
dec
push
retf
fistp
out
xor
fnstcw
fnstenv
jmp
push
xchg
icebp
idiv
pop
js
dec
in
mov
sbb
loop
adc
sbb
(bad)
mov
dec
popa
dec
rcr
test
add
jge
mov
sub
outs
ret
push
mov
(bad)
std
inc
dec
rol
pusha
xor
and
adc
out
jp
jbe
rol
add
clc
cld
je
scas
and
in
(bad)
and
push
jecxz
mov
fidivr
mov
push
mov
inc
push
cmc
test
movs
js
dec
xchg
jg
pop
mov
and
aam
jle
add
mov
xlat
cmps
int
inc
dec
pop
sub
lea
mov
hlt
cld
jmp
inc
xchg
push
push
jne
or
popf
dec
sbb
(bad)
jecxz
ss
push
push
test
push
pop
jbe
loop
xor
iret
adc
inc
xor
ja
fisttp
mov
out
dec
sub
fcmovb
out
movnti
inc
cwde
pop
leave
mov
leave
jp
and
(bad)
mov
sub
add
push
call
retf
call
pop
sahf
or
xchg
ja
stos
les
retf
mov
adc
cmc
fld
cmc
lahf
test
outs
loop
jle
mov
(bad)
mov
inc
pop
jnp
leave
xchg
sub
cld
fdivr
stc
jns
fsubr
rol
pop
cmp
(bad)
push
fadd
push
leave
cmp
lahf
pop
movs
adc
addr16
mov
pop
pop
in
loope
in
jmp
imul
or
mov
jb
mov
ror
outs
loope
loope
std
scas
dec
push
mov
add
mov
dec
repz
sbb
jle
or
mov
int
cmp
lahf
add
lds
mov
test
ds
ja
add
lods
jmp
lock
push
lods
push
dec
jge
pop
cmps
(bad)
mov
pop
into
ret
fisub
add
xchg
nop
scas
sahf
out
inc
cmp
daa
cmps
add
fwait
leave
mov
lods
dec
repz
jg
pushf
mov
and
inc
xchg
push
sub
sbb
and
pushf
frstpm(287
pop
ret
jge
shl
std
adc
xchg
mov
mov
(bad)
mov
inc
or
dec
ja
sub
aas
dec
ja
aad
test
mov
mov
lods
clc
fidiv
cdq
and
div
mov
outs
jl
in
add
xchg
jnp
xor
test
arpl
fidivr
sbb
out
and
test
movs
adc
mov
sbb
xchg
and
pop
xlat
cmps
out
sub
inc
(bad)
adc
mov
cs
dec
sub
out
jl
adc
cdq
daa
aad
jae
sbb
adc
push
jmp
xchg
aas
popa
add
cmp
stos
or
add
push
int
lahf
push
xor
or
cmp
shl
jbe
popa
repnz
stos
cdq
js
xchg
out
jmp
ins
imul
mul
sub
stos
sub
inc
pop
fsub
mov
rol
lds
inc
push
pop
xor
cmps
into
aam
movs
into
int
pushf
mov
jge
bound
retf
add
scas
cmp
cs
jmp
sbb
fcomp
test
inc
pop
xchg
dec
dec
movs
mov
pop
shl
mov
test
sub
stos
adc
jo
add
shl
mov
xor
dec
and
mov
fs
fs
loop
dec
xchg
shr
pop
pop
stos
xor
into
imul
adc
push
push
jle
fsub
test
clc
stc
shr
jl
pushf
aas
ret
dec
jmp
lea
sbb
hlt
sbb
cwde
gs
fucom
mul
jle
data16
fidiv
push
dec
sbb
outs
popa
mov
cli
dec
lods
out
mov
sub
and
mov
mov
or
xor
stos
rcr
ror
cmp
sub
pop
mov
jge
push
dec
mov
and
pop
pop
popf
pusha
test
sub
call
popa
mov
call
icebp
adc
pop
mov
inc
loopne
lods
scas
(bad)
cmp
mov
pop
cmp
icebp
dec
ins
sbb
xlat
and
cmp
push
je
jge
xchg
inc
clc
icebp
adc
cmps
sub
js
xchg
push
and
ja
sub
test
jmp
xchg
jo
mov
cmp
lock
mov
sti
xlat
call
xchg
mov
cmps
and
test
xor
or
stc
mov
pop
xchg
push
pushf
test
sbb
mov
in
jle
rcr
in
ret
xchg
(bad)
aaa
scas
aaa
out
inc
mov
cld
dec
hlt
or
mov
lea
les
repz
push
mov
jb
dec
mov
imul
sub
(bad)
dec
mov
add
in
inc
mov
cmc
push
inc
add
mov
dec
stc
xlat
cmp
pusha
lds
sbb
fisub
pop
mov
jl
stc
dec
xchg
ret
pushf
push
jbe
les
inc
push
mov
in
mov
jmp
pop
lahf
dec
and
retf
clc
repz
fucomp
out
movs
push
call
push
jecxz
mov
retf
xchg
jo
inc
mov
imul
adc
push
rcr
inc
pop
sub
pop
cdq
add
fidiv
mov
or
test
movs
push
inc
sub
cmc
aam
les
and
call
cmps
xchg
adc
loop
add
push
loope
les
pop
or
idiv
out
mov
push
mov
jae
sub
loopne
repnz
mov
cld
dec
sbb
repnz
cvtps2pd
icebp
cmp
pop
dec
pop
cmp
mov
dec
ins
fcom
vpaddsb
into
fld
mov
nop
xor
repz
sbb
cmp
adc
xchg
not
jae
and
mov
lahf
mov
lods
mov
ret
pop
sbb
sbb
pop
or
out
(bad)
mov
add
ror
xchg
dec
scas
mov
sub
jne
mov
jo
out
jb
dec
push
ins
cmp
sub
inc
imul
mov
lods
ins
(bad)
shr
or
repz
lds
lea
inc
idiv
add
jp
hlt
sbb
out
popf
std
push
push
add
test
inc
push
add
mov
jo
mov
or
imul
sbb
mov
adc
push
mov
aas
jp
imul
icebp
idiv
xor
add
and
mov
cld
sahf
and
and
pop
test
mov
inc
pop
arpl
inc
or
ins
sbb
mov
mov
test
ret
adc
lods
outs
add
push
mov
pop
jbe
cld
jge
cld
mov
(bad)
jl
or
inc
sahf
ror
outs
and
loop
pushf
pusha
jp
sahf
jmp
rol
dec
movs
pop
pop
repz
stc
gs
xor
inc
push
ds
mov
mov
test
xchg
jmp
pop
lea
inc
xchg
repz
dec
jns
fwait
neg
call
xlat
jmp
pop
inc
sbb
rcr
pusha
fimul
dec
xor
pcmpgtd
cmp
aam
rcr
and
popa
int
imul
out
shl
pop
sbb
or
fwait
mov
xlat
je
loopne
sub
packssdw
lds
stos
jge
aad
imul
sub
es
cmps
neg
(bad)
fisubr
fimul
and
jo
and
out
shl
test
jle
push
xlat
lock
rol
jg
fsubr
xchg
rol
xor
hlt
fsubr
mov
popa
imul
out
cmc
sbb
in
fistp
push
cmp
push
and
ret
and
cmps
mov
(bad)
push
push
add
sbb
push
dec
out
ficomp
dec
mov
pop
ror
(bad)
fadd
rol
xchg
or
mov
pop
jno
mov
mov
cmc
xchg
out
dec
add
push
pushf
fs
add
enter
mov
push
out
push
xor
stos
add
jnp
lock
or
cs
jle
cmps
inc
jmp
repnz
repz
sub
push
mov
rol
mov
(bad)
sbb
mov
add
push
cmps
push
pusha
pushf
lods
xlat
movs
mov
jmp
mov
dec
gs
jle
pop
retf
xchg
test
fadd
mov
jp
mov
fisub
fs
int
in
mov
jbe
xor
and
fadd
xchg
mov
mov
imul
test
arpl
jns
add
loopne
outs
loope
lods
cmp
ja
pushf
loopne
pop
(bad)
push
arpl
push
popf
ret
test
fwait
push
ret
fbld
dec
scas
(bad)
out
sahf
lahf
lea
loopne
arpl
shl
fimul
repnz
ins
inc
jmp
cmp
xchg
fild
xor
push
sbb
retf
xor
outs
add
data16
jbe
push
xchg
add
shl
fwait
add
jo
sar
jb
cmp
xor
retf
stc
or
aaa
lods
lock
nop
test
push
xchg
xchg
into
or
dec
adc
daa
push
jge
jnp
(bad)
xlat
stc
pop
sbb
out
and
sub
movs
gs
in
repz
sbb
inc
pop
or
test
mov
popa
cmp
dec
scas
add
test
lock
adc
in
jnp
and
inc
hlt
pop
out
cmp
pop
aas
(bad)
(bad)
imul
mov
sti
pop
mov
mov
xor
in
daa
pop
and
jg
test
rol
mov
xlat
test
daa
sub
mov
push
or
xor
mov
jecxz
sub
xchg
(bad)
retf
sub
loop
xor
push
dec
mov
adc
jne
enter
outs
aad
sub
mov
cli
retf
popa
push
mov
adc
neg
mov
mov
hlt
gs
xchg
pop
jle
(bad)
mov
cmp
pop
cmp
xchg
imul
inc
call
inc
movs
inc
adc
pop
or
inc
and
jg
vmovdqa
lods
(bad)
ins
xor
sbb
loop
adc
bound
xor
out
inc
inc
pop
mov
pop
pop
repnz
jno
inc
stc
call
mul
repnz
fdiv
in
in
xor
retf
mov
and
cmp
dec
mov
rol
push
push
sahf
sub
or
in
lahf
xor
pop
jmp
out
mov
rcl
inc
es
sub
or
add
(bad)
loopne
cli
adc
out
sbb
dec
inc
jmp
jp
jb
popf
dec
out
cld
sar
pop
jmp
lahf
mov
jle
in
push
(bad)
adc
fdivr
lods
stos
sbb
das
test
dec
retf
das
test
stos
jecxz
das
enter
bound
mov
fild
(bad)
std
add
out
jecxz
adc
fidiv
aam
je
mov
jo
inc
loopne
push
hlt
(bad)
mov
jle
sbb
xor
or
data16
test
cmp
daa
push
xor
scas
push
or
push
jo
retf
add
xor
ficom
sub
pushf
sub
rcl
push
ins
push
leave
fdiv
pop
pop
sbb
jae
cld
ds
outs
jge
or
xchg
test
cmp
adc
(bad)
leave
repz
popf
outs
out
and
int
cmp
clc
(bad)
fs
push
xchg
push
lods
mov
dec
adc
xor
adc
pop
inc
sub
fisttp
ret
sbb
pop
mov
xor
mov
es
shl
and
rep
mov
push
dec
mov
je
pop
mov
pop
xchg
cmp
rcl
mov
jmp
pop
xor
cmc
ins
(bad)
mov
jne
inc
jns
and
in
mov
in
rcr
jl
jmp
xchg
push
stos
js
aam
jae
or
jne
movs
jmpw
movs
in
rcr
lods
xor
pop
inc
pusha
and
(bad)
rol
iret
aaa
xor
mov
fcmovnb
push
call
ss
push
unpckhps
add
cmc
push
mov
jbe
cmp
jbe
mov
stc
jp
adc
sbb
mov
jmp
pop
aaa
jl
pop
jae
sub
out
jecxz
jb
leave
test
pop
ret
jp
fs
sbb
and
mov
clc
mov
cmps
shl
mov
loop
std
pop
cld
test
xor
mov
(bad)
call
scas
xor
addr16
sub
mov
dec
sub
xor
fwait
(bad)
mov
xor
lahf
jb
add
cmp
xchg
mov
and
jp
adc
adc
jp
mov
(bad)
sbb
fdiv
iret
stos
jno
xor
sahf
bound
rol
lds
adc
add
xchg
or
mov
and
sbb
jns
in
or
sbb
cmp
sahf
(bad)
xor
cmps
adc
daa
add
sbb
out
inc
lods
shr
div
test
mov
loopne
stos
fimul
inc
xorps
fst
cdq
ror
xor
imul
push
sbb
into
iret
repnz
sahf
adc
or
aas
out
retf
rcl
inc
jb
mov
popf
xchg
mov
mov
xor
adc
pop
es
jmp
mov
mov
out
std
in
cmp
xchg
inc
inc
xchg
(bad)
stc
push
cli
mov
ins
sub
cmps
fisttp
push
les
mov
fistp
(bad)
lods
in
mov
jns
ins
mov
je
pusha
mov
dec
and
push
in
mov
and
dec
shl
scas
cmp
cwde
xor
adc
mov
mov
sub
(bad)
je
and
jae
lods
pop
cmps
fmul
inc
icebp
cli
xchg
cld
jb
outs
sbb
in
and
pop
lds
inc
dec
scas
xor
lods
ret
push
push
pop
mov
(bad)
cdq
adc
lahf
bnd
add
test
pushf
add
inc
mov
ss
ret
jge
inc
dec
call
test
push
clc
sub
stos
scas
push
cmp
outs
arpl
xchg
push
popa
sub
or
mov
std
mov
(bad)
sahf
or
pop
and
loope
mov
repz
and
dec
mov
std
punpcklwd
ror
hlt
pop
mov
fild
aad
jo
push
jne
out
lock
(bad)
pop
movs
sub
into
outs
sbb
push
dec
adc
enter
out
aas
or
mov
pop
sbb
or
push
iret
xor
mov
pushf
jno
repz
xchg
cmp
out
and
push
add
mov
xchg
cmps
imul
shl
das
sbb
into
(bad)
push
shl
lahf
xchg
or
retf
add
pusha
popa
push
mov
and
add
push
sahf
inc
jno
ja
sub
dec
mov
popa
(bad)
in
push
inc
mov
cs
pop
sbb
xlat
ss
stos
movs
inc
cmps
sti
mov
jle
add
xchg
push
mov
ret
dec
pop
test
sti
daa
push
cs
inc
fsubr
loop
or
mov
add
mov
or
test
mov
push
lea
xchg
and
xchg
or
pop
cld
sahf
xor
pusha
inc
inc
mov
enter
inc
sbb
js
call
stos
mov
(bad)
into
sub
js
popa
rcl
arpl
dec
test
mov
shr
std
push
pop
ja
adc
sar
rol
or
scas
dec
inc
(bad)
or
and
or
mov
push
xchg
lock
(bad)
mov
int
adc
(bad)
pop
push
aas
and
sub
out
ss
jg
pushf
add
mov
sbb
jecxz
jbe
loope
mov
mov
enter
push
push
cdq
movs
sub
movs
nop
mov
pop
shl
xchg
or
icebp
inc
add
out
cmp
sbb
aam
mov
push
cld
into
jns
mov
inc
test
pop
sahf
push
add
mov
nop
or
daa
push
pop
mov
out
xor
xor
sub
xlat
xlat
or
or
popf
test
push
je
ss
push
adc
repnz
push
add
jp
sbb
and
or
add
(bad)
jnp
pop
jl
sbb
mov
cmp
pop
retf
pushf
(bad)
stc
ins
xor
lods
xchg
scas
leave
js
pushf
push
(bad)
rcl
fisttp
mov
pop
retf
mov
sub
adc
sahf
repz
enter
add
scas
inc
mov
xchg
loopne
mov
retf
stc
mov
and
lahf
cld
and
(bad)
adc
cld
(bad)
daa
xchg
pop
call
mov
call
std
ja
je
std
test
xlat
sub
pop
iret
cmp
call
push
stos
pushf
shr
mov
mov
popa
cmps
ret
clc
(bad)
gs
add
icebp
cmc
dec
cmp
adc
jle
and
fisub
mov
push
stos
inc
jns
dec
outs
cmp
in
sub
clc
scas
sub
aas
jae
adc
pop
sbb
ret
jg
ins
int
fisttp
xchg
cmps
cli
adc
cwde
or
iret
ja
into
cmps
arpl
xor
xchg
push
arpl
jg
(bad)
(bad)
out
and
add
or
mov
jae
xor
adc
cmc
outs
jo
cmp
pusha
adc
inc
or
sub
out
adc
dec
loopne
xor
aam
repz
je
jno
out
stos
xchg
push
cli
outs
loop
cmp
cld
dec
inc
mov
pop
call
or
adc
jmp
sbb
sbb
jae
sahf
cmp
addr16
jns
scas
aam
xor
dec
push
inc
cmp
push
xchg
fldcw
add
stc
das
(bad)
xlat
dec
mov
xchg
jns
mov
(bad)
stc
pop
test
and
test
enter
into
xchg
pop
daa
sub
pop
mov
lods
or
mov
aas
in
fadd
mov
ja
dec
ins
sbb
jg
aaa
xlat
fisttp
xor
xor
adc
arpl
call
lahf
setno
loop
pop
movs
dec
mov
ins
cli
and
leave
push
add
out
shl
jmp
add
sub
pop
mov
pop
add
inc
and
or
mov
push
aad
ins
adc
test
lds
out
js
mul
shl
push
int3
mov
jbe
push
dec
pushf
xor
js
push
and
mov
pop
sbb
sub
mov
jmp
xor
sub
mov
adc
cmp
mov
jg
mov
jp
adc
arpl
out
inc
mov
jb
jmp
push
(bad)
outs
sti
ret
sub
add
jmp
loopne
push
add
and
and
jle
xor
test
js
add
aad
in
xor
and
in
mov
jg
pop
or
xchg
ret
ins
and
pop
xor
dec
out
pop
shl
mov
test
ror
(bad)
fst
push
gs
pop
add
sub
adc
out
push
cmp
jg
lock
xchg
jb
cmps
std
lahf
js
fisttp
push
outs
call
rol
mov
mov
sub
mov
and
pop
bound
jo
inc
xchg
addr16
pop
dec
pop
mov
test
mov
mov
sbb
push
fwait
dec
pop
repz
sbb
pop
cmp
les
fnsetpm(287
sahf
cmps
lods
mov
or
lea
fwait
icebp
sahf
adc
cld
gs
xor
bound
sub
scas
arpl
test
mov
inc
mov
inc
cmp
mov
fwait
scas
aad
push
out
pop
mov
add
xchg
jmp
xor
stos
(bad)
mov
mov
ins
dec
lahf
lock
stos
clc
js
movs
fwait
xchg
cmp
push
jmp
and
mov
(bad)
and
push
hlt
push
sar
add
pop
dec
jmp
loope
int3
push
popf
enter
xor
mov
mov
fsqrt
sub
sub
daa
leave
dec
xor
dec
mov
push
in
loope
rcl
call
mov
xor
es
add
lahf
int3
inc
daa
add
cmps
sbb
xchg
mov
fidiv
xchg
sub
retf
js
mov
pop
repz
inc
cmps
jp
sar
popa
or
mov
xchg
ret
mov
imul
stos
ret
fnstsw
push
add
push
std
jmp
test
hlt
hlt
push
gs
adc
pop
pop
inc
jp
shl
ins
ror
out
xchg
or
out
es
add
scas
jbe
cmc
jne
push
xchg
stos
mov
cli
and
cmp
test
(bad)
jno
or
loope
xor
rsqrtps
cmp
xor
sub
out
rcl
sbb
pop
adc
dec
shl
ret
pop
push
(bad)
mov
cld
es
test
mov
sub
ds
out
sbb
fsubrp
pop
cmp
cmps
jp
scas
test
and
test
rcl
imul
adc
ja
adc
sbb
xlat
mov
push
mov
mov
mov
or
dec
jle
clc
adc
xor
je
(bad)
ds
aad
leave
and
mov
inc
push
xchg
mov
jle
xor
stos
fsub
mov
jg
xchg
inc
sar
test
(bad)
test
retf
js
lock
mov
pop
dec
push
xchg
retf
mov
sub
outs
dec
push
push
and
(bad)
mov
sub
pop
pop
jno
loopne
dec
ret
push
mov
aas
out
and
adc
out
sbb
pop
int
cmp
sbb
and
loopne
mov
dec
cmc
shr
mov
stc
inc
adc
ins
cld
aaa
adc
ficomp
xchg
repz
mov
xor
gs
gs
out
inc
inc
jp
inc
add
jle
(bad)
and
stc
lea
jmp
(bad)
aad
xchg
dec
sub
adc
cmps
cmc
mov
retf
mov
lods
cmp
daa
cmp
sbb
mov
cmps
lock
dec
mov
xlat
jne
add
dec
iret
xor
pop
jl
adc
mov
mov
fwait
imul
in
push
(bad)
dec
and
mov
arpl
jmp
sti
sbb
xlat
sti
push
cli
hlt
popa
add
push
ja
ins
(bad)
cmc
push
sbb
cli
out
ins
lock
(bad)
out
or
iret
and
and
stos
pushf
(bad)
jno
sbb
sbb
ret
(bad)
xlat
jmp
dec
std
mov
stos
mov
jno
adc
jg
out
cmps
je
push
repz
retf
ret
xor
jnp
out
push
pop
push
sub
mov
sub
mov
loope
retf
lock
adc
cmp
shl
push
fstp
fdiv
imul
and
adc
out
mov
pop
and
call
stc
in
aas
mov
push
addr16
into
jmp
in
out
dec
xchg
cld
scas
shl
push
or
xor
add
cdq
and
sti
imul
cs
out
pop
pusha
pop
inc
push
and
xchg
and
jl
dec
add
mov
add
mov
push
(bad)
add
adc
inc
inc
xor
repnz
call
inc
xchg
pop
jnp
push
fld
xor
inc
(bad)
test
(bad)
out
lahf
adc
test
(bad)
in
outs
cmp
and
fwait
or
(bad)
je
aaa
jno
sbb
mov
retf
hlt
jnp
push
popf
lds
mov
cdq
pushf
(bad)
push
test
aaa
loopne
imul
iret
hlt
xchg
ds
repz
inc
add
push
pop
jns
and
popf
mov
xchg
jmp
or
out
(bad)
add
or
xlat
lds
stos
sbb
data16
mov
in
fiadd
stos
inc
jmp
mov
icebp
call
dec
add
sub
adc
push
and
pop
daa
popf
or
jne
sub
enter
out
xchg
mov
fs
lock
sub
xor
xlat
or
mov
mov
add
xor
mov
fstp
sub
ret
mov
fistp
outs
xchg
popf
pop
and
jmp
fnstcw
inc
xchg
push
pop
mov
ficom
inc
xor
push
sub
mov
xchg
add
mov
loop
mov
push
scas
dec
xchg
cdq
imul
adc
sub
dec
mov
movs
ret
push
sub
pop
imul
mov
ins
clc
jecxz
jns
(bad)
fmul
cmp
std
jbe
into
test
(bad)
ja
gs
jmp
pop
pop
or
cmp
stos
mov
push
jl
fcomp
pop
push
or
sbb
inc
fwait
mov
cmps
jecxz
int
mov
jo
nop
jne
push
sub
dec
or
pop
pop
es
cmps
dec
out
pusha
test
out
addr16
inc
jg
inc
mov
adc
sbb
and
add
add
jecxz
adc
in
mov
xchg
repnz
inc
out
rcr
sub
leave
inc
add
repz
mov
popa
fdivr
lods
mov
mov
test
mov
mov
movs
jmp
jns
sbb
or
dec
outs
sub
stos
in
mov
dec
xchg
pop
pop
xor
mov
add
imul
repz
push
mov
movs
sbb
cmp
or
and
xchg
pop
rcl
sub
ss
pop
in
or
dec
retf
sbb
or
stos
cmp
push
lods
mov
leave
or
and
loopne
xchg
aaa
inc
nop
sub
test
sahf
icebp
inc
xchg
movs
iret
push
outs
dec
lock
std
push
xchg
cmp
push
cmp
scas
push
pop
inc
push
or
aas
and
repz
retf
pop
fsubrp
neg
out
outs
hlt
out
mov
or
jmp
push
jae
xlat
pop
jg
in
xlat
or
sub
xor
mov
stos
inc
cdq
jnp
movs
or
imul
sbb
jbe
jne
out
and
enter
retf
adc
loope
push
xchg
(bad)
cmp
cmc
jno
sub
sub
loopne
(bad)
pop
jae
jne
mov
gs
xchg
call
dec
mov
fisub
xlat
add
ss
pop
daa
mov
stc
fcom
mov
cmp
pop
xchg
xor
xchg
jge
pop
in
jnp
shl
ins
or
ins
xor
sahf
jl
movs
inc
mov
repnz
sbb
xor
fadd
xlat
jo
pop
or
aad
or
dec
in
pop
xor
pop
pop
cmp
and
cld
sbb
pop
inc
inc
pushf
xchg
aaa
adc
mov
mov
jmp
pop
cld
mov
lea
stos
fist
in
(bad)
fstp
and
nop
xor
aad
(bad)
mov
push
(bad)
out
in
dec
cdq
movs
(bad)
push
psubusw
adc
mov
lods
pop
jno
mov
xchg
and
mov
sub
adc
out
test
jae
in
out
jb
into
mov
aaa
mul
lock
pusha
jmp
mov
sub
mov
in
call
or
pop
repnz
mov
adc
mov
pop
jno
sub
ror
into
push
movs
push
adc
or
gs
adc
mov
or
btc
cmps
imul
and
mov
test
mov
loope
mov
inc
sbb
jnp
pusha
push
add
inc
pushf
mov
dec
pop
(bad)
or
ja
dec
ds
cmps
xor
mov
cmp
in
push
or
into
pop
ret
mov
rcl
dec
call
(bad)
mov
xchg
aam
pop
xor
cmp
fidiv
mov
add
in
xchg
adc
call
xor
mov
fdiv
xor
add
xchg
int
aaa
push
or
push
mov
jo
cmps
xchg
cdq
pushf
jmp
test
mov
(bad)
dec
shr
dec
add
jp
movs
repz
gs
mov
adc
pop
mov
stc
pop
inc
fsubr
mov
dec
sbb
mov
(bad)
leave
(bad)
neg
loope
lods
inc
pop
and
add
jmp
inc
outs
mov
push
jmp
xor
dec
out
imul
xchg
stos
les
sub
mov
and
and
and
add
cmps
in
rcr
pop
mov
lock
out
popa
and
push
addr16
push
idiv
push
daa
mov
retf
out
add
pop
test
jecxz
scas
test
adc
fwait
xor
pop
in
adc
mov
test
int3
xchg
sub
ret
aad
scas
push
jo
push
push
push
aad
mov
jmp
dec
lock
mov
imul
pop
out
jle
cmc
jne
out
test
ins
pushf
cdq
fld
jmp
pop
xchg
loop
and
nop
cli
sub
jne
jmp
daa
jne
cmps
imul
push
ret
mov
pop
jne
cmp
imul
push
pop
xchg
out
mov
jp
cmp
into
adc
xchg
mov
xor
ret
inc
pop
sub
inc
pop
in
nop
enter
mov
std
mov
mov
bound
stos
call
out
push
jne
pop
adc
loopne
(bad)
hlt
dec
loopne
sbb
in
rcl
je
pop
jmp
jmp
push
ss
inc
inc
xor
pop
(bad)
(bad)
leave
inc
sar
imul
xor
ret
sar
out
popf
jb
mov
sub
(bad)
or
add
mov
jmp
mov
mov
icebp
or
or
cmp
pop
and
mov
push
pop
cmp
xor
(bad)
jmp
lods
cmp
adc
mov
push
mov
mov
retf
cmc
mov
xor
icebp
inc
xchg
inc
fwait
loope
pop
mov
dec
jno
mov
or
push
adc
minps
(bad)
imul
pop
mov
add
clc
mov
mov
ret
scas
mov
iret
movs
outs
jb
imul
(bad)
sbb
ds
sub
dec
push
xor
cmp
push
in
rcr
pusha
mov
sbb
xchg
and
(bad)
mov
pushf
push
hlt
xor
xchg
pop
nop
in
js
sub
cld
out
cwde
xchg
mov
(bad)
cli
or
mov
imul
loope
call
ja
imul
rcl
push
dec
add
xor
dec
xor
dec
sbb
sti
fs
call
loop
mov
imul
jge
and
sbb
and
bound
sbb
and
sub
push
mov
gs
loope
jg
cmp
bnd
sbb
and
dec
dec
dec
pop
(bad)
jo
cmp
sub
or
pop
pop
ficomp
cmp
int
aaa
push
stos
pop
cmp
iret
mov
daa
repz
loopne
arpl
sbb
sahf
fs
gs
cmovl
xchg
xchg
les
ins
sbb
retf
loope
sub
ins
xchg
ss
daa
int3
cmc
(bad)
adc
xchg
lea
add
adc
or
cwde
movs
rcl
add
jecxz
fistp
scas
stos
ficom
mov
(bad)
mov
jl
mov
pop
cs
mov
fstp
inc
dec
sahf
or
cmps
xor
sbb
dec
fbld
shl
(bad)
(bad)
mov
stos
bswap
out
add
and
jmp
not
xchg
and
cdq
cmp
jge
pop
mov
add
bound
dec
(bad)
sahf
imul
sbb
push
popa
inc
xchg
dec
cmp
adc
cmps
xor
cmp
or
jae
clc
mov
lds
leave
(bad)
(bad)
arpl
ja
(bad)
pop
lock
jns
shl
cmp
inc
fcmove
cmp
test
(bad)
mov
mov
movs
je
imul
add
ins
popf
cwde
fnstsw
xchg
push
push
test
inc
mov
scas
push
push
cwde
ins
push
mov
sub
out
int3
dec
dec
test
dec
pop
inc
pop
sub
sbb
or
adc
scas
jne
icebp
cmps
pop
repnz
and
movs
cld
inc
add
and
imul
sub
jae
mov
sbb
cwde
loope
popf
jl
movd
pop
mov
scas
mov
pop
lods
lods
aaa
sub
ror
test
jmp
sbb
retf
fstp
cmp
mov
test
loop
cld
cmp
jnp
data16
jnp
mov
and
mov
jmp
add
fbld
aas
fidiv
sub
cmp
lahf
mov
inc
dec
mov
adc
mov
mov
xchg
mov
cmp
jmp
call
shl
cmp
in
sbb
out
push
add
arpl
movs
outs
sti
dec
test
sbb
jecxz
xchg
inc
adc
ret
sub
icebp
inc
jne
xchg
es
xlat
pop
mov
das
or
jmp
iret
mov
xor
lds
add
fld
cmc
outs
adc
jns
stos
jno
shr
inc
add
dec
rcl
das
or
xchg
pop
icebp
add
push
mov
scas
outs
mov
mov
out
sbb
fadd
repz
inc
jl
mov
jne
mov
pop
and
(bad)
fcomip
xlat
shl
xchg
pushf
shl
div
sbb
push
or
loop
or
jb
dec
mov
imul
sub
cli
(bad)
(bad)
jmp
inc
push
pop
ror
xchg
aam
push
adc
jns
(bad)
in
aaa
(bad)
repz
adc
ret
ret
in
dec
mov
pushf
repz
xchg
je
add
idiv
je
mov
cvtpi2ps
push
inc
nop
in
push
gs
into
aaa
xchg
fcmovb
cdq
aad
and
cmps
(bad)
mov
sbb
in
out
ja
(bad)
xchg
sar
push
sbb
mov
pop
mov
push
add
sbb
das
mov
push
ins
outs
scas
es
adc
pop
push
ret
in
(bad)
out
fwait
mov
hlt
lea
xchg
(bad)
adc
bound
mov
cmp
inc
stos
scas
xchg
sbb
xor
push
push
xor
inc
and
in
push
xchg
or
xor
mov
push
sahf
dec
add
mov
int3
jnp
test
mov
jmp
mov
jns
mov
xchg
or
mov
outs
cli
shr
fdiv
sbb
cmp
(bad)
nop
mov
(bad)
mov
jns
dec
shl
xlat
pop
stos
pusha
cmp
cmp
sahf
cs
lods
data16
xor
mov
data16
(bad)
movs
mov
jl
rol
movs
xchg
hlt
sbb
mov
enter
aad
push
sub
mov
and
push
jnp
dec
gs
arpl
pop
or
and
adc
mov
add
pop
sbb
pop
jb
out
rcl
fnstsw
mov
inc
mov
mov
adc
adc
fwait
dec
das
dec
lods
jmp
in
out
add
je
pop
push
aad
add
iret
pushf
(bad)
not
xor
jg
xchg
icebp
inc
mov
mov
lds
mov
jo
push
js
pop
sub
sub
std
add
clc
sbb
xor
xor
aaa
outs
fistp
les
inc
xor
iret
cmp
push
and
xlat
adc
js
jmp
xchg
loope
pop
das
jl
loop
aaa
jno
xchg
cmps
mov
mov
add
jb
mov
and
push
xor
mov
loope
inc
mov
jge
stos
xchg
sbb
pop
inc
movs
lods
adc
sub
mov
(bad)
fisub
imul
addr16
in
lea
leave
inc
cmp
mov
cmp
arpl
sbb
sahf
ds
fwait
lahf
pop
jbe
pusha
in
pop
xchg
inc
and
stc
shl
cmp
jns
add
adc
aam
fmul
outs
into
stc
adc
adc
popf
and
xor
adc
and
pop
int
rol
add
adc
imul
jl
xchg
jecxz
mov
fstp
gs
lea
jnp
lahf
and
imul
shl
pop
fstp
or
dec
push
ins
xor
mov
rol
jbe
pop
mov
xchg
(bad)
and
inc
mul
jmp
test
dec
adc
cmps
xchg
adc
pop
mov
sbb
in
(bad)
pop
xor
repnz
sbb
mov
arpl
fwait
mov
inc
push
mov
sub
pop
aad
ret
xchg
cmp
sbb
arpl
pop
dec
inc
or
cmp
jecxz
jbe
pop
push
mov
xchg
pop
into
adc
(bad)
adc
mov
inc
push
and
push
int
(bad)
out
in
xchg
mov
ror
(bad)
nop
nop
sub
xlat
(bad)
xor
dec
mov
das
adc
aaa
les
lahf
in
adc
or
and
shl
cmp
ss
ffree
pop
mov
jb
and
ins
arpl
adc
pop
std
cmp
xchg
test
test
arpl
retf
pop
mov
pop
lahf
loope
cmp
(bad)
mov
add
or
lea
pop
pop
mov
push
add
pop
jmp
or
push
clc
aad
pop
dec
test
in
mov
test
xor
rol
push
add
jno
mov
mov
and
popf
cmps
sahf
sbb
rcl
enter
daa
sbb
dec
test
xor
daa
mov
retf
sbb
ror
xor
or
bound
(bad)
or
pop
pop
mov
mov
inc
call
cdq
daa
cmp
pop
jp
pop
sbb
sub
fnsave
jmp
mov
mov
mov
test
pop
dec
or
fwait
or
(bad)
cld
cmps
call
inc
and
hlt
mov
(bad)
mov
xchg
mov
retf
aaa
mov
dec
fdiv
add
xlat
int3
cmp
pop
jbe
popf
adc
vmulpd
or
push
push
dec
cdq
jg
push
mov
pop
pusha
and
ss
jmp
call
jp
jg
out
adc
sbb
pop
push
into
dec
jecxz
mov
aaa
je
rcl
cwde
jg
push
mov
repnz
and
fcmovu
push
push
rcl
pop
push
lahf
jae
sbb
sbb
cli
test
cmp
popa
jbe
(bad)
pusha
ror
sub
sahf
mul
inc
daa
fimul
inc
inc
xchg
dec
inc
dec
pop
stc
ret
lahf
into
push
and
adc
adc
enter
sub
push
mov
out
mov
mov
ins
or
mov
adc
fldenv
lahf
call
ror
ins
dec
loope
out
repz
imul
cmp
lahf
sbb
adc
adc
cmp
fisubr
int
fist
sub
jecxz
jo
mov
test
aam
and
xchg
ds
in
ins
adc
jmp
sahf
ficom
sbb
imul
and
inc
add
sbb
mov
in
sub
fs
mov
xchg
mov
bound
jne
fistp
or
pand
out
sub
push
nop
(bad)
daa
cdq
(bad)
stos
mov
mov
rcl
aas
adc
or
sahf
inc
lods
xchg
test
jo
and
clc
jecxz
jnp
int3
jbe
jb
or
push
inc
push
xchg
outs
cmp
in
rol
daa
xchg
neg
ficomp
sub
fbstp
pusha
loop
aad
cmp
popf
stos
or
pop
int
lahf
into
dec
sub
and
movs
es
and
pop
test
adc
and
sar
stc
cs
jne
jnp
push
inc
or
push
out
aad
jnp
loopne
adc
xchg
xor
and
pop
fisttp
les
cmps
inc
pop
cmp
jg
fs
je
fisub
dec
mov
int3
push
call
mov
xor
xor
pop
xor
pop
push
(bad)
aam
and
jbe
sub
jne
sbb
rol
xor
jne
(bad)
clc
cmps
loopne
jl
cmc
repnz
xor
mov
leave
(bad)
lahf
mov
mov
xchg
adc
jo
sub
adc
lock
pop
cmp
xchg
out
push
(bad)
push
scas
stos
push
out
mov
push
rcl
dec
lea
push
pop
test
pop
mov
xor
repz
cmps
cmps
clc
out
adc
mov
shr
cmp
(bad)
ins
je
and
sub
enter
mov
jge
into
mov
test
jl
(bad)
movs
jecxz
lods
and
div
or
push
push
ss
push
in
push
sbb
outs
int3
push
pop
scas
xor
xlat
jae
add
mov
xor
aam
int
push
ret
(bad)
push
repz
pop
push
sbb
mov
pop
js
popf
dec
ffree
arpl
sti
lock
int3
push
sub
or
push
das
add
cmc
mul
imul
fidiv
popa
pop
ss
outs
push
or
(bad)
add
mov
dec
pusha
push
xlat
mov
int3
pop
lods
fild
push
inc
sbb
mov
icebp
xor
and
in
sub
(bad)
sub
sub
xor
mov
out
(bad)
ja
fsub
loope
xor
adc
dec
xor
inc
dec
das
ret
xlat
ss
retf
or
test
fimul
or
inc
stc
xchg
add
and
rcr
sbb
xchg
and
jmp
add
xchg
cdq
adc
out
push
push
dec
lods
enter
cwde
add
pop
cmps
sbb
add
jmp
cmps
fadd
loope
cmp
(bad)
gs
sbb
iret
dec
movs
neg
xor
sbb
pop
or
and
inc
cld
addr16
ins
cwde
and
aam
leave
hlt
enter
call
mov
mov
lea
adc
mov
jl
push
aam
outs
add
mov
cmps
dec
jbe
movs
shr
dec
adc
sub
(bad)
aam
(bad)
dec
leave
in
or
lahf
test
out
mov
cmps
mov
mov
push
fcom
and
xchg
pop
mov
loop
rol
pop
daa
scas
shl
sbb
push
or
mov
ins
cmps
cs
cwde
popf
mov
mov
shl
jb
out
mov
jecxz
and
push
cmps
xor
stos
imul
in
fld1
inc
cmp
fs
push
jg
sbb
jp
mov
ret
loope
xor
loope
sub
and
dec
mov
fwait
mov
test
(bad)
or
fist
add
inc
cli
push
in
xor
mov
stc
nop
out
mov
dec
xchg
fdivrp
(bad)
sub
jl
or
mov
jp
lahf
test
mov
movs
cmp
mov
jmp
stc
icebp
mov
arpl
in
xchg
jge
cmps
xchg
enter
dec
les
lds
not
mov
repnz
in
add
mov
mul
jno
push
jl
xchg
adc
xor
fs
or
call
pop
lods
adc
push
fnstcw
push
cmps
add
lahf
int3
and
inc
(bad)
rcr
dec
js
and
je
add
jg
sbb
or
inc
(bad)
lods
push
adc
cmp
retf
outs
outs
das
mov
inc
mov
data16
push
fidiv
sar
sbb
pop
fnstcw
test
jecxz
sbb
cwde
or
and
adc
imul
std
mov
sbb
jmp
(bad)
lods
cmp
add
push
loop
and
jg
mov
xor
and
sub
fcomi
push
daa
in
jg
mov
jbe
inc
sub
out
push
retf
sbb
mov
(bad)
sub
jnp
mov
mov
push
mov
pop
aam
jo
mov
mov
ret
dec
cmp
and
push
out
ficomp
mov
(bad)
out
mov
xor
dec
xchg
xchg
xchg
mov
test
ins
mov
in
pusha
inc
movs
push
loopne
push
es
pop
xor
fs
ins
adc
and
ficomp
xor
pop
adc
int
push
pop
xor
inc
mov
pop
inc
stc
xor
test
test
add
mov
jp
sar
pop
mov
pop
jne
aad
mov
or
fld
pop
jo
test
mov
sbb
and
jecxz
xor
sti
pop
out
scas
cli
or
push
pusha
sahf
dec
rcr
scas
ja
push
cmp
in
ror
or
(bad)
mov
mov
push
(bad)
fsubr
sbb
pop
mov
sbb
add
stc
push
popa
sub
repz
cs
push
loope
pop
dec
dec
ficom
lock
lods
rcr
xchg
and
pop
and
mov
test
cmc
mov
imul
inc
mov
arpl
inc
push
ja
sub
outs
call
int3
jb
test
scas
stos
(bad)
ficom
repz
icebp
lock
mov
sub
adc
mov
push
adc
xchg
and
add
jmp
test
out
cld
xor
sahf
repnz
imul
cmp
enter
xor
dec
sub
xor
xchg
sub
repz
add
and
push
fsub
iret
retf
lods
int3
push
adc
call
int
sub
push
shr
mov
xchg
daa
(bad)
mov
ja
mov
dec
in
sub
test
push
push
sbb
or
push
retf
adc
cmp
sbb
out
pop
xchg
inc
jecxz
inc
add
and
xor
mov
sub
cli
fistp
ins
add
out
push
(bad)
push
mov
and
call
cmps
nop
test
xchg
xchg
jp
and
jge
sti
xchg
add
mov
xchg
ja
or
fiadd
push
cwde
push
mov
or
jp
adc
dec
mov
pop
pop
xchg
sub
aaa
sbb
outs
adc
jae
fld
test
mov
(bad)
xor
ficomp
fadd
fimul
fwait
mov
push
or
dec
into
sub
xchg
mov
fld
mov
pop
popf
mov
int3
in
popf
pusha
lds
imul
iret
pop
pop
enter
outs
jmp
scas
bound
les
dec
inc
fdivr
sbb
es
aam
dec
adc
xchg
cmp
les
fldenv
(bad)
mov
or
pop
xchg
sahf
mov
pop
cdq
jle
and
fiadd
hlt
lods
push
sub
dec
mov
movs
je
push
call
sub
(bad)
shr
xchg
inc
cdq
push
mov
out
outs
add
xor
mov
cld
cmp
cli
sub
sbb
and
dec
loopne
add
fiadd
outs
shl
popf
call
add
push
add
push
adc
mov
jl
jno
mov
xchg
sbb
cmp
mov
mov
mov
stos
outs
lea
sbb
add
mov
scas
in
pop
xchg
fs
aam
jmp
xchg
xor
arpl
aam
stc
sub
es
cwde
int
ins
loope
(bad)
(bad)
adc
stc
mov
xchg
je
xchg
mov
and
jo
jl
loop
aaa
sar
mov
xor
in
dec
jmp
out
out
es
push
mov
xrelease
nop
pop
arpl
ficom
lock
jne
sub
mov
pop
test
stc
cli
call
cmps
cmp
add
xor
push
int
sub
pop
es
inc
cmp
mov
out
pop
mov
adc
add
mov
sbb
push
jns
or
sbb
jno
sub
jo
adc
lea
and
dec
fld
sbb
lods
adc
push
in
add
fs
out
bound
ins
iret
xchg
rol
fwait
or
inc
mov
iret
jp
mov
scas
or
stos
jae
ins
fcmovu
or
xor
adc
loope
outs
push
adc
cmp
mov
icebp
(bad)
adc
xchg
aam
call
and
imul
fstp
cwde
fiadd
add
jne
mov
dec
sahf
(bad)
xchg
fmul
add
lahf
sub
sti
sub
pop
enter
pop
lods
sbb
out
push
adc
mov
or
pop
jo
xchg
stc
out
cmp
pop
adc
aad
mov
test
int
add
cmc
jb
(bad)
fld
js
cmovnp
loop
enter
push
or
pushw
adc
fiadd
xchg
cs
(bad)
cli
ror
(bad)
aam
in
push
jl
xchg
imul
mov
int3
sub
mov
jbe
out
movs
fistp
pop
mov
aas
jp
lds
int
cmps
sbb
xchg
sub
fs
test
push
lahf
stc
jl
sub
sbb
and
sub
(bad)
iret
xchg
clc
and
push
test
inc
bound
xchg
outs
pop
add
retf
stc
push
xchg
stos
inc
call
jb
aas
cmc
cmp
nop
mov
lds
test
lock
inc
inc
imul
and
sub
das
push
shl
push
jne
inc
sti
dec
stos
stos
enter
call
xchg
push
xchg
jns
pop
or
sbb
lds
imul
mov
dec
cwde
jecxz
stc
pandn
lds
add
(bad)
sbb
and
push
inc
outs
test
je
and
pop
add
pop
mov
ror
add
out
std
dec
mov
and
out
jno
push
les
dec
movs
loop
add
mov
into
lahf
cmp
pop
je
xor
fcmovnbe
in
mov
cwde
bnd
in
add
jmp
dec
adc
movs
fmul
call
mov
retf
mov
push
mov
popf
cmps
imul
pusha
mov
sub
jno
sub
or
test
or
imul
aad
xor
inc
jge
ret
jnp
and
mov
mov
xor
cmc
mov
mov
jl
sub
test
(bad)
sbb
imul
popf
inc
mov
inc
ficomp
loope
cld
stos
add
icebp
sbb
cmp
mov
ss
xchg
jmp
sub
sbb
xor
or
and
dec
inc
mov
push
(bad)
int
daa
loop
sbb
push
push
jmp
ins
xchg
adc
mov
into
ror
dec
add
pop
mov
push
sbb
into
outs
mov
call
xchg
inc
mov
imul
ret
dec
adc
leave
sub
cmp
and
sub
mov
lock
xchg
or
xchg
outs
adc
jno
test
jno
and
mov
loop
jo
mov
pop
mov
arpl
cmp
(bad)
xlat
dec
dec
loope
gs
cli
mov
imul
cdq
arpl
fnop
add
les
adc
pop
sub
jae
retf
mov
cmc
fisttp
add
dec
mov
xchg
imul
jle
or
mov
push
push
fcomi
jmp
cmp
adc
dec
inc
mov
mov
bnd
shl
iret
xchg
daa
jno
rcr
aad
mov
loopne
loope
int3
xchg
mov
xchg
push
jbe
inc
scas
sahf
in
aaa
push
stos
jmp
adc
xchg
test
mov
call
pop
dec
test
xor
fwait
cmps
shl
inc
xor
fstp
int
call
sti
pop
pop
call
cmp
(bad)
sbb
dec
out
loop
repnz
fadd
push
loopne
pop
outs
ret
lds
imul
mov
push
sbb
sbb
mov
in
inc
mov
pop
lock
mov
mov
(bad)
jne
sub
add
sub
xor
or
ja
push
aam
mov
fistp
push
sbb
adc
push
pop
mov
mov
scas
(bad)
jbe
cdq
loopne
ds
push
out
or
cmp
mov
or
test
test
movs
adc
dec
xchg
icebp
jmp
mov
or
retf
stos
cwde
pop
mov
push
arpl
cmps
xor
jae
push
cmp
lods
enter
xchg
outs
mov
out
mov
pop
data16
pop
cdq
loop
aas
rol
sub
mov
cs
and
push
data16
push
push
adc
or
ja
movs
loop
dec
pop
and
cmp
imul
mov
jmp
movs
push
int
retf
hlt
daa
into
rol
jo
xor
test
inc
fs
adc
sbb
daa
je
not
mov
fsubr
mov
cmps
out
xor
xchg
(bad)
dec
loope
xchg
lods
jne
mov
shl
cmp
and
xor
fisttp
mov
test
jns
cmp
(bad)
pop
sti
sub
clc
adc
pop
mov
les
loopne
mov
jp
inc
bound
push
gs
push
jecxz
add
mov
mov
ins
jne
xor
(bad)
(bad)
faddp
repz
sub
arpl
jl
pop
mov
movs
push
fst
and
fisttp
xor
jne
test
cmp
lods
addr16
push
sub
sbb
popa
movs
mov
add
outs
dec
cdq
jecxz
imul
mov
(bad)
cmp
div
add
iret
mov
(bad)
dec
dec
ret
mov
jnp
pop
sbb
gs
icebp
cmps
xchg
pop
ror
ja
mov
jg
mov
pop
pop
ds
pop
loopne
xchg
push
fdivr
and
cli
add
adc
in
pop
or
mov
int
gs
lea
adc
out
add
and
cmps
and
movntq
pop
pop
xchg
dec
sub
test
imul
mov
inc
adc
js
cmc
cmc
add
push
fadd
sbb
ror
pushf
push
xchg
add
jae
inc
inc
push
jo
xor
in
xlat
or
jb
cli
jnp
sub
pop
mov
mov
push
ja
shl
fsub
jle
es
fmul
jne
dec
mov
mov
cmc
mov
mov
cmp
int
pop
or
jno
fcmove
in
mov
fisttp
ja
mov
ins
daa
pop
add
mov
stc
pop
xor
mov
cmps
or
and
push
cmp
in
rcr
push
loopne
mov
lahf
or
hlt
aaa
xchg
dec
pop
lea
jecxz
int3
jb
loope
(bad)
retf
add
sub
leave
stos
arpl
movs
push
rol
mov
lds
xchg
arpl
enter
repnz
and
mov
xor
push
jbe
fcomp
inc
cmp
ja
mov
sub
iret
popa
test
xchg
inc
pop
inc
sub
clc
fisttp
xor
daa
adc
daa
(bad)
and
repnz
mov
out
push
aam
nop
cli
add
and
mov
(bad)
or
mov
leave
or
and
jg
retf
pushf
movups
inc
mov
cmp
mov
jb
(bad)
push
mov
xor
dec
jmp
adc
clc
mov
cmp
loopne
adc
mov
das
jle
add
jne
cmps
out
leave
stos
mov
int3
bound
mov
xchg
loopne
repnz
add
dec
add
adc
sbb
fmul
retf
push
jno
fadd
setno
xor
idiv
mov
push
inc
jb
fsubr
jl
shl
or
jecxz
sar
add
push
in
mov
add
in
jmp
push
mov
xchg
add
mov
out
cmc
je
or
loop
dec
sbb
in
mov
popa
jp
sbb
or
cdq
jae
push
arpl
inc
sub
xor
adc
push
mov
(bad)
in
iret
bound
push
pop
in
push
xor
test
js
pop
shl
xlat
xor
pop
dec
aad
ds
jnp
ins
fild
mov
xor
push
scas
iret
or
ror
push
dec
cli
adc
pop
pop
push
dec
mov
push
gs
mov
sahf
scas
iret
repz
mov
leave
(bad)
dec
dec
inc
pop
sub
jmp
xchg
daa
rdpmc
shl
test
add
out
mov
pop
loopne
cmc
lods
or
sbb
adc
cli
and
jo
jb
inc
inc
(bad)
mov
mov
pop
ins
mov
jmp
fdivr
int3
xor
push
rcl
xchg
push
mov
cmp
inc
jns
lahf
inc
mov
cmp
pop
or
rol
les
(bad)
mov
mov
dec
dec
cmp
or
out
std
pusha
cmp
add
or
dec
cs
stos
cmps
dec
std
aaa
xchg
js
or
xor
add
ret
sar
push
lahf
pop
movs
fild
mov
pop
push
inc
dec
fnstsw
cdq
xor
adc
xor
call
dec
jmp
dec
(bad)
nop
pop
xor
mov
dec
xchg
adc
sahf
jb
call
add
lea
ja
in
push
inc
dec
push
adc
sub
xchg
or
cmp
pop
pop
popf
add
mov
clc
inc
sbb
out
test
addr16
out
test
inc
inc
leave
je
fs
pop
clc
mov
popf
add
jmp
mov
jnp
push
xchg
jae
mov
enter
inc
ds
jl
jl
dec
xchg
(bad)
mov
xlat
int
push
out
xchg
in
and
push
into
xor
jnp
sahf
ror
mov
es
jecxz
iret
xor
inc
sar
xor
arpl
inc
out
push
mov
lods
xchg
data16
test
dec
pop
adc
pop
sti
call
xchg
inc
mov
cmp
enter
pop
mov
cmc
aad
mov
sbb
jnp
sub
jo
cmp
lea
sub
mov
ins
bound
sahf
push
mov
dec
add
js
fxch
jnp
pxor
lea
retf
jnp
loopne
push
out
icebp
retf
sbb
(bad)
popa
push
mov
lds
xchg
add
cdq
sbb
repnz
or
aaa
clc
dec
fstp
hlt
xor
add
idiv
sbb
rcl
adc
jbe
fist
jbe
jb
mov
bound
rcr
js
shr
push
pop
mov
retf
xchg
mov
rcl
cld
pop
adc
scas
clc
adc
xchg
leave
push
rcr
in
add
inc
add
(bad)
dec
clc
(bad)
jmp
test
int
scas
aaa
push
imul
jo
sti
loop
into
mov
jle
mov
push
xchg
pop
out
push
loop
adc
pusha
popa
addr16
pop
sbb
daa
fist
loop
popf
loope
jns
lds
mov
push
shl
or
mov
int
jge
cmp
test
pop
lea
jo
sahf
(bad)
fwait
push
mov
fs
retf
sub
fs
repz
push
dec
and
cmps
(bad)
push
test
push
sbb
pop
dec
loopne
mov
xchg
lods
(bad)
bound
das
lock
cmp
loope
repz
mov
jecxz
mul
and
adc
fist
add
in
das
and
or
pop
gs
dec
pop
ret
inc
push
rol
mov
aaa
xchg
sbb
mov
neg
pop
(bad)
jno
in
push
mov
adc
nop
cli
fwait
data16
sahf
std
mov
stos
aas
(bad)
fsubr
cmp
les
pushf
and
pop
and
xor
ins
or
add
shl
mov
loope
(bad)
retf
pop
sbb
mov
or
jge
sahf
cmc
popf
mov
retf
adc
mov
mov
pop
test
mov
mov
sub
sub
sbb
icebp
pop
outs
mov
jnp
inc
push
adc
sar
stos
adc
test
pop
cmp
add
sub
jmp
popa
push
mov
dec
xchg
add
push
and
rcl
mov
movs
pop
fist
push
ja
(bad)
sahf
pop
dec
sub
ret
(bad)
sub
or
mov
call
mov
fwait
shl
jae
aaa
jge
add
mov
stc
int3
imul
and
xor
push
loope
dec
xchg
iret
mov
ja
pop
sub
iret
xchg
sti
rcl
mov
pop
mov
repz
mov
std
enter
push
and
call
pop
xchg
ror
ins
aam
mov
jp
cli
popa
and
inc
jnp
rcr
push
xchg
mov
inc
add
cmp
mov
imul
cmc
lahf
inc
mov
jmp
pop
adc
add
add
jno
ins
jbe
push
imul
pop
dec
jae
inc
adc
nop
pop
add
icebp
fidiv
sub
push
jmp
sub
sub
shl
xor
loop
in
or
add
fs
xchg
xchg
outs
inc
loope
or
out
loopne
lods
cwde
mul
cmp
and
sbb
inc
or
mov
pop
cmp
cmps
ins
cmps
rcl
xchg
dec
pop
mov
cs
clc
xchg
hlt
mov
inc
and
and
jge
push
out
xor
inc
movs
cmp
mov
test
cmc
movs
scas
and
loop
xor
data16
rol
pop
dec
repz
mov
sub
push
dec
loopne
jnp
xor
mov
test
aaa
mov
mov
stc
sbb
adc
pop
push
cmp
(bad)
stos
js
mov
fwait
mov
inc
xor
mov
in
pop
xchg
xor
mov
imul
xor
xchg
sub
pop
repnz
sub
cmp
sbb
mov
mov
or
into
xchg
sahf
mov
leave
adc
es
cmp
jnp
aaa
mov
sbb
xchg
sub
or
test
lea
mov
fild
adc
xchg
lods
mov
adc
dec
scas
and
mov
call
xchg
je
sub
in
dec
pop
mov
std
adc
lods
js
out
mov
retf
and
xchg
les
xchg
push
xor
mov
push
and
retf
mov
in
push
ins
jo
(bad)
mov
sti
test
bnd
imul
push
mov
cmp
repnz
or
add
retf
mov
jo
pop
cmp
aas
sti
push
cld
jmp
pop
push
cmp
push
fsub
mov
ror
adc
push
xor
jo
xchg
xchg
ror
pop
push
xchg
mov
xchg
call
jne
and
ficom
movs
sub
retf
int
cmps
jmp
enter
and
mov
popf
arpl
and
xor
ret
xchg
fwait
xor
cmc
cmp
add
adc
(bad)
xor
aad
inc
ror
loop
add
xchg
push
jmp
(bad)
das
cmps
cmps
cmp
mov
inc
movs
imul
je
cmp
ret
lahf
popa
push
or
jbe
popf
mov
push
xor
retf
and
or
push
lea
add
dec
sub
outs
inc
adc
shr
add
dec
test
test
push
xlat
bnd
scas
cld
mov
pop
popf
dec
mov
xchg
cmps
sub
or
retf
add
adc
arpl
xor
mov
jns
stc
int3
leave
and
dec
xchg
adc
aad
out
and
(bad)
std
into
in
sub
out
ja
std
fld
xor
test
mov
pop
test
test
sub
cmps
push
pop
out
dec
retf
adc
pop
dec
and
fisubr
fcomp
jle
data16
inc
popf
jl
lock
xchg
sbb
hlt
cmp
je
cmp
pop
mov
test
int3
stos
sbb
sar
call
test
ficomp
test
retf
gs
jmp
lds
not
mov
inc
xchg
cli
scas
imul
jle
dec
fsubr
mov
icebp
push
cmp
ret
icebp
jle
(bad)
or
(bad)
clc
test
dec
add
stos
push
mov
dec
mov
mov
icebp
mov
push
pop
call
retf
in
cmp
loop
out
cdq
ret
mov
mov
cld
mov
call
mov
out
ror
push
iret
push
jecxz
inc
je
add
mov
js
sahf
push
out
loope
popf
xchg
adc
mov
inc
and
ins
xchg
add
add
or
div
add
or
xchg
and
push
mov
mov
push
cmc
push
cmps
mov
rcl
pop
xchg
jmp
getsec
mov
xchg
sub
xchg
cmc
movnti
pusha
ins
imul
fnsave
xor
xchg
pushf
fcomp
sti
(bad)
and
(bad)
mov
jmp
das
gs
mov
mov
int
neg
shr
pop
das
xchg
int
pop
(bad)
repnz
or
lock
mov
fst
call
jge
inc
retf
adc
inc
dec
lock
ins
lods
sbb
arpl
das
(bad)
adc
fnstcw
mov
fs
mov
add
or
rcr
fs
lahf
cmc
xchg
gs
test
not
push
jno
movs
shr
scas
test
dec
pusha
push
push
bound
add
mov
popa
loope
loop
sbb
dec
xchg
mov
push
mov
rol
aas
(bad)
out
inc
movs
scas
pop
jmp
popa
and
cmp
or
je
mov
cwde
mov
pop
push
mov
aas
cmc
pop
ret
cli
aas
es
sar
xchg
dec
push
adc
cli
or
add
call
push
sub
mov
ds
xlat
repnz
repnz
ds
xor
fiadd
sub
mov
push
pop
add
lods
rcl
pop
dec
sub
and
xor
push
inc
jmp
pop
xlat
ret
jmp
int3
mov
add
popa
outs
cli
xchg
ret
test
test
push
in
nop
in
jo
jl
or
movs
dec
sti
sub
inc
popf
push
mov
int
fdiv
and
adc
or
loope
enter
leave
int
outs
dec
int
jo
jle
xchg
iret
jecxz
jmp
inc
in
mov
jb
xor
outs
pop
cli
dec
mov
ds
sub
mov
fdiv
shl
cmp
sbb
clc
pushf
pop
popf
mov
stos
sbb
and
sub
imul
sbb
ret
scas
dec
add
mov
(bad)
retf
mov
repz
cmp
hlt
dec
mov
pop
(bad)
adc
xchg
mov
pop
rol
test
sub
out
in
neg
lea
sbb
shl
mov
dec
jb
rol
popf
mov
and
leave
shr
jo
loop
push
in
(bad)
neg
cmc
shr
sbb
sahf
rcl
ret
movs
sbb
inc
stc
sub
pop
cmp
das
push
rol
pop
shr
cmp
call
dec
xchg
jp
fucomp
and
rol
fisub
pushf
(bad)
sbb
lods
aaa
xchg
adc
sbb
xchg
call
mov
jns
iret
push
and
dec
fbld
xchg
outs
sbb
aaa
dec
dec
mov
push
and
inc
push
arpl
cmp
not
or
push
or
jne
pushf
psrlw
stc
cli
jb
adc
retf
push
enter
xchg
shl
call
pop
nop
and
mov
loopne
mov
fwait
or
mov
cmps
loop
pop
imul
inc
movs
mov
dec
add
into
sub
xor
aad
test
int
xchg
loop
hlt
(bad)
pop
arpl
dec
push
(bad)
push
test
adc
sbb
cmp
lock
rol
dec
xchg
sar
fwait
aas
pop
fs
inc
clc
push
cmp
jns
xor
mov
(bad)
push
imul
jmp
fidivr
dec
(bad)
aam
iret
add
inc
les
(bad)
retf
and
aas
outs
test
mov
add
and
mov
mov
sub
and
push
movs
in
mov
(bad)
push
push
rcr
push
pop
push
test
dec
mov
cld
mov
enter
jmp
jge
repz
jb
jo
pop
push
lods
stos
adc
das
jge
sub
cmp
daa
xor
lods
fbld
loope
adc
mov
xchg
dec
xchg
inc
in
mov
clc
push
(bad)
mov
out
test
adc
paddw
ret
sahf
pop
(bad)
(bad)
adc
and
dec
jnp
mov
and
fisubr
jmp
push
aas
or
mov
or
and
ins
outs
xor
mov
les
xor
mov
call
sbb
outs
movs
pop
jae
fstp
pop
pusha
cmp
mov
clc
sbb
repz
xchg
mov
xchg
jmp
push
aas
sar
cmps
imul
aaa
pushf
fdivrp
int3
push
nop
pop
and
outs
ins
sub
mov
mov
mov
mov
movs
dec
xchg
cmps
clc
mov
sbb
outs
xor
loope
lock
add
push
in
lds
inc
repnz
ss
icebp
in
fwait
leave
push
retf
mov
mov
ja
iret
movs
dec
push
mov
pop
jae
mov
dec
dec
sub
cmps
inc
test
mov
ins
call
or
mov
arpl
test
cdq
jne
dec
call
ss
adc
xchg
xchg
jecxz
jb
mov
push
repz
xchg
xor
sub
dec
adc
cmp
pusha
(bad)
(bad)
fidiv
push
fisubr
fisubr
into
mov
fsubr
pushf
pop
push
loopne
push
cmp
xchg
adc
jns
dec
pop
jne
stos
iret
popf
jl
xchg
gs
and
cmp
add
mov
dec
sbb
fmul
outs
pop
sub
out
sub
mov
addr16
jno
leave
inc
popf
retf
sbb
xor
adc
sub
stos
sbb
sti
mov
mov
loop
push
(bad)
jmp
add
adc
cmp
cmp
dec
scas
cdq
xor
or
pop
add
jmp
out
and
out
sub
rcr
(bad)
and
cdq
jb
mov
or
dec
jl
iret
cmp
mov
in
ret
dec
(bad)
fstp
test
dec
push
nop
dec
dec
sbb
xchg
test
and
or
mov
mov
imul
jecxz
push
ficom
sar
push
stos
cld
les
loope
in
cmps
adc
or
adc
cmp
icebp
test
pop
mov
enter
jns
jne
adc
add
into
cld
dec
popa
push
in
pushf
sahf
outs
lods
cmp
xor
dec
pop
inc
cmp
push
clc
xor
idiv
aad
ror
in
mov
div
inc
or
dec
cmp
jmp
mov
and
rsqrtps
out
dec
push
cmp
cmc
or
arpl
push
das
xchg
repnz
adc
and
ins
mov
out
adc
pop
inc
idiv
lods
shl
and
stos
and
fsubr
jbe
retf
xchg
cmps
sbb
call
addr16
(bad)
mov
pushf
and
cs
aas
dec
outs
(bad)
jae
mov
cli
pop
and
fs
fidiv
cmps
fcmove
in
add
fst
or
add
mov
fisttp
jb
dec
ins
pop
add
pop
jl
pop
icebp
out
dec
jae
mov
rcl
or
mov
fbstp
iret
fucomip
cmp
dec
repnz
or
xor
and
pusha
sbb
xchg
or
jle
pop
cmp
(bad)
repz
or
xchg
sub
out
cmovns
inc
sbb
cli
not
dec
ja
enter
ja
push
pop
push
(bad)
out
leave
outs
mov
inc
push
pop
fdivr
xor
cmp
leave
xor
lock
mov
ret
popf
add
imul
dec
mov
and
test
jge
jp
outs
aaa
cld
scas
push
loop
repnz
xchg
sbb
out
sub
adc
pop
inc
lahf
mov
popa
push
mov
adc
fiadd
inc
enter
xor
mov
inc
mul
inc
(bad)
(bad)
call
popa
jne
sub
mov
push
push
adc
inc
mov
pinsrw
int3
add
push
fdivr
and
aad
sub
mov
fsub
push
fs
les
inc
jb
dec
xchg
cwde
imul
adc
jbe
std
jg
rol
lea
outs
adc
scas
or
aam
out
out
mov
rcl
test
mov
out
f2xm1
cs
cmps
push
push
sbb
es
pop
push
add
test
inc
(bad)
test
dec
popa
pop
jg
ret
add
jae
daa
mov
sti
sub
rcl
xchg
mov
mov
and
sub
ja
popa
adc
sbb
int
mov
popf
outs
shr
fisub
pop
sbb
add
fwait
cmp
pop
(bad)
jge
mov
mov
retf
daa
cmp
jle
mov
mov
test
mov
or
in
pop
jns
ret
and
jg
rcr
imul
xor
dec
mov
dec
pop
jne
loopne
fwait
addr16
and
xchg
div
div
dec
add
(bad)
sti
mov
test
or
call
into
sahf
shl
xchg
push
fist
jbe
sbb
jnp
data16
movs
adc
std
cmps
aad
jg
mov
je
pusha
or
pop
retf
xchg
mov
sbb
add
cmp
fld
ret
jp
cld
mov
inc
call
and
mov
push
jbe
xor
fsub
xchg
cmovbe
xor
jo
dec
pop
fsubr
or
and
lock
mov
ret
jge
dec
dec
adc
push
and
in
push
movs
push
lea
sbb
cmp
ret
sbb
mov
leave
lea
xor
nop
inc
jle
cwde
mov
out
lea
push
je
pop
mov
in
call
lds
test
push
pop
cwde
or
pop
lea
repnz
lahf
rcr
call
pop
jnp
sti
mov
popf
or
sbb
shl
sbb
(bad)
lods
stos
xor
mov
rol
call
push
ins
aad
inc
js
xchg
int3
jg
movs
mov
sbb
rcl
idiv
mov
or
pusha
loopne
jmp
dec
or
jnp
in
or
test
pop
push
sub
cmc
shl
mov
aad
lods
stos
dec
ins
loopne
pop
fcmovnu
in
xchg
push
xchg
out
stos
lock
int3
pop
xchg
cmps
pop
imul
add
dec
nop
in
pop
jno
retf
pop
adc
xor
and
fidivr
mov
fimul
cli
pop
jmp
add
jbe
sbb
mov
mov
movs
icebp
pop
jl
imul
popf
pop
loope
data16
leave
xchg
cmc
fidivr
ret
jne
gs
or
inc
lods
push
xor
sub
ret
xor
rol
pop
daa
cmp
mov
add
jnp
cs
rcr
mov
sbb
ds
push
pop
fisub
cli
cmp
push
jb
test
and
or
(bad)
retf
mov
push
outs
cwde
test
add
push
jae
not
mov
add
add
out
inc
push
and
mov
inc
test
jge
aas
sub
test
sbb
es
js
xor
mov
add
mov
xor
sbb
jb
loope
adc
stos
mov
jno
and
xlat
iret
in
nop
out
in
xor
xor
jb
and
test
dec
in
add
lds
cli
fiadd
nop
movs
fwait
xchg
pop
xor
jg
out
daa
adc
cmc
jns
out
(bad)
jmp
cli
jge
add
ds
xchg
xor
sbb
mov
xchg
mov
push
lds
inc
push
test
inc
inc
xor
xchg
xor
jecxz
dec
pop
fisub
loopne
push
mov
rcl
clc
add
cmc
iret
jmp
sbb
dec
pop
xor
enter
dec
lods
pop
lea
xchg
and
or
or
push
or
sbb
(bad)
test
nop
scas
test
adc
cs
push
push
out
ret
ins
in
and
retf
or
inc
adc
sbb
push
xchg
imul
sub
xor
leave
icebp
into
hlt
dec
das
push
xchg
sar
test
(bad)
jmp
call
je
mov
lods
int
push
inc
mov
mov
dec
xor
pop
dec
and
xchg
scas
fsub
fcomp
ret
in
dec
and
mov
retf
out
stos
xor
sub
mul
jmp
cmps
push
bound
pop
pop
push
cmp
adc
sbb
aaa
nop
and
pushf
cmp
mov
mov
std
nop
adc
mov
mov
mov
popf
jp
sub
out
(bad)
mov
clc
jmp
pop
out
fdiv
and
push
mov
cwde
js
mov
or
ss
pop
shl
or
sub
push
jne
xor
pop
outs
xor
ins
mov
ss
pop
mov
mov
das
cmc
sub
xor
dec
mov
(bad)
mov
rcl
je
dec
aaa
call
in
frndint
mov
retf
cmp
pushf
faddp
cmp
pushf
mov
adc
rol
and
cmp
jp
mul
cmc
scas
xor
adc
jns
imul
mov
in
mov
sbb
jge
fmul
inc
xor
mov
adc
dec
inc
push
ds
aas
in
ret
pop
popf
xor
or
popf
push
or
dec
dec
dec
cdq
sbb
xchg
mov
loop
mov
sub
and
jl
std
repz
gs
(bad)
mov
imul
fwait
jnp
lahf
jp
ss
shr
mov
sbb
jmp
retf
push
ret
push
mov
sar
or
cmp
mov
ror
pop
sub
mov
dec
adc
push
push
call
pop
(bad)
in
adc
or
imul
call
repz
and
sbb
repnz
fcom
loopne
mov
push
pop
movs
lock
xor
(bad)
movs
scas
test
xor
enter
(bad)
mov
mov
sub
push
call
leave
or
pop
jae
cmp
movs
pop
cmp
call
fwait
jge
div
pop
xlat
pop
sbb
mov
ja
(bad)
and
mov
inc
fcmovbe
ror
ret
loope
or
retf
dec
mov
test
and
nop
xor
sub
mov
cmp
fdivr
push
dec
int
ror
out
push
sahf
add
pop
push
dec
mov
or
xchg
add
lods
xor
jmp
fimul
jnp
push
sub
or
cvttps2pi
sub
and
in
mov
xlat
and
js
push
cmp
xchg
xlat
aas
icebp
mov
pop
ins
nop
add
nop
fld
arpl
ins
jno
rcl
cmp
inc
push
repnz
mov
push
lock
push
push
(bad)
mov
mov
out
xchg
mov
mov
lahf
stos
mov
rol
movs
xor
gs
loope
pop
neg
mov
stos
jnp
push
mov
sbb
mov
xor
pop
pop
mul
push
inc
adc
mov
je
mov
(bad)
sbb
lods
scas
(bad)
cmp
popa
fwait
addr16
cmps
(bad)
sub
test
push
cdq
adc
inc
aad
cmp
test
inc
cwde
out
out
je
sbb
mov
fbld
imul
out
jae
retf
add
in
out
xchg
mov
jne
jns
das
imul
ss
ret
pop
pop
adc
push
fsubr
pushf
xchg
pop
js
dec
rcr
jns
inc
mov
fwait
xchg
cli
arpl
jmp
pop
aad
aam
pop
sbb
cdq
dec
push
fidiv
jae
and
inc
aaa
jnp
mov
xchg
out
mov
xchg
jne
dec
jbe
pop
test
movs
retf
adc
pop
retf
movs
ret
cli
pusha
inc
ficomp
call
test
pop
outs
pusha
repz
and
mov
or
popw
jb
jmp
mov
lock
dec
xchg
xor
pusha
pop
mov
pop
or
cmp
cmps
add
jns
and
pusha
jns
cdq
dec
push
cmp
test
(bad)
jbe
xchg
ins
push
pop
arpl
leave
scas
cdq
mov
cdq
cmp
pop
test
adc
mov
clc
repnz
mov
mov
dec
mov
inc
add
test
xor
push
mov
pop
cmp
lahf
cmps
xor
ja
xor
movs
push
imul
dec
mov
and
push
inc
mov
adc
daa
inc
pop
push
lods
fldcw
mov
jmp
shr
xchg
xchg
cld
cmc
out
jns
push
pop
add
jns
pop
nop
pop
mov
push
xchg
ins
fst
ss
out
add
adc
popa
les
ror
div
pop
sbb
addr16
sub
adc
inc
movs
and
(bad)
lea
dec
add
push
loopne
jecxz
popa
pusha
push
adc
hlt
leave
leave
push
sahf
repz
fldenv
ds
outs
and
std
fsincos
fbld
pop
stc
pop
ror
fs
inc
hlt
mov
or
xchg
out
dec
lods
pop
xchg
sub
xor
icebp
outs
out
dec
and
mov
out
cwde
popf
gs
xor
push
and
cld
into
pusha
sbb
jmp
mov
scas
out
inc
mov
push
jmp
mov
gs
aas
mov
call
jno
scas
xchg
sbb
loope
inc
and
inc
ror
xchg
pop
cdq
gs
out
pop
mov
sbb
adc
(bad)
pop
mov
fwait
mov
ins
popa
das
mov
mov
sub
pop
sub
les
ds
add
adc
lock
je
lea
aam
and
inc
push
fwait
add
sub
popa
sbb
test
out
or
xor
cmps
cs
adc
cmp
test
repz
sub
adc
jmp
pop
std
or
lea
es
dec
pop
or
mov
or
inc
lock
call
test
inc
in
aaa
movs
sbb
add
xchg
test
adc
pop
das
lock
fistp
cs
pop
or
mov
pop
dec
lds
aaa
push
fwait
adc
test
jmp
pop
jmp
inc
jecxz
test
sbb
dec
sub
mov
cmc
fwait
into
or
out
call
pop
(bad)
push
arpl
inc
pop
mov
add
or
jp
stc
dec
mov
movs
popa
or
mov
dec
or
mov
(bad)
mov
imul
xchg
test
je
ins
inc
cmp
dec
sub
in
int3
pop
pop
cwde
cmp
push
or
imul
pop
cmp
movs
in
sti
dec
push
jns
push
shl
and
jmp
push
int3
in
in
push
stos
iret
sar
rcr
pop
mov
cmps
push
xchg
mov
dec
enter
pop
sar
sbb
jge
test
xchg
rcl
rcr
jae
daa
ss
out
adc
xchg
sbb
pop
and
(bad)
shl
jmp
sti
mov
xlat
xor
cld
push
mov
mov
pop
push
inc
shl
(bad)
(bad)
rcl
cmp
ret
outs
std
xor
pop
push
mov
iret
xor
mov
sbb
adc
sahf
aad
scas
pop
or
or
mov
jo
sti
inc
push
dec
mov
shl
out
xchg
call
jbe
iret
loop
scas
dec
loop
shr
dec
pop
imul
inc
addr16
xchg
inc
jae
fsubr
out
xchg
pop
jmp
(bad)
repnz
mov
sar
mov
mov
add
sar
js
bound
popa
push
mov
mov
pop
imul
(bad)
cmp
daa
(bad)
inc
stc
hlt
mov
xchg
pop
cmp
xor
or
outs
fsub
pop
fistp
cld
push
dec
clc
in
out
sub
mov
mov
cs
push
aaa
adc
mov
pop
jbe
inc
xor
fwait
loop
stos
pop
xchg
sub
ret
adc
call
xor
mov
frstpm(287
adc
loop
int
jo
ffree
push
or
sbb
push
xchg
(bad)
dec
jg
jmp
out
outs
dec
adc
pushf
dec
mov
add
sbb
push
adc
jge
sbb
popf
dec
les
aas
(bad)
or
nop
test
(bad)
popf
xor
ficomp
mov
cmp
ins
inc
js
sub
ins
cmp
into
mov
das
jmp
xor
stc
pop
inc
adc
daa
movs
fwait
int
or
xor
ret
scas
mov
xlat
mov
in
cli
push
ret
fstp
fsubr
pop
or
iret
push
xchg
aaa
mov
(bad)
fstp
test
sub
jecxz
mov
sbb
out
loop
(bad)
mov
inc
mov
iret
mov
xchg
push
push
mov
scas
mov
ss
stos
cmp
xor
cdq
fnstenv
aaa
(bad)
mov
and
jb
lock
lock
sub
push
lds
clc
nop
retf
jmp
mov
in
mov
add
xlat
(bad)
js
adc
scas
fnsave
cs
mov
rcr
push
aad
into
(bad)
jp
call
xor
mov
bound
sar
popa
push
jno
ret
std
test
mov
inc
sub
and
ret
add
cs
out
out
sub
cmp
push
xchg
mov
pop
pop
fdivr
daa
cmp
fwait
out
ret
jg
(bad)
jle
dec
scas
fild
pop
sub
adc
stos
sub
ins
or
int
or
addr16
add
gs
push
into
or
out
pop
jle
mov
mov
push
rcl
scas
stc
pop
xor
pop
movs
int
pusha
cmc
icebp
inc
movs
push
or
sbb
ss
into
(bad)
int
fimul
dec
push
imul
int3
dec
pusha
cmps
cmp
jb
je
inc
neg
mov
out
jg
dec
and
xor
ret
call
aas
int
iret
(bad)
jmp
fcomp
and
sub
outs
leave
push
jnp
in
popa
inc
mov
dec
mov
(bad)
mov
inc
sub
xchg
sti
xchg
xchg
push
xlat
out
addr16
xor
(bad)
leave
outs
pop
mov
push
dec
mov
cmp
or
aaa
sub
xchg
xlat
test
push
or
pop
les
xchg
repnz
dec
jae
mov
add
retf
(bad)
enter
cmp
inc
or
nop
add
aas
pop
arpl
pop
push
add
mov
xor
aaa
or
push
adc
test
mov
sub
rcr
add
cmc
fwait
xchg
hlt
xchg
push
adc
ins
adc
out
xchg
retf
adc
addr16
xor
pushf
push
add
sub
xchg
out
push
shr
test
dec
test
sub
jnp
xchg
repnz
in
bound
jb
bound
sub
into
popa
mov
mov
je
into
fiadd
dec
push
mov
jnp
(bad)
es
cmp
(bad)
cmps
(bad)
loopne
cdq
jns
ds
push
mov
jecxz
outs
push
push
repz
xchg
dec
ss
pusha
add
adc
hlt
fild
ror
loope
movs
ret
cmp
pop
retf
xor
mov
sbb
ins
or
adc
mov
cld
jle
mov
inc
jae
mov
adc
das
shr
push
jmp
sbb
ss
sar
pop
aas
cwde
dec
lock
sbb
js
mov
addr16
lock
cmp
mov
inc
pop
scas
jb
mov
fst
mov
outs
or
mov
and
xor
dec
mov
leave
dec
or
pop
mov
sub
inc
gs
shl
jne
pusha
mov
(bad)
cmps
jge
or
fsubr
in
je
mov
pop
loope
xchg
dec
sbb
mov
repnz
call
shr
hlt
mov
add
or
rcr
dec
add
je
repz
sub
xlat
mov
xchg
movs
mov
cmc
loopne
inc
xchg
lea
adc
mov
and
lds
xchg
pop
xor
in
cmp
push
aas
aad
or
push
out
inc
enter
or
fld
pop
retf
inc
sti
or
cmps
jecxz
repnz
xor
xchg
inc
adc
and
cmc
jns
fistp
sar
xor
push
(bad)
repnz
cmp
(bad)
loopne
jmp
fnstenv
cmc
adc
adc
xor
mov
popf
xchg
arpl
jmp
(bad)
push
and
push
mov
add
adc
xchg
stos
jl
(bad)
mov
std
ins
cmc
fild
lea
mov
retf
outs
pop
cmp
mov
ror
cmps
test
mov
in
pushf
xchg
stos
pop
or
loop
and
ds
inc
lahf
daa
dec
and
mov
mov
xor
sub
and
out
std
and
fmulp
ins
sbb
adc
addr16
dec
push
fs
jbe
adc
arpl
add
mov
retf
xchg
jbe
inc
imul
fs
imul
push
mov
mov
repnz
fs
pop
das
rol
and
mov
cmps
les
inc
lahf
outs
xchg
cld
mov
pop
jg
loope
retf
(bad)
cdq
js
lahf
add
and
xlat
inc
sbb
scas
add
dec
push
repnz
hlt
or
xchg
mov
sbb
pop
aaa
adc
sbb
mov
(bad)
jecxz
pop
mov
cmps
mov
push
push
mov
inc
jns
icebp
cmp
cmps
adc
in
arpl
pop
fs
push
daa
jmp
adc
scas
mov
fldcw
ficomp
or
rcr
push
(bad)
cmp
in
lods
add
jne
jo
jnp
jmp
jno
mov
sbb
shl
call
dec
sbb
lahf
rol
mov
out
ins
sub
dec
(bad)
push
pop
loopne
in
mov
and
jp
(bad)
out
(bad)
bound
es
std
and
int3
js
inc
ds
test
jno
and
mov
pop
scas
retf
xchg
out
or
xlat
dec
cmp
fdivr
ds
cmp
xor
jns
or
rcr
outs
call
pop
idiv
(bad)
and
sahf
out
stos
ret
dec
daa
ficom
dec
dec
mov
mul
jl
pop
dec
aad
int3
cmp
ret
test
push
inc
cmps
mov
lock
(bad)
rcr
mov
mov
hlt
test
imul
push
push
adc
push
xor
sahf
sbb
aam
lods
pop
and
cdq
jae
nop
stc
xchg
mov
rol
jle
add
fistp
or
rcr
es
(bad)
idiv
in
aam
xor
sub
into
loop
lahf
(bad)
dec
(bad)
cld
cmp
sahf
add
push
inc
mov
pop
sbb
jmp
push
jge
(bad)
fild
sub
inc
cmp
cmp
jae
test
add
sbb
loopne
add
jge
xchg
lods
rol
add
mov
ja
cmps
rcr
push
frstor
pop
xlat
sar
mov
sahf
xchg
cdq
loop
or
mov
in
mov
shl
xchg
sbb
retf
jb
jns
enter
icebp
cmp
aam
push
neg
mov
popa
add
pop
jb
lock
fwait
data16
inc
mov
cmp
xchg
lds
jo
stos
daa
das
mov
loopne
jo
mov
mov
jle
jb
arpl
xlat
mov
mov
add
bound
shl
shl
and
ins
fs
scas
jecxz
das
cmp
jns
and
popa
xor
mov
pop
xor
pop
mov
jae
ds
cmc
xchg
cmp
inc
(bad)
imul
push
scas
test
and
shl
call
retf
jmp
mov
add
pushf
inc
xchg
loop
pop
mov
test
test
test
inc
pop
inc
mov
jle
pusha
ja
cmp
xchg
hlt
ret
sub
in
fdiv
sbb
repz
sti
loop
and
jno
dec
inc
push
cmps
scas
xchg
fst
cmp
lds
or
cmc
mov
and
lock
fstp
jns
dec
xor
aaa
test
je
fprem1
adc
adc
shl
rcl
fld
sbb
or
shl
and
ja
cmp
outs
xchg
pop
mov
fld
shr
out
daa
jmp
xchg
outs
pop
mov
pop
push
test
out
jbe
mov
xor
dec
jo
mov
lock
mov
dec
cld
in
movs
mov
ret
call
ror
test
sub
sub
(bad)
push
xchg
pop
inc
sub
xor
mov
sar
lea
sbb
ror
and
ins
adc
jmp
enter
fs
xchg
or
(bad)
sub
retf
aaa
les
cmps
push
movs
inc
jbe
cld
push
or
out
cmp
mov
ss
xor
lods
into
ins
xor
mov
mov
std
mov
sti
mov
pop
and
js
cmps
(bad)
jmp
add
pop
std
aaa
adc
mov
mov
repz
xchg
push
jne
pop
jo
push
xchg
xchg
push
mov
and
sti
sbb
addr16
jmp
iret
mov
jns
and
pop
les
mov
and
dec
ss
sub
mov
mov
push
and
inc
inc
mov
fidiv
xchg
cmp
fistp
and
int3
push
scas
aad
(bad)
nop
and
xor
add
xchg
sub
scas
aas
add
xchg
jge
popf
and
cmc
int
push
jnp
xchg
outs
cli
lods
adc
sub
scas
outs
pop
gs
das
or
rol
and
mov
jo
push
xchg
outs
mov
cld
push
xchg
jmp
bound
xlat
scas
jg
sar
jno
cs
pop
pusha
retf
pop
add
mov
in
jbe
sbb
or
sbb
shl
add
jne
sub
mov
repnz
nop
loopne
mov
cmp
shr
call
loop
jo
outs
xchg
retf
adc
and
lock
(bad)
pusha
jmp
iret
xchg
jmp
lods
push
cmp
(bad)
in
iret
cld
cld
mov
push
lock
push
dec
fidivr
mov
mov
mov
mov
cli
mov
sub
popf
ds
fidiv
in
pop
icebp
xor
pushf
or
or
cwde
mov
sub
aas
or
retf
movaps
inc
jg
inc
ror
jle
shl
les
cld
(bad)
arpl
ret
(bad)
jl
jo
adc
dec
fneni(8087
jle
stos
ss
jle
jae
pop
push
aas
pop
outs
cli
iret
cdq
sub
sub
out
test
test
out
or
in
jns
das
mov
push
lods
or
mov
psubsb
ret
xor
mov
cmp
fs
into
int3
fnstcw
std
push
movs
in
fidiv
in
push
mov
push
fnstcw
and
rcl
aas
js
xor
out
jno
(bad)
mov
push
sbb
and
inc
push
fisubr
shl
ret
or
push
push
push
jp
mov
xchg
stc
xor
adc
mov
mov
mov
push
stos
jl
adc
add
mov
in
std
(bad)
cmp
push
push
mov
rcr
aaa
icebp
fmul
je
sub
and
out
ror
or
jle
test
mov
out
sbb
inc
fmul
ret
repz
xchg
test
cmp
fs
pop
adc
add
adc
and
popf
leave
lods
sti
out
sbb
ds
jns
mov
jg
fsubrp
or
(bad)
loop
mov
cmp
jno
adc
ja
xchg
retf
inc
jle
aas
test
sti
cmps
test
int3
cs
or
outs
fstp
mov
cmp
scas
cmp
shl
or
and
jnp
xchg
enter
scas
movs
in
xor
mov
cmp
loopne
stos
loopne
cmp
pop
xchg
xchg
sub
mov
jecxz
mov
inc
hlt
jle
clc
test
xor
es
inc
adc
push
repz
test
fistp
(bad)
or
rcr
or
icebp
sar
pushf
icebp
mov
add
gs
shr
fimul
jno
aad
pop
inc
in
mov
sub
jae
dec
xchg
inc
mov
cld
jecxz
sbb
mov
in
and
pop
jae
jp
in
mov
xlat
cs
iret
add
cmp
inc
rol
cmps
mov
movs
cmp
jno
mov
cld
lds
xor
jmp
es
mul
xchg
xchg
push
and
or
sub
ud2
push
fcom
test
icebp
cld
fistp
push
js
push
jnp
adc
mov
mov
or
(bad)
push
sub
retf
mov
add
inc
clc
stc
jg
js
rol
jecxz
mov
lds
in
add
or
pop
mov
mov
in
cmps
or
sbb
cmc
out
push
sub
dec
ret
jg
rol
adc
call
ror
jbe
jmp
sub
mov
mov
fisub
popf
mov
lds
cwde
test
jmp
cdq
into
(bad)
jmp
dec
jb
jo
adc
sar
scas
sub
jo
sub
jb
jb
cmp
das
push
repnz
ds
mov
jns
dec
repz
imul
adc
cmp
sbb
ret
mov
dec
sub
shl
dec
mov
add
stos
or
call
jge
inc
mov
aam
xchg
test
jns
lods
in
jmp
and
bndldx
fs
sti
jae
out
cmp
push
rcl
mov
cmp
jae
sbb
jg
ficomp
test
add
daa
gs
imul
inc
iret
mov
fistp
movs
add
gs
jmp
sbb
clc
sbb
fs
push
mov
push
cs
mov
sub
sub
aad
or
mov
jmp
aam
jnp
test
push
add
push
and
pop
xor
mov
add
xlat
aaa
pop
pop
sti
shl
adc
and
pop
aaa
xchg
and
dec
test
mov
adc
sti
mov
push
into
(bad)
mov
adc
mov
dec
(bad)
shl
inc
in
cs
add
mov
out
out
and
mov
jle
push
shl
push
dec
aam
call
mov
call
aas
inc
inc
sub
int3
lods
out
or
imul
mov
add
xlat
dec
pop
sar
jle
cmp
(bad)
push
xchg
push
and
mov
pop
leave
int3
jo
leave
push
fwait
jmp
int3
cmp
add
or
cld
add
rcr
xor
dec
jb
popf
fstp
daa
xor
inc
adc
xor
pop
scas
cld
test
sbb
push
out
xchg
push
mov
jns
sub
fcom
mov
xchg
jl
dec
jmp
popa
sbb
inc
movs
jmp
(bad)
aad
test
jle
mov
jne
and
out
shl
shl
sub
lods
jnp
rol
kandb
xor
or
ror
imul
fisttp
adc
or
add
mov
pop
xchg
xchg
and
sub
nop
dec
or
pop
pushaw
cmp
cli
mov
fisttp
cli
aaa
mov
outs
adc
mov
xor
mov
stos
es
mov
inc
arpl
pop
pop
push
lds
ror
xor
mov
push
call
out
addr16
rcr
cdq
das
ss
cli
mov
mov
jns
xchg
cwde
jg
test
popw
repz
ins
mov
ss
aad
or
pusha
jmp
mov
sbb
jae
xor
pop
jp
mul
lods
add
in
loopne
mov
jmp
mov
push
leave
mov
into
daa
not
pop
mov
adc
mov
ret
test
inc
adc
inc
pop
sub
xor
aaa
movs
xchg
in
ficom
mov
pop
minps
lods
jp
sahf
cmps
dec
cmc
mov
outs
es
lods
jae
cmp
loopne
push
stc
inc
or
add
mov
add
out
mov
pop
mov
out
mov
sbb
xor
dec
idiv
push
les
and
push
mov
push
rcr
mov
cmp
xchg
shl
jo
je
sub
dec
(bad)
mov
shl
hlt
gs
pop
cwde
dec
and
sub
jno
cli
(bad)
mov
pop
repz
pop
cmps
inc
jnp
or
sbb
mov
dec
or
pushf
ss
sti
inc
inc
and
sub
mov
aam
lea
xchg
mov
iret
cmp
stos
jge
mov
xlat
jbe
ret
ss
cmps
push
movs
fwait
in
jmp
fisub
outs
jae
lds
leave
xchg
test
rol
mov
inc
(bad)
sar
sub
popf
not
mov
je
mov
arpl
cmc
mov
ror
dec
jno
fcmovne
out
gs
ins
cmps
pop
cmp
stos
mov
movs
jno
xchg
mov
shr
mov
outs
mov
out
dec
ja
hlt
and
push
fwait
icebp
jbe
iret
iret
rol
aad
or
adc
std
xchg
mov
ds
inc
cwde
cmp
mov
imul
retf
shl
sub
out
or
mov
imul
nop
mov
aad
pushf
je
shl
or
dec
daa
xor
loope
sub
lea
neg
aas
loop
jmp
dec
pop
mov
add
mov
lds
jae
bound
fadd
add
inc
lahf
and
dec
cdq
jle
call
inc
stc
call
jp
(bad)
bound
dec
cmp
out
in
adc
mov
mov
adc
mov
fwait
shl
movs
pop
and
adc
push
adc
lods
mov
lock
mov
repnz
mov
dec
int
and
hlt
push
aaa
outs
dec
fdivr
mov
dec
push
dec
out
aam
cmp
jl
outs
sub
cli
cdq
dec
pop
sbb
shl
fcom
cmc
repnz
mov
add
loopne
dec
iret
and
cmp
push
loopne
lock
fsub
fbstp
sub
fs
or
xor
call
jno
es
inc
add
mov
int
inc
adc
cs
cmp
rcr
in
(bad)
out
repnz
add
bound
jg
cli
mov
(bad)
mov
cmp
aas
mov
inc
mov
xor
fisub
shl
leave
sub
pop
int3
inc
dec
fmul
mov
mov
dec
add
inc
int3
lahf
xor
add
in
ja
dec
pop
imul
sbb
daa
repz
sti
add
mov
repnz
add
add
fbld
fwait
sub
adc
cld
ret
push
test
in
mov
jae
enter
fmul
loopne
movs
xor
int
dec
movs
push
add
add
mov
xchg
das
xor
fucomi
sub
das
dec
out
cdq
and
sub
sahf
out
lods
mov
out
cli
icebp
(bad)
gs
(bad)
jae
add
movs
popa
sbb
cld
xchg
mov
psubusb
mov
sti
cmp
lds
mov
cld
cmp
pop
(bad)
stos
movs
pop
ror
lds
popf
mov
pop
and
(bad)
xor
out
add
lods
mov
out
push
cmp
cs
inc
stos
clc
dec
retf
or
or
jp
cmps
cs
adc
mov
jle
rcl
dec
mov
sbb
test
(bad)
ss
test
mov
mov
ret
arpl
repz
es
cmp
fsub
pop
xor
mov
inc
cli
pop
pop
in
add
mov
push
lds
or
jle
pop
ret
movs
ins
mov
sbb
xchg
sbb
data16
push
mov
mov
cmp
retf
ret
push
rcr
in
imul
mov
add
pop
in
cld
imul
popa
sbb
jo
shr
out
pushf
fist
ror
mov
jne
ret
inc
cwde
cmp
movs
outs
pop
lods
add
mov
jmp
sar
retf
retf
je
icebp
movs
sub
adc
ins
mov
das
into
xchg
adc
clc
mov
mov
or
imul
ss
rcl
int
push
rol
fwait
xor
push
cld
loop
jbe
test
inc
stos
(bad)
xor
movs
lea
sbb
mov
xor
ja
push
daa
idiv
push
push
pop
and
lahf
dec
nop
dec
and
jecxz
jl
ins
loop
pop
dec
xor
cwde
inc
sti
popa
pop
dec
adc
xor
xor
pop
mov
std
xor
sbb
cmp
imul
aaa
and
xor
(bad)
gs
push
int3
in
add
mov
push
aaa
push
das
dec
popa
sbb
mov
nop
inc
mov
pop
cld
pop
fwait
push
fcom
jge
pop
inc
dec
mov
and
cmp
mov
cld
or
mov
out
out
mov
js
aas
stos
cmp
imul
mov
aas
push
sbb
mov
jbe
imul
push
and
inc
xchg
inc
mov
int
cmp
test
scas
stc
out
rcr
pop
push
ja
cdq
and
jbe
scas
inc
int3
adc
pop
outs
lods
in
jg
test
sbb
sub
jnp
retf
out
jg
dec
jecxz
pop
adc
fmulp
out
aaa
std
lods
pop
pop
ins
sbb
in
add
in
aam
mov
mov
or
lock
fst
rol
push
sahf
rol
pop
fwait
inc
xchg
sar
dec
mov
mov
cmc
adc
cs
push
jo
lds
push
cdq
inc
lahf
dec
add
jmp
and
daa
mov
inc
dec
lds
into
iret
mov
mov
sahf
popf
out
xor
fstp
xchg
aam
add
mov
fwait
and
loope
idiv
jecxz
jno
(bad)
cmp
jnp
movs
pushf
(bad)
jmp
and
xor
ret
add
ret
mov
scas
call
cld
mov
cs
pop
mov
in
cmp
mov
movs
jne
dec
push
das
into
retf
mov
push
arpl
adc
mov
sub
aad
repz
mov
data16
bound
shl
dec
mov
(bad)
leave
xor
mov
cmp
out
mov
leave
adc
cdq
popa
pop
scas
cmp
mov
sub
xor
iret
lods
frstor
ins
jns
rol
pop
popf
(bad)
push
fnstenv
jmp
fs
cmp
lea
and
rol
in
and
add
push
push
icebp
mov
out
inc
inc
xchg
movs
adc
lea
xchg
mov
pop
cli
add
and
push
retf
outs
test
pop
dec
xchg
dec
into
sub
retf
in
out
mov
sub
xchg
xor
fst
lock
push
add
dec
or
loopne
shl
into
cwde
mov
dec
inc
jae
add
sbb
fdiv
mov
es
add
add
scas
js
fsub
xlat
and
sbb
cmp
add
shl
push
mov
loopne
jecxz
jl
in
(bad)
call
mov
adc
outs
and
xchg
or
add
pop
scas
fcomp
ss
pcmpeqb
icebp
arpl
aam
pop
mov
adc
cmp
xlat
add
into
add
out
mov
sbb
sbb
add
sbb
mov
dec
jl
je
outs
push
(bad)
out
cmp
push
or
jb
jg
js
inc
and
movs
stos
xchg
jbe
test
aas
push
retf
push
jle
jmp
sbb
xchg
xor
adc
sbb
push
shl
and
add
add
push
jo
dec
mov
xor
test
pop
and
push
cli
test
icebp
test
xchg
push
or
(bad)
fisttp
lea
sub
test
or
push
xchg
or
xchg
das
cmp
xchg
scas
mov
shl
call
pop
cmp
sub
sar
mov
mov
push
and
ins
ds
cmp
or
or
push
xor
jp
sahf
std
shr
inc
and
adc
pop
js
mov
mov
aad
xchg
js
dec
ror
rol
mov
or
mov
sbb
in
push
fidiv
repz
scas
daa
fldcw
xor
dec
jg
(bad)
pushf
mov
dec
int3
add
cwde
je
inc
mov
jmp
test
int
ins
xlat
sbb
in
lods
mov
outs
inc
cdq
lods
idiv
(bad)
loop
push
adc
outs
adc
sub
neg
inc
pop
sub
xchg
es
xor
popfw
mov
xchg
and
mov
xchg
movs
mov
pop
add
sbb
(bad)
stc
repnz
not
fmul
jmp
fs
pop
ss
sar
mov
xor
push
mov
inc
aam
cli
rep
mov
adc
pop
fistp
int3
mov
cld
out
daa
add
or
mov
test
mov
repz
gs
add
cmp
jmp
mov
test
sub
lea
mov
js
push
mov
sub
shr
fcmove
and
cli
imul
jecxz
mov
(bad)
stos
retf
or
adc
adc
mov
sbb
out
push
sbb
rcl
inc
loopne
es
popa
mov
or
mov
loope
in
std
ins
scas
jbe
jo
mov
jecxz
iret
aam
cdq
je
dec
dec
fcmove
push
jmp
add
rol
das
mov
add
dec
xchg
sub
push
loopne
shl
push
stos
pop
int3
pushf
add
sbb
mov
test
mov
fs
mov
stos
and
lods
sub
int
mov
or
dec
add
sub
dec
cmp
and
out
movs
(bad)
outs
das
aad
ss
sub
pop
jns
add
sub
rcr
add
ret
pop
cmp
(bad)
dec
popa
mov
push
jnp
sub
icebp
or
inc
outs
and
test
dec
movs
nop
dec
add
or
fdivr
cmp
ret
cmp
add
xor
cmps
repz
xor
pusha
cld
fs
inc
push
retf
pop
push
cmp
rcl
sbb
les
stos
div
pop
daa
inc
bnd
mov
in
mov
jg
or
imul
sgdtd
pop
cld
mul
lds
(bad)
dec
sub
call
jecxz
pop
test
push
add
jle
addr16
jnp
imul
or
out
ds
test
repnz
mov
out
in
(bad)
push
mov
mov
call
jmp
fist
cmp
leave
push
mov
xor
daa
inc
sbb
push
jbe
mov
jo
xor
xor
pop
mov
jge
aad
or
mov
xlat
jl
mov
adc
adc
adc
inc
pop
ror
(bad)
dec
sti
sbb
push
xor
sahf
push
leave
pop
imul
les
into
call
push
xor
rcl
adc
mov
mov
data16
xchg
mov
sub
xchg
sbb
adc
movs
cmp
mov
out
dec
pop
icebp
pop
les
call
cmps
xlat
or
aas
mov
jp
shl
(bad)
adc
push
dec
sub
mov
(bad)
data16
inc
sub
arpl
xchg
sub
push
cwde
mov
xchg
pusha
cmps
jmp
test
xor
in
in
test
pop
out
(bad)
dec
push
push
push
(bad)
xchg
jne
cmp
mov
jbe
das
dec
inc
or
sbb
mov
(bad)
std
aad
ret
std
dec
mov
jmp
jmp
rcl
mov
adc
sbb
pusha
xor
pop
icebp
icebp
scas
push
fcomp
por
int3
(bad)
out
xchg
adc
jb
add
loope
lahf
inc
(bad)
aas
or
hlt
jbe
jae
out
xor
push
jle
hlt
cmc
mov
ins
cmp
pop
push
ret
cmp
rol
adc
jbe
ins
push
push
and
sbb
es
dec
test
cmp
stc
add
mov
push
pop
jg
inc
dec
lods
daa
push
pop
pop
xchg
stos
xchg
into
jp
pop
int3
and
cdq
iret
xor
push
out
jg
or
cld
and
mov
cmp
mov
loopne
ss
jecxz
jg
mov
or
mov
push
dec
adc
jp
push
fucomp
fwait
jle
mov
cmp
sbb
jle
add
sahf
jecxz
fwait
xchg
jg
inc
jne
std
sub
pop
mov
fstp
or
loopne
sbb
in
push
dec
out
out
add
mov
sbb
stos
jne
jae
int
jmp
mov
outs
push
stos
in
fidiv
hlt
into
xchg
fst
cdq
cmp
test
push
clc
pushf
xor
test
or
(bad)
shr
adc
xchg
dec
fdivr
xor
retf
sub
sub
sbb
adc
fnstcw
stc
cmp
add
sub
popa
sbb
jg
push
stos
inc
imul
xchg
into
imul
jbe
jno
push
pop
sbb
add
xor
imul
mov
push
mov
jo
xchg
retf
lea
mov
jecxz
into
ja
sbb
or
jecxz
loope
in
pop
das
inc
mov
neg
or
test
mov
les
repz
loop
mov
push
and
xchg
lds
xchg
sbb
rcl
loop
xchg
ins
mov
xchg
mov
jno
imul
(bad)
cdq
pop
and
loop
cmps
int
ins
sub
inc
outs
xchg
sbb
iret
cmp
inc
jmp
jae
pop
xlat
push
jo
repz
or
sbb
add
nop
jbe
pusha
pop
call
add
xchg
sbb
fstp
mov
mov
stos
add
les
mov
pop
mov
sbb
neg
xor
call
mov
xor
pusha
dec
rcr
xor
(bad)
pop
fisubr
cmp
add
push
jbe
push
imul
in
dec
idiv
cmp
add
or
call
aaa
pop
adc
arpl
ret
lods
ret
jne
sbb
xchg
ins
ret
ret
mov
and
and
push
es
or
into
push
inc
inc
cmp
pop
cmps
xchg
mov
mov
mov
icebp
scas
push
pop
cmps
xchg
call
xchg
test
in
xchg
pop
dec
add
out
popa
pop
movs
and
mov
out
ds
xchg
sub
mov
inc
pop
jno
(bad)
(bad)
jmp
push
dec
jp
mov
mov
mov
push
scas
ja
adc
xor
adc
stc
jae
lods
xchg
arpl
mov
push
mov
jle
test
fiadd
mov
sub
xchg
xor
fs
xchg
enter
outs
outs
xchg
(bad)
loop
test
not
(bad)
jle
ds
xchg
hlt
push
sbb
lahf
jno
lahf
dec
push
xlat
nop
inc
out
call
adc
fidivr
sub
fild
pop
mov
outs
mov
call
dec
jbe
jne
mov
aad
(bad)
in
push
sub
mov
test
sub
sbb
retf
jno
div
fisubr
mov
push
sbb
push
stos
out
and
mov
popf
push
pop
ret
or
push
jl
sub
xor
test
movs
cmp
out
jne
adc
test
push
cmp
dec
sub
inc
mov
xchg
dec
(bad)
mov
and
or
push
popf
mov
pusha
sub
jo
(bad)
lods
test
cmp
push
shr
les
dec
leave
outs
jns
mov
mov
inc
aaa
adc
pop
jb
fiadd
push
(bad)
retf
ins
sbb
push
retf
jns
outs
popf
ss
imul
ja
aad
cmps
shl
cmp
jo
xor
pop
rcl
out
(bad)
jno
pop
clc
jb
out
dec
repnz
sbb
nop
es
jle
cmc
nop
into
inc
in
mov
xchg
lea
out
inc
das
push
jg
mov
pop
push
sbb
cld
cmp
cmp
shl
mov
call
push
xchg
inc
daa
mov
aas
mov
mov
(bad)
stos
(bad)
xchg
sub
movs
cmps
in
ja
add
inc
xchg
jmp
mov
imul
and
inc
sti
ror
out
cwde
clc
out
movs
cld
pop
lahf
in
inc
cmp
cmovno
das
dec
repnz
int3
test
lods
or
mov
call
push
clc
or
push
out
xchg
(bad)
imul
xlat
sbb
sbb
pop
outs
pop
test
cmp
in
inc
pushf
(bad)
mov
xor
cmp
(bad)
gs
ds
cwde
jns
loope
ret
ret
mov
pushf
and
out
mov
dec
ds
dec
xchg
push
jae
cmp
sub
mov
jge
ret
in
sahf
push
into
or
cmp
out
mov
mov
(bad)
cwde
retf
inc
add
fdivr
xchg
iret
mov
and
je
or
loop
in
mov
popa
enter
test
data16
xchg
ins
xor
and
cmc
sar
stos
xchg
push
mov
aaa
(bad)
and
out
xchg
push
imul
mov
xchg
movs
inc
add
iret
outs
js
int
hlt
scas
mov
pop
nop
(bad)
inc
stos
xor
add
and
sbb
jo
ss
lahf
push
test
fs
xchg
inc
xor
jns
and
or
iret
pop
xchg
sbb
call
inc
sbb
dec
push
xor
movs
inc
retf
shl
fwait
push
in
and
fdiv
push
imul
popa
push
in
repnz
test
xchg
aad
(bad)
adc
shl
imul
add
inc
arpl
jae
cdq
cmp
mov
fucomp
call
addr16
mov
push
test
(bad)
mov
pushf
push
dec
pop
push
(bad)
xchg
inc
cld
sbb
add
or
pop
daa
(bad)
dec
addr16
mov
sub
cmps
mov
ss
sbb
(bad)
jae
jge
sbb
pusha
aad
jbe
mov
mov
dec
xchg
outs
mov
mov
das
sbb
cli
or
or
sahf
icebp
aam
dec
loop
jg
and
jno
dec
cmps
mov
fwait
xor
adc
jl
adc
add
ds
sbb
arpl
pop
les
shl
jns
loope
jp
sbb
fwait
sbb
mov
dec
jb
jns
idiv
sbb
mov
repz
fisttp
cmp
fld
mov
inc
pusha
pop
xchg
in
cs
mov
push
in
arpl
cwde
or
in
outs
gs
aaa
in
out
xchg
xlat
in
fstp
mov
or
push
mov
repnz
sbb
mov
cmps
jne
ins
xchg
jae
or
dec
pop
int3
loop
pop
adc
repz
clc
jg
imul
adc
call
fidivr
mov
adc
xchg
or
cli
add
pop
fdivr
loope
rcl
xchg
ja
jb
repz
sub
adc
xor
js
push
inc
add
pop
dec
and
inc
xchg
ret
add
sbb
push
loope
popa
cmps
add
pop
push
mov
mov
adc
out
xchg
gs
push
loopne
rcr
rcl
lods
push
in
stos
xor
jg
and
sub
cld
mov
mov
or
jg
aad
cwde
cwde
in
clc
pop
jb
pop
hlt
leave
lahf
pop
pop
mov
mov
repz
popf
and
popf
out
cmp
xor
lock
out
or
xor
and
xor
add
(bad)
jae
aaa
sub
dec
mov
sti
jne
add
sub
int
pop
push
imul
hlt
mov
mov
jge
push
cmc
nop
cmp
cdq
jp
rcr
mov
add
(bad)
adc
xchg
xchg
loopne
push
push
popf
cmp
aad
cwde
mov
fild
shl
ret
ins
or
call
and
mov
xlat
mov
leave
test
test
adc
xchg
mov
xchg
push
jl
sbb
cld
stc
shr
seto
nop
js
and
cdq
sub
sahf
add
cld
mov
jno
push
cld
mov
mov
mov
lds
jmp
mov
xchg
mov
push
jb
ins
and
mov
arpl
(bad)
and
xchg
aaa
pop
add
xchg
mov
call
ret
sahf
scas
in
movs
(bad)
or
jmp
adc
ficom
mov
jmp
xlat
mov
mov
sub
out
inc
pop
(bad)
inc
cmp
lds
into
mov
es
icebp
sbb
pushf
push
ds
pop
xlat
and
xchg
xchg
sub
sub
sub
imul
cmp
mov
cmc
je
inc
mov
imul
jge
cmp
mov
call
inc
fsubr
pop
sti
or
in
sub
add
fcom
outs
mov
in
mov
shl
out
xor
mov
mov
cmps
xor
in
mov
out
mov
es
push
dec
mov
into
jae
xor
lds
js
xor
test
rol
add
pop
ja
sahf
sbb
jle
test
(bad)
mov
add
data16
lds
test
call
lods
mov
dec
push
imul
sbb
or
call
cmp
mov
retf
cmp
ds
pusha
cmp
xchg
jmp
sub
ins
adc
jmp
xchg
xor
(bad)
adc
fist
stos
and
dec
inc
and
sbb
inc
sub
mov
xor
clc
mov
and
sub
jae
(bad)
cmp
push
mov
pushf
xor
push
jae
push
xchg
xor
xor
stos
add
push
lahf
shl
ins
push
idiv
or
inc
pop
enter
addr16
inc
inc
cmp
or
imul
fwait
iret
pop
mov
push
inc
sub
and
int3
dec
add
std
cwde
and
xlat
pop
xchg
xor
stos
xchg
jns
inc
in
or
(bad)
out
adc
jmp
aad
ja
clc
bound
push
fiadd
das
cmp
dec
push
pop
sbb
hlt
das
outs
cli
push
sbb
test
push
pop
sub
shl
push
test
mov
sub
or
xchg
push
cs
cmc
mov
mov
inc
mov
je
out
push
(bad)
fdivr
or
ds
push
out
movs
sti
push
inc
jnp
jns
scas
and
sar
push
ficomp
(bad)
pop
cwde
loop
fwait
mov
xor
cld
lock
cs
es
(bad)
fs
cmps
mov
mov
aas
jns
icebp
mov
mov
test
xor
inc
cmp
push
retf
call
push
das
xchg
mov
lods
or
and
jno
push
(bad)
fadd
cli
or
(bad)
fimul
ds
bound
xchg
dec
push
cmp
add
pop
lds
sub
pop
and
das
(bad)
arpl
push
push
inc
mov
xchg
sub
dec
cmp
sub
stos
stc
shl
ror
popa
jo
(bad)
add
retf
xchg
cmp
xlat
cmp
loop
sahf
xchg
ins
jb
push
xchg
xor
nop
cld
(bad)
adc
cmp
movs
jge
mov
into
xchg
mov
mov
fdivr
or
out
punpcklwd
jae
adc
sub
add
mov
out
inc
mov
(bad)
(bad)
pop
cmp
icebp
add
jnp
aaa
xchg
pop
movs
or
cmps
cmps
pop
mov
mov
(bad)
jnp
cmp
cmp
repz
cwde
push
pop
mov
rol
adc
mov
pop
and
inc
out
xchg
retf
inc
test
pop
fwait
imul
sbb
out
invd
mov
jno
clc
add
sub
stos
sbb
in
mov
scas
out
mov
data16
cmps
pop
jbe
mov
dec
xchg
jp
ins
aam
(bad)
(bad)
in
inc
ds
mov
in
dec
jb
xchg
mov
jae
pop
jecxz
inc
(bad)
sti
jb
fdiv
sub
std
mov
ss
out
hlt
into
and
js
stc
aad
ror
cli
jmp
cmp
stc
push
dec
add
pusha
leave
je
imul
sub
pop
xchg
cdq
aaa
imul
push
fnstenv
xchg
jl
jb
pushf
sbb
and
lds
(bad)
xlat
popf
xor
jg
fwait
lds
inc
lds
and
sub
lea
dec
movs
push
cmp
push
ins
in
call
out
pusha
or
iret
leave
sub
iret
add
dec
es
sub
popa
imul
outs
xor
mov
ror
push
mov
stos
sbb
jmp
(bad)
push
dec
add
jle
sbb
ins
and
mov
shl
fst
aas
call
sub
fucomp
push
pop
sbb
push
mov
mov
sar
adc
iret
push
daa
in
xor
lock
adc
inc
aam
dec
stos
sbb
inc
ret
in
sbb
sbb
inc
repz
xor
xor
xchg
xchg
add
div
and
test
sbb
outs
scas
mov
jno
stos
xchg
mov
bound
lea
xlat
jmp
stos
xor
retf
mov
nop
mov
xchg
bound
sub
mov
lds
lods
add
enter
mov
and
add
pop
out
pop
pop
out
mov
sub
adc
adc
and
dec
inc
mov
pop
popf
out
stos
xor
or
sbb
inc
pop
pop
sbb
inc
sti
and
repnz
pop
loopne
cmc
push
aas
sub
mov
cmp
or
and
sahf
dec
mov
repnz
mov
cdq
mov
mov
push
(bad)
sub
mov
sbb
punpckhdq
jmp
push
scas
movs
sbb
scas
daa
stc
fcom
gs
iret
pop
cld
(bad)
js
or
clc
lods
popf
pop
push
ja
or
jbe
xchg
leave
std
mov
xchg
imul
push
fs
sbb
or
es
cmp
jge
cmc
jae
push
mov
fidiv
fistp
ja
cmps
nop
push
jnp
mov
cvtdq2ps
or
mov
psllq
jae
mov
aad
ins
daa
jae
sbb
jb
pop
stc
jbe
mov
xbegin
cmc
push
mov
xor
mov
sub
jle
inc
and
mov
push
jae
xchg
imul
pop
push
jno
repz
iret
mov
lods
xchg
sbb
add
mov
push
aaa
into
test
mov
jmp
push
out
adc
adc
pop
sbb
cli
mov
das
or
dec
inc
dec
ins
xor
xor
adc
xchg
dec
(bad)
mov
sub
hlt
ret
sar
test
fs
inc
fisttp
jecxz
mov
cdq
into
shl
pusha
jae
movs
and
nop
dec
sub
pop
jg
xchg
(bad)
ss
ins
rcr
sti
adc
or
ja
dec
repz
(bad)
cli
leave
retf
mov
push
lea
call
int
test
loopne
les
push
xchg
mov
xchg
in
(bad)
imul
add
pop
jp
shl
iret
lds
cli
call
out
mov
adc
in
cmp
aam
cmp
pop
push
out
call
dec
xchg
das
ss
sbb
bound
mov
fwait
fwait
nop
daa
or
(bad)
imul
imul
out
and
sbb
jnp
cld
sub
mov
(bad)
pop
in
jmp
(bad)
and
pop
lahf
call
jo
mov
and
mov
test
lock
sti
in
fld
mov
dec
popf
inc
cdq
cmp
mov
sub
mov
pop
cmp
retf
sbb
sub
mov
ins
out
xchg
xchg
repz
test
data16
stos
test
mov
xlat
inc
outs
sbb
adc
test
mov
inc
loope
dec
loop
cmps
push
and
inc
dec
loopne
jecxz
pushf
stos
xchg
loop
shl
cmc
fldenv
jbe
jl
dec
gs
xchg
pop
push
and
out
pop
cwde
jns
clc
dec
lea
mov
(bad)
fdiv
(bad)
mov
mov
prefetch
pop
jnp
aam
xor
int3
jl
sub
push
fdivr
push
inc
jo
cdq
xchg
icebp
pop
sub
push
sbb
test
popa
adc
or
cmps
pop
jne
call
in
mov
fst
mov
mov
and
ja
fsubr
jge
or
push
call
pop
xchg
iret
cld
cdq
push
lahf
adc
mov
loope
leave
xor
mov
cmp
test
push
and
mov
out
cmp
jp
ror
inc
dec
dec
mov
outs
sbb
hlt
adc
add
or
jae
arpl
lods
jne
inc
out
call
and
adc
jge
pop
mov
cdq
js
fbstp
mov
les
cld
test
or
(bad)
not
aas
loopne
mov
pop
mov
repnz
nop
mov
sbb
std
pop
std
mov
add
loopne
cmps
dec
ja
pop
mov
scas
out
arpl
rol
stos
lahf
je
inc
mov
pop
ss
jmp
outs
add
jmp
adc
mov
out
sub
sub
sbb
out
rcr
popa
add
pop
mov
inc
or
cmps
clc
fbld
int3
aam
pavgb
sar
int
cmp
lds
in
pushf
aaa
ds
int
fs
int
loop
stos
jp
(bad)
xor
xchg
or
aad
inc
dec
in
sbb
fnstcw
xor
and
ret
out
icebp
sub
mov
mov
xor
fstp
pop
out
jmp
daa
sub
loope
repnz
and
xchg
push
jo
cmc
push
lahf
jg
movs
out
(bad)
adc
cmps
outs
cli
lods
lahf
dec
and
in
ficom
shl
push
das
fcmovnbe
cmp
cmp
jge
sbb
int
andps
sbb
or
mov
mov
aad
mov
xor
mov
test
sub
out
imul
jg
mov
mov
mov
push
outs
xor
jb
add
je
push
stos
ror
addr16
imul
mov
mov
dec
fldenv
stos
leave
jae
sar
call
in
in
pop
cli
call
(bad)
shl
jns
mov
imul
pop
xor
cmc
retf
mov
pop
mov
loope
push
daa
jmp
repz
mov
out
sbb
pushf
mov
cmps
pop
xlat
shl
mov
mov
and
and
add
test
iret
cmps
cmp
and
stos
mov
jnp
mov
xchg
sbb
inc
cmp
popa
daa
ret
cmp
fimul
test
pop
sub
jmp
lds
ret
xor
retf
pop
out
in
mov
aaa
ds
call
ins
rol
xchg
dec
es
adc
shr
inc
ret
std
int
scas
push
sub
mov
inc
out
dec
mov
xor
mov
jb
mov
test
pusha
int
push
dec
hlt
pusha
jnp
fld
lods
and
out
sbb
dec
jb
cmp
mov
push
jae
jbe
add
inc
jb
hlt
jnp
and
and
add
adc
pop
or
je
jp
call
aad
jb
jg
adc
(bad)
fcmovnu
or
jmp
gs
cmp
scas
ret
mov
inc
and
out
dec
push
mov
aaa
dec
xor
fucomip
jge
xchg
sbb
mov
aad
addr16
fld
or
jp
pushf
push
mov
jmp
loope
aad
mov
and
xchg
sub
xor
imul
push
call
pop
fwait
jmp
cdq
int3
ins
int3
clc
gs
mov
test
in
jmp
mov
push
fisub
xchg
bound
sbb
fidiv
mov
outs
sub
jecxz
les
xchg
pop
aaa
dec
fsub
xor
repz
aad
xchg
loopne
push
mov
test
loop
or
and
pop
js
shr
xchg
sub
inc
loop
nop
push
dec
mov
mov
xchg
adc
push
enter
shr
std
repz
fistp
fst
xchg
cmc
in
mov
xor
add
dec
das
call
dec
jnp
dec
or
xor
icebp
jmp
pusha
xor
jae
div
jecxz
adc
jbe
imul
cmp
dec
shl
or
sub
mov
int
push
push
jle
mov
push
rcr
stos
mov
mov
dec
inc
xor
cmps
jge
shr
int3
jle
push
bound
add
inc
xor
enter
mov
dec
out
icebp
scas
cmp
aaa
mov
arpl
push
sub
jns
dec
nop
gs
or
or
jle
mov
sbb
add
inc
loop
add
mov
mov
shl
mov
pop
dec
fimul
ffree
adc
daa
sahf
sbb
stos
ret
js
and
adc
and
jge
cmc
mov
arpl
jmp
popf
addr16
imul
repnz
xchg
push
aad
aam
mov
(bad)
fimul
adc
sar
aaa
push
(bad)
into
sbb
js
daa
or
xor
pop
sub
(bad)
movs
lahf
fst
sar
scas
gs
mov
pop
aam
stos
ret
xor
and
sbb
pop
pusha
mov
fidiv
stos
xchg
jnp
cmp
fistp
ret
ja
es
push
inc
sti
mov
int
call
cmc
movs
xchg
call
aaa
retf
lods
or
(bad)
or
jge
xchg
outs
inc
or
je
shl
jo
and
(bad)
mov
ins
xchg
pop
mov
mov
push
out
dec
es
test
cmps
shl
arpl
mov
sti
shr
stos
xchg
inc
pop
aaa
push
lods
push
addr16
aad
pusha
xor
int
shl
sub
imul
sbb
cmp
push
popa
repnz
add
aas
mov
mov
shl
loopne
mov
and
lock
scas
push
xor
push
int3
inc
inc
mov
ss
cwde
dec
call
(bad)
adc
push
xchg
xchg
adc
dec
mov
cmp
outs
jle
fnstsw
lea
sahf
ins
repnz
push
call
push
clc
fucom
retf
(bad)
push
mov
out
movs
inc
add
sar
aas
jo
in
sub
xchg
js
pop
pop
lds
add
dec
jge
xchg
lods
cmps
outs
add
jg
cmp
pop
dec
or
(bad)
jl
cmp
out
dec
mov
rcr
stos
(bad)
or
sub
inc
hlt
shrd
fcomi
fs
pop
cli
rcr
lods
shl
ins
pusha
iret
stos
or
icebp
jmp
test
jg
mov
jne
mov
sub
ins
adc
hlt
xchg
sbb
xchg
jno
jb
mov
dec
nop
adc
(bad)
call
nop
bound
cs
jb
stos
cmp
xchg
sbb
or
add
ror
lahf
out
or
xor
mov
adc
push
fstp
imul
pop
sbb
jno
or
scas
loop
sub
test
jp
pop
add
cmp
test
fs
inc
mov
jae
shl
rcr
into
jno
stos
sbb
cmps
(bad)
cli
(bad)
aad
lock
cmp
in
dec
xor
pop
push
jmp
outs
mov
pushf
rcr
je
aas
inc
ret
lods
push
scas
rcl
fisttp
jae
sbb
mov
sub
test
mov
pop
mov
add
fwait
sbb
call
shr
stos
mov
push
or
mov
jge
fdiv
add
xchg
cmps
sbb
xchg
and
icebp
in
mov
and
cmp
(bad)
(bad)
inc
inc
mov
mov
js
inc
mov
outs
push
cmc
add
repz
jnp
mov
sub
xchg
xchg
xchg
div
loop
inc
test
pop
aad
push
loope
dec
imul
loop
(bad)
jg
imul
jbe
and
push
retf
ds
xchg
adc
out
and
ror
inc
movs
adc
xor
push
xchg
cmp
push
ret
xchg
xchg
xchg
leave
cmp
dec
jo
nop
sbb
jnp
mov
pop
loopne
mov
xchg
cmps
sahf
retf
pop
xor
repz
fwait
ds
daa
movs
ss
test
cmps
cmps
pop
dec
push
call
jne
jb
mov
or
test
sub
add
inc
pop
stos
or
ror
add
mov
xchg
sub
dec
push
cmp
mov
pop
mov
adc
push
int
inc
adc
cmp
and
out
push
into
pop
mov
pushf
cmp
dec
dec
jbe
adc
dec
inc
dec
mov
jmp
pushf
jge
adc
int
push
sub
aas
idiv
or
jo
movs
ins
int3
mov
or
xor
sub
fcomi
ins
popa
cmp
aad
rol
pop
jae
out
fld
sub
push
mov
lods
scas
bound
inc
outs
adc
mov
movs
loop
adc
and
(bad)
call
pop
push
jbe
dec
push
cld
loop
or
nop
or
call
xchg
adc
jmp
adc
and
hlt
dec
sar
pop
in
dec
sub
add
std
mul
mov
rcr
dec
js
xchg
sbb
jge
fnsave
in
cmp
(bad)
ins
inc
or
mov
jp
mov
div
fidivr
out
mov
inc
das
adc
ret
pop
pop
dec
shl
add
stc
or
test
inc
cmps
dec
nop
cmp
stc
mov
imul
sbb
pop
popf
mov
push
add
sbb
pop
inc
fcom
xchg
xor
test
sahf
retf
test
jecxz
shr
out
sub
xchg
sbb
and
rcr
jo
test
add
sbb
(bad)
shl
push
jae
adc
jo
adc
push
jge
retf
shr
jle
mov
push
adc
add
cmp
popa
mov
adc
enter
sbb
mov
add
call
loopne
daa
xor
lahf
sbb
in
mov
in
ret
cmp
aam
pop
cmp
(bad)
jecxz
push
test
popa
xchg
call
int
pop
mov
out
cmc
call
imul
stc
scas
xor
dec
sbb
inc
pushf
hlt
lea
fisub
inc
les
xchg
jo
mov
cmp
jmp
sbb
sub
ficomp
sub
out
push
mov
adc
mov
aam
mov
mov
sub
out
and
inc
mov
repz
out
aam
add
rcl
test
fisttp
pop
dec
cli
mov
sahf
(bad)
leave
or
arpl
dec
bound
int3
add
and
sub
add
lea
outs
mov
pop
sub
cwde
mov
fs
scas
or
(bad)
pop
push
call
loop
dec
dec
imul
daa
outs
lods
mov
rcr
jge
xchg
and
lahf
test
mov
fdivp
pop
aad
mov
sub
iret
mov
push
leave
les
jle
xchg
ss
adc
out
dec
aaa
jl
ds
shl
mov
jl
jae
imul
pop
sbb
and
xchg
xchg
xchg
cld
adc
lods
stos
fadd
int
xchg
jecxz
aas
outs
emms
in
and
fwait
scas
jmp
out
dec
or
mov
das
repnz
jno
sbb
pop
add
in
idiv
push
jge
pushf
addr16
cli
push
or
mov
shl
test
fimul
and
mov
jo
push
inc
or
dec
mov
jg
das
popa
dec
pop
scas
lea
pushf
jg
add
dec
jle
in
call
mov
lods
add
ja
cmp
adc
out
xchg
dec
or
rcl
sbb
nop
push
add
add
hlt
add
dec
test
dec
add
mov
xchg
adc
ret
loopne
mov
cmps
jg
xor
adc
and
pop
or
add
lods
nop
or
xchg
mov
xchg
arpl
pop
add
cmps
adc
jecxz
sbb
push
push
jno
std
inc
cmp
aas
xchg
adc
mov
je
repnz
cli
mov
test
bound
jne
ja
xor
and
mov
cmps
jb
rol
xchg
movs
aaa
ins
dec
stc
cmps
stc
(bad)
outs
paddb
add
mov
ins
push
out
sbb
jae
test
addr16
adc
sub
loope
adc
sbb
ss
mov
fisub
jae
fistp
and
inc
out
aas
xchg
or
sub
inc
or
in
mov
in
rcr
jle
iret
and
pop
in
jae
imul
ins
jns
dec
xor
mov
retf
cmp
sbb
rol
sahf
mov
jp
xchg
out
enter
(bad)
jns
mov
iret
push
jl
mov
adc
call
jno
mov
adc
rcr
push
xchg
xor
pusha
(bad)
rcr
xchg
mov
sbb
movs
cmp
aaa
xchg
sub
mov
sub
arpl
out
and
push
mov
or
xor
(bad)
pop
push
cmp
jmp
xchg
push
sub
push
push
dec
sar
(bad)
mov
push
push
test
cdq
push
pop
int
in
retf
fcom
push
xchg
and
add
call
adc
dec
aad
nop
or
jp
xor
ret
dec
xlat
dec
in
int
fisttp
jle
jl
call
sbb
pop
icebp
jl
jnp
or
movs
ficom
cdq
leave
outs
out
xor
push
sbb
fstp
ret
in
into
ret
imul
jle
jle
or
scas
pop
jne
pop
sar
dec
icebp
pop
adc
cld
xor
xchg
call
mov
leave
iret
push
je
mov
xor
sub
and
push
xchg
call
xor
mov
dec
xor
ins
int
ret
mov
cmp
cdq
fld
rol
dec
in
jb
div
ret
adc
inc
lods
outs
pusha
cmps
lds
or
(bad)
xor
imul
push
jge
sbb
mov
imul
hlt
xchg
dec
idiv
add
div
test
sbb
or
loopne
mov
sub
jmp
and
out
jmp
dec
scas
inc
push
in
jo
call
push
sub
gs
or
mov
add
int
mov
stos
inc
dec
jmp
xor
add
stos
daa
sbb
ss
ins
mov
aad
jle
push
aad
repz
jno
or
pop
iret
sub
sahf
ret
rcl
lock
ret
and
test
adc
pop
int
dec
test
and
stos
pushf
inc
adc
arpl
jmp
mov
shl
in
lods
push
(bad)
jmp
ja
jmp
neg
out
mov
popf
aas
inc
(bad)
xlat
cwde
adc
outs
mov
jmp
stos
jecxz
xor
pop
jae
scas
or
repz
dec
add
popf
xchg
cs
sub
aas
mov
mul
or
dec
ret
not
cmp
cs
test
push
xchg
xor
sub
pop
xor
sbb
xor
jmp
sub
lahf
jno
je
data16
add
imul
dec
lock
lods
imul
mov
inc
adc
repz
xor
out
repnz
repz
mov
(bad)
sub
dec
or
cmp
stos
xchg
out
jno
cwde
int
fiadd
inc
mov
clc
adc
sub
sbb
sub
lds
xchg
jns
mov
mov
mov
neg
cmp
inc
int3
cmp
xor
fcom
out
ja
(bad)
movs
je
or
sar
sahf
ror
cmps
loopne
pop
mov
cs
dec
mov
or
fsub
dec
imul
into
pop
popa
dec
bound
sub
fwait
int3
pushf
xlat
gs
xchg
mov
jmp
pop
add
sbb
dec
inc
jl
imul
int3
aas
jmp
rcl
pop
daa
aas
jns
push
(bad)
pop
pop
xor
imul
cmp
jno
mov
adc
fidivr
test
xchg
fdivrp
adc
sub
test
jg
(bad)
mov
and
aam
js
out
xor
mov
pop
add
in
and
shl
(bad)
jmp
mov
dec
and
jo
test
push
ins
je
rcr
cdq
cmp
gs
and
xlat
call
jmp
popf
mov
js
inc
ret
cmps
mov
rcl
xor
or
jns
fist
sub
arpl
jp
or
inc
retf
imul
sbb
fnstcw
xor
xchg
movs
add
push
das
xchg
ins
lahf
inc
loop
mov
stos
xchg
mov
or
sbb
sbb
fmulp
fs
dec
mov
shr
mov
test
cmp
(bad)
cwde
cld
out
xor
mov
cmps
push
or
adc
cdq
mov
push
imul
ja
mov
xor
dec
push
je
add
mov
xor
pop
push
dec
mov
cdq
jnp
mov
lea
and
scas
retf
jnp
push
loope
pop
and
movs
push
les
or
xor
jb
jmp
mov
inc
push
xor
mov
int
push
icebp
mov
pop
sahf
data16
pop
shl
jmp
ja
enter
cmp
sahf
adc
pushw
jnp
fild
jae
jno
mov
jmp
out
jae
mov
push
sahf
cld
ftst
pop
stos
xor
push
cdq
(bad)
cld
pop
push
rcl
lahf
jmp
mov
fsub
pop
xor
jns
inc
and
and
push
mov
sub
ss
xlat
shl
les
adc
xchg
stos
xlat
imul
push
mov
not
sub
mov
test
add
push
repz
add
std
fcos
sbb
iret
repz
loop
add
sub
and
(bad)
cmp
fcmovb
daa
mov
nop
sbb
mov
loope
adc
out
push
cmps
imul
sbb
dec
addr16
mov
sub
and
and
or
fs
cs
into
mov
stos
pop
mov
dec
sbb
xor
cmp
jmp
mov
loop
pop
pop
rcr
(bad)
test
and
movs
jp
xchg
mov
aam
push
jae
bound
cmp
repz
int3
sub
shr
xchg
dec
es
test
movs
adc
aas
lock
push
and
push
mov
(bad)
mov
les
cmps
cmp
cmp
or
pop
shl
movs
cmp
ins
inc
out
mov
mov
and
stos
sar
shl
mov
pop
lea
mov
cld
inc
jns
adc
cmps
mov
xchg
push
mov
cmp
mov
clc
cwde
mov
dec
daa
jmp
adc
inc
and
jmp
ret
mov
mov
cli
or
adc
add
fimul
inc
adc
dec
adc
rcr
test
das
(bad)
adc
jmp
daa
ret
push
xor
mov
(bad)
xor
ret
(bad)
xchg
mov
test
pop
(bad)
sub
adc
call
or
xor
cmp
xchg
pop
aam
test
scas
push
nop
mov
fist
xor
fs
pusha
sbb
adc
outs
mov
fdivr
and
xlat
lss
lock
add
js
mul
mov
sbb
sbb
xor
std
mov
test
lea
mov
jg
push
repnz
int
loop
(bad)
retf
in
mov
imul
mov
pop
push
pusha
shl
mov
jmpw
pop
add
adc
loopne
and
or
lock
xor
leave
jge
div
js
mov
push
mov
sti
dec
lods
adc
jge
mov
dec
ins
jns
mov
dec
and
fimul
inc
adc
jp
mov
(bad)
leave
mov
out
into
movs
retf
jge
lods
xor
out
int
inc
shl
dec
add
mov
(bad)
mov
sti
in
cmp
(bad)
in
(bad)
mov
jp
aaa
out
leave
rcr
clc
and
cmps
mov
loop
out
and
jb
(bad)
cmp
mov
arpl
(bad)
ins
das
add
ret
inc
sbb
les
cld
les
push
sub
call
push
pop
in
imul
sub
cld
xchg
jecxz
mov
inc
loopne
push
sub
test
xor
rep
xchg
ficomp
jne
pop
imul
hlt
mov
jb
push
cmp
movs
sub
call
mov
in
sbb
and
jae
lea
cmp
push
inc
mov
out
xchg
push
in
pop
xor
clc
xchg
out
jecxz
stos
mov
imul
jbe
stc
out
xchg
call
daa
and
and
mov
or
ja
lods
xchg
cmps
push
in
adc
inc
lds
(bad)
dec
cdq
cli
jge
popf
mov
dec
xchg
sbb
add
pop
mov
cwde
mov
popf
ret
js
or
or
xchg
mov
out
hlt
data16
sbb
repnz
mov
enter
adc
(bad)
out
jmp
enter
sub
adc
test
push
or
push
or
fcmovnb
pop
jbe
mov
test
arpl
das
xor
mov
mov
push
fld
adc
cli
mov
lods
je
pop
loopne
jp
jo
enter
gs
jns
ins
or
lahf
pop
int3
ror
or
pop
dec
scas
out
dec
push
aad
mov
(bad)
in
in
sbb
sbb
retf
ret
fwait
inc
test
fs
xchg
aad
in
inc
sahf
cwde
push
out
mov
dec
sub
or
lock
cmc
adc
add
mov
add
xchg
sub
iret
ret
push
fild
cmps
inc
add
rol
sbb
xor
(bad)
shl
in
gs
loop
mov
jecxz
scas
cli
cmc
(bad)
adc
mov
stos
ror
xlat
jne
mov
nop
push
enter
(bad)
and
test
int3
outs
or
(bad)
pop
xchg
adc
mov
sbb
sar
mov
pavgb
mov
imul
pop
in
fidiv
jmp
mov
sub
fadd
loop
lods
sbb
pop
test
pop
sbb
test
and
mov
ret
loopne
xor
retf
sbb
sti
(bad)
je
sub
pop
sbb
clc
jecxz
rcr
pop
push
(bad)
loopne
dec
add
mov
pushf
xor
pop
add
adc
mov
adc
mov
dec
jle
xor
fwait
leave
call
ins
ret
mov
adc
cmps
jb
(bad)
movs
movs
add
jno
test
mov
inc
cmp
and
jl
repnz
push
cmp
xchg
pop
push
xor
mov
mov
pop
clc
jmp
cwde
mov
cmc
mov
pop
lods
lahf
cdq
loop
xchg
retf
aad
add
addr16
(bad)
push
xor
xor
cmps
ja
jmp
(bad)
(bad)
mov
or
fisttp
jg
lock
or
ret
es
xchg
out
push
add
in
loopne
pop
xchg
xor
jae
cmp
and
(bad)
scas
bound
adc
push
stos
push
push
or
push
inc
jecxz
mov
imul
outs
int3
or
ret
sar
cmc
std
scas
sbb
dec
bound
(bad)
xchg
(bad)
les
fld
sub
inc
mov
and
sub
(bad)
mov
cmc
or
js
test
in
jmp
inc
mov
dec
retf
and
gs
(bad)
mov
push
das
mov
mov
push
fs
adc
jb
shl
add
jge
adc
cmp
icebp
xlat
sbb
fist
je
pushf
push
sbb
push
inc
and
xchg
dec
add
pop
das
imul
pop
das
xor
mov
stc
jp
imul
into
mov
dec
outs
push
sbb
out
not
cmp
fwait
cmc
inc
jnp
outs
dec
arpl
mov
std
les
jmp
fimul
inc
xor
pop
pop
jl
mov
add
imul
sbb
in
inc
mov
into
mov
out
push
xor
jae
jo
adc
xor
ret
mov
test
adc
hlt
push
pop
add
mov
pop
cmps
push
cmps
mov
mov
jge
sti
sub
mov
add
jno
mov
xor
cmp
xor
mov
xchg
jnp
scas
mov
xor
or
lahf
sti
pop
int
sbb
mov
and
or
popf
aaa
jle
mov
loop
dec
loopne
jno
cli
mov
cs
push
(bad)
pop
sahf
xlat
pshufw
jno
pushf
inc
mov
xor
sub
popf
popf
loopne
dec
js
les
cmp
je
(bad)
ja
inc
jns
cmp
push
stc
in
pop
push
rol
or
ret
mov
mov
addr16
mov
div
pop
and
mov
std
shr
xor
mov
enter
cwde
push
jmp
pop
enter
mov
cli
and
adc
sahf
les
aam
into
fs
push
or
mov
mov
aas
scas
sbb
mov
add
out
and
cmps
xchg
jae
loopne
sbb
sahf
fild
pop
les
in
or
cmp
clc
cmps
and
cmp
movs
imul
xlat
aaa
cli
jb
mov
or
scas
int3
imul
push
inc
hlt
add
stos
in
mov
jecxz
sbb
jnp
aaa
mov
aas
sbb
test
cmp
ja
imul
sbb
adc
pop
jp
mov
jns
call
mov
jne
push
cs
mov
cli
test
mov
daa
jbe
push
dec
xchg
call
mov
inc
sahf
inc
int3
mov
pop
add
call
sahf
cmps
push
push
mov
out
pop
dec
push
pop
xlat
mov
mov
mov
test
pop
jmp
(bad)
popa
mov
inc
and
fucom
std
xor
adc
in
add
neg
sahf
hlt
adc
xor
jl
mov
fadd
inc
sti
pop
mov
mov
adc
xchg
aas
test
in
shr
xor
adc
lahf
cld
jp
das
int3
les
ss
jb
bound
test
xor
cbw
and
loop
loop
pop
dec
xchg
mov
lahf
jno
dec
pop
test
retf
add
pop
sbb
fst
push
adc
loopne
cmp
test
cs
movs
dec
inc
mov
out
inc
stos
out
jl
aas
cld
and
or
push
leave
sbb
jnp
jge
ret
cmp
dec
inc
mov
dec
inc
inc
pop
inc
or
xchg
or
add
or
mov
test
xor
cdq
fnstsw
in
xor
fisttp
cmp
add
mov
orps
lods
daa
lahf
(bad)
inc
pop
push
dec
std
loop
inc
mov
sub
push
je
and
xchg
xchg
push
xor
sub
and
and
cmp
movs
arpl
jns
pop
dec
mov
mov
stos
(bad)
lds
stos
push
adc
neg
out
cmp
and
mov
inc
sar
sbb
xor
fisubr
cmp
pop
dec
jl
mov
dec
xchg
push
sbb
in
sub
and
leave
sub
sbb
dec
sbb
add
ret
int
call
sbb
pop
cmp
push
rcr
xor
popf
out
dec
or
ja
mov
xor
pop
add
fld
mov
rcl
push
(bad)
sbb
sub
outs
xchg
mov
ficomp
fs
je
xchg
clc
or
inc
iret
into
push
fistp
leave
dec
clc
pop
jg
inc
inc
inc
iret
mov
jmp
pop
pop
and
add
push
push
(bad)
pushf
push
sti
xchg
ds
shl
es
sti
pusha
xor
inc
xchg
aad
movs
inc
xchg
dec
rol
lahf
lahf
cmp
dec
or
push
jle
aas
icebp
xor
in
les
nop
es
call
xchg
cmps
push
inc
scas
sbb
pop
push
add
int
push
push
mov
stc
xor
(bad)
iret
mov
imul
pop
sahf
jmp
sub
mov
adc
outs
sub
vcvtss2sd
pop
popf
push
ss
and
xchg
pop
and
sub
adc
inc
or
jle
xor
jecxz
imul
mov
iret
or
stos
(bad)
popa
add
not
ja
push
pop
ins
scas
es
out
mov
nop
cmp
xchg
jnp
mov
push
clc
sub
retf
mov
in
dec
neg
gs
jge
aam
gs
dec
mov
mov
sahf
jbe
pop
ja
mov
in
dec
push
pop
and
xchg
jmp
mov
test
popa
test
int
dec
scas
hlt
cwde
inc
xchg
jbe
nop
repz
daa
add
imul
and
int
jle
addr16
jmp
test
inc
adc
xchg
mov
push
xchg
or
mov
bound
sub
xchg
xlat
out
movs
fild
outs
lea
adc
sbb
push
inc
imul
push
movs
xor
mov
mov
add
pushf
add
sbb
repnz
pop
aad
aad
and
adc
ret
es
cmp
adc
fsub
loopne
mov
rol
(bad)
mov
xlat
gs
xor
mov
push
xor
shl
mov
mov
xchg
mov
mov
in
(bad)
dec
les
mov
call
mov
test
ins
xchg
adc
add
or
push
xor
mov
imul
sub
stos
aam
inc
pop
sub
es
and
in
mov
inc
stc
lahf
mov
ss
cmp
jl
push
imul
(bad)
es
retf
fisttp
enter
mov
mov
iret
push
sbb
add
mov
mov
aas
mov
sub
pop
jno
popa
push
xchg
jmp
std
and
fmul
(bad)
das
and
std
fsubr
or
call
imul
pop
test
mov
inc
je
adc
xlat
mov
jle
sub
call
and
mov
push
vunpckhpd
sub
adc
scas
jbe
fimul
fld
sub
(bad)
mov
shl
cmps
shr
pop
and
and
push
dec
fcomp
(bad)
leave
mov
test
fwait
mov
adc
dec
fimul
mov
sub
retf
dec
iret
test
mov
add
inc
and
inc
rcr
pushf
retf
gs
jp
inc
lods
and
mov
mov
mov
cmp
mov
xor
jp
repnz
(bad)
push
aad
jmp
movs
push
xchg
adc
cmp
jae
mov
daa
cdq
icebp
jns
pop
cs
mov
test
mov
jo
and
mov
mov
rol
cmp
mov
stos
sbb
inc
mov
sbb
mov
les
out
jbe
mov
xor
popa
push
pop
call
sbb
jbe
mov
loope
fst
mov
movs
ret
ret
dec
add
fidivr
jae
cld
ins
das
cmp
out
adc
fisttp
enter
jmp
imul
xchg
fs
or
sub
jle
pop
xor
test
std
and
iret
or
out
fwait
cdq
jo
dec
cli
sub
cmp
dec
push
jg
sub
es
cmc
imul
fstp
jno
loop
fiadd
adc
stos
and
pop
cmp
daa
loope
dec
jl
pusha
mov
mov
jo
int
lahf
jo
mov
out
or
inc
(bad)
mov
daa
inc
outs
mov
jbe
jbe
adc
test
inc
push
jl
pusha
call
test
cmp
in
pop
xchg
int3
xchg
hlt
mov
cmp
sub
neg
mov
add
icebp
ret
mov
sub
int3
push
mov
inc
test
test
inc
outs
jmp
jno
mov
mov
mov
mov
mov
cwde
cli
cmp
mov
in
aad
sbb
mov
inc
push
inc
in
mov
push
mov
pop
inc
jecxz
daa
mov
cmp
mov
arpl
sbb
sub
mov
hlt
add
je
imul
mov
mov
pop
dec
xchg
ror
test
sub
xchg
out
mov
and
cmp
mov
or
mov
pop
pop
adc
jbe
mov
cmp
sub
stos
pop
out
test
shr
sub
jns
out
data16
jno
or
mov
sbb
mov
xchg
push
adc
loop
lea
bswap
mov
or
outs
push
popf
(bad)
ss
pop
stos
jp
fadd
mov
sub
xor
je
jne
(bad)
cli
add
popa
cmp
fiadd
stc
or
adc
outs
(bad)
in
or
sbb
jp
cmp
dec
sbb
and
pop
add
push
adc
(bad)
movs
data16
add
push
push
lock
mov
fadd
(bad)
pop
mov
mov
outs
xor
mov
inc
in
test
push
sub
pop
xor
clc
xor
lahf
dec
lea
das
jle
mov
sub
es
pusha
shl
xchg
in
popa
pop
pop
mov
add
sbb
push
shl
mov
sub
xchg
mov
mov
mov
jno
ins
rcl
adc
jg
dec
or
lock
push
adc
xlat
fwait
adc
or
cmp
aaa
popa
and
or
out
sbb
push
arpl
sbb
scas
lods
lods
sbb
test
mov
jne
mov
mov
and
mov
cmp
pop
(bad)
loopne
sbb
xchg
(bad)
mov
jmp
and
enter
loope
push
push
cmps
test
js
ins
jmp
xor
imul
aam
(bad)
mov
jmp
std
mov
pushf
(bad)
repz
push
sbb
or
push
jge
xchg
ins
(bad)
sbb
xor
xchg
dec
cmp
pop
int
js
cli
lods
clc
cmp
and
inc
add
jl
mov
in
popa
pop
out
lahf
and
add
cmp
lods
sub
adc
scas
ss
dec
push
xor
dec
sbb
jae
inc
adc
mov
dec
add
ins
mov
or
leave
pop
push
je
xor
adc
das
push
jecxz
jno
xchg
scas
(bad)
adc
data16
lds
jge
xor
mov
jne
int3
cmps
add
test
adc
and
inc
lods
in
jge
adc
push
rcr
iret
sti
pop
into
cs
ror
cmp
mov
ret
das
rol
ss
and
sbb
daa
xlat
mov
repnz
shl
fst
lahf
mov
and
mov
dec
js
dec
fidivr
je
int3
inc
enter
xlat
shl
dec
cmp
sub
cmp
ret
pop
in
inc
pusha
stos
dec
popf
aam
test
test
or
mov
dec
push
mov
push
push
ins
cdq
test
cwde
shl
pop
cmp
xchg
pop
sbb
and
nop
gs
jmp
inc
mov
mov
test
mov
shl
mov
mov
les
push
jecxz
sbb
movs
js
mov
or
cmps
dec
stos
or
mov
aas
icebp
pop
xchg
fst
movs
add
pusha
ins
xchg
jle
bswap
xchg
fwait
nop
sub
pop
jbe
ds
and
outs
push
iret
xchg
jg
mov
in
xor
add
ret
cmc
jo
(bad)
sbb
jmp
hlt
fisttp
add
movs
jle
stos
mov
std
sub
sahf
ret
pop
in
inc
jmp
icebp
jmp
icebp
and
sar
dec
jge
inc
retf
adc
imul
outs
xchg
popf
je
xor
(bad)
cmc
sub
imul
addr16
fcom
inc
pop
dec
call
push
xchg
sbb
sub
ficom
and
inc
jmp
popf
xor
test
stos
data16
outs
lock
out
cwde
dec
ret
in
sbb
scas
and
jecxz
out
ret
sub
inc
jmp
mov
xchg
daa
mov
outs
xchg
adc
arpl
test
dec
cdq
xor
pop
cmp
sahf
dec
or
mov
push
or
repnz
xchg
sub
pop
(bad)
or
and
loop
and
in
dec
and
movs
mov
mov
cli
adc
and
mov
mov
fwait
jmp
fild
(bad)
shl
sar
stc
add
fdivrp
ins
cmp
in
dec
test
loopne
add
mov
mov
fidiv
adc
and
(bad)
shl
adc
call
adc
jmp
xchg
mov
outs
mov
into
sbb
xchg
pop
dec
and
add
out
push
mov
outs
mov
push
push
and
rcr
scas
pop
inc
mov
ins
inc
es
adc
outs
sub
push
sahf
test
cmp
lods
sahf
out
xor
mov
jmp
jle
and
push
xchg
dec
push
pop
jb
dec
ins
fs
into
scas
add
lea
or
add
cmp
dec
push
ins
mov
(bad)
rcr
sbb
fimul
and
adc
cmp
icebp
mov
sbb
xchg
pushf
mov
pushf
add
scas
icebp
inc
xchg
mov
push
ret
fwait
or
pushf
cmp
aam
dec
punpckldq
clc
or
cmps
push
push
mov
push
mov
fwait
xchg
in
mov
mov
neg
dec
ins
pop
cmc
ins
push
xchg
aas
in
repz
in
ret
stos
xchg
adc
loop
sub
or
outs
repnz
mov
adc
push
cmps
mov
adc
ins
call
xchg
jb
mov
cmc
stos
aam
sub
arpl
cmp
and
outs
iret
test
and
mov
fcom
in
in
jle
jmp
jp
mov
pop
hlt
icebp
add
inc
(bad)
dec
push
nop
into
mov
adc
sub
mov
fmul
push
jo
jo
faddp
cli
arpl
and
popa
add
sbb
pop
(bad)
loopne
loopne
add
push
inc
int
push
test
cmc
lahf
cmp
mov
adc
lea
cli
mov
ins
imul
adc
xchg
jnp
fdiv
push
add
das
cld
xor
iret
dec
inc
les
fdivr
inc
dec
outs
cmp
inc
in
es
out
add
xlat
(bad)
out
xchg
mov
mov
pushfw
adc
mov
jp
pop
int3
pop
js
adc
sbb
dec
jle
sbb
push
aam
dec
arpl
mov
mov
push
pop
les
mov
and
popa
outs
dec
pop
jp
jp
or
fs
and
(bad)
xor
or
call
pop
mov
(bad)
mov
(bad)
add
add
scas
push
xchg
mov
scas
push
xor
shl
sbb
ret
xchg
(bad)
bound
adc
mov
aaa
fs
fsub
dec
xchg
adc
cli
push
adc
stos
and
pop
mov
xchg
dec
inc
add
push
pop
iret
add
jnp
pushf
add
adc
or
adc
jg
sub
outs
sbb
mov
ret
idiv
mov
stc
sub
pop
sti
or
cmp
jae
jl
rep
dec
adc
xchg
add
popa
nop
in
fsub
mov
pop
mov
ja
das
test
inc
into
outs
jle
mov
in
xchg
daa
mov
and
rol
adc
addr16
popf
call
mov
arpl
iret
jge
das
jo
jp
popf
add
popa
sub
and
(bad)
hlt
inc
movs
and
xor
fs
fst
and
push
sar
add
mov
loop
ror
lods
and
sub
and
loop
pop
cs
sub
mov
and
xor
add
addr16
cli
dec
adc
jg
jle
push
bound
int3
arpl
cmp
xor
mov
adc
scas
shr
cwde
cmp
(bad)
mov
inc
jle
adc
xor
sbb
scas
mov
push
in
sbb
adc
xchg
out
in
and
jne
test
jbe
mov
out
lds
sub
dec
(bad)
jno
ja
cmp
imul
push
ret
call
or
dec
cli
out
push
iret
jno
mov
int
dec
int3
push
sub
stos
push
mov
pmaxub
mov
shl
cwde
stos
xchg
cmp
call
sti
jns
add
test
sub
push
mov
in
xchg
mov
pop
stc
pop
dec
movs
mov
xchg
lea
inc
xor
pop
mov
into
js
repnz
sti
je
jb
dec
push
(bad)
inc
test
(bad)
mov
pop
rol
jecxz
ins
sub
loope
mov
mov
push
add
cmp
fstp
(bad)
jmp
xchg
retf
mov
adc
inc
dec
adc
es
mov
pusha
dec
pop
ja
pop
or
and
pop
pushf
jo
jns
jns
pop
dec
jmp
pop
cmp
pop
out
rcl
dec
mov
dec
xchg
ret
stos
sub
push
aam
sbb
mov
mov
test
test
inc
or
loope
mov
mov
push
jo
or
push
xchg
in
lds
or
sbb
xor
adc
xor
xchg
xchg
jl
ret
inc
fprem1
add
lock
int
push
mov
pop
sub
xor
xchg
push
and
mov
xor
int
dec
xor
fdivr
pop
inc
in
lea
pop
mov
out
out
int3
jo
inc
mov
std
push
dec
pop
lods
and
mov
out
imul
aas
push
shl
sub
or
sub
dec
xor
les
in
icebp
mov
mov
mov
sub
mov
lods
pop
add
fbstp
dec
std
dec
and
mov
add
and
xor
cmp
fisttp
sub
pop
add
mov
and
lods
and
sub
sar
inc
adc
cmps
jno
push
js
mov
loop
push
dec
mov
mov
scas
or
jle
movs
ret
mov
xchg
sahf
js
inc
stc
ins
lds
lds
addr16
cli
dec
and
in
pop
mov
inc
popfw
imul
push
jne
pop
jo
mov
cmps
jmp
pop
xor
hlt
sbb
rol
mov
stos
in
stos
hlt
or
xor
loopne
and
movs
xchg
cmp
js
mov
cmp
popa
ret
(bad)
dec
and
imul
xchg
in
or
jle
popf
test
push
shl
add
mov
xchg
xor
push
lods
mov
xlat
ss
repnz
mov
fistp
cwde
mov
jbe
lock
js
inc
xor
cmp
and
pop
aaa
neg
cmp
call
jmp
retf
and
mov
retf
in
imul
dec
ss
jns
inc
sub
push
dec
shl
push
xchg
fwait
mov
xor
sub
jns
mov
pushf
mov
retf
xor
push
mov
xor
push
or
out
push
fisttp
lods
adc
mov
arpl
dec
push
xchg
push
(bad)
mov
scas
fistp
push
inc
outs
jg
and
push
(bad)
leave
in
out
arpl
retf
sbb
adc
or
cmps
adc
jmp
out
call
add
fimul
sbb
mov
stos
or
push
loope
xor
jbe
in
mov
pop
(bad)
cmp
xchg
and
cmp
aas
adc
mov
mov
call
pusha
jns
aam
mov
mov
jne
sub
repnz
add
xchg
popf
jle
mov
and
add
int
mov
mov
out
push
clc
fisttp
sub
fidivr
and
add
inc
adc
push
mov
sub
jmp
jecxz
shl
pop
icebp
pop
cmps
dec
(bad)
pop
sar
sar
fist
sub
mov
lods
adc
rcr
push
inc
popa
mov
int3
add
mov
mov
out
or
daa
dec
rcl
leave
fdiv
fstp
mov
and
aaa
int3
jmp
dec
lea
je
jmp
sub
loop
or
jmp
pop
rol
mov
pop
adc
cli
push
ret
fstp
enter
pop
push
mov
sbb
inc
sub
jno
dec
mov
das
jae
lahf
mov
push
mov
mov
jo
jg
and
arpl
aaa
xchg
clc
mov
aas
in
push
imul
cmp
pop
popf
mov
push
fcomp
xchg
sub
sbb
xchg
mov
push
jne
jmp
pop
or
pushf
sub
dec
ja
out
add
mov
mov
mov
jmp
inc
jl
xchg
sbb
imul
dec
lods
sub
mov
mov
test
inc
out
and
ss
cmp
dec
lahf
shr
bndldx
pop
mov
retf
or
popa
popa
sahf
jno
movs
pushf
or
inc
(bad)
in
es
pop
test
dec
sti
repnz
adc
jecxz
jl
adc
bound
es
arpl
push
adc
dec
mov
cmp
cmp
adc
pop
add
mov
cwde
repnz
mov
mov
stos
(bad)
call
xor
dec
mov
dec
push
jg
daa
fiadd
lods
xor
div
mov
xchg
push
leave
clc
inc
push
lock
inc
rcr
add
mov
pop
sub
outs
retf
dec
fwait
push
dec
outs
mov
fsub
mov
cli
test
outs
jmp
sub
lods
ins
leave
inc
aas
cmp
cmp
jbe
sub
ins
add
jo
cmp
cwde
js
xchg
or
jg
out
inc
and
(bad)
mov
mov
xor
adc
aad
test
sti
in
xchg
fadd
pop
or
dec
enter
lea
jo
pop
call
retf
mov
xor
(bad)
mul
adc
add
test
jecxz
ror
repnz
push
and
and
lea
mov
js
int
je
lea
push
repz
mov
or
sbb
scas
cs
cmp
stos
cmp
mov
inc
jne
xor
addr16
scas
adc
aas
loop
iret
adc
push
fimul
xchg
outs
lods
cmp
pop
shl
and
(bad)
das
cmps
arpl
and
cmp
out
xor
adc
jnp
mov
cmp
dec
das
fidiv
sub
or
xor
sub
in
outs
mov
imul
int3
mov
sub
dec
lods
push
lds
in
in
jmp
mov
test
xor
adc
call
jle
mov
adc
fadd
fpatan
outs
jo
std
push
or
aaa
cmp
std
leave
mov
adc
dec
fcmove
cmp
retf
lods
jbe
dec
pop
movs
xor
movs
jno
iret
shl
lahf
sbb
popa
cmp
retf
(bad)
mov
rcl
iret
and
add
xchg
xor
lds
xor
movs
xchg
and
sbb
jp
sbb
mov
fcomp
lahf
mov
mov
fs
outs
loope
dec
pop
test
sbb
xchg
mov
mov
push
inc
sbb
ds
and
xor
iret
push
(bad)
push
scas
lock
mov
xchg
dec
data16
ja
inc
jnp
test
clc
enter
in
retf
push
js
or
int
jne
gs
fstp
jae
lods
pop
fmul
cdq
xchg
loope
and
movs
sub
xor
pop
call
neg
loop
xor
mov
call
and
jge
mov
adc
push
aad
scas
pop
mov
pop
ins
dec
das
dec
pushf
xor
and
cmp
jnp
int
xor
cmp
shr
pop
ins
adc
jne
mov
retf
jmp
pop
mov
retf
xchg
sbb
in
test
jmp
push
div
fnstcw
lods
jne
push
pop
inc
(bad)
iret
fsubr
xor
xchg
and
cmp
pop
int
sbb
dec
lahf
sbb
jo
fnsave
xor
(bad)
das
cmp
mov
div
call
pop
cmp
mov
sub
inc
jo
add
jns
and
dec
in
mov
mov
pop
and
cmp
ror
jno
ds
mov
jbe
inc
popa
inc
or
sbb
xchg
js
outs
repnz
unpckhps
int3
shl
xchg
ins
jecxz
xor
(bad)
ficomp
inc
mov
mov
sub
std
mov
in
adc
out
mov
cmp
in
add
push
mov
loop
or
mov
push
fbstp
aam
xchg
arpl
dec
clc
push
pop
push
out
cmp
and
in
leave
leave
mov
adc
inc
jb
xchg
mov
enter
push
push
mov
stos
imul
sbb
cli
mov
push
mov
push
or
pop
into
int3
ret
aaa
pop
or
sbb
lea
scas
cdq
adc
mov
lock
and
push
xor
adc
movs
sub
imul
adc
cmp
fidivr
adc
fdivr
xor
jmp
inc
jb
xor
call
sbb
mov
push
or
push
jmp
lods
inc
clc
mov
dec
mov
mov
sbb
in
mov
push
mov
mov
jmp
call
test
call
mov
add
jnp
scas
out
push
jne
sbb
and
lods
repz
aas
push
cwde
bound
adc
das
cdq
jg
retf
adc
xchg
stos
shl
lds
inc
sbb
daa
mov
pop
push
mov
imul
add
inc
mov
out
sub
push
out
push
popf
outs
mov
jmp
ret
int
mov
add
mul
jl
mov
sub
(bad)
imul
lds
and
dec
adc
mov
sub
iret
fsubr
inc
xor
or
in
push
in
imul
dec
inc
inc
pop
or
in
imul
pushf
adc
xchg
ds
xor
mov
cwde
repnz
mov
dec
les
mov
pushf
int3
stos
inc
mov
inc
es
jle
pop
sbb
push
mov
jnp
data16
sbb
jg
data16
out
(bad)
lods
sub
out
shl
je
leave
mov
sbb
ins
aaa
xor
mov
pop
dec
jg
xchg
mov
jge
ror
(bad)
int3
and
add
dec
cmp
jno
or
cmp
mov
outs
jp
push
sbb
int
push
retf
mov
xor
mov
or
xor
dec
cmps
fsub
icebp
jno
test
sub
ret
mov
retf
nop
test
push
(bad)
cmp
mov
mov
(bad)
add
stc
(bad)
sub
inc
pop
pop
les
int
sbb
daa
shl
and
push
mov
test
dec
mov
push
out
ss
ret
adc
lods
cmp
fimul
dec
jnp
cmps
(bad)
daa
ins
xchg
adc
cdq
mov
xor
lds
jnp
clc
adc
test
or
xchg
xchg
cdq
cmp
and
sbb
sub
cmp
in
mov
push
xor
add
push
(bad)
or
cmp
cwde
sub
fldenv
sbb
adc
cmp
mov
loop
ja
es
and
mov
cmp
mov
jb
daa
dec
or
(bad)
aas
inc
loopne
xchg
adc
inc
adc
sub
fcom
xor
jb
lock
mov
fwait
jmp
push
loope
(bad)
push
sbb
sub
repnz
inc
lods
stc
hlt
mov
fnsave
fstp
or
cwde
sub
idiv
mov
push
mov
mov
nop
mov
jo
inc
aas
or
adc
hlt
hlt
lahf
fcmovnu
or
mov
cmp
xchg
push
pushf
mov
lods
sub
ret
hlt
add
sub
mov
mov
(bad)
out
(bad)
repnz
mov
out
dec
into
not
and
jecxz
xchg
sbb
sub
mov
mov
sbb
cmps
adc
dec
sub
push
xor
add
push
(bad)
hlt
push
mov
in
jmp
add
loopne
imul
mov
pavgw
mov
add
sbb
stc
retf
mov
int
ins
push
jmp
add
call
fstp
and
jne
push
les
xlat
xor
inc
rcr
js
xchg
in
xchg
cmp
dec
jno
sub
mov
retf
pop
js
dec
mov
jb
dec
mov
jge
sub
add
les
adc
cmp
hlt
inc
pop
mov
xchg
dec
repz
mov
ror
or
loop
inc
jl
pop
out
ror
cmp
mov
push
sub
adc
mov
push
pop
repz
shl
mov
mov
sbb
jl
iret
mov
inc
mov
xchg
xor
mov
cli
inc
aas
push
test
xor
rcl
outs
xor
adc
mov
scas
ret
pop
cdq
xchg
mov
and
sbb
or
test
add
mov
add
dec
xchg
imul
(bad)
ss
pop
xlat
inc
jns
inc
fcom
gs
in
cmp
adc
jb
outs
pop
jecxz
loop
cmps
add
cmp
aad
inc
add
ds
movs
inc
in
jae
dec
and
push
lds
mov
scas
cmps
mov
jns
xor
jmp
test
inc
je
xlat
jecxz
cli
push
imul
mul
lods
imul
cwde
add
fld
sbb
cli
test
sub
fist
cmp
int
out
cwde
jecxz
in
mov
cmc
sub
xchg
dec
stc
inc
mov
(bad)
xchg
mov
dec
(bad)
adc
aas
mov
ins
pop
sar
hlt
or
clc
sub
call
dec
addr16
(bad)
jbe
addr16
outs
dec
push
pop
cdq
ja
adc
mov
(bad)
and
hlt
cdq
cmp
pop
fbstp
imul
ja
xchg
out
pusha
enter
cmp
xchg
xchg
inc
add
(bad)
mov
cli
ins
cmc
imul
and
and
mov
jne
iret
adc
iret
ins
or
test
rcl
mov
pop
push
(bad)
xchg
cs
aas
fadd
rol
mov
adc
(bad)
loop
xor
and
cmps
push
aas
fld
scas
fisttp
pushf
mov
loope
leave
and
mov
adc
ficom
jle
jecxz
aas
popa
aam
test
retf
mov
sbb
mov
aam
scas
imul
cmp
jb
aam
mov
dec
sub
popf
hlt
dec
das
stc
push
cmps
sbb
dec
fidivr
mov
stos
cmp
stc
je
push
fnstcw
jmp
sahf
pop
adc
mov
repnz
lods
call
aad
fist
jno
or
rol
cli
add
or
xor
cdq
pop
xchg
dec
xchg
push
ret
dec
dec
adc
cmc
fbld
xor
mov
xor
xlat
hlt
loopne
mov
rol
sub
repz
dec
jg
int
icebp
inc
cmp
jl
or
ds
dec
int3
push
movs
into
fsub
push
test
fs
xchg
int3
fadd
sbb
jg
sbb
imul
movs
dec
and
in
pop
ins
xor
dec
outs
xchg
outs
inc
mov
popa
cs
sub
cmps
pusha
enter
cdq
adc
out
in
jmp
xchg
shl
retf
push
cvtps2pd
jo
mov
inc
adc
dec
aaa
push
jns
aad
push
popa
pusha
cwde
enter
out
out
sub
rol
popa
push
ds
xchg
xor
dec
jnp
out
jb
in
mov
loop
cld
jle
dec
leave
loop
sti
push
push
adc
cli
pop
and
(bad)
add
sub
cmp
in
mov
ss
adc
xchg
mov
push
mov
mov
sbb
jo
dec
ins
mov
jmp
xchg
shl
push
sbb
call
mov
push
cmp
lods
jg
fisub
mov
mov
movs
stc
arpl
shl
mov
mov
enter
xchg
add
dec
enter
test
shl
loop
mov
test
sub
xor
push
mov
out
(bad)
mov
adc
aam
jmp
dec
push
sbb
out
push
xchg
and
ins
cld
fiadd
ja
jmp
xor
in
pop
addr16
call
xor
cmp
int3
cld
loopne
or
je
and
(bad)
pop
pop
push
pop
xchg
int
cmp
jo
push
mov
xor
hlt
int3
sub
(bad)
fsubr
mov
jl
mov
ret
je
scas
iret
bound
xlat
daa
fld
out
in
sbb
adc
push
xchg
jmp
cmp
cmp
pop
push
pop
and
add
push
and
mov
in
pop
mov
xchg
xlat
inc
cdq
loope
fbstp
push
push
xchg
lock
inc
mov
popa
ins
cmp
jns
(bad)
xor
outs
hlt
mov
xor
inc
stc
mov
cmp
ds
add
mov
iret
call
jp
and
and
push
push
sub
fmul
iret
mov
(bad)
je
mov
pushf
mov
shl
ds
xor
sahf
aad
fbstp
push
pop
and
cmp
lahf
cmc
dec
lea
xor
inc
mov
push
push
(bad)
dec
jmp
(bad)
call
or
and
pop
iret
stos
nop
fdivr
fcmovnu
sub
pop
sar
jle
push
(bad)
lea
jbe
dec
jle
inc
inc
jmp
or
add
pusha
shl
cwde
jmp
fdiv
retf
jne
mov
add
(bad)
(bad)
popa
xor
hlt
adc
cmp
mov
hlt
cmps
cmp
fnstenv
inc
iret
push
aaa
ins
ficomp
jle
xor
jne
fst
jle
pushf
loopne
add
imul
push
fmul
cmp
iret
xlat
lods
aaa
push
xor
nop
mov
and
xchg
jl
mov
aam
dec
dec
push
mov
rcr
sar
out
ret
push
mov
int3
mov
and
push
jmp
push
xor
push
inc
inc
sub
dec
adc
jg
jecxz
xchg
push
xlat
mov
repnz
(bad)
pushf
popf
push
fwait
jg
jl
xchg
les
mov
jmp
cs
call
out
iret
mov
ins
add
mov
jae
dec
dec
pop
push
es
cmp
loopne
cmps
test
sub
pop
mov
mov
mov
in
fcomp
inc
sbb
mov
sti
(bad)
cmp
test
stos
fsub
jp
das
mov
inc
int3
or
mov
dec
adc
add
mov
jmp
push
xchg
cli
adc
inc
call
sub
ret
jns
mov
xor
addr16
cmps
dec
lahf
imul
js
rcr
stos
add
int3
addr16
mov
fwait
or
jae
(bad)
or
imul
mov
xchg
in
(bad)
jge
and
stc
jmp
cmc
fdivr
dec
xchg
pop
int3
(bad)
cmps
cdq
mov
inc
enter
and
cmp
retf
pop
and
inc
xchg
add
adc
clc
icebp
xor
aam
les
push
hlt
pop
sub
hlt
push
mov
movs
mov
fs
jmp
fstp
cmc
scas
xchg
jmp
and
or
mov
scas
push
push
xchg
and
sbb
pop
fsubr
cmp
ss
lods
adc
lea
and
shl
ret
mov
jo
xchg
nop
sub
adc
jle
addr16
sub
das
cmp
sbb
jno
xchg
mov
xor
adc
cmp
repnz
push
sbb
mov
clc
std
in
fsubr
(bad)
mov
sub
out
dec
xchg
push
inc
scas
or
sbb
inc
repnz
ror
call
pushf
xor
jbe
xchg
nop
push
and
or
int3
loop
mov
sub
jne
jo
addr16
popa
hlt
fs
mov
pop
cmp
jne
aad
ret
cmp
push
rol
retf
xchg
call
pop
leave
mov
and
mov
call
add
lods
pop
sub
push
retf
(bad)
dec
call
cmp
rol
dec
sub
pop
pop
in
aam
mov
cmp
dec
js
push
loope
jecxz
inc
stos
mov
into
loop
ins
and
xlat
cli
repnz
dec
sar
or
daa
dec
fist
push
retf
mov
cmp
fst
xchg
mov
leave
and
mov
push
lods
imul
aam
fimul
cmc
or
push
rcl
adc
ins
adc
lahf
data16
adc
cli
inc
xchg
xlat
push
imul
inc
cdq
lea
add
push
out
lock
mov
mov
mov
jne
sahf
jl
ins
repnz
fadd
mov
sbb
cmp
xchg
fldenv
js
push
cmovne
adc
sub
xchg
nop
cmp
mov
loop
and
movs
call
xor
sbb
and
jge
mov
fidivr
aaa
xor
push
sbb
mov
pop
or
das
sub
sbb
dec
jo
js
call
adc
call
jbe
jmp
test
and
mov
xchg
push
push
scas
repnz
add
mov
mov
xchg
xchg
sub
repz
sub
inc
push
and
(bad)
pop
fldcw
sub
sbb
call
aas
ss
shl
jns
sbb
lahf
sbb
adc
dec
push
mov
inc
mov
xchg
loope
mov
in
jp
rcr
sub
xlat
test
xor
cmps
add
sbb
lea
daa
stos
sahf
dec
cmc
int
cdq
xlat
add
in
cld
nop
int3
in
pop
ror
mov
vxorpd
xor
xor
sbb
fwait
inc
jge
sar
adc
xchg
adc
data16
icebp
mov
retf
out
sar
xchg
dec
mov
jno
rcl
je
jae
pop
mov
adc
adc
push
es
adc
test
call
dec
push
and
adc
add
push
rcr
push
mov
xchg
mov
ss
adc
mov
jns
dec
test
inc
mov
leave
sbb
push
jo
test
pusha
mov
mov
pop
pushf
test
sub
stos
mov
mov
inc
clc
pop
sysexit
jo
or
(bad)
jg
pop
add
xchg
popa
stos
pop
repnz
and
adc
mov
jo
imul
popf
xchg
inc
mov
aas
and
loop
xor
aam
mov
sub
pop
shl
out
std
loopne
mov
sub
lods
dec
push
xor
sbb
popa
sti
xlat
jnp
xor
bound
fdivr
push
adc
pusha
mov
sub
inc
repz
mov
repz
iret
test
fwait
movs
lods
add
add
out
rcl
pop
fs
dec
xor
(bad)
int
pop
retf
pop
mov
mov
ja
call
xchg
pop
cmps
sar
mov
loop
xchg
and
or
xchg
cmp
pop
cmps
lods
fwait
mov
push
mov
mov
pusha
jb
mov
mov
repnz
cli
mov
stos
addr16
int
dec
xor
add
pop
pop
lock
cmp
aad
movs
mov
xchg
call
in
cld
hlt
mov
loope
sahf
cmc
gs
or
stos
cmc
sub
push
mov
mov
jecxz
fst
cmp
jp
jmp
mov
bound
adc
mov
xchg
aaa
mov
jle
jmp
retf
cs
fwait
sbb
or
inc
sub
or
fadd
cmps
(bad)
mov
dec
xor
sub
push
adc
cmp
cmp
das
fst
jle
pop
cmc
jl
pop
sub
push
and
repnz
and
adc
mov
outs
adc
iret
fisttp
ficomp
ins
xchg
xchg
pushf
adc
(bad)
out
push
in
pop
mov
push
sbb
adc
cs
mov
or
sub
test
or
cmp
daa
xchg
out
mov
outs
nop
sbb
pop
sub
pop
paddq
stos
cmp
or
jg
pop
jo
in
arpl
cmp
in
inc
bound
push
jge
mov
jns
scas
push
and
jb
in
fsubr
pop
sub
stos
into
inc
nop
stos
inc
sub
and
mov
adc
movs
pop
push
imul
sub
div
cmp
cmp
aad
and
sbb
inc
ret
mov
in
adc
and
pop
jle
cwde
cmp
inc
pop
and
dec
jns
sbb
sub
cmps
test
jae
mov
popf
mov
pop
or
dec
jo
ficomp
ret
add
lods
inc
std
jne
pop
push
cdq
enter
movs
stos
add
aaa
(bad)
aaa
lea
shr
ss
lods
push
movs
cmp
sub
xchg
cmps
cld
mov
pop
fxch
push
cwde
pop
rcr
xor
mov
mov
sahf
mov
mov
sub
test
or
test
adc
pop
mov
pop
int
mov
mov
leave
bound
sbb
mov
mov
push
fcom
cmp
clc
lods
hlt
mov
push
or
sbb
cmp
pop
data16
xor
inc
xor
push
scas
jae
loope
dec
shl
sub
adc
test
mov
xor
mov
mov
stc
jp
push
ja
push
and
cli
add
out
aad
jmp
lea
nop
leave
mov
push
fild
mov
pop
pop
adc
or
cmps
and
xchg
aaa
repz
fstp
pop
in
ror
mov
xor
push
ffreep
and
push
dec
das
in
pop
jne
cmp
repz
and
lock
imul
repnz
jecxz
dec
popa
stos
data16
jmp
pop
mov
xchg
sbb
data16
jecxz
jno
xor
pop
push
cli
add
cmp
cmp
ret
pop
pop
leave
loope
inc
sbb
mov
mov
sbb
fild
(bad)
mov
data16
or
mov
sbb
cli
mov
push
mov
cmp
jmp
and
or
mov
test
sub
lds
mov
cld
pop
jbe
repnz
imul
out
dec
lea
xor
mov
scas
dec
(bad)
pusha
test
pushf
or
adc
cmp
lds
fist
sbb
jne
scas
imul
sbb
cli
xor
(bad)
rcr
xchg
call
dec
lock
ds
dec
cmp
jo
mov
or
mov
pop
or
push
retf
or
lock
pop
pop
jp
sub
xchg
xchg
mov
mov
mov
cwde
jmp
gs
cmp
xchg
cmp
cmp
addr16
pop
inc
xlat
xor
adc
pop
pop
cmp
mov
mov
les
adc
mov
mov
cmc
xchg
jno
je
jb
xchg
push
dec
or
jno
out
mov
mov
mov
push
repz
push
lds
rcr
mov
shl
pop
jl
leave
cs
sub
data16
stc
add
loopne
jno
in
cwde
fimul
jle
adc
scas
popf
push
inc
popf
data16
sbb
mov
gs
inc
sbb
lahf
stos
data16
dec
mov
movs
imul
sbb
sbb
inc
mov
mov
or
cs
mov
or
xchg
pop
mov
retf
jmp
mov
jp
dec
mov
cs
outs
aam
ja
add
mov
fistp
push
jo
xchg
aas
sub
test
jbe
jmp
outs
call
call
pushf
inc
xor
in
lock
mov
sbb
es
pop
or
int3
dec
dec
int3
add
and
pop
xor
adc
cmp
cmp
dec
ds
aaa
pop
push
mov
cmps
dec
mov
pop
mov
not
add
fwait
inc
xchg
in
mov
push
movs
inc
mov
pop
cmp
jecxz
lods
mov
adc
call
aam
ja
clc
add
adc
inc
stos
inc
sbb
mov
and
pop
jb
sub
aaa
cs
aas
sbb
pop
mov
sti
xchg
fcomp
xor
cmps
jne
jg
push
fwait
cmp
sub
aas
mov
fisubr
or
into
retf
into
adc
fstp
ins
dec
in
je
in
popf
imul
xchg
in
mov
ss
sbb
push
(bad)
cmc
and
add
jle
and
push
in
fs
sub
jae
into
addr16
loopne
cmp
add
fs
and
mov
pop
push
dec
sub
dec
sbb
fcomip
lock
and
xor
popa
(bad)
les
push
inc
lock
test
std
xlat
jb
in
push
mov
push
push
sub
rcl
into
scas
sub
pop
pop
lock
shr
or
scas
mul
and
pop
jns
mov
jmp
iret
push
jo
inc
in
das
call
(bad)
popf
jb
adc
pop
imul
jns
das
test
sbb
outs
das
push
jae
fwait
inc
dec
dec
xchg
pop
fsubr
add
mov
setns
dec
push
mov
mov
xor
or
dec
pop
js
ja
mov
cdq
in
mov
bnd
fstp
mov
cmp
mov
and
xchg
xchg
clc
movs
and
je
into
fmul
test
dec
xchg
or
pop
enter
lds
stos
shl
xchg
xchg
push
test
sti
inc
je
push
fdivrp
sbb
sbb
std
push
js
ins
jmp
call
sbb
popf
daa
rol
imul
pmaxub
loopne
adc
push
lock
jno
ror
out
(bad)
icebp
mov
inc
pop
cmp
or
sbb
add
push
xor
jmp
ja
adc
into
mov
jnp
jbe
das
push
add
fucomp
cmps
fcmovu
lods
pop
std
sbb
ins
inc
call
test
into
sub
pop
retf
jb
scas
dec
and
xchg
hlt
or
cmc
cdq
xor
sbb
or
(bad)
iret
sub
daa
mov
mov
movs
neg
outs
mov
xor
aas
dec
or
clc
push
daa
xor
mov
pop
movs
bound
jmp
popa
mov
push
add
mov
sti
repz
cmp
mov
hlt
std
add
bound
test
mov
test
and
cli
xchg
inc
lock
cli
test
sar
cwde
scas
std
sub
je
or
sbb
out
bound
xor
jns
arpl
mov
cmc
mov
push
cdq
jb
lds
sar
(bad)
in
cmp
jb
push
rcr
(bad)
mov
(bad)
pop
sbb
in
ror
adc
push
lea
ss
sbb
fisub
mov
test
cmp
imul
cs
lea
pop
je
jo
inc
mov
test
add
xor
jl
pop
outs
inc
das
cmp
sbb
ins
out
aam
jmp
call
xchg
iret
mov
mov
push
xchg
in
sbb
popa
ss
xchg
push
int3
dec
xor
sar
jge
mov
push
sbb
scas
push
inc
mov
adc
fstp
mov
pop
jbe
aas
mov
movs
retf
add
pusha
jae
cld
fwait
mov
ret
ror
dec
shl
cmp
aas
xchg
jmp
(bad)
(bad)
xchg
(bad)
(bad)
and
mov
leave
fs
test
and
stos
or
dec
sub
pop
ins
inc
add
sahf
shr
imul
xchg
fimul
sahf
mov
int
pop
aas
je
mov
push
or
and
and
mov
push
xchg
(bad)
jle
inc
add
mov
jmp
adc
adc
gs
mov
xlat
inc
dec
test
cdq
scas
loop
jns
int3
mov
mov
mov
js
sub
les
and
pop
pop
fisub
pop
pop
push
pop
data16
xor
push
pushf
cmps
push
mov
mov
fidiv
and
jnp
add
xchg
push
mov
ins
xchg
jge
mov
out
mov
dec
jb
ja
and
inc
sahf
jbe
repnz
mov
call
ja
repnz
sub
(bad)
test
xor
stos
mov
loopne
dec
mov
jl
jmp
movs
in
and
dec
mov
pop
adc
add
js
or
js
cli
mov
(bad)
rol
int3
addr16
in
loopne
xchg
inc
pop
sub
(bad)
in
movs
and
sbb
fisttp
lar
loope
jle
sub
lods
(bad)
ret
scas
jl
test
mov
mov
sub
fist
add
xor
pop
jne
lds
or
not
jmp
stc
mov
adc
xor
cs
jl
dec
icebp
xor
inc
jo
jae
fcom
loopne
xchg
push
bound
in
pcmpgtd
or
lds
dec
(bad)
imul
ds
mov
into
ds
outs
in
pop
mov
lds
leave
leave
clc
lea
je
and
dec
add
sub
mov
ja
daa
push
jp
cmp
frstor
mov
repnz
push
mov
adc
dec
cmp
xchg
mov
push
rol
inc
or
mov
or
out
mov
pop
ds
mov
push
xchg
outs
push
jp
xchg
rcr
xchg
jns
je
xchg
mov
sti
fild
add
push
push
mov
ds
mov
rol
add
cli
jp
rol
or
xchg
in
inc
addr16
outs
dec
inc
mov
xor
rcr
test
repnz
gs
mov
movs
inc
jnp
sub
cmp
nop
cmp
xchg
scas
loop
retf
mov
add
mov
add
stos
adc
inc
lock
pop
inc
ror
pop
adc
test
mov
ja
xchg
dec
fwait
mov
and
mov
and
inc
mov
ins
and
dec
pushf
cmc
out
mov
xchg
jg
inc
retf
xor
sbb
sub
ds
jmp
ret
adc
cs
stos
cdq
jbe
sbb
ss
mov
test
jb
in
movs
mov
cld
fiadd
xchg
sub
inc
add
retf
arpl
mul
pop
aaa
push
rcr
sub
ret
pop
mov
ins
jmp
pop
or
stos
inc
imul
cmp
pop
xchg
push
aam
sar
inc
jns
fistp
or
pop
push
call
out
cmp
(bad)
aam
sbb
fadd
xor
out
xchg
xchg
inc
test
sti
or
icebp
pop
dec
mov
push
pop
sbb
push
pop
sub
fwait
add
movs
loope
sub
and
push
sbb
fstp
push
ror
rol
sbb
lds
(bad)
xchg
and
mov
mov
add
sbb
int
stos
push
push
inc
fbld
in
jle
and
scas
mov
pop
jno
cld
push
in
popa
lea
adc
pop
ins
xchg
popf
icebp
aam
int3
idiv
sbb
addr16
adc
adc
cmp
jmp
daa
jns
jno
loopne
jmp
push
(bad)
pop
dec
xchg
or
lahf
repnz
jmp
(bad)
ins
pop
rol
out
or
jmp
jae
mov
ins
popf
shl
shr
(bad)
call
xchg
jnp
push
out
jne
repnz
mov
aad
sbb
xor
test
and
mov
add
shl
mov
xchg
or
mov
sbb
or
xchg
mov
int
vpor
pop
lods
call
xor
leave
adc
jle
or
dec
dec
(bad)
dec
mov
cmp
push
jae
pop
jmp
xchg
mov
lea
call
add
clc
inc
sbb
mov
cmp
clc
xor
inc
sub
mov
dec
jle
dec
pop
and
mov
cmp
mov
jbe
pop
inc
jmp
or
fld
adc
mov
lea
and
cmp
dec
mov
fisttp
sub
(bad)
mov
xchg
inc
pop
iret
cmps
jmp
push
gs
mov
repz
mov
pop
add
dec
into
out
aad
scas
in
cs
add
out
mov
jp
retf
and
adc
loop
mov
out
cli
mov
dec
icebp
iret
not
mov
add
scas
movs
test
retf
mul
ja
imul
clc
cld
and
pop
and
mov
jge
inc
cmp
into
mov
cwde
lea
es
push
jmp
pushf
xchg
xor
gs
adc
enter
cli
xchg
add
fist
and
lods
pop
lds
cs
stos
push
iret
in
popa
(bad)
cmp
outs
mov
xor
or
inc
mov
into
xchg
fstp
movs
inc
enter
mov
mul
pop
vcvtpd2ps
in
popf
fistp
fucomip
push
sahf
or
jge
sahf
pop
add
aas
jg
(bad)
cs
fnsave
fdiv
push
or
dec
int3
add
outs
imul
jb
add
cmps
sub
xchg
call
popa
std
xor
and
in
and
enter
into
sbb
or
push
pop
add
sbb
mov
mov
int3
repnz
adc
mov
test
inc
xor
add
int3
mov
pop
ficomp
repnz
mov
xor
ja
adc
rcl
aad
repnz
jno
fld
push
in
cwde
test
pop
jmp
jnp
add
vmovshdup
cmp
mov
pop
lahf
push
fidivr
out
loope
mul
retf
imul
sti
inc
mov
cmp
retf
scas
out
push
adc
ret
jb
and
xor
test
sbb
add
fsubr
cmps
iret
sbb
cmp
inc
leave
xor
dec
mov
ins
(bad)
push
imul
xchg
cmp
pop
js
mov
mov
mov
sar
pop
sti
and
outs
xchg
xchg
in
jns
jae
add
add
xchg
hlt
jg
std
jge
xchg
retf
inc
mov
pop
mov
movs
fs
jns
shr
jne
pop
mov
dec
mov
pop
(bad)
shr
xchg
mov
lods
fld
xor
nop
jmp
mov
iret
and
sub
mov
and
and
rcl
mov
jb
(bad)
std
or
mov
imul
clc
es
pop
call
fsub
adc
out
and
cmps
arpl
jo
outs
add
cmp
loope
mov
or
inc
push
lods
mov
cdq
repnz
repz
jg
dec
inc
xchg
ja
pop
cmp
jbe
std
inc
mov
hlt
push
pop
movs
and
cmps
test
xor
movs
clc
icebp
addr16
fs
mov
sar
cmp
das
outs
push
sub
out
aaa
mov
in
outs
xchg
sar
push
push
and
loop
sub
xor
(bad)
cmp
jmp
and
add
test
jae
mov
outs
xor
dec
xchg
and
enter
cmps
pop
outs
inc
pop
sbb
pop
and
out
fsub
inc
outs
and
pop
sar
inc
(bad)
sub
mov
int3
lock
daa
repnz
dec
out
cmp
cmp
test
cmp
fidivr
int
adc
out
js
bound
fadd
int
lods
mov
aam
cwde
out
adc
jmp
(bad)
and
mov
repnz
repnz
pop
jmp
jl
dec
into
sbb
sub
or
inc
gs
repnz
test
(bad)
jmp
loopne
mov
test
pop
cmp
sar
add
mov
sbb
xchg
out
xchg
pop
xor
lahf
movs
xchg
jge
jecxz
mov
call
adc
in
sahf
jne
sub
dec
shr
loopne
xchg
and
mov
dec
ret
cmps
xor
xor
mov
cmp
dec
outs
or
ins
imul
in
jmp
adc
cmp
cmps
cmc
fsubr
sbb
loop
inc
je
xchg
fcomp
jo
cmc
pop
push
xor
cmp
cdq
int3
dec
jno
sahf
mov
cmp
or
(bad)
ins
push
mov
pop
jno
adc
add
and
adc
scas
into
mov
or
or
mov
ja
fmul
clc
rcl
stos
mov
neg
mov
ret
adc
xchg
or
jb
aad
fsub
and
jl
xchg
push
push
(bad)
or
hlt
jae
clc
sbb
aad
and
mov
and
cmps
popf
scas
into
mov
sar
xor
inc
xchg
repz
or
lods
mov
mov
sub
xchg
or
loop
aas
or
fmul
and
les
mov
mov
and
jae
lea
in
xor
js
in
mov
stos
lods
and
icebp
mov
mov
xchg
popf
inc
test
jno
and
or
adc
ret
mov
outs
cmc
adc
or
xchg
adc
mov
inc
jecxz
stos
(bad)
div
xchg
out
xchg
cdq
std
stc
retf
test
and
adc
test
inc
mov
push
push
pop
(bad)
stos
jno
iret
pop
les
adc
stos
cmp
push
mov
push
pop
add
ins
nop
test
out
cs
out
pop
xchg
dec
ror
(bad)
test
das
push
fist
jmp
cwde
sahf
jo
xchg
aas
aad
jae
jae
fisttp
movs
add
cmp
sub
pop
(bad)
test
stos
push
or
sti
mov
push
add
(bad)
(bad)
pop
out
mov
mov
mov
sbb
sbb
push
dec
cmp
enter
(bad)
retf
push
xchg
mov
pop
add
mov
ror
cmp
sub
fcomp
inc
mov
jge
dec
jne
add
lds
mov
jnp
mov
add
clc
mov
jl
ret
jg
jmp
test
jmp
mov
cmc
sahf
mov
int
cmps
iret
stc
stos
xor
inc
sbb
sub
sub
test
in
pop
shl
mov
js
jno
sbb
call
nop
add
jb
sbb
sub
(bad)
jmp
mov
adc
leave
repz
loopne
or
scas
outs
imul
sahf
mov
mov
mov
inc
or
sub
in
arpl
or
cmp
and
pop
fwait
and
and
ins
sbb
and
fadd
jl
(bad)
jle
call
dec
int
ins
push
popa
loope
push
xchg
cmc
(bad)
push
sbb
test
jae
mov
cmps
push
jmp
add
clc
shr
int3
dec
out
pop
sub
mov
scas
sbb
lahf
mov
xor
adc
and
xlat
xlat
lahf
xor
and
add
in
lahf
jo
dec
ss
ins
adc
dec
cmp
pop
sub
mov
jbe
aas
ins
sti
jmp
call
ins
cmps
fimul
outs
push
pop
in
fiadd
cmc
aam
or
jmp
pop
sub
mov
jge
inc
xor
adc
inc
mov
cli
into
shr
fist
xor
faddp
aas
lods
pop
clc
movs
dec
lea
pop
inc
fbstp
adc
mov
out
aaa
ja
xor
mov
pop
sub
cmp
or
scas
std
xchg
pop
movs
xlat
jg
mov
jnp
fsubrp
rcr
jg
cwde
sbb
cmp
gs
mov
push
rol
xchg
and
iret
or
rol
je
sbb
jp
jno
cmc
out
dec
xlat
pop
out
lahf
std
js
inc
sub
mov
test
adc
(bad)
add
and
in
leave
dec
push
inc
and
js
xchg
(bad)
xor
jmp
into
mov
sub
mov
pop
minps
pop
sahf
xlat
xor
out
out
imul
push
iret
and
jb
lahf
inc
sar
push
cmp
movs
push
vshufps
loope
bnd
ja
lods
rol
push
int3
out
jmp
outs
pop
sbb
jmp
inc
xchg
popa
out
(bad)
mov
mov
push
pop
test
add
and
dec
mov
(bad)
and
jp
dec
and
jmp
aam
jmp
bnd
jle
fstp
movs
int3
and
xchg
push
(bad)
sti
and
push
arpl
or
jmp
icebp
or
dec
or
dec
sbb
shl
cmp
pop
not
fwait
add
mov
and
dec
pop
mov
jl
mov
cs
push
imul
retf
dec
xchg
inc
jae
cmp
push
sub
sbb
mov
rcl
mov
test
push
pop
in
xchg
jbe
and
test
pop
stc
inc
push
(bad)
and
test
leave
call
repnz
pop
push
test
into
outs
inc
pop
cdq
int3
sub
repz
and
inc
imul
inc
add
faddp
lods
mov
xchg
repz
loopne
loop
retf
pop
cmp
inc
gs
ins
cmps
fadd
jecxz
cmps
xor
jmp
movs
sbb
imul
rcl
iret
mov
push
imul
ja
xchg
scas
ds
add
mov
sub
xchg
ret
in
dec
add
jbe
iret
mov
jle
out
cld
shl
mov
movs
fwait
sbb
ror
and
push
fdivp
sbb
dec
add
xchg
mov
pop
mov
xor
mov
repnz
pop
xchg
mov
stos
ficomp
fld
mov
out
jae
loop
sbb
xchg
xor
mov
into
in
lods
cmp
sbb
mov
mov
mov
dec
sub
imul
xor
push
inc
mov
mov
push
cmc
mov
jge
dec
(bad)
loop
xchg
popf
xchg
out
retf
sahf
out
xor
nop
xor
and
ins
lods
icebp
and
push
fistp
ret
rcl
push
std
adc
cmp
mov
out
cmps
jecxz
(bad)
loopne
cmps
xchg
mov
push
adc
lods
das
lods
test
stos
icebp
inc
bnd
xor
xor
je
jmp
aaa
cmp
adc
lahf
call
sbb
xchg
mov
and
fwait
push
xchg
dec
clc
lock
loopne
pushf
(bad)
dec
in
xchg
popf
loope
and
xor
lods
jns
sti
dec
int3
and
mov
shl
cmp
stos
cmp
mov
inc
mov
aam
inc
fsub
lods
loop
aas
in
mov
stos
pop
push
sub
fscale
push
fdiv
pusha
jmp
xor
fmul
cmps
scas
dec
lahf
fisttp
xchg
sbb
cmp
js
loopne
movs
xor
sub
jmp
mov
pop
data16
lods
or
jne
add
adc
in
sbb
in
sub
addr16
aas
mov
cmps
pop
jne
mov
movs
stos
sbb
cmp
call
int
mov
mov
mov
pop
xchg
or
add
(bad)
cmp
adc
sbb
sub
push
xchg
in
into
jle
in
push
inc
or
add
leave
cmp
mov
pop
inc
pop
xor
push
push
inc
mov
add
xchg
dec
dec
mov
sti
test
cwde
mov
popa
xchg
popa
mov
stos
jbe
push
int3
mov
mov
imul
jge
xchg
inc
push
mov
les
arpl
into
inc
xlat
mov
lods
mov
cmps
mov
mov
jne
movs
mov
cmc
xchg
jae
xor
fist
jno
sar
mov
xor
cmp
aaa
in
enter
xchg
(bad)
mov
pop
jno
cmp
retf
in
mov
pop
and
in
aas
in
xchg
push
cmps
shl
add
cmps
adc
push
test
push
or
sub
add
cmps
jne
xor
push
fnstsw
ins
rcl
mov
adc
scas
arpl
popa
jp
inc
repnz
inc
cmp
retf
rcl
xor
out
into
aam
inc
rcl
jl
sub
out
mov
int3
lods
sub
aas
add
inc
add
adc
jmp
adc
pop
fs
popa
int3
test
mov
sahf
cmovno
popa
repz
sbb
stos
movs
mov
wbinvd
outs
jmp
mov
fwait
push
ficomp
mov
cmp
lock
mov
cdq
push
daa
dec
adc
sbb
iret
inc
fwait
(bad)
std
ret
outs
int3
fwait
aam
(bad)
fcom
inc
scas
xor
push
call
std
rcl
shl
add
aaa
(bad)
cs
or
dec
push
cmps
mov
int3
xchg
xchg
mov
xchg
inc
(bad)
cwde
(bad)
mov
xor
aam
xchg
mov
pop
adc
(bad)
dec
cmp
mov
cmp
xchg
cs
cld
into
sub
mov
jne
in
outs
rcl
and
lahf
lods
fwait
adc
push
int
cmp
push
retf
repz
ror
inc
in
ror
xchg
xor
jne
cmp
test
push
xchg
and
and
xor
inc
movs
or
xor
adc
call
sbb
inc
(bad)
icebp
bound
loop
sbb
sub
mov
sub
jle
sub
int
rol
test
dec
mov
mov
and
inc
cmps
xchg
push
cmp
push
xchg
pop
in
pusha
inc
adc
jnp
dec
jmp
pusha
loope
mov
scas
movs
cld
stc
jno
inc
mov
sbb
jbe
add
idiv
ins
bound
add
xchg
(bad)
sub
push
cs
nop
test
add
pop
inc
mov
add
xchg
cmc
loopne
adc
pop
stos
test
cmp
dec
js
adc
(bad)
test
iret
sahf
dec
je
sar
lods
nop
leave
add
adc
push
cmp
addr16
sti
retf
xchg
loopne
std
xor
mov
push
xor
push
js
pop
gs
push
ds
ret
inc
enter
test
inc
or
adc
or
loop
inc
nop
sub
(bad)
das
test
dec
pop
inc
push
pusha
fnstenv
jae
xchg
and
pop
test
inc
sub
pop
scas
jge
mov
cmp
mov
aam
cmp
out
imul
inc
cmp
pop
cmp
movs
pop
mov
pop
es
adc
mov
cwde
ror
mov
aas
sahf
xor
xorps
sbb
xchg
loope
xor
ficom
cmp
or
leave
sti
inc
aas
or
xor
ins
inc
pop
imul
int
test
into
aam
cdq
cmp
ja
adc
push
imul
inc
outs
int
in
sub
into
fst
scas
jge
push
jg
das
jmp
repz
sub
lahf
js
int
jg
shr
push
rcr
mov
repnz
add
jmp
xor
gs
in
fdivr
jmp
mov
icebp
icebp
xor
rcl
ins
xor
add
div
xchg
icebp
inc
mov
les
in
daa
(bad)
fmulp
lods
mov
mov
cld
repnz
and
sub
mov
in
or
dec
pop
inc
(bad)
adc
ret
cwde
or
jp
movs
dec
xor
mov
mov
fadd
daa
sub
xor
lds
hlt
jle
(bad)
cmp
inc
out
pop
jbe
pop
mov
cdq
clc
mov
bnd
inc
xchg
jl
(bad)
pop
inc
mov
test
cmc
icebp
stc
adc
dec
sub
es
movs
jo
adc
aad
(bad)
bound
sbb
js
stc
adc
out
ins
lock
xchg
imul
cmps
push
setle
push
ins
mov
and
pop
cmp
lock
xor
ja
outs
enter
sbb
jge
cmp
sbb
cdq
push
int
inc
sti
jo
test
dec
push
xchg
fbstp
push
rcl
xor
sbb
fwait
sahf
jmp
cmps
popa
popf
push
pop
(bad)
inc
dec
cs
push
and
mov
pop
adc
ja
loop
inc
aad
test
pop
aam
std
mov
inc
in
shr
rol
dec
fadd
pop
sbb
jnp
push
sub
gs
and
shl
xor
sahf
(bad)
(bad)
stos
daa
mov
(bad)
adc
mov
test
fmul
jg
sub
shr
das
pop
cmc
pop
push
into
ja
jno
or
add
jecxz
lock
cmp
jns
arpl
xchg
(bad)
jb
ins
mov
daa
je
xor
mov
push
and
pop
out
push
(bad)
push
push
sbb
or
ret
push
call
push
stos
or
xor
mov
jne
or
std
call
test
mov
fldcw
push
aas
xchg
ins
jmp
xchg
je
xchg
inc
push
xor
push
enter
sbb
sub
pusha
jl
dec
pushf
in
mov
stos
outs
cmp
in
shl
pushf
and
dec
fnstcw
xlat
sub
shr
scas
mov
scas
nop
aam
lds
(bad)
push
shl
pop
fidiv
xor
push
outs
imul
xrelease
and
push
xlat
mov
and
push
mov
sbb
add
pop
mov
(bad)
ficom
pop
movs
dec
xchg
adc
mov
cmp
mov
retf
and
cmp
test
and
pop
jmp
je
outs
fcmovne
ins
add
cdq
shl
retf
scas
(bad)
int
mov
jbe
jle
in
pop
jmp
loopne
xchg
and
int
inc
inc
aaa
mov
push
and
daa
xlat
push
ins
sar
and
je
ret
mov
jae
ja
pop
outs
aaa
mov
sbb
jo
je
adc
add
movsx
mov
lods
jmp
push
mov
mov
add
hlt
rcr
ds
movs
sar
addr16
lea
and
fdivr
push
stos
cmps
pop
loopne
ret
push
jb
xor
or
loope
jbe
jl
mov
clc
inc
push
mov
push
jnp
aad
xchg
or
jbe
pushf
sub
pop
mov
adc
push
or
cmp
aas
movs
fisub
jmp
movs
aam
rcr
xchg
push
in
mov
mov
imul
mov
std
mov
adc
mov
xchg
dec
cmc
sbb
in
inc
and
sbb
jno
and
mov
add
not
ret
nop
cdq
mov
leave
jb
cmp
inc
pop
mov
gs
add
fistp
sbb
leave
outs
imul
data16
loop
in
clc
ret
push
retf
jns
sub
dec
sub
jae
out
dec
fisub
pop
xchg
xor
rcl
add
aam
scas
inc
lds
push
outs
push
cdq
push
ins
xchg
xor
int
test
cs
mov
mov
xchg
stos
mov
mov
lea
dec
fwait
adc
clc
lods
sbb
sub
lock
cmps
shl
and
xchg
call
pushf
xor
fild
jle
mov
out
xchg
mov
call
add
lahf
cld
test
in
mov
add
(bad)
aad
(bad)
mov
mov
test
push
clc
xor
jb
test
xchg
jne
xchg
mov
fcomp
pop
arpl
jbe
jmp
jns
mov
jae
add
in
imul
ins
scas
xchg
inc
(bad)
pusha
(bad)
cmp
popf
enter
xor
mov
inc
arpl
stos
fcom
sbb
or
or
inc
clc
aam
push
push
call
int
adc
mov
and
xchg
xchg
icebp
and
test
mov
test
jno
sbb
xor
sbb
xchg
icebp
ror
dec
jb
test
fadd
sbb
inc
outs
pop
adc
add
xor
push
fmul
jle
adc
iret
xchg
xor
xchg
cli
fdivr
sub
mov
vdivpd
stc
and
jge
pop
mov
push
std
(bad)
sbb
mov
cmc
icebp
mov
into
dec
xchg
push
sub
cdq
pop
dec
xchg
mul
add
mov
push
ror
clc
cmc
and
cdq
add
loopne
std
pusha
push
push
clc
mov
xchg
mov
dec
or
aas
mov
icebp
pop
jl
movs
in
rcr
push
loope
mov
pop
ret
cmps
pop
stos
ficom
pusha
xor
mov
inc
cmc
movs
cmp
(bad)
sahf
pop
lods
cmps
mov
pop
mov
sar
dec
cdq
push
jb
aaa
scas
jg
nop
sahf
js
fld
imul
adc
inc
stos
fst
cmps
imul
fild
stos
pop
and
aad
test
pop
inc
cdq
div
dec
jb
jecxz
neg
movhlps
jb
xor
pop
cmp
sti
pushf
jmp
das
cmp
mov
mov
aas
jg
popa
scas
and
pusha
mov
dec
lock
and
sub
lods
test
pop
cmp
xchg
and
dec
mov
mov
push
ret
pop
jbe
ficomp
add
adc
das
mov
sub
and
ror
call
fadd
cs
nop
pop
xchg
mov
out
rcl
(bad)
mov
xor
lods
adc
jmp
fld
movs
ret
lahf
test
pop
pusha
cdq
ja
dec
cmps
(bad)
stos
mov
xchg
mov
push
and
pusha
(bad)
aad
pop
icebp
sbb
cmp
imul
in
dec
lds
aad
mov
add
shl
sti
mov
xchg
rcr
outs
jmp
imul
add
cmps
mov
cli
xor
push
in
inc
push
pop
sbb
test
dec
outs
xor
fst
ja
je
push
xchg
dec
je
cmp
(bad)
ins
mov
pop
sti
dec
or
je
out
je
push
out
test
loopne
cwde
in
sub
or
or
bound
aaa
inc
dec
pop
aas
iret
ror
mov
sbb
jmp
ins
aaa
ins
scas
push
mov
call
lock
xchg
push
jb
ins
push
in
movlps
xor
dec
(bad)
sbb
dec
sbb
xchg
out
cli
cmp
inc
cs
icebp
fldcw
mov
push
mov
push
xchg
mov
push
mov
into
or
scas
test
inc
je
retf
add
mov
stos
(bad)
pop
aaa
pop
cld
adc
mov
mov
arpl
pop
lds
rcl
inc
xor
pop
test
rcr
stc
mov
adc
or
sbb
push
les
push
enter
addr16
(bad)
push
int
and
mov
outs
arpl
and
xchg
mov
ret
jmp
loope
lods
pop
adc
mov
sbb
inc
sahf
mov
mov
repnz
cmps
ror
push
out
dec
icebp
fwait
and
adc
jo
lods
or
push
jp
fild
mul
daa
jmp
retf
cmp
or
or
loopne
pop
mov
pop
jmp
sub
jmp
lahf
mov
add
or
push
sub
push
fsubp
aam
stc
mov
mov
push
shl
push
mov
cwde
call
mov
outs
dec
mov
push
adc
scas
cmps
mov
loopne
and
or
dec
movs
out
fcomi
pop
xchg
jge
in
push
add
xor
pop
out
dec
stc
dec
leave
mov
pop
sub
sub
sti
xchg
mov
xlat
dec
test
jle
mov
sbb
retf
jbe
int
fisttp
clc
sbb
cwde
or
movs
lods
sub
lock
jle
inc
push
xchg
sub
adc
dec
popf
push
ins
arpl
or
mov
aam
stos
inc
ins
ret
repz
jnp
cmp
stos
psrlq
push
ret
push
jp
sub
int
push
jno
mov
sti
mov
nop
int3
jns
and
mov
sbb
and
dec
dec
push
lods
test
and
(bad)
push
cmps
dec
mov
jns
cmp
sub
mov
inc
xchg
mov
jecxz
call
or
fsub
dec
adc
sti
add
pop
scas
fild
mov
fld
mov
adc
jae
mov
jg
pop
fdivp
(bad)
in
mov
pop
mov
js
in
xlat
rcl
xchg
test
mov
movs
dec
mov
aad
lahf
cli
push
out
iret
das
dec
push
out
jmp
(bad)
lds
hlt
stos
or
or
mov
add
popf
in
jns
sbb
sub
repz
mov
add
add
arpl
clc
icebp
outs
cmp
into
push
mov
in
or
jl
push
je
pushf
nop
outs
and
and
push
adc
add
and
cmp
or
aad
fdiv
cmps
stc
dec
mov
xchg
or
lods
movs
mov
loope
sub
jle
adc
sti
and
fdivr
sbb
movs
stos
inc
add
imul
xchg
xor
add
hlt
scas
sub
pop
and
ss
mov
imul
out
lea
pop
cmps
in
call
cmp
mov
fdiv
adc
or
pusha
les
bound
cli
or
or
fbld
dec
push
imul
ja
and
xor
fnstenv
mov
xchg
shr
xchg
test
jecxz
loope
(bad)
jnp
test
mov
scas
push
scas
call
cmp
clc
xchg
xchg
fwait
outs
data16
mov
outs
(bad)
fcmovnb
mov
shl
xchg
icebp
scas
add
aad
in
sub
int
push
retf
jge
or
outs
adc
push
or
sti
cmp
jmp
dec
mov
adc
mov
jno
aad
popf
mov
mov
mov
inc
sub
fnstenv
pop
add
jns
(bad)
lods
test
lods
cmc
lods
xchg
push
pusha
xchg
movs
sar
in
cmp
push
iret
cwde
lods
pop
stos
cld
leave
add
lods
xlat
mov
mov
xor
mov
pusha
sub
aad
cmp
sub
jg
mov
xchg
cli
mov
jmp
push
(bad)
fadd
push
cmp
adc
inc
fistp
xor
sbb
rcr
cmp
call
fiadd
cld
xchg
jo
pop
pushf
pop
sub
js
add
stos
push
cmp
xchg
or
pop
add
outs
mov
pop
ret
inc
or
push
adc
call
nop
inc
jle
bound
add
mov
mov
dec
nop
add
das
pop
mov
xchg
xor
adc
call
repnz
and
aas
add
add
mov
adc
call
aam
add
push
xlat
jo
pop
adc
std
fist
sti
push
inc
mov
aam
and
jmp
inc
hlt
push
xchg
lods
push
jmp
pop
sbb
test
sub
dec
jg
and
dec
dec
cwde
ja
jp
scas
mov
sti
push
add
sbb
sti
push
lods
mov
or
je
push
dec
stos
jbe
adc
mov
arpl
test
hlt
jns
inc
das
fld
push
push
push
pop
retf
sub
jns
repnz
fstp
jecxz
jae
aad
add
dec
lahf
push
(bad)
imul
and
fst
xor
arpl
inc
xchg
mov
das
lods
xor
fwait
pusha
cmps
add
int3
adc
scas
sti
test
data16
fst
jmp
xor
mov
pushf
fcomp
inc
fwait
test
hlt
sbb
adc
push
pusha
dec
int
(bad)
sbb
push
lea
lea
inc
push
pop
jb
pop
in
push
lahf
imul
xor
in
sahf
push
push
cmp
sub
rcl
(bad)
clc
pop
pop
ss
in
into
mov
jmp
in
imul
cmp
test
dec
cmp
jnp
and
out
cli
daa
add
outs
rcr
fidiv
mov
ins
retf
outs
dec
popa
mov
dec
(bad)
push
sub
push
push
rol
clc
inc
sub
cmp
(bad)
mov
lahf
(bad)
adc
mov
out
jbe
cmp
push
out
adc
mov
shl
add
cmp
dec
popf
adc
xchg
daa
add
int3
daa
pop
add
jbe
mov
popa
inc
ja
inc
leave
in
push
adc
mov
sahf
or
push
or
cmc
test
add
jge
(bad)
lods
mov
stos
add
jmp
test
sub
mov
and
xor
ror
inc
adc
test
shl
or
repz
xor
clc
cwde
not
dec
mov
in
lock
shl
jne
jae
movs
pusha
mov
cmps
pop
shr
fld
cwde
js
xor
scas
loopne
jbe
das
ss
xchg
mov
inc
dec
mov
cli
test
add
sbb
outs
mov
ja
jns
(bad)
mov
push
push
sub
or
push
int
pop
lods
push
xchg
or
mov
cmp
pop
fist
jo
loope
add
xor
(bad)
jmp
pop
ins
sbb
test
ds
or
fadd
arpl
(bad)
jecxz
cli
outs
fsubr
pop
inc
or
fisubr
lods
pop
sub
sub
pop
or
in
pop
nop
cmp
iret
ins
pop
mov
sbb
jnp
push
pop
mov
and
repz
enter
xlat
mov
test
or
inc
push
sub
mov
mov
inc
mov
xor
das
cwde
ret
sar
aas
popf
psllw
pop
jg
inc
sub
jg
cmp
clc
mov
jg
dec
sbb
arpl
fwait
mov
xchg
xchg
cwde
jno
(bad)
jne
ret
aas
ins
pop
sub
xchg
cmp
arpl
les
mov
cwde
imul
shr
into
sub
into
cli
pop
sub
push
inc
shr
jbe
enter
xor
lods
mov
mov
or
add
pop
jle
mov
push
es
jae
cmps
sub
xchg
or
xchg
jecxz
call
xor
xchg
sub
fld
loopne
test
xor
clc
ja
ret
add
popf
dec
pop
sub
cmps
xchg
jmp
mov
cmp
hlt
sbb
fwait
call
xchg
jb
es
jle
dec
daa
shl
imul
mov
jecxz
xor
aam
nop
jnp
leave
retf
push
out
xchg
xor
xlat
popf
(bad)
(bad)
fs
aaa
xchg
aam
test
js
add
push
clc
movs
cli
mov
xor
pushf
das
cmp
ins
ror
loope
push
int3
out
lock
pop
push
add
ins
(bad)
retf
sahf
sub
call
mov
jnp
mov
mov
aaa
dec
cmp
sar
adc
fdivp
inc
dec
mov
push
inc
xor
inc
pop
sub
stos
imul
push
ret
ja
cmp
dec
out
sbb
loop
jb
dec
pop
(bad)
cli
jo
cmp
(bad)
and
push
aaa
sub
(bad)
es
or
or
jecxz
(bad)
(bad)
out
les
adc
dec
loopne
in
jmp
dec
jnp
and
push
scas
pop
or
jae
cld
addr16
outs
imul
shl
dec
push
arpl
cmp
pop
cmp
add
mov
dec
stos
xchg
xchg
inc
mov
jmp
enter
and
test
jg
xchg
ja
jae
outs
dec
dec
pop
stc
mov
and
sbb
dec
and
mov
aam
arpl
pop
call
cld
ja
inc
out
scas
aaa
les
adc
scas
fisubr
push
inc
or
or
cli
inc
dec
xchg
ror
out
cmp
mov
cwde
ret
mov
sbb
mov
fld
ss
shl
(bad)
jne
mov
mov
xchg
pop
lods
xor
lods
aad
cmp
loopne
mov
and
mov
jle
test
sbb
cmp
enter
dec
jmp
retf
fwait
movs
jbe
es
push
jbe
call
scas
inc
pop
rol
in
or
add
xchg
xor
inc
or
sbb
pop
and
jmp
call
add
push
adc
ins
retf
sub
stc
cmp
mov
lds
jae
(bad)
push
stc
add
mov
and
imul
stc
cmp
test
std
dec
jne
sbb
xchg
mov
inc
outs
add
shl
inc
test
icebp
sbb
mov
inc
loop
push
out
mov
mov
push
mov
cmp
or
add
int3
cmps
popf
pop
cmc
dec
leave
jecxz
ins
mov
dec
and
(bad)
fwait
inc
clc
jl
loop
stos
test
dec
mov
pop
fsub
inc
mov
(bad)
jb
sbb
gs
sti
out
push
mov
sbb
inc
movs
adc
adc
cmp
arpl
and
enter
in
mov
inc
mov
mov
pop
out
scas
mov
cs
movs
pop
bound
push
jbe
rcl
push
call
ss
leave
stos
call
inc
inc
retf
aaa
aad
pop
or
mov
sbb
adc
inc
dec
outs
shl
mov
inc
jmp
dec
les
xchg
push
mov
test
inc
push
pop
test
jecxz
pop
lahf
inc
fisub
pop
dec
loopne
imul
mov
imul
daa
mov
das
xchg
add
xchg
jecxz
dec
xchg
repz
push
jb
xchg
cmp
xor
or
in
iret
cmps
aas
mov
push
adc
sub
outs
pop
ja
dec
jns
push
push
nop
add
jbe
shl
imul
(bad)
pushf
loop
fucomip
mov
xor
rcr
out
pop
in
mov
jmp
xor
jl
mov
xchg
push
icebp
sub
mov
mov
enter
or
sbb
sahf
inc
mov
(bad)
cmps
xor
pop
jmp
(bad)
aas
cld
mov
mov
or
xchg
sbb
jmp
in
push
out
daa
xchg
inc
mov
sti
mov
mov
xor
lock
(bad)
(bad)
sbb
jmp
push
fcmovbe
adc
adc
push
inc
pop
clc
pushf
fcom
iret
cmp
xchg
cs
repz
mov
xor
or
mov
mov
idiv
pop
test
xchg
mov
pop
enter
sub
arpl
sub
loopne
jo
jae
dec
sub
push
or
aad
cmp
sub
cdq
nop
or
(bad)
inc
sub
retf
jns
mov
add
outs
dec
xchg
xor
add
scas
test
xchg
pop
movzx
push
mov
outs
xor
fcom
mov
cmps
lea
loopne
jl
stos
cmp
jp
lock
retf
stc
mov
loop
sbb
and
add
fwait
sbb
into
cmp
aas
xchg
mov
dec
ret
lahf
jmp
pop
jo
test
enter
or
xchg
inc
push
ffreep
pop
sbb
xor
pop
or
outs
push
dec
jb
add
(bad)
cs
cmp
(bad)
dec
imul
fnsave
and
test
cmps
mov
(bad)
lods
mov
pop
and
mov
retf
out
shl
or
cs
stos
neg
dec
fild
std
mul
in
jmp
clc
shl
cmps
push
jb
inc
(bad)
inc
xchg
scas
shl
cmp
sar
jg
xchg
add
mov
add
sbb
dec
cmp
into
cs
ret
pop
lods
lds
sub
sub
outs
pop
int
clc
int3
cdq
cmp
pop
jp
leave
retf
add
ficom
mov
sub
sbb
lods
sbb
mov
in
loop
adc
mov
and
cli
mov
xchg
mov
xor
adc
scas
out
popf
push
popa
scas
fbstp
shl
jo
into
out
stos
out
in
test
out
mov
mov
dec
dec
loopne
cli
sbb
mov
mov
xchg
dec
scas
mov
cld
out
dec
mov
lds
call
and
add
sub
outs
ja
scas
test
scas
adc
out
jno
mov
push
jb
aam
mov
adc
les
jmp
xchg
dec
inc
dec
in
inc
pop
je
sbb
mov
dec
xor
adc
mov
pop
(bad)
aad
enter
bound
in
gs
pop
fs
cwde
add
jb
cmp
push
rcr
mov
mov
(bad)
cld
gs
mov
xchg
push
les
das
pushf
dec
and
sub
jg
sub
loop
cli
xlat
mov
call
mov
scas
sbb
popf
outs
inc
loop
or
cmps
shl
push
fsubp
fisttp
jle
es
pop
and
in
push
jle
jae
js
push
in
sub
and
test
dec
inc
cmps
or
mov
daa
dec
loopne
sbb
popf
jg
cli
fcom
(bad)
(bad)
stos
add
repz
sub
pop
aam
push
add
jne
mov
adc
mov
loope
daa
jo
dec
push
ss
test
add
test
sub
or
mov
pop
jg
push
xchg
jmp
dec
sar
sub
mov
in
and
fcom
xor
sbb
repnz
mov
repnz
mov
mov
mov
push
add
movs
aas
and
and
adc
es
push
psllq
xacquire
mov
pop
lea
sub
xchg
dec
out
add
and
and
jno
mov
mov
pop
in
jl
stos
jle
lahf
sub
mov
ret
shl
mov
xor
cmovns
push
arpl
pusha
pop
mov
fwait
pushf
mov
and
hlt
out
out
lock
cld
(bad)
jp
lds
jb
sub
js
cmp
cmps
aad
(bad)
xchg
addr16
fld
ins
(bad)
and
mov
lods
jne
inc
pop
xor
pop
(bad)
and
repnz
cld
pusha
lea
sbb
outs
cwde
jmp
aaa
mov
in
mov
mov
scas
retf
fld
jmp
cmp
or
pushf
int
xchg
arpl
jg
ds
mov
cmp
mov
fld
dec
xor
or
sub
mov
or
mov
xchg
inc
cmps
popf
sbb
sub
adc
lods
es
mov
push
or
hlt
nop
ret
fmul
outs
inc
(bad)
adc
test
pushf
pop
pop
pop
pop
xor
or
jmp
push
sbb
cmc
mov
into
test
push
pop
push
dec
jmp
mov
imul
or
add
mov
fimul
xor
ficom
rol
push
inc
xor
fld
aas
jno
jmp
imul
(bad)
enter
gs
loope
call
sbb
shl
fld
cmp
mov
stc
loop
and
ins
aad
adc
ficom
or
fpatan
fwait
outs
ins
fild
add
jo
aam
in
add
iret
xchg
fnstcw
inc
into
aaa
test
popa
cmps
aad
and
xchg
push
push
cmp
gs
dec
cld
sub
inc
push
pop
add
jmp
or
bound
call
xchg
sbb
data16
std
jle
xor
xchg
ss
sbb
cwde
push
xchg
pop
cmps
test
pushf
adc
mov
pop
mov
inc
addr16
sub
call
mov
aaa
mov
fwait
(bad)
cmp
or
and
add
ja
out
in
in
rcl
daa
jnp
pop
gs
mov
jo
aad
repz
icebp
dec
adc
mov
sub
jbe
xchg
adc
push
or
adc
leave
add
enter
loopne
push
aam
adc
lock
push
fcmovb
dec
pop
test
dec
inc
sbb
in
pmuludq
and
inc
mov
or
xchg
jnp
mov
cld
popa
cmps
fnstsw
retf
ja
pop
mov
push
repz
rdtsc
cli
cmp
or
cmp
and
popa
int3
stos
fldcw
in
pop
mov
mov
xor
and
push
movs
jmp
enter
push
add
daa
rcr
sub
and
dec
dec
mov
or
ds
js
add
mov
or
addr16
adc
shl
jle
aam
jl
stos
mov
add
std
xchg
jmp
icebp
sbb
adc
in
push
retf
dec
loop
fstp
mov
mov
jb
jb
das
retf
inc
out
or
fs
or
out
call
outs
jo
jg
push
nop
mov
add
mov
addr16
pushf
and
stos
xchg
outs
pop
push
sub
out
adc
jns
stos
(bad)
and
shl
pop
dec
mov
loop
cli
div
daa
ds
(bad)
sahf
mov
inc
push
push
dec
lea
lock
ds
sbb
or
pop
jb
mov
je
jle
or
pop
cmp
mov
and
mov
stos
rcr
fmul
xchg
adc
out
stos
mov
dec
sbb
std
add
rcr
rol
xor
retf
mov
mov
push
ja
xor
mov
addr16
adc
jae
ret
xor
cwde
mov
pop
inc
inc
hlt
pop
jp
jbe
mov
inc
cmp
and
push
sar
mov
dec
out
ds
aas
or
and
sbb
push
and
ins
jge
and
cwde
pop
sbb
cmp
and
mov
push
mov
cmp
outs
mov
pop
pop
inc
fsub
mov
sub
ja
adc
neg
aam
fwait
ret
movs
dec
jne
sbb
jge
sbb
in
loope
or
jno
pop
xchg
fistp
leave
lea
jecxz
xlat
hlt
push
ror
sti
pop
addr16
sub
sbb
inc
and
push
mov
mov
aas
jge
inc
pop
aad
sub
ret
dec
fdivr
out
or
push
push
cmp
cdq
push
icebp
ret
dec
in
xchg
sbb
call
push
sub
sahf
push
fstp
or
mov
mov
xchg
lods
in
jns
je
add
mov
push
sub
aam
xchg
ficom
inc
rcl
inc
mov
dec
enter
jge
or
and
out
fisubr
jno
pusha
jmp
out
jmp
fstp
push
add
in
out
cdq
cs
out
lods
jmp
mov
pop
cwde
sbb
xor
neg
cmps
cmp
xor
arpl
cmp
test
push
test
push
adc
(bad)
out
js
add
push
and
aad
bound
dec
jb
mov
ins
inc
in
int3
enter
add
sti
dec
gs
hlt
mov
mov
je
das
das
dec
ret
cmp
xchg
or
retf
in
sub
arpl
mov
ins
pushf
adc
mov
xor
inc
and
sub
stos
mov
mov
pop
dec
dec
in
pop
push
push
or
add
sbb
cmp
cmp
test
cmps
push
test
cmc
cmp
dec
fs
ins
xchg
xor
xor
rcr
pop
sar
int
in
cld
inc
stos
div
ret
test
mov
xchg
sub
gs
xor
loopne
jae
mov
dec
mov
mov
mov
clc
dec
ja
jmp
and
mov
stos
jb
inc
cmp
je
gs
outs
jecxz
cwde
sub
lock
cmps
aas
(bad)
in
xor
adc
pop
adc
outs
sub
adc
mov
adc
mov
dec
dec
cmp
(bad)
hlt
sbb
pop
or
adc
call
xor
ds
push
adc
ss
inc
shl
xchg
rcl
jmp
or
cmp
(bad)
shl
xchg
push
xor
out
inc
sbb
sub
mov
push
outs
xchg
push
in
in
dec
(bad)
fs
pop
sbb
inc
push
les
gs
adc
or
int
nop
fisubr
add
into
mov
mov
push
push
in
push
popf
mov
out
cmps
push
stc
add
fisubr
xlat
add
mov
xchg
cdq
aaa
adc
and
jo
arpl
dec
lds
dec
(bad)
outs
outs
lds
cmp
mov
and
fiadd
in
mov
test
in
inc
iret
xor
pop
sbb
cmp
scas
jne
jns
dec
pusha
or
inc
mov
push
loop
(bad)
shl
jle
inc
imul
pushf
cmp
jg
outs
jg
inc
(bad)
pop
push
out
xchg
scas
stc
sub
add
dec
into
lock
lock
pushf
xor
jmp
xor
notrack
loope
mov
pop
or
test
sbb
out
mov
push
daa
mov
jae
mov
movs
call
push
out
dec
std
cwde
adc
inc
mov
iret
add
push
mov
mov
hlt
jmp
xchg
lds
jns
push
adc
loope
lahf
and
jae
cmp
loop
inc
dec
test
jbe
xor
je
mov
movs
ret
xor
rcr
and
pushf
fnstenv
and
add
cmp
shl
jmp
xchg
add
jp
push
mov
xlat
mov
pop
retf
shrd
pop
inc
xor
add
ja
imul
or
rcl
or
cmp
lock
cmps
js
push
xchg
ror
cmc
mov
test
lahf
cmp
int
pop
fist
mov
out
int3
mov
fbld
add
fidiv
iret
xchg
mov
fst
das
(bad)
xlat
push
mov
mov
mov
sahf
mov
add
frstor
loope
and
or
test
std
mov
add
cs
imul
jmp
es
mov
loopne
loop
mov
xor
mov
ins
in
setae
pop
mov
mov
jmp
dec
hlt
xor
sub
cli
rcr
mov
stc
neg
aaa
out
mov
and
push
loop
test
fnstsw
xchg
stc
sub
adc
je
(bad)
mov
subps
cld
lea
push
icebp
push
lods
in
icebp
rcr
sbb
aad
jae
mov
dec
retf
dec
xlat
sbb
pop
mov
into
call
pop
adc
cmps
push
mov
rcr
test
test
mov
mov
ins
pop
jg
retf
adc
mov
cld
and
rcl
dec
repz
inc
dec
sub
push
or
cmp
and
in
xor
jl
lods
(bad)
rol
jnp
mov
jl
xchg
inc
mov
push
and
jae
(bad)
fcomp
fiadd
mov
movs
xor
(bad)
mov
sbb
or
call
mov
ret
mov
out
std
rcl
aaa
cli
and
jmp
cmp
clc
xchg
stos
sbb
out
outs
or
and
add
dec
stc
mov
pop
add
xor
adc
(bad)
enter
bound
or
mov
cmp
mov
outs
push
pop
clc
adc
(bad)
sub
mov
aam
mov
push
loop
mov
(bad)
pop
jmp
enter
xchg
enter
(bad)
jnp
xchg
dec
shr
inc
into
or
ds
mov
outs
cmp
les
xlat
in
fisubr
dec
pop
fsubp
cmp
movs
outs
jmp
jge
mov
lock
ror
jns
leave
pop
std
(bad)
xchg
rol
xlat
arpl
scas
stos
and
xor
xor
adc
pop
icebp
and
dec
mov
xor
lds
fnstsw
sub
sub
aaa
nop
ja
and
add
xor
dec
dec
inc
push
mov
pusha
xor
cwde
pop
push
adc
push
cmc
scas
arpl
movs
add
and
push
retf
ds
jno
les
xchg
xlat
pop
mov
imul
movs
dec
stos
jmp
or
inc
push
jp
inc
fld
imul
std
cld
pushf
movs
mov
jns
inc
mov
sahf
jp
mov
shr
sbb
jle
dec
ror
jbe
push
pop
scas
pop
add
mov
mov
add
mov
add
cmc
call
xchg
lahf
cs
fsub
int3
pushf
or
xchg
js
adc
jae
cmc
mov
ss
xlat
dec
cmp
adc
sub
cmp
pushf
pop
xor
jecxz
mov
ds
ja
fwait
int
push
mov
addr16
cwde
aam
scas
sub
(bad)
adc
sar
ds
retf
dec
push
fs
(bad)
(bad)
repnz
mov
shr
or
pusha
xchg
xchg
pop
cmps
iret
stos
jl
push
scas
cdq
add
mov
push
mov
ret
pusha
cmps
(bad)
xlat
aas
jbe
inc
sub
pop
jl
push
shl
xchg
test
mov
or
mov
fiadd
lock
clc
enter
popa
inc
jp
mov
jnp
dec
daa
mov
test
outs
xchg
pop
push
repz
out
sub
cmp
(bad)
sbb
xchg
movs
or
push
cmp
sub
mov
xchg
adc
mov
pushf
rcr
ds
int3
cmp
vpxor
call
push
aad
push
push
inc
ins
dec
stos
sub
jmp
xchg
mov
add
into
or
(bad)
imul
adc
jg
(bad)
sahf
push
xchg
cwde
cmovs
xchg
sti
pop
jl
pop
xlat
and
sbb
and
or
pusha
outs
cli
or
out
inc
xor
stos
(bad)
(bad)
xchg
(bad)
xlat
je
or
jno
fwait
shr
pop
aam
in
jmp
sbb
dec
jno
sub
jne
fild
addr16
(bad)
jns
push
es
jno
fcom
(bad)
(bad)
and
aas
in
fnstsw
jle
test
mov
scas
std
out
scas
fdiv
cwde
imul
ds
sbb
mov
sbb
js
cmp
dec
dec
imul
ss
jle
fild
stos
loope
or
xor
jnp
cmp
push
std
inc
loope
fs
sbb
and
test
jmp
je
jp
inc
jno
scas
ret
jb
sbb
xchg
dec
(bad)
xor
rep
lds
dec
dec
je
cmp
mov
clc
loop
ja
adc
popa
shl
test
jp
aad
and
mov
sbb
push
jg
adc
gs
test
inc
sub
ja
pop
mov
xor
enter
cmp
addr16
push
inc
sbb
les
test
pop
cmp
aam
jle
adc
ficomp
pushf
push
push
loope
outs
xor
ds
pop
add
ins
mov
cmp
push
bound
ret
cmps
loop
or
loop
sbb
in
cli
in
xor
pop
xchg
push
ret
sub
cmp
pushf
loope
xor
test
add
and
mov
cmp
xchg
pop
cmp
retf
lds
aam
ficom
ss
pop
inc
xor
xor
pop
jnp
call
lds
push
pop
mov
(bad)
test
ins
push
add
mov
dec
fwait
pop
push
mov
and
fmul
jmp
push
or
in
mov
imul
cs
out
inc
push
or
xor
cmp
out
fidivr
loop
ds
addr16
inc
cmp
std
ss
push
(bad)
mov
mov
aaa
mov
xlat
sbb
test
xchg
stc
mov
cmovns
(bad)
cmps
push
into
pop
xor
ror
je
xlat
inc
sub
and
mov
mov
cwde
std
imul
cmp
iret
out
bound
pop
jge
fcomp
call
adc
movs
ror
pop
xchg
adc
xor
std
movs
pop
jae
shl
sar
jg
pop
retf
pop
add
jno
out
stc
xchg
imul
cdq
mov
add
leave
push
xor
cmp
(bad)
arpl
repz
rcl
scas
pop
mov
aad
fdiv
sub
bnd
pop
or
cmp
dec
lods
imul
in
test
mov
imul
cwde
xchg
(bad)
dec
push
sbb
sbb
nop
sub
pop
and
jp
mov
fld
sti
test
arpl
mov
fsubr
fistp
sbb
repnz
stos
xchg
imul
test
or
add
push
jmp
push
ds
fcmovnbe
mov
test
ds
mov
in
jb
jp
rcr
jae
push
or
nop
repz
sbb
adc
adc
or
pop
mov
sbb
sbb
push
stos
sahf
push
out
dec
add
ss
ja
lock
adc
cmp
sahf
cmp
mov
jg
push
into
cmc
and
popf
cmc
cmp
xor
fisubr
xchg
in
imul
xchg
mov
enter
fldenv
adc
(bad)
mov
xor
jbe
mov
clc
xor
bound
aad
inc
(bad)
mov
dec
mov
pop
mov
frstor
dec
adc
sbb
mov
jbe
(bad)
jp
in
push
xchg
(bad)
(bad)
push
and
pop
int3
int
or
xchg
cmp
mov
adc
inc
ds
daa
xor
aad
int
mov
mov
cld
jns
xlat
mov
out
pop
cmc
pushf
cmc
mov
jecxz
scas
(bad)
xor
lea
aad
movs
gs
mov
push
inc
fnstcw
xlat
int
bound
mov
pop
sbb
outs
cdq
retf
pop
mov
aas
ret
lahf
daa
pop
jecxz
mov
sub
jae
and
data16
fldcw
and
icebp
mov
mov
xor
out
fmul
sahf
out
popf
adc
lods
push
stos
outs
or
mov
sub
jp
hlt
movs
mov
shl
aad
mov
cld
push
sti
pop
iret
xor
or
adc
mov
sar
loop
test
mov
dec
push
sbb
xchg
mul
mov
in
rcl
and
push
in
mov
sti
neg
mov
jbe
adc
push
push
lock
ret
jecxz
jb
ins
adc
sbb
rcr
imul
adc
mov
clc
sbb
ret
add
sbb
push
or
jbe
ror
and
add
aas
mov
sbb
xor
xchg
popf
pop
fdiv
mov
add
add
jnp
sbb
idiv
and
and
jo
add
fdivr
cmps
jo
scas
jne
add
cs
pop
in
shl
sub
push
pusha
fdivp
cmp
xchg
jb
jmp
sbb
push
xor
out
mov
mov
cmps
in
daa
test
cdq
(bad)
(bad)
xchg
jnp
rcl
dec
sbb
push
cmps
mov
sbb
mov
pusha
sub
adc
lods
mov
adc
cdq
jo
cmp
mov
cmp
fs
pusha
clc
icebp
sti
mov
arpl
mov
idiv
fldcw
ins
xchg
mov
inc
adc
aam
sub
(bad)
fxch
dec
cmp
dec
mov
cmp
fwait
add
add
and
mov
hlt
jl
loopne
cmp
loopne
je
rcr
xor
jno
lea
(bad)
in
xchg
push
mov
(bad)
cmp
test
pop
ret
(bad)
(bad)
sahf
sbb
adc
cmc
rcl
(bad)
push
dec
push
or
sub
mov
and
or
clc
cdq
dec
mov
stos
ret
push
sub
stos
sub
pop
ins
gs
bound
sbb
sbb
test
mov
fisubr
test
cmps
cmps
inc
mov
mov
inc
sub
sub
(bad)
mov
fisubr
test
add
inc
jp
mov
pop
aam
mov
push
imul
mov
or
sub
clc
outs
pop
cwde
outs
mov
sar
xchg
lea
dec
fs
xchg
sbb
push
adc
and
repz
mov
jb
cmp
jns
sub
pop
mov
xor
sti
mov
pop
jb
aam
mov
cli
sbb
sub
mov
xlat
and
in
jmp
in
cmp
mov
adc
add
hlt
out
shr
dec
mov
inc
iret
int3
cmc
jnp
push
lods
fstp
or
rcl
call
mov
leave
jge
jge
push
jg
inc
xchg
dec
loopne
in
inc
cmp
outs
repz
pop
fcomp
sbb
mov
jmp
in
adc
push
lock
xor
adc
aam
inc
cmp
sbb
and
inc
repz
mov
fidivr
jne
jns
jae
(bad)
fisttp
(bad)
repz
loope
cli
push
dec
or
xor
push
call
push
mov
popaw
out
xlat
lods
dec
daa
pusha
aam
js
push
(bad)
cmp
stos
cwde
jnp
shl
xchg
inc
adc
adc
add
stos
jg
mov
jl
dec
cmp
and
sahf
sbb
xchg
adc
add
stos
adc
in
stos
(bad)
sub
test
pavgb
xchg
mov
lods
test
mov
inc
add
popa
rcl
xchg
ret
jmp
test
test
push
adc
jge
std
repz
repnz
jo
test
in
lea
mov
jge
jns
cmp
stos
test
out
les
or
push
gs
push
shr
mov
or
in
ret
mov
xor
cmp
sbb
int
ret
test
xchg
and
push
test
out
out
inc
sbb
cwde
les
test
or
clc
mov
sbb
push
xchg
daa
movs
push
sbb
dec
fmul
dec
mov
sbb
mov
fwait
jae
cmp
in
fisttp
and
popa
xor
mov
sahf
fisttp
es
sbb
mov
ret
test
xchg
pop
test
sbb
outs
inc
repz
shr
jge
data16
data16
aas
out
inc
add
push
dec
cmp
xor
xor
rcl
addr16
dec
enter
xchg
mov
(bad)
inc
movs
xchg
jmp
fisttp
clc
jge
push
enter
sbb
xchg
inc
imul
out
sub
outs
sub
pop
shr
arpl
and
and
fidiv
adc
imul
cmp
push
dec
mov
retf
(bad)
ds
icebp
mov
addr16
cmp
sbb
retf
icebp
dec
imul
sub
leave
dec
push
scas
jno
pop
repnz
push
dec
pop
in
inc
jmp
mov
dec
xchg
cwde
test
and
push
sub
fdiv
sbb
pop
xor
popf
push
jbe
dec
mov
push
test
jmp
add
xor
push
adc
cmps
xchg
dec
add
loope
push
repnz
cwde
lahf
cmps
or
mov
cmps
lds
pop
sti
adc
xchg
jp
test
shl
sbb
and
mov
lock
cmp
mov
(bad)
adc
imul
sub
cmp
ss
sub
sub
sub
jb
movs
gs
or
test
jge
movs
or
ret
cmc
pop
js
xchg
sbb
je
xchg
push
xchg
push
xor
push
pop
or
mov
xchg
aaa
pop
pop
mov
test
repz
lahf
ficomp
imul
mov
jge
lock
jl
push
mov
add
dec
movs
push
test
push
loopne
sub
jne
jecxz
pop
(bad)
out
sub
imul
lock
mov
xchg
cmp
ficomp
adc
out
popf
dec
(bad)
xor
push
test
retf
add
and
repnz
xor
jle
mov
mov
ret
sub
mov
sbb
add
sbb
repnz
outs
lods
mov
inc
aaa
sahf
jge
jb
sbb
mov
xor
push
mov
sub
inc
sub
xchg
test
push
and
adc
stc
add
hlt
scas
jne
mov
adc
push
mov
and
addr16
aad
scas
fmul
mov
and
dec
xor
adc
mov
in
ja
jb
jne
hlt
sbb
inc
fisub
sub
adc
add
stc
ret
push
xchg
mov
cwde
xchg
ja
pop
sbb
xchg
adc
inc
rol
in
icebp
xor
clc
inc
push
mov
adc
stos
shr
iret
imul
jae
jns
out
test
mov
imul
cld
test
adc
lahf
dec
nop
adc
xchg
mov
add
shl
xchg
mov
retf
les
sub
add
rol
ror
shr
sbb
in
mov
mov
sar
xchg
imul
movs
or
not
aad
stos
in
push
lea
push
sub
mov
(bad)
ss
push
ja
lds
ins
cmps
sbb
push
in
nop
jb
ins
mov
dec
(bad)
repz
dec
adc
sub
dec
mov
xchg
add
cmps
pop
mov
lods
rcr
push
pop
stos
fild
stos
lahf
push
or
inc
test
stos
lods
lods
stc
push
ret
stc
shl
push
rol
jo
(bad)
jmp
mov
(bad)
or
hlt
in
cmp
(bad)
fst
out
sub
scas
xchg
push
cmp
fmul
test
inc
or
and
movs
adc
popa
sbb
sbb
adc
and
enter
add
stos
int3
or
mov
std
ja
gs
ret
dec
pop
out
div
das
xchg
sbb
into
nop
mov
in
addr16
sub
dec
fild
popf
int
(bad)
loope
ror
add
psrlq
std
fwait
sbb
data16
aaa
inc
rol
and
fstp
out
mov
arpl
(bad)
push
add
fwait
mov
mov
imul
lds
fistp
cmc
cld
std
imul
cmp
test
leave
mov
xchg
fs
lods
mov
inc
xor
imul
fimul
push
retf
mov
jecxz
mov
fsubr
stos
dec
in
jge
add
push
(bad)
and
sbb
test
lds
xor
data16
fnsave
mov
or
mov
retf
sub
mov
add
and
popa
push
addr16
ss
adc
in
movs
or
mov
stos
lods
rcr
mov
xchg
jnp
dec
les
in
dec
outs
(bad)
fdiv
outs
in
enter
mov
loope
sub
movs
cmps
sbb
or
mov
fdiv
dec
mov
fild
ret
sbb
add
mov
or
sub
mov
mov
out
out
xchg
(bad)
sti
pop
cmp
jge
aaa
les
push
push
jmp
xchg
gs
pop
stos
in
dec
es
data16
sbb
(bad)
in
or
mov
jmp
mov
in
ret
imul
xor
loope
cs
lahf
cmp
mov
scas
das
out
pop
jne
adc
lods
imul
mov
xchg
out
dec
jbe
add
adc
push
lds
call
popf
imul
pop
mov
inc
sbb
or
push
jb
fdiv
jne
pushf
xor
or
jne
push
lock
sar
mov
inc
xchg
sbb
push
ja
aas
adc
and
fsubrp
pusha
enter
das
call
xchg
in
push
mov
xchg
or
ss
pop
xchg
cmp
jp
mov
mov
ficom
cmp
and
pop
inc
fidiv
inc
aam
cmp
repnz
xchg
hlt
sbb
lock
mov
mov
or
cmp
mov
(bad)
add
mov
sub
sbb
xor
std
sbb
inc
add
dec
lods
push
rcl
repz
push
mov
fwait
dec
pop
xlat
pop
push
jnp
add
jmp
push
(bad)
das
js
xor
jns
ret
push
jns
mov
inc
rcr
inc
lahf
mov
cs
ficomp
aam
push
out
cdq
xor
push
mov
and
das
retf
inc
mov
pop
cli
mov
and
popa
xchg
inc
leave
xchg
sub
fisttp
fisubr
cmp
pop
ror
fisttp
mov
jg
add
jne
stos
xor
fwait
mov
ror
mov
(bad)
in
cld
mov
pushf
push
cwde
mov
cmp
mov
inc
mov
adc
mov
xor
or
retf
or
sbb
sbb
test
xchg
and
adc
cdq
neg
mov
out
pop
inc
stc
xchg
and
ror
cmp
add
cmp
dec
js
inc
mov
pop
push
push
mov
mov
std
adc
fisubr
jb
cld
in
outs
jae
xor
retw
xacquire
xchg
stos
stos
and
mov
ins
push
stos
repz
call
test
inc
test
push
nop
stc
loope
adc
rol
stos
cli
xchg
xor
clc
cmp
retf
inc
hlt
sub
(bad)
mov
sub
imul
adc
es
rcl
sar
xor
inc
lock
xchg
bound
mov
and
cmps
mov
sub
into
mov
add
mov
jno
sahf
xchg
and
test
cdq
or
call
xor
or
sub
mov
dec
lods
mov
dec
out
sub
push
cmp
mov
push
or
push
push
cs
popa
jle
pop
mov
movs
add
xor
pop
push
loop
mov
js
rcl
mov
mov
int
fcom
jle
outs
(bad)
rcl
jo
dec
pop
cmovbe
test
mov
test
out
inc
inc
loope
fidiv
xor
cmp
scas
inc
inc
popa
call
xor
sub
movs
in
pop
aaa
or
nop
call
jne
ror
call
push
pusha
out
ficomp
aaa
retf
pop
pop
mov
(bad)
popa
inc
push
add
leave
sub
push
jle
je
inc
int3
jge
shl
cmps
add
ja
mov
push
mov
inc
or
stc
mov
out
push
retf
mov
push
js
mov
mov
adc
data16
pop
pop
paddw
mov
xchg
jne
ds
jne
mov
xchg
mov
out
xchg
in
pop
nop
or
cmps
out
xchg
hlt
mov
repz
es
push
test
jecxz
mov
(bad)
mov
mov
idiv
pop
mov
mov
mov
cwde
in
int3
aam
jns
xor
adc
pop
or
sub
dec
test
jge
mov
cs
mov
cmp
ja
jae
xchg
xor
jb
xchg
imul
mov
inc
imul
in
adc
cmps
pusha
cmc
sbb
sub
loopne
inc
xor
dec
clc
cdq
jp
or
ficomp
and
xchg
xchg
mov
(bad)
xchg
call
mov
cli
sub
push
std
mov
outs
inc
dec
fcomp
pop
xor
(bad)
fnsave
dec
and
ins
xor
inc
in
xchg
mov
push
xchg
sub
dec
not
push
ret
pop
enter
xor
icebp
cs
xor
mov
jae
push
xor
mov
rcl
mov
stos
aad
push
cmps
(bad)
xor
jo
test
outs
enter
adc
cmp
aam
js
inc
fsub
cmp
retf
nop
fdiv
call
es
std
mov
adc
leave
mov
xchg
out
ficom
addr16
jmp
sub
mov
lea
dec
movs
enter
ds
lods
movs
mov
push
mov
ret
into
jge
mov
xchg
dec
ret
popf
jmp
xor
retf
(bad)
aad
sahf
mov
push
add
pop
xchg
pop
and
pop
aas
test
loope
sbb
mov
add
fistp
loope
add
fld
outs
jecxz
sub
cmp
push
or
push
fwait
cdq
and
aam
jmp
push
mov
dec
xchg
int3
add
mov
push
(bad)
loopne
dec
jns
push
xchg
xor
jl
xor
push
das
adc
fdivr
mov
test
mov
sar
gs
jbe
xor
std
and
adc
pop
(bad)
cmp
mov
mov
stos
adc
jbe
stos
sub
test
scas
push
pop
cmp
imul
int
movs
push
mov
adc
add
(bad)
mov
shl
cmps
rcr
mov
push
push
test
jmp
mov
push
pop
(bad)
push
jle
push
icebp
and
cmp
inc
cmps
pop
xchg
mov
retf
ror
iret
call
sbb
data16
fld
dec
sbb
repnz
pushf
and
add
cli
xor
neg
jbe
ins
mov
xor
mov
pop
ss
cmps
mov
xlat
leave
(bad)
das
and
test
lods
mov
xor
dec
add
jmp
mov
cld
jb
aad
js
inc
jmp
mov
gs
ror
(bad)
pop
inc
adc
outs
ror
lea
mov
dec
into
(bad)
mov
sub
jb
inc
push
mov
daa
mov
inc
push
lahf
(bad)
xor
lods
sub
int3
xlat
or
sbb
in
fwait
mov
and
push
repz
mov
sbb
dec
sub
jmp
into
mov
cmp
test
stc
imul
xchg
lahf
int3
mov
and
popf
lds
xor
sbb
repnz
xchg
sub
adc
fadd
fstp
jl
inc
sbb
cmc
jae
add
les
clc
sub
and
xor
stos
shl
gs
div
mov
pop
jmp
inc
cwde
jb
mov
push
lock
inc
sti
jnp
repnz
scas
loope
sbb
push
xor
fs
movs
je
outs
das
icebp
mov
mov
jae
inc
mov
test
cwde
mov
imul
and
dec
jo
clc
sbb
dec
out
push
mov
fsubr
mov
outs
rol
mov
fld
lea
sbb
cmp
and
inc
scas
mov
imul
cmps
xor
loop
adc
sbb
jle
push
push
xor
xchg
ret
cld
mov
pop
mov
std
cdq
pop
inc
sti
mov
imul
leave
dec
das
mov
mov
popa
jo
inc
lea
xchg
std
(bad)
mov
mov
push
sbb
dec
pop
adc
xchg
add
adc
stos
mov
cmps
sbb
push
mov
pop
push
xor
cmp
mul
or
jae
push
jno
xor
(bad)
push
xchg
push
stos
das
dec
std
icebp
movs
push
shl
cmp
adc
or
shl
push
and
mov
leave
jecxz
mov
data16
xchg
mov
jnp
pop
dec
repz
add
and
push
adc
loop
repnz
push
xchg
icebp
ds
or
ins
jg
adc
das
iret
jp
adc
and
inc
bound
ja
mov
sbb
pop
pop
(bad)
sbb
sbb
aas
mov
cld
int
test
daa
sub
fstp
and
xchg
(bad)
sbb
jecxz
mov
sbb
sti
cmp
fstp
push
cwde
cmps
sti
mov
in
pop
loop
nop
sub
pop
pop
mov
cmp
outs
aam
and
pusha
inc
push
out
xchg
dec
xchg
fidivr
or
push
dec
xor
sbb
mov
and
ret
add
and
clc
mov
sub
loope
mov
jbe
cmps
and
sbb
mov
and
jmp
inc
cmps
xchg
out
mov
fdivr
ins
nop
inc
cdq
into
xor
icebp
jae
push
rcr
mov
data16
movs
mov
ins
inc
mov
inc
stos
mov
adc
leave
mov
je
pop
cs
mov
jmp
mov
dec
stos
jnp
jne
xchg
dec
loop
cmp
xchg
mov
mov
aaa
push
cmp
les
dec
push
(bad)
scas
ss
push
pop
mov
jp
cld
test
cdq
stos
mov
(bad)
hlt
imul
pop
cmc
push
ins
cli
push
sub
jge
imul
add
xchg
in
in
mov
movs
pop
clc
jle
popa
fcmovu
jle
gs
movs
xchg
(bad)
ror
push
dec
cmc
xor
xchg
adc
dec
scas
jp
test
cmp
jns
ret
test
jmp
cld
jecxz
repnz
imul
retf
fs
cdq
ss
mov
add
xchg
sbb
or
xlat
jb
cmp
pop
jne
sbb
push
lea
jecxz
pop
lock
xchg
sub
add
test
fcom
rcr
mov
inc
dec
dec
fdiv
call
cmc
test
pop
imul
sub
sub
aaa
sbb
push
(bad)
jne
mov
(bad)
call
int3
xor
js
(bad)
fnstenv
dec
pop
fadd
movs
aas
mov
bound
inc
push
push
sbb
(bad)
sub
rcl
jns
add
lods
out
mov
lods
push
outs
pop
lock
repz
mov
sub
cmp
cmp
push
cmp
iret
adc
mov
ffreep
mov
push
daa
add
mov
adc
cmp
aas
sub
push
fisubr
jge
lock
push
dec
xor
xchg
adc
mov
sar
adc
out
outs
jmp
sbb
push
and
in
outs
cmp
sti
(bad)
pop
data16
mov
inc
add
es
inc
adc
stc
inc
jg
and
pop
mov
hlt
cmp
adc
pop
enter
or
inc
jp
and
sub
or
xor
sub
xchg
cmps
sub
push
nop
add
push
mov
out
(bad)
cmp
mov
mov
(bad)
(bad)
xchg
push
push
adc
div
xor
push
je
test
jo
cmp
sbb
dec
xchg
push
pop
cmp
xlat
imul
inc
cmps
push
cmp
inc
adc
fstp
test
shl
pop
mov
xor
jae
sub
mov
in
out
fsubrp
inc
ret
or
shl
ret
sub
xchg
out
push
retf
aaa
mov
xchg
ror
sti
mul
sbb
lock
mov
loope
jmp
jns
xchg
(bad)
jmp
loop
push
inc
jo
pop
cmp
jnp
adc
test
je
arpl
shl
lods
ds
sbb
xor
leave
or
pmullw
addr16
aad
scas
outs
jnp
adc
dec
rcl
dec
cld
adc
xchg
aad
inc
push
inc
out
sub
sbb
ja
inc
in
sub
in
call
add
mov
neg
xchg
pop
aas
mov
stc
mov
jo
stos
arpl
push
jg
mov
aas
stos
mov
in
pop
inc
loopne
or
and
jle
loop
pop
out
in
(bad)
mov
(bad)
sub
(bad)
movs
mov
cmps
aad
mov
pop
lods
add
xor
or
inc
mov
ret
call
movs
js
sub
lods
inc
or
idiv
ja
sub
mov
dec
mov
mov
int3
sahf
mov
dec
and
test
mov
adc
ret
in
sub
add
fwait
clc
in
inc
sub
pop
adc
and
movs
mov
jg
movs
xchg
jae
arpl
pusha
pop
mov
call
mov
push
out
fadd
xchg
mov
push
gs
cmp
mov
popa
or
ret
add
clc
and
call
test
ins
mov
fucom
cmp
mov
mov
test
not
dec
ins
rcl
in
and
repnz
push
pop
mov
xor
mov
mov
and
adc
loopne
cmp
adc
dec
mov
adc
in
repnz
jmp
dec
ret
(bad)
pop
aam
or
fsubp
mov
sub
or
or
push
adc
or
cdq
repz
loope
inc
add
inc
rol
imul
push
call
or
cmp
mov
shl
fistp
or
out
cmps
ins
adc
add
pop
leave
out
adc
arpl
inc
lds
xor
mov
mov
mov
sub
push
ret
adc
jge
cdq
cmp
outs
dec
mov
push
mov
shl
pop
and
and
test
jae
(bad)
popa
adc
mov
pop
adc
sub
adc
test
mov
bound
cld
and
jns
rol
jbe
fisub
sahf
push
mov
(bad)
inc
popa
pushf
rol
or
add
sub
aaa
push
jnp
add
stos
rcl
pushf
adc
xchg
cdq
lds
and
push
imul
retf
(bad)
outs
test
inc
mov
sub
imul
popf
cmp
push
jno
dec
clc
mov
mov
fadd
es
mov
outs
idiv
popa
addr16
dec
sub
stos
and
xchg
jne
pop
or
(bad)
xor
pop
lock
sbb
int
int3
jge
(bad)
imul
dec
lods
and
iret
push
(bad)
ficomp
push
xchg
sub
imul
into
adc
mov
out
pop
call
gs
or
add
push
ret
(bad)
xor
push
fwait
sahf
add
test
jge
mov
fld
jnp
and
outs
and
sbb
mov
pmaxub
dec
adc
int
xlat
push
(bad)
cmps
inc
int3
dec
and
loope
push
sbb
pop
mov
cmp
test
pop
scas
pop
ins
pop
mov
xchg
pop
xchg
inc
cwde
mov
(bad)
ds
mov
bound
popf
enter
pop
xchg
dec
adc
push
movs
es
adc
add
aam
push
mov
dec
outs
int
popa
out
mov
mov
cmps
push
(bad)
dec
push
sbb
mov
out
xchg
adc
pop
add
dec
fsubr
mov
sbb
pop
bound
cdq
mov
adc
sbb
stc
add
mov
imul
loope
pop
lds
or
push
dec
rol
test
fcmovb
(bad)
fstp
mov
mov
pushf
(bad)
sub
arpl
and
xlat
xlat
stc
mov
dec
stos
fcomp
inc
pop
fisub
adc
push
jle
xor
push
std
loopne
sub
in
mov
xchg
sub
add
mov
pop
jge
jnp
lea
add
(bad)
movs
in
cmp
(bad)
rol
addr16
sbb
dec
jo
clc
cdq
add
(bad)
out
xor
int
cmc
sub
iret
inc
cmp
xchg
jge
or
popa
call
inc
jecxz
ins
std
xlat
or
call
push
call
int
movs
mov
mov
loope
push
mov
sbb
int3
push
push
leave
(bad)
in
or
or
imul
fstp
pminub
mov
outs
mov
xor
cs
call
adc
fs
lds
test
aaa
xor
cld
adc
cld
xor
jb
ins
dec
and
sub
or
cld
cmps
scas
push
xchg
aad
push
nop
sub
or
pop
loope
jp
mov
not
pop
dec
clc
iret
or
or
or
clc
bound
fstp
mov
fmul
cmps
or
test
pushf
xor
cmp
fmul
std
sub
sar
cmp
xchg
cmp
(bad)
mov
xor
fistp
dec
push
loope
sbb
sbb
and
fs
jmp
les
cmp
dec
pop
dec
daa
in
mov
das
pop
jle
or
scas
pop
dec
mov
pop
sahf
mov
mov
aad
clc
int3
sbb
test
fidivr
or
cmp
adc
cwde
call
add
jle
test
xchg
push
fbstp
xchg
fstp
lds
pop
cwde
pop
out
into
mov
(bad)
iret
pop
xchg
adc
inc
hlt
and
aad
dec
push
lods
jns
div
pop
cmp
cmp
push
jo
sub
retf
push
xor
jle
mov
add
(bad)
cmc
retf
adc
jns
test
jae
es
sbb
icebp
mov
inc
popa
jg
cmps
rcl
mov
ret
sti
pop
call
mov
call
jnp
add
dec
inc
ret
dec
add
jg
xlat
bound
and
ds
adc
pop
or
mov
dec
sbb
lods
pop
(bad)
push
and
mov
mov
sbb
xchg
pop
xchg
mov
fdivr
stos
iret
mov
je
fidivr
sub
in
mov
mov
test
addr16
movs
sahf
ret
inc
test
jmp
mov
stc
shl
and
test
push
fcmovb
xchg
(bad)
mov
leave
test
mov
mov
add
and
xor
and
jns
iret
xor
jmp
sbb
(bad)
mov
mov
inc
stc
test
push
loope
cwde
xchg
cmps
and
mov
jns
and
jae
and
scas
ins
xchg
push
dec
cwde
and
sbb
adc
fld
jns
mov
xchg
cmp
pop
jmp
call
div
sub
pop
cld
mov
xchg
mov
shr
mov
pop
dec
mov
loope
mov
mov
adc
and
jno
test
in
or
push
fmul
cmp
imul
add
push
out
ins
mov
adc
mov
out
out
or
lock
pop
aad
push
mov
ds
mov
sub
mov
mov
jne
mov
out
jnp
xor
icebp
outs
jns
(bad)
push
jb
ins
add
retf
rcl
or
std
loope
mov
sahf
je
cmp
xchg
int3
(bad)
push
and
popa
call
add
pop
sub
ret
mov
clc
and
(bad)
cs
adc
fadd
int3
scas
fucomi
lea
cmps
dec
adc
sbb
mov
outs
sbb
test
cmp
gs
and
inc
in
and
push
in
pop
ficom
dec
mov
adc
mov
into
cdq
je
jno
push
push
sbb
push
inc
mov
push
sub
sub
pop
ret
sub
push
movs
dec
fadd
xor
ficomp
dec
push
dec
sub
inc
nop
dec
(bad)
fst
dec
sub
aad
mov
clc
cmc
mov
in
lods
je
cdq
sub
lods
cmp
lock
and
sahf
push
sub
sahf
bswap
fst
pop
dec
icebp
ret
add
pop
retf
imul
aaa
out
or
inc
add
outs
fdivr
gs
inc
lock
into
jo
mov
dec
adc
xchg
jle
(bad)
mov
jl
push
adc
jmp
inc
dec
xchg
hlt
ficomp
test
std
test
and
loop
out
add
xchg
adc
ds
jbe
(bad)
xchg
data16
aas
pushf
sahf
and
adc
aam
pop
xchg
jnp
inc
pusha
xchg
jg
dec
sub
(bad)
push
add
sbb
leave
arpl
pushf
mov
push
pusha
pusha
lods
in
cdq
push
sub
cmp
mov
es
fadd
jmp
sbb
jecxz
shr
in
or
inc
xlat
xchg
sbb
test
mov
fmul
movs
scas
dec
rcr
dec
push
ins
inc
mov
stos
pop
mov
not
mov
aam
mov
xor
pop
das
push
or
pop
cmp
push
push
pop
sbb
or
lock
in
add
mov
fidivr
or
shl
xlat
int
stos
shr
(bad)
neg
stos
fidiv
enter
or
push
mov
or
jns
repnz
mov
leave
ins
pop
mov
pop
push
cdq
or
xor
inc
adc
cmps
pop
test
add
mov
dec
add
mov
ret
lea
aaa
out
push
jns
movs
pop
cwde
sbb
(bad)
outs
jmp
push
mov
mov
rcl
inc
loop
rcr
ja
sub
jge
pop
inc
mov
xchg
ins
repz
ins
mov
xor
adc
xchg
nop
sub
mov
inc
stos
add
xor
ret
xor
xchg
(bad)
xchg
int3
push
inc
xchg
jge
inc
and
mov
inc
sahf
pop
mov
stos
adc
add
and
jge
cmc
cmp
test
addr16
push
fsub
cmp
(bad)
jo
retf
pusha
sar
push
mov
repnz
mov
mov
pushf
mov
xor
rcl
rcl
ins
mov
out
addr16
aaa
sub
lods
out
sti
mov
hlt
out
xor
push
ror
mov
dec
xchg
add
nop
jle
mov
lahf
hlt
jg
cmps
adc
mov
pop
mov
adc
stos
jnp
imul
jge
cmps
xchg
mov
inc
inc
ins
xchg
jb
mov
inc
icebp
ret
fisttp
pushf
dec
push
sbb
dec
push
repz
cwde
inc
(bad)
pop
mov
mov
push
xchg
int
mov
mov
fsub
ja
jno
cdq
pop
mov
cwde
xchg
(bad)
xchg
outs
xchg
jl
dec
data16
out
push
out
xchg
push
add
inc
push
shr
loop
shl
mov
ret
cmp
jl
ds
test
stos
adc
sar
or
sti
outs
mov
mov
js
(bad)
mov
(bad)
(bad)
lods
mov
out
(bad)
add
or
push
daa
mov
xor
in
mov
xchg
jne
dec
pop
call
inc
ret
xchg
jg
mov
mov
push
xchg
push
push
mov
lahf
mov
inc
popf
inc
cmps
mov
jmp
imul
xor
daa
xchg
sti
adc
mov
sbb
push
cmps
or
xchg
cmp
jo
adc
xchg
mov
fxch
adc
fsub
mov
icebp
stc
fs
mul
pushf
jge
xchg
pop
lods
sar
cmps
cwde
add
test
mov
and
inc
imul
gs
inc
mov
adc
es
fsub
mov
mov
adc
pop
iret
add
push
fwait
xrelease
jp
or
pop
or
mov
lea
pop
mov
das
leave
popa
mov
inc
xor
lds
call
lods
cmp
jns
sahf
pop
addr16
(bad)
fcom
clc
pop
cmp
cs
gs
xor
jnp
shr
lds
add
cmp
mov
iret
jle
popa
jno
sbb
pop
ins
aas
mov
inc
mov
pop
push
cmc
mov
pop
cwde
inc
ret
mov
fdivr
push
out
mov
fld
pop
(bad)
mov
aas
add
inc
movzx
lea
xchg
and
icebp
fdivr
or
shl
pop
dec
xchg
(bad)
and
cmp
fild
xchg
ds
stos
jo
or
popw
jmp
sbb
mov
mov
imul
push
or
das
hlt
inc
imul
jo
lods
xor
mov
cli
dec
jne
ficomp
das
dec
jns
dec
test
xor
xchg
pop
jmp
dec
in
pushf
cmp
cli
adc
jmp
pop
cmps
push
(bad)
cld
adc
out
repnz
push
gs
loop
repz
imul
in
ret
mov
ja
iret
mov
push
dec
push
jbe
adc
popf
pcmpgtw
xor
ds
add
ja
xor
daa
xchg
(bad)
retf
cld
pop
pop
cld
cs
mov
push
mov
icebp
dec
inc
add
enter
jno
cmc
inc
lock
jle
or
mov
in
and
pop
popa
addr16
je
cdq
adc
dec
jns
into
fcomp
or
dec
and
addr16
adc
pusha
sbb
icebp
cmc
(bad)
cmp
mov
fcmovnbe
gs
pop
xchg
in
sub
or
sbb
out
pushf
cld
repnz
mov
adc
test
fs
sub
cmp
retf
pop
retf
cmp
cmp
sbb
imul
adc
stc
xor
xchg
hlt
aaa
push
fiadd
xchg
dec
and
movs
jmp
mov
adc
popf
in
xchg
pop
out
add
ret
std
out
sahf
fst
sbb
adc
jno
jo
les
stos
(bad)
push
sub
dec
cmp
cmp
adc
(bad)
cmc
push
loopne
push
mov
test
mov
push
pop
sub
cmp
out
cmp
add
cmp
jmp
loope
pop
movs
fisttp
jg
inc
repz
adc
mov
in
aam
call
xchg
out
cmp
mov
fsubr
jmp
ja
xchg
mov
xchg
mov
xchg
and
mov
fistp
pop
or
retf
scas
sbb
jnp
cli
jl
dec
shl
cmp
xchg
add
pop
inc
cmp
popf
aaa
test
cmp
dec
int
adc
mov
inc
mov
sub
out
mov
sahf
sbb
sbb
push
xor
sub
fld
es
aas
test
add
and
sahf
mov
shr
add
leave
push
shl
shl
mov
enter
mov
and
xchg
imul
cs
rol
fisub
mov
shl
adc
xor
int
mov
cmp
adc
sub
mov
dec
fcomp
in
ins
xchg
imul
xchg
js
add
mov
in
xor
loopne
sub
xor
or
sbb
or
dec
mov
xchg
ret
xchg
push
outs
call
mov
in
leave
cmps
dec
inc
mov
pop
cmp
js
sub
mov
and
dec
fsubr
push
bound
jne
icebp
or
pop
jmp
aas
stos
adc
and
or
movs
aam
mov
push
cs
test
jmp
out
mov
popa
sub
adc
neg
adc
xchg
or
and
popf
or
adc
push
icebp
jl
mov
sub
fist
lds
call
push
repz
mov
inc
leave
aam
or
bound
jl
mov
sub
movs
movs
loope
fdivr
mov
adc
retf
pop
stos
shl
and
lahf
inc
push
sub
xor
dec
shr
clc
ins
aaa
or
das
retf
retf
imul
jo
cmps
ins
jmp
mov
sti
dec
imul
orps
mov
nop
cmp
xchg
push
mov
call
loopne
pop
cdq
inc
xchg
sbb
sbb
sub
test
sub
mov
dec
scas
gs
cmps
mov
in
ja
xlat
cdq
mov
mul
add
add
adc
cwde
mov
xchg
bound
in
and
(bad)
push
push
cmp
adc
call
pop
xor
sahf
or
dec
ret
mov
and
or
jb
aad
add
or
out
pop
push
lds
pop
mov
shl
mov
dec
xchg
addr16
fs
retf
adc
inc
jae
jle
mov
pop
inc
rol
aaa
je
jo
pop
jecxz
mov
icebp
js
loop
cmp
dec
sbb
clc
das
mov
addr16
ficom
test
mov
movs
mov
pop
data16
movs
xor
test
adc
jne
push
jo
cmovnp
dec
sbb
pop
loopne
push
pop
loopne
loop
mov
sti
test
dec
into
add
enter
jmp
in
inc
out
adc
sbb
dec
cmc
retf
fdiv
mov
xchg
sbb
mov
lahf
jnp
loop
and
mov
mov
cs
sub
sti
in
in
fstp
jg
push
cmc
xchg
mov
lea
jg
lahf
neg
outs
jne
or
cmp
inc
(bad)
jns
loope
jns
jne
jle
push
outs
jne
mov
fist
gs
mov
leave
(bad)
ficomp
or
xchg
jle
mov
pop
xor
mov
arpl
mov
xchg
add
out
or
cli
not
push
mov
ss
sbb
pop
cmp
pop
repz
(bad)
gs
pop
(bad)
daa
and
xor
xor
in
ins
sub
cmp
inc
cmps
call
or
pop
in
in
out
xor
cmc
shl
cmp
jmp
push
es
pop
fadd
add
or
addr16
aad
push
(bad)
add
fdiv
jno
adc
test
inc
xor
sub
not
jl
mov
orps
dec
jns
addr16
(bad)
xor
jle
push
aam
ret
push
icebp
popa
pusha
pushf
fld
cmp
pop
adc
test
mov
add
repnz
mov
stos
rcl
xchg
adc
jae
outs
cmps
sub
add
xchg
sahf
mov
fcmove
lods
push
sbb
shl
fs
adc
(bad)
and
into
xor
mov
sub
into
ror
sti
repnz
(bad)
fbstp
xlat
dec
sbb
fisub
sahf
aaa
jo
jns
mov
(bad)
cld
cmps
adc
cs
pop
aaa
ja
adc
ss
cmp
sar
or
es
je
neg
and
sub
xchg
inc
mov
pop
(bad)
or
jno
adc
jle
cs
dec
sub
mov
sahf
adc
jae
sti
neg
adc
stos
shl
(bad)
mov
imul
xchg
add
lods
stos
push
imul
mov
pusha
ds
not
icebp
iret
hlt
mov
push
out
or
arpl
pop
out
jmp
or
movs
in
fnstcw
jno
loop
outs
mov
ss
mov
movs
mov
inc
sbb
cmps
dec
or
fcomp
into
pop
xchg
add
out
mov
push
cli
je
das
mov
fadd
pop
dec
dec
xlat
pop
hlt
js
pop
push
dec
jp
repnz
aad
enter
jmp
dec
pop
jecxz
pop
push
jb
xchg
mov
fwait
loop
xlat
retf
dec
test
xchg
sar
dec
fnstsw
fidivr
adc
rcr
rcr
mov
out
lods
out
les
dec
aas
jne
mov
iret
cdq
hlt
in
icebp
sbb
mov
enter
mov
and
lods
mov
mov
mov
sub
pop
arpl
das
mov
or
fisubr
xor
add
mov
imul
outs
arpl
iret
ins
outs
loopne
popf
popa
sar
scas
into
fisttp
mov
pop
cld
fdivr
sub
ins
ret
mov
mov
repnz
cmp
leave
xchg
cmps
fnstcw
call
movs
pusha
sub
shl
cs
out
adc
ds
lods
xchg
inc
and
pop
stos
scas
push
rol
pushf
retf
dec
dec
jp
test
mov
mov
push
call
test
lods
xlat
lea
std
imul
jl
push
mov
lock
movs
dec
inc
push
or
lock
and
clc
mov
adc
and
hlt
or
outs
int
inc
lods
pop
jp
xor
jle
(bad)
sbb
pop
xchg
clc
sbb
dec
inc
mov
or
mov
(bad)
fstp
mov
pop
jb
loopne
nop
leave
adc
or
cwde
xor
xchg
arpl
push
xor
mov
clc
adc
jno
mov
pop
test
mov
pop
push
mov
sbb
and
mov
xor
test
pop
in
sbb
loopne
div
cld
out
mov
jl
xchg
push
xor
push
cmp
enter
fwait
stos
push
ds
add
ret
retf
xchg
mov
int
ins
out
and
test
sti
gs
cdq
jp
cmps
in
fistp
out
adc
dec
inc
or
mov
(bad)
fstp
rcl
jl
cmp
pop
xor
int
mov
mov
scas
idiv
retf
push
adc
pop
mov
jp
or
fwait
icebp
push
dec
sbb
mov
jne
mov
ret
std
xchg
test
sub
add
mov
jmp
push
test
sub
scas
out
shl
jne
popa
loope
in
jmp
imul
cmp
sub
ds
mov
fisub
jge
push
and
stos
lahf
push
inc
cdq
xchg
cmc
aas
js
pop
shr
adc
mul
xor
mov
stos
repnz
test
ficom
sti
jnp
pop
cs
xchg
add
mov
xor
out
push
fld
or
out
fbld
add
sub
pop
cmp
jmp
ror
leave
je
addr16
test
pusha
loopne
das
stos
dec
inc
jno
scas
std
jo
xchg
repz
lods
sbb
mov
mov
push
lock
repnz
adc
aam
push
jae
(bad)
fbstp
cmp
sti
and
mov
les
pop
pop
mov
cmp
ss
cmc
dec
jno
sahf
adc
and
xchg
(bad)
mov
int3
mov
aam
xor
or
repz
adc
(bad)
mov
ret
aad
xchg
pop
mov
mov
xchg
sbb
js
scas
fs
aad
sub
inc
inc
scas
mov
mov
pop
mov
out
imul
pop
adc
pop
(bad)
mov
lea
mov
dec
or
sbb
mov
dec
repz
jecxz
xor
push
into
test
push
add
xor
and
and
ror
das
cmp
jno
jb
inc
js
or
xor
data16
das
mov
jle
push
and
inc
stos
nop
xor
call
pop
or
dec
or
aad
pop
movs
fwait
pop
dec
clc
cdq
lahf
adc
add
into
adc
inc
aas
retf
dec
ret
xor
popf
int
jae
in
repnz
add
fbld
sbb
pop
xchg
inc
icebp
lds
arpl
(bad)
sbb
inc
jb
sub
push
je
jbe
push
mov
mov
aaa
imul
dec
mov
aaa
aas
movs
ret
push
adc
scas
inc
(bad)
and
ins
int3
cmp
mov
stos
mov
retf
popf
or
sbb
jg
das
inc
xchg
add
pop
fwait
mov
pop
(bad)
jo
not
fxch
xchg
loopne
pop
push
add
hlt
sbb
mov
inc
push
outs
in
add
and
(bad)
cld
add
pop
addr16
push
pop
push
fidiv
mov
lods
sub
lea
stos
jecxz
adc
jle
dec
into
stc
add
jle
jne
std
sub
js
out
retf
add
mov
(bad)
jmp
iret
movs
or
fiadd
push
loopne
sbb
mov
jl
adc
outs
cmp
iret
clc
das
sbb
stc
xchg
je
xchg
cmp
shr
mov
arpl
cwde
rcl
sti
lods
loopne
and
mov
adc
loopne
inc
jmp
xchg
mov
xor
sbb
xor
or
push
test
sbb
xchg
int3
xchg
cdq
mov
pop
aad
stc
mov
xchg
xchg
mov
jecxz
xor
mov
(bad)
pop
call
mov
sub
je
and
mov
xchg
mov
jb
adc
push
inc
test
cmps
adc
les
pop
pop
or
mov
sub
jb
jne
test
fisubr
xchg
mov
mov
enter
sbb
mov
pop
adc
xchg
in
cmps
adc
xor
add
cdq
loop
add
jbe
push
xchg
(bad)
mov
adc
and
xlat
xchg
daa
test
sub
adc
in
jg
jle
stos
out
adc
mov
fwait
sbb
out
sub
jp
inc
hlt
retf
push
aaa
xchg
cmp
xchg
loope
inc
add
addr16
inc
je
inc
push
lods
fwait
lea
cmp
xchg
or
jo
pop
pushf
jno
mov
cdq
lock
loop
mov
retf
cs
xor
cmp
mov
pop
cs
movs
push
clc
rcl
movs
js
iret
js
std
mov
and
or
push
mov
(bad)
retf
test
jecxz
cld
sub
dec
mov
pop
(bad)
push
es
js
les
pop
jmp
enter
int3
cmp
mov
mov
ins
xchg
jbe
bound
xlat
stos
xchg
icebp
and
inc
ror
adc
mov
or
data16
jns
(bad)
sub
ret
dec
mov
inc
jmp
rcl
ins
dec
std
fst
lock
xchg
xchg
mov
jne
inc
push
cmp
jge
iret
cs
sbb
sahf
dec
pop
sbb
out
jmp
cmp
mov
fcom
sub
(bad)
repz
cdq
inc
mov
xor
push
dec
ret
mov
pop
aaa
leave
and
rcr
adc
mov
push
inc
dec
push
jmp
jmp
loop
push
repz
std
mov
xor
mov
pop
pop
loope
pop
mov
push
ja
arpl
jp
iret
bound
sub
out
or
xchg
loope
jae
lar
push
ins
inc
gs
(bad)
test
mov
jns
cmp
add
or
ins
clc
and
push
cmps
in
(bad)
jns
ja
popa
cmp
lahf
or
shl
dec
mov
push
out
(bad)
pop
sub
(bad)
pop
adc
sbb
or
repnz
shl
imul
jae
xor
dec
sbb
sub
add
push
sbb
pusha
jo
xor
jnp
sbb
les
out
ds
jmp
cmp
stos
in
pop
add
fst
pop
(bad)
in
xchg
shl
scas
movs
stos
xchg
or
mov
push
mov
cld
scas
jg
mov
arpl
ja
repnz
sub
xchg
gs
mov
(bad)
stos
mov
call
ins
xor
and
ja
cmc
loopne
pop
imul
jle
in
test
scas
rcr
repnz
in
pushf
popa
sti
mov
xor
and
fisub
fwait
rcr
mov
out
(bad)
cmc
imul
adc
mov
ins
movs
or
outs
adc
inc
xchg
jl
popf
rcr
stos
pop
push
mov
xchg
scas
jle
mov
rcr
sbb
daa
sti
mov
icebp
gs
and
arpl
cld
mov
imul
bound
in
or
pop
out
and
adc
test
fsubr
lea
sub
(bad)
push
xor
fbld
dec
jb
(bad)
fisttp
and
into
popa
mov
or
sbb
inc
mov
out
pop
call
movs
aas
pushf
icebp
ins
push
sbb
adc
int3
inc
mov
idiv
sub
fwait
jg
enter
shl
pop
retf
popf
sub
icebp
jbe
adc
hlt
mov
call
push
scas
dec
lea
xchg
(bad)
jmp
fdivr
cmp
jl
out
in
pop
call
pop
push
adc
xchg
push
or
retf
fistp
jbe
call
and
cmp
gs
inc
and
and
pop
sub
mov
popf
xchg
jne
mov
dec
cld
sub
mov
icebp
mov
icebp
sub
mov
icebp
mov
jo
fcomi
dec
test
popf
push
and
scas
dec
retf
aam
ds
iret
cmp
retf
cmc
ins
adc
addr16
daa
pop
sti
dec
add
fist
mov
and
dec
mov
or
scas
adc
fs
mov
push
pop
clc
adc
je
pop
mov
imul
aad
add
mov
fcmovnu
jmp
and
loope
fisubr
das
ret
xor
loope
fptan
sbb
retf
pop
xor
repz
int
adc
data16
inc
scas
mov
test
cmc
pop
lds
xlat
arpl
outs
ficom
out
pop
fldenv
div
jo
dec
inc
sbb
dec
lahf
stc
lods
jo
dec
dec
push
or
bound
popa
or
dec
in
pop
in
es
out
mov
jbe
pushf
fmul
adc
sbb
push
jo
lock
in
and
retf
loope
cmp
jb
fcmovnbe
or
fst
jmp
sub
addr16
sti
scas
rol
sbb
xchg
cmp
jmp
add
or
test
hlt
adc
mov
cmps
mov
test
arpl
mov
shl
inc
xchg
mov
leave
fcomip
mov
movs
xchg
iret
fs
jno
jle
sub
cld
jne
aaa
mov
repz
mov
cmp
push
and
sahf
mov
cmp
cmp
xchg
adc
and
and
cmp
ins
push
ret
fcomp
call
or
out
lahf
scas
enter
ret
mov
add
popa
pop
xlat
jbe
sar
cwde
movs
mov
xchg
xchg
pop
out
jmp
lahf
adc
mov
xor
out
retf
les
jecxz
enter
push
sub
cmp
daa
jle
add
push
push
xor
cli
or
out
ss
mov
inc
cmc
mov
leave
dec
cmps
shr
sub
(bad)
daa
addr16
retf
loopne
dec
shr
lahf
xor
pop
es
push
ins
cmps
adc
ret
cwde
pop
and
test
add
call
fdiv
xor
jbe
adc
(bad)
retf
mov
(bad)
push
push
ja
cs
cmovne
loopne
(bad)
fdiv
xor
push
adc
sbb
jo
xchg
xchg
hlt
sbb
push
sbb
mov
inc
inc
gs
and
das
dec
aam
sub
aas
jp
adc
(bad)
jmp
and
test
in
test
and
shl
mov
sub
jb
push
aam
push
fstp
aaa
stc
sub
jmp
xlat
aaa
jmp
adc
int
cs
jmp
pop
add
adc
and
push
mov
xchg
dec
fistp
(bad)
(bad)
lods
inc
shl
lahf
clc
(bad)
push
xor
mov
iret
test
ds
push
cmp
call
jmp
stos
cmp
outs
mov
cmova
or
pushf
push
movs
mov
(bad)
jg
xchg
arpl
or
jbe
(bad)
int3
or
xchg
xchg
xor
push
mov
add
mov
mov
in
push
cmp
push
adc
(bad)
cmc
jmp
xor
xor
add
in
mov
test
add
mov
mov
ds
jmp
mov
imul
cmp
cmp
pusha
adc
fcomp
shl
cmp
aad
mov
adc
sub
pop
xchg
out
xchg
jmp
aam
mov
cmps
xor
ja
xchg
(bad)
in
xchg
push
call
mov
jp
test
cmps
test
int
data16
dec
imul
cmp
inc
inc
fbstp
aad
into
add
rcl
out
aad
mov
fst
add
or
into
pop
cmps
pop
sbb
fstp
pop
pop
mov
inc
rcr
cmp
dec
cli
mov
and
ins
mov
cmp
cmp
sub
fisttp
es
adc
sub
es
aam
repnz
cmp
jno
pop
mov
xchg
retf
pop
fcmovne
adc
xchg
in
cmp
xor
cdq
pusha
cmp
test
cmp
sub
mov
addr16
cmp
inc
sbb
imul
sbb
cmp
xor
cmp
mov
inc
daa
mov
mov
pop
or
jns
xor
mov
add
mov
add
jle
add
mov
mov
pop
int3
jo
pop
or
add
mov
inc
mov
cmc
push
inc
lds
aas
ss
movs
into
fistp
ret
pop
shl
push
mov
cmp
push
sbb
push
or
call
adc
dec
pop
mov
add
push
fdiv
jle
shl
mov
inc
push
mov
xor
int
test
or
pop
and
mov
mov
jmp
leave
mov
inc
setle
movs
retf
aaa
sub
test
hlt
push
daa
and
adc
push
mov
stos
jmp
fucomi
loop
or
lahf
mov
mov
xchg
repnz
mov
dec
cmc
pop
push
mov
sub
dec
jb
jae
loop
cdq
add
push
mov
call
cmp
inc
add
dec
inc
daa
adc
push
mov
sbb
imul
jne
(bad)
sub
adc
fcompp
cmp
mov
adc
or
xchg
sbb
sbb
sbb
mov
pop
test
rcl
es
stos
je
rcr
xor
xchg
add
(bad)
call
ds
shl
xor
sub
aas
popa
inc
les
das
das
cld
inc
adc
dec
pusha
(bad)
movs
imul
xor
or
mov
sub
dec
jb
gs
imul
jecxz
push
pop
out
sar
adc
fsub
add
dec
xor
pop
lea
inc
jae
sti
cli
and
sub
lock
aad
inc
mov
inc
adc
pop
in
jmp
cdq
loopne
repz
fisttp
jmp
or
xor
addr16
xchg
and
sbb
(bad)
cmp
daa
jmp
popa
lea
jle
js
stos
icebp
lock
stos
das
dec
and
dec
adc
scas
daa
and
mov
outs
jmp
pop
add
mov
popa
and
dec
mov
popf
cli
jl
push
hlt
cmp
ss
pop
inc
icebp
mov
ficom
sub
out
fmulp
mov
in
pop
ror
fiadd
mov
cmp
stc
sub
adc
pushf
hlt
add
sub
mov
test
sahf
lds
push
js
data16
pop
mov
sbb
mov
mov
out
inc
and
icebp
ja
xor
call
fcmovb
test
adc
mov
sub
cs
pushf
shl
je
paddq
or
(bad)
int
test
movs
cmp
and
sub
mov
cdq
aam
mov
movs
mov
aad
or
jmp
sar
pusha
es
xlat
pushf
outs
test
jg
(bad)
fiadd
adc
leave
dec
jno
dec
fcom
fdivr
jecxz
arpl
rcl
mov
push
lds
sbb
(bad)
cld
movs
rcl
sub
jg
pop
fmul
xor
shl
fild
out
mov
js
retf
mov
inc
cmps
and
sbb
mov
push
xchg
push
jnp
(bad)
ins
lods
pushf
cld
pushf
loope
pushf
pop
add
fild
daa
mov
movs
jg
xor
and
lods
into
jle
fwait
xchg
mov
push
mov
bound
je
mov
lds
int3
std
and
cld
xlat
fst
fnstsw
xchg
popf
das
jle
lods
xchg
adc
(bad)
outs
test
mov
test
imul
iret
jl
fstp
loopne
test
jmp
push
lahf
xor
cmc
scas
and
sub
stos
and
xchg
clc
add
pop
loopne
xor
(bad)
enter
cmps
push
sub
inc
addr16
cwde
(bad)
aad
out
hlt
jp
std
xchg
cdq
mov
js
add
ins
cmps
ds
push
retf
pop
aaa
js
ins
mov
xchg
jnp
push
ss
sub
test
stos
adc
aas
hlt
add
jo
mov
or
test
jns
fnstsw
xor
sub
push
xlat
xchg
jecxz
inc
pop
ja
xchg
pop
push
enter
xor
xchg
sub
rcl
gs
das
in
sbb
outs
jnp
mov
mov
fisub
mov
pop
add
mov
xchg
mov
adc
gs
pop
sbb
fisubr
jne
xchg
dec
mov
cmc
push
mov
push
mov
and
adc
mov
dec
pushf
in
bound
arpl
stos
sbb
dec
cmps
mov
int3
pop
arpl
pop
or
mov
sbb
cmp
or
or
dec
mov
cmp
je
dec
cli
dec
imul
mov
(bad)
push
push
lahf
inc
xor
mov
sbb
icebp
sub
pop
xchg
push
push
shl
test
out
js
bswap
jp
or
or
ja
and
cdq
bound
adc
iret
retf
nop
test
push
xor
xchg
mov
mov
dec
inc
or
pusha
gs
imul
pop
ins
lahf
adc
sbb
fstp
push
push
aam
imul
pop
imul
adc
mov
xor
stos
or
xor
ss
xchg
pop
inc
ins
aas
jmp
inc
or
arpl
jb
out
call
(bad)
mov
les
inc
add
pop
or
inc
dec
xchg
pop
(bad)
mov
sub
in
dec
add
adc
in
xchg
push
in
(bad)
dec
mov
mov
push
jne
div
mov
ja
xor
ror
or
fisttp
xchg
enter
pushf
aad
shr
mov
fsub
add
nop
sbb
repnz
jmp
movs
push
stos
(bad)
cmp
add
(bad)
push
out
clc
shl
mov
arpl
pop
jo
or
neg
or
add
add
pop
cmps
inc
repz
mov
std
pop
ret
cmp
std
aas
movs
push
pop
outs
loopne
cs
adc
add
popf
dec
xor
adc
and
mov
fld
test
xchg
fs
xor
mov
hlt
movs
sub
sub
sub
out
ror
cld
mov
mov
retf
add
xchg
pop
or
(bad)
cmp
inc
test
mov
sub
dec
pop
int
pop
pop
aaa
shl
mov
sub
cwde
xchg
push
push
clc
adc
pop
aam
sbb
sbb
jl
stc
dec
cmp
aas
jmp
test
xor
jo
in
pop
jmp
adc
mov
sub
outs
mov
sub
dec
sahf
dec
std
shl
inc
mov
and
sub
and
cmps
es
cld
addr16
jmp
in
sub
sti
shr
mov
cmp
and
xor
shl
add
inc
cmps
mov
mov
daa
loope
sbb
adc
sub
cmp
and
dec
inc
sub
loopne
pop
push
stc
pop
mov
mov
cld
pop
jle
mov
outs
sub
xchg
call
inc
jge
mov
pop
rcl
dec
mov
pushf
ja
in
xchg
test
dec
and
sti
ds
and
repnz
xor
sbb
pusha
dec
pop
sbb
int
sbb
jecxz
call
nop
into
bound
jne
adc
jae
sar
pop
nop
sbb
xchg
xchg
jge
out
mov
pop
into
aaa
fs
jno
je
stos
or
adc
push
inc
push
adc
adc
enter
pop
sub
(bad)
jnp
cmps
dec
mov
lods
retf
movs
mov
cmc
adc
dec
cld
lods
xor
mov
(bad)
adc
dec
loope
lea
jb
ins
lock
sbb
cs
or
not
xor
add
xor
retf
xor
mov
mov
sub
fucomip
in
cmp
outs
dec
inc
mov
and
scas
jmp
loop
add
lods
cmp
repnz
pushf
sbb
jnp
sbb
sbb
sub
cs
shl
xor
fucom
test
fisubr
dec
mov
mov
jmp
cmp
or
cmc
jnp
and
stc
push
ja
dec
mov
pop
inc
push
inc
stos
jmp
inc
adc
or
sbb
xor
in
pop
mov
shl
mov
mov
ss
pop
sbb
or
cmps
xor
ja
mov
pop
retf
arpl
and
ja
cs
mov
dec
cld
mov
repnz
adc
scas
(bad)
dec
adc
sub
mul
jo
retf
or
or
sbb
xchg
jmp
cmp
dec
cmp
mov
sti
dec
dec
or
cdq
ret
mov
aas
mov
xor
mov
dec
pop
pop
push
push
addr16
jge
lock
call
leave
sub
popa
shl
aas
inc
test
jo
pop
or
or
ror
scas
cmp
pop
dec
push
fstp
mov
movs
xor
xchg
xchg
movs
loope
ds
jbe
push
push
retf
push
das
fist
aam
adc
add
aas
xor
add
xlat
or
popf
mov
xor
test
push
add
xor
test
cmp
mov
(bad)
cmp
outs
and
data16
std
cmp
cwde
or
jne
push
jmp
daa
xor
pop
xchg
pop
xchg
inc
push
in
dec
(bad)
aam
addr16
adc
sbb
outs
mov
mov
sbb
xchg
mov
push
mov
gs
add
retf
dec
jge
sbb
cmps
and
fmul
in
mov
loopne
push
dec
les
or
js
xchg
retf
mov
mov
fidivr
pop
cmp
or
test
sub
gs
mov
retf
add
in
xor
adc
mov
(bad)
ss
call
sub
sub
or
fdivr
xor
cmp
dec
add
push
popa
test
xchg
push
mov
call
pop
or
adc
daa
mov
mov
mov
sbb
leave
out
gs
cmp
push
aam
pop
mov
sub
movs
mov
lods
scas
pop
mov
xchg
push
and
push
arpl
test
and
pop
rol
fiadd
jg
xor
aas
and
out
adc
xor
bound
loope
fbld
in
pop
adc
xor
test
adc
and
push
sub
imul
add
shl
repnz
mov
push
push
push
xchg
test
jmp
sub
adc
jmp
(bad)
(bad)
arpl
repnz
std
jbe
outs
jg
ret
xor
cmp
clc
(bad)
cwde
ss
cdq
jmp
loop
int3
xor
inc
cmc
adc
jle
int
stos
push
xor
push
fdivr
mov
lahf
(bad)
out
stos
xchg
mov
mov
pop
nop
loop
aam
mov
cmp
mov
xor
jae
sub
and
(bad)
and
sub
sbb
sbb
jmp
lahf
mov
sub
pop
(bad)
in
fcmovnbe
retf
dec
jl
lods
xchg
loopne
sbb
or
push
pop
jne
in
je
sbb
cdq
pop
dec
push
pop
out
das
mov
iret
fbld
dec
imul
retf
xlat
ins
dec
jge
(bad)
rol
int3
ins
and
push
dec
stos
(bad)
repz
scas
dec
push
ret
sbb
jne
cs
pop
sbb
in
scas
jmp
mov
out
cmp
mov
cmp
xor
cwde
push
dec
xlat
add
jle
jo
js
mov
scas
sub
(bad)
arpl
stos
in
fisub
retf
out
test
cmc
cmp
mov
mov
int
stos
mov
cmp
xchg
adc
rol
ins
push
dec
mov
xor
fisub
js
cmp
bound
es
leave
mov
(bad)
stos
or
iret
stos
popa
xor
xor
sbb
push
mov
cld
in
push
test
mov
dec
shl
and
outs
or
mov
xor
stos
pop
call
mov
cmc
je
sub
retf
or
gs
cmps
das
dec
in
sbb
add
and
xchg
mov
jno
sbb
inc
adc
push
cmp
psubsb
mov
dec
mov
ins
fmul
fiadd
push
push
mov
jns
add
loopne
sbb
iret
pop
outs
in
or
mov
xchg
into
jnp
gs
mov
ds
rcr
outs
in
jmp
or
es
loop
jne
loope
push
rcr
and
shl
cmp
data16
in
add
mov
imul
hlt
mov
push
jmp
xor
sbb
dec
xor
loopne
test
mov
xor
mov
xchg
mov
or
sub
pop
imul
cmp
jbe
les
or
xor
retf
jbe
dec
ds
mov
push
fsubr
xchg
gs
test
lods
mov
ret
fistp
imul
test
jmp
xchg
xchg
mov
retf
sbb
xor
mov
cmc
fwait
cmp
in
mov
scas
outs
mov
mov
pop
in
cmc
mov
sbb
popf
xchg
es
mov
retf
loope
xchg
pop
xor
dec
hlt
icebp
and
fsubr
inc
std
lock
aaa
mov
jae
xor
mul
push
ror
inc
jl
mov
in
or
sbb
icebp
mov
sub
fcom
stos
outs
mov
in
dec
test
movs
clc
inc
xchg
cmp
and
inc
in
sahf
jno
fstp
push
inc
in
call
fstp
mov
push
rcl
xchg
aad
stc
stos
mov
pop
out
mov
pop
test
ss
cdq
(bad)
ret
std
movs
inc
xchg
daa
sub
or
dec
dec
(bad)
sub
js
jno
inc
and
mov
ret
ret
ficom
mov
jecxz
aas
lock
pop
xchg
call
lahf
movs
or
jecxz
xchg
adc
and
out
inc
and
gs
mov
cmps
and
adc
xor
out
adc
and
push
and
adc
dec
les
test
rcr
jns
add
in
inc
inc
xor
dec
xchg
pop
mov
out
movs
mov
inc
mov
imul
inc
(bad)
jle
mov
and
xchg
in
adc
movs
mov
cli
movs
lds
mov
cwde
or
jno
stos
mov
add
cmc
das
aad
and
scas
jg
xor
lahf
jmp
push
pop
inc
ror
pushf
xchg
push
jns
enter
cmp
gs
call
cld
add
or
inc
(bad)
mov
scas
sbb
adc
sub
icebp
add
test
jge
xchg
lods
outs
adc
push
push
(bad)
adc
inc
add
out
sbb
add
or
enter
mov
stc
cmp
in
pop
sbb
ins
mov
pop
mov
and
jecxz
pushf
pop
das
movs
mov
mov
(bad)
jmp
adc
mov
mov
test
inc
js
xor
jg
ret
xchg
fnstenv
fbld
mov
inc
fnstcw
or
and
ins
cmc
and
and
aas
cld
cmp
daa
mov
aad
inc
adc
mov
add
xchg
inc
cs
mov
push
into
mov
ds
mov
mov
out
imul
sbb
inc
push
pop
aaa
mov
xor
sbb
jmp
xchg
inc
idiv
mov
enter
pop
mov
sub
pop
popf
sbb
das
inc
xchg
mov
aas
bound
int3
outs
cmp
dec
jmp
shl
or
lods
or
xchg
ret
adc
idiv
adc
add
(bad)
inc
enter
dec
je
(bad)
jmp
or
xchg
add
mov
sbb
clc
adc
jmp
xor
out
sti
push
push
pop
cld
das
push
jns
jmp
sbb
push
mov
pop
push
mov
movs
push
mov
jno
hlt
outs
fs
xchg
lea
adc
dec
cmps
lds
jns
xchg
inc
jne
jmp
pop
push
sbb
sbb
xchg
out
int
cmp
or
inc
cmovp
mov
and
retf
push
cmc
add
outs
scas
pop
retf
fisttp
fwait
out
lods
inc
test
jle
adc
fdivr
dec
cli
rol
mov
fcmovb
mov
sub
cmp
ja
(bad)
adc
stos
mov
adc
lods
popa
push
sub
movs
adc
and
out
xor
mov
fisttp
sahf
push
or
js
outs
mov
mov
cmp
test
and
ficomp
test
mov
rcr
dec
dec
dec
push
(bad)
push
addr16
jmp
jmp
jnp
ficom
add
enter
sub
push
stos
add
ins
pop
fadd
data16
add
fst
mov
and
pop
into
test
add
(bad)
push
cmp
sbb
cmp
fdiv
fisttp
icebp
xor
iret
adc
pop
loope
adc
arpl
push
outs
cmp
mov
movs
mov
int3
mov
div
and
push
imul
stos
xchg
(bad)
jge
sbb
ins
xor
or
xchg
aas
lods
and
test
mov
inc
cmps
adc
fadd
jne
jmp
lds
pop
jne
cmps
ds
mov
xchg
adc
sub
les
sub
jo
cmp
sbb
das
pop
lock
or
jnp
int3
xchg
pop
outs
jne
and
cs
js
jecxz
sbb
mov
call
mov
pop
mov
jno
inc
xor
bound
xchg
call
outs
push
sahf
xor
mov
jge
mov
jle
jmp
push
mov
and
pop
mov
dec
push
(bad)
cmps
int
lds
(bad)
cmp
test
and
mov
retf
mov
cmps
sti
rol
cld
mov
fist
call
jmp
neg
fistp
push
sbb
xchg
dec
add
pop
loopne
xchg
lods
xchg
sbb
popf
pushf
push
pop
shl
xor
jl
pop
aam
scas
fs
jae
into
pop
or
outs
or
xchg
cmp
fbstp
fnstcw
inc
ret
adc
lds
jns
or
pushf
xor
adc
and
fwait
test
inc
je
push
jmp
mov
or
mov
mov
mov
repz
jge
xchg
cs
pushf
jae
(bad)
movs
ret
push
nop
(bad)
rol
sbb
and
call
addr16
ds
xor
dec
cmp
jb
(bad)
hlt
int3
jecxz
pop
and
leave
push
adc
xor
xchg
arpl
jle
stc
jns
ret
cmps
and
fiadd
sub
loopne
xor
lods
lods
mov
stos
and
mov
inc
cs
js
es
jmp
in
sub
and
retf
sbb
int3
xchg
test
aas
sub
(bad)
call
mov
repz
mov
xor
xlat
xchg
mov
mov
cs
ja
ds
icebp
in
dec
cs
out
xor
shl
ds
pop
out
pop
(bad)
hlt
lods
pop
pop
scas
sub
rcl
and
lahf
sbb
leave
xchg
loope
sub
shl
fwait
pop
mov
sub
shl
fst
and
fwait
ds
shr
cmp
out
push
inc
sub
loope
mov
push
outs
cmc
and
jge
ror
xchg
mov
sbb
lods
arpl
dec
sbb
in
loope
loop
mov
pop
mov
mov
mov
or
(bad)
cmc
jae
and
mov
and
loopne
xor
jo
inc
fdivr
dec
ss
(bad)
fsub
mov
pop
or
in
in
scas
mov
dec
out
cs
outs
cmps
inc
dec
cmp
repz
fwait
fwait
clc
jae
iret
and
mov
dec
dec
lahf
stc
sub
cmp
jno
pop
test
fucomip
mov
cmc
dec
rcr
(bad)
inc
adc
jno
fsub
inc
adc
fidivr
xchg
sti
sub
xor
sub
pop
cli
(bad)
add
into
xchg
mov
(bad)
cmp
ret
movs
inc
stos
js
sbb
outs
je
daa
js
xchg
outs
mov
nop
mov
nop
and
xchg
mov
fcom
cld
in
lahf
sahf
addr16
xchg
and
cmp
retf
xor
es
jg
mov
in
jns
jnp
gs
xor
mov
pop
mov
jne
mov
out
cmc
(bad)
out
inc
adc
imul
sti
or
lods
cmp
outs
pop
es
jmp
pusha
sbb
call
and
push
adc
mov
cwde
jmp
aam
pop
(bad)
das
xor
pop
test
mov
mov
stos
lods
add
hlt
movs
popa
or
sti
jecxz
shl
inc
sti
outs
inc
mov
jbe
sbb
iret
sub
pop
adc
fcomp
test
cmp
pop
popf
mov
inc
popf
shl
dec
fs
ret
pop
push
lods
add
ins
retf
movs
(bad)
in
lds
and
inc
mov
les
dec
xor
ds
jmp
pop
fs
aad
movs
add
pop
push
xchg
push
test
sbb
adc
pop
outs
(bad)
ret
jae
sar
dec
ret
xchg
cmp
cmp
push
push
mov
pusha
mov
or
sbb
adc
jmp
sti
mov
test
pop
ret
sub
aad
call
and
pop
aad
rcr
push
jmp
ficom
xor
jp
xchg
mov
rol
dec
les
sbb
pop
pop
ins
call
std
test
ret
fucom
in
aas
lock
(bad)
adc
jecxz
dec
xor
adc
rcr
enter
dec
daa
xchg
inc
push
mov
ret
sti
(bad)
div
and
aam
jae
jbe
icebp
cmp
lock
mov
sbb
clc
scas
rep
sub
adc
sahf
(bad)
push
mov
out
dec
cld
scas
jb
mov
inc
cmps
js
jae
add
fsub
inc
dec
jae
push
cmp
imul
div
or
test
imul
lock
leavew
ss
mov
cld
pop
xor
and
push
add
popa
dec
scas
add
mov
adc
jns
pusha
lods
adc
mov
lea
loopne
sbb
jl
out
shr
lods
out
in
and
sub
push
(bad)
cmps
ins
pusha
dec
dec
pop
sub
sub
fwait
pxor
cmp
cmps
mov
popf
ins
lock
or
or
add
leave
and
pop
add
cmp
xchg
out
imul
cdq
and
cmp
in
push
mov
adc
stc
call
mov
xor
jne
pop
test
pop
aaa
mov
mov
repnz
push
sub
bound
dec
jle
add
sbb
dec
ins
adc
adc
movs
jo
sbb
inc
mov
rcl
out
aas
das
stos
xor
and
popa
mov
out
cmp
mov
cwde
xor
xchg
leave
scas
shl
and
pmulhuw
xchg
dec
aaa
push
mov
fwait
pushf
pop
test
stos
nop
xchg
cmp
inc
call
call
scas
cmp
retf
add
push
mul
push
jmp
pop
fwait
add
call
jl
xchg
cwde
ins
xchg
shr
stos
test
adc
out
lahf
add
mul
enter
imul
test
pop
out
lods
xor
enter
mul
dec
(bad)
pop
cmps
cdq
outs
in
mov
push
inc
aas
je
xor
aaa
lea
std
push
nop
icebp
sbb
fimul
pop
push
stos
mov
imul
movs
mov
pop
mov
xchg
pop
pop
outs
ror
cmp
and
push
mov
push
xor
mov
pop
in
cmp
xchg
cmp
dec
cwde
fcomp
dec
aaa
cmp
mov
xchg
dec
leave
xchg
mov
pop
push
or
vmaxss
adc
in
pop
jmp
cmps
jl
dec
mov
jmp
jg
jb
je
popa
mov
xchg
popa
call
fisub
dec
xor
jge
inc
and
out
sbb
out
mov
jo
adc
fwait
ror
xor
scas
xor
and
sub
hlt
mov
push
cwde
cmp
mov
mov
and
loope
pop
stc
dec
or
sbb
sbb
pop
imul
imul
push
cmp
ins
call
lds
xchg
inc
mov
dec
fldcw
pop
and
lock
dec
push
pusha
addr16
cmp
xchg
mov
xor
sbb
dec
jae
aas
bound
hlt
(bad)
mov
xchg
push
daa
test
add
in
xlat
inc
and
mov
fidiv
sbb
lea
fiadd
sub
inc
imul
cli
xchg
cmp
lock
hlt
mov
pop
mov
aaa
bound
dec
xchg
xor
or
icebp
test
icebp
les
inc
inc
dec
clc
ins
leave
pushf
mov
cmp
jmp
push
fist
dec
outs
rol
gs
aad
xor
add
dec
cmps
dec
aam
outs
push
pushf
pusha
scas
outs
js
mov
sti
div
lds
retf
sbb
or
mov
jnp
xchg
fisttp
in
add
jmp
add
test
mov
fs
cmp
ret
shl
or
call
mov
xlat
imul
jmp
rol
xchg
cmp
pop
pavgb
icebp
pop
mul
es
ss
or
or
es
cli
fsub
sbb
test
sbb
imul
arpl
cmp
mov
enter
fst
xor
jg
pop
bswap
lods
cmps
dec
jmp
lahf
mov
test
retf
push
retf
add
add
push
stos
out
xchg
inc
push
rcr
aas
neg
jl
push
jp
cmp
inc
cmp
pusha
lock
and
and
pop
fdiv
mov
ret
stc
(bad)
push
mov
cmps
sbb
jo
mov
(bad)
pop
mov
inc
mov
retf
xor
call
hlt
xchg
and
(bad)
rcr
stos
or
pop
pop
test
out
inc
mov
adc
mov
and
das
shl
dec
jg
mov
inc
cmc
js
adc
call
test
push
sub
jge
mov
rol
loope
retf
sub
jbe
mov
mov
ror
jg
mov
or
adc
mov
mov
(bad)
movs
push
in
or
(bad)
ret
popf
jae
retf
inc
mov
xor
mov
enter
rcr
cli
shr
mov
sub
pusha
cmp
or
daa
dec
fstp
(bad)
sub
mov
(bad)
in
add
fmul
pop
aaa
out
not
xor
retf
fbstp
mov
fisubr
mov
push
rcr
movs
dec
adc
pop
xlat
test
sbb
ja
outs
sti
mov
jb
mov
test
arpl
fst
(bad)
pop
dec
jae
inc
test
push
add
cmp
pop
sar
das
pop
sti
push
js
pop
jmp
arpl
add
and
out
jecxz
ret
mov
loopne
sub
adc
xor
imul
jnp
push
pop
mov
dec
cli
lods
sbb
call
sti
add
push
jecxz
xchg
int
(bad)
cmps
cmp
or
xchg
test
mov
outs
adc
ret
inc
mov
fwait
test
out
add
adc
test
in
(bad)
ins
cmps
adc
cli
add
cwde
or
cs
xchg
sub
(bad)
icebp
sbb
cmps
inc
and
xor
ins
jo
iret
icebp
pop
iret
rol
or
push
fisttp
mov
out
std
xchg
lahf
cld
jmp
sub
jno
gs
mov
adc
dec
outs
mov
adc
sbb
retf
push
mov
adc
stos
sub
in
dec
stos
movs
jmp
cs
fldcw
cs
call
mov
xor
ret
and
movs
mov
sbb
cdq
adc
cld
dec
cmp
sub
lock
inc
fnstcw
dec
retf
and
jl
shl
adc
mov
ficom
cmps
ins
in
mov
mov
push
jge
aaa
(bad)
and
mov
stos
push
ret
jb
sub
mov
mov
or
pop
aad
pop
addr16
mov
sub
in
push
scas
in
leave
mov
dec
fisub
call
adc
mov
add
mov
mov
daa
xchg
cmps
lea
(bad)
dec
sub
sbb
ss
mov
dec
xor
mov
mov
xor
push
jecxz
mov
dec
dec
jb
in
jmp
cmc
mov
gs
jmp
cmp
aam
xchg
cmp
pop
in
stc
fs
mov
ss
mov
sbb
loop
std
in
std
out
stos
push
mov
jp
pushf
jecxz
pop
jno
pop
aaa
xchg
xor
adc
dec
pop
outs
xchg
mov
out
mov
add
out
push
xchg
lahf
and
retf
pop
and
xlat
aas
sbb
pop
cmp
sahf
retf
xchg
xor
adc
dec
cmp
or
rol
add
inc
inc
ret
mov
push
repnz
inc
int
dec
div
inc
leave
cmp
mov
push
mov
icebp
sti
and
mov
loope
hlt
jg
clc
push
push
xchg
test
cdq
add
jae
adc
fucom
aam
xchg
test
ror
scas
jo
popf
add
rol
inc
dec
sbb
xor
jl
jns
sub
mov
and
sbb
cmp
mov
out
inc
cmp
cmp
fisttp
dec
retf
scas
fsubr
fs
mov
adc
enter
lock
addr16
bound
aam
dec
pop
pop
push
pop
fld
push
xor
test
lahf
int
leave
mov
aam
push
xchg
dec
fwait
xchg
and
iret
jnp
ss
test
add
pushf
sahf
push
pop
push
xor
iret
fwait
or
fcomp
fdiv
in
std
ret
cdq
cmp
repnz
xchg
push
pop
vpunpckhbw
shl
and
test
inc
iret
push
ss
mov
fisttp
push
xchg
adc
jo
xor
mov
jmp
and
scas
test
sub
pop
or
pop
shl
pop
sbb
dec
imul
cs
lea
push
in
imul
int
dec
pop
mov
mov
out
cmp
mul
lea
int3
add
aaa
xchg
or
or
int3
inc
sbb
and
mov
inc
call
ret
mov
out
mov
aaa
or
ret
push
and
mov
ss
mov
push
pusha
test
(bad)
xchg
imul
pop
xor
xchg
fsubr
pop
nop
xchg
fwait
aam
rol
jne
mov
(bad)
(bad)
addps
mov
mov
mov
ins
jns
fmul
(bad)
stc
test
sti
inc
xchg
stos
jmp
(bad)
mov
jb
jmp
mov
test
push
push
ins
shl
mov
mov
inc
call
(bad)
out
sub
push
pop
test
pop
aaa
inc
push
ja
pop
pop
sysenter
dec
int3
pop
loope
push
pop
in
pop
cdq
mov
test
pushf
sub
and
idiv
sub
mov
dec
jo
jo
mov
jbe
nop
jmp
or
cmps
or
pop
stos
ret
xor
sbb
cmp
repz
ja
ds
iret
xchg
sbb
jge
jbe
sbb
outs
iret
sub
gs
dec
pusha
or
and
mov
icebp
xor
cmps
lods
jns
and
inc
ret
or
push
push
push
push
push
jg
(bad)
mov
inc
idiv
xchg
movs
jbe
inc
fnstenv
test
arpl
cmps
iret
(bad)
cs
and
or
or
lock
xchg
fmul
js
jge
mov
mov
adc
push
out
fs
in
sub
int3
(bad)
clc
inc
icebp
push
adc
jmp
inc
lods
dec
pop
fsubrp
cmp
pusha
dec
push
pop
enter
jp
addr16
mov
rol
pop
xor
inc
sub
ins
cwde
call
sbb
ret
xor
and
mov
in
jg
jle
add
push
jbe
push
aam
cmp
cmp
loop
xchg
push
lods
movs
pop
js
in
call
in
sub
or
fmul
sub
push
or
xchg
pop
stos
jmp
in
out
mov
ror
out
ss
dec
int3
push
adc
mov
mov
loop
cs
push
cmp
adc
inc
repz
push
push
mov
ins
inc
shl
stos
pop
jnp
js
mov
aaa
pop
int3
adc
mov
cmp
scas
and
mov
xor
cdq
pop
mov
and
cmp
dec
je
ds
leave
or
sbb
(bad)
fs
out
jecxz
mov
xchg
adc
or
dec
add
push
call
inc
cmp
fst
cmp
adc
aam
xor
int
fwait
jmp
cli
pop
sbb
and
or
xor
xchg
cmc
lea
xor
dec
pop
into
xchg
cli
dec
movs
test
add
(bad)
mov
pusha
pop
sub
xchg
ror
ds
push
inc
imul
adc
dec
sar
cs
enter
push
xchg
cmp
pop
(bad)
in
je
sub
mov
dec
and
and
in
jmp
cmp
jae
fisub
stos
cmc
add
movs
into
dec
call
(bad)
(bad)
out
mov
rcl
dec
jmp
xor
ret
mov
das
jmp
inc
dec
sti
adc
mov
fstp
ja
pop
lds
cmp
inc
lock
lods
cs
fist
fmul
mov
jo
dec
je
cld
ret
pop
fisub
mov
ret
inc
add
pop
inc
fnsave
mov
sti
push
mov
mov
lods
jne
jne
int
loopne
jnp
xchg
adc
cmp
pop
sub
loope
pop
sbb
adc
inc
adc
addr16
js
sbb
scas
dec
aam
mov
mov
jle
cdq
or
xchg
cmp
sbb
inc
fwait
lock
fyl2x
test
shl
mov
cmp
jmp
inc
cld
cmp
adc
xchg
(bad)
lods
shr
div
js
sbb
cdq
add
or
hlt
fmul
or
sbb
(bad)
adc
cmp
jb
(bad)
repnz
dec
fmul
push
adc
adc
loope
sbb
sar
fwait
fwait
push
outs
mov
pop
mov
pop
out
outs
loopne
adc
cli
in
mov
sbb
fisub
mov
pop
cmp
and
xchg
sbb
enter
ret
xor
leave
stos
sub
jecxz
jecxz
aam
(bad)
sbb
sub
push
ror
cmp
add
dec
mov
aam
retf
icebp
jbe
xchg
push
or
je
dec
add
loopne
mov
(bad)
(bad)
leave
xor
mov
pop
add
shl
jl
adc
push
dec
aas
fsubr
mov
pushf
outs
add
lahf
sbb
ror
into
sbb
xor
scas
pop
dec
mov
rcl
cmp
rcr
add
mov
dec
adc
fwait
cmp
(bad)
fwait
aam
pop
lea
xchg
add
dec
into
xchg
jo
js
and
js
or
mov
xor
pop
out
fmul
mov
fbstp
xchg
js
pop
sar
mov
push
inc
into
das
(bad)
cwde
imul
inc
(bad)
sub
mov
cmp
mov
data16
mov
stos
in
cdq
iret
push
pop
enter
ret
popa
out
lods
xor
mov
jecxz
sbb
jne
push
jb
repz
mov
lahf
cli
dec
xor
and
cmp
not
out
nop
sub
mov
xchg
and
stos
or
push
sub
stos
jecxz
jno
xor
(bad)
idiv
push
ds
sar
xchg
in
mov
xor
cmp
stc
sbb
jne
(bad)
or
mov
repnz
xor
(bad)
adc
loop
loopne
rcr
jl
or
mov
in
cdq
ins
pop
fidiv
and
pop
xchg
gs
pop
ja
repz
inc
shl
xor
sbb
fmul
xor
push
iret
inc
hlt
sbb
aam
jle
shl
inc
fwait
push
xor
aas
out
xchg
push
and
mov
(bad)
out
mov
jmp
aaa
push
daa
shr
xchg
imul
addr16
dec
arpl
gs
out
hlt
xchg
rcr
xlat
dec
lea
imul
jae
sub
mov
jg
cmps
xlat
call
aas
out
lea
sbb
adc
or
(bad)
(bad)
out
nop
jno
mov
aas
(bad)
fbld
pop
call
jae
stos
push
xor
sahf
mov
enter
fs
and
(bad)
gs
mov
mov
push
pop
int
pop
pshufw
and
icebp
pop
dec
loope
mov
fwait
cs
push
pop
mov
in
mov
dec
pusha
(bad)
dec
dec
dec
xchg
mov
cmp
push
push
into
inc
es
mov
stc
or
xchg
add
mov
(bad)
jl
jl
sbb
sub
inc
test
pop
mov
mov
ret
sub
(bad)
ins
rcr
inc
test
call
add
call
pop
call
in
popaw
aaa
fld
jp
stos
pushf
cmp
sbb
popa
movs
mov
and
out
inc
adc
retf
jno
jbe
add
sar
fisttp
sbb
or
dec
cld
xchg
push
in
(bad)
mov
(bad)
popa
test
push
mov
lds
out
mov
sub
test
cmps
pop
into
fdiv
mov
test
and
imul
mov
cs
pop
pop
out
cmp
hlt
loopne
sbb
add
sahf
cwde
cs
sub
idiv
sbb
gs
ror
inc
add
or
sbb
mov
sbb
cmps
fnstcw
inc
inc
ret
fnstsw
xchg
xor
xchg
jne
xchg
inc
mov
cmps
std
cmps
inc
adc
sbb
ins
pop
pop
adc
mov
les
jecxz
pop
adc
lods
and
(bad)
mov
inc
ss
or
adc
and
cmps
mov
or
jle
test
test
mov
push
(bad)
inc
dec
or
and
(bad)
stos
icebp
and
jmp
adc
loop
ins
jle
xchg
arpl
or
das
stc
fiadd
mov
call
push
es
je
or
loope
or
jge
jo
adc
test
mov
xor
stos
(bad)
cmp
xchg
movs
(bad)
in
dec
inc
cld
xor
fdiv
inc
jmp
mov
xchg
js
outs
sub
fsub
mov
out
test
sbb
pop
mov
xor
movs
cld
fcmovnbe
xor
mov
ja
mov
push
inc
bound
push
sbb
or
xor
dec
(bad)
sbb
cmp
add
and
push
jmp
(bad)
dec
leave
mov
push
pop
mov
jg
fwait
inc
into
fiadd
dec
in
add
sbb
pushf
and
and
or
sbb
clc
loopne
cdq
loop
and
mov
(bad)
cmp
adc
fisubr
or
cmp
xchg
xchg
movs
data16
jb
mov
fidivr
cmc
arpl
fistp
pop
sbb
shl
ds
xor
jmp
int
shl
cli
fidiv
lea
int3
out
(bad)
xchg
jbe
add
rol
inc
iret
mov
ins
fimul
loope
mov
aas
sub
xchg
mov
sbb
sub
mov
adc
fcom
mov
mov
jg
xor
dec
in
inc
jbe
mov
test
cmp
sbb
in
mov
js
fld
mov
push
int
jp
xchg
push
out
pop
outs
push
push
adc
mov
mov
rcl
cmp
(bad)
jbe
or
int3
push
stc
les
ret
xabort
mov
inc
mov
xchg
add
and
adc
and
imul
movs
jnp
scas
adc
les
stos
pop
lahf
cmp
xchg
mov
in
cmp
sbb
cmp
ret
mov
push
in
scas
jg
int
fadd
push
cmp
add
test
daa
mov
jne
cmc
stos
dec
add
into
rcr
inc
add
add
add
xchg
dec
mov
out
lods
arpl
push
aas
rcr
in
mov
sti
fiadd
out
jno
repnz
add
inc
xchg
ja
xor
adc
inc
jge
jge
je
addr16
clc
dec
call
out
inc
mov
dec
(bad)
cwde
aaa
popf
sbb
add
xor
or
add
das
int
fld
cmp
xchg
adc
or
pop
stos
mov
mov
mov
je
imul
call
jno
je
stc
add
or
fild
lock
cld
cmc
mov
js
sub
pusha
daa
int
pop
out
mov
push
jb
or
xlat
dec
cmps
pusha
cmp
gs
test
gs
js
and
mov
shl
pop
jg
pop
jle
inc
repnz
sub
cmp
push
xor
lods
pop
in
push
add
jae
pop
cdq
xor
retf
xchg
cdq
cmp
mov
cmp
int
das
mov
push
xchg
sbb
mov
xchg
pop
test
jmp
sar
sub
inc
push
sbb
cld
adc
pop
sbb
dec
nop
jmp
dec
(bad)
xchg
adc
mov
mov
inc
mov
pop
push
and
mov
jg
cmp
cmp
movs
hlt
stc
sub
imul
pop
inc
push
pop
cmp
out
add
test
test
popf
fisttp
push
inc
add
pop
pop
loopne
mov
sub
cmp
adc
fdivr
stos
pop
pusha
ins
mov
inc
mov
jo
rcl
(bad)
or
jge
mov
pop
in
push
or
(bad)
cmp
dec
movs
or
sub
int
test
jns
je
cmps
and
arpl
mov
jmp
das
mov
int3
mov
or
mov
and
adc
sbb
cmc
imul
push
mov
mov
pop
das
retf
out
add
faddp
jnp
inc
push
jl
in
fiadd
(bad)
mov
test
dec
jge
dec
sbb
add
sbb
jecxz
xor
retf
gs
adc
pop
int
(bad)
mov
test
dec
xchg
push
push
xchg
add
or
cmp
(bad)
and
xchg
stc
sub
or
cwde
pop
mov
adc
ficomp
adc
cmc
cld
sbb
loope
fwait
ins
sub
fistp
or
add
loope
pop
(bad)
fs
es
adc
mov
sti
out
sbb
outs
pop
mov
sub
hlt
ins
pushf
cmp
mov
sub
xchg
(bad)
shr
mov
or
mov
call
cmp
jno
or
pop
test
cmp
mov
push
and
lea
pop
sub
sub
mov
aas
adc
test
test
fld
xor
mov
pop
or
and
ds
adc
lods
rcl
imul
mov
ja
xor
out
stos
xor
int3
out
jno
movs
xor
jle
xlat
test
(bad)
mov
out
inc
fist
fisubr
repz
or
cmp
popf
daa
pop
push
add
aas
shl
sbb
push
idiv
push
das
test
jo
adc
mov
push
into
push
inc
loope
mov
pushf
in
or
mov
jne
sbb
and
push
xchg
fcomp
movs
bound
imul
mov
(bad)
mov
test
dec
push
push
xchg
cmp
repnz
pusha
adc
scas
in
jge
mov
dec
xlat
push
dec
dec
inc
add
mov
scas
fsubr
xchg
aam
fwait
mov
adc
lds
int3
aas
inc
cmp
dec
xor
xchg
retf
test
rcr
adc
pop
jge
push
fscale
pop
fwait
cmps
rcl
mov
(bad)
repnz
das
mov
sbb
jg
adc
aas
sub
jmp
push
mov
ret
in
pop
jnp
push
jae
adc
xchg
jo
ret
jb
leave
dec
fadd
into
mov
dec
jnp
arpl
out
xor
je
or
push
ror
sbb
ins
push
pop
or
dec
cmc
adc
jne
out
xchg
es
mov
ret
cmp
retf
in
xchg
aad
cmp
jmp
adc
retf
nop
lods
jge
add
cmp
rcl
sub
sti
jnp
mov
lahf
retf
ret
sti
mov
and
mov
pop
arpl
push
pop
mul
loope
jg
push
es
aaa
sub
js
gs
shl
ins
push
loop
mov
xor
cwde
cli
aad
adc
add
(bad)
stc
push
not
cli
push
test
call
mov
mov
dec
jns
push
ja
psubusb
xor
add
(bad)
xor
ucomiss
or
stos
test
or
inc
and
fldenv
data16
in
and
jo
popa
cmps
mul
loopne
xor
dec
repz
gs
int
mov
mov
ja
and
(bad)
enter
or
cmp
mov
pavgb
inc
lds
mov
adc
out
sub
mov
aaa
jae
in
sub
fwait
aam
repz
ds
cli
fild
sub
xor
xlat
ret
dec
mov
(bad)
pop
xchg
and
dec
pop
ret
out
and
pop
int
ret
sbb
sub
or
movs
mov
lea
pop
and
gs
cwde
sahf
and
js
leave
xchg
add
xchg
mov
fwait
call
inc
clc
shl
out
xchg
inc
es
ret
dec
gs
inc
jmp
jne
cmc
mov
bswap
lea
mov
add
imul
push
sbb
stc
fs
or
cmc
mov
(bad)
stc
inc
mov
xchg
push
xor
cmp
mov
es
sbb
xchg
add
mov
xor
mov
(bad)
mov
mov
repnz
pop
cmp
push
ds
sbb
push
mov
cmps
xchg
pop
mov
test
ins
cwde
cmp
aam
sbb
mov
(bad)
push
adc
pusha
rol
push
pop
push
jns
lahf
pop
mov
xchg
xor
inc
sub
es
rcl
aas
and
mov
xchg
cli
out
and
cmp
xchg
fild
mov
lock
test
test
repz
dec
sahf
lods
jl
jp
bound
(bad)
mov
sub
jmp
jp
mov
imul
push
icebp
cmp
cmp
adc
jle
in
sbb
std
pop
ja
(bad)
sbb
inc
fs
aaa
push
cld
test
es
jae
ja
mov
xchg
jae
call
push
out
xchg
add
pusha
cli
dec
or
ins
adc
ja
push
ins
les
xor
xor
jmp
jnp
ret
mov
outs
jl
call
(bad)
mov
push
inc
nop
pop
xchg
sahf
sbb
addr16
xchg
sub
scas
into
mov
add
out
push
xlat
push
mov
jnp
inc
add
mov
pop
mov
rol
and
in
add
scas
pop
pop
jmp
int3
pop
ror
jbe
xchg
or
dec
rol
popa
push
xor
in
mov
div
mov
jge
and
sbb
lahf
stc
les
fst
jnp
mov
mov
and
cmp
test
aas
fadd
jbe
out
test
push
adc
mov
lea
cdq
jmp
fwait
int3
sbb
jmp
jno
frstor
cmp
adc
push
mov
sub
adc
cld
std
xor
sub
push
push
call
or
adc
mov
imul
leave
rcr
popa
pop
pop
enter
cmps
repz
shl
addr16
push
pop
mov
std
sub
push
push
sub
mov
ins
xchg
jmp
and
xor
add
pop
jmp
jle
jae
push
retf
out
lea
imul
ins
xor
jle
nop
mov
fs
xchg
aas
xchg
scas
jmp
cmp
push
xchg
sub
sub
push
or
pop
and
fild
pop
xchg
push
inc
xlat
js
ds
repnz
(bad)
outs
out
lea
call
data16
xor
jmp
call
jno
popa
(bad)
cdq
xor
(bad)
adc
je
dec
jle
ins
mov
addr16
push
sub
outs
jg
neg
rcl
jno
sub
push
das
mov
jmp
pop
sar
mov
call
rcl
mov
aaa
imul
es
cmp
call
mov
sbb
add
mov
dec
imul
jns
sbb
std
xor
fimul
outs
mov
ja
push
aas
lods
fiadd
sbb
mov
sahf
ins
movs
out
cs
sti
push
jmp
push
stc
int3
sar
xor
mov
gs
and
outs
(bad)
push
jb
mov
and
pop
xor
push
sbb
retf
add
jg
xor
(bad)
aad
or
jp
ret
pop
sbb
adc
jmp
shl
data16
fwait
loope
and
inc
int3
daa
sbb
add
pop
lock
aam
nop
sbb
xchg
dec
jl
dec
xchg
rcl
mov
jmp
cmps
and
xor
sbb
cmp
xchg
and
xor
dec
(bad)
movs
xchg
cs
cmp
dec
int3
daa
inc
lds
mov
xor
idiv
(bad)
int
jge
inc
mov
pop
outs
lds
call
jbe
jb
jmp
jmp
ret
sub
pop
sub
xor
jnp
hlt
jbe
mov
addr16
sbb
pop
loopne
fistp
fcomp
or
cmc
push
cwde
adc
push
push
rcl
inc
sub
sub
and
jns
adc
loopne
test
repz
mov
fbstp
push
into
mov
and
jecxz
pop
rcr
leave
bound
fsub
loopne
rcr
scas
jmp
push
xchg
fisub
or
or
inc
sti
int
xor
ins
outs
adc
idiv
ficom
rol
mul
rcl
call
cmp
push
mov
xchg
inc
stos
add
push
dec
add
xor
jmp
aas
ret
ins
inc
mov
jbe
mov
xchg
out
sar
daa
pop
ret
and
cmp
dec
out
clc
xchg
call
dec
bound
fisubr
pusha
cmp
xchg
jl
pusha
iret
in
test
out
xchg
mov
jbe
xchg
mov
xor
push
sbb
arpl
sbb
js
adc
daa
inc
lods
mov
(bad)
push
mov
jb
sbb
pushf
inc
adc
cmc
mov
inc
jecxz
push
imul
fs
call
push
pop
xchg
adc
test
xor
cmp
xchg
ds
or
dec
into
je
pop
sub
add
iret
add
clc
jle
into
sub
repnz
shr
mov
mov
push
inc
sbb
add
jmp
(bad)
mov
out
rcl
jmp
mov
repnz
jl
xor
pop
movs
fisub
out
aas
(bad)
xor
dec
sub
int
into
rcl
ds
mov
test
pop
push
pop
fist
push
jl
sbb
pop
mov
cmp
cmp
jecxz
stc
add
and
fldcw
adc
add
and
cmps
inc
lea
repz
pop
repnz
int3
test
xchg
push
test
fadd
mov
fldcw
sub
or
xor
mov
int3
sub
retf
sti
add
sbb
mul
call
es
mov
scas
retf
leave
jp
loopne
push
push
repz
mov
popf
scas
sub
xchg
idiv
xchg
pop
mov
or
sub
pop
(bad)
pop
pop
lea
dec
mov
ins
pop
dec
cmps
in
xor
add
fsubr
movs
add
or
xor
add
loope
push
mov
loopne
xchg
das
mov
adc
cmp
adc
mov
popa
mov
mov
dec
loope
inc
mov
cs
fnstenv
xchg
hlt
retf
loope
mov
sub
push
lods
shl
pop
bound
into
aas
sbb
pop
fs
bound
int
add
mov
out
push
push
cmc
push
ins
stos
call
pop
inc
sbb
(bad)
call
sub
cmps
les
mov
pop
pop
sub
out
(bad)
int3
mov
fld
mov
jbe
js
add
sub
jno
or
push
fwait
test
xchg
stos
cmp
push
(bad)
or
fsubr
sbb
(bad)
lods
lea
jb
les
pop
sbb
cmp
outs
xor
adc
mov
mov
pop
stos
mov
add
xlat
enter
xor
push
jne
mov
(bad)
mov
or
mov
fstp
push
fstp
out
jge
loopne
pop
ret
(bad)
pop
jmp
cmps
fist
or
ins
std
ss
fwait
lds
sar
sahf
repnz
movs
hlt
xchg
or
std
in
rcl
ds
and
cwde
imul
into
cld
push
xor
xor
adc
arpl
push
ret
std
mov
stos
(bad)
mov
stos
cmp
test
dec
rcl
repnz
lods
cmp
lea
shr
cmp
stos
cmc
dec
inc
rol
mov
add
ins
adc
mov
jg
sub
(bad)
xchg
aas
mov
push
mul
jbe
leave
and
in
adc
push
dec
or
lahf
stos
addr16
mov
sbb
js
mov
push
and
and
push
dec
cs
jg
or
out
dec
repz
fcom
fistp
imul
push
xchg
xchg
xor
enter
call
pop
push
cdq
pop
mov
scas
fwait
shl
out
mov
lds
jbe
push
or
sub
imul
call
mov
retw
mov
xlat
cmp
das
mov
push
in
cmp
or
iret
ret
inc
mov
scas
not
xor
imul
rol
mov
mov
pop
xchg
jecxz
outs
mov
fisttp
cmp
push
in
outs
push
mov
adc
jno
outs
push
enter
or
pop
dec
idiv
adc
xchg
lods
mov
pop
mov
mov
push
push
popf
jns
movs
cwde
pop
xor
push
in
inc
xchg
xchg
into
(bad)
xor
cmp
dec
pop
jns
pop
pop
ror
mov
pop
outs
test
mov
fdiv
test
pushf
cmp
adc
rcr
jnp
repz
cmp
out
repnz
call
or
xor
mov
int3
add
test
pop
sbb
and
xor
push
mov
loopne
in
mov
lock
nop
push
adc
shl
loopne
int
add
sub
pop
in
not
ins
dec
push
pop
cli
mov
retf
(bad)
shr
inc
sbb
pop
(bad)
(bad)
mov
mov
xchg
pop
pushf
dec
dec
pop
dec
ret
call
arpl
jne
jne
rcr
mov
jl
imul
mov
lods
pop
xchg
inc
pop
sahf
sub
out
mov
in
shl
mov
repnz
xchg
pop
pop
in
xchg
addr16
pop
sbb
jecxz
dec
into
je
stos
sub
aaa
cmp
add
adc
jae
in
mov
fsub
push
pop
repnz
jb
and
jmp
sar
or
sbb
mov
fwait
xchg
xlat
cmp
mov
(bad)
dec
inc
cmp
fldenv
mov
dec
jbe
add
(bad)
ins
inc
jns
int3
pop
test
jecxz
dec
pop
add
aaa
into
push
sbb
pop
retf
stos
xchg
jmp
imul
call
sbb
stos
sti
inc
mov
fcmovbe
cmp
movs
sub
mov
inc
xchg
mov
popa
jl
dec
inc
ss
jle
scas
inc
cmp
xor
pop
push
lahf
mov
jmp
jno
mov
mov
xchg
inc
sahf
pop
jecxz
mov
adc
pop
les
sti
arpl
and
daa
js
imul
sub
adc
cli
std
hlt
cwde
and
je
retf
jge
sub
shl
popa
(bad)
sbb
push
push
mov
popa
(bad)
mov
ffree
pop
stc
std
stos
mov
retf
dec
sbb
sar
mov
ins
xor
mov
push
xor
lods
stos
cmps
dec
int
mov
ins
push
sbb
in
inc
(bad)
mov
enter
or
fwait
cmp
sub
pop
mov
adc
add
pop
ret
pushf
in
fwait
repnz
add
retf
ficomp
mov
push
or
mov
add
sub
dec
sub
call
dec
inc
inc
mov
sbb
dec
ins
iret
pop
pop
jns
push
aam
ins
cmps
ds
add
(bad)
daa
push
or
ficomp
and
scas
into
mov
sub
fild
and
mov
adc
inc
outs
lods
mov
es
push
lea
inc
mov
xchg
nop
fisttp
addr16
jg
iret
xchg
bound
scas
ins
popf
jnp
sub
(bad)
jae
jne
lock
retf
aad
and
mov
xor
xchg
in
or
nop
jnp
pop
std
dec
xor
(bad)
xchg
out
ins
js
xor
(bad)
mov
stc
sbb
xor
idiv
inc
mov
xlat
je
out
sti
jecxz
shr
jg
push
jmp
or
push
jne
mov
in
jns
xlat
or
cmp
adc
inc
push
fdiv
dec
cs
push
mov
into
sub
sub
and
mov
xlat
test
fst
mov
loop
inc
add
test
mov
dec
sbb
arpl
adc
jno
div
pop
add
sub
jbe
sub
jne
xor
jecxz
ja
push
xor
mov
mov
in
mov
jnp
xchg
jl
mov
cmp
lods
inc
xchg
pushf
std
scas
fild
dec
xchg
lods
ss
cmp
cmp
mov
test
cwde
dec
fwait
aas
xor
inc
fisubr
jp
cmp
sbb
out
les
pop
int
(bad)
loope
adc
pop
fwait
idiv
retf
and
cmp
adc
mov
stc
or
jg
enter
cli
retf
test
ret
frstor
test
push
push
push
rcr
scas
and
popa
mov
rcl
jl
retf
add
fldcw
arpl
push
jg
add
out
xor
dec
mov
cmp
xchg
arpl
mov
arpl
into
lahf
rcl
stos
pop
les
ror
movs
cmc
xor
jmp
push
pusha
dec
ins
cmps
jg
rcr
in
add
jl
scas
retf
mov
ins
test
mov
outs
pushf
ficom
push
lock
pop
push
mov
(bad)
movs
into
adc
or
imul
shl
jmp
test
ins
pushf
xor
aaa
in
lods
idiv
ss
mov
cmp
pop
je
scas
xor
or
ffree
je
sti
inc
inc
mov
sub
lea
add
xchg
push
push
cwde
int3
jo
sbb
call
xlat
test
mov
dec
das
movs
repz
test
push
lods
sbb
inc
jecxz
enter
cmp
add
mov
dec
lahf
not
xor
popa
and
dec
pop
ret
lods
lds
push
jae
ds
(bad)
cmc
ins
(bad)
(bad)
and
hlt
sbb
sub
cli
cmp
jecxz
call
out
and
out
mov
mov
ins
cmp
shr
mov
jae
ret
jae
bound
jle
mov
and
jg
mov
scas
das
in
mov
hlt
pop
shl
pushf
fcom
mov
mov
mov
icebp
sar
inc
ds
add
mov
push
push
or
(bad)
neg
in
arpl
pop
in
xlat
mov
test
xchg
loope
pushf
cmp
sub
popa
cs
fwait
lds
out
aad
or
sub
ror
rcr
jmp
lods
call
jmp
(bad)
push
and
jg
and
xchg
push
call
mov
outs
pushf
mov
add
cwde
lods
jmp
add
icebp
sbb
std
popa
push
sbb
es
ret
in
lock
int
mov
xchg
mov
sub
xor
inc
jl
out
in
shr
pop
push
sub
xlat
aas
jg
inc
test
jl
ja
sbb
and
lock
inc
cmc
imul
xchg
add
iret
enter
pushf
test
int3
cli
dec
pop
mov
hlt
cmp
out
mov
test
dec
mov
sub
out
mov
jb
test
adc
shr
movs
aad
aam
(bad)
adc
push
or
cs
cmp
push
test
inc
mov
mul
(bad)
dec
push
ret
mov
xor
xor
mov
lahf
xor
lock
sar
sbb
jmp
pop
mov
loopne
loop
fwait
pushf
cmp
ins
rcl
das
rol
cmp
cmp
sbb
fdivp
jnp
repnz
jbe
dec
pop
test
inc
adc
repnz
xor
push
sub
dec
ret
xor
scas
push
sub
movs
xchg
out
adc
div
mov
push
push
(bad)
jo
ds
repnz
into
jne
xor
push
imul
movs
xor
add
inc
jmp
loope
pop
ficom
xchg
mov
pop
or
pushf
mov
(bad)
jle
xchg
xor
sub
add
fdiv
stc
or
xor
mov
fxtract
or
xchg
shr
sbb
aaa
fwait
inc
pop
jl
cs
ins
adc
mov
call
xchg
jmp
test
es
push
daa
jl
and
mov
cmps
bound
leave
xchg
push
ins
in
test
push
sub
cs
and
js
sub
data16
jle
push
mov
pop
or
stc
scas
bound
imul
cmps
lock
scas
add
scas
dec
sbb
xor
daa
sar
loope
scas
rol
in
mov
jg
or
popf
and
int
mov
ret
inc
retf
push
jecxz
jb
dec
fmul
mov
sub
or
test
(bad)
scas
pop
cmp
pop
out
aas
fadd
pop
pop
mov
mov
iret
inc
jecxz
shr
es
cmp
mov
sahf
retf
xor
and
test
pop
not
fnstcw
sbb
and
std
out
shl
push
gs
lock
stos
lock
aas
arpl
add
push
loop
shl
pusha
test
pop
test
in
test
adc
ss
mov
pop
gs
ja
sti
jl
cmp
push
xor
das
out
jbe
outs
adc
ins
mov
pop
popf
sti
cmc
adc
xor
aam
iret
push
retf
addr16
repnz
jle
sub
mov
jnp
out
into
stos
mov
sbb
int
jmp
add
and
(bad)
sub
mov
in
mov
aad
sub
jae
inc
or
popa
in
xchg
sbb
inc
mov
dec
ror
(bad)
aaa
rcl
push
and
xchg
hlt
adc
inc
or
dec
mov
cmp
push
sbb
add
xchg
mov
mov
cmp
stc
xchg
outs
mov
mov
xor
imul
or
test
lahf
xor
push
out
mov
cwde
sub
leave
mov
ins
bsr
adc
shl
sub
sub
fwait
pop
mov
fisubr
jge
leave
fadd
pop
and
retf
dec
ret
cmp
add
pop
call
mov
push
aad
add
lds
in
and
je
inc
xchg
fwait
xchg
and
es
repnz
lahf
test
scas
mov
in
pop
inc
mov
dec
xchg
cmp
dec
dec
inc
lock
ficomp
fwait
pop
sti
(bad)
je
int3
mov
shl
mov
pop
fbld
add
rol
arpl
jne
sub
jecxz
(bad)
pop
mov
xor
fsubr
xlat
sbb
mov
mov
mov
jb
sbb
pop
sub
sar
(bad)
sti
cli
jle
and
xor
mov
mov
jnp
lea
or
inc
dec
cld
(bad)
outs
ss
cmps
dec
xchg
push
je
(bad)
or
push
dec
inc
mov
ja
dec
fwait
repnz
adc
loop
jb
sbb
ja
or
sub
or
loop
push
pusha
or
rol
sbb
inc
ret
inc
push
inc
jge
sub
arpl
hlt
shl
cmp
int
mov
mov
pop
icebp
mov
and
movs
ret
inc
add
popf
xor
fisttp
(bad)
pop
ret
in
push
push
jo
and
shr
dec
movs
in
(bad)
cmp
jecxz
in
clc
sbb
cmps
pop
(bad)
xor
lods
or
dec
cli
sbb
mov
je
inc
ficomp
push
jle
sbb
(bad)
adc
neg
xchg
adc
xchg
adc
mov
adc
scas
add
xchg
push
push
or
push
movs
neg
data16
cmps
mov
lods
add
(bad)
(bad)
inc
imul
mov
push
mov
test
repnz
mov
inc
shr
test
adc
sbb
adc
jle
and
sub
scas
std
jmp
popf
adc
gs
push
cmp
push
retf
pop
jno
movs
adc
mov
out
(bad)
push
mov
cmp
aaa
(bad)
es
adc
(bad)
fsubr
fiadd
sbb
dec
int3
sbb
inc
test
push
and
shl
shl
ret
jo
jmp
int3
dec
ffreep
pop
push
add
push
nop
jnp
xchg
jne
out
inc
daa
pop
xchg
jle
ret
or
dec
out
aas
jnp
mov
xor
push
mov
cmp
mov
dec
outs
jo
sub
mov
ror
pop
fnstsw
jne
in
adc
cdq
cli
scas
push
push
adc
push
xchg
std
icebp
xchg
pop
push
jns
inc
rol
inc
cs
fsubr
sahf
int
fiadd
sbb
pop
pop
sub
ret
jbe
shl
out
arpl
mov
push
mov
jle
mov
or
movs
mov
push
or
add
dec
xchg
and
xlat
nop
inc
retf
(bad)
aas
and
stc
add
push
and
bound
scas
mov
outs
loop
mov
mov
cwde
sub
pop
mov
dec
adc
dec
add
dec
inc
out
dec
mov
scas
lahf
fisubr
dec
das
mov
retf
icebp
and
ins
inc
inc
dec
xor
aaa
mov
icebp
fdivr
shl
jmp
scas
out
ss
call
arpl
aaa
repnz
inc
shl
xchg
pop
(bad)
not
popa
pop
test
or
xor
lds
repz
je
lods
mov
push
scas
sub
ror
xchg
dec
fs
jmp
pop
sbb
pop
sbb
sbb
bound
loop
xchg
cli
adc
test
adc
retf
dec
xchg
pop
ret
mov
adc
outs
jmp
(bad)
jbe
add
inc
jp
in
mov
push
sbb
rcl
xchg
dec
(bad)
icebp
hlt
jmp
sub
stc
fidiv
mov
adc
hlt
retf
and
dec
cmp
inc
or
les
push
xchg
fst
iret
or
adc
push
daa
punpcklbw
dec
outs
sbb
fwait
push
cmp
aad
cld
and
adc
cmp
push
xchg
push
jns
into
and
aaa
dec
add
pandn
xor
stc
jb
(bad)
cli
cmp
rcr
idiv
arpl
mov
add
push
cmps
rep
dec
push
sbb
dec
mov
cvttps2pi
mov
push
icebp
inc
outs
les
dec
ss
hlt
outs
inc
xor
sbb
push
fadd
test
fwait
xchg
shl
mov
loop
retf
clc
movs
jg
loop
cmp
push
xor
jmp
cmp
aas
jecxz
pop
push
xchg
jno
push
cmps
pop
or
xchg
xor
out
(bad)
adc
mov
or
rcr
mov
sub
pop
call
xor
sub
(bad)
cli
cmps
add
mov
outs
jg
je
pop
dec
dec
movs
cmc
fmul
fbstp
and
popf
in
pushf
out
popa
loopne
stos
adc
fbld
stc
fpatan
pop
xor
sub
xchg
jnp
cwde
jnp
loop
dec
xchg
and
mov
cmc
aad
lahf
mov
dec
xchg
stc
add
test
dec
nop
jno
fwait
dec
mov
iret
lods
xchg
pop
pop
data16
xlat
adc
sub
mov
lock
mov
test
mov
inc
inc
push
add
mov
leave
pop
dec
jno
inc
repnz
test
adc
fs
aas
pop
inc
daa
dec
stos
and
int
sub
call
rcr
retf
fs
pop
arpl
cmp
mov
or
inc
xor
cdq
repz
popf
std
(bad)
mov
jmp
add
dec
movs
outs
sti
(bad)
mov
jb
add
sbb
aaa
fidivr
sahf
add
(bad)
in
retf
jns
push
pop
gs
sub
add
cmps
inc
xor
outs
and
mov
les
push
into
(bad)
xchg
xchg
and
jecxz
xor
mov
xchg
in
shl
push
or
retf
test
pop
and
inc
pop
push
in
dec
cmp
xchg
movs
retf
and
cs
test
pop
pop
pop
call
xchg
es
cmp
jbe
push
mov
pop
and
mov
out
retf
repz
xlat
(bad)
or
pushf
cmp
or
cwde
xor
and
or
aam
or
add
aam
out
shl
or
repnz
outs
pop
dec
outs
xchg
dec
or
jnp
or
add
xchg
mov
adc
adc
in
sbb
lods
mov
scas
mov
dec
retf
push
inc
jb
xchg
test
jnp
mov
inc
call
pop
stc
jo
pop
fimul
aad
jmp
mov
ret
addr16
sub
dec
xor
xlat
xor
cmp
ret
xor
test
mov
imul
stc
mov
repnz
loope
in
jp
aam
retf
enter
outs
add
xor
push
loopne
cmp
fwait
int
clc
push
inc
lods
xor
mov
or
in
adc
xchg
(bad)
xchg
retf
mov
inc
movs
loope
in
les
xchg
pop
in
xor
sbb
in
pushf
call
xor
mov
inc
push
fdivr
hlt
int
ret
xchg
std
mov
xchg
cwde
mov
fimul
sub
out
pop
pop
shl
push
fisttp
leave
in
adc
push
xor
mov
jg
pop
jb
lds
jnp
dec
mov
loopne
push
sub
outs
rcl
inc
outs
jle
mov
mov
daa
nop
push
push
lds
jmp
mov
(bad)
cmp
mov
jnp
stos
ins
fld
cmp
inc
mov
push
inc
fidivr
loopne
jae
fs
xlat
je
fiadd
outs
fmul
(bad)
pop
mov
scas
ds
stos
fnstcw
jle
inc
popf
push
scas
adc
dec
mov
addr16
ret
dec
add
xor
cmp
dec
mov
mov
or
loope
pop
scas
xor
add
dec
fidiv
ret
add
mov
js
and
int3
cmps
loop
psllw
add
imul
mov
push
jg
stc
dec
mov
pop
ds
iret
mov
adc
mov
pop
rcl
jne
cld
jbe
fs
(bad)
in
cwde
out
mov
movs
cmp
and
rcl
jecxz
ins
rcl
pop
call
out
fist
dec
movs
pop
loope
ds
retf
and
mov
xchg
dec
cmp
(bad)
movs
inc
and
jp
arpl
xchg
repz
jae
loopne
xchg
out
popa
add
or
push
mov
cwde
xchg
imul
inc
std
jmp
xor
xchg
cmp
inc
adc
arpl
push
enter
xchg
aam
fcom
fcom
and
xchg
push
ret
lahf
imul
xor
sbb
into
xor
clc
dec
xchg
jmp
cvtps2pd
xchg
leave
cs
mov
iret
sbb
cmp
jae
push
std
xchg
mov
sbb
inc
inc
push
nop
fcom
gs
inc
ret
imul
ficom
cmp
les
outs
pop
idiv
dec
je
adc
stc
paddsb
(bad)
push
gs
cmps
mov
imul
mov
inc
movs
push
mov
movs
fs
loope
outs
inc
bound
je
(bad)
out
sub
test
stos
data16
stos
xor
and
sbb
mov
xor
or
push
and
mov
lock
push
sbb
push
out
retf
enter
add
lock
xchg
call
pop
and
test
mov
imul
fst
add
lea
cmp
sub
icebp
cmp
hlt
jnp
mov
(bad)
mov
or
jle
ins
cdq
fs
ins
sbb
sub
test
mov
(bad)
test
mov
cmc
or
sub
or
call
xor
mov
pop
or
int3
stos
add
aad
aad
ja
movs
mov
cmp
js
pop
jne
ss
icebp
gs
int3
sub
inc
jg
push
xor
mov
xchg
(bad)
gs
pop
jns
stc
ret
pop
inc
add
and
(bad)
pop
test
adc
xlat
adc
mov
stos
in
mov
mov
enter
adc
js
add
imul
js
ja
shl
jecxz
fwait
add
inc
loopne
ficom
out
jns
or
xor
rol
ret
pop
jnp
xor
sbb
and
mul
adc
imul
shl
gs
dec
cmp
repnz
hlt
hlt
cld
cmps
dec
hlt
xchg
xor
xchg
inc
imul
xor
das
xchg
div
adc
jl
frstor
retf
jnp
dec
add
jnp
and
mov
inc
je
cdq
and
push
push
mov
fisubr
aas
mov
cmp
push
pop
jae
push
mov
xor
das
sub
xchg
inc
icebp
add
and
and
add
and
sub
call
jecxz
scas
stos
cwde
jle
or
push
adc
mov
sbb
div
jle
push
mov
or
adc
xor
push
sbb
gs
sub
(bad)
imul
sbb
in
mov
test
xor
mov
inc
mov
repnz
ss
pop
dec
jo
pop
repz
dec
adc
sub
and
sub
cmp
xchg
mov
repnz
adc
daa
jecxz
out
(bad)
(bad)
xor
jge
lods
inc
or
push
enter
xor
cmp
dec
loope
call
ins
dec
or
inc
stos
aam
repnz
loope
adc
sub
std
sub
fidiv
mul
lods
inc
outs
aaa
adc
js
jns
lea
arpl
arpl
add
cli
xchg
dec
push
push
aam
jnp
loope
xchg
cmps
arpl
out
inc
jle
inc
pop
adc
lds
xlat
push
cli
xor
rcr
(bad)
out
cmp
aam
cmps
push
mov
pushf
mov
fisub
cmp
loopne
icebp
call
test
pushf
fidivr
pop
ret
leave
jbe
inc
mov
popf
fild
out
in
lds
pop
adc
sar
or
jno
sbb
pop
scas
fldcw
jle
dec
mov
jge
xlat
rol
mov
leave
inc
sbb
loopne
aad
fnstcw
iret
repz
ja
xor
sub
out
es
push
sbb
fucomi
add
nop
cwde
jle
enter
jl
mov
fbstp
iret
in
or
mov
popa
or
jns
stos
ret
cmp
adc
adc
mov
sbb
jnp
in
jge
push
jb
add
iret
jo
scas
pop
mov
xor
cmps
mov
add
int
xor
sub
aas
imul
popf
mov
push
stc
icebp
mov
inc
sub
mov
adc
xlat
inc
cwde
call
fnstenv
sub
jl
sbb
shl
push
xchg
xchg
outs
jmp
xor
jnp
mov
(bad)
sti
sub
adc
cmp
cld
pop
push
push
imul
add
outs
fcmovnbe
xor
lea
retf
xor
pop
push
scas
inc
mov
push
cmps
xchg
jmp
add
inc
(bad)
dec
test
test
mov
dec
mov
fsubr
mov
sbb
dec
sbb
aas
and
pop
call
int
cmp
out
stos
or
or
or
jle
jecxz
repz
ja
mov
add
mov
jl
and
xchg
cmc
dec
arpl
cmp
or
stc
loope
daa
cwde
add
or
cmp
hlt
cmp
ret
push
adc
mov
or
sub
ja
gs
or
sbb
imul
cdq
inc
les
stos
(bad)
push
stos
xchg
add
aad
mov
loop
cli
cmp
shl
popa
mov
sbb
enter
(bad)
mov
aad
scas
std
dec
cdq
fidiv
jmp
push
mov
xor
xlat
xchg
cdq
adc
clc
cmp
mov
xchg
call
sbb
mov
cmc
add
add
sahf
data16
pop
push
adc
loopne
jp
(bad)
mov
pop
jl
jp
cmp
xlat
fimul
dec
out
push
les
ins
inc
mov
mov
or
add
jnp
leave
lods
mov
and
dec
fistp
iret
repz
sub
mov
sub
xchg
fisubr
div
in
stc
pusha
jmp
pop
xchg
(bad)
push
ins
jg
sub
jne
cmp
push
xor
adc
xor
xchg
icebp
fstp
mov
dec
cmps
dec
push
loopne
repnz
sbb
push
adc
add
hlt
or
xlat
daa
(bad)
fcom
push
dec
push
sbb
mov
popf
ds
mov
sub
in
cld
cmp
sub
stos
mov
mov
inc
imul
jmp
pop
jnp
mov
and
(bad)
fmul
repnz
dec
push
xor
cpuid
ds
pop
mov
xchg
movs
enter
fs
add
test
sbb
lahf
scas
sbb
pop
hlt
aaa
mov
stc
mov
lds
movs
add
push
test
shl
mov
pop
jp
or
pop
cmc
mov
pushf
loop
neg
enter
(bad)
pop
push
sub
xchg
rcr
hlt
mov
(bad)
mov
sbb
xchg
dec
xchg
jb
arpl
adc
rcr
cld
add
adc
or
add
xor
out
adc
rcl
js
sub
adc
popa
xchg
mov
cmp
neg
bound
fld
xor
lods
add
scas
ja
pop
lahf
jnp
mov
add
mov
scas
loope
xor
lods
xchg
ud0
xor
jecxz
jmp
pop
push
adc
adc
jmp
(bad)
sahf
call
add
outs
add
dec
or
aas
xor
cs
dec
jl
retf
shl
(bad)
or
lds
adc
pusha
imul
push
out
test
in
lea
or
dec
mov
nop
xchg
pop
stos
test
jmp
mov
push
mov
fwait
adc
pop
sub
repz
hlt
pop
movs
lock
sar
inc
sahf
inc
sbb
cmp
push
pop
and
retf
sbb
or
push
add
sbb
or
jle
out
pusha
adc
test
or
cs
mov
das
popf
xor
(bad)
arpl
mov
or
std
add
mov
xor
mov
adc
aaa
stos
ja
xor
mov
xchg
ja
outs
int
jnp
(bad)
fcomi
jmp
push
fadd
imul
xlat
icebp
cwde
bound
mov
jg
ror
mov
pop
add
leave
xchg
int3
sub
sub
xlat
xchg
cwde
add
mov
sbb
loop
in
je
movs
movs
ins
fnstcw
xchg
pop
jmp
inc
es
sub
jb
les
ja
jmp
fistp
nop
mov
xchg
or
sbb
dec
das
xchg
ins
enter
pop
ss
bound
sub
scas
xor
aaa
lods
jno
dec
pop
ins
push
adc
cmp
clc
(bad)
mov
scas
add
test
nop
cwde
pop
ror
cmps
aaa
jge
add
ins
call
rcr
jno
(bad)
retf
pop
(bad)
in
imul
je
pop
stc
xchg
push
adc
jb
push
nop
pusha
int
scas
or
mov
out
fcmovne
scas
sbb
hlt
mov
imul
(bad)
retf
mov
test
and
sub
(bad)
jne
ja
aas
es
imul
add
sub
fisubr
cmp
leave
push
sub
add
int3
xchg
addr16
inc
shr
retf
cli
mov
retf
add
xchg
xchg
mov
add
ret
jo
data16
mov
(bad)
fld
js
ds
in
cmp
add
ret
inc
xchg
mov
push
cld
xor
shl
sti
xor
jmp
ja
dec
xchg
rcr
jmp
cdq
in
xchg
jmp
jne
push
inc
push
jge
push
js
push
or
adc
and
gs
arpl
and
push
xchg
into
mov
ret
vmulsd
inc
adc
mov
add
in
and
(bad)
cmp
mov
pop
pop
push
aad
fcmovnu
mov
or
jo
sbb
sub
addps
push
aam
fnstcw
dec
add
jmp
lods
push
pop
push
je
pop
in
nop
jns
sbb
sub
aad
gs
rcl
mov
add
xchg
call
es
cmp
hlt
add
cdq
arpl
aas
sub
pop
adc
dec
ss
mov
(bad)
xchg
jmp
ins
sbb
aad
repz
xchg
xor
xor
les
jae
pop
and
push
push
popf
popa
retf
push
xchg
push
dec
cs
not
cmc
lods
dec
movs
mov
or
or
outs
dec
ror
out
jbe
movs
retf
std
cmp
pop
test
mov
imul
mov
into
push
push
inc
dec
and
stos
loop
int3
jl
stc
loop
mov
mov
push
outs
fwait
mov
push
mov
fld
ins
lods
cmp
pop
nop
out
aaa
jnp
pop
pop
aaa
(bad)
sbb
es
inc
dec
ss
mov
pop
ficom
fsub
dec
jg
pop
jmp
mov
cmc
dec
mov
stos
pop
outs
sbb
dec
or
movs
popf
xlat
and
pushf
fnsave
dec
xchg
movs
and
bound
jbe
sbb
jp
cmp
add
pop
call
ins
in
ds
xchg
push
adc
inc
mov
int
(bad)
retf
or
jp
icebp
out
mov
push
sbb
mov
ffreep
sub
fwait
test
lock
mov
dec
xchg
dec
xchg
push
sub
dec
pop
cmp
retf
or
out
pop
(bad)
and
cmp
sub
daa
dec
push
xchg
pushf
dec
pop
out
fcomp
repz
test
fmul
out
push
dec
push
inc
mov
xchg
jns
fst
scas
sub
idiv
jge
test
cld
mov
mov
inc
jne
pop
outs
lock
sbb
push
mov
xchg
test
mov
or
jge
sub
cmps
mov
pop
and
adc
xchg
lahf
jbe
pop
or
leave
loop
jecxz
add
fldlg2
(bad)
xchg
adc
nop
push
jae
mov
stos
int3
inc
fisub
fnsave
pusha
or
adc
retf
cld
mov
pop
adc
sub
jge
pop
in
dec
add
push
lods
adc
jmp
lods
inc
mov
dec
sbb
repz
pop
mov
stos
(bad)
ds
mov
push
jae
xchg
or
aaa
dec
movs
ins
push
popf
mov
pop
cmp
inc
push
push
mov
call
inc
shl
sbb
inc
push
shl
daa
sub
idiv
and
xor
js
js
clc
xchg
inc
push
lahf
out
int
sub
gs
mov
jecxz
cld
mov
pop
xchg
loopne
fldenv
data16
fidivr
fidivr
pop
neg
sbb
lock
call
shr
fist
nop
xor
loopne
xlat
cdq
mov
adc
or
(bad)
add
sub
inc
outs
ret
jmp
nop
lahf
aam
inc
cmp
jb
jge
hlt
lods
aad
hlt
cmp
xchg
sub
das
retf
outs
mov
mov
fwait
xchg
data16
retf
push
jbe
sub
xor
or
inc
popf
xchg
test
aaa
std
pushf
mov
cwde
inc
pop
mov
(bad)
dec
outs
sub
sbb
test
cld
sbb
iret
mov
ja
ds
xchg
pop
mov
fsub
mov
jecxz
(bad)
loop
ret
stc
mov
pushf
sbb
jge
test
cwde
icebp
dec
ret
pop
mov
mov
add
int
aad
lods
mov
add
aad
call
popf
xor
fadd
(bad)
add
jne
push
mov
xchg
es
gs
xor
arpl
push
bound
ins
fld
sub
mov
xchg
out
mov
cmp
cmps
xchg
xor
test
lahf
out
xor
nop
es
hlt
dec
cmp
inc
cdq
cmp
xor
add
std
aad
or
cmp
jbe
dec
jmp
lods
ja
mov
fdiv
or
int
pushw
sub
cld
jmp
stos
mov
test
xchg
dec
adc
dec
dec
jp
ins
loop
js
mov
aad
repnz
pop
inc
or
and
in
outs
mov
jnp
mov
add
inc
retf
(bad)
adc
push
call
pop
mov
fstp
test
sub
pop
loop
lea
dec
enter
mov
cmp
sub
mov
and
xchg
pop
rcl
pop
ds
aaa
adc
sub
sbb
or
stos
or
test
xchg
leave
pusha
scas
mov
cmp
pop
mov
sahf
cmp
pop
pop
cmp
ss
cwde
inc
dec
(bad)
sub
jne
ss
inc
pusha
jmp
fst
(bad)
mov
das
(bad)
mov
sub
ret
mov
cli
adc
xor
cmp
mov
retf
mov
jb
stos
pop
sbb
ss
pop
adc
lods
leave
in
lds
pop
jo
jl
cmps
dec
mov
xchg
(bad)
retf
in
retf
jb
ins
cmp
xchg
outs
sub
clc
xor
test
sub
push
jae
push
repnz
div
movs
pop
stc
xor
xor
fmul
cs
mov
mov
retf
bound
inc
jmp
mov
addr16
pop
hlt
dec
push
or
xchg
and
ret
out
adc
adc
int3
fcomi
loop
add
sbb
mov
cmp
mov
inc
jno
mov
push
push
fist
sbb
lock
mov
jae
dec
leave
sbb
test
lods
cmps
cmp
inc
outs
pop
push
shr
or
outs
aas
cmp
xchg
xchg
popa
push
pop
fs
xchg
pop
(bad)
adc
or
mov
outs
dec
jne
in
jmp
cli
fsub
stos
cmc
pop
adc
inc
or
inc
sub
test
dec
sahf
call
pop
cld
sub
cmps
cmps
sbb
sub
arpl
mov
std
jp
or
int
pop
pop
jp
clc
jmp
loopne
aaa
or
jge
fsub
inc
(bad)
cld
sub
sub
mov
leave
inc
outs
inc
dec
jecxz
loope
lahf
sbb
cmp
dec
stos
cmps
cld
jo
mov
pop
mov
jecxz
mov
inc
dec
iret
inc
call
mov
mov
test
stos
jbe
xor
leave
xchg
fs
sub
mov
popf
hlt
movs
nop
xchg
xchg
hlt
out
fmul
lahf
dec
cmp
sbb
mov
adc
loopne
scas
retf
xor
mov
dec
cmps
ja
cmps
push
cmp
(bad)
call
or
jnp
sub
in
adc
das
aad
add
pop
push
mov
mov
stos
sbb
iret
into
jmp
popa
sub
mov
jp
cli
mov
repnz
popf
test
cs
(bad)
ja
fldl2e
jns
ds
sbb
int3
cmp
movs
cli
dec
aam
(bad)
ja
cld
lods
add
lods
lahf
sub
fistp
(bad)
dec
dec
mov
jmp
xor
es
pop
in
mov
cmc
out
xchg
sbb
sub
push
pop
xchg
mov
data16
xchg
add
mov
out
or
push
jno
in
mov
fs
jle
mov
mov
ficomp
dec
sti
stos
rcr
jp
xchg
pop
ja
(bad)
fmul
mov
fdivr
sbb
sti
push
mov
test
add
push
(bad)
xchg
and
retf
call
mov
xor
xchg
aaa
or
inc
scas
jno
add
mov
mov
jns
mov
mov
in
int3
adc
(bad)
in
mov
test
cmps
loopne
sub
sub
loope
push
(bad)
out
pop
sub
sub
jne
sahf
push
xchg
ret
add
data16
not
pop
jae
cmps
sbb
mov
fiadd
stos
jo
iret
jp
or
mov
sti
dec
pushf
add
jmp
or
adc
sbb
sbb
mov
loopne
cmp
push
sub
ins
in
pop
add
sbb
mov
mov
jg
jae
sar
cmp
mov
data16
fldenv
jecxz
xor
daa
and
push
outs
scas
mov
loop
sbb
cmc
popf
fwait
lds
test
pop
sahf
mov
out
out
pusha
xor
daa
sbb
jo
mov
aaa
mov
mov
dec
xchg
call
aaa
std
inc
retf
lock
sbb
pop
addr16
loopne
mov
loope
xor
sub
jmp
pop
add
iret
mov
cmp
add
xchg
mov
loope
adc
in
adc
xchg
outs
retf
popa
push
push
pop
mov
call
sbb
(bad)
inc
cdq
lds
or
dec
and
sbb
sbb
cmps
packssdw
push
inc
js
stc
mov
stos
test
cwde
ins
cmp
cmp
cmps
cmc
jecxz
aad
inc
jmp
and
push
adc
sti
jl
cmp
sbb
xchg
dec
(bad)
jns
inc
pop
push
mov
or
arpl
jmp
rcr
loop
cmp
sub
push
sti
xor
sub
or
and
shr
cwde
cli
and
call
ficomp
outs
hlt
fcmovne
jg
loope
je
stc
es
xor
add
push
outs
push
in
(bad)
adc
into
or
js
bound
sbb
dec
mov
je
cmp
pusha
(bad)
in
(bad)
fild
shl
aas
in
dec
sbb
mov
in
adc
fist
xchg
out
lock
cmp
and
jne
popa
fnstenv
jecxz
sub
and
call
xchg
sbb
xlat
fstp
sub
dec
cmp
lds
pop
stc
jmp
in
inc
jae
sahf
das
add
stos
push
dec
std
out
sar
inc
add
mov
pop
and
pop
pop
int
mov
xor
mov
scas
mov
inc
out
jne
and
daa
in
jmp
mov
pushf
sbb
jae
mov
xor
pop
shr
clc
mov
jmp
xchg
push
inc
push
ror
mov
jae
loope
out
inc
ret
ja
jno
out
addr16
sar
scas
mov
test
mov
adc
inc
iret
gs
rsqrtps
cmc
pop
push
fcom
jg
sub
outs
bound
push
cli
stc
xchg
ror
cwde
xor
lock
fnstsw
xor
push
hlt
ins
lods
jno
sub
ffreep
and
dec
jo
sub
sub
repnz
cmp
xchg
shl
jo
mov
mov
cs
jg
mov
mov
stos
fsubr
fild
dec
in
jns
jbe
ins
mov
mov
jl
dec
jecxz
mov
push
movs
push
arpl
mov
dec
cmp
sub
pop
pop
jbe
sahf
cmp
imul
and
xor
add
mov
mov
sbb
test
shl
jmp
push
or
shl
and
jns
stc
addr16
int
add
or
push
xor
cmp
cmps
das
sub
mov
lds
mov
and
rol
or
sahf
jb
bound
mov
dec
outs
and
int3
pusha
mov
pusha
loopne
jg
dec
in
pushf
int
test
or
int3
mov
nop
in
retf
cmps
es
stc
movs
cmp
add
push
and
xor
mov
imul
pusha
xor
(bad)
sti
jle
jae
xor
fwait
adc
lahf
jge
add
jmp
xchg
add
jnp
dec
sub
jo
sti
push
clc
stc
or
pop
lds
fs
sub
sbb
mov
imul
and
call
out
(bad)
mov
out
setns
cmp
xor
push
aad
push
or
popa
in
loope
and
cmp
js
mov
jmp
sbb
aad
mov
mov
adc
clc
mov
push
cmp
mov
adc
cmps
adc
pop
sub
ficomp
test
retf
xchg
inc
pop
(bad)
xchg
aas
repz
sbb
and
mov
pop
icebp
(bad)
leave
repz
fs
dec
inc
and
pop
pushf
push
or
aam
data16
(bad)
push
retf
test
cmc
push
jbe
sub
je
xor
push
in
sti
daa
cmp
sub
xor
dec
movs
mov
sub
or
retw
sub
std
jb
pop
cmp
push
xchg
pop
and
inc
nop
jb
(bad)
and
jle
(bad)
addr16
cmp
push
jo
clc
mov
cdq
jmp
mov
jbe
cmps
inc
sbb
mov
jmp
nop
pop
add
xor
ja
(bad)
out
mov
xchg
ja
inc
or
in
adc
ret
mov
pop
bound
test
or
pop
xchg
jle
je
retf
(bad)
out
or
adc
rcl
out
loope
pop
cmp
or
(bad)
jmp
dec
xor
dec
pop
jne
in
(bad)
lods
je
ja
pop
loopne
xlat
stc
sub
push
das
scas
imul
(bad)
adc
or
sub
push
xchg
leave
sahf
dec
sar
jle
push
sbb
or
pop
repnz
mov
cmp
inc
fdivr
test
push
test
popf
ret
mov
pop
jnp
dec
inc
push
clc
and
fst
or
hlt
push
je
ficomp
jmp
jno
imul
(bad)
ja
inc
shl
dec
and
pop
xor
sub
jl
pop
fild
add
std
inc
sbb
call
inc
sub
push
sbb
or
push
adc
xchg
cmp
pop
cs
ja
cdq
sub
(bad)
xor
add
push
scas
(bad)
cmp
out
jne
scas
(bad)
hlt
mov
daa
xchg
lds
mov
aad
leave
(bad)
lods
rcr
mov
pushfw
dec
cmp
outs
in
aaa
sbb
popa
movs
jecxz
retf
adc
stc
test
in
std
cmp
cmp
int3
push
out
shl
mov
inc
nop
dec
outs
add
loope
fldcw
mov
das
push
dec
pushf
cmc
or
jbe
mov
adc
pop
jg
mov
and
jmp
push
push
test
mov
and
lods
pop
mov
lea
push
neg
and
adc
int3
ins
aam
ja
lods
adc
jno
push
mov
mov
inc
std
ret
call
cmp
cmp
jb
push
or
sub
jge
and
pop
xor
and
mov
inc
call
mov
addr16
ins
sbb
sbb
cld
mov
mov
rol
leave
jae
xchg
mov
test
jecxz
inc
and
pusha
sti
(bad)
jl
jmp
out
sahf
cmc
ins
test
mov
xor
xchg
mov
imul
outs
sub
out
cmps
jb
or
mov
es
iret
cmp
jmp
jns
cmps
and
cwde
cmp
xor
pop
or
mov
sti
dec
frstor
sbb
push
(bad)
lods
icebp
rol
sbb
mov
(bad)
adc
xchg
shr
bound
outs
and
inc
mov
(bad)
iret
je
jno
mov
repz
out
loop
and
push
jl
in
inc
arpl
jno
dec
aad
push
loope
xor
outs
dec
push
ja
div
loopne
out
sbb
enter
push
sub
out
mov
dec
mov
mov
push
(bad)
imul
pushf
and
add
(bad)
lds
int
xor
jnp
inc
cwde
mov
repnz
jp
mov
dec
clc
mov
mov
cmc
shl
or
ins
mov
jae
sub
loop
out
sbb
push
hlt
sbb
mov
mov
push
ss
mov
mov
mov
fs
enter
inc
cmps
and
test
jb
xchg
or
push
lods
sub
ja
neg
imul
pushf
xor
sbb
push
mov
jne
fwait
ds
jns
retf
xor
push
in
inc
mov
or
aaa
push
je
cli
enter
inc
ds
or
jbe
rcl
pop
mov
cld
add
mov
sbb
into
fidivr
lods
and
or
les
sub
inc
in
es
and
out
pop
cmp
ror
xchg
ret
lds
pushf
in
xchg
xchg
cmp
iret
xor
adc
test
push
adc
in
adc
mov
adc
daa
pop
test
sbb
mov
test
jl
repnz
addr16
movs
jae
fs
dec
pop
xchg
xor
and
cmp
in
je
les
add
mov
pop
movs
stos
xor
push
and
jmp
rcl
in
dec
jbe
and
popf
pop
mov
js
jg
js
dec
push
call
mov
push
inc
in
push
lds
std
xchg
int
movs
mov
stc
push
scas
xchg
clc
cli
xchg
enter
jmp
cld
sbb
cmp
pop
mov
xchg
jnp
retf
push
xchg
out
jg
addr16
mov
mov
pop
std
mov
adc
aad
(bad)
ret
xor
(bad)
fdiv
add
repz
cwde
dec
mov
repnz
sbb
aas
jns
xchg
mov
leave
pop
test
mov
inc
push
ins
cmp
in
or
out
in
sub
pushf
hlt
push
cmp
sbb
mov
mov
pop
xchg
adc
int3
or
imul
mov
(bad)
mov
cmp
push
cmp
sbb
sbb
jecxz
add
push
xchg
lock
mov
xchg
outs
and
rcl
or
in
inc
imul
cmp
mov
sub
mov
(bad)
sti
or
mov
pusha
les
ss
xchg
lahf
ret
or
dec
mov
xchg
imul
mov
jnp
inc
rol
sbb
add
or
cmps
out
dec
popf
jne
test
xchg
fnsave
mov
aas
aas
cmp
cld
retf
jo
aaa
sub
mov
into
popa
mov
and
into
and
rcl
jb
inc
fnsave
lods
movs
ret
xchg
test
fnstcw
fsub
add
mov
(bad)
jg
sbb
cmps
repz
daa
jo
in
(bad)
into
mov
icebp
bts
imul
sbb
inc
dec
cmp
das
xchg
rol
xchg
xchg
or
cdq
and
sahf
std
lock
retf
daa
push
jmp
jo
cmp
jmp
pop
mov
rcl
mov
xchg
icebp
stos
adc
repnz
mov
xor
xchg
xchg
shl
mov
sub
adc
sub
shr
or
das
ror
push
sbb
das
adc
mov
mov
and
sub
xor
std
test
mov
push
pop
into
cmc
mov
mov
test
inc
daa
icebp
lea
lds
inc
(bad)
movs
jmp
imul
movs
aam
inc
xor
jl
mov
ss
fidivr
adc
jge
in
sbb
push
jne
or
mov
jge
stos
cs
retf
lods
rcr
mov
mov
jne
mov
jmp
(bad)
mov
daa
push
rol
or
xchg
sar
adc
pop
dec
jo
dec
aas
mov
lahf
jnp
jmp
and
pop
jecxz
pusha
add
push
fwait
pop
test
cmp
or
enter
mov
mov
test
icebp
xor
(bad)
mov
test
out
dec
xchg
push
(bad)
repz
mov
adc
add
sti
and
adc
pop
push
das
ret
cld
in
sar
pop
std
adc
push
inc
cmp
cmp
cmp
ds
ins
inc
xor
pop
test
lock
xchg
aas
loop
into
outs
movs
ret
imul
int3
mov
mov
mov
xchg
cmc
or
adc
push
repz
rol
out
sti
bound
sbb
inc
cld
(bad)
cmp
adc
leave
retf
sub
mov
adc
lods
sti
int
mov
add
push
bound
mov
pop
push
xor
mov
shl
test
push
mov
(bad)
test
push
enter
mov
cld
test
icebp
dec
mov
in
xchg
inc
jnp
or
fs
loop
xor
ret
imul
outs
jno
(bad)
and
mov
out
cmp
mov
loope
ficomp
pop
cmp
push
pop
data16
imul
or
popa
pop
call
repz
js
out
adc
rcl
mov
pop
adc
cmp
add
ret
test
inc
cs
push
fiadd
adc
cmp
stos
push
jmp
mov
(bad)
push
sbb
dec
mov
loop
mov
sub
add
inc
sbb
dec
mov
cmc
jmp
rcl
jne
js
xchg
sbb
(bad)
fisttp
xchg
int3
inc
and
outs
mov
addr16
mov
stc
xchg
add
inc
fld
push
shl
fistp
sbb
test
push
call
jecxz
ror
scas
jae
dec
jp
mov
das
neg
sbb
xchg
mov
add
inc
call
daa
cs
inc
je
fadd
add
adc
mov
adc
call
push
aas
loope
cmc
dec
in
sub
aaa
mov
mov
bound
add
dec
in
fimul
pop
lea
scas
sbb
stos
pushf
pop
lods
aam
imul
jecxz
or
xor
popf
mov
push
loop
loop
and
fwait
jle
outs
xchg
sub
cmc
aam
and
xor
adc
sub
jle
jae
pop
pop
daa
add
test
arpl
add
sti
push
call
ss
or
retf
mov
hlt
into
xor
xchg
inc
ficom
es
cmp
or
pop
push
js
cmp
rol
sub
jmp
dec
or
jecxz
push
push
jnp
xor
or
mov
sub
int
sbb
or
shl
lds
imul
fs
jno
pop
repz
push
rol
movs
aad
ins
xchg
pusha
dec
aaa
sbb
mov
mov
fstp
inc
pop
test
xor
inc
mov
cmc
ror
xlat
(bad)
mov
aam
mov
rcl
jne
jns
jp
jns
arpl
xor
sbb
(bad)
xchg
add
outs
fcmovu
test
mov
cmps
adc
cli
mov
adc
inc
inc
mov
data16
js
test
xchg
sbb
jnp
call
loope
je
arpl
lods
gs
aad
fimul
sbb
dec
scas
inc
push
iret
pusha
test
or
pop
add
call
inc
imul
aad
frstor
inc
pop
jo
shl
inc
cmp
and
push
js
retf
jmp
mov
add
mov
retf
push
jbe
and
lock
cwde
outs
cwde
push
into
xor
jns
fnsave
iret
adc
test
aaa
out
int
movs
test
sub
sbb
cmp
div
fisubr
pop
or
shl
mov
ret
sub
mov
aam
push
jo
sbb
mov
and
sbb
mov
mov
cmp
pushf
icebp
cmps
xchg
cld
sahf
mov
lods
mov
adc
sbb
add
add
jg
leave
fnstcw
jo
ins
xchg
or
(bad)
mov
cld
shr
pop
not
pop
jg
out
(bad)
lods
test
mov
jbe
aam
mov
jge
fnsave
jno
(bad)
les
call
mov
jp
mov
cmp
div
adc
jne
rol
mov
push
pop
xchg
and
scas
dec
fidiv
nop
fucom
push
xor
sub
pop
ins
gs
ja
cmc
xchg
push
popf
xchg
rcr
xchg
cmp
jmp
sti
push
push
loopne
xchg
frstor
ficomp
loope
pop
mov
(bad)
aas
cmps
jp
cmp
loope
cmps
jge
inc
pop
out
sub
aaa
mov
adc
inc
push
loopne
sub
push
enter
sbb
push
(bad)
sbb
add
in
fcom
ja
sub
cmc
xor
cmp
out
and
leave
jmp
and
mov
scas
cmp
inc
adc
adc
dec
and
adc
icebp
je
sbb
xor
jl
(bad)
fistp
fs
pop
(bad)
mul
aam
scas
test
xchg
xor
inc
mov
or
sub
icebp
xchg
sbb
push
pop
fcom
xor
retf
push
push
pop
cdq
xchg
xchg
sbb
push
adc
mov
std
add
daa
icebp
mov
int3
pop
int3
push
shr
enter
in
dec
jle
mov
jmp
jl
inc
cmc
mov
cmp
and
cmp
mov
call
sbb
jle
ins
(bad)
xchg
mov
jae
ja
sub
out
or
les
repnz
xchg
pusha
ret
ror
mov
or
cmp
xchg
jnp
dec
cwde
push
jp
addr16
xor
div
adc
test
retf
test
mov
mov
jne
sti
int
and
leave
(bad)
and
sub
xchg
mov
inc
vandnps
sub
mov
int
call
out
sbb
aad
es
xor
jmp
stos
push
mov
or
xor
cmp
popa
mov
mov
cdq
aad
sbb
cmp
fwait
(bad)
js
push
arpl
xchg
loop
jo
cdq
inc
sub
sub
mov
and
lods
mov
test
adc
inc
jecxz
inc
pop
mov
ror
cwde
mov
mov
fadd
push
arpl
stos
loop
rcl
adc
movnti
jae
cmp
and
rcl
or
mov
mov
into
xchg
or
outs
sub
xchg
push
inc
ret
aad
sub
mov
retf
test
mov
call
(bad)
call
aas
mov
adc
(bad)
or
and
test
inc
les
in
pop
pop
mov
stos
in
pop
jmp
imul
push
mov
sahf
les
cmp
fbstp
mov
data16
(bad)
pop
mov
inc
xor
scas
es
out
fcom
repz
out
jle
loop
fs
fst
out
out
imul
add
retf
outs
adc
nop
inc
jp
aam
mov
(bad)
mov
xor
mov
adc
pusha
or
aas
js
es
dec
and
(bad)
aad
mov
push
imul
in
cmp
leave
arpl
rcr
xchg
cmp
aad
test
mov
sbb
or
lea
xchg
jmp
bound
(bad)
mov
nop
(bad)
lods
add
push
cli
imul
hlt
pop
xchg
pop
sar
adc
xor
bound
bound
pusha
xor
adc
rcr
leave
imul
adc
push
sbb
push
or
dec
fcomp
daa
pusha
out
pop
xchg
rcl
sbb
ins
fisttp
mov
sub
mov
ins
leave
pop
jge
jae
ds
fidivr
jmp
pop
push
pop
adc
jp
inc
xchg
popa
sbb
sub
cmp
rcl
or
ficomp
fdivr
pusha
cmp
test
int
rcl
ret
addr16
pop
call
dec
cmps
cwde
fidivr
add
std
out
out
pop
aas
xchg
inc
sub
jno
sahf
inc
ror
fistp
rcl
or
pop
loop
adc
mov
mov
scas
cli
jne
and
(bad)
test
arpl
pop
dec
push
into
lods
ins
jbe
data16
rcr
mov
daa
es
mov
sub
(bad)
in
sbb
(bad)
mov
dec
inc
add
in
add
mov
cmp
jnp
or
pop
les
mov
outs
jecxz
inc
pop
cmp
sub
loope
jecxz
fmul
or
clc
mov
pop
mov
inc
scas
daa
scas
aam
adc
xor
lahf
imul
es
(bad)
js
and
sub
sbb
arpl
movs
cmps
adc
lods
dec
adc
add
xor
jnp
mov
cmps
pop
mov
sar
mov
jecxz
cmp
jns
in
call
fwait
mov
test
int
mov
cdq
call
enter
push
pop
and
out
inc
imul
jnp
(bad)
xchg
pop
push
nop
add
jnp
repnz
xchg
jmp
xlat
push
sub
push
cmp
sub
popa
sub
dec
or
enter
pushf
mov
es
inc
ret
fidivr
adc
cmc
fstp
mov
fadd
jo
icebp
in
(bad)
push
popf
(bad)
out
jns
push
cdq
aad
sti
iret
test
sbb
pushf
imul
leave
sub
shr
mov
ins
out
(bad)
mov
nop
call
pop
sbb
test
scas
scas
shl
inc
(bad)
mov
in
icebp
test
xchg
and
cs
pop
mov
adc
int3
jg
lock
retf
outs
stos
arpl
xor
nop
outs
imul
es
xsha256
cmps
nop
jne
popf
jl
ret
call
mov
call
sbb
in
lods
in
stc
push
xchg
fs
adc
stos
data16
jo
sahf
das
iret
xchg
add
jge
inc
mov
ret
mov
mov
or
or
pop
data16
pop
mov
push
bound
mov
push
push
ins
jmp
mov
imul
daa
sub
xchg
in
js
push
sahf
push
and
clc
popf
lahf
mov
std
sahf
int
sti
sub
sbb
scas
mov
xor
and
jo
inc
push
adc
cli
adc
inc
or
ss
cmp
out
jg
sub
xor
sub
adc
jnp
movs
cld
dec
jg
fadd
nop
adc
xor
dec
lds
call
hlt
cmp
ja
iret
dec
or
loope
into
daa
mov
add
fdiv
je
arpl
into
jecxz
out
mov
out
xor
add
movs
xchg
inc
add
icebp
aad
fs
es
movs
pop
aad
ds
mov
int
and
jmp
fs
jp
rol
jbe
xchg
ret
popf
xor
xchg
gs
stc
test
sub
stos
cmc
jns
adc
mov
dec
retf
sbb
ror
imul
pop
pop
iret
or
dec
arpl
dec
xor
sbb
nop
js
jae
gs
sub
push
and
movs
int3
sub
sbb
dec
pop
adc
repnz
sbb
imul
sahf
jo
mov
outs
xchg
nop
sbb
adc
scas
pop
dec
cmp
repnz
pop
or
or
cmp
lock
xlat
sub
movs
retf
xchg
pop
and
push
daa
cmc
or
adc
outs
ret
mov
stos
(bad)
rcl
clc
xor
aaa
mov
test
pop
xchg
ss
sti
ss
icebp
or
xchg
(bad)
fstp
xor
mov
xor
out
cmps
cs
xchg
es
pusha
add
hlt
xor
addr16
sub
scas
inc
out
cdq
or
ja
jmp
or
cli
dec
arpl
cmp
xor
mov
in
call
mov
inc
loope
adc
mov
cmp
test
cmps
mov
jg
cmp
popf
sub
pop
jecxz
cmc
cmc
xor
sub
ins
les
dec
fmul
mov
in
bnd
std
cld
jecxz
scas
mov
cmp
lea
adc
loope
and
mov
cmc
aas
xchg
or
shl
fiadd
into
rcl
jnp
fwait
rol
aas
mov
gs
xor
gs
and
mov
clc
icebp
mov
sti
cdq
xlat
inc
dec
ja
repnz
dec
add
sub
xlat
cmp
or
sbb
pop
dec
mov
bound
enter
popa
push
(bad)
push
pushf
jge
in
in
jp
sar
jl
or
call
imul
test
dec
mov
cdq
call
add
pop
test
sbb
mov
movs
sub
aam
pop
add
test
xchg
push
push
push
in
aam
(bad)
push
xchg
sbb
jmp
dec
adc
nop
pop
(bad)
(bad)
sub
inc
ror
add
cmps
shr
xchg
adc
xchg
cmps
cmp
cmp
or
dec
or
sbb
push
sbb
cmp
dec
rol
jno
push
clc
fimul
(bad)
sahf
in
adc
std
ret
inc
fiadd
(bad)
add
xchg
push
loope
sub
ret
lods
adc
fisttp
clc
dec
int
adc
push
lahf
push
mul
enter
mov
adc
jge
adc
mov
mov
or
popf
mov
gs
and
shl
inc
adc
pop
shr
inc
mov
fst
in
into
push
push
inc
cmp
adc
or
jl
push
shl
push
or
jbe
sbb
mov
cmps
pop
popf
xor
pop
sub
les
inc
push
push
push
das
lods
or
jge
xchg
rol
icebp
das
mov
xchg
rol
popa
test
lahf
adc
cmps
xchg
inc
sbb
test
xchg
xor
ins
dec
xor
sar
fidiv
aas
xor
xor
stos
cdq
sbb
jmp
xchg
push
ret
xchg
inc
push
pop
or
cwde
sbb
mov
mov
rep
js
icebp
cmp
sub
in
push
jmp
pop
cli
mov
xor
hlt
mov
inc
push
sub
cmps
cmp
into
jecxz
ds
sbb
std
add
inc
ret
aam
stc
into
imul
inc
lock
and
mov
shl
ret
and
mov
or
jnp
jns
jmp
into
fmul
pop
sbb
loop
mov
push
cld
sub
aaa
xchg
add
pop
jg
mov
add
mov
scas
idiv
jmp
xchg
sbb
icebp
jb
stc
loop
repnz
scas
dec
xchg
adc
cmc
fstp
sub
push
xor
stos
mov
mov
xchg
inc
cmps
sahf
inc
mov
cmc
enter
cmp
jbe
mov
dec
dec
ror
mov
mov
sbb
ss
addr16
push
sbb
cs
mov
adc
adc
lds
mov
test
xchg
inc
jmp
mov
pop
test
push
xor
dec
xor
into
movs
mov
jbe
stos
ja
retf
call
xor
fimul
mov
rol
loope
and
mov
or
jle
or
outs
jl
xor
rol
dec
pop
into
fist
stos
sbb
leave
add
out
and
loop
inc
dec
push
mov
lds
pop
lds
and
and
inc
mov
cmp
arpl
mov
jmp
jne
mov
and
jle
lock
pop
sti
xchg
mov
outs
enter
loope
push
push
mov
imul
pop
scas
fwait
adc
dec
(bad)
lahf
shr
dec
or
in
clc
dec
imul
jp
pop
or
addr16
mov
in
lds
mov
inc
in
dec
out
fs
jp
push
cmp
shl
mov
dec
mov
add
fdivrp
popf
mov
in
test
push
fiadd
push
or
fild
std
add
iret
xchg
push
fild
jge
adc
jmp
adc
dec
sub
adc
lahf
sbb
mov
jbe
inc
call
stos
int3
icebp
sub
retf
test
push
mov
jmp
mov
sbb
(bad)
mov
or
mov
(bad)
retf
imul
fmul
cmp
xor
xor
fistp
jbe
fmul
enter
paddusb
xchg
mov
push
mov
js
out
into
es
in
and
daa
mov
pusha
pop
sub
mov
mov
or
jbe
xchg
adc
lea
ins
xchg
(bad)
clc
adc
test
jp
sub
movd
ja
jmp
hlt
jmp
or
jecxz
retf
and
repnz
movs
dec
or
mov
std
test
inc
xchg
ret
and
fcomp
outs
mov
xchg
idiv
sub
mov
imul
daa
shr
mov
sti
cmp
push
jne
mov
inc
jp
popf
push
call
and
cmc
mov
inc
adc
out
dec
mov
ss
mov
stc
and
jmp
jo
adc
icebp
cmp
sbb
repnz
aad
adc
in
stos
inc
daa
fs
and
pop
std
pop
xchg
test
add
pop
push
mov
and
mov
mov
adc
push
clc
pop
cmps
gs
pop
mov
js
in
jne
call
mov
es
cmp
hlt
cmp
cmp
jmp
push
leave
xchg
retf
pop
mov
div
call
jne
push
sub
pop
ja
dec
mov
cdq
or
and
lock
add
add
sub
inc
lahf
mov
sub
popa
enter
sub
repnz
add
and
cmp
xor
or
iret
pusha
call
out
es
inc
movs
out
sbb
mov
or
sub
jne
cmp
stc
add
jb
and
into
shufps
mov
cmp
in
jae
jle
pop
in
add
or
mov
or
cmp
shl
out
xchg
sub
or
imul
pop
out
dec
pop
add
addr16
scas
and
xor
aas
xchg
jmp
adc
add
aam
push
fs
retf
adc
xchg
in
stos
adc
maxps
rcl
jecxz
cs
xor
dec
xchg
leave
fs
es
sub
jne
ror
inc
sbb
jno
jne
cmps
fisttp
cmps
and
push
dec
pop
add
add
jmp
movaps
xchg
push
jbe
or
mov
(bad)
jmp
das
daa
sbb
(bad)
mov
fsub
(bad)
outs
js
or
outs
pop
fsubr
arpl
sub
out
jne
mov
(bad)
xor
sbb
daa
sbb
mov
xor
stc
scas
jno
pop
sub
mov
aam
xor
mov
test
and
js
lds
jecxz
dec
cmp
mov
int
push
xor
stc
aaa
fdivp
sub
(bad)
idiv
sub
lahf
movs
adc
test
call
fidivr
pop
jge
push
push
mov
rcr
add
or
sub
std
jmp
mov
mov
popa
jl
or
cmp
or
xor
retf
bound
or
ss
push
fwait
stos
outs
and
inc
es
cmps
daa
ss
jb
mov
repz
and
in
cmp
adc
outs
arpl
out
mov
(bad)
cmps
pop
mov
fnstsw
sbb
stc
jbe
jmp
or
inc
(bad)
jno
mov
xchg
into
enter
push
gs
sbb
sbb
pop
scas
push
setae
mov
push
adc
jb
jmp
daa
out
push
push
rcr
pop
fisttp
shl
mov
(bad)
nop
push
push
and
push
icebp
ret
mov
xchg
cmp
or
mov
sbb
cmp
(bad)
jmp
sar
daa
nop
loope
mov
je
loope
xlat
jne
lods
(bad)
stos
jl
xchg
dec
test
jmp
dec
nop
cmc
and
cmp
pop
pop
lods
fistp
pop
(bad)
xor
dec
sub
dec
int3
push
fdivp
retf
mov
or
and
scas
push
xor
lock
cdq
push
cwde
jae
mov
fld
sub
lea
mov
pop
scas
cld
pop
push
fcmovb
leave
cdq
sbb
out
mov
fwait
pop
mov
adc
sub
aas
shl
loop
sbb
iret
mov
push
push
fwait
push
cmp
adc
enter
inc
pop
or
jmp
shl
or
sbb
cmps
xlat
xor
jmp
je
std
jl
dec
sbb
cmp
in
pop
jmp
push
mov
dec
xchg
cmc
mov
push
sahf
add
fisttp
xchg
not
pop
cdq
dec
outs
lea
repz
test
stos
push
mov
push
xor
push
enter
xor
sub
(bad)
sbb
ja
int3
ret
lock
adc
xor
adc
imul
sahf
mov
retf
shr
(bad)
xlat
xlat
das
jmp
xor
sbb
push
sbb
mov
mov
inc
mov
push
cmp
mov
pop
int3
repnz
or
xor
scas
addr16
stos
xchg
jmp
dec
ret
and
inc
ret
sbb
sub
add
leave
clc
pop
xchg
pop
lods
xchg
fnstenv
xchg
inc
gs
aaa
adc
inc
push
fidivr
adc
gs
pop
repnz
test
arpl
cwde
mov
shl
ret
push
and
sub
jle
stc
clc
cmp
adc
or
pop
mov
(bad)
in
cmp
bswap
stos
jle
dec
das
jmp
xor
in
shr
dec
sbb
pop
ret
pop
repz
adc
dec
or
movs
out
inc
jg
sub
fnstenv
adc
xchg
out
repz
push
loope
xchg
mov
div
imul
ja
adc
xchg
test
clc
cli
dec
mov
(bad)
mov
pop
retf
mov
inc
bound
(bad)
(bad)
and
add
push
adc
daa
push
mov
cmp
jle
imul
and
stc
mov
jg
leave
in
pop
xor
out
cmp
sub
cmp
push
and
loop
mov
movs
ss
bound
scas
inc
and
fidivr
mov
mov
pop
sahf
sbb
dec
xchg
mov
mov
sub
mov
mov
sti
popf
mov
ja
in
retf
in
(bad)
mov
adc
xor
mov
fwait
inc
mov
sub
xchg
in
push
mov
fcmovnb
into
sahf
outs
cdq
enter
jmp
bound
xchg
mov
sbb
or
add
xchg
dec
cmp
mov
push
jmp
in
push
push
pop
push
add
loopne
mov
lahf
inc
lock
sbb
shl
add
repnz
or
jl
jecxz
imul
daa
aam
in
outs
(bad)
out
dec
pop
mov
dec
jae
inc
adc
inc
cli
or
fld
sub
dec
pop
pop
fs
mov
std
dec
into
xchg
lods
lock
mov
push
push
add
add
jnp
adc
das
popf
je
div
jecxz
mov
pushf
add
shl
imul
mov
pop
xchg
in
ret
test
out
or
(bad)
push
in
add
dec
add
imul
movs
repnz
leave
mov
mov
aas
or
xchg
pop
sbb
jmp
push
jae
ret
jle
pushf
cmp
addr16
pop
push
pop
or
ficomp
enter
(bad)
fisttp
shr
icebp
test
mov
test
cmp
test
addr16
mov
loope
push
mov
es
pop
xchg
lds
js
xacquire
inc
sub
mov
scas
and
push
pop
ss
cs
xchg
cmp
jp
out
mov
out
add
push
addr16
jmp
repz
les
mov
test
lahf
jns
outs
loope
scas
sub
push
xor
lds
mov
nop
mov
imul
push
jl
sbb
fiadd
add
retf
and
or
aam
or
inc
dec
les
sub
mov
lahf
dec
and
push
jg
inc
xchg
fdivr
pop
ins
popf
cmc
iret
pop
loope
test
frstor
test
imul
iret
std
pusha
cmp
ins
rcr
push
mov
fs
add
adc
mov
push
mov
cmp
aad
das
lods
in
das
pop
or
pop
stos
sbb
hlt
hlt
mov
lds
ins
mov
add
or
arpl
pop
neg
mov
pusha
cmp
daa
pusha
aaa
test
nop
pop
test
popf
gs
stos
mov
jne
adc
and
cmp
push
and
sbb
inc
jg
inc
mov
or
adc
or
nop
stos
dec
and
xchg
mov
icebp
ror
and
xor
aaa
std
rcr
sub
add
fst
mov
nop
cdq
mov
adc
mov
or
mov
mov
sbb
jle
(bad)
arpl
mov
jecxz
mov
dec
fcom
adc
mov
push
call
ss
jecxz
jp
sub
leave
iret
push
sub
leave
cli
pusha
cmp
call
repnz
out
and
cs
or
dec
mov
repz
ins
push
hlt
mov
rcr
sbb
inc
aas
add
sub
push
ins
loop
jno
test
xor
cmp
movs
iret
push
mov
popf
xchg
sahf
mov
push
pop
test
xchg
mul
movs
arpl
add
xchg
repnz
and
into
frstor
aad
int3
jmp
sbb
les
fcomp
fcom
icebp
test
scas
scas
xor
push
xchg
mov
bnd
pop
outs
inc
call
mov
aam
push
mov
ins
adc
cmp
shl
gs
inc
int3
not
cdq
cmp
push
stos
shl
ds
inc
stos
dec
push
mov
or
retf
into
ja
int3
xlat
sbb
or
add
lea
cmp
movs
inc
sub
test
outs
mov
add
jmp
gs
dec
mov
mov
or
add
dec
xchg
sbb
cld
mov
out
cli
mov
mov
add
mov
add
jnp
adc
rcl
push
jno
outs
sub
das
out
and
push
cmp
jmp
repnz
icebp
pop
arpl
hlt
and
test
dec
arpl
mov
gs
cmp
adc
popa
out
mov
dec
(bad)
jmp
icebp
lods
shrd
lods
pop
jmp
xchg
mov
add
adc
adc
xchg
dec
pop
daa
(bad)
mov
xchg
pop
fiadd
test
loope
ss
add
pushf
sub
rcl
inc
in
in
adc
mov
xor
add
loopne
mov
jbe
(bad)
stos
clc
add
cmp
mov
popa
outs
dec
stos
in
aam
retf
or
repz
mov
push
push
push
sub
call
jns
mov
add
icebp
div
in
scas
addr16
push
xchg
pusha
(bad)
in
repz
or
push
ja
sub
or
movs
lock
mov
jb
pop
and
xor
dec
(bad)
cli
ins
xchg
in
inc
(bad)
clc
out
mov
xchg
inc
sbb
ins
jb
fsubr
mov
xchg
sbb
out
ror
adc
jns
mov
jo
xor
pushf
icebp
(bad)
mov
enter
movs
sbb
repnz
xor
and
xor
stos
push
cld
xchg
clc
or
or
sub
jle
out
inc
cmps
fild
test
add
pusha
mov
add
pusha
ins
bound
inc
test
rcr
shl
inc
ret
sbb
sub
sar
stos
sahf
push
adc
or
mov
jns
(bad)
fwait
jg
int
out
mov
and
jle
in
aam
add
loop
and
sub
sub
lock
call
xor
mov
inc
cmps
xor
jmp
loop
dec
mov
out
cmc
sbb
mov
enter
push
fwait
repz
(bad)
out
jno
je
inc
leave
das
mov
sub
aaa
test
sbb
enter
and
mov
mov
xchg
cmp
xchg
es
cdq
mov
cdq
mov
fnsave
dec
pop
jmp
mov
cmp
pop
retf
daa
(bad)
dec
popa
xchg
out
hlt
pop
inc
inc
inc
pop
ficom
arpl
dec
add
sbb
ins
add
ins
js
dec
jle
inc
xchg
mov
shl
aad
leave
mov
pop
dec
jmp
in
sbb
rcr
adc
out
(bad)
fisubr
mov
js
mov
pop
fsubr
call
ja
call
lods
cmp
cli
push
fnsave
jne
and
sbb
jecxz
loopne
retf
scas
std
fidiv
adc
push
mov
xor
jns
adc
imul
push
fnstsw
push
push
bound
addr16
xor
cmps
sub
jmp
xchg
push
xor
shl
sbb
cmp
mov
jg
(bad)
fsubr
adc
jmp
loope
jnp
aam
xor
repz
jmp
mov
or
sbb
clc
scas
(bad)
idiv
adc
and
add
mov
add
mov
inc
repz
stos
xor
fidiv
je
nop
clc
shl
in
push
arpl
dec
dec
mov
mov
sbb
and
test
xchg
bound
xchg
(bad)
shl
stos
js
into
pushf
(bad)
sub
or
(bad)
(bad)
ret
mov
movs
inc
pop
mov
adc
cmps
(bad)
fdivr
mov
jp
ss
push
mov
aad
jnp
or
cmp
adc
ds
cs
jmp
push
sbb
mov
aas
jnp
imul
pop
pop
mov
(bad)
aad
push
retf
fistp
rcl
loopne
sbb
mov
push
dec
stos
inc
cdq
sbb
pop
sub
mov
imul
adc
cmp
stos
add
mov
sub
ins
add
pop
push
out
xchg
test
les
cmp
add
pop
sub
cmps
inc
xchg
push
in
lods
ror
aas
xor
imul
xor
xor
imul
repz
xchg
push
mov
push
scas
scas
addr16
mov
fwait
popf
addr16
adc
jecxz
sti
lods
sahf
push
xlat
jecxz
adc
jne
or
add
cmps
dec
stc
or
call
call
jo
pop
fs
xor
mov
int
je
adc
scas
(bad)
retf
sbb
and
scas
gs
lea
clc
mov
shl
test
jo
cmp
ror
cmp
xchg
scas
stc
mov
sahf
add
adc
movs
xor
jmp
xor
lods
sbb
ins
xor
sub
mov
jnp
push
add
inc
fwait
ret
mov
cmp
je
push
add
inc
lds
stos
fmul
das
add
xor
mov
adc
sbb
fist
jecxz
push
inc
es
fcom
popf
out
xchg
in
mov
mov
pop
or
pop
adc
and
mov
sbb
lds
sbb
or
mov
pop
lods
ins
mov
jo
pcmpgtw
fadd
ins
sub
mov
or
jb
inc
jno
adc
repnz
outs
dec
outs
dec
adc
data16
movs
or
sbb
jecxz
adc
mov
mov
mov
cmp
fmulp
mov
xchg
mov
add
push
outs
dec
hlt
xlat
cs
xchg
lock
sar
adc
out
xlat
or
dec
out
repz
mov
mov
ja
pop
lahf
js
mov
inc
mov
or
xor
loope
sub
sub
mov
mov
mov
por
out
std
cmc
dec
ins
dec
cmp
xor
nop
mov
cld
mov
fxch
movs
push
mov
dec
jge
pop
sbb
mov
xchg
repz
mov
xchg
pop
test
mov
cmp
sbb
call
les
mov
in
subps
(bad)
imul
dec
sub
or
call
mov
adc
sbb
call
and
test
lds
inc
cwde
jle
cmp
pop
ins
outs
or
mov
ins
xor
dec
leave
xor
fsubrp
fld
out
outs
cmp
mov
xchg
xchg
jecxz
data16
push
xchg
ficomp
nop
loopne
dec
inc
push
mov
cmps
aaa
mov
das
mov
test
sub
xor
dec
out
pop
jne
add
xor
mov
or
stos
sub
shl
or
loopne
jl
pop
inc
push
ror
pop
aas
jg
out
in
push
icebp
mov
cmp
ins
or
mov
je
movs
xor
adc
cmp
mov
mov
repnz
jne
das
inc
mov
(bad)
fcomp
loop
pop
jl
sbb
sbb
pop
adc
int3
out
push
addr16
mov
cmp
out
inc
int
fist
mov
push
xor
fwait
cdq
mov
xchg
xchg
add
ds
das
idiv
icebp
xor
idiv
out
jmp
cs
add
mov
out
fldenv
sbb
adc
clc
pop
cld
adc
shl
jae
cmp
dec
cmp
add
retf
dec
imul
(bad)
jns
mov
sub
je
mov
mov
test
inc
movs
jmp
dec
mov
cvttps2pi
test
outs
xchg
aas
loopne
fs
dec
aas
xchg
mov
pop
popa
jo
repz
cmp
rcr
push
mov
inc
fwait
pop
test
jmp
sub
js
or
mov
cmp
movaps
cmps
mov
sbb
xor
jno
sbb
pop
cdq
adc
jmp
push
jae
int3
adc
jmp
in
push
xlat
add
inc
dec
loopne
push
shl
mov
xchg
xchg
nop
pusha
addr16
stos
sbb
cmc
jmp
push
imul
mov
mov
ret
cmp
inc
xchg
jno
mov
aas
xchg
pop
arpl
daa
and
ins
into
pushf
cli
fcmove
dec
(bad)
and
inc
mov
mov
jo
and
adc
scas
and
fstp
(bad)
pop
push
mov
pushf
inc
add
fs
push
ficomp
sub
dec
(bad)
je
and
mov
out
stc
test
sar
push
stos
movs
stc
jl
dec
fwait
retf
dec
scas
adc
stos
xchg
mov
fwait
push
loopne
mov
repnz
fcomi
nop
jno
lods
inc
cmp
and
lods
push
nop
div
ins
int3
inc
adc
sbb
ins
mov
pushf
stos
sbb
bound
adc
xchg
inc
js
into
aad
out
or
int3
pop
dec
imul
gs
dec
mov
cmp
and
mov
icebp
sbb
push
jle
call
jg
push
or
cmps
call
and
test
(bad)
rcr
popf
je
ret
aaa
inc
lods
mov
pop
mov
fistp
cwde
enter
adc
jge
lds
xor
(bad)
out
dec
cmp
mov
nop
sub
(bad)
out
fist
in
jl
sbb
sbb
scas
retf
xor
mov
iret
stos
push
cmp
adc
pop
aad
int3
outs
imul
xor
les
xor
push
neg
popa
jmp
hlt
push
pcmpgtd
fstp
idiv
xor
add
inc
jns
jnp
pop
in
add
dec
loop
pushf
push
sub
mov
add
lea
jge
shl
cmps
mov
adc
jg
inc
lds
jp
jne
cmc
cmp
cdq
xor
cmp
arpl
inc
(bad)
push
div
int3
mov
icebp
mov
pop
retf
movs
pop
sub
test
cli
iret
mov
test
dec
pusha
lods
fsubr
xacquire
loope
cmps
in
les
scas
jne
ret
inc
cmp
dec
(bad)
pop
and
sbb
sub
ret
push
add
dec
daa
inc
and
dec
xor
(bad)
cmp
dec
out
repnz
popa
daa
mov
movs
(bad)
int3
imul
pushf
cmp
dec
cld
in
dec
mov
and
in
push
pop
fdecstp
lods
xchg
ficomp
lahf
mov
aas
shr
rcr
pop
mov
je
in
push
aad
mov
pop
jmp
add
dec
jmp
test
inc
in
push
pop
mov
mov
fs
xchg
sahf
and
and
sbb
or
iret
paddb
fnsave
ss
cwde
jle
mul
jecxz
push
jg
ror
ror
pop
xor
add
ins
pop
xor
aaa
and
stos
stos
es
retf
inc
and
xor
push
(bad)
sti
pop
jmp
aas
out
fistp
push
mov
jecxz
mov
stos
out
sub
shr
and
mov
shl
jp
adc
mov
push
out
ror
cmps
mov
add
xchg
jbe
jb
add
shr
mov
or
in
pop
outs
sub
into
add
int
lahf
lods
mov
rcr
sbb
fbstp
dec
mov
es
and
imul
sbb
xchg
ja
adc
xor
repnz
mov
repz
jl
or
pushf
cmps
mov
ins
lods
adc
or
or
test
adc
xchg
pop
popf
jns
std
imul
cmp
adc
mov
pop
jge
mov
loopne
push
add
(bad)
xor
mov
push
mov
(bad)
fcmovne
and
je
mov
mov
mov
test
out
enter
sub
xor
jbe
push
mov
aad
retf
bound
pop
fadd
in
mov
and
sbb
jnp
xor
jb
sbb
in
or
mov
ret
sbb
push
inc
xor
xchg
int3
pop
dec
jnp
sub
test
out
addr16
repz
sbb
push
into
out
idiv
arpl
sub
ins
test
mov
push
scas
xchg
push
and
sbb
cli
lods
dec
and
jg
sub
cmp
cmc
bound
jecxz
popa
call
outs
sub
js
push
mov
(bad)
imul
mov
mov
test
nop
xchg
pushf
or
xchg
sar
or
inc
sub
addr16
inc
sbb
cmp
ins
int
shl
push
mov
xchg
cmp
jl
aas
cs
sbb
mov
sbb
mov
into
push
push
or
movs
sahf
cdq
bound
stos
gs
cmp
and
(bad)
pop
mov
pop
xor
loopne
fs
adc
out
mov
rol
nop
ins
inc
mov
add
jmp
mov
adc
cld
mov
xchg
mov
fild
jne
cli
xchg
inc
cwde
ins
hlt
in
jle
aad
enter
pushf
dec
add
into
scas
pop
fistp
retf
data16
arpl
cmp
jge
dec
sbb
cmp
stos
mov
dec
or
ins
lock
xor
or
dec
mov
push
retf
out
cwde
or
fiadd
lds
mov
mov
ins
pop
jo
ins
xchg
push
sti
loopne
lds
mov
mov
jne
jae
pop
push
out
push
push
jo
mov
cli
jb
imul
sbb
test
fld
and
xchg
(bad)
sub
add
xchg
cli
mov
(bad)
jns
mov
(bad)
mov
fnstsw
xchg
out
nop
outs
mov
or
jmp
ret
push
mov
int3
movs
xlat
sbb
push
ficomp
fdiv
dec
xor
stos
push
fwait
ins
loope
inc
xor
outs
or
sbb
imul
push
adc
das
mov
addr16
out
jb
pop
adc
jmp
push
nop
xchg
fiadd
dec
mov
sub
adc
(bad)
and
imul
out
add
(bad)
or
out
sahf
ficom
call
pop
lods
call
xchg
scas
jno
repz
leave
cld
add
mov
and
ret
idiv
fld
sub
lods
pop
popa
icebp
jmp
loopne
hlt
jno
sbb
inc
mov
sbb
rol
and
mov
xchg
adc
dec
das
pop
std
cmp
mov
loop
test
das
ja
push
test
imul
les
jmp
sub
ins
and
add
in
and
sahf
sub
int3
loopne
ja
pop
jae
ss
dec
jge
xor
aas
adc
cdq
into
inc
jge
test
jno
jge
xor
add
out
add
lea
cmps
test
mov
mov
(bad)
lds
push
dec
add
aad
xchg
cmp
(bad)
push
and
aad
inc
xchg
test
call
adc
mov
cs
mov
xchg
addr16
cld
push
movs
repz
or
in
in
or
push
push
xchg
push
jo
int
mov
repnz
es
call
xlat
das
out
push
sub
mov
data16
in
imul
fnstsw
mov
cwde
mov
(bad)
call
jo
addr16
in
(bad)
or
push
inc
xor
pop
inc
mov
xor
retf
mov
loop
arpl
or
sbb
aam
rol
and
pop
int3
jecxz
(bad)
lods
jo
mov
or
cwde
lods
fwait
cdq
and
jne
cmps
xchg
or
pop
pop
mov
sar
arpl
push
mov
dec
jmp
jmp
fsubrp
fadd
jle
jae
pushf
jg
mov
inc
enter
add
adc
das
add
adc
loop
mov
add
gs
and
aad
ss
xor
push
dec
mov
stos
mov
test
stos
out
hlt
outs
sub
movs
movs
and
gs
lods
cwde
test
inc
or
fimul
cli
xchg
dec
sbb
jbe
inc
adc
mov
pop
repnz
jnp
fcomp
push
gs
cmp
leave
cmp
scas
mov
enter
fs
jno
cmc
push
loopne
inc
xchg
mov
mov
cwde
mov
inc
pop
jns
mov
das
xlat
gs
sbb
cmps
mov
es
sbb
aaa
pop
jbe
push
pop
rcr
dec
or
pop
dec
int
enter
dec
lds
repz
test
inc
imul
call
mov
adc
out
sbb
inc
inc
dec
mov
push
xlat
icebp
or
mov
(bad)
nop
inc
push
xchg
loope
cmp
sti
mov
inc
or
fsub
das
aaa
out
sbb
adc
cmp
and
push
pop
pop
and
jp
cmp
cmp
sub
scas
cs
fxch
jns
xchg
cmp
fnstenv
xor
push
out
mov
mov
into
pop
sub
scas
lds
mov
sbb
xchg
lods
jle
cmp
xchg
dec
call
dec
mov
mov
jecxz
dec
xchg
add
inc
and
ror
(bad)
dec
ja
inc
sbb
(bad)
in
retf
stos
xor
mov
mov
and
fimul
ja
test
movs
fild
mov
pop
jge
mov
or
fstp
iret
hlt
mov
sahf
popf
push
push
mov
dec
jge
sti
jecxz
add
dec
cmp
inc
in
adc
xchg
fidivr
call
popa
fndisi(8087
or
mov
fisttp
push
imul
aam
push
xor
push
add
push
xchg
push
cmps
xchg
add
pop
enter
add
add
fisubr
add
pop
lahf
inc
pop
lds
mov
in
cld
add
jne
ins
push
fdiv
add
xchg
das
mov
ret
int3
cdq
mov
inc
cld
mov
adc
mov
push
jo
movs
lea
movs
in
std
and
xlat
xor
cmp
inc
adc
jg
repz
sub
xchg
or
jno
mov
pop
dec
xadd
sahf
sbb
imul
ret
push
shl
push
inc
mov
push
jecxz
xlat
cmps
test
sbb
fcom
sti
aas
fist
xchg
mov
push
movs
cmp
dec
sub
outs
retf
sub
and
loope
test
xchg
adc
sbb
cmp
shr
das
push
adc
dec
daa
ret
test
cmp
and
sub
sbb
mov
pop
lods
pusha
inc
inc
std
and
gs
ret
and
ret
pop
sub
sbb
or
cmp
lods
inc
add
inc
cdq
sbb
or
jo
push
out
iret
ja
jb
push
jbe
pop
jecxz
xor
jbe
(bad)
ficom
sbb
in
ret
sub
mov
sbb
xchg
mov
pop
stc
scas
(bad)
push
idiv
in
mov
add
leave
repnz
fdiv
mov
mov
in
ja
jmp
shr
mov
fcomp
dec
sar
mov
sub
mov
ja
outs
add
test
mov
iret
jmp
ss
lock
lods
retf
cmp
mov
out
jae
cwde
clc
mov
jo
dec
and
in
mov
sbb
add
lods
call
jg
and
fsubrp
adc
scas
cmp
repnz
lock
fidiv
and
loopne
mov
aas
test
daa
mov
mov
xchg
pop
adc
mov
dec
test
(bad)
gs
mov
and
ss
add
adc
mov
mov
(bad)
adc
adc
cmp
hlt
jmp
inc
loope
xor
pushf
lods
sbb
mov
push
dec
enter
outs
push
arpl
and
and
inc
rcl
sub
ins
test
dec
xor
and
mov
adc
(bad)
xor
sbb
int
popf
sbb
mov
call
cmp
inc
or
std
and
ss
lock
dec
aas
movs
call
inc
mov
lods
icebp
xchg
inc
mov
mov
sar
fst
ss
cmp
mov
push
pop
das
aas
(bad)
repnz
adc
cmp
jecxz
xchg
fstp
call
push
push
stc
test
lea
pop
je
xor
sahf
xchg
or
or
push
(bad)
loopne
in
fisttp
cmp
mov
out
ja
add
jmp
pop
in
iret
xchg
and
mov
je
dec
outs
cli
sub
pop
mov
xchg
jle
(bad)
retf
outs
jbe
ds
xor
lds
repz
mov
xor
int
fisttp
push
push
outs
lds
fs
sub
loopne
not
jbe
cmc
popf
lods
pop
inc
sbb
adc
movs
push
sbb
(bad)
stos
mov
dec
mov
push
int
xchg
test
fisttp
xchg
leave
fdiv
mov
imul
ins
lock
mov
pop
test
xchg
xor
(bad)
imul
jne
retf
dec
jle
movups
ds
mov
not
aad
xchg
pop
adc
repnz
jmp
out
ja
mov
sub
mov
aas
jae
out
or
push
int
test
pusha
dec
mov
movs
cwde
pop
dec
dec
push
xor
xor
jbe
or
test
fist
repz
rol
daa
ins
mov
fld
arpl
add
nop
mov
cs
in
mov
rcr
fdiv
jmp
sbb
push
mov
mov
mov
adc
pop
jg
push
mov
in
sub
mov
add
clc
cmp
and
fisttp
push
jmp
add
ins
out
pop
cmp
loop
dec
loop
xchg
les
call
out
addr16
sbb
push
int
cmp
movs
hlt
push
mov
gs
ss
adc
cmps
push
dec
cmp
(bad)
in
dec
js
add
fbld
std
sbb
or
lds
movs
std
test
jno
lahf
cld
ret
stc
mov
mov
ja
pop
mov
cmp
and
js
shr
push
enter
jle
(bad)
jg
cmp
rcr
add
sahf
gs
or
iret
sub
les
pop
and
addr16
outs
mov
ret
dec
jae
loopne
or
or
icebp
cmp
inc
xchg
xchg
dec
jae
aam
add
loope
je
mov
dec
movs
in
aam
dec
fist
or
int
imul
sbb
and
adc
jmp
outs
jmp
xor
sbb
call
popa
push
or
cmp
xor
add
mov
lahf
les
pop
test
dec
bound
arpl
cwde
and
fistp
cdq
in
xchg
sahf
fdivr
(bad)
fwait
xchg
nop
ja
sub
jp
jl
retf
retf
cmp
push
cmps
call
xor
add
movs
push
pop
sub
mov
sbb
popf
movs
stos
xchg
add
movs
mov
push
cwde
ret
inc
mov
shl
iret
and
cmp
cmp
fisttp
test
enter
mov
add
mov
stos
mov
stos
inc
in
dec
mov
arpl
and
(bad)
push
jle
jb
mov
pop
xor
mov
or
pop
retf
mov
inc
fcom
cmp
rol
dec
sub
pushf
mov
mov
mov
xchg
or
and
loope
outs
mov
fwait
fs
out
cmp
mov
add
xchg
jbe
pusha
dec
mov
and
lahf
add
sub
cld
or
jne
ja
mov
sbb
addr16
fneni(8087
xchg
pop
lock
(bad)
shl
cmp
subps
jl
repnz
or
cmp
in
cwde
es
mov
pushf
add
rcr
aad
imul
sbb
imul
and
iret
sub
sub
arpl
sub
sbb
and
push
add
cmp
push
in
mov
push
xor
scas
pop
sub
and
and
sbb
es
fst
jb
loopne
div
loope
das
fstp
scas
rcr
jg
mov
jnp
arpl
adc
mov
ins
inc
fs
or
sub
aad
inc
sar
scas
out
cdq
jb
add
xchg
fmul
repnz
jbe
dec
daa
out
mov
iret
adc
bound
push
mov
int
push
mov
mov
mov
(bad)
jo
mov
add
add
adc
add
xchg
add
ins
jl
adc
repz
mov
aaa
sub
out
fs
shl
pop
lea
add
and
push
aad
jmp
pop
pop
cld
lods
loopne
sub
inc
int
call
add
pushf
arpl
aad
int
lods
push
mov
aaa
(bad)
call
leave
dec
sub
shl
mov
mov
test
jno
add
mov
mov
cmps
call
and
push
fst
bound
(bad)
xchg
or
sub
repz
fimul
test
pop
cmps
cmps
in
and
movs
sbb
and
nop
je
jnp
or
out
inc
int3
cli
dec
out
or
or
test
mov
push
ror
xor
mov
je
push
cmc
jle
popf
rcr
mov
xchg
cmp
cli
mov
xchg
(bad)
mov
mov
or
or
mov
or
xchg
sub
jae
push
cmp
push
data16
jne
adc
xchg
shl
jb
ds
rcr
jg
mov
sub
mov
mov
jns
ja
and
cli
(bad)
les
dec
jae
and
lods
dec
lods
out
xor
ds
in
pop
movs
shr
jae
imul
cmps
sahf
sub
add
xchg
js
sbb
sub
sub
aam
mov
xchg
sbb
xlat
cmps
retf
not
in
and
stos
xor
out
mov
pop
aad
mov
inc
pop
mov
sbb
sahf
xor
cwde
es
add
mov
xchg
dec
xchg
call
xlat
outs
cmps
xor
dec
dec
or
and
not
test
inc
cs
cmp
mov
lock
das
cmp
dec
push
push
adc
les
xchg
mov
mov
inc
stc
pop
pop
sbb
cmp
inc
adc
or
neg
mov
mov
push
test
jo
jmp
xchg
pop
and
outs
xchg
push
js
sub
fstp
fisub
in
jmp
push
dec
out
mov
mov
fcmovb
dec
into
xor
sub
daa
addr16
scas
scas
mov
xchg
lock
inc
sbb
stc
aas
mov
test
ins
inc
jbe
jae
clc
mov
int
jb
pop
daa
dec
movs
mov
dec
xchg
dec
push
(bad)
mov
sar
add
or
fucomip
dec
cmp
dec
jmp
cmp
jo
jnp
add
stos
clc
popa
adc
fcomp
inc
xor
or
sub
mov
add
mul
out
cmp
cdq
pop
xor
imul
data16
lock
sub
(bad)
xchg
add
pushf
or
inc
xor
sub
arpl
pop
nop
push
add
stos
sub
push
xor
push
sub
jns
(bad)
mov
mov
xchg
(bad)
cwde
jle
inc
dec
mov
sahf
jo
aam
jne
test
dec
and
push
pop
popf
call
hlt
xchg
mov
mov
or
or
data16
adc
xchg
jo
add
out
and
sbb
inc
scas
xchg
xor
mov
push
xor
cmps
xchg
and
ficom
push
pusha
addr16
push
mov
jb
test
dec
(bad)
data16
adc
jns
les
sti
stc
call
ret
popf
push
shl
sar
mov
xor
and
xchg
push
mov
mov
vpsubusb
and
sbb
sub
adc
xchg
push
inc
mov
fist
cwde
sbb
test
jns
cmps
dec
scas
inc
cwde
dec
mov
scas
xchg
cmp
out
sub
xchg
aad
div
lahf
fwait
adc
sbb
aaa
fwait
call
out
loopne
mov
xchg
mov
dec
xchg
cdq
fninit
loop
test
pop
out
sub
outs
popa
pop
into
out
push
dec
sbb
adc
jge
outs
sub
repz
sbb
adc
loope
popa
add
fimul
addr16
bound
call
mov
shl
repz
loope
mov
mov
test
push
jecxz
cmp
cs
xor
or
loope
test
or
fdivrp
xchg
pop
imul
inc
scas
jp
movs
sbb
cli
test
jns
cmp
js
in
sub
std
sbb
pop
in
inc
test
xchg
movs
ret
xchg
jo
and
adc
int
xchg
fwait
xchg
mov
sbb
push
jbe
dec
cmp
les
xchg
sbb
popa
fisub
stc
(bad)
sbb
inc
mov
rcl
xor
mov
and
fiadd
xchg
inc
xchg
and
repnz
add
inc
test
xor
mul
mov
(bad)
adc
cmp
repz
call
jg
inc
addr16
push
sar
int
icebp
mov
ja
mov
(bad)
pop
add
or
mov
push
(bad)
les
fcom
sbb
add
dec
cmp
mov
aaa
add
clc
and
sub
mov
or
jg
aad
(bad)
cmp
xchg
and
mov
pop
xchg
sub
int
add
shl
xchg
jmp
adc
inc
mov
sti
dec
mov
in
imul
ret
xchg
ffreep
jmp
push
sub
pop
cmp
shrd
int3
push
cmps
inc
stos
push
mov
test
pop
xchg
call
mov
sub
sbb
sub
push
and
sub
cmp
add
repz
jbe
jb
mov
call
mov
ror
xchg
call
mov
or
(bad)
cmp
dec
in
cmps
xchg
xchg
imul
shl
mov
pop
sbb
mov
loop
xchg
adc
ins
cdq
stc
fst
sbb
mov
mov
push
xor
cmps
loope
cmp
mov
mov
sub
sub
mov
jbe
add
sub
sub
adc
sti
iret
mov
inc
out
dec
cmp
adc
iret
dec
or
cmp
add
cld
adc
jbe
inc
retf
xchg
cmp
push
mov
xor
pop
sub
fldl2e
ins
or
and
fimul
or
leave
(bad)
in
scas
fcmovnb
in
rep
jno
mov
popa
movs
inc
mov
pop
out
push
lock
or
xor
mov
push
pop
cmp
out
loope
sbb
jecxz
push
push
scas
adc
and
fidiv
stc
cmp
jne
inc
xchg
mov
push
cli
pop
mov
or
call
loop
pop
sub
add
into
js
js
call
sbb
lahf
xchg
adc
xchg
jno
pop
cli
frstor
jmp
test
rcl
lahf
xchg
gs
nop
shl
xchg
mov
mov
jb
lods
pop
push
push
data16
cmps
enter
push
xchg
or
xchg
xchg
sub
and
fsub
pusha
lods
cld
xchg
ins
lahf
mov
fwait
ss
mov
in
sbb
ret
iret
add
cmp
add
test
dec
imul
lea
inc
(bad)
cs
cmp
shl
xchg
pop
xchg
aad
xchg
dec
or
push
rcl
fwait
scas
cmp
pop
movs
or
loope
(bad)
mov
push
adc
pop
(bad)
(bad)
fadd
je
add
mov
and
sub
add
push
sbb
mov
and
lods
adc
std
ins
shl
xor
push
aam
shl
add
and
dec
mov
push
sahf
cwde
inc
push
cld
mov
shl
(bad)
adc
adc
and
dec
inc
cld
fdiv
sbb
mov
cmp
mov
jg
push
fnstenv
and
jl
idiv
(bad)
push
fnstcw
push
xchg
outs
sti
je
out
or
add
js
xchg
or
sbb
clc
xor
mov
cs
sub
aad
adc
imul
(bad)
loopne
pop
pop
(bad)
(bad)
in
fcomp
jae
fistp
dec
push
clc
pop
repnz
pop
xor
imul
mov
sbb
stc
pusha
ret
mov
mov
mov
fadd
movs
xor
sub
fild
gs
inc
and
sbb
inc
or
jb
icebp
fdivrp
shl
xchg
xor
adc
pop
mov
leave
add
adc
ret
and
repnz
pop
les
and
cmp
cmps
stos
in
inc
rcr
fld
fwait
inc
adc
int3
or
inc
jb
and
or
mov
jno
jmp
movs
rcl
fsubr
jo
mov
icebp
xchg
or
pop
mov
arpl
jmp
xchg
jne
mov
into
pop
add
shl
jg
aas
iret
dec
add
hlt
imul
les
mov
(bad)
sti
add
pop
mov
pop
mov
mov
mov
loop
movs
mov
jne
aaa
jmp
inc
lea
loopne
repnz
xchg
and
es
xor
xchg
and
adc
lahf
and
je
repnz
imul
hlt
lds
and
bound
jo
push
fnsave
test
ret
arpl
rol
pop
and
(bad)
lods
sti
fimul
pop
push
std
lahf
pop
push
js
pop
adc
cdq
pop
pop
int
scas
dec
fwait
cld
fs
(bad)
adc
mov
or
push
gs
ins
dec
mov
shl
xor
jnp
lock
stos
jp
sbb
fsub
or
sahf
dec
pop
test
repnz
adc
sbb
fsubrp
mov
(bad)
je
dec
(bad)
push
aaa
shr
adc
jb
mov
fistp
imul
in
dec
shl
(bad)
jmp
test
ret
push
dec
cwde
cli
dec
dec
fdivrp
fld
mov
sti
push
dec
pop
es
div
inc
ret
or
inc
xor
inc
retf
dec
test
(bad)
out
jo
push
dec
mov
xor
push
movs
jge
(bad)
or
push
call
js
test
mov
mov
pop
mov
movs
push
dec
loopne
inc
xor
push
shl
mov
ret
fcomp
or
loope
in
add
scas
xchg
cwde
inc
mov
xchg
(bad)
loope
(bad)
retf
lds
mov
loopne
outs
sbb
push
dec
add
sub
pandn
mov
scas
push
fsubr
jecxz
les
sbb
in
jge
test
ja
add
(bad)
std
inc
jae
sbb
repz
push
lahf
imul
repnz
dec
fidivr
mov
adc
xchg
dec
retf
adc
cs
adc
pop
inc
ds
mov
push
addr16
icebp
jmp
(bad)
lock
xchg
mov
(bad)
mov
adc
mov
retf
lahf
mov
and
mov
push
mov
ja
and
in
or
call
sub
xchg
(bad)
mov
mov
lfs
xor
cmp
inc
mov
jb
fbld
mov
(bad)
cdq
add
adc
mov
push
add
dec
xor
das
aam
push
mov
dec
mov
pop
dec
(bad)
aad
(bad)
scas
mov
out
(bad)
adc
scas
aas
ins
cld
or
mov
ja
jb
mov
scas
fsubr
cmc
hlt
cmc
push
mov
add
pop
cwde
popf
gs
or
mov
cld
adc
push
cmp
cld
xchg
xlat
mov
pop
icebp
ds
add
inc
scas
adc
sbb
int
in
jb
pop
sub
push
adc
je
(bad)
pop
loopne
or
jmp
enter
(bad)
lock
loop
(bad)
test
inc
jecxz
mov
mov
inc
(bad)
fsubr
rcr
add
and
adc
jmp
adc
add
adc
into
fs
pop
into
and
sub
nop
data16
dec
loop
inc
or
jle
sub
mov
loop
mov
xlat
xor
xor
int3
xor
jle
in
and
fild
cmps
cwde
xchg
inc
aad
pusha
xor
xchg
movs
aas
addr16
mov
add
stc
lock
and
jecxz
stos
xchg
inc
jmp
loope
aam
xchg
xchg
adc
out
pop
call
mov
pop
xor
dec
jge
lahf
test
mov
int3
push
call
adc
fstp
nop
rcr
icebp
push
xor
inc
lahf
(bad)
out
cmps
jmp
inc
aam
xor
fstp
push
mov
pop
lock
and
cs
sbb
in
fs
fsub
leave
and
(bad)
lods
pop
in
mov
mov
inc
inc
pop
push
jmp
cmp
mov
outs
les
icebp
inc
pop
fcmovu
sbb
cmp
pop
lods
ja
or
add
ret
movs
movs
pop
test
popa
dec
lods
xor
jl
imul
dec
in
sub
leave
repz
cli
(bad)
xor
test
jl
lods
das
pusha
popa
pop
sub
sub
enter
cmp
xchg
(bad)
fucomip
mov
dec
enter
mov
(bad)
mov
movs
int
pusha
pop
call
adc
pop
xor
add
dec
jbe
cld
push
xchg
mov
sub
xchg
mov
push
popa
xchg
pop
xor
(bad)
cmps
imul
or
cmp
mov
and
mov
retf
aaa
mov
fs
adc
mov
push
jl
retf
js
mov
ja
(bad)
call
cmp
ret
dec
jp
and
mov
repnz
or
(bad)
adc
aam
push
sti
or
(bad)
xor
fs
jge
shl
iret
jp
ret
xor
and
adc
inc
retf
push
and
jmp
xchg
cmp
pusha
pop
mov
jb
jo
dec
out
cmp
clc
or
lahf
adc
pop
cwde
sub
(bad)
stos
les
aam
mov
pop
fcom
mov
dec
mov
dec
xor
inc
inc
mov
iret
mov
dec
xchg
mov
mov
jae
adc
retf
les
sbb
mov
ds
sub
sub
mov
cli
movs
stos
ftst
sbb
ret
adc
in
push
pop
aaa
xlat
retf
aam
loopne
xchg
dec
jo
mov
call
sub
cmp
mov
ret
mov
sbb
ds
pop
xchg
inc
enter
ror
lahf
jle
data16
fcom
sub
mov
stos
and
cdq
xor
push
adc
dec
arpl
leave
mov
and
inc
in
rcr
push
adc
js
popa
fldcw
enter
repnz
and
int
push
adc
push
inc
scas
jmp
cs
or
cmp
cmp
fcomp
mov
js
push
pop
lea
mov
imul
push
push
test
mov
not
repnz
aad
fwait
or
pop
outs
in
xchg
imul
fsub
add
push
retf
ficom
push
xor
dec
popa
out
int3
mov
pop
out
stos
and
mov
shl
cs
and
ret
in
pop
int
and
and
retf
inc
push
jle
clc
out
jo
sbb
dec
pusha
call
pop
je
sub
adc
pop
pushf
lock
fld
in
xchg
cwde
xchg
lahf
inc
in
pop
inc
mov
arpl
push
out
ins
ss
shl
(bad)
mov
inc
fwait
push
jge
adc
push
or
jg
dec
inc
pop
sti
lea
cmp
repnz
nop
xchg
(bad)
pusha
mov
jecxz
mov
push
push
pop
pusha
mov
xchg
cdq
fisttp
mov
jb
fbld
daa
les
pop
sub
ret
in
pop
rcl
pop
xchg
popf
adc
ins
inc
adc
jmp
mov
jp
push
idiv
jb
jb
and
call
dec
movs
sbb
xor
cld
or
jl
sbb
repnz
adc
movs
mov
xchg
add
push
mov
(bad)
and
add
(bad)
pushf
cwde
sahf
add
les
out
ins
loop
jg
test
or
mov
inc
stos
xchg
outs
sub
pop
outs
mov
push
xchg
fs
int
push
cdq
jmp
fidiv
jmp
cwde
mov
dec
xor
out
mov
mov
shr
push
mov
stos
mov
mov
fnstenv
out
mov
push
mov
jp
js
xchg
mov
(bad)
rcr
das
add
hlt
mov
mov
std
pop
inc
aam
clc
cmp
sbb
clc
lahf
ret
inc
repz
xchg
pop
ficomp
mov
(bad)
out
maxps
aas
fisub
ins
push
jge
push
push
lods
sahf
mov
xor
cmc
or
xor
adc
dec
movs
call
and
sbb
or
loopne
mov
mov
dec
int
pop
xor
arpl
push
jp
jb
jp
cmp
cmp
(bad)
fisttp
imul
xchg
inc
sub
xor
stos
cmp
or
sub
push
das
inc
adc
shl
cmc
in
lahf
and
into
pop
nop
or
pop
jb
xchg
mov
xchg
push
mov
ret
mov
push
sbb
xlat
std
sub
loopne
neg
out
out
mov
mov
mov
mov
(bad)
mov
cmps
lods
call
xchg
lds
popa
mov
push
xchg
call
lods
das
imul
mov
(bad)
dec
idiv
pop
inc
test
clc
mov
ret
int
pop
and
cdq
push
and
aad
movs
pop
pop
call
std
mov
add
ret
jl
xlat
and
hlt
sbb
pop
sub
xor
dec
in
cmp
and
inc
jmp
ror
rol
and
mov
out
ds
ins
rol
mov
inc
fnstenv
je
sub
addr16
sub
jecxz
scas
lock
aas
ins
outs
out
scas
fidivr
rcr
dec
into
sub
jp
aam
out
(bad)
fld
sub
mov
ds
xchg
adc
dec
movs
xor
shl
xchg
lea
xchg
jmp
sbb
mov
jle
cld
inc
adc
xor
sbb
mov
(bad)
je
add
cmps
adc
ins
imul
mov
inc
mov
or
push
dec
cmc
inc
adc
dec
das
jl
push
or
lds
stos
push
mov
(bad)
jne
add
(bad)
fiadd
cmp
stos
xchg
retf
iret
movs
aaa
repnz
sub
or
jno
inc
push
movs
pop
jnp
nop
sub
mov
arpl
je
or
(bad)
mov
inc
lea
cmp
jl
jmp
dec
or
arpl
retf
xchg
and
or
arpl
shl
and
add
adc
mov
loope
push
adc
pop
mov
jmp
add
bound
pop
jg
adc
dec
(bad)
mov
push
push
mov
popa
push
mov
add
fdiv
mov
int
je
lds
mov
stc
add
scas
in
rcl
loop
mov
jb
int
mov
movs
ror
lds
mov
leave
gs
pop
test
xchg
jge
data16
cmp
jb
fild
lahf
add
mov
mov
push
test
sub
sub
mov
pop
push
(bad)
or
into
cli
sbb
adc
dec
and
outs
push
xor
push
sbb
test
jno
push
or
or
test
shr
sahf
jp
inc
push
scas
cmp
pop
xchg
je
mov
xchg
mov
mov
jmp
push
es
mov
cmp
nop
mov
retf
mov
pop
fiadd
xchg
fwait
shr
cdq
shl
adc
or
imul
adc
dec
push
out
aas
fdivr
add
pushf
push
xchg
addr16
mov
ins
and
push
jb
mov
je
inc
sbb
lock
pop
jbe
fst
test
fwait
jmp
jno
cmc
mov
bound
pop
shr
jmp
dec
mov
and
inc
dec
jnp
test
push
int3
pop
mov
stc
ret
gs
push
cdq
fmul
push
adc
scas
rol
fidivr
je
push
sbb
lahf
aaa
mov
pop
loop
push
clc
and
int3
mov
mov
inc
call
or
int
jbe
pop
jns
mov
xor
xchg
repz
int3
adc
es
out
data16
mov
xchg
or
lods
iret
sahf
das
dec
fwait
pop
push
jae
sub
fstp
adc
pop
loop
syscall
fadd
cmp
cmps
nop
scas
and
sti
or
out
mov
je
jmp
int3
int3
in
push
data16
sub
mov
mov
popa
add
jae
add
xchg
xchg
call
mov
mov
cli
js
outs
mov
dec
into
std
xchg
ror
(bad)
in
rcr
lods
push
jmp
lds
cli
movs
mov
mov
movs
jl
mov
pop
inc
mov
stos
xchg
mov
mov
std
and
xchg
and
push
jbe
das
imul
popf
(bad)
or
fs
mov
mov
cmps
popa
ret
jo
push
imul
xchg
inc
shl
jns
pop
fsubr
and
sub
jne
retf
add
lahf
dec
mov
das
and
push
(bad)
ds
xor
in
xlat
in
and
and
loopne
or
popf
mov
cli
jne
cs
mov
pop
or
sub
pop
jmp
call
fsub
add
retf
cld
and
pop
dec
or
or
dec
ss
fucomip
aam
mov
or
fs
retf
es
mov
test
adc
fimul
add
ror
xor
pop
movs
mov
cmp
fwait
cmp
icebp
xlat
das
push
int3
ds
or
pop
ja
jno
je
adc
in
cmp
mov
aam
in
sbb
in
jmp
dec
cmp
lds
xchg
jae
and
mov
test
push
popa
imul
jmp
push
cwde
jmp
jo
and
and
aam
(bad)
retf
out
jge
push
adc
xlat
ror
sbb
xor
in
mov
outs
aas
cmp
int3
adc
dec
mov
and
xchg
gs
or
push
and
test
mov
mov
imul
mov
rol
adc
xchg
mov
sub
pop
addr16
rcl
mov
push
or
test
sbb
cmps
stos
cmp
dec
loopne
fwait
mov
and
retf
cli
pop
ret
xchg
int
dec
sbb
ins
and
aas
fbstp
aaa
cmps
xchg
in
pop
cld
(bad)
(bad)
sbb
push
pop
fst
mov
(bad)
popf
pop
(bad)
xchg
adc
adc
mov
add
add
stos
neg
and
jno
gs
add
mov
adc
pop
mov
adc
sub
add
les
pusha
sub
mov
sbb
(bad)
frstor
icebp
push
xchg
movs
jmp
mov
dec
rcr
loope
push
enter
js
clc
adc
or
arpl
pop
dec
jnp
retf
(bad)
sbb
xchg
fsubr
dec
jbe
loop
inc
jp
mov
xchg
inc
cmp
outs
jae
adc
jb
pop
mov
fsubr
cmp
mov
aam
pop
xor
xchg
rcr
and
dec
enter
xchg
fild
mov
loope
mov
into
or
push
repz
sub
std
pop
test
test
cmp
adc
jmp
inc
cs
cmp
sbb
scas
mov
cmp
jl
icebp
fcomp
dec
mov
add
add
test
out
pop
pop
mov
mov
xchg
in
dec
test
mov
xor
push
or
xor
mov
or
sbb
mov
arpl
push
cmp
mov
(bad)
xchg
and
cmps
mov
cmp
inc
nop
(bad)
div
push
dec
rol
inc
out
scas
push
dec
js
xor
mov
push
test
jo
fiadd
sub
lea
out
(bad)
neg
add
xchg
call
xor
lahf
mov
xchg
inc
into
repnz
js
mov
ja
cmp
mov
nop
out
mov
mov
arpl
push
std
das
cmp
xchg
loope
add
cld
xchg
sbb
ss
lock
and
xor
loope
push
mov
and
mov
ja
sbb
test
gs
cwde
fidiv
cmp
mov
jp
adc
in
ror
int
fist
sub
bound
xor
push
jo
mov
sbb
add
cmp
mov
lahf
cmp
pop
and
idiv
and
cwde
or
clc
sbb
sub
jno
fs
rcl
movs
add
je
or
add
mov
xchg
or
xchg
push
in
add
sbb
imul
push
push
add
in
jne
push
mov
add
mov
or
stc
jnp
lods
push
ffreep
jne
xor
push
pusha
repnz
enter
xchg
pop
bound
dec
add
retf
stos
push
adc
movs
and
mov
adc
or
jge
shl
out
mov
inc
loop
lea
jg
lods
repnz
sub
inc
cld
xchg
es
(bad)
jns
add
cmp
jo
or
sub
dec
push
std
cmp
rcl
jg
sub
out
sti
fistp
rcl
cli
(bad)
jl
das
test
push
icebp
jno
popf
push
mov
sub
das
cmovno
push
arpl
retf
pop
push
gs
push
push
and
stos
stos
dec
sub
shl
mov
or
out
adc
lods
cs
in
add
xor
inc
pop
cmc
pusha
jmp
sbb
mov
ins
dec
daa
mov
push
cli
js
ror
sahf
fs
dec
jns
lods
iret
xchg
mov
and
or
cmp
push
(bad)
mov
push
gs
cmp
mov
ins
ja
mov
les
xchg
xchg
(bad)
jmp
push
stos
in
neg
(bad)
inc
xor
out
add
mov
(bad)
fcmovu
out
xor
mov
push
jmp
xor
push
sbb
inc
sub
dec
(bad)
and
les
jno
xchg
jl
adc
xor
std
lods
mov
sahf
lahf
xor
adc
sbb
dec
mov
push
outs
data16
(bad)
imul
inc
ins
mov
sub
inc
pop
icebp
(bad)
jb
inc
mov
dec
fild
mov
(bad)
pop
mov
add
movntq
ror
ror
cmp
ja
xor
aad
jle
xchg
test
aas
dec
mov
or
or
xchg
sub
xchg
xchg
xchg
lds
mov
inc
xchg
pushf
das
mov
jae
ret
cdq
in
adc
je
push
sbb
jmp
push
lock
pop
inc
cmps
jns
mov
aad
mov
(bad)
inc
inc
cmp
ret
jge
sahf
ret
mov
les
enter
jb
inc
leave
mov
popa
pop
sbb
push
imul
cmp
mov
xor
mov
iret
mov
loope
das
cmc
scas
push
(bad)
and
std
aam
fcmovnbe
pop
push
push
dec
stos
movs
cwde
push
dec
retf
sub
and
pop
adc
sbb
fneni(8087
shl
retf
add
daa
ficomp
cmps
push
push
test
sahf
mov
jno
cdq
shr
add
jb
dec
sbb
adc
sbb
adc
mov
idiv
sahf
mov
call
pop
addr16
cmp
mov
out
and
pusha
jbe
xchg
out
out
and
enter
retf
mov
lock
add
mov
mov
jno
sbb
xchg
jmp
ss
sar
es
jmp
push
fdivrp
bound
inc
xlat
int3
pop
sar
and
jbe
push
push
xchg
mov
stos
pop
cs
cmc
sti
ins
retf
push
and
shl
out
mov
sbb
call
mov
push
cmp
lds
dec
jmp
xor
jecxz
sub
cs
dec
mov
sbb
lds
pop
enter
mov
mov
ficom
arpl
mov
(bad)
aam
push
dec
(bad)
nop
fcom
aad
and
enter
clc
mov
push
test
push
setnp
or
inc
arpl
ins
jp
cmp
nop
shl
sbb
aas
adc
fsubr
jle
lods
jle
inc
xor
push
dec
pusha
pop
push
inc
sbb
or
mov
push
hlt
inc
(bad)
ret
pusha
adc
es
ja
adc
nop
and
add
das
rcr
jne
(bad)
ins
aad
into
push
mov
dec
fwait
jne
mov
out
ficomp
aam
xor
adc
sub
lods
es
push
retf
jae
push
push
xchg
shl
adc
(bad)
sti
jb
push
adc
xchg
add
jno
adc
jno
sub
mov
cmps
lds
scas
fnstsw
(bad)
add
and
out
sub
and
adc
nop
dec
movs
fst
cli
mov
push
or
int3
sub
shr
mov
pop
(bad)
inc
lods
inc
outs
pusha
mov
sub
fsubrp
movs
cmp
fs
in
imul
daa
lods
leave
pop
adc
adc
clc
and
hlt
adc
add
lock
imul
js
loope
jb
movs
jge
add
and
movs
sbb
sbb
push
pop
add
xchg
shl
mov
cli
rol
fidivr
xchg
fwait
pusha
adc
jle
dec
xchg
(bad)
cli
push
or
adc
(bad)
std
adc
pop
sahf
push
clc
in
movs
or
bound
(bad)
jl
cmp
cld
inc
pop
hlt
jo
xor
into
push
jecxz
in
xchg
cmc
and
test
mov
or
or
jnp
(bad)
mov
(bad)
or
sbb
lds
push
and
xchg
add
sahf
repnz
pop
push
xor
imul
sub
fsubrp
jg
sbb
inc
out
ret
push
ins
es
stos
(bad)
push
lea
xor
sub
add
xchg
inc
adc
adc
mov
dec
in
jbe
retf
nop
sbb
or
js
std
(bad)
or
sub
sbb
jo
stos
pushf
mov
add
out
retf
mov
je
div
fsubr
and
xor
int
retf
mov
scas
stos
jo
test
push
sbb
cmps
(bad)
stos
mov
jb
ret
stos
aaa
or
hlt
push
sub
icebp
mov
add
out
inc
mov
mov
pop
fstp
movs
aas
test
jge
dec
xchg
rcr
push
dec
push
dec
ins
je
gs
fisub
adc
sub
aam
pop
and
adc
repnz
lds
sbb
jecxz
push
sbb
in
sub
push
jmp
addr16
jg
lds
mov
repz
dec
in
pop
lahf
fcomip
vmaxpd
inc
enter
(bad)
loop
pop
push
push
cdq
add
inc
add
push
mov
push
xchg
(bad)
push
rcl
sar
sub
repnz
inc
and
retf
and
fiadd
js
les
cdq
rcr
xchg
cmp
push
shl
in
sub
mov
(bad)
pusha
mov
outs
pop
adc
inc
jle
sbb
sub
push
mov
mov
xchg
popf
jp
int3
repz
mov
clc
add
push
jbe
repz
or
fst
popf
fst
xchg
enter
push
dec
fsubr
aaa
inc
xchg
jmp
adc
loop
adc
and
fdiv
ret
sahf
outs
pop
mov
out
push
add
into
mov
repnz
dec
clc
push
js
outs
aaa
jno
dec
clc
call
mov
imul
and
xor
jae
int3
in
imul
les
dec
mov
jnp
fwait
mov
cmp
sub
int
es
adc
aad
pop
push
test
xor
xor
outs
in
ins
mov
daa
push
sub
lods
mov
mov
leave
jae
stc
jmp
xor
mov
or
dec
dec
push
pushf
dec
inc
mov
daa
xchg
xchg
mov
sub
inc
push
jo
cmp
pop
push
fidivr
and
push
(bad)
fdivr
aas
je
punpckhwd
in
in
nop
lds
xchg
fld
push
cmp
push
out
int
test
std
mov
add
fistp
xor
jnp
mov
out
mov
in
mov
lahf
mov
hlt
jl
mov
fistp
call
adc
mov
adc
mov
jbe
lods
repz
push
repz
dec
inc
xchg
scas
clc
sub
scas
in
test
sub
pop
mov
push
cmps
cmp
dec
lahf
cdq
mov
test
push
pushf
clc
cs
out
(bad)
and
push
imul
cli
jg
in
push
jno
xchg
imul
inc
or
(bad)
cmps
or
cmp
xchg
(bad)
adc
dec
push
fs
dec
jne
mov
sub
sub
adc
call
outs
xor
xchg
xchg
(bad)
icebp
sub
(bad)
repnz
fs
pop
mov
cld
cmp
aam
mov
mov
xchg
mov
sub
sub
mov
push
inc
xchg
xor
xchg
mov
push
aas
pop
or
mov
push
fadd
add
adc
push
mov
loope
ror
sbb
xchg
jle
movs
sbb
inc
mov
mov
dec
and
(bad)
pop
(bad)
mov
out
mov
fs
sbb
ror
sub
push
sub
lods
cmp
out
loope
dec
pop
fcom
pop
adc
mov
scas
mov
xchg
pushfw
mov
ret
stos
pop
mov
fs
xor
scas
push
nop
shl
inc
lods
inc
das
sar
sub
dec
jmp
jbe
adc
fistp
rol
dec
int3
sub
dec
xchg
pop
inc
repz
adc
outs
rcr
test
sti
fidivr
out
sub
ja
mov
scas
ret
movs
dec
mov
pop
push
test
inc
mov
inc
adc
cld
fadd
test
add
arpl
call
adc
xor
adc
(bad)
mov
jl
loopne
xlat
aad
js
xchg
push
loopne
arpl
clc
dec
cmp
push
(bad)
adc
dec
mov
cmp
pop
outs
out
inc
mov
rcr
mov
jbe
test
mov
arpl
mov
dec
ins
sub
outs
bound
int
jbe
sub
xchg
test
fdivrp
cwde
push
test
add
loopne
out
pop
push
jg
and
lods
mov
jecxz
xor
cli
es
push
xchg
call
inc
popf
shr
mov
dec
test
push
mov
pop
inc
pusha
(bad)
or
call
pop
cmp
add
fucom
cmps
or
pand
icebp
sub
stos
xchg
push
mov
test
sub
xor
mov
mov
retf
adc
retf
jle
xchg
cmp
xlat
dec
or
cs
repz
pop
cmp
pop
cwde
test
div
in
mov
pop
inc
fidiv
into
cdq
ins
jg
out
fistp
test
pop
rol
dec
pop
(bad)
ss
repnz
out
cdq
mov
movs
inc
jge
xor
shl
push
test
jo
imul
fldcw
xchg
push
xchg
cwde
xor
mov
and
in
cmp
and
xchg
cli
adc
test
add
sub
pop
xor
mov
sbb
sbb
mov
sbb
or
pop
xor
jo
loopne
out
jge
mov
(bad)
popa
jle
pop
add
jno
and
and
fisttp
sub
fcmovnbe
or
push
pop
in
pop
pop
icebp
aad
jo
sti
into
push
add
xor
mov
js
test
or
xchg
popa
scas
jo
sub
mov
sub
stos
xchg
push
adc
inc
fwait
jae
mov
aad
jg
mov
inc
mov
mov
cmp
inc
out
(bad)
cdq
or
adc
cdq
retf
mov
xchg
dec
sbb
repz
jecxz
repnz
repz
adc
popf
push
inc
les
sub
dec
or
in
ins
or
jl
pop
mov
and
pop
xchg
dec
inc
out
loopne
lock
cmp
mov
ret
jno
js
sub
int
push
adc
jmp
stc
cmp
cmp
cmp
out
fcmovnb
fstp
adc
dec
sub
stc
ja
movs
out
stc
loopne
push
jge
cmc
neg
mov
shl
or
into
and
sbb
and
mov
aad
call
and
xor
sub
add
les
add
jb
mov
in
add
mov
push
xlat
nop
cld
push
mov
sbb
sbb
dec
inc
cmp
xor
jg
sub
sub
sub
push
dec
nop
inc
dec
pop
mov
aas
and
xchg
call
cmp
hlt
out
shr
div
fidiv
sub
inc
sub
push
xor
shr
mov
out
ds
call
add
cld
in
dec
add
mov
gs
push
repz
pop
add
call
mov
jg
es
mov
sbb
jp
call
popf
mov
out
dec
cli
adc
mov
dec
call
leave
test
sub
inc
sbb
adc
cmp
cmp
inc
mov
pop
mov
sub
lods
or
in
push
bound
adc
mov
movs
leave
xor
sub
xchg
lods
out
cmp
loope
ret
sub
xor
cmp
xlat
(bad)
in
ins
data16
jl
push
fimul
mov
mov
nop
adc
(bad)
adc
or
inc
jge
adc
ja
fisttp
inc
imul
cmp
mov
jnp
les
das
ret
jg
pop
addr16
addr16
int
btr
mov
retf
aaa
mov
cwde
fwait
dec
xor
pop
les
pop
or
repz
add
fnsave
sub
dec
vpshufhw
retf
into
cmp
mov
clc
mov
adc
je
hlt
addr16
in
js
and
ds
sub
sbb
push
sub
(bad)
xchg
sbb
les
mov
push
pop
pop
call
lahf
and
retf
(bad)
call
in
(bad)
movs
test
sti
stos
sbb
xchg
js
or
jmp
and
shl
adc
mov
jl
loopne
(bad)
cwde
mov
xchg
mov
push
add
nop
fxch
cmp
adc
fidiv
jmp
test
cmps
sbb
inc
pop
clc
cmp
mov
cmp
imul
mov
out
jo
out
mov
dec
or
pop
popf
enter
jne
cmp
in
repz
icebp
ja
mov
aad
inc
aaa
cmps
int
cmova
call
mov
mul
pop
hlt
cmp
idiv
dec
mov
pusha
popf
idiv
(bad)
lea
aam
dec
in
iret
xchg
mov
(bad)
mov
shr
add
rol
movs
sbb
int
xor
mov
shl
not
xchg
sahf
sub
call
vmwrite
outs
jmp
jge
add
fisub
pop
adc
dec
or
xchg
shl
sub
mov
stos
xchg
ret
aad
xor
and
xlat
push
push
sbb
fiadd
add
out
sub
sahf
and
or
adc
jmp
sti
cdq
push
dec
xor
mov
add
dec
arpl
cmp
(bad)
mov
cmc
call
add
sub
scas
rcr
mov
mov
xchg
push
mov
test
mov
xchg
mov
ss
xor
xchg
stos
sbb
xchg
(bad)
leave
retf
into
mov
retf
stos
sbb
rol
out
jmp
mov
pop
pop
in
test
cmp
rol
mov
aad
(bad)
cmp
jns
mov
xchg
jno
jnp
jnp
xchg
cmp
(bad)
xchg
xchg
adc
dec
hlt
cmps
ja
add
sub
loopne
sub
adc
lea
and
lods
pusha
push
mov
stc
sbb
movs
fwait
lods
mov
fs
hlt
xchg
rol
push
mov
xor
mov
popf
cmp
or
xor
adc
inc
sar
add
or
clc
enter
popa
iretw
adc
ds
xchg
stc
add
fbstp
push
arpl
daa
push
push
cdq
in
mov
sub
jnp
inc
jns
xchg
adc
jl
jp
jp
or
neg
push
mov
push
adc
aas
sbb
push
jl
jle
mov
fwait
or
push
cmp
movs
es
jne
push
fwait
pop
sbb
dec
inc
mov
pop
pop
stos
out
sub
gs
pop
popf
sbb
nop
sub
push
mov
push
mov
les
aam
enter
pop
push
inc
and
push
movs
and
sbb
sbb
test
jmp
jp
ret
leave
retf
and
adc
sbb
jns
xchg
int3
jmp
pop
xchg
dec
sbb
hlt
aas
jae
inc
xchg
push
leave
clc
fnsave
popa
add
pop
inc
in
and
cmps
lahf
mov
gs
jge
xor
mov
jae
mov
mov
dec
dec
add
push
or
jecxz
mov
mov
push
enter
dec
inc
scas
sbb
call
outs
movs
xor
push
pop
push
cmps
jmp
and
xor
pop
iret
sbb
int3
in
test
sti
stos
pushf
ja
and
push
add
mov
in
dec
adc
xor
cmp
lea
adc
mov
dec
aaa
inc
ror
push
test
mov
inc
sub
and
push
dec
and
les
add
pushf
sar
xchg
mov
shr
cdq
ja
ja
pshufw
adc
sub
and
fdivr
arpl
push
ret
pop
idiv
lea
ss
push
inc
bnd
push
loope
pop
sub
or
out
fst
jp
jge
ja
xor
jmp
cmc
ja
std
scas
(bad)
aas
mov
jg
retf
mov
add
fcomi
mov
cmps
or
repz
sub
or
and
push
fidivr
and
jmp
loop
cmp
repnz
mov
xchg
cwde
ds
jle
mov
rol
outs
xchg
shl
ja
sbb
outs
cdq
sti
dec
fs
pop
jmp
retf
push
fwait
sub
pushf
inc
or
mov
call
imul
and
push
jg
xor
push
fwait
xor
lea
pop
and
xor
add
out
xchg
push
sti
jp
inc
sub
mov
xor
stc
sbb
mov
test
mov
fwait
out
xor
out
call
(bad)
stos
xor
push
cmps
loop
jp
in
movs
sar
and
cmp
mov
into
adc
adc
jns
ret
sbb
movs
mov
cmp
das
xchg
sbb
and
add
call
and
cmp
xor
or
dec
jmp
cmp
xlat
mov
sbb
xlat
ins
mov
in
pop
xor
adc
in
stc
cmc
cmp
movs
push
leave
add
and
jl
pop
hlt
out
imul
add
adc
add
loope
cmps
push
shl
and
shl
scas
mov
and
sub
push
lea
inc
jnp
mov
fsubr
outs
sbb
pop
(bad)
cmps
in
mov
jg
sub
data16
mov
and
pushf
jp
push
cld
cmps
xchg
and
jb
(bad)
clc
jl
push
sub
inc
jmp
pushf
cmp
mov
les
(bad)
out
imul
loop
dec
inc
outs
add
out
and
xor
adc
add
fstp
rol
call
xor
pop
fadd
mov
pop
rol
mov
stos
sub
jl
and
pop
push
int
mov
lods
or
shr
xchg
call
sub
rcl
imul
fst
jno
addr16
hlt
movs
iret
sub
inc
pop
pushf
fnstcw
pushf
fcmovu
out
fcom
ins
add
js
(bad)
xchg
inc
ins
add
pop
shr
ins
push
aam
mov
data16
inc
outs
ret
and
mov
les
xor
jb
pop
sub
inc
out
test
pop
scas
pop
lods
or
push
or
mov
(bad)
loope
cmc
add
pop
cmps
data16
(bad)
stos
and
sbb
ins
push
es
popa
cmp
jle
or
ret
or
add
inc
cld
mov
out
pop
jle
aad
and
add
test
lock
inc
pop
push
mov
scas
test
mov
fisttp
mov
in
jbe
adc
clc
xor
test
jmp
mov
xlat
es
ds
dec
pop
sbb
jp
popf
lods
sbb
or
out
out
sub
clc
ds
xlat
mov
push
add
mov
mov
call
pop
sbb
ins
sahf
pop
add
or
mov
(bad)
repnz
iret
rcl
test
pop
dec
movs
arpl
or
jmp
add
idiv
add
scas
shl
jae
aaa
into
mov
inc
xchg
test
and
push
sub
inc
sti
cmp
adc
xchg
(bad)
mov
sahf
mov
fadd
inc
pop
lea
xchg
imul
sub
mov
fisttp
leave
fdiv
popf
(bad)
int
stos
pop
retf
sub
add
xchg
in
ror
lock
sbb
enter
fidiv
imul
ins
xchg
popf
sbb
push
jo
(bad)
jl
frstor
sbb
xchg
jg
sub
out
and
xchg
push
cwde
jae
push
gs
mov
dec
sub
inc
(bad)
mov
loope
les
sbb
ins
or
and
jae
test
mov
les
cmps
dec
jns
xchg
mov
loop
lods
retf
dec
lea
or
cmc
mov
push
jnp
test
je
mov
and
mov
ins
jno
pop
mov
xor
adc
push
pop
xor
nop
lea
cwde
sub
mov
outs
out
or
push
fdivr
ss
aaa
outs
or
aas
or
repnz
or
mov
mov
es
xlat
imul
loopne
pop
in
mov
pop
mov
mov
pop
add
int3
mov
dec
fstp
dec
retf
outs
cmps
cs
push
jecxz
inc
sub
dec
mov
imul
sahf
fcmovne
jo
shr
daa
pop
(bad)
push
adc
js
pop
(bad)
cmp
sti
test
mov
adc
aaa
mov
dec
std
mov
push
dec
pop
nop
dec
jge
pop
adc
and
scas
gs
outs
es
add
lahf
adc
push
(bad)
jl
add
pop
cmc
inc
je
dec
push
cmp
mov
adc
sub
or
mov
aaa
enter
xor
jmp
push
call
add
ja
shr
xchg
xor
jmp
mov
mov
push
xor
data16
push
movs
test
dec
sbb
icebp
call
imul
mov
push
or
test
retf
std
jb
pop
mov
fsubp
xchg
loopne
inc
jns
fwait
xor
pop
pop
(bad)
and
mov
push
scas
adc
mov
cld
jge
out
pushf
addr16
pop
cwde
fstp
pop
pop
sub
and
add
fmul
iret
add
mov
sbb
mov
mov
cmps
dec
test
jecxz
adc
xchg
mov
mov
lds
cmp
xchg
pop
(bad)
(bad)
jbe
ret
int3
push
xchg
mov
mov
jne
push
and
mov
push
pop
pop
leave
sub
push
and
jne
mov
mov
ins
call
aas
sbb
ins
adc
imul
bound
adc
dec
inc
dec
outs
in
mov
inc
sbb
jo
push
mov
xchg
mov
je
xchg
outs
xlat
push
mov
bnd
lods
arpl
iret
mov
mov
imul
movs
inc
push
fadd
out
sbb
xor
inc
pop
cmps
fxch
pusha
push
xor
daa
pusha
add
jmp
mov
(bad)
rcl
stos
push
sbb
(bad)
push
mov
cmp
mov
sahf
jl
(bad)
cmp
out
mov
push
pop
loop
mov
fs
(bad)
(bad)
mov
adc
xchg
sar
jno
(bad)
cmp
jns
xor
xchg
add
rol
push
mov
mov
ror
loope
mov
ss
retf
sub
lods
daa
(bad)
out
nop
in
fcmovb
inc
jae
mov
adc
xchg
int
jmp
imul
dec
inc
ja
inc
je
xchg
add
(bad)
push
fs
mov
mov
daa
mov
aam
rol
sub
je
hlt
arpl
rcl
adc
xchg
or
mov
fld
int
push
mov
xchg
mov
repz
cmp
pop
ds
sbb
(bad)
jge
cmp
and
fsubr
pop
imul
add
mov
xchg
clc
es
sbb
or
mov
ins
(bad)
pop
jle
jbe
sar
pop
inc
call
mov
mov
test
pop
adc
lods
retf
pop
and
sub
cmp
pop
lds
add
mov
arpl
push
stos
(bad)
in
into
pop
retf
mov
jbe
popa
pushf
test
or
add
cmp
fsubp
mov
mov
ficomp
mov
dec
adc
mov
mov
cdq
icebp
add
mov
xor
mov
scas
or
enter
sub
es
mov
pusha
dec
xchg
jns
xchg
cmp
adc
call
adc
jnp
rcr
xor
mov
xchg
push
cwde
(bad)
js
xchg
or
pop
jmp
mov
mov
fisubr
pop
outs
scas
repz
mov
xchg
push
ret
lock
xor
repnz
jne
inc
push
jl
dec
js
or
fidiv
mov
fdivr
cs
test
mov
xchg
or
xor
jnp
inc
dec
and
and
aaa
mov
mulps
xchg
xchg
scas
aam
outs
adc
enter
mov
aaa
aas
xchg
psubd
mov
adc
out
mov
or
xlat
push
out
mov
xor
in
in
sub
cmp
jbe
sbb
cmp
pop
out
lds
cdq
dec
int
jnp
cmp
ret
pop
into
xchg
mov
cwde
les
fnstsw
xor
int3
cli
ror
into
fild
out
in
adc
jno
add
mov
scas
inc
xchg
add
xor
jge
mov
xor
dec
test
rol
je
cmp
sti
push
test
xchg
loope
mov
sbb
test
pop
jns
(bad)
pop
cmc
fbstp
adc
jno
xor
stos
jecxz
ins
add
mov
pop
push
add
mov
loop
jno
jmp
repnz
xchg
cli
xor
int3
sub
es
mov
jge
mov
ror
inc
sbb
fisttp
mov
repz
cmc
jbe
fs
dec
iret
inc
movs
jo
fadd
cmps
xchg
xchg
xor
pop
xor
pop
loop
and
mov
push
xchg
data16
pop
xor
xlat
sub
push
ins
mov
mov
jo
push
mov
(bad)
je
ins
lods
mov
mov
ret
pop
push
pop
icebp
daa
add
adc
pushf
jge
mov
aas
test
jns
scas
cmps
xchg
bound
mov
mov
pop
cmp
mov
mov
xor
mov
rcr
sbb
out
pop
push
or
push
icebp
fs
pop
adc
jl
push
mov
or
inc
mov
bound
add
xchg
mov
sbb
sbb
jmp
lahf
xchg
mov
sub
push
mov
fdivr
out
imul
push
test
push
pop
scas
mov
fild
outs
or
ret
imul
or
or
xchg
fwait
cwde
dec
dec
mov
inc
fistp
shl
add
mov
and
pop
lods
shl
retf
or
shl
into
sbb
int3
push
sar
dec
add
jmp
inc
fisttp
sub
mov
inc
fldenv
cmp
mov
adc
gs
dec
(bad)
pop
xlat
xchg
add
test
test
xor
xlat
or
lea
cmp
fstp
push
cmp
sub
mov
mov
ror
push
sub
add
shr
add
dec
in
neg
mov
inc
add
aaa
xor
adc
mov
xlat
shl
mov
cwde
xchg
xor
jle
retf
call
mul
push
rol
adc
adc
mov
dec
adc
stos
xor
nop
or
sbb
neg
push
cmp
xchg
mov
lea
xchg
mov
xor
(bad)
mov
pop
inc
add
stos
mov
mul
jmp
dec
sub
(bad)
in
mov
pushf
lods
aas
dec
out
imul
sar
jae
dec
jno
scas
out
test
xchg
mov
std
mov
pop
clc
out
out
fisubr
jg
cwde
push
sub
shl
leave
bound
shr
jnp
ins
mov
lods
popa
cli
repz
shl
inc
das
jl
bound
nop
fist
int
xchg
mov
mov
ja
lahf
retf
sub
jmp
cmp
or
addr16
inc
mov
out
loopne
sar
push
cs
jmp
(bad)
icebp
popa
lods
(bad)
jmp
dec
cmp
push
arpl
ret
dec
shl
(bad)
shl
shl
repz
mov
scas
shl
push
push
int
adc
int3
(bad)
or
cmp
adc
inc
sub
xchg
test
(bad)
sub
jl
inc
pop
mov
mov
mov
mov
loop
ins
sub
sub
lahf
add
sub
test
popf
jmp
or
adc
lods
movs
push
push
retf
or
jmp
push
inc
gs
inc
scas
test
inc
fnstenv
cmp
test
dec
adc
or
dec
inc
frstor
cmp
jge
les
sbb
and
mov
movs
rol
dec
not
push
cmps
les
aam
lock
or
dec
mov
into
mov
dec
in
ins
mov
stc
adc
arpl
and
les
add
nop
mov
aad
movs
mov
dec
or
jo
add
cdq
ror
aad
lahf
clc
pop
in
cli
mov
es
jmp
(bad)
bound
sub
pop
shl
mov
and
inc
sub
cs
dec
push
sub
jp
rol
sub
pop
mov
xor
xchg
loop
fsub
inc
clc
addr16
dec
call
fdiv
ret
sub
cmp
jo
movs
(bad)
fadd
fcmovbe
icebp
retf
mov
pop
jae
jle
mov
jp
and
xchg
lock
sar
js
adc
movs
jp
add
add
sbb
inc
or
fdiv
movs
leave
movs
mov
cld
mov
inc
mov
jge
cmps
(bad)
loope
xor
mov
test
add
(bad)
daa
push
and
adc
aam
pusha
pop
push
out
out
inc
shl
ja
xor
inc
shl
fs
sbb
lss
dec
scas
xchg
xchg
ss
aam
add
rcr
bnd
mov
jns
fcomp
mov
pop
mov
aam
(bad)
pop
out
out
bt
xor
push
sub
add
mov
cdq
inc
inc
cmp
dec
fsub
addr16
sbb
out
ds
(bad)
mov
data16
jg
mov
sbb
out
cmp
loopne
push
and
mov
sahf
pop
es
or
(bad)
inc
call
iret
cld
idiv
cmps
icebp
and
(bad)
mul
jp
pop
xchg
imul
sbb
aaa
cs
push
scas
xchg
call
rcl
test
mov
and
xchg
pop
popf
dec
ins
adc
push
jns
das
stos
popf
xchg
ret
ins
mov
dec
and
cmps
cmp
add
sbb
push
inc
sbb
(bad)
clc
cmp
cmps
jnp
pop
or
or
aas
pushf
add
mov
retf
scas
into
repnz
sbb
in
xor
push
popa
add
into
dec
lods
dec
xchg
gs
icebp
shl
mov
xor
stos
mov
jb
addr16
pop
(bad)
push
ja
shl
jns
sar
cmp
(bad)
rcl
adc
adc
lds
popf
gs
mov
leave
repz
(bad)
(bad)
outs
scas
dec
das
push
adc
jne
cmp
rol
adc
sub
outs
sub
dec
lahf
in
cdq
add
and
rcr
das
loopne
add
xor
pop
xchg
fisttp
pop
xor
xchg
xchg
mov
mov
data16
(bad)
sahf
fdiv
dec
(bad)
daa
mov
mov
sub
jmp
mov
mov
nop
mov
add
and
call
mov
sub
mov
mov
int
mov
push
adc
mov
add
xchg
sti
test
jbe
and
ins
cdq
sub
inc
outs
int
enter
or
mov
sbb
fmul
shr
add
add
jl
js
lods
or
cmps
xchg
and
xchg
dec
xor
jae
dec
ret
cdq
stos
(bad)
popa
ins
add
lock
sbb
div
xor
addr16
and
out
cmp
test
sbb
sti
and
push
in
inc
scas
and
pcmpgtd
aas
(bad)
mov
add
xchg
lock
imul
dec
jmp
adc
loopne
and
and
call
fist
or
mov
clc
out
cmp
cmps
jle
arpl
fs
in
cmps
cmp
dec
add
pop
dec
sub
xchg
call
jno
or
mov
inc
or
cmp
shr
xor
js
push
cld
(bad)
cli
gs
push
ss
out
cmp
les
sub
mov
sbb
ss
sub
mov
adc
jne
outs
inc
stc
or
popa
xor
in
or
es
jb
ja
int3
retf
out
out
and
or
and
cli
sbb
mov
enter
call
icebp
fldenv
fwait
pop
retf
ins
adc
inc
ss
lods
mov
cmp
fld
sbb
jecxz
call
mov
stc
inc
jmp
inc
jae
mov
dec
jnp
lock
int
and
inc
add
fndisi(8087
clc
lea
fld
movs
push
mov
jbe
pop
call
retf
bound
lds
sbb
push
xor
add
stc
push
scas
mov
sub
adc
mov
push
test
jae
loop
cmp
jns
adc
jae
hlt
mov
dec
test
retf
add
or
mov
push
ins
pushf
shl
ja
or
es
inc
jmp
mov
xchg
pop
ins
iret
add
xchg
in
mov
dec
lock
nop
ret
jp
mov
outs
adc
data16
(bad)
enter
gs
cmp
ins
and
or
rdtsc
cmp
adc
pushf
add
push
cmp
dec
bndldx
and
test
aas
mov
ds
mov
loope
mov
mov
out
cld
xor
aad
and
mov
das
sub
pop
ins
mov
les
std
cmps
fwait
sub
ss
adc
mov
scas
outs
dec
adc
or
dec
fisub
ds
imul
push
int3
shr
sbb
mov
ss
in
lds
out
sub
fld
cmp
les
das
enter
pusha
shl
out
test
ins
fsubr
mov
jne
popf
xor
fidiv
mov
retf
jns
loop
mov
gs
lods
inc
lock
inc
lea
std
mov
adc
mov
jb
les
xchg
cmp
add
inc
ins
mov
adc
dec
jl
jne
rol
aam
(bad)
jae
int3
pop
mov
aaa
push
pop
add
sub
cmc
in
mov
and
loop
ffreep
adc
hlt
add
lods
aam
shl
push
fucom
jmp
sub
fmul
fmul
sub
and
dec
retf
lods
imul
mov
(bad)
in
or
adc
int3
adc
outs
xor
cmp
hlt
xacquire
ds
mov
inc
sub
out
mov
push
out
jl
sbb
adc
test
sahf
mov
ja
sbb
fidivr
jb
push
add
clc
fucomi
je
or
nop
pop
(bad)
call
xchg
test
inc
mov
add
imul
cmc
cmp
sub
mov
fstp
ret
sahf
fstp
add
jle
int
mov
int
cld
retf
repz
cld
inc
movs
add
test
in
pop
pop
(bad)
mov
add
test
xor
and
leave
cli
add
push
xor
cwde
inc
idiv
popf
push
js
or
dec
(bad)
(bad)
nop
jbe
and
mov
xchg
cmps
push
sti
mov
fisttp
mov
inc
cwde
rcl
je
outs
daa
mov
push
rcr
sbb
sub
aam
icebp
mov
jecxz
push
fwait
xchg
push
imul
sbb
std
shr
jo
stc
dec
xor
shl
fld
inc
sbb
fld
xchg
and
or
addr16
jae
aaa
rcl
sbb
sub
outs
or
inc
xchg
ss
adc
enter
shl
or
movs
add
mov
lea
and
cld
jns
outs
xchg
cmp
imul
ins
add
jle
xor
cli
(bad)
push
(bad)
repz
pop
push
jp
dec
or
mov
xor
lea
ins
cmovl
dec
mov
jecxz
in
retf
aam
imul
cmps
add
xchg
jle
daa
push
sbb
inc
ds
dec
outs
adc
dec
or
movs
arpl
xor
and
push
add
push
mov
jmp
loopne
inc
mov
adc
pop
enter
xchg
(bad)
fisttp
rol
fidiv
mov
movs
dec
je
sti
inc
and
jecxz
jae
xchg
pop
cwde
js
rcl
sbb
lahf
dec
(bad)
retf
lea
push
sub
sar
mov
cmp
loope
cmp
stos
test
mov
cmp
scas
push
xlat
xor
daa
or
arpl
jae
std
adc
(bad)
out
push
pop
sub
clc
fs
adc
cmps
popa
std
(bad)
jp
cmps
cmp
pop
cmp
xor
mov
push
shl
call
mov
loopne
mov
sbb
cmp
xor
and
jae
mov
jae
push
ds
mov
adc
push
aaa
ds
hlt
jno
daa
fadd
push
int3
mul
add
stos
sbb
daa
dec
sar
fimul
pop
mov
pop
sbb
js
or
sbb
sbb
push
jecxz
test
sub
cmp
sub
sub
push
les
sar
test
and
aas
push
and
inc
retf
sub
jl
push
sub
fiadd
loope
sub
xchg
icebp
pushf
cmp
push
mov
adc
dec
int3
inc
push
lods
xor
cdq
xchg
ins
movs
movs
bound
jae
ins
lock
fimul
push
sub
call
xlat
add
mov
pop
shr
rcl
out
or
dec
xchg
ror
(bad)
leave
jne
hlt
sbb
xor
or
fnstenv
push
fcomip
into
movs
mov
sbb
ins
xchg
mov
shl
aam
dec
sub
(bad)
cmp
jmp
sbb
fld
or
leave
cmp
ret
jl
mov
(bad)
out
jg
or
(bad)
js
in
adc
adc
inc
data16
sbb
ret
jmp
scas
fs
mov
rcr
fisub
inc
push
test
jno
push
mov
into
es
outs
ror
(bad)
in
popf
ds
sub
ficomp
mov
jl
std
fiadd
fadd
dec
loope
xor
ins
push
cli
inc
sub
or
jno
xor
inc
repnz
imul
outs
adc
push
sti
jns
push
sub
inc
sti
(bad)
int3
inc
imul
pop
inc
jne
push
push
or
cmp
push
cmp
test
(bad)
leave
cs
gs
xchg
sub
aad
xchg
or
xor
jne
sub
test
call
into
xor
dec
push
and
loop
scas
mov
aam
aas
adc
or
cmc
jmp
repz
in
mov
pop
sti
inc
push
daa
ss
ins
or
pop
mov
call
fisubr
retf
imul
jb
xchg
push
pop
push
jmp
inc
inc
sub
adc
xor
popf
mov
ins
xor
out
or
sbb
outs
test
(bad)
mov
jne
xchg
and
call
xlat
imul
and
or
mov
mov
push
mov
jmp
ret
push
add
cmp
dec
(bad)
(bad)
xchg
sub
sbb
sub
(bad)
and
repz
push
inc
sub
repz
ja
fwait
inc
fwait
imul
mov
mov
jns
cmc
sub
out
xchg
push
or
xchg
inc
outs
imul
pop
clc
jmp
je
add
xchg
mov
xchg
jno
mov
dec
fisubr
enter
pop
cmp
push
arpl
(bad)
std
dec
inc
stos
inc
and
sub
jl
scas
or
push
iret
sti
ja
enter
inc
loop
cli
push
cmp
cmp
sbb
cmp
test
bound
jbe
fs
or
aad
pop
test
out
scas
xchg
push
les
dec
fwait
aad
fisttp
push
int3
enter
jnp
int
jnp
mov
clc
push
adc
in
cmp
mov
test
cmps
lods
pop
movs
xor
in
add
cmps
sub
data16
jl
sbb
inc
into
or
xchg
push
adc
cli
call
jns
lea
retf
cdq
mov
bound
(bad)
into
mov
xor
xlat
push
mov
xor
imul
mov
test
outs
sub
mov
mov
loope
retf
ret
inc
(bad)
(bad)
jbe
mov
fcmovbe
repz
sbb
stc
enter
aas
int
int
shl
add
ret
push
or
inc
(bad)
retf
dec
inc
aaa
mov
dec
sar
shl
mov
pop
aaa
fimul
adc
pop
push
mov
add
lds
dec
pop
adc
xlat
pop
add
ficomp
jl
in
dec
push
or
loope
popf
jmp
fucomi
pop
rcr
ins
cmp
out
cmp
add
or
push
mov
fwait
or
mov
sbb
dec
in
cmp
bound
aad
retf
add
cmp
test
add
ins
(bad)
(bad)
scas
fst
mov
or
mov
call
jmp
xor
inc
or
mov
mov
add
or
adc
int
xor
push
sub
pop
and
add
inc
enter
jns
mov
and
jb
es
inc
outs
loope
push
rcl
cmp
xor
int3
mov
push
lahf
das
cmp
adc
pop
or
out
xchg
ror
sbb
dec
scas
mov
into
in
test
mov
sbb
mov
pop
sti
push
div
nop
loope
xor
icebp
aad
xor
inc
shl
fwait
sub
test
pop
sar
test
mov
add
nop
and
pusha
ja
mov
call
retf
retf
aad
dec
sar
dec
sbb
ret
sub
hlt
xchg
(bad)
adc
outs
jmp
(bad)
mov
cs
fcmovnb
add
xor
and
shrd
lods
dec
ds
push
xor
call
pushf
daa
xor
mov
outs
mov
sbb
(bad)
ins
xchg
mov
jbe
pop
test
add
test
adc
fistp
jp
xchg
cmps
sbb
cmp
fbstp
dec
sti
sbb
mov
or
xor
jmp
mov
inc
ins
pushf
mov
aaa
addr16
dec
pop
daa
jno
add
cmps
loopne
pusha
pusha
inc
ja
push
inc
arpl
and
int
test
scas
leave
das
and
jb
mov
mov
mov
mov
sub
lods
mov
xchg
mov
dec
fld
imul
movs
les
test
push
mov
in
fwait
inc
repnz
cld
adc
jmp
enter
xchg
imul
mov
and
cmp
scas
retf
cmps
and
popf
jmp
les
mov
mov
sub
sub
pusha
inc
pop
imul
pop
into
mov
fwait
sbb
fdivr
and
xchg
pop
or
push
adc
inc
mov
ins
mov
mov
sar
xchg
and
sub
jmp
test
call
ror
xchg
mov
das
xchg
(bad)
movs
sub
aas
or
add
cmp
lock
mov
fwait
push
jns
xchg
mov
cmp
scas
or
jmp
loopne
cmps
fidivr
mov
adc
mov
stos
(bad)
jns
je
stos
clc
jge
mov
call
add
inc
mov
push
mov
scas
inc
jg
je
mov
dec
dec
mov
mov
sub
mov
dec
ret
mov
fnstenv
and
loope
pop
sar
pusha
inc
test
push
mov
fdiv
mov
add
outs
push
loopne
xchg
push
js
hlt
rol
clc
inc
cwde
shl
mov
popf
dec
xor
xchg
jg
movs
movs
out
lahf
int
(bad)
cmp
and
dec
sahf
pop
(bad)
cld
xchg
push
inc
add
call
and
lea
xchg
xor
fdivr
iret
mov
popa
dec
sbb
sub
leave
scas
bswap
xchg
out
pop
out
or
xchg
test
scas
test
jmp
div
das
push
lock
mov
cmp
xchg
mov
cmps
push
test
cmp
call
mov
(bad)
pop
mov
mov
dec
mov
pop
add
cli
pop
repnz
xchg
pusha
push
test
mov
lods
mov
retf
or
mov
es
pushf
(bad)
das
mov
cmp
inc
out
fsub
xchg
mov
lea
push
repnz
push
mov
adc
aam
or
inc
mov
ds
shr
in
xor
ja
iret
pusha
nop
jnp
pushf
jmp
jns
and
scas
xor
add
arpl
mov
pop
pop
adc
jle
jo
int3
bound
not
push
adc
add
stos
push
xor
test
js
mov
popa
xor
imul
popa
in
scas
jne
or
mov
xchg
jb
fisub
icebp
mov
pop
and
std
and
ret
repnz
mov
nop
inc
dec
scas
cmp
cmp
aad
push
arpl
imul
mov
enter
lock
mov
jmp
xor
sub
outs
mov
ds
mov
or
jb
xchg
mov
dec
push
adc
adc
stc
stos
call
dec
xor
cmp
(bad)
neg
stc
xor
mov
sub
sub
stos
js
sub
push
xor
cmp
inc
mov
dec
mov
inc
mov
jo
(bad)
pushf
stos
jecxz
fidivr
je
arpl
ss
sbb
fist
xchg
jo
and
adc
mov
ror
mov
neg
scas
lods
xchg
adc
xor
push
inc
iret
outs
mov
sahf
mov
fs
pop
lds
cwde
push
sar
test
aam
add
xor
or
mov
or
sub
push
jnp
xchg
and
loopne
lahf
add
mov
push
sahf
icebp
or
pop
out
lock
push
mov
call
(bad)
mov
outs
add
jp
mov
add
adc
int3
out
leave
aam
jns
lahf
scas
pop
mov
fisub
or
or
scas
push
clc
pop
adc
mov
xchg
add
ins
ss
add
pusha
xor
cmc
pop
jb
call
inc
add
xor
xchg
and
lds
add
xchg
jge
shl
and
cmp
cwde
pusha
mov
fcomi
scas
loop
and
ins
aam
mov
clc
cwde
js
call
rol
adc
or
std
out
sub
dec
rol
aam
and
lea
xor
fisttp
add
scas
mov
rcl
xchg
in
and
fisubr
imul
jge
xor
cmp
das
jl
ret
push
or
out
mov
pop
adc
jne
adc
inc
mov
ss
jg
push
dec
inc
push
cmp
loop
fisubr
cmp
(bad)
mov
scas
push
pop
outs
ret
das
js
jg
pop
and
cmp
imul
enter
mov
adc
xor
fisub
add
or
mov
jmp
inc
stc
arpl
mov
mov
sbb
mov
clc
push
fisub
aas
sbb
xor
rcr
ret
outs
out
add
call
xlat
test
jne
adc
repz
or
clc
gs
mov
in
(bad)
movs
les
into
inc
test
imul
xor
jnp
push
inc
daa
test
jmp
lea
push
pusha
and
jbe
ins
adc
adc
inc
cmc
(bad)
arpl
mov
inc
(bad)
jg
pop
fsub
inc
mov
mov
and
jae
stos
pop
and
jae
cmp
jg
cmp
dec
push
xchg
and
fadd
es
cmps
enter
fild
pop
bound
aaa
pop
test
xlat
test
push
mov
push
rcr
push
sbb
dec
iret
xchg
enter
or
or
sub
jno
adc
retf
test
or
scas
neg
push
and
mov
sbb
pop
push
cli
pop
push
pop
add
mov
shl
push
xchg
jecxz
xor
pop
out
jl
js
movs
aad
xor
pop
shr
ins
mov
js
movs
pop
inc
(bad)
jle
sub
sub
xor
push
sbb
xor
stos
adc
inc
dec
loopne
mov
ss
sti
idiv
xor
xchg
xor
enter
inc
jmp
fs
xchg
jmp
mov
or
add
mov
xchg
pop
sbb
sub
outs
xor
mov
ret
dec
and
sub
leave
inc
adc
scas
dec
jle
fstp
fdivr
cmp
adc
add
or
or
mov
push
jno
push
in
neg
in
xchg
call
mov
add
or
das
dec
sbb
adc
mov
mov
jb
xor
imul
fwait
dec
jno
xchg
popa
jle
or
dec
out
ins
fisttp
(bad)
lock
(bad)
je
pop
lock
cmp
cmp
test
loopne
fmul
xchg
mov
adc
mov
enter
lds
bound
sti
fxch
out
jl
enter
jp
add
mov
fisttp
addr16
mov
loop
cmp
imul
ror
or
add
in
rcl
mov
movs
fcomp
pop
xlat
mov
cmp
arpl
imul
je
push
and
in
add
cdq
aam
push
dec
jp
or
cmp
mov
sub
push
inc
mov
jecxz
jmp
sub
push
push
bound
xor
in
sub
xlat
(bad)
mov
inc
cwde
(bad)
retf
sub
test
cwde
loope
icebp
push
push
sbb
sar
jle
cmps
lea
ins
lahf
inc
pusha
mov
js
push
dec
mov
mov
adc
mov
mov
xchg
mov
xchg
adc
(bad)
sbb
retf
movs
mov
call
aad
mov
lods
repnz
inc
xor
inc
lds
aad
pop
imul
push
pop
ja
shl
xchg
hlt
pop
jecxz
mov
dec
out
int3
cld
aam
cmp
xchg
pop
test
cmps
and
mov
outs
pushf
jb
xor
in
jb
arpl
fucom
shl
js
cmp
and
(bad)
pop
mov
and
sbb
adc
out
(bad)
aas
(bad)
(bad)
cs
in
jae
outs
mov
lods
sub
hlt
call
rcr
and
inc
call
push
jne
push
and
mov
dec
ja
loope
sub
xor
jmp
repz
lods
add
xchg
add
in
nop
xlat
push
mov
ret
pop
dec
ins
gs
mov
out
mov
je
pop
pop
movs
fwait
and
dec
sub
test
dec
rol
data16
popa
sub
imul
jne
cmps
push
imul
add
fadd
mov
mov
adc
xor
mov
call
adc
sar
mov
movs
cmp
leave
shl
imul
cmp
(bad)
push
jbe
push
shr
or
add
fwait
mov
inc
jp
jge
sub
out
or
mov
mov
sar
or
idiv
(bad)
cmp
mov
jp
enter
mov
imul
js
pop
popf
sbb
not
nop
lock
mov
adc
std
fwait
stos
sbb
cli
add
sbb
lds
retf
std
std
leave
add
fptan
push
out
adc
loop
cmp
add
xchg
daa
iret
shl
cmps
inc
mov
sbb
lds
add
outs
shr
dec
inc
jnp
jp
stc
(bad)
jbe
mov
adc
xchg
cmc
xor
loope
cmp
mov
fistp
stc
push
dec
xlat
out
outs
push
xor
add
adc
xchg
outs
out
pop
jmp
push
or
cdq
push
pop
jne
ins
inc
dec
add
pop
cmps
sar
lahf
mov
fs
inc
ret
adc
popf
mov
mov
xchg
adc
aam
call
inc
addr16
cmc
mov
int3
dec
xor
in
pop
cmp
mov
(bad)
out
fwait
adc
jmp
loope
retfw
or
mov
aad
or
xor
(bad)
dec
out
pop
movs
shl
fwait
jg
inc
dec
mov
cmp
add
(bad)
fnstsw
sahf
add
(bad)
ror
xchg
in
sub
push
lods
dec
mov
sbb
sar
pusha
loopne
inc
call
sbb
dec
popf
and
mov
dec
es
add
xor
fdivrp
sbb
xor
test
inc
mov
push
aam
(bad)
mov
inc
dec
mov
push
pop
xchg
xor
(bad)
mov
jbe
retf
push
iret
fisttp
movs
xor
je
dec
inc
dec
xchg
repz
push
dec
in
pop
arpl
dec
aam
xchg
lea
add
out
jecxz
jne
mov
pop
xchg
push
inc
aaa
push
test
adc
mov
jg
cmp
ds
sti
call
ss
push
fsubp
mov
(bad)
sar
cmp
js
inc
or
mov
idiv
mov
sub
loop
fwait
in
mov
adc
xor
inc
mov
cs
das
sub
cmps
sbb
shl
cs
push
and
add
fs
inc
enter
(bad)
sbb
mov
pop
dec
not
jo
dec
push
ja
test
mov
cs
stos
jns
or
mov
outs
cmp
test
cmp
sub
dec
mov
sbb
pop
into
adc
rcl
fmul
sub
xchg
pop
xor
and
popf
push
mov
mov
xchg
mov
test
cmc
sub
das
fstp
mov
cmps
je
js
(bad)
fwait
test
mov
jle
loop
jno
push
retf
mov
cmp
jg
dec
and
fwait
(bad)
loopne
push
sub
mov
and
push
scas
add
pop
imul
inc
out
jmp
(bad)
mov
lds
mov
cmc
loope
ror
xchg
mov
cmp
xchg
enter
push
popf
dec
mov
inc
and
or
sti
popf
xor
scas
jno
or
call
xor
arpl
pop
pop
outs
ret
lea
push
cmps
sub
inc
pop
lock
hlt
xchg
push
cmp
or
jecxz
(bad)
push
mov
dec
push
gs
fldenv
sub
add
or
jno
data16
adc
xchg
ins
jecxz
cmp
mov
add
int
popf
jle
xchg
loop
in
fsub
lahf
inc
mov
pop
push
sub
push
rcr
push
push
add
mov
pop
or
adc
std
dec
xchg
xor
cmps
call
pop
adc
inc
mov
jmp
mov
imul
jbe
jno
cmp
fcmovnbe
pop
and
dec
sbb
(bad)
data16
xor
add
repnz
repnz
bnd
neg
push
push
outs
aad
or
push
nop
out
or
jge
pop
fnstsw
adc
sbb
mov
dec
ss
cdq
test
outs
jl
call
addr16
ret
ffree
dec
cli
adc
add
into
mov
cmp
pop
leave
pop
fcmovu
mov
pushf
sti
and
xor
mov
cmps
mov
pop
inc
aad
jae
rcl
stos
mov
lea
or
imul
out
rcl
sub
sbb
cmp
call
dec
scas
cmp
or
push
xor
add
xchg
mov
pop
icebp
in
dec
pushf
rcr
xchg
mov
or
jne
pusha
or
or
imul
mov
sbb
and
xor
movs
sub
pop
jmp
inc
pcmpeqb
dec
dec
sbb
ins
xchg
xchg
nop
cmp
cld
scas
jmp
cmp
xchg
fstp
aad
push
jmp
stc
push
fdivr
jb
in
pop
jo
pop
inc
xor
test
scas
in
mov
cmp
(bad)
sbb
inc
icebp
pop
je
push
retf
les
leave
push
dec
stos
cwde
xor
stos
mov
add
pushf
out
xchg
fdiv
jp
pop
pop
loop
inc
test
fidiv
dec
mov
stos
push
repnz
fstp
inc
pop
push
jmp
xchg
and
cld
xchg
scas
shr
xchg
mov
rcr
push
nop
lods
pop
pop
cmps
iret
fnstsw
movs
inc
ins
mov
int
mov
pop
(bad)
jg
dec
jo
movs
inc
xor
aad
and
ds
push
push
jg
push
sbb
dec
jbe
xchg
fst
cmps
pop
loop
enter
movs
cli
mov
dec
adc
cwde
call
sahf
cli
xlat
push
jge
and
sub
jbe
test
(bad)
fs
inc
xor
lds
or
out
pop
mov
mov
movs
pop
sbb
push
and
jbe
push
add
pop
lea
jae
gs
mov
ja
pop
inc
adc
push
xchg
push
cmp
mov
std
aas
and
pop
cmp
jmp
add
shl
mov
out
rol
in
scas
xor
js
adc
int3
pop
xor
or
adc
adc
imul
in
push
or
mov
out
mov
or
jmp
mov
test
iret
mov
xchg
xor
ret
inc
xor
jno
pop
cmp
push
out
cmps
jge
(bad)
fisubr
imul
test
outs
data16
sti
sti
call
mov
pmulhw
fwait
cmps
xor
(bad)
mov
jecxz
and
mov
lea
pop
test
test
xchg
inc
adc
jns
out
shl
pop
fbstp
inc
ja
popw
movs
sub
addr16
mov
outs
ins
(bad)
shl
pop
pushf
and
pop
das
dec
ja
jg
out
pop
add
imul
sti
sar
mov
jb
pop
push
cld
mov
pop
out
out
call
js
cmp
sbb
loope
cmps
or
jle
or
dec
or
je
aas
jle
inc
jno
adc
in
xor
pop
mov
cdq
mov
jns
imul
loopne
mov
dec
mov
(bad)
mov
xor
cmps
(bad)
stos
mov
sbb
mov
in
pop
jnp
movs
in
xor
push
das
call
inc
dec
inc
and
sbb
xchg
bound
fld
or
push
add
add
outs
pop
test
and
push
loopne
adc
and
mov
and
(bad)
loope
pop
jp
dec
je
shr
add
mov
xchg
cmp
test
add
mov
es
add
out
and
and
and
or
xchg
movs
aas
fs
push
setne
or
(bad)
cmc
push
ror
ror
cmp
lea
adc
out
add
inc
mov
push
pop
mov
shl
bound
pop
ds
pop
or
cmp
push
scas
icebp
popa
pop
or
imul
xchg
jmp
xchg
jbe
push
add
add
xchg
xchg
outs
stc
fs
icebp
retf
fsubr
dec
in
stc
sar
test
mov
loope
lock
push
push
jmp
stos
jne
mov
sbb
jl
call
sub
loope
jle
inc
js
mov
cmps
ret
js
jmp
pop
push
fistp
xchg
ss
lds
dec
ror
retf
ror
mov
xor
dec
popf
jnp
sub
das
scas
test
mov
in
div
mov
sub
(bad)
dec
jo
xchg
cmps
mov
jb
inc
sub
jle
ins
mov
pop
loopne
pop
(bad)
(bad)
fst
adc
inc
push
push
push
adc
fist
sub
imul
mov
and
repz
shr
mov
jne
or
fdiv
or
dec
mov
mov
into
cwde
out
je
shl
stos
addr16
ja
mov
scas
(bad)
xchg
mov
pop
mov
lahf
pop
pushf
test
test
jmp
aaa
jo
mov
push
pop
rcr
fstp
mov
pop
dec
aaa
push
(bad)
lea
loop
les
jae
mov
cwde
scas
jnp
or
in
ret
mov
add
jno
or
mov
int
push
sbb
sbb
ss
mov
loopne
or
test
jmp
xchg
jl
in
and
sub
sbb
and
hlt
mov
(bad)
in
aam
sub
pop
cmps
cli
sbb
sub
dec
fisttp
add
scas
push
sub
sub
adc
test
int3
inc
repnz
fcmovnb
cli
jno
cmc
dec
not
dec
sti
inc
and
loopne
jmp
push
sahf
lea
clc
(bad)
ins
cmc
bound
push
into
data16
pop
scas
pop
xchg
mov
mov
jo
lods
pusha
jl
mov
push
mov
add
xor
xor
jbe
mov
leave
mov
ja
and
repz
or
jl
sub
push
loop
mov
cmp
rcl
sbb
imul
cmc
sbb
dec
xchg
in
mov
and
sbb
cmp
ret
pop
call
pop
mov
ja
scas
pop
and
(bad)
ins
test
xchg
pushf
into
movs
add
arpl
xor
test
iret
ins
push
mov
loop
cwde
mov
or
cmps
in
pop
dec
adc
add
ret
out
fidivr
pop
and
and
or
mov
loope
cmps
rcl
add
or
ror
mov
xor
pop
fnstsw
sti
clc
ja
rcl
mov
fmul
jp
cmc
jge
fisubr
mov
icebp
sbb
push
ds
cmp
shr
lahf
dec
or
pusha
sub
mov
test
inc
dec
std
sbb
lea
pop
jae
push
add
sbb
mov
jl
(bad)
in
aaa
add
dec
mov
adc
test
movs
mov
cld
pop
xlat
cdq
popa
(bad)
retf
xchg
push
shr
adc
int
(bad)
cmp
aaa
fldcw
stos
packssdw
xor
in
add
repnz
add
aad
and
test
dec
shl
shufps
fcom
cdq
xchg
xor
bound
aaa
(bad)
mov
icebp
adc
sbb
push
xor
mov
and
push
or
daa
lds
push
adc
and
mov
push
lods
mov
(bad)
dec
push
dec
adc
adc
imul
enter
push
mov
cdq
inc
jae
mov
push
into
xchg
mov
int
mov
dec
gs
dec
jmp
xor
mov
in
cmc
pop
cli
adc
adc
mov
loope
scas
repz
xlat
adc
inc
push
js
dec
lods
cmp
call
das
(bad)
ror
add
sbb
push
mov
mov
mov
cmc
(bad)
repz
cwde
mov
in
hlt
and
push
ror
cmp
imul
jae
in
in
call
(bad)
xchg
or
adc
ins
sbb
(bad)
je
adc
in
pop
dec
push
pop
push
ds
test
and
mov
enter
mov
mov
jecxz
out
into
xchg
xchg
lods
retf
inc
ficom
js
cmp
in
dec
sub
dec
mov
xchg
pop
ins
and
(bad)
or
int3
call
neg
into
adc
lds
lock
daa
into
jle
retf
lods
jecxz
leave
pop
fwait
xor
popf
movd
lods
cwde
test
imul
cld
push
fcmovu
sar
aaa
pop
ins
inc
fnstenv
cld
idiv
dec
cmp
xchg
pop
xlat
sub
mov
int
mov
push
and
pushf
sbb
imul
fisttp
pop
push
jno
sub
pop
je
add
pop
movs
sbb
mov
sbb
das
or
je
cmp
fcmovbe
outs
retf
aas
aaa
fwait
ret
mov
fs
daa
icebp
mov
sub
ret
test
cmp
jg
pop
xor
xchg
nop
out
sub
mov
lock
(bad)
push
test
ss
xchg
movs
xlat
pop
not
cmp
adc
and
stos
(bad)
test
sub
scas
aad
rcl
and
sub
(bad)
fstp
pop
xchg
mov
mov
icebp
xchg
(bad)
dec
cli
retf
xor
jnp
push
xchg
pop
or
(bad)
jmp
(bad)
adc
stc
adc
loope
pop
pop
xchg
aaa
sbb
hlt
xor
adc
fld
push
sbb
mov
sbb
mov
in
jp
mov
fcomp
mov
dec
or
cmp
rol
stos
scas
and
sub
cmp
in
push
imul
imul
cld
call
add
or
aaa
xchg
mov
add
mov
pop
cmp
and
mov
shr
mov
xlat
cmp
(bad)
loop
sub
cmp
(bad)
sub
dec
push
mov
popf
pop
and
into
dec
rol
or
or
mov
je
jmp
aaa
popf
dec
sbb
lock
mov
add
adc
cmp
push
ds
xchg
stos
imul
cmp
xchg
das
push
popf
cld
out
mov
push
leave
or
jle
fs
rol
outs
das
inc
and
sub
add
scas
(bad)
not
adc
mov
mov
pop
mov
cwde
(bad)
sbb
dec
shl
sub
out
sahf
aaa
add
into
icebp
ror
xchg
int
(bad)
jae
repnz
aaa
and
push
sub
das
mov
mov
inc
popf
out
es
mov
add
js
mov
pop
mov
fidivr
(bad)
jno
adc
sub
lock
pusha
stc
test
inc
jecxz
in
push
fisttp
sub
jns
xchg
mov
scas
sbb
dec
add
sar
jmp
fcom
leave
push
inc
mov
push
pop
in
adc
stos
fsub
push
sbb
into
fwait
repz
scas
mov
or
jle
enter
leave
cmp
xor
loopne
test
dec
pop
cmps
mov
mov
cmp
sahf
mov
icebp
add
scas
arpl
add
sahf
pop
mov
scas
mov
mov
imul
(bad)
fiadd
lds
sti
repnz
pop
imul
outs
or
mov
lods
mov
retf
repz
imul
push
(bad)
cmc
mov
xor
daa
das
adc
retf
inc
jne
mov
mov
sbb
movs
scas
dec
or
or
add
xchg
in
shl
mov
(bad)
and
fnstenv
daa
pop
clc
adc
cmp
xor
dec
and
cmps
push
neg
xor
mov
ficomp
xchg
(bad)
adc
imul
cmp
jmp
add
or
int3
jnp
test
mov
dec
shl
pop
xor
mov
lods
leave
enter
mov
pop
sbb
or
(bad)
call
hlt
loopne
jo
aam
lahf
aaa
mov
imul
enter
adc
and
push
lea
jecxz
outs
scas
aas
jp
mov
sub
nop
sbb
rcr
jecxz
loopne
and
(bad)
stos
xchg
adc
cmp
aaa
retf
in
rcl
ss
daa
ficomp
ret
mov
or
sub
sbb
mov
fldenv
and
iret
mov
pop
fs
xor
(bad)
neg
scas
push
mov
in
movs
sub
and
dec
jne
dec
lea
dec
in
sub
adc
xor
inc
lock
sub
pop
mov
(bad)
test
mov
sbb
inc
lahf
inc
sbb
les
xchg
mov
ret
jns
arpl
add
std
xor
mov
repnz
mov
xchg
mov
push
aaa
cmp
adc
arpl
iret
je
ins
outs
std
sub
fnstsw
sub
movs
bnd
rcl
sub
pop
fcomip
pop
enter
icebp
mov
jo
mov
dec
cmp
mov
arpl
add
xchg
int3
je
sbb
scas
fld
cmps
jns
pop
mov
add
push
and
call
inc
mov
rcl
in
add
movs
mov
enter
lds
outs
mov
std
jo
jl
add
cmp
inc
mov
popa
add
sbb
nop
mov
std
push
dec
xchg
inc
mov
jmp
and
add
push
sub
mov
inc
enter
add
(bad)
mov
mov
adc
jmp
pop
retf
xor
dec
sub
in
push
cmp
arpl
cdq
mov
push
push
sbb
xchg
test
ss
jl
mov
mov
pusha
rol
pop
push
imul
retf
mov
sub
sub
mov
dec
or
push
push
mov
jmp
push
or
cmp
(bad)
std
les
push
pop
jg
arpl
sbb
push
or
add
into
gs
sub
adc
dec
sub
(bad)
daa
imul
cmp
xor
dec
lea
jg
lock
xchg
sub
sub
call
les
sub
xor
or
sub
sub
and
ss
mov
mov
outs
test
cmc
mov
adc
push
jns
dec
and
repnz
adc
fidiv
bound
rcl
retf
inc
in
jb
jno
scas
xor
out
inc
sub
inc
test
jmp
push
leave
inc
jge
loop
(bad)
loope
loope
jmp
mov
dec
cmp
test
faddp
mov
scas
pop
repnz
test
xchg
cli
push
dec
xchg
dec
ret
sbb
out
mov
add
(bad)
daa
add
(bad)
xor
inc
leave
sahf
add
push
inc
push
mov
inc
je
ret
retf
cdq
sbb
sti
push
out
shl
loopne
jg
leave
inc
retf
mov
mov
fild
sbb
shr
mov
cmp
pop
push
xchg
mov
fwait
pop
bound
mov
inc
fstp
syscall
add
das
and
test
xlat
mov
push
outs
je
cmp
clc
jge
push
mov
cli
into
pop
clc
xlat
jmp
hlt
adc
xor
push
daa
mov
inc
adc
rcr
ins
call
cmp
sbb
xchg
sbb
dec
add
outs
loopne
dec
shl
adc
jae
xchg
test
loop
(bad)
mov
pop
sbb
loop
sub
sbb
or
push
mov
xor
cs
push
jns
mov
in
rcl
addr16
xor
fisub
arpl
(bad)
add
ss
mov
test
fisub
lahf
mov
or
mov
(bad)
jg
fimul
push
pop
xor
(bad)
sbb
mov
in
sbb
sub
or
mov
fiadd
ins
push
xchg
call
mov
dec
rcl
scas
and
test
ja
or
ja
xchg
sbb
repnz
xchg
sbb
add
fcom
push
dec
dec
or
hlt
add
xlat
aaa
out
sub
xor
cmc
test
fld
out
jle
sub
neg
stos
jbe
xor
sub
xchg
xchg
aam
popa
pop
add
repz
test
idiv
int3
sbb
in
xor
adc
aad
jnp
out
push
pop
mov
out
xchg
mov
xor
jl
fucom
jb
mov
mov
dec
(bad)
inc
cmp
xor
mov
jmp
mov
pop
push
xchg
dec
push
adc
push
sub
movs
mov
sub
mov
inc
mov
xor
xchg
sbb
fs
pop
sbb
sbb
js
cmps
pop
xchg
cmc
jl
sub
fwait
pop
sub
push
or
mov
adc
sub
cmps
in
pop
retf
scas
mov
jb
cmp
fnstcw
test
je
dec
sub
mov
retf
mov
jmp
pop
(bad)
iret
adc
fdiv
cwde
and
cld
pop
test
push
mov
mov
bound
add
into
jnp
and
(bad)
dec
push
repz
and
sti
clc
loop
mov
sahf
shl
lods
gs
ins
xor
pop
cwde
adc
sub
adc
dec
inc
rsqrtps
pop
(bad)
push
imul
xchg
xchg
xor
add
xchg
jle
(bad)
in
les
mov
and
add
pop
push
inc
aaa
or
ja
pop
xchg
out
inc
and
neg
cdq
push
xor
pop
mov
lds
clc
call
das
retf
hlt
lahf
lods
call
jne
arpl
jp
clc
sub
mov
lahf
sbb
sub
aam
mov
adc
xchg
aad
pop
in
pushf
test
in
je
jp
sbb
retf
xor
ins
or
xchg
xchg
pop
adc
(bad)
push
push
or
mov
adc
push
pop
rol
ins
mov
mov
cmc
not
and
ins
dec
ret
push
mov
and
xchg
jecxz
mov
das
out
jns
or
sbb
adc
sub
movs
cli
cs
sub
push
or
jne
in
pop
cmp
sahf
xchg
(bad)
rcr
pop
xchg
rcr
push
fbld
mov
mov
pop
inc
push
xchg
cmps
xor
cdq
sub
clc
cmc
scas
call
nop
or
data16
test
stos
pop
(bad)
jg
cmp
scas
movs
xor
lods
inc
push
push
mov
call
ficom
(bad)
bswap
xor
mov
daa
mov
mov
inc
jp
mov
push
add
dec
cli
lods
test
mov
pop
shl
(bad)
sbb
sbb
mov
(bad)
(bad)
enter
mov
sub
inc
stos
mov
outs
icebp
scas
or
jb
test
jmp
shl
push
push
dec
push
sub
cld
test
cmp
out
pop
scas
or
imul
lods
out
dec
and
rol
fwait
clc
pop
mov
loope
ins
dec
mov
out
jmp
mov
mov
std
scas
jae
int
push
push
dec
push
sbb
mov
pop
mov
cs
out
jns
gs
daa
imul
fwait
xchg
scas
inc
add
mov
shl
inc
neg
xchg
cmps
cmps
dec
add
cmp
xor
cld
xor
aad
adc
jmp
adc
fst
imul
pop
ss
sub
stc
cmc
jp
cli
jmp
ret
mov
jbe
or
dec
(bad)
xor
retf
stc
push
icebp
xor
int3
hlt
pop
cs
cs
cmp
or
popf
cmc
inc
pop
dec
pop
repnz
and
test
outs
jbe
inc
lahf
or
cli
inc
cld
xor
pop
adc
xchg
ins
mov
es
inc
jp
mov
repz
push
test
inc
out
(bad)
lea
inc
sti
sub
mov
aad
pusha
(bad)
mov
sub
xchg
pop
jmp
adc
and
pushf
xchg
cmps
push
mov
out
pop
shr
mov
fsub
cmc
jmp
adc
mov
dec
inc
(bad)
jmp
and
and
mov
xchg
std
adc
cli
retf
sub
adc
push
lock
rcr
sbb
inc
jg
adc
(bad)
mov
mov
std
das
jno
out
add
inc
cmp
dec
rol
aad
jbe
adc
idiv
jno
push
and
ret
sub
xchg
gs
cli
imul
and
dec
mov
sar
aaa
jb
xchg
mov
add
(bad)
jecxz
xor
jl
stc
mov
jle
adc
inc
call
push
movs
ds
sahf
mov
and
fidiv
scas
cmp
int3
dec
outs
or
push
or
sub
or
pop
xlat
xchg
arpl
dec
call
daa
dec
sbb
(bad)
pop
dec
rcl
xchg
pop
mov
je
das
data16
dec
fimul
push
jmp
fldenv
mov
bound
xor
push
out
clc
mov
cdq
call
es
cwde
rcr
neg
out
popf
in
ret
and
sbb
xlat
push
daa
mov
or
(bad)
ret
xor
or
stos
xor
push
jne
in
push
pusha
jbe
ret
test
ret
sbb
adc
add
inc
dec
rol
call
cwde
mov
jmp
and
lock
and
add
jnp
in
setns
ret
push
push
dec
xchg
test
jmp
sbb
add
sub
fisubr
inc
mov
out
in
inc
dec
xor
leave
pop
add
pop
or
mov
jmp
lea
xlat
dec
in
xor
sub
(bad)
mov
int3
jns
sahf
sub
jb
ret
je
mov
add
sub
mov
jno
cmps
xchg
imul
das
pop
repz
adc
lahf
loop
in
jmp
push
jl
fnstsw
dec
std
dec
xor
add
daa
jecxz
inc
lahf
push
push
xchg
inc
cmc
aam
leave
and
lahf
rcl
sub
inc
xchg
mov
lock
jo
sbb
bound
sub
movs
shl
out
xor
inc
xlat
stos
add
imul
inc
lods
adc
xor
stos
addr16
retf
je
xchg
sbb
aas
push
or
jno
inc
or
(bad)
xchg
ja
push
scas
inc
stos
xor
icebp
nop
mov
imul
mov
or
mov
xchg
jns
mov
cmps
loope
xchg
dec
pushf
cld
pop
dec
out
and
js
data16
retf
(bad)
jbe
add
adc
sbb
push
adc
mov
cmc
data16
and
pop
add
pop
in
test
outs
rcl
int
cmp
jmp
ins
inc
out
push
dec
das
in
or
adc
loopne
xchg
adc
inc
pop
addr16
lods
lods
adc
mov
add
push
sar
cmps
inc
mov
xchg
xchg
mov
sbb
retf
std
jno
adc
and
xchg
cmps
in
add
cmc
scas
sub
out
inc
arpl
pop
cmp
pop
adc
pop
movs
jb
xor
inc
(bad)
jne
and
pop
xlat
jge
(bad)
cs
sar
cwde
in
fs
cmps
mov
or
cld
xchg
loope
inc
mov
daa
mov
ja
shrd
inc
sbb
push
or
jmp
stc
or
loop
out
add
cli
xor
adc
mov
inc
movs
fninit
dec
add
and
add
test
aad
movs
test
mov
mov
push
sbb
adc
inc
scas
shr
push
push
sbb
sbb
sbb
pop
mov
mov
ror
mov
jnp
jle
jmp
leave
xchg
stos
inc
js
adc
outs
stos
or
push
or
mov
scas
pop
xchg
fcmovb
sar
jnp
outs
lods
jle
pop
xor
xchg
dec
xlat
xchg
add
and
jge
clc
jmp
sbb
xchg
xchg
sub
xor
pop
retf
popf
cmp
pop
mov
sub
cmp
(bad)
pop
scas
int3
jmp
cwde
add
popf
xchg
mov
dec
push
mov
jge
pushf
mov
hlt
(bad)
mov
push
mov
or
jae
repnz
ret
fs
and
and
lds
add
nop
leave
push
popf
arpl
jg
cmp
ins
jmp
aad
movs
shl
out
imul
movs
js
clc
clc
xlat
pause
outs
cmp
into
push
nop
pop
and
xchg
sub
or
lea
sbb
(bad)
mov
int
xor
stos
mov
cld
jae
inc
out
out
movs
ret
call
(bad)
mov
or
xchg
popa
mov
mov
sar
dec
aam
aam
fstp
push
in
xchg
cmp
les
sub
shl
mov
jbe
popf
call
test
cli
or
ja
add
lods
add
cmp
adc
movs
call
retf
and
inc
inc
movs
test
dec
or
call
dec
xchg
push
sahf
push
into
push
jecxz
xchg
lock
push
pop
aam
(bad)
push
pop
pop
mov
push
stos
mov
mov
or
add
add
out
test
mov
test
push
arpl
aaa
pop
mov
mov
sub
cmp
fisttp
push
std
mov
and
xlat
(bad)
pop
pusha
mov
ret
inc
mov
std
mov
pop
xor
dec
cdq
mov
outs
xor
les
jmp
pop
mov
les
aaa
cs
stos
js
and
inc
dec
sub
shr
and
sub
call
adc
adc
je
jle
sahf
outs
es
mov
cmp
sbb
adc
(bad)
cmp
xchg
hlt
pop
movs
lock
xor
movs
or
pushf
add
outs
ffreep
aaa
je
add
mov
outs
icebp
add
cmp
leave
lods
shr
rcr
and
mov
rcl
jmp
int
jp
fdiv
dec
inc
aaa
das
mov
push
ret
jle
push
mov
inc
pop
jge
xchg
sub
adc
sahf
jnp
call
in
es
fisub
mov
rcr
fld
ss
sub
das
xor
popa
stos
je
in
mov
xchg
cmp
or
rcl
pop
ins
nop
js
inc
in
rcl
cmp
mov
adc
test
mov
cwde
sti
std
adc
shl
neg
inc
ror
addr16
pop
in
mov
and
stos
retf
loop
daa
cmp
xchg
pop
out
imul
pop
mov
inc
pop
xor
movs
jno
mov
in
sub
sbb
and
or
movs
movs
lahf
sbb
jno
mov
inc
lea
mov
inc
nop
or
daa
daa
lock
das
jmp
dec
loop
ret
dec
out
cs
stos
addr16
cld
cmp
and
dec
sub
sub
loopne
mov
mov
and
cwde
xchg
xchg
jae
(bad)
xor
push
int3
test
pop
arpl
sbb
movs
or
cld
pop
(bad)
outs
in
inc
(bad)
mov
mov
ret
jg
inc
scas
push
enter
iret
stos
mov
fidiv
sbb
jp
in
push
jmp
mov
jmp
jae
fstp
lock
ja
ret
ret
out
jp
jns
psllq
push
or
cmp
out
adc
mov
xor
jo
jmp
mov
scas
xchg
jmp
mov
jnp
je
pop
jnp
das
push
aaa
push
fucomp
mov
test
or
xchg
pop
fisub
mov
pop
cmp
sbb
stc
inc
gs
jns
addr16
(bad)
and
adc
push
movs
inc
push
lock
(bad)
fisttp
mov
(bad)
fidiv
jecxz
imul
bound
shl
inc
sbb
ret
inc
ja
fmul
clc
or
mov
popf
mov
push
mov
inc
sub
xchg
mov
pop
dec
sbb
xor
mov
outs
in
aad
sti
repz
mov
leave
sub
cmps
fstp
and
retf
pop
pop
pop
popa
push
sub
ins
lods
mov
and
mov
ja
stc
jno
sub
sbb
shl
xchg
sbb
fld
(bad)
jmp
out
dec
gs
lahf
cmp
sti
(bad)
std
pushf
in
and
add
or
inc
mov
push
jb
lds
sbb
fldenv
bound
inc
sub
fistp
call
xchg
sbb
pop
dec
pop
movs
and
sbb
sub
or
jnp
into
mov
jmp
aas
(bad)
and
mov
std
in
in
xor
ror
add
movs
sub
sub
(bad)
inc
arpl
xchg
inc
xchg
test
push
sbb
push
and
mov
loop
fs
stos
aad
mov
xchg
icebp
mov
out
movs
fdivr
push
adc
sahf
into
shl
ret
sbb
inc
pop
lock
adc
pop
jnp
inc
xchg
out
pusha
fidiv
fwait
(bad)
xchg
sbb
sbb
ret
cwde
xchg
inc
lahf
push
ins
addr16
sub
and
je
aam
push
pop
mov
rcl
inc
cmps
push
mov
jns
jecxz
jecxz
xor
rol
sub
or
xlat
(bad)
mov
(bad)
cmp
out
out
enter
mov
fnsave
adc
cdq
call
mov
jge
dec
sub
mov
sar
mov
lock
shr
cdq
mov
xor
dec
xor
mov
push
dec
arpl
aas
ror
je
xchg
xor
dec
and
daa
xor
das
mov
add
sar
mov
fldcw
mov
pusha
je
cmp
test
pusha
push
in
or
pop
sub
and
inc
dec
sbb
ins
inc
pop
add
mov
test
jae
stos
mov
dec
(bad)
mov
and
push
out
(bad)
retf
add
mov
dec
dec
cdq
shr
repz
jmp
imul
std
sbb
add
and
add
add
rcr
cmps
scas
ret
jo
push
js
adc
cmp
lock
pop
loopne
inc
into
and
jg
retf
xor
jnp
adc
or
scas
sub
pop
in
push
loope
jb
arpl
in
push
ror
and
mov
(bad)
ins
call
pop
out
lahf
int3
mov
cmp
adc
sub
test
push
dec
je
pushf
xchg
jp
add
inc
xor
cmp
xchg
in
mov
adc
xor
cmc
test
adc
rcl
push
xchg
pushf
mov
push
push
sbb
jg
pop
in
inc
jb
data16
sub
test
pop
inc
dec
fidivr
mov
mov
xchg
sub
jg
xor
and
sbb
dec
out
or
mov
mov
sbb
out
inc
pop
aas
ss
push
lahf
mov
mov
(bad)
lods
ins
inc
nop
pusha
btc
jne
repz
cmp
mov
adc
jmp
push
movs
mov
fsubp
cmp
push
pop
inc
outs
out
rol
push
add
pusha
mov
inc
jae
into
mov
call
repz
das
sbb
cli
jb
xor
xor
aaa
cmc
pop
hlt
sub
add
mov
mov
shl
in
add
jmp
lea
popf
nop
pop
(bad)
mov
mov
stos
mov
mov
dec
dec
mov
in
sbb
aad
mov
pop
test
(bad)
call
pop
mov
lahf
ins
mov
inc
(bad)
daa
iret
popf
pushf
jns
inc
dec
adc
aaa
or
push
cmps
mov
cdq
xlat
pop
mov
enter
cmp
mov
cdq
enter
inc
sub
popa
dec
cmp
mov
jae
add
xor
push
int
pop
test
movs
mov
cdq
pop
dec
add
fnsave
nop
ja
sbb
pop
sub
inc
loop
movs
in
sahf
bound
pop
push
dec
stos
in
enter
mov
xlat
pop
xor
jge
pop
add
xor
mov
dec
loope
aad
fisttp
into
jle
push
mov
mov
add
push
sbb
jno
pop
sti
lock
(bad)
icebp
int
sar
adc
pop
push
movs
jg
rcr
jecxz
sahf
push
pop
push
lods
leave
test
cmp
adc
inc
scas
ficom
cmc
or
inc
cwde
cmp
adc
out
ins
es
jecxz
push
sbb
movs
gs
or
jmp
xor
and
shl
dec
call
aas
and
jle
jle
xchg
rcl
jmp
loop
cmps
push
(bad)
mov
shl
rol
pop
cmps
mov
jae
inc
cld
and
push
ret
aad
sbb
dec
adc
push
iret
shl
sbb
push
loope
cmp
sbb
xor
rol
or
add
push
mov
jecxz
lea
ja
mov
aaa
inc
add
cmp
or
adc
(bad)
repnz
fwait
(bad)
or
xor
rol
ja
fwait
sbb
test
ficomp
adc
dec
inc
es
xor
outs
jnp
mov
int
outs
inc
mov
jo
mov
push
retf
push
(bad)
cmp
je
ds
xchg
jl
sti
pop
in
or
mov
jne
pop
mov
pusha
std
retf
mov
push
fnstenv
xlat
push
rol
loop
retf
mov
pop
jp
loopne
xchg
call
pop
lods
rcr
lds
fisub
aaa
daa
push
(bad)
std
mov
push
jns
loopne
iret
jns
cld
retf
clc
and
movs
xchg
dec
xor
test
ret
and
ss
out
push
arpl
out
jno
push
in
test
rcl
xor
jg
mov
mov
cs
lock
sbb
jg
xor
cwde
push
sahf
push
or
xchg
int
xor
mov
push
add
fld
dec
hlt
dec
popf
(bad)
lods
add
ins
sahf
or
call
xchg
test
xlat
iret
adc
xor
nop
(bad)
cld
out
in
mov
test
sub
mov
pop
push
movnti
fs
jns
rol
lahf
pop
shl
or
push
sti
fwait
out
es
call
cmp
(bad)
inc
daa
test
sub
dec
xchg
adc
bound
cs
mov
jno
hlt
or
loopne
pop
out
ret
or
data16
sub
movs
mov
push
mov
or
pop
add
bound
or
mov
xchg
pop
div
js
mov
add
cmc
pop
or
aas
dec
pushf
js
call
js
jp
cmp
xchg
push
leave
rcl
inc
jne
jbe
dec
add
sti
lahf
cmp
jmp
dec
xchg
ret
push
ja
mov
sub
add
jge
xchg
icebp
jp
pop
jbe
dec
into
not
jmp
icebp
cwde
aam
aad
rol
mov
inc
aas
fwait
xchg
fstp
out
ja
push
mov
shl
retf
dec
imul
mov
and
xchg
jbe
pop
sub
sbb
xchg
sbb
fld
repz
cdq
stos
dec
lahf
es
xchg
dec
mov
retf
xlat
jle
and
pushf
jns
sub
jg
mov
loope
push
popf
cmps
dec
es
inc
mov
and
xchg
es
push
mov
popf
cwde
in
xchg
dec
data16
mov
pop
retf
xchg
and
push
sub
cli
sbb
xchg
mov
cmp
or
loopne
lds
es
xchg
push
xchg
scas
xor
push
daa
into
mov
cmp
movs
js
leave
lock
adc
sysret
lds
xor
scas
add
stos
add
sbb
int3
out
hlt
ja
jge
out
pop
jne
jle
mov
push
iret
or
mov
or
lahf
jmp
(bad)
scas
xor
imul
retf
aad
push
dec
ss
gs
imul
rcl
and
push
mov
pop
add
ins
and
adc
pop
cli
aaa
dec
das
xor
push
mov
mov
inc
sbb
cmps
ja
repz
mov
dec
dec
cmp
push
xor
(bad)
aad
cmps
xchg
mov
mov
ret
push
jmp
push
add
sub
or
mov
pop
leave
nop
dec
mov
std
cmp
jae
push
popf
jb
xchg
loop
push
test
ins
mov
jne
push
inc
pop
cmp
jae
jnp
push
test
jnp
jo
jns
(bad)
loope
sbb
inc
repz
ror
xlat
adc
jp
add
push
call
xchg
or
es
and
retf
mov
pop
pop
test
mov
shl
(bad)
loop
lahf
dec
sar
dec
mov
jns
bswap
mov
jmp
es
aaa
push
gs
out
mov
mov
lahf
add
and
sahf
rol
jb
les
or
cmp
dec
cmp
sub
fild
jae
mov
(bad)
cmp
out
stc
ret
push
arpl
rol
and
gs
shr
fild
ret
adc
movs
adc
test
cmc
add
sbb
sbb
cmps
sbb
push
fiadd
lock
lahf
lock
cmp
nop
(bad)
in
inc
adc
cwde
ins
pop
test
and
js
inc
mov
mov
jmp
jmp
mov
mov
cmp
sahf
mov
nop
hlt
js
mov
push
or
gs
sub
fld
in
jns
inc
and
(bad)
push
mov
outs
pusha
or
int
pop
and
bnd
cs
jmp
(bad)
inc
imul
(bad)
repz
fldenv
jmp
daa
sub
loop
add
in
sub
test
or
sti
adc
stc
fdivr
cdq
jae
stos
mov
sbb
test
pop
dec
jo
ficomp
in
popf
mov
movs
jp
mov
inc
pop
out
mov
(bad)
mov
xchg
pop
push
test
mov
jge
not
and
jbe
xchg
add
sub
jae
xor
(bad)
ins
sar
imul
shl
or
rcr
cmp
mov
out
push
into
into
mov
or
clc
repz
jp
ficomp
xchg
dec
adc
mov
pusha
push
or
mov
xchg
dec
pushf
lds
clc
dec
scas
jmp
mov
mov
add
mov
xchg
rcl
sub
adc
push
mov
cmp
lahf
push
psubsw
test
mov
aad
test
(bad)
sbb
inc
shr
pop
mov
fs
jge
in
aam
rcl
test
add
arpl
in
enter
sbb
stos
lods
push
mov
mov
scas
add
std
push
add
adc
pop
hlt
daa
jo
mov
push
push
stos
inc
loop
dec
mov
jb
push
loop
jg
loope
add
pop
test
movs
dec
adc
cmp
jmp
data16
sbb
das
pop
sub
pop
cmps
or
and
(bad)
mov
dec
in
ret
in
or
jg
jmp
sbb
cmp
xor
retf
mov
sub
sbb
add
cli
xchg
dec
mov
call
mov
(bad)
cld
mov
out
cwde
push
sub
call
dec
xchg
int3
jge
inc
test
mov
sub
add
cmp
mov
push
test
fadd
mov
loopne
cmp
cmps
jmp
fnstenv
les
sub
(bad)
cmp
cmc
adc
jne
psubusb
mov
mov
mov
repnz
leave
jecxz
xor
test
and
sbb
pop
dec
fcmovb
and
fs
dec
push
fidiv
xor
fldcw
mov
jmp
cmp
mov
adc
or
push
mov
jb
sbb
xchg
cmp
(bad)
fidivr
rcl
mov
dec
sub
rcr
je
js
jecxz
test
dec
jae
xchg
mov
(bad)
xchg
int3
inc
je
push
scas
sub
(bad)
push
fistp
mov
adc
test
jne
mov
(bad)
popf
call
mov
inc
loope
clc
in
je
cmps
clc
sub
inc
addr16
push
lds
je
(bad)
in
pusha
jne
setne
ret
jg
and
mov
xchg
dec
inc
mov
fld
mov
dec
mov
inc
call
fstp
leave
fsubrp
js
sbb
sub
sub
sbb
dec
fcomi
jnp
sbb
jnp
pop
jno
stos
repz
sub
xchg
cmp
retf
loopne
sub
xor
pop
push
std
jb
pop
dec
in
popa
inc
sbb
pop
sub
fisttp
add
mov
sbb
rcpps
pushf
and
dec
and
cwde
mov
or
cld
sub
xor
sahf
add
jns
mov
(bad)
fist
scas
fnstenv
ds
jecxz
ret
pop
pop
mov
popa
push
dec
je
in
pop
jmp
and
icebp
xchg
ins
jl
add
lock
imul
mov
das
dec
xchg
xor
jl
mov
repnz
or
add
mov
in
mov
sti
mov
jns
push
fisttp
mov
pop
xchg
sub
or
jb
retf
push
cmp
icebp
cmp
lahf
dec
out
push
mov
cli
xor
pop
sbb
inc
loop
scas
shl
pop
(bad)
pop
clc
mov
fisubr
mov
cwde
dec
fs
inc
enter
dec
mov
aas
ficom
out
jns
cmps
data16
adc
add
xchg
les
cmps
mov
jmp
loopne
mov
mov
jno
jb
(bad)
mov
enter
push
test
movs
(bad)
push
iret
lods
xchg
lock
fbstp
dec
(bad)
ja
and
mov
xor
popf
dec
outs
adc
jecxz
lea
cmp
adc
inc
cdq
retf
adc
fadd
inc
icebp
sub
lock
test
ret
push
pop
fs
xor
jle
adc
leave
cmc
comiss
xor
adc
je
sti
out
ins
pop
sbb
adc
loope
jle
mov
stos
dec
xchg
std
mov
push
mov
popf
aaa
call
mov
mov
dec
stc
and
sbb
rcl
and
mov
or
or
test
ret
aad
pop
inc
pop
or
jp
aaa
cmp
js
daa
mov
das
daa
cmp
mov
test
jbe
cmp
aaa
fsub
mov
pop
sbb
shr
pop
repnz
xchg
xor
and
imul
or
sub
dec
inc
jb
not
jge
fsub
sbb
and
xor
loopne
sbb
aas
(bad)
push
retf
fsubrp
sub
jmp
mov
call
mov
jbe
pop
jge
retf
xchg
jb
stos
js
pop
dec
test
arpl
mov
mov
or
mov
das
sbb
sub
test
dec
mov
sbb
cmp
push
test
test
scas
icebp
jno
mov
fwait
jbe
cmp
mov
mov
add
dec
push
push
push
shl
or
mov
fild
mov
cmp
cwde
es
lods
sbb
call
out
push
aad
je
mov
sbb
jnp
aas
or
mov
sbb
pop
rcr
jne
and
cs
jle
mov
dec
ins
jp
frstpm(287
test
and
test
mov
push
call
test
and
fcmovbe
jno
jb
sahf
or
xlat
(bad)
and
hlt
and
call
sub
daa
sahf
int3
jecxz
addr16
pop
xchg
clc
jns
popa
mov
mov
mov
movs
mov
call
lds
jne
push
push
add
ja
mov
push
sbb
mov
rcr
mov
pop
add
enter
popf
pop
sub
test
or
pop
xchg
or
stos
jae
and
pop
js
adc
mov
dec
rcl
sub
mov
jmp
xlat
xchg
fstp
ins
mov
mov
mov
mov
dec
xchg
nop
addr16
ins
dec
leave
or
clc
sbb
add
pop
mov
rol
mov
add
rcl
fbstp
adc
sti
sbb
lea
mov
inc
jmp
jp
jecxz
pusha
xor
mov
add
xchg
pop
add
push
ins
push
(bad)
lea
cmc
ficom
jl
xchg
icebp
enter
rcr
jmp
xchg
outs
mov
mov
add
and
jge
test
retf
bound
stos
ss
test
mov
jb
cld
inc
or
cmp
and
cmc
lahf
cs
sub
je
(bad)
xor
test
cmp
gs
push
mov
int
(bad)
mov
lock
xchg
scas
add
shl
inc
loopne
jg
arpl
loop
jb
mov
retf
mov
xor
int
(bad)
push
mov
ret
jae
push
jae
inc
cli
cmps
ret
mov
pop
mov
push
lods
call
ins
push
ror
leave
cmp
xor
ret
push
adc
in
or
mov
out
retf
dec
daa
dec
jns
xor
sub
add
adc
sbb
pop
cmp
(bad)
aam
fild
and
(bad)
ret
ret
jg
cmp
jne
fs
pop
imul
jg
cs
stos
cmp
mov
mov
lahf
cmp
out
in
jge
out
pop
leave
cmp
out
cdq
jmp
and
or
test
das
cdq
stos
aaa
icebp
das
fwait
sbb
inc
dec
push
push
jns
mov
sar
push
cs
adc
or
dec
jecxz
movhps
xlat
mov
xor
(bad)
ins
cmp
push
repz
dec
mov
lock
sub
and
push
xchg
sbb
jne
cdq
dec
es
retf
jnp
shl
das
mov
adc
rcr
inc
arpl
cmps
dec
ret
xor
mov
xchg
xor
add
vpunpcklwd
inc
sbb
repz
xor
(bad)
and
and
inc
mov
xor
pusha
pop
iret
sbb
rcr
mov
or
jecxz
or
fist
data16
fnstcw
sub
mov
imul
outs
dec
fnsave
aad
add
addr16
pop
mov
movs
inc
test
and
sbb
sahf
imul
pop
pop
aam
out
mov
rol
movs
enter
fst
shl
cmp
jmp
mov
bound
adc
jp
pop
fcmovne
sbb
inc
xchg
bound
test
mov
aad
jb
sbb
loopne
xchg
shr
inc
dec
bts
pusha
lock
adc
ret
push
dec
aaa
retf
adc
cmps
(bad)
jp
jbe
xlat
retf
mov
cmp
jmp
mov
aad
(bad)
ss
mov
stos
cld
pop
nop
in
rol
sbb
mul
and
sti
jp
or
scas
pushf
mov
push
or
sbb
or
sbb
or
add
data16
daa
sub
xchg
push
mov
arpl
dec
loope
jne
lock
cmps
or
inc
xlat
pop
test
jge
stos
lods
dec
(bad)
jmp
dec
icebp
retf
rol
dec
rcl
mov
sbb
ja
mov
xchg
fsubr
mov
daa
cmps
push
xchg
inc
push
sbb
pop
scas
mov
in
sar
jne
pop
leave
lea
xor
inc
out
mov
les
std
sahf
aaa
scas
push
test
cdq
jnp
xchg
push
inc
out
scas
xchg
loopne
aad
pop
loope
test
jmp
test
scas
xchg
cmp
pop
add
cmp
jecxz
xchg
dec
iret
xchg
fist
fidivr
or
xchg
retf
out
inc
or
in
dec
mov
pushf
sbb
mov
xchg
stc
pop
sbb
dec
xchg
pop
sahf
mov
call
dec
sbb
outs
inc
clc
fisub
sbb
sbb
loope
jmp
fstp
arpl
lahf
movs
(bad)
repz
pop
in
fwait
jp
mov
cmp
leave
outs
mov
pop
ss
push
sar
aam
retf
pushaw
inc
mov
jge
aam
or
mov
les
sub
aam
ret
cmps
cwde
clc
js
push
xchg
or
jns
sbb
mov
call
dec
inc
addr16
jb
jb
fistp
movs
out
ins
ins
xlat
in
mov
(bad)
leave
ficomp
dec
add
mov
cmp
mov
jnp
movs
test
and
pop
pop
sub
fcomp
pop
fcmovne
pusha
mov
xchg
mov
jecxz
(bad)
sahf
cmps
inc
stos
cmp
inc
xor
shl
pop
or
cli
nop
hlt
xor
mov
pushf
jp
in
dec
xchg
jno
xchg
and
pop
and
int
or
mov
jmp
dec
out
lock
pop
outs
aas
fnsave
push
ds
and
xchg
xor
push
mov
adc
sub
sti
push
fimul
push
jo
mov
jmp
or
movs
adc
sub
add
je
neg
jne
sub
icebp
loope
stos
dec
sub
adc
pop
ja
mov
sub
cmp
stos
dec
aad
stos
cmps
aaa
xchg
mov
mov
(bad)
xchg
in
pop
out
loope
aam
mov
add
les
sahf
mov
hlt
fisttp
cmc
movs
adc
jo
loop
xchg
or
icebp
mov
loopne
push
lods
pop
cmp
jl
jne
push
in
add
shl
ins
adc
fld
add
js
stc
aas
loope
jp
popf
add
shr
nop
inc
sbb
movs
jecxz
aam
aas
xchg
les
call
mov
jbe
gs
es
ss
adc
les
pop
sti
fcomi
outs
push
out
in
mov
cmp
add
inc
jo
mov
inc
pop
and
push
dec
(bad)
jg
in
cmp
loopne
addr16
or
mov
and
stos
jmp
pop
cmp
mov
mov
aad
imul
adc
(bad)
neg
je
hlt
retf
test
dec
test
loope
inc
jle
(bad)
fist
jb
add
cmp
aas
inc
or
dec
sub
aam
icebp
iret
sub
ss
je
ins
hlt
adc
popa
sahf
pop
mov
arpl
or
stos
int3
or
mov
imul
sbb
hlt
(bad)
xchg
or
pop
dec
mov
fst
repnz
fist
push
call
xchg
push
and
js
xchg
aaa
in
(bad)
and
pushf
out
fst
jle
mov
(bad)
mov
jb
cdq
mov
je
pop
push
fbstp
sti
(bad)
pop
sub
aam
pop
mov
jne
cld
sbb
mov
cdq
sub
daa
xor
sbb
arpl
aam
int
dec
or
cdq
ins
repnz
je
xor
rcr
neg
lds
sub
cmc
sar
push
mov
adc
gs
jmp
movs
mov
inc
sti
jmp
ftst
hlt
pop
or
mov
or
xchg
int
stos
pop
idiv
popa
fdivrp
dec
dec
(bad)
mov
cmp
pop
push
loopne
inc
out
add
inc
stos
js
fisubr
sti
mov
or
inc
pop
sbb
ret
push
std
add
outs
or
mov
jae
aad
test
cwde
shl
call
pop
add
dec
out
jns
adc
(bad)
shl
xor
dec
xor
or
cmc
cdq
jo
add
enter
je
adc
fisub
retf
sahf
push
stc
nop
push
sbb
cmp
mov
mov
aaa
test
mov
loopne
inc
call
hlt
or
daa
mov
add
loope
add
repz
out
sub
mov
xor
xor
les
test
fst
hlt
add
add
mov
pop
cmps
pop
mov
dec
mov
cmp
xor
inc
inc
dec
rcl
rcl
jge
mov
ret
mov
xor
fistp
cmp
outs
push
aaa
das
push
pop
gs
(bad)
iret
or
sar
cmp
push
aam
mov
lock
xor
pushf
add
fwait
icebp
les
xchg
cld
out
fimul
shr
sbb
fs
lahf
hlt
(bad)
ror
out
jecxz
add
or
ss
jl
mov
cwde
nop
cwde
sub
jb
cli
xor
cwde
into
xchg
or
mov
loopne
sti
mov
loope
cmp
cwde
push
icebp
aam
push
xor
js
lods
gs
push
xchg
inc
or
ret
stos
sub
sahf
sub
retf
push
icebp
cmp
adc
jg
mov
push
je
mov
jg
or
fs
add
adc
les
jle
scas
cli
pop
das
sar
lock
pop
and
push
(bad)
stos
mov
jecxz
cmp
jo
xchg
pop
mov
push
ss
push
sub
xchg
mov
lods
dec
or
adc
retf
and
dec
and
scas
cwde
sbb
ja
sbb
xor
mov
sub
dec
popf
aaa
adc
cmp
and
stc
nop
add
out
cmc
push
pop
or
test
clc
lds
xchg
rcl
aam
push
shr
ficomp
and
mov
psubq
arpl
sbb
push
adc
inc
pop
xchg
dec
inc
adc
mov
clc
(bad)
stos
hlt
cmp
call
or
lods
cmp
shl
and
sub
and
pop
mov
or
push
(bad)
and
movs
scas
mov
pop
scas
test
int3
retf
fild
push
inc
pop
in
pop
push
or
mov
mov
sbb
fsubr
and
cmp
mov
inc
push
fimul
loope
sub
pop
lahf
ins
mov
loope
not
xchg
sbb
jge
popf
jnp
adc
cmp
frstor
xchg
mov
mov
inc
mov
mov
mov
mov
stos
aad
mov
fwait
loopne
ret
or
and
push
mov
clc
inc
int
cs
bound
xchg
(bad)
xor
in
outs
cmp
push
jno
mov
push
inc
lock
mov
in
mov
jecxz
xor
fucom
xor
pop
js
dec
jmp
mov
out
or
popa
out
add
rcr
jbe
pop
jnp
fnstcw
cmp
div
ret
arpl
cli
pop
movs
repz
inc
mov
cmc
inc
fs
xchg
gs
(bad)
xlat
imul
inc
ja
push
jmp
push
adc
imul
icebp
xchg
call
inc
sahf
test
sbb
imul
jl
push
scas
xchg
int
test
push
(bad)
inc
add
or
and
xchg
leave
adc
mov
stc
push
push
pop
pushw
nop
icebp
std
mov
pop
js
loopne
pop
inc
ins
loop
mov
movs
or
mov
and
mov
push
pop
push
std
in
mov
clc
xchg
addr16
xchg
adc
cmp
pop
test
inc
cmp
dec
lock
xor
jns
xchg
stos
xchg
adc
adc
jle
push
out
xchg
in
jl
sub
loope
cbw
xchg
mov
leave
mov
mov
test
push
push
push
push
test
mov
aas
fidivr
xchg
int
ffreep
rcr
les
pop
rcl
in
xchg
loopne
cld
cmp
imul
xor
mov
cmc
daa
pop
das
and
and
push
nop
xchg
dec
mov
das
retf
and
mov
xor
or
pop
pushf
and
xor
jbe
sbb
mov
(bad)
loop
mov
movq
fsin
and
call
add
xor
dec
ror
mov
bound
inc
(bad)
or
jg
mov
mov
ja
popa
loope
(bad)
retf
or
les
aad
mov
in
cmp
cmp
in
cs
push
sbb
xor
mov
loopne
add
cmp
mov
cmps
fsub
(bad)
xor
jne
cmc
cmps
aas
sbb
and
jle
lock
add
not
push
into
pop
and
jne
jnp
cmp
fnsave
pop
jg
cmp
pusha
ins
or
sbb
outs
(bad)
icebp
cmp
adc
out
ror
mov
ins
pop
add
cmp
data16
sub
xchg
div
cmps
mov
inc
pop
movs
(bad)
push
dec
jl
ss
retf
push
cmp
shl
aad
xchg
inc
sub
mul
add
xor
popf
xchg
inc
repz
or
jno
rcl
or
jb
int3
push
shl
popf
pop
inc
fidiv
repz
dec
loopne
xor
sti
ret
fcmovne
fbld
pop
(bad)
ret
and
scas
lds
push
nop
adc
repz
icebp
xchg
aam
dec
sti
jle
outs
sub
dec
or
push
lahf
inc
stc
cmp
retf
test
jb
ret
dec
out
(bad)
mov
sbb
inc
ret
dec
inc
push
push
pop
enter
int
jns
or
das
sbb
inc
gs
cmps
scas
and
lods
sbb
cmp
inc
lgs
ja
xor
sub
cld
shl
in
push
scas
gs
jmp
(bad)
mov
jbe
test
mov
xor
mov
int3
xor
cmps
xor
and
test
loopne
sar
and
iret
push
mov
dec
xchg
test
dec
fstp
jns
hlt
push
(bad)
nop
mov
icebp
lods
cli
sbb
out
xor
cmp
repnz
and
fs
cld
dec
mov
clc
dec
outs
dec
cmp
lock
test
xor
xchg
popa
mov
repnz
xor
cmp
repnz
call
jmp
adc
pop
sub
lock
adc
pop
dec
shl
cld
pop
imul
(bad)
sbb
dec
cmc
adc
jp
(bad)
push
xlat
stos
test
mov
add
mov
jmp
jae
xor
lahf
xchg
pop
ins
cmps
movs
xchg
push
loop
cmp
sti
xor
xchg
push
push
in
imul
sbb
pushf
push
scas
outs
jno
xchg
(bad)
hlt
or
xchg
mov
adc
call
jbe
pop
(bad)
mov
out
jnp
ins
ret
or
jecxz
push
out
push
jo
rcr
pushf
test
xchg
test
gs
in
and
push
lods
leave
sbb
or
sub
mov
xor
icebp
pop
add
mov
or
mov
adc
pop
arpl
pop
nop
dec
mov
xchg
inc
daa
cmp
mov
push
test
pop
and
inc
mov
xor
fcmovnb
call
shr
shl
xor
push
push
jmp
xchg
jmp
sbb
in
mov
xor
fistp
inc
out
(bad)
sti
add
inc
lods
popa
aam
out
sub
dec
test
shl
pop
inc
push
and
pop
xor
pop
mov
mov
push
daa
jp
mov
cdq
mul
sub
and
xor
mov
mov
pcmpgtw
mov
int3
xchg
out
fadd
loop
xchg
adc
push
jne
add
xchg
mov
add
mov
xor
inc
xlat
pop
test
leave
inc
pop
cmp
push
adc
gs
scas
shl
fcomp
sub
push
xor
adc
mov
dec
ret
mov
sub
or
out
adc
leave
and
rcr
mov
out
or
jg
sub
shl
mov
adc
imul
adc
mov
retf
les
pop
ja
cs
or
call
ins
add
add
aad
in
in
rcl
pushf
jmp
or
cmp
aas
mov
jmp
xchg
xchg
adc
push
inc
inc
gs
out
stos
ret
jno
(bad)
adc
and
scas
mov
popf
push
push
fwait
imul
cmps
jecxz
sbb
xlat
lock
cmp
xchg
cmp
jge
nop
push
mov
mov
xchg
mov
mov
movs
jne
mov
inc
sbb
call
movs
or
pop
add
test
and
popf
and
xlat
add
push
mov
jge
stos
scas
retf
loope
out
ds
fwait
or
jmp
test
stos
cmp
and
push
popf
pop
xor
sub
jne
pop
in
scas
je
repnz
scas
cmp
xor
mov
and
cli
jecxz
outs
hlt
ret
int3
jecxz
jge
and
out
xchg
xchg
adc
test
adc
dec
ins
mov
aam
sub
les
sub
jle
clc
push
in
and
jl
das
cmps
out
add
je
popa
dec
pop
dec
jmp
fs
test
je
cmp
fidivr
fisttp
or
jp
push
mov
bound
loope
push
push
cmp
fidivr
gs
xchg
add
pusha
scas
pop
xchg
js
(bad)
dec
cmp
pop
loop
jp
call
xchg
enter
xchg
dec
ret
inc
call
cmp
ds
adc
add
mov
dec
xchg
(bad)
or
call
jge
cmp
xchg
jo
mov
dec
pusha
pop
xor
outs
retf
cmp
mov
pop
jns
sahf
sbb
jae
pop
push
imul
xchg
lods
mov
sbb
sbb
mov
scas
push
cmp
ins
(bad)
jns
retf
test
out
jmp
rcl
jae
add
and
and
int
cmp
paddusw
add
mov
fmulp
lock
push
xlat
pop
int3
imul
push
sti
and
jle
inc
jmp
loop
sub
jmp
push
mov
loope
dec
push
neg
(bad)
jno
fdiv
jnp
cdq
ins
ins
push
div
and
ret
jmp
jno
jne
not
retf
mov
(bad)
jle
loope
jp
fucomp
loopne
xchg
into
stc
add
jb
(bad)
dec
push
inc
arpl
mov
rol
lock
jnp
das
and
adc
mov
or
dec
stos
pop
adc
xor
les
sub
mov
mov
lods
inc
jmp
pop
add
xor
add
push
dec
inc
scas
inc
push
cdq
cmp
js
pop
(bad)
jno
xlat
pop
dec
xor
xchg
enter
xchg
mov
jns
shl
xchg
repnz
ret
data16
xor
inc
cmps
cmp
dec
adc
sub
jecxz
adc
or
dec
jne
aas
lock
fcomi
mov
sub
out
rcr
and
pop
loope
jmp
fsub
dec
jle
(bad)
std
ret
push
pop
mov
cmp
add
fcmovnu
jg
or
retf
pop
jbe
mov
and
fidivr
mov
lahf
mov
loope
dec
test
mov
jge
aaa
lds
mov
iret
inc
sub
adc
test
in
pop
jno
lds
mov
aas
jb
in
cmp
mov
xchg
test
out
inc
nop
aaa
iret
gs
pop
ror
xchg
imul
jge
xor
and
sub
popf
jmp
mov
xor
stos
xor
mov
mov
adc
ret
frstpm(287
aad
shl
(bad)
jb
xchg
sti
dec
push
(bad)
into
xor
(bad)
sub
mov
imul
push
shl
and
movs
sub
ror
xor
imul
cmp
pop
iret
jl
jo
and
lock
dec
mov
jo
xor
int
xor
sub
cs
cmp
fbstp
cld
jmp
cmp
add
cmp
fistp
fistp
mov
cmp
sahf
shl
adc
mov
ficomp
dec
cmp
pop
mov
or
es
add
pop
idiv
popa
push
loope
push
in
pop
into
retf
jecxz
iret
xchg
jns
sahf
dec
adc
xor
pop
mov
mov
jge
popf
sbb
jbe
jg
(bad)
jb
jno
popf
lods
jo
jl
push
sub
rcr
jo
loop
mov
inc
scas
loopne
mov
(bad)
addr16
jnp
(bad)
mov
int3
dec
inc
pop
pop
or
push
sti
(bad)
in
mov
in
jmp
add
out
aas
fsub
movs
sub
mov
jns
mov
inc
bound
push
inc
adc
jmp
loopne
out
cld
test
cdq
in
out
or
jae
inc
gs
int3
jl
lods
xchg
(bad)
lods
leave
push
in
pop
jecxz
dec
movs
fdivr
shl
jl
cs
cdq
clc
mov
sub
adc
add
add
les
ins
pop
lods
mov
jg
push
ja
test
sbb
inc
sbb
jg
cmp
fstp
pusha
dec
inc
stos
test
and
inc
pop
pop
xchg
push
outs
jmp
popf
je
rcl
add
sub
push
push
jno
jo
xor
xor
and
adc
sbb
in
out
std
xor
add
and
push
mov
out
jns
sahf
sahf
imul
dec
dec
mov
sub
jmp
cmp
sahf
mov
rep
lea
jo
sbb
mov
mov
sub
mov
pop
lock
ds
adc
adc
and
arpl
cmp
xchg
jmp
fidiv
(bad)
fst
mov
mov
retf
xor
and
fadd
dec
ins
hlt
lock
outs
scas
mov
mov
push
mov
out
mov
cmp
mov
pusha
mov
arpl
je
or
lods
dec
test
dec
mov
adc
push
jmp
xchg
pop
push
xchg
dec
push
xor
lods
ds
test
adc
sub
nop
jp
jmp
pop
lods
or
aaa
inc
inc
pop
fwait
jnp
out
mov
pop
ficom
jmp
mov
dec
sbb
adc
retf
icebp
repz
inc
fs
cmp
jno
cmp
inc
cmp
jbe
not
int
lock
mov
xchg
push
adc
mov
mov
push
cmps
push
rcr
jae
inc
mov
sahf
adc
mov
cdq
cmps
aam
gs
push
mov
inc
fsubr
sub
shl
xor
ins
sbb
sbb
cmp
cmc
xchg
fidiv
mov
cli
push
add
inc
sub
fldenv
dec
in
stc
rcr
or
das
inc
pop
repnz
icebp
push
enter
pop
pop
in
fwait
sbb
push
dec
loope
xchg
std
mov
aam
das
scas
or
cmp
aas
pushf
rcr
or
dec
stos
dec
mov
sbb
sbb
and
fs
xor
scas
sbb
pop
aaa
cmp
stc
test
xor
push
lods
mov
mov
or
cmp
pop
jl
dec
sar
xchg
push
out
add
xor
loopne
adc
mov
movs
cmp
scas
test
loopne
rol
call
mov
mov
jecxz
push
outs
rcl
jb
sbb
mov
cli
fdiv
sbb
or
js
xlat
adc
lods
lds
mov
gs
and
dec
add
xchg
mov
mov
mov
dec
test
into
jmp
popa
rcr
dec
sub
stc
cmps
jmp
aas
lock
loopne
dec
cmp
into
aad
sbb
xchg
mov
std
in
mov
push
pop
test
dec
jg
imul
pop
or
cli
test
mov
mov
and
sub
sbb
jmp
mov
add
mov
add
jbe
leave
or
xor
jbe
sbb
ins
jmp
cmp
mov
dec
rcl
fucomi
das
pop
xlat
and
push
add
dec
idiv
xor
test
sbb
pop
stos
xor
dec
in
adc
(bad)
test
push
hlt
cmp
mov
sahf
pop
adc
test
add
jne
pop
mov
mov
add
dec
cmp
test
outs
ficomp
pop
push
call
call
inc
mov
test
mov
add
dec
call
push
cmp
cmp
adc
adc
xchg
jae
mov
jb
out
icebp
movs
fdivr
mov
and
mov
loopne
xor
mov
enter
nop
xchg
fwait
gs
push
mov
add
test
shl
in
icebp
les
jmp
cmp
xchg
jnp
dec
dec
or
enter
mov
mov
mov
push
mov
ss
into
jno
push
sar
shl
ins
dec
pop
(bad)
icebp
daa
lods
inc
pop
mov
cmp
xor
jl
inc
add
cmp
mov
inc
add
push
cmc
mov
jmp
popa
sbb
mov
into
addr16
hlt
sub
popf
retf
repnz
pop
pop
lods
fcomi
sbb
ror
popf
fwait
(bad)
sbb
jmp
dec
gs
cmp
mov
jle
out
sbb
sub
xchg
cmp
out
mov
cmp
push
fild
jg
mov
fwait
cmp
and
mov
cmp
daa
and
or
in
or
(bad)
mov
in
push
push
add
dec
(bad)
xchg
push
jne
retf
mov
dec
movs
sub
shl
add
mov
fwait
sbb
mov
fsubr
aam
dec
ins
fld
and
xchg
sti
mov
push
shl
loopne
inc
or
and
stos
add
int3
dec
ins
inc
es
dec
cmp
inc
stos
ins
cmp
ret
or
xchg
or
jae
out
ret
loopne
mov
and
mov
mov
pusha
(bad)
jl
push
sub
out
(bad)
lds
in
out
aam
(bad)
lds
sub
stos
push
cmp
jle
or
cmp
in
or
popa
loopne
xor
shl
pop
sbb
push
ds
stc
jbe
inc
arpl
in
test
sbb
outs
jbe
push
mov
ret
or
cld
mul
gs
cld
inc
arpl
in
(bad)
cld
jge
inc
sub
ficom
fnstcw
out
(bad)
mov
(bad)
div
loop
add
outs
loope
sbb
sti
inc
pop
or
out
(bad)
sbb
mov
push
arpl
cwde
jbe
clc
mov
out
mov
(bad)
int3
xor
jmp
cmps
dec
adc
xchg
jmp
mov
outs
in
add
pop
mov
aad
pushf
mov
fcom
call
retf
imul
call
dec
mov
dec
sti
xor
stos
mov
fs
xchg
jo
pushf
and
sar
sbb
jge
ja
ja
test
xchg
test
(bad)
popf
inc
das
ret
lds
cmp
inc
adc
out
addr16
pop
in
mov
das
jle
xor
jge
inc
call
and
das
inc
mov
sbb
add
xor
mov
(bad)
push
push
imul
mov
sbb
sbb
add
loopne
dec
fucompp
push
fist
pop
push
mov
popf
ja
gs
test
sbb
pop
int3
repnz
pop
jae
mov
or
sub
dec
in
push
test
les
loop
inc
sub
fiadd
push
cmc
pop
cmp
cli
lahf
xchg
(bad)
pop
mov
xchg
mul
fbld
pop
dec
dec
dec
mov
in
xor
jl
mov
jp
mov
aam
adc
dec
cmp
mov
sbb
fmul
addr16
adc
scas
jge
repz
adc
pop
adc
jle
jg
or
loope
lds
shl
push
xor
and
xchg
xchg
ds
aam
mov
movs
add
sub
mov
inc
cmp
jge
lods
lock
lahf
jl
pop
dec
adc
cmp
jmp
xor
mov
dec
es
test
mov
sbb
out
mov
inc
and
mov
call
fwait
lock
cli
test
test
mov
push
jno
inc
cmp
dec
out
sbb
js
xor
popa
sub
push
push
pop
ficom
sbb
mov
loope
sbb
cli
inc
add
add
push
push
dec
mov
and
mov
inc
enter
cmp
pop
lock
arpl
ins
lds
not
out
daa
push
jb
jmp
scas
inc
mov
add
adc
in
imul
mov
daa
add
sar
and
mov
sbb
stos
in
pusha
cmps
pop
cmp
clc
cld
dec
pusha
shl
scas
mov
and
pop
jle
mov
jg
cld
loopne
dec
call
xchg
(bad)
int3
mov
leave
push
aaa
je
pop
cmp
mov
ficomp
xchg
imul
shr
cmp
cmp
xchg
mov
loopne
addr16
shl
or
cmps
jno
aad
sti
sahf
test
fistp
xor
push
shr
push
rcl
cmp
mov
cmps
into
(bad)
push
stos
xchg
adc
cmps
jnp
aad
mov
sahf
push
pop
in
loope
or
mov
pop
in
jo
jge
mov
mov
push
mov
mov
mov
ds
add
mov
mov
cs
sub
inc
(bad)
int
scas
mov
xlat
dec
in
loope
in
push
mov
fnstenv
mov
push
pop
xor
sub
inc
cmps
inc
fwait
rcl
inc
stc
xor
pop
and
and
pop
rcr
int
cmp
sti
xor
push
jne
adc
or
mov
inc
or
fcom
or
dec
mov
sub
xor
mov
adc
jmp
xchg
sbb
inc
scas
call
in
enter
add
shl
pop
fdiv
xor
sbb
out
inc
ss
mov
in
push
cs
movs
dec
and
hlt
inc
imul
int
or
pop
fcmovbe
inc
icebp
fsin
lock
sbb
in
fbstp
cmps
int3
fist
cmp
add
jae
xor
xor
sub
adc
adc
sbb
adc
das
test
shr
mov
retf
icebp
add
lods
aaa
add
mov
test
and
or
mov
xchg
shr
ret
jle
repnz
push
fild
pop
jnp
adc
lds
add
aaa
push
cmp
jg
scas
xlat
(bad)
or
inc
cmp
mov
cmps
retf
(bad)
out
outs
mov
add
bound
or
push
movs
in
jbe
jl
out
mov
cmp
stos
outs
adc
lods
and
xor
aad
(bad)
out
add
and
fiadd
pop
cld
retf
push
in
pop
pop
xchg
inc
addr16
mov
dec
fs
dec
or
dec
vpackssdw
movs
pop
jne
mov
imul
xor
(bad)
je
push
cli
cmp
xor
ret
leave
call
sub
sti
call
outs
push
pop
add
loope
ficomp
imul
push
cmp
idiv
leave
repz
mov
(bad)
aam
jmp
inc
pand
sbb
mov
mov
mov
or
pop
xchg
lods
cld
sbb
in
sub
loopne
test
cmp
mov
xchg
mov
add
and
ins
dec
sbb
mov
pushf
xor
adc
mov
mov
jecxz
les
test
xchg
iret
rcl
or
jge
sbb
and
adc
push
stos
sub
xchg
mov
int
out
mov
outs
mov
mov
(bad)
sbb
in
push
jb
in
mov
xchg
adc
mov
ja
fs
xor
pop
or
xor
ja
mov
(bad)
fist
pop
sbb
retf
out
leave
inc
xchg
mov
jg
out
into
sub
loop
out
(bad)
or
mov
inc
movs
sub
sbb
inc
loope
and
adc
xchg
aaa
shl
sbb
cmc
fmul
pop
icebp
and
test
aad
dec
or
adc
hlt
mov
lea
and
mov
xchg
and
xchg
in
loop
fiadd
icebp
addr16
rcl
rcl
mov
in
mov
fwait
jo
jge
(bad)
jmp
lds
(bad)
jmp
mov
scas
gs
mov
int
icebp
cmp
adc
cmps
or
rdtsc
inc
jne
loope
div
repz
(bad)
fsub
aad
jp
out
bound
ret
aas
push
aam
xor
ret
punpckldq
fcom
aam
jbe
mov
stos
or
jp
mov
cs
pop
sbb
in
cmp
push
adc
mov
sub
cld
or
dec
repnz
jb
clc
(bad)
ja
aas
mov
inc
nop
xchg
scas
mov
sbb
ss
dec
repz
dec
movs
fiadd
cwde
lea
mov
or
(bad)
xor
and
cwde
mov
or
add
xor
enter
sahf
outs
retf
repnz
mov
dec
cmps
(bad)
jb
sbb
cmp
and
lahf
pop
mov
mov
push
inc
xchg
pusha
jecxz
xchg
lods
mov
retf
mov
popf
mov
in
pop
mov
(bad)
push
mov
pop
mov
mov
stos
inc
or
pop
inc
lods
jns
jmp
mov
rol
cmp
xchg
mov
arpl
xor
inc
rol
bound
in
or
loopne
mov
jge
xchg
movs
sub
sub
data16
scas
xlat
dec
xor
mov
add
outs
or
in
mov
or
cdq
adc
sti
jge
ja
push
mov
pop
cmp
scas
ds
mov
jae
add
hlt
ins
js
mov
out
push
cmp
test
adc
outs
adc
add
dec
mov
push
call
mov
fwait
adc
cmp
inc
xor
or
test
movs
pop
test
and
jne
or
mov
sub
ja
and
jp
pusha
lea
test
add
je
add
adc
or
js
sar
fadd
shl
push
enter
neg
mov
out
fwait
addr16
or
gs
ja
std
call
test
test
out
cmp
dec
int
pushf
xor
scas
adc
shr
mov
dec
jmp
mov
nop
(bad)
pop
jge
(bad)
loope
add
adc
or
outs
add
popf
add
xchg
and
fdiv
(bad)
sub
fs
mov
int
xchg
jmp
dec
cdq
in
sub
push
mov
repnz
seto
mov
pop
dec
cmp
aam
shl
push
ja
into
pop
sbb
jle
jp
lahf
das
jmp
pop
pusha
pushf
test
mov
je
sbb
pop
push
pop
aas
xor
mov
push
(bad)
popf
jp
cmp
dec
out
xor
(bad)
jmp
xor
mov
outs
dec
retf
sub
or
fimul
adc
mov
lahf
adc
stc
rcr
sbb
out
jge
jb
sbb
out
in
loope
jmp
loope
sahf
aas
test
std
imul
ins
les
cmc
xchg
lods
xchg
movs
mov
adc
loop
sar
inc
fistp
mov
mov
loopne
cmp
mov
cmp
sbb
clc
fs
pop
push
out
sub
push
hlt
sub
add
aas
pop
sbb
jbe
ret
outs
pop
xor
push
enter
nop
dec
mov
scas
cli
add
inc
jno
cmp
leave
fs
jbe
cmps
jmp
cmp
fisttp
mov
out
xlat
jecxz
jns
sub
jnp
scas
adc
out
test
mov
jle
repnz
adc
mov
or
or
mov
xacquire
ja
xchg
xor
pop
lds
jo
imul
dec
mov
fisubr
gs
cwde
sbb
in
xor
jo
jne
ds
cmp
cmp
dec
add
test
in
jae
or
adc
call
inc
pop
bound
and
xor
and
lods
push
pop
mov
lods
icebp
out
add
pop
ret
(bad)
cwde
mov
mov
lds
ret
sahf
ins
fdivp
fadd
or
push
mov
cmp
lahf
hlt
push
pop
xchg
fs
jle
popf
jg
jp
jb
cld
adc
push
and
mov
fcomip
or
sahf
mov
cmps
lods
not
fisub
pop
retf
mov
and
outs
bound
ins
jo
pop
add
mov
(bad)
pusha
in
add
lods
and
xor
push
push
xlat
push
cmp
and
pop
movq
imul
ja
enter
imul
movs
mov
cmps
xor
repz
xchg
test
out
aas
adc
imul
cld
aam
sub
out
push
jo
dec
adc
jnp
int
pop
retf
pop
cli
addr16
fidiv
fcmovnb
lahf
jecxz
jmp
pop
xor
jb
fdivrp
push
cmp
int3
or
pop
test
add
dec
sti
addr16
(bad)
adc
dec
cwde
or
xchg
fstp
outs
jge
fild
pop
out
mov
(bad)
fsubr
lea
dec
mov
repz
jo
push
xor
sub
ins
mov
mov
mov
sbb
mov
stos
mov
aam
pop
sar
(bad)
xchg
push
jne
xchg
out
cmp
in
ror
xchg
das
fcomip
out
int3
pop
pop
out
es
scas
shr
or
push
push
dec
and
xor
in
fidiv
push
sub
push
ds
xor
xchg
jmp
test
out
cmp
mov
xchg
xchg
(bad)
test
call
mov
leave
lods
push
dec
call
push
fs
lods
mov
mov
mov
iret
adc
jbe
mov
cld
push
sub
jle
retf
or
into
or
das
lods
(bad)
loop
test
lods
pop
es
aad
cld
and
dec
mul
fs
int3
push
je
fisttp
jecxz
out
imul
mov
mov
jle
arpl
popa
retf
and
mov
out
cmp
(bad)
or
hlt
repnz
xor
mov
and
xchg
push
popa
xchg
push
and
push
test
adc
dec
cli
pand
push
xor
adc
cwde
int
or
ds
cli
xor
mov
push
push
mov
scas
repnz
pusha
push
aad
or
sbb
fucomp
lods
outs
pushf
ds
or
push
aas
inc
cmp
mov
mov
dec
sub
cmp
pushf
cwde
jecxz
stos
test
xchg
es
gs
stc
arpl
lea
xchg
push
push
lock
cli
xor
jns
push
xchg
and
push
push
or
(bad)
fsub
push
mov
or
inc
fadd
test
es
mov
jmp
test
mov
cmp
sar
mov
fiadd
jmp
mov
dec
outs
xchg
cmp
mov
data16
mov
(bad)
test
sub
adc
add
add
iret
repz
fisttp
(bad)
mov
mov
lds
cdq
outs
or
sub
cmp
push
push
mov
mov
movs
aad
movs
jge
dec
jmp
leave
loope
inc
push
cmp
mov
cld
dec
cmp
xor
mov
xchg
lods
(bad)
mov
fistp
mov
sbb
pushf
xchg
inc
mov
adc
add
(bad)
or
in
pop
mov
jg
jp
add
lds
imul
sbb
adc
mul
ret
jg
stos
cs
call
ss
add
cli
nop
(bad)
jae
test
xor
add
jmp
retf
add
adc
xchg
lahf
cmp
xchg
xchg
jg
fwait
mov
add
mov
leave
clc
mov
push
dec
dec
xor
lea
fldenv
mov
pop
xor
jbe
mov
scas
int3
cmp
inc
mov
arpl
or
inc
ret
mov
fwait
jl
push
mov
mov
leave
and
xor
mov
std
ss
popa
pop
outs
or
adc
lods
in
and
xor
sub
pop
daa
or
sub
or
scas
fmul
ficom
dec
jl
int3
rcl
loopne
pop
bnd
pand
pop
sub
jae
sbb
(bad)
xor
xchg
xor
dec
adc
pop
or
or
cmps
stc
sbb
cmps
and
mov
mov
loope
nop
push
fcomi
mov
(bad)
ins
push
pop
cmps
cli
inc
in
inc
cld
out
test
gs
cmova
iret
popf
mov
js
cmp
mul
pop
rol
xor
int
lds
dec
out
or
sbb
in
push
(bad)
push
(bad)
cwde
sbb
push
sub
int
xchg
movaps
xor
or
mov
jl
mov
leave
and
popf
cld
mov
push
stos
add
adc
rcl
jl
scas
lahf
and
and
retf
js
enter
xchg
fcomp
and
das
jle
repz
mul
inc
daa
or
bound
or
not
cmp
ds
mov
outs
mov
(bad)
hlt
sbb
stc
jecxz
retf
fcmovb
fnstsw
pop
shl
imul
pop
test
leave
loopne
dec
cmps
popa
xchg
fsubr
retf
std
pushf
sub
repz
mov
test
cli
pusha
popa
out
xchg
movlhps
mov
popf
or
adc
fidiv
retf
or
js
dec
outs
in
stc
inc
scas
or
mov
mov
in
int
jmp
push
sbb
sbb
cmp
lods
adc
mov
push
xchg
jnp
pop
jbe
sbb
data16
ss
mov
cli
mov
nop
popa
mov
shl
cld
cmp
cmc
aam
cdq
inc
(bad)
xchg
imul
imul
jns
jmp
sar
xor
mov
in
inc
sub
test
mov
mov
mov
xchg
or
xchg
out
inc
(bad)
retf
cmp
sbb
xor
jne
push
out
dec
fwait
aas
test
add
or
adc
jmp
cmp
cmp
cwde
jg
lock
cmc
lods
outs
mov
adc
aam
mov
and
outs
outs
lds
push
jne
int
dec
(bad)
lods
out
shr
pop
xchg
adc
sbb
sub
mov
add
mov
sbb
dec
adc
into
and
push
jbe
jne
arpl
xchg
dec
cmp
ins
sub
int3
outs
adc
(bad)
stc
adc
dec
sti
mov
jne
mov
xchg
retf
int
push
nop
mov
xchg
ins
mov
icebp
mov
inc
cmp
jp
jb
data16
aad
loope
xchg
movs
jb
mov
mov
pop
mov
test
mov
xlat
aam
in
sti
fiadd
sub
push
dec
loop
cmp
mov
sub
imul
int3
shr
aad
(bad)
pop
imul
xchg
add
push
(bad)
fimul
fld
fldpi
nop
loop
ror
push
mov
mov
fstp
mov
xor
pushf
jno
jmp
xchg
cmp
test
jno
push
cwde
adc
lahf
ja
iret
(bad)
xor
inc
xchg
popf
jne
ja
add
test
sar
mov
iret
fisttp
ins
add
loopne
sbb
es
jae
or
sbb
sbb
push
aaa
sbb
push
pop
sub
push
cwde
test
ins
inc
inc
add
cvtpi2ps
fdivr
test
sbb
into
dec
or
test
dec
jmp
push
cs
mov
lods
out
fidiv
ds
jecxz
(bad)
push
stos
adc
jmp
pushf
pop
pop
and
xor
pop
inc
cmp
push
test
ror
push
dec
out
aam
test
mov
push
jne
jo
fs
pop
jb
leave
mov
jp
retf
test
or
fsub
pop
rcl
push
mov
imul
out
fwait
inc
ret
int3
xchg
xlat
dec
and
pop
jg
div
add
(bad)
arpl
test
(bad)
fadd
fwait
(bad)
stc
xor
fcomp
mov
retf
ror
stos
and
loopne
xor
jp
sbb
cld
mov
mov
pop
js
rol
fild
lock
inc
inc
(bad)
fiadd
cmps
setne
pop
jno
iret
inc
mov
cmps
punpcklbw
pop
cli
fwait
daa
sub
adc
dec
call
sub
test
fild
nop
mov
test
and
cwde
call
ss
aas
and
mov
outs
stos
loopne
xchg
loop
xchg
dec
and
sbb
cld
jb
mov
xor
dec
popf
div
gs
ss
dec
ja
mov
cld
jmp
sar
popf
outs
and
iret
cdq
jl
xchg
cwde
outs
adc
pop
cmps
lods
(bad)
jne
jb
das
pop
fcom
nop
jae
lea
out
add
and
call
mov
sbb
inc
pop
jp
xchg
xor
dec
push
and
mov
loop
or
out
loopne
shl
mov
aas
ret
fs
test
dec
xchg
jae
test
enter
and
dec
inc
mov
hlt
xchg
mov
add
mov
call
sti
mov
out
lds
pushf
and
inc
xor
sbb
ret
sbb
(bad)
pop
push
cdq
mov
lods
adc
xchg
xchg
cli
jns
sub
push
or
push
pop
ss
mov
push
adc
ror
fisub
std
cmps
shl
mov
inc
rol
sbb
sbb
pop
and
and
cli
add
xchg
xor
outs
jmp
aad
adc
mov
push
cmp
jns
pop
movs
imul
xor
jl
mov
sti
push
out
add
jbe
mov
stos
jmp
mov
mov
fmul
addr16
fdiv
mov
je
cdq
or
rcl
sub
mov
sar
dec
sub
and
lea
in
es
mov
movs
sbb
jl
mov
dec
sar
and
pusha
fucomip
mov
push
dec
sub
dec
sub
xor
jnp
int3
dec
or
pusha
in
xchg
jecxz
stos
add
retf
int3
ret
or
(bad)
mov
std
cmp
xchg
inc
or
dec
loopne
cs
sahf
popa
xlat
and
sub
out
arpl
int3
mov
jge
add
popa
and
sub
add
sub
mov
pop
xlat
or
sub
dec
add
add
fdiv
std
xor
arpl
push
imul
push
dec
sbb
js
sub
sbb
js
jmp
test
or
out
mov
mov
and
mov
in
mov
push
not
dec
fnstcw
fwait
or
leave
shl
push
retf
push
pop
sub
xor
and
test
xor
mov
adc
push
retf
adc
pop
xor
jmp
add
or
jge
adc
pop
enter
push
xchg
mov
adc
retf
aad
mov
xor
sbb
or
shl
repnz
sti
pop
lock
push
fwait
and
pop
es
push
(bad)
mov
pop
(bad)
mov
arpl
cmp
xchg
mov
out
cmp
inc
xchg
xlat
in
lahf
dec
pop
jae
fidivr
mov
jns
adc
les
cli
retf
mov
xor
(bad)
fsub
shl
sbb
mov
lods
cmp
int
mov
cli
repz
mov
aam
push
inc
(bad)
push
sbb
cmps
fidiv
cmps
xchg
mov
mov
xor
gs
mov
pushf
rol
mov
sub
(bad)
pop
cmps
iret
inc
leave
(bad)
arpl
rol
add
mov
add
mov
scas
pop
adc
sbb
cli
dec
xchg
in
and
adc
fistp
cmpps
aam
in
stos
inc
pop
loopne
push
ficom
xor
cmp
data16
or
pop
fucomip
dec
sub
push
inc
inc
sar
imul
jne
mov
test
and
imul
fs
add
retf
ins
xchg
mov
out
scas
icebp
out
mov
mov
mov
jecxz
stos
clc
lahf
das
sub
inc
popa
jp
clc
out
and
sbb
push
(bad)
call
dec
and
adc
mov
cmp
and
push
(bad)
nop
cmps
repnz
shl
fyl2x
pop
xor
jmp
das
sbb
loop
pop
fbld
mov
cld
push
outs
mov
mov
sahf
mov
cmp
sbb
retf
mov
or
out
pop
rol
mov
out
cmp
loopne
fistp
push
inc
jbe
cli
lds
inc
dec
out
xor
imul
or
mov
lock
lds
nop
addr16
push
fistp
lea
scas
cmp
and
mov
icebp
(bad)
pop
mov
mov
lea
clc
and
jge
cld
cmp
push
sub
imul
inc
loope
inc
retf
xchg
pop
(bad)
ficomp
mov
dec
cmp
movs
int3
xchg
push
jge
ret
fidiv
sar
xchg
sub
jne
adc
dec
je
cmp
xchg
test
jmp
leave
mov
and
mov
enter
mov
lds
shr
sub
ins
add
(bad)
(bad)
pop
aas
scas
cmp
adc
cmps
mov
(bad)
dec
outs
jge
push
or
jge
dec
outs
shl
mov
nop
sbb
mov
rcr
movs
test
mov
adc
das
into
dec
fcomp
cmpxchg
add
aas
cmp
fucomp
hlt
das
ret
xchg
daa
dec
dec
fsubr
pop
adc
xor
scas
js
lock
popa
popf
jae
adc
jo
lea
inc
xlat
xchg
inc
add
std
inc
(bad)
ror
push
dec
inc
mov
xor
fwait
(bad)
xchg
test
frstor
fnstsw
lods
(bad)
es
cmp
push
mov
(bad)
cld
jp
in
fisttp
out
aam
inc
imul
outs
pop
or
xor
push
call
pusha
les
fdivp
fs
popw
add
or
icebp
rcl
(bad)
pop
ss
gs
cmp
inc
or
pop
stc
xor
mov
adc
in
(bad)
loope
add
mov
ins
ss
rcr
lea
fst
mov
sbb
push
imul
loopne
jae
pop
xchg
lds
fstp
jg
scas
sub
mov
shl
or
jecxz
stos
jne
push
push
cmp
sub
push
jne
mov
fs
push
pusha
jns
pop
out
add
inc
stos
std
lods
mov
adc
push
sbb
jbe
pop
outs
or
into
(bad)
(bad)
popa
cmps
call
int
loopne
push
(bad)
(bad)
push
push
test
repz
mov
arpl
(bad)
jo
or
sub
or
xor
rcl
jne
arpl
hlt
push
jne
push
and
mov
movs
aam
add
add
xor
xor
shl
mov
add
mov
neg
and
xchg
or
fild
loope
ror
jmp
nop
pop
inc
inc
mov
and
xchg
(bad)
cmp
sbb
sar
adc
cs
or
inc
iret
and
loopne
adc
jb
cmp
jns
mov
inc
inc
sbb
rcl
mov
loopne
lds
ins
outs
pop
repnz
arpl
or
or
dec
dec
aas
shl
push
enter
pop
inc
jecxz
jbe
test
std
sub
mov
mov
mov
les
in
(bad)
loopne
fistp
ins
mov
std
(bad)
mov
inc
push
shl
or
and
ret
rol
aas
scas
inc
mov
pop
sbb
push
dec
jns
leave
cmp
js
cdq
cmp
fs
mov
jge
imul
jmp
sbb
jno
in
lods
sar
ins
ins
add
dec
xchg
aam
mov
popa
cmps
mov
lds
jno
xchg
out
in
das
inc
mov
cmp
xor
xlat
dec
js
iret
pop
das
push
pop
pop
inc
and
pop
les
fdivr
retf
sbb
xchg
xchg
jecxz
inc
stos
cld
sbb
mov
mov
inc
xor
dec
adc
cmps
mov
xchg
dec
sub
lds
xlat
or
lahf
xchg
inc
dec
cdq
push
scas
(bad)
jp
add
aad
pop
xchg
sbb
loopne
js
push
les
sbb
pop
daa
mov
pcmpeqd
mov
jle
sar
enter
aaa
mov
inc
mov
pushf
in
(bad)
cs
cmp
push
les
cwde
and
mov
in
or
fld
imul
jne
jge
shr
aad
and
push
adc
sar
int3
push
inc
cs
pop
fldz
cmp
push
xor
enter
jb
add
and
js
mov
xor
lods
push
pop
xor
arpl
das
pop
imul
in
mov
pop
lods
sbb
jge
xchg
pop
fdiv
jne
or
int3
ret
loopne
push
pop
adc
adc
inc
icebp
clc
sbb
stc
dec
lea
fsub
mov
fs
pop
dec
lock
or
adc
(bad)
iret
int3
pop
and
ds
cmp
add
push
inc
in
mov
les
jl
pop
mov
add
push
imul
fwait
das
push
ins
(bad)
stos
mov
lods
shr
ja
jmp
push
in
add
mov
repz
pop
adc
(bad)
mov
sub
xchg
or
imul
dec
push
sbb
jns
je
mov
mov
xchg
icebp
aas
pop
arpl
mov
pop
sub
lods
les
mov
and
adc
jmp
mov
ins
push
frstor
and
lds
cmps
pop
push
iret
mov
cdq
rol
push
pop
jge
aas
mov
aam
fcmovb
ss
in
jnp
or
push
sbb
test
rol
jns
sbb
or
ud1
sub
pushf
jbe
daa
ja
hlt
jne
ds
jbe
mov
inc
imul
das
scas
scas
push
xor
mov
xchg
mov
mov
in
lahf
push
fadd
and
data16
fiadd
inc
(bad)
mov
and
xlat
or
mov
(bad)
dec
daa
mov
aam
inc
scas
and
aaa
cmp
repz
dec
icebp
and
jae
jmp
xchg
mov
pop
sbb
push
stos
call
arpl
add
mov
inc
test
mov
stc
cbw
jge
int3
aaa
sbb
ins
cdq
mov
test
movs
push
mul
mov
jo
push
and
inc
xor
add
in
cmp
dec
fsubr
(bad)
mov
popf
mov
xchg
inc
jb
(bad)
push
cli
repnz
es
dec
gs
out
gs
cli
or
lods
mov
adc
pop
jno
mov
sub
popf
in
std
cmp
mov
pop
int3
dec
jl
pop
std
psrld
outs
cmp
out
aam
and
and
aad
cmp
movs
sub
(bad)
mov
add
sbb
xor
or
dec
call
imul
retf
mov
out
in
xchg
push
cmp
push
lahf
xor
inc
mov
inc
mov
jp
xchg
cs
or
daa
cs
push
cmp
sub
bound
dec
loope
bound
push
std
(bad)
xchg
cmp
les
xchg
je
jmp
jmp
mov
jb
(bad)
xchg
or
lds
push
pushf
lock
imul
sub
pusha
in
dec
cmp
jecxz
(bad)
shl
mov
add
adc
sub
inc
mov
and
mov
mov
call
jbe
and
lea
fmul
dec
fstp
lahf
ins
(bad)
(bad)
out
pop
and
cli
xchg
cmp
mov
outs
push
cmc
pop
inc
cld
cmp
sti
push
mov
push
cwde
mov
and
imul
xchg
mov
movs
retf
ret
inc
mov
cmps
push
fdivr
mov
and
jbe
sub
pusha
call
xor
mov
sbb
nop
pop
cmp
imul
aaa
ins
mov
sub
xchg
push
jbe
push
jle
pop
jmp
inc
cld
stos
pop
mov
inc
es
push
out
ud2
sahf
pop
int3
push
outs
xchg
pop
int3
mov
jge
jnp
xchg
mov
pop
test
push
retf
pop
les
jnp
mov
out
mov
inc
sub
(bad)
sbb
jp
sub
mov
inc
in
jbe
sub
std
aam
cmp
mov
inc
push
adc
loope
xor
push
lahf
dec
or
(bad)
test
mov
sub
pop
mov
fucomp
jecxz
(bad)
in
inc
rcr
mov
sbb
cmp
mov
sbb
push
fist
jp
cwde
add
jnp
inc
mov
inc
ja
jns
aaa
add
dec
scas
xchg
xor
pop
mov
ins
les
jae
lods
or
jb
push
test
add
fidiv
sbb
xlat
retf
test
rcl
sbb
shl
dec
test
mov
lahf
inc
icebp
shr
daa
fcmovnu
and
sbb
sub
inc
sbb
mov
sub
dec
stos
jp
inc
add
pop
push
add
jmp
mov
enter
and
mov
dec
sbb
inc
cmps
imul
iret
mov
lds
aad
cld
icebp
repz
movs
popa
mov
push
addr16
jns
add
push
xor
push
(bad)
test
mov
or
adc
pusha
out
cld
rcr
pop
jns
pop
push
cli
pop
sbb
int
outs
add
sub
popa
dec
mov
pushf
rcr
das
mov
or
js
rcl
mov
pop
inc
xchg
mov
pop
bound
jmp
clc
xchg
inc
jl
ret
(bad)
adc
mov
jecxz
sub
dec
sbb
movs
sar
pop
xor
imul
lahf
mov
cmc
push
outs
add
movs
(bad)
mov
lds
inc
dec
stos
push
adc
jno
(bad)
adc
jns
fwait
cmp
xor
fwait
fwait
push
clc
rol
ds
imul
test
ret
jne
push
outs
into
xchg
inc
fiadd
inc
mov
sub
jl
mov
mov
call
mov
out
or
leave
cwde
pop
pop
(bad)
fcmovb
fbstp
retf
rcl
aas
mov
xchg
test
call
mov
xor
jo
jmp
or
arpl
jbe
out
mov
sub
lea
or
nop
iret
lods
es
in
ins
jno
ja
cwde
clc
(bad)
mov
sbb
xchg
js
xchg
hlt
iret
sti
jbe
imul
or
int3
pop
ror
fnstsw
mov
retf
jbe
pop
mov
and
dec
sbb
adc
hlt
ds
div
out
adc
cmps
popf
lds
outs
mov
pop
int3
mov
dec
cmp
mov
add
retw
mov
add
xor
pop
mov
or
ins
sbb
push
cmp
hlt
pop
out
push
mov
mov
xchg
adc
dec
iret
jmp
fs
inc
dec
pop
sub
shr
pop
or
xchg
jae
shl
cmp
jmp
xchg
int3
and
nop
mov
leave
sub
inc
dec
jb
jl
cmp
int
das
sahf
cdq
jg
fdiv
jmp
push
xor
jne
mov
gs
cwde
cs
mov
ins
imul
out
cs
xchg
mov
imul
mov
fsubr
daa
fcomp
jae
sti
mov
mov
pop
mov
add
arpl
lds
or
pop
or
jl
sub
inc
ja
jb
push
xor
mov
xor
push
outs
clc
xchg
stc
mov
mov
sbb
icebp
pusha
fmul
jb
iret
pop
ins
mov
shld
and
mov
daa
push
shl
ss
mov
cli
push
add
div
pop
cmc
pop
mov
pop
xor
cmps
test
test
push
xor
xchg
add
ret
daa
adc
call
retf
cmp
(bad)
or
pop
lahf
sub
pop
cmp
push
xchg
and
add
(bad)
adc
dec
lahf
fst
mov
dec
mov
enter
loope
lahf
adc
push
add
cmp
daa
xlat
in
push
xchg
pop
cmp
cmp
xchg
sbb
sub
lds
pop
adc
jnp
cmps
add
inc
mov
xor
xor
cli
or
jecxz
outs
int
jno
mov
adc
cmp
ret
adc
loopne
jnp
out
cmc
in
mov
scas
cmps
add
add
shl
mov
cs
jge
or
arpl
pop
jle
fcom
sub
sbb
mov
movs
pop
or
call
xchg
fstp
xchg
pop
pop
lea
sbb
fcmovnb
sub
xor
sbb
test
jno
push
das
outs
pop
into
adc
or
loope
les
mov
rcr
jmp
loop
int
add
mov
retf
cmps
mov
pushf
out
cli
(bad)
push
mov
dec
test
mov
pop
mov
push
retf
or
xor
inc
mov
retf
jb
jae
rcl
mov
pop
test
cs
add
pop
stos
daa
pop
and
or
mov
jns
in
test
inc
jmp
mov
xchg
test
jae
les
aas
neg
jecxz
out
frstor
fcom
ret
out
inc
jmp
hlt
xchg
dec
sbb
push
leave
popf
xchg
sbb
jecxz
xchg
ret
aaa
adc
data16
xor
cmps
adc
ins
jmp
js
push
sbb
sahf
cmps
arpl
lods
xchg
pop
stos
je
xchg
xchg
cmp
int
push
aaa
mov
and
aas
mov
and
(bad)
and
add
in
(bad)
mov
mov
xchg
dec
sahf
ds
(bad)
mov
push
imul
add
sub
test
sar
jne
lods
inc
dec
sbb
jl
lea
push
movs
jmp
ss
lock
test
jne
outs
and
xchg
es
jge
mov
dec
mov
push
std
pop
inc
dec
mov
push
inc
call
sahf
ret
xchg
push
sbb
jnp
pop
mov
js
lock
mov
mov
into
ds
jp
or
xchg
sahf
loopne
shl
jmp
popa
iret
jb
inc
add
leave
mov
mov
out
test
dec
fsub
std
cwde
(bad)
aam
mov
movs
or
lods
les
ret
lods
cmp
in
sti
mov
idiv
xchg
cli
jmp
xchg
push
jae
xchg
xchg
out
sub
jecxz
push
dec
push
dec
pop
jecxz
fsub
pusha
retf
jge
(bad)
cmps
cmps
in
pushf
loope
mov
jecxz
out
xchg
push
cwde
sbb
dec
inc
mov
rcr
clc
cmps
sbb
leave
(bad)
pop
inc
call
jae
mov
mov
in
xchg
xchg
xor
lods
fsub
add
neg
ins
or
cmc
jg
mov
sbb
out
sbb
(bad)
(bad)
fld
rol
adc
xchg
test
stc
loope
sub
add
retf
imul
jmp
std
bound
adc
and
sbb
aaa
push
jl
scas
ja
mov
rol
mov
cmp
ret
fdiv
or
cdq
lds
push
sub
push
cld
mov
sub
ficom
mov
movs
xchg
pop
outs
in
jge
mov
(bad)
cmp
fcomp
pop
sbb
xor
add
sahf
das
inc
sub
mov
stc
dec
and
mov
out
adc
hlt
push
cs
paddsb
sbb
aam
pop
int
ss
not
push
pop
sub
xor
or
xlat
and
and
in
xor
jecxz
adc
out
adc
pop
add
cmp
stos
add
xchg
xchg
test
(bad)
arpl
mov
pop
xor
dec
test
stc
out
out
fidiv
xor
cmc
sbb
xchg
or
mov
ret
mov
add
and
pop
je
neg
rol
add
stos
mov
sbb
push
je
ja
adc
test
cmp
mov
ret
adc
stos
mov
fadd
xor
aas
mov
cld
xor
push
repz
pop
cmps
xor
jne
jl
mov
(bad)
sub
jmp
gs
sub
dec
retf
mov
rcr
icebp
fs
shl
mov
push
stc
xor
jg
or
mov
test
and
inc
repz
mov
mov
dec
jno
jmp
out
out
fist
push
fisttp
neg
dec
or
pop
(bad)
rol
mov
lds
push
dec
pop
aas
xchg
sar
test
nop
jbe
xor
inc
fs
push
pop
fdivr
loope
and
retf
test
rcr
push
nop
rcr
jge
(bad)
call
push
cmp
loop
rcr
xchg
into
mov
pop
push
or
mov
scas
fstp
retf
dec
sti
mov
shl
movs
mov
ret
jnp
fmul
enter
mov
(bad)
sti
mov
neg
outs
push
adc
ins
je
push
lods
scas
aas
sub
dec
jp
out
loope
xor
cmp
sub
rcl
push
sub
mov
mov
xchg
jo
jo
jmp
in
inc
mov
fadd
mov
js
jnp
xor
(bad)
test
addr16
cwde
push
sahf
std
dec
mov
mov
cmp
mov
sbb
push
and
mov
shl
mov
mov
in
mov
fld
jmp
sub
int
(bad)
repz
ins
scas
sub
nop
sbb
jl
mov
sub
jp
test
jb
cdq
fcmovnbe
outs
pushf
lea
jmp
sar
adc
or
xlat
stc
jbe
push
dec
sbb
mov
ror
dec
jge
aam
frstor
and
xchg
sahf
dec
mov
mov
test
cs
loopne
shl
test
jnp
mov
lods
dec
xor
xchg
int3
stc
lea
or
loope
out
div
fcmovne
sbb
mov
js
cwde
pop
or
es
cwde
es
out
ins
cmp
inc
mov
and
xchg
lahf
dec
push
aam
xor
cmp
dec
mov
ficomp
mov
sbb
outs
das
inc
cld
and
add
jo
or
sbb
sbb
xchg
pop
mov
fsub
dec
pushf
stc
cmp
repz
inc
je
sar
cmp
cmps
mov
int
adc
loope
adc
adc
ret
lock
imul
add
(bad)
and
cli
lahf
sub
popf
sar
and
and
or
retf
mov
mov
sub
shl
pop
icebp
cs
push
mov
loope
inc
pop
bound
dec
lods
push
xchg
jmp
or
das
popa
cmp
adc
xchg
push
dec
in
jg
in
mov
and
mov
ins
(bad)
(bad)
ins
mov
fdiv
retf
scas
lods
cld
push
push
xor
dec
sar
push
fisub
lds
loop
out
push
test
pop
popf
movs
aam
or
and
xchg
push
pop
mov
loope
jmp
fnstcw
push
push
loope
es
jae
std
or
movs
arpl
push
(bad)
mov
stos
mov
inc
iret
mov
into
rcr
ja
pop
mov
sub
fadd
and
aaa
call
stc
(bad)
and
sbb
xchg
aam
jge
jmp
cmps
xor
lods
jmp
out
repnz
outs
gs
movs
rol
pop
sbb
psubw
inc
cmc
sbb
push
xor
div
arpl
push
cli
cld
fdivr
js
jne
(bad)
cmp
sbb
cwde
out
jecxz
sti
mov
push
and
popf
dec
xchg
lods
jo
or
jno
jno
jg
fbstp
int3
scas
js
pop
iret
mov
daa
rcr
push
and
sbb
out
cwde
cld
in
fs
outs
fnsave
lods
cmp
inc
mov
jp
test
arpl
movs
cmp
push
jo
push
mov
in
shl
mov
jne
inc
cmp
mov
push
mov
fisttp
in
ret
push
sbb
sub
and
outs
std
aad
jmp
in
xor
xchg
popa
fadd
jne
scas
test
mov
out
inc
scas
repnz
sub
mov
pushf
test
sub
lods
and
mov
xor
sub
xchg
lea
jge
inc
xor
bound
add
popf
push
mov
je
retf
push
into
xchg
adc
inc
xor
les
and
ins
es
mov
mov
les
icebp
int3
mov
pop
iret
mov
fadd
leave
adc
outs
sub
cmps
dec
icebp
dec
sbb
div
xchg
stos
xchg
mov
test
jb
outs
es
cmp
cmp
xor
mov
lds
fidivr
adc
lock
push
dec
jno
inc
rep
mov
ret
add
in
enter
rol
aad
in
xchg
push
inc
push
and
stc
rcr
mov
jl
xor
xor
or
cld
shl
xor
pop
sub
mov
repnz
mov
xchg
call
aad
idiv
fs
jne
ins
dec
lock
and
fistp
push
out
inc
lock
out
lock
sub
fwait
mov
push
cmp
mov
leave
fcom
test
mov
pushf
ficom
dec
popa
dec
xchg
xchg
das
cdq
push
xlat
imul
pop
dec
mov
neg
lock
retf
push
ins
loop
dec
cmp
fld
xchg
add
jmp
or
add
in
push
xchg
div
jge
movs
in
repnz
fwait
push
push
cmp
fwait
xchg
cdq
add
stos
dec
loope
stos
movs
mov
loopne
add
cmp
arpl
and
das
scas
jge
or
add
cmp
pop
aas
and
jb
mov
ret
scas
outs
cmc
popf
lahf
popa
mov
sub
or
in
mov
loope
or
rcr
mov
ret
retf
pop
mov
ss
and
mov
movs
push
mov
mov
dec
movs
cmps
popf
out
gs
pop
mov
push
and
cmp
out
dec
(bad)
and
inc
pop
mov
xor
adc
xchg
mov
jg
sub
pusha
fild
pusha
je
fs
sbb
ds
mov
lahf
or
fcom
dec
fnstcw
or
iret
call
adc
push
push
xchg
aas
iret
shl
test
mov
jmp
retf
cli
(bad)
pop
dec
push
movs
sub
push
or
cld
inc
dec
inc
int3
retf
inc
aas
mov
cs
fcom
push
mov
out
cmps
cli
mov
ss
inc
(bad)
out
call
mov
sub
aad
push
pop
mov
aaa
lea
add
cmp
cmp
mov
jmp
mov
(bad)
push
test
rcl
or
mov
loopne
inc
shl
xor
push
aam
inc
std
cmps
jmp
sub
(bad)
mov
cmps
and
clc
mov
or
fimul
xchg
jmp
cs
mov
add
push
push
rcl
rcl
(bad)
sbb
cmp
cli
cmps
call
xor
sbb
pop
lods
out
inc
mov
iret
mov
fbstp
mov
enter
lods
mov
xchg
inc
mov
js
sbb
fnstenv
int3
fs
mov
sti
mov
or
sti
scas
xor
pop
je
(bad)
adc
std
jl
push
dec
push
ficomp
xor
out
arpl
or
mov
ss
mov
adc
pop
in
pop
push
cmp
aaa
pop
les
jne
mov
pop
call
movhlps
push
inc
xor
clc
lods
aaa
cwde
dec
push
or
into
lods
push
call
fdivr
add
and
scas
jecxz
movs
pop
xchg
xchg
add
jmp
lods
shl
xor
add
xchg
cld
mov
sub
mov
int3
cmp
addr16
es
dec
es
push
retf
test
in
or
push
pop
hlt
hlt
jo
cli
imul
mov
jl
fstp
or
imul
xor
mov
inc
cmp
cwde
pop
in
xchg
pushf
dec
sub
imul
mov
pop
sbb
adc
test
fcom
mov
push
jmp
aas
push
dec
fistp
es
cmp
dec
mov
scas
push
lahf
out
div
push
cwde
mov
retf
push
xchg
stos
js
sar
scas
sahf
fs
idiv
inc
popf
movs
lds
data16
das
pop
add
(bad)
xor
stos
xor
retf
push
jns
shl
outs
cmp
xchg
sahf
ss
xchg
push
stos
or
mov
add
repnz
mov
in
(bad)
cli
xchg
and
popf
ret
gs
mov
retf
scas
sbb
adc
mov
movq
jne
in
mov
(bad)
jns
mov
mul
into
add
(bad)
push
retf
lea
scas
movs
test
dec
in
int3
js
pusha
out
push
dec
jbe
mov
sbb
push
clc
inc
sbb
push
push
xor
jl
fisubr
pop
or
push
pop
xchg
inc
pop
out
sub
jno
stos
mov
pop
xor
sbb
ret
sbb
adc
add
sbb
pop
xchg
fstp
sub
inc
(bad)
dec
repz
push
lods
cmps
xchg
stos
or
icebp
jmp
mov
xor
(bad)
xchg
out
or
lods
mov
mov
inc
leave
add
or
or
xor
xchg
in
xor
and
stc
pop
inc
or
or
cmps
cdq
inc
out
cmp
cli
mov
jno
add
or
retf
inc
div
push
push
and
xor
dec
leave
loopne
aas
sub
nop
shr
cwde
push
inc
mov
jbe
mov
es
std
icebp
shl
cmp
aaa
loop
sbb
push
sbb
sub
cmp
scas
adc
cs
jmp
mov
xor
retf
jecxz
jae
cmp
mov
xchg
aas
push
cmp
xchg
mov
xchg
fild
(bad)
adc
stos
push
push
push
loop
data16
mov
scas
and
push
mov
aad
cmp
mov
mov
arpl
add
mov
dec
inc
ins
iret
mov
out
sbb
mov
sbb
xchg
in
(bad)
mov
sbb
or
retf
es
push
test
in
cmp
stos
mov
ss
loopne
inc
mov
inc
out
pop
lds
test
mov
loopne
dec
fsubr
(bad)
(bad)
aaa
push
xchg
inc
pop
fwait
mov
xchg
mov
(bad)
int
(bad)
loopne
into
sar
jl
push
rcl
loop
pop
sub
cld
inc
movs
xchg
int
repnz
xchg
nop
jecxz
sub
pop
push
adc
hlt
je
adc
cmp
ror
xchg
outs
shl
fistp
mov
ret
gs
inc
ret
inc
jnp
sub
jl
js
or
mov
int3
lahf
pusha
test
mov
xor
sti
add
jl
call
fst
data16
fucomi
aas
out
cmc
sub
mov
gs
mov
(bad)
adc
mov
cdq
repnz
(bad)
stos
pushf
ins
mov
push
add
call
pop
movs
cmc
sti
hlt
xchg
pusha
pop
idiv
pusha
cmp
ins
ds
cmp
adc
xchg
cmp
fisubr
and
pop
and
adc
jmp
push
xlat
imul
gs
jae
adc
(bad)
lods
push
ds
imul
mov
xchg
adc
dec
sti
dec
aas
inc
scas
(bad)
in
test
test
inc
and
xor
scas
test
xchg
mov
xchg
xchg
or
jo
jge
xchg
fadd
das
scas
xchg
xor
xor
push
mov
or
jno
ror
test
mov
push
test
call
adc
cld
shl
or
sub
loope
pop
jge
or
loopne
dec
pop
push
push
aas
pop
bound
repnz
xor
or
push
jge
adc
jl
pop
dec
adc
jne
jno
inc
ins
push
mov
xrelease
lds
xchg
sub
js
push
mov
std
inc
fdivr
push
enter
pop
nop
daa
jle
stos
xor
addr16
or
sub
imul
push
mov
dec
adc
in
and
int3
xchg
(bad)
mov
jmp
repz
fdivr
stos
push
sub
shl
repz
xlat
and
mov
scas
mov
cmps
paddsw
pop
adc
loopne
jnp
lock
sub
jo
(bad)
jns
es
aam
jle
mov
and
jo
dec
push
in
sub
js
cmp
dec
daa
fucomip
fistp
mov
add
shr
outs
sti
cmp
mov
dec
push
sub
(bad)
cwde
adc
mov
adc
dec
adc
sub
movs
push
nop
dec
pop
or
sub
aas
mov
jle
or
and
out
sbb
mov
shl
inc
jl
fdiv
jb
mov
ror
call
pop
cmp
imul
inc
scas
cmps
sbb
test
or
or
fisub
out
fldcw
pop
jg
dec
in
jne
push
in
mov
ret
ds
repnz
mov
fwait
and
movs
int3
push
dec
pop
sbb
pop
cmps
aad
aaa
imul
cmp
loope
mov
add
jne
ret
(bad)
fdivr
sub
mov
fdivr
dec
ret
loopne
es
retf
jle
cmp
movs
fwait
int3
out
or
jle
xor
jae
movs
xchg
gs
xchg
(bad)
xor
push
xchg
into
inc
xchg
inc
adc
inc
in
sub
arpl
shr
test
inc
data16
push
ins
leave
dec
jbe
jnp
jae
xor
hlt
or
mov
mov
or
(bad)
jmp
pop
add
push
retw
fst
mov
stos
mov
mov
adc
xor
inc
mov
stos
inc
das
sbb
fwait
arpl
pop
pop
xlat
adc
sbb
jp
addr16
nop
arpl
and
xchg
fdiv
push
(bad)
outs
pushf
xor
leave
jmp
inc
jmp
jg
out
pop
pop
popf
pushf
imul
fst
sbb
ds
mov
icebp
cs
inc
jecxz
push
clc
mov
mov
mov
sub
stos
mov
inc
scas
inc
sahf
cmp
mov
jo
sbb
pop
(bad)
push
cmp
popf
jae
jge
push
cmp
leave
xchg
xchg
dec
pop
or
daa
movs
rcr
dec
sbb
lods
push
mov
aas
loop
ficom
leave
pushf
arpl
loope
je
jle
add
or
aaa
cmp
mov
mov
outs
into
(bad)
sbb
ror
and
and
push
sub
aas
inc
xor
jno
int
mov
out
dec
jbe
repnz
xchg
mov
or
test
fnstsw
test
outs
mov
or
add
jns
pop
mov
cmp
pop
shr
dec
fmul
jmp
mov
or
pop
jmp
les
mov
(bad)
aaa
mov
xor
sub
cmp
jg
fidivr
or
(bad)
not
sbb
push
add
outs
pop
inc
mov
dec
jecxz
push
cmp
xor
fwait
mov
mov
xchg
or
ds
ins
dec
dec
dec
test
ret
aas
and
ja
or
scas
add
pop
icebp
int
into
and
aas
test
out
or
push
cdq
test
xchg
gs
inc
sbb
leave
repnz
out
inc
into
in
repz
arpl
retf
es
mov
scas
popa
jns
push
inc
loopne
xor
dec
sub
(bad)
cmp
xchg
in
je
or
cmc
adc
or
repnz
pop
shr
mov
jge
inc
popa
iret
and
mov
xor
(bad)
push
push
push
or
xchg
cmc
push
fadd
ins
jmp
aas
pop
adc
(bad)
mov
xchg
repz
fdivr
out
mov
xlat
inc
jmp
push
and
cmp
dec
push
xchg
call
push
imul
fmul
(bad)
sbb
jnp
pop
aas
pop
imul
add
sti
mov
cdq
push
popf
lods
into
aam
fyl2x
pushf
fwait
popf
test
pop
or
in
jl
and
stos
xchg
fadd
xchg
ret
aad
xchg
xchg
and
pop
fmulp
push
cmp
jle
loop
cwde
push
cld
dec
in
jmp
xor
pop
(bad)
sti
ja
movs
mov
jmp
shl
and
xchg
mov
push
mov
and
in
add
lea
mov
or
aaa
in
mov
xor
jmp
adc
popf
sbb
jae
cmp
xchg
sub
fwait
jnp
movs
stos
ins
cmp
pusha
fucom
inc
js
popf
or
dec
jo
loopne
push
iret
aas
mov
out
mov
mov
mov
ja
fdivrp
pop
maxps
pop
addr16
adc
test
jno
shl
aad
lock
or
jg
adc
xchg
adc
fsubp
popf
cwde
sub
xchg
jns
outs
jno
mov
shl
mov
fwait
in
ins
fcomp
xor
and
and
loope
jns
scas
in
test
mov
cmps
pop
ret
xor
dec
in
out
mov
bound
stc
mov
fwait
jb
and
xor
ret
mov
inc
push
mov
fdivr
test
pushf
sub
repnz
in
mov
std
jbe
and
push
push
ret
cmp
mov
call
pushf
xchg
mov
cld
inc
mov
xlat
or
pop
retf
mov
mov
xchg
cwde
cmp
xor
sub
dec
dec
out
retf
or
cmp
test
pop
psubq
pop
pop
or
in
leave
mov
nop
and
jecxz
shr
in
xchg
mov
scas
std
xchg
call
inc
mov
sar
inc
dec
xor
mov
(bad)
xchg
xor
call
dec
or
popa
xchg
sbb
inc
retf
retf
xor
stc
cmc
stos
mov
loopne
add
cmp
cwde
repnz
adc
sbb
xlat
nop
add
mov
cmp
gs
ss
mov
data16
and
dec
and
or
adc
mov
push
pop
jnp
jg
or
loope
jb
adc
aas
cli
stos
shl
clc
fnstenv
inc
mov
movs
mov
ins
mov
sbb
mov
push
out
dec
adc
mov
xor
xchg
xchg
mov
es
in
jmp
hlt
mov
repnz
movs
jbe
or
pusha
jb
(bad)
dec
cmp
mov
pop
add
call
adc
scas
ja
outs
je
out
sub
in
cli
imul
je
dec
das
adc
mov
retf
jo
scas
cmp
mov
pop
cmp
cmps
movs
test
sbb
push
popa
mov
sbb
out
jge
jno
pop
xor
les
std
sbb
mov
(bad)
push
sahf
cli
lock
sbb
aaa
dec
add
test
fldenv
or
pop
loope
jmp
sub
xchg
shr
mov
or
jle
fbstp
xor
pop
lods
fmul
retf
arpl
dec
dec
ds
jbe
and
push
xchg
add
xchg
mov
jp
inc
jno
cmp
mov
or
iret
and
or
or
pushf
mov
push
movs
(bad)
push
arpl
mov
adc
jno
mov
dec
leave
jbe
and
push
hlt
push
gs
or
push
xchg
gs
mov
jge
push
cmp
repz
or
dec
push
mov
setnp
jl
dec
pusha
mov
lock
imul
inc
push
stos
xchg
sub
stc
retf
jl
std
pop
loop
fadd
fnstsw
mov
dec
aas
dec
(bad)
or
mov
push
xor
jecxz
sub
sbb
cli
sysexit
cmp
mov
jg
mov
jne
(bad)
in
mov
std
cmp
pop
pop
mov
mov
mov
cmp
stc
pop
pop
cmp
jae
in
retf
mov
xor
xlat
mov
outs
out
mov
mov
ins
dec
mov
popa
movs
sbb
mov
cmp
jl
and
xor
mov
cmp
hlt
(bad)
popf
mov
mov
(bad)
cs
and
adc
or
cld
pop
sbb
inc
or
xor
mov
into
retf
xchg
mov
clc
and
mov
outs
push
adc
xchg
jnp
shl
into
inc
push
out
xchg
cmps
lods
aas
jb
call
lahf
sub
stc
ja
ss
enter
fcom
in
or
sbb
mov
dec
jne
push
inc
jmp
(bad)
pushf
jns
add
push
repz
popw
pop
mov
ret
loop
xchg
out
test
push
outs
sbb
mov
call
aaa
int3
retf
lods
cdq
sub
fdiv
in
push
cmp
xor
jne
repz
je
mov
sub
cmp
pop
sar
rcl
das
sbb
xor
test
cmp
xor
cmp
int
dec
sbb
xlat
repnz
out
stc
sbb
in
repnz
jnp
xchg
push
cmp
pop
lea
ins
xor
xor
mov
push
pop
cmp
in
jne
or
xchg
sub
imul
dec
out
retf
enter
(bad)
or
pushf
ss
jmp
je
mov
mov
aad
jmp
mov
fcomp
pop
popa
stos
stc
xor
out
inc
mov
cmps
add
fstp
imul
xor
mov
cmp
ret
adc
inc
imul
(bad)
sub
imul
pop
push
mul
cmp
in
out
pop
leave
mov
lods
mov
repz
fsub
fs
or
inc
call
sub
pop
je
lods
add
jp
inc
clc
cmp
jl
sbb
add
mov
push
cwde
mov
stos
mov
add
cmp
fisubr
xchg
and
sbb
arpl
add
and
cli
jg
mov
sub
(bad)
mov
lahf
test
xchg
push
loope
pop
inc
xor
nop
mov
pop
pop
mov
aas
jge
dec
cmps
adc
arpl
stos
inc
lock
int3
jecxz
pop
push
mov
jmp
xchg
or
mov
int3
bound
and
mov
js
cmp
test
aas
cmp
cld
mov
test
push
cdq
inc
aad
mov
in
xor
loope
cmp
gs
cmp
repz
or
gs
repnz
sub
xor
or
mov
lods
sbb
cmp
mov
pop
stc
retf
sti
and
call
cmp
div
sub
pop
mov
xor
cmp
shl
imul
les
jns
fidiv
jge
cmp
push
jmp
sbb
jns
gs
mov
mov
lds
mov
(bad)
es
add
push
jl
lods
int3
jbe
fbld
(bad)
fimul
popf
or
ficomp
push
mov
or
aas
repz
rol
jle
inc
aas
test
(bad)
aaa
mul
and
mov
jmp
pop
xchg
mov
imul
and
shl
loop
and
ret
cmp
sbb
sub
push
xchg
add
mov
fs
data16
inc
movs
shl
and
nop
outs
and
lods
push
outs
in
mov
lea
dec
aaa
mov
xor
stc
jae
pop
jo
scas
xchg
adc
shr
cmps
inc
mov
inc
dec
jle
inc
retf
inc
mov
xor
xor
inc
in
mov
test
sbb
push
test
sub
pop
popf
jg
pop
repz
(bad)
enter
ss
fisttp
or
shl
(bad)
fcomp
lods
lahf
aas
int
stos
cs
popa
fs
adc
ja
and
lock
into
repnz
cmp
outs
aad
and
inc
sub
and
pop
scas
mov
and
pusha
dec
inc
mov
ret
in
arpl
call
retf
xchg
(bad)
retf
pop
cmp
jmp
mov
jnp
add
push
pop
out
adc
hlt
xor
push
shr
cmps
arpl
data16
xchg
mov
mov
lahf
hlt
sti
nop
lods
sub
leave
lods
cmp
jg
test
mov
dec
in
aad
or
in
inc
dec
pusha
xchg
mov
jns
retf
dec
xor
dec
mov
pop
ja
loopne
adc
xor
shl
jmp
or
jnp
leave
(bad)
retf
daa
mov
sbb
and
fwait
js
xor
jl
xchg
loope
inc
pop
mov
imul
inc
mov
lock
push
mov
icebp
pop
push
jle
inc
in
jne
jb
xor
call
lock
mov
pop
outs
repz
cmp
push
xor
pshufw
push
inc
jne
imul
sbb
adc
pop
arpl
or
loopne
pop
mov
pop
xchg
pop
adc
(bad)
loop
sti
adc
sub
xchg
scas
popa
or
mov
(bad)
aad
mov
jl
jmp
jmp
or
cmp
mov
inc
and
jb
push
es
xor
adc
ret
push
mov
neg
push
sbb
inc
loope
jno
xor
and
mov
arpl
test
in
jmp
cmps
es
sub
mov
and
pminub
jae
mov
and
add
ror
cmps
mov
add
test
or
rol
fldenv
ret
xor
hlt
fidivr
das
sar
outs
add
(bad)
js
cld
cwde
adc
enter
mov
ror
dec
inc
mov
jmp
nop
cld
xchg
or
icebp
mov
mov
add
ins
repz
jle
es
jns
xchg
mov
pop
or
cmp
xor
addr16
cmps
test
enter
jle
sub
push
int
mov
add
ret
mov
adc
call
and
fs
fmul
mov
inc
in
cwde
add
cmc
xor
mov
out
jns
bound
or
push
cmps
mov
xor
jp
dec
and
mov
lods
int3
sub
jge
push
jns
loop
iret
ret
scas
push
repnz
inc
mov
leave
out
xchg
push
(bad)
mov
bound
fwait
inc
jnp
mov
cld
adc
in
mov
adc
sub
mov
pop
mov
stc
sti
idiv
lea
dec
jmp
cmp
add
jo
cmc
aad
and
push
mov
test
sbb
pushf
addr16
out
inc
xchg
push
xchg
or
add
lods
push
xchg
cwde
jmp
jmp
test
into
mov
pop
jno
adc
pushf
jl
jmp
jbe
mov
mov
adc
sbb
mov
inc
xor
bswap
iret
xor
(bad)
out
fs
fldcw
aad
fldenv
xor
pop
imul
mov
push
sbb
or
inc
popf
clc
repnz
xor
not
(bad)
pop
cmp
lea
aad
dec
mov
mov
mov
mov
mov
xor
frstor
in
pop
or
scas
jp
adc
das
lahf
xor
mov
cmp
or
in
scas
xor
sbb
jb
arpl
int
nop
mov
adc
idiv
icebp
mov
adc
outs
ins
idiv
(bad)
(bad)
push
cmp
or
repnz
in
stos
and
jmp
mov
(bad)
jnp
lahf
retf
push
add
xlat
push
in
mov
sub
jbe
mov
add
aaa
jmp
dec
outs
in
xor
xlat
lock
ins
jl
addr16
push
clc
ror
jmp
or
xchg
cmp
je
mov
idiv
adc
cmp
bound
dec
push
cli
lahf
call
xor
in
inc
stc
sbb
xchg
in
in
hlt
lea
popw
inc
je
jg
pop
int3
retf
shl
dec
(bad)
leave
inc
cmp
and
outs
and
push
xchg
arpl
popf
shr
jae
lods
mov
daa
lods
cmp
push
repnz
in
adc
aam
test
mul
dec
push
jno
loope
test
test
repz
in
push
inc
sahf
idiv
inc
(bad)
mov
and
jmp
movs
rol
retf
cs
inc
call
push
mov
das
outs
or
js
addr16
call
imul
data16
fdiv
retf
clc
mov
pop
stc
adc
sub
lahf
ror
xchg
mov
test
push
cld
fiadd
sub
sbb
ja
add
sub
sbb
jmp
punpckhbw
aad
mov
outs
cmp
sets
jmp
in
mov
int3
xor
in
cli
sbb
ja
sbb
(bad)
cli
sahf
daa
mov
sub
ja
aad
outs
jmp
rcr
pop
mov
cdq
or
jl
out
sti
add
mov
js
cmp
xor
mov
xor
jno
xor
stc
add
sar
nop
pushf
pop
or
mov
lods
push
sti
loopne
mov
pop
push
xor
add
xchg
push
and
jnp
dec
xor
cmps
pop
jl
push
or
adc
mov
mov
ja
loopne
cdq
mov
das
add
pop
cs
xchg
mov
pop
ror
inc
fwait
xchg
pop
test
push
xor
je
pop
mov
fld
push
push
push
and
retf
cmc
cmp
movs
cld
xor
movs
int
retf
or
fs
pop
pusha
sbb
mov
(bad)
mov
mov
cmp
mov
popf
call
cmp
xlat
xchg
mov
mov
mov
add
pop
jmp
jp
ror
(bad)
jecxz
aam
jp
lods
jmp
or
stos
shl
bound
dec
pop
popf
add
scas
cmp
xchg
(bad)
pop
adc
cmp
xor
dec
cmp
call
lods
jb
sbb
sbb
mov
mov
sbb
or
dec
adc
cmp
push
adc
in
(bad)
and
cli
inc
call
cmps
repz
nop
test
fwait
jg
ficom
(bad)
mov
dec
ficom
add
into
mul
pop
imul
mov
imul
xchg
adc
in
jmp
stc
or
xor
fdiv
inc
and
sar
test
int3
mov
sub
or
dec
in
and
gs
mov
mov
scas
fild
pop
dec
mov
push
shl
stos
add
das
and
lahf
cmp
std
add
js
jmp
hlt
je
cdq
jo
mov
sbb
test
inc
cs
mov
sbb
mov
xchg
(bad)
aas
les
push
mov
cld
test
push
lods
mov
add
adc
cs
add
inc
out
popf
mov
sbb
xor
mov
addr16
ins
test
cdq
push
jmp
inc
shr
dec
cld
cmp
xchg
cmp
rcl
out
push
ja
cmp
jae
mov
mov
jmp
mov
cmp
add
repnz
dec
les
outs
das
je
sub
push
xchg
fs
sbb
mov
sbb
dec
rcl
aam
inc
jle
inc
add
jl
out
out
sbb
xchg
pop
repz
(bad)
push
cmc
ja
lock
les
push
mov
fild
mov
cmps
push
mov
or
fwait
imul
leave
ds
xlat
sar
push
mov
xor
fsubr
mov
inc
inc
stc
add
and
mov
int3
adc
pop
fprem
daa
pop
je
test
pop
add
or
(bad)
pop
popf
in
mov
jle
ret
xor
and
retf
imul
rcr
fst
sar
enter
(bad)
inc
pushf
mov
xchg
sahf
aaa
(bad)
mov
mov
hlt
cmp
pusha
out
ins
lock
inc
loop
into
lock
inc
shr
adc
xchg
add
out
ins
movs
mov
xchg
inc
fidiv
and
mov
cmps
in
pop
pusha
aas
pusha
aaa
aaa
pop
ins
cld
cli
adc
movhps
xor
nop
inc
pushf
ss
repnz
sbb
pushw
aas
dec
inc
dec
(bad)
stos
loop
test
or
cli
cdq
mov
jl
mov
mov
fcmovne
push
pusha
aas
add
clc
pop
add
xchg
add
fistp
sub
push
mov
in
xor
mov
popa
fs
add
jo
jl
and
jecxz
out
xlat
out
sbb
jg
push
enter
imul
dec
test
(bad)
(bad)
hlt
pop
inc
jmp
sub
sbb
es
and
mov
fidiv
cld
pop
(bad)
adc
pop
int3
pop
ja
fidivr
aaa
mov
jge
rol
or
inc
sbb
std
mov
test
icebp
int3
push
ror
call
in
shl
lds
sbb
arpl
mov
cmps
push
push
xchg
lods
shl
jle
inc
cmp
mov
dec
push
sub
in
jbe
xchg
xchg
push
pop
sub
movs
mov
in
xchg
adc
popa
xor
or
inc
cs
sub
aad
xor
cmp
lods
xchg
aam
push
out
push
inc
jg
stos
icebp
lahf
xor
pop
mov
je
adc
jnp
mov
xor
mov
push
cmc
mov
mov
cmp
loope
xor
enter
(bad)
stc
nop
mov
aad
mov
imul
xor
push
std
jb
jl
dec
adc
data16
pop
popf
test
add
mov
add
push
mov
push
mov
jle
jmp
nop
sub
cs
and
add
add
pop
int
add
sbb
inc
pop
push
xchg
pop
add
sub
mov
add
jl
pop
mov
sbb
cmp
cmp
scas
mov
sub
ror
mov
xchg
shl
sub
sahf
out
push
stos
or
js
cmps
ins
stos
cmp
hlt
fidivr
adc
push
pop
ror
repnz
jp
or
rcr
pop
lea
mov
addr16
push
mov
pop
imul
cmp
xor
leave
push
outs
arpl
repnz
jno
jne
outs
iret
lahf
mov
dec
jmp
xchg
lahf
int3
mov
fisttp
into
mov
into
xor
mov
add
xchg
jbe
test
inc
mov
gs
dec
pavgb
push
inc
adc
xlat
fbld
out
and
test
and
(bad)
scas
mov
xchg
push
icebp
sahf
mov
adc
fdiv
sub
cmc
inc
sub
aad
rcl
push
cdq
xchg
cld
(bad)
sbb
icebp
push
fsubr
push
mov
cmp
and
cmc
in
mov
xchg
xlat
push
ret
xchg
xor
test
das
shr
cwd
mov
dec
dec
out
js
adc
add
and
repz
call
mov
int
clc
movs
popf
xchg
movs
int3
ins
jnp
and
stc
mov
hlt
ficomp
stos
adc
frstor
mov
enter
mov
ficomp
pop
cdq
iret
mov
out
inc
cmp
xchg
ror
adc
shl
push
push
or
js
out
jle
mov
xchg
js
imul
push
movs
push
inc
jne
push
mov
lea
push
cld
adc
or
sub
idiv
pop
inc
mov
xor
ret
lods
xor
sti
lock
ror
lidtd
or
cld
cmc
add
mov
cmp
pusha
(bad)
and
cmp
inc
dec
inc
je
mov
or
mov
popf
comiss
ins
pop
add
sbb
mov
aaa
imul
mov
mov
inc
xchg
xor
call
mov
xor
pop
mov
adc
jne
fistp
in
inc
test
sti
pop
and
ret
mov
fs
lods
and
pop
bound
inc
pusha
mov
or
xchg
pusha
mov
sbb
or
sub
or
shl
and
or
mov
pop
jge
je
dec
push
ss
mov
sub
movs
mov
cmc
jmp
and
push
mov
loope
fsub
test
and
adc
jno
cli
call
sbb
cdq
xchg
imul
xor
fiadd
xor
mov
cmc
hlt
mov
xchg
cdq
push
ins
ins
push
mov
sbb
xor
aas
or
cmps
into
(bad)
pop
adc
int3
repz
jb
mov
jl
cs
stos
div
out
jle
pop
cmp
xchg
jbe
mov
mov
repz
mov
aaa
sbb
in
repz
test
mov
sub
pop
das
dec
movs
test
rol
jl
pop
dec
jns
dec
(bad)
mov
rol
clc
loop
jbe
sub
push
pushaw
mov
(bad)
mov
cmp
push
sbb
pop
call
stos
pop
sar
sbb
push
xchg
mov
mov
js
sub
lods
daa
ret
shr
scas
push
dec
and
in
cs
aaa
fsubr
add
xchg
xlat
dec
jne
les
xchg
sbb
and
retf
fild
fisttp
retf
adc
jmp
xchg
push
pop
dec
sub
fisubr
push
mov
xor
adc
pusha
dec
fisttp
adc
add
sahf
mov
and
mov
repnz
xor
mov
cld
cs
test
push
push
enter
in
inc
sub
jbe
out
xor
mov
inc
lods
aaa
adc
cmp
frstor
mov
pop
scas
ds
add
push
xor
in
fsubr
ja
gs
bound
not
or
mov
push
ins
push
mov
out
scas
fimul
cs
pop
or
shl
test
jae
and
fisubr
in
ins
arpl
pop
push
sti
push
mov
mov
lahf
mov
add
xchg
es
cwde
dec
sbb
ja
cmp
lea
mov
fsubp
push
jl
pop
sbb
mov
mov
inc
jae
mov
mov
mov
jns
les
lahf
inc
mov
scas
push
shl
call
outs
push
gs
cmp
adc
xchg
popa
(bad)
adc
pop
leave
xchg
addr16
(bad)
fdivr
(bad)
xchg
lods
retf
sbb
shl
cs
cmc
jl
push
inc
pop
pop
sbb
retf
loop
mov
fisttp
jmp
lock
sbb
cmps
cmps
add
fdiv
mov
cdq
xor
xchg
mov
mov
push
arpl
dec
push
aas
test
es
scas
pop
stos
xchg
add
dec
scas
ret
js
out
push
mov
push
adc
sti
push
and
pop
adc
fmul
pusha
push
jp
mov
nop
in
jmp
mov
stos
mov
cli
sbb
inc
pop
mov
iret
mov
clc
or
icebp
or
pop
mov
inc
js
mov
in
inc
call
outs
icebp
adc
dec
inc
push
jmp
or
cmp
mov
push
cmp
and
fwait
outs
jne
jge
sub
or
fimul
js
mov
lods
in
dec
jl
mov
cmc
pop
scas
test
xor
mov
hlt
mov
and
jge
fcomp
movs
sub
ins
mov
mov
mov
lea
dec
jne
mov
add
(bad)
or
out
xchg
and
je
out
test
or
dec
xor
pop
mov
outs
add
jle
mov
dec
sbb
and
add
push
mov
je
push
loopne
call
sbb
in
or
(bad)
fcom
xchg
inc
or
popa
enter
mov
sbb
bound
(bad)
push
sub
push
into
jo
mov
push
sar
sub
jmp
sub
mov
xchg
and
and
adc
jg
mov
js
aaa
add
add
leave
out
fst
xchg
dec
jb
push
pop
sbb
adc
lock
push
sbb
xchg
jb
iret
mov
and
adc
in
lahf
(bad)
out
sub
mov
jno
sub
sub
rcl
icebp
mov
(bad)
ss
jae
rol
or
hlt
sbb
jecxz
jns
cmps
sahf
mov
jbe
(bad)
fwait
inc
scas
pop
jns
retf
and
adc
sub
jmp
leave
rcl
(bad)
inc
lods
xor
jnp
outs
out
mov
jg
call
mov
push
je
dec
push
shl
add
popf
call
daa
jmp
ss
out
outs
xor
jg
jmp
jge
dec
int
out
out
outs
add
shl
(bad)
les
cwde
mov
fst
test
jno
fist
or
jne
xchg
push
jne
xchg
pop
dec
pusha
or
int
add
fnstsw
ds
(bad)
or
cwde
iret
lea
fwait
xchg
jg
sbb
pop
or
push
shr
imul
dec
lods
mov
xor
lahf
push
out
pop
push
jmp
cmc
mov
test
mov
and
in
dec
and
adc
mov
repz
add
loope
lahf
pop
adc
cmp
(bad)
shr
call
push
jmp
std
jne
mov
mov
xchg
jle
sti
xchg
jns
jo
adc
ins
mov
xor
mov
ja
and
xchg
mov
push
or
mov
xchg
enter
mov
jne
and
lock
mov
or
push
cmp
sub
mov
sub
(bad)
jmp
mov
mov
push
cmp
xor
xor
push
push
or
stc
mov
jns
fwait
(bad)
ss
in
lds
test
iret
pushf
test
xchg
mov
jecxz
retf
retf
lods
scas
mov
sbb
int3
mov
fist
push
cmp
jb
loope
cs
pop
loop
sbb
mov
jmp
add
sbb
out
cwde
push
xchg
or
(bad)
pushf
imul
gs
neg
pop
enter
mov
(bad)
sbb
inc
scas
pop
aas
scas
cld
and
and
add
lods
sub
jns
push
test
aad
cdq
xchg
mov
test
pop
mov
xchg
mov
and
outs
scas
pop
xchg
push
xchg
std
mov
push
push
pushf
jp
and
mov
cli
out
cmp
and
das
jmp
loopne
inc
cmp
mov
outs
push
and
scas
cmp
mov
push
and
dec
sahf
stos
imul
repnz
not
and
test
jge
sahf
adc
jecxz
scas
or
pop
adc
leave
into
sub
mov
cmc
loopne
or
and
movs
mov
loop
xlat
jmp
or
fsubr
xchg
jae
xchg
pop
ins
pop
or
xor
mov
or
mov
xchg
out
jo
push
xor
lock
inc
shl
dec
mov
test
div
push
fcos
fist
hlt
stos
into
out
add
or
inc
xchg
mov
push
scas
add
jmp
call
cmp
cmps
(bad)
dec
js
push
mov
aaa
pop
ficomp
jle
adc
mov
fwait
imul
hlt
pop
cmps
push
mov
push
pop
mov
shl
ficom
in
mov
add
pop
xchg
(bad)
test
mov
outs
bnd
xchg
dec
mov
ret
mov
add
cmp
push
or
(bad)
call
nop
jmp
js
sti
lods
scas
mov
sbb
adc
dec
jbe
and
cmp
mov
scas
pusha
cmp
cmps
enter
jle
jmp
mov
jno
test
ds
mov
data16
dec
or
push
mov
xor
mov
cmp
test
pop
mov
push
pop
nop
call
xchg
or
cs
jle
add
cmp
push
inc
(bad)
xchg
mov
cdq
in
inc
sub
mov
cmp
inc
mov
mov
mov
sbb
add
mul
test
mov
xor
scas
(bad)
lods
xchg
mov
lea
je
dec
inc
js
out
sub
inc
test
addr16
mov
xchg
sub
retf
das
cmp
push
sahf
mov
bound
les
mov
and
repnz
sub
xor
in
outs
jb
or
sahf
jno
fwait
out
fcomp
leave
das
movs
adc
into
jae
fild
or
add
out
rcl
les
lds
out
(bad)
call
pop
mov
xchg
pop
push
(bad)
(bad)
inc
lds
scas
mov
aam
push
imul
xlat
daa
pusha
into
outs
retf
in
stos
adc
xchg
add
dec
xchg
xchg
xor
call
sub
pop
sub
lock
scas
and
imul
sbb
cmp
or
jmp
jae
les
dec
pop
ret
jecxz
xchg
xchg
dec
mov
inc
xor
arpl
xor
pushf
loop
rcr
rcr
fidiv
mov
fdivr
xor
aas
and
fcomp
test
in
jmp
daa
and
mov
dec
jp
ja
les
loope
rcr
mov
adc
mov
add
call
fwait
xchg
push
mov
xchg
lods
das
mov
push
stos
xchg
ss
xchg
test
push
push
cli
imul
pushf
push
mov
mov
retf
(bad)
mov
mov
outs
(bad)
lods
out
(bad)
neg
cmp
push
fs
scas
ffree
out
clc
out
imul
inc
xchg
inc
popa
iret
mov
push
or
sub
aas
push
adc
cmp
int3
bound
mov
inc
(bad)
mov
cwde
jae
sbb
add
jmp
add
aad
xchg
push
ds
int3
and
jle
neg
dec
push
xor
leave
inc
adc
test
(bad)
push
jle
jne
bound
rcl
inc
mov
mov
adc
sub
lods
cmps
scas
mov
ficomp
ss
out
ins
mov
xlat
sbb
mov
adc
ins
dec
stos
push
gs
mov
setp
mov
jb
lods
test
jne
xchg
sbb
gs
dec
adc
mov
iret
ror
xor
or
(bad)
call
mov
xchg
sar
popf
xor
loopne
(bad)
cld
xchg
push
sub
xchg
push
or
mov
pop
jnp
add
in
jecxz
dec
loopne
fisttp
inc
dec
xor
push
js
shl
inc
pop
pushaw
or
mov
(bad)
call
ret
mov
mul
jnp
xchg
jge
scas
and
cs
or
mov
cmp
xchg
imul
jnp
ficomp
mov
pop
mov
and
sti
js
push
movs
push
lods
in
iret
fs
into
fsubr
call
mov
mov
call
aad
fistp
stos
mov
(bad)
popf
test
or
push
enter
mov
inc
(bad)
jge
fsubr
jne
adc
inc
cmp
sub
into
cwde
jge
out
sub
sub
push
inc
jne
jae
inc
ins
or
je
imul
mov
jecxz
fistp
fcomp
in
pop
call
lahf
stos
vorps
dec
xor
adc
pop
hlt
mul
sub
mov
mov
dec
xchg
rol
and
sbb
jne
jl
inc
outs
sub
pop
in
ds
retf
jbe
(bad)
call
test
test
adc
in
fs
call
fild
and
inc
sbb
test
vcomisd
xlat
jg
adc
inc
jle
nop
cmp
(bad)
xor
pop
es
cmps
jns
inc
adc
xor
or
jae
arpl
xor
xchg
mov
mov
dec
or
jb
lahf
inc
icebp
es
add
clc
dec
aad
fldenv
mov
jno
jmp
sub
ss
fstp
cmp
sbb
xchg
and
ins
aaa
mov
imul
sub
sahf
mov
cwde
ds
push
inc
cmp
pop
or
xchg
sbb
sbb
fcom
xor
dec
jp
aad
dec
dec
inc
cwde
push
std
mov
jmp
jne
mov
mov
lea
bound
push
cwde
test
dec
and
pop
outs
mov
pop
push
cmps
mov
add
and
cmp
push
jmp
iret
imul
lahf
jns
pop
push
mov
jmp
sub
mov
stc
dec
imul
out
xchg
stos
add
mov
pop
daa
or
xchg
dec
rcr
push
mov
test
dec
push
xor
pusha
add
ficom
(bad)
in
and
gs
lds
out
cs
mov
aad
push
sub
xchg
lahf
adc
cli
loope
aaa
dec
push
add
mov
add
pop
ins
arpl
push
adc
jp
dec
jecxz
xor
gs
cs
jns
mov
mov
or
mov
outs
sar
ret
push
cmp
mov
out
xchg
ror
and
sbb
sti
jl
sub
(bad)
sub
je
mov
inc
add
adc
and
pop
dec
(bad)
push
sub
mov
mov
fidivr
jle
sbb
mov
xor
in
cld
pusha
cs
jge
lahf
cmp
and
cmp
lahf
lds
outs
pop
shl
or
loop
adc
pushf
cli
sbb
mov
inc
sub
sahf
stos
ret
or
sbb
or
mov
imul
loop
xlat
dec
sar
or
dec
push
dec
repz
call
test
xor
cs
adc
sbb
clc
arpl
popf
push
or
inc
gs
leave
xchg
xchg
sbb
or
jbe
(bad)
sbb
xor
xchg
aam
inc
add
xor
rcr
cmp
xor
push
jne
and
mov
sub
adc
lds
cmp
mov
pop
pop
cmps
sbb
or
sbb
inc
add
inc
iret
sar
test
in
pop
and
jmp
movs
jno
xchg
mov
aas
icebp
inc
mov
or
dec
push
mov
ds
fiadd
add
mov
mov
ret
and
xlat
movs
ins
sbb
or
and
js
(bad)
or
pop
cmps
sub
cld
add
(bad)
es
ss
fst
loope
out
test
inc
shl
mov
fst
cmps
jns
sbb
mov
mov
stc
xlat
sti
out
cld
frstor
mov
xchg
dec
test
movs
mov
mov
xchg
icebp
xor
adc
sub
mov
mov
loop
pop
fwait
ret
daa
loop
fwait
push
and
sub
in
jne
and
inc
mov
add
sub
sub
out
pushf
aad
mov
mov
cdq
xor
cli
pop
(bad)
and
daa
ins
dec
pop
cmp
bound
push
popf
push
jecxz
dec
nop
bound
inc
mov
xchg
movs
scas
mov
fld
hlt
mov
xor
clc
mov
fstp
fstp
in
std
xor
cld
lods
cmp
repnz
push
xor
push
mov
lds
and
pop
std
xchg
hlt
cwde
std
sbb
mov
call
imul
xchg
ror
xchg
mov
xor
cli
sbb
aas
mov
dec
rcl
push
push
pop
aam
jb
aaa
dec
ds
inc
ins
xchg
jne
js
mov
add
mov
clc
push
dec
stos
xlat
test
sahf
cld
jmp
cmp
adc
mov
inc
cld
stos
std
sbb
lods
dec
jae
dec
lea
aaa
mov
ins
jns
inc
cs
sbb
mov
ds
xchg
adc
jne
mov
ret
push
or
inc
inc
cdq
(bad)
push
push
scas
pushf
jmp
aas
cmp
in
nop
pop
sub
and
dec
xor
jle
test
mov
jne
or
xchg
mov
sbb
fsub
cmp
jae
jle
push
mov
into
es
mov
rcr
out
or
mov
mov
test
jecxz
loope
lahf
mov
xor
xchg
int3
jp
or
enter
sbb
aaa
jns
jp
or
push
sti
xchg
sbb
and
imul
dec
mov
push
(bad)
or
and
xchg
sbb
fdivr
leave
mov
and
jbe
xor
cmp
dec
(bad)
arpl
mov
push
div
adc
pushf
out
sahf
jle
pop
and
retf
out
dec
xor
hlt
fwait
iret
pop
jns
pusha
leave
xchg
xlat
fwait
test
sbb
in
aaa
add
lods
outs
ror
or
push
loop
mov
fwait
pusha
(bad)
aas
rol
sbb
ds
lahf
jnp
mov
pop
daa
arpl
js
aaa
jno
fbstp
xor
retf
jecxz
movs
adc
xor
mov
adc
iret
cdq
add
xchg
inc
xor
stos
pop
out
xor
xor
(bad)
mov
ficomp
xlat
jmp
ins
mov
fst
repz
sbb
xor
das
bound
or
rcr
in
int3
inc
popf
into
test
pop
call
push
push
mov
(bad)
jl
pusha
inc
xor
jg
mov
sbb
inc
adc
enter
dec
mov
inc
fidiv
adc
xor
push
mov
lea
rcl
retf
or
or
mov
and
push
cmps
xor
pop
and
dec
mov
pusha
shl
xchg
lahf
cdq
sbb
stc
mov
stos
daa
popa
(bad)
lods
sbb
retf
or
dec
mov
fwait
mov
pop
cmp
sub
push
mov
pop
cwde
dec
pop
clc
lock
xchg
rcr
adc
adc
shl
mov
jl
arpl
sar
adc
xchg
js
in
icebp
pop
cdq
cmp
jmp
sbb
mov
icebp
out
arpl
mov
outs
push
lahf
dec
mov
push
and
sti
rol
xor
add
retf
int
stos
sub
cdq
sahf
test
push
ret
sbb
push
dec
mov
lea
xchg
push
push
dec
stos
mov
sbb
inc
xor
or
jecxz
mov
xchg
jge
push
fld
nop
mov
sti
cmp
movs
push
int3
cmp
repnz
or
(bad)
test
jbe
mov
out
xor
pusha
add
shr
mov
sbb
pushf
es
xor
lods
cmp
sar
int3
fst
jbe
cmps
inc
pushf
inc
cwde
aad
je
push
div
pop
cdq
ret
push
add
mov
adc
sub
cwde
adc
popf
xchg
rol
mov
movs
dec
push
ror
retf
add
mov
cmp
dec
addr16
xor
test
nop
(bad)
mov
add
adc
pop
add
sbb
xor
(bad)
push
clc
jnp
test
xor
enter
movs
push
mov
jmp
retf
outs
xor
aas
push
in
idiv
(bad)
xlat
xlat
sub
or
(bad)
cmps
cmp
jbe
cmps
lods
mov
pusha
iret
ins
xor
jecxz
test
clc
dec
(bad)
pop
sti
daa
mov
mov
stos
jae
xor
inc
or
fstp
(bad)
aad
jl
fst
sahf
hlt
mov
adc
mov
ret
sbb
dec
ds
mov
inc
mov
mov
mov
loope
pop
aaa
push
frstor
pop
xchg
add
jbe
aad
fs
or
fs
fisttp
aas
or
ins
inc
mov
push
push
stos
lock
(bad)
aaa
dec
sti
(bad)
fisubr
cmp
out
dec
dec
pushf
fisubr
cmp
dec
xchg
add
push
pop
nop
xor
call
and
call
scas
int
lahf
(bad)
loopne
xchg
xchg
arpl
inc
jle
inc
retf
dec
push
sbb
push
inc
and
inc
jb
(bad)
jle
push
aam
imul
add
aad
imul
pop
shr
push
push
repz
or
lds
mov
adc
cmc
cmp
cmp
mov
or
in
fs
inc
sub
jae
mov
dec
mov
popa
das
push
je
or
adc
lods
cmp
arpl
sti
mov
call
int3
xchg
in
es
xchg
inc
push
fwait
add
jecxz
sahf
scas
fild
(bad)
cmc
push
dec
dec
mov
pushf
mov
sahf
and
mov
and
arpl
fwait
sub
dec
mov
ror
sti
iret
adc
scas
sub
pop
mov
loopne
in
mov
sti
out
xor
cmp
mov
mov
cmps
fndisi(8087
lahf
cmp
std
cwde
cdq
into
test
or
push
inc
xchg
cmps
mov
mov
mov
std
push
mov
inc
sbb
inc
add
iret
retf
and
xor
xchg
mov
xor
pop
jb
inc
(bad)
(bad)
rcl
adc
and
mov
call
jecxz
and
pop
add
aaa
adc
push
ret
push
add
xchg
out
in
add
into
leave
inc
fdivrp
retf
ins
add
sbb
imul
dec
outs
inc
add
enter
imul
adc
cmp
or
scas
stc
inc
(bad)
iret
push
cmp
push
outs
mov
in
shl
test
adc
jmp
aaa
push
std
mov
cmp
jp
sbb
aam
inc
ins
dec
xchg
cmp
ret
ins
popa
fsqrt
aas
cdq
shl
jmp
std
sub
jp
push
lock
inc
pop
popa
pop
mov
and
ds
bound
inc
cs
adc
mov
xor
pop
push
repnz
mov
call
ret
(bad)
xchg
test
mov
nop
xor
out
dec
stos
imul
cmp
aam
daa
je
cmovnp
sbb
ins
dec
jge
sbb
push
jmp
xor
jmp
ret
cmp
mov
or
nop
idiv
push
icebp
std
daa
xchg
jg
inc
xor
jmp
popf
sbb
movs
push
sbb
sub
imul
push
xlat
mov
ds
sbb
push
cli
into
ins
jecxz
push
or
xor
cs
push
adc
xchg
sbb
xchg
and
lea
xchg
sbb
sub
sbb
(bad)
push
or
add
test
mov
nop
jmp
pop
add
imul
(bad)
push
je
xchg
push
sahf
pop
push
jno
out
movs
xchg
fsubp
jnp
dec
pushf
pop
(bad)
sub
mov
rcl
adc
or
js
mov
out
sub
lea
in
mov
in
retf
xchg
div
push
iret
push
fisttp
shl
aaa
mov
lods
xor
sbb
rcr
hlt
mul
inc
pop
jno
jecxz
ror
and
lods
jl
loopne
and
call
fdivrp
cmp
(bad)
sahf
xor
imul
mov
je
mov
adc
push
loopne
cmps
pop
mov
push
mul
setl
fwait
(bad)
sub
sub
jbe
push
js
mov
cdq
(bad)
arpl
or
adc
add
mov
xor
scas
xchg
mov
pop
ja
rol
mov
xchg
dec
sbb
push
mov
stos
out
outs
hlt
adc
xor
cmp
push
lds
(bad)
mov
(bad)
mov
adc
and
pop
push
les
enter
xor
xchg
imul
mov
dec
test
inc
add
cmp
xor
adc
inc
push
jne
xor
int
leave
jne
ss
add
push
imul
pop
xchg
push
jecxz
lods
add
inc
mov
fwait
and
xlat
cli
addr16
xchg
fnsave
push
mov
mov
js
retf
sbb
(bad)
mov
outs
aad
push
outs
aad
pop
sbb
jb
lods
or
repnz
js
add
loopne
xchg
push
into
xchg
push
pop
fdecstp
xchg
mov
retf
pop
sahf
test
lea
outs
pusha
cmp
xchg
sar
sahf
add
outs
dec
pushf
add
and
dec
push
mov
gs
ss
rcl
mov
jns
mov
enter
cmps
mov
cwde
shl
cwde
std
xor
aaa
sbb
test
dec
addr16
and
ins
lahf
dec
xor
mov
popa
rcr
cmp
in
lock
pop
cmp
stos
sub
mov
in
xor
mov
ficomp
sar
outs
adc
mov
sub
js
xor
mov
and
push
adc
in
mov
aaa
arpl
call
repnz
sub
dec
and
(bad)
and
ins
mov
inc
push
mov
pop
push
(bad)
int
add
mov
xor
sbb
std
cdq
mov
mov
sbb
ret
dec
push
cmps
xchg
sbb
or
cmp
ds
xchg
fist
jo
push
out
rcr
les
mov
sub
call
mov
aam
mov
repz
outs
pop
(bad)
push
test
mov
lods
test
sub
nop
data16
fisubr
in
popf
call
xchg
call
(bad)
fisttp
push
inc
mov
sbb
sahf
clc
ret
sti
mov
lods
or
loope
fwait
push
cmp
pop
nop
xchg
inc
nop
pop
out
and
jo
push
xor
cld
or
inc
cld
mov
cmp
daa
mov
fcmovu
xchg
out
jne
mov
and
pop
dec
add
loop
addr16
mov
mov
rol
add
sbb
cmp
sub
das
(bad)
mov
mov
gs
xchg
xor
in
ret
ret
pop
xchg
(bad)
adc
lods
mov
shl
enter
and
or
dec
jg
sub
rcr
sahf
punpckhbw
pop
rol
bound
sbb
ja
pop
mov
outs
imul
rcr
das
ja
(bad)
bound
sub
es
push
jbe
lea
aas
not
cmps
test
xor
sbb
std
inc
inc
stc
jns
mov
push
(bad)
rcr
in
mov
daa
mov
mov
jno
stos
sbb
or
movs
mov
enter
push
iret
mov
ins
stos
mov
sahf
cmps
cmc
idiv
fs
cwde
xchg
ret
mov
push
jle
aam
pop
(bad)
shl
mov
nop
pop
cmps
test
cs
or
inc
retf
sbb
fild
sub
xchg
imul
jl
or
xor
cmp
aas
jns
(bad)
adc
imul
test
pushf
outs
push
mov
mov
xchg
je
mul
popa
repnz
push
stc
pop
push
and
push
into
mov
jp
fmul
into
push
call
int
and
xchg
out
dec
or
dec
adc
shl
or
in
xor
mov
cmc
shl
push
inc
aad
xchg
hlt
ret
int3
sbb
test
stc
or
in
cmp
test
test
(bad)
icebp
repz
in
jbe
sar
fwait
mov
xchg
xor
mov
mov
je
test
lahf
sbb
pop
xchg
or
loopne
pop
inc
retf
jne
and
ret
or
add
mov
les
lds
pop
sbb
(bad)
bswap
push
fdivr
inc
pop
(bad)
xchg
jmp
retf
idiv
xchg
add
jle
mov
movs
inc
int
mov
or
sub
retf
xchg
sub
push
pop
inc
hlt
fdivr
xlat
sub
movs
pop
fcomp
jo
xchg
and
sub
push
xchg
fwait
jnp
jnp
mov
je
jnp
jno
mov
pop
fmul
out
outs
out
mov
ffree
sub
das
add
test
inc
xor
xor
mov
jmp
js
or
mov
push
repnz
popf
stos
pop
sub
pop
xor
sub
stc
repnz
xchg
pop
es
mov
cs
fucom
xchg
or
shl
shr
mov
mov
test
test
aaa
in
popa
adc
xchg
push
(bad)
daa
xor
cmp
arpl
xor
and
aas
fwait
sub
retf
gs
sbb
and
mov
and
and
stos
data16
es
icebp
inc
div
ficom
mov
sbb
cld
adc
pop
mov
cld
popa
test
in
and
push
in
retf
mov
sub
pop
lahf
push
dec
into
cmp
test
sub
add
fucomp
lahf
mov
das
mov
mov
sub
lea
pop
rcl
mov
push
mul
dec
sti
popf
add
sub
sub
les
das
push
and
pop
and
lea
xor
or
(bad)
adc
comiss
pop
inc
sar
jg
ret
pop
mov
jge
sbb
fcomip
xchg
pop
pushf
jecxz
ins
cs
mov
or
jmp
into
out
mov
(bad)
mov
sub
or
mov
and
loopne
mov
ins
sbb
xchg
fwait
es
xchg
mov
popf
xlat
loop
xchg
sahf
imul
das
and
nop
mov
dec
pop
inc
pop
stos
loope
jl
in
lods
arpl
inc
push
leave
mov
mov
(bad)
adc
xor
mov
push
mov
adc
aad
add
xlat
out
pop
lods
mov
aas
or
repz
xor
add
jnp
repz
add
mov
and
pushf
daa
in
and
or
dec
or
push
push
lea
popa
dec
pop
in
and
loop
fldenv
or
xchg
ss
nop
add
adc
lods
pop
cmp
push
inc
call
mov
int
sbb
test
mov
pop
arpl
mov
push
inc
jno
jmp
stos
jne
pop
enter
leave
xchg
cmp
mov
rol
jbe
stc
loopne
mov
scas
push
in
xchg
mov
add
std
mov
hlt
adc
push
xor
ja
stc
shr
and
or
stos
popa
xchg
xchg
and
cmp
mov
and
sub
cmc
mov
xor
aaa
fs
test
data16
aas
pop
out
fwait
clc
sub
int3
dec
rcr
(bad)
mov
ins
(bad)
xchg
mov
push
test
shl
add
les
xor
scas
xchg
gs
fcmovnb
or
xor
dec
cmp
inc
mov
push
cmps
mov
fidiv
(bad)
ror
adc
cld
push
cdq
mov
lahf
and
xchg
(bad)
rol
icebp
pop
daa
loop
leave
sbb
add
call
mov
ds
(bad)
cmp
lea
xchg
movd
mov
jns
mov
repz
mov
jge
cmp
outs
add
and
xchg
mov
shl
mov
xlat
sub
pop
sub
stos
sub
fmul
add
mov
mov
dec
adc
mov
stos
adc
arpl
push
and
mov
pop
and
loopne
xor
das
sub
mov
dec
or
jp
out
jbe
dec
xor
or
push
out
test
aaa
mov
add
test
add
inc
xor
add
pusha
or
imul
imul
jl
mov
jecxz
push
inc
inc
cs
or
dec
mov
fimul
mov
mov
or
mov
cmp
shr
push
pop
xchg
shr
cs
lds
(bad)
stc
(bad)
adc
fcomp
sbb
jmp
jge
pop
mov
adc
push
movs
cmp
or
lds
mov
movs
stos
ins
jg
push
push
jmp
sub
fst
retf
dec
dec
inc
fdivr
out
cmp
xchg
repz
xchg
and
jmp
pop
test
(bad)
sub
jne
(bad)
jg
mov
lock
xor
xchg
cmp
mov
arpl
mov
cs
(bad)
iret
out
aaa
dec
imul
(bad)
cmp
mov
mov
(bad)
scas
push
add
sahf
mov
shr
out
into
cmp
cmp
jbe
xor
js
adc
movs
pop
adc
mov
push
wrmsr
mov
fcom
and
inc
cmp
stos
sbb
mov
sahf
stc
fcomp
retf
xor
retf
cs
test
push
mov
scas
mov
sub
push
aaa
aas
call
lds
aad
mov
int
push
mov
scas
mov
pop
sbb
in
mov
xchg
or
mov
pop
pushf
push
pop
bt
(bad)
int3
inc
(bad)
jg
mov
cmp
pop
or
add
enter
fisttp
shl
loop
fist
mov
cmp
sbb
dec
aaa
fidivr
test
jmp
dec
adc
inc
cmp
xor
out
loop
cdq
repnz
pop
push
mov
cmp
cdq
push
ror
cli
mov
movs
jmp
dec
sar
mov
sub
add
xchg
sub
inc
fnstsw
loop
adc
mov
fdiv
xor
(bad)
in
add
lahf
jmp
sub
test
(bad)
(bad)
and
imul
sub
pushf
jecxz
add
xchg
hlt
lock
push
dec
div
mov
fs
jae
or
mov
mov
lock
in
cli
clc
ins
rcr
push
mov
test
lods
and
arpl
pop
ins
into
mov
(bad)
jmp
ret
and
adc
adc
std
cli
pusha
add
ins
daa
adc
jnp
pop
test
and
mov
imul
shl
add
shl
stos
pop
ja
adc
and
mov
stos
sbb
jae
mov
in
daa
xchg
and
std
je
jne
popf
pusha
pop
repz
sahf
inc
jno
push
pop
sar
sbb
pop
ror
add
mov
pusha
inc
xchg
mov
jmp
and
cmp
mov
add
icebp
std
out
xchg
addr16
add
lods
into
and
shl
cmp
add
rcl
mov
push
mov
sti
hlt
dec
sub
cmps
cs
or
mov
dec
cmps
popa
repnz
imul
or
movs
fs
and
test
jle
ror
fwait
dec
in
ins
jecxz
sar
sub
(bad)
jmp
push
cld
cwde
ins
stos
push
cmp
dec
add
retf
stos
adc
pop
not
and
xchg
ja
xchg
mov
push
iret
jbe
sti
sbb
imul
inc
jmp
push
add
jge
inc
mov
dec
jge
fs
cmp
push
movs
adc
fwait
call
adc
jno
or
cmp
lea
sub
jne
dec
fdiv
call
push
sub
inc
es
shl
pop
enter
ds
js
nop
cmp
psubsw
jns
sbb
adc
fadd
adc
daa
scas
ins
sbb
and
stos
mov
xor
push
pop
inc
sub
adc
mov
popf
xor
mov
ins
loope
movs
ficomp
push
cwde
cmp
mov
jne
mov
inc
cld
lahf
or
cmp
hlt
push
adc
imul
pop
(bad)
sti
and
gs
cmc
jmp
std
repz
jge
das
mov
jg
movs
or
jae
push
movs
push
scas
fistp
scas
not
mov
sahf
adc
stos
sbb
xchg
pop
ss
out
adc
sub
in
out
loop
adc
add
push
cmp
fidivr
jmp
fs
sbb
jno
stc
mov
xor
mov
in
lods
scas
stc
lds
fcmovnu
pop
push
ret
jno
ret
sub
mov
cmp
xor
jns
sub
mov
ss
fnstenv
repz
das
push
sub
adc
(bad)
iret
xchg
inc
shr
lods
jl
jbe
sub
retf
inc
pop
push
add
fwait
movs
xchg
sub
inc
pop
pop
fdiv
jbe
jno
(bad)
fs
ret
mov
mov
xchg
mov
pop
arpl
fidivr
js
or
ror
sub
push
addr16
mov
inc
push
dec
popf
and
and
inc
or
(bad)
mov
ret
cmp
sbb
ins
clc
mov
scas
lods
jns
pop
jle
adc
add
icebp
loop
(bad)
retf
nop
out
fisttp
fwait
ds
mov
mov
jbe
jmp
xor
push
xchg
xor
call
in
jp
fdivr
adc
push
mov
xchg
mov
scas
stos
pop
leave
adc
cld
ret
out
repz
lea
scas
jns
jmp
inc
push
sub
ss
fild
leave
inc
repnz
outs
(bad)
aad
mov
loope
jg
out
cmc
mov
xchg
adc
xor
pop
xor
mov
jno
dec
cld
cmp
(bad)
js
sub
pop
adc
and
mov
aad
pusha
lock
mov
or
jmp
mov
rcr
int3
and
dec
inc
mov
retf
adc
daa
pop
or
imul
loop
inc
push
in
addr16
push
sbb
retf
xor
add
test
adc
mov
xchg
mov
jnp
pop
cmp
or
sub
fisttp
out
adc
iret
lods
out
push
mov
jg
test
lea
leave
add
iret
fwait
inc
lods
cwde
(bad)
in
jno
cmps
push
xchg
jg
das
pop
xor
sti
imul
and
rol
mov
mov
add
pop
leave
and
mov
outs
mov
jmp
sub
ins
or
mov
ret
jge
xchg
dec
adc
add
mov
(bad)
jmp
fs
addr16
mov
int
jbe
and
mov
cmps
and
or
repnz
push
loop
dec
or
xlat
mul
loope
inc
ret
movs
(bad)
imul
mov
xchg
and
sbb
loope
in
adc
xor
dec
inc
jnp
js
mov
lea
lahf
push
iret
clc
ror
clc
sti
mov
rcl
push
loopne
mov
ret
loop
sbb
fisubr
pusha
pusha
(bad)
je
push
loopne
push
sbb
cmp
addr16
aam
pusha
sahf
mov
sub
out
push
(bad)
mov
sub
and
outs
idiv
mov
shl
mov
cwde
ins
jae
dec
cmps
xchg
mov
repnz
adc
push
sbb
adc
pop
lahf
fs
adc
mov
mov
pop
xor
push
movs
imul
fisttp
or
dec
ins
data16
or
div
inc
sbb
mov
bound
repnz
push
jnp
or
ret
mov
outs
add
jno
jge
arpl
addr16
or
repnz
add
frstor
pop
sub
pusha
sub
and
enter
add
in
xor
pop
and
mov
aas
sub
aam
push
pushf
(bad)
(bad)
jge
ins
adc
(bad)
lods
outs
movs
out
mov
pop
sbb
sbb
loopne
cwde
aaa
pop
ror
mov
xor
aad
lods
out
dec
repz
mov
add
jbe
dec
sbb
adc
xchg
lods
sbb
xor
fsub
in
leave
(bad)
in
fcomi
bound
fstp
jnp
sti
lods
pop
scas
fucom
cdq
cli
jne
sub
dec
dec
or
bound
add
push
(bad)
pop
(bad)
icebp
gs
std
dec
adc
(bad)
pop
or
outs
fsubr
je
push
pop
xchg
int3
sbb
nop
repz
pop
jmp
jg
pop
fnsave
movs
adc
mov
fwait
mov
loope
cmps
popf
inc
enter
lods
xchg
jecxz
jb
pop
sbb
cmp
lock
hlt
mov
shl
mov
or
dec
jnp
cmps
call
xchg
jae
sahf
pop
and
adc
dec
test
pop
mov
int
and
mov
mov
popf
leave
sbb
sub
call
sbb
fild
retf
cli
mov
xchg
push
imul
and
clc
xchg
js
lahf
dec
inc
(bad)
out
popa
call
add
in
loope
mov
iret
mov
push
in
cs
push
cmc
push
out
and
enter
add
out
mov
aaa
inc
sar
bound
pop
sti
jg
(bad)
lock
and
mov
ds
iret
cmp
out
jbe
xchg
sbb
aaa
retf
xchg
xchg
or
test
sub
test
clc
or
dec
push
sbb
pop
xor
arpl
push
add
sub
into
or
outs
loopne
fcomp
mov
xchg
pop
xor
jl
cs
rcr
mov
cmps
mov
neg
and
or
dec
sub
cdq
push
je
cmp
push
iret
jno
mov
call
dec
out
push
and
nop
pop
sub
ins
(bad)
les
fxch
fbld
jnp
push
lock
mov
aad
addr16
clc
fdivrp
arpl
loope
out
xchg
push
idiv
fwait
(bad)
vmovss
pushf
jl
std
inc
or
pop
push
neg
or
int
or
loopne
xchg
xor
xchg
mov
sub
fnstcw
dec
push
(bad)
inc
neg
pop
pusha
push
jbe
inc
imul
outs
mov
ficomp
cmps
outs
aad
sbb
movs
push
or
add
out
xor
loopne
icebp
das
xchg
lock
xor
in
mov
test
shl
mov
push
sar
fimul
inc
mov
scas
xor
aaa
inc
mov
and
in
xchg
cmp
xchg
icebp
pop
enter
add
cmps
ret
ss
aas
retf
or
stos
pop
inc
cs
cmp
mov
mov
sub
lods
sub
stc
ja
adc
xchg
fld
rcr
xor
aas
repnz
icebp
fistp
push
cmps
dec
es
add
jmp
add
outs
pop
xchg
sti
scas
mov
add
or
(bad)
ret
jg
xchg
es
lahf
mov
and
mov
mov
bound
pop
shl
sub
add
add
xor
sub
sub
add
dec
fs
cmps
out
inc
icebp
loop
inc
mov
dec
cmp
es
sub
mov
test
jnp
or
mov
les
(bad)
iret
pop
jae
cli
clc
ins
add
jne
test
pop
mov
daa
rcl
xor
clc
dec
ins
arpl
loop
push
retf
lods
jge
lods
out
repz
ds
gs
mov
sub
push
nop
pop
xor
inc
push
pop
lods
add
jle
in
xor
mov
xor
cmp
inc
mov
out
out
das
push
dec
xor
push
xchg
inc
nop
addr16
mov
adc
xlat
and
mov
punpcklbw
adc
or
push
stos
dec
push
outs
ret
aas
or
fsub
adc
addr16
cmps
inc
adc
lock
jl
inc
je
shl
ins
and
jbe
popa
mov
scas
adc
cmps
aad
fsubr
loope
cli
fcomp
psubusb
sub
aas
xchg
push
push
push
mov
xor
or
sbb
sbb
sub
cmp
cmp
test
adc
push
mov
push
or
ins
jb
mov
dec
adc
mov
jmp
js
mov
push
mov
lods
inc
add
js
movs
sbb
scas
or
imul
shl
push
scas
mov
push
(bad)
repnz
(bad)
xor
mov
xor
jp
jl
fisub
push
or
fucomp
loop
sar
sub
add
and
push
pop
scas
call
es
jg
test
adc
call
inc
sbb
mov
(bad)
imul
jb
jmp
rcr
cs
not
pop
mov
inc
mov
pop
adc
push
cmovae
sti
fidiv
out
js
cmps
inc
(bad)
movs
push
(bad)
jp
jnp
push
jmp
retf
pop
sbb
cmp
mov
and
sub
cmp
arpl
add
inc
in
mov
add
jmp
inc
ret
scas
xor
das
push
fst
mov
in
call
movs
xlat
ds
ins
(bad)
mov
repnz
aas
pusha
inc
jo
push
cmp
sub
ds
(bad)
test
inc
xchg
push
adc
popf
sub
cld
push
addr16
dec
push
cs
mov
cmp
fistp
xchg
aad
lock
dec
mov
push
jmp
(bad)
jmp
mov
mov
(bad)
pop
fwait
mov
pop
cmp
mov
and
mov
dec
adc
loop
loope
add
cmp
mov
dec
loopne
mov
mov
cmp
ja
mov
mov
cdq
das
fcomp
xchg
into
and
or
adc
adc
call
movs
leave
cmps
jne
mov
push
lods
loop
jo
sub
inc
xor
push
lea
sbb
inc
popa
imul
sbb
sbb
mov
or
mov
add
push
and
jle
push
or
jmp
test
loopne
js
mov
idiv
jae
xor
nop
(bad)
lods
retf
add
sbb
sbb
or
mov
lock
xchg
pop
push
lahf
sub
dec
out
(bad)
sbb
lods
add
mov
push
repnz
(bad)
fisub
outs
aaa
shl
add
xor
inc
push
xchg
add
xor
and
push
leave
rol
test
and
imul
adc
xchg
cld
pushf
mov
adc
and
mov
arpl
and
add
sbb
dec
mov
pop
pop
popf
dec
loopne
inc
retf
hlt
inc
pusha
sub
or
test
data16
test
push
inc
fcmovu
xchg
ficomp
cmp
xor
xor
inc
cwde
fidiv
adc
dec
scas
ret
movs
imul
mov
outs
push
sbb
dec
pop
stos
mov
lock
rol
stc
inc
ficom
jg
int3
mov
sub
and
outs
data16
inc
lods
iret
pop
xchg
jnp
fisttp
mov
scas
movs
out
icebp
leave
sbb
pushf
xor
sar
inc
fst
mov
mov
pop
jno
sub
ja
ret
into
scas
js
movs
jmp
int
(bad)
pop
pop
mov
cdq
setne
add
fdivr
mov
out
or
ins
ret
data16
push
push
arpl
adc
inc
test
(bad)
adc
hlt
pop
dec
out
shl
push
pop
sbb
xor
leave
cmp
cmps
idiv
sti
outs
out
adc
mov
pop
icebp
pop
pop
imul
jb
into
adc
cdq
add
fstp
sub
dec
aam
fdivr
jle
je
dec
imul
in
push
retf
jbe
sub
sbb
movs
xlat
ins
int3
hlt
adc
jae
xchg
adc
int
push
or
pushf
xchg
cmps
leave
jecxz
pop
js
aaa
mov
push
test
sbb
sub
jle
dec
scas
sub
(bad)
fnstenv
test
test
clc
pop
jmp
jge
enter
pop
pop
movs
aad
loop
pop
(bad)
ins
arpl
pop
add
lea
mov
(bad)
pop
push
adc
mov
pop
in
fwait
aam
ds
push
dec
jne
mov
or
(bad)
stos
mov
out
lock
mov
mov
mov
(bad)
cmp
adc
ins
cmp
mov
dec
stos
sbb
push
pop
jle
outs
adc
pop
mov
ds
lods
mov
pop
adc
mov
cli
test
sub
outs
cdq
popf
sti
or
in
and
sahf
pop
xor
std
dec
rcl
(bad)
nop
(bad)
mov
jo
jae
xor
div
mov
sbb
ds
dec
(bad)
clc
push
shr
mov
lea
(bad)
clc
add
mov
repnz
fstp
jae
push
arpl
mov
ror
call
shl
adc
hlt
adc
frstor
(bad)
scas
cmp
mov
push
cwde
stos
movs
push
das
inc
ror
ss
mov
icebp
ds
and
and
in
out
neg
sbb
sbb
lds
daa
jl
mov
dec
rcl
call
(bad)
and
in
(bad)
jg
or
jns
add
je
aaa
arpl
sub
pop
push
xchg
jmp
leave
dec
mov
cld
sahf
popa
inc
xchg
mov
adc
adc
jge
push
jmp
push
sbb
in
push
ins
mov
and
sub
fiadd
or
stos
push
add
aad
ins
jbe
lods
(bad)
mov
adc
push
into
test
xchg
push
ret
fld
call
push
sbb
add
out
dec
dec
cdq
pshufw
dec
imul
push
loopne
pop
stos
cwde
loop
ss
gs
dec
jae
pop
mov
mov
inc
sub
cmp
lock
xlat
lock
jle
sub
aad
and
addr16
test
push
jecxz
jp
pop
mov
movs
in
popa
iret
mov
scas
xor
pop
push
fwait
in
daa
mov
xor
dec
ds
push
push
dec
retf
push
mov
jae
mov
or
fistp
jmp
xor
mov
shl
mov
dec
mov
mov
adc
ins
sar
inc
enter
aaa
adc
into
sbb
mov
lahf
and
cmc
add
fsub
adc
mov
hlt
cdq
jne
sbb
xor
cmp
test
mov
lods
(bad)
into
dec
pusha
inc
js
inc
fist
push
in
je
test
pusha
stos
pop
push
in
movs
ficom
jmp
pop
dec
dec
sbb
mov
fadd
in
mov
out
movs
pusha
cmc
sub
shl
jl
scas
aaa
mov
ds
js
cmp
(bad)
rcr
out
cdq
jne
mov
out
hlt
loop
add
test
mov
in
movs
jb
out
xor
dec
mov
imul
aas
xor
jmp
xchg
scas
je
push
into
outs
mov
push
pop
or
je
les
pushf
push
add
and
jnp
xchg
xchg
popf
pop
call
adc
xchg
adc
push
bound
dec
and
mov
xchg
dec
retf
mov
shl
push
fcomp
popa
mov
xor
in
cs
cs
sbb
mov
ret
xchg
xor
sahf
or
adc
jbe
shl
stos
xor
add
(bad)
lds
sbb
push
xor
adc
test
xor
cmc
std
xchg
mov
mov
jbe
xor
add
sub
or
je
and
cs
xchg
pop
(bad)
cld
pop
ror
or
aad
adc
ret
retf
pop
and
aas
adc
push
js
test
dec
pop
adc
(bad)
mov
leave
mov
lds
and
add
xchg
in
scas
mov
ds
jmp
aam
sub
shr
jae
ficom
mov
xchg
sbb
adc
std
dec
into
gs
sub
pop
and
ret
cmc
loopne
mov
pusha
dec
or
fst
repz
jae
mov
mul
pop
lahf
sti
inc
(bad)
xor
imul
sbb
mov
rcr
mov
(bad)
rol
sbb
inc
pop
mov
dec
movs
je
test
push
xchg
cmp
push
and
or
cmps
inc
scas
ret
(bad)
xchg
push
push
xchg
inc
add
inc
ret
jne
mov
ficom
adc
cmps
out
jmp
shl
fild
int
jl
ds
mov
scas
ret
(bad)
push
pop
and
(bad)
fwait
add
movs
es
mov
add
xor
arpl
pop
ror
ror
aaa
cmc
xchg
cmp
xchg
push
iret
ret
ret
xor
jae
jo
cmc
fcomp
sar
jp
popa
popa
mov
sbb
xchg
call
or
(bad)
fldenv
cmps
or
popa
ret
cmc
scas
pop
popf
int3
cmc
ret
adc
pusha
sub
test
dec
inc
adc
mov
mov
pop
adc
mov
enter
ds
mov
jp
and
mov
add
stc
ret
pop
mov
dec
push
inc
xchg
lahf
inc
call
mov
ja
cmp
mov
and
dec
push
pusha
mov
pop
pop
leave
test
fcomp
mov
sub
cmps
add
cmp
adc
inc
jmp
test
arpl
cmc
push
int3
dec
scas
sub
scas
nop
mov
mov
(bad)
or
push
pop
(bad)
sub
push
adc
xchg
xlat
dec
cmps
shl
inc
push
mov
test
dec
sbb
lds
in
xor
clc
repnz
(bad)
aas
xor
mov
loope
loop
mov
into
rcr
cmp
loopne
push
mov
jae
ja
in
mov
ret
out
rcr
and
fwait
iret
xchg
dec
adc
jbe
cwde
or
jbe
push
xchg
daa
fsubr
adc
ret
add
int
xchg
xchg
out
dec
or
(bad)
xor
popf
(bad)
fsubr
and
out
cdq
cmp
inc
jb
loop
sub
lock
aas
aam
lea
mov
lea
rcl
dec
xchg
aaa
xchg
test
pop
cdq
xchg
xadd
pop
data16
fld
(bad)
loop
neg
dec
mov
pop
xor
lahf
jg
call
jo
lods
les
fidiv
rcl
pusha
mov
pop
cmp
cli
mov
out
xor
pop
and
into
mov
cmp
stc
call
push
cmc
sar
push
or
cmp
jp
or
shl
add
inc
aas
test
sub
pop
cmp
pushf
pop
es
adc
lock
jmp
in
mov
aad
loop
dec
sar
bound
stos
or
dec
jne
cmp
ficomp
sub
retf
mov
mov
sub
(bad)
cmp
pop
inc
xor
xchg
repnz
aad
push
pop
sahf
enter
push
out
or
push
push
leave
and
inc
cmc
neg
jno
or
mov
fnstenv
adc
cdq
call
repz
loope
shl
repz
out
rol
dec
jg
xor
mov
xchg
mov
or
cs
dec
stos
push
fdivr
test
sbb
xchg
mov
push
dec
xor
shl
xchg
rcl
pop
call
jle
xchg
push
daa
jecxz
iret
aas
xchg
ins
sbb
push
ret
fld
mov
mov
mov
retf
mov
mov
sub
jg
sti
cmp
mov
dec
mov
fisub
cmc
sub
gs
jmp
mov
fidivr
push
dec
sbb
popa
fs
push
cs
lds
push
in
aaa
call
cmp
cli
adc
cmp
sti
pop
push
into
dec
cdq
nop
ret
fiadd
sub
adc
pop
retf
(bad)
scas
or
enter
sub
es
out
in
mov
and
retf
mov
js
scas
lds
iret
push
cmp
jmp
jbe
mov
scas
mov
dec
lea
sbb
loopne
xor
push
inc
xchg
test
cs
icebp
lods
sub
xchg
xchg
xlat
mov
jge
inc
lds
ins
xchg
out
push
fnstenv
xor
and
fisub
inc
out
test
enter
fwait
sub
call
mov
iret
push
cmps
stos
mov
or
mov
jo
popa
add
out
div
and
push
sub
clc
loope
arpl
push
jmp
stos
scas
mov
imul
mov
cmp
and
or
push
into
outs
movs
dec
sbb
mov
shl
inc
cmps
jecxz
lea
outs
fucom
in
xchg
mov
pop
dec
sbb
aaa
fst
jb
call
or
icebp
cmp
fistp
and
loopne
fcom
jg
aas
xor
push
in
ret
fimul
int3
bound
sub
adc
call
je
ins
pop
in
mov
pop
dec
test
cmp
mov
pop
mov
mov
mov
in
inc
mov
adc
mov
inc
xchg
pop
mov
icebp
aad
ror
test
cmp
xor
out
pop
sti
jae
sub
fldcw
xchg
mov
aas
sbb
cli
sub
mov
xor
cmp
jecxz
or
cld
fild
pop
aam
jl
pop
sbb
mov
inc
mov
fdivp
test
dec
mov
adc
sbb
xchg
jmp
cwde
(bad)
sub
rcl
lock
add
inc
jp
push
mov
cli
out
cmps
in
daa
xchg
and
or
sahf
stos
jne
cs
ja
lahf
fsubr
pop
jmp
xchg
inc
cld
cs
or
mov
aam
pushf
cli
dec
retf
aas
xchg
adc
jns
dec
clc
adc
arpl
out
mov
inc
fcmovb
aas
pushw
dec
aaa
(bad)
mov
loope
cld
or
jns
mov
push
xchg
addr16
mov
aas
and
inc
mov
sub
jbe
jo
inc
or
ins
das
push
xchg
cmp
push
xchg
and
sbb
push
inc
ds
add
mov
and
xchg
ja
repnz
xchg
jnp
out
outs
mov
or
mov
jns
aaa
mov
rol
js
or
push
retf
or
iret
adc
pop
stos
push
xor
jmp
pop
xor
std
sub
int3
cdq
popa
aad
pop
inc
mov
je
imul
mov
xchg
jge
dec
ror
pop
and
pop
push
fadd
je
cmc
dec
jle
and
cmp
jecxz
dec
pop
xchg
sub
gs
fdivr
fcomi
(bad)
sbb
loopne
or
loop
ret
xor
mov
and
dec
addr16
inc
inc
(bad)
pop
jecxz
sbb
sub
in
sahf
bound
cmc
cmp
cmp
jae
or
fiadd
icebp
nop
jmp
pop
popf
push
nop
test
dec
call
retf
(bad)
loopne
jbe
lods
int
repnz
(bad)
call
sub
mov
push
clc
adc
mov
sbb
sub
pushf
or
retf
cmp
inc
push
mov
and
or
mov
pop
xchg
inc
imul
int
repz
inc
inc
inc
shr
(bad)
sub
mov
or
inc
aam
lods
inc
sbb
mov
cmps
imul
jae
cmps
fist
ja
js
outs
popf
jne
add
push
mov
push
loope
aaa
jae
leave
dec
repz
fisubr
xchg
dec
adc
std
int3
mov
mov
push
xor
in
push
sub
inc
add
cwde
inc
push
pop
cld
cmp
popa
loopne
call
fisubr
stos
lock
inc
xor
retf
mov
(bad)
movs
loopne
push
mov
or
inc
mov
sub
xchg
fucomp
sti
shl
imul
push
test
push
pop
jecxz
in
jae
sbb
cmp
sub
not
add
imul
(bad)
mov
mov
dec
and
std
pop
fmulp
inc
jbe
pop
mov
sub
ins
iret
shl
push
xor
xchg
pushf
cli
(bad)
fs
es
sbb
sahf
or
or
rcl
outs
fnstcw
sbb
pop
nop
xchg
iret
jecxz
and
inc
xchg
adc
ja
mov
pop
out
outs
xor
jl
hlt
push
bound
je
cld
cmps
call
push
iret
mov
push
not
fldcw
xor
or
fisubr
dec
jmp
adc
js
jp
add
(bad)
scas
nop
in
outs
(bad)
jmp
outs
inc
loopne
adc
mov
je
out
jmp
fcom
xchg
cs
daa
jmp
(bad)
out
sar
iret
mov
inc
(bad)
out
(bad)
ficom
sbb
or
enter
sbb
ret
mov
pop
loopne
lahf
inc
or
inc
jmp
pop
movs
jb
retf
or
call
pushf
mov
repnz
mov
cmp
stos
add
cmps
imul
iret
mov
mov
sub
add
mov
xor
lods
call
lahf
or
dec
ds
lock
shl
repnz
push
xchg
into
repnz
cld
ret
hlt
fsubrp
dec
adc
into
or
(bad)
jbe
cmp
mov
xchg
cmps
pusha
sbb
call
adc
fucom
push
aad
les
dec
xor
fist
jbe
inc
fs
mov
inc
jle
idiv
xlat
pushf
and
sub
push
syscall
fdivr
arpl
sub
inc
clc
out
dec
jnp
adc
repz
ss
xchg
icebp
iret
add
add
mov
(bad)
int3
rcl
outs
mov
jne
in
inc
adc
jno
imul
retf
xchg
lods
fbstp
sahf
mov
sub
pushf
cmp
(bad)
jae
das
jg
daa
fild
out
rcr
mov
sti
mov
xor
mov
cmps
cs
aaa
jae
idiv
adc
das
arpl
ss
jmp
pop
push
call
inc
in
mov
dec
shl
pop
hlt
push
je
jmp
push
cmp
pop
fyl2x
int3
out
mov
ds
mov
fistp
inc
xlat
pushf
pop
nop
adc
add
int
adc
je
sbb
lods
ins
jo
or
sub
push
adc
jnp
xlat
ins
pop
(bad)
add
xchg
js
sbb
outs
jbe
or
xchg
imul
mov
push
fiadd
das
or
call
cmp
call
sbb
ret
daa
xor
js
jnp
or
add
cli
dec
fist
ds
ret
lahf
jbe
mov
xor
imul
fiadd
pop
sti
inc
jns
ficom
fstp
pop
cmps
mov
js
lods
push
imul
mov
or
popf
dec
mov
adc
sub
sub
mov
icebp
jp
xchg
or
daa
dec
sbb
and
ds
xlat
dec
sar
inc
loope
fwait
scas
mov
out
cmp
out
mov
sub
test
arpl
fmul
mov
adc
push
xchg
pushf
or
into
xchg
mov
mov
push
jb
mov
test
mov
ins
adc
lea
pop
movs
mov
adc
es
jnp
adc
push
xchg
inc
repz
and
pop
test
int3
push
dec
mov
addr16
sti
outs
jae
adc
stos
(bad)
iret
call
add
push
jbe
dec
dec
mov
scas
out
add
cmps
retf
mov
jns
sti
xor
inc
xchg
retf
nop
xchg
iret
add
out
retf
adc
shr
in
fadd
scas
dec
dec
retf
ret
xchg
sbb
and
sub
mov
mov
loopne
repz
js
retf
and
mov
fwait
retf
imul
mov
test
xlat
sub
not
or
pop
add
dec
sbb
fwait
pop
mov
or
push
xchg
dec
mov
(bad)
leave
cmp
xchg
lahf
mov
pop
mov
test
push
add
sahf
or
in
fistp
sbb
loopne
ret
imul
call
in
mov
or
mov
xchg
add
rcl
sbb
out
sub
(bad)
pop
sbb
sbb
xchg
repz
movs
or
into
push
addr16
imul
sbb
imul
jb
sti
and
stos
mov
mov
xor
and
pop
je
imul
push
dec
sub
shl
out
mov
mov
fs
xchg
out
cdq
add
xchg
int
mov
push
mov
jns
stc
call
faddp
mov
popf
add
pop
imul
jns
add
cli
mov
fstp
dec
in
cmp
push
inc
dec
cmp
cmp
mov
sub
in
movs
jge
xor
inc
mov
mov
adc
stos
ja
nop
mov
xchg
mov
xchg
call
dec
add
jne
fstp
xlat
mov
xchg
cmp
cmps
fnstenv
mov
test
xor
mov
dec
sar
inc
je
inc
mov
inc
adc
push
not
(bad)
sti
xchg
aam
sub
lock
ss
adc
dec
outs
and
and
daa
cmp
pop
pop
mov
bound
jmp
stos
jae
out
jge
or
inc
leave
and
adc
je
neg
lods
ins
iret
ins
jo
mov
test
xor
cmp
es
scas
es
fisttp
cmp
fucomi
or
adc
mov
out
or
stc
jmp
aad
mov
movs
cmps
inc
and
xor
in
jecxz
xchg
jo
mov
daa
push
popf
xchg
sbb
jae
inc
fcom
mov
mov
cmp
test
test
sub
div
jne
repz
xchg
call
adc
mov
jle
ins
push
adc
std
fwait
push
xchg
sub
xlat
push
or
inc
sbb
fs
adc
mov
push
or
fstp
push
int3
push
push
jg
jmp
lea
(bad)
mov
inc
outs
inc
adc
mov
push
adc
jl
rcr
leave
and
(bad)
out
lds
sahf
cmc
stos
cmp
and
imul
ret
xchg
add
jg
pop
call
xchg
push
loope
sub
add
xor
cmp
and
xor
imul
in
loope
mov
stos
fcomp
jg
sub
push
and
sub
repnz
and
push
(bad)
mov
adc
xchg
jmp
sahf
shr
lods
mov
imul
push
inc
addr16
in
or
jnp
sub
sbb
out
clc
xor
add
popa
imul
ds
lock
xchg
xchg
jmp
mov
pop
sar
add
inc
adc
repz
xor
(bad)
cmps
xor
into
test
out
mov
mov
daa
pop
mov
adc
rcr
mov
pop
rcl
jmp
and
mov
pop
mov
sbb
shl
mov
mov
push
xor
imul
(bad)
jne
sbb
lahf
jge
lods
popf
(bad)
(bad)
cmp
push
mov
pop
(bad)
xchg
(bad)
mov
pop
adc
pop
shl
ss
test
(bad)
fdivr
xchg
jl
mov
fcmovnb
mov
cmp
sbb
and
outs
mov
(bad)
dec
jp
fild
aam
jnp
retf
repz
cmp
test
and
stc
cdq
sbb
pop
je
lea
stos
xor
cmp
out
pop
mov
jle
mov
sbb
xor
dec
jmp
or
test
mov
mov
lods
ss
sbb
dec
pop
shl
out
mov
push
lahf
dec
fbstp
jmp
js
cli
push
das
push
dec
enter
or
jge
(bad)
mov
adc
add
xchg
imul
bound
ret
sbb
into
add
icebp
xchg
cs
scas
bound
jmp
scas
call
or
ret
xor
or
jmp
adc
push
add
jge
adc
mov
clc
add
mov
out
sub
movs
pop
sbb
aas
mov
xchg
xor
loope
mov
pop
xor
fist
pop
imul
nop
ret
out
mov
sti
je
cmp
dec
cmc
js
cwde
cdq
sub
out
sbb
(bad)
or
mov
mov
mov
shl
jle
xlat
test
mov
dec
call
mov
scas
and
xchg
jmp
das
fistp
daa
mov
or
sahf
in
ret
(bad)
push
jo
loop
adc
ins
push
inc
mov
fst
sub
xor
arpl
jecxz
add
scas
movs
js
push
mov
fld
shl
outs
jno
jl
adc
or
lahf
test
pushf
pop
lock
push
gs
inc
or
es
jp
xor
add
cs
jge
jle
retf
fist
shl
mov
mov
std
cmp
xchg
es
loope
dec
dec
push
inc
sub
bswap
and
inc
xchg
mov
out
cvtdq2ps
and
call
cs
das
cld
dec
xchg
dec
adc
sub
repnz
test
jle
mov
ret
(bad)
int
add
mov
jecxz
stos
retf
add
cmc
cli
mov
int
and
add
popf
pop
mov
out
mov
mov
fbld
(bad)
ret
out
and
iret
mov
dec
sbb
rcl
xor
sub
push
jae
mov
xchg
inc
sub
retf
(bad)
aaa
jg
pop
dec
mov
arpl
in
xor
data16
xchg
jle
mov
dec
sbb
and
lods
jg
loopne
fnstenv
adc
lea
fnsave
(bad)
imul
popf
add
dec
sbb
jecxz
nop
xchg
jne
popa
hlt
pushf
xchg
cdq
add
or
push
inc
lds
mov
jecxz
aam
sbb
mov
scas
adc
stos
xchg
push
ds
push
jmp
adc
jp
mov
jg
loopne
mov
push
daa
mov
das
aad
sub
gs
call
push
mov
mov
stos
or
pop
jb
test
in
imul
rcl
data16
adc
cmps
fs
imul
das
sti
jb
pop
popa
mov
adc
sbb
inc
sbb
mov
repnz
dec
test
retf
ret
ss
gs
es
push
mov
into
dec
adc
inc
jbe
movs
dec
dec
les
jbe
sub
pop
jnp
loope
cmps
push
push
inc
aas
(bad)
sbb
fwait
test
retf
jbe
les
sbb
(bad)
lahf
loop
nop
dec
in
jb
xchg
lods
jnp
cmps
in
add
movs
cli
jge
adc
(bad)
(bad)
scas
(bad)
stos
fwait
and
mov
imul
xor
popa
push
mov
into
mov
dec
std
add
sub
and
dec
inc
adc
sbb
cmp
push
cld
xor
push
addr16
lahf
out
mov
inc
and
mov
push
inc
push
sub
sahf
mov
in
jge
pushf
outs
pop
cmc
dec
sbb
ins
int
cmp
je
add
ror
adc
popa
xchg
mov
fdiv
xchg
dec
jl
push
sub
iret
lods
out
xor
pop
in
xchg
sbb
retf
inc
add
and
cli
gs
adc
test
pop
js
not
iret
lods
rcr
pop
pusha
or
shr
mov
into
add
jnp
dec
sbb
stos
repnz
cmps
mov
xor
je
mov
pop
cmp
cmp
xor
(bad)
sub
xor
test
aam
and
cli
cmc
ror
xchg
pop
and
nop
push
jge
xor
push
add
(bad)
icebp
push
scas
pop
(bad)
jo
xor
call
out
sub
rol
(bad)
into
scas
mov
aad
and
daa
dec
add
sub
fisub
push
adc
outs
sbb
pop
lock
repz
and
ret
or
cwde
push
cmp
(bad)
mov
jl
imul
pop
dec
jae
pop
mov
loope
ds
scas
lds
shl
(bad)
jle
sbb
add
test
push
mov
cwde
fwait
rol
sbb
jo
cdq
adc
sbb
sub
fcmovu
(bad)
jp
mov
mov
je
cmp
mov
xchg
pusha
arpl
imul
cmps
mov
xor
retf
mov
cli
xlat
enter
pop
test
lahf
in
jge
xor
and
jmp
mov
cmp
addr16
pusha
imul
fnstsw
mov
sub
xchg
jl
ror
aaa
inc
xor
mov
mov
rcl
add
and
out
sti
and
int3
push
(bad)
sub
pop
push
fsub
and
sbb
(bad)
cwde
pop
xchg
ds
push
xchg
in
lds
cbw
std
jns
inc
push
retf
jno
mov
sub
leave
inc
cmp
dec
imul
data16
dec
cmp
or
jg
or
add
(bad)
dec
fnsave
bound
or
and
pop
sub
sbb
xchg
and
jb
adc
and
add
retf
pop
cmp
add
push
pop
ja
inc
clc
cdq
div
shl
mov
dec
jbe
loopne
sbb
cmp
pop
aaa
bound
mov
pop
in
mov
push
data16
std
sbb
test
ja
stos
nop
into
mov
xchg
mov
fs
test
imul
xor
or
sti
mov
ja
test
lods
loope
repz
call
daa
xchg
not
lock
pop
pusha
sahf
add
iret
mov
sub
arpl
jne
sbb
ja
movs
out
sub
mov
cmp
cmc
mov
add
jg
mov
ins
arpl
ret
mov
and
xchg
add
cmp
in
push
mov
cmps
pop
cmp
jl
jns
ins
scas
jns
mov
xor
sti
iret
xchg
or
cdq
lahf
mov
pop
xor
test
sub
enter
push
pop
mov
push
(bad)
cmc
fidivr
mov
sti
sahf
div
pop
ss
sbb
dec
cmp
push
stc
push
dec
inc
test
sar
or
sub
in
cmp
fild
loope
mov
(bad)
fwait
add
mov
jg
push
out
fisubr
push
xchg
outs
xor
pop
pusha
lods
call
test
or
push
wbinvd
mov
jge
loop
and
repnz
cmps
iret
adc
xchg
jmp
mov
add
popf
mov
fldcw
lahf
mov
es
push
sbb
call
or
jl
(bad)
cld
mov
mov
add
mov
loope
aad
pop
div
data16
call
pushf
sub
mov
fwait
mov
loopne
movs
sti
mov
adc
jg
pop
push
cmc
ds
bound
retf
sbb
stos
cmp
(bad)
imul
ja
in
mov
cmp
sbb
dec
xchg
icebp
cmp
adc
pushf
movs
daa
outs
mov
pushf
and
push
push
(bad)
aam
jns
add
fdivr
mov
retf
in
jmp
(bad)
fcomp
jle
mov
jg
sbb
adc
jmp
mov
jne
mov
les
sar
popf
stc
sbb
push
jne
call
adc
outs
or
leave
add
ja
push
dec
aas
sbb
cs
dec
pop
pop
mov
fdiv
test
(bad)
sahf
inc
push
and
imul
in
mov
or
add
sub
loop
jae
cmp
in
inc
mov
xchg
pusha
imul
sbb
or
pop
xor
lahf
xchg
sub
mov
inc
mov
inc
xchg
cmp
ds
pop
call
out
mov
or
mov
adc
shr
arpl
jge
mov
sbb
mov
xchg
addr16
std
cs
jecxz
cli
xor
shl
es
daa
adc
pop
and
pop
push
pop
(bad)
mov
dec
adc
jle
aaa
and
js
and
mov
push
pusha
mov
in
test
dec
movs
jle
loope
sbb
push
test
push
or
xchg
add
sti
sub
mov
je
or
inc
pushf
lahf
out
cmp
mov
jno
xor
sbb
mov
into
mov
cmps
xchg
xchg
aad
stos
sbb
pusha
cmps
loopne
push
push
xchg
dec
jae
pop
jnp
mov
sub
out
sar
pop
in
xchg
dec
pusha
adc
sub
cmp
clc
sbb
sahf
data16
push
leave
sbb
mov
gs
or
jg
add
sub
xchg
lock
mov
inc
cld
mov
push
adc
xor
sbb
cld
stc
call
movs
adc
mov
scas
sahf
aam
or
rol
iret
inc
jmp
mov
idiv
sahf
mov
pop
lea
jnp
push
add
xor
inc
(bad)
and
push
or
cmp
sub
daa
sbb
(bad)
jnp
pop
push
jnp
(bad)
rol
test
mov
jne
aaa
and
mov
sahf
fs
sub
adc
(bad)
mov
jmp
jmp
and
ss
cmps
sub
sar
fwait
mov
jo
adc
pop
fwait
dec
cmp
add
fcom
push
pop
sub
jo
out
mul
or
dec
xor
(bad)
retf
mov
mov
js
addr16
scas
xor
pop
and
std
dec
outs
mov
push
inc
push
imul
lods
scas
int
jb
test
pop
xor
add
loopne
push
xchg
ja
sbb
and
and
pop
leave
push
sbb
push
dec
test
inc
inc
iret
jp
dec
repz
cmp
add
stos
push
and
(bad)
in
in
mov
xor
mov
shl
ret
pop
jno
or
adc
jge
icebp
mov
push
cmc
push
lods
movs
addr16
in
dec
in
push
lea
cli
repnz
dec
popf
jg
lods
jo
mov
cmc
ds
mov
out
and
cmps
mov
lods
push
(bad)
sbb
pop
test
hlt
push
(bad)
pop
push
adc
sub
or
inc
int3
jmp
into
fisttp
movs
mov
xor
cld
int
sbb
fisubr
pusha
mov
xor
das
push
push
mov
xor
rol
inc
mov
out
cmp
test
jne
pop
repnz
jmp
cs
scas
mov
ja
mov
dec
rcr
gs
xlat
gs
aam
dec
pop
sahf
dec
fdivr
mov
pop
stos
test
pusha
inc
retf
aam
in
in
ja
stos
mov
sub
fwait
shl
lea
add
jns
lods
int
or
and
in
in
nop
test
mov
or
stc
push
cmp
lods
stos
sub
enter
(bad)
mov
movs
inc
pop
adc
push
mov
enter
add
cmp
aaa
sbb
push
outs
xchg
mov
push
test
or
jo
inc
pop
call
aas
add
sbb
xor
cli
neg
leave
repz
mov
and
test
xchg
dec
sub
push
das
daa
add
ror
add
inc
push
push
not
push
mov
mov
xchg
xchg
fcmovb
pshufw
xchg
push
gs
call
call
movs
sbb
push
or
shl
retf
jl
push
shr
mov
add
aam
in
add
icebp
xor
adc
mov
mov
push
popf
rol
scas
fimul
sub
push
push
lea
sbb
cdq
xchg
xor
lods
xchg
or
sub
pop
int3
xchg
lods
xor
cdq
out
ror
(bad)
std
popa
push
(bad)
retf
sbb
mov
xchg
mov
(bad)
xlat
and
adc
mov
rcr
pop
out
les
daa
mov
pop
shl
loope
aas
lahf
push
sub
shr
pop
xchg
pop
cdq
mov
int
sub
mov
fimul
ss
shr
in
dec
sti
push
xchg
cmp
xchg
xchg
test
push
iret
jecxz
or
(bad)
jp
cmovge
lods
push
jmp
dec
fdivr
pop
jae
adc
retf
retf
ds
rol
sbb
dec
cmp
and
(bad)
movs
mov
rcr
and
fst
push
sub
sbb
cmp
cmp
push
mov
cld
dec
ins
push
cmps
mov
cmp
xchg
fisub
and
(bad)
cmovl
jae
jg
pop
dec
hlt
or
jge
and
mov
xor
fsub
dec
(bad)
addr16
iret
sub
pusha
retf
cdq
jecxz
mov
pop
(bad)
icebp
xor
sbb
add
fldcw
push
and
sahf
xor
mov
sbb
cmp
pop
rol
pop
aaa
or
cmp
xchg
sub
xor
imul
pusha
movs
inc
cmc
sahf
pop
ret
jb
loopne
retf
sti
jmp
xor
mov
call
cmp
push
mov
in
mov
addr16
cmc
push
(bad)
ja
lahf
dec
cmps
inc
xor
sub
xlat
lods
in
int3
(bad)
out
pop
out
adc
fcom
xchg
jbe
add
or
or
inc
pop
add
or
jae
inc
lods
out
ins
pushf
mov
mov
lods
mov
mov
test
jb
mov
dec
push
or
ss
jo
cmc
retf
movs
outs
(bad)
mov
jmp
or
(bad)
psubusw
xchg
popa
adc
ds
xchg
clc
out
in
popa
mov
mov
push
out
out
pop
imul
xchg
push
sar
xchg
fist
xchg
xchg
xor
clc
sbb
arpl
sbb
or
add
xor
es
out
cmps
mov
ja
movs
stc
das
int3
lods
xor
movs
xchg
mov
cmp
pop
enter
test
daa
pop
repnz
popf
xchg
jb
jne
shl
(bad)
sub
gs
fild
les
xchg
and
xchg
jo
sub
std
(bad)
pop
jmp
out
dec
pop
inc
cmps
cmp
pop
xchg
inc
mov
or
shr
mov
mov
scas
movs
out
in
adc
push
das
dec
repnz
popf
and
les
scas
in
call
sbb
clc
mov
outs
sub
shr
push
dec
mov
adc
and
ret
xchg
inc
mov
push
in
mov
bound
add
ins
dec
popa
push
retf
add
mov
mov
retf
out
call
or
clc
mov
popf
mov
dec
mov
mov
inc
adc
mov
xchg
loop
pusha
or
adc
dec
xor
and
sar
leave
xor
pop
xor
sahf
ja
pop
mov
pop
sti
sbb
fcomp
les
push
dec
lahf
icebp
idiv
jne
lock
fcomp
mov
cmp
dec
fucom
jno
nop
jle
jnp
add
in
hlt
add
mov
pop
icebp
bound
push
movs
(bad)
das
test
pop
inc
add
dec
sti
inc
xchg
mov
hlt
daa
call
inc
cli
iret
jne
test
loopne
test
cmp
aaa
dec
iret
xchg
sbb
retf
push
jle
mov
dec
arpl
xchg
xchg
xor
fnsetpm(287
test
or
pop
test
mov
loop
and
popf
les
inc
mov
cmp
cwde
enter
or
ficomp
mov
ficom
xchg
xor
cld
xchg
cdq
or
inc
retf
sub
cmp
fwait
jo
aam
or
into
adc
mov
sub
inc
push
push
icebp
lods
clc
pop
retf
call
cld
pop
cmp
inc
dec
bound
xchg
pop
scas
in
call
jb
pushf
cld
add
ret
cmp
pop
xchg
movs
mov
pop
mov
and
in
sub
ss
in
mov
push
lods
push
jnp
fnstsw
add
or
fild
mov
adc
push
cmc
add
jne
dec
add
daa
stos
jno
fmulp
repz
xor
sub
xchg
mov
xor
loopne
mov
push
inc
xor
ja
fisubr
sub
push
jb
pop
cmp
rcr
es
xchg
stos
cwde
loopne
sti
rol
daa
pop
stos
(bad)
jne
fidiv
es
pop
in
mov
mov
adc
cmps
xor
mov
and
rcl
push
call
or
cs
ucomiss
aad
fdiv
loop
cmp
fild
test
or
hlt
or
jle
(bad)
pop
out
add
into
rcr
fisub
or
mov
push
sub
sub
cmp
addr16
add
ret
ficomp
cmp
call
mov
cmp
lea
dec
out
int3
lock
xchg
iret
sub
adc
jb
sub
scas
out
fnstcw
push
jbe
in
xchg
ret
addr16
out
dec
xlat
push
adc
stos
push
into
xor
scas
mov
call
pop
sub
sbb
cdq
in
mov
shl
cmc
lock
cmp
nop
push
dec
xchg
loope
test
rcr
push
aas
mov
lea
mov
jb
xlat
shl
retf
xchg
xor
lea
pop
push
xchg
pop
pop
add
popa
jno
retf
out
cmc
in
inc
inc
je
xchg
lea
mov
jb
ins
jmp
sub
add
fs
add
mov
cmp
lea
mov
mov
es
call
cwde
sbb
ja
dec
movs
mov
scas
bound
pop
aam
es
dec
and
aad
lods
dec
ror
fbld
xor
add
(bad)
and
outs
cmp
in
mov
or
add
jg
sub
xchg
aam
out
push
mov
xchg
sub
xor
pop
inc
mov
dec
pop
xchg
or
and
or
not
adc
mov
add
ins
push
dec
inc
push
sub
fwait
push
loop
jae
and
cmp
(bad)
(bad)
mov
test
sti
cmc
repnz
hlt
add
dec
repnz
aaa
inc
jns
and
adc
in
mov
push
adc
xchg
jmp
mov
pop
mov
cmps
and
retf
bound
sbb
add
cmp
into
call
push
mul
lods
sar
ins
inc
mov
aad
lahf
push
in
sub
loop
sub
out
mov
stc
iret
mov
push
scas
mov
jecxz
push
clc
ror
fcomip
movs
and
push
daa
and
inc
inc
xchg
dec
xor
stos
mov
daa
and
add
or
adc
cmps
mov
push
mov
lods
xor
fs
mov
or
inc
loopne
jo
test
gs
pop
inc
aad
das
sbb
shl
pop
push
xlat
into
jns
test
in
dec
fadd
sti
stc
jmp
dec
jp
lock
aad
pop
stos
xor
or
test
jo
adc
or
jmp
cmps
ss
cmp
fidivr
or
ror
lods
or
mov
xchg
add
scas
das
pop
xchg
jns
sti
pop
dec
push
mov
or
shr
mov
inc
scas
and
dec
xchg
jne
pop
fnstcw
rol
mov
push
stc
ins
gs
in
push
mov
xor
bnd
loopne
xlat
add
jb
retf
aas
fidiv
cs
(bad)
popa
ds
sub
into
outs
mov
mov
inc
sub
fisub
or
stos
gs
sub
jmp
and
sub
outs
mov
lahf
arpl
push
ins
cmp
sbb
pop
(bad)
mov
retf
test
fcom
and
pop
ins
or
imul
adc
mov
push
call
mov
xchg
mov
(bad)
hlt
jmp
dec
(bad)
mov
mov
lea
push
and
dec
pop
mov
dec
push
enter
ret
adc
sub
pop
inc
test
adc
add
adc
sub
or
mov
fwait
sbb
imul
shl
mov
into
addr16
xchg
cdq
loope
in
fsub
das
movs
inc
(bad)
repnz
fcomp
test
(bad)
fiadd
leave
daa
xor
dec
mov
fucom
rsm
fnsave
cld
leave
cld
je
fidivr
lods
jp
popa
sbb
ja
sbb
nop
outs
pop
rcr
fistp
push
jp
mov
dec
hlt
dec
jge
push
fsub
mov
jne
mov
sub
jno
or
call
mov
outs
cli
xchg
sbb
shr
push
cmps
push
mov
push
xchg
add
nop
cmp
mov
call
pop
sub
repz
fidiv
nop
call
xchg
mov
pop
and
das
das
and
fdiv
retf
or
aad
mov
mov
iret
push
mov
(bad)
jno
sub
sub
pop
jecxz
add
xchg
sbb
pop
add
dec
xor
pop
mov
xor
pop
call
loope
mov
pop
and
lock
sub
outs
(bad)
in
jns
iret
shl
fist
mov
aam
int3
outs
jnp
aaa
stc
lock
sahf
cmp
dec
sbb
pusha
push
dec
shl
push
push
jbe
repz
in
xchg
mov
popf
cli
jecxz
inc
enter
push
retf
popa
jecxz
repz
out
dec
add
sub
sti
out
push
pop
repnz
push
xchg
(bad)
loopne
mov
xor
push
cmp
imul
xchg
and
cmp
and
sbb
mov
dec
and
and
push
lock
bound
push
je
pop
pop
stos
lea
jnp
pop
jg
pop
mov
popa
mov
ud2
push
push
cs
xchg
(bad)
retf
mov
(bad)
adc
mov
sti
(bad)
xor
cwde
cmp
sub
aas
inc
xchg
push
mov
pop
adc
inc
mov
adc
or
fdiv
cmp
leave
xor
call
fist
and
add
out
loopne
cld
cli
nop
idiv
cmp
retf
mov
jne
call
outs
mov
add
mov
xor
push
jns
fsub
or
mov
sub
dec
ror
je
cmp
dec
pop
shl
call
hlt
cmp
pop
pause
cmp
in
cmp
inc
and
or
das
mov
add
xor
mov
inc
sub
add
shl
and
mov
in
movnti
pop
mov
mov
aaa
push
push
jmp
sbb
inc
cmps
rol
dec
push
sub
jbe
sti
loop
mov
scas
adc
and
pop
mov
and
repz
or
cmps
daa
mov
(bad)
je
sbb
imul
aad
jno
jl
mov
icebp
cdq
jg
dec
mov
jge
adc
retf
data16
(bad)
and
xchg
fcomp
test
stos
out
sti
xchg
fadd
test
add
mov
call
adc
jmp
mov
or
outs
out
shr
in
fsubr
cld
loop
(bad)
pop
pop
pop
mov
sbb
sub
inc
(bad)
retf
or
push
hlt
add
arpl
sti
call
mov
pop
dec
mov
std
and
or
retf
xlat
jne
mov
sbb
mov
xor
add
mov
and
imul
and
sub
inc
loop
sub
sbb
dec
cli
(bad)
lods
fnstsw
cwde
cmp
cld
or
inc
mov
ins
inc
in
fmul
sar
retf
imul
sub
neg
add
mov
mov
mov
sub
cli
int
movs
ret
adc
sbb
sub
mov
jns
test
idiv
les
push
mov
dec
inc
mov
push
into
pushf
addr16
repnz
push
mov
cmp
repz
pop
in
mov
loopne
mov
sub
push
lods
aam
pop
scas
mov
(bad)
mov
sbb
je
push
scas
scas
sub
mov
add
shr
or
cmp
mov
fcmovu
cmps
push
mov
movs
ret
xor
aas
add
jl
(bad)
xchg
cmp
xor
xchg
int
push
dec
push
outs
push
fiadd
jp
(bad)
jl
mov
outs
jb
fnstenv
sub
cli
push
cwde
cmp
jns
pop
bound
lahf
out
mov
xchg
mov
sbb
mov
js
xchg
push
stos
push
bound
imul
aaa
out
cmp
fstp
data16
push
mov
sub
xchg
add
push
sbb
jnp
mov
cmp
xchg
(bad)
xchg
mov
and
push
sbb
pop
push
and
sbb
fcom
mov
and
mov
pop
mov
mov
dec
fisub
aad
outs
sub
lea
inc
xor
jle
and
add
ds
stos
int
(bad)
movs
fcmovb
or
xchg
pop
xchg
xor
fwait
add
cmp
adc
adc
int3
and
inc
dec
and
imul
mov
cld
nop
sub
jno
sub
push
ds
enter
jp
shl
adc
nop
test
out
test
sbb
and
fsubr
imul
pop
inc
retf
pop
xchg
mov
push
jmp
cmp
mov
mov
(bad)
adc
aad
stos
dec
dec
jg
repz
xchg
pusha
cmp
mov
or
xor
push
xchg
leave
enter
movs
xor
mov
outs
push
retf
ins
push
jbe
dec
or
movs
icebp
loope
movs
hlt
push
xchg
into
push
out
loope
add
fsubrp
xchg
adc
push
pop
fs
jecxz
cmp
jge
cld
xchg
xor
fdivr
push
aaa
pop
(bad)
and
stos
mov
aad
shl
dec
aam
xor
push
retf
mov
pop
mov
retf
sbb
aas
xchg
mov
or
add
aad
out
jno
fstp
fsub
leave
xor
in
mov
int
or
loopne
mov
test
jle
enter
scas
lods
daa
pop
inc
sub
push
sub
jmp
in
xchg
aad
movs
and
nop
arpl
fisttp
fbld
jns
ds
mov
xchg
add
or
lods
xchg
sub
jnp
call
push
int
push
sbb
fs
ins
pop
push
inc
(bad)
std
add
fmul
repz
xchg
push
sub
jnp
xchg
dec
inc
mov
xchg
adc
sbb
jne
fs
mov
aaa
pop
xchg
ror
mov
ins
xchg
scas
pop
jg
shl
jo
test
mov
(bad)
and
out
stos
cmp
cmps
(bad)
inc
sub
xlat
in
or
push
je
and
lea
jbe
dec
mov
mov
imul
imul
adc
push
jecxz
cmp
out
sub
fbstp
cmc
rcr
jbe
xchg
ds
and
ins
(bad)
mov
xor
lahf
cmp
sub
sahf
pop
sbb
and
sub
out
je
clc
or
pop
adc
xchg
sub
adc
popa
add
mov
or
ficom
test
pop
stos
out
cmps
xor
dec
ins
sub
and
aas
fsubp
fadd
out
out
and
call
inc
les
shl
xchg
shl
jge
shl
int
jl
dec
pop
jecxz
test
out
add
jnp
sahf
sti
or
std
outs
out
and
adc
sub
cmp
lea
push
das
dec
mov
lea
int
pop
cmp
jmp
push
jl
mov
mov
add
adc
adc
mov
ja
mov
ins
pop
outs
cmp
ss
repnz
loopne
jg
scas
les
jmp
fst
dec
(bad)
out
lahf
test
push
push
push
es
sub
loop
adc
lods
cmp
lds
sbb
repz
cmp
popf
les
fnstcw
push
int
xchg
inc
ja
je
xchg
sbb
lahf
pop
mov
mov
xor
psraw
cmp
jbe
xchg
sbb
cmp
idiv
push
mov
cmp
inc
enter
hlt
imul
movs
dec
mov
and
cmp
popf
jnp
add
adc
fld
lahf
inc
xchg
movs
push
xchg
jp
mov
jae
push
cmp
std
fwait
xor
jmp
or
push
leave
add
test
inc
cmp
in
sub
into
mov
sbb
outs
mov
pop
fldcw
(bad)
lock
bnd
and
xor
sub
sbb
jnp
retf
xchg
add
call
test
movs
and
pop
lods
retf
pop
imul
xchg
add
xchg
pop
pop
mov
stc
sub
sub
add
lock
popf
stos
outs
or
in
aaa
icebp
pop
and
shl
stos
movs
add
cmp
push
stc
xor
and
scas
or
movs
test
and
jbe
cmc
push
jmp
xor
mov
aad
inc
pop
cld
fwait
int3
jnp
pop
dec
pop
adc
or
dec
mov
mov
(bad)
ins
dec
addr16
iret
pop
mov
mov
and
repz
xchg
popf
pop
push
push
pop
jp
daa
retf
lahf
pop
into
mov
push
and
pop
adc
pusha
dec
enter
lock
fild
cld
shl
ja
or
push
mov
imul
mov
pushf
jbe
xor
imul
arpl
sbb
add
fldenv
jmp
push
xor
xor
hlt
clc
lods
pushf
sbb
jns
ins
aas
cs
add
cmp
adc
test
outs
ficom
loope
push
lock
xchg
jl
fldcw
xchg
stos
sbb
sub
dec
movs
add
call
push
pop
adc
and
xchg
sbb
push
jb
adc
xchg
test
push
jp
cmp
cmc
push
pop
in
jg
out
loope
xor
jge
imul
sbb
ret
scas
and
mov
icebp
inc
adc
jle
add
das
jnp
cwde
push
je
xchg
fcomp
adc
loopne
retf
retf
pop
cs
es
mov
shl
or
(bad)
inc
and
mov
(bad)
out
cmp
enter
stos
mov
and
xlat
pushf
xor
push
outs
cld
(bad)
das
fdiv
mov
xchg
neg
mov
scas
dec
lods
test
sbb
xchg
add
inc
xchg
sti
(bad)
loope
add
xor
ins
mov
dec
sub
int
sub
dec
xor
jnp
repz
add
(bad)
sahf
adc
in
das
adc
call
cmp
jp
ds
int3
rcl
lods
mov
push
lahf
push
hlt
adc
mov
xor
dec
rcl
lods
into
aad
jmp
sbb
jl
pop
jle
shl
fisubr
mov
sbb
mov
xchg
push
xor
push
add
mov
adc
mov
mov
stc
outs
outs
jge
nop
aaa
cld
in
push
and
inc
jne
inc
mov
inc
inc
sbb
gs
jb
mov
aaa
call
xacquire
pop
pop
mov
aad
mov
dec
adc
jge
or
lock
lods
xchg
xor
fld1
mov
ds
ret
in
enter
dec
adc
dec
cmp
dec
jo
outs
aam
add
jnp
adc
inc
adc
dec
int3
dec
in
dec
ds
iret
outs
outs
es
inc
shl
lods
adc
aas
call
popf
sahf
iret
lea
push
(bad)
sbb
fild
xlat
or
pop
fisubr
pop
fidiv
adc
in
xor
(bad)
sub
jne
cmp
aad
mov
loope
je
sti
push
out
das
jmp
jmp
add
adc
in
dec
fistp
scas
sub
mov
sbb
rol
ss
jmp
outs
(bad)
xlat
cmp
sub
jae
stos
ss
adc
mov
add
or
mov
xchg
xor
add
das
add
and
(bad)
out
in
jp
xor
mov
jg
xor
mov
dec
or
fdiv
jg
(bad)
fisttp
or
cmp
mov
adc
retf
xor
repnz
arpl
jb
and
mov
cmp
xchg
cmp
stos
xchg
sbb
cmc
imul
push
xor
lods
push
push
nop
or
js
pop
dec
int
inc
lds
stos
inc
popa
cmc
pop
push
dec
mov
xchg
inc
(bad)
adc
or
adc
call
pop
adc
shl
or
jb
lock
sbb
jb
(bad)
pusha
imul
clc
mov
ss
jo
sbb
and
in
sbb
fist
mov
lds
stos
push
test
dec
mov
cwde
jbe
mov
sub
fsub
ret
sub
cmps
rol
gs
ror
add
rol
(bad)
push
fcomi
test
cdq
data16
sbb
not
xor
int3
mov
or
fwait
jb
jmp
push
call
test
push
loop
mov
movs
xchg
je
aad
xchg
gs
and
or
mov
dec
mov
inc
fsubr
call
mov
ds
nop
adc
mov
hlt
xor
or
inc
push
push
pop
sbb
xchg
imul
repz
xor
cmc
or
call
(bad)
div
pcmpgtw
add
scas
es
xchg
jns
inc
adc
dec
xor
jno
pop
push
xor
loope
mov
ror
and
dec
pop
fidiv
(bad)
loopne
fisub
jecxz
cmps
loopne
sub
dec
cmc
add
mov
inc
mov
jg
enter
mov
mov
test
mov
sahf
js
arpl
add
sub
cmc
scas
sub
cmp
pop
push
xlat
retf
cmpxchg
les
in
and
test
and
sub
mov
mov
scas
call
test
mov
inc
push
pop
cmp
mov
ss
sbb
cmp
ret
fsub
fs
inc
or
or
xlat
sub
and
add
iret
(bad)
jnp
xchg
iret
jg
stos
and
int
lahf
into
lock
add
mov
(bad)
enter
and
mov
les
pushf
leave
retw
xchg
not
and
loop
or
inc
dec
jne
fwait
stc
jmp
mov
cs
ret
sbb
push
mov
mov
sub
ret
out
shl
adc
mov
mov
popa
or
cmp
into
pop
aas
retf
sar
sub
jne
mov
sbb
mov
and
jecxz
sbb
les
lods
(bad)
and
mov
clc
test
cdq
movs
mov
and
push
mov
sar
xor
stc
nop
sub
pop
xor
mov
pushf
in
mov
in
jp
das
jns
mov
mov
jle
dec
inc
xor
jnp
arpl
out
cmp
add
push
repz
or
and
clc
sub
call
aaa
mov
xor
daa
adc
mov
add
js
or
or
xchg
pop
imul
int
pushf
sar
add
fisub
jae
push
dec
ja
fbstp
scas
cmp
inc
je
push
push
sbb
mov
mov
sbb
push
pop
sahf
and
mov
ja
or
imul
dec
adc
(bad)
and
inc
stc
or
iret
sub
cs
outs
sbb
jle
retf
loop
add
mov
arpl
aad
jns
sub
lock
pop
data16
cmp
ins
(bad)
es
mov
gs
test
in
aam
and
and
cmps
inc
push
test
fstp
(bad)
aad
pop
aaa
test
cmp
sar
call
fs
jp
and
push
out
(bad)
mov
test
out
lds
dec
nop
mov
cwde
jle
pop
mov
mov
cmp
dec
(bad)
push
dec
test
add
mov
fwait
fwait
stos
sub
in
loopne
mov
test
ret
dec
data16
lock
push
push
or
mov
mov
scas
sbb
lock
pop
hlt
sbb
movs
sbb
iret
cmps
mov
mov
iret
in
sar
scas
or
jmp
mov
pop
fstp
loop
xchg
fld
cmp
test
xchg
and
mov
outs
jae
inc
into
inc
xor
test
pop
fdivp
mov
mov
inc
fsub
aad
dec
rcl
mov
dec
aad
retf
xor
call
stos
mov
xchg
dec
and
fld
fsub
test
jecxz
sbb
sub
cmp
out
cmp
mov
stos
icebp
bound
shl
pushf
add
test
push
xor
(bad)
pop
retf
les
mov
sbb
cmc
push
or
(bad)
scas
movs
inc
(bad)
imul
mov
jnp
pop
aam
stc
xor
(bad)
clc
mov
retf
div
and
scas
jnp
push
leave
xchg
aad
scas
or
jge
in
xor
xor
fs
dec
add
adc
adc
or
mov
sub
int3
mov
xor
push
sub
push
loope
das
leave
neg
pop
cmc
call
mov
jecxz
dec
mov
inc
sbb
sar
or
pop
(bad)
sub
stos
(bad)
ds
rcr
push
inc
mov
ja
out
sar
aad
and
mov
fs
cmps
xchg
loop
push
lea
je
mov
mov
pop
(bad)
mov
push
add
jb
ret
inc
inc
(bad)
shl
retf
imul
mov
mov
retf
cmps
sahf
xchg
adc
xchg
dec
aam
jecxz
and
call
pop
(bad)
mov
inc
xchg
(bad)
push
enter
push
mov
sbb
je
sbb
sub
xchg
sub
dec
sbb
pop
adc
mov
outs
(bad)
mov
pop
sub
adc
icebp
adc
test
pop
or
in
sub
cli
out
cmp
ins
mov
jecxz
pop
mov
mov
inc
push
sbb
mov
(bad)
jmp
add
xor
and
add
int3
call
(bad)
ficom
into
fst
pop
mov
jae
pop
inc
lods
lahf
ror
mov
in
xlat
rcr
aaa
cmc
pop
je
mov
mov
mov
xor
iret
bound
fidivr
inc
pop
push
adc
aad
test
mov
xchg
retf
jle
out
adc
pop
rcr
stos
or
dec
es
stc
daa
and
push
sar
cmp
push
stos
dec
adc
xchg
mov
dec
fist
psubusw
and
popa
es
push
inc
das
add
jecxz
dec
cmp
push
gs
sub
and
xchg
pop
jnp
mov
int
xchg
movs
leave
push
adc
and
xlat
aas
or
push
ret
inc
addr16
shr
push
loop
aad
and
pop
dec
jo
ins
pop
rol
(bad)
(bad)
aam
(bad)
xchg
nop
ficomp
cmp
jp
mov
cmp
sub
bound
cmp
mov
and
ins
xor
es
jmp
and
scas
mov
jae
sub
loope
sub
push
sub
sub
dec
push
ret
cmp
dec
add
popa
ror
ficom
pop
je
fmul
shr
fistp
xchg
and
jecxz
and
mov
(bad)
xchg
xchg
(bad)
aad
sbb
scas
mov
push
retf
(bad)
push
cmp
adc
pop
(bad)
int
nop
pop
inc
inc
dec
sub
int
(bad)
lock
out
jmp
repz
add
sub
fs
popa
jecxz
sbb
aam
xor
out
ins
sub
in
mov
xchg
inc
xchg
lods
jns
imul
mov
mul
mov
retf
xor
outs
jge
pop
fisub
mov
push
imul
xor
test
push
jl
sbb
mov
sar
retf
add
in
test
mov
into
mov
mov
in
dec
outs
cmp
adc
ja
test
dec
int
and
ror
shl
xchg
add
add
mov
or
mov
inc
pop
cmps
inc
imul
addr16
mov
mov
pop
push
test
jnp
cdq
sbb
ficomp
cs
shr
ins
(bad)
sbb
mov
pop
ror
add
cld
xor
cmp
cmp
jae
pop
rcr
shl
xor
jmp
test
sub
mov
mov
test
test
pop
add
sub
loopne
push
in
out
mov
sahf
sahf
ins
cmp
(bad)
arpl
fld
lock
cdq
lods
ss
enter
std
and
mov
inc
push
movs
mov
aaa
les
push
cld
fs
loopne
stos
xor
pop
jno
ror
loopne
jne
pop
loopne
xor
addr16
not
(bad)
push
push
adc
pop
dec
bound
pop
or
fisubr
lock
(bad)
mov
imul
sbb
gs
xchg
gs
adc
fmulp
cmps
pop
enter
jmp
test
mov
pop
cmps
and
fwait
adc
push
jne
xor
retf
xor
sar
mov
inc
shl
shr
rcr
cmp
pushf
xchg
or
les
clc
mov
js
std
mov
inc
(bad)
es
mov
movs
adc
mov
adc
mov
mov
test
sbb
mov
mov
cmp
mov
sbb
ret
add
cmps
test
xor
inc
pop
mov
cmps
mov
cs
inc
fs
repz
jae
inc
jb
adc
lahf
xchg
jmp
add
dec
pop
inc
imul
jno
add
and
pop
sub
xchg
and
push
jl
js
test
push
xchg
repz
add
repz
mov
fdivr
jecxz
xchg
ins
cmp
int3
push
mov
pop
fld
jnp
cmp
dec
mov
call
push
cmp
inc
xor
jmp
cmc
jnp
dec
lods
push
and
sub
push
popf
pop
movs
(bad)
mov
aas
arpl
ins
dec
imul
jl
ins
ret
ret
mov
fwait
add
ss
inc
std
xor
adc
mov
shr
and
out
dec
or
pop
les
lods
cmp
into
jle
out
dec
movs
mov
(bad)
retf
or
or
cmp
(bad)
movs
loopne
jg
scas
pop
mov
xor
call
mov
mov
pop
or
mov
jne
mov
inc
push
loop
call
rcl
cmc
dec
fmulp
mov
rcr
push
out
xor
les
lahf
leave
movs
mov
dec
xchg
stc
ror
push
lahf
fsub
pushf
inc
inc
mov
in
adc
push
stos
xor
push
xchg
popf
xlat
loopne
pop
into
rcr
stos
fild
div
test
xchg
sahf
xor
or
mov
std
sub
popa
lahf
and
cmp
and
es
lea
int
out
sbb
inc
cmps
jnp
pop
adc
cmp
inc
sbb
pop
pushf
retf
mov
cmp
mov
xor
fwait
add
(bad)
mov
cmp
aaa
and
dec
das
or
ss
call
sub
mov
sbb
adc
rcr
daa
popa
loopne
jg
arpl
aam
pushf
retf
mov
enter
mov
sub
cld
sub
mov
xchg
movs
push
popf
std
mov
(bad)
in
sub
mov
jecxz
out
iret
retf
mov
cmp
xlat
ja
fild
ss
push
jl
std
lods
mov
int
xchg
pop
adc
ret
je
mov
adc
(bad)
(bad)
jle
sbb
add
loope
clc
jne
pop
cmp
mov
stc
js
mov
hlt
push
push
mov
cs
int3
sub
cmc
push
stos
add
fstp
push
pop
cmp
xchg
data16
cmp
jecxz
(bad)
mov
xchg
xchg
push
mov
jecxz
cmps
imul
gs
xlat
lds
inc
ret
push
ins
popa
mov
push
xchg
jmp
pop
push
mov
repz
js
cmps
lock
xchg
es
or
mov
push
clc
xchg
(bad)
push
es
in
jae
adc
xor
repnz
(bad)
bound
retf
mov
ins
dec
cmp
test
movs
pop
in
sub
iret
data16
ret
fcmovbe
pushf
pop
dec
je
and
xchg
xchg
mov
dec
push
or
or
dec
lock
lods
xor
mov
cwde
mov
pop
xchg
out
inc
sub
push
in
outs
jno
aas
cwde
or
mov
mov
shl
sub
int3
sar
pop
(bad)
hlt
sahf
xchg
(bad)
cmps
add
neg
jo
imul
aam
push
call
push
xchg
dec
(bad)
fptan
xchg
popf
lds
push
gs
jp
xchg
outs
pop
xchg
idiv
ja
xchg
mov
push
jl
outs
scas
sub
pop
cdq
cdq
das
push
sub
jecxz
fdivr
inc
sar
nop
push
or
test
inc
ss
pushw
inc
(bad)
fs
outs
cmp
cmc
hlt
jp
lahf
cmp
mov
test
add
push
ret
push
lods
call
div
iret
cmp
imul
jne
push
iret
jmp
cmc
inc
mov
inc
int3
movs
jb
mov
inc
(bad)
loop
jo
test
xchg
sahf
mov
call
lds
daa
push
cdq
mov
not
sahf
(bad)
popa
in
xor
mov
jge
sti
repz
add
xchg
das
fidivr
xchg
or
jns
lods
fild
xchg
push
cld
outs
mov
test
push
sub
scas
dec
dec
lahf
xchg
pushf
push
inc
sub
pop
mov
scas
and
das
inc
leave
int
arpl
sbb
out
(bad)
or
add
jo
mov
lods
jecxz
cli
sub
mov
jge
push
mov
dec
adc
or
ror
mov
loop
push
and
fst
pop
cmp
aam
jge
loope
(bad)
jo
and
or
mov
mov
and
test
mul
sbb
xchg
mov
or
arpl
dec
xchg
jle
and
std
into
sbb
jmp
mov
ja
sbb
fwait
int3
and
xchg
jmp
and
shr
mov
pusha
(bad)
fdivp
test
mov
jo
adc
hlt
xor
bound
pushf
fwait
daa
adc
shl
cs
and
pop
(bad)
sub
lahf
into
pop
mov
imul
aam
xchg
pop
std
scas
jae
test
jb
retf
clc
arpl
jmp
mov
popf
xchg
push
dec
imul
pop
jae
cmp
and
mov
in
es
stos
cdq
das
fisttp
popf
aad
(bad)
das
in
sub
cmp
sbb
ins
test
adc
or
aam
mov
pop
inc
stos
sub
cdq
push
call
cld
jbe
xor
dec
rol
stos
pushf
mov
pushf
cld
cmp
daa
and
dec
leave
jns
sbb
xchg
pop
ins
outs
jno
xor
xchg
loop
xor
or
pop
pushf
fist
(bad)
jl
dec
cmp
push
ret
sbb
xor
mov
mov
jae
xor
push
pop
daa
add
mov
popf
int
outs
stc
aas
(bad)
xor
(bad)
jb
test
lods
xchg
mov
pop
pop
sub
(bad)
cdq
test
jo
mov
dec
add
pop
jbe
mov
mov
icebp
xor
scas
fnsave
xchg
cs
sub
adc
adc
xchg
jmp
fisubr
adc
popa
out
in
and
jle
int
sar
jns
jecxz
xor
(bad)
cdq
mov
xchg
push
fnstcw
sub
ss
xor
cmp
test
fisttp
shl
(bad)
ss
pop
test
in
je
stos
fwait
xchg
sub
inc
push
nop
sahf
pop
test
mov
add
imul
mov
cmp
mov
loop
(bad)
ss
arpl
repnz
inc
ds
inc
mov
mov
cdq
jnp
xor
mov
fiadd
add
ins
cmc
xor
or
ss
xchg
push
xchg
inc
push
mov
iret
popa
pop
rcl
(bad)
fadd
dec
loop
add
lock
xor
mov
add
gs
cmp
jb
sahf
es
int
(bad)
mov
loop
and
(bad)
movs
adc
fcmovne
sub
push
outs
popa
mov
out
push
jo
aad
push
xchg
das
pop
(bad)
and
jge
outs
pop
dec
rcr
mov
mov
ja
sub
xchg
sub
retf
cli
(bad)
lahf
adc
hlt
jae
in
(bad)
dec
imul
popa
inc
xchg
int
add
fwait
stos
mov
jb
enter
arpl
xor
xchg
retf
mov
pop
outs
adc
pop
fstp
shr
jo
cmp
push
lods
cwde
sub
test
sbb
cdq
stc
imul
out
pop
sti
and
mov
push
inc
inc
out
js
pushf
mov
add
aad
adc
and
ret
adc
sbb
cs
xor
and
dec
adc
mov
jecxz
xor
in
rcr
adc
add
mov
retf
dec
jno
sub
mul
rcl
fcom
clc
stos
add
cmp
stc
into
and
mov
dec
sub
cmp
mov
test
js
bound
fld
xor
je
and
adc
mov
sub
pop
icebp
sar
arpl
aam
in
test
popa
mov
ret
(bad)
jns
fisubr
paddd
fld
xchg
mov
xchg
mov
call
repz
push
sti
mov
popf
scas
mov
cmps
fucomip
shl
clc
pop
(bad)
jle
and
or
push
(bad)
mov
stc
mov
fiadd
and
(bad)
out
cwde
jb
dec
ja
gs
add
pop
(bad)
dec
in
mov
ret
out
inc
adc
fwait
in
push
(bad)
clc
or
fdivr
iret
pushf
push
popa
mov
bswap
cmp
loope
jl
outs
inc
ss
mov
push
inc
cmp
sub
pop
div
cwde
mov
or
popa
dec
fbld
or
sub
fcomp
cmp
retf
sub
out
pop
or
leave
popa
push
push
lods
mov
xchg
retf
dec
pop
dec
scas
push
mov
dec
push
pop
jns
sbb
mov
outs
sbb
dec
sub
leave
enter
mov
xchg
movs
outs
in
jl
imul
mov
fiadd
pop
sub
enter
fidiv
jae
sub
(bad)
sub
hlt
stos
(bad)
xor
sub
js
add
iret
rcr
pop
xor
jae
mov
in
mov
sar
pop
add
sub
cmp
or
imul
das
add
mov
jle
xor
lea
mov
jge
mov
push
out
int
or
push
fistp
cs
hlt
add
xchg
add
inc
mov
mov
cmp
mov
not
sbb
dec
jbe
mov
sti
ja
mov
es
cmp
mov
fdivr
fwait
push
cdq
jle
lods
or
ficomp
mov
ins
daa
or
jle
mov
jecxz
scas
mov
or
mov
clc
neg
ja
push
mov
mov
xor
xchg
popf
in
ss
jle
pop
xor
stos
push
pop
daa
xor
add
rol
adc
ror
sub
jle
xchg
stc
xchg
sub
lds
bound
inc
pop
mov
or
mov
outs
into
in
xchg
cmp
mov
mov
push
jae
add
push
in
xchg
(bad)
out
xrelease
retf
push
sbb
jg
sbb
or
sbb
cdq
sbb
push
mov
leave
mov
out
and
xor
jmp
sbb
mov
mov
adc
dec
add
inc
mov
jmp
mov
call
dec
pop
loopne
stos
adc
xchg
xor
retf
sbb
add
in
ins
dec
cmp
and
dec
and
add
xlat
sbb
jae
out
pop
mov
imul
sub
aad
mov
call
cdq
xor
in
jno
sub
in
mov
mov
inc
mov
pop
xor
adc
add
xor
inc
cmp
xor
or
ss
loopne
pop
sub
aaa
fsubr
adc
ss
in
or
pop
jbe
cs
fs
or
xchg
(bad)
xchg
fs
sbb
(bad)
int
or
fsubr
xchg
dec
js
retf
sbb
mov
pop
adc
int
(bad)
xor
dec
addr16
adc
inc
div
push
xchg
pop
test
cmp
adc
shr
shr
pop
mov
cli
stos
lods
mov
push
call
push
mov
sub
nop
(bad)
not
mov
stos
mov
push
jmp
cmp
icebp
xor
pop
pop
iret
or
pop
add
sti
jnp
cwde
test
cmp
sbb
int
test
dec
pop
jne
push
imul
pusha
out
cld
dec
adc
ds
fldenv
pop
test
dec
adc
and
ja
cmps
jmp
jo
popf
add
dec
ins
das
repnz
mov
jae
mov
add
and
test
lahf
mov
cmp
pop
xchg
add
loop
jae
sahf
clc
or
imul
shl
sbb
loop
jp
mov
xor
push
push
mov
repz
sub
stos
pop
cmp
inc
imul
pushf
fcomp
das
cmp
or
jmp
les
push
in
sbb
cmp
adc
inc
sbb
mov
mov
jecxz
xchg
mov
or
stc
dec
fsubr
jae
mov
js
scas
sbb
leave
or
gs
mov
dec
push
adc
aas
add
int3
shl
jge
dec
je
xchg
cmp
in
out
mov
fdivr
add
or
adc
call
pop
sub
mov
in
hlt
cli
(bad)
cmps
push
mov
push
repnz
push
inc
pop
sahf
sbb
cmp
fiadd
inc
or
int
and
adc
mov
icebp
adc
cmp
or
mov
jno
dec
movs
daa
retf
jmp
js
cld
in
and
movs
xchg
cwde
lea
sbb
mul
rcl
inc
mov
ins
pushf
and
xchg
cmc
xchg
arpl
mov
sub
pop
ror
cwde
enter
xchg
out
xor
xchg
mov
test
stos
inc
jo
fld
and
xlat
aaa
and
enter
movs
cli
(bad)
call
lods
mov
shl
fistp
movs
adc
hlt
repz
cmps
dec
ds
pop
shr
mov
fistp
add
pop
cld
jg
or
dec
dec
stos
push
sub
mov
outs
in
add
fcmovbe
xchg
mov
scas
sub
adc
cmp
daa
push
retf
pop
pop
push
clc
scas
into
fwait
stos
aam
pop
dec
aam
movs
adc
inc
fwait
imul
pop
mov
push
mov
add
push
or
xchg
push
and
adc
and
pop
mov
jne
outs
pop
scas
push
in
lock
or
pusha
and
push
scas
and
repz
dec
movs
loope
popa
in
outs
fld
imul
icebp
mov
test
and
or
mov
xchg
lods
inc
sahf
lds
jno
test
dec
pop
jg
stos
adc
add
jno
pop
push
sub
scas
test
sub
imul
clc
xchg
pop
cdq
ds
shl
or
popf
jmp
push
aas
pop
ja
call
inc
fld
push
outs
fisubr
inc
sti
sbb
cmp
mov
lea
cmp
(bad)
clc
daa
inc
or
dec
sub
jbe
jge
pop
and
jne
mov
or
mov
and
nop
add
scas
mov
fld
int3
aas
lods
adc
jbe
jne
push
ja
add
daa
retf
lods
pushf
mov
and
sub
inc
sub
mov
sbb
sub
into
out
gs
inc
mov
call
xchg
adc
call
jge
call
and
mov
loopne
in
cdq
out
inc
sbb
call
push
sub
mov
mov
addr16
xchg
or
loopne
fnstsw
jg
pop
leave
mov
dec
mov
sub
and
adc
push
lahf
icebp
adc
(bad)
push
sti
mov
mov
add
pop
add
lahf
and
aad
mov
shr
or
add
rcr
pop
cld
jl
movs
rol
imul
add
mov
jb
cmp
ja
or
xchg
in
or
movs
and
mov
sub
inc
sbb
cs
enter
sub
pop
jmp
(bad)
idiv
add
push
sar
push
xchg
cli
xor
jb
or
loopne
shl
aad
movs
les
aas
mov
sbb
in
push
lea
aas
pop
sahf
mov
or
push
sbb
xchg
jg
or
mov
fimul
cmps
sub
(bad)
mov
sbb
int3
mov
loopne
mov
jnp
rcr
js
fiadd
lock
dec
ret
cmc
shr
(bad)
cmps
mov
mov
call
(bad)
movs
mov
loope
jb
adc
mov
in
clc
rcr
ror
dec
sub
xchg
call
mov
fwait
and
aam
xchg
push
ss
mov
cmc
adc
sbb
push
inc
jle
adc
inc
ss
std
xor
sbb
cmp
cmc
inc
cdq
cmp
(bad)
sbb
mov
nop
or
dec
cmps
mov
mov
in
mov
and
sub
jg
jg
out
xchg
loope
mov
inc
mov
aam
cmp
mov
xchg
mul
mov
pop
sub
mov
push
mov
xor
pop
popf
jl
ret
or
push
cmps
mov
and
xchg
and
xor
mov
inc
movs
hlt
jl
adc
adc
js
inc
in
pop
sar
mov
mov
rcl
sub
movs
add
or
mov
xor
cwde
dec
or
mov
xor
rcr
cmp
enter
retf
(bad)
sti
jp
add
ret
mov
ret
sub
js
xor
jg
and
dec
cmp
or
daa
fnsave
ins
mov
and
xchg
cdq
sbb
adc
inc
dec
jmp
adc
sub
jae
xor
pusha
loop
mov
sub
(bad)
add
mov
or
adc
pop
sbb
fild
xor
jnp
and
xchg
data16
inc
(bad)
jns
(bad)
mov
movs
sbb
adc
in
int3
sbb
jg
loop
xor
and
dec
test
shl
inc
outs
test
pop
shl
jmp
stos
cs
sub
clc
imul
dec
and
mov
mov
call
rol
nop
mov
lods
imul
iret
adc
scas
les
jmp
cmp
fcomp
inc
pop
fwait
or
call
lods
jl
cwde
cdq
cmp
fimul
and
or
mov
sub
scas
cwde
and
jae
xchg
add
xor
add
inc
sbb
jg
xor
add
or
int3
xor
fidiv
mov
push
mov
into
dec
aad
pop
aaa
inc
add
outs
popf
imul
cmps
dec
mov
pop
xchg
(bad)
(bad)
cs
xchg
add
sub
sbb
push
fwait
jecxz
mov
mov
shl
repz
mov
sub
cmps
sbb
daa
mov
shr
pop
aad
xchg
pop
inc
gs
xor
xchg
xchg
test
mov
movs
jbe
repnz
pop
jns
les
adc
out
inc
loop
arpl
sub
test
repnz
mov
jecxz
mov
imul
adc
shr
mov
clc
pop
xor
stc
arpl
add
bound
lock
add
pop
je
jle
gs
sub
rcl
loopne
into
sahf
das
js
cmp
xchg
shl
sub
fiadd
or
shl
inc
jmp
mov
test
mov
int
enter
test
mov
pop
sub
dec
xor
lea
sub
jne
xchg
repz
pop
into
dec
push
mov
and
loop
retf
lds
repz
mov
out
cmp
and
(bad)
xchg
pop
out
inc
popa
add
mov
inc
shr
lea
adc
cmp
mov
xchg
add
aam
std
mov
cmp
(bad)
aam
das
and
push
bound
jecxz
pop
mov
mov
xchg
xor
pop
in
sub
arpl
push
cmp
push
mov
add
xchg
loope
xor
inc
sub
retf
sub
xor
in
xor
jbe
jecxz
push
xchg
sbb
jge
inc
jmp
or
add
lock
push
in
nop
stos
scas
xchg
cmp
cmp
inc
ret
adc
add
(bad)
adc
jge
inc
or
rcr
cwde
pop
test
popf
inc
push
jle
fcom
add
jno
pop
adc
ss
rol
leave
xor
test
jbe
dec
cld
mov
jmp
mov
pop
and
repz
jnp
cmc
xchg
mov
call
fistp
xchg
cdq
jno
dec
lahf
pusha
mov
(bad)
cli
test
std
xchg
aaa
loopne
add
dec
jecxz
inc
mov
xchg
mov
push
data16
scas
sti
push
sub
je
or
arpl
xor
xchg
sbb
das
xchg
and
ins
pusha
movs
movs
jb
ret
add
xchg
ins
cmc
xor
mov
jmp
sub
pop
ret
and
mov
sub
repz
jns
jbe
call
test
addr16
push
(bad)
out
addr16
rol
add
mov
outs
lods
sbb
ja
enter
retf
movs
cmp
and
mov
sub
retf
pop
ret
mov
jecxz
outs
add
sub
and
jge
shr
leave
ret
jne
jne
pop
and
jl
aaa
mov
(bad)
mov
mov
aam
data16
push
shr
lahf
pop
adc
vsqrtsd
adc
jmp
cmp
xor
sub
cmp
xor
js
popa
jp
add
dec
imul
inc
fs
adc
push
ret
mov
shl
mov
sbb
sahf
and
xchg
pop
loopne
add
jnp
stos
retf
dec
mov
pop
push
cmp
mov
cld
pop
xchg
and
int3
fnstenv
ret
pop
or
lahf
xchg
inc
xchg
call
mov
add
fs
or
or
adc
inc
inc
inc
push
es
push
int3
cmp
and
outs
jb
nop
jae
(bad)
clc
aaa
jmp
in
aas
in
sbb
sbb
stos
sub
inc
inc
or
mov
cld
sub
popw
cmps
sbb
mov
and
push
sbb
movs
pop
jnp
iret
in
sti
loope
jno
sub
mov
data16
jns
dec
cmps
ins
adc
push
das
fst
xlat
test
xchg
inc
mov
lea
cwde
or
neg
and
popa
cmp
dec
scas
or
nop
jg
cmp
cmps
aas
sahf
mov
movs
and
mov
sub
std
mov
test
mov
clc
lea
cwde
mov
sub
adc
int
(bad)
push
push
std
imul
int3
outs
xchg
sub
outs
mov
repnz
inc
jo
out
mov
sbb
mov
enter
inc
jo
pop
dec
jmp
clc
cli
push
push
pop
mov
inc
xor
test
mov
inc
dec
or
scas
es
jo
mov
rcr
bound
rep
mov
shr
dec
ins
ret
cmp
and
dec
cld
push
mov
jle
jno
retf
stos
repz
mov
aad
(bad)
cwde
jo
iret
add
ret
cdq
fmul
loope
push
xchg
xchg
dec
cs
imul
fld
push
mov
cmp
mov
cmp
jl
adc
leave
test
push
dec
test
pop
(bad)
pushf
fld
push
test
retf
js
jle
nop
popa
and
scas
pop
mov
adc
ror
sub
scas
mov
sar
jl
movs
inc
cwde
fnstcw
jp
jp
aad
mov
dec
and
sbb
jmp
cmp
jae
mov
xchg
mov
jmp
dec
mov
inc
les
test
and
add
popa
cmova
push
lock
or
pop
in
int
es
mov
mov
in
xchg
sbb
push
add
in
js
es
scas
xlat
sahf
outs
cwde
fisttp
fs
jb
inc
mov
sub
add
mov
stos
clc
lods
jno
mov
adc
sbb
jb
jno
xchg
cmps
cmp
cmp
and
call
xor
fdivr
mov
and
fcom
data16
add
lods
iret
movs
inc
inc
stos
pop
mov
rcr
ins
sbb
iret
int3
shl
(bad)
ds
cmp
rcr
repz
out
int3
es
mov
push
scas
aam
jmp
jmp
sbb
add
pop
push
mov
jns
xor
mov
clc
(bad)
shr
lods
stos
rcl
cmp
outs
adc
mov
fldcw
test
push
pop
adc
dec
imul
jle
dec
pop
ds
mov
movs
scas
push
cdq
ror
fcomp
push
pusha
and
jmp
inc
jo
fild
icebp
mov
xor
stos
cmp
(bad)
jge
shl
sub
ret
mov
mov
aaa
das
sbb
es
xor
and
adc
sbb
fiadd
test
imul
dec
adc
adc
(bad)
dec
sub
pop
push
or
ins
imul
xchg
lds
fwait
in
cli
or
movs
dec
inc
rcl
dec
sahf
ds
pusha
mov
imul
jnp
inc
cmp
int3
xchg
mov
xchg
int3
jecxz
mov
fsubr
xchg
inc
daa
mov
push
dec
cmp
mov
into
and
(bad)
adc
mov
cmp
test
mov
add
push
sub
inc
pop
ds
mov
div
iret
std
jae
add
sbb
adc
loope
mov
ret
mov
sub
fs
(bad)
push
stos
fld
loope
dec
aam
mov
xchg
mov
xor
ror
adc
jb
or
outs
lock
mov
mov
xor
movs
mov
sbb
ret
add
retf
xchg
mov
inc
shl
movs
xchg
(bad)
stos
in
stos
sub
les
pop
pop
fwait
das
pop
scas
push
sahf
dec
push
in
jne
sub
fcomp
inc
xchg
push
dec
fldenv
lods
in
push
xor
add
shld
in
or
pop
jge
pushf
jae
dec
in
clc
dec
pushf
out
outs
sub
inc
test
pop
mov
pop
or
mov
mov
jno
jo
sbb
bound
icebp
jmp
sbb
das
bound
fwait
je
push
(bad)
cmp
jns
push
dec
adc
into
(bad)
dec
mov
dec
and
or
fnstenv
adc
test
in
lods
mov
call
jmp
scas
aaa
push
jge
sub
inc
mov
dec
(bad)
sahf
mov
inc
test
push
(bad)
in
out
xchg
ja
sub
test
test
xchg
call
or
rcr
jecxz
retf
scas
test
iret
lods
xchg
mov
int3
xchg
mov
jo
jle
popa
mov
adc
mov
jmp
push
out
and
inc
addr16
and
std
cmps
sbb
(bad)
jl
rcl
adc
xchg
pop
push
outs
mov
mov
xchg
bound
push
mov
mov
fisttp
movs
or
xor
lea
push
pop
dec
cmps
fs
test
fnstcw
cmps
xchg
loopne
outs
mov
arpl
push
cmp
mov
int3
je
cmp
or
dec
imul
sub
jb
(bad)
mov
mov
jmp
mov
cmp
maskmovq
jbe
push
mov
push
in
dec
gs
or
icebp
fcom
push
sub
mul
push
dec
pushf
cmp
cdq
lock
mov
out
retf
das
popf
outs
sub
dec
imul
inc
(bad)
jne
dec
push
retf
test
mov
int3
(bad)
jo
dec
sub
cld
aas
(bad)
popf
bound
push
add
mov
imul
adc
mov
push
pop
stos
lock
push
cs
cmp
ins
inc
fwait
xor
xor
(bad)
adc
xchg
sub
dec
sbb
(bad)
(bad)
push
cmps
ins
cmps
jecxz
jle
in
cs
pushf
inc
mov
push
mov
push
xchg
sti
popa
pop
fcomp
mov
iret
add
push
and
test
inc
push
(bad)
jle
rcl
dec
lods
div
cdq
fwait
aas
cwde
hlt
rol
call
pop
xchg
add
adc
cmc
push
call
out
and
inc
dec
cld
xor
mov
or
fild
mov
hlt
adc
xchg
jge
sbb
outs
mov
inc
xor
push
and
cmp
xor
xchg
rcl
leave
scas
cmp
jno
sahf
scas
in
leave
sub
sbb
les
call
lds
std
jg
in
inc
pop
mov
mov
jmp
sbb
mov
outs
jp
les
cmp
sub
mov
outs
push
pop
mov
jmp
ror
shr
mov
push
jns
push
test
lea
jno
jns
sbb
loopne
dec
jae
pop
and
cmp
push
xchg
pop
adc
std
jle
mov
pushf
sub
popf
adc
sbb
(bad)
aas
push
push
inc
or
adc
or
xor
xor
dec
cmc
icebp
mov
jg
pop
mov
pop
jno
ja
jl
enter
ror
movs
adc
inc
arpl
sub
adc
xchg
adc
dec
xchg
call
fisttp
add
fidiv
(bad)
mov
xchg
cwde
loop
cmp
in
sbb
mov
push
lock
push
ror
retf
jp
outs
jecxz
lds
sti
or
enter
xchg
cmp
test
add
mov
(bad)
jp
js
adc
fld
ds
ret
movs
es
sub
and
xchg
cmp
pop
add
ss
xlat
sbb
push
stos
mov
stos
adc
cmp
inc
inc
dec
je
xor
loopne
mov
push
ret
sbb
mov
mov
leave
xchg
adc
pop
jae
inc
fld
aam
jbe
adc
jnp
cmps
sahf
cli
pop
adc
jnp
ret
jp
pop
cdq
pop
cmp
cld
xchg
call
jne
inc
jo
pop
cdq
push
enter
xor
pop
jmp
sub
js
sar
or
jg
push
cwde
pop
jge
jne
pop
int
mov
pop
push
lods
(bad)
loopne
and
xchg
mov
imul
pusha
sub
fsub
xor
imul
fimul
or
fdivr
xor
sti
sbb
jno
sbb
xchg
push
sub
dec
cmp
nop
jle
repz
cmp
or
cmc
outs
mov
mov
je
mov
sub
sbb
repz
xchg
lods
xchg
push
jp
mov
xor
dec
aas
xlat
test
imul
stos
xchg
sbb
clc
arpl
retf
int
stos
std
test
inc
je
(bad)
retf
mov
fiadd
mov
and
in
pop
push
test
ins
icebp
out
or
outs
push
or
xor
xchg
sub
push
ret
shl
in
xor
inc
sbb
cmp
sbb
(bad)
or
adc
div
pop
popw
lahf
(bad)
xchg
inc
xchg
pop
fs
mov
stos
push
stc
pop
sub
sbb
cli
sbb
in
int
mov
mov
mov
jmp
lea
lods
sub
popa
push
mov
add
es
(bad)
ins
and
mov
add
add
push
mov
into
adc
fsub
hlt
xchg
xchg
movhps
and
mov
add
ds
mov
mov
hlt
sub
fsubr
cmp
std
fidiv
mov
outs
xchg
fs
in
daa
mov
mov
xchg
xor
neg
and
add
add
jne
and
int3
(bad)
jmp
pop
es
popa
jecxz
cmp
jns
data16
repnz
out
mov
(bad)
movs
outs
pop
adc
dec
jl
mov
sub
dec
and
fs
retf
aad
push
js
popa
cmc
jl
cmp
mov
push
dec
retf
adc
lods
dec
push
pop
int
push
sbb
push
cmps
fcom
inc
popa
dec
jge
lods
sub
xchg
xchg
test
(bad)
or
mov
test
sbb
inc
rcl
cmp
test
scas
cmp
sbb
xchg
js
clc
ror
jnp
push
or
ins
lods
loopne
aam
stos
push
jae
in
add
nop
mov
outs
adc
jp
mov
adc
dec
xor
movs
out
inc
mov
pop
mov
mov
cdq
cmp
pusha
push
push
repz
ret
pop
mov
pusha
call
adc
inc
test
aaa
push
jae
push
dec
dec
jecxz
inc
jne
adc
leave
retf
jge
xchg
sub
mov
(bad)
cmp
xchg
inc
outs
lods
sbb
int3
xor
mov
les
fcmovb
je
inc
aam
add
push
in
jge
push
outs
test
cmp
movs
xchg
repz
aad
mov
xor
and
lock
and
push
sti
arpl
and
pop
adc
icebp
movs
cmc
inc
fisttp
lods
lods
fsub
aad
lods
add
push
popa
mov
cli
jae
js
jge
dec
xchg
dec
imul
clc
mov
scas
sbb
xchg
popf
push
ins
mov
inc
inc
push
mov
jg
xchg
ficom
test
xchg
or
sub
mov
cmp
xchg
dec
mov
loop
sub
(bad)
fadd
sub
ins
lods
push
gs
retf
fdiv
out
pop
xor
sahf
in
or
xor
repz
xlat
jbe
retf
imul
shr
pusha
in
std
mov
das
push
shr
clc
aaa
mov
mov
sbb
adc
xor
ja
dec
fs
out
or
ret
jae
sar
out
out
and
jmp
cld
mov
cmp
dec
fwait
or
gs
popa
iret
loop
inc
pusha
aas
adc
pusha
idiv
jmp
or
xor
jmp
test
inc
push
fidiv
dec
loope
movs
mov
loopne
pop
jne
gs
fwait
mov
add
add
dec
aas
(bad)
fcmovb
scas
jl
inc
xor
aad
mov
mov
xlat
dec
mov
jae
fld
sbb
rcr
ins
xor
ins
popf
scas
xchg
mov
inc
xchg
(bad)
enter
(bad)
shl
mov
inc
sub
mov
sti
les
adc
in
sbb
cmp
imul
int3
push
fwait
xlat
or
ins
aam
xchg
div
(bad)
mov
scas
or
mov
mov
inc
test
fnstenv
hlt
and
push
and
or
xchg
pop
fst
clc
mov
ds
div
pop
adc
aaa
mov
and
and
out
jns
mov
xchg
and
push
cmp
inc
xchg
scas
inc
push
outs
inc
mov
scas
bound
fistp
test
adc
cmp
inc
call
cmc
inc
push
pushf
test
and
ret
neg
lahf
mov
dec
xchg
test
xor
(bad)
sahf
or
and
aaa
xchg
fcom
popf
jmp
sbb
das
pop
dec
mov
xchg
das
daa
jb
sbb
movs
cwde
sub
cli
test
push
aam
test
ret
outs
cmp
push
sahf
call
(bad)
daa
mov
movs
inc
das
adc
mov
push
or
and
leave
adc
mov
hlt
test
cmp
adc
int
(bad)
les
jo
dec
fistp
jae
pushf
js
mov
jne
cmp
cmp
imul
cmp
pop
arpl
daa
mov
mov
ret
das
pop
xchg
ret
out
loopne
in
test
fwait
mov
push
ss
mov
push
cmp
int
out
push
lds
push
ds
adc
movs
push
ret
sbb
lock
in
cdq
dec
sub
ret
adc
in
mov
xchg
pop
jg
xlat
lds
push
cmp
inc
cmc
fimul
or
sbb
daa
add
cmp
cmps
cmps
jnp
fwait
ret
ret
popa
std
adc
pop
imul
nop
mov
addr16
mov
test
xchg
jns
lods
je
add
or
jmp
(bad)
add
stos
icebp
mov
cmc
daa
jnp
dec
cmp
dec
add
mov
mov
mov
mov
aas
mov
cwde
hlt
jmp
xor
jmp
bound
lea
stos
add
mov
adc
mov
hlt
cdq
lock
xor
pop
fwait
mov
and
lods
mov
sbb
pusha
(bad)
push
je
mov
(bad)
outs
iret
push
xor
into
lock
inc
out
(bad)
mov
push
xor
lods
or
jle
or
das
adc
sbb
jge
(bad)
inc
sbb
(bad)
push
sti
push
lea
sub
jbe
inc
dec
(bad)
sub
cmp
popf
pop
ret
rol
repz
jg
pushf
add
cmp
mov
js
fisttp
add
push
int3
mov
adc
ja
jne
nop
pop
inc
retf
sbb
sub
rcr
mov
popa
jb
cwde
jp
inc
in
fwait
shr
aam
cmps
lock
out
push
dec
mov
das
sbb
inc
xor
retf
add
mov
dec
bnd
and
jne
add
dec
in
fimul
rcr
fldenv
sub
ret
xchg
cmp
cdq
jmp
jnp
(bad)
inc
out
pop
pop
mov
mov
pusha
dec
pop
sbb
mov
pop
sub
mov
cmp
jnp
popf
call
push
ds
add
pop
mov
jl
sbb
add
adc
or
cmp
jmp
pop
or
mov
add
sub
in
fisttp
jmp
jp
mov
repnz
pop
jmp
lock
cwde
(bad)
jle
repnz
inc
test
dec
imul
into
push
push
hlt
sbb
or
pop
in
mov
outs
add
fdivr
dec
jns
test
shl
mov
scas
jl
cld
outs
or
enter
cs
mov
das
dec
daa
or
add
adc
mov
cmp
pop
outs
mov
cli
mov
dec
mov
test
dec
loopne
sbb
jno
popa
mov
fxsave
pop
xchg
jle
push
add
(bad)
cmps
das
in
jg
cmp
(bad)
stc
addr16
sbb
jmp
mov
ret
ja
fs
js
mov
dec
mov
pop
setnp
fisttp
out
and
imul
sti
adc
xor
aaa
pop
push
sub
icebp
inc
ror
jns
pop
ret
frstor
test
pop
and
in
lods
push
jmp
pop
sbb
mov
push
inc
jge
out
pop
retf
inc
jbe
call
imul
xchg
icebp
cmp
cmp
addr16
test
push
add
dec
ins
or
cdq
(bad)
push
repz
pop
mov
xchg
in
fs
addr16
inc
mov
push
push
ror
mov
scas
cmp
imul
and
cmps
mov
loope
pop
mov
in
xor
sbb
je
jae
or
lahf
mov
mov
cli
test
in
and
or
outs
(bad)
jmp
sub
or
inc
hlt
jo
or
push
inc
add
int
test
les
push
jg
dec
push
loope
les
jb
sahf
mov
xchg
pop
sti
xchg
pmulhw
mov
fninit
mov
(bad)
mov
jne
xlat
mov
shl
cmp
inc
test
test
shl
jns
test
pop
push
pop
(bad)
sti
cs
pop
and
not
data16
cmp
sub
and
arpl
sub
sbb
enter
inc
sbb
or
stos
dec
ss
(bad)
loop
mov
iret
jecxz
std
outs
push
cmp
cld
call
xchg
cld
cmp
push
movs
(bad)
ins
mov
add
mov
ror
adc
test
and
cwde
jle
shr
je
sub
mov
sub
aaa
popa
jle
push
adc
and
jp
adc
mov
sahf
sbb
dec
jp
out
sub
xchg
not
dec
shl
jae
cdq
mov
outs
xor
pop
out
outs
mov
lds
dec
xchg
repnz
addr16
adc
aad
dec
int
pop
es
pop
lahf
out
aaa
and
adc
sar
mov
add
xor
cmp
call
shr
or
sahf
mov
and
pop
out
push
mov
fsubr
outs
test
stc
nop
aam
icebp
dec
aas
inc
mov
or
div
lock
fdivrp
rcr
dec
adc
jb
inc
sti
das
xor
cmps
xor
and
jge
jl
dec
(bad)
in
scas
stos
jle
mov
sub
pop
div
inc
adc
clc
jecxz
mov
fnstenv
inc
mov
push
(bad)
out
adc
add
(bad)
out
add
shl
loope
xchg
mov
mov
fwait
mov
mov
and
stos
push
mov
mov
nop
pop
push
ret
repnz
cwde
push
test
neg
mov
test
ins
test
scas
je
repz
hlt
outs
mov
mov
push
or
add
mov
add
cld
mov
xor
pop
inc
xchg
outs
push
lods
xchg
jns
cmp
gs
cli
push
cdq
lock
xor
arpl
(bad)
call
in
jmp
mov
jge
or
mov
fst
sub
(bad)
pop
test
retf
aad
adc
mov
and
retf
push
out
iret
nop
fxch
inc
inc
scas
sub
add
lock
js
test
jbe
fimul
stc
mov
sub
pop
out
xor
push
pop
cmp
push
sbb
mov
gs
sub
jle
cli
and
(bad)
rcr
pop
jl
movs
stc
push
pop
sub
mov
scas
mov
inc
(bad)
retf
mov
adc
in
pop
aas
js
sbb
sub
hlt
pop
ror
test
ja
jne
mov
cmp
movs
sbb
fcom
inc
pop
jbe
pop
mov
in
mov
lea
cmp
bsf
sub
push
retf
movs
shl
mov
xor
mov
jne
push
out
cwde
lock
cmp
push
push
icebp
fmul
retf
add
loop
mov
push
pop
jmp
push
push
pop
inc
data16
pop
cmps
test
mov
lock
dec
ins
mov
xchg
clc
bswap
call
dec
es
(bad)
jnp
pop
jae
and
ins
dec
mov
or
imul
or
mov
popa
fwait
(bad)
xor
pop
(bad)
or
pop
inc
mov
and
icebp
jp
dec
enter
stos
aaa
mov
fstp
loopne
dec
pop
mov
mov
mov
cmp
test
jne
fcomp
xor
mov
call
jo
adc
scas
ret
out
int
test
(bad)
adc
sub
mov
stos
jne
lea
mov
mov
mov
dec
in
clc
and
mov
data16
pop
stos
imul
inc
sbb
fs
and
mov
jno
add
sbb
scas
cmc
push
or
retf
sub
pusha
shl
test
into
mov
nop
xor
xchg
pop
xor
jl
in
pop
rcr
out
std
popa
pop
outs
rcl
sub
and
mov
scas
div
ja
add
je
fld
sahf
xor
in
addr16
(bad)
cmps
imul
test
mov
adc
sbb
xchg
pop
mov
add
push
push
adc
out
ror
cmc
or
jne
mov
and
test
sub
jmp
repz
and
je
mov
outs
shl
cdq
int3
mov
push
(bad)
shl
mov
lods
dec
dec
in
mov
xchg
rol
out
adc
ret
fadd
stos
xchg
popf
test
out
adc
call
sub
stos
dec
in
repz
and
adc
nop
push
xchg
add
inc
lahf
mov
les
mov
repnz
call
sbb
jno
sub
and
inc
cli
cld
xchg
call
jp
mov
sbb
or
push
ret
xchg
add
mov
cmp
inc
sbb
sbb
adc
ja
fsubr
movs
movs
xor
cdq
(bad)
pop
iret
cli
dec
mov
mov
nop
leave
xchg
mov
test
xlat
xor
nop
es
bound
mov
mov
push
ja
cmps
jmp
jg
or
dec
div
mov
addr16
cmp
adc
jne
xor
shr
jmp
push
ret
push
stos
mov
pop
or
cmc
push
adc
mov
xor
xchg
mov
jae
and
push
mov
adc
iret
inc
dec
and
add
repnz
sub
and
jp
icebp
pop
push
push
push
pop
jmp
div
fs
repnz
mov
(bad)
mov
mov
icebp
int3
lea
push
cdq
push
cmps
loop
inc
test
pusha
and
push
push
or
inc
or
adc
adc
(bad)
es
pop
add
mov
imul
jb
mov
aas
sahf
in
ficom
das
xchg
cdq
rep
push
mov
clc
xchg
sbb
(bad)
loope
or
push
out
pushf
cwde
xor
mov
sub
ss
cmp
pop
or
cmps
cmp
mov
cmps
adc
xchg
pop
sbb
mov
inc
(bad)
pop
inc
adc
mov
and
and
stos
dec
push
push
push
loop
mov
call
(bad)
xor
push
scas
gs
push
lock
cmp
test
in
cli
pop
popf
shl
test
mov
jne
jae
outs
mov
pop
fsub
or
add
out
mov
and
xchg
into
mov
imul
mov
mov
inc
ret
je
mov
mov
aam
push
scas
and
dec
push
sbb
icebp
imul
lods
adc
jmp
push
and
fwait
and
movs
fcomp
test
xchg
mov
pop
inc
xor
lods
gs
push
jle
in
mov
in
xchg
retf
lea
xchg
mov
or
push
retf
out
outs
ins
addr16
(bad)
loop
inc
hlt
and
pop
pop
rol
int3
adc
pop
test
push
int3
cwde
loopne
cmp
or
sbb
push
sbb
ins
sbb
into
enter
(bad)
(bad)
bnd
jne
ja
jbe
cmps
sti
mov
movs
adc
mov
shl
lea
int3
adc
aaa
fsub
or
loopne
cmp
push
ja
cmp
pop
rol
xor
mov
inc
add
mov
lea
jg
hlt
push
xchg
shr
add
out
lods
add
in
imul
xchg
test
sar
inc
xchg
sub
cs
xor
add
nop
dec
stos
std
add
fwait
out
mov
sbb
aam
mov
outs
loopne
lock
mov
or
jmp
fnstcw
inc
jle
pop
ins
test
leave
mov
je
cmovne
mov
or
imul
fistp
mov
cmp
mov
mov
inc
sbb
add
mov
xchg
xor
add
mov
(bad)
inc
stc
xor
inc
(bad)
cli
mov
add
in
inc
aam
test
fs
cwde
xor
lahf
sbb
mov
jg
mov
test
and
pop
add
sahf
dec
adc
popa
pop
test
daa
call
pop
aaa
cmp
ds
out
cs
cwde
es
ffreep
mov
pop
neg
stos
test
imul
and
or
mov
mov
mov
adc
cmc
(bad)
aam
mov
test
sub
test
sahf
cmp
inc
inc
and
sub
jmp
mov
cld
(bad)
shl
mov
cmps
sbb
jbe
outs
call
test
pop
loop
leave
pop
fisub
aas
ret
ins
jl
test
adc
mov
push
cmp
jmp
fst
dec
xor
and
jl
pusha
or
pop
fs
push
daa
or
mov
pop
(bad)
call
cmc
mov
fsub
or
fdivrp
popf
(bad)
dec
cs
imul
jle
cmp
push
ret
mov
inc
adc
xor
call
in
dec
or
jg
cmp
xchg
mov
or
mov
dec
mov
mov
xchg
in
test
push
js
repnz
or
adc
push
sbb
mov
aaa
lahf
fwait
xchg
addr16
rcl
in
xchg
bnd
jne
into
inc
pop
jmp
shl
xor
xchg
ret
out
das
adc
mov
mov
fist
fist
sti
(bad)
cmp
jb
hlt
cmps
cdq
inc
clc
and
cli
or
fdiv
xchg
ss
lea
sbb
inc
push
adc
sbb
ret
sub
fadd
das
(bad)
fdivr
retf
jnp
add
fcmove
out
and
mov
(bad)
js
mov
rol
sbb
adc
inc
cld
xadd
in
cmps
adc
sti
aad
jae
jno
lea
adc
push
mov
dec
mov
mov
test
jecxz
lods
mov
test
fcomp
inc
mov
ror
jmp
sub
pop
pop
jmp
fnclex
xor
push
(bad)
neg
neg
int
ror
out
pop
popa
sbb
jecxz
es
imul
fidiv
add
arpl
scas
sub
fsubr
das
mov
outs
fsubr
imul
gs
aam
push
dec
cmp
mov
retw
aam
mov
mov
xor
xchg
lods
in
neg
push
inc
mov
repz
es
ja
xor
(bad)
out
mov
jmp
xchg
(bad)
xor
xlat
scas
shl
push
sub
shr
pop
in
rcl
fs
ss
mov
mov
sub
imul
and
pop
sar
pop
sub
inc
mov
add
mov
cdq
cmp
icebp
lods
jmp
test
mov
mov
aam
xchg
or
jmp
sub
inc
dec
popf
pop
pop
mov
(bad)
cmp
xchg
aaa
shl
xchg
adc
mov
aad
aad
in
jge
xlat
cmp
mov
xchg
mov
dec
div
cmp
sbb
nop
jo
(bad)
pop
sub
jecxz
cmc
push
in
test
mov
lahf
sbb
or
aaa
aaa
inc
xchg
js
dec
ret
in
push
dec
dec
hlt
jnp
mov
or
jbe
arpl
mov
sti
(bad)
sbb
je
fisubr
sar
in
xchg
test
iret
xor
pushf
addr16
in
ds
mov
aam
mov
mov
pop
or
inc
jo
cdq
js
pop
pop
aam
push
sbb
pop
jb
popa
test
adc
in
shr
outs
das
push
cmps
int3
fstp
mov
mov
cmp
aam
fmulp
fcomp
mov
push
mov
mov
add
mov
aad
loop
cmp
outs
cmps
out
cmp
pop
loopne
push
pop
push
pop
jne
jb
es
and
mov
mov
inc
aaa
push
call
inc
xchg
add
xchg
mov
xchg
vpsubusb
into
mov
call
fcom
cs
cwde
iret
div
mov
and
dec
mov
fs
sti
pop
jnp
xor
jb
inc
outs
mov
jbe
popf
ficomp
jge
rol
lods
add
or
pusha
cmps
mov
neg
or
sbb
adc
retf
out
mov
mov
fs
sbb
cmc
mov
xlat
cld
ret
xlat
hlt
fwait
dec
xchg
jg
aas
mov
outs
popa
add
pop
ds
mov
adc
xchg
jmp
test
xor
mov
(bad)
cwde
cmps
push
mov
push
shl
inc
idiv
pop
cmp
add
pushf
push
addr16
out
push
sahf
push
mov
sahf
retf
or
int
xchg
inc
xor
pop
std
and
js
test
inc
jae
sub
pop
outs
cli
fisttp
fcom
mov
clc
add
or
jmp
mov
jo
idiv
lea
out
push
psllq
push
push
int3
mov
xchg
fistp
mov
ss
out
repnz
sbb
jmp
div
cmp
sar
jl
stos
push
lods
mov
clc
fwait
mov
ror
sub
adc
(bad)
sub
jae
jp
aas
xor
sub
jmp
cmp
pop
cmp
fcomp
call
stc
dec
jmp
jbe
xor
push
or
aas
or
scas
movs
fs
loope
and
pop
loope
lock
jecxz
sub
das
lods
leave
cwde
sbb
sub
daa
xor
inc
jmp
sub
and
and
mov
pop
xchg
dec
mov
push
lds
push
inc
mov
dec
leave
cmp
fld
aas
ret
dec
fdiv
aam
and
mov
gs
lock
pop
fadd
int
or
or
ja
mov
jae
push
pop
out
in
pop
pop
cmp
pop
inc
std
bound
mov
daa
std
sub
ss
sbb
dec
pop
jl
ins
ret
xor
pop
stos
cmp
icebp
xchg
inc
rcr
(bad)
push
jge
jmp
push
outs
xchg
cdq
je
std
mov
add
pop
pop
fs
lock
push
and
mov
xlat
mov
and
mov
and
int3
stos
stos
mov
and
xchg
and
test
adc
cdq
inc
pushf
sub
mov
inc
sbb
pop
add
push
(bad)
addr16
in
aad
jecxz
jmp
mov
push
adc
jo
push
daa
ja
aam
jb
xor
out
repz
leave
inc
push
shl
repnz
xchg
push
cmp
jle
ss
xchg
sbb
pop
jle
xchg
call
call
stos
call
ss
cld
jo
std
cmp
stos
loop
or
ret
push
les
sub
bound
cmp
(bad)
and
pop
es
loop
xchg
(bad)
jns
popf
cmps
jmp
pop
stc
ins
jl
push
test
push
adc
sub
fstp
int3
pushf
retf
test
loopne
mov
icebp
aaa
jl
mov
sbb
stc
ret
xor
sbb
stc
int3
push
loop
inc
xor
pop
ret
xor
sub
into
sbb
jl
ror
cdq
sub
mov
(bad)
inc
fidiv
xchg
sar
pusha
int
rol
jmp
fimul
push
adc
xchg
add
and
outs
xchg
rol
in
pop
gs
mov
fidiv
sub
test
rep
jmp
int
and
mov
sahf
dec
add
cmp
mov
enter
aam
test
xor
mov
sub
cwde
xor
ds
adc
jl
push
test
outs
add
jo
outs
icebp
inc
fs
(bad)
mov
sbb
mov
shr
mov
lds
mov
adc
or
in
fdivr
sub
jecxz
and
sbb
cmp
sbb
inc
dec
hlt
dec
mov
pop
sahf
xchg
es
mov
stos
push
and
jmp
cmp
cmc
fild
xor
pop
in
xchg
pusha
cld
out
test
les
rcr
add
movs
push
mov
xchg
mov
pop
retf
fldcw
test
hlt
ret
mov
or
jp
mov
call
mov
inc
push
fwait
lea
jp
popf
jb
and
jb
lds
lock
jmp
sbb
out
jns
shr
out
add
outs
scas
inc
test
pop
push
xlat
ss
aas
xchg
pop
je
mov
(bad)
xor
xor
shl
loopne
inc
push
add
(bad)
leave
xchg
jnp
or
sbb
xor
jae
mov
jbe
movs
dec
mov
dec
fisttp
iret
ret
add
mov
or
retf
cmp
and
add
fimul
mov
cmp
xlat
adc
jo
sti
aad
lods
cmps
push
xchg
and
adc
mov
sub
cli
push
pop
aas
call
pop
jae
dec
test
cld
movs
adc
inc
xlat
xor
into
cwde
add
daa
test
addr16
jb
mov
xor
repz
enter
inc
sub
sub
in
push
adc
add
xlat
mov
jl
in
dec
ret
lds
call
cmp
adc
cdq
mov
mov
iret
jmp
cld
push
mov
(bad)
or
xor
sti
shl
clc
hlt
mov
shl
xchg
mov
lock
add
mov
xlat
xor
mov
inc
push
adc
jp
in
in
rcl
xchg
out
pusha
cdq
fmul
sti
into
inc
dec
fnstcw
and
inc
mov
and
mov
mov
cs
dec
xchg
into
out
inc
xor
xor
push
js
push
lods
(bad)
jmp
repnz
clc
adc
mov
not
sub
cmps
cmps
stos
push
out
dec
sbb
xchg
push
and
mov
imul
pop
and
lods
in
pop
(bad)
jo
mov
push
retf
pop
loopne
mov
fwait
popf
popf
arpl
mov
mov
xor
dec
push
fild
push
push
pop
daa
sbb
or
in
mul
loope
adc
out
or
lods
test
jecxz
jecxz
pop
pop
xchg
js
push
fistp
iret
xor
icebp
inc
iret
sub
aas
out
lds
rcl
in
sti
push
fst
jo
and
outs
mov
mov
cli
inc
js
push
dec
rol
hlt
int
fld
mov
jge
xchg
lds
pop
fild
retf
and
sub
fwait
adc
push
mov
outs
jle
xchg
hlt
out
fild
jo
sbb
cmps
dec
cmp
outs
into
mov
lea
aas
and
adc
push
mov
jl
xor
scas
sahf
and
mov
(bad)
xlat
pop
cmp
dec
shr
jecxz
and
or
sahf
shl
push
and
out
mov
imul
mov
cmp
fld
cmp
hlt
xchg
and
cmp
push
mov
xor
ins
jle
repnz
or
mov
mov
cmp
adc
pop
push
jo
sbb
test
xchg
jg
push
jnp
nop
inc
add
and
imul
xchg
ja
dec
xor
adc
(bad)
push
xor
outs
push
fstp
in
push
(bad)
retf
sub
push
popf
sbb
stos
call
dec
xchg
sub
call
daa
es
int3
aas
and
jns
sub
scas
cs
shl
push
mov
minps
add
stos
std
repnz
jl
sub
(bad)
xor
dec
push
inc
mov
xor
test
sbb
sub
pop
enter
jae
sub
pop
pop
add
pop
movs
xor
lods
pop
mov
scas
aaa
cwde
push
dec
pop
push
mov
rol
and
dec
cwde
cmp
mov
pop
mov
jmp
js
lock
aam
jecxz
rcr
lea
mov
cs
iret
fstp
cmp
pop
mov
cmc
or
sbb
and
pop
push
cmp
fist
nop
loop
jne
sbb
xor
pop
add
mov
fild
movs
imul
je
bound
adc
mov
mov
cli
pop
jp
dec
cld
mov
add
sub
dec
add
in
and
dec
in
and
inc
cmp
imul
wbinvd
sbb
sbb
in
icebp
xchg
lahf
jp
cmp
sti
mov
or
(bad)
mov
pushf
mov
mov
scas
mov
pop
mov
push
xchg
mov
icebp
pop
pop
fwait
inc
push
test
pop
mov
or
out
icebp
sub
mov
ins
cmp
mov
or
sub
mov
cwde
mov
mov
out
cmp
cmp
xor
mov
ins
(bad)
retf
movs
cmp
aad
test
add
fnsavew
scas
aaa
enter
or
ret
test
mov
sub
(bad)
fild
mov
sbb
jno
dec
fcom
add
(bad)
out
pop
retf
pop
std
push
(bad)
out
lea
in
stos
loop
cmp
dec
xchg
mov
cmps
mov
push
mov
clc
aaa
inc
push
pusha
iret
mov
push
(bad)
out
scas
sub
loopne
rcr
add
nop
push
lods
push
rcr
in
push
cli
aaa
mov
dec
fstp
xor
add
and
add
pop
sub
or
enter
lods
sar
nop
jb
xchg
xor
data16
push
cmps
in
jle
mov
jbe
push
mov
aaa
push
push
mov
pop
sub
sbb
out
test
jge
mov
dec
jbe
sub
lock
push
mov
mov
outs
push
sar
mov
test
mov
jne
fisub
pop
popa
js
int
jmp
enter
pop
in
pushf
jge
mov
shl
rcr
pop
pop
cmc
stos
mov
in
sub
xor
imul
inc
adc
pop
lods
rol
in
dec
jmp
pusha
sti
push
jno
imul
fild
call
icebp
arpl
adc
hlt
mov
mov
gs
cmc
int
fst
daa
mov
shl
pop
popa
scas
push
adc
mov
inc
cs
out
(bad)
and
(bad)
mov
sbb
pop
gs
push
sub
sub
lds
mov
pop
ja
stos
mov
mov
jns
pop
fs
pop
pop
cmps
es
add
lds
adc
jne
out
cli
(bad)
mov
inc
rcr
dec
pop
dec
iret
xor
retf
pushf
mov
cwde
(bad)
sar
mov
pop
call
xor
cwde
pop
xchg
addr16
ins
adc
or
inc
shl
or
outs
rcl
pmullw
ja
mov
int3
das
mov
cmc
frstor
cmp
mov
inc
xor
dec
fwait
das
mov
add
or
dec
in
fldcw
sbb
pop
push
push
fiadd
movs
js
mov
dec
push
inc
mov
push
push
inc
leave
inc
mov
push
push
cld
shl
dec
mov
mov
sbb
cld
repz
and
ffreep
push
(bad)
mov
inc
aam
and
or
cld
ja
nop
push
imul
cwde
pop
push
mov
jb
mov
ins
inc
cmc
and
and
ret
sahf
pop
repz
jne
add
sub
outs
sub
sbb
mov
xlat
pop
push
cmp
js
imul
pop
cld
outs
pop
xor
add
sar
data16
loope
mov
or
test
test
pusha
mov
xchg
fcom
mov
sahf
int3
xchg
add
pop
outs
stc
xchg
xchg
or
leave
xlat
(bad)
xchg
xor
in
cmp
mov
rol
cmp
or
and
fcom
sbb
xchg
mov
daa
fild
jecxz
mov
pop
xchg
lods
sbb
test
or
mov
pop
stos
dec
cmp
pcmpeqw
mov
fist
jno
ja
retf
xor
loop
(bad)
jnp
movs
xchg
sbb
pop
mov
xchg
ins
retf
cmp
or
pop
lock
shl
lea
sbb
leave
adc
lock
push
rcr
shl
mov
in
adc
push
imul
inc
sub
adc
pop
loop
fistp
dec
cmp
mov
xor
jnp
pop
push
retf
xchg
ds
mov
add
aad
add
xchg
xchg
and
lods
push
jne
and
pop
adc
mov
arpl
sbb
mov
ret
pop
push
inc
jns
daa
outs
inc
add
dec
call
lods
int
adc
jg
and
call
adc
dec
scas
fcomp
xchg
loopne
loop
sbb
mov
fistp
loopne
jno
fld
jle
add
jb
in
push
(bad)
cdq
pop
dec
mov
in
mov
in
arpl
daa
add
lods
jbe
jae
push
out
ss
jb
or
ret
ret
xlat
jns
push
sbb
ret
mov
or
sbb
ins
ficom
add
sbb
rcr
cmp
mov
ss
arpl
add
movs
add
sbb
(bad)
dec
add
(bad)
fistp
dec
scas
mov
imul
imul
adc
pusha
cdq
inc
(bad)
jg
cs
add
sti
jb
jmp
push
(bad)
or
mov
pop
fild
jle
sbb
aam
xor
mov
hlt
xor
cmovbe
dec
test
cmp
pushf
(bad)
mov
sbb
into
sbb
push
push
sbb
or
movs
and
ins
pop
mov
xchg
xor
or
int
int
mov
inc
fst
leave
dec
dec
int
jge
in
dec
push
in
jnp
test
addr16
mov
cdq
xchg
jecxz
add
cmc
call
fimul
pop
cwde
jo
xchg
and
sub
sbb
push
xchg
mov
test
sub
(bad)
aad
data16
mov
xor
pop
daa
out
xor
fld
sar
inc
out
jnp
ss
(bad)
test
dec
mov
jp
out
push
pop
mov
mov
mov
int
bound
sub
sbb
mov
mov
scas
jp
movs
in
mov
je
push
mov
loope
loopne
jge
cwde
lds
jge
pop
sbb
btc
mov
pop
mul
stos
adc
jbe
push
pop
dec
mov
sbb
fs
cmps
jp
mov
in
inc
add
ds
or
cmp
call
(bad)
out
adc
daa
int
cmp
in
pop
cmp
xor
aam
lea
and
dec
dec
(bad)
loope
and
or
pop
sub
mov
popf
cli
jae
jl
js
jo
adc
adc
push
and
rcr
repnz
(bad)
stc
xor
mov
hlt
xchg
test
or
jle
or
and
ret
adc
sub
stos
(bad)
jbe
cmp
js
push
sub
ss
aas
cmp
adc
outs
into
es
dec
push
jmp
pushf
cmp
aas
jns
inc
pusha
mov
pusha
dec
aas
add
pop
dec
ror
rep
dec
push
adc
in
inc
sbb
inc
inc
push
scas
mov
and
ds
mov
xor
add
push
pop
or
jge
inc
mov
ror
loopne
fwait
dec
inc
sbb
push
mov
popf
push
or
add
cmp
pop
(bad)
mov
in
rol
lea
lar
dec
mov
pop
jb
in
mov
mov
fdivr
ss
in
inc
pop
inc
dec
inc
xor
repnz
mov
jge
stc
mov
fnstsw
push
and
mov
xchg
and
dec
xor
les
(bad)
mov
fiadd
and
pop
aad
movs
mov
dec
adc
adc
inc
sar
pop
and
dec
div
jg
mov
es
add
inc
fnstenv
scas
or
and
adc
outs
push
shr
fldcw
adc
mov
fs
mul
cmp
sahf
pop
xchg
mov
popa
neg
and
retf
inc
push
mov
add
sbb
dec
adc
push
inc
int3
scas
fsub
pop
retf
fisttp
sbb
out
adc
mov
mov
data16
(bad)
jecxz
cs
loop
mov
dec
and
inc
push
cmp
cli
stos
sahf
in
mov
adc
and
lds
mov
fistp
xor
push
xchg
or
out
cmp
pop
popa
outs
stos
nop
cld
cmps
pop
cmps
mov
and
adc
mov
adc
cmp
ficomp
sub
sub
daa
scas
inc
jp
lahf
push
cmp
into
xchg
inc
cmp
lds
sub
stc
mov
mov
push
ret
cmp
arpl
lea
rcl
mov
in
sahf
push
shl
aad
mov
out
xchg
and
in
sbb
pop
xor
adc
adc
out
in
add
xor
data16
push
popa
jecxz
cmp
sub
test
pop
mov
jle
dec
mov
mov
mov
push
and
repz
retf
shl
outs
push
enter
mov
cdq
hlt
xchg
pop
clc
dec
sub
bound
(bad)
lahf
cmps
mov
add
xor
(bad)
jb
enter
adc
ss
nop
fdiv
mov
mov
sub
xchg
popf
pop
retf
in
call
retf
xchg
push
dec
dec
dec
and
pop
sbb
add
push
retf
push
push
cmp
(bad)
fldenv
(bad)
int3
xchg
mov
push
loopne
jb
inc
jmp
push
sub
test
fwait
mov
cmps
xchg
xchg
fadd
jbe
or
inc
je
sbb
retfw
or
and
jbe
cmp
lods
daa
adc
jae
outs
shr
pushf
call
sub
movs
xor
mov
lods
repz
xlat
pushf
xchg
(bad)
ror
sar
ins
retf
cs
mov
push
int3
out
xlat
ror
inc
pop
push
je
inc
rol
pop
push
out
sub
jb
ja
pop
add
sti
inc
sub
dec
xchg
dec
out
mov
call
add
or
repz
enter
js
fmul
cmps
adc
and
imul
mov
jns
mov
cmps
in
jl
pop
dec
(bad)
(bad)
jbe
hlt
jl
clc
jg
movs
add
and
push
dec
sahf
scas
mov
xor
ror
inc
mov
mov
mov
std
loop
xor
xor
ret
imul
repnz
pop
and
xor
sub
movs
(bad)
loopne
inc
push
and
stc
and
dec
lds
cwde
push
mov
xchg
xor
iret
sti
ret
mov
test
bound
lods
mov
jl
and
retf
not
cli
add
push
cmp
fwait
adc
sbb
inc
sub
popf
call
push
(bad)
ins
and
jno
ins
xor
in
mov
scas
cwde
sbb
call
sub
xchg
xor
loopne
push
and
adc
outs
je
xchg
pop
or
cmps
(bad)
int3
ret
push
adc
jg
adc
jmp
test
out
sar
xor
cmps
sbb
sar
push
xor
dec
call
adc
cli
cwde
or
mov
stos
mov
sub
(bad)
(bad)
push
xor
test
pop
and
test
out
(bad)
sbb
jb
mov
cmp
jae
xchg
cmp
pop
sti
cli
sbb
jle
sub
dec
adc
ss
jge
fld
lods
mov
mov
jb
add
jbe
push
int3
fcomp
lods
and
sub
adc
mov
sbb
inc
add
out
push
inc
sti
jmp
cmps
mov
fild
(bad)
clc
add
mov
hlt
pop
(bad)
mov
sbb
into
mov
push
test
rol
lods
ins
push
es
sbb
push
xor
stc
xor
ret
mov
or
add
neg
xor
repnz
out
inc
xor
or
xlat
cmp
movs
push
xor
ret
shl
ins
int3
retf
mov
adc
sbb
cld
cmp
pop
adc
int3
and
ret
daa
stos
jp
add
pop
jge
mov
mov
test
test
movs
out
in
inc
test
ins
adc
inc
loope
push
pushf
push
das
std
js
repz
(bad)
mov
stos
movs
jnp
and
push
pusha
xchg
loop
xchg
loope
loop
lahf
xor
cwde
ins
rol
push
hlt
xor
out
xor
jne
cmp
jmp
das
pop
push
shl
xchg
fild
sbb
mov
jl
mov
hlt
out
cmp
or
push
out
xchg
(bad)
lock
jno
(bad)
push
out
mov
int3
xchg
add
sbb
mov
dec
(bad)
rol
lods
(bad)
mov
das
mov
mov
pusha
mov
pop
pop
add
imul
cmp
jecxz
pop
out
retf
mov
es
(bad)
mov
inc
inc
mov
or
xchg
je
test
jmp
call
mov
or
pop
mov
das
ds
sub
mov
push
les
dec
add
and
fs
repz
cmp
inc
les
lods
xchg
out
and
stc
jnp
sub
jmp
push
neg
aaa
add
dec
in
pop
pusha
data16
mov
inc
popa
jne
inc
dec
shl
and
ror
inc
add
sub
jg
mov
inc
adc
mov
rcl
scas
into
mov
repz
cmps
cwde
push
dec
add
hlt
retf
cmps
ficomp
rcl
sbb
in
mov
pusha
cmp
popf
xchg
adc
pop
inc
mov
pop
stos
loop
imul
jbe
cmp
repz
gs
mov
push
jo
sbb
cli
leave
dec
dec
and
inc
call
fbstp
lods
mov
ror
pop
sub
mov
sub
shl
hlt
sub
movs
xor
fnstenv
jae
fidivr
js
inc
lods
mov
push
or
lea
push
sbb
data16
cmp
mov
mov
es
mov
jns
jg
cdq
ss
ror
retf
mov
pushf
adc
mov
mov
aam
inc
push
jns
cmps
enter
sahf
and
pop
stos
icebp
mov
jnp
or
push
cmps
sub
enter
push
aad
and
add
ins
pop
pop
inc
add
mov
lea
aaa
adc
and
sbb
(bad)
jb
mov
add
js
in
out
mov
push
cmp
mov
ret
fwait
add
cs
push
sub
out
das
inc
sbb
pop
mov
pop
stos
or
xor
mov
add
xchg
jmp
cmp
test
sbb
fwait
push
sbb
mov
ficom
lods
sbb
xchg
movs
mov
scas
jl
xchg
push
cs
inc
clc
mov
loopne
xchg
out
mov
ret
in
dec
cmp
mov
mov
sbb
jl
cwde
push
mov
lahf
cld
mov
mov
sub
std
dec
and
inc
add
push
xchg
arpl
pop
fdiv
mov
retf
ins
out
dec
jecxz
jns
std
push
xor
jge
dec
add
push
les
pop
add
sbb
xchg
sbb
retf
sub
mov
sbb
lods
lds
in
and
add
mov
mov
and
es
push
mov
pop
sub
gs
ret
aam
sbb
retf
push
dec
rcr
pop
gs
inc
test
call
dec
ins
add
xchg
push
test
clc
in
sub
rcr
cld
or
test
jg
jno
shl
neg
pop
and
jnp
or
sub
les
jge
and
mov
push
adc
or
movs
into
pop
aaa
cs
fwait
mov
mov
cmps
int3
daa
test
outs
add
fidivr
mov
mov
cmp
mov
stc
xor
(bad)
pushf
xchg
xor
mov
sbb
pop
arpl
or
fdiv
mov
repz
xor
int
mov
comiss
jmp
mov
(bad)
test
(bad)
jmp
in
dec
mov
repz
push
cmp
mov
pop
iret
in
push
fsubr
inc
rol
cld
cmps
xchg
mov
jle
loopne
pop
outs
xchg
pop
push
lods
cmps
sbb
cmp
and
hlt
jb
popa
add
call
jb
jo
xchg
retf
(bad)
fsubr
jmp
add
ret
jle
aas
xor
mov
push
dec
xor
hlt
xchg
lds
inc
or
push
loope
cs
test
cmp
mov
sar
xor
add
mov
adc
sub
or
pop
dec
clc
cmp
sub
adc
cmp
dec
inc
lds
fwait
mov
mov
call
jl
and
inc
mov
add
xlat
int3
inc
mov
test
pop
adc
lods
je
mov
sti
ret
mov
push
cmp
push
cli
(bad)
dec
or
aam
js
retf
out
jbe
mov
sub
jo
mov
jg
mov
lds
cmc
shl
add
mov
outs
in
mov
xchg
add
ins
iret
push
xor
jmp
outs
jg
adc
jbe
add
push
mov
(bad)
mov
sub
push
pusha
and
fmulp
fs
sub
cmp
mov
and
sbb
(bad)
jmp
add
push
aas
jecxz
aad
in
call
enter
(bad)
sbb
xchg
loopne
test
jg
sar
into
inc
outs
out
stos
xor
push
adc
push
(bad)
mov
ficom
jmp
mov
test
inc
(bad)
jmp
jl
jo
clc
xor
cwde
(bad)
xchg
inc
inc
in
add
sbb
adc
or
shl
test
sbb
sub
cmp
cmp
retf
push
cmp
call
sub
xchg
pop
and
ror
inc
inc
jbe
inc
ss
cwde
ss
enter
stc
shl
leave
sub
movs
push
sub
mov
mov
loop
mov
lahf
mov
xor
stos
cmps
shr
idiv
and
sub
dec
adc
pop
pop
xor
out
dec
xchg
push
lea
rol
int3
xchg
imul
inc
push
in
push
push
out
leave
fistp
in
test
push
push
dec
push
mov
or
loopne
ins
xchg
xchg
aam
cdq
shr
mov
jmp
inc
pop
dec
pop
add
dec
dec
jb
in
inc
in
push
fnstcw
cmp
xor
mov
ja
cmps
sub
aas
aad
sbb
mov
pop
cmp
adc
adc
pop
jecxz
mov
dec
gs
icebp
out
mov
cmp
mov
jnp
adc
jl
pop
retf
dec
test
sub
xchg
out
int3
cmp
outs
movs
pop
mov
push
test
cwde
cld
retf
in
(bad)
and
xor
sbb
pop
xchg
hlt
clc
fxch
mov
ret
sbb
or
stos
mov
xor
shr
mov
les
cmp
xchg
lahf
out
dec
ins
lods
les
jne
sub
ret
dec
mov
mov
mov
lods
cmp
mov
jnp
jno
inc
jae
xchg
push
xchg
xchg
mov
sub
adc
sbb
and
(bad)
push
mov
mov
mov
cmp
fcmovnu
sbb
cmp
pop
out
push
bound
xor
and
in
rcr
cmps
fcmovnu
das
lahf
fsubr
push
movs
jg
(bad)
push
(bad)
dec
sar
sti
mov
mov
retf
repz
mov
cmp
mov
fisub
cmp
adc
jge
mov
cmp
out
xlat
in
jl
das
add
imul
lods
aam
sar
stos
jae
or
int
add
iret
les
clc
dec
fld
js
cmp
imul
adc
and
scas
lods
xor
xchg
adc
bound
inc
xlat
in
enter
rcr
pop
and
and
or
in
sbb
jp
sub
(bad)
mov
jmp
fisttp
mov
jl
cmps
pop
or
pop
add
cwde
xchg
push
jmp
pop
mov
rcr
jp
aad
iret
call
jge
jge
cmps
sbb
ins
mov
jo
sbb
rcr
and
jp
fbld
add
int3
pop
cs
shr
fbld
or
mov
test
dec
(bad)
xor
xor
push
jbe
xchg
adc
jae
std
mov
mov
lahf
add
mov
popf
les
lods
xchg
jnp
(bad)
adc
imul
xor
pop
aam
cmps
pop
ret
mov
sub
push
aaa
push
iret
cs
inc
(bad)
sub
retf
in
add
mov
(bad)
ja
inc
push
cmp
retf
mov
add
dec
mov
jg
sti
ror
imul
retf
and
push
aad
inc
fimul
pusha
pushf
fcomp
in
mov
pop
push
push
(bad)
jmp
stos
shr
icebp
cmp
add
cmp
(bad)
aam
pop
ror
cmp
mov
clc
and
pop
test
gs
hlt
xchg
or
ins
xor
clc
pop
stos
stc
ins
out
icebp
pusha
jae
mov
push
repnz
imul
fmul
popa
pop
dec
mov
fst
mov
and
neg
fs
cdq
xchg
dec
std
mov
cmps
push
or
cwde
(bad)
div
es
sub
fldenv
dec
in
dec
mov
inc
mov
mul
fdivp
aad
or
cmp
fldcw
mov
push
jae
pop
inc
loopne
dec
aaa
add
jae
sbb
jmp
les
icebp
mov
shr
inc
push
sbb
pushf
push
pusha
js
push
cmp
pushf
dec
xor
cmps
xchg
sbb
sub
sbb
nop
lods
scas
pop
clc
jecxz
movs
icebp
mov
dec
dec
in
jo
sbb
fsubr
jle
ror
(bad)
out
aaa
hlt
add
in
push
cwde
imul
ret
jnp
sbb
mov
or
adc
cmp
in
jmp
jae
or
jns
adc
cld
in
sbb
mov
in
les
sbb
scas
mov
pop
push
je
xchg
mov
retf
or
jmp
outs
xchg
adc
pop
imul
and
lods
ja
rcr
cmps
fiadd
or
push
or
out
or
wbinvd
imul
in
hlt
push
jo
sub
cli
sub
push
outs
add
pop
sbb
call
or
mov
sbb
shl
mov
or
lods
loope
sbb
inc
nop
add
mov
inc
jb
loop
(bad)
jmp
dec
hlt
mov
clc
stos
push
cmps
clc
bound
aas
out
sbb
call
and
sub
sbb
scas
enter
stos
mov
ds
push
xchg
(bad)
push
push
inc
aad
in
scas
sub
mov
and
and
dec
add
stc
loope
sbb
or
push
ins
lods
test
daa
fistp
fmulp
imul
arpl
jne
sahf
ror
nop
dec
add
out
cmps
fnstsw
adc
and
ret
arpl
iret
cmp
rcl
daa
xor
cs
inc
js
push
jmp
xor
pushf
cli
sub
rcr
xchg
sub
out
les
shl
jmp
mov
adc
(bad)
sub
fmul
rcr
outs
inc
jge
mov
shl
inc
mov
ins
jg
add
shr
fs
ret
ficom
jg
add
aaa
inc
jg
(bad)
ficom
stos
test
(bad)
jmp
jno
xchg
xchg
vpsubw
or
cmp
jne
xchg
jecxz
dec
mov
(bad)
fisub
xchg
adc
adc
stos
adc
ss
or
xor
int
cli
add
mov
mov
call
or
popa
xchg
and
xchg
push
sub
xor
xchg
jne
retf
std
mov
xchg
movs
jo
dec
(bad)
jge
ins
stc
lods
dec
sbb
dec
dec
test
adc
cli
xchg
and
push
addr16
in
inc
xor
stc
xchg
push
shr
ror
pop
fld
shr
add
mov
mov
adc
imul
ja
mov
das
(bad)
in
and
mov
(bad)
jo
pop
in
pop
inc
xchg
out
mov
cmp
jmp
or
push
out
xor
in
int
mov
jg
movs
les
or
sub
call
retf
xor
cmps
and
int3
arpl
test
adc
mov
dec
lea
cli
add
adc
test
cdq
fisub
cdq
lods
dec
sub
and
ja
daa
mov
pop
call
xchg
leave
cmp
add
inc
ja
cld
into
push
mov
retf
sub
int3
into
cmp
ins
movs
jno
scas
mov
mov
jnp
mov
aaa
cli
js
sbb
mov
dec
mov
stos
mov
sbb
lahf
out
cmps
jmp
adc
int3
xchg
or
inc
mov
or
sbb
mov
ret
jle
pop
call
xchg
mov
and
ret
scas
movs
cmp
in
outs
lds
jb
rol
shl
xor
xlat
mov
add
mov
sahf
xor
jno
lods
mov
jge
sub
out
mov
push
jae
ret
sbb
(bad)
in
scas
pusha
jl
sbb
sbb
and
xchg
test
not
test
nop
add
jge
cwde
mov
bound
into
sahf
add
es
cdq
and
jae
mov
sub
(bad)
sub
xchg
outs
jecxz
scas
out
sub
pop
ret
pop
loope
add
retf
pop
pop
and
movs
loope
cli
push
add
retf
lahf
mov
leave
sub
cdq
fcomi
push
cmp
push
js
adc
push
add
ss
outs
bound
sti
fwait
(bad)
ins
xchg
and
push
inc
mov
mov
mov
mov
pushf
in
ja
sbb
cmp
imul
sbb
retf
pop
adc
call
sha1msg2
cmps
jmp
pop
out
mov
nop
xor
ins
pop
add
pushf
jns
push
je
sub
dec
jno
daa
stc
(bad)
das
fiadd
hlt
std
cmps
rcr
fwait
outs
daa
inc
jnp
iret
mov
mov
sbb
sar
inc
loopne
out
les
push
test
inc
mov
add
sub
test
push
dec
cmp
clc
adc
mov
push
xor
ins
aam
add
jmp
or
js
mov
dec
(bad)
dec
dec
mov
jb
std
and
mov
popa
ss
stos
call
mov
inc
mov
sti
cmps
int3
sti
xor
add
test
pop
sbb
(bad)
xchg
jge
cmp
jo
popf
jg
mov
or
aad
rcr
jmp
or
push
xor
mov
out
fstp
lock
dec
push
push
in
inc
jle
jbe
std
into
inc
or
xchg
fistp
add
(bad)
iret
and
inc
jge
inc
sbb
es
adc
push
fisub
bound
and
jle
xchg
retf
cmc
fimul
xlat
shr
or
xchg
and
inc
repnz
pop
push
das
cmp
or
adc
je
jb
add
and
(bad)
ins
(bad)
cmps
ins
xor
int
fdivr
es
mov
lock
pop
into
ret
mov
sub
sub
and
iret
jns
pop
(bad)
rcl
mov
push
(bad)
fcomp
nop
(bad)
add
push
or
inc
adc
inc
adc
mov
pop
sahf
and
mov
sub
inc
das
scas
xor
out
js
pushf
ja
cmps
adc
mov
mov
shl
push
xor
ja
mov
dec
fmul
or
mov
call
pop
popa
cmp
shr
push
push
rcr
inc
pop
jns
jne
addr16
mov
data16
mov
scas
push
int3
mov
xor
push
fistp
ficom
dec
rcl
call
add
adc
pop
test
mov
xchg
shr
ret
push
retf
shl
(bad)
out
push
add
mov
sbb
jne
rol
and
mov
in
stos
stc
mov
mov
repnz
jbe
jae
out
sar
and
push
add
pop
and
mov
inc
sbb
or
fsubr
js
sub
dec
and
mov
pushf
push
out
push
xor
test
icebp
test
scas
fs
les
pop
jo
adc
xchg
int3
not
ret
pop
in
mov
xor
inc
and
in
mov
cmc
popa
das
mov
mov
xchg
daa
sub
pushf
pusha
mov
add
add
push
xchg
aaa
push
pop
add
movs
(bad)
cmc
imul
mov
inc
scas
mov
mov
jns
pop
inc
cdq
push
nop
cli
pop
or
out
ja
jg
and
pop
dec
aam
in
and
scas
sbb
outs
xor
ret
jae
cs
jmp
jbe
jmp
inc
test
pusha
or
xchg
scas
cmp
or
mov
xchg
cmp
xor
cs
sbb
movs
sub
cmp
inc
xlat
dec
cmp
mul
ins
js
sub
aam
popf
lea
sbb
mov
int3
ror
ret
pop
xor
adc
sbb
movs
popf
cmps
adc
xor
mov
sub
clc
jmp
jbe
icebp
data16
push
fwait
xchg
fs
ret
stos
bnd
idiv
inc
popa
cmp
push
adc
push
cmps
stos
add
fisttp
ret
adc
jns
push
xchg
pop
mov
jae
xchg
fcom
fsubr
jp
xor
sub
cmp
in
(bad)
push
pop
pushf
jge
fwait
add
popa
cmp
cwde
icebp
fisubr
ins
xchg
sub
fiadd
dec
adc
lock
jmp
lahf
not
pop
sub
test
ins
lods
in
xor
mov
push
in
jle
lods
iret
les
icebp
push
mov
daa
xchg
ds
sti
sub
fwait
mov
push
adc
fdiv
pusha
repnz
push
push
das
sub
arpl
sbb
cmp
add
div
xlat
dec
jecxz
pop
into
cli
cmps
xchg
mov
xor
out
(bad)
dec
fldenv
and
ss
push
and
cdq
sub
push
enter
mov
pop
mov
(bad)
sub
mov
icebp
jge
data16
nop
in
int
sub
stos
js
add
mov
mov
adc
mov
je
repz
xor
inc
adc
jge
mov
xor
test
push
stc
fsub
cmp
xor
mov
cmp
sub
dec
lds
(bad)
sub
push
call
inc
dec
mov
ja
xor
pop
jmp
ja
retf
jb
push
dec
sub
out
or
je
cmp
test
mov
dec
in
jecxz
xlat
adc
aas
jae
scas
dec
out
mov
cmc
jnp
mov
shr
jle
mov
mov
in
sub
idiv
in
rol
pop
push
push
sbb
or
mov
stos
jbe
rcr
js
ins
pop
pop
fcom
call
xor
loope
dec
cmp
sub
mov
dec
push
xchg
pop
addr16
push
pop
inc
outs
test
add
repnz
mov
xchg
int
retf
aaa
cmp
in
shl
(bad)
adc
fisubr
xor
test
cmps
cmp
fisub
rcl
and
push
(bad)
xor
mov
cmp
add
cmp
popa
jo
dec
jecxz
mov
dec
cld
adc
cmps
or
sbb
adc
hlt
lea
xor
ret
cmp
(bad)
movs
out
xchg
ja
test
fwait
loope
mov
dec
clc
stos
fld
fcmovnbe
jae
test
xor
addr16
xor
mov
pop
add
pushf
sbb
loope
stos
inc
fwait
mov
pop
or
cmps
mov
push
mov
(bad)
lods
fimul
pop
xchg
mov
loop
(bad)
xchg
add
cmps
lods
ret
pushf
and
fmul
lock
or
dec
(bad)
repz
js
iret
add
or
sbb
popa
fwait
and
fs
cld
mov
daa
cmp
mov
mov
(bad)
shl
daa
sbb
mov
ds
adc
push
nop
je
mov
rcl
je
and
pop
aad
pop
jne
cmps
sub
sub
bound
cmp
xchg
and
in
dec
mov
retf
test
cld
movs
into
mov
imul
inc
iret
cmp
scas
dec
imul
nop
popa
(bad)
ficom
jl
scas
rcl
movs
js
mov
and
xchg
jmp
and
fisubr
aas
xchg
and
pop
(bad)
mov
mov
cld
inc
outs
mov
test
das
mov
jns
add
adc
retw
dec
cmps
jne
add
outs
pop
jmp
push
sub
xor
mov
inc
lods
xlat
mov
es
in
inc
push
nop
out
inc
mov
mov
sub
ret
addr16
mov
and
sub
enter
or
lock
lea
cmp
add
int3
jns
and
imul
and
bnd
addr16
xchg
loop
sub
sbb
out
mov
xchg
or
dec
mov
out
fnstenv
jno
arpl
mov
ret
in
gs
pop
pushf
ja
push
retf
xchg
jmp
xchg
stc
sub
movaps
dec
retf
psubw
xchg
inc
loope
lds
sbb
into
pop
jns
shr
(bad)
fdiv
int3
jp
(bad)
xor
leave
std
xchg
ficom
or
ds
dec
and
aaa
mov
mov
stos
aas
jo
ds
or
push
xchg
or
jle
mov
sti
addr16
sub
and
mov
outs
mov
clc
dec
call
xchg
cmp
inc
push
addr16
out
sbb
push
fwait
enter
fadd
add
dec
test
push
sbb
pop
cdq
pop
or
sub
pop
dec
cmp
mov
sbb
mov
imul
jno
call
mov
mov
or
popa
(bad)
ror
cli
mov
jmp
rol
add
mov
inc
aad
sbb
cdq
jb
(bad)
clc
push
call
dec
in
adc
fs
or
or
cmp
fadd
shr
sbb
lock
shl
push
cdq
mov
enter
call
push
adc
add
mov
adc
inc
in
pop
adc
mov
xor
(bad)
bnd
jmp
fdivr
mov
jg
aaa
cs
xor
gs
das
xor
mov
xor
push
push
loope
sub
data16
pop
(bad)
int
cmc
stos
mov
fxch
outs
sbb
popf
(bad)
inc
mov
leave
(bad)
dec
loop
sbb
cdq
std
cmp
sti
ss
dec
jle
cmc
dec
dec
sub
jno
cmp
cmp
xchg
sub
mov
mov
push
dec
jbe
mov
fs
cdq
jbe
sbb
add
xor
popf
push
and
test
call
retf
ins
adc
xor
xchg
loopne
(bad)
aas
xchg
and
pop
(bad)
pop
mov
bound
and
hlt
div
test
mov
popa
jle
jns
mov
stc
sub
add
mov
leave
pusha
adc
std
or
cwde
fsub
xor
shl
jne
(bad)
jb
loop
pop
in
lea
jecxz
ret
push
mov
cmp
das
or
pop
or
stos
fistp
inc
xchg
mov
aad
sbb
stos
mov
pop
aam
pop
mov
adc
push
cli
pushf
pop
push
and
in
cmp
psraw
bnd
jne
cmps
sbb
jmp
dec
sbb
push
mov
std
xchg
cmp
sub
xor
mov
fmul
lods
inc
fadd
dec
scas
xchg
lds
cmps
stos
adc
bound
inc
mov
sbb
and
bound
jg
arpl
xor
fxch
daa
jg
xor
repz
ss
retf
cmps
cld
push
lea
mov
sahf
loopne
adc
cmc
jo
and
mov
sub
xchg
mov
into
nop
clc
mov
test
loopne
outs
js
xor
dec
stc
lods
xchg
in
pop
fs
ins
jl
inc
data16
mov
pop
sub
and
ins
mov
mul
ja
sub
xlat
inc
ret
xchg
fwait
inc
loope
ja
retf
fild
sub
inc
iret
inc
(bad)
xchg
and
loopne
jmp
push
mov
fidiv
xchg
test
sbb
test
mov
push
and
fdiv
xlat
arpl
sahf
mov
sub
sti
ins
js
mov
sub
outs
cmp
xchg
inc
and
inc
xor
adc
les
jl
addr16
push
inc
inc
add
(bad)
imul
pop
adc
jae
or
pop
ja
inc
sar
dec
push
int3
outs
pop
add
xlat
xchg
lds
cmps
add
loopne
fldenv
inc
(bad)
fcomp
out
and
xchg
out
sbb
cmps
pusha
lahf
inc
int3
das
cmp
mov
pop
mov
mov
inc
mov
and
lock
scas
jmp
xchg
pop
int3
or
mov
mov
mov
shl
dec
add
pop
shr
and
fistp
idiv
push
cmp
mov
loop
mov
cmps
jbe
pop
dec
jp
push
or
xor
push
lea
xchg
aad
pop
je
out
pop
push
and
pusha
sub
sbb
jo
(bad)
mov
pop
cdq
pop
adc
or
stos
pop
les
adc
je
sbb
cdq
fimul
lods
mov
scas
xor
bound
or
adc
leave
ja
les
xchg
jnp
ret
inc
not
leave
std
xlat
loope
pop
push
add
sub
mov
and
sahf
add
call
dec
push
add
jmp
sbb
(bad)
mov
aam
jg
xchg
imul
rcl
mov
ret
mov
xchg
dec
iret
adc
xchg
dec
movs
push
mov
(bad)
cs
icebp
pop
jg
fild
dec
and
lds
sbb
xchg
add
daa
cmps
sbb
jmp
jnp
repnz
out
inc
pop
sbb
leave
xor
mov
mov
jne
and
xor
(bad)
mov
pminub
or
ss
scas
in
mov
gs
inc
xor
dec
and
pop
mov
enter
jge
mov
jb
jg
mov
dec
sbb
and
lea
mov
inc
jg
dec
sar
or
xchg
(bad)
enter
sub
push
jg
cdq
enter
inc
dec
daa
in
fstp
xchg
mov
xchg
and
in
sbb
mov
cmp
cdq
and
popf
pusha
mov
sbb
outs
and
or
jne
jo
and
xchg
popa
popa
jecxz
out
mov
jb
dec
mov
cmp
aam
cwde
push
jnp
sar
jmp
mov
in
mov
aas
mov
jnp
ror
jl
nop
addr16
inc
cmp
add
ins
imul
cmp
setb
xchg
lea
or
inc
push
in
das
jp
rol
jp
clc
xor
lahf
mov
push
das
fnstenv
push
mov
adc
sbb
(bad)
mov
(bad)
int
stos
mul
inc
mov
in
out
mov
scas
sub
add
shr
cmp
push
nop
pop
sbb
icebp
pop
jmp
out
cmps
or
mov
shr
sahf
add
mov
mov
es
gs
es
and
cwde
push
jge
test
xchg
iret
out
sub
in
fisubr
mov
cmp
cmp
xchg
push
call
inc
jle
cmc
leave
dec
mov
dec
xor
xchg
into
mov
adc
pop
int3
(bad)
call
xchg
add
xchg
addr16
cdq
loop
ja
pop
and
push
sahf
mov
movs
inc
mov
sbb
or
or
in
in
loopne
mov
dec
inc
fsubr
ret
dec
jg
jnp
hlt
das
inc
pop
lds
ds
imul
add
dec
sbb
mov
jp
push
in
(bad)
fidiv
adc
int
jb
sub
jne
or
or
rol
cmp
pop
repz
in
das
jbe
mov
mov
dec
scas
enter
les
xchg
dec
fild
inc
inc
inc
hlt
(bad)
dec
lds
push
in
xor
mov
cmps
mov
push
dec
ja
fisttp
xchg
mov
loopne
daa
sub
pop
mov
dec
pop
inc
mov
outs
aad
leave
mov
ds
inc
stc
mov
js
ins
xor
call
je
mov
test
inc
stc
jo
xchg
xor
outs
cld
add
xor
push
xor
mov
fsubrp
outs
clc
cwde
push
lds
lods
dec
ret
fadd
mov
cmp
int3
sahf
or
jbe
xor
or
jg
and
aaa
jbe
daa
mov
adc
in
mov
push
and
adc
data16
mov
(bad)
xchg
inc
xor
mov
lods
loop
or
jb
cmps
dec
gs
call
jns
outs
cmps
out
mov
out
jg
neg
mov
push
stos
movs
add
xor
lahf
jbe
and
sub
jmp
sbb
enter
mov
pop
mov
outs
les
and
cwde
push
stc
shl
test
jle
mov
daa
movs
pop
push
xor
inc
mov
xchg
inc
movs
nop
ins
adc
(bad)
pop
push
mov
mov
mov
(bad)
cmp
mov
cmps
fdivr
pop
stos
fstp
push
jns
icebp
mov
scas
popf
movs
lock
pop
mov
fwait
dec
pop
add
int
mov
test
ja
xor
push
xor
pop
dec
lock
and
dec
or
mov
(bad)
rcr
sub
cmp
jl
in
cdq
(bad)
mov
lods
adc
and
scas
jmp
jg
bound
in
(bad)
sub
and
mov
adc
xor
push
std
mov
add
inc
and
rol
ins
dec
test
sub
or
stc
inc
or
fcomp
addr16
cs
rcr
aaa
icebp
mov
jb
rep
xor
imul
rcl
(bad)
cmc
cmp
cmp
mov
xchg
jb
addr16
pop
inc
jecxz
mov
add
dec
or
fst
mov
lds
shl
mov
xchg
xchg
cmc
mov
ins
xchg
jmp
dec
and
pop
mul
lock
je
dec
cmp
outs
test
nop
inc
pop
int
stos
or
and
addr16
repz
push
and
dec
in
xchg
pop
ret
popa
mov
movs
inc
adc
jl
mov
xchg
movs
inc
push
or
mov
adc
mov
xchg
xchg
lahf
mov
xchg
jae
cmp
push
push
loop
sbb
repnz
jbe
inc
js
jns
xchg
or
jp
movs
lahf
scas
jns
or
ins
cmp
pop
and
sbb
or
leave
and
add
sbb
pop
int
ds
add
pushf
and
(bad)
lock
pushf
scas
adc
call
(bad)
push
mov
jno
mov
imul
cmp
adc
jp
sbb
lods
jg
push
adc
mov
sbb
xor
mov
retf
lahf
or
sub
or
jb
scas
cmp
lahf
pop
cmp
(bad)
nop
shl
sbb
mov
xor
adc
cdq
adc
push
cmp
or
or
jle
inc
sbb
popa
adc
loope
(bad)
sub
jbe
outs
scas
dec
adc
or
xchg
sbb
std
add
mov
mov
jmp
cli
cwde
bound
cmp
sbb
mov
loope
jp
aas
ins
lock
mov
pop
fmul
or
push
not
adc
sub
jnp
ret
add
push
repnz
lahf
ret
retf
fnsave
movs
pop
test
sbb
dec
pop
sub
and
sub
(bad)
adc
test
sub
(bad)
dec
(bad)
ja
hlt
lds
pop
mov
push
lahf
inc
ds
fcom
mov
aam
pop
inc
xor
mov
movs
clc
sub
fst
push
and
lock
xor
jmp
ja
loope
cdq
(bad)
push
jbe
ss
sbb
inc
ins
popa
mov
fcomip
scas
iret
ss
shr
sub
jae
sti
jmp
call
sub
push
or
and
(bad)
jge
pushf
repnz
retf
jmp
push
xchg
xchg
xchg
loopne
call
mov
xor
(bad)
in
cmp
or
ins
jno
cmp
popf
addr16
or
cs
test
loopne
pop
pop
rol
mov
out
int3
jl
pop
cmp
stc
xor
pop
aam
aaa
jmp
mov
out
mov
shl
popf
dec
sbb
ds
or
mov
idiv
push
int
stc
dec
pop
bound
lea
xor
lahf
mov
or
dec
das
or
pop
or
in
pop
nop
in
or
and
cld
ins
imul
add
xor
js
dec
call
das
iret
pop
in
mov
popa
or
lods
(bad)
(bad)
cmps
mov
rcl
xchg
fstp
jmp
(bad)
je
xchg
rcr
pop
and
push
push
mov
xchg
out
out
inc
and
leave
jmp
or
cmps
dec
and
or
icebp
cmp
pushf
push
push
lods
sub
repnz
and
fadd
ins
rol
shl
cli
imul
dec
retf
cmc
jle
inc
push
adc
js
data16
and
ret
and
push
push
(bad)
movs
xlat
and
scas
pushf
pop
mov
mov
and
cmp
push
fcmovu
test
fs
out
xchg
inc
mov
sub
scas
push
sub
adc
push
mov
(bad)
push
int3
xchg
mov
mov
js
mov
cmps
sar
js
mov
cbw
push
popa
je
punpcklwd
out
fist
cmp
adc
pop
sbb
and
inc
mov
das
(bad)
pop
mov
stos
cmp
retf
add
sub
int
(bad)
loope
jmp
jp
adc
mov
and
popf
xchg
sbb
outs
mov
xor
mov
mov
adc
fwait
mov
and
push
mov
xor
ficom
or
inc
inc
icebp
cdq
xchg
push
not
in
cmps
xor
inc
into
mov
rcr
xlat
cwde
(bad)
sbb
and
ds
popa
jbe
aaa
cmp
(bad)
sar
fstp
sti
xchg
push
pop
sar
out
mov
jge
inc
cld
and
push
push
xchg
cmp
fsubr
retf
jle
push
psubsw
and
pop
sbb
inc
popf
sub
pop
xchg
in
ret
mov
xchg
(bad)
and
jmp
dec
sub
nop
xchg
jae
mov
or
push
fstp
cli
movs
jg
hlt
and
mov
adc
mov
xchg
mov
sub
sub
jg
out
pop
call
ins
call
cmp
scas
movs
imul
push
xor
mov
xchg
fadd
inc
mov
jno
mov
popa
pop
(bad)
push
int3
push
pop
lods
adc
or
lods
sbb
fisub
inc
mov
xchg
cli
xchg
dec
add
push
iret
call
inc
mov
sub
retf
stc
in
cmps
shl
enter
fisub
ret
mov
ret
ror
aad
pop
mov
xchg
mov
es
push
and
cmc
ficom
inc
test
ins
out
push
clc
aaa
pop
cmc
popf
inc
ins
int
jmp
outs
push
inc
rol
inc
cmp
sbb
adc
and
bound
jne
rcl
push
push
cmc
les
dec
out
xlat
out
ins
ss
xchg
jmp
(bad)
cmps
or
not
mov
rol
xchg
lods
inc
and
aaa
aam
cmps
jg
daa
pop
sub
mov
dec
jno
retf
fmul
and
inc
mov
(bad)
fdiv
mov
lahf
jmp
cmp
shl
mov
jmp
sub
pop
cmp
adc
icebp
retf
inc
and
cli
bound
jne
inc
idiv
inc
es
mov
aaa
stc
xor
ins
sub
jg
push
jmp
gs
popa
retf
ret
mov
(bad)
jo
lahf
arpl
lea
hlt
mov
inc
jmp
sub
mov
or
xor
pop
std
inc
xor
dec
rol
jmp
test
ss
pop
jp
fnstcw
xchg
push
push
std
mov
xchg
icebp
mov
nop
mov
and
in
les
or
jno
dec
inc
ja
js
sbb
pop
jge
scas
in
fcomp
fcom
call
jmp
push
push
xor
movs
xor
cld
adc
xchg
xchg
or
xor
pop
mov
imul
test
mov
jb
stos
inc
jg
cmp
fld
ret
cmp
aaa
shl
pop
add
test
jbe
into
(bad)
rol
xchg
gs
cmp
cmps
sub
push
cmc
sub
inc
inc
xadd
xchg
loop
xlat
sub
ins
mov
jmp
movs
retf
jno
ins
xchg
(bad)
jle
pop
test
retf
(bad)
mov
xchg
push
push
in
fsub
xchg
xchg
inc
cmp
mov
shr
jge
ror
mov
xor
call
int
dec
sbb
(bad)
clc
mov
lahf
cmc
leave
stos
loopne
movs
out
call
and
lods
fidivr
add
adc
test
pop
xchg
sub
fsub
mov
sub
dec
push
and
imul
and
sub
jbe
rcl
mov
sbb
scas
dec
imul
xlat
xchg
outs
xchg
sti
(bad)
xor
pop
pushf
out
jmp
cwde
dec
mov
fcomp
pop
mul
fld
movs
jmp
cwde
enter
test
shl
and
mov
jp
fs
pushf
mov
fucomp
fs
(bad)
push
aaa
das
adc
and
sub
lods
(bad)
int
xchg
fild
ins
sub
mov
jge
popa
icebp
add
and
sub
jmp
dec
call
xchg
xchg
cmps
fst
jbe
ss
call
and
inc
or
pop
or
div
push
cmp
rcl
adc
imul
cmp
xlat
jnp
popf
js
call
ret
push
ins
and
dec
fwait
inc
out
pushf
cmp
pushf
sbb
(bad)
cmp
rcr
ds
mov
call
jecxz
add
mov
sbb
mov
je
retf
ss
adc
mov
jl
test
and
push
or
and
xchg
out
pop
imul
adc
or
daa
jo
or
ret
test
je
cmp
ds
ret
xor
lods
mov
loop
sub
scas
xchg
dec
jmp
fdiv
add
enter
dec
cmps
into
sbb
call
add
inc
mov
outs
push
inc
sbb
(bad)
fsub
sbb
stos
mov
xchg
mov
pop
out
mov
stc
sbb
push
push
and
jmp
nop
nop
int
es
adc
xor
les
fs
xor
mov
cmps
push
fist
dec
add
jae
xor
in
mov
(bad)
jb
arpl
fdiv
movs
js
dec
pop
fld
test
xchg
sbb
fist
adc
xchg
or
ret
std
push
add
(bad)
cwde
jp
mov
push
inc
add
push
js
iret
cmps
ins
out
jmp
scas
dec
dec
xlat
addr16
data16
fld
iret
popf
mov
imul
pop
and
add
scas
pop
push
test
pop
pop
and
nop
pop
xchg
shr
enter
mov
frstor
fsub
test
int3
xchg
mov
mov
or
adc
xor
pop
cmp
in
in
push
sub
dec
test
jnp
mov
out
adc
jb
test
mov
jbe
cmp
pop
int3
clc
pop
jb
or
or
xchg
mov
test
mov
push
push
sub
gs
stc
test
cmp
lods
inc
dec
shl
pop
xlat
mov
data16
scas
xor
or
(bad)
push
jb
add
dec
ins
jg
in
inc
jmp
and
cmps
(bad)
mov
inc
xchg
fsub
movsx
nop
xchg
les
enter
adc
mov
xor
xchg
test
sahf
outs
mov
popf
mov
int
cmps
scas
shl
sbb
sub
scas
and
sbb
loop
pop
outs
mov
jo
mov
fdivr
sub
lds
push
lods
pop
into
retf
(bad)
in
or
mov
ret
add
jle
mov
pop
int
xor
jle
xchg
push
test
addr16
aas
arpl
jns
shl
xor
scas
xchg
or
jl
mov
mov
in
cs
inc
retf
in
jecxz
or
arpl
cs
imul
push
call
icebp
and
xlat
inc
xor
jg
jg
aam
test
push
iret
fnop
and
sub
ret
lock
test
sub
mov
cmp
mov
jnp
call
mov
out
or
stc
pop
jno
aad
pushf
fistp
hlt
(bad)
and
inc
sahf
xchg
push
in
sar
xrelease
xlat
imul
into
sub
add
jle
add
retf
adc
inc
fcom
mov
adc
xchg
in
jp
sub
(bad)
jle
fld
dec
pop
ins
enterw
jle
loopne
movs
mov
cmp
in
outs
cld
stos
mov
mov
mov
sub
cmp
mov
lods
stc
rcr
xchg
pop
mov
fisttp
mov
adc
arpl
xor
mov
lea
mov
call
loope
xor
dec
jl
mov
xchg
and
icebp
cmps
mov
mov
cmp
es
jle
jmp
clc
xor
jl
pop
int3
repnz
push
ins
test
dec
cmp
fldcw
push
enter
aad
xchg
cmps
xor
scas
adc
cdq
add
mov
dec
outs
xor
retf
outs
ret
bnd
call
neg
lods
and
push
ss
(bad)
or
inc
adc
mov
mov
(bad)
mov
jno
dec
adc
test
movs
outs
mov
sbb
pop
and
mov
pop
neg
mov
add
sahf
cmp
mov
std
cmps
mov
(bad)
arpl
(bad)
dec
mov
into
inc
pop
fwait
repnz
test
pop
sbb
and
jbe
lock
pop
test
inc
scas
jp
ret
clc
sbb
inc
fisttp
add
push
sbb
and
sbb
mov
lods
lock
(bad)
int
xlat
add
jnp
(bad)
in
ss
not
or
pop
xor
xchg
dec
out
sub
and
aad
cli
jmp
ss
es
not
icebp
jmp
mov
adc
arpl
mov
sbb
xchg
fwait
mov
aam
mov
imul
dec
adc
pop
or
ret
or
sub
sbb
int
test
mov
push
mov
pop
sub
adc
push
std
or
mov
add
ret
fisttp
cmps
cdq
jnp
ficomp
popa
xchg
jmp
fsub
xor
pop
jge
ins
push
repnz
jbe
test
fadd
or
das
xchg
cdq
push
pop
dec
nop
mov
mov
inc
or
into
adc
pop
xchg
mov
lods
pop
je
mov
sbb
dec
arpl
popf
mov
push
enter
aad
jbe
cmp
outs
out
push
out
pop
cs
lods
ret
cmc
and
sti
in
add
sti
cwde
adc
mov
in
lock
sbb
test
in
cmp
mov
and
push
retf
and
ins
fs
stos
push
mov
iret
add
out
data16
xor
xchg
call
jbe
cmp
inc
addr16
ffree
cmps
sub
arpl
dec
mov
aas
cdq
inc
js
cmp
fisttp
jo
mov
xchg
push
jp
mov
jp
sbb
out
push
in
adc
jno
repnz
cld
daa
popa
push
(bad)
(bad)
jo
enter
sub
mov
jmp
scas
jns
nop
dec
test
adc
ss
add
mov
xor
fcomi
ret
mov
js
jp
jae
div
cs
add
cmps
pop
rcr
mov
shr
cwde
mov
adc
pop
(bad)
in
and
in
xor
jo
jle
cmp
sar
lock
and
je
jno
inc
not
(bad)
xchg
dec
jo
or
cmps
jb
dec
inc
mov
push
bound
lea
pop
in
jge
stos
inc
and
jmp
mov
dec
pop
into
stc
inc
mov
dec
cs
xchg
inc
mov
inc
loopne
retf
loopne
call
inc
inc
inc
mov
fs
and
jbe
mov
add
bound
mov
pop
push
and
inc
jl
iret
add
loopne
add
or
popf
mov
outs
dec
mov
lods
sbb
dec
hlt
mov
out
pop
and
das
clc
int3
int
test
inc
jecxz
dec
cmp
test
loop
push
(bad)
mov
dec
fstp
inc
push
and
jle
push
scas
rcl
enter
das
loop
push
xor
lods
ja
push
scas
ins
or
fs
push
clc
xor
out
dec
loopne
leave
gs
js
sbb
into
jb
adc
inc
scas
or
imul
out
fadd
jmp
mov
push
lahf
add
dec
xchg
mov
pop
fcmovb
inc
call
jge
or
add
es
push
mov
jl
cdq
pop
jae
rcl
out
or
mov
retf
(bad)
aad
sbb
cmps
pusha
or
jg
(bad)
hlt
xchg
dec
sub
sub
mov
mov
lahf
sub
(bad)
cmp
adc
jo
mov
dec
arpl
movs
jmp
jae
cmp
sbb
dec
mov
xchg
dec
js
jmp
add
push
out
sti
leave
sbb
mov
call
push
stc
rcl
lods
shl
adc
ret
pop
push
scas
mov
push
cs
cmps
test
std
clc
dec
scas
enter
adc
jge
cmp
add
xchg
sub
cmp
pushf
xchg
sbb
xor
into
adc
loope
or
jnp
mov
fild
ja
retf
adc
add
lds
mov
movs
dec
lock
cli
jmp
rol
jno
push
and
out
xchg
ds
push
push
call
adc
and
mov
(bad)
daa
rol
arpl
sub
out
je
xchg
add
and
in
mov
add
pop
jbe
sti
and
ins
pop
fidivr
std
jbe
(bad)
mov
or
int
sbb
retf
jne
pop
fst
adc
add
fs
sbb
mov
pop
adc
pop
shl
js
mov
mov
ss
mov
sub
add
sahf
gs
fld
xchg
jle
repnz
and
jne
jmp
out
jmp
lods
cmp
mov
jecxz
xlat
rcl
xor
mov
jne
int
enter
dec
or
sbb
sbb
movs
fisubr
fwait
sbb
xchg
icebp
shr
retf
imul
jmp
mov
xchg
adc
mov
out
jecxz
xchg
inc
mov
dec
push
adc
dec
sub
adc
in
mov
xor
or
mov
mov
xchg
in
test
rcr
retf
test
je
aas
les
ja
inc
jg
fldenv
sbb
lea
shl
dec
shr
push
cli
aad
inc
jbe
cdq
jge
repnz
in
xor
jmp
sbb
aad
push
das
test
dec
mov
addr16
xor
(bad)
mov
jmp
jle
outs
xchg
outs
push
dec
mov
inc
inc
int3
in
adc
push
or
mov
jnp
push
daa
into
jg
xor
or
lock
inc
in
or
pop
mov
inc
in
push
adc
xchg
xchg
dec
rcl
sar
jns
fs
sub
(bad)
push
bnd
fwait
imul
into
and
jecxz
xchg
inc
arpl
mov
ins
xchg
aaa
cmp
ins
dec
popf
lods
(bad)
ror
les
jg
add
ror
or
add
fwait
scas
push
aas
aas
pop
outs
pop
ins
xchg
int
dec
loope
sbb
and
call
inc
fisub
mov
jmp
pushf
pushf
sahf
sbb
inc
pop
lds
and
and
cld
xor
fucom
gs
push
aaa
aam
push
add
shl
jb
jp
aam
ret
mov
inc
dec
pop
add
sbb
into
or
(bad)
hlt
out
cld
loope
test
lods
stos
js
sbb
call
dec
fbstp
(bad)
adc
cs
jmp
jecxz
cmps
cld
add
ins
inc
inc
and
aaa
sbb
ds
dec
ret
in
or
and
push
xor
push
jmp
pop
es
(bad)
jg
mov
pop
cmps
push
xor
or
push
dec
xchg
(bad)
adc
and
jecxz
pop
xchg
mov
mov
push
xor
inc
mov
mov
inc
jecxz
push
xchg
pop
cmps
inc
jecxz
dec
jno
cdq
inc
out
scas
js
rcl
nop
add
xchg
dec
movs
lods
or
jns
xor
cmps
mov
sbb
adc
adc
dec
out
jns
inc
hlt
loop
mov
ins
inc
pop
cmp
stos
iret
add
mov
in
cmp
jno
mov
mov
adc
ins
dec
add
test
mov
sub
add
inc
stos
jmp
cmp
pop
push
or
add
cmp
ja
xchg
jp
(bad)
mov
sbb
and
or
pop
test
push
jo
cmp
push
lods
or
pop
(bad)
dec
push
sub
mov
mov
jmp
push
lea
mov
push
repz
stos
and
ins
fcomp
push
fwait
fs
mov
out
and
jmp
inc
aaa
add
push
and
(bad)
clc
(bad)
or
mov
dec
rcl
mov
fwait
ins
sub
scas
xchg
jns
ss
leave
mov
dec
ss
fstp
pop
sub
out
inc
sbb
jno
jecxz
jns
stos
sub
fidiv
mov
nop
mov
(bad)
(bad)
in
xchg
or
mov
sbb
dec
mov
(bad)
mov
and
sbb
out
pop
xchg
ins
(bad)
lea
or
mov
xor
popf
xor
push
(bad)
pusha
das
cmc
xchg
xrelease
pop
ret
test
(bad)
(bad)
push
fst
mov
sub
sub
cmps
scas
sub
js
imul
xor
inc
pop
out
adc
cmc
pop
sbb
xor
lock
out
mov
mov
out
mov
mov
stc
push
pop
(bad)
loopne
fcom
cs
xor
mov
(bad)
mov
xchg
clc
mov
cmp
fcmovu
mov
and
jl
xchg
pushf
(bad)
lahf
push
adc
loope
ja
ror
xchg
or
sub
out
pop
sub
shl
lods
mov
pop
jle
imul
xchg
push
xchg
shr
(bad)
hlt
add
sbb
mov
shr
call
xchg
push
(bad)
ret
je
clc
into
(bad)
mov
imul
shr
(bad)
xlat
sub
adc
mov
hlt
xchg
push
jmp
mov
jecxz
leave
push
in
bound
mov
and
dec
or
outs
jno
sub
mov
inc
lods
sub
clc
out
(bad)
outs
repz
(bad)
fsub
jge
stc
xchg
ret
std
and
xlat
dec
mov
cdq
int
pusha
shr
rol
push
(bad)
mov
xchg
ret
aad
mov
aaa
gs
xchg
fdivp
xchg
outs
sub
sub
call
fstp
out
outs
push
ss
push
sti
cmps
retf
in
sbb
fmul
pop
jmp
ja
loop
mov
fidivr
xor
dec
push
arpl
push
mov
call
stos
adc
retf
enter
mov
mov
lods
shl
ss
inc
jns
jp
cmp
js
xchg
loopne
test
sbb
inc
add
jnp
cs
in
rcr
popa
addr16
jp
shl
cmp
xor
test
mov
pop
mov
aam
call
mov
mov
fwait
xor
fisub
mov
into
cmp
int
jmp
and
adc
movs
mov
aam
sbb
jmp
mov
sbb
fisubr
popf
ret
lods
gs
lods
sar
adc
nop
pop
imul
pop
adc
jbe
mov
pop
fwait
cmp
xor
pop
and
js
movs
dec
adc
std
in
add
adc
and
xchg
jbe
lahf
fild
popf
fsubr
sub
test
sti
aam
int
xor
and
push
hlt
pop
(bad)
mov
bswap
ror
xchg
pop
fadd
ins
stos
out
push
lods
inc
xor
rcl
(bad)
adc
and
dec
add
push
(bad)
popf
and
jmp
movs
jecxz
nop
les
aad
out
xlat
inc
pop
sub
lods
repz
cdq
in
and
mov
ret
mov
jmp
inc
adc
loop
add
retf
aaa
enter
push
cmp
mov
rcl
sbb
fcom
in
nop
add
sub
fadd
jns
popf
call
xchg
loopne
into
popf
mov
shl
mov
imul
mov
pop
xchg
mov
cwde
jbe
mov
jne
push
jmp
cmps
mov
pop
sbb
xchg
jle
mov
xchg
sub
loopne
adc
or
(bad)
mov
sar
cmc
cdq
dec
jmp
mov
(bad)
jge
movs
es
pop
pslld
xor
aaa
leave
jmp
push
ja
jg
shr
sub
cmps
jp
sar
jle
jno
adc
in
test
ss
stos
outs
retf
cwde
rol
scas
ret
jl
cwde
fs
jg
adc
cwde
dec
cwde
loope
cwde
and
call
lds
pop
bound
or
fs
call
popa
inc
js
rol
fld
int3
mov
jno
mov
xlat
js
pop
xor
repnz
xchg
mov
outs
or
pop
inc
ss
jmp
sbb
int
sbb
std
in
jo
jbe
xchg
imul
or
inc
jg
push
fisttp
adc
daa
in
cmps
cli
pop
addr16
adc
add
fimul
mov
sar
retf
cmp
add
imul
pop
hlt
lea
clc
push
popf
call
pop
mov
cmc
push
repz
into
cmps
cs
fsub
fld
sub
retf
jnp
ins
xchg
iret
imul
outs
outs
or
mov
sub
enter
hlt
adc
inc
dec
sub
pop
lds
cdq
add
stos
adc
mov
movaps
sub
push
dec
and
mov
add
cmp
jne
adc
pop
or
pop
sub
enter
arpl
fcomp
jo
ins
adc
sub
repnz
inc
retf
pop
test
xchg
ja
stc
pop
mov
mov
and
mov
jp
push
sub
ds
mov
mov
mov
jne
mov
cld
adc
aad
je
inc
outs
femms
jb
sbb
or
pop
sets
aas
sbb
add
adc
stos
nop
aad
adc
jns
lea
fwait
push
jb
ja
rcr
pop
xor
int
mov
pop
push
mov
dec
sub
cmp
adc
lahf
xlat
xchg
cmp
sar
sub
repz
push
hlt
mov
jno
cdq
ret
pop
loope
mov
mov
ret
pop
bound
adc
push
pop
xor
inc
test
and
push
and
or
in
cwde
icebp
mov
test
mov
add
pop
popa
inc
fdiv
stos
push
mov
std
mov
arpl
adc
cmp
je
sbb
ja
dec
leave
mov
xor
addr16
adc
stos
cmp
adc
daa
data16
cmp
fnstsw
ret
inc
mov
inc
mov
dec
pusha
mul
mov
aam
push
xchg
jo
int3
in
xchg
loop
push
mov
shl
stc
pop
enter
aas
dec
push
mov
(bad)
stc
cmp
mov
and
push
(bad)
sub
inc
stos
sar
sahf
add
jnp
addr16
sub
rol
mov
or
iret
cmp
ror
cmc
(bad)
fs
retf
clc
push
and
sub
icebp
retf
rcr
int3
xchg
dec
xor
mov
aas
push
and
sar
nop
in
add
loop
dec
dec
pop
pop
pop
or
sbb
xor
xchg
dec
jmp
mov
sbb
sar
call
adc
jle
sub
xor
dec
pop
jne
cmp
jno
test
pusha
fisttp
push
popa
int3
xor
xchg
cs
icebp
idiv
rcl
jns
test
(bad)
in
add
mov
jbe
xchg
cld
sbb
adc
rol
adc
fnstcw
cmp
imul
dec
inc
mov
or
jmp
sbb
fwait
pop
xchg
(bad)
rcl
and
adc
nop
sub
push
jle
push
sbb
cmp
and
cmp
jp
mov
sub
add
in
mov
ja
cmp
dec
jecxz
sti
ret
into
xchg
push
sbb
push
push
pop
dec
ins
sbb
ins
into
arpl
mov
or
pop
mov
call
jg
cmp
push
loop
xchg
mov
pop
cli
out
push
fst
xchg
xchg
mov
dec
vprotd
xor
aas
mov
push
aam
arpl
test
sbb
mov
sub
ins
jmp
(bad)
xchg
into
adc
mov
dec
jo
or
mov
stc
mov
push
iret
jp
iret
es
mov
ja
jo
retf
and
xor
paddq
dec
aam
xor
repnz
pop
lea
sub
add
loopne
cmp
xchg
iret
jmp
enter
jbe
retf
sub
cmc
mov
jne
and
jp
into
ins
mov
lds
cwde
inc
in
in
pop
in
adc
add
outs
jnp
add
sbb
cmps
(bad)
push
bound
mov
xchg
neg
jnp
mov
or
scas
xchg
es
inc
mov
(bad)
adc
xchg
enter
and
mov
stos
fidiv
cmp
cmps
and
rcl
imul
push
xor
movs
jl
(bad)
inc
icebp
fistp
mov
lahf
mov
ficom
pop
js
cmp
(bad)
in
adc
out
(bad)
out
dec
hlt
jmp
enter
div
cmps
test
loop
jge
jmp
shl
into
jmp
movs
fstp
inc
shl
xchg
adc
jns
mov
out
or
push
sbb
mov
or
hlt
dec
outs
jno
inc
and
int
dec
xchg
push
or
and
jmp
pusha
js
(bad)
pop
rol
mov
fstp
cmp
hlt
loope
nop
dec
mov
les
fld
mov
pop
sub
out
lock
fist
push
push
xor
stc
adc
cmp
xor
adc
jbe
js
mov
rcl
shl
mov
jg
or
or
push
or
sbb
pop
jmp
jl
adc
movs
cmp
daa
movs
inc
test
ret
xor
xchg
push
pop
test
pop
cmp
cdq
push
and
pusha
sbb
rcl
add
push
xchg
loop
fldenv
int
rcl
jp
mov
ins
push
jge
sbb
cmp
add
cdq
in
jbe
add
push
jae
retf
or
sub
into
pop
mov
pop
pushf
mov
jb
xor
mov
mov
xchg
inc
popf
maxps
pop
mov
cwde
push
fbld
ins
dec
cmp
xbegin
into
rcl
or
div
idiv
iret
repnz
popf
shr
jecxz
or
push
shl
inc
pop
bswap
pop
jle
cmp
push
xor
jg
jne
mov
push
inc
push
aam
mov
out
movs
icebp
mov
mov
mov
pop
dec
jecxz
stc
cmp
jne
add
ds
dec
push
and
and
out
push
xchg
mov
movs
sub
push
(bad)
out
or
adc
xor
and
dec
push
int3
retf
mov
or
fistp
aas
fidivr
xor
retf
sub
mov
mov
rcl
cmp
ss
in
push
or
jae
in
jne
dec
inc
daa
movs
push
sahf
mov
stos
mov
test
pop
ss
test
push
outs
jg
sahf
inc
or
lahf
loope
push
add
mov
push
fsub
lahf
cli
push
dec
in
leave
adc
ror
pop
test
mov
mov
popa
mov
cmp
mov
sbb
jl
inc
mov
mov
repz
clc
int
out
int
mov
inc
fs
xchg
mov
mov
(bad)
mov
jo
fmul
lds
push
icebp
inc
aam
mov
push
(bad)
jle
inc
out
and
je
stc
add
loop
popf
adc
lahf
scas
add
call
adc
or
or
dec
cmp
fidivr
mov
cdq
inc
xchg
clc
stos
lds
cwde
inc
in
mov
cmps
mov
mov
xchg
fcmovbe
inc
jnp
std
ss
or
mov
sub
iret
or
(bad)
movs
cmp
xchg
fist
add
xor
cmp
popa
pop
movs
ja
dec
adc
ret
xchg
jmp
stc
inc
mov
loopne
cmp
aam
cmc
icebp
pop
or
add
adc
sub
ret
outs
push
and
arpl
jb
push
cwde
call
mov
jns
pop
(bad)
push
xchg
ret
fnsave
lock
adc
call
cdq
mov
fbstp
jg
repnz
inc
xchg
gs
dec
es
mov
leave
xchg
jg
add
add
mov
cmps
ds
je
int
jo
mov
or
mov
retf
xor
lds
or
mov
push
pop
sbb
pop
out
adc
mov
mov
jle
mov
cld
pushf
cwde
pusha
outs
jle
xor
adc
mov
ins
ja
loope
sub
xchg
aad
and
dec
icebp
jle
es
enter
inc
jmp
sub
loopne
sub
mov
fs
jne
push
bound
xor
in
pop
jnp
add
nop
sbb
jge
call
lea
std
mov
jns
pop
mov
popf
test
pop
add
cmp
xchg
call
jbe
out
(bad)
fwait
mov
fsub
(bad)
mov
cmc
(bad)
inc
mov
push
xlat
popf
test
lods
call
lahf
retf
mov
lds
xor
mov
add
aas
ins
push
jb
mov
xchg
js
stc
pushf
cdq
mov
jne
outs
into
stos
sbb
(bad)
popa
ins
sbb
repnz
ds
push
xor
jb
or
aad
xor
or
sbb
cld
dec
xor
sahf
dec
mov
in
or
xor
cmp
cmp
mov
adc
jmp
xor
inc
loope
ins
or
jae
add
jbe
sbb
in
imul
and
icebp
or
mov
pop
mov
dec
xchg
sub
sub
add
int
leave
dec
sub
cmovle
dec
(bad)
ficomp
sub
adc
lods
cli
call
dec
sbb
xchg
pop
scas
popf
sbb
dec
(bad)
push
repz
adc
push
adc
xlat
jecxz
lock
jg
and
jne
mov
jbe
mov
dec
mov
leave
repz
xor
icebp
enter
xchg
xor
jp
sbb
fld
and
mov
jno
sbb
mov
stos
out
(bad)
mov
mov
movs
cmp
xchg
push
dec
ins
mov
call
mov
sar
pop
gs
fidivr
pop
fdivr
ja
fs
xchg
call
inc
dec
and
xor
pop
shr
push
adc
xchg
sub
movs
xchg
ror
(bad)
ret
and
ja
cmp
push
call
(bad)
or
cmp
xor
retf
jnp
mov
cmp
shr
xchg
in
dec
mov
push
je
retf
pop
rcl
add
cmp
jecxz
xchg
add
mov
jmp
out
lods
jae
ins
pop
pop
pop
sti
adc
sub
movs
test
scas
mov
sti
push
jbe
jo
pusha
adc
push
mov
and
mov
cmps
movs
adc
cwde
call
mov
add
lock
daa
or
cli
sbb
push
mov
jg
mov
sahf
(bad)
jmp
shl
xchg
fild
mov
pop
add
jnp
out
jmp
xchg
retf
or
gs
push
shl
sbb
cs
pop
mov
stos
sub
inc
mov
(bad)
mov
mov
scas
cmp
repnz
imul
xor
repz
mov
sub
push
(bad)
out
add
pop
rcl
mov
(bad)
fnstcw
hlt
int
pop
mov
ficomp
mov
sub
rcr
fistp
into
mov
lock
(bad)
and
add
aad
cmp
xchg
enter
pop
fdiv
xlat
and
hlt
or
mov
test
cmp
sbb
cld
dec
shr
jmp
hlt
dec
gs
pusha
aad
sbb
ds
push
in
aam
xor
sub
rcl
xchg
adc
xchg
rcl
cli
ins
or
push
loope
call
push
fisttp
stos
adc
push
dec
test
pop
inc
pusha
pop
cmp
lods
lds
jg
push
jp
xchg
fs
lods
dec
mov
mov
push
mov
loopne
jnp
push
fs
mov
jle
inc
inc
lea
ds
push
rcl
js
mov
sbb
aad
or
fistp
and
in
inc
sbb
xchg
lods
mov
scas
cwde
cmc
jp
sahf
data16
dec
adc
loop
repnz
or
scas
ins
lock
(bad)
inc
cs
outs
pop
pop
mov
leave
jae
mov
addr16
fild
fstp
sub
inc
clc
add
rol
mov
dec
stos
scas
jnp
or
push
aas
aam
sahf
and
mov
mov
into
(bad)
jmp
sbb
pop
xchg
sahf
jno
icebp
outs
movs
lds
out
sbb
dec
test
mov
push
bound
lea
push
cmps
sbb
inc
cld
and
outs
and
sub
es
out
cmps
hlt
out
sub
bound
xchg
loope
dec
(bad)
jecxz
fwait
data16
pusha
jmp
sti
mov
jp
(bad)
movs
push
dec
pusha
scas
mov
cmp
mov
dec
(bad)
mov
mov
sub
pop
push
in
ins
cmp
inc
mov
imul
xchg
hlt
ficom
fldcw
gs
jmp
shl
push
arpl
lods
out
push
cmp
test
dec
add
jl
lock
cli
in
in
xchg
jecxz
loope
mov
cwde
bound
mov
pop
pushf
sbb
sub
test
cmc
repz
sbb
add
out
loope
in
cmp
mov
loopne
sub
int3
rcl
push
and
leave
xor
mov
push
retf
repnz
ret
movs
jmp
and
pop
push
call
adc
fild
dec
hlt
adc
loope
in
mov
in
inc
and
data16
add
test
leave
jle
push
and
push
movs
jmp
inc
pop
out
sub
dec
or
ret
jge
dec
inc
add
pop
and
test
inc
and
ins
push
and
inc
mov
test
mov
stc
test
das
pop
leave
mov
bound
(bad)
outs
jb
xor
faddp
(bad)
mov
stos
cmp
mov
pusha
out
outs
inc
mov
mov
cmps
test
pop
out
outs
adc
in
fidiv
test
dec
push
(bad)
cmp
pop
mov
xlat
adc
neg
jb
test
fidivr
(bad)
mov
shl
in
call
xchg
mov
cwde
into
xchg
inc
clc
enter
xchg
xor
pusha
dec
or
pop
iret
fcmovu
cmps
mov
cdq
ins
dec
adc
xor
repz
inc
xor
jmp
daa
jae
jne
adc
push
inc
mov
add
lds
imul
out
xchg
dec
(bad)
daa
repz
mov
jle
je
jo
pop
adc
sub
lds
inc
pop
and
xor
div
or
ret
arpl
jne
push
sub
jl
stos
sub
ins
mov
jmp
lock
and
inc
inc
fcmovbe
jmp
sbb
outs
(bad)
mov
fstp
pop
shr
pusha
or
js
call
mov
add
mov
pop
mov
leave
add
mov
out
cmp
out
mov
sbb
in
sub
and
adc
popa
rcr
sbb
loope
xchg
xlat
dec
or
mov
jle
cmp
xchg
leave
cdq
jne
movs
jb
aas
push
loop
(bad)
sbb
sbb
push
rcr
fst
in
add
data16
dec
(bad)
movs
sbb
int3
pop
retf
icebp
jnp
cmc
popf
pusha
imul
ret
adc
push
sbb
fidivr
pop
movs
mov
push
imul
out
sahf
jo
push
dec
mov
push
stc
aaa
rcr
int
lds
mov
je
(bad)
jecxz
repnz
pop
rol
popf
lds
jl
inc
mov
das
pop
mov
adc
stos
shl
addr16
fcomp
pop
push
pop
iret
add
test
mov
ror
pop
xor
aaa
adc
dec
jae
pop
inc
cmps
jmp
mov
jo
or
nop
nop
adc
aad
retf
imul
push
inc
clc
sub
jge
adc
ja
mov
cmps
cmps
push
ss
mov
std
sti
inc
sbb
mov
movs
xor
in
jbe
enter
xor
scas
pop
add
inc
enter
mov
rcl
inc
dec
scas
and
div
mov
loopne
and
stc
lahf
test
ds
inc
out
dec
sbb
fnstenv
xor
xchg
inc
pop
dec
enter
imul
fild
jb
fidivr
sbb
xlat
adc
mov
fcomi
call
adc
mov
pop
sub
cwde
shr
ja
fs
rol
repz
pop
pusha
call
xchg
dec
add
push
pop
pop
test
push
cli
xor
sbb
call
sub
pop
or
cdq
call
sub
mov
out
icebp
lea
xchg
imul
mov
or
cdq
mov
loopne
icebp
ss
pop
leave
xchg
adc
dec
xchg
and
hlt
and
loope
ror
mov
fimul
cs
add
in
test
hlt
loope
push
out
sbb
push
dec
loope
jl
jecxz
loop
scas
jge
adc
mov
cmp
pop
jmp
aaa
mov
sbb
cmp
sub
jnp
pop
xor
shl
xor
and
bound
bound
repnz
scas
lods
push
call
jl
stos
fild
push
xlat
pop
cld
and
pusha
std
inc
inc
adc
arpl
outs
(bad)
popa
call
enter
cli
hlt
mov
dec
in
cmp
outs
cs
pop
cdq
xor
icebp
inc
xlat
das
adc
fisttp
xchg
cmps
in
xor
ret
and
jbe
sbb
outs
mov
fstp
lods
enter
out
aaa
int3
mov
mov
xchg
repz
out
je
cld
add
sbb
stos
mov
dec
adc
push
mov
into
lock
jp
bound
inc
jmp
not
fistp
push
cmp
sub
jbe
pop
call
cmp
ror
mov
cmc
mov
test
lock
mov
or
loop
dec
dec
cmp
dec
dec
adc
sub
pushw
adc
fdivrp
(bad)
sar
or
rcr
pop
inc
fs
mov
xor
aaa
pop
popf
jmp
sbb
or
adc
popf
sub
test
jae
push
sbb
mov
cmp
aad
sub
or
cmp
push
mov
add
lea
push
inc
shl
sub
mov
(bad)
pop
adc
call
stos
clc
lds
jne
das
xor
push
and
add
loopne
test
test
or
lods
jmp
cli
fsub
gs
and
xor
push
sub
pushf
stc
xor
out
aam
out
pop
test
adc
ss
fisubr
lods
pop
and
push
push
nop
(bad)
in
jbe
jbe
inc
jo
cmp
ret
xchg
inc
add
cmc
dec
std
shl
retf
test
jbe
push
stos
add
or
xor
sub
into
jo
mov
xchg
and
xchg
lods
xchg
cdq
test
cdq
sub
inc
push
imul
sub
adc
fdivr
iret
or
add
lea
ja
dec
jge
push
into
pop
stos
push
mov
outs
inc
jp
test
and
movs
rol
and
xchg
aaa
cmp
mov
ins
icebp
scas
test
sub
popf
add
jmp
clc
add
jg
xor
push
mov
pushf
mov
enter
mov
cmp
jmp
mov
out
bound
test
add
rcl
(bad)
arpl
stos
mov
popa
scas
rcr
and
mov
(bad)
jl
cli
push
inc
gs
imul
sub
and
mov
shl
lock
dec
fadd
sahf
mov
or
or
xor
lods
sub
sub
cmp
cwde
fidiv
leave
cdq
iret
or
cmp
xchg
jbe
or
inc
xchg
sbb
rcl
mov
xchg
xchg
sub
cmp
fst
mov
pop
cmp
sbb
pcmpgtd
(bad)
push
push
jnp
cmps
out
adc
push
in
in
sub
shl
pop
cmc
stc
mov
pop
jnp
mov
jp
mov
and
aad
sub
ret
jmp
or
xchg
rcl
int
push
adc
xchg
aam
xor
mov
mov
dec
adc
adc
cmp
loop
cli
push
or
xchg
mov
test
or
sbb
aas
std
idiv
jbe
sbb
js
xchg
inc
mov
mov
mov
mov
cdq
dec
xor
push
mov
jno
nop
cmp
mov
shr
mov
test
outs
shr
iret
pop
loopne
stos
fld
lahf
add
repnz
inc
push
sub
lods
mov
xor
aaa
xor
pusha
dec
call
repnz
cmp
cmps
mov
ficomp
nop
mov
mov
and
xchg
in
mov
std
jmp
pop
fimul
add
retf
stc
imul
mov
pop
lods
mov
push
jg
push
inc
dec
ds
push
jnp
pop
mov
bound
and
shl
sti
jns
mov
bound
arpl
xor
push
push
dec
cs
data16
and
dec
pop
popf
sbb
pop
std
mov
push
cdq
mov
shl
mov
adc
and
sbb
idiv
or
adc
rcr
pop
push
sahf
and
daa
jecxz
mov
cwde
push
fst
outs
cmp
mov
lahf
jp
jl
adc
sub
push
loop
add
fs
cld
mov
jo
ror
mov
add
rol
sub
popa
cdq
sbb
pop
push
adc
fdivr
inc
mov
mov
mov
cs
ds
mov
and
mov
icebp
fidiv
add
adc
enter
ss
add
test
aad
hlt
add
popa
push
dec
and
jl
nop
cmp
and
ror
call
retf
lea
xor
mov
adc
outs
pop
xchg
xchg
call
push
cmps
mov
test
scas
ins
icebp
add
add
dec
jg
mov
shr
jmp
ret
pop
es
(bad)
mov
addr16
and
out
xchg
pop
fdivr
mov
add
sbb
sbb
push
fwait
push
cmp
mov
jl
hlt
clc
das
loopne
xchg
mov
fisubr
and
sub
pushf
pop
push
ficomp
mov
out
div
adc
dec
or
pop
jge
ins
clc
arpl
xor
xchg
leave
sbb
and
sbb
int
int
sbb
and
xchg
jno
inc
push
pop
inc
sbb
dec
push
mov
xlat
ds
popa
xchg
mov
xchg
dec
ins
in
scas
cdq
cmp
sbb
inc
cdq
ins
adc
push
xchg
adc
xor
pop
jl
(bad)
jg
movs
jne
adc
xchg
mov
jecxz
push
movs
sbb
ins
sub
sub
hlt
fwait
les
nop
adc
aam
into
jg
or
and
add
jne
ja
or
(bad)
mov
mov
xor
out
test
shr
fcomp
jg
xchg
mov
pop
scas
sti
xchg
loope
mov
test
(bad)
rcl
mov
sbb
and
jne
xor
fmul
jp
add
lahf
fs
fs
mov
inc
test
aas
xchg
push
add
cmp
jns
mov
cmp
test
sbb
mov
xchg
js
mov
ss
outs
loop
push
iret
mov
mov
jle
and
mov
loopne
mov
xchg
and
push
out
add
jp
(bad)
std
ins
sub
leave
jmp
and
ret
xor
mov
ss
mov
add
dec
scas
(bad)
movs
jne
sti
aas
cmp
xor
test
int3
xchg
jmp
ficom
add
std
xor
push
nop
push
and
jmp
int
dec
push
push
xchg
repnz
(bad)
jge
test
js
adc
dec
fbstp
add
rol
push
nop
sub
pop
xor
mov
push
mov
fdivr
push
(bad)
cmc
daa
iret
pop
ds
dec
inc
sahf
inc
dec
push
pop
call
inc
or
pusha
jo
inc
pop
inc
pushf
add
ss
inc
push
mov
or
dec
out
jl
add
mov
dec
mov
jns
sub
mov
(bad)
and
out
clc
or
popa
outs
outs
mov
pop
cmp
movs
or
call
sub
jmp
nop
cmp
jmp
iret
cmps
ficom
dec
lock
jb
fstp
das
fs
out
xlat
and
(bad)
or
jns
sti
rol
xchg
loopne
(bad)
aaa
jmp
and
mov
sbb
add
sbb
or
push
push
cmp
mov
lods
test
ret
fisub
push
popf
jno
aaa
xchg
pop
jae
cmp
adc
mov
mov
hlt
mul
jl
dec
loopne
cdq
xchg
mov
loopne
inc
pusha
cmc
shl
fnstsw
into
jno
addr16
retf
mov
es
fmul
imul
or
inc
mov
aas
jmp
fs
std
jmp
xchg
retf
inc
lods
aam
loopne
jno
pop
(bad)
std
fcom
ds
in
sbb
and
jae
nop
add
pop
jnp
or
xor
scas
test
daa
test
inc
lea
mov
add
adc
jge
gs
push
imul
cs
cmp
mov
inc
sti
jnp
dec
pushf
addr16
mov
pusha
daa
xor
mov
inc
fdiv
lods
push
lahf
cli
test
test
ret
cdq
fadd
addr16
js
loopne
lock
les
add
inc
inc
jo
mov
out
xchg
ret
ror
pop
shl
out
out
dec
inc
inc
sbb
out
mov
mov
sub
sar
pop
mov
jo
mov
xor
aas
fdivr
jnp
sub
das
xchg
cld
mov
(bad)
xor
adc
cwde
mov
test
adc
push
cwde
jmp
jecxz
and
aad
outs
and
rcr
int3
call
test
movs
test
ret
xchg
rol
inc
sub
repnz
add
dec
and
leave
pop
popf
jmp
fcom
loope
inc
and
(bad)
pop
neg
sbb
pop
das
pop
push
jecxz
and
imul
in
(bad)
cmps
add
sbb
push
out
and
push
sti
mov
lds
leave
sbb
push
jae
push
in
pushf
add
add
sub
xchg
or
mov
ret
out
rcr
jo
push
push
fcom
push
jmp
adc
mov
xchg
xchg
mov
xchg
bswap
jae
into
loop
test
dec
xlat
fldcw
adc
movs
sub
leave
mov
sbb
push
and
push
ror
fwait
invd
dec
inc
mov
jmp
stc
push
and
(bad)
pop
mov
pop
mov
lock
ja
mov
adc
stc
add
dec
push
out
ss
int3
cmp
jmp
lods
cmps
scas
iret
inc
xchg
fild
(bad)
xor
ds
adc
xchg
push
test
push
push
test
cmp
sbb
scas
add
cmps
inc
xchg
pop
xor
push
dec
cld
popa
pop
sub
sar
sbb
(bad)
pop
mov
ins
cmp
and
or
cmps
ret
ret
cld
addr16
sbb
(bad)
mov
xor
adc
cmp
or
mov
ror
jg
dec
cli
pusha
shr
(bad)
push
push
or
and
lods
jno
mov
loop
push
loopne
icebp
jae
ret
stos
sbb
pop
sub
cdq
fs
adc
aas
dec
mov
xchg
sbb
sub
lahf
cmp
adc
xchg
push
jns
dec
addr16
add
xchg
pop
add
dec
and
pop
xor
stos
fcom
inc
ret
and
push
cld
daa
ror
sahf
xor
xchg
shr
fild
jle
jbe
adc
mov
sub
je
fwait
loope
(bad)
sub
mov
adc
mov
and
lock
jmp
(bad)
jl
out
enter
test
sbb
fidiv
or
sub
scas
adc
xchg
lods
xchg
ins
and
inc
xchg
cmp
pop
pop
jp
das
cmp
scas
dec
mov
test
pop
mov
stos
shr
addr16
shr
lahf
xor
cmps
popa
stos
(bad)
ja
adc
mov
xchg
bound
in
ins
nop
cs
sbb
jb
sbb
pop
popf
mov
fidiv
aam
sub
psllq
enter
pop
mov
or
adc
cmp
dec
pop
or
test
pusha
push
adc
mov
mov
xor
lock
xlat
add
pop
jmp
scas
mov
loope
cld
push
je
ins
neg
inc
fs
xor
out
cmp
fdiv
iret
shr
mov
inc
jmp
in
push
mov
lods
xchg
leave
rol
(bad)
iret
add
mov
inc
pushf
shl
fs
inc
or
pop
ds
jl
lods
in
add
sti
mov
mov
imul
mov
fst
rcl
jmp
addr16
in
dec
mov
fmul
out
leave
dec
cdq
adc
fwait
add
repz
outs
cmps
mov
pop
in
stc
or
ret
out
sbb
cwde
dec
(bad)
mov
xlat
cmc
push
inc
leave
mov
movs
ficom
cmovnp
leave
aaa
mov
(bad)
int3
push
cmp
out
cmc
lods
js
dec
popa
dec
hlt
stos
retf
and
addr16
adc
out
xlat
xor
mov
rol
sub
mov
cmps
xlat
mov
inc
(bad)
xor
inc
clc
lock
aas
jbe
mov
(bad)
push
popf
repz
retf
movs
mov
add
mov
dec
arpl
jnp
pop
adc
setns
mov
jge
mov
imul
je
cmp
or
aas
adc
pop
mov
xor
xchg
out
fcmovbe
cwde
or
bound
mov
mov
call
and
cmp
popf
mov
enter
imul
mov
(bad)
sub
sub
add
sub
xchg
mov
jg
push
jle
mov
xor
int
test
dec
leave
push
fstp
adc
test
rcl
fwait
push
push
mov
std
out
ins
dec
xor
xchg
push
push
and
push
and
add
sbb
ja
pusha
lods
(bad)
xor
icebp
into
(bad)
retf
in
pop
mov
test
aam
dec
cmps
ret
lahf
cmp
cmp
dec
(bad)
xchg
cmps
dec
clc
jne
adc
jmp
loopne
sbb
xchg
ret
fs
std
sbb
jmp
call
dec
retf
aad
hlt
int
sbb
inc
cmp
add
int
out
inc
(bad)
jp
shl
fcmovu
bound
lods
(bad)
leave
cwde
jmp
add
mov
and
jae
in
mov
test
sbb
jo
shr
add
mov
out
psubusw
cmp
lock
ret
into
pop
xchg
clc
js
push
test
mov
and
enter
in
iret
inc
int
fs
fcom
aas
dec
shl
rol
xchg
jbe
mov
mov
(bad)
mov
test
sub
jmp
leave
xchg
fcom
xor
(bad)
repz
je
pop
pop
mov
dec
cmp
jns
add
cmp
push
pop
mov
mov
push
dec
adc
cmp
push
fcomp
popa
ret
xchg
xor
xchg
out
sbb
mov
leave
xor
xchg
inc
std
pop
push
rcr
add
aaa
push
movs
sub
push
or
mov
out
call
jle
add
push
sub
sahf
data16
jge
repnz
int3
arpl
jg
loopne
dec
inc
fs
push
sbb
add
jb
dec
loop
push
lahf
push
xchg
fcom
add
mov
mov
push
xchg
mov
push
mov
mov
pop
and
cmp
or
aam
dec
jns
mov
shrd
jp
push
pop
mov
cmc
loopne
xor
xor
cdq
cmps
mov
add
cmp
loopne
dec
call
outs
mov
mov
repnz
fisttp
mov
aaa
mov
or
add
xchg
and
inc
dec
mov
shl
sbb
dec
aam
sub
fist
dec
xchg
imul
push
(bad)
xchg
sahf
cs
mov
popa
inc
cdq
cmps
je
xchg
shr
fld
call
push
inc
xchg
cmp
dec
sub
jecxz
inc
add
sub
pop
jge
lods
test
out
push
ficom
mov
inc
rcr
fdiv
jg
push
push
call
add
inc
inc
sar
push
fisubr
fld
mov
out
or
and
in
mov
pop
popf
mov
out
dec
mov
rcr
outs
dec
addr16
xchg
jg
add
add
mov
pop
jge
sub
leave
sub
sbb
mov
cmp
mov
xchg
push
cmp
push
mov
js
loop
sub
inc
fidiv
mov
mov
pop
(bad)
ja
mov
push
test
out
adc
cld
sub
adc
mov
mov
icebp
or
cmp
into
jno
xchg
inc
mov
and
mov
es
xlat
dec
xor
jno
pop
add
push
push
rol
jge
or
stos
repz
loop
outs
ficom
pop
ja
pop
push
daa
cmp
test
movs
xor
(bad)
cmc
mov
sub
dec
push
pushf
jl
xor
xchg
dec
push
lahf
jge
pop
clc
out
shr
push
dec
jns
push
xor
outs
xor
int3
js
stos
shl
fisub
add
pop
xlat
sub
mov
jbe
enter
adc
add
aam
xlat
and
inc
mov
mov
pop
xor
fs
pop
mov
cmc
movs
adc
call
sti
movs
mov
aaa
jle
ja
lea
fisubr
lds
sbb
adc
shl
(bad)
in
sbb
movs
dec
mov
mov
and
aad
add
sar
and
idiv
jecxz
mov
adc
jno
mov
jo
mov
jno
push
cmps
mov
cmp
pop
mov
cmp
js
shr
and
out
push
sub
(bad)
pop
mov
pop
idiv
jg
pop
jge
shr
inc
push
hlt
mov
fisub
(bad)
int
clc
ss
inc
mov
mov
cmp
shl
dec
pop
jg
pop
in
fisttp
je
fst
popf
jmp
sbb
push
es
sub
jmp
cs
mov
mov
jae
daa
jo
fucompp
je
nop
push
adc
push
dec
rcl
sub
ins
cld
or
clc
jmp
mov
mov
dec
sub
xlat
call
and
outs
test
mov
sub
jmp
ins
or
mov
sub
cmp
jns
adc
cmp
out
ins
cli
scas
or
in
dec
rcr
xchg
imul
cmp
hlt
leave
pop
and
mov
fcmovb
sti
xchg
in
mov
jle
ins
pop
rcl
inc
call
or
mov
sub
adc
sbb
inc
add
or
add
xchg
ja
in
das
and
adc
sbb
sbb
xchg
xchg
mov
dec
int
sbb
rcr
xchg
clc
sbb
jp
dec
jns
cmp
push
or
inc
cmp
xor
fs
sub
add
pop
mov
xor
inc
jae
sub
retf
popa
call
mov
sbb
or
mov
mov
jne
clc
push
cmps
lods
jl
xchg
in
jg
push
ins
jecxz
fistp
into
jae
repz
lods
ds
dec
or
mov
xlat
mov
cmp
popf
jp
mov
push
mov
call
test
fldenv
in
pusha
pop
xchg
cmp
hlt
iret
mov
sbb
cs
inc
jns
call
cmp
jmp
sahf
xor
or
cmp
imul
outs
retf
das
and
sub
mov
xor
push
add
sbb
and
mov
mov
mov
pushf
mov
jecxz
adc
mov
out
mov
add
fist
pop
std
jmp
push
aas
push
or
fisubr
mov
or
xchg
or
ror
sub
pusha
ins
aad
sub
jmp
iret
mov
add
dec
nop
add
mov
mov
pop
push
aas
rcr
into
jbe
mul
cmp
jg
and
cmp
fwait
xchg
dec
jo
add
cmps
sbb
rcr
imul
sbb
leave
enter
pop
call
loopne
push
int
xor
push
and
fadd
ins
and
jne
cmp
cwde
aaa
pushf
jge
xchg
jg
xor
std
mov
jb
sbb
fisub
scas
xor
retf
push
gs
and
sub
test
xchg
arpl
aam
stc
sub
(bad)
jmp
add
inc
popf
inc
adc
cmp
repz
and
bound
retf
iret
dec
and
jmp
sub
adc
mov
retf
fadd
ror
sub
popa
dec
ret
add
xchg
loope
(bad)
int
push
fs
adc
popf
lahf
pop
pop
mov
inc
push
or
(bad)
and
leave
cmp
sbb
mov
aaa
pop
and
xor
or
stos
or
xor
pop
or
out
scas
mov
iret
pusha
nop
and
and
push
pop
xchg
cld
jp
addr16
test
dec
cmc
add
ss
(bad)
fidiv
ret
out
or
sub
inc
jbe
add
je
jnp
les
sahf
aaa
out
fldl2e
add
cmps
or
add
xchg
mov
sub
iret
fwait
int3
cmp
xor
and
ror
je
cmps
leave
test
push
dec
scas
dec
icebp
cmp
rcr
dec
fild
das
scas
pop
jecxz
and
and
push
retf
jle
mov
arpl
and
test
fwait
mov
pop
jg
jp
mov
stos
cmp
repnz
aaa
movs
xchg
jno
mov
das
adc
xchg
add
mov
pusha
scas
and
cmps
inc
or
adc
int
je
mov
imul
pop
aaa
xor
push
mov
xchg
sbb
mov
icebp
jl
je
add
test
into
aad
adc
cmp
sti
xor
adc
inc
or
mov
mov
test
add
bsr
cli
and
push
and
mov
dec
sbb
push
movs
aaa
push
scas
xchg
das
adc
repz
mov
jecxz
mov
push
ins
jmp
lods
xchg
shl
xor
cdq
icebp
xchg
stc
or
jecxz
push
retf
jo
das
repnz
add
sub
jge
mov
and
xor
lea
push
xor
sub
mov
inc
xchg
pop
add
repz
arpl
or
cli
nop
mov
push
and
les
mov
in
inc
das
popf
sti
cmp
sub
dec
inc
js
cwde
shl
repnz
lahf
mov
add
rcl
rcr
jge
mov
jg
leave
jns
cmps
out
repz
popa
add
into
add
aad
hlt
jp
and
sbb
movs
(bad)
jmp
or
cld
add
xor
pushf
out
shl
xor
xor
and
pop
lods
mul
push
jle
sbb
sub
cld
movs
inc
addr16
rol
adc
push
ror
and
ins
cmp
mov
cmp
out
cld
inc
sub
add
jb
movs
cwde
push
adc
inc
out
fs
adc
test
cli
arpl
aam
movs
aam
mov
inc
pushf
out
arpl
clc
sbb
test
jb
pop
in
mov
(bad)
pop
std
mov
inc
and
sub
mov
sti
push
add
imul
gs
mov
dec
inc
int3
cmp
loop
loop
jmp
dec
les
inc
jp
pushf
jo
aad
out
jns
aaa
ins
and
xchg
pop
xor
mov
or
out
dec
ret
pushf
(bad)
cmps
adc
or
sbb
push
cmp
retf
leave
js
mov
shr
std
dec
cmp
or
pop
dec
lahf
js
dec
mov
leave
and
xchg
pusha
mov
mov
sub
push
xchg
ds
adc
and
jge
lahf
add
xlat
leave
fdivr
jne
add
cmp
sbb
fidiv
jb
push
clc
dec
pusha
inc
lahf
mov
jae
mov
cmp
dec
gs
jecxz
cmp
push
mov
daa
cs
retf
sahf
inc
adc
sub
cmp
add
test
aas
popa
es
les
adc
int
dec
ret
loope
mov
mov
data16
mov
fmul
dec
jnp
loope
mov
mov
push
(bad)
fsubr
xchg
adc
das
lea
push
pop
test
lock
pop
leave
div
sub
loop
mov
mov
sub
sbb
jge
inc
xor
cli
loopne
icebp
sar
xor
popa
call
add
push
or
(bad)
inc
scas
jg
cmp
neg
ds
mov
cmp
cmp
inc
aaa
int
mov
xor
or
sbb
jbe
and
test
jns
sbb
jp
ret
int3
xchg
sbb
and
mov
xchg
rcr
rol
scas
fst
fst
cli
stc
retf
inc
mov
stc
retf
loopne
pushf
cmp
pop
xchg
mov
jmp
dec
xchg
out
mov
loope
mov
jae
or
fmulp
push
pop
mov
stc
je
sbb
mov
ins
jnp
sbb
sbb
stc
fdivr
aaa
(bad)
aaa
inc
shl
lods
into
adc
push
mov
and
rcr
jge
sahf
push
and
push
add
jecxz
mov
jmp
scas
rol
imul
das
push
inc
popa
adc
add
push
std
popa
jle
ins
pop
xchg
mov
or
int3
lods
cld
repz
les
and
inc
das
adc
dec
icebp
sbb
push
fcomp
jne
mov
pushf
fstp
fmul
pusha
das
dec
xor
into
push
sahf
cmp
test
dec
jae
jbe
shl
outs
mov
jecxz
cmps
dec
push
mov
cmp
stos
sub
push
call
mov
sub
adc
adc
add
xchg
mov
mov
mov
sub
or
mov
adc
outs
leave
test
movhps
jge
dec
jnp
test
dec
push
movs
lahf
mov
xchg
inc
call
movs
gs
push
cmps
jbe
pusha
dec
movs
add
pop
popf
pop
imul
fcomp
lea
or
and
xor
mov
aam
lahf
(bad)
push
outs
and
inc
iret
jno
stos
stos
adc
mov
into
lds
mov
stc
stc
jnp
sbb
inc
xchg
sub
xchg
inc
jl
retf
jmp
sbb
icebp
stc
adc
jbe
jno
js
pop
lock
sub
neg
mov
test
jp
call
xchg
(bad)
ficom
aaa
hlt
adc
dec
xor
mov
and
push
cmc
fidivr
push
loopne
imul
mov
das
cmp
push
pushf
jae
mov
xchg
push
(bad)
mov
sub
imul
lods
pushf
xor
jns
and
sahf
mov
div
jg
mov
push
and
or
lods
or
xor
pop
adc
jg
pop
mov
(bad)
out
inc
bound
mov
test
push
and
xchg
pop
mov
adc
in
fldcw
adc
out
sbb
add
fist
mov
cld
or
js
aaa
jmp
mov
and
pusha
not
pop
fwait
push
mov
and
push
call
and
movs
fcomp
mov
je
and
stos
inc
xor
add
xchg
inc
sbb
stos
lods
retf
pusha
shl
in
popf
rcr
repnz
nop
idiv
(bad)
mov
gs
stos
sub
in
je
push
jae
pop
movs
retf
add
sar
lahf
aam
push
sbb
(bad)
mov
mov
mov
inc
push
arpl
mov
and
movs
repnz
int3
out
faddp
cdq
jge
and
push
add
or
pusha
inc
repz
enter
fisubr
stc
arpl
vunpcklpd
mov
call
push
retf
(bad)
xor
rcr
ror
jecxz
rcr
stos
add
test
push
out
jp
enter
sbb
cmp
mov
pop
repz
sub
add
mov
shr
mov
push
mov
push
adc
mov
test
fmul
stos
ret
add
mov
out
cmp
xchg
jecxz
scas
pop
outs
mov
xor
push
mov
in
mov
push
ret
dec
std
push
cmp
(bad)
pushf
fmulp
out
mov
fistp
mov
xor
jb
cli
jecxz
js
out
std
mov
mov
cmps
test
loop
xor
fild
je
ret
mov
jb
mov
xchg
int3
outs
sbb
stos
cli
imul
arpl
repz
test
push
fdiv
fsub
and
ins
fs
fldenv
or
push
sbb
lds
dec
push
dec
xchg
cmc
push
aam
fadd
imul
cmps
mov
jno
xor
sub
mov
ins
jle
jle
cdq
inc
fsubr
fsub
ss
xchg
fucomp
xor
xor
xor
xchg
std
xchg
(bad)
outs
push
repz
fstp
enter
dec
shr
test
(bad)
sub
sar
xor
fimul
and
mov
bound
ja
sbb
push
shr
stos
das
or
neg
cmp
hlt
pop
mov
ficomp
dec
cmc
mov
xor
jb
mov
js
mov
push
add
and
xchg
jno
or
mov
mov
sahf
cmps
xor
dec
lock
inc
fsub
imul
jp
sbb
mov
jae
mov
ss
loop
push
fcom
dec
test
or
mov
and
add
(bad)
dec
jg
pop
pop
mov
outs
xor
scas
mov
ins
scas
mov
cli
aam
push
push
(bad)
(bad)
jns
into
jmp
ja
jmp
lds
pop
in
jae
test
movs
xchg
inc
xor
paddd
pop
fcom
mov
jae
shr
aaa
lea
outs
mov
push
push
rcl
cmp
stc
ss
loopne
hlt
loope
xor
or
pop
movs
leave
call
and
clc
adc
sbb
ins
stos
into
sub
and
adc
jmp
jle
inc
cmp
add
sub
xchg
and
jnp
xchg
in
push
shl
mov
adc
jle
fistp
enter
adc
inc
sar
mov
fdiv
pop
add
mov
addr16
lods
inc
stos
cmp
mov
xchg
clc
aam
nop
pop
ds
ins
push
(bad)
in
sub
xchg
add
sahf
inc
sub
mov
add
lahf
movs
adc
sub
pop
movs
mov
pop
cmps
push
(bad)
and
(bad)
mov
jmp
(bad)
push
int3
add
mov
push
push
out
and
jle
out
push
sub
(bad)
or
bnd
adc
mov
jp
aas
inc
test
dec
push
push
fisubr
mov
jae
lea
dec
(bad)
in
and
stos
call
sbb
add
stos
ds
stos
ja
sahf
inc
and
or
jae
lock
mov
ins
sbb
sbb
push
not
push
stos
fldenv
pop
shl
idiv
ja
in
stc
or
rcl
xchg
pop
in
and
mov
outs
jmp
mov
mov
or
pop
(bad)
pop
sub
pop
pop
sub
mov
(bad)
jmp
repz
push
sub
lods
in
push
retf
mov
sbb
fmul
bound
push
(bad)
jae
test
xchg
in
jnp
daa
pop
call
(bad)
fsubr
sahf
pop
inc
xor
mov
aam
sub
pop
es
imul
scas
push
xor
push
popf
fwait
iret
movs
imul
icebp
xchg
ret
into
std
adc
sub
not
adc
push
in
sub
adc
fsub
retf
test
mov
push
sti
jnp
out
test
shl
inc
or
mov
jno
fbstp
ret
les
push
arpl
xchg
cli
lea
push
jae
mov
mov
or
xchg
and
cwde
fsub
or
rcr
mov
adc
sbb
(bad)
dec
(bad)
xchg
adc
push
mov
rol
xchg
lods
or
push
(bad)
push
out
push
pop
push
mov
out
xor
daa
mov
inc
jl
mov
lahf
mov
jmp
fwait
adc
xor
into
pop
fcmovu
pop
lods
dec
fstp
adc
jbe
xchg
jecxz
out
sbb
cmc
jae
shr
mov
arpl
fld
push
sub
test
push
jge
sub
jmp
push
pop
icebp
not
dec
add
fs
ja
mov
xor
stc
push
repz
not
inc
add
or
push
cmp
pop
pop
mov
retf
pop
mov
inc
lock
stos
add
rep
inc
cmp
ds
jmp
(bad)
push
jmp
sub
lahf
nop
jns
jp
sub
sub
retf
xor
test
mov
push
add
jno
jmp
jne
pop
sbb
mov
mov
imul
fmul
jp
jne
mov
scas
lea
sbb
inc
xor
and
pop
popf
push
jnp
cmc
lods
call
les
dec
push
imul
(bad)
jmp
ret
pop
ins
sbb
lods
jmp
in
dec
loopne
xor
rcl
xchg
or
sub
aaa
xor
jp
enter
test
(bad)
push
mov
and
retf
mov
add
daa
dec
scas
inc
xchg
xor
or
into
xchg
aam
jl
pop
popa
mov
adc
mov
inc
push
mov
jno
inc
or
sar
push
and
add
fucomip
(bad)
mov
xchg
adc
mov
lock
adc
je
dec
addr16
jbe
pop
movs
cdq
pop
out
jp
push
mov
pop
sbb
pop
pop
push
or
mov
mov
mov
or
data16
clc
rcl
imul
push
(bad)
loope
pop
mov
call
lods
in
dec
mov
scas
pop
(bad)
or
add
repz
fmul
mov
mov
dec
cmp
inc
popf
test
fcompp
jecxz
ds
les
xchg
int3
pop
mov
dec
pop
or
fsubr
adc
push
and
push
arpl
fistp
jmp
pop
(bad)
or
sub
mov
mov
inc
or
and
add
nop
xor
popa
stos
js
std
push
fsubr
das
hlt
retf
sub
dec
ret
xor
sub
xor
cmc
add
sbb
adc
or
es
daa
dec
or
jecxz
repz
jg
(bad)
aas
push
popf
adc
push
iret
pop
cmp
popa
lds
sti
inc
icebp
jbe
gs
adc
sar
gs
mov
stos
retf
push
sbb
inc
rol
lock
out
jnp
pop
ret
js
movs
add
std
neg
jge
cmp
in
add
mov
add
push
retf
cmp
retf
arpl
mov
dec
xchg
jl
jns
scas
jg
jae
sbb
outs
popf
loop
not
or
ds
inc
repz
(bad)
push
xchg
fisub
pop
in
div
sbb
repnz
fnstenv
call
mov
(bad)
xor
add
or
enter
adc
xchg
pusha
mov
cmp
push
cmp
and
pop
pop
je
pop
xchg
and
cmps
(bad)
sub
dec
in
jb
jae
xor
sbb
sti
xchg
pop
mov
pop
hlt
sbb
jns
dec
movs
push
dec
mov
mov
leave
(bad)
pop
ret
int3
inc
pop
mov
jbe
test
xor
adc
add
sbb
mov
retf
xchg
test
adc
sbb
dec
mov
pop
sbb
(bad)
outs
sahf
arpl
aad
xor
push
push
mov
ror
add
shl
div
sub
cwde
mov
hlt
into
push
xchg
xchg
iret
outs
daa
(bad)
call
loope
repnz
push
or
push
lahf
mov
test
int
hlt
xor
jp
push
es
test
cwde
sbb
dec
mov
push
test
aad
jno
and
push
loop
gs
je
fisttp
sbb
aaa
inc
out
jge
out
sbb
cs
pop
test
jno
es
imul
cmp
loop
sbb
sub
call
lods
ret
nop
pop
outs
mov
xor
cmp
fnstsw
int3
in
push
inc
push
enter
or
jne
fdivr
nop
repz
and
mov
dec
cmp
and
mov
test
cs
push
arpl
sbb
repz
dec
xlat
push
jecxz
stc
adc
dec
inc
ins
jg
popf
inc
and
sbb
add
jae
jmp
sub
push
sub
outs
test
xchg
aam
pop
inc
add
out
test
push
sbb
mov
loop
lahf
movs
jne
xor
mov
scas
xor
test
sub
xchg
sub
jp
enter
pop
rcl
icebp
jo
pop
or
jns
fisttp
push
arpl
dec
pop
add
test
lods
sub
xchg
(bad)
into
xor
sbb
leave
test
stc
push
jecxz
cld
dec
mov
mov
sub
repz
cmc
push
nop
addr16
adc
ds
push
push
in
mov
shr
jle
dec
xchg
jecxz
dec
mov
data16
add
jb
imul
test
mov
std
retf
outs
out
mov
pop
jne
cmps
sbb
data16
dec
fs
adc
es
pop
push
ror
ss
out
out
ret
test
sub
in
mov
push
dec
mov
stos
pop
mov
bound
jle
xchg
add
pop
xchg
pop
mov
(bad)
dec
jle
and
xor
xchg
xor
mov
jmp
ins
push
mov
call
ins
jne
dec
pop
jno
leave
neg
outs
lds
mov
pop
inc
sar
in
mov
je
lods
push
xor
jne
inc
ins
push
adc
iret
in
test
sub
pop
and
out
adc
mov
ss
jo
sahf
or
into
adc
adc
fdiv
fucomi
loop
hlt
je
clc
out
adc
fisttp
cmps
sub
cwde
mov
inc
or
dec
push
push
clc
sbb
arpl
fdiv
push
mov
mov
cmp
mov
lods
xor
mov
ret
xchg
sbb
fwait
shl
cli
call
imul
adc
aad
mov
rcl
repnz
mov
pop
jmp
or
push
dec
rol
ja
xor
push
jae
lock
or
psubw
inc
push
or
inc
dec
sbb
cmps
rol
(bad)
xor
fs
pop
cmps
fdivr
pop
test
dec
ins
push
or
cdq
and
mov
arpl
lahf
jmp
rcl
adc
out
or
lods
cmp
cmp
jmp
hlt
ins
dec
add
sbb
enter
xlat
repz
push
add
jne
(bad)
pop
inc
cmp
out
pushf
out
inc
pop
jg
addr16
movs
xlat
sbb
popa
outs
mov
outs
cs
adc
push
imul
in
movs
lds
and
mov
mov
(bad)
ror
int
ins
shr
mov
and
ins
mov
mov
and
out
test
mov
aaa
or
ret
aad
les
adc
xchg
stos
sub
xchg
jno
int
push
jmp
jns
sub
xchg
div
int3
shl
push
jb
add
sbb
out
ds
jmp
jmp
loopne
xor
add
(bad)
std
adc
outs
jg
pop
test
movs
pop
push
and
jo
jmp
xor
cmp
call
mov
mov
pop
mov
bound
dec
mov
pop
adc
push
mov
ins
pop
bound
ins
cwde
or
pop
cld
jp
dec
pop
add
fwait
daa
movs
add
leave
mov
and
sar
ins
into
bound
stc
inc
inc
inc
daa
or
xchg
rcr
jo
bound
idiv
call
mov
cs
jae
out
push
fnsave
movs
push
movs
adc
fimul
into
in
sti
les
(bad)
mov
sub
les
jmp
adc
pop
jnp
ins
cmc
jl
xchg
jno
xchg
jg
(bad)
fcom
shr
inc
jmp
lea
arpl
sahf
cmp
sub
aaa
clc
or
stos
push
mov
cmp
sub
stos
add
pop
dec
xor
mov
pop
test
dec
xchg
pop
push
adc
vpslld
push
push
cwde
mov
mov
pop
jae
xchg
call
cmc
movs
inc
sub
(bad)
xor
push
dec
pop
xchg
inc
xor
lahf
pop
xchg
mov
inc
sub
push
mov
call
jb
jno
cmp
sar
xor
adc
in
pop
inc
(bad)
push
in
test
mov
int3
mov
nop
mov
pushf
fld
push
(bad)
stos
mov
inc
mov
fidivr
test
mov
scas
xchg
cli
ds
push
adc
push
lahf
cmp
push
pop
out
mov
cmp
push
out
iret
push
adc
iret
push
mov
jmp
in
mov
sbb
or
(bad)
test
sar
or
lods
sbb
fs
std
or
in
scas
push
push
imul
pop
sbb
jecxz
push
pop
push
push
xchg
jg
pop
xchg
fdivr
(bad)
movs
aad
add
mov
jmp
ja
add
lods
mov
and
and
dec
inc
xlat
mov
and
les
mov
lods
ror
jmp
retf
sar
inc
xchg
sbb
xlat
out
add
fmul
pop
jae
cmp
xor
push
(bad)
sbb
sbb
cwde
mov
fdivr
xor
std
aam
movs
cmps
adc
jg
ins
cmp
pop
cmp
pop
xchg
sub
cmp
or
add
scas
mov
jmp
leave
xor
xchg
sbb
mov
aas
in
push
nop
push
loope
into
leave
mov
adc
mov
jg
lock
sbb
push
xchg
fstp
bswap
sub
loopne
das
and
adc
mov
ins
pop
loopne
push
pop
mov
jne
cmps
jmp
mov
push
push
inc
enter
ret
es
adc
out
div
adc
cmps
adc
xchg
jne
and
pop
ret
xchg
retf
mov
out
mov
mov
sbb
inc
jo
push
leave
stc
loop
ja
pop
jno
mov
dec
cmp
fwait
mov
add
ja
adc
test
ret
xchg
add
mov
sub
sbb
push
test
inc
add
(bad)
jg
movs
xor
dec
pop
ret
and
push
xor
xor
jp
pop
popf
aad
in
in
sbb
pop
(bad)
jmp
add
not
sbb
rol
inc
neg
fmulp
lods
push
mov
xchg
cmp
movq
ror
repz
iret
fdiv
addr16
inc
or
sar
dec
jno
and
cmps
xor
mov
xchg
xor
fisubr
nop
jo
(bad)
out
pop
or
(bad)
in
pop
fwait
and
cmps
mov
or
rcl
or
les
pop
sub
sbb
scas
xchg
push
jle
jb
fcompp
(bad)
int3
retf
int
(bad)
pop
in
add
mov
shr
mov
int
xor
mov
lds
arpl
data16
leave
xor
xor
in
dec
mov
jmp
int3
push
sbb
mov
mov
cmps
movs
inc
inc
scas
add
cs
sbb
stos
sti
mov
dec
adc
jg
daa
mov
inc
fwait
cmps
jle
push
call
xor
jle
ret
nop
jle
xchg
cmp
hlt
cmc
rol
nop
ret
(bad)
pop
out
movs
cmp
nop
outs
adc
jns
jp
or
lahf
dec
mov
fiadd
daa
mov
adc
mov
lods
jecxz
jns
pop
adc
lods
adc
iret
cld
mov
sub
jp
repz
out
(bad)
and
jg
fist
push
dec
fisttp
dec
outs
jp
jnp
inc
sbb
scas
aas
lock
mov
mov
int3
add
cmp
hlt
les
mov
cwde
or
enter
mov
mov
jne
adc
mov
ss
out
sbb
mov
dec
lods
jns
adc
sbb
test
test
cmp
push
lea
mov
fistp
sub
mov
outs
jbe
sbb
xor
cs
and
and
gs
stos
and
jl
jmp
(bad)
aas
scas
add
push
aad
xor
pop
add
xchg
(bad)
std
and
adc
add
or
out
sbb
cwde
cmp
call
inc
outs
rcr
or
cmp
mov
cmovp
adc
xor
jb
mov
cdq
cmps
inc
ss
jmp
hlt
xchg
aaa
xchg
sub
xor
mov
hlt
jne
test
outs
mov
cmps
xchg
scas
imul
cmps
es
std
push
mov
add
lds
fdivr
and
test
add
outs
xlat
xchg
in
sbb
pop
pop
int
jns
pause
jae
(bad)
hlt
jmp
mov
jge
inc
mov
movs
scas
add
js
jo
fmul
sahf
not
sbb
xchg
rcl
adc
js
add
mov
aad
enter
clts
mov
retf
sub
push
je
les
in
das
movs
jl
sbb
cmp
mov
daa
jno
inc
cmp
xor
ret
inc
push
cmc
jmp
sub
add
mov
sbb
test
dec
or
xor
push
add
mov
cmps
fcom
and
mov
or
xor
addr16
mov
mov
adc
sahf
jne
lahf
lods
sub
pop
mov
call
sbb
adc
fs
xor
pop
aad
cmp
scas
adc
in
test
push
outs
jmp
inc
cli
fadd
sub
sbb
(bad)
push
in
push
outs
and
icebp
xchg
sub
sub
xchg
test
mov
imul
iret
xlat
bound
sub
fistp
std
mov
add
or
movs
mov
ins
mov
push
dec
bound
dec
mov
mov
mov
inc
mov
data16
xchg
and
jp
fs
adc
js
pop
test
mov
aaa
(bad)
js
add
sbb
mov
push
adc
std
xchg
hlt
stc
cmp
out
inc
lods
inc
popf
pop
mov
mov
outs
cmp
adc
leave
xchg
jp
push
push
cmp
bound
ins
imul
cmp
pop
pop
loop
xchg
dec
sbb
fcmovne
adc
test
pop
mov
(bad)
and
xchg
inc
jo
sub
fmul
mov
stc
push
popf
jl
cmp
stos
sbb
(bad)
aad
mov
sub
repz
cmp
out
cdq
lds
cmp
into
into
fisubr
outs
dec
xor
sub
daa
jecxz
ficom
std
loopne
int3
stc
or
jmp
mov
sbb
das
mov
mov
push
pop
and
mov
aad
jmp
or
adc
mov
cld
lock
mov
call
mov
adc
mov
mov
push
xor
movs
mov
in
(bad)
adc
leave
mov
ds
fst
enter
push
inc
in
add
push
shl
push
nop
cmp
xchg
mov
sbb
in
in
cdq
cmp
pop
shl
sar
pop
xor
test
sbb
sub
jbe
jnp
fstp
pop
sub
mov
xchg
mov
mov
adc
jne
cmp
add
mov
mov
adc
sub
jb
and
out
and
sub
xor
inc
imul
mov
push
pop
movs
addr16
jbe
lods
loope
adc
push
mov
sbb
pop
dec
push
popf
nop
hlt
pop
pop
test
adc
push
pushf
(bad)
retf
inc
lahf
bound
sub
enter
fst
out
ja
(bad)
and
daa
and
data16
cmp
mov
rol
cmovnp
pop
jp
fiadd
call
pop
adc
inc
out
icebp
enter
xchg
cmps
sbb
lock
pop
jne
push
push
js
inc
popf
sahf
inc
int3
mov
inc
in
scas
push
ss
push
push
push
loopne
shrd
ds
add
push
pop
jbe
mov
and
push
mov
or
adc
mov
fs
and
sbb
or
jl
call
rcr
ret
cld
xor
iret
shl
dec
cwde
xor
bnd
jp
adc
mov
push
rcr
xchg
push
aas
dec
mov
sbb
daa
movs
imul
xor
push
mov
loope
mov
sub
or
push
in
fmul
mov
imul
pop
movs
outs
add
pop
mov
mov
ret
lds
xchg
dec
(bad)
xchg
jmp
xchg
fcom
(bad)
mul
mov
add
pop
cdq
loopne
jecxz
sti
outs
out
xchg
jno
dec
fld
fisttp
fimul
push
in
fist
fld
adc
sub
xchg
dec
daa
dec
mov
add
loope
push
test
cmp
ret
dec
retf
in
shl
mov
mov
xchg
jle
inc
dec
pop
fwait
movs
ret
movs
xchg
inc
ja
int
imul
call
enter
pop
xor
pop
sbb
movs
imul
nop
jns
in
clc
xchg
divps
pop
adc
and
test
pop
fnop
cmc
inc
out
inc
jns
ret
xchg
(bad)
sti
mov
sahf
xor
add
pop
push
addr16
adc
pop
aam
sub
sti
fstp
imul
repnz
das
adc
push
xlat
stos
jns
mov
into
sbb
cmps
jmp
fnstsw
lahf
push
and
push
call
adc
pop
pop
pop
cmp
int3
adc
xor
fild
push
sub
mov
mov
xchg
ja
xor
and
in
out
(bad)
loope
cmps
test
(bad)
push
fld
jmp
scas
sahf
fild
push
lds
(bad)
popa
jnp
push
imul
mov
and
stos
pop
pop
jl
outs
ret
repz
jne
mov
and
jns
sub
mov
das
scas
sbb
cdq
shl
ficom
mov
mov
inc
sub
xchg
clc
stos
call
test
call
call
jle
jp
pop
jmp
dec
mov
push
lahf
sub
shl
mov
push
mov
loope
sub
cmps
xchg
pusha
adc
pusha
add
xor
jg
int3
mov
adc
sub
jl
or
ds
or
jl
inc
xchg
xchg
mov
jmp
aad
aaa
xor
pop
jmp
test
sub
les
jnp
(bad)
icebp
inc
stc
dec
dec
and
fcomip
call
xchg
sbb
push
adc
push
push
out
mov
ds
dec
cs
mov
pop
inc
jbe
xor
jecxz
sub
sbb
jnp
not
xor
(bad)
out
inc
add
in
cli
iret
or
rcr
inc
mov
fisubr
pop
repnz
clc
neg
rcl
sub
and
in
cmps
sahf
out
adc
enter
cmp
jmp
sub
sbb
retf
dec
jmp
imul
and
and
push
mov
loope
xchg
rcl
jecxz
dec
add
mov
xchg
popa
fst
ret
cmp
(bad)
int
xor
sti
popf
mov
and
mov
loope
sbb
aam
(bad)
imul
imul
fld
and
test
shl
push
ds
xchg
or
mov
mov
ret
leave
adc
mov
inc
ror
movs
pop
ret
xchg
push
jp
pop
std
jp
into
and
jno
jmp
je
loop
adc
dec
inc
retf
fcmovnb
pop
xor
(bad)
jae
popa
ins
mov
loop
gs
repnz
dec
adc
enter
or
mov
adc
sbb
mov
in
clc
(bad)
(bad)
mov
inc
iret
loop
fimul
out
pop
rcl
push
fadd
adc
push
xchg
jp
sar
adc
xchg
jbe
fs
or
jb
mov
lods
mov
shl
sbb
push
gs
pop
retf
ds
or
icebp
dec
pop
into
imul
or
xchg
(bad)
rcl
(bad)
xor
xchg
or
daa
div
sbb
mov
fdiv
lds
push
and
imul
(bad)
lea
clc
mov
icebp
(bad)
mov
aaa
out
out
mov
ins
aaa
xlat
inc
add
add
or
movs
shr
push
dec
cmp
push
mov
inc
inc
int
fs
scas
xchg
push
jae
push
jp
xchg
outs
or
shr
(bad)
loopne
arpl
xchg
sbb
mov
push
popa
dec
(bad)
jecxz
jnp
ds
mov
inc
push
cmp
test
xchg
mov
dec
pop
jne
jle
jl
jbe
hlt
adc
lahf
sub
and
in
cmp
iret
ffree
call
push
mov
push
pop
ins
inc
add
and
loop
retf
and
mov
xchg
push
sbb
push
jle
lea
pop
cmp
out
xchg
or
push
pop
mov
cmp
fstp
mov
jb
shl
push
inc
psraw
stos
sbb
outs
mov
jmp
add
lds
sub
test
sub
inc
fstp
mov
dec
je
adc
jl
push
hlt
ss
pusha
sub
je
in
iret
pop
add
cmps
nop
enter
les
sbb
sbb
out
mov
loopne
or
dec
mov
push
pop
mov
test
push
rol
aaa
jae
enter
inc
fist
hlt
pop
outs
cmp
inc
fsubr
adc
(bad)
sbb
loopne
lods
scas
cmp
sub
movs
or
addr16
add
jge
scas
jmp
sbb
arpl
push
or
inc
nop
inc
test
jnp
popf
mov
xchg
ror
adc
mov
hlt
push
jecxz
push
enter
sahf
neg
ret
inc
out
pop
xchg
jl
in
popf
push
loope
test
test
out
jmp
inc
test
pop
inc
ins
int
pop
sbb
or
adc
jmp
stos
pop
fs
loope
(bad)
xlat
jnp
les
pop
inc
dec
pop
scas
call
xchg
mov
or
cmps
imul
jmp
movs
push
xchg
jns
jle
xchg
mov
xor
fisubr
jecxz
sbb
(bad)
in
inc
xor
mov
out
les
std
aad
mov
pop
nop
push
fcomip
jns
in
inc
mov
pop
dec
mov
(bad)
push
push
test
cmp
push
and
fsub
push
lds
push
cmp
fnsave
sub
cwde
adc
ja
mov
scas
inc
xor
ja
pop
loop
shr
or
xor
out
and
fnstenv
shl
lea
ins
inc
sbb
pop
cmc
fsub
add
add
or
mov
add
push
xor
mov
clc
fs
scas
fild
stc
imul
jg
pop
mov
int3
ins
add
jmp
(bad)
loop
imul
(bad)
cmp
and
jb
pop
test
stos
int
mov
sbb
pushf
push
lds
push
inc
xchg
pop
or
jecxz
and
add
mov
dec
aaa
pusha
mov
sbb
add
pop
daa
cmp
popa
ret
pop
add
bound
mov
mov
dec
and
xchg
dec
cld
add
daa
xchg
or
out
sub
xchg
in
loop
or
pop
(bad)
mov
mov
jae
movs
ins
xchg
inc
enter
xlat
push
mov
sbb
push
scas
lods
cmp
cmp
or
(bad)
mov
sbb
inc
or
addr16
pushf
cmp
jge
mov
pop
fdivr
sar
cmps
jge
push
test
or
xor
sbb
xor
adc
es
mov
out
dec
arpl
fsubr
add
ror
cs
sbb
es
mov
push
jl
pop
ds
loope
dec
adc
adc
mov
push
dec
das
scas
shl
mov
jne
xchg
jmp
pop
push
xchg
out
call
add
jo
mov
xor
rcl
pop
inc
std
jl
pop
cmp
das
movs
sahf
cmp
add
mov
dec
test
add
(bad)
sub
pop
cs
pop
jno
je
jb
stc
and
lds
cmps
jo
xor
push
mov
xor
(bad)
cmc
ins
sub
adc
and
or
(bad)
cmps
inc
xchg
xor
jnp
addr16
ficomp
push
fild
retf
(bad)
fs
push
sub
mov
mov
aam
cmps
xor
pop
fistp
jno
addr16
and
cwde
add
(bad)
ds
add
adc
ficomp
ins
push
jge
cli
cmps
jns
out
out
and
push
sbb
sub
jl
aam
mov
mov
iret
jb
jbe
or
xor
ficom
push
inc
je
jmp
mov
lds
mov
ins
xchg
in
mov
popf
out
dec
out
push
stos
or
adc
(bad)
xchg
cld
and
mov
loope
ins
dec
test
cmp
js
js
aas
(bad)
in
rol
mov
into
sar
loope
in
call
or
ret
jno
movs
pop
push
aaa
xchg
popa
sbb
mov
pop
xchg
mov
std
push
aaa
sub
sbb
adc
mov
mov
cmp
dec
sub
int3
test
jg
mov
add
mov
adc
mov
mov
add
cmps
out
xor
aad
(bad)
les
dec
sbb
inc
fadd
jb
fs
lods
jae
imul
dec
add
xor
cli
clc
inc
xchg
or
mov
test
push
xchg
lds
in
jle
ds
jae
push
add
loop
retf
mov
inc
stc
fiadd
popf
test
fs
and
xchg
push
daa
aaa
scas
outs
xchg
jno
jb
inc
retf
adc
xchg
push
xor
lock
pop
outs
push
pusha
popa
mov
aad
scas
ja
sbb
ror
cmp
arpl
inc
inc
imul
mov
mov
call
mov
pop
pop
add
into
jbe
or
xor
loopne
mov
add
cmp
mov
inc
pusha
loope
mov
loopne
scas
dec
inc
mov
push
sub
int3
pop
pop
dec
cmp
pop
cmp
les
inc
adc
outs
inc
mov
imul
mov
xchg
les
or
mov
push
rol
xchg
shl
mov
(bad)
dec
ds
ret
or
pop
xor
sbb
jb
ss
mov
cmps
inc
in
cld
push
sti
and
ret
push
out
inc
jo
inc
pop
mov
jecxz
fsubr
inc
jns
out
mov
fld
fimul
scas
sbb
ficomp
ins
push
push
cli
call
ret
mov
movs
(bad)
mov
daa
add
jne
js
repnz
fnsave
ret
and
lahf
retf
xor
test
pushf
jae
cwde
fbld
sti
ins
xor
pop
and
ja
ins
test
cdq
ds
pop
pop
pop
inc
retf
sbb
mov
dec
jmp
cmp
add
ins
and
add
mul
into
xchg
cld
(bad)
ja
das
test
inc
and
inc
mov
pop
out
and
jo
mov
out
push
jmp
cmp
cmc
jo
imul
mov
leave
dec
jno
inc
sub
shl
out
aad
push
fstp
imul
add
pop
dec
out
hlt
scas
(bad)
popf
pop
movs
mov
jl
sbb
add
data16
movs
in
ficomp
dec
std
cdq
fild
add
adc
movsx
outs
and
or
jbe
xchg
out
daa
cdq
repz
jl
pop
sub
shl
cmp
adc
rcl
sbb
out
inc
and
xchg
inc
arpl
test
jo
mov
call
push
pop
daa
and
push
dec
adc
cmp
mov
leave
or
jne
push
in
es
pusha
gs
push
cmp
jns
xor
je
rol
sub
shl
jae
test
and
std
ret
loope
mov
sub
in
cdq
jg
jp
fisubr
cmp
jecxz
adc
(bad)
jmp
iret
xchg
mov
leave
ins
mov
mov
dec
mov
mov
pop
fmul
dec
or
mov
push
mov
dec
leave
mov
sub
aaa
jle
call
ror
push
push
and
jo
jle
xor
test
jmp
jge
jg
xchg
shr
imul
xchg
inc
mov
dec
sub
and
pop
test
imul
sbb
aad
sbb
lea
scas
pop
aam
add
jnp
add
adc
sbb
pop
pop
retf
mov
jg
inc
movs
rol
jmp
push
rcl
shr
shl
cmp
stos
fnsave
sbb
mov
sub
add
mov
mov
(bad)
test
or
jl
cmp
dec
ret
adc
push
jo
ins
repz
out
xor
ja
das
push
cmp
popf
mov
cmovbe
push
mov
enter
sub
(bad)
sbb
xlat
faddp
mov
lahf
inc
lods
push
aaa
mov
stc
mov
push
imul
mov
pushf
cmp
enter
data16
push
mov
jp
xor
mov
daa
js
lds
jnp
out
mov
adc
push
pop
jmp
add
jmp
clc
mov
add
repnz
stos
neg
fimul
lahf
bound
lods
aaa
retf
jmp
mov
xchg
pop
xchg
stc
add
dec
mov
ins
ins
mov
dec
sbb
add
call
hlt
dec
sahf
pop
pop
xchg
es
mov
iret
test
dec
js
jbe
add
inc
jmp
popf
xor
(bad)
loop
xor
fisttp
cmp
sub
adc
call
jl
sahf
mov
mov
fld
sub
or
pop
cmp
stc
outs
ins
lahf
mov
jns
neg
push
xor
ficomp
mov
loop
or
jne
dec
mov
jne
add
call
inc
mov
pop
test
cmps
lods
mov
shl
push
js
jecxz
push
fsub
inc
adc
mov
arpl
mov
(bad)
mov
push
and
inc
test
movs
mov
int3
cmp
or
pop
inc
daa
push
push
fidiv
pop
or
data16
je
inc
or
jne
cli
mov
cmp
pop
sub
push
add
push
pop
pop
push
jecxz
pop
dec
cmp
test
mov
popf
cmps
rcr
jp
mov
clc
out
cmps
repz
stc
inc
sub
lods
pop
in
push
(bad)
(bad)
mov
push
shl
sub
mov
cmp
popw
shl
dec
hlt
ins
int3
push
stos
and
push
call
mov
lods
dec
out
retf
and
pop
and
mov
sub
pop
jmp
adc
xchg
out
or
jmp
jnp
out
es
mov
jne
aas
sbb
(bad)
jnp
ins
call
sbb
sub
lods
pop
or
sbb
(bad)
mov
lods
ss
pushf
mov
adc
or
push
aam
(bad)
pop
push
mov
shl
adc
jns
xor
xchg
scas
sbb
imul
in
sub
inc
cmc
pop
push
pop
mov
push
adc
test
push
jno
cli
(bad)
pop
xor
cld
data16
bound
cmp
inc
mov
cmps
test
cmp
push
out
mov
int3
xchg
fs
jb
loop
pop
out
xchg
push
mov
sub
icebp
lods
or
jb
shl
movs
push
push
push
ror
out
cli
jno
dec
and
mov
leave
inc
adc
inc
sbb
sbb
out
jmp
aaa
or
sub
xor
xor
lahf
jg
jecxz
fwait
mov
call
adc
scas
and
mov
lock
lods
sar
aad
sbb
mov
add
jnp
or
sbb
out
push
ror
dec
inc
es
or
aam
addr16
push
mov
jne
cld
sbb
adc
mov
jb
xchg
pop
loop
xor
(bad)
sahf
sbb
leave
retf
aaa
and
repnz
mov
cmp
clc
add
or
jmp
iret
call
push
cdq
cmp
adc
xchg
mov
leave
fild
or
add
dec
(bad)
popf
mov
addr16
cmps
int3
je
push
jnp
jmp
rol
cs
test
and
pop
push
pop
mov
jmp
lds
stos
jno
rol
sbb
imul
or
inc
dec
xor
(bad)
mov
push
dec
or
inc
mov
jns
std
fs
push
pop
mov
retf
mov
inc
mov
push
xchg
fisub
pop
fmul
jmp
clc
mov
int
xor
enter
mov
lods
and
push
(bad)
(bad)
jmp
pop
pushf
arpl
and
pusha
stc
(bad)
inc
ror
fwait
push
add
test
xor
inc
dec
xchg
xchg
dec
mov
sahf
test
(bad)
xchg
sbb
or
leave
or
add
fwait
in
jmp
clc
xchg
(bad)
mov
or
inc
push
or
rcl
(bad)
or
pop
jae
mov
fcmovbe
sbb
inc
arpl
cmps
dec
ret
xor
jecxz
aaa
push
dec
fidivr
sbb
(bad)
jno
dec
aam
test
or
add
mov
aas
push
ret
enter
cdq
mov
mov
sbb
sub
(bad)
in
cmp
fiadd
retf
pop
mov
and
repz
inc
inc
mov
scas
test
inc
int3
test
stos
xor
mov
outs
scas
movs
inc
and
cmp
dec
fiadd
pusha
icebp
mov
scas
repz
std
pop
test
push
loopne
aam
or
sub
ds
retf
mov
fwait
int3
gs
dec
enter
mov
retf
out
lahf
pop
and
test
and
in
jo
jg
mov
leave
jecxz
push
sahf
ret
out
sub
pop
imul
mov
inc
xchg
adc
aaa
imul
dec
movs
pushf
ror
mov
rol
in
popf
fwait
sbb
(bad)
xor
sbb
cld
enter
es
bts
(bad)
push
mov
in
mov
outs
mov
gs
add
movs
jmp
push
jbe
inc
out
cmps
neg
jecxz
not
jp
sub
shl
push
inc
sbb
add
push
or
pop
call
inc
leave
jnp
shl
pop
and
or
mov
mov
out
movs
adc
test
jge
popf
push
push
rol
mov
adc
xor
mov
inc
aas
sti
xor
(bad)
adc
fidiv
cmp
lods
inc
out
adc
xchg
je
(bad)
shl
es
mov
repnz
js
imul
sub
or
pop
dec
mov
adc
cld
ret
in
je
(bad)
cwde
js
mov
pop
(bad)
sbb
call
arpl
pop
dec
fisub
add
xchg
das
aad
pop
sbb
pusha
movs
repz
cld
je
adc
fsubr
mov
xchg
loop
add
or
jnp
out
loopne
repnz
and
adc
outs
mov
dec
loopne
mov
cmp
int
fistp
mov
jns
cmc
xchg
sub
adc
mov
pop
mov
sbb
cmp
xor
movs
inc
movs
(bad)
in
mov
mov
inc
lods
into
adc
lahf
inc
inc
sbb
push
mov
push
and
call
call
test
or
js
add
mov
inc
adc
ret
jo
jmp
out
pop
push
push
mov
or
out
pusha
push
jmp
popa
pop
cmp
in
(bad)
ret
repnz
shr
stc
push
ret
leave
jmp
pop
xor
add
test
add
data16
sub
mov
mov
mov
sahf
outs
(bad)
jns
push
adc
mov
sub
addr16
retf
mov
inc
mov
pop
cmp
adc
shl
pop
jo
xlat
mov
add
mov
pushf
inc
mov
fcom
imul
mov
shl
push
jae
jae
jo
int
pop
inc
or
mov
aaa
jo
adc
add
test
push
push
js
cli
call
cmps
ret
aad
fdiv
cmp
mov
call
addr16
fs
lods
cmp
movs
and
dec
aam
(bad)
(bad)
js
xchg
ror
mov
add
rcr
pop
lock
dec
hlt
jns
je
inc
aam
ins
adc
inc
ja
xchg
sbb
rcl
pop
mov
ss
gs
mov
cmp
popf
xchg
xor
aad
lock
cmp
in
mov
jle
push
mov
repz
push
cmp
add
dec
fs
fbld
ja
stc
lods
inc
mov
aaa
and
cmp
cmp
aad
sub
outs
adc
mov
int
pop
push
call
mov
sbb
cmp
jbe
adc
div
mov
arpl
into
sbb
outs
push
push
(bad)
adc
verr
aad
lock
daa
neg
and
cmp
fadd
into
stc
xor
jbe
inc
jl
sar
adc
cmp
sbb
outs
inc
adc
adc
cmps
fmul
jle
xor
mov
sub
jl
xchg
not
ins
stos
frstor
jae
sahf
pop
jmp
nop
cmp
sub
adc
imul
cs
and
shl
in
sbb
test
mov
cmps
and
ins
push
dec
out
dec
cld
dec
or
mov
pop
(bad)
sti
or
loop
add
mov
jmp
push
jae
mov
mov
cmp
cmps
sub
call
repz
mov
cmps
push
je
adc
aam
push
shl
adc
pop
imul
cmp
stos
dec
int
in
cmp
mov
or
inc
cmp
retf
ret
fsubr
push
imul
mov
and
lock
sti
or
push
and
sub
retf
inc
xchg
push
xchg
pop
adc
loope
outs
mov
xor
das
push
mov
cmp
sar
mul
or
cmps
int
mov
or
xor
div
out
loopne
sti
add
xor
dec
sbb
out
pop
test
jl
fisub
call
(bad)
sti
mov
push
bound
sub
lds
cmp
out
in
pop
ds
outs
mov
dec
ins
ds
xor
mov
add
stos
pop
cmp
outs
mov
test
in
cmc
movs
or
xchg
mov
dec
adc
and
rcl
dec
push
xor
mov
mov
inc
ds
shl
xor
dec
or
sub
pop
push
adc
imul
mov
xchg
and
sbb
or
popf
push
inc
and
jns
gs
xor
test
sbb
call
mov
mov
sti
jle
retf
(bad)
pop
xchg
jne
jecxz
inc
pop
mov
ret
call
sti
inc
rcl
mov
retf
xchg
cmp
push
dec
jno
(bad)
adc
loope
lahf
inc
cmp
sahf
loopne
int3
test
mov
div
test
mov
cmc
push
inc
add
leave
add
(bad)
les
sub
fstp
cwde
push
in
leave
stos
mov
movs
push
repz
or
jae
push
daa
(bad)
aas
sub
sub
(bad)
add
cmps
adc
xchg
push
test
jecxz
data16
adc
jl
pop
fs
jp
sahf
cs
push
push
and
mov
sub
add
ins
fs
xchg
lds
and
call
and
xchg
cmp
imul
pop
dec
jne
mov
push
(bad)
arpl
sbb
mov
mov
imul
arpl
xchg
mov
or
jo
pop
cmp
imul
push
cmp
fild
sub
loopne
rol
sbb
push
dec
adc
aam
enter
xor
scas
or
stos
add
mov
inc
xchg
mov
xchg
std
add
jns
fcom
xor
jg
mov
cmp
leave
xor
add
retf
aaa
aad
ds
mov
push
adc
sbb
fadd
stos
add
movs
adc
mov
pop
repz
ror
test
xchg
shr
sub
mov
mov
in
or
stos
fwait
lock
lahf
cmc
mov
ret
(bad)
sbb
xlat
ja
dec
les
arpl
test
loopne
pop
dec
jmp
ins
sub
sbb
add
ror
loope
fcomi
sti
jns
add
xor
fistp
(bad)
mov
or
push
mov
out
push
mov
sub
add
ja
jmp
or
inc
das
and
and
push
cmp
sti
pop
fiadd
ret
fistp
dec
sub
fsub
gs
mov
loop
fiadd
pop
inc
stos
nop
ret
add
adc
pop
rcl
xchg
ret
push
test
xchg
sbb
test
mov
cmp
out
or
shl
mov
or
or
(bad)
mov
mov
sbb
loopne
dec
int3
pop
push
call
icebp
(bad)
cmps
fsub
dec
popa
ins
mov
mov
sbb
adc
jns
test
push
outs
jecxz
sti
sahf
lods
aas
push
daa
jp
outs
xchg
mov
mov
test
mov
popa
or
sub
mov
retf
in
rcl
pop
ret
jmp
xchg
mov
mul
jle
movs
out
add
and
sbb
sbb
jp
sar
pop
pop
mov
and
and
push
(bad)
(bad)
inc
repnz
xor
pop
lds
lods
aad
das
dec
and
cmp
movs
xchg
xchg
outs
push
and
adc
jg
(bad)
retf
test
into
in
push
adc
inc
xchg
push
sahf
adc
sub
call
aas
add
jbe
inc
add
into
jg
jmp
xchg
fwait
dec
pop
jno
mov
pop
sbb
lods
bound
stos
sbb
fidivr
pop
pop
cmp
jg
addr16
push
add
xor
ds
add
arpl
jns
mov
xchg
mov
movs
ret
test
mov
adc
stc
data16
jmp
inc
or
clc
in
mov
xchg
ss
xor
mov
aas
jbe
out
jns
retf
imul
sbb
cmps
repz
jno
cmc
sbb
arpl
rol
fdivr
add
sti
jp
fcos
call
icebp
ret
ret
dec
xchg
sbb
scas
ja
cmp
lods
fcom
cmp
add
sar
jle
cmp
and
aam
inc
mov
adc
mov
gs
cwde
je
mov
mov
pop
dec
daa
dec
cmps
ss
(bad)
cs
cmp
bound
pop
in
jnp
cmp
push
xchg
or
fmul
and
mov
popf
lea
(bad)
and
test
scas
push
in
inc
js
fs
add
mov
ja
lock
popf
pop
or
cli
mov
dec
call
test
jns
bound
dec
and
push
cmc
lahf
lods
mov
out
push
or
stos
lods
lahf
iret
stos
shl
jns
xchg
fisub
repnz
iret
push
adc
inc
xor
fnstenv
add
fadd
cli
add
aam
jge
int3
out
out
retf
cdq
add
sbb
loop
imul
mov
mov
mov
dec
fcomp
arpl
ficom
ret
(bad)
das
cdq
mov
inc
adc
mov
in
and
fcmovbe
imul
fcom
mov
xchg
inc
int
je
sub
ins
pop
out
rol
xchg
stc
cli
xchg
and
cmp
popf
push
cmp
pushf
add
push
dec
sub
ins
icebp
cmp
aas
ds
out
scas
xchg
ffreep
cmp
sahf
mov
xchg
(bad)
and
fwait
mov
add
mov
mov
cmp
iret
mov
push
test
shl
imul
adc
cdq
iret
jl
fidivr
mov
pop
push
mov
and
push
push
mov
fsub
mov
mov
add
ror
and
adc
dec
int3
repnz
retf
jp
xor
sub
push
adc
call
sbb
rcr
test
dec
test
inc
and
mov
mov
lds
adc
xor
dec
cs
fidiv
enter
cmps
xor
mov
setno
mov
jne
jb
push
into
data16
hlt
pop
test
adc
mov
shl
jge
inc
repnz
add
leave
cmp
shrd
xor
scas
pop
das
dec
test
push
call
or
xchg
jb
fdiv
xchg
loope
jp
or
cli
loopne
adc
shl
mul
push
sub
jl
retf
rcr
out
xor
adc
xor
or
push
or
daa
xchg
pop
je
xor
rcl
ud2
test
xchg
retf
stc
cmps
jecxz
push
xor
dec
ins
inc
aas
scas
sub
sub
outs
in
loop
pusha
push
adc
rol
add
mov
fnstcw
movs
loope
ss
(bad)
mov
or
fnsave
pop
push
(bad)
mov
outs
push
in
mov
scas
pop
es
xlat
and
ss
cmps
retf
adc
or
push
(bad)
fild
mov
scas
adc
and
add
stos
jp
shr
inc
inc
cmp
aas
and
inc
jnp
or
or
jl
push
js
mov
and
mov
adc
cwde
shl
jmp
dec
push
test
dec
jnp
adc
lahf
pop
jmp
test
add
mov
imul
cmp
test
fcom
fidiv
inc
jnp
push
mov
mov
inc
adc
lods
jbe
cmps
(bad)
mov
or
(bad)
mov
jno
pushf
cwde
mov
(bad)
xor
fild
call
call
neg
call
ja
push
add
push
bound
pop
jl
jmp
cs
xlat
out
ret
ja
pop
(bad)
fdivr
inc
jge
adc
or
mov
mov
mov
jle
out
cmc
sbb
rol
popf
mov
add
scas
add
mov
lods
aad
lds
inc
mov
sub
aas
cmp
jb
jle
cmps
(bad)
test
xchg
jns
jns
xor
mov
fisub
pushf
icebp
je
outs
xchg
test
inc
xlat
mov
jecxz
xlat
cmps
addr16
cli
bnd
push
mov
mov
pop
adc
daa
fisubr
loopne
mov
daa
mov
xchg
dec
loopne
mov
dec
out
daa
loope
dec
sub
call
push
loopne
adc
mov
cmp
cwde
pop
push
mov
jns
mov
mov
pop
loopne
or
in
stos
sbb
pop
xor
inc
int3
shl
mov
into
adc
xor
xchg
or
test
xor
sbb
cmp
jbe
arpl
and
inc
sbb
xchg
pop
call
mov
add
inc
mul
or
repnz
(bad)
jle
fwait
into
xor
mov
dec
lahf
cdq
sub
mov
retf
dec
pusha
mov
xor
mov
inc
jns
neg
lea
push
mov
out
pushf
ja
jo
ficom
leave
in
push
dec
fs
and
test
push
and
sbb
sbb
push
mov
inc
je
loopne
and
mov
mov
stos
adc
shl
lahf
inc
push
sub
jge
mov
(bad)
ds
or
jbe
or
lock
div
stc
mov
jp
cmp
sub
dec
fisttp
inc
push
imul
mov
mov
xor
lock
mov
cmc
(bad)
and
sbb
push
out
out
adc
imul
leave
cmps
jno
mov
les
ins
xchg
mov
sbb
adc
rol
add
jno
dec
adc
jmp
aam
cmp
xchg
pusha
out
jo
std
dec
mov
in
or
or
sub
jne
movs
xlat
or
sbb
es
pop
xor
xor
movs
hlt
cmp
test
ins
push
bound
in
sub
pop
mov
sbb
fmul
std
xchg
pushf
and
push
mov
fs
fwait
inc
adc
mov
cmp
jbe
inc
sub
sub
adc
fwait
push
out
movs
sbb
mov
(bad)
mul
push
pop
push
or
psraw
dec
iret
jnp
out
sar
mov
lahf
or
or
cs
push
cmp
std
mov
xchg
fidiv
mov
xor
lods
pusha
loope
xlat
fnstsw
mov
out
xchg
jl
fcom
imul
push
pop
sbb
xchg
nop
rcl
into
daa
xchg
adc
adc
scas
jle
xchg
int3
mov
int
(bad)
mov
fstp
push
xor
inc
mov
jmp
push
cmp
addr16
mov
gs
push
and
push
pop
jmp
test
sbb
pop
test
call
lea
push
sub
mov
add
aas
mov
jmp
(bad)
std
dec
ins
dec
mov
xor
in
out
outs
in
mov
xrelease
frstor
out
sub
sbb
mov
cmp
cmps
jmp
pop
xchg
cmp
or
jns
lea
pop
leave
repz
xchg
out
inc
mov
retf
(bad)
sub
mov
fidiv
xchg
popa
pop
(bad)
mov
xchg
push
dec
sti
mov
cld
hlt
inc
aas
push
jo
icebp
add
pushf
add
jne
xor
mov
push
retf
dec
xchg
sti
lds
pushf
fiadd
ret
std
push
fsubr
iret
sti
popf
gs
jmp
xchg
dec
ins
sub
push
pop
adc
and
popf
arpl
call
fisubr
cmp
push
cmp
pushf
add
jl
jb
fdivr
jg
add
sbb
aad
adc
sbb
rcr
frstor
dec
push
nop
sub
call
xor
gs
xlat
fwait
dec
sub
inc
cmps
jmp
scas
push
das
and
mov
mov
retf
repz
mov
inc
nop
sbb
vdivss
mov
jb
and
mov
adc
ins
fisub
and
add
pop
mov
retf
xchg
sti
out
ss
retf
inc
idiv
adc
jbe
push
in
pop
or
jb
pop
pop
mov
xor
shl
xor
cmc
adc
push
daa
lahf
daa
pop
sbb
sahf
hlt
and
(bad)
das
mov
cli
sub
add
lock
repz
out
pop
ret
mov
dec
pushf
inc
pop
xor
fidiv
mov
mov
push
add
retf
push
xchg
scas
int
test
pop
fdiv
jno
mov
inc
add
ds
sbb
mov
and
sbb
add
xor
sub
dec
dec
xor
lea
sbb
mov
pop
xchg
inc
jge
sbb
add
dec
out
push
outs
or
test
or
jge
fnsave
ja
cwde
test
push
ins
or
mov
loope
jne
data16
xor
call
add
mov
adc
inc
enter
mov
(bad)
enter
rcr
fnsave
fld
push
or
retf
js
xlat
test
cld
or
xor
jmp
in
inc
jl
imul
retf
fs
repnz
mov
or
push
jecxz
pop
fild
sub
dec
push
xor
jnp
adc
push
mov
aad
imul
jle
ds
das
lahf
mov
and
push
xchg
inc
(bad)
sbb
inc
leave
daa
sti
mov
inc
out
loopne
and
push
ret
ret
xchg
mul
ret
rcr
push
shl
jo
inc
xor
movs
rcl
lock
or
inc
mov
add
mov
out
jns
test
nop
pop
outs
cmps
cmp
jns
cmps
jns
mov
cdq
jge
sub
imul
ss
adc
loopne
push
clc
mov
mov
sbb
mov
int3
out
sbb
jns
shl
push
add
jmp
add
iret
ror
or
dec
xor
popf
cdq
es
enter
push
push
gs
xlat
test
lods
scas
and
jmp
or
sub
sub
dec
add
inc
or
ins
and
or
pop
loope
and
outs
imul
pop
iret
jp
cmp
xchg
dec
fnstsw
push
and
sub
mov
xor
and
cmps
hlt
into
dec
(bad)
mov
jmp
mov
outs
inc
xchg
cmp
cmp
mov
xchg
and
mov
aad
or
je
fist
push
push
cs
jne
je
neg
movs
jmp
push
outs
mov
cmps
mov
ror
lea
jb
fcmove
stc
adc
cmp
or
(bad)
lds
(bad)
xlat
mov
mov
or
pop
jmp
mov
dec
push
mov
jo
mov
mov
scas
jne
and
repnz
ins
dec
mov
js
into
mov
jae
sub
push
je
jge
jmp
(bad)
sbb
xor
xchg
sbb
pop
in
push
cdq
fcom
sub
in
mov
das
add
scas
aaa
test
fist
cmp
mov
add
pushf
cmp
mov
inc
xor
jecxz
adc
jb
das
vphaddubw
jb
or
push
push
cmp
int
dec
sbb
lds
xchg
lea
dec
push
outs
pushf
ret
sub
shl
ins
mov
mov
and
pop
mov
xchg
inc
or
mov
int3
in
fsub
out
rcr
shr
cld
sub
adc
retf
in
ins
rcr
cdq
sti
push
nop
and
cmc
into
fldenv
or
xchg
je
icebp
ja
mov
inc
mov
or
inc
mov
enter
iret
adc
and
out
rol
nop
repz
imul
rcr
push
lahf
sbb
dec
xchg
adc
xor
ror
movs
ficomp
jmp
jmp
ficomp
stos
movs
sub
xor
inc
cdq
aas
cmp
mov
xor
jno
add
sub
out
call
jmp
stos
xchg
pop
sub
inc
aaa
sbb
shl
push
xor
(bad)
je
sbb
lock
cmp
shl
fiadd
cwde
ins
or
dec
scas
(bad)
dec
or
inc
pop
movs
(bad)
leave
adc
xlat
cld
sub
and
retf
mov
js
pop
out
popf
shr
mov
ds
and
stos
push
xchg
mov
jnp
push
add
(bad)
push
jnp
mov
pop
cmp
sub
(bad)
daa
xchg
pop
push
pop
dec
dec
jae
sub
out
test
cwde
je
daa
or
outs
iret
fdiv
push
and
or
shr
or
cmp
or
arpl
mov
shl
test
push
test
int
jo
dec
sub
mov
push
push
int
add
add
xor
dec
(bad)
aam
(bad)
jb
pop
adc
adc
jmp
gs
ja
leave
rcr
mov
outs
call
adc
(bad)
dec
xor
add
inc
cmp
retf
ror
ja
mov
push
(bad)
mov
jo
cmp
mov
pop
sar
leave
mov
sar
xchg
push
dec
adc
lock
xchg
cld
jne
inc
pop
out
outs
scas
daa
inc
xchg
mov
pop
data16
gs
jnp
int3
add
test
dec
int
sbb
mov
lea
dec
lods
and
pop
mov
fwait
adc
cmp
lods
inc
push
add
push
(bad)
stc
test
adc
pop
retf
sbb
test
call
enter
outs
lea
fisttp
cmp
es
pop
(bad)
xor
mov
mov
mov
nop
ret
fbstp
or
mov
in
cmp
cmps
push
push
jge
std
cld
xor
dec
sbb
jmp
push
jecxz
pminub
bound
cld
jp
mov
jns
push
mov
call
fsub
sahf
cmps
cs
cli
test
or
stos
and
ret
call
push
sub
mov
retf
cmps
test
sbb
ins
ss
retw
cmp
xchg
mov
out
arpl
out
mov
mov
mov
cmps
stc
mov
icebp
sbb
xor
inc
xchg
jp
mov
stos
mov
or
push
(bad)
mov
retf
sbb
mov
repz
xor
or
pop
xor
jmp
cwde
pop
sbb
mov
imul
idiv
data16
inc
adc
or
out
adc
(bad)
fwait
not
add
movs
or
iret
cmp
shr
push
lahf
sar
or
or
mov
cmc
adc
mov
ret
ret
ror
jns
cmp
or
leave
fisttp
stc
mov
leave
mov
retf
into
sub
push
in
aad
sti
pop
hlt
push
push
mov
xor
cmps
js
add
dec
push
popa
test
mov
cmc
inc
(bad)
test
pushf
test
add
pop
scas
mov
push
jno
add
ror
sahf
stos
ins
idiv
jmp
imul
cmp
(bad)
mov
paddsw
inc
call
aas
loope
sbb
or
or
scas
sub
mov
sub
dec
dec
push
adc
gs
inc
mov
icebp
aaa
push
push
or
test
mov
jmp
test
pushf
adc
sbb
inc
popf
fs
sub
push
mov
aad
mov
pop
xchg
js
into
stos
scas
into
ja
bound
sub
jge
mov
test
adc
ret
(bad)
mov
popf
mov
add
sbb
mov
dec
cmp
outs
ins
stos
xor
adc
nop
sub
out
cmp
mov
cwde
(bad)
(bad)
cmps
stc
inc
test
sti
mov
add
pop
stos
out
stos
icebp
sub
xchg
xchg
add
add
ins
enter
jae
fist
xchg
test
in
lods
xor
fdiv
les
mov
popa
test
addr16
shr
pop
push
popf
mov
aaa
push
adc
mov
sbb
mul
aas
aaa
inc
xchg
cmp
mov
cmp
pop
and
jnp
jnp
enter
pop
mov
in
loope
jae
dec
xchg
mov
out
jmp
adc
inc
cli
fisttp
adc
data16
aad
mov
adc
push
add
fcmovbe
iret
sahf
jnp
lods
or
in
(bad)
and
cld
and
bound
idiv
cmc
push
dec
push
popa
icebp
pop
jb
sbb
xor
into
ss
pusha
xchg
aam
xor
jno
cli
mov
retf
pop
add
push
ss
pop
jge
cmp
sbb
mov
mov
idiv
gs
cmp
jnp
in
cli
ins
repnz
sbb
cmps
or
(bad)
cmp
mov
pop
test
xchg
leave
rol
pop
sti
out
scas
in
jmp
inc
xor
rcr
and
addr16
add
pop
test
daa
mov
pavgw
and
pop
ror
jmp
je
leave
loopne
pushf
jg
push
out
sar
cmp
retf
and
mov
or
addr16
std
mov
jnp
adc
inc
xor
xchg
add
mov
push
dec
mov
lea
adc
(bad)
jp
retf
inc
cli
jb
pop
(bad)
sar
mov
inc
pop
lds
mov
sub
dec
outs
out
xor
add
stos
jl
or
dec
xor
stos
in
(bad)
mov
je
fdiv
xchg
(bad)
les
sub
sub
leave
add
das
fwait
mov
pop
pop
mov
mov
out
or
stos
leave
mov
jmp
and
stc
cmp
icebp
cmps
pushf
data16
push
popf
cmp
mov
call
inc
cmp
mov
out
pop
inc
xchg
or
mov
dec
jg
into
les
dec
fstp
push
xor
sub
pop
out
in
push
sbb
mov
sbb
xor
pushf
jae
fsqrt
adc
or
pop
sbb
cmp
(bad)
sbb
inc
add
aaa
outs
push
pop
les
cmc
and
in
imul
dec
call
call
push
fs
push
out
int3
sbb
mov
test
and
test
cmp
sub
cmps
stos
xchg
fdivr
jmp
push
lods
add
(bad)
scas
mov
scas
mov
lds
add
sub
mov
je
fwait
(bad)
cmovno
inc
or
mov
xor
enter
pop
cmp
es
jbe
sbb
ds
ret
jnp
xor
movs
jno
or
push
daa
jl
dec
shr
cdq
inc
sbb
sub
cwde
sar
mov
or
fisubr
mov
mov
sub
pop
test
lods
jg
push
adc
fild
add
add
cdq
aad
and
add
pop
stc
cmp
outs
lods
add
and
pop
sub
add
ret
pop
test
dec
ror
out
dec
in
cmp
pusha
pop
xor
movs
push
add
mov
lods
or
mov
in
outs
pop
mov
mov
pusha
aad
out
mov
int
aaa
(bad)
and
loopne
loopne
repz
mov
shr
(bad)
dec
das
mov
aas
movs
(bad)
sar
pusha
pop
in
out
xor
es
movs
and
mov
pop
cld
pop
mov
fwait
and
push
xlat
stos
cmp
and
mov
mov
or
inc
arpl
dec
mov
mov
mov
or
cmp
movs
push
lds
mov
pop
js
cs
cld
clc
fucomi
add
bound
push
enter
aaa
push
or
jl
xchg
enter
push
and
loop
push
mov
adc
mov
imul
ret
mov
push
sahf
loop
inc
ins
out
ror
adc
pop
sar
push
push
push
in
(bad)
pop
ror
push
cli
popa
push
iret
out
cmp
and
call
pushf
mov
sub
mov
clc
cs
push
sub
inc
or
imul
mov
or
push
std
pop
jge
jae
mul
sbb
cmp
enter
js
pop
dec
and
jbe
xor
adc
(bad)
fdivr
jp
lods
out
cmc
(bad)
pusha
fst
inc
pop
jl
or
lea
mov
ja
push
xchg
jmp
pushf
ins
adc
jecxz
ins
fbstp
mov
mov
nop
cmp
inc
pop
fistp
pop
dec
lods
add
aas
mov
dec
add
fdivr
lock
xor
mov
out
pmulhw
fdivr
fwait
inc
retf
fsubr
popf
sbb
lea
(bad)
jge
jns
cmp
or
ds
or
xor
les
test
inc
sub
adc
shl
push
jl
jl
push
aad
sbb
mov
std
test
and
adc
mov
je
stos
cmp
pop
xchg
mov
cmp
mov
stos
pop
inc
push
mov
js
scas
les
sub
cmp
cmp
pop
outs
(bad)
aam
add
dec
inc
push
in
adc
jmp
cmps
data16
ret
push
aas
movs
shl
stos
adc
fwait
adc
out
int3
(bad)
out
cmps
mov
xchg
pop
xchg
mov
test
cmp
pushf
mov
imul
jns
mov
cmp
xlat
cmp
imul
mov
rol
loope
pushf
out
fld
dec
cs
pop
icebp
je
rep
and
outs
movs
retf
mov
iret
xor
out
ja
dec
inc
jecxz
inc
push
mov
dec
mov
or
ds
pop
jg
lds
je
repz
out
call
in
adc
daa
jg
shl
inc
sub
mov
xor
clc
ror
xchg
movs
(bad)
mov
int
mov
(bad)
lods
retf
mov
sar
sub
cmp
pop
mov
mov
jbe
inc
sub
fiadd
inc
loope
retf
loope
mov
loope
outs
fiadd
(bad)
cmp
and
aad
xor
sub
sub
iret
out
test
div
(bad)
(bad)
cmc
push
push
xchg
das
repz
into
ins
lds
(bad)
and
mov
div
jno
or
and
rcr
(bad)
pop
enter
pusha
sub
lods
push
pusha
adc
push
aas
jmp
mov
pop
aam
inc
adc
pop
cmp
mov
in
(bad)
movs
je
(bad)
pop
mov
std
shr
fwait
bound
jne
sar
shl
push
add
mov
cli
out
jae
mov
sub
mov
dec
adc
inc
icebp
aad
imul
shl
stos
dec
hlt
mov
into
call
js
(bad)
fsub
dec
cmc
add
cli
ins
in
pop
sbb
je
(bad)
rol
push
mov
and
pop
mov
repnz
sub
dec
lods
int3
addr16
sbb
dec
push
shr
pop
pop
sub
inc
repnz
sbb
ss
pushf
inc
(bad)
(bad)
sbb
jnp
jmp
stc
push
mov
mov
and
adc
shl
jno
hlt
mov
inc
js
adc
add
inc
cmp
inc
(bad)
jmp
sub
adc
dec
mov
mov
aaa
xchg
adc
sub
test
pop
pop
xor
dec
adc
inc
mov
mov
or
dec
fmul
popf
sub
inc
pop
imul
or
test
(bad)
lods
pop
add
cdq
mov
push
dec
inc
or
pop
nop
or
or
enter
icebp
rol
iret
sub
stc
mov
lock
les
call
ret
mov
inc
outs
js
sub
movs
jmp
pop
mov
adc
scas
or
arpl
es
dec
arpl
lds
jecxz
mov
repnz
lock
pushf
lahf
inc
loopne
mov
mov
add
test
sti
stos
pop
cld
pop
out
cmps
clc
fisub
stos
adc
push
cmp
add
jns
xchg
cli
int
push
adc
inc
xor
movs
rol
mov
inc
popa
iret
mov
test
xchg
mov
inc
and
cmp
ja
je
sub
in
ja
les
jno
fisttp
jno
adc
rcr
in
imul
mov
pushw
mov
les
sbb
push
rcr
test
push
leave
push
mov
adc
ds
cmp
std
push
mov
ret
popa
and
pmuludq
jns
and
and
sti
outs
and
and
sub
jmp
sbb
push
ss
add
cmc
test
sub
dec
cld
cmc
lods
add
and
sbb
or
inc
adc
rcr
dec
mov
test
push
dec
ficom
dec
out
add
push
mov
and
and
shl
adc
hlt
cmc
inc
mov
nop
cmp
mov
inc
xchg
sub
stc
mov
lahf
mov
es
fld
ret
jecxz
outs
pusha
sbb
retf
out
pop
pop
js
scas
and
fiadd
fisttp
pop
js
loopne
xlat
add
pop
ja
sbb
(bad)
aam
inc
out
(bad)
and
jne
popf
stos
imul
inc
xor
mov
dec
pop
test
into
dec
cli
sub
dec
(bad)
mov
sub
test
sub
js
pop
sub
cmp
mov
pop
sahf
repz
sbb
xor
or
fadd
push
popa
fsub
shl
sub
outs
aaa
mov
fsubr
leave
push
jle
sub
sbb
inc
bound
inc
iret
sar
shr
clc
jl
test
sbb
xchg
inc
sub
daa
jno
sub
cmc
xor
jne
pushf
mov
or
shr
popa
xchg
repz
retf
sub
sar
xchg
jl
xchg
sti
xor
adc
xlat
dec
popa
mov
pop
pop
xor
adc
jno
jle
jl
push
sub
cmp
not
data16
xlat
push
int3
adc
stos
push
sar
scas
xor
dec
ins
aad
sbb
aaa
sub
push
sbb
and
lds
je
das
sahf
fsubr
dec
dec
imul
add
mov
pop
cmc
pushf
sbb
dec
adc
xchg
xor
mov
mov
and
xor
enter
cmp
sub
push
lods
ds
xchg
aaa
lods
mov
lock
shr
and
test
aad
and
jle
push
rcl
ret
cmp
and
in
mov
out
jnp
loop
cmps
ds
sub
data16
fstp
jg
pop
dec
out
out
aam
repnz
xchg
cld
pop
fadd
test
sar
lock
adc
jmp
or
sbb
mov
pop
push
inc
arpl
push
add
fdivr
jg
repz
aaa
hlt
ds
sbb
dec
hlt
mov
jne
pusha
xchg
aas
and
mov
hlt
hlt
mov
xor
sar
or
sub
mov
lock
jo
js
ret
sbb
loop
pop
imul
outs
xchg
retf
arpl
ins
xor
je
adc
cld
icebp
dec
xchg
jle
cwde
mov
mov
push
push
jnp
push
mov
jg
sbb
stos
push
push
xlat
jl
outs
ds
aaa
addr16
cmp
outs
adc
jg
retf
sbb
ins
dec
je
rcr
ins
in
mov
add
push
or
les
adc
or
dec
stc
cld
pushf
sti
test
xchg
xor
or
pop
(bad)
sbb
out
lods
cmp
pop
and
and
sti
arpl
(bad)
retf
pusha
push
loop
fsubr
inc
sub
mov
mov
add
and
xor
sbb
xchg
push
mov
rol
int
jns
pop
or
and
ds
call
fnstsw
jg
mov
imul
mov
mov
push
enter
cld
les
imul
ficom
push
mov
popa
fisttp
adc
adc
pop
jp
mov
out
in
(bad)
xchg
xchg
fs
in
fisubr
cs
push
mov
shl
ss
dec
int
or
pop
mov
dec
test
enter
fsubrp
push
imul
call
cmps
cmps
es
sbb
adc
jmp
jns
hlt
aad
daa
sbb
cmp
xor
push
mov
mov
or
sub
jo
mov
push
xchg
fdivr
fistp
mov
lock
mov
dec
adc
jo
test
test
aas
jo
or
repz
cmp
inc
add
dec
and
xor
cmps
mov
data16
xchg
fcomip
xlat
popf
ja
and
int
(bad)
(bad)
gs
shl
(bad)
fadd
mov
dec
ins
aaa
cmc
in
dec
in
loope
pop
test
adc
dec
leave
sbb
cmp
retf
dec
jo
nop
dec
push
dec
or
adc
addr16
mov
movs
jle
popf
or
mov
sub
xchg
outs
sbb
inc
call
cmp
pop
push
test
pop
in
sub
call
jp
or
je
jmp
les
hlt
ins
test
and
adc
push
daa
pushf
push
inc
cwde
and
mov
iret
sub
dec
push
sbb
and
in
push
retf
jmp
movs
push
outs
clc
popa
sub
ds
sbb
cmp
pop
test
cdq
mov
fwait
lods
cmc
xlat
pop
loop
sahf
lods
jmp
mov
inc
imul
lods
or
pushf
mov
push
aas
adc
sbb
add
(bad)
mov
xchg
xchg
cdq
pop
test
aaa
sti
loop
xchg
out
in
pop
repz
mov
jb
mov
adc
xchg
mov
xchg
sbb
call
jb
mov
in
pop
outs
inc
push
outs
mov
add
das
call
inc
push
and
xchg
or
loope
sbb
dec
jae
sub
jmp
adc
add
sub
sub
xor
call
(bad)
xor
mov
adc
enter
cmp
ds
std
ds
sub
pusha
add
pop
movs
mov
stos
xor
sub
(bad)
or
jg
adc
and
or
xchg
jp
jge
xor
jns
adc
inc
jg
mov
rcl
mov
push
xchg
fs
or
xchg
cld
push
sub
shl
sti
fdiv
dec
xchg
popa
mov
outs
(bad)
outs
adc
inc
push
mov
div
scas
push
xor
mov
dec
sub
jb
dec
push
in
(bad)
jmp
in
and
test
sub
add
or
cmp
retf
mov
sub
adc
mov
(bad)
out
xor
mov
mov
jmp
and
bound
xchg
xor
mov
gs
mov
loop
retf
call
test
out
jp
inc
sbb
cwde
inc
sahf
fst
retf
push
sub
leave
(bad)
push
mov
add
ret
jne
iret
inc
pop
out
out
fadd
sbb
jecxz
iret
inc
jno
ss
xor
dec
xchg
mov
mov
push
scas
jge
js
or
sbb
xchg
lea
xchg
mov
inc
call
and
ins
(bad)
push
and
and
call
mov
rcl
inc
out
out
add
and
mov
mov
xchg
xlat
dec
mov
push
dec
mov
mov
mov
mov
cdq
pop
xchg
pop
in
pop
jno
xchg
out
push
into
add
les
(bad)
cmp
clc
sbb
sahf
(bad)
les
nop
lods
pop
xchg
or
in
retf
sub
lods
popa
cdq
movs
adc
mov
add
mov
mov
xor
ds
xchg
cmp
xor
cmc
(bad)
div
cmp
pusha
outs
pop
pop
repz
adc
pop
pushf
shl
ror
add
mov
jne
mov
pop
cli
inc
push
push
pushf
cmp
xchg
jl
cdq
adc
xor
dec
adc
jg
lock
sub
stos
push
(bad)
fwait
inc
or
into
sti
add
ret
cdq
nop
mov
aam
and
pop
loopne
ins
inc
aad
sahf
les
movs
aaa
jnp
push
jp
popa
cmp
mov
mov
fisubr
add
out
xor
jo
in
mov
dec
call
test
leave
cwde
or
in
push
nop
int3
stos
pushf
retf
sbb
adc
pop
cmp
fs
ins
pop
sub
jbe
cs
fstp
in
adc
pop
mov
mov
fiadd
aaa
xchg
inc
out
sub
mov
push
push
imul
js
xchg
xchg
jge
fmul
push
add
jo
frstor
push
jle
or
addr16
sub
retf
hlt
xlat
adc
cmps
arpl
(bad)
cs
pop
push
xchg
(bad)
es
sti
xor
pushf
fdiv
sbb
imul
jo
out
push
inc
aas
js
inc
mov
movs
fiadd
and
cli
test
(bad)
shr
xchg
sbb
sbb
sar
lds
daa
popf
fnstenv
popf
scas
mov
jbe
int3
xor
mov
xlat
cs
scas
jecxz
mov
js
lods
cmp
rcl
inc
movs
enter
fdiv
add
sbb
pop
imul
inc
adc
xchg
jns
popa
test
inc
mov
cmps
mov
inc
test
rcr
xchg
jmp
add
mov
mov
stos
pop
or
mov
repz
jecxz
pop
pop
aad
nop
lock
dec
call
clc
inc
call
movs
jle
pop
ins
mov
push
sbb
ins
jp
xor
fisubr
in
inc
push
scas
xor
scas
pop
ja
xchg
in
pop
mov
ror
repz
mov
(bad)
xlat
jl
jae
mov
imul
pop
push
fbld
loope
loop
mov
pop
pop
rcr
std
pusha
mov
cmp
sub
dec
loope
mov
fcom
pop
mov
icebp
bound
push
pushf
clc
cmps
les
mov
scas
in
adc
mov
movs
push
mov
dec
fmul
out
fst
and
pop
mov
lods
mov
test
inc
mov
inc
rcr
std
jecxz
adc
mov
pusha
cmps
clc
fucom
adc
jge
das
mov
mov
sub
retf
jl
sbb
call
lock
cmp
cmp
mov
pop
pusha
cmc
push
adc
xchg
mov
imul
pop
fimul
jmp
add
sub
mov
popa
daa
rcl
pop
cmp
nop
mov
push
(bad)
pop
jge
xchg
sub
or
mov
xor
pop
xor
inc
dec
(bad)
mov
ins
aaa
sub
in
stos
cmp
imul
into
mov
scas
xchg
pop
ins
mov
jmp
push
mov
enter
call
stos
push
lea
xchg
test
mov
and
sbb
mov
xchg
in
xor
jmp
(bad)
mov
ins
sub
jle
or
mov
sub
mov
inc
add
inc
sub
stos
into
cld
gs
mov
pop
mov
mov
shl
dec
dec
jnp
mov
mov
enter
test
mov
xor
sub
es
fimul
cwde
cmp
icebp
shl
enter
xchg
xor
ins
fwait
and
ja
int3
out
sbb
cld
lahf
sub
pop
add
pop
fdiv
stos
shr
push
test
jp
fnstenv
es
jae
push
outs
or
ret
jo
vmovdqu
jnp
inc
mov
push
or
sbb
adc
out
mov
fidivr
adc
or
movs
mov
aas
inc
hlt
ja
xlat
adc
cmps
mov
retf
jb
mov
jns
mov
jp
xor
pop
test
adc
popa
movs
enter
dec
mov
popf
aad
sub
sub
call
pop
cmps
ret
retf
xchg
mov
pusha
jmp
or
or
cmp
push
adc
jns
cmps
int3
dec
push
mov
jnp
loop
test
lds
jle
jmp
or
xchg
fstp
and
push
cmc
add
dec
mov
daa
xchg
outs
inc
mov
stos
movs
jmp
mov
daa
cmp
dec
aad
mov
inc
call
push
div
xlat
mov
(bad)
mov
fwait
push
lahf
dec
int3
fst
pop
pop
or
jmp
(bad)
jg
jns
jns
clc
gs
sbb
(bad)
aaa
jnp
(bad)
push
sti
mov
das
dec
fsub
cdq
sub
cs
dec
xchg
xchg
scas
and
xor
mov
lock
xor
(bad)
push
(bad)
pop
repz
addr16
add
pop
mov
jbe
jne
pop
push
(bad)
loop
cs
stos
mov
push
rcl
xlat
and
push
mov
xor
jg
shr
or
mov
fdiv
es
shr
dec
mul
fidiv
pop
push
or
lea
dec
cmps
(bad)
lock
xor
pop
mov
imul
aam
mov
div
aas
xchg
sbb
push
ficom
mov
in
popa
xchg
push
fsubr
sbb
mov
pop
scas
add
and
repz
fwait
mov
mov
or
hlt
jle
lahf
xor
add
add
sub
loope
cld
adc
iret
mov
sub
hlt
push
(bad)
shr
ret
mov
sbb
xor
jmp
xor
inc
add
pop
movs
cmp
aas
shl
and
int
fld
dec
outs
add
call
scas
mov
pusha
pop
mov
xor
fimul
nop
in
add
es
cmp
jle
sub
jle
(bad)
mov
call
fdiv
jp
cmc
repnz
ret
adc
scas
or
out
push
aad
stos
rcl
dec
enter
test
mov
std
test
call
aaa
ret
outs
scas
add
int3
pop
ins
jae
pushf
ret
inc
repz
cld
bound
dec
jb
add
mov
and
mov
fldenv
pop
popf
dec
cld
and
push
pushf
ror
imul
mov
das
call
xchg
add
jg
sbb
inc
sub
sub
gs
jb
popf
pop
jmp
sub
lock
into
sub
push
(bad)
pop
ret
cld
or
cmps
pop
je
stos
cld
jmp
cmp
dec
outs
jle
xchg
push
adc
cmc
aam
xor
ficomp
inc
mov
jae
add
movs
xchg
stos
push
inc
push
cdq
out
jae
loope
div
sub
loop
mov
mov
in
or
sbb
inc
mov
mov
add
shl
jge
les
add
sub
push
mov
inc
stos
test
bound
adc
adc
push
mov
or
sahf
sbb
inc
push
jmp
mov
xor
js
cmp
add
inc
jns
les
adc
pop
movs
xchg
jo
inc
mov
sbb
inc
(bad)
or
lea
imul
hlt
cmp
pop
loopne
sub
into
jno
stos
imul
sbb
test
imul
loope
and
jns
mov
jnp
jo
jbe
je
jmp
stc
shl
les
push
mov
aam
push
dec
test
movs
scas
xor
int3
(bad)
mov
cmps
sbb
imul
xchg
pop
add
mov
test
push
dec
push
mov
ss
xchg
push
scas
jmp
fcomp
dec
aas
pop
jl
mov
fmul
cmc
lods
mov
inc
pusha
mov
adc
scas
push
and
(bad)
call
push
xor
inc
enter
and
std
mov
in
pusha
push
jp
rcl
cmp
pop
xor
mov
xor
pop
loop
xor
jmp
in
inc
push
sbb
jae
leave
(bad)
sbb
fisttp
inc
mov
xchg
inc
and
clc
pop
or
mov
mov
and
ret
lahf
pop
ja
mov
(bad)
clc
push
ret
jp
jns
mov
inc
mov
js
and
pop
cwde
shl
int
jbe
ja
test
into
test
jbe
jp
das
jge
xor
and
sub
addr16
cmp
fbstp
imul
mov
jmp
cmp
jmp
push
pop
outs
ins
xlat
stos
xor
outs
mov
out
ja
(bad)
ss
add
adc
dec
popf
jl
cs
pop
scas
dec
(bad)
in
xlat
or
sbb
pop
pop
pop
xor
sub
fst
dec
int3
jne
and
push
add
sbb
xchg
mov
and
jmp
adc
xor
je
ja
mov
out
icebp
loopne
pop
xchg
mov
into
push
push
or
or
or
adc
mov
jo
inc
mov
push
adc
shl
aaa
rol
xchg
(bad)
test
fidivr
jp
mov
out
shr
mov
mov
js
mov
shr
mov
inc
sub
inc
mov
ja
and
adc
jb
sbb
ja
jmp
xor
aam
cmps
inc
inc
scas
inc
mov
xor
into
mov
lahf
enter
fs
mov
push
jnp
push
in
mov
xchg
mov
adc
test
push
inc
(bad)
push
sub
fs
add
ins
dec
jle
push
lock
inc
xor
mov
add
fbld
(bad)
repnz
and
mov
clc
jp
push
xchg
mov
fwait
pushf
push
and
leave
sbb
std
push
dec
adc
add
xor
jle
pop
sbb
jo
inc
les
xchg
add
mov
dec
xchg
jno
and
lods
hlt
sar
call
xor
add
ficom
sti
pop
pushf
data16
pop
movs
and
jecxz
push
sbb
repz
cli
adc
sbb
mov
push
nop
idiv
inc
jb
mov
adc
retf
adc
cmp
sub
pop
pusha
cmp
or
aam
in
inc
push
cmc
lea
cmps
retf
mov
int
mov
or
mov
(bad)
jecxz
sub
and
mov
push
int3
rcl
jp
pop
dec
jnp
fcom
mov
lods
and
(bad)
xor
mov
or
pop
dec
pop
cld
fild
test
outs
das
sbb
push
bound
adc
aaa
lea
mov
fdivr
adc
fstp
mov
and
push
cmp
ror
ins
push
sahf
dec
std
xor
inc
test
sub
fwait
cli
je
(bad)
lods
jg
aam
jb
jl
test
cmc
inc
stos
xchg
(bad)
fcmovnbe
lods
or
jp
jmp
das
pop
stc
jnp
outs
shl
cmp
mov
pop
sbb
clc
pop
lds
mov
sbb
and
sar
scas
adc
push
sbb
call
hlt
jmp
das
rcr
repnz
popa
dec
lock
and
cdq
jl
imul
sar
jb
fisub
or
or
leave
lds
cwde
add
mov
cmp
call
inc
push
and
push
scas
fimul
cmps
hlt
aam
call
fdivrp
pop
fcom
push
mov
pushf
dec
adc
or
fild
push
pop
(bad)
in
ins
int
call
mov
mov
xor
dec
sbb
push
outs
retw
xor
fs
mov
(bad)
aam
loopne
or
adc
cmp
pop
movs
or
(bad)
outs
xor
gs
adc
mov
cmp
ja
or
or
rcl
hlt
nop
hlt
lock
cwde
(bad)
popf
jecxz
je
out
mov
test
shl
mov
sub
xor
dec
mov
jmp
sbb
dec
lods
test
je
(bad)
das
xchg
mov
pusha
fs
inc
icebp
scas
pop
rol
ret
fsubr
cmps
rol
outs
retf
push
cld
adc
and
aaa
cmc
hlt
sbb
sub
cmc
stos
std
cld
xor
stos
or
out
ficom
xchg
arpl
dec
aas
mov
add
mov
push
cmc
daa
push
xchg
repnz
loop
push
arpl
cmp
das
data16
jp
pop
cmp
inc
pop
ss
imul
test
pop
add
ds
stos
xchg
cmp
call
out
push
(bad)
rol
cmp
mov
clc
jo
enter
imul
sub
into
in
das
inc
clc
or
int3
arpl
hlt
push
xor
(bad)
sahf
ret
pop
adc
dec
retf
sbb
sbb
mov
ja
pop
mov
imul
jecxz
imul
mov
xchg
xor
sahf
push
inc
lahf
sub
into
cmp
retf
mov
cmc
jle
mov
pop
sbb
int3
rol
pop
inc
and
test
sbb
inc
xchg
jo
and
adc
push
push
push
call
imul
in
ss
movs
ds
xor
push
mov
push
aaa
jo
cmp
out
repz
popa
lds
pop
xchg
mov
ret
pop
je
mov
adc
mov
gs
mov
pop
push
mov
mov
in
push
pop
cdq
scas
xchg
test
mov
inc
stc
sub
das
in
stos
into
dec
aaa
js
lahf
fstp
data16
shr
aam
cbw
xchg
add
push
mov
je
(bad)
rcl
xchg
cmps
inc
or
or
sub
fist
adc
add
pop
imul
fnstenv
int3
adc
ss
jbe
(bad)
jp
fwait
push
mov
xchg
sub
and
pop
sub
jl
scas
(bad)
sub
pusha
pusha
dec
push
sbb
sub
cmp
push
or
push
sbb
enter
dec
dec
sub
(bad)
or
fcomp
lahf
out
cmp
out
push
fiadd
hlt
xchg
push
movs
call
clc
ret
xchg
or
push
xor
push
mov
fsubr
mov
mov
fnstcw
test
lds
in
mov
adc
mov
test
pop
loope
or
loope
xchg
jno
mov
jmp
jne
cmps
xchg
and
push
test
pop
imul
pop
movs
iret
jae
pop
xchg
pop
mov
add
or
mov
sbb
in
inc
sub
aaa
nop
pop
and
jne
(bad)
xor
adc
ins
inc
xchg
sub
(bad)
jne
push
paddusb
inc
ss
ret
shl
pop
push
hlt
mov
sub
pushf
inc
xor
pop
pushf
mov
fsubr
stc
test
jp
call
inc
push
and
mov
lods
add
jbe
push
mov
icebp
mov
dec
push
xchg
sub
xlat
int
xchg
jecxz
iret
cmp
ja
push
mov
xor
(bad)
dec
mov
push
rcr
test
aam
mov
fdiv
popf
lods
jno
push
cmp
inc
ret
jge
(bad)
pop
test
hlt
fnclex
neg
and
jp
or
xor
inc
jno
neg
cmp
cdq
sahf
mov
mov
adc
out
call
lds
xchg
mov
aaa
dec
cdq
call
xor
xor
inc
xchg
ss
rcr
out
clc
inc
jl
(bad)
dec
fs
mov
and
mov
in
push
fndisi(8087
adc
ret
out
lahf
xchg
jmp
movs
aam
hlt
inc
mov
pop
ror
in
sbb
adc
das
dec
cdq
mov
sub
out
xor
call
xor
xor
in
jno
es
cwde
cmc
lods
xor
ins
push
xchg
js
or
pop
mov
jmp
xchg
fsub
pop
mov
and
pop
adc
mov
adc
fadd
pop
inc
js
mov
pushf
clc
into
dec
mov
add
jno
sbb
stc
mov
jecxz
cmp
jns
dec
imul
push
sbb
shr
pop
push
xchg
jns
fldcw
fnstenv
jg
mov
mov
es
sbb
push
push
adc
es
iret
scas
push
ins
pop
fcomp
mov
cmp
(bad)
mul
jmp
loopne
cs
inc
addr16
or
adc
cmps
mov
arpl
dec
sbb
cmps
and
fwait
js
mov
and
fsubp
mov
inc
mov
jge
xchg
jle
cmps
mov
loope
xchg
xchg
icebp
fadd
in
nop
fwait
out
inc
(bad)
iret
call
cmp
jmp
mov
rol
loopne
and
jge
add
jae
pop
div
mov
rol
push
adc
xor
or
(bad)
push
ins
(bad)
jnp
iret
cld
mov
(bad)
arpl
(bad)
adc
out
(bad)
sub
gs
sub
arpl
in
cmp
jg
dec
outs
jnp
(bad)
jno
xlat
fild
pop
iret
mov
adc
sub
out
push
(bad)
cmp
repnz
inc
sbb
aas
sbb
fld
sbb
js
cmp
rcr
cli
shr
fcomp
pop
adc
push
pop
push
dec
iret
dec
imul
xchg
mov
xlat
push
popa
cld
lds
add
lods
dec
rol
scas
ds
jmp
inc
or
dec
sahf
fst
jbe
test
(bad)
in
mov
sub
pop
unpcklps
and
cmp
or
xchg
pop
ficom
aas
push
sub
es
mov
call
sbb
ins
mov
inc
cmp
pop
repnz
(bad)
sub
(bad)
mov
mov
cdq
or
inc
adc
mov
scas
cmp
or
or
fsub
dec
inc
cmp
retf
mov
jmp
pop
or
or
je
push
je
push
(bad)
adc
xor
jns
test
add
hlt
mov
icebp
mov
mov
js
mov
cmps
nop
push
loope
call
pop
ret
mov
movs
cmp
mov
xor
sub
inc
inc
movs
jns
cdq
adc
or
inc
push
pop
cli
ins
or
(bad)
pushf
push
sahf
leave
xor
ja
shr
loopne
dec
jns
xor
inc
retf
sbb
xor
mov
stos
daa
hlt
into
jmp
imul
sub
and
test
lods
imul
cmp
mov
push
jp
out
pop
adc
data16
loopne
retf
dec
(bad)
mov
mov
mov
pop
or
data16
pusha
cmp
xchg
jmp
add
jp
jns
mov
xchg
adc
and
pop
push
movs
outs
out
daa
movs
in
pop
dec
aas
int
add
mov
pop
in
lahf
ss
jnp
call
or
push
xchg
xor
les
or
das
icebp
xchg
cwde
aad
loope
cmp
and
jmp
sbb
sbb
pusha
inc
cmp
into
cmp
out
mov
(bad)
ja
push
push
jmp
ror
(bad)
daa
jmp
pushf
mov
nop
xor
and
shl
into
lahf
pop
fldenv
mov
clc
inc
movs
sahf
jbe
dec
ss
hlt
(bad)
fimul
and
ds
addr16
and
jmp
inc
scas
sbb
ins
pop
(bad)
ss
in
nop
fcom
jmp
adc
cdq
mov
iret
stos
cmps
push
push
leave
je
mov
js
push
or
pop
lock
pushf
pop
inc
push
dec
inc
mov
hlt
or
mov
xor
int
xchg
pop
call
jb
fistp
cmp
mov
cmps
outs
int3
xchg
mov
inc
(bad)
dec
call
mov
cmp
retf
adc
clc
lahf
dec
aas
push
cmp
sbb
push
std
lods
dec
sahf
or
xor
jge
std
dec
mov
add
jmp
mov
mov
daa
add
not
rcl
inc
gs
aad
jne
retf
sub
inc
mov
mov
xchg
nop
mov
js
dec
daa
sub
dec
leave
leave
mov
hlt
imul
in
outs
sub
sbb
js
cmp
out
push
int3
scas
icebp
stc
sub
lods
push
movs
movs
adc
outs
adc
adc
mov
push
and
jg
imul
(bad)
or
xlat
mov
loop
pop
fadd
jge
cmp
and
je
faddp
dec
lahf
pop
pusha
cmp
fdivp
clc
adc
cmps
or
fwait
mov
xor
cmp
xchg
pop
pop
dec
sbb
iret
jbe
sbb
inc
(bad)
and
mov
cmp
(bad)
mov
das
dec
mov
jl
das
pop
(bad)
call
xchg
mov
push
adc
sub
and
mul
jp
shl
stc
mov
int3
(bad)
xor
bnd
mov
ins
xchg
jb
xor
adc
mov
or
jl
iret
shr
psubq
test
adc
or
frstor
inc
retf
and
dec
ins
inc
loop
dec
adc
mov
mov
mov
fmul
(bad)
out
scas
addr16
retf
sub
fistp
pushf
jbe
aam
push
push
test
imul
cmp
push
pop
in
lahf
outs
scas
inc
jae
adc
lahf
mov
jo
ins
addr16
mov
sub
cmp
push
les
(bad)
push
pushaw
jmp
jae
inc
or
outs
xor
and
cmps
nop
jnp
retf
add
adc
ror
addr16
stos
add
hlt
sub
retf
fs
sub
sti
xchg
jle
cmp
out
adc
sub
aas
jge
dec
fwait
adc
xchg
cmp
mov
rol
ret
test
jno
pop
fcmove
sti
push
test
lods
push
ror
jge
mov
enter
cwde
jmp
push
xlat
test
adc
mov
shl
popa
push
jb
les
cdq
sar
mov
jno
sar
fwait
movs
adc
ja
cmp
out
je
aam
pop
ret
fdivrp
pop
(bad)
loopne
xchg
daa
mov
cmp
dec
push
sub
inc
xchg
mov
shl
es
clc
lahf
rcr
sub
ins
xor
rcl
pop
jg
mov
add
mov
shr
pop
dec
mov
adc
xchg
ficomp
jge
out
mov
lods
mov
or
sub
mov
sbb
stc
outs
mov
div
or
fcomp
dec
aam
fmul
loopne
jmp
sub
cs
retf
imul
jns
(bad)
lahf
cmp
add
pop
bnd
add
pop
push
pusha
or
out
scas
loop
sbb
gs
aad
pop
jl
cmp
pop
or
iret
xchg
dec
loop
sbb
dec
loopne
jmp
or
(bad)
push
jnp
out
int3
leave
xor
gs
push
xor
sub
jb
leave
sbb
push
jno
jmp
xchg
pop
sbb
fdivr
icebp
and
cli
fst
mov
cmps
xor
sbb
push
stc
loop
mov
loope
add
push
mov
jecxz
test
add
inc
pop
cmp
(bad)
xor
pop
stos
add
lahf
(bad)
popf
cmps
xlat
dec
jb
mov
cmp
shl
pushf
cdq
and
jge
scas
loop
or
dec
xchg
sar
xor
or
retf
cmps
fst
mov
push
loope
ins
xchg
xchg
mov
fidiv
push
int3
xchg
int3
cmp
add
sub
iret
shr
js
shl
ja
inc
mov
mov
out
retf
add
outs
push
inc
scas
outs
sub
cmp
push
idiv
retf
jmp
fisub
clc
jmp
add
daa
loopne
and
push
dec
rol
lahf
adc
jbe
gs
sub
mov
repz
fistp
add
sbb
jae
and
lods
push
cli
(bad)
ss
xor
pusha
xor
xor
enter
ja
sbb
data16
pop
repz
pop
mov
outs
cld
ret
push
nop
push
jae
add
sbb
jb
repz
and
push
dec
out
jo
pop
xor
sub
add
into
stc
outs
dec
mov
add
test
cmp
mov
sahf
xchg
outs
scas
jno
shl
jle
stc
jb
xchg
and
es
sar
test
adc
sub
mov
push
test
mov
push
sbb
mov
or
aas
cld
mov
rcl
mov
loop
mov
and
popa
inc
dec
int3
mov
dec
mov
(bad)
rcr
pusha
out
mov
mov
das
psrlw
dec
(bad)
push
sub
cmps
iret
and
leave
retf
fcomp
inc
das
test
out
movs
mov
xchg
in
or
pushf
pop
and
mov
jno
push
pop
sbb
(bad)
pushf
in
mov
sahf
inc
neg
mov
pusha
sub
push
ret
mov
hlt
aad
push
repnz
stos
add
sub
adc
push
lods
outs
pop
outs
ds
inc
adc
popa
adc
xor
or
pop
add
mov
push
xor
xchg
and
sbb
fsubr
mov
add
sbb
pcmpgtw
xchg
mov
jno
call
(bad)
add
fild
mov
mov
jge
mov
add
out
sahf
mov
out
out
cmps
ins
rcr
in
and
jmp
sub
test
stos
cld
rcl
adc
mov
add
xchg
stc
cwde
call
or
xlat
scas
add
push
fldenv
pop
mov
pop
outs
cmps
xor
cmp
cmps
enter
enter
jno
mov
sbb
in
cmp
push
lods
dec
push
loop
jne
(bad)
xchg
fsubr
xchg
ret
add
retf
imul
or
sti
jg
dec
sbb
dec
dec
adc
xor
ret
in
sahf
push
sar
cmps
push
retf
cmp
pop
sbb
add
push
jno
adc
xlat
sbb
(bad)
out
push
push
or
and
call
add
mov
cmp
mov
push
daa
inc
ss
jl
mov
(bad)
int
je
jmp
sub
sahf
ins
test
ja
xchg
mov
call
mov
ror
xor
bound
mov
add
add
rcr
sbb
stos
lock
movs
and
leave
pop
call
xor
out
push
pusha
arpl
jae
repnz
repz
sub
retf
(bad)
sub
data16
bound
test
sbb
in
or
lods
outs
pop
scas
aaa
int3
(bad)
repz
adc
mov
pop
mov
pop
movs
test
jno
rcl
out
das
cmp
pop
in
rol
lods
xor
cmp
mov
adc
ds
sahf
leave
jp
int3
sbb
sub
test
or
sahf
inc
into
out
mov
fs
and
inc
adc
ds
movs
popa
or
rcl
add
and
xor
fld
and
int
data16
or
das
ret
fld
push
ins
or
mov
std
mov
mov
jmp
in
pop
imul
or
cmc
dec
cmp
cmps
cld
or
std
ss
cmp
dec
pusha
and
ss
rcl
test
cmp
les
pop
pushf
pop
cmps
cmps
jb
(bad)
push
ss
inc
cmp
ins
mov
(bad)
mov
inc
hlt
sbb
(bad)
lods
ins
xchg
loop
push
xchg
test
fcomi
and
mov
adc
imul
cmp
ds
jnp
jns
and
outs
aas
stc
mov
fwait
call
push
inc
and
movs
mov
add
into
(bad)
in
rcr
fucomip
sub
ror
repz
lea
xor
cmp
push
xchg
jb
loopne
aad
cli
mov
pop
call
lahf
(bad)
xchg
push
fist
mov
jecxz
in
repnz
mov
and
mov
xor
xchg
jmp
ds
and
mov
mov
stos
push
(bad)
cdq
cdq
ret
lods
popf
repnz
push
out
mov
sub
mov
mov
adc
jmp
adc
inc
fnstsw
ror
xor
fsub
jge
mov
inc
fwait
sbb
enter
lahf
xchg
fs
addr16
and
cmps
repz
(bad)
aam
jg
repnz
(bad)
push
out
and
dec
sbb
fld
(bad)
sbb
xchg
jne
mov
sub
push
std
adc
aam
xlat
or
adc
push
sbb
int
dec
jb
dec
scas
aam
aaa
mov
(bad)
aad
gs
push
sbb
hlt
cmp
xchg
lods
pop
daa
mov
das
mov
inc
mov
inc
inc
enter
enter
mov
adc
std
cs
and
and
popf
adc
jl
sub
push
add
int
and
push
xchg
cmc
sub
xor
xchg
(bad)
es
mov
xchg
dec
jg
das
add
mov
add
dec
jo
jle
aad
sbb
mov
rcl
xlat
xor
popf
test
sub
hlt
push
add
add
push
add
xchg
mov
mov
mov
out
pop
xor
rcr
rcr
arpl
mov
push
test
xchg
mov
fwait
das
gs
int3
xlat
cmp
popa
sahf
cwde
fisubr
mov
sbb
aaa
popf
test
sbb
hlt
(bad)
pop
shr
jmp
or
mov
(bad)
mov
stos
int3
enter
push
mov
push
push
lods
mov
lahf
sbb
mov
fld
xor
xchg
sahf
ss
lods
(bad)
out
push
xor
aaa
jnp
xchg
xor
jne
xchg
fisub
mov
fisub
sub
lods
stc
push
mov
pushf
xchg
fmul
je
test
imul
inc
dec
push
add
call
push
fistp
fidiv
cmp
and
jle
mov
cmps
dec
adc
jb
aaa
cmp
outs
sti
push
sub
mov
out
ret
sti
dec
(bad)
cli
ret
jae
daa
push
test
mov
or
std
repnz
gs
(bad)
iret
ror
and
cmp
sbb
cdq
push
in
xor
outs
dec
mov
lods
ffreep
pop
cmp
mov
mov
ds
push
cmps
dec
in
repnz
in
sub
lods
dec
mov
sub
(bad)
fistp
bound
and
nop
inc
les
lea
pop
out
xchg
mov
xchg
jp
pop
cdq
push
xor
jp
repz
jge
leave
stos
inc
stos
data16
dec
cdq
out
out
mov
mov
je
and
inc
or
jmp
movs
stos
and
rol
mov
jp
les
test
mov
pop
sub
jge
mov
shr
(bad)
sub
push
jns
mov
pop
jbe
cmps
push
rcr
dec
shl
fidivr
das
sbb
rcr
(bad)
mov
in
out
push
xor
mov
inc
sbb
bound
or
mov
ret
vxorps
sti
jae
cmp
pop
mov
jmp
push
push
cs
cmc
stos
mov
cwde
mov
or
xlat
jecxz
popa
test
mov
pop
pop
sbb
add
das
pop
push
xchg
dec
add
jmp
icebp
mov
or
lods
stos
xor
mov
push
jmp
push
fmul
push
shl
jg
int
mov
test
inc
and
cmps
jbe
cmp
mov
(bad)
push
sub
js
int
dec
gs
sub
aam
or
inc
inc
xlat
cmp
dec
xchg
arpl
xchg
xor
ja
(bad)
mov
mov
jno
jl
mov
dec
mov
xor
lea
shl
jno
ds
or
lods
dec
ins
fsub
into
test
mov
adc
xor
jno
xor
push
inc
mov
jmp
scas
dec
je
xor
rcl
mov
mov
lods
imul
pop
outs
jge
movs
mov
push
inc
jb
(bad)
scas
sbb
sbb
cmps
adc
sub
pop
cld
scas
xchg
xchg
cwde
adc
retf
cmp
jno
call
shr
cld
cmc
movs
aad
pop
fsubp
cmc
ins
sub
xchg
sar
cmp
xor
mov
bound
xor
test
movs
cmp
repz
inc
or
(bad)
xor
rcr
clc
and
adc
push
or
enter
adc
js
mov
push
xor
inc
inc
jnp
push
adc
pop
out
fiadd
enter
jmp
dec
sbb
outs
mov
jnp
jmp
(bad)
loopne
les
sub
mov
push
adc
sar
stos
dec
data16
jecxz
cmc
daa
inc
xchg
shl
std
das
lea
push
cmp
ins
push
add
push
mov
cmp
pop
ins
rol
fmul
inc
add
repz
(bad)
enter
dec
push
pop
sbb
cmc
sbb
cwde
out
xor
dec
cmp
rcr
repnz
mov
mov
inc
pushaw
and
fbstp
fwait
xchg
fld
adc
retf
pop
dec
xchg
mov
jo
pop
jbe
sub
pop
or
shl
pop
and
sub
jmp
xchg
sub
aad
(bad)
out
popf
movs
(bad)
xor
fld
mov
les
dec
mov
stc
mov
or
pop
pop
not
pop
aad
mov
popf
and
or
cld
mov
cmp
dec
push
stos
push
or
adc
jno
and
pop
or
(bad)
int
lods
cmp
imul
in
fdivr
mov
dec
dec
fsincos
dec
je
xor
in
mov
mov
sub
(bad)
fisttp
dec
ins
pop
data16
imul
mov
sub
scas
outs
and
test
push
inc
xlat
sbb
call
inc
inc
mov
adc
pop
pusha
jnp
clc
and
js
push
sbb
retf
xchg
and
lods
add
mov
enter
xchg
ficom
jnp
xor
or
fcmove
in
jno
inc
add
(bad)
jne
aad
xlat
sub
mov
push
out
lds
push
mov
and
in
mov
cwde
repz
dec
push
ja
mov
jb
loopne
fcomp
pushf
popf
push
sub
xlat
pop
or
dec
sbb
lods
repnz
fistp
jge
or
popf
jmp
jecxz
cmp
sbb
dec
std
jle
(bad)
js
lock
dec
add
lods
fld
sbb
inc
add
imul
out
sub
jmp
jmp
scas
add
mov
test
icebp
test
(bad)
push
ds
jbe
mov
icebp
cmc
adc
xcrypt-cfb
cmps
sub
push
lock
inc
out
cld
xchg
(bad)
sbb
xchg
push
sub
call
test
stos
popa
mov
push
sub
cdq
lea
dec
sub
xor
fs
mov
mov
jp
inc
fmul
dec
movs
jge
fcom
pop
jge
stos
stc
out
cmp
cmp
add
push
cmp
lock
arpl
push
ret
movs
int3
cmps
in
cmp
fcomp
sahf
dec
es
inc
pop
xor
lahf
xor
(bad)
xchg
call
scas
inc
and
pop
imul
inc
mov
push
inc
xchg
addr16
in
mov
sub
cmp
mov
jns
out
fld
test
sti
push
inc
mov
fwait
js
adc
add
cmp
jnp
sbb
cli
cs
push
stc
push
mov
cmp
cmp
and
xchg
or
mov
inc
(bad)
cmp
dec
and
jge
cwde
add
mov
sbb
xor
outs
mov
sar
loopne
lock
add
stos
cs
(bad)
lock
mov
into
jnp
xor
cwde
and
cdq
shl
test
mov
pop
dec
lahf
adc
pop
mov
dec
mov
cmp
dec
mov
mov
out
sti
sub
dec
inc
ds
xor
mov
or
mov
fs
ret
shr
or
or
into
rcr
cmps
lea
or
dec
xor
mov
or
push
mov
push
push
pop
repz
test
fwait
sahf
mov
jg
fistp
jnp
ja
pop
add
adc
sbb
dec
in
add
ds
xchg
icebp
and
adc
and
call
add
sti
adc
mov
cmp
out
mov
xor
nop
mov
sar
xchg
cld
in
aaa
push
fs
inc
and
jbe
lods
push
push
xchg
ja
cmp
xchg
mul
sbb
scas
aaa
(bad)
and
out
push
push
lds
shl
pop
mov
adc
fwait
push
mov
outs
mov
mov
(bad)
(bad)
lods
scas
mov
test
lods
mov
inc
les
push
jecxz
xchg
mov
call
or
addr16
inc
leave
ror
mov
mov
xchg
add
pop
xlat
out
xlat
neg
or
dec
and
sbb
movs
fwait
jmp
(bad)
push
push
or
ret
cwde
dec
sub
sbb
div
mov
or
in
jecxz
imul
adc
(bad)
mov
adc
jae
fiadd
(bad)
bound
xor
(bad)
pop
js
push
mov
mov
sub
out
dec
and
(bad)
mov
jmp
push
sbb
aaa
popf
ss
dec
leave
rcl
push
sbb
mov
xor
retf
scas
cmps
sbb
stc
xor
push
test
mov
inc
inc
test
pop
fs
stos
push
and
ret
xchg
lods
push
cli
leave
xchg
ins
pop
pop
and
sub
aaa
xor
sahf
mov
hlt
test
fst
out
bound
mov
call
std
arpl
test
dec
idiv
xchg
inc
pop
test
cli
repnz
xor
mov
mov
xor
xor
jg
xchg
lds
pop
sub
sbb
icebp
push
dec
inc
pop
inc
sub
test
jae
loop
cwde
sbb
cli
cmp
ds
aaa
fimul
xlat
mov
cmps
bound
jne
push
(bad)
cwde
add
stos
push
fld
jo
jae
std
mov
out
ins
aad
scas
jmp
test
mov
and
in
xchg
xor
das
fwait
repz
and
cmp
adc
enter
jmp
mov
popf
jns
jmp
adc
aaa
lds
pop
cmp
lahf
sbb
cmps
out
cmp
jge
test
xchg
in
or
fwait
xchg
sbb
adc
push
jns
das
push
loopne
call
inc
rol
bound
pavgw
ins
test
stc
pop
movs
xchg
imul
push
mov
or
pop
mov
jae
add
jno
inc
cmp
add
dec
push
sbb
xchg
stc
dec
mov
repz
mov
jns
mov
or
shr
adc
push
xor
jmp
xchg
stos
and
pop
jbe
mov
retf
pop
out
je
and
mov
psubw
into
test
or
adc
inc
cs
pop
jns
inc
mov
in
movs
sub
fild
push
in
in
and
fadd
cmp
xor
mov
and
movs
pop
aad
outs
dec
inc
gs
xor
imul
adc
mov
jmp
(bad)
jo
(bad)
dec
inc
add
xchg
(bad)
mov
add
repz
dec
sbb
pop
dec
jp
loope
xchg
mov
rcr
pop
outs
scas
lods
iret
out
stos
popa
cs
dec
or
movs
cmp
pop
adc
pop
data16
xchg
cmp
mul
jne
add
aam
sub
jmp
int3
inc
bound
fwait
mov
lahf
dec
inc
(bad)
cmp
les
sub
adc
and
or
xor
cmc
out
mov
mov
sbb
sbb
inc
jno
int
fwait
sbb
hlt
dec
imul
cmc
xor
push
fld
addr16
push
fwait
(bad)
fincstp
pop
xor
mov
jne
(bad)
rol
scas
jno
ror
mul
sti
push
je
addr16
mov
mov
push
ret
lods
xchg
push
xchg
mov
sub
inc
pop
nop
mov
int3
dec
dec
call
(bad)
retf
clc
jno
hlt
ins
fs
sub
adc
xchg
test
push
out
cmps
sbb
and
(bad)
cs
jno
lods
pop
dec
pusha
pop
mov
mov
lahf
push
icebp
dec
mov
mov
add
and
push
xor
push
mov
sub
add
dec
leave
gs
mov
popa
jbe
ja
cs
mov
inc
xor
(bad)
test
outs
pop
inc
cld
imul
retf
push
push
in
stos
pop
sahf
adc
stos
jnp
out
int3
sub
loope
bound
pop
ror
mov
jno
leave
stos
jge
add
mov
fadd
sbb
xchg
add
ror
loopne
adc
cld
shl
(bad)
int3
and
xchg
mov
mov
and
inc
jne
mov
gs
les
mov
adc
cmp
imul
add
retf
in
mov
add
ror
mov
fstp
mov
mov
xchg
xchg
js
cmp
stos
sti
sahf
xchg
pop
mov
push
xchg
(bad)
mov
pushf
xchg
add
bound
and
sub
int3
aas
and
xchg
jmp
or
pop
and
xor
xor
sahf
mov
repz
seta
leave
retf
jns
sbb
sahf
addr16
lds
ins
push
and
aaa
jns
mov
test
mov
and
fcom
cs
jns
lea
push
pop
jmp
hlt
in
jmp
ja
(bad)
add
cdq
mov
xor
ds
fxch
jp
dec
stos
dec
mov
shl
adc
adc
les
xchg
xchg
outs
clc
pop
repz
dec
fst
sbb
xchg
(bad)
in
sbb
in
mov
scas
ins
loope
js
cmp
repnz
ss
push
(bad)
popf
or
xlat
sbb
xor
pop
test
xchg
int
cmp
mov
jmp
ins
das
rol
cmp
pop
mov
jbe
retf
sbb
out
inc
jg
aas
lahf
inc
jmp
nop
lods
iret
xlat
push
ret
repz
mov
lds
push
aad
shl
xor
adc
js
stc
sahf
cmp
push
cmp
ret
mov
sbb
out
int
xchg
push
jne
cmp
add
test
jnp
lea
pop
pop
sbb
mov
mov
stos
lods
push
outs
inc
(bad)
cli
aad
push
xchg
je
jge
sub
pop
test
or
mov
add
pop
xchg
aam
add
popf
addr16
loopne
inc
(bad)
out
pop
mov
mov
xor
inc
mov
(bad)
jmp
sub
mov
lock
scas
jo
(bad)
cs
loop
inc
scas
outs
(bad)
fwait
adc
push
in
dec
mov
push
or
ss
xchg
mov
pop
jecxz
adc
inc
xchg
(bad)
push
push
xor
and
mov
mov
push
sbb
mov
in
scas
fmul
dec
add
sbb
call
pop
mov
pop
scas
shl
sbb
test
jbe
fstp
fisttp
mov
inc
je
adc
lods
add
mov
pop
retf
sbb
and
fstp
lea
leave
call
cld
xchg
call
fimul
dec
sbb
scas
xacquire
cwde
add
stc
or
int
xchg
jp
xor
mov
mov
ja
cmps
pop
inc
sbb
pop
dec
lock
mov
mov
or
ror
pop
mov
xchg
or
dec
loopne
into
inc
div
fucomp
inc
add
and
aas
pushf
int3
mov
or
jo
or
add
push
or
cmps
lds
(bad)
mov
pop
add
fstp
pop
and
pop
push
lock
imul
cmp
mov
lods
ins
repnz
jo
iret
cmp
enter
or
mov
mov
gs
dec
or
push
test
cmp
mov
push
test
sub
mov
cli
test
lods
jmp
pusha
out
movs
add
int3
pop
xor
mov
test
sub
out
mov
and
pop
fistp
pop
xor
(bad)
imul
xor
outs
call
ret
xor
and
dec
adc
int
mov
ret
mov
xor
scas
mov
pop
jo
jno
fs
dec
add
push
pop
jmp
or
lahf
ins
adc
retf
fwait
pop
iret
test
aad
pop
inc
push
test
repz
sbb
call
add
fist
lds
shr
mov
fmul
(bad)
(bad)
shl
js
sub
scas
mov
mov
out
cmp
popf
pusha
shl
outs
pop
fnstsw
xchg
lods
pop
out
(bad)
popa
jmp
mov
or
jp
xchg
pushf
pusha
sub
xor
add
jno
push
into
shl
call
repnz
leave
popf
sti
or
loopne
lahf
cdq
shr
push
push
push
in
xchg
pop
xchg
in
pop
shl
nop
lock
mov
adc
add
icebp
cmps
call
push
mov
mov
bound
sub
ror
ins
mov
not
lods
repz
mov
xchg
nop
add
mov
inc
or
not
xor
dec
dec
sbb
rcr
mov
shr
test
retf
imul
lds
inc
sub
icebp
and
mov
push
loop
sbb
fld
adc
push
mov
ds
sub
pop
sub
mov
lods
mov
inc
cmp
(bad)
cld
pop
test
fcomp
pop
inc
scas
lea
and
adc
xchg
jb
cmp
cdq
clc
(bad)
lock
ins
jecxz
les
mov
mov
out
lods
xlat
frstor
sbb
sar
mov
and
sub
inc
in
push
lock
and
adc
stos
ret
inc
inc
scas
pop
inc
(bad)
loopne
mov
sbb
adc
jo
imul
jo
adc
push
mov
ror
sti
movd
es
xor
sbb
mov
cmc
xchg
loopne
sbb
(bad)
fidivr
xor
test
test
cmp
mov
dec
aad
cwde
ret
jne
stos
dec
ja
adc
or
xchg
inc
jecxz
push
div
add
xchg
test
sub
push
pop
idiv
out
out
mov
push
pop
jbe
loopne
xchg
push
mov
mov
dec
jmp
and
mov
outs
jns
ins
dec
retf
fprem
packssdw
call
jecxz
sbb
ret
popa
push
jge
jbe
mov
mov
cmp
jg
fdiv
imul
lock
rcr
and
adc
movs
push
loopne
call
cmps
fdiv
dec
xor
cmp
pop
out
ffree
mov
mov
movs
push
sbb
rcr
std
xchg
sbb
sub
jl
and
div
and
in
ins
aam
dec
and
int3
jo
retf
push
xchg
sub
or
daa
in
loope
in
pop
and
scas
jmp
push
out
in
mov
jbe
mov
adc
add
sub
repz
cmp
fsub
inc
dec
fld
mov
dec
movs
stos
pop
in
ret
ja
je
popa
jbe
pusha
sub
xor
mov
int3
daa
cdq
jmp
clc
fisub
dec
dec
jnp
pop
out
jo
mov
jbe
push
loop
dec
stc
mov
fwait
test
mov
jno
push
int3
jbe
dec
dec
add
xor
fsubr
(bad)
aaa
cmp
ret
ficomp
popa
in
sbb
ins
xlat
adc
inc
mov
cmp
xchg
hlt
loop
iret
es
cmps
stc
fsub
mov
dec
call
ins
xor
jae
cmps
out
nop
pusha
adc
push
mov
xchg
inc
cli
cmp
test
stos
retf
push
repnz
mov
ja
outs
pop
pop
mov
and
pop
or
arpl
mov
adc
fdiv
sar
xor
lahf
sbb
pop
mov
cmp
dec
add
fs
addr16
cwde
jp
(bad)
sbb
cmp
imul
mov
sbb
pusha
mov
pop
stos
int3
(bad)
sbb
adc
mov
imul
push
adc
fdivr
push
xchg
into
movs
pop
aas
xchg
(bad)
sbb
cwde
sbb
call
adc
iret
idiv
push
aas
scas
lahf
or
dec
or
cmp
pop
cli
mov
mov
add
add
popf
ficom
lods
mov
sahf
retf
rcl
int
(bad)
sbb
jmp
(bad)
and
pop
pop
addr16
xor
cdq
aam
ficom
xor
imul
jbe
mul
jg
or
cmc
mov
sbb
sub
sub
xor
cli
fist
cmp
or
add
cmp
adc
xchg
push
jnp
push
sbb
cmp
test
push
push
stos
es
sub
stos
sub
lods
cli
or
fwait
jl
push
ins
add
or
enter
out
clc
(bad)
pop
fwait
and
int
test
or
adc
fimul
cmps
cwde
sar
ins
ret
mov
push
mov
lock
sub
arpl
imul
jae
xlat
jns
scas
dec
and
xchg
fs
lods
in
sahf
inc
add
fld
sub
jne
add
in
mov
loope
mov
mov
xlat
cmp
je
mov
dec
fidiv
shl
push
jmp
jge
call
sbb
das
add
cmp
in
stos
imul
mov
ror
mov
fmul
xchg
fild
out
inc
jbe
mov
(bad)
jmp
adc
sbb
add
je
mov
inc
loope
dec
ins
ins
call
out
push
dec
or
fnstsw
repnz
dec
popa
test
xor
xchg
sub
mov
cmc
xor
out
or
outs
hlt
jno
fimul
xlat
clc
cmps
inc
xlat
xor
sahf
nop
jmp
cmp
(bad)
aam
test
inc
mov
call
xchg
out
jne
retf
(bad)
jnp
out
imul
cdq
std
test
cmps
inc
xchg
dec
sbb
in
retf
stc
mov
stos
es
sub
sub
fisub
div
push
cwde
xchg
adc
push
mov
int3
arpl
adc
mov
imul
dec
vmread
pop
push
pop
call
ins
loopne
dec
jmp
add
inc
movs
rcr
leave
pusha
ins
xchg
sti
ds
and
shr
xor
adc
pop
mov
jnp
cmps
mov
retf
test
pop
ins
mov
inc
in
cmp
in
cs
in
fimul
cli
test
fst
daa
scas
pop
cld
xchg
push
(bad)
pop
(bad)
jmp
add
fist
(bad)
loope
rcr
dec
mov
pop
xor
mov
pop
cmc
popf
js
out
dec
int3
mov
idiv
inc
aam
pop
mov
and
(bad)
xlat
mov
mov
cmc
js
sub
mov
fst
mov
mov
in
cmp
loop
cwde
ret
cli
popf
push
inc
mov
jle
pop
jo
out
jp
scas
or
repnz
sub
(bad)
sub
dec
xor
mov
ss
icebp
lds
lea
xchg
mov
bound
mov
jns
ret
dec
leave
and
dec
(bad)
jl
iret
fld
and
in
dec
cld
inc
dec
shl
pop
shr
inc
js
clc
push
fidivr
sbb
cs
fwait
push
or
jmp
sbb
sub
jge
cmp
pop
xchg
xchg
or
add
ret
xchg
jg
pop
and
test
and
jae
mov
push
movs
cmp
loope
push
pushf
in
aam
loope
xchg
test
das
xchg
xor
pop
cmc
cmp
or
mov
sub
mov
cld
mov
aam
test
xchg
mov
xchg
ror
mov
dec
mov
leave
fild
out
(bad)
stos
int
outs
sti
dec
push
sub
out
xor
adc
sub
add
or
iret
mov
pop
cmp
mov
lahf
xchg
or
hlt
jmp
adc
xchg
(bad)
xor
jns
out
xchg
lods
xchg
or
shr
jmp
sahf
es
sub
jnp
mov
cmp
xchg
lea
stos
and
jnp
mov
enter
je
jnp
push
mov
shl
scas
fisttp
jecxz
jbe
sub
(bad)
fld
or
jno
adc
push
or
cmc
es
inc
ins
(bad)
shl
(bad)
mov
inc
cmc
xor
into
cld
lahf
fmul
hlt
or
retf
repz
xchg
stc
inc
cmp
cwde
(bad)
imul
or
sub
sub
mov
enter
aas
aad
pop
ins
or
sahf
fdiv
(bad)
sbb
pop
repz
bound
mov
fdivr
iret
xchg
ins
int3
and
xor
adc
in
mov
dec
aam
(bad)
dec
push
sub
icebp
push
sbb
xchg
cmps
ret
sahf
loop
sub
enter
in
xor
xlat
push
pushf
pop
or
pop
dec
movs
sub
inc
inc
sbb
rcr
cmp
push
ret
mov
sbb
das
xor
ficomp
sub
je
sbb
xor
or
iret
sbb
scas
mov
arpl
push
fs
mov
mov
fld
xor
pop
inc
ins
sub
shl
lahf
mov
mov
mov
repz
push
or
and
sub
or
mov
mov
adc
mov
or
xchg
lds
pop
push
ds
xor
outs
xchg
mov
call
sbb
pop
out
sbb
lds
mov
sbb
(bad)
xchg
pop
je
mov
sbb
jnp
(bad)
xchg
shl
into
scas
push
repz
test
adc
das
cmp
ss
into
mov
mov
fstp
popa
xchg
xchg
scas
adc
call
mov
jo
lds
nop
inc
xchg
ja
mov
in
jnp
mov
adc
adc
or
dec
pop
pop
retf
fwait
into
sbb
sbb
mov
add
jns
bnd
mov
(bad)
mul
xor
hlt
cmp
jg
aad
es
gs
in
mov
inc
loopne
or
push
fwait
inc
nop
jecxz
adc
dec
adc
cdq
pop
popa
and
and
inc
adc
jge
and
aaa
pop
(bad)
or
into
xchg
imul
add
xchg
mov
into
xor
shl
aas
cmp
std
add
fimul
jnp
dec
push
or
and
sbb
(bad)
and
fdivr
xor
sub
add
xor
or
jo
std
mov
sub
sub
push
and
ins
sahf
jns
cmc
mov
jnp
pop
xchg
xchg
es
dec
or
pop
inc
loopne
jo
je
in
jp
sbb
shr
sbb
pop
push
cli
std
lods
mov
repz
push
pushf
jecxz
adc
push
call
pusha
pop
sub
inc
xchg
out
xchg
nop
stc
xor
leave
dec
push
xchg
std
sub
push
inc
mov
jo
sbb
adc
fist
pop
retf
inc
idiv
or
adc
pushw
sub
call
sbb
adc
fcom
sub
mov
neg
fadd
jne
mov
repz
daa
pop
ror
jbe
or
add
ror
and
mov
test
push
xchg
push
adc
mov
(bad)
cmc
test
mov
jmp
mov
jg
xor
jne
ss
xor
(bad)
pop
push
mov
inc
xchg
scas
test
(bad)
mov
fnstcw
test
cld
stos
fist
loop
sub
sub
xor
pop
in
pop
or
aaa
mov
fs
imul
or
(bad)
shr
sar
push
mov
sub
enter
inc
cld
inc
out
mov
mov
popa
icebp
and
aam
sbb
cmps
mov
out
mov
xor
jmp
mov
sub
nop
xchg
and
scas
pop
xor
aas
fld
outs
shr
sbb
xchg
(bad)
pop
iret
fcomp
int
lahf
mov
cdq
leave
and
dec
test
mov
pop
push
push
adc
pop
call
into
inc
out
mov
mov
stos
sbb
ror
cdq
faddp
sub
xchg
repz
std
pop
jne
sahf
retf
pop
and
cwde
movs
(bad)
retf
add
mov
out
sbb
inc
jmp
dec
push
icebp
and
(bad)
repnz
aaa
push
or
test
xlat
sahf
call
dec
lahf
rcr
cmp
xchg
cmps
push
mov
hlt
ret
shl
push
aam
add
fcmovu
mov
push
mov
add
xor
cmp
and
jo
push
xor
pop
sub
mov
aas
outs
sbb
sbb
xchg
lods
dec
adc
outs
cs
popf
push
loopne
inc
push
xchg
jle
out
push
push
inc
pop
push
bound
cmp
inc
call
scas
cmp
mov
fucomi
mov
rcl
je
and
mov
or
cmp
ret
ss
sub
mov
fnstenv
jmp
mov
je
jg
lea
rol
je
mov
shr
es
mov
cdq
and
in
adc
xor
inc
jle
xchg
je
mov
nop
fwait
lock
mov
xchg
inc
jmp
mov
and
fwait
lock
iret
push
test
retf
test
mov
ret
add
hlt
fmul
shl
test
or
(bad)
xlat
das
in
jge
cs
scas
data16
and
das
loopne
jns
or
arpl
int3
or
(bad)
call
test
loop
xor
call
pop
jmp
jg
pop
retf
call
cmc
leave
xchg
inc
mov
pop
add
fisubr
push
cmps
loop
cwde
mov
std
add
test
push
stos
hlt
pop
jg
repnz
mov
push
mov
cdq
inc
sub
add
or
repz
mov
or
das
pop
push
xor
add
daa
in
(bad)
stos
out
addr16
xchg
repz
lock
out
inc
pop
std
not
or
and
jno
(bad)
jno
xchg
ror
fld
mov
cdq
sbb
mov
lods
push
not
cmps
push
mov
mov
stos
dec
inc
imul
(bad)
out
push
sub
xor
sub
daa
outs
into
test
jl
imul
sub
(bad)
or
cdq
xchg
popa
repz
loope
push
pusha
jp
scas
loopne
ret
(bad)
jle
add
or
sbb
gs
add
test
aas
pop
sbb
sbb
adc
add
popf
(bad)
jmp
fimul
retf
inc
in
mov
outs
mov
xchg
xchg
cmc
aad
into
dec
fnstsw
sbb
aam
dec
xor
std
xchg
pop
ret
call
shl
mov
inc
nop
cdq
push
xchg
aad
daa
pusha
dec
rcr
hlt
and
sbb
lea
and
int3
pop
pop
xchg
xor
sahf
xchg
inc
or
(bad)
in
push
or
loope
push
jno
jp
scas
add
jno
xchg
aam
sub
dec
jmp
sub
dec
cdq
in
dec
or
ficomp
addr16
test
je
xor
jns
add
jmp
rcl
cmp
sub
test
ret
inc
ret
cwde
push
pop
in
shr
and
push
dec
ret
inc
xchg
fadd
and
sbb
pop
push
loope
xor
inc
sbb
jle
adc
stc
in
in
sub
jbe
or
bound
mov
mov
sahf
or
loope
sahf
jbe
faddp
pop
in
xchg
int3
mov
inc
(bad)
cli
jp
movs
loopne
cld
sub
inc
mov
push
or
in
and
xchg
cmp
xchg
pop
test
inc
retf
scas
pop
xor
jle
cmps
out
mov
push
mov
push
push
addr16
xchg
cmc
sbb
mov
loope
xchg
ds
dec
rcr
mov
outs
mov
fs
repnz
gs
push
jge
mov
jbe
mov
jnp
nop
mov
inc
mov
fcmovnbe
outs
(bad)
std
rol
int
mov
fcmove
repz
sbb
loop
test
mov
mov
adc
bswap
pop
(bad)
movs
sub
xor
dec
ja
cmp
shl
in
cmp
jns
inc
dec
fstp
pop
xchg
arpl
clc
push
mov
loop
mov
rcr
pop
test
enter
aaa
call
adc
aaa
mov
repz
cdq
push
and
stos
mov
fnstenv
jle
call
pop
loope
pop
shl
scas
add
and
test
and
push
shl
std
mov
xchg
adc
stc
xchg
xchg
fucomi
dec
cvtps2pi
add
in
int
cmp
cli
mov
jg
and
cmp
cmp
mov
pop
js
inc
pop
test
sbb
test
ret
fstp
test
pop
dec
sub
cmps
inc
xor
sub
jns
sbb
xor
fstp
ret
inc
pop
scas
push
sbb
inc
clc
bound
xchg
or
imul
jg
popf
nop
adc
add
pop
jne
fwait
push
inc
pop
gs
mov
cdq
adc
sti
xchg
xor
nop
cmp
aas
xchg
xor
les
xor
add
inc
movs
retf
mov
cmc
mov
test
cli
nop
sub
js
aas
push
cdq
inc
test
fnstsw
push
aad
in
in
mov
cmp
xor
lods
sub
scas
dec
cmps
bound
aas
jp
xchg
ins
jmp
jmp
rol
push
into
mov
aas
nop
jmp
mov
jns
sub
out
cmc
pop
jle
ficomp
xchg
(bad)
js
cli
rcr
rcl
aam
fadd
mov
movs
lods
rol
imul
imul
loopne
mov
rcr
dec
popa
inc
inc
jbe
mov
mov
mov
adc
std
or
lods
aaa
push
into
es
in
adc
gs
push
and
outs
js
and
sub
mov
aad
das
aas
push
jno
imul
jl
ss
das
xor
mov
mov
scas
push
cld
ds
lods
pop
xor
pop
ins
stos
icebp
inc
pusha
lods
inc
in
and
pop
push
pop
adc
ret
dec
sub
pop
imul
xchg
outs
xor
jns
sbb
fsub
cmc
call
cmp
retf
loope
out
dec
scas
cmps
fstp
les
cmp
jo
je
jecxz
add
daa
mov
data16
add
adc
xor
mov
fist
retf
adc
and
enter
xlat
lea
add
xor
das
mul
mov
scas
jl
fmul
dec
jl
pop
fst
jb
sub
(bad)
xchg
mov
pop
lock
mov
retf
imul
xor
xchg
mov
inc
fldcw
mov
outs
mov
add
pop
mov
ror
jnp
pop
gs
or
sbb
xor
fcom
mov
cwde
cmp
and
cmp
test
(bad)
pop
fdiv
mov
push
dec
xchg
(bad)
jmp
jnp
fdivr
es
mov
retf
(bad)
push
xor
aad
mov
gs
sbb
mov
xor
cmp
iret
dec
fisttp
cmc
test
mov
adc
dec
adc
add
sub
call
ins
xchg
ins
shl
in
inc
xor
pop
inc
xor
dec
jp
out
and
fst
repz
mov
adc
mov
fcom
into
add
add
xchg
pop
inc
daa
ret
es
adc
sub
repnz
fldenv
ja
fs
fadd
push
call
or
mov
push
jae
ins
add
sbb
fstp
and
sti
addr16
fstp
mov
jne
fsub
adc
sub
pop
inc
mov
scas
outs
aaa
mov
push
mov
xor
loop
ds
rol
bswap
stos
mov
xor
lods
es
lahf
loopne
clc
add
fs
dec
mov
pop
pop
aad
push
test
sbb
mov
icebp
adc
jnp
shl
rcl
jae
jle
mov
pop
imul
nop
xchg
cmc
(bad)
mov
cmp
jg
xchg
dec
mov
(bad)
pcmpgtw
xchg
mov
sbb
ret
or
outs
mov
push
ficomp
data16
addr16
mov
xchg
pushf
and
jp
pop
jnp
aad
push
jl
daa
mov
cmp
and
jmp
fwait
mov
shl
add
stc
aas
cld
imul
pop
es
je
mov
loop
jnp
push
or
or
xlat
inc
pop
out
push
or
repnz
or
xlat
and
stos
into
dec
xor
xchg
ins
aam
xchg
out
mov
jmp
cmp
pop
inc
jmp
stos
outs
shl
call
jae
jge
mov
xor
push
dec
inc
popf
mov
(bad)
loop
dec
or
cli
pop
(bad)
cmp
sahf
ja
add
dec
inc
arpl
add
inc
clc
test
aam
iret
test
inc
jno
into
push
mov
adc
dec
pop
xchg
mov
inc
xor
jmp
xor
mov
push
ja
add
jno
sbb
das
stc
pop
loopne
xor
sub
mov
xor
mov
scas
cdq
pop
inc
cdq
mov
movs
into
mov
movs
mov
loope
xor
(bad)
push
cmps
bound
and
xor
adc
stos
rcr
and
lahf
pop
cmp
fbstp
ins
ins
and
add
mov
jg
rol
cdq
(bad)
int
adc
dec
ror
ret
jg
adc
ins
inc
mov
ss
pop
stos
cdq
cmp
arpl
adc
xor
popa
xchg
mov
push
(bad)
dec
dec
cmc
mov
mov
lock
sub
cmp
je
xchg
cmc
lods
stc
push
ja
lods
cmp
dec
adc
inc
pushf
add
lahf
jge
movs
sub
(bad)
sbb
aam
aas
movs
add
mov
cmp
jmp
jae
out
xchg
(bad)
lds
xor
sbb
imul
addr16
icebp
add
test
pop
ficom
or
fld
mov
add
leave
push
xor
mov
sub
aad
pop
cmp
jmp
jae
mov
ds
adc
stos
and
test
lods
popf
imul
inc
fwait
in
mov
shl
dec
mov
inc
jge
scas
imul
jmp
ret
fcomp
xor
lock
mov
sub
push
lods
pushf
sbb
shl
mov
sub
pop
out
stos
xor
cmp
mov
ins
iret
mov
jecxz
mov
rcr
loope
addr16
sub
sbb
loopne
popf
addr16
stos
adc
mov
sub
mov
dec
cmp
sbb
add
sbb
xchg
cmps
pop
add
pop
xor
jae
test
test
retf
cmc
ins
cmp
sti
pop
test
sbb
xlat
into
popf
rol
call
pop
int3
ja
faddp
add
out
loopne
repz
mov
test
mov
sti
mov
pop
mov
mov
inc
sub
cmps
pop
test
sbb
in
test
push
ds
inc
mov
xchg
clc
inc
xchg
mov
jmp
or
in
cdq
xor
fucomi
pop
or
or
and
in
jnp
out
sbb
out
xor
jp
sub
icebp
mov
lahf
and
call
test
(bad)
sub
xchg
sub
fbld
and
shr
sbb
mov
call
fmul
jl
pop
cld
sub
or
mov
mov
cmp
repz
pop
lahf
es
pop
sar
dec
clc
int
jne
popa
xor
sbb
arpl
leave
xor
mov
(bad)
push
popf
lock
inc
lods
or
cmp
sbb
pusha
mov
pop
inc
dec
je
out
or
aaa
lea
popfw
(bad)
mov
add
mov
retf
push
xchg
sbb
pop
jmp
xor
imul
mov
(bad)
and
les
push
mov
add
sbb
pop
cmp
rcr
int
outs
push
mov
hlt
mov
pop
pop
xchg
pop
popa
cwde
xor
xchg
mov
xchg
cmps
jecxz
loop
ds
xlat
repnz
xchg
mov
xchg
sbb
stc
jle
icebp
sbb
add
(bad)
(bad)
jmp
in
sub
leave
mov
cmp
push
aas
movs
ror
pop
imul
sub
jne
out
int3
jcxz
lods
clc
jp
sbb
fs
shl
jb
or
push
pop
fwait
jl
dec
sub
imul
repnz
pop
mov
fmul
stos
inc
or
inc
sbb
cmp
adc
dec
les
dec
dec
outs
je
mov
cmp
dec
call
in
inc
jne
adc
add
and
fidiv
mov
sbb
cmp
lea
inc
cmp
retf
or
pop
scas
int
add
clc
xchg
mov
jmp
sub
into
dec
jnp
xchg
add
mov
xlat
dec
fsub
cs
inc
leave
add
sub
retf
repnz
push
mov
(bad)
xor
ins
xor
inc
and
stos
pop
dec
dec
jmp
test
mov
sbb
fadd
popf
test
ret
pop
icebp
scas
in
cmps
and
or
inc
in
jne
jg
cmp
pop
sub
inc
test
add
jmp
mov
fcmovbe
cmp
adc
cmp
xor
test
nop
(bad)
push
pop
(bad)
cmp
xlat
pop
mov
mov
ret
(bad)
(bad)
popa
or
mov
and
jge
or
pop
lea
xchg
div
jae
aas
jne
jmp
pusha
fdivp
aas
and
ss
sub
adc
inc
cwde
mov
mul
arpl
and
cmp
or
pop
rcl
dec
jo
not
test
and
sub
jae
push
jle
jno
jge
push
ret
hlt
sub
mov
shl
mov
cwde
cld
mov
inc
(bad)
retf
mov
fcmovne
or
jp
cmp
jae
push
mov
(bad)
ins
lock
dec
cdq
mov
mov
imul
je
or
inc
mov
aas
push
cmp
(bad)
mov
sbb
cmp
out
popa
push
sub
mov
sbb
in
mov
jecxz
pop
fistp
mov
add
mov
or
mov
sub
adc
test
cmp
xchg
dec
mov
xor
dec
outs
shl
sbb
inc
push
fadd
in
xor
cli
xchg
stos
pop
loope
in
xchg
ins
rcl
push
add
ret
adc
xchg
addr16
movs
push
arpl
mov
es
jmp
mov
cmp
mov
mov
jecxz
adc
fsub
xchg
nop
sub
rol
push
xlat
pop
or
add
cld
jle
sti
jns
inc
jmp
(bad)
jnp
das
jns
or
adc
fisubr
jno
daa
and
adc
sahf
jmp
ins
add
iret
test
inc
pop
popf
nop
xchg
add
iret
mov
xchg
and
(bad)
pop
pop
mov
adc
add
mov
lods
jle
cmp
retf
ins
out
mov
sbb
loope
mov
mov
not
test
inc
shl
cmc
adc
jb
and
adc
les
push
add
jg
add
loopne
pushf
mov
in
ja
xchg
add
jno
pop
mov
pop
and
dec
sub
nop
mov
add
mov
pop
push
pushf
les
loopne
in
adc
pop
nop
mov
pop
loop
cdq
mov
add
in
lock
(bad)
shl
inc
jle
mov
sub
mov
enter
retf
and
inc
stos
push
mov
push
push
push
pop
pop
cdq
shl
xor
lods
and
jl
sub
mov
mov
addr16
movs
inc
xor
jg
lea
push
sub
cmp
dec
and
xor
mov
mov
fdiv
jne
inc
xor
mov
out
push
sbb
outs
(bad)
call
mov
adc
(bad)
fs
push
ffreep
js
cld
ror
adc
jl
xor
push
mov
loop
dec
ror
aad
jbe
stc
mov
mov
jne
ins
aaa
mov
jno
mov
pop
cdq
push
xor
sub
mov
test
retf
cmps
pop
fs
adc
pop
cwde
(bad)
(bad)
and
nop
and
pop
mov
push
mov
xchg
and
out
and
fnstenv
sahf
adc
sub
test
out
lahf
sbb
in
ret
sbb
es
xchg
pop
cwde
(bad)
and
jnp
jmp
mov
inc
push
ins
push
xor
aaa
or
repz
jg
loop
call
cmp
cmp
in
sbb
frstor
fld
fxam
mov
mov
ret
add
dec
outs
(bad)
daa
retf
stos
and
bound
add
cmc
adc
fcmovne
(bad)
and
ins
xchg
dec
inc
mov
push
pop
cmp
fimul
popa
push
popa
movs
mov
jno
icebp
mov
fldenv
test
(bad)
popa
(bad)
sbb
cmp
inc
and
icebp
out
movs
imul
mov
xchg
xchg
pop
xchg
popf
or
or
adc
pop
repnz
test
out
or
adc
in
jno
and
test
mov
pop
jge
in
pop
mov
in
mov
or
mov
jle
fs
call
ror
pop
enter
inc
and
add
test
push
(bad)
out
ret
or
repnz
pop
push
pop
dec
jbe
jle
jne
jg
pop
sub
cmp
nop
cld
adc
lahf
and
popf
fdivrp
jp
clc
sbb
xchg
lods
pop
dec
gs
and
inc
in
rol
mov
mov
aad
mov
sahf
mov
data16
outs
lock
add
mov
jno
push
adc
test
cmp
(bad)
fs
push
cmp
and
cld
jle
es
add
rcl
push
and
dec
(bad)
cmp
loop
inc
popa
mov
jmp
es
inc
inc
in
enter
ficom
sbb
sbb
mov
push
cmps
out
dec
push
in
adc
pop
in
outs
sahf
mov
xchg
loop
dec
add
test
push
xchg
ins
xor
cld
inc
das
adc
rol
aad
movs
xor
(bad)
adc
pop
add
jmp
addr16
in
int3
xchg
loopne
call
inc
mov
inc
lock
fbld
mov
mov
xchg
mov
nop
mov
imul
xchg
fiadd
in
sbb
cdq
jb
mov
sbb
daa
icebp
sahf
push
fstp
mov
inc
add
(bad)
jmp
popa
cmc
jae
(bad)
mov
pop
cmp
cmp
iret
xor
mov
mov
xchg
xchg
mov
dec
fs
ret
mov
sbb
out
frstor
pop
mov
inc
fcmovu
mov
add
in
push
cld
daa
mov
outs
popf
pop
dec
inc
pop
xchg
mov
sbb
pop
pushf
fucomp
or
pop
fnstenv
sbb
inc
jbe
enter
mov
(bad)
mov
jp
fwait
push
xor
add
or
and
in
push
int3
inc
and
call
stc
mov
scas
stos
push
iret
sub
cld
cmp
sub
popa
dec
jae
pop
aaa
rcr
mov
mov
mov
int3
cmp
(bad)
stc
aas
mov
sub
out
jb
mov
adc
jmp
mov
jb
test
xchg
dec
sti
xor
jle
dec
fisubr
or
pop
cmc
iret
cmps
xchg
pop
sub
dec
lea
xlat
xchg
outs
and
daa
jge
adc
out
imul
mov
mov
xchg
sub
repnz
popf
fwait
dec
pop
bound
movs
adc
cmp
not
sub
cmp
mov
add
out
pop
pusha
call
and
leave
jae
pop
jae
in
xor
jmp
add
dec
mov
movs
or
outs
int
cmc
push
loope
frstor
xor
and
cli
iret
lods
jecxz
lods
or
mov
adc
(bad)
loopne
test
dec
adc
popa
ret
jo
sub
mov
test
not
into
adc
dec
xchg
pop
mov
(bad)
fadd
aas
cmp
push
scas
sbb
lods
sbb
icebp
inc
in
pop
xlat
mov
jno
mov
in
and
retf
dec
mov
rol
add
push
loope
mov
xchg
mov
push
pop
arpl
rol
cmp
sub
in
dec
daa
add
jnp
jo
mov
sahf
and
dec
mov
test
push
jo
div
pop
pusha
dec
jns
lds
cmp
push
out
dec
js
adc
xchg
xor
call
(bad)
mov
xlat
jl
cld
ja
mov
mov
add
test
jg
icebp
cmp
bound
mov
ins
and
inc
jmp
pop
pop
inc
enter
aaa
aaa
shl
push
jo
cmp
xchg
inc
mov
pop
cmc
jbe
les
fs
sub
pop
pop
pusha
icebp
xlat
hlt
shl
adc
ja
and
jecxz
xchg
mov
cmp
and
leave
sbb
shr
mov
jne
shr
fbld
movs
(bad)
sbb
ins
cdq
xor
push
loopne
scas
arpl
push
mov
mov
inc
js
jns
pop
stos
iret
mov
repz
sahf
nop
pop
xor
and
retf
push
push
pop
jge
call
mov
dec
sub
sbb
sub
xchg
push
mov
fadd
pop
or
mov
dec
in
repz
xchg
out
gs
jp
pop
push
or
adc
nop
das
movs
retf
jge
adc
out
jecxz
add
mov
das
imul
sbb
add
sti
push
mov
push
jmp
(bad)
clc
pushf
sub
js
xchg
jle
pshufw
cmc
inc
jns
inc
dec
loop
fmul
pop
or
shr
rcr
mov
int
jnp
out
mov
pop
pop
dec
scas
pop
mov
fild
sub
cmp
xchg
mov
and
std
inc
sar
js
idiv
or
movs
add
outs
ins
fisttp
ss
aaa
sub
inc
sub
inc
clc
dec
fwait
movs
adc
add
sar
iret
and
fnsave
sbb
jo
jmp
not
pop
out
in
(bad)
mov
mov
mov
dec
fldenv
ret
xchg
cmp
push
enter
je
xor
inc
test
add
sbb
nop
pop
loop
cwde
vmovlpd
retf
out
(bad)
pop
mov
sbb
fst
push
jp
into
sahf
or
pandn
fsubr
mov
fcomp
mov
and
dec
xlat
adc
push
adc
imul
lahf
aas
ins
out
xchg
mov
sub
out
fadd
push
mov
mov
xchg
sar
pop
mov
cli
cmps
xchg
icebp
mov
push
stos
jle
mov
lock
and
loopne
jl
hlt
in
or
dec
sub
xchg
iret
or
mov
fistp
or
arpl
aas
add
mov
jne
cwde
jns
push
stc
or
jae
enter
mov
inc
or
repz
(bad)
stos
jecxz
stos
or
inc
in
imul
jle
shr
xor
stos
aad
pop
xchg
imul
rol
jne
jecxz
loope
jmp
sar
leave
setp
cmp
enter
or
dec
xor
icebp
mov
mov
mov
sub
mov
fld
(bad)
cmp
adc
inc
(bad)
arpl
or
mov
retf
dec
mov
mov
scas
icebp
cmc
xor
mov
cwde
adc
pop
(bad)
mov
mov
jno
pop
or
pop
cdq
dec
or
sub
cs
lock
hlt
push
outs
push
xor
xor
out
mov
stc
xor
push
pop
jmp
inc
jmp
push
in
pop
pop
fwait
mov
outs
jno
sub
hlt
mov
loopne
cmps
sub
inc
adc
add
cwde
push
iret
mov
pusha
jbe
jne
mov
out
mov
cli
mov
mov
mov
or
mov
mov
sub
push
into
dec
sbb
cmps
fwait
cli
into
push
fpatan
fnstcw
xchg
daa
and
aad
mov
stos
pop
or
and
push
std
mov
cmps
outs
mov
imul
pop
pop
jbe
cmps
fcom
add
ss
inc
add
scas
out
xchg
jo
stos
loopne
pop
mov
push
adc
sub
stos
popf
outs
or
dec
subps
and
and
call
scas
out
pushf
jb
inc
fisub
cmps
mov
pop
xchg
fs
cmp
jae
inc
fstp
data16
je
or
push
(bad)
ins
dec
lock
jp
leave
xchg
(bad)
xchg
(bad)
nop
dec
jns
jo
mov
mov
jo
push
dec
in
rcl
shl
pop
arpl
jns
gs
xlat
push
add
dec
and
mov
test
stos
sbb
shl
mov
and
jae
test
or
dec
ins
jge
sub
xor
fdivr
out
xor
xchg
inc
loope
jno
pop
les
sbb
pop
ja
jecxz
leave
cmps
jle
pusha
jecxz
std
jp
popf
cmp
stos
dec
sbb
mov
mov
xchg
or
sti
dec
stos
mov
lods
(bad)
mov
bound
outs
xchg
pop
das
nop
ss
dec
sahf
data16
mov
and
aam
and
fucomip
xor
lock
(bad)
jne
xor
cdq
leave
sahf
and
or
or
dec
add
repnz
call
pop
push
xor
stc
movs
cmc
(bad)
dec
pusha
sbb
mov
icebp
sub
adc
sbb
mul
sub
sbb
and
stc
ror
fs
push
inc
cmc
sbb
cmp
push
and
nop
enter
ss
int
sub
or
int3
dec
dec
xor
xor
inc
loope
xchg
cld
je
adc
or
mov
fldcw
pop
mov
or
pop
movs
pop
cmp
pusha
and
push
or
push
movs
mov
jmp
imul
scas
dec
xchg
xchg
mov
aas
inc
int
mov
xor
icebp
push
or
test
iret
mov
repnz
cmp
push
push
xchg
aas
lods
ror
inc
shl
bound
adc
xlat
scas
cmp
test
imul
scas
aad
mov
sub
iret
mov
retf
rol
fisubr
into
jecxz
mul
jecxz
mov
icebp
js
mov
xor
xchg
and
push
inc
lods
lods
adc
scas
sub
iret
jecxz
cmp
cli
xchg
mov
int3
(bad)
push
mov
(bad)
pop
sbb
iret
push
lock
cmp
inc
mov
retf
repz
sbb
pop
push
inc
sub
cmp
lods
inc
fild
cmp
xchg
push
int3
int
inc
sahf
scas
push
inc
sub
add
stos
call
sahf
adc
aaa
dec
xchg
mov
ins
out
ret
clc
and
pusha
lahf
jp
iret
xchg
test
cmps
lock
ror
inc
push
(bad)
fsub
sbb
into
sub
fnstenv
jne
jp
and
in
ins
xchg
and
jg
or
xchg
out
jle
cwde
inc
jl
in
jp
jge
dec
mov
sub
stc
cmp
pusha
mov
xchg
mov
pop
or
jbe
xchg
das
jmp
(bad)
cmps
hlt
cwde
jnp
lods
clc
pusha
test
bound
rcl
jbe
fsub
test
or
inc
icebp
and
fdiv
ret
les
mov
addr16
in
pop
loopne
mov
xchg
aaa
scas
jmp
out
mov
adc
pop
movs
pop
xor
sub
mov
fidivr
mov
lods
outs
mov
es
inc
data16
gs
inc
jno
mov
sti
rol
loop
icebp
loop
cmovns
dec
xor
ror
rcl
inc
xor
jns
adc
das
and
loopne
jp
xor
mov
into
test
lock
push
xor
ret
cmp
mov
or
add
mov
scas
addr16
mov
lea
(bad)
pop
nop
mov
mov
es
push
vmovd
and
(bad)
popw
add
pop
cmp
inc
push
push
loope
and
jecxz
mov
sar
mov
sbb
ds
pusha
shl
cmp
mov
or
fisubr
shl
push
retf
xor
repz
add
cmc
ret
adc
mov
(bad)
iret
shl
mov
push
je
mov
cmc
inc
not
popf
out
cmp
jo
rol
cmc
xchg
jo
sbb
(bad)
ins
es
sub
adc
test
mov
repz
sbb
mov
xchg
loopne
clc
fnstsw
or
xor
stos
jo
shl
popa
add
xchg
loop
push
mov
jecxz
lahf
jle
popa
xor
test
ins
int
loopne
xchg
pusha
xlat
jae
pop
push
add
dec
xlat
fisttp
std
and
div
mov
jmp
mov
push
mov
sub
test
cmc
fsubr
mov
add
test
enter
push
popa
mov
(bad)
data16
sub
lock
sub
ins
jno
outs
sbb
adc
adc
xchg
dec
xchg
fistp
retf
mov
sbb
shr
and
or
jnp
mov
or
xchg
sub
sub
mov
repz
icebp
out
pop
xchg
jmp
imul
or
test
cdq
add
les
lahf
stc
retf
and
push
push
add
fisub
das
push
mov
jmp
and
mov
test
or
push
jle
xchg
ret
iret
lds
ret
and
pushf
in
push
movs
mov
icebp
adc
test
cwde
add
lahf
iret
lods
(bad)
mov
fistp
jge
or
xchg
repnz
pushf
and
es
add
fstp
mov
ja
push
out
fsubr
call
in
xchg
je
mov
enter
dec
daa
adc
repz
or
dec
stos
inc
push
imul
enter
or
out
sbb
(bad)
cmp
pop
pop
dec
ins
xor
jecxz
jmp
and
pusha
(bad)
jp
pop
cmps
fsubrp
or
stc
xchg
or
jmp
xor
sbb
test
int
cwde
in
sub
test
push
outs
adc
jecxz
xchg
lahf
or
mov
sub
and
test
mov
clc
(bad)
into
int
or
dec
mov
test
xor
out
repnz
add
sbb
mov
mov
push
in
or
cli
rol
pop
movs
cdq
dec
mov
cld
inc
mov
mov
sahf
lods
push
(bad)
pop
mov
(bad)
jmp
pop
neg
or
dec
mov
dec
fucomi
(bad)
jbe
ins
mov
(bad)
into
dec
lahf
sbb
ret
xchg
jb
pop
stos
and
fwait
cmp
add
xor
and
sub
sub
push
and
int3
mov
cmp
mov
and
or
movs
jle
test
sub
loope
(bad)
push
push
or
inc
out
add
mov
outs
fwait
dec
retf
out
loopne
or
xchg
rol
or
cmp
mov
pop
clc
mov
xor
cld
inc
push
pop
or
iret
jnp
outs
add
into
inc
lahf
fwait
int3
lds
pop
or
aad
call
dec
pop
iret
sub
les
push
(bad)
mov
dec
sbb
popa
sub
xchg
push
or
push
ins
ret
pop
neg
leave
call
adc
mov
mov
stos
movs
rcl
pop
sbb
xor
xor
movs
stc
mov
dec
aad
shr
ret
sbb
fsubr
jg
bound
sbb
imul
mov
ins
push
out
inc
inc
push
loop
arpl
scas
adc
or
pop
pop
out
test
jecxz
iret
mov
add
fimul
fidiv
mov
les
shl
pusha
popf
in
gs
int3
cmp
cmc
mov
jl
out
retf
out
test
fdiv
pop
fisub
mov
xchg
mov
or
xchg
lods
add
cdq
scas
pop
xchg
mov
mov
ja
mov
jle
lock
sub
fidiv
lods
inc
jb
pop
xor
cli
mov
mov
fdiv
inc
stc
std
shl
cmps
hlt
and
and
aas
scas
sbb
(bad)
jg
dec
aad
jmp
call
pop
jg
mov
leave
movs
mov
and
fadd
es
mov
jo
or
je
add
lods
mov
shr
jo
out
mov
push
mov
(bad)
inc
xchg
mov
call
(bad)
or
pushf
jp
xor
adc
dec
cmc
shr
xor
push
sti
jo
cwde
inc
sbb
scas
or
jle
inc
dec
lock
pop
das
lock
adc
jnp
sub
sbb
jo
sub
pusha
scas
pop
xor
mov
pop
and
cdq
mov
inc
sahf
ficom
sti
std
mov
pop
outs
hlt
and
mov
mov
push
les
out
retf
push
daa
in
in
loopne
into
icebp
pop
mov
jle
push
mov
retf
test
jge
cmp
test
in
xchg
add
in
pop
xor
mov
mov
addr16
daa
(bad)
inc
ret
jge
les
sub
mov
cmp
jmp
shr
add
out
arpl
lods
das
push
imul
and
icebp
call
call
dec
dec
lods
xor
fadd
sti
(bad)
lahf
jbe
std
push
movs
mov
jmp
loopne
xchg
adc
jb
push
out
pop
jb
sub
or
add
test
sub
popa
gs
(bad)
test
(bad)
icebp
sbb
stos
jle
cmp
push
push
push
jnp
pop
cmp
inc
jo
push
xlat
push
or
add
test
in
cmp
push
push
jbe
shr
xchg
mov
pop
popa
jo
and
and
jg
adc
pop
je
mov
retf
sbb
int
inc
mov
popf
push
and
gs
pop
fidiv
in
mov
pop
xor
xchg
lds
mov
das
mov
rcl
dec
cmp
daa
pop
push
push
popa
adc
push
lock
fistp
cmps
sbb
sbb
mov
push
retf
mov
xchg
sbb
add
pop
(bad)
xor
push
adc
dec
aaa
mov
push
jp
pop
(bad)
xor
lods
cmp
xor
pop
dec
cmps
pop
(bad)
adc
fnstsw
xchg
xlat
or
xlat
lods
xchg
adc
add
in
xchg
inc
push
or
loopne
push
push
sub
sub
inc
aam
outs
jmp
xchg
mov
jnp
fwait
loop
out
aad
nop
adc
add
xchg
adc
adc
out
imul
stos
fdivrp
fidiv
js
fadd
mov
adc
pop
xchg
repnz
mov
add
int
int3
and
call
daa
mov
lock
mov
push
das
das
outs
mov
mov
dec
push
ins
cmp
hlt
int
dec
in
inc
jg
push
loopne
inc
mov
gs
idiv
(bad)
sbb
mov
mov
push
sub
rcr
inc
pop
xchg
xor
xor
mov
cmps
sub
sbb
or
push
xchg
push
bound
jae
sbb
and
adc
out
sub
popf
push
hlt
push
stos
stos
xchg
jge
inc
pop
mov
ds
sub
push
sub
jp
fwait
mov
lods
imul
or
add
xlat
ja
addr16
sbb
popa
out
sub
cmp
inc
not
mov
test
jae
jbe
xchg
jp
shr
or
data16
mov
shr
mov
mov
ins
sbb
adc
dec
pushf
and
dec
ins
mov
dec
sbb
pusha
inc
sub
cs
xor
xor
sbb
(bad)
lods
dec
loope
and
ds
stos
xchg
outs
mov
mov
jne
jo
mov
mov
cli
or
xchg
push
xlat
int
(bad)
mov
test
adc
sub
mov
pop
add
jl
fidiv
ss
cmp
out
ja
mov
push
mov
or
push
add
fistp
call
js
pusha
push
push
pop
pusha
les
xor
mov
dec
xlat
addr16
jg
mov
jge
nop
arpl
repz
loopne
dec
jo
sbb
jecxz
mov
movs
push
jge
les
loop
ret
xchg
idiv
lahf
out
dec
mov
cmps
outs
xchg
mov
jno
mov
popf
sub
and
cmp
push
arpl
xor
mov
dec
(bad)
and
mov
and
sub
aad
dec
arpl
jno
sbb
outs
push
ds
mov
and
sbb
push
mov
sti
scas
ins
jp
pop
test
(bad)
ror
sub
shl
pop
xchg
pop
xor
popf
imul
xor
xor
sub
jmp
inc
jb
cmp
outs
rol
cmp
fwait
adc
icebp
lods
push
xchg
mov
pop
bound
leave
sub
test
(bad)
jmp
addr16
int
mov
cmp
jge
mov
mov
retf
fs
jne
ret
jl
mov
mov
cmp
inc
or
bound
les
aam
mov
cwde
sbb
lds
and
lock
mov
cmp
(bad)
jg
and
bound
or
adc
adc
xor
sahf
les
adc
add
add
iret
data16
cmps
inc
ins
fcomp
push
jp
cmp
jmp
mov
inc
sub
mov
(bad)
leave
sar
mov
pop
xor
jne
xor
inc
loopne
sbb
out
sahf
clc
aam
in
xchg
push
sbb
adc
dec
test
inc
mov
mov
cmc
jae
stos
mov
push
(bad)
or
mov
or
fbld
mov
and
sbb
xchg
in
cdq
mov
js
mov
cld
push
and
xlat
lods
lods
adc
jae
add
mov
ret
fnsave
pop
fnstsw
test
mov
(bad)
out
mov
adc
sbb
adc
xor
xchg
(bad)
out
aam
xchg
cmp
sahf
mov
data16
addr16
rcr
test
aad
movs
jne
and
mov
(bad)
popf
ret
push
(bad)
and
mov
cmp
sbb
cmp
sbb
push
ror
inc
mov
(bad)
mov
jg
je
xor
outs
sub
jne
sbb
adc
popf
xor
retf
fwait
sbb
test
arpl
inc
adc
cmp
xor
sbb
mov
add
inc
mov
cmp
add
neg
add
mov
adc
nop
loopne
add
jno
mov
or
xchg
push
inc
cmp
dec
je
movs
daa
lds
mov
ss
test
xchg
fdivr
aas
jb
push
jmp
fld
mov
clc
mov
leave
(bad)
lods
int
jo
jmp
mov
fisttp
cmp
jbe
pmaddwd
push
shl
fwait
(bad)
adc
shr
mov
xchg
int3
outs
or
dec
fwait
mov
dec
(bad)
push
addr16
ja
outs
idiv
jbe
loopne
test
cmp
mov
push
xchg
je
cmp
test
mov
(bad)
(bad)
inc
sbb
mov
dec
(bad)
(bad)
inc
div
lahf
mov
ret
cmp
fld
mov
mov
and
imul
in
test
and
add
jmp
push
inc
and
fidivr
sbb
in
leave
jne
hlt
jo
js
(bad)
(bad)
push
mov
popf
ss
cdq
fsubrp
add
jp
out
mov
lock
and
in
pop
addr16
xchg
or
pop
ret
dec
daa
cdq
mov
or
repnz
fwait
outs
loope
addr16
icebp
push
retf
in
dec
sar
(bad)
adc
inc
sub
mov
ja
adc
sub
or
dec
gs
xchg
cmp
fld
cmp
dec
bound
xor
xor
(bad)
adc
popa
cmp
call
test
sbb
add
out
xor
mov
in
shl
imul
jmp
outs
xor
mov
sub
sbb
in
pusha
cli
test
ror
inc
and
nop
push
pusha
sbb
ror
mov
mov
(bad)
mov
and
fdivr
sub
stc
pusha
(bad)
(bad)
stc
inc
dec
call
gs
mov
pop
jmp
mov
inc
jmp
lods
push
pushf
pop
sub
popf
test
push
fs
jbe
sbb
clc
int
fiadd
sti
dec
popa
jp
ret
in
ss
xor
add
lods
mov
les
(bad)
imul
ror
push
jmp
mov
sub
ins
adc
popf
inc
inc
and
in
add
sub
retf
push
lods
lods
out
(bad)
mov
imul
les
or
xor
arpl
cmp
mov
adc
cld
xchg
inc
mov
retf
and
or
inc
daa
and
test
in
jns
push
jecxz
inc
jbe
jae
pop
push
cmp
outs
in
sahf
dec
xchg
add
repnz
cmc
loope
mov
into
jb
popa
std
push
fldenvw
mov
ins
cs
aas
test
dec
imul
cmp
sub
ins
mov
dec
cmc
fucomi
sub
mov
push
frstpm(287
xlat
jo
adc
and
hlt
mov
iret
push
repz
push
inc
cwde
inc
int
rcl
inc
fdiv
je
ins
and
sti
mov
mov
xchg
and
jmp
add
lds
dec
das
cmp
js
imul
mul
mov
mov
retf
sub
mov
sub
mov
sbb
jl
pop
dec
sub
mov
inc
(bad)
xchg
push
sbb
pop
add
cs
call
add
rcl
or
push
jno
jnp
cmp
ret
aad
jp
(bad)
(bad)
das
shl
dec
aaa
leave
ins
jne
xor
addr16
add
cmps
addr16
xor
sbb
jo
hlt
jg
out
retf
sub
test
enter
jb
jne
aam
dec
push
nop
test
mov
xchg
lock
and
outs
or
icebp
mov
xchg
push
or
jg
ret
sahf
ja
mov
out
jae
mov
(bad)
dec
retf
push
(bad)
push
fisttp
leave
loopne
mov
(bad)
out
movs
pop
jo
jp
inc
xchg
bound
pop
xor
lods
pop
jecxz
pop
cmp
mov
leave
xor
or
movs
pop
adc
cmp
stos
lahf
jmp
lea
cdq
int
fwait
jno
ins
in
pushw
add
xor
add
xchg
mov
fisub
mov
xor
sub
ins
jmp
mov
mov
pop
fld
dec
pusha
ror
sbb
div
and
mov
xor
shr
inc
xlat
dec
mov
jmp
in
cwde
pop
add
or
std
cmps
mov
mov
test
lock
cmp
cmp
jns
loopne
cmp
lods
or
sub
adc
pop
sub
xor
mov
mov
ss
enter
xor
(bad)
and
mov
inc
sar
pop
mov
push
fsub
jbe
and
daa
out
mov
jbe
mov
(bad)
mov
pop
outs
dec
pop
mov
jmp
fxch
mov
cmp
adc
dec
inc
stos
mov
adc
cmps
lahf
dec
jae
jmp
leave
mov
addr16
sti
sbb
mov
aas
ror
cmp
mov
sbb
fdiv
cdq
fistp
mov
(bad)
fld
cli
jg
pop
or
pop
jae
dec
in
push
sub
lods
and
add
pop
jp
sub
(bad)
push
inc
xchg
outs
movs
xor
shr
loope
xor
pop
or
jb
add
mov
sub
test
xchg
iret
icebp
adc
sar
and
dec
fist
inc
mov
jmp
dec
lock
xor
sar
loope
and
adc
aam
sbb
aam
ins
and
call
ret
cmp
ins
out
ret
cmp
inc
gs
lods
mov
xchg
sbb
out
and
push
scas
xor
lods
mov
pop
repnz
lods
jg
jno
(bad)
lods
jnp
int
sub
xchg
pop
cmp
ds
es
sbb
jl
jg
shr
pop
push
xor
cmp
jae
cmp
cs
rcr
jnp
or
cmp
sar
popf
repnz
(bad)
jmp
lea
outs
jns
push
jns
scas
mov
adc
mov
neg
loope
clc
push
xchg
test
sbb
jge
mov
out
push
retf
pop
xor
xchg
xchg
clc
iret
in
ja
sar
(bad)
add
and
adc
jmp
push
mov
das
xchg
pop
bound
cmc
xor
push
repz
and
and
loope
imul
out
push
sbb
sub
xchg
mov
jge
div
mov
sub
pop
cmp
or
es
fst
mov
inc
xchg
xchg
ds
lds
dec
dec
pop
rcl
push
jne
xchg
adc
retf
gs
stos
sub
fadd
mov
mov
cmps
cmp
(bad)
mov
in
outs
mov
outs
(bad)
test
js
xor
adc
mov
ja
mov
mov
push
outs
mov
js
or
jle
aad
out
fmul
mov
in
pop
cdq
mov
or
imul
cmp
daa
mov
xor
and
(bad)
adc
mov
and
xchg
sub
cmps
stos
xor
adc
inc
and
lods
adc
add
jp
mov
xchg
sbb
fist
stos
mov
jns
imul
dec
jmp
or
xchg
and
xor
popf
xor
xlat
pop
sub
aas
xor
jecxz
cwde
push
add
cli
(bad)
aam
adc
imul
or
scas
scas
cmps
movs
xchg
jge
call
and
and
pop
xchg
xchg
adc
enter
scas
mov
jl
cmp
int3
dec
(bad)
ror
imul
sar
mov
dec
xchg
scas
arpl
xchg
cmp
jnp
int3
jmp
inc
cmp
or
inc
inc
and
xor
popf
fisttp
dec
or
(bad)
repnz
mov
jnp
push
(bad)
xor
addr16
mov
in
pop
mov
ds
mov
push
call
xor
lods
lods
pop
jo
sub
mov
popf
imul
in
inc
xlat
inc
jns
movs
xchg
adc
inc
int
lock
(bad)
out
inc
movs
dec
arpl
dec
sub
push
jecxz
cmp
push
iret
pop
jge
add
mov
stos
nop
push
lods
cdq
mov
outs
push
jnp
adc
and
sbb
fs
sub
stos
idiv
sbb
jbe
cs
cmp
call
ja
adc
inc
(bad)
dec
dec
dec
xor
push
and
mov
xchg
out
clc
and
xlat
lods
mov
xchg
adc
fcmovnu
clc
mov
aaa
or
pop
in
test
xchg
jo
repnz
rcl
mov
mov
push
push
mov
adc
and
mov
pop
ja
cmp
push
inc
les
mov
mov
in
imul
ds
cmps
ror
xor
in
or
les
ds
int
int
in
cmps
mov
sub
and
add
leave
pop
pop
cmps
push
inc
scas
stos
(bad)
sbb
scas
cmp
push
sbb
in
mov
loop
push
and
sub
inc
ds
test
into
sbb
ret
stos
pop
test
fnstenv
mov
shr
shl
lods
aad
(bad)
rol
iret
stc
out
cmp
ud1
stc
call
jmp
int
push
push
rcl
add
and
dec
pop
call
push
dec
test
dec
push
push
xchg
test
fisttp
push
adc
bound
sub
adc
movs
push
xlat
int3
push
pop
cwde
xlat
jno
test
push
push
rcl
or
or
dec
icebp
cmp
pop
ret
ss
or
daa
imul
in
hlt
add
mov
loop
push
push
div
cdq
inc
inc
xor
fidiv
add
sub
in
sbb
enter
jecxz
(bad)
jecxz
pop
pushf
lea
int3
sbb
fadd
jbe
mov
inc
fdivr
in
out
ss
dec
sub
sbb
jg
fcom
std
push
fstp
adc
or
and
fwait
(bad)
xchg
sub
test
iret
out
pop
xchg
sbb
sub
mov
mov
daa
xchg
pop
sub
js
push
stos
ins
xchg
push
leave
cmps
cmps
(bad)
sbb
aam
in
shl
test
pop
call
ror
jmp
call
aam
bound
adc
out
add
enter
(bad)
in
call
aam
sti
or
aam
push
jnp
xor
popa
daa
jnp
pop
das
adc
loope
or
lock
imul
xor
movs
int
cmps
push
scas
pop
dec
sbb
jns
pop
xchg
sbb
mov
sub
and
shr
inc
xchg
jecxz
mov
stc
(bad)
pop
sti
jb
mov
mov
mov
fs
jbe
xchg
xor
cld
ds
in
inc
test
dec
out
add
mov
dec
xor
cld
xor
cs
xchg
jns
popa
popa
scas
mov
in
shl
loop
inc
std
dec
ja
out
test
push
ins
aam
leave
arpl
popa
retf
mov
lea
out
adc
jnp
push
dec
mov
cmp
out
sbb
fst
ret
mov
or
aam
stc
ror
pop
xlat
leave
aaa
add
adc
xchg
sbb
int3
xor
dec
sub
dec
push
pop
xchg
shr
xor
cmps
fidiv
sbb
and
xchg
add
mov
inc
mov
rol
xchg
xlat
xchg
xor
xor
(bad)
pushf
imul
dec
pop
shl
mov
lods
lods
leave
pusha
inc
xchg
(bad)
div
in
xlat
cmp
push
rcr
shl
jo
inc
sub
shl
mov
sar
pop
mov
mov
add
sbb
xlat
or
movs
sub
mov
xchg
pop
leave
inc
inc
cli
jns
push
out
mov
popf
xchg
cmps
or
xor
jecxz
fld
scas
sbb
adc
sub
push
sbb
not
fisubr
or
popf
outs
jl
pop
push
push
dec
data16
push
aas
push
es
jmp
das
stos
xchg
call
push
adc
jmp
fcom
in
(bad)
sub
mov
mov
pop
mov
fisubr
xchg
movs
mov
pop
sbb
ficomp
pop
sbb
jbe
sahf
jnp
loope
cdq
mov
imul
in
and
xchg
lea
sub
jae
stc
sahf
sub
xor
cdq
lahf
hlt
dec
sar
arpl
lahf
mov
loope
retf
mov
push
mov
cld
loopne
test
mov
xchg
out
mul
dec
or
popf
sbb
push
cmp
test
cmp
fadd
pusha
xor
pop
outs
xor
popf
ss
cdq
sub
les
lods
popa
jle
sub
jbe
cdq
leave
fadd
and
and
mov
push
loop
push
push
call
daa
add
out
xchg
and
jne
pop
sbb
mov
scas
dec
pop
sbb
push
mov
out
leave
or
ds
(bad)
repnz
into
test
int
outs
jmp
mov
cs
loope
jno
imul
lods
adc
inc
mov
iret
inc
mov
int3
ror
sub
push
loopne
test
xor
xor
pop
or
push
ins
lock
sub
or
test
push
in
out
in
int
mov
loope
mov
arpl
jle
cmp
dec
(bad)
in
arpl
enter
xchg
push
mov
sub
ror
cld
pop
push
xor
mov
mov
adc
pop
xchg
xchg
pop
inc
pop
in
jnp
cmp
call
and
mov
out
cdq
sbb
out
push
add
cmp
das
fistp
add
and
mov
xchg
outs
sti
sbb
pop
call
push
pop
xor
or
out
push
sbb
add
push
lods
dec
lea
rol
sti
xor
(bad)
cdq
push
bound
leave
push
ds
xor
test
fwait
clc
jnp
inc
mov
fisubr
and
xchg
int3
jbe
adc
js
mov
mov
xor
lods
xor
xchg
pop
cmp
dec
jb
retf
pop
jno
clc
loope
sbb
stos
sbb
sub
sub
xchg
sbb
sbb
mov
movs
loope
mov
sbb
dec
fst
xchg
pop
(bad)
mov
daa
enter
and
push
mov
mov
lods
dec
cmp
jae
xchg
stos
ins
(bad)
pusha
stos
and
add
cld
adc
outs
push
add
ret
xchg
in
add
or
fbstp
shl
xor
outs
sub
(bad)
cdq
pop
imul
mov
jae
inc
or
das
push
in
add
pushf
lods
mov
gs
ss
test
and
jp
shr
push
fisttp
xchg
call
pushf
into
rol
shl
or
and
jl
sub
addr16
ins
jno
xor
sti
cmp
arpl
ja
mov
into
sub
cmp
jmp
pop
xor
icebp
xchg
mov
or
mov
pop
and
push
sub
pop
sar
dec
sub
cmp
sar
push
std
adc
add
sub
loope
sbb
ins
pop
mov
mov
sbb
(bad)
jg
cld
xor
cmp
sbb
(bad)
out
mov
or
mov
lahf
cmp
enter
fndisi(8087
mov
cmp
bound
jmp
fwait
jmp
push
lea
lds
jb
and
sub
xchg
pop
fdivr
inc
out
push
push
add
sub
xchg
fmul
mov
mov
daa
jge
ss
mov
jno
test
shl
out
mov
div
add
mov
aam
pop
int
(bad)
cmp
push
jmp
imul
add
sbb
jne
push
repz
test
xchg
aam
inc
iret
es
(bad)
pop
movs
out
mov
mov
call
and
dec
lods
push
mov
inc
cmps
movs
mov
lea
frstor
and
mov
mov
cmp
xadd
inc
data16
in
movs
enter
int
mov
shr
fld
shr
fdivrp
stc
dec
repnz
aad
fldcw
mov
xor
shl
movs
dec
ins
dec
inc
mov
ss
sbb
or
cmp
jae
jg
das
mov
adc
scas
jns
dec
fst
lock
lahf
out
loope
fwait
xchg
sbb
jmp
adc
and
(bad)
push
sahf
test
lahf
mov
lea
push
mov
repz
dec
fisttp
test
stos
sub
or
cmp
push
adc
push
dec
pop
in
hlt
loope
or
xchg
ror
mov
stos
push
repz
pop
mov
repz
sahf
ins
and
ja
call
jmp
pop
cmp
mov
mov
adc
ret
push
push
mov
push
xchg
out
jo
fwait
addr16
mov
jmp
push
psubusb
mov
pop
stc
aaa
(bad)
pop
xchg
(bad)
(bad)
lock
in
push
rcr
or
pop
mov
jae
mov
int
bound
xchg
inc
cmc
adc
in
inc
inc
hlt
mov
sti
mov
adc
iret
mov
cwde
loope
pop
push
xchg
retf
je
cmps
xlat
jbe
pushf
(bad)
call
sahf
jp
jge
gs
push
push
clc
in
push
jmp
add
data16
imul
or
das
out
test
stos
mov
popa
mov
pop
lods
jns
retf
lea
pop
xchg
xchg
xor
push
sub
sbb
cmp
inc
stos
inc
idiv
add
sbb
add
pop
sub
add
in
daa
sbb
enter
xchg
out
daa
cld
jb
out
ret
retf
lods
xchg
enter
add
test
push
push
pop
mov
neg
shl
int3
sub
xor
ja
sbb
mov
in
loopne
call
sub
jecxz
movs
mov
or
gs
scas
adc
and
in
cmp
aaa
mov
or
stos
pop
mov
push
and
inc
int
(bad)
(bad)
cmp
mov
dec
add
jecxz
mov
and
sahf
js
adc
jg
jp
or
push
inc
jmp
dec
add
cmp
and
ds
int
jns
sbb
xor
jl
sbb
mov
inc
scas
out
ss
arpl
loop
movs
and
mov
mov
lahf
inc
mov
fild
jbe
int
fdivr
hlt
fld
mov
or
scas
fadd
mov
sahf
out
sahf
fdivr
cdq
jae
inc
cmp
stc
je
mov
cmps
jb
jb
loopne
push
adc
mov
xor
popf
popa
inc
enter
movs
xchg
sbb
pop
daa
aad
movntps
loopne
xchg
dec
inc
aad
push
in
push
xor
dec
mov
or
popa
xchg
cmp
push
mov
out
mov
pop
cmp
stos
sbb
and
test
jl
and
loop
sub
and
scas
fisubr
jae
inc
push
cmp
outs
(bad)
gs
les
xchg
xor
retf
xchg
xchg
inc
mov
(bad)
fidiv
push
mov
mov
cmp
scas
stos
cmp
and
mov
loop
dec
mov
xchg
lea
mov
sti
inc
xchg
cmp
xor
adc
call
sub
mov
jmpw
pop
adc
adc
sub
stos
jns
sti
inc
out
or
or
mov
cmps
pop
xchg
mov
pop
(bad)
int3
icebp
mov
(bad)
scas
xchg
adc
lds
push
inc
test
das
fmulp
mov
and
mov
fdivr
(bad)
and
or
xchg
div
arpl
adc
outs
les
call
in
pop
sbb
aas
stos
cmp
jbe
dec
inc
mov
and
add
gs
outs
loopne
push
les
popf
mov
mov
or
mov
outs
movs
fsubr
sub
or
enter
inc
cmc
jbe
xchg
leave
loopne
ins
mov
mov
cmp
inc
les
popf
mov
loope
imul
scas
or
ja
cmp
aas
movs
mov
ds
cli
push
leave
test
dec
stos
fild
fist
mov
out
mov
jb
jmp
test
mov
movs
sbb
sbb
xchg
shr
jecxz
aas
mov
pop
cmp
fwait
cmps
dec
lods
sti
call
mov
retf
cmp
(bad)
adc
(bad)
repnz
cmp
sub
mov
push
fs
xchg
xor
mov
aaa
repnz
mov
push
pop
movs
aam
mov
jg
inc
mul
adc
ret
repz
call
shl
sar
xor
inc
sbb
add
sahf
nop
aaa
dec
ss
stos
xchg
jp
mov
sub
dec
shl
gs
imul
cmp
nop
test
cmp
add
fld
sahf
sub
imul
push
inc
sahf
mov
xor
pop
in
dec
sub
xchg
lea
imul
mov
push
nop
call
aas
or
dec
mov
sbb
test
mov
icebp
pop
ret
jo
out
sbb
mov
leave
pop
inc
and
push
mul
pop
jmp
xchg
sub
xlat
(bad)
(bad)
or
xchg
dec
retf
std
cmp
(bad)
hlt
adc
fild
xchg
cwde
cld
mov
ja
mov
cmps
mov
mov
mov
dec
ins
sbb
mov
xor
popf
xor
jnp
out
cmp
xchg
fnstcw
inc
xor
mov
pop
jmp
pusha
sbb
push
inc
outs
add
cli
mov
xor
dec
outs
nop
and
scas
inc
inc
push
fnsave
and
sbb
cmp
fcomi
in
hlt
fidivr
xor
sar
std
popf
sahf
pop
int3
mov
or
fdivr
pushf
mov
mov
adc
pop
push
dec
imul
(bad)
cmc
movs
xor
xlat
int
hlt
aas
mov
rcl
pop
jge
mov
imul
mov
loope
pop
(bad)
dec
outs
daa
xor
cld
pop
sub
sub
sti
or
jl
cmp
dec
movs
sub
pop
ret
stc
inc
pop
sub
jb
add
mov
arpl
stos
shr
sub
ja
adc
cld
into
mov
push
rcl
jmp
pop
adc
stc
fidiv
outs
push
sbb
mov
mov
movs
ror
test
cld
icebp
cmp
call
xchg
adc
jg
imul
dec
or
js
dec
or
mov
xchg
lea
or
addr16
ret
sahf
add
mov
pusha
jns
std
inc
push
inc
scas
stos
je
or
fwait
xor
push
add
mul
dec
xchg
int
dec
sub
mov
sbb
add
ins
pushf
inc
cmc
les
adc
cmp
pop
mov
mov
xchg
mov
jge
pop
loope
xchg
ins
add
or
mov
add
(bad)
jb
dec
jge
and
mov
push
push
movs
fld
and
add
jecxz
sbb
xlat
push
pop
sbb
ins
add
dec
mov
mov
jecxz
pop
sbb
out
aas
mov
jnp
outs
xchg
mov
fadd
mov
in
lahf
test
fwait
mov
ins
pop
mov
pop
aaa
(bad)
mov
ins
mov
xor
sbb
cmp
mov
nop
cld
lods
xchg
int3
fidiv
xor
fstp
cwde
mov
leave
dec
aaa
xchg
nop
outs
dec
shl
pop
scas
mov
and
adc
hlt
sub
fdiv
mov
fmulp
inc
and
movs
xchg
dec
test
rcl
rol
mov
popa
push
pop
cmp
and
stos
cli
sub
out
push
cmp
cmps
fsub
push
ins
jmp
jmp
aaa
mov
data16
xchg
push
jmp
stos
shl
mov
int3
enter
stos
mov
cmp
popa
lock
mov
in
add
push
call
pop
ret
mov
pop
xchg
lahf
dec
and
push
mov
sbb
mov
inc
cmp
jle
scas
mov
sti
icebp
in
popf
fist
inc
movs
iret
mov
jno
popf
mov
repnz
mov
push
ficom
add
imul
shl
jnp
cli
jmp
inc
test
mov
pop
xor
xor
in
aad
int3
add
mov
cmp
dec
inc
jno
inc
loopne
lods
jmp
push
sub
push
pop
adc
xor
ficomp
div
jbe
xor
call
cwde
add
fs
add
test
dec
add
sbb
mov
pop
in
jae
imul
pop
popf
leave
lods
mov
retf
or
sub
mov
mov
gs
cmp
dec
sbb
mov
std
hlt
sub
hlt
scas
cli
ds
xor
pop
stc
imul
ret
or
mov
bnd
test
cmp
and
hlt
loope
mov
mov
popf
jb
rol
fadd
enter
test
ret
scas
jle
out
and
lea
lock
push
lock
fsub
xlat
stc
cmp
inc
mov
(bad)
in
shl
(bad)
xor
aad
jb
inc
loope
cmp
jae
push
les
and
xor
cs
mov
aaa
push
loopne
(bad)
sbb
sub
dec
lods
or
xchg
mov
jge
jge
cmp
addr16
ret
inc
mov
out
fidivr
jle
mov
and
jl
inc
mov
test
fstp
xor
cs
scas
mov
xor
xor
shr
retf
xchg
push
jno
dec
mov
ret
test
adc
popf
or
(bad)
retf
mov
into
nop
rol
inc
(bad)
fimul
test
icebp
pusha
mov
out
retf
imul
fdiv
fstp
cmp
test
rdtsc
and
aas
inc
std
(bad)
push
out
xor
aas
inc
imul
call
mov
mov
inc
push
inc
cli
mov
movs
jo
fiadd
inc
je
and
jmp
pushf
shl
jg
call
lods
pop
in
test
mov
imul
scas
rcr
xchg
arpl
sar
jmp
arpl
xlat
arpl
movs
aad
loopne
mov
and
adc
push
pop
sbb
add
cli
sbb
jp
or
hlt
imul
jp
dec
sbb
mov
mov
sub
push
das
shl
add
enter
cmc
fadd
ret
dec
mul
cld
dec
xor
shr
enter
repz
stc
inc
jmp
mov
outs
mov
imul
sub
int
xor
push
das
scas
enter
retf
jle
jecxz
pop
not
cmp
out
imul
rol
aaa
adc
mov
mov
movs
sbb
dec
jae
jne
push
ret
adc
test
jecxz
sub
push
add
sbb
pushf
jmp
add
jmp
mov
iret
lods
mov
adc
xchg
loop
inc
neg
nop
fbstp
mov
push
xchg
or
shl
cmp
mov
inc
int
xchg
mov
test
retf
retf
jbe
je
in
pop
jl
out
inc
pushf
out
pop
mov
dec
push
sahf
and
adc
stc
add
int3
arpl
mov
rcr
jl
jno
cwde
adc
popa
(bad)
or
sub
retf
repz
outs
fsub
push
cmps
dec
sbb
sbb
push
mov
fsubr
mov
push
ret
push
jae
lea
xchg
arpl
div
sahf
das
ret
mov
rcr
cmp
and
jbe
xor
mov
adc
inc
inc
push
push
gs
fisttp
aaa
test
sub
clc
ins
pop
inc
pop
mov
sub
pop
and
fsubp
fnstenv
push
fistp
test
ins
xor
pop
shl
fist
mov
sbb
or
pop
ja
gs
or
cmp
jle
push
pop
test
jbe
test
xor
sub
and
test
jns
jae
aas
adc
push
int3
ins
mov
mov
jo
in
daa
(bad)
in
sub
lahf
push
repz
fcom
mov
mov
pop
out
jbe
pop
inc
div
movs
cwde
xor
adc
inc
cmps
shl
xor
imul
test
cwde
fucom
xor
stos
jmp
iret
pop
les
jge
add
dec
scas
rcr
stos
mov
mov
ss
or
mov
pop
stc
fwait
retf
push
mov
push
jmp
jnp
into
fstp
or
ret
daa
ins
lea
pop
pop
icebp
(bad)
xchg
pop
(bad)
cmp
mov
jne
inc
imul
scas
and
pop
xor
mov
mov
or
fst
cmp
xchg
adc
push
and
or
mov
mov
cmp
inc
(bad)
imul
sbb
xchg
mov
fs
stos
into
xchg
rol
push
loopne
repnz
cmp
out
bound
stos
shl
scas
mov
xor
repnz
ret
loopne
xlat
jae
daa
adc
psrad
aas
cmp
ror
dec
retf
or
xchg
and
push
bound
in
popa
sbb
sub
into
icebp
les
dec
test
push
inc
jbe
jo
or
or
ret
mov
pusha
adc
arpl
push
jle
mov
push
ds
sti
bnd
push
out
addr16
into
loope
into
push
or
push
mov
fdivr
mov
xchg
imul
les
adc
jb
sbb
imul
cmp
inc
ss
daa
out
stos
inc
mov
scas
mov
ret
loop
xor
pusha
adc
sbb
xchg
stos
retf
pusha
fld
retf
mov
out
call
ja
inc
ret
sbb
scas
pop
dec
mov
mov
pop
sub
fsub
lea
jns
cmc
into
dec
mov
sub
sar
out
push
call
fst
add
leave
mov
es
jae
jmp
adc
test
in
mov
(bad)
imul
cld
cmp
dec
adc
inc
fs
and
sbb
test
(bad)
dec
add
sub
add
out
call
(bad)
sbb
mov
daa
aaa
add
cmps
retf
jne
fucomi
shl
cmp
adc
xor
ret
pop
icebp
daa
pop
leave
in
or
(bad)
shl
mov
jmp
je
inc
ja
cmp
pop
fs
xlat
enter
mov
pop
or
jp
jne
hlt
fisubr
cmp
add
jno
jmp
mov
aam
out
outs
adc
sub
test
adc
or
ins
fisub
cdq
imul
jp
xor
adc
call
pop
inc
jp
in
inc
mov
push
sar
mov
(bad)
mov
addr16
int
enter
mov
adc
in
push
test
and
in
jecxz
gs
inc
sbb
adc
int
jge
pop
cld
and
les
fldcw
aas
xor
push
add
mov
retf
leave
mov
xor
and
scas
mov
cmps
push
aaa
lds
iret
lock
(bad)
pushf
sbb
imul
ret
mov
inc
shl
mov
fsubr
call
loopne
sbb
dec
sti
jae
mov
retf
add
rol
xchg
arpl
shl
pop
mov
jp
sti
or
jno
pop
mov
adc
es
cmps
into
adc
add
jmp
test
mov
push
div
ficom
cmps
out
and
push
(bad)
sbb
test
push
test
ror
pop
ror
sub
les
inc
hlt
jp
(bad)
push
data16
add
add
sub
pop
mov
xor
lock
jecxz
adc
sbb
mov
xchg
retf
dec
aas
adc
popa
jnp
dec
adc
dec
jnp
push
fwait
sub
sbb
rcr
or
cmp
inc
xchg
fisubr
es
cwde
jb
cmps
cdq
push
stos
fwait
pop
add
pop
cdq
add
mov
jmp
jnp
sti
test
xchg
ja
sub
mov
dec
sbb
cwde
xor
(bad)
enter
mov
and
jns
add
add
xchg
cmc
clc
outs
jle
xlat
xor
mov
popf
pop
out
dec
sbb
or
hlt
push
jecxz
adc
fcmovb
cmp
stos
dec
dec
inc
frstor
ss
ins
repnz
call
outs
mov
aaa
retf
cs
lds
push
scas
mov
push
push
int
xchg
or
stos
loopne
js
inc
popa
sbb
(bad)
mov
cld
mov
inc
lods
xchg
push
push
rcr
push
jle
sbb
sub
aas
es
push
pop
jp
add
and
inc
loope
dec
retf
jns
pop
movs
xchg
push
sub
pop
es
mov
int
push
mov
xchg
mov
test
xchg
mov
dec
(bad)
cld
shl
cdq
cmp
fwait
pushf
ret
imul
iret
ins
loope
popa
sbb
in
call
pop
(bad)
pop
nop
lahf
lahf
aad
inc
sbb
add
push
mov
outs
es
rcr
mov
mov
pusha
push
mov
lea
imul
outs
dec
adc
cmp
inc
sbb
(bad)
int
ret
retf
cwde
ds
inc
ds
ja
mov
sbb
sub
inc
mov
lahf
and
call
test
gs
cmps
adc
push
popf
pop
adc
fdiv
in
ins
mov
(bad)
mov
or
leave
pop
mov
mov
sbb
add
xor
iret
sbb
push
inc
out
inc
cmp
cmp
ret
out
cmp
cmc
push
(bad)
mov
movs
mov
out
jl
push
jnp
sub
xchg
(bad)
push
loope
test
mov
sub
mov
mov
or
inc
dec
jmp
jecxz
out
jo
mov
jl
mov
outs
or
dec
cmp
adc
in
dec
shl
xor
outs
cmp
mov
jae
mov
shr
push
push
sub
adc
and
and
enter
and
mov
add
fdivr
test
xor
xchg
fldcw
adc
mov
and
jb
sub
fldcw
xor
lahf
div
fmulp
pop
shl
sbb
sub
mov
and
cmp
xchg
jno
cwde
ds
mov
into
mov
data16
jne
jno
adc
loope
push
add
popf
cmp
popf
pop
dec
iret
sbb
ds
cdq
sbb
push
fst
arpl
xchg
mov
enter
pop
mov
ret
jle
neg
das
dec
inc
or
xchg
gs
inc
sbb
mov
cmp
int
sbb
mov
and
cwde
mov
dec
icebp
hlt
cmp
fstp
xor
fnstenv
inc
adc
sahf
mov
mov
ret
loop
push
mov
loope
and
inc
mov
je
add
and
das
cmovae
aam
std
arpl
inc
jge
jecxz
imul
sahf
adc
or
sbb
outs
(bad)
adc
cmp
push
sbb
mov
cdq
mov
fnstsw
dec
les
or
sbb
dec
mov
xlat
loope
pusha
jle
fxch
out
repnz
(bad)
in
arpl
imul
fs
jmp
dec
add
pop
mov
in
xor
or
mov
xchg
inc
mov
pop
inc
in
sub
in
in
sbb
sbb
jle
pop
dec
popf
popf
(bad)
in
mov
cmp
cmp
inc
enter
pushf
inc
sub
push
cdq
cmp
or
push
ja
sub
xchg
jno
and
fwait
ret
cmp
mov
mov
add
xor
mov
inc
sbb
jbe
gs
add
pop
cmp
jns
retf
and
std
test
xchg
xchg
mov
dec
inc
jg
outs
fdiv
in
or
dec
xlat
rcr
std
sub
add
rcr
mov
call
fisubr
dec
lods
dec
lock
push
sub
inc
pop
vaddsd
pushf
jae
leave
pop
pop
push
adc
adc
add
sub
in
int
pop
xchg
sbb
mov
push
int
fistp
or
sub
stc
retf
xor
addr16
sbb
hlt
clc
ss
div
fs
idiv
push
mov
xor
and
push
inc
call
(bad)
dec
lods
mov
aam
fimul
and
inc
sbb
add
fidivr
push
add
mov
aad
jmp
cmp
(bad)
(bad)
jmp
loopne
mov
xchg
call
cli
ins
mov
int
xchg
xchg
push
add
jbe
and
dec
popa
shl
mov
out
aas
mov
pop
push
xor
and
push
cwde
daa
rol
out
sti
les
pushf
push
xor
stos
cmps
sbb
arpl
cmp
test
inc
jne
repz
jno
xlat
inc
xor
sbb
push
push
adc
mov
(bad)
out
or
xor
xchg
sbb
add
push
push
mov
pop
enter
ficomp
mov
cmp
repnz
xor
mov
adc
push
add
pop
push
xor
sub
jnp
jns
mov
jns
int3
dec
(bad)
stc
mov
cmp
dec
repz
bound
call
fldcw
or
pop
sub
and
sub
das
and
push
inc
mov
inc
xor
(bad)
xor
out
inc
jle
lea
out
(bad)
es
and
cmps
mov
ret
out
mov
mov
rol
(bad)
jge
aaa
mov
test
in
ja
fld
stos
dec
jns
scas
jbe
test
cwde
lock
scas
xchg
push
mov
xor
ja
pop
jo
pop
xchg
xor
iret
fwait
icebp
repnz
mov
mov
popf
aaa
in
sub
inc
jne
in
mov
(bad)
push
pop
imul
xor
aaa
in
mov
and
test
mov
ins
outs
mov
clc
jmp
push
push
mov
push
mov
cdq
inc
sub
dec
or
push
test
push
pop
(bad)
(bad)
fsubr
pop
int
mov
(bad)
xchg
ins
ins
cs
jecxz
loop
je
pop
push
pop
imul
inc
retf
jg
aad
add
xchg
cmp
enter
inc
fsubr
ret
(bad)
lea
rol
inc
int
xchg
cmp
in
test
mov
loopne
jge
lea
inc
(bad)
xor
jnp
test
push
push
inc
mov
xchg
xchg
dec
mov
mov
das
retf
sub
jb
icebp
pusha
push
push
(bad)
push
jnp
sub
ficom
cmp
sahf
icebp
or
out
pop
sbb
jbe
mov
pop
add
fdiv
out
mov
popf
leave
pop
cdq
mov
mov
js
dec
retf
xchg
ss
cdq
jns
clc
dec
cmp
adc
dec
mov
xor
movs
mov
and
sub
xor
push
shl
jl
xor
jmp
loopne
ins
aas
cmps
cwde
rcl
or
lahf
int3
jo
push
sub
push
movs
adc
lea
fisttp
xor
movs
push
mov
cmps
xor
rcr
addr16
mov
ins
call
mov
jle
sub
mov
leave
cmps
cdq
sbb
sti
imul
jle
cwde
xchg
push
les
push
call
adc
les
ss
stos
lea
rcr
fcom
adc
sub
outs
pop
imul
mov
sahf
adc
stos
mov
jbe
inc
jl
inc
rol
push
aam
aam
aad
stos
mov
(bad)
sub
lods
test
jmp
aas
dec
pop
ja
scas
cld
dec
jae
dec
cmp
jbe
popa
lods
(bad)
sbb
cmp
out
dec
retf
pop
pop
out
pop
inc
inc
inc
sub
or
mov
xchg
push
push
es
fnsave
dec
das
adc
xor
in
ins
enter
push
push
ret
cwde
xor
repnz
sbb
test
pop
lds
xor
aaa
inc
idiv
push
pop
aas
adc
mov
add
or
aad
add
stos
mov
push
mov
mov
adc
ss
inc
and
mov
int3
pop
(bad)
adc
call
sub
sbb
aaa
jbe
dec
xchg
addr16
lea
and
xchg
mov
cmc
jo
int
xor
fisub
cmps
aam
inc
daa
pop
repz
xchg
xor
out
xor
fistp
out
push
shr
jl
jmp
test
pop
jnp
add
fs
add
xor
inc
stos
xchg
neg
jb
and
les
aad
cmp
sbb
je
pop
in
lods
mov
imul
inc
jge
scas
sbb
in
jmp
pushf
shr
mov
fild
(bad)
mov
sbb
test
adc
aam
and
(bad)
stos
or
push
daa
fisttp
ret
push
and
ret
push
sub
xor
cmp
pop
scas
inc
and
(bad)
ins
mov
arpl
push
cmp
sbb
adc
adc
ss
or
test
scas
add
out
psrlq
lods
and
mov
ins
mov
cmp
or
xchg
aam
mov
add
call
in
out
jl
add
es
push
mov
in
jecxz
movs
lea
test
adc
pop
enter
jmp
jae
sti
push
and
ss
loopne
sahf
inc
adc
dec
pop
ror
inc
xchg
mov
mov
ds
mov
fnsave
xchg
pop
inc
inc
and
sub
mov
mov
cld
sbb
or
sub
mov
inc
push
mov
popf
aam
test
adc
clc
xlat
cmp
dec
hlt
aad
xor
pop
call
push
pushf
cmp
adc
xchg
loop
pop
xor
cmp
rol
adc
sbb
leave
xlat
or
aas
nop
mov
(bad)
aaa
mov
sbb
ins
lods
int3
dec
aam
xlat
imul
adc
adc
mov
loope
jbe
mov
mov
push
adc
dec
xor
inc
sub
xchg
push
dec
pop
cld
add
dec
js
sar
in
jp
jecxz
push
sbb
sub
add
jmp
icebp
or
add
inc
or
out
mov
inc
(bad)
enter
in
add
mov
adc
xor
push
ret
retf
(bad)
call
pop
sub
xor
push
jmp
xchg
inc
mov
fcom
and
xor
imul
dec
outs
int
xor
call
hlt
les
sub
cs
xor
jbe
ss
stos
mov
jno
cmp
and
movs
cld
hlt
and
lods
ror
mov
imul
add
das
jo
in
push
cmp
push
inc
nop
fisub
loopne
sbb
xchg
xor
add
lds
push
popa
das
out
mov
and
dec
jae
fsubr
jl
xchg
retf
call
(bad)
dec
and
imul
mov
sub
xor
sbb
aam
out
jg
sub
mov
mov
into
cmp
jne
lahf
loope
in
adc
sahf
jmp
push
cmps
rcr
mov
fisubr
imul
ins
pop
out
pop
sub
jecxz
xchg
or
(bad)
(bad)
cld
test
addr16
push
sub
setle
dec
dec
aas
mov
inc
mov
cdq
dec
cwde
xor
xchg
stos
cdq
cmp
xchg
dec
in
mov
jmp
stos
fiadd
call
fcmove
(bad)
in
loope
jne
sbb
in
aaa
pop
xor
sub
and
jne
scas
fadd
xlat
xchg
out
mov
inc
popa
dec
jmp
call
or
sbb
push
arpl
lea
movs
mov
adc
adc
mov
mov
ret
adc
out
jne
xor
in
dec
pop
lds
mov
adc
sahf
stos
xchg
imul
out
xor
cmp
pop
push
es
add
movs
push
xchg
retf
outs
mov
cmp
enter
jecxz
int3
cmp
jmp
jbe
pusha
popa
push
hlt
data16
xchg
aam
pusha
into
or
mov
push
sti
sub
mov
rcr
sbb
sbb
mov
cmp
(bad)
dec
stos
jmp
movs
fld
cmp
add
mov
les
mov
dec
xor
xchg
xchg
jae
div
rol
scas
jecxz
mov
pushf
inc
scas
push
mov
cwde
mov
test
loopne
cmp
jg
mov
mov
jmp
enter
push
ja
lods
stos
xchg
cmp
mov
mov
sbb
gs
outs
jbe
(bad)
jns
add
scas
mov
cmp
out
and
aas
push
not
jle
adc
(bad)
and
mov
jmp
inc
jo
aad
add
adc
or
jnp
push
retf
sbb
or
push
adc
push
in
(bad)
fcmovne
jbe
mov
sub
cmc
inc
mov
sbb
xchg
cmp
push
outs
xlat
ret
mov
pop
xchg
fistp
(bad)
mov
add
cli
movs
daa
idiv
fdivr
push
or
xchg
pop
sti
jge
sbb
std
popf
test
sar
push
inc
js
(bad)
mov
aad
xchg
xchg
push
iret
jmp
and
push
data16
push
mov
sbb
mov
cs
cs
cmp
je
fprem
adc
sbb
dec
and
mov
fdivr
pop
mov
ins
loop
inc
jo
outs
ins
adc
mov
movs
cli
jns
adc
push
lahf
test
jb
jecxz
fimul
dec
clc
(bad)
jmp
inc
mov
mov
in
out
sbb
sub
mov
dec
mov
jmp
cwde
mov
xor
and
sub
fistp
xor
outs
dec
pop
adc
fisttp
enter
pushf
popf
jne
mov
mov
(bad)
adc
(bad)
mov
mov
mov
sti
sub
fcmovnu
xchg
pop
loope
pop
bound
scas
xchg
cmps
repz
shl
mul
rcl
mov
and
xchg
sbb
mov
sbb
mov
sahf
dec
out
sub
ds
cmp
pop
ss
lahf
mov
ins
pop
xor
test
mov
data16
shl
mov
fwait
mov
inc
leave
or
shr
test
sar
sbb
mov
cmp
pusha
daa
jg
sub
in
imul
sbb
xchg
lock
div
sahf
mov
mov
scas
addr16
inc
and
jo
jo
cmc
sub
push
push
xchg
xchg
rcl
add
or
data16
cdq
dec
int
mov
nop
mov
repz
movs
push
jb
ret
inc
mulps
sbb
sbb
sub
je
(bad)
xchg
pop
jmp
cmp
add
xlat
loope
mov
mov
cmc
jl
mov
loope
xchg
jl
outs
ror
and
and
aam
into
or
shl
adc
xchg
inc
fidivr
out
rcl
in
mov
iret
cli
pop
pop
jmp
mov
fdiv
mov
je
pushf
aad
ds
test
ins
retf
cmp
mov
cmps
test
sbb
pop
arpl
cdq
test
sti
cwde
in
pop
mov
int3
add
add
mov
les
jge
cs
repz
popa
push
test
sub
sub
cld
dec
fbld
call
repnz
iret
shl
fbstp
sar
xchg
movs
ja
cmp
sbb
xchg
repz
imul
fiadd
in
adc
scas
xchg
fistp
mov
gs
(bad)
or
les
pop
or
mov
test
outs
leave
aam
jecxz
mov
fstp
clc
in
(bad)
in
(bad)
and
mov
mov
mov
retf
jmp
fcmovnbe
adc
push
lock
jmp
rcr
fidiv
xchg
push
icebp
or
popa
jo
adc
(bad)
jmp
cmps
call
jo
movs
adc
push
hlt
lock
xchg
(bad)
aaa
jns
test
pop
icebp
dec
or
js
inc
xchg
mov
jae
movs
push
mov
int3
push
push
dec
jp
pop
add
pusha
jp
mov
stc
xlat
mov
fistp
dec
aaa
movs
out
jns
dec
mov
sahf
sti
ds
loopne
fnsave
ds
ds
pop
cmc
outs
fcomi
jmp
or
dec
ret
lods
pop
sbb
dec
cmps
pop
adc
out
idiv
push
mov
sub
ins
pop
cli
sbb
inc
cmp
bound
sti
pop
jno
scas
jbe
add
mov
popa
cwde
mov
idiv
jle
cmp
jg
iret
(bad)
(bad)
sbb
or
and
cdq
outs
sbb
pop
mov
pop
(bad)
out
pop
xchg
mov
jno
xor
ss
jne
adc
es
outs
pop
dec
sbb
or
call
pop
mov
mov
fs
cwde
mov
adc
or
rcr
test
push
out
add
mov
mov
push
inc
xlat
sub
dec
outs
hlt
inc
mov
fild
jmp
fsub
cmp
push
outs
cdq
jmp
cmp
pusha
adc
push
in
add
jne
call
sbb
or
imul
(bad)
sub
test
into
mov
imul
bound
ins
push
sar
or
retf
sbb
lds
lods
mov
in
xchg
(bad)
mov
push
pushfw
inc
mov
cli
aam
push
repnz
jp
loop
pop
test
imul
cmp
(bad)
cwde
dec
mov
movs
leave
adc
sub
out
gs
popf
popf
xor
add
add
push
inc
fidiv
jbe
mov
aad
dec
lea
dec
cmps
inc
or
and
movs
and
icebp
cmps
sub
div
xchg
popf
xor
jmp
ins
scas
ins
cmps
inc
fisttp
sbb
fcomp
xchg
lods
das
adc
mov
cmp
xchg
jns
sub
enter
ins
xchg
push
sub
ret
mov
jecxz
rcl
pop
mov
stos
push
sbb
xchg
loop
call
idiv
adc
mov
hlt
cmp
cmp
lahf
outs
mov
dec
cli
imul
add
aas
push
add
fld
mov
and
test
inc
sub
mov
fsubr
fmul
and
jecxz
retf
(bad)
and
jae
or
mov
mov
push
add
sbb
xor
and
sti
test
aam
push
mov
je
gs
loopne
mov
hlt
cmp
mov
icebp
dec
cmp
inc
popaw
cmp
imul
test
sbb
fldenv
out
adc
jge
arpl
shr
ror
mov
cmp
mov
push
(bad)
je
cld
mov
pop
add
xor
call
(bad)
add
out
pop
mov
pop
pushf
add
retf
out
lea
(bad)
hlt
xor
idiv
daa
call
dec
sub
das
fwait
arpl
fimul
mov
dec
inc
loopne
ss
shl
fld
ror
adc
mov
mov
cdq
test
mov
dec
(bad)
mov
jnp
add
(bad)
mov
xchg
inc
jle
or
push
cwde
add
pop
clc
sub
mov
fnsave
cmps
dec
lea
or
lahf
mov
add
or
add
pop
test
cmp
test
add
ins
mov
sar
dec
shl
lds
dec
loope
lods
adc
daa
das
or
adc
je
or
pop
add
pop
dec
lods
pop
repz
and
jge
push
(bad)
cmp
(bad)
pop
inc
mov
fmul
in
addr16
mov
ds
jmp
push
out
dec
cmp
retf
mov
js
enter
pop
mov
arpl
rep
cmp
sbb
adc
xchg
(bad)
adc
inc
mov
jbe
or
out
mov
jno
sub
hlt
ja
xchg
js
call
jl
mov
jl
mov
div
cmp
mov
add
mov
rcr
pop
retf
xchg
and
test
pop
dec
in
lock
cmp
lods
call
int3
fisubr
cdq
imul
fs
mov
and
out
mov
adc
sbb
fisttp
jp
je
int
jmp
xlat
loope
loop
mov
mov
and
push
jge
adc
adc
push
jle
mov
mov
ins
mov
fs
mov
mov
cmp
push
call
out
push
in
xchg
push
pop
enter
adc
nop
js
sti
or
push
pop
imul
pop
les
sbb
sahf
mov
push
pop
and
adc
and
jle
jo
(bad)
mov
adc
mov
xor
rol
mov
push
mov
pop
xchg
cli
in
sbb
dec
test
inc
scas
pushf
loop
sub
loope
push
pop
jmp
or
adc
pop
jb
mov
dec
add
out
div
dec
push
(bad)
aas
inc
cmps
les
out
bound
or
xchg
xlat
arpl
mov
aad
or
(bad)
or
xlat
ins
mov
ret
or
xor
ret
sbb
mov
fimul
test
shl
fiadd
pusha
inc
push
out
imul
(bad)
imul
sahf
(bad)
jno
push
dec
mov
test
add
nop
clc
int3
xor
cdq
repnz
mov
out
adc
xor
in
push
pop
mov
sbb
in
and
imul
mov
push
adc
inc
add
ja
pop
push
dec
jno
mov
loop
ret
fsubr
(bad)
cmps
into
push
mov
jg
ins
jns
fdiv
mov
mov
xchg
jnp
mov
xor
push
pop
cmc
daa
xchg
cdq
and
fisubr
xor
adc
inc
jp
cmp
jl
outs
scas
dec
out
xchg
adc
mul
cs
ins
aaa
add
dec
dec
cs
jp
test
inc
mov
test
lahf
scas
mov
adc
or
jmp
movs
mov
jle
mov
js
fs
jp
cmc
adc
jne
or
sub
dec
sbb
pusha
jnp
inc
xor
popf
inc
shl
xchg
(bad)
(bad)
pusha
xor
imul
stos
out
mov
pop
mov
add
inc
mov
pop
call
popf
fstp
(bad)
in
sub
(bad)
cli
sti
scas
mov
sub
jp
pushf
bound
popa
and
lods
jno
fisttp
fwait
lahf
push
add
pop
dec
adc
xchg
cmp
fwait
or
aam
pop
mov
repz
push
mov
mov
jae
mov
pop
stos
mov
das
jmp
push
das
adc
jle
mov
mov
inc
ret
(bad)
xchg
cs
leave
out
inc
jmp
clc
mov
cdq
test
push
call
sub
dec
mov
inc
in
call
mov
fdiv
loop
imul
sub
cmp
daa
xor
ror
test
jg
cdq
sti
(bad)
xor
pop
jne
jecxz
popf
ret
pop
jns
jg
in
ret
into
cmp
sbb
push
mov
imul
xor
sti
mov
cld
jmp
mov
mov
push
mov
hlt
cli
(bad)
out
jp
test
aam
mov
ins
int
sub
test
aas
and
bound
cmp
sub
(bad)
mov
iret
pop
cmp
adc
sbb
sbb
imul
fidiv
ds
xchg
ds
xchg
adc
scas
mov
movs
pop
ins
sbb
xor
xlat
imul
aam
rcl
cmp
mov
lar
sub
jl
call
hlt
and
push
xor
and
fs
pop
jno
xor
hlt
and
movs
outs
in
mov
mov
aam
mov
and
xchg
xor
ins
pop
aas
sbb
push
stos
test
repnz
cli
fwait
mov
or
fs
mov
retf
ret
repz
outs
inc
js
repz
push
cmp
cmp
sbb
ss
push
iret
jecxz
sbb
and
fnstcw
xor
in
ins
mov
sar
pop
cmps
and
jnp
arpl
mov
add
mov
dec
mov
fdivr
ins
test
gs
cmp
sbb
add
aas
push
test
lock
fimul
outs
and
lea
test
xor
mov
ror
sbb
or
loope
pop
inc
(bad)
mov
adc
cld
aaa
cmc
je
leave
lods
jmp
je
pop
xor
dec
stos
push
jp
jecxz
addr16
dec
pop
pop
cmps
add
ffreep
xchg
mov
popa
pop
int3
dec
mov
std
adc
mov
data16
fnstcw
mov
push
arpl
push
leave
jge
mov
arpl
in
imul
sbb
jl
inc
inc
xor
jl
dec
inc
add
jb
and
mov
out
cmp
stc
or
sbb
inc
test
(bad)
add
cli
scas
(bad)
cmp
adc
cmps
pushf
cmps
out
push
out
lock
(bad)
ds
clc
cli
pop
in
jg
sbb
fwait
jae
jns
scas
js
mov
inc
pop
out
test
rcl
inc
call
repnz
xor
adc
xchg
jo
xor
fs
fs
call
jg
pop
jl
jle
jmp
adc
mov
push
xor
loope
dec
xlat
dec
fmul
js
ffreep
and
and
mov
inc
not
inc
cmc
call
popa
pop
out
xor
xchg
loope
outs
inc
jmp
sub
push
fmulp
es
push
in
nop
cmp
or
repz
cmc
mov
loopne
adc
into
push
cmp
lds
ds
xor
ins
call
dec
sbb
push
jle
add
inc
xor
cmp
repz
sar
dec
cmp
mov
lds
dec
test
adc
mov
lea
xchg
enter
mov
sub
in
jb
fbld
scas
xchg
lock
loop
int3
test
lock
(bad)
pop
pop
dec
inc
adc
clc
or
leave
xchg
pop
jmp
test
cmp
sub
daa
and
adc
xor
shl
xor
pop
adc
pop
push
sbb
fistp
leave
sub
pop
xor
jle
loope
mov
inc
loop
xchg
or
jne
out
ins
adc
push
mov
mov
mov
dec
stc
imul
jge
or
mov
scas
ss
inc
rcl
call
test
int
inc
xor
sbb
cmp
inc
dec
add
dec
jge
imul
adc
fsubr
clc
cld
ja
fwait
inc
jg
jge
dec
xor
ret
repz
fdivr
and
shl
je
jo
pusha
or
shr
jmp
sbb
aad
mov
stos
lods
pusha
ret
push
push
jae
xor
add
xchg
pop
ret
test
lods
xchg
scas
sbb
sub
sub
xchg
inc
mov
mov
cmp
leave
mov
or
loope
and
mov
out
mov
inc
pushf
hlt
mov
ret
loop
jb
out
neg
cmp
jl
lods
lahf
sub
or
fwait
int
iret
jns
popa
out
and
fimul
scas
add
adc
(bad)
dec
add
aam
jmp
(bad)
cmp
mov
daa
push
lahf
cmp
cmps
(bad)
fbstp
cmp
div
das
or
add
les
repz
push
call
scas
mov
cmps
or
sbb
mov
mov
cmc
(bad)
xor
adc
iret
cwde
popf
pop
daa
scas
int3
ss
ds
jbe
push
nop
add
sahf
imul
lock
mov
rcl
in
xchg
sti
popa
mov
inc
lahf
xchg
inc
bound
push
in
sub
cmps
ret
pop
aas
imul
out
iret
daa
mov
adc
pop
cmp
ss
push
mov
in
call
leave
push
dec
inc
mov
test
rol
pop
inc
add
push
outs
sti
fmul
inc
or
in
add
mov
or
add
mov
std
sbb
and
pop
sbb
push
stc
aad
xchg
fldcw
sbb
loope
(bad)
pop
and
pop
js
sub
es
push
ds
test
cld
cmp
push
jno
ds
hlt
cmp
or
in
fbld
dec
push
mov
xchg
xor
pop
inc
pop
add
mov
icebp
push
cmp
sub
push
out
push
sub
out
in
imul
ret
pop
dec
jl
outs
xor
mov
(bad)
mov
out
idiv
and
push
int3
in
fcomp
hlt
stos
cli
shr
adc
add
fwait
mov
aaa
movs
jecxz
push
js
inc
xchg
aas
mov
cmps
or
sub
pop
mov
add
in
dec
or
ror
mov
cmp
xor
cmp
hlt
(bad)
out
add
or
rep
sub
(bad)
sub
xchg
cwde
pop
sbb
sub
dec
dec
loope
ins
inc
daa
outs
fadd
(bad)
arpl
lock
outs
adc
push
add
inc
and
push
mov
mov
mov
aad
sub
xchg
jp
fs
xchg
cmp
mov
mov
sti
mov
inc
int
mov
cmp
push
fisttp
sub
mov
xor
jne
xchg
in
mov
sar
fsub
shl
dec
jae
sbb
fimul
add
cld
loop
fisub
sub
xlat
cmp
js
ret
aad
sbb
inc
sti
cmp
dec
or
cmc
mov
jl
xchg
out
fcmovnbe
lock
cli
jne
sub
test
adc
int
mov
(bad)
pop
xchg
dec
test
or
xchg
arpl
aad
push
aad
(bad)
xchg
inc
nop
sub
add
call
or
pop
fadd
add
scas
inc
je
mov
jp
mov
xor
xor
mov
stos
push
sbb
mov
push
and
(bad)
hlt
retf
pushf
into
xchg
das
and
xchg
sbb
retf
les
mov
dec
hlt
dec
mov
xchg
(bad)
dec
jbe
mov
(bad)
sbb
stc
pushf
(bad)
push
fcomp
and
jge
xchg
push
push
xchg
out
or
add
adc
jo
inc
rcr
fisub
push
out
aam
inc
jmp
sub
dec
pushf
push
mov
cmp
mov
jo
out
out
aaa
out
adc
clc
sub
outs
sbb
or
add
mov
loop
jp
imul
aad
mov
mov
sub
sbb
push
rcr
out
push
adc
xchg
test
pop
jge
jb
test
pop
rcl
(bad)
sbb
adc
and
push
mov
and
repnz
test
sbb
xchg
sbb
cs
mov
ja
scas
dec
pop
nop
mov
inc
cmps
fs
cwde
push
repnz
lds
push
push
xor
ds
pop
call
pop
xor
fnstsw
jbe
ds
cdq
inc
add
cmp
adc
jp
retf
push
push
xor
inc
mov
ins
xor
out
mov
fnstenv
or
mov
and
int
mov
jnp
sub
nop
retf
outs
lods
fist
mov
push
xor
push
pop
int
or
xchg
xor
jnp
sbb
adc
(bad)
std
stos
aas
xor
mov
arpl
jo
adc
loopne
ror
ins
scas
jbe
int
int3
xor
aas
push
jbe
stos
mov
(bad)
test
add
cmps
aad
test
push
sub
and
inc
mov
jg
or
(bad)
jmp
scas
out
mov
dec
adc
jo
cmp
sub
inc
push
add
sub
adc
stos
stc
gs
inc
mov
xor
xor
jmp
and
jmp
pop
cdq
jne
xchg
push
ret
mov
mov
ds
repz
out
add
or
jae
daa
sar
pop
mov
lock
or
mov
shr
push
push
imul
in
hlt
cli
ins
pop
pop
js
(bad)
lods
dec
xchg
xor
(bad)
int
sti
jb
cdq
cmc
idiv
xchg
daa
push
cwde
and
fmulp
test
jne
cmp
std
scas
cwde
xlat
cmp
add
imul
mov
xor
mov
adc
ja
mov
outs
inc
push
cmps
call
fistp
fdivr
fisub
bound
shl
push
cmp
mov
in
fwait
mov
rcl
jmp
imul
sub
push
es
lock
int
xor
ret
mov
gs
mov
push
pop
call
std
ret
pop
sub
lock
sub
mov
test
and
(bad)
sbb
inc
inc
sbb
stos
xor
xor
popf
xchg
xor
sahf
push
mov
int
cmps
leave
cld
lahf
cs
int3
add
loopne
pop
rcr
sbb
dec
test
xchg
mov
push
fisttp
repnz
mov
sti
test
int3
sub
pop
inc
sbb
lock
push
inc
jg
ror
fs
mov
xchg
push
xchg
in
hlt
lea
out
(bad)
pop
and
jp
ja
lods
fcomp
inc
sti
or
out
test
fs
and
xor
pop
cmp
mov
gs
pop
xor
mov
mov
add
scas
in
test
sbb
dec
xchg
pop
pop
mov
or
jge
(bad)
les
jg
mov
inc
shl
dec
cmps
dec
sub
jp
mov
hlt
outs
ins
xor
ins
add
pop
out
jl
or
rcl
cs
aam
js
mov
pop
mov
imul
popa
repnz
(bad)
add
loopne
adc
(bad)
xor
mov
popf
cmps
push
mov
lahf
dec
push
xlat
aas
lods
xchg
ret
stos
mov
add
int3
je
dec
mov
je
repnz
push
retf
icebp
mov
or
xor
mov
imul
push
arpl
in
xchg
add
mov
inc
out
jp
outs
push
jg
mov
jno
jmp
data16
sbb
rcr
cli
stos
sbb
ins
test
push
sub
in
mov
push
in
aas
cwde
cmp
jecxz
jae
jecxz
pop
pop
jl
sti
pop
mov
daa
arpl
lods
jmp
in
inc
xor
inc
(bad)
imul
mov
and
dec
nop
add
mov
and
dec
test
add
dec
mov
idiv
out
xchg
ss
fistp
inc
adc
lods
add
dec
sbb
add
mov
mov
cmp
mov
je
mov
and
test
loope
sub
push
push
push
int3
lahf
fisttp
cmp
dec
test
(bad)
mov
cs
leave
xor
add
repnz
push
ins
shl
arpl
xor
in
mov
es
aam
ja
popf
pop
(bad)
inc
or
pop
cmp
jae
sbb
mov
shl
sbb
adc
mov
push
mov
clc
jne
mov
sub
cli
xor
pusha
push
lahf
shr
inc
int3
cli
aas
(bad)
lds
imul
lods
add
scas
cmc
xchg
pusha
movs
loope
loopne
les
cmp
pop
hlt
div
mov
push
scas
pop
mov
cmp
mov
out
pop
dec
cmp
cmp
adc
inc
aas
daa
out
call
push
scas
(bad)
arpl
adc
in
repz
(bad)
adc
movaps
repz
lods
sbb
adc
mov
dec
daa
or
outs
and
dec
stc
(bad)
sti
ror
push
xchg
aad
sahf
adc
ins
mov
cmps
ds
ss
or
and
adc
loope
movs
aas
push
push
jge
(bad)
cld
sahf
mov
dec
outs
rep
daa
mov
fs
rcr
add
jns
mov
shr
out
xlat
std
mov
retf
dec
pop
data16
lds
xchg
int
(bad)
call
mov
movs
and
mov
cmp
inc
lods
int3
add
mov
xor
push
mov
ror
nop
mov
leave
out
push
sbb
mov
or
mov
mov
stos
aam
rol
popa
add
test
cmps
rcr
xchg
or
test
pop
sub
in
xor
cmp
lock
xchg
iret
inc
aas
adc
fild
movs
xor
test
mov
sub
mov
sub
ins
mov
add
lods
lods
lea
clc
into
aas
xchg
pop
xchg
pop
in
into
jae
jbe
jno
icebp
add
mov
and
mov
and
mov
imul
mov
fild
sti
int
call
jmp
hlt
cli
out
cmp
leave
or
pop
and
add
sub
in
stc
add
pop
inc
jl
fld
lahf
add
loop
aaa
cmp
int
jns
xor
mov
aad
dec
cli
sub
cmc
mov
mov
mov
jl
add
test
xchg
(bad)
mov
repnz
jl
xchg
leave
mov
lea
inc
push
stc
mov
dec
not
dec
daa
daa
call
inc
test
daa
fstp
ss
xor
test
bound
icebp
jno
call
int
(bad)
out
xor
scas
lock
data16
cmp
out
push
test
and
dec
icebp
sbb
push
dec
cmp
sahf
xor
mov
xor
jo
inc
pop
fistp
aad
leave
gs
and
and
in
xchg
std
or
stos
clc
das
aaa
mov
out
stc
or
loop
fnstcw
xor
call
int3
fild
add
fst
pusha
pop
fld
imul
fild
push
add
mov
or
ds
out
cmps
out
xchg
mov
pop
pusha
dec
fs
nop
lea
push
cmc
sbb
fisttp
xor
ret
dec
push
int
es
mov
mov
add
or
or
jmp
add
and
int
test
xor
pop
sbb
jne
fild
sbb
push
pop
fwait
cmp
mov
sub
mov
or
rcl
aas
sub
lods
sub
sub
xchg
sub
je
xchg
pop
outs
test
xor
sub
push
pop
mov
xchg
xor
icebp
cld
aad
call
jmp
xor
push
out
int3
out
std
xor
sbb
ja
movs
sahf
cwde
or
int
mov
push
mov
retf
lods
xchg
ds
mov
(bad)
mov
or
pop
fild
or
xor
xor
dec
sahf
pop
jl
retf
jmp
and
or
lock
mov
jns
popa
call
cmp
jle
jl
adc
outs
and
sbb
pop
dec
mov
outs
adc
adc
cli
and
les
cwde
jb
loope
fild
pop
mov
arpl
fs
sbb
mov
or
cmp
mov
mov
mov
push
ins
rcr
dec
mov
loope
cmc
xor
inc
inc
loop
pusha
loope
inc
add
fbld
outs
or
and
and
aaa
jmp
and
xor
adc
jmp
outs
jmp
mov
test
dec
cmc
sti
push
or
cmp
fstp
pop
ret
mov
dec
test
je
mov
mov
or
mov
arpl
(bad)
cwde
fadd
inc
push
xchg
(bad)
bound
retf
retf
fcom
sbb
or
pop
sub
adc
jecxz
in
cs
(bad)
cli
and
nop
sti
inc
add
xor
ds
add
sbb
(bad)
mov
mov
mov
sbb
stos
cs
call
(bad)
loop
and
sbb
lods
jnp
xchg
ins
test
pushf
rcr
lods
test
jno
xchg
mov
sub
push
add
dec
mov
xor
shl
adc
xchg
outs
and
popf
push
clc
in
out
xor
ins
lahf
lds
mov
icebp
repz
adc
xchg
inc
cmp
sub
ss
lahf
lahf
(bad)
sbb
xchg
adc
cs
stc
js
lods
pop
lds
pop
sub
les
fnsave
push
les
mov
sub
pop
inc
(bad)
in
in
in
dec
inc
test
jecxz
loopne
(bad)
neg
mov
push
pop
(bad)
xor
sbb
out
(bad)
or
mov
retf
push
mov
aad
outs
bound
push
cmp
push
and
mov
adc
(bad)
push
in
xor
cmp
or
mov
es
cmp
sub
loopne
or
inc
mov
mov
in
pop
shl
push
test
cli
jno
scas
sahf
xchg
rcr
rol
push
xlat
addr16
fisttp
dec
adc
imul
jae
cmp
inc
sbb
ins
cmp
sub
(bad)
movs
aaa
(bad)
repnz
in
nop
xchg
cmp
cli
(bad)
jmp
(bad)
pop
mov
pushf
mov
push
fiadd
pop
and
test
mov
mov
xor
add
jo
ror
xchg
jns
pop
push
vorps
hlt
(bad)
movs
cmp
popf
add
in
fcomip
xor
sub
psubsb
or
push
cmp
and
mov
adc
and
sub
dec
add
inc
mov
xor
dec
pop
sbb
sahf
and
sbb
fcomp
mov
into
sub
pusha
pop
pop
push
cmps
clc
jmp
jecxz
sub
and
stc
mov
sub
stc
outs
popa
ins
dec
add
jle
ret
and
lahf
pop
mov
fidivr
add
xchg
addr16
push
loop
dec
fidivr
retf
xchg
loope
call
mov
mov
bound
adc
scas
movs
push
in
loopne
dec
ja
sub
inc
adc
cmp
shl
pusha
jbe
xchg
mov
mov
icebp
mov
pushf
fsubr
stc
or
test
test
mov
pop
ret
pop
fisub
sub
nop
mov
jae
xchg
cmp
xor
sub
add
pushf
mov
cmp
(bad)
leave
adc
call
mov
je
fld
adc
xor
shr
into
xchg
sub
xchg
mov
jge
jae
scas
push
addr16
mov
call
xchg
pop
push
ror
aad
(bad)
ffree
dec
ins
int3
imul
push
loopne
nop
pop
sahf
dec
jle
jno
push
clc
rcr
mov
lahf
jo
in
jb
jp
jp
test
lds
outs
arpl
int
xchg
es
xchg
xor
pusha
call
and
aas
push
mov
cmc
xor
aaa
ret
push
xor
nop
ins
out
sub
push
lods
out
outs
(bad)
in
test
xchg
popa
push
bound
into
xchg
clc
push
int
test
outs
mov
xchg
(bad)
nop
mov
jp
shl
cwde
icebp
test
push
fidivr
std
into
jmp
mov
inc
dec
add
sbb
jmp
cmc
call
dec
loope
and
adc
jne
dec
pop
xchg
out
push
test
pop
mov
call
or
mov
icebp
fcomp
rcl
(bad)
jp
cdq
out
and
or
sub
jno
sbb
mov
loop
xchg
sbb
mov
mov
and
ficomp
test
fadd
mov
jmp
add
js
cdq
stos
jnp
out
lahf
and
stos
(bad)
jmp
mov
ret
cmp
xchg
xor
mov
repnz
lahf
cli
mov
pop
add
sbb
fcom
cmp
jp
jl
xor
scas
aaa
cmp
cmp
mov
dec
aaa
dec
push
rcr
into
(bad)
iret
ss
dec
sub
fisttp
mov
call
stc
or
sub
add
fld
mov
add
test
cbw
mov
mov
xchg
outs
push
fsubr
dec
iret
pop
push
(bad)
mov
loope
push
fld
jg
stos
int3
pop
or
sbb
inc
out
inc
cmp
cmp
mov
in
neg
ja
mov
(bad)
aad
xor
push
mov
xor
bound
inc
cwde
jg
test
cli
addr16
arpl
jae
(bad)
push
jo
pop
aaa
pop
push
daa
cs
xchg
loop
add
shl
inc
mov
mov
nop
mov
add
fmul
mov
mov
mov
retf
lods
inc
push
repz
adc
sbb
add
inc
call
test
scas
(bad)
(bad)
xchg
popa
rcl
call
sti
scas
in
and
scas
shl
push
lahf
dec
adc
inc
add
int
out
xchg
dec
mov
imul
sbb
xor
je
sbb
daa
cwde
sbb
into
sub
adc
call
iret
test
lods
hlt
test
cmp
out
faddp
mov
rcl
outs
mov
push
pop
retf
cwde
aaa
and
jo
mov
daa
iret
jne
ins
(bad)
std
pusha
add
(bad)
mov
jmp
xchg
inc
je
sbb
or
push
push
and
cmp
jge
and
pop
test
(bad)
stos
stos
dec
mov
(bad)
mov
xchg
mov
xchg
adc
jmp
push
add
add
adc
inc
sar
repnz
fidiv
sbb
mov
inc
jo
push
jge
leave
out
xor
shr
inc
dec
pop
or
push
xlat
dec
push
mov
dec
inc
mov
scas
popa
ds
js
ins
popf
xor
and
sbb
and
in
(bad)
rol
and
aam
inc
push
sbb
(bad)
xor
xlat
inc
out
sar
pop
in
in
fcomp
xchg
pop
fdivr
sbb
adc
or
push
adc
or
push
das
pusha
stos
int
repnz
mov
inc
fcomi
xchg
aaa
lods
cmp
mov
dec
into
xchg
cmp
test
and
push
pushf
js
movs
push
cmp
dec
inc
add
push
add
lds
aaa
shr
jecxz
ins
repz
pushf
mov
das
mov
test
mov
loopne
jne
mov
mov
jnp
scas
call
in
call
out
mov
lahf
sbb
add
cmp
pop
mov
push
xchg
sbb
jbe
jne
sbb
push
pop
scas
(bad)
(bad)
arpl
test
push
das
mov
mov
ss
shl
push
xchg
mov
sbb
pushf
xlat
and
mov
sti
(bad)
pusha
xchg
test
jae
fwait
mov
add
and
inc
jge
inc
mov
scas
jns
inc
fst
pop
es
shl
aaa
add
lods
and
xchg
push
sbb
ins
jmp
mov
imul
mov
xlat
pop
push
je
mov
je
inc
sbb
sub
lods
pop
fcmovbe
add
push
fsubr
mov
mov
(bad)
out
call
aad
mov
rol
jle
out
je
push
pop
xchg
jp
lods
adc
pushf
or
jl
mov
mov
push
lods
pop
retf
loop
push
adc
cwde
retf
add
cmps
pop
and
jle
repz
mul
and
cmps
mov
sbb
fld
sub
xor
or
cmp
es
jno
cmp
pop
jge
mov
add
test
(bad)
int3
scas
or
bound
jmp
aad
cdq
call
mov
push
jnp
jmp
imul
sub
lds
xor
retf
mov
dec
nop
dec
add
mov
aas
(bad)
bound
inc
icebp
sub
dec
or
rcl
sub
stc
or
xchg
push
fdivr
xchg
cmp
(bad)
dec
je
(bad)
in
cmc
dec
mov
xchg
push
inc
mov
push
inc
cwde
or
cmp
repnz
fiadd
jnp
mov
pushf
mov
out
xor
xchg
adc
pop
pop
ret
xchg
sbb
fstp
fcom
js
bound
mov
lock
mov
and
inc
(bad)
cwde
xchg
leave
sub
jns
push
(bad)
adc
fild
mov
push
xchg
cmp
cmp
stos
jmp
addr16
xchg
and
mov
lahf
ficomp
in
pop
dec
cmp
sub
stos
cmc
mov
jb
add
jno
icebp
scas
jne
ret
aas
mov
ret
mov
jle
xor
mov
loope
add
(bad)
fadd
outs
(bad)
(bad)
jmp
jnp
(bad)
cmp
in
jae
dec
pop
vmovd
retf
lock
arpl
mov
xchg
stc
xchg
dec
mov
inc
adc
rep
add
fcmovu
test
pop
out
pop
jb
aas
sahf
xchg
out
inc
js
cdq
push
(bad)
unpckhps
and
pop
test
or
pop
and
in
fistp
sub
push
addr16
sbb
lods
sub
jbe
xchg
daa
cld
sub
and
daa
fnstcw
leave
iret
jecxz
or
int3
mov
out
push
out
shl
dec
jo
sahf
dec
cmp
xchg
(bad)
mov
outs
fs
dec
ret
test
xor
jns
pop
inc
jg
mov
test
mov
sti
dec
shl
xchg
cwde
in
inc
sub
lock
push
ja
icebp
mov
add
std
jae
movs
xchg
dec
mov
mov
loope
xchg
push
movs
xchg
dec
add
sbb
and
loop
xor
setge
movs
sub
dec
loopne
mov
mov
or
jmp
sub
arpl
or
shr
dec
enter
cli
mov
dec
inc
mov
xchg
bound
add
mov
or
dec
sub
ret
mov
push
test
jne
xchg
xchg
push
sbb
int
mov
pop
fs
loopne
dec
adc
iret
pop
inc
xor
ror
fisubr
and
sub
dec
fimul
pusha
sub
push
aam
aas
cld
and
mov
sub
jo
ds
daa
mov
iret
test
retf
adc
cmp
pop
adc
pop
dec
aam
loopne
pushf
or
jns
xchg
stc
frstor
xchg
pop
fcomp
div
inc
mov
loopne
cmps
sub
rcr
mov
dec
div
push
aas
in
loop
fistp
fistp
sub
jnp
jnp
xor
hlt
cmp
call
fild
ss
(bad)
aam
div
mov
or
mov
pop
push
sub
cdq
in
dec
push
add
cmp
repnz
ins
lea
mov
addr16
fadd
shl
loope
inc
inc
xchg
iret
loope
enter
dec
cdq
psubb
aam
push
jp
or
sbb
cmp
out
dec
cmp
imul
xor
out
xchg
xor
test
and
sahf
arpl
mov
mov
mov
in
int3
sahf
call
add
loope
(bad)
in
movs
add
pop
cld
jp
sbb
test
push
pop
dec
int
mov
push
mov
hlt
neg
fwait
rol
test
push
cmp
xlat
mov
daa
jnp
ja
(bad)
cmp
add
push
add
or
cbw
push
dec
outs
std
test
(bad)
push
out
mov
ja
scas
adc
cmp
cmp
cwde
cwde
xchg
sbb
pop
mov
push
test
cmps
cmp
push
inc
cmp
out
sahf
(bad)
shl
mov
sub
rcr
mov
aas
xchg
addr16
pop
push
imul
int3
pusha
jno
mov
mov
pusha
jmp
xor
cmc
push
retf
adc
das
imul
jle
or
mov
sub
push
sbb
mov
cmp
dec
adc
jbe
(bad)
clc
mov
cmps
lods
repnz
add
ror
mov
xchg
test
inc
mov
inc
fild
dec
div
dec
test
push
test
or
push
ret
mov
sub
aaa
leave
xor
repnz
inc
loopne
jo
stos
imul
mov
jne
mov
cmp
mov
cdq
ss
and
inc
das
leave
lds
in
pop
into
jno
retf
jne
shl
jmp
pushf
mov
xchg
xchg
add
push
mov
gs
and
push
and
std
icebp
in
jmp
(bad)
ret
dec
(bad)
retf
pop
sahf
mov
out
and
jmp
aad
fldcw
shl
add
repnz
xor
fbld
jbe
int3
test
mov
fucomp
test
jns
dec
rol
inc
cwde
es
push
dec
outs
mov
(bad)
scas
jp
and
int3
adc
sub
mov
iret
es
scas
fcom
pop
jge
add
and
or
scas
sbb
push
mov
push
test
push
cmps
sahf
jg
sub
int
xchg
iret
ds
js
(bad)
xor
test
not
add
shl
cli
ss
daa
jbe
aam
or
shr
imul
jno
adc
rcr
aas
scas
xchg
(bad)
xchg
sub
adc
pop
inc
pusha
mov
jle
sub
mov
add
rcr
scas
xor
daa
mov
mov
ret
jg
loopne
mov
push
inc
pop
jmp
lods
hlt
cdq
add
ficomp
(bad)
pusha
int
fmul
in
jge
jle
stos
push
ds
dec
popf
adc
dec
rcl
inc
aad
loope
mov
imul
fcmovne
pop
sbb
call
mov
pop
test
jp
cmp
cld
add
xchg
jae
add
or
jmp
mov
out
mov
cs
push
aam
dec
imul
lods
pop
dec
in
jmp
outs
pushf
cmps
xchg
iret
pop
or
xchg
inc
jecxz
pop
jecxz
pop
les
jne
aam
mov
xchg
cs
fwait
or
jnp
and
rcl
jle
mov
push
ss
aas
mov
(bad)
jae
(bad)
call
cld
out
cmp
stos
std
xchg
test
cmp
or
push
jbe
sbb
leave
sub
mov
icebp
out
add
sub
sub
call
std
test
add
shl
retf
mov
js
stos
mov
sbb
mov
mov
fwait
or
inc
or
pop
retf
aam
cmp
pop
dec
retf
xchg
dec
lock
icebp
inc
mov
pushf
sbb
inc
popa
mov
aam
cli
fucomp
outs
sub
jno
or
push
imul
(bad)
xchg
lea
daa
stc
adc
fsin
mov
popf
pop
(bad)
std
add
in
into
ror
pusha
mov
out
mov
mov
mov
aad
or
(bad)
jns
and
or
dec
adc
ja
push
inc
inc
sub
out
mov
aaa
rcl
lock
test
sub
jp
dec
std
inc
into
bsf
ss
inc
dec
cmp
mov
(bad)
xor
push
dec
shrd
pop
(bad)
adc
jl
lahf
std
int3
sub
inc
sbb
push
add
add
in
out
push
xlat
ds
fisubr
jae
fwait
movs
add
add
clc
dec
enter
inc
ret
sar
not
cwde
pop
add
xchg
into
cmp
out
sub
or
ret
sub
pop
cmp
ds
fs
sar
imul
xchg
mov
hlt
fisttp
mov
sub
gs
loop
scas
cmp
mov
rol
daa
mov
imul
ret
mov
std
and
ret
test
or
call
movs
ss
(bad)
fwait
aaa
add
push
fdiv
and
adc
adc
mov
push
jecxz
xchg
loope
inc
push
lock
cmps
mov
xor
stos
fistp
mov
mov
xor
jb
fldcw
pop
mov
mov
mov
pop
addr16
bound
push
add
pop
jns
jbe
add
cld
cmp
jno
adc
push
data16
pop
xor
mov
jg
dec
pop
jg
mov
pop
sahf
std
(bad)
js
cwde
mov
cli
or
cli
mov
xchg
cld
jg
push
ror
out
or
adc
mov
and
cmp
mov
adc
push
lahf
pop
ins
icebp
lea
(bad)
cdq
int
jo
cmps
jnp
add
and
adc
movs
rcl
mov
add
stos
mov
jmp
dec
movs
fstp
(bad)
vpaddq
in
sar
xlat
sbb
test
lods
mov
jp
mov
mov
mov
in
int
cli
inc
add
ficomp
push
cmps
sbb
fldenv
jle
int
ror
fucom
aaa
mul
(bad)
adc
cli
cli
sub
mov
aaa
popa
enter
xchg
jecxz
fmul
adc
sub
jo
jecxz
out
sbb
call
loope
or
shr
cmp
and
sub
jno
mov
(bad)
jecxz
lds
push
ret
outs
jp
and
xor
push
sbb
mov
js
or
js
repnz
js
mov
dec
addr16
and
and
fnsave
or
gs
xor
add
dec
jmp
push
mov
cli
xchg
in
enter
cmp
sbb
das
pushf
loope
inc
fidiv
retf
retf
aad
inc
dec
test
mov
sti
ficomp
push
xchg
retf
cmp
jno
dec
mov
repnz
and
loop
loopne
adc
cmp
(bad)
in
dec
sub
cmp
ja
fistp
lds
fbld
lods
imul
sub
sub
outs
stc
out
nop
push
or
aam
mov
(bad)
into
(bad)
jb
lock
out
popf
(bad)
xor
jp
or
xchg
sti
aaa
pop
cld
addr16
add
mov
jmp
pop
cmps
cmps
loop
jle
jno
push
adc
loope
jno
pop
jns
push
dec
iret
fwait
add
xchg
pop
aam
sahf
gs
pop
mov
stos
lahf
pop
cmp
add
xchg
dec
(bad)
mov
ret
gs
jp
jmp
pop
in
nop
mov
in
loopne
cwde
sbb
popa
xor
imul
push
ror
pushf
arpl
je
gs
cmp
das
adc
mov
cmp
add
adc
sbb
loopne
aas
ja
in
sbb
lock
inc
sub
xlat
stos
ja
fadd
cmps
jg
mov
jle
in
shl
adc
or
cmp
mov
pop
(bad)
movs
jmp
cli
xchg
cld
scas
jb
cmps
fsub
fs
sahf
cmp
into
pop
lods
clc
div
cmp
popa
stos
push
enter
outs
mov
sbb
pop
cwde
jecxz
pusha
xlat
pop
pop
sbb
movs
xor
push
push
mov
jp
adc
std
jns
scas
shl
loope
enter
shl
inc
cmp
sub
and
inc
sar
clc
jmp
mov
aaa
aam
xchg
cmp
aad
movs
addr16
je
mov
shl
sub
imul
mov
lock
stos
mov
mov
mov
popf
add
jnp
jp
adc
mov
out
jae
push
dec
(bad)
sbb
inc
int3
call
addr16
mov
mov
scas
lods
mov
cmp
sub
inc
dec
fcmove
inc
adc
daa
ss
ret
push
mov
stc
or
mov
push
lahf
add
(bad)
fldcw
fadd
mov
mov
arpl
add
nop
out
mov
inc
stc
dec
arpl
and
sahf
sub
ror
mov
push
inc
std
and
fld
inc
xchg
cmp
add
ins
pop
cmp
inc
fidiv
inc
dec
mov
bound
jl
lods
xor
scas
in
jmp
lahf
mov
test
push
sub
inc
stc
lea
outs
ins
cmp
inc
ret
pushf
retf
(bad)
jne
pusha
pop
test
xchg
out
fcomp
ror
(bad)
cmp
test
inc
pop
or
outs
cmp
jp
sbb
(bad)
das
jmp
push
sub
jb
xor
sbb
sub
addr16
push
shr
push
mov
jns
imul
push
inc
xor
test
retf
ds
stc
ja
jnp
ds
dec
mov
push
cmp
sub
out
adc
sbb
pop
pop
aad
(bad)
cmps
cdq
pop
pop
stos
loope
mov
out
push
push
xchg
pop
mov
arpl
push
mov
ror
push
and
stos
(bad)
pop
xchg
into
jecxz
mov
loope
shl
call
mov
std
jns
pop
ins
push
repnz
aad
mov
xchg
adc
dec
cmps
sbb
sub
das
retf
sub
clc
mov
stos
pop
push
push
xor
cmp
inc
sub
ins
imul
xor
cmp
cli
sbb
cmps
mov
mov
repz
into
lds
and
xchg
mov
in
stos
out
in
sahf
mov
inc
xchg
mov
mov
imul
shr
mov
fcom
mov
retf
not
cmp
popf
aam
adc
mov
lds
mov
sub
lock
mov
sub
outs
adc
inc
mov
jno
mov
push
in
fstp
cdq
fild
nop
fdivr
mov
test
jecxz
shl
xor
hlt
int3
xor
push
cmp
push
add
cmp
sub
test
cdq
into
sti
cmp
mov
jns
and
xor
popf
gs
icebp
adc
stos
nop
pushf
in
(bad)
cdq
adc
pop
stos
sahf
jg
push
mov
cmc
addr16
das
ss
rol
xor
out
cmp
or
ror
and
out
mov
cmp
xchg
push
sub
sub
jno
pop
sbb
loopne
jg
ins
mov
or
in
outs
hlt
fbstp
push
add
mov
popa
scas
add
inc
jecxz
xchg
xor
(bad)
jecxz
mov
aaa
out
jnp
push
rcl
scas
bound
fimul
aam
add
xor
xchg
mov
add
xchg
popa
out
push
(bad)
push
outs
das
jnp
bound
or
add
mov
xchg
fcmovnbe
jne
cmp
arpl
ja
xchg
in
shr
jmp
mov
ret
ins
jo
mov
stc
push
dec
pop
jns
or
jae
lock
fidiv
retf
mov
mov
jg
push
fucomp
icebp
mov
out
jo
das
cmp
add
adc
pop
mov
out
xchg
jns
and
and
cmp
mov
sub
loopne
mov
mov
adc
test
adc
jle
call
mov
jb
or
xor
sub
pop
fild
xchg
out
and
fistp
jp
add
adc
imul
dec
aas
sub
movs
sbb
or
bound
jl
imul
idiv
daa
dec
and
out
xlat
add
out
adc
pop
call
imul
(bad)
ret
mov
add
lock
hlt
cmp
fidivr
lock
sbb
das
popf
add
jo
and
bound
or
push
fld
xchg
jl
pop
pop
sbb
xchg
push
xchg
push
cmps
jns
test
jmp
repnz
jns
xchg
fwait
mov
cmps
sbb
xor
push
cmp
or
adc
push
in
jecxz
(bad)
call
fsubrp
xchg
iret
(bad)
loop
test
jp
stc
test
std
lahf
js
fdiv
jle
cmc
shl
imul
fcom
inc
popa
adc
adc
stos
sahf
test
(bad)
cmp
ret
sub
cmps
lods
cmp
sub
push
jl
mov
mov
adc
inc
push
stc
scas
xor
dec
test
pop
loop
inc
movs
add
imul
inc
xor
pusha
mov
aaa
cmp
fdivr
push
ja
jmp
cmp
stos
js
or
ins
mov
sbb
jnp
test
in
scas
std
iret
movs
mov
sub
pusha
(bad)
addr16
sub
rol
sbb
ret
pop
test
fwait
jecxz
sub
shl
jo
pop
les
repnz
or
pop
xor
add
mov
lea
xor
jmp
imul
mov
hlt
and
hlt
mov
inc
hlt
fld
ins
cli
ret
arpl
pop
or
mov
stc
sbb
out
jmp
stos
cmp
std
imul
movs
jno
jns
aaa
adc
ror
retf
outs
sbb
inc
push
cld
push
test
push
mov
sub
arpl
lods
sahf
mov
add
sahf
daa
dec
aas
test
sub
xor
rol
jb
xor
cmps
outs
loopne
das
sbb
in
(bad)
dec
jl
or
sub
and
int3
ret
inc
sub
test
cmps
cmp
dec
sub
cmp
mov
fisubr
ret
push
push
imul
clc
fcomp
sahf
movs
scas
xchg
imul
sub
push
add
popa
cli
xor
jmp
mov
shl
jle
loope
pop
pop
xor
adc
xchg
mov
repz
xchg
adc
movaps
and
adc
ret
ret
hlt
lods
rcr
mov
xchg
ret
loopne
out
sub
push
xchg
popf
sar
fsubr
sub
jecxz
movq
xlat
loop
fst
mov
in
loope
mov
and
gs
nop
int
fldenv
call
jb
outs
fcom
cmp
call
sbb
ja
gs
push
and
or
lea
cmp
fiadd
jmp
lea
push
push
js
sub
jne
jae
xchg
jne
dec
(bad)
hlt
pop
lahf
leave
jle
sub
aas
pop
mov
cmp
repnz
(bad)
mov
ins
sbb
mov
cmp
mov
test
stos
pop
mov
dec
das
or
add
dec
jns
adc
sti
add
ror
in
push
mov
inc
daa
ja
and
and
cmps
xchg
lahf
or
lea
shl
sub
call
dec
(bad)
cmps
add
jne
dec
push
push
fisttp
les
xor
mov
mov
inc
xchg
jl
pop
lods
(bad)
sahf
xchg
pmullw
mov
or
jb
(bad)
ret
aam
mov
pusha
xor
inc
sub
in
dec
sub
ret
dec
xchg
pop
jp
cmp
or
aam
mov
sub
into
mov
jmp
dec
push
data16
adc
call
loopne
mov
aaa
or
mov
mov
jp
out
and
add
dec
mov
and
nop
or
in
mov
into
add
pop
ins
mov
lds
jmp
or
or
xchg
mov
cmp
jo
hlt
xchg
loope
jnp
jmp
xchg
push
scas
mov
jmp
dec
pop
test
cmps
inc
and
fs
sahf
xor
scas
ret
add
nop
jo
popf
(bad)
cwde
pop
xchg
xor
test
mov
adc
fbld
test
and
pop
mov
jmp
mov
pop
jns
xchg
pop
shl
fwait
daa
jg
ror
fidiv
cmovo
mov
mov
retf
jg
outs
mov
out
fild
xchg
cmps
or
and
add
mov
leave
sbb
test
movs
fs
(bad)
jge
repnz
cmps
mov
retf
push
imul
or
lods
inc
int3
ins
adc
xor
dec
mov
dec
repz
inc
in
mov
push
mov
data16
lods
mov
stc
add
mov
loope
movs
in
fldlg2
es
outs
ins
test
or
shr
mov
rcl
push
call
pop
gs
sub
mov
inc
push
dec
dec
dec
mov
mov
es
ja
sub
ins
in
or
iret
xor
arpl
add
sar
mov
arpl
jle
dec
pop
pop
fs
adc
stos
mov
cld
and
add
lahf
mov
lahf
movs
(bad)
in
inc
adc
loop
push
jmp
ret
(bad)
fs
jnp
retf
sbb
test
pop
pusha
mov
xchg
je
inc
mov
and
sbb
call
adc
xchg
xchg
movs
mov
sub
cmp
pusha
add
push
sbb
mov
jnp
shr
cmps
xor
ficom
fstp
lahf
daa
xor
mov
pushf
(bad)
mov
xchg
movs
mov
xor
jg
cmp
push
cld
or
adc
mov
mov
mov
jne
mov
lahf
mov
inc
sti
lock
jo
sahf
push
push
xor
sbb
push
mov
cmc
in
std
test
pop
imul
mov
fwait
xor
xchg
sti
int3
xchg
lea
(bad)
lock
dec
call
fwait
jmp
mov
xchg
dec
pop
xor
xchg
push
mov
shl
xchg
jns
jmp
cmp
sahf
arpl
inc
or
es
inc
xchg
push
out
and
jmp
cmp
lahf
bswap
mov
cmps
mov
sbb
jl
enter
je
dec
push
push
je
repz
inc
in
fwait
sub
sbb
ror
xchg
(bad)
push
add
retf
xor
mov
sbb
mov
xor
inc
xchg
mov
xchg
mov
(bad)
jns
push
ret
mov
lahf
cwde
mov
dec
gs
mov
jnp
scas
sub
ins
shr
int3
shl
out
jb
or
inc
mov
mov
stos
(bad)
es
test
cmp
les
mov
aam
mov
cmps
js
js
test
cmp
mov
lods
mov
cs
mov
mov
mov
mov
dec
dec
rcr
xlat
test
mov
into
sub
out
inc
inc
imul
enter
jp
xchg
mov
or
mov
pop
jmp
loop
loope
sub
imul
retf
dec
bound
push
pop
or
sbb
clc
repnz
xchg
rcr
jns
inc
into
ror
sahf
adc
addr16
out
movs
xor
outs
xchg
dec
ds
shl
and
ret
and
xchg
and
adc
scas
sub
inc
sbb
inc
sub
and
ins
ins
js
pop
call
(bad)
imul
lods
jbe
cwde
xor
scas
xor
test
pop
out
xchg
aad
ds
add
lods
or
push
imul
sti
mov
inc
inc
sub
ret
and
movs
mov
adc
xchg
scas
sbb
js
inc
out
pop
cs
jno
jmp
retf
leave
(bad)
js
in
neg
das
and
sar
add
cmp
idiv
and
call
gs
xchg
dec
(bad)
cmp
sbb
mov
stos
xor
xor
movs
dec
loope
repz
cmps
lods
push
jnp
push
jbe
push
adc
into
mov
push
repz
dec
add
cmp
xchg
sub
ins
mov
cmc
cmps
mov
pop
stos
not
lea
clc
jmp
fucomip
ret
mov
clc
loopne
leave
fimul
daa
mov
pop
stos
jmp
add
popf
cmp
mov
inc
mov
int
arpl
pusha
aad
inc
sub
add
imul
in
or
sub
clc
idiv
and
xchg
aam
mov
ds
xlat
int3
mov
imul
push
movs
fldcw
mov
cld
and
ja
jb
inc
xchg
push
pop
sbb
lahf
mov
call
je
pop
and
pop
shr
stos
addr16
ss
addr16
ror
xchg
scas
lahf
hlt
or
mov
pop
mov
retf
popa
les
test
mov
push
xchg
ds
hlt
ss
loop
mov
sbb
and
cdq
pop
cwde
jno
cmps
call
dec
jle
movs
pop
mul
pusha
in
mov
push
fadd
inc
sbb
js
xor
retf
mov
inc
fist
cmp
mov
jge
mov
ror
scas
push
(bad)
fisub
out
(bad)
and
imul
fistp
or
out
(bad)
daa
retf
in
lods
fisttp
aaa
stos
loope
data16
test
cmp
das
xchg
jge
sbb
or
mov
sbb
in
std
or
cld
pop
jnp
jg
sbb
pushf
jnp
(bad)
sbb
ja
(bad)
cld
mov
sbb
mov
lock
jl
mov
cmp
mov
or
bound
shl
pop
int
dec
and
test
sahf
adc
or
and
push
sub
test
mov
fsub
sbb
push
in
lods
sbb
out
adc
mov
pop
mov
call
push
cwde
inc
mov
mov
mov
scas
fadd
fs
jecxz
mov
test
iret
xor
inc
sub
xchg
femms
mov
aam
jmp
sub
leave
add
arpl
scas
adc
mul
and
cmp
loope
mov
and
imul
aaa
std
xlat
mov
mov
arpl
pusha
lea
mov
(bad)
pop
popf
pop
pop
call
ret
bound
cmps
inc
mov
inc
cmc
push
cmc
jmp
out
je
scas
add
sbb
xor
ret
es
jle
lods
(bad)
into
xchg
push
and
push
jns
fwait
add
idiv
mov
sub
stos
(bad)
mov
inc
jnp
les
bound
cmp
shl
or
daa
adc
jae
call
dec
arpl
pop
pop
push
xchg
pop
fistp
or
add
add
rol
jge
add
and
pushf
movs
ret
inc
gs
mov
mov
out
rcl
(bad)
jge
push
dec
ds
or
mov
or
outs
mov
jbe
inc
mov
cli
pop
es
ins
mov
jle
mov
mov
lea
xchg
cmps
test
cli
sbb
aad
imul
adc
dec
sbb
mov
sub
shl
add
jno
retf
inc
test
push
xchg
retf
loope
test
ins
jle
pop
sub
jbe
jb
ss
inc
dec
mov
jl
ror
mov
xor
je
arpl
out
movs
aaa
xchg
pop
pop
xor
fcom
jbe
and
adc
adc
test
sbb
sbb
or
cwde
jle
mov
in
fcmovne
hlt
adc
lods
adc
mov
push
pop
inc
cmova
mov
jecxz
(bad)
sbb
mov
stos
add
ret
in
ret
nop
adc
sub
cmps
outs
scas
lea
xchg
xor
mov
dec
mov
and
jnp
mov
mov
add
or
xchg
mov
inc
call
lods
adc
call
loope
fs
ret
or
pop
test
sbb
push
pop
in
cmp
das
inc
cmp
dec
and
push
out
cli
push
sub
sbb
cld
outs
jbe
ror
lock
dec
cmc
imul
repnz
fnstcw
mov
mov
lea
mov
mov
(bad)
mov
outs
arpl
mov
mov
int
push
popf
inc
push
loope
fiadd
xchg
fcomp
not
test
inc
jbe
rcr
js
hlt
push
xchg
xchg
(bad)
ss
and
test
dec
and
mov
push
ins
adc
je
sbb
add
sub
mov
xor
std
mov
aas
cmp
pop
out
jmp
out
in
loopne
inc
xchg
jle
pop
pop
dec
loopne
push
cmps
jno
lods
and
int3
mov
adc
or
cmps
popf
stc
fcomi
(bad)
fst
jl
mov
ds
mov
neg
repnz
sbb
test
mov
pop
leave
inc
xchg
dec
jae
or
and
mov
dec
push
mov
mov
(bad)
mov
rdpmc
mov
imul
xchg
sahf
mov
ins
mov
lock
xor
rcl
xchg
out
movs
xchg
sbb
cli
je
jns
jns
js
dec
mov
dec
repz
in
pop
push
mov
les
push
inc
pop
mov
lods
(bad)
fild
push
and
xlat
mov
ficomp
cli
pop
out
aas
push
sub
xor
and
push
ss
sbb
mov
pop
(bad)
sub
add
mov
sbb
inc
dec
pop
inc
call
xchg
xchg
rcl
cmp
leave
dec
pop
add
or
clc
jae
dec
xlat
add
jmp
mov
enter
out
jnp
fisttp
icebp
ins
sub
add
pop
mov
popa
add
inc
xchg
mov
mov
int3
inc
dec
iret
fcmovbe
imul
pusha
push
pushf
mov
push
push
adc
retf
int
xlat
and
jle
popf
jle
sub
(bad)
les
les
(bad)
cli
jge
cmps
jae
(bad)
jnp
lods
xchg
mov
pop
inc
outs
stos
mov
mov
pop
fild
(bad)
adc
push
mov
mov
mov
stos
popa
out
sbb
es
push
imul
sub
jo
aaa
in
ret
(bad)
rcr
jnp
cmc
jmp
ret
movaps
in
jns
jnp
adc
shr
mov
mov
mov
push
mov
repz
fstp
jo
rcr
je
test
dec
out
pushf
imul
pop
or
pop
and
mov
mov
push
mov
cs
mov
out
adc
add
adc
sub
mov
jmp
inc
mov
mov
into
sub
push
aam
mov
sbb
cmp
push
ds
in
jno
lods
sbb
cmp
fist
and
xchg
push
xor
and
add
push
stos
test
push
loope
popa
xlat
bound
mov
mov
and
or
mov
adc
repz
pop
in
cmc
xchg
mov
mov
mov
test
mov
jg
std
ror
ja
outs
sar
and
fcmovnb
scas
cmps
jbe
or
mul
aad
cwde
ins
or
mov
sub
test
ret
ret
jl
mov
outs
mov
(bad)
test
mov
push
mov
daa
mov
jns
out
test
cmp
add
sbb
stc
fmul
xchg
cdq
xor
icebp
inc
and
sbb
nop
jmp
in
inc
add
add
xchg
mov
fisubr
in
sub
mov
push
scas
mov
mov
outs
jle
mov
cmc
jp
xor
aam
xor
imul
jg
loopne
dec
fistp
aad
add
mov
dec
and
add
retf
ret
mov
and
mov
stos
add
in
or
pusha
or
inc
and
push
jp
out
mov
fs
jns
sbb
xchg
inc
adc
and
mov
mov
jb
xlat
jmp
mov
push
es
(bad)
jbe
aam
mov
xor
jbe
out
add
add
fdivr
adc
cmp
iret
push
hlt
daa
(bad)
repnz
sub
lods
mov
test
dec
jns
lock
push
push
nop
in
push
mov
and
push
cli
add
(bad)
cmp
ret
inc
addr16
add
xchg
sub
xchg
mov
lock
pop
pop
mov
cmp
dec
or
mov
fdivr
(bad)
in
inc
(bad)
pop
lds
outs
xchg
xchg
xchg
lds
jbe
push
xchg
(bad)
sbb
aaa
jmp
ins
pushf
add
hlt
add
retf
mov
cmp
retf
push
or
mov
(bad)
pop
pop
(bad)
or
outs
sub
xchg
loopne
ins
or
cmp
outs
add
inc
mov
popa
stc
sar
xchg
push
out
xchg
out
pop
dec
push
inc
push
movs
jmp
push
and
imul
pop
dec
add
lods
setno
enter
retf
sar
sti
loopne
jl
ret
xchg
push
addr16
sbb
add
loop
daa
or
xchg
xchg
inc
xchg
cmp
sub
push
jno
mov
mov
pop
retf
in
sbb
aaa
test
mov
mov
jp
dec
test
and
retf
mov
popa
(bad)
dec
jae
pushf
clc
push
dec
fdiv
retf
jne
adc
rcr
sub
dec
fucomp
pop
and
adc
mov
cld
mov
xchg
imul
push
in
xlat
push
xor
test
test
xchg
pop
jmp
enter
sub
push
push
mov
data16
xor
push
in
mov
div
mov
lock
fisubr
add
mov
js
and
sub
stc
repnz
and
sbb
nop
xor
into
bound
push
add
add
imul
push
mov
ret
xchg
imul
rol
ret
test
test
out
adc
mov
sar
mov
and
fsubrp
(bad)
ins
repz
leave
jnp
push
fdivr
ss
outs
enter
data16
lds
pop
loope
add
shr
or
std
fdiv
cmps
dec
xor
add
jmp
xor
jmp
pop
mov
cmps
push
in
std
and
(bad)
xchg
xor
scas
popf
cmp
daa
jp
inc
icebp
or
hlt
inc
cwde
push
xchg
lea
sub
nop
xor
sahf
jbe
mov
push
call
mov
or
rol
inc
push
mov
push
mov
js
jg
div
and
mov
mov
mov
cmp
jge
sbb
adc
int3
sbb
and
stos
(bad)
stc
pop
jnp
push
cdq
pop
shr
rcr
inc
and
cld
sahf
sbb
jle
and
dec
add
push
lds
push
inc
mov
aam
sbb
nop
imul
inc
int
push
ins
push
mov
mov
dec
inc
mov
xor
lahf
xchg
out
mov
sub
push
icebp
lahf
movs
cmp
push
mov
sub
hlt
and
arpl
and
idiv
out
and
outs
push
rcr
aad
pop
push
int
movs
xchg
mov
sub
dec
add
push
xchg
pop
mov
popf
xchg
data16
je
cli
fidivr
mov
mov
lods
call
jecxz
xor
jg
mov
jmp
pushf
retf
xchg
jnp
(bad)
bsr
and
mov
stos
sbb
push
jne
in
test
jecxz
cmps
out
fwait
js
mov
aam
pop
xor
dec
sbb
hlt
cs
adc
and
mov
cmp
adc
adc
mov
retf
xchg
xor
stos
sbb
retf
fadd
ds
add
pop
mov
sub
jmp
lock
fdiv
cmp
outs
arpl
jle
mov
push
addr16
cmp
mov
repz
pop
sub
or
scas
pop
mov
sub
in
gs
mov
mov
sbb
pop
mov
push
mov
adc
pushf
fisub
jmp
xchg
test
inc
lock
js
jo
(bad)
pop
or
and
je
ror
ds
fdivp
or
fsubr
scas
add
xchg
xlat
(bad)
sub
add
pusha
leave
mov
mov
inc
sub
jno
not
das
fcom
sub
lods
cwde
js
cmp
push
dec
mov
arpl
fild
and
dec
leave
in
fistp
cmps
cmp
or
pop
sub
clc
das
pop
or
mov
sbb
cmp
inc
retf
lahf
jge
fst
dec
and
push
pusha
into
out
hlt
pushf
cmp
ds
icebp
cmp
popa
not
pop
or
aad
outs
(bad)
out
inc
stc
aad
movs
sti
leave
xchg
shl
sbb
push
cmp
dec
sub
pop
repz
adc
add
mov
movs
jl
or
pop
jae
adc
cmps
jb
pop
scas
cmc
jle
sub
cmp
cmp
stos
popa
cmps
mov
test
loopne
retf
or
ja
ror
jle
adc
daa
fadd
sbb
add
mov
data16
icebp
movs
aam
and
inc
and
mov
add
out
cmp
jno
retf
pop
jg
fbstp
push
add
stos
or
nop
add
push
in
ja
outs
jl
xchg
stos
repnz
lds
fmul
dec
push
test
and
adc
xor
inc
sub
aas
pop
lahf
jae
or
sub
inc
scas
inc
xor
sub
xchg
sbb
pavgb
dec
cmp
ins
add
xor
scas
jl
jno
or
(bad)
xacquire
aad
jl
outs
aas
fild
jg
xchg
jb
stos
adc
xor
mov
enter
je
jmp
scas
popa
inc
dec
stos
js
aam
mov
xchg
mov
call
fld
adc
in
fdivr
movs
mov
pop
(bad)
push
scas
fist
jno
loopne
inc
sub
mov
mov
pop
std
xor
js
sbb
jnp
imul
sub
cmp
jo
inc
not
mov
clc
retf
mov
arpl
xor
dec
pop
inc
xor
dec
jae
cmp
test
jecxz
aad
and
fidivr
cmp
push
imul
and
jge
cmc
add
and
ja
xor
in
mov
cwde
jmp
push
clc
and
xchg
test
pop
pusha
inc
dec
mov
mov
std
gs
(bad)
and
sub
hlt
les
adc
or
dec
mov
test
cmp
mov
retf
mov
push
(bad)
sub
into
cmp
mov
sbb
mov
and
test
jp
xchg
xchg
sub
lods
dec
ja
das
fsubr
jbe
and
push
adc
mov
outs
push
into
cmp
mov
retf
add
popf
addr16
and
jecxz
jecxz
aad
sbb
js
or
fwait
push
(bad)
repnz
mov
sub
dec
jle
ins
in
shl
iret
out
push
push
lock
cmp
sti
(bad)
jp
iret
fcom
loopne
xchg
sub
lea
inc
mov
xchg
mov
ds
arpl
sub
inc
in
adc
xchg
cdq
mov
mov
frstor
sub
stos
fs
or
imul
lods
cs
ror
xchg
jge
jne
sbb
lea
ss
jp
fmul
test
pusha
addr16
xchg
stos
ss
aam
sbb
add
sub
mov
pusha
iret
ins
hlt
dec
leave
xchg
pop
mov
xchg
push
jge
push
ret
mov
dec
jp
mov
cmps
mov
mov
push
in
sub
add
imul
sti
mov
jns
sbb
sahf
shl
lahf
(bad)
div
stc
inc
add
lock
dec
xor
jge
(bad)
call
jne
sub
into
xor
sbb
jae
rcl
ins
and
add
(bad)
ja
mov
fisubr
inc
ret
jno
enter
out
ret
sub
(bad)
and
jl
test
sbb
repnz
mov
movs
adc
xchg
jg
mov
cmp
pop
jge
retf
pop
sar
mov
mov
mov
jmp
into
ret
jne
enter
xor
pusha
add
pop
ins
mov
movs
adc
aas
mov
leave
pushf
fadd
adc
mov
cmps
pusha
les
cmp
mov
dec
add
xchg
lea
test
sbb
push
in
add
add
scas
pop
dec
and
fcmovne
movs
adc
inc
arpl
add
xchg
js
loope
jmp
(bad)
xor
std
inc
std
fsubr
xor
jle
call
and
xchg
sbb
mov
inc
and
(bad)
aam
push
adc
mov
jno
xchg
(bad)
or
xchg
sbb
jg
sbb
gs
adc
outs
mov
add
cmc
test
daa
loop
jp
pop
sub
cwde
pop
xchg
push
aam
loope
push
repnz
cld
jne
add
arpl
cs
cmp
ret
out
out
add
sub
pop
push
sbb
xor
xchg
dec
(bad)
call
jl
mov
mov
sub
mov
rcl
adc
and
pop
inc
fadd
cmps
add
pop
ror
iret
jmp
out
(bad)
jo
push
jbe
fcom
jg
pop
adc
test
mov
scas
repnz
hlt
int3
dec
dec
pop
cmp
fld
test
jl
movs
int3
cmp
or
and
shr
mov
(bad)
jbe
inc
jmp
add
gs
mov
rol
cmp
arpl
lods
inc
cmp
sbb
push
(bad)
mov
jge
mov
out
mov
setno
cmp
sub
jo
mov
jecxz
xchg
lods
(bad)
cdq
jg
cmps
mov
(bad)
into
movs
ret
inc
add
ret
stos
paddusw
jne
jbe
mov
mov
mov
imul
sar
or
jmp
sub
add
ins
cwde
dec
enter
xor
js
push
dec
aad
lahf
or
(bad)
cmp
pop
mov
inc
sbb
push
add
cmp
xor
xor
mov
jmp
lds
push
add
push
pop
adc
inc
in
cmp
(bad)
cmp
lea
xor
mov
mov
pop
pcmpgtd
div
and
call
adc
jno
daa
push
inc
aaa
fcom
xor
mov
mov
in
daa
push
jl
ss
repz
or
xchg
cmps
out
pop
add
fild
jge
pop
std
cmp
jne
sbb
xchg
shr
imul
daa
mov
mov
sub
ins
repz
or
aas
fcomp
dec
fcom
adc
sti
xor
mov
and
shl
mov
(bad)
cmps
mov
lods
ficom
cld
cmps
xchg
and
xchg
aaa
mov
adc
mov
push
add
mov
mov
jo
lods
retfw
call
leave
push
nop
sahf
inc
loopne
sub
loope
inc
lods
jle
mov
pop
push
jno
(bad)
mov
popa
aad
cmp
adc
jae
ret
fwait
rcr
cmp
jns
xchg
fdivrp
loopne
cmp
imul
jb
lods
aas
add
test
xchg
retf
or
inc
mov
syscall
and
or
adc
clc
or
push
sub
popw
loope
or
jae
fcomi
push
dec
xor
retf
outs
loopne
stos
cmc
jmp
push
push
jp
xchg
dec
fcomip
psubq
movs
imul
sar
stc
mov
ja
push
sbb
mov
hlt
add
pop
popa
sar
cli
lea
or
pop
xchg
dec
fisub
inc
jo
loope
adc
adc
mov
push
div
popa
(bad)
leave
xor
not
lock
xchg
outs
cli
pop
aas
jmp
(bad)
jno
cmps
daa
push
sbb
add
aaa
movs
adc
pop
xchg
mov
mov
lea
xor
aad
mov
movs
into
mov
mov
cdq
jecxz
in
and
and
dec
call
aad
add
(bad)
cmps
mov
(bad)
pop
ja
xchg
push
inc
out
adc
jno
or
nop
out
stc
jmp
and
pushf
or
pushf
popf
pop
repnz
inc
push
ins
in
mov
add
retf
fstp
sub
cli
aas
lock
xchg
fild
dec
push
sar
out
in
mov
cwde
call
int3
mov
and
mov
inc
shr
xor
stos
loope
hlt
sbb
or
mov
jno
enter
or
(bad)
inc
sbb
or
xor
(bad)
into
xlat
sbb
push
mov
and
jecxz
icebp
out
cmp
or
fst
pushf
les
popf
and
icebp
js
mov
mov
xor
push
inc
sbb
movs
mov
shl
cmp
and
test
jbe
push
fxch
xor
es
jecxz
(bad)
test
stc
cmp
push
and
mov
fisub
mov
fwait
jae
xchg
adc
out
pop
pop
mov
das
(bad)
std
enter
jne
mov
inc
jmp
mov
dec
pusha
dec
adc
mov
rcr
ret
loope
cmps
imul
cmp
lods
test
push
cmps
adc
pushf
out
lahf
jl
pop
fidiv
xchg
pop
aad
xor
in
cli
dec
mov
push
cdq
mov
js
lahf
std
push
push
inc
arpl
mov
dec
adc
inc
sub
(bad)
xlat
pop
add
dec
jne
iret
ret
push
push
std
xchg
fisubr
jecxz
xor
mov
xchg
dec
retf
out
mov
sti
in
out
cld
jmp
cmp
shr
inc
add
hlt
repnz
adc
push
(bad)
pop
lea
stos
jecxz
xor
ds
xchg
out
cmc
sub
leave
mov
int3
das
inc
pop
jbe
sar
or
daa
sbb
mov
aam
lods
push
or
enter
fadd
cdq
xchg
(bad)
fldcw
inc
adc
mov
dec
xrelease
mov
outs
xor
mov
aam
jb
sub
scas
dec
loope
cmp
(bad)
test
jb
stc
pop
pop
or
sub
mov
jp
pop
inc
cmp
movs
mov
popf
pop
int3
fsub
add
fld
mov
repnz
ins
dec
scas
js
jns
push
or
rcr
inc
xor
xchg
push
sahf
push
xor
in
xchg
jne
push
pop
xchg
mov
xchg
retf
pop
cmp
push
inc
cmp
sar
cmps
adc
(bad)
repz
sub
dec
lea
jnp
popa
mov
mov
retf
jecxz
push
pushf
ja
xchg
inc
shl
adc
lea
mov
dec
mov
outs
mov
mov
rol
mov
sti
sbb
mov
dec
sar
cdq
cmp
jmp
adc
aaa
mov
jbe
jae
sub
test
out
xchg
aam
and
mov
and
adc
inc
xor
mov
pop
aad
pop
aam
int3
push
pop
movs
xchg
pushf
fld
fldl2t
xor
rcr
fucomp
mov
fcomp
pop
movs
mov
mov
test
adc
xlat
mov
push
add
scas
nop
xlat
and
adc
mov
mov
and
mov
out
add
aad
inc
fimul
inc
pop
stc
or
jb
mov
mov
sbb
mov
xchg
in
repz
cmps
ss
lods
(bad)
dec
and
add
retf
out
js
adc
push
test
shl
(bad)
repnz
cmc
add
jne
rol
inc
movs
inc
popa
cli
add
xorps
repz
int
or
lahf
mov
std
repz
push
inc
pop
fmul
fld
ja
add
dec
dec
mov
int
in
mov
ins
fist
push
xor
cmp
fwait
ins
outs
dec
or
xchg
push
cmp
js
sbb
xor
xchg
repz
adc
cmp
adc
movs
test
dec
int
sub
call
jno
ror
jle
cmps
rcr
push
add
loop
jp
shl
adc
adc
faddp
sub
shr
jnp
push
push
or
retf
nop
inc
pop
xor
adc
cmp
push
mov
fadd
push
call
icebp
(bad)
push
xchg
jo
(bad)
sub
sbb
adc
xchg
jl
cmps
push
data16
rol
sti
mov
test
dec
add
sub
fwait
stc
(bad)
jle
call
mov
mov
jecxz
lods
cmc
jns
and
(bad)
add
mov
xor
lahf
mov
add
mov
stos
movs
out
icebp
(bad)
cld
jmp
ret
inc
fxch
inc
xchg
rcl
dec
or
sbb
xchg
gs
sub
cld
loop
jae
lea
push
mov
mov
push
test
push
mov
daa
mov
(bad)
(bad)
mov
std
cld
pop
ret
mov
pop
pop
daa
inc
iret
adc
cmp
cdq
cli
push
mov
adc
hlt
adc
std
pop
sti
and
cli
icebp
pop
retf
aad
jle
or
inc
inc
jp
add
fst
sub
and
shl
add
sbb
jns
(bad)
cmp
aad
sbb
fbstp
push
push
push
outs
mov
xor
xor
dec
call
loop
aaa
ret
dec
jo
repnz
cmp
push
jbe
add
jecxz
sar
dec
adc
sbb
mov
stc
std
push
(bad)
fst
pusha
mov
mov
push
mov
or
xchg
jbe
push
(bad)
(bad)
sahf
stc
aad
mov
jle
shl
add
(bad)
neg
std
mov
cs
mov
sbb
int3
push
jge
adc
lods
cmp
push
imul
cmp
mov
or
jp
jne
adc
inc
sbb
sbb
sub
ror
pop
cli
mov
call
daa
push
lds
sub
ja
hlt
lods
mov
out
in
jo
test
mov
fistp
stc
(bad)
mov
sbb
or
dec
lock
xchg
aas
aad
jnp
and
mov
sbb
in
sbb
inc
jbe
mov
movs
outs
mov
push
and
(bad)
mov
test
jae
stos
mov
pop
imul
dec
pushf
out
cmp
sahf
shr
xor
shl
mov
and
fmul
fdivp
(bad)
xor
mov
add
sub
hlt
mov
in
xchg
pop
aad
jecxz
pop
xchg
pusha
ins
mov
bound
mov
in
and
sub
mov
adc
mov
mov
push
adc
je
js
mov
lds
mov
fidivr
add
mov
mov
(bad)
sbb
add
sub
aas
rol
adc
aad
aas
mov
mov
inc
ds
test
and
push
fnstcw
xor
xor
in
movs
(bad)
or
push
cmps
mov
(bad)
idiv
pop
push
out
dec
les
push
xchg
aaa
add
stc
repnz
test
ret
imul
lods
hlt
cdq
pop
add
mov
inc
stos
and
jg
sub
xor
pop
fild
push
das
repnz
jae
jl
mov
dec
push
mov
dec
add
cdq
xchg
mov
xchg
xchg
jmp
movs
mov
dec
popa
xor
es
and
cld
les
dec
cmp
inc
cld
pop
jae
sbb
sub
mov
mov
call
sti
dec
cmps
aas
sub
loopne
in
retf
xor
jle
and
jle
iret
lods
and
xchg
aam
push
xor
mov
(bad)
mov
leave
add
aad
inc
fcom
test
aas
jne
jnp
xor
or
lods
jnp
xor
jl
inc
into
pop
xlat
sar
nop
xabort
mov
inc
or
adc
and
xchg
mov
test
jecxz
into
aam
dec
in
into
xor
adc
cmp
push
xor
push
dec
iret
and
fldz
clc
(bad)
repz
aam
cld
pop
xchg
test
push
and
pop
add
adc
fsubr
dec
mov
aaa
aaa
movs
push
mov
int3
xlat
jp
pusha
cmp
adc
test
shr
adc
imul
ret
loopne
cmp
popf
and
retf
dec
dec
lods
loope
or
cmp
mov
fisubr
jns
pop
out
popf
add
jge
fwait
inc
jle
and
xor
fcmove
jnp
sahf
push
addr16
daa
mov
add
repnz
retf
xchg
(bad)
and
loopne
sub
cmp
adc
es
dec
lds
stos
aam
out
push
mov
xor
mov
mov
fcompp
and
cdq
or
pop
lahf
ins
pop
js
fdiv
out
mov
lds
test
ret
push
add
outs
adc
mov
arpl
retf
imul
popf
and
xchg
loope
(bad)
and
aad
(bad)
xchg
es
lahf
in
mov
inc
push
add
add
push
(bad)
sub
mov
fcomp
lock
ins
in
dec
rcr
mov
sbb
lods
in
sbb
ror
xchg
adc
cmp
fwait
inc
sub
adc
int
dec
out
outs
push
shr
sub
sbb
jnp
int3
push
jnp
iret
scas
js
pop
sbb
mov
push
cmp
dec
sbb
sbb
mov
cmp
or
mov
sbb
jae
mov
lods
jne
das
pop
mov
out
jp
sti
inc
int
in
sub
or
mov
mov
ret
ficom
int3
loopne
jb
xchg
and
cmps
rcl
call
push
data16
mov
mov
dec
inc
jp
aas
xor
out
dec
lahf
mov
ror
mov
dec
outs
inc
out
rep
mov
and
scas
pop
popa
mov
jns
jmp
arpl
in
ret
aad
aad
push
or
add
sbb
inc
pop
out
jae
pop
out
xchg
test
mov
call
mov
ret
pusha
xchg
mov
je
dec
(bad)
(bad)
dec
stos
je
sub
mov
cdq
sbb
ins
jle
xor
test
ret
ins
or
hlt
ins
rol
cdq
xor
adc
ds
add
shl
xlat
xchg
lods
lods
(bad)
leave
push
mov
add
gs
leave
shl
sti
push
call
push
call
mov
pop
mov
cmp
mov
jbe
(bad)
les
jge
lahf
leave
(bad)
lea
or
sub
or
das
add
and
fadd
(bad)
sub
xchg
pop
ficom
outs
mov
push
out
inc
push
loopne
mov
sub
pop
xchg
dec
ja
mov
(bad)
and
push
ds
xchg
mov
cmc
xchg
pop
cmp
in
movs
mov
mov
push
or
cmp
pop
int
fimul
out
pop
push
aam
nop
es
jb
shl
cmps
xlat
lea
adc
popf
and
sub
shrd
cmp
(bad)
cmc
jns
enter
sbb
mov
push
push
pop
jb
adc
in
push
xor
jg
retf
cmp
mov
loopne
sub
xor
xchg
push
xor
xchg
fcomi
adc
sbb
in
or
(bad)
fstp
pop
call
inc
jae
bound
sub
xchg
scas
and
arpl
sar
push
pop
les
pop
sub
jns
mov
cmc
mov
pop
xor
jnp
fs
cs
enter
or
or
or
xlat
or
add
sub
repz
(bad)
icebp
or
add
cdq
sub
es
sbb
enter
mov
mov
cmc
jnp
ret
out
fiadd
mov
enter
cwde
push
aad
arpl
js
sbb
cmp
pop
cs
fist
shl
push
cmps
pop
das
aas
aam
mov
pusha
inc
xor
pop
mov
and
or
enter
pop
fadd
push
jno
daa
mov
jp
rcr
jbe
out
pushf
mov
outs
and
outs
mov
inc
gs
mov
push
mov
xor
aad
or
xchg
(bad)
std
sbb
jns
adc
iret
inc
jne
ror
sti
cli
aad
pop
cmps
or
xchg
in
pop
dec
cmp
mov
iret
or
adc
pop
shr
fs
inc
dec
sub
sti
hlt
out
ins
inc
cs
mov
idiv
icebp
sub
outs
(bad)
adc
cmp
inc
xchg
pop
pop
stos
sbb
cmp
push
ss
in
add
xor
jno
sub
xor
movs
mov
adc
stos
repz
mov
shr
bound
clc
add
adc
cmp
jle
std
out
inc
push
dec
mov
dec
arpl
fwait
mov
sbb
in
cld
fisubr
dec
int3
and
and
aad
arpl
ss
push
jne
xlat
into
jbe
fstp
dec
add
daa
shl
mov
out
cmp
loop
sar
adc
(bad)
ret
xor
push
xchg
pop
mov
dec
add
xchg
ss
mov
pusha
arpl
test
aad
sub
dec
jmp
cli
mov
into
inc
(bad)
(bad)
sti
(bad)
jnp
jns
arpl
sub
xchg
xor
mov
xor
and
add
push
xor
loop
mov
adc
(bad)
jnp
sbb
test
scas
or
jmp
inc
mov
lds
enter
mov
xchg
cmp
repz
(bad)
cld
jp
dec
shl
or
or
add
aas
push
inc
das
cmp
sbb
pop
loope
cmp
rcr
fs
mov
adc
out
lds
adc
mov
xor
lods
pop
dec
mov
cmp
mov
clc
out
(bad)
shl
fcomp
in
and
in
call
call
inc
push
movs
ins
adc
das
sbb
push
js
fimul
loopne
adc
xchg
push
jg
cwde
out
xor
sti
imul
jecxz
mov
int
not
push
cmc
xlat
mov
xchg
mov
mov
jl
pusha
jmp
pop
dec
xchg
ss
into
mov
mov
(bad)
mov
je
dec
dec
sub
mov
in
scas
adc
in
jg
ret
arpl
cmp
test
jg
xchg
in
int3
xor
jmp
add
jl
push
mov
inc
mov
fmul
inc
lahf
xor
push
push
sbb
je
aam
adc
aaa
push
add
sbb
fmul
hlt
imul
mov
and
das
jmp
gs
mul
ret
pusha
nop
imul
sub
shr
retf
mov
pop
loop
into
shr
adc
jns
ret
iret
or
clc
xor
pop
add
popa
dec
std
fimul
push
popf
fst
repz
add
in
fcomp
jge
outs
call
pop
loop
mov
cmp
cs
loopne
inc
dec
mov
mov
mov
push
push
mov
xchg
out
jae
push
xor
sbb
int
aaa
scas
sbb
(bad)
scas
adc
mov
mov
lods
stc
dec
mov
xor
cmc
ror
push
sub
sbb
mov
or
xchg
cdq
dec
daa
and
xor
mov
cdq
push
lds
push
jge
jecxz
int3
dec
pop
cwde
ds
jne
mov
jecxz
xchg
push
in
mov
fsubr
mov
fnstenv
mov
leave
ins
std
push
ins
mov
pop
sti
cld
push
xor
popa
scas
adc
in
jae
mov
inc
jmp
adc
jnp
mov
pushf
loopne
inc
pop
lods
inc
into
pop
mov
cmp
add
loope
and
lds
mov
xchg
jae
xor
pop
aaa
sbb
out
sbb
inc
or
pusha
or
iret
movs
(bad)
mov
je
xor
mov
iret
pop
lods
dec
xchg
hlt
push
neg
nop
xor
ins
push
sbb
adc
loopne
dec
mov
dec
movs
mov
es
jmp
movs
mov
sar
test
out
dec
in
mov
xlat
cmp
xlat
popa
pop
test
jle
mov
cmp
add
and
inc
and
mov
sahf
dec
pop
or
pop
cmp
out
jae
test
jle
in
push
popf
mov
enter
icebp
push
or
add
fcomp
sbb
push
inc
dec
add
ficomp
or
or
shr
or
outs
sbb
jb
inc
les
mov
fldcw
stc
sub
jl
in
iret
xor
inc
xor
shr
imul
adc
aam
push
add
push
xchg
test
outs
xchg
mov
aad
mov
hlt
jae
lods
adc
sub
mov
pop
mov
mov
xchg
cmp
stc
mov
mov
cmps
jge
sub
push
mov
in
in
cmp
retf
mov
pusha
xor
pop
dec
add
push
push
jmp
cmp
aad
sub
mov
stc
ret
outs
xchg
in
or
outs
add
and
stc
add
in
xchg
inc
pushf
mov
lods
(bad)
aas
dec
movs
push
cli
dec
cdq
xchg
adc
ficomp
dec
mov
jmp
loope
(bad)
sbb
ficom
imul
cmc
ins
mov
je
fisttp
fcom
pop
mov
loopne
int
xlat
into
inc
cmp
adc
loop
pop
sub
lods
xlat
retf
add
or
mov
out
stos
jae
xchg
cdq
or
fnsave
in
fstp
xchg
push
dec
sti
(bad)
in
or
mov
fwait
mov
or
stc
nop
outs
imul
cmc
and
mov
rol
aam
mov
in
sub
lods
ret
bound
and
retf
out
mov
pusha
out
add
fldz
aam
jmp
rcl
in
js
retf
add
inc
les
lea
into
retf
lods
addr16
nop
xor
cmp
xor
adc
imul
rcl
lock
cmp
push
pushf
pop
jge
(bad)
dec
ret
pop
les
xchg
test
fild
adc
jns
inc
mov
adc
jg
das
das
(bad)
movs
push
imul
jmp
in
test
pop
movs
push
and
add
jmp
xor
sub
aas
mov
fidiv
es
jmp
jbe
in
rcl
pop
pop
jns
daa
adc
sub
frstor
cmc
inc
lahf
int3
movhps
or
push
push
mov
cmp
rol
mov
arpl
dec
xor
(bad)
cmps
clc
jl
pop
sub
shl
popa
pop
fisttp
jmp
push
loop
adc
add
ins
jg
pop
dec
cs
xor
test
add
ds
dec
aaa
xchg
push
jns
mov
fcmovnb
inc
inc
xchg
in
cmc
ror
jecxz
mov
fst
fucomip
mov
jg
cmp
push
(bad)
xchg
xchg
and
sub
adc
mov
mov
rcl
jp
push
std
jnp
fbstp
mov
in
loopne
sar
fs
inc
or
mov
or
adc
xchg
ret
mov
pop
xor
movs
rol
or
and
aas
pop
arpl
div
xchg
add
pop
(bad)
lods
hlt
xor
(bad)
retf
xor
test
int
lahf
adc
inc
mov
cwde
es
sub
in
push
jge
add
mov
push
inc
idiv
in
jno
lods
jmp
mov
pop
and
inc
js
je
and
in
fcmovnu
adc
mov
pop
fidiv
and
mov
mov
add
mov
sub
pop
into
jnp
and
es
sub
mov
push
pop
xchg
daa
sbb
int3
mov
rcl
xor
or
fcomp
fwait
xor
arpl
mov
pusha
push
dec
test
sbb
leave
cli
jmp
fsubr
sub
ret
adc
xchg
lods
ja
imul
rcr
mov
leave
mov
mov
ss
mov
add
inc
ins
adc
lahf
or
mov
xchg
xor
in
nop
adc
into
mov
aas
jp
pop
loopne
addr16
pop
push
inc
gs
jecxz
sbb
dec
inc
cmp
push
outs
loopne
les
cmp
ins
in
add
call
cmps
loop
icebp
test
xor
rcr
xchg
push
add
mov
in
dec
mov
push
inc
pop
std
mov
cmc
mov
daa
adc
daa
das
and
cmp
fincstp
adc
adc
mov
(bad)
retf
jcxz
push
pop
movs
push
xor
jecxz
dec
push
jp
cmc
add
mov
mov
mov
gs
or
jl
push
mov
shr
and
xchg
add
test
call
fsubr
inc
repz
data16
mov
in
enter
jp
xor
out
push
shr
pop
int
cmp
mov
mov
not
sar
or
fldcw
loop
dec
cwde
shl
sbb
add
jecxz
icebp
jmp
pop
pop
call
daa
jl
sub
dec
mov
out
jnp
pop
mov
or
pop
mov
pushf
cld
push
stc
add
push
ret
mov
mov
fadd
shl
and
mov
test
mov
pop
push
fwait
dec
jnp
popa
xchg
fldenv
cmp
inc
and
les
data16
xor
lahf
mov
fadd
xchg
jne
adc
outs
movs
fisttp
addr16
xor
jecxz
test
sbb
mov
mov
sti
push
push
fild
jb
arpl
ror
pushf
inc
mov
popa
xchg
xor
sub
not
push
hlt
inc
push
cdq
jl
pushf
and
lds
in
fdiv
xlat
in
js
mov
sub
jle
push
mov
hlt
movs
dec
cld
dec
adc
dec
jae
out
(bad)
mov
cmps
mov
xchg
and
stc
out
ds
outs
fwait
addr16
mov
xchg
scas
call
out
jmp
psrlq
jb
sbb
sub
adc
aad
xor
out
push
mov
sar
and
rcr
pusha
mov
les
xor
jmp
sub
nop
push
dec
mov
or
fadd
mov
in
out
cmp
fnstenv
sahf
and
mov
adc
dec
pop
and
lds
mov
inc
std
mov
std
popa
add
and
les
mov
in
mov
sub
pop
xchg
ja
mov
cmps
es
es
add
sti
je
push
push
nop
(bad)
mov
das
ss
aam
inc
mov
pop
mov
dec
mov
xor
jo
sahf
sbb
adc
lods
cmp
lds
push
dec
mov
mov
sbb
iret
adc
int
add
fs
stos
popf
adc
call
ror
mov
(bad)
push
cwde
push
test
sub
nop
mov
movs
nop
movs
add
xchg
data16
into
or
mov
je
xchg
dec
mov
cdq
sahf
cmp
dec
dec
(bad)
dec
pusha
or
fisttp
test
pop
xchg
fcomp
test
adc
mov
popaw
pushf
cmp
push
pop
rol
xchg
inc
idiv
lahf
fmul
mov
sub
adc
and
mov
ss
(bad)
leave
push
ret
cmp
sub
adc
mov
mov
sahf
add
std
pop
push
push
jnp
sbb
xchg
and
push
sbb
sub
cwde
fild
push
nop
jp
arpl
xchg
mov
sar
pushf
add
out
popf
mov
sti
xchg
outs
mov
mov
icebp
in
jmp
cwde
movs
or
inc
jecxz
les
cld
(bad)
mov
(bad)
push
test
aad
and
cwde
xor
int
ss
fsubr
out
and
gs
inc
fmul
cdq
mov
daa
push
sub
loop
adc
movs
daa
dec
ins
mov
mov
xor
or
push
xchg
arpl
xor
add
jne
das
mov
pop
sar
pop
add
lock
shr
daa
int3
mov
inc
ins
xor
mov
clc
adc
inc
adc
xor
mov
pop
dec
imul
xchg
movs
pusha
(bad)
div
push
mov
mov
push
jo
mov
imul
sbb
xor
pusha
dec
inc
xlat
fcom
push
sub
popa
test
aas
push
in
scas
(bad)
and
imul
cmc
cmps
sbb
dec
mov
jmp
pop
adc
shl
rol
jg
pop
sbb
ret
cmps
or
cmp
mov
xchg
shr
xlat
pop
cmp
js
(bad)
loope
or
mov
int3
or
xor
and
push
scas
jne
and
out
fidiv
enter
pop
mov
push
jmp
or
jl
and
cli
pop
retf
or
inc
int3
mov
inc
mov
push
sahf
ss
into
addr16
dec
out
inc
jmp
push
pop
(bad)
test
jmp
pop
loop
push
xchg
dec
test
call
mov
(bad)
std
push
or
ins
sti
sti
xor
xchg
inc
dec
push
mov
and
adc
mov
push
ror
scas
mov
pop
sub
shl
fdivp
push
js
or
push
push
push
sbb
stc
in
dec
(bad)
in
sti
nop
dec
and
xor
xchg
dec
push
jnp
dec
pop
push
mov
fst
dec
mov
aam
test
stos
mov
lahf
add
aam
mov
int3
cmp
or
jp
pop
xchg
push
fisub
(bad)
xlat
int
jno
mov
xor
(bad)
loop
cmp
push
fisttp
inc
dec
or
pop
mov
mov
mov
popa
mov
push
sub
xchg
in
lods
fisttp
cmps
mov
push
fiadd
inc
inc
pusha
scas
dec
fld
mov
call
call
popa
xor
in
cdq
cs
sahf
fidiv
arpl
ja
test
or
pop
or
sub
int
cmp
mov
push
repz
in
and
aad
mov
xchg
pop
mov
xchg
push
and
xor
jb
std
pop
push
inc
call
sbb
fist
daa
ret
push
sti
jns
daa
mov
stos
push
test
sbb
dec
cmp
add
adc
jae
fidivr
jl
jbe
cmp
inc
lahf
jb
scas
lock
stc
std
scas
out
cwde
fwait
mov
push
loope
in
jbe
mov
jbe
les
in
fdiv
imul
jno
push
pop
aas
xchg
stos
cmps
ret
mov
and
push
lock
pop
push
fstp
repnz
call
pop
enter
repz
lea
dec
pause
pop
fdivr
(bad)
mov
sbb
add
leave
inc
movs
jge
or
inc
in
pop
test
lahf
mov
xor
sub
cld
sub
fsubr
add
push
cmps
mov
ja
xor
pop
das
mov
addr16
gs
jns
dec
es
(bad)
aad
push
pop
neg
in
adc
cmp
and
bswap
retf
icebp
push
jecxz
mov
add
cmp
and
nop
adc
and
aaa
cs
and
test
pusha
int3
leave
dec
inc
cmps
arpl
mov
dec
push
test
mov
cmp
sub
pop
repnz
jb
les
test
aas
xor
loop
(bad)
jae
xchg
mov
sub
add
mov
pop
pop
lahf
mov
inc
js
(bad)
fsubr
dec
(bad)
(bad)
mov
mov
test
data16
or
adc
mov
jmp
inc
(bad)
clc
inc
jl
or
std
sbb
ret
in
mov
cmps
arpl
fsubr
xchg
sub
ja
or
cmps
out
int3
loope
mul
mov
or
pop
mov
scas
loop
mov
mov
mov
mov
pop
inc
xchg
and
jp
cmp
in
or
out
sub
mov
(bad)
nop
jae
pop
test
aaa
rol
les
push
jmp
(bad)
gs
pop
fdivr
mov
xchg
jle
jae
setnp
add
cdq
mov
and
out
mov
aaa
xor
repz
or
and
and
push
aam
lods
les
mov
xor
test
mov
mov
aaa
fdivr
mov
mov
inc
fbld
pop
push
xchg
push
std
dec
xor
movs
std
daa
loope
add
adc
xor
pop
bnd
test
stos
cli
shr
loop
and
xor
bound
out
pop
cld
push
out
add
call
xchg
iret
loop
loopne
stos
jmp
int3
pop
cmps
inc
test
fcom
mov
adc
mov
stc
sub
cmp
cmc
cld
mov
mov
outs
stos
push
es
test
adc
ins
movs
dec
adc
jo
cmp
sub
inc
ins
test
mov
out
add
pushf
in
cli
jns
fisub
push
cmp
sti
sub
sbb
cli
pushf
arpl
addr16
imul
sbb
sbb
or
sti
(bad)
cmp
mov
adc
pop
pop
scas
pop
cmps
push
sbb
xchg
movs
add
iret
adc
cmp
scas
xor
test
addr16
and
or
adc
test
cs
mov
movs
inc
mov
nop
adc
rcl
test
jno
sub
xchg
inc
sar
pop
into
dec
jle
call
dec
ret
in
jmp
movs
pop
sbb
push
inc
jecxz
loope
cmp
call
das
and
ror
sar
xchg
ss
push
xchg
pop
jae
xchg
stos
out
aaa
aam
fstp
inc
sbb
xor
dec
(bad)
push
dec
jcxz
mov
test
sub
xor
cmp
fabs
dec
mov
je
cmp
sub
cs
shl
adc
repz
aad
mov
leave
xchg
test
mov
(bad)
repz
dec
fld
lods
cmp
and
jne
cs
xor
push
mov
shr
fiadd
xor
sbb
pop
jmp
push
cmp
mov
aas
imul
add
or
sub
push
clc
adc
les
and
xchg
cmp
push
fldenv
mov
pop
inc
pop
sbb
sbb
test
push
popa
cmp
add
jg
cmp
jecxz
cmp
mov
pop
inc
cmp
jg
jl
mov
jno
pusha
out
pusha
cmp
dec
mov
cli
not
ret
je
sbb
retf
imul
or
xchg
xchg
or
dec
mov
xchg
or
repz
les
mov
cmp
popf
add
ret
ds
sti
ins
sub
or
jnp
jnp
call
in
es
(bad)
or
ins
fidiv
aaa
cmp
push
js
add
dec
cli
push
addr16
cmp
mov
out
rol
add
ins
cmp
and
je
popa
mov
ss
xchg
mov
adc
push
cmp
fwait
sbb
arpl
addr16
in
ret
repz
fldenv
hlt
mov
mov
outs
(bad)
int
xor
aam
popa
ins
in
imul
ss
sub
es
shl
nop
jmp
test
jl
outs
sbb
repz
sbb
test
daa
adc
ror
cmps
int
and
xchg
mov
stos
jns
mov
pop
sbb
jae
cmp
or
pop
push
fidivr
and
data16
jne
jae
push
push
mov
dec
sbb
daa
jb
bswap
gs
movs
xchg
pop
dec
or
cmc
and
rol
mov
test
ret
cld
mov
jle
shr
pop
adc
shl
pop
push
push
xchg
fcmovu
push
movs
inc
bound
inc
in
sti
in
stos
or
or
or
push
shl
es
mov
retf
pushf
jnp
dec
js
or
daa
xchg
sar
fld
pop
sub
jo
repz
(bad)
push
out
push
loope
sub
push
sar
movs
movs
shl
das
lds
add
jle
sub
cmc
sub
ds
mov
or
std
dec
std
stos
jge
shl
movs
int
ds
in
aad
push
push
iret
mov
push
sahf
lea
jl
mov
mov
mov
sbb
icebp
out
into
xor
and
idiv
retf
call
mov
fisttp
lds
or
outs
gs
scas
test
push
imul
pop
loope
cs
dec
leave
ret
leave
push
retf
fbld
neg
adc
push
lods
mov
push
sub
or
stos
stc
lods
pop
sub
ins
adc
test
cmp
mov
repnz
gs
jbe
test
enter
scas
mov
loope
push
repz
repz
adc
test
push
dec
shl
or
call
jle
aas
test
stos
(bad)
xor
mov
adc
push
mov
sub
or
jnp
nop
pushf
in
fld
jmp
jnp
push
imul
ins
cld
pop
loopne
adc
mov
aam
mov
xor
out
or
neg
xlat
jp
into
pushf
or
inc
sbb
add
test
xchg
dec
inc
xchg
ss
mov
add
test
add
mov
dec
jmp
(bad)
lods
push
pop
vmovq
mov
pop
pop
retf
lea
or
or
stc
xor
test
in
call
test
or
add
mov
setne
out
push
xchg
mov
inc
mov
leave
mov
cmp
and
out
dec
add
jl
mov
mov
lea
pusha
mov
xlat
inc
push
pop
out
xchg
lahf
fistp
repnz
movs
ds
scas
ja
and
loope
mov
xchg
and
popa
lods
xchg
aas
or
dec
push
jg
enter
test
jns
add
fcos
pop
ss
xchg
mov
xor
call
shl
cs
mov
dec
int
mov
dec
imul
sar
aad
out
cmp
int3
adc
test
pop
cmps
sbb
loopne
arpl
fxch
addr16
xor
iret
ss
xchg
dec
sbb
xchg
adc
pop
fistp
sbb
pushf
leave
jmp
inc
jb
push
ins
scas
jo
and
sbb
add
test
mov
pusha
pop
imul
popf
jae
inc
adc
add
xor
test
rcl
shr
cmp
test
inc
push
cmps
dec
or
jns
xlat
mov
out
cmp
out
adc
mov
mov
sub
ror
jmp
mov
test
sub
jbe
xor
mov
mov
jns
fs
ss
hlt
jns
mov
add
mov
push
xchg
jno
les
pop
adc
stos
in
and
aaa
arpl
sbb
test
cmp
jns
pushf
push
push
mov
bound
in
dec
mov
inc
pop
mov
test
mov
xchg
imul
cmc
out
jecxz
pop
out
inc
stos
pop
and
cmp
pop
xor
jbe
retf
js
inc
movs
sub
dec
jbe
lods
push
popf
push
inc
scas
(bad)
and
daa
aad
aaa
xchg
jl
mov
out
(bad)
stc
and
push
cwde
movs
add
neg
add
(bad)
jecxz
call
ja
aam
adc
jle
scas
stos
jg
lods
retf
out
push
stc
xor
cmp
loop
test
mov
and
data16
pop
pusha
cdq
mov
in
imul
xchg
mov
or
mov
leave
jle
or
mov
push
xchg
or
sbb
gs
inc
not
movd
cmp
fdiv
pop
pop
retf
int3
pop
xlat
and
xchg
int
or
arpl
add
lock
rcr
(bad)
cmp
(bad)
push
icebp
mov
mov
aaa
pop
sub
sahf
aaa
push
add
xchg
(bad)
std
scas
test
cmp
mov
pop
in
pop
jb
aad
push
cmp
dec
xchg
data16
cmp
dec
inc
jp
imul
cmp
or
jmp
mov
inc
cmp
mov
dec
push
shl
sahf
gs
leave
add
sub
cmps
xchg
jnp
mov
nop
or
aam
xchg
jne
mov
sub
ja
shr
sbb
inc
sbb
pushf
cs
test
aas
outs
in
xor
call
(bad)
cmp
ins
loope
mov
dec
sbb
repz
les
aad
loopne
jbe
retf
or
push
iret
or
dec
mov
jno
pop
fistp
jbe
inc
sub
cmp
sbb
push
ds
mov
and
cs
xor
rcr
cmp
cld
cs
iret
out
pop
xor
or
pushw
lds
stc
pop
cli
scas
ret
call
jle
xor
fidivr
mov
mov
cmp
jb
jae
scas
jo
outs
aam
out
and
dec
in
push
pop
add
hlt
mov
pushf
aas
int
in
movs
mov
adc
mov
stos
imul
outs
mov
xor
push
mov
and
in
ins
mov
outs
(bad)
aas
jge
inc
jle
xchg
sub
scas
dec
rol
pushf
cmp
aaa
sub
ficom
pop
sub
xor
sub
adc
das
or
rol
pop
test
loope
inc
loope
out
cmps
dec
and
xchg
sub
inc
xchg
push
lods
lock
add
shr
cmp
fdivr
xor
xchg
mov
iret
sbb
int
test
dec
inc
push
mov
adc
xor
movs
aaa
repnz
pop
pop
loope
add
inc
loopne
mov
rcl
les
mov
iret
sbb
push
retf
or
hlt
sub
push
adc
pop
leave
sbb
mov
mov
adc
mov
stc
jmp
pop
fadd
mov
lock
stos
xor
or
xlat
das
jp
rcr
or
pushf
test
cmps
jmp
xchg
pop
setg
xchg
inc
xlat
xchg
es
popa
sub
sub
sub
cwde
jns
movs
cmp
sub
inc
or
pusha
iret
xchg
xor
push
jp
xchg
div
push
mov
mul
add
sub
pusha
and
sub
mov
aad
xor
push
sub
(bad)
fldcw
data16
pop
(bad)
(bad)
cwde
pop
les
adc
sahf
std
xchg
and
or
sbb
jp
mov
inc
pop
sti
iret
jnp
cmp
sub
push
push
mov
dec
into
mov
inc
mov
cmps
mov
or
mov
jg
arpl
inc
retf
jmp
cdq
cmp
dec
xchg
sbb
(bad)
cmp
in
rol
xchg
into
jmp
jg
test
sbb
movs
inc
jle
sub
rol
sub
out
fdiv
sub
out
dec
movs
cmc
lods
std
mov
xchg
push
pop
js
lods
sub
popf
mov
cmps
sbb
and
push
push
jl
loop
inc
adc
inc
(bad)
mov
shl
ret
ins
add
std
outs
pop
sub
sbb
cmp
jp
pop
out
fs
push
inc
or
mov
nop
popa
movs
cmp
mov
nop
jmp
sub
and
xchg
pop
xchg
add
and
out
add
inc
cwde
sub
xchg
outs
cmc
arpl
jle
cmps
mov
sbb
sub
sub
jmp
nop
or
fwait
loopne
stos
sub
mov
pop
hlt
xchg
adc
mov
adc
pop
cli
gs
dec
push
test
xchg
popf
repz
adc
xor
js
xchg
sbb
add
shl
cmp
dec
mov
aaa
stos
or
mov
jnp
adc
inc
arpl
sub
imul
fdivr
clc
cwde
ret
movs
fdivrp
lahf
sbb
or
and
shr
push
mov
test
and
pop
out
test
or
shl
push
inc
ds
loope
in
sbb
ret
out
bound
mov
imul
sbb
movs
pop
imul
add
sub
pop
int3
xor
ror
lods
rol
(bad)
jno
lods
mov
in
call
pop
xchg
pop
dec
imul
jmp
pop
sbb
add
dec
xchg
out
call
fwait
imul
mov
stos
call
or
xchg
inc
pminub
rcl
add
inc
lods
into
xor
or
mov
dec
sub
push
xchg
aas
mov
jg
dec
xor
mov
lods
(bad)
loope
lods
outs
in
test
je
rcr
or
xchg
call
pop
test
jno
arpl
xchg
fistp
sbb
ud2
sbb
fidivr
je
lahf
dec
and
xchg
inc
retf
and
xchg
scas
lods
xlat
or
and
sub
pop
dec
and
sbb
adc
jecxz
push
ds
lods
sbb
ja
mov
jle
xor
push
nop
(bad)
(bad)
inc
adc
mov
or
iret
sub
stc
aam
(bad)
mov
cmp
bound
out
sub
inc
repnz
jo
xlat
retf
test
nop
test
inc
cmp
dec
sbb
jne
or
out
cmp
stos
pusha
lods
fisttp
popa
pushf
mov
je
and
and
scas
pop
aad
and
dec
ins
jo
mov
dec
hlt
jmp
ror
sub
hlt
cli
(bad)
pop
pop
loop
loopne
jnp
enter
fadd
outs
jg
sar
cmp
jae
sub
cmps
fs
mov
inc
fistp
and
daa
push
cmc
and
push
test
push
sub
std
(bad)
pop
xchg
sbb
shr
rcl
iret
dec
loope
lods
imul
xchg
out
stos
and
push
pushf
xrelease
xchg
ret
aam
jae
fmul
aas
push
inc
idiv
loopne
outs
inc
das
mov
aas
out
ja
mov
es
inc
pop
cmc
es
and
mov
push
and
test
mov
dec
out
cli
out
outs
and
retf
test
xchg
retf
mov
mov
dec
dec
sar
xchg
mov
pop
sbb
cmp
adc
xchg
jbe
mov
dec
call
and
mov
fwait
test
das
std
aaa
jecxz
mov
pop
aas
jne
add
push
mov
dec
mov
sbb
call
push
das
mov
lea
aaa
lods
and
cli
push
push
ds
dec
jmp
bound
jp
cdq
aad
fwait
jbe
int3
in
iret
das
xchg
cs
sti
mov
pinsrw
outs
push
aam
xchg
adc
sub
inc
mov
neg
in
fimul
es
outs
retf
ja
in
les
fld
jecxz
inc
imul
push
mov
jo
add
cmps
jecxz
mov
bound
bound
sub
add
xchg
mov
mov
adc
cmp
loopne
xchg
or
lahf
sub
mov
enter
sub
div
leave
aam
mov
jnp
(bad)
in
hlt
cwde
push
cmp
dec
(bad)
jp
retf
(bad)
mov
repz
cmp
sub
(bad)
inc
mov
jbe
out
mov
std
sub
sti
pushf
jo
cdq
loope
jp
inc
jle
movs
(bad)
pop
or
cmp
push
outs
mov
test
sub
or
add
cmp
jb
mov
xchg
int
std
std
bound
int
sbb
inc
imul
dec
and
xchg
or
je
sti
mov
cs
jmp
push
pop
cwde
or
adc
(bad)
movs
pushf
pop
mov
mov
sub
ja
rcr
adc
int
adc
les
jns
and
mov
xchg
outs
cmps
pop
xor
jb
xor
mov
mov
sbb
inc
add
or
add
jmp
cs
arpl
test
into
leave
in
pop
test
mov
mov
pop
sbb
jmp
add
push
(bad)
mov
lods
pcmpgtb
or
retf
inc
rcl
sahf
sub
mov
add
je
jmp
fidivr
loop
push
inc
retf
xchg
or
test
dec
mov
cmp
stos
cli
psrlw
inc
repz
jo
stos
mov
arpl
or
jae
in
ins
call
sub
dec
cmp
mov
push
jg
jae
jne
sub
add
lods
jge
gs
cmp
xor
test
fimul
xlat
lods
rcr
arpl
jge
popf
and
aad
mov
xor
sbb
or
or
xor
sbb
mov
sub
call
pusha
push
and
scas
dec
jmp
cs
xchg
mov
adc
iret
call
in
stos
sbb
lock
jbe
in
mov
inc
push
test
xchg
ret
jne
jl
jbe
arpl
xor
int3
in
lods
adc
cmps
arpl
or
inc
stc
cmp
jnp
jmp
je
push
xor
repnz
shl
xchg
popf
jmp
jb
loop
stos
pop
mov
sub
xchg
cmps
(bad)
cdq
add
shl
pop
pop
mov
mov
dec
mov
mov
js
or
mov
jg
dec
pop
dec
jl
imul
mov
jg
and
jle
dec
jns
mov
into
ds
addr16
lods
int3
cwde
mov
sub
call
mov
add
mov
adc
ret
jb
out
pop
outs
xchg
mov
mov
pop
push
in
je
mov
cwde
mov
mov
or
dec
push
jmp
xchg
dec
fs
mov
jge
pop
inc
aam
pop
mov
stc
imul
adc
pusha
(bad)
push
cmp
mov
push
mov
ins
jle
xchg
test
out
js
push
inc
ret
mov
test
movs
xor
push
pushf
xchg
cmp
pop
dec
and
sub
sub
pop
daa
outs
add
pushf
std
cmps
sti
mov
jb
mov
imul
inc
into
outs
jmp
sub
retf
jecxz
fistp
call
(bad)
lds
pusha
test
adc
pusha
or
es
jo
ins
stos
sbb
popf
adc
mov
and
and
pop
mov
mov
stos
aam
daa
retf
jg
inc
sbb
leave
gs
pop
and
dec
cmp
es
out
rcl
push
add
xor
hlt
push
push
fadd
das
(bad)
cwde
and
in
and
pusha
sub
ja
mov
ror
out
mov
fistp
dec
fs
adc
push
into
and
push
sar
stc
cmp
push
out
stos
movs
pop
retf
sti
adc
mov
sbb
or
cmp
push
and
ret
mov
fild
retf
mov
mov
daa
pop
and
loopne
test
scas
pop
mov
xor
pop
sti
outs
ins
into
rcl
pop
pop
(bad)
push
dec
shl
stos
lock
mov
or
out
add
adc
fistp
mov
loopne
pop
jmp
jb
pop
jecxz
dec
jmp
adc
fistp
cmp
rcl
pop
xchg
shr
dec
push
mov
sub
mov
adc
inc
cli
sbb
pop
dec
pop
clc
cmp
push
or
es
jae
pop
sub
adc
cld
mov
std
loop
loope
jbe
sbb
push
jge
cld
scas
es
das
pop
(bad)
in
rol
jne
jnp
imul
lahf
fdivr
xchg
and
and
xchg
cwde
ss
inc
xchg
test
aad
aaa
imul
jmp
adc
mov
and
cmp
mov
scas
jo
mov
inc
jl
jmp
push
cmp
scas
imul
fs
in
adc
mov
shl
mov
iret
xchg
mov
jmp
push
es
es
loopne
pusha
mov
adc
jp
(bad)
pop
(bad)
data16
stos
out
xchg
scas
inc
mov
mov
dec
or
fidivr
stc
rcl
(bad)
mov
xchg
jecxz
dec
xchg
adc
shl
sub
lea
lods
jle
push
repnz
xor
aas
data16
pop
jae
cld
lods
mov
jnp
xchg
xor
pop
pushf
sub
push
mov
sti
pusha
inc
sahf
xor
imul
cmps
cmp
push
in
inc
gs
cld
cmp
pop
outs
jbe
in
aad
cmps
loopne
xchg
adc
fcomp
faddp
cmp
mov
aas
xchg
idiv
inc
ror
(bad)
jg
adc
lock
and
mov
xor
sub
sbb
cld
inc
dec
cdq
ins
lea
sub
xchg
mov
dec
mov
lahf
xchg
xor
out
dec
shr
test
add
ret
test
lds
jl
rcl
cmps
jp
sub
inc
adc
adc
push
mov
cmp
push
add
push
cmc
ret
sub
repz
movd
aaa
enter
cmp
retf
pop
xchg
xchg
xchg
jle
daa
repnz
jae
push
xchg
or
dec
mov
push
stos
pop
mov
mov
mov
jne
mov
jecxz
in
add
mov
loopne
push
push
cmp
push
jge
fs
adc
add
lods
inc
nop
dec
push
mov
cmps
les
cdq
add
sbb
jo
out
fs
leave
fcomi
pop
sub
mov
cdq
jmp
jo
jecxz
das
outs
xor
ins
out
cld
adc
shr
(bad)
mov
fsub
aad
addr16
test
xlat
idiv
mov
jmp
pop
mov
xor
xor
xchg
bound
out
mov
xchg
or
adc
outs
mov
cmp
xchg
sahf
push
rcr
ins
lds
and
gs
es
arpl
shl
ss
inc
sub
mov
fsub
xchg
jnp
les
loop
not
and
mov
inc
enter
out
ret
pop
jns
aas
push
scas
jb
push
mov
or
dec
add
stos
push
xchg
dec
jbe
daa
addr16
arpl
push
jg
jl
(bad)
fcmovbe
and
push
add
icebp
dec
mov
jle
test
pcmpeqb
cmp
add
and
test
stos
(bad)
cmps
or
pop
xor
jb
sub
out
fisubr
retf
retf
jb
fisttp
jecxz
sbb
aas
push
sar
shl
popf
pushf
(bad)
aad
gs
cwde
and
(bad)
inc
jo
ins
stc
les
(bad)
cmps
xchg
push
mov
cwde
gs
xor
inc
rcr
xchg
mov
cmp
jno
leave
test
loope
dec
shr
or
mov
push
sbb
ja
dec
hlt
loope
aas
sub
dec
outs
rcr
jbe
pop
cwde
push
outs
add
jle
loop
add
inc
ss
jnp
push
lods
jmp
(bad)
adc
pop
sbb
daa
lahf
xor
xor
cmp
sbb
sub
xchg
test
iret
cmp
add
addr16
add
(bad)
(bad)
stos
or
ja
inc
add
mov
cmps
loop
jl
dec
lods
inc
outs
lods
daa
dec
jne
neg
pop
mov
loop
test
xor
repz
add
push
test
popa
mov
out
push
in
in
cmps
dec
sbb
ret
stos
jb
jg
mov
imul
sub
leave
jmp
adc
inc
sbb
fild
add
in
lds
adc
jb
or
int
aad
or
mov
arpl
outs
scas
sar
cli
or
ins
lods
dec
and
sahf
adc
dec
add
dec
mov
or
mov
sbb
xchg
jg
xchg
xchg
add
das
pusha
add
mov
(bad)
inc
push
mov
cs
frstor
(bad)
sub
pop
mov
in
and
xchg
sbb
ss
imul
xchg
icebp
pop
pusha
stos
mov
jbe
loope
mov
adc
(bad)
inc
xchg
pop
inc
mov
add
or
add
jne
jb
loopne
mov
(bad)
imul
xchg
in
sub
sbb
xchg
mov
inc
es
icebp
clc
movs
pop
add
inc
fs
addr16
or
out
cmps
xchg
xchg
sbb
aas
sbb
xchg
cmps
sbb
mov
movs
shl
imul
out
push
xchg
push
adc
ins
popa
lods
mov
mov
test
xchg
fistp
adc
jmp
jnp
dec
mov
leave
jmp
je
cmps
in
or
add
adc
repz
out
js
xor
in
xchg
pop
and
pop
and
mov
and
mov
imul
out
xchg
push
loopne
pushf
mul
not
movs
xor
arpl
scas
adc
fwait
xor
ins
enter
cld
imul
out
lods
mov
(bad)
cld
ss
sub
and
adc
inc
imul
lahf
scas
scas
imul
jno
jo
iret
mov
ins
fwait
ds
push
sbb
mov
loope
ins
or
push
shr
push
test
jp
popf
sti
lock
push
lea
sbb
cmps
cs
xchg
out
jns
and
sahf
xchg
repnz
jne
iret
mov
int
ja
push
sar
iret
or
sbb
or
jno
repz
jbe
stc
mov
iret
jbe
scas
sbb
jb
sbb
mov
movs
xchg
retf
dec
fist
test
scas
push
arpl
out
pop
mov
dec
sar
retf
jle
pop
in
sahf
jo
mov
or
fistp
mov
std
popf
push
ins
xchg
mov
sub
adc
in
fisub
mul
out
inc
sub
into
push
pushf
fucomp
je
dec
mov
pop
loopne
add
xchg
xlat
pop
jns
adc
mov
xchg
push
lds
jb
movs
and
cld
fwait
inc
or
repz
pop
pop
imul
push
movs
mov
out
call
sbb
adc
inc
or
sbb
in
jmp
addr16
arpl
ja
gs
push
ror
ret
cmp
inc
(bad)
jg
shr
addr16
into
mov
in
ins
jb
pusha
sti
test
pop
cmc
pop
and
mov
xor
mov
sbb
dec
fsub
xchg
fst
ds
jmp
std
aas
inc
bound
ror
dec
and
mov
(bad)
xchg
push
into
cmp
sar
sbb
mov
inc
ror
outs
(bad)
test
inc
fidivr
dec
rcr
ret
lahf
mov
xchg
ds
icebp
retf
loope
push
into
adc
lock
lods
xchg
add
in
and
cmp
xchg
jmp
xlat
test
jg
pop
xchg
xor
lahf
inc
(bad)
fnstsw
test
popf
dec
pop
jbe
xchg
test
(bad)
mov
and
pushf
push
xchg
outs
ror
xchg
xchg
cmp
pushf
fld
mov
std
mov
aam
cmp
cmp
sub
jne
inc
cmp
sbb
repz
push
and
xor
addr16
or
lea
mov
hlt
jecxz
mov
sbb
or
rcl
lea
in
sub
aaa
mov
retf
xor
movs
call
cmp
idiv
pop
xchg
je
dec
cdq
mov
cmp
dec
ret
xor
sub
nop
xor
push
stos
ss
jno
xchg
movs
ins
inc
sbb
movs
sahf
out
dec
pop
jno
inc
mov
and
xchg
stos
mov
movs
mov
or
xchg
std
mov
es
mov
push
inc
jno
mov
sub
jnp
sbb
or
mov
or
mov
cli
inc
mov
scas
pusha
js
stos
add
xchg
pusha
adc
pop
stos
pushf
lea
aas
jnp
sbb
loopne
out
cmp
loope
add
cmc
push
inc
pop
dec
push
ins
sub
mov
lods
(bad)
jmp
cmps
pop
push
icebp
sbb
add
mov
mov
gs
or
mov
add
arpl
iret
push
repz
cld
cli
jb
rcl
pop
jle
pusha
dec
ins
mov
int3
xchg
sub
pushf
jmp
xor
out
mov
jno
sbb
test
push
mov
mov
and
sub
cmps
scas
mov
cmps
inc
arpl
pop
ret
pop
mov
mov
cdq
push
xchg
jbe
and
xor
out
fcomp
fld
std
aad
push
or
and
xacquire
fidiv
sub
xchg
dec
fdiv
call
xor
dec
add
daa
push
inc
push
mov
loopne
retf
sub
or
enter
adc
in
call
aaa
lea
pop
cwde
and
inc
out
xchg
leave
js
lock
ret
fnstcw
mov
call
ss
sahf
ffree
jg
hlt
mov
ret
add
sbb
sub
mov
xchg
mov
adc
rcl
sub
loope
dec
in
cmp
xchg
jmp
and
sbb
mov
push
cmc
fisttp
and
dec
es
fwait
outs
or
fimul
(bad)
mov
sub
jbe
arpl
sub
out
jne
xchg
or
sbb
sbb
cmc
ins
cld
add
je
and
arpl
dec
add
and
add
lods
adc
inc
jmp
or
cld
push
int
adc
sbb
cmovge
(bad)
mov
jl
je
in
in
mov
add
sub
pop
outs
call
adc
and
push
daa
cmp
ret
or
mov
sub
test
and
neg
cld
gs
(bad)
cli
mov
imul
xor
and
push
add
je
add
iret
inc
clc
repz
loopne
jp
int
shr
es
sub
pop
imul
mov
loop
fdivr
add
(bad)
loope
push
retf
popf
xor
test
pushf
popa
in
add
xchg
sub
imul
dec
push
and
pushf
jae
pushf
and
jae
shr
xor
bound
ret
shl
mov
cmp
jp
(bad)
in
and
(bad)
scas
or
int
pop
mov
inc
adc
and
dec
mov
outs
xlat
xchg
jo
pop
dec
mov
test
jle
outs
ret
idiv
loope
out
mov
mov
xor
adc
aam
xor
stos
pop
mov
cwde
push
retf
mov
push
cmp
mov
mov
js
jp
jno
inc
push
add
mov
inc
in
push
push
mov
dec
je
jecxz
js
les
movs
cld
cmps
outs
fs
gs
mov
add
in
dec
cli
ror
push
jbe
xor
inc
clc
push
test
mov
adc
fcompp
jne
fadd
xchg
fcomp
xchg
jmp
or
sbb
sti
ja
pop
inc
push
jle
out
in
out
call
pushf
jmp
adc
arpl
fdivr
pop
call
(bad)
outs
les
and
cmc
ja
mov
cmps
sbb
push
rcr
mov
aas
inc
je
pop
out
(bad)
(bad)
add
xor
xchg
mov
dec
(bad)
adc
pop
pusha
add
in
outs
cmp
hlt
adc
inc
sbb
ret
jge
jecxz
dec
popf
les
dec
mov
and
test
mov
mov
cmps
mov
jp
in
std
sahf
mov
fiadd
in
sub
sub
jae
in
push
mov
les
jno
neg
pop
mov
fs
aaa
mov
adc
push
retf
sbb
xchg
add
mov
jns
xor
cmps
mov
outs
popa
cdq
dec
nop
pop
repz
int3
cmp
repnz
mov
hlt
dec
cmps
repz
cmp
scas
cdq
mov
mov
sbb
or
add
(bad)
call
jmp
jl
xor
call
fidivr
dec
add
ficom
ret
in
pusha
les
cmp
jno
inc
call
mov
sbb
mov
movs
into
loopne
mov
push
xchg
ins
pop
fdiv
mov
or
ret
js
iret
sahf
rcl
jg
mov
scas
sbb
xchg
mov
sbb
std
add
test
lods
sbb
mov
pop
xchg
mov
dec
gs
inc
cmp
and
cmc
xchg
mov
xchg
add
xchg
and
or
jecxz
or
push
(bad)
in
mov
adc
sbb
imul
cmp
mov
shl
adc
jne
sub
pop
addr16
push
or
sti
inc
imul
out
xor
add
push
repnz
adc
in
lods
shr
cwde
jmp
lods
xchg
scas
adc
pushf
clc
icebp
sub
xchg
popa
jp
fbstp
pop
in
mov
pusha
hlt
fstp
mov
lock
cld
retf
ret
jmp
repz
jle
les
(bad)
jge
js
adc
and
mov
fwait
dec
out
out
mov
jg
sar
int
test
cmc
out
push
push
pop
dec
adc
dec
inc
cs
sbb
jge
fimul
cmp
ret
xchg
adc
popa
pop
mov
mov
pop
out
rol
cmp
push
xor
xor
repnz
retf
mov
push
cmp
(bad)
(bad)
pop
xchg
xlat
call
loope
jmp
repnz
ins
mov
or
push
clc
mov
cmp
or
(bad)
jns
mov
xchg
and
mov
int
cmp
fucomp
outs
sub
leave
stc
xchg
pop
adc
arpl
aaa
data16
mov
fldenv
out
addr16
das
ss
shl
mov
mov
xchg
pop
jne
and
or
push
div
sub
or
or
repnz
cmp
xchg
addr16
call
nop
test
and
and
sbb
mov
inc
sub
out
inc
xchg
mov
jb
out
sub
inc
dec
add
jge
pop
mov
or
out
and
adc
push
fld
sbb
imul
jns
add
aaa
and
or
hlt
cld
inc
mov
cdq
pop
or
in
push
inc
aam
fidiv
xor
popa
fimul
push
dec
pop
call
pop
fld
lock
xchg
gs
inc
loopne
punpckhwd
and
mov
jmp
or
sahf
test
outs
(bad)
adc
push
lods
adc
adc
xor
adc
dec
aad
and
mov
adc
aad
mov
push
ja
into
jmp
mov
ja
(bad)
or
push
repnz
push
inc
dec
mul
test
sti
and
repnz
loope
dec
push
clc
xor
in
lahf
icebp
lock
out
aad
pop
sbb
je
iret
movs
jno
cmp
sahf
or
jb
cmp
clc
(bad)
jecxz
dec
pop
cmp
ror
enter
add
ss
ss
dec
data16
repnz
xor
and
push
daa
push
stos
mov
(bad)
add
arpl
mov
aaa
test
lahf
cmp
aaa
sbb
cdq
cmps
mov
xchg
push
loopne
repz
pusha
xor
ins
ins
xchg
mov
mov
push
adc
mov
xchg
stos
dec
pop
push
cmc
push
adc
mov
hlt
cmp
cmp
push
ja
dec
dec
outs
pop
sbb
mov
add
(bad)
add
add
dec
xchg
ja
je
addr16
push
ins
adc
cmp
imul
repz
push
sar
push
sahf
test
movs
cmps
add
xchg
push
fyl2xp1
and
ficom
leave
popa
neg
add
mov
xor
lods
or
pushf
jmp
mov
adc
mov
inc
out
cmps
cmp
test
jmp
imul
sbb
and
or
cmp
pop
nop
sub
icebp
or
cmp
mov
stc
jmp
cmps
push
mov
(bad)
int3
icebp
cli
push
gs
or
loop
not
dec
int
xor
(bad)
aad
sub
in
aam
mov
js
int
adc
jbe
loop
xchg
leave
neg
or
(bad)
loopne
or
xchg
add
shl
push
ins
mov
fstp
fist
xchg
mov
cmp
pushf
sub
fsub
fdivr
pop
adc
nop
mov
mov
sbb
(bad)
bts
add
cwde
inc
mov
idiv
rol
or
call
cmps
xchg
adc
or
pop
retf
xchg
into
ins
pusha
aas
jmp
add
mov
aam
push
loop
mov
jg
fsubrp
ins
sar
xor
rcl
in
adc
fnstcw
ror
and
dec
sub
in
mov
add
xor
pusha
jl
(bad)
imul
ret
sbb
aas
inc
adc
outs
std
inc
jnp
sub
ss
xchg
inc
cmp
push
call
pop
stos
sbb
mov
ins
add
cwde
retf
cmp
add
icebp
scas
or
dec
jle
popf
xchg
push
inc
(bad)
icebp
mov
lock
and
mov
mov
aam
and
lahf
imul
aam
mov
ja
jp
mov
add
nop
jle
stos
push
gs
push
dec
out
sub
pop
mov
dec
fistp
jnp
in
pushf
dec
inc
pusha
jbe
in
adc
dec
fbld
xor
pop
mov
fbld
pop
pop
mov
sar
add
mov
sub
jge
test
or
xchg
loope
cmps
int3
fwait
mov
not
fisubr
mov
mov
cmp
not
xchg
push
cmc
dec
cmp
mov
mov
add
mov
push
cmp
add
xchg
sbb
mov
aaa
out
jle
lea
dec
mov
sub
xchg
xchg
mov
dec
out
lahf
jno
sbb
pop
dec
aad
movs
sbb
jge
mov
mov
mov
push
out
inc
push
ds
push
and
mov
rcl
jno
retf
mov
fbld
add
sti
sub
dec
dec
cmp
mov
push
cs
cwde
retf
fdivr
in
pushf
inc
pop
test
(bad)
jp
push
inc
lods
and
dec
add
pop
xchg
sub
mov
xor
mov
retf
jb
mov
lods
xor
sbb
sub
les
ror
jle
push
pusha
dec
dec
adc
sub
loopne
scas
gs
mov
inc
inc
add
ja
icebp
int
jbe
scas
dec
dec
ret
ss
pop
inc
xlat
cmc
dec
push
fcmovne
cmp
sbb
jne
adc
xlat
mov
dec
xchg
icebp
cmc
mov
push
push
dec
xchg
test
in
and
push
popf
mov
sub
cld
dec
adc
jo
mov
test
cli
popa
hlt
das
outs
in
push
ret
pop
mul
pop
xor
loope
or
sti
sbb
inc
xor
jo
pop
test
or
push
enter
push
pop
rcl
repz
cmp
adc
mov
ret
sbb
mov
call
xchg
les
jnp
fidiv
xchg
pop
call
mov
stc
fs
je
(bad)
jb
fs
mov
in
jmp
call
sub
loope
inc
int3
jmp
mov
mov
mov
jmp
push
sti
ret
outs
daa
pop
retf
stos
mov
hlt
ins
fwait
loop
xor
into
cdq
or
mov
in
add
cld
pop
inc
mov
stc
pop
sahf
or
and
adc
mov
or
stc
repz
sar
mov
sbb
or
and
out
pop
mov
stc
sar
jb
sti
pop
mov
(bad)
xor
call
vhsubpd
inc
pusha
mov
cdq
outs
sbb
dec
xor
or
pop
mov
dec
leave
mov
push
das
sbb
in
sub
pop
test
sbb
test
je
hlt
inc
push
ret
out
sbb
gs
ins
jmp
add
aas
int
push
lods
xor
retf
push
sti
xor
out
sbb
mov
mov
outs
test
ss
and
xchg
(bad)
out
inc
mov
rcl
or
mov
mov
rcr
dec
push
add
cmp
ja
es
dec
pushf
fwait
(bad)
test
adc
push
add
popf
sbb
ret
sbb
ret
xchg
push
xchg
icebp
adc
ja
push
xchg
shl
retf
fcmovnb
inc
in
pop
aad
pop
push
sub
push
stos
enter
or
into
mov
(bad)
cmp
test
movs
gs
fucomi
call
inc
pushf
jno
fist
enter
movs
inc
lahf
in
mov
dec
int
and
ror
mov
icebp
mov
lods
pop
xchg
adc
dec
push
pop
(bad)
stos
jns
mov
jp
into
shr
inc
(bad)
push
cmc
xor
and
xchg
stos
gs
and
xchg
stos
push
push
nop
adc
push
stos
loop
popa
inc
pushf
dec
dec
cmp
inc
sub
push
stos
(bad)
cmovp
push
mov
in
aam
test
xchg
aad
mov
pop
sbb
fist
dec
loop
aad
loopne
xor
out
out
mov
add
cs
xor
repz
fnstenv
(bad)
repz
es
dec
retf
out
ss
stos
pop
shl
push
movs
push
xchg
pop
xchg
mov
xchg
mov
sbb
mov
push
mov
sbb
push
jnp
movs
aad
shr
addr16
shrd
push
push
std
adc
lds
push
test
cwde
xor
ret
xor
adc
inc
push
push
push
mov
(bad)
std
inc
cmp
div
push
mov
lea
repz
mov
add
or
fnstenv
mov
hlt
inc
adc
push
fistp
jecxz
push
xchg
mov
xchg
xchg
xor
jg
sub
jl
int3
lahf
jg
loope
mov
jnp
imul
mov
icebp
xor
bound
pop
mov
push
loope
(bad)
xor
add
dec
dec
push
test
fist
pop
dec
mov
xchg
pop
mov
adc
push
repz
fmul
dec
rol
cwde
addr16
retf
ins
mov
rcr
jo
xor
rcl
sub
xor
sub
dec
pop
jge
scas
inc
cdq
inc
dec
int
sbb
adc
aaa
call
mov
xchg
(bad)
jmp
add
cmps
add
jb
mov
call
jae
pop
sub
jno
mov
mov
repnz
or
out
pusha
or
lods
jbe
lds
cmps
push
adc
and
sub
mov
push
stos
mov
dec
retf
dec
mov
fsub
cmps
bound
retf
retf
jge
add
popf
dec
mov
or
shl
not
mov
mov
mov
lahf
cmp
test
mov
loope
adc
in
jge
or
movs
mov
xchg
or
mov
sub
jge
jge
pop
lock
test
loop
pop
je
mov
jle
xor
fisttp
stos
mov
je
lods
dec
xor
shl
and
mov
jmp
mov
ins
dec
push
outs
jns
in
fadd
cwde
sbb
jns
stc
cmp
push
cmp
add
into
xchg
dec
sbb
out
hlt
ret
xor
pusha
xor
stos
out
or
push
out
jp
sbb
in
jge
loope
mov
xor
xchg
test
nop
mov
les
mov
sbb
jmp
loope
lea
loop
int3
imul
mov
movs
mov
xor
sbb
stos
imul
inc
mov
test
ret
fst
repnz
sbb
sub
inc
xor
add
imul
out
push
adc
inc
inc
js
cmp
push
push
cmp
cmp
jle
je
inc
aaa
pop
sub
sbb
into
jp
mov
call
jp
pop
adc
jecxz
dec
loopne
pop
fwait
xchg
push
popf
repz
lock
out
shr
xchg
and
push
das
repz
out
out
pop
(bad)
fisttp
nop
aaa
sub
adc
test
movs
movs
loopne
or
mov
mov
xor
add
out
mov
fnstenv
mov
mov
inc
fimul
cmp
aas
push
aaa
sub
jmp
mov
fwait
dec
inc
sub
mov
aaa
outs
push
data16
loop
pop
enter
and
add
sbb
push
fnstsw
sub
adc
out
inc
inc
mov
adc
(bad)
inc
inc
inc
outs
pop
push
sbb
inc
cli
in
sbb
lea
lods
jl
mov
xchg
popa
mov
sar
or
cli
out
data16
add
mov
bound
(bad)
fiadd
xor
mov
test
inc
(bad)
aaa
fstp
jl
xchg
xor
push
lods
cmp
add
test
mov
push
fnsave
bound
pop
inc
cmp
getsec
ins
popa
rol
sahf
sbb
push
jl
adc
push
cmps
mov
and
icebp
jae
retf
int
daa
iret
adc
out
push
iret
neg
mov
fsub
and
mov
adc
dec
ds
(bad)
int
cmps
lods
repz
retf
mov
jne
sbb
inc
jno
test
push
xor
int
or
cwde
scas
sub
icebp
xor
ins
pop
nop
or
aas
cmps
outs
mov
mov
or
xchg
inc
jmp
xchg
xchg
mov
mov
mov
stos
and
cmps
test
push
aad
sub
or
loope
dec
mov
adc
cmp
jb
push
cmp
es
add
cmp
mov
pop
enter
cmc
std
fs
ret
out
adc
mov
pop
call
sub
ret
inc
mov
repnz
or
cmp
jnp
aad
test
shr
jne
adc
add
inc
mov
pop
sbb
cmp
sbb
or
inc
inc
fidivr
push
dec
jae
pop
xchg
or
inc
add
js
mov
cdq
out
test
jle
(bad)
lds
pop
les
repnz
xor
stc
or
or
dec
fsubr
pop
push
rcr
add
shl
inc
(bad)
lds
mov
jl
dec
jno
stos
retf
sub
xor
add
mov
mov
jnp
add
into
inc
loopne
(bad)
popf
add
inc
sub
lods
jnp
jle
dec
ficom
ret
das
inc
adc
ror
int
(bad)
mov
fstp
call
(bad)
xor
daa
imul
cwde
stos
cld
jge
mov
call
or
push
out
pop
arpl
ja
or
fidiv
dec
mov
(bad)
inc
mov
ficom
add
addr16
xor
fsubr
jl
add
and
addr16
cli
or
adc
fst
xchg
inc
dec
cmp
pop
sbb
adc
jnp
push
push
dec
jmp
jbe
mov
fist
aaa
xor
dec
fadd
pop
xor
mov
jbe
jp
(bad)
inc
mov
jb
lods
sub
inc
(bad)
mov
inc
ins
test
adc
cmp
jmp
scas
pusha
bound
mov
xor
xor
ja
mov
jns
outs
add
ror
daa
inc
mov
push
cdq
pop
pop
daa
test
aas
fwait
cmc
xor
push
mov
mov
(bad)
adc
repnz
movs
sbb
ret
jge
sub
mov
out
ins
pop
out
clc
data16
(bad)
jmp
jge
lea
ins
sub
mul
and
dec
ret
les
lahf
jne
dec
imul
mov
cdq
and
mov
or
stc
das
loopne
inc
xchg
dec
(bad)
cmp
imul
mov
mov
iret
repnz
or
fidivr
imul
mov
sub
pop
adc
mov
repnz
or
xor
pop
mov
ins
mov
mov
ret
push
rcr
fcmovb
ret
and
sub
std
aaa
aam
xor
aam
or
xchg
cmc
sub
xor
push
fdivr
sbb
and
pop
xor
or
cmc
lods
cwde
mov
xchg
push
mov
mov
pop
mov
xor
mov
scas
and
test
xor
mov
xor
add
out
sbb
pop
xor
and
addr16
mov
and
mov
pop
mov
leave
lea
lods
ja
clc
cmp
int
mov
(bad)
iret
pop
clc
jnp
sub
inc
imul
add
(bad)
daa
xor
das
pusha
inc
dec
pop
or
or
jnp
pop
cmp
movs
out
mov
ret
outs
sub
lods
nop
inc
mov
and
icebp
mov
jg
mov
mov
and
les
cmc
fs
mov
cmc
adc
push
mov
add
jl
mov
push
cwde
add
in
aas
movs
push
jb
retf
stos
repnz
fbld
aas
popf
in
rol
inc
pop
test
inc
nop
xlat
xchg
out
dec
cli
je
cld
and
mov
mul
inc
and
add
in
retf
add
scas
(bad)
cmc
out
int3
cmp
(bad)
fnstcw
leave
mov
dec
lds
mov
adc
and
les
out
sbb
and
add
shr
repnz
xor
dec
pop
lgdtd
mov
retf
(bad)
ins
mov
adc
stc
stos
sahf
nop
jb
mov
jge
adc
dec
add
mov
mov
and
xchg
mov
and
test
jecxz
xchg
jl
pop
dec
xor
xor
sbb
mov
dec
hlt
push
jae
hlt
outs
sbb
xor
push
mov
es
cld
dec
sub
rol
fisub
cmps
inc
ds
sub
jne
jecxz
call
arpl
jo
cld
mov
aam
jecxz
data16
sti
imul
sbb
push
retf
pop
jns
out
pusha
shr
fsubr
sub
std
add
pop
dec
and
ret
xchg
or
out
mov
icebp
idiv
sub
cld
popa
js
data16
sub
(bad)
jmp
ds
push
leave
jb
cmp
outs
dec
push
xor
pop
and
leave
ret
hlt
and
fild
sbb
out
dec
jb
out
xlat
pop
push
add
jb
std
call
add
cmp
sub
jo
movs
retf
adc
in
cmps
jp
call
pop
add
ret
cmp
outs
outs
out
mov
or
mov
mov
repz
cmp
lahf
push
jnp
cs
pushf
add
jmp
push
das
pop
push
sbb
or
sub
ins
cdq
retf
(bad)
and
xchg
(bad)
loopne
jbe
jne
sub
rcr
test
fstp
mov
adc
and
mov
ret
stos
dec
lods
iret
mov
dec
cmp
dec
(bad)
ucomiss
imul
adc
(bad)
rol
pop
inc
aaa
mov
push
add
adc
cmp
movs
ror
add
mov
jbe
retf
pushf
mov
ret
pop
add
daa
push
jmp
mov
sbb
retf
lods
mov
ja
dec
movs
sbb
push
xchg
jmp
cmp
and
push
arpl
daa
test
push
and
inc
pop
(bad)
mov
pop
pop
adc
psubusb
vmovaps
and
outs
jmp
add
fwait
daa
add
dec
or
xchg
adc
push
int
mov
mov
rol
adc
pop
mov
leave
dec
pop
aas
ficom
shr
std
mov
push
(bad)
fisttp
lods
or
(bad)
sub
test
dec
mov
scas
push
leave
popf
pop
nop
outs
call
sub
mov
shl
inc
mov
inc
mov
pop
bound
je
test
jp
hlt
jecxz
cmps
je
in
xchg
mov
push
mov
les
arpl
sbb
pop
bound
lds
mov
bound
jl
fst
leave
add
(bad)
cmc
or
lods
pop
jbe
push
retf
jmp
popf
fimul
xor
sbb
xor
imul
mov
add
int3
sub
mov
dec
lods
inc
out
cmp
mov
jmp
inc
arpl
iret
in
ja
nop
mov
aam
sbb
bound
call
pusha
cmp
jmp
jne
mov
imul
ret
out
dec
(bad)
inc
mov
movs
add
in
inc
mov
and
pusha
cwde
(bad)
fcom
sbb
test
push
push
les
xchg
mov
or
jno
icebp
aam
lahf
inc
mov
repnz
cmp
sbb
iret
into
into
into
dec
xor
ins
inc
add
cmp
jae
sbb
push
pop
stc
jmp
push
out
xchg
bound
mov
(bad)
xchg
cld
popa
pop
gs
fwait
cmp
bound
sub
push
pop
scas
or
call
mov
adc
xor
or
jbe
enter
call
ja
add
cli
stos
lods
and
mov
mov
popa
dec
hlt
jmp
les
retf
add
enter
fcomi
aam
imul
dec
int
stos
sub
push
sbb
stc
sti
in
jle
es
adc
inc
dec
push
das
and
les
add
pop
aaa
jp
fidiv
les
xchg
cmc
aas
jl
xchg
(bad)
stos
fidivr
cmp
mov
jbe
and
bound
mov
setae
out
nop
cmc
sub
mov
jno
or
xor
and
pop
pop
and
pop
fbstp
outs
push
xchg
mov
shl
call
cmp
push
lock
dec
iret
push
pop
xchg
ja
lea
sub
mov
movs
loope
dec
jp
dec
jecxz
repnz
retf
daa
dec
xchg
mov
push
imul
std
mov
(bad)
je
cld
sub
adc
xchg
inc
jnp
or
jbe
mov
les
mov
stos
adc
test
jl
cmps
dec
nop
not
inc
or
lods
inc
push
outs
sub
imul
mov
xor
jae
std
pop
pop
fdiv
loopne
enter
clc
dec
cmp
mov
pop
or
dec
xchg
xor
pop
das
into
jbe
or
dec
mov
mov
ins
enter
enter
leave
inc
dec
jno
and
push
sar
xchg
jns
jo
xchg
and
dec
xor
push
mov
xchg
test
popf
or
js
je
icebp
mov
push
test
aam
dec
cdq
cmp
inc
xchg
adc
icebp
pushf
mov
pop
xchg
jle
test
cs
into
inc
dec
ds
sahf
mov
and
or
ror
fadd
shl
cmps
mov
ret
xor
mov
cld
aaa
jmp
fidivr
pop
jg
push
in
mov
test
and
xor
xchg
call
and
fcmovnb
aas
lds
movs
test
push
adc
and
cmp
aam
xor
xor
cmc
cs
lds
hlt
sbb
cmps
xchg
mov
jmp
pcmpgtw
dec
aam
pop
sub
xchg
mov
pushf
jge
xchg
loope
sti
cmp
(bad)
jge
xor
call
mov
or
(bad)
dec
mov
nop
ret
(bad)
push
ret
arpl
cmp
aad
pop
frstpm(287
cmp
nop
out
push
cmp
adc
sbb
hlt
dec
xlat
sti
nop
ficomp
pusha
bnd
ss
pop
imul
mov
add
(bad)
xchg
imul
xor
mov
xor
fisubr
push
ja
rcl
inc
popa
fist
lds
imul
fdivp
imul
(bad)
rcr
jecxz
xchg
cmps
jnp
adc
and
fnstcw
retf
xor
jne
add
push
mov
mov
jnp
loop
mov
ret
neg
nop
cmp
mov
jne
xor
push
repnz
sbb
in
cld
stos
rol
pop
repnz
push
mov
cmps
inc
or
scas
scas
push
(bad)
sbb
jo
iret
fstp
movs
cmp
nop
xchg
sbb
pop
mov
jp
nop
fs
add
xor
or
xchg
jnp
cmp
out
(bad)
push
xchg
loopne
add
test
sub
inc
and
cmc
or
add
cmp
xlat
xor
aam
std
aad
aam
icebp
ins
repz
pop
lods
outs
or
xor
xor
pushf
out
sbb
push
das
fild
push
in
inc
xlat
mov
mov
pop
cmps
aas
push
es
and
movd
mov
pop
pop
daa
test
je
js
pop
cmp
stos
ret
and
mov
aam
imul
add
test
jae
adc
retf
jmp
in
test
dec
inc
shld
std
cld
jg
scas
cdq
cdq
pop
mov
fdivr
jecxz
test
fnstsw
push
into
das
dec
das
pop
xor
pop
icebp
dec
jecxz
sub
cmp
jo
mov
aas
add
cmp
dec
fdiv
test
stos
test
push
cmp
mov
dec
div
jmp
repnz
shl
mov
call
(bad)
and
sbb
mov
imul
sbb
imul
(bad)
jmp
add
imul
sub
fbld
sbb
pushf
ss
fidivr
(bad)
test
mov
les
mov
jbe
adc
ins
test
adc
sbb
pop
inc
jo
pop
mov
or
adc
call
inc
fucomip
repnz
cmc
test
jmp
pusha
iret
sub
dec
dec
int
jnp
xchg
aaa
call
jmp
mov
mov
mov
icebp
or
push
jg
je
xor
out
ins
xchg
repz
pop
mov
(bad)
push
sbb
loopne
popf
mov
or
and
js
push
jb
(bad)
bound
push
sub
data16
lea
cdq
(bad)
sub
shr
mov
ss
je
lods
xchg
mov
icebp
movs
xor
mov
test
add
lods
fwait
(bad)
adc
mov
fdiv
movs
(bad)
adc
pop
scas
test
jo
bound
ins
adc
adc
ficom
jnp
pop
push
cdq
pushf
retf
sbb
scas
inc
fcomp
inc
in
jne
mov
fidiv
pop
jecxz
aam
sub
in
add
mov
inc
pusha
mov
test
jbe
pop
lods
mul
or
popa
push
outs
add
xchg
lods
mov
sbb
das
ficom
inc
fiadd
cmp
pop
jne
mov
inc
ret
jb
repnz
add
aad
jle
cmp
stos
jmp
mov
dec
js
out
dec
enter
push
xor
aaa
lds
(bad)
shl
dec
test
fs
js
or
add
ja
xchg
(bad)
xor
out
bound
fdiv
fbstp
aas
xchg
inc
pop
add
fldenv
scas
sbb
cmp
fcom
std
jmp
jmp
scas
fmulp
jl
fs
out
xchg
div
mov
xchg
in
(bad)
popa
pushf
scas
and
mov
int3
push
fdivr
dec
mov
push
mov
imul
mov
mov
les
ss
pushf
mov
sahf
inc
ds
push
scas
xchg
les
pop
aas
icebp
popa
fucomip
push
jbe
call
enter
pop
jne
and
push
dec
jne
imul
movs
xor
cli
cmc
inc
mov
(bad)
enter
push
xchg
(bad)
pop
add
xchg
xor
pop
jb
xchg
and
dec
nop
mov
ins
jmp
movs
mov
push
cmp
mov
arpl
xor
xor
add
mov
mov
in
movs
ss
aad
sbb
push
lds
dec
ins
movs
mov
ds
leave
mov
jmp
and
retf
(bad)
pop
lahf
enter
lea
lods
adc
iret
shl
dec
das
sub
jl
gs
inc
(bad)
into
jle
xchg
ret
xchg
addr16
les
(bad)
adc
das
add
ins
int3
ins
(bad)
out
cmps
cmc
inc
into
or
jno
call
adc
add
add
xchg
mov
into
sub
icebp
mov
(bad)
pop
cmp
cmp
adc
or
jnp
ds
nop
push
mov
fistp
pop
mov
lods
pusha
mov
push
mul
icebp
fld
pop
xor
and
xor
sbb
(bad)
out
cmps
stc
sbb
retf
outs
cmp
adc
inc
xchg
pop
daa
cmp
test
and
xchg
pop
fidivr
int
mov
movs
pop
test
fsubr
repz
not
pop
call
dec
xchg
or
arpl
arpl
adc
cmp
fist
and
xchg
push
fistp
mov
push
xchg
fcomp
mov
int
std
data16
(bad)
out
retf
push
pop
call
dec
scas
jnp
aad
retf
sub
adc
ret
xchg
les
ins
bound
mov
cmp
fistp
pushf
fstp
mov
jbe
(bad)
cmp
mov
ins
test
mov
sahf
int3
loope
lods
push
jo
jg
in
push
inc
sub
fmul
push
mov
cmp
lock
lahf
les
mov
push
xor
pusha
sbb
mov
sahf
adc
sub
jo
mov
pop
aam
mov
movs
mov
dec
(bad)
aaa
ret
retf
xchg
imul
(bad)
and
call
xchg
sub
mov
loopne
aam
fistp
aaa
inc
mov
nop
add
add
or
fisubr
jecxz
fidiv
call
cmp
pop
push
outs
push
xor
push
or
fs
icebp
in
xor
mov
aam
fdivr
test
cmc
out
push
hlt
pop
pusha
jmp
sbb
ret
xor
and
(bad)
pusha
aad
inc
add
or
fmul
sub
mov
and
sti
in
ins
add
cli
add
inc
pop
mov
push
mov
inc
out
sbb
push
sar
cdq
cvtps2pd
sub
sub
imul
jb
scas
ror
adc
pop
and
sti
xchg
dec
das
loopne
shl
sub
scas
sub
inc
inc
pop
dec
cmp
ss
xor
push
jne
xchg
enter
adc
ret
mov
outs
pop
mul
pop
test
cmp
sub
and
and
xchg
push
mov
imul
mov
xchg
arpl
outs
stos
xchg
mov
inc
jle
xchg
fsub
scas
scas
loop
(bad)
jg
mov
in
pop
repnz
and
add
or
xchg
leave
jnp
ror
or
jnp
lea
pop
lods
in
loope
stc
push
add
mov
mov
inc
sub
mov
and
sub
mov
and
fldenv
push
sbb
xchg
cmp
push
dec
aas
xchg
sahf
sahf
or
addr16
pop
frstor
xlat
mov
xor
inc
cmp
sbb
inc
mov
and
jle
cmp
or
fld
iret
adc
inc
and
shl
popf
shl
jb
(bad)
cdq
push
dec
xchg
retf
aad
dec
inc
xor
xor
out
jbe
mov
cmp
sub
dec
xor
sbb
push
movs
xchg
lods
pop
xlat
bound
in
pop
aaa
or
adc
retf
xchg
or
sbb
and
xchg
arpl
out
sbb
mov
mov
xor
jmp
fmul
and
cwde
stos
jbe
loope
shl
and
dec
sub
stos
test
sbb
je
inc
imul
mov
rcl
fdiv
aas
shr
xchg
out
cmp
pop
ret
ret
imul
push
xor
or
cmp
adc
mov
mov
popf
sub
push
movs
shl
inc
adc
add
imul
push
popa
jge
jecxz
adc
lds
mov
sti
arpl
pop
mov
dec
inc
stos
iret
repz
jmp
push
mov
pop
sbb
mov
xchg
enter
rol
aaa
aas
retf
lods
popa
push
loope
adc
adc
ret
push
stc
adc
mov
push
addr16
push
(bad)
mov
arpl
sub
arpl
pop
in
test
(bad)
mov
aam
out
(bad)
mov
mov
sub
(bad)
fist
test
push
dec
cmp
call
(bad)
in
jge
push
inc
cld
loopne
sub
addr16
mov
jmp
dec
mov
adc
arpl
call
add
add
mov
lods
mov
push
inc
stc
mov
imul
pop
in
dec
fadd
jmp
push
out
mov
sub
sbb
jg
scas
xchg
push
push
push
scas
test
pop
call
nop
fidiv
add
add
sub
jno
in
bound
mov
xchg
mov
movs
xor
loopne
xchg
(bad)
into
pop
or
pop
ret
mov
add
outs
ins
adc
ficomp
iret
dec
push
jge
jae
xor
(bad)
aad
and
outs
int3
sub
pop
cmp
jmp
call
(bad)
dec
stos
mov
jmp
fisubr
retf
enter
ins
jmp
mov
std
xor
and
cmp
test
mov
push
sahf
sub
ss
jp
jno
dec
cmc
push
and
and
stos
stos
mov
add
mov
cld
xchg
cmps
lods
shr
popf
(bad)
imul
mov
pop
xchg
sbb
mov
or
in
(bad)
out
mov
es
into
out
les
popa
popa
out
es
jle
inc
sbb
lock
std
mov
bound
(bad)
cdq
sub
shl
loop
inc
xchg
sub
pushf
(bad)
and
jne
cwde
mov
sub
add
ins
pop
sub
mov
xor
xor
lock
sbb
push
ds
sub
cmp
and
(bad)
lahf
fcmovnbe
je
pushf
enter
movs
jmp
dec
xchg
addr16
cmp
cmp
mov
sub
in
fwait
jb
into
mov
(bad)
adc
sti
or
shr
xor
push
and
or
sbb
xchg
push
into
ins
je
add
or
lahf
cmc
sti
xchg
or
mov
mov
popa
(bad)
ret
xchg
clts
pop
inc
add
inc
cli
jl
cmp
adc
adc
nop
xor
xor
(bad)
mov
cmp
loope
and
and
ret
call
sar
push
aad
loope
add
lock
jg
jmp
(bad)
imul
sahf
scas
sbb
push
out
enter
sub
in
mov
mov
xor
in
in
xor
sti
shl
addr16
in
mov
cmp
or
nop
rcr
int3
mov
retf
mov
jg
popa
sub
in
and
repz
cli
lahf
inc
retf
ja
adc
jmp
add
push
mov
fidivr
cmp
ja
dec
retf
rcl
lds
mov
(bad)
fimul
ins
mov
call
sbb
mov
shr
movs
imul
daa
add
mov
jle
xchg
fistp
aad
frndint
call
push
int3
add
jae
fcomp
add
fidivr
adc
inc
xlat
mov
imul
and
xchg
fld
(bad)
push
add
shl
pop
mov
jns
(bad)
sub
popf
shl
xchg
fmul
or
sub
dec
and
pusha
pop
popf
add
jo
push
mov
dec
lock
adc
and
xchg
inc
iret
pop
xchg
cld
push
dec
rol
xchg
adc
out
mov
pusha
shr
stos
push
pop
sar
dec
scas
push
adc
pop
in
or
aam
inc
push
dec
mov
test
dec
dec
mov
sub
and
adc
scas
(bad)
outs
mov
ds
ret
jae
stos
xor
cmp
(bad)
adc
imul
cld
(bad)
popf
mov
cmps
ror
lds
pop
push
and
in
addr16
test
sub
xor
and
xchg
cmp
mov
mov
loope
xchg
out
adc
aam
pop
icebp
mov
mov
xor
sub
cmps
mov
mov
fs
jne
add
(bad)
cmp
lock
sbb
pushf
rcl
or
cmps
shl
adc
push
aad
cmp
jecxz
sub
mov
enter
scas
inc
sub
ins
mov
stos
jns
push
scas
in
xchg
inc
xor
push
push
sbb
setge
into
inc
inc
or
addr16
imul
inc
(bad)
or
add
les
mov
and
aad
mov
aam
sub
mov
imul
mov
lea
xlat
lods
mov
enter
mov
cmp
sbb
mov
enter
xchg
loope
mov
jmp
repnz
arpl
neg
adc
scas
fld
stos
pop
jns
cmc
stc
cli
pop
dec
rol
mov
fist
ds
hlt
outs
cmp
clc
and
adc
push
xlat
cmp
adc
push
imul
das
pop
dec
ja
mov
pop
pop
shl
lahf
cmps
push
(bad)
cmp
rol
iret
mov
sub
pop
xor
inc
(bad)
sahf
sub
lock
(bad)
xor
cld
movs
pusha
pop
inc
test
sbb
mov
dec
inc
sbb
or
sti
jmp
xchg
or
push
inc
dec
mov
dec
mov
dec
daa
xor
push
sbb
es
jnp
jl
jbe
sbb
xor
jl
xchg
mov
das
lds
retf
stos
out
into
and
xchg
stos
inc
jne
mul
ja
mov
(bad)
sbb
loop
in
jg
(bad)
jno
dec
rol
and
or
adc
fwait
xchg
cmps
aas
fsubr
add
(bad)
call
add
push
mov
mov
mov
pop
adc
xchg
loop
add
sahf
xchg
sbb
dec
pusha
dec
rcr
mov
push
hlt
popf
imul
add
pop
loop
icebp
mov
(bad)
pusha
xchg
cmps
and
mov
and
mov
pop
lods
pop
outs
in
stos
pop
push
leave
adc
jns
mov
test
push
stc
xor
sub
pushf
adc
loopne
cmps
test
inc
or
mov
push
cdq
inc
rol
aaa
cmp
push
stc
mov
sub
pand
sub
mov
inc
shl
imul
jo
cmc
add
clc
push
jmp
inc
stos
jle
inc
or
fsubrp
sub
aam
mov
xor
xor
and
cmp
xchg
loop
call
cdq
sub
lahf
das
repnz
and
popa
pop
adc
aad
or
js
xchg
mov
aaa
ds
dec
movs
inc
mov
push
adc
adc
aad
mov
daa
mov
pop
in
jnp
push
or
cmps
add
aam
mul
mov
jg
sub
popf
jg
pop
add
outs
sti
pop
cbw
inc
jp
shl
int3
sub
jmp
in
and
add
add
test
pop
xor
cmc
mov
cmp
stos
fild
popa
movs
mov
call
loopne
inc
stc
sub
xor
mov
and
loop
sbb
push
mov
push
adc
pushw
adc
and
stos
lahf
adc
cmp
leave
(bad)
pop
ror
add
bound
vmovaps
retf
jo
enter
ror
sti
dec
push
jbe
pop
jmp
movs
xchg
fisubr
sbb
adc
pop
fdivr
add
mov
sar
pushf
sub
cmp
je
adc
push
sbb
mov
pop
mov
mov
sub
sbb
cli
ins
and
mov
pop
ins
fldenv
cli
sbb
jmp
xor
sti
dec
outs
mov
mov
retf
mov
and
dec
call
push
xchg
push
pop
cmps
retf
(bad)
not
stc
lds
repnz
pushf
daa
ficomp
ins
ficomp
and
jae
pushf
retf
push
jbe
fwait
add
mov
sbb
add
test
pop
and
lock
jl
ret
out
xor
into
jne
xor
mov
dec
add
sti
and
in
mov
push
je
(bad)
mov
fsubr
outs
scas
stc
in
push
inc
cmp
test
xchg
fdivr
gs
cmp
or
nop
push
add
cmp
jg
ja
inc
in
xchg
dec
cwde
dec
loop
aas
pop
es
out
mov
push
jmp
pop
pop
pop
stos
sti
push
mov
add
cmps
xchg
rcl
icebp
pop
out
dec
cs
movs
cmps
(bad)
mov
mov
dec
in
inc
mov
mov
xchg
pushf
and
(bad)
cdq
mov
enter
mov
jne
xchg
cwde
and
xlat
in
adc
xor
push
sub
dec
add
sub
or
push
cwde
cmps
(bad)
aas
(bad)
call
in
std
sbb
scas
sub
cli
repz
mov
stos
popa
(bad)
dec
aas
nop
add
pushf
sub
repnz
rcl
stos
jmp
cmps
arpl
jbe
adc
or
fisub
push
sub
xchg
cmp
inc
mov
les
rol
ror
sbb
and
and
das
cdq
adc
inc
mov
jbe
fwait
mov
out
sub
push
jnp
add
fwait
xchg
dec
inc
hlt
(bad)
addr16
add
pusha
adc
das
push
and
pop
adc
gs
pop
push
lods
xchg
or
inc
or
cwde
icebp
ja
neg
push
cmp
adc
inc
sbb
aas
aad
fsubr
mov
jp
enter
jp
push
sub
jmp
sbb
xchg
loop
and
out
loope
clc
pop
shr
add
rcl
popf
inc
mov
aad
pushf
test
ficom
retf
(bad)
xlat
inc
inc
or
aad
mov
in
xor
outs
add
cmp
shl
sub
mov
test
jge
leave
test
and
mov
xchg
jb
xor
mov
jae
imul
aam
lds
ret
adc
sbb
inc
into
xchg
add
cs
lock
or
adc
(bad)
outs
outs
pop
add
div
jo
fisubr
xchg
aaa
dec
mul
mov
enter
push
adc
sbb
(bad)
mov
neg
mov
or
dec
dec
lahf
pop
push
or
jecxz
imul
jns
jb
push
ins
lea
out
je
add
pushf
fs
lahf
jp
rcl
mov
test
scas
mov
into
dec
xchg
repz
jp
jo
ds
jne
inc
prefetch
adc
mov
jo
loopne
icebp
fwait
rcr
push
xchg
jb
xlat
mov
faddp
mov
movs
aam
cmp
nop
push
push
push
mov
pop
fucomp
cmc
push
jge
out
push
in
xlat
jecxz
fisubr
(bad)
jmp
scas
inc
xchg
adc
mov
sbb
xor
push
mov
fs
fsub
in
adc
imul
jmp
jl
mov
cmp
mov
loopne
dec
sbb
cmp
in
in
ds
jae
dec
xor
jle
in
fcos
jno
(bad)
outs
sahf
icebp
es
out
shr
jb
and
std
xchg
stos
lods
sahf
adc
outs
sub
bound
es
push
sti
and
or
sub
cmp
or
lds
data16
daa
addr16
sahf
in
rcl
lods
and
pop
or
push
pushf
movs
dec
out
cmps
or
bound
movs
imul
leave
clc
test
fmul
xlat
mov
inc
mov
mov
jp
xor
sar
push
mov
and
inc
push
in
mov
(bad)
pop
xor
fwait
mov
shr
inc
jp
lds
cmp
jb
mov
call
and
ret
add
xchg
mov
(bad)
repz
outs
add
xchg
aad
js
ror
add
jmp
adc
mov
bound
pusha
xchg
dec
inc
into
addr16
jecxz
call
mov
outs
mov
movs
jg
and
repz
mov
mov
add
stos
push
mov
loope
dec
mov
jle
std
rcr
cmps
push
and
aam
xchg
jns
pop
inc
inc
in
lods
ret
inc
push
lock
push
adc
push
gs
xchg
addr16
ret
stc
add
ds
xchg
xor
dec
push
jg
add
lds
add
cwde
xchg
cs
(bad)
xor
call
mov
dec
mov
mov
dec
push
inc
data16
fcmovnu
aaa
shl
outs
mov
jmp
shl
or
bound
pop
mov
xor
fmul
push
outs
icebp
stos
(bad)
and
stos
push
mov
cmp
xor
dec
add
test
inc
inc
xchg
inc
xchg
sbb
addr16
in
or
or
sbb
jno
push
cdq
and
and
sar
xchg
stos
pusha
mov
dec
loopne
mov
sub
iret
imul
xchg
push
cmp
test
les
stos
mul
test
in
push
test
inc
sar
or
cmp
jae
lock
dec
lds
hlt
cmp
jb
dec
lea
jle
sub
ins
sub
pop
aaa
lahf
push
retf
jb
xchg
stc
jmp
retf
jnp
pushf
mov
fdivr
pop
sbb
xlat
test
sub
sub
ja
pop
int
(bad)
push
rcl
push
xor
and
jno
cli
(bad)
cs
shl
push
inc
ss
mov
and
jno
mov
cmps
loop
icebp
sub
mov
mov
ret
jo
in
add
cli
shl
out
mov
push
ret
xor
lock
call
xor
sbb
retf
popf
cmp
add
iret
xchg
loope
pop
(bad)
cmp
mov
pop
xchg
add
pop
xor
pushf
push
mov
inc
mov
sti
int
scas
mov
lods
iret
int
(bad)
jecxz
fcom
xchg
paddsw
mov
adc
dec
mov
dec
add
xchg
lods
push
push
retf
pop
loop
xchg
adc
sub
cmp
inc
push
cld
mov
movs
cmp
daa
popf
out
rcr
gs
pop
mov
fwait
int
mov
sti
mov
inc
cwde
pop
call
mov
test
jl
push
(bad)
jnp
scas
and
call
sbb
inc
sbb
mov
dec
add
jmp
iret
loop
cmps
aad
mov
mov
adc
push
xchg
dec
lahf
cld
sbb
lock
int3
aas
dec
fisttp
in
test
mov
inc
test
mov
int3
stos
fst
addr16
loope
sbb
xor
push
inc
jo
das
mov
push
aas
cmp
call
mov
rol
mov
mov
xor
cmps
fwait
sbb
icebp
inc
cmp
(bad)
adc
fdivr
sub
jmp
call
push
fwait
adc
mov
mov
cdq
mul
add
push
mov
sbb
mov
test
mov
fnstsw
out
movs
(bad)
adc
xor
push
and
pop
(bad)
(bad)
mov
addr16
jo
push
dec
test
fldcw
sbb
ja
push
addr16
(bad)
jns
pop
mov
pop
pop
fs
push
in
ret
adc
(bad)
out
jmp
push
push
into
fwait
adc
jmp
xlat
pop
into
sub
sbb
or
mov
sbb
mov
in
and
popf
dec
call
neg
jg
std
fst
push
inc
xchg
sub
fimul
int
(bad)
mov
or
es
dec
inc
push
jg
bound
fdivr
icebp
lods
sub
or
adc
jl
xchg
jl
pop
mov
pop
gs
nop
loope
nop
mov
cwde
xchg
push
xor
fimul
xchg
pop
add
clc
jmp
xchg
dec
lods
pushf
sub
jmp
repnz
fcomp
out
aaa
stc
dec
gs
jp
call
jmp
adc
scas
push
add
push
jnp
xor
add
dec
gs
xor
cmc
addr16
ficomp
retf
imul
add
jmp
push
adc
fisttp
jp
cmp
stc
mov
pop
lods
icebp
pop
mov
pop
jns
int3
daa
fild
jmp
loop
xor
lods
sub
mov
push
jns
enter
retf
cmp
std
fistp
and
xchg
ret
sub
shl
or
hlt
xchg
or
dec
cmp
sahf
mov
inc
pop
aaa
jge
sbb
mov
movs
aad
movs
or
or
dec
out
and
push
fcomi
jp
imul
lea
inc
jp
(bad)
not
adc
jns
mov
adc
lods
stos
or
das
push
test
retf
popa
mov
cmps
jb
int
lahf
xchg
sub
pop
into
cwde
adc
shr
fadd
ror
sbb
pop
mov
push
movs
xor
rcl
cwde
cmp
test
mov
aas
inc
sbb
repnz
ror
icebp
mov
test
call
ror
pop
adc
jb
lods
ds
dec
shl
sub
xor
or
aaa
jae
idiv
lods
and
pop
and
or
popf
push
or
lock
aad
lods
and
xchg
and
jmp
loop
and
xor
mov
mov
ins
movs
mov
xor
mov
sbb
sbb
fld
out
mov
push
push
pop
pop
inc
cmp
mov
jbe
rol
scas
push
jbe
cmps
cmps
jl
push
gs
pop
jp
addr16
lods
imul
or
not
xchg
pop
push
pop
movs
push
cwde
pop
jmp
int3
ret
pop
fwait
in
fistp
pop
mov
cmps
cs
test
sbb
cli
mov
mov
jo
out
sub
fbld
sbb
dec
shr
jbe
sub
scas
pop
hlt
arpl
xchg
fdivr
lock
and
push
adc
aas
jge
out
or
imul
cmps
(bad)
repnz
add
pop
and
xchg
hlt
mov
imul
mov
sbb
jmp
out
push
push
add
ret
add
sub
jnp
or
mov
xbegin
jp
mov
shl
push
les
sti
mov
(bad)
aaa
xchg
sbb
cwde
in
out
sahf
mov
and
xor
fcom
test
sbb
adc
mov
sahf
out
sub
cli
aas
pushf
imul
outs
das
nop
push
add
int
test
cmp
or
jle
(bad)
sbb
or
retf
mov
ror
sub
lock
mov
jp
cmp
shr
imul
mov
scas
xor
mov
sub
leave
dec
das
sub
jnp
cmp
adc
fcmovu
in
or
pop
jb
inc
mov
movs
retf
gs
lds
xchg
pop
push
mov
or
shr
test
jle
and
xchg
add
dec
mov
mov
dec
cmp
adc
mov
movs
leave
pop
fidiv
(bad)
mov
loope
sbb
mov
inc
adc
test
dec
mov
adc
push
idiv
ins
adc
aas
call
repz
retf
inc
leave
stos
shr
scas
and
outs
clc
jne
push
add
push
mov
out
ret
and
gs
out
retf
xor
inc
lods
shl
jmp
dec
cmpxchg
or
(bad)
jo
es
or
sbb
test
pop
sub
mov
pop
sbb
jp
jno
(bad)
dec
inc
dec
aam
sbb
out
arpl
push
ret
ins
adc
xchg
clc
push
push
xchg
rcr
mov
fistp
in
leave
jge
or
test
push
mov
xchg
or
inc
imul
adc
popa
mov
aad
(bad)
jnp
inc
mov
sub
push
adc
retf
pop
sti
scas
inc
cdq
out
xchg
jmp
ficom
pop
scas
mov
imul
jnp
dec
push
jbe
add
popf
mov
inc
neg
js
cmp
jb
add
jno
or
(bad)
shr
jecxz
jge
and
sbb
mov
mov
jmp
arpl
xchg
lahf
mov
popf
daa
mov
int3
les
pop
inc
enter
pusha
xor
mov
mov
or
xlat
rol
lock
sub
xor
fdivr
mov
repz
imul
test
fisubr
cmp
adc
and
pop
adc
daa
xor
outs
and
test
mov
outs
jmp
or
rcl
pop
push
sub
adc
xor
mov
lods
adc
sub
stos
fimul
dec
pop
test
movs
mov
jnp
rcl
push
stos
and
dec
pusha
adc
push
loope
cs
cmp
pop
xor
xchg
outs
inc
inc
aaa
add
xor
push
aad
out
pop
jecxz
in
add
cmp
push
and
jg
gs
jb
loop
in
adc
out
clc
mov
sbb
leave
push
ja
push
clc
jno
mov
je
and
leave
pop
imul
sub
out
mov
test
ficom
mov
jbe
je
cmc
div
and
cmp
or
mov
mul
pop
or
ret
mov
dec
call
(bad)
lock
jecxz
icebp
jae
inc
ficomp
rol
lock
inc
aas
mov
adc
pop
add
add
mov
xor
pushw
or
and
ja
xchg
xor
out
pop
and
mov
adc
jle
jge
pop
jge
add
xchg
rol
es
test
adc
push
pop
adc
or
les
cmp
mov
mov
jecxz
sub
jmp
ds
jae
sub
inc
fdiv
or
int3
hlt
fcomp
(bad)
jae
mov
xor
loopne
or
dec
pop
int3
and
adc
js
mov
outs
sub
dec
push
jg
jnp
adc
cmovbe
dec
and
and
xor
mov
stos
or
inc
leave
das
or
lds
xchg
cli
bound
lods
dec
cmp
aam
push
mov
jg
repz
mov
sub
aas
aam
loop
repz
mov
xchg
les
sahf
(bad)
jbe
pop
dec
fwait
outs
bnd
loop
out
xchg
jo
pop
retf
stos
(bad)
mov
out
cs
mov
mov
push
mov
aaa
mov
call
jl
test
rcr
and
call
nop
sub
mov
ret
jle
sbb
push
enter
adc
rcl
repz
sub
inc
xchg
scas
mov
in
pop
(bad)
repz
clc
daa
cmps
jge
jbe
mov
dec
push
mov
fadd
fcmove
push
in
out
movzx
test
dec
fsubr
mov
fcom
xchg
mov
data16
inc
dec
xchg
jmp
push
imul
in
dec
inc
dec
sti
inc
add
loopne
gs
mov
xor
jno
leave
mov
das
push
mov
jae
jecxz
lds
add
pushf
jl
dec
dec
adc
jnp
and
mov
xor
dec
mov
test
out
pusha
xlat
fwait
je
rcr
aaa
add
sub
or
sbb
cmp
enter
idiv
mov
cmp
aam
and
int
mov
push
nop
xchg
lea
fmul
addr16
mov
adc
hlt
iret
mov
xchg
push
add
cdq
popf
retf
cmp
sbb
ret
shl
mov
lds
pushf
stos
ficom
jae
push
pop
int3
fisub
jl
xlat
xchg
xor
xor
dec
sahf
cmp
jbe
sub
add
push
das
sar
mov
add
ret
push
and
cs
pop
mov
and
out
cmp
add
movs
mov
std
pop
popa
pop
adc
aam
je
pop
sbb
xchg
push
and
call
or
aas
aas
jecxz
mov
jg
stos
clc
aam
jle
mov
dec
jb
mov
fldenv
cwde
or
rep
push
push
add
xchg
or
xchg
scas
jb
enter
call
adc
aam
fbstp
(bad)
xchg
add
mov
xlat
or
adc
aaa
jbe
div
sub
imul
gs
fadd
fdivr
pop
call
pop
loope
dec
push
and
jno
out
adc
xlat
and
aas
jg
dec
jo
jmp
pop
jecxz
push
ins
jb
cmp
fs
jbe
sbb
(bad)
dec
into
xchg
lods
bnd
es
mov
sbb
dec
or
push
jb
xchg
aam
or
and
pop
pop
cmc
inc
push
push
hlt
adc
cmp
push
sbb
out
lds
xchg
cmp
and
fwait
mov
add
enter
adc
les
xchg
stc
fld
call
ss
(bad)
cld
mov
loopne
or
or
xchg
adc
mov
sbb
scas
jae
mov
sub
adc
aam
ja
scas
adc
aad
cld
push
jp
add
test
call
fadd
sti
mov
dec
(bad)
ret
out
jecxz
(bad)
jne
mov
popf
add
dec
mov
enter
das
sbb
pushf
into
add
mov
loopne
ins
fild
in
pop
stc
test
jno
sub
pop
mov
push
pusha
scas
push
inc
jmp
aad
mov
push
adc
daa
rcl
out
das
mov
enter
test
imul
(bad)
out
jns
inc
mov
xor
mov
or
enter
and
or
adc
gs
aaa
ins
and
call
ds
in
cmp
xlat
jmp
xlat
fs
fbld
cmps
scas
xchg
in
push
ja
dec
popa
mov
popa
or
retf
(bad)
mov
mov
loopne
fidivr
sbb
aam
jb
cmp
mov
hlt
xor
or
push
lock
fwait
out
push
jmp
mov
push
scas
fld
je
and
(bad)
stos
fs
xor
adc
jmp
(bad)
mov
bound
js
data16
inc
mov
cmp
mov
cli
xor
cld
adc
stc
shl
retf
shl
add
lahf
in
jb
inc
lahf
das
adc
push
add
push
loop
and
out
mov
popa
mov
imul
scas
jbe
aam
lea
fimul
(bad)
xor
and
aad
shl
xchg
jl
push
mov
pop
rcl
rcl
cmps
push
mov
es
jnp
mov
push
add
cdq
not
and
les
pushf
xchg
out
push
fstp
jbe
sbb
fiadd
xlat
add
inc
pop
push
aad
pop
and
mov
das
loopne
add
xor
daa
in
push
outs
add
add
jmp
cmp
pop
ret
add
pop
xor
xor
add
jno
shl
fmul
shl
ret
dec
dec
test
out
jmp
jbe
fwait
data16
lahf
aas
loopne
popa
movs
out
popf
inc
mov
inc
adc
xchg
sub
mov
fist
xor
lods
(bad)
push
mov
popa
xchg
js
add
cs
loop
ucomiss
idiv
mov
cmp
test
push
mov
pop
cmp
fs
xor
cmp
cdq
dec
cmp
bound
cmp
cdq
scas
test
ficom
fild
mov
not
mov
movs
sub
loopne
nop
pop
mov
jae
out
jae
outs
int3
dec
push
shl
idiv
cmc
add
mov
push
pxor
and
in
xor
and
jg
lock
pop
(bad)
leave
jl
pop
pop
inc
adc
pop
gs
dec
xor
bound
xor
aaa
out
mov
xor
xchg
sbb
in
(bad)
xlat
(bad)
pop
(bad)
mov
mov
dec
push
lods
dec
and
daa
hlt
neg
xor
cmp
adc
mov
sbb
sub
ins
dec
in
sahf
ret
jecxz
(bad)
pop
cmp
ins
jns
sbb
out
mov
inc
das
inc
xor
cmp
mov
sub
pop
cmps
mov
inc
mov
out
in
xchg
sub
(bad)
cmp
sub
rcl
pusha
jno
dec
jae
mov
and
jecxz
jnp
int
daa
cmc
push
jns
enter
mov
dec
adc
adc
mov
adc
mov
fsub
sub
popf
frstor
scas
repnz
cmp
jmp
rcr
inc
inc
outs
movs
adc
mov
aaa
stos
movs
pushf
sbb
xchg
sbb
sub
inc
xlat
dec
popf
mov
iret
(bad)
push
mov
mov
popa
inc
leave
mov
mov
mov
xchg
sbb
cmps
push
loope
adc
icebp
imul
jl
and
xor
pusha
push
pop
dec
movs
or
sbb
xlat
mov
out
jo
scas
push
imul
mov
cmps
mov
add
add
fidiv
ja
xor
mov
sub
lods
and
add
inc
test
outs
(bad)
fwait
dec
rol
lahf
inc
inc
sub
inc
fmul
jl
icebp
cld
and
in
add
pop
into
std
vsqrtpd
xchg
test
mov
add
xchg
add
jge
jecxz
in
and
outs
shl
cmps
fcom
aaa
daa
sar
pop
mov
and
pop
xor
sub
pop
jge
pop
stos
test
lods
mov
add
das
jmp
outs
test
call
fidivr
jg
and
outs
or
jmp
cmp
stos
aas
popf
in
sbb
or
jbe
test
lods
mov
call
lods
jge
push
inc
mov
sbb
les
push
inc
shr
push
es
out
dec
sub
les
mov
dec
and
add
sub
add
mov
cdq
or
mov
cmp
stos
inc
das
mov
cmp
xlat
pop
sub
xchg
test
and
mov
xchg
and
mov
clc
mov
dec
cmc
repz
sub
push
call
test
adc
sti
shr
push
or
popf
mov
mov
fdivr
jl
push
jns
int
dec
pop
push
jnp
add
fmul
sub
or
test
loopne
cmp
sub
test
aas
std
push
iret
cwde
xchg
je
sbb
add
or
mov
cmp
je
add
adc
inc
rol
pop
cmps
repnz
movs
cmc
inc
bound
inc
sbb
test
jo
push
sub
mov
ss
pminsw
lea
js
ins
retf
mov
sbb
sbb
mov
xor
mov
loop
lods
jne
xchg
pop
mov
ror
sub
imul
or
punpckhbw
push
push
pop
jae
and
out
inc
popa
cmp
pop
or
add
fldenv
(bad)
movs
adc
pop
pop
stos
and
add
cwde
cmps
adc
mov
xlat
(bad)
test
in
test
repnz
fist
jo
adc
into
xchg
pop
xchg
cmp
movs
mov
sbb
jecxz
push
pop
xor
jmp
ret
bound
mov
scas
loopne
push
push
hlt
out
iret
adc
cs
addr16
mov
fidiv
xchg
data16
xor
mov
push
mov
jno
sbb
(bad)
int3
add
jmp
mov
hlt
loopne
lea
cmp
(bad)
outs
push
xor
push
sbb
sub
push
mov
lods
cli
popa
in
or
(bad)
call
add
jp
gs
fsubr
jo
sbb
mov
xchg
xchg
lds
arpl
sbb
inc
loop
cwde
out
jp
add
scas
mov
test
xor
pop
mov
jmp
mov
mov
xor
pop
out
mov
retf
add
push
jae
aam
cmps
fwait
jp
sti
xchg
fidiv
inc
fcomp
retf
push
inc
push
daa
cmp
fs
jo
mov
cwde
pop
pop
xor
sbb
lods
loop
inc
push
dec
les
addr16
lods
xchg
xor
sub
sbb
cmp
repnz
push
mov
int
outs
pop
jb
not
mov
cmp
jge
jg
push
scas
dec
enter
push
ds
outs
mov
cwde
or
rcl
(bad)
rcl
sbb
ins
or
jle
dec
inc
add
cld
mov
arpl
and
ja
pop
arpl
shr
outs
aaa
aam
pushf
inc
shr
enter
push
sahf
out
shl
dec
push
add
jno
pusha
or
mov
push
fist
frstor
xor
dec
or
adc
mov
std
stos
sbb
sub
int
and
jb
ds
outs
repz
mov
ja
sahf
pop
inc
fwait
mov
loope
and
add
stos
fstp
aad
dec
fisubr
in
push
sub
or
rcr
fidiv
pop
clc
(bad)
daa
aad
or
inc
jmp
fwait
mov
push
mov
cmps
aaa
mov
jecxz
sti
mov
jge
mov
mov
mov
pop
cdq
ret
xlat
ja
sahf
xor
add
jmp
mov
jne
cmp
jp
dec
xor
xor
adc
adc
jmp
inc
pop
pop
out
and
test
fs
std
sbb
and
push
ins
dec
outs
mov
fbstp
fwait
cmp
movs
movs
fsub
je
or
shr
mov
int
xchg
mov
fs
add
daa
jb
stc
and
dec
sub
sahf
imul
je
pop
or
fucomip
sti
mov
pop
mov
(bad)
add
add
adc
popa
aaa
jle
std
(bad)
cwde
loopne
jmp
cmp
ror
sbb
add
add
sbb
mov
push
jne
adc
sbb
popa
fcmovbe
jns
je
je
cmp
inc
jno
cmp
sbb
inc
clc
push
test
popf
xchg
mov
outs
push
gs
stos
jae
mov
push
jg
sub
neg
out
adc
add
push
jge
adc
rcl
pop
loopne
ret
push
je
movups
loop
sahf
push
retf
cmc
shr
xor
fadd
mov
pop
loope
dec
stc
test
icebp
jmp
scas
ret
mov
loop
call
xchg
jno
ins
xor
cld
not
stos
jbe
inc
add
nop
mov
cmp
addr16
cld
jge
mov
sahf
std
aad
xor
pop
shl
imul
arpl
movs
inc
and
lahf
mov
lahf
stos
call
sbb
mov
xor
adc
div
retf
(bad)
jmp
xchg
pop
cmps
fbstp
adc
xor
dec
stc
jle
into
jnp
lods
cld
pop
call
mov
xchg
inc
fwait
mov
mov
call
lods
cs
cmp
xchg
xchg
sahf
into
popf
fadd
pop
jae
sub
test
iret
sbb
sub
sbb
imul
js
sbb
add
push
rcl
add
aad
shr
jb
xchg
pop
pusha
mov
jg
inc
xor
xlat
das
xchg
ror
mov
mov
cwde
cld
xchg
fcmovnb
add
(bad)
and
adc
pop
dec
add
mov
jl
jmp
push
inc
pop
jp
jle
pop
shl
dec
mov
fbstp
outs
sbb
jns
(bad)
(bad)
ficom
push
add
jnp
mov
frstor
mov
dec
ret
and
call
jb
push
sub
scas
aam
scas
popf
inc
retf
push
push
fisttp
in
pop
fs
add
cs
addr16
jno
and
mov
jo
ret
cdq
div
jbe
sbb
push
fsubr
jmp
mov
mov
mov
push
adc
push
je
loopne
retf
cmp
xor
mov
imul
mov
shr
xor
clc
xchg
out
icebp
mov
ins
imul
cmp
dec
jo
jnp
ror
mov
test
push
outs
in
addr16
pop
jo
(bad)
mov
lods
inc
inc
dec
imul
mov
lods
test
lods
push
pop
push
sbb
cld
imul
(bad)
leave
loop
xor
aad
mov
aad
mov
xlat
jbe
pop
psrlw
outs
push
mov
and
ficom
push
mov
pop
ror
or
xlat
mov
xchg
jns
cmps
bound
mov
cmp
jmp
cmp
arpl
fxsave
mov
stc
jbe
mov
dec
mov
out
in
pop
sub
imul
xchg
mov
xchg
loope
cli
or
(bad)
and
pmulhw
mov
xor
in
pop
int
adc
mov
or
pop
gs
sub
mov
cmps
adc
neg
add
sub
rcl
mov
xor
ins
and
inc
pop
jno
bnd
test
mov
xchg
sahf
inc
mov
stos
add
push
or
and
mov
or
stos
pop
mov
xchg
(bad)
dec
cmp
add
add
push
cld
xchg
popf
jmp
retf
dec
clc
in
daa
xor
scas
xchg
adc
aam
sbb
fsub
fistp
and
fstp
jmp
mov
inc
dec
sbb
out
fld
out
(bad)
ss
pop
jo
or
in
ror
sub
(bad)
leave
sub
pop
aaa
aas
jae
aad
(bad)
cmps
ficomp
jo
jmp
pushf
cs
movs
xchg
retf
cwde
sbb
js
(bad)
out
jmp
shr
or
mov
ror
inc
mov
stc
and
or
mov
lds
das
xor
std
sub
js
add
pop
movs
xchg
ror
stc
stos
cmp
in
movs
or
dec
lds
dec
rcl
hlt
push
pusha
and
test
movs
jbe
jle
xchg
es
inc
and
and
xchg
xchg
jg
ficomp
iret
sbb
movs
pop
push
fiadd
cdq
mov
xchg
movs
dec
aaa
fwait
push
xchg
out
(bad)
in
and
mov
icebp
mov
repnz
icebp
mov
mov
ja
lods
mov
add
xor
or
cmp
add
pop
dec
jle
mov
call
xlat
out
xchg
ss
ret
push
mov
push
add
jns
loop
call
xor
and
jns
jbe
and
jns
test
fwait
popa
push
sub
clc
mov
scas
fnsave
ins
dec
dec
fld
cli
sbb
lods
cdq
aam
loope
xor
out
xor
xor
sbb
sub
pop
xchg
(bad)
mov
mov
xlat
dec
in
les
jbe
sub
xor
pop
inc
mov
bound
adc
not
bound
jle
outs
lahf
je
cmps
je
ss
adc
lahf
imul
mov
movs
(bad)
jl
ret
adc
arpl
or
cmp
dec
cld
push
fs
bound
hlt
movs
mov
adc
sub
pop
or
cmc
push
jp
push
push
or
add
xor
pop
jecxz
rcl
push
test
ret
jmp
adc
xor
jno
cmps
xchg
cmp
mov
jns
(bad)
jg
gs
popa
into
rol
ja
pushf
mov
dec
call
fbld
repz
shl
aad
mov
ror
jg
stos
lods
mov
mov
fadd
cmp
(bad)
(bad)
(bad)
imul
and
int3
jb
int
js
or
jl
push
jno
and
sub
in
lock
aam
arpl
pop
cmp
test
cmc
dec
pop
ja
inc
enter
add
xchg
or
mov
and
aad
aaa
loopne
std
fmul
ret
pop
add
mov
sub
pop
push
adc
sbb
mov
add
mov
fs
sub
jo
dec
gs
push
loopne
adc
adc
inc
adc
mov
jno
or
fmul
jns
xchg
(bad)
mov
jbe
stc
(bad)
jge
jmp
in
cli
leave
jg
pop
fldcw
mov
vfpclassss
inc
cmp
cmps
rcl
aas
mov
add
pusha
jbe
add
out
jmp
inc
(bad)
xchg
adc
cmp
test
sub
xchg
push
(bad)
outs
stos
jecxz
xor
or
cmps
loope
cmp
sbb
push
fdivr
xchg
jmp
rcl
mov
or
in
fstp
pop
push
xlat
(bad)
jmp
loop
neg
sahf
enter
xor
idiv
push
sbb
(bad)
int3
repz
in
leave
mov
mov
mov
mov
jnp
cmp
(bad)
fmul
sbb
das
xor
push
hlt
mov
js
fcmovbe
xchg
jne
mov
test
adc
fs
or
adc
cmp
sub
sahf
jae
push
xchg
rcl
outs
mov
jb
xchg
add
rcr
dec
push
sbb
out
pop
jle
pop
jns
sbb
push
cmps
inc
jnp
sahf
sbb
idiv
lock
jno
fadd
push
mov
or
or
(bad)
jb
or
aaa
sub
in
ret
daa
call
repz
(bad)
(bad)
push
mov
mov
fisub
call
adc
enter
push
popf
mov
in
mov
test
xchg
retf
xor
adc
ds
lock
adc
xchg
mov
pop
cmp
xchg
jl
sbb
inc
pop
leave
shl
inc
or
adc
adc
mov
add
std
sub
fisttp
mov
out
pop
loope
inc
jl
dec
dec
bound
stos
fst
xchg
ja
adc
(bad)
mov
sub
jmp
cmp
add
adc
xchg
add
scas
add
ss
inc
daa
jmp
std
pop
movs
sbb
mov
cmp
popa
sub
cmp
mov
pop
adc
pop
mov
cmps
cmp
popa
out
cmps
cmp
int
and
arpl
and
(bad)
inc
mov
cmp
stc
xchg
(bad)
pushf
jno
sbb
mov
or
test
fsin
sub
mov
cli
ins
ja
push
sub
push
jbe
cmp
inc
pop
dec
or
and
mov
pop
bound
sti
loope
in
push
mov
inc
mov
sbb
dec
int3
and
fmul
popa
dec
cmc
imul
test
pop
push
adc
fnstcw
jno
retf
jno
dec
mov
add
xchg
lds
sbb
pop
sub
sbb
cmp
mov
or
pop
icebp
loope
add
mov
push
sahf
leave
sbb
pushf
or
lods
into
cmps
(bad)
fisubr
out
frstor
and
out
out
sbb
mov
inc
aam
inc
dec
jge
jl
les
(bad)
dec
jne
pop
sbb
loop
jmp
bound
popf
sub
iret
mov
xor
add
mul
lock
sbb
sbb
sbb
gs
div
fisttp
inc
mov
pop
xor
push
mov
sar
sub
add
mov
adc
mov
mov
stos
in
or
mov
stos
and
sub
pop
ficom
out
xchg
sub
les
scas
pop
cs
mov
shr
cld
push
outs
cmp
dec
loope
mov
stos
in
rol
cmps
into
cdq
jge
iret
and
ja
jp
inc
add
mov
or
movs
adc
mov
mov
addr16
test
sbb
jns
xchg
or
and
lods
loope
fild
aam
(bad)
daa
mov
push
test
(bad)
idiv
adc
pop
cmp
add
arpl
icebp
daa
rcl
lods
sti
mov
mov
mov
test
sti
ja
popf
shl
ins
pop
dec
sub
sbb
xor
mov
das
inc
das
test
or
out
dec
jg
arpl
mov
cmps
shr
mov
fsub
xchg
add
add
nop
shld
inc
out
inc
add
mov
ins
aam
jecxz
cwde
popa
sub
cli
ds
stos
icebp
add
fstp
es
xor
mov
pop
mov
ja
js
ins
popf
cld
or
xchg
and
(bad)
sub
push
ds
xlat
scas
jl
ror
xchg
mov
dec
loop
test
repnz
iret
xchg
jecxz
dec
mov
add
sub
(bad)
cmp
xlat
cwde
ins
fs
pop
sti
and
jl
sahf
jle
mov
dec
ins
sbb
push
cmp
adc
or
sbb
mov
xchg
pop
loopne
mov
js
cwde
sbb
mov
movs
inc
movs
ins
icebp
fist
and
mov
(bad)
pop
ds
ins
xor
inc
sbb
fist
mov
mov
call
pop
dec
sahf
lods
out
lock
add
in
je
adc
push
mov
lods
xor
add
pop
shr
(bad)
std
and
retf
or
or
sbb
sbb
fnstenv
pop
xor
out
ja
call
xchg
adc
sar
inc
mov
adc
cdq
dec
dec
dec
sbb
dec
test
in
pop
xor
push
xor
sub
retf
es
pop
cmp
add
cld
fldenv
push
in
mov
movs
xchg
mov
mov
in
dec
add
jp
mov
push
and
(bad)
pusha
pop
mov
inc
pop
mov
xor
gs
pop
xor
pushw
dec
push
jo
xchg
mov
jmp
cmp
dec
std
mov
mov
adc
inc
fmul
xor
push
jns
and
fdiv
jb
cmp
jns
inc
add
cmp
jne
(bad)
out
mul
ss
shl
in
call
mov
jne
cmc
nop
stos
add
dec
sub
div
add
aad
xor
aad
sbb
mov
sbb
sub
push
(bad)
stc
fmulp
xor
rcr
push
push
mul
jge
ficom
mov
jg
ds
inc
cmp
(bad)
je
idiv
in
cwde
in
fnstsw
dec
adc
jmp
adc
shr
pop
add
or
imul
adc
pusha
push
test
aad
lea
sub
ja
xor
add
mov
adc
adc
retf
push
cmps
rcr
scas
dec
outs
mov
cmp
ds
pop
mov
inc
inc
sbb
mov
sbb
daa
out
in
dec
mov
jbe
mov
fdiv
mov
je
out
leave
mov
sub
ja
addr16
sub
outs
jmp
xor
dec
sar
mov
cmp
jae
enter
mov
ins
enter
cs
loopne
xlat
jns
xor
adc
pop
mov
cmp
aaa
out
xor
leave
sub
sbb
scas
or
lods
and
xchg
pop
jmp
xor
inc
(bad)
jno
(bad)
idiv
dec
mov
mov
add
imul
sub
out
sub
sbb
fnstenv
push
push
xor
xchg
xchg
fidivr
es
jg
pop
test
inc
xor
ret
out
jae
pop
iret
sub
daa
xchg
mov
cmp
xor
dec
call
jmp
mov
imul
iret
sbb
gs
lock
out
push
imul
lahf
xor
inc
daa
xor
add
or
test
push
sub
and
adc
adc
mov
imul
dec
inc
xchg
mov
(bad)
fisttp
in
sbb
mov
test
xchg
in
cmp
pop
or
add
xchg
arpl
into
cmp
adc
xchg
mov
bound
test
dec
lahf
push
add
jg
inc
pop
jnp
mov
sbb
bound
jbe
call
fsubrp
loope
sub
adc
(bad)
int3
pop
hlt
stos
sub
xor
sbb
or
int3
aam
pop
or
xchg
scas
(bad)
jae
or
call
ins
int
cwde
jmp
int3
ins
pushf
es
pop
dec
xchg
addr16
sbb
xor
sahf
movs
push
pop
add
daa
cs
into
push
retf
dec
scas
fsubr
xchg
repnz
and
shl
and
push
xlat
mov
mov
lahf
mov
lock
aaa
int
fiadd
gs
mov
cdq
jmp
dec
cs
call
inc
std
cmp
cs
das
mov
ss
popa
rcl
in
sub
sub
jp
bound
push
(bad)
and
hlt
and
(bad)
cmc
sbb
add
not
jmp
imul
into
stc
rol
outs
add
jb
repnz
enter
fxam
push
jno
popa
jno
xchg
mov
sub
xor
cmp
xchg
mov
nop
add
cli
mov
cmp
movs
mov
push
fistp
jmp
psrad
xor
lea
data16
lea
enter
lock
mov
gs
sahf
mul
call
mov
pop
popa
shl
aas
shl
adc
cmc
or
out
lods
and
data16
sub
movs
add
mov
lods
push
pop
and
xchg
mov
adc
in
xor
mov
call
jge
adc
cmp
imul
pop
cmp
dec
mov
and
adc
clc
(bad)
int3
sub
ret
loop
arpl
into
push
(bad)
lds
sub
into
iret
stos
mov
fwait
push
out
add
fiadd
mov
lahf
mov
push
cmp
cmp
jo
ret
js
les
lea
push
adc
or
pop
adc
xchg
nop
outs
std
arpl
lahf
mov
loop
mov
into
dec
pop
sahf
jp
xlat
out
test
shl
xchg
push
xor
xchg
xor
push
sbb
stos
(bad)
mov
jo
or
push
or
idiv
xchg
ror
mov
test
cmc
test
aad
mov
mov
cmps
xor
push
fs
pop
cwde
outs
sahf
pop
fimul
adc
or
mov
pop
inc
sub
sbb
aad
cwde
xchg
sbb
adc
and
cmc
int
imul
pop
leave
shl
mov
jge
mov
pop
mov
xchg
inc
pop
ins
inc
push
data16
dec
popf
mov
cmc
lods
cmp
inc
aad
sub
jb
inc
sub
imul
add
mov
jg
xchg
xchg
xor
mov
pop
jle
cmc
fild
push
add
xchg
mov
dec
imul
shl
jge
test
and
lea
ins
je
retf
mov
jae
scas
and
push
shr
test
mov
lods
cld
sub
mov
out
gs
setno
pop
je
jg
pushaw
adc
mov
push
ja
loopne
leave
or
cmp
scas
shl
les
mov
sbb
xlat
shr
dec
loope
mov
loopne
movhps
sahf
add
scas
or
mov
push
shl
fstp
cmc
mov
xchg
mov
mov
lea
push
mov
jecxz
inc
sub
popf
into
and
xor
xchg
inc
mov
mov
dec
xor
lock
dec
cmp
mov
sub
pop
out
sub
fidiv
cmp
movs
test
enter
inc
adc
inc
and
pop
jno
add
(bad)
int
xchg
shl
and
adc
jb
sub
lea
pop
mov
lahf
call
es
rcl
mov
push
lods
nop
int
fwait
adc
js
push
mov
push
push
inc
xor
or
in
cwde
in
std
in
and
lods
pop
jae
cmc
ins
hlt
add
xchg
int
dec
outs
push
pop
arpl
in
and
call
ret
adc
sbb
in
std
(bad)
mov
(bad)
mov
sbb
add
inc
xor
sar
je
and
mov
out
enter
arpl
ja
xchg
cmp
repnz
fsubr
or
faddp
pop
xchg
shl
rcl
cli
mov
xchg
out
mul
sbb
adc
cwde
shl
(bad)
sub
cmp
outs
dec
ret
test
xchg
icebp
push
sbb
dec
xor
and
pushf
cs
jbe
outs
mov
push
mov
sub
add
jmp
ins
lock
jo
mov
dec
out
test
add
lods
push
xchg
cdq
ficom
fidivr
call
and
xor
adc
jnp
ror
sar
adc
in
aaa
and
pop
retf
sbb
sbb
fnstcw
loop
iret
shr
adc
sti
imul
call
stos
xchg
imul
enter
dec
cmp
adc
add
dec
into
lods
jnp
pop
sub
js
xchg
push
mov
popa
cwde
push
mov
nop
ins
jge
arpl
mov
dec
arpl
mov
addr16
call
add
(bad)
cmc
cmp
inc
xchg
mov
popa
aaa
xchg
mov
mov
shl
pop
mov
mov
mov
cmp
sbb
mov
add
adc
and
outs
mov
mov
shl
xchg
inc
ror
sbb
push
cmp
loope
les
jl
outs
cmp
test
sbb
pop
dec
or
js
push
shr
out
xchg
add
cld
(bad)
pop
cmp
in
retf
mov
nop
gs
sub
jp
mov
jg
push
pushf
ror
fsubr
pop
push
cmp
retf
mov
pop
adc
xor
jge
add
addr16
and
jne
pop
into
pavgb
jno
(bad)
dec
jbe
shl
loope
pop
sbb
jmp
in
mov
in
mov
ret
pop
xchg
cmp
sub
dec
arpl
imul
cmp
fcom
dec
aad
push
mov
(bad)
imul
dec
mov
data16
and
jns
sub
pop
jmp
push
stos
icebp
test
cdq
cmpxchg
lea
xchg
fbld
or
inc
jg
jno
inc
fist
icebp
lahf
fistp
cmp
sbb
loopne
stc
pop
lock
and
idiv
das
mov
cmp
bound
jne
shl
in
cmp
cmp
arpl
push
mov
js
xchg
test
sti
push
jo
(bad)
jmp
push
sub
xor
mov
adc
mov
ins
sbb
retf
jae
cmp
(bad)
dec
fisttp
ins
sti
sub
stos
cmp
lea
jnp
cs
aas
push
mov
(bad)
sbb
loop
sbb
ror
fisubr
pmaxsw
pop
out
mov
dec
inc
mov
cmp
shl
mov
push
lea
or
pushf
in
jb
cmc
fiadd
test
pushf
or
(bad)
jl
xlat
and
fdivr
pop
test
pop
push
inc
jns
sub
js
sub
por
pop
fwait
and
popa
stos
mov
push
into
imul
mov
mov
in
hlt
jmp
and
ins
stc
int3
retf
jne
cmovl
pop
or
fisttp
cmp
pop
push
jmp
xor
inc
xlat
ins
push
pop
mov
(bad)
icebp
sub
adc
cmp
outs
sti
xor
pop
pop
icebp
mov
test
jne
add
push
sub
pop
bound
push
fdisi(8087
clc
fcos
leave
xchg
mov
clc
pop
iret
int3
pop
cmp
mov
int3
(bad)
mov
inc
cmps
inc
rcl
jae
(bad)
leave
ss
adc
cwde
ins
lock
pusha
clc
cmp
jmp
iret
(bad)
call
(bad)
ins
in
fsub
mov
xor
mov
adc
dec
jno
or
shl
mov
mov
inc
jb
outs
inc
or
push
fs
adc
inc
fidivr
(bad)
in
hlt
outs
pop
pop
(bad)
xchg
or
jecxz
loope
xor
inc
loop
sbb
jmp
ret
into
popf
sub
scas
sub
xchg
nop
das
out
stos
cmp
inc
aad
sub
mov
rol
(bad)
jge
xchg
loop
and
sahf
out
mov
inc
dec
add
pop
neg
pop
xchg
jecxz
add
mov
adc
pushf
or
lods
cmps
and
pop
xor
xchg
add
adc
test
ja
xchg
jmp
jns
mov
mov
dec
xor
outs
jns
push
mov
xchg
jb
cmps
stc
sub
and
sub
dec
movs
pop
push
pop
xchg
jne
dec
test
push
cmp
dec
std
dec
add
inc
hlt
cs
retf
mov
pop
mov
dec
pusha
imul
xor
shl
adc
cmc
and
or
outs
imul
xor
sar
mov
jns
push
push
ds
add
push
iret
aaa
int3
ror
push
mov
sub
daa
add
dec
cmps
scas
add
dec
add
add
mov
cdq
clc
cmp
adc
cmp
leave
pop
dec
xor
dec
xor
cmp
dec
xchg
dec
push
gs
adc
or
jo
inc
(bad)
clc
ds
push
in
pop
sbb
icebp
scas
push
sbb
rcl
cdq
dec
pop
imul
ins
test
add
ret
sar
xchg
mov
add
lahf
push
call
pop
int
inc
jle
loop
xor
fild
mov
dec
lods
cli
push
in
rcr
ss
mov
xchg
adc
mov
ins
sbb
ds
stc
dec
fisttp
lock
sbb
addr16
(bad)
repnz
xchg
pop
push
xor
dec
xor
jne
out
aas
jae
call
cmp
dec
and
cmp
cmps
aam
xchg
dec
int3
or
mov
ss
outs
cmp
mov
jmp
mov
xchg
ins
bound
mov
dec
add
addr16
popf
jae
leave
icebp
sbb
mov
xchg
cwde
out
dec
test
jo
cmps
jns
push
in
sbb
jecxz
test
jbe
dec
in
push
(bad)
cmps
call
ret
sbb
jnp
outs
repnz
xor
xlat
mov
cmp
and
mul
sbb
push
add
dec
fmul
inc
xchg
mov
mov
pop
jne
cmp
mov
shl
imul
mov
xchg
(bad)
or
jle
and
sbb
jp
fdivr
mov
sti
cmps
cmp
and
mov
stos
mov
xchg
ret
add
in
mov
push
mov
mov
into
jmp
inc
or
test
push
aas
pop
popf
cmps
adc
xchg
and
fsubr
sbb
daa
cs
dec
inc
mov
mov
into
retf
push
ins
stc
mov
mov
pop
xchg
push
dec
mov
push
add
push
cs
addr16
or
add
sub
ret
mov
or
test
jb
sbb
and
or
push
dec
scas
loop
leave
mov
push
jae
add
jbe
ret
into
xchg
mov
dec
add
ficom
jmp
les
adc
sbb
retf
das
pushf
mov
xchg
mov
inc
xor
lods
inc
push
and
test
jmp
sbb
adc
xchg
push
jno
lock
mov
dec
rol
xlat
shl
dec
inc
pusha
mov
xorps
out
test
cmp
inc
not
jle
xchg
cmps
xchg
mov
imul
ins
dec
ret
cmp
icebp
(bad)
out
popa
cmp
mov
pushf
mov
dec
retf
repz
daa
hlt
cld
imul
repz
loopne
in
and
pop
pop
jae
mov
mov
(bad)
je
or
out
gs
adc
cmp
xchg
push
sub
arpl
(bad)
outs
push
cdq
mov
scas
and
sub
pop
xchg
clc
fldln2
or
sbb
clc
or
repz
adc
retf
cwde
cdq
and
cmp
sub
mov
adc
lahf
cmc
ss
movs
mov
ror
and
push
pop
call
or
mov
imul
addr16
cmps
xor
xchg
dec
enter
nop
int3
call
xchg
mov
mov
scas
retf
mov
repz
inc
jg
std
(bad)
lea
mov
sub
mov
cs
xchg
inc
jmp
cmp
imul
ss
or
daa
adc
aad
int3
(bad)
shl
adc
cli
dec
add
js
pop
imul
call
cmp
es
jnp
mov
add
icebp
jge
add
cld
clc
sbb
xlat
outs
call
adc
icebp
jmp
test
icebp
fidivr
cdq
xchg
cs
(bad)
nop
int
cmp
shl
call
inc
and
cmc
xchg
repz
js
ds
push
mov
mov
cmps
test
and
or
into
and
bound
leave
aaa
fmul
into
enter
scas
fcmovnb
pop
fucomi
in
push
cmp
in
add
xchg
push
cs
(bad)
jbe
sahf
adc
fisubr
ror
(bad)
and
mov
inc
inc
je
dec
mov
stos
pop
imul
neg
jb
fs
adc
xchg
not
jmp
or
dec
pop
mov
(bad)
bound
sbb
or
cdq
dec
test
xchg
popa
in
enter
movs
dec
es
cmp
pop
and
xor
std
into
add
rcr
in
add
mov
push
mov
retf
lds
jmp
push
arpl
iret
loope
mov
stos
adc
sbb
popf
pop
mov
pop
ret
dec
mov
cmp
and
sbb
push
(bad)
loopne
aad
mov
xor
xor
push
rol
push
mov
data16
nop
xchg
out
in
icebp
outs
iret
stos
inc
stos
mov
xchg
mov
sub
xchg
and
cdq
mov
imul
out
push
push
hlt
(bad)
ins
into
lock
clc
lods
out
shl
mov
jecxz
stc
test
ja
js
adc
je
dec
fld
fs
jmp
(bad)
pop
push
inc
fsub
jne
loop
loope
sub
(bad)
aam
cmp
leave
ret
xor
jb
in
out
xor
icebp
add
cmp
cmp
sub
fwait
scas
adc
loope
sbb
hlt
loopne
cmc
jg
je
fisub
fsubrp
gs
lods
std
cs
shl
mov
inc
add
cmp
lods
pop
imul
test
cmp
jp
adc
not
into
and
pop
cs
pop
mov
into
pop
adc
add
pushf
mov
fwait
ds
mov
idiv
xchg
push
dec
jge
retf
jae
jae
pop
cmp
inc
loop
cmp
pushf
(bad)
and
push
mov
and
and
or
dec
push
jbe
retf
in
inc
mov
cdq
mov
add
ret
pop
dec
icebp
xchg
sub
and
cmc
stos
xchg
(bad)
adc
mov
fisubr
je
mov
fnsave
add
jnp
sub
lock
inc
pop
cmp
xchg
mov
push
sub
lahf
jge
retf
adc
rol
test
mov
gs
push
test
inc
xlat
inc
test
(bad)
out
ss
sub
mov
movs
mov
add
mov
jb
mov
mov
cmp
adc
scas
pop
xor
sbb
inc
push
leave
xchg
out
test
mov
fimul
in
(bad)
arpl
jne
(bad)
or
or
or
retf
jno
in
movs
stos
or
fwait
xor
push
sbb
cli
fsub
pusha
push
jmp
std
mov
mov
sbb
pusha
(bad)
cwde
in
leave
shr
add
inc
push
xor
lea
sub
in
or
sub
popf
mov
mov
popf
nop
std
ins
stos
cmp
mov
jmp
in
or
rol
and
enter
das
push
jle
hlt
dec
inc
pop
ret
cmp
and
out
mov
pusha
push
mov
mov
aaa
pop
fmulp
aas
(bad)
cmp
xchg
jno
mov
rol
out
lahf
imul
pop
stos
aas
add
jnp
xchg
bound
and
add
icebp
clc
adc
inc
adc
inc
xor
clc
dec
pop
push
adc
push
adc
addr16
jmp
jmp
lds
fdiv
fiadd
cmp
data16
das
cmc
cld
ss
and
and
cmp
or
and
and
inc
push
loope
adc
mov
xlat
sub
popa
pop
xor
lods
nop
cmp
call
nop
rcl
inc
stos
imul
ins
inc
or
and
push
dec
adc
daa
fwait
adc
aaa
xchg
or
stos
rcl
push
jmp
(bad)
(bad)
mov
sti
pop
out
loope
lds
add
mov
mov
sti
or
test
push
sbb
dec
test
out
retf
jmp
dec
fisubr
push
clc
(bad)
out
mov
mov
jg
jle
imul
test
cdq
cmp
movs
loopne
sbb
push
or
lods
shr
push
pop
loop
sbb
or
cdq
inc
jns
dec
lds
jmp
scas
in
xchg
or
or
adc
sub
cmps
lods
pop
ins
push
mov
mov
out
mov
(bad)
lock
hlt
arpl
test
dec
add
cli
sub
jnp
fsubr
pushf
or
and
mov
push
dec
out
cmp
lea
push
movs
js
dec
and
jg
les
ins
cmp
mov
popf
add
xchg
sti
out
mov
js
enter
call
pop
inc
dec
fiadd
mov
outs
push
jecxz
fwait
or
and
push
mov
cmp
jns
mov
into
xchg
jmp
push
pop
jg
push
pop
xchg
inc
jp
add
in
fcomp
neg
popa
ins
inc
mov
and
jno
and
imul
sub
sbb
xchg
xor
pushf
mov
sub
ins
mov
gs
clc
fsubr
pop
sbb
xor
and
dec
(bad)
add
iret
mov
aam
data16
dec
in
or
mov
test
imul
or
leave
adc
outs
xlat
loop
mov
xchg
ins
cwde
leave
xchg
in
in
ins
cmp
sar
adc
inc
cli
or
adc
fyl2xp1
mov
push
mov
sbb
mov
xchg
data16
add
mov
les
pop
call
out
push
pusha
cmp
adc
inc
mov
dec
dec
xlat
pusha
cs
cli
inc
fs
sti
dec
(bad)
xchg
ds
jg
xor
fwait
ror
or
mov
not
lods
clc
xor
sbb
fistp
ds
mov
mov
lds
push
(bad)
push
xor
push
push
and
xor
xchg
fucomip
sub
jae
icebp
lock
ss
mov
hlt
mov
or
xchg
pop
pop
mov
sar
iret
pop
pop
js
ja
dec
dec
pop
mov
push
(bad)
mov
std
sar
jne
outs
test
sub
in
test
ret
(bad)
jmp
adc
fs
and
xchg
and
cs
in
pusha
jae
(bad)
in
fnstcw
cmps
mov
mov
test
push
call
cwde
sub
das
movs
es
push
xchg
and
dec
fsub
out
in
inc
mov
and
(bad)
dec
addr16
mov
mov
jmp
out
mov
dec
outs
stos
(bad)
adc
sahf
rcl
jp
dec
lock
mov
(bad)
jmp
push
shr
jp
inc
repz
push
and
mov
jecxz
repz
loopne
fldenv
mov
ins
(bad)
mov
jp
cwde
and
pop
xchg
adc
in
test
imul
xor
cmc
mov
ins
xchg
jo
aaa
fisub
inc
mov
stos
scas
daa
stos
xor
jo
push
pushf
je
icebp
(bad)
xchg
fisttp
data16
lock
sbb
add
(bad)
dec
mov
inc
test
mov
pop
inc
xchg
imul
add
(bad)
cmp
aaa
rcl
inc
test
fistp
pop
xchg
test
and
div
(bad)
sub
add
rcr
push
out
aam
aad
push
xor
sbb
das
dec
lahf
aaa
clc
push
out
fcmovnbe
in
or
and
sub
or
in
xor
call
xor
js
mov
pushf
cmc
add
cmc
fs
xchg
and
leave
jb
fiadd
xor
or
mov
mov
aad
and
mov
stc
clc
push
aam
pushf
popf
push
pop
cmc
mov
cdq
mov
or
xchg
mov
sbb
mov
and
pop
(bad)
add
push
cmp
lods
stos
pop
mov
pushf
mov
jo
or
cmp
pushf
hlt
mov
out
adc
push
sbb
sbb
fld
mov
je
retf
call
jbe
test
mov
jge
or
ret
dec
(bad)
adc
jp
xchg
(bad)
pop
sar
pop
enter
ror
out
jne
mov
push
add
mov
out
xlat
or
mov
jmp
mov
pop
out
or
aam
sbb
mov
nop
scas
mov
mov
cmp
mov
cmp
push
push
and
mov
jmp
and
inc
js
loopne
aas
pop
adc
iret
imul
mov
pop
jge
ret
pop
cmp
push
cmp
xchg
loop
icebp
mov
xchg
adc
and
cwde
push
inc
imul
(bad)
cmp
mov
in
pop
or
pop
jge
xor
inc
dec
add
out
mov
(bad)
ficomp
jle
test
push
adc
push
dec
cli
int3
aam
add
rol
adc
out
inc
sub
jecxz
add
mov
mov
adc
adc
xchg
push
sti
mov
and
push
adc
push
cmp
push
loope
mov
xchg
dec
pop
push
pop
xchg
nop
sbb
jmp
stos
test
cmp
out
adc
daa
push
stc
iret
nop
sbb
fcomp
jns
adc
jp
push
and
adc
mov
mov
or
rol
imul
mul
or
inc
sbb
push
mov
ins
std
inc
(bad)
repnz
(bad)
mov
neg
sbb
push
pop
mov
mov
mov
xor
dec
(bad)
mov
outs
ins
jae
inc
and
(bad)
loope
sti
add
pop
and
add
sbb
jne
out
out
mov
cmps
cmps
xchg
push
inc
in
dec
cmp
bound
sub
sub
imul
pop
popa
push
mov
jnp
jmp
cmps
lods
pop
shr
and
bound
adc
fdiv
push
shr
pop
imul
mov
xchg
jnp
rcl
xchg
out
mul
mov
pop
ss
dec
pushf
jmp
into
and
fld
(bad)
cld
mov
mov
lock
aaa
ins
cmp
adc
mov
lea
fidiv
xor
psubusw
add
iret
pushf
jne
sahf
popa
jecxz
dec
mov
sub
inc
push
enter
jp
outs
pop
and
push
(bad)
jmp
repz
jecxz
mov
popf
or
push
inc
xchg
xchg
scas
repnz
pop
xchg
(bad)
jp
xchg
enter
or
push
jg
outs
mov
enter
div
xor
sub
jns
cs
std
cmps
call
cmc
sub
mov
cmp
enter
jae
aad
repnz
scas
sub
mov
pop
shr
mov
xor
and
call
in
popw
ins
add
dec
mov
add
mov
das
ja
adc
pushf
xchg
mov
repz
cmps
fild
pushf
mov
fbstp
push
push
cmp
hlt
imul
pop
push
sbb
mov
or
push
mov
stos
jle
pop
retf
adc
rol
cld
pop
in
sub
or
xlat
fld
(bad)
sub
int3
sub
dec
jae
std
in
movs
sbb
or
fiadd
and
mov
push
pop
or
dec
push
inc
xor
in
daa
cmps
scas
cli
ret
xchg
imul
mov
pop
cmp
xchg
inc
fcmovnb
mov
fwait
lods
les
sahf
add
push
or
xchg
lds
test
fild
xchg
ficom
into
pop
ja
loop
xchg
test
mov
lods
aas
or
or
push
xlat
(bad)
test
sbb
push
inc
xchg
lock
push
addr16
jne
icebp
mov
fs
stos
in
pushf
xor
fst
adc
test
mov
xor
dec
xchg
pop
in
aaa
push
pop
leave
dec
jmp
fdiv
dec
in
push
sbb
in
icebp
xlat
add
mov
inc
mov
das
(bad)
fldenv
imul
lock
add
repnz
add
jge
lods
jle
mov
cmp
or
adc
mov
int
ds
call
push
dec
das
je
std
mov
adc
repnz
jmp
mov
jmp
pusha
popa
or
out
jmp
fisttp
ins
std
ins
movs
in
mov
sbb
cld
or
push
in
inc
int
inc
jae
addr16
dec
push
addr16
dec
pop
or
in
xchg
movs
lea
std
out
lahf
or
adc
add
cdq
ins
sub
add
inc
and
pop
push
cld
(bad)
ins
out
mov
aad
in
imul
and
pop
imul
lods
xchg
xchg
add
les
xchg
ss
cmc
sub
outs
dec
push
push
lahf
shl
jb
sbb
sbb
or
and
retf
nop
sbb
sbb
jp
xchg
pop
mov
test
int
push
leave
loopne
(bad)
pop
xchg
and
icebp
mov
ins
pop
setp
das
ret
movs
dec
mov
cmp
dec
push
mov
cmp
lods
loopne
sahf
hlt
push
cmp
mov
fwait
stos
shl
xchg
xchg
cmc
jmp
sub
inc
sbb
aaa
scas
js
int3
pop
adc
movs
retf
cwde
mov
cld
out
je
pop
loope
stos
lds
stos
adc
leave
jmp
outs
xchg
lods
fdiv
ss
cs
jl
inc
fwait
loopne
sti
icebp
rol
or
mov
jl
push
mov
mov
fldcw
pop
sub
rcr
idiv
outs
aad
icebp
lods
das
and
mov
in
sti
push
mov
mov
mov
sub
mov
loopne
repz
(bad)
jnp
inc
add
xchg
cmc
call
jge
sti
cli
mov
pop
push
retf
mov
loop
add
je
inc
push
ret
sbb
inc
and
mov
push
and
fcomp
mov
lock
aaa
(bad)
data16
int3
iret
xchg
or
imul
out
hlt
sub
xchg
(bad)
push
test
inc
mov
adc
outs
add
pop
mov
(bad)
lds
push
mov
cwde
sub
or
xor
dec
push
push
pop
dec
fdivr
repnz
xor
jb
ror
and
cmp
fcomp
sub
cwde
(bad)
mov
mov
cmp
clc
jb
sbb
or
push
sbb
shr
ficomp
(bad)
mov
mov
sub
ss
mov
mov
icebp
pop
xchg
and
inc
dec
or
sub
icebp
mov
aad
mov
pop
xchg
jno
or
or
dec
call
sbb
dec
mov
gs
sbb
aaa
test
stos
arpl
inc
mov
and
inc
cmps
or
lock
pop
jecxz
push
and
lods
das
jp
pop
xchg
retf
mov
pop
repnz
and
adc
dec
pop
repnz
cmp
lods
movs
popf
jg
mov
mov
add
push
jmp
cmc
sub
shl
mov
pop
cmp
scas
sub
js
xor
mov
mov
cmp
push
leave
iret
cld
outs
popf
aas
sub
scas
inc
jb
(bad)
adc
test
stc
pop
mul
jne
fisttp
or
ins
or
jmp
cdq
jns
js
enter
sub
fnstenv
dec
aam
inc
out
pop
std
mov
stos
xor
cli
pop
idiv
mov
scas
in
arpl
test
or
jb
inc
xor
inc
lds
mul
xchg
jg
iret
adc
dec
test
mov
fist
mov
or
or
mov
mov
loopne
sub
mov
xor
sbb
dec
and
mov
movs
xor
in
sahf
out
out
shr
push
ss
lods
fcom
popf
ja
xor
pop
pop
pop
jg
add
cwde
das
mov
add
sbb
(bad)
loope
pop
inc
inc
mov
sub
dec
lahf
mov
adc
inc
push
push
es
mov
lea
(bad)
rol
pop
xor
inc
jb
cmps
mov
mov
cmps
aam
inc
dec
sbb
cmp
sbb
arpl
shl
mov
test
jp
pushf
xchg
fs
mov
mov
mov
daa
fld
pop
cmp
das
xchg
inc
or
stc
dec
(bad)
in
loopne
ins
sbb
hlt
pop
arpl
(bad)
arpl
fucomi
jecxz
push
inc
and
dec
dec
ja
pop
fisub
aas
mov
jmp
push
(bad)
ins
dec
cmps
mov
ret
pop
adc
stc
push
clc
cmp
mov
mov
out
mov
ds
inc
out
(bad)
icebp
int3
push
popf
jmp
adc
jmp
add
icebp
push
jb
xor
paddsb
cmp
dec
out
cmp
mov
gs
enter
call
lock
mov
add
jnp
cmp
dec
(bad)
enter
loopne
loop
xchg
cli
mov
pop
jae
cmp
pop
push
clc
(bad)
cmp
or
aam
imul
mov
cmps
fisubr
mov
inc
push
add
xchg
xlat
or
dec
add
sub
ret
out
add
inc
sub
outs
fwait
and
mov
(bad)
sbb
or
nop
jl
adc
fs
adc
mov
jb
ficomp
outs
ret
add
int
arpl
adc
cdq
adc
bound
cmp
mov
repz
inc
mov
push
outs
repnz
mov
adc
ss
and
inc
jnp
sub
(bad)
ins
or
jmp
cmp
ins
xchg
mov
js
push
pop
push
sbb
div
mov
out
and
out
gs
rol
dec
push
jl
je
push
fstp
mov
pop
mov
cs
xchg
push
or
push
loopne
mov
pop
out
sbb
xchg
add
jmp
xchg
xor
sub
push
dec
sub
xchg
dec
and
idiv
mov
mov
outs
adc
jno
pop
lods
cmp
xchg
mov
xchg
sub
add
push
stc
aad
pop
add
dec
adc
mov
cld
pop
pop
jmp
(bad)
in
pop
mov
push
rol
xchg
push
ret
test
jge
arpl
push
mov
inc
sbb
sbb
pop
and
and
icebp
xchg
or
div
sbb
add
sub
add
mov
out
sbb
xor
clc
imul
(bad)
cmp
dec
sbb
dec
xchg
jae
sub
jge
or
xor
xchg
shr
adc
and
bound
pop
in
sbb
add
cld
and
adc
test
xchg
cwde
or
lea
xor
mov
ja
jns
arpl
jae
aas
sbb
stc
ins
push
neg
mov
(bad)
or
fisttp
(bad)
or
ret
push
xchg
icebp
inc
push
cld
mov
sub
jo
jns
fisub
gs
das
add
fidiv
mov
imul
push
cmps
ins
jl
xchg
retf
jnp
jecxz
xor
loope
fiadd
sbb
inc
test
in
fsubp
xor
cmp
sub
aad
xor
imul
scas
sub
repnz
fadd
push
mov
cmc
adc
int
in
inc
xchg
das
inc
enter
push
lock
inc
or
dec
sub
clc
sbb
push
push
add
(bad)
sti
ret
mov
lods
mov
add
ins
pop
(bad)
mov
mov
xchg
and
sbb
sub
or
sbb
pop
int
mov
icebp
sbb
push
ficomp
mov
scas
mov
call
loope
stos
enter
xchg
xchg
push
cld
sahf
test
dec
addr16
mov
ds
mov
stos
sub
test
push
cmp
retf
adc
or
in
xchg
jmp
idiv
mov
cwde
(bad)
js
lods
mov
cdq
or
popf
push
mov
sahf
aam
mov
mov
stos
xchg
mov
xchg
or
(bad)
stos
shr
shl
loopne
je
push
dec
popf
and
mov
push
pop
push
xlat
pushf
jp
in
jmp
pop
sahf
or
inc
dec
mov
mov
js
pusha
adc
mov
jnp
ja
adc
jne
pop
pop
sbb
add
xor
int
paddq
fs
stos
nop
gs
pop
jne
fcmovb
lahf
xor
inc
pop
aas
xor
es
dec
jmp
cmp
leave
adc
jnp
lods
mov
mov
xor
pop
in
dec
xchg
ss
inc
xor
sar
retf
cwde
cmp
pop
fwait
cmps
pop
gs
mov
lock
adc
push
inc
pop
(bad)
adc
repnz
push
pop
sbb
(bad)
push
add
(bad)
push
(bad)
push
es
hlt
xor
fisttp
int3
dec
stc
fdiv
jmp
addr16
(bad)
mov
adc
cmps
jno
(bad)
neg
jecxz
cmp
test
js
bswap
jge
outs
loopne
(bad)
mov
jae
dec
(bad)
mov
add
jae
mov
outs
(bad)
retf
inc
or
pop
sbb
stos
xchg
lods
pop
leave
movs
js
int3
es
arpl
pop
aam
std
jae
mov
add
sub
and
mov
or
ins
mov
fistp
mov
mov
adc
add
xor
ds
sahf
cs
jbe
cmp
pop
scas
cmp
sub
cdq
into
and
cwde
push
push
retf
scas
inc
push
push
and
sar
imul
iret
push
cmps
retf
pop
or
cdq
cmp
iret
jge
ror
and
cwde
xor
fiadd
cmp
aad
pop
and
retf
push
mov
cld
out
pop
mov
movs
into
retf
cmp
cdq
jb
rcr
(bad)
mov
add
push
stc
mov
stos
pop
push
and
shr
(bad)
dec
mov
rcl
fst
mov
dec
ret
or
imul
inc
xor
add
mov
pop
mov
xchg
cli
cmp
(bad)
and
loopne
(bad)
xchg
and
push
pop
imul
xchg
cmp
repz
mul
push
dec
pop
(bad)
mov
cmps
pop
test
or
xchg
cmc
cs
adc
int
test
ret
xchg
sbb
ficomp
lods
mov
arpl
or
sbb
(bad)
jg
add
push
loope
cmps
and
push
xchg
test
mov
out
mov
es
fstp
inc
jmp
sub
jg
mul
push
inc
ja
mov
mov
stos
push
sar
(bad)
retf
sti
fimul
(bad)
lods
rcr
mov
inc
adc
shr
cmp
mov
cmp
cmp
jb
aaa
retf
and
dec
or
bnd
rcr
jg
ja
push
hlt
std
add
sbb
xchg
xchg
fldenv
cmp
push
pop
xor
cli
adc
cmp
xor
das
sti
dec
xor
cmp
xchg
test
cmp
add
int
test
adc
lods
es
sbb
sbb
dec
add
push
dec
push
sub
shl
sbb
adc
(bad)
pop
mov
add
push
lds
and
imul
xor
or
out
loopne
pusha
or
mov
movs
pop
cld
movs
mov
sbb
mov
call
push
cwde
mov
cs
ror
into
cdq
sar
mov
in
push
adc
push
lock
inc
retf
fnstenv
movs
ins
sahf
inc
out
jbe
mov
cmc
std
fild
inc
xchg
push
daa
push
pop
fs
jl
fwait
cld
fld
cmp
sbb
fld
bnd
fild
cdq
adc
jns
fsubr
arpl
loope
xchg
(bad)
adc
jns
inc
int3
(bad)
repz
fwait
pop
fcomp
retf
daa
jne
dec
stc
fld
fcomp
mov
sbb
int3
cmps
sahf
fucomp
sbb
and
xchg
pop
not
cli
mov
clc
cmp
div
inc
imul
add
mov
cmps
mov
xchg
push
mov
pop
and
xor
sub
shl
cmp
ret
cmps
loop
and
inc
jb
cmps
xchg
sar
sub
inc
ins
inc
(bad)
fmul
mov
lea
inc
dec
ja
rol
or
test
jp
jb
add
test
sbb
sbb
test
push
fcomp
pop
movs
adc
call
jle
jns
cmp
fcmovb
mov
inc
rcr
sbb
pop
inc
pop
dec
jg
mov
xor
mov
(bad)
jge
push
outs
out
dec
pop
xchg
cmp
fs
push
mov
mov
jp
ja
gs
push
mov
pop
or
lahf
mov
in
fsubr
adc
mov
shr
addr16
cdq
aad
nop
xor
hlt
push
int
movs
and
inc
xchg
jne
pop
out
rcl
test
stos
add
out
inc
mov
imul
(bad)
mov
les
clc
movs
jp
mov
(bad)
add
fidivr
mov
cmp
jb
dec
pop
out
loopne
or
dec
push
sar
and
push
xor
push
adc
jecxz
mov
sbb
push
push
loope
ret
daa
in
jle
mov
xchg
dec
and
fstp
ss
jmp
pop
pop
das
cmp
in
mov
fcmove
enter
imul
cs
sbb
pop
push
daa
test
retf
pop
mov
sbb
out
push
mov
add
cmp
xchg
pmaxsw
mov
dec
fwait
mov
jns
pop
xchg
movs
cmp
out
mov
cmp
retf
push
add
popa
jnp
inc
je
sahf
out
outs
mov
cmp
cmps
rcl
inc
adc
mov
into
dec
jne
sub
rcr
pop
pop
aaa
aaa
xchg
dec
or
fmul
das
or
pop
mov
popf
retf
cmp
test
test
sbb
mov
shl
iret
sub
cmp
iret
xchg
je
(bad)
fisubr
sub
cmp
sub
pusha
and
mov
stos
(bad)
js
stos
adc
test
into
es
xor
xor
mov
sahf
(bad)
cmps
add
cmp
test
add
imul
outs
mov
int3
xor
mov
xor
add
ja
(bad)
mov
sub
jno
outs
call
stos
test
out
sub
in
dec
cmp
ret
jo
into
sub
std
outs
jae
sub
mov
mov
fsubr
dec
push
dec
js
(bad)
or
scas
sti
add
aaa
pop
fild
mov
jp
sub
shl
idiv
(bad)
push
inc
cld
xor
hlt
and
mov
fsubr
fcomp
lods
rol
repnz
ins
nop
push
pop
inc
and
(bad)
std
mov
jbe
add
scas
out
aad
push
test
adc
bound
mov
push
out
in
xlat
fnstsw
inc
jmp
adc
lss
(bad)
fwait
int3
aam
add
and
sub
(bad)
inc
sahf
xor
fwait
int3
sbb
mov
icebp
pusha
leave
jl
ficomp
repnz
or
jle
jb
ja
push
sahf
repnz
dec
out
scas
inc
add
xchg
cmp
leave
and
push
addr16
ficom
inc
pop
clc
cld
fxch
and
add
lods
push
adc
jle
and
pop
jp
or
std
add
mov
inc
push
inc
pop
movs
in
inc
dec
in
fucomip
inc
jbe
sub
scas
dec
mov
jg
mov
fninit
xchg
inc
test
das
mov
cs
fisubr
shl
pop
movs
xchg
mov
pusha
popa
and
xchg
cmp
out
pop
and
dec
(bad)
lds
cmp
aas
enter
loopne
ja
out
add
pop
push
aam
add
and
repz
es
jno
xor
jg
push
adc
xchg
inc
leave
xchg
jg
xchg
add
or
xor
and
sub
(bad)
mov
cmp
pop
(bad)
(bad)
loopne
mov
push
add
push
call
xchg
push
mov
inc
cmc
mov
adc
push
jmp
push
cdq
outs
xchg
dec
xchg
pop
retf
lock
cwde
pop
cmps
dec
adc
and
retf
push
aaa
xlat
pop
in
push
jmp
ja
xchg
xlat
cmpxchg
loopne
push
enter
retf
jg
mov
add
add
stos
lea
inc
fdivrp
icebp
mov
mov
inc
add
loope
fnsave
repz
xor
mov
push
lea
sbb
mov
scas
shl
and
inc
mov
xchg
adc
(bad)
lea
test
das
test
pop
sub
pop
jge
add
push
adc
lahf
dec
fild
mov
in
push
test
es
je
loopne
aad
sar
add
cs
push
fwait
in
ds
ret
jno
xchg
and
rcr
xor
xor
das
jp
(bad)
sbb
shl
gs
pop
push
ins
xor
pop
mov
test
movs
shr
jno
jg
xchg
repz
out
jg
sbb
or
in
icebp
or
add
xchg
leave
dec
aam
add
scas
jge
int
xlat
daa
daa
cmp
in
mov
push
scas
sub
or
loopne
cli
sub
shl
mov
dec
xlat
add
jecxz
out
fiadd
sub
retf
rcl
sar
inc
dec
es
and
test
enter
sub
ror
sbb
pop
xor
xchg
push
and
adc
(bad)
leave
hlt
dec
(bad)
push
in
lahf
outs
pop
or
jne
xchg
push
and
(bad)
xor
in
mov
inc
jecxz
jmp
sub
xor
pop
sbb
pop
in
ret
out
enter
cdq
mov
pop
pop
je
add
inc
xchg
mov
cmp
sub
icebp
jp
fcmovnb
imul
int
sbb
push
out
js
xchg
dec
mov
add
adc
pop
add
stos
into
(bad)
xchg
ficomp
loope
jp
cmp
icebp
mov
js
and
mov
inc
nop
fidiv
or
int
sub
push
and
jbe
scas
icebp
xchg
mov
dec
fdivr
in
push
sub
pop
mov
inc
xchg
aas
loopne
sub
enter
es
fwait
or
(bad)
ja
in
iret
mov
out
cdq
sbb
popf
mov
stos
sub
jb
jg
jecxz
mov
add
or
mov
lahf
imul
pop
sub
mov
call
test
clc
ror
sub
sahf
les
das
push
cmp
sbb
sbb
dec
or
scas
or
shl
pop
xchg
cmp
jecxz
das
iret
and
(bad)
stc
mov
jo
ret
pop
aam
xor
mov
mov
popf
bound
adc
inc
xchg
cmp
mov
xchg
aas
adc
scas
and
in
adc
loope
pop
loope
mov
mov
xchg
ins
mov
rcl
dec
or
idiv
in
idiv
adc
or
push
fst
and
loope
pop
inc
pop
pop
sti
mov
jbe
aas
xor
pop
jo
shl
pop
xchg
pop
pop
adc
or
xor
adc
mov
cmp
fild
inc
adc
retf
xor
int
inc
xor
(bad)
push
stc
je
fstp
out
mov
add
call
jae
or
sub
fild
push
movs
mov
lods
das
xchg
cmp
mov
leave
pop
and
adc
clc
sbb
xchg
and
mov
enter
test
push
pop
mov
xor
lods
add
fs
sub
xor
dec
mov
inc
adc
sub
loop
xchg
out
mov
retf
cli
pop
inc
rcl
(bad)
cmc
ins
imul
dec
cmc
inc
dec
(bad)
mul
(bad)
ss
push
fwait
push
adc
lea
or
cwde
inc
xchg
call
fsub
retf
mov
xor
xchg
pusha
ror
add
jae
call
fwait
mov
pop
and
jne
and
(bad)
out
retf
add
push
xchg
cwde
daa
pop
pop
mov
aas
rcr
sub
sbb
jb
mov
std
xchg
xor
call
test
xchg
int
adc
pushf
or
pop
mov
mov
fistp
cmp
inc
mov
pop
fadd
cmps
imul
add
fld
aaa
push
mov
loopne
jl
jl
push
dec
adc
dec
mov
add
stos
enter
adc
cmps
clc
mov
loop
aaa
aam
mov
mov
pop
cmp
retf
cmp
fcmovbe
xchg
inc
dec
jmp
inc
fsubp
mov
pop
into
pop
pop
mov
clc
test
mov
movs
adc
enter
add
out
fild
xchg
push
and
dec
jae
and
xor
xchg
scas
in
sahf
push
mov
(bad)
stos
sbb
sub
lods
jmp
mov
push
xor
scas
(bad)
iret
call
sahf
xor
and
repnz
cmp
sbb
inc
ja
cdq
pop
test
frstor
mov
pop
(bad)
cwde
mov
jno
pop
and
ja
xchg
ja
inc
mov
cmp
std
sbb
sbb
adc
sbb
xlat
sbb
cli
daa
sbb
ds
jl
das
cld
xor
cli
sahf
out
shl
jmp
push
push
outs
push
push
imul
fcom
adc
xchg
enter
add
clc
popa
push
es
sbb
aas
jmp
int3
xchg
cli
xchg
mov
aas
xlat
pop
stos
sbb
cmps
cmps
sti
xor
jb
out
in
js
dec
sub
out
aam
xor
das
mov
cmp
sub
push
fwait
les
sbb
push
retf
pop
and
(bad)
div
and
or
sbb
frstor
dec
dec
lods
fdivr
push
int3
cld
xchg
cs
pushf
imul
fisub
daa
xchg
push
and
pop
ja
add
fcomip
add
and
rcl
loopne
(bad)
mov
sbb
or
test
jp
mov
adc
scas
jns
data16
cli
ret
mov
ret
adc
xchg
pop
lock
sbb
mov
mov
sbb
push
in
inc
repz
dec
add
lock
das
fs
mov
sbb
shl
mov
retf
pop
mov
pusha
xchg
outs
sub
outs
inc
and
pop
out
or
outs
and
lods
ins
push
neg
pop
pop
fild
not
sbb
xor
mov
sub
fs
arpl
fmul
dec
push
in
push
xchg
fild
cmps
and
xchg
int
movs
aaa
ror
ror
imul
(bad)
retf
mov
in
fld
or
cdq
scas
push
pop
popa
outs
aam
popa
dec
in
test
push
test
and
inc
cdq
mov
mov
es
gs
inc
sub
(bad)
fstp
and
xor
xchg
mov
repnz
and
cmp
dec
stos
jae
xchg
dec
sub
xchg
sar
stos
adc
ds
sub
dec
adc
and
adc
mov
push
push
call
xor
mov
inc
mov
ins
stc
pop
les
outs
jg
call
loop
into
lock
adc
jbe
outs
inc
mov
dec
std
cmp
inc
push
ins
fimul
ret
(bad)
movs
pop
test
xlat
enter
jae
lods
mov
push
fwait
test
nop
cmps
mov
mov
stos
nop
test
inc
call
mov
pop
clc
rol
into
in
je
fist
mov
pop
and
sub
test
call
jnp
adc
dec
add
xor
stos
mov
jnp
popa
mov
push
cmp
or
jo
xor
mov
rcl
call
loopne
add
xchg
sub
sar
call
xchg
(bad)
scas
pop
adc
fdiv
fidivr
sbb
cmps
call
daa
mov
ja
scas
jnp
dec
mov
mov
adc
pusha
aaa
or
cmp
mov
cmc
pop
fsubr
push
movs
pop
loopne
sbb
and
pop
pop
pusha
lea
mov
pop
add
aam
imul
push
inc
push
add
outs
aas
sub
jl
push
cwde
sub
xchg
popa
mov
dec
mov
std
cmp
pop
fnstcw
fsub
mov
(bad)
iret
mov
push
aaa
or
push
mov
mov
imul
pop
add
sub
pcmpeqd
cmp
jne
adc
retf
mov
and
sbb
jb
dec
dec
inc
das
jno
push
ret
inc
or
push
rol
mov
pop
(bad)
shl
inc
cwde
push
xor
lods
out
sahf
ins
push
shl
jae
lds
xor
cmps
cmp
hlt
jmp
mov
push
or
jecxz
xor
mov
js
shr
jno
add
cmp
sub
pop
and
fdivr
lahf
test
scas
xor
jge
mov
and
repnz
imul
inc
dec
pushf
into
push
pop
add
stos
ins
in
mov
xchg
iret
xchg
(bad)
xlat
out
push
pop
out
mov
cwde
mov
in
iret
adc
stc
les
mov
(bad)
fwait
sub
sbb
mov
sub
sub
mov
or
inc
adc
adc
sub
ret
ss
les
jmpw
jbe
jle
xchg
aas
push
shr
mov
out
dec
push
inc
shl
lods
loope
popa
leave
loop
xchg
nop
enter
outs
aaa
(bad)
fistp
arpl
mov
jge
pop
push
(bad)
hlt
lahf
jns
aaa
fidiv
xchg
inc
je
dec
mov
mov
aaa
movs
jno
sub
aad
pop
xchg
leave
shl
jno
cmp
dec
cmp
add
shl
hlt
and
scas
into
movs
adc
loope
in
pop
and
test
rcl
or
mov
sar
and
xor
pop
push
fwait
lods
fcom
mov
stc
movs
xchg
loopne
jmp
push
jnp
fmul
(bad)
in
and
push
fs
imul
jbe
int3
ds
dec
pushf
pop
fs
(bad)
jecxz
push
jns
adc
ret
xchg
retf
imul
or
or
mov
cmp
call
mov
xchg
cmps
jp
cmp
sub
popa
rcr
les
pop
sar
add
jg
cdq
dec
rcr
aad
repnz
out
push
push
sub
movs
mov
cmp
ins
sti
js
ror
es
(bad)
mov
cmp
xchg
mov
mov
js
inc
js
and
out
sbb
push
sub
xor
dec
cld
sahf
clc
mov
imul
jmp
jo
dec
lods
ja
ins
add
pop
cmp
add
push
add
stos
cld
pop
clc
add
les
call
lock
dec
xor
inc
scas
outs
mov
outs
out
xchg
(bad)
or
xor
lods
jae
jmp
loop
(bad)
jmp
xor
and
push
mov
imul
sub
xchg
mov
cmps
rol
mov
xchg
(bad)
(bad)
fucom
lahf
pop
adc
test
mov
add
xor
fs
jmp
rol
and
ficomp
pushf
mov
and
mov
popa
call
adc
sbb
cmc
jmp
ret
mov
add
push
pop
or
push
cli
std
sahf
ins
aad
mov
arpl
je
outs
push
dec
sbb
mov
push
or
iret
gs
adc
call
ficomp
rcr
jb
inc
pushf
loope
jle
inc
stc
stos
add
mov
mov
retf
into
and
call
jg
adc
repz
scas
punpckhdq
push
pop
sub
push
mov
fimul
std
mov
scas
dec
add
stos
push
push
inc
repnz
pop
jae
add
test
stos
dec
ret
xchg
sti
(bad)
sbb
pop
jle
dec
inc
mov
out
sbb
test
psubd
xchg
xchg
test
mov
out
push
repnz
xchg
sbb
int3
mov
mov
js
mov
ss
sub
adc
inc
jle
repnz
xor
or
ja
into
movs
jle
and
push
je
xchg
mov
mov
(bad)
in
into
cmps
xor
rep
jb
je
cmpps
fisubr
into
push
mov
jb
add
fs
inc
jg
dec
fld
(bad)
jle
mov
mov
sahf
int3
adc
cmp
add
dec
pop
xchg
cmp
add
bound
sub
mov
adc
jne
sbb
xchg
sub
sbb
adc
mov
sahf
xchg
dec
mov
mov
pop
ja
dec
xlat
sbb
push
add
jb
mov
aad
mov
and
daa
add
(bad)
adc
adc
push
mov
jo
cwde
enter
ins
ficom
xlat
aam
lods
in
add
fidiv
stos
adc
lahf
inc
xchg
sahf
jmp
or
int3
fdivrp
xor
or
(bad)
(bad)
je
out
and
(bad)
aam
gs
and
cmp
mov
xor
mov
aam
sub
mov
in
or
push
jp
xor
(bad)
fistp
pop
push
(bad)
scas
cmp
pop
mul
cmp
cmp
fadd
pop
imul
outs
addr16
test
add
nop
push
lahf
enter
popa
dec
mov
adc
mov
addr16
inc
leave
adc
jmp
pop
fsub
enter
mov
arpl
lods
mov
ret
sbb
sub
jb
push
fldenv
dec
jno
push
bound
jmp
cdq
iret
loope
fist
xchg
cmps
xchg
pop
sbb
ins
lods
ror
xchg
sar
in
add
sub
ja
fsubp
sub
sbb
ror
cmp
loop
mov
dec
hlt
retf
loope
xor
mov
sub
adc
xor
and
jg
stos
xchg
test
imul
imul
adc
pop
(bad)
mov
aas
adc
jmp
iret
jbe
inc
jmp
xchg
call
or
mov
xlat
gs
mov
not
xor
in
jle
cmp
sti
jae
xor
ret
test
pop
adc
sub
aad
ss
outs
push
xor
(bad)
mov
adc
add
nop
jns
sbb
xchg
pop
int3
repz
push
cmp
pop
xor
cmp
dec
push
mov
cmp
iret
outs
cld
and
cdq
xor
xchg
leave
sbb
mov
scas
mov
push
popa
call
xchg
ror
xchg
mov
clc
repnz
loop
mov
inc
xor
inc
fdivr
add
xchg
jmp
imul
add
push
sbb
push
xchg
pop
mov
and
cmp
js
(bad)
push
pop
jmp
mov
imul
dec
sub
inc
call
aam
jne
sbb
gs
xchg
nop
add
xchg
outs
je
xchg
mov
sbb
mov
jecxz
mov
and
stos
inc
retf
retf
mov
push
test
push
add
xchg
cdq
xchg
jmp
call
push
iret
xchg
adc
mov
cmp
outs
icebp
div
hlt
mov
loop
test
ja
or
aas
rcr
jmp
arpl
loope
pop
xchg
pop
pusha
sub
loop
lock
inc
aas
cmp
or
imul
aam
inc
mov
(bad)
movs
shl
jb
test
js
loopne
inc
in
jbe
movs
int3
dec
push
movs
sub
add
or
ret
repnz
xchg
nop
pop
and
dec
xor
pop
xor
popf
es
sti
mov
and
jecxz
rol
adc
mov
pushf
dec
(bad)
mov
xor
mov
gs
call
lea
test
xor
mov
test
scas
jbe
sub
(bad)
cld
enter
mov
stos
push
int
(bad)
int
mov
ds
push
out
(bad)
in
clc
test
(bad)
sub
pop
popa
and
out
add
add
mov
or
fld
shl
mov
pop
mov
cwde
jbe
ficom
xor
jmp
(bad)
jnp
(bad)
push
out
mov
pop
pop
cmp
out
fild
sub
mov
adc
push
loop
lea
add
xor
jp
or
cld
cmps
push
imul
or
xchg
data16
mov
test
cli
adc
and
cmp
push
fstp
cmc
out
adc
gs
or
xlat
retf
add
lods
mov
ds
nop
aas
popa
into
cmps
add
imul
cmp
retf
push
push
dec
aaa
fs
fcom
test
or
scas
pop
cmp
mov
call
in
mov
push
mov
cmps
adc
mov
in
movs
imul
stc
les
int
inc
xor
add
movs
jl
fisub
pop
pop
in
jge
dec
fist
(bad)
fdivr
xchg
jge
sahf
or
cmc
hlt
xor
sti
xchg
inc
dec
icebp
aam
dec
aas
and
sbb
mov
add
imul
jl
cmp
or
dec
adc
out
mov
cmps
lods
aad
nop
xchg
leave
cmp
mov
test
div
adc
in
inc
out
(bad)
or
retf
add
rcr
inc
xchg
mov
sbb
pop
neg
sahf
sbb
xchg
sub
push
imul
rol
sub
pop
cmp
mov
jmp
or
push
jne
aas
loope
int
leave
lock
xchg
xor
dec
push
data16
or
dec
mov
ja
dec
sbb
(bad)
sahf
(bad)
js
lods
out
jle
mov
inc
jle
inc
pushf
adc
imul
mov
mov
sbb
pop
pop
cmps
loop
outs
mov
mov
mov
into
pop
sub
fdivr
mov
sbb
xor
xor
mov
sub
imul
sbb
dec
in
test
aaa
jge
(bad)
pop
or
jo
sbb
sti
sub
mov
inc
test
or
pop
dec
push
and
arpl
adc
bound
xor
repnz
add
sbb
cmp
xchg
xchg
mov
dec
pop
sti
jo
push
das
and
xlat
mov
popa
pop
je
loopne
stc
lahf
inc
cmp
and
sbb
pop
xchg
lahf
cmps
data16
inc
or
cmps
into
sub
ja
push
sbb
stc
inc
jo
cli
pop
fisubr
pop
inc
add
adc
mov
sub
loop
push
dec
sbb
cld
cmp
jno
test
test
mov
out
ins
enter
movs
in
shr
ds
popa
pushf
aam
test
jge
rcl
push
and
mov
nop
sbb
outs
jnp
mov
mov
or
or
pop
fst
mov
iret
loope
fnstsw
mov
cmp
mov
mov
out
pop
test
stos
cmp
leave
mov
ret
das
pusha
ror
adc
add
sar
adc
mov
jnp
aam
stos
ficom
(bad)
and
dec
jmp
in
or
ds
scas
cmp
mov
js
dec
and
sbb
daa
mov
sbb
enter
mov
shl
add
cmp
in
push
pop
jne
adc
inc
scas
cdq
std
(bad)
mov
fild
pop
cmp
jno
lods
mov
scas
mov
sbb
(bad)
pop
sub
es
js
inc
shl
add
outs
retf
mov
fistp
adc
int3
aaa
ds
sbb
mov
rcl
xor
(bad)
xor
enter
(bad)
test
retf
adc
(bad)
imul
(bad)
add
xor
inc
mov
lea
cwde
mov
jne
pusha
inc
rol
inc
inc
outs
(bad)
or
xlat
sub
jbe
mov
add
dec
out
(bad)
xlat
or
xchg
out
jnp
sbb
pop
iret
aam
sub
push
les
ss
sub
xchg
les
jle
out
nop
cs
movs
ds
adc
lock
inc
lea
xchg
imul
xchg
sub
sahf
or
or
call
xchg
ins
pop
mov
mov
pushf
imul
mov
call
jnp
add
mov
dec
aas
(bad)
sar
retf
add
sbb
frstor
rcr
jmp
(bad)
shl
jecxz
push
call
or
lods
mov
arpl
(bad)
hlt
cmp
or
shl
(bad)
mov
mov
xor
(bad)
(bad)
leave
in
mov
pop
out
mov
ds
inc
cmp
out
xor
(bad)
cmp
movs
mov
and
(bad)
shr
pop
push
mov
mov
or
and
sub
stos
clc
cmps
lods
and
xchg
add
test
sub
(bad)
sti
rcr
stos
shl
enter
mov
ffreep
jnp
push
xchg
daa
xlat
jae
and
scas
jle
xchg
sub
cs
jecxz
xchg
inc
mov
scas
xchg
xor
sub
lea
(bad)
pop
fst
test
loopne
and
cmp
loopne
div
outs
sub
fimul
xor
mov
pop
xchg
cmp
in
jne
shr
xor
lock
ret
jp
xchg
imul
sbb
cmp
nop
sub
push
ins
pop
jbe
and
xor
mov
test
les
sbb
dec
fisubr
jmp
xor
xchg
pusha
mov
xor
les
push
push
push
push
popf
mov
dec
jno
mov
dec
mov
imul
cmp
sub
jbe
pop
jecxz
mov
fidiv
lock
push
sub
xchg
mov
js
ins
jnp
test
jecxz
push
pop
aaa
inc
xchg
or
jnp
(bad)
sub
int3
add
lea
or
push
ja
rcr
push
imul
mov
mov
add
cmps
nop
cmps
repz
out
jecxz
push
sti
mov
adc
inc
mov
mov
lea
jle
sub
pop
test
xchg
fild
call
pop
xchg
ja
clc
test
jbe
rcr
scas
frstor
or
out
sbb
pop
std
out
leave
ja
or
test
xchg
xchg
ds
adc
cmp
and
xchg
call
addr16
stc
xor
lods
and
add
aas
pop
xchg
add
sub
icebp
outs
mov
mov
not
ds
or
adc
mov
outs
std
movs
js
ficomp
and
sti
xchg
push
adc
pop
data16
add
pop
arpl
popa
or
loop
mov
cmp
inc
xor
sahf
mov
fwait
pop
(bad)
mov
and
adc
adc
jmp
cmp
pop
cli
stos
(bad)
or
mov
xor
mov
data16
ret
push
and
test
push
stc
ds
in
call
fdivr
aas
adc
adc
ffree
mov
jnp
inc
aaa
mov
push
push
addr16
pop
mov
jo
call
scas
mov
sbb
jae
hlt
into
(bad)
rol
pop
push
std
mov
retf
lods
push
inc
sbb
jecxz
or
jge
push
jb
fs
into
mov
mov
out
jmp
(bad)
dec
shr
ss
js
ret
pop
(bad)
push
sub
mov
cmp
lods
out
mov
add
cmp
pop
cli
pop
iret
mov
retf
sbb
stos
and
push
mov
je
sbb
mov
add
cdq
stos
jno
push
or
fdivr
lock
push
imul
push
jp
sbb
(bad)
sbb
and
adc
and
dec
and
hlt
icebp
gs
add
xor
(bad)
xor
dec
fsub
xchg
push
(bad)
adc
mov
pop
lea
dec
fs
mov
add
(bad)
and
jmp
cmp
jae
xor
pop
sti
dec
add
adc
push
jae
loop
dec
sub
mov
rcl
into
mov
retf
push
imul
outs
pop
scas
cmp
adc
mov
sub
in
mov
cwde
mov
hlt
pop
(bad)
mov
cmp
jmp
leave
push
sbb
jp
rcr
add
sbb
arpl
mov
xchg
push
jo
adc
ds
push
idiv
pop
mov
cmps
add
arpl
or
and
call
xor
arpl
mov
repnz
pop
ror
lock
sub
add
fmul
push
pop
fdivr
and
aam
xor
mov
in
pop
add
pop
(bad)
ds
cmc
adc
iret
(bad)
adc
cmp
cs
or
adc
lea
movs
adc
mov
pop
mov
pushf
imul
add
sbb
jae
or
push
xlat
and
and
sub
ret
or
mov
mov
mov
mov
aas
mov
iret
xchg
sbb
sub
adc
fidiv
mov
cld
dec
xor
push
jle
(bad)
lods
shr
jne
ds
jns
sub
push
fbstp
mov
xlat
xor
sbb
test
lock
xor
fwait
mov
leave
test
std
xlat
popf
in
lods
xchg
jo
push
dec
bound
aam
sub
fist
cmp
ret
adc
cmps
and
cmp
bound
into
out
popf
xor
add
pusha
pop
in
dec
sbb
fsubr
adc
xchg
xlat
stos
jg
stc
repnz
int3
clc
clc
add
push
fistp
mov
scas
mov
test
xchg
call
push
aaa
xor
aas
or
(bad)
fidiv
xchg
pop
xchg
(bad)
push
maskmovq
sub
xchg
push
std
push
fcmovnu
mov
repz
or
pop
(bad)
add
inc
mov
(bad)
fldcw
mov
mov
mov
ins
div
aas
dec
push
mul
cmp
shl
div
cmp
test
std
mov
rcl
cmp
mov
fistp
mov
out
loop
jns
lods
adc
pop
cmp
sbb
add
inc
inc
lock
loope
xchg
fsubr
push
out
mov
pop
mov
push
outs
add
fwait
aad
adc
in
sbb
arpl
movs
fld
xchg
cmp
jbe
in
add
mov
xor
xor
leave
daa
inc
into
(bad)
(bad)
xor
mov
aas
enter
push
add
hlt
mov
push
and
sbb
ret
xor
(bad)
jo
outs
inc
jne
test
add
lock
add
mov
dec
pop
lock
adc
mov
jmp
xchg
mov
cmp
fs
aam
mov
jns
pop
or
xchg
and
cmc
js
mov
jo
iret
popa
test
loop
mov
xchg
xchg
addr16
mov
jnp
push
jmp
ins
shl
and
dec
sub
es
mov
stos
cmc
sub
scas
mov
repnz
xor
test
jp
inc
call
sub
adc
push
add
jb
add
xchg
es
and
into
xor
adc
fwait
mov
and
jb
or
int
xchg
(bad)
out
(bad)
mov
loop
mov
sbb
cmp
sti
sub
jle
dec
enter
ss
sbb
repnz
push
push
loop
fwait
jmp
adc
arpl
stos
mov
ja
pop
movs
adc
sub
or
movs
lods
add
in
call
(bad)
(bad)
xor
mov
sbb
mov
scas
rcl
or
sbb
movs
retf
sbb
pop
push
push
or
aam
add
xchg
aam
pop
jl
push
push
rol
jmp
and
bound
imul
sub
clc
test
in
inc
mov
push
cmp
(bad)
adc
mov
jge
pop
adc
mov
dec
retf
jmp
mov
sub
adc
outs
fcomp
mov
mov
push
and
mov
mov
mov
mov
les
sub
xchg
(bad)
mov
pop
sub
stc
scas
sub
shl
xor
pop
bound
add
or
fcomp
loope
je
sahf
cmp
bound
or
jg
icebp
mov
pop
outs
icebp
jno
mov
shl
call
xor
xchg
out
test
cmp
shl
sub
nop
pop
fdiv
test
jnp
push
pop
lods
cwde
or
push
add
dec
repnz
jbe
sub
mov
adc
rol
imul
sub
call
mov
aad
mov
iret
mov
je
sub
aad
mov
dec
mov
sub
mov
mov
ja
(bad)
push
les
popa
data16
ins
inc
ret
out
push
std
hlt
mov
push
loope
mov
sbb
ret
mov
sbb
inc
bound
jl
daa
push
rol
je
ficomp
fnstcw
push
or
aas
mov
aad
cmp
add
hlt
cmc
(bad)
jae
shl
xor
ret
iret
repz
add
aas
jo
dec
div
movs
je
retf
call
jno
enter
ret
mov
cmc
inc
sbb
addr16
clc
sbb
jb
mov
dec
test
stc
(bad)
in
imul
int
pop
and
mov
in
fs
adc
out
jmp
outs
jae
push
pop
adc
jmp
jp
sahf
mov
sub
ficom
in
int
pop
call
adc
cld
std
dec
sub
clc
jne
gs
xchg
inc
push
pop
jg
sub
mov
loop
mov
adc
sar
(bad)
retf
mov
or
(bad)
jo
fwait
cmp
cmp
push
dec
sbb
push
xchg
aam
xchg
mov
loope
lock
(bad)
mov
je
sbb
and
repnz
or
stos
fisttp
daa
sbb
push
jnp
inc
mov
add
data16
bound
or
cmp
cmp
pop
test
leave
or
xchg
mov
fisttp
pop
nop
movs
dec
xor
out
(bad)
fstp
sub
adc
jmp
mov
dec
or
jmp
mov
xor
xor
jle
in
push
pop
lods
inc
sbb
jnp
dec
test
ins
xchg
lock
test
repz
jb
shl
xchg
xchg
fcomp
das
scas
cmp
push
in
inc
pop
add
fcom
xchg
dec
std
cli
movs
or
jbe
ret
(bad)
call
dec
xor
rcr
popa
ret
adc
mov
jne
gs
out
add
pop
call
push
je
add
outs
jo
cli
mov
shl
mov
je
retf
cs
out
push
push
sbb
dec
fsub
outs
jmp
stos
in
xchg
adc
jb
dec
fimul
hlt
pop
scas
ja
leave
(bad)
pop
xchg
fmul
ss
adc
or
cwde
push
mov
xor
or
in
sub
cwde
jmp
and
out
xchg
sub
cmp
mov
dec
frstor
jp
retf
or
push
xchg
adc
xchg
xor
add
add
lahf
push
cmp
js
data16
aam
cmp
fsubr
xor
mov
loop
ret
fiadd
sub
cmp
or
cmps
pop
popa
mov
xchg
in
popf
call
fnstcw
push
mov
sub
leave
xchg
mov
hlt
lahf
mov
outs
dec
fistp
test
add
js
and
and
lahf
mov
add
jmp
scas
jl
test
jg
sbb
daa
mov
adc
les
gs
dec
cld
nop
jmp
or
mov
mov
or
sahf
stc
jne
and
pop
mov
and
inc
out
aas
pop
adc
nop
cmovp
and
clc
mov
adc
pushf
xlat
outs
xor
and
sbb
push
and
ins
mov
xchg
push
mov
cwde
test
cdq
pop
pop
test
push
fwait
test
inc
inc
into
jle
or
dec
xor
jmp
mov
and
mov
in
push
or
pop
xchg
neg
sub
in
sti
idiv
loopne
inc
cmps
vpsubq
fidivr
cmp
aam
mov
shl
xchg
jp
push
cmp
ds
sahf
xchg
(bad)
sub
jecxz
sub
pop
xchg
stos
jg
adc
out
mov
dec
gs
jp
cwde
xchg
sub
rcl
sbb
sub
xor
add
nop
mov
xchg
stos
inc
(bad)
xlat
dec
fstp
mov
into
jae
into
mov
xchg
sub
xor
test
rcl
dec
imul
jp
mov
jae
jge
mov
out
dec
mov
mov
jmp
adc
or
loopne
sub
lds
mov
ficomp
inc
push
and
push
(bad)
jnp
into
adc
adc
xor
mov
aaa
retf
aas
jge
xchg
neg
out
cmp
cmp
cs
dec
cmp
mov
push
jecxz
adc
pop
push
out
popa
pop
arpl
adc
fsub
and
push
fs
adc
loop
(bad)
push
mov
aad
xchg
pop
(bad)
mov
mov
test
fnstcw
call
int3
call
jmp
pop
xor
cmc
stc
fnstsw
or
push
frstor
and
or
out
int
xlat
add
stos
xlat
dec
pop
mov
cmp
jb
mov
pop
sbb
test
dec
scas
mov
dec
pop
jne
fstp
jl
cdq
add
inc
int
ss
cmp
popa
pop
js
jecxz
in
adc
out
imul
xchg
fdiv
inc
int3
dec
test
aam
push
pop
push
and
jns
jg
shr
sti
jp
hlt
stos
mov
bnd
imul
popa
xchg
mov
or
pop
push
inc
push
push
jno
mov
fwait
dec
sbb
hlt
and
out
push
cmc
push
ret
xchg
imul
mov
add
mov
out
das
xchg
mov
adc
ret
add
loop
(bad)
in
mov
sub
(bad)
je
stos
(bad)
mov
imul
inc
in
scas
ret
add
add
sbb
iret
jo
xchg
pushf
pusha
or
cmp
ficomp
cs
jecxz
in
xor
fbstp
add
(bad)
repz
push
dec
(bad)
fsubr
jne
jecxz
into
mov
mov
mov
jp
sbb
push
sub
in
enter
jl
int
and
unpcklps
mov
ja
popa
addr16
arpl
es
or
dec
je
or
push
add
add
aam
and
jo
scas
out
mov
pop
(bad)
push
sbb
les
jl
add
adc
jmp
jle
jge
sbb
out
inc
je
and
(bad)
adc
cmp
(bad)
movs
lods
jle
inc
arpl
fucompp
icebp
pop
cmp
mov
add
mov
sbb
sbb
xor
into
pop
out
xlat
add
pop
aad
sar
in
jnp
add
mov
pop
cmp
or
(bad)
push
push
and
test
mov
dec
stos
add
or
(bad)
sar
xor
jge
(bad)
sub
pop
jb
fs
dec
xchg
inc
adc
das
xchg
jbe
ret
add
ins
es
mov
std
shr
push
adc
or
jmp
cmp
arpl
stos
xor
shl
in
js
add
add
test
cmp
int3
jl
mov
ret
fcomp
push
inc
icebp
pop
ins
mov
ds
and
dec
daa
int3
or
xchg
sahf
cmp
in
inc
pop
aam
mov
xchg
pusha
adc
mov
scas
repz
cdq
outs
and
fcom
pop
pushf
push
cmp
inc
mov
(bad)
pop
inc
rcl
je
movs
xchg
pop
gs
dec
cmp
ss
icebp
arpl
push
push
xchg
adc
shl
hlt
jo
xchg
jl
sub
or
rol
cwde
into
sbb
mov
inc
(bad)
(bad)
fstp
fstp
inc
dec
scas
cmc
sbb
les
pop
push
pop
cs
mov
or
cmp
retf
jns
push
(bad)
mov
(bad)
xchg
push
cmc
cmc
sub
sub
test
xchg
scas
cmp
xchg
iret
stos
mov
jp
pop
stos
inc
mov
rol
and
hlt
lds
movs
setl
fdiv
push
push
ret
push
nop
xchg
push
je
test
xchg
stos
iret
pop
repz
jns
mov
iret
mov
add
xchg
(bad)
pop
add
ja
call
aas
pop
stos
mov
out
lds
popa
js
jno
into
pop
cld
lock
mov
inc
fadd
jno
mov
in
mov
cmp
and
cmp
aaa
add
cli
pop
scas
retf
shl
sti
mov
fst
cmp
cmc
nop
sub
in
cmp
pop
dec
mov
or
(bad)
push
xchg
jnp
pop
mov
xchg
or
cmp
dec
out
push
xchg
mov
xor
in
adc
mov
sbb
(bad)
push
inc
xchg
push
and
jbe
ds
sbb
in
jbe
sbb
aad
pop
(bad)
fisttp
dec
pop
push
cmp
sub
push
mov
jmp
sbb
movs
retf
or
sbb
lds
mov
hlt
mov
fdiv
nop
add
add
aas
jbe
nop
pop
call
push
hlt
pop
rol
call
push
scas
mov
pop
adc
xor
addr16
xchg
xor
sbb
and
pop
add
outs
loopne
ins
imul
mov
push
fcom
jo
mov
lock
call
push
les
mov
sbb
sti
add
bound
call
out
sbb
loopne
adc
in
push
mov
sahf
mov
pop
mov
mov
jmp
cmp
mov
xchg
pop
hlt
gs
push
and
adc
out
imul
sub
mov
sbb
rcr
mov
pop
xchg
(bad)
xchg
adc
aam
mov
aam
stos
cmps
les
and
rcr
pop
push
into
mov
ins
inc
mov
adc
cs
mov
or
iret
fild
mov
(bad)
mov
stc
(bad)
add
lahf
mov
sbb
and
jmp
and
xor
pop
shl
rcl
popf
aad
jle
or
push
call
fidivr
stc
sbb
push
and
add
lock
dec
sub
pop
jp
mov
cli
mov
and
or
rep
push
jmp
pop
cmp
imul
lods
adc
inc
imul
sub
adc
sbb
int
pop
xchg
push
push
push
inc
mov
imul
(bad)
xchg
sbb
(bad)
sar
in
inc
and
in
mov
imul
push
mov
sub
inc
out
pop
xor
jle
push
ret
data16
data16
lahf
out
pop
sbb
xor
xchg
mov
jle
or
cmp
lods
and
sbb
jecxz
jns
add
pop
adc
into
add
cmp
sbb
fsubr
pusha
(bad)
jmp
scas
mov
mov
cmp
xchg
ror
mov
add
jmp
and
adc
push
sbb
retf
push
stos
xchg
xchg
and
scas
mov
repnz
pop
add
inc
jmp
cmp
push
fld
aam
fisttp
pusha
fld
(bad)
adc
xchg
xchg
stc
adc
mov
inc
int3
call
stc
sti
adc
ja
inc
jmp
mov
aam
xor
or
dec
(bad)
sbb
and
dec
xor
xor
mov
(bad)
retf
dec
pusha
mov
icebp
not
dec
call
xchg
sbb
addr16
mov
mov
je
fdivr
push
xchg
lea
mov
xor
cmp
gs
daa
jae
sbb
or
xlat
(bad)
pop
inc
cmps
push
ror
fisub
scas
push
or
xor
cmc
in
xor
sub
std
(bad)
or
mov
and
push
test
movs
clc
add
cmp
scas
xor
call
inc
mov
(bad)
addr16
pusha
and
jbe
add
or
inc
(bad)
and
call
mov
xchg
(bad)
adc
bound
mov
mov
mov
sub
dec
movs
gs
clc
leave
aaa
shl
jmp
aad
movs
mov
jl
pop
ja
push
and
shr
or
sahf
or
in
pusha
and
add
xor
xchg
iret
ret
push
jo
data16
out
mov
std
mov
mov
xchg
jo
ret
pop
mov
mov
jecxz
or
mov
xor
mov
add
jl
stos
or
push
ds
repnz
imul
movd
adc
and
sbb
int3
mov
pop
adc
add
and
cmps
arpl
test
jge
ja
inc
(bad)
(bad)
pop
cdq
sbb
add
jnp
sub
call
dec
push
mov
push
enter
xor
push
mov
xchg
inc
stos
in
push
jno
mov
inc
lds
out
enter
mov
push
fwait
stos
jmp
movs
jmp
jmp
ss
sub
xchg
jns
sub
cmp
test
bound
mov
push
hlt
mov
mov
lahf
mov
sbb
mov
test
mov
stos
xor
ret
shl
push
add
push
push
mov
add
clc
push
jnp
cmps
call
das
fistp
loopne
mov
mov
adc
repz
aam
imul
xchg
ret
cmp
push
jmp
aad
std
push
xor
ret
ins
dec
fidivr
mov
mov
sbb
vpsubq
mov
push
scas
ins
repz
ds
fdivr
mov
test
push
jno
inc
fiadd
into
imul
stc
std
js
sub
xor
inc
js
mov
sbb
enter
pushf
div
(bad)
mov
mov
daa
mov
test
mov
pusha
and
lock
movs
mul
mov
push
sbb
xchg
sub
test
xchg
sub
pop
fdiv
fcomi
mov
mov
arpl
std
add
jg
movs
push
mov
test
xchg
repnz
leave
mov
pop
dec
in
sub
jbe
(bad)
dec
sub
retf
mov
jmp
xchg
aam
bound
cs
aam
adc
dec
cdq
loope
jle
push
iret
lods
sar
and
in
xor
xor
add
test
push
xchg
ss
outs
ins
stos
mov
or
lea
scas
repnz
push
fiadd
or
push
neg
xchg
lds
pop
gs
imul
lods
cwde
fdiv
push
xor
pop
inc
cdq
sbb
in
fadd
test
push
sbb
int
xchg
add
cmp
jmp
in
lock
test
lods
xor
enter
lods
mov
cmc
mov
(bad)
push
ins
es
or
and
scas
cmc
xchg
ret
les
sub
test
or
jmp
push
sub
cmps
jmp
fisubr
ss
pop
add
mov
add
pop
sbb
test
xbegin
in
in
push
out
xor
add
pop
lds
imul
mov
cmp
mov
cmc
pop
fnstcw
xchg
sub
stos
jno
push
inc
jns
out
adc
mov
cli
or
xchg
and
ret
stos
and
sahf
adc
shr
dec
ja
xchg
adc
movs
das
repnz
adc
inc
iret
retf
jae
or
jnp
ss
addr16
or
inc
lahf
inc
lods
fisttp
stos
int3
nop
and
jnp
xchg
je
loop
movs
fxtract
lock
test
adc
dec
cmp
sbb
ins
sub
scas
mov
xchg
cmp
out
pop
pushf
pop
fcmovnb
sub
sub
inc
mov
call
adc
(bad)
std
fwait
test
mov
ds
pop
mov
(bad)
pop
mov
shl
jmp
lods
pop
jg
fbstp
xchg
pop
call
fild
xchg
pushf
sar
fisub
shr
lock
hlt
pop
push
(bad)
imul
xor
add
or
outs
(bad)
nop
jne
sub
repz
pop
jbe
js
push
addr16
jne
inc
jnp
xlat
pop
xchg
pusha
add
xchg
test
popf
cld
adc
bound
dec
pop
test
ss
add
xor
cmps
(bad)
inc
imul
enter
jmp
or
pop
pop
jae
cmp
dec
nop
pop
sub
(bad)
jb
sti
dec
retf
lock
inc
mov
adc
cwde
imul
fwait
xchg
dec
push
pop
clc
xchg
xchg
pop
adc
mov
push
gs
lods
fwait
inc
cmps
jecxz
outs
push
pop
scas
mov
dec
mov
mov
jmp
fcmovne
test
in
sbb
imul
inc
sti
hlt
push
or
jns
popa
sub
mov
adc
cld
push
mov
gs
xchg
push
xor
sbb
jo
fld
lock
cmps
mov
jns
jno
mov
add
xor
or
mov
xor
jne
or
imul
sbb
dec
jae
push
xchg
dec
pop
std
mov
dec
ficomp
pusha
mov
cmp
xchg
loope
adc
mov
inc
daa
xor
push
xor
xor
es
sbb
mov
outs
xchg
inc
popa
sbb
bound
scas
jb
jg
add
lds
scas
retf
icebp
repnz
leave
dec
dec
gs
and
cmp
sub
jb
ss
jg
adc
adc
jg
lods
sbb
sub
jle
jge
inc
xor
in
ret
sbb
in
sbb
std
push
sbb
xor
scas
out
popa
mov
(bad)
mov
lea
push
jge
push
out
mov
pop
xor
mov
mov
add
stc
(bad)
fdiv
and
sub
mov
int3
bound
add
seta
test
adc
stos
imul
push
retf
jnp
sub
mov
pop
scas
imul
pop
aam
mov
ror
dec
loope
jbe
leave
out
mov
cmps
xchg
inc
retf
cmp
hlt
cmp
div
xor
pop
mov
ret
add
shl
inc
pop
adc
push
cld
xchg
out
cmp
mov
lea
and
jae
adc
movs
fsubr
dec
imul
cmp
mov
sar
ja
daa
adc
retf
pop
or
stc
pop
xlat
(bad)
imul
loop
pop
out
mov
fs
adc
or
pusha
cmps
shl
push
xor
pop
adc
sub
xchg
inc
jns
nop
mov
nop
cmps
push
pop
cmp
aam
pushf
or
outs
inc
popa
jge
mov
pop
xor
pop
cli
pop
and
imul
call
jge
cwde
fisttp
mov
mov
mov
xchg
fcmovnu
repnz
jnp
xchg
push
out
outs
daa
inc
loope
in
in
inc
adc
rcl
or
lahf
sti
je
cmp
mov
jmp
mov
jne
(bad)
and
cmp
vshufps
ss
xchg
mov
xchg
sahf
dec
shl
adc
lea
lock
pusha
scas
movs
sbb
mov
mov
dec
jmp
pop
std
dec
dec
mov
cmp
add
jl
rcr
mov
add
dec
add
pop
(bad)
scas
or
ss
outs
(bad)
mov
cmc
lods
enter
es
push
aam
int3
dec
pop
inc
movs
dec
pop
pop
test
cmp
ins
arpl
xchg
xchg
ins
inc
or
xor
push
push
jle
mov
test
sbb
shr
stos
(bad)
pop
cmp
not
fwait
ins
aam
cmp
enter
push
retf
xchg
dec
mov
dec
jnp
push
ret
retf
into
ins
outs
mov
sub
or
xor
and
loopne
icebp
xchg
cmp
push
and
jae
imul
ins
fldcw
xchg
neg
cmp
sub
xor
in
cmp
sahf
mul
lock
bound
mov
mov
mov
inc
sub
adc
ss
dec
in
aam
push
jge
in
cmp
push
in
mov
mov
data16
popa
mov
mov
sbb
sub
push
test
clc
mov
add
dec
mov
in
xlat
adc
je
fistp
inc
loop
pop
and
xor
cmp
lahf
add
popf
out
int
call
fld
fld
fdivr
fist
add
jg
add
outs
sub
loop
sbb
mov
jl
sbb
cmp
mov
xlat
add
xor
jle
mov
mov
loop
fbstp
es
(bad)
aad
jg
and
cld
in
fst
jno
xchg
ds
cmp
add
mov
rcr
cmps
ret
iret
(bad)
fsub
sbb
inc
cmps
xchg
int
pop
sbb
or
movhps
lock
idiv
lods
cs
sti
mov
jo
nop
pop
imul
push
ja
(bad)
shl
adc
imul
inc
jl
inc
mov
int
pop
xchg
in
out
mov
sti
mov
cmps
sub
lods
mul
and
popa
shl
or
retf
cmp
pop
mov
mov
sbb
aas
stc
sub
outs
jge
aas
push
int3
inc
ins
ficom
das
xor
dec
cmps
and
push
call
pop
jnp
adc
fnsave
sbb
sbb
mov
mov
sub
mov
rol
ss
mov
mov
movs
(bad)
(bad)
bound
aad
addr16
(bad)
pop
rol
fnsave
jb
cmp
add
rol
mov
test
mov
inc
add
inc
push
call
add
pop
xor
and
aas
popa
pop
jns
idiv
or
sahf
movs
jae
frstor
jp
lds
cli
lds
sub
in
mov
and
shr
add
sub
sbb
inc
xor
and
add
push
inc
xchg
pop
out
sbb
pushf
movs
or
add
mov
mov
push
adc
inc
loope
test
imul
adc
dec
dec
in
or
adc
pop
jl
ins
test
mov
mov
push
xlat
xchg
add
ins
outs
xchg
sub
push
cmp
push
xchg
xchg
mul
mov
mov
add
xchg
adc
jge
adc
xor
test
lods
test
imul
or
fwait
outs
rol
test
aam
hlt
div
mov
aas
mov
mov
or
aam
jnp
mov
sub
or
xor
loope
push
repz
pop
xchg
jmp
sbb
(bad)
fcomp
fs
xchg
or
test
popf
xchg
add
imul
mov
cli
sub
fimul
imul
movs
sbb
jge
jmp
push
mov
enter
jmp
aaa
fmul
sbb
(bad)
test
cmp
aaa
ds
aam
int
dec
rcr
xchg
mov
addr16
icebp
pop
xor
push
xchg
test
loope
call
repnz
mov
daa
ins
inc
sti
cmps
add
mov
stos
sbb
mov
int3
das
lahf
test
mov
cmp
nop
push
xor
xchg
push
into
mov
shl
pop
jge
popa
fisub
jno
movs
arpl
test
xchg
hlt
ret
pushf
cmp
xor
ficom
ficomp
pop
cmc
sbb
xor
in
dec
rcr
mov
push
lods
js
movs
retf
dec
mov
int
jbe
inc
and
and
adc
pop
cmp
fs
xchg
and
and
adc
dec
ja
adc
xchg
xchg
int3
in
enter
adc
dec
hlt
psraw
inc
mov
cmp
aad
pop
(bad)
pop
push
add
in
repz
and
add
dec
pop
(bad)
out
add
rcl
adc
mov
cld
or
je
mov
or
scas
jge
(bad)
fstp
pop
mov
inc
or
scas
mov
push
sbb
test
inc
lahf
pop
in
cmp
mov
out
push
xor
mov
dec
out
inc
cmps
retf
fwait
nop
mov
adc
adc
fnstenv
stos
inc
rcr
inc
sbb
dec
push
adc
mov
stc
jl
adc
dec
adc
sbb
mov
in
mov
in
sub
push
jg
or
xor
lea
mov
add
pop
addr16
js
das
mov
lods
add
aaa
jp
addr16
nop
hlt
fidiv
xchg
cmp
repnz
ror
mov
out
sar
js
pusha
sub
and
mov
cmps
xor
frstor
and
pop
adc
dec
inc
sbb
mov
jbe
cmp
inc
mov
loope
movs
add
out
sub
sub
lea
jmp
xor
dec
inc
jp
scas
mov
xchg
std
lods
inc
sub
and
scas
sub
fbld
adc
movs
cmp
xor
imul
jne
test
xor
add
jae
mov
repz
dec
imul
fdiv
or
lods
imul
mov
mov
sub
sub
mov
out
mov
enter
push
jbe
mov
fimul
xor
fs
cld
cmp
js
out
sub
mov
retf
or
test
push
mov
xor
cmp
shl
nop
ins
xchg
xchg
cmp
pop
xor
outs
jbe
scas
or
xor
hlt
adc
cmp
mov
xchg
es
lock
loopne
push
(bad)
stc
push
inc
js
jae
mov
fsubr
loope
push
mov
das
popf
mov
xor
jmp
cwde
ins
retf
cmp
call
mov
add
out
test
aam
pop
mov
lods
ja
add
and
sbb
les
in
imul
and
iret
into
jp
je
cmp
fimul
mov
and
dec
cld
adc
xor
dec
xchg
int3
loope
ss
pop
scas
jae
push
inc
(bad)
xchg
(bad)
aad
pop
iret
mov
retf
rol
adc
add
mov
push
cmp
sbb
(bad)
mov
lods
mov
xchg
in
adc
ins
xor
ret
cmp
int
push
jne
inc
not
or
inc
rol
inc
aaa
push
in
loopne
dec
shl
sub
pop
dec
add
inc
aaa
ins
mov
jecxz
outs
jae
cmps
push
mov
aas
ins
ins
es
cld
repnz
fldenv
xchg
pop
sub
mov
pop
jnp
(bad)
ror
call
mov
pushf
scas
cmp
mov
retf
pop
or
cmp
dec
arpl
dec
cdq
and
(bad)
push
add
popf
inc
dec
add
cmp
clc
sub
inc
cmp
ins
xchg
movs
mov
push
and
dec
xchg
cmp
jo
dec
jl
stc
cmp
arpl
mov
call
nop
sbb
mov
xchg
mov
sbb
(bad)
pop
mov
inc
mov
shl
xor
sub
mov
push
xchg
in
(bad)
fbld
dec
je
std
fmul
cmps
cmps
or
(bad)
aaa
shl
push
xor
cmp
vprotw
pop
inc
shr
jns
adc
jle
jae
aam
aam
ja
add
push
rcl
das
sub
adc
jnp
stc
inc
inc
outs
jno
rol
or
out
call
cmp
es
gs
push
mov
add
ss
in
or
rcr
mov
popf
inc
fwait
popf
pusha
xor
jle
stc
xor
push
sbb
add
add
sahf
push
pop
imul
mov
jb
pop
dec
xor
ret
aad
addr16
push
ret
xor
jle
int3
loopne
dec
outs
jbe
mov
mov
xchg
push
push
or
jecxz
nop
sub
jmp
sub
push
xchg
call
xor
mov
ins
dec
bnd
sbb
sub
fidivr
stos
(bad)
out
pop
push
fsubrp
retf
out
rcl
movs
add
scas
mov
ficom
mov
adc
addr16
add
add
jmp
push
pop
in
dec
repz
sbb
shr
pop
inc
adc
(bad)
scas
pop
dec
in
dec
scas
in
or
mov
cmp
pop
(bad)
ret
mov
(bad)
pop
add
sub
pop
mov
clc
jge
mov
ret
add
mov
mov
iret
push
and
scas
mov
retf
dec
mov
retf
aas
mov
xor
aad
lds
mov
mov
mov
rcl
(bad)
push
mov
imul
or
fmul
xor
ins
pop
test
sbb
sbb
leave
push
jmp
sahf
(bad)
jo
pop
mov
cmp
or
xchg
imul
test
fisub
(bad)
jmp
pop
xchg
test
or
fadd
fdivr
mov
imul
shl
cld
push
sbb
aaa
stc
fadd
iret
loopne
sbb
pop
mov
loopne
push
jmp
xchg
sub
xchg
cmps
sti
jbe
mov
stos
leave
mov
lds
in
mov
or
cmp
xchg
inc
xor
mov
cmp
xor
and
aas
sbb
mov
jl
inc
outs
jns
push
lea
adc
xor
rcl
test
sar
xor
cmp
out
bound
sub
data16
in
push
(bad)
fcmovne
add
ins
sahf
sti
dec
or
mov
sbb
fcomp
fbstp
lods
aaa
xchg
pop
pushf
xor
inc
jl
imul
inc
inc
and
push
shl
and
adc
js
mov
iret
inc
add
xchg
cmp
stc
mov
xchg
inc
in
std
or
in
sbb
test
test
pop
sbb
dec
sar
fdiv
std
imul
sti
mov
invd
push
mov
push
daa
cli
ds
pop
neg
pop
test
or
cmp
push
fist
fucomi
xor
push
ficom
mov
or
call
imul
push
mov
dec
ss
into
loopne
cmp
inc
sbb
cmp
(bad)
cwde
jge
push
pop
cmps
dec
pop
addr16
or
push
jmp
and
jnp
stc
jp
sub
fwait
mov
jl
push
shl
lds
xor
push
inc
inc
mov
shl
aam
or
add
push
mov
arpl
add
dec
xor
add
dec
addr16
xchg
and
lea
jl
pop
sar
sub
and
sti
mov
ror
cld
and
mov
pop
sbb
xchg
and
repnz
out
aam
sbb
es
pusha
xchg
dec
add
test
or
mov
ret
mov
add
mov
sbb
das
dec
push
outs
sbb
das
add
icebp
in
sub
loope
std
mov
mov
cwde
mov
lods
xchg
jmp
(bad)
iret
adc
sbb
xchg
adc
xchg
mov
cmps
pop
pusha
sar
test
in
loopne
mov
lods
outs
shl
mov
jmp
and
xor
lock
(bad)
jns
xor
push
mov
jnp
out
(bad)
cmp
add
bound
leave
scas
pop
xlat
add
stos
ss
jnp
sbb
das
push
cmp
retf
cli
mov
sub
dec
rcl
test
nop
pop
inc
mov
outs
movs
fs
sub
cmp
and
jb
dec
push
mov
mov
dec
lods
add
cwde
cmp
push
fcom
inc
lea
arpl
dec
cmc
or
xchg
fmulp
ficom
add
or
scas
dec
sbb
data16
shr
imul
leave
movs
hlt
jns
imul
fld
rcl
add
add
mov
leave
fwait
pop
sub
nop
xor
jbe
(bad)
js
fisttp
scas
cwde
and
add
(bad)
into
loop
leave
pop
loopne
and
outs
rol
(bad)
std
xor
jns
xor
dec
and
adc
push
jl
mov
test
jnp
jge
into
xor
dec
mov
aaa
add
xchg
popa
jl
mov
pop
je
jmp
int3
mov
enter
ja
or
nop
mov
fbld
jle
imul
out
sti
popa
pusha
jmp
mov
mov
nop
ficomp
mov
(bad)
mov
test
pop
pop
or
aaa
pop
xor
adc
jns
fld
mov
iret
add
mov
cmc
jo
loopne
jns
repz
cmp
rcl
add
mov
or
fwait
or
pop
add
mov
jecxz
cmp
cmp
inc
imul
ins
cmps
jns
aas
mov
lea
sbb
div
sbb
cmp
fist
jno
add
(bad)
ds
mov
xchg
add
sahf
scas
aam
mov
lahf
or
pop
push
out
push
cld
jecxz
scas
mov
adc
mov
pusha
mov
dec
test
fwait
xchg
movs
jle
lea
mov
mov
ins
(bad)
xor
stc
mov
inc
pop
leave
sub
lock
add
and
(bad)
inc
push
adc
cld
das
shl
push
xlat
dec
(bad)
add
ret
enter
mov
mov
xlat
scas
lahf
leave
mov
rcl
pop
(bad)
sub
fld
sbb
sub
sbb
mov
pop
inc
jle
std
or
in
test
js
sub
call
fwait
adc
pop
lahf
inc
jge
sub
xor
jns
aas
pusha
adc
xchg
ja
out
ficomp
mov
cmp
pop
inc
in
aam
jmp
leave
cld
fs
(bad)
jmp
gs
shl
sahf
je
movs
mov
je
icebp
and
add
pop
retf
icebp
es
lds
xor
cmp
loopne
push
or
call
inc
add
jg
cdq
std
or
dec
jle
mov
xchg
cdq
adc
and
enter
pop
int
cdq
aad
cmp
and
out
cld
push
test
and
fs
xor
movs
mov
push
adc
cdq
xor
jo
adc
mov
ds
stos
stos
inc
lea
shr
inc
jge
lock
sbb
scas
aaa
mov
test
aaa
pusha
iret
packsswb
sbb
repnz
add
mov
add
fwait
dec
jmp
xor
test
sbb
push
bnd
in
lock
jl
pop
jnp
dec
push
mov
iret
or
es
test
ror
scas
sub
jns
cld
aaa
add
dec
data16
add
or
jle
push
test
retf
sahf
and
jmp
and
pop
or
jns
fist
movs
daa
mov
outs
cmps
test
fisttp
jp
aad
ins
imul
sbb
fldenv
test
xor
call
out
(bad)
push
mov
sbb
push
inc
jmp
aas
fild
pusha
clc
jae
cld
pop
xlat
icebp
mov
and
adc
pop
pushf
mov
mov
sub
add
ret
enter
cwde
ins
xchg
mov
or
cmp
inc
mov
stc
mov
add
xchg
pop
sar
push
pop
dec
fwait
out
mov
or
sbb
bound
mov
inc
in
fist
fdivr
mov
adc
mov
push
rcr
xchg
nop
mov
jmp
aam
pop
fnstcw
adc
sbb
mov
sbb
xchg
pop
push
cs
int
add
dec
dec
in
dec
mov
push
popa
cli
add
mov
xor
sbb
int3
jno
lds
add
lods
jl
add
pop
xchg
cmp
push
sbb
and
cmp
and
rcl
movs
jns
es
sbb
std
cld
dec
push
ds
push
scas
je
jno
adc
out
mov
dec
pushf
mov
cs
cs
sub
dec
jns
in
cmp
nop
push
mov
jmp
dec
add
mul
cmp
mov
fistp
or
inc
cmp
xchg
lea
sar
imul
ret
or
push
lds
loopne
(bad)
fcomi
inc
mov
pushf
inc
inc
popf
mov
jnp
(bad)
out
in
mov
mov
mov
mov
inc
stc
inc
cmc
sbb
sub
sub
pop
neg
jmp
das
adc
cmc
js
pop
mov
pop
or
sub
ins
outs
daa
push
fsubr
mov
icebp
ds
scas
add
xchg
lahf
in
rcl
sar
push
movs
fldcw
push
adc
jno
xchg
inc
and
aam
aaa
pushf
scas
fs
int
and
fldenv
fwait
sub
loop
or
xor
mov
(bad)
daa
gs
sub
dec
mov
inc
xor
fdivr
push
lods
mov
push
add
outs
jno
in
scas
scas
xor
pop
pop
test
mov
sar
push
or
fisubr
cmc
mov
ins
xchg
pop
push
aad
xor
inc
sti
repz
adc
xchg
aam
xor
dec
js
add
sbb
test
mov
cli
fisttp
das
retf
cmps
dec
(bad)
and
cwde
pusha
push
outs
or
mov
pop
pop
sub
pop
inc
shr
int3
jge
mov
mov
fist
jo
addr16
pop
rol
xchg
out
push
xchg
xchg
je
pushf
aaa
cmp
adc
inc
addr16
inc
mov
pop
and
jno
mov
jge
lock
mov
adc
in
daa
cmc
or
leave
das
or
xor
xor
adc
mov
jp
xor
or
imul
xchg
dec
or
retf
cdq
std
popa
or
jp
dec
(bad)
push
sahf
adc
(bad)
pusha
inc
imul
out
or
leave
jp
sbb
pop
mov
int3
retf
aas
and
cdq
inc
call
(bad)
int3
mov
into
lods
adc
aaa
xor
pop
retf
fnsave
dec
pop
inc
inc
adc
mov
imul
push
sti
imul
pusha
mov
pop
pop
push
outs
mov
fwait
jo
pop
xchg
pop
ret
pop
(bad)
adc
mov
jne
pushf
out
in
and
xchg
in
mov
test
shl
icebp
js
push
pusha
cli
cmp
mov
or
xor
ds
xchg
sbb
daa
lea
cld
fdivr
pop
retf
mov
out
mov
and
lods
outs
ret
data16
mov
addr16
sub
sub
lahf
ds
pop
rcr
push
dec
and
(bad)
inc
scas
ret
sub
dec
jle
bnd
shl
mov
and
or
call
les
repz
jno
stos
push
adc
retf
push
in
or
out
jp
xchg
and
pusha
jne
xor
xchg
retf
iret
pop
pop
pop
icebp
or
aaa
xchg
(bad)
xlat
and
aaa
scas
dec
push
push
dec
dec
mov
dec
addr16
cmp
push
pusha
mov
aad
mov
mov
pop
adc
popa
inc
mov
mov
jle
shl
sbb
pop
mov
enter
cmp
xor
int3
inc
mov
imul
push
jo
push
lahf
in
jmp
stc
jns
mov
outs
dec
cli
(bad)
retf
xchg
xor
dec
fwait
ds
add
sub
fwait
psubb
lahf
retf
je
pusha
adc
pop
retf
(bad)
xlat
pop
mov
and
rcl
imul
pop
aad
fstp
ins
inc
xlat
push
lds
int
mov
and
hlt
test
and
push
add
mov
mov
fnsave
cmp
retf
mov
pop
loop
jno
inc
adc
cmp
test
iret
daa
mov
lods
cmp
or
cmc
sub
mov
fnstcw
repz
inc
mov
cld
inc
mov
dec
sub
sbb
psubb
ror
pushf
lods
xchg
jp
sahf
mov
movs
mov
xchg
out
jecxz
frstor
sbb
lahf
add
js
jmp
mov
imul
out
mul
push
add
aam
pop
shr
mov
lea
xchg
mov
mov
pop
mov
dec
aad
mov
mov
cmc
ficomp
(bad)
mov
push
loope
or
dec
dec
xlat
cmp
add
ds
ret
pusha
out
adc
mov
les
and
retf
cmp
xchg
cli
es
shr
xchg
dec
fwait
mov
js
cli
ror
retf
pop
xchg
mov
or
int
std
data16
add
and
in
sub
scas
std
int
mov
mov
adc
icebp
inc
scas
das
sbb
out
xor
(bad)
fidivr
fstp
cmp
inc
mov
xchg
adc
mov
push
(bad)
and
ja
loope
or
xor
loope
in
ja
(bad)
in
and
int3
retf
movs
pop
sub
out
and
sub
xchg
(bad)
mov
call
loopne
xchg
es
jecxz
sub
mov
or
sub
add
loopne
xor
xchg
stos
mov
mov
jno
ja
jmp
sbb
and
lea
sahf
jecxz
or
push
jne
in
add
push
mov
outs
push
mov
addr16
adc
outs
xchg
enter
xor
xchg
movs
sbb
in
xchg
inc
inc
add
push
fstp
xor
jae
or
mov
xor
push
mov
dec
and
inc
loopne
fild
in
fwait
cli
push
aas
xchg
mov
(bad)
call
fld
cdq
xor
cmp
(bad)
adc
inc
pop
sub
push
pushw
into
xlat
mov
xor
cwde
sub
lods
add
jl
xchg
mov
mov
mov
std
dec
mov
dec
and
dec
(bad)
sti
nop
mov
sub
lods
daa
pop
mov
jns
sbb
lods
adc
pushf
pushf
rcr
xchg
data16
add
sbb
mov
fld
jmp
add
add
rcr
pusha
hlt
out
jne
nop
fdiv
icebp
enter
pop
ja
add
das
sbb
mov
stos
cmp
outs
mov
pop
sbb
imul
pop
fiadd
inc
ds
adc
cmp
xchg
ins
push
mov
adc
fisub
scas
cmp
xor
enter
pop
ja
mov
daa
mov
pusha
jmp
inc
loope
arpl
jg
nop
lds
mov
mov
inc
in
mov
push
jmp
cmp
add
xor
shl
dec
push
pop
popa
dec
inc
sbb
mov
push
out
add
jmp
sbb
dec
or
fdiv
imul
fxtract
arpl
mov
sbb
inc
jl
pop
ds
imul
sbb
xchg
xchg
pusha
pop
clc
dec
sar
test
add
mov
ret
dec
test
mov
addr16
mov
or
jp
mov
pop
stos
and
jge
ins
lock
iret
inc
out
shr
adc
xchg
or
mov
mov
aam
cmc
mov
fst
dec
out
ins
shl
xchg
dec
rcr
mov
dec
fadd
pop
xor
repz
leave
leave
jg
fnstenv
iret
leave
adc
mov
rcl
cld
xor
mov
je
and
and
adc
and
sub
ss
xor
push
mov
mov
repnz
adc
push
add
mov
arpl
pop
fwait
shl
jo
xchg
or
jg
and
sbb
call
xor
push
dec
push
add
mov
cmp
xchg
adc
inc
xchg
inc
jno
gs
and
xor
xchg
stos
(bad)
jge
add
fwait
mov
sub
test
jnp
in
dec
(bad)
mov
xchg
imul
inc
ret
mov
rcr
rcr
sbb
mov
rcl
test
dec
pop
in
cmp
test
cli
out
std
in
in
xchg
mov
cmc
add
rdpmc
and
xor
mov
push
out
in
and
xchg
pop
stc
fwait
sub
add
add
in
cmp
scas
pop
test
or
cs
test
push
mov
xlat
cmp
addr16
or
shl
sahf
out
dec
(bad)
xlat
into
inc
push
dec
loop
rcr
cwde
or
sub
lods
xchg
popf
sub
fs
lock
pop
inc
or
ja
leave
cmps
es
loopne
ins
xchg
sbb
outs
stc
out
xor
shl
push
add
sub
xchg
nop
inc
adc
dec
mov
jns
pop
push
loope
lahf
xor
mov
mov
ds
dec
enter
std
mov
jae
sub
or
mov
enter
inc
adc
imul
push
int3
hlt
sbb
xor
enter
cmp
or
sbb
imul
outs
test
jb
cmp
xor
inc
(bad)
fsubr
xor
mov
and
mov
shl
test
(bad)
mov
out
enter
mov
mov
shl
(bad)
(bad)
outs
xor
dec
daa
push
in
test
inc
(bad)
mov
inc
fiadd
xchg
cmp
xchg
xchg
leave
popf
pusha
inc
cmps
into
or
and
xchg
aam
pop
repz
xor
cmps
test
dec
cmp
xchg
pushf
cs
arpl
cmp
dec
out
test
ficomp
aaa
xchg
aad
lea
push
inc
sti
icebp
es
lods
jb
sub
push
push
and
imul
sbb
mov
mov
mov
mov
mov
adc
std
repz
scas
in
cmp
leave
gs
adc
xchg
mov
outs
push
icebp
stc
daa
fsub
retf
in
sbb
pop
push
nop
nop
addr16
jmp
or
rcl
xchg
loop
cmp
or
nop
cdq
and
mov
out
xchg
mov
and
mov
jno
icebp
aad
fidiv
xchg
fsub
mov
icebp
aam
adc
and
maskmovq
test
inc
sbb
jle
dec
dec
out
pop
and
div
loope
sbb
mov
sahf
call
add
mov
jo
fsubr
pop
jmp
ins
sbb
jle
jno
jne
hlt
and
icebp
jle
imul
add
cmp
pushf
mov
mov
or
lds
xor
adc
movs
arpl
movs
sbb
mov
dec
mov
(bad)
xlat
push
daa
stos
cld
nop
cdq
jbe
addr16
xor
outs
enter
mov
inc
push
imul
cdq
outs
inc
pop
movs
push
retf
lods
sub
and
dec
xor
xor
fistp
(bad)
outs
pop
mov
(bad)
xchg
dec
mov
into
pusha
ror
dec
push
aaa
dec
sbb
xor
aas
retf
fisub
outs
xchg
aaa
adc
mov
addr16
pop
mov
push
mov
xchg
imul
cmp
in
pusha
cmps
sub
ja
mov
cld
mov
mov
imul
pop
imul
sti
fist
test
mov
sbb
cmps
test
ss
cvtps2pi
inc
mov
jl
ss
sbb
add
out
fimul
and
push
addr16
in
pminub
sbb
add
and
push
aam
in
jae
loope
pop
test
mov
out
in
and
(bad)
icebp
inc
mov
dec
lock
adc
pop
mov
mov
mov
and
sub
pop
mov
xchg
sbb
repnz
stos
test
dec
lock
adc
push
mov
mov
cmp
mov
dec
mov
cmp
or
bswap
scas
cdq
pop
aam
psrlq
sub
int3
or
fwait
mov
stos
or
pushf
std
in
xor
retf
push
pop
inc
test
leave
dec
pop
cmp
test
(bad)
dec
scas
inc
cmc
and
sar
jno
fistp
mov
push
jecxz
ins
or
mov
clc
sti
add
pop
add
mov
cmps
jge
lods
mov
and
cwde
js
retf
cld
mov
out
repz
push
pusha
loopne
and
lock
lods
xchg
inc
xor
or
js
in
xor
and
test
mov
inc
call
mov
js
xchg
adc
xchg
arpl
es
in
cmp
std
cld
pop
adc
movs
shr
mov
in
or
xchg
push
mov
pop
pop
xchg
mov
and
out
xchg
outs
movs
stos
enter
sub
mul
shl
lahf
xchg
inc
xchg
stc
cdq
lods
dec
cmp
or
pmaddwd
ficomp
pop
adc
xlat
cmp
retf
scas
outs
mov
(bad)
cmc
mov
std
fidiv
xchg
pop
xchg
add
and
sahf
or
push
sub
sub
or
add
pop
xchg
xchg
fidiv
(bad)
ficom
sbb
repnz
xchg
or
shl
add
and
pop
lock
xor
xlat
repz
mul
bound
imul
or
pop
cmp
nop
call
mov
pop
xchg
mov
mul
xchg
push
push
stc
dec
mov
cdq
mov
push
outs
ins
jmp
inc
ror
mov
sbb
add
outs
retf
addr16
pop
dec
sbb
push
pop
mov
movs
xor
aad
std
xor
push
scas
ret
hlt
xchg
std
int
leave
stc
loop
js
push
in
out
cmc
adc
adc
dec
call
or
mov
xor
loop
(bad)
cmp
and
mov
xor
push
add
mov
push
and
pusha
ret
mov
ret
mov
aaa
sahf
xor
mov
fcmovb
mov
lods
add
gs
(bad)
cmp
sbb
sar
xor
pop
xchg
push
sahf
aas
xchg
adc
cli
cmp
adc
sbb
sar
aam
paddsb
int3
(bad)
das
sub
sub
scas
das
sar
les
in
stc
adc
add
or
rcr
out
ficom
push
dec
xor
and
cmc
movd
bound
jno
inc
loopne
jecxz
sbb
jmp
ret
mov
mov
push
or
dec
call
sahf
xor
adc
ja
add
pop
stos
sbb
ins
cmc
cmp
test
std
adc
stos
mov
outs
add
pop
ins
sub
jecxz
push
js
mov
nop
and
dec
and
push
or
adc
inc
jle
xchg
or
push
fucomp
cmp
enter
mov
sti
aad
push
xor
(bad)
gs
pop
repnz
jmp
test
cmps
ss
mov
in
jno
in
sahf
mov
push
jno
pop
push
mov
addr16
nop
xchg
(bad)
sub
push
xchg
pop
add
jecxz
mov
out
cs
push
jp
mov
pusha
mov
push
into
sbb
(bad)
push
mov
(bad)
(bad)
aad
jnp
daa
shl
sbb
pusha
or
mov
mov
imul
inc
out
push
iret
push
out
ret
sub
test
inc
push
pop
pop
outs
mov
fisubr
jle
mov
pop
lock
mov
jnp
jmp
(bad)
pop
imul
sbb
ret
cmp
aam
das
xchg
clc
or
stc
push
or
aam
ror
cmp
adc
dec
lds
aas
pushf
in
sar
xor
mov
imul
in
cmp
mov
lods
sub
sbb
fisttp
lahf
mov
jl
adc
addr16
add
in
or
mov
adc
cmp
inc
inc
mov
xor
loopne
push
arpl
popa
cmp
mov
or
fadd
cmc
mov
(bad)
sbb
dec
sbb
and
cmp
add
lods
int
aam
push
inc
daa
pushf
mov
jae
mov
ret
pushf
cmp
dec
sti
xor
repz
es
push
(bad)
xchg
mov
push
mov
pushf
test
test
cmp
sub
cli
pop
or
ficomp
push
xor
movs
(bad)
aas
pop
int
mov
adc
stos
ret
repnz
bswap
call
out
lods
jl
push
push
cmp
imul
xchg
repz
cwde
or
mov
ins
dec
xchg
or
mov
(bad)
int3
mov
pop
fwait
in
xchg
in
push
retf
js
shl
out
push
xor
mov
ins
xchg
push
jne
pop
xlat
or
xchg
push
movs
aad
mov
sub
push
push
dec
or
jns
imul
inc
pop
or
xchg
fsub
test
das
jae
sbb
ficom
outs
pop
call
jecxz
mov
sbb
cmp
lods
cmps
(bad)
add
out
add
dec
std
dec
push
inc
stos
ror
idiv
pop
fs
scas
(bad)
xlat
jecxz
imul
cld
popa
aam
jno
xlat
jo
call
cmp
cld
and
mov
pop
repnz
cmp
sbb
push
add
popf
icebp
push
(bad)
fnstcw
pop
aam
or
xor
cld
in
inc
fs
push
fist
std
jne
not
(bad)
fiadd
jge
mov
xchg
in
out
push
or
or
and
mov
fs
pop
ds
(bad)
mov
(bad)
dec
popf
imul
jno
xor
std
sbb
pop
jns
mov
mov
xor
(bad)
jmp
std
mov
fwait
stc
mov
(bad)
sbb
stos
xlat
jge
icebp
fbstp
lock
in
pushf
ss
arpl
or
inc
sbb
dec
arpl
stos
daa
rcl
xchg
xchg
cmp
mov
xchg
das
(bad)
into
jb
sbb
jmp
inc
mov
outs
sub
mov
cmp
in
dec
and
popa
sub
adc
mov
xchg
test
adc
pop
cmps
push
xchg
mov
push
pop
mov
retf
in
inc
and
push
push
arpl
aas
add
jae
retf
mov
mov
call
lea
int3
repz
push
mov
shl
mov
ins
les
sub
xor
in
mov
nop
cli
icebp
movs
(bad)
shl
aam
das
xchg
ja
hlt
out
jne
mov
xchg
xlat
jmp
dec
push
add
xor
stos
push
adc
xlat
jl
cmc
sti
xchg
cwde
clc
into
mov
sbb
inc
inc
ins
fimul
dec
js
pop
push
repnz
test
ret
stos
cwde
pusha
xor
aas
seto
adc
push
inc
(bad)
adc
fstp
outs
push
lods
in
loop
or
cmc
or
pop
in
fmul
movs
dec
in
sub
xor
mov
das
stc
and
jp
ret
mov
jbe
shl
xor
mov
mov
sbb
mov
rol
in
jnp
sub
outs
sbb
or
jp
push
jl
sbb
adc
push
xor
xchg
lahf
jmp
pop
xchg
and
xchg
pop
jl
push
push
push
jl
fimul
imul
and
xchg
int
mov
scas
dec
cmp
pusha
cmp
jecxz
sub
jp
jge
adc
arpl
xlat
les
mov
(bad)
(bad)
pop
data16
xlat
ret
xor
mov
pop
call
icebp
int3
mov
das
mov
fsub
adc
int
push
int3
shl
leave
inc
inc
mov
shl
jecxz
add
imul
or
pop
inc
stos
mov
call
cmps
xchg
xchg
data16
in
xor
mov
ins
das
mov
sbb
pop
dec
movs
gs
fmul
retf
or
jno
jmp
cwde
fwait
data16
int3
std
fdivrp
pop
into
in
and
mov
les
pusha
adc
mov
jl
dec
mov
repnz
mov
xchg
sub
or
sub
ret
xor
pushf
and
jp
push
shl
mov
aad
mov
(bad)
shr
adc
sbb
sub
lods
mov
inc
and
xor
clc
jl
or
ss
in
ror
pushf
and
stos
dec
stc
cmp
aam
or
test
shl
mov
mov
mov
bound
xchg
scas
in
adc
mov
rol
ror
mov
retf
in
leave
sub
rol
sub
inc
add
(bad)
xchg
cld
fisttp
(bad)
ss
xor
jecxz
mov
movntq
pusha
cld
add
mov
xor
ret
fld
out
out
jmp
test
ss
call
dec
jle
and
adc
cmps
aas
or
and
pushf
and
jecxz
dec
scas
sub
fbld
jl
mov
sbb
fdivr
(bad)
xchg
jmp
outs
sub
movs
add
add
ret
pop
lods
push
mov
div
cmp
pusha
cld
mov
ror
mov
(bad)
and
sub
sub
sbb
out
dec
jmp
add
cmp
sub
das
repnz
call
cld
leave
(bad)
sbb
out
test
je
mov
inc
outs
sbb
adc
mov
and
int
(bad)
outs
es
gs
repz
push
fistp
jns
bound
(bad)
cmp
or
mov
mov
mov
inc
pop
rol
or
sahf
fcomp
xchg
loop
pop
(bad)
daa
(bad)
cmc
push
imul
stos
sub
mov
pop
push
outs
pop
(bad)
jg
xchg
jle
not
xlat
pop
repnz
mov
ds
pushf
push
cli
push
adc
(bad)
dec
test
vpaddsw
mov
dec
push
in
mov
jno
adc
nop
jbe
js
cwde
jg
fidiv
dec
idiv
jno
ffreep
pause
mov
or
pop
pop
ins
push
fcomp
jge
xor
inc
std
add
add
loop
sar
adc
cdq
push
(bad)
push
lods
repnz
ins
cmc
ds
jae
loop
push
and
cmp
push
ret
int3
xchg
rcr
sbb
xchg
mov
mov
add
xchg
mov
stc
xor
or
cs
ret
nop
sbb
leave
jb
mov
mov
cmps
pop
or
push
ds
inc
out
sbb
(bad)
sbb
xor
sub
mov
sub
or
jo
mov
repz
fimul
in
push
outs
neg
mov
mov
mov
push
stc
pop
loopne
xor
pop
cmc
or
sub
rcr
test
xor
inc
lods
outs
sub
movs
dec
idiv
test
add
popa
xchg
popf
sbb
sub
icebp
push
in
pushf
adc
pusha
fmul
push
inc
sar
int
pop
test
popa
jge
ss
enter
inc
into
sbb
jmp
mov
out
out
and
pop
jb
fstp
div
jae
inc
ja
cmps
movs
push
ret
add
sbb
jp
std
out
stos
adc
cli
test
loop
cmp
pusha
adc
ret
xchg
xor
pop
mov
push
mov
jnp
(bad)
and
stc
(bad)
hlt
out
retf
sbb
lods
and
jmp
cmps
ror
test
dec
mov
xor
dec
fdivr
cld
jl
call
and
cs
cmc
or
adc
mov
adc
mov
sub
retf
pop
xchg
iret
dec
push
mov
or
inc
retf
pop
out
dec
cmps
cmp
stos
xchg
dec
dec
test
mov
pop
sbb
hlt
pop
cmc
jae
inc
sub
jo
mov
jbe
dec
sbb
pushf
push
pop
xor
push
popf
xchg
icebp
in
in
in
movd
in
(bad)
pop
add
loop
(bad)
jp
cmp
xchg
xchg
jmp
shl
stos
or
es
xchg
icebp
cmp
mov
push
imul
adc
imul
or
cmp
add
ficomp
cmc
cmp
(bad)
jo
call
cli
sub
xlat
cs
push
lods
sbb
sahf
(bad)
push
cwde
xchg
sub
push
mov
add
dec
jl
and
mov
cmp
xor
jp
mov
clc
mov
sbb
shl
push
sbb
pop
jae
dec
rol
xor
jp
sub
add
inc
(bad)
cmp
cmps
mov
add
dec
pop
fadd
sub
sahf
bound
push
xchg
pop
pop
sub
cmps
dec
sub
adc
je
call
gs
mov
popf
mov
xchg
int
jmp
out
sbb
mov
or
push
int
cwde
dec
add
lds
aad
jmp
std
sbb
jl
stc
shl
rcr
int3
adc
lds
ins
add
out
dec
clc
adc
cmp
sbb
repnz
cdq
or
aas
(bad)
out
ins
not
mov
shr
inc
retf
mov
sbb
sub
push
int
cmp
das
adc
xor
jnp
mov
mov
sbb
pop
aam
ror
pop
mov
fdiv
stos
lods
fstp
test
sub
fnstsw
jae
mov
out
lods
xor
or
imul
sti
push
int3
into
jp
dec
xchg
or
jl
hlt
jnp
mov
bound
jo
cdq
and
pop
mov
daa
sub
fldcw
push
cli
fild
pop
mov
es
div
and
xor
ins
xchg
call
pusha
stos
sub
fs
lea
das
out
xchg
call
pop
dec
sbb
mov
jmp
imul
imul
add
or
movs
cmp
fwait
cwde
inc
xchg
and
sbb
push
mov
sub
and
pop
enter
lds
cmp
cmps
shl
fdivr
sti
fwait
sbb
repz
stos
test
mov
pop
cmps
test
mov
push
retf
into
inc
test
lea
push
jl
push
lods
sub
cwde
mov
xchg
mov
inc
add
inc
mov
pop
jmp
or
xchg
dec
or
xchg
or
or
fidiv
push
or
lds
cmp
scas
daa
inc
cmc
jle
dec
sbb
out
jne
idiv
mov
dec
mov
(bad)
movs
stc
jmp
daa
adc
pop
cmp
int3
xchg
mov
rol
mov
xlat
fsub
loope
xchg
loop
xor
jbe
ss
outs
xchg
je
jmp
jae
adc
iret
and
jae
test
lahf
sub
imul
sbb
push
pop
fmul
push
retf
cmp
mov
cmp
inc
jne
cld
adc
aad
imul
(bad)
lods
add
repz
lods
fidiv
ffreep
fldenv
repz
mov
daa
enter
ror
popf
or
inc
inc
and
add
cmc
inc
xor
mov
mov
and
lock
ficomp
fs
cmp
sbb
dec
daa
add
call
fidivr
rcr
xor
and
xchg
xchg
push
xchg
push
or
sbb
mov
into
mov
push
inc
stos
nop
icebp
cvtps2pd
jnp
adc
jl
test
adc
(bad)
jmp
(bad)
aad
push
cmp
pop
lock
fwait
test
xchg
mov
jmp
add
std
xchg
or
test
jnp
add
idiv
pop
mov
arpl
lahf
inc
inc
js
outs
retf
dec
mov
int3
mov
lds
inc
aaa
not
das
mov
pop
jns
out
daa
setle
or
mov
mov
rcr
(bad)
sbb
pop
clc
push
ss
dec
fsubr
ja
vpunpcklbw
jb
jl
mul
push
jecxz
xchg
sbb
hlt
movs
mov
adc
inc
jecxz
ins
cld
(bad)
cmc
outs
inc
xchg
mov
outs
dec
cmps
pop
fwait
das
cmp
mov
ret
adc
mov
xchg
std
cdq
pop
dec
fisttp
push
dec
and
lods
xchg
fadd
repnz
sub
mov
das
inc
out
fstp
es
mov
scas
sub
rcr
pop
ror
mov
aas
jns
ins
mov
retf
repz
mov
bound
shl
pop
dec
dec
ror
inc
mov
dec
loopne
inc
pop
aas
fisubr
(bad)
cmp
cwde
jmp
fld
and
mov
sar
addr16
outs
inc
sahf
(bad)
mov
pop
jbe
int
movs
jg
dec
pushf
mov
push
stc
cmp
cdq
push
stos
push
cmc
mov
dec
dec
scas
or
pop
sub
les
push
cmc
mov
popf
mov
(bad)
jge
lea
pop
xor
sub
mov
push
push
mov
xor
dec
xchg
out
mov
enter
(bad)
fstp
(bad)
inc
std
lock
into
scas
or
mov
movs
inc
push
out
and
ret
push
iret
cmp
inc
cdq
ret
inc
push
repnz
mov
test
jo
xchg
rol
add
cmc
inc
pop
(bad)
loop
xchg
sub
imul
push
and
xchg
nop
push
leave
xor
or
lea
inc
mov
pop
xchg
test
es
test
cli
inc
rcl
movs
mov
sti
fwait
adc
lea
test
pop
ror
rol
pop
and
jae
daa
cmp
and
leave
out
outs
xchg
sub
xor
cdq
sbb
iret
cmps
(bad)
das
call
inc
xchg
pop
aas
dec
iret
mov
jmp
sti
mov
rcl
xchg
cmp
imul
test
test
xor
ins
shl
scas
in
mov
cmp
pop
iret
out
mov
test
les
ins
sbb
call
dec
or
in
push
sbb
and
mov
mov
pop
xchg
stos
inc
lods
sbb
mov
imul
add
pop
test
aas
pop
leave
cli
push
imul
xchg
jg
sahf
dec
mov
sub
cdq
cmc
cmp
pop
fstp
dec
cmp
jb
into
imul
and
ja
pop
repz
mov
push
(bad)
loope
mov
pop
jb
and
sub
inc
sbb
in
ins
jmp
add
push
icebp
fisub
int
mov
adc
out
aad
in
pop
xlat
lock
fidiv
call
enter
and
sub
jns
or
jne
repz
or
into
xor
mov
push
adc
movs
aaa
mov
xchg
and
pop
and
repnz
push
adc
dec
sti
mov
mov
imul
xchg
nop
(bad)
sar
div
xchg
push
mov
inc
jnp
je
sub
cmp
or
std
cdq
scas
push
sub
pop
mov
xor
ins
sar
mov
out
xchg
cwde
js
add
mov
ins
sub
bnd
cmp
adc
mov
arpl
shr
jae
mov
(bad)
stos
sub
(bad)
sbb
add
ins
aaa
inc
(bad)
das
popf
scas
ins
cmp
data16
xor
mov
adc
sahf
in
sub
movs
mov
aaa
mov
test
call
xchg
cmps
jmp
push
outs
push
movs
adc
stc
sbb
push
lods
xchg
inc
bound
cli
movs
sub
(bad)
mov
test
scas
jns
adc
mov
and
dec
pop
test
lods
shrd
inc
or
sahf
cmc
sub
mov
sar
imul
xchg
sub
cdq
inc
xor
out
pushw
cmp
jb
pop
push
js
mov
pop
lock
pop
(bad)
gs
mov
jnp
jle
mov
mov
cmps
cvtdq2ps
or
loopne
dec
sar
or
fidivr
pop
iret
in
adc
fisttp
fcmove
ins
test
add
jle
push
leave
pop
xchg
xchg
test
ficom
shl
adc
adc
fisttp
jae
jns
mov
rol
popf
call
push
xchg
sub
addr16
jnp
pop
cmp
repnz
rol
xchg
jmpw
stos
fwait
or
dec
pusha
and
out
sti
movs
js
mov
(bad)
loopne
enter
lea
in
in
inc
jl
retf
in
inc
mov
xchg
fsub
pop
sbb
sub
pop
adc
outs
mov
retf
mov
push
lds
cmps
push
or
fs
inc
xchg
das
loope
stos
mov
push
adc
pop
xchg
or
and
mov
loop
out
inc
push
and
es
pop
xor
add
jnp
cwde
push
sbb
inc
popf
outs
mov
or
hlt
mov
pop
or
das
ins
outs
ror
lods
(bad)
mov
or
jmp
ins
and
push
push
push
mov
sahf
mov
hlt
popf
add
lods
sti
add
cmp
mov
(bad)
xchg
lods
int
jne
mov
ds
enter
sub
cmp
xor
jmp
push
mov
shr
mov
bound
fild
push
dec
scas
mov
sti
fcomp
sbb
mov
lock
cli
out
rcr
stos
out
dec
hlt
dec
inc
dec
gs
dec
mul
nop
ss
loopne
cld
movs
add
test
into
jecxz
jbe
mov
bound
cmp
mov
cmps
mov
add
cmp
xor
(bad)
jo
int3
ret
jecxz
fild
pop
mov
jmp
in
and
pop
rcr
push
inc
fcom
cmps
ss
sub
popf
scas
sbb
rcr
inc
aam
xchg
fidivr
dec
pop
or
call
repz
jg
(bad)
(bad)
gs
cmps
ins
ins
xor
cs
sub
push
in
ret
mov
outs
mov
ret
aaa
cdq
cmp
sub
mov
push
call
mov
out
std
adc
int3
aaa
xchg
sbb
add
jnp
movs
mov
shr
scas
xchg
popa
mov
adc
movs
jle
rcr
scas
xchg
stc
fisubr
sbb
or
inc
mov
sbb
mov
inc
repnz
sahf
ds
sbb
dec
cwde
popf
cmp
cmp
aam
movs
outs
fild
jne
lds
cmp
std
mov
cld
in
int3
mov
cmp
aad
ucomiss
mov
pop
xchg
imul
(bad)
(bad)
sbb
movs
adc
cmps
mov
fwait
or
rcr
push
jmp
outs
and
jns
aad
retf
std
mov
rcl
push
mov
js
shl
pop
mov
aas
and
jmp
ja
inc
mov
fld
dec
xor
js
sbb
sub
in
mov
add
hlt
adc
test
lock
or
loopne
pop
pop
(bad)
mov
mov
sub
(bad)
jae
xor
sbb
mov
jmp
pushf
std
dec
push
stos
sti
out
lods
mov
icebp
mov
repnz
mov
mov
out
movaps
xor
xchg
jmp
in
jmp
mov
sub
adc
jo
ret
pusha
call
xorps
test
cli
imul
cs
rcr
ins
push
mov
push
outs
mov
arpl
jnp
(bad)
mov
mov
ret
shl
dec
mov
test
sbb
push
nop
ins
adc
xchg
fsubp
cdq
and
cmp
adc
pushf
call
pop
jnp
mov
sub
and
sbb
jmp
cmp
std
call
in
out
mov
out
pop
jbe
push
jle
inc
mov
cli
xchg
sub
or
and
inc
add
(bad)
pop
ss
jle
daa
adc
icebp
inc
test
repnz
jmp
fwait
cld
pop
add
mov
cmp
push
(bad)
jl
(bad)
or
and
stc
sbb
icebp
inc
pop
jne
mov
ins
fmulp
push
fisubr
cmp
loope
mov
cmp
add
pop
retf
mov
test
inc
clc
(bad)
sbb
push
punpckhdq
adc
into
mov
jle
int3
and
inc
ficom
movs
push
(bad)
scas
loop
lods
sub
aas
fistp
and
enter
mov
cmp
and
sub
mov
in
mov
mov
out
mov
mov
ret
mov
test
or
mov
cld
xor
in
je
cmp
movs
mov
mov
mov
cs
fild
test
jecxz
lahf
add
outs
dec
lock
push
dec
(bad)
sbb
fisub
mov
int3
test
lods
lods
pop
pop
mov
test
adc
fidiv
mov
adc
add
adc
cmp
mov
cmc
add
inc
fwait
fs
dec
rcl
dec
jmp
loop
inc
add
jg
cld
or
dec
cmp
push
ror
imul
cs
pusha
mov
sub
dec
push
inc
iret
int3
push
cmp
jne
aas
outs
mov
cmp
mov
adc
repz
adc
dec
push
in
icebp
cmps
scas
or
cli
pop
shr
mul
aaa
push
lods
inc
mov
mov
lds
ja
shr
outs
js
aaa
mov
les
fidivr
popf
mov
or
dec
mov
movs
and
ror
sar
repnz
xchg
dec
das
mov
xchg
inc
aad
shl
pop
cwde
pop
and
cdq
push
ds
mov
movs
rcl
leave
iret
and
pop
and
mov
je
and
or
sbb
xchg
in
mov
(bad)
and
inc
imul
push
jo
jmp
aas
enter
dec
bound
mov
add
jb
jp
mov
inc
es
cmp
inc
in
add
gs
out
push
test
stos
cwde
pop
adc
push
push
aam
cmp
mov
inc
aaa
and
mov
mov
lds
pop
popf
stc
popf
vdivps
idiv
pusha
xchg
addr16
add
arpl
mov
lds
in
push
in
mov
das
and
fs
jno
out
inc
or
adc
xchg
sub
lock
and
xchg
xchg
fdecstp
push
test
xor
retf
jmp
sub
and
hlt
mov
or
xchg
jp
pop
in
ins
enter
aaa
ins
lock
out
mov
push
xchg
mov
pop
aas
pop
or
inc
stos
push
add
outs
dec
add
mov
and
ds
enter
or
stc
icebp
pop
add
xchg
inc
in
inc
cmp
imul
add
scas
sub
call
loop
jns
jg
stc
popa
call
xchg
fdiv
pop
pop
dec
mov
pushf
pushf
push
mov
fisttp
dec
scas
sub
xor
or
int3
iret
sbb
mov
mov
sub
ja
mov
inc
sub
ja
ds
cmps
pop
test
add
fldcw
pusha
test
mov
(bad)
inc
mov
adc
aad
cmps
iret
mov
sub
fistp
jl
mov
jge
or
clc
loop
sub
mov
lods
pusha
leave
js
lock
es
xor
(bad)
ret
(bad)
(bad)
icebp
ficom
mov
pop
xchg
(bad)
aad
push
(bad)
js
mov
mov
test
mov
xlat
add
mov
mov
sbb
pop
or
test
outs
push
mov
xchg
repz
shl
(bad)
mov
and
es
cmp
adc
sub
pop
int3
cwde
imul
cmp
dec
jbe
(bad)
mov
dec
fnsave
mov
cmp
(bad)
xchg
cmp
sub
or
call
outs
cmp
leave
mov
lea
stos
fld
jmp
jns
(bad)
jmp
add
xchg
out
mul
add
xor
jl
mov
fidiv
and
fldcw
mov
loope
sbb
mov
xchg
mov
test
cmc
xor
inc
xor
loopne
imul
stos
andps
fucomp
mov
xchg
cmp
std
gs
push
push
xchg
or
push
mov
push
mov
les
and
pop
cmp
shl
jnp
pop
mov
sbb
lods
fdivr
xor
push
adc
push
std
sub
dec
mov
adc
add
xchg
inc
call
pop
adc
cmps
mov
mov
cli
adc
repz
(bad)
clc
test
in
push
mov
jae
scas
and
xchg
xlat
in
in
cmp
dec
push
adc
pop
pop
je
fstp
jmp
test
adc
xor
(bad)
xlat
mov
xchg
xor
mov
mov
sar
push
lods
ins
fs
mov
leave
or
jmp
or
sysenter
aaa
loop
xlat
(bad)
gs
ret
sub
lds
fstp
ja
and
movs
sub
ret
cmps
sti
xchg
pop
neg
lods
pushf
inc
call
xchg
repnz
loop
test
mov
(bad)
jp
jno
jbe
data16
es
je
push
xchg
mov
rol
mov
cwde
out
call
cmp
out
jmp
cdq
xchg
imul
sahf
hlt
jmp
xor
out
test
sbb
pop
dec
movs
xchg
les
xchg
and
aaa
adc
sbb
cdq
sub
popf
jae
sbb
mov
fsubr
cmp
les
jg
popa
in
pop
mov
iret
outs
cmp
cmp
pop
aad
mov
repnz
das
not
(bad)
jo
mov
movs
mov
dec
and
mov
shl
mov
dec
and
std
mov
aaa
enter
sbb
fistp
mov
and
ret
mov
fisttp
ret
ins
mov
pop
and
inc
inc
gs
out
pop
call
mov
pop
mov
mov
inc
and
sbb
fadd
lds
arpl
sbb
pop
push
jecxz
out
adc
cmp
inc
ror
data16
mov
jno
lods
adc
fdivr
arpl
push
pop
push
enter
int
loop
xchg
fmul
push
arpl
or
scas
jmp
jbe
ins
ins
js
inc
pop
out
ret
out
mov
icebp
scas
daa
cdq
inc
sbb
inc
fidivr
cmp
push
xor
fidiv
pop
dec
(bad)
cmc
sbb
mov
add
inc
jns
pop
pop
mov
mov
pop
enter
mov
adc
jmp
jp
test
sbb
stc
outs
adc
inc
repnz
mov
out
push
adc
or
ret
lahf
or
cmps
rcl
mov
xlat
cmp
mov
push
ins
pop
mov
jmp
sbb
ror
cmp
and
jae
adc
clc
dec
iret
popa
lds
data16
mov
pop
push
test
imul
pop
xor
test
outs
es
jecxz
arpl
into
mov
jb
pop
adc
ficom
mov
sti
gs
xor
sub
jo
ds
cmp
adc
sub
add
pop
adc
arpl
ss
mov
sar
js
out
pop
pop
pop
inc
fwait
pop
jno
jp
mov
xchg
int3
(bad)
ins
xchg
xor
jg
jmp
mov
(bad)
outs
mov
(bad)
pop
xchg
cmp
push
mov
mul
call
jg
out
popa
bound
jo
(bad)
repnz
mov
add
pop
imul
retf
jl
retf
ins
in
div
mov
(bad)
xor
in
lea
xchg
test
daa
jnp
jno
bound
push
movs
mov
retf
mov
mov
inc
adc
int3
adc
push
out
add
outs
adc
stos
in
push
stos
pop
sub
push
and
add
(bad)
mov
pop
repz
xor
ss
div
cdq
stc
inc
mov
repnz
in
inc
and
fcom
imul
jmp
pop
repz
imul
mov
test
ffreep
xchg
xchg
hlt
imul
add
inc
dec
or
mov
jge
xchg
sbb
mov
stos
mov
adc
shr
cmp
jne
repz
adc
lea
(bad)
mov
clc
clc
jae
lds
jecxz
pusha
adc
ror
cmp
jnp
call
ins
push
fnstenv
jnp
rcr
xchg
test
out
mov
mov
mov
loope
adc
jp
fld
jne
loope
mov
dec
cmp
shl
and
xchg
mov
sbb
push
jnp
mov
das
sub
fsub
xor
pushf
add
sub
es
sub
add
fst
mov
(bad)
fistp
jge
pop
in
lock
scas
pop
push
jl
pop
inc
sub
clc
rcr
inc
add
mov
out
cmp
pop
xor
or
(bad)
mov
fidiv
add
into
mov
xchg
out
movs
(bad)
(bad)
push
ins
das
push
mov
ja
arpl
xor
push
(bad)
(bad)
call
pop
(bad)
fbstp
(bad)
and
pop
push
mov
add
adc
(bad)
jmp
mov
mov
xchg
pop
push
jl
arpl
xchg
fist
mov
sbb
lea
fs
and
std
clc
daa
sbb
sub
test
sbb
push
adc
adc
outs
mov
xchg
es
ret
sub
outs
repz
mov
cmp
jmp
adc
sbb
retf
jge
adc
in
inc
mov
push
lods
mov
iret
je
mov
jns
inc
jmp
lock
out
or
mov
jnp
popa
gs
add
push
jle
ja
shl
cmps
sub
cmc
fst
call
out
push
fdiv
hlt
adc
jmp
aad
mov
or
jae
mov
cmp
cli
xchg
addr16
ja
ss
sub
cli
jne
jbe
sti
and
cmc
call
inc
or
test
aas
ret
and
xor
leave
pop
push
int3
xor
mov
stos
pop
icebp
addr16
jne
jle
(bad)
sbb
jmp
repz
xchg
cld
adc
fmul
not
sub
pop
scas
imul
jb
(bad)
test
in
and
sub
call
ror
adc
inc
out
jb
leave
retf
ja
push
sub
sti
cmps
les
jo
lock
mov
push
add
mov
inc
je
out
cmp
lods
mov
(bad)
xor
repnz
je
mov
xchg
xchg
fstp
dec
pop
cwde
jmp
(bad)
pop
ror
jnp
cmp
inc
xchg
aas
or
add
popf
iret
sbb
cmp
dec
arpl
inc
das
push
or
aam
sub
movs
out
addr16
push
stos
cmps
sub
pusha
dec
cmc
push
mov
jnp
pop
adc
outs
mov
popa
push
int
pop
shr
push
add
movs
fstp
add
aaa
mov
cmps
ret
in
cmp
xor
push
push
in
test
imul
inc
and
in
in
push
fcmovnb
xchg
(bad)
mov
icebp
cmp
sahf
pushf
loop
xchg
clc
cld
in
mov
add
(bad)
mov
std
ins
sbb
(bad)
sti
mov
sub
xchg
and
sub
adc
add
mul
push
das
pop
adc
cmc
icebp
aad
mov
or
aas
push
jmp
jp
jo
mov
cmc
dec
ficomp
jb
or
lock
int
adc
inc
add
into
repnz
popf
and
mul
icebp
jle
dec
pop
xor
cmp
out
das
outs
or
stc
sbb
or
sub
push
mov
mov
fist
(bad)
loop
xor
ret
shl
jno
inc
in
mov
add
ja
lods
pop
push
stos
sub
adc
xor
add
ret
cmp
lods
sbb
pop
mov
ins
nop
push
lods
cdq
arpl
and
jge
fmul
jmp
jp
pop
aas
addr16
in
shl
sub
mov
repz
xchg
jbe
sbb
mov
ds
fbstp
sbb
mov
cmp
sahf
or
adc
repnz
call
inc
fld
push
xchg
mov
cli
loop
lods
test
out
inc
leave
rcl
dec
ret
mov
add
call
cmp
(bad)
or
jmp
sub
stos
leave
jns
sbb
pop
cmps
add
cwde
mov
push
sub
aas
ins
cli
mov
test
sti
pop
cmp
in
mov
jmp
dec
fs
xor
pusha
cwde
leave
lea
push
push
mov
test
mov
les
mov
bnd
adc
lahf
adc
dec
adc
mov
inc
fdivrp
jb
ja
stos
jns
pop
shl
xchg
cmp
addr16
ins
retf
mov
jns
adc
sbb
push
int
and
sahf
mov
mov
jbe
xlat
repz
xor
add
mov
mov
push
and
movs
xor
jo
out
out
and
dec
lds
out
xchg
add
inc
cdq
add
call
lock
push
and
data16
clc
das
aaa
sbb
xchg
scas
and
xor
adc
and
rcl
mov
cdq
ja
or
popf
or
lea
ror
lea
dec
jns
mov
mov
push
inc
lods
ja
add
cmp
int
inc
gs
mov
sub
cli
mov
int
cdq
fcom
inc
in
sbb
dec
mov
cmp
and
mov
push
jle
push
pop
call
popa
(bad)
mov
fsub
dec
cs
icebp
jbe
repnz
pop
or
pop
ss
sti
mov
mov
mov
cmp
sbb
cmp
and
ins
jo
fadd
push
stos
and
les
jno
daa
sbb
mov
push
fwait
pop
pop
inc
pop
imul
out
stos
or
xchg
hlt
loop
adc
fimul
xor
sbb
xor
rcr
retf
ret
xor
in
mov
addr16
out
sahf
les
daa
(bad)
and
mov
(bad)
xchg
jmp
mov
mul
in
(bad)
sbb
xchg
mov
jl
mov
pop
call
push
ret
movs
jg
dec
pop
push
and
or
mul
(bad)
sub
(bad)
xor
nop
push
add
and
test
outs
mov
ja
push
fwait
out
mov
xor
rcr
pop
stos
sbb
jnp
fsubrp
inc
fbstp
fild
sub
rol
xor
les
or
lods
pop
push
scas
dec
(bad)
xor
loopne
out
mov
loope
(bad)
je
bound
das
and
cmp
push
cmp
js
ds
dec
and
xor
mov
hlt
ds
in
xchg
sbb
push
cs
cmp
xor
ret
add
ins
sbb
sbb
mov
fwait
xchg
sbb
jg
cmp
movs
mov
sbb
dec
fdiv
retf
mov
ss
mov
pop
cwde
jo
retf
cli
out
mov
jecxz
adc
outs
jne
push
inc
or
push
nop
imul
cmp
xchg
mov
mov
daa
dec
bound
(bad)
int3
dec
mov
aad
pop
ds
cmp
mov
rol
pop
(bad)
out
jb
or
popa
int
dec
imul
dec
cmp
or
shl
sbb
pop
lods
clc
and
jp
daa
pop
cmps
add
dec
movs
pop
add
gs
mov
pusha
mov
push
imul
mov
push
sahf
jl
add
shl
push
jp
in
aad
out
dec
fbstp
mov
lea
cwde
ror
and
lods
outs
enter
and
arpl
ja
push
movs
push
(bad)
push
inc
outs
mov
adc
aad
movs
add
mov
inc
mov
mov
xorps
shl
push
mov
sub
jo
jecxz
nop
or
jbe
daa
in
inc
adc
xchg
pusha
imul
add
test
retf
mov
cmp
ret
mov
xchg
xchg
xor
jo
add
out
cmp
mov
jg
scas
scas
sti
dec
lods
fistp
call
dec
(bad)
cwde
cmps
inc
mov
dec
xchg
cwde
mov
inc
fwait
push
icebp
aas
aaa
cli
int
cmp
jo
xor
shr
push
jle
push
pushf
pop
mov
outs
inc
fwait
stc
mov
ret
sahf
push
cld
mov
or
pop
sub
lea
ds
push
gs
adc
mul
fwait
xor
std
add
sbb
aam
and
fcmove
test
push
jae
loopne
hlt
xor
mov
rcpps
mov
adc
mov
scas
inc
fisub
pop
cmp
push
jmp
dec
sub
mov
call
(bad)
jb
test
shl
push
sbb
ins
leave
enter
outs
dec
out
lock
fwait
sahf
pop
sbb
mov
(bad)
cmp
sbb
fwait
mov
dec
aaa
scas
out
or
mov
jle
mov
daa
iret
(bad)
dec
push
xchg
js
pop
(bad)
popa
inc
inc
das
or
xor
mov
mov
push
add
mov
sahf
cli
dec
adc
mov
pusha
jg
or
xchg
push
(bad)
cld
cmp
enter
cli
adc
jo
fist
pop
es
pop
inc
xchg
dec
test
mov
pop
dec
imul
cld
call
aam
div
sti
mov
lods
push
enter
mov
cmp
je
mov
or
jl
mov
dec
add
pop
(bad)
dec
pop
ins
bound
adc
movs
dec
test
jne
sbb
mov
ins
sub
faddp
sbb
std
aaa
pop
or
xor
out
in
popf
cmp
sub
jl
mov
pop
call
lahf
sbb
ret
push
add
jo
out
cwde
dec
(bad)
adc
repz
ds
mov
lds
push
sbb
pop
mov
dec
jge
aaa
xor
inc
cwde
xchg
push
and
push
pop
test
or
inc
mov
(bad)
xchg
(bad)
mov
adc
mov
mov
xchg
(bad)
xchg
pop
dec
push
ret
xchg
mov
(bad)
push
mov
push
clc
pop
pop
cmc
or
pop
out
cmc
or
fidiv
out
jecxz
add
dec
mov
stos
in
movs
dec
dec
push
out
fstp
outs
imul
call
sbb
jecxz
mov
jne
stos
pop
add
das
ror
and
and
mov
sahf
out
add
int
into
retf
dec
jmp
(bad)
sbb
inc
jnp
call
dec
cmp
sar
nop
pop
jg
ret
rcr
mov
leave
dec
mov
mov
sbb
cmp
icebp
popa
(bad)
addr16
push
cld
dec
inc
out
shl
lock
sar
das
lea
sub
inc
in
fsub
xchg
xchg
ins
dec
imul
mov
xchg
ret
inc
mov
cli
xchg
push
lods
fisttp
out
ja
xlat
in
or
adc
(bad)
pop
push
call
test
(bad)
rcl
clc
add
sar
lods
inc
add
mov
jo
jmp
mov
inc
mov
and
rsm
aaa
js
imul
inc
cdq
nop
dec
repz
push
in
jecxz
mov
cmp
in
movs
xchg
fwait
xor
mov
pop
sahf
xchg
pop
js
scas
xor
ss
xor
jns
pusha
mov
push
sub
add
pop
jmp
test
pusha
out
sub
or
(bad)
pop
ror
add
adc
cwde
test
xchg
and
adc
sbb
mov
pop
jno
push
aas
(bad)
or
mov
sbb
test
cmps
in
cdq
fild
loope
dec
lds
das
push
scas
and
xor
cmp
mov
lahf
jae
jns
jne
lea
retf
loopne
aad
std
xchg
arpl
push
push
push
and
sbb
mov
mul
mov
hlt
std
xchg
dec
jmp
test
inc
es
call
inc
pop
int
push
push
jns
cld
pop
jp
enter
push
(bad)
pop
xor
dec
popa
dec
out
cmps
inc
adc
out
imul
cwde
xchg
jne
add
loope
scas
jmp
nop
add
mov
and
stos
shr
daa
leave
test
xchg
test
add
ins
mov
(bad)
in
std
outs
and
xor
loope
ret
shr
fs
aas
(bad)
mov
push
je
repz
test
sub
push
test
ja
mov
repnz
pop
inc
add
add
outs
out
iret
outs
dec
(bad)
outs
clc
sar
cs
ficomp
loop
xchg
mov
adc
mov
dec
popa
inc
cmp
subps
fistp
xor
push
fld
enter
aam
pushf
xchg
pop
mov
adc
and
or
and
sbb
add
call
xchg
lahf
sub
sub
inc
ja
outs
mov
sub
adc
pusha
dec
ror
xor
sbb
out
push
dec
dec
sub
jne
imul
outs
inc
enter
mov
pop
jns
jmp
and
mov
sar
pop
jecxz
imul
jo
sub
es
dec
inc
dec
add
mov
stc
nop
sub
cs
sti
loop
aam
fidivr
enter
xchg
pop
ficomp
inc
je
stc
sub
cmp
shl
sub
push
sbb
bnd
pop
cwde
xlat
fdivr
cmp
(bad)
ficomp
push
mov
out
xor
fwait
jecxz
dec
mov
mov
inc
lods
xchg
bound
push
lock
mov
cmp
shl
out
icebp
push
add
cmp
inc
mov
mov
repnz
scas
push
fld
sbb
pop
adc
or
dec
xchg
psraw
mov
inc
xor
gs
iret
xchg
aam
ficom
popa
sub
push
loopne
mov
call
xor
test
shl
xchg
out
jmp
jmp
mov
idiv
shl
mov
cmp
jle
pop
and
jnp
jl
or
mov
fwait
addr16
lahf
push
fadd
and
loopne
fwait
sbb
les
fild
mov
add
call
sbb
std
dec
and
out
dec
mov
(bad)
mov
mov
fs
mov
jbe
sbb
or
mov
pop
adc
push
adc
mov
ret
push
test
jb
movs
clc
adc
lock
cli
mov
retf
mov
test
mov
ins
or
mov
jne
out
movs
xchg
cli
test
in
loop
dec
dec
xor
push
xor
pop
lock
pop
jb
outs
ss
scas
outs
mov
retf
pop
ins
cmp
or
pop
movs
mov
mov
xor
mov
stos
movs
in
scas
dec
jb
and
inc
inc
mov
xchg
dec
movs
mov
adc
mov
into
bound
mov
test
mov
xchg
pop
or
sbb
scas
out
xlat
data16
xor
repz
outs
ja
lods
out
add
scas
int
dec
mov
hlt
test
add
pop
xor
in
pop
loope
fistp
stos
fidivr
jns
(bad)
jo
mov
xor
(bad)
lahf
das
aad
push
js
ffreep
push
xlat
test
call
mov
add
adc
fadd
aaa
leave
outs
mov
pop
(bad)
aam
sub
and
rol
cmp
rcl
cmp
(bad)
ret
adc
cmp
xchg
cmp
jle
cmps
int3
xlat
out
hlt
mov
aam
inc
test
adc
pop
adc
sub
(bad)
jo
cld
inc
mov
sub
jmp
mov
sbb
pop
pop
jmp
mov
dec
jae
ret
push
fistp
mov
sub
mov
shr
cmc
mov
ds
sbb
aaa
call
ja
mov
inc
aad
sub
fcom
jmp
call
outs
pop
and
scas
pop
dec
shl
outs
mov
in
repz
mov
fcmove
cmp
and
jnp
or
sbb
es
xor
(bad)
xchg
jmp
jmp
and
jge
stos
rol
pusha
jle
imul
sbb
push
jb
cmp
inc
clc
test
cmp
dec
clc
dec
cmp
xchg
jge
mov
pop
pop
cmp
mov
mov
(bad)
fwait
addr16
js
cli
xor
std
out
mov
retf
jge
sbb
fs
hlt
mov
xchg
add
mov
push
sub
sahf
jl
into
pop
pop
jmp
mov
fadd
or
lea
dec
cmp
mov
push
idiv
pop
adc
aad
mov
inc
sti
sub
sub
add
and
inc
add
inc
or
mov
frstor
xchg
push
(bad)
fidiv
ret
mov
push
sbb
xor
or
cli
push
jo
jg
(bad)
aas
ret
loope
iret
(bad)
out
xchg
and
mov
les
in
or
das
hlt
xchg
sar
dec
inc
jle
outs
daa
dec
ret
retf
fisttp
movs
call
gs
pop
ins
lock
outs
int3
repz
fwait
mov
cmp
sbb
test
(bad)
(bad)
loope
ret
fild
pop
pusha
aaa
jmp
adc
test
adc
pop
sub
mov
retf
or
xchg
enter
lods
mov
pop
or
mov
or
(bad)
jnp
jnp
dec
(bad)
imul
mov
inc
adc
pop
xchg
gs
mov
lods
es
popa
iret
dec
mov
sbb
test
dec
dec
imul
or
sbb
sub
mov
scas
data16
mov
xor
mov
loope
outs
lds
sub
out
scas
jae
mov
mov
fs
or
sub
sub
mov
fwait
and
fidivr
jne
pop
sub
(bad)
cdq
inc
fwait
cmps
xchg
sbb
call
addr16
xor
daa
mov
inc
sahf
or
push
outs
inc
jp
daa
retf
mov
shr
inc
push
or
(bad)
pop
pusha
mov
int
(bad)
loopne
cwde
(bad)
iret
and
fdivr
fwait
clc
xchg
inc
jne
dec
jno
sbb
add
and
xor
jecxz
jecxz
push
dec
push
sahf
pop
int
push
test
fmul
push
scas
adc
aad
outs
inc
(bad)
repnz
pop
jne
(bad)
mov
sub
iret
push
cdq
nop
ins
adc
jns
xor
arpl
mov
in
jmp
jnp
jno
jg
pop
movs
and
cmps
dec
dec
xor
or
lea
dec
(bad)
mov
cmp
scas
add
xchg
pminub
cmp
jecxz
or
pop
bound
cmc
test
retf
fisubr
push
(bad)
mov
sub
or
(bad)
fwait
out
mov
pop
dec
(bad)
ins
or
mov
(bad)
lods
repz
jnp
test
and
je
pop
xchg
fisttp
or
inc
mov
mov
das
push
dec
xor
rcr
jo
xor
xchg
mov
idiv
les
iret
mov
jo
test
jp
bound
retf
in
sbb
mov
mov
movs
push
cmp
mov
cmp
test
xchg
lock
jle
rol
loope
mov
fnstcw
cmps
stc
lods
out
cmp
(bad)
push
stos
dec
push
int
rol
pop
mov
aas
bound
mov
cmp
pop
mov
or
or
into
out
sti
in
pushf
outs
mov
jl
pop
dec
sub
(bad)
fld
fild
cmp
movs
push
repnz
fcom
cmp
mov
or
adc
push
jae
sub
inc
mov
pusha
jmp
cmps
sti
add
mov
and
add
test
outs
jg
fldcw
sbb
lods
repz
shl
aas
mov
mov
mov
or
fld
xchg
jns
mov
pop
daa
ret
pop
or
call
sbb
aad
jp
frstor
cli
enter
pop
and
loop
call
xchg
(bad)
into
pop
push
push
jns
out
adc
jp
nop
movs
test
inc
dec
mov
popa
dec
pop
into
push
push
dec
mov
cli
xor
sbb
stos
cs
fisttp
les
mov
xor
ins
addr16
inc
mov
sub
cmps
cmc
outs
fdivr
jmp
mul
ficom
push
(bad)
stc
adc
dec
jp
into
sub
or
lock
jmp
lds
jge
pop
in
add
dec
pop
retf
dec
daa
cmp
cmp
jns
xchg
movs
push
push
popf
stc
shr
pusha
in
movs
mov
mov
inc
mov
mov
in
pop
lock
repz
test
in
xor
mov
not
loopne
in
pop
add
mov
pop
cli
push
mov
leave
mov
xor
jno
or
out
push
dec
cmps
adc
rcr
mov
ret
add
mov
ss
es
imul
add
pop
push
movs
lods
push
outs
xchg
das
pusha
fistp
jmp
mov
add
mov
sub
movs
push
mov
iret
mov
or
add
fiadd
and
mov
arpl
aas
out
outs
jae
test
loope
adc
fldcw
or
rcr
adc
mov
push
xlat
repnz
loope
mov
std
push
pusha
cmc
inc
cmps
fimul
outs
mov
(bad)
sub
jne
in
push
leave
hlt
jmp
in
push
inc
or
js
cmp
data16
push
adc
fsubr
jbe
dec
push
jmp
jmp
ffreep
sub
jl
and
pop
sbb
sbb
pushw
xchg
mov
ror
mov
ret
aad
daa
aam
cwde
popf
and
push
ja
sbb
inc
js
fdiv
(bad)
xchg
imul
neg
mov
loop
xor
fadd
mov
dec
sub
pop
loop
enter
mov
addr16
je
inc
xor
cmc
xchg
pop
mov
ds
(bad)
outs
pop
or
dec
gs
sub
mov
cvtps2pd
jno
sub
jl
(bad)
fcmovu
(bad)
icebp
xor
pop
xchg
cmps
enter
dec
fwait
loope
cmp
xlat
xor
shl
xchg
sub
int3
cli
inc
xor
jbe
jne
sahf
in
out
mov
sbb
mov
cwde
adc
dec
inc
dec
repnz
cmp
rcl
xor
inc
stc
inc
push
nop
mov
sub
popf
jb
in
ds
adc
cmp
(bad)
out
mov
ss
adc
cmps
inc
jp
sub
xchg
fmul
pop
stc
fsub
sbb
xchg
pop
push
retf
mov
dec
jmp
outs
fwait
imul
mov
jmp
add
hlt
in
(bad)
push
pop
lds
or
inc
outs
ds
fucomip
jb
retf
addr16
inc
adc
loopne
mov
inc
cmp
pop
dec
lods
sbb
ja
nop
fwait
sti
dec
mov
inc
loope
and
add
cmp
add
outs
mov
add
xor
inc
jge
or
push
in
sar
hlt
xor
mov
cwde
add
outs
ins
push
xlat
fprem
xor
es
xchg
sub
mov
dec
cmp
xor
jmp
cdq
mov
in
loope
sti
movs
call
sbb
cmp
mov
loop
stos
in
push
pop
movs
(bad)
push
test
jbe
push
in
xlat
or
cmp
nop
repz
inc
lods
iret
scas
test
ja
fcom
loope
mov
mov
div
add
fisub
push
dec
test
pop
pop
sti
out
mov
shl
sub
pop
mov
sti
out
xchg
mov
push
push
jnp
sbb
or
cmp
shl
sar
and
mov
test
shr
sub
cmp
test
dec
out
dec
cmp
loop
jb
in
imul
lahf
js
pop
aaa
stc
jge
pop
jecxz
dec
and
add
ret
push
stc
ja
in
xor
sbb
adc
fcomp
xor
cmp
outs
or
mov
pop
dec
div
add
stos
inc
mov
test
push
jae
jne
sub
mov
jmp
mov
add
movs
cdq
sub
dec
adc
mov
mov
mov
push
mov
inc
loop
or
jmp
jae
fsubp
and
fsubr
movs
pop
xchg
ror
sbb
stos
or
clc
pusha
or
das
inc
cwde
cmp
loope
test
cmp
sbb
out
inc
sti
lock
mov
inc
lods
sbb
shl
adc
addr16
adc
out
in
ror
pop
lahf
pushf
push
out
sub
xchg
sub
dec
add
mov
enter
pop
into
and
xchg
push
and
cdq
out
sub
jne
jae
out
aad
mov
arpl
cmps
std
xchg
inc
inc
mov
scas
xchg
pop
aas
es
add
mov
jo
and
clc
dec
dec
inc
cmps
xchg
outs
pop
pop
inc
pop
push
cwde
sti
cwde
lds
or
(bad)
sahf
mov
in
adc
pop
xor
xor
icebp
push
mov
inc
jno
dec
retf
add
cmp
dec
test
dec
push
ror
sti
xlat
pop
mov
push
mov
ret
sub
jmp
ret
rol
pop
fidivr
sub
cmc
sbb
test
mov
movs
mov
imul
push
xchg
inc
mov
jo
dec
mov
rcr
adc
mov
mov
or
es
leave
das
pop
int
mov
sbb
mov
imul
das
mov
cmps
lods
jecxz
sub
movs
retf
das
fidivr
dec
imul
xchg
sahf
and
into
jnp
sbb
sub
or
jbe
sub
addr16
xlat
cmc
fnstenv
jg
repz
and
mov
fadd
test
adc
mov
ins
dec
shl
adc
mov
shl
fldcw
jno
adc
retf
xchg
mov
fst
dec
mov
jmp
jnp
ffreep
sub
push
out
jnp
pop
test
xchg
adc
aas
or
in
xor
mov
fcom
out
mov
pushf
fs
loope
test
enter
jns
xchg
je
scas
adc
mov
sub
ss
or
mov
inc
push
push
imul
fcmovnb
push
pop
in
fcmovbe
jg
fisttp
cmp
add
sti
pop
nop
sar
adc
in
ins
cmp
or
loope
fwait
mov
sbb
mov
xchg
shr
sub
in
pop
inc
lahf
pop
mov
mov
movs
ret
jbe
cmp
lahf
push
shl
add
sahf
jge
test
int
pop
cmps
in
stos
xor
sub
lea
and
fxch
outs
cdq
fimul
cmp
cs
jmp
dec
jl
movs
sbb
mov
pop
cdq
rol
inc
sar
jmp
out
push
adc
xchg
inc
fstp
jno
ds
jnp
shr
sub
add
mov
loope
inc
retf
and
(bad)
rcl
inc
push
push
add
xlat
jae
retf
or
in
cmps
shl
mov
es
sbb
push
sahf
jmp
or
and
lea
adc
push
je
dec
jle
test
sub
iret
push
xchg
fwait
cmc
and
mov
cdq
cmp
enter
fsub
movs
xchg
cmp
push
push
je
cwde
popa
ja
fwait
inc
mov
add
sub
xor
or
ss
repz
push
jb
mov
or
ret
mov
push
int
mov
cmp
xchg
cld
iretw
shr
mov
mov
and
xchg
pop
imul
pop
xor
movs
daa
(bad)
xchg
xchg
inc
mov
jo
ins
fisub
jo
das
sub
pop
xor
movs
and
push
pop
pop
sub
loope
mov
push
adc
dec
sahf
xchg
(bad)
mov
ror
sub
movs
jg
mov
xor
or
cli
inc
dec
sti
sahf
leave
or
sahf
adc
cmc
push
ins
in
and
std
mov
cmps
outs
mov
jb
pop
add
jo
and
sub
retf
(bad)
dec
pop
push
movs
cmc
xor
mov
stos
fist
ret
mov
xchg
lock
inc
(bad)
sar
outs
push
ins
pop
or
jns
push
or
ins
mov
mov
cwde
pushf
data16
aam
pop
mov
xor
xchg
push
js
jg
jg
outs
adc
cmp
sub
and
jae
lahf
push
hlt
cmps
addr16
jnp
sub
jae
out
jmp
retf
ins
push
fisttp
adc
daa
fwait
and
and
xchg
mov
out
sahf
(bad)
pop
sub
shr
hlt
sbb
dec
int
pop
loop
in
add
or
add
or
(bad)
jl
add
sub
push
cli
sbb
sbb
pop
sbb
dec
stos
xchg
das
xacquire
leave
xor
div
aam
dec
jmp
pushf
test
pushf
xchg
fucomi
mov
shl
or
mov
push
pop
ret
sti
xor
mov
mov
cwde
test
test
jmp
out
sbb
sbb
xlat
xor
push
inc
push
cmp
or
push
lea
fwait
jo
jp
mov
adc
pop
fild
bound
js
mov
fs
rcl
loope
jne
jmp
adc
add
jo
outs
repz
cmp
or
(bad)
repnz
clc
push
(bad)
fld
aad
push
in
push
jg
mov
dec
cmp
jb
adc
pop
test
push
mov
mov
fadd
arpl
dec
lock
movs
push
int
add
push
dec
leave
or
mov
adc
jne
ror
ret
sub
les
inc
clc
dec
pop
mov
or
sbb
(bad)
pusha
fxch
mov
sbb
shl
cmp
lds
jae
pop
ss
pop
sbb
pop
dec
fisub
mov
adc
ins
mov
pop
dec
sbb
scas
mov
nop
sub
add
bound
lods
jmp
imul
div
xlat
rol
add
mov
mov
mov
sub
cwde
(bad)
rcl
pop
ds
stc
mov
mov
js
sahf
test
call
ror
inc
cdq
cmp
stos
dec
xor
in
stc
jge
xchg
shr
pop
xlat
mov
push
and
loopne
mov
popf
mov
sub
mov
pop
outs
add
and
push
cmp
gs
mov
(bad)
shr
popf
inc
lods
ss
or
add
loop
ds
popf
ret
fisttp
or
scas
dec
xor
movs
inc
xchg
mov
nop
clc
in
neg
das
sbb
les
sti
sti
xchg
or
inc
imul
pop
out
and
push
mov
jae
fisubr
mov
jns
and
in
inc
retf
and
jbe
lds
(bad)
sub
pusha
addr16
ins
sahf
ja
jl
mov
lods
xchg
repnz
(bad)
xor
add
aad
mov
shl
pop
add
sbb
leave
(bad)
pop
jp
mov
mov
ins
test
retf
xchg
movs
cwde
fisubr
loopne
dec
dec
cmp
test
movs
mov
daa
ret
not
mov
mov
aam
fneni(8087
(bad)
or
movs
sahf
mov
dec
inc
mov
bswap
icebp
scas
(bad)
sbb
stos
inc
sbb
addr16
adc
sbb
in
xor
cmp
xchg
inc
jg
inc
retf
or
push
xlat
dec
(bad)
inc
xchg
inc
mov
sub
mov
es
adc
hlt
pop
das
xchg
mov
shr
xchg
shl
adc
adc
and
jge
test
loop
scas
sbb
in
sub
pop
or
sbb
stc
ds
clc
mov
jae
and
mov
pop
xchg
mov
mov
(bad)
mov
imul
jle
shl
out
int
adc
pop
pop
popa
lea
mov
cwde
xchg
dec
arpl
dec
dec
cmps
mov
push
ins
popf
aas
and
(bad)
fldenv
add
loope
or
pop
lods
mov
jnp
push
mov
jg
into
cmp
aaa
lds
mov
inc
daa
cmp
mov
jnp
stc
cmp
mul
xchg
xchg
xchg
sbb
cmp
pop
movs
mov
or
jne
lock
cs
mov
retf
fcom
xor
cs
push
mov
or
mov
cmps
sbb
cwde
pop
mov
adc
out
push
mov
mov
pusha
mov
mov
(bad)
aad
and
int
push
sahf
cmp
in
push
push
adc
inc
dec
cmp
iret
push
pop
mov
push
je
(bad)
push
and
popa
loope
bound
cmps
xor
ins
sbb
pop
push
adc
loopne
div
push
aad
test
push
add
sahf
clc
es
pop
xchg
dec
dec
dec
les
dec
imul
push
(bad)
or
stos
std
(bad)
repnz
and
xchg
clc
and
dec
and
or
cwde
retf
nop
inc
scas
mov
push
mov
test
pop
fldcw
add
inc
push
outs
movs
pop
retf
sbb
jbe
inc
mov
daa
pop
inc
(bad)
retf
fadd
cmp
int3
xchg
pushf
in
scas
sti
aam
mov
in
mov
pop
sbb
stos
leave
xor
or
xchg
ret
mov
stos
inc
lods
pop
jge
in
inc
das
add
fild
lock
push
mov
leave
(bad)
cwde
lods
leave
cmp
cmps
adc
push
loop
pop
adc
adc
mov
add
and
lea
arpl
fbld
sub
inc
push
ins
in
add
cmps
hlt
and
shl
in
mov
mov
add
dec
hlt
adc
push
stc
cmp
(bad)
test
repnz
call
jne
fdivr
shl
cmp
cmp
std
sub
and
cmp
mov
fld
jp
cmp
iret
les
(bad)
and
adc
cwde
cs
push
imul
inc
pop
cmp
inc
loope
push
gs
mov
fild
nop
mov
mov
add
outs
in
test
mov
rol
test
inc
jge
push
pop
dec
sbb
ins
sti
int
jb
(bad)
inc
adc
mov
in
lahf
daa
mov
xchg
enter
mov
lds
hlt
mov
adc
xor
int
not
jg
xor
mov
and
mov
pop
and
leave
sub
lahf
cmps
mov
jg
xchg
es
inc
mov
or
pop
repz
mov
gs
std
test
or
sub
outs
ins
add
je
in
mov
cmps
int
test
jmp
clc
push
cmp
(bad)
clc
jne
test
cdq
sbb
xor
or
pop
call
ss
cmp
sti
or
inc
outs
ret
cmp
add
add
frstor
mov
xor
or
imul
inc
sub
and
push
mov
mov
sti
mov
leave
dec
pop
mov
cld
ins
dec
dec
mov
sub
ret
adc
cld
mov
outs
sbb
pop
add
daa
mov
pop
repnz
and
cmp
popf
cmp
push
shl
pop
ins
in
sahf
inc
call
loop
add
or
cmp
mov
clc
scas
xchg
inc
fnstsw
xchg
call
xchg
mov
movs
daa
(bad)
mov
xor
push
cld
into
pop
push
add
in
cmps
mov
in
mov
xor
jo
pop
sub
mov
bound
cmps
pusha
cmc
mov
dec
fcom
(bad)
sub
aas
mov
lods
mov
jae
mov
cmp
pop
jnp
sub
jp
push
lds
lods
(bad)
sub
mov
mov
jg
dec
mov
aam
call
lods
push
mov
clc
pop
fisttp
ins
jmp
ror
(bad)
cmp
test
out
sub
adc
loope
mov
fld
mov
ds
jae
in
repz
jae
ja
rol
add
nop
xchg
dec
(bad)
jg
es
stos
mov
lds
pusha
push
push
sbb
fmul
mov
add
cmc
xor
dec
movs
aas
jl
(bad)
jbe
sbb
or
lahf
add
mov
jmp
mov
mov
bound
mov
mov
xor
jg
test
push
push
mov
daa
imul
xor
jmp
inc
mov
add
add
scas
sbb
jmp
mov
lock
imul
cmp
mov
ss
add
movs
push
jle
adc
sar
pusha
mov
aas
jle
xlat
inc
cmc
adc
fild
(bad)
sahf
mov
cmp
fs
stos
mov
lds
sub
ds
mov
leave
in
cld
test
mov
mov
mov
or
arpl
dec
test
rcr
and
int
shr
pop
mov
mov
sti
cld
add
fist
faddp
pop
retf
cmc
inc
xchg
jbe
add
sti
neg
adc
jo
jle
sbb
push
sbb
cmp
push
hlt
mov
sub
cmps
test
and
mov
mov
add
lahf
mov
sbb
pop
pop
adc
mov
mov
add
jbe
inc
jmp
or
cmp
and
sub
nop
dec
sahf
clc
push
popf
add
adc
cwde
jle
es
lock
sbb
ins
pop
sbb
popf
out
fisttp
inc
pop
fmul
push
gs
mov
or
out
mov
shl
dec
adc
sbb
mov
xor
xor
test
enter
outs
cmc
fcom
mov
dec
into
mov
mov
(bad)
aam
xchg
popf
push
add
add
mov
push
xor
mov
loopne
std
shl
jnp
adc
das
pop
mov
mov
mov
xchg
(bad)
mov
hlt
sub
or
xor
aaa
sub
pusha
icebp
push
fcomp
mov
mov
dec
popf
fcom
sti
ins
pop
cmp
sbb
jle
mov
fimul
mov
call
movs
cli
(bad)
push
jg
and
fadd
repz
cmp
jnp
jae
push
leave
adc
xor
pop
or
stos
into
jae
or
mov
push
fnstcw
stos
mov
int
cdq
sub
cmp
jo
les
xlat
xchg
int3
push
icebp
or
sahf
pop
xchg
aad
test
inc
std
loopne
mov
scas
jno
sub
sbb
xchg
ins
cmp
and
adc
daa
shl
out
addr16
or
xlat
arpl
mov
mov
outs
adc
rol
sbb
xchg
(bad)
pop
xor
js
cwde
jmp
mov
lock
and
cmp
push
adc
push
jmp
repnz
js
mov
shr
aad
imul
push
inc
ror
ja
jecxz
sahf
add
mov
add
das
and
out
or
cs
or
test
mov
sub
ss
add
pop
das
call
fs
jecxz
add
xchg
xor
adc
jne
scas
icebp
or
lea
ret
push
xor
hlt
mov
jne
inc
xor
push
pop
in
sub
and
push
dec
jl
xor
retf
lock
movs
jnp
mov
sub
cmc
call
cmp
and
push
jmp
arpl
aad
push
cs
mov
xchg
add
or
call
jle
and
lea
pusha
lock
mov
(bad)
lock
push
rol
xchg
add
daa
jne
imul
mov
mov
or
int3
mov
jp
js
pushf
inc
scas
in
and
xchg
rcl
mov
dec
add
mov
and
aaa
mov
lods
fcmovnb
jbe
aad
rol
lea
and
cld
sbb
cmp
or
fistp
sti
xor
dec
cmp
fnstcw
push
scas
push
clc
cmp
ins
or
fwait
xor
jmp
dec
dec
(bad)
das
mov
mov
inc
(bad)
and
jno
ja
jmp
mov
mov
test
xchg
mov
lock
ins
pusha
xchg
ret
adc
rcl
adc
adc
jmp
call
out
in
or
mov
gs
fist
leave
cs
push
mov
(bad)
fs
mov
xchg
repnz
xchg
jnp
or
shl
mov
outs
stos
sub
jmp
push
int3
push
in
add
(bad)
mov
xchg
jns
jmp
repz
lahf
mov
mov
ret
(bad)
push
xor
mov
mov
cmps
lock
(bad)
iret
xchg
das
and
inc
shr
xchg
aam
pusha
inc
cmc
aaa
xchg
pushf
jg
mov
lahf
hlt
adc
jl
add
fsub
pusha
mov
in
mov
test
ja
in
ficom
lahf
mov
div
js
sysenter
ins
dec
cmp
repnz
adc
mov
rol
pmullw
inc
fistp
inc
popa
push
and
and
xchg
xchg
lar
out
int3
scas
cmp
and
loop
mov
fcmovnbe
(bad)
imul
arpl
xchg
or
jecxz
into
or
mov
and
jb
ret
call
or
fist
shl
sbb
bound
cmps
out
test
int
sbb
cmps
lahf
out
ror
or
clc
ins
push
mov
mov
add
push
out
push
add
int3
imul
pop
sbb
out
js
ins
mov
push
ss
daa
mov
call
into
cmp
pop
and
and
jle
retf
xchg
jl
adc
mov
cmc
mov
jg
sbb
shl
jne
pop
jge
js
and
add
fmulp
ffreep
jl
mov
sub
jo
mov
inc
jp
cmp
fistp
(bad)
aaa
fwait
jns
(bad)
rol
call
mov
xchg
add
fld
ja
and
and
and
add
sub
jmp
stc
mov
ds
push
sti
and
ins
test
in
lock
call
cmc
push
lahf
ins
fs
stos
fst
nop
nop
dec
(bad)
push
es
iret
addr16
cld
jno
xor
outs
in
fistp
pop
neg
push
ins
jnp
sub
pusha
mov
or
outs
jmp
inc
mov
mov
pop
pop
push
xchg
loop
and
in
push
jmp
pop
bound
scas
mov
popa
mov
add
jo
mov
fild
mov
mov
dec
retf
mov
or
and
stos
adc
or
jg
lea
dec
inc
stc
push
xchg
jnp
scas
bound
fwait
cmovne
xchg
or
dec
inc
sbb
cwde
xchg
xchg
cmps
jg
jns
sub
inc
pop
mov
mov
mov
clc
cwde
push
fld
sahf
sbb
sub
push
mov
xor
enter
into
xchg
xor
daa
pop
data16
nop
repz
jb
inc
inc
xchg
mov
xchg
or
inc
iret
out
push
mov
cmp
stos
adc
sbb
out
xchg
leave
fwait
lds
or
inc
in
mov
xchg
sub
and
into
adc
sub
add
and
pop
push
ds
jo
push
mov
das
loop
retf
or
push
and
out
scas
pop
les
mov
rcl
or
adc
sub
jmp
lods
call
jb
cmp
dec
ss
xlat
push
hlt
mov
add
mov
in
clc
pop
das
fld
dec
mov
aaa
ret
stos
pop
das
inc
jmp
leave
mov
push
mov
pop
fdiv
mov
cs
lds
pop
movs
cmp
bound
in
push
mov
iret
cmp
imul
es
inc
push
out
popf
xor
xchg
dec
add
ret
pop
shl
(bad)
cmp
(bad)
pop
sub
das
cmp
nop
cs
push
sbb
cmp
or
adc
cmp
mov
fld
mov
scas
mov
test
lock
ret
push
mov
mov
sbb
add
stos
call
ret
and
fwait
sub
mov
cmc
and
xchg
sahf
sahf
es
jno
lods
mov
jle
and
mov
mov
rcl
or
push
xor
add
lock
or
push
pop
rcr
sbb
pop
mov
popa
cmp
(bad)
std
arpl
cmp
push
mov
cmovbe
div
push
loopne
cmp
push
stos
lea
cdq
inc
cmp
mov
inc
sbb
or
adc
icebp
lods
xor
cmps
test
fild
xor
loope
inc
push
xor
shr
jg
imul
lea
test
dec
cmc
add
in
movs
enter
xchg
mov
test
or
sbb
cmp
push
rcl
xchg
xchg
retf
int3
clc
fisub
stc
mov
fnstenv
jo
and
xchg
add
out
xor
adc
push
imul
loopne
pop
repz
cwde
je
inc
out
lods
adc
jnp
xchg
jo
xchg
mov
add
aad
ds
clc
int
or
popf
adc
fwait
xchg
lods
sbb
push
aas
mov
add
jecxz
aas
dec
sub
lock
or
stos
pop
jb
push
and
dec
mov
jg
jb
stc
push
xor
jmp
jnp
(bad)
scas
adc
add
int3
cmp
in
dec
or
mov
sub
jp
mov
or
loopne
xor
xchg
das
retf
push
out
sbb
sub
adc
test
mov
shr
iret
jp
push
pop
mov
fwait
retf
mov
sbb
dec
imul
bound
test
lock
xchg
(bad)
mov
jno
cmp
mov
mov
cmp
mov
add
sub
movs
cmp
push
jl
aas
mov
cdq
push
outs
and
fsub
outs
stos
cli
inc
(bad)
cmp
adc
mov
add
loopne
and
scas
push
xchg
dec
push
repz
pop
pop
mov
bsr
xor
jmp
test
out
mov
es
rcr
out
in
xchg
and
sub
cmps
sbb
jae
add
or
ror
mov
add
lods
inc
adc
pop
adc
jnp
test
fwait
aaa
mov
aad
retf
(bad)
pop
bnd
lods
mov
fmul
(bad)
jle
cmps
adc
fisubr
mov
inc
loop
xchg
addr16
inc
or
lock
mov
pop
es
jle
and
add
lds
das
imul
inc
mov
jae
(bad)
fist
(bad)
mov
mov
xchg
cmp
lods
cmps
mov
push
cld
push
xchg
scas
jbe
mov
xor
or
das
or
jns
mov
pop
or
push
rol
add
and
xor
xchg
add
lods
lock
jge
out
mov
jo
lahf
dec
nop
(bad)
or
mov
test
retf
push
call
jg
mov
jno
imul
mul
jge
inc
jno
ss
adc
mov
cs
xor
adc
push
hlt
shl
std
aaa
mov
mov
mov
dec
push
mov
cmp
sub
jne
fidiv
inc
movs
cmps
xor
cmp
pop
repnz
or
adc
jns
dec
movs
inc
icebp
or
or
push
sub
pop
fisub
push
ins
sub
dec
inc
nop
push
push
out
add
xor
jnp
inc
or
iret
nop
sub
jp
jmp
mov
cmp
mov
lahf
sbb
into
clc
(bad)
mov
cwde
bnd
inc
iret
mov
inc
les
pop
test
push
inc
call
cmc
lds
mov
pop
(bad)
or
add
sti
iret
out
scas
(bad)
ins
xor
pusha
call
outs
inc
inc
jns
pusha
and
jecxz
xor
cmp
push
adc
stos
xchg
div
jno
cmps
and
add
and
or
jno
and
xor
sbb
and
xor
xchg
loop
mov
mov
je
rcl
rcl
jne
jmp
dec
mov
jge
fidivr
cmp
test
retf
repz
xchg
(bad)
jge
movs
sub
and
or
jge
popf
pop
pusha
and
je
clc
sub
xor
fild
or
and
out
pushf
(bad)
cli
push
ins
inc
xor
repz
jb
movs
sbb
out
fcom
rcl
clc
fld
out
nop
push
mov
movs
enter
icebp
fmul
or
(bad)
call
add
sub
jbe
cld
jb
add
push
jb
mov
or
and
sahf
pop
std
sbb
jmp
scas
sub
jb
fisttp
enter
ins
ins
push
leave
push
jno
hlt
loop
pushf
sub
and
loop
sub
scas
xor
dec
lock
mov
inc
xor
icebp
out
ds
pop
sub
mov
aam
sar
pop
or
idiv
test
cmps
cmp
mov
inc
test
imul
retf
repnz
adc
mov
mov
scas
adc
add
daa
xchg
mov
xchg
jmp
add
adc
fcom
add
ds
cmc
xchg
jno
stos
mov
ret
cmp
sahf
stos
xor
fst
pusha
in
into
mov
mov
jle
cld
call
fcomp
push
xor
push
jae
push
lods
into
mov
lds
sbb
push
popf
fcmove
inc
(bad)
sub
sbb
mov
ror
pop
retf
fcmovu
cdq
nop
not
out
adc
test
ret
mov
cmc
sbb
dec
test
mov
mov
adc
jmp
cmp
movs
inc
cmc
and
stos
jne
leave
adc
pop
jmp
repz
dec
enter
in
in
add
js
in
jns
aam
pusha
mov
scas
test
and
xor
js
sbb
push
xlat
adc
daa
jbe
jb
rcr
stos
idiv
mov
push
adc
jl
add
pop
fnsave
push
stos
cmc
add
mov
cld
and
cmps
mov
xlat
cmp
mov
in
bnd
xchg
and
inc
hlt
pop
gs
jbe
fimul
adc
push
xchg
push
aaa
push
xor
shr
(bad)
adc
lods
loope
aad
dec
leave
add
std
push
les
xchg
dec
addr16
jb
pop
xor
pop
mov
jmp
xchg
dec
int3
cli
shl
lods
rol
daa
pop
aam
add
jnp
int3
push
sbb
add
lods
push
mov
mov
dec
ins
gs
call
mov
mov
in
sbb
pop
push
mov
adc
inc
fwait
hlt
or
cmps
push
inc
pusha
call
add
movs
push
fsubrp
jge
jge
fsubr
add
rcr
in
xchg
in
jnp
cmp
mov
inc
es
xchg
xchg
add
mov
jbe
pop
scas
stc
jp
fist
add
jl
dec
mov
dec
and
leave
ja
gs
in
inc
adc
cs
mov
lds
sti
imul
pop
out
jl
sbb
dec
add
in
mov
and
popa
dec
test
pop
fstp
inc
lds
iret
mov
aas
push
ss
ins
ds
xchg
xchg
sub
pop
add
jge
push
sbb
sub
jmp
push
into
ret
or
das
sti
inc
scas
push
mov
cli
mov
xchg
jmp
xchg
sbb
call
cli
pop
dec
xor
add
add
push
pop
inc
frstor
aam
scas
lea
push
xchg
js
mov
cmp
pop
and
jl
inc
into
mov
push
mov
xchg
sar
sbb
sub
cwde
sbb
shl
mov
pop
scas
cmp
popa
xor
sub
clc
popf
cs
inc
ins
pop
pop
repnz
adc
leave
and
dec
in
and
addr16
nop
cmp
ja
aaa
mov
dec
cli
into
aaa
(bad)
xor
lods
or
inc
xor
pushf
mov
leave
test
pop
xor
dec
out
jbe
(bad)
bound
inc
int
push
sub
out
jl
xchg
and
push
(bad)
push
jp
retf
mov
mov
mov
daa
pop
stc
ins
pop
or
imul
and
ins
xchg
sub
xor
xchg
push
daa
mov
lahf
or
add
cmc
xlat
fwait
jne
sub
shl
or
ins
mov
pop
jno
shr
scas
adc
xchg
std
scas
push
mov
cmps
aam
pop
shr
repz
mov
xchg
jl
(bad)
(bad)
or
js
or
xor
outs
and
jp
sub
(bad)
adc
add
dec
adc
in
sahf
outs
lods
push
and
lea
xchg
push
les
pop
adc
in
xchg
(bad)
dec
cdq
mov
lea
xchg
pop
ret
sbb
push
push
pop
in
mov
jle
retf
jmp
cmp
sahf
mov
pop
xchg
int
mov
and
cmp
jmp
int3
mov
add
dec
popa
mov
loop
jnp
sbb
or
lods
retf
jbe
jmp
jbe
push
adc
imul
loopne
aas
pushf
ret
sub
cmps
jno
push
jecxz
test
outs
jne
pop
fnstsw
cmp
mov
scas
xchg
mov
push
inc
pop
repnz
sub
push
lar
xlat
sub
mov
jmp
retf
mov
ficomp
fisttp
sbb
and
xor
imul
std
add
adc
mov
and
mov
mov
adc
in
aaa
ss
out
add
std
xchg
shr
jne
mov
cmps
pop
shl
push
pop
js
retf
adc
int3
mov
call
test
scas
sbb
loope
add
add
pusha
xchg
jae
mov
(bad)
loopne
pop
push
cmc
pop
fwait
jmp
add
retf
pop
fwait
or
mov
rcr
xchg
and
pop
imul
adc
lds
(bad)
or
rcr
jns
sub
jmp
jo
push
xchg
ret
fisttp
pcmpgtw
add
fldenv
inc
(bad)
push
in
mov
inc
push
sbb
mov
dec
and
test
or
iret
adc
cmps
iret
or
scas
xchg
pop
mov
fsubp
in
mov
(bad)
cmp
fcom
out
gs
jns
adc
lods
ss
push
push
jmp
dec
fcmovnu
inc
xchg
repnz
jmp
jo
pop
test
iret
cmp
jne
adc
pop
xchg
inc
dec
mov
inc
or
out
pop
popf
cmc
mov
pop
mov
adc
mov
sbb
enter
jae
sbb
nop
xchg
loope
fcomp
pop
inc
dec
xor
xchg
(bad)
push
sub
xor
(bad)
test
xor
jns
sub
mul
or
cld
xor
sar
(bad)
clc
ficom
mov
inc
aam
jle
add
mov
add
iret
sbb
cmp
loopne
cwde
mov
(bad)
cld
cld
jns
jge
or
mov
mov
mov
cmp
mov
ficomp
aad
inc
fcmovb
fisub
mov
mov
dec
test
mul
cmp
pop
push
pop
push
rcl
ret
repnz
cmp
stos
jmp
movs
pop
daa
lock
lods
outs
sbb
shr
xor
jge
stos
dec
popf
iret
or
push
test
xchg
(bad)
cmp
mov
stos
into
fidivr
xor
pop
popa
mov
xlat
out
jnp
(bad)
iret
jmp
fdiv
mov
test
mov
cmp
xor
xor
sbb
xchg
inc
mov
add
lahf
pop
jo
inc
mov
inc
mov
lahf
sub
aad
or
add
add
pushf
mov
and
(bad)
jne
mov
xor
fmulp
repz
push
sbb
mov
aad
test
push
xchg
shr
jl
xor
jge
push
mov
xor
movs
pop
hlt
rol
xchg
sub
push
inc
cmp
into
jns
imul
ror
loop
(bad)
into
xchg
in
xchg
pop
outs
inc
xor
daa
jl
sub
outs
fistp
popf
repnz
stc
test
dec
cli
jns
shr
sub
aaa
and
jl
sub
mov
(bad)
jb
dec
sub
mov
jp
aam
dec
xchg
scas
sub
retf
mov
enter
(bad)
ss
jmp
jl
jg
and
dec
rcl
xchg
pop
mov
iret
in
or
imul
xchg
sub
scas
and
xchg
mov
cmps
mov
sub
jo
push
in
ret
ins
mov
lods
cld
xchg
enter
mov
loope
and
sub
jmp
mov
cdq
pop
dec
jecxz
call
aaa
fmul
ds
or
out
inc
pusha
add
xchg
mov
push
leave
jecxz
mov
test
inc
and
retf
jb
pop
aam
out
cmc
xchg
(bad)
fsubr
pop
add
inc
shl
pop
repnz
xor
xchg
cmps
sub
mov
pop
push
mov
or
or
(bad)
ror
jb
pusha
test
into
jl
dec
data16
fcomp
sti
aaa
mov
ret
popa
popf
and
push
sbb
adc
into
cs
pop
mov
(bad)
mov
enter
pop
mov
add
sbb
inc
mov
setle
xor
test
idiv
outs
jae
push
jmp
pusha
pop
pop
pushf
and
mov
mov
or
js
test
xchg
mov
adc
pop
push
adc
or
xlat
popa
lea
mov
pop
cdq
sbb
icebp
sbb
jecxz
xor
push
aas
or
push
cmp
jge
lea
sub
xchg
in
call
jb
mov
or
mul
out
cmps
push
dec
sbb
sbb
and
mov
in
arpl
xor
add
les
inc
(bad)
pop
cmps
dec
push
add
arpl
push
cmp
jecxz
and
cmp
pusha
jo
pushf
(bad)
and
mov
adc
adc
xor
cs
sahf
pop
or
push
sar
pop
js
or
fdivr
enter
fist
adc
ss
loop
xchg
test
movs
add
jnp
fidivr
fisub
mov
imul
mov
mov
arpl
cmp
jge
inc
mov
push
xor
pusha
mov
and
ror
inc
xor
jae
loop
push
pop
adc
sbb
stos
fsubrp
out
fnstcw
dec
push
jecxz
pop
int3
out
aad
fistp
mov
mov
pop
lea
movs
pop
pop
cmps
enter
sti
push
aam
mov
loope
pop
xor
leave
idiv
adc
(bad)
cld
or
inc
jmp
jg
xlat
xor
xor
mov
sub
push
popa
mov
mov
sahf
xchg
lea
into
inc
jns
neg
push
(bad)
jb
xchg
and
movs
(bad)
and
dec
add
mov
xor
cmps
xchg
push
pop
jo
push
pop
pop
push
sti
loope
jg
leave
and
sbb
(bad)
cmp
rcl
sub
aam
inc
imul
cli
add
sti
xor
test
xor
push
pop
push
jmp
ja
ret
jae
(bad)
jg
fimul
adc
xchg
jb
mov
cmp
in
fadd
mov
retf
mov
and
mov
aad
cli
das
pop
pop
or
jne
fs
mov
dec
push
adc
retf
jmp
xchg
sbb
cmps
daa
add
inc
xchg
inc
shl
mov
sbb
out
sti
xchg
dec
lahf
xor
cld
jle
mov
xor
pop
push
pop
dec
nop
mov
nop
mov
add
arpl
inc
mov
jb
out
inc
mov
sti
cmc
cmp
dec
rcl
sub
and
sbb
and
mov
and
dec
add
add
js
push
scas
pop
or
repnz
add
cli
loopne
retf
out
lahf
or
xchg
xchg
jae
loope
es
mov
or
test
mov
sub
push
loopne
(bad)
int3
dec
daa
push
and
push
push
or
xchg
inc
repnz
xor
add
enter
sbb
pop
dec
push
rcr
jge
adc
fld
mov
cs
in
sti
fiadd
mov
fcmove
jmp
cli
hlt
test
and
ds
jg
mov
inc
sub
cmp
jle
cmp
push
cmp
sahf
call
aaa
imul
pusha
leave
add
popf
out
not
adc
mov
sbb
sahf
pop
repz
test
xor
mov
daa
outs
outs
call
add
je
les
bound
repnz
cmp
enter
cmp
sub
outs
inc
lods
and
shl
mov
xchg
add
repz
dec
jecxz
test
sub
sbb
cs
ins
adc
hlt
sub
nop
cmp
push
ret
xor
and
add
and
mov
lods
lea
ins
dec
jp
lea
xchg
inc
outs
call
jge
mul
xchg
into
iret
sbb
push
push
inc
sahf
or
and
push
jno
hlt
ins
lahf
sbb
cmp
jns
pop
inc
mov
mov
rol
loopne
cmp
mov
jge
repz
jns
push
dec
sub
xor
cmp
sbb
xchg
adc
push
(bad)
mov
pop
iret
lods
fbld
inc
pusha
mov
aaa
ret
push
ins
bnd
dec
out
cld
mov
mov
push
call
stc
push
pop
mov
mov
inc
or
inc
inc
xor
and
pop
xchg
aaa
loope
jbe
daa
vmovaps
cdq
(bad)
xlat
lds
jb
cmp
jno
adc
xchg
adc
aad
xchg
xor
fwait
adc
ja
outs
ficomp
or
sub
xchg
hlt
imul
popf
fnstcw
sbb
jge
pop
add
pop
stc
retf
push
xchg
fwait
aaa
ret
jge
and
jg
xchg
mov
imul
daa
push
outs
add
test
aaa
aam
(bad)
shl
(bad)
push
mov
mov
retf
xchg
mov
and
test
and
stos
push
push
out
jmp
jge
ds
jne
mov
fcmovnb
push
pop
xchg
inc
sar
xlat
xchg
adc
dec
shl
and
mov
sti
cmp
add
rcr
ins
sub
mov
dec
mov
jmp
lock
mov
(bad)
xor
test
(bad)
fs
imul
xor
daa
data16
enter
cdq
xor
dec
push
add
inc
adc
nop
pushf
add
sti
call
mov
nop
xor
clc
popa
push
pop
inc
jbe
push
lods
enter
popa
repz
lods
add
xchg
pusha
(bad)
add
adc
jle
lea
int3
xor
add
jo
imul
inc
sbb
or
and
lods
cli
push
sub
add
pop
test
sub
and
or
xor
mov
jmp
push
mov
jmp
ins
imul
addr16
gs
push
cli
pop
cmp
aaa
outs
rcr
(bad)
xchg
push
retf
fmul
in
xor
cmc
aad
inc
pop
sub
xchg
cmp
fidiv
sbb
mov
in
out
jmp
(bad)
idiv
adc
sbb
jno
inc
sub
sub
adc
mov
stos
and
sbb
leave
xchg
pop
xchg
push
adc
aaa
popf
scas
mov
or
call
ficomp
mov
pop
dec
int3
aas
call
jns
out
shl
into
cmp
movs
cmp
or
shl
cmp
mov
jmp
cmp
pop
leave
sub
push
pop
xor
pop
add
test
pop
pop
retf
mov
and
cmp
daa
pop
sbb
pop
int
xor
lods
inc
mov
sbb
fdiv
data16
sbb
adc
dec
add
loop
mov
add
cwde
mov
ror
sub
in
mov
mov
jae
sbb
xchg
out
mov
stos
fwait
push
mov
das
and
mov
dec
out
int3
fisubr
sbb
nop
mov
xchg
jmp
mov
ja
adc
jne
repnz
fs
into
mov
popa
jmp
mov
xor
push
bound
ins
mov
out
enter
jno
mov
xchg
and
je
fnstcw
ror
xchg
aaa
js
sbb
repnz
ret
fwait
pop
shl
in
nop
js
cli
les
in
test
push
mov
adc
mov
adc
mov
out
es
mov
lahf
mov
add
scas
cmp
adc
xchg
test
ret
sbb
xor
cmp
push
jnp
daa
(bad)
adc
xor
outs
xchg
ins
sub
mov
cmp
outs
and
mov
xchg
cld
mov
mov
retf
jp
push
mov
(bad)
jle
adc
jb
add
out
fsubr
pop
pop
inc
mov
push
ret
push
retf
cmp
xlat
jecxz
mov
push
outs
fiadd
js
adc
pop
in
push
lock
xchg
xchg
inc
lods
mov
popf
rcr
sti
les
push
loop
fs
xor
sub
mov
ss
and
bound
sbb
out
in
xchg
je
retf
gs
jnp
aas
mov
in
xor
lods
xchg
xor
mov
adc
xor
sbb
movs
push
out
int
ret
and
rol
mov
sar
aaa
repnz
xchg
out
sahf
or
bnd
clc
jae
mov
pop
loope
add
sbb
mov
jo
mov
push
xor
stos
outs
inc
cs
imul
jae
mov
(bad)
arpl
mov
fstp
sbb
clc
xchg
and
clc
mov
test
and
test
adc
data16
movs
ret
enter
sub
movs
inc
inc
dec
outs
inc
mov
mov
lock
in
push
add
push
and
rol
iret
fisub
mov
ds
mov
sub
outs
call
jne
sbb
(bad)
outs
dec
mov
pop
repnz
push
pop
jb
adc
lock
daa
mov
mov
inc
push
js
mov
mov
or
add
je
mov
mov
jns
xlat
inc
dec
(bad)
rcr
jns
jmp
(bad)
and
xchg
jmp
xor
add
test
lds
leave
adc
jl
loope
aad
sub
jbe
adc
idiv
std
imul
jmp
stc
jle
(bad)
call
jnp
int
call
push
fnstenv
inc
cmp
dec
pusha
xor
(bad)
fs
sub
in
jae
or
mov
ror
ds
and
pop
lahf
bound
push
pop
imul
dec
outs
mov
mov
jp
sub
fstp
mov
xor
retf
xchg
push
pop
sbb
out
(bad)
adc
js
or
cmp
jp
movs
ss
mov
fwait
daa
inc
movs
mov
fnstenv
mov
push
mov
dec
push
dec
out
pop
fidivr
ins
add
ins
fcomp
dec
sbb
cmp
cmp
cmps
xor
xchg
test
inc
mov
je
test
cmp
push
sbb
lock
dec
sbb
mov
jg
dec
inc
js
dec
jp
cmp
(bad)
lock
call
add
outs
cmps
sbb
movs
push
fcomip
or
fcom
and
push
add
and
xchg
fbstp
stos
and
hlt
cs
mov
ror
xlat
cli
xlat
cmc
xor
je
sbb
jb
or
test
mov
imul
stc
xchg
pop
stos
xchg
xor
cmp
sti
cld
ss
cdq
push
in
mov
mov
adc
adc
es
into
cmps
cli
xor
ds
adc
out
push
xor
mov
test
nop
jns
out
movlps
(bad)
ficomp
outs
rcl
mov
pop
xchg
aam
jo
repnz
pop
les
imul
sub
aaa
cmp
inc
dec
lods
ret
enter
js
mov
inc
pop
sub
pushf
sti
push
push
loope
inc
jns
xchg
repz
outs
mov
call
or
mov
jecxz
leave
daa
in
fdivrp
xchg
and
fs
push
add
lea
jb
pop
cmp
pop
cmp
jae
push
xor
shr
jle
popa
addr16
push
and
sahf
sub
sbb
movs
int
jns
sbb
pusha
das
pop
lock
dec
icebp
pop
pop
out
out
xchg
sar
mov
jns
fwait
aam
inc
aam
sbb
dec
push
imul
add
jo
stc
shr
mov
out
xlat
out
repz
mov
or
push
or
xchg
or
mov
add
dec
sbb
in
pop
jmp
jmp
mov
enter
in
xor
into
mov
ins
push
inc
daa
xor
add
in
jmp
pop
push
hlt
adc
daa
pop
mov
sbb
inc
jge
push
scas
movs
loope
ds
or
inc
or
sbb
clc
xchg
mov
pop
test
and
sti
push
(bad)
jo
mov
imul
jo
or
cmps
cli
fsubr
jne
retf
(bad)
push
ins
addr16
stos
mov
sub
js
jae
or
mov
cdq
dec
mov
dec
fidivr
fs
pop
mov
xor
in
(bad)
jo
test
dec
pop
mov
lock
pop
dec
ds
ja
mov
adc
or
(bad)
aaa
in
daa
pusha
icebp
pop
add
icebp
(bad)
xor
dec
push
sbb
(bad)
std
push
mov
lahf
sahf
inc
sub
shr
jge
cs
ret
and
push
lahf
dec
sub
xor
adc
sar
jmp
sub
scas
aas
mov
push
not
adc
mov
cmps
push
movs
mov
ret
and
add
movs
js
adc
(bad)
cmps
xchg
(bad)
(bad)
stos
jmp
push
mov
js
arpl
inc
test
push
ror
aam
loopne
(bad)
xchg
out
push
(bad)
minps
push
test
daa
ficomp
adc
add
adc
xchg
rol
aaa
and
lea
cmp
cmps
in
test
push
xchg
adc
cli
or
ss
pop
mov
xchg
or
data16
mov
inc
out
dec
or
cmp
lods
ret
int
xor
sub
aas
inc
add
or
mov
ja
mov
(bad)
cli
jne
push
(bad)
jmp
leave
sahf
jecxz
xchg
nop
mov
addr16
outs
fcom
mov
(bad)
jp
es
ret
mov
mov
mov
fwait
lds
in
ret
aas
repnz
xor
sbb
mov
test
xor
jmp
int
into
out
sub
mov
pop
scas
and
cmp
xor
push
jo
sbb
fcomp
cmp
(bad)
es
sbb
sahf
fstp
sub
fidiv
jp
push
fist
shl
dec
fwait
imul
(bad)
pop
clc
sub
dec
icebp
aaa
and
lds
push
sbb
xchg
cmp
or
sub
ins
inc
pop
jo
sbb
add
and
repnz
and
addr16
or
adc
in
scas
push
repz
and
test
out
cmp
int3
xchg
push
in
sti
std
fadd
mov
mov
mov
push
mov
mov
out
out
dec
pop
sbb
repz
(bad)
movs
call
xchg
cld
mov
in
xchg
dec
xor
inc
rcr
adc
fnstcw
cmp
into
enter
cld
in
repz
cs
inc
aad
stos
stos
aaa
lds
in
jl
jmp
cmp
pop
push
shr
call
out
xchg
je
adc
sub
stos
pop
leave
mov
or
pop
pop
cwde
sbb
pop
fcom
push
push
pop
xchg
sbb
data16
push
jb
inc
outs
pop
sahf
mov
push
jp
dec
cmp
adc
dec
and
scas
ror
dec
push
(bad)
pop
jo
fstp
and
xchg
les
mov
push
or
dec
adc
pop
jmp
add
(bad)
lahf
sub
mov
jge
es
dec
sbb
repnz
mov
mov
sub
fisub
fnstsw
mov
cmp
int
daa
movs
pop
xchg
xor
mov
(bad)
mov
(bad)
loopne
fst
push
xor
jb
retf
cld
js
sub
call
cli
push
or
pavgb
or
add
pop
adc
or
adc
movs
jl
sti
in
les
push
test
fs
xchg
cli
mov
jne
mov
jbe
jno
jae
call
xchg
inc
ins
push
dec
cmp
add
add
add
add
in
pushf
and
sar
xor
push
cmp
jne
inc
inc
push
push
push
add
push
push
push
add
push
push
mov
nop
nop
nop
nop
nop
push
push
push
push
sub
mov
mov
mov
mov
lea
mov
mov
movzx
mov
shl
mov
dec
mov
movzx
shl
dec
mov
mov
movzx
mov
mov
mov
mov
mov
mov
mov
mov
mov
movzx
add
shl
lea
cmp
jae
mov
mov
add
loop
mov
xor
mov
mov
add
mov
xor
cmp
je
movzx
shl
inc
inc
or
cmp
jle
mov
cmp
jae
mov
and
mov
mov
shl
mov
add
cmp
lea
ja
cmp
je
shl
movzx
shl
inc
or
mov
mov
shr
movzx
imul
cmp
jae
mov
mov
sub
mov
sar
mov
lea
movzx
mov
mov
and
mov
shl
mov
sub
sar
add
imul
cmp
lea
mov
jle
mov
sub
mov
movzx
mov
shl
mov
lea
mov
and
cmp
lea
mov
lea
ja
cmp
je
shl
movzx
shl
inc
or
mov
mov
shr
movzx
imul
cmp
jae
mov
mov
sub
mov
sar
cmp
lea
mov
je
jmp
sub
sub
mov
lea
shr
sub
cmp
mov
je
cmp
jle
jmp
cmp
jg
lea
mov
add
cmp
ja
cmp
je
shl
movzx
shl
inc
or
mov
mov
shr
movzx
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
jmp
sub
sub
mov
lea
shr
sub
mov
jmp
mov
mov
mov
mov
mov
inc
cmp
mov
jg
mov
jmp
cmp
jg
sub
jmp
sub
jmp
mov
sub
mov
sub
mov
shr
sub
cmp
mov
mov
lea
mov
ja
cmp
je
movzx
shl
shl
inc
or
mov
mov
shr
mov
movzx
imul
cmp
jae
mov
mov
sub
mov
sar
mov
lea
mov
mov
mov
mov
mov
mov
mov
xor
cmp
setg
add
lea
mov
jmp
mov
sub
sub
mov
shr
mov
sub
cmp
mov
ja
cmp
je
movzx
shl
shl
inc
or
mov
mov
shr
mov
movzx
imul
cmp
jae
mov
mov
sub
mov
mov
sar
lea
mov
mov
mov
mov
shl
add
cmp
lea
ja
cmp
je
movzx
shl
shl
inc
or
mov
mov
shr
movzx
imul
cmp
jae
sub
sar
mov
mov
cmp
lea
mov
je
xor
cmp
mov
mov
setg
lea
mov
mov
sub
mov
mov
mov
inc
mov
jmp
sub
sub
mov
shr
sub
mov
jmp
mov
sub
shr
mov
sub
sub
cmp
mov
ja
cmp
je
movzx
shl
shl
inc
or
mov
mov
shr
mov
movzx
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
mov
jmp
mov
sub
sub
mov
shr
sub
mov
cmp
mov
ja
cmp
je
movzx
shl
shl
inc
or
mov
mov
shr
mov
movzx
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
mov
jmp
mov
sub
sub
mov
shr
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
cmp
mov
setg
add
lea
mov
cmp
ja
cmp
je
movzx
shl
shl
inc
or
mov
mov
shr
movzx
imul
cmp
jae
mov
mov
sub
shl
sar
mov
lea
mov
mov
lea
mov
jmp
sub
sub
mov
shr
sub
cmp
mov
ja
cmp
je
movzx
shl
shl
inc
or
mov
mov
shr
movzx
imul
cmp
jae
mov
mov
sub
shl
sar
mov
lea
mov
mov
lea
mov
mov
jmp
sub
sub
mov
mov
shr
mov
sub
mov
mov
add
mov
mov
mov
mov
lea
mov
add
cmp
ja
cmp
je
shl
movzx
shl
inc
or
mov
mov
shr
movzx
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
mov
lea
mov
dec
mov
jne
mov
mov
shl
sub
add
cmp
mov
jg
add
cmp
mov
jle
mov
mov
shl
mov
lea
mov
mov
lea
mov
add
cmp
ja
cmp
je
shl
movzx
shl
inc
or
mov
mov
shr
movzx
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
lea
mov
mov
dec
mov
jne
lea
cmp
mov
jle
mov
mov
sar
and
lea
or
cmp
mov
jg
mov
shl
add
mov
lea
sub
add
mov
jmp
lea
cmp
ja
cmp
je
shl
movzx
shl
inc
or
shr
add
cmp
jb
sub
or
dec
jne
mov
shl
mov
add
mov
mov
mov
mov
mov
add
mov
add
cmp
ja
cmp
je
shl
movzx
shl
inc
or
mov
mov
shr
movzx
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
mov
mov
mov
inc
or
mov
shl
dec
mov
jne
mov
inc
mov
je
mov
mov
add
cmp
ja
mov
mov
sub
add
lea
mov
inc
mov
mov
inc
inc
dec
je
mov
cmp
jb
jmp
mov
cmp
jb
cmp
ja
cmp
mov
je
jmp
mov
jmp
inc
sub
xor
mov
mov
mov
mov
mov
add
pop
pop
pop
pop
add
add
xor
lea
mov
push
cmp
jne
mov
xor
pop
mov
mov
mov
inc
sub
cmp
ja
cmp
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
jns
movzx
inc
push
inc
mov
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
and
and
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
