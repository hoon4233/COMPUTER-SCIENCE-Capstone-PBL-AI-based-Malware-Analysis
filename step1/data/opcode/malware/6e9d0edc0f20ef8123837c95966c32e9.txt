xchg
pcmpgtd
push
xchg
jo
xor
bound
mov
inc
or
data16
or
je
or
data16
add
data16
add
pushw
add
data16
xchg
pcmpgtd
bound
data16
or
xchg
xchg
push
data16
mov
pcmpgtd
xchg
pcmpgtd
inc
push
mov
pcmpgtd
jbe
data16
loope
adc
pushw
or
or
addr16
aaa
mov
pcmpgtd
add
data16
add
pop
dec
push
test
data16
xor
push
retw
data16
adc
xchg
pcmpgtd
ins
push
in
out
push
inc
xchg
pcmpgtd
fisttp
data16
imul
scas
lahf
or
add
add
add
add
add
add
ja
add
add
add
add
aas
add
add
out
jnp
add
and
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
add
push
call
add
add
add
xor
add
inc
add
add
add
add
popa
out
outs
fnstcw
repnz
add
add
add
push
jb
bound
outs
jb
popa
outs
add
add
add
inc
add
add
add
inc
add
add
add
add
add
add
add
add
inc
add
add
add
inc
add
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
add
pop
inc
add
inc
add
add
in
inc
add
adc
(bad)
dec
add
add
mov
add
add
push
add
add
cmp
sar
test
add
(bad)
pop
add
add
add
ins
sbb
add
add
xor
add
or
or
add
add
add
inc
add
xor
add
(bad)
dec
add
add
add
add
add
add
add
add
adc
test
inc
add
inc
add
add
test
add
mov
add
mov
add
push
outs
je
popa
ins
ins
gs
gs
jb
ins
add
push
jb
bound
outs
jb
popa
outs
add
add
add
push
add
add
(bad)
inc
add
add
inc
add
add
add
xchg
add
add
add
add
add
add
add
add
add
add
add
add
add
inc
add
add
add
add
add
add
inc
add
add
add
xchg
add
add
add
pop
add
add
jl
inc
add
(bad)
(bad)
inc
add
add
add
add
not
add
(bad)
(bad)
jmp
add
pop
adc
add
adc
sbb
inc
add
adc
adc
sub
jmp
add
add
add
add
inc
add
add
add
jne
add
jl
add
nop
inc
add
adc
add
add
test
inc
add
add
add
inc
add
(bad)
(bad)
inc
add
add
add
(bad)
pop
add
adc
out
or
add
add
add
add
xor
inc
add
add
add
add
add
add
add
add
add
adc
(bad)
(bad)
(bad)
dec
inc
add
sbb
add
add
sbb
inc
add
inc
add
add
add
(bad)
call
add
and
inc
add
add
add
sbb
push
add
add
add
add
inc
add
add
push
jne
jp
add
inc
outs
popa
addr16
outs
add
bound
outs
jb
popa
outs
add
dec
dec
es
sub
add
fistp
mov
int
xchg
lock
cmp
sar
test
pop
out
mov
jmp
stos
loop
cmp
xor
or
stos
add
xchg
inc
outs
jb
add
add
cs
push
add
xor
inc
cmp
outs
addr16
ins
and
ins
gs
sub
sub
arpl
jae
data16
push
imul
je
imul
pop
push
inc
ss
dec
inc
add
add
xchg
sbb
add
add
push
add
add
add
add
inc
add
add
loop
add
inc
add
cmp
push
add
xor
and
push
add
xor
add
add
sbb
inc
add
sbb
add
add
jns
lods
xor
or
stos
add
xchg
push
add
add
outs
add
jb
imul
popa
add
add
add
push
inc
inc
ss
dec
dec
add
add
pop
pop
jbe
popa
inc
jb
gs
popa
jb
imul
pop
pop
jbe
popa
push
cmp
jb
add
jbe
popa
dec
outs
inc
jae
jb
add
add
jbe
popa
push
je
dec
outs
jbe
add
add
pop
pop
jbe
popa
inc
jb
gs
bound
add
add
jbe
popa
inc
jb
gs
je
add
add
pop
pop
jbe
popa
dec
jb
jae
ins
je
push
bound
add
add
jbe
popa
dec
gs
add
add
sbb
adc
bound
je
inc
ins
jo
pop
pop
jbe
popa
inc
jb
gs
popa
jb
add
add
jbe
popa
inc
popa
je
push
popa
jb
add
add
add
add
outs
outs
popaw
arpl
xor
fs
ins
add
or
add
push
outs
imul
xor
add
add
inc
add
inc
add
add
test
add
add
add
mov
or
je
jmp
push
mov
call
jmp
add
add
add
add
imul
ins
add
add
add
add
jne
inc
outs
outs
je
push
add
xchg
sbb
movs
sbb
add
add
nop
xchg
inc
add
or
je
jmp
push
mov
call
jmp
add
add
inc
push
inc
push
dec
xor
cs
dec
dec
add
add
or
gs
jb
push
outs
push
gs
data16
add
call
sbb
add
add
pushf
xchg
inc
add
or
je
jmp
push
mov
call
jmp
add
add
add
add
imul
push
add
add
popa
jns
outs
push
inc
imul
add
add
add
inc
add
add
test
inc
add
or
je
jmp
push
mov
call
jmp
add
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
inc
add
add
xor
add
pop
pop
jbe
popa
inc
jb
outs
jb
jbe
jb
ins
outs
ja
add
jbe
popa
dec
xor
popa
jb
add
jbe
popa
dec
outs
push
je
inc
add
jbe
popa
inc
jo
xor
add
pop
pop
jbe
popa
push
popa
jb
imul
popa
push
popa
jb
outs
jbe
add
add
pop
pop
jbe
popa
push
gs
jns
je
ins
inc
jb
outs
jb
dec
xor
add
cmp
sar
test
dec
es
sub
add
xor
or
stos
add
xchg
jge
add
js
add
add
add
jp
add
outs
outs
imul
add
add
inc
add
xor
add
add
xor
add
xor
add
add
add
add
add
add
add
add
add
add
add
adc
add
add
clc
das
add
add
popa
mov
aam
aam
aam
aam
aam
aam
aam
aam
aam
aam
aam
aam
aam
aam
aam
aam
aam
aam
aam
aam
aam
aam
aam
aam
aam
aam
aam
aam
aam
aam
aam
aam
aam
aam
aam
aam
aam
aam
aam
aam
aam
aam
aam
aam
aam
aam
aam
aam
aam
aam
aam
aam
aam
aam
aam
aam
aam
aam
aam
aam
aam
aam
aam
aam
aam
aam
aam
aam
aam
aam
aam
aam
aam
aam
aam
aam
aam
aam
aam
aam
aam
aam
aam
aam
aam
aam
aam
aam
aam
aam
aam
aam
aam
aam
aam
aam
aam
aam
aam
aam
aam
aam
aam
aam
aam
aam
aam
aam
aam
aam
aam
aam
aam
aam
aam
mov
mov
mov
fmul
dec
enter
mov
push
std
pop
jnp
outs
or
imul
push
mov
(bad)
fdivp
(bad)
aad
fbstp
adc
inc
adc
daa
pop
add
jne
cli
sahf
hlt
mov
imul
xlat
inc
loopne
jb
stc
cdq
cdq
mov
mov
sub
mov
xchg
xchg
inc
bound
dec
sub
cmps
das
outs
add
push
push
inc
popa
movs
and
add
in
movs
fidiv
jp
cmps
(bad)
dec
rol
les
call
test
jo
inc
inc
nop
xor
or
and
cmps
sbb
jbe
(bad)
mov
or
das
or
push
sbb
fstp
bound
enter
lds
adc
test
sahf
and
iret
mov
stos
mov
fmul
sub
leave
cli
cmp
jg
pop
std
sbb
mov
out
push
mov
(bad)
fdivp
(bad)
aad
fbstp
adc
inc
adc
daa
pop
add
jne
cli
sahf
hlt
scas
ret
inc
or
fnstsw
sub
rcl
or
or
mov
sbb
push
push
jmp
movs
in
das
inc
dec
mov
sub
sbb
gs
(bad)
rcr
push
adc
and
mov
mov
in
(bad)
dec
xor
retf
jmp
fnstsw
test
mov
inc
inc
nop
xor
loopne
xchg
jle
fxch
jae
xor
mov
cmps
sbb
(bad)
mov
or
das
or
clc
daa
fld
bound
(bad)
cld
mov
lds
rcl
xchg
loope
popf
xchg
setle
iret
mov
jmp
dec
aaa
jo
leave
xor
push
std
dec
lock
cmp
lods
fidivr
push
add
adc
sub
mov
out
jb
(bad)
icebp
push
dec
sti
and
std
out
shl
ret
add
inc
inc
push
loop
retf
pop
mov
ret
pop
daa
jge
lods
enter
push
loop
or
and
call
jno
scas
dec
push
cdq
jne
jbe
int
and
sbb
fidiv
ret
push
xchg
es
pop
in
mov
push
shl
xlat
sbb
xchg
(bad)
ss
xor
mov
sub
std
in
push
push
shl
ret
push
stos
xor
(bad)
jmp
jle
cmp
movs
xor
nop
div
jp
and
retf
(bad)
dec
mov
stos
mov
fadd
lods
and
xor
imul
in
(bad)
addr16
mov
jb
lods
sub
jp
fstp
int
sub
mov
std
sti
mov
clc
daa
cmps
mov
mov
ror
pop
add
sbb
imul
ror
data16
push
in
sbb
mov
pop
cdq
fadd
retf
xchg
push
out
adc
pop
je
sbb
leave
jne
jbe
int
and
sbb
fcmove
icebp
mov
sub
mov
inc
push
dec
mov
ret
(bad)
sbb
xor
jecxz
(bad)
mov
pop
hlt
mov
or
fwait
pop
ret
jmp
shl
lds
adc
mov
popf
lahf
fist
and
cwde
enter
rcr
cmp
mov
cmp
js
fwait
and
mov
mov
mov
or
jne
lods
fadd
aam
es
add
jns
scas
adc
out
and
jne
push
mov
icebp
mov
mov
iret
fidivr
das
aas
push
push
imul
in
or
mov
sub
pop
fistp
shl
arpl
cmp
popf
mov
leave
jne
call
and
fdiv
cmp
ins
push
mov
sar
cmp
mov
adc
(bad)
int3
int3
pop
leave
popa
jmp
lods
(bad)
and
mov
sbb
or
lods
nop
mov
(bad)
popf
inc
enter
mov
jne
out
imul
adc
mov
repnz
fmul
inc
dec
enter
pop
les
std
dec
lock
in
iret
or
dec
inc
xchg
(bad)
es
scas
and
and
sahf
mov
add
mov
mul
cmps
sub
add
mov
xchg
mov
cmp
int3
loope
xor
sub
push
cmp
movs
loopne
xor
pop
xchg
xchg
jns
retf
xchg
and
cmp
inc
xchg
push
movs
push
pop
neg
cli
cdq
stos
test
stos
test
cmp
xor
mov
mov
repz
(bad)
jle
cli
xchg
push
es
mov
and
or
inc
(bad)
rcl
in
mov
add
out
mov
xor
mov
bound
call
sub
push
pop
adc
mov
fldcw
cmp
mov
jl
enter
mov
test
mov
ins
ds
retf
cld
(bad)
nop
push
mov
adc
dec
xchg
(bad)
mov
fcmove
mov
aad
cli
jne
std
retf
xchg
dec
mov
loope
cmps
mov
ins
dec
mov
repz
sbb
in
dec
dec
jae
add
fdivr
push
and
mov
mov
and
int3
adc
ds
dec
mov
lds
inc
jge
mov
retf
loopne
adc
mov
jo
inc
pop
pop
pusha
mov
pop
inc
cmc
or
test
xor
mov
(bad)
or
push
sbb
adc
clc
imul
or
jge
adc
cld
les
lods
lds
inc
sahf
sbb
and
ins
pop
div
dec
fisub
stc
out
daa
sbb
scas
aaa
iret
jo
retf
jo
or
sar
test
or
adc
in
gs
lods
fmul
repz
shr
push
int
push
(bad)
pop
jns
or
mov
loopne
es
(bad)
adc
pop
int
rcr
or
not
iret
push
push
push
fs
rcr
pop
pop
mov
mov
aam
jo
ja
retf
cs
push
pop
push
adc
loop
ret
cli
push
in
lods
push
and
mov
cmp
jmp
repnz
mov
inc
nop
idiv
imul
lahf
(bad)
fisttp
(bad)
jnp
and
xchg
jno
xor
pop
(bad)
cmc
or
dec
or
clc
jb
outs
nop
popa
mov
dec
jbe
mov
mov
retf
sub
in
jecxz
push
fidiv
aam
pop
repz
not
pop
or
shl
repz
pop
add
jg
xchg
adc
jb
lods
sub
xor
aad
push
fwait
stos
outs
xlat
inc
fs
dec
jno
jne
clc
mov
(bad)
cmp
add
test
shr
and
push
push
movs
imul
jb
das
ficom
dec
jmp
shr
or
fxch
in
aaa
or
(bad)
(bad)
xchg
and
arpl
cmp
movs
push
pop
push
out
fistp
pop
mov
call
int
sbb
pop
mov
push
and
shl
sbb
dec
add
inc
and
push
rcr
push
push
repz
jo
loop
pop
shl
ror
mov
inc
xchg
push
pop
(bad)
xchg
jmp
lds
out
(bad)
ins
xchg
cmps
push
xchg
(bad)
sahf
xor
xor
push
pop
sbb
jae
popf
mov
pop
mov
mov
test
imul
mov
out
(bad)
clc
outs
inc
sub
push
(bad)
aad
stos
jg
shl
out
push
xor
mov
bnd
push
cmp
sar
cmp
std
pop
js
xchg
out
or
pop
xchg
mov
inc
aas
ror
xchg
inc
pop
xchg
call
pop
lea
inc
push
sub
and
adc
das
fs
outs
shr
stos
or
push
pop
fdiv
jp
outs
and
mov
movs
test
scas
aam
js
sbb
retf
(bad)
sub
push
fnstcw
fdiv
pop
inc
sbb
add
mov
jg
xchg
pop
mov
dec
push
jg
mov
jge
lahf
shr
push
cmp
jp
call
adc
mov
adc
retf
mov
outs
je
popf
mov
sar
aas
cwde
xor
xor
in
sbb
cmp
xchg
hlt
or
stos
inc
inc
mov
cmc
adc
pop
and
call
add
jle
mov
jo
scas
cmp
add
adc
(bad)
data16
mov
test
push
mov
xchg
pushf
dec
or
lods
loope
push
push
outs
iret
stos
ins
push
das
inc
dec
(bad)
in
icebp
fcom
outs
xchg
jno
push
push
cdq
into
mov
pop
xchg
mov
fdivr
adc
push
(bad)
xor
arpl
dec
xor
fwait
imul
and
push
aam
test
and
mov
sub
xchg
lea
jae
jbe
shl
fcompp
loopne
push
jo
addr16
out
or
lods
inc
fistp
fbld
hlt
scas
xor
mov
bound
out
mov
das
das
gs
jp
ret
push
dec
fild
imul
dec
and
sbb
dec
ror
add
stos
call
icebp
aad
fisttp
jmp
pop
or
add
jno
ja
retf
inc
jl
and
jno
xchg
fwait
mov
adc
inc
mov
dec
gs
xor
pop
push
pop
out
loop
in
in
inc
dec
jae
add
xchg
jns
dec
sub
out
push
adc
cmps
(bad)
mul
dec
repnz
dec
mov
cdq
stos
sub
inc
retf
fimul
adc
(bad)
imul
daa
dec
and
sub
(bad)
inc
gs
jns
cdq
cmp
adc
cli
int3
loop
repz
outs
fistp
and
arpl
sti
loope
pop
sahf
sub
push
xchg
push
jecxz
and
pop
es
cmc
sahf
jg
jl
rcl
xchg
push
jg
not
je
scas
cwde
repz
add
ret
les
push
mov
in
leave
jle
cmp
shl
and
pop
loope
sbb
int3
(bad)
leave
adc
cld
xchg
adc
mov
arpl
add
xor
xchg
es
test
inc
inc
aas
fadd
in
in
movs
ror
arpl
ins
sbb
sub
ret
stos
stos
pop
xchg
loope
aam
mov
xor
and
mov
xchg
xor
cwde
adc
add
sub
cdq
adc
and
jecxz
fistp
daa
int
repz
dec
pop
cs
call
mov
or
scas
or
scas
xor
and
mov
out
jle
or
jmp
push
mov
or
push
add
add
mov
fnstenv
ret
and
xchg
push
test
repz
push
xlat
fbld
test
pop
aad
mov
in
mov
cli
jno
jle
lea
jg
or
adc
add
jo
jae
cmp
in
adc
xchg
and
(bad)
loop
mov
sti
pop
xchg
sbb
aaa
inc
into
or
aaa
xchg
hlt
outs
push
call
or
xchg
cld
xchg
mov
ss
test
hlt
ds
fcmovb
retf
stos
push
loop
or
inc
aam
stos
mov
mov
jmp
jno
dec
enter
inc
mov
jg
repz
xchg
xor
mov
jae
(bad)
in
mov
add
pop
std
inc
mov
fsubr
jbe
lea
(bad)
xor
pop
cmp
gs
push
inc
imul
leave
ret
int
dec
enter
pop
push
jae
mov
jge
mov
(bad)
xchg
and
les
add
cs
mov
lods
sub
stc
push
dec
cmps
and
clc
sbb
mov
out
xchg
dec
add
ss
add
rcl
or
cmp
int3
adc
push
cmc
xchg
xor
je
movs
mov
test
sub
in
pop
(bad)
retf
and
out
cmc
out
fidiv
push
in
lods
ret
mov
sub
test
and
dec
ss
fs
pusha
adc
jns
fstp
cmps
jo
dec
and
mov
imul
mov
mov
cmc
pushf
or
out
out
or
inc
xchg
add
inc
mov
imul
dec
ds
fwait
adc
push
inc
pop
bound
aam
outs
add
mov
bound
daa
mov
lds
inc
xor
add
pop
(bad)
or
xchg
push
pop
cs
jp
sub
and
out
xchg
das
mov
repnz
mov
xor
xchg
enter
int3
jle
inc
push
dec
mov
fld
dec
push
mov
aam
or
inc
push
push
add
daa
cdq
clc
sub
in
enter
mov
and
outs
sub
push
out
push
test
sub
jno
adc
mov
stos
pop
mul
dec
mov
or
push
aad
ret
test
xlat
cld
add
mov
scas
(bad)
push
(bad)
into
lock
retf
xor
fldcw
popf
dec
lea
popa
outs
mov
adc
mov
pop
push
mov
loopne
dec
shl
shl
xchg
xchg
sbb
in
imul
cmps
lahf
add
ret
xchg
xor
cmps
lea
mov
mov
jo
or
(bad)
mov
jle
or
lods
mov
sub
fist
or
add
add
aad
add
sub
push
std
shr
outs
(bad)
jne
loope
xchg
push
cmc
xchg
add
xchg
in
das
xchg
movs
push
lods
ins
cmp
test
(bad)
imul
jbe
adc
fs
xchg
int3
add
xor
sub
icebp
cdq
stos
pop
pop
and
add
(bad)
(bad)
call
into
inc
adc
jle
popf
arpl
scas
retf
jg
mov
mov
jb
xor
xor
add
mov
pusha
rol
adc
leave
rcl
cs
retf
jne
or
loope
xlat
pop
jbe
shr
sub
out
mov
and
fistp
sub
xor
push
std
dec
lock
cmp
mov
out
jae
pop
sti
pop
nop
(bad)
lahf
icebp
jge
pop
fild
das
aam
dec
push
stos
pop
cli
jno
imul
sub
mov
loopne
cmp
sub
mov
in
add
movs
imul
jl
xor
mov
gs
daa
add
rol
xchg
jge
stos
(bad)
push
je
xchg
loopne
jb
cmp
inc
pop
and
aaa
jp
retf
imul
push
retf
dec
(bad)
jo
sub
or
pop
inc
hlt
mov
mov
cmps
(bad)
cmp
mov
jl
push
pop
push
fld
mov
es
repz
ret
push
mov
jnp
mov
dec
gs
xor
ins
popf
mov
in
xor
inc
fisubr
cdq
ja
popf
mov
sti
fwait
outs
jle
dec
out
push
mov
mov
fwait
(bad)
mov
adc
pop
add
sahf
push
cli
sahf
jg
call
imul
jecxz
fwait
xor
rcr
adc
sub
popa
sti
add
ss
lods
pop
loopne
inc
dec
out
arpl
enter
jns
sar
mov
jg
pop
call
mov
sub
(bad)
jb
inc
data16
in
pop
cmps
mov
aaa
add
adc
or
inc
jne
sub
xor
repnz
jle
mov
push
les
cs
xor
ret
cmp
add
push
addr16
clc
dec
(bad)
leave
sbb
xor
lahf
add
mov
out
pop
test
js
clc
loope
mov
inc
rcr
mov
out
dec
mov
xchg
and
fdiv
push
push
xchg
sbb
mov
test
inc
test
fdivrp
mov
jns
sub
mov
xor
push
sub
jae
cld
movs
add
sub
scas
cmp
outs
loopne
fwait
ja
cmp
data16
cmc
xchg
daa
mov
ficom
sub
pop
sbb
shr
pop
loop
(bad)
in
loopne
pop
fistp
(bad)
test
ficom
add
pop
fcmovnbe
sub
add
jg
cli
cdq
lods
mov
in
in
fwait
daa
retf
imul
and
lods
lahf
cli
mov
push
or
(bad)
cwde
or
jae
rol
inc
sbb
test
cmc
jbe
(bad)
lock
or
pop
xchg
xor
or
cmp
dec
and
movs
sub
cmc
hlt
lods
lds
lahf
adc
push
inc
(bad)
out
fcmovnbe
sub
mov
bound
daa
lds
or
nop
mov
cli
jnp
fs
cld
jae
pop
mov
pusha
and
(bad)
aad
fbstp
out
sbb
pop
add
pop
mov
sahf
jns
cmp
gs
ins
jne
push
movs
popf
inc
imul
ret
push
jmp
loope
mov
loopne
and
(bad)
outs
push
hlt
ja
shl
loop
push
pop
fiadd
mov
mov
gs
ins
pop
mov
add
jp
cs
stos
fidivr
(bad)
and
push
(bad)
mov
scas
outs
pop
fadd
das
jbe
sbb
fldcw
cmc
jbe
jo
jg
dec
adc
call
jno
jecxz
pop
ror
xchg
lea
jge
push
aad
setle
xor
pop
or
mov
pop
jno
and
into
(bad)
xchg
and
clc
adc
sbb
repz
nop
stc
in
or
mov
scas
and
xlat
cmps
xor
mov
sub
popf
mov
popa
or
mov
add
sbb
xchg
cmp
mov
in
sub
xor
sub
icebp
stos
shr
sbb
(bad)
or
cdq
iret
shr
or
push
xchg
das
mov
stos
out
fistp
mov
data16
pop
imul
sbb
test
cmp
movs
xor
fnstenv
jg
dec
xlat
std
clc
fdiv
jno
enter
js
push
rol
pop
cmc
int3
sbb
call
(bad)
ins
xor
adc
outs
jge
mov
sar
pop
push
cmp
and
cmps
pop
xor
sub
mov
mov
pop
sub
ins
lods
pop
shl
xor
lods
jecxz
dec
xor
push
fwait
loop
call
adc
scas
and
cdq
iretw
mov
sti
cmp
call
mov
sub
call
mov
and
iret
mov
push
lods
dec
movs
pop
inc
shl
stos
leave
pop
adc
jne
sub
loop
mov
into
dec
test
das
movs
dec
mov
std
shl
movs
cmp
jnp
push
ficom
in
dec
xchg
mov
xor
pop
xchg
cmp
inc
inc
enter
mov
jmp
sbb
retf
mov
fist
cli
out
jb
xchg
push
sar
push
jno
imul
bound
retf
out
cmp
xlat
sbb
xchg
repnz
sub
mov
mov
test
dec
inc
js
mov
sub
mov
add
mov
call
xchg
sub
in
and
dec
inc
lds
pop
mov
xchg
ffree
pop
xchg
in
shl
pop
loop
push
or
xor
or
adc
add
jecxz
sub
cmp
xchg
popa
sub
cmc
xchg
fwait
stos
and
xchg
ins
adc
dec
movs
jb
cmps
jp
cli
ins
pop
int3
mov
movs
adc
xchg
and
and
push
pop
pusha
mov
push
mov
inc
jno
cmp
xor
(bad)
aad
repz
pop
mov
add
ret
mov
lea
neg
jecxz
daa
ror
daa
retf
fdivr
xchg
jnp
in
imul
jb
js
gs
dec
test
mov
xchg
lods
dec
cmps
jbe
(bad)
mov
leave
mov
enter
ja
scas
test
dec
std
inc
psraw
mov
pop
mov
sbb
push
pop
pop
pop
fwait
dec
lds
jae
ja
(bad)
test
inc
fdivr
sub
add
sbb
jno
test
or
sub
pop
jmp
mov
stos
bswap
int
outs
inc
cmps
scas
pop
adc
adc
data16
gs
fwait
xchg
sub
xor
jp
jg
bound
sub
jnp
jo
and
xor
out
mov
out
jmp
xor
dec
out
push
push
imul
xchg
xor
mov
pop
loop
pusha
lods
outs
push
xor
sahf
xor
(bad)
jge
mov
xor
mov
cmp
retf
test
add
mov
sub
fwait
dec
mov
stos
mov
cwde
enter
sar
push
add
cmp
or
push
repz
push
ins
jp
mov
jne
fild
cld
pop
sbb
sbb
and
cmc
add
(bad)
lock
movs
or
or
adc
xor
adc
aad
sub
popa
std
pop
aam
mov
sbb
je
(bad)
cmp
out
cdq
sbb
mov
mov
push
and
in
push
adc
sub
xor
push
add
mov
movs
aaa
stos
inc
or
lds
jp
jmp
fnstcw
shr
cmps
pushf
rol
imul
mov
iret
push
adc
clc
je
sti
js
sub
pushf
sub
outs
fisub
push
loopne
cmc
jge
mov
test
or
pop
adc
loope
or
jecxz
inc
mov
bound
adc
lahf
cmps
pop
push
out
movs
push
xor
jo
daa
sub
dec
aaa
es
xchg
add
add
stos
sar
(bad)
adc
or
(bad)
fild
mov
sub
aas
imul
daa
push
lds
jle
gs
(bad)
xchg
sahf
lods
test
(bad)
pop
gs
mov
(bad)
mov
push
movs
popf
inc
xchg
(bad)
int3
mov
ret
dec
ret
push
jmp
and
push
sar
enter
dec
sbb
loope
loop
(bad)
in
pop
(bad)
push
adc
and
jmp
dec
pop
and
sub
or
dec
dec
cwde
xor
out
lea
and
jecxz
or
fstp
add
es
mov
cmp
xlat
push
repz
adc
sbb
dec
mov
xor
jge
gs
jbe
mov
or
mov
scas
lods
jl
rcl
daa
or
add
sub
adc
or
aam
(bad)
aad
popa
pushf
cmp
mov
clc
aad
sbb
test
jle
or
inc
gs
mov
add
and
out
sbb
cdq
pop
int
lea
and
push
pop
xor
mov
and
fmul
shl
cwde
xor
fmul
in
push
jmp
jg
sar
and
test
js
sub
rcr
push
adc
sub
mov
inc
cmc
sbb
cmp
xchg
sahf
add
xchg
pusha
int
and
dec
add
sbb
mov
xor
js
sub
mov
mov
jo
push
jo
(bad)
out
fcomp
test
jl
or
in
jecxz
sbb
sar
and
outs
adc
jo
and
dec
sub
das
dec
lahf
jmp
(bad)
leave
cmp
sbb
das
out
sub
hlt
js
mov
enter
aas
mov
and
fild
cmps
sub
out
mov
fidivr
stos
and
(bad)
mov
add
xchg
outs
fnsave
xchg
fmul
cmp
sbb
inc
js
xor
jp
mov
push
aad
dec
inc
sub
jb
ret
jmp
or
gs
push
cmp
test
test
rol
retf
xor
mov
pop
mov
dec
cli
dec
xor
fs
mov
push
sbb
mov
mov
pop
and
lods
(bad)
sahf
test
cmp
push
sbb
scas
cmp
ja
lds
push
push
bound
dec
data16
xchg
xchg
iret
pop
dec
lea
lods
adc
pop
xchg
aaa
jo
sbb
xor
add
pop
call
call
(bad)
fimul
mov
data16
iret
push
shld
add
mov
xor
sahf
hlt
scas
sub
sub
adc
loop
mov
or
iret
pop
mov
cdq
xor
xor
jp
dec
daa
cdq
adc
ss
(bad)
sbb
xor
sub
xchg
mul
(bad)
loopne
es
cmp
idiv
sbb
jno
adc
and
pop
stos
cmp
or
or
call
xchg
es
pop
jmp
xor
xor
(bad)
jmp
rol
pop
out
adc
mov
sbb
push
movs
data16
ja
sbb
pushf
mov
jl
or
in
pop
jl
pop
jmp
lods
cmp
popa
xchg
in
jecxz
push
fidiv
ret
cdq
inc
dec
test
inc
fwait
or
mov
test
sub
push
xchg
jp
add
dec
call
les
or
std
(bad)
mov
adc
cwde
or
add
ret
sti
(bad)
clc
pop
mov
adc
test
loope
inc
cmc
jo
adc
jmp
icebp
adc
pop
xchg
in
jg
cmp
dec
adc
fistp
(bad)
test
push
lods
push
jmp
sbb
fs
pusha
push
dec
repnz
std
test
addr16
add
aad
cs
lods
xor
sti
sti
scas
cmp
sub
rol
jno
or
push
mov
mov
pop
add
test
push
or
dec
icebp
(bad)
jno
inc
in
mov
push
neg
xchg
scas
rcr
mov
ss
(bad)
jecxz
mov
retf
cdq
dec
repnz
pop
or
mov
push
pop
pop
ficom
pop
div
jb
scas
push
lods
test
les
test
pop
mov
rcr
jne
enter
loop
pop
add
mov
cli
leave
cmps
cli
dec
scas
push
xchg
pop
adc
std
or
dec
ds
or
or
int
xchg
fs
pop
cmp
pop
pop
sar
iret
or
cmps
push
inc
imul
cwde
test
xor
mov
cdq
pop
test
rol
leave
or
sub
jmp
fwait
jmp
sub
outs
or
movs
mov
or
es
test
lods
pop
data16
gs
(bad)
sub
or
mov
daa
icebp
cmp
scas
(bad)
popf
cmp
stc
hlt
lods
into
mov
dec
loope
ds
jne
push
test
(bad)
(bad)
mov
pop
in
pusha
sbb
sar
ss
rcl
imul
out
nop
fcom
nop
mov
call
call
mov
jmp
inc
jmp
cwde
inc
sub
or
loope
xor
in
cmp
push
push
pusha
int3
jmp
cmps
gs
xchg
jg
xchg
fsub
loop
movs
rcr
out
fs
ds
xchg
jns
xor
in
add
push
mul
ins
jp
retf
imul
jmp
pop
lds
mov
imul
bound
push
pop
add
dec
int3
sbb
int3
pop
popf
pop
scas
lods
(bad)
mov
add
fldenv
cdq
jo
lds
push
cmp
xchg
jmp
sub
shl
add
jae
xor
and
dec
icebp
cmp
mov
test
imul
gs
add
cmp
(bad)
sub
fcmovne
test
fldenv
sub
cli
sahf
iret
cli
aaa
dec
lea
sub
stos
gs
mov
jmp
ins
int3
mov
jp
sub
inc
dec
(bad)
adc
ins
pop
rcr
aas
mov
push
xchg
ret
sti
adc
sbb
stc
sbb
add
and
popa
sub
mov
xor
mov
cmp
clc
sub
xlat
outs
inc
jae
sbb
xor
mov
cmp
pop
cmc
push
sub
outs
out
stos
xor
test
xor
add
mov
sbb
pop
neg
or
aas
dec
loope
push
xchg
lock
retf
push
add
pop
mov
and
add
add
sub
mov
or
mul
js
mov
jp
adc
fsin
ins
call
sbb
ficomp
pop
dec
jns
int3
(bad)
inc
repz
popf
cmp
cdq
cs
test
and
cmc
sbb
add
cld
ret
add
loop
push
repz
xlat
loope
loopne
sub
fadd
adc
lds
push
in
popf
mov
imul
xchg
jp
cli
test
mov
xchg
inc
xchg
in
mov
cmc
sti
icebp
jmp
sbb
mov
fisttp
shl
cmc
fcmovbe
inc
and
mov
push
aas
pop
nop
icebp
repnz
or
cmp
push
cmc
in
or
ret
arpl
ins
aad
and
xchg
ret
push
push
sahf
outs
cmp
mov
out
xchg
cli
jbe
popf
in
ret
add
mov
mov
xor
lods
pushf
inc
bound
mov
test
jne
jne
jp
mov
adc
push
js
lea
jmp
outs
cmp
pop
dec
sub
js
inc
fisubr
in
and
sbb
pop
(bad)
xchg
pop
call
xlat
popa
mov
pop
popa
push
and
mov
cmps
xor
mov
sub
jbe
pop
pop
test
cmp
jp
fdivr
test
bnd
fs
mov
cmp
xchg
std
adc
xor
sbb
dec
xchg
jb
jg
mov
and
push
jge
and
mov
(bad)
mov
sub
mov
jae
enter
pop
xchg
adc
aaa
and
cwde
or
inc
jnp
rol
jl
or
push
in
pop
ins
dec
jg
mov
sti
jnp
div
nop
out
test
cmps
into
out
das
pusha
test
mov
adc
add
test
mov
jmp
fmul
ret
dec
pop
fwait
mov
inc
jg
lock
movs
sbb
aaa
rcr
jns
shl
xchg
test
mov
pop
dec
fs
aaa
or
adc
mov
pop
and
push
mov
rcl
les
inc
sub
shl
adc
dec
das
add
jg
xor
pop
mov
shl
sbb
je
rcl
call
test
enter
jb
dec
movs
push
and
mov
xchg
inc
mov
repz
mov
jl
sub
fs
mov
les
fs
movs
push
hlt
dec
shr
mov
outs
jns
cdq
ja
and
mov
sub
cmp
clc
mov
lock
pop
repz
(bad)
xor
test
repnz
xchg
sbb
mov
ss
dec
or
push
loope
or
fdivp
mov
jo
sub
mov
push
fs
enter
ins
stos
inc
dec
iret
inc
inc
retf
aas
adc
push
sbb
mov
rcl
call
push
fsubr
add
mov
xchg
aaa
mov
xchg
push
mov
cmp
aaa
push
int
jg
retf
jmp
jmp
nop
icebp
repnz
jne
xchg
inc
mov
inc
inc
or
fisubr
pop
int3
adc
pop
ja
adc
inc
sbb
idiv
or
mov
aam
stos
outs
enter
imul
mov
lds
mov
cli
adc
(bad)
and
rcr
xlat
xchg
adc
ds
mov
jo
or
stos
push
pop
xchg
div
adc
dec
dec
loopne
mov
mov
pop
jecxz
push
in
out
adc
fstp
imul
cmc
das
and
aad
outs
ds
adc
scas
cmps
or
dec
scas
pop
stc
xchg
nop
out
pop
mov
rcr
ss
out
sub
scas
cmp
or
arpl
jmp
or
int
ds
xor
sti
loopne
sbb
push
mov
aad
and
or
rcl
(bad)
inc
mov
ret
push
and
shl
pusha
jb
lods
cmps
retf
test
call
div
add
in
pusha
jne
push
fdivr
addr16
in
fild
gs
lods
sub
push
repz
push
stc
imul
add
inc
mov
(bad)
push
enter
push
lods
ds
cli
push
fmul
cmp
xchg
dec
loop
mov
sub
dec
jecxz
jp
out
out
add
(bad)
outs
loop
and
leave
jmp
jp
in
sub
inc
pop
in
enter
das
(bad)
mov
or
xchg
mov
fwait
dec
fs
(bad)
cli
mov
jg
mov
dec
xchg
pop
ds
ficomp
mov
pop
loop
push
jge
mov
xchg
std
sbb
add
fldenv
sbb
aas
icebp
add
ret
retf
push
lods
jecxz
into
pop
and
or
test
mov
int3
jmp
lahf
pop
(bad)
(bad)
adc
test
jl
loop
jecxz
pop
pop
repnz
push
(bad)
xor
test
repnz
xchg
sbb
mov
dec
aas
mov
clc
aas
cmc
mov
jecxz
stc
es
sub
inc
fisubr
in
xor
sbb
jae
xchg
sbb
(bad)
sbb
pop
sar
sti
sub
pop
and
and
stos
out
fistp
movs
xor
dec
scas
nop
sub
(bad)
out
cli
mov
enter
push
out
and
sbb
jne
test
sbb
es
mov
(bad)
nop
mov
scas
ror
push
les
mov
idiv
js
sbb
ss
arpl
aas
ret
in
retf
cmp
imul
push
push
mul
ror
je
and
dec
mov
dec
enter
ja
scas
fnstcw
popf
sbb
sbb
div
adc
mov
stos
xchg
mov
jae
not
fcomip
pop
and
ins
xchg
push
cmp
cmp
cmc
xchg
dec
cmc
sbb
aas
push
push
push
icebp
leave
adc
and
mov
gs
pop
enter
call
mov
jns
jecxz
push
retf
cli
out
push
xchg
test
stc
imul
out
jmp
inc
sub
mov
repz
mov
int3
bnd
mov
mov
je
xchg
cli
mov
mov
in
and
push
mov
adc
adc
cld
push
jnp
movs
fcomip
cmp
(bad)
mov
mov
add
imul
inc
mov
cmp
push
or
mov
mov
imul
repnz
fsubr
loop
repz
push
xor
mov
loope
xchg
fstp
mov
int3
(bad)
leave
adc
push
cmp
or
aad
or
mov
sub
icebp
pop
inc
into
sub
movs
xchg
repnz
(bad)
fstp
inc
jge
movs
pop
pop
xor
mov
push
fist
xchg
xor
push
retf
cli
push
sbb
div
xchg
dec
jo
sbb
pushf
jns
popf
in
push
sti
cmp
mov
shr
enter
mov
mov
jbe
pop
int
repz
xchg
mov
leave
push
and
adc
xor
xchg
jne
fwait
adc
je
(bad)
dec
and
push
push
jmp
pop
cld
pop
imul
rol
mov
dec
push
pop
and
retf
push
int
int
popf
jg
sbb
gs
adc
sub
out
jne
fld
jmp
fcomp
jmp
mov
scas
(bad)
(bad)
jmp
jmp
add
fild
adc
(bad)
jb
xor
sbb
aas
cmp
int
ret
xchg
enter
outs
adc
or
cdq
shr
rep
test
in
pop
sti
fadd
popa
(bad)
sub
mov
cmc
mov
add
cs
push
mov
jecxz
xchg
or
sbb
xor
pop
(bad)
hlt
jae
add
sbb
test
mov
in
scas
sbb
pop
ret
jge
jl
add
sub
push
inc
imul
mov
(bad)
pop
push
or
fadd
clc
cmps
dec
(bad)
mov
leave
addr16
pop
mov
adc
push
and
mov
repz
cmp
cdq
mov
inc
test
inc
mov
nop
retf
or
lea
push
push
popa
fild
out
mov
jl
inc
lods
sbb
mov
mov
mov
pop
rcl
scas
and
mov
ds
xchg
call
fcomp
push
ins
jno
xor
push
icebp
and
dec
daa
cmp
shl
jo
push
mov
mov
jg
xchg
fiadd
es
mov
mov
mov
bound
xor
sbb
pop
test
clc
daa
fwait
imul
cmp
lods
nop
div
(bad)
bound
inc
loope
adc
or
cmps
dec
or
fmul
pop
leave
xor
in
jg
mov
loopne
jle
sbb
inc
gs
cmp
in
jl
sub
fld
xchg
cmp
add
(bad)
call
fnstsw
sub
jbe
fisttp
cdq
inc
jbe
ret
hlt
cmc
sbb
pop
icebp
out
mov
gs
sbb
pop
adc
mov
pop
js
and
arpl
pop
mov
pushf
inc
test
std
pop
stos
xor
in
add
mov
cwde
xchg
push
aad
aam
pusha
cli
xor
push
data16
jbe
retf
sbb
add
and
hlt
xor
jo
les
xchg
pop
mov
jmp
shr
mov
popf
pop
ret
push
cmp
jns
rol
inc
iret
stos
pop
mov
mov
leave
div
aaa
mov
ss
(bad)
sbb
std
sbb
arpl
or
ficomp
add
jp
mov
adc
mov
or
xchg
xchg
pop
pop
imul
sbb
or
jno
adc
sbb
(bad)
cmp
push
cmp
dec
push
sbb
mov
fstp
daa
push
dec
mov
cmps
adc
stos
cmps
xchg
xchg
imul
and
xchg
xor
stos
mov
mov
in
fcmovb
inc
lods
dec
sub
xor
mov
(bad)
retf
add
lahf
pop
jb
not
and
fcmovnbe
ficom
jge
imul
pop
dec
cdq
std
or
and
fsub
adc
jmp
bound
xor
test
push
out
xor
shl
cmp
dec
or
sbb
(bad)
fldenv
mov
jp
xchg
sub
outs
hlt
xchg
adc
gs
pop
adc
es
(bad)
aad
mov
push
fstp
enter
or
(bad)
int3
adc
dec
sti
xor
jge
fild
test
rcl
mov
ins
sbb
xchg
dec
adc
repz
repnz
sub
outs
adc
ret
cld
sub
xchg
mov
adc
cs
dec
fld
add
add
in
fidiv
cmps
(bad)
dec
leave
xchg
mov
adc
int3
jns
sbb
adc
inc
mov
dec
jg
imul
popf
arpl
and
div
push
sub
clc
mov
ja
mov
fsub
in
lods
cmp
mov
lds
pushw
fidiv
aam
out
or
sbb
push
in
push
repz
ds
xchg
cmp
jae
sub
jecxz
xchg
jmp
call
add
in
scas
mov
cli
pop
ficomp
neg
int3
dec
mov
inc
ins
jle
mov
cmp
xchg
popf
(bad)
or
mov
mov
mov
movs
(bad)
loopne
stos
in
cli
pop
adc
pushf
mov
stos
and
and
imul
jmp
push
and
mov
xchg
xchg
mov
sub
pusha
call
lds
nop
pop
lds
add
ss
sub
pop
lds
imul
inc
or
js
fiadd
add
fist
cmp
or
mov
ins
jl
rcr
sbb
mov
rcr
sbb
repnz
out
dec
pop
pop
(bad)
mov
in
xchg
ret
jg
call
jle
cs
xlat
call
in
push
fistp
ffree
ins
xor
das
pop
out
movs
jle
mov
pushf
inc
lea
or
test
aaa
iret
jle
or
popa
mov
xchg
and
xchg
mov
add
sub
repz
out
enter
in
retf
or
sbb
std
mov
mov
fidiv
lea
int
cmp
mov
imul
imul
push
call
jnp
jle
jns
into
xchg
mov
xor
cpuid
push
(bad)
mov
mov
or
push
retf
icebp
clc
daa
push
(bad)
out
dec
inc
scas
ss
pop
ret
push
cmp
out
lds
pop
cs
xor
out
ret
loope
mov
jne
cmc
js
pushf
mov
jbe
mov
int3
mov
lock
xlat
sahf
xor
sub
mov
(bad)
aad
mov
xlat
adc
mov
iret
add
dec
lds
scas
adc
pop
test
jge
cdq
add
mov
add
mov
jo
sbb
mov
ins
movs
xchg
sub
mov
shr
jno
es
mov
shr
cmps
mov
ds
mov
or
subps
xchg
mov
shr
sbb
push
scas
mov
adc
pop
push
gs
mov
fld
mov
xor
(bad)
dec
loopne
cmc
jbe
retf
or
shl
inc
dec
fwait
adc
xor
jnp
lods
into
mov
xchg
loope
shl
out
jbe
pop
mov
test
dec
pop
or
jo
mov
mov
jnp
test
pop
or
push
mov
in
fwait
(bad)
sub
fild
and
xchg
xor
scas
cmp
sbb
clc
(bad)
in
mov
shl
div
push
push
sbb
mov
cwde
pop
push
push
icebp
sahf
iret
dec
pop
sbb
mov
and
test
int3
inc
sbb
mov
xchg
adc
fisubr
and
mov
mov
mov
fld
std
out
test
pop
(bad)
mov
repnz
sub
test
out
inc
lods
sbb
sbb
mov
jne
lahf
and
ins
and
not
test
mov
imul
xor
dec
inc
ds
adc
pushf
lock
ret
sti
inc
add
sub
pushf
out
ret
adc
mov
and
adc
pop
fiadd
xchg
add
stc
enter
adc
pusha
and
and
gs
out
sbb
pop
std
sti
mov
out
aam
cli
sahf
jmp
pop
test
sub
in
jne
xor
adc
loop
or
xlat
icebp
fcom
das
daa
mov
hlt
addr16
in
outs
loop
cmc
cs
fstp
call
imul
mov
fiadd
addr16
dec
inc
(bad)
ficom
fs
popf
jge
inc
aam
pusha
cli
xor
xlat
mov
and
rcl
retf
cmp
int
mov
arpl
add
mov
test
lea
jae
(bad)
jecxz
adc
outs
cs
cmp
add
ds
inc
sbb
ficomp
mov
sbb
mov
ss
xor
mov
out
jbe
imul
push
mov
jae
test
cmp
sbb
xor
cli
jno
jle
lea
sbb
cmp
div
enter
mov
push
imul
das
test
push
ins
cdq
cmp
and
add
jp
pop
cmps
pop
inc
movs
fsub
enter
in
fadd
fstp
pop
push
syscall
out
push
test
lods
loopne
jne
cmps
stos
fwait
and
into
jp
mov
cmp
cmp
in
and
mov
aad
loopne
pop
xchg
xlat
and
call
icebp
aas
mov
(bad)
in
fisubr
outs
imul
dec
mov
daa
out
(bad)
in
imul
icebp
fdiv
inc
imul
lock
ds
mov
mov
mov
pushf
sbb
fild
ss
test
jle
sar
aad
or
jae
jb
test
jo
xor
jge
aaa
rcl
fldenv
stc
mov
hlt
scas
dec
push
add
sbb
jle
lea
test
pushf
fmul
mov
mov
dec
jmp
shr
or
sahf
mov
dec
loope
imul
xchg
loop
je
and
fstp
add
pop
mov
dec
add
and
dec
add
test
sub
iret
cmp
test
push
jl
dec
stc
cmp
outs
pop
lock
add
imul
test
sub
xor
fild
loope
jmp
retf
cli
cmp
imul
mov
xor
dec
and
(bad)
loope
adc
sahf
ds
lahf
push
pusha
mov
cmps
fs
mov
mov
lods
mov
push
mov
test
cdq
not
jae
jb
mov
jo
fs
scas
and
jp
mov
clc
dec
cld
movs
cli
push
cmp
pop
mov
out
popa
cmp
cli
xchg
pop
ds
jecxz
sti
lds
sbb
xchg
xor
add
inc
xor
add
add
mov
push
fwait
mov
or
imul
es
and
out
fist
xchg
mov
xor
mov
cld
cmps
mov
cmp
pushf
sbb
sub
inc
lods
inc
pop
pop
and
xor
test
movs
mov
jle
jg
push
daa
aaa
mov
int3
xchg
dec
fidiv
rep
sub
dec
adc
inc
xchg
jge
push
adc
pop
adc
or
popf
shl
fldenv
cmp
sbb
mov
pop
ret
ret
pop
sub
sbb
mov
sub
mov
sub
cmp
sbb
gs
lods
mov
test
and
out
or
(bad)
cli
sti
or
adc
jno
or
xlat
mov
and
sub
in
jne
pushf
les
mov
aaa
mov
sbb
pop
cdq
les
cmp
in
fsubr
push
fstp
test
adc
aam
div
adc
and
xchg
scas
pop
bswap
add
adc
cli
cwde
jmp
stc
sub
(bad)
cmp
mov
fmul
(bad)
(bad)
cmps
xor
sbb
mov
lahf
jbe
retf
clc
mov
mov
test
movs
out
adc
push
jg
movs
xchg
movs
mov
fidivr
shl
sub
ds
scas
mov
jae
sub
jecxz
dec
aaa
sti
pop
xchg
ins
bound
jbe
clc
addr16
pop
movs
mov
mov
icebp
jne
xchg
call
and
ins
into
mov
pop
es
aad
hlt
scas
enter
push
enter
aas
fld
iret
fadd
jg
repnz
dec
sub
arpl
fsub
cdq
sbb
ss
sahf
mov
jb
aam
shr
lea
cwde
stos
fdivrp
cmps
pusha
aad
add
mov
pop
vmwrite
retf
dec
push
leave
mov
scas
sbb
xchg
aad
jbe
add
mov
xchg
pop
mov
cmc
jae
jecxz
in
or
(bad)
pop
or
and
(bad)
fnstenv
mov
retf
nop
sub
call
mov
push
(bad)
mov
ret
push
ja
push
mov
test
gs
dec
push
jge
pop
arpl
jbe
adc
xchg
add
or
cli
sti
xchg
mov
add
mov
test
(bad)
jle
or
cmp
push
sub
xchg
pushf
mov
xor
dec
pop
pop
stos
push
movs
aam
inc
nop
in
cwde
jbe
imul
xor
adc
je
push
lods
push
push
lds
mov
test
cmc
test
mov
test
xor
xlat
push
shl
xlat
xor
or
clc
pop
mov
xchg
sbb
push
pop
icebp
ja
lahf
jbe
cli
loop
fstp
idiv
jg
lock
enter
adc
sahf
cmc
popf
shl
icebp
sbb
inc
or
lock
repnz
mov
add
ds
mov
cmp
in
sbb
mov
lds
sti
adc
add
nop
mov
xor
sub
mov
pop
stos
repnz
push
cwde
ss
jecxz
mov
outs
jmp
sub
(bad)
pop
xchg
in
imul
push
jmp
adc
loop
add
lock
jp
or
loope
mov
mov
xor
retf
icebp
cs
fstp
jmp
mov
data16
mov
addr16
dec
popa
cmp
out
and
mov
cli
inc
inc
nop
pop
add
mov
popf
bnd
fxch
jae
fild
jecxz
cld
repz
or
nop
jns
neg
jmp
mov
dec
jb
lds
and
bound
in
(bad)
cli
jae
cld
xchg
out
aad
sub
mov
jae
daa
dec
mov
mov
cmp
int
sbb
cld
xchg
add
nop
mov
inc
out
mov
mov
and
out
xchg
das
mov
leave
cmp
shr
popa
or
pop
test
jle
ja
cmp
jmp
adc
loop
add
out
adc
test
add
jne
pop
shl
adc
pop
adc
outs
icebp
shr
out
adc
and
or
imul
fistp
fild
(bad)
mov
cmps
sub
sbb
push
scas
fnstsw
push
inc
cli
mov
les
xchg
pop
(bad)
or
ret
es
fwait
std
mov
mov
xchg
loop
or
push
cli
loop
movs
jp
test
jg
test
iret
mov
in
jecxz
xor
sub
out
inc
inc
mov
pop
movs
push
in
imul
push
mov
ror
mov
dec
call
dec
lock
push
cli
sbb
leave
outs
popa
repz
jmp
push
mov
test
pop
sbb
and
out
xchg
fbld
mov
sub
mov
mov
dec
push
das
data16
xchg
mov
scas
sub
outs
push
push
data16
pop
rcl
cmps
push
push
in
enter
loopne
mov
pop
fstp
daa
movs
add
imul
ins
pop
and
mov
shl
xor
pop
(bad)
cli
(bad)
cld
jl
dec
js
cmp
xor
mov
cmp
loop
fld
pushf
mov
add
dec
adc
lea
jae
(bad)
inc
and
xchg
fnstenv
add
sbb
and
outs
jnp
push
inc
imul
leave
ret
jnp
dec
imul
sbb
psrld
int
and
adc
ror
repz
or
leave
mov
or
aad
fbstp
adc
dec
pop
outs
add
sub
and
inc
push
out
je
mov
or
sbb
int3
mov
pop
or
aas
test
out
fdiv
pop
rcl
(bad)
imul
cmp
(bad)
ror
jg
call
pop
dec
(bad)
pop
dec
pop
push
js
mov
sub
test
xchg
mov
aad
push
out
push
cld
inc
pop
pop
inc
inc
dec
sbb
adc
ja
mov
and
xchg
xor
dec
int3
mov
repz
sbb
(bad)
adc
test
jmp
in
jecxz
pop
rcl
dec
xor
adc
imul
inc
imul
cmp
mov
add
out
test
inc
fistp
ss
fnsave
mov
mov
iret
ror
mov
ins
inc
lods
sub
(bad)
sbb
and
out
sbb
push
in
or
clc
mov
push
imul
add
(bad)
pushf
jne
and
or
daa
sahf
push
loop
add
out
mov
test
adc
lods
or
sar
aas
xchg
les
addr16
iret
pop
xchg
sub
movs
mov
pop
neg
cli
xor
sbb
adc
int
mov
retf
add
pop
rcr
dec
(bad)
jo
test
push
js
xor
mov
or
mov
cmc
aas
or
inc
mov
jl
(bad)
lods
ss
pop
dec
adc
push
sbb
scas
xor
lds
shr
call
inc
xlat
sub
xchg
dec
or
(bad)
ret
adc
dec
aaa
lahf
jp
inc
xor
invd
jecxz
push
add
mov
mov
fmul
cld
lock
aad
stos
jnp
add
adc
jne
(bad)
xchg
sbb
adc
cdq
ins
arpl
leave
sar
in
out
ins
and
scas
out
dec
jmp
adc
(bad)
into
popf
fstp
cwde
xchg
jns
retf
xchg
jmp
xchg
ds
and
cmp
aaa
sahf
mov
fs
or
stos
mov
shl
push
adc
fdivrp
mov
xor
add
sar
jo
or
push
and
jbe
mov
add
daa
sar
mov
retf
shr
imul
mov
jne
in
imul
jbe
out
gs
iret
retf
mov
ret
cdq
dec
nop
das
dec
aaa
lock
jecxz
xchg
xlat
mov
test
arpl
adc
adc
in
retf
fbld
add
add
add
mov
xor
fcomp
xor
push
test
pop
and
add
xor
pop
sti
and
int3
in
or
xchg
add
int3
rcl
retf
movs
mov
shl
inc
into
sub
aaa
xchg
jns
and
pop
push
pop
cmp
mov
(bad)
mov
fldenv
(bad)
xchg
mov
dec
and
aam
js
xor
std
daa
add
mov
add
pop
int
sbb
mov
pop
int3
mov
jge
sti
(bad)
dec
out
or
pop
ja
neg
hlt
repz
pop
outs
jl
adc
(bad)
cld
xchg
pop
jbe
cli
sub
push
pop
ret
jae
les
jnp
mov
adc
nop
pop
or
out
lods
fs
lods
mov
xchg
push
mov
jns
fstp
add
mov
add
mov
inc
test
loopne
sbb
mov
inc
sbb
adc
xor
fimul
lock
pop
pop
dec
cmps
xchg
pop
adc
xchg
jns
inc
lock
push
and
adc
call
in
dec
jbe
into
cmp
inc
pushf
jns
jecxz
stc
sub
nop
dec
ins
dec
std
mov
sbb
fwait
jnp
popa
es
push
sbb
repz
push
jo
std
pop
(bad)
pop
mov
jmp
mov
adc
xor
dec
fmul
xchg
int
in
imul
dec
sahf
pop
add
pop
mov
pop
daa
inc
sbb
inc
cmp
mov
int
test
jecxz
pop
sbb
sbb
inc
lock
icebp
xchg
sahf
add
inc
nop
or
cli
sti
xchg
jle
jge
sti
arpl
push
test
jns
icebp
dec
das
fimul
or
pop
sahf
push
add
mov
dec
mov
es
mov
mov
push
(bad)
clc
and
sti
push
inc
scas
dec
dec
pop
ds
add
(bad)
fiadd
repz
inc
add
push
pop
jg
hlt
mov
mov
or
inc
and
cmc
mov
xchg
lods
int
out
xor
mov
lods
retf
jge
cli
in
mov
lods
or
pop
(bad)
and
push
je
xchg
jnp
sar
and
cs
push
push
aad
push
sahf
xor
xor
pop
loop
push
jae
pop
mov
shl
int3
(bad)
xchg
xor
test
std
xchg
(bad)
pop
xchg
hlt
or
loope
inc
call
add
cmps
frstor
adc
xor
outs
gs
ins
inc
into
inc
jne
sti
es
scas
enter
xor
sub
aas
cs
enter
out
dec
ins
and
retf
sbb
and
add
inc
pop
pop
addr16
jne
cwde
pop
loop
cmc
ds
fstp
scas
mov
or
in
call
int
sbb
or
and
inc
stos
cmp
pop
inc
inc
(bad)
inc
inc
mov
std
movs
scas
bound
lahf
mov
inc
xchg
sub
mov
ret
sbb
push
or
rcr
neg
je
mov
jle
in
lods
lds
xchg
loope
mov
jnp
addr16
xchg
pop
pop
pop
mov
jae
push
int
shl
mov
xchg
and
(bad)
arpl
jecxz
adc
inc
das
add
dec
aad
and
nop
in
and
clc
pop
out
movs
cli
int
lea
and
push
sbb
hlt
sti
fnstsw
sub
jb
adc
dec
int
pop
and
cmc
sbb
dec
or
lods
xchg
repnz
mov
cmps
mov
adc
shl
loope
or
sbb
pop
and
fistp
sahf
xor
jl
and
test
mov
sbb
and
loopne
enter
jo
shl
test
jno
jp
jae
push
aaa
mov
ds
fisubr
test
xor
in
inc
and
popf
fwait
cmp
lods
js
rcl
pop
push
push
inc
imul
arpl
pop
mov
sub
int
xor
dec
sub
fcomp
in
mov
mov
jcxz
or
stc
inc
das
dec
lods
sub
cmc
call
push
push
repnz
and
inc
mov
inc
add
es
xor
xchg
add
dec
fnstsw
and
outs
icebp
mov
jge
inc
mov
xor
dec
and
mov
test
add
imul
jne
sub
and
das
or
sub
add
and
mov
(bad)
and
cmp
out
and
sub
push
cli
xor
cmp
std
and
cwde
bound
rcr
push
push
repz
jo
push
add
or
inc
fsubr
mov
imul
sub
sub
jmp
xchg
scas
cmps
adc
div
dec
fild
ins
dec
ffreep
(bad)
int
test
popa
cdq
sbb
mov
adc
enter
fbld
pop
add
scas
stos
pop
retf
out
sub
push
add
mov
add
or
sti
test
sub
retf
xchg
sub
ins
int3
mov
ins
push
mov
les
mov
mov
aaa
xchg
les
fcmovne
xchg
stos
sub
xchg
mov
out
fld
jne
pop
fidivr
sbb
sbb
arpl
pop
xchg
lock
sahf
hlt
mov
mov
test
mov
xchg
and
jb
jno
jle
jae
mov
push
sti
movs
or
sti
addr16
dec
adc
jnp
scas
fwait
cdq
jl
fiadd
cmp
mov
jmp
pop
mov
shl
call
jbe
mov
int3
push
mov
shl
mov
xchg
and
jnp
sbb
sbb
and
out
jo
mov
mov
retfw
adc
xchg
in
movs
cli
push
xchg
jle
jge
pop
pusha
or
xchg
int
and
fdivr
cmps
jge
inc
add
aad
or
or
stc
jl
mov
icebp
pop
sbb
cmp
dec
es
pop
jo
(bad)
jns
icebp
xchg
sub
cmp
test
aad
data16
and
mov
shl
and
nop
mov
pushf
in
xor
call
inc
adc
mov
and
push
leave
and
xor
int3
pop
leave
cmp
pop
loop
popf
dec
dec
jmp
sar
mov
push
out
call
cmp
das
(bad)
inc
pop
jbe
aad
gs
in
addr16
cmp
out
cmp
(bad)
cmp
jg
mov
xchg
hlt
or
out
ret
inc
gs
sub
xor
jg
inc
push
lods
xchg
daa
fisttp
clc
add
cmp
dec
pop
push
add
sbb
and
test
ss
adc
int3
mov
fdiv
pop
push
pop
out
and
pop
dec
pushf
mov
in
fsubr
inc
lods
sub
cmps
int3
xchg
test
int3
aaa
mov
adc
sar
push
sub
mov
pop
push
retf
cmp
cwde
mov
std
cmp
xor
or
xor
fs
repz
jne
movs
aaa
lods
jo
lahf
out
(bad)
adc
or
cdq
mov
fsubr
mov
aaa
inc
and
or
mov
mov
jne
out
imul
popa
inc
and
mov
xor
add
shl
(bad)
mov
int
pusha
xor
shl
imul
jge
test
xchg
mov
loope
mov
sti
imul
in
xor
mov
xchg
hlt
cli
dec
scas
mov
and
data16
fs
shr
outs
(bad)
bound
and
sahf
movs
retf
cmp
in
jmp
jp
or
out
mov
mov
shl
adc
call
mov
mov
fmul
lock
and
xchg
mov
pushf
in
xor
shr
dec
lahf
mov
pop
call
hlt
jno
add
es
mov
push
pop
jne
add
dec
adc
imul
pop
fsub
dec
inc
scas
xor
lds
das
fadd
in
add
jecxz
or
jne
lock
inc
cmp
mov
jae
shl
mov
jecxz
cld
aam
add
dec
jns
or
in
leave
shl
push
sub
fdivp
adc
jno
imul
push
push
in
(bad)
cmp
sbb
(bad)
jp
dec
sti
and
data16
jae
ds
mov
pop
sub
dec
or
mov
adc
pop
sbb
pop
adc
mov
fdivr
outs
fimul
mov
movs
push
pop
movs
scas
fistp
sbb
icebp
cmc
test
lea
sbb
xor
mov
and
push
sbb
nop
pop
test
dec
or
and
imul
sbb
pusha
jb
mov
cmps
loop
pushf
ds
(bad)
adc
test
mov
pop
mov
mov
sti
aas
in
imul
addr16
pushw
gs
pop
mov
ret
test
(bad)
mov
and
sbb
sbb
adc
inc
repnz
xchg
(bad)
mov
lods
xchg
push
and
pop
call
cli
cmp
(bad)
loopne
sahf
pushf
les
push
popa
fadd
xlat
in
jne
xchg
and
bound
lahf
icebp
jl
inc
inc
aas
xlat
icebp
sahf
pop
dec
or
repnz
enter
rcr
in
xchg
pusha
or
mul
(bad)
mov
fidiv
mov
cmp
push
fst
loopne
loope
inc
dec
jo
lds
push
mov
std
mov
xor
mov
out
mov
jnp
inc
mov
bound
clc
daa
sbb
adc
cmps
(bad)
popf
shl
adc
xchg
push
xchg
cli
jecxz
mov
ret
mov
add
retf
mov
ret
cdq
dec
nop
das
dec
aaa
lock
out
aaa
out
push
stos
xchg
or
gs
pop
aas
jo
push
add
sti
cs
stc
sti
mov
out
out
add
inc
pop
jo
mov
clc
loopne
sbb
int3
in
pop
push
jl
stos
stc
outs
test
jecxz
add
pop
shr
mov
loop
je
cmp
rcr
jmp
fcmovnbe
sub
add
and
mov
(bad)
mov
into
and
adc
mov
or
dec
outs
cmps
(bad)
xlat
and
rcl
ret
aas
(bad)
and
imul
(bad)
out
lods
sub
or
xor
lock
idiv
jecxz
mov
jo
lods
nop
div
(bad)
jbe
loope
enter
cmp
out
mov
mov
push
add
sar
and
add
test
setl
stc
enter
(bad)
cwde
mov
push
aaa
lahf
in
in
and
push
sbb
hlt
sbb
(bad)
mov
or
or
cmp
shr
mov
push
mov
mov
dec
inc
mov
pop
data16
lods
adc
adc
xchg
cmc
xchg
mov
push
jmp
sub
lock
popa
mov
loop
mov
adc
retf
imul
cmp
or
inc
into
add
mov
jo
mov
mov
jne
or
int3
int3
int3
pop
fcompp
add
mov
or
pop
pop
push
jl
shl
cmp
lea
jae
scas
jecxz
xor
pop
cmp
xchg
sub
ins
push
push
enter
cmp
xor
and
ret
mov
lea
shl
stc
int
pusha
xor
lods
mov
outs
hlt
xchg
push
inc
gs
lods
mov
sub
jecxz
out
sbb
das
std
in
cmc
ds
mov
sbb
jl
test
and
inc
push
sbb
pop
std
fdiv
cmovnp
push
push
push
es
cwde
pushf
cmp
inc
dec
js
inc
xor
add
jp
in
mov
outs
aaa
rcr
int
mul
lahf
sub
sub
sbb
cmp
inc
dec
inc
jns
int3
repnz
fisttp
inc
sbb
les
cmps
repnz
popf
push
clc
into
jmp
rcl
mov
nop
sti
iret
ret
adc
jnp
inc
daa
out
lods
cmp
xchg
ds
jp
push
inc
imul
repz
inc
icebp
dec
fmul
in
aas
dec
mov
xor
cmp
mov
jnp
add
push
xlat
call
or
scas
and
xlat
and
test
lds
ficomp
test
shl
and
inc
push
xor
mov
popf
mov
shr
pop
shl
inc
into
push
adc
xchg
cdq
popa
jmp
sbb
push
fmul
ds
inc
cmp
in
xor
and
cmp
stos
and
or
xor
pop
jns
mov
fucompp
fldenv
daa
div
int3
mov
jo
or
push
out
jl
(bad)
push
aaa
push
pop
iret
cmp
in
jecxz
fist
mov
popf
ds
(bad)
fisub
popa
retf
out
lock
repnz
jo
daa
mov
sbb
mov
pop
aaa
or
jae
hlt
les
mov
mov
mov
in
and
pop
pop
fsub
dec
xor
xchg
movs
mov
sti
fnstsw
add
adc
fmul
pop
pop
movs
mov
sahf
pop
dec
sahf
sbb
mov
rcl
add
add
outs
loop
fs
push
ins
into
test
out
push
lods
int
test
xor
stc
and
sbb
xor
pop
xor
sti
xor
mov
add
stc
div
fs
test
jmp
out
or
sar
shr
imul
xor
inc
xlat
xchg
mov
pop
aas
setle
jmp
test
or
aaa
not
xchg
ss
xor
adc
loopne
mov
cmp
mov
scas
and
popf
sbb
cmps
cli
jno
imul
stos
add
scas
push
aam
cdq
add
test
jne
in
adc
loop
sub
jo
inc
shr
data16
pop
in
pop
pop
dec
mov
test
rcr
cmp
(bad)
test
fstp
sar
xor
int3
retf
cli
ss
sub
mov
mov
xchg
xor
jecxz
xchg
bound
mov
mov
shr
dec
sub
pop
cmc
mov
lods
fisttp
cmc
mov
pop
xchg
leave
or
mov
test
ja
adc
add
rcl
cmp
loope
icebp
ret
pop
mov
(bad)
xor
inc
shl
mov
in
and
lods
enter
mov
cwde
pop
nop
jecxz
dec
adc
xlat
call
adc
mov
or
call
jecxz
popa
and
cli
xor
ret
jmp
pop
movs
clc
cmp
test
loopne
shr
mov
mov
ss
les
and
mov
fist
bound
fldenv
inc
scas
push
inc
jne
imul
aas
cmp
jge
xor
stc
and
pop
push
retf
cmp
popf
mov
std
cmp
xor
or
push
mov
ficom
pop
loop
std
sahf
push
adc
or
hlt
iret
and
sbb
inc
mov
xchg
xlat
add
imul
(bad)
mov
int3
mov
cli
pop
xchg
imul
dec
fmul
lods
dec
fs
mov
sahf
pop
nop
push
fwait
hlt
out
jmp
xchg
(bad)
mov
mov
mov
xor
stos
sbb
xchg
(bad)
or
aam
cdq
xor
bound
mov
sar
cmp
mov
push
sahf
push
cmc
pop
out
dec
or
lods
xor
test
adc
cs
pop
adc
cmc
fwait
iret
push
(bad)
mov
push
js
repnz
push
and
mov
xchg
jae
or
push
pop
fstp
(bad)
frstor
mov
add
mov
in
sub
fldenv
shl
and
mov
dec
cdq
sbb
pop
(bad)
fwait
push
lea
jae
mul
inc
xor
fcmovnbe
xor
or
loope
enter
rcl
sub
or
(bad)
fsub
repnz
aas
cwde
push
jg
(bad)
loope
cmp
repz
pop
mov
adc
jb
lods
sub
lock
cmp
mov
jle
fstp
cli
sti
cmp
mov
sbb
jne
div
pop
cmp
int3
mov
in
pop
cld
adc
xchg
stc
fnstenv
inc
scas
pusha
dec
jmp
fs
test
jns
sub
fidiv
push
and
mov
adc
sbb
or
stos
retf
pop
ds
ret
push
popf
adc
loop
test
shr
xor
idiv
std
mov
push
push
add
bound
aaa
and
fild
sbb
and
or
ins
mov
das
mov
or
fs
sub
xchg
jnp
mov
push
dec
stc
jns
in
imul
dec
sahf
retf
ins
add
pop
imul
imul
pop
movs
iret
fild
add
sub
add
or
xchg
call
jnp
cmps
and
inc
mov
xor
mov
sub
add
mov
jns
and
jmp
or
mov
stos
cmovl
pop
sar
dec
(bad)
clc
fld
xor
addr16
das
movs
scas
mov
mov
xchg
dec
mov
push
xchg
data16
and
or
into
jmp
push
pop
mov
test
repz
into
xchg
xor
or
jae
fmul
mov
ret
inc
js
push
cmc
call
jge
jecxz
rcl
xchg
call
bound
in
jecxz
or
imul
or
add
xlat
push
pop
sub
push
jae
ins
xchg
psrld
pop
lea
or
test
mov
push
ins
inc
lods
aas
sub
in
adc
xor
cmps
sbb
movs
mov
xor
popf
aas
dec
popa
or
mov
add
shr
int
cmp
movs
popf
inc
jae
int3
mov
fimul
fsub
push
inc
dec
mov
test
rcr
pop
enter
xor
shl
sub
push
and
adc
sahf
fs
pop
aad
push
repz
xchg
mov
lods
inc
sub
mov
and
mov
push
and
call
pop
jnp
jecxz
push
xor
xchg
pop
pop
push
test
iret
iret
pop
in
jecxz
sub
in
lds
outs
push
push
inc
loope
popa
inc
and
int3
dec
xor
je
mov
pop
or
and
mov
std
xor
pop
jnp
test
repz
(bad)
mov
jg
xlat
(bad)
sbb
out
push
das
mov
add
pop
mov
fild
dec
cld
or
(bad)
jns
jo
fs
cmp
mov
jecxz
int
jl
add
jle
icebp
sahf
add
sar
dec
(bad)
xlat
shr
xchg
xor
call
add
ss
in
lods
daa
fild
lds
jns
retf
cmp
out
and
and
aam
jo
adc
xor
mov
fwait
ss
and
int
repz
ja
popf
das
cli
into
jmp
shl
jae
test
sbb
dec
fild
adc
adc
imul
pop
arpl
mov
jnp
daa
and
inc
cmp
les
xchg
lahf
and
cmp
adc
sub
adc
add
data16
out
fcomp
pop
inc
cmp
or
cld
stos
inc
or
(bad)
pop
xchg
in
cmp
ja
cs
outs
jge
push
das
adc
loop
jle
and
scas
enter
jp
or
popf
mov
aas
xchg
shl
adc
call
add
sbb
aad
mov
xchg
and
stos
cmp
into
ja
pushf
xor
stc
cwde
int3
pop
push
pop
or
lods
jnp
pop
dec
js
movs
fbld
push
aaa
(bad)
push
(bad)
int3
inc
or
shr
push
jo
mov
fbstp
pop
push
xchg
push
loop
and
xlat
fidivr
leave
bound
in
shr
loope
imul
inc
xlat
cmp
iret
mov
inc
or
add
dec
pop
jl
mov
sub
mov
dec
repz
lods
sub
or
dec
call
jle
or
push
xchg
mov
inc
rol
es
sbb
arpl
jl
inc
inc
clc
adc
adc
movs
in
das
sub
mov
fadd
nop
mov
pop
fstp
das
add
push
(bad)
in
(bad)
adc
ja
movs
cmps
sub
cmp
push
call
aam
and
sahf
clc
outs
pop
cmp
repnz
call
ret
les
ficomp
sbb
push
adc
or
mov
jge
in
dec
and
popf
sbb
mov
pop
or
sahf
pop
in
(bad)
xor
scas
inc
or
nop
or
(bad)
(bad)
cmp
rcr
xchg
(bad)
sub
outs
hlt
inc
push
sbb
inc
mov
lahf
into
ficomp
jbe
scas
and
lods
repz
out
outs
mov
add
shr
in
sahf
or
xor
rol
in
jns
in
dec
int
push
fdivr
xchg
xor
rcl
sbb
pop
mov
mov
clc
ret
mov
mov
push
frstor
das
dec
call
test
data16
and
mov
stos
sub
add
xchg
and
xchg
movs
addr16
dec
xchg
lea
jns
aaa
mov
and
mov
mov
popa
out
ins
jne
lea
jae
mov
mov
xor
xchg
mov
in
imul
popa
inc
and
or
inc
push
jae
lods
inc
adc
cli
enter
out
into
xchg
and
aam
nop
hlt
inc
push
sbb
inc
gs
pop
aas
jle
push
add
pop
adc
(bad)
pusha
call
cmp
add
mov
shl
and
mov
mov
push
cmc
xchg
jns
mov
mov
adc
adc
pop
sar
aaa
xchg
nop
and
call
add
mov
cdq
aaa
rcl
int
push
push
and
xor
out
cwde
or
stc
lods
daa
xor
sub
imul
add
pop
xchg
xor
push
pop
fsubr
loope
sar
(bad)
(bad)
hlt
pop
je
popf
out
mov
clc
dec
nop
sbb
fisub
push
and
push
sub
pop
pop
out
push
stos
mov
sbb
jb
aaa
jo
mov
cmp
jg
sbb
jecxz
mov
out
ins
mov
jnp
jl
and
scas
mov
jmp
lds
ja
lods
ret
inc
pusha
mov
jo
jae
jbe
in
pop
xor
and
push
cmc
cmp
mov
sbb
pop
imul
test
test
(bad)
push
fstp
shl
sub
jne
data16
std
lahf
xor
into
cmp
adc
xor
sub
dec
xlat
outs
jno
or
cmp
xor
mov
ficom
and
or
(bad)
pop
test
xor
pop
adc
retf
push
sub
push
pop
cmp
ins
push
call
pop
push
fbstp
xor
sbb
std
pop
rol
add
dec
(bad)
loope
and
dec
sub
xlat
add
adc
mov
cmp
(bad)
aad
(bad)
lahf
(bad)
mov
imul
ins
sub
pop
xor
test
xchg
adc
(bad)
stos
push
mov
cmc
xchg
enter
je
mov
dec
out
daa
stos
xchg
mov
jns
jl
mov
xchg
fadd
adc
rcl
lock
fisub
push
cmp
mov
arpl
data16
and
fsubr
cli
mov
xor
mov
inc
sub
int3
mov
sbb
or
lods
sti
adc
das
imul
jge
sbb
adc
and
xchg
jbe
in
imul
popa
inc
and
movs
push
xor
add
inc
push
jae
lods
inc
adc
enter
dec
xchg
and
test
sbb
inc
stc
inc
or
mov
mov
and
lock
movs
cli
jno
imul
inc
dec
xor
not
ds
(bad)
data16
retf
ja
ds
and
inc
std
xchg
xor
mov
mov
lock
or
cmp
xchg
les
mov
xchg
iret
push
xchg
sub
movs
mov
pop
neg
cli
xor
sbb
adc
int
mov
retf
bound
out
push
cmp
shl
adc
nop
retf
inc
dec
xlat
scas
mov
movs
push
inc
ss
arpl
mov
dec
xor
mov
pop
sti
mov
test
scas
fidiv
sbb
pop
ret
push
cmp
out
push
enter
cdq
aam
mov
dec
push
or
cdq
dec
pop
pop
inc
fisttp
sbb
adc
ret
out
push
ss
xchg
sub
ficomp
lahf
push
mov
(bad)
add
loope
mov
add
add
xor
dec
fadd
in
adc
sahf
push
ret
scas
enter
test
sti
stos
fs
mov
xchg
daa
stos
dec
mov
inc
cmp
jmp
or
mov
dec
or
ds
mov
pop
and
mov
or
stos
sbb
(bad)
adc
jmp
(bad)
cli
dec
and
or
mov
inc
sub
(bad)
ror
in
or
loop
std
sahf
movs
push
adc
test
div
push
lea
jae
mov
data16
cmp
add
clc
lock
enter
sahf
aam
adc
mov
stos
pop
fisubr
ud1
sbb
popf
jg
mov
cmp
mov
lods
mov
test
mov
adc
enter
mov
out
int3
add
scas
ins
mov
test
into
cmp
inc
push
das
xchg
add
push
add
dec
pop
out
movs
pop
sbb
mov
call
mov
xchg
jl
movs
jbe
in
dec
movs
and
mov
xchg
sbb
fisub
xor
mov
mov
(bad)
xchg
fbld
lds
mov
add
add
push
pop
icebp
mov
sbb
or
pop
mov
dec
push
das
or
aas
bound
adc
mov
mov
cmp
lahf
adc
push
inc
(bad)
lock
aam
popw
lods
ds
mov
ja
mov
mov
jb
test
int
fs
mov
jae
mov
add
stc
in
enter
jo
js
and
push
jbe
out
mov
xor
pop
test
popa
or
sub
fst
xchg
sub
adc
jl
mov
or
mov
stos
cmovl
mov
aaa
xchg
stc
xor
cmp
xchg
sub
outs
xchg
sbb
in
shl
mov
inc
pop
push
mov
adc
sbb
xchg
sub
push
movs
sub
lea
xor
dec
mov
cmp
pop
cmp
add
arpl
mov
repz
(bad)
pop
mov
(bad)
pushf
mov
das
xor
aas
mov
test
ja
inc
push
cmp
xchg
sub
push
inc
xchg
jnp
mov
cmp
xor
stos
arpl
cmp
(bad)
cmp
xchg
lahf
and
sub
nop
hlt
or
push
icebp
inc
gs
fbld
pop
add
scas
push
fucomip
and
gs
ins
lods
sti
cmp
xchg
inc
add
stos
into
push
and
(bad)
sub
mov
(bad)
cmp
push
cmc
test
sbb
mov
dec
pop
sar
aaa
xchg
leave
xchg
retf
cmp
sbb
pop
mov
and
in
sahf
ss
fbstp
pop
jl
mov
adc
pop
mov
xchg
xor
and
out
loope
aam
js
push
mov
(bad)
mov
shr
pop
sub
mov
data16
ja
or
movs
and
clc
dec
gs
or
retf
push
inc
dec
neg
push
sbb
mov
(bad)
mov
ds
jecxz
push
fidiv
aam
pop
sti
iret
not
pop
jae
jb
sbb
lds
enter
and
sbb
test
add
cmp
push
mov
(bad)
fdivp
cmp
adc
pop
outs
add
(bad)
repz
push
cmp
test
rcr
test
icebp
jl
xor
adc
xor
adc
loop
icebp
rcl
jp
add
xchg
cld
push
fisub
daa
fild
lds
jns
retf
or
and
and
aam
jo
cmp
shl
xlat
and
aam
and
int3
int3
xor
pop
repz
ja
popf
hlt
hlt
into
jmp
shl
jae
mov
mov
xor
mov
inc
inc
mov
outs
ret
gs
pop
add
add
sbb
mov
ss
sbb
js
mov
sbb
pop
pop
sti
fsub
mov
xchg
cmp
add
or
rol
in
and
sub
jo
es
ss
(bad)
aad
shr
sub
call
enter
ds
pop
and
cmp
push
adc
jg
stos
and
cmp
pop
stos
out
fist
leave
stos
shl
outs
aaa
inc
add
int
push
dec
and
add
js
aam
(bad)
mov
mov
pop
dec
repnz
or
mov
cmp
xchg
pop
test
add
clc
dec
adc
mov
in
test
(bad)
pop
sbb
cmp
ins
ss
imul
fcmovne
ret
add
pop
sub
xor
pop
mov
(bad)
sbb
std
sbb
out
hlt
xchg
push
jne
gs
ficom
sub
xor
fcom
jo
or
fsqrt
adc
pop
xor
jne
cld
call
pop
push
movs
imul
ins
mov
sahf
pop
dec
sbb
mov
mov
cmc
(bad)
fst
push
push
adc
movs
add
rcr
dec
adc
and
test
pop
fisttp
or
adc
push
clc
pop
int
movs
outs
mov
mov
cwde
dec
sub
jle
push
xchg
jne
aaa
mov
jbe
inc
xchg
fst
dec
loop
or
push
mov
clc
jno
jp
sbb
sar
pop
sub
(bad)
ds
lods
mov
adc
fidiv
mov
ret
mov
or
and
cli
(bad)
push
mov
imul
mov
pop
xchg
hlt
or
mov
lods
sbb
lock
cmp
and
and
shl
out
sbb
das
stc
sti
mov
clc
add
cmp
jge
xor
repz
cmp
xor
add
aas
addr16
div
mov
(bad)
sbb
fstp
lea
xor
fisubr
lea
pop
xchg
cmps
dec
movs
dec
and
add
(bad)
enter
inc
icebp
mov
add
push
(bad)
dec
(bad)
or
cli
xor
inc
dec
js
movs
repz
jb
fs
mov
repz
dec
sbb
sbb
jo
inc
out
lods
or
pop
ja
jge
adc
push
sbb
push
cmp
sub
movs
jge
sub
xor
scas
daa
mov
dec
or
fcomp
adc
out
(bad)
xchg
cdq
int
pusha
xor
out
mov
nop
hlt
cdq
aad
imul
inc
pop
pop
sti
sti
cdq
dec
mov
fbld
shr
mov
inc
add
imul
movs
add
add
dec
loopne
and
(bad)
jno
fldenv
movs
out
push
cmc
movs
push
mov
dec
iret
stos
mov
pop
imul
enter
xor
imul
pop
push
pop
push
adc
loop
retf
cli
data16
iret
ficomp
mov
inc
out
cmp
out
and
pop
fstp
pop
mov
add
inc
nop
test
test
cmp
cwde
enter
(bad)
sub
pop
jo
(bad)
push
pop
out
or
or
psubusb
mov
inc
fld1
hlt
lods
cmp
ins
ss
imul
popa
retf
jle
xor
mov
stos
lock
daa
std
or
mov
(bad)
mov
fidiv
and
test
fwait
cmc
mov
mov
jo
push
mov
mov
push
vunpcklps
movs
outs
add
mov
mov
sub
cmp
test
sub
in
loopne
xor
jns
mov
mov
sbb
pop
sbb
sahf
mov
popf
xlat
shr
inc
jno
lahf
test
sbb
jl
cld
rcr
pop
dec
lds
inc
mov
inc
pop
fiadd
mov
mov
and
aam
(bad)
jo
test
std
clc
shr
xor
ror
int3
or
(bad)
push
repz
push
jo
push
or
test
sbb
pusha
sub
popf
sar
and
jb
push
push
push
and
jp
xor
sbb
push
xor
pop
shl
int
sub
out
mov
mov
das
add
stc
push
adc
lods
sub
add
sub
scas
dec
clc
fcompp
movs
cli
sti
jo
lock
push
push
cmp
dec
add
xlat
data16
sub
or
add
jnp
out
inc
pop
ror
or
leave
fcom
sbb
ins
into
adc
iret
sqrtps
adc
adc
push
inc
and
test
shr
mov
retf
ins
push
out
adc
mov
int
fnstenv
jnp
mov
retf
(bad)
xchg
xchg
dec
enter
cmp
pop
and
jbe
(bad)
sub
or
inc
and
sahf
pop
dec
mov
dec
std
cmp
gs
cmp
cmp
dec
mov
stos
jae
enter
mov
and
mov
out
or
nop
hlt
jp
push
icebp
inc
gs
(bad)
jae
and
ss
outs
mov
sbb
movs
jo
sub
jae
adc
mov
jae
add
cs
push
cmc
in
push
mov
mov
mov
movs
sbb
mov
fstp
les
mov
(bad)
mov
add
add
xchg
push
shl
mov
adc
mov
mov
ret
xchg
test
and
push
pop
pop
inc
aam
jl
mov
outs
pop
cmp
fidivr
push
mov
enter
mov
ficom
sar
dec
call
outs
mov
fdivr
mov
adc
add
push
inc
adc
cmp
jno
in
imul
popa
retf
jb
xor
ret
cli
pop
jns
sbb
mov
leave
mov
cmp
lods
jl
out
mov
nop
hlt
xchg
push
mov
gs
lods
bound
push
add
and
and
out
push
ret
lods
cli
sti
sub
add
mov
(bad)
data16
ins
ja
cmp
jne
push
mov
xchg
and
(bad)
mov
adc
dec
mov
xchg
push
sbb
xchg
pop
popf
loop
jo
pop
fstp
add
mov
aaa
and
and
or
inc
dec
xor
or
mov
push
retf
pop
(bad)
jo
test
mov
aam
sbb
mov
push
mov
int3
jmp
pop
icebp
pop
loop
ins
sub
pop
test
fsub
jecxz
rcl
or
sar
pop
push
or
fcmovne
jnp
out
out
xor
push
pop
cs
mov
sbb
mov
mov
cmp
jg
sbb
jecxz
mov
out
ins
mov
jnp
jl
and
scas
mov
leave
xchg
lds
jne
and
inc
push
fs
outs
xchg
jne
in
push
or
xchg
inc
xor
xor
jp
mov
or
sar
enter
outs
test
(bad)
push
fstp
das
movs
mov
mov
mov
cdq
and
jl
test
loop
mov
es
sbb
ins
push
mov
cmp
fcom
or
sbb
imul
out
mov
push
mov
jmp
icebp
clc
cmps
neg
hlt
scas
and
popf
inc
sbb
dec
hlt
mov
ins
xchg
cmps
push
xchg
lock
retf
sar
aaa
push
stc
out
xor
add
sbb
jg
cmp
push
sub
lods
sub
test
sub
jg
sbb
or
lods
add
scas
out
ret
adc
mov
rol
push
cli
add
cmp
popa
(bad)
cmc
sbb
pop
data16
mov
loopne
mov
je
dec
jbe
cdq
rcl
adc
fstp
test
adc
aam
into
and
repnz
pop
and
mov
retf
xor
out
mov
pop
(bad)
cli
das
pop
outs
xlat
mov
and
loopne
and
sub
int3
jo
and
add
icebp
div
mov
out
or
adc
std
out
mov
clc
daa
fwait
or
aas
cmps
sub
les
mov
sahf
xor
es
push
shl
xor
adc
fsub
js
inc
cli
(bad)
xchg
xor
mov
add
or
adc
mov
out
icebp
adc
and
and
mov
out
sbb
jmp
cmp
repnz
popa
adc
push
and
imul
push
das
mov
xchg
xor
or
add
add
add
pop
jg
dec
es
push
cwde
xchg
jns
cld
xchg
xchg
pop
cmp
fistp
sahf
xor
jl
mov
adc
pop
mov
xchg
xor
and
movs
ret
pop
inc
cwde
daa
mov
in
and
or
sbb
sub
pop
jne
scas
aaa
lods
in
push
or
jl
jl
data16
call
ror
and
imul
lock
retf
gs
dec
sub
or
fcomp
cwde
xor
int
sub
in
jecxz
scas
xchg
jge
out
or
(bad)
(bad)
fidiv
mov
sub
sahf
mov
in
pop
outs
add
sub
pop
xchg
into
lea
sub
(bad)
leave
cli
or
mov
repnz
jmp
test
mov
sbb
ja
push
adc
mov
mov
inc
cld
aam
outs
loop
sub
rcr
loope
and
fisub
cmp
ret
pop
sub
cmp
push
cwde
pop
xchg
push
push
pop
shr
and
pop
add
outs
pop
inc
jo
mov
scas
lea
(bad)
inc
neg
int3
inc
pusha
pushf
inc
sti
pop
loop
add
fistp
mov
jl
sbb
data16
outs
repz
shl
adc
call
imul
inc
and
pop
xor
or
inc
push
jae
lods
js
sub
jge
js
and
clc
stos
add
test
jcxz
aas
adc
aad
mov
stos
mov
fucomip
and
gs
ds
sti
cmp
cdq
inc
add
mov
fisub
xchg
cs
ds
jp
push
das
sahf
fild
xchg
mov
mov
clc
pop
sbb
mov
mov
pop
test
outs
loop
or
loop
pop
adc
add
(bad)
jmp
out
mov
out
sbb
cmp
inc
mov
movs
inc
push
rcr
mov
retf
sub
repnz
sub
arpl
sub
loop
sbb
pop
lds
add
or
jns
inc
scas
xor
and
adc
call
shl
and
gs
fbstp
dec
sbb
repnz
xlat
cmps
fcomp
adc
aaa
jo
or
sub
push
jns
jnp
outs
pop
fwait
pop
mov
mov
pop
(bad)
in
mov
js
daa
mov
ins
jno
inc
jne
add
mov
add
push
sub
call
cmp
data16
xchg
and
loope
mov
mov
movs
mov
fcmove
dec
es
sub
dec
jbe
lahf
mov
xchg
jb
es
push
adc
push
(bad)
xchg
cdq
xchg
movs
(bad)
les
xor
mov
adc
and
add
scas
mov
sbb
cmp
sub
mov
sbb
push
mov
std
sahf
outs
jno
push
inc
cmp
jge
adc
je
popf
shl
sub
fidiv
aam
inc
movs
mov
sub
shl
(bad)
mov
int
pusha
xor
mov
lods
psllq
outs
movs
sub
mov
test
xlat
test
push
retf
ja
cli
pop
mov
ret
inc
or
sbb
data16
loop
mov
jmp
loopne
inc
mov
mov
adc
pop
or
movs
inc
dec
sub
and
cmp
xchg
js
or
add
fxch
outs
jne
lea
jg
test
es
push
push
out
mov
int
cld
stc
sub
outs
pop
lds
jle
ja
bound
aaa
sbb
and
push
jmp
popf
cmps
dec
adc
push
xchg
daa
pause
dec
pop
mov
xor
xchg
jb
in
imul
lock
xor
iret
pop
jmp
add
aam
sub
mov
stc
inc
adc
cli
lock
add
sub
inc
push
mov
adc
sub
mov
rol
in
cmp
add
sbb
add
xor
ficom
dec
sahf
push
int
adc
and
inc
aas
push
sub
sbb
jg
jns
loopne
aaa
int3
rcr
outs
loop
or
sbb
or
stos
shl
loop
mov
or
mov
int
in
jmp
pop
pop
inc
sub
test
nop
retf
in
repz
scas
mov
out
es
(bad)
pop
(bad)
int3
inc
sbb
movs
in
test
sbb
add
inc
sbb
pop
xchg
jg
in
jecxz
scas
xor
push
jo
push
in
imul
lock
retf
ins
add
pop
sub
sbb
sub
mov
jo
shl
out
pop
mov
lock
ss
out
mov
imul
push
adc
pop
sbb
lock
movs
mov
xor
popf
inc
pusha
popa
or
scas
inc
rol
add
add
cli
and
addr16
sahf
push
mov
lock
ffree
test
pop
fist
pop
(bad)
mov
fstp
jge
xlat
shr
inc
je
push
ins
into
pop
xchg
sub
movs
dec
movs
out
pop
int
movs
data16
and
push
push
shr
mov
pop
sub
and
jo
pop
mov
xchg
mov
push
les
aas
leave
cwde
enter
jnp
jecxz
fld
outs
mov
mov
into
mov
pop
fucomip
or
scas
jl
stc
adc
jge
jecxz
daa
lds
and
push
cmp
sbb
popa
retf
lock
xlat
push
pop
and
jae
popf
mov
sub
jo
dec
(bad)
and
clc
div
jnp
scas
jg
retf
jmp
(bad)
xor
xlat
in
mov
push
ins
lds
jmp
inc
ins
xor
xor
sub
imul
push
das
test
push
ins
cdq
cmp
push
fs
lock
or
aad
fldcw
test
jle
pop
pop
mul
dec
xchg
xor
shl
fisub
adc
push
mov
test
dec
daa
jmp
in
pop
call
xor
add
xchg
inc
call
jle
push
lea
and
pop
repz
(bad)
pop
dec
add
dec
add
in
imul
mov
into
mov
xchg
loope
aad
inc
fbstp
inc
cmp
dec
mov
sub
pop
rcr
gs
mov
pop
(bad)
out
add
push
cmp
icebp
inc
gs
cmp
pusha
mov
scas
dec
clc
sub
inc
lock
pushf
sub
enter
sub
jl
xor
push
cmc
pop
int3
fdiv
inc
add
sbb
pop
sbb
pop
adc
enter
pop
js
mov
addr16
arpl
lods
add
and
add
and
mov
mov
xor
out
and
inc
ret
mov
sbb
push
je
xor
mov
aas
(bad)
jle
push
test
leave
or
xor
pusha
clc
dec
in
jge
lods
ds
push
pop
fcomp
xor
popf
ror
(bad)
rol
aad
jb
in
jecxz
or
add
add
xlat
push
pop
xchg
and
sbb
psrld
lods
xchg
and
test
add
adc
enter
inc
jo
push
dec
or
shr
cli
mov
jbe
mov
sbb
push
mov
fisub
sub
jl
inc
pop
xor
push
cmc
test
daa
and
repnz
jae
sar
aaa
xchg
lds
ja
call
add
enter
mov
push
add
add
cdq
push
push
and
xchg
and
sub
xor
out
test
pop
(bad)
cli
mov
js
in
and
jl
mov
inc
inc
or
mov
jbe
add
adc
dec
xchg
pushf
xor
adc
stc
daa
push
les
mov
cwde
lods
xor
shr
call
xchg
ja
call
ret
dec
and
retf
(bad)
mov
(bad)
cld
and
sub
push
xlat
call
xchg
inc
scas
and
ins
out
push
jne
movs
pop
mov
xor
inc
jne
lds
push
mov
cmp
test
out
add
jo
sbb
xchg
dec
jge
add
sbb
inc
inc
adc
mov
outs
dec
pop
js
int
dec
sbb
ror
add
sbb
shl
mov
cdq
and
cwde
mov
in
sub
int
or
xor
out
and
mov
add
dec
test
std
mov
test
idiv
push
and
jb
int3
int3
out
fcompp
add
push
in
mov
push
push
inc
pop
inc
push
pop
lods
(bad)
mov
fmul
cdq
mov
dec
fdivr
xchg
or
imul
jp
gs
xchg
pop
cmp
mov
and
daa
sbb
das
push
ss
test
imul
in
jecxz
fwait
cli
xor
cmc
xor
pop
pop
fbld
mov
sbb
push
in
in
jle
mov
test
fcmove
stos
push
push
(bad)
loopne
or
push
fiadd
out
mov
sbb
xor
adc
xor
aam
sti
(bad)
loop
push
push
dec
push
test
or
jg
pop
fbld
and
movs
add
lods
push
jmp
adc
fs
push
adc
push
jp
fidivr
dec
mov
fild
in
sbb
jecxz
adc
jns
repnz
ret
add
xor
lods
or
pop
test
enter
dec
jl
into
jmp
mov
mov
jno
xchg
stc
sub
pop
or
imul
ds
popa
retf
adc
jbe
dec
fisttp
fld
rol
jb
cmp
std
in
(bad)
fwait
and
movs
imul
or
fstp
icebp
or
mov
outs
bound
clc
add
xchg
cmp
jge
xor
adc
xor
xor
scas
loopne
push
lds
inc
inc
aas
movs
stos
or
stos
in
test
cmps
in
or
xchg
test
call
pop
add
cli
ds
or
nop
mov
stos
fbstp
loope
leave
leave
retf
in
cmp
mov
das
inc
(bad)
pop
lds
imul
pop
lahf
arpl
aaa
mov
repz
(bad)
pop
add
mov
sbb
movs
fwait
sbb
leave
shr
mov
dec
dec
xchg
neg
dec
enter
mov
out
and
lods
in
mov
test
icebp
mov
int3
and
test
add
sbb
sbb
out
mov
mov
sub
sahf
mov
sbb
push
cli
jno
imul
clc
add
rcl
icebp
sub
jl
xor
das
adc
loop
pop
dec
and
mov
lock
in
shl
inc
into
or
xchg
mov
push
jmp
fcomp
je
push
mov
sub
jno
je
and
into
int
in
dec
jns
into
cmp
fs
add
inc
aam
pusha
cli
xor
call
jge
or
mov
inc
sbb
rol
movs
imul
mov
iret
adc
or
neg
push
lea
jae
out
jecxz
and
jb
ror
movs
sub
imul
out
mov
fbld
fild
and
ss
and
sbb
in
jecxz
in
stc
enter
fbld
(bad)
sub
mov
adc
in
ret
cmp
(bad)
out
pop
mul
push
or
jmp
lds
jne
loope
or
cmc
xchg
xor
push
mov
or
dec
sub
in
fisttp
and
cmps
xchg
(bad)
rcr
fcom
hlt
fisubr
sub
jmp
test
sub
leave
dec
ds
pop
in
add
inc
ret
jb
add
mov
fidivr
push
xchg
mov
jbe
push
in
jmp
cmc
cmc
shl
jecxz
fucomip
or
xchg
jl
std
adc
jge
jecxz
daa
lds
and
je
push
cmp
sbb
xor
push
call
mov
mov
popf
mov
mov
cmp
cmp
repnz
lods
lods
xchg
ds
aas
xchg
mov
fbld
(bad)
sub
mov
ret
ins
sbb
sub
mov
jecxz
scas
mov
test
ds
ja
int3
in
cmp
cmc
xchg
xor
mov
xor
sbb
sbb
jbe
fstp
mov
loop
xchg
ror
lahf
push
add
dec
pop
fisub
adc
shl
sbb
into
test
xchg
mov
pop
push
retf
cmp
iret
outs
pop
dec
repnz
movs
(bad)
dec
jle
mov
into
dec
int3
int3
out
call
(bad)
sbb
imul
xchg
jg
jl
mov
movs
out
add
arpl
bound
retf
outs
int
bound
inc
push
dec
data16
rcr
dec
xchg
mov
push
leave
inc
add
xor
das
sti
lahf
push
pop
imul
call
mov
and
dec
out
sbb
daa
std
add
test
scas
ret
inc
push
xor
xor
sbb
sahf
cli
ficomp
fcmovbe
icebp
das
adc
loop
inc
dec
adc
jecxz
push
outs
pop
ror
or
dec
icebp
inc
cmp
jl
push
call
pop
add
push
(bad)
retf
push
add
mov
paddsb
mov
cmp
fs
hlt
loopne
lock
pop
mov
jo
mov
push
mov
fmul
cmp
movs
jne
jbe
shl
push
movzx
push
jg
mov
jge
adc
pop
(bad)
popf
ror
dec
lods
mov
and
mov
adc
and
dec
ds
push
and
sub
(bad)
mov
in
clc
cmc
mov
adc
iret
mov
and
xlat
sahf
sahf
mov
in
ds
jle
clc
test
or
retf
stos
add
(bad)
movs
fdivr
cs
leave
cmp
js
inc
pusha
xchg
xchg
and
pushf
dec
or
lods
add
icebp
bound
imul
(bad)
sbb
sti
(bad)
shl
xchg
jmp
cmp
mov
xchg
pop
dec
and
add
fxch
clc
outs
cmp
pop
mov
imul
shr
stc
sub
out
mov
and
jle
lods
cmp
call
sbb
cli
out
call
xor
hlt
iret
outs
push
in
jecxz
scas
(bad)
popf
pop
(bad)
pop
pop
and
and
imul
lock
retf
jb
inc
pop
mov
aaa
push
mov
int
jmp
xchg
sub
pop
lea
(bad)
clc
(bad)
loopne
adc
cmp
sbb
add
les
stos
jbe
sub
test
ds
test
dec
and
xchg
icebp
sahf
repz
and
mov
popf
repnz
lods
push
test
loopne
sbb
sub
pop
call
popa
test
pushf
dec
pushf
or
data16
mov
in
mov
xchg
xor
shr
stc
sub
add
dec
ins
(bad)
cmps
xchg
ror
out
int3
mov
repz
and
and
sub
dec
mov
xor
jge
gs
dec
inc
outs
sbb
jl
inc
scas
push
adc
sahf
xor
xor
inc
lock
stos
mov
lods
xor
sbb
jae
or
adc
fmul
cmps
xchg
sub
lods
sub
pushf
(bad)
sub
sub
call
mov
jmp
inc
mov
clc
pop
xchg
ins
cmp
leave
shr
add
(bad)
bound
jp
sahf
inc
add
int3
dec
or
jmp
call
or
mov
outs
dec
retf
or
jmp
pop
stos
pop
fidiv
out
pop
or
and
test
cmp
xchg
es
fnstsw
push
cmp
in
pop
in
mov
and
push
and
and
fcompp
add
ins
mov
mov
fs
or
jl
push
dec
fwait
gs
hlt
jmp
or
bound
cmps
sub
push
fdiv
xor
xor
popa
jg
push
inc
and
cmps
mov
je
int
scas
pop
(bad)
out
mov
outs
xor
ds
fistp
not
push
fistp
mov
xchg
sub
mov
or
or
std
inc
or
push
mov
retf
pusha
js
in
pop
cmp
cs
push
pop
xchg
jns
and
scas
repnz
jmp
and
sar
enter
add
retf
aad
ss
(bad)
(bad)
jo
adc
mov
shl
and
call
in
jbe
xor
shr
xor
inc
aam
xor
adc
xchg
retf
push
fiadd
xor
inc
sbb
out
and
cwde
ror
push
out
fild
adc
leave
pop
push
pop
fsubr
ss
jecxz
mov
lock
jne
bound
inc
(bad)
mov
mov
jb
mov
pop
mov
aam
or
sar
xchg
pusha
xor
in
mov
nop
hlt
jle
sub
inc
gs
lods
bound
and
add
xchg
sbb
cmps
fsub
stc
mov
(bad)
scas
ret
mov
(bad)
jno
bnd
adc
sbb
add
call
test
xor
pop
adc
lods
or
sar
aaa
xchg
out
cdq
sbb
mov
icebp
movs
mov
mov
fdiv
jl
int
lea
into
mov
cmp
and
mov
out
cli
mov
fiadd
inc
out
int3
repnz
fisub
popf
inc
lock
jmp
sar
jmp
fs
sbb
mov
(bad)
sub
sbb
pop
(bad)
retf
call
mov
dec
fild
mov
pop
cmp
fcom
add
mov
fs
inc
gs
mov
in
(bad)
and
inc
mov
inc
add
jle
jge
cmps
bound
push
sub
add
adc
and
movs
pusha
das
sahf
addr16
div
lds
and
mov
aaa
pop
(bad)
loopne
jmp
hlt
ja
jmp
xchg
sub
push
adc
loope
mov
data16
iret
ficomp
jp
loop
sbb
inc
and
or
mov
mov
fucompp
enter
es
inc
sbb
daa
fsubr
cwde
add
jg
daa
adc
jg
jae
push
pop
iret
xchg
in
jecxz
fist
jae
mov
sbb
jecxz
or
imul
mov
and
mov
or
mov
clc
ret
lds
ds
xchg
test
jecxz
pop
(bad)
add
adc
data16
sub
cs
add
scas
stos
jnp
shr
cli
mov
jbe
mov
adc
push
cmp
lock
or
jbe
sbb
xor
out
or
out
retf
pop
adc
mov
xchg
and
ret
mov
xor
ins
addr16
es
(bad)
pop
push
or
pop
push
cdq
loopne
or
xor
popa
push
and
ss
and
and
mov
imul
sbb
aaa
mov
mov
pop
repz
dec
daa
sbb
push
add
or
lods
inc
push
pop
dec
fwait
call
int
shl
repnz
fwait
adc
push
inc
imul
sbb
leave
fsubr
mov
lds
int
and
mov
pop
or
sbb
cld
(bad)
call
cmp
push
add
scas
stos
jg
popa
outs
mov
jmp
add
mov
jae
cli
xor
jmp
in
rcr
dec
sub
jge
icebp
adc
add
sar
aaa
xchg
mov
int
aad
fstp
idiv
mov
cdq
aaa
lds
int
mov
cmp
stc
test
movs
test
jp
dec
and
pop
fiadd
mov
clc
push
inc
ss
pop
xor
sti
pop
jne
shl
into
jmp
sar
movs
data16
jge
jne
call
push
cmp
xchg
mov
inc
and
in
xor
ja
imul
js
aas
aas
cwde
lahf
aaa
int
add
and
xchg
push
jnp
out
hlt
xchg
push
dec
inc
gs
lods
mov
cmp
ficomp
inc
adc
leave
imul
xor
cli
sub
pushf
cmp
pop
lock
xor
cmp
dec
ins
pushf
dec
or
lods
or
in
xchg
sub
js
in
cwde
xchg
jns
xchg
sbb
inc
fwait
enter
push
cdq
loopne
cdq
stos
mov
popa
mov
sbb
xchg
mov
fdiv
mov
and
pop
inc
cwde
mov
js
inc
rcr
or
push
mov
fisub
mov
dec
mov
imul
add
and
pop
push
xchg
push
imul
jg
inc
clc
xchg
hlt
pusha
xchg
loope
jp
push
in
rol
push
xlat
push
pop
pop
shr
sub
leave
ficom
and
test
addr16
out
mov
mov
dec
stos
movs
add
jns
sub
movs
xor
add
jmp
ret
inc
cwde
cli
dec
scas
call
cmps
out
shl
push
data16
pop
out
jae
push
push
adc
xchg
mov
and
aad
popa
sub
sbb
sbb
and
loop
cmp
dec
in
sub
movs
mov
rol
int
rol
xchg
dec
into
xlat
(bad)
xor
jmp
mov
mov
jno
shl
jmp
or
mov
mov
mov
jo
dec
lods
cli
in
mov
(bad)
das
add
(bad)
mov
sbb
cmp
sub
jb
fs
je
inc
sub
out
and
cwde
inc
sbb
mov
and
mov
daa
xor
inc
mov
cmp
pop
lods
hlt
push
and
hlt
mov
retf
fcmovnu
ss
sub
rol
cmp
das
or
mov
ins
jne
cli
popa
loope
pushf
add
js
sub
pop
jno
adc
cmp
dec
mov
xchg
cmps
mov
pop
mov
shl
adc
xchg
mov
sub
imul
jle
mov
cmp
out
fld
std
sar
jne
outs
mov
fcmovu
xchg
bound
and
dec
mov
es
and
jno
xor
inc
dec
stos
push
mov
xor
jecxz
fild
sub
pusha
fst
in
(bad)
out
jl
shl
ret
push
in
psubq
adc
ds
mov
fs
jo
xchg
cdq
jp
and
jbe
cmps
sub
pop
jg
cmps
stos
jae
aam
dec
xor
lock
int3
jg
sub
jecxz
mov
into
push
or
or
adc
mov
fistp
(bad)
dec
call
syscall
hlt
or
(bad)
cli
sbb
sti
xor
jne
xchg
sbb
xor
popa
xor
mov
stos
popa
dec
cs
dec
dec
mov
inc
outs
jne
sbb
and
lock
cs
xor
sti
data16
es
rol
dec
mov
iret
call
nop
iret
test
test
inc
outs
xlat
dec
outs
push
mov
and
fcmovu
enter
(bad)
mov
cmps
sbb
or
xchg
pop
mov
and
mov
stc
xor
pop
fidiv
fstp
ds
push
xlat
adc
jo
rcr
xchg
mov
fimul
cwde
sub
xor
cmp
push
dec
xchg
jge
cmps
cmp
out
lahf
icebp
push
sbb
fbstp
jnp
and
fsubr
in
in
mov
pop
jne
cmp
mov
sti
xor
cs
call
mov
xor
and
aas
push
jnp
addr16
mov
dec
rcr
push
push
loop
cmp
jo
movs
daa
sub
dec
icebp
cmps
stos
(bad)
sub
sub
leave
sub
xchg
xor
out
test
cmc
inc
pop
mov
inc
mov
aad
loopne
add
or
push
mov
inc
sbb
and
sbb
jmp
and
push
xchg
push
popf
inc
and
pop
(bad)
xor
std
bound
in
jecxz
push
fidiv
aam
out
adc
xlat
push
pop
xchg
ss
jae
lods
mov
(bad)
cmp
out
mov
jmp
or
outs
clc
inc
gs
sub
in
sahf
xchg
push
pop
mov
sti
pop
mov
adc
es
popa
and
in
(bad)
jmp
mov
mov
les
jl
dec
push
enter
out
sub
je
rol
inc
mov
xor
and
out
push
aas
sub
fistp
pushf
dec
pushf
aad
movs
iret
mov
mov
add
int
pop
fnsave
mov
ja
mov
(bad)
imul
jl
cmp
mov
pop
push
jo
pushf
(bad)
mov
add
lods
arpl
sub
mov
in
pusha
cs
clc
cmp
ins
xchg
jg
xor
xor
iret
repnz
in
cmps
fsub
and
mov
adc
xor
or
inc
shl
push
fistp
rol
add
xor
cli
sahf
hlt
scas
aas
jo
inc
and
(bad)
not
mov
(bad)
bound
xor
sbb
mov
ins
movs
jecxz
xor
mov
arpl
sbb
jle
loop
fst
push
jp
adc
loop
(bad)
cwde
mov
data16
fidiv
stc
cdq
dec
xlat
aas
ds
mov
or
dec
jnp
dec
jo
cmp
jg
out
lahf
imul
mov
or
fld
das
pusha
test
jmp
das
add
or
jnp
shl
retf
sub
jl
inc
outs
jle
out
sub
xchg
setle
mov
inc
mov
fmul
sub
xor
scas
cdq
mov
mov
imul
sar
mov
mov
aad
fbstp
push
arpl
jecxz
movs
jo
sub
jae
xor
mov
loopne
and
(bad)
adc
fs
adc
inc
pusha
xchg
movs
sub
add
add
icebp
jl
xor
cmovl
das
inc
pop
dec
xchg
push
cmc
imul
xchg
jo
std
cmp
and
fwait
daa
fild
push
fidivr
xchg
cmps
(bad)
inc
icebp
mov
add
mov
xchg
fadd
mov
fs
outs
xlat
jo
daa
cmp
fisubr
jno
movs
mov
sub
fld
or
inc
sbb
jbe
out
test
jl
mov
jl
pop
popf
pop
add
ret
int
addr16
jp
push
inc
imul
pop
out
pop
mov
dec
fisttp
das
mov
rol
jb
inc
mov
cmp
cld
ins
in
push
sbb
adc
jb
sub
sub
and
out
xchg
fwait
movs
jo
sub
add
dec
loopne
mov
mov
in
push
lock
cmc
xchg
mov
mov
out
gs
sar
dec
xchg
(bad)
pushf
sahf
dec
nop
lods
push
(bad)
rcr
(bad)
ins
int3
movs
push
ins
push
sbb
int
ss
inc
lds
es
mov
stc
sub
jmp
das
sbb
xchg
fnstenv
push
jp
mov
sbb
push
aas
data16
mov
mov
inc
scas
add
jl
test
iret
cmp
in
jecxz
scas
(bad)
mov
or
inc
push
ins
lock
push
adc
aaa
add
pop
int
shl
xor
sub
pushf
inc
mov
in
push
mov
les
add
nop
stos
js
call
in
lea
clc
sahf
mov
ret
mov
lods
data16
neg
xor
cs
mov
jmp
xchg
xor
lock
outs
int
sbb
jg
cli
sahf
pop
adc
xchg
inc
inc
xchg
sbb
call
call
mov
(bad)
data16
in
pop
or
test
xor
mov
cmp
fld
mov
xlat
and
std
pop
xchg
mov
adc
jecxz
cmps
int3
rcr
pushf
mov
(bad)
adc
test
ror
fmulp
push
sbb
scas
cs
dec
dec
dec
inc
iret
push
popf
cmp
inc
imul
jb
mov
sbb
sbb
pop
pop
enter
inc
xor
adc
loop
imul
push
xor
xchg
ficom
and
add
out
pop
imul
inc
cmp
xor
mov
imul
test
aas
fwait
ja
(bad)
push
inc
push
das
aam
hlt
xchg
xor
xchg
fadd
mov
cmovnp
shl
inc
into
je
aaa
xchg
xor
loop
xchg
jg
gs
mov
pop
add
movs
ficomp
mov
test
movs
cmps
sub
and
add
out
xor
out
push
call
mov
js
inc
js
hlt
test
rep
es
fwait
arpl
inc
sbb
sbb
pop
loop
mov
lods
(bad)
(bad)
arpl
neg
push
adc
pop
enter
mov
and
pop
push
inc
jl
repz
scas
jecxz
dec
inc
add
xor
sbb
cmp
add
mov
outs
or
xchg
mov
mov
sti
cmp
xor
cli
sti
cmp
mov
sbb
inc
mov
cmp
jb
ja
fptan
jmp
inc
push
cmp
shl
xchg
inc
xor
outs
test
push
icebp
pop
sbb
mov
sub
cld
add
int
fcomp
rcr
loopne
ficomp
mov
out
add
mov
mov
shl
ret
aad
rcl
inc
loop
jl
adc
jl
je
push
mov
(bad)
imul
or
mov
cli
jnp
and
mov
call
sub
add
and
mov
jge
pop
jl
xor
mov
mov
jne
nop
imul
jmp
ret
cmp
add
sub
inc
call
or
xchg
mov
cmp
rol
adc
adc
xor
mov
push
ja
mov
sub
out
sbb
call
dec
(bad)
pushfw
inc
ds
or
(bad)
jle
or
rcl
shr
shl
in
repz
pushf
fadd
push
data16
outs
in
mov
into
and
mov
shl
in
xchg
mov
js
les
jno
xchg
data16
xchg
pop
mov
sub
mov
test
inc
sub
inc
cli
xor
cmp
xlat
and
pushf
pop
repnz
ret
xor
mov
rcr
cmc
iret
jbe
popa
adc
jl
mov
in
jecxz
aad
pop
ds
je
jae
imul
popa
retf
xor
enter
or
sub
pop
push
mov
(bad)
mov
fisub
sub
hlt
or
adc
xor
inc
lods
sub
into
push
mov
scas
stos
jg
popa
and
cwde
or
or
div
popa
cmp
push
mov
jb
jmp
sbb
pop
jb
mov
stos
pop
hlt
or
test
mov
popa
cwde
stc
lock
sti
pop
fmul
fstp
das
cs
clc
out
fisub
ss
lods
sbb
cmp
stc
enter
dec
test
mov
ins
inc
dec
nop
mov
xlat
push
les
cmp
aaa
push
cmps
int3
inc
mov
and
or
push
mov
push
push
sbb
mov
jl
icebp
clc
dec
fwait
call
jbe
mov
out
imul
dec
fdivr
jecxz
or
xchg
setne
pop
shl
cmps
out
div
dec
fistp
mov
mov
not
add
pop
sbb
or
add
enter
fbld
push
add
scas
stos
fwait
rcr
stos
out
fwait
cmp
sti
popf
cmp
mov
(bad)
push
(bad)
push
fisttp
fwait
inc
jle
push
das
or
je
sar
shr
ror
dec
mov
fld
retf
sub
es
xor
out
inc
in
xor
stc
retf
cli
push
into
ftst
fmulp
dec
(bad)
out
xchg
dec
into
mov
and
and
pop
enter
mov
add
sub
add
jbe
push
mov
mov
sbb
xchg
sbb
jbe
cli
push
push
mov
jl
xor
daa
into
or
popf
js
les
mov
or
push
es
push
push
gs
bound
xchg
call
stos
lods
mov
and
cmp
sbb
dec
test
jcxz
push
adc
push
cmp
lods
sub
rcr
adc
out
fsub
pop
jne
xlat
div
scas
stos
mov
fdivrp
inc
jle
cdq
mov
shl
gs
and
dec
jmp
push
test
loopne
mov
loop
jo
hlt
cwde
fstp
add
pop
inc
cdq
stos
mov
addr16
test
outs
adc
xor
in
xchg
mov
or
dec
push
inc
mov
fbstp
fxch
jae
mov
inc
sbb
cld
mov
or
jmp
inc
xlat
stos
mov
dec
mov
push
sbb
out
push
sub
dec
shl
dec
sub
cld
pop
push
mov
repnz
jae
shl
std
inc
ds
(bad)
xchg
mov
test
xchg
hlt
xchg
push
xor
gs
call
rcr
adc
and
adc
sub
jae
or
jae
mov
add
cs
loop
call
add
and
mov
mov
dec
add
xchg
test
adc
call
lea
and
xor
jg
loop
data16
pop
stos
cmp
mov
push
inc
xor
inc
pop
mov
jo
test
retf
(bad)
sub
aam
push
call
mov
xor
retf
fcompp
add
push
add
mov
push
push
add
or
jne
ins
jl
jecxz
mov
arpl
retf
retf
cmc
push
jae
xchg
mov
(bad)
psadbw
xchg
call
dec
fild
and
mov
popf
jg
dec
pushf
pop
jnp
ins
or
jbe
jae
mov
jmp
or
scas
and
rcl
adc
cmps
cli
jno
imul
ss
ret
push
adc
cld
aad
add
fptan
dec
inc
pop
and
pusha
ins
movs
add
pushf
ss
jmp
xchg
lea
fcom
aaa
jb
pop
mov
js
int
dec
daa
or
sbb
push
xchg
cdq
and
movs
mov
sbb
or
sti
sbb
dec
push
fadd
inc
mov
pop
adc
mov
in
mov
loopne
and
(bad)
pop
push
repz
push
addr16
clc
dec
and
inc
sbb
inc
jbe
mov
popf
pop
ret
fdivr
adc
cld
xchg
or
imul
cmc
pop
retf
retf
mov
retf
int
mov
sar
ss
pop
and
cmp
scas
push
cmp
out
nop
mov
dec
adc
dec
rcl
inc
jle
and
adc
push
mov
pop
std
inc
push
cmp
mov
lds
out
icebp
adc
pop
push
dec
pop
inc
cmp
push
and
in
xchg
out
and
rcl
(bad)
aam
bnd
repz
cmp
loop
rol
sub
bound
ds
and
mov
shl
sub
mov
popa
ret
xor
dec
int3
arpl
jecxz
inc
mov
stc
adc
jbe
jo
lahf
out
or
or
popf
mov
les
and
stc
jb
push
cmp
xchg
xchg
adc
loope
popa
inc
and
loopne
xor
call
mov
movs
jnp
mov
jo
in
dec
pusha
xor
mov
add
add
fstp
jno
push
sub
mov
shr
fdivr
sti
xchg
jmp
test
test
rcl
and
int3
adc
jae
dec
adc
inc
aas
add
mov
sub
aam
and
jno
ret
and
pop
add
mov
(bad)
cmp
mov
(bad)
and
stos
into
test
cmp
adc
inc
inc
dec
sbb
mov
hlt
std
mov
lahf
jge
bnd
addr16
jb
ror
push
jo
inc
mov
mov
dec
loope
icebp
nop
dec
stc
ret
adc
leave
rcl
pusha
(bad)
xor
sub
cli
pop
loope
push
je
or
cmp
sub
cmps
jns
ror
aas
sbb
ss
sub
mov
lock
push
aad
mov
std
xchg
sub
mov
clc
sbb
xchg
cmp
sti
popf
pop
sahf
sahf
hlt
add
scas
push
aam
pop
stc
cmc
into
pushf
dec
ret
jo
pop
cld
adc
xchg
mov
xor
add
test
ret
mov
movs
pop
mov
retf
in
mov
sbb
psubusw
xchg
push
clc
mov
and
push
mov
mov
fld
rcr
shr
jo
adc
mov
ret
inc
fidivr
inc
dec
inc
daa
inc
mov
sub
ror
mov
lods
(bad)
loop
and
(bad)
ja
jne
pop
sar
inc
scas
sbb
lds
mov
xchg
mov
add
cmps
xchg
add
dec
popf
or
xor
and
in
push
test
xlat
hlt
mov
mov
xor
and
outs
mov
shr
dec
(bad)
xchg
sahf
scas
cmp
sbb
add
pop
jo
pop
or
mov
repnz
xor
or
ret
icebp
adc
sub
sar
aaa
int3
fcom
outs
loop
sub
xchg
sub
das
fcmovu
lods
and
fisub
adc
inc
rcl
test
cmp
out
push
test
pop
int
cmps
xlat
mov
mov
adc
or
mov
push
jecxz
or
es
sbb
cmp
or
jl
fwait
clc
dec
fwait
jge
adc
add
out
mov
jl
rcl
sbb
imul
daa
cmps
xchg
scas
inc
daa
mov
out
daa
std
add
mov
(bad)
xchg
lds
sub
xchg
(bad)
pop
xchg
hlt
or
adc
gs
pop
sub
(bad)
cmps
push
xlat
scas
and
out
scas
fcmovne
jo
push
push
(bad)
add
push
dec
push
test
sub
xlat
or
push
sbb
add
sbb
pop
push
push
add
outs
(bad)
in
(bad)
mov
aaa
or
shl
add
call
add
or
and
dec
out
data16
dec
and
sbb
into
mov
xor
mov
or
idiv
mov
scas
xchg
jb
outs
push
rcr
sub
mov
je
jns
adc
test
jg
push
test
out
mov
sub
lds
mov
jl
dec
xchg
xchg
push
push
in
(bad)
lock
inc
cmp
or
repnz
or
das
mov
cmp
dec
(bad)
into
xchg
and
pop
std
(bad)
pop
cwde
hlt
or
out
push
mov
jo
icebp
(bad)
aad
push
and
cwde
leave
sub
outs
mov
ror
or
dec
(bad)
loopne
and
jns
jo
fs
int
outs
mov
mov
pop
sub
xchg
out
mov
test
scas
mov
std
das
sub
jg
call
xchg
push
and
mov
stos
mov
fsub
in
iret
in
xor
iret
jmp
retf
add
add
mov
mov
out
dec
lods
sbb
scas
xor
mov
into
dec
cmps
nop
lock
mov
mov
or
mov
clc
daa
fwait
jmp
xor
std
sub
popf
push
xchg
fidivr
test
rcl
mov
add
sbb
(bad)
jge
mov
fmulp
xchg
and
xchg
mov
jmp
fwait
aam
mov
aad
pop
xchg
fucomip
and
out
mul
add
inc
jae
dec
(bad)
sbb
outs
cli
and
inc
push
cmp
cmc
xchg
xor
xlat
iret
push
jmp
dec
stc
pop
pop
push
mov
dec
sbb
xchg
cdq
jge
retf
xchg
fst
and
movs
pop
mov
fistp
jmp
mov
movs
fdivrp
mov
fld
fistp
call
add
mov
mov
loop
call
cmp
call
ficom
outs
xchg
cmp
popf
cmps
mov
add
mov
ret
in
push
push
in
leave
or
dec
sbb
add
sub
cmc
xor
xchg
ins
jmp
rcr
cmp
das
sbb
dec
fistp
ds
rol
jb
or
sbb
(bad)
jne
add
mov
sbb
push
pandn
call
and
sahf
cwde
inc
sbb
mov
cdq
mov
clc
cld
imul
adc
sub
sub
das
push
add
sbb
add
aam
daa
bts
das
inc
dec
(bad)
loopne
add
xchg
int3
aam
imul
arpl
mov
out
push
push
push
jmp
mov
cmps
(bad)
leave
or
sub
jmp
adc
shr
es
inc
int3
aad
loopne
add
ins
sbb
jb
cmp
jbe
add
sahf
popf
lods
js
sahf
or
jbe
xchg
pop
shr
or
das
jl
stc
pop
push
and
mov
sub
push
and
jecxz
or
inc
jecxz
retf
pop
mov
cld
sbb
push
xor
inc
aaa
and
mov
xchg
rcr
loop
popa
neg
push
aas
lahf
xor
(bad)
call
mov
rcl
mov
push
popa
cmps
mov
add
inc
cmp
cdq
xchg
arpl
mov
or
ja
rol
leave
scas
fisttp
jmp
imul
xchg
fcomi
sub
in
fidivr
adc
xor
test
or
and
mov
ret
fld
cmp
fxch
mov
sti
int3
int3
aaa
fcompp
add
sti
mov
mov
ds
jmp
pop
retf
test
fsubr
pop
sti
inc
loop
cmp
add
xlat
sub
in
les
sbb
enter
test
shl
mov
jecxz
cld
aam
stos
lahf
inc
(bad)
or
repz
xor
aad
mov
imul
add
ret
test
(bad)
ins
ja
int3
or
fnsave
lods
bound
ficom
mov
or
lea
push
add
or
movs
in
push
dec
mov
sub
sbb
xor
mov
movs
fimul
ror
cli
ins
pop
mov
push
stos
mov
int
(bad)
into
jmp
test
cmp
dec
jo
into
xor
dec
xor
mov
test
pushf
cmp
dec
lds
sbb
(bad)
cmp
ja
xor
daa
adc
neg
stc
aaa
cmp
retf
inc
xchg
push
pushf
stos
adc
xchg
ins
jmp
and
add
loope
div
mov
xor
enter
cmp
or
mov
xchg
xchg
adc
repnz
push
add
scas
and
(bad)
sti
and
adc
jns
dec
cld
inc
inc
add
into
add
or
pop
push
(bad)
data16
sub
enter
sbb
pop
(bad)
fdivr
jp
or
inc
mov
dec
inc
jnp
rcr
and
loop
(bad)
shl
add
movs
ins
data16
mov
push
dec
js
test
leave
ret
and
in
pop
int
mov
or
dec
or
mov
enter
add
fistp
sbb
push
jns
cmc
sub
lahf
imul
in
loopne
jl
cmp
and
pop
retf
cdq
cmp
mov
adc
mov
sub
in
lods
jmp
cdq
adc
inc
jmp
jbe
jae
adc
sbb
arpl
mov
clc
rol
mov
xor
cmc
pop
mov
dec
and
xchg
push
(bad)
jbe
mov
mov
in
cld
push
inc
sbb
and
xor
jnp
out
add
sbb
js
sar
xchg
pop
lock
mov
mov
out
adc
pusha
movs
shr
jne
and
sub
jp
cmps
push
ja
mov
push
cmp
clc
retf
dec
sbb
cmp
iret
ret
jle
sbb
xchg
adc
cmp
imul
xchg
sbb
mov
dec
xchg
mov
sub
cs
loope
mov
jmp
stc
add
cmp
mov
mov
in
xor
jmp
mov
or
push
call
out
rol
add
(bad)
aad
mov
add
add
mov
add
ret
arpl
sti
xor
neg
fs
push
test
sub
jl
inc
inc
xlat
bound
sub
pop
dec
push
(bad)
pop
ins
cmc
retf
and
xchg
mov
push
and
push
movs
(bad)
jne
cli
pop
jl
and
mov
mov
fnstsw
ins
lods
inc
pop
pop
sbb
and
nop
pop
lds
mov
or
fcomp
cld
push
jb
sbb
inc
in
inc
jne
cmc
imul
jl
sbb
xchg
adc
js
lds
mov
sub
cli
sbb
loope
ds
add
xor
mov
(bad)
jmp
psrad
pop
rol
jb
scas
leave
int
nop
and
sbb
enter
outs
jecxz
xchg
stc
xor
bound
xlat
jo
add
inc
inc
pop
call
lea
(bad)
outs
or
sub
jno
adc
xchg
into
jmp
sahf
fnclex
xchg
stc
fnstenv
inc
scas
fnstsw
icebp
adc
loope
ins
push
pop
(bad)
or
or
shl
scas
dec
sbb
jl
lock
mov
jns
or
in
push
aaa
loope
(bad)
out
ins
jmp
ins
lock
pop
cwde
cwde
push
mov
mov
push
(bad)
mov
mov
xor
jmp
popf
(bad)
mov
loope
jae
outs
je
das
mul
in
imul
or
push
push
enter
cmp
xor
outs
or
mov
repz
mov
int
pusha
xor
ja
add
push
imul
push
ret
fldcw
mov
pop
scas
dec
fwait
cmps
jmp
xor
jg
add
inc
test
cmp
inc
push
movs
cdq
inc
aaa
pop
xor
ins
mov
or
adc
add
mov
pop
cdq
and
add
or
sbb
pop
inc
jp
pop
fisubr
fidiv
nop
cdq
and
add
jg
pop
sub
cmps
push
out
and
inc
push
rcl
mov
jo
test
std
cmp
xor
sbb
cmp
leave
pop
repz
nop
xor
es
cli
out
xor
movs
dec
test
xchg
icebp
clc
sub
lea
movs
imul
mov
lds
xchg
loope
mov
inc
rcl
mov
add
jae
daa
cmp
cwde
bound
or
mov
out
stc
enter
mov
add
in
and
inc
or
add
or
(bad)
cmp
test
data16
fwait
ja
cmp
jl
inc
fdivr
int3
fiadd
mov
or
rol
mov
mov
and
fcom
call
add
mov
test
pop
fimul
xor
and
fs
sub
fdiv
addr16
dec
js
inc
shl
xor
inc
fs
inc
sti
pop
loop
sub
push
jo
and
inc
adc
push
cld
jmp
push
pop
xchg
jae
in
jecxz
scas
xor
push
jo
push
in
jle
mov
imul
shr
pop
inc
loopne
mov
sbb
js
fcomi
add
and
rcr
pop
nop
xor
mov
push
add
scas
and
aam
scas
dec
clc
adc
movs
cli
int
test
and
push
sbb
(bad)
sti
mov
(bad)
in
or
cs
(bad)
jbe
fdivr
icebp
inc
cmp
mov
fild
mov
in
enter
mov
rcr
fstp
aas
in
fdiv
jne
dec
xchg
bound
and
rcr
dec
xlat
or
cld
retf
push
xor
in
out
mov
aam
fidivr
lds
cmp
xor
call
add
cpuid
push
or
push
inc
dec
in
or
das
or
neg
aaa
jl
call
mov
les
stc
not
pushf
mov
jo
pop
add
scas
mov
out
sbb
retf
add
xor
xor
jg
stc
add
mov
aaa
mov
enter
push
je
test
pop
adc
aam
shr
out
or
and
lea
cmp
pop
pop
rcr
add
push
push
mov
cmp
fisttp
imul
jae
mov
mov
fdivr
outs
(bad)
les
push
repz
pcmpgtb
sahf
cs
jne
repnz
stc
movs
ss
sbb
bswap
dec
mov
xchg
aad
aam
jl
xor
xchg
sub
and
xor
enter
aas
inc
xchg
fst
pop
cmc
mov
scas
fwait
cmp
cld
push
jne
or
pop
push
(bad)
jge
adc
push
pop
popf
rol
inc
inc
mov
shl
pop
dec
mov
adc
dec
mov
dec
ss
out
stc
out
xor
cmps
shl
inc
xor
jbe
outs
and
xchg
add
fcomp
sbb
(bad)
push
mov
iret
adc
xchg
fbld
data16
xor
shr
data16
jae
sahf
cs
inc
jmp
cmp
xor
pop
lea
les
push
pop
add
and
rcl
enter
lods
cmps
jl
rcr
push
adc
rcr
mov
push
in
call
sub
sbb
push
loope
xor
xor
mov
or
inc
outs
xlat
mov
cmps
lea
(bad)
(bad)
icebp
cmp
xchg
sub
loop
jle
mov
mov
or
lods
lods
ja
xlat
call
sub
mov
lods
out
scas
push
push
xchg
xchg
loope
mov
int
dec
daa
shr
in
xor
dec
fdiv
(bad)
pop
shl
xor
jle
imul
mov
inc
adc
scas
sub
retf
mov
inc
xor
out
sbb
mov
push
lds
jmp
push
mov
test
cmp
mov
idiv
mov
jmp
fld1
jecxz
bound
xchg
jns
push
xchg
xor
(bad)
mov
mov
cwde
mov
in
mov
stos
adc
cmp
sub
cwde
test
mov
sub
je
add
std
mov
push
or
push
mov
daa
push
jns
cmc
dec
xchg
mov
jmp
pop
mov
(bad)
imul
or
and
mov
xor
int
and
cld
xchg
mov
retf
aam
jae
into
mov
lods
stc
(bad)
daa
cmp
add
xchg
and
adc
adc
inc
jae
push
xlat
(bad)
pop
mov
frstor
fild
jecxz
das
adc
jmp
clc
test
sbb
cmp
cmp
cdq
xchg
xchg
xor
jg
cmps
mov
sbb
add
pop
out
icebp
pop
sbb
hlt
inc
dec
and
sub
scas
es
push
lods
push
hlt
and
pushf
movs
and
cli
data16
fcom
or
inc
mov
into
jmp
push
aad
movs
or
fnsave
cmp
xor
jmp
xor
fcompp
hlt
pop
push
jo
push
or
xor
add
dec
jg
jecxz
scas
ret
scas
dec
dec
adc
stc
not
pushf
mov
out
sbb
ret
mov
loop
xchg
aam
mov
leave
sbb
xchg
test
jecxz
sub
repz
(bad)
stc
enter
das
jo
stc
push
xchg
push
and
adc
scas
cli
jno
imul
push
sub
imul
sub
jns
sbb
popa
sti
add
(bad)
sub
movs
outs
xchg
daa
test
mov
(bad)
adc
xor
xchg
and
xlat
sbb
pushf
stos
out
jp
out
ds
add
in
call
aaa
push
aaa
and
mov
and
stos
and
aas
dec
add
into
adc
pop
rol
lea
and
xor
sbb
imul
into
imul
or
jae
xchg
inc
adc
fstp
loope
ret
movs
out
mov
add
out
outs
aam
xchg
aas
mov
call
sar
and
xchg
sbb
in
std
sbb
cs
mov
gs
pop
aas
pop
and
add
adc
cmps
mov
xchg
and
jo
stos
(bad)
sub
xor
call
shr
sub
cmps
adc
mov
pop
mov
cld
ins
adc
sub
mov
in
enter
mov
scas
and
mov
mov
out
fld
push
lea
push
into
int
sbb
sub
cmp
fcomp
jne
sub
scas
(bad)
cmp
mov
(bad)
hlt
dec
jno
jge
mov
mov
pop
cmc
inc
xchg
mov
sub
pop
jle
add
icebp
lea
jb
adc
push
jg
sar
cmp
repnz
ret
fild
pop
jo
pop
out
inc
xlat
mov
pop
and
aaa
std
sub
das
inc
mov
xchg
hlt
or
cs
sbb
cmps
xlat
sti
fdiv
xor
outs
cmp
jmp
das
in
or
pop
test
vpcmpgtb
inc
dec
dec
mov
pop
and
mov
mov
xchg
sti
movs
xchg
jl
pop
inc
(bad)
xor
fistp
cmc
mov
daa
loop
(bad)
mov
xchg
sbb
icebp
scas
mov
pop
inc
lods
in
test
stos
cmp
in
(bad)
dec
outs
or
jg
push
pop
int
ja
in
fsubr
mov
sbb
inc
in
add
cli
xchg
dec
xor
mov
int3
jns
cmp
mov
clc
dec
cdq
sbb
les
inc
scas
cs
pop
ret
idiv
and
imul
lock
mov
fistp
mov
sbb
cmp
cwde
(bad)
xchg
int
jecxz
imul
adc
inc
mov
scas
aaa
pop
inc
(bad)
mov
or
pop
std
jb
stos
(bad)
sub
mov
sub
mov
pop
(bad)
cli
or
jl
cld
and
and
sbb
mov
adc
mov
xchg
cmp
xchg
xchg
cmps
(bad)
jmp
pop
pop
sbb
aas
pop
push
jmp
sub
sub
push
and
push
ins
mov
mov
leave
dec
ds
fs
dec
adc
jns
push
dec
(bad)
mov
sti
xchg
out
in
add
sbb
push
aaa
push
mov
(bad)
repz
xchg
xor
sbb
jo
cmp
in
mov
mov
sbb
dec
xchg
(bad)
cli
ror
out
mov
xchg
push
fisub
pop
push
gs
pop
sub
sbb
mov
sub
push
(bad)
xchg
idiv
jnp
push
jbe
test
enter
ret
jo
cmp
mov
sti
mov
add
or
dec
(bad)
pushf
mov
loopne
adc
mov
rcr
add
inc
in
in
or
fwait
xor
inc
aas
push
test
sub
mov
or
les
and
fdiv
das
push
(bad)
push
ss
mov
or
loop
test
mov
das
inc
outs
xlat
movs
js
inc
shr
int
dec
mov
cmp
xchg
aad
push
stc
loop
fidiv
pop
dec
fstp
mov
lods
fisubr
hlt
mov
fisub
sbb
dec
lods
lds
xchg
jle
push
jbe
mov
dec
sub
popf
movs
shr
mov
sbb
xor
dec
fwait
sub
out
js
push
cmp
pop
retf
std
pop
adc
and
cld
mov
das
or
mov
mov
loopne
add
mov
and
aad
xchg
(bad)
push
xor
pop
and
pop
loopne
push
les
sbb
pop
adc
lock
add
xor
daa
stos
sub
push
ror
add
and
stos
mov
inc
sbb
lea
inc
hlt
jno
inc
inc
iret
imul
sbb
jbe
outs
cmps
mov
repnz
cmc
(bad)
mov
loop
call
inc
retf
icebp
pop
push
xchg
push
jb
and
mov
fmul
sub
pop
xchg
xchg
jmp
and
data16
bndstx
and
fistp
cwde
adc
or
mov
out
stc
enter
fwait
(bad)
fdivrp
mov
pushf
(bad)
sahf
mov
test
sar
mov
(bad)
pop
xchg
mov
push
adc
mov
clc
jmp
pop
xor
test
out
mov
mul
mov
out
cdq
sbb
mov
ins
aas
mov
int
jb
mov
cmps
stos
mov
loopne
xchg
rol
mov
and
movs
fstp
inc
repz
inc
mov
dec
dec
sub
inc
clc
hlt
and
adc
ja
mov
sub
scas
imul
cmp
fdivr
not
pushf
cmp
repnz
aad
outs
loope
mov
sub
call
aaa
xchg
stos
xchg
repz
test
dec
inc
bound
mov
cmp
jg
inc
cmp
mov
std
icebp
clc
bound
sti
cmp
jo
xor
adc
inc
adc
push
jo
cmp
call
scas
ret
inc
or
les
in
push
mov
and
lods
imul
push
les
ds
sti
pop
dec
loop
push
ins
idiv
add
add
into
push
jae
xchg
and
stc
and
call
push
lods
scas
and
jb
jp
repz
sbb
sbb
jmp
shr
jp
dec
sti
repnz
cmp
clc
push
sub
mov
ins
jo
and
div
mov
adc
rol
dec
inc
jne
sub
(bad)
cmps
mov
sbb
mov
push
xchg
jl
mov
push
add
dec
aaa
jo
mov
imul
mov
xchg
jge
out
stc
enter
das
jo
jl
cmp
inc
push
add
mov
add
cmp
dec
daa
lea
fisubr
das
and
jmp
out
dec
and
mov
jp
imul
in
enter
pop
dec
pop
jns
and
mov
rcl
mov
popw
jg
cmp
fidiv
stc
cdq
ja
inc
mov
retf
bound
call
dec
jo
mov
cli
faddp
gs
bound
add
repz
int3
int3
xor
jecxz
cmps
sbb
sub
mov
mov
cmp
fwait
adc
xchg
retf
push
mov
jne
dec
imul
(bad)
retf
mov
dec
cld
in
or
cdq
dec
adc
add
jo
mov
and
mov
xor
call
outs
xchg
icebp
inc
adc
add
ins
fcmovnbe
sti
mov
sub
inc
mov
aas
fwait
ja
sbb
out
sar
add
mov
mov
mov
push
es
cdq
les
retf
or
sbb
test
out
fcmovnbe
aad
dec
jno
(bad)
repnz
test
cmp
inc
and
cwde
push
(bad)
cli
sbb
pop
pusha
mov
pop
inc
gs
sbb
xor
sub
movs
sti
call
dec
cdq
sbb
push
je
push
jnp
arpl
cmp
mov
adc
movs
push
xchg
ins
xchg
pop
push
push
inc
sahf
xor
pop
mov
pop
fsubr
mov
mov
leave
int
js
cdq
out
add
jbe
out
push
mov
cmp
xchg
ja
sbb
dec
xchg
inc
daa
pop
add
clc
test
jns
aas
adc
and
jno
mov
lods
loop
test
shl
sub
add
and
mov
pop
mov
retf
call
sbb
retf
xchg
pop
popf
daa
xchg
aaa
adc
(bad)
jno
adc
pop
fisub
daa
fild
and
mov
xor
sub
in
or
and
and
cmc
movs
jno
xor
inc
adc
fiadd
add
push
fwait
xor
pop
or
xor
hlt
fsubr
mov
adc
and
stos
in
fidiv
pop
sub
aam
imul
and
xor
push
pop
pop
out
jae
sbb
jo
fstp
or
jg
sbb
hlt
or
cs
push
jl
xlat
dec
fwait
sbb
cli
ins
dec
push
push
sti
cmp
jecxz
scas
mov
and
adc
and
les
repnz
loop
adc
push
out
xor
or
push
push
add
xchg
test
ins
xchg
nop
jno
sti
fst
or
lods
adc
cmps
movs
cmp
mov
xor
sub
xchg
cmp
pushf
sbb
cmp
dec
add
(bad)
mov
jg
sub
push
ror
(bad)
repz
xchg
sub
loop
(bad)
mov
mov
jmp
cdq
paddusw
dec
or
clc
stos
fisubr
jecxz
rcl
cmc
jge
dec
ss
test
fwait
inc
outs
jp
xchg
test
cmp
lahf
pop
sub
sbb
fcomp
mov
sub
inc
aas
inc
sbb
rcl
xchg
ds
aas
hlt
xchg
push
pop
out
gs
shr
scas
stos
idiv
mov
sbb
inc
call
(bad)
bnd
cld
cmp
test
or
cs
jnp
retf
loop
cdq
lods
jge
dec
int
sbb
inc
adc
(bad)
sub
movs
inc
js
add
in
cwde
adc
shl
adc
call
mov
fisubr
xor
repnz
mov
fld
xchg
inc
lods
in
lea
aam
mov
xor
xchg
js
inc
call
jbe
lods
xor
(bad)
int
inc
call
push
jo
pop
lds
jl
std
adc
jl
sbb
sbb
push
mov
popa
inc
aas
and
dec
sub
or
daa
mov
out
pop
aaa
and
push
cdq
pop
jnp
sbb
cdq
in
adc
jb
lods
sub
icebp
(bad)
cmp
mov
dec
push
fstp
cli
jno
imul
pusha
push
jo
icebp
xchg
movs
adc
inc
push
das
or
loopne
add
adc
sub
jns
xchg
stc
mov
stos
fst
sub
pop
add
fistp
pop
ds
xchg
cli
mov
jbe
test
aas
cmp
not
movs
std
sub
mov
sub
pop
jl
jle
mov
std
in
lods
xor
ins
push
repz
loop
or
push
dec
adc
xor
sbb
jns
(bad)
call
ins
out
cmp
fdivr
scas
inc
loope
jbe
add
aam
add
pop
mov
cmp
dec
(bad)
sti
sub
rol
adc
xchg
or
stos
cli
aad
fist
xlat
jo
stc
push
ds
and
jne
daa
xor
cmp
hlt
inc
retf
sbb
add
clc
pop
cmps
mov
arpl
movups
loop
jmp
or
mov
jo
sbb
leave
in
enter
or
push
popf
fst
add
push
push
and
(bad)
fiadd
repz
retf
ds
add
test
(bad)
aam
js
data16
cmp
(bad)
and
or
lea
int3
int3
pop
fcompp
add
push
or
push
cmp
mov
shr
retf
fwait
into
fsubr
mov
out
out
and
jmp
fidiv
enter
mov
jle
pop
push
inc
imul
pop
fidiv
pushf
pop
mov
fldcw
cmp
and
sbb
ss
xor
je
xchg
jecxz
mov
adc
jb
scas
sub
test
sub
and
fldenv
and
vphaddbq
push
mov
loopne
pop
(bad)
adc
repz
nop
sbb
add
mov
scas
test
loopne
jp
mov
pop
jnp
outs
push
hlt
or
dec
ret
push
stos
out
je
push
dec
outs
push
mov
outs
pop
and
ja
pop
sub
inc
add
ret
adc
ret
push
inc
mov
out
retf
adc
pop
lods
fsub
pop
jne
jge
sti
mov
out
icebp
mov
or
mov
jge
in
rol
and
push
cmp
ins
xchg
cmps
push
in
lock
retf
bound
sbb
push
jae
mov
popf
ins
dec
enter
jmp
out
dec
test
xchg
pop
or
out
sub
or
and
and
in
shl
jecxz
sti
cmp
fisttp
mov
test
add
sbb
add
movs
ins
inc
inc
aaa
xor
fdiv
pop
push
xchg
imul
mov
fsubr
fistp
cmc
or
mov
sub
cdq
repz
inc
scas
dec
cmps
cwde
(bad)
into
loopne
or
inc
rcl
fisubr
mov
sub
je
inc
push
and
test
loope
not
xacquire
inc
call
pop
retf
js
inc
add
cmps
fst
pop
ja
or
movs
ins
push
push
inc
lahf
xor
lock
loop
in
jecxz
scas
ret
xor
and
jecxz
or
imul
push
jmp
add
pop
lods
sbb
mov
sub
lods
mov
pop
inc
fist
ss
mov
jbe
clc
addr16
pop
cdq
test
fbld
push
ja
lods
push
dec
lds
nop
fsub
cs
ins
push
in
jne
adc
scas
ret
dec
enter
rol
add
add
loop
jmp
or
dec
xlat
mov
stos
mov
mov
aaa
xchg
shl
or
fsubp
call
dec
add
sahf
cmp
jl
pop
jno
inc
mov
ret
fst
movs
ret
pop
inc
sbb
icebp
xchg
les
jle
or
aas
jbe
inc
xchg
fst
pop
ja
or
mov
pop
je
imul
push
mov
adc
mov
popf
pop
ss
mov
inc
rcr
xchg
test
shl
xor
cwde
movs
ror
inc
test
fwait
and
or
hlt
jp
push
or
mov
sub
scas
mov
jae
movs
cli
sti
mov
clc
add
jmp
inc
cmp
test
jle
addr16
outs
mov
cmps
das
sahf
push
jg
xor
nop
out
dec
xlat
adc
lock
xchg
or
sbb
mov
xchg
fsub
retf
repz
(bad)
out
xor
sbb
stos
fmul
shl
push
in
cs
psubsb
adc
cmp
jns
sbb
test
push
cwde
sbb
lock
sub
aam
cwde
mov
cmp
dec
cdq
ficom
cmps
dec
mov
mov
add
push
dec
adc
ss
stos
mov
sar
(bad)
jmp
lds
inc
dec
ja
lods
lods
jl
lods
(bad)
addr16
mov
ret
ins
loopne
xor
out
dec
arpl
fcomp
mov
test
jecxz
sub
neg
jb
lods
sub
rol
mov
in
and
or
push
push
in
pop
cmp
mov
push
popa
and
add
movs
push
imul
push
das
push
jle
movs
mov
xlat
push
pop
adc
hlt
mov
das
lods
icebp
dec
mov
shl
adc
call
cmp
leave
(bad)
gs
or
inc
rcl
fimul
stos
pop
sub
je
mov
xor
ror
mov
or
dec
in
push
mov
shr
or
(bad)
push
ins
outs
push
rep
fbstp
and
arpl
jmp
xchg
pushf
adc
adc
stc
daa
mov
ret
(bad)
repz
cli
jl
xchg
hlt
mov
fidiv
in
mov
scas
dec
push
xchg
lods
push
jo
mov
mov
in
(bad)
jcxz
lea
stc
inc
out
inc
mov
add
nop
data16
in
and
mov
sti
mov
clc
add
cmp
sar
cmp
std
pop
ins
xchg
mov
pushf
fmul
cmp
in
jp
adc
(bad)
fwait
in
push
in
lahf
xchg
cdq
adc
or
into
xor
sub
push
aas
and
lods
loope
xor
cdq
gs
push
loope
in
int
sbb
mov
xchg
xor
fs
inc
xlat
jg
mov
inc
sub
dec
pop
arpl
(bad)
repnz
sub
pop
test
repz
jo
xchg
outs
lock
inc
icebp
lods
mov
fsubr
xor
lock
scas
jl
xchg
je
xchg
mov
fcmovnbe
punpcklwd
inc
call
or
fsub
cwde
dec
or
sbb
jmp
hlt
push
nop
hlt
jp
push
mov
jle
cmp
cmps
ss
ja
es
push
jecxz
xor
cmp
inc
popf
xor
shl
dec
imul
xchg
fwait
cld
std
mov
push
movs
imul
ins
mov
dec
pop
out
inc
pop
sbb
pop
mov
push
test
shr
fadd
scas
xchg
sub
sbb
push
(bad)
fadd
add
ss
lds
test
push
out
test
dec
out
out
inc
aam
add
pop
dec
js
mov
scas
mov
xor
xchg
mov
push
ja
lahf
ss
cli
loop
push
sti
adc
jg
jg
icebp
xchg
daa
repz
pop
mov
dec
pop
or
cmp
ret
out
lock
cmc
pop
retf
retf
mov
int3
int
mov
or
ss
and
push
stos
xchg
or
iret
jg
mov
xor
sbb
clc
push
ins
movs
cli
lea
mov
inc
jl
mov
dec
fadd
rcr
mov
retf
mov
mov
push
push
add
int3
xchg
pop
(bad)
in
bound
outs
cmc
dec
ss
fstp
das
movs
add
pushf
shr
add
xchg
int
mov
xchg
inc
xchg
in
mov
movs
ret
pop
inc
cwde
or
jnp
jo
popf
ror
sbb
mov
cmps
sbb
fadd
or
adc
ss
call
jnp
ficomp
mov
bound
push
fsubr
push
mov
retf
push
jbe
xchg
inc
jl
daa
mov
in
adc
das
scas
jae
cmp
inc
mov
outs
in
sahf
punpcklbw
call
xchg
scas
aaa
mov
xor
out
cli
sti
into
inc
jae
fisttp
clc
mov
xchg
stos
inc
test
(bad)
jns
add
xor
jmp
xor
xor
mov
jnp
lock
or
mov
(bad)
and
sbb
mov
pop
scas
and
mov
mov
out
fld
test
fwait
retf
lahf
cli
push
ficom
fs
mov
pop
inc
aam
mov
xor
cmp
xlat
and
jge
popf
mov
add
icebp
mov
je
loopne
(bad)
adc
inc
or
or
cmp
call
inc
adc
out
es
ins
rcl
shl
aaa
dec
push
mov
mov
dec
xchg
sti
mov
aad
pop
sub
bound
pop
aas
adc
add
push
push
dec
retf
lods
sub
mov
pop
retf
out
sbb
cmps
cli
jno
imul
stos
ret
push
adc
cld
aad
add
fptan
jae
inc
push
pop
and
bound
pop
ret
and
mov
in
pop
dec
cmps
movs
(bad)
adc
xchg
outs
push
call
je
xchg
loopne
dec
pop
ds
add
xchg
int
sbb
fidiv
xchg
out
and
xor
in
dec
repnz
mov
shr
mov
adc
xor
int3
repz
aaa
aaa
cmps
sbb
out
lock
mov
out
das
add
dec
cmp
push
sbb
scas
sub
cmps
add
outs
sbb
sbb
sub
sub
out
cmps
inc
sar
aas
cwde
jae
int
xchg
test
hlt
jne
nop
hlt
or
adc
enter
lahf
jo
push
mov
scas
stos
arpl
shr
int3
(bad)
rol
pop
or
inc
jle
mov
cmp
in
jns
cmps
or
push
and
dec
ins
int3
les
fild
mov
enter
das
inc
dec
stos
in
cwde
hlt
gs
ja
adc
inc
and
sbb
call
push
out
and
cdq
inc
in
inc
movs
stos
add
push
addr16
std
xchg
mov
pop
fisubr
jo
test
pop
mov
and
dec
idiv
call
mov
mov
pop
loop
cli
cmp
lds
add
add
adc
(bad)
daa
fcmove
mov
lods
cmp
lea
push
mov
xchg
gs
pop
sub
mov
out
xor
shr
bound
clc
xor
mov
add
stc
enter
sub
std
xchg
aad
fistp
sbb
push
push
cli
jno
imul
mov
ret
inc
or
pop
inc
rcr
leave
outs
jnp
cmps
rcl
popa
movs
retf
loopne
ins
dec
scas
dec
outs
push
jmp
cmps
and
cmps
cdq
loope
pop
out
xchg
dec
fsub
xchg
and
and
or
in
pop
fistp
sbb
rcr
adc
jmp
aas
js
sbb
mov
retf
push
pop
push
fs
inc
mov
sbb
push
xlat
fidiv
(bad)
xchg
mov
inc
xor
add
push
cli
out
call
dec
fdivr
daa
fwait
add
mov
dec
movs
mov
lds
push
xchg
imul
cmc
and
sahf
dec
mov
add
dec
fbstp
das
mov
cmp
mov
in
mov
or
push
cs
inc
gs
push
aas
jo
or
clc
dec
push
fld
mov
add
mov
sbb
ret
inc
mov
call
add
cmc
sbb
jmp
inc
inc
mov
out
icebp
das
sub
(bad)
adc
push
and
and
jl
adc
fcmovu
add
cs
gs
pushf
or
push
xor
and
lods
push
stos
xor
loop
test
cld
and
fs
cwde
mov
mov
add
push
les
adc
mov
sbb
lods
jmp
mov
in
(bad)
loope
jae
outs
je
das
not
push
(bad)
repz
pop
ret
mov
ds
jecxz
or
inc
(bad)
cmp
ret
sbb
lds
daa
mov
leave
mov
mov
in
or
cmps
leave
push
mov
scas
mov
mov
in
and
push
pop
fsubr
or
mov
push
loope
mov
jns
cmp
sbb
mov
mov
mov
lock
sbb
dec
cmps
mov
xor
and
out
push
aas
mov
gs
enter
add
cdq
jae
fs
(bad)
ds
stos
jns
(bad)
xchg
xchg
test
mov
cmp
dec
sub
(bad)
push
movs
repz
or
int3
inc
call
jne
cmc
cdq
adc
push
lock
mov
test
fdiv
pop
jecxz
daa
or
push
aaa
shl
xchg
push
inc
loope
jbe
outs
sub
pop
mov
cmp
or
rol
jb
xchg
ss
sub
retf
test
add
ret
in
push
mov
(bad)
fdivp
cmp
adc
pop
outs
add
(bad)
mul
push
cmp
test
rcr
test
icebp
jl
xor
jae
adc
hlt
outs
xor
adc
loop
icebp
cs
xchg
fstp
add
push
shl
dec
dec
push
fmul
pop
and
psubsb
push
into
cmp
out
and
movs
rol
test
repnz
movs
js
jle
jnp
jge
aaa
mov
xor
mov
repz
or
push
cli
out
xor
adc
jg
addr16
pop
stos
push
push
in
inc
mov
inc
mov
bound
in
jecxz
or
cmc
pop
retf
sbb
push
mov
jae
push
int
fidiv
jne
xchg
aaa
imul
mov
sub
dec
or
sub
ret
icebp
xchg
aad
in
pop
imul
fsub
enter
pop
jno
add
xor
not
inc
jle
cmp
jne
in
aad
cmc
xchg
inc
xor
mov
pop
in
stos
(bad)
dec
mov
sub
pop
shr
xchg
mov
sub
add
fild
mov
sub
test
sar
xchg
xor
gs
push
aam
js
sbb
outs
pop
dec
xor
mov
cli
xchg
and
xchg
dec
sbb
push
jns
cmc
xlat
mov
push
jo
arpl
add
or
jl
stc
adc
jge
jecxz
cmp
popf
shl
aas
bound
in
and
push
inc
imul
pop
xchg
add
pop
mov
dec
push
stc
out
xor
mov
sbb
int
adc
xchg
push
nop
hlt
sbb
test
inc
or
int
scas
and
out
or
sbb
sti
cmp
or
jmp
xor
(bad)
data16
or
inc
ja
push
das
aam
std
xchg
xor
pop
mov
add
pop
sbb
shl
mov
pop
fmul
jns
out
popf
sbb
mov
xor
cmp
cmp
jne
push
xor
and
jno
sar
outs
mov
loopne
and
sar
xchg
gs
jg
dec
sub
push
or
sbb
xor
cwde
xchg
sbb
in
sbb
mov
retf
push
lea
jae
pop
jecxz
sar
push
cmp
ret
addr16
jp
ret
out
jo
sub
and
ret
test
aas
jo
inc
fidivr
aaa
mov
(bad)
mov
adc
mov
fimul
retf
mov
shr
ins
in
rol
mov
sahf
je
mov
loopne
and
(bad)
data16
ror
shr
mov
push
das
sahf
(bad)
or
xor
test
adc
rcr
pop
pop
dec
cmps
pop
jecxz
aaa
mov
sub
out
jo
add
mov
int3
mov
iret
push
in
(bad)
out
lahf
xor
and
dec
xor
dec
push
test
sub
mov
push
or
mov
sub
or
enter
xchg
mov
mov
xor
jbe
or
pop
mov
xor
fs
mul
aas
out
sub
mov
sub
stos
(bad)
sbb
rcr
mov
mov
cdq
mov
bswap
repz
test
pop
(bad)
jmp
movs
dec
cld
call
pop
jecxz
fbstp
inc
xlat
retf
pop
mov
or
mov
ret
stos
push
cli
fnstsw
inc
in
ins
aas
fwait
ja
cmp
mov
(bad)
ins
int3
mov
addr16
inc
xor
in
shld
daa
stos
ins
bound
inc
cmp
shl
adc
adc
or
xchg
das
movs
xchg
sub
add
add
movs
fisubr
into
jno
enter
shl
and
dec
mov
sub
test
mov
push
add
fisubr
fiadd
es
inc
div
out
cmps
push
mov
push
and
or
ins
mov
or
ret
fs
add
std
(bad)
mov
dec
sub
pop
xlat
cmp
popa
inc
idiv
pop
dec
xchg
cdq
lock
or
mov
lods
leave
xor
(bad)
and
sbb
nop
jge
or
mov
add
in
scas
dec
clc
xlat
movs
cli
sti
mov
out
xor
add
mov
sub
add
les
movs
xchg
inc
and
xor
fist
mov
jmp
(bad)
mov
ss
inc
xchg
loop
adc
mov
add
sbb
fsub
rol
xor
sti
and
mov
dec
mov
xchg
movs
fwait
xor
inc
fwait
bound
fiadd
or
fxch
mov
(bad)
int3
mov
int3
sbb
add
std
add
jl
push
(bad)
fbld
hlt
add
cmp
or
mov
mov
popf
sar
mov
jbe
ins
sub
shl
push
inc
push
jae
mov
stc
inc
adc
pop
push
mov
lds
not
mov
ins
inc
lods
sub
mov
push
vunpcklps
movs
outs
add
outs
xor
add
mov
push
ja
pop
lahf
outs
jge
push
mov
lea
shr
loopne
lahf
or
pop
gs
xchg
xlat
shr
xor
adc
es
add
pop
(bad)
es
add
sub
test
or
jnp
out
xchg
leave
lock
cwde
movs
add
cmc
mov
pop
cmp
add
and
xor
push
pop
fcompp
add
pusha
dec
or
clc
dec
adc
push
cmc
push
pop
fsubr
outs
in
inc
and
push
or
ss
imul
popa
retf
jle
xor
ret
cli
pop
or
dec
int
enter
cmp
icebp
loop
out
mov
nop
hlt
xchg
push
xchg
inc
lods
bound
push
add
in
outs
mov
sbb
mov
inc
cmp
rcr
or
add
add
(bad)
shr
jae
sub
jl
pop
push
das
sahf
inc
dec
sub
dec
sub
fisttp
sbb
push
cmps
inc
pop
adc
xchg
jns
add
stos
jmp
cs
pop
cmp
cmp
mov
pop
and
fwait
into
adc
xchg
dec
into
mov
add
out
and
and
pusha
mov
push
mov
inc
jns
or
xor
jns
and
add
stos
sbb
or
xchg
pop
mov
inc
(bad)
icebp
jno
arpl
in
or
popf
rol
dec
push
mov
bound
sub
jmp
mov
mov
repnz
fcomp
lods
mov
xchg
and
(bad)
iret
or
add
outs
jmp
add
dec
push
ss
adc
gs
pop
aas
push
jecxz
add
and
and
sbb
jo
cli
sti
cmp
sti
popf
fstp
dec
or
shr
fs
int
leave
lds
loop
adc
push
movs
push
mov
outs
test
out
and
sub
shl
loope
aas
jmp
call
add
cld
fcmovnbe
fnsave
stos
push
dec
jge
jp
iret
xor
jo
popf
and
frstor
add
fadd
add
icebp
mov
and
inc
pop
jb
mov
in
cmps
sbb
fs
sbb
jg
addr16
data16
aam
sub
fstp
imul
dec
mov
cmp
xchg
or
nop
xchg
setge
mov
retf
movs
pop
movs
mov
pop
dec
fmul
fnstcw
enter
mov
sub
mov
cli
ss
mov
mov
push
adc
lea
aam
(bad)
mul
push
in
std
inc
pop
jle
(bad)
(bad)
data16
or
mov
cld
sbb
xor
inc
lea
jecxz
xchg
in
mov
or
jne
sti
retf
sbb
daa
adc
mov
icebp
push
xchg
daa
fucomip
pop
stos
cmp
(bad)
hlt
xchg
xor
rcl
jns
and
mov
add
mov
and
(bad)
es
inc
sbb
(bad)
repz
jo
mov
ret
sar
cdq
clc
daa
je
jnp
aam
cmp
out
repz
mov
jne
jnp
ins
push
fiadd
jp
(bad)
add
pusha
pop
mov
cmp
or
rol
jb
xchg
ss
xor
jmp
scas
add
ss
push
mov
(bad)
fdivp
cmp
adc
pop
outs
add
(bad)
repz
push
cmp
test
rcr
test
icebp
jl
xor
retf
dec
adc
hlt
outs
xor
adc
loop
icebp
cs
xchg
fstp
add
adc
sbb
xchg
and
stos
cmp
mov
push
jnp
adc
stc
test
mov
outs
enter
or
push
mov
mov
clc
jecxz
sbb
push
loop
or
movs
addr16
aad
dec
mov
fdivr
jge
ins
jge
dec
aam
push
and
xor
and
jle
mov
jp
aam
lock
dec
pop
push
adc
mov
add
pop
inc
fild
ss
in
cmp
out
mov
nop
hlt
repz
sub
mov
scas
sbb
daa
mov
sti
mov
out
dec
mov
mov
add
dec
cmp
inc
fs
div
push
movs
jno
mov
dec
sub
sahf
pop
dec
xchg
fcmovbe
mov
aaa
xchg
cdq
jne
retf
xchg
into
aam
sub
movs
dec
mov
fistp
sub
jno
rcr
iret
cmp
sub
mov
adc
inc
aam
push
cmp
jo
mov
sar
mov
cmp
sbb
push
mov
sahf
test
add
dec
shr
int
fsub
jmp
and
mov
xor
xchg
sar
in
imul
sahf
xor
call
mov
mov
mov
sbb
nop
ds
lods
sub
stc
xchg
aad
sahf
ja
adc
inc
nop
or
cmps
cli
sti
cmp
sti
mov
bnd
xchg
cmp
sar
cmp
std
pop
je
shl
jne
loope
(bad)
xchg
cmc
xchg
inc
cmc
xor
shr
mov
in
dec
sub
es
cdq
rcl
or
or
xchg
adc
icebp
scas
mov
pop
pop
or
and
xchg
stos
sub
cmp
xchg
jmp
mov
xor
mov
das
fiadd
mov
sbb
lods
sub
push
loop
movs
mov
ja
loop
pop
repnz
das
mov
test
into
inc
adc
aam
jb
cs
cmp
inc
ins
sub
lock
gs
mov
xor
inc
push
jae
add
shl
aaa
sbb
jae
xchg
imul
mov
adc
sub
ficomp
mov
sbb
push
in
test
cld
ss
imul
dec
mov
sub
cmps
ins
ja
outs
mov
test
test
dec
adc
mov
das
mov
aaa
xchg
jns
je
push
stos
loopne
adc
xchg
mov
movs
fucompp
out
jne
cdq
stos
mov
shl
sbb
push
stos
(bad)
cmp
out
xchg
rcr
dec
(bad)
mov
mov
pop
dec
repnz
jnp
inc
cs
mov
fisubr
adc
push
loope
sar
mov
mov
cwde
std
dec
dec
push
jo
push
in
imul
lock
retf
ins
add
pop
sub
sbb
std
adc
mov
(bad)
mov
fcmovbe
pop
and
test
pop
add
stc
inc
out
scas
mov
add
sub
clc
das
adc
lock
aad
ret
inc
and
jno
add
push
dec
fs
fs
inc
push
gs
cmc
xchg
xor
ins
lock
test
sahf
pop
pop
push
cmp
mov
and
shr
and
movs
dec
movs
out
pop
int
add
jne
shl
dec
pop
and
daa
ficomp
mov
sub
xor
inc
out
pop
push
adc
in
add
pop
dec
xor
mov
enter
jge
inc
int3
int3
push
rcr
push
repz
pop
lea
push
jo
push
fild
add
hlt
daa
into
or
lahf
js
push
bound
shl
pop
xlat
sbb
repz
push
gs
pop
mov
sub
sbb
cmp
xor
mov
xchg
popf
mov
xchg
hlt
xchg
push
push
mov
call
rcr
mov
mov
jp
fsubr
or
mov
mov
add
sti
push
add
sbb
adc
shl
inc
sti
inc
int3
mov
fdiv
pop
imul
mov
cmp
jl
push
call
adc
push
movs
call
cmps
inc
pop
and
mov
sar
mov
sbb
out
test
dec
xor
daa
sub
jge
dec
and
xor
pop
jne
push
xor
movs
dec
test
test
sub
test
aam
cmp
in
lds
mov
jle
adc
add
jmp
sbb
stc
cwde
imul
clc
sar
aas
cwde
push
stos
int
xchg
test
hlt
adc
jmp
jae
cmps
xchg
aad
(bad)
xor
sbb
rol
dec
mov
xor
cli
adc
or
cmp
ins
and
leave
rol
(bad)
lods
cmp
mov
add
int3
mov
aam
and
shr
movs
inc
push
fisttp
shr
add
pushf
mov
enter
gs
sbb
inc
fldcw
(bad)
xchg
xor
test
xor
iret
mov
adc
cli
mov
and
or
or
clc
sbb
clc
jecxz
xchg
std
loope
jne
dec
lods
sti
scas
push
lods
or
clc
sub
test
inc
jns
rcr
ret
js
xchg
mov
enter
push
aam
jb
neg
pop
repz
sub
sar
leave
cmp
int
call
push
pop
nop
jle
push
xor
push
dec
(bad)
stos
pop
mov
fld
inc
sbb
push
in
adc
test
lds
shl
cli
and
test
das
sahf
addr16
div
mov
sar
xchg
mov
and
nop
jno
sti
fst
sub
mov
das
movs
hlt
xchg
pop
mov
inc
add
add
mov
pop
and
mov
mov
xchg
mov
pop
push
sub
(bad)
movs
rol
mov
rcr
(bad)
bnd
lods
int
adc
xor
int
jne
mov
ds
loope
pop
call
add
adc
sbb
(bad)
dec
mov
lods
dec
ins
pop
rcl
rcr
push
jl
mov
mov
ret
pushf
nop
mov
movs
(bad)
(bad)
mov
int
mov
pop
mov
push
ficomp
fistp
sub
ds
mov
and
std
sub
jecxz
in
jno
imul
adc
or
data16
or
mov
in
adc
sahf
push
cmc
sbb
mov
jbe
out
stos
add
retf
xchg
outs
push
call
adc
outs
shl
mov
sub
push
xchg
and
lods
test
xor
iret
mov
enter
dec
repnz
mov
shr
xlat
jle
ror
jl
sbb
mov
pop
ja
cmc
mov
adc
or
or
cmp
and
outs
sar
and
bound
movs
dec
in
cld
pop
cmc
je
sub
push
pop
sub
popf
mov
sbb
and
sbb
out
pop
pushf
out
outs
test
cli
ror
mov
mov
push
add
add
jne
jns
adc
cmp
pop
imul
fcmovu
mul
push
xchg
sub
sub
shl
icebp
adc
fs
mov
aad
dec
add
sub
push
mov
pop
and
popa
mov
aas
in
and
int3
repz
mov
cdq
stos
test
jo
test
pop
mov
sub
and
(bad)
mov
mov
js
push
aaa
push
pop
int3
inc
test
pop
loop
or
push
stos
sbb
(bad)
xlat
jae
es
and
mov
xchg
jne
push
mov
push
rcl
ret
mov
outs
adc
mov
push
(bad)
pusha
xor
xor
std
pop
mov
imul
sar
mov
mov
sub
ja
adc
lods
cli
sti
xchg
jmp
clc
test
jns
aaa
mov
add
(bad)
pop
popa
cli
or
fdiv
sbb
mov
mov
and
out
xor
test
adc
imul
fyl2x
popa
dec
(bad)
xlat
shr
retf
or
or
out
das
movs
hlt
xchg
fs
sub
jne
jge
stc
movs
and
mov
lds
rol
aam
add
pop
dec
js
mov
jno
push
aaa
ss
ficomp
sbb
push
jns
cmc
push
(bad)
jbe
inc
sub
add
fwait
pop
loop
in
jmp
mov
neg
hlt
sub
lds
fmul
adc
stos
push
xchg
ins
aam
cmc
aad
jbe
(bad)
sub
ss
cwde
imul
js
dec
(bad)
cmp
inc
xor
or
push
pop
add
adc
or
sbb
stc
inc
gs
pop
mov
mov
sti
add
stc
sti
mov
out
test
inc
pop
jo
mov
icebp
fdivr
movs
adc
mov
das
call
fstp
mov
sbb
dec
mov
push
sbb
push
cmp
push
data16
and
xor
sub
mov
icebp
jmp
ret
loope
jl
popf
daa
inc
inc
fwait
(bad)
les
jle
mov
int
or
jecxz
push
jns
cmc
ins
stos
mov
nop
movs
clc
dec
pop
or
add
mov
movs
inc
and
popf
fsub
fdivr
call
or
imul
imul
sahf
call
dec
sub
sub
shl
ins
fnstsw
mov
das
test
rdtsc
stos
(bad)
mov
retf
add
in
scas
dec
out
div
inc
add
hlt
sti
popf
jno
sahf
hlt
sub
inc
jle
mov
sub
push
fsub
adc
div
pushf
fmul
dec
or
lods
test
int
in
movs
scas
int3
loop
xchg
adc
in
fsubr
fstp
pushf
xor
int
shl
adc
inc
rcl
fiadd
pop
sub
inc
add
test
out
aam
js
call
and
call
pop
jb
sbb
movs
in
inc
mov
mov
jae
loop
pop
in
cmp
ror
cmc
clc
jb
outs
nop
fsubr
ins
popf
pop
(bad)
pop
pop
xchg
cmp
int
data16
movlps
and
dec
ret
(bad)
or
pop
adc
sub
inc
ja
mov
and
push
pop
xchg
mov
adc
xchg
arpl
adc
rcl
out
push
mov
jno
jle
cdq
dec
(bad)
data16
icebp
mov
sar
fwait
aaa
outs
mov
add
or
jle
push
mov
lock
sbb
cmp
jns
sub
in
pop
rol
arpl
or
rcr
xchg
and
pop
ds
retf
push
int
mov
adc
jecxz
imul
fcom
mov
adc
pop
lds
adc
fiadd
push
lea
loope
push
repz
pop
xchg
or
dec
jo
ja
push
scas
test
inc
mov
jge
mov
imul
or
cmp
pop
movs
jnp
sbb
gs
jp
inc
(bad)
mov
stos
(bad)
(bad)
xchg
mov
js
iret
sbb
add
xchg
and
clc
mov
inc
hlt
or
fwait
loop
out
pop
lods
mov
sub
out
jno
sbb
add
jl
les
test
push
aaa
jl
inc
pushf
sub
fcomi
xchg
mov
mov
out
aad
ror
or
icebp
add
inc
(bad)
jp
imul
loopne
es
cmp
cs
gs
inc
mov
push
in
cs
psubsb
jl
cmp
out
test
cmc
inc
stc
mov
mov
ins
mov
sbb
xchg
inc
xchg
mov
cwde
mov
gs
mov
and
lds
jle
mov
jl
std
xchg
cmp
or
lds
adc
imul
jp
fnsave
mov
cmp
cmps
fdiv
(bad)
mov
fidivr
lahf
cmc
sbb
sub
push
aad
aad
xlat
jo
loope
loopne
xchg
ss
and
sub
jno
and
add
dec
loopne
and
(bad)
data16
lock
sar
mov
inc
and
ins
scas
pop
out
xor
push
icebp
sahf
pop
dec
cmps
int
mov
fst
pop
cmp
repz
movs
add
in
fcmovnbe
sub
add
mov
and
test
xchg
mov
pop
push
sub
xlat
and
imul
add
or
(bad)
push
ror
rep
fbstp
and
arpl
sti
fucomp
arpl
or
pop
inc
mov
or
stos
adc
shr
sti
test
stos
retf
pop
mov
repnz
pop
adc
jns
or
jge
inc
js
iret
push
aas
mov
in
mov
xchg
fstp
jno
fisub
and
scas
pop
inc
mov
pop
jmp
stos
popa
and
cli
xor
ret
xchg
clc
cmp
test
loopne
sar
mov
inc
dec
leave
pop
test
popa
sub
loop
jo
mov
xlat
jmp
dec
sbb
daa
(bad)
cmps
fidiv
cli
or
in
into
leave
or
xlat
mov
push
enter
jo
mov
fdivrp
mov
adc
jb
and
(bad)
sbb
gs
mov
sub
add
dec
test
das
and
(bad)
fsub
hlt
dec
and
out
imul
dec
fmul
sub
cli
xor
add
ds
call
mov
leave
adc
dec
clc
sub
mov
cmp
or
nop
hlt
mov
out
inc
mov
cmc
adc
adc
inc
js
outs
sbb
clc
add
lea
sub
(bad)
leave
push
xchg
out
ds
push
jp
push
das
mov
jo
sub
icebp
pop
call
pop
shl
inc
into
ja
aaa
xchg
xchg
lahf
mov
sbb
xchg
pushf
jl
movs
fucompp
shr
add
and
mov
jle
cmp
out
mov
in
jmp
xor
mov
gs
sub
add
or
lea
(bad)
pusha
lods
repz
or
push
cli
cli
jg
out
adc
push
xchg
scas
xor
pop
push
mov
in
dec
and
popf
pop
ret
push
cmp
ins
push
inc
and
ds
add
dec
retf
dec
push
leave
pop
xor
mov
add
push
or
test
es
daa
les
or
or
mov
xor
cmp
rol
cmp
nop
xchg
fcomip
push
imul
inc
mov
cli
and
mov
mov
sub
aas
mov
movs
loopne
mov
addr16
jno
and
loop
xchg
ficomp
cli
movs
add
rcr
dec
inc
xchg
and
fwait
into
sub
rcr
mov
retf
shr
adc
mov
sub
mov
inc
inc
mov
cwde
jle
fldenv
cld
pop
jno
mov
mov
es
cli
adc
dec
add
in
das
add
mov
jb
adc
mov
sub
dec
shl
sbb
arpl
popa
gs
mov
xor
inc
push
jae
fsub
out
inc
or
(bad)
jno
(bad)
and
sbb
out
pop
add
stc
xlat
call
dec
and
shr
mov
fsqrt
neg
ret
test
or
jl
cmp
daa
sahf
push
xchg
adc
out
das
pop
cmp
lock
sar
and
(bad)
sbb
(bad)
mov
mov
loopne
pop
fisub
push
and
pop
jmp
xor
pop
mov
movs
push
adc
cli
xor
adc
push
jbe
or
push
div
int3
or
(bad)
push
repz
push
jo
push
cmp
or
fmul
jmp
fidivr
je
mov
imul
popa
pop
sub
mov
jae
lods
inc
adc
enter
repnz
xchg
and
xchg
in
jecxz
repz
jl
mov
stc
or
lods
sub
stc
push
out
pusha
and
out
sbb
out
repz
jp
cmp
(bad)
fmul
(bad)
sub
or
xor
cs
test
bound
pop
ret
push
xlat
stos
sub
pop
push
or
mov
and
or
outs
loop
nop
pop
fstp
xchg
jae
stos
out
xchg
inc
shl
mov
nop
pop
and
iret
add
push
sub
xor
out
test
dec
pop
xchg
mov
fnsave
xchg
jmp
scas
bound
aaa
mov
out
inc
sbb
fstp
into
push
or
clc
dec
adc
jb
push
pop
fsubr
inc
in
inc
and
stos
fnstenv
xchg
sub
in
imul
popa
inc
cmp
push
fdiv
pop
mov
jae
ins
hlt
psrld
mov
gs
add
or
out
aas
addr16
lods
sub
cs
add
mov
and
cld
adc
movs
in
test
jle
mov
adc
push
sub
pushf
jge
and
or
daa
sahf
push
loop
out
and
lahf
enter
pop
mov
pop
shl
fwait
rcr
and
or
outs
loop
mov
fstp
das
movs
dec
popf
out
pop
int
adc
jne
rcr
dec
pop
and
push
into
pop
sub
xor
maskmovq
test
mov
xchg
sbb
adc
repnz
xor
xor
mov
sub
retf
jb
test
fwait
outs
xor
outs
fiadd
lds
rol
or
imul
inc
xlat
sub
jns
or
(bad)
ret
adc
mov
sbb
leave
fld
pop
add
pop
sbb
sbb
mov
push
cmp
mov
xchg
xchg
push
and
and
scas
dec
clc
leave
jae
cli
sti
mov
out
inc
mov
cmp
lods
nop
sbb
push
movs
imul
sbb
aas
sahf
xchg
sbb
dec
sbb
in
fsubr
sbb
out
and
test
adc
aam
into
and
cli
push
jo
in
int
call
cmp
cwde
cwde
test
pop
inc
pop
inc
cwde
pop
mov
jnp
push
add
ins
mov
jae
pushf
pop
clc
jecxz
fld
dec
mov
dec
sahf
or
adc
fs
jecxz
daa
ror
lods
lods
jbe
adc
push
mov
mov
movs
jmp
les
mov
xchg
and
lea
ss
xchg
xor
cmp
aas
arpl
cwde
scas
push
aad
rcl
xlat
jo
std
push
mov
mov
shr
fnstcw
shl
(bad)
test
hlt
xchg
shl
stos
cmp
fwait
add
sbb
inc
cmc
mov
lods
das
sub
push
jmp
ret
mov
xchg
loop
je
xor
sbb
jbe
in
cmps
fabs
pop
dec
xchg
jne
call
sbb
aas
int
icebp
inc
xor
out
nop
mov
aad
mov
mov
js
(bad)
and
aam
push
std
push
and
int3
int3
jmp
out
pop
loop
mov
lds
push
push
pushf
mov
hlt
popa
mov
popf
inc
retf
mov
adc
dec
mov
mov
in
and
mov
cs
fsub
pop
inc
or
(bad)
mov
ficom
pop
std
repz
data16
xchg
mov
sub
call
cli
cmp
ja
cli
push
or
retf
stos
inc
add
stc
sub
jl
jo
aam
sti
add
push
add
sbb
and
cmp
sub
outs
push
call
idiv
mov
outs
aaa
fadd
pop
add
cmp
adc
mov
mov
repz
mov
add
push
cmps
int3
inc
mov
clc
xchg
pop
push
mov
ins
std
out
xchg
call
jg
xor
lock
in
in
jecxz
add
pusha
or
lds
in
imul
and
inc
xchg
call
ret
xchg
aam
pusha
push
mov
jnp
mov
xchg
std
repz
sbb
inc
fbld
rol
sub
and
es
cmp
push
dec
add
jo
inc
and
(bad)
not
mov
(bad)
in
jmp
cmp
lds
dec
xlat
push
and
xchg
jne
(bad)
(bad)
and
adc
xor
imul
xlat
shl
jb
dec
xchg
bound
and
push
fst
cdq
aam
sbb
push
cmp
clc
not
sbb
in
fadd
hlt
jno
sub
rcr
stc
inc
es
or
ss
cmps
into
sub
dec
dec
test
sahf
pop
inc
mov
pop
fimul
mov
in
popf
push
xchg
lahf
in
sbb
shl
xor
push
pop
push
xchg
push
jae
daa
cmp
(bad)
cmp
inc
lds
cmc
hlt
mov
and
stc
inc
sbb
sub
and
mov
ins
aad
call
sbb
loope
div
arpl
int3
mov
test
dec
push
das
sahf
and
pushf
dec
or
mov
dec
movs
out
and
mov
in
enter
aam
retf
jg
and
mov
shl
(bad)
fcom
hlt
test
retf
add
and
or
ret
leave
or
int3
add
in
jmp
cwde
xchg
outs
mov
xchg
mov
mov
mov
dec
sbb
(bad)
or
test
add
clc
ret
push
sar
dec
xlat
ins
jge
hlt
mov
(bad)
cmp
popa
sub
adc
retf
mov
cmp
cmp
enter
mov
cmp
addr16
stc
adc
fstp
add
or
imul
inc
dec
gs
fwait
(bad)
mov
push
das
adc
sti
xchg
jle
lea
sbb
rol
lock
push
faddp
adc
neg
push
cmp
out
and
push
pop
into
mov
aaa
xchg
xchg
rcr
add
sbb
ja
mov
xchg
and
lods
push
test
pop
xchg
mov
dec
xor
xor
jg
jns
popa
bound
mov
movs
ins
in
jle
stc
mov
je
xor
cmps
mov
jno
adc
mov
std
sbb
jecxz
mov
rol
inc
mov
pop
mov
xor
mov
into
movs
rcr
or
cmp
ss
mov
pop
aaa
jo
or
jg
adc
imul
(bad)
inc
xchg
jle
mov
mov
sti
push
pusha
out
sbb
das
xchg
sti
mov
out
xchg
xchg
add
adc
mov
shl
mov
pop
outs
fwait
bound
sahf
push
jg
and
pop
out
lods
push
jnp
lock
or
mov
pop
cdq
pop
xchg
jns
adc
push
scas
and
mov
jne
fistp
dec
shr
add
dec
test
rol
dec
loope
xchg
xchg
and
sar
dec
cmp
test
cli
mov
add
mov
and
jge
mov
inc
mov
pop
loop
or
mov
enter
inc
and
adc
rcr
ins
test
mov
(bad)
gs
iret
mov
pop
jae
fimul
sub
ss
push
add
test
repz
movs
adc
or
lods
jmp
mov
in
idiv
jle
mov
jmp
xchg
ffree
pop
cmp
cmp
jl
mov
or
or
aas
pop
mov
shld
jle
push
es
enter
shl
push
xchg
jno
mov
mov
fldenv
jbe
mov
dec
cmps
(bad)
dec
test
xor
adc
xchg
sbb
int3
leave
push
std
add
pop
loopne
lds
fiadd
sub
dec
int3
xor
mov
pop
jne
rep
ja
push
imul
push
or
loopne
inc
fdivr
lea
(bad)
shr
ins
mov
xor
setle
jb
lods
dec
or
lods
ins
xchg
sub
mov
mov
mov
nop
hlt
or
(bad)
stc
or
lods
sub
or
sub
scas
dec
out
xchg
xor
clc
mov
push
ins
or
sbb
(bad)
data16
xchg
in
jne
cs
dec
push
das
mov
ins
add
int3
jns
or
adc
fnstcw
aad
(bad)
fsubr
sbb
xor
and
pushf
inc
fwait
popa
fxam
mov
xchg
dec
xchg
mov
xor
fs
mov
mov
dec
aad
test
fiadd
sbb
ins
inc
xchg
sub
loop
jl
push
jo
lahf
out
es
or
movs
mov
fsubr
and
push
push
dec
dec
push
lods
mov
xlat
test
mov
xchg
ss
mov
add
cmps
fdiv
mov
fisub
dec
and
or
outs
arpl
xchg
push
push
addr16
add
pop
pop
add
jnp
xor
ja
mov
cmp
and
out
ret
mov
shl
xchg
jle
ds
cli
clc
jmp
sub
dec
or
lods
pusha
les
cmps
nop
outs
inc
mov
enter
fistp
cmc
test
mov
cmps
xchg
pop
add
ins
in
mov
popf
and
stos
into
test
cmp
adc
dec
aad
(bad)
outs
inc
sub
pop
lds
jle
mov
push
fdivr
adc
xor
mov
push
jecxz
or
lds
in
imul
jmp
cmp
mov
retf
les
sahf
jp
or
imul
push
repnz
(bad)
jmp
(bad)
fimul
lods
mov
js
js
(bad)
xchg
push
cli
out
add
sub
add
(bad)
cli
call
(bad)
fdivp
jae
cmps
and
adc
daa
mov
or
sub
dec
mov
or
cli
dec
repnz
test
push
bound
mov
cli
outs
in
mov
cdq
rcl
std
pop
fcomp
ficomp
stos
fcomp
push
(bad)
lods
xchg
add
fisub
or
mov
xchg
mov
test
dec
jle
inc
aam
xor
in
xchg
lea
xchg
lods
lea
dec
inc
jb
mov
arpl
cmps
sbb
fld
jg
dec
adc
das
and
cs
scas
xor
inc
cdq
arpl
stc
xchg
aam
xchg
mov
sbb
and
xor
inc
pop
(bad)
lods
stc
pop
daa
cmp
cwde
jl
int
aaa
xor
dec
in
iret
pop
mov
retf
fimul
mov
xchg
and
adc
cwde
dec
ja
lds
jge
(bad)
aas
xchg
ret
daa
test
sbb
fwait
cld
leave
outs
mov
jmp
sahf
inc
mov
int3
mov
outs
mov
out
call
shl
rcl
in
lods
xchg
rep
inc
call
scas
cmp
xor
arpl
cli
ss
jp
pop
mov
push
add
lods
push
fisttp
pop
inc
mov
mov
ins
adc
repnz
fisubr
enter
mov
fwait
mov
cld
test
fwait
jge
adc
pop
(bad)
bound
retf
mov
adc
aad
sahf
inc
cmp
pop
dec
(bad)
push
fxch
out
cmp
shl
xor
jg
sar
sbb
mov
ins
cmp
jo
jp
sub
push
mov
adc
cmps
push
push
dec
ins
pop
sbb
push
mov
retf
add
mov
ror
xchg
dec
loop
add
pusha
and
test
test
or
outs
xor
sbb
mov
lods
sub
pop
xchg
je
out
imul
sub
push
jnp
push
fisubr
outs
dec
mov
int3
cmp
push
xchg
in
test
jmp
jl
inc
mov
xor
ja
xor
mov
xor
stos
inc
push
into
xor
mov
push
std
jmp
clc
jo
std
imul
or
and
leave
rcl
xor
retf
ins
mov
jle
hlt
push
inc
sbb
cmp
loop
pop
xlat
repz
dec
fbstp
leave
inc
clc
sub
ss
rcl
add
adc
addr16
sub
mov
sub
jno
imul
fcmovnb
clc
or
fnstsw
(bad)
in
icebp
xchg
mov
shl
aam
sti
add
push
adc
daa
pop
shl
inc
into
std
sti
aaa
xchg
stc
mov
adc
or
iret
das
movs
xchg
pop
js
jecxz
pop
shr
adc
mov
inc
jb
cmp
mov
or
outs
into
mov
push
cmc
xor
adc
add
add
mov
scas
lea
jbe
movs
ror
and
push
add
stos
xchg
out
popa
(bad)
test
inc
mov
jp
imul
fld
xchg
es
mov
sbb
jne
mov
rcr
lods
test
or
mov
mov
stc
inc
xchg
jle
push
sub
icebp
(bad)
sub
and
sbb
push
pop
in
pushf
lds
popa
and
in
inc
xor
(bad)
mov
das
adc
loop
aad
adc
xor
lods
or
xor
cdq
retf
inc
or
js
push
ins
into
xor
push
aas
and
iret
hlt
fisubr
ss
jecxz
and
cmps
pop
mov
xchg
xor
shr
int
movs
lea
mov
test
imul
mov
ins
push
dec
mov
sub
and
lods
cld
out
push
mov
or
clc
daa
adc
aad
add
jle
cmp
movs
es
inc
cwde
adc
cmp
xchg
push
scas
jle
lock
aam
xchg
pop
fistp
dec
stc
ja
xchg
sbb
fbstp
ss
test
je
sub
jecxz
stos
xchg
or
xchg
mov
xor
cld
les
ss
mov
push
jle
scas
pop
test
or
push
in
fnstsw
sub
xchg
retf
pusha
mov
in
or
add
sub
loopne
jl
mov
psrlw
ins
push
pop
into
hlt
(bad)
aaa
xchg
cld
pop
and
outs
sub
mov
mov
jecxz
mov
mov
add
adc
mov
sub
lods
adc
pop
shr
out
and
mov
inc
pop
inc
xchg
leave
inc
sbb
mov
cmps
push
lahf
cmp
xor
cmp
jge
hlt
push
daa
(bad)
popf
rol
dec
fsubr
imul
frstor
sub
(bad)
movs
repnz
mov
mov
ss
inc
div
dec
xchg
fwait
jmp
pop
mov
jo
sbb
xlat
mov
push
daa
fbstp
aaa
or
in
and
gs
loop
sti
cmp
les
call
das
ret
and
(bad)
into
push
sub
fs
mov
adc
je
cmp
pop
mov
push
movs
in
stos
mov
fstp
lahf
xchg
jmp
cmps
shl
push
stos
out
and
mov
ja
ja
pop
and
push
push
sub
xor
cmp
lock
inc
aam
inc
xor
adc
sbb
mov
mov
(bad)
mov
sbb
dec
int3
arpl
sub
rep
jno
push
or
jl
mov
xchg
mov
lods
xor
(bad)
imul
imul
sbb
iret
mov
das
xor
daa
mov
sar
ret
mov
ss
jns
sbb
repnz
and
clc
inc
gs
(bad)
shl
push
(bad)
lods
call
dec
pop
add
lds
jb
cli
xchg
xor
inc
mov
sti
fld
xchg
syscall
rcr
and
shl
bound
rol
xchg
loopne
ror
fcmovnbe
outs
loop
nop
cwde
and
sub
clc
and
fisub
push
call
pop
sub
xor
pushf
dec
mov
jnp
icebp
sbb
add
mov
and
imul
and
sub
mov
loop
or
adc
push
or
imul
addr16
aam
dec
and
and
mov
lds
push
sbb
push
popa
fucomp
hlt
add
mov
cmp
mov
inc
cs
les
jg
mov
nop
jecxz
out
adc
inc
add
add
sbb
out
scas
and
fsubr
and
clc
xor
movs
cli
clc
test
dec
add
inc
pop
jle
(bad)
(bad)
pop
and
xchg
pop
test
push
mov
adc
icebp
jl
ss
cld
test
cmp
dec
es
stos
rol
mov
retf
daa
aad
inc
pop
shr
adc
mov
mov
(bad)
jae
push
adc
outs
mov
xlat
into
mov
retf
add
fistp
or
aas
jbe
sub
cmc
xchg
mov
cmp
daa
fstp
or
push
cwde
into
aaa
adc
mov
mov
(bad)
hlt
fsub
shl
inc
rcl
add
ss
jo
jg
ret
jecxz
dec
clc
(bad)
jo
ret
js
mov
(bad)
ins
jecxz
dec
nop
jle
push
mov
mov
(bad)
mov
xchg
xlat
cmp
sbb
adc
fsubr
cmc
in
iret
test
jne
xor
mov
dec
mov
sbb
and
xor
mov
scas
cmc
sbb
fistp
inc
inc
xor
jp
dec
pop
xchg
or
stos
pop
and
sub
pop
pop
js
and
das
cs
and
mov
xor
popa
stos
leave
pop
(bad)
lea
mov
aam
(bad)
jo
test
pop
inc
call
and
jb
inc
xchg
fld
sbb
out
jecxz
mov
jmp
add
mov
retf
ins
mov
test
push
inc
loope
not
xchg
call
pop
inc
and
daa
mov
pop
mov
xlat
shl
int
sbb
add
test
xchg
jecxz
loopne
stc
je
jmp
cmp
adc
inc
sub
add
sbb
(bad)
sti
inc
mov
sahf
and
cmp
in
add
ror
adc
(bad)
jbe
jmp
xchg
int3
mov
sbb
jmp
arpl
es
and
nop
jno
sti
scas
and
mov
xchg
cmp
xchg
stos
popf
popa
pop
jne
cmp
mov
xchg
jae
ins
loop
leave
dec
sub
pop
(bad)
push
test
int
mov
stc
retf
and
jg
cmp
fdiv
inc
push
mov
inc
push
dec
repz
cmc
nop
ror
and
test
aaa
in
fsub
xchg
cld
rol
pop
retf
mov
lock
adc
xchg
inc
or
aad
sbb
adc
mov
or
stc
sbb
pop
or
aaa
mov
xor
(bad)
ins
mov
sbb
mov
adc
inc
sbb
scas
xlat
sti
xlat
push
mov
scas
retf
push
(bad)
adc
daa
pop
pop
int
aam
cdq
xor
dec
cmps
clc
xchg
enter
jnp
fadd
cs
mov
popa
fiadd
out
icebp
xchg
pop
inc
inc
dec
push
and
and
and
and
cmc
imul
out
dec
sbb
out
push
mov
retf
cli
mov
movs
fidivr
mov
xor
retf
lods
mov
and
jo
inc
mov
std
ds
xchg
mov
or
mov
mov
jg
cmc
adc
mov
scas
outs
clc
(bad)
call
retf
mov
in
outs
mov
retf
test
adc
mov
rcr
out
mov
mov
lods
mov
sub
fadd
shr
mul
push
pop
xchg
lea
stos
aas
sub
push
add
lahf
ss
sahf
mov
mov
shr
fprem
leave
sahf
scas
cmp
or
enter
add
js
or
or
cmc
mov
test
out
and
pop
pop
dec
shl
lea
repz
loop
xchg
and
push
adc
loope
pop
ds
mov
pop
call
or
jae
xchg
in
or
movs
dec
sbb
inc
push
out
xchg
dec
sub
xchg
stos
xchg
fxch
jae
inc
iret
inc
test
dec
cmps
push
mov
push
clc
xor
sub
(bad)
fmul
sbb
or
mov
lods
(bad)
mov
push
enter
leave
ret
inc
cdq
dec
pop
sub
int3
stos
mov
and
cmp
pushf
add
cli
xor
fs
jae
clc
inc
gs
push
xlat
(bad)
fisubr
cld
les
retf
pop
ins
sbb
rol
sar
or
ret
stos
(bad)
stc
fnstsw
rcl
and
jl
and
das
sahf
inc
ror
ja
xor
sub
scas
and
and
lods
enter
xchg
jne
jns
and
jae
mov
jecxz
fstp
cdq
mov
and
pop
jmp
or
ret
push
pushf
add
dec
or
loope
ret
jp
cli
mov
mov
sub
and
je
int3
int3
sar
in
or
push
or
fs
mov
in
inc
xor
mov
fucomip
adc
(bad)
fcmovnbe
cmps
das
retf
lods
lds
rcl
leave
addr16
xor
bound
push
mov
mov
jno
clc
sub
ficom
sub
jecxz
dec
out
repz
ins
cmp
sti
(bad)
jb
neg
sahf
ja
fnstsw
ins
sbb
xor
sti
sahf
hlt
das
sub
add
sar
fs
xor
fbstp
add
sub
dec
push
sbb
jmp
sbb
jl
push
sbb
xchg
div
xchg
inc
retf
sbb
rcl
pop
add
fmul
in
int
mov
xchg
dec
into
out
jmp
jmp
add
inc
push
adc
inc
inc
mov
add
repnz
pusha
lods
repz
jbe
stos
sahf
push
inc
mov
sub
scas
ret
fstp
ret
adc
cdq
pop
mov
xor
jl
in
pop
shl
push
cwde
sbb
or
mov
jmp
sbb
sar
dec
enter
jae
xchg
stc
fist
pop
out
dec
repz
scas
cmp
mov
mov
sub
imul
and
movs
bound
cli
and
inc
jne
fbld
jne
ret
mov
sub
mov
aas
dec
or
jmp
sub
dec
pop
enter
test
aas
mov
in
or
in
movs
mov
cwde
sub
fld
mov
pop
add
movs
in
mov
data16
sbb
xor
ss
push
and
sub
nop
pop
xchg
add
jo
xchg
es
jg
jb
inc
(bad)
xor
dec
cmps
loop
loope
in
(bad)
adc
or
or
mov
and
dec
lods
mov
fadd
in
mov
arpl
mov
push
fimul
xchg
out
push
cmps
fdiv
jo
in
jle
sub
xor
dec
pop
jno
out
stc
cwde
ret
xlat
jo
lods
jl
push
and
xchg
call
add
movs
outs
div
cli
popa
rcr
inc
add
add
inc
stos
fadd
nop
sbb
imul
icebp
jl
popa
retf
mov
xor
mov
and
adc
mov
repz
mov
cmps
sbb
in
mov
movs
cmps
sub
inc
mov
int3
test
test
or
adc
mov
daa
mov
mov
cwde
enter
mov
jecxz
pusha
shr
cmp
mov
enter
xor
fstp
or
add
xchg
adc
cmps
rcr
sti
iret
and
mov
fmul
sub
mov
mov
and
sbb
pop
das
jbe
dec
in
mov
mov
icebp
(bad)
aad
xlat
iret
and
fild
out
addr16
jge
hlt
sahf
hlt
scas
add
(bad)
fnstsw
sub
rcl
inc
mov
or
les
outs
sbb
push
push
(bad)
shrd
push
dec
div
mov
sub
sbb
ins
sahf
hlt
push
push
sub
inc
xchg
xor
data16
in
(bad)
dec
dec
retf
into
jmp
xchg
mov
or
mov
push
dec
sbb
mov
(bad)
push
mov
jg
cmps
push
sahf
hlt
jmp
loop
cmp
sbb
das
add
and
(bad)
bound
ret
add
adc
xchg
test
sub
les
pop
mov
dec
push
out
dec
clc
std
imul
les
and
sub
xchg
cli
mov
or
jg
push
mov
push
ret
aad
fbstp
call
mov
add
jne
mov
sbb
push
add
loopne
push
ins
int3
mov
mov
das
ins
clc
sub
lods
mov
movs
nop
fidivr
jb
ins
add
movs
scas
movs
mov
cdq
xor
in
es
ffreep
jbe
xor
out
push
add
(bad)
jmp
mov
lods
pop
inc
nop
mov
cmp
or
mov
daa
or
push
repnz
pop
mov
retf
neg
inc
jmp
fwait
add
fldl2e
inc
das
arpl
test
xchg
pop
call
cmps
pop
mov
ss
jns
dec
aaa
jo
shl
loop
pop
scas
cli
ficom
sbb
test
inc
sbb
add
loope
aad
push
div
pop
fild
push
inc
add
cli
sahf
jg
fild
sti
sub
sub
pmuludq
or
scas
mov
ins
pop
int3
mov
sub
dec
data16
jge
sub
pushf
and
stos
and
scas
cli
ins
(bad)
ror
and
add
push
gs
sbb
retf
imul
ins
stc
ins
cs
mov
sub
pop
adc
les
or
bnd
fptan
imul
call
jb
mov
add
sub
lea
add
test
in
(bad)
mov
stc
loope
enter
push
xchg
sahf
xor
dec
imul
mov
mov
leave
enter
lea
push
(bad)
fucomi
cdq
addr16
mov
dec
rcl
(bad)
(bad)
sub
fild
push
inc
add
(bad)
sahf
hlt
cmps
ret
inc
or
sub
nop
(bad)
push
stos
xor
gs
or
(bad)
out
hlt
adc
jmp
stc
es
sbb
xchg
mov
es
ins
push
sti
jecxz
rcr
cdq
mov
fld
push
jp
mov
loopne
(bad)
shl
add
stos
pop
push
test
ret
inc
inc
in
cmp
adc
fimul
or
jp
(bad)
mov
mov
mov
jmp
in
or
lock
lahf
adc
movs
push
mov
cmp
fnstsw
rcl
std
stos
mov
das
rcr
mov
cmp
mov
imul
test
imul
push
retf
inc
fcomp
or
repz
add
aaa
enter
ret
mul
jo
retf
in
jno
clc
mov
movs
ret
cmps
ret
rol
fdiv
push
loope
movs
add
or
in
shl
mov
mov
pop
int
and
jmp
and
in
inc
les
stos
cmp
iret
retf
xor
ins
(bad)
shr
out
xchg
xor
and
(bad)
data16
sub
cs
cmps
pop
int3
and
retf
imul
fnstcw
and
lea
push
mov
xor
popf
idiv
push
dec
imul
mov
cmps
sbb
(bad)
scas
call
leave
and
in
xchg
adc
pop
sar
xor
xchg
mov
mov
adc
cmps
pop
mov
xor
fsubr
sub
inc
and
pop
outs
adc
std
xchg
std
mov
addr16
sahf
mov
cmc
(bad)
aad
pop
outs
sub
fist
add
jmp
(bad)
fnstsw
imul
rcr
mov
push
ins
int3
pusha
pop
sbb
pop
cmp
sahf
push
das
(bad)
lock
scas
daa
hlt
int3
jns
ins
sbb
in
mov
ror
adc
movs
cmc
jp
les
push
cld
sbb
repnz
mov
jmp
push
movs
retf
cmp
mul
inc
inc
nop
(bad)
in
ficom
pop
popa
mov
mov
xor
aas
(bad)
and
dec
jne
lods
(bad)
cdq
xchg
test
loop
adc
call
adc
test
movs
xchg
call
inc
jle
sbb
ret
test
repz
repnz
clc
jp
cmp
test
and
push
std
dec
lock
cmps
mov
xchg
push
xlat
(bad)
fisub
ja
xchg
and
adc
daa
sub
movs
pop
jno
shl
cmp
xor
cmc
push
pusha
cmp
in
add
int
jmp
shl
cmp
sub
pop
test
gs
pop
and
xchg
inc
imul
sub
sti
push
adc
adc
(bad)
fistp
in
xchg
ret
lahf
fmulp
imul
xchg
int
movs
test
xor
add
dec
inc
mov
fs
mov
jle
rol
aaa
xor
cmps
sbb
mov
xchg
mov
cld
or
jmp
xor
lods
or
push
cmp
imul
movhps
iret
mov
stos
add
sub
leave
xor
pop
adc
ja
js
push
xchg
inc
gs
or
rol
and
sub
retf
sbb
jne
mov
xor
xchg
div
cs
fst
loop
fsub
mov
mov
sbb
(bad)
cmc
imul
in
rol
add
add
mov
sbb
fistp
lea
xchg
sub
pop
push
jmp
jae
cdq
push
cld
add
(bad)
dec
mov
cmp
pop
es
dec
jo
int3
fbstp
jae
mov
jbe
mov
xor
sub
adc
jbe
push
ins
pop
mov
dec
jg
lahf
iret
icebp
clc
scas
sbb
push
mov
aas
mov
call
por
push
mov
iret
mov
stos
mov
dec
aaa
stc
inc
fnstenv
cmp
stc
or
sbb
adc
out
push
leave
call
(bad)
jb
(bad)
add
loope
in
and
sahf
repz
mov
cmp
jne
cli
lahf
jb
mov
cdq
add
rcr
lock
cmp
cmp
test
xchg
mov
push
cli
mov
cmps
pop
in
int
and
xor
pop
mov
sahf
es
push
adc
das
jno
es
add
out
pop
and
mov
ret
jne
retf
test
cs
sub
pop
inc
nop
mov
sub
add
clc
xor
aaa
mov
sbb
jno
jbe
xchg
popa
adc
mov
or
fwait
iret
icebp
clc
adc
nop/reserved
mov
es
fs
rcl
mov
sti
cdq
mov
sti
ret
push
bound
xor
add
test
pushf
ins
cld
mov
leave
or
sub
xchg
repnz
imul
int
jo
mov
xchg
ror
cmp
ja
pop
(bad)
and
pop
xchg
aad
push
(bad)
(bad)
mov
stc
lods
push
fs
nop
clc
jg
xchg
scas
or
mov
aas
push
push
imul
mov
sub
mov
push
push
cmp
dec
cs
pushf
mov
in
repnz
push
ror
int
jp
pop
pop
fdiv
icebp
movs
xor
(bad)
sti
cmp
dec
pop
sub
pop
dec
sub
aaa
popf
std
enter
aas
and
mov
or
or
dec
ja
(bad)
mov
or
cs
adc
sbb
mov
sar
xchg
test
sbb
shl
mov
xor
ret
mov
mov
stos
jns
or
sub
stos
in
repz
push
pop
popa
retf
dec
cwde
push
push
xor
fcomp
push
xor
scas
dec
inc
pop
cmp
sbb
cdq
or
mov
adc
mov
and
inc
cmp
popf
pop
das
(bad)
in
sub
sbb
fadd
popf
ss
stc
ins
and
jecxz
je
fwait
sbb
pop
xor
in
xor
repnz
(bad)
out
pushf
call
test
mov
(bad)
enter
add
xchg
push
mov
jle
push
test
mov
mov
loope
scas
(bad)
mov
or
jge
fwait
adc
call
mov
div
jle
mov
xor
fcmovnb
adc
xchg
mov
ret
test
add
outs
data16
mov
icebp
mov
(bad)
mov
lahf
ror
dec
and
sub
cld
push
pop
mov
fcomip
stc
rcr
(bad)
fadd
mov
xchg
fs
jl
jae
jmp
shl
into
ret
xchg
nop
and
ds
pop
push
mov
scas
out
fld
in
ja
adc
fimul
adc
je
lea
(bad)
mov
pop
mov
lods
xor
mov
mov
in
mov
jmp
(bad)
jae
inc
sub
gs
lea
fwait
sub
ins
into
test
sbb
adc
or
in
into
mov
scas
add
icebp
in
xchg
out
sub
mov
retf
aam
jno
inc
out
jp
jnp
mov
push
adc
test
and
and
or
in
iret
jecxz
inc
ds
shr
pop
mov
test
aam
in
add
lock
xchg
ja
cmp
mov
in
xor
inc
sbb
add
int
in
jle
inc
ss
fimul
imul
xchg
fwait
gs
mov
cmp
popf
movs
adc
leave
mov
add
in
push
jns
int
ror
fst
test
sub
sbb
nop
mov
daa
pop
cmp
(bad)
clc
aaa
mov
sti
sub
jmp
mov
or
jae
pop
(bad)
push
sbb
fstp
bound
sar
pop
push
loope
mov
add
out
sub
mov
mov
call
xor
inc
mov
cdq
ret
stc
sbb
out
push
out
push
xor
xor
icebp
jne
inc
(bad)
call
or
and
fstp
fnstsw
sub
adc
pop
cmps
call
jno
mov
xchg
sbb
ins
int
mov
loopne
iret
aam
mov
or
cwde
hlt
or
test
pop
pushf
jg
rcr
push
mov
je
fstp
mov
pop
fsub
mov
in
in
sbb
and
mov
mov
pop
mov
xor
cmp
and
repz
xchg
iret
icebp
clc
or
rol
xor
jl
cs
mov
add
mov
sub
adc
cmps
pop
mov
repz
adc
adc
stos
mov
imul
sbb
out
xor
jb
add
repz
mov
and
icebp
das
mov
cmp
(bad)
imul
add
js
hlt
push
and
fild
mov
or
mov
aas
sub
jmp
lods
addr16
sub
retf
fbld
or
xchg
jo
jmp
(bad)
sti
cwde
jbe
xor
in
jne
jne
fstp
xchg
(bad)
sub
mov
cmp
sub
mov
adc
mov
or
cli
repnz
pop
xor
xchg
mov
adc
and
sub
jae
jbe
mov
push
clc
mov
inc
cmc
not
in
(bad)
sbb
inc
mov
lock
mov
pop
sub
xchg
mov
cli
pop
sub
mov
test
or
xchg
mov
xchg
or
mov
inc
xchg
pop
adc
cli
in
aad
fcomip
xlat
gs
jl
arpl
xor
and
jno
sbb
xor
sbb
adc
cmc
fild
push
inc
es
push
xor
cmp
adc
dec
movs
in
stos
mov
in
cmp
and
(bad)
mov
pop
push
mov
cmps
out
fld
jno
jp
push
jno
sti
clc
test
xchg
mov
hlt
mov
cli
mov
mov
lds
enter
dec
popf
mul
mov
cmc
cmc
push
(bad)
in
lods
mov
or
cmps
jmp
jle
lahf
adc
jle
push
ss
(bad)
sub
lea
stos
ret
push
push
add
popa
retf
mov
sahf
jns
mov
push
imul
mov
push
cmp
xchg
push
or
sub
aam
sbb
ss
fstp
sbb
or
cmp
aas
pop
cmp
xor
repz
xchg
cmp
out
es
jo
and
mov
pop
sub
pop
jae
enter
cs
dec
es
mov
cmp
je
cmps
ds
scas
add
js
int3
fidiv
aaa
(bad)
push
and
inc
cmp
pop
dec
xor
retf
call
jbe
pop
mov
push
dec
iret
inc
mov
or
or
(bad)
es
pop
fdiv
xor
into
movs
dec
div
mov
out
(bad)
push
xchg
jnp
push
jae
mov
out
mov
or
mov
dec
mov
mov
push
inc
rcr
xchg
mov
dec
or
xrelease
test
jae
inc
cli
clc
xchg
ficom
pop
cmp
cmp
cdq
mov
mov
ss
adc
push
add
fmul
add
repz
std
(bad)
jns
ja
lods
or
dec
fucomip
cmp
mov
test
push
or
and
int3
pop
xchg
adc
pop
pop
pusha
ror
mov
in
push
jne
sbb
(bad)
pop
fstp
cmc
pop
call
pop
xor
xor
clc
data16
stc
cli
push
sbb
retf
call
sub
and
mov
das
mov
cmp
mov
pop
imul
pop
sub
mov
pusha
clc
dec
aad
rcr
icebp
(bad)
jp
add
xor
xchg
shl
pop
movs
xchg
inc
sbb
imul
mul
mov
cli
(bad)
xchg
fadd
in
shl
mov
inc
or
sahf
hlt
or
mov
fcomp
add
sbb
es
and
push
out
jecxz
rcr
in
mov
sahf
xor
push
jl
mov
retf
add
cmp
jae
inc
mov
sub
pushf
xchg
fidiv
iret
sub
or
sub
xchg
lods
cmps
dec
out
xchg
je
clc
test
mov
gs
xor
cli
push
inc
daa
sub
outs
imul
test
inc
inc
in
xor
sub
fiadd
fmul
jae
ss
loope
mov
or
dec
out
jge
movs
iret
out
leave
scas
jbe
dec
sti
ror
lds
cmc
dec
cmp
ss
in
pop
shl
sub
dec
xor
or
ret
lods
or
cmp
cwde
pusha
mov
xor
loopne
add
test
xchg
or
jns
push
mov
mov
icebp
stos
xchg
push
mov
out
push
xchg
or
(bad)
imul
push
push
cmp
retf
test
mov
mov
(bad)
test
or
cmc
inc
sbb
aas
sub
push
adc
mov
or
xchg
pop
pop
mov
jecxz
les
push
inc
jbe
jmp
pop
imul
fidiv
cld
lock
out
jg
or
xor
sub
loopne
int3
movs
sub
jle
repz
outs
cs
or
push
add
add
cmp
sbb
popf
fcomp
adc
aaa
and
(bad)
push
jb
and
sub
mov
in
sub
xor
xor
mov
mov
inc
jl
dec
aaa
jo
mov
add
pop
std
xchg
das
xchg
cmp
xchg
mov
pop
adc
arpl
mov
push
and
xchg
or
cld
(bad)
mov
test
xor
iret
lods
icebp
xchg
inc
push
push
and
hlt
pop
and
pop
mov
out
(bad)
pop
sbb
jmp
repnz
or
add
mov
stos
sub
(bad)
xor
je
xor
repz
mov
bound
mov
inc
cs
push
inc
mov
pop
test
push
out
out
fcom
dec
and
mov
add
or
dec
mov
mov
lods
repz
adc
mov
add
jg
add
jge
jecxz
sti
mov
or
mov
lods
lds
cmp
mov
jae
enter
xchg
sbb
into
xlat
mov
sahf
xchg
mov
mov
pushf
repnz
js
je
repz
imul
mov
(bad)
fidivr
icebp
inc
mov
jmp
sbb
inc
push
cmp
and
or
leave
(bad)
ds
dec
xchg
ds
popa
scas
jg
dec
push
push
sbb
inc
aas
and
(bad)
pop
in
push
inc
int3
fldenv
push
xchg
sbb
push
cli
aas
xchg
pop
sbb
fistp
push
ret
scas
and
sbb
mov
adc
cs
mov
imul
aam
xor
dec
pop
xchg
mov
or
or
or
fwait
mov
int3
inc
push
sbb
cmc
jbe
push
cdq
mov
sub
or
das
or
cld
daa
fwait
rol
jb
fisttp
mov
iret
lods
dec
xchg
dec
ds
lock
stos
aaa
(bad)
call
cmp
pushf
jecxz
dec
jno
push
xor
mov
adc
jnp
jg
outs
xor
push
mov
jno
jns
aam
ret
jae
adc
pop
add
jno
cli
fidivr
fild
sti
push
mov
adc
(bad)
sbb
lahf
ins
cmp
pusha
sbb
inc
dec
dec
test
mov
push
and
xor
xor
loop
push
enter
rol
dec
cmp
xor
ret
in
push
push
xor
stc
adc
jb
mov
and
sub
bnd
(bad)
in
and
mov
lods
daa
jmp
cmp
cmps
imul
xor
and
ret
cmp
test
mov
lods
out
cmp
mov
xchg
iret
popa
aad
(bad)
mov
inc
xor
imul
xor
pop
std
cdq
mov
(bad)
push
mov
retf
(bad)
(bad)
pop
(bad)
sti
aaa
sub
fist
fwait
outs
add
add
(bad)
call
stc
js
cdq
add
cmc
add
dec
push
das
loopne
es
mov
fwait
ret
push
mov
add
jns
sub
dec
arpl
(bad)
sub
fisub
sub
fstp
das
mov
out
cmp
int
scas
fidivr
ret
sar
fs
movs
jecxz
repz
jge
inc
xchg
(bad)
xor
add
add
inc
aas
mov
fdivr
fistp
push
retf
mov
xor
test
sar
leave
cld
xchg
xor
lods
retf
out
sbb
xor
mov
pop
sbb
adc
push
jle
mov
or
dec
clc
sub
mov
addr16
mov
sub
cmp
sbb
mov
rcr
cmp
in
xchg
mov
pop
cmc
iret
dec
hlt
fcmovne
enter
dec
push
cwde
ds
cmp
xor
leave
and
int3
cmp
push
popf
dec
movs
in
fs
push
mov
pop
scas
dec
cmp
push
pop
mov
mov
xchg
sub
out
stos
out
fcomi
int
ds
mov
xor
in
pop
scas
mov
dec
imul
inc
mov
cs
test
jle
leave
adc
jae
ret
jmp
imul
or
add
mov
(bad)
jg
add
push
loopne
in
cmc
imul
ins
sar
scas
test
fbstp
mov
(bad)
sbb
adc
rcr
ret
sub
adc
xchg
jae
retf
aam
xor
xor
sbb
into
aam
xchg
test
lods
vmread
ins
loopne
xchg
(bad)
(bad)
(bad)
pop
xor
push
cdq
stos
icebp
movs
push
pop
adc
les
pop
add
cdq
out
cmp
or
lods
dec
push
add
add
push
ins
mov
int3
jnp
or
shl
sub
sub
cli
loop
adc
les
and
enter
test
sbb
push
mov
xchg
daa
jmp
mov
out
adc
mov
test
jmp
or
mov
jne
mov
sar
pop
aas
xor
popa
mov
in
jmp
add
enter
sar
pop
ret
mov
fld
sar
and
call
fwait
push
shr
sbb
imul
test
inc
aas
clc
ds
outs
inc
cmp
pop
cmp
dec
ret
mov
sbb
mov
mov
jl
xlat
fcom
fcmovu
fist
cmp
pop
inc
out
gs
fistp
add
mov
or
aad
add
(bad)
mov
icebp
neg
test
test
dec
addr16
inc
test
cmp
(bad)
stos
and
je
sbb
icebp
sub
repnz
xchg
mov
loopne
sbb
fs
push
cmps
fs
movs
mov
lds
ins
cmp
xlat
and
sbb
or
sub
retf
cld
push
test
sub
gs
ror
push
inc
std
adc
or
dec
mov
lds
dec
int3
push
je
sahf
jae
jp
xor
add
add
dec
inc
xor
out
and
cs
mov
xchg
ret
retf
xchg
dec
mov
fdiv
sbb
test
aaa
mov
push
fst
ja
fstp
cmps
or
call
jb
mov
cmp
xor
lock
and
adc
pop
dec
push
out
push
xchg
ins
int3
mov
aas
(bad)
sub
stos
gs
rol
es
pop
cmp
popa
sub
ret
mov
push
and
sub
or
bound
xchg
sar
add
jmp
ja
push
sub
inc
nop
test
sub
dec
sbb
jae
xor
push
adc
or
ret
pusha
sub
push
xchg
pop
mov
mov
ror
dec
inc
cmc
add
inc
inc
mov
add
movs
mov
ds
adc
mov
sbb
fmul
es
(bad)
or
xor
mov
fs
xor
jg
ror
or
rcr
call
xchg
in
sub
enter
jne
jl
push
fld
push
sub
scas
or
inc
pop
pop
inc
into
loopne
loope
mov
loopne
inc
inc
xchg
push
xchg
mov
repz
repnz
dec
fisub
loop
popa
and
push
and
pop
push
cli
imul
sub
ss
mov
sub
sub
jne
push
scas
out
jmp
xchg
push
fcmovnb
clc
sbb
jnp
inc
aaa
inc
mov
sar
outs
xchg
mov
xchg
push
(bad)
adc
shl
iret
mov
xor
pop
push
sub
int
add
shr
pop
into
jbe
sbb
adc
inc
mov
push
outs
add
stc
or
fidivr
fcomp
adc
cmp
jge
push
jl
mov
jb
fst
and
scas
mov
(bad)
int
push
and
cmps
mov
sub
mov
scas
xchg
ds
lods
inc
fidiv
fdiv
inc
pop
xchg
xor
call
add
push
fst
into
loopne
aaa
xchg
in
xor
pop
fstp
fcomp
fdiv
je
jbe
jnp
add
mov
test
mov
sub
fs
and
inc
aam
xor
sbb
movs
aam
jle
or
fld
dec
arpl
bound
ficom
sub
movs
sahf
das
jae
push
xor
sbb
inc
dec
aaa
xchg
jmp
push
xchg
das
jne
jmp
dec
les
add
pop
mov
sbb
mov
mov
cmp
or
nop
sub
sti
scas
pop
shr
cdq
push
mov
jmp
test
pop
fsub
add
pop
clc
test
sbb
aas
mov
mov
je
mov
jmp
int3
test
in
jmp
cmp
mov
jmp
loope
mov
jnp
fstp
inc
cmp
jl
std
iret
xchg
cs
xchg
and
pop
xchg
fistp
pop
mov
xlat
cmp
in
sub
mov
push
xchg
pushf
loopne
loope
test
sub
and
clc
inc
nop
mov
pop
fwait
and
mov
mov
pop
test
sar
adc
adc
imul
or
lods
scas
imul
push
cld
and
bound
fwait
adc
pop
push
inc
imul
jb
pop
mov
sysret
cmps
ret
inc
push
mov
(bad)
retf
jg
or
std
pop
cmp
xchg
add
out
js
and
jp
(bad)
in
and
nop
fsub
das
mov
mov
push
inc
ret
test
sar
jle
xlat
lahf
mov
shl
out
in
and
add
in
mov
adc
sbb
adc
add
scas
es
jg
add
push
popf
cmp
dec
mov
and
imul
cli
mov
push
and
xor
stos
mov
mov
push
add
or
push
dec
pop
dec
int3
int3
xor
push
repz
adc
div
dec
lock
sub
adc
stc
cdq
mov
pop
adc
jb
iret
xor
xchg
cli
push
xor
retf
sbb
iret
xlat
stc
xor
sbb
cmp
mov
ss
rcr
adc
mov
leave
sti
idiv
ja
jmp
ss
lods
pop
sbb
popf
fwait
aaa
cmp
add
ret
jmp
dec
punpckhdq
or
cs
jp
test
mov
ret
pop
adc
daa
stc
adc
int3
xchg
xchg
outs
inc
cmps
add
aaa
jbe
test
fstp
fcomp
fimul
jbe
xor
sbb
movs
fidiv
ret
xchg
dec
mov
sub
ror
push
add
std
xor
jecxz
or
les
pop
inc
mov
xchg
in
push
div
inc
push
mov
xchg
sub
jle
add
dec
ins
retf
or
or
sbb
sub
mov
mov
fadd
pusha
jns
xchg
(bad)
xchg
test
sti
dec
bound
add
jmp
xchg
aaa
adc
sub
stc
and
and
mov
dec
push
jbe
ja
sub
mov
gs
ficom
fld
aaa
xchg
shr
and
push
or
(bad)
adc
imul
test
add
and
and
cld
sbb
xor
or
add
mov
ror
adc
sub
sbb
repz
out
arpl
add
loope
and
mov
fs
mov
jb
mov
inc
pop
and
nop
out
(bad)
je
fwait
and
out
and
push
fsub
mov
lods
pop
imul
lahf
jno
mov
sbb
cmp
jmp
mov
clc
das
inc
popf
popf
push
fmul
jmp
xlat
jl
cdq
mov
sbb
(bad)
xor
cmp
ret
inc
imul
mov
dec
pop
mov
fsubr
mov
(bad)
cmp
sub
push
cmp
or
nop
push
test
add
xchg
mov
sbb
and
inc
push
sbb
mov
jecxz
retf
cmp
or
in
xchg
data16
loopne
or
dec
pushf
xchg
popa
es
pop
mov
xchg
cmp
lock
in
das
inc
movs
jb
sbb
cld
push
shr
add
mov
sar
out
fistp
(bad)
jne
in
push
les
int
pop
movs
push
stos
dec
dec
jbe
xor
out
ror
call
add
test
pop
int
(bad)
dec
movs
sub
mov
xchg
rcr
jne
shr
xor
jl
mov
fmul
push
loope
and
cmp
inc
pop
call
dec
test
rol
push
(bad)
imul
jecxz
out
sbb
dec
xor
cmp
(bad)
sub
test
add
int
or
test
push
into
mov
xchg
int
hlt
sub
jae
test
sti
fnstsw
sub
rcl
or
or
mov
sbb
push
push
jmp
movs
in
das
inc
dec
mov
sub
sbb
gs
(bad)
rcr
push
adc
and
cli
data16
in
(bad)
dec
xor
retf
imul
adc
jns
test
mov
inc
inc
nop
mov
sub
or
xor
cmps
sbb
(bad)
mov
or
das
or
clc
daa
fwait
adc
mov
retf
lods
lds
adc
xchg
setle
iret
mov
stos
mov
fmul
sub
leave
xor
push
std
sbb
mov
out
push
mov
(bad)
fdivp
(bad)
aad
fbstp
adc
inc
adc
daa
pop
add
jne
cli
sahf
hlt
scas
ret
inc
or
fnstsw
sub
rcl
or
or
mov
sbb
push
push
jmp
movs
in
das
inc
dec
mov
sub
sbb
gs
(bad)
rcr
push
adc
and
cli
data16
in
(bad)
dec
xor
retf
imul
adc
jns
test
mov
inc
inc
nop
mov
sub
or
add
add
xor
cmps
sbb
(bad)
mov
or
das
or
clc
daa
fwait
adc
mov
retf
lods
lds
adc
xchg
setle
iret
mov
stos
mov
fmul
sub
leave
aas
xor
push
inc
adc
ret
(bad)
into
es
mov
inc
adc
scas
sub
inc
aas
jno
mov
not
xchg
mov
sbb
and
pop
mov
in
cli
adc
and
mov
add
dec
int
call
sub
push
add
mov
push
cmc
pop
sbb
push
cmp
lock
or
adc
inc
mov
push
loope
data16
push
mov
ret
and
push
xor
sub
inc
mov
cmp
lahf
fxch
jae
xor
mov
cmps
sbb
(bad)
mov
or
das
or
clc
daa
fwait
adc
mov
retf
lods
lds
adc
xchg
setle
or
pop
pop
mov
xchg
pop
dec
addr16
cmc
iret
sahf
pop
xor
cmp
xor
loope
repz
push
mov
(bad)
fdivp
(bad)
aad
fbstp
adc
inc
adc
daa
pop
add
jne
cli
sahf
hlt
scas
ret
inc
or
fnstsw
sub
rcl
or
or
mov
sbb
push
push
jmp
movs
in
das
inc
dec
mov
sub
sbb
gs
(bad)
rcr
push
adc
and
cli
data16
in
(bad)
dec
xor
retf
imul
adc
jns
test
mov
inc
inc
nop
mov
sub
or
xor
cmps
sbb
(bad)
mov
or
das
or
clc
daa
fwait
adc
mov
retf
lods
lds
adc
xchg
setle
iret
mov
stos
mov
fmul
sub
leave
xor
push
std
sbb
mov
out
push
mov
(bad)
faddp
int3
out
jmp
xchg
dec
sub
mov
ja
sar
out
or
aaa
jno
in
or
lods
xor
in
mov
imul
int3
or
ins
fidivr
and
or
inc
pop
in
pop
pop
fld
pop
rcr
mov
dec
(bad)
inc
ins
ds
out
xchg
or
adc
mov
gs
or
fmul
xlat
sbb
je
mov
and
clc
loop
jle
jmp
inc
add
push
inc
sahf
mov
aad
xchg
inc
icebp
mov
idiv
aam
push
pop
cmps
rol
fldenv
sti
loop
fcmovnu
out
out
inc
inc
mov
pop
ret
add
add
int
xchg
fsubr
xchg
inc
ds
adc
mov
jns
(bad)
sbb
repz
fdiv
mov
mov
popa
mov
pop
outs
ins
test
fwait
in
nop
leave
ret
xor
mov
or
in
mov
jnp
mov
xor
rcl
test
xchg
mov
dec
dec
into
lahf
mov
push
adc
add
sub
push
cmp
xchg
data16
int3
les
jp
repnz
pop
(bad)
jmp
(bad)
lds
and
nop
(bad)
shr
jbe
sub
out
test
shl
fnstcw
js
cmc
push
enter
imul
adc
push
pop
inc
mov
adc
movs
jle
xchg
add
out
jmp
xchg
scas
rcr
pushf
ror
loopne
fsubr
nop
dec
cmp
mov
mov
jl
int3
sub
xchg
cwde
sub
int3
push
movs
out
xchg
xchg
mov
mov
inc
jge
sub
xchg
inc
and
mov
mov
hlt
ret
jp
movs
cmp
jbe
fwait
jmp
jmp
(bad)
push
popf
cmp
adc
and
pusha
test
lea
iret
mov
imul
pop
cmps
test
push
int
cmp
add
inc
adc
pop
ret
mov
rcr
inc
xor
sub
rol
out
sub
mov
loope
adc
fldenv
xlat
jecxz
int
retf
je
nop
jbe
std
mov
pusha
shr
jge
pop
mul
repnz
fist
dec
mov
jl
movs
jae
mul
(bad)
idiv
inc
sub
call
rol
mov
pop
pop
mov
dec
push
sbb
sahf
jae
(bad)
outs
cmp
mov
mov
(bad)
mov
stos
adc
mov
xor
mov
adc
mov
fwait
ret
cmps
inc
pusha
call
hlt
out
sar
out
retf
bswap
or
mov
es
push
arpl
dec
jae
dec
rcr
jle
push
retf
es
add
bound
inc
cs
cdq
in
xchg
adc
into
shr
pop
ret
lods
xor
dec
and
add
shl
add
xchg
mov
xor
mov
gs
sbb
jmp
xchg
pop
mov
pushf
xchg
inc
lock
sbb
mov
pop
inc
scas
mov
enter
lock
dec
cli
push
inc
mov
aas
fist
fsubr
xchg
inc
cmp
les
adc
jge
iret
add
nop
xor
mov
iret
jecxz
lods
push
dec
jnp
xor
ss
push
mov
inc
mov
sti
xchg
int3
stos
add
add
jnp
mov
sbb
out
mov
cmp
xchg
scas
rcl
jns
es
cmp
in
pop
sub
mov
imul
mov
mov
push
rol
bts
(bad)
stos
push
or
movs
scas
add
mov
int3
(bad)
into
fstp
sbb
(bad)
mov
jo
inc
mov
hlt
repnz
mov
sbb
rol
outs
cmps
jle
pushf
adc
ins
ret
cdq
pop
sub
arpl
test
push
pop
scas
mov
fdiv
in
sbb
in
ud0
mov
sub
fldcw
xchg
dec
dec
push
add
fcom
jg
cwde
sbb
retf
push
addr16
fwait
out
push
mov
mov
je
sub
dec
aas
jl
mov
push
ret
cwde
hlt
je
xchg
mov
dec
jmp
mov
ror
ins
lods
mov
jo
sub
jl
jl
lea
rol
jae
sbb
xchg
add
jg
rol
dec
cld
mov
cmps
xor
mov
mov
xor
jl
pop
movs
ror
pop
sub
push
pusha
nop
xchg
shl
in
sbb
fldcw
rcl
jp
xor
into
fisttp
xchg
pop
out
test
jae
mov
(bad)
fmul
movs
setge
(bad)
mov
dec
mov
cmp
lahf
mov
mov
fdivr
mov
aaa
jo
leave
xor
push
std
sbb
mov
out
push
mov
(bad)
ficomp
pop
pop
lods
aaa
ds
dec
das
ja
mov
fwait
mov
shr
pop
jmp
imul
adc
and
jg
xor
jle
jg
in
das
inc
dec
mov
sub
sbb
gs
(bad)
rcr
push
adc
and
cli
data16
in
(bad)
dec
xor
retf
imul
adc
jns
test
mov
inc
inc
nop
mov
sub
or
xor
cmps
sbb
(bad)
mov
or
das
or
clc
daa
fwait
adc
mov
retf
lods
lds
adc
xchg
setle
iret
mov
stos
mov
fmul
sub
leave
xor
push
std
sbb
mov
out
push
mov
(bad)
fdivp
(bad)
aad
fbstp
adc
inc
adc
dec
cs
jmp
mov
shl
dec
lock
clc
out
jmp
movs
rcr
scas
lds
jno
sub
xor
cwde
and
adc
inc
sub
sbb
gs
(bad)
rcr
push
adc
add
add
and
cli
data16
in
(bad)
dec
xor
retf
imul
adc
jns
test
mov
inc
inc
nop
mov
sub
or
xor
cmps
sbb
(bad)
mov
or
das
or
clc
daa
fwait
adc
mov
retf
lods
lds
adc
xchg
setle
iret
mov
stos
mov
fmul
sub
leave
xor
push
std
sbb
mov
out
push
mov
(bad)
fdivp
(bad)
aad
fbstp
adc
inc
adc
daa
pop
add
jne
cli
sahf
hlt
scas
call
ror
stos
rcl
mov
cmp
adc
ds
in
aad
pop
inc
dec
mov
arpl
dec
xor
es
(bad)
ror
mov
inc
jae
ja
(bad)
aam
cdq
adc
retf
retf
es
mov
aaa
lea
neg
pop
aas
sbb
sbb
jno
dec
mov
lea
pop
xlat
pop
pop
jmp
xor
dec
(bad)
sub
daa
fwait
adc
xchg
mov
fst
fnstenv
sar
std
cld
(bad)
psllw
mov
(bad)
xchg
(bad)
mov
jp
dec
es
jo
popf
popa
jle
test
jae
xchg
push
loopne
sbb
and
aad
lods
sbb
test
pop
xchg
push
popa
mov
outs
sbb
mov
hlt
scas
lods
es
lods
push
sbb
rcr
xchg
adc
ins
or
inc
jno
jp
jl
xchg
movs
inc
aaa
and
mov
push
mov
jno
inc
lods
sbb
bound
inc
pop
ds
out
mov
scas
rcl
retf
(bad)
or
movs
or
shl
rcr
adc
cmp
icebp
(bad)
add
inc
mov
(bad)
mov
push
fcom
sbb
fadd
ins
xchg
push
mov
div
mov
mov
ror
lds
out
mov
fucomi
out
in
jle
stos
call
iret
(bad)
xchg
lods
add
mov
scas
or
test
fisubr
or
mov
mov
and
push
imul
out
xchg
rcl
pop
int
adc
ja
out
retf
call
fistp
jg
and
pop
cwde
push
in
dec
sbb
mov
outs
pop
sbb
dec
or
sub
fs
inc
or
dec
mov
cmp
jmp
sub
stos
fwait
push
fnsave
pop
sbb
ins
xor
cld
(bad)
xlat
loop
sub
scas
in
repnz
icebp
mov
add
addr16
rol
add
add
cdq
adc
jmp
xchg
stc
fistp
lds
rcr
mov
loop
loope
fsub
jnp
inc
dec
mov
cmp
mov
cdq
dec
mov
stos
mov
or
xchg
jg
xlat
or
cwde
mov
push
xchg
jmp
adc
mov
jne
sub
shl
in
xchg
in
cmps
xor
push
dec
clc
jno
retf
cli
test
jnp
out
repnz
movs
sahf
sbb
jb
lods
push
cmps
pop
and
cmp
js
push
adc
or
cmp
je
push
xor
mov
mov
or
ret
into
jmp
test
mov
inc
inc
nop
mov
sub
or
xor
cmps
sbb
(bad)
mov
or
das
or
clc
daa
fwait
adc
mov
retf
lods
lds
adc
xchg
setle
iret
mov
stos
mov
fmul
sub
leave
xor
push
mov
add
rcr
push
call
xchg
mov
jb
sub
daa
pop
add
xor
xor
mov
sbb
jae
cdq
pop
xor
mov
popf
pop
sub
dec
ins
cmp
sbb
or
jne
dec
movs
jnp
outs
inc
repz
in
enter
nop
sbb
gs
adc
xchg
xor
and
retf
ds
mov
out
mov
xchg
jecxz
ds
ret
into
imul
push
inc
xor
out
dec
sub
add
test
mov
cmps
sbb
in
bnd
in
or
scas
mov
repnz
addr16
mov
xor
mov
fcmovbe
icebp
popa
jmp
sbb
mov
inc
xor
mov
jg
jp
sbb
out
push
sub
call
fdivp
jle
push
fbstp
jl
sub
push
mov
bound
(bad)
mov
daa
sti
fnstsw
push
push
nop
jle
jecxz
and
(bad)
sbb
adc
push
cmp
push
movs
in
pop
inc
dec
es
movs
adc
loop
inc
sbb
dec
adc
cmp
mov
and
movs
pop
ds
mov
mov
push
in
mov
sbb
xlat
(bad)
rcl
dec
cmp
sub
hlt
int
hlt
pop
push
pop
test
call
mov
in
pop
fsub
outs
adc
sti
imul
mov
bnd
into
mov
xlat
mov
call
cmps
stos
loope
mov
bound
xor
xchg
ret
iret
fcom
add
das
push
adc
or
jne
(bad)
or
movs
mov
sti
shl
shl
add
jne
inc
pop
push
popa
xchg
bound
lahf
retf
cmps
sub
inc
cmc
pusha
sbb
mov
rcr
movs
fcomp
jg
inc
ins
xor
ror
dec
xlat
test
push
xor
inc
pop
inc
sbb
sub
(bad)
dec
sub
out
popf
add
jmp
lahf
inc
or
stos
cmps
or
(bad)
lock
sbb
es
mov
jl
movs
(bad)
shl
ror
mov
imul
rol
rcr
fcomi
sub
int3
scas
pop
daa
inc
test
sbb
(bad)
fcmovnbe
loopne
mov
add
jmp
jmp
fsubrp
mov
add
repz
test
jb
(bad)
or
call
cmp
jmp
adc
not
xchg
inc
pusha
and
sbb
fwait
jmp
test
or
in
mov
(bad)
xchg
ficomp
ja
cs
xor
ins
int
sbb
lods
or
or
add
dec
cwde
add
ds
or
fwait
adc
pop
test
mul
pop
cmc
leave
inc
mov
rol
retf
or
sub
dec
popf
test
les
pop
mov
lock
pop
fimul
xor
mov
js
jb
iret
jbe
retf
and
int3
inc
mov
(bad)
pop
xchg
mov
iret
scas
add
mov
pop
clc
mov
lods
mov
adc
mov
mov
out
aad
rol
loop
loop
xchg
dec
das
pop
add
mov
inc
popa
pusha
int
jno
add
xchg
lea
cmc
shr
in
mov
lea
jbe
ins
push
test
jno
in
push
xchg
xor
cmp
cmc
pop
inc
hlt
jne
out
loope
mov
mov
inc
cld
mov
sub
jns
das
popf
fmul
and
sub
ret
push
sub
aaa
sbb
or
loop
sbb
sbb
mov
xchg
mov
lock
inc
jmp
and
popf
sbb
and
enter
pop
push
repnz
lods
xchg
ret
fdiv
jo
fwait
adc
pop
lds
daa
shl
inc
jae
in
push
xor
rcr
mov
into
scas
je
in
fstp
enter
ja
test
icebp
(bad)
fdivr
cmp
and
scas
sbb
outs
dec
(bad)
aas
xchg
into
xabort
xchg
xchg
sahf
lea
jne
aaa
jno
inc
push
inc
gs
dec
adc
fwait
stc
xchg
fstp
push
inc
jmp
cmp
fcomp
retf
push
enter
ret
add
dec
or
jns
and
mov
fs
dec
xchg
sbb
xor
addr16
(bad)
inc
add
clc
enter
sar
mov
sbb
jecxz
lock
aas
add
push
cs
(bad)
out
sub
call
xor
mov
adc
inc
outs
jmp
adc
sbb
mov
fwait
mov
inc
jge
test
or
ret
shl
(bad)
out
rcr
call
mov
mov
fs
jo
retf
mov
sahf
dec
shl
lock
mov
test
pop
jbe
pop
js
push
ss
jbe
(bad)
outs
sbb
xchg
jmp
gs
mov
jle
out
movs
ins
loop
fdiv
add
xor
cs
leave
mov
mov
pop
clc
imul
xchg
mov
pop
mov
arpl
push
aas
push
(bad)
cmp
or
pop
stos
retf
inc
cmps
xchg
cs
out
jnp
xor
pop
inc
aam
test
pop
sub
ror
retf
fidiv
dec
sbb
repnz
lock
out
cwde
mov
ja
ficom
enter
jle
test
popf
inc
aad
mov
shl
outs
in
xor
mov
lock
jecxz
mov
addr16
or
retf
cmp
rol
ins
xchg
test
aas
mov
popf
movs
xchg
mov
adc
cmp
cdq
(bad)
imul
fwait
repnz
in
adc
cmps
sahf
dec
pop
cld
inc
sub
test
icebp
push
in
out
mov
and
add
adc
xor
outs
(bad)
cmp
jl
inc
ja
fild
jb
dec
loope
or
push
xor
cmp
push
xchg
movs
dec
bound
arpl
fimul
and
adc
(bad)
repz
outs
mov
lods
retf
mov
push
jmp
outs
(bad)
outs
jne
sbb
sti
popf
div
mov
call
fcmovbe
push
inc
jmp
loop
xchg
in
out
scas
je
loope
(bad)
sar
outs
repnz
cmp
xor
cdq
inc
sbb
mov
sbb
lods
sbb
in
fs
xchg
adc
out
push
mov
stos
test
js
mov
dec
movs
dec
xor
inc
xor
mov
es
scas
lea
gs
fwait
aam
movs
outs
out
in
mov
inc
test
or
pop
sub
jns
jge
mov
dec
out
cwde
and
push
or
inc
pop
inc
mov
xchg
adc
movs
jbe
pop
in
std
fwait
add
add
in
mov
or
retf
and
leave
int
cld
dec
cmp
push
and
clc
mov
sub
stc
mov
and
inc
pop
mov
loopne
sbb
les
mov
dec
loop
icebp
movs
jbe
jmp
ja
mov
cli
(bad)
mov
out
mov
scas
loope
arpl
inc
inc
xchg
ret
xchg
pop
jmp
adc
and
jl
std
inc
or
sbb
xchg
and
int3
jge
loop
icebp
mov
inc
addr16
bound
mov
pushf
neg
xchg
mov
jle
out
movs
ins
loop
fdiv
aaa
movs
fcom
jns
adc
xor
outs
(bad)
cmp
or
jno
sbb
mov
mov
push
dec
(bad)
and
cli
xor
xchg
aam
sbb
mov
mov
ror
pusha
aaa
aaa
cmc
rcl
fcmovbe
call
out
fld
mov
ret
outs
pop
mov
les
call
mov
enter
fldcw
(bad)
mov
movs
or
rol
xchg
retf
jbe
push
sub
or
inc
nop
daa
mov
jnp
mov
adc
scas
or
fisttp
(bad)
sbb
jb
leave
(bad)
mov
mov
lods
ja
jb
xor
mov
sub
mov
push
sbb
mov
sub
ja
retf
jmp
jmp
popf
lock
js
test
aaa
pop
push
dec
mov
pop
sub
inc
aad
mov
cmp
add
xchg
and
jb
loope
cli
cmp
push
mov
mov
add
popf
mov
test
fmul
jo
daa
xor
mov
pop
mov
lds
inc
aad
inc
fsubr
outs
sbb
(bad)
pop
cli
lea
das
shl
jbe
(bad)
scas
push
push
dec
mov
sbb
xchg
into
iret
icebp
push
fadd
mov
xor
xchg
xchg
in
fdiv
das
pop
add
test
push
fsubr
cmp
push
mov
test
in
(bad)
cld
es
test
mov
dec
xor
sub
stos
out
je
loopne
clc
sbb
xor
lahf
dec
inc
cmc
pusha
or
cli
scas
mov
(bad)
movs
push
iret
js
nop
repnz
dec
pop
jl
pusha
ret
jnp
outs
gs
lods
pop
push
jo
ins
inc
adc
dec
push
es
mov
sub
daa
jne
out
sbb
mov
mov
mov
imul
rcl
bound
add
sub
xor
mov
(bad)
mov
add
jne
jmp
leave
outs
sbb
adc
mov
add
jae
movs
pusha
test
mov
not
jge
mov
(bad)
aam
lds
mov
push
retf
mov
mov
popf
rcr
sti
xchg
inc
adc
mov
arpl
pushf
jo
ror
jg
idiv
xor
mov
push
(bad)
adc
mov
stos
cmc
outs
adc
test
add
mov
pop
test
mov
xchg
test
arpl
dec
lods
pop
hlt
mov
dec
iret
lahf
enter
loop
pop
or
and
push
xchg
cwde
mov
call
pop
jmp
cli
xor
aad
stos
push
ds
aad
sbb
mov
test
mov
inc
adc
mov
fcmovbe
in
or
xchg
lds
jl
nop
jbe
loopne
jecxz
(bad)
sahf
ins
stos
ins
in
lods
xchg
popf
inc
fdiv
arpl
mov
push
pop
stos
rcl
mov
jmp
xchg
repz
out
clc
pop
inc
mov
call
fsubr
mov
sub
cwde
mov
sub
scas
jne
(bad)
sbb
mov
iret
int
movs
(bad)
mov
and
inc
scas
sub
je
dec
add
repz
xchg
cmp
clc
lods
mov
mov
or
aad
pop
adc
pop
adc
arpl
xchg
test
or
int3
lea
push
inc
(bad)
outs
push
or
jne
push
mov
cmps
mov
call
push
cmc
enter
mov
shl
cmp
xlat
int
(bad)
jg
push
inc
cmp
loop
adc
out
jmp
adc
stos
enter
inc
into
mov
or
jl
xchg
ret
ret
jle
mov
mov
mov
cld
jmp
sbb
mov
push
cs
fldcw
cli
loope
leave
in
test
mov
int
xchg
mov
pop
sbb
xchg
fs
push
cwde
push
jnp
mov
bound
xlat
cmp
cld
fisubr
push
inc
jge
inc
inc
mov
jb
mov
pop
and
xchg
fimul
sahf
mov
es
retf
scas
mov
mov
cmp
pop
outs
push
push
cwde
data16
dec
mov
jle
outs
pop
js
push
push
dec
mov
mov
jl
test
xor
and
adc
retf
and
xor
pop
push
pop
mov
lock
arpl
or
cmc
sub
out
fsubr
mov
dec
jmp
cmp
or
shl
cld
add
xchg
pop
inc
movs
cmc
lea
ret
stos
fisttp
cmp
xor
add
inc
sub
sbb
call
sub
mov
ja
sub
push
je
ja
mov
jmp
sub
std
sbb
mov
cmps
movs
ins
loop
fdiv
add
inc
jp
jle
popa
loopne
mov
adc
sub
ja
inc
nop
es
inc
xor
movs
ss
or
cmps
test
mov
retf
iret
dec
ds
and
cmp
repz
mov
in
mov
jmp
fsub
sahf
in
icebp
cwde
jns
dec
icebp
mov
mul
iret
mov
xlat
mov
mov
int
popa
in
mov
fst
sti
mov
in
clc
xchg
pushf
and
mov
xor
call
in
sub
shl
fbld
mov
cwde
popf
xchg
mov
jo
xor
push
imul
ret
xchg
add
push
pop
lds
out
in
mov
dec
in
in
int
mov
retf
push
mov
sub
push
lods
pop
hlt
cmps
mov
and
mov
xchg
xor
enter
mov
mov
(bad)
cmp
ror
xor
mov
mov
mov
jne
mov
scas
add
dec
sub
sub
aam
cmp
jmp
jmp
pop
ret
imul
mov
pop
xchg
mov
jecxz
jns
mov
pop
mov
paddsb
repz
cld
outs
in
push
dec
cmp
rol
xchg
pop
cmp
mov
xor
mov
jbe
cwde
pop
push
ror
pushf
nop
call
jmp
add
mov
and
mov
jae
rcl
xchg
fcmovnb
xor
mov
pop
fwait
aam
mov
repz
fwait
mov
loop
or
imul
dec
inc
adc
adc
dec
mul
push
test
outs
inc
sbb
dec
xor
xchg
cmp
and
lea
lods
fsub
jmp
sahf
sbb
shr
pusha
add
loop
shl
ins
aas
push
fcmovbe
loop
or
lods
movs
adc
inc
xor
mov
fisub
jb
call
ror
or
mov
sbb
out
xchg
data16
mov
aam
inc
fisub
cmps
dec
jmp
jmp
pop
das
aaa
and
scas
sbb
or
outs
cmp
call
pop
push
adc
push
pop
push
imul
ret
mov
pusha
fisttp
pop
iret
in
mov
add
(bad)
mov
test
xor
dec
test
add
push
pop
hlt
outs
pusha
add
inc
gs
mov
not
imul
sbb
leave
mov
fist
mov
stos
cmps
push
mov
stos
adc
aas
(bad)
sub
test
dec
inc
scas
cmc
std
add
or
ret
outs
adc
add
loope
mov
test
pop
out
push
int3
mov
fst
fnstenv
(bad)
xchg
fistp
dec
cmps
cmc
lea
(bad)
fisubr
es
push
xchg
test
push
push
pushf
xor
mul
inc
scas
test
cmp
jmp
push
inc
ja
aaa
jns
inc
cmp
je
repz
popf
cwde
neg
sahf
lahf
jno
cdq
push
adc
cld
mov
push
mov
out
ins
and
jns
pop
stos
pop
loope
mov
les
hlt
push
pop
sbb
pop
es
in
imul
jno
fmul
mov
jmp
dec
aad
loopne
je
cld
sub
jns
out
in
jl
and
add
ret
ret
hlt
addr16
clc
std
xchg
xor
mov
jb
(bad)
adc
xor
inc
cmp
dec
rcl
mov
rcl
call
(bad)
mov
in
xchg
adc
inc
mov
jo
pushf
fisubr
xchg
push
sub
mov
push
dec
sbb
cmp
jae
ret
sbb
in
cmp
mov
icebp
adc
jle
arpl
test
movs
xlat
call
addr16
jo
jmp
mov
sbb
fldl2e
stos
mov
retf
cmp
xchg
hlt
sbb
and
jnp
imul
or
cmc
test
hlt
js
or
dec
gs
pop
out
sbb
and
rol
push
clc
out
add
jp
in
out
outs
cmp
adc
leave
aam
sub
xor
adc
lock
ret
addr16
mov
fsubrp
stc
sub
inc
push
fdiv
sbb
(bad)
mov
or
das
or
clc
daa
fwait
adc
mov
retf
lods
lds
in
lods
jnp
not
sbb
pop
mov
add
adc
mov
add
cmps
movs
pop
dec
or
xchg
push
adc
mov
fwait
out
lods
add
(bad)
popa
(bad)
dec
cs
aaa
call
stos
int
aaa
ins
mov
dec
pop
cmc
ins
or
mov
call
xchg
int3
mov
ja
xor
cmp
push
retf
cs
push
rol
into
jb
sbb
mov
mov
jl
xlat
inc
pop
dec
call
mov
scas
inc
pop
xchg
(bad)
movs
das
xor
je
es
fadd
enter
imul
out
rcl
jae
inc
pop
rcl
jb
sbb
ror
or
das
or
clc
daa
fwait
adc
mov
retf
lods
lds
adc
xchg
pmaxsw
mov
xchg
stos
shl
pushf
fisubr
xchg
inc
das
aaa
cmp
test
data16
dec
sbb
pop
or
cmc
sti
sub
mov
icebp
sbb
ja
dec
xor
sub
lahf
sahf
xchg
movs
sub
pop
loope
jle
loope
mov
(bad)
movs
sbb
or
movs
xlat
adc
xor
jns
xchg
jnp
(bad)
ror
adc
in
jmp
inc
sub
pop
js
call
sbb
cmp
ror
loopne
mov
mov
adc
retf
adc
popa
test
retf
pop
cmp
ja
popa
(bad)
lock
and
inc
mov
cld
mov
jae
pop
inc
fadd
push
sbb
retf
inc
ficomp
xchg
icebp
stos
dec
std
mul
mov
fcmovnu
shl
xchg
fild
pop
cmps
jmp
ret
(bad)
(bad)
addr16
dec
ds
pop
les
sub
xchg
push
xchg
sub
fdivr
repz
in
mov
mov
mov
dec
mov
cmp
stos
jmp
shl
inc
cli
outs
and
cli
scas
cmps
imul
push
aam
add
sub
bound
inc
and
dec
les
imul
sbb
inc
cmp
or
add
sbb
mov
call
pop
scas
stos
sbb
movs
sti
leave
int3
dec
add
shl
xchg
inc
mov
retf
xchg
or
stos
mov
fld
jae
mov
jecxz
(bad)
das
rol
and
sbb
lahf
hlt
xchg
lock
and
mov
aas
mov
sbb
stos
mov
mov
sahf
icebp
mov
and
inc
pop
sbb
dec
adc
cwde
outs
or
mov
pop
xchg
mov
fbstp
jnp
mov
cmp
xchg
lds
rcl
cli
xchg
fcmovnb
pop
dec
mov
and
les
xlat
popf
mov
shr
cmc
add
sub
dec
xor
int
mov
cmp
(bad)
mov
jns
push
fisttp
dec
xchg
push
adc
(bad)
lock
outs
clc
stc
mov
mov
shr
add
loop
sub
mov
jo
add
out
out
ds
mov
popf
hlt
jns
test
fwait
arpl
jbe
leave
add
pop
mov
sub
sbb
add
add
jb
fld
ffree
ret
ror
fsub
das
fisttp
mov
add
pushf
ret
iret
loopne
mov
xchg
pop
daa
inc
sub
mov
sbb
pop
xchg
sbb
mov
aam
xchg
call
mov
jle
adc
jb
and
xchg
cmp
push
mov
sahf
xchg
scas
lods
inc
gs
repnz
cdq
add
sar
out
mov
cmp
cmc
mov
sbb
push
push
ins
jmp
movs
shl
add
es
jns
sub
sbb
push
fisubr
sar
jmp
push
movs
sbb
push
cdq
mov
movs
mov
(bad)
jge
ret
cmps
mov
or
into
aam
jl
push
dec
sub
std
call
mov
mov
in
inc
ret
outs
ret
inc
ss
ficomp
mov
sar
(bad)
rcl
popa
loop
mov
leave
icebp
pop
sti
inc
pop
mov
fucomip
mov
xchg
aad
dec
das
fs
dec
stc
sbb
jno
xlat
or
mov
pushf
arpl
out
shl
scas
(bad)
lea
add
xor
popa
mov
push
sbb
lahf
int
fnsave
pop
add
jbe
jmp
cmps
stc
in
mov
int
or
fidivr
xor
imul
adc
mov
std
push
xor
mov
shr
cmp
fwait
adc
adc
mov
js
sbb
into
iret
retf
add
jbe
in
shr
addr16
add
test
sar
xchg
xchg
loop
jb
lods
jne
pop
hlt
push
cmp
dec
out
dec
imul
mov
daa
(bad)
inc
pop
cmc
pushf
je
cmps
fst
les
push
mov
loop
jge
xor
mov
ror
xchg
mov
inc
push
movs
movs
push
pushw
mov
jp
rcl
fdiv
xchg
jmp
mov
adc
ss
pop
xchg
jne
ficomp
xor
mov
inc
cdq
pop
cmp
jg
out
call
ror
jge
add
and
mov
rcr
aad
inc
js
pusha
pop
dec
pop
mov
jns
int3
push
xor
mov
mov
mov
pop
mov
rol
xlat
inc
dec
sub
push
call
repz
pop
stc
mov
pop
(bad)
jge
jl
jle
mov
(bad)
in
jmp
imul
out
out
xor
mov
bound
fcmovnb
enter
xchg
jnp
sti
add
mov
sti
push
inc
mov
shr
mov
mov
dec
pop
jo
leave
inc
cmp
and
xchg
jle
iret
dec
dec
pushf
add
mov
pop
sub
and
push
add
ror
mov
repnz
aad
add
inc
in
pusha
push
(bad)
jmp
stc
int
mov
fnstsw
mov
xor
push
push
jge
xchg
xchg
das
push
cs
aad
mov
jl
or
dec
pop
push
loop
mov
bound
arpl
pop
jmp
pushf
pop
sbb
sahf
cwde
push
mov
(bad)
test
cli
inc
sub
loopne
sahf
loope
and
pushf
aad
fst
xchg
mov
rol
ins
adc
cli
data16
lahf
mov
jge
fild
pushf
rcl
jl
test
rol
mov
into
std
jnp
inc
add
(bad)
ins
repnz
(bad)
fsub
test
xchg
pop
das
jae
mov
push
push
or
mov
dec
scas
mov
addr16
jmp
cmps
sbb
and
bound
inc
sahf
retf
scas
(bad)
add
mov
xor
xchg
cs
push
cmp
cld
in
or
je
push
dec
mov
mov
inc
adc
cwde
fwait
sbb
(bad)
jp
push
rol
int3
sbb
inc
imul
mov
mov
push
les
retf
push
mov
enter
adc
sub
jo
pop
test
mov
jle
jmp
push
lods
dec
repnz
push
mov
ret
push
stc
cmp
jmp
jg
out
xchg
jl
jns
loopne
icebp
xchg
adc
scas
aas
rol
mov
mov
mov
pop
in
icebp
(bad)
(bad)
and
imul
add
jns
xchg
pushf
jne
fsubr
add
int3
mov
nop
mov
xor
ds
add
mov
hlt
cld
cmps
xor
scas
jbe
hlt
pusha
jle
sti
movs
mov
xchg
mov
push
jge
xor
ja
pop
retf
xchg
xchg
popa
aaa
and
enter
out
inc
sub
push
add
repnz
adc
dec
shl
push
mov
sub
dec
add
inc
sar
out
dec
movs
cwde
stos
mov
inc
inc
xchg
mov
dec
scas
imul
sbb
xchg
mov
in
mov
jmp
js
mov
bnd
movs
test
sahf
sbb
iret
fld
pop
mov
adc
movs
xor
sti
xchg
scas
loope
jbe
push
pop
mov
pushf
movs
mov
ror
pop
push
mov
scas
sbb
jb
add
sahf
xchg
shl
jecxz
xchg
ret
not
sbb
lods
and
jnp
ins
imul
xchg
ss
scas
test
jbe
repnz
mov
popf
sahf
add
outs
ins
cdq
add
sbb
es
xor
mov
inc
xor
es
cmp
push
or
add
pusha
inc
movs
imul
fisubr
fisubr
mov
mov
push
cmps
loopne
into
mov
leave
rcr
ja
pop
arpl
and
loope
mul
push
inc
mov
lock
fcom
imul
in
rcr
jmp
popf
push
out
jmp
jge
mov
or
mov
cmp
xchg
xor
not
jmp
shr
mov
das
inc
add
cmps
push
dec
add
outs
bt
pop
mov
out
xlat
cmp
nop
cmc
xor
daa
adc
mov
popa
sbb
lahf
in
hlt
jmp
mov
or
sti
test
fistp
or
sbb
pop
(bad)
pop
retf
adc
scas
push
jl
hlt
imul
sub
pop
mov
dec
cmp
fstp
xchg
pop
or
ret
mov
bound
ficomp
add
mov
or
cmc
fiadd
xor
pop
inc
retf
lods
dec
repnz
cmp
pop
jmp
push
test
pop
aam
push
cmovnp
das
repnz
data16
xchg
retf
data16
pop
or
xor
add
in
mov
ins
sbb
sub
cmp
push
mov
xlat
fistp
test
and
sbb
mov
jle
dec
sub
mov
pop
pop
fcomp
aaa
ins
sti
mov
jmp
cmp
in
mov
or
mov
inc
adc
lea
ror
add
into
out
and
jl
sbb
pop
imul
and
aas
dec
mov
xchg
pandn
lahf
nop
loop
ja
cld
pop
inc
push
in
aas
xchg
test
ja
ror
outs
fwait
les
mov
clc
pop
inc
fsub
jg
test
icebp
jae
lea
jae
movs
xchg
xor
mov
(bad)
fcmovnu
lds
cld
lods
xchg
xchg
loope
mov
adc
sahf
push
stc
mov
stos
cmp
(bad)
cmc
popa
je
mov
inc
cmp
outs
or
sbb
dec
lock
or
out
lods
or
das
xchg
adc
mov
cmp
shl
ror
or
push
hlt
out
mov
dec
jmp
inc
add
aad
push
and
test
xchg
sbb
mov
imul
xchg
sbb
pushf
xor
dec
xor
(bad)
add
push
push
mov
lods
mov
movs
jo
adc
pop
cmp
ja
sbb
ins
ds
mov
sti
mov
jle
mov
pop
leave
jnp
adc
jmp
sbb
movs
je
mul
sar
aam
lods
push
popf
test
rep
(bad)
iret
(bad)
outs
cmc
xor
lods
int
cwde
fld
mov
inc
adc
pop
cld
sub
mov
ror
popf
xchg
out
push
fsubr
(bad)
push
mov
mov
xchg
xchg
lods
add
cmc
sub
daa
or
mov
mov
and
pop
dec
cli
push
cmc
cld
mov
jae
jecxz
mov
push
int
add
sub
jns
jge
mov
inc
lds
xchg
pop
pop
sbb
dec
and
xchg
mov
sub
add
int3
dec
xor
in
and
aad
push
or
lods
mov
(bad)
retf
fisttp
add
int
xlat
arpl
pop
lods
out
call
add
push
inc
iret
xchg
pop
retf
imul
pushf
dec
xchg
dec
in
mov
out
ins
in
mov
rcl
movs
pop
(bad)
scas
addr16
out
int3
fcomi
ud0
mov
cmp
into
xchg
sub
mov
or
pop
scas
jae
xlat
sbb
xchg
mov
hlt
into
loop
mov
mov
jne
aaa
jno
inc
push
push
dec
xchg
fst
(bad)
fcmovu
xchg
fnclex
pop
pop
mov
sbb
out
ror
clc
rol
add
aad
ins
sub
pusha
ret
xchg
add
cmps
or
pop
xchg
pop
push
push
retf
push
loop
mov
je
imul
outs
mov
aam
lahf
push
push
xchg
ret
xor
inc
mov
mov
gs
rol
loop
dec
js
sar
mov
fsub
jb
pop
idiv
scas
movs
imul
in
inc
mov
xchg
inc
repnz
xor
mov
mov
jecxz
sub
xchg
popa
repz
loope
stc
push
jnp
xchg
fistp
stos
lds
das
inc
push
mov
popf
das
xor
mov
and
sahf
xchg
out
inc
sar
xlat
aas
xlat
(bad)
mov
adc
xchg
adc
mov
or
mov
jne
out
shl
dec
dec
jmp
aaa
(bad)
leave
xchg
icebp
dec
lock
retf
jmp
and
xor
and
and
in
lea
outs
inc
sbb
mov
test
hlt
push
or
stos
mov
(bad)
idiv
es
mov
fsub
ss
rol
lock
aas
dec
call
(bad)
adc
inc
inc
(bad)
xchg
inc
sahf
or
push
and
in
fcomp
lahf
movs
test
cli
jmp
cmp
add
rcl
lds
rcl
fmul
jecxz
in
push
sbb
call
(bad)
fcos
nop
mov
pushf
sub
jmp
or
cdq
sbb
in
cmp
cmps
(bad)
jne
in
shl
mov
xchg
movs
stos
test
push
pop
pusha
lods
das
bound
xchg
mov
jmp
or
fs
aam
mov
xchg
mov
xor
push
ins
mov
mov
mov
jle
or
stos
or
mov
inc
xlat
and
lea
lods
(bad)
xchg
pop
sbb
mov
and
(bad)
js
sbb
out
int3
inc
and
outs
sbb
fucomp
nop
(bad)
popa
cs
scas
out
stc
shl
hlt
mov
adc
inc
outs
clc
add
enter
and
lds
mov
test
mov
or
stc
cdq
aas
call
xchg
stc
fsub
jl
pop
inc
mov
xchg
mov
xchg
out
xchg
stos
sub
xchg
mov
or
mov
bound
repz
mov
cmc
pop
stos
add
sub
stos
dec
cs
jbe
in
push
loopne
jmp
mov
in
jb
jmp
loopne
(bad)
call
ficomp
ja
xor
sbb
dec
rcl
jo
sahf
mov
dec
pop
push
iret
dec
adc
and
xor
ret
add
adc
or
mov
and
popf
jge
push
into
test
xlat
dec
cmp
fs
and
out
ftst
jo
pop
mov
stc
scas
aaa
sti
lods
lods
add
push
inc
cdq
mov
jae
aad
int3
loope
lock
(bad)
sbb
sahf
xchg
daa
mov
push
push
pop
retf
enter
cmps
jnp
repz
(bad)
sar
maskmovq
not
mov
xor
xor
xchg
inc
daa
pop
add
cld
(bad)
mov
ror
js
cdq
fwait
jb
cmc
sar
imul
mov
stos
push
inc
jb
and
push
jp
gs
jo
rcr
data16
mov
inc
cld
jbe
loopne
icebp
jmp
fisttp
xchg
popf
pop
sub
sbb
mov
adc
adc
leave
clc
dec
js
mov
adc
lods
pop
stos
cmp
cs
lock
sahf
sub
stos
pop
push
adc
retf
sub
or
retf
retf
mov
sub
in
(bad)
push
aad
ror
aas
div
js
mov
sbb
inc
mov
pop
ja
dec
mul
fisttp
adc
cld
(bad)
outs
retf
in
lds
sti
adc
sbb
inc
xchg
call
imul
in
inc
or
div
jg
sub
or
loop
add
push
test
sahf
icebp
fisubr
push
fist
test
xchg
scas
mov
dec
sti
ret
cdq
inc
jecxz
mov
dec
pop
or
test
ins
inc
das
cmp
push
out
push
lods
dec
dec
movs
mov
xchg
in
aam
pusha
sub
mov
and
rcr
dec
adc
pop
rcr
push
sbb
cmp
dec
adc
xor
or
into
cmps
rcr
mov
push
test
mov
inc
sbb
aad
jmp
div
mov
(bad)
sub
lods
sti
and
pop
pop
daa
dec
div
fild
test
in
(bad)
adc
call
call
imul
mov
or
mov
mov
xchg
inc
das
or
jg
push
dec
addr16
icebp
das
cmp
push
fild
sti
mov
lds
div
scas
fdivr
imul
mov
or
mov
sbb
sub
pusha
lahf
das
in
test
loopne
popf
sub
sub
cvtpi2ps
push
xor
inc
fadd
sbb
retf
xor
mov
out
leave
xor
pop
sbb
cwde
or
sub
jmp
pop
scas
in
bnd
rol
jle
cmp
int
push
aad
lea
out
(bad)
bt
xchg
popf
dec
mov
sti
pop
push
push
jmp
loope
lahf
mov
xlat
aam
jnp
cmp
repnz
mov
xchg
mov
icebp
and
add
les
sbb
adc
push
fnstsw
xchg
dec
or
test
mov
(bad)
aad
fbstp
adc
inc
adc
daa
pop
add
jne
cli
sahf
hlt
scas
ret
inc
or
fnstsw
sub
rcl
or
or
mov
sbb
push
push
jmp
movs
in
das
inc
dec
mov
sub
sbb
gs
(bad)
rcr
push
adc
and
cli
data16
in
(bad)
dec
xor
retf
imul
adc
jns
test
mov
inc
inc
nop
mov
sub
or
xor
cmps
sbb
(bad)
mov
or
das
or
clc
daa
fwait
adc
mov
retf
lods
lds
adc
xchg
setle
iret
mov
stos
mov
fmul
sub
leave
xor
push
std
sbb
mov
out
push
mov
(bad)
fdivp
(bad)
aad
fbstp
adc
inc
adc
daa
pop
add
jne
cli
sahf
hlt
scas
ret
inc
or
fnstsw
sub
rcl
or
or
mov
sbb
push
push
jmp
movs
in
das
inc
dec
mov
sub
sbb
gs
(bad)
rcr
push
adc
and
cli
data16
in
(bad)
dec
xor
retf
imul
adc
jns
test
mov
inc
inc
nop
mov
sub
or
adc
test
test
fadd
test
fwait
mov
cmp
enter
lds
adc
mov
sahf
xor
(bad)
mov
stos
mov
fmul
sub
aaa
lock
leave
xor
fdivr
pop
std
sbb
mov
out
push
mov
(bad)
fdivp
call
push
pop
ja
adc
pop
add
jne
cli
sahf
hlt
stos
ret
inc
or
fnstsw
sub
icebp
stc
cmp
push
xchg
je
mov
sbb
lahf
xlat
retf
or
jns
xchg
fidiv
adc
pusha
sbb
inc
repnz
dec
repz
or
scas
es
cmp
mov
ins
shl
repz
sar
(bad)
ja
mov
jae
inc
dec
xchg
mov
sbb
movs
mov
in
cdq
sbb
lahf
aam
cwde
and
lods
mov
xchg
pop
mov
or
das
or
cld
es
arpl
into
mov
lods
lds
adc
xchg
push
call
mov
scas
mov
(bad)
sub
leave
ss
pop
cld
sbb
mov
out
push
mov
mov
icebp
(bad)
aam
(bad)
adc
inc
adc
and
add
mov
lahf
hlt
scas
ret
inc
or
fnstcw
sub
rcl
or
or
mov
sbb
push
or
push
movs
in
cs
dec
mov
sub
and
out
(bad)
aam
call
movs
and
(bad)
(bad)
fistp
loopne
xlat
dec
xor
jmp
test
mov
inc
inc
nop
cmps
mov
add
fild
fxch
jae
xor
mov
cmps
sbb
jbe
mov
xchg
pop
mov
or
das
or
js
sbb
mov
movs
lods
lds
xor
test
mov
ss
stos
or
pop
dec
clc
sub
dec
xor
js
pop
adc
cmp
mov
or
out
es
(bad)
pop
icebp
(bad)
aad
fbstp
xchg
fcmovnb
adc
pop
ficom
cmc
xchg
cli
mov
pop
inc
mov
fnstsw
sub
inc
rcr
or
imul
dec
mov
sbb
ja
sti
je
dec
mov
sub
or
in
bound
rcr
aad
movs
movs
movs
jl
cdq
mov
out
cmp
cmps
(bad)
dec
xor
imul
adc
and
stos
pop
lock
mov
sub
sub
xor
cmps
sbb
pminsw
daa
aaa
in
or
das
or
aaa
sbb
mov
mov
lds
leave
adc
xchg
pop
sahf
aaa
sub
call
mov
mov
rol
das
dec
aas
jo
sar
push
std
adc
mov
out
push
mov
(bad)
fdivp
(bad)
aad
xlat
ja
adc
inc
adc
daa
pop
add
jne
cli
pushf
cld
cmps
ret
inc
add
fistp
sub
ret
rcr
or
add
mov
adc
aaa
push
or
shld
daa
inc
dec
and
in
enter
xchg
pop
xor
test
push
rcr
pop
adc
movs
sub
cli
fistp
in
movs
aam
xor
retf
arpl
jmp
test
mov
inc
inc
cwde
stos
mov
or
fadd
ror
jno
cmp
mov
cmps
sbb
(bad)
mov
add
sub
daa
fwait
adc
mov
cmp
ret
lods
int
lahf
leave
adc
nop
iret
mov
sub
dec
ss
leave
xor
push
std
sbb
and
shl
xchg
(bad)
fdivp
(bad)
aad
pop
ja
adc
inc
nop
jecxz
pop
add
jne
cli
push
hlt
scas
jecxz
or
cmp
cdq
add
rcr
add
or
jl
fs
aas
xlat
push
imul
(bad)
loopne
ret
mov
lods
xchg
sbb
gs
loop
(bad)
sar
push
xchg
add
and
cli
data16
in
push
dec
mov
retf
imul
(bad)
movs
sub
add
rcl
or
or
xor
cmps
sbb
(bad)
xchg
in
or
add
jo
cmps
fwait
xor
mov
retf
lods
les
xchg
xchg
xchg
loope
mov
sub
sbb
dec
mov
stos
(bad)
out
fimul
and
mov
cmp
jg
pop
std
sbb
mov
in
push
mov
xchg
icebp
call
push
fbstp
push
fild
mov
lds
sahf
mov
ret
inc
or
fnsave
imul
mov
dec
ins
int
sbb
cmp
movs
in
outs
inc
dec
mov
sub
adc
addr16
xchg
rcr
push
adc
and
cli
fistp
xor
cmps
(bad)
or
ret
into
call
mov
jb
inc
inc
shl
sub
or
jae
xor
mov
in
je
xor
mov
xchg
pop
mov
dec
imul
mov
adc
mov
retf
out
add
jge
rcl
xchg
jecxz
mov
and
call
imul
stc
sub
jmp
jg
pop
std
or
jecxz
or
mov
push
mov
iret
(bad)
icebp
(bad)
xchg
push
fbstp
sub
retf
add
daa
pop
inc
add
add
hlt
scas
add
fnstsw
or
rcl
xchg
mov
jmp
ins
mov
aas
inc
dec
jmp
mov
loopne
push
dec
cmp
add
sbb
gs
call
fs
pop
jle
stos
cli
data16
hlt
cmps
(bad)
dec
and
mov
test
call
jo
add
xchg
dec
sub
mov
enter
jae
jecxz
lods
or
or
iret
stos
xchg
pop
mov
sub
outs
ret
retf
icebp
mov
sbb
retf
cmp
push
fidiv
popf
rcl
rol
mov
jne
ror
div
xchg
stos
mov
fmul
ins
push
jo
jmp
outs
push
pop
fstp
sub
(bad)
jmp
(bad)
fdivp
not
push
fnstsw
pop
(bad)
jecxz
push
and
jno
cli
mov
or
fnstsw
sub
mov
rcr
or
mov
sbb
push
push
retf
shld
sub
movs
in
enter
cdq
cmp
gs
rcl
push
call
sub
and
cli
outs
(bad)
mov
in
(bad)
dec
xor
jmp
into
jmp
mov
pop
dec
inc
xchg
mov
sub
test
enter
xor
mov
lods
(bad)
mov
or
lock
fwait
sbb
mov
enter
(bad)
je
lds
xchg
mov
scas
mov
setle
iret
mov
stos
mov
fmul
or
int
xor
jge
pop
stc
sbb
mov
out
add
mov
into
icebp
out
aad
fbstp
adc
pop
add
gs
sahf
hlt
scas
ret
inc
sbb
add
aad
sbb
sbb
push
inc
aas
pop
push
jmp
movs
in
aas
add
mov
fdivr
ins
sbb
(bad)
nop
pop
sti
inc
adc
xor
cli
data16
movs
cmps
rcr
ret
into
stc
adc
cmp
dec
jo
push
inc
nop
mov
cmp
xchg
(bad)
loop
xchg
cdq
enter
xor
cmps
pop
gs
jbe
lahf
jmp
das
sbb
clc
and
fstp
bound
retf
lods
test
adc
nop
pop
fidiv
iret
mov
mov
cmps
stos
pushf
out
or
sub
leave
jb
ins
int3
jg
pop
std
sbb
cmps
outs
dec
jecxz
out
inc
lods
call
(bad)
aad
add
add
addr16
fild
jecxz
pop
add
jne
js
hlt
out
inc
or
fnstsw
sub
rcl
data16
or
mov
sbb
push
push
jmp
push
data16
pop
int
mov
sub
sbb
fisub
(bad)
mov
and
and
cli
data16
pusha
and
retf
imul
adc
jns
test
lods
test
jo
mov
dec
sub
or
mov
jecxz
lods
or
sbb
(bad)
xor
or
clc
daa
fwait
adc
mov
std
xor
adc
xchg
setle
iret
mov
stos
mov
fmul
sub
leave
xor
push
std
sbb
mov
out
push
mov
(bad)
fdivp
(bad)
aad
fbstp
adc
inc
adc
daa
pop
add
jne
cli
sahf
hlt
scas
ret
inc
or
fnstsw
sub
rcl
or
or
mov
sbb
push
push
jmp
movs
in
das
inc
dec
mov
sub
sbb
gs
(bad)
rcr
push
adc
and
cli
data16
in
(bad)
dec
xor
retf
imul
adc
jns
test
mov
inc
inc
nop
mov
sub
or
xor
cmps
sbb
(bad)
mov
or
das
or
clc
daa
fwait
adc
mov
retf
lods
lds
adc
xchg
setle
iret
mov
stos
mov
fmul
sub
leave
xor
push
std
sbb
mov
out
push
mov
(bad)
fdivp
(bad)
aad
fbstp
adc
inc
adc
daa
pop
add
jne
cli
sahf
hlt
scas
ret
inc
or
fnstsw
sub
rcl
or
or
mov
sbb
push
push
jmp
movs
in
das
inc
dec
mov
sub
sbb
gs
(bad)
rcr
push
adc
and
cli
data16
in
(bad)
dec
xor
retf
imul
adc
jns
test
cld
test
jo
mov
xor
cmp
dec
jb
mov
das
or
jbe
or
xchg
(bad)
xor
or
or
jnp
fwait
push
sbb
fdiv
mov
jecxz
pushf
shl
loope
cmp
sar
jnp
mov
sub
out
fdivr
lahf
hlt
(bad)
mov
pop
std
retf
outs
sti
ja
out
push
cmp
fsubrp
jnp
push
icebp
repnz
loope
adc
ins
fild
xchg
add
jne
jg
hlt
xlat
inc
inc
or
cmp
add
rcr
dec
(bad)
jmp
xchg
dec
mov
push
ret
jnp
jmp
leave
add
mov
inc
pop
sbb
push
sub
imul
inc
mov
cwde
mov
fidivr
jp
xlat
dec
add
(bad)
test
jo
ret
inc
nop
adc
xchg
mov
jg
cmp
mov
mov
jecxz
sub
jbe
or
xchg
xor
in
or
clc
daa
fwait
inc
xchg
sbb
mov
mov
popf
hlt
pushf
rcl
xchg
loope
cmp
sar
mov
push
or
fadd
sub
aaa
jo
leave
pop
mov
fadd
cwde
pop
std
xchg
repz
out
pushf
xor
mov
pop
jbe
push
imul
adc
out
rol
lds
lahf
hlt
lahf
dec
inc
or
fnstsw
sub
inc
sub
int
loop
lods
into
cmc
movs
rol
retf
mov
and
push
test
xlat
rol
and
lahf
mov
das
sbb
dec
gs
mov
mov
xchg
jnp
dec
enter
cld
clc
leave
push
icebp
fmul
mov
seta
movs
das
pop
mov
cpuid
test
stos
adc
ror
pop
bound
sub
rcr
in
jle
hlt
in
sahf
jle
fxch
xor
push
push
int
lds
pop
jne
jbe
jmp
imul
shl
jge
sar
rcr
mov
xchg
xchg
loope
into
loopne
repnz
inc
xchg
call
(bad)
jecxz
mov
clc
push
pop
adc
mov
jnp
std
push
adc
push
addr16
mov
call
mov
sub
pushf
and
outs
inc
stos
hlt
imul
(bad)
cmp
cmc
jbe
jmp
or
data16
and
dec
movs
in
push
xor
dec
lds
(bad)
jae
sbb
nop
add
adc
inc
sub
out
xor
xor
aad
sub
lea
mov
aad
into
fild
jo
and
(bad)
retf
aad
dec
sub
in
call
cmps
push
xlat
inc
rol
je
nop
jbe
(bad)
cmps
clc
shl
mov
lds
in
test
(bad)
(bad)
enter
rcl
mov
shl
pop
inc
xchg
call
shr
in
mov
dec
xor
leave
jbe
add
or
xchg
jo
loop
or
mov
jb
out
int3
and
mov
adc
inc
inc
mov
inc
ins
movs
repz
sbb
(bad)
repnz
cmp
cmp
fisub
xlat
jmp
clc
(bad)
fwait
shl
jns
mov
inc
aas
adc
mov
xor
jg
jl
or
dec
adc
loop
movs
mov
pop
xchg
arpl
xchg
enter
or
ret
sahf
fwait
jle
sbb
fist
jno
inc
nop
in
fldl2t
or
repnz
mov
stc
mov
inc
int
inc
sar
cmc
jbe
out
repz
rcl
mov
daa
fwait
les
fcomp
mov
lods
sbb
mov
out
retf
popa
cli
pop
dec
xchg
call
vpmulhw
dec
aaa
jo
lods
inc
jne
mov
jb
int3
cs
mov
jb
jecxz
daa
mov
xchg
lahf
cwde
mov
jbe
pop
jns
inc
xor
jne
ror
inc
or
or
cld
movs
sub
xor
js
mov
adc
and
jge
or
push
push
rcr
xor
movs
ds
daa
jg
int
cmp
jmp
jmp
pop
pop
xchg
out
dec
jbe
mov
mov
xlat
dec
and
in
mov
add
dec
scas
ret
or
mov
aaa
fild
ficom
sbb
std
xchg
imul
out
mov
out
jae
mov
pop
ins
mov
jl
lods
ja
loop
scas
mov
inc
mov
xchg
stos
in
ficom
cdq
dec
clc
popa
or
mov
inc
dec
add
pop
add
sbb
cdq
lea
jmp
mov
mov
and
fwait
inc
aas
jne
lods
out
imul
ffree
inc
or
pusha
adc
in
mov
mov
pop
sbb
sub
dec
xchg
dec
movs
in
dec
and
lods
xor
xchg
sbb
sub
push
popf
mov
mov
inc
cmp
call
cmps
jae
in
test
push
cmp
mov
bound
and
hlt
shr
ja
ins
mov
out
lods
or
pop
rol
sbb
rcr
test
mov
adc
fnstcw
aam
mov
fadd
adc
out
in
jnp
mov
sbb
jmp
dec
daa
js
mov
adc
pop
std
pop
push
xlat
daa
dec
lahf
cdq
mov
fmul
cmp
fsubr
fbstp
jl
xor
push
aas
inc
jno
in
jne
xchg
retf
test
ins
xchg
fwait
dec
dec
cld
add
xchg
push
cdq
paddusw
mov
or
inc
test
lea
mov
dec
std
jno
add
inc
adc
sub
rcr
and
rcl
jg
mov
mov
xor
mov
aas
mov
movs
test
jmp
and
add
aas
imul
fxch
and
inc
pusha
int
push
push
test
loope
icebp
inc
mov
or
mov
shl
fidiv
mov
ret
test
in
xchg
dec
sti
imul
inc
fxch
clc
movs
stos
sub
test
xor
and
jns
loopne
outs
xchg
or
xlat
out
xchg
mov
adc
inc
ja
push
xor
mov
jle
rcl
xor
mov
pop
cdq
add
mov
test
fistp
jae
xor
push
push
cwde
push
and
xor
dec
les
hlt
jle
js
push
add
pop
mov
xor
and
and
jbe
ins
in
jmp
adc
jp
cmps
(bad)
dec
xor
retf
imul
adc
jns
test
mov
inc
inc
nop
mov
sub
or
xor
cmps
sbb
(bad)
mov
or
das
or
clc
daa
fwait
adc
mov
retf
lods
lds
adc
xchg
setle
iret
mov
stos
mov
fmul
sub
leave
xor
push
std
sbb
mov
out
push
mov
(bad)
fdivp
(bad)
aad
fbstp
adc
inc
adc
daa
pop
add
jne
cli
sahf
hlt
scas
ret
inc
or
fnstsw
sub
rcl
or
or
mov
sbb
push
push
jmp
movs
in
das
inc
dec
mov
sub
sbb
gs
(bad)
rcr
push
adc
and
cli
data16
in
(bad)
dec
xor
retf
imul
adc
jns
test
mov
inc
inc
nop
mov
sub
or
xor
cmps
sbb
es
popa
fs
popa
outs
cmp
inc
pop
mov
mov
mov
fmul
sub
leave
xor
push
std
sbb
mov
out
push
mov
(bad)
fdivp
(bad)
aad
fbstp
adc
inc
adc
daa
pop
add
jne
cli
sahf
hlt
scas
ret
inc
or
fnstsw
sub
rcl
or
or
mov
sbb
push
push
jmp
movs
in
das
inc
dec
mov
sub
sbb
gs
(bad)
rcr
push
adc
and
cli
data16
in
(bad)
dec
xor
retf
imul
adc
jns
test
mov
inc
inc
nop
mov
sub
or
xor
cmps
sbb
(bad)
mov
or
das
or
clc
daa
fwait
adc
mov
retf
lods
lds
adc
xchg
setle
iret
mov
add
add
repnz
outs
packuswb
pcmpeqw
punpcklbw
paddsw
push
paddsw
psrlq
psllq
pand
pop
pslld
paddb
packuswb
pslld
jmp
ficomp
shl
pop
shr
sahf
xchg
scas
and
cli
cmp
fadd
punpckhbw
pmullw
pmulhw
push
paddusw
psrad
paddd
por
xor
psraw
pcmpeqb
psllq
pand
pop
pslld
paddb
packuswb
pslld
ret
xchg
pop
shl
out
mov
mov
punpckhbw
pmullw
pmulhw
sub
paddusw
psrad
paddd
por
mov
psraw
pcmpeqb
psllq
pand
fnop
fnop
fnop
fnop
fnop
fnop
fnop
fnop
fnop
fnop
fnop
fnop
fnop
fnop
fnop
fnop
fnop
fnop
fnop
fnop
fnop
fnop
fnop
fnop
fnop
fnop
fnop
fnop
fnop
fnop
fnop
fnop
fnop
fnop
fnop
fnop
fnop
fnop
fnop
fnop
fnop
fnop
fnop
fnop
fnop
fnop
fnop
fnop
fnop
fnop
fnop
fnop
fnop
fnop
fnop
fnop
fnop
fnop
fnop
fnop
fnop
fnop
fnop
fnop
fnop
fnop
fnop
fnop
fnop
fnop
fnop
fnop
fnop
fnop
fnop
fnop
fnop
fnop
fnop
fnop
fnop
fnop
fnop
fnop
fnop
fnop
fnop
fnop
fnop
fnop
fnop
fnop
fnop
fnop
fnop
fnop
fnop
fnop
fnop
fnop
fnop
fnop
fnop
fnop
fnop
fnop
fnop
fnop
fnop
fnop
fnop
fnop
fnop
fnop
fnop
fnop
fnop
fnop
fnop
fnop
fnop
fnop
fnop
fnop
fnop
fnop
fnop
fnop
fnop
fnop
fnop
fnop
fnop
fnop
fnop
fnop
fnop
fnop
fnop
fnop
fnop
fnop
fnop
fnop
fnop
fnop
fnop
fnop
fnop
fnop
fnop
fnop
fnop
fnop
fnop
fnop
fnop
fnop
fnop
push
fnop
fnop
fnop
fnop
fnop
fnop
fnop
fnop
fnop
fnop
fnop
xor
fnop
fnop
fnop
fnop
fnop
fnop
fnop
fnop
fnop
fnop
fnop
pop
fnop
fnop
fnop
fnop
fnop
fnop
fnop
fnop
fnop
fnop
fnop
fnop
fnop
fnop
fnop
fnop
fnop
fnop
fnop
fnop
fnop
fnop
fnop
fnop
fnop
fnop
fnop
fnop
fnop
fnop
fnop
fnop
fnop
fnop
fnop
fnop
fnop
fnop
fnop
fnop
fnop
fnop
fnop
fnop
fnop
fnop
fnop
fnop
fnop
fnop
fnop
fnop
fnop
fnop
fnop
fnop
fnop
fnop
fnop
fnop
fnop
fnop
fnop
fnop
fnop
fnop
fnop
fnop
fnop
fnop
fnop
fnop
fnop
fnop
fnop
fnop
fnop
fnop
fnop
pcmpgtd
pcmpgtd
paddsw
pandn
or
pandn
paddusw
psrad
jmp
or
rcl
cdq
dec
int3
adc
std
(bad)
dec
addr16
paddusb
pcmpeqb
pcmpeqw
jmp
stos
sub
scas
fstp
mov
jmp
lods
loope
and
sbb
mov
xor
shr
mov
mov
push
xchg
sub
enter
ja
pcmpeqd
packuswb
paddw
punpcklbw
pop
paddsw
paddsw
psrlq
pcmpeqw
pop
pcmpeqd
packuswb
paddw
punpcklbw
add
paddsw
paddsw
psrlq
pcmpeqw
jmp
pcmpeqd
packuswb
paddw
punpcklbw
paddsw
paddsw
psrlq
pcmpeqw
push
pcmpeqd
packuswb
paddw
punpcklbw
pop
paddsw
paddsw
psrlq
pcmpeqw
call
pcmpeqd
packuswb
paddw
punpcklbw
push
paddsw
paddsw
psrlq
pcmpeqw
pop
pcmpeqd
packuswb
paddw
punpcklbw
paddsw
paddsw
psrlq
pcmpeqw
bswap
pcmpeqd
packuswb
paddw
punpcklbw
rdtsc
paddsw
paddsw
psrlq
pcmpeqw
fld
pcmpeqd
packuswb
paddw
punpcklbw
fnop
paddsw
paddsw
psrlq
pcmpeqw
loop
pcmpeqd
packuswb
paddw
punpcklbw
jmp
paddsw
paddsw
psrlq
pcmpeqw
pop
pcmpeqd
packuswb
paddw
punpcklbw
adc
paddsw
paddsw
psrlq
pcmpeqw
test
jne
pcmpeqd
packuswb
paddw
psllw
paddw
punpcklwd
pxor
punpckldq
inc
punpckldq
packssdw
psubsb
pcmpeqd
push
paddusb
psrlw
movq
pcmpgtw
xor
punpckhwd
psllq
punpcklwd
psubd
pop
psllw
paddw
punpcklwd
pxor
cmp
jne
punpckldq
punpckldq
packssdw
psubsb
mov
pcmpeqd
paddusb
psrlw
movq
push
pcmpgtw
punpckhwd
psllq
punpcklwd
pop
psubd
psllw
paddw
punpcklwd
xor
pxor
punpckldq
punpckldq
packssdw
dec
psubsb
pcmpeqd
paddusb
psrlw
dec
movq
pcmpgtw
punpckhwd
psllq
dec
punpcklwd
psubd
psllw
paddw
dec
punpcklwd
pxor
punpckldq
punpckldq
xor
packssdw
psubsb
pcmpeqd
paddusb
call
psrlw
movq
pcmpgtw
punpckhwd
push
psllq
punpcklwd
psubd
psllw
cmp
jne
mov
paddw
punpcklwd
pxor
punpckldq
add
punpckldq
packssdw
psubsb
pcmpeqd
mov
paddusb
psrlw
movq
pcmpgtw
add
punpckhwd
psllq
punpcklwd
psubd
call
psllw
paddw
punpcklwd
pxor
mov
punpckldq
punpckldq
packssdw
psubsb
push
punpckldq
pcmpgtw
paddd
psubsw
mov
pmulhw
psubusb
pcmpgtb
pslld
sub
pxor
psubusb
punpckhbw
push
pand
psubusb
pcmpgtb
pslld
push
pxor
psubusb
punpckhbw
push
pand
psubusb
pcmpgtb
pslld
push
pxor
psubusb
punpckhbw
push
pand
psubusb
pcmpgtb
pslld
push
pxor
psubusb
punpckhbw
push
pand
psubusb
pcmpgtb
pslld
push
pxor
psubusb
punpckhbw
mov
pand
psubusb
pcmpgtb
pslld
add
pxor
psubusb
punpckhbw
push
pand
psubusb
pcmpgtb
pslld
sub
pxor
psubusb
punpckhbw
push
pand
psubusb
pcmpgtb
pslld
push
pxor
psubusb
punpckhbw
call
pand
psubusb
pcmpgtb
pslld
mov
pxor
psubusb
punpckhbw
mov
pand
psubusb
pcmpgtb
pslld
add
pxor
psubusb
punpckhbw
mov
pand
psubusb
pcmpgtb
pslld
add
pxor
psubusb
punpckhbw
call
pand
psubusb
pcmpgtb
pslld
push
pxor
psubusb
punpckhbw
push
pand
pandn
punpckhbw
psubb
call
packuswb
punpckldq
pslld
movq
pmullw
pcmpgtd
jmp
arpl
repnz
out
jmp
ror
in
jmp
pop
lahf
out
jo
repz
mov
punpcklwd
psubd
punpckhdq
paddw
packssdw
jmp
pop
popf
loopne
popa
movs
out
ins
scas
paddd
punpcklwd
psubd
punpckhdq
paddw
packssdw
jmp
sub
icebp
xor
cmp
paddd
mov
punpcklwd
psubd
punpckhdq
paddw
add
packssdw
jmp
pop
mov
jmp
punpcklwd
mov
psubd
punpckhdq
paddw
packssdw
add
jmp
aam
pop
mov
pusha
mov
punpcklwd
psubd
call
punpckhdq
paddw
packssdw
jmp
aas
add
adc
jmp
paddd
punpcklwd
psubd
punpckhdq
pop
paddw
packssdw
jmp
push
xchg
(bad)
pop
push
(bad)
stos
paddd
push
punpcklwd
psubd
punpckhdq
paddw
push
packssdw
jmp
mov
or
adc
(bad)
shl
popa
rcl
fldenv
push
paddw
packssdw
call
jmp
xor
add
inc
mov
(bad)
shl
popa
ror
fstp
punpckhdq
paddw
packssdw
jmp
mov
ds
add
leave
or
push
paddd
punpcklwd
psubd
punpckhdq
mov
paddw
packssdw
pcmpeqw
psrlq
sub
paddw
punpckldq
psrlq
pmullw
mov
psubw
psrlq
psrld
psubb
sub
paddb
pcmpeqd
movq
pcmpeqw
call
pcmpeqw
psllw
por
por
xor
psubd
pmulhw
movq
psllq
xor
punpcklwd
pmullw
psubw
psrlq
add
psrld
psubb
paddb
pcmpeqd
push
movq
pcmpeqw
pcmpeqw
psllw
mov
por
por
psubd
pmulhw
push
movq
psllq
punpcklwd
pmullw
push
psubw
psrlq
psrld
psubb
push
paddb
pcmpeqd
movq
pcmpeqw
call
pcmpeqw
psllw
por
por
jmp
psubd
pmulhw
movq
psllq
pop
punpcklwd
pmullw
psubw
psrlq
add
psrld
psubb
paddb
pcmpeqd
push
movq
pcmpeqw
pcmpeqw
psllw
pop
por
por
psubd
pmulhw
call
movq
psllq
punpcklwd
pmullw
cmp
jne
pslld
psubb
jmp
adc
sub
mov
punpckldq
mov
psrlw
pcmpgtb
pcmpeqw
jmp
punpcklwd
pcmpgtw
pmaddwd
pcmpgtb
cwde
fcom
mov
sub
push
in
fs
in
fisttp
xor
jbe
into
cmp
test
arpl
sub
ret
pop
fcom
push
in
das
sbb
inc
pop
call
call
psrld
pmaddwd
psubsw
packssdw
mov
paddw
punpckhdq
packuswb
pcmpgtb
mov
paddb
punpckhbw
pxor
psrld
inc
pmaddwd
punpckhdq
packuswb
pcmpgtb
mov
paddb
punpckhbw
pxor
psrld
mov
pmaddwd
punpckhdq
packuswb
pcmpgtb
ret
xchg
jnp
add
add
ds
lahf
or
mov
mov
jae
sbb
dec
inc
pop
adc
adc
dec
push
sub
repnz
xor
sbb
paddb
punpckhbw
pxor
psrld
mov
pmaddwd
punpckhdq
packuswb
pcmpgtb
push
paddb
punpckhbw
pxor
psrld
pop
pmaddwd
punpckhdq
packuswb
pcmpgtb
mov
paddb
punpckhbw
pxor
psrld
mov
pmaddwd
punpckhdq
packuswb
pcmpgtb
push
paddb
punpckhbw
pxor
psrld
mov
pmaddwd
punpckhdq
packuswb
pcmpgtb
mov
paddb
punpckhbw
pxor
psrld
pmaddwd
punpckhdq
packuswb
pcmpgtb
cmp
jne
paddb
punpckhbw
pxor
psrld
pmaddwd
punpckhdq
packuswb
pcmpgtb
cmp
jne
psraw
paddw
pxor
punpckhdq
pop
pmaddwd
psubsb
paddusw
paddw
mov
psubb
psrlw
paddsb
psrlw
mov
pcmpgtw
paddw
psubusb
mov
psrld
punpckhwd
pcmpeqb
psubd
add
punpckhbw
psubusb
paddb
paddsb
mov
pxor
punpckhdq
pmaddwd
psubsb
mov
paddusw
paddw
psubb
psrlw
add
paddsb
psrlw
pcmpgtw
paddw
mov
psubusb
psrld
punpckhwd
add
pcmpeqb
psubd
punpckhbw
psubusb
lods
paddb
paddsb
pxor
punpckhdq
test
je
pmaddwd
psubsb
paddusw
paddw
add
psubb
psrlw
paddsb
psrlw
mov
pcmpgtw
paddw
psubusb
cmp
jne
psrld
punpckhwd
pcmpeqb
psubd
mov
punpckhbw
psubusb
paddb
paddsb
cmp
jne
pxor
punpckhdq
pmaddwd
psubsb
mov
paddusw
paddw
psubb
psrlw
xor
paddsb
pcmpgtd
pmaddwd
pand
push
punpckhdq
jmp
std
ds
ss
pand
punpcklbw
push
pxor
paddusw
psllq
punpcklbw
push
pmullw
psubw
psubusb
pmulhw
push
paddusb
pmaddwd
pcmpeqd
psubd
push
psraw
psllw
pmullw
psrlw
push
punpckhwd
paddd
paddb
psubsw
push
pand
punpckhdq
jmp
cwde
fbld
stos
icebp
xor
pand
push
punpcklbw
pxor
paddusw
psllq
call
punpcklbw
pmullw
psubw
psubusb
add
pmulhw
paddusb
pmaddwd
pcmpeqd
ret
pop
int3
(bad)
push
cmc
dec
push
sbb
xor
aam
call
inc
daa
mov
popa
(bad)
fild
shr
xchg
scas
and
cli
cmp
xchg
pop
shl
out
mov
mov
fstp
mov
jmp
loope
jmp
jns
out
sbb
mov
xor
shr
or
push
xchg
sub
enter
cwde
fcom
mov
push
mov
in
fisttp
xor
jbe
into
call
jg
xor
sbb
fcomp
(bad)
push
cmc
dec
push
sbb
xor
aam
call
xchg
aam
shl
stos
call
mov
mov
shl
lock
xlat
out
pop
mov
mov
push
cmps
(bad)
loope
sbb
fdiv
jae
fucomip
jp
shl
xchg
(bad)
out
cmps
rcl
ja
shr
imul
fucomip
jp
rol
fwait
cmc
sbb
sti
mov
push
mov
test
loop
push
arpl
sub
pop
fcom
in
das
sbb
inc
pop
call
retf
jnp
add
add
ds
lahf
or
nop
mov
adc
mov
push
dec
dec
inc
pop
adc
adc
dec
push
sub
repnz
xor
jle
sbb
fcomp
(bad)
push
cmc
dec
push
sbb
xor
aam
aam
jno
popf
retf
inc
daa
mov
popa
(bad)
fild
shr
sahf
xchg
scas
and
cli
cmp
xchg
shl
out
mov
mov
scas
fstp
mov
jmp
loope
jmp
jns
out
sbb
mov
xor
shr
stc
(bad)
dec
call
movs
fwait
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
mov
movs
dec
sysexit
jmp
dec
push
out
push
pop
mov
movs
dec
push
aaa
jmp
dec
push
out
inc
pop
mov
movs
dec
push
inc
xor
mov
mov
fist
movs
mov
mov
lea
push
mov
push
push
mov
movs
dec
push
aaa
in
(bad)
les
push
mov
iret
outs
push
mov
movs
dec
fistp
mov
push
mov
movs
mov
lods
movs
dec
push
(bad)
movs
mov
lods
movs
dec
push
and
(bad)
mov
dec
or
sub
dec
test
mov
mov
dec
push
push
sbb
mov
pop
mov
inc
pop
mov
inc
pop
mov
inc
pop
mov
inc
pop
mov
inc
pop
mov
inc
pop
mov
inc
pop
mov
inc
pop
mov
inc
pop
mov
inc
pop
mov
inc
pop
mov
inc
pop
mov
inc
pop
mov
inc
pop
mov
inc
pop
mov
inc
pop
mov
inc
pop
mov
inc
pop
mov
inc
pop
mov
inc
pop
mov
inc
pop
mov
inc
pop
mov
inc
pop
mov
inc
pop
mov
inc
pop
mov
inc
pop
mov
inc
pop
mov
inc
pop
mov
inc
pop
mov
inc
pop
mov
inc
pop
mov
inc
pop
mov
inc
pop
mov
inc
pop
mov
inc
pop
mov
inc
pop
mov
inc
pop
mov
inc
pop
mov
inc
pop
mov
inc
pop
mov
inc
pop
mov
inc
pop
mov
inc
pop
mov
inc
pop
mov
inc
pop
mov
inc
pop
mov
aaa
jmp
dec
push
out
out
push
mov
movs
dec
push
in
into
or
mov
movs
dec
push
mov
pop
fwait
sar
(bad)
test
xchg
xor
xchg
in
(bad)
pop
mov
xchg
out
and
movs
ret
movs
dec
push
cmp
movs
pop
test
mov
sbb
movs
inc
cmp
xor
push
mov
lods
dec
push
mov
and
mov
add
xor
and
(bad)
push
mov
movs
dec
push
sbb
jmp
sbb
jmp
sbb
jmp
sbb
jmp
sbb
jmp
sbb
jmp
sbb
jmp
sbb
jmp
sbb
jmp
sbb
jmp
sbb
jmp
sbb
jmp
sbb
jmp
sbb
jmp
sbb
jmp
sbb
jmp
sbb
jmp
sbb
jmp
sbb
jmp
sbb
jmp
sbb
jmp
sbb
jmp
sbb
jmp
sbb
jmp
sbb
jmp
sbb
jmp
sbb
jmp
sbb
jmp
sbb
jmp
sbb
jmp
sbb
jmp
sbb
jmp
sbb
jmp
sbb
jmp
sbb
jmp
sbb
jmp
sbb
jmp
sbb
jmp
sbb
jmp
sbb
jmp
sbb
jmp
sbb
jmp
sbb
jmp
sbb
jmp
sbb
jmp
sbb
jmp
sbb
jmp
sbb
jmp
sbb
jmp
aaa
mov
ror
pop
cmp
in
push
mov
movs
inc
hlt
xor
daa
stos
push
aas
pop
dec
pop
cmp
sbb
or
dec
call
fcomip
int3
mov
or
test
push
xor
jmp
dec
push
out
mov
mov
dec
xlat
jle
movs
adc
icebp
mov
dec
or
inc
dec
push
mov
jmp
dec
push
out
lahf
push
mov
dec
not
movs
push
dec
movs
mov
push
dec
movs
mov
push
dec
movs
mov
push
dec
movs
mov
push
dec
movs
mov
push
dec
movs
mov
push
dec
movs
mov
push
dec
movs
mov
push
dec
movs
mov
push
dec
movs
mov
push
dec
movs
mov
push
dec
movs
mov
push
dec
movs
mov
push
dec
movs
mov
push
dec
movs
mov
push
dec
movs
mov
push
dec
movs
mov
push
dec
movs
mov
push
dec
movs
mov
push
dec
movs
mov
push
dec
movs
mov
push
dec
movs
mov
push
dec
movs
mov
push
dec
movs
mov
mov
or
movs
dec
push
mov
jmp
dec
push
out
mov
adc
outs
push
mov
movs
dec
fistp
or
mov
retf
mov
movs
dec
fistp
movs
dec
push
mov
dec
ins
push
mov
movs
dec
fistp
mov
push
mov
xor
(bad)
mov
fistp
mov
push
push
push
or
(bad)
mov
fistp
mov
push
push
push
jmp
mov
test
mov
movs
adc
mov
adc
push
mov
mov
jge
mov
jge
mov
jge
mov
jge
mov
jge
mov
jge
mov
jge
mov
jge
mov
jge
mov
jge
mov
jge
mov
jge
mov
jge
mov
jge
mov
jge
mov
jge
mov
jge
mov
jge
mov
jge
mov
jge
mov
jge
mov
mov
movs
dec
push
aas
pop
dec
and
movs
sub
fisttp
mov
aaa
fld
jne
dec
pop
mov
cmps
dec
push
leave
push
repz
mov
cld
mov
push
in
dec
test
movs
mov
imul
fwait
je
sbb
imul
fwait
je
sbb
imul
fwait
je
sbb
imul
fwait
je
sbb
imul
fwait
je
sbb
imul
fwait
je
sbb
imul
fwait
je
sbb
imul
fwait
je
sbb
imul
fwait
je
sbb
imul
loope
aad
movs
inc
shl
dec
push
aaa
loope
push
xor
mov
dec
push
mov
pop
adc
cld
rcl
or
inc
movs
inc
rcl
cmps
dec
push
push
fwait
ins
push
mov
mov
adc
inc
movs
inc
shr
cmps
dec
push
aaa
loope
push
xor
mov
inc
xlat
jnp
inc
push
mov
movs
dec
test
mov
movs
retf
movs
dec
push
jmp
movs
push
mov
xor
mov
movs
dec
push
cmp
movs
or
aas
fwait
dec
and
sbb
aaa
icebp
inc
xlat
jle
dec
push
mov
dec
out
mov
xchg
js
(bad)
xchg
js
(bad)
xchg
js
(bad)
xchg
js
(bad)
xchg
js
(bad)
xchg
js
(bad)
xchg
js
(bad)
xchg
js
(bad)
xchg
js
(bad)
xchg
js
(bad)
xchg
js
(bad)
xchg
js
(bad)
xchg
js
(bad)
xchg
js
(bad)
xchg
js
(bad)
xchg
js
(bad)
xchg
js
(bad)
xchg
js
(bad)
xchg
js
(bad)
xchg
js
(bad)
xchg
js
(bad)
xchg
js
(bad)
xchg
js
(bad)
xchg
js
(bad)
xchg
js
(bad)
xchg
js
(bad)
xchg
js
(bad)
xchg
js
(bad)
xchg
js
(bad)
xchg
js
(bad)
xchg
js
(bad)
xchg
js
(bad)
xchg
js
(bad)
xchg
js
(bad)
xchg
js
(bad)
xchg
js
(bad)
xchg
js
(bad)
xchg
js
(bad)
xchg
js
(bad)
xchg
js
(bad)
xchg
js
(bad)
xchg
js
(bad)
xchg
js
cmp
je
inc
in
enter
mov
dec
cld
out
outs
adc
xchg
mov
das
push
pop
mov
(bad)
adc
aaa
fld
jnp
inc
push
mov
movs
dec
push
(bad)
cmps
and
cmps
and
movs
or
inc
icebp
add
leave
test
nop
mov
and
das
push
jbe
das
push
jb
lahf
dec
and
out
or
hlt
mov
lock
movs
push
inc
xchg
mov
in
dec
loop
mov
adc
loope
adc
loope
adc
loope
adc
loope
adc
loope
adc
loope
adc
loope
adc
loope
adc
loope
adc
loope
adc
loope
adc
loope
adc
loope
adc
loope
adc
loope
adc
loope
adc
loope
adc
loope
adc
loope
adc
loope
adc
loope
adc
loope
adc
loope
adc
loope
adc
loope
adc
loope
adc
loope
adc
loope
adc
loope
adc
loope
adc
loope
adc
loope
adc
loope
adc
loope
adc
loope
adc
loope
adc
loope
adc
loope
adc
loope
adc
loope
adc
loope
adc
cmp
into
dec
cmp
repz
movs
mov
clc
das
push
add
pop
dec
pop
cmp
mov
inc
xchg
mov
stc
lock
addr16
test
rcl
arpl
xchg
dec
add
(bad)
mov
ds
aaa
cli
ja
mov
xor
mov
(bad)
enter
into
xchg
enter
cwde
and
enter
xor
test
fcmovne
inc
adc
neg
add
mov
pop
fwait
aad
mov
dec
push
mov
in
xchg
aaa
fld
icebp
add
and
bound
hlt
ret
movs
dec
push
aaa
fld
inc
daa
mov
xor
loopne
sbb
pop
xlat
jge
dec
push
mov
or
mov
adc
cli
out
adc
cli
out
adc
cli
out
adc
cli
out
adc
cli
out
adc
cli
out
adc
cli
out
adc
cli
out
adc
cli
out
adc
cli
out
adc
cli
out
adc
cli
out
adc
cli
out
adc
cli
out
adc
cli
out
adc
cli
out
adc
cli
out
adc
cli
out
adc
cli
out
adc
cli
out
adc
cli
out
das
push
push
push
dec
push
push
mov
pop
mov
ins
sub
mov
inc
sub
imul
pop
inc
push
mov
pop
cmp
inc
rol
mov
into
dec
cmp
into
dec
test
nop
pop
ficom
movs
dec
aad
movs
inc
sar
test
mov
dec
(bad)
dec
mov
pop
mov
xor
lods
mov
or
xor
dec
mov
dec
jbe
mov
lods
mov
or
jmp
dec
push
out
mov
inc
pop
sbb
push
xor
mov
and
(bad)
cmp
retf
(bad)
cmp
retf
(bad)
cmp
retf
(bad)
cmp
retf
(bad)
cmp
retf
(bad)
cmp
retf
(bad)
cmp
retf
(bad)
cmp
retf
(bad)
cmp
retf
(bad)
cmp
retf
(bad)
cmp
retf
(bad)
cmp
retf
(bad)
cmp
retf
(bad)
cmp
retf
(bad)
cmp
retf
(bad)
cmp
retf
(bad)
cmp
retf
(bad)
cmp
retf
(bad)
cmp
retf
(bad)
cmp
retf
(bad)
cmp
retf
(bad)
cmp
retf
(bad)
cmp
retf
(bad)
cmp
retf
(bad)
cmp
retf
(bad)
cmp
retf
(bad)
cmp
retf
(bad)
cmp
retf
(bad)
cmp
retf
(bad)
cmp
retf
(bad)
cmp
retf
(bad)
cmp
retf
(bad)
cmp
retf
(bad)
cmp
retf
(bad)
cmp
retf
(bad)
cmp
retf
(bad)
aaa
jmp
dec
push
out
pop
stos
inc
pop
sbb
push
mov
rcl
repz
mov
ror
(bad)
lods
mov
or
xor
test
cld
int3
dec
mov
pop
aas
sbb
(bad)
movs
ret
addr16
add
mov
bound
pop
dec
pop
cmp
inc
push
mov
and
dec
add
shl
dec
(bad)
lods
mov
inc
xor
push
mov
movs
jnp
mov
movs
dec
cmp
into
mov
sub
dec
push
mov
movs
dec
cmp
das
inc
test
mov
movs
dec
test
mov
jns
jmp
rcl
bound
jp
dec
or
pop
dec
push
mov
popa
mov
jns
mov
jns
mov
jns
mov
jns
mov
jns
mov
jns
mov
jns
mov
jns
mov
jns
mov
jns
mov
jns
mov
jns
mov
jns
mov
jns
mov
jns
mov
jns
mov
jns
mov
jns
mov
jns
mov
jns
mov
jns
mov
jns
mov
(bad)
movs
rcr
pop
test
mov
xchg
mov
movs
daa
mov
mov
sub
movs
rcl
bound
(bad)
movs
and
shr
retf
mov
jns
jmp
enter
into
adc
movs
dec
(bad)
ret
in
into
dec
(bad)
movs
dec
xor
mov
mov
xchg
xor
das
adc
stc
outs
add
jecxz
sbb
jmp
mov
inc
repz
aad
movs
inc
sar
std
sub
push
rcr
sbb
dec
aad
sbb
push
mov
movs
dec
push
aaa
jmp
dec
push
out
outs
lods
inc
pop
mov
lods
das
sbb
inc
(bad)
dec
test
mov
hlt
pop
mov
dec
mov
movs
ror
daa
aas
ror
daa
aas
ror
daa
aas
ror
daa
aas
ror
daa
aas
ror
daa
aas
ror
daa
aas
ror
daa
aas
ror
daa
aas
ror
daa
aas
ror
daa
aas
ror
daa
aas
ror
daa
aas
ror
daa
aas
ror
daa
aas
ror
daa
aas
ror
daa
aas
ror
daa
aas
ror
daa
aas
ror
daa
aas
ror
daa
aas
ror
daa
aas
ror
daa
aas
ror
daa
aas
ror
daa
aas
ror
daa
aas
ror
daa
aas
ror
daa
aas
ror
daa
aas
ror
daa
aas
ror
daa
aas
ror
daa
aas
ror
daa
aas
ror
daa
aas
ror
daa
aas
ror
daa
aas
ror
daa
aas
ror
daa
aas
ror
daa
aas
ror
daa
aas
ror
daa
aas
ror
daa
aas
ror
daa
aas
ror
daa
aas
ror
daa
aas
ror
daa
aas
ror
daa
aas
ror
daa
aas
ror
daa
aas
ror
daa
into
dec
cmp
sub
sbb
jecxz
rcr
movs
dec
push
aas
gs
pop
aaa
repz
test
inc
movs
inc
shl
dec
push
aaa
sti
pop
xlat
jg
dec
push
mov
mov
sbb
sub
mov
or
pop
mov
inc
pop
cmp
aaa
repz
test
aas
pop
dec
pop
cmp
inc
push
mov
movs
and
aam
jnp
mov
movs
and
repz
test
mov
adc
push
mov
movs
dec
(bad)
lods
sbb
cwde
enter
pop
push
mov
movs
dec
push
aaa
jmp
dec
push
out
shr
(bad)
lods
ret
addr16
mov
adc
mov
xchg
mov
push
or
push
mov
inc
lods
mov
inc
lods
mov
inc
lods
mov
inc
lods
mov
inc
lods
mov
inc
lods
mov
inc
lods
mov
inc
lods
mov
inc
lods
mov
inc
lods
mov
inc
lods
mov
inc
lods
mov
inc
lods
mov
inc
lods
mov
inc
lods
mov
inc
lods
mov
inc
lods
mov
inc
lods
mov
inc
lods
mov
inc
lods
mov
inc
lods
mov
inc
lods
mov
inc
lods
mov
inc
lods
mov
inc
lods
mov
inc
lods
mov
inc
lods
mov
inc
lods
mov
inc
lods
mov
inc
lods
mov
inc
lods
mov
inc
lods
mov
inc
lods
mov
inc
lods
mov
inc
lods
mov
inc
lods
mov
inc
lods
mov
inc
lods
mov
inc
lods
mov
inc
lods
mov
inc
lods
mov
into
dec
cmp
sub
dec
push
mov
movs
dec
push
cmp
movs
sbb
jmp
mov
inc
repz
cmp
into
dec
(bad)
mov
arpl
xor
push
mov
add
push
mov
movs
dec
push
cmp
movs
sbb
jmp
mov
inc
repz
cmp
into
inc
fist
mov
mov
cmp
push
mov
cmps
dec
push
out
das
sbb
inc
xchg
mov
movs
dec
mov
mov
adc
push
mov
movs
and
pop
(bad)
loop
movs
dec
fucomp
lods
mov
inc
repz
mov
in
dec
cmp
hlt
mov
or
dec
push
aaa
repz
test
push
mov
push
mov
pop
push
push
mov
pop
mov
cmp
dec
push
mov
movs
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
out
pop
mov
cmp
dec
push
aaa
jmp
ret
das
push
push
push
fwait
push
push
mov
pop
mov
and
rcr
cmc
mov
aas
pop
dec
and
movs
and
movs
rcr
cmc
and
movs
ror
pop
js
sub
dec
push
mov
movs
dec
push
enter
mov
movs
adc
xor
lods
enter
js
ins
das
push
push
push
sub
mov
pop
mov
mov
and
dec
add
lods
movs
dec
test
mov
js
sub
dec
push
mov
movs
dec
push
mov
lods
mov
or
cmp
push
mov
cld
adc
in
adc
in
adc
in
adc
in
adc
in
adc
in
adc
in
adc
in
adc
in
adc
in
adc
in
adc
in
adc
in
adc
in
adc
in
adc
in
adc
in
adc
in
adc
in
adc
in
adc
in
adc
in
adc
in
adc
in
adc
in
adc
in
adc
in
adc
in
adc
in
adc
in
adc
in
adc
in
adc
in
adc
in
adc
in
adc
in
adc
in
adc
in
adc
in
adc
in
sbb
push
xchg
pop
push
mov
repz
test
aas
pop
dec
pop
cmp
push
mov
repnz
push
mov
pop
mov
cmp
dec
push
mov
pop
dec
push
mov
pop
jns
ins
and
dec
push
mov
mov
hlt
stos
mov
dec
push
mov
xchg
rcr
dec
in
inc
mov
push
mov
in
int3
retf
push
mov
pop
jns
ins
das
push
push
push
in
pop
push
mov
pop
mov
cmp
dec
push
mov
cmp
push
mov
pop
mov
cmp
dec
push
mov
movs
pop
push
mov
movs
dec
fnstsw
enter
mov
mov
movs
dec
push
push
push
dec
push
mov
fidiv
sub
fidiv
sub
fidiv
sub
fidiv
sub
fidiv
sub
fidiv
sub
fidiv
sub
fidiv
sub
fidiv
sub
fidiv
sub
fidiv
sub
fidiv
sub
fidiv
sub
fidiv
sub
fidiv
sub
fidiv
sub
fidiv
sub
fidiv
sub
fidiv
sub
fidiv
sub
fidiv
sub
fidiv
ds
pop
dec
push
xor
movs
dec
push
inc
xor
push
mov
movs
dec
push
mov
movs
dec
fnstsw
cmp
mov
fs
sar
movs
dec
push
cmp
das
mov
movs
dec
xchg
mov
and
in
mov
(bad)
dec
push
mov
movs
inc
shl
movs
dec
push
cmp
dec
mov
mov
inc
pop
mov
inc
pop
mov
inc
pop
mov
inc
pop
mov
inc
pop
mov
inc
pop
mov
inc
pop
mov
inc
pop
mov
inc
pop
mov
inc
pop
mov
inc
pop
mov
inc
pop
mov
inc
pop
mov
inc
pop
mov
inc
pop
mov
inc
pop
mov
inc
pop
mov
inc
pop
mov
inc
pop
mov
inc
pop
mov
inc
pop
mov
inc
pop
mov
inc
pop
mov
inc
pop
mov
inc
pop
mov
inc
pop
mov
inc
pop
mov
inc
pop
mov
inc
pop
mov
inc
pop
mov
inc
pop
mov
inc
pop
mov
inc
pop
mov
inc
pop
mov
inc
pop
mov
inc
pop
mov
inc
pop
mov
inc
pop
mov
inc
pop
mov
inc
pop
mov
inc
pop
mov
inc
pop
mov
inc
pop
mov
jbe
mov
sub
mov
fs
sar
movs
dec
push
xor
imul
jbe
mov
cdq
push
sbb
inc
aas
ds
sub
movs
dec
(bad)
mov
add
movs
jbe
mov
cdq
dec
push
mov
movs
dec
push
and
dec
mov
mov
and
inc
xor
push
mov
movs
dec
test
mov
movs
dec
test
mov
pop
and
pop
mov
test
xchg
aam
dec
push
cmp
cld
into
mov
xor
mov
movs
dec
mov
mov
fnstenv
sub
fnstenv
sub
fnstenv
sub
fnstenv
sub
fnstenv
sub
fnstenv
sub
fnstenv
sub
fnstenv
sub
fnstenv
sub
fnstenv
sub
fnstenv
sub
fnstenv
sub
fnstenv
sub
fnstenv
sub
fnstenv
sub
fnstenv
sub
fnstenv
sub
fnstenv
sub
fnstenv
sub
fnstenv
sub
fnstenv
sub
fnstenv
sub
fnstenv
sub
fnstenv
sub
fnstenv
sub
fnstenv
sub
fnstenv
sub
fnstenv
sub
fnstenv
sub
fnstenv
sub
fnstenv
sub
fnstenv
sub
fnstenv
sub
fnstenv
sub
fnstenv
sub
fnstenv
sub
fnstenv
sub
fnstenv
sub
fnstenv
sub
fnstenv
sub
fnstenv
sub
fnstenv
sub
fnstenv
sub
fnstenv
sub
fnstenv
sub
fldenv
push
mov
cmp
push
mov
movs
dec
test
mov
pop
and
dec
test
mov
movs
dec
test
mov
pop
rcl
movs
dec
push
aas
pop
pop
pop
cmp
test
mov
xchg
test
pop
ret
addr16
push
mov
int3
dec
inc
mov
das
adc
inc
xchg
mov
adc
xchg
enter
out
into
or
mov
movs
dec
fucom
lods
mov
inc
xor
push
mov
movs
dec
test
mov
movs
dec
test
mov
movs
add
inc
movs
lods
(bad)
scas
mov
sub
push
mov
js
mov
xchg
mov
xchg
mov
xchg
mov
xchg
mov
xchg
mov
xchg
mov
xchg
mov
xchg
mov
xchg
mov
xchg
mov
xchg
mov
xchg
mov
xchg
mov
xchg
mov
xchg
mov
xchg
mov
xchg
mov
xchg
mov
xchg
mov
xchg
mov
xchg
mov
xchg
mov
xchg
mov
xchg
mov
xchg
mov
xchg
mov
xchg
mov
xchg
mov
xchg
mov
xchg
mov
xchg
mov
xchg
mov
xchg
mov
xchg
mov
xchg
mov
xchg
mov
xchg
mov
xchg
mov
xchg
mov
xchg
mov
xchg
mov
xchg
mov
xchg
mov
xchg
mov
xchg
mov
ret
addr16
push
mov
pop
cld
sar
and
push
mov
xchg
mov
adc
test
jmp
mov
inc
icebp
jae
add
mov
aaa
loope
aad
movs
inc
shl
movs
dec
push
fadd
rcl
das
or
in
(bad)
mov
mov
mov
movs
dec
push
aas
fs
xor
mov
inc
xor
inc
mov
lahf
aas
gs
xor
cwde
inc
push
leave
push
mov
jp
ss
cmp
movs
mov
xlat
jnp
dec
push
mov
movs
retf
movs
dec
push
jmp
movs
push
mov
xor
mov
and
dec
push
jl
mov
push
in
pop
push
mov
movs
dec
fbstp
mov
push
adc
mov
lock
add
lock
add
lock
add
lock
add
lock
add
lock
add
lock
add
lock
add
lock
add
lock
add
lock
add
lock
add
lock
add
lock
add
lock
add
lock
add
lock
add
lock
add
lock
add
lock
add
lock
add
lock
add
lock
add
lock
add
lock
add
lock
add
lock
add
lock
add
lock
add
lock
add
lock
add
lock
add
lock
add
lock
add
lock
add
lock
add
lock
add
lock
add
lock
add
lock
add
lock
add
lock
add
lock
add
lock
add
lock
stos
aaa
rol
jp
dec
push
mov
arpl
mov
cmc
pop
push
mov
movs
dec
push
push
scas
dec
push
mov
imul
mov
mov
dec
push
pop
mov
aaa
mov
inc
xor
inc
mov
push
jg
push
push
pop
dec
and
push
dec
push
lods
pop
push
mov
pop
mov
loope
retf
mov
sbb
pop
fwait
mov
(bad)
movs
and
cmps
and
movs
and
movs
retf
push
inc
icebp
add
jp
ss
xor
hlt
sbb
push
mov
or
mov
inc
pop
mov
inc
pop
mov
inc
pop
mov
inc
pop
mov
inc
pop
mov
inc
pop
mov
inc
pop
mov
inc
pop
mov
inc
pop
mov
inc
pop
mov
inc
pop
mov
inc
pop
mov
inc
pop
mov
inc
pop
mov
inc
pop
mov
inc
pop
mov
inc
pop
mov
inc
pop
mov
inc
pop
mov
inc
pop
mov
inc
pop
mov
inc
pop
mov
inc
pop
mov
inc
pop
mov
inc
pop
mov
inc
pop
mov
inc
pop
mov
inc
pop
mov
inc
pop
mov
inc
pop
mov
inc
pop
mov
inc
pop
mov
inc
pop
mov
inc
pop
mov
inc
pop
mov
inc
pop
mov
inc
pop
mov
inc
pop
mov
inc
pop
mov
inc
pop
mov
inc
pop
mov
inc
pop
ret
fs
cmp
hlt
mov
lock
sbb
inc
xor
mov
hlt
sbb
aaa
loope
push
jle
dec
push
aaa
cld
ja
fs
xor
loope
(bad)
call
dec
fisttp
mov
push
pop
pop
push
adc
nop
mov
movs
and
movs
and
cmps
and
movs
or
inc
icebp
add
jp
mov
jl
and
pop
cmp
mov
hlt
sbb
test
mov
dec
or
pop
enter
and
cmps
dec
cmp
mul
push
mov
ror
mov
movs
dec
(bad)
int3
mov
or
inc
cmps
test
jnp
mov
mov
movs
ret
data16
mov
mov
dec
mov
in
mov
in
pop
sbb
aas
pop
dec
pop
cmp
push
mov
movs
hlt
jmp
add
hlt
jmp
add
hlt
jmp
add
hlt
jmp
add
hlt
jmp
add
hlt
jmp
add
hlt
jmp
add
hlt
jmp
add
hlt
jmp
add
hlt
jmp
add
hlt
jmp
add
hlt
jmp
add
hlt
jmp
add
hlt
jmp
add
hlt
jmp
add
hlt
jmp
add
hlt
jmp
add
hlt
jmp
add
hlt
jmp
add
hlt
jmp
add
hlt
jmp
add
hlt
jmp
add
hlt
jmp
add
push
ds
jmp
mov
test
xor
mov
mov
mov
xchg
mov
sub
mov
mov
mov
mov
mov
dec
pop
jnp
inc
xor
inc
push
mov
mov
dec
fild
push
mov
lods
dec
push
push
imul
das
ss
aas
sbb
and
bound
mov
movs
and
and
dec
push
lods
repnz
hlt
sub
dec
mov
in
into
xchg
mov
stos
dec
push
in
mov
movs
dec
mov
jmp
ss
xor
cmps
dec
push
jecxz
sbb
stos
retf
lods
mov
and
js
mov
mov
je
bound
bound
bound
bound
inc
mov
push
push
xchg
dec
push
mov
movs
and
ror
and
ror
and
ror
and
ror
and
ror
and
ror
and
ror
and
ror
and
ror
and
ror
and
ror
and
ror
and
ror
and
ror
and
ror
and
ror
and
ror
and
ror
and
ror
and
ror
and
ror
and
ror
and
ror
and
ror
and
ror
and
ror
and
ror
and
ror
and
ror
and
ror
and
ror
and
ror
and
ror
and
ror
and
ror
and
ror
and
ror
and
ror
and
shr
pop
mov
int3
retf
push
mov
repnz
inc
mov
pop
test
mov
sub
mov
rcl
icebp
mov
dec
or
mov
test
jp
dec
push
mov
je
or
pushf
dec
and
and
dec
add
movs
sbb
push
mov
movs
and
movs
and
movs
retf
cmps
dec
push
jmp
cmp
into
mov
jmp
mov
retf
outs
mov
ins
jp
ss
lea
mov
dec
adc
gs
(bad)
inc
movs
ds
mov
and
es
dec
or
nop
movs
dec
push
push
push
dec
push
mov
xchg
jl
mov
jl
mov
jl
mov
jl
mov
jl
mov
jl
mov
jl
mov
jl
mov
jl
mov
jl
mov
jl
mov
jl
mov
jl
mov
jl
mov
jl
mov
jl
mov
jl
mov
jl
mov
jl
mov
jl
mov
dec
push
out
push
fbld
mov
mov
xchg
dec
push
inc
adc
mov
pop
mov
and
push
mov
movs
dec
push
push
leave
inc
push
mov
fld
sbb
das
or
ins
or
lods
lods
aas
gs
in
mov
mov
jg
xor
dec
mov
push
mov
ins
ror
mov
pop
adc
lahf
push
pop
leave
pop
add
inc
movs
mov
leave
test
dec
(bad)
cld
mov
aad
mov
dec
push
out
push
fbld
xchg
dec
push
mov
movs
dec
fbld
or
ret
mov
js
mov
mov
enter
mov
mov
enter
mov
arpl
movs
sub
mov
mov
movs
dec
in
mov
cmp
mov
stos
iret
mov
mov
in
ss
add
mov
xchg
jns
mov
jns
mov
jns
mov
jns
mov
jns
mov
jns
mov
jns
mov
jns
mov
jns
mov
jns
mov
jns
mov
jns
mov
jns
mov
jns
mov
jns
mov
jns
mov
jns
mov
jns
mov
jns
mov
jns
mov
retf
les
xor
movs
dec
fnsave
mov
mov
movs
ds
and
mov
das
push
aad
cmps
ret
movs
dec
push
xor
movs
sub
nop
dec
push
mov
pop
mov
inc
and
dec
fucomip
test
lods
cmp
movs
ret
sbb
push
mov
dec
push
mov
rol
das
push
jbe
outs
mov
fild
inc
mov
bound
mov
movs
dec
push
mov
movs
dec
push
mov
movs
dec
push
mov
movs
dec
push
mov
movs
dec
push
mov
movs
dec
push
mov
movs
dec
push
mov
movs
dec
push
mov
movs
dec
push
mov
movs
dec
push
mov
movs
dec
push
mov
movs
dec
push
mov
movs
dec
push
mov
movs
dec
push
mov
movs
dec
push
mov
movs
dec
push
mov
movs
dec
push
mov
movs
dec
push
mov
movs
dec
push
mov
movs
dec
push
mov
movs
dec
push
mov
movs
dec
push
mov
movs
dec
push
mov
movs
dec
push
mov
das
dec
pop
mov
stos
and
pop
mov
mov
je
bound
mov
scas
enter
xchg
pop
retf
ror
mov
outs
lea
fdivr
pop
or
test
add
clc
or
pop
retf
movs
dec
push
out
into
or
mov
into
mov
sub
dec
push
mov
mov
ret
mov
mov
out
shr
in
(bad)
and
(bad)
cmp
fxch
and
lds
in
mov
inc
mov
mov
mov
das
inc
fbstp
add
stos
rcr
sub
dec
test
aas
dec
dec
xchg
push
add
xor
xchg
jns
push
adc
mov
cmps
dec
push
mov
cmps
dec
push
mov
cmps
dec
push
mov
cmps
dec
push
mov
cmps
dec
push
mov
cmps
dec
push
mov
cmps
dec
push
mov
cmps
dec
push
mov
cmps
dec
push
mov
cmps
dec
push
mov
cmps
dec
push
mov
cmps
dec
push
mov
cmps
dec
push
mov
cmps
dec
push
mov
cmps
dec
push
mov
cmps
dec
push
mov
cmps
dec
push
mov
cmps
dec
push
mov
cmps
dec
push
mov
cmps
dec
push
mov
cmps
dec
push
mov
cmps
dec
push
mov
dec
pop
mov
pop
and
push
push
xor
test
stc
(bad)
cmp
into
jmp
mov
cmp
rcl
lods
test
fld
das
add
(bad)
aas
and
enter
retf
cmp
mov
pop
sbb
enter
enter
rcl
dec
mov
sti
sar
leave
(bad)
cmp
into
hlt
and
mov
pop
add
and
repnz
shr
cmp
shl
into
fisttp
add
mov
sti
sar
aad
and
mov
movs
popf
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
mov
mov
enter
fst
sbb
xor
shr
aad
and
test
(bad)
es
rol
aas
xor
int3
cmp
ffree
dec
mov
repnz
and
lds
xor
int3
cmp
ffree
push
cs
pop
add
cmp
shr
cmp
movs
mov
sbb
in
cmp
(bad)
sub
fptan
and
shr
cmp
shl
into
fisttp
sbb
xchg
lahf
xchg
lahf
xchg
lahf
xchg
lahf
xchg
lahf
xchg
lahf
xchg
lahf
xchg
lahf
xchg
lahf
xchg
lahf
xchg
lahf
xchg
lahf
xchg
lahf
xchg
lahf
xchg
lahf
xchg
lahf
xchg
lahf
xchg
lahf
xchg
lahf
xchg
lahf
xchg
lahf
xchg
lahf
xchg
lahf
xchg
lahf
xchg
lahf
xchg
lahf
xchg
lahf
xchg
lahf
xchg
lahf
xchg
lahf
xchg
lahf
xchg
lahf
xchg
lahf
xchg
lahf
xchg
lahf
xchg
lahf
xchg
lahf
xchg
lahf
xchg
lahf
xchg
lahf
dec
push
mov
out
sar
rol
pop
ds
shr
mov
pop
add
adc
(bad)
rcr
ds
shr
mov
pop
add
adc
(bad)
rcr
ds
shr
mov
pop
or
enter
rol
and
xor
movs
mov
add
rol
cs
in
retf
daa
aas
(bad)
dec
mov
sti
sar
(bad)
int
adc
into
retf
sub
iret
xlat
dec
mov
call
cs
enter
rol
cs
ror
test
fcomi
cs
(bad)
and
(bad)
cmp
shl
xor
enter
mov
out
adc
out
adc
out
adc
out
adc
out
adc
out
adc
out
adc
out
adc
out
adc
out
adc
out
adc
out
adc
out
adc
out
adc
out
adc
out
adc
out
adc
out
adc
out
adc
out
adc
out
adc
out
adc
out
adc
out
adc
out
adc
out
adc
out
adc
out
adc
out
adc
out
adc
out
adc
out
adc
out
adc
out
adc
out
adc
out
adc
out
adc
out
adc
out
mov
clc
shr
frstpm(287
sub
aad
cs
into
retf
sub
iret
xlat
dec
mov
jmp
push
into
retf
aas
xor
ror
cs
pop
sbb
cli
lock
out
loope
sbb
(bad)
cmp
iret
retf
sub
cmp
retf
cmp
loopne
ds
shl
aad
and
cmp
(bad)
cs
mul
xor
enter
enter
xlat
pop
push
push
pop
mov
aaa
fsubr
and
lds
das
std
movs
mov
add
(bad)
aas
and
enter
retf
sub
les
ret
ffreep
sub
ffreep
sub
ffreep
sub
ffreep
sub
ffreep
sub
ffreep
sub
ffreep
sub
ffreep
sub
ffreep
sub
ffreep
sub
ffreep
sub
ffreep
sub
ffreep
sub
ffreep
sub
ffreep
sub
ffreep
sub
ffreep
sub
ffreep
sub
ffreep
sub
ffreep
sub
ffreep
sub
ffreep
sub
ffreep
sub
ffreep
sub
ffreep
sub
ffreep
sub
ffreep
sub
ffreep
sub
ffreep
sub
ffreep
sub
ffreep
sub
ffreep
sub
ffreep
sub
ffreep
sub
ffreep
sub
ffreep
sub
ffreep
sub
ffreep
sub
ffreep
sub
ffreep
sub
ffreep
sub
ffreep
sub
ffreep
sub
ffreep
sub
ffreep
sub
ffreep
sub
ffreep
sub
ffreep
sub
inc
pop
sbb
aad
or
xor
ret
push
and
retf
push
pop
lods
test
fst
cs
leave
and
f2xm1
and
lds
push
push
sbb
in
(bad)
and
std
shr
(bad)
cmp
icebp
mov
and
(bad)
and
into
int
das
dec
sub
imul
es
pop
or
rcl
and
leave
ror
(bad)
sub
retf
and
or
lds
xor
int
xor
movs
mov
add
int
xor
int
xor
or
rcl
cs
(bad)
das
cmp
movs
mov
add
fst
cs
(bad)
cs
stc
fcomp
push
or
mov
push
icebp
in
push
push
icebp
in
push
push
icebp
in
push
push
icebp
in
push
push
icebp
in
push
push
icebp
in
push
push
icebp
in
push
push
icebp
in
push
push
icebp
in
push
push
icebp
in
push
push
icebp
in
push
push
icebp
in
push
push
icebp
in
push
push
icebp
in
push
push
icebp
in
push
push
icebp
in
push
push
icebp
in
push
push
icebp
in
push
push
icebp
in
push
push
icebp
in
push
push
icebp
in
push
push
icebp
in
push
push
icebp
in
push
push
icebp
in
push
push
icebp
in
push
push
icebp
in
push
push
icebp
in
push
push
icebp
in
push
push
icebp
in
push
push
icebp
in
push
push
icebp
in
push
push
icebp
in
push
push
icebp
in
push
push
icebp
in
push
push
icebp
in
push
push
icebp
in
push
push
icebp
in
push
push
icebp
in
push
push
icebp
in
push
push
icebp
in
push
push
icebp
in
push
push
icebp
in
push
dec
fistp
in
movs
sbb
movs
or
movs
or
movs
mov
add
ret
or
rcl
cs
and
out
shr
sar
jmp
pop
mov
pop
sub
retf
aas
(bad)
xchg
dec
mov
out
shr
shl
std
movs
mov
and
(bad)
xchg
dec
mov
out
sar
aad
cs
enter
(bad)
aas
xor
repz
mov
out
shr
cli
int
xor
sbb
fxch
daa
adc
shr
enter
push
rcl
lock
and
repnz
xor
movs
mov
add
(bad)
es
rol
aas
xor
(bad)
and
(bad)
cmp
call
cs
int
xor
int
xor
or
enter
int3
hlt
sub
aam
dec
mov
out
shr
and
sar
push
push
cmp
mov
mov
inc
scas
mov
inc
scas
mov
inc
scas
mov
inc
scas
mov
inc
scas
mov
inc
scas
mov
inc
scas
mov
inc
scas
mov
inc
scas
mov
inc
scas
mov
inc
scas
mov
inc
scas
mov
inc
scas
mov
inc
scas
mov
inc
scas
mov
inc
scas
mov
inc
scas
mov
inc
scas
mov
inc
scas
mov
inc
scas
mov
inc
scas
mov
inc
scas
mov
inc
scas
mov
inc
scas
mov
inc
scas
mov
inc
scas
mov
inc
scas
mov
inc
scas
mov
inc
scas
mov
inc
scas
mov
inc
scas
mov
inc
scas
mov
inc
scas
mov
inc
scas
mov
inc
scas
mov
inc
scas
mov
inc
scas
mov
inc
scas
mov
lahf
dec
pop
mov
fnop
imul
into
sbb
fxch
daa
jbe
test
and
lds
xor
(bad)
and
(bad)
arpl
cs
mov
es
enter
shl
cmp
xchg
mov
sub
int3
cs
mov
ds
daa
adc
shr
enter
mov
pop
imul
xchg
pushf
xchg
pushf
xchg
dec
mov
mov
cmp
push
mov
pop
dec
push
mov
pop
mov
mov
jge
test
push
(bad)
xchg
test
push
pop
mov
fcmove
daa
xor
lds
xor
dec
clc
mov
leave
(bad)
sub
and
dec
dec
cmps
inc
pop
sbb
fcmovne
cmp
into
(bad)
(bad)
imul
leave
cs
push
outs
pushf
test
frstor
cmp
xchg
test
and
mov
push
mov
cmps
cmps
dec
push
push
ja
test
mov
pop
mov
add
or
add
add
add
add
fadd
add
add
add
cwde
or
add
add
out
add
add
add
add
sub
add
add
add
or
add
add
add
push
add
rol
add
xor
add
push
add
ja
add
add
add
add
add
add
add
add
add
add
add
add
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
mul
add
ins
je
add
daa
add
add
add
add
pusha
pusha
adc
add
add
call
add
add
adc
add
add
push
pop
add
xor
adc
add
add
push
and
add
add
add
add
rol
add
add
add
add
adc
add
add
add
add
pop
add
add
rol
add
inc
add
add
add
inc
inc
add
inc
inc
(bad)
inc
add
(bad)
inc
bound
add
add
mov
js
js
js
or
add
add
add
add
add
add
mov
ja
jae
jae
js
add
add
add
add
clc
mov
ja
jae
jae
ja
or
add
xchg
nop
aaa
aaa
jae
xor
xor
xor
ja
js
add
pop
add
add
mov
add
mov
jae
xor
jae
xor
xor
js
add
add
and
aaa
xor
aaa
aaa
xor
xor
aaa
test
mov
add
add
add
or
add
add
xchg
aaa
jae
jae
jae
jae
aaa
js
ja
xor
mov
add
xchg
xor
xor
aaa
aaa
aaa
aaa
aaa
jnp
aaa
jae
jae
mov
or
mov
ja
jae
jae
xor
mov
ja
ja
mov
add
pop
or
mov
mov
mov
jae
xor
js
jae
xor
mov
add
adc
add
add
add
or
xor
bound
mov
ja
jae
ja
mov
test
or
add
add
xchg
jae
mov
push
mov
jae
jae
aaa
xor
jnp
jnp
aaa
jae
add
mov
jae
ja
mov
xchg
jae
xor
xor
xor
aaa
ja
mov
jae
add
add
add
xchg
cmp
ja
mov
aaa
aaa
xor
aaa
xor
mov
ja
jnp
add
xchg
jnp
pop
xchg
mov
jae
xor
xor
jae
jae
mov
jnp
add
adc
add
xchg
mov
mov
jae
aaa
bound
jae
jae
mov
test
or
xchg
jnp
mov
mov
mov
xor
xor
ja
mov
js
add
mov
ja
add
aaa
jae
dec
jae
jnp
mov
jae
add
add
add
mov
add
xchg
ja
ja
mov
ja
ja
jae
xor
ja
mov
mov
add
cmp
ja
jae
mov
ja
jae
aaa
jnp
mov
js
adc
mov
mov
ja
jae
ja
bound
mov
jnp
add
test
add
add
mov
mov
aaa
xor
jae
jae
ja
mov
aaa
jnp
add
xchg
ja
jae
mov
mov
xor
aaa
xor
dec
jnp
mov
mov
add
add
add
add
add
xchg
mov
mov
aaa
aaa
xor
jae
jae
aaa
cmp
jnp
add
xchg
mov
mov
ja
jae
xor
jae
ja
mov
ja
jae
add
mov
adc
mov
xor
jae
jae
jae
mov
jae
jae
add
add
add
xchg
mov
mov
mov
jae
jae
push
aaa
xor
mov
aaa
jae
pop
add
add
add
mov
mov
jnp
aaa
fnstenv
ja
mov
add
xchg
mov
mov
js
mov
mov
mov
mov
add
add
add
add
add
add
xchg
dec
add
mov
mov
aaa
mov
jae
aaa
mov
js
add
mov
mov
mov
xor
xor
jae
jae
mov
mov
add
mov
xchg
jnp
aaa
jae
xor
jae
cmp
js
pop
add
add
xchg
js
mov
mov
xor
xor
fnstenv
loope
ja
jae
jae
add
xchg
or
mov
aaa
jae
jmp
aaa
xor
mov
add
add
add
push
rol
add
add
add
xchg
dec
xchg
mov
mov
aaa
xor
jae
xor
jae
mov
js
add
add
add
add
add
mov
mov
jae
ja
ja
jae
jnp
mov
aaa
js
add
mov
xchg
mov
jnp
ja
mov
js
add
add
mov
ja
ja
mov
ja
aaa
xor
mov
mov
js
add
mov
mov
jae
inc
jae
ja
mov
aaa
jae
cmp
add
add
push
rol
add
add
add
xchg
dec
aaa
mov
mov
ja
jae
jae
xor
aaa
xchg
xor
mov
add
leave
add
add
add
mov
mov
fwait
mov
aaa
aaa
aaa
xor
jae
jae
ja
jae
cmp
add
xchg
mov
(bad)
xor
xor
xor
xor
jae
ja
xor
mov
add
pop
add
mov
mov
mov
jae
aaa
ja
ja
xor
xor
xor
xor
add
mov
mov
mov
jnp
inc
mov
jnp
mov
aaa
xor
add
add
add
add
xchg
dec
jnp
mov
mov
ja
mov
mov
xor
aaa
xor
js
leave
add
add
add
mov
fs
js
xchg
xor
xor
ja
mov
add
mov
mov
mov
mov
mov
xor
ja
add
pop
add
mov
jnp
jnp
mov
mov
jae
ja
js
mov
mov
jae
mov
jnp
inc
ja
jae
mov
add
add
add
add
aaa
mov
xor
ja
ja
mov
jnp
cmp
ja
aaa
jnp
add
add
leave
add
add
mov
ja
xor
ja
ja
ja
mov
add
add
add
mov
jae
xor
xor
jnp
mov
mov
mov
add
add
add
ja
jae
ja
aaa
xor
js
mov
(bad)
(bad)
(bad)
(bad)
(bad)
fld
loope
mov
xor
mov
mov
jmp
push
rol
add
add
add
xchg
dec
ja
mov
leave
add
add
add
or
mov
mov
add
add
xchg
lock
add
sub
add
or
mov
add
add
in
add
adc
add
add
or
add
add
add
js
add
add
add
mov
ja
add
or
mov
add
add
jae
ret
add
add
sub
mov
retf
add
add
add
add
add
mov
jae
add
add
add
add
test
add
add
add
or
add
add
mov
jae
xchg
jo
add
and
add
add
add
add
add
mov
xor
add
add
add
add
add
mov
add
add
add
ret
xchg
or
add
add
retf
add
add
add
add
cmp
jo
add
add
add
add
add
test
add
add
add
or
add
add
aaa
js
add
add
add
xchg
and
add
add
add
add
add
fild
add
xchg
jae
xchg
mov
add
or
add
add
add
add
xor
jo
add
xchg
jae
add
add
add
retf
add
add
ja
jae
add
add
add
test
add
add
add
or
add
or
add
xchg
ja
add
ja
mov
or
jae
xor
add
xchg
xor
add
add
add
add
mov
xor
sbb
add
add
add
aaa
mov
add
xor
xor
ret
add
jae
xor
mov
add
add
add
or
xor
jae
xor
add
add
add
add
test
add
add
add
or
or
cmp
add
mov
xor
xor
add
add
ja
and
add
or
aaa
add
add
add
add
mov
xor
ja
pop
add
add
jae
add
add
add
add
or
xor
ja
mov
aaa
xor
add
add
ret
add
add
ja
xor
jnp
mov
add
xor
js
add
add
add
add
add
add
test
add
add
add
or
xor
or
xor
xor
jae
add
xchg
jae
aaa
jae
aaa
xchg
adc
aaa
mov
fild
add
add
ja
xor
jae
jae
aaa
xor
xor
cmp
add
add
add
add
ja
jae
xor
xor
xor
add
add
add
add
add
add
add
add
add
or
aaa
xor
cmp
xor
xor
ja
adc
add
add
sbb
add
add
ja
ja
mov
ja
jae
xor
mov
add
xchg
mov
ja
aaa
xor
mov
add
push
or
ja
xor
add
add
add
add
add
mov
ja
add
add
add
add
add
add
add
add
add
mov
add
add
add
add
add
add
sbb
add
add
or
add
add
(bad)
pop
add
add
push
add
add
add
add
add
(bad)
(bad)
(bad)
inc
lds
add
(bad)
(bad)
(bad)
inc
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
cld
add
add
pop
(bad)
(bad)
call
(bad)
push
add
dec
add
(bad)
(bad)
(bad)
(bad)
(bad)
clc
add
add
add
(bad)
(bad)
(bad)
call
add
add
sbb
add
add
add
(bad)
(bad)
(bad)
(bad)
inc
add
add
(bad)
(bad)
clc
add
add
add
add
(bad)
(bad)
jmp
add
add
add
add
(bad)
(bad)
inc
add
add
add
add
(bad)
(bad)
inc
add
add
add
add
(bad)
(bad)
inc
add
add
add
add
inc
add
add
add
add
(bad)
(bad)
inc
add
add
add
add
(bad)
(bad)
inc
add
add
add
add
push
(bad)
inc
add
pop
add
add
(bad)
(bad)
(bad)
inc
add
add
add
add
(bad)
(bad)
inc
add
add
add
(bad)
(bad)
inc
add
add
add
add
(bad)
(bad)
inc
add
add
add
add
(bad)
(bad)
inc
add
add
add
add
(bad)
fdivrp
rol
add
add
add
(bad)
(bad)
inc
add
add
add
add
inc
add
add
add
add
(bad)
(bad)
inc
add
adc
(bad)
(bad)
(bad)
call
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
add
add
(bad)
(bad)
inc
add
add
add
add
(bad)
(bad)
inc
add
add
add
add
(bad)
(bad)
inc
add
add
add
add
(bad)
(bad)
inc
add
add
add
add
(bad)
jmp
add
add
add
(bad)
(bad)
(bad)
inc
add
add
add
add
(bad)
(bad)
inc
add
add
add
add
(bad)
(bad)
call
add
add
(bad)
(bad)
inc
add
add
add
add
(bad)
(bad)
inc
add
add
add
add
inc
inc
add
add
(bad)
(bad)
inc
add
add
add
add
(bad)
(bad)
inc
add
add
add
pop
(bad)
(bad)
(bad)
inc
fiadd
add
add
ud0
(bad)
inc
add
add
(bad)
add
(bad)
(bad)
dec
add
add
add
(bad)
(bad)
(bad)
inc
add
add
add
inc
add
sbb
(bad)
(bad)
(bad)
inc
add
add
add
(bad)
(bad)
(bad)
(bad)
mov
add
add
(bad)
(bad)
(bad)
inc
add
add
add
(bad)
(bad)
(bad)
(bad)
inc
add
add
add
(bad)
(bad)
(bad)
(bad)
inc
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
(bad)
(bad)
call
inc
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
pop
(bad)
(bad)
(bad)
(bad)
(bad)
inc
syscall
push
pop
(bad)
(bad)
(bad)
(bad)
(bad)
inc
pop
(bad)
(bad)
(bad)
(bad)
(bad)
inc
pop
(bad)
(bad)
(bad)
(bad)
(bad)
inc
pop
(bad)
(bad)
(bad)
(bad)
(bad)
inc
pop
call
(bad)
(bad)
(bad)
inc
pop
(bad)
(bad)
(bad)
(bad)
(bad)
inc
pop
(bad)
call
ud0
lock
(bad)
inc
pop
(bad)
(bad)
(bad)
(bad)
(bad)
inc
pop
(bad)
(bad)
(bad)
(bad)
(bad)
inc
pop
(bad)
(bad)
(bad)
(bad)
(bad)
inc
pop
(bad)
(bad)
(bad)
(bad)
(bad)
inc
pop
(bad)
(bad)
(bad)
(bad)
(bad)
inc
pop
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
jmp
(bad)
(bad)
(bad)
(bad)
inc
add
inc
pop
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
add
cld
add
(bad)
(bad)
call
pop
clc
add
(bad)
(bad)
(bad)
(bad)
(bad)
push
add
lock
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
clc
add
lds
add
(bad)
(bad)
clc
add
rol
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
cld
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
cld
add
add
aas
fdivrp
(bad)
(bad)
(bad)
(bad)
inc
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
add
(bad)
(bad)
jmp
(bad)
(bad)
jmp
call
(bad)
(bad)
(bad)
(bad)
clc
add
pop
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
add
jg
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
pop
(bad)
dec
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
clc
pop
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
add
add
add
add
add
add
add
add
add
add
adc
add
add
add
add
add
add
add
add
inc
add
add
add
inc
call
inc
(bad)
inc
add
(bad)
inc
add
add
add
dec
add
pop
mov
ja
jo
add
mov
xor
aaa
aaa
ja
add
add
add
add
add
xor
xor
aaa
add
add
add
add
and
add
movs
add
add
add
jae
jae
aaa
xor
aaa
aaa
xor
add
data16
add
inc
jae
jae
jae
js
jae
js
add
xor
jae
jae
aaa
aaa
aaa
cmp
add
xchg
xor
mov
jae
xor
add
add
mov
mov
jae
ja
xchg
add
dec
add
pop
add
add
xchg
aaa
aaa
jnp
mov
xor
xor
cmp
cmp
add
add
jnp
mov
lea
jae
aaa
aaa
pop
mov
aaa
mov
cmp
mov
aaa
aaa
aaa
xor
mov
add
add
push
add
add
add
cmp
mov
aaa
data16
aaa
aaa
jnp
xchg
aaa
cmp
add
inc
add
add
add
add
mov
aaa
aaa
xor
mov
add
add
mov
aaa
aaa
aaa
cmp
xor
mov
jae
aaa
xor
jnp
aaa
popf
jae
xchg
aaa
xor
dec
aaa
aaa
pop
mov
aaa
mov
xchg
mov
mov
jae
aaa
xor
jnp
aaa
cmp
lea
add
mov
jae
cmp
jnp
jnp
aaa
cmp
add
add
mov
aaa
mov
push
aaa
js
xor
add
cmp
mov
cmp
aaa
aaa
cmp
sldt
add
mov
aaa
xor
cmp
add
add
mov
aaa
aaa
aaa
aaa
xor
mov
cmp
mov
jae
aaa
aaa
aaa
aaa
mov
add
xchg
dec
mov
mov
aaa
cmp
xchg
xor
add
add
mov
mov
mov
js
lea
aaa
add
add
or
mov
mov
aaa
jae
jnp
xor
add
add
add
add
xchg
mov
aaa
aaa
xor
jae
xor
add
add
cmp
mov
jae
jae
jae
aaa
(bad)
jae
xchg
mov
jnp
xor
aaa
xor
xor
cmp
add
add
mov
mov
xor
jae
aaa
add
add
add
add
xchg
mov
mov
aaa
mov
pop
xchg
mov
jnp
aaa
aaa
aaa
ja
add
add
add
lea
mov
jnp
jae
xor
cmp
add
xor
mov
mov
ja
mov
add
add
jae
aaa
mov
mov
mov
add
inc
add
add
aaa
aaa
mov
add
add
or
mov
mov
add
add
add
add
add
add
xor
dec
add
pop
add
or
add
mov
add
into
add
add
add
add
add
add
add
add
xchg
pop
add
add
lahf
add
add
add
add
xor
xchg
js
add
add
(bad)
xor
add
add
add
xchg
add
or
add
add
add
add
lds
add
add
ja
aaa
xchg
add
add
add
jae
cmp
add
add
add
add
jo
add
add
or
aaa
add
add
add
or
into
add
add
add
jae
aaa
add
add
add
xchg
aaa
xor
add
add
add
add
add
add
ja
aaa
cmp
add
add
or
aaa
xor
add
xchg
add
xor
cmp
or
aaa
out
popa
add
add
add
add
add
add
add
add
add
add
xchg
xor
add
add
add
add
or
xor
add
or
aaa
aaa
add
or
xor
mov
add
add
dec
jae
jae
ja
or
adc
cmp
add
add
ja
jae
adc
js
add
add
jae
xor
jae
xor
lahf
add
add
add
jae
xor
js
add
xchg
add
add
add
(bad)
mov
ja
jae
js
add
add
xchg
add
add
add
mov
add
add
add
add
add
mov
xchg
add
add
add
add
lock
(bad)
(bad)
(bad)
(bad)
jmp
add
(bad)
(bad)
(bad)
(bad)
inc
add
jg
(bad)
(bad)
inc
add
pop
(bad)
call
add
add
add
add
(bad)
(bad)
inc
add
add
(bad)
(bad)
clc
add
add
ud0
lock
add
ud0
lock
add
add
(bad)
push
add
add
ud0
lock
popa
add
(bad)
push
add
add
inc
(bad)
push
add
add
ud0
lock
add
ud0
lock
add
ud0
lock
add
movmskps
lock
add
ud0
lds
add
add
(bad)
push
add
add
ud0
lock
add
ud0
lock
add
ud0
fiadd
add
add
(bad)
push
add
add
(bad)
push
add
add
ud0
lock
add
ja
add
ud0
lock
add
ud0
lock
add
ud0
lock
into
add
dec
add
(bad)
push
add
add
jg
push
add
add
(bad)
(bad)
push
add
add
(bad)
(bad)
push
add
add
call
(bad)
(bad)
(bad)
(bad)
inc
pop
(bad)
(bad)
(bad)
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
call
inc
inc
cmp
pop
(bad)
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
call
(bad)
inc
(bad)
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
pop
clc
pop
(bad)
(bad)
(bad)
inc
fdivp
pop
(bad)
(bad)
(bad)
jmp
pop
loopne
dec
jmp
add
pop
(bad)
(bad)
(bad)
push
add
xchg
add
ud0
(bad)
(bad)
clc
add
pop
(bad)
(bad)
(bad)
(bad)
cld
add
aas
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
dec
(bad)
(bad)
(bad)
jmp
pop
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
clc
pop
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
add
add
add
add
add
add
add
add
add
add
add
adc
add
sbb
inc
imul
dec
jp
add
mov
add
add
loop
mov
retf
add
add
add
add
add
inc
add
(bad)
jmp
add
(bad)
add
add
add
or
inc
and
and
xchg
gs
xor
adc
dec
add
push
add
add
inc
xor
push
xor
add
add
push
push
ficom
push
xor
add
add
add
add
data16
push
push
ja
push
pusha
add
add
add
add
add
jbe
push
push
ss
push
jo
add
mov
push
push
data16
mov
xor
add
add
add
add
mov
and
gs
jo
add
add
add
add
push
ja
js
gs
push
gs
pusha
add
add
add
add
pop
addr16
mov
push
push
ja
gs
add
add
add
add
push
ja
mov
push
push
ja
push
add
add
add
add
push
push
ja
mov
push
push
pop
push
push
add
add
add
add
push
xchg
gs
push
push
push
xchg
pusha
pop
addr16
js
jbe
data16
xchg
pusha
add
add
add
fadd
loopne
ja
mov
gs
push
xchg
jo
add
add
add
add
mov
mov
push
xor
add
add
add
add
mov
push
push
push
xchg
jo
add
rol
add
add
push
jne
push
push
push
js
and
add
add
add
add
ja
mov
jbe
xchg
pusha
add
add
add
add
pop
push
jbe
gs
xorps
push
add
add
add
add
push
push
jne
mov
push
sub
mov
add
add
pop
push
ja
ja
ja
adc
add
add
add
pop
js
mov
ja
jbe
adc
add
js
mov
ja
push
adc
add
add
add
add
add
mov
data16
addr16
gs
inc
push
add
ja
push
inc
xor
stos
mov
or
mov
test
add
add
cmps
pop
jne
add
add
add
add
and
add
add
add
or
mov
add
enter
add
add
add
push
data16
add
add
xchg
mov
add
add
or
add
add
add
fs
add
add
add
add
add
add
add
push
push
add
add
add
imul
add
add
or
add
add
add
xor
add
add
add
data16
or
push
add
add
add
sbb
or
push
mov
or
add
or
ss
add
add
mov
push
add
add
add
inc
push
pop
add
add
mov
arpl
enter
or
push
add
add
add
mov
add
add
mov
add
add
add
add
add
adc
nop
or
adc
add
pop
add
or
push
push
inc
xor
xor
xchg
xor
adc
add
add
data16
xor
nop
loopne
add
add
jbe
inc
inc
nop
add
add
sbb
add
stos
cdq
mov
add
add
add
add
add
(bad)
(bad)
clc
add
jmp
add
push
add
inc
add
inc
add
inc
add
cld
add
add
add
push
add
add
add
inc
add
add
add
inc
add
inc
add
inc
add
mov
add
inc
add
inc
add
inc
add
pop
add
add
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
push
ud0
inc
add
clc
pop
(bad)
(bad)
inc
sar
clc
aas
(bad)
(bad)
inc
xchg
(bad)
clc
aas
cld
aas
inc
add
clc
and
aas
inc
add
clc
aas
cld
aas
inc
add
clc
aas
cld
aas
inc
add
clc
aas
cld
aas
inc
add
enter
inc
add
clc
pop
clc
aas
dec
add
clc
pop
lock
inc
add
clc
(bad)
aas
inc
add
cld
pop
loopne
inc
add
sub
sar
add
(bad)
inc
cmp
add
inc
add
add
(bad)
inc
add
inc
add
inc
add
jmp
pop
(bad)
inc
add
(bad)
clc
pop
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
inc
add
add
imul
add
sbb
add
das
or
add
or
add
add
add
add
add
add
(bad)
inc
add
add
inc
add
(bad)
(bad)
inc
add
add
inc
add
(bad)
(bad)
inc
add
add
sbb
jl
inc
add
add
fcom
inc
add
(bad)
(bad)
inc
add
add
add
add
add
add
add
add
add
add
add
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
push
mov
push
mov
sub
push
push
push
mov
mov
xor
push
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
push
push
lea
push
push
call
lea
push
call
lea
fstp
call
cmp
jne
push
push
call
mov
lea
push
push
mov
call
cmp
fnclex
jge
mov
push
push
push
push
call
jmp
mov
mov
lea
push
push
mov
mov
call
cmp
fnclex
jge
push
push
push
push
call
mov
push
push
call
mov
lea
neg
sbb
neg
neg
call
mov
lea
call
test
je
mov
test
jne
push
push
call
mov
lea
push
push
mov
call
test
fnclex
jge
push
push
push
push
call
mov
lea
push
push
mov
mov
call
test
fnclex
jge
push
push
push
push
call
mov
lea
mov
call
lea
call
push
call
lea
lea
push
mov
mov
call
mov
lea
call
lea
push
lea
push
push
mov
mov
mov
call
lea
push
call
lea
lea
push
push
push
fstp
call
add
fwait
push
jmp
lea
call
lea
call
lea
lea
push
push
push
call
add
ret
mov
lea
call
lea
call
lea
call
lea
call
lea
call
ret
mov
pop
pop
xor
mov
pop
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
mov
push
mov
sub
push
push
push
mov
mov
mov
xor
cmp
mov
mov
mov
mov
mov
jne
push
push
call
mov
push
push
mov
call
cmp
fnclex
jge
push
push
push
push
call
cmp
jne
push
push
call
mov
push
push
mov
call
cmp
fnclex
jge
push
push
push
push
call
lea
push
lea
push
push
push
mov
mov
call
mov
mov
call
cmp
je
call
lea
push
lea
push
push
push
mov
mov
call
mov
call
cmp
je
call
lea
push
lea
push
push
push
mov
mov
call
mov
call
cmp
je
call
lea
push
lea
push
push
push
mov
mov
call
mov
call
cmp
je
call
lea
push
lea
push
push
push
mov
mov
call
mov
call
cmp
je
call
lea
mov
mov
mov
call
mov
mov
cmp
jne
push
push
call
mov
mov
add
jo
mov
push
push
call
cmp
fnclex
jge
push
push
push
push
call
mov
mov
add
jo
cmp
mov
jne
cmp
jne
push
push
call
mov
lea
push
push
mov
call
cmp
fnclex
jge
push
push
push
push
call
mov
push
push
call
mov
mov
neg
sbb
lea
inc
neg
call
cmp
jne
lea
push
lea
push
push
mov
mov
call
mov
mov
call
mov
fild
fstp
fld
fadd
fnstsw
test
jne
call
mov
mov
test
jne
push
push
call
mov
lea
push
push
mov
call
test
fnclex
jge
push
push
push
push
call
mov
push
push
push
push
call
mov
lea
neg
sbb
neg
neg
call
test
jne
cmp
jle
mov
mov
test
jne
push
push
call
mov
lea
push
push
mov
call
test
fnclex
jge
push
push
push
push
call
push
push
call
push
mov
push
push
call
mov
call
mov
mov
fwait
push
jmp
lea
call
lea
call
ret
ret
mov
pop
pop
mov
pop
mov
pop
ret
jmp
call
nop
nop
sahf
sahf
sahf
sahf
dec
jl
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
add
sub
add
add
mov
add
bound
add
add
xchg
add
add
ret
add
jge
add
add
hlt
jge
add
jle
add
jle
add
jle
add
jle
add
add
push
jle
add
add
jbe
add
cmp
pushf
jle
add
jle
add
jle
add
add
and
add
hlt
jle
add
add
add
add
jg
add
add
xor
add
add
push
jg
add
add
je
add
add
add
add
sahf
jg
add
jg
add
jg
add
jg
add
jg
add
jg
add
jg
add
add
add
push
inc
push
dec
xor
inc
dec
dec
add
push
add
dec
arpl
add
mov
pop
popa
fs
data16
popa
outs
add
js
pop
pop
jbe
popa
push
popa
jb
outs
jbe
add
mov
pop
pop
jbe
popa
inc
jb
gs
popa
jb
add
bound
jb
gs
popa
jb
imul
pop
popa
fs
imul
xor
mov
pop
popa
fs
data16
gs
xor
sub
bound
gs
jns
je
ins
inc
jb
outs
jb
rol
pop
jbe
popa
dec
jb
jae
ins
je
push
bound
add
add
jbe
popa
dec
outs
inc
jae
jb
add
push
imul
xor
cmps
add
fs
imul
imul
popa
fs
imul
xor
imul
dec
jae
outs
add
outs
add
jbe
popa
inc
push
add
add
inc
dec
push
pop
push
dec
dec
dec
pop
inc
fs
data16
pop
pop
jbe
popa
push
je
inc
ins
jo
or
inc
ins
ins
inc
jne
arpl
outs
inc
popa
ins
ins
add
push
data16
je
outs
add
dec
push
pop
push
dec
dec
dec
pop
push
gs
gs
jae
add
push
add
dec
jae
jb
add
inc
push
inc
dec
push
pop
push
dec
dec
dec
pop
push
jne
jb
dec
outs
je
jb
popa
arpl
mov
pop
pop
jbe
popa
inc
js
gs
dec
popa
outs
fs
gs
add
push
data16
gs
add
scas
add
fs
imul
ss
add
pop
pop
jbe
popa
push
popa
jb
imul
jbe
popa
inc
push
inc
js
gs
imul
pop
pop
jbe
popa
inc
popa
je
push
popa
jb
add
pop
inc
dec
ins
outs
add
lea
pop
pop
jbe
popa
inc
jb
outs
jb
jbe
jb
ins
outs
ja
add
add
jbe
popa
dec
gs
add
push
imul
xor
add
push
imul
xor
imul
fs
imul
xor
add
sbb
pop
pop
jbe
popa
push
cmp
jb
add
push
imul
iret
add
jbe
popa
dec
xor
popa
jb
add
add
jbe
popa
dec
outs
push
je
inc
add
bound
jo
xor
push
add
dec
popa
je
outs
add
add
jbe
popa
push
je
dec
outs
jbe
add
mov
pop
popa
ins
ins
ins
jne
add
pop
inc
dec
je
outs
add
push
add
dec
gs
add
scas
add
jbe
popa
inc
jb
gs
je
add
lods
add
jbe
popa
inc
jb
gs
bound
add
