push
mov
add
add
add
add
add
add
add
add
or
add
add
add
adc
add
push
and
add
add
add
dec
inc
add
add
add
add
or
add
jbe
xor
xor
add
add
add
add
add
add
jle
add
add
dec
add
add
push
je
imul
add
add
add
push
push
add
add
and
dec
inc
add
add
add
and
outs
bound
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
xor
add
inc
adc
add
pop
add
add
add
add
add
xchg
add
add
sbb
add
add
add
add
add
pop
add
add
add
std
add
add
add
add
add
xor
inc
add
add
add
ins
add
add
inc
add
add
add
mov
inc
add
add
add
fiadd
add
mov
add
add
add
add
add
jnp
popa
data16
xor
gs
sub
sub
sub
xor
xor
fs
cmp
outs
fs
gs
inc
inc
cmp
inc
cmp
inc
xor
ss
cmp
aaa
xor
xor
xor
inc
inc
cmp
inc
cmp
xor
push
ins
popa
jb
inc
jae
gs
bound
push
ins
popa
jb
inc
js
gs
imul
gs
gs
jne
arpl
arpl
jb
outs
je
jo
add
popa
jb
inc
jae
gs
bound
push
ins
popa
jb
inc
js
gs
imul
gs
gs
jne
arpl
cs
je
cs
add
popa
jb
inc
jae
gs
bound
push
ins
popa
jb
inc
js
gs
imul
gs
gs
jne
arpl
cs
outs
jb
jo
add
popa
jb
inc
jae
gs
bound
push
ins
popa
jb
inc
js
gs
imul
gs
gs
jne
arpl
cs
outs
jb
ss
add
popa
jb
inc
jae
gs
bound
push
ins
popa
jb
inc
js
gs
imul
gs
gs
jne
arpl
outs
gs
outs
jb
cs
add
popa
jb
inc
jae
gs
bound
push
ins
popa
jb
inc
js
gs
imul
gs
gs
jne
arpl
outs
imul
outs
add
popa
jb
inc
jae
gs
bound
push
ins
popa
jb
inc
js
gs
imul
gs
gs
jne
arpl
cs
jb
imul
outs
add
popa
jb
inc
jae
gs
bound
push
ins
popa
jb
inc
js
gs
imul
gs
gs
jne
arpl
cs
outs
outs
jge
jo
add
popa
jb
inc
jae
gs
bound
push
ins
popa
jb
inc
js
gs
imul
gs
gs
jne
arpl
cs
jne
je
imul
add
add
sbb
into
test
popa
pop
(bad)
push
popf
add
add
add
xchg
add
add
add
add
and
add
inc
xor
add
add
add
add
cwde
retf
repz
cwde
enter
pop
mov
dec
mov
xchg
and
(bad)
movs
test
jnp
sahf
out
sti
xchg
jns
jae
or
pop
mov
mov
retf
dec
cmps
cmps
sbb
dec
pusha
scas
push
xor
idiv
mov
call
jl
xchg
mov
arpl
popf
lods
cvtdq2ps
mov
(bad)
xor
mov
pop
mov
jnp
or
or
adc
and
retf
in
xor
(bad)
ror
mov
add
adc
pop
fs
es
lock
add
sub
and
xchg
mov
ficom
lds
movs
push
stc
push
cmp
in
mov
mov
ret
xchg
icebp
call
add
mov
xchg
cli
ror
retf
xchg
mov
sahf
hlt
xchg
mov
inc
lods
xor
fcmovnu
ficom
in
cmp
sub
out
lock
lea
add
stc
fimul
out
pop
mov
add
cmp
lods
mov
loope
aam
xor
pushf
dec
out
sub
in
aam
fsub
int
js
mov
stc
fisub
push
mov
aam
mov
(bad)
shl
(bad)
out
gs
scas
outs
push
push
cmps
daa
iret
push
pop
jl
mov
cmp
push
pop
ins
jb
mov
mov
popa
arpl
test
adc
fisubr
imul
cmp
dec
cmp
mov
dec
mov
arpl
jbe
or
inc
aam
js
loope
(bad)
push
adc
xor
enter
loope
pop
inc
jmp
dec
jnp
sub
clc
call
fs
or
jae
push
pushf
scas
test
adc
fdiv
inc
pop
dec
inc
add
ret
retf
sub
adc
cmp
inc
retf
loop
cs
mov
in
(bad)
sbb
fmul
lahf
iret
rcr
jne
jb
stos
mov
stc
jb
test
pop
fidivr
and
aas
jmp
mov
mov
sbb
sbb
or
inc
rcr
sbb
sbb
or
cmp
or
cwde
add
xor
adc
and
xor
inc
sbb
jno
iret
inc
scas
adc
in
das
cmp
adc
sub
loopne
adc
cmp
test
adc
js
cmps
mov
mov
add
or
add
scas
shl
cmc
jmp
and
scas
xchg
hlt
pop
adc
or
xchg
fnop
xchg
sub
ja
adc
fldenv
dec
cli
adc
adc
push
ja
shl
fild
loope
stos
jbe
shr
icebp
xor
sbb
sahf
sub
(bad)
pop
adc
inc
shl
std
jbe
jg
rcl
inc
adc
xlat
jmp
dec
idiv
lock
add
xchg
mov
push
sbb
push
mov
inc
test
push
dec
scas
retf
sub
aaa
add
retf
loop
mov
dec
add
mov
leave
mov
inc
div
pop
icebp
popf
mov
leave
fmul
mov
push
dec
shl
pop
jmp
stc
mov
sahf
test
add
pop
lods
dec
mov
dec
(bad)
daa
fbstp
or
(bad)
pop
jmp
loopne
in
dec
mov
cmc
aaa
test
xchg
pop
aas
std
lods
jne
jns
popf
add
mov
lahf
adc
punpckhwd
test
ds
sub
dec
and
sub
dec
cmps
inc
retf
(bad)
setne
aas
fstp
not
inc
jge
push
add
jecxz
add
ja
test
outs
ds
loop
cmp
icebp
arpl
push
(bad)
pusha
jne
cmovns
lods
sbb
data16
fnsave
add
sbb
inc
mov
and
ja
add
and
cli
leave
pop
jp
aaa
xchg
and
sti
xor
or
stos
in
popf
jmp
ja
jno
add
fcmove
add
pop
inc
jne
or
jge
mov
jne
or
cmp
test
push
test
cmc
cmc
lods
loopne
test
in
fwait
dec
jbe
in
in
xor
sub
and
and
repz
add
inc
(bad)
cmp
sahf
test
mov
scas
mov
xlat
mov
scas
mov
adc
add
and
mov
jl
push
cmp
pop
ror
inc
mov
fwait
nop
mov
sbb
xchg
push
sbb
xchg
mov
xchg
in
aam
fld
ds
mov
in
push
mov
dec
adc
test
sub
jae
push
pop
or
dec
adc
push
jecxz
retf
ret
jl
sahf
pop
pop
dec
je
jae
mov
pop
shl
cmp
cmp
rol
push
test
xor
sbb
or
cmp
pop
into
xchg
jns
jmp
das
xchg
push
cmc
add
push
mov
jb
push
cs
popf
pushf
jb
sbb
sbb
cli
loopne
push
cmp
xchg
outs
arpl
dec
pop
mov
sbb
pop
retf
test
js
scas
cmps
pusha
sub
outs
add
adc
fnsave
pop
jb
repnz
retf
jg
ret
and
sbb
mov
inc
aam
adc
pop
jns
jbe
xor
cmp
mov
and
out
cs
mov
mov
pop
mov
cmps
xchg
sti
cwde
sahf
and
pop
dec
dec
pop
daa
mov
mov
mov
sahf
xor
clc
xor
pop
mov
mov
inc
jmp
sub
cdq
push
mov
imul
gs
push
mov
cwde
je
push
dec
or
rol
or
jmp
jg
sti
mov
and
fwait
and
and
mov
mov
mov
fistp
xor
push
and
sbb
dec
enter
mov
sub
pop
mov
popf
sub
pop
cdq
test
push
push
adc
fstp
outs
dec
push
fwait
sub
stos
mov
sar
dec
les
ret
cmps
fisttp
cmp
and
lods
sbb
and
xchg
int3
mov
fucomip
cmp
mov
(bad)
lea
xchg
leave
ss
xor
shl
rol
mov
sub
jl
xchg
add
xor
jecxz
stos
sub
xchg
out
jge
pop
cmps
in
sub
fsub
xor
inc
sub
mov
vmread
(bad)
pop
push
scas
in
mov
xchg
and
xchg
mov
cvtdq2ps
mov
cmps
cli
inc
jmp
add
cmp
xchg
or
push
add
inc
data16
jmp
mov
imul
aaa
test
(bad)
in
sbb
push
pop
imul
and
out
inc
dec
jns
jp
scas
mov
mov
ins
dec
int3
mov
mov
mov
xor
loopne
popa
jl
out
stc
pop
fstp
repz
mov
dec
add
push
cdq
mov
jae
add
daa
sub
bswap
jmp
add
xor
jne
fcom
test
(bad)
imul
pop
(bad)
loope
jp
inc
rcr
cs
out
call
mov
icebp
out
xchg
leave
cmp
xor
adc
inc
mov
fdivr
rol
out
stos
push
bound
fs
mov
ins
add
add
cmp
fbstp
xor
inc
pop
ror
jecxz
add
aas
push
arpl
pop
adc
sub
or
cmp
push
sti
xchg
dec
sub
loopne
mov
daa
push
jae
xchg
sbb
lods
leave
sub
stos
or
mov
fcom
lods
or
in
sub
push
fidiv
push
fld
call
xchg
cs
mov
adc
es
fucomi
dec
jle
inc
cs
mov
pusha
xchg
outs
sbb
jg
mov
or
cwde
aad
clc
movs
jb
push
mov
arpl
push
sub
mov
xchg
imul
inc
sbb
mov
mov
arpl
clc
lods
fild
mov
mov
das
and
mov
cmp
ds
ins
xchg
lds
loop
dec
xchg
mov
int
add
push
sbb
sub
jo
pop
int
stos
mov
imul
xor
xor
pop
dec
mov
mov
out
jmp
mov
or
push
jp
int
pop
lods
sbb
or
ret
mov
je
or
adc
pushf
movs
pop
sub
fimul
sbb
in
mov
jmp
xchg
inc
leave
out
sbb
int3
xchg
pop
mov
imul
cmp
jmp
in
sub
xchg
pop
arpl
scas
pop
add
push
add
ret
imul
into
neg
out
call
xor
outs
(bad)
jo
fs
std
jp
les
popf
sbb
mov
jns
jl
mov
imul
xor
ror
jmp
xchg
shl
dec
enter
add
pusha
test
fwait
movs
mov
repz
sbb
and
or
jae
and
neg
xchg
jo
movs
(bad)
cmc
dec
push
bound
jle
dec
mov
ss
jo
mov
mov
push
mov
fidivr
pop
gs
fs
fisubr
lods
stc
in
icebp
sub
fidiv
add
or
sbb
mov
sub
data16
int3
cdq
push
out
daa
dec
ins
stos
std
cli
iret
retf
lods
push
mov
pop
mov
jo
adc
in
pusha
mov
test
(bad)
push
dec
mov
out
inc
sar
add
rcl
daa
cdq
ja
mov
lahf
cmps
pop
cmps
rol
stos
push
aam
pop
into
xor
ins
xor
dec
cdq
push
cmp
mov
loop
daa
and
xor
lods
pop
sbb
pop
aaa
shl
shl
lds
push
popf
mov
push
or
sbb
push
jge
ret
jge
adc
cmp
test
rol
mov
dec
xchg
jmp
xor
push
xchg
scas
pusha
sub
pop
push
ins
ss
jmp
fcom
adc
rol
dec
mov
stos
sub
nop
scas
aas
dec
dec
inc
adc
jns
xchg
cmps
xor
mov
fdiv
xchg
mov
dec
fistp
pop
xlat
(bad)
ret
dec
das
mov
jae
call
xchg
retf
aad
in
out
xor
dec
push
outs
in
cwde
loop
mov
fisub
push
in
inc
sbb
add
lods
xchg
out
push
retf
xor
mov
adc
sbb
loope
pop
cmp
push
adc
inc
adc
inc
mov
aam
jb
mov
and
xor
in
sbb
fdiv
mov
cdq
sbb
shl
jae
sbb
arpl
jnp
mov
bound
pop
aam
cmp
dec
jmp
sub
xlat
push
cmp
jl
xchg
xor
or
out
fld
lock
jae
adc
mov
xchg
jg
mov
dec
ins
ss
lods
(bad)
mov
outs
sbb
je
dec
xor
iret
inc
cwde
test
loop
addr16
inc
pusha
cmp
inc
mov
cmps
jmp
add
mov
mov
inc
fsubr
inc
fcomp
xchg
lods
sub
and
jmp
cmp
pop
mov
jnp
movs
pop
dec
pop
cld
or
popa
int
sti
je
into
int3
js
movs
out
mov
mov
imul
test
fiadd
jnp
adc
outs
sub
(bad)
inc
sub
repnz
sar
dec
push
cmp
bound
mov
add
cld
fmul
jo
sub
xor
push
ficomp
retf
push
dec
mov
mov
fwait
imul
stos
imul
mov
fcmovnbe
cmp
test
aam
iret
nop
jb
xchg
add
daa
sub
inc
adc
jbe
push
mov
pop
das
push
stos
std
out
jbe
adc
data16
jne
rcl
inc
sbb
out
push
cmps
in
test
cmp
repnz
mov
xor
xchg
mov
xchg
sub
pop
leave
push
out
mov
fs
lds
add
add
cmp
out
outs
or
daa
test
xchg
xor
loope
gs
iret
add
gs
scas
jmp
loopne
enter
sub
cmp
gs
lods
sbb
xchg
pop
pop
mov
gs
xor
sbb
lods
jmp
or
push
mov
mov
sub
loop
pop
cmps
inc
mov
or
test
movs
mov
mov
loop
pop
jbe
dec
jl
push
mov
add
out
mov
lods
fmul
sbb
popf
xor
fwait
inc
xchg
jp
fistp
xchg
cli
inc
pop
jg
xchg
and
out
cwde
ret
sub
movs
stc
in
xchg
shl
out
adc
gs
jbe
sbb
sbb
bnd
in
mov
out
jg
call
lods
mov
and
movs
xchg
push
add
bound
mov
(bad)
xchg
or
hlt
jae
out
test
xchg
mov
ins
and
sbb
sbb
aad
out
inc
scas
ret
fist
xor
pop
dec
lods
stos
lods
sbb
cs
add
leave
xor
fwait
sub
fmul
pop
movs
cmc
inc
mov
jge
cdq
xor
pop
out
rcr
scas
dec
cmp
stc
add
inc
lods
data16
push
mov
jmp
arpl
add
jne
stos
mov
fisttp
ja
stos
jnp
popf
cli
cmp
or
out
iret
out
ret
jae
hlt
cmc
adc
jnp
jg
call
sbb
adc
leave
and
adc
dec
pop
(bad)
pop
fwait
std
adc
mov
lea
daa
xchg
stos
addr16
call
lods
aad
ss
pop
lea
mov
xchg
xlat
push
push
add
xor
xor
inc
push
and
and
imul
out
icebp
hlt
hlt
add
es
add
sbb
movs
icebp
loopne
fldcw
ins
movs
pop
and
ds
aaa
and
xlat
lock
mov
mov
ficom
fisub
sbb
fdivr
jnp
pop
test
frstor
stos
cmps
(bad)
pusha
mov
jnp
pop
div
je
xor
nop
add
cmps
push
add
cmp
dec
add
cld
cmp
ret
and
dec
xor
mov
lods
xor
dec
add
fcomp
lar
popf
or
test
xchg
test
stos
sbb
push
scas
hlt
jo
call
fstp
out
rcr
in
mov
clc
xrelease
retf
clc
loope
push
pusha
rcr
lds
mov
xor
stc
jecxz
and
xor
jmp
sbb
push
icebp
inc
pop
ja
stos
sub
mov
fsub
xchg
cmps
push
dec
stos
scas
test
or
ja
and
mov
dec
pushf
inc
cs
mov
rcr
sub
xchg
in
fs
outs
xchg
sbb
sbb
inc
bound
(bad)
cmp
stc
xchg
cmp
mov
jp
xchg
stc
test
cmp
or
mov
push
jo
out
mov
(bad)
jl
dec
add
mov
xchg
cmps
out
loopne
addr16
in
(bad)
adc
daa
jo
or
jmp
cwde
nop
push
mov
fwait
add
ret
adc
sar
mov
push
pop
inc
dec
sub
in
sub
sbb
test
scas
mov
mov
pop
lds
mov
leave
fsub
mov
mov
and
xchg
jo
pmulhw
inc
sar
add
jne
mov
xor
test
(bad)
les
or
adc
aaa
mov
xchg
adc
inc
sub
dec
xchg
push
mov
shl
lahf
jle
adc
fadd
xor
sub
pop
dec
sbb
mov
out
(bad)
xchg
shr
sar
es
jecxz
add
pop
loopne
loope
dec
call
add
sbb
jb
xlat
xchg
cdq
je
pop
cmp
jnp
mov
cwde
lods
das
push
mov
pop
add
xchg
js
xchg
fild
or
inc
xchg
pop
xchg
xchg
pop
adc
sahf
or
push
sar
(bad)
sti
lahf
jmp
dec
cwde
icebp
fstp
push
(bad)
mov
jo
test
or
out
outs
dec
aam
pop
add
sbb
out
aad
lods
jmp
stc
aam
ss
in
or
xlat
sbb
push
sub
cmp
mov
(bad)
ja
fnstenv
or
stc
push
sub
popf
pop
pop
movs
add
or
icebp
jmp
ins
(bad)
dec
cmps
hlt
out
out
mov
dec
(bad)
stos
pop
and
pop
xchg
repnz
lock
sub
add
fwait
pop
add
movs
ss
rol
retf
sub
jns
les
xchg
jmp
cdq
dec
fs
faddp
mov
pop
mov
and
pop
mov
mov
dec
sahf
scas
add
pop
add
lds
xor
je
stos
sbb
out
test
in
jnp
pop
mov
push
xchg
popf
push
jmp
daa
add
lock
pop
(bad)
and
pop
cmc
dec
sbb
(bad)
mov
into
lock
fstp
pop
adc
jle
push
iret
(bad)
pop
or
dec
icebp
inc
or
xlat
xchg
push
loopne
lea
daa
enter
push
add
fwait
pop
inc
adc
mov
mov
ret
int
jo
push
outs
sbb
fcom
sahf
inc
mov
sub
cmp
hlt
jne
das
push
mov
jg
mov
ficomp
xchg
xor
mov
loopne
lds
or
aas
pushf
test
ins
movs
jne
(bad)
dec
jnp
dec
inc
ins
(bad)
xchg
xchg
neg
sbb
cli
sub
or
inc
adc
cmp
lock
adc
iret
pop
mov
ds
cmp
and
icebp
daa
repz
dec
push
mov
inc
lahf
adc
fbstp
add
in
cmp
or
test
lahf
lahf
xchg
out
jp
fadd
sbb
dec
jbe
idiv
ja
push
cmp
and
sbb
mov
dec
sub
jae
sub
mov
cld
test
pop
popf
lds
out
dec
arpl
std
es
lea
mov
int
test
push
adc
mov
or
(bad)
xchg
mov
gs
cmp
out
inc
les
fs
dec
loop
adc
cmc
outs
rol
fild
jns
fcomp
dec
shr
lds
ss
(bad)
mov
jp
cwde
popf
fisub
lahf
popf
cwde
dec
addr16
cmp
aam
mov
dec
jns
mov
mov
sub
cld
lahf
jg
sar
or
inc
xchg
pop
std
pusha
lock
adc
imul
mov
(bad)
repnz
bound
scas
mov
mov
dec
pop
push
push
popf
mov
lods
xchg
ins
sub
push
add
add
push
dec
dec
sbb
jl
loopne
xor
shl
cmps
nop
dec
sub
retf
gs
cmps
mov
push
into
mov
test
bound
stos
cmp
push
sbb
out
test
movs
fcom
int3
or
loope
arpl
adc
cmp
fwait
mov
mov
ficomp
outs
lods
(bad)
fimul
mov
scas
ret
jae
push
les
cli
dec
dec
mov
into
add
pop
cmp
mov
xchg
pop
mov
fst
add
xor
jno
pop
lods
jecxz
xor
xchg
(bad)
leave
or
cld
fwait
adc
dec
jmp
inc
hlt
push
movs
int3
jmp
mov
adc
call
ins
fs
dec
std
iret
out
retf
push
adc
jg
(bad)
(bad)
xchg
mov
adc
pcmpgtd
jo
adc
imul
popf
in
daa
xchg
pop
cld
jae
addr16
or
mov
in
mov
jmp
shl
in
movups
push
call
inc
and
push
push
push
out
in
mov
pop
sbb
mov
ss
and
mov
push
add
fwait
and
out
(bad)
adc
and
repz
ror
fistp
cmp
mov
div
adc
ror
movs
in
mov
push
sbb
mov
xor
push
push
sub
and
cmp
cmps
sar
push
sbb
mov
xor
push
add
and
fist
repz
and
sub
hlt
mov
jne
mov
add
out
(bad)
push
test
sub
outs
and
nop
mov
push
dec
cs
fstp
or
add
dec
sti
leave
fcom
mov
and
mov
sub
inc
jle
pop
dec
lds
nop
pop
sahf
cs
fist
mov
call
push
mov
cmps
int
inc
shl
push
fimul
test
or
(bad)
and
mov
or
inc
or
lock
pop
adc
push
inc
scas
movntps
mov
pop
push
jbe
add
jbe
fadd
mov
pop
and
movs
iret
mov
call
enter
inc
scas
sbb
mov
push
cmp
sti
adc
arpl
jge
shl
sbb
and
or
pop
add
dec
inc
cmp
or
clc
xchg
mov
push
pusha
test
pop
test
mov
loopne
sti
mov
fisubr
stos
nop
les
call
(bad)
jns
jge
cmp
cmp
out
ds
dec
mov
lods
movs
mov
push
cmp
fdivr
inc
fldcw
jmp
mov
leave
(bad)
mov
push
add
xchg
cmp
pop
shl
ret
mov
inc
fstp
out
mov
rcr
into
mov
sbb
nop
inc
outs
lea
jmp
fld
div
icebp
in
int3
gs
add
and
(bad)
sbb
stos
nop
pop
mov
mov
xchg
lods
push
ret
pop
pop
adc
jl
fbstp
sub
jb
mov
popa
rcr
hlt
frstor
(bad)
fucomip
dec
loopne
bound
jle
int
inc
jbe
daa
xor
or
mov
cmp
inc
hlt
dec
dec
add
and
adc
jg
and
ins
push
mov
add
mov
cmps
popa
lods
mov
(bad)
cmps
cmp
jns
xor
mov
bsr
pop
sbb
ins
lds
mov
push
push
arpl
xchg
out
add
push
cld
inc
add
nop
inc
test
aas
add
mov
push
into
dec
cmc
push
or
in
sub
push
jb
outs
dec
scas
push
pop
xor
and
sti
fldcw
mov
xchg
loop
imul
loop
fmul
fs
iret
(bad)
repnz
xchg
call
call
cmp
or
mov
fwait
or
outs
lods
fidiv
mov
dec
fsub
movs
and
pop
pop
push
xchg
pusha
cmp
ja
adc
test
sub
push
(bad)
dec
sti
xor
jp
enter
mov
cmps
ins
fbld
jne
mov
cmps
and
sbb
movs
sahf
sub
or
inc
ins
jmp
dec
sub
sbb
or
push
outs
lahf
adc
sbb
call
xchg
adc
mov
jl
ins
cmp
sub
adc
xchg
or
enter
mov
and
xchg
ins
add
addr16
mov
push
adc
and
icebp
scas
add
sti
repz
or
sub
loopne
shl
es
stos
or
test
shl
retf
(bad)
xor
jg
mov
repnz
fsub
rcl
ins
xor
test
daa
popf
lock
mov
push
sahf
pop
sub
hlt
dec
push
(bad)
enter
sub
mov
inc
loop
ret
xor
add
mov
rol
mov
daa
sub
pop
repnz
cli
(bad)
sub
mov
mov
test
jnp
jmp
xchg
stos
dec
pop
fadd
adc
mov
cmp
jae
mov
cmp
xor
cmp
cmps
adc
lds
dec
and
cli
add
or
mov
add
pop
mov
int3
xchg
and
ins
inc
push
scas
pop
es
cdq
shl
mov
(bad)
aad
clc
pop
jmp
fstp
mov
push
(bad)
mov
and
push
xchg
jmp
push
dec
jo
cli
sahf
or
sbb
mov
adc
test
or
mov
inc
pop
lods
xchg
pop
inc
dec
push
pushf
jne
mov
push
xor
inc
jno
mov
mov
push
sub
sahf
fistp
test
xchg
ror
inc
call
popf
cmp
fsubr
push
dec
xor
(bad)
call
ret
jnp
add
(bad)
fldcw
addr16
je
and
ss
and
test
loop
out
add
cdq
mov
sub
or
fnstcw
add
sbb
loop
mov
pop
dec
dec
pop
and
push
sbb
xor
out
cmps
xchg
add
sbb
and
add
sbb
(bad)
push
xlat
pop
neg
xor
sbb
inc
call
out
pop
dec
std
js
rcl
dec
shl
imul
sub
sbb
fbld
jb
mov
mov
or
mov
sub
retf
dec
je
and
mov
rol
cmp
or
mov
mov
mov
leave
pop
inc
int3
cwde
sbb
not
or
and
cmp
jp
pop
(bad)
cmp
jno
dec
ret
cmp
sbb
scas
ds
call
xlat
ror
loopne
cwde
inc
out
dec
mov
(bad)
jae
clc
(bad)
sbb
cmps
clc
xlat
js
jl
push
es
sub
sbb
xchg
stos
mov
dec
rol
sbb
xlat
dec
jb
scas
jns
cmps
repz
ja
rcr
sub
pop
addr16
stc
loopne
xchg
or
inc
push
test
cmp
popf
das
xor
add
mov
jmp
imul
popf
test
das
jp
pop
pushf
jl
das
data16
and
rol
fninit
shr
mov
inc
or
jg
je
adc
pop
es
loopne
in
bound
cmp
bound
adc
or
or
repz
sti
jmp
mov
xlat
fbstp
lods
pop
ror
push
mov
in
inc
jns
dec
stos
sbb
aaa
fbld
xor
push
cwde
xor
jge
jae
pop
(bad)
xor
push
neg
pushf
mov
sub
lods
ror
retf
push
nop
xor
push
mov
ret
mov
or
jle
and
jecxz
pop
clc
ins
or
sub
cmps
cmp
les
adc
xchg
cmp
sahf
int
(bad)
sub
mov
and
fsub
adc
or
lds
lahf
and
dec
movs
mov
jns
sahf
cmp
jmp
imul
sbb
(bad)
jae
mov
sub
jl
push
mov
push
in
movupd
pop
mov
ror
jbe
icebp
cmp
mov
push
or
add
sahf
fwait
stos
jb
leave
pop
mov
shl
fdivr
imul
pop
jne
sbb
pop
arpl
frstor
loope
lods
hlt
popa
adc
in
out
and
add
dec
inc
sub
sahf
push
cmp
lods
dec
jns
fld
(bad)
jo
and
cwde
xchg
mov
mov
and
mov
adc
jbe
nop
jmp
in
mov
leave
(bad)
ds
in
out
fmul
(bad)
fcom
mov
rcr
popf
pop
mov
out
adc
not
xchg
lahf
fs
or
fistp
or
jae
and
jbe
(bad)
(bad)
les
(bad)
enter
sbb
mov
pop
repnz
or
repz
xchg
ficom
pop
loope
and
call
cmps
mov
in
cmps
lahf
cmp
dec
mov
or
sub
(bad)
sbb
push
pop
icebp
(bad)
imul
xor
inc
xchg
jge
mov
sub
sbb
dec
test
movs
arpl
jecxz
out
mov
mov
fstp
adc
bnd
cmps
shl
add
jp
sub
ror
jne
sahf
mov
add
iret
add
dec
fwait
cmc
sahf
inc
loop
dec
mov
sahf
xchg
loope
and
jle
ins
cmps
and
std
jno
into
outs
jg
sbb
jg
inc
or
pop
ins
nop
and
pop
or
nop
adc
cmps
ja
mov
adc
pop
pop
int
test
shl
loope
inc
(bad)
mov
pusha
push
push
ins
clc
test
and
inc
dec
icebp
push
or
fldenv
dec
shr
adc
je
and
aad
int3
neg
and
push
or
popa
retf
es
dec
loop
ret
mov
loopne
addr16
aas
(bad)
mov
daa
in
sbb
cmp
fmulp
dec
shl
jg
repz
jae
and
in
dec
loopne
cld
cmp
je
and
mov
int
xlat
jmp
fisttp
and
mov
sub
and
jmp
ret
or
jns
shl
xor
test
inc
lock
js
aaa
outs
push
retf
mov
cdq
scas
dec
les
add
cmp
mov
mov
int
out
push
fdivr
add
mov
out
in
leave
dec
push
xchg
stc
and
mov
mov
pop
(bad)
jnp
mov
mov
arpl
into
dec
sahf
and
mov
retf
add
mov
jmp
mov
push
nop
js
pop
(bad)
dec
repz
mov
cmp
iret
cmp
aam
or
sub
pusha
inc
mov
sahf
cld
(bad)
cmp
(bad)
jae
inc
jae
lods
cli
mov
js
mov
push
stc
jmp
inc
push
xchg
jae
ins
cmp
aad
inc
add
sbb
mov
add
add
mov
out
sub
cmp
xchg
(bad)
add
push
and
mov
sahf
mov
mov
fs
cwde
mov
in
push
push
pop
cmc
cmp
add
sbb
fldcw
push
es
les
es
ins
pop
jle
pop
imul
(bad)
add
cmp
loop
mov
nop
jb
ficomp
nop
and
and
push
xchg
cmp
(bad)
dec
push
ss
mov
jge
or
xor
fmul
test
sub
or
mov
loope
mov
sub
xchg
mov
mov
clc
push
lea
or
pop
mov
cmp
mov
out
xchg
inc
xor
sbb
gs
mov
nop
push
out
pusha
pop
pop
push
ins
dec
ins
outs
jmp
ss
stc
add
and
movs
mov
and
sar
arpl
imul
add
sar
neg
xchg
mov
stos
or
mov
loop
xchg
popa
add
inc
push
stos
mov
std
jne
push
retf
dec
adc
pop
dec
cmp
and
cmc
pop
push
fiadd
dec
mov
fimul
mov
in
mov
cmp
clc
repz
pusha
jmp
mov
retf
and
sbb
scas
adc
add
sbb
jno
cmc
sbb
dec
and
in
ret
pop
aas
inc
push
jo
push
mov
mov
clc
adc
aas
adc
(bad)
push
shl
adc
test
nop
in
(bad)
rol
jle
push
mov
pop
mov
call
lds
cmp
fimul
std
mov
fcom
int
fcmovnu
call
int
inc
enter
ret
movups
rol
xchg
bound
loop
jne
add
(bad)
sub
xor
jp
cwde
(bad)
(bad)
and
mov
sahf
adc
pusha
jecxz
cmp
clc
cwde
jmp
pop
push
mov
or
(bad)
in
dec
mov
sub
jl
loop
mov
ds
jbe
in
dec
pop
jno
xchg
in
scas
or
es
and
jl
in
xchg
cld
dec
retf
(bad)
(bad)
je
ret
loopne
xchg
fwait
dec
dec
dec
jge
cmp
push
sbb
jne
test
gs
cmps
std
jae
test
cmp
rcl
jbe
jnp
(bad)
pushf
mov
jl
and
mov
jge
lea
add
mov
inc
je
pop
and
fs
shr
call
mov
or
or
add
(bad)
(bad)
jl
adc
mov
add
cmp
and
repz
or
push
bound
jmp
jle
call
pop
sbb
rcr
sahf
jg
test
and
shr
push
jbe
fldenv
mov
data16
push
cmp
sub
icebp
inc
ror
push
mov
in
xor
cdq
mov
js
shr
es
fdiv
ds
pop
sbb
jno
or
mov
stc
mov
(bad)
pop
cs
(bad)
ficom
fmulp
sbb
in
sbb
pop
test
sub
cmp
ss
aaa
aam
repnz
stos
mov
cli
pop
mov
adc
cmps
xchg
in
push
cmp
call
jbe
pop
stos
nop
jb
push
stc
lahf
aad
popf
adc
mov
dec
test
sbb
push
mov
(bad)
test
dec
mov
jecxz
mov
add
inc
mul
out
mov
inc
jbe
adc
xor
xor
pop
pop
cli
sub
push
ror
(bad)
or
retf
push
test
push
pop
ja
mov
jge
je
or
sub
or
jg
or
push
out
jle
arpl
push
cwde
stc
(bad)
dec
out
xchg
imul
clc
test
out
dec
mov
lods
ds
or
pop
(bad)
jo
pop
dec
mov
retf
popf
out
(bad)
xor
cmps
div
mov
stc
imul
loope
mov
jbe
sub
jl
sub
sbb
cld
fld
push
mov
mov
loope
imul
xchg
mov
jmp
addr16
sar
hlt
mov
adc
cld
xlat
adc
cmp
mov
(bad)
into
pop
xlat
lods
movs
xor
(bad)
jp
rol
repz
jmp
ss
(bad)
cmp
dec
shl
lods
ja
add
ss
ins
fcmovb
or
xchg
loopne
mov
stc
loope
rcl
fstp
test
xchg
jns
int3
mov
xor
dec
in
aaa
push
mov
aas
inc
pop
mov
cmp
into
adc
or
scas
adc
clc
push
mov
push
jae
sbb
jae
pop
inc
ds
(bad)
mov
mov
repz
aam
repz
leave
sub
dec
in
scas
retf
mov
mov
push
aas
scas
movs
lods
jg
inc
mov
dec
rcl
mov
inc
xchg
mov
(bad)
cs
xchg
arpl
aad
clc
inc
sub
sti
rol
pop
sub
push
popa
dec
daa
in
loopne
int
pop
xchg
loop
cmp
aaa
mov
pushf
(bad)
push
pop
pop
mov
add
lods
aad
push
xlat
hlt
mov
push
jmp
neg
gs
movs
mov
add
outs
push
xchg
and
xchg
jle
jne
add
adc
shr
add
mov
sbb
lods
mov
mov
jno
cmps
pop
out
ins
(bad)
das
ret
(bad)
std
ror
or
outs
cmp
ins
pop
sub
pop
shl
cmc
cmp
fnstsw
xor
(bad)
enter
jno
push
neg
ins
imul
test
lods
cmps
loop
sahf
into
addr16
xchg
sub
cmps
cli
leave
movs
jne
in
ficomp
pop
rcl
mov
cwde
sti
or
aas
sbb
aam
iret
add
scas
xchg
push
add
mov
jno
popf
xor
pop
xchg
sub
sub
cmps
test
push
sahf
and
jne
out
mov
and
div
fistp
rol
lods
push
loope
jg
push
(bad)
pop
cli
popf
push
shl
pop
test
idiv
outs
dec
inc
sbb
inc
and
jmp
fnsave
jp
pop
cmp
pop
pushf
sub
add
jnp
imul
ins
xchg
sub
scas
jno
pop
inc
dec
cmp
pop
imul
es
sbb
jne
cli
xor
scas
mov
jb
and
cmp
ds
add
mov
inc
loope
jns
in
jecxz
lahf
dec
push
cmps
jmp
pushf
(bad)
mov
pop
and
js
cmp
pop
and
ret
push
push
into
push
ins
data16
imul
out
fidiv
rcl
pop
adc
and
bound
push
aas
fisub
icebp
mov
jecxz
push
inc
shl
sub
and
rcl
popf
mov
push
xchg
stos
and
mov
mov
addr16
pop
stos
fnstsw
or
aam
adc
stos
setp
rol
jns
pop
push
xchg
addr16
jl
aad
stc
in
push
inc
(bad)
mov
popa
push
mov
rcl
dec
adc
sbb
ja
sahf
mov
pushf
and
popf
jge
adc
clc
gs
mov
push
test
cmp
cmp
inc
js
push
call
jns
dec
jmp
pop
push
mov
mov
out
fidivr
adc
and
and
cdq
mov
(bad)
mov
pop
push
cmp
jmp
mov
pushf
lock
arpl
mov
stc
xchg
jnp
and
repz
sub
jg
in
mov
sbb
lea
(bad)
xor
cdq
cmp
dec
mov
out
mov
imul
sti
aas
scas
adc
mov
shr
mov
adc
scas
push
jge
(bad)
mov
popa
adc
nop
jmp
movs
add
in
cmp
icebp
stos
and
lods
retf
jmp
sbb
clc
mov
inc
jb
adc
or
lods
hlt
push
sub
(bad)
cmps
cmp
sub
int
mov
stc
push
nop
xlat
xchg
xchg
aas
cmp
fwait
inc
icebp
adc
jb
dec
outs
rcl
mov
jg
movs
retf
push
add
jmp
mov
jo
repz
(bad)
js
push
jecxz
stos
cwde
shl
les
add
imul
pop
out
lea
sub
xor
cmp
dec
adc
test
push
sahf
add
cld
mov
test
jbe
push
fist
pop
xchg
mov
xchg
and
test
add
cmps
jmp
jl
sub
mov
loop
or
mov
add
(bad)
inc
imul
mov
jmp
and
mov
into
sbb
pop
xor
test
ja
(bad)
cli
aam
pop
jecxz
sahf
in
ret
push
loop
xchg
dec
adc
in
mov
or
ret
les
lock
add
add
(bad)
jo
xchg
pop
imul
aaa
xchg
scas
(bad)
xor
dec
jno
sub
ret
mov
push
jbe
jmp
(bad)
jl
cmp
pop
and
dec
and
mov
cmps
stos
sub
repnz
imul
mov
ficomp
(bad)
and
stc
aad
mov
xor
lea
push
xor
mov
ror
push
popf
int3
loope
inc
stos
std
xor
and
xchg
iret
xchg
cs
xor
sbb
shl
icebp
outs
sti
sbb
sub
jl
int3
sub
mov
xchg
xchg
enter
dec
fstp
push
ss
imul
stos
test
add
mov
aad
dec
fistp
in
mov
lea
jp
sub
lods
pop
loopne
xchg
aas
adc
sti
add
pop
push
shl
call
out
outs
lock
dec
xor
jae
xchg
pop
jae
ins
imul
or
ss
stos
or
add
test
dec
inc
pop
cmp
push
add
jae
xor
cmp
movs
mul
pusha
cmp
inc
clc
cmp
cmc
adc
or
add
ins
stos
test
(bad)
rcr
clc
mov
add
xchg
and
xor
push
jmp
dec
cld
ret
pop
xor
lds
cmp
setle
popa
and
scas
adc
add
popf
ret
out
adc
mov
sub
test
cli
imul
arpl
not
xchg
jo
sbb
inc
std
inc
xchg
or
xchg
xor
aad
mov
xor
and
pop
div
stos
js
adc
mov
or
adc
icebp
bound
movs
jecxz
cld
mov
ins
movs
jb
lock
out
add
sar
and
sti
jne
and
push
inc
ret
push
ret
add
adc
and
mov
mov
test
jecxz
xor
cmp
fdiv
pop
adc
mov
shl
cmp
mov
lahf
in
adc
or
jae
push
sbb
push
dec
aam
adc
adc
and
jnp
jb
push
add
jbe
and
adc
xchg
adc
icebp
inc
xchg
shr
and
mov
loop
jb
cmps
retf
sbb
gs
adc
add
adc
push
jnp
mov
sbb
out
das
sbb
mov
xchg
dec
pop
mov
pop
shr
jle
data16
push
fsubr
fnstcw
sbb
outs
pop
inc
xor
jmp
xchg
test
popa
or
xor
in
outs
(bad)
mov
dec
pop
jns
dec
bound
adc
mov
push
data16
dec
bound
std
retf
xchg
mov
fiadd
dec
outs
xchg
jg
jno
xor
cmp
pop
sti
stos
es
pop
es
sub
enter
cmp
sub
test
xchg
push
pop
pop
pop
add
pop
inc
jae
sahf
and
mov
adc
sahf
cmps
xchg
les
enter
sbb
int3
fild
or
adc
xchg
dec
in
nop
fsub
lods
fldenv
fidivr
pusha
int
add
imul
or
mov
test
movs
scas
fmul
mov
pop
in
cmp
outs
ins
cs
js
xor
loopne
push
sbb
repnz
aaa
cmc
mov
xchg
fyl2xp1
pushf
test
cmp
frstor
and
and
adc
iret
push
cdq
repnz
pusha
xor
mov
(bad)
mov
sti
jb
ins
or
pop
idiv
mov
fcmovb
jmp
out
repz
add
out
(bad)
xrelease
and
sub
pop
stos
std
pop
add
cwde
jae
xor
imul
mov
rol
repnz
or
lods
mov
pop
cmp
imul
jb
or
(bad)
and
popa
out
sub
pop
sbb
int3
pop
adc
(bad)
add
das
adc
shl
sar
mov
lds
jmp
mov
jg
inc
sub
out
data16
popa
xor
test
cdq
and
mov
pop
pop
xchg
push
inc
and
mov
xchg
jo
test
jg
rcl
pop
lods
pop
movs
stos
push
push
xlat
cmp
std
mov
rcl
xchg
retf
nop
xor
mov
xor
stos
sub
sub
adc
jb
sub
xor
pushf
sub
hlt
jns
add
jne
adc
dec
sub
iret
icebp
and
lahf
outs
(bad)
imul
into
mov
inc
cmp
inc
out
mov
jmp
jge
(bad)
repz
(bad)
mov
std
addr16
adc
jns
jbe
push
push
lock
inc
mov
iret
cmp
fst
fstp
stos
(bad)
cmps
cdq
mov
dec
push
sbb
adc
repz
cmps
repnz
fidiv
or
repnz
scas
in
sub
syscall
jl
or
add
jle
pusha
stc
(bad)
or
sub
(bad)
hlt
add
sbb
fadd
mov
out
test
and
cmp
jg
dec
xor
xor
hlt
sahf
mov
mov
mov
int
scas
inc
arpl
imul
xchg
dec
dec
jmp
sahf
int3
(bad)
cmp
sub
pop
repnz
das
mov
push
loope
out
in
xor
fdivr
jb
(bad)
stos
cs
jno
leave
pop
adc
push
inc
jns
repz
sbb
imul
jnp
ret
loopne
pop
ret
mov
in
fild
je
icebp
xchg
ret
mov
mov
psrad
popf
dec
mov
sahf
dec
adc
adc
pop
inc
outs
std
(bad)
push
in
shl
cmp
aam
sub
inc
repnz
daa
out
(bad)
loopne
sbb
je
cld
lock
xchg
dec
ds
jmp
pop
pop
loop
xor
popa
lods
rol
out
xor
and
int3
pop
or
mov
sub
sub
mov
and
jno
outs
aam
das
xor
clc
stc
push
faddp
and
hlt
icebp
or
lock
les
cld
sub
and
push
adc
es
imul
aaa
inc
ins
mov
pop
les
stc
popa
std
push
call
sbb
shl
(bad)
fbstp
scas
jle
sub
sbb
fdivr
sub
mov
and
dec
enter
add
daa
pop
cmps
and
jmp
int3
lods
pushf
je
cli
lods
mov
rol
pop
sbb
mov
call
or
popf
pop
clc
fisubr
jl
in
pusha
pop
xor
jns
jne
inc
dec
jge
sub
xor
inc
je
adc
inc
mov
and
scas
(bad)
mov
dec
cli
es
push
add
mov
iret
cs
lahf
ss
mov
cmp
addr16
dec
shl
mov
inc
or
pop
movs
mov
je
(bad)
popa
jmp
sbb
push
in
jne
jno
popf
push
rcl
sbb
aas
fs
rol
or
xor
jne
dec
nop
or
dec
push
dec
add
pop
retf
inc
ds
xchg
ins
pop
jb
ins
outs
ror
or
bound
xchg
clc
movs
in
cmp
imul
psllq
jo
inc
mov
xor
jl
fs
sbb
fsub
popf
ja
mov
adc
in
push
mov
inc
pop
lds
into
stos
pop
mov
pop
mov
test
imul
sbb
dec
fmul
jl
sub
xor
mov
rol
std
out
aam
push
aad
call
idiv
xchg
stos
push
cdq
dec
xor
pop
loop
pop
ds
test
ins
jb
retf
adc
test
mov
mov
inc
mov
or
clc
lods
in
bound
inc
mov
inc
cli
sbb
mov
push
mov
sbb
sbb
cmps
(bad)
jmp
lea
addr16
arpl
push
mov
leave
push
push
in
adc
push
scas
jmp
adc
(bad)
cld
cmp
mov
in
lea
ins
aam
push
and
retf
jecxz
cmp
enter
xor
rcl
mov
in
sub
adc
push
xchg
jae
dec
mov
sub
and
inc
vmread
jne
sub
and
out
lock
ret
pusha
out
pushf
sbb
out
sub
adc
xchg
sub
push
iret
mov
jae
jmp
xchg
inc
imul
sahf
loop
xchg
xlat
repnz
je
stc
add
mov
shl
push
int
movs
dec
repz
gs
fnstcw
cs
retf
push
shl
lock
mov
add
rcr
enter
popa
ins
dec
fisub
xor
aad
enter
jl
cmc
mov
stos
clc
or
pop
xchg
sbb
pop
pop
add
or
lods
lods
cmp
push
ror
ja
test
jbe
inc
dec
sub
dec
dec
arpl
push
fist
push
xor
cmp
cmp
(bad)
add
(bad)
daa
add
mov
cmps
sbb
outs
neg
jae
inc
rcr
pop
inc
dec
out
inc
sbb
cdq
xchg
mov
xor
cdq
xor
mov
loope
ins
sahf
dec
sub
sbb
xchg
mov
pop
div
movs
inc
nop
mov
jbe
call
sahf
or
loopne
inc
jb
mov
mov
dec
push
inc
push
mov
shr
pop
dec
mov
mov
pop
sbb
xor
nop
mov
aad
(bad)
fbstp
cmps
arpl
cmc
cmps
or
mov
xchg
call
(bad)
in
minps
mov
pop
test
mov
dec
(bad)
es
jnp
inc
jge
mov
xchg
icebp
mov
daa
ds
mov
arpl
xor
push
dec
movs
sub
mov
pop
mov
fcomip
in
inc
cmp
xchg
mov
imul
xchg
les
jns
fnstenv
ror
test
adc
enter
jo
es
push
or
and
jecxz
lock
call
push
stc
(bad)
shl
jmp
pop
push
jns
adc
(bad)
outs
push
sub
adc
xor
mov
inc
sbb
inc
repz
push
jae
and
and
pop
push
stc
jns
aad
ret
adc
cmps
adc
jmp
cli
jmp
xor
fadd
jge
pop
sbb
leave
dec
xchg
xor
sub
ret
ins
and
sahf
push
dec
push
dec
inc
sbb
cld
inc
(bad)
loopne
xor
ja
je
aas
xchg
fs
mov
fild
sbb
adc
xor
inc
inc
leave
sbb
mov
mov
sti
sub
jle
dec
or
jl
stos
mov
pop
inc
test
push
push
jo
xchg
xor
retf
(bad)
out
and
inc
gs
retf
leave
mov
jl
mov
push
(bad)
adc
cdq
lods
(bad)
pop
lea
scas
mov
mov
iret
dec
cmp
movs
mov
ja
(bad)
loope
mov
add
push
arpl
lock
dec
cmp
out
sub
pop
iret
call
add
stc
xchg
pop
adc
shl
(bad)
push
push
adc
push
icebp
imul
mov
mov
fs
xchg
lods
cmps
push
stos
add
neg
and
or
jno
sbb
hlt
rcl
jecxz
aad
loop
idiv
or
cmp
xchg
jg
movs
push
movs
pop
test
iret
ret
xchg
addr16
pop
xor
not
dec
fidiv
push
xchg
mov
sub
loopne
mov
cmp
lods
sub
mov
in
mov
or
imul
rcl
adc
sbb
jb
xchg
jne
stos
push
mov
mov
lds
rol
xor
fdivrp
pop
dec
xchg
push
les
iret
and
inc
lods
xchg
pop
movs
dec
clc
inc
retf
lods
cmp
and
shl
adc
push
call
xor
(bad)
mov
mov
dec
aaa
mov
or
das
inc
jecxz
cmp
aas
pushf
pop
leave
and
out
and
es
sar
mov
(bad)
fadd
mov
cs
movs
fisttp
in
mov
es
loopne
pushf
xchg
mov
aas
lods
xor
std
xchg
aam
ss
mov
cmp
ret
inc
pop
adc
test
pop
nop
out
jmp
jge
in
jns
lahf
bound
dec
lahf
add
push
inc
shr
jecxz
xchg
into
pusha
jnp
aaa
mov
dec
fstp
inc
add
sbb
or
movs
ss
scas
ret
(bad)
mov
cmp
lods
or
jl
cmc
dec
push
jge
lods
xchg
mov
enter
outs
adc
loopne
push
lds
and
pop
inc
lahf
xlat
aad
popf
imul
mul
faddp
xlat
imul
xor
mov
fwait
adc
pushfw
sub
out
in
mov
aam
xchg
sbb
int3
mov
push
cmp
and
jae
xchg
adc
xchg
push
jnp
(bad)
mov
and
popa
adc
loop
aas
(bad)
imul
cwde
retf
push
jbe
cmp
cwde
jbe
rcr
ins
push
pop
xchg
cld
mov
(bad)
call
xor
cmps
loopne
push
les
add
mov
int3
xchg
jp
repnz
mov
ret
xchg
sub
pop
mov
fs
lds
xchg
clc
hlt
daa
pushf
or
xlat
leave
lds
hlt
mov
call
inc
int3
fadd
adc
add
(bad)
loop
sbb
out
retf
lds
ins
mov
stc
adc
fbld
dec
cmp
add
add
pop
fidivr
or
pop
pop
js
std
push
mov
and
mov
(bad)
std
mov
adc
inc
in
pop
or
or
shl
mov
pop
movs
shr
xchg
into
nop
je
fnstcw
cli
xor
loop
push
popf
or
mov
out
in
push
cmp
cli
dec
pop
movs
int
mov
dec
pop
in
(bad)
inc
pop
in
xor
mov
push
int
jbe
sub
mov
add
or
sbb
jl
lods
pop
pop
add
shl
mov
fld
and
add
out
sahf
jae
loopne
inc
(bad)
mov
pop
(bad)
add
cld
js
push
cmp
cmps
mov
pusha
js
stc
data16
dec
mov
push
inc
dec
in
aas
xchg
jmp
mov
inc
sbb
push
add
and
movs
dec
popf
pop
pop
cld
xor
or
in
dec
mov
(bad)
fwait
push
adc
call
scas
xlat
xchg
ret
ins
push
xor
mov
adc
xor
dec
mov
push
cmp
push
js
jmp
inc
xor
inc
xor
xchg
fld
out
(bad)
test
mov
out
jb
movs
mov
fwait
add
ds
xchg
inc
(bad)
xchg
cmp
cmc
add
pop
or
lea
and
jecxz
or
call
test
adc
dec
out
repz
outs
outs
pop
dec
jmp
pop
loop
adc
aaa
sbb
cmp
stc
cmp
add
aaa
add
jecxz
aam
imul
rcl
loop
imul
push
sahf
inc
out
sbb
mov
push
sbb
inc
inc
push
gs
sbb
add
cmp
xchg
jecxz
out
add
xchg
jnp
neg
inc
rol
cmp
int
adc
mov
dec
rcr
retf
pushf
xchg
xchg
test
(bad)
jl
mov
lock
jno
rcl
add
and
call
fnstenv
push
xor
retf
fist
test
lahf
xchg
pop
cmp
mov
inc
stos
lds
mov
and
pushf
pop
xor
ror
in
jbe
mov
xor
sbb
xchg
adc
test
jmp
add
pop
pop
pushf
call
(bad)
int
out
mov
jmp
adc
dec
and
xchg
lods
xchg
mov
stos
in
xor
and
repz
mov
mov
adc
adc
mov
push
ret
add
imul
ret
shl
push
es
jle
mov
fild
adc
cld
das
(bad)
test
push
xchg
daa
mov
jl
loope
inc
xchg
je
loop
add
xor
jmp
les
jb
outs
in
dec
neg
(bad)
lahf
int3
inc
xchg
add
mov
or
jle
pop
inc
and
(bad)
mov
std
cmps
scas
sub
mov
(bad)
into
ficom
jl
aas
inc
mov
fcomp
ja
neg
retf
out
pusha
aas
adc
or
xchg
leave
xor
pop
fs
cmp
(bad)
out
xchg
mov
rcr
ret
xchg
aaa
sti
in
xor
adc
or
addr16
cmp
addr16
jo
push
cwde
(bad)
scas
jnp
bound
fs
and
adc
push
push
dec
add
xchg
xchg
je
div
mov
in
inc
scas
mov
mov
out
cmp
sub
push
enter
dec
pop
rcl
push
xchg
(bad)
arpl
mov
inc
push
push
les
sbb
add
mov
push
jns
and
sub
das
stos
hlt
inc
in
into
ins
add
rcl
(bad)
aam
iret
mov
jbe
lods
(bad)
pop
fwait
cmps
cmp
jecxz
pushf
cmc
pusha
mov
mov
shr
retf
or
movs
movs
dec
inc
movsx
lahf
mov
mov
icebp
jne
enter
in
arpl
mov
popf
and
arpl
push
or
ror
clc
add
jg
add
push
js
or
sbb
mov
jmp
add
mov
mov
lods
call
rcr
mov
fisub
mov
les
inc
mov
jo
push
out
ins
sbb
push
mov
xor
repz
pushf
jmp
push
dec
jg
pop
(bad)
leave
or
pop
jp
pushf
mov
das
ror
shl
xor
scas
jmp
sahf
mov
add
popa
adc
or
xor
pop
aam
add
adc
xchg
and
arpl
jge
mov
into
hlt
push
sbb
in
es
pop
nop
jge
mov
push
xchg
maskmovq
imul
push
push
mov
test
add
inc
fisubr
pop
(bad)
shr
popa
cmps
cmp
call
enter
jecxz
push
inc
or
jg
jnp
test
aam
test
cmp
jne
mov
and
(bad)
xor
out
or
cli
(bad)
mov
movs
xchg
icebp
loopne
xchg
adc
xchg
in
loop
jne
lea
xchg
inc
push
test
(bad)
out
retf
repnz
gs
mov
or
xchg
mov
add
(bad)
jge
adc
imul
icebp
xchg
ins
jge
(bad)
shr
rol
xor
push
sub
pop
je
mov
dec
mov
cdq
add
push
adc
clc
popf
cmps
mov
clc
int
sub
inc
pop
test
jbe
int3
fst
jl
push
gs
arpl
mov
adc
cld
aam
sub
adc
aaa
jno
mov
(bad)
enter
fs
jae
inc
mov
pop
inc
xchg
dec
xchg
pop
dec
inc
pop
stos
(bad)
pop
test
xchg
repz
in
pop
or
fld
dec
mov
inc
pushf
pop
and
inc
adc
aad
xor
jb
xor
sbb
imul
mov
aaa
xor
mov
sbb
xlat
scas
mov
cld
call
cmp
xchg
add
cwde
lahf
add
and
xchg
daa
jl
fnstsw
add
dec
fisub
cmp
sub
mov
outs
cmc
xor
xchg
add
or
pop
(bad)
sbb
(bad)
cmp
(bad)
test
repnz
stos
in
popw
out
imul
fsubr
imul
dec
mov
and
popa
xchg
sbb
out
cmp
fwait
push
push
pop
test
jns
adc
data16
mov
iret
fdivr
mov
idiv
xor
mov
add
test
push
ret
jg
and
mov
rol
xchg
out
outs
xchg
add
cdq
in
mov
loopne
cmp
cmp
sub
push
test
xchg
vandnps
dec
jae
cmp
jnp
inc
push
popa
sbb
fadd
push
sub
push
test
jns
fisttp
popf
lds
mov
(bad)
retf
in
push
(bad)
loopne
es
pop
cdq
add
mov
xchg
test
fcom
fldcw
inc
mov
out
iret
sub
mov
push
repz
das
shr
shl
aad
ss
or
xchg
push
int3
xchg
push
sahf
shr
loope
inc
mov
aas
jno
sti
jbe
clc
scas
into
inc
cmps
or
pusha
xchg
inc
cmp
div
mov
mov
and
adc
retf
cmc
jl
dec
cld
add
pushf
stc
inc
faddp
into
jecxz
adc
test
test
add
cmp
outs
add
idiv
scas
pop
sbb
outs
sbb
mov
(bad)
call
sbb
mov
movd
rcr
test
mov
mov
(bad)
in
sbb
dec
sbb
loope
and
cdq
in
jmp
pushf
xor
mov
cmp
and
scas
in
sti
pusha
jle
lods
std
mov
imul
sbb
pop
pop
pusha
or
sbb
rcr
or
add
into
mov
ds
aaa
lock
inc
mov
add
bound
pusha
xor
jp
pop
xor
jbe
xchg
jge
test
jmp
sub
push
dec
rol
jle
jae
lea
lods
mov
in
jb
mov
mov
(bad)
arpl
(bad)
(bad)
out
repz
cmp
aam
jl
(bad)
int3
push
add
push
mov
jae
adc
and
loopne
ret
call
pop
sub
mov
xchg
lods
test
xchg
pusha
cmps
mov
pop
adc
les
popa
xchg
inc
mov
xchg
jo
es
mov
dec
mov
mov
hlt
xchg
sub
(bad)
sar
jecxz
out
add
inc
(bad)
rcl
jmp
xchg
xor
or
inc
push
dec
and
xor
pop
lods
push
shl
cmp
outs
sar
push
retf
out
out
cld
mov
sbb
or
jg
pop
(bad)
fucom
add
pop
scas
(bad)
movs
or
sub
iret
add
scas
dec
or
bound
xor
jle
ret
(bad)
ins
add
cmps
aas
int3
(bad)
xlat
dec
push
adc
pop
mov
in
cld
cmp
mov
xchg
cmp
lods
jecxz
push
adc
dec
mov
mov
stc
sbb
push
cwde
ins
and
in
pop
fwait
dec
or
cmps
int
cdq
ja
and
jl
enter
push
inc
xchg
ror
in
xlat
sbb
adc
dec
hlt
mov
sti
out
fsub
pop
mov
mov
repz
repz
jle
sahf
test
jp
es
pop
cdq
push
add
xchg
mov
xchg
int
jae
scas
sar
frndint
stos
fisubr
ins
push
imul
arpl
pop
mov
and
sti
cmp
mov
js
shl
shr
inc
jbe
dec
sub
inc
xchg
dec
mov
sub
dec
movs
cli
ja
push
movs
and
jl
scas
sub
ins
push
fiadd
movs
sti
cmps
mov
xor
mov
sahf
in
out
adc
dec
mov
stos
mov
sti
(bad)
ins
ret
and
imul
mov
sahf
jnp
push
mov
mov
jl
dec
mov
mov
(bad)
out
loop
or
add
shr
sbb
mov
add
push
jge
and
idiv
out
imul
jl
int3
inc
leave
pop
and
(bad)
and
push
mov
add
out
lods
cmc
cmp
sbb
mov
sbb
jle
xor
div
outs
aas
stos
sbb
ficomp
jg
std
sbb
jecxz
cmp
out
xchg
ins
sub
ss
pusha
add
pop
in
cmp
dec
jae
pop
call
stos
cmp
int3
xor
test
or
and
jg
xchg
mov
je
push
push
push
pop
push
je
xchg
pop
pop
inc
mov
retf
inc
inc
stos
sub
or
push
xor
jmp
cmp
jle
cs
or
retf
stos
xor
sbb
adc
mov
shl
aaa
cmp
adc
(bad)
mov
shr
test
test
add
push
and
jmp
push
out
push
sub
aaa
lods
addr16
hlt
imul
out
push
fisub
(bad)
cmps
pop
ds
jmp
aad
retf
(bad)
jecxz
cwde
cmps
sbb
push
sub
jge
icebp
and
adc
cmp
cmp
mov
push
add
mov
xor
les
jg
push
inc
mov
pop
(bad)
stos
jle
(bad)
pusha
sub
daa
xor
sub
inc
pop
inc
jns
std
bound
into
mov
push
mov
stos
int
scas
scas
(bad)
outs
mov
mov
fdiv
xchg
cwde
in
xchg
repz
neg
ins
leave
icebp
adc
frstor
stos
in
sub
cs
in
xchg
sbb
inc
movs
aam
scas
or
cmp
or
(bad)
dec
repz
popa
xchg
jo
retf
jb
adc
sbb
in
mov
ja
mov
das
sbb
sub
mov
mov
lock
aad
cmp
aaa
inc
pop
mov
sbb
fdivr
inc
popa
ret
push
(bad)
scas
xor
scas
xor
imul
test
adc
out
and
ss
stos
xlat
mov
mov
es
lds
test
mov
stos
xchg
outs
pop
scas
mov
xor
mov
pop
jb
jb
mov
test
mov
add
(bad)
adc
jbe
sbb
add
in
pop
and
(bad)
pop
shl
mov
or
test
fcomp
and
jge
repz
leave
xor
fcmovbe
add
out
lahf
(bad)
out
push
in
inc
out
pop
cmp
mov
rol
nop
sub
movs
retf
cmps
test
(bad)
std
dec
outs
and
stos
(bad)
dec
or
push
mov
stos
mov
mov
cmc
xchg
icebp
fistp
sbb
sbb
out
sbb
daa
ficom
inc
jb
out
popa
fcmove
adc
push
ss
pop
mov
cdq
ins
(bad)
fwait
mov
pop
add
outs
mov
inc
cmps
psadbw
push
inc
lods
push
cmps
call
sbb
adc
frstor
inc
in
or
repz
into
daa
xchg
inc
jae
fsubr
mov
stc
jmp
popf
int
inc
sar
push
rcl
xchg
(bad)
movs
pushf
mov
pop
mov
mov
ins
mov
sbb
scas
mov
(bad)
int
jo
idiv
xchg
out
and
xor
test
jb
bound
sbb
cwde
test
xchg
pop
mov
jecxz
jbe
dec
jle
ins
sub
mov
cmp
movs
stos
pop
fimul
xor
pop
push
mov
in
cmp
sub
sbb
mov
or
lock
stc
fcmovnu
and
out
hlt
std
retf
mov
je
(bad)
fwait
icebp
jae
pop
imul
rcr
mov
movs
add
daa
xchg
xor
and
sti
dec
mov
lds
ins
inc
lock
into
pop
push
mov
fimul
int3
(bad)
call
inc
jmp
xchg
mov
push
sub
lock
cmc
xor
rcr
push
repz
xchg
(bad)
gs
and
icebp
retf
loope
fwait
aad
lahf
mov
mov
rcr
cmp
call
dec
mov
adc
(bad)
fistp
push
and
daa
dec
mov
data16
out
xor
js
xchg
sbb
sti
and
imul
xchg
inc
stos
scas
mov
sub
fdivr
cmp
out
in
jb
iret
jmp
imul
call
mov
fcomp
ret
jb
jecxz
ret
nop
aad
mov
icebp
test
mov
std
mov
lea
sti
cmc
push
in
push
ins
jecxz
add
push
jns
ja
mov
jns
push
mov
cli
jns
ss
and
out
outs
xchg
loopne
mov
cmps
pop
and
lods
inc
and
dec
dec
mov
dec
push
(bad)
aam
fimul
(bad)
loope
imul
mov
mov
ror
jge
mov
adc
sbb
fdivp
repnz
popf
loopne
bound
fimul
cmp
pushf
or
sbb
out
(bad)
lods
adc
mov
imul
fisubr
psubusb
rcl
and
mov
test
stos
in
inc
aam
(bad)
stc
sbb
inc
jle
sahf
sub
test
pop
fldl2e
fbstp
dec
mov
sbb
inc
xchg
ja
fsub
aad
les
fwait
pop
clc
test
outs
clc
into
ss
inc
xchg
retf
or
into
push
fdiv
fsubp
sub
xor
(bad)
retf
xor
pop
pop
int3
mov
pop
mov
in
aaa
pop
mov
jecxz
cdq
jmp
aam
push
fidivr
mov
ds
xchg
ja
lods
dec
mov
and
popa
test
(bad)
out
mov
adc
mov
adc
jmp
outs
mov
cli
pop
in
sbb
cmps
dec
clc
push
dec
fadd
mov
sub
out
out
adc
and
mov
aas
ja
ret
pusha
cmp
add
faddp
mov
loope
int3
cmp
es
xchg
mov
pop
jmp
das
sbb
cmp
mov
popf
mov
mov
mov
xchg
jl
imul
push
xchg
lds
push
loopne
and
push
(bad)
idiv
mov
imul
push
sbb
push
xchg
xchg
mov
in
les
ins
mov
pop
sub
jmp
fdiv
push
mov
out
xor
sub
inc
pop
sub
cmps
mov
push
sar
loopne
rcl
or
jmp
push
xchg
iret
dec
or
jecxz
push
lahf
cli
pop
sti
movs
popf
sub
icebp
add
mov
mul
sbb
inc
lds
pop
mov
sub
aas
jmp
(bad)
fsubr
lds
dec
cmps
pushf
cmp
adc
in
data16
aam
retf
adc
push
scas
stc
aad
pop
aam
jae
inc
xlat
push
mov
std
pushf
out
inc
jno
daa
sbb
push
mov
mov
aam
fs
xchg
pop
add
jnp
add
push
das
xor
sub
push
cmp
adc
push
(bad)
sar
lahf
or
cld
add
imul
sar
and
dec
cmp
pop
rcl
popa
xor
movs
push
lahf
in
mov
mov
mov
fist
sbb
adc
das
repnz
das
inc
sbb
(bad)
aad
js
inc
pop
call
popa
xor
cmc
inc
cs
movs
(bad)
mov
sbb
icebp
ret
and
jnp
adc
xchg
xor
jae
xchg
loopne
call
test
rcl
int3
xlat
icebp
shl
mov
and
mov
sub
pop
test
cmp
pop
mov
je
pop
aas
xor
fwait
scas
shl
pushf
dec
jg
jo
clc
fucom
iret
jne
pushf
pop
test
dec
inc
stos
cmp
cmc
pop
dec
pop
mov
mov
inc
(bad)
cdq
(bad)
mov
popa
mov
into
fdivr
dec
cmc
lock
jle
ds
mov
mov
cmp
stc
fadd
repz
ret
pop
pop
pop
outs
xchg
jnp
push
addr16
daa
mov
test
retf
mov
scas
int3
xchg
fstp
pop
lods
mov
setg
(bad)
in
push
add
dec
pusha
popa
imul
xchg
call
rcl
ds
and
pusha
adc
push
jle
and
mov
jl
xchg
stos
mov
cmp
shr
or
das
mov
rol
outs
mov
sub
in
sahf
add
mov
int
retf
leave
push
mov
cwde
aam
pop
nop
pop
out
es
mov
(bad)
or
sub
ror
sub
mov
shr
pop
push
icebp
fidiv
mov
jg
lods
push
(bad)
xchg
hlt
in
inc
pop
push
or
dec
cmps
add
or
mov
test
repz
sub
aas
rol
hlt
jns
push
sbb
ins
loopne
add
cmps
out
and
nop
rcl
sbb
ja
gs
mov
fsubr
mov
mov
and
mov
and
or
adc
(bad)
cli
mov
cmp
xchg
adc
add
nop
jno
dec
cli
dec
call
mov
xchg
push
pop
jne
mov
les
cmp
inc
mov
sbb
inc
fidiv
adc
mov
push
or
retf
aad
push
out
ja
jbe
lods
pop
retf
jl
jo
push
mov
aas
ins
jae
call
ins
cmp
hlt
inc
ins
and
jmp
push
sbb
popa
mov
xchg
jle
cmc
add
xchg
rol
inc
xor
ffreep
in
in
movs
add
sbb
shl
jno
mov
push
in
mov
mov
pusha
inc
mov
movs
jmp
not
pop
xor
(bad)
cmp
in
movs
ins
adc
jno
mov
repz
adc
fisub
les
pushf
push
jne
iret
xchg
aaa
fcom
and
jmp
popa
push
sbb
stc
adc
push
adc
dec
das
pop
iret
imul
mov
mov
xchg
add
jmp
popa
jnp
push
leave
pop
xchg
idiv
mov
mov
test
mov
fwait
add
div
or
lock
ins
add
movs
(bad)
loope
dec
jmp
adc
xchg
sbb
sbb
add
jle
in
imul
test
jmp
mov
xchg
lock
jl
jae
test
or
sub
xor
add
fisubr
mov
int
xchg
lahf
retf
jns
cmps
imul
jmp
and
js
arpl
jecxz
cmps
ss
jno
or
in
cmps
adc
rol
jmp
cli
inc
out
inc
repz
daa
jmp
and
jnp
loopne
gs
imul
retf
pusha
ss
sbb
adc
xchg
cmc
mov
sbb
clc
inc
mov
add
mov
data16
inc
bound
stc
cdq
packuswb
add
dec
pop
inc
mov
es
mov
pop
test
pusha
aad
imul
mov
push
in
retf
(bad)
bound
xor
test
ror
in
scas
in
scas
mov
out
xor
mov
pop
lock
es
mov
mov
sub
mov
dec
add
pop
sbb
xchg
cmc
inc
aas
out
out
bound
lock
clc
loop
scas
test
jmp
cs
(bad)
or
sbb
dec
mov
pop
ud1
scas
mov
pop
ret
(bad)
adc
mov
outs
jg
adc
jb
pusha
out
mov
popa
cld
inc
push
jns
jge
out
jge
mov
dec
or
sub
inc
lods
cmc
div
int3
ins
ror
popf
aad
not
add
mov
dec
mov
dec
neg
aam
fbstp
cmp
stc
jno
(bad)
xchg
(bad)
jge
js
sbb
push
cmc
jbe
jg
add
stos
pusha
and
sub
fist
(bad)
adc
push
out
sbb
lahf
ret
daa
ds
xchg
xchg
stc
jl
sub
mov
xor
int3
retf
repz
sbb
loope
in
iret
push
repz
jae
cmp
(bad)
add
ja
adc
outs
jecxz
test
lds
jmp
sub
rep
mov
call
push
imul
in
ror
call
cmps
push
rcr
pop
(bad)
leave
das
cmp
push
clc
cmp
rcl
push
int3
inc
cmps
fidivr
pop
and
test
out
inc
fwait
jecxz
in
les
stos
sbb
cwde
xchg
dec
fcom
les
jecxz
jecxz
xchg
fbld
or
popf
xor
repz
loop
stc
jno
outs
rol
std
push
std
jge
and
test
jnp
gs
shl
xor
sub
add
es
std
sti
stos
dec
pop
inc
and
mov
(bad)
mov
xchg
or
fld
mov
adc
ja
add
push
mov
and
shr
in
cmp
mov
mov
jmp
pop
sahf
xor
or
loope
repz
addr16
cdq
inc
and
adc
lock
sbb
out
jno
and
enter
leave
jmp
loopne
pop
jo
pop
les
push
int3
xchg
fild
aaa
imul
inc
sub
xor
stos
sub
repnz
loopne
adc
icebp
or
ret
pop
cdq
xchg
push
rol
or
cmp
push
(bad)
pop
adc
mov
mov
cmp
dec
adc
bnd
fcom
and
ins
in
arpl
call
or
sar
sub
xor
aas
stos
dec
(bad)
and
cmp
pop
cmc
outs
and
ja
shl
(bad)
(bad)
cmc
mov
mov
jbe
lock
or
fstp
push
ja
(bad)
in
add
mov
and
and
icebp
test
jg
mov
add
jbe
ret
or
sub
mov
enter
mov
int3
sahf
and
and
inc
jl
das
cmp
or
test
pop
mov
inc
loopne
mov
jb
inc
push
inc
aam
push
mov
fild
stc
iret
jge
xor
add
sahf
push
add
test
cmp
inc
sub
je
sti
inc
daa
xor
mov
test
xlat
call
jp
and
stos
mov
int3
test
pop
stc
add
gs
cmp
pushf
adc
jmp
ret
sbb
add
jl
mov
pop
call
pop
or
movs
push
sub
sub
in
or
das
xchg
(bad)
mov
mov
addr16
xchg
fist
ss
adc
sub
and
mov
(bad)
mov
xchg
add
pushf
fs
aam
xchg
adc
test
sub
retf
sub
cdq
popf
popf
bound
jecxz
inc
add
stos
aam
sahf
push
push
pop
mov
xchg
sub
stos
cmps
or
cmp
dec
je
enter
sub
(bad)
add
test
imul
push
test
daa
inc
push
xchg
repnz
push
dec
inc
xor
mov
or
cmp
xlat
and
dec
(bad)
lea
int3
inc
pop
dec
mov
lahf
test
xchg
xor
ror
jo
es
(bad)
lea
push
add
pusha
pop
push
cwde
sub
xor
ins
std
pop
mov
call
xchg
inc
cmps
xor
lds
mov
sub
shl
iret
sub
cmps
push
sub
ror
mov
test
jmp
mov
add
cli
xor
push
push
jmp
push
rcl
int3
leave
or
scas
mov
cmp
pusha
rcr
or
jne
mov
cmps
mov
das
int
lods
jae
repz
inc
test
push
icebp
ret
(bad)
fsub
jmp
imul
and
pop
inc
fcomp
push
inc
scas
push
lahf
xlat
jno
test
stos
and
jns
sub
xor
and
jmp
shl
std
jmp
movs
shl
jge
das
bound
sub
dec
pop
(bad)
imul
(bad)
inc
pop
and
movs
leave
ret
shr
shr
les
mov
push
mov
push
sbb
clc
jbe
leave
add
adc
xchg
jmp
stos
xchg
vpunpcklqdq
mov
out
mov
fcmovbe
ins
mov
mov
ret
lods
dec
ret
xor
test
fmul
adc
shl
dec
test
cwde
mov
int
aas
hlt
in
push
aam
ins
jno
movs
jbe
ret
jmp
gs
ret
fwait
out
xchg
ds
inc
test
fld
push
int3
(bad)
inc
aas
and
enter
jnp
les
outs
cmp
mov
adc
cmp
cmc
push
mov
je
add
(bad)
inc
mov
mov
ds
push
push
push
mov
pop
loopne
jmp
or
fild
inc
sub
sbb
mov
push
xchg
leave
inc
mov
das
(bad)
xor
dec
popf
sub
jmp
sbb
aam
daa
dec
xor
sbb
push
inc
enter
mov
aaa
jns
pop
mov
mov
aad
out
mov
pop
adc
push
(bad)
ror
pop
sub
and
mov
push
ror
mov
stc
sbb
push
sub
frstor
shl
jns
je
adc
mov
push
jmp
int
mov
(bad)
retf
cs
cmp
leave
dec
mov
pop
jmp
xchg
mov
movs
add
jns
in
cmp
lahf
cdq
xor
jbe
gs
pop
or
scas
mov
jge
sar
retf
xchg
pop
loope
adc
test
fptan
xchg
cmc
nop
adc
leave
add
mov
test
xchg
(bad)
push
jo
jmp
inc
adc
mov
or
(bad)
jns
jo
in
mul
out
test
js
shl
inc
dec
pop
cs
aas
aas
mov
add
ja
add
sub
adc
stc
dec
test
jo
jnp
imul
idiv
call
rcl
lods
xchg
jmp
mov
cwde
adc
and
clc
dec
fidivr
jecxz
or
loope
ret
aad
imul
dec
mov
out
cdq
push
lods
adc
jo
pusha
mov
cld
jl
mov
mov
lahf
stos
mov
mov
jmp
test
inc
inc
add
mov
sub
ret
jbe
dec
jb
mov
out
dec
xchg
outs
ins
js
rol
daa
xchg
push
inc
jmp
jle
push
cmp
sub
push
js
imul
(bad)
rcr
std
sbb
xchg
(bad)
aad
pop
and
push
lahf
daa
cmps
push
pop
ret
sbb
cmps
gs
inc
cmp
test
(bad)
popf
cdq
iret
lods
fisttp
cmp
cmc
das
rcl
inc
or
fadd
sbb
lds
or
int3
push
hlt
jp
cmp
out
xchg
mov
sub
lea
mov
test
js
out
mov
(bad)
ins
cmp
adc
jb
out
popa
movs
sbb
(bad)
cmps
adc
lock
adc
and
call
fbstp
(bad)
cmc
ret
out
ja
in
paddq
scas
call
and
inc
xchg
sbb
mov
jge
pop
and
push
mov
aas
add
cmp
cmp
push
and
popa
pop
inc
jg
mov
or
aaa
mov
test
mov
cdq
mov
jae
fild
loopne
aas
rcr
arpl
jne
jl
fisubr
sbb
jb
popa
test
cs
ret
jle
enter
mov
cmp
add
xor
push
jb
push
scas
js
jmp
es
out
call
enter
push
lahf
xchg
dec
pop
iret
or
sub
test
shl
xchg
test
stos
nop
fstp
(bad)
cmps
(bad)
cmc
scas
adc
jmp
ins
cmc
xchg
(bad)
cmps
cli
into
fwait
xor
les
cmp
les
fistp
mov
(bad)
icebp
daa
popa
popf
jb
imul
jae
std
(bad)
hlt
ror
push
icebp
lods
enter
xor
repz
lock
fnsave
cwde
mov
clc
mov
push
div
xlat
mov
mov
mov
mov
(bad)
out
jl
sub
sbb
mov
dec
jmp
(bad)
out
jae
inc
jp
mov
push
pusha
std
shl
push
js
cli
pop
mov
jno
out
jne
shr
cli
push
pop
mov
test
lods
mov
lock
lods
cmp
push
inc
push
nop
adc
mov
lock
fwait
lds
pop
fdivp
inc
inc
pop
and
cs
dec
sbb
in
rcr
inc
xchg
inc
(bad)
xchg
jne
int3
push
addr16
into
dec
lods
fs
movs
pop
in
arpl
ret
cmp
mov
mov
ins
push
push
jbe
inc
xchg
ins
push
jl
cs
mov
inc
aaa
ds
(bad)
aas
outs
adc
dec
xchg
adc
jb
(bad)
pop
(bad)
mov
mov
push
mov
or
repz
ret
xchg
or
aaa
out
enter
aaa
xchg
cmp
jecxz
inc
std
not
(bad)
(bad)
out
je
sbb
in
pop
xor
jb
xchg
popf
push
sbb
call
fsubr
ret
iret
pop
xchg
shr
xor
xchg
ret
pop
dec
stos
out
jmp
rol
jle
push
push
jle
xor
inc
adc
int
add
dec
fsub
push
push
xchg
xchg
sbb
out
jg
cld
nop
inc
pop
(bad)
rcr
aas
in
jmp
mov
push
ror
daa
or
sbb
mov
imul
cmp
push
out
dec
loope
lds
dec
jp
push
push
push
inc
sub
test
add
add
fldenv
dec
mov
mov
(bad)
and
or
ins
in
fild
mov
adc
shl
imul
and
outs
lea
(bad)
mov
mov
call
xor
mov
xor
gs
imul
xchg
jmp
sub
pop
out
cwde
fisub
test
mov
push
in
push
mov
or
push
fstp
jg
mov
and
xchg
ins
push
push
movs
cwde
out
mov
hlt
mov
inc
inc
xor
jb
idiv
dec
jg
push
or
in
aaa
mov
dec
aas
xor
xor
cmc
cwde
js
jmp
jg
mov
mov
push
or
lahf
nop
cmp
pop
and
std
hlt
fld
push
mov
lods
addr16
mov
call
sbb
ins
xor
xchg
sub
sbb
inc
pop
movs
fwait
call
and
ret
jno
xchg
lods
jecxz
and
mov
das
loopne
adc
cld
push
jl
icebp
xor
sbb
or
xor
scas
pop
pop
xchg
push
cmc
mov
test
daa
repz
xchg
jge
in
ins
mov
cmp
loopne
into
or
nop
xchg
ret
mov
ja
lea
cdq
jg
sub
fild
scas
je
push
out
adc
jecxz
fwait
xchg
push
and
pop
sbb
lahf
inc
out
test
inc
adc
lods
mov
call
(bad)
test
shr
imul
mov
xchg
jns
(bad)
test
sub
pop
cwde
add
mov
jb
popa
(bad)
fyl2xp1
mov
fisttp
mov
mov
popf
mov
and
xor
(bad)
push
outs
(bad)
call
push
mov
mov
xchg
mov
ins
jle
inc
jo
add
mov
(bad)
repnz
xchg
jl
jb
push
push
dec
inc
dec
add
rcr
xchg
in
int3
and
add
shr
pusha
mov
and
cmps
pushf
jbe
ins
stos
in
fldcw
ret
mov
jne
jmp
mov
int3
cmp
out
dec
xchg
shr
sub
leave
xor
jmp
inc
in
and
lea
test
and
test
fistp
adc
jg
pushf
cmp
mov
lahf
daa
cwde
cmp
ret
call
xchg
cmps
cmp
jb
sbb
cwde
popf
js
test
cmps
call
cld
adc
sub
nop
or
clc
imul
dec
add
and
fist
aam
mov
bnd
xchg
push
test
sbb
add
repz
cmp
(bad)
adc
call
dec
dec
mov
xlat
(bad)
in
jmp
mov
cmp
rcr
mov
xor
mov
pop
imul
dec
dec
mov
mov
(bad)
fist
fwait
add
test
movs
cmps
loopne
enter
pop
enter
pop
push
jno
or
and
add
mov
pop
sbb
stos
mov
repz
dec
push
ins
xor
inc
adc
jno
lods
stc
jecxz
cmc
out
cmc
adc
pop
mov
jae
push
adc
jle
clc
push
mov
iret
xchg
lods
lds
pop
push
jae
add
xor
fs
std
out
mov
popf
ja
std
cdq
icebp
pusha
lahf
mov
jb
cwde
movs
jb
cmp
mov
push
lock
xchg
push
or
mov
xchg
lods
enter
mov
rcl
mov
(bad)
ins
bound
(bad)
fwait
ret
fcom
sti
fisubr
sbb
enter
inc
mov
pop
sbb
xchg
in
mov
pop
enter
xchg
aaa
inc
sub
mov
lods
or
mov
rcr
in
aam
mov
ins
mov
mov
test
push
xchg
sti
pop
lahf
retf
inc
movs
pop
loopne
pop
jmp
cmp
repz
adc
aam
pusha
and
xchg
pop
in
cmp
out
cmps
cmp
imul
xchg
bound
aaa
mov
or
setge
aas
es
jg
ret
fnstenv
hlt
mov
and
lahf
jmp
mov
sub
xchg
fcmove
clc
adc
jo
shl
sahf
sbb
pushf
js
(bad)
cli
adc
int
sub
adc
xchg
sti
pusha
add
push
ins
jno
imul
mov
and
inc
call
xor
pop
push
inc
dec
dec
jae
ds
inc
bound
push
stos
adc
ins
(bad)
jno
fmul
aam
mov
mov
cmps
cmp
popa
mov
xchg
daa
dec
jge
xor
push
lds
push
pushf
add
arpl
ja
out
lock
lds
inc
mov
push
data16
rcl
mov
ds
ss
jecxz
pop
adc
test
sub
shl
aaa
daa
outs
push
cmp
(bad)
cld
jne
lahf
xor
jmp
shl
mov
mov
test
adc
btr
icebp
xchg
jmp
in
leave
xor
lahf
mov
adc
ret
or
or
popf
jns
add
push
mov
ins
push
scas
xor
mov
jbe
mov
sbb
div
fcmovu
fbld
std
mov
inc
mov
outs
and
in
into
test
cmc
ins
pusha
ins
loopne
pushf
(bad)
and
dec
mov
adc
shr
(bad)
mov
push
xor
inc
mov
and
cmp
mov
(bad)
in
sbb
xlat
push
mov
movs
mov
pop
and
stos
loope
nop
ds
add
cs
cmc
pop
add
outs
repnz
sub
mov
pop
dec
cmps
pop
ror
xchg
xchg
in
dec
fst
xchg
dec
adc
or
pop
pop
inc
ins
sub
fs
cmc
rcl
mov
popa
std
ror
aaa
add
movs
ret
lea
int3
jns
dec
(bad)
out
inc
cmc
outs
inc
jo
iret
fimul
ins
jne
push
sub
inc
dec
std
sbb
push
mov
cli
arpl
rcl
dec
sahf
and
mov
xchg
mov
and
jmp
sbb
sub
imul
cli
add
(bad)
cmc
dec
mov
mov
sub
and
lods
mov
sar
stos
sti
hlt
inc
lock
rol
pop
fcomp
(bad)
popa
jb
mov
repz
inc
lods
jl
setge
pop
and
dec
inc
loopne
imul
mov
push
add
inc
sti
lods
ins
cmp
(bad)
push
lea
int
hlt
fsubr
(bad)
push
mov
pushf
call
cld
popa
lds
or
jmp
pop
aaa
jno
ins
test
mov
std
scas
loopne
jge
cmp
out
retf
mov
pusha
(bad)
jne
sbb
rcl
mov
pop
push
cwde
mov
lock
add
add
neg
add
mov
mov
call
retf
ja
push
pop
mov
stos
mov
pushf
dec
out
push
sbb
and
mov
xor
adc
sub
test
out
sub
adc
dec
ret
imul
sub
pop
lods
push
lods
mov
mov
repz
xlat
inc
outs
dec
pushf
(bad)
push
xchg
shr
xchg
dec
and
movs
cwde
fwait
rcr
inc
je
je
pushf
je
das
repz
add
aaa
push
fwait
jmp
(bad)
enter
cmp
movs
sub
and
push
jl
ins
ja
in
mov
repnz
aam
and
lds
push
or
jecxz
outs
enter
push
xchg
mov
outs
aaa
add
jmp
sub
xchg
lods
pop
xchg
jg
jno
enter
jmp
sbb
popf
mov
add
stos
dec
mov
inc
into
gs
jo
mov
test
add
push
cmps
(bad)
pushf
sub
cmps
jmp
push
stos
dec
add
xchg
sub
mov
mov
pop
repnz
ret
adc
daa
rep
or
push
and
cmp
gs
pop
or
pop
xchg
xchg
add
mov
rol
push
xchg
cmp
(bad)
out
sbb
in
pop
xchg
test
pop
stos
push
sub
ds
push
xor
jno
mov
mov
sbb
mov
pop
xchg
or
and
sbb
hlt
test
inc
sub
dec
outs
mov
xchg
test
xchg
mov
or
pop
cmp
pusha
packsswb
or
test
cmc
push
mov
mov
xchg
vpsrld
jns
jbe
or
xor
cdq
mov
sub
xchg
sbb
mov
ins
stos
jbe
(bad)
jmp
sub
mul
outs
fiadd
(bad)
fsubr
xchg
sbb
mov
cs
cli
and
jecxz
in
jmp
adc
ret
nop
cdq
mov
js
mov
mov
cmp
pop
lods
fwait
cs
bound
fnstcw
aad
daa
lds
jae
(bad)
fsubr
shr
dec
add
cmp
pop
xchg
out
icebp
and
pop
pop
es
aas
push
dec
jbe
mov
and
adc
aad
inc
mov
fwait
fs
or
lods
xchg
xlat
dec
xchg
mov
bound
std
mov
xchg
call
ds
xor
setle
mov
dec
mov
out
add
push
xchg
mov
repz
je
jne
icebp
push
mov
call
repnz
mov
dec
sar
cmc
cmp
inc
imul
push
push
shr
lea
mov
push
xor
push
add
mov
inc
xor
or
repz
test
pop
pushf
mov
sbb
add
fisub
clc
das
stc
adc
dec
imul
push
dec
je
mov
lahf
mov
push
push
xchg
cmp
ret
lock
add
sti
jmp
jno
shr
(bad)
xor
pop
loopne
add
jmp
mov
cdq
je
in
leave
xor
daa
mov
or
cmps
jns
adc
cwde
xchg
sti
mov
hlt
or
add
aad
xchg
iret
ins
xchg
das
(bad)
fidivr
popf
pop
sbb
test
push
test
nop
test
push
sahf
jnp
aad
or
test
or
sbb
movs
xlat
push
int3
shr
inc
cmp
daa
cmp
call
sahf
mov
ins
es
xchg
push
loop
inc
sub
loop
fld
push
inc
retf
call
inc
imul
cli
mov
mov
ret
call
gs
push
imul
pushf
lock
jnp
(bad)
retf
cmc
retf
xchg
mov
cmp
sbb
sahf
lea
test
push
add
sar
sub
outs
or
push
mov
cmps
jecxz
inc
(bad)
call
jmp
jne
cmp
pop
or
and
ret
sub
inc
out
enter
mov
dec
pop
add
push
fcomp
(bad)
retf
push
and
inc
ret
cli
sbb
ficom
dec
cmp
shl
mov
add
xchg
jge
sbb
xchg
add
jmp
pop
or
(bad)
mov
pop
and
rcl
icebp
rcl
stos
cmp
pop
call
dec
test
test
imul
addr16
xchg
sub
mov
push
lods
adc
xchg
jo
xchg
or
pushf
call
cmps
cmp
jne
aaa
mov
retf
ja
sbb
mov
(bad)
out
mov
mov
bswap
imul
mov
push
shr
cmp
ror
pushf
cmp
adc
mov
and
pop
aaa
imul
addr16
pushf
rol
mov
test
outs
aaa
in
call
in
pop
dec
out
sub
push
cmps
dec
mov
hlt
cmp
push
in
les
and
imul
adc
or
ins
in
ins
inc
xchg
push
mov
or
pop
mov
cmp
ds
push
and
xchg
test
and
pop
add
call
and
rcl
imul
sub
fidivr
dec
dec
int
push
inc
(bad)
dec
pushf
dec
in
jmp
scas
or
or
jl
ret
dec
jnp
mov
mov
and
(bad)
not
sub
sbb
data16
and
jp
arpl
mov
aaa
cld
mov
(bad)
cmp
out
mov
mov
inc
and
movhps
popf
sti
inc
pop
push
out
xchg
push
jecxz
popf
or
mov
cmp
imul
test
pop
add
push
dec
xchg
jo
aas
push
jp
mov
mov
das
add
ins
and
inc
aas
sbb
div
mov
jl
or
out
mov
popf
outs
add
(bad)
outs
sti
test
inc
push
adc
lods
nop
fild
adc
pusha
pop
out
and
jmp
or
xor
into
cmc
sbb
not
movs
push
mov
push
fiadd
fs
and
xor
adc
fbstp
les
sub
or
call
int
lahf
std
or
and
sbb
pop
inc
mov
mov
push
and
mov
push
enter
sar
mov
xor
add
push
sub
aad
paddd
and
mov
cs
(bad)
idiv
sbb
xlat
push
jmp
push
ins
mov
mov
cmp
rcr
adc
jg
sub
pusha
push
lods
xchg
pop
aaa
mov
dec
push
sbb
sbb
stos
fucomi
cdq
push
cwde
add
mov
pop
add
mov
pushf
xchg
(bad)
sub
adc
fwait
mov
ret
loope
xor
outs
cmp
(bad)
loopne
and
out
and
enter
add
pop
leave
adc
push
push
shl
pop
ret
ds
rcl
aaa
ficom
das
stos
xchg
aaa
push
sub
xchg
ins
jo
mov
jg
mov
xchg
leave
scas
movs
mov
shl
daa
fs
sbb
jae
retf
and
push
ins
dec
retf
jnp
and
pop
sub
pop
or
xchg
xchg
push
inc
retf
xchg
xchg
inc
mul
shl
cdq
and
ss
ror
cmp
cmp
fisub
lds
pop
mov
cmp
add
sbb
or
mov
adc
jecxz
pop
loope
pop
jp
scas
aaa
(bad)
call
cmps
cmp
out
test
outs
adc
mov
jl
shl
mov
cmps
xchg
dec
into
inc
xchg
ror
push
imul
sti
inc
jo
outs
pop
mov
push
push
push
add
jge
or
add
test
mov
cdq
dec
out
nop
fcomp
and
xchg
pop
(bad)
cdq
dec
pop
inc
mov
mov
jmp
dec
push
loope
out
cs
sbb
cmp
arpl
or
pop
stc
jecxz
or
bound
in
mov
retf
jecxz
jl
sub
pop
adc
mov
pop
retf
jbe
sub
mov
pop
popa
sbb
not
daa
imul
inc
push
and
mov
scas
pop
mov
mov
dec
push
jno
jmp
call
or
fsub
pop
pop
mov
fmul
mov
cmp
add
ret
dec
ins
stos
and
das
jno
push
ss
cmp
lods
mov
inc
iret
repnz
xor
mov
mov
push
ins
xor
loope
fsubrp
sub
outs
out
adc
jmp
mov
push
faddp
jmp
shr
inc
(bad)
cld
dec
ror
sub
test
or
les
pop
int3
or
adc
sbb
jmp
fwait
rcl
inc
inc
outs
mov
add
pop
data16
(bad)
add
cmp
pusha
rcl
sub
bound
imul
or
or
scas
or
add
cwde
inc
mov
jecxz
icebp
dec
or
push
or
jnp
js
mov
add
(bad)
push
das
stos
aas
sub
mov
inc
(bad)
arpl
mov
or
add
xlat
xor
call
mov
jle
loopne
pop
pop
scas
and
pushf
adc
cmp
ficomp
enter
adc
mov
outs
push
fbld
push
mov
push
sub
stos
sbb
loopne
outs
fild
or
adc
inc
xchg
retf
test
shr
sub
mov
cs
lods
movs
sbb
mov
push
lahf
loopne
popa
ror
or
cmps
loopne
test
xor
into
pop
add
hlt
xchg
push
mov
inc
cmp
pop
pop
ss
mov
into
lods
push
cmps
xchg
cwde
jb
and
in
sbb
ins
sub
test
push
cmps
fild
dec
jnp
adc
ret
repnz
xchg
sub
jnp
push
aam
stos
call
aam
and
push
sub
in
xor
repnz
outs
nop
ret
sahf
loope
lods
sub
int3
call
add
jae
stos
push
mov
stos
lahf
adc
arpl
xor
and
test
add
add
mov
adc
mov
mov
push
pop
cmova
pop
jbe
daa
and
call
cli
jle
jp
pop
sub
sub
add
fild
cmp
jg
cmp
jle
push
xor
jmp
clc
sbb
lods
sbb
xor
ret
ja
sub
cld
inc
sub
xchg
sbb
repnz
xchg
pop
test
pop
not
mov
mov
in
xchg
adc
or
bound
fistp
sbb
sbb
jns
cmp
or
jge
test
(bad)
cmp
pop
cmp
add
xchg
cdq
out
mov
push
cmc
add
jle
jg
icebp
mov
std
leave
and
adc
js
adc
dec
and
inc
arpl
into
mov
push
aas
pop
cwde
popf
lea
jp
mov
dec
mov
adc
mov
dec
jge
mov
shl
stc
sbb
xor
ja
mov
pop
sub
xchg
sahf
cmp
stos
cmps
leave
lock
dec
push
loope
mov
fcomp
and
inc
stc
loop
stc
lods
mov
and
daa
jmp
into
mov
and
or
(bad)
pop
pop
hlt
cmp
sar
repz
enter
inc
lahf
dec
sbb
inc
retf
dec
cmp
push
inc
stc
ins
jmp
xlat
add
add
sbb
sbb
fldenv
je
into
std
or
sbb
test
test
xchg
or
sub
and
mov
(bad)
mov
adc
xchg
dec
inc
mov
xchg
jmp
pop
mov
inc
int
pop
lods
pusha
test
mov
jge
dec
mov
movs
xor
jmp
pop
loop
mov
aam
pop
cdq
js
das
fistp
pop
xor
pop
test
ja
fcomp
add
push
jae
call
aas
xchg
jg
fstp
jecxz
je
ss
jo
icebp
cmps
test
movs
popf
or
cmps
inc
es
daa
mov
pop
pop
and
and
and
jg
arpl
xor
lock
or
sti
push
cmp
in
add
cli
jg
dec
cmp
jne
cmp
inc
adc
add
cwde
movs
ds
das
test
bound
xchg
ss
pop
retf
mov
dec
push
adc
std
pop
adc
ret
(bad)
(bad)
stos
and
lock
or
lds
int
xchg
ins
adc
adc
fstp
movs
loopne
sar
imul
jae
fs
stos
bound
pop
mov
push
push
sbb
xor
mov
test
inc
stc
lahf
pop
repz
xchg
xchg
dec
inc
push
mov
or
in
jp
xchg
adc
call
pop
ret
call
mov
sbb
mov
pop
(bad)
jo
cmp
pop
je
pop
jg
sti
fnstenv
ins
jle
repnz
ret
les
mov
psrld
test
enter
add
test
push
in
(bad)
push
fwait
jecxz
jns
aas
adc
mov
mov
fmulp
xor
xchg
in
and
pop
lahf
repnz
pop
mov
xchg
arpl
add
sub
fcmovbe
test
dec
cli
mov
dec
add
inc
call
loop
jbe
xor
pop
retf
outs
aad
mov
call
mov
icebp
rol
cmc
push
(bad)
ficomp
cmps
stc
and
fdivr
ss
add
sti
and
mov
fs
test
sbb
out
scas
fiadd
sbb
sar
(bad)
push
and
and
sahf
(bad)
arpl
mov
lods
mov
dec
or
dec
repnz
mov
ror
dec
ins
pop
lock
leave
xor
or
pop
sbb
sub
or
add
(bad)
test
les
sar
xor
ror
xchg
push
cmp
mov
int3
hlt
pop
(bad)
cmp
adc
sbb
pushf
inc
pop
push
rcr
inc
jbe
cmp
pop
mov
adc
lods
loopne
or
and
xchg
jg
add
cmp
ins
into
les
icebp
or
pushf
hlt
shr
lods
push
cwde
cdq
sub
hlt
hlt
xchg
ins
mov
cmp
inc
sbb
js
mov
aad
adc
icebp
pop
pop
retf
add
or
adc
and
call
outs
pusha
xchg
lds
adc
or
xchg
je
xlat
ror
movs
add
mov
repnz
(bad)
(bad)
retf
add
shl
(bad)
fadd
ficom
or
call
jno
add
pusha
sub
loope
jl
adc
jbe
test
xchg
clc
ja
pop
jo
into
dec
mov
jp
daa
xchg
out
sub
ss
dec
mov
jnp
inc
cmp
xor
test
add
fs
pop
shl
add
sahf
in
shr
pop
jmp
add
jge
icebp
jl
inc
push
inc
fcomp
xchg
rcr
push
es
cmp
fnstenv
cs
sbb
push
sbb
fucomi
and
jecxz
or
icebp
leave
lods
fstp
cmps
adc
scas
mov
jnp
loopne
jne
mov
ret
add
and
dec
inc
aam
xor
xchg
cmps
inc
popf
dec
dec
adc
mov
adc
jmp
xchg
repz
mov
hlt
mov
repz
arpl
movs
sub
push
cmps
cwde
jbe
adc
popf
cmps
adc
xlat
dec
or
mov
push
mov
loopne
pushf
loopne
push
mov
and
push
jbe
push
cmp
pop
jbe
mov
lds
arpl
loop
and
jb
mov
jmp
inc
cmc
adc
push
mov
push
lahf
pusha
cmp
jb
or
mov
jne
imul
sub
mov
mov
adc
sti
and
mov
mov
pop
lea
jg
fdiv
movs
(bad)
pop
out
jmp
jnp
lock
out
cmc
push
mov
cdq
shl
mov
inc
nop
push
mov
test
mov
or
push
inc
vpaddd
retf
pop
pop
bound
and
ret
leave
fsub
les
push
test
jge
sbb
in
outs
and
xchg
sbb
cmp
outs
jae
pop
sub
repz
and
mov
clc
int
mov
dec
adc
es
pushf
shr
xor
push
mov
out
nop
leave
into
into
or
and
clc
add
dec
xor
out
arpl
int3
or
nop
lods
jnp
xchg
jae
pop
mov
es
test
shl
xlat
sti
adc
xlat
cmp
sar
add
and
mov
test
outs
cvtpi2ps
dec
inc
stos
inc
xor
daa
imul
xchg
pop
jle
mov
add
clc
xor
into
xchg
add
xchg
xlat
push
xchg
aad
lds
jmp
mov
sub
mov
lock
cmp
cli
je
add
cld
adc
shl
inc
fwait
or
mov
cmp
aaa
add
lods
popf
xchg
mov
push
test
push
inc
cmovno
cmps
jae
xchg
xor
xchg
inc
push
out
jmp
lock
leave
ins
cmp
xor
sti
call
sbb
push
gs
mov
pop
push
retf
call
fiadd
pop
xor
sbb
mov
cs
and
fisub
dec
push
(bad)
jae
sar
xchg
cs
fs
outs
pop
popa
cmp
arpl
jl
lds
mov
iret
mov
dec
jae
pop
scas
and
jmp
sub
sbb
xor
nop
add
pop
xchg
inc
pushf
std
cmp
outs
adc
out
or
lods
add
scas
pusha
jge
enter
scas
jb
cdq
xor
and
imul
les
dec
and
pop
push
jbe
xlat
std
xchg
in
aad
es
dec
daa
dec
push
pushf
jmp
and
out
adc
in
add
xchg
mov
pop
not
cmp
arpl
dec
push
icebp
enter
ds
movs
sahf
leave
not
or
repz
jmp
sbb
fisub
mov
mov
sub
xlat
xor
or
in
xor
mov
or
fdiv
xchg
hlt
sbb
in
mov
mov
pop
push
dec
clc
sub
loope
mov
or
fwait
adc
out
xor
rcl
outs
leave
dec
dec
push
xor
stos
pop
lea
nop
or
(bad)
fidiv
mov
mov
bound
aaa
add
ins
test
push
adc
gs
cwde
fs
gs
jmp
add
push
cwde
push
setns
hlt
in
jecxz
fcmovnbe
sub
adc
pop
jnp
or
cld
or
loope
add
pop
scas
loope
es
push
mov
push
lahf
jp
loopne
sbb
jne
sbb
xchg
sbb
cmc
inc
jnp
cmp
adc
sbb
ret
stos
mov
out
lahf
push
cwde
movs
outs
push
sub
(bad)
pop
aad
cmp
mov
call
push
mov
inc
stos
mov
in
stos
pslld
or
lds
and
xchg
aad
js
shl
xor
sub
or
repz
int3
jmp
inc
inc
sbb
push
fnstenv
hlt
hlt
push
fidiv
adc
out
(bad)
test
dec
clc
jae
mov
(bad)
xchg
fisttp
push
sbb
xor
dec
pushf
jg
push
ja
into
inc
dec
(bad)
cdq
xor
shl
inc
fild
push
adc
adc
push
pop
imul
add
lods
ins
xchg
push
add
and
jmp
ror
in
movs
mov
push
arpl
imul
stos
and
xchg
fstp
jp
mov
std
inc
mov
pusha
mov
mov
xor
adc
(bad)
lock
vpblendvb
sbb
fdiv
xchg
loop
adc
pop
aam
dec
sbb
dec
xor
push
fwait
jmp
push
je
or
mov
inc
div
and
pop
clc
fcomp
ja
rcr
lods
lds
cwde
rcr
test
aas
gs
mov
stos
leave
out
dec
jnp
xchg
cwde
inc
dec
mov
mov
cmc
xchg
sub
nop
loop
inc
push
jne
mov
mov
or
push
jns
sahf
inc
mov
sub
cmps
push
add
pop
jb
jnp
into
cdq
xchg
xchg
adc
and
lea
test
xchg
adc
mov
sti
jp
cmps
ds
xlat
lds
mov
shr
xor
adc
mov
and
mov
mov
pop
in
mov
int3
mov
jmp
mov
aad
scas
or
popa
or
leave
pop
jl
sub
push
sub
jmp
hlt
js
fiadd
aaa
add
jnp
retf
(bad)
mov
mov
mov
movs
clc
pop
or
in
int
es
inc
(bad)
iret
mov
jle
xor
sbb
or
arpl
mov
movs
inc
jae
inc
sti
push
retf
inc
push
lea
repz
jge
add
adc
mov
xchg
(bad)
mov
imul
test
dec
int
mov
fninit
ret
mov
movs
rol
loopne
cmp
inc
fild
(bad)
push
popf
jmp
cmps
inc
dec
inc
adc
(bad)
jns
fbstp
pop
psubw
js
cld
cld
xor
aam
and
jne
dec
aas
dec
jns
ja
call
ror
adc
(bad)
in
pop
mov
mov
pusha
mov
push
nop
(bad)
lea
cmp
and
into
scas
inc
cmp
lock
mov
rcl
fs
jo
inc
js
mov
clc
jg
leave
pop
ja
cmps
or
in
sbb
fbstp
cmps
push
mov
stos
add
or
add
mov
mov
retf
pusha
and
sbb
leave
arpl
shl
out
and
and
je
or
adc
xor
jge
jmp
mov
xchg
push
mov
or
sbb
call
je
dec
div
ja
or
push
test
out
mov
jne
pop
lods
mov
sti
push
jno
adc
cmps
enter
sbb
xchg
in
movs
add
call
and
ss
cmc
pop
sbb
outs
xchg
xor
push
xor
mov
jno
pop
xchg
pop
push
jmp
mov
int3
adc
mov
add
ficom
ret
mov
cmp
mov
add
lock
ds
cmp
or
scas
fdivr
out
or
test
xchg
fldenv
xor
retf
jns
daa
test
inc
adc
inc
fwait
mov
fist
lods
adc
out
ret
push
add
(bad)
int
ror
adc
cmc
dec
inc
xor
pop
imul
inc
xor
push
mov
sub
dec
mov
or
and
push
neg
int3
pop
add
xor
push
mov
pop
fcomp
jae
or
lock
or
ins
cmps
or
cld
std
lds
jmp
push
repnz
sahf
xchg
int3
push
imul
ror
jnp
or
cdq
fisubr
test
dec
data16
mov
fisub
arpl
addr16
fs
sbb
pop
or
retf
pop
cmps
repnz
movs
dec
and
xor
xor
xor
and
shr
sub
mov
xchg
outs
hlt
jge
ds
sbb
mov
xchg
dec
inc
iret
inc
add
std
and
cmp
xchg
out
mov
xlat
jae
idiv
(bad)
dec
fisubr
jne
xor
or
sub
inc
fwait
or
pushf
(bad)
pop
cmp
cli
push
call
pop
daa
fild
add
fnstsw
dec
mov
xor
jmp
mov
add
jns
cwde
mov
nop
pop
jg
dec
dec
xor
mov
aad
mov
lds
int
dec
outs
lods
out
in
inc
push
and
or
nop
sub
push
sub
sbb
loopne
repz
add
mov
dec
cdq
ret
and
push
(bad)
jge
lea
dec
ja
and
sbb
pop
dec
mov
push
sub
out
xor
cld
std
push
das
ins
jbe
in
add
dec
dec
sbb
sbb
shl
cpuid
jno
js
mov
cmp
xchg
cmp
std
loope
inc
js
and
push
popf
mov
jge
daa
out
inc
mov
jns
sbb
jmp
in
inc
jmp
xchg
dec
test
(bad)
cdq
int3
or
push
cmp
lahf
inc
xchg
xlat
rol
mov
push
pop
leave
cdq
std
dec
and
inc
jne
sub
movs
xchg
stc
fnsave
fwait
in
scas
in
clc
int3
(bad)
mov
pushf
adc
das
pop
fimul
jb
dec
sti
dec
xor
bound
rcr
lds
or
mov
mov
addr16
sbb
cld
fild
mov
lahf
push
or
cdq
pusha
(bad)
into
lahf
or
retf
jg
adc
icebp
daa
outs
cmp
cmp
out
fnstsw
aad
sub
jecxz
jge
jne
or
out
std
pop
lahf
jne
sub
dec
aas
xor
sar
pop
lea
ret
mov
int
clc
out
ss
call
repnz
lea
loopne
(bad)
enter
xor
in
pop
clc
dec
inc
sbb
mov
std
xor
outs
xchg
call
jmp
push
cmovne
aad
test
cmp
adc
mov
cmps
cmps
call
xor
loope
fild
mov
push
cmp
dec
(bad)
jmp
je
cli
outs
out
xchg
test
sub
sub
movs
or
push
mov
out
and
retf
aaa
out
mov
adc
popf
fidivr
inc
mov
mov
pop
fwait
pushf
sbb
(bad)
inc
punpckhwd
cmc
mov
cmp
or
fldenv
inc
(bad)
pop
add
nop
out
jmp
ror
push
adc
sub
cli
es
pop
xlat
js
jp
leave
mov
pop
pop
fist
adc
imul
mov
mov
sbb
fwait
imul
push
ror
add
mov
iret
cmp
shl
test
unpcklps
sub
sub
jle
jno
addr16
(bad)
dec
test
arpl
rol
jae
scas
adc
dec
jno
lds
cdq
xchg
iret
loopne
and
mov
clc
(bad)
call
sahf
test
sbb
jmp
in
push
pop
mov
dec
jae
mov
(bad)
sbb
dec
xor
pop
outs
or
inc
lods
mov
push
inc
or
xor
xchg
(bad)
(bad)
stc
retf
push
movs
add
mov
leave
cli
pop
xor
scas
xor
dec
leave
inc
mov
addr16
pop
scas
mov
call
and
int3
movs
adc
cmc
xchg
or
call
jp
(bad)
sbb
and
sbb
je
out
out
pop
ins
mov
mov
shl
vcvttpd2dq
movs
mov
daa
mov
rcr
push
adc
push
push
xor
sbb
movs
sub
inc
mov
cs
sub
int
add
add
adc
int
dec
into
inc
cs
mov
push
pop
xor
(bad)
jne
jns
cmp
arpl
jbe
loop
jp
mov
jne
ret
sub
add
adc
add
movs
std
push
jmp
pusha
je
xor
(bad)
gs
aas
ds
and
cmp
fcomp
movs
inc
leave
stos
add
out
push
out
in
and
pushf
dec
dec
mov
int3
xchg
loopne
shl
sub
mov
sti
lods
mov
push
cdq
sti
cmp
and
jne
add
es
outs
add
ror
jmp
std
aaa
mov
xor
popa
pop
inc
pop
mov
pop
xchg
and
retf
adc
call
in
mov
push
xchg
leave
add
aas
call
out
cmp
lods
cld
pop
sub
rep
jg
ss
push
ins
pop
sub
push
push
push
mov
mov
out
mov
pop
in
(bad)
je
adc
xchg
aad
dec
cmp
cmp
push
aad
rcl
pop
sbb
stos
ror
jmp
inc
lds
xor
adc
sbb
test
mov
sub
repz
sbb
cwde
add
push
fwait
adc
mov
push
dec
cmps
movs
(bad)
test
(bad)
hlt
inc
repnz
xchg
mov
retf
sbb
test
cmp
jmp
fdivr
sbb
push
jns
ds
retf
idiv
ret
cmp
xchg
adc
push
mov
(bad)
in
gs
ins
jb
arpl
push
add
(bad)
jmp
xor
hlt
pop
jb
nop
xor
add
outs
nop
cs
mov
mov
push
and
sar
ss
int
mov
call
adc
add
xor
cmc
test
push
aas
cmp
fcomi
mov
js
or
push
cmp
mov
mov
jo
sbb
mov
mov
add
icebp
sti
lods
inc
(bad)
(bad)
jmp
test
xor
mov
mov
ins
pop
stc
fnstcw
out
jo
fcmovnb
int3
cwde
ret
xchg
cmp
xchg
(bad)
sub
repz
lods
mov
cmp
jecxz
xchg
and
inc
es
je
(bad)
jecxz
jp
cmp
test
(bad)
xor
mov
jp
ror
xor
imul
xchg
inc
psrld
or
jnp
push
pusha
fs
loopne
jae
aad
dec
loopne
and
sbb
cdq
xchg
je
(bad)
jmp
shl
scas
repz
adc
inc
jmp
pop
sub
sub
retf
push
sub
sub
pop
daa
mov
test
jmp
dec
add
dec
xchg
movs
hlt
lods
xor
lods
push
add
push
popf
aam
mov
scas
xor
test
jno
fs
jmp
(bad)
fdivrp
popf
mov
and
in
pop
mov
ins
cmp
inc
cmp
adc
and
jne
add
cmp
sub
xchg
dec
adc
mov
xchg
pop
adc
cmps
pop
sbb
push
and
push
jb
sbb
xor
out
lock
retf
pop
adc
imul
xor
iret
sbb
mov
mov
in
fcom
pop
pusha
aad
ror
stos
clc
cmp
xchg
adc
mov
dec
stos
xor
mov
jb
into
xor
mov
dec
mov
aas
jne
jge
pop
push
inc
repz
mov
repz
not
xchg
sbb
push
mov
dec
lahf
cld
das
je
or
mov
data16
pop
mov
les
mov
cmps
test
dec
lea
repnz
retf
xlat
test
adc
(bad)
bound
stc
mov
sub
push
ja
das
stc
mov
sti
jmp
mov
fsubr
pop
jnp
fnstenv
imul
add
lods
cmp
inc
and
xor
scas
rcr
mov
add
imul
xor
aad
aad
pop
adc
ss
mov
jle
in
add
and
addr16
xchg
(bad)
test
inc
pop
pusha
dec
push
push
mov
jmp
jae
jne
mov
cmp
sbb
addr16
mov
push
leave
dec
dec
fstp
fld
sbb
mov
inc
loop
sbb
test
shr
jb
jmp
jle
aad
retf
fcomp
cmp
xchg
pop
mov
mov
mov
(bad)
out
out
xchg
jmp
ja
sbb
mov
repz
push
or
repz
push
sub
int3
or
xchg
mov
cli
int3
retf
(bad)
mov
les
hlt
dec
inc
scas
ret
call
call
imul
leave
mov
outs
pop
enter
mov
push
out
and
test
mov
jae
dec
adc
inc
dec
mov
movs
mov
pop
xchg
cld
ret
ss
push
add
(bad)
mov
js
ja
movs
jp
jg
fcomp
loop
jge
push
fcmovnbe
sub
cmp
push
push
sar
fdivr
popf
sub
pop
arpl
mov
out
in
xchg
aad
test
iret
and
lea
sub
xor
push
js
xor
leave
pop
sub
fst
push
es
lods
cmp
xchg
add
inc
jne
div
jmp
push
das
aad
repz
(bad)
test
shr
pop
pop
test
imul
adc
mov
xor
(bad)
les
add
push
sub
cmp
lock
push
xlat
ret
push
repz
add
mov
ja
es
and
mov
test
shl
push
or
jp
inc
addr16
(bad)
sbb
enterw
ja
cmps
mov
xchg
sub
stos
cmc
scas
pop
out
sub
push
push
jns
cmps
retf
jge
cwde
clc
lahf
test
sti
sbb
(bad)
sub
mov
mov
popa
cli
cmp
pop
lock
add
sysenter
xor
cmp
mov
mov
psubsb
mov
js
scas
pop
test
lahf
cmp
mov
push
and
push
adc
movs
inc
cmp
arpl
lods
mov
retf
js
cs
cmp
ss
stos
sbb
je
movs
push
sbb
mov
leave
mov
mov
rcl
sbb
in
int3
(bad)
imul
add
rcl
in
imul
mov
inc
sub
ds
retf
dec
mov
call
inc
xchg
cmp
test
dec
lahf
into
sub
inc
push
inc
aad
jg
push
inc
pop
jae
les
jmp
jge
pop
not
mov
push
cmp
add
pop
or
mov
in
lods
sub
div
jae
aas
dec
(bad)
cwde
fnstcw
sub
pop
mov
stos
jo
sar
mov
cmp
int
push
jne
inc
scas
adc
shr
mov
dec
xor
in
add
xor
xlat
retf
lods
mov
bnd
nop
sti
popa
xchg
pop
pop
fcomp
rcl
fild
repz
repnz
dec
pop
or
cmp
mov
xchg
fsub
ins
adc
or
inc
scas
outs
fld
jl
mov
in
(bad)
adc
add
jl
call
dec
jbe
popf
mov
pop
int3
jg
or
ss
fnstenv
xchg
arpl
(bad)
jge
adc
call
test
arpl
xor
and
xlat
div
loopne
call
stos
aam
int
jg
stos
aaa
in
out
and
das
sbb
hlt
adc
pop
add
push
pushf
ss
push
sub
add
shl
inc
push
pop
dec
dec
mov
dec
and
fld
sub
push
retf
bound
pop
mov
pop
mov
push
nop
out
pop
jmp
mov
jecxz
xor
aad
sar
adc
(bad)
xchg
dec
int
fcmovne
iret
xchg
xchg
bound
adc
pop
mov
gs
push
sti
add
pop
push
push
in
stc
and
bound
shr
jp
or
pop
jge
sbb
fbstp
mov
push
retf
pop
aam
inc
sbb
cdq
stos
in
adc
icebp
xchg
jecxz
mov
jge
shl
mov
inc
dec
or
sbb
fidiv
jg
xor
dec
pop
cs
test
call
call
dec
xchg
jmp
ret
je
dec
or
dec
retf
xchg
shl
(bad)
jbe
ret
mov
ror
movs
or
xchg
adc
repz
scas
call
clc
js
push
adc
lock
repz
add
stos
cmp
mov
fdivr
pop
shl
mov
inc
mov
jp
pop
cmp
push
pusha
mov
adc
loopne
xor
dec
call
pop
adc
xchg
dec
ins
ja
adc
or
jo
mov
addr16
int
and
jb
neg
loope
xor
(bad)
mov
ins
push
les
sar
push
ficomp
jbe
sbb
daa
popa
push
sar
retf
add
jne
push
inc
leave
vhaddpd
and
lods
mov
lock
and
add
test
xchg
dec
in
das
retf
pushf
xchg
fcom
ins
ds
int3
or
xor
out
add
std
(bad)
cli
mov
sbb
test
scas
and
(bad)
xor
loop
mov
sti
mov
pusha
test
pusha
or
fisubr
sbb
das
mov
jnp
cld
or
mov
or
adc
movs
mov
ret
mov
xor
adc
mov
dec
aam
stos
test
mov
xchg
pop
sbb
stos
sub
sbb
cmc
hlt
or
pop
fistp
daa
xor
jg
enter
ror
mov
cmp
mov
or
or
repnz
mov
push
xchg
adc
mov
stos
sbb
stos
repnz
fild
xor
outs
jmp
sub
and
ja
imul
adc
arpl
push
in
sbb
pop
daa
iret
shr
sub
mov
es
cmc
jle
sub
fsubr
popf
mov
push
or
and
mov
or
gs
mov
pop
mov
js
cmp
fs
add
jno
sahf
arpl
inc
in
or
fdivr
add
xchg
lea
das
mov
push
lds
sar
cmp
jl
lods
ja
out
jmp
jmp
mov
mov
scas
mul
sbb
icebp
mov
adc
xor
iret
dec
xchg
xchg
xor
or
jo
push
sbb
or
inc
popa
shl
pminsw
bound
jge
add
ds
cmps
imul
xchg
sbb
ret
aam
pop
jge
mov
jne
sub
clc
dec
bound
movs
mul
jb
inc
push
push
jmp
lods
movs
(bad)
rcl
ficomp
jmp
dec
fsincos
adc
mov
aam
js
or
push
int
push
scas
add
jno
(bad)
stc
push
aaa
retf
add
in
fcmovnu
jle
cmp
push
int3
xchg
int
jmp
rcl
cmp
and
xchg
sub
aad
scas
stos
fnstenv
pop
jnp
push
mov
into
ss
fwait
sub
mov
push
jecxz
xor
add
or
call
iret
fmul
and
rcr
sub
jl
cs
jle
in
mov
add
retf
iret
int
push
cmc
xor
inc
inc
cwde
push
jns
aaa
dec
jne
xor
sbb
call
lea
dec
in
jno
cmp
mov
jb
(bad)
jb
mov
jae
scas
test
shl
xchg
cmp
and
sbb
adc
add
imul
popa
(bad)
sti
shr
pop
mov
or
or
and
cwde
fnstsw
sbb
ins
out
neg
add
in
adc
repz
arpl
push
pop
mov
clc
sub
out
mov
ja
inc
adc
cmovae
repz
mov
movs
cmp
adc
adc
xchg
movs
retf
xchg
adc
jecxz
dec
xor
ret
sub
xor
lods
dec
cmc
cmp
call
test
retf
icebp
mov
inc
push
mov
fimul
pop
lock
mov
xchg
movs
daa
mov
out
xchg
out
sbb
push
push
mov
cs
(bad)
hlt
and
loopne
sub
fcom
and
pop
sbb
aad
push
fld
jge
mov
mov
xchg
jae
jb
ins
test
cmc
les
mov
sbb
dec
jmp
cmp
xchg
out
fbstp
jns
or
and
sbb
sbb
imul
jmp
mov
ficomp
jp
popf
out
repz
sbb
icebp
fstp
leave
scas
inc
xor
cli
in
lods
push
repz
add
cmc
adc
cs
shl
js
lock
test
data16
dec
add
sbb
into
in
sbb
xlat
(bad)
jp
es
pop
dec
add
lods
fidivr
cmp
mov
xchg
pop
mov
int
lds
xor
in
jmp
cmp
(bad)
dec
xchg
aam
xchg
mul
sti
loopne
mov
and
cmps
pop
sar
xor
ds
mov
inc
lds
std
or
cmp
mov
out
cwde
mov
call
sbb
lds
or
or
ins
and
add
outs
movs
call
loope
pop
dec
sub
lods
xor
rcr
mov
gs
or
loop
xchg
gs
mov
mov
ror
loopne
test
sub
add
out
sbb
cmps
xchg
popf
out
fwait
shl
cli
cmp
push
imul
sbb
das
pop
mov
inc
push
xor
push
adc
jp
xor
mov
inc
test
dec
add
aad
(bad)
fucomi
into
cmps
shr
mov
outs
xor
movs
jmp
dec
retf
add
bound
push
pop
movs
lsl
cmp
xlat
mov
add
pop
cdq
fs
or
xchg
adc
sbb
pop
jecxz
mov
cmc
adc
xor
dec
push
jp
push
std
adc
push
xchg
sbb
jge
nop
jb
pop
fild
stc
dec
(bad)
(bad)
stos
scas
cmp
inc
or
mov
push
add
fs
sub
mov
sbb
sub
iret
add
(bad)
dec
mov
mov
ja
cmps
sbb
das
jnp
retf
adc
xchg
das
xlat
test
and
jecxz
mov
js
ins
push
push
js
aad
adc
test
bound
aad
dec
xor
xor
int
cli
in
loop
fst
aam
(bad)
call
cmps
stos
scas
xchg
(bad)
mov
iret
lock
sbb
push
fwait
inc
cld
daa
push
mov
mov
ror
(bad)
mov
xchg
mov
mov
cmp
inc
mov
lods
xchg
sbb
dec
das
shl
xlat
loope
add
and
and
inc
ror
xor
fisub
add
or
addr16
repz
pop
adc
outs
jmp
loopne
mov
or
push
push
ficom
adc
outs
jmp
dec
or
mov
idiv
add
dec
sub
mov
cld
fmulp
mov
outs
dec
movs
aad
pop
inc
adc
mov
dec
sbb
push
cli
ret
or
jge
test
cmp
inc
fwait
popf
cs
pop
sbb
pop
push
jg
dec
jo
sub
push
push
(bad)
dec
int3
dec
jle
mov
cmps
dec
push
lea
lods
mov
or
mov
cs
xchg
jge
xchg
mov
shl
cmp
adc
cmp
fs
jge
in
add
mov
sti
jae
pop
ins
pop
les
inc
mov
pop
sbb
aam
mov
push
mov
lods
ds
lahf
mov
xor
mov
inc
jnp
jl
enter
cli
adc
fisttp
inc
lds
push
pop
out
stos
dec
repz
fistp
lea
push
subps
les
and
jl
clc
stos
xor
pop
and
cld
cmp
add
xor
sbb
inc
loope
xchg
ror
and
(bad)
push
std
call
(bad)
xor
xchg
dec
adc
int
in
mov
cmps
lds
ret
mov
mov
dec
xchg
sub
push
repz
daa
cmp
adc
mov
(bad)
cmp
pop
ret
stos
dec
or
mov
add
and
call
pop
enter
mov
lahf
cmp
inc
int3
fs
adc
adc
dec
lea
and
adc
cmp
repz
(bad)
lea
retf
out
loop
push
std
ja
and
in
jnp
test
fdiv
ror
dec
sbb
ja
rcl
push
std
jle
f2xm1
js
mov
add
inc
adc
in
js
call
nop
jmp
cld
sbb
call
or
rcr
add
push
das
or
das
inc
je
mov
cmp
adc
jnp
pop
popa
inc
outs
mov
dec
jns
idiv
stos
gs
mov
rcl
dec
jo
rcl
xor
cld
stos
xor
jmp
xor
push
push
hlt
xor
(bad)
push
mov
add
(bad)
aad
in
xor
jge
cmp
cs
inc
xlat
sub
adc
xchg
xchg
cmps
pop
fild
add
push
dec
into
adc
inc
or
sub
lds
inc
fadd
cwde
xchg
daa
pushf
jmp
dec
fmul
fbld
sbb
mov
aaa
test
push
push
(bad)
or
inc
jmp
in
les
sub
repz
xor
sub
and
xor
iret
adc
pop
pop
xor
add
add
test
mov
inc
cmp
shr
pop
test
sub
and
adc
mov
inc
jp
cs
sbb
outs
jae
cli
stos
popa
and
jmp
push
pop
mov
and
dec
xchg
push
leave
cwde
ja
add
sub
mov
scas
test
jbe
into
lds
fs
movs
pop
xchg
imul
xchg
arpl
pop
jbe
push
cmps
push
xchg
or
sub
mov
lods
or
jle
mov
pop
adc
xor
add
jo
sub
xchg
push
jo
(bad)
pop
cmp
dec
or
and
(bad)
push
adc
push
ret
(bad)
hlt
call
and
stc
loop
arpl
stos
add
pop
jbe
clc
xor
aam
xchg
jno
out
cdq
(bad)
fwait
cmp
idiv
dec
retf
pop
mov
jge
fist
and
dec
in
cmps
cmps
fisttp
(bad)
jge
or
mov
push
test
sub
mov
int3
nop
jle
mov
sub
push
cs
shl
das
test
inc
xchg
outs
lea
aas
fild
mov
sub
adc
inc
or
sbb
adc
and
sbb
aaa
in
fistp
cs
cli
mov
out
xchg
js
add
neg
jp
cmc
mov
mov
push
xchg
call
das
inc
pop
(bad)
stc
lds
gs
push
retf
aaa
xlat
mov
outs
and
fcomp
xor
out
cmp
or
jmp
ja
sbb
adc
out
out
retf
je
xchg
gs
repz
mov
out
xchg
push
aad
call
pop
test
aas
push
pop
sbb
(bad)
pop
fs
sbb
into
call
sub
adc
and
jne
mov
adc
mov
xor
push
mov
push
mov
ret
jne
inc
or
lea
dec
add
push
sti
dec
sbb
add
dec
or
scas
ss
push
mov
ficom
imul
arpl
in
test
and
(bad)
sbb
jb
add
or
retf
pop
pop
cmp
and
sub
fwait
test
pop
inc
enter
in
mov
repnz
ret
ret
fwait
retf
push
mov
repz
mov
outs
cmps
(bad)
lods
mov
mov
xor
or
repnz
dec
mov
sbb
pop
das
or
xor
and
xor
and
dec
push
add
imul
cdq
sub
pop
(bad)
in
xlat
in
push
mov
leave
push
fisttp
sbb
shl
mov
pusha
add
jmp
cs
push
jle
xor
rcl
in
dec
sub
in
movs
arpl
ret
cmp
les
pop
cli
mov
dec
int3
dec
jae
out
(bad)
scas
sbb
or
sbb
pop
dec
je
sub
retf
repz
mov
in
out
jns
sub
popf
push
push
stos
in
movs
and
mov
add
fild
xlat
dec
cwde
xor
inc
adc
jle
jno
push
and
mov
or
in
xchg
xchg
inc
scas
pop
mov
movs
fwait
mov
lods
clc
popf
jnp
push
mov
imul
test
xchg
push
in
enter
mov
shl
cmp
push
mov
jb
daa
sahf
mov
fdivr
iret
and
fwait
inc
xchg
clc
jmp
sbb
ins
mov
js
adc
push
imul
jmp
xchg
idiv
(bad)
fisubr
sub
push
fisttp
xor
jbe
clc
inc
sbb
sub
ror
mov
cmps
sbb
ret
fs
mov
jle
sbb
xchg
xchg
es
or
daa
xchg
hlt
ins
clc
pop
jnp
cmp
loop
cmp
cmp
mov
ret
add
sahf
cs
nop
loopne
clc
xchg
jecxz
popf
fwait
popf
dec
int
xor
inc
xchg
push
mov
ret
xor
cld
adc
clc
in
sbb
cld
iret
sbb
inc
movs
popa
adc
lock
pop
mov
mov
loope
addr16
jmp
jl
mul
ins
jmp
push
xlat
or
sti
push
aaa
push
shl
pop
dec
adc
dec
hlt
xchg
pop
mov
cmp
sbb
mov
imul
inc
sahf
and
stos
out
xlat
mov
dec
sbb
sbb
sbb
mov
fidiv
cmp
(bad)
mov
push
sbb
arpl
rcr
cmp
call
push
and
test
or
xchg
jns
jl
leave
in
imul
arpl
inc
ret
push
nop
push
jb
fst
cmp
push
push
dec
adc
movs
test
scas
mov
ret
sub
xchg
sub
add
mov
not
lahf
cmp
popa
scas
shrd
add
mov
dec
clc
shr
sar
dec
fstp
mov
sbb
dec
jp
(bad)
shr
push
cmps
mov
inc
and
xlat
jne
test
mov
fdivr
loopne
xor
aam
ins
popf
bound
add
arpl
cwde
(bad)
xor
sub
sbb
cmc
stos
push
and
jns
pop
mov
dec
fisub
ins
pop
jne
outs
or
adc
ds
add
and
jb
mov
stc
int3
xchg
xor
xor
out
outs
mov
pop
mov
pop
retf
test
arpl
popf
xor
dec
xor
mov
ins
jg
dec
outs
pop
inc
jg
fistp
mov
jp
(bad)
repnz
aad
out
mov
lahf
inc
fwait
jne
arpl
pop
cli
ins
in
pop
test
pop
xchg
int
sub
sub
inc
js
push
cmp
push
arpl
mov
jl
jb
je
add
cmp
mov
je
imul
rcr
mov
inc
out
addr16
or
inc
pop
stos
rcl
les
sbb
jae
or
fst
push
out
(bad)
mov
rol
fild
popa
pop
xchg
mov
lea
aas
and
sub
jecxz
sbb
jmp
push
fistp
std
or
mov
test
enter
cmps
cld
mov
gs
loope
jg
div
dec
xor
arpl
cwde
stos
sbb
(bad)
sbb
lods
and
xchg
mov
dec
je
(bad)
jo
xchg
nop
pop
and
add
out
shl
in
or
cmps
jne
xchg
pushf
pop
sbb
test
call
sbb
pop
jbe
jmp
dec
(bad)
adc
pop
push
mov
and
arpl
or
jns
jmp
cld
mov
div
jecxz
inc
fs
mov
adc
bound
ret
jne
mov
(bad)
jo
int
popa
adc
jg
mov
jmp
cwde
aaa
sub
test
push
xor
dec
ds
adc
inc
xchg
popf
stos
iret
dec
mov
jno
inc
popa
aas
outs
jmp
imul
loop
mov
std
loopne
(bad)
xor
xor
mov
mov
fwait
jae
or
or
pop
push
ins
or
or
mov
data16
inc
cmps
je
cmp
pop
pushf
push
dec
mov
arpl
cmp
sbb
ret
repnz
ins
sub
mov
jge
inc
dec
loopne
lods
push
ret
out
mov
sub
rol
inc
cmp
adc
fst
idiv
pop
cmps
xor
jns
pushf
or
mov
inc
pushf
lea
or
(bad)
addr16
mov
bound
and
int3
or
inc
mov
mov
cdq
aad
and
jae
int3
fldcw
fist
adc
xor
scas
retf
xor
push
mov
and
das
inc
adc
out
or
xchg
mov
add
in
jecxz
int
adc
addr16
fistp
hlt
es
mov
xlat
fucom
jbe
hlt
push
or
jnp
movs
sbb
js
inc
xchg
test
jmp
repnz
mov
dec
out
sub
and
dec
ret
enterw
or
popa
cmp
cmps
stos
mov
dec
sbb
xchg
call
lods
mov
xchg
popf
scas
ror
repz
int3
test
push
sbb
in
out
loope
retf
je
ds
pushf
ret
dec
mov
popf
dec
pushf
or
movs
sub
or
dec
or
pop
test
add
(bad)
fsub
daa
jp
test
dec
call
(bad)
bswap
and
pop
mov
mov
lahf
int
mov
xor
add
add
cmps
jge
out
xlat
test
fs
xchg
push
mov
retf
vandps
fstp
outs
or
push
and
mov
in
popa
js
hlt
xchg
cmp
pop
mov
in
hlt
inc
sub
pop
stos
cs
xor
iret
or
dec
xchg
sbb
mov
push
ret
jae
mov
push
stos
xchg
scas
add
sbb
cmp
mov
sahf
aaa
fs
mov
test
int3
adc
push
retf
or
jmp
aad
addr16
jecxz
fisub
data16
aaa
push
jg
fwait
repz
movs
jmp
into
(bad)
(bad)
push
das
xor
mov
or
inc
and
retf
mov
push
out
adc
pusha
rcr
clc
jle
or
fwait
push
ins
iret
mov
lock
cs
fadd
cmps
mov
add
pop
push
test
aad
cwde
std
lds
and
movs
jg
lods
inc
dec
mov
inc
and
mov
jo
sbb
std
jge
jecxz
ret
push
loop
daa
and
cmps
jge
fidiv
icebp
pop
enter
cmp
cmps
inc
sub
jmp
adc
out
lods
and
movs
add
adc
popf
jl
out
dec
cdq
retf
sub
ss
(bad)
cmp
or
pop
leave
or
int
stos
push
xchg
push
add
or
inc
movs
in
mov
pop
pushf
scas
sub
arpl
cmp
test
add
mov
inc
sbb
jecxz
jbe
in
jp
lods
sub
cmps
or
dec
adc
mov
int3
adc
add
sbb
or
add
(bad)
xor
ins
rcl
cmc
(bad)
dec
ret
mov
sbb
icebp
xchg
mov
mov
stos
or
sbb
sbb
add
cmp
jp
sbb
idiv
cmp
icebp
aad
xchg
and
call
push
test
ret
inc
jns
pop
mov
sub
je
mov
icebp
sub
shr
xchg
retf
cmp
aaa
sub
mov
fmul
inc
ds
cmp
mov
adc
sbb
push
aam
pop
or
leave
arpl
mov
dec
pop
dec
es
jge
shr
aas
aad
repnz
add
js
call
cs
sahf
repnz
icebp
sbb
fidivr
in
(bad)
fiadd
nop
sbb
xchg
mov
inc
test
add
test
sbb
sub
rcl
aas
mov
cwde
mov
sbb
jle
or
xor
sub
test
mov
fidiv
fcomp
adc
jge
pop
jbe
mov
std
pop
sub
pop
or
test
dec
dec
cmp
mov
inc
jecxz
add
mov
fwait
jne
jbe
cmp
call
adc
dec
xchg
xchg
adc
addr16
sti
or
mov
lahf
jae
sub
mov
and
add
sbb
inc
cmp
js
and
push
add
iret
iret
xchg
pop
aam
mov
mov
push
sbb
in
popf
movs
ja
inc
sti
adc
int3
cli
sar
add
sbb
add
xchg
jle
data16
sub
xchg
mov
fidiv
jmp
data16
pop
and
mul
rcl
sub
retf
in
inc
loop
out
or
test
add
(bad)
adc
ret
sti
loope
aad
or
ret
fs
aaa
xchg
and
or
cmp
lahf
jno
imul
and
or
xchg
xchg
sub
mov
xor
xchg
mov
push
inc
sti
daa
mul
push
retf
cmp
test
push
adc
push
movs
das
cld
je
dec
int
push
sub
pop
pop
test
(bad)
fstp
or
inc
arpl
cmp
jecxz
stos
add
add
shl
push
push
push
mov
div
out
cmp
mov
pop
rcr
or
xchg
adc
ja
ror
sti
popa
xor
mov
call
pop
cmps
sbb
out
sbb
and
jl
loop
outs
mov
add
xchg
jno
das
xor
adc
push
add
ins
fldenv
fiadd
push
jmp
xchg
test
xchg
cmp
clc
ror
adc
add
push
mov
pop
adc
test
push
int
xor
mov
mov
push
mov
inc
push
sbb
sar
mov
nop
popf
push
mov
push
test
sti
imul
jmp
scas
jae
xor
int3
xchg
adc
add
cwde
cmp
lods
push
xor
not
push
pushf
cli
jmp
sar
mov
xchg
js
repnz
mov
(bad)
mov
push
xchg
inc
into
dec
retf
fcmovbe
xor
xor
out
adc
jmp
push
loope
cmps
test
or
ficom
pop
xlat
jecxz
ins
mov
push
imul
and
mov
sbb
jle
add
int3
or
cmp
mov
cmps
mov
mov
out
inc
lea
jmp
cmp
call
pusha
in
ins
xor
ins
push
test
add
sub
add
cs
pop
(bad)
push
and
mov
jmp
(bad)
mov
arpl
mov
mov
xchg
cli
sub
fisttp
imul
ja
test
and
fidiv
mov
fcom
cld
and
in
aas
sub
loopne
addr16
scas
inc
mov
scas
and
adc
dec
add
lock
mov
shr
repz
adc
mov
cmp
shl
adc
daa
push
jno
mov
inc
in
cli
sbb
fwait
sub
cdq
mov
xchg
xchg
aam
(bad)
mov
loop
cld
pop
cmp
mov
mov
mov
sbb
in
dec
jb
pusha
pop
mov
mov
push
sar
popa
out
rcl
test
mov
inc
xchg
andps
loopne
dec
(bad)
shr
mov
jle
and
es
xchg
enter
sbb
sub
inc
jo
shr
and
ror
inc
adc
test
cmc
hlt
nop
mov
retf
dec
(bad)
cmps
jno
mov
jg
push
xor
movs
jl
std
and
add
push
fiadd
mov
lahf
push
ret
leave
xor
or
frstor
stc
arpl
jl
(bad)
jmp
jne
dec
pop
sbb
fscale
jg
inc
xchg
aaa
bound
jp
xor
out
rep
lds
push
xchg
or
jp
(bad)
xchg
cmp
jecxz
mov
and
in
jb
loope
jl
lods
addr16
push
jecxz
int3
cmp
xor
xlat
cdq
ficomp
xchg
inc
or
xchg
(bad)
in
push
adc
fsubr
aaa
ins
imul
test
xchg
add
xor
and
jle
push
fisubr
in
cmps
lds
and
adc
or
test
mov
adc
cli
xchg
xchg
popa
mov
adc
push
pop
iret
mov
(bad)
sub
sbb
and
sub
(bad)
nop
push
enter
and
es
scas
cmp
out
sub
push
retf
pop
cmp
aad
loop
rol
add
aam
xor
fst
inc
xchg
call
or
loop
adc
call
pushf
call
dec
push
pop
mov
adc
jnp
cmps
dec
data16
jno
jmp
cmps
xor
fwait
adc
pusha
or
ins
xor
or
mov
pop
out
cli
ret
adc
xor
and
jecxz
and
or
push
pop
mov
stos
xchg
dec
jne
jne
pop
mov
push
add
out
ins
mov
rol
xor
cwde
ins
int
adc
lds
stos
pop
outs
jmp
fdiv
test
pop
int
movs
fs
je
test
mov
popf
xchg
iret
mov
cmps
rcl
mov
scas
lock
mov
shl
in
or
pop
sahf
mov
ficom
fld
or
mov
or
or
push
jle
clc
pop
aad
in
repz
add
scas
(bad)
ins
push
jne
mov
addr16
add
cmps
and
adc
(bad)
repz
push
cmpxchg
je
and
bound
out
push
scas
xlat
dec
call
pop
loopne
or
bound
loop
xor
aam
stc
sub
sbb
jecxz
or
scas
mov
jecxz
sbb
mov
fisttp
repz
shl
and
dec
enter
inc
ret
xor
dec
imul
outs
xor
in
sbb
jae
mov
xor
out
jnp
in
(bad)
popa
jp
out
xor
inc
push
sub
adc
mov
ror
jp
arpl
(bad)
nop
cli
dec
add
sbb
xchg
jbe
out
lds
xlat
shr
adc
pusha
loope
js
clc
mov
sub
mov
add
push
xchg
sub
mov
push
mov
leave
xchg
push
push
div
daa
test
pop
push
ins
test
popa
icebp
xor
push
call
and
fmulp
add
loope
dec
test
sub
mov
cmc
out
jmp
dec
adc
xchg
rcl
jae
adc
movs
push
inc
in
or
adc
pop
mov
mov
dec
or
cmp
in
mov
out
jge
ds
stos
ficomp
xchg
push
or
jecxz
cld
enter
outs
leave
and
adc
cli
push
jmp
mov
mov
pop
push
or
xor
ficom
push
pop
jae
pop
jns
adc
dec
xchg
aam
inc
call
jge
fbld
outs
test
cmp
(bad)
cmp
ins
cmp
inc
pusha
cmps
inc
push
mov
daa
and
cmp
imul
xor
cmc
cmps
push
out
mov
inc
push
inc
repz
loope
xchg
mov
sbb
loopne
sub
xchg
jle
jo
sbb
int3
sbb
repz
cli
retf
push
add
js
hlt
fbld
fwait
xor
arpl
inc
push
ss
imul
cmps
leave
sub
mov
outs
cmp
dec
inc
aam
sub
mov
jecxz
ret
imul
out
in
scas
and
lds
mov
cs
sbb
arpl
dec
add
aaa
mov
jecxz
pop
jp
lods
mov
aam
in
sub
js
out
jp
mov
repz
add
cwde
loope
(bad)
xchg
jne
shl
repz
jmp
ins
outs
mov
cmps
add
lods
pop
in
(bad)
ror
push
pop
adc
jbe
sar
stc
inc
fwait
into
es
dec
neg
aad
pop
loopne
test
lea
stc
int
push
mov
loop
out
xor
xchg
push
add
mov
int3
arpl
(bad)
aad
add
pop
test
dec
sbb
mov
leave
idiv
sbb
jo
imul
mov
idiv
bound
ds
xchg
inc
pushf
push
push
leave
cmps
jecxz
(bad)
fcomp
in
cmp
inc
mov
out
sar
xchg
imul
scas
adc
fmul
xor
popa
mov
out
int
add
xor
stc
lods
scas
xor
mov
fstp
popf
aaa
(bad)
push
dec
pop
add
or
nop
(bad)
fld
inc
les
add
mov
dec
repnz
ror
inc
jg
ds
mov
mov
xchg
ret
jg
ffree
and
jns
sbb
test
jl
fwait
in
js
sub
inc
xor
fdiv
inc
hlt
out
cli
push
sar
and
sub
jnp
add
adc
repz
call
retf
iret
sti
stos
xchg
xchg
jg
and
(bad)
in
pushf
les
cmc
ds
loope
mov
cli
(bad)
nop
jmp
mov
jb
sbb
jne
xor
lahf
fisttp
cmp
dec
cmp
jmp
and
arpl
out
jb
and
dec
dec
cli
xchg
adc
sub
push
js
dec
das
cmp
xchg
ror
inc
xchg
repnz
cld
jmp
mov
mov
shr
fs
mov
popa
ret
mov
push
or
or
pop
test
lds
fsub
ins
cmp
and
inc
xor
sub
mov
stos
lea
jbe
hlt
mov
test
loope
xchg
out
inc
aam
dec
inc
xor
sub
out
loopne
in
cs
hlt
adc
cmc
test
cmpxchg
jo
movs
inc
mov
xlat
fcmove
sub
not
(bad)
sub
pop
fmul
jae
stos
mov
add
test
test
add
adc
inc
jno
jle
mov
adc
push
dec
pop
sub
nop
popf
shl
push
jbe
cmp
sub
dec
jae
jbe
cwde
cwde
mov
iret
(bad)
in
pop
sahf
adc
pop
lods
out
xor
xor
scas
iret
ficomp
pushf
out
push
adc
inc
inc
sbb
rcl
fidiv
es
rcr
jg
jg
mov
test
jno
in
stc
pmaddwd
cmp
push
dec
aaa
test
ror
sub
imul
mov
jl
sub
out
std
pop
repnz
stos
stos
jle
arpl
add
pop
mov
jnp
jne
xchg
cmp
xchg
push
ss
sbb
ins
add
lea
addr16
pop
mov
pop
rol
add
xchg
fist
add
pop
ja
xchg
cmp
and
cmp
mov
inc
add
lahf
cmp
push
mov
xchg
aad
cmps
pop
(bad)
mov
loop
sub
lds
inc
push
cld
enter
jp
xchg
repz
outs
int
imul
cmp
mov
dec
add
push
cdq
mov
cdq
pop
pop
adc
inc
stos
pop
pop
inc
fwait
loope
mov
out
xor
in
and
and
xor
sub
aaa
loop
aad
adc
push
popf
mov
aaa
jbe
or
out
stos
xchg
dec
repz
xchg
pcmpgtw
sahf
iret
nop
inc
and
push
cmp
mov
pop
or
ins
xor
or
mov
mov
and
mov
inc
int
fisttp
inc
mov
cmp
pop
je
imul
fiadd
pop
js
in
dec
iret
adc
xor
in
xor
pop
mov
iret
or
jmp
cs
test
je
mov
push
sbb
icebp
sbb
ficom
fcmovu
add
fisubr
pop
imul
stc
pushf
(bad)
scas
adc
pop
int3
mov
dec
fwait
xchg
adc
jns
push
cs
xchg
mov
rol
jns
xchg
cdq
push
xor
jne
cmp
imul
push
add
or
mov
push
mov
inc
cmc
cwde
adc
mov
xor
adc
push
xchg
mov
pop
push
sub
jl
pop
lock
test
out
pushf
stos
call
and
jo
fwait
pop
or
retf
jmp
dec
add
xor
add
jno
xor
cmp
push
mov
mov
add
jecxz
xor
pop
es
add
xlat
jmp
cmp
cwde
jle
dec
adc
leave
inc
cmp
sub
sbb
fst
retf
ss
add
sbb
mov
xor
mov
fsub
cmp
mov
aad
mov
dec
push
scas
fsub
and
or
inc
add
push
daa
not
cs
popf
xchg
pop
jo
push
das
cmp
retf
push
test
pop
loop
jae
adc
pop
std
mov
lods
adc
mov
(bad)
or
lods
add
arpl
and
popf
add
and
and
hlt
(bad)
cmps
(bad)
js
stos
sbb
call
push
cmc
in
mov
cmc
lea
jp
dec
jle
xor
fmul
push
push
shl
adc
scas
popa
mov
bound
outs
je
xchg
ins
(bad)
sbb
jle
inc
sbb
lods
push
dec
clc
cld
cmp
sbb
cmp
sar
push
les
das
fsub
in
repnz
mov
into
clc
cli
sbb
inc
das
fisubr
push
xchg
mov
cwde
mov
mov
jns
add
push
pop
adc
mov
std
ror
cmc
jns
mov
jl
cmp
mov
(bad)
fadd
push
jge
repz
frstor
fiadd
loop
adc
dec
adc
xchg
xchg
test
in
xor
dec
rcl
popa
sbb
fldcw
mov
inc
sub
adc
or
push
retf
nop
sbb
cmp
mov
jecxz
cld
dec
aad
nop
in
pop
dec
icebp
mov
add
jmp
pop
jle
out
and
or
lods
mov
or
dec
dec
sahf
(bad)
mov
sbb
or
adc
jno
push
fwait
push
jp
nop
imul
nop
mov
mov
loopne
inc
dec
mov
ror
sti
or
arpl
in
cmp
(bad)
lock
xor
mov
popa
pop
sub
dec
inc
push
scas
pop
sbb
cs
dec
mov
fdivr
push
push
retf
and
pop
or
and
sbb
and
inc
cmp
shl
pop
push
mov
popw
cmc
mov
fwait
out
inc
adc
push
aaa
cmp
push
cmp
movs
fdiv
test
mov
es
xlat
pop
xor
lods
adc
iret
fnstcw
cmp
dec
push
mov
sub
jne
jae
loope
mov
and
or
inc
jns
sub
xchg
fimul
push
or
loop
test
bound
adc
sub
int
mov
pop
xlat
push
inc
es
xchg
stos
and
iret
inc
jecxz
mov
ret
inc
cmp
aas
dec
mov
cmp
std
cmp
sub
outs
mov
movs
xor
mov
(bad)
or
arpl
adc
or
pop
inc
icebp
sub
push
js
or
lods
sbb
sti
addr16
bound
in
iret
cmp
mov
iret
rcl
push
aam
imul
(bad)
add
mov
call
mov
lahf
sti
mov
stos
or
pop
arpl
and
push
(bad)
stos
pop
xchg
xchg
inc
pop
gs
fimul
movs
inc
xor
cmp
push
stos
cmps
inc
inc
movs
fwait
js
(bad)
jae
inc
cmps
pop
xchg
(bad)
arpl
and
cmp
mov
adc
fisubr
(bad)
pop
fmul
push
inc
push
sub
aam
cwde
fbld
stos
dec
test
cwde
sub
adc
out
push
mov
push
mov
(bad)
in
cmp
ss
dec
adc
push
mov
jns
xchg
aam
dec
inc
xlat
repz
and
mov
stc
enter
clc
daa
daa
sbb
dec
movs
dec
dec
mov
int3
(bad)
mov
xchg
lds
sbb
fsub
xchg
mov
dec
sahf
mov
lods
jp
in
mov
mov
repnz
push
aad
(bad)
adc
cmp
cmps
pop
mov
pop
mov
adc
xchg
in
in
ins
and
push
(bad)
(bad)
jg
xchg
test
std
cli
mov
jmp
lahf
lds
cmp
mov
loopne
fisttp
cmp
(bad)
dec
in
loop
mov
sbb
sti
jno
daa
dec
sub
in
test
mov
pop
jle
test
cmps
xchg
jl
loopne
push
pop
idiv
or
sbb
mov
pop
inc
inc
imul
mov
stos
mov
xchg
adc
out
jmp
cmp
out
push
add
repz
repnz
dec
in
jl
(bad)
inc
xchg
pop
sub
inc
inc
sbb
add
pop
add
mov
sbb
push
repz
lock
enter
movs
fwait
mov
adc
cmp
and
push
jp
ds
pop
arpl
xchg
add
sbb
test
add
cld
loopne
mov
fsubr
jne
add
cmp
xor
xor
add
dec
pop
adc
mov
aad
fiadd
mov
pushf
je
mov
mov
ret
and
cmps
mov
aam
imul
(bad)
ins
lea
stc
xor
adc
mov
fsub
imul
xchg
hlt
cld
sub
push
sbb
imul
cmp
daa
in
xchg
mov
add
pusha
nop
mov
clc
nop
add
add
scas
sahf
xchg
mov
push
mov
(bad)
cli
jbe
mov
and
mov
retf
scas
xchg
retf
fiadd
ds
js
push
sar
movs
das
cmp
div
test
loopne
push
and
sti
xor
les
ffree
sbb
dec
icebp
sub
cmp
mov
test
inc
push
and
mov
nop
and
ins
add
and
push
mov
(bad)
xchg
icebp
push
and
in
mov
adc
jl
aam
in
inc
jns
(bad)
lea
xchg
jno
ds
mov
movs
mov
or
dec
sbb
jo
rol
aad
add
cmp
cmp
loopne
rcr
call
in
mov
test
popf
adc
aaa
adc
cmps
push
inc
mov
or
cmp
push
mov
mov
and
adc
mov
mov
int
rol
mov
jecxz
enter
mov
sub
sbb
loopne
(bad)
and
jo
jecxz
xor
xchg
push
addr16
outs
nop
xlat
imul
int3
fwait
ja
and
xor
jecxz
cmps
xchg
push
mov
(bad)
in
cdq
xchg
loop
push
ins
scas
mov
xchg
bound
in
add
movs
cmp
test
mov
mov
jne
sub
pop
repnz
push
arpl
pushf
jg
add
pop
aad
add
xchg
dec
pop
xor
in
lods
(bad)
cmp
das
fmul
int3
call
jbe
adc
pusha
jb
mov
sbb
mov
dec
pop
les
mov
pusha
inc
fwait
sbb
xchg
xchg
loop
sub
sbb
fwait
push
bound
retf
pop
add
fwait
(bad)
jns
mov
fwait
mov
pushf
stc
jnp
push
push
fs
adc
adc
adc
pushf
call
icebp
gs
rcl
repz
xchg
mov
xchg
pop
retf
sbb
in
add
outs
in
ss
inc
mov
cmps
js
mov
sub
lods
out
pushf
xchg
pop
jl
outs
fistp
bound
jnp
cdq
icebp
daa
dec
inc
ror
retw
add
jae
xchg
imul
cmp
xchg
xor
movs
xor
movs
retf
sbb
pop
and
xchg
sub
xor
jb
add
(bad)
pop
push
(bad)
sub
inc
pop
cmc
mov
xchg
inc
add
sbb
mov
inc
gs
dec
in
outs
dec
mov
stos
cli
inc
rcr
jne
inc
dec
xor
adc
xchg
and
popa
popa
pop
adc
add
or
push
daa
push
mov
pop
pop
sub
nop
sbb
(bad)
jno
xor
fsub
cwde
sbb
add
cwde
icebp
jp
mov
sub
pop
inc
mov
(bad)
jp
popa
in
jge
mul
or
xchg
cmc
mov
xchg
push
dec
sti
jmp
inc
xchg
sub
lods
out
xchg
inc
lahf
mov
cmp
bound
xlat
mov
cs
xchg
dec
mov
cmp
je
fwait
aad
push
sub
repz
cmc
js
cmps
movs
fdiv
adc
jnp
jmp
jmp
jbe
push
xlat
jbe
push
rcl
shl
pop
out
lods
adc
and
jmp
xchg
jecxz
sub
loope
push
and
cwde
jmp
pusha
xchg
jl
mov
inc
mov
add
fs
data16
cli
jb
inc
jmp
jg
inc
jmp
adc
xchg
push
aad
rcr
mov
int
in
popf
shl
pop
push
dec
or
pop
ins
adc
jp
xor
arpl
mov
and
aas
push
jg
and
je
rcl
outs
aam
inc
adc
mov
mov
das
sbb
stos
sub
add
or
pushf
mov
jl
mov
jne
pop
adc
mov
xor
mov
ret
lds
sbb
jbe
(bad)
in
repz
adc
ja
ds
les
push
repz
xor
test
cmp
and
nop
jmp
fcmovbe
mov
enter
cmps
bound
adc
jne
pop
push
nop
dec
ret
mov
add
mov
(bad)
cmp
jl
psrlq
xchg
lods
xlat
push
xor
push
outs
xchg
fwait
(bad)
mov
dec
lahf
or
adc
xor
sbb
cdq
push
jg
sbb
pushf
sub
inc
sub
cdq
xchg
xchg
xor
cdq
inc
je
cmp
push
imul
xor
les
cmps
pop
lock
mov
or
outs
inc
cwde
fidivr
out
xchg
fs
test
stos
or
sub
jg
aaa
shr
cmc
mov
jne
out
add
mov
movs
arpl
dec
dec
das
fimul
mov
aam
pop
in
aas
ret
jp
cmp
gs
lea
jecxz
cmps
data16
push
or
js
shl
jp
(bad)
sbb
push
cmp
xchg
sub
sub
ror
jno
je
int
iret
sub
mov
xchg
pop
push
not
or
jmp
rol
and
ins
sub
jnp
jl
movs
shl
mov
adc
add
stc
xchg
sar
mov
and
inc
mov
jp
xor
pushf
mov
and
pop
xor
xor
clc
fbstp
and
repnz
in
sbb
push
loopne
inc
aad
pop
cwde
popa
(bad)
imul
mov
nop
fwait
shl
imul
adc
sub
femms
(bad)
bnd
ins
sub
mov
push
pop
jae
or
dec
jno
adc
sbb
jb
jb
xchg
and
xor
xor
icebp
inc
mov
mov
fs
lock
mov
repnz
xchg
xor
jnp
and
cmp
pushf
loopne
mov
fstp
sbb
dec
aam
lods
cmp
and
mov
cmc
xor
gs
or
fiadd
stos
cmp
mov
es
dec
mov
(bad)
mov
sbb
shl
clc
enter
cmps
inc
mov
fstp
jno
push
jmp
lods
outs
cld
inc
mov
jne
xchg
push
or
push
hlt
jae
mov
movs
mov
adc
ds
hlt
cmp
xor
and
or
cld
push
popa
cld
push
jmp
pop
push
arpl
lods
cmp
lods
jle
ret
fsub
jns
push
mov
push
push
dec
sub
jne
pop
inc
fs
call
pop
arpl
js
xchg
jp
lahf
movs
pop
mov
or
xor
add
mov
movs
xlat
cmp
or
fs
icebp
test
jp
mov
test
push
dec
mov
mov
pop
and
scas
(bad)
add
mov
mov
inc
aas
(bad)
(bad)
rcl
icebp
cmp
nop
sub
xchg
loope
dec
jbe
aaa
je
stos
repnz
fs
jns
inc
xlat
mov
or
mov
fadd
loop
test
imul
fldcw
lods
mov
loopne
(bad)
mov
loope
cmp
xor
aam
mov
pop
movs
(bad)
(bad)
lods
je
sub
loope
add
or
test
mov
dec
int
outs
adc
call
sti
sbb
sub
add
fisubr
into
pop
bound
cmp
test
xchg
ret
jmp
lds
dec
movs
(bad)
xlat
stos
add
mov
pop
and
je
fwait
inc
add
and
inc
inc
rcl
or
xchg
fdiv
sub
loopne
inc
cmp
add
lods
shr
jl
pop
jl
pop
movs
push
js
sahf
jae
adc
stos
add
cmp
xor
and
push
shl
or
test
mov
pop
jo
fsub
pop
xor
add
std
adc
sahf
adc
mov
pop
add
jno
jge
jecxz
cs
(bad)
shl
add
pop
hlt
push
adc
(bad)
add
jbe
mov
lahf
inc
push
std
pop
xor
shl
pop
push
out
stos
add
pop
pop
sub
jne
gs
add
pop
(bad)
outs
xchg
push
jne
mov
idiv
jge
ret
std
xor
js
mov
mov
pop
mov
push
mov
cmp
stos
sbb
pop
mov
movs
inc
mov
inc
xor
movs
mov
or
stos
int3
std
inc
mov
cmp
mov
nop
ret
movs
popa
sub
xor
mov
imul
push
imul
jae
hlt
mov
fld
mov
out
test
aas
inc
in
jecxz
loop
loope
mov
inc
mov
div
pop
shr
les
inc
retf
loope
sbb
or
jb
add
sbb
mov
push
pop
aad
fdivr
cs
repnz
(bad)
jne
mov
hlt
mov
sbb
sub
mov
xchg
mov
jmp
xchg
mov
jg
or
daa
movs
clc
fwait
sbb
xchg
xlat
sti
dec
inc
sbb
in
sub
out
adc
mov
mov
fwait
sbb
cmp
push
adc
jecxz
sub
jle
xchg
adc
cmp
sub
dec
xor
adc
add
and
pop
and
loope
push
sub
inc
adc
fild
sbb
xor
call
cmp
stos
push
retf
push
lahf
fcomp
sub
sbb
jne
movs
or
mov
mov
imul
test
mov
cmc
ds
mov
cmps
icebp
sahf
retf
pushf
push
imul
pop
sub
pop
inc
mov
mov
xor
(bad)
retf
sbb
jge
add
neg
jnp
ins
inc
repnz
pop
ror
fdiv
fstp
jmp
in
mov
movs
add
leave
sbb
retf
or
loope
or
mov
fisubr
mov
aad
(bad)
cmps
fnstsw
mov
(bad)
mov
sbb
and
mov
out
jb
mov
cmp
jne
cmp
test
jnp
bound
jne
movs
test
and
loop
(bad)
jmp
xchg
mov
idiv
fisttp
dec
dec
cmp
jne
jl
jmp
in
sbb
add
pop
xchg
pushf
mov
sahf
push
in
(bad)
sub
dec
push
pop
inc
push
mov
mov
cli
add
pushf
loop
adc
push
adc
add
mul
std
push
(bad)
jno
push
add
xor
jae
aaa
inc
mov
mov
neg
cwde
dec
pop
add
mov
push
xor
call
call
jecxz
adc
pop
push
pushf
adc
bound
jmp
popf
sub
arpl
pop
hlt
rcl
and
sbb
mov
xor
add
test
pushf
pop
(bad)
lea
cdq
push
sahf
sar
arpl
mov
repnz
cmp
fidiv
inc
mov
pop
cmc
fimul
jecxz
cmp
(bad)
mov
mov
mov
adc
pop
imul
and
cdq
es
mov
or
sbb
add
dec
stos
push
js
in
test
cs
cdq
ret
push
loope
sbb
cmp
xchg
dec
stos
cld
sbb
cmp
movs
mov
loopne
repnz
mov
repz
std
pusha
mov
cmp
mov
sub
and
aam
add
push
mov
js
ins
cmp
pop
cmc
or
cld
or
inc
dec
in
loopne
inc
loop
dec
add
stc
aas
pop
into
dec
xor
jns
rol
pop
rcl
enter
out
pop
call
mov
xor
ins
mov
(bad)
or
xchg
loope
pop
into
scas
xchg
jns
adc
jnp
pop
enter
xor
cmc
stos
xchg
inc
xchg
mov
pop
push
imul
ins
lds
sar
js
leave
movs
mov
mov
fild
movs
fld
in
ret
xchg
pusha
pop
jmp
sar
or
push
and
adc
pop
fisub
inc
jle
iret
cmc
inc
mov
sti
cwde
mov
fdiv
mov
sbb
repnz
or
adc
or
pushf
pop
sub
fstp
mov
mov
mov
sub
or
shr
fnsave
pop
xor
repnz
xor
movs
retf
or
xchg
stc
mov
aam
push
mov
repnz
or
fnsave
jge
push
stc
hlt
sar
mov
xchg
loop
xor
mov
stos
or
dec
mov
cwde
adc
cmp
sahf
aam
pop
xor
in
test
dec
mov
mov
push
ds
repnz
test
pop
add
call
and
pop
mov
lds
sahf
xor
pop
sub
mov
call
jp
into
call
sbb
and
sbb
imul
imul
ins
pop
lock
xchg
pop
mov
xor
pusha
aad
push
inc
mov
cmps
cmp
xor
lods
ds
cmp
or
jp
clc
xor
or
inc
lea
bound
dec
xor
jb
mov
imul
or
or
push
retf
rol
pop
pop
imul
fcmovb
mov
pop
xchg
inc
mov
dec
lahf
sti
and
and
test
stos
into
mov
xlat
es
pop
or
adc
je
(bad)
movs
aaa
xor
add
pop
cmc
jns
sahf
leave
jmp
test
aas
inc
popa
and
adc
push
sbb
fs
mov
and
mov
loope
inc
jl
inc
test
imul
mov
in
xor
inc
mov
pop
jmp
int
stc
ds
test
pop
xor
fdivr
push
add
ss
sub
rol
mov
std
jl
mov
fsubr
cmp
rol
sub
fs
cwde
mov
mov
loope
lds
arpl
adc
rcl
or
push
push
pop
int3
or
pop
cmp
test
adc
cmp
clc
xchg
jns
xchg
mov
pop
call
fild
adc
pop
popa
adc
sub
jmp
jo
xor
mov
pushf
mov
lods
ja
push
cwde
push
mov
lods
sbb
ret
enter
jge
fmul
push
enter
xor
jg
ret
test
mov
cmp
pop
cmp
pop
and
pop
arpl
sub
sbb
adc
gs
xchg
aam
add
fcmovu
js
sbb
dec
cli
and
dec
xor
sti
jns
adc
cmp
call
loop
cli
jae
mov
retf
push
xchg
cld
enter
xchg
in
lds
xchg
cwde
in
dec
or
mov
mov
and
pop
sahf
scas
aas
cli
mov
push
js
lods
je
pop
xor
sbb
in
cmps
and
push
mov
sti
push
leave
xchg
xchg
mov
movs
lea
xor
ins
cmp
jnp
(bad)
cmp
mov
stc
mov
ja
push
jecxz
mov
ret
fdivp
mov
xchg
dec
sub
fild
mov
pop
retf
push
cmp
pop
fwait
lods
call
xlat
mov
mov
mov
pop
mov
pop
cmp
push
bswap
cmp
ret
add
int
mov
adc
fiadd
je
add
mov
fdiv
sub
mov
(bad)
ret
mov
xor
cmps
dec
sub
mov
pushf
fisttp
and
adc
cmp
mov
pushf
mov
xor
pop
jbe
sbb
js
sar
and
pop
mov
jnp
jae
into
fidivr
cmp
inc
pop
pop
jmp
aad
pop
push
add
or
xor
and
test
test
add
sub
arpl
pop
pop
fiadd
cmp
push
dec
ficomp
call
lea
add
mov
cmps
inc
ror
dec
cmp
add
sub
xor
add
push
cmp
jnp
das
aam
rcr
cs
push
and
in
xchg
add
mov
and
fs
mov
jp
test
jne
inc
sbb
xor
pop
arpl
test
dec
lahf
push
mov
int3
push
xchg
imul
je
push
test
ror
pushf
ret
ret
jmp
ret
(bad)
xchg
pop
mov
push
pushf
mov
sub
mov
test
sti
jp
push
adc
and
cmp
add
add
push
movs
xchg
pop
sbb
inc
scas
pop
pop
addr16
jmp
fadd
xor
push
adc
or
in
aad
jmp
and
pusha
fld
mov
lea
mov
in
or
arpl
not
int
test
jbe
mov
fdiv
push
popf
xor
jl
pushf
push
rol
cmp
ror
xchg
dec
and
jbe
inc
and
mov
inc
(bad)
lods
aad
xchg
cdq
pusha
and
jl
cmp
sbb
test
shl
call
fnstenv
pushf
sbb
call
xor
pop
sub
xchg
ss
loopne
ds
loopne
xchg
or
ficom
sbb
sub
xchg
repz
stos
mov
call
pop
pop
adc
fiadd
jle
inc
sub
lods
std
ror
or
aam
fdiv
sub
cwde
cmps
aaa
dec
xchg
inc
or
mov
adc
nop
ja
out
data16
and
int3
pop
movs
fld
aad
mov
push
rcl
(bad)
adc
sbb
neg
push
stos
jb
je
xchg
sbb
push
sahf
pusha
add
cwde
aam
not
jbe
xchg
pushf
shr
mov
mov
mov
ins
fidivr
imul
mov
push
or
push
or
push
adc
ins
rcl
popf
(bad)
mov
inc
xor
loopne
add
out
stos
rol
push
cli
jmp
push
xchg
inc
adc
popf
test
mov
call
mov
out
dec
add
add
stos
dec
cli
push
loope
sbb
fwait
jno
mov
sub
mov
jg
push
push
cmp
fiadd
xor
and
ret
je
nop
jnp
pop
sbb
cmp
add
jmp
jmp
push
mov
and
(bad)
shl
jmp
add
xchg
cmp
daa
xchg
mov
and
xor
mov
repnz
cmp
adc
jne
ss
rcl
mov
xchg
pusha
mov
adc
or
mov
add
lods
sbb
ret
pushf
mov
test
xor
bound
push
jp
aam
mov
push
call
ret
fimul
scas
jnp
ds
cmps
push
loop
in
in
arpl
(bad)
(bad)
jmp
sbb
cmc
rol
adc
sub
mov
fwait
mov
and
(bad)
inc
mov
dec
mov
stc
imul
jle
cmp
cmp
push
inc
or
adc
and
and
mov
and
mov
add
imul
(bad)
ret
xchg
xor
loopne
push
pushf
mov
jp
fs
push
repz
aad
(bad)
pop
retf
pop
scas
or
cmp
xor
xchg
mov
xchg
aam
pop
push
and
adc
cmp
jae
jne
xor
push
and
or
mov
and
mov
xchg
pop
daa
adc
push
inc
leave
pop
mov
cmps
dec
shr
xor
push
inc
pop
or
inc
xor
fistp
push
fcomp
mov
ja
inc
sti
pop
and
and
and
cmp
jno
add
shl
lea
cmp
ds
push
stos
xchg
pop
add
dec
clc
pop
test
sub
fnstenv
nop
call
(bad)
jmp
call
lock
call
xchg
(bad)
mov
mov
jp
mov
imul
add
adc
xor
xchg
jp
into
(bad)
popa
xor
hlt
fimul
push
sbb
aad
jbe
aad
stc
xor
mov
mov
xchg
fnstenv
mov
das
jmp
es
in
and
add
mov
leave
ret
repnz
leave
jnp
sub
sbb
xor
fild
adc
xchg
add
ja
inc
mov
loopne
sub
add
lds
imul
xchg
ret
ficom
je
push
outs
test
les
xchg
mov
mov
xor
int
push
mov
sub
and
popa
inc
xchg
les
xor
sbb
mov
and
pop
ja
jb
push
repz
pusha
mov
mov
inc
cmp
mov
mov
sbb
je
js
dec
ret
jmp
and
mov
mov
jge
cmc
je
adc
clc
mov
cmp
xor
xchg
enter
pusha
out
and
out
outs
push
pop
sbb
xchg
loope
inc
aad
or
ror
idiv
mov
add
adc
mov
and
sti
push
fsub
mov
test
sub
xor
dec
inc
sahf
pop
cmps
xor
cmp
jmp
add
lods
mov
dec
jae
jp
loope
mov
mov
call
sub
lods
int3
fiadd
jne
pop
adc
jmp
(bad)
dec
je
push
loope
retf
pop
gs
addr16
sbb
fdivr
sbb
push
pop
adc
cmp
adc
xchg
xor
dec
popf
push
and
push
cmp
es
inc
mov
pusha
mov
pop
adc
sub
jbe
loopne
xchg
adc
xchg
rol
fwait
ja
lds
and
xor
scas
fisttp
sub
add
ss
ss
js
shl
and
push
out
adc
pop
add
dec
xor
cmp
sbb
call
jp
sar
xor
mov
enter
pop
push
sbb
cdq
cmps
or
bound
xchg
cwde
push
mov
add
pop
test
out
xchg
sub
mov
adc
not
rcl
mov
daa
scas
xor
dec
push
test
pop
jo
jecxz
push
test
xor
fcom
out
push
sbb
in
cmps
dec
push
and
push
inc
jo
ret
enter
jbe
fwait
mov
inc
sbb
or
add
call
mov
mov
inc
imul
cwde
movs
out
je
pop
cli
dec
push
adc
(bad)
aaa
movs
dec
cwde
mov
pusha
(bad)
fsub
popf
or
pop
test
mov
test
mov
or
stos
les
mov
or
mov
jnp
xor
sub
mov
mul
or
pop
push
test
xchg
xchg
test
xor
ret
and
pop
clc
adc
movs
push
push
inc
jg
(bad)
ins
std
jns
out
adc
fild
out
popf
leave
mov
loope
stc
cmp
es
or
out
push
and
mov
jl
rol
(bad)
sub
xor
adc
cmp
cmp
cmp
fnstsw
rcl
and
or
scas
mov
rol
inc
ja
and
fs
pushf
cwde
movs
jl
lahf
push
jmp
inc
xchg
mov
mov
xor
fnstenv
loope
das
cmps
mov
mov
test
ja
sbb
xor
pop
mov
xor
cmp
das
jl
icebp
test
dec
inc
mov
aas
mov
sub
sbb
imul
push
test
and
stos
mov
pusha
and
jae
pop
popf
pop
cmc
ss
xchg
cld
jmp
rcr
xchg
mov
mov
mov
jne
leave
mov
pop
or
xor
scas
into
xchg
ja
mov
lds
(bad)
stc
mov
xor
mov
loope
xchg
jmp
fst
ret
cmp
cmpxchg
ds
sti
mov
jb
addr16
ror
into
or
or
inc
push
and
push
popa
sbb
push
dec
ins
fs
jl
nop
sbb
or
dec
test
punpckldq
ins
mov
add
outs
in
retf
xor
sar
push
ret
pop
add
mov
sbb
cmp
outs
push
or
lods
add
sub
pop
sub
not
(bad)
stos
inc
bound
(bad)
aaa
cli
stc
in
and
cmp
cmp
or
jl
add
popf
push
cmps
adc
xchg
adc
(bad)
push
mov
stos
xchg
push
mov
mov
sbb
mov
and
addr16
push
mov
je
inc
jl
mov
xchg
push
mov
jge
or
push
mov
mov
xchg
sub
adc
adc
(bad)
push
stos
adc
jmp
lea
outs
call
or
lahf
dec
jb
push
sbb
mov
jae
xchg
mov
jno
cmp
and
fyl2xp1
sti
into
mov
cmp
mov
or
push
fstp
jo
pop
imul
stc
mov
test
(bad)
es
pop
and
jno
test
mov
fwait
cli
aad
inc
xchg
xor
mov
fnstsw
popa
xor
inc
not
pusha
xchg
inc
call
cmc
dec
mov
in
aaa
sbb
xchg
idiv
mov
test
enter
jp
adc
sub
or
popa
fstp
pop
test
aad
dec
push
dec
jl
xor
inc
mov
sbb
xchg
cmp
out
sbb
call
pop
daa
xchg
pushf
test
cmp
fisubr
jecxz
sub
xor
adc
mov
(bad)
repnz
and
dec
mov
add
imul
sahf
inc
push
sbb
xor
retf
shl
inc
das
imul
inc
push
mov
in
jge
retf
dec
pop
cmp
mov
pushf
sub
(bad)
push
dec
mov
cmps
mov
cmp
push
xor
je
aas
arpl
sbb
inc
fild
xor
repnz
adc
xchg
sbb
data16
clc
xchg
xchg
pop
(bad)
retf
in
jle
jo
jb
sbb
push
cmp
stos
test
cmc
cmp
arpl
add
jae
xor
mov
ret
fsub
adc
test
or
xor
out
es
mov
cli
or
add
cdq
ss
cwde
test
jae
test
jge
xchg
sub
loopne
in
xchg
mov
mov
lods
pop
pop
addr16
mov
pop
(bad)
xchg
iret
outs
and
and
jge
and
dec
and
jae
cmp
(bad)
not
push
pop
mov
sbb
fst
addr16
adc
call
adc
outs
mov
fstp
test
sbb
pavgw
aaa
cmps
outs
outs
int3
dec
pop
scas
test
in
out
push
sbb
cmovs
mov
icebp
ins
sahf
jge
sub
in
xchg
jbe
jl
popa
std
sti
out
mov
or
ins
cmp
(bad)
xlat
shr
lahf
popf
in
mov
adc
inc
mov
das
xchg
mov
push
shl
outs
xor
sbb
aaa
push
in
inc
lock
adc
jecxz
(bad)
sub
xchg
sti
jmp
dec
pop
dec
into
loop
mov
mov
adc
push
pop
jp
inc
or
repnz
ins
mov
mov
mov
jae
sar
inc
sbb
jnp
xor
aam
xchg
dec
int
push
in
lock
jmp
sub
shr
jmp
push
jecxz
push
mov
addr16
hlt
fchs
xor
mov
fstp
aam
std
out
sbb
jg
sub
aas
rol
jno
dec
int
lock
outs
aaa
in
test
dec
scas
sub
cdq
or
inc
ja
jmp
jg
cli
test
pop
add
and
scas
lahf
clc
scas
dec
or
iret
dec
(bad)
sbb
lods
sub
mov
sbb
or
icebp
mov
outs
call
and
lock
je
int3
push
or
push
push
xchg
dec
cmovae
repnz
cmc
in
push
xchg
in
xchg
icebp
xor
pop
int
lahf
xchg
xchg
into
jecxz
ja
mov
add
loop
ret
cld
loopne
les
adc
icebp
jo
call
pushf
div
xlat
jmp
icebp
xchg
xchg
xor
mov
mov
outs
push
or
sbb
xlat
scas
fld
test
(bad)
stos
test
stc
dec
pop
xor
xor
jo
fisub
adc
mov
leavew
xor
adc
loopne
and
fcomi
retf
(bad)
jns
cmp
sbb
in
sahf
cmp
mov
push
(bad)
stos
pusha
loop
inc
shl
dec
inc
rcr
stc
adc
das
push
sar
aad
ror
sub
int
ss
fwait
outs
ret
inc
cmp
(bad)
call
cli
loop
addr16
mov
sub
dec
dec
or
outs
adc
mov
dec
enter
fsub
into
pop
jmp
inc
shl
add
outs
shr
dec
(bad)
call
aaa
daa
mov
add
adc
lods
aas
pop
lods
push
fwait
clc
lods
jmp
(bad)
call
jns
pop
dec
scas
jmp
cmps
rcr
pop
dec
test
div
dec
rcr
idiv
and
sub
mov
imul
add
xchg
(bad)
pop
and
outs
ret
imul
scas
cmc
(bad)
ja
sub
mov
mov
test
(bad)
int
sahf
mov
sti
cmc
adc
xor
lods
or
push
adc
mov
inc
xlat
fadd
jae
ret
dec
imul
sti
sbb
outs
retf
das
out
ret
adc
nop
movs
cmp
dec
cwde
inc
mov
dec
mov
cs
or
adc
push
test
psadbw
enter
retf
stos
je
in
std
sbb
mov
ds
in
daa
imul
push
out
fwait
(bad)
stos
jmp
not
int
aas
pop
push
pop
sahf
in
xchg
or
or
(bad)
xchg
aaa
aas
sbb
(bad)
fcom
sbb
sub
shr
fwait
call
dec
pop
repz
das
in
mov
into
ins
fdiv
clc
cli
cmp
fisubr
adc
ins
push
adc
and
or
in
int3
sub
(bad)
lods
mov
mov
dec
lods
mov
mov
out
enter
jmp
jp
sbb
int
fnsave
ja
mov
nop
push
xchg
jge
dec
popf
lods
dec
dec
iret
xchg
pushf
cmps
dec
scas
outs
sub
lods
out
mov
call
and
and
dec
test
out
das
sub
imul
lds
or
das
sub
or
pop
mov
sbb
jno
ficom
mov
std
(bad)
scas
das
test
inc
cli
rep
repz
ret
jg
cmc
pusha
jecxz
imul
rol
int3
enter
out
mov
mov
xlat
pop
inc
in
loop
(bad)
mov
xchg
imul
jg
inc
xadd
gs
mov
std
sti
cmps
and
lods
hlt
xchg
mov
sub
sub
mov
sub
out
sub
int
pusha
(bad)
int3
daa
jmp
mov
imul
retf
push
sbb
es
cdq
jo
jmp
add
adc
dec
popf
mul
pop
enter
dec
pop
outs
stos
fcmovnu
clc
js
or
add
retf
outs
inc
out
loopne
loopne
call
cld
or
inc
(bad)
mov
idiv
sub
outs
iret
push
je
mov
mov
rol
scas
mov
add
mov
jno
push
cld
ret
mov
repz
jle
stos
jo
test
pop
popf
dec
mov
and
sub
jmp
lea
mov
movs
rol
and
mov
aam
loopne
sub
retf
sub
ins
out
inc
pop
cmp
sbb
sub
push
cmps
xchg
sbb
jns
or
pushf
or
cld
mov
mov
dec
or
int
xchg
outs
enter
ja
jmp
std
cmps
lahf
pop
stos
ins
or
das
sub
neg
ins
dec
pop
dec
and
cmp
out
ret
ja
mov
sar
push
out
xchg
ret
cs
pop
idiv
popf
cld
dec
ds
sub
mov
test
inc
mov
(bad)
cmp
inc
(bad)
(bad)
call
sti
dec
jnp
imul
into
push
ja
or
fiadd
call
xlat
(bad)
dec
imul
(bad)
leave
or
cmps
ret
daa
out
movs
shl
aas
dec
sub
adc
mov
mov
sbb
test
mov
pop
cs
jmp
(bad)
lods
mov
jecxz
xor
test
xchg
leave
push
and
out
scas
test
ret
loopne
test
in
dec
cld
add
rcr
or
mov
jmp
scas
addr16
pop
mov
lods
xlat
outs
and
mov
call
jmp
enter
mov
ins
daa
test
or
test
sub
add
fwait
pop
outs
imul
fst
imul
add
mov
arpl
xchg
icebp
push
arpl
sub
arpl
pand
in
xor
ins
outs
scas
popa
push
imul
jg
mov
jmp
jmp
xchg
add
leave
lods
lods
or
cmp
pop
outs
test
std
xchg
sub
outs
in
mov
push
rol
fcmovne
rcl
mov
mov
mov
test
or
lock
pop
sbb
dec
xchg
cs
fisub
outs
std
mov
sub
add
repnz
add
mov
and
ficom
jne
les
fwait
pop
imul
push
mov
(bad)
stos
out
fucomi
popa
fisttp
jecxz
aam
into
sub
enter
(bad)
mov
aaa
in
int
mov
aaa
fwait
(bad)
ins
jnp
test
xchg
jae
mov
out
int3
pop
mov
xor
xlat
dec
ins
ja
mov
cs
sub
ja
iret
push
(bad)
sbb
sar
mov
cld
or
push
pop
ins
loope
jnp
pop
ror
pop
adc
stc
movs
mov
xor
movs
push
jae
jecxz
ret
in
sti
inc
fld
int
and
mov
das
ins
repnz
enter
pop
jecxz
jmp
push
das
sub
mov
mov
cmp
call
xchg
cmc
test
ins
jmp
dec
pop
scas
jmp
mov
popf
mov
imul
push
adc
dec
clc
or
(bad)
out
ds
jecxz
pusha
rcr
fcomp
or
cmps
fidiv
fisttp
lahf
add
in
push
std
aas
mov
movs
in
ret
aas
sbb
cmps
int3
xchg
sub
mov
add
xor
lock
xchg
cmps
or
loope
repz
ficomp
push
into
ror
in
addr16
out
in
retf
pop
jle
in
aaa
ja
ja
or
inc
imul
mov
xchg
outs
int3
arpl
xor
cli
xchg
repz
dec
retf
repz
lahf
or
cs
aaa
pop
dec
jns
loop
loopne
retf
cmps
(bad)
movs
jmp
das
mov
xor
aad
shl
jnp
cmp
out
loopne
xor
movs
xlat
movs
out
leave
pop
mov
dec
pop
lds
mov
add
in
xchg
call
sub
imul
sar
mov
push
aas
loop
cmp
lock
pop
lods
inc
xchg
retf
jmp
shl
mov
jmp
out
ins
int
or
fisttp
dec
add
lea
add
mov
jbe
ins
in
std
fcom
jecxz
sbb
cmps
mov
clc
pmulhw
or
scas
add
mov
out
icebp
dec
ins
std
xchg
sar
xchg
fmul
sub
sbb
adc
outs
jmp
jmp
mov
popf
xchg
pop
xchg
sub
fldl2e
rcr
in
xchg
xchg
mov
out
leave
dec
aas
and
dec
sub
inc
sub
lods
sbb
push
mov
in
mov
fisttp
(bad)
mov
sbb
cmp
add
(bad)
jns
popf
and
lahf
sar
lock
loopne
dec
test
push
test
xchg
test
mov
cmps
fild
imul
outs
movs
dec
inc
sbb
inc
fdiv
lahf
outs
leave
fsubr
xor
(bad)
lods
out
dec
aaa
(bad)
loopne
xchg
mov
cmps
cmp
pop
pop
inc
(bad)
xchg
or
lds
out
inc
movs
mov
pop
(bad)
mov
pop
mov
pop
jmp
maxps
lods
jg
mov
call
imul
(bad)
xchg
push
mov
out
scas
lods
jecxz
retf
push
ret
sub
stc
pop
pop
ja
sahf
dec
(bad)
dec
sahf
dec
mov
mov
dec
imul
pop
stos
scas
cmp
jg
dec
xchg
cmp
mov
pop
push
jmp
(bad)
scas
jecxz
ins
cs
cmps
jl
fild
ret
lahf
outs
or
test
in
mov
popf
jnp
es
lods
mov
jg
or
mov
outs
mov
mov
stc
pushf
dec
mov
fstp
out
fisubr
or
in
stc
ins
inc
(bad)
jecxz
cmps
push
mov
hlt
push
mov
jmp
or
addr16
enter
loope
pop
clc
lea
outs
daa
dec
add
mov
into
jmp
cmovl
ret
jmp
mov
push
iret
arpl
pop
push
mov
or
pop
jecxz
imul
daa
(bad)
lods
cmp
mov
jle
mov
lock
fistp
imul
imul
dec
ds
in
std
enter
ds
retf
dec
frstor
adc
cmps
cs
mov
dec
imul
inc
mov
or
push
push
fstp
(bad)
fisubr
daa
addr16
sti
jmp
sbb
scas
iret
sbb
sbb
fisttp
scas
retf
jae
retf
icebp
pop
fnstcw
xchg
addr16
movs
mov
pop
std
mov
push
iret
enter
loope
push
mov
scas
imul
out
xchg
cmp
cdq
xchg
test
xchg
int
jecxz
pop
retf
mov
ja
loopne
test
imul
jnp
les
test
mov
addr16
xor
lahf
in
mov
inc
lods
mov
or
jecxz
ins
in
mov
xchg
test
cmp
das
dec
push
jecxz
mov
imul
xchg
mov
mov
push
data16
mov
data16
jg
xchg
cmp
outs
pusha
jmp
mov
iret
in
sar
push
retf
je
popf
jns
iret
cmps
(bad)
into
fsubr
mov
inc
call
ret
cmps
ins
jmp
xor
outs
mov
jmp
sti
pop
test
rcr
(bad)
cs
mov
lahf
inc
repnz
rol
jp
aas
scas
outs
inc
in
cmp
gs
neg
shl
adc
pop
cli
inc
cdq
je
sub
sub
in
out
in
sahf
mov
outs
scas
xor
pop
pop
push
dec
(bad)
or
int
std
jmp
cld
mov
dec
stos
xor
jbe
(bad)
jae
fild
in
lahf
pushf
dec
test
xlat
dec
lea
(bad)
fmul
movs
retf
daa
scas
call
das
mov
ret
dec
fdiv
mov
cmp
rcr
pop
dec
gs
mov
jmp
pop
mov
jle
mov
sbb
(bad)
scas
test
mov
gs
add
sahf
push
dec
ret
fstp
pop
dec
int3
lods
iret
push
xor
test
xor
call
scas
test
mov
jmp
leave
cmp
gs
pop
or
leave
mov
cs
and
xchg
and
test
mov
aad
out
xchg
sahf
push
pop
sub
jg
mov
push
mov
fcmovnbe
mov
aam
mov
mov
ret
movs
xchg
dec
mov
call
aaa
(bad)
addr16
loopne
pushf
test
adc
xlat
ja
push
sbb
pusha
stos
arpl
in
jmp
push
mov
outs
or
(bad)
cdq
or
imul
dec
outs
fnstcw
in
xchg
aam
and
(bad)
das
ror
push
out
xchg
fcos
jle
repnz
repz
mov
test
neg
pop
jg
(bad)
sub
out
out
sub
push
dec
std
stos
arpl
mov
adc
add
mov
mov
scas
leave
(bad)
popf
mov
out
mov
mov
stos
aas
(bad)
loope
dec
into
ret
outs
dec
js
lahf
xor
xchg
cmp
dec
loope
sub
int
cwde
mov
cld
dec
xchg
or
aad
and
stos
mov
prefetch
or
out
loopne
in
shr
jle
in
pop
neg
sub
mov
in
add
add
scas
sub
pop
cmc
fisttp
cmp
enter
fiadd
fimul
or
dec
movs
out
outs
imul
test
fld
jg
jle
mov
cmps
or
imul
in
repnz
xlat
cld
popa
daa
test
dec
adc
or
imul
and
mov
outs
movs
cmp
xchg
pop
pop
dec
into
hlt
adc
push
addr16
lods
jae
or
jle
cs
int
nop
dec
or
lods
pop
fild
mov
aas
ins
jecxz
jne
sahf
add
inc
sub
outs
rol
pop
sahf
or
pop
cmps
scas
inc
loope
inc
xor
lods
add
das
push
scas
das
mov
dec
xor
dec
sub
mov
push
ja
mov
dec
sahf
jne
cmps
mov
shl
add
dec
fild
inc
(bad)
ins
int
jns
xchg
daa
leave
push
ja
xchg
fwait
xchg
cld
fisttp
clc
and
das
or
lods
test
pop
std
pop
xchg
or
outs
dec
push
mov
fistp
or
fiadd
pop
fld
push
aas
into
push
and
ror
(bad)
jmp
imul
mov
pop
(bad)
sbb
ror
adc
ja
pop
aam
dec
ja
call
test
dec
iret
enter
pop
adc
dec
jecxz
call
mov
xchg
fwait
mov
ror
iret
dec
lahf
stc
mov
cwde
lds
jae
and
lods
stos
scas
gs
mov
inc
enter
xchg
xchg
scas
int
data16
loope
repz
jmp
(bad)
sub
and
jmp
mov
mov
lods
cs
push
inc
frstor
ins
xchg
mov
out
out
mov
scas
stos
lea
mov
out
(bad)
call
test
and
repnz
dec
mov
sti
mov
dec
and
lock
retfw
xlat
mov
or
les
ret
xchg
jecxz
cmp
jecxz
sbb
arpl
or
adc
jecxz
(bad)
sbb
xchg
shr
pop
leave
sbb
mov
or
fisubr
sti
std
lahf
cmp
pop
stos
cmps
(bad)
popa
iret
lea
out
jge
jge
out
push
fisubr
xchg
inc
mov
adc
mov
(bad)
bound
out
cmps
or
jle
and
pop
mov
push
fstp
or
out
arpl
cmp
out
jns
ja
das
mov
pop
daa
imul
mov
push
out
mov
aaa
ds
rol
fld
jmp
dec
pop
int
daa
ja
leave
test
ins
out
mov
push
mov
cmp
dec
fucompp
dec
xor
cmp
inc
dec
movs
stos
fs
xlat
daa
popa
push
push
out
stos
ins
or
std
pop
mov
rol
out
jae
int3
mov
cmps
scas
or
out
in
daa
sbb
or
or
cmp
pop
iret
scas
popa
dec
out
loop
ds
imul
leave
dec
out
cmps
jg
fdiv
ret
sahf
dec
in
sti
mov
jmp
mov
jecxz
out
mov
out
pop
mov
jle
mov
ret
add
xchg
imul
iret
dec
pop
repz
stc
daa
ins
shr
int
jmp
cmc
mov
xor
sti
pop
push
inc
test
arpl
dec
adc
test
add
jmp
lods
mov
dec
icebp
stos
sar
inc
fisub
cmps
fild
stos
enter
data16
rcr
jge
sub
cld
imul
mul
lea
dec
sbb
cdq
mov
or
xchg
(bad)
sub
push
sahf
out
jecxz
daa
mov
dec
int
fs
(bad)
jmp
lahf
scas
ror
or
fisttp
pop
jg
adc
and
xor
(bad)
outs
in
mov
data16
mov
out
push
outs
inc
inc
inc
repnz
inc
dec
movups
mov
inc
jecxz
daa
or
jmp
ins
call
clc
sbb
data16
scas
inc
lock
push
test
retf
outs
je
inc
test
pushf
aas
pop
stos
movs
arpl
sub
cld
mov
xchg
add
mov
add
mov
aaa
pop
ss
and
mov
sub
dec
mov
dec
(bad)
cmovs
loop
in
add
idiv
fcomi
icebp
pushf
(bad)
mov
cdq
inc
jg
out
jg
das
loop
lahf
dec
pop
pop
ins
imul
pop
lahf
lods
inc
add
adc
jle
fmul
(bad)
loopne
dec
mov
jmp
add
(bad)
jb
mov
mov
lods
push
jno
jne
ror
jbe
ds
jno
pop
dec
(bad)
pop
ss
lahf
stos
push
ja
bound
jmp
and
push
fstp
data16
iret
cmps
call
dec
int3
gs
xchg
jmp
push
loop
xchg
xor
pop
in
sub
clc
push
fs
lahf
ins
push
sahf
mov
jns
mov
lods
outs
ja
idiv
xor
ficom
push
sub
nop
jle
sahf
pop
jmp
sbb
xchg
div
mov
out
dec
pop
out
adc
shl
jp
stos
sub
(bad)
lods
fidivr
inc
xchg
sar
(bad)
pop
not
adc
(bad)
fcom
xchg
xor
xchg
outs
jle
ins
sub
into
arpl
mov
pusha
sbb
es
xchg
lock
and
jge
jno
sub
(bad)
adc
inc
in
sub
cdq
mov
add
inc
cli
out
ds
out
push
outs
sbb
mov
aad
mov
cmovns
outs
ds
repz
sbb
pop
jmp
jae
outs
int3
dec
cmp
iret
dec
cwde
iret
mov
sub
lock
out
jp
(bad)
xor
sub
pop
jge
mov
or
test
pusha
dec
in
sbb
sar
ret
inc
out
addr16
mov
cmp
not
mov
sahf
hlt
outs
stc
clc
cmps
xchg
clc
sub
xchg
mov
ja
and
les
jecxz
sar
sbb
loopne
(bad)
(bad)
(bad)
ja
or
cdq
jbe
retf
into
lds
dec
push
or
cmp
movs
les
pop
inc
cmp
repz
jmp
inc
(bad)
pop
push
scas
sub
fsubr
sbb
fsub
ja
dec
pop
movs
inc
adc
loop
sar
sbb
loopne
fisttp
mov
push
pop
fistp
ja
push
or
push
popf
xchg
aam
(bad)
xor
mov
(bad)
or
std
mov
fnstcw
movs
add
mov
ss
push
out
daa
jbe
out
mov
push
retf
add
mov
jle
scas
std
mov
sar
lds
mul
test
jmp
dec
popf
rep
ret
or
push
js
inc
or
xchg
or
mov
jge
mov
or
sbb
jmp
sub
and
(bad)
jne
mov
push
(bad)
dec
retf
(bad)
dec
cld
pusha
iret
pop
xor
icebp
sub
rol
imul
(bad)
xchg
jne
call
jp
es
cmps
lahf
add
icebp
and
movs
data16
add
or
sub
(bad)
rcl
push
(bad)
inc
mov
lods
xchg
je
cwde
(bad)
in
add
push
(bad)
int3
jmp
(bad)
push
out
push
jmp
ja
cmc
addr16
sbb
sub
sahf
cmp
or
retf
xchg
or
xchg
mov
sbb
pop
enter
fst
or
lock
cmps
test
das
sub
mov
mov
push
mov
es
inc
jmp
cmp
outs
test
retf
shl
test
sti
jb
iret
mov
push
push
ss
test
fs
pop
loopne
mov
mov
loopne
loopne
mov
std
nop
jbe
rcr
sbb
or
jno
mov
xor
xor
ja
popf
lock
mov
dec
es
dec
mov
pop
(bad)
fidiv
inc
jmp
add
rcl
cmp
or
sbb
repz
stc
inc
pushf
int
call
adc
clc
imul
adc
and
jle
fdivr
scas
mov
stos
and
cmp
inc
ret
mov
out
xchg
imul
aas
fsub
ret
add
iret
or
jge
push
imul
xor
sbb
loopne
pop
shr
mov
mov
int3
outs
hlt
xor
add
jno
adc
lock
sub
jecxz
mov
dec
into
xchg
push
inc
rcl
sub
ds
xchg
test
jb
clc
(bad)
mov
(bad)
stos
add
imul
shl
sub
test
aas
dec
lea
ds
gs
xor
cmp
xchg
mov
xchg
div
pop
xchg
push
push
cmp
mov
xchg
addr16
arpl
in
mov
ds
std
test
push
dec
out
xchg
cmp
push
movs
push
outs
call
dec
(bad)
dec
div
sbb
hlt
jo
js
mov
call
sbb
jle
mov
dec
sub
retf
int
cmps
iret
jbe
sub
sub
stc
mov
sub
rcr
arpl
xchg
pop
or
retf
scas
setp
jnp
jne
fbstp
xor
fimul
sub
aas
(bad)
(bad)
pop
or
mov
jle
or
out
jl
xor
into
adc
and
jmp
lods
jg
fild
loopne
outs
xchg
push
sub
xchg
or
mov
push
ror
ss
dec
pop
or
cs
addr16
gs
outs
movs
jge
jp
sbb
std
(bad)
mov
lds
jbe
or
sub
mov
xor
xor
je
xchg
sub
adc
add
adc
sub
ret
pop
das
or
pop
dec
pop
push
pop
mov
adc
gs
lods
outs
sub
imul
add
dec
xor
enter
int3
push
out
mov
loope
and
loop
mov
push
xor
xchg
stc
scas
xor
adc
cmp
and
cmp
and
xor
sub
mov
fdiv
mov
adc
or
sub
push
jb
stc
push
push
icebp
pop
xchg
out
xchg
lock
clc
pusha
fdivrp
adc
jg
nop
(bad)
arpl
das
push
adc
add
xor
(bad)
cmc
adc
shl
fwait
mov
sbb
adc
push
out
xchg
adc
adc
adc
fbstp
dec
push
xor
hlt
sbb
nop
imul
loopne
pop
rcr
fisubr
jae
adc
inc
cs
mov
or
xchg
das
push
xor
add
mov
jecxz
add
test
outs
add
das
pop
sbb
inc
out
stos
jg
jl
outs
loop
jne
shr
popf
aad
cmp
lods
add
out
inc
das
pop
mov
fwait
lods
jo
xor
das
aad
sbb
ss
xchg
fimul
xor
jge
and
test
enter
inc
ret
and
mov
retf
loop
test
movs
ins
clc
inc
mov
jge
jmp
stos
adc
jl
pusha
fwait
push
push
mov
mov
lods
dec
ret
retf
lock
pop
inc
or
in
push
jnp
dec
mov
scas
adc
aam
xor
mov
stos
cs
push
mov
cmp
movs
sbb
push
int3
push
cmps
push
adc
imul
xor
xlat
cmp
aas
das
(bad)
xor
pop
cld
and
and
inc
fwait
sub
ret
sub
jnp
add
sub
lods
jp
lahf
add
(bad)
stc
sahf
dec
ds
mov
sbb
sbb
push
cli
std
imul
cmp
popa
push
sub
push
sahf
adc
cli
pushf
outs
mov
jnp
push
data16
pop
xchg
mov
pop
xchg
in
(bad)
ss
jmp
xchg
scas
or
cwde
aaa
ss
pop
sahf
cmp
sub
out
out
or
mov
sbb
and
push
push
lea
adc
cmc
push
sub
xlat
adc
mov
push
pop
push
lds
pusha
cmp
gs
ficom
sbb
repz
inc
addr16
aam
sti
jmp
stos
hlt
xor
push
lods
or
push
test
jle
inc
mov
or
xchg
xor
mov
mov
(bad)
mul
repz
sbb
imul
outs
lods
retf
fwait
sub
or
sar
das
xchg
scas
adc
jmp
frstor
test
sbb
test
std
push
xchg
jo
ret
out
mov
pop
and
dec
fsubr
sub
out
leave
sub
in
fsubr
mov
pop
mov
je
cmps
shl
aad
jae
aad
popa
dec
mov
dec
fcomp
sahf
xchg
adc
(bad)
out
add
leave
push
push
cmp
movs
cmc
dec
pop
dec
jmp
scas
or
push
jns
icebp
cs
retf
clc
and
xchg
rcr
inc
(bad)
imul
mov
(bad)
mov
shl
jo
scas
add
repz
retf
add
js
data16
adc
outs
or
mov
adc
cmp
ret
jge
and
adc
sar
das
pop
sti
jns
cmp
adc
inc
int
imul
imul
pop
jbe
loope
jge
push
je
or
pop
rcl
or
leave
mov
cwde
adc
add
aaa
push
or
ja
outs
mov
sbb
enter
push
iret
(bad)
les
xor
into
mov
imul
jmp
inc
xor
aaa
repz
jne
xor
fwait
ja
jl
shl
add
test
or
retf
mov
imul
fucompp
int
in
cmc
sub
into
imul
xchg
and
pusha
mov
mov
(bad)
sub
iret
cmc
sbb
ret
pop
in
adc
je
jg
cdq
cwde
shl
mov
aas
cmc
push
in
jmp
retf
mov
xor
sbb
sbb
pop
sbb
xchg
or
fsub
push
add
leave
inc
test
xor
jne
out
inc
loop
dec
xchg
popf
sub
add
jmp
sbb
xor
cli
cld
push
push
(bad)
jle
neg
mov
sbb
fisubr
jmp
out
fwait
sub
leave
stc
(bad)
mov
cmp
call
pop
daa
mov
xlat
cmps
jecxz
xchg
scas
mov
ins
adc
cmp
or
aaa
imul
jo
cwde
out
add
sar
jmp
push
mov
mov
xchg
push
cmps
test
(bad)
pop
cld
mov
test
mov
xor
les
pop
xor
xor
repz
pop
pop
or
std
sub
pop
xor
mov
cmp
repz
jno
and
std
sub
addr16
pop
pusha
or
lods
and
pop
push
xchg
add
xor
jl
pop
fsub
pop
imul
rol
out
add
mov
pop
fdiv
pop
adc
mov
(bad)
push
ss
stos
imul
add
pusha
jae
sbb
sub
sub
or
xrelease
push
cmp
jmp
push
mov
je
movs
lea
mov
pop
jns
sub
lods
pop
movs
lods
xor
fwait
mov
int3
push
mov
rcl
cmc
cmp
stos
stc
leave
adc
sbb
push
push
or
sbb
js
call
push
ss
div
mov
outs
adc
(bad)
and
out
fild
movs
call
test
retf
push
jmp
inc
xor
cmp
dec
inc
fcmovnbe
test
test
xor
cmps
mov
xor
add
fiadd
add
sub
push
push
lds
test
out
aad
adc
adc
add
mov
xchg
inc
xchg
retf
iret
push
xor
in
push
dec
jbe
outs
mov
out
(bad)
and
enter
xchg
jl
mov
data16
jno
mov
jno
mov
add
cdq
enter
ror
cmps
jb
xchg
call
adc
jmp
repnz
adc
arpl
in
ficomp
jecxz
retf
outs
mov
and
push
sub
call
retf
jnp
dec
xchg
loope
dec
mov
xchg
sbb
cmp
mov
xor
push
and
stos
sub
add
scas
dec
sub
adc
mov
cmps
ins
dec
das
mov
xor
add
mov
xchg
xchg
sar
mov
add
gs
sbb
lea
dec
retf
inc
imul
sbb
lods
dec
or
lods
hlt
jno
cli
fisub
adc
aaa
and
cli
jecxz
add
and
js
xor
pusha
loop
in
mov
inc
cs
fs
sub
fst
aaa
sub
push
add
lods
pop
adc
ins
mov
add
jae
test
out
shl
cmp
sub
adc
sbb
mov
xor
(bad)
push
call
mov
mov
in
call
and
inc
arpl
mov
push
push
sbb
in
mov
jne
inc
neg
aaa
push
add
jmp
icebp
push
dec
(bad)
xchg
stos
push
push
(bad)
sub
fnstcw
frstor
push
xor
adc
cmp
sub
inc
jecxz
xor
(bad)
int
or
call
fldenv
ins
jecxz
jecxz
test
pop
ss
ja
fmul
cmp
nop
dec
xchg
add
int3
push
xchg
inc
pop
add
sar
push
inc
jnp
mov
pushf
dec
enter
enter
dec
xor
pop
jns
stc
and
bnd
dec
xor
pop
mov
cmp
pop
cmp
mov
mov
mov
leave
sub
pop
bound
cmps
dec
xchg
inc
mov
xchg
xchg
pushf
inc
popf
sbb
mov
and
mov
push
inc
imul
xchg
mov
pop
stc
hlt
fs
fild
mov
enter
movs
xor
sar
sbb
xchg
push
aas
popf
pushf
ret
out
jo
pop
cmps
xchg
push
xor
popa
ins
(bad)
pushf
xchg
out
aad
pop
dec
dec
jmp
movs
mov
(bad)
mov
jge
jns
xor
mov
xor
jmp
push
jnp
dec
xlat
push
add
loop
jmp
ror
idiv
scas
xor
lods
iret
xor
xchg
xchg
dec
cmp
(bad)
jmp
lea
mov
daa
loop
scas
aas
cmp
mov
sub
xor
mov
sub
fdivr
push
push
cmps
repz
in
cmp
mov
push
mov
sbb
xchg
call
mov
cli
fnstcw
in
sbb
nop
ret
pop
aaa
mov
xchg
xchg
or
pop
add
test
dec
jecxz
repnz
ins
dec
adc
xchg
or
xor
ds
out
data16
stc
jb
fmul
out
jo
and
scas
repz
(bad)
enter
push
lods
out
stc
stos
or
cmp
or
aam
and
enter
push
sub
test
fcom
jb
shl
sub
jmp
sub
dec
push
push
mov
mov
popf
xchg
leave
dec
sbb
jbe
jns
cmps
popf
add
add
icebp
loope
jmp
fisttp
(bad)
push
pop
pop
clc
data16
pop
dec
mov
movs
push
es
inc
inc
inc
adc
xor
push
push
ins
cdq
out
dec
cmp
shl
cmp
jmp
mov
cmps
in
loopne
inc
sub
movs
dec
int3
fist
or
fisttp
pop
adc
push
sub
inc
dec
push
fst
neg
dec
push
jl
add
or
(bad)
movs
cmp
dec
add
mov
icebp
icebp
push
sbb
or
shl
inc
shl
and
or
movs
xlat
cmp
pop
jl
pop
bnd
js
mov
outs
icebp
daa
stos
fistp
jge
inc
push
jg
dec
and
ror
push
cmps
cmps
mov
es
aaa
pop
xor
mov
sbb
scas
add
pop
out
dec
enter
dec
jno
loope
in
test
sub
xlat
pop
jmp
jae
arpl
aad
and
aas
stos
rcr
ror
pop
scas
lahf
in
test
test
push
leave
sahf
inc
mov
iret
les
sahf
jbe
inc
mov
add
mov
push
shl
out
mov
pop
push
xor
popa
mov
sar
out
fstp
mov
fwait
mov
lahf
fcomp
(bad)
mov
xchg
std
xlat
add
mov
test
out
add
inc
rol
mov
mov
push
mov
push
ficomp
shl
ds
mov
outs
(bad)
movs
repz
xor
loopne
inc
and
test
into
pop
in
outs
cdq
call
sub
jg
push
sahf
mov
mov
out
sbb
sub
pushf
fidivr
idiv
retf
cwde
inc
pop
and
cmp
jge
sbb
push
add
pop
cmp
stos
pop
and
(bad)
lods
iret
mov
add
vpsadbw
mov
adc
data16
fcmovb
icebp
cmp
movs
cmp
mov
jnp
sub
fcmovnbe
push
and
fild
push
inc
jno
in
std
pop
cmp
sub
call
fdiv
jbe
dec
xchg
loop
cmps
lods
xchg
fist
add
mov
das
scas
mov
inc
xor
pop
jo
gs
fcomp
ret
push
mov
push
(bad)
push
inc
sbb
sub
cli
xor
sub
les
cmp
push
shr
dec
and
daa
out
sbb
aaa
test
ret
push
mov
je
sub
pop
jp
cdq
hlt
scas
or
xor
inc
ins
push
bound
or
inc
jo
js
xchg
mov
xor
lock
push
xor
or
scas
fwait
push
cmp
push
ins
test
hlt
outs
scas
xor
mov
pop
int3
mov
xchg
mov
sti
jns
fmul
clc
push
(bad)
inc
pop
ja
mov
xlat
sbb
add
sbb
jg
stos
sbb
pop
loop
sbb
in
mov
cmp
xchg
std
hlt
xor
or
lods
das
cmp
mov
and
and
cmp
pop
(bad)
and
dec
clc
sahf
scas
aad
outs
mov
push
out
je
add
add
xchg
(bad)
and
add
iret
mov
(bad)
pushw
outs
inc
in
mov
es
mov
inc
push
pop
cmp
lahf
in
cwde
jnp
ja
inc
test
int
or
out
xchg
adc
push
aaa
sahf
jg
ficomp
scas
jb
sub
jge
cmp
and
xchg
push
mov
adc
ins
mov
loopne
pop
jl
push
js
mov
jmp
pop
arpl
sbb
sbb
dec
imul
mov
xchg
jge
rcl
call
shl
mov
call
mov
sbb
jl
in
mov
outs
mov
mov
fsub
das
cmp
inc
xchg
ror
xor
hlt
das
(bad)
lea
mov
push
aam
retf
mov
sbb
push
loopne
test
mov
mov
xchg
push
dec
mov
dec
cld
xor
aad
inc
sub
out
dec
pop
and
loopne
push
push
ds
push
mov
lahf
adc
sbb
push
inc
push
inc
push
arpl
(bad)
mov
lea
int
mov
ret
call
and
sahf
jne
jbe
icebp
dec
and
xchg
and
int3
stc
sbb
pop
test
push
sbb
mov
inc
je
jne
bnd
in
sub
push
and
xchg
pop
jo
rep
je
push
pop
scas
mov
jge
adc
jl
mov
mov
(bad)
push
aaa
sbb
sub
mov
cvtdq2ps
cmp
call
(bad)
fbld
sahf
mov
sbb
int3
pushf
push
nop
xchg
test
enter
retf
adc
jmp
pop
inc
test
hlt
xchg
dec
iret
push
xchg
clc
sbb
push
js
push
push
out
dec
shl
inc
pop
push
add
cmp
jnp
pop
mov
xchg
mov
push
sbb
in
std
push
xchg
call
mov
test
retf
pop
adc
mov
mov
vpunpckldq
add
xor
aaa
xor
imul
ins
icebp
sahf
test
mov
mov
pusha
into
mov
push
xor
pop
cmp
and
mov
cmp
xor
pop
and
cmp
icebp
xor
ror
and
and
rol
cdq
movs
je
mov
je
js
das
(bad)
jmp
aad
push
pop
cld
aas
cmp
jbe
inc
ja
dec
inc
adc
ja
xchg
outs
push
std
fwait
scas
fwait
mov
inc
push
and
xchg
xchg
and
int
or
xor
js
and
mov
mov
sbb
sbb
adc
pop
addr16
mov
dec
add
dec
add
and
addr16
(bad)
pop
push
push
arpl
test
xchg
fldz
mov
or
add
test
and
shr
cs
sbb
xor
pop
scas
dec
aas
js
sub
jl
mov
dec
jge
cli
out
bound
sbb
jbe
jl
cmc
js
mov
rol
mov
sbb
xor
or
inc
out
push
aam
repz
int3
jl
in
cmp
pop
js
shl
cli
dec
(bad)
pop
push
mov
test
mov
cmps
sub
lock
in
mov
fild
sbb
js
mov
mov
fs
mov
out
sub
sub
sbb
clc
mov
sub
inc
cmc
call
pop
push
sub
scas
or
jp
sbb
je
xchg
cmp
mov
or
outs
aad
(bad)
(bad)
fild
pop
push
cmp
out
mov
rcr
es
adc
add
out
push
lods
xor
sbb
rcl
retf
ret
pop
push
pop
ret
and
xor
cmp
inc
xor
cmp
hlt
lods
add
pop
shl
nop
xchg
push
aam
lea
stc
test
sahf
out
mov
jp
pop
iret
inc
inc
ror
mov
mov
leave
pop
inc
das
cmc
inc
out
push
xlat
gs
test
mov
push
adc
fimul
dec
push
popf
cmc
add
retf
scas
popf
add
loop
retf
adc
push
jg
fdiv
xchg
in
push
(bad)
xor
mov
sub
addr16
inc
stc
jns
inc
lahf
ss
or
movs
xchg
cmp
pop
ficomp
(bad)
cli
nop
(bad)
hlt
sub
frstor
loopne
mov
daa
and
repz
(bad)
(bad)
mov
or
push
out
iret
pushf
int
mov
mov
jecxz
adc
mov
sub
stos
xchg
sub
push
idiv
push
add
xchg
rol
jb
repz
jg
test
mov
js
lods
(bad)
enter
fs
inc
and
(bad)
(bad)
je
rcr
enter
mov
fsubrp
sti
repnz
ins
cmps
repnz
retf
xchg
jno
pop
inc
sub
fdivr
mov
jmp
mov
ins
push
xor
pop
xor
cdq
popa
fadd
cli
lods
ret
outs
mov
in
rol
into
xor
sahf
sub
std
jae
leave
jl
test
dec
xchg
aaa
cli
jg
adc
mov
add
inc
fadd
mov
adc
ss
call
mov
sub
test
add
mov
mov
pop
add
movs
cmp
out
mov
je
cs
mov
ret
bnd
scas
fbstp
jg
sub
or
imul
popf
inc
adc
imul
push
es
enter
sar
test
push
(bad)
jmp
and
je
fsub
jecxz
dec
mov
jecxz
popa
inc
stc
sub
pop
sbb
mov
enter
sbb
mov
stc
out
pop
mov
xor
mov
jb
jecxz
retf
in
mov
aad
out
pop
in
fdivr
push
mov
out
popf
lea
xlat
mov
xchg
fsubr
pop
add
inc
rcr
inc
and
test
stos
lock
mov
mov
sub
push
sub
pop
fsubp
xchg
inc
cmp
jle
push
movs
inc
xchg
call
fcomp
or
cwde
(bad)
stos
dec
ficom
push
mov
scas
lahf
cld
xor
mov
xchg
fmul
stos
add
bound
daa
test
sub
pop
aam
es
push
mov
push
and
mov
sub
add
pop
fldcw
jne
iret
aaa
test
cwde
jae
or
sub
add
push
push
js
adc
bound
inc
dec
and
call
add
push
adc
inc
(bad)
dec
xchg
scas
aaa
xchg
xchg
(bad)
cmp
jo
and
add
(bad)
mov
xchg
lea
jle
sbb
into
idiv
aas
fs
and
inc
push
jb
(bad)
cmp
mov
std
outs
mov
or
icebp
mov
inc
push
popf
xlat
xlat
rol
outs
aam
and
sbb
test
cmc
jno
pop
fdiv
sub
jns
(bad)
in
jo
mov
outs
push
cmc
mov
mov
call
xor
les
jnp
cs
iret
xor
mov
cli
test
outs
cmps
cdq
jg
out
outs
dec
add
sbb
or
or
ins
(bad)
repz
loopne
and
leave
sub
xlat
idiv
mov
pop
jmp
adc
outs
fadd
dec
jb
test
lahf
mov
adc
out
xor
pushf
push
sbb
sub
mov
dec
mov
pop
mov
mov
in
scas
fisub
push
outs
xchg
shr
(bad)
call
inc
std
mov
xor
pop
fsubr
outs
inc
jmp
ds
or
adc
xchg
cwde
neg
out
inc
jns
pop
and
ror
iret
loop
xor
js
cmovb
jge
outs
pop
mov
xchg
xchg
dec
call
sub
movs
cmp
sub
cmp
mov
add
mov
push
push
test
call
xor
mov
push
push
jg
in
and
iret
cmps
and
jg
fmul
push
mov
push
add
sbb
cdq
repnz
or
or
pop
cmc
or
cmp
pop
xchg
pop
xchg
ins
or
push
cwde
test
xor
dec
push
push
aas
xor
push
or
stos
stos
or
imul
mov
dec
mov
push
push
sbb
lahf
pop
xchg
sub
jmp
or
mov
fdiv
pop
cmps
jmp
pop
adc
adc
adc
adc
pop
pop
or
push
mov
ins
and
outs
sar
fisttp
xor
jae
cmp
add
mov
inc
or
add
or
add
add
add
add
or
add
add
repz
add
or
pop
jae
add
adc
add
adc
add
add
inc
dec
inc
add
mov
jl
push
xchg
add
add
arpl
dec
add
jp
add
add
add
xor
add
pusha
add
cmp
xchg
pop
lds
add
scas
dec
inc
inc
push
js
mov
sbb
aam
dec
push
pop
pop
test
dec
push
call
cmp
pop
add
adc
int3
outs
inc
jo
dec
movs
loopne
(bad)
rcr
mov
push
and
cmp
(bad)
hlt
jecxz
js
not
neg
outs
lods
cs
fst
dec
and
jecxz
add
leave
mov
imul
imul
int3
sbb
add
add
imul
cli
fistp
or
out
and
sbb
cmp
add
repz
in
or
int
adc
lds
adc
jbe
pushf
cmp
sub
add
adc
lahf
or
pop
ret
mov
adc
out
fwait
sbb
mov
les
push
dec
fisttp
sbb
mov
and
add
pop
cmp
push
jmp
mov
rcl
adc
in
jecxz
stos
cmp
shl
sbb
add
xor
or
std
pop
pop
or
inc
add
dec
add
scas
mov
sbb
je
aas
mov
push
jbe
push
mov
retf
cmp
js
test
retf
clc
loopne
sbb
dec
lods
mov
test
movs
pop
test
add
push
inc
xchg
test
(bad)
cld
(bad)
hlt
inc
mov
ret
cmp
push
dec
sbb
in
scas
fisubr
ds
daa
jl
push
cmc
sar
or
retf
add
not
add
add
dec
inc
dec
inc
scas
inc
pusha
xor
dec
inc
or
add
or
add
add
add
add
push
add
add
ret
dec
add
or
pop
jae
add
les
add
les
xchg
sub
sbb
add
add
inc
dec
inc
add
mov
jl
push
xchg
add
add
arpl
dec
add
jp
add
add
add
xor
add
pusha
add
cmp
xchg
pop
lds
add
daa
dec
inc
inc
push
js
movs
xchg
fild
inc
adc
mov
addr16
shl
movs
mov
jge
or
loopne
adc
jne
inc
add
mov
push
dec
jo
mov
mov
push
xchg
cmp
cli
test
mov
cld
jle
cli
push
add
adc
lahf
dec
or
sub
aad
fwait
mov
mov
mov
push
push
inc
fs
pop
pop
mov
add
pop
ins
loopne
nop
add
mov
sub
pop
push
call
or
push
or
or
jae
fldcw
add
cmp
cwde
ins
push
call
add
push
pop
or
cmps
xor
pop
aam
add
pop
stc
pop
es
fcomp
cwde
or
pop
mov
sbb
out
test
jo
mov
int
mov
lds
ins
in
test
psrld
imul
jg
jno
ret
mov
xchg
movs
sar
movs
pop
fwait
stos
stc
pop
popa
sub
cmp
mov
(bad)
nop
repz
pop
into
xchg
test
lods
outs
(bad)
enter
loop
or
mov
dec
popw
jno
imul
pusha
inc
gs
aad
sahf
in
push
fimul
mov
mov
pop
jno
popa
add
mov
jmp
les
mov
pop
cwde
xchg
bound
inc
add
inc
in
aad
mov
mov
shl
outs
in
addr16
js
pushf
and
aas
je
sti
daa
fcom
cmp
adc
rcl
jmp
sbb
cmp
xor
test
in
or
sbb
jecxz
popa
addr16
aam
push
mov
jmp
cld
mov
fwait
cwde
inc
dec
adc
and
dec
faddp
lods
out
ja
mov
pop
and
loope
cmp
retf
xor
mov
mov
cmp
daa
loope
jl
(bad)
dec
jecxz
shr
in
mov
(bad)
es
xchg
sti
imul
fsub
xlat
mov
addr16
call
cs
xchg
xor
aaa
retf
ja
mov
mov
dec
lods
push
cwde
mov
dec
out
xor
loope
(bad)
lds
bnd
xchg
call
cmp
sbb
or
mov
cdq
xchg
xor
and
cmp
outs
jl
push
sbb
sbb
sub
pop
or
push
or
mov
clc
pop
or
mov
scas
in
sahf
int3
add
ins
xor
ins
xchg
sbb
push
xor
out
sbb
dec
adc
stos
int3
add
xor
or
pop
add
mov
fcom
jmp
test
sahf
dec
push
mov
loop
popa
aad
push
cmp
aam
test
int3
adc
jb
sahf
push
addr16
lods
cs
xor
or
into
nop
ins
dec
or
add
add
dec
inc
scas
inc
pusha
or
add
mov
inc
or
add
or
add
add
add
add
or
add
add
repz
add
xchg
dec
inc
inc
push
js
pop
xchg
out
outs
adc
(bad)
lahf
idiv
pop
jnp
mov
fimul
pop
out
dec
xor
mov
pop
inc
mov
or
mov
inc
add
mov
adc
and
mov
mov
fsubrp
jl
push
jns
cmp
daa
pop
repnz
push
in
jge
jbe
pop
push
inc
mov
es
enter
out
cmp
loope
es
or
out
push
jns
cmps
out
cmp
jb
push
xchg
js
push
jnp
call
pop
mov
(bad)
(bad)
ds
mov
icebp
test
sar
cmp
shr
dec
retf
lds
aaa
aaa
or
inc
xor
sbb
ins
adc
call
sub
push
sub
sub
inc
mov
nop
ins
jbe
xchg
or
out
jns
dec
movs
adc
sub
xlat
add
and
fdiv
js
mov
out
xchg
aas
fld
jl
mov
(bad)
fist
xor
pop
pop
mov
das
adc
lahf
fcmovu
sahf
and
cmps
cdq
repz
inc
adc
enter
outs
inc
adc
outs
dec
xchg
mov
mov
dec
pop
mov
les
sbb
repnz
dec
out
fnstsw
cs
xor
mov
out
mov
add
aaa
int3
xor
jbe
lahf
adc
add
(bad)
xchg
bound
lods
stos
jp
jmp
(bad)
daa
stc
cld
(bad)
fild
push
pusha
adc
xor
stos
aad
mov
jnp
cmp
sar
mov
cmp
xor
pop
jmp
xbegin
push
push
scas
pop
lods
push
cs
cmp
add
sbb
stos
aam
ja
sub
rcr
or
scas
and
xchg
aad
xchg
mov
js
mov
popf
fst
stc
aaa
jl
sub
xlat
add
adc
pop
xchg
sbb
stc
fadd
push
out
inc
sbb
jmp
stos
aad
cld
add
std
lds
push
xor
xor
add
mov
mov
xchg
sub
add
in
clc
icebp
movs
push
scas
jg
pushf
sahf
ds
adc
jne
mov
(bad)
ins
and
xor
xor
push
xlat
fldenv
add
push
lds
and
jecxz
xchg
dec
movs
push
out
imul
mov
add
inc
dec
mov
dec
mov
mov
mov
clc
jo
ss
inc
cmps
cmps
mov
ins
sbb
cmp
jecxz
jns
xlat
jmp
pop
(bad)
jecxz
out
in
inc
lahf
out
mov
cmp
jl
jle
pop
mov
sbb
nop
out
cmps
cmps
xor
inc
test
es
sub
cdq
mov
xchg
loope
iret
(bad)
pop
dec
es
mov
adc
pop
sub
mov
inc
imul
push
out
fcmovu
ficom
dec
and
pop
xor
dec
ret
loope
mov
popf
mov
gs
stos
jmp
mov
test
sar
nop
xchg
retf
outs
fild
push
aaa
stos
xchg
xor
into
add
pusha
pusha
nop
fnstenv
xchg
dec
in
scas
dec
mov
mov
mov
add
add
dec
inc
scas
inc
pusha
or
add
mov
inc
or
add
or
add
add
add
add
or
add
add
repz
add
aad
inc
inc
push
js
lods
xchg
dec
dec
xchg
add
(bad)
jg
mov
mul
outs
mov
mov
and
or
shl
in
and
popf
and
test
dec
data16
btr
jae
mov
pop
jmp
out
lock
lahf
ret
repz
std
add
std
or
jo
mov
cli
mov
(bad)
adc
add
jmp
xor
push
or
dec
js
mov
inc
mov
add
loop
jbe
mov
mov
mov
test
repz
dec
pop
xchg
fxch
out
push
fs
cmc
jl
test
sub
pop
lahf
ja
add
jb
outs
ficomp
cmp
xchg
xchg
inc
cli
out
sub
enter
push
arpl
aas
dec
inc
jecxz
repnz
cmps
in
mov
cmps
call
outs
test
sbb
fsubr
mov
into
push
dec
or
mov
(bad)
mov
xchg
fwait
jge
pop
retf
enter
mov
and
outs
jle
add
jbe
push
cdq
xor
pop
mov
sbb
bound
push
xor
jmp
gs
daa
dec
into
mov
mov
mov
cmp
in
inc
push
xor
jnp
mov
out
cmps
push
sub
jae
xor
nop
pop
inc
push
sub
xor
ret
inc
dec
add
mov
inc
mov
cmp
xor
hlt
cmc
rcl
mov
ss
add
mov
fucomip
cmp
adc
ins
sub
jb
fistp
lahf
ds
dec
mov
sbb
mov
sbb
fs
aaa
pop
and
fmul
sub
hlt
cld
nop
gs
push
sub
mov
dec
dec
adc
add
jne
jno
(bad)
jge
push
or
inc
pop
outs
and
mov
fs
jmp
pop
and
or
(bad)
ror
sub
(bad)
mov
mov
xchg
test
sub
loope
in
iret
mov
in
push
sub
shl
add
cmps
fcmovnu
enter
jmp
push
xchg
ins
push
adc
add
push
out
inc
sub
rol
iret
dec
das
mov
sti
push
cmp
fisub
xchg
and
add
into
das
inc
inc
dec
inc
and
addr16
neg
jp
dec
icebp
jecxz
and
fcmovb
push
push
or
inc
call
(bad)
and
inc
xor
aaa
add
add
dec
inc
dec
inc
scas
inc
pusha
or
add
mov
inc
or
add
or
add
add
add
add
or
add
add
add
xchg
dec
inc
inc
push
js
in
popf
ja
fs
lahf
lahf
out
cmp
in
imul
leave
sub
and
mov
add
inc
and
mov
inc
mov
sbb
ins
(bad)
dec
fs
mov
sub
fs
mov
bound
xchg
xor
adc
xchg
mov
fstp
out
fsubr
jae
push
xor
cwde
add
xchg
sbb
aas
mov
fdivr
jns
out
cmp
sbb
adc
ds
shr
mov
fdivr
in
adc
pop
(bad)
jbe
mov
loope
ja
add
jg
stos
xchg
jp
mov
pop
pop
scas
cmp
test
mov
fdivp
(bad)
(bad)
in
arpl
js
dec
jl
sbb
dec
leave
and
sbb
mov
dec
sub
jbe
jmp
leave
repz
push
lods
dec
fldl2t
leave
pop
mov
or
in
retf
mov
push
pop
(bad)
jmp
push
lods
jge
sub
mov
int
fstp
adc
cmps
adc
arpl
repnz
(bad)
popf
adc
inc
cld
cmp
xchg
mov
jl
pop
test
movs
mov
sub
arpl
mov
div
imul
xchg
mov
mov
dec
mov
xlat
pop
ja
xor
or
dec
add
imul
sahf
fwait
js
mov
cmps
cmp
pop
loop
(bad)
(bad)
int
call
adc
sbb
repnz
std
mov
fcom
push
(bad)
(bad)
fsubr
jmp
fistp
cmp
sub
jge
idiv
adc
jecxz
xor
aas
pop
cwde
cdq
je
or
popf
cdq
repnz
stc
push
mov
sahf
pop
and
push
xor
cmp
xor
xor
pop
xchg
or
push
mov
mov
and
or
dec
cmp
out
cmp
jmp
fadd
not
mov
mov
(bad)
scas
mov
jb
and
(bad)
fs
je
mov
lods
push
ins
lods
xchg
cld
retf
mov
hlt
jg
xchg
add
cmp
mov
pushf
mov
dec
cmps
pushf
cmp
sub
cmp
js
push
repz
and
cmp
or
es
and
cmp
dec
inc
sbb
mov
push
fild
jmp
sub
js
pop
lds
mov
adc
sub
aaa
adc
pop
sbb
inc
sub
rol
sahf
(bad)
jmp
je
xchg
ins
sahf
pusha
imul
arpl
push
cmp
mov
and
xor
repz
mov
les
arpl
(bad)
xor
retf
xor
pop
jbe
fisttp
pop
and
cmp
sbb
sti
sti
jno
in
in
or
pusha
ret
ror
push
pop
pop
gs
stos
ds
js
jecxz
xchg
arpl
and
pop
movs
enter
aad
mov
hlt
add
push
nop
sbb
gs
push
and
test
sbb
dec
xchg
pop
cld
fsub
test
bnd
stos
mov
test
pop
sbb
xor
into
pop
cmp
aad
or
out
mov
sub
push
es
jge
cmp
pop
sub
bound
add
push
pusha
cld
push
add
push
push
in
dec
xchg
loop
sbb
call
repz
inc
pop
icebp
movs
clc
jbe
ja
cmp
xlat
xor
sbb
ret
inc
dec
jo
or
dec
mov
mov
sbb
loop
cli
ret
movs
mov
mov
fwait
adc
push
lock
stos
lock
out
pop
pop
pop
fbstp
fdivr
sbb
jmp
ja
sbb
jnp
je
fiadd
and
and
or
adc
bound
ins
mov
mov
jl
push
jno
gs
mov
dec
sbb
inc
pushf
popa
and
jmp
(bad)
push
pop
jg
jmp
mov
jl
ret
push
aas
ins
mov
loop
dec
hlt
mov
cmps
imul
mov
push
loopne
fdivr
sbb
ret
iret
js
add
nop
inc
sub
and
add
xor
add
add
push
sti
mov
push
dec
xchg
je
cmc
jp
sbb
test
repnz
pop
xchg
cli
add
jge
call
dec
cmps
dec
jecxz
mov
dec
lods
mov
push
mov
mov
js
retf
js
loope
mov
cmps
ror
in
or
push
stos
inc
mov
add
inc
sub
xor
jnp
stos
sub
loopne
xchg
sar
mov
fild
test
xor
cmp
daa
mov
sbb
mov
test
out
mov
xor
adc
or
call
jecxz
stos
inc
nop
adc
rcl
rol
inc
mov
or
and
inc
or
enter
mov
inc
aas
stos
dec
(bad)
xchg
mov
push
sub
fcom
pusha
lahf
mov
in
scas
sbb
pop
pop
xor
imul
das
repz
push
aas
inc
ins
daa
fmul
pushf
and
retf
jecxz
mov
jns
mov
cmps
call
xor
jmp
pop
mov
in
mov
std
rcr
in
(bad)
out
mov
sar
stos
aad
jecxz
adc
iret
iret
push
sub
mov
mov
inc
mov
xor
xor
imul
addr16
ror
or
adc
jns
add
push
jmp
jbe
or
mov
cli
(bad)
mov
fadd
jnp
add
mov
jle
and
mov
jo
inc
call
(bad)
div
adc
jp
aad
in
sub
(bad)
sbb
pop
mov
sub
retf
rol
retf
inc
dec
dec
sbb
ss
repnz
cmps
mov
imul
add
cli
pop
jl
shr
cmc
imul
fidivr
or
sahf
sahf
mov
gs
int
cmp
es
push
call
mov
popa
not
add
fstp
push
cmp
jno
mov
int3
test
pusha
mov
stos
fist
inc
cmp
rol
mov
into
cmp
xchg
adc
shl
in
pop
xor
iret
push
cmp
scas
fs
add
ins
test
sub
mov
sbb
mov
fs
loope
and
pusha
movs
lds
ret
bound
(bad)
xor
lods
cmp
in
or
int3
adc
outs
sbb
enter
jmp
inc
jg
ror
jns
xor
outs
loope
sbb
imul
mov
ret
xor
xor
loopne
cmp
mov
xor
arpl
mov
out
inc
and
mov
sbb
push
call
sub
pop
dec
sbb
and
ror
scas
loope
jb
frstor
ins
loope
movs
out
mov
and
cmp
cwde
pusha
rcl
bound
daa
mov
imul
fwait
adc
rol
(bad)
sbb
sbb
xor
xchg
xchg
sub
div
jne
arpl
push
shr
es
xchg
and
add
jae
jne
mov
sahf
jecxz
rcl
addr16
sahf
in
aad
hlt
jp
lods
mov
popa
dec
sbb
xor
push
fbstp
sbb
pop
ret
dec
add
mov
imul
pusha
sbb
ret
(bad)
mov
push
adc
mov
adc
popa
loop
push
add
std
inc
jp
sub
add
in
push
inc
mov
mov
movs
imul
movs
sub
lahf
lods
inc
retf
ror
cdq
cmps
fdiv
and
and
repz
arpl
es
push
jecxz
push
xlat
and
sbb
sbb
fisub
sbb
push
mov
pop
jle
sbb
loop
out
pop
in
idiv
jnp
cmc
hlt
int
or
dec
mov
jae
jecxz
iret
aas
(bad)
rol
xor
xor
xlat
inc
or
add
sub
shr
and
and
ds
sbb
jo
push
pop
pushf
sbb
mov
mov
sub
xchg
push
inc
mov
imul
cmp
cs
xor
dec
adc
push
retf
jb
sbb
xlat
test
shr
jge
mov
jecxz
mov
push
popf
mov
xchg
adc
sub
jne
imul
stos
int3
jo
ins
inc
xor
lods
xor
xchg
aam
ins
jo
(bad)
pop
loope
ins
pop
lods
scas
dec
out
pop
inc
in
jno
cmc
out
fist
cmp
xor
mov
call
and
(bad)
cwde
pop
jp
or
or
add
clc
push
test
loope
cmp
inc
xchg
ror
mov
push
ss
and
add
add
in
aad
pop
mov
iret
xchg
inc
sub
sbb
retf
inc
daa
scas
mov
mov
and
xchg
js
js
test
mov
jno
sub
retf
pop
push
and
inc
xchg
or
mov
sub
mov
push
push
xchg
sbb
push
adc
xor
adc
sbb
and
call
or
dec
hlt
mov
out
jo
xchg
push
fwait
jge
lahf
pop
jl
retf
inc
inc
cmc
xor
retf
jbe
xor
sti
sbb
test
sti
dec
dec
push
or
xchg
mov
nop
pusha
adc
jl
add
cmc
lea
retf
inc
loop
sub
and
xchg
mov
inc
and
ds
inc
lods
icebp
pop
dec
aaa
int
(bad)
jbe
xor
push
inc
mov
pop
repnz
mov
not
cli
add
loopne
pop
dec
mov
and
mov
test
cli
clc
scas
les
xor
call
or
pusha
xor
in
and
ins
shr
ror
mov
(bad)
das
jb
rol
mov
mov
aas
pop
fstp
pop
jbe
xchg
mov
adc
xchg
ret
jno
es
jge
cmp
push
pop
pop
test
adc
or
in
push
test
mov
cli
sti
xor
ret
cmp
add
aas
pop
or
or
dec
inc
and
add
imul
retf
(bad)
fs
rcl
fwait
push
retf
sti
push
shl
dec
pop
mov
fwait
cwde
push
or
ds
es
push
cmp
push
out
(bad)
imul
rcl
mov
jns
cdq
push
gs
out
jmp
ror
pop
dec
hlt
mov
mov
lds
sbb
mov
lods
ja
repz
dec
mov
sub
leave
mov
arpl
lods
mov
adc
retf
sbb
mov
gs
shl
jl
add
adc
ja
xor
leave
and
loop
call
int3
push
sti
dec
imul
and
sbb
inc
movs
rol
ja
cvtpi2ps
mov
mov
nop
jmp
xchg
jmp
xchg
xor
mov
in
jno
jecxz
pop
mov
mov
test
imul
or
mov
movs
call
(bad)
(bad)
rcl
pop
xchg
shl
xor
sub
and
rol
adc
lods
into
inc
iret
xchg
sub
mov
sub
cmps
xor
jl
mov
push
adc
loopne
and
sub
adc
scas
daa
mov
sbb
dec
or
sub
int3
test
retf
dec
cmp
adc
sbb
adc
xor
inc
sub
inc
add
enter
bound
retf
pop
(bad)
xor
jl
in
xor
or
xchg
xlat
fsubr
hlt
cwde
fidivr
(bad)
fdivrp
outs
adc
test
ror
inc
xchg
mov
test
mov
cmps
push
adc
dec
sub
movs
sbb
or
ins
cmps
adc
jno
pop
mov
push
adc
out
test
sbb
pop
add
cmc
cmps
les
mov
mov
stos
stc
hlt
mov
adc
fwait
adc
or
bound
ins
and
mov
and
add
mov
lods
mov
mov
outs
mov
sbb
adc
cmp
data16
std
shl
xchg
call
jmp
mov
cmp
repnz
test
pop
add
je
cmp
fwait
sub
not
inc
pushf
fwait
jmp
inc
push
mov
push
lea
and
ss
inc
xchg
inc
call
and
xchg
loopne
ds
pop
les
inc
cmp
(bad)
mov
sbb
scas
inc
dec
daa
jg
test
and
loopne
sub
(bad)
add
shr
es
xlat
retf
mov
and
add
push
test
shr
ins
xor
mov
movs
push
les
xchg
pusha
mov
dec
push
sub
adc
sbb
into
or
pusha
inc
mov
or
push
shl
in
(bad)
xchg
cwde
cdq
sahf
loopne
fst
mov
pushf
sub
cmp
xchg
dec
loope
dec
test
mov
out
fwait
inc
dec
or
dec
sub
rol
ins
xchg
retf
sahf
inc
shr
lods
xor
(bad)
shl
div
add
cmp
ret
lods
loopne
adc
(bad)
ins
xchg
(bad)
out
or
and
pop
dec
adc
pop
mov
inc
loopne
mov
xchg
sbb
add
call
adc
daa
push
jns
cmp
inc
(bad)
jne
mov
mov
push
jo
sbb
jecxz
and
jp
xchg
ret
push
(bad)
retf
mov
jecxz
push
sbb
adc
jnp
adc
pop
or
mov
mov
scas
mov
add
js
sub
or
aad
int3
inc
mov
aaa
std
mov
test
push
daa
enter
hlt
ins
xchg
adc
push
dec
imul
sbb
shr
sbb
sub
push
xchg
xchg
lea
loop
mov
push
nop
cs
add
jmp
arpl
jecxz
ja
jns
inc
into
leave
inc
idiv
mov
push
lock
xchg
and
adc
xor
jecxz
jge
daa
and
das
sbb
stos
fstp
scas
ret
cdq
in
pop
ss
xchg
test
mov
cmp
into
outs
mov
jno
popf
push
add
sbb
xor
dec
sub
js
and
std
and
mov
xchg
not
loope
mov
fidiv
pusha
add
add
shl
lods
xor
(bad)
test
in
test
lods
add
pop
test
adc
sbb
adc
inc
dec
mov
mov
rcr
mov
loopne
fbld
mov
push
mov
adc
sbb
sbb
xchg
cdq
push
add
adc
in
xchg
push
pop
cmps
adc
jmp
outs
aam
or
mov
xchg
mov
mov
inc
dec
test
pop
push
retf
inc
(bad)
bound
dec
faddp
sti
push
xor
popa
lods
ret
mov
add
rol
pop
and
sti
nop
mov
mov
retf
push
retf
and
or
xor
movs
aad
loope
push
neg
mov
cmc
bound
sub
adc
or
and
rcr
inc
mov
jnp
mov
pop
out
cmp
mov
cmp
push
jmp
cwde
adc
sbb
clc
mov
shl
ds
adc
stos
mov
mov
dec
inc
mov
sbb
inc
jl
test
gs
mov
call
xchg
add
push
es
fild
repnz
ret
dec
cmp
sub
sbb
add
movs
jne
and
mov
push
jecxz
into
and
nop
cli
call
xor
push
push
push
push
mov
jmp
and
mov
mov
pop
add
shl
and
jne
jne
aaa
mov
sbb
mov
mov
pop
fwait
mov
sbb
adc
cld
push
fwait
sub
push
or
lods
(bad)
sub
test
sub
and
data16
dec
mov
cmp
jecxz
jae
fstp
sbb
mov
inc
imul
or
push
jle
dec
pop
shr
popa
lock
or
pop
movs
loop
imul
sub
sbb
(bad)
fsub
bound
jb
stc
retf
cwde
icebp
adc
cmp
(bad)
or
mov
add
out
ret
xchg
repz
pop
xchg
push
push
shl
xor
mov
lods
xchg
mov
out
call
mov
mov
push
pop
xchg
push
add
mov
and
xor
pop
into
dec
arpl
lods
mov
test
jl
xchg
and
push
dec
xor
ret
sbb
and
jge
bound
ret
xor
adc
dec
popa
adc
or
fcomp
or
add
test
pop
test
aas
call
arpl
and
ja
test
add
(bad)
dec
xchg
test
mov
adc
test
or
adc
push
cmp
fnstenv
and
mov
in
inc
jns
stos
ins
outs
cmp
js
ins
ret
push
sbb
xor
int
cmp
jge
jo
test
and
dec
aam
adc
cmps
mov
push
shl
xor
fdiv
rcr
test
rcl
lds
dec
ds
gs
ss
(bad)
cmps
test
(bad)
nop
rol
(bad)
and
cmps
sub
pop
pusha
cmp
jns
out
fcmovu
ret
cmp
in
mov
xor
mov
and
test
jl
xchg
jp
imul
jge
add
inc
nop
movs
xor
or
enter
xor
mov
add
xchg
dec
sbb
jle
bound
add
fistp
scas
lea
fwait
popf
jae
out
test
and
and
xlat
pop
in
fwait
cmc
cmp
ret
adc
push
popa
mov
iret
pop
adc
ins
ss
and
and
sbb
loope
adc
adc
pop
xchg
pusha
mov
xchg
bound
nop
inc
jmp
and
jge
pop
dec
mov
inc
dec
shr
xchg
iret
movs
add
gs
or
jae
pushf
xchg
inc
or
pop
fisubr
adc
xor
es
sbb
add
test
cmp
adc
pop
sub
adc
and
cmps
pop
sub
fdiv
(bad)
mov
addr16
cmp
and
out
jno
popf
ja
and
rcl
inc
pop
cld
fdiv
mov
lds
mov
mov
(bad)
out
lods
push
(bad)
out
lock
push
and
cmp
shl
jecxz
push
out
mov
xchg
sbb
iret
int3
mov
xchg
lods
ins
xchg
hlt
js
sbb
outs
xchg
inc
leave
mov
(bad)
idiv
mov
jo
mov
cmp
push
jge
test
movs
and
ror
cmp
das
stos
mov
jne
or
jno
cmp
xlat
cmc
cwde
cwde
pushf
in
das
sub
dec
jo
xor
inc
dec
jp
inc
dec
adc
arpl
mov
cmp
jno
adc
repnz
shl
inc
adc
sbb
fmul
dec
popa
les
pop
imul
push
inc
adc
push
dec
and
cli
and
xchg
dec
cmp
enter
xor
cmp
lods
mov
out
xchg
mov
fwait
jg
sub
(bad)
aas
mov
pusha
icebp
das
pop
jle
cld
and
fdiv
pop
stc
retf
fidiv
retf
jae
pop
iret
jne
(bad)
mov
xchg
cmc
int
xlat
xor
mov
repz
ffreep
call
mov
aad
inc
jbe
and
cmp
sbb
sbb
jmp
mov
outs
lods
loopne
ins
ret
fdiv
sbb
and
inc
sub
jo
retf
xchg
das
mov
xor
push
pop
scas
sub
mov
iret
fild
add
add
pop
inc
and
retf
mov
push
dec
mov
jle
imul
mov
mov
xchg
push
sbb
int3
int3
jb
int3
sbb
push
cs
mov
mov
mov
cld
fisubr
inc
pop
jle
mov
into
nop
xlat
mov
movs
rcr
pop
jne
jge
aas
clc
mov
idiv
int
mov
in
cmp
sbb
add
sub
dec
dec
dec
push
lods
push
imul
push
mov
push
sbb
int3
dec
imul
mov
inc
add
mov
out
jnp
jnp
mov
mov
push
std
xor
pop
ret
imul
inc
mov
sub
dec
out
arpl
(bad)
scas
cs
outs
adc
mov
add
shr
cmp
shl
mov
mov
fs
call
jge
fisttp
mov
dec
ret
jne
lahf
cld
cli
xlat
(bad)
cmp
shl
in
push
scas
(bad)
scas
mov
mov
hlt
pusha
test
jo
cmc
scas
jg
ja
retf
gs
(bad)
retf
cmp
call
out
push
inc
fdivrp
(bad)
aaa
(bad)
cli
std
dec
mov
stc
add
push
(bad)
(bad)
pop
in
sahf
(bad)
(bad)
std
sti
jmp
cmps
fucomp
rcr
imul
pushf
jle
jns
movs
jb
cmp
mov
daa
or
ficomp
push
cmps
fnstsw
inc
dec
scas
pop
pop
dec
stos
mov
push
rol
pusha
xchg
mov
lock
(bad)
mov
out
push
sub
or
mov
sub
mov
push
les
ja
jbe
inc
jne
pushf
cli
(bad)
test
(bad)
fadd
or
or
sbb
daa
mov
jbe
ins
das
xchg
inc
movs
sbb
jmp
cld
mov
(bad)
pop
clc
lods
loope
add
shl
mov
imul
int3
mov
aad
mov
jp
aaa
push
pop
jp
sub
adc
cmps
jo
sbb
adc
jae
(bad)
cld
lock
retf
daa
dec
pushf
cmp
xchg
adc
jne
sub
pop
inc
push
jle
scas
xlat
retf
pop
and
push
mov
lea
adc
(bad)
xchg
shr
mov
and
ds
out
cmp
dec
sbb
lods
mov
sbb
clc
or
sub
addr16
iret
xchg
sbb
mov
push
iret
cmp
adc
cmp
cmps
and
inc
fcmovnb
out
jp
popf
cmp
pop
mov
test
jmp
out
push
stos
adc
xor
rcl
lahf
stc
(bad)
sti
jle
jecxz
pop
das
add
mov
mov
jo
int3
cdq
mov
in
sti
pop
(bad)
push
push
fisttp
out
fidivr
add
cmp
push
bound
aas
ds
call
pop
lods
push
jle
lods
leave
push
add
jb
sbb
fistp
cld
or
sbb
mov
pop
xor
in
aas
enter
pop
inc
sub
fidivr
lock
pop
cmps
(bad)
(bad)
lock
mov
das
adc
fstp
int
or
jb
loopne
mov
cmp
xor
or
dec
loop
test
and
mov
stc
call
lods
sbb
jge
jne
sbb
jge
push
sub
out
shld
push
inc
pusha
mov
stos
(bad)
cmp
pop
xchg
retf
aas
adc
fisub
dec
inc
mov
mov
out
pop
pop
pop
aas
aas
nop
mov
sbb
add
retf
xchg
inc
cdq
ja
push
mov
xchg
dec
dec
mov
mov
sub
call
scas
dec
mov
cmps
aad
inc
addr16
push
cwde
dec
xchg
es
add
lock
pop
das
xor
imul
call
cld
ret
lahf
mov
dec
mov
bound
in
repnz
and
mov
pop
out
loop
mov
xor
repz
ret
in
pop
xchg
xchg
into
pop
pop
je
cld
cli
shl
mov
call
xor
test
stos
loop
sar
stos
inc
aam
shr
cmps
xlat
outs
mov
push
pop
sub
ds
stos
arpl
inc
sub
mov
mov
shl
daa
dec
lock
mov
clc
clc
xchg
dec
lahf
jns
(bad)
mov
dec
add
js
xchg
push
repnz
mov
mov
repz
or
gs
and
iret
jae
pop
inc
out
mul
int3
int3
int3
in
mov
sbb
retf
cmp
in
lds
fild
mov
xor
sub
std
js
jno
sti
ret
stc
push
cmp
clc
xchg
retf
jecxz
jle
iret
jne
(bad)
shr
mov
(bad)
lds
pop
mov
imul
imul
(bad)
das
test
imul
jg
or
jmp
sti
fdivp
pop
fwait
out
mov
mov
rol
dec
sbb
pop
mov
jg
push
aas
hlt
mov
(bad)
pop
(bad)
stc
inc
push
mov
ret
pop
retf
nop
jmp
mul
imul
fistp
mov
xchg
repz
ja
adc
mov
das
jecxz
sti
fxch
ds
in
mov
or
and
sbb
shld
mov
out
mov
mov
mov
cmp
push
mov
push
sbb
outs
push
jnp
sub
push
jl
push
movs
mov
push
mov
push
out
mov
sbb
mov
lahf
jl
test
or
(bad)
lock
pop
frstor
ret
sbb
jmp
cld
out
(bad)
imul
neg
dec
add
hlt
mov
pop
pop
cmp
push
jmp
pop
xchg
in
(bad)
lea
shr
jbe
movq
ret
out
jns
fldenv
repz
rol
sar
(bad)
xor
jge
or
(bad)
mov
outs
jg
sbb
rcl
dec
mov
(bad)
call
jl
ins
xor
adc
adc
dec
sub
mov
cmps
xor
adc
repnz
jnp
jmp
and
cmp
jnp
repz
pop
mov
aam
aam
setbe
daa
ret
xor
mov
inc
in
cmc
jp
jmp
scas
or
(bad)
cld
mov
mov
jmp
cld
dec
and
mov
fistp
dec
les
jnp
int
ins
ss
xchg
jb
dec
mov
mov
out
sub
es
xor
outs
test
ret
mov
imul
cli
stos
iret
pop
out
std
iret
shl
movs
adc
out
jmp
test
add
retf
daa
aas
stc
leave
neg
jcxz
mov
pop
je
call
adc
rcr
sbb
dec
xchg
in
mov
in
fidivr
outs
(bad)
loope
add
inc
push
movs
pop
or
es
(bad)
or
mov
stos
xchg
push
sbb
pop
cmp
call
fdivr
enter
out
out
add
inc
push
arpl
add
add
dec
inc
scas
inc
pusha
cmp
add
mov
inc
or
add
or
add
add
add
add
or
add
add
repz
add
or
pop
jae
add
adc
add
adc
add
add
inc
dec
inc
add
mov
jl
push
xchg
add
add
arpl
dec
add
jp
add
add
add
xor
add
pusha
add
cmp
xchg
pop
lds
add
jo
inc
inc
push
js
xchg
xchg
int
push
popa
adc
lahf
idiv
jmp
push
or
std
add
fisttp
aad
inc
inc
mov
lea
inc
nop
nop
push
fwait
mov
loope
inc
and
cdq
or
in
cmp
fdivr
out
cmp
mov
mov
cmp
cmp
jae
sbb
dec
push
les
out
jbe
sbb
or
stos
stos
inc
cmp
sub
inc
push
add
inc
lods
fiadd
pushf
cmp
imul
and
in
rol
pop
inc
inc
sbb
mov
cli
mov
push
fst
cwde
ret
fdivr
mov
add
mov
sub
mov
inc
mov
in
mov
mov
and
xor
rol
out
outs
pop
jns
(bad)
dec
jo
sbb
ror
bound
mov
add
adc
in
pop
adc
xor
dec
fstp
jbe
(bad)
jbe
or
(bad)
data16
mov
in
adc
inc
repz
inc
push
adc
sub
cmc
test
push
lods
fldenv
mov
pop
mov
out
cmp
gs
and
ins
or
or
sbb
or
mov
imul
add
hlt
jnp
jge
(bad)
mov
imul
inc
jnp
in
shl
stos
stc
scas
out
and
scas
fincstp
mov
je
lds
fsubr
cmps
pop
cmp
add
and
loope
dec
leave
or
popf
xor
jmp
add
cmps
sar
cmc
int
hlt
mov
inc
in
mov
repnz
out
mov
lods
add
scas
cwde
jbe
and
stos
mov
(bad)
mov
add
or
push
and
jmp
into
dec
sub
xor
mov
iret
stc
rcr
mov
mov
fimul
into
pop
nop
test
dec
imul
push
sbb
in
sub
mov
cld
pop
fsubr
ds
mov
push
fcmovnbe
sbb
add
push
xor
jb
cmp
dec
mov
shl
mov
sbb
sbb
stos
inc
sub
movs
add
add
dec
inc
dec
inc
scas
inc
pusha
xor
add
or
or
add
or
add
add
add
add
or
add
add
repz
add
or
pop
jae
add
adc
add
adc
add
add
inc
dec
inc
add
mov
jl
push
xchg
add
add
arpl
dec
add
jp
add
add
add
xor
add
pusha
add
cmp
xchg
pop
lds
add
call
js
pushf
xchg
xor
push
adc
jg
mov
xlat
cwde
not
xchg
push
cmp
cmp
jne
outs
inc
mov
aas
inc
mov
and
jle
push
sbb
sbb
mov
xchg
cwde
mov
imul
pop
hlt
emms
mov
pop
xchg
dec
push
cmps
sbb
imul
sar
scas
outs
iret
repz
imul
sub
clc
lea
in
dec
xor
loope
int
xchg
jo
adc
xchg
fcmovb
add
xor
jmp
inc
mov
pop
mov
hlt
cs
inc
or
mov
mov
add
imul
movs
sub
iret
daa
xchg
jnp
jl
sbb
loop
dec
mov
and
(bad)
push
xor
mov
cmp
ror
data16
arpl
fwait
push
add
xor
inc
loop
and
or
sbb
arpl
mov
ins
adc
pop
sub
dec
test
cli
pop
iret
dec
cmps
pop
sbb
pop
sbb
sbb
dec
jmp
push
sub
sub
test
jno
icebp
loopne
hlt
shl
iret
jp
aaa
or
je
daa
sub
mov
xchg
arpl
sbb
(bad)
pop
push
adc
jle
loope
clc
jle
das
sti
sub
ror
push
retf
stc
inc
xor
push
lods
lds
add
leave
mov
or
jns
call
pop
test
sbb
pop
adc
or
push
jge
adc
xchg
gs
sbb
push
mov
pusha
jns
xchg
(bad)
push
jle
jecxz
in
jo
and
(bad)
xchg
mov
push
add
popa
scas
xchg
jecxz
(bad)
xchg
gs
cmp
cmp
cs
movs
push
(bad)
cli
pop
cli
xor
xor
fwait
pusha
add
add
dec
inc
dec
inc
scas
inc
pusha
add
add
or
or
add
or
add
add
add
add
or
add
add
jp
add
add
pop
test
xchg
pop
push
dec
adc
aas
pop
inc
and
inc
add
or
and
sub
and
xchg
push
and
push
inc
(bad)
or
xchg
add
xor
add
xchg
and
test
nop
mov
pop
xchg
and
push
out
jae
into
sbb
lahf
retf
xor
push
jbe
imul
xchg
inc
scas
pop
dec
mov
(bad)
sbb
loopne
adc
adc
loopne
or
dec
xchg
daa
sbb
add
jmp
inc
pop
pop
xor
ficom
add
pop
test
adc
dec
and
mov
sub
(bad)
jb
and
test
cmc
ficomp
pop
pusha
cld
sbb
push
mov
add
sub
dec
in
jae
arpl
sbb
test
in
fimul
push
movs
dec
jecxz
or
(bad)
(bad)
rcr
cs
mov
add
repz
std
jno
int
mov
sar
ss
jns
mov
mov
loop
aaa
and
sbb
addr16
mov
mov
xor
jge
mov
add
jge
jmp
mov
mov
push
scas
scas
xor
int
add
jbe
retf
cmp
add
sub
mov
sbb
call
mov
shrd
pop
push
movs
push
sub
movs
dec
push
lods
xchg
jmp
int
scas
inc
and
ins
call
jmp
cmp
imul
pop
mov
std
inc
sub
add
pop
ret
fwait
out
xor
and
sub
mov
sub
call
xchg
xor
dec
cdq
rsqrtps
add
push
into
cmp
iret
jp
dec
and
retf
jle
hlt
test
pop
xor
ins
lods
ss
cmp
in
xchg
xor
retf
sub
lds
jmp
xlat
mov
dec
aad
in
pop
scas
cmp
test
jge
outs
push
push
push
pop
inc
inc
loope
jle
imul
retf
mov
imul
cmps
out
push
mov
aad
xchg
push
push
retf
pop
ret
scas
pop
or
push
inc
xchg
sbb
ret
nop
dec
sbb
std
stc
dec
mov
push
mov
lods
xchg
popf
xchg
sub
lahf
lahf
xchg
jmp
pop
cmp
cmp
jg
scas
push
add
rcr
add
popf
(bad)
(bad)
repnz
into
pop
div
pop
add
and
add
int3
jle
sbb
adc
mov
inc
cmp
xor
add
push
dec
and
dec
inc
dec
inc
scas
inc
pusha
sub
add
add
add
add
and
add
add
call
add
add
and
add
add
add
add
add
and
add
add
add
or
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
inc
add
add
add
inc
inc
add
inc
inc
(bad)
inc
add
(bad)
inc
xchg
ja
ja
ja
ja
ja
ja
add
mov
mov
(bad)
(bad)
(bad)
push
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
push
add
clc
clc
mov
clc
clc
(bad)
dec
add
jbe
xchg
clc
mov
add
ja
enter
(bad)
(bad)
(bad)
(bad)
clc
clc
test
ja
enter
mov
jg
enter
xchg
(bad)
(bad)
(bad)
clc
clc
test
ja
call
(bad)
(bad)
push
add
mov
clc
mov
add
js
mov
(bad)
(bad)
clc
push
add
mov
clc
mov
add
mov
(bad)
(bad)
(bad)
push
jg
add
js
js
call
(bad)
imul
test
call
(bad)
(bad)
(bad)
(bad)
jg
add
mov
mov
enter
mov
jg
mov
(bad)
(bad)
(bad)
(bad)
clc
out
test
call
mov
add
clc
vpmacssdd
(bad)
test
mov
mov
jg
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
push
add
(bad)
(bad)
(bad)
(bad)
dec
(bad)
clc
test
mov
mov
jg
(bad)
clc
clc
vpmacssdql
ja
ja
ja
ja
ja
ja
js
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
add
add
inc
add
ja
add
jns
add
push
add
jge
add
test
mov
mov
mov
test
mov
ret
add
xchg
pop
add
mov
ret
add
mov
mov
lds
arpl
lds
arpl
retf
xchg
data16
cwde
gs
fwait
gs
xchg
imul
leave
xchg
push
add
cdq
ins
add
popf
outs
add
sahf
imul
(bad)
movs
push
aad
ins
add
scas
outs
add
mov
jne
fldcw
jno
fldcw
js
fnsave
jbe
fbstp
jns
in
mov
jo
loopne
je
in
jae
loopne
jp
in
js
in
jg
in
ret
hlt
sar
mov
add
mov
add
mov
mov
lods
add
mov
add
in
mov
jmp
add
ror
lock
mov
not
add
ret
out
xchg
add
les
add
leave
xchg
add
(bad)
cdq
add
leave
cdq
add
into
cwde
add
iret
popf
add
rcr
repnz
sahf
add
into
mov
add
aad
add
aam
add
(bad)
movs
add
fsub
add
fsubr
add
fsubr
add
fidiv
add
(bad)
add
in
add
loope
add
out
add
rol
retf
leave
mov
int3
retf
int
retf
xlat
rol
out
fadd
clc
out
add
jmp
iret
add
out
add
in
in
add
jmp
add
repnz
add
out
lock
lock
add
icebp
icebp
add
repz
add
hlt
repnz
repz
add
hlt
hlt
add
cmc
test
div
add
stc
test
idiv
add
idiv
add
clc
clc
add
cli
std
add
cld
inc
clc
clc
stc
add
cld
sti
add
sti
cld
add
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
outs
cmp
cmp
cmp
cmp
cmp
cmp
add
inc
test
inc
test
test
test
cmp
test
mov
test
xchg
xchg
cmp
test
js
jns
jns
js
xchg
jl
jns
jns
test
test
or
or
or
add
add
add
jo
jo
jo
xchg
jns
cmp
test
push
push
pi2fd
or
or
js
mov
mov
cmp
test
pop
pop
pop
pop
pop
pop
or
js
jo
jo
jo
xchg
cmp
test
and
sbb
sbb
or
mov
xchg
test
test
and
and
and
and
sbb
js
mov
mov
cmp
test
and
and
and
and
and
sbb
jo
jo
jo
test
cmp
test
sub
sub
sub
sub
sub
and
mov
test
add
sub
sub
sub
sub
sub
js
jo
jo
jo
test
cmp
test
cs
cs
das
cs
mov
mov
cmp
test
cs
xor
xor
xor
sub
jo
jo
jo
mov
add
cmp
inc
cmp
cmp
cmp
cmp
ss
mov
test
cmp
test
pop
pop
push
dec
inc
inc
inc
cmp
js
jo
jo
jo
mov
cmp
test
imul
push
dec
js
mov
mov
cmp
test
ins
imul
pop
dec
js
jo
jo
jo
mov
cmp
test
ins
ins
push
pop
dec
js
mov
mov
cmp
test
push
push
push
push
push
dec
dec
dec
dec
dec
test
jo
mov
add
inc
test
test
test
test
test
add
test
mov
mov
test
test
inc
outs
jo
outs
outs
jo
outs
outs
jo
jo
outs
outs
jo
jo
jo
jo
outs
outs
jo
outs
cmp
jae
jae
jae
jae
jae
jae
jae
jae
jae
jae
jae
jae
jae
jae
add
add
cmp
cmp
cmp
cmp
cmp
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
add
add
add
add
add
add
and
add
add
adc
add
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
mov
jle
mov
dec
test
dec
test
dec
test
dec
test
dec
mov
dec
xchg
dec
test
dec
test
dec
jne
xchg
add
add
add
add
mov
(bad)
mov
lods
mov
(bad)
mov
stc
idiv
mov
lods
mov
(bad)
mov
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
mov
add
add
div
out
(bad)
cld
cld
cld
(bad)
stc
std
(bad)
push
clc
cli
(bad)
cli
(bad)
(bad)
push
cld
(bad)
push
stc
cld
push
stc
sti
(bad)
clc
std
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
std
(bad)
(bad)
(bad)
cld
(bad)
(bad)
(bad)
cli
(bad)
(bad)
(bad)
stc
(bad)
(bad)
push
sti
(bad)
push
div
push
idiv
push
idiv
push
div
push
cmc
hlt
push
repz
repnz
icebp
lock
icebp
icebp
push
icebp
icebp
push
icebp
icebp
push
repnz
sti
stc
idiv
mov
add
add
div
icebp
(bad)
sti
stc
idiv
cli
sti
cld
jmp
out
jmp
out
jmp
out
jmp
out
jmp
out
jmp
out
jmp
out
jmp
out
jmp
out
jmp
out
jmp
out
jmp
out
push
repz
push
idiv
push
clc
stc
push
idiv
push
div
push
hlt
hlt
push
repz
lock
in
out
out
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
out
(bad)
sti
stc
idiv
mov
add
add
clc
div
(bad)
sti
stc
idiv
mov
inc
(bad)
mov
jl
(bad)
mov
jnp
push
jns
push
js
push
jbe
push
out
hlt
cmc
idiv
retf
retf
retf
dec
retf
retf
dec
retf
retf
dec
retf
retf
dec
retf
retf
dec
retf
retf
push
hlt
cmc
push
repnz
out
out
out
(bad)
in
in
in
(bad)
in
in
out
(bad)
sti
stc
idiv
mov
add
add
div
repz
sti
stc
idiv
mov
mov
ror
(bad)
mov
mov
mov
xchg
xchg
mov
test
mov
out
push
idiv
push
idiv
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
idiv
push
cmc
cmc
(bad)
out
lock
(bad)
in
in
in
(bad)
in
out
out
(bad)
sti
stc
idiv
mov
add
add
div
repz
sti
stc
idiv
ror
ret
mov
ret
(bad)
inc
(bad)
fs
mov
mov
ret
lea
ret
mov
ret
inc
mov
rol
push
idiv
dec
retf
retf
dec
retf
retf
dec
retf
retf
dec
retf
retf
dec
retf
retf
dec
retf
retf
push
idiv
push
div
push
icebp
icebp
(bad)
out
out
out
(bad)
out
out
lock
sti
stc
idiv
mov
add
add
div
repz
sti
stc
idiv
ret
lea
(bad)
xchg
imul
(bad)
xchg
imul
(bad)
xchg
push
inc
xchg
inc
xchg
gs
xchg
fs
xchg
arpl
les
out
hlt
div
push
div
push
idiv
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
idiv
push
div
push
repnz
lock
out
lock
(bad)
sti
stc
idiv
mov
add
add
div
repz
sti
stc
idiv
lds
ins
dec
cdq
ins
dec
cdq
ins
dec
cdq
ins
dec
cdq
ins
dec
cwde
imul
cwde
imul
cwde
push
leave
cwde
imul
(bad)
xchg
pop
jmp
out
push
idiv
push
idiv
push
clc
clc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
(bad)
sti
stc
idiv
mov
add
add
div
repz
sti
stc
idiv
leave
xchg
arpl
int
outs
dec
sahf
outs
dec
sahf
outs
dec
lahf
outs
dec
popf
outs
dec
popf
outs
dec
popf
outs
dec
popf
outs
dec
popf
ins
dec
popf
ins
dec
cwde
gs
out
push
idiv
dec
retf
retf
dec
retf
retf
dec
retf
retf
dec
retf
retf
dec
retf
retf
dec
retf
retf
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
(bad)
sti
stc
idiv
mov
add
add
div
repz
sti
stc
idiv
into
fwait
gs
mov
jb
shl
jae
shl
jb
shl
jb
shl
jno
rcr
out
hlt
cmc
stc
(bad)
clc
stc
cli
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
(bad)
sti
stc
idiv
mov
add
add
div
repz
sti
stc
idiv
shl
jne
aad
jne
aad
jne
aad
jne
aad
jne
(bad)
test
call
test
call
test
call
test
call
test
call
movs
ins
jmp
out
push
idiv
dec
retf
retf
dec
retf
retf
dec
retf
retf
dec
retf
retf
dec
retf
retf
dec
retf
retf
push
clc
stc
push
clc
stc
(bad)
mov
jle
push
clc
stc
(bad)
sti
stc
idiv
mov
add
add
div
repz
sti
stc
idiv
xlat
cmps
imul
fisubr
ja
fldcw
js
fldcw
js
fldcw
ja
fldcw
jo
out
out
hlt
idiv
(bad)
clc
clc
clc
push
div
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
inc
nop
addr16
(bad)
gs
clc
stc
(bad)
sti
stc
idiv
mov
add
add
div
repnz
sti
stc
idiv
fsubr
jbe
fnsave
jns
fnsave
jp
fnsave
jp
fnsave
jp
fnsave
jb
out
out
repz
dec
retf
retf
dec
retf
retf
dec
retf
retf
dec
retf
retf
dec
retf
retf
dec
retf
retf
push
clc
stc
push
clc
stc
dec
cdq
imul
idiv
stc
(bad)
sti
stc
idiv
mov
add
add
div
repnz
sti
stc
idiv
jecxz
mov
call
mov
jp
fbstp
jp
loopne
jp
loopne
jnp
loopne
jnp
loopne
jnp
loopne
jnp
loopne
je
out
out
hlt
idiv
push
clc
stc
push
idiv
push
clc
clc
push
idiv
push
idiv
push
clc
stc
push
clc
stc
push
clc
stc
call
cmps
ins
call
movs
imul
clc
stc
(bad)
sti
stc
idiv
mov
add
add
div
hlt
(bad)
sti
stc
idiv
out
xchg
push
(bad)
(bad)
in
iret
mov
jmp
ret
mov
in
cmp
mov
cmp
mov
jg
in
js
out
out
cmc
idiv
dec
retf
retf
dec
retf
retf
dec
retf
retf
dec
retf
retf
dec
retf
retf
dec
retf
retf
push
clc
stc
push
clc
stc
(bad)
(bad)
outs
push
clc
stc
(bad)
sti
stc
idiv
mov
add
add
cld
cld
std
(bad)
sti
stc
idiv
jmp
loopne
push
(bad)
push
fsubr
(bad)
out
shl
(bad)
in
int
(bad)
jmp
xchg
(bad)
jmp
jmp
out
push
idiv
push
clc
stc
push
clc
clc
push
clc
stc
push
idiv
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
jmp
mov
jo
idiv
stc
(bad)
sti
stc
idiv
mov
add
add
cld
cld
cld
(bad)
sti
stc
idiv
jmp
push
loop
push
fbstp
push
fldcw
push
(bad)
movs
push
aam
(bad)
out
rcr
in
retf
out
out
hlt
idiv
dec
retf
retf
dec
retf
retf
dec
retf
retf
dec
retf
retf
dec
retf
retf
dec
retf
retf
push
clc
stc
push
clc
stc
(bad)
in
ret
in
mov
stc
(bad)
sti
stc
idiv
mov
add
add
cld
cld
cld
(bad)
sti
stc
idiv
in
into
mov
(bad)
cli
jmp
mov
push
fbstp
push
fld
push
(bad)
sahf
push
rcr
jmp
out
push
idiv
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
rol
push
clc
stc
(bad)
sti
stc
idiv
mov
add
add
cld
cld
sti
(bad)
sti
stc
idiv
loop
mov
out
cdq
jmp
lds
jmp
les
in
xchg
jmp
ret
xchg
jmp
ret
in
(bad)
jmp
ror
cli
sti
cld
(bad)
cli
sti
cld
dec
retf
retf
dec
retf
retf
dec
retf
retf
dec
retf
retf
dec
retf
retf
dec
retf
retf
push
clc
stc
push
clc
stc
(bad)
sti
in
(bad)
sti
in
push
clc
stc
(bad)
sti
stc
idiv
mov
add
add
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
mov
add
add
div
repz
clc
stc
cli
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
(bad)
clc
clc
stc
push
clc
stc
push
clc
clc
push
clc
clc
push
clc
clc
push
clc
clc
push
clc
clc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
(bad)
clc
stc
cli
(bad)
sti
stc
idiv
mov
add
add
retf
leave
(bad)
dec
leave
(bad)
dec
leave
(bad)
dec
leave
(bad)
dec
leave
(bad)
dec
leave
(bad)
dec
leave
(bad)
dec
leave
(bad)
dec
leave
(bad)
dec
leave
(bad)
dec
leave
(bad)
dec
leave
(bad)
dec
leave
(bad)
dec
leave
(bad)
dec
leave
(bad)
dec
leave
(bad)
dec
retf
int
retf
int3
retf
int3
retf
retf
leave
dec
retf
int3
retf
retf
leave
(bad)
dec
leave
(bad)
dec
leave
(bad)
dec
leave
(bad)
dec
leave
(bad)
dec
add
and
add
or
(bad)
(bad)
(bad)
sar
(bad)
sar
(bad)
sar
(bad)
sar
(bad)
sar
(bad)
sar
(bad)
sar
(bad)
sar
(bad)
sar
(bad)
sar
(bad)
sar
(bad)
sar
(bad)
sar
(bad)
sar
(bad)
sar
(bad)
sar
(bad)
sar
(bad)
sar
(bad)
sar
(bad)
sar
(bad)
sar
xchg
jns
(bad)
(bad)
sar
xchg
jns
(bad)
(bad)
sar
xchg
jns
(bad)
(bad)
sar
mov
push
add
add
xchg
mov
dec
test
dec
test
dec
test
dec
test
dec
test
dec
test
dec
test
dec
test
dec
test
dec
add
push
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
dec
add
add
add
add
push
mov
add
add
add
add
outs
jb
ins
ins
dec
popa
imul
jb
gs
ins
add
and
