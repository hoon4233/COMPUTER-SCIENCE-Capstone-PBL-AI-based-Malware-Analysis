daa
rol
add
add
add
add
mov
jbe
loop
jle
or
imul
xchg
int
test
inc
es
pop
(bad)
dec
in
jo
sar
xchg
jl
add
std
ins
vmread
and
loop
test
pop
test
push
movs
push
push
jp
xchg
fst
call
cmp
dec
add
loopne
call
(bad)
or
or
ficomp
dec
sbb
loop
daa
adc
cs
push
pop
rcl
cmp
mov
xchg
inc
daa
fadd
inc
cmp
aaa
adc
scas
xor
sub
xor
sub
fdivr
add
dec
mov
dec
bound
imul
or
in
pop
cmp
sbb
jnp
mov
pop
mov
scas
push
push
dec
je
jnp
mov
call
mov
push
push
mov
xor
mov
push
inc
inc
outs
ins
jo
arpl
mov
inc
mov
popa
sahf
and
jo
mov
cld
popa
bound
xchg
mov
scas
hlt
scas
adc
movs
lahf
sar
cmps
pop
mov
cmp
nop
add
adc
mov
fwait
ins
and
dec
pop
repnz
(bad)
jg
fcom
gs
faddp
call
mov
ds
popfw
js
fldenv
pop
adc
arpl
add
ret
jmp
mul
repz
pop
loop
in
xor
mov
jnp
sti
out
xchg
adc
sbb
xor
icebp
sub
add
dec
pop
stos
cmc
jnp
mov
dec
push
mov
mov
das
mov
and
rcl
js
jae
clc
cmc
bound
aas
and
js
into
mov
in
and
fld
sbb
adc
lods
or
sbb
jl
or
mov
adc
cdq
mov
jo
pop
cmps
(bad)
push
nop
retf
imul
and
test
inc
dec
bound
je
sub
sub
push
add
adc
dec
ss
call
daa
inc
xor
or
mov
std
xchg
ins
push
xchg
test
cwde
add
cbw
dec
push
jle
mov
jb
cdq
jmp
out
dec
cmp
pop
stc
mov
add
push
xlat
sti
clc
leave
mov
mov
jl
sbb
cs
aam
test
mov
cld
inc
sub
jo
pop
jp
add
pop
lds
inc
mov
dec
pop
int
fistp
test
push
retf
pop
mov
stos
lock
sbb
sub
push
idiv
mov
les
adc
push
or
outs
ins
cld
inc
inc
add
data16
in
sti
lods
imul
xchg
aas
sbb
or
std
loop
call
push
and
xchg
gs
scas
sbb
mov
repnz
movs
inc
imul
cmp
xchg
das
push
pop
lock
stos
and
inc
push
and
jmp
movsx
int3
inc
lods
or
je
or
cmp
or
push
push
repz
mov
outs
mov
adc
rcl
out
pop
inc
sbb
cwde
mul
ret
mov
push
and
hlt
and
inc
or
clc
into
(bad)
add
das
pop
adc
inc
push
ja
lods
inc
mov
test
pop
dec
dec
pop
xchg
push
je
ds
loope
or
retf
cmp
add
(bad)
fadd
enter
jbe
rol
test
in
push
or
nop
dec
inc
in
cld
xlat
mov
shr
popa
cld
jg
std
es
cmp
ins
mov
scas
lock
movs
out
aas
(bad)
dec
push
int3
cmp
push
inc
sub
pop
ss
or
fcmovbe
fstp
sbb
adc
xor
pop
(bad)
iret
stc
ret
jns
add
push
push
adc
dec
shr
mov
mov
mov
adc
hlt
xor
xor
pop
or
lods
mov
rcl
jp
jge
rol
mov
xor
inc
or
pop
inc
in
loopne
scas
xor
aad
rol
fs
add
loopne
rol
or
sbb
xor
popa
and
aaa
(bad)
test
mov
test
xchg
push
jge
push
adc
fmul
das
push
lods
ss
inc
fld
push
sub
cmp
mov
jge
xchg
nop
or
add
mov
aam
dec
dec
and
sbb
pop
call
mov
imul
loopne
fmul
cmp
imul
mov
sbb
les
pop
mov
in
mov
xchg
inc
shl
sub
xor
push
push
(bad)
pop
lahf
nop
sti
adc
mov
dec
jmp
ins
in
fdivr
and
ret
shl
ins
or
dec
das
leave
sub
jae
jo
out
repz
push
mov
cmp
int3
movs
mov
fidiv
js
mov
fistp
and
push
retf
ins
jbe
cmp
xlat
push
push
pop
pushf
add
dec
movs
sbb
test
stos
adc
(bad)
das
dec
adc
mov
push
fsubr
add
or
push
data16
lea
scas
(bad)
mov
push
lods
movs
sbb
data16
(bad)
hlt
jecxz
jns
mov
xchg
hlt
sub
mov
inc
sbb
jae
(bad)
in
cwde
push
fild
cwde
not
xchg
push
lea
test
mov
jns
mov
(bad)
lock
mov
cld
push
ja
add
pop
cs
lods
ins
pop
(bad)
jmp
mov
mov
pop
mov
gs
jns
adc
add
loope
fwait
(bad)
sub
mov
cld
and
enter
(bad)
xor
jae
and
cmps
test
push
and
dec
push
dec
push
aam
push
pop
xchg
into
pop
in
(bad)
xor
jne
pop
add
cmp
mov
add
xchg
xor
daa
mov
and
ss
lahf
jne
xor
int
jle
outs
pop
mov
test
loopne
js
mov
cld
cwde
mov
lahf
popa
adc
xchg
jle
adc
sbb
shl
into
xchg
repz
sbb
sbb
xchg
xchg
jbe
sti
je
xchg
mov
sub
and
mov
lahf
push
(bad)
(bad)
(bad)
lock
out
cdq
push
sbb
xor
mov
pop
mov
in
leave
dec
jae
loope
and
push
cdq
xchg
stc
mov
dec
mov
ja
cld
mov
xchg
inc
pop
mov
gs
not
fcom
bound
or
push
push
push
dec
lahf
jne
inc
adc
ror
cli
nop
cmp
xchg
sbb
and
jno
mov
xchg
push
xchg
aas
not
xchg
imul
inc
fwait
xor
hlt
clc
inc
stc
cmp
sahf
outs
adc
mov
retf
xor
jp
scas
sbb
mov
dec
sbb
test
(bad)
popa
int
adc
adc
and
xor
in
ror
bound
pop
adc
rol
scas
mov
or
dec
arpl
in
pop
hlt
bound
imul
xor
push
push
mov
dec
and
cs
pusha
mov
outs
xlat
mov
ret
sar
mov
(bad)
fucomi
aam
mov
enter
jae
inc
arpl
aaa
pusha
xor
stos
sbb
movs
sub
call
aad
hlt
xchg
outs
add
aas
mov
xor
cmps
push
sub
pop
cwde
fcom
adc
add
stos
fild
pop
cmp
adc
mov
fsubp
mov
jns
pop
xor
or
pushf
cli
sti
retf
sbb
inc
icebp
fmul
xor
popf
stos
inc
in
push
out
sar
test
jle
loopne
push
add
add
sub
add
sbb
and
das
sub
and
mov
arpl
rcr
iret
fstp
jns
imul
movs
pop
rcr
cmp
sub
xor
adc
jmp
fbld
pop
dec
cmc
lods
(bad)
lds
xchg
pop
in
mov
inc
xchg
sbb
in
lods
sub
jbe
shr
fild
jecxz
mov
sahf
ja
cld
sbb
xor
mov
and
pop
popf
dec
fstp
and
jge
call
sbb
jnp
xchg
imul
sbb
jmp
pusha
adc
xchg
popa
mov
mov
adc
int3
push
arpl
repz
cmp
dec
pusha
dec
sbb
mov
jge
add
adc
jno
add
test
(bad)
dec
nop
sub
(bad)
jno
sar
sbb
jae
cmc
arpl
in
adc
mov
stc
dec
adc
out
and
ffree
mov
lock
cmp
dec
mov
inc
cmc
xor
pushf
add
ins
fwait
(bad)
push
pop
push
sub
popa
(bad)
dec
sbb
xor
inc
push
fcomp
or
sub
sti
jns
aam
mov
movs
aam
xor
mov
jno
mov
std
fild
pusha
je
fldenv
and
adc
or
mov
clc
loopne
lds
cmp
loope
adc
sahf
cmps
pop
push
sbb
rcl
cli
daa
movs
pop
add
hlt
js
xor
jl
cli
and
in
mov
dec
or
xchg
mov
retf
xchg
addr16
sahf
or
jo
test
iret
add
mov
lahf
xchg
pop
xor
loop
mov
pop
sbb
jns
push
jne
and
xchg
and
mov
jae
pop
lock
outs
pop
pop
test
sar
dec
mov
sbb
addr16
cmp
fisubr
dec
lods
sbb
adc
cmp
cmp
rcl
mov
aas
scas
mov
cmps
inc
cmps
inc
test
xlat
sbb
cmp
sub
dec
stc
ror
retf
jecxz
mov
cmp
adc
fdivp
clc
jmp
pop
pop
push
xor
and
mov
adc
ret
add
mov
iret
out
xor
stc
add
sbb
xor
lds
aas
(bad)
mov
sub
xor
(bad)
mov
icebp
pop
in
aad
call
popa
outs
jne
xor
inc
xchg
sbb
jae
inc
dec
jno
arpl
sub
fwait
and
jg
jnp
retf
pop
out
mov
jo
jno
jecxz
cs
sti
icebp
std
pop
adc
pop
out
inc
sbb
push
push
pop
clc
fiadd
ins
and
sbb
pop
nop
aad
add
mov
xor
into
push
add
sbb
mov
not
daa
stos
and
inc
sbb
push
test
arpl
test
movs
test
jmp
and
or
ins
push
fcomp
and
or
jb
ins
int
cmp
jb
fucomi
sub
inc
mov
test
xchg
cli
sbb
popf
test
cmp
sub
fwait
or
jns
cmp
rol
push
xlat
mov
das
shr
push
cmp
gs
mov
or
sub
sbb
call
loop
push
mov
mov
cmp
mov
adc
push
sbb
fcom
mov
stc
dec
ss
jle
sbb
shl
test
jns
jb
mov
push
enter
xor
stos
mov
retf
scas
xor
jbe
cmp
push
(bad)
aad
ds
jmp
fmul
jmp
mov
(bad)
addr16
jnp
stc
pop
enter
mov
rol
and
pop
xchg
pop
outs
jno
dec
rcr
mov
aas
adc
mov
loope
xchg
out
push
fsubr
icebp
sub
popa
popf
mov
push
shl
xchg
cmp
xor
int3
movs
jle
mov
mov
and
out
push
mov
push
lea
out
mov
and
gs
shl
fs
out
ja
cmp
sub
mov
loopne
jbe
dec
(bad)
xor
lock
inc
mov
loop
jge
and
(bad)
lods
adc
or
aad
scas
or
gs
jb
cwde
push
push
add
rcl
sub
or
or
test
and
aas
nop
sbb
pusha
xchg
mov
inc
retf
pop
(bad)
jg
mov
fdivr
fcom
dec
pop
mov
stos
adc
sub
imul
pop
mov
xor
mov
or
cld
pop
xor
dec
sub
ror
pop
pop
neg
in
fnstenv
mov
cmps
jo
dec
dec
push
mov
jl
push
arpl
in
stc
push
stc
sub
mov
mov
iret
add
aas
add
fwait
or
jg
ret
mov
std
mov
js
inc
loopne
mov
jne
call
adc
push
neg
mov
lods
jmp
lahf
retf
jne
add
mov
jo
aad
test
fwait
inc
(bad)
mov
inc
xchg
jcxz
les
(bad)
cli
clc
lods
popf
iret
jge
movs
das
push
push
ins
test
mov
push
mov
arpl
(bad)
adc
adc
mov
mov
js
mov
imul
pop
(bad)
movs
mov
mov
in
ds
jne
inc
and
mov
xchg
dec
jnp
mov
es
(bad)
iret
jle
xchg
mov
sub
sub
cmp
cli
sbb
jno
xchg
adc
lods
out
jns
xchg
push
out
push
cmc
outs
adc
std
sub
and
shr
xor
fwait
add
or
pop
adc
pop
push
mov
dec
scas
jl
xor
pop
and
mov
scas
(bad)
sub
inc
sahf
cmps
dec
push
push
mov
add
lock
mov
retf
inc
rep
jns
fist
mov
mov
in
xor
(bad)
push
inc
cmp
sub
adc
ins
jo
nop
loop
lds
push
dec
loope
ret
stc
jmp
and
mov
pushf
repz
shl
fadd
fs
jbe
ss
scas
loopne
retf
sbb
inc
stos
enter
push
pop
sub
in
dec
cmps
jl
inc
lock
lods
mov
cmp
dec
cmp
jne
loop
sbb
jl
rol
inc
(bad)
fbld
adc
lods
aad
jbe
imul
ja
(bad)
cmp
shl
loop
bound
repz
loope
call
mov
movs
leave
arpl
out
adc
sbb
cmp
scas
push
dec
pop
mov
lock
std
jmp
xchg
pop
sbb
jbe
xchg
mov
xchg
test
lock
jmp
add
add
pusha
stos
movs
movs
into
in
test
iret
imul
dec
sahf
or
pop
test
aaa
push
jbe
out
push
in
jbe
or
ret
outs
push
jae
xchg
and
in
mov
icebp
xor
push
inc
sar
stos
xchg
ret
cmp
clc
push
jb
inc
pop
mov
mov
cmp
mov
rcl
ins
std
mov
jl
and
pop
pushf
test
int3
jg
mov
fbstp
cmc
xchg
out
and
popf
pop
outs
jb
aaa
(bad)
mov
dec
mov
hlt
cmp
mov
mov
pop
sbb
jle
add
push
xor
cmp
xchg
stc
lock
stos
push
mov
or
xor
add
rcr
out
jle
in
lock
xchg
xchg
(bad)
clc
ja
xor
mov
pop
dec
xor
in
xchg
fst
mov
je
jge
je
mov
lods
mov
mov
dec
loope
rcr
xor
stos
xchg
mov
push
idiv
mov
xchg
sbb
mov
jo
jo
sbb
jmp
lahf
cwde
fwait
out
mov
aaa
loope
xchg
xor
and
jmp
inc
mov
sbb
mov
out
pop
jb
sub
cmps
aad
idiv
pop
test
(bad)
or
mov
jle
outs
bound
dec
ror
outs
jbe
fistp
arpl
out
mov
mov
adc
push
lds
in
gs
sbb
push
xor
es
(bad)
(bad)
and
fldenv
xor
inc
mov
int3
xchg
pusha
pop
jle
in
dec
ret
adc
test
outs
mov
xchg
ins
push
fs
leave
xchg
shl
lods
fs
jl
pop
rcl
int3
cdq
(bad)
dec
jmp
inc
in
clc
jbe
push
pusha
in
mov
mov
sub
and
push
scas
mov
mov
sub
pop
ins
and
mov
aas
and
push
inc
bound
mov
inc
outs
or
xlat
push
fst
mov
jb
push
jp
int
jge
inc
jb
jne
je
repz
jmp
cdq
fst
push
aam
ficomp
(bad)
ror
add
(bad)
sub
sbb
mov
adc
retf
mov
pop
dec
(bad)
icebp
retf
dec
dec
repz
mov
mov
(bad)
out
ins
inc
into
jmp
fwait
ret
sbb
into
mov
xor
repnz
stos
ret
add
aam
pop
adc
pushf
sar
dec
inc
adc
pop
jae
push
ret
scas
leave
or
mov
aam
xor
pop
lahf
lods
inc
repz
fcompp
cmps
push
test
aaa
mov
sub
xor
add
sbb
imul
lea
call
pop
scas
repnz
pop
adc
jbe
mov
lock
pop
mov
cmp
loop
mov
movs
add
cdq
ret
sbb
(bad)
loopne
xor
std
aaa
inc
stos
xor
mov
rcr
inc
dec
xrelease
cmc
aam
ja
add
iret
mov
mov
dec
pop
jge
das
jne
test
scas
rol
add
dec
inc
sti
aaa
inc
add
pusha
pop
sub
jo
jno
sti
add
and
cwde
test
cmps
scas
out
dec
das
mov
repz
and
xchg
inc
loope
outs
cmp
es
add
xchg
pop
sbb
sub
push
add
jns
adc
pop
bnd
pop
cmp
int
call
aam
in
fistp
fidivr
xor
xchg
cmp
sub
cmp
and
or
mov
fisub
iret
lods
jp
imul
xor
adc
in
mov
js
in
jecxz
(bad)
jg
jae
outs
adc
cld
lds
mov
or
call
mov
pop
push
sbb
arpl
ja
jmp
push
jp
push
popf
cwde
add
in
jne
ja
mov
std
lds
dec
and
push
test
xor
jp
add
idiv
xlat
fimul
shl
adc
retf
jo
mov
lea
dec
xor
adc
out
gs
dec
(bad)
jb
cmps
xor
add
jmp
test
mov
push
and
dec
or
mov
push
push
jno
mov
push
fwait
mov
arpl
ret
cmp
inc
add
sar
(bad)
push
push
loope
cmps
dec
xor
fcom
sbb
mov
arpl
adc
lds
push
push
es
lods
in
pop
xchg
or
adc
lods
out
pop
mul
mov
xchg
iret
jae
add
pushf
or
repnz
les
pop
mov
(bad)
ins
xchg
ds
add
or
daa
push
mov
pop
cmp
test
fsubr
mov
dec
jmp
(bad)
sub
or
enter
int3
xchg
add
or
lock
(bad)
out
xchg
jae
(bad)
outs
dec
ficom
mov
mov
push
add
push
mov
stos
xor
cmp
es
xchg
out
mov
add
fstp
mov
cmps
or
test
mov
xor
retf
lock
adc
fbstp
(bad)
repnz
push
imul
lea
or
push
jle
push
bound
jmp
ins
sub
push
and
ror
mov
ret
cdq
imul
and
xlat
lods
mov
hlt
add
test
les
sub
pop
jge
scas
xchg
mov
add
xor
inc
daa
xor
out
mov
sub
push
iret
mov
push
jle
std
push
sbb
mov
(bad)
scas
xchg
ins
fsub
xbegin
sub
adc
ss
mov
mov
repz
pop
sahf
sbb
fcom
clc
fild
aad
inc
repnz
sub
loopne
cmp
iret
cmc
sbb
int
rcl
iret
aad
in
mov
add
xchg
lahf
xchg
stos
push
mov
adc
test
(bad)
aam
pushf
or
mov
jno
pushf
cmps
fchs
jg
jmp
pop
and
fstp
dec
adc
sbb
or
js
push
or
xchg
push
adc
clc
out
out
xor
gs
mov
or
xlat
push
xor
movs
mov
fwait
cdq
jg
popa
jp
mov
mov
mov
mov
jecxz
rcl
cwde
not
jns
jne
(bad)
call
lea
(bad)
sti
mov
lea
ins
mov
and
into
lahf
or
icebp
aas
ret
sbb
pop
bound
adc
pop
push
je
retf
pushf
jo
jle
outs
inc
call
outs
adc
sub
fs
mov
inc
adc
adc
sbb
shl
pop
xor
mov
adc
aad
xchg
lods
arpl
loope
pop
dec
iret
inc
sbb
or
leave
lock
rol
or
sbb
clc
shr
cmps
inc
popa
ret
js
retf
jbe
test
push
sbb
sub
pop
mov
cs
rol
jnp
or
ds
or
test
mov
aas
pop
mov
cmp
jmp
shl
cli
iret
pop
iret
mov
push
and
xchg
into
jo
mov
aas
mov
ror
mov
or
lds
xchg
cwde
ja
nop
add
cmc
mov
mov
cmp
pop
sub
pop
sub
fisubr
pop
mov
mov
mov
xchg
and
cmps
xchg
arpl
push
inc
fbstp
mov
push
arpl
ret
mov
lods
lods
or
sbb
add
(bad)
cmp
rcl
xor
and
mov
cmp
pop
pop
inc
ins
xchg
cwde
jbe
mov
scas
stos
scas
cs
shl
popa
mov
xor
sbb
movs
stc
jmp
mov
sbb
mov
mov
sub
sbb
out
sbb
(bad)
out
cmps
sbb
dec
jp
and
dec
mov
cmp
mov
movs
adc
int
push
inc
mov
ror
aaa
leave
(bad)
jns
setno
das
jbe
(bad)
mov
dec
push
ret
cmps
xor
jns
fnstenv
xchg
lds
test
mov
cmps
push
and
mov
fwait
es
dec
fstp
push
in
add
xchg
pop
pop
and
and
xor
mov
add
out
dec
ret
and
outs
xchg
(bad)
sub
jecxz
push
sbb
dec
jecxz
cmp
push
pop
adc
cmp
pop
xor
pop
xor
adc
push
in
xor
xchg
sub
pusha
sbb
push
adc
sub
mov
loop
imul
repz
jecxz
popa
mov
inc
popf
mov
adc
lods
ss
add
and
lods
int
or
out
retf
jne
inc
lds
popf
test
fdivr
dec
pop
mov
daa
and
adc
es
jbe
sub
je
mov
in
fnstsw
loope
pop
mov
dec
jo
cmp
add
test
cmps
imul
mov
ret
fidivr
jecxz
test
adc
neg
fbld
cmps
push
xor
mov
ror
and
add
add
aad
xchg
or
sbb
int3
test
jge
jbe
inc
enter
scas
cmp
lahf
push
and
mov
or
mov
cmp
fsubr
xchg
int
shr
repnz
test
cli
pop
pushf
push
mov
stos
push
jmp
adc
movs
or
add
int3
ret
(bad)
xor
dec
mov
xchg
mov
xor
push
addr16
mov
or
sahf
imul
and
and
push
jae
in
into
rcr
ficom
mov
adc
pop
cld
xchg
cwde
xor
xchg
sbb
add
jmp
xchg
les
sub
pop
ficomp
lods
cld
sbb
mov
scas
bound
in
test
adc
dec
mov
loopne
pushf
jne
rol
stos
in
clc
es
rol
gs
aas
cdq
xchg
mov
lds
cmp
(bad)
sar
jne
in
jmp
jmp
pushf
adc
sub
mov
mov
or
cmp
pop
retf
and
mov
test
sbb
dec
inc
out
in
mov
add
mov
arpl
pop
jnp
sbb
mov
not
adc
jne
imul
mov
xchg
repnz
out
cli
imul
in
movs
jmp
sbb
ja
popf
outs
pop
cmc
and
pop
mov
push
or
in
xchg
mov
aam
lock
mov
sub
cmp
push
push
cwde
dec
mov
push
test
mov
add
(bad)
cmp
lea
jp
or
mov
test
cmp
mov
sbb
pop
adc
fcom
jmp
or
mov
add
add
jb
add
loopne
pop
stos
sti
cmp
pop
rcr
fnstcw
and
adc
xor
ins
add
xor
adc
jb
lea
movs
call
test
pop
mov
sub
mov
das
xchg
leave
add
mov
sbb
sahf
mov
sbb
sub
mov
and
xchg
xchg
xchg
cmp
cwde
out
push
add
stc
cmp
sub
xchg
mov
push
add
iret
xchg
mov
push
das
stos
inc
sub
rcr
mov
cmc
out
popa
add
pop
cld
push
mov
mov
retf
inc
aad
pop
pop
jbe
mov
sub
adc
cmps
pop
shr
pop
push
ss
in
mov
sahf
sbb
mov
repz
push
mov
or
int
adc
pushf
pop
and
shl
fld
ins
mov
xor
xor
jecxz
fsubp
or
movs
out
lods
add
cdq
adc
in
lock
clc
and
(bad)
lock
in
pusha
inc
inc
sub
mov
push
(bad)
jmp
iret
mov
in
lods
xchg
pop
into
add
sbb
lods
call
pop
mov
loopne
cmc
push
push
and
inc
dec
dec
scas
aas
mov
and
inc
mov
lods
add
jge
movs
popa
cmp
fcom
sahf
cli
jge
mov
sahf
inc
iret
push
adc
vhaddpd
mov
jb
movs
retf
add
or
daa
or
push
lock
jmp
sub
push
mov
ss
xchg
shl
outs
or
xor
ds
pop
xor
hlt
stc
mov
jnp
xchg
dec
jb
fisub
or
popf
inc
sub
int
(bad)
push
pop
and
pop
push
inc
inc
mov
xor
es
sbb
jno
push
test
sbb
inc
inc
inc
pop
stos
pop
mov
mov
inc
mov
inc
(bad)
push
cmc
mov
cmp
pop
xchg
inc
push
and
xchg
fucomp
lock
sbb
(bad)
mov
mov
inc
das
out
into
in
pusha
mov
mov
cmps
shr
xor
inc
push
mov
loopne
xchg
pop
cmp
mov
or
mov
lods
enter
inc
push
in
dec
hlt
pop
lahf
cmp
cmp
and
inc
ret
shl
lds
js
push
inc
ja
arpl
cmp
mov
push
scas
popa
cmp
push
xchg
fiadd
sbb
mov
or
dec
xchg
(bad)
je
mov
adc
sub
lods
dec
add
xchg
repz
jecxz
fsub
lods
xor
mov
xlat
(bad)
push
mov
mov
jnp
(bad)
jae
mov
test
cdq
jmp
dec
(bad)
xchg
ins
adc
sub
and
ins
gs
mov
ja
cmp
fscale
sbb
or
test
or
sub
iret
and
(bad)
out
js
imul
aad
adc
stos
push
mov
or
iret
enter
xchg
xchg
shr
adc
loope
cld
sti
(bad)
out
adc
xchg
pushf
loopne
pop
(bad)
sub
dec
fdiv
jge
fistp
std
fs
cmp
cmp
fnstsw
in
mov
fstp
mov
cmp
pop
mov
sbb
pop
or
dec
out
push
ins
or
fld
cmc
inc
clc
neg
add
std
sub
js
fsubrp
mov
sbb
push
sbb
xor
fs
ds
xor
popa
and
into
xor
sahf
mov
jae
fistp
enter
loop
sub
add
mov
xchg
add
loope
dec
mov
fstp
jnp
int
fldcw
fldenv
repnz
imul
imul
imul
and
dec
sub
dec
jp
(bad)
cmc
inc
fiadd
ins
in
popa
outs
adc
mov
into
iret
leave
jnp
inc
mov
mov
sub
and
std
jp
and
dec
call
xchg
mov
das
inc
and
aad
mov
sti
pop
mov
sub
jb
push
add
sahf
hlt
imul
xor
lods
in
in
jge
cmp
add
(bad)
rcr
adc
sbb
(bad)
pop
adc
int3
xchg
lock
loop
out
add
movs
jno
xchg
xor
sbb
cwde
pop
js
retf
mov
push
ds
jge
add
mov
mov
out
push
lock
pop
les
push
sbb
aad
ret
jge
mov
mov
loope
cld
xchg
jge
and
pop
inc
pop
out
push
xor
js
aam
push
or
movs
(bad)
pushf
lea
(bad)
ja
test
dec
(bad)
pusha
scas
mov
lock
pop
ret
(bad)
mov
sub
mov
aaa
stos
rol
xor
push
xchg
rol
movs
mov
or
jp
push
sbb
clc
cmp
push
and
scas
ffreep
mov
add
pop
movs
push
jne
test
push
dec
push
call
mov
push
mov
pop
ss
in
call
inc
ror
lahf
rcl
mov
inc
fst
movs
pop
sti
mov
jmp
add
(bad)
adc
mov
leave
pop
push
add
aas
fistp
in
and
or
in
xor
ins
retf
mov
sbb
mov
add
jg
dec
jae
jecxz
mov
ja
xlat
push
add
xchg
(bad)
mov
pop
ret
(bad)
repnz
js
jo
ret
mov
aad
cmc
add
ins
sbb
add
inc
pop
dec
call
jecxz
mul
in
movs
dec
cmp
dec
push
daa
test
and
mov
addr16
inc
fsub
fcomp
and
mov
unpcklps
inc
ja
xchg
nop
mov
push
push
xor
cmp
pop
mov
ror
jmp
jg
adc
dec
mov
aaa
sub
add
pop
fist
sbb
movs
int3
ret
in
je
test
sbb
lds
rcl
fstp
fwait
lock
jp
mov
mov
pop
icebp
cmp
repnz
pop
in
cmp
jl
popa
ret
mov
or
sar
rol
jnp
push
jmp
xor
sar
jg
gs
and
mov
jb
mov
and
shl
lahf
bound
sbb
js
sbb
lock
out
test
pop
or
or
aam
inc
bound
aas
hlt
sbb
rcr
cmp
(bad)
stos
retf
and
(bad)
loopne
retf
stos
mov
and
sub
adc
fwait
loopne
bound
cmps
sbb
test
cli
fcom
cmp
popf
adc
sbb
cdq
inc
test
jle
fisub
add
lea
ss
jge
daa
loop
fnstcw
test
cmp
or
lahf
inc
inc
fdiv
jbe
retf
push
stos
mov
push
leave
ret
push
pop
aas
sbb
push
jae
popa
pop
repnz
stc
mov
pop
mov
out
fimul
inc
fcmovnu
dec
add
lods
sub
push
mov
lds
mov
lods
push
xchg
cmp
adc
sbb
push
mov
jp
add
or
loope
(bad)
dec
and
scas
jp
out
js
loopne
es
inc
adc
fdivr
retf
aad
mov
xchg
push
in
repnz
jmp
clc
fnclex
sub
shr
mov
sub
mov
and
inc
xchg
cmc
mov
adc
leave
pushf
jmp
pusha
dec
dec
idiv
fnstenv
movs
pop
stos
mov
push
inc
xlat
adc
mov
test
xchg
pushf
adc
xchg
repz
test
mov
movs
mov
xor
adc
inc
fdiv
mov
in
add
ret
sub
and
jg
xor
pop
out
call
add
push
out
test
and
mov
sti
int3
repnz
pop
xchg
push
push
adc
push
mov
test
mov
fsubr
cmps
rcl
pop
lds
or
lahf
or
je
inc
xchg
dec
fs
test
jg
pop
jp
push
xor
int3
mov
inc
aaa
sahf
inc
lods
mov
popf
mov
mov
test
data16
cmp
iret
or
ror
(bad)
call
pop
xlat
popf
mov
sbb
and
cmp
dec
sbb
pop
mov
jmp
jnp
jb
fstp
aad
scas
sbb
sub
cmp
arpl
fidivr
adc
sar
push
mov
or
(bad)
stc
push
into
or
jnp
pop
iret
push
dec
or
mov
sub
cli
and
xor
ins
jge
xchg
add
push
sti
icebp
lods
adc
jl
dec
lds
cmp
leave
mov
inc
pop
out
dec
add
push
dec
jmp
(bad)
loope
das
xchg
jl
adc
sbb
push
or
inc
aaa
clc
shr
jb
ret
in
out
dec
push
rol
xor
aas
push
ret
or
jb
inc
fisubr
(bad)
sar
sub
dec
sbb
sahf
cmps
shr
cmps
shl
lods
inc
es
sub
and
mov
jno
adc
and
test
ss
sub
cmps
call
ja
and
leave
or
jmp
sbb
jecxz
movs
gs
inc
cmp
pop
call
adc
dec
popf
retf
jg
std
cmp
fistp
and
iret
xor
sbb
ret
movs
adc
call
sar
outs
test
hlt
mov
nop
inc
into
fs
cmp
in
movs
arpl
addr16
adc
jl
cmc
ficom
jns
cmp
call
cs
(bad)
pushf
scas
ins
lods
ds
sbb
dec
popf
aas
mov
jg
gs
sti
mov
mov
mov
ret
test
mov
in
popf
fcom
addr16
push
jb
out
in
addr16
cmp
add
push
stos
xchg
mov
pop
movs
xchg
jp
stos
ret
jne
sub
clc
int3
ss
pusha
pop
call
push
call
imul
nop
outs
add
mov
lods
mov
sub
addr16
xchg
dec
test
and
xchg
sbb
test
lds
loope
jle
lahf
inc
push
sub
cld
inc
inc
movs
out
add
fidivr
shr
stos
or
push
scas
lea
es
loopne
inc
sar
mov
je
adc
pushf
out
pop
dec
xchg
dec
(bad)
pop
push
inc
mov
push
dec
inc
jp
mov
ror
pop
or
test
inc
out
adc
sbb
lods
fwait
test
mov
imul
dec
daa
add
mov
and
cli
and
data16
jg
imul
pushf
addr16
xchg
xchg
dec
and
addr16
js
jbe
jne
xchg
retf
in
and
xlat
mov
aam
ret
ror
jno
out
leave
push
fs
fld
mov
ficomp
jg
int
or
in
cmp
mov
fdivr
(bad)
mov
inc
mov
cld
stos
out
test
popf
cli
sbb
outs
add
dec
xor
push
clc
jp
jne
cmp
ret
jb
mov
dec
icebp
movs
cmp
inc
xor
push
ss
sbb
pop
int
into
mov
sbb
push
es
ds
out
xchg
mov
push
scas
sub
lods
popa
push
std
cmp
pop
fld
dec
retf
cs
imul
push
sub
and
mov
imul
out
push
fidiv
fdiv
loopne
mov
pop
das
out
test
jns
adc
jle
div
mov
ins
sbb
gs
add
lods
and
pop
aaa
fld
js
retf
int3
xor
retf
repnz
popf
inc
test
adc
(bad)
pop
xchg
pop
pop
arpl
dec
mov
dec
xchg
sahf
jno
cmps
js
push
out
mov
fs
mov
shl
jecxz
sti
fsub
xchg
popf
xor
mov
(bad)
pop
gs
mov
icebp
adc
fsubr
adc
leave
sub
push
add
dec
mov
test
retf
les
cmp
jae
inc
sub
int
add
stos
test
push
out
sub
jnp
add
cmp
push
not
iret
shl
mov
jmp
sub
(bad)
(bad)
and
adc
les
daa
std
lods
fcom
shl
test
sti
adc
test
jmp
pop
loope
or
mov
rcr
jno
inc
sbb
lock
push
or
mov
mov
or
out
jbe
fdivr
dec
aaa
or
rcr
sub
fst
adc
jmp
jl
aas
out
jns
dec
scas
xlat
lock
inc
mov
add
repz
push
push
loope
aas
pop
shl
or
sbb
dec
stos
xchg
call
inc
sbb
enter
lds
int
mov
aaa
or
sub
shr
ficom
mov
pop
movs
mov
shl
adc
jae
xor
adc
mov
push
pop
sub
jge
add
movs
cmc
jecxz
loope
pusha
pop
and
int3
arpl
xor
les
ins
je
cs
jle
add
cmp
jb
in
mov
test
jbe
add
retf
mov
jecxz
fld
scas
inc
sub
pop
out
fwait
hlt
push
or
out
retf
xchg
jg
mov
xor
mov
std
outs
xchg
shl
mov
popf
(bad)
jl
push
retf
and
addr16
sbb
mov
cmp
fs
push
ror
mov
xor
movs
idiv
xchg
pop
aaa
mov
test
adc
mov
xor
retf
in
shl
and
mov
nop
cs
shl
out
stos
push
aad
out
push
pop
sbb
sub
out
frstor
ins
out
mov
xchg
loop
js
cdq
aaa
sbb
loope
sar
fbstp
pop
div
jb
pop
mov
ins
mov
out
idiv
ja
neg
fsubr
cmp
pop
icebp
mov
xchg
sbb
out
in
xchg
pop
cmp
sbb
movs
push
not
jae
push
adc
or
jmp
mov
pop
pushf
fs
inc
addr16
les
cmp
mov
jns
or
ret
scas
aaa
pop
popa
sar
add
out
imul
push
dec
push
adc
jecxz
and
sub
adc
fsub
mov
jle
sub
jne
ret
mov
and
stos
or
xchg
mov
cli
xchg
retf
bound
enter
sbb
mov
cmps
fidiv
ss
mov
out
push
push
call
sub
inc
retf
inc
mov
mov
lahf
sbb
mov
neg
popa
sub
push
mov
ret
mov
jecxz
and
pusha
add
out
push
int3
cdq
mov
pop
ret
mov
arpl
ficom
sbb
dec
pop
sub
iret
ficom
(bad)
sub
scas
mov
mov
dec
mov
xchg
sbb
fisub
jbe
mov
cmp
ror
xchg
loop
fidiv
popf
cmps
popa
mov
and
jp
loop
pop
test
pop
and
shr
pop
popf
out
push
dec
fdiv
sbb
fstp
sbb
outs
test
bswap
popa
mov
or
adc
mov
cmps
push
ficomp
adc
inc
fdivr
enter
loop
push
push
sar
sub
cld
fnstsw
(bad)
mov
jp
sbb
clc
inc
in
sub
push
xchg
lock
mov
push
push
lds
out
sbb
ins
ins
pop
add
ficom
outs
aaa
mov
inc
push
adc
pop
jne
add
stos
cwde
pop
les
adc
fisttp
sbb
loopne
adc
repz
(bad)
mov
dec
fcomp
push
scas
test
pop
and
or
iret
adc
mov
aas
and
fwait
mov
rcl
lods
xchg
cmps
mov
pop
inc
dec
leave
hlt
test
push
jnp
retf
jnp
shl
pushf
jmp
push
dec
das
jge
pop
dec
enter
xor
(bad)
imul
or
cmp
mov
pop
jmp
cmc
xchg
xor
xchg
push
mov
or
fcom
cld
fisub
fcom
jbe
sbb
jp
and
add
cdq
das
cmps
jns
add
dec
push
sub
ss
loop
pusha
and
cdq
mov
retf
je
mov
dec
lgs
aad
sbb
cmp
loope
and
mov
add
and
rcl
hlt
in
and
fcomi
test
repz
je
jns
lds
add
push
mov
adc
loop
ficom
shl
out
jl
out
cmp
xor
adc
test
mov
sbb
cmp
outs
xor
fisub
aad
sbb
mov
or
mov
adc
adc
das
dec
ja
loop
push
test
(bad)
cdq
pop
pop
(bad)
and
xlat
ins
cmp
jecxz
fwait
jp
call
dec
ja
or
xor
pop
fadd
nop
cmp
popf
in
xchg
fnsave
add
hlt
inc
fiadd
dec
inc
retf
cdq
xchg
or
cmp
(bad)
lahf
jg
fst
in
xchg
aam
pop
stos
dec
inc
xchg
ret
imul
xchg
push
repz
mov
rol
push
lods
shr
fisttp
jl
jno
or
(bad)
popf
xlat
(bad)
(bad)
shl
pop
pop
movs
inc
jo
call
pop
pop
sbb
test
pusha
inc
jbe
aaa
sub
xchg
retf
mov
mov
aam
jns
out
sbb
mov
push
call
sti
fmul
sub
mov
dec
out
adc
or
addr16
jb
aad
sti
ds
mov
mov
xor
enter
into
mov
and
pop
jae
cmp
pop
add
sub
push
fsubr
sahf
dec
dec
pop
cmps
shl
and
mov
cmp
fldenv
jl
cld
jmp
ja
dec
xor
cs
cwde
pushf
cmp
mov
sub
ins
inc
jno
and
sbb
aad
adc
aas
inc
push
xor
jb
in
sbb
loop
sti
mov
shl
scas
into
jmp
daa
ds
(bad)
outs
cmp
adc
cmp
adc
inc
dec
mov
call
pop
lahf
stos
sub
repz
jns
stos
xchg
jo
inc
mov
push
pop
loop
aas
jl
retf
fbstp
adc
fwait
leave
mov
cmc
cmp
inc
pop
(bad)
scas
pop
iret
xor
jo
push
sbb
xchg
jb
cld
pushf
pop
xchg
inc
inc
leave
push
mov
repz
test
xchg
lods
cld
js
fs
(bad)
jbe
xchg
icebp
(bad)
and
mov
out
mov
inc
and
fld
add
mov
cwde
mov
mov
loopne
pop
shl
ins
add
sbb
sar
xor
adc
mov
jge
xor
je
jne
ret
push
mov
and
dec
mov
(bad)
and
pop
fistp
cmp
pop
dec
aas
hlt
retf
or
jno
dec
nop
(bad)
mov
sbb
aas
jp
imul
loopne
and
std
ror
movs
stos
push
jl
push
mov
cmp
xchg
xchg
lock
sbb
nop
mov
jle
ins
sub
mov
out
(bad)
jp
mov
dec
cwde
sbb
enter
int
sbb
xchg
cwde
ret
mov
enter
in
fst
das
mov
ficom
shr
lds
jne
push
retf
rcl
mov
or
popa
outs
jno
dec
jne
call
es
pop
int
jns
mov
sti
jge
pop
mov
mov
(bad)
shl
add
fcmove
(bad)
idiv
imul
js
unpcklps
fcmovnu
movs
mov
mov
xor
(bad)
dec
fiadd
xchg
mov
fild
nop
je
lock
and
pop
fs
stos
jne
or
dec
shl
out
mul
cmps
push
jae
add
add
xor
xchg
push
fidivr
mov
imul
aas
test
push
xor
mov
in
mov
jne
push
das
cmp
jmp
jl
mov
inc
iret
popf
(bad)
leave
lds
cs
jb
or
xchg
sbb
xchg
xor
jg
pop
loope
pop
mov
pusha
inc
sbb
adc
std
xchg
outs
mov
sub
enter
mov
div
test
pushf
cmc
sar
xchg
push
and
push
(bad)
mov
mov
jg
xchg
xchg
adc
ja
(bad)
jb
jbe
pop
adc
(bad)
xchg
add
add
xor
dec
and
bound
add
stos
in
jno
pop
xor
sbb
cmp
adc
or
in
leave
nop
add
pop
bnd
pop
add
and
mul
and
dec
enter
add
je
addr16
stc
or
pusha
sub
(bad)
(bad)
dec
out
or
mov
arpl
mov
sbb
cwde
aad
mov
jl
push
sub
fidivr
mov
(bad)
stc
fwait
dec
mov
sbb
push
xor
call
(bad)
or
jmp
ret
sub
stos
and
inc
xchg
sbb
out
add
in
fdiv
ret
test
in
xor
pop
mul
js
xchg
fadd
cmp
mov
cmp
fwait
sbb
mov
inc
inc
stos
cmp
jecxz
add
(bad)
jecxz
jno
fmul
mov
dec
dec
imul
fwait
arpl
pop
jne
stc
xchg
push
mov
scas
ins
jmp
sub
loop
leave
shl
stos
jno
pop
push
ja
inc
cmp
in
xchg
push
cdq
pop
jb
imul
push
retf
movs
ret
adc
(bad)
jmp
sub
inc
and
cwde
iret
mov
mov
jbe
mov
push
pop
add
mov
test
cmp
dec
inc
fstp
push
xchg
and
pop
dec
enter
jecxz
(bad)
imul
paddd
mov
sbb
sub
adc
adc
je
shl
add
out
push
scas
js
loopne
sahf
mov
in
(bad)
cdq
mov
cli
aam
xchg
cld
inc
and
stos
or
icebp
call
fs
int
fimul
inc
cmps
mov
add
ret
(bad)
ret
push
and
test
lds
adc
add
js
jmp
pop
xchg
sbb
mov
xor
pop
cli
push
mov
shl
mov
test
ret
push
neg
pop
push
jae
dec
mov
jmp
lds
adc
mov
dec
sbb
jne
adc
cmp
retf
push
sahf
jmp
daa
dec
ror
test
xor
cmp
out
adc
dec
mov
adc
mov
cmps
pop
mov
jp
pop
push
mov
or
push
pop
or
std
cwde
inc
sbb
stos
(bad)
fsub
and
pop
bound
fist
pop
jbe
enter
imul
pusha
adc
sub
imul
ror
and
sbb
cmp
sar
ficom
adc
(bad)
(bad)
adc
mov
jge
leave
cs
movs
pop
inc
loopne
popf
shl
lods
cmp
out
mov
sbb
mov
or
xchg
fsubr
popf
aam
push
and
jmp
adc
push
and
jmp
xchg
pushf
pop
fcom
xor
popf
add
pusha
ins
repnz
rol
cs
lds
jle
fs
out
sbb
test
ds
test
push
retf
es
cmps
pop
div
or
iret
jle
pop
mov
addr16
jo
hlt
sub
mov
gs
test
cli
push
iret
(bad)
outs
push
in
add
dec
icebp
(bad)
cmp
and
fstp
mov
(bad)
jne
nop
xchg
test
push
ds
dec
das
ficom
into
ret
jmp
out
fstp
stc
push
ins
movs
pop
pop
ins
clc
call
xor
jne
cmp
movs
cmp
ror
xor
fist
xor
mov
or
cdq
leave
adc
push
adc
push
push
aaa
sub
(bad)
retf
mov
mov
mov
mov
lds
fistp
and
jmp
ds
inc
(bad)
adc
lock
mov
jbe
add
cmc
mov
pop
mov
cmp
bound
stc
mov
jp
xlat
icebp
stos
ds
jmp
ror
mov
jbe
pop
cmp
daa
out
cmp
aaa
xor
out
cmp
xor
or
mov
(bad)
push
cmp
adc
cs
jg
ds
mov
xor
cwde
add
mov
fidivr
(bad)
popa
nop
sub
popa
in
pop
into
push
mov
int3
sbb
and
enter
jle
test
ret
movs
out
add
repnz
test
icebp
hlt
fcmovu
outs
(bad)
ins
push
scas
neg
mov
pusha
xor
pop
cmovnp
out
jp
jo
retf
(bad)
push
xor
jmp
adc
into
and
xchg
push
pusha
sahf
adc
add
xor
inc
and
test
mov
retf
mov
sub
sbb
sti
push
cmp
jae
xchg
adc
imul
test
leave
mov
stc
add
xchg
lds
pop
push
push
stos
mov
in
jl
scas
cwde
sbb
jbe
dec
shr
xor
repnz
out
js
inc
call
aas
push
mov
in
adc
sbb
adc
xchg
es
or
cmp
jecxz
in
lahf
add
inc
hlt
add
ret
mov
inc
xor
mov
aaa
pop
fcomp
outs
rcr
lods
jg
mov
fild
adc
cmp
addr16
inc
pop
or
rcr
stos
inc
push
mov
mov
add
add
and
adc
idiv
js
and
std
popf
add
xchg
sub
(bad)
outs
or
and
sbb
movs
mov
repnz
sub
cmp
add
in
mov
push
sbb
into
cld
adc
pop
mov
arpl
stos
repz
ins
or
mov
inc
mov
mov
xchg
loop
adc
add
cld
xor
sub
dec
dec
adc
pop
cmp
test
mov
stos
jno
dec
xor
pop
iret
or
mov
inc
adc
mov
hlt
sub
fist
es
pop
adc
dec
sub
sub
mov
push
mov
pushf
cmp
imul
ins
mov
daa
and
xor
mov
pop
out
(bad)
jmp
jle
xor
pop
(bad)
pushf
push
cwde
sub
add
push
and
mov
aaa
xchg
mov
call
add
out
and
imul
adc
loop
inc
lods
mov
and
mov
fld1
dec
(bad)
pop
lods
clc
mov
mov
sub
xchg
cwde
push
inc
nop
sahf
dec
cmp
add
jb
sub
lea
xor
test
les
pop
jbe
mov
mov
push
fmul
pop
mov
data16
pop
fisubr
mov
rcl
jge
arpl
(bad)
(bad)
gs
mov
sub
xchg
ds
push
mov
mov
aaa
nop
inc
into
cs
or
or
cmovo
movs
and
xor
popf
jg
pop
(bad)
outs
xor
sahf
dec
lods
sbb
jbe
cmp
aas
dec
and
push
mov
daa
aaa
inc
int
pop
je
inc
fistp
retf
push
xchg
and
gs
xor
mov
clc
outs
or
dec
repz
add
aas
and
imul
cli
push
sbb
lds
(bad)
pop
scas
retf
and
or
jg
jecxz
xchg
shl
aas
dec
movs
js
push
or
push
cmc
push
scas
leave
mov
and
xchg
mov
dec
int
mov
inc
xchg
mov
jb
inc
add
cli
aad
test
dec
mov
xchg
movs
jle
add
mov
mov
pusha
inc
adc
mov
and
(bad)
xlat
sahf
or
ret
aaa
shl
jge
in
es
pop
add
xor
and
jns
cmps
sahf
lds
loopne
js
mov
or
pop
push
pop
push
(bad)
or
in
inc
pop
add
movs
sbb
xchg
imul
or
outs
inc
pop
mov
and
cmps
push
fbstp
sbb
adc
xchg
inc
push
ds
mov
fs
jp
fild
pop
dec
call
cmp
dec
mov
scas
stos
ficom
out
or
inc
aas
cs
xor
jmp
xchg
movs
mov
cmps
pop
xchg
test
or
mov
cmps
ins
ins
push
xchg
jg
xchg
pop
rcr
cwde
imul
pop
cmp
and
cmp
lock
cmp
fstp
jle
or
cmp
out
push
scas
ficomp
stos
push
jl
dec
add
sbb
jmp
mov
cld
in
je
push
add
cmc
pop
sub
sahf
shl
dec
xchg
lahf
dec
mov
(bad)
pop
call
push
out
(bad)
loop
in
and
ror
lahf
sahf
adc
ins
xchg
cs
aaa
sub
pop
and
and
mov
mov
cmps
outs
dec
ins
jns
mov
es
les
pop
xchg
ins
jns
mov
call
rcl
push
ror
xchg
sub
dec
push
inc
lahf
push
jmp
add
inc
test
mov
jo
les
ins
sub
pop
jl
pop
pusha
push
inc
out
mov
(bad)
ss
jmp
add
sub
mov
mov
outs
inc
cmp
ins
dec
scas
inc
and
icebp
sub
adc
jg
(bad)
in
xor
push
je
pop
ror
dec
out
repnz
pop
mov
(bad)
aam
jne
pop
or
ret
imul
jmp
outs
add
in
mov
jbe
or
jnp
mov
jns
cmp
xor
call
lock
imul
sub
fcomp
xchg
sti
stc
gs
cdq
scas
fistp
retf
daa
outs
push
fidivr
movs
mov
pop
ficomp
pop
pop
adc
int3
pusha
pusha
fdivrp
mov
xchg
fs
adc
jg
and
adc
mov
pop
xor
fdivrp
push
inc
sub
mov
cli
jnp
pop
adc
inc
jno
int3
and
retf
cmps
xlat
(bad)
sbb
aad
in
add
push
mov
icebp
dec
cmps
mov
pop
clc
mov
(bad)
stc
cld
out
mov
add
mov
jmp
jecxz
aad
inc
nop
pop
jecxz
mov
mov
mov
ss
enter
sub
jl
jle
loop
(bad)
and
hlt
scas
ins
shr
or
lods
pop
into
test
dec
jmp
xchg
pop
data16
sub
scas
jge
ret
je
jmp
cs
xor
mov
mov
dec
xchg
aad
mov
jmp
(bad)
sbb
ss
lds
std
shr
cld
dec
pop
rol
cmp
add
dec
cmp
lea
dec
mov
mov
xchg
inc
iret
retf
mov
push
cmps
into
or
xchg
xchg
cmp
lods
stc
nop
popf
lods
and
in
push
sar
cmp
push
cmp
pop
inc
push
inc
sbb
cmp
pop
retf
aaa
mov
xchg
dec
loope
adc
stc
add
nop
push
xchg
jl
dec
jp
push
sub
cmp
sub
inc
cs
xchg
mov
sub
or
lods
out
xchg
xchg
jle
scas
lea
dec
not
hlt
lds
mov
push
pop
scas
push
pop
ss
jecxz
ret
fisttp
js
push
fisub
mov
imul
jmp
dec
jl
cmps
cmps
lahf
or
out
scas
js
or
enter
dec
cwde
xchg
xor
movs
fdivr
push
dec
stc
into
mov
sbb
sbb
cmps
test
fwait
and
xlat
dec
push
pop
sub
test
or
mov
inc
jle
retf
popa
push
out
mov
aas
xchg
jnp
and
stc
or
xchg
pop
cmp
adc
mov
je
and
push
ins
lds
mov
jmp
xchg
mov
sub
(bad)
lods
fld
mov
je
cli
mov
aad
jne
xchg
mov
jns
ins
sbb
or
aam
jmp
mov
pop
or
call
ins
mov
and
adc
imul
mov
movs
push
in
push
inc
es
xchg
xchg
loop
outs
dec
sbb
dec
hlt
and
or
adc
or
pop
arpl
gs
mov
pop
fs
adc
aaa
push
lds
mov
fld
xchg
dec
jns
das
xor
xchg
sub
sub
sbb
fild
or
jle
or
push
mov
sahf
mov
pop
xchg
movs
mov
stos
jl
mov
shl
inc
(bad)
jp
loop
(bad)
jne
(bad)
mov
or
cmp
xchg
mov
cdq
hlt
sub
or
mov
and
xchg
mov
inc
push
push
xor
sbb
push
movs
mov
cmps
test
mul
mov
mov
out
adc
ins
ret
xor
in
(bad)
std
je
mov
into
pop
test
sub
imul
and
in
pop
fldenv
cs
sub
push
movs
pop
jb
mov
jl
sub
cmp
push
call
daa
std
psubusw
ins
jg
mov
dec
imul
pushf
sub
mov
enter
bound
and
xchg
daa
sub
in
test
test
and
or
push
hlt
mov
stos
add
xchg
or
pop
fcomip
pop
retf
pop
add
jecxz
ins
fcomp
pop
dec
call
add
xchg
sbb
or
iret
mov
push
mov
not
inc
xor
cmp
fwait
dec
hlt
pop
rcr
bound
push
jl
out
fdivr
mov
fs
inc
cmp
inc
mov
lods
cmp
fnstcw
rol
sti
xor
ficom
mov
int
cmc
or
mov
add
xchg
dec
xor
adc
xor
pop
cmp
cmp
mov
pop
icebp
stos
mov
jp
aas
jns
cli
dec
adc
mov
sbb
add
mov
ror
psrlw
test
clc
(bad)
and
ss
aad
pop
fdivr
mov
pop
or
cwde
les
mov
or
in
loope
outs
je
aam
mov
xchg
int3
xchg
inc
jne
mov
sub
add
sbb
(bad)
dec
(bad)
ror
shl
sbb
mov
fild
and
xchg
icebp
arpl
fs
in
in
data16
cmp
pop
sub
mov
fnstcw
inc
jle
jno
aaa
outs
and
in
stc
hlt
and
mov
mov
sbb
rol
gs
cli
stc
in
push
add
add
daa
cmp
jnp
lods
xchg
clc
or
sub
shl
sahf
lds
fs
dec
leave
cdq
jmp
rcr
pop
xchg
aaa
stc
shr
jp
sahf
push
push
dec
push
dec
push
loope
aam
jnp
(bad)
(bad)
stos
jle
imul
fimul
pop
call
pop
stos
and
and
mov
je
enter
push
push
pop
retf
jne
lahf
or
inc
xor
xor
xchg
add
sbb
fcomp
jmp
and
(bad)
push
inc
ins
sub
and
rol
shl
jg
imul
jmp
adc
jmp
jle
data16
je
mov
jns
imul
ja
or
popf
int
push
pop
xchg
and
sbb
inc
cwde
cmp
adc
pop
ds
jp
adc
outs
mov
jbe
(bad)
mov
dec
adc
mov
cmp
xchg
mov
arpl
mov
mov
scas
mov
(bad)
jp
int3
cs
test
or
mov
stc
cmp
push
call
lods
mov
xchg
sti
dec
or
cmc
aam
or
mov
xchg
mov
cwde
add
jae
xchg
mov
inc
icebp
and
jle
pop
sub
(bad)
sub
mov
or
and
jmp
cli
fs
out
push
ja
je
(bad)
cmc
scas
inc
mov
dec
ror
jmp
std
cmp
dec
popa
xchg
js
scas
inc
(bad)
pop
dec
sar
jno
repz
clc
das
adc
retf
sar
or
sbb
push
and
push
add
sub
scas
xor
lock
aam
ret
rcr
add
scas
inc
int3
rcl
movs
inc
inc
pop
aam
mov
adc
dec
pop
mov
push
adc
inc
dec
call
mov
out
imul
jne
imul
inc
int3
xor
mov
add
dec
into
cli
repnz
jecxz
enter
cmp
les
lds
push
mov
loopne
push
push
mov
lock
or
xchg
mov
out
pop
xor
dec
and
dec
mov
jmp
jg
push
ds
sbb
ret
cli
dec
(bad)
dec
fadd
cld
sub
sbb
cwde
loope
sbb
call
int
(bad)
std
or
jecxz
das
and
mov
movs
sub
je
lahf
imul
loop
loopne
inc
icebp
sub
pop
ret
(bad)
push
jmp
or
fcomip
movs
jmp
out
jg
mov
add
adc
and
and
sbb
mov
mov
jl
adc
adc
xchg
sar
sub
cmp
push
outs
mov
mov
out
cmc
xchg
shl
xchg
jbe
sbb
mov
adc
imul
call
outs
push
scas
cs
sbb
pop
ja
push
cmp
sbb
ret
xchg
pop
add
popf
push
punpckhwd
retf
adc
repz
fs
push
push
rcr
mov
xor
mov
jl
or
scas
cmp
push
xor
loopne
dec
dec
mov
mov
enter
jl
jl
inc
inc
scas
lods
enter
bound
push
mov
fcmovbe
pop
pop
xor
sbb
les
add
fidiv
out
and
sbb
cmp
dec
cmp
pushf
(bad)
fisttp
(bad)
mov
cmc
lea
popa
pop
cmp
sbb
adc
adc
js
mov
push
setnp
push
sahf
loopne
gs
sub
cwde
into
mov
add
and
or
jge
movs
retf
adc
je
ja
into
ficom
adc
jge
punpcklbw
inc
(bad)
cmp
jmp
push
ret
cmp
mov
mov
mov
adc
iret
out
and
std
xchg
shl
adc
out
sar
inc
ss
jns
lea
fsubr
add
and
mov
xchg
pop
jg
(bad)
adc
test
sub
and
push
das
cmp
adc
(bad)
or
jno
push
sbb
lods
mov
ins
rol
cmp
jle
xor
sbb
mov
ins
push
and
ret
cmp
int3
nop
gs
imul
loopne
test
or
mov
inc
jmp
fisttp
push
mov
inc
or
lahf
cmps
mov
push
(bad)
cmp
xchg
mov
and
jp
fdiv
movs
jle
add
jecxz
xlat
jp
stos
or
fs
or
mov
sbb
pop
inc
js
rcr
out
mov
pop
iret
xor
scas
sbb
jae
jecxz
lock
jp
cli
(bad)
daa
mov
jl
in
(bad)
out
adc
push
inc
outs
sbb
jle
arpl
dec
pop
fdivr
jno
xchg
hlt
imul
or
retf
inc
jle
mov
mov
push
in
mov
sbb
pop
sbb
sti
push
and
mov
daa
fxch
ins
out
push
adc
pop
and
mov
std
cmp
aaa
loop
sbb
cs
sub
push
jge
or
repnz
fadd
lods
or
xor
jmp
ds
dec
jae
pop
cmp
mov
iret
movups
lods
jnp
shr
mov
adc
dec
push
jns
mov
pop
push
into
mov
fist
hlt
sti
test
stos
push
retf
cmp
adc
out
or
stc
test
cmps
cmp
dec
jae
(bad)
ss
(bad)
push
retf
push
push
cmp
test
retf
mov
ja
into
or
mov
jae
in
cmp
daa
pop
(bad)
xchg
outs
ja
and
daa
pop
neg
fist
sub
mov
test
loop
repz
aaa
cmp
jae
sub
imul
(bad)
int
iret
add
jo
mov
jg
bound
(bad)
xor
and
fldenv
(bad)
outs
and
aas
push
(bad)
jb
jg
jb
sbb
stos
stos
cmp
jle
sbb
icebp
dec
rcr
mov
push
add
inc
lods
retf
cmp
mov
popf
test
sbb
sub
fist
daa
sub
ins
nop
fwait
sbb
push
fdivr
pop
sub
ds
stos
jo
inc
test
mov
bound
bnd
mov
add
popf
(bad)
dec
outs
leave
bnd
dec
dec
dec
cmc
imul
sahf
call
sbb
mov
(bad)
lods
sub
push
and
adc
sub
out
mov
arpl
and
rcr
cdq
jo
and
data16
lock
xchg
int3
(bad)
jg
ss
inc
push
mov
pop
test
inc
int3
fadd
mov
mov
dec
rol
xchg
and
cmp
sub
mov
jns
out
mov
mov
in
mov
lods
and
cmp
adc
test
fsubr
ins
cld
or
xchg
test
or
ja
mov
(bad)
mov
hlt
lahf
aam
stos
jne
push
cwde
(bad)
outs
mov
jmp
push
in
in
fld
pop
xchg
adc
sbb
pushf
arpl
mov
and
xchg
cs
mov
scas
hlt
stos
test
ret
or
push
mov
clc
push
call
test
test
jnp
add
ds
cmp
mov
pop
pop
imul
add
adc
mov
cmp
or
je
and
or
jg
fdiv
fucomi
jne
loopne
or
adc
fld
repnz
push
mov
iret
and
xchg
and
sbb
cs
arpl
retf
adc
sub
ffreep
repz
xor
stos
dec
and
call
test
out
cmps
aaa
jg
lods
mov
mov
and
or
adc
mov
lea
pop
xor
hlt
dec
jnp
jle
inc
rcr
sbb
inc
add
jmp
in
mov
mov
pop
popf
adc
push
call
fdivr
jb
sbb
and
cmp
ins
dec
pop
cmp
mov
adc
je
inc
(bad)
cld
fwait
add
icebp
adc
mov
clc
push
das
fdivr
jmp
xchg
mov
pop
inc
xchg
aaa
mov
shr
test
mov
jnp
add
adc
dec
call
cwde
lods
add
(bad)
addr16
sub
je
inc
or
jp
dec
aas
jp
xchg
xor
cmp
ds
pusha
mov
inc
xchg
popf
sbb
jns
mov
xchg
xor
loopne
push
adc
sti
pop
lahf
ds
push
sar
sbb
xor
pop
dec
xor
bnd
pop
nop
pop
or
add
retf
push
clc
jl
xor
mov
xor
js
jb
retf
mov
movs
or
(bad)
int
sub
mov
mov
int
sub
mov
jbe
add
jb
jmp
pop
mov
xchg
stos
cld
mov
das
sub
popf
fs
pushf
mov
add
sbb
icebp
mov
mov
dec
and
cmc
mov
xor
adc
mov
pop
mov
jo
imul
sub
test
pop
push
into
imul
es
(bad)
pop
scas
mov
xor
sbb
dec
sar
push
jno
push
das
arpl
xor
das
mov
jne
sub
movs
rcr
cmp
push
outs
and
jmp
xchg
mov
dec
sar
sbb
jbe
add
jl
ret
mov
mov
cmps
dec
mov
xchg
sub
jmp
retf
cld
imul
jno
rol
jo
clc
dec
out
mov
outs
sbb
or
out
mov
ror
fdiv
sub
dec
(bad)
pusha
pop
mov
popa
sub
(bad)
inc
mov
dec
sahf
jle
loope
adc
fldcw
mov
jo
inc
jle
outs
xchg
add
mov
out
call
sub
movs
push
pop
mov
xor
cs
or
cmp
shl
and
retf
inc
pop
push
adc
shl
push
lods
jns
mov
imul
pusha
out
jmp
enter
mov
mov
mov
mov
pop
int
mov
inc
xchg
(bad)
cmp
adc
push
fisub
or
sar
addr16
loope
stos
int
es
mov
sbb
or
dec
mov
xchg
mov
or
mov
in
jne
mov
jg
and
repnz
out
cmp
stc
dec
inc
add
and
cli
inc
mov
mov
into
inc
sub
popa
mov
dec
add
nop
sbb
inc
repz
hlt
vmread
aaa
mov
push
adc
jno
jg
popf
lds
fbstp
fldcw
jbe
cmp
xchg
repz
es
rep
jecxz
scas
sbb
sbb
int3
in
sbb
int3
repz
xchg
out
popf
sbb
inc
mov
aam
xor
movs
jle
call
lods
retf
or
adc
fstp
ins
mov
adc
sahf
mov
mov
pop
cmp
or
push
nop
inc
jg
enter
hlt
xor
ret
sub
cs
inc
xor
mov
ins
out
mov
sub
and
test
xor
and
jbe
les
loop
imul
jmp
cld
or
xor
iret
cli
xor
push
push
inc
and
int
and
mov
pop
dec
push
cld
cmp
and
std
stos
test
jno
lahf
add
ins
fsubr
rol
cmps
sbb
pop
inc
lods
pop
mov
outs
icebp
cmp
scas
xor
push
xchg
push
jmp
aam
inc
adc
or
retf
cld
ret
dec
fst
fs
jo
ficom
sub
test
je
adc
movs
into
test
push
outs
ss
dec
shr
inc
fsub
dec
sub
shl
mov
dec
sbb
sub
sahf
mov
test
pop
stc
lea
xchg
aad
push
sbb
les
sub
fs
cmp
xchg
add
(bad)
mov
call
add
cmp
inc
lods
repz
inc
mov
pop
push
jbe
out
dec
nop
popf
mov
dec
inc
cmps
inc
dec
add
lahf
jnp
fs
xchg
sbb
sbb
mov
add
sahf
add
sbb
dec
arpl
cmp
aad
mov
push
pop
out
adc
std
xchg
cmc
icebp
stc
dec
jbe
cli
bound
cmp
xchg
lahf
mov
push
test
int
adc
imul
xor
mov
mov
adc
mov
dec
add
retf
(bad)
jb
or
(bad)
mov
in
out
gs
push
rcr
repnz
xchg
mov
mov
mov
dec
movs
dec
int3
sub
ror
call
push
cmp
mov
push
cmc
lea
stos
movs
sub
push
xchg
outs
stc
and
sbb
jle
shl
mov
jo
arpl
and
fistp
push
cmp
sar
aam
pop
iret
loope
nop
jae
test
adc
pop
or
test
push
mov
cmp
mov
xchg
push
ja
ss
(bad)
mov
sub
daa
xor
ds
jmp
jmp
mov
mov
in
push
and
pop
mov
and
jle
add
sub
fsub
and
jno
dec
push
push
ss
push
mov
jp
retf
and
jmp
arpl
movs
fldcw
out
add
mov
jmp
lods
aas
xchg
cmps
pop
leave
cmc
icebp
test
cs
push
mov
popf
aam
sbb
mov
xor
das
popa
retf
pushf
pusha
fs
repnz
push
push
mov
push
fxch
in
mov
or
test
ror
inc
std
add
mov
push
xor
mov
xchg
data16
test
data16
es
retf
fidivr
cmps
xlat
sbb
out
jno
out
ja
xchg
or
and
inc
push
dec
les
leave
jmp
lods
mov
xchg
aam
fidivr
cmps
int
or
movs
xchg
in
popa
sub
xchg
xchg
sub
jb
or
imul
(bad)
fcom
outs
mov
retf
stos
pushf
data16
fild
mov
stos
pop
sbb
ins
xor
add
pop
add
xchg
and
dec
outs
xor
es
mov
mov
test
repnz
loopne
push
push
sbb
movs
es
ins
pop
fdivr
cmp
int3
jle
test
ds
sar
ss
jno
pop
nop
pop
add
jecxz
dec
fdivr
lahf
inc
icebp
adc
int
jnp
in
(bad)
mov
push
int3
inc
lock
inc
int3
dec
pop
cmps
dec
sub
jo
pusha
imul
add
jno
adc
pop
sbb
mov
jle
leave
inc
sbb
ds
xor
ss
pusha
in
test
les
cmp
mov
adc
xchg
daa
or
hlt
mov
pop
aad
dec
outs
jle
jnp
icebp
imul
rcr
bound
scas
pop
and
push
in
adc
inc
ret
add
and
jae
adc
int3
mov
sbb
ret
iret
das
retf
js
push
hlt
shl
lods
fstp
pop
fadd
adc
repnz
hlt
pop
push
aas
push
pop
add
cmp
ret
pop
jns
adc
shr
mov
fwait
jge
les
mov
mov
pop
movs
and
ins
xlat
int
jmp
clc
repz
nop
xchg
push
mov
xchg
bswap
push
outs
je
jbe
or
pop
std
aas
sub
ror
push
and
(bad)
mov
adc
mov
mov
xchg
or
push
imul
jnp
mov
and
mov
call
jecxz
inc
aad
imul
sti
popf
aad
inc
cdq
adc
adc
and
int
jl
ins
call
(bad)
lea
fucom
cmp
add
push
loope
jge
xor
out
jle
in
test
data16
jmp
sub
not
loop
mov
ja
add
sahf
jp
add
mov
ds
ror
mov
(bad)
add
adc
cli
xor
ja
jle
mov
xchg
syscall
mov
cs
out
cmp
retf
or
pop
lock
push
out
ss
mov
jge
retf
out
jl
jmp
shl
pop
ins
nop
pop
loop
idiv
addr16
or
jnp
inc
pop
pop
daa
(bad)
ror
cmp
ja
mov
push
fist
std
sbb
and
loopne
mov
sbb
lahf
in
out
mov
inc
jg
(bad)
and
(bad)
loop
xchg
shr
into
sub
and
mov
out
shr
jnp
neg
(bad)
mov
dec
sub
mov
pop
clc
test
movs
sbb
sbb
test
mov
pop
or
mov
call
push
je
mov
lods
(bad)
mov
and
dec
cmc
aas
cmps
xchg
push
xor
cli
out
movs
lds
frstor
jmp
popa
inc
or
das
mov
pop
lods
mov
xchg
add
sub
nop
push
movs
mov
jle
mov
pop
mov
xor
nop
repnz
jl
cmp
test
aas
ret
jg
xor
add
pusha
add
out
sbb
cwde
ss
cmp
jmp
sub
sub
or
push
mov
sub
jb
ds
cmp
jg
sbb
xchg
fimul
ror
fisubr
sub
(bad)
push
mul
cld
mov
pop
lds
ror
add
repz
arpl
mov
inc
or
mov
pop
jns
lea
jne
(bad)
jle
das
gs
push
(bad)
dec
mov
pop
jbe
sub
mov
cwde
inc
cwde
or
xor
xchg
xchg
xor
std
jo
inc
and
mov
imul
pop
cmc
out
jns
mov
inc
call
enter
scas
sbb
stos
xchg
adc
mov
wbinvd
dec
lods
shl
hlt
dec
mov
jae
xchg
fs
cmps
retf
test
fs
mov
rcl
loop
push
pop
scas
repz
inc
adc
scas
retf
popf
mov
cwde
pop
inc
cli
push
repz
pop
out
jo
push
add
sub
cmc
hlt
lahf
add
stos
(bad)
sti
pop
out
push
rcr
mov
mov
call
mov
dec
rol
mov
rol
enter
dec
enter
(bad)
mov
xchg
push
fcom
(bad)
pop
cmps
mov
adc
mov
dec
or
mov
sbb
pushf
mov
pusha
sbb
ins
sbb
mov
dec
(bad)
js
push
fadd
dec
stos
push
push
xchg
rcl
and
call
(bad)
ret
sub
in
repnz
ins
fucomp
lahf
xor
mov
gs
or
sbb
(bad)
mov
xchg
dec
sub
and
add
push
out
sub
xor
push
jb
pusha
inc
std
hlt
fcomi
imul
movs
mov
mov
jmp
out
adc
punpckldq
mov
icebp
mov
ror
adc
mov
sbb
jmp
nop
icebp
dec
pop
mov
ss
mov
add
cmc
daa
sub
push
mov
or
loop
xor
sbb
cs
movs
mov
xor
mov
aad
shl
jmp
dec
add
(bad)
xchg
adc
cmp
xchg
lsl
sub
mov
push
iret
or
iret
jae
xchg
and
outs
imul
das
movs
mov
stc
sub
out
int
sbb
sbb
dec
jp
and
jns
and
cli
fsubr
cmp
frstor
or
jmp
les
stos
and
in
or
pop
test
iret
and
xchg
cs
bound
out
pop
and
arpl
repnz
inc
mov
push
jbe
fdivr
outs
imul
xchg
iret
imul
sbb
mov
daa
lahf
xchg
(bad)
mov
sbb
(bad)
cld
add
xchg
push
loopne
jb
in
sbb
xchg
dec
adc
int3
mov
fadd
shr
jb
fbld
push
pop
je
or
ror
cmc
add
loop
or
pop
aaa
ds
cmp
call
add
mov
inc
sti
cli
jp
mov
push
aas
ret
loopne
int
sub
je
es
test
enter
push
ret
xor
xchg
into
in
mov
ret
mov
es
neg
ror
push
mov
sub
rcr
or
sub
push
add
dec
gs
mov
js
loope
inc
mov
movs
packsswb
rcr
xchg
aas
loope
pop
jl
sub
xor
and
lds
mov
and
int3
rcr
push
arpl
adc
cmp
xchg
xchg
pop
inc
inc
sub
fimul
aas
mov
retf
inc
add
xor
fistp
imul
jo
pop
cmp
sbb
mov
loop
cwde
mov
pushf
jle
xchg
push
or
call
inc
mov
push
repnz
dec
push
xor
or
bound
ret
sbb
hlt
push
and
aas
test
sbb
sub
rol
and
push
xchg
std
jle
xlat
pop
mov
jae
push
push
retf
shl
ror
add
mov
sbb
scas
pop
mov
daa
push
jmp
in
inc
loop
inc
cli
repz
cdq
sub
in
loopne
leave
jle
xchg
add
jnp
xchg
out
inc
xor
xchg
fisttp
es
outs
sub
jae
pushf
lds
jmp
loop
loop
cmp
cmp
sub
int3
push
loope
mov
pop
fild
mov
add
push
pop
nop
sar
ret
(bad)
add
inc
add
inc
pop
or
aaa
dec
push
pushf
dec
cli
jo
pop
lods
mov
outs
sar
sub
clc
loopne
int
out
ret
adc
outs
jns
daa
dec
test
jo
daa
rcr
out
mov
into
repz
push
rcl
mov
fstp
stos
pop
sar
test
mov
xchg
jnp
loop
mov
jnp
sbb
inc
ja
ror
mov
in
jecxz
or
dec
ret
iret
xor
push
nop
jmp
int
jne
in
shl
(bad)
pop
retf
push
mov
and
div
movs
ss
daa
adc
dec
hlt
xchg
out
xchg
fdecstp
jae
push
test
test
cmp
push
loope
push
pusha
ds
in
cmps
and
hlt
xor
jl
mov
pushw
pop
shr
dec
sbb
clc
cmp
cmc
and
mov
xchg
mov
jnp
push
aas
hlt
ins
cmp
cli
pop
dec
push
dec
sbb
mov
xchg
fst
mov
or
and
jp
and
inc
rcl
mov
dec
or
xchg
ins
cmp
mov
xor
or
pop
or
imul
xchg
dec
mul
xor
cdq
bound
mov
cmps
cwde
test
imul
sbb
das
mov
inc
(bad)
ret
or
mov
js
and
(bad)
jbe
pop
mov
pop
fistp
add
movs
add
pop
mov
sbb
scas
jg
push
ds
xlat
push
aas
or
lock
mov
stos
mov
dec
pop
jne
add
cwde
addr16
push
push
cdq
(bad)
bnd
loop
retf
aaa
pop
cdq
out
inc
clc
jl
fidiv
out
std
pop
pop
jo
test
retf
fs
loop
test
jmp
shl
mov
mov
cmp
lds
or
sub
xchg
std
add
lea
jmp
clc
iret
add
jge
push
mov
bound
adc
mov
ret
stos
inc
pop
jno
and
sub
popa
push
push
ret
jle
ja
xchg
sub
xchg
xor
jg
aaa
push
xor
das
sbb
aam
leave
les
xchg
imul
sti
ja
popf
jne
iret
fild
jmp
mov
movs
into
add
pop
cmps
sub
aaa
push
xlat
lea
scas
push
jmp
or
add
ret
(bad)
fs
dec
stc
jle
mov
aas
addps
pusha
dec
jge
xchg
mov
sbb
lods
cmp
retf
icebp
or
dec
or
xchg
mov
mov
mov
aas
mov
lahf
xor
icebp
xchg
inc
sar
and
fcomp
push
add
xchg
aas
fcomp
and
aam
les
jae
xor
mov
cmps
aas
sub
pop
jmp
mov
sub
out
into
lea
sub
xchg
int
or
cmc
fdivr
mov
repz
test
scas
dec
xor
ret
sbb
lock
icebp
inc
je
(bad)
arpl
sub
mov
push
enter
scas
out
scas
mov
movs
inc
xchg
jle
in
mov
inc
and
iret
in
pop
dec
sub
or
xor
dec
dec
xlat
sbb
and
inc
xchg
pop
lea
pop
in
movs
dec
and
mov
jae
xlat
add
lahf
xchg
in
or
mov
jb
jno
or
xor
push
and
mov
mov
inc
jae
std
std
mov
xor
scas
add
lods
xchg
ret
outs
ss
mov
out
stos
mov
outs
aaa
xchg
jne
loopne
sub
mov
push
ins
mov
inc
ds
test
adc
mov
sbb
(bad)
ins
inc
test
dec
jno
or
ja
bound
or
and
aam
jo
cmp
mov
pop
and
int
jno
mov
imul
shl
mov
xchg
cmp
rcr
int
scas
rcr
mov
pop
mov
sub
neg
fisubr
inc
clc
push
cmovb
icebp
sbb
pop
dec
inc
popf
cmp
mov
cmp
mov
psrlw
jo
imul
mov
fistp
ror
fnsave
push
push
pop
stos
mov
imul
test
xchg
cmp
clc
dec
push
stos
mov
mov
loope
(bad)
or
or
or
repnz
ffree
icebp
add
imul
mov
mov
dec
fcmovnbe
xor
test
hlt
sti
inc
fwait
and
xchg
pop
cmp
sbb
ret
(bad)
loopne
rcr
xchg
mov
rol
pusha
and
sbb
mov
cmps
test
fild
pop
inc
sbb
sti
inc
dec
in
mov
add
push
xor
xlat
in
inc
push
sub
xor
mov
xchg
push
lock
xor
xlat
hlt
jp
(bad)
dec
add
(bad)
test
jmp
inc
sbb
test
mov
push
mov
push
iret
loop
mul
jp
ds
int
ins
in
stos
addr16
out
and
stc
lods
stos
repz
fist
pushf
outs
fld
or
mov
cmps
jno
dec
stos
inc
neg
daa
sub
or
jmp
mov
dec
jmp
add
loopne
xor
cmp
ror
inc
pushf
cmp
push
stc
fcomp
cdq
jle
popf
push
ds
push
jnp
aam
push
btr
mov
sar
scas
xchg
xchg
(bad)
sti
or
cmp
dec
fiadd
lods
mov
and
push
cmps
mov
push
imul
sbb
(bad)
fild
shl
out
ss
xchg
and
jmp
xor
hlt
or
pop
jle
shl
jns
jl
push
pushf
mov
popf
std
pop
mov
mov
mov
mov
loopne
lea
push
es
inc
aam
jge
push
sbb
adc
arpl
cmp
xor
leave
into
or
and
stc
xchg
sbb
adc
ja
mov
push
imul
(bad)
add
xor
je
adc
jg
sub
mov
and
cmp
push
xor
cmp
call
sbb
ja
ret
cli
test
mov
imul
adc
sbb
dec
and
js
jnp
mov
inc
sub
sbb
int3
xlat
(bad)
sbb
cmp
inc
(bad)
out
pop
dec
pop
arpl
sahf
lods
cmp
ss
mov
xor
push
ffree
push
sbb
mov
push
popf
icebp
mov
xchg
test
inc
or
outs
xor
xchg
test
mov
sub
xchg
ins
mov
shl
movs
popf
jno
xor
aad
test
aam
mov
popa
loopne
adc
xor
repz
fst
xor
clc
retf
cmp
fsub
cmp
das
or
dec
jmp
popa
les
dec
mov
sar
in
push
xchg
imul
mov
pop
(bad)
push
and
into
cs
cmp
rol
mov
mov
mov
sub
push
fwait
pop
out
adc
jmp
cmc
daa
sar
mov
shl
or
or
ds
dec
push
mov
mov
enter
xchg
inc
push
fdivr
add
xor
je
je
jns
test
fmul
sub
sahf
add
fmul
cmp
in
(bad)
call
or
pop
stc
mov
(bad)
mov
jl
dec
out
sahf
push
cmp
sbb
push
mov
xchg
push
xor
movs
frstor
push
mov
push
mov
xor
cli
rol
pop
call
ins
fwait
inc
std
xor
imul
ror
jno
mov
cmp
mov
rcr
inc
dec
cmp
push
dec
popf
fbld
or
call
push
sahf
mov
(bad)
fwait
popa
fistp
xchg
mov
stos
shr
repnz
ja
loope
cs
dec
stos
or
fsub
mov
jne
fbstp
fs
stc
mov
mov
inc
pop
cmps
ins
push
daa
inc
pop
add
cmp
or
mov
daa
cs
popa
loopne
stc
(bad)
cdq
neg
mov
mov
nop
or
pusha
mov
mov
ss
or
xchg
into
dec
push
jmp
and
or
add
je
arpl
je
ins
scas
ja
pop
fimul
xor
bound
cmp
rcl
inc
add
push
fwait
out
and
and
or
(bad)
lods
mov
sbb
xchg
test
xor
mov
cmp
xchg
retf
jmp
data16
xchg
mov
(bad)
cld
repnz
nop
adc
sbb
adc
ss
cmp
lods
retf
in
push
repz
jno
jg
xor
sub
push
ds
pop
cmp
inc
fsubr
stos
dec
out
add
and
mov
and
and
xchg
mov
pushf
in
repnz
pop
bound
into
loop
test
int3
shr
je
xchg
xor
sbb
movs
xor
into
mov
stos
stos
fild
stc
inc
(bad)
movs
push
div
shl
fbstp
xchg
neg
out
sub
inc
or
pusha
icebp
or
test
out
jge
pusha
retf
mov
inc
ds
out
fwait
pop
repz
cmp
inc
outs
idiv
je
pop
fcomp
sbb
cmp
sbb
mov
lods
cwde
call
mov
cdq
rcl
push
jecxz
fistp
mov
xor
xor
frstor
scas
xchg
out
xor
inc
jno
xor
test
mul
inc
xor
call
inc
je
inc
fild
inc
jmp
cmp
bound
or
jmp
daa
mov
jl
mov
push
test
seto
movs
pop
xchg
sbb
jmp
jbe
add
sahf
sahf
cmp
enter
xchg
sub
sti
adc
daa
ficom
inc
mov
adc
jae
mov
call
sbb
lods
jge
lods
inc
mov
mov
or
xlat
pop
leave
push
dec
cld
mov
or
lds
clc
cwde
or
sub
stos
outs
(bad)
(bad)
and
pop
aas
out
sbb
inc
dec
loopne
cdq
dec
mov
push
lahf
sub
xchg
xlat
xor
(bad)
push
xor
pop
imul
int3
adc
cmp
je
jns
jmp
xchg
add
scas
pop
jl
rol
add
fnsave
rol
dec
sbb
(bad)
out
inc
mov
fidiv
pop
jnp
(bad)
shl
sahf
pushf
add
and
ja
pand
xlat
push
jge
jne
adc
imul
push
push
push
leave
pop
or
and
jne
(bad)
dec
lods
push
aaa
push
out
mov
mov
jnp
rcr
sbb
ss
add
adc
jbe
push
mov
xchg
gs
add
es
sub
leave
lods
dec
cwde
mov
xchg
add
ja
sbb
in
and
inc
sbb
jmp
adc
ins
add
mov
jle
out
jno
sub
jle
pop
sbb
jmp
jbe
mov
imul
test
sbb
jbe
cmp
mov
(bad)
jns
cwde
push
sahf
or
rcr
fstp
js
inc
mov
stc
scas
je
call
mov
dec
les
ja
outs
push
jnp
mov
int3
psllq
or
outs
outs
mov
clc
mov
imul
and
push
int
fst
push
mov
iret
or
fidivr
(bad)
outs
ss
lds
test
pop
add
mov
jmp
fbld
jnp
mov
leave
sbb
stc
or
sub
and
mov
mov
dec
add
cmp
loopne
cmc
xor
add
jl
mov
into
cmp
mov
lds
xlat
lods
pop
sub
mov
retf
sbb
pop
mov
sar
jg
xor
mov
ins
clc
js
add
mov
(bad)
cli
sahf
jmp
leave
cli
xchg
lea
jmp
pop
imul
gs
pop
mov
js
xor
xlat
pop
(bad)
gs
cdq
fst
lods
addr16
movs
scas
sbb
jmp
adc
dec
push
sub
mov
sbb
mov
dec
fwait
out
dec
dec
add
cmp
adc
test
pop
sbb
mov
jb
jge
push
ins
lds
cmp
(bad)
pushf
inc
and
mul
fwait
push
pop
push
dec
aaa
cwde
in
or
jmp
xchg
dec
lock
cmp
ret
leave
adc
add
mov
cmps
adc
(bad)
and
inc
ja
inc
mov
icebp
push
fsub
mov
in
retf
shl
add
xchg
stos
fdivr
div
scas
sar
arpl
push
push
pop
dec
adc
xchg
jne
cmp
pop
xor
jo
das
xchg
xchg
lods
adc
cmp
mov
sbb
(bad)
aad
lahf
mov
test
neg
sbb
push
out
xchg
dec
stos
in
add
jmp
rcl
lock
and
inc
sub
movs
mov
stc
gs
inc
push
cmp
dec
in
ds
cmps
pop
push
push
je
push
cmc
sub
ins
cli
das
mov
cmc
mov
pop
dec
clc
xor
jecxz
hlt
leave
aad
in
ja
lods
push
pop
dec
test
sahf
aaa
ret
mov
int
jo
in
daa
xchg
cmps
(bad)
repnz
jb
jge
movs
push
push
inc
jnp
or
test
sbb
lds
jecxz
or
push
shl
jo
data16
and
lods
mov
xchg
add
add
les
dec
les
cmp
leave
xchg
or
jb
dec
test
and
pop
add
in
leave
sub
je
cdq
add
cmp
retf
dec
cwde
enter
sub
int3
int3
dec
cmp
(bad)
imul
xor
retf
adc
mov
mov
fld
jns
push
into
rol
adc
dec
mov
fisub
and
fld
out
movs
pop
je
into
test
(bad)
xlat
and
push
cmp
and
cwde
test
xchg
add
hlt
mov
push
or
stos
push
loopne
sub
(bad)
sbb
xor
ss
mov
pop
ins
retf
pop
cdq
mov
dec
lea
cmc
and
fdivr
add
stc
mov
cdq
mov
or
mov
into
mov
sbb
dec
cmp
inc
lahf
js
jnp
test
imul
int3
aad
mov
xchg
dec
xor
cmp
pop
dec
and
test
push
mov
jo
mov
(bad)
jge
sub
dec
xchg
lahf
cmp
and
pop
aam
push
mov
or
pushf
retf
inc
(bad)
cli
cmps
call
(bad)
rcl
inc
inc
cmp
cmp
in
movs
push
mov
mov
push
mov
adc
jmp
mov
mov
xchg
or
dec
jno
push
or
lea
aam
gs
dec
test
ds
xor
and
push
rol
adc
and
hlt
adc
sbb
xchg
out
(bad)
test
mov
shl
inc
fld
test
call
popf
sbb
and
loop
sbb
ret
mov
out
aam
jne
mov
pop
ins
les
lods
push
call
(bad)
jb
das
mov
lods
not
sub
aam
sub
es
xor
sbb
sub
loopne
mov
cs
mov
imul
je
shr
cli
stos
iret
adc
lahf
gs
sbb
mov
or
mov
sub
enter
in
sbb
dec
mov
bound
push
jl
jns
inc
arpl
dec
adc
mov
hlt
sub
movs
imul
pop
push
mov
jno
inc
jns
add
(bad)
cwde
into
outs
mov
pop
push
pop
je
rcr
outs
adc
das
daa
ja
fdivp
repnz
(bad)
lahf
cmps
(bad)
fwait
into
lahf
pop
dec
fsubr
or
fucomi
stc
(bad)
pop
jmp
xor
push
cmp
adc
mov
test
mov
dec
mov
push
stos
jmp
push
and
mov
cld
push
inc
out
mov
adc
fs
dec
mov
jp
xchg
(bad)
imul
pop
imul
mul
sub
scas
sub
int
leave
jp
mov
in
xor
sub
mov
retf
mov
ret
adc
int
xor
stos
pop
jno
jo
push
dec
pop
add
ins
stos
cs
dec
sahf
mov
cmp
std
mov
adc
adc
sbb
or
push
pop
cmp
shl
fstp
and
sub
or
fbstp
daa
push
push
loope
inc
sbb
pusha
rcr
cmc
movs
cmps
rep
mov
retf
xor
cld
cwde
mov
ror
mov
and
je
popa
cwde
int
inc
cld
cmp
push
jnp
enter
fwait
inc
mov
xchg
mov
clc
inc
xor
push
push
xchg
jp
mov
jle
lea
shr
cmp
adc
jmp
cmp
sub
xor
inc
sti
cmp
les
scas
das
jno
mov
cmp
xor
sbb
cdq
mov
iret
outs
scas
push
sub
mov
mov
jmp
lea
sbb
es
xor
mov
mov
sahf
out
ja
mov
and
mov
ficom
jp
add
mov
sbb
repnz
jmp
xlat
add
xchg
stos
(bad)
fsub
mov
inc
pop
sub
hlt
inc
push
jecxz
sti
xlat
test
shrd
jb
mov
pop
dec
jecxz
sub
inc
cmp
cmps
out
outs
nop
outs
out
cmps
add
test
cmc
lea
outs
pop
adc
cmp
bound
lock
popf
jecxz
sbb
gs
push
and
(bad)
sar
sub
int3
pop
call
mov
pop
lahf
sub
sbb
sbb
adc
shr
bnd
(bad)
je
sbb
outs
adc
jno
outs
fimul
push
xor
push
adc
mov
pushf
ret
pop
movs
mov
inc
sub
jo
pop
adc
cmp
pusha
mov
(bad)
xor
push
outs
inc
mov
rcr
pushf
sbb
ja
jo
or
(bad)
pop
pop
cmp
(bad)
lods
sbb
xchg
fwait
cs
retf
mov
repnz
lahf
out
pop
xchg
(bad)
pusha
push
mov
pop
pop
dec
(bad)
xchg
pop
(bad)
enter
xor
mov
cmp
(bad)
repz
repnz
mov
js
and
(bad)
scas
and
mul
cmc
xlat
jbe
mov
add
cmc
sub
jmp
inc
inc
mov
retf
je
xchg
loope
push
dec
retf
jno
test
enter
jb
aad
sub
push
loope
push
jmp
jg
dec
loope
xor
mov
in
and
mov
jle
lods
sbb
sahf
pop
and
aaa
inc
push
stc
or
outs
xchg
scas
cwde
jp
lods
hlt
xor
or
or
adc
(bad)
out
popa
dec
cs
mov
push
mov
out
cmp
jle
sahf
daa
inc
test
jo
scas
sbb
rol
hlt
stos
sbb
and
dec
jp
outs
dec
xchg
push
mov
mov
mov
mov
mov
ja
js
movs
dec
xchg
inc
adc
(bad)
lock
fsub
sbb
clc
in
sub
and
mov
stc
adc
repz
add
adc
pop
les
and
cmps
sbb
test
sar
cmps
jnp
call
mov
sbb
xor
loopne
and
repnz
shl
xor
cmps
xchg
xor
dec
jmp
aaa
out
out
ds
add
push
inc
sub
inc
jmp
inc
sub
push
imul
dec
fidivr
popa
xor
xor
jl
mov
(bad)
adc
dec
inc
mov
ret
std
std
mov
pop
mov
out
mov
xchg
sub
punpckhbw
iret
inc
cld
mov
inc
xchg
rcl
loopne
mov
add
je
jbe
mov
ja
ss
pop
jl
jp
popa
jle
or
pop
jae
or
mov
sub
jb
fwait
gs
aad
jae
sub
or
fild
jns
jle
in
mov
or
xor
sub
popa
(bad)
test
pop
outs
test
test
fimul
xchg
jne
aam
out
or
add
xchg
push
in
lods
out
lea
into
ins
retf
mov
in
adc
add
daa
lods
cmp
and
frstor
jecxz
das
icebp
add
imul
push
cmp
add
hlt
xor
mov
xchg
and
fucompp
mov
or
stos
cmp
and
sti
adc
and
jg
les
(bad)
icebp
lods
pop
bnd
jne
jecxz
xor
and
add
stc
mov
mov
hlt
call
and
adc
test
adc
cmp
dec
jae
jns
std
gs
push
add
mov
xor
push
inc
out
mov
mov
mov
mov
jb
and
clc
push
lock
rep
addr16
mov
jb
xchg
or
cmp
gs
sbb
dec
jl
fcomp
sub
jp
pop
pop
add
and
add
lea
imul
cmp
mov
cs
iret
cmp
cli
add
dec
mov
das
adc
cmp
enter
and
or
xor
pop
and
jns
mov
sbb
pop
push
xor
jns
push
das
inc
xor
add
sahf
adc
sahf
cmp
inc
mov
sub
and
pop
xor
fs
mov
dec
ffreep
xor
mov
outs
add
and
rol
or
jo
bound
inc
pushf
push
je
jno
cwde
ret
out
sbb
js
(bad)
pop
gs
jb
xchg
push
(bad)
rcl
mov
pop
push
aaa
and
cmovnp
push
inc
sbb
in
push
aad
nop
xchg
out
out
loope
cdq
cs
mov
pop
cwde
push
aas
or
push
cmp
sar
mov
sbb
sti
pop
jl
inc
(bad)
xchg
ret
mov
and
pop
cmp
shl
xor
xchg
int3
clc
and
out
mov
pushf
pop
xor
sbb
and
jle
rol
inc
xor
cmp
xchg
sub
retf
les
ror
sbb
mov
adc
gs
or
cmp
hlt
rol
fsubr
sub
call
mov
pop
sub
mov
push
adc
and
cdq
mov
cmp
mov
out
lods
mov
aam
imul
jns
ret
sbb
mov
lds
mov
mov
aaa
aad
push
add
jno
popa
push
icebp
push
cmp
or
sbb
mov
sbb
(bad)
xlat
fstp
cld
or
jo
movaps
cmp
adc
scas
xor
lods
and
popf
xchg
loop
mov
jns
mov
call
into
retf
retf
xlat
les
add
xor
setge
cmp
lds
popa
inc
xchg
aas
aad
and
mov
test
inc
pop
mov
in
test
inc
and
jbe
jne
inc
inc
ins
stc
push
xor
loope
movzx
nop
or
pop
xor
or
add
jb
xchg
sbb
(bad)
jge
test
cli
and
adc
mov
in
xchg
ret
jg
or
sbb
lods
mov
enter
lods
inc
pop
packuswb
add
add
cmp
and
rol
dec
sub
dec
pop
(bad)
sbb
int3
mov
shl
jnp
in
repz
push
sbb
mov
rcl
outs
jae
mov
shl
sub
xlat
lahf
fucomp
sub
pop
cmp
cmp
call
aad
or
stc
data16
outs
push
sbb
cmp
(bad)
retf
movs
stos
cmp
mov
iret
aas
xor
mov
cmp
mov
or
aad
dec
sub
jl
add
jmp
pop
mov
inc
jne
movs
adc
in
rol
scas
cmp
sbb
and
lods
xchg
cld
(bad)
stos
cmp
cmp
xchg
(bad)
pop
xor
pop
pop
pop
xchg
mov
push
out
push
les
push
and
aaa
inc
mov
inc
les
and
dec
xchg
mov
push
cs
lods
pop
mov
mov
aam
jmp
add
mov
sbb
subps
cmp
inc
inc
sbb
mov
mov
jne
sbb
ins
add
je
sub
push
jo
add
mov
fwait
jb
nop
cwde
fimul
inc
push
fwait
shl
jmp
test
mov
adc
stos
push
sub
shr
xchg
pushf
pop
push
std
xor
inc
cmp
int3
aaa
pop
cmps
xchg
mov
rcl
fnstsw
push
cli
aad
add
xchg
push
movs
ds
test
movsx
retf
lahf
sub
ret
cmp
mov
(bad)
cs
jae
push
xchg
sub
adc
cmp
xor
(bad)
int3
pop
out
mov
jbe
je
repz
inc
jecxz
pop
push
xchg
in
out
es
cld
aas
mov
adc
lods
or
jecxz
sub
mov
out
in
xchg
xor
cmp
mov
sbb
add
pop
adc
inc
pop
les
pop
mov
ret
pop
mov
ficom
adc
aam
inc
push
xor
mov
inc
repz
out
add
pop
mov
in
loope
fwait
push
push
out
and
sub
test
(bad)
push
sbb
cmp
add
iret
(bad)
test
(bad)
push
repnz
xchg
add
cs
or
cld
leave
mov
(bad)
movs
xor
mov
out
adc
jmp
mov
dec
rol
mov
scas
test
mov
aas
loopne
sar
xchg
adc
gs
js
aas
mov
jb
sub
jmp
test
sbb
push
mov
and
sub
cwde
pop
or
ja
add
mov
inc
xchg
or
lahf
mov
enter
cmc
sbb
lea
lods
and
stc
lods
sar
scas
pop
sub
mov
loop
xor
push
jns
push
sbb
test
das
or
inc
dec
outs
xor
fld
xlat
int
int
sbb
inc
jns
retf
ins
das
ja
rol
xor
ret
jns
call
fcmovb
cli
xor
sub
std
adc
add
sbb
arpl
sbb
jl
pop
in
mov
and
pop
addr16
mov
das
mov
stos
out
loope
or
pop
(bad)
repnz
xchg
pop
cmp
push
in
xchg
push
(bad)
or
sbb
push
dec
mov
aam
add
nop
xchg
out
push
rcr
xchg
test
lods
push
sub
fdivr
imul
rol
jmp
loop
stc
test
in
push
lahf
cwde
push
aaa
jle
inc
inc
xor
out
xchg
cmps
fdiv
mov
inc
sub
add
daa
xor
stos
pushf
pop
jmp
ins
dec
repnz
scas
inc
pop
add
cmp
xor
sbb
push
jmp
or
cli
ja
lods
mov
and
sar
push
pop
mov
jae
fisub
pop
(bad)
cli
movs
fs
sub
cmp
sbb
les
or
loope
add
mov
lods
sahf
inc
pop
cmp
lods
das
call
mov
shr
inc
stos
in
sbb
xor
cmps
ja
icebp
shl
dec
pop
leave
dec
popa
push
push
jb
fild
dec
nop
xor
jp
pop
dec
xchg
sbb
mov
xchg
jge
mov
sbb
int
mov
aas
in
sub
lds
push
pop
bound
cmp
push
sti
xchg
push
aaa
lock
ja
or
nop
fmul
aam
clc
push
in
lock
mov
ds
outs
inc
ja
in
mov
mov
loop
arpl
adc
icebp
in
mov
ror
jmp
inc
sar
ss
shr
inc
(bad)
and
ds
(bad)
aad
inc
inc
movs
adc
dec
stos
and
cmp
mov
pop
or
cmps
push
jmp
lock
repnz
frstor
jge
cld
lods
scas
and
popa
push
mov
fisub
sbb
fdivrp
sbb
jg
pop
mov
mov
mov
loope
out
test
mov
cmp
stos
mul
sar
or
cmps
push
cs
sbb
fsub
push
add
mov
mov
mov
ss
daa
and
and
push
ins
aas
mov
pop
mov
mov
jmp
fs
add
arpl
pop
pushf
pop
push
mov
cmp
out
dec
mov
and
mov
fnstsw
or
or
sub
mov
das
jb
and
clc
inc
xor
test
popa
jecxz
mov
das
mov
stos
das
xor
cmp
addr16
ror
push
sbb
and
jbe
mov
mov
movs
mov
fmul
sbb
mov
fisub
(bad)
xchg
mov
jp
shl
cmp
add
pop
mov
movs
push
mov
sub
jecxz
add
retf
or
test
xchg
movs
arpl
cmp
cmps
daa
(bad)
adc
mov
retf
jns
stc
mov
loopne
jg
mov
inc
cli
inc
leave
mov
xchg
fistp
call
imul
shl
adc
aam
cmp
xchg
mov
mov
jnp
xor
scas
stc
rcr
pop
cmp
mov
push
gs
pop
jo
loop
inc
ret
sub
aam
movs
repnz
xor
cmp
shl
jmp
pusha
sbb
in
push
push
ins
mov
cs
pushf
or
xchg
cdq
pop
add
(bad)
mov
xchg
int
jne
imul
push
adc
dec
fsubr
dec
xor
mov
pop
(bad)
dec
sbb
dec
out
pop
push
sub
pop
jmp
pop
inc
inc
enter
mov
pop
jne
or
mov
ins
mov
into
dec
rcr
stos
sub
sbb
mov
or
xchg
add
in
mul
jle
ss
push
rol
aaa
sub
pop
xchg
xor
mov
sbb
cwde
mov
gs
setae
dec
cli
das
add
popa
pop
sbb
sbb
add
popa
push
std
mov
sbb
add
fnstsw
test
das
into
lock
xor
cwde
ret
xlat
cwde
cmp
push
mov
add
push
cdq
mov
rol
imul
jp
sahf
mov
push
jl
outs
mov
mov
je
or
or
and
or
and
lods
cmc
adc
jp
cmp
jb
daa
mov
or
or
jecxz
loopne
ins
or
xor
jns
call
ret
mov
stos
out
clc
nop
mov
mov
int3
imul
adc
push
stc
inc
jmp
adc
xor
inc
(bad)
pop
sti
ss
cmc
mov
or
add
fadd
sti
fstp
sbb
xchg
loopne
xlat
jae
or
cli
mov
xchg
dec
cmp
sub
pop
mov
fadd
inc
inc
pop
xchg
xchg
xor
ror
(bad)
popf
test
fild
adc
sub
aas
mov
mov
sbb
xchg
mov
dec
aam
mov
xchg
test
mov
xchg
in
xor
pop
jcxz
pop
sahf
hlt
test
nop
pusha
in
loope
enter
(bad)
push
and
add
mov
mov
mov
mov
sub
retf
test
inc
scas
ja
xor
mov
pop
(bad)
adc
leave
pop
pushf
add
adc
sub
cwde
cmp
mov
mov
and
jg
lock
or
es
cmp
lea
int3
xchg
adc
cmc
cwde
xchg
fld
test
xor
and
lock
sub
xor
stos
adc
int
jbe
jnp
fisttp
(bad)
in
cmp
loop
pop
in
adc
ins
and
in
push
mov
addr16
aad
lock
push
sub
mov
out
inc
and
stos
sbb
and
xor
mov
mov
rcl
sbb
rol
sbb
add
pop
dec
mov
jae
xchg
xchg
pop
jb
(bad)
and
pop
ins
jg
mov
mov
xor
lahf
push
mov
adc
popf
ins
inc
ins
add
add
jmp
xchg
push
xlat
(bad)
js
add
mov
mov
mov
add
push
fdivr
xor
stc
stc
mov
mov
sub
mov
movs
leave
(bad)
(bad)
in
pusha
jl
(bad)
js
adc
dec
mov
pushf
imul
jbe
push
jb
je
scas
fwait
cmp
sub
movs
lods
sbb
add
retf
(bad)
push
out
iret
or
popf
xchg
inc
xlat
pop
mov
xchg
mov
pop
sub
mov
jbe
pop
xchg
data16
fwait
movs
jbe
mov
or
pop
jmp
idiv
int
in
retf
fcom
sub
pop
pop
outs
popa
mov
js
sbb
xor
data16
std
adc
jne
mov
pop
loop
sti
das
imul
pusha
xlat
push
jp
cmc
pop
cmp
push
retf
mov
es
sub
sbb
xchg
pop
scas
in
inc
outs
ss
cmc
mov
push
pop
adc
push
push
out
mov
sbb
and
xchg
dec
jno
(bad)
(bad)
in
shl
push
mov
std
fsub
push
mov
test
push
enter
popf
test
push
xchg
or
test
cmps
adc
xlat
lods
push
pusha
xchg
lods
fiadd
gs
xchg
mov
hlt
js
leave
push
mov
bnd
fdivr
fs
aam
push
add
neg
and
fld
outs
jecxz
(bad)
pushf
fdivr
les
test
ja
pop
lock
pop
rcr
mov
push
sbb
sub
inc
jns
ja
mul
ret
mov
test
push
(bad)
call
jbe
shl
call
inc
das
xor
adc
repnz
xchg
jno
xchg
push
mov
sub
mov
das
pop
cmc
gs
mov
mov
ins
or
ret
fdivp
jo
fcom
sub
fcomp
and
mov
xchg
jmp
ret
mov
test
push
mul
stos
mov
test
mov
xchg
retf
dec
out
in
mov
adc
mov
push
mov
lods
enter
fadd
mov
cwde
mov
push
aam
adc
sbb
pop
rcr
ss
shl
lds
push
lahf
jp
in
call
imul
push
push
cmps
int3
jmp
mov
test
inc
jmp
mov
jns
fisubr
movs
inc
jg
dec
mov
mov
repnz
and
adc
jmp
fwait
xor
and
fadd
fucomip
pop
push
test
xchg
das
pop
push
push
in
out
clc
leave
or
(bad)
adc
and
out
shl
inc
movs
into
push
push
out
inc
movs
xchg
push
inc
stos
(bad)
or
leave
jbe
retf
xlat
test
inc
shl
sbb
stos
add
mov
ficom
sub
pop
loop
enter
stc
or
push
inc
frstor
sahf
mov
push
repnz
retf
mov
int3
sbb
push
fisub
je
mov
cdq
pop
aaa
int
push
pop
lea
mov
add
into
pop
(bad)
xchg
jmp
mov
push
icebp
add
rol
jnp
in
and
add
das
sub
jb
pop
test
in
(bad)
nop
xchg
mov
push
js
xor
loop
cmp
push
fwait
aas
xchg
cmp
test
mov
sar
jmp
and
jge
dec
cld
aad
mov
in
cdq
dec
aas
sbb
fiadd
cdq
ds
mov
dec
dec
fsubp
add
sbb
push
sub
push
inc
and
sar
push
or
jmp
mov
fdiv
call
push
fucomip
or
ficomp
xchg
mov
mov
imul
rol
iret
std
mov
int
ins
and
mov
mov
xor
sbb
inc
xchg
imul
outs
fcomp
cdq
out
mov
fidivr
mov
and
jbe
sub
(bad)
mov
add
je
dec
and
ins
out
shl
add
fwait
mov
shr
xchg
scas
cmp
mov
movs
ds
push
xchg
adc
mov
xor
(bad)
fidiv
xor
adc
cmp
dec
pop
(bad)
jno
xor
in
pop
mov
jnp
mov
fist
jno
push
repz
dec
sahf
movs
loop
ret
mov
xor
sbb
mov
mov
popf
loope
(bad)
fisub
pop
adc
mov
test
outs
cwde
arpl
mov
out
mov
mov
xor
jecxz
inc
pop
jnp
jle
pop
jnp
(bad)
shr
dec
(bad)
mov
dec
ss
ss
out
jg
mov
in
into
rcl
lds
mov
and
cdq
pop
das
fidiv
jg
sbb
fcomp
or
pop
aam
aad
sbb
out
mov
inc
inc
lea
fcomp
out
mov
mov
cmp
out
dec
out
dec
pop
mov
xchg
jns
dec
xchg
push
push
inc
pop
cmp
daa
adc
les
or
dec
sub
stos
mov
inc
sub
or
shr
pop
sbb
sbb
hlt
cmp
sbb
les
fnstcw
lds
mov
push
mov
jnp
or
clc
in
mov
inc
(bad)
addr16
clc
xchg
sar
xlat
jmp
pop
dec
jne
stos
jge
lahf
push
dec
aaa
xor
clc
out
or
fwait
push
xchg
dec
rcl
clc
adc
jle
cmps
sar
pushf
cs
sub
add
push
push
cmp
mov
pop
sbb
xor
lock
push
lea
dec
inc
(bad)
adc
push
scas
inc
das
inc
cmps
inc
popa
adc
mov
mov
jnp
out
fstp
mov
pop
cwde
cmps
hlt
ins
into
mov
pop
stos
mov
xchg
mov
xchg
xor
or
xor
mov
sub
ret
ins
push
inc
push
mov
sbb
xchg
jecxz
loope
jg
push
out
pop
xlat
xchg
dec
int3
int
dec
jo
in
sbb
pop
inc
push
add
jge
sub
aas
stc
hlt
adc
sti
cmps
adc
push
mov
lock
test
pop
mov
pusha
xchg
xchg
jmp
mov
or
mov
inc
idiv
inc
xchg
ss
out
daa
scas
lock
fisub
mov
and
fisttp
and
out
xchg
popa
cdq
ins
adc
mov
repz
mov
mov
inc
arpl
sub
lock
jp
aaa
stc
int3
push
jle
xchg
jns
sbb
xchg
lods
mov
xor
jnp
mov
scas
mov
sub
dec
and
pushf
scas
cs
nop
aam
sub
xor
push
fwait
push
jmp
dec
test
lods
out
or
jecxz
and
ds
lods
mov
inc
je
pop
dec
xchg
movs
or
or
sbb
(bad)
iret
xlat
(bad)
dec
xor
inc
adc
inc
mov
imul
add
les
add
clc
aas
mov
or
lods
ins
mov
push
fstp
retf
cmp
lods
imul
and
ret
or
es
jl
add
popa
lods
cmp
(bad)
mov
pushf
push
push
cmp
mov
jmp
pop
les
arpl
adc
cli
push
cmp
jl
jb
(bad)
mov
clc
pop
call
out
and
(bad)
or
xor
xchg
ja
hlt
xchg
mov
xchg
popf
or
push
movs
dec
lahf
cld
inc
jl
push
adc
sbb
cmp
mov
sbb
ret
mov
sbb
inc
inc
movs
inc
js
mov
aad
(bad)
lock
and
or
daa
out
or
(bad)
adc
xchg
fild
fs
(bad)
ror
sub
cli
lock
inc
jne
pop
mov
xchg
push
sbb
jns
cmp
push
and
jns
scas
sbb
mov
dec
push
inc
cld
xor
stos
icebp
dec
push
adc
loopne
xor
or
adc
retf
sub
or
jle
imul
lods
cmps
lods
(bad)
jle
jb
xor
cdq
loopne
add
clc
std
mov
push
test
add
mov
inc
ss
(bad)
outs
loope
or
ss
add
push
ins
(bad)
das
push
pusha
push
add
(bad)
ror
sbb
inc
retf
pop
retf
pop
adc
stos
xor
jne
push
loopne
mov
repnz
sub
add
sbb
pop
std
push
mov
rol
popf
fisttp
enter
shr
jo
nop
fist
mov
pusha
jns
sbb
sub
fwait
or
inc
cmp
int3
dec
adc
repnz
repnz
sbb
xor
cmp
imul
dec
ins
shl
arpl
gs
and
mov
cmps
test
outs
ins
jg
jge
mov
mov
in
and
ins
je
nop
je
repz
mov
push
lock
xchg
sub
adc
aaa
leave
mov
mov
and
ins
sub
inc
adc
jo
nop
mov
test
inc
dec
adc
or
sar
(bad)
call
inc
add
lea
pop
xor
int3
aas
mov
xor
push
fistp
arpl
retf
jb
sub
jmp
lods
movs
in
arpl
cmp
(bad)
cli
(bad)
jb
into
cld
jg
pop
(bad)
xor
test
aaa
mov
(bad)
sub
mov
mov
jmp
and
ins
int
pop
pop
push
(bad)
fistp
jbe
and
mov
xchg
cmc
test
sbb
mov
xor
mov
jns
cmp
mov
loop
pop
mov
jns
inc
pop
int3
fidiv
out
fwait
out
pushf
data16
add
xchg
xlat
adc
mov
je
es
pushf
jge
inc
psubw
out
xchg
mov
lea
pusha
dec
inc
pushw
idiv
leave
mov
adc
leave
jnp
fisubr
lods
das
rcr
pop
ds
sar
jno
or
inc
clc
jno
dec
cmp
push
xchg
nop
mov
fmul
mov
and
adc
call
aad
or
and
and
pop
scas
or
aad
cmp
jp
add
popa
mov
inc
test
div
imul
or
repnz
jo
or
jmp
sbb
push
add
les
mov
aas
adc
shl
hlt
and
xchg
jmp
or
repnz
and
out
aas
fs
call
test
cmp
aam
and
pop
test
lea
(bad)
xchg
and
lods
push
jae
cmp
cmps
aas
ins
add
pushf
scas
lock
les
bound
jmp
pop
cmp
jecxz
aaa
cmps
push
mov
in
pop
xlat
retf
das
adc
and
test
fneni(8087
push
add
push
push
clc
sbb
xchg
div
mov
cdq
and
pop
or
leave
xchg
cmps
inc
push
dec
inc
push
xchg
retf
mov
xchg
sub
dec
push
cmc
dec
int
pop
jmp
mov
imul
(bad)
adc
jl
ficomp
ffree
pop
movs
sbb
ss
mov
dec
sbb
fisub
mov
sub
xchg
pusha
shr
pop
pop
mul
mov
lods
add
xchg
fisubr
mov
pop
(bad)
pop
and
ret
fldenv
jp
js
rol
pop
mov
mov
aam
add
inc
scas
sbb
pop
cmc
enter
sti
out
arpl
out
xor
repnz
pop
or
dec
rcr
and
(bad)
pop
stos
repz
mov
mov
sbb
sbb
or
or
retf
pop
aaa
push
jns
shr
scas
and
dec
(bad)
xor
and
pop
pushf
push
fisttp
iret
out
jne
jne
hlt
fild
xor
stos
pop
bndldx
cwde
xchg
cli
and
sub
scas
in
setle
lock
mov
lods
out
inc
pop
stc
(bad)
mov
inc
xor
sub
daa
dec
pop
into
daa
mov
addr16
scas
mov
maskmovq
neg
and
in
shr
or
cwde
push
lds
lock
cmc
jnp
rol
inc
mov
mov
push
fdivr
leave
dec
jmp
in
les
mov
(bad)
in
sub
shr
dec
cmc
xchg
sbb
outs
sbb
sbb
cli
push
retf
jg
adc
stc
mov
inc
retf
fistp
push
retf
and
outs
adc
sbb
repz
in
sar
xor
repz
outs
xchg
mov
mov
add
sbb
xor
sub
sar
inc
cmp
out
gs
fcmovbe
cwde
daa
je
adc
pop
push
mov
pop
dec
movs
mov
cmp
loop
sub
repnz
arpl
or
pop
(bad)
mov
cmc
mov
dec
mov
add
jb
lock
sar
aas
imul
cmps
dec
xor
mov
sti
sub
push
dec
test
mov
adc
(bad)
ds
cmp
add
outs
add
outs
mov
nop
lock
mov
push
inc
mov
adc
scas
scas
aam
test
push
clc
sahf
fdivr
cmp
jp
mov
pop
sbb
(bad)
and
sub
xchg
outs
retf
cmps
mov
stc
(bad)
(bad)
in
popf
jns
jb
and
mov
fisubr
mov
lods
sub
jg
aam
mov
push
mov
pop
sub
icebp
add
dec
adc
out
add
sub
mov
inc
jecxz
xor
nop
(bad)
mov
imul
adc
loop
mov
sbb
adc
sbb
fild
mov
js
xor
push
je
xchg
sbb
out
mov
out
(bad)
or
lahf
xchg
cmps
add
and
inc
es
or
mov
nop
imul
(bad)
clc
pop
push
sbb
sti
xchg
sub
imul
add
dec
sub
xchg
adc
pop
inc
xchg
in
dec
fsin
dec
into
in
sub
leave
mov
data16
pop
xchg
xor
mov
call
je
inc
and
test
xchg
xor
(bad)
shr
or
imul
adc
mov
outs
out
mov
and
fimul
adc
dec
jle
add
sbb
aas
imul
jne
cwde
les
adc
adc
cli
int3
xor
retf
sbb
jnp
adc
nop
pop
repnz
sub
popa
cmp
in
ss
psllw
push
push
les
add
sub
popa
icebp
gs
or
and
hlt
cmp
jge
xchg
cs
mov
push
in
dec
mov
dec
xor
fisubr
jle
cmp
mov
call
ins
mov
aam
mov
aaa
fsubr
int3
aaa
adc
test
ds
lea
popa
scas
cmps
scas
(bad)
std
gs
and
or
dec
inc
mov
nop
inc
cmp
stc
test
arpl
lds
retf
out
iret
js
sub
ret
js
or
xor
rcr
xchg
mov
adc
mov
cmp
sahf
sar
arpl
in
or
mov
jl
fisubr
jne
mov
jmp
xor
and
aas
and
cli
inc
mov
pushf
cmps
call
test
gs
push
jecxz
dec
gs
push
push
adc
scas
jbe
pop
shl
mov
je
inc
push
test
aaa
imul
mov
jg
mov
or
ret
mov
add
pop
xchg
pop
dec
sub
add
cld
jb
in
fmul
les
add
push
jle
pop
data16
add
xchg
sbb
or
jae
sub
je
test
xchg
cmps
push
(bad)
(bad)
pushf
or
mov
push
lods
sub
add
fldz
lea
int3
test
xchg
imul
retf
mov
pop
mov
cmp
jo
(bad)
pop
pop
pop
pop
fst
in
fdivr
mov
push
jmp
or
or
cwde
ds
xchg
mov
pop
icebp
cli
fdivp
jnp
cmps
or
dec
xlat
neg
ror
xchg
outs
test
int
es
mov
pop
inc
iret
cs
sub
adc
jp
(bad)
mov
xchg
mov
xchg
adc
push
aas
pusha
sti
fild
mov
lds
pop
sbb
(bad)
fisttp
inc
dec
loope
or
leave
stc
pop
jecxz
popf
sbb
push
iret
cmp
std
std
xchg
inc
jecxz
pop
cwde
shr
mov
movs
mov
mov
je
cld
in
sbb
sub
mov
xchg
add
push
pop
mov
cmp
cmps
inc
sbb
mov
fstp
jmp
lds
nop
ins
(bad)
sbb
cli
call
icebp
repz
es
mov
pop
pop
xchg
add
ins
pop
push
data16
popf
xchg
push
(bad)
xchg
mov
cdq
pop
out
mov
es
mov
cmp
jl
jmp
fsubr
ficomp
mov
rcr
push
xchg
inc
call
int3
or
mov
je
dec
imul
lea
add
lods
pop
leave
out
retf
daa
out
add
jmp
cwde
sbb
pushf
pavgb
ja
scas
pop
mov
dec
push
cwde
test
inc
mov
repz
cmps
push
mov
(bad)
xor
or
adc
ds
xor
jge
jo
xor
cmp
ins
push
mov
mov
jle
inc
shl
jmp
cmp
in
or
stos
(bad)
jl
aaa
mov
scas
cmp
mov
add
mov
rol
cld
adc
push
push
add
std
push
sub
cmp
xor
les
inc
and
jbe
imul
mov
adc
out
call
nop
ret
xchg
fiadd
mov
sub
mov
movs
(bad)
sti
(bad)
repnz
jnp
fstp
pop
sbb
scas
inc
jns
sbb
ins
or
loope
sub
in
jae
nop
shl
hlt
xchg
jg
or
aam
push
loopne
push
das
push
sbb
ret
jmp
in
imul
dec
loope
arpl
imul
loop
adc
jbe
popf
shl
lock
cli
cmp
mov
rol
jle
fs
and
and
jno
mov
adc
popf
pop
mov
push
cli
adc
retf
mov
ins
mov
xor
dec
ffreep
xchg
fist
mov
imul
(bad)
mov
mov
sbb
shl
or
rcl
jnp
xor
dec
(bad)
fiadd
sbb
out
add
loopne
jno
clc
out
sahf
ins
and
fdiv
out
mov
cmp
pop
sbb
push
(bad)
adc
or
(bad)
inc
pop
lahf
repnz
inc
aam
bnd
lock
jle
xor
scas
and
adc
or
fistp
les
cwde
inc
inc
push
shl
cmp
dec
pop
pop
pop
jne
into
xor
leave
dec
dec
mov
add
add
xchg
fild
push
adc
push
cmp
mov
mov
shl
jmp
adc
sbb
sub
in
mov
adc
shl
dec
(bad)
cmp
test
xchg
mov
shr
ffreep
adc
test
nop
test
pop
pop
pop
mov
xchg
xor
mov
add
push
pusha
and
cmps
push
or
jnp
xor
adc
into
outs
sub
inc
cmps
mov
aaa
or
test
pop
ds
(bad)
in
cmc
icebp
test
or
hlt
mov
xchg
push
and
mov
or
pop
sbb
inc
mov
ror
out
loop
or
and
into
in
xchg
dec
jb
pop
dec
pusha
dec
xchg
in
push
hlt
int3
sbb
sbb
fst
fmul
addr16
mov
pop
fisttp
add
push
add
int
jecxz
and
popa
jnp
sar
dec
jmp
arpl
sahf
pop
fs
repz
aam
(bad)
push
inc
add
inc
xchg
push
cli
cmp
ret
test
mov
jp
add
arpl
mov
and
sbb
fwait
push
sbb
sub
xor
loope
neg
pusha
cmp
xor
or
popa
bound
ret
in
jg
sub
adc
ja
loope
(bad)
jns
inc
mov
frstor
mov
jmp
out
dec
mov
repz
jns
mov
mov
sti
sbb
outs
(bad)
xchg
jno
push
inc
fisubr
jb
mov
or
int
arpl
pop
inc
cmp
mov
sar
aaa
adc
add
in
pusha
sahf
and
not
and
jg
clc
das
les
inc
lods
lods
out
outs
push
addr16
xchg
jbe
push
arpl
mov
int3
out
jecxz
sar
(bad)
sahf
inc
mov
lea
fmul
mov
mov
xor
repnz
jle
fcmovb
lds
push
out
cmp
fisub
aad
jmp
icebp
daa
(bad)
mov
popa
pushf
jb
mov
scas
retf
fisubr
jns
xchg
mov
mov
and
xchg
fld
cli
scas
mov
add
jecxz
ins
out
adc
push
mov
out
inc
aas
fisub
(bad)
jle
enter
sbb
pop
pusha
fbstp
es
lea
mov
inc
push
rcl
xchg
xchg
fsubr
(bad)
dec
jg
mov
xor
test
adc
cmp
andps
mov
ins
imul
xor
dec
xor
test
xor
int
xchg
jns
fistp
shl
sbb
dec
call
inc
mov
mov
xlat
dec
popa
daa
ds
push
call
sbb
daa
and
push
lock
or
push
cld
mov
int
into
or
(bad)
sub
jmp
xchg
rcr
lea
hlt
gs
int3
push
je
add
xor
(bad)
in
nop
jg
jmp
inc
loopne
call
cld
popa
movs
lods
out
pushf
mov
cmp
xlat
adc
cdq
mov
stos
ret
fnstcw
fisubr
pop
out
jmp
xchg
(bad)
jmp
ret
mov
fiadd
pop
xor
hlt
std
popa
mov
cmp
(bad)
lock
aas
(bad)
popa
jle
int
mov
xor
stos
sbb
int3
(bad)
imul
push
ficom
push
pop
mul
fldenv
out
popa
outs
aam
hlt
je
and
cmp
mov
icebp
sti
mov
fldcw
xor
mov
mov
lds
adc
loopne
ja
(bad)
lock
push
pushf
lods
inc
and
mov
xchg
pop
bound
xor
nop
add
jne
xchg
imul
push
sub
pop
test
mov
cli
fcom
test
es
sbb
daa
mov
mov
xor
es
lods
xchg
xlat
xor
xor
dec
pop
ret
loop
in
cwde
push
push
or
imul
mov
ror
in
popa
popa
and
push
cmp
and
ss
adc
jmp
dec
jo
pop
jg
js
mul
pusha
inc
fucomi
stos
cmps
jmp
dec
jle
fcomp
or
jg
jmp
fs
cmps
jmp
sub
jno
fsub
clc
dec
pop
popa
out
aas
jo
fadd
xchg
sbb
xchg
push
xor
xlat
mov
fisubr
push
inc
out
or
pop
jle
js
pop
lds
adc
sbb
mov
cmps
inc
mov
pop
sar
test
leave
xor
xchg
dec
(bad)
mov
(bad)
cmp
hlt
mov
ret
inc
ret
pop
addr16
push
int
xchg
mov
loope
pop
mov
add
dec
int
xor
daa
cli
clc
ss
pop
jecxz
add
xor
jmp
das
push
popa
call
xor
fucomip
outs
sti
sahf
add
push
sbb
sar
and
pushf
(bad)
fistp
jo
xchg
mov
call
enter
(bad)
jle
je
xchg
das
mov
test
in
or
cs
inc
add
gs
movs
ins
movs
push
sbb
fs
std
repnz
adc
adc
loopne
pushfw
stc
jmp
movs
loope
mov
cmc
push
fmul
inc
lods
mov
jl
stos
mov
add
mov
or
adc
dec
jo
push
sub
cmc
fsubr
xchg
mov
ins
dec
inc
rcr
dec
or
pusha
imul
ins
jno
test
pop
xor
je
test
inc
cdq
mov
pop
cmp
xor
cmp
aad
or
sbb
test
rcr
popf
xor
adc
cmp
xor
dec
pushf
sub
xor
adc
fimul
adc
fwait
and
clc
fstp
adc
adc
call
shr
inc
call
cmp
pop
int
mov
jmp
idiv
xor
imul
call
test
adc
ins
add
arpl
into
(bad)
mov
xor
scas
int
das
inc
sub
sbb
(bad)
out
pop
mov
ds
loope
push
icebp
ss
ds
rol
fbld
xchg
pop
mov
ja
loop
test
jae
movs
std
xchg
ss
aad
sbb
les
push
push
out
call
ret
inc
sub
hlt
ficomp
jmp
jmp
aam
in
jno
jl
xchg
aad
retf
xor
push
cmps
mov
(bad)
xchg
test
xor
and
in
mov
ror
je
sub
sub
xchg
js
mov
gs
sbb
mov
dec
add
inc
int
jmp
out
mov
sub
std
out
adc
jo
sbb
(bad)
sahf
jl
jmp
mov
outs
mul
pop
test
not
mov
push
jne
nop
pop
jbe
retf
cmp
or
dec
repz
rcr
xor
adc
or
popf
dec
inc
dec
(bad)
test
fstp
mov
mov
dec
shl
or
sub
xchg
sahf
fimul
call
std
idiv
xchg
mov
or
jno
dec
add
xchg
xor
popa
cmc
mov
jo
and
in
mov
out
jmp
into
cli
fst
mov
dec
sbb
or
cmps
icebp
mov
cli
jbe
not
fld
mov
inc
stos
aam
jbe
or
outs
mov
jp
fucomi
nop
enter
shl
test
sbb
(bad)
jne
lock
adc
cli
or
pop
ja
xchg
push
fsub
mov
(bad)
cs
loop
ins
(bad)
(bad)
(bad)
cmp
enter
xchg
mov
cs
sbb
in
cmp
or
out
lea
pop
and
xchg
jmp
movs
dec
out
mov
(bad)
bound
cs
nop
idiv
inc
sub
mov
popa
xor
in
loopne
shr
dec
and
ficom
push
dec
lods
fnstsw
retf
cwde
hlt
fwait
mov
pop
inc
gs
pop
mov
stc
faddp
cmps
mov
push
repz
or
mov
out
cmp
outs
inc
mov
dec
cmps
cs
mov
dec
xlat
jbe
cmp
mov
mov
fisttp
xchg
inc
pop
dec
test
adc
cmp
enter
call
sub
mov
jmp
xchg
jecxz
pop
loop
mov
sub
or
cli
aad
icebp
add
jnp
add
push
sbb
loop
jle
xchg
xchg
lods
dec
xchg
sbb
jmp
pop
mov
or
mov
add
adc
stos
mov
xor
ins
and
fs
sbb
mov
cmp
popf
test
push
pop
and
ficomp
fisubr
daa
push
cmp
add
add
xchg
mov
int3
push
inc
mov
ret
mov
mov
or
repz
adc
cwde
(bad)
std
test
push
pop
push
mov
(bad)
in
mov
lds
cmp
mov
jp
sbb
sahf
or
adc
imul
popf
in
leave
and
sub
(bad)
shr
xor
int
stc
repz
dec
push
cmp
out
cld
(bad)
in
cmp
lock
lds
jnp
lods
fcmovne
in
push
hlt
inc
imul
push
inc
adc
xor
sbb
jns
xchg
enter
mov
sub
xlat
pushf
popf
out
and
sbb
(bad)
call
jl
inc
inc
ins
mov
xchg
inc
enter
repnz
add
jb
imul
fistp
push
sub
imul
pop
add
mov
sbb
repnz
jge
ins
popa
outs
jmp
dec
sub
sub
cmp
pop
or
xor
mov
ficom
inc
(bad)
ds
jecxz
mov
pop
adc
jno
xchg
imul
dec
dec
cmps
push
in
jns
jecxz
adc
mov
retf
or
xchg
popa
xor
out
pop
push
ins
(bad)
cld
or
pusha
mov
xor
scas
push
push
adc
pop
adc
fwait
mov
jae
leave
inc
mov
sub
addr16
jge
scas
dec
cmp
cdq
mov
xchg
mov
sbb
and
jo
jmp
das
int3
pop
mov
add
and
inc
xchg
xor
xchg
jmp
fadd
mov
adc
jmp
mov
test
sbb
imul
ret
xor
movs
xchg
ja
ror
retf
mov
mov
sub
dec
or
mov
icebp
pop
daa
push
xchg
xlat
push
bound
jno
cmp
addr16
mov
or
mov
jbe
xor
jne
cwde
dec
pop
cmp
fwait
jl
dec
inc
aam
repnz
xchg
scas
pop
adc
or
mov
adc
outs
adc
mov
fs
ror
(bad)
scas
int
test
and
es
xchg
dec
dec
cmp
dec
push
sbb
cmp
fisttp
aad
mov
sub
loopne
dec
pop
xor
inc
test
mov
jg
cwde
repnz
inc
jne
push
scas
icebp
(bad)
xchg
jp
cmp
cli
movs
aam
sbb
push
mov
into
mov
arpl
test
jecxz
add
(bad)
jle
add
or
lods
mov
pop
sub
adc
cmp
(bad)
xchg
mov
inc
mov
push
(bad)
es
xchg
sbb
sahf
iret
rcr
or
cdq
popf
test
repnz
jmp
mov
push
mov
mov
daa
and
mov
mov
popf
sub
mov
outs
and
jmp
shl
stos
mov
sbb
mov
nop
mov
into
movs
mov
sar
add
jmp
xor
cmp
aam
into
int3
test
xchg
test
hlt
cmp
(bad)
(bad)
js
push
jnp
out
jns
int
jle
jecxz
cli
and
out
aad
iret
pop
mov
add
add
cli
pop
dec
pushf
jnp
sbb
sub
xchg
push
sahf
push
or
mov
cmp
or
arpl
out
mov
push
fst
movs
pop
stos
test
in
xchg
fxch
add
cmp
addr16
mov
out
sar
cmps
inc
dec
xchg
popf
xchg
lock
ss
jl
imul
push
pop
imul
repnz
data16
sub
fsub
jle
loop
aad
jae
dec
inc
xchg
cwde
scas
js
dec
arpl
jge
das
not
push
int
sub
int3
sti
dec
dec
les
or
test
mov
xor
pop
test
dec
test
cmps
dec
fsubr
ins
adc
push
mov
loop
es
pop
mov
adc
cld
jbe
push
retf
jge
xchg
hlt
sub
outs
jge
sub
fdiv
jle
stc
dec
add
mov
fs
jae
fnstcw
fisub
sub
clc
not
push
in
icebp
(bad)
fs
pop
mov
xchg
xchg
stos
(bad)
pop
mov
test
int3
mov
pop
sub
cli
mov
push
sub
dec
adc
in
jmp
cwde
loope
xor
les
add
jmp
int3
inc
lea
scas
xlat
ret
sub
xor
rcr
imul
inc
dec
ret
(bad)
out
mov
inc
repnz
mov
inc
mov
aaa
mov
jg
sbb
jns
mov
and
outs
lods
adc
imul
icebp
and
sar
popf
pushf
sub
add
xchg
mov
jb
lock
mov
les
mov
pop
div
sub
cmp
(bad)
out
inc
iret
test
jae
(bad)
mov
loope
cdq
push
xchg
add
popf
xor
xchg
inc
jae
or
scas
xlat
cmp
mov
dec
(bad)
adc
or
add
jo
xor
(bad)
outs
call
lock
pop
jl
xchg
adc
fisttp
adc
push
retf
or
mul
or
mov
out
sahf
loop
cdq
mov
out
movs
fcom
mov
outs
pop
popf
ret
(bad)
mov
mov
scas
xor
ins
lock
sbb
repnz
pop
pop
jle
loop
test
ret
xlat
in
xchg
add
pop
movs
pushf
sbb
sti
aam
ss
inc
shl
push
test
call
pop
imul
dec
std
cdq
adc
mov
fcomp
push
ret
repz
movs
bound
add
xchg
push
and
sbb
inc
fisub
(bad)
test
in
adc
jb
jno
pushf
mov
stc
bound
stc
jmp
cmp
mov
in
push
(bad)
pop
cmp
rcr
cmp
scas
aaa
mov
fisub
inc
sahf
or
and
xchg
cmp
gs
lock
jecxz
popa
pushf
or
jge
sar
xchg
inc
inc
enter
fcmovb
shr
xchg
mov
outs
jge
push
or
mov
or
jae
mov
jl
or
mov
sbb
mov
call
xor
lahf
jge
dec
nop
adc
push
or
xlat
dec
adc
in
jae
jge
or
push
mov
sbb
dec
dec
adc
mov
add
lods
pushf
mov
ss
shr
int
(bad)
mov
inc
retf
lea
jge
sbb
mov
mov
pusha
xchg
or
(bad)
xlat
ins
jle
and
xor
int3
xchg
movs
test
cmps
adc
xchg
movs
fwait
xor
xor
cli
dec
ror
pop
in
jbe
mov
ss
mov
xor
sub
and
arpl
push
pop
fdiv
push
ret
inc
add
hlt
call
jmp
pop
pop
pop
std
push
jge
pop
jecxz
dec
call
jne
jo
add
(bad)
mov
dec
jmp
jae
xchg
retf
rcr
sbb
arpl
sub
xchg
loope
xchg
inc
aaa
lahf
pushf
adc
fdiv
jecxz
arpl
in
sbb
ja
mov
test
inc
fs
pop
and
data16
add
movs
push
mov
out
xchg
fld
imul
cmps
mov
mov
mov
enter
(bad)
xchg
inc
sub
xchg
loop
popa
leave
cmp
movs
cmp
cmp
jnp
cmp
adc
push
shl
mov
mov
jae
aas
push
xchg
nop
inc
int
mov
(bad)
out
fistp
inc
or
add
pop
push
mov
pop
shl
rol
(bad)
mov
cli
cmp
(bad)
mov
xchg
mov
test
nop
inc
jmp
cwde
daa
mov
push
sbb
jmp
mov
add
jmp
sbb
mov
ins
jns
dec
push
mov
shl
or
sub
xor
inc
sbb
pop
jne
add
int
inc
hlt
lods
push
jmp
jne
and
stos
loop
neg
pop
fidiv
pusha
aas
(bad)
stc
inc
scas
jmp
popa
repnz
mov
cmps
and
in
rcr
mov
dec
sub
fld
xchg
push
call
cmp
pop
call
mov
sbb
in
sub
pop
push
popa
xchg
adc
mov
adc
sbb
xor
xor
sub
nop
ins
jo
xchg
aas
adc
push
jle
mov
mov
addr16
mov
jp
mov
movs
fwait
push
or
and
and
int
retf
and
jmp
ret
cmps
dec
inc
fmul
mov
in
dec
mov
push
pushf
inc
scas
in
cmp
adc
icebp
add
mov
or
push
cli
jae
jmp
cs
add
sub
dec
jl
daa
mov
call
outs
sub
jmp
pop
pop
loope
or
adc
or
mov
mov
adc
in
cmc
cmp
jecxz
cmp
jle
inc
sub
or
(bad)
dec
inc
jmp
mov
es
cld
inc
or
fst
cli
adc
out
call
out
sbb
xchg
ds
xor
and
adc
aaa
mov
mov
movs
stc
(bad)
fdivp
adc
dec
out
ja
xchg
or
pusha
and
pop
mov
push
int3
jp
(bad)
call
sbb
adc
or
sahf
aaa
cmps
inc
jle
(bad)
pop
sub
and
lock
fadd
mov
cmc
or
sar
or
sbb
stos
test
push
mov
stc
pop
push
pop
adc
lds
adc
rcl
mov
scas
xor
sbb
test
sub
arpl
lock
stos
fs
cli
push
jb
mov
pusha
xchg
jle
dec
ror
out
je
mov
mov
ret
not
add
mov
dec
or
pusha
in
int
cmp
loope
sbb
mov
js
and
sub
sub
call
inc
outs
jge
fdiv
fcomip
or
cmps
cmp
fcomp
xor
pop
xchg
mov
sbb
adc
jmp
ss
in
adc
test
sbb
xchg
rcpps
xor
push
mov
adc
mul
jbe
fdiv
cli
cmp
ret
dec
(bad)
shl
cmp
cmp
rol
add
or
dec
cmps
mov
mov
push
adc
sbb
xchg
pop
pop
fcom
lea
push
push
pop
repnz
fild
gs
push
jg
mov
push
pop
imul
push
(bad)
jge
push
pop
push
shl
test
sub
and
div
inc
idiv
xchg
cmps
shl
xchg
mov
push
jecxz
pop
lds
xor
or
aad
fwait
jne
and
dec
cmc
mov
mov
adc
in
cmp
or
mov
fmul
xor
add
fcomp
popf
jge
imul
repnz
pusha
shl
jnp
add
arpl
mov
lods
xlat
sub
fidivr
cdq
pop
mov
jb
cld
dec
or
adc
pop
adc
cmp
into
repnz
dec
dec
inc
leave
sub
shr
fld
(bad)
stc
lea
sbb
in
int
int3
dec
mov
push
sbb
std
mov
je
push
push
repnz
and
add
xchg
xchg
(bad)
jg
sar
clc
jmp
movs
pop
mov
enter
call
std
pop
daa
mov
push
sbb
dec
sub
xor
neg
inc
(bad)
mov
pusha
mov
sbb
mov
stos
fadd
xlat
jbe
mov
repnz
dec
pusha
mov
jno
jnp
jecxz
or
sbb
or
push
adc
daa
and
lahf
xchg
or
jnp
into
jb
(bad)
jmp
jl
adc
sub
and
push
and
jle
dec
and
stc
daa
outs
sbb
je
jae
(bad)
xlat
cmp
scas
mov
inc
cmp
xchg
xor
xchg
or
and
leave
jo
sbb
call
popa
inc
imul
xchg
sbb
inc
or
bound
dec
loope
(bad)
pop
dec
mov
adc
cli
std
cmps
fcomp
(bad)
mov
jl
data16
outs
lea
ret
pop
into
sti
jno
lds
pop
fs
popa
add
addr16
cmp
hlt
es
popf
pop
push
arpl
ins
jl
lock
mov
adc
imul
shl
in
inc
inc
or
jp
push
pop
es
test
push
daa
test
jno
jnp
and
jg
jns
daa
xor
push
das
pop
pop
popa
jo
sub
inc
aaa
std
and
dec
pop
sti
push
jmp
int
add
cmp
push
xor
mov
push
sub
xor
and
inc
xchg
lock
in
shr
xchg
inc
cmp
out
push
add
add
xchg
loopne
stc
dec
pushf
cmp
cdq
mov
jb
mov
push
mov
test
hlt
or
(bad)
fadd
xchg
inc
jbe
mov
lea
pop
and
or
iret
or
mov
sub
jno
in
sti
or
mov
sub
and
dec
jmp
mov
ds
cmc
sub
sbb
cmp
inc
pop
shl
adc
mov
out
adc
ficomp
and
and
jmp
and
sub
sar
fsubr
adc
mov
je
mov
rcl
loop
or
aas
out
pop
out
mov
mov
or
jno
dec
push
shl
jmp
pop
leave
xchg
adc
mov
outs
add
inc
in
call
add
lock
cmps
dec
pop
push
les
inc
add
pop
not
scas
inc
adc
fs
xchg
mov
xor
lods
test
mov
sbb
pop
sub
push
aas
mov
sub
int
dec
bound
nop
xchg
xchg
daa
mov
arpl
lods
mov
div
sbb
mov
pop
mov
push
imul
lods
pop
or
mov
mov
les
mov
lds
cli
dec
push
xchg
xor
mov
nop
mov
(bad)
dec
push
les
retf
rcl
arpl
sub
mov
jbe
mov
pop
add
mov
rcr
(bad)
pop
ins
popa
shl
ror
jmp
enter
test
push
dec
or
mov
mov
imul
pop
jmp
daa
lods
cmp
movs
adc
mov
mov
sub
rol
ret
in
es
sub
jmp
or
and
and
ret
lods
xor
out
mov
mov
mov
xor
frstor
push
jo
pop
pop
and
sbb
cwde
xor
test
cli
sbb
pop
or
fcom
aas
jno
push
loope
inc
sub
mov
pop
pop
sub
mov
xor
mov
ds
xchg
push
dec
and
neg
test
mov
mov
or
cs
rcr
push
and
jg
mov
mov
jnp
(bad)
and
jo
sbb
js
shl
sub
jbe
push
(bad)
dec
ret
shl
and
add
sub
shr
ins
ret
leave
addr16
or
sub
cmp
fcmovnu
stos
(bad)
inc
push
inc
mov
nop
movs
dec
pop
es
dec
pop
sbb
(bad)
jge
dec
add
test
sbb
push
retf
nop
call
in
add
mov
sub
es
stc
lods
rcr
sub
stos
std
mov
mov
mov
loope
xchg
scas
xor
rol
push
(bad)
in
das
pop
pop
pop
xor
cmps
(bad)
movs
es
test
jmp
jns
jmp
cmc
mov
iret
mov
push
(bad)
test
pushf
pop
imul
sub
(bad)
in
adc
sub
retf
inc
or
fidivr
jp
ror
std
inc
jb
js
xchg
xlat
clc
stos
ds
sub
std
xchg
mov
dec
pop
je
neg
sub
xchg
dec
jl
add
jnp
push
inc
pop
mov
sub
sahf
out
into
push
xor
pop
sbb
scas
lahf
jbe
in
cld
pop
push
sbb
sbb
fild
xchg
js
inc
in
pop
jl
ins
(bad)
ins
push
mov
js
shl
push
add
push
sbb
mov
test
pop
sub
mov
inc
ins
mov
xor
je
add
ds
adc
test
cmp
and
test
daa
add
addr16
imul
shr
inc
inc
cmp
mov
xor
int3
cmp
(bad)
test
xlat
xor
mov
in
xor
mov
push
and
popf
mov
jb
jae
pop
pop
push
xchg
shr
mov
retf
pop
(bad)
outs
cdq
bound
test
or
push
out
and
jl
imul
or
push
inc
nop
cmc
xor
cdq
dec
gs
inc
push
(bad)
ret
dec
mov
fcmovnu
cmp
nop
jge
inc
ds
or
sub
mov
scas
ss
(bad)
push
sbb
pop
inc
aad
dec
jo
fs
test
(bad)
jae
add
btr
ins
and
sub
mov
inc
sar
ret
jae
adc
xor
push
icebp
pop
sbb
loope
cmp
pusha
jns
pusha
fisttp
xor
iret
(bad)
lahf
push
imul
pop
js
aam
mov
adc
add
mov
and
cmp
sub
rcr
stos
pop
mov
sub
fimul
aaa
adc
cmp
psrld
(bad)
push
test
lods
xchg
inc
dec
mov
loop
sub
add
xor
in
jno
loopne
lahf
xor
mov
pushf
sub
fisub
jbe
jno
sbb
ins
(bad)
loope
mov
and
out
ds
and
sbb
add
pop
or
dec
lods
cwde
mov
pop
cmp
adc
and
cli
sbb
hlt
loopne
xchg
xor
out
es
jb
cmps
jge
xor
sar
movs
cld
xchg
sub
movs
fisubr
mov
(bad)
push
movs
mov
adc
sub
push
cwde
out
into
aam
push
into
jae
pop
mov
mov
pop
in
es
aaa
adc
and
das
pop
addps
jp
jns
lea
popa
pop
or
sahf
(bad)
call
jge
xor
stos
fpatan
ja
jae
add
int
int3
xchg
lds
or
mov
ret
ret
ins
adc
or
adc
sbb
test
pop
mov
stc
shl
hlt
fbstp
push
mov
mov
mov
push
sub
ins
outs
lods
or
sbb
sbb
sar
push
jg
push
jle
dec
in
das
hlt
or
(bad)
cmc
hlt
add
rol
adc
push
mov
clc
mov
cmp
ss
fsub
out
retf
cwde
sbb
(bad)
adc
xor
add
dec
inc
jle
xchg
(bad)
jmp
xlat
(bad)
fcmovnb
pop
sub
sub
mov
mov
push
jp
mov
lea
dec
stos
popf
test
jbe
mov
and
jo
out
inc
sahf
push
xlat
jge
(bad)
push
xor
and
mov
xor
out
cmp
les
call
call
scas
outs
lahf
int3
(bad)
jne
mov
jns
dec
or
mov
shl
push
in
jge
loope
add
push
aaa
sbb
lea
cwde
mov
xchg
or
into
outs
add
jmp
push
pop
scas
cmps
cli
dec
(bad)
jl
and
stos
mov
push
mov
or
shr
cmp
mov
aam
pop
mov
or
jecxz
popa
sbb
jge
mov
pushf
push
mov
mov
scas
int3
ror
imul
aaa
sub
pop
push
xor
dec
arpl
inc
sub
rcr
outs
cmp
mov
ret
out
mov
mov
mov
mov
adc
inc
cmp
cmp
xor
addr16
push
je
sbb
pusha
mov
cmp
jle
mov
push
or
(bad)
std
aad
mov
inc
add
mov
mov
lods
mov
add
jecxz
fmul
cmp
adc
sub
add
ror
adc
xlat
(bad)
js
pop
pop
pop
xchg
mov
mov
pop
int
push
loope
inc
jp
jae
outs
repz
les
mov
pop
(bad)
xchg
sub
mov
xor
adc
mov
pop
shl
dec
iret
or
fimul
jo
sbb
addr16
cmp
pop
xor
scas
mov
jmp
pop
mov
lds
rcr
mov
rol
and
mov
adc
push
js
daa
mov
jmp
and
jno
sbb
retf
fs
ds
ret
mov
cmc
adc
nop
push
push
cmp
adc
add
mov
adc
es
lds
xlat
xchg
adc
loope
loope
retf
repnz
cmp
cmp
sbb
jecxz
inc
test
mov
loopne
idiv
pop
xchg
(bad)
push
stos
popa
repnz
shr
jle
add
and
sbb
loopne
or
push
jo
lods
(bad)
pop
fcom
mov
(bad)
sbb
push
(bad)
sub
adc
shl
(bad)
retf
aaa
repz
dec
cli
cmp
xchg
lods
xchg
cmp
push
mov
imul
popa
push
sahf
and
xchg
data16
fld
lock
mov
dec
dec
jl
mov
sub
sub
pop
loop
push
stos
mov
mov
jne
cmp
into
mov
div
mov
pushf
cmp
hlt
icebp
add
pop
mov
cmp
repz
pop
jno
xor
sub
jb
inc
mov
mov
cli
paddd
daa
popf
fistp
aam
adc
stc
pop
xchg
dec
clc
pop
xor
not
shl
dec
(bad)
sub
fldz
sbb
mov
movs
es
jbe
fwait
pop
arpl
std
push
sub
mov
mov
cmp
sbb
fistp
dec
mov
and
push
mov
std
inc
cdq
adc
pushf
mov
adc
lods
sub
iret
in
lock
mov
mov
cld
mov
mov
or
out
push
dec
inc
retf
add
call
adc
jle
mov
test
stos
retf
inc
push
ins
popf
jg
fst
cld
test
arpl
xchg
ins
int3
(bad)
mov
mov
and
push
sub
scas
or
das
xchg
xchg
fadd
fist
push
or
cmp
rcl
sub
iret
ja
ja
push
mov
mov
sub
fsubr
aam
sub
and
aam
ficom
pop
push
push
or
inc
xchg
and
imul
jp
sub
icebp
mov
ret
jne
pop
jecxz
mov
ins
repnz
cmp
ret
mov
jl
xchg
cpuid
xor
jg
mov
mov
cmp
mov
xor
sbb
cmp
push
inc
adc
xlat
inc
pushf
cmp
out
sbb
dec
fucomi
lahf
inc
pop
rcr
mov
mov
or
rcr
sti
pop
retf
cli
add
adc
add
or
popa
aam
push
pop
pop
mov
in
cmc
gs
mov
sbb
ret
adc
mov
stc
mov
xor
mov
xlat
mov
push
or
jge
inc
arpl
pop
mov
in
test
cli
push
popaw
inc
lock
add
mov
xor
nop
dec
cmp
push
movs
(bad)
ss
std
test
jne
mov
retf
jne
ja
push
or
out
out
cmp
shr
xchg
or
pop
outs
dec
jnp
cwde
jns
adc
mov
push
popf
cmp
pushf
mov
pop
push
cmp
xor
push
cdq
(bad)
or
push
aam
outs
cwde
ja
gs
push
dec
mov
add
sbb
ja
adc
or
lods
shl
or
and
cmc
stos
enter
ins
aam
daa
push
push
cmp
inc
hlt
call
call
xchg
int3
fcmovnbe
and
fcomi
xchg
out
(bad)
mov
in
mov
jge
jle
sar
in
push
xchg
jbe
mov
jae
mov
rcr
lods
xchg
je
sub
xor
cwde
fisttp
sbb
or
sbb
lea
xchg
sahf
add
mov
in
sbb
into
mov
xor
add
shl
jne
mov
push
sub
sar
fldcw
fild
cdq
and
sub
enter
das
adc
push
clc
stos
loope
fwait
(bad)
loope
(bad)
jecxz
push
inc
mov
mov
pushf
inc
dec
hlt
iret
paddsb
mov
pop
mov
lock
or
je
fs
cmp
mov
and
lods
(bad)
adc
(bad)
dec
idiv
and
push
lahf
jg
dec
clc
icebp
call
add
dec
ret
movs
cmp
out
sub
pop
rcr
sahf
pop
lea
fs
stc
retf
mov
inc
xchg
mov
dec
jo
sbb
jnp
call
out
test
adc
dec
cs
or
sahf
sub
les
test
fwait
cmp
and
sub
xor
mov
add
cld
pop
pop
jne
dec
xor
sbb
aad
mov
sbb
mov
arpl
and
sar
dec
add
mov
add
(bad)
sar
xchg
int
(bad)
xor
inc
push
pop
xor
jnp
mov
jl
cmp
adc
sti
addr16
jle
ret
loope
jmp
inc
xor
xchg
nop
je
and
jns
sub
add
jne
stc
jae
inc
repz
std
lea
sub
push
mov
out
push
addr16
jno
aas
not
and
in
add
jg
aas
inc
sahf
cmp
cwde
es
and
mov
jbe
or
jp
call
outs
sub
mov
xchg
stos
mov
jmp
test
fwait
mov
jno
enter
fimul
pop
aas
sbb
shl
aas
jns
fcomp
dec
js
push
outs
cmp
mov
(bad)
push
pop
xor
mov
mov
dec
mov
sbb
push
loope
int3
sub
add
je
out
xchg
xchg
jne
(bad)
xchg
mov
sub
and
pusha
ss
and
cwde
xchg
xchg
add
mov
inc
sub
add
test
add
xchg
mov
outs
push
out
retf
mov
imul
xor
inc
sub
mov
pop
dec
jl
pop
popf
dec
ficomp
lods
popf
mov
pop
sbb
sub
rcl
in
mov
retf
aad
cwde
hlt
lea
fadd
(bad)
iret
mov
(bad)
sub
inc
fbld
dec
stc
push
mov
movs
mov
retf
sahf
xchg
cmp
or
jp
jnp
fwait
or
mov
in
mov
adc
scas
push
cmp
lods
and
cmc
adc
xor
jae
cmp
pop
ret
cmp
push
movs
pop
(bad)
outs
mov
imul
mov
test
mov
inc
js
add
loop
dec
clc
add
pop
and
test
outs
jle
add
iret
popf
shl
call
loop
sbb
mov
push
cmp
mov
sbb
pop
pop
fmul
dec
fbld
or
mov
push
xor
sub
hlt
fwait
shl
push
push
sbb
add
lock
jae
dec
xchg
je
push
sbb
sbb
inc
mov
xchg
mov
cld
ins
or
shl
push
mov
js
jae
inc
je
xchg
jae
xchg
or
scas
mov
(bad)
xchg
sbb
stc
jecxz
push
mov
sbb
dec
shl
and
mov
jbe
mov
popa
xchg
in
mov
push
or
mov
cdq
sbb
(bad)
cwde
(bad)
add
jo
adc
add
or
cli
mov
xchg
in
dec
in
nop
sbb
arpl
cmp
gs
pop
call
dec
ret
(bad)
cmp
lds
pop
loop
mov
(bad)
sub
outs
sub
out
pop
cdq
sub
out
pusha
cli
mov
and
xchg
cdq
pop
and
mov
imul
adc
xor
in
mov
xor
jp
frstor
jns
sbb
mov
jg
into
adc
xchg
adc
inc
fld
push
sub
inc
xor
repnz
js
pusha
imul
cmp
jp
jne
push
cmp
push
add
or
stos
adc
push
(bad)
call
cmps
jae
leave
adc
loop
cmp
scas
mov
mov
xor
pop
mov
int
mov
fcmovu
pop
out
or
fiadd
and
xchg
rol
sub
mov
ss
icebp
lahf
das
jns
jno
aaa
aas
cmps
cmp
(bad)
sti
scas
push
retf
icebp
mov
(bad)
jno
pop
lods
push
std
jo
cmp
and
xchg
shl
iret
and
cmp
or
pushf
cs
mov
sbb
bound
loop
retf
dec
fist
cmp
mul
clc
xchg
mov
dec
sahf
add
adc
xchg
push
and
add
fist
sbb
ins
or
addps
sbb
dec
sub
pop
mov
jp
fcmovnb
and
mov
cmp
mov
sbb
sub
les
push
cmp
das
jae
push
mov
xchg
retf
xchg
(bad)
mov
test
xor
jg
mov
sub
sub
daa
(bad)
jbe
out
stos
test
push
fdivr
mov
dec
xor
and
pusha
lock
dec
cmp
adc
lea
fmulp
xor
pop
add
inc
dec
cwde
aam
jg
ja
mov
push
jb
js
fwait
lods
loopne
loopne
lods
iret
mov
or
sub
aas
das
jae
push
movs
xchg
cmp
test
mov
dec
cmp
(bad)
adc
push
xor
(bad)
daa
and
adc
xor
sub
(bad)
pop
sbb
mov
out
test
mov
mov
data16
and
mov
into
test
xchg
sub
iret
inc
test
dec
push
addr16
push
sahf
mov
dec
mov
mov
adc
inc
jo
jae
mov
jno
mov
retf
xchg
fs
(bad)
sbb
adc
(bad)
fstp
fucomp
test
push
xor
pop
mov
push
cmp
cld
sub
adc
addr16
push
mov
push
xor
arpl
aaa
xchg
mov
xor
aaa
mov
push
dec
ss
push
out
xchg
dec
fcomp
mov
push
test
inc
fimul
ret
arpl
mov
mov
sub
add
mov
pop
inc
dec
je
sbb
cmps
xchg
mov
ds
xchg
or
or
cmp
sbb
xor
sbb
add
pslld
xchg
imul
out
cmc
cmp
mov
jne
daa
dec
cmp
in
jnp
test
neg
cmc
jge
sahf
pop
mov
lods
ror
or
push
sub
add
sar
ins
adc
push
jne
push
aas
adc
and
xchg
cdq
xor
push
pop
es
int
jl
dec
es
fsub
or
lahf
mov
dec
and
sti
(bad)
rcl
jno
pop
movs
sahf
pop
xchg
fild
in
(bad)
out
mov
add
jno
push
xor
and
jno
cmp
mov
xor
loope
aas
sbb
dec
mov
mov
dec
push
sub
and
or
loop
push
out
repz
or
scas
into
sub
adc
test
ins
push
sahf
outs
jbe
ret
xchg
cmp
cli
gs
push
add
push
pop
lea
test
out
inc
sbb
icebp
popf
out
cmps
cmp
adc
add
repz
jnp
sti
mov
aaa
dec
jecxz
fs
push
mov
into
mov
das
adc
jp
xchg
pop
hlt
std
add
push
xlat
fcom
out
sub
add
bound
addr16
scas
icebp
mov
xor
inc
add
and
(bad)
int3
xchg
and
fs
xor
jmp
xchg
mov
fnsave
jge
ret
cmp
shr
cpuid
rol
mov
cld
(bad)
icebp
lods
mov
xor
ja
and
mov
out
jns
nop
(bad)
lahf
imul
xor
(bad)
cmp
push
js
add
cmc
cmp
bound
fst
cmp
sub
aad
cmp
inc
ds
in
mov
stos
dec
(bad)
mov
movs
cdq
xchg
dec
sub
or
adc
stos
xchg
fsub
mov
xor
or
adc
out
and
jle
cmc
repnz
inc
pop
xchg
mov
ins
pop
mov
xchg
test
fwait
sub
push
mov
mov
movs
or
out
adc
loop
xor
out
cmp
mov
push
xor
fisttp
out
ins
in
mov
push
dec
hlt
dec
mov
dec
fld
jl
dec
xchg
arpl
in
mov
in
mov
sahf
mov
shr
adc
rol
adc
sub
dec
sub
scas
dec
inc
icebp
(bad)
dec
xor
pusha
lods
daa
imul
sti
shl
sub
(bad)
xor
aam
mov
inc
mov
mov
ins
add
leave
lock
sbb
aad
aas
jmp
test
(bad)
repnz
and
jbe
jl
sub
mov
pop
dec
inc
mov
xor
movs
cmp
push
sub
sub
add
dec
jb
jne
mov
ins
dec
inc
add
xor
xchg
inc
adc
push
push
scas
shr
mov
mov
inc
ret
aam
iret
push
add
pop
scas
sbb
jge
pop
dec
leave
xchg
out
mov
lods
lods
cmp
jb
sar
fld
mov
pop
lods
mov
dec
in
ins
aam
xor
test
(bad)
pop
pop
leave
test
call
sahf
jecxz
ret
pop
sbb
push
ins
push
in
push
mov
push
push
inc
or
xor
pop
ror
popf
xor
sub
pop
pusha
xor
shr
push
icebp
imul
ins
xchg
cli
or
call
(bad)
jb
inc
in
adc
out
lods
stc
pop
cmp
mov
outs
cdq
cli
ffree
pop
je
leave
cmps
add
push
loope
retf
into
mul
cmp
mov
rcr
and
cmp
push
scas
bsr
or
xchg
or
imul
sub
aam
jmp
adc
lea
scas
sbb
rcr
scas
cmps
jae
inc
lahf
pop
fst
add
cmps
push
or
fucomi
mov
mov
ret
(bad)
jmp
sar
pop
mov
je
jecxz
mov
sbb
jmp
adc
and
inc
aad
dec
push
mov
call
int3
pop
not
add
sub
(bad)
shl
mov
cmps
cmp
sub
cmp
retf
sub
test
sub
sbb
mov
adc
mov
leave
stc
mov
add
fs
outs
fnstsw
je
stc
jbe
mov
xchg
jo
ret
push
ret
lods
cdq
fbstp
mov
fst
and
loope
es
adc
fnstcw
or
dec
mov
fstp
loope
push
test
cmp
stc
pusha
push
inc
jge
cmp
adc
je
imul
jne
pusha
addr16
mov
jae
pop
aad
aaa
push
std
mov
sub
int
add
mov
pusha
push
cmp
push
add
aad
jg
in
mov
das
hlt
sbb
addr16
pop
mov
icebp
dec
sub
fstp
into
ret
sahf
in
fmul
cdq
mov
(bad)
mov
ds
lds
jle
mov
js
jno
push
dec
daa
mov
rcr
lods
and
xor
(bad)
in
sbb
retf
dec
xchg
movs
ins
cdq
push
lea
(bad)
lds
jo
pop
fadd
in
sbb
cdq
xor
or
xchg
std
int
cmp
mov
(bad)
les
fmul
xchg
mov
imul
jg
aad
retf
dec
inc
mov
push
scas
xor
dec
push
xchg
or
in
jl
jne
js
call
sub
loope
xor
jp
leave
ins
fisttp
les
popf
lea
mov
jbe
inc
add
sub
mov
sub
pop
test
push
jne
sub
pop
hlt
rol
xchg
pop
outs
sub
scas
add
or
test
test
das
out
jge
jp
ret
lea
and
pop
fld
lea
push
mov
outs
movs
push
es
cwde
outs
rol
pop
sub
dec
push
xlat
cwde
(bad)
in
loop
jmp
aam
mov
(bad)
mov
imul
mov
pop
adc
clc
dec
and
dec
inc
aam
cmp
shl
pop
stos
ror
or
mov
clc
cmp
(bad)
jb
mov
add
fstp
jg
add
inc
loopne
and
(bad)
imul
add
in
cmp
fcmovb
push
inc
adc
jl
pop
mov
cmovne
jo
adc
sub
aaa
sub
push
inc
adc
lods
inc
cli
retf
push
pusha
pop
test
and
hlt
jno
mov
cmp
xchg
jg
xlat
test
mov
xchg
bound
or
mov
cmp
dec
cli
mov
xor
fisub
pop
bound
push
sbb
jecxz
dec
pusha
sahf
pop
mov
inc
mov
jo
xchg
xchg
hlt
rcr
inc
dec
sar
cmp
aas
add
xchg
xchg
mov
xor
cli
sbb
rol
nop
mov
sbb
mov
sbb
cld
inc
inc
outs
mov
mov
or
pop
push
jmp
loope
mov
std
stos
mov
ret
pop
mov
int3
inc
lods
jge
arpl
inc
(bad)
push
xor
push
fdivr
add
pop
ss
imul
pop
mul
xchg
pop
or
add
inc
fadd
mov
dec
fnstsw
add
aad
jmp
add
jbe
cmps
cs
fidiv
sub
xchg
pop
cmc
xlat
std
jl
lahf
into
clts
dec
aam
and
push
adc
cli
lahf
in
dec
(bad)
enter
jo
mov
loopne
mov
dec
inc
push
in
xor
add
mov
sbb
das
out
add
and
mov
pop
fld
sbb
add
fstp
xchg
push
jb
jmp
dec
and
int
jmp
push
lahf
or
jmp
pop
push
add
loopne
inc
imul
sbb
and
fbld
jne
xchg
aas
movs
push
sub
cmc
sub
pop
xchg
jnp
inc
retf
or
shl
fisttp
ins
xor
sbb
cmps
in
ja
cmp
mov
xchg
add
xor
push
and
jno
iret
shr
add
mov
or
js
mov
cwde
jae
test
pop
js
jne
into
pop
(bad)
(bad)
hlt
adc
pop
ret
sub
adc
mov
addr16
out
push
sbb
sbb
inc
pop
pop
ins
cmp
cmp
cmp
push
arpl
imul
(bad)
mov
cld
inc
arpl
imul
xchg
sbb
dec
mov
shl
cli
ins
ins
pop
(bad)
pop
lods
sub
(bad)
jb
loope
retf
push
mov
xchg
adc
adc
lods
daa
push
cdq
push
xor
inc
mov
xor
(bad)
ins
hlt
and
jp
sub
push
cmp
jno
in
sub
fcmovbe
gs
ins
fs
cmps
xor
and
aaa
aas
jge
std
sbb
hlt
mov
and
fs
pop
pop
and
test
xchg
adc
cld
xor
xchg
pop
clc
sar
cmp
or
jg
pop
call
ins
xor
xchg
mov
daa
das
or
repz
mov
dec
mov
mov
rol
test
ret
dec
imul
iret
cmc
mov
inc
mov
mov
inc
das
mov
je
mov
shl
shl
loopne
or
cmps
scas
push
outs
and
adc
bound
hlt
cli
fucom
xchg
xchg
and
jno
pop
pusha
or
pop
adc
dec
cdq
fisttp
fimul
push
jp
mov
mov
in
lock
mov
sbb
sub
adc
mov
in
xor
fwait
test
pushf
sbb
stc
push
in
arpl
mov
or
repnz
test
sbb
sti
adc
stos
mov
add
xor
xor
cmp
inc
lahf
popa
inc
(bad)
pop
enter
enter
cld
hlt
in
sar
inc
repz
jbe
push
inc
(bad)
fdiv
sub
pop
push
mov
fisub
int3
(bad)
mov
lds
(bad)
imul
out
movs
sbb
or
push
jb
in
je
loope
jno
les
sbb
popa
mov
ret
xchg
or
cdq
int
pop
push
jmp
sub
popf
mov
cwde
adc
push
jg
pop
xchg
push
in
mov
retf
mov
in
pop
(bad)
jp
ds
ins
mov
scas
and
enter
pop
cmp
lods
dec
icebp
sub
xchg
fcomp
in
fcomp
(bad)
retf
or
int
shl
xor
(bad)
popa
es
das
mov
add
ss
sbb
pushf
ins
sbb
icebp
in
push
mov
jae
mov
inc
mov
stos
cmp
scas
mov
cwde
mov
mov
loop
and
push
mov
pop
enter
jne
rcr
(bad)
in
xchg
in
repnz
repnz
scas
mov
xor
aaa
das
cmp
int3
lock
adc
and
sub
adc
jne
or
xchg
xor
lods
aam
push
dec
scas
sbb
adc
in
repz
sbb
sbb
stos
pop
push
mov
xchg
lock
mov
pop
je
jmp
push
pusha
add
inc
sbb
les
pushf
mov
push
pop
lahf
aam
pop
mov
stos
bound
mov
xchg
sub
mov
jb
in
adc
pop
or
xchg
xor
jge
cmps
fsubr
mov
mov
cli
mov
retf
xor
sub
add
push
sub
popf
xor
inc
retf
xchg
dec
mov
test
imul
push
cmp
push
(bad)
pop
jnp
ds
mov
mov
push
je
xor
or
xchg
mov
jno
pop
iret
cld
sub
sbb
nop
outs
xchg
push
(bad)
mov
xchg
not
mov
jmp
out
dec
(bad)
sbb
push
lahf
push
pusha
pop
imul
test
(bad)
push
adc
js
in
pop
mov
mov
xchg
imul
jb
ss
cmps
lock
or
xchg
inc
in
mov
aaa
add
pop
push
adc
out
mov
jb
daa
pop
mov
xor
push
xchg
push
push
addr16
pop
push
xchg
mov
inc
mov
(bad)
sbb
cmps
sar
add
inc
std
gs
imul
cdq
and
inc
stc
in
lea
daa
pop
and
and
or
fadd
sub
dec
test
mov
jg
dec
or
cmp
push
(bad)
mov
ins
xchg
clc
and
in
cmp
sbb
mov
mov
ret
rcl
add
mov
and
scas
cmp
sub
sub
jge
in
mov
loopne
or
int
add
fcom
cli
push
js
ret
stc
mov
arpl
cli
xchg
add
and
mov
add
stos
retf
out
stos
inc
sti
add
jns
jle
cmp
dec
push
add
pusha
xor
repnz
push
iret
jbe
and
arpl
dec
cmp
xchg
int
dec
shr
xor
sbb
xor
pushf
sbb
popf
adc
enter
push
loop
mov
and
xchg
cmp
and
cmp
xor
out
aaa
nop
imul
sbb
(bad)
or
std
or
je
or
mov
sub
in
xchg
gs
or
(bad)
and
iretw
fcom
mov
loope
test
iret
test
xchg
sti
test
das
scas
or
shr
call
pop
stc
cwde
pusha
icebp
cmp
clc
int
dec
popf
add
imul
xchg
xor
pop
jg
mov
lea
inc
sahf
mov
push
push
pop
or
sub
icebp
idiv
sub
ds
loop
into
cmp
in
fcom
jecxz
push
pop
inc
cmps
dec
stc
loopne
inc
sbb
ror
sbb
push
pop
pop
bound
jmp
loop
dec
sub
push
dec
retf
lock
scas
popf
test
mov
movs
sbb
jne
mov
(bad)
fwait
mov
mov
cmp
ror
call
das
out
stos
fnstenv
mov
xlat
pushf
ja
es
sub
sub
dec
inc
pop
mov
mov
scas
imul
lods
mov
retf
popf
mov
inc
jl
fadd
add
pushf
(bad)
pop
sbb
int3
ins
(bad)
shl
icebp
ret
mov
test
repz
cmp
dec
add
daa
and
scas
cmp
inc
iret
retf
ret
cdq
clc
cmp
stc
adc
jo
cmp
mov
cs
pop
jp
(bad)
fsubrp
add
xchg
gs
push
xchg
cmps
test
bound
push
cmp
sub
dec
adc
cdq
into
dec
mov
arpl
popa
jnp
xchg
bound
call
jge
jne
and
je
or
xchg
mov
lods
cmp
(bad)
call
div
cmps
out
inc
test
std
enter
gs
retf
sbb
syscall
jge
dec
jbe
inc
sbb
jne
sub
jno
lds
pushf
mov
mov
mov
cmp
(bad)
data16
xlat
(bad)
cmp
fidiv
xchg
in
pop
cdq
mov
lahf
iret
xor
sub
xor
test
lahf
mov
nop
lods
fcomp
mov
fstp
cmps
jp
scas
icebp
or
xor
mov
and
and
inc
cdq
xor
xor
(bad)
movs
fs
jno
aas
push
cdq
sbb
xchg
xor
push
fstp
adc
imul
cmp
sar
les
or
sub
and
nop
cmp
jno
jb
mov
adc
pop
mov
sbb
jg
sub
cmp
icebp
push
pop
jnp
sbb
(bad)
xor
jecxz
out
clc
das
or
xor
or
sub
sbb
addr16
pushf
sti
pop
les
mov
xor
daa
inc
cmc
test
mov
adc
imul
outs
std
mov
pusha
inc
loopne
test
lods
imul
jo
pusha
fisub
inc
mov
mov
push
inc
clc
mov
std
popf
sbb
mov
in
outs
and
fs
loopne
mov
rol
add
fwait
push
push
push
scas
in
das
adc
outs
mov
jns
mov
push
lea
ffree
(bad)
call
rcl
aas
adc
mov
retf
not
mov
gs
lods
lock
test
add
xchg
retf
ret
push
scas
add
xlat
add
jnp
loope
push
or
push
pop
cmc
stos
inc
push
or
mov
mov
inc
ret
movs
sub
pop
popf
jbe
push
not
xor
int3
and
pop
fistp
iret
pop
or
mov
and
and
or
mov
daa
mov
hlt
adc
adc
cdq
dec
lods
mov
out
mov
popa
xor
int3
adc
inc
and
pop
in
fdivr
add
push
(bad)
aad
test
les
sar
mov
mov
repnz
out
mov
fsub
(bad)
outs
dec
cmps
in
fimul
fucom
cli
call
cli
test
fs
rol
xchg
mov
test
ficomp
imul
test
data16
jp
push
push
cmp
sub
push
aaa
push
nop
(bad)
test
mov
rcl
repnz
push
mov
ja
sub
clc
stos
fiadd
xchg
mov
jae
mov
in
in
jp
mov
dec
not
daa
sbb
mov
jno
das
rcr
and
cld
inc
or
or
js
mov
push
jns
pop
inc
xchg
mov
icebp
jg
add
int
inc
jp
ret
pop
mov
popa
inc
jmp
push
shl
and
das
je
call
shl
cdq
stos
hlt
lods
jbe
add
loop
pop
cs
(bad)
stc
xchg
enter
inc
inc
inc
pushf
jp
cmp
jo
dec
sar
loope
sbb
mov
mov
sbb
cmps
adc
pop
nop
(bad)
pop
mov
fsincos
cmp
jecxz
push
loopne
push
push
inc
js
stc
les
adc
stos
cmps
xor
mov
mov
fld
add
ja
into
mov
mov
idiv
fmul
stos
xor
data16
repz
sbb
js
cs
ss
mov
push
aam
mov
jne
mov
inc
loope
ins
mov
xlat
and
jg
sub
lods
aaa
push
mov
and
mov
sub
test
sub
loop
mov
mov
ror
(bad)
cmp
cs
nop
or
lods
(bad)
std
sbb
and
leave
in
sub
out
xchg
xor
mov
fdiv
inc
icebp
int
sub
loope
or
shr
rcl
or
dec
int3
(bad)
loopne
in
sub
into
sbb
add
ror
fimul
(bad)
out
xor
pop
sub
jmp
mov
dec
sahf
lods
xor
out
mov
scas
pop
xchg
mov
sbb
jns
cmps
fild
(bad)
xor
cmp
mov
pop
mov
push
or
(bad)
and
icebp
inc
xchg
sub
fwait
aad
jmp
repnz
push
gs
das
outs
cmp
(bad)
xchg
adc
in
aas
jbe
ja
loopne
repnz
cmp
mov
ja
sub
mov
loop
inc
stc
xchg
xchg
or
(bad)
mov
and
or
jne
add
fdivr
jmp
test
pusha
stc
lock
or
xor
test
(bad)
pop
and
(bad)
cmp
adc
and
pop
jns
out
ficom
jp
outs
adc
cwde
rcl
adc
(bad)
jae
test
push
sbb
and
jle
inc
popa
adc
dec
popf
ss
fisubr
jmp
cmp
push
out
sub
(bad)
sub
add
(bad)
lock
test
(bad)
sbb
ficomp
iret
sbb
push
and
jno
call
sbb
daa
call
pop
dec
or
push
ss
mov
push
repnz
mov
xchg
pop
dec
(bad)
retf
daa
sbb
cmp
adc
mov
add
fwait
(bad)
out
or
inc
retf
sub
jmp
dec
inc
loop
ds
xchg
call
xchg
daa
jp
pushf
das
mov
mov
add
imul
fidiv
popa
jmp
shl
xor
push
in
inc
or
jbe
lock
sub
lods
out
pop
(bad)
or
pop
cld
xlat
cmp
call
cmps
ins
sahf
ins
xor
inc
lock
test
loop
mov
xchg
fdivr
lea
jge
inc
xchg
scas
aad
push
xor
adc
mov
cmc
dec
or
scas
inc
push
jmp
sbb
push
cmps
xor
mov
sti
dec
(bad)
fild
adc
out
outs
imul
mov
out
mov
scas
xchg
pop
xchg
sbb
jb
xabort
loopne
jmp
push
shr
mov
test
stos
aaa
push
mov
pop
nop
add
xchg
cmp
pop
add
(bad)
jo
jmp
xchg
inc
or
pop
shl
dec
leave
ins
add
add
adc
push
or
sbb
xor
out
jmp
fcomp
fdiv
icebp
jbe
inc
pop
cmps
dec
add
adc
fcom
xor
add
repnz
scas
cld
shl
fwait
sbb
mov
jno
inc
sub
push
sub
outs
dec
(bad)
xor
sub
mov
adc
dec
outs
gs
inc
inc
push
fisttp
scas
rep
pop
jne
ins
(bad)
fisttp
imul
jg
adc
loop
jae
frstpm(287
test
cmp
mov
xor
adc
cmp
mov
sub
dec
jo
mov
(bad)
xor
fld
jp
lea
or
bound
aaa
inc
add
jg
mov
pop
mov
jmp
and
popa
inc
mov
xor
test
jp
pop
sub
mov
aad
fcom
iret
enter
xchg
fidivr
sbb
mov
xchg
jmp
cdq
jecxz
mov
pusha
retfw
lds
cmp
loop
jmp
push
stos
test
mov
push
lods
jmp
inc
mov
dec
idiv
stos
add
(bad)
(bad)
pop
sub
sbb
out
add
ud2
adc
pop
je
gs
sbb
push
jo
daa
and
cmp
push
jno
xchg
cmp
loop
push
mov
jmp
pop
shr
fmul
dec
mov
call
lods
or
mov
cmp
add
cmp
ins
jb
adc
dec
in
pop
aaa
mov
jnp
xchg
pop
leave
adc
sbb
or
call
inc
nop
or
cs
fisttp
push
scas
pop
mov
stos
jle
pop
mov
push
add
sti
mov
xchg
mov
stc
pop
jmp
mov
(bad)
jb
mov
jnp
fmul
sbb
sbb
cmp
pop
or
jns
add
xchg
or
inc
pop
scas
daa
adc
add
sti
dec
sbb
lock
iret
mov
mov
je
jne
ins
mov
mov
push
out
mov
dec
push
push
fcomi
test
stos
add
daa
sbb
rol
jle
cmp
arpl
call
add
mov
inc
in
jmp
cmp
sbb
daa
stc
outs
aaa
mov
adc
es
inc
pop
xchg
stos
pop
mov
or
jmp
out
fistp
scas
and
sahf
cdq
stos
loop
inc
out
mov
dec
stos
das
push
loopne
in
adc
inc
and
jle
pop
inc
xchg
add
imul
test
loope
pop
loop
pop
push
cmp
xor
popf
je
dec
sar
leave
jmp
push
mov
pop
es
or
movs
ss
lods
cmp
leave
leave
in
jne
jle
and
inc
sbb
rol
jb
jp
mov
aam
and
xchg
mov
mov
in
or
pop
loop
pop
dec
mov
lds
call
xchg
shr
mov
nop
jg
pop
test
cmc
mov
add
or
inc
inc
mov
cmp
push
fs
mov
jg
inc
mov
bound
inc
fsub
mov
adc
stc
int
and
retf
sub
cmp
std
das
movs
mov
cmp
cld
push
add
stos
pop
loopne
test
inc
hlt
stc
pusha
fxch
mov
mov
dec
clc
test
or
idiv
sbb
rcl
add
xchg
(bad)
and
jbe
adc
cmp
rol
mov
cmps
adc
loopne
dec
push
stos
pusha
mov
xchg
arpl
cmp
mov
mov
repz
rol
addr16
jbe
movs
mov
adc
sar
scas
rcr
pop
js
cmp
add
enter
dec
or
push
cmp
add
arpl
lods
pop
sbb
fdecstp
add
mov
pop
mov
adc
leave
cmp
imul
out
ja
inc
and
pop
js
sbb
add
retf
push
aaa
pop
lock
xor
inc
std
xchg
dec
ss
daa
mov
pop
retf
nop
mov
xchg
sbb
(bad)
and
xlat
pusha
iret
sbb
lds
call
es
jl
mov
mov
xchg
cmp
pop
jg
bound
fsqrt
fwait
sub
movs
inc
inc
inc
jae
inc
sub
shl
mov
int3
sti
sub
pop
sbb
adc
fs
cld
inc
(bad)
sub
add
push
adc
ins
cmp
shr
add
mov
xchg
push
scas
cli
jg
push
ret
sahf
out
es
repz
cli
mov
xlat
test
neg
xchg
in
xchg
push
in
push
nop
and
inc
loopne
clc
in
mov
lods
cwde
sub
mov
js
loopne
repnz
out
mov
in
mov
mov
xchg
push
mov
dec
cmps
dec
outs
cmc
arpl
push
fdivr
jge
or
in
mov
outs
cmp
dec
or
pxor
xchg
cdq
push
push
shr
add
inc
fsubr
test
icebp
and
mov
mov
jp
cmps
jp
movs
and
add
cmp
sub
push
les
pop
sub
push
adc
not
(bad)
movs
jge
cld
cmp
cmp
daa
xor
add
sti
jo
(bad)
and
pop
xor
or
xlat
into
lea
pop
mov
cmp
sub
and
bound
fdiv
scas
ret
stos
stos
pop
mov
std
aas
(bad)
movs
xor
test
lds
jne
xchg
sub
xchg
test
sbb
dec
cli
sbb
inc
jmp
enter
fbstp
add
xchg
adc
sub
mov
pop
retf
sub
jmp
and
xor
jnp
pop
sub
inc
outs
cld
xchg
fbld
pop
pop
mov
mov
xlat
pop
pop
test
ficomp
cmps
cmps
nop
xlat
retf
mov
add
imul
(bad)
lea
jle
outs
pusha
sub
sbb
pop
ja
add
test
test
cmp
in
jp
mov
jl
mov
std
aaa
imul
aaa
pop
push
mov
sbb
inc
push
int3
sbb
and
and
arpl
std
and
inc
loopne
pop
repz
(bad)
sahf
dec
cdq
mov
inc
pop
xchg
xor
add
adc
or
inc
adc
mov
movs
pop
fdivr
inc
xchg
cmp
mov
sahf
icebp
(bad)
mov
xor
jo
lods
(bad)
mov
mov
cld
push
sbb
mov
push
and
xchg
in
movs
inc
aam
add
cmp
sub
dec
imul
retf
mov
mov
movs
mov
in
movs
push
adc
inc
jmp
adc
push
movs
cli
jmp
aaa
int
rcl
stos
addr16
test
in
and
pusha
clc
add
pop
loopne
sti
mov
pusha
std
push
lods
xchg
ss
cs
jl
jl
cdq
jmp
mov
lds
xor
popa
rcl
les
cmp
jmp
mov
and
inc
mov
pop
hlt
pusha
jne
jae
mov
das
jge
and
mov
jg
in
dec
mov
fisttp
dec
or
(bad)
lahf
shl
mov
loopne
and
jno
imul
sbb
xlat
ret
bound
les
arpl
and
rol
xchg
xor
push
loop
ret
loopne
cmc
jne
adc
test
pusha
cli
adc
and
xor
pop
in
mov
sub
je
outs
stos
fsubr
jmp
retf
in
push
pop
sub
dec
sbb
mov
push
inc
iret
js
test
or
cmps
inc
retf
daa
gs
cmp
rol
in
jle
and
pushf
cmps
push
std
out
adc
out
mov
add
dec
in
mov
cdq
xchg
scas
xchg
mov
mov
xor
mov
leave
fadd
std
mov
xchg
cmp
nop
movs
popf
(bad)
retf
shr
shr
daa
mov
js
fstp
jno
call
mov
xchg
pop
sub
sub
mov
not
jmp
adc
mov
mov
out
cmp
sub
dec
or
push
inc
dec
sub
push
pop
inc
dec
pop
xchg
call
mov
mul
imul
imul
jle
inc
lods
ins
cld
pop
mov
ror
loopne
mov
sbb
stos
shl
adc
out
sbb
(bad)
scas
add
shl
jle
movs
cld
ins
sub
retf
sahf
xchg
add
cmp
jge
push
call
xor
push
dec
aad
scas
fnstcw
push
cld
xchg
inc
dec
aam
inc
adc
icebp
aam
repz
mov
and
sbb
dec
stos
inc
sar
retf
imul
sub
jl
sub
fdivr
mov
sbb
mov
xchg
jmp
inc
jb
adc
inc
jp
or
in
sbb
fs
lods
arpl
sbb
int
jno
dec
cmps
adc
push
(bad)
fist
inc
mov
xor
jg
inc
outs
(bad)
or
push
pop
stos
std
test
xor
cmp
sub
pushf
push
mov
xor
mov
xor
dec
arpl
and
inc
mov
mov
or
jle
test
jnp
xor
cmp
les
repnz
dec
mov
int3
fwait
mov
pop
xchg
sub
jne
retf
jnp
sub
adc
cmp
adc
aad
stc
cmp
fs
push
pop
push
or
data16
push
loope
bound
pop
xchg
or
push
jmp
dec
icebp
not
add
or
jmp
das
push
and
movs
adc
ror
mov
mov
jne
rol
xchg
aaa
scas
push
jnp
fst
jg
mov
inc
cli
dec
mov
fs
imul
mov
les
ja
arpl
sub
mov
adc
outs
stos
mov
pop
pop
aad
fldcw
outs
cmp
add
sub
push
push
in
push
inc
inc
les
xchg
push
ins
ins
outs
cmps
push
shl
stos
pop
mov
not
mov
mov
jg
dec
push
pop
jae
clc
dec
add
and
in
ins
popa
dec
call
lods
das
cmc
sub
add
test
(bad)
(bad)
and
sti
mov
dec
cmp
in
push
std
das
mov
xchg
and
ret
clc
adc
pop
test
pop
ja
sub
or
and
xchg
push
and
jp
test
or
imul
ss
add
inc
and
xor
adc
aad
mov
fsubr
inc
fisubr
jle
or
mov
imul
inc
push
fdiv
(bad)
xchg
and
ins
jl
popa
xchg
sbb
push
sub
imul
idiv
adc
mov
add
and
or
nop
push
xor
sbb
pop
mov
mov
pop
lea
into
push
xchg
jle
and
imul
mov
pusha
push
lock
xchg
add
cdq
lock
sbb
stc
dec
adc
dec
test
jno
clc
test
enter
dec
dec
and
jl
popf
pop
std
xchg
imul
cwde
imul
jo
or
gs
dec
sbb
pop
pop
call
jg
adc
movs
or
outs
icebp
add
push
xor
popa
push
xchg
dec
dec
add
es
push
fild
das
fidivr
dec
ds
pop
sbb
pusha
and
push
test
sbb
mov
rep
jne
add
xchg
sub
sar
add
(bad)
shl
pop
add
clc
dec
test
retf
ret
leave
aad
movs
call
mov
sbb
jp
push
fimul
xor
pop
shl
stos
jbe
icebp
xchg
(bad)
jecxz
sub
or
(bad)
sbb
pushf
xor
sbb
cmp
mov
mov
and
and
aad
je
fwait
adc
or
or
jecxz
push
and
leave
inc
loope
outs
lds
stos
test
jno
shr
inc
sub
dec
mov
adc
pushf
push
dec
inc
mov
push
cwde
scas
fisttp
jmp
retf
aaa
cld
ins
fwait
mov
mov
fs
push
add
mov
fistp
jge
mov
pop
jmp
xchg
fsubr
lods
dec
call
aaa
add
add
adc
cmps
rcr
daa
sub
adc
std
sti
sub
jo
mov
cli
ins
cmpxchg8b
(bad)
iret
and
inc
loopne
test
push
mov
(bad)
sahf
pop
inc
lods
xor
or
push
cmp
push
cmc
rcl
inc
sbb
in
or
pop
jmp
pop
adc
inc
(bad)
adc
sbb
push
mul
(bad)
sbb
pop
icebp
shl
ror
add
sub
test
sti
loope
jle
add
xchg
lahf
jg
(bad)
push
out
dec
mov
pop
lods
cmps
retf
mov
add
bound
lods
add
std
fcom
mov
aad
mov
ja
xor
clc
fmul
or
sti
fild
out
popa
out
ins
mov
mov
xor
fadd
sahf
repz
arpl
or
sub
(bad)
popf
movs
inc
add
mov
push
int
inc
dec
adc
scas
gs
push
loopne
cmp
xchg
push
xor
lods
adc
mov
cmp
mov
mov
pusha
mov
int
jle
ret
push
out
add
icebp
sbb
dec
cmp
in
fsubr
in
fcmovne
enter
inc
xchg
or
scas
popf
(bad)
aad
sub
mov
cmp
cmps
dec
stc
mov
retf
push
adc
dec
fwait
movs
ror
push
push
mov
shl
inc
sub
adc
ret
pop
ins
xchg
add
mov
inc
sub
xchg
rcr
cld
and
push
outs
mov
cmp
sbb
out
add
xchg
mov
mov
mov
cmp
js
xor
inc
pop
aam
or
and
dec
(bad)
(bad)
cs
mov
mov
(bad)
mov
or
dec
(bad)
clc
icebp
mov
mov
dec
mov
jmp
push
data16
mov
adc
cmc
ficomp
or
stc
not
ins
adc
dec
out
popf
arpl
xor
fs
mov
dec
addr16
in
mov
nop
add
jo
cmps
es
sub
push
adc
ret
lds
adc
mov
xchg
sub
je
xor
xchg
xor
es
sar
add
mov
retf
sbb
jmp
inc
mov
mov
cmc
cmp
call
stc
call
adc
stos
push
or
cmp
mov
les
int
daa
hlt
mov
loop
dec
es
sub
xchg
or
xor
and
(bad)
jbe
inc
lock
mov
jb
sub
cmc
sti
xchg
stos
mov
mov
sub
popf
xor
jmp
pop
sub
in
add
lods
push
jae
cmc
sahf
(bad)
push
push
pop
int3
sub
mov
fisttp
shl
cmp
and
retf
inc
sub
inc
les
add
add
mov
jne
pop
leave
test
in
pop
inc
and
and
cmp
push
pop
xor
adc
sbb
jno
adc
xor
repnz
inc
mov
and
nop
mov
xchg
adc
test
add
or
in
jae
popa
das
sub
(bad)
push
mov
int
ins
xor
push
mul
aaa
jbe
gs
test
mov
stos
xchg
xchg
sar
fwait
popf
mov
das
sbb
xchg
cmc
xchg
push
lods
xor
pop
lods
push
popf
mov
jmp
jbe
call
mov
mov
mov
test
jle
rcl
or
inc
xlat
jbe
mov
call
aad
lock
xchg
int
mov
daa
add
xchg
jnp
push
js
aad
xor
dec
gs
or
out
add
js
pop
adc
aam
jge
nop
in
les
and
mov
dec
sub
(bad)
or
ins
lods
dec
frstor
pop
rcl
inc
pop
push
into
jae
mov
and
cwde
in
mov
cmp
int
mov
or
shl
and
dec
scas
cmp
dec
out
daa
int
lods
push
(bad)
mov
pop
mov
mov
(bad)
dec
dec
aad
mov
jmp
test
sti
movs
sub
and
cmps
retf
mov
mul
sub
es
cwde
and
mov
xchg
xchg
pop
mov
lds
jg
dec
inc
aas
aad
adc
mov
pop
xchg
outs
push
xor
into
xchg
mov
dec
xor
mov
mov
adc
(bad)
ins
cmp
inc
push
push
dec
cmp
cmps
jl
jbe
rcr
jo
mov
inc
xchg
daa
arpl
xor
aam
mov
out
and
mov
sub
rol
jle
inc
add
jo
add
jge
into
mov
and
dec
jmp
lods
(bad)
jg
dec
std
loop
in
fmulp
add
loope
mov
mov
push
cmps
push
xchg
push
jle
test
pop
push
sbb
fsubr
cmps
adc
fisub
lods
add
push
lea
push
xor
mov
repz
js
pop
inc
outs
push
jecxz
xor
mov
jne
je
mov
mov
test
push
mov
aam
sub
pop
push
and
ret
and
push
test
sub
xchg
xor
pop
enter
imul
sub
mov
mov
addr16
(bad)
pop
cwde
cmps
cs
cdq
sub
push
aam
pop
stos
test
fistp
sti
pop
and
xchg
inc
imul
mov
inc
les
addr16
sbb
retf
adc
mov
bound
rcl
add
stos
std
fldcw
loop
pop
es
lds
fcom
or
mov
xchg
adc
ret
adc
mov
inc
test
jecxz
into
hlt
push
push
jecxz
push
call
js
sbb
int3
inc
fld
jp
aad
fistp
xchg
and
mov
fdiv
movs
(bad)
jmp
outs
xchg
cmps
cld
jno
xor
test
xchg
or
shl
mov
sbb
outs
hlt
repz
pop
inc
into
lds
ja
cmp
mov
push
xchg
icebp
xchg
scas
ret
sub
out
test
lar
iret
xchg
call
aam
pop
sub
fucomp
cmc
mov
xchg
in
dec
sbb
sbb
into
mov
outs
cmps
sbb
ret
movs
pop
xlat
aaa
loope
pop
aas
push
add
push
push
push
(bad)
in
iret
ja
and
aam
gs
pop
test
(bad)
cli
jnp
inc
fs
pop
xor
daa
or
mov
sbb
cld
xchg
jecxz
xchg
and
stos
stc
in
xor
xchg
or
sub
mov
xchg
pop
dec
neg
aas
jp
rcr
cmp
out
or
mov
lods
aad
mov
and
jmp
shl
pushf
sub
(bad)
push
pop
retf
ins
cs
add
inc
fidivr
mov
aam
mov
xchg
sub
xchg
(bad)
retf
jne
cmps
cli
pop
cld
std
mov
fcomp
out
ror
add
mov
pop
dec
movs
jne
add
sahf
push
or
movs
xchg
scas
sti
shr
xchg
and
add
in
sbb
cld
xchg
mov
sbb
out
push
dec
sub
inc
push
stos
popf
adc
cmc
aad
inc
repz
dec
sti
and
adc
cmp
sbb
out
aaa
(bad)
and
inc
fisub
ins
xor
(bad)
inc
pop
lods
push
(bad)
aaa
xchg
ror
aad
add
mov
sbb
or
push
push
mov
xchg
jmp
push
mov
sbb
mov
movs
or
and
ret
pop
addr16
jl
lods
stc
jecxz
mov
sbb
xor
inc
pusha
popa
sub
push
das
fidiv
ss
jp
pushw
rcr
call
(bad)
cmps
sub
cmps
mov
add
aaa
test
movs
in
(bad)
and
push
xor
movs
pop
mov
add
pop
cmc
cmp
jg
push
mov
pop
mov
imul
fldenv
mov
xor
call
xchg
cmp
not
mov
xor
dec
or
scas
test
(bad)
fwait
movs
sbb
cwde
add
and
cmp
es
(bad)
mov
or
sub
mov
(bad)
in
retf
pop
mov
cmp
repz
cs
arpl
mov
pop
scas
cmp
push
movs
adc
cli
mov
inc
aaa
in
sub
push
mov
test
ret
and
dec
jb
and
pop
test
dec
mov
jb
(bad)
out
fldenv
leave
popa
out
in
dec
add
sti
(bad)
call
popf
clc
jns
mov
xchg
fcom
and
xor
jo
dec
inc
push
cmp
inc
cmp
popf
retf
sub
int3
fcomp
jl
dec
sbb
ins
xchg
loopne
jmp
ins
cdq
push
sahf
mov
aad
mov
xchg
pop
add
jge
jno
rcr
das
jp
out
sbb
ror
lds
mov
movs
mov
cs
pop
ss
les
cli
idiv
cmc
into
mov
outs
add
pop
adc
sbb
(bad)
arpl
jbe
pushf
nop
test
arpl
mov
inc
scas
mov
cmp
inc
xor
xchg
fdiv
pop
adc
in
mov
or
call
xchg
dec
ds
mov
cld
sahf
(bad)
pop
das
xor
sahf
fisubr
es
movs
cmp
push
test
(bad)
jbe
pusha
xchg
fisttp
out
xchg
or
sub
js
ficomp
jle
jne
mov
int
jecxz
adc
mov
xor
push
(bad)
shl
push
mov
fwait
mov
xchg
sbb
arpl
cdq
jge
jmp
mov
jbe
add
mov
repnz
xchg
aad
sub
int
mov
jb
out
pop
cmc
mov
mov
jbe
push
lods
push
pop
sbb
sbb
call
inc
push
int3
push
jns
pop
push
adc
and
(bad)
les
sub
dec
into
ret
aaa
pop
xchg
fsub
mov
mov
hlt
cs
fs
rol
pop
aaa
sub
or
jnp
and
test
cmp
test
movs
push
inc
jecxz
ret
mov
in
cmp
sub
xchg
inc
sbb
mov
stc
aad
fcomip
div
inc
sti
push
ret
mov
or
cmp
cmc
or
inc
ss
xor
add
sbb
mov
and
mov
fidivr
xor
cmp
mov
xchg
ja
jmp
inc
xor
fiadd
icebp
dec
cmps
ret
mov
inc
push
inc
adc
add
add
sbb
cmc
pop
xchg
retf
xchg
dec
pop
or
icebp
loope
test
iret
sbb
mov
mov
stc
rcr
jge
fs
or
fadd
enter
inc
mov
rcr
scas
not
mov
jmp
xchg
mov
adc
hlt
add
cmp
pop
rcl
pop
pop
enter
inc
(bad)
(bad)
jmp
jmp
lahf
mov
inc
mov
int
pop
aaa
movs
imul
adc
pop
iret
cmps
xor
xchg
gs
sbb
fistp
stc
pop
sub
push
fdiv
xchg
aam
cmp
sbb
mov
adc
les
repnz
imul
stos
xor
in
clc
pop
fxam
into
out
enter
loope
iret
inc
dec
sub
bound
jns
cmp
pop
cmp
mov
sbb
ins
jbe
mov
movs
int3
mov
shl
aas
add
out
sbb
push
jbe
test
xchg
mov
stos
ja
pop
sti
cmp
clts
(bad)
push
xor
ret
fstp
loop
pop
iret
sub
and
jnp
aas
cdq
push
cmp
sti
das
mov
int
push
xor
into
bound
adc
pushf
fnsetpm(287
ret
pop
in
rcl
repnz
icebp
fisttp
sahf
pop
int
and
cdq
jae
sbb
xchg
sbb
jg
ins
shl
sub
clc
xchg
pop
mov
div
ins
sbb
adc
xor
xchg
das
out
imul
pushf
jge
xchg
jo
xchg
out
xchg
sbb
and
neg
sub
fucomip
xchg
stos
out
fcompp
lahf
or
ins
clc
retf
mov
add
loope
sub
rcl
addr16
push
jle
test
mov
inc
jmp
cdq
bnd
add
jmp
jmp
cmp
aam
dec
lock
xor
mov
test
icebp
enter
push
push
enter
mov
ror
sbb
outs
adc
fisttp
mov
les
jg
push
adc
jns
push
test
add
mov
shr
xor
pop
fimul
mov
and
or
fstp
jmp
push
jle
dec
jae
shr
add
cmp
aam
sar
mov
daa
push
push
cmps
mov
or
push
mov
jp
test
outs
inc
jmp
rcl
cs
cmps
std
sbb
jmp
int
xchg
cs
and
hlt
xchg
popa
push
loop
in
xor
xor
push
pop
ret
outs
mov
jo
push
sub
in
pop
(bad)
mov
ins
lds
fincstp
cmp
test
lods
adc
push
inc
mov
xor
xchg
mov
add
mov
push
pushf
or
jno
loop
xor
(bad)
test
sub
shl
pop
ds
xchg
xor
mov
dec
pop
xchg
lahf
or
push
and
cmc
jmp
add
push
repnz
sbb
pop
shl
sub
jne
mov
in
mov
scas
arpl
push
adc
mov
out
shl
call
(bad)
jno
scas
push
push
ss
cli
push
stc
mov
push
and
outs
rol
xchg
push
xchg
mov
sti
fiadd
xor
ret
ret
(bad)
jne
push
or
ret
jnp
wrmsr
fmul
mov
xchg
outs
jbe
cmp
sub
mov
jmp
clc
add
dec
mov
popf
jecxz
push
jp
and
mov
test
jmp
out
icebp
shr
data16
xor
pushf
adc
or
xchg
mov
and
cmps
mov
xchg
mov
xchg
sbb
out
ss
scas
ja
jne
dec
or
lea
mov
push
jl
or
xor
cld
fimul
sub
inc
into
cdq
scas
adc
xchg
sbb
movs
stc
or
es
adc
test
xchg
out
sbb
inc
cmc
mov
mov
jecxz
fsub
add
xchg
pop
pop
(bad)
mov
pop
inc
mov
repz
sub
loop
fmul
rol
sbb
dec
leave
xor
sub
sub
xor
iret
call
jp
or
pop
outs
mov
ins
shr
add
pop
enter
aad
push
(bad)
jnp
(bad)
in
mov
jae
daa
fxch
jae
mov
idiv
or
stc
in
pop
lahf
stos
(bad)
mov
ds
enter
mov
adc
sbb
adc
push
(bad)
dec
fild
aaa
jmp
jae
dec
repz
scas
pop
push
jno
jmp
fldcw
fwait
std
jle
cmp
adc
xchg
push
mov
cs
and
fwait
dec
rcr
push
push
xor
aam
iret
(bad)
push
add
pop
pop
stos
shl
and
mov
or
mov
inc
out
loopne
cmp
push
push
cdq
enter
call
mov
mov
bound
fwait
mov
scas
das
mov
mov
sbb
and
mov
jae
jne
leave
pop
aam
push
adc
jmp
pop
(bad)
and
mov
push
inc
mov
cmps
adc
inc
jecxz
pop
(bad)
sub
dec
xchg
mov
cli
add
mov
stos
cmp
mov
mov
mov
and
jo
mov
mov
adc
add
cli
xor
shld
idiv
scas
cmove
nop
sti
popf
adc
mov
mov
rcr
fs
out
xlat
jno
xor
dec
scas
sbb
repnz
les
or
inc
in
fisubr
addr16
repnz
in
or
sbb
mov
imul
lahf
ror
inc
and
pusha
mov
js
mov
ficomp
sub
(bad)
sub
mov
and
clc
pop
push
addr16
inc
add
mov
data16
sub
cdq
cmp
mov
(bad)
fwait
adc
out
cli
test
cmp
and
pop
or
xchg
outs
pop
pushf
ds
dec
jns
or
jno
aas
aad
mov
push
fild
cmp
popa
aam
fadd
lea
in
cld
and
jecxz
inc
es
xor
into
cld
ja
icebp
cmps
cmp
xor
and
mov
mov
sub
inc
lock
jbe
sub
sbb
and
push
call
pusha
and
ret
xchg
inc
hlt
adc
xchg
inc
cmp
cs
xchg
mov
jecxz
in
lea
loop
aas
jae
push
add
iret
inc
add
test
sub
mov
cli
(bad)
cs
cmc
jg
repz
stc
imul
push
rcl
sbb
in
sar
adc
inc
cmp
jle
or
fcomp
cmp
cld
adc
add
out
nop
adc
jmp
or
inc
imul
fidiv
fild
inc
add
push
add
push
inc
dec
sub
clc
cmp
aaa
rol
and
and
loop
cmps
xlat
cmp
adc
push
dec
or
or
jmp
adc
mov
push
inc
mov
dec
lock
add
rcl
xor
xchg
mov
mov
icebp
pop
pop
sbb
loopne
sub
and
jno
aaa
movs
push
bound
sahf
fwait
dec
fisttp
cmp
sbb
nop
call
iret
cmp
add
xor
jne
lods
clc
(bad)
jmp
pushf
int3
adc
inc
and
and
xchg
scas
or
push
out
xor
cdq
xlat
sbb
xchg
stos
lods
js
fisub
test
mov
push
adc
pop
aad
add
xchg
jle
popf
adc
or
cmp
xor
pop
mov
in
stos
aaa
dec
push
add
lock
sub
aad
int3
dec
add
movs
sti
adc
mov
out
mov
in
jmp
repnz
in
into
daa
xchg
xchg
cwde
or
pop
cmp
jecxz
(bad)
fistp
(bad)
mov
xchg
ficom
xchg
push
(bad)
ror
std
inc
out
push
arpl
add
dec
fwait
inc
fist
xor
imul
fldenv
ret
stos
xchg
aas
and
pop
in
jge
jns
adc
dec
ret
mov
xor
rcr
mov
mov
pop
rcr
clc
jmp
dec
dec
pop
leave
jo
icebp
or
fidivr
inc
pop
or
int
fsubr
add
ins
jmp
in
xchg
sbb
xchg
sub
pushf
call
dec
or
(bad)
clc
aad
jg
mov
lea
gs
dec
inc
mov
fidivr
and
ret
push
mov
mov
cmc
cmc
mov
aad
retf
adc
mov
bound
push
jmp
push
adc
xor
push
call
xor
jg
cmp
and
stc
inc
jnp
cdq
mov
push
test
jecxz
mov
xor
fimul
sahf
cmp
xlat
mov
add
sub
test
into
mov
cdq
dec
(bad)
xchg
fldlg2
add
inc
ds
pop
outs
sub
sub
sti
mov
mov
into
adc
sbb
adc
and
scas
sbb
pop
dec
scas
add
pop
push
fisttp
and
jb
inc
push
pop
lods
add
std
enter
cli
dec
push
enter
popf
es
pop
add
sub
retf
sub
or
cli
cmps
std
scas
mov
pop
icebp
dec
shr
mov
js
ins
xchg
stos
sbb
mov
lods
xchg
sub
cdq
or
repnz
fistp
jno
scas
pop
mov
data16
ret
mov
icebp
adc
repnz
pop
dec
sub
push
push
pushf
out
sar
and
jg
jo
mov
dec
xchg
mov
xchg
xchg
add
add
cs
sar
or
sbb
call
(bad)
jmp
out
mov
ret
cmps
stc
jg
(bad)
sbb
stos
pop
jmp
mov
pop
test
iret
push
std
add
cwde
outs
mov
mov
push
sub
jg
and
xchg
adc
push
pop
pop
popa
or
and
data16
lods
jl
dec
adc
jmp
lds
dec
hlt
mov
cdq
leave
add
xor
xor
mov
fwait
xchg
mov
dec
xor
adc
add
test
xchg
fs
mov
cmp
lock
cmp
aad
push
and
mov
inc
sub
or
adc
mov
adc
pop
jmp
neg
outs
xlat
jp
in
call
mov
out
aaa
jns
xchg
ds
push
iret
sub
(bad)
fscale
and
push
push
test
mov
sahf
pushf
jne
jecxz
jnp
daa
ret
in
lods
sti
in
or
daa
out
mov
call
clc
ins
div
rcl
int
in
in
test
mov
or
rcr
enter
xor
int3
jp
cmp
enter
push
push
dec
(bad)
jnp
jne
dec
or
and
mov
lods
daa
mov
sbb
jae
les
xor
xor
sub
mov
pop
aam
fwait
jle
sub
fwait
ins
pop
movs
mov
pop
push
mov
xor
(bad)
or
mov
inc
icebp
or
push
sti
and
jo
loopne
push
xor
adc
imul
xor
inc
xor
std
mov
fmul
call
and
mov
inc
cmp
xor
add
add
xchg
(bad)
jne
lods
dec
xchg
cmp
out
cmp
in
mov
push
push
cli
mov
and
jecxz
xchg
cli
jmp
(bad)
mov
push
fsubrp
jmp
mov
pushf
div
push
xor
cmps
sbb
xchg
ja
xor
popf
mov
cdq
inc
lds
cli
je
xor
inc
outs
gs
xchg
xlat
ja
push
shl
loope
mov
call
aad
pop
mov
or
mov
mov
out
push
sbb
xchg
inc
loop
mov
and
pop
push
mov
xor
mov
fs
push
stos
sub
fst
xchg
mov
ins
gs
sub
sub
int3
xor
test
jg
call
ins
cmp
scas
ror
mov
lods
inc
pop
cwde
adc
clc
out
mov
adc
cmp
out
adc
lds
pop
outs
mov
xchg
push
or
(bad)
repz
or
ins
fcomp
(bad)
jnp
push
std
pop
out
pop
retf
push
xchg
(bad)
retf
out
movs
es
loopne
and
xor
jo
cmp
daa
(bad)
pop
dec
jne
push
in
xor
aam
push
hlt
imul
sbb
push
retf
sub
xor
retf
ins
or
out
je
ret
call
or
sub
jge
cmovs
xor
mov
loopne
cmps
jecxz
ret
adc
dec
add
mov
add
sti
int3
fst
push
imul
leave
retf
gs
mov
sbb
jns
pop
add
mov
icebp
int
mov
jmp
push
js
daa
add
call
fidivr
add
mov
jb
xor
and
dec
popa
stc
jnp
(bad)
rol
push
push
popa
xchg
shl
mov
mov
(bad)
inc
dec
push
rcr
inc
inc
cmp
aam
nop
out
adc
jle
test
(bad)
(bad)
mov
sbb
test
jg
ja
xchg
sbb
xchg
out
sub
adc
mov
xchg
cmp
mov
enter
inc
pop
cdq
cmp
sub
sbb
sar
ds
daa
out
into
add
and
xchg
pop
mov
mov
js
data16
retf
xor
out
test
and
mov
inc
arpl
dec
out
es
pop
xor
inc
fbld
jno
and
mov
dec
hlt
call
mov
gs
xchg
add
push
push
daa
and
cmp
xchg
bound
(bad)
push
adc
sbb
mov
adc
ins
xor
inc
jp
sti
test
mov
lods
pop
push
cmp
jns
push
fprem1
ss
xor
sbb
std
into
cld
lahf
or
xchg
add
and
mov
in
fwait
inc
fmulp
xor
mov
das
out
ror
movs
movntps
pop
add
sbb
dec
das
mov
inc
push
retf
ficomp
xchg
ins
sbb
jns
jg
fisttp
push
jge
cmp
xor
(bad)
out
dec
cmp
out
jo
mov
jmp
ret
ret
jbe
(bad)
jecxz
in
fdiv
clc
es
ja
lods
(bad)
inc
push
jmp
adc
pop
loopne
pop
(bad)
mov
dec
jo
in
aas
mov
(bad)
(bad)
push
sar
xchg
pop
popf
add
xor
iret
and
cmp
cli
aas
xchg
jne
cmc
sbb
test
dec
cmps
loopne
mov
jmp
dec
es
pop
out
add
gs
mov
in
(bad)
popa
pop
pop
std
jp
lds
rcl
xchg
ret
xchg
cmp
jmp
pop
fmul
daa
push
clc
cmps
pop
fwait
jo
cmp
xor
ficom
mov
cs
leave
add
shr
sub
fimul
cmc
ins
loope
inc
iret
xor
mov
addr16
cmps
repnz
jmp
xchg
mov
inc
inc
ins
loop
pop
push
jl
cmp
sahf
pop
lock
mov
scas
mov
inc
push
sub
pop
adc
or
xchg
pusha
or
stos
mov
mov
and
aas
aad
sub
mov
adc
dec
out
repz
aaa
jp
mov
das
mov
mov
mov
test
rol
push
dec
xchg
div
movs
xchg
iret
addr16
lods
outs
pop
dec
int
push
cmp
push
(bad)
or
mov
push
mov
mov
stc
imul
into
test
(bad)
push
cld
sbb
psubq
test
xor
mov
gs
mov
jmp
shl
bound
(bad)
jl
enter
scas
jnp
adc
mov
pop
dec
fimul
xchg
or
call
cdq
inc
das
dec
xchg
jl
xchg
aas
int
test
sbb
jo
movs
cmp
(bad)
add
ja
xchg
mov
adc
fidiv
push
or
xchg
std
push
aaa
imul
dec
retf
sub
xlat
push
aaa
jmp
cs
mov
enter
mov
inc
test
shl
addr16
pushf
mov
cmps
leave
push
pop
push
pop
dec
jp
test
pop
dec
mov
inc
fnstenv
movs
bound
mov
sub
sbb
mov
cmps
pushw
mov
mov
dec
(bad)
mov
test
jg
jae
inc
in
daa
outs
and
lock
xchg
(bad)
out
retw
jg
and
mov
dec
lock
xor
pusha
xchg
in
call
test
jb
xchg
xor
test
mov
pop
data16
jo
mov
inc
jb
adc
fwait
and
dec
and
or
sbb
fld
pop
mov
and
sbb
xchg
add
cmp
sub
in
xchg
aas
or
dec
fidivr
rol
jg
xchg
xchg
xchg
imul
sub
repz
push
ins
push
lahf
sub
xchg
jle
mov
icebp
fiadd
dec
push
or
push
adc
(bad)
or
js
(bad)
loope
mov
cmp
test
jne
pop
sub
repz
imul
push
(bad)
mov
sub
shl
push
mov
dec
push
xchg
sbb
int3
lahf
adc
and
sbb
ret
aaa
mov
xchg
jle
popf
cwde
adc
int
sbb
repz
addr16
sbb
ins
mov
jle
push
in
call
or
adc
std
jge
scas
icebp
push
mov
imul
jge
fwait
pop
aam
mov
mov
inc
push
les
mov
movs
pop
shl
repnz
push
mov
pop
mov
daa
jb
mov
ss
dec
retf
mov
call
xchg
pop
push
pop
xor
dec
lods
pushf
adc
dec
and
(bad)
jnp
dec
inc
push
std
sahf
inc
daa
(bad)
clc
adc
out
jle
pop
mov
ja
(bad)
or
xor
xchg
xor
jl
add
xchg
outs
mov
mov
ficomp
outs
aam
in
push
mov
or
mov
lahf
sbb
lods
lahf
cmp
(bad)
call
cmp
es
sbb
pop
inc
cwde
ror
dec
imul
es
adc
pusha
test
mov
int3
xlat
and
fldenv
pop
scas
arpl
int3
jne
xchg
jbe
and
bound
(bad)
sub
in
bound
mov
adc
popf
mov
fistp
fld
and
xor
sub
ror
sbb
and
leave
adc
fidivr
pop
(bad)
mov
ss
mov
pop
dec
movs
cmp
pop
and
jge
neg
test
stc
movsx
stos
fcomp
int3
pusha
mov
sub
adc
shl
adc
mov
call
jecxz
xlat
jb
push
cmps
out
test
cmp
test
ins
add
mov
das
jno
lea
jecxz
into
(bad)
or
int
test
fisub
xor
add
inc
call
outs
dec
jle
rsm
push
mov
ret
icebp
icebp
add
or
mov
in
ret
jle
rol
add
xor
stc
dec
sar
jo
dec
inc
cmps
adc
fsubp
jmp
call
popf
sti
cwde
push
or
call
aam
jb
inc
std
inc
movs
sub
and
in
sub
into
push
je
mov
mov
fmul
adc
retf
inc
sub
rcl
jge
dec
or
pusha
scas
push
daa
popa
out
mul
das
fs
hlt
cmc
mov
(bad)
in
(bad)
pop
(bad)
mov
dec
and
sub
jmp
xor
adc
icebp
dec
das
fst
movs
pop
adc
mov
adc
cmp
jmp
xchg
push
int
and
jmp
clc
test
repnz
mov
lock
fwait
add
dec
mov
mov
dec
and
loope
xchg
jmp
mov
mov
or
pop
sbb
fistp
push
in
icebp
ret
push
xchg
xchg
dec
or
call
jb
loopne
ret
(bad)
cmps
fdivr
and
lods
mov
loop
movs
pop
jge
js
iret
xor
inc
dec
int3
pop
dec
adc
sub
or
repz
out
xchg
aaa
cmp
js
pop
pop
daa
cmp
in
and
xchg
push
fdiv
ja
aam
out
xchg
aad
or
(bad)
mov
jbe
sbb
sbb
into
xchg
push
push
pop
fidivr
(bad)
arpl
stc
cmp
push
jnp
sub
lock
mov
fnstenv
sub
call
mov
add
(bad)
xor
stos
outs
sbb
sub
xchg
dec
mov
out
lds
test
inc
xchg
sub
inc
in
movs
int
iret
push
xchg
mov
outs
call
mov
lock
dec
mov
sub
push
popa
imul
and
cmp
jmp
iret
adc
(bad)
daa
les
scas
cmp
mul
add
pop
cmps
push
test
fld
sbb
sub
add
xor
mov
dec
inc
push
enter
or
jle
or
stos
or
out
ret
mov
aaa
shr
pop
std
enter
push
or
in
and
jmp
and
push
cmp
in
aad
cmp
xor
and
ror
les
leave
jae
call
adc
out
sbb
aam
int3
stos
pop
and
sub
inc
retf
in
retf
xlat
sub
adc
sbb
jb
ins
xchg
cmp
lds
lahf
pop
std
lock
(bad)
out
pop
fwait
push
adc
repnz
mov
pushf
stos
rol
jmp
fcmovbe
pop
cwde
mov
xor
imul
mov
les
push
jg
ja
sub
aam
scas
sar
xor
cs
sbb
sti
push
icebp
fld
sti
(bad)
or
scas
out
cmp
cmps
imul
push
xor
mov
jmp
in
adc
push
cmp
mov
jmp
mov
out
int
xor
scas
or
sbb
xchg
push
je
or
xchg
sub
std
in
jecxz
pop
jg
push
pop
dec
les
mov
idiv
movs
aas
mov
das
inc
xchg
neg
pop
jle
xchg
jns
mov
cmc
or
or
and
aas
mov
cmps
cmp
les
mov
pop
sahf
lahf
xlat
mov
addr16
pop
stc
leave
and
mov
mov
adc
sar
fwait
es
test
cdq
xor
sar
icebp
dec
daa
(bad)
adc
push
punpcklwd
and
mov
mov
fidivr
add
sahf
xchg
inc
or
fs
dec
icebp
mov
pop
sub
retf
inc
call
pop
in
xor
mov
mov
je
mov
outs
pop
xor
ds
adc
pusha
dec
(bad)
and
sbb
pusha
mov
jmp
repz
sub
fnstenv
shr
stos
sub
(bad)
add
pop
mov
inc
mov
add
out
pop
push
out
out
pop
(bad)
loop
push
aas
shl
mov
imul
loopne
pop
xor
les
data16
inc
(bad)
in
sub
dec
addr16
xlat
leave
sub
cmp
and
jg
inc
push
xchg
cmp
mov
push
sahf
jecxz
push
(bad)
and
ror
mov
fdivr
jnp
sahf
fcomp
mov
sub
and
and
mov
pop
add
pop
test
pop
test
pop
mov
es
xchg
jnp
in
cmp
push
add
test
arpl
xchg
outs
int
cmp
gs
test
into
repz
pop
xchg
xor
mov
inc
in
adc
push
lock
sti
push
out
push
aam
jmp
iret
sahf
enter
fimul
cld
scas
jb
jmp
jle
push
into
mov
cmp
je
loope
(bad)
cmps
and
xor
mov
fs
mov
xlat
xlat
popa
ja
cli
aas
fimul
push
shl
mov
fsubr
rol
sub
pop
xchg
test
fs
movs
adc
(bad)
aad
pop
aam
xor
ret
in
call
cli
mov
inc
sub
inc
sbb
pop
repnz
pop
xor
jo
dec
stc
aam
repz
ret
dec
jecxz
out
sbb
pushf
or
fstp
mov
xchg
pusha
shl
inc
fs
(bad)
dec
stc
jmp
and
movs
pop
jnp
ret
loop
retf
or
add
aad
cmp
gs
xchg
sar
popf
pop
sti
test
xchg
mov
and
jecxz
daa
leave
or
fs
scas
jle
add
adc
adc
dec
pop
gs
inc
repnz
mov
mov
icebp
add
inc
push
test
mov
jnp
inc
xchg
sbb
dec
push
sbb
dec
mov
ret
add
daa
push
mov
retf
test
push
test
stc
mov
add
das
icebp
jb
and
and
out
pusha
mov
stos
repz
rcr
ins
xchg
mov
or
cwde
push
out
cmp
scas
sub
retf
or
cwde
pop
outs
cmp
add
jno
ds
push
push
cdq
ficomp
std
and
push
lahf
xor
into
mov
rcl
xchg
mov
jle
scas
push
lock
xchg
add
xor
sub
xor
xor
mov
shr
mov
inc
add
dec
pop
in
sbb
push
sub
(bad)
jecxz
push
ret
pusha
rol
pop
repnz
cwde
jmp
sbb
(bad)
cwde
adc
packuswb
or
inc
int
adc
clc
adc
cmp
jne
aas
push
cdq
push
mov
add
add
inc
mov
jle
xchg
stc
(bad)
mov
xor
fisttp
mov
and
jle
fs
mov
ret
sub
xor
mov
ds
push
xchg
test
xchg
mov
ja
push
ficomp
fisub
cwde
add
test
and
pop
sar
enter
js
xor
pop
shr
pop
jge
sub
sub
lahf
out
jae
sar
jecxz
stos
fdivr
push
mov
adc
pushf
jo
fsubr
push
fistp
xchg
aaa
dec
add
mov
les
in
jmp
jle
adc
pushf
(bad)
pop
push
sbb
xchg
ins
ds
aas
clc
ret
sub
daa
ins
adc
cmp
aad
jbe
ror
inc
ins
sbb
(bad)
outs
push
out
or
jne
imul
add
jmp
into
push
mov
push
mov
and
scas
loope
add
adc
mov
add
pop
add
jbe
mov
push
jp
xchg
gs
imul
out
loop
mov
add
loop
mov
mov
push
adc
push
repnz
(bad)
dec
mov
mov
mov
outs
add
loopne
xchg
outs
mov
outs
mov
jbe
in
stos
call
adc
and
(bad)
sub
retf
jmp
push
xor
cmp
test
push
inc
shr
ret
repz
xchg
repz
cmp
test
imul
push
mov
in
push
dec
mov
gs
pop
jmp
ja
movs
fsubr
and
pop
jno
repz
and
test
ss
stos
xchg
sub
inc
pop
sub
aas
clc
inc
fcomp
fidiv
mov
test
ror
jae
cmp
inc
or
dec
cmp
ja
xchg
mov
jae
push
and
fidivr
push
(bad)
aaa
pop
(bad)
xchg
out
push
popf
jp
cmc
out
sbb
out
cmps
xlat
(bad)
pop
jo
and
ficom
xor
out
cli
loope
rcl
xor
lock
clc
adc
repnz
xlat
xor
fsub
lds
(bad)
imul
add
sub
mov
mov
rep
sbb
fcom
stc
lods
push
add
push
cli
mov
imul
(bad)
xor
jp
mov
xlat
outs
or
sub
or
mov
out
dec
lea
mov
and
sbb
inc
cmp
adc
test
enter
push
(bad)
fcmovnbe
stos
out
sub
pop
popa
imul
dec
rcr
jp
cmp
inc
(bad)
test
jmp
adc
test
test
jle
lea
push
fucom
in
int3
bndstx
add
xchg
xor
cld
xchg
or
jnp
pop
dec
daa
xchg
loope
imul
push
inc
out
popa
cmp
sbb
loopne
and
retf
ss
(bad)
jnp
jg
xchg
inc
test
arpl
add
or
push
and
xor
iret
and
jge
xor
sti
mov
out
mov
push
sysexit
inc
xchg
cmc
mov
es
lahf
(bad)
adc
inc
(bad)
sbb
nop
xchg
sbb
pop
in
sbb
out
pop
push
pop
cwde
push
inc
(bad)
or
gs
inc
fnstenv
add
jne
and
(bad)
jne
sub
mov
jge
gs
repnz
jp
out
test
jne
mov
mov
xor
mov
mov
sub
stos
xor
hlt
pop
popf
mov
cld
xor
mov
cld
cs
call
mov
popf
ss
fcom
dec
jb
or
jle
pop
retf
sbb
jmp
add
jmp
dec
xchg
arpl
dec
into
test
(bad)
shr
mov
sub
rol
scas
in
pop
cld
jbe
leave
sbb
scas
push
sar
mov
xchg
add
push
out
int
push
xchg
int3
ficom
cmps
xor
dec
stos
repz
push
xchg
out
adc
mov
pop
(bad)
and
loop
movs
in
cld
daa
ror
icebp
or
xchg
pop
outs
sbb
fist
mov
pusha
and
add
jg
icebp
into
mov
push
xor
sti
cmp
inc
mov
xchg
mov
mov
mov
or
icebp
and
lock
sub
and
and
enter
loop
mov
int3
sbb
sbb
rol
sub
mov
pop
push
push
pop
dec
cld
sbb
mov
in
fisttp
sub
(bad)
adc
(bad)
outs
retf
(bad)
mov
out
int3
mov
ins
xor
mov
jbe
xchg
das
mov
inc
sbb
mov
mov
iret
dec
imul
mov
jmp
(bad)
inc
(bad)
jp
add
inc
cmp
ins
mov
adc
add
or
pop
sbb
jae
mov
mov
and
out
push
leave
(bad)
ins
out
xor
ret
mov
jns
cmp
adc
and
cwde
js
inc
xor
xor
cmp
jne
int
bound
mov
dec
mov
bound
retf
ins
scas
or
mov
sbb
xchg
inc
(bad)
mov
in
jo
pop
push
cmc
mov
push
mov
std
sti
sbb
or
lods
mulps
jae
jg
test
push
add
sub
lahf
stos
xor
inc
in
mov
jp
pop
and
cmp
cdq
ins
mov
(bad)
mov
add
repnz
mov
mov
cdq
mov
jmp
hlt
ins
aad
xor
jbe
xor
fstp
dec
inc
stos
ror
xor
cmp
sahf
dec
cwde
jne
pop
ss
pop
bound
vhaddps
(bad)
(bad)
dec
inc
adc
adc
in
(bad)
scas
(bad)
pop
adc
add
push
dec
imul
xor
popf
adc
fisttp
mov
shr
std
stos
xchg
cmp
inc
xor
push
daa
or
das
inc
xchg
pop
arpl
add
push
aam
cmp
ret
mov
lea
gs
aam
mov
imul
enter
jmp
xchg
sub
inc
and
cmp
add
push
std
(bad)
fist
jmp
mov
cli
inc
mov
mov
push
out
sub
sub
add
cs
out
jns
test
lea
xor
cmps
pop
xor
outs
mul
and
test
push
and
mov
inc
data16
add
push
shr
in
jo
sub
cmc
xchg
push
inc
cld
xor
lock
dec
outs
ins
mov
mov
test
adc
cmp
(bad)
sub
packssdw
dec
mov
ror
adc
rcl
pop
fisttp
cmp
and
enter
repnz
sti
into
rcl
repz
adc
iret
inc
hlt
shr
or
mov
ds
push
jno
test
(bad)
mov
mov
xchg
mov
push
pop
sbb
mov
or
xchg
cdq
dec
jl
pop
(bad)
inc
imul
(bad)
jmp
in
rcr
push
outs
inc
lods
cmps
mov
or
pusha
mov
rcr
fld
mov
clc
mov
cwde
sbb
mov
mov
lods
push
inc
movs
inc
pop
je
ja
je
jle
pop
or
ret
and
xchg
mov
(bad)
pop
add
pop
lahf
add
fnstsw
inc
mov
sbb
ret
add
cmp
cmp
cmp
or
gs
jb
(bad)
stos
pop
mov
in
pop
pop
dec
or
fistp
aas
xchg
inc
adc
outs
push
or
mov
jge
jns
aaa
xor
in
jns
sbb
adc
out
mov
push
lahf
out
adc
pop
sub
xor
sbb
push
(bad)
pop
mov
push
ret
gs
or
out
push
rcr
add
jbe
push
inc
lea
in
popa
movs
jge
out
mov
inc
sub
mul
nop
xchg
jb
arpl
mov
cmp
inc
and
sub
js
jbe
cmp
rcr
jae
mov
frstor
dec
add
rcr
adc
into
xchg
add
es
movs
ficomp
aam
xor
addr16
add
sub
movs
mov
xchg
cmps
mov
and
sbb
sub
inc
in
pop
add
out
adc
sar
cmps
lods
in
(bad)
stc
pop
ins
xor
loope
pop
gs
inc
dec
adc
jmp
cwde
mov
sub
mov
pop
movs
inc
add
and
xlat
cmp
in
mov
pop
(bad)
adc
fidiv
leave
mov
aas
loope
mov
cmp
ja
out
push
dec
xor
push
cmps
rcl
mov
sar
mov
imul
fwait
es
jae
dec
xchg
push
mov
push
jmp
jge
xchg
inc
jb
imul
aaa
mov
cmp
sbb
pop
neg
imul
fstp
sbb
jbe
fidiv
retf
rcr
aam
add
sbb
not
xchg
popf
dec
mov
inc
call
fwait
scas
cmp
cmps
iret
ins
xchg
cmc
scas
sbb
cld
mov
push
imul
mov
inc
fidiv
test
jmp
xchg
test
arpl
and
xchg
out
fcomp
cmp
pop
out
xchg
and
dec
test
out
arpl
sub
repnz
sbb
or
inc
shr
dec
(bad)
shl
and
dec
jmp
adc
jmp
ret
je
jmp
pop
sbb
daa
jbe
sbb
xchg
mov
pop
cmp
mov
cmp
xchg
sbb
outs
sub
aas
xchg
cs
nop
rcr
popf
pushf
in
test
and
pop
jne
fild
leave
repnz
mov
jae
out
inc
mov
inc
sbb
sbb
retf
popf
jge
mov
cli
xor
arpl
(bad)
repnz
mov
pop
imul
aad
mov
nop
push
xchg
pop
popa
and
ins
lea
cmps
mov
or
sbb
xlat
movs
pusha
int
pop
neg
mov
fs
or
dec
mov
push
(bad)
mov
dec
jo
mov
xchg
mov
pop
xor
xchg
fst
pop
mov
in
or
adc
mov
push
aad
lea
dec
cmp
jecxz
pusha
sub
push
mov
mov
xchg
inc
(bad)
test
dec
inc
popa
inc
loope
lahf
cmc
push
inc
push
sub
jmp
pop
pop
and
int
or
idiv
movs
ret
lds
and
sbb
out
jle
pop
xor
inc
in
cli
ja
out
retf
pop
dec
stos
adc
clc
jne
cmp
(bad)
jb
mov
xor
mov
sbb
fiadd
inc
adc
mov
jo
jae
adc
push
leave
push
iret
cmps
sti
gs
ficom
dec
mov
stos
stc
mov
aas
cdq
or
inc
and
jge
aad
fstp
pand
lea
fist
jo
fs
setns
mov
dec
cmp
pop
xchg
mov
dec
jo
inc
movs
cmps
(bad)
outs
cli
xchg
fisttp
adc
repz
repnz
gs
mov
test
jle
cmp
or
cld
mov
xor
jge
idiv
mov
mov
jmp
movs
push
or
push
test
inc
inc
xlat
idiv
pop
je
push
popa
dec
stc
dec
mov
mov
test
(bad)
pop
ins
fnsave
cmp
enter
add
mov
ja
push
(bad)
push
sbb
jmp
icebp
stc
repnz
inc
mov
pusha
dec
jbe
sub
movs
pop
cmp
inc
push
dec
sti
pop
push
mov
dec
in
xchg
jle
cmp
ds
fsubr
mov
inc
retf
add
jbe
mov
pop
mov
mov
and
add
pop
test
jge
pop
jg
mov
fcomp
xchg
add
out
lea
sbb
or
mov
sub
sub
jmp
inc
scas
xor
(bad)
cmp
imul
(bad)
not
sbb
fdivr
test
pusha
imul
inc
repz
xchg
add
enter
push
lea
out
mov
repnz
int3
push
xchg
rol
movs
sub
inc
mov
scas
xchg
(bad)
mov
dec
dec
mul
addr16
pop
loop
push
dec
mov
jo
movs
repnz
arpl
mov
push
pop
sbb
clc
aam
jns
and
mov
mov
pop
icebp
inc
xchg
adc
xlat
xor
fcomp
pop
in
sub
(bad)
test
mov
jp
sahf
mov
ja
lods
mov
test
ds
sub
xchg
inc
clc
out
jecxz
cli
dec
adc
in
pop
jp
inc
popa
out
stos
movs
jo
les
pop
mov
jmp
push
push
dec
lods
(bad)
adc
cmps
in
jo
jb
or
fiadd
xchg
enter
fimul
adc
xor
jl
push
daa
push
add
popa
jnp
mov
pushf
ds
xor
jmp
popf
data16
in
(bad)
int3
(bad)
pop
sbb
(bad)
out
fdivp
mov
test
retf
movs
pop
xor
sbb
hlt
cmp
cmp
push
popf
jbe
xor
lods
push
pop
push
push
movs
add
addr16
mov
mov
(bad)
push
add
xchg
movs
push
xchg
jmp
loopne
lahf
icebp
shr
imul
dec
sub
in
push
sbb
iret
in
pop
push
cmp
addr16
enter
jge
mov
sub
jl
iret
shl
(bad)
mov
ror
lods
loop
mov
mov
pop
lock
or
dec
imul
lods
mov
pushf
push
add
pop
(bad)
repnz
leave
pop
pop
or
cmp
test
sti
adc
arpl
inc
mov
loop
cmps
sub
jecxz
into
pop
xchg
cwde
gs
add
sbb
xor
sub
in
adc
cs
mov
loopne
pop
fwait
and
mov
jmp
xor
les
mov
inc
dec
jbe
ja
sbb
je
popf
ins
or
pop
add
xchg
xor
dec
sub
and
mov
cdq
xor
cmp
ds
(bad)
pop
mov
ds
mov
cmc
call
int3
sti
jmp
hlt
imul
test
and
mov
mov
loope
cdq
pop
in
sub
repnz
and
stc
cs
jae
pop
gs
inc
stos
add
addr16
push
sbb
or
mov
(bad)
push
sahf
mov
sahf
test
push
push
mov
les
xor
cld
std
cmps
jmp
(bad)
and
shr
out
es
js
out
mov
dec
fnstenv
sub
add
addr16
lock
test
inc
xor
jp
adc
xor
or
ds
cli
mov
dec
pop
xchg
mov
pusha
sbb
fs
movs
push
mov
dec
jmp
out
inc
cs
jno
lods
data16
dec
jg
sub
add
or
into
cmps
jl
adc
push
stos
retf
fcomp
jmp
xor
jp
mov
jo
outs
aam
pop
adc
add
pop
dec
pop
sbb
dec
push
fcomp
mov
ja
fld
in
int
add
sbb
adc
ja
adc
ins
dec
adc
cmp
cmp
sub
jl
repnz
adc
sahf
cmp
pusha
xchg
data16
aas
mov
mov
mov
hlt
mov
mov
mov
push
mov
cmp
jns
mov
enter
call
add
jle
stc
xchg
xchg
cli
xor
adc
rol
pop
jecxz
lds
fstp
cdq
or
fst
xor
fld
and
sbb
mov
adc
sbb
xlat
mov
sub
jg
pop
cmp
add
xchg
popa
add
mov
jb
push
push
push
mov
dec
stc
inc
call
xchg
movs
std
dec
rcr
mov
in
inc
push
push
mov
out
inc
or
(bad)
js
rol
pop
aam
imul
jns
fnstenv
mov
sti
inc
or
cmp
or
cmps
mov
fs
dec
sub
xor
xor
add
jle
inc
in
fwait
jb
cmp
(bad)
jle
lods
xchg
inc
loope
ja
test
and
add
mov
scas
mov
fimul
jp
inc
in
not
mov
adc
jae
push
push
nop
movs
(bad)
std
mov
movs
loopne
in
sbb
xchg
or
mov
outs
js
(bad)
xchg
xchg
shr
sub
sub
mov
mov
outs
lods
aas
sub
pop
cwde
jecxz
push
lods
mul
jecxz
fistp
imul
push
out
pop
jg
xor
loop
adc
fldcw
mov
xchg
xor
scas
pop
and
push
add
dec
stos
add
mov
aam
and
rol
enter
mul
or
out
mov
cmp
cmps
mov
dec
es
aad
sub
pop
in
xchg
sbb
imul
mov
ret
pop
mov
hlt
imul
pop
out
add
jle
loope
add
nop
adc
ins
adc
mov
adc
pop
clc
add
push
dec
push
push
fidivr
dec
mov
pop
jo
mov
inc
pop
scas
inc
mov
rcr
jo
call
adc
xor
call
sub
psrld
xchg
mov
xor
jecxz
jmp
sbb
push
enter
outs
mov
jae
ret
cs
ins
xchg
push
test
inc
adc
jns
imul
cli
xchg
sub
xchg
mov
mov
int3
out
out
inc
mov
sbb
sbb
shl
xchg
push
movs
push
out
loope
shl
pop
push
fs
mov
and
outs
mov
sti
repz
adc
dec
repnz
imul
jno
adc
push
popf
mov
(bad)
(bad)
fcomp
mov
popa
xchg
mov
mov
retf
mov
(bad)
jb
(bad)
mov
pop
jmp
dec
mov
aas
icebp
xor
push
addr16
sti
scas
lea
data16
test
mov
mov
pop
in
hlt
gs
and
inc
sbb
xchg
cmp
mov
adc
push
xchg
mov
inc
ss
(bad)
add
(bad)
jmp
xor
retf
lods
test
data16
enter
fdiv
pop
icebp
shl
add
cmp
pop
loopne
or
das
sub
cmp
addr16
xchg
ins
ins
inc
ror
and
inc
mov
inc
add
or
(bad)
mul
xor
int3
sub
mov
nop
xchg
inc
test
xchg
cmp
lahf
ss
je
sub
mov
sub
mov
retf
mul
jb
jo
loopne
ds
or
cmc
dec
lds
jmp
cdq
xchg
mov
push
xor
xor
stos
scas
xchg
jnp
xor
fmul
loop
setno
in
jecxz
mov
scas
test
test
call
iret
cmps
(bad)
or
mov
outs
pop
aam
in
fcomp
pop
sub
jp
adc
mov
sahf
aam
jne
test
jne
ja
and
adc
fxtract
dec
mov
push
and
or
inc
push
(bad)
push
sbb
(bad)
cmp
cmp
je
mov
ins
hlt
cmps
loopne
sub
icebp
pusha
pusha
stos
xor
mov
outs
stos
fcmove
xchg
fmul
jecxz
out
push
add
gs
inc
jnp
fadd
mov
sar
sub
xchg
lds
into
cmc
scas
pop
repnz
inc
arpl
mov
pusha
mov
cmp
sbb
jle
out
bound
fwait
lods
mov
pop
push
jecxz
inc
jg
jne
jns
scas
mov
ins
rol
out
fcomp
jmp
mov
es
ror
pop
mov
std
rcl
sbb
dec
or
jno
and
cwde
ficom
xchg
jmp
rol
pop
in
pop
jl
or
movs
aas
xchg
arpl
pop
sbb
jg
cs
mov
pop
and
or
ss
aas
in
add
mov
cmp
call
je
cmp
icebp
mov
add
dec
add
ss
pop
iret
shl
add
pop
ins
lods
push
in
addr16
cs
pop
cs
add
clc
jmp
(bad)
fst
or
aas
cld
jecxz
sub
movs
and
and
mov
jns
jp
ror
sub
shl
rcl
retf
and
dec
into
cmp
jnp
or
in
in
sbb
adc
cmc
sbb
inc
dec
or
jmp
scas
in
cmc
test
aad
and
jnp
loop
push
imul
popa
jbe
loopne
ja
das
in
test
pop
jmp
cmp
rol
mov
cwde
arpl
lock
xor
pusha
xchg
dec
add
mov
cld
xor
add
fistp
dec
sub
test
movs
sti
dec
call
int
jp
mov
in
inc
mov
add
push
and
hlt
mov
jb
or
aaa
(bad)
lds
call
add
movs
mov
inc
lods
jp
pop
dec
jb
and
cs
mov
imul
bound
lds
ror
lods
xor
fcmovnbe
call
div
push
push
mov
cmp
(bad)
dec
in
into
dec
lods
loopne
aam
call
aad
addr16
pop
jg
dec
lock
push
mov
xor
mov
adc
call
clc
xor
mov
scas
dec
sub
pop
jmp
je
in
or
xchg
xor
movs
retf
mov
nop
inc
out
pop
xchg
jmp
shr
mov
jl
inc
shr
add
cld
loop
xchg
mov
xchg
lods
xor
jle
pop
call
mov
xchg
fs
out
mov
test
pop
lds
out
jno
xchg
push
in
ret
fs
ins
cld
dec
mov
leave
bound
jmp
ins
and
push
mov
sub
add
xor
out
jo
lods
sub
sub
imul
sbb
lods
imul
or
fist
nop
sub
inc
sbb
(bad)
jge
(bad)
ds
sbb
cmp
fwait
repnz
push
ror
mov
retf
add
cs
xchg
push
nop
jmp
xchg
sar
movs
cmp
cmp
repnz
pop
shr
cmp
sbb
shr
bound
dec
mov
xchg
xor
movs
addr16
sbb
dec
out
pop
pop
push
jg
xchg
cmovbe
loop
pop
loop
xchg
ja
fdivr
fimul
pop
xchg
iret
mov
xor
jae
mov
out
iret
ds
aas
sub
xor
js
repz
and
loop
cs
or
daa
fimul
mov
aam
pop
jg
add
hlt
sub
lahf
in
shr
mov
jle
cmps
unpcklps
ss
retf
xchg
xor
or
pop
adc
adc
xchg
and
jmp
out
mov
xchg
xor
aam
xchg
in
dec
(bad)
ffreep
test
and
lods
mov
pop
jge
clc
inc
dec
movs
fild
movs
xor
mov
stc
retf
push
test
sbb
aad
jle
cdq
into
std
xor
lock
es
cmp
dec
das
mov
mul
jno
and
div
push
add
fcomip
dec
jg
jecxz
mov
hlt
enter
loope
add
test
(bad)
scas
jne
movs
and
xchg
dec
mov
stos
inc
and
and
add
movs
ret
repz
pop
(bad)
call
sbb
inc
or
ins
fld
dec
inc
inc
into
sahf
xchg
repnz
mov
pop
push
scas
jo
loop
xor
loopne
psrlw
sub
test
hlt
or
mov
adc
test
adc
outs
out
js
and
outs
cmp
xor
lahf
jbe
fstp
xor
sub
pop
fwait
push
dec
mov
xchg
mov
rcl
out
pop
ja
mov
xor
jb
das
jecxz
inc
sub
fistp
inc
movs
or
clc
cwde
cli
jo
inc
ins
out
sub
pop
ret
push
in
es
fs
mov
pop
std
and
mov
cmp
xchg
int
sbb
adc
ret
add
sub
fwait
std
fistp
aaa
dec
mov
sbb
inc
popf
test
scas
and
into
xor
adc
xor
cmps
jp
dec
push
addr16
popa
popf
inc
pop
pop
(bad)
mov
adc
hlt
add
jge
out
aaa
cvtpi2ps
pushf
enter
or
jo
cmp
inc
es
jmp
or
lods
or
add
ror
push
push
pop
or
fstp
add
pop
aad
inc
or
mov
scas
retf
xlat
xor
push
inc
mov
jmp
adc
cld
and
ror
push
add
setl
mov
cs
popf
pop
jno
pushf
scas
leave
lods
fdivr
jle
push
popf
cmc
pop
test
mov
cmc
arpl
mov
push
xor
pushf
adc
jnp
out
ins
jbe
adc
push
out
adc
jmp
dec
retf
push
in
cli
call
in
(bad)
loope
stc
jb
pop
lods
(bad)
out
arpl
les
mov
mov
retf
sar
cs
mov
fstp
sbb
mov
outs
test
es
mul
mov
and
clc
scas
into
sbb
js
add
mov
into
cwde
dec
xor
ins
jmp
mov
outs
jno
retf
mov
and
mov
fwait
add
imul
or
mov
push
rcl
popf
test
mov
inc
xor
pop
ja
pop
les
push
pop
jbe
aad
mov
(bad)
in
out
stos
lds
jmp
ins
imul
stos
xor
or
pushf
movs
jg
adc
sbb
out
dec
cs
push
cmps
leave
xor
push
sbb
shl
scas
fidiv
sub
movs
push
cwde
and
(bad)
push
sahf
popf
scas
xor
mov
(bad)
push
xchg
dec
fisttp
pop
cmp
dec
stos
addr16
jb
mov
in
dec
outs
div
nop
in
and
add
or
jnp
adc
sub
mov
adc
inc
test
test
stos
ret
push
xchg
fwait
paddusw
stos
icebp
dec
imul
sbb
sbb
test
pop
mov
dec
add
(bad)
out
xlat
sub
mov
adc
repz
dec
cli
dec
jl
dec
mov
push
das
and
cmp
jmp
xor
loope
cmc
sti
cld
fbstp
lock
or
pop
movs
leave
cwde
xchg
ins
mov
inc
or
pushf
mul
cmp
mov
push
dec
ja
pop
cmps
or
sub
jp
mov
pushf
xor
and
in
fst
xor
sbb
add
shr
(bad)
std
cmp
enter
push
aaa
(bad)
jbe
push
test
enter
mov
neg
fimul
repnz
or
mov
das
js
mov
or
and
or
inc
aam
iret
retf
shr
mov
mov
push
retf
daa
dec
sti
ins
jp
mov
jecxz
daa
xchg
adc
xor
dec
cmc
in
mov
ds
aad
mov
sub
mov
(bad)
or
mov
pop
pushf
cdq
retf
pop
add
push
add
and
mov
loopne
xchg
push
dec
sbb
add
outs
addr16
inc
jecxz
ins
ror
xchg
and
mov
ffreep
pop
imul
xor
dec
(bad)
out
bound
xor
in
pop
sub
enter
pop
(bad)
movs
mov
push
outs
adc
ror
xor
xchg
cmp
push
and
xchg
loopne
adc
adc
stc
push
mov
mov
and
repnz
mov
pop
pushf
pop
stos
sub
xchg
adc
outs
mov
cwde
xlat
leave
sub
push
pusha
pop
shl
pop
adc
and
adc
cmps
pusha
pop
nop
sub
jnp
push
pushf
fidiv
mov
imul
retf
sbb
ffreep
aam
or
call
out
or
rol
mov
in
mov
and
xchg
push
jle
sbb
mov
(bad)
lock
pop
pop
int
call
lods
pusha
cmp
sub
jne
pushf
mov
dec
inc
rcl
or
inc
(bad)
sbb
test
aas
lods
cdq
inc
ins
aas
retf
idiv
cmp
ins
jle
jp
lods
repnz
mov
or
(bad)
in
jns
lock
xchg
pop
jmp
mov
out
jg
dec
into
cmps
xor
mov
ds
fcomp
test
movs
mov
mov
push
mov
pop
pusha
addr16
cli
jle
pop
cld
cmp
aad
pop
aad
jbe
es
ins
push
xor
mov
xlat
loope
stc
adc
test
and
es
pop
sub
mov
cs
jg
mov
pushf
mov
stc
outs
fild
popa
xor
inc
sub
hlt
xor
dec
std
mov
push
mov
and
pop
iret
jmp
jmp
(bad)
out
je
enter
sbb
xlat
jl
add
push
outs
mov
lahf
dec
dec
jae
fild
pushf
ins
loope
push
(bad)
iret
ins
in
sub
mov
xchg
lds
jecxz
icebp
or
jmp
enter
pop
je
pop
push
mov
jl
ficom
test
push
adc
int
aad
cmps
push
xchg
in
arpl
jp
pop
mov
clc
jno
add
cwde
mov
loop
pop
adc
adc
nop
inc
ret
stos
push
pop
scas
mov
push
cld
mov
imul
mov
cdq
mov
clc
daa
arpl
mov
ds
mov
mov
(bad)
jecxz
addr16
or
and
inc
adc
hlt
or
adc
inc
mov
test
add
mov
add
cmp
ins
adc
pusha
inc
cs
data16
xchg
jle
mov
xchg
sahf
scas
mov
and
test
movs
aad
add
mov
jge
mul
test
adc
xor
mov
cmc
sar
mov
cli
shl
push
stc
aad
mov
cwde
dec
push
bound
pop
push
(bad)
pop
(bad)
push
clc
xlat
jmp
mov
dec
test
push
test
test
xor
dec
cld
cmp
es
loope
in
(bad)
aad
and
sbb
(bad)
out
fcmovnb
cmp
mov
pop
xor
nop
mov
fld
sbb
jecxz
imul
ins
(bad)
dec
add
cld
or
mov
xor
ret
jecxz
dec
jl
stc
shr
pop
addr16
lock
in
sub
mov
ins
das
scas
cmc
ret
jae
sbb
pop
mov
fs
hlt
inc
ret
dec
sub
lods
pop
xchg
jns
pop
inc
lods
xor
dec
or
dec
cmp
jae
pop
inc
jo
les
xchg
xlat
xchg
jecxz
in
and
in
movs
cmp
pop
sti
xchg
ss
lods
addr16
in
dec
push
test
xor
mov
in
outs
mov
or
ins
add
std
lock
loopne
pop
out
aas
jmp
add
in
js
in
xchg
rcl
(bad)
retf
sbb
test
into
jns
dec
cmp
inc
cmp
ds
xor
add
cmp
jmp
push
and
pop
(bad)
inc
xchg
fidiv
hlt
jnp
inc
inc
aas
sbb
or
outs
inc
cld
dec
pop
fsubp
outs
cmp
mov
xchg
pop
ret
add
push
add
lods
clc
mov
xor
push
push
fwait
pop
sub
sti
lock
xor
dec
mov
(bad)
fisub
adc
add
cmp
xchg
test
xor
add
sar
push
or
daa
xchg
(bad)
xor
pushf
in
or
ja
fiadd
xor
sbb
data16
fist
dec
and
inc
pop
jmp
push
sbb
std
(bad)
push
and
cmp
adc
out
mov
adc
(bad)
push
jmp
popa
pop
jle
(bad)
unpcklps
mov
ffreep
dec
sub
push
jg
dec
movd
loop
sub
adc
inc
xor
js
dec
(bad)
mov
fwait
hlt
mov
mov
fimul
dec
push
jmp
fs
hlt
mov
retf
hlt
xor
sub
inc
bound
xchg
rcl
shr
sub
push
xchg
icebp
cmp
loope
dec
xchg
(bad)
jne
pop
cmp
in
shl
and
lahf
in
fst
adc
out
mov
push
jb
dec
lods
pop
ret
pop
and
sbb
xor
std
imul
and
add
into
push
dec
cmp
xor
in
pop
popa
scas
xchg
xchg
popf
dec
fsub
mov
pop
push
arpl
std
aaa
movs
lods
pop
push
add
mov
mov
xchg
inc
into
xor
dec
iret
sbb
xchg
jp
dec
adc
ds
and
xchg
clc
mov
fcom
adc
and
scas
ret
adc
repnz
adc
out
dec
push
cmp
fild
fmul
sar
fs
cmc
dec
sub
pop
xchg
js
cmc
pop
dec
cmc
xchg
jnp
movs
or
cwde
mov
ins
ret
test
fidivr
or
scas
inc
pop
cmps
jnp
dec
(bad)
sti
jp
pop
push
xlat
cmp
add
push
lds
jbe
jno
dec
xor
or
pop
or
cmp
adc
fnstenv
test
ins
jb
pop
jmp
or
mov
les
mov
outs
int
mov
call
mov
jmp
mov
fcmovb
aam
pop
xor
xor
xor
adc
jns
mov
(bad)
fld
push
dec
add
xor
ja
or
and
xchg
outs
(bad)
pusha
js
in
inc
cdq
popa
xchg
push
pop
movsx
push
loope
xor
lods
pop
dec
xlat
xchg
jle
outs
pop
shl
mov
repnz
pop
cli
jl
(bad)
inc
into
adc
fdiv
lahf
push
xor
in
scas
mov
mov
hlt
jbe
inc
sar
add
jl
inc
cmp
and
and
(bad)
sti
push
std
or
inc
(bad)
clc
cmp
repz
ficom
pop
loop
out
int
push
push
push
xchg
cmp
inc
inc
mov
out
and
add
mov
(bad)
push
repnz
in
cmps
call
adc
inc
push
mov
(bad)
in
stc
rol
push
cmc
idiv
push
stos
pop
mov
or
shr
mov
xchg
(bad)
shr
or
cs
mov
ror
imul
fisub
jne
shr
push
and
adc
lahf
test
hlt
stos
repz
add
cwde
js
lds
mov
jmp
jbe
aam
adc
movs
mov
aaa
sbb
inc
sub
or
jnp
sti
popf
icebp
sub
ret
stos
or
add
fmul
mov
mov
fs
inc
cdq
add
mov
daa
cs
movs
data16
mov
popf
adc
mov
jb
push
movs
push
pushf
add
inc
push
stos
gs
jp
mov
rcr
push
test
cmp
repnz
rol
stos
xchg
jle
push
or
push
cmc
sbb
(bad)
mov
stc
fisub
out
mov
pusha
in
or
xchg
push
jne
jns
or
and
sar
xchg
call
xchg
cmp
movs
push
cs
aaa
jbe
fcmove
dec
adc
lods
lods
sbb
popf
dec
in
retf
sti
out
inc
mov
jne
mov
jp
addr16
xchg
mov
adc
and
jge
cmp
mov
push
idiv
into
imul
mov
jmp
bound
test
ds
test
sahf
out
mov
mov
daa
adc
cmc
or
jae
loop
mov
sbb
xor
aam
or
sbb
movs
cmps
xchg
vpsadbw
test
pop
ret
enter
ret
cmp
lods
inc
or
xchg
clc
inc
xor
retf
sub
not
sar
or
xchg
jmp
repnz
or
mov
xor
xor
sbb
cmc
cmp
mov
cmp
movs
and
or
(bad)
mov
(bad)
inc
cmp
or
and
sub
daa
int3
bound
repz
and
mov
push
not
cmp
push
inc
ins
dec
cmp
(bad)
xchg
mov
inc
mov
or
das
push
(bad)
icebp
shl
cmp
pop
je
xor
jl
xor
stc
sub
push
movs
or
jbe
dec
mov
pop
jmp
sbb
lahf
and
push
dec
sbb
cmp
je
pushf
add
push
dec
fwait
aas
or
int3
repnz
xor
(bad)
loopne
xchg
xchg
sbb
push
or
shl
ror
adc
cmps
fidiv
cld
(bad)
mov
cmp
pop
mov
or
cwde
pop
mov
arpl
mov
pop
stos
test
or
mov
mov
xor
and
pop
jo
push
(bad)
xchg
cmc
adc
dec
mov
and
icebp
sti
daa
xor
xchg
ja
(bad)
stos
dec
xchg
mov
add
gs
movs
push
call
jno
iret
pusha
jmp
and
mov
cmp
cmp
push
cmp
xchg
and
arpl
fisubr
xor
xchg
movs
call
jmp
mov
icebp
fistp
push
mov
jns
add
imul
cs
jecxz
mov
enter
sub
fst
or
and
sub
sub
xchg
inc
push
fisub
lock
ja
mov
xor
test
sub
arpl
fld
sbb
loopne
or
dec
adc
adc
shr
cld
xlat
sbb
inc
and
das
xor
mov
push
inc
mov
cmp
sti
and
jns
mov
jnp
jmp
xlat
in
push
push
pop
dec
ins
cli
or
cld
jb
ins
xchg
dec
jns
fstp
lahf
mov
or
cmp
mov
mov
adc
enter
outs
fst
dec
inc
(bad)
sbb
ins
and
shl
in
push
and
add
mov
jns
sub
cmp
ficomp
or
(bad)
adc
scas
xor
adc
daa
lock
inc
inc
lods
loopne
pusha
call
ss
xchg
jg
mov
inc
sub
add
retf
lods
xchg
xor
retf
and
and
mov
push
pop
out
(bad)
ret
mov
mov
or
pushf
scas
shl
push
mov
cdq
xor
data16
out
push
clc
push
add
lahf
imul
les
(bad)
rcr
gs
outs
cmp
mov
aad
inc
call
dec
xchg
lock
cmp
sbb
add
retf
hlt
jmp
ins
ds
push
pop
pop
push
adc
inc
dec
dec
cmps
mov
es
sub
push
jl
xchg
adc
popa
lods
cdq
xor
and
pop
xor
ja
push
test
hlt
push
ja
fisttp
in
stos
retf
jno
movs
sub
test
fimul
adc
xor
dec
mov
hlt
lock
push
xor
cdq
ret
dec
sbb
inc
(bad)
sub
sub
mov
dec
daa
xor
push
cmps
aam
call
dec
or
sbb
fild
cmp
and
cmp
lock
inc
cmp
xchg
sbb
mov
xchg
and
inc
xor
or
xchg
arpl
popa
inc
sbb
xchg
sahf
popa
jge
push
in
lods
push
mov
gs
loope
dec
into
jo
js
mov
shl
jle
ins
in
popa
mov
sbb
mov
jns
mov
push
pop
leave
imul
inc
scas
aad
gs
lea
int3
inc
xor
daa
mov
in
mov
lock
push
adc
inc
sti
leave
inc
sub
sbb
sti
je
test
push
(bad)
sub
adc
arpl
cmp
gs
dec
(bad)
sbb
cmp
pop
je
add
rcl
mov
(bad)
movs
jb
cmp
jecxz
inc
ins
outs
push
dec
imul
sub
js
inc
hlt
xchg
aas
sbb
pop
inc
adc
fcomp
xchg
sub
sub
dec
mov
pop
shl
mov
push
outs
es
sub
jg
and
in
in
sub
stos
pop
pop
icebp
popa
add
xchg
out
inc
xchg
xchg
das
aad
stos
xor
cmps
mul
sub
adc
addr16
jnp
pop
sti
(bad)
ja
(bad)
retf
ret
pop
push
imul
int
or
sahf
loopne
pop
imul
fild
and
dec
sbb
ins
rcr
outs
mov
xor
adc
aad
aaa
xchg
stos
mov
push
xchg
mov
ja
fldl2t
scas
mov
xchg
scas
jp
dec
xor
push
mov
jmp
shl
fdiv
idiv
aas
es
arpl
pop
mov
xor
bound
sbb
rol
es
inc
int3
mov
rcr
jl
outs
xor
popa
sti
push
stos
in
shr
sub
inc
mov
inc
xor
sar
xor
mov
and
jb
dec
and
das
xchg
lahf
sbb
sbb
fs
les
jnp
dec
pop
sbb
std
ret
inc
mov
dec
push
jo
cs
popf
enter
sbb
ins
pushf
add
out
xchg
outs
mov
xor
mov
imul
sub
cmp
mov
sub
mov
lods
lahf
xchg
inc
data16
dec
xchg
int
leave
xor
lock
pop
sti
xchg
rcl
cdq
mov
xor
int
ds
fstp
cs
sbb
aaa
(bad)
mov
in
or
and
arpl
cmp
int3
pop
gs
mov
lds
push
test
xchg
mov
loop
inc
dec
mov
xorps
(bad)
sbb
scas
add
ins
stos
mov
aam
test
fwait
outs
movs
and
adc
gs
pop
and
push
ds
lahf
retf
iret
inc
mov
dec
bound
pushf
enter
mov
stos
adc
mov
adc
inc
pop
inc
imul
std
mov
js
xor
(bad)
outs
dec
js
stos
mov
outs
arpl
mov
int3
inc
ins
repz
inc
mov
cmp
add
out
dec
and
cmp
cld
aaa
test
mov
sub
ss
stos
loop
push
rol
cmps
aaa
cmp
sbb
fmul
mul
xchg
push
ret
xchg
pop
(bad)
jo
dec
arpl
xlat
jp
enter
rcl
in
arpl
jp
and
sub
loopne
je
loopne
ja
aaa
aad
mov
or
pop
das
cs
ror
pop
xchg
repz
mov
or
inc
mov
imul
and
jne
hlt
or
call
or
inc
sahf
fmul
mov
sar
mov
les
ja
mov
shl
xchg
in
add
mul
fwait
call
jne
clc
pop
xchg
pop
push
jmp
scas
in
fiadd
add
sub
in
adc
test
sti
sbb
pusha
mov
imul
cmp
xchg
jb
or
gs
ins
in
or
scas
lods
fiadd
fimul
push
lods
sub
pop
inc
or
pop
mov
sahf
inc
xchg
cmp
push
jmp
(bad)
adc
das
jo
fdiv
gs
mov
sbb
sti
and
jns
in
jb
jnp
sub
fsub
aam
in
and
test
aam
sub
or
in
or
and
bound
repnz
fbld
jbe
jbe
jb
xor
retf
inc
les
test
pusha
xchg
icebp
sbb
sub
xor
test
mov
sbb
shl
fiadd
add
cmp
add
mov
ins
and
mov
mov
out
mov
bound
cmp
ins
xchg
pop
xor
rcr
rcl
jo
dec
sbb
mov
and
cmc
ds
fld
adc
jmp
cmp
das
xchg
pusha
jno
cwde
inc
(bad)
das
aad
or
jnp
mov
or
std
mov
retf
popf
sub
sar
add
repz
cmps
nop
cmc
sub
pop
(bad)
enter
mov
dec
retf
xchg
push
test
dec
ja
bound
out
test
inc
pushf
pop
jmp
mov
rol
sbb
pop
pop
mov
mov
and
in
mov
mov
in
aad
addr16
repnz
hlt
mov
repnz
fcom
dec
movs
addr16
fisttp
nop
mov
ins
clc
add
sbb
pop
adc
fsub
jo
ret
xor
jecxz
arpl
sar
cmp
mov
sti
sub
xor
out
not
fbld
mov
mov
and
(bad)
scas
test
iret
jo
daa
add
pop
add
jecxz
cmps
loope
jne
ret
xor
(bad)
cmp
sbb
sub
sahf
sbb
rcl
jns
mov
jg
leave
jge
adc
rol
add
iret
mov
movs
xchg
not
xchg
cmc
or
and
jmp
clc
adc
popf
mov
mov
(bad)
and
inc
mov
add
retf
sahf
cmp
test
add
or
push
test
iret
dec
jb
lea
es
retf
pop
sar
jl
ss
imul
push
imul
stc
idiv
xor
cld
sub
in
add
xchg
xchg
or
add
not
clc
inc
inc
pop
sub
test
repnz
dec
inc
or
push
jmp
xlat
scas
mov
mov
xor
xchg
lods
popf
pop
out
pop
pushf
jmp
mov
pop
mov
aas
stc
sbb
xchg
sbb
dec
jns
xchg
mov
sbb
and
dec
jb
repz
sub
or
test
leave
dec
out
and
pop
cld
xchg
xor
bound
add
pop
mov
retf
jmp
retf
mov
and
mov
push
test
(bad)
aam
xchg
lods
out
jg
xor
mov
jecxz
retf
cmp
xchg
dec
mov
mov
cmc
dec
test
addr16
fsub
and
or
mov
xchg
ss
mov
xor
jl
lock
pop
outs
pushf
cmp
aaa
cmp
out
or
or
popf
sub
imul
fwait
mov
xchg
jge
arpl
cmp
dec
push
pop
mov
lds
mov
into
pop
cmc
inc
pushf
cld
mov
jb
icebp
rcl
jmp
addr16
and
or
dec
ret
fimul
xchg
loopne
scas
inc
stos
es
iret
scas
(bad)
and
js
mov
mov
shl
(bad)
push
(bad)
cmp
cld
mov
es
and
dec
sbb
pop
rcl
jo
sbb
fidiv
inc
cmc
lods
ss
pop
dec
xor
xor
adc
call
in
pushf
cwde
xor
inc
dec
push
test
push
jo
adc
in
cmp
fwait
stc
scas
mov
jp
adc
xor
sub
rcl
mov
or
adc
fst
mov
fcmovu
mov
ror
iret
mov
movs
jno
(bad)
inc
inc
pop
jne
into
sub
aam
add
dec
(bad)
in
jge
mov
jno
sub
and
scas
sbb
hlt
out
jmp
scas
out
mov
xor
and
jb
inc
jmp
and
arpl
jne
xor
xchg
sbb
adc
inc
sbb
hlt
test
popa
mov
bound
mov
fisubr
(bad)
cmp
xor
ret
pop
fs
js
ja
push
pop
and
movs
dec
out
jo
out
pop
adc
xor
iret
aad
adc
xchg
adc
or
movs
pushf
std
cmp
cdq
test
das
push
mov
xchg
mov
lock
clc
ins
mov
add
pop
ret
push
and
jle
cmps
or
and
dec
push
push
popf
lock
movs
pop
mov
das
pop
and
pop
dec
imul
mov
adc
shl
fcomp
shl
in
xchg
test
out
mov
or
xor
(bad)
aad
xchg
shr
cmp
and
pop
jecxz
psadbw
push
(bad)
hlt
mov
and
push
arpl
nop
push
in
and
leave
loop
pop
movs
adc
push
shl
dec
jecxz
pop
mov
ds
daa
lea
fwait
movs
dec
adc
popf
pop
arpl
test
retf
add
jbe
dec
inc
stos
pushf
data16
jb
sub
(bad)
into
pop
call
pop
sub
je
adc
mov
imul
lods
inc
mov
mov
lock
lock
daa
outs
sahf
iret
imul
arpl
mov
push
cmp
ret
xor
fisub
push
add
sub
add
adc
push
push
and
ja
je
lock
daa
stos
dec
xchg
ds
jl
aad
loopne
fsub
fnstsw
and
xor
push
aas
in
arpl
pushf
jb
cld
sar
fdiv
gs
pop
aas
lods
mov
inc
mov
adc
iret
pop
sub
fsub
mov
not
jb
out
int
sbb
mov
fcomp
fiadd
je
es
retf
pop
gs
call
mov
xchg
outs
out
sub
sti
push
ret
pop
popa
push
cmp
jp
dec
int3
inc
outs
mov
fnstcw
add
xor
xor
mov
stos
das
jno
and
mov
dec
dec
mov
loope
out
mov
out
cmp
mov
sub
pop
test
mov
pop
mov
repnz
bound
fs
mov
ss
sahf
call
jae
sbb
and
mov
lock
outs
pop
cmps
sub
dec
lock
(bad)
out
xchg
ja
fidiv
mov
lods
cld
sub
xchg
xor
pop
shr
add
call
mov
cmps
push
mov
sbb
clc
pop
inc
sbb
shl
fwait
mov
pop
ins
sbb
adc
(bad)
dec
jnp
and
cli
(bad)
popf
push
push
mov
cmp
xchg
movs
ret
pushf
jo
mov
jg
repz
sbb
arpl
rol
pop
jl
es
movs
push
xor
inc
aas
es
lods
pusha
fwait
sbb
sbb
add
fld
sbb
sti
cmp
pop
sub
arpl
pop
(bad)
icebp
call
idiv
mov
into
cmps
int
out
push
push
mov
mov
pop
xor
es
pushf
or
leave
ja
inc
lahf
shrd
clc
rol
mov
push
mov
std
xchg
xor
aad
pop
pusha
and
inc
sub
pop
jne
test
les
or
jns
popf
gs
inc
inc
xchg
and
sub
jae
jle
push
push
frstor
test
in
pop
lds
sub
cli
mov
xchg
push
int3
push
sbb
xchg
ret
outs
gs
int
or
lds
jl
xchg
(bad)
cmc
cmc
or
div
sub
les
sbb
inc
mov
xchg
into
adc
push
push
retf
dec
add
cmp
xor
dec
jmp
push
xchg
sub
(bad)
xchg
test
iret
minps
sti
cmc
add
neg
fucomi
add
jp
stos
push
cmps
mov
nop
lods
test
add
rcl
stos
mov
xor
jl
std
(bad)
out
mov
inc
inc
ror
bound
loopne
scas
sbb
push
xor
cmp
lods
adc
sbb
sub
clc
out
pop
icebp
fisubr
gs
dec
xlat
add
dec
mov
pop
mov
and
in
jbe
cmps
out
mov
dec
adc
jb
in
clc
mov
icebp
sahf
push
les
(bad)
mov
loop
fwait
aam
add
lods
add
jo
imul
add
scas
stos
hlt
add
mov
leave
loopne
pop
imul
or
in
test
cwde
(bad)
sar
rcl
mov
jne
clc
loopne
ds
push
aaa
in
inc
pop
(bad)
xchg
mov
cmp
inc
add
pop
aaa
(bad)
aad
in
jnp
dec
loope
repz
pop
dec
xor
pop
xor
dec
aam
pop
test
addr16
mov
(bad)
cmc
sub
mov
je
test
popa
mov
movs
push
mov
scas
cmp
pop
mov
jecxz
shr
gs
push
xlat
fbld
pop
loop
popf
(bad)
(bad)
mov
movs
dec
push
mov
xor
add
fdiv
stos
leave
das
adc
add
ja
cmp
rol
test
sbb
test
mov
cmp
fstp
fisubr
push
jle
push
imul
aas
xchg
outs
cwde
mov
jmp
fwait
sub
popa
or
call
fabs
loop
outs
inc
and
aad
push
mov
lods
jg
les
lds
scas
or
jp
sbb
inc
and
cmp
pushf
fisub
sbb
js
fstp
daa
inc
pop
int3
sub
xchg
aam
test
jbe
sahf
and
cli
shr
call
jno
adc
adc
add
outs
nop
cmps
sbb
(bad)
push
jno
push
pop
fistp
pop
outs
(bad)
ficomp
pop
sub
xchg
inc
mov
push
(bad)
sbb
and
cmp
dec
jmp
add
sbb
ret
or
mov
aad
enter
fisubr
push
jg
adc
nop
test
push
cmp
leave
sub
xor
addr16
mov
and
ins
xchg
mov
pusha
call
xchg
pop
mov
push
pop
pop
sahf
and
and
xchg
push
inc
mov
cld
loop
gs
div
fwait
jmp
fsub
out
icebp
outs
ret
push
sbb
mov
icebp
jno
xchg
mov
gs
lods
add
or
pop
ins
rcr
outs
mov
or
pusha
sub
jnp
setns
push
arpl
leave
out
int
fidiv
dec
sub
jmp
scas
push
cli
lods
mov
mov
mov
push
adc
xchg
in
and
mov
in
mov
dec
outs
pop
(bad)
or
ja
int3
jle
in
rcl
ret
jg
inc
add
xchg
outs
popa
lods
fucomip
and
pusha
mov
stc
inc
pop
stos
add
mov
nop
scas
xor
inc
or
add
jmp
shl
(bad)
aam
and
jle
outs
fadd
dec
lds
mov
pop
mov
jo
cmp
or
ficom
add
in
pop
jge
(bad)
rol
daa
js
xor
push
iret
pop
jp
enter
or
dec
js
fisub
pop
aad
jecxz
jmp
(bad)
repz
jno
jle
ficom
mov
addr16
mov
push
mov
sti
int
inc
ins
sbb
mov
arpl
out
lods
add
(bad)
addr16
daa
outs
lea
mov
arpl
push
pop
pop
mov
lea
push
cli
jb
mov
(bad)
cmp
iret
stos
pusha
movs
cmp
stos
mov
aam
enter
inc
push
sbb
fs
or
cwde
mov
in
sub
mov
or
neg
jg
inc
adc
scas
movs
dec
xchg
ret
pop
mov
cmp
stc
outs
and
int
or
jmp
daa
fbld
add
cmps
xlat
jae
mov
cmc
mov
pop
scas
push
aas
push
push
sub
sar
dec
aam
sbb
sti
das
inc
pop
retf
fldlg2
in
xor
aad
mov
call
adc
sub
je
into
mov
sti
ret
rol
popa
xchg
add
les
push
mov
mov
fdivr
mov
pop
cdq
out
jnp
cmp
pop
pop
test
gs
fadd
ds
int
mov
sbb
jno
xor
aas
adc
jecxz
or
cmp
and
call
mov
cmp
int
cmc
mov
jmp
dec
out
sbb
cmc
add
(bad)
out
ss
ss
push
test
in
sti
rol
mov
pop
jmp
push
call
add
leave
sub
sub
inc
pushf
add
sub
cmp
hlt
lods
mov
xchg
fstp
xor
pop
nop
mov
cmp
adc
ja
and
fcom
inc
or
mov
pop
dec
sbb
mov
(bad)
mov
in
adc
js
jbe
push
icebp
test
cld
mov
in
dec
pusha
xor
fisub
stc
mov
test
shl
jmp
mov
scas
xchg
test
and
mov
ins
pop
lahf
push
mov
call
mov
scas
aam
mov
lahf
xor
dec
jo
icebp
repnz
push
sub
fst
call
sbb
push
mov
and
stc
add
cmp
scas
out
loopne
test
jne
js
fnstsw
adc
inc
loopne
loope
imul
adc
sub
dec
inc
iret
or
pushw
aad
sbb
popf
popa
dec
hlt
lock
cli
cmp
lods
mov
imul
mov
ins
mov
jmp
out
xor
icebp
and
fwait
in
mov
jae
popa
xor
sbb
push
sbb
into
out
sub
ret
test
loope
lock
dec
and
js
arpl
clc
mov
mov
and
add
mov
mov
adc
cwde
int3
cs
mov
lahf
nop
call
test
retf
or
xor
ret
cwde
sbb
push
inc
je
lock
aas
cs
rol
xchg
sub
xor
xor
adc
xchg
cmp
outs
lea
and
call
ret
dec
xchg
push
sub
mov
cmp
jle
sbb
jg
int
mov
in
into
push
movs
xchg
mov
mov
arpl
xchg
pop
cmps
sbb
jno
loop
add
(bad)
sub
or
mov
push
pop
xor
(bad)
sbb
outs
xchg
stc
and
push
add
mov
jae
movs
mov
shl
int
aad
pop
add
in
fwait
pop
cdq
repz
mov
call
mov
sbb
mov
mov
fwait
lea
int
sti
aas
add
arpl
clc
lahf
movs
dec
movs
lahf
mov
div
icebp
sub
add
adc
and
inc
or
adc
and
jae
jns
push
sbb
mov
pop
mov
daa
adc
inc
or
lock
ins
mov
mov
mov
jge
jnp
icebp
mov
fnstcw
dec
loopne
push
xor
cmp
aam
add
pop
jecxz
mov
retf
sub
sar
xlat
cmp
xchg
je
cmps
popa
gs
push
lods
hlt
addr16
dec
jnp
sbb
cmps
sub
test
outs
sbb
inc
adc
jp
sti
fidivr
and
adc
jns
and
dec
or
pop
jo
xor
loop
pushf
or
js
mov
test
xlat
dec
lock
dec
sub
cmps
aaa
mov
xor
mov
pushf
jnp
stos
pop
jecxz
icebp
faddp
xchg
add
jns
test
dec
mov
xchg
push
sub
adc
push
jmp
rcr
(bad)
sub
xchg
inc
dec
xchg
(bad)
or
dec
push
mov
sub
mov
shl
adc
loope
adc
cmp
push
leave
mov
inc
fsub
cmp
mov
cmps
mov
nop
imul
cdq
inc
sbb
les
cld
mov
(bad)
mov
or
(bad)
hlt
xor
les
int
push
add
add
or
adc
jmp
jl
addr16
(bad)
and
js
jle
sbb
adc
sbb
hlt
rcr
fdivr
inc
pop
mulps
push
loopne
in
fnstsw
or
cmp
xchg
int
dec
ror
or
sbb
leave
sub
adc
ja
sub
mov
jle
xchg
jo
push
je
sbb
(bad)
leave
inc
xor
daa
cmp
mov
aad
enter
and
arpl
outs
jge
cwde
push
jg
aad
sub
mov
adc
adc
mov
test
sub
rcr
add
dec
inc
stc
ret
jmp
sahf
and
cmp
mov
adc
mov
mov
clc
inc
mov
mov
jno
inc
push
add
call
mov
xor
imul
add
and
ss
ins
mov
aas
xchg
ss
out
cmp
sub
rol
mov
or
adc
retf
loop
daa
(bad)
imul
and
xchg
ret
int3
daa
ret
test
mov
xchg
mov
loopne
push
cmp
inc
fcomi
cmp
mov
cmps
push
mov
mov
push
jge
jg
add
pop
xor
inc
sahf
scas
int3
rcr
mov
mov
xchg
pop
idiv
jno
cld
mov
ins
inc
mov
and
leave
fsqrt
mov
mov
in
test
xor
(bad)
adc
fbld
jmp
ret
pop
out
aaa
xor
and
in
jnp
lea
cmc
outs
inc
push
mov
mov
ror
jmp
out
ret
sbb
inc
xor
or
add
sbb
inc
jecxz
push
pop
out
xchg
shr
jl
jmp
dec
cs
aad
pop
imul
ins
gs
jge
sbb
popf
sahf
fcomp
shl
gs
cli
test
in
ret
inc
aam
fnstcw
sbb
pushf
dec
dec
mov
hlt
fscale
fisub
fstp
rol
dec
popa
push
loope
jg
mov
mov
retf
and
pop
cmps
inc
test
sahf
neg
cmp
gs
or
push
pop
cmp
adc
push
into
adc
ss
into
xchg
sbb
mov
mov
jge
mov
push
add
sub
fdivp
push
test
dec
xchg
lock
aas
pop
retf
arpl
or
push
scas
ja
xchg
leave
mov
add
inc
adc
mov
jae
jo
mov
(bad)
mov
call
dec
sti
add
push
test
jae
mov
cmp
pusha
mov
pop
or
es
xor
xchg
fidivr
xor
repz
push
mov
mov
fldcw
or
inc
rcr
add
adc
inc
pop
dec
sub
pop
pop
pop
adc
imul
mov
fisub
outs
fisttp
dec
outs
stos
dec
sbb
in
mov
retf
adc
in
pop
daa
or
pop
stc
mov
call
cmps
int3
es
jno
jne
cmp
add
ja
rcr
jecxz
pop
les
add
and
sbb
mov
cmp
push
int
inc
xor
daa
push
xchg
ficomp
leave
push
mov
out
push
and
sbb
ins
rcr
inc
daa
lods
gs
and
in
adc
adc
adc
inc
jp
shl
push
mov
sub
push
loope
imul
addr16
rcl
jo
(bad)
push
sahf
or
jno
xchg
cmp
jne
int
stc
xor
sub
out
adc
retf
and
mov
fsub
pusha
mov
mov
das
js
mov
mov
push
shl
retf
loope
stos
mov
inc
xor
and
sbb
popa
and
add
es
jno
ja
fild
add
xchg
inc
add
test
mov
cli
mov
hlt
pushf
add
imul
cmp
mov
stos
mov
enter
mov
lods
hlt
fst
popf
int3
jp
inc
loopne
push
cmp
cmp
mov
mov
jno
adc
cs
arpl
jp
sub
ret
push
movs
loop
xor
adc
mov
in
pop
push
addr16
cmps
jle
adc
xor
mov
jl
jno
ds
and
mov
repnz
adc
ins
call
iret
mov
pop
loope
xlat
mov
test
test
push
inc
sahf
mov
jmp
(bad)
aad
lahf
mov
fs
xchg
ret
mov
(bad)
fdivr
rcr
push
xchg
pop
sbb
aas
inc
and
sub
add
test
sub
mov
ja
and
loop
mov
push
sbb
fcomp
retf
movs
call
push
inc
sub
and
and
in
ds
(bad)
clc
mov
jp
cld
retf
mov
sbb
jb
xchg
mov
inc
movs
ficom
rcr
sbb
xchg
xor
push
cmp
add
xchg
ds
or
stos
stc
repnz
xchg
mov
call
sub
ds
arpl
nop
cmp
xchg
cdq
and
mov
add
lock
leave
hlt
jmp
pushf
loope
adc
and
pop
pop
push
xchg
or
push
push
pop
jb
loope
push
loopne
bound
pop
call
outs
jg
pushf
(bad)
shl
fidivr
mov
(bad)
into
mov
sub
jb
jo
fwait
pop
or
jge
cmp
xchg
outs
shl
dec
in
sbb
(bad)
push
mov
push
outs
jl
jg
ins
lods
push
xchg
or
xchg
test
imul
or
dec
test
(bad)
popf
xlat
pop
mov
sub
jns
js
idiv
adc
addr16
lea
fild
cmps
jle
sti
add
sub
adc
outs
xchg
push
aad
jp
retf
test
lods
test
mov
neg
mov
mov
or
gs
add
and
inc
cmp
cli
icebp
cdq
call
mov
out
les
test
mov
xor
aas
sbb
inc
sahf
scas
(bad)
pushf
push
inc
jle
jl
nop
js
inc
push
fisubr
call
pop
pop
mov
std
icebp
mov
fmul
aas
adc
js
aad
(bad)
xchg
pop
xor
inc
ins
add
sub
js
lea
stc
cdq
shl
inc
test
push
out
adc
mov
push
mov
stc
aaa
mov
add
xchg
mov
scas
retf
dec
mov
stc
pushf
or
fmul
dec
pop
mov
cmps
xor
int
mov
and
xchg
inc
adc
and
ret
jp
mov
shl
bound
das
and
cmp
jno
pop
ins
sbb
pop
into
mov
xchg
movs
dec
pop
mov
lahf
jno
push
ins
pop
retf
enter
aaa
shl
pop
dec
icebp
(bad)
push
mov
das
mov
lahf
mov
jmp
xlat
push
xor
loope
imul
aam
iret
jo
sbb
pop
mov
ja
sbb
into
shl
jmp
call
shl
ret
xchg
jne
pop
adc
cmp
adc
mov
pop
jb
xor
mov
pop
mov
fisttp
push
xor
rcr
ret
cmp
in
repz
int
sub
and
sbb
inc
daa
sahf
mov
xchg
loope
push
sub
call
retf
mov
lahf
mov
std
lahf
cdq
dec
jbe
sub
cmp
ins
ins
dec
movs
mov
pop
mov
gs
jecxz
push
add
push
dec
mov
js
mov
push
sti
jecxz
mov
js
push
out
jne
rol
or
mov
cwde
scas
pop
iret
xchg
jl
test
push
add
mov
mov
lea
loop
xlat
hlt
enter
xor
dec
loopne
lock
inc
cmps
inc
push
pop
mov
scas
cmp
adc
pop
(bad)
sub
pop
fcomp
mov
lods
lahf
jnp
shl
popa
in
ret
sbb
push
in
loopne
or
dec
pop
cwde
retf
add
jne
les
push
pushf
adc
sbb
je
into
sbb
mov
movs
pop
sub
xchg
mov
add
mov
jnp
inc
(bad)
mov
stos
xchg
movs
xor
pop
jnp
dec
fadd
hlt
dec
rol
dec
push
xchg
jp
mov
pop
mov
call
retf
pop
dec
rol
push
jle
fldcw
cmp
cmp
ins
or
imul
jle
mov
fisubr
cmp
scas
leave
and
push
mov
cmps
or
fsubr
push
ds
test
xchg
ins
adc
mov
xchg
fiadd
jo
or
int3
pop
mov
sbb
xchg
lahf
xchg
add
fadd
push
cmps
into
xor
das
push
fwait
addr16
pop
jne
pop
sbb
repz
iret
pop
in
loop
inc
popf
in
mov
(bad)
daa
jae
loope
push
pop
cmp
retf
imul
or
dec
pop
mov
hlt
ds
pop
xchg
lods
inc
sbb
fwait
xchg
shr
jbe
jne
or
test
push
mov
pop
cs
and
iret
(bad)
fisubr
call
dec
test
popf
sub
lods
inc
add
xchg
pushf
fnstenv
cmp
adc
test
cs
inc
pop
outs
aaa
pop
movs
push
outs
and
push
es
cli
movs
or
pop
scas
stc
fwait
cmps
jmp
shl
dec
cmps
sub
add
out
mov
adc
test
test
sbb
jo
mov
gs
int3
sub
push
in
(bad)
mov
push
pop
jl
and
jp
cs
sbb
sub
imul
cld
popf
xor
jbe
dec
sbb
stc
pushf
fwait
jbe
dec
push
jns
sub
lock
enter
jg
pushf
jl
xchg
js
mov
in
push
mov
retf
pop
pop
cdq
popf
xor
dec
sub
push
lahf
xor
into
aad
jl
lahf
push
jmp
es
stos
aam
xchg
xor
push
jle
pop
inc
and
adc
pop
cmp
test
or
adc
sti
jg
lea
pause
jmp
rol
xlat
fidivr
rcl
mov
sbb
push
jb
inc
xchg
daa
(bad)
in
jp
(bad)
ss
into
(bad)
loop
stos
xor
cmp
popa
iret
mov
sbb
xchg
icebp
mov
movs
mov
jno
xchg
jne
call
fst
loopne
cmc
pusha
xchg
movs
xchg
sub
pop
dec
xchg
shl
or
or
pop
mov
ja
stos
cmc
pop
loop
mov
mov
(bad)
sbb
cmps
jmp
mov
pop
xor
or
add
mov
retf
fcom
pop
fldcw
js
fcmovne
dec
adc
and
sbb
dec
pop
dec
jge
clc
int
fisub
movs
adc
mov
dec
lahf
xor
jmp
shl
dec
(bad)
mov
fidivr
xchg
sub
gs
xlat
push
arpl
mov
add
pop
cmp
push
push
mov
pushf
mov
xor
out
jae
jbe
movs
mov
daa
ucomiss
inc
lea
ins
jb
call
adc
dec
dec
xor
xor
dec
pop
jp
mov
sbb
sub
dec
dec
pusha
mov
mul
mov
repz
mov
sbb
push
retf
and
mov
fisttp
fnstcw
popf
retf
sahf
xchg
in
(bad)
je
adc
pop
xor
mov
mov
stos
xchg
sub
adc
inc
(bad)
jge
ret
xor
arpl
mov
outs
jns
inc
inc
mov
out
xchg
cli
adc
enter
dec
(bad)
aaa
xlat
ins
xchg
sbb
fbld
xchg
xchg
lea
xchg
push
push
adc
stc
pop
movs
sbb
inc
sub
call
shl
jnp
test
out
xchg
or
ins
add
xchg
mov
jb
push
jmp
jecxz
mov
int
loop
jmp
cmps
push
pop
imul
(bad)
shr
cwde
(bad)
mov
in
push
pop
fisubr
enter
fucom
in
lea
cmps
mov
jb
retf
jecxz
jecxz
test
xchg
mov
cmc
test
int3
pop
jb
sbb
xor
sbb
and
inc
mov
xor
sti
das
push
or
cmp
int3
retf
daa
fs
je
std
cmp
jne
adc
push
(bad)
in
push
int
mov
cwde
in
jecxz
jg
call
push
xchg
and
mov
(bad)
int3
jne
lods
xor
in
mov
shl
push
xchg
sti
xor
movs
shr
fsubr
nop
dec
ds
movq
xchg
leave
inc
bound
dec
cmp
push
jns
mov
jbe
sti
dec
ins
mov
and
push
int
pop
or
mov
sub
test
test
cmp
inc
mov
xor
cmps
dec
cmp
dec
loope
and
push
gs
cld
jb
or
adc
inc
pop
loope
or
pop
mov
jmp
test
jg
dec
je
ret
mov
sbb
sbb
mov
sbb
push
imul
in
jne
or
adc
mov
mov
aad
cld
inc
call
mov
add
and
ja
mov
mov
cli
mov
pop
mov
cmp
lods
jmp
scas
mov
jl
fmulp
and
cs
push
dec
ja
in
jle
xor
jle
fwait
(bad)
cli
adc
data16
gs
daa
lods
and
jge
dec
add
imul
in
inc
mov
mov
mov
sbb
dec
fiadd
les
rcl
push
cld
mov
cdq
xor
addr16
and
test
test
cmp
mov
push
pop
xor
push
jbe
add
imul
scas
and
xchg
push
stc
mov
dec
adc
cwde
jo
sbb
sub
in
lahf
cld
enter
fwait
imul
mov
in
inc
outs
dec
xor
xlat
push
inc
std
ds
mov
cmps
jmp
jp
cmp
sub
scas
sub
add
add
out
jb
push
pop
jb
lds
inc
mov
dec
int3
sub
adc
mov
test
dec
jo
dec
mov
and
and
cmps
mov
addr16
xor
and
push
loope
loopne
lahf
cmps
(bad)
cwde
cli
sub
aaa
aaa
repnz
mov
jmp
fld
xchg
sti
adc
inc
fs
sub
arpl
sub
sub
ret
xchg
out
lods
dec
aaa
mov
enter
dec
push
bound
clc
int
mov
add
and
(bad)
imul
add
cmp
aas
movs
loope
mov
xlat
jmp
mov
ja
pop
push
scas
push
push
lahf
rcl
movzx
push
lea
fild
jo
or
or
add
(bad)
cmp
push
cmp
jmp
xchg
into
pmullw
xchg
adc
xchg
test
adc
xor
cwde
xor
loopne
imul
sbb
jle
(bad)
cmp
ret
sub
jo
mov
addr16
sbb
std
aad
inc
ins
shl
out
mov
dec
pop
push
shl
adc
retf
sar
std
cmps
repnz
inc
jle
mov
cmps
xchg
pop
adc
in
sub
or
fdiv
cld
and
cmc
(bad)
and
sub
icebp
(bad)
out
jecxz
push
popa
cmc
mov
add
cs
test
mov
cmp
mov
inc
stos
jnp
pop
ins
ret
sub
outs
jb
push
call
pop
pop
cmp
loope
push
push
into
mov
pop
mov
or
mov
lahf
pop
push
and
push
hlt
mov
mov
out
mov
pop
add
pop
xor
xor
test
cmp
mov
mov
shl
in
stos
inc
mov
pop
leave
loope
push
adc
js
xor
cwde
in
mov
lods
jnp
inc
mov
push
cmp
mov
xlat
pop
fidivr
in
(bad)
aam
stos
push
cmps
xor
in
push
hlt
or
mov
push
pop
retf
popf
retf
rcl
push
push
sahf
fstp
mov
sub
(bad)
je
mov
push
sahf
dec
pusha
mov
pop
mul
in
mov
outs
popf
mov
push
jns
repnz
sti
mov
in
inc
pop
mov
fwait
mov
push
pop
sti
jne
push
cmps
repz
repnz
std
pusha
or
mov
mov
outs
call
dec
fdiv
lahf
shr
push
test
out
sub
movs
mov
and
outs
mov
xor
xchg
jge
mov
adc
adc
outs
and
pop
inc
mov
adc
add
sub
xor
push
pop
mov
pop
inc
xchg
mov
adc
sti
scas
into
sbb
dec
stc
xlat
push
mov
xchg
mov
cmp
fbstp
int
scas
jo
inc
xor
cdq
pop
test
repz
repz
jge
push
sub
sub
jle
push
sbb
mov
cmp
xchg
xchg
(bad)
inc
mov
or
sub
mov
ins
adc
jmp
inc
das
sub
test
cmp
xor
in
scas
fwait
fwait
shr
retf
adc
jno
adc
sbb
mov
push
add
out
in
fnstcw
sub
pop
out
mov
jo
mov
jo
mov
xor
sub
jbe
retf
ret
dec
adc
sub
pop
jmp
mov
and
fucomip
test
lods
in
add
out
adc
enter
add
xor
imul
xchg
pop
dec
ffreep
bound
fwait
xor
inc
(bad)
add
jns
sub
dec
push
mov
xchg
jns
cmp
lods
pop
mov
cmc
jmp
in
std
retf
pop
mov
mov
jg
sbb
mov
(bad)
(bad)
push
add
jnp
mov
mov
sbb
mov
xchg
cmp
jmp
inc
xchg
in
mov
inc
add
or
sub
sar
add
cmp
lea
in
cmp
(bad)
sbb
inc
(bad)
ret
sbb
lods
adc
push
fdivr
movs
xchg
lea
push
sub
(bad)
nop
push
dec
retf
mov
imul
fcmovbe
cld
pop
int3
cmps
pop
cld
pop
or
clc
ins
jmp
(bad)
xchg
loope
bound
jae
and
clc
mov
push
(bad)
loopne
in
pop
push
and
pop
lds
xor
nop
lock
sti
mov
int
iret
or
dec
pop
je
data16
xor
not
loop
mov
nop
inc
mov
jae
mov
jae
mov
push
call
fisub
cs
push
mov
(bad)
scas
or
inc
mov
pop
in
dec
addr16
jp
ins
arpl
push
sbb
add
stos
dec
sub
out
retf
or
bnd
or
out
fdiv
push
cmc
xlat
mul
lahf
cmp
test
ds
cdq
and
ins
push
xor
out
stos
mov
push
sub
or
jmp
lea
movs
addr16
leave
sahf
in
mov
(bad)
jno
and
pop
push
inc
outs
xor
into
xor
cmc
sub
lods
push
push
inc
shl
shl
push
faddp
xchg
idiv
es
outs
shl
mov
jmp
daa
ins
shl
iret
repnz
push
adc
lock
xchg
mov
(bad)
pop
in
sub
xchg
mov
mov
mov
cmp
cs
jge
sub
mov
popa
ja
push
mov
shr
ret
jno
pop
int
dec
jle
fdivr
pop
mov
test
mov
test
(bad)
sub
inc
xchg
fld
stos
dec
cwde
pop
jae
sbb
xor
retf
xchg
jne
mov
inc
rcr
clc
movs
std
dec
mov
dec
mov
xchg
dec
and
leave
dec
leave
sbb
test
cmp
or
mov
add
jle
pop
cld
imul
(bad)
sub
pop
cmp
stc
xor
jno
pop
add
mov
fs
inc
lods
dec
push
jmp
xor
repnz
(bad)
ds
push
lahf
mov
lea
ja
daa
cmp
inc
xlat
push
iret
push
or
xor
cmp
pusha
jne
rol
das
sbb
das
in
mov
mov
jge
fld
inc
aaa
aad
pop
retf
push
push
(bad)
xchg
inc
fnstcw
iret
retf
sbb
mov
sbb
call
pushf
int3
jno
pop
imul
adc
pop
dec
mov
cmps
add
test
jmp
sbb
cmp
pop
jae
xor
sub
mov
aas
push
push
call
lea
arpl
cdq
mov
dec
out
lock
mov
push
scas
ret
sub
scas
ret
pop
fucomp
jne
sub
jmp
cmp
push
ins
sub
imul
dec
dec
push
test
out
pop
add
push
cs
(bad)
addr16
xchg
xchg
lds
jae
aam
rol
fist
repz
pop
cmc
mov
outs
(bad)
push
icebp
push
mov
mov
add
push
mov
sub
push
xchg
cmp
cmp
aad
mov
dec
stc
fld
daa
test
das
mov
ret
jb
sahf
inc
adc
adc
push
outs
jb
faddp
shl
pop
xchg
inc
xchg
or
dec
js
adc
add
or
mov
lock
mov
push
out
jbe
out
sub
shl
stos
xor
mov
ss
dec
fs
push
mov
js
mov
lods
test
jecxz
fimul
jecxz
dec
nop
out
shl
iret
push
add
mov
sbb
in
xor
(bad)
aas
aad
pop
shl
in
push
aas
inc
sti
imul
ins
stos
cmc
clc
dec
dec
clc
(bad)
sbb
sti
inc
arpl
ret
bound
dec
ficom
ret
dec
fistp
test
cld
jmp
xchg
xchg
mov
mov
push
xchg
js
scas
into
push
sub
pop
mov
inc
aaa
test
pop
push
ret
inc
inc
sub
std
popa
adc
inc
pop
(bad)
push
dec
mov
fld
sub
mov
inc
inc
or
int3
or
in
push
pop
enter
jo
repz
mov
cmps
jl
mov
cmp
ins
push
cmp
mov
and
xchg
lsl
jecxz
jmp
xlat
es
in
pop
xchg
cmp
dec
push
test
or
clc
dec
and
stos
sub
and
cmp
pop
int
pop
pop
dec
inc
push
(bad)
sti
mov
add
out
test
(bad)
je
jnp
fucom
mov
fcom
push
adc
or
sbb
sahf
inc
fbstp
inc
sbb
or
xor
mov
pop
push
and
addr16
inc
ins
add
mov
sbb
in
jns
mov
xor
xchg
arpl
lods
mov
shr
cmp
test
pop
xor
daa
adc
gs
inc
sub
mov
jecxz
cmps
mov
mov
mov
and
int3
pop
cmps
cdq
out
cmovo
daa
mov
dec
int3
xor
jle
cmp
and
leave
inc
icebp
cmps
ret
(bad)
shr
test
in
aad
jecxz
or
bound
pop
cs
mov
ror
or
dec
pop
xor
mov
push
xor
mov
mov
mov
xchg
sbb
test
test
xchg
jmp
sti
sbb
into
inc
scas
push
mov
cmps
jbe
dec
and
push
jmp
loop
or
xor
stos
push
jg
jne
scas
mov
or
mov
(bad)
pop
fidivr
cwde
mov
inc
(bad)
and
jle
pop
xor
and
xor
inc
sub
lea
(bad)
mov
in
jnp
push
int
ja
jg
inc
push
leave
push
jo
push
cmc
cwde
ss
xor
sub
inc
aas
fild
lods
arpl
pusha
inc
push
cmc
sub
sar
sti
add
call
jmp
inc
cmp
inc
xor
int3
inc
inc
xchg
lahf
push
sub
pop
push
rol
test
push
sub
inc
push
dec
js
jno
xchg
aam
dec
loope
xor
cmp
arpl
inc
clc
mov
and
(bad)
ds
push
jge
das
imul
lahf
xchg
pusha
pop
pop
add
and
or
adc
je
push
aam
cmp
mov
sub
mov
ja
push
xor
ja
ds
test
mov
je
ds
repz
inc
les
mov
xor
pop
or
js
push
or
sbb
jno
mov
push
pop
inc
push
ds
cwde
lods
lahf
xchg
shrd
sub
sbb
and
mov
inc
mov
mov
arpl
xor
ror
addr16
das
pop
in
and
test
mov
pop
cmc
retf
mov
test
lahf
stos
sub
or
sbb
or
mov
jnp
sub
cmp
jmp
xchg
aas
sbb
push
or
shl
fisubr
jmp
leave
or
mov
and
jl
jle
or
and
and
imul
sar
stos
test
add
pusha
mov
mov
sbb
xchg
aam
enter
or
add
mov
shl
lock
cmps
pop
sbb
pushf
pop
push
mov
sub
xchg
jl
jge
fimul
ficomp
inc
push
dec
cmp
es
out
lods
ja
fsubp
sub
arpl
dec
sub
pop
jp
mov
jg
or
pop
dec
xor
fisubr
ror
and
jl
dec
push
mov
jbe
jno
clc
xchg
retf
mov
and
jp
retf
mov
sti
sub
movs
adc
nop
sub
mov
push
mov
sbb
test
cdq
nop
(bad)
fwait
xor
bnd
ds
popf
mov
gs
(bad)
lahf
adc
dec
dec
push
sar
aas
xchg
lods
jg
add
xchg
cmc
pop
mov
pcmpeqb
jp
cmp
loop
xchg
pop
daa
jp
add
lods
cdq
je
jg
xor
add
clc
sub
ins
pop
adc
and
ja
addr16
movs
mov
clc
xor
ds
sub
out
pop
pop
fwait
sar
rol
in
movs
(bad)
pop
add
into
and
add
adc
xor
add
push
mov
test
lock
test
sahf
push
mov
mov
mov
inc
call
xchg
cmp
fmul
test
push
adc
or
dec
les
mov
add
mov
push
out
mov
popa
test
movs
or
ss
jmp
pop
int
jmp
in
ins
jb
imul
xor
mov
jne
ss
ins
or
and
jnp
pushfw
and
shr
(bad)
fsubr
cmp
ins
sub
lahf
cmp
mov
imul
(bad)
dec
inc
push
outs
int
test
adc
add
and
pop
sbb
int3
jge
adc
out
pusha
pop
xor
sub
ds
arpl
popa
and
mov
inc
mov
lea
xor
cmp
xor
bound
adc
data16
fbstp
pusha
out
cmp
xchg
lods
xor
xchg
push
aaa
add
mov
out
cdq
aas
mov
cdq
jl
(bad)
or
cmp
pop
les
add
dec
aam
lods
(bad)
add
push
fimul
mov
(bad)
xchg
push
jmp
jecxz
call
jle
mov
inc
push
push
mov
mov
popa
pop
mov
cmp
mov
adc
movsx
sbb
add
loop
pop
or
not
dec
leave
pop
ret
lahf
fwait
ds
or
sub
imul
out
xchg
sahf
sub
add
inc
arpl
int
ret
add
inc
push
fdivr
jae
push
cwde
cmc
jmp
and
pop
inc
cmp
(bad)
hlt
mov
stc
jns
test
clc
fnsave
mov
cmp
in
aas
inc
mov
mov
icebp
daa
mov
xchg
xchg
jle
mov
(bad)
push
(bad)
fisttp
out
popf
loope
fsub
ins
xor
sub
mov
mov
test
clc
lock
ret
mov
in
add
clc
mov
popf
sub
ins
stc
cmp
js
adc
popf
fucom
int
push
xchg
mov
retf
fdivr
inc
push
and
gs
jae
dec
mov
add
repz
and
mov
stos
das
ficom
cmp
test
xor
std
sbb
ret
add
pop
xor
out
ds
scas
mov
outs
fild
gs
fwait
pop
adc
add
or
les
arpl
jmp
int
icebp
pop
xchg
mov
retf
xchg
pop
gs
sbb
out
xchg
and
lods
fst
(bad)
sub
mov
cmp
or
in
cmp
ret
mov
ja
(bad)
mov
xor
(bad)
leave
cmovb
cmp
pushf
and
pushf
ret
sar
jge
scas
out
cmp
(bad)
pushf
in
call
fcomp
dec
(bad)
das
dec
daa
adc
jno
addr16
dec
int3
into
jge
cmps
and
sti
and
dec
mov
ja
mov
shl
add
bound
out
rol
dec
dec
sub
mov
adc
fcomp
dec
mov
cdq
sub
push
adc
shl
jecxz
sbb
ins
outs
(bad)
pop
jecxz
jmp
jnp
sbb
or
dec
repz
xchg
pop
push
inc
loop
mov
sahf
sbb
popa
js
or
mov
pop
jnp
fsub
iret
inc
inc
loope
rcr
xor
sbb
ret
and
leave
xchg
mov
and
cmp
jge
cmc
in
pop
xchg
call
mov
not
sbb
bnd
mov
cs
and
inc
aam
iret
cmps
ds
in
in
lods
add
pop
mov
scas
mov
inc
outs
out
sub
adc
add
pop
sbb
popa
daa
outs
test
ret
out
test
adc
dec
out
fucomp
fsub
popa
outs
or
xchg
outs
sub
sub
jnp
shl
mov
or
cmp
pushf
dec
xchg
sahf
xchg
loopne
sub
adc
dec
or
movs
add
test
jbe
(bad)
sub
out
mov
adc
add
xor
es
jp
cmp
push
iret
icebp
jae
sbb
xor
pop
mov
dec
aaa
mov
rcl
lahf
(bad)
inc
mov
jae
adc
loop
xchg
mov
xor
jmp
dec
arpl
mov
or
jns
or
mov
jmp
int3
stc
add
fidiv
sti
lock
cli
mov
fdiv
mov
pop
push
inc
sub
std
call
js
icebp
test
stos
pop
cmp
retf
dec
sub
pop
int3
outs
stc
shl
lods
cmc
mov
cmp
bound
in
mov
sub
inc
lock
inc
or
in
mov
cmp
push
aad
mov
outs
gs
hlt
ins
loop
mov
mov
shr
shl
jg
add
test
pop
mov
loopne
pop
ficomp
push
int3
ret
jbe
cmp
movs
repnz
aad
or
cmp
sub
push
push
mov
das
mov
pusha
(bad)
sbb
bnd
out
stc
movs
sbb
(bad)
push
sub
pop
and
hlt
aas
xchg
movs
mov
aam
inc
xchg
jmp
add
pop
push
pop
enter
mov
push
or
and
test
jno
je
mov
mov
adc
sbb
or
push
mov
jne
mov
js
lahf
jg
adc
inc
fst
pop
and
in
xchg
sti
push
sahf
stc
or
push
xchg
add
push
(bad)
je
pop
and
xchg
sbb
shl
jne
mov
lock
cmps
add
jmp
adc
cmp
daa
or
xlat
lods
(bad)
dec
cmp
in
out
add
inc
sbb
ja
sub
int
fdivp
dec
mov
inc
mov
sub
jp
sub
add
fcmovnbe
push
(bad)
ror
rol
fwait
(bad)
repnz
(bad)
lock
out
mov
pop
sub
mov
enter
xchg
lea
jno
pop
int3
pusha
sub
dec
and
mov
ds
sbb
sub
sub
lods
push
xor
gs
loope
cmp
lds
cld
xchg
jp
test
jmp
dec
cwde
mov
push
mov
das
add
std
in
inc
rcl
jmp
mov
sbb
arpl
ss
imul
cdq
add
imul
or
xchg
not
jg
mov
xor
cmp
jne
ins
or
lea
fidiv
fcmovnb
xchg
adc
popa
mov
jae
fs
jle
inc
int3
add
mov
mov
mov
stc
call
not
sbb
adc
jnp
push
inc
data16
mov
and
mov
push
(bad)
int3
push
mov
push
sbb
mov
jp
cmp
push
push
mov
jae
daa
xor
movs
xchg
out
arpl
mov
cwde
or
and
push
jne
rcl
or
lds
cwde
(bad)
xchg
les
jo
loopne
push
jl
jo
cmp
cld
or
mov
mov
adc
sahf
xor
xlat
popa
iret
(bad)
movs
jmp
jmp
cli
pop
pop
sbb
es
xchg
pop
nop
inc
xchg
and
add
inc
push
adc
pop
cmps
sbb
test
scas
sub
test
jmp
pusha
mov
not
push
xchg
das
repz
mov
mov
fldenv
movs
in
mov
xchg
mov
mov
in
stos
das
xor
fimul
xchg
xor
sbb
test
pushf
cmc
cmp
mov
retf
in
test
pushf
mov
ja
lahf
mov
pop
xchg
repz
outs
cwde
jns
and
ins
push
loop
cmp
xor
sahf
jp
mov
sbb
aaa
bound
push
xor
mov
jmp
sbb
sbb
daa
lods
cmp
test
sub
or
sti
xor
adc
test
push
mov
push
jl
stos
jmp
ins
mov
in
(bad)
adc
sub
jecxz
push
icebp
lods
add
add
or
xchg
repz
jecxz
mov
xchg
int3
sub
sbb
sub
fcmovne
mov
daa
pop
(bad)
lods
es
clc
push
pop
std
xchg
mov
sub
mov
cmp
mov
xchg
pop
inc
or
hlt
mov
popf
retf
out
push
pushf
cwde
stos
pushf
mov
outs
test
sbb
cmp
mov
rcr
test
inc
inc
lods
idiv
xor
(bad)
fild
test
ss
push
test
inc
mov
cmp
push
cmps
push
mov
lock
idiv
test
sar
sbb
xor
pop
add
lods
pusha
sub
repz
stc
aaa
mov
xchg
inc
js
fbstp
mov
pop
(bad)
lock
jae
pushf
out
jg
mov
iret
psubsb
retf
das
add
ficomp
cmp
(bad)
loopne
in
fisttp
sti
adc
xchg
stos
xchg
push
outs
adc
imul
imul
retf
jbe
push
and
dec
scas
sub
inc
out
fcom
xchg
(bad)
or
cmp
cwde
add
enter
mov
mov
fnstsw
fiadd
push
sub
adc
mov
pop
xchg
or
nop
cli
ret
aas
push
jge
sub
ss
pop
loop
sub
jno
xchg
xchg
sbb
mov
dec
shr
ret
and
popf
add
leave
jo
xor
(bad)
push
mov
mov
repz
fsub
cdq
test
cmps
pop
test
mov
(bad)
into
pop
mov
xor
push
hlt
fisubr
push
repnz
sub
(bad)
dec
(bad)
xor
shr
sub
shl
imul
push
or
movs
icebp
cli
rol
and
cmp
xor
ffree
pause
dec
movs
add
(bad)
fimul
icebp
add
mov
int3
bound
dec
in
sub
mov
fdiv
bound
and
xchg
sbb
fidivr
(bad)
mov
sub
and
sbb
mov
jbe
inc
or
(bad)
in
mov
pop
push
jmp
cli
call
into
inc
fnstenv
xchg
or
add
mov
jae
xor
mov
jmp
xor
mov
ror
dec
retf
not
or
sbb
push
xchg
or
xchg
out
(bad)
sbb
shr
and
dec
push
adc
out
inc
inc
mov
call
adc
cli
sub
test
adc
mov
sbb
and
in
xchg
mov
mov
xor
inc
popa
jnp
fcom
mov
cmp
neg
jmp
loope
push
inc
cdq
mov
std
and
sbb
and
dec
les
jmp
pop
mov
rcr
add
jecxz
mov
cld
ja
dec
inc
mov
fbstp
mov
adc
pop
cli
in
xchg
out
add
div
in
and
mov
xchg
stos
push
mov
mov
jno
adc
scas
mov
shl
int3
add
aas
lods
ret
cli
xchg
(bad)
cmp
inc
adc
shl
lods
mov
mov
ror
push
adc
std
mov
push
push
or
lods
xchg
cmc
xchg
xchg
sub
stos
pop
fnsave
sub
pushf
stos
pop
rol
out
fimul
jmp
hlt
mov
jmp
(bad)
fs
popa
jne
dec
xor
out
or
test
dec
sbb
pop
lock
in
nop
sbb
cmp
shl
jp
xor
ss
push
sub
cmps
inc
inc
or
(bad)
in
into
(bad)
xchg
rcr
cmp
cmp
cmps
stos
aad
retf
pop
les
sbb
(bad)
push
popa
aas
adc
mov
ja
xor
scas
dec
mov
aaa
xchg
nop
mov
and
jl
or
bound
xor
sar
mov
jbe
or
xchg
in
aaa
or
loope
imul
mov
mov
mov
mov
mov
dec
jge
cmc
push
jbe
retf
sub
mov
and
in
inc
stc
xchg
repz
cmp
cmps
push
or
xchg
repz
ds
adc
mov
or
xchg
pop
in
in
and
es
mov
es
inc
stos
test
inc
cmc
pop
cld
dec
xchg
or
fiadd
das
jns
jmp
xchg
mov
sbb
cmps
jmp
arpl
ds
cmp
pop
fistp
mov
mov
cld
popf
aas
popa
out
daa
sbb
dec
inc
mov
sti
enter
cmp
jl
gs
mov
stos
and
popa
xchg
sbb
es
cmps
sbb
dec
dec
pop
xchg
jp
pop
(bad)
xchg
mov
scas
sbb
das
ins
pop
lahf
add
cmp
jb
cmp
push
xor
mov
je
(bad)
mov
loop
dec
cmp
into
sbb
iret
loope
(bad)
(bad)
jne
repz
lods
cli
pop
mov
cmps
outs
mul
mov
shl
lods
aam
xchg
cli
push
pop
sbb
retf
xor
sahf
and
dec
(bad)
jnp
call
pop
shl
sbb
lahf
lock
mov
rol
jg
xor
xchg
stos
imul
ins
jnp
stos
out
sbb
adc
jl
cmc
or
stos
stos
pop
mov
(bad)
je
out
int
outs
scas
inc
sub
(bad)
dec
or
dec
repz
fdivr
mov
push
(bad)
cmc
jg
mov
(bad)
dec
inc
mov
fld
out
xchg
mov
mov
push
jno
pop
mov
add
and
sbb
mov
jb
sbb
cmps
inc
mov
sbb
into
xor
cmp
sub
fstp
mov
imul
jge
cwde
pop
adc
enter
mov
inc
stc
pop
sbb
dec
and
xchg
sub
loopne
or
pop
inc
sub
inc
jg
data16
jecxz
xor
push
mov
sbb
imul
enter
add
std
in
pop
lds
in
into
cmp
stos
cwde
int
out
add
xor
ficomp
ja
cmp
fcmovnb
cmp
mov
lods
je
into
popf
ins
pop
and
bound
jo
out
mov
dec
and
gs
outs
cmp
and
lock
cmp
cmp
iret
jns
sub
or
add
inc
out
sub
popa
ins
mov
cld
into
test
sub
dec
mov
test
add
add
and
jmp
popa
push
sub
test
fcom
test
push
retf
pop
cmps
movs
mov
sbb
call
push
cmc
cmp
mov
call
out
sub
push
fdiv
jmp
push
dec
ins
cs
sub
dec
pop
idiv
ins
and
xor
sub
addr16
imul
and
test
adc
adc
ds
imul
icebp
sbb
xchg
dec
mov
inc
inc
sbb
lea
pop
pop
push
dec
jp
jg
stc
in
ins
sub
lods
repnz
mov
scas
jmp
icebp
sub
dec
dec
imul
inc
mov
test
xchg
lods
mov
cmp
mov
cmp
data16
(bad)
in
dec
ret
jno
stos
popf
sbb
pop
or
(bad)
clc
cbw
add
sbb
or
pop
test
sbb
aaa
out
lods
or
mov
sub
dec
mov
loope
dec
repz
fwait
xchg
xchg
dec
inc
imul
retf
cmp
movs
mov
mov
cdq
fscale
cmc
imul
cmp
neg
dec
jmp
retf
outs
mov
sahf
jne
ss
(bad)
shl
stos
mov
cmp
sbb
fst
fcom
jecxz
cdq
adc
xor
sbb
fsub
mov
xchg
inc
mov
xchg
outs
push
sar
in
and
sub
sti
ja
sub
fcomp
into
or
or
scas
bound
mov
out
dec
cmp
addr16
loope
and
(bad)
repz
xor
jmp
not
iret
xchg
out
sbb
cmps
repnz
les
es
hlt
jbe
ret
adc
jbe
nop
pop
bound
dec
(bad)
fimul
popa
xchg
lahf
movs
(bad)
arpl
pop
stc
adc
daa
and
and
cwde
in
fild
in
xor
rol
sti
dec
sub
aas
xor
inc
fs
xchg
mov
fadd
ins
jbe
hlt
sub
call
fisubr
(bad)
call
jns
mov
adc
mov
mov
les
inc
sub
dec
adc
dec
(bad)
scas
arpl
mov
cmp
cmp
push
xchg
cli
adc
sbb
cmp
sub
pop
inc
movs
stc
lock
jl
xchg
ror
fnsave
imul
into
mov
xchg
lahf
sbb
sar
and
into
pop
sbb
xchg
shl
imul
repnz
xor
xchg
jne
loopne
pop
mov
and
fs
sub
outs
dec
test
push
ret
les
or
mov
xor
rcl
or
push
push
push
mov
add
xor
and
mov
sub
iret
or
(bad)
sbb
mov
sub
sbb
or
es
repz
pop
call
shl
scas
and
jle
in
jne
outs
(bad)
mov
add
fcmovne
sbb
popa
pop
mov
repz
sbb
push
stc
mov
icebp
ins
movs
adc
sbb
cmp
js
jp
stos
xchg
dec
mov
sub
cmc
ins
cmp
je
repnz
xor
sahf
dec
dec
daa
pop
jns
and
mov
jno
jl
sti
retf
mov
out
dec
ret
cli
adc
mov
hlt
iret
sbb
fsub
pop
mul
jb
je
inc
dec
mov
pop
test
outs
inc
push
jge
dec
mov
aam
loope
push
out
ja
adc
int3
push
sbb
movs
std
dec
sbb
repz
inc
xchg
push
mov
imul
scas
dec
adc
pop
hlt
adc
mov
push
or
push
fadd
mov
or
ret
mov
xrelease
in
(bad)
je
push
ds
pop
sbb
lods
mov
out
jo
outs
add
push
pop
addr16
stos
sub
add
icebp
jne
pop
pop
jbe
push
dec
stos
ins
fdiv
push
jo
mov
xor
ret
jbe
aad
xor
pop
je
repnz
mov
out
xchg
pop
mov
idiv
adc
out
and
inc
dec
mov
pop
sub
lea
iret
lock
push
mov
sbb
shl
sub
push
nop
lods
pusha
pop
push
cwde
das
push
mov
and
sub
movs
mov
rol
jae
(bad)
cmps
mov
fmul
out
ins
push
imul
push
dec
and
test
imul
pop
adc
loopne
lahf
sbb
fdiv
jle
push
inc
dec
cmp
cmp
cdq
pusha
mov
stos
bswap
leave
aam
xchg
add
jno
or
jmp
movs
xchg
push
adc
mov
cmp
adc
push
push
leave
xchg
in
xor
pushf
inc
fld
pop
mov
xor
mov
lock
lods
add
xlat
pop
push
cmp
push
mov
lock
retf
adc
xchg
mov
inc
jle
jp
jmp
pop
add
xchg
inc
xchg
push
ja
push
xchg
sti
les
add
aad
nop
xchg
cs
sub
icebp
repz
adc
fcmovnb
pusha
int3
fild
mov
push
out
xor
or
pop
mov
movs
xchg
out
aad
lds
xchg
xchg
jp
xchg
cmps
test
mov
div
lds
cmovs
shr
mov
and
fwait
dec
nop
loop
adc
fwait
gs
std
jg
data16
ret
xchg
arpl
cwde
shr
test
aaa
jae
std
mov
cwde
aas
jecxz
(bad)
pop
popf
dec
sbb
jb
add
pusha
repnz
popa
ret
not
bound
or
aaa
rcr
adc
push
mov
sbb
fwait
push
rol
div
pop
mov
pop
xchg
jo
cmps
jmp
or
ja
js
shr
sub
aas
shr
xchg
int
rol
and
enter
aaa
push
add
dec
adc
inc
sbb
loop
fld
fisub
xchg
dec
cmps
loopne
cdq
inc
mov
xchg
dec
(bad)
std
(bad)
cmc
(bad)
and
aad
mov
inc
cdq
inc
shr
std
rcr
mov
je
or
mov
out
xor
push
mov
dec
imul
sbb
and
sub
pushf
stos
xchg
rcr
icebp
push
cmp
fxch
inc
aaa
cmp
lahf
pop
pop
jecxz
mov
test
pop
mov
dec
jecxz
retf
sub
cmp
push
stc
pop
and
or
je
jmp
sahf
ds
lahf
sbb
stos
push
(bad)
mov
in
xchg
daa
cmp
xor
adc
mov
bound
retf
and
dec
push
or
mov
pop
jp
inc
ins
out
push
scas
retf
les
lea
pop
mov
iret
and
jae
mov
es
inc
push
xchg
ins
clc
mov
pop
push
pop
les
push
inc
xor
push
(bad)
mov
push
add
fisub
test
scas
add
aas
cmp
or
fnop
cmp
in
inc
jp
xchg
sub
repnz
(bad)
or
in
ret
and
test
icebp
xor
cmp
dec
dec
frstor
inc
pop
cmp
mov
(bad)
jnp
push
aaa
inc
fiadd
jb
xchg
pop
inc
cmp
mov
test
lock
nop
add
xchg
mov
mov
jg
data16
fisub
cli
mov
inc
mov
aam
pop
lods
add
mov
inc
(bad)
mul
fild
mov
aad
and
and
ja
aad
xor
scas
pusha
(bad)
ds
icebp
leave
xchg
jnp
inc
(bad)
pop
stc
jecxz
mov
cmc
in
mov
mov
jg
dec
lods
jnp
sbb
fs
push
loope
sti
lods
pop
xchg
jg
mov
outs
repz
add
out
mov
cwde
lock
aaa
mov
push
mov
add
(bad)
adc
xchg
mov
dec
out
or
stos
push
lea
ret
xchg
imul
test
cmp
enter
ja
jge
scas
lahf
and
mov
out
sbb
push
and
in
pop
ret
pop
adc
adc
mov
add
and
ins
in
or
das
mov
retf
sub
inc
call
fidivr
(bad)
in
sub
xchg
mov
pop
outs
fistp
push
push
std
jge
retf
retf
loop
sub
adc
aad
fcom
or
jmp
addr16
jnp
mov
and
ins
and
xor
dec
mov
mov
sbb
test
adc
or
test
aas
test
popa
xlat
pop
add
cli
aam
dec
shl
inc
dec
lock
cmp
sub
ja
jae
adc
mov
dec
inc
pop
mov
rcr
jns
rcl
movsx
out
jno
mov
rcl
cmp
add
jb
mov
sub
cmc
addr16
jle
(bad)
jge
pop
test
out
cmp
cmp
dec
mov
mov
outs
jg
ins
push
dec
xchg
shl
jg
stos
jae
rcr
inc
dec
mov
and
(bad)
int
add
std
cmps
push
adc
inc
out
dec
cmp
hlt
inc
inc
les
push
retf
jb
sub
ins
sbb
daa
cs
stc
mov
mov
or
mov
and
sbb
pop
in
mov
adc
adc
or
fidiv
cmps
xor
add
test
and
outs
lods
sub
aaa
add
dec
xor
retf
dec
mov
or
fwait
into
repnz
test
scas
mov
popa
xor
outs
out
push
and
mov
test
pop
adc
xlat
adc
push
in
jp
lea
rcr
xchg
icebp
imul
jp
jae
or
into
xchg
inc
icebp
call
ret
xor
pop
inc
cld
dec
je
aas
pop
ror
jp
cwde
and
not
or
pop
fucom
call
mov
mov
out
mov
and
sub
pop
pushf
and
xlat
fdivrp
outs
js
push
xor
movs
clc
pop
pop
mov
retf
dec
jecxz
sub
jo
nop
cmp
pop
pop
adc
jle
inc
out
pushf
dec
imul
lods
das
sub
rcl
jnp
xor
xor
inc
pop
mov
(bad)
fucomi
mov
repz
addr16
mov
rol
adc
retf
loopne
fmul
addr16
ss
pop
leave
sbb
retf
mov
shl
outs
cwde
rep
cmps
rcr
cs
imul
cmp
sub
pop
xor
push
jle
scas
pop
test
cmc
or
ss
dec
dec
enter
cmp
push
xlat
ins
mov
paddusb
pop
std
mov
mov
lods
mov
cdq
and
xor
mov
not
xchg
std
sti
xchg
nop
(bad)
into
inc
loop
mov
pop
mov
sub
mov
dec
or
pop
pop
dec
and
push
sbb
fcomp
leave
push
sub
adc
mov
in
push
xor
sbb
inc
leave
and
loopne
in
pop
pop
and
adc
mov
jle
(bad)
and
jge
cmp
nop
das
push
xchg
add
jne
popa
fs
out
bndldx
lahf
inc
(bad)
loop
rol
mov
mov
jmp
push
dec
cmp
sbb
push
loope
stos
lods
push
je
pop
in
push
and
jo
mov
call
test
cwde
pop
mov
test
cmp
call
lods
pop
pop
pop
popf
jno
mov
mov
repz
int3
lods
ins
popa
add
push
out
xor
push
mov
adc
adc
fmul
sub
xchg
push
in
push
mov
xchg
jne
out
out
pop
in
or
sti
mov
mov
stc
je
jmp
xor
sbb
fistp
xor
mov
xor
and
in
inc
adc
mov
add
mov
ss
jecxz
inc
lock
mov
aam
rol
mov
dec
es
iret
call
add
int
sbb
iret
adc
push
(bad)
cli
lock
in
call
lock
cmp
repnz
cmp
cmp
inc
xchg
sti
mov
add
fwait
cmp
sub
mov
mov
jecxz
pop
cmp
cmps
cmps
xchg
jge
cmp
jmp
pop
bound
repz
xor
jle
enter
push
js
mov
push
add
push
sahf
dec
mov
aad
and
or
sub
push
sub
popf
mov
inc
xchg
dec
mov
cmps
aam
pop
call
push
pop
imul
sub
aad
ret
pop
lods
jp
repz
mov
into
pop
rcl
arpl
cmp
fnstcw
sbb
cwde
inc
sub
sub
xchg
mov
loop
or
mov
fisttp
pop
and
sbb
mov
push
cmps
jne
add
cmps
hlt
mov
das
fsubp
mov
stos
jge
adc
or
sub
jg
jecxz
push
ins
dec
movs
stos
pop
mov
push
push
cmps
in
(bad)
fwait
daa
lds
fdiv
aad
cmp
ins
sti
or
lea
sbb
sub
loope
adc
or
sar
imul
data16
xchg
pop
pop
push
fbstp
xor
push
out
dec
jmp
fcomp
es
or
hlt
dec
int3
test
call
push
(bad)
mov
out
sbb
dec
fmul
jmp
mov
mov
push
mov
jl
fbld
pop
in
inc
stos
push
or
hlt
mov
sub
sbb
sub
arpl
out
pushf
test
idiv
leave
inc
ins
lea
in
out
sbb
icebp
jge
dec
ja
add
fbld
popf
mov
scas
xchg
or
repz
cmp
ins
les
stc
test
sub
xchg
cmp
cmps
ja
cli
loope
add
aam
sub
cmps
jno
fadd
or
data16
stos
fs
adc
cmp
cmp
xor
mov
add
loop
dec
ins
pop
mov
out
mov
xchg
es
pop
cmps
or
aad
jl
pop
mov
and
sahf
jl
fcom
stos
jae
jae
stos
cs
icebp
test
imul
shr
jo
lods
cli
scas
cs
aas
mov
mov
stc
and
push
fld
and
cmp
push
(bad)
(bad)
pop
add
add
mov
xor
call
imul
aaa
or
fistp
in
shr
xchg
or
iret
nop
inc
or
mov
pop
and
inc
pop
cmc
xchg
and
pop
inc
xor
pop
mov
js
inc
das
stos
hlt
xchg
sbb
jge
aas
movs
xlat
enter
jo
xchg
adc
mov
frstor
lahf
sti
sub
jb
out
xchg
jp
pop
xchg
ret
adc
leave
test
or
xchg
pop
and
sub
(bad)
jno
sbb
pop
hlt
das
jle
add
jecxz
xchg
out
stos
dec
mov
cmp
and
icebp
js
pop
xchg
jl
adc
push
out
lds
jecxz
enter
ins
mov
inc
pop
in
and
cmp
loop
mov
leave
loope
mov
mov
fist
sbb
mov
and
dec
daa
sti
repz
xchg
adc
mov
sbb
mov
dec
(bad)
ins
dec
rol
xchg
stos
mov
jae
xchg
sbb
jle
fwait
or
fwait
or
mov
xor
das
sub
push
(bad)
das
sbb
mov
bound
das
or
dec
mov
and
in
mov
ins
scas
ficomp
push
into
xchg
ret
mov
lods
das
xchg
cmp
ja
ror
arpl
mov
call
dec
not
cmp
sti
ss
inc
popf
and
xor
mov
and
sbb
mov
icebp
xchg
mov
add
les
jecxz
xchg
ret
mov
pop
(bad)
mov
push
daa
and
fsubr
nop
aas
loopne
clc
sahf
jmp
sti
das
out
(bad)
lock
test
lds
test
retf
pop
push
cmp
mov
dec
adc
xor
mov
shr
push
sbb
mov
retf
cmp
jl
jbe
xchg
jge
cmc
pop
lods
scas
push
cdq
xor
sar
popf
sub
cwde
push
pop
aas
pop
imul
push
daa
add
inc
xchg
mov
(bad)
and
xor
cs
mov
jg
test
shl
enter
icebp
and
xor
js
adc
jns
sbb
(bad)
fstp
addr16
scas
rol
pop
(bad)
xchg
lahf
imul
je
push
push
dec
dec
les
scas
jno
add
cld
pop
mov
adc
push
cmps
cdq
dec
xlat
ins
cmps
(bad)
mov
repz
sbb
retf
dec
fsub
push
(bad)
out
pop
push
enter
cdq
scas
dec
dec
ins
push
sub
inc
je
mov
dec
mov
js
push
mov
ds
movs
push
movq
sub
mov
sahf
cmp
mov
xor
mov
jle
stos
pusha
mov
push
xor
das
fiadd
inc
xor
sub
and
rol
push
cwde
add
jae
jge
dec
movs
sbb
mov
adc
cmp
pop
loope
je
and
jp
or
test
ficom
call
mov
gs
(bad)
retf
xchg
xchg
neg
mov
call
arpl
jmp
mov
sub
ret
and
mov
in
xor
sar
jne
and
and
inc
dec
sbb
clc
cmp
ret
mov
neg
dec
cmps
mov
(bad)
lods
int3
mov
xor
xchg
push
in
inc
pusha
arpl
fs
pop
sbb
cmp
aaa
mov
mov
leave
jb
pop
(bad)
adc
imul
test
and
(bad)
jl
dec
jmp
jmp
les
sbb
pushf
mov
mov
or
push
rol
je
rcr
mov
pop
adc
jg
add
dec
loopne
inc
data16
test
pop
and
mov
jb
es
shl
mov
cmp
jecxz
ds
sbb
adc
adc
out
in
mov
dec
push
neg
jge
xchg
clc
repz
cmp
lods
push
rcr
push
pop
call
(bad)
in
aam
gs
cmc
(bad)
shl
push
ja
mov
pop
pushf
add
push
jg
mov
mov
and
push
sub
leave
push
and
sub
xor
pop
inc
lods
adc
aad
ja
ins
sbb
mov
stos
mov
pop
mov
arpl
or
ss
out
adc
push
pop
xchg
leave
xor
ss
mov
mov
and
popa
addr16
cmp
enter
mov
imul
in
cmp
dec
and
add
push
pop
sub
jmp
imul
add
push
fiadd
cmc
shl
sahf
pusha
jbe
cli
adc
popf
or
movs
pop
add
jae
enter
jp
pusha
rol
push
mov
loope
lds
add
push
out
imul
jo
inc
or
jle
dec
retf
mov
mov
pop
cmp
or
mov
mov
and
jb
imul
push
aas
call
inc
xchg
call
and
sub
mul
stos
push
jmp
cmp
rol
dec
cmp
in
movs
lahf
push
or
cmp
bound
mov
xor
test
pop
sub
xchg
int
cld
mov
inc
mov
ja
pop
cmp
push
mov
and
nop
or
xchg
aad
mov
push
mov
or
fadd
jle
out
sbb
es
add
stc
dec
addr16
pop
retf
inc
jle
shr
add
cdq
cli
and
sbb
fsub
fs
aaa
dec
mov
sar
or
data16
fstp
leave
jno
mov
es
sub
mov
xor
ins
or
in
push
jb
inc
ins
(bad)
jge
sbb
adc
push
jbe
aaa
nop
inc
imul
or
clc
ds
jg
loopne
iret
cmp
loopne
pop
push
jle
inc
cmp
mov
sti
test
xchg
iret
adc
pop
add
loope
mov
es
loopne
xchg
test
inc
mov
jne
xor
pop
fbld
(bad)
sbb
enter
(bad)
test
jmp
sub
and
xchg
mov
and
stos
gs
push
mov
ins
stos
fcomp
repz
aad
push
xchg
popa
pop
fisttp
jno
test
add
mov
jmp
push
ret
stos
out
fiadd
pop
inc
repnz
nop
retf
fcomp
push
mov
add
loope
call
ds
push
ins
or
fild
out
cli
push
inc
clc
jnp
sub
inc
addr16
and
or
jg
mov
sub
xchg
jge
or
mov
lds
scas
jecxz
jle
jmp
push
std
jg
sbb
mov
retf
(bad)
jmp
jp
ss
sub
push
mov
iret
repz
sbb
dec
lods
call
call
mov
jns
retf
mov
movs
shl
loopne
xor
inc
enter
fcom
sbb
pop
sbb
inc
jae
mov
repz
out
push
xchg
jge
cmps
repnz
push
pop
inc
aad
test
mov
out
retf
gs
cmp
jecxz
retf
sub
fidivr
pop
cmp
imul
ins
and
jmp
(bad)
cs
mov
adc
mov
sar
lea
and
add
mov
sub
(bad)
xchg
(bad)
ja
fadd
lds
in
test
sbb
cmc
rol
xor
mov
mov
push
jg
sub
lea
(bad)
out
push
sahf
mov
iret
std
fldcw
mov
and
push
sub
sbb
push
xchg
not
sbb
mov
imul
int3
nop
push
dec
cmp
inc
push
fdivr
push
test
rcl
mov
sbb
mov
punpcklbw
pop
sub
into
fdiv
cmp
call
stos
(bad)
mov
jbe
icebp
mov
xchg
pop
sbb
pop
ror
shl
xchg
cmp
cmp
sbb
out
mov
cli
push
jmp
add
xchg
xchg
cmp
jne
mov
xchg
dec
(bad)
out
ins
and
mov
in
or
addr16
push
std
scas
xchg
shl
push
pop
ret
or
jo
fidiv
cmp
mov
adc
push
pop
add
mov
pop
inc
lods
inc
lea
lods
je
fnstcw
push
jp
fadd
out
mov
sub
das
inc
dec
fst
xor
push
fs
and
adc
add
mov
sub
in
cmp
fimul
cld
dec
bound
test
sar
jae
jns
xlat
xor
out
fwait
jns
jmp
mov
loop
dec
adc
inc
pop
scas
test
jge
sub
add
and
stos
repnz
test
loop
mov
sub
sub
ss
mov
cmc
xchg
xchg
xchg
pop
mov
enter
leave
xor
std
inc
dec
std
cmp
es
rol
mov
cmp
cmps
mov
pop
fisub
mov
sub
mov
imul
popa
jle
cmp
fistp
pusha
push
push
xchg
mov
jbe
sbb
jno
push
xchg
sub
iret
mov
out
scas
std
stos
int3
xchg
loop
inc
enter
repnz
fldenv
sahf
push
add
mov
jecxz
xlat
ds
jne
cmp
or
int
push
and
sahf
gs
jecxz
jl
stos
adc
mov
dec
mov
fistp
mov
fst
div
mov
js
popf
mov
cli
shl
out
fmul
mov
pushf
add
inc
fwait
lock
repz
dec
mov
into
fistp
rcl
xchg
cli
push
mov
inc
mov
sbb
ret
or
cmp
fcomp
rcl
sub
pop
push
sub
ja
and
enter
fisubr
jnp
lods
xlat
retf
cld
sbb
cmp
das
pushw
test
jno
and
js
fnsave
dec
adc
or
mov
pop
push
(bad)
pop
jge
mov
push
mov
out
test
retf
dec
rol
mov
into
lahf
or
mov
dec
sbb
jmp
mov
outs
mov
cmp
int
(bad)
cli
push
push
jmp
(bad)
push
out
push
push
sbb
scas
ret
out
(bad)
sbb
xchg
cs
cmp
mov
sub
sbb
std
aad
inc
push
xor
jge
inc
sti
aam
mov
dec
fld
sbb
or
sbb
pop
in
outs
fcomp
daa
adc
dec
packsswb
pop
mov
xchg
push
add
cli
out
jns
xor
mov
aam
inc
mov
fucom
aas
int
xor
jb
ret
jecxz
inc
fisttp
retf
or
call
inc
sbb
imul
mov
sahf
pusha
pusha
imul
mov
out
inc
mov
mov
loope
sbb
out
mov
iret
adc
gs
mov
adc
pop
xchg
(bad)
sub
adc
lds
dec
mov
xchg
inc
loopne
aam
sar
(bad)
js
jae
add
icebp
pop
fcmove
ror
aas
mov
push
loope
push
mov
ret
mov
rcl
inc
xlat
add
xchg
(bad)
mov
mov
adc
add
int
cmp
mov
sub
jmp
shl
pop
adc
mov
test
(bad)
dec
inc
sti
stmxcsr
ins
pop
pop
jb
leave
pop
xor
push
push
jecxz
iret
push
rol
cli
cmp
inc
pop
jge
pop
ins
ss
mov
jl
adc
xchg
cld
adc
lds
xor
xor
movs
shl
dec
mov
shl
cmp
or
loop
scas
jmp
push
jg
int3
in
mov
jae
push
or
dec
das
pop
sub
sbb
test
imul
mov
mov
movs
xchg
jle
out
cmp
pop
cmc
je
dec
fs
jmp
mov
mov
into
mov
xor
push
int3
sub
mov
or
cdq
aam
int3
ret
cmp
iret
jg
les
into
xchg
xor
fdivr
xor
jle
imul
dec
test
lock
dec
ins
xchg
push
std
leave
test
repz
scas
fnstcw
push
rol
xchg
repz
jmp
cmps
into
repz
xchg
inc
sub
sub
xchg
arpl
and
pop
sub
das
push
adc
dec
cli
aas
adc
mov
jle
js
pop
cmp
or
test
push
xchg
ret
pop
loopne
dec
loope
adc
mov
xor
push
cmp
push
lods
stc
mov
outs
ret
push
push
fs
je
xchg
in
popa
imul
inc
popa
mov
scas
rcr
scas
mov
(bad)
and
jnp
pop
mov
or
mov
pusha
lods
mov
sbb
jne
pusha
imul
icebp
or
iret
xchg
arpl
fcmovnb
in
inc
dec
mov
sbb
or
hlt
mov
gs
xor
adc
mov
lods
rcl
and
rol
xor
push
out
sbb
and
xor
rep
arpl
sar
mov
jmp
and
inc
or
addr16
dec
cmp
and
ror
xchg
jmp
mov
sub
adc
sbb
imul
ja
cmc
pushf
sbb
imul
out
mov
cmp
into
rcl
inc
fidivr
jbe
ret
adc
cmp
dec
pop
mov
fwait
add
adc
outs
imul
ins
jbe
outs
pop
and
or
sbb
xor
mov
mov
xchg
stos
inc
in
into
jo
ret
pop
sub
repnz
cmp
or
inc
push
retf
scas
es
aaa
push
inc
les
in
add
mov
add
out
adc
ss
daa
xchg
repnz
sti
add
aas
mov
clc
outs
shl
mov
push
les
mov
popa
add
stos
out
shl
enter
mov
sub
ret
sbb
adc
sbb
hlt
arpl
mov
out
int
pop
cmp
jbe
push
sar
push
sub
pop
mov
push
inc
addr16
gs
div
outs
mov
push
adc
repz
xchg
cmps
adc
xor
pop
jecxz
les
add
mov
sub
jne
pop
jns
imul
(bad)
(bad)
movs
mov
pop
cli
shl
add
das
out
ret
mov
iret
addr16
fsubr
or
test
xor
movs
sub
jnp
ret
mov
aas
jne
fsincos
pop
xchg
aas
sahf
pop
pause
imul
jle
shr
mov
das
add
aaa
inc
jmp
push
loop
stc
sbb
or
mov
xchg
out
scas
jns
pushf
push
mov
fs
add
push
gs
mov
fsubr
adc
sbb
jbe
adc
jp
scas
push
push
jge
cmp
sar
push
(bad)
pop
adc
push
sub
pmulhw
enter
and
jl
mov
fsub
adc
sbb
loope
inc
aas
enter
imul
jo
jle
mov
dec
loope
neg
cmp
fisttp
dec
leave
add
jecxz
and
ja
addr16
pop
pop
clc
inc
sbb
adc
pop
jae
ja
cmc
dec
jae
jbe
add
fdiv
inc
in
int
pushf
inc
lahf
sub
movs
adc
cmp
mov
adc
jle
cmp
xor
or
leave
cmp
or
and
jmp
sbb
or
adc
inc
outs
pushw
push
mov
sbb
adc
jl
sar
not
jg
mov
stos
rol
cmp
mov
jge
out
add
loop
call
add
xor
out
mov
jmp
jg
cmps
inc
cmp
pop
adc
xor
xchg
mov
sbb
imul
lods
rcl
inc
adc
test
sbb
stos
jp
loopne
cmps
push
cdq
retf
push
dec
dec
lea
jae
mov
aam
stos
out
push
fisttp
jo
outs
cmp
mov
fs
sub
add
arpl
loope
pop
xor
es
int
xchg
lahf
cmc
ins
shl
mov
es
sub
hlt
cmp
and
xchg
xor
pop
dec
out
das
pop
sub
push
mov
xchg
jg
jp
adc
cmp
or
xchg
aaa
xchg
mov
or
xor
jns
pop
lods
adc
ds
shr
jmp
mov
icebp
mov
sahf
xor
mov
popa
mov
jns
mov
inc
popf
inc
scas
je
jnp
jl
test
mov
push
sub
nop
add
aam
sub
pop
outs
ja
fild
jns
or
add
fbstp
pop
bound
adc
jmp
test
ret
stos
ret
mov
dec
lea
out
adc
xchg
ins
dec
inc
xor
fldcw
sbb
fbld
cdq
and
mov
jp
rep
(bad)
aaa
les
(bad)
cmp
mov
jp
adc
stos
in
fcmovbe
loope
add
cmps
sahf
xor
jnp
mov
mov
add
jb
mov
sub
push
es
popa
(bad)
je
pop
(bad)
inc
xchg
pop
push
ret
shl
jp
sbb
cmp
pop
pop
leave
iret
and
dec
fdiv
enter
xor
mov
jae
pop
xchg
add
fwait
enter
push
add
int
pop
mov
shl
adc
pop
loopne
les
and
cs
js
sub
(bad)
fwait
stos
inc
stc
sbb
push
cs
push
loop
inc
mov
retf
outs
test
or
jnp
aas
pop
loope
and
ja
cwde
and
xchg
daa
mov
push
aas
test
fisttp
lods
jmp
dec
pop
dec
jns
test
test
shr
inc
stc
fistp
repz
mov
movs
jle
fs
mov
xchg
int
jp
es
add
jle
test
add
div
jns
jmp
nop
cmp
cmp
mov
shr
mov
movlps
cli
cli
mov
call
add
hlt
and
xchg
or
jle
imul
cs
dec
std
les
push
(bad)
jno
push
sbb
popf
(bad)
mov
cmp
scas
rcr
pop
sbb
push
jmp
ja
lods
cwde
aas
mov
add
jmp
jae
add
pop
call
repnz
movs
and
test
test
cmp
jns
les
add
mov
mov
xchg
pop
test
inc
push
not
jb
xlat
cs
cld
sbb
pop
loopne
add
popf
mov
sub
jl
aaa
aam
jno
nop
test
mov
retf
outs
sub
fstp
push
in
dec
idiv
scas
mov
test
sbb
jae
push
popa
fmul
mov
and
mov
(bad)
or
mov
jb
and
mov
sub
lds
(bad)
fidivr
sub
shl
cdq
and
sbb
sbb
call
push
dec
jae
sbb
icebp
fist
bound
xchg
mov
xchg
in
push
movs
mov
jno
outs
inc
mov
sub
dec
rcr
(bad)
xchg
cld
int3
cli
xor
or
cld
lods
pop
pusha
inc
(bad)
add
push
loopne
jnp
int
out
lahf
mov
nop
sub
sbb
jns
adc
push
aad
retf
adc
mov
xchg
cwde
push
movs
push
js
call
pop
imul
in
mov
xchg
mov
ja
shr
pop
rcl
fucomi
pushf
popa
rol
mov
lods
jp
sar
pop
aas
xchg
cmp
sar
xor
fdiv
pushf
js
xchg
les
dec
(bad)
xor
shl
out
in
out
mov
sbb
xlat
jb
data16
sbb
pop
pop
std
jae
pop
adc
jg
sub
in
sbb
or
loope
aad
push
pushf
ret
(bad)
push
cli
fcomp
push
movs
and
add
or
sub
and
push
leave
add
sub
xchg
sti
mov
adc
mov
retf
xor
loope
inc
add
movs
dec
inc
sbb
xchg
lods
jl
lds
lea
js
xchg
into
mov
add
rcr
inc
outs
adc
and
mov
mov
mov
cmp
icebp
adc
mov
loopne
lods
leave
dec
and
and
out
and
in
cmps
jmp
(bad)
jne
jo
jo
test
mov
(bad)
cmp
push
sub
loop
dec
cmp
cmp
inc
adc
push
inc
xchg
mov
mov
dec
mov
div
or
ja
and
in
jmp
mov
and
xchg
jle
call
cmp
adc
pop
scas
jmp
loope
lods
in
pop
mov
retf
sbb
mov
add
inc
cs
das
int
popa
jp
jae
mov
(bad)
ror
dec
mov
xor
out
pop
inc
push
jno
mov
sbb
cdq
lock
loop
adc
xor
inc
jb
icebp
nop
icebp
(bad)
sbb
pop
outs
out
call
dec
xor
jge
fstp
lock
leave
rol
mov
pop
stc
sbb
loop
scas
out
adc
mov
cli
mov
sbb
mov
dec
js
push
std
or
js
xchg
xchg
into
dec
pop
test
pop
lods
cmp
jecxz
retf
dec
sahf
bound
pop
out
inc
push
jo
inc
xor
int3
xchg
xor
popf
sbb
pusha
fcom
jmp
xchg
add
pop
sub
add
add
jecxz
cmp
pop
mov
adc
in
adc
pushf
lods
xchg
lods
pop
mov
dec
dec
(bad)
cmp
sbb
mov
inc
inc
push
push
dec
pop
adc
cmp
pop
mov
xor
sar
clc
mov
cmc
push
xor
or
xor
ret
scas
xchg
mov
arpl
imul
and
and
retf
jl
add
sub
loop
(bad)
sub
and
pop
adc
adc
mov
cmp
mov
dec
push
mov
sub
gs
dec
adc
neg
test
stos
fld
xchg
adc
inc
mov
mov
imul
jb
repz
and
jmp
dec
sbb
cli
inc
les
cmc
clc
fidiv
xor
ficomp
sti
imul
jge
mov
jecxz
dec
inc
cmp
icebp
mov
sub
dec
data16
and
mov
inc
enter
dec
cs
jns
int3
xchg
lds
bnd
pusha
cmp
sbb
add
into
and
xor
rcl
add
stc
mov
mov
sti
arpl
sub
outs
std
jmp
pusha
mov
xchg
lea
and
psubw
dec
lods
cmp
mov
je
add
enter
jbe
mov
push
xor
push
jmp
shl
pop
out
cld
(bad)
mov
sbb
repz
pop
leave
push
or
ficomp
xchg
call
adc
and
xchg
jmp
adc
mov
or
fstp
push
push
lahf
xchg
leave
out
fsubr
bound
push
out
movs
xchg
sub
xchg
ja
out
and
dec
les
repz
rcl
sbb
push
jmp
jne
xlat
pop
mov
pop
sbb
int
cmp
or
scas
fiadd
inc
jge
lea
xlat
outs
mov
ja
mov
scas
dec
int3
(bad)
mov
jb
mov
mov
dec
xor
mov
xor
das
out
shl
xor
xor
xchg
lods
mov
aad
rol
or
mov
cmp
sti
mov
xor
mov
inc
sbb
aam
add
add
push
jae
loop
fwait
nop
inc
cmp
push
int
lods
xor
mov
dec
cmp
sbb
add
pop
mov
sbb
fstp
outs
lods
jno
add
(bad)
loop
sti
sbb
ret
mov
and
mov
push
ret
add
lahf
repz
inc
pop
outs
adc
jmp
mul
call
sbb
in
xlat
mov
and
push
movs
jne
scas
push
ds
sub
fwait
sbb
test
into
xchg
pop
mov
fstp
sub
mov
sbb
sbb
mov
dec
adc
adc
jl
dec
imul
fldenv
push
repz
imul
sbb
inc
cwde
jg
stos
mov
or
xor
mov
sahf
push
cmp
mov
ror
ret
pop
push
pop
dec
jg
stc
jmp
xchg
jmp
xchg
lds
xchg
push
xchg
jns
jae
jne
cmp
dec
in
mov
mov
fmul
mov
js
push
mov
je
add
call
xchg
loopne
data16
imul
dec
dec
sbb
push
xchg
dec
pop
icebp
test
cmp
xor
jg
inc
out
mov
xchg
ins
shl
cmp
in
xor
(bad)
adc
sti
sbb
mov
mov
adc
clc
inc
aad
pop
inc
jns
jae
dec
mov
mov
jmp
es
xlat
or
outs
pushf
rcr
jnp
push
mov
scas
sbb
mov
mov
aaa
ds
aaa
std
xchg
add
lods
dec
jns
ja
repnz
xchg
rcl
test
or
scas
(bad)
popf
bound
jo
or
push
mov
cwde
sbb
lahf
icebp
scas
mov
pop
pop
mov
jb
aam
std
lahf
(bad)
mov
sahf
imul
jo
pusha
popa
ret
adc
pop
jl
or
mov
or
popa
jmp
out
jnp
test
push
into
(bad)
jmp
test
imul
ins
cmp
and
push
fmul
mov
ret
loopne
call
cmp
jg
bound
retf
retf
arpl
mov
test
fisub
push
pop
es
or
pop
sbb
enter
push
jae
(bad)
pop
pop
sti
push
scas
inc
shl
clc
sahf
clc
xor
push
push
popa
push
std
mov
adc
lock
pop
jnp
jp
in
je
cmp
jp
lea
inc
shl
mov
add
neg
shr
and
dec
int
movs
(bad)
pop
mov
jmp
sub
mov
mov
cmc
into
loopne
xchg
dec
dec
xchg
cmp
xchg
cmp
jg
pop
and
ja
adc
xchg
xchg
push
test
jns
jmp
sbb
dec
cwde
push
jb
stos
in
scas
xchg
outs
repz
enter
das
mov
push
pop
dec
cmps
(bad)
sub
mov
adc
inc
ds
addr16
shl
lods
push
push
fldcw
jns
stos
call
pop
xor
mov
imul
out
xchg
nop
mov
xor
sbb
cmc
and
mov
jl
shl
cmp
jnp
cmp
or
pop
xchg
mov
icebp
adc
push
sar
shr
fbld
scas
lea
sbb
push
cmp
dec
add
dec
xchg
pusha
pop
mov
bound
(bad)
cwde
cmp
xor
shr
gs
or
adc
add
aad
ins
xchg
xchg
div
jb
or
addr16
or
cmp
add
push
and
cmps
xor
jb
pop
jo
out
push
mov
cmp
aad
ja
push
xchg
xlat
loope
(bad)
std
lds
push
push
pop
or
popa
jmp
pop
jbe
out
fadd
fnsave
ror
jl
sbb
frstor
inc
movntq
test
pop
and
jp
mov
mov
out
(bad)
rcl
jb
ret
lahf
test
xchg
int
rcr
xor
(bad)
jecxz
int
or
fild
ins
cli
pop
sar
cwde
in
cmps
jmp
mov
cmp
inc
inc
xor
in
push
cmp
sbb
out
in
push
dec
mov
and
movs
mul
push
sbb
xlat
fistp
out
ret
mov
xchg
lahf
aad
jmp
or
cli
and
test
pop
push
pop
fiadd
mov
xchg
mov
lds
pop
xor
shr
sti
mov
inc
ds
or
jo
repnz
in
mov
out
out
mov
mov
rol
je
bound
or
mov
pop
(bad)
jl
ins
sahf
js
scas
cmp
scas
push
icebp
push
push
movs
call
mov
or
lods
out
fild
mov
cmc
mov
and
mov
push
aaa
lock
xor
mov
ins
retf
jb
inc
sub
cmp
push
mov
addr16
pushf
jns
jne
pushf
arpl
mov
dec
lods
nop
jmp
jl
add
xchg
jns
mov
mov
and
outs
fwait
adc
test
inc
xor
mov
movs
ret
lods
mov
fbstp
dec
in
sub
loop
dec
add
cld
fstp
inc
(bad)
pop
jo
jnp
popf
mov
outs
shl
mov
xor
lock
inc
jl
jnp
outs
dec
movs
loopne
xor
push
cld
sbb
adc
movs
sub
or
mov
test
sub
sar
pop
mov
adc
dec
pop
mov
cli
in
mov
push
jmp
mov
fistp
aas
sbb
cmps
ret
or
cmp
lea
out
mov
inc
shl
mov
xor
pop
jne
retf
jbe
mov
pop
test
ins
push
push
sub
vpslld
push
ja
ins
add
sbb
imul
push
fidiv
rcl
jp
pop
mov
(bad)
jl
xor
call
neg
aaa
pop
mov
stos
jns
test
shl
pop
cmc
jno
imul
mov
icebp
xchg
dec
push
fsubr
xlat
fnstenv
daa
popf
xchg
push
mov
jo
inc
int3
and
loopne
push
add
adc
dec
pop
pusha
fcomip
ja
(bad)
jnp
popf
aas
arpl
jmp
sub
stos
mov
scas
and
add
pop
test
cwde
push
cmp
add
pop
fsub
xor
push
sbb
imul
xchg
jae
push
jnp
mov
or
or
xchg
xchg
lock
fwait
push
call
mov
lods
int3
iret
fadd
popf
mov
call
jp
aad
mov
cmp
adc
hlt
ret
mov
popf
js
inc
mov
xchg
pop
dec
ffreep
fwait
sub
cdq
loope
addr16
cld
cmp
pop
cdq
fnstcw
jne
add
add
add
cmc
jnp
stos
std
sbb
pop
aam
dec
stos
inc
sahf
mov
xor
jmp
pusha
xchg
jne
push
outs
pop
jb
sbb
cmps
jo
push
pushf
jp
in
je
xchg
pop
stos
out
les
iret
fstp
sub
push
leave
loopne
mov
idiv
and
xor
jmp
ja
hlt
sub
dec
or
adc
arpl
adc
mov
sbb
inc
push
shr
mov
inc
test
and
rol
in
xchg
inc
inc
data16
push
sbb
or
jp
mov
pop
les
pop
iret
lahf
imul
dec
mov
adc
lea
fbld
cs
rcl
dec
in
sbb
mov
nop
popa
fucomi
repnz
jg
inc
xchg
cld
pop
mov
sbb
int3
adc
sahf
pop
sbb
and
lods
pop
mov
mov
inc
fnstenv
fsub
jno
xor
xchg
ja
jge
adc
xchg
pop
mov
add
mov
test
and
sbb
sbb
jle
fcmovb
rcr
ret
xchg
cdq
jl
int3
xchg
repnz
mov
dec
mov
mov
rcr
xchg
lods
and
fild
mov
fyl2x
dec
fimul
into
jo
adc
jnp
call
out
xor
xor
pop
mov
ins
mov
scas
adc
loopne
fcomp
nop
outs
sbb
call
pop
xlat
and
fmul
pop
jnp
jecxz
cwde
into
sahf
std
nop
cwde
and
cwde
(bad)
add
dec
add
ins
mov
push
test
mov
daa
add
mov
shl
mov
out
cmp
sub
mov
and
adc
mov
aam
xor
mov
test
rol
in
pop
inc
cmps
adc
pop
pop
shl
jnp
xchg
dec
fnstcw
imul
hlt
dec
cmps
retf
fdiv
scas
xchg
cmp
sub
push
mov
or
sub
movs
xor
popf
xchg
add
xor
or
sbb
fdivr
popf
leave
div
or
imul
(bad)
aad
and
fst
xchg
inc
add
adc
sbb
movs
rol
mov
mov
lds
sub
xchg
ja
mov
jmp
jo
xchg
jo
cmp
fnsave
lods
dec
cmps
icebp
mov
pop
sbb
dec
mov
lods
test
inc
hlt
adc
cmp
pop
iret
inc
pop
or
mov
jo
iret
pop
cmp
lock
adc
cmc
in
ror
popf
pushf
mov
jb
mov
loopne
jne
sub
pop
or
pop
and
mov
jnp
mov
cmc
sub
(bad)
test
paddb
xchg
inc
(bad)
stos
data16
or
cmp
test
dec
add
cli
scas
pop
and
or
shr
pushf
call
xor
test
rcr
sbb
inc
sub
movs
jo
or
jg
add
mov
es
int3
or
push
stos
ja
jno
and
add
fidivr
sbb
adc
in
arpl
iret
sub
popa
rcl
leave
adc
dec
cs
in
(bad)
fs
(bad)
add
or
aaa
push
leave
test
cmp
not
add
push
mov
out
(bad)
xchg
dec
xchg
inc
mov
leave
and
out
mov
push
pushf
and
(bad)
(bad)
enter
imul
fisttp
and
ins
cdq
rcl
out
jne
jecxz
lea
ins
and
and
outs
in
es
outs
jns
dec
fst
add
inc
fdiv
or
pop
jl
and
test
cmp
movs
mov
push
movs
mov
add
push
xchg
(bad)
hlt
fldenv
in
gs
sti
call
inc
lock
cmp
adc
mov
ds
ds
ficom
mov
or
cmps
mov
cwde
aaa
lods
mov
cmp
dec
jno
outs
or
xchg
inc
int
ror
mov
xor
push
paddw
inc
hlt
out
bound
jmp
dec
push
xchg
cdq
iret
fnstenv
scas
stos
mov
sbb
xchg
push
cli
inc
mov
dec
add
out
ficom
push
cmc
sub
cmp
mov
dec
and
push
add
movs
mov
mov
xor
jecxz
push
push
shl
cdq
mov
pop
dec
test
cmp
inc
pop
sub
jb
mov
dec
movs
sti
adc
fcmove
jge
jno
push
mov
stos
and
call
push
cmp
cmp
enter
push
pusha
mov
or
loope
pop
inc
in
ds
mov
mov
(bad)
stos
retf
and
out
into
xchg
jge
and
xchg
inc
xchg
push
scas
stos
mov
adc
push
retf
(bad)
xor
pop
inc
mov
mov
xchg
mov
jno
movs
mov
es
imul
data16
push
out
popa
adc
cwde
mov
or
mov
dec
add
outs
mov
cmp
cwde
jmp
xor
retf
inc
sbb
push
stos
pop
out
xchg
xchg
mov
or
dec
adc
es
sub
fidiv
out
add
adc
lahf
sbb
aad
adc
add
push
mov
in
cmp
jmp
xchg
fwait
mov
cld
add
sahf
imul
cs
(bad)
fiadd
std
call
cmp
pop
cdq
addr16
iret
pop
xor
cmp
pop
mov
mov
cmp
jge
test
mov
stos
pop
fcomp
lds
jo
and
(bad)
fstp
jns
inc
dec
les
pop
pushf
std
aad
iret
pop
xor
les
div
inc
popf
push
int
sub
cmovp
push
test
aam
push
mov
add
cdq
into
mov
or
sub
es
and
push
cld
sar
pop
and
mov
xor
bound
xor
enter
popf
mov
adc
mov
cmp
adc
fsubr
cmp
adc
aas
adc
out
or
das
lock
pop
test
fdivr
xor
xchg
outs
xchg
adc
pop
not
jmp
retf
fnstcw
sbb
xor
sahf
jmp
add
add
fisttp
jmp
lods
movs
fisubr
xor
clc
mov
xor
inc
inc
inc
push
mov
sbb
push
movs
jecxz
das
and
dec
leave
test
sbb
inc
sub
xchg
mov
or
sbb
test
or
aad
pop
pop
enter
in
(bad)
fucomp
cmps
hlt
icebp
lock
test
int
shl
dec
xchg
jb
sub
xchg
sbb
sbb
adc
jle
call
dec
mov
inc
sub
mov
test
das
sub
xchg
(bad)
xchg
outs
add
mov
mov
push
push
cwde
ror
jge
xchg
ins
and
sbb
mov
out
cmp
or
jmp
xchg
xchg
pop
push
mov
out
movs
push
imul
fwait
sub
fisttp
aas
dec
in
fcom
hlt
ins
in
stc
jnp
jle
mov
call
sbb
movs
mov
pop
f2xm1
adc
int
jbe
dec
mov
pop
out
int
cmp
mov
les
or
test
dec
add
fidiv
adc
xchg
xchg
call
jmp
jmp
dec
jno
out
cmp
inc
rcl
mov
sbb
and
cdq
shl
sbb
scas
and
mov
sbb
mov
sbb
dec
jge
or
data16
dec
int
or
jge
mov
adc
je
call
ret
clc
or
test
pushf
adc
scas
adc
pop
scas
jle
inc
lahf
push
movs
pop
or
xchg
(bad)
jnp
repnz
xor
jno
shl
xor
jle
(bad)
push
shl
arpl
jecxz
fstp
or
js
add
dec
or
mov
cmp
dec
dec
pop
mov
mov
xchg
xchg
(bad)
in
(bad)
pop
(bad)
cdq
les
out
test
xor
add
movs
add
rcl
enter
sbb
inc
xchg
fld
pop
aad
out
mov
out
mov
in
xchg
(bad)
or
gs
call
fs
shl
push
cs
jp
push
ss
sbb
in
cmp
test
mov
dec
fsub
lods
pop
(bad)
retf
push
adc
pop
or
gs
out
sub
jmp
loop
pop
test
dec
xor
aam
dec
mov
mov
clc
(bad)
scas
sbb
fwait
jge
mov
iret
jnp
gs
sbb
in
mov
into
pop
fs
jne
movs
nop
loope
fiadd
icebp
adc
push
scas
in
ins
or
cmp
adc
fwait
out
sti
add
je
add
mov
mov
sub
dec
jnp
lea
idiv
dec
div
or
xor
jmp
lods
sar
mov
xor
sub
(bad)
je
sbb
inc
xor
or
push
push
adc
div
ret
mov
mov
rcl
out
mov
or
test
and
std
scas
(bad)
push
jb
push
loopne
adc
(bad)
in
push
push
icebp
xchg
fild
test
aas
in
test
pop
and
fcomip
mov
aad
imul
mov
clc
sub
fcomp
imul
not
push
ror
dec
repz
push
in
out
jmp
xchg
int3
mov
(bad)
arpl
clc
mov
jl
jo
fwait
xor
enter
jle
pop
mov
cmp
push
dec
adc
or
pop
inc
sbb
pop
xlat
mov
xor
push
pop
pop
loop
mov
les
stos
stos
pop
jp
mov
shl
add
mov
into
leave
and
ret
xchg
mov
dec
in
mov
cs
fwait
add
addr16
ror
jge
adc
lock
push
adc
fnstsw
addr16
pop
mov
pop
mov
sbb
sti
dec
push
and
lea
movs
mov
retf
push
mov
xchg
loop
adc
arpl
and
jns
out
or
sahf
lods
test
sbb
push
mov
add
test
dec
cli
lds
jne
mov
xchg
mov
jmp
push
aam
sub
ins
inc
out
aam
pop
sub
mov
sub
sbb
sbb
loope
lea
cmp
inc
xchg
ds
call
shl
rcl
in
out
cmps
push
sbb
in
dec
push
or
mov
leave
mov
les
data16
(bad)
cmp
mov
mov
dec
enter
dec
mov
xchg
call
pusha
nop
mov
and
mov
add
mov
scas
sahf
call
sub
jg
jae
popf
dec
mov
out
jbe
ror
test
add
sbb
mov
in
hlt
mov
outs
lods
mov
mov
inc
mov
test
lods
aad
out
mov
mov
sti
push
cdq
ss
xchg
pop
push
jo
dec
adc
pop
push
xchg
(bad)
fimul
(bad)
jp
inc
inc
movs
je
xchg
dec
bound
inc
lock
push
inc
aad
mov
mov
xor
sar
aaa
daa
and
jmp
jmp
sbb
xor
fs
push
or
adc
pop
push
or
les
push
daa
std
or
call
inc
mov
std
inc
sbb
sbb
retf
stos
in
shr
test
sub
les
inc
sub
cld
jns
dec
add
fst
gs
cdq
mov
dec
rcl
cld
sub
daa
pop
jg
mov
int
mov
mov
ret
cmps
pop
jnp
cld
push
and
sbb
int3
retf
(bad)
cmc
xor
imul
(bad)
mov
(bad)
jnp
stos
fldenv
stos
cli
std
adc
mov
call
inc
out
cmp
mov
repnz
jmp
hlt
sub
adc
jb
je
(bad)
xchg
dec
add
mov
pop
xor
scas
add
cmp
mov
bnd
ss
mov
enter
iret
ss
cmp
int3
cld
mov
into
mov
mov
sub
mov
xor
stos
adc
cmp
xchg
ror
push
int
and
iret
cmp
xor
pop
repz
ja
iret
jo
imul
cmp
and
cmp
test
js
add
les
cmp
inc
adc
jge
addr16
mov
cmp
add
fadd
sbb
push
adc
or
icebp
out
push
imul
shr
xlat
and
jl
inc
jg
dec
cli
call
mov
ds
or
mov
pushf
outs
jo
cdq
ret
sub
scas
jl
jbe
mov
hlt
stos
aad
xchg
dec
or
push
imul
jg
mov
test
shl
adc
jg
xchg
add
mov
pop
mov
icebp
test
scas
mov
cdq
clc
pcmpeqd
pop
cwde
shr
ss
inc
mov
jnp
shl
fidivr
jmp
and
mov
imul
adc
cmps
mov
inc
cmc
add
add
jg
sahf
add
fisttp
mov
push
pop
adc
adc
push
shr
pop
mov
add
dec
dec
jns
pop
push
adc
daa
and
out
adc
imul
mov
pop
out
fwait
push
lods
add
cmp
iret
xor
mov
repnz
mov
cs
jmp
imul
sub
gs
inc
inc
mov
pop
arpl
or
mov
and
je
in
mov
nop
lea
popa
xchg
test
add
xor
jae
repz
push
js
jecxz
jne
mov
mov
dec
or
imul
adc
jne
cmp
dec
pop
pop
or
mov
push
(bad)
lock
je
movs
sub
mov
(bad)
dec
enter
mov
pop
inc
popf
inc
jb
aas
fs
(bad)
lahf
xor
or
lods
sub
iret
loopne
mov
mov
(bad)
imul
dec
js
cmp
xchg
mov
leave
jmp
jg
or
cdq
leave
mov
or
xor
retf
xlat
adc
test
push
inc
imul
in
push
mov
retf
sar
sahf
addr16
mov
stos
mov
adc
cmp
sbb
add
pop
mov
jl
dec
cmp
out
push
fisub
pop
aaa
push
pop
outs
dec
mov
aam
pop
push
out
out
xchg
rol
cmps
mov
push
cmp
out
inc
scas
jmp
mov
stc
pushf
pop
pop
add
leave
mov
mov
xor
aaa
push
stos
add
cmp
and
sub
dec
mov
pusha
sub
cmp
xor
lods
cmp
sbb
xchg
adc
ret
jmp
cmp
mov
inc
cmp
xor
adc
push
les
sar
dec
retf
ins
and
out
jbe
mov
dec
mov
clc
jle
popf
xchg
jmp
or
nop
inc
xchg
inc
push
xor
cmp
out
mov
push
cmp
std
shl
not
sbb
pop
push
lea
jae
xchg
lea
pop
bnd
test
retf
(bad)
ja
int
xchg
fld
daa
dec
ret
xor
outs
jne
sbb
leave
mov
mov
jp
gs
xor
jo
xor
sbb
adc
mov
fcmovu
nop
pop
mov
stos
lds
outs
xchg
inc
sub
cmps
js
xor
and
int3
js
mov
fiadd
rcl
outs
sti
mov
(bad)
hlt
sbb
dec
or
push
cmpps
and
imul
ins
imul
adc
push
movs
jns
and
mov
shl
jae
sub
(bad)
sbb
cmp
and
pusha
(bad)
adc
mov
into
dec
rol
lahf
sbb
xchg
shl
add
imul
push
mov
mov
loope
xchg
xlat
or
mov
imul
movs
inc
jmp
les
lea
les
push
or
adc
mov
loope
fcomp
xor
ins
jnp
jecxz
pop
pop
inc
push
(bad)
mov
popa
cwde
dec
outs
nop
xchg
jle
les
out
jp
sub
das
mov
into
inc
repz
mov
push
pop
fistp
mov
lds
dec
fsub
cld
mov
imul
in
add
adc
movs
sub
add
sub
int3
test
jmp
aas
jmp
add
(bad)
jp
sub
enter
mov
xor
call
xchg
pop
pop
jae
cs
(bad)
cli
and
and
mov
cmp
inc
cmp
and
pop
shl
add
mov
retf
outs
mov
(bad)
je
cmp
cmp
push
mov
mov
xchg
cmp
int
movs
dec
push
jne
inc
pop
(bad)
mov
pusha
xchg
xchg
daa
arpl
retf
sub
ret
mov
adc
add
stos
fs
ja
leave
jno
idiv
cmp
or
(bad)
loopne
clc
inc
sbb
dec
sbb
outs
inc
es
adc
pop
jae
xor
imul
dec
neg
jno
int
and
scas
adc
mov
pop
stos
arpl
mov
lds
and
push
push
cmp
rol
jmp
mov
ficom
fwait
test
mov
adc
sub
ret
outs
mov
dec
mov
lahf
div
push
(bad)
(bad)
div
sub
sub
mov
add
mov
mov
cmps
sbb
(bad)
xor
popa
xlat
inc
movs
mov
bound
fdivr
(bad)
mov
out
test
adc
sbb
out
int3
dec
xchg
cmps
xor
shl
xchg
cmp
xchg
or
xchg
test
ss
cli
cmp
pusha
jb
aad
test
test
mov
inc
repnz
lea
jmp
call
sub
repnz
cdq
and
jae
arpl
int
call
test
sbb
pop
and
lods
jmp
enter
push
fisub
push
mov
mov
mov
lds
enter
test
push
outs
rcl
cmp
adc
or
or
or
fiadd
ret
(bad)
pushf
cmp
ss
adc
inc
add
sub
bound
adc
dec
bound
push
das
dec
mov
adc
adc
cs
mov
and
shl
dec
xchg
pop
sbb
adc
imul
cmp
mov
add
push
imul
mov
ret
or
adc
lods
inc
stos
mov
mov
test
inc
push
cmc
lds
test
inc
jl
(bad)
xchg
ret
call
rcr
pusha
fiadd
dec
or
jg
retf
les
aaa
jnp
popa
sub
mov
mov
push
dec
pop
aam
outs
ret
add
and
dec
out
(bad)
out
aad
dec
es
push
sub
dec
xchg
and
loope
push
push
jb
out
jns
mov
imul
pop
lods
iret
(bad)
dec
scas
jb
push
aas
sti
xor
shl
jbe
pop
lods
inc
xchg
jge
add
mov
adc
mov
cmp
jg
and
jp
pop
or
mov
test
aam
lahf
fs
push
and
pop
out
pop
ffree
cdq
mov
test
jae
jmp
push
jb
push
adc
out
sbb
cmovns
inc
jb
mov
inc
and
shr
push
push
outs
ror
lock
or
xchg
jp
fisub
leave
in
cmps
cmp
popf
xor
out
add
(bad)
pop
push
mov
popa
mov
add
scas
and
aad
or
pop
push
pop
cmps
add
pop
ja
fmul
data16
ins
inc
lods
or
mov
adc
ins
xor
mov
sbb
aam
hlt
cmc
(bad)
push
(bad)
sti
mov
jns
add
outs
mov
enter
cmp
or
fistp
test
cmp
frstor
bound
pop
sub
lods
jno
cli
jp
ffreep
outs
or
adc
xchg
or
cmp
jp
(bad)
bound
imul
das
jmp
sar
mov
cmp
mov
dec
mov
inc
into
pop
rcl
fcom
pop
lds
dec
stos
adc
push
sbb
and
cmp
fadd
fisttp
arpl
push
cmp
adc
adc
mov
sbb
inc
jl
rcl
aas
push
add
sti
mov
inc
and
push
mov
in
(bad)
into
jge
push
sbb
shr
inc
sub
adc
sbb
sbb
jle
mov
or
push
pop
les
inc
retf
cli
jnp
loop
int
mov
fwait
inc
inc
sbb
mov
inc
movs
inc
stos
jmp
jns
out
push
hlt
fnsave
inc
ss
enter
std
arpl
sub
daa
test
imul
imul
dec
inc
lock
mov
cs
add
xor
repnz
loope
adc
inc
in
inc
repz
mov
push
pop
xchg
pop
push
mov
sub
xchg
add
dec
lea
imul
jne
jo
pusha
cmp
mov
fsubr
stos
stos
cwde
pop
inc
pop
inc
sahf
(bad)
or
cmps
xchg
jp
lea
sbb
in
dec
jecxz
cli
popf
shr
jmp
xor
jmp
sbb
in
test
mov
dec
xchg
mov
adc
push
movs
ret
mov
pop
mov
jmp
pop
or
mul
pop
pop
push
add
rol
mov
aas
or
xor
lods
sbb
mov
jo
and
int3
mov
xchg
scas
and
sbb
inc
xchg
jb
mov
jecxz
mov
fs
jecxz
inc
ja
je
lds
pop
ss
jmp
jge
(bad)
es
cmps
loope
out
cmp
(bad)
loope
push
jl
push
int3
dec
cmc
cmps
idiv
mov
out
xchg
pusha
sub
ds
dec
(bad)
and
imul
adc
add
call
lds
hlt
push
dec
sbb
test
xchg
sahf
scas
cmp
inc
enter
add
mov
aam
mov
adc
retf
jno
sbb
outs
aaa
dec
cld
jbe
(bad)
icebp
mov
outs
mov
daa
mov
lds
(bad)
xor
fld
in
outs
outs
jp
push
or
xchg
inc
ret
pop
jg
test
dec
mov
(bad)
(bad)
jne
ja
pop
ret
and
add
cmps
mov
jmp
jae
addr16
xchg
das
adc
fs
adc
xchg
jno
ds
mov
xchg
into
push
cmp
cmp
mov
sub
xchg
mov
xchg
cmp
pop
dec
dec
iret
iret
dec
push
mov
xchg
dec
out
or
jl
or
inc
nop
jb
cmp
sbb
mov
popf
mov
cwde
dec
ja
loop
test
lock
sbb
or
int
ds
mov
int3
sub
xchg
push
mov
or
sub
xor
xchg
addr16
test
inc
inc
and
out
cmps
stos
in
or
fst
out
aaa
or
shr
cli
mov
stc
jecxz
dec
dec
test
outs
mov
jbe
(bad)
cmp
pop
xchg
push
mov
repz
popf
loopne
sbb
sbb
daa
or
jno
sar
push
sbb
into
inc
push
mov
adc
rcr
jb
inc
jb
pop
ins
mov
sti
mov
push
aas
aas
pushf
push
fnsave
jo
aaa
add
mov
cld
(bad)
popa
mov
mov
scas
mov
mov
jmp
add
inc
imul
inc
xor
mov
lahf
out
cdq
sbb
rcr
fwait
loopne
add
cdq
add
jp
das
scas
scas
xor
xor
int
cwde
and
xchg
ins
dec
jp
scas
mov
lods
pop
les
iret
cli
inc
inc
mov
repz
loopne
ret
popf
sub
push
psrlq
cmp
mov
in
push
pop
push
ret
push
add
(bad)
sub
movs
es
jo
lea
mov
sub
retf
lock
je
sbb
int3
dec
or
(bad)
shl
mov
mov
push
jo
xchg
(bad)
imul
(bad)
outs
arpl
sbb
push
clc
xor
outs
sub
mov
or
sub
sub
shl
call
jge
mov
or
mov
sbb
arpl
push
fsub
test
push
jo
iret
cdq
xchg
mov
iret
inc
(bad)
retf
push
mov
jg
out
mov
jae
outs
es
ret
ror
pushf
sub
repnz
repz
pop
add
or
scas
mov
xchg
push
aad
pusha
jnp
gs
iret
pop
mov
push
scas
cmp
add
sub
cmp
sar
popa
adc
xor
add
inc
cmp
xchg
add
push
mov
(bad)
js
jmp
fcmovnbe
lock
mov
dec
scas
outs
ror
mov
lahf
ds
sti
mov
push
dec
push
sbb
aaa
and
cmp
xor
ss
ficom
xor
jbe
les
sbb
data16
jmp
pushf
mov
add
xlat
cmps
sub
add
lods
movs
fcmovnu
(bad)
mov
enter
pop
stc
and
int
cli
(bad)
stos
sbb
or
inc
shr
and
lock
aad
cmp
inc
das
mov
leave
mov
add
push
cmc
fsubr
mov
inc
dec
sub
jb
inc
ret
mov
inc
les
shl
push
bound
cmp
inc
lods
sbb
inc
aad
call
ror
and
mov
mov
fidiv
jle
jg
sbb
or
in
sar
and
mov
pusha
pop
pop
jb
inc
movs
sbb
pop
pop
icebp
push
push
scas
or
nop
dec
out
and
and
pop
stos
sar
jns
jbe
(bad)
jne
xor
fwait
jae
lods
in
movs
dec
test
(bad)
popa
lahf
(bad)
test
cmp
ins
add
add
adc
pop
mov
jne
or
outs
jl
(bad)
adc
mov
mov
scas
xchg
mov
dec
iret
test
cmp
cmc
vphsubwd
add
cmp
xchg
mov
dec
sub
dec
ror
xchg
jmp
sub
push
ss
pop
jnp
in
test
imul
jmp
pop
or
rol
jle
and
(bad)
fbld
or
mov
cwde
pop
inc
out
jecxz
sbb
arpl
shl
ins
push
pop
xchg
fwait
cwde
sub
sbb
popa
jecxz
iret
les
jne
dec
pop
push
out
and
hlt
cmc
sub
pop
js
jo
leave
pusha
daa
call
popa
push
outs
lds
(bad)
jle
loop
aaa
nop
ds
xor
cmp
inc
mov
pop
pop
std
dec
push
ret
add
mov
ror
outs
adc
adc
xor
fld
jmp
ja
into
sbb
inc
in
js
fcomp
pop
lock
mov
call
mov
addr16
xchg
add
cmp
imul
and
adc
push
or
mov
int3
dec
(bad)
cmc
ror
out
call
cmc
cmc
xor
fnstsw
ror
push
je
ins
lahf
test
in
mov
xchg
mov
cmp
jbe
and
aas
add
xchg
loopne
inc
cmp
idiv
imul
mov
ror
mov
out
sub
call
rol
scas
pushf
jge
clc
cmp
pop
push
push
fnsave
fidivr
cld
cmps
clc
in
add
sub
or
(bad)
icebp
fld
adc
sub
mov
loopne
xchg
aad
sub
inc
fdivr
xchg
out
sub
add
fs
xor
pop
mov
push
cmp
mov
adc
shl
fmul
idiv
push
stos
test
movs
loop
bnd
mov
add
sti
iret
dec
sbb
push
or
mov
(bad)
sub
or
sub
mov
cmp
pop
dec
xor
jle
sub
xor
jo
pop
add
les
add
sbb
ror
lea
rcr
aaa
lock
jle
sub
jmp
pop
int3
loop
xchg
aaa
and
pop
out
popf
in
fist
clc
pop
shl
jmp
ret
inc
fisttp
mov
fidivr
test
inc
xchg
xchg
stos
xchg
mov
nop
aas
cmp
(bad)
dec
add
loopne
stc
jp
add
je
pop
mov
mov
retf
mov
mov
clc
adc
rol
mov
add
jg
add
fisub
mov
push
xchg
jns
push
pop
dec
mov
mov
(bad)
movs
sbb
leave
call
jl
cmc
aas
mov
addr16
pop
js
sub
mov
sti
cmp
sar
shl
mov
or
or
mov
sbb
and
sub
pop
pop
mov
stos
xchg
js
sub
lds
pop
lds
sbb
sub
or
ret
dec
out
mov
mov
and
das
pop
dec
sti
int3
jbe
shl
xlat
add
cmp
xchg
and
jmp
shl
lock
(bad)
data16
add
jmp
and
sbb
outs
dec
lea
js
dec
fsub
rcl
clc
addr16
retf
pusha
cli
pop
shr
and
or
sbb
mov
mov
aam
cmp
push
and
inc
xchg
inc
pop
inc
inc
pop
xor
fisubr
xor
mov
in
stos
adc
scas
jmp
or
lods
call
sub
mov
jl
in
scas
and
adc
xchg
dec
add
fdivr
data16
aaa
push
ja
addr16
or
ds
or
sbb
or
loop
cmp
xor
or
lods
push
nop
xchg
(bad)
call
daa
aad
sar
push
push
ret
push
(bad)
mov
dec
shl
rol
ja
pop
sub
jnp
int3
pop
in
rol
mov
es
add
pop
call
stc
ret
inc
jns
or
push
bswap
out
retf
xchg
int3
cmc
mov
jno
fidivr
pushf
add
xchg
out
mov
cld
cmp
xor
outs
xchg
xor
ds
retf
lods
iret
jns
mov
jp
push
hlt
xchg
add
inc
fwait
aas
jmp
adc
dec
int
retf
in
jmp
inc
ror
pop
ins
pop
push
stc
fldenv
pop
sub
ror
int3
pop
mov
ss
push
jbe
add
sub
xchg
lds
test
fisubr
xor
inc
cmp
out
clc
jne
enter
add
jno
cmp
rol
push
or
rep
push
pop
out
add
aas
add
rcr
mov
or
mov
in
data16
mov
cli
sub
push
cwde
adc
adc
or
xchg
mov
test
ins
retf
dec
pop
or
jg
add
pop
lds
pop
or
inc
movs
sahf
sub
and
es
ja
inc
out
mov
sub
ds
adc
out
dec
xor
leave
popa
cld
sub
sub
mov
xor
dec
pop
icebp
movs
jnp
repz
pop
mov
loope
loop
dec
test
and
adc
std
and
sbb
adc
lock
inc
(bad)
popa
ss
mul
pop
arpl
pop
les
mov
out
cmp
inc
or
test
jle
int
inc
rol
jnp
(bad)
inc
jge
push
pop
out
mov
clc
push
pop
push
shr
mov
cmp
mov
rcr
loop
movs
and
xchg
sbb
mov
xor
xchg
icebp
xor
int3
lock
jecxz
pop
mov
xchg
cld
jb
movs
mov
inc
es
aas
fcom
sbb
push
jnp
cdq
shl
xchg
(bad)
mov
ins
ret
pop
lods
push
sti
sbb
loope
xchg
in
inc
cmp
into
sub
push
cmp
add
sub
sbb
and
mov
cmps
test
inc
leave
mov
lock
lock
retf
sbb
sbb
mov
rcr
jp
call
dec
ret
pop
jae
jmp
sub
push
mov
xchg
sti
out
mov
pop
push
dec
add
scas
out
jmp
dec
aam
inc
push
xor
adc
jns
imul
pop
xchg
or
sbb
outs
gs
and
inc
ret
jmp
neg
mov
fs
mov
test
into
out
dec
hlt
mul
(bad)
outs
loope
idiv
test
push
repz
xlat
call
(bad)
dec
mov
inc
into
out
pop
inc
aam
movs
repnz
mov
in
out
das
jno
adc
movs
mov
ror
and
pop
movs
pop
daa
xchg
test
or
jo
(bad)
aas
adc
sbb
outs
adc
xchg
fdiv
in
rol
fcom
add
repnz
mov
rcr
adc
add
sbb
mov
push
mov
cld
push
pop
mov
mov
mov
sub
sbb
inc
push
add
mov
lock
mov
imul
mov
jbe
jmp
xchg
gs
mov
mov
inc
pop
ja
adc
ins
xchg
pop
scas
jle
xchg
adc
inc
sbb
add
mov
and
ds
aaa
xchg
xor
ins
cmp
repz
into
and
pop
jmp
mov
xchg
imul
movs
mov
jl
push
pop
pop
dec
shl
lahf
and
jecxz
pop
gs
ror
inc
hlt
repnz
addps
xor
pop
retf
jp
div
inc
cdq
pushw
and
aad
mov
dec
adc
and
dec
adc
call
inc
mov
dec
cmp
repz
push
cmp
or
mov
(bad)
cmc
xchg
clc
sbb
cmp
cmp
shl
mov
jmp
mov
fldenv
cmp
(bad)
mov
jmp
xor
mov
push
lock
push
cmp
sub
mov
cmp
bound
out
into
je
mov
bound
(bad)
sub
push
mov
push
call
dec
into
push
lds
cmps
scas
ins
sub
cmps
dec
mov
call
dec
add
adc
cmps
jl
push
push
add
js
cdq
push
fldcw
inc
loope
mov
dec
dec
je
cmp
mov
aam
xchg
adc
jp
mov
cmc
inc
test
out
sbb
into
mov
jne
out
add
add
mov
mov
lods
mov
dec
out
pop
sahf
and
aad
pushf
fmul
idiv
and
cwde
cwde
mov
or
pusha
pushf
ret
sbb
or
or
sub
fnstenv
xchg
dec
dec
rcr
cmp
fs
inc
add
sbb
lock
xor
popf
(bad)
in
jnp
xchg
push
mov
in
(bad)
xor
xor
xor
fnstenv
int
sbb
shl
out
addr16
or
pop
nop
lods
xor
sub
out
ins
int
jns
sub
mov
movs
out
shr
inc
or
fistp
xchg
sub
xor
(bad)
and
shl
cmp
(bad)
fidivr
push
mov
retf
mov
out
mov
push
in
push
(bad)
mov
stc
imul
sti
add
icebp
daa
adc
imul
mov
inc
or
movs
mov
fisub
(bad)
(bad)
sar
(bad)
xor
ret
jmp
mov
adc
xchg
fcmovne
es
iret
out
and
lods
popf
in
mov
lahf
cli
push
xor
push
movs
jnp
clc
sbb
retf
not
inc
pop
repz
mov
mov
cmp
push
ins
call
sar
loop
jmp
xor
cmps
imul
cmps
(bad)
stos
call
jne
in
mov
sbb
mov
fst
enter
out
rcr
xchg
xor
loop
jecxz
inc
and
mov
pop
scas
add
mov
into
mov
mov
test
and
xor
dec
push
cmps
repnz
je
push
xor
pop
sbb
and
xchg
jp
(bad)
stos
adc
cdq
jb
xor
clc
cld
mov
movs
jmp
scas
fisttp
lds
adc
dec
int3
or
hlt
jne
cdq
rol
xchg
(bad)
dec
dec
sbb
mov
imul
pop
sahf
fwait
pop
inc
test
gs
mov
jae
sbb
nop
call
aad
out
mov
sub
aas
pop
mov
push
jnp
(bad)
mov
cmps
mov
dec
int
je
mov
xchg
cs
jb
mov
repz
imul
cmp
mov
and
aad
dec
sar
push
xor
sbb
sbb
movs
xchg
jae
lea
imul
inc
xor
sahf
fs
(bad)
iret
in
fidivr
stos
jo
sub
mov
mov
sbb
dec
(bad)
mov
lahf
cmp
sbb
movs
xchg
mov
mov
test
inc
sbb
dec
mov
test
mov
(bad)
fnsave
add
js
jo
push
into
les
(bad)
jp
cmp
sbb
mov
push
jb
jns
clc
fst
fcomp
add
fcmovu
push
arpl
dec
jnp
ror
retf
out
cmc
rcr
dec
je
es
ret
and
jle
inc
rcl
lods
inc
popf
inc
dec
dec
jno
in
mov
dec
test
iret
ja
in
add
ror
movs
add
cmp
sahf
adc
push
nop
fnstsw
daa
cmp
call
adc
jnp
mov
adc
(bad)
fidiv
add
mov
arpl
lds
or
push
mov
add
adc
mov
imul
test
outs
and
xchg
push
jo
and
lahf
gs
retf
lods
xchg
std
aaa
fiadd
jp
push
inc
dec
sar
xor
mov
push
push
scas
dec
imul
mov
xchg
into
and
jle
xor
das
fcmove
adc
sub
mov
and
cmps
(bad)
std
mov
sbb
mov
cmp
sbb
movs
push
ficom
je
mov
xchg
fmul
aaa
pop
cmps
mov
mov
mov
(bad)
(bad)
pop
push
xlat
test
xchg
enter
or
cmp
stc
lahf
jl
test
rol
sahf
mov
mov
mov
pop
popa
retf
mov
movs
imul
xchg
mov
jmp
call
cmp
pop
mov
push
cmp
(bad)
xchg
pushf
leave
push
or
push
inc
mov
mov
add
daa
adc
sub
or
xor
div
call
jb
jne
mov
adc
aas
enter
and
enter
xchg
imul
cli
or
cli
jmp
push
dec
imul
dec
sar
push
sar
adc
mov
xchg
shl
fiadd
mov
ret
mov
loop
xchg
cs
adc
mov
jecxz
leave
xchg
iret
adc
mov
std
mov
call
daa
adc
jge
call
nop
dec
jbe
jnp
into
mov
push
stos
arpl
cld
clc
outs
or
test
repnz
adc
mov
(bad)
in
xchg
sbb
xor
mov
in
and
xlat
push
mov
mov
xchg
cmp
sub
lods
outs
nop
xor
and
icebp
sbb
(bad)
jl
aam
outs
sbb
(bad)
xor
xchg
retf
pop
js
xchg
pop
popa
ret
sbb
sub
and
xchg
adc
mov
adc
js
in
icebp
inc
cld
and
rol
enter
repnz
cmps
repnz
xchg
inc
fidivr
add
push
pop
inc
and
dec
test
(bad)
mov
sub
pop
loope
jmp
sahf
push
mov
(bad)
mov
icebp
dec
repnz
cmp
push
cmc
xchg
dec
push
mov
cmp
(bad)
gs
nop
loope
adc
push
loope
data16
popa
das
sub
push
jae
jnp
push
les
iret
xchg
iret
adc
(bad)
mov
mov
cmp
clc
shl
cmp
xchg
or
xor
dec
addr16
ret
cmps
mov
xor
xor
popf
xchg
rcl
cmp
jo
call
in
cdq
les
push
or
shr
daa
cmp
aad
test
pop
cs
mov
pop
(bad)
sub
iret
dec
sti
out
lods
mov
mov
sahf
jbe
sbb
mov
jp
sub
mov
imul
dec
and
push
test
push
repnz
and
jb
pop
imul
(bad)
loope
repnz
mov
mov
arpl
cmp
jnp
into
jge
cmp
jae
add
dec
fisub
loope
inc
out
xor
aaa
in
rcl
std
and
repz
cld
and
push
dec
mov
dec
adc
push
dec
xchg
cmc
mov
leave
jecxz
hlt
ins
jp
mov
cld
pop
out
lds
jmp
(bad)
fst
vmulsd
clc
or
sub
and
mov
push
pusha
js
inc
push
in
cmp
xchg
out
fsub
mov
jo
mov
cmp
pop
out
xor
je
mov
or
pop
mov
ja
outs
lock
movs
inc
cmp
rol
into
xchg
shr
rcl
sbb
or
sub
or
xor
jae
ja
cmps
stos
outs
mov
loope
mov
mov
and
pop
jmp
add
xor
inc
aam
mov
and
retf
inc
jae
push
cwde
aad
enter
pop
inc
lods
adc
ja
rcr
test
std
jmp
(bad)
ins
push
and
pop
xor
ret
pop
icebp
lea
jo
mov
sbb
jmp
jge
retf
adc
rcl
out
les
std
xor
mov
ret
xchg
mov
in
inc
pop
cmc
mov
clc
xchg
popf
mov
(bad)
aam
pop
in
mov
sahf
sub
sar
adc
(bad)
or
cmp
enter
inc
lock
push
sbb
mov
pop
out
in
stos
aaa
sbb
jmp
out
inc
or
fisub
dec
daa
pop
mov
outs
outs
stos
push
add
and
fisttp
jo
fcomp
sbb
xlat
ss
movs
push
mov
aam
stc
cmp
cmps
fistp
push
lods
mov
push
push
push
pop
ins
xchg
enter
pop
stos
not
or
jmp
xchg
inc
or
sahf
sbb
call
repnz
xor
cmp
xchg
or
jb
inc
leave
inc
or
cwde
aam
in
(bad)
lea
mov
addr16
jo
cwde
add
add
in
scas
and
std
fistp
sbb
call
xor
sbb
fst
mov
cmp
movs
lds
jmp
cld
push
stc
mov
xchg
dec
sbb
mov
xor
shl
xchg
or
or
movs
fdivr
aam
mov
inc
cdq
lea
into
push
fwait
xor
adc
pushf
adc
sub
popf
jmp
push
mov
fcomp
xchg
pushf
mov
pop
jae
inc
mov
jmp
mov
(bad)
cmp
pushf
stos
adc
inc
pop
shr
ins
es
and
dec
shl
dec
inc
cmc
(bad)
xchg
in
mov
retf
pop
ret
sbb
sbb
ror
loope
popa
jmp
imul
call
scas
dec
mov
sub
dec
fcomp
test
sbb
cli
sub
jne
les
test
into
pop
jno
bound
mov
or
dec
and
sub
(bad)
inc
cli
nop
jl
adc
xchg
mov
or
bound
and
fisttp
aas
xchg
push
pop
nop
sub
ror
sub
test
add
sub
mov
xor
ds
arpl
mov
jmp
jmp
mov
jge
fsubr
xchg
stos
pusha
inc
ins
add
pop
arpl
ja
add
mov
test
aam
sub
stos
mov
stc
sbb
dec
xlat
dec
sub
jge
pop
xchg
fdivr
adc
gs
push
adc
(bad)
in
add
(bad)
hlt
inc
outs
das
or
mov
cs
fdiv
popf
push
out
pushf
adc
sub
push
sar
xor
outs
and
and
shr
xor
stc
xor
rol
mov
add
adc
pop
repz
jge
push
jle
pop
xchg
mov
test
xchg
(bad)
inc
adc
in
mov
adc
clc
push
xor
inc
cmps
xchg
push
mov
retf
adc
bnd
repz
outs
iret
xchg
xlat
push
in
mov
add
pushf
push
movs
enter
shr
fidivr
xchg
std
adc
push
(bad)
mov
pop
jmp
sbb
add
add
in
mov
dec
add
popa
mov
add
inc
addr16
adc
push
mov
lods
scas
xchg
sbb
xchg
ins
fucomp
sbb
fwait
scas
lea
dec
push
push
mov
jg
cld
dec
and
stc
sbb
div
inc
das
cmc
xor
inc
jb
sub
xor
test
mov
adc
adc
sub
inc
sub
cmp
je
cmp
mov
shl
js
push
xor
sub
fist
outs
push
jle
cmp
xor
xor
enter
mov
pusha
push
sahf
rcl
xchg
xlat
push
stos
and
sub
cli
mov
jnp
lods
sbb
out
dec
or
pop
sub
jo
imul
sti
fild
mov
sub
fdiv
mov
push
and
mov
in
std
pop
sbb
pop
push
add
mov
mov
cmps
pop
cmp
mov
xor
push
imul
out
push
test
outs
jle
pop
je
(bad)
rcr
nop
dec
(bad)
dec
mov
(bad)
cmp
cmp
or
cli
neg
adc
clc
(bad)
ds
pusha
or
adc
shr
jl
and
sar
cmp
mov
push
fcmovnbe
cmps
sbb
ret
iret
fdivr
pop
popa
and
add
imul
retf
not
mov
and
sbb
cwde
fisubr
cmp
push
icebp
mov
mov
cmp
fwait
(bad)
fcomp
xor
enter
lock
adc
aad
xor
jmp
movs
xchg
jae
nop
fcmovnbe
add
(bad)
test
mov
mov
or
sbb
ret
scas
mov
mov
adc
push
push
cmp
addr16
fistp
movs
add
stos
pop
pusha
test
or
mov
hlt
add
jne
push
fs
icebp
mov
(bad)
cmp
pop
sbb
or
mov
push
lock
mov
mov
mov
pusha
sbb
cdq
mov
xchg
jns
cmp
sar
sub
setge
jecxz
sub
je
mov
sub
jne
xor
enter
in
mov
call
jbe
push
adc
inc
(bad)
xor
push
mov
popf
lea
add
pop
xor
mov
(bad)
sbb
(bad)
call
mov
adc
ds
cs
xchg
lods
push
test
ja
icebp
or
mov
in
xchg
pop
mov
or
cmp
jno
add
and
lea
mov
test
sub
icebp
(bad)
jle
cli
cdq
mov
cmc
jecxz
in
clc
pop
popa
xor
pop
cmp
mov
dec
xor
dec
push
mov
inc
std
sub
mov
mov
sbb
adc
fsubr
ds
(bad)
popa
and
and
lods
test
sahf
sub
sub
mov
call
xor
dec
jmp
mov
mov
sub
mov
fsub
xor
xor
cs
(bad)
or
les
xor
(bad)
xor
pop
nop
xor
push
add
or
(bad)
fstp
xchg
call
in
clc
iret
movs
add
das
out
outs
push
jmp
outs
inc
aad
sbb
sub
sbb
aad
movs
rol
sbb
and
mov
(bad)
inc
cmps
adc
stos
mov
ins
jl
jmp
shr
scas
push
addr16
mov
xchg
aad
rcr
(bad)
call
and
jl
mov
ins
das
sub
xlat
fwait
call
xchg
mov
les
(bad)
push
cmp
(bad)
mov
lahf
xchg
or
pushf
dec
cmc
xor
pop
push
jae
dec
and
jle
adc
mov
mov
lods
jbe
inc
fs
rcr
jecxz
lods
stos
mov
loopne
fwait
aad
mov
scas
mov
cwde
or
movs
push
xlat
repz
mov
xchg
pop
mov
gs
(bad)
aas
sbb
cdq
xor
(bad)
mov
or
call
mov
adc
movs
xor
test
fwait
sar
jno
imul
shl
dec
mov
gs
test
push
sbb
popf
or
mov
int3
out
or
mov
pop
mov
in
popf
add
xchg
sahf
test
aas
(bad)
cmp
adc
sub
scas
and
pop
rcl
add
retf
mov
mov
pop
inc
pop
xor
jmp
mov
sahf
mov
xchg
nop
aad
scas
test
mov
xchg
jg
clc
adc
pop
push
sub
sbb
cld
out
in
aad
les
xchg
mov
test
dec
jae
and
mov
pushf
mov
pop
jmp
sbb
mov
push
mov
mov
push
push
lds
mov
xchg
inc
push
fxrstor
int
and
sbb
xchg
jbe
xchg
xor
adc
mov
jecxz
aad
loopne
(bad)
fiadd
nop
rcl
cmp
addr16
cwde
scas
popa
pop
sub
sub
(bad)
dec
mov
leave
int
call
and
add
lea
sub
sub
out
int
cs
pushf
sbb
add
pop
mov
and
sub
jb
pop
adc
xor
or
and
jo
test
les
mov
jne
pushf
push
jb
mov
sbb
and
enter
dec
(bad)
repnz
fild
pop
mov
push
and
inc
jle
fist
outs
cs
fstp
pop
push
cmp
pop
jns
retf
call
xor
xchg
loopne
lods
dec
and
push
adc
rol
push
pop
jb
and
cmp
cmp
sbb
ror
mov
mov
pusha
dec
xor
in
pop
jg
dec
repz
aaa
sub
outs
cs
iret
and
out
stos
loope
scas
arpl
daa
sar
push
dec
lahf
nop
sub
mov
fdivr
pop
rcl
mov
xor
call
loope
inc
or
mov
aam
xor
xchg
add
or
inc
or
enter
cmc
mov
scas
push
adc
imul
stc
cmc
push
xor
and
ja
mov
cmp
pushf
add
mov
cwde
cmp
xor
hlt
call
pushf
stos
jmp
scas
jge
ficomp
inc
cmp
lds
mov
pop
push
test
fwait
add
jae
jp
sbb
mov
jns
div
out
mov
test
rcr
pusha
lods
mov
lods
bsf
and
out
(bad)
mov
push
mov
adc
aam
jmp
sub
sub
(bad)
fwait
rep
jbe
je
jge
repz
std
cli
cmp
nop
or
inc
aas
les
pop
pusha
jmp
out
cmp
out
hlt
mov
pop
mov
mov
pop
outs
stos
ja
popa
or
pop
cmp
push
xor
retf
jle
xor
mov
ins
sub
mov
or
(bad)
scas
call
push
dec
adc
add
mov
test
sahf
and
neg
or
push
jae
out
pop
(bad)
dec
js
dec
jmp
inc
call
push
dec
rol
or
xchg
into
and
pop
sysenter
popf
pop
clc
mov
stc
add
gs
cmp
adc
jns
shl
enter
dec
lods
sub
fcomi
test
pop
or
lock
sub
test
xchg
(bad)
pop
mov
xor
mov
dec
dec
and
adc
push
fwait
add
out
int
scas
jne
cli
adc
arpl
nop
outs
repnz
lods
jo
xlat
mov
jb
sti
shl
sbb
loop
(bad)
mov
push
in
sub
jne
mov
push
(bad)
push
dec
sub
jmp
mov
sbb
fadd
push
and
xor
push
pushf
(bad)
mov
or
mov
cli
call
xor
out
add
bound
add
retf
in
popa
sub
movs
test
add
push
or
div
mov
loop
pop
das
sti
lods
dec
lods
fs
jecxz
test
cmc
mov
sub
repnz
push
xor
adc
in
add
push
add
push
cmp
or
inc
jmp
(bad)
lea
cmp
aas
xchg
(bad)
outs
imul
ret
arpl
dec
(bad)
cmp
repz
lahf
dec
retf
cmp
imul
and
dec
loop
pop
add
sub
(bad)
mov
xor
popf
jbe
jns
dec
jb
nop
mov
ins
xchg
gs
shl
ret
out
sbb
in
lods
pop
mov
iret
retf
arpl
es
cmp
xchg
dec
sub
or
push
and
sar
cmp
jae
movs
retf
inc
add
lods
loope
daa
sbb
push
mov
aad
mov
test
retf
dec
dec
mov
hlt
pop
xchg
mov
jmp
jge
xchg
(bad)
pop
sub
lahf
scas
sbb
pushf
scas
mov
adc
outs
rcl
jmp
and
stc
inc
es
aas
cld
pop
inc
loopne
(bad)
jbe
sti
dec
and
fadd
dec
ja
ss
add
nop
in
retf
inc
mov
lods
mov
add
shl
sbb
pop
lods
ret
xchg
push
adc
or
xor
ror
stos
jae
add
push
xor
xchg
test
pop
ret
jle
sahf
sahf
pop
mov
aam
xor
(bad)
xchg
fnstenv
(bad)
std
mov
fiadd
stos
push
shl
cmp
pop
nop
mov
cdq
ret
sar
gs
sub
cmps
cdq
imul
lea
(bad)
repnz
out
sahf
jnp
add
pop
jno
xchg
adc
pop
adc
in
dec
jnp
sbb
or
repz
fwait
and
cmp
stos
pop
into
jmp
push
dec
dec
mov
or
es
and
push
jle
sbb
mov
cs
out
sub
call
adc
or
xor
mov
out
call
sbb
ins
jne
jns
test
pop
jae
inc
fst
cld
dec
mov
adc
pusha
pop
scas
add
add
je
xlat
sbb
loop
push
cmp
loope
xor
pop
movs
fisttp
and
popf
inc
sub
mov
stos
bound
sub
lahf
or
xor
rol
adc
jne
sub
cmp
xor
rcl
scas
test
xor
and
scas
pop
fdivr
lock
mov
push
push
xlat
jo
sub
fs
push
push
shl
mov
or
ss
or
and
pop
mov
or
rcl
inc
mov
test
mul
(bad)
mov
and
or
push
xor
sub
xchg
cmps
and
loop
dec
jmp
inc
cmp
ja
dec
(bad)
cmc
ja
loopne
xchg
inc
retf
clc
push
pop
sub
pop
loop
daa
add
retf
movs
outs
jno
and
stos
adc
push
xchg
or
out
jns
out
stos
add
aad
shl
cs
scas
xchg
mov
xor
dec
fimul
xchg
je
lea
movs
sub
add
inc
cwde
xchg
pop
xor
sub
add
leave
enter
pop
sub
pop
sti
adc
sar
jmp
idiv
pop
cmp
mov
pop
inc
jecxz
stos
idiv
inc
jno
xchg
jns
push
add
dec
stc
out
sub
pusha
repz
test
jb
or
jbe
call
push
int3
clc
mov
data16
and
pop
or
outs
bound
lock
fwait
adc
out
int
cwde
adc
push
div
addr16
xchg
sahf
mov
jno
jge
mov
jp
sub
scas
mov
or
fnstenv
inc
dec
xchg
mov
pop
and
add
out
movs
cli
jmp
sbb
pop
(bad)
iret
imul
aaa
push
push
mov
sub
iret
adc
and
sub
inc
or
or
repz
fnstsw
clc
gs
jl
inc
sbb
loopne
cmp
push
fabs
and
pop
(bad)
cmps
sbb
inc
inc
in
test
aaa
mov
fld
stos
push
or
mov
fisttp
aad
loopne
arpl
jb
push
mov
ficomp
lahf
jp
(bad)
arpl
inc
mov
sub
outs
fld
jb
lock
and
push
inc
dec
stos
aam
out
cmp
fcmovb
mov
test
xchg
js
sub
inc
mov
dec
jg
stos
inc
jl
(bad)
retf
push
pop
pop
ret
sbb
loopne
mov
mov
imul
bound
push
dec
sbb
fmul
mov
add
and
lods
in
dec
add
pop
ret
cld
mov
or
push
sub
jb
and
jnp
rcl
(bad)
mov
addr16
mov
xchg
daa
pop
loopne
fadd
imul
adc
fnstsw
lock
arpl
pop
sti
xor
lea
(bad)
cwde
and
sbb
lods
jnp
xor
(bad)
stos
shl
les
push
pop
es
sbb
sahf
push
jp
mov
inc
test
daa
(bad)
retf
std
cwde
stos
mov
test
sub
fs
mov
imul
xchg
arpl
sbb
inc
jnp
xchg
xchg
sti
inc
xor
or
mov
jl
out
dec
sbb
push
(bad)
enter
(bad)
lds
jmp
pop
repnz
pop
aas
xchg
loope
inc
cmpps
aas
es
mov
lods
mov
add
jb
inc
push
and
loopne
retf
inc
dec
lds
cwde
icebp
adc
retf
mov
mov
mov
pusha
out
cmp
stc
pop
test
sar
nop
nop
or
shl
jge
lahf
and
cmc
push
fsub
add
push
mov
test
sub
daa
mov
sbb
mov
pop
inc
or
pop
movs
out
lds
mov
ins
adc
out
dec
xchg
mov
add
(bad)
cs
shl
aam
fcmovnu
lahf
pop
mov
and
int
and
cli
jle
cmp
sub
add
xchg
sar
in
jle
mov
stos
movs
jl
jbe
add
fistp
shl
xchg
and
imul
inc
pop
push
sahf
mov
xor
cdq
adc
xor
shl
(bad)
mov
mov
or
mov
loop
push
je
test
xchg
mov
lods
lock
arpl
mov
fs
lock
cmps
(bad)
pop
push
mov
or
push
or
mov
dec
loop
jge
popf
cli
sbb
dec
outs
xchg
fucomip
sbb
into
pusha
adc
fld
add
int
(bad)
call
daa
xchg
push
inc
test
mov
add
sbb
pop
stc
retf
les
or
pop
cmp
jle
dec
push
sbb
pop
arpl
in
xchg
cmps
or
push
jne
out
push
fadd
(bad)
pop
xor
mov
rcl
add
dec
lods
xlat
(bad)
dec
cli
mov
xor
addr16
loop
push
add
mov
pop
nop
and
test
mov
repnz
imul
jne
arpl
or
push
rcl
(bad)
ins
mov
xchg
sbb
ss
dec
xor
mov
inc
ret
imul
pop
sub
lods
cmp
add
cmp
cwde
jns
pop
mov
or
ss
xor
fld
xchg
movs
or
mov
dec
mov
movs
loopne
mov
sub
test
push
outs
or
fisub
add
push
jno
jle
mov
fdivr
or
das
jl
xlat
cmps
and
xor
inc
pop
mov
repnz
xchg
out
imul
or
stc
cdq
cmp
cmp
lds
add
jb
(bad)
fwait
cmps
into
js
lods
lea
movs
out
mov
scas
mov
jge
xor
fmul
mov
test
int3
jp
int
(bad)
dec
push
mov
mov
test
adc
stc
dec
push
dec
mov
mov
mov
push
aas
imul
cmp
push
mov
test
repz
pop
xor
or
int3
movs
fistp
cmp
xchg
adc
aas
loop
out
dec
aam
outs
popa
out
lock
mov
xor
addr16
xchg
or
xor
loop
ins
cmp
iret
cmp
mov
sub
and
iret
xor
shr
les
xlat
sub
or
mov
push
inc
leave
clc
je
cmc
mov
lock
pop
pop
xchg
jl
dec
cmp
or
inc
bound
mov
pop
aas
jmp
jmp
cmc
out
pushf
mov
dec
jmp
cmp
jle
scas
call
shr
and
dec
shr
stc
xor
dec
fsub
cld
cmp
shl
add
in
fwait
mov
mov
or
cmp
xor
test
dec
mov
into
mov
xchg
push
fnstcw
or
loop
xchg
and
inc
mov
in
mov
mov
add
and
mov
cmps
ret
inc
sar
push
dec
pop
xor
pop
rol
add
sub
push
or
sub
arpl
jle
sbb
mov
push
cmps
js
mov
repz
mov
mov
arpl
std
dec
or
dec
fs
or
mov
or
jg
mov
jg
test
fxch
and
aad
jae
(bad)
sbb
lods
pop
sub
out
bound
ret
and
dec
stc
iret
push
test
dec
add
xchg
imul
mov
repnz
mov
fisub
ss
fdiv
data16
jns
mov
sub
(bad)
jmp
(bad)
test
fdivr
in
out
gs
ror
pop
shl
cmc
jp
fsubr
test
add
out
or
jmp
sbb
jl
adc
cwde
sbb
adc
jl
cld
lods
mov
js
cmp
retf
fimul
ds
out
lods
adc
rcl
mov
daa
adc
int
shl
push
pop
adc
mov
jns
gs
in
(bad)
(bad)
push
ffreep
jns
pop
inc
pop
add
sub
dec
or
or
sbb
jb
test
sub
lahf
and
or
push
inc
xor
jecxz
pushf
mov
outs
jmp
sar
dec
outs
inc
ins
inc
retf
call
push
popf
jno
add
daa
xor
dec
add
hlt
or
add
or
dec
hlt
fdiv
or
shl
ret
xor
dec
mov
in
(bad)
fimul
in
inc
stc
(bad)
lods
sti
jmp
scas
out
pop
stos
dec
sbb
adc
adc
gs
cmp
pop
test
jg
fstp
js
cmp
adc
std
repnz
cdq
push
jmp
jmp
pusha
mov
xchg
cmp
ret
stc
retf
xchg
sub
ins
movs
or
ja
sbb
fadd
jbe
xor
jae
cmp
xchg
pop
cmp
xor
pop
retf
ret
(bad)
jne
loop
xor
call
jo
vpor
xchg
mov
iret
rcr
fisttp
fidiv
shl
ins
inc
arpl
or
xor
mov
ins
fldenv
pop
loopne
(bad)
jge
jmp
dec
xlat
enter
adc
das
mov
adc
mov
call
xchg
jmp
out
lahf
mov
dec
xchg
push
adc
dec
mov
in
mov
(bad)
popf
mov
and
scas
mov
dec
addr16
push
mul
test
ins
and
adc
pop
push
and
mov
das
pop
addr16
xchg
out
mov
pusha
and
fwait
jns
out
lods
add
xchg
lock
xchg
cwde
fs
sti
out
adc
test
in
mov
ror
add
jp
sub
outs
dec
mov
dec
or
js
add
mov
not
mov
xchg
cmp
shl
sbb
pop
mov
adc
mov
inc
inc
adc
jbe
mov
and
jns
cli
xchg
cld
out
lds
dec
sub
jb
pop
mov
bound
inc
dec
mov
jae
mov
or
mov
(bad)
sbb
repnz
mov
out
xchg
fdiv
jp
mov
sub
outs
out
pushf
repnz
mov
outs
jl
nop
bound
pop
inc
or
lods
pusha
jb
lods
aas
rcl
in
xchg
clc
scas
imul
daa
mov
add
in
vpsrlw
out
xor
add
inc
mov
xlat
(bad)
jecxz
ins
fistp
ret
dec
or
and
add
and
ret
xor
fdiv
push
pop
inc
lahf
inc
movs
dec
cmp
loope
rcr
mov
in
jl
adc
mov
test
sar
retf
outs
or
push
gs
push
cmp
inc
js
jmp
sbb
in
iret
mov
dec
xchg
jle
leave
cld
dec
push
mov
sbb
js
push
sar
ins
push
and
rol
outs
cld
and
xor
mov
ja
movs
daa
daa
sbb
rcr
pop
inc
test
sbb
js
fisubr
mov
loop
jle
jmp
cmc
jl
out
adc
data16
mov
and
sbb
push
adc
pusha
inc
add
xor
cmc
push
sbb
jae
jmp
lods
ret
rol
fwait
and
push
fs
out
out
or
cwde
cmp
xchg
jl
clc
jns
cwde
loop
call
out
das
adc
cmp
add
cmp
stos
fsin
in
or
cmp
lods
add
adc
(bad)
pop
jecxz
jecxz
out
int
add
je
pop
add
fcmovb
or
in
(bad)
neg
and
mov
rcr
cmps
in
stos
cmp
(bad)
adc
fst
pop
adc
inc
or
xchg
jp
jmp
aam
fdiv
repnz
or
mov
test
push
cmp
dec
pop
rcl
xchg
aam
lods
dec
xor
add
popf
div
dec
cmps
movzx
mov
or
aam
or
rol
lds
(bad)
inc
(bad)
test
ret
xchg
je
fs
push
sbb
mov
fimul
mov
fldenv
mov
jo
pop
pmuludq
dec
neg
ja
ret
out
mov
iret
or
xchg
fiadd
and
out
jmp
popa
cmp
lds
xchg
stos
sub
lahf
in
push
test
aam
mov
retf
clc
inc
scas
hlt
inc
nop
arpl
pop
mov
loopne
fs
retf
pop
push
retf
dec
ins
aas
xchg
call
mov
bound
dec
sbb
nop
jnp
sbb
sbb
sbb
mov
clc
push
out
push
repnz
jne
call
imul
mov
or
cmc
rcl
push
cmpxchg
jne
repz
(bad)
lea
inc
gs
xchg
in
daa
mov
imul
jnp
dec
es
push
add
inc
cmps
sub
imul
pop
cmc
inc
adc
into
ins
mov
hlt
ret
inc
mov
data16
xor
or
pop
xor
lods
pop
movs
sub
sub
sub
lock
cmps
es
and
or
push
(bad)
iret
das
add
mov
mov
movsx
ins
mov
aas
inc
xlat
jbe
inc
adc
and
mov
dec
mov
xchg
enter
fistp
jo
ret
ror
call
cmp
ins
ret
adc
adc
mov
mov
das
aaa
sub
arpl
mov
mov
scas
jnp
loopne
cmp
es
xchg
cld
imul
movs
nop
xor
mov
retf
je
scas
add
sti
push
add
pushf
xchg
inc
and
ins
adc
das
pusha
adc
dec
das
jg
data16
mov
xchg
das
int3
jnp
xchg
mov
dec
call
addr16
out
jno
(bad)
in
div
cld
lds
stos
push
push
cmp
leave
ret
sti
mov
out
pop
mov
mov
jmp
mov
sbb
sahf
outs
jmp
cmp
add
int3
pop
xor
jmp
daa
outs
inc
dec
lods
inc
nop
loope
inc
sbb
call
jmp
aaa
pop
and
(bad)
fdiv
xchg
jbe
add
sbb
(bad)
jl
mov
pop
xchg
ins
jg
call
iret
jle
mov
jecxz
mov
outs
hlt
bound
and
xchg
mov
scas
adc
or
push
lock
outs
fs
xor
jb
out
sub
pop
push
mov
cmp
std
sub
shr
lahf
mov
or
mov
sar
inc
sbb
and
or
int
out
ins
mov
push
ficom
fsubrp
xor
lods
in
sub
mov
dec
test
lock
repnz
call
loope
inc
pop
aaa
or
adc
jle
sub
(bad)
mov
aad
sub
mov
jne
or
cmc
rcr
sub
pop
mov
mov
xlat
scas
sub
inc
mov
shl
pop
pop
fdivr
cli
mov
or
sbb
ins
xor
lahf
ins
imul
int3
inc
retf
xor
sbb
pop
or
retf
or
call
cli
push
xor
aaa
pop
ins
scas
mov
add
dec
dec
out
jmp
mov
out
fwait
out
jge
mov
mov
mov
xor
sahf
mov
sbb
data16
cmps
aad
pop
out
push
fisub
mov
cmps
leave
ins
psrlq
push
ja
jle
aam
imul
ds
ds
cmp
stc
cmp
xchg
jno
lods
dec
jge
mov
and
(bad)
shr
mov
add
int3
mov
mov
xor
inc
out
push
ror
mov
out
daa
sub
adc
ja
sbb
mov
lods
sub
or
or
cmc
dec
jp
and
inc
pop
add
pop
clc
push
adc
(bad)
sub
imul
retf
push
jno
mov
mov
inc
aad
cmc
cmp
out
inc
push
dec
and
push
leave
mov
test
mov
push
jbe
and
retf
sub
js
mov
pop
add
push
fistp
xor
cli
cld
addr16
xor
idiv
dec
sbb
xchg
dec
mov
cmp
jg
push
xchg
enter
test
pop
jns
cmc
cld
loope
cli
jle
fld
push
pop
mov
jmp
add
fdiv
inc
ss
or
mov
ins
xlat
les
sub
sub
das
dec
je
jp
dec
and
test
(bad)
xchg
push
push
xor
sahf
mov
outs
pshufw
(bad)
fwait
or
das
pusha
popf
(bad)
ret
pushf
pop
in
in
and
(bad)
dec
cmc
cwde
xor
xor
scas
xchg
popa
arpl
inc
jecxz
out
mov
out
adc
lahf
and
test
movs
pop
in
addr16
cmp
sub
sbb
das
push
sbb
outs
mov
(bad)
lods
sti
into
mov
daa
call
push
out
es
loopne
das
xor
pop
lds
pop
pop
(bad)
jmp
(bad)
fbld
arpl
fwait
sbb
cmp
mov
scas
xchg
and
mov
adc
imul
test
out
xor
leave
dec
mov
mov
test
xchg
or
and
in
nop
cli
pusha
shl
cmp
sar
xchg
and
xchg
mov
aaa
add
xchg
inc
and
cmp
mov
push
mov
adc
std
and
adc
push
(bad)
rcr
gs
fsubr
jnp
pop
mov
(bad)
fisubr
data16
pop
pop
mov
jns
(bad)
(bad)
pop
shr
mov
sub
js
call
mov
ret
push
mov
sbb
mov
jbe
leave
push
outs
cmp
in
std
jns
sbb
add
and
xchg
ja
imul
adc
rcr
(bad)
sbb
pop
jge
lods
popf
and
je
sar
rcl
mov
sbb
imul
inc
dec
test
or
xchg
clc
inc
mov
adc
push
mov
mov
add
push
xchg
mov
jns
push
mov
jo
mov
fsub
pop
xchg
and
adc
add
cwde
xor
sub
pop
xchg
lahf
inc
sbb
adc
push
pop
lds
xchg
iret
cmp
jmp
pop
inc
or
add
xchg
cmp
test
dec
lock
retf
or
sbb
cmp
inc
aaa
sbb
lock
fs
sbb
mov
and
sahf
push
xor
fnsave
pop
loope
xchg
adc
je
xchg
cmp
repnz
fidiv
add
cmps
jg
lods
add
sbb
cmp
int3
pushw
sbb
(bad)
and
mov
nop
cmps
inc
out
push
xor
push
jmp
fcom
adc
xchg
cmp
js
retf
mov
jmp
in
adc
ins
mov
pop
popa
aam
adc
aad
test
mov
outs
inc
fs
cmps
ja
shl
in
and
mov
in
out
repz
xchg
pop
xchg
pop
mov
and
jle
mov
mov
cmp
nop
shl
out
aas
repnz
out
sub
jbe
cmc
rcl
mov
xchg
sbb
loope
int
movs
ror
xor
fdiv
hlt
lea
lea
mov
sbb
neg
mov
cmp
jge
push
lods
loopne
pop
mov
cmp
sahf
jae
mov
loopne
std
xchg
scas
add
iret
rol
inc
or
sub
xchg
dec
icebp
xchg
mov
xchg
(bad)
in
adc
sub
jmp
sbb
call
pop
into
mov
and
push
outs
add
cs
dec
scas
and
dec
in
(bad)
jecxz
popa
test
mov
imul
fisubr
(bad)
adc
dec
push
(bad)
push
in
xor
outs
ss
mov
pop
cmp
test
push
mov
inc
ss
arpl
pop
mov
call
mov
xchg
jp
add
cmp
push
jnp
xchg
adc
mov
dec
jne
sub
sbb
adc
scas
cmps
mov
mov
xchg
push
call
retf
mov
or
and
(bad)
(bad)
cmps
and
sub
push
pushf
ret
sub
pop
fst
sub
cmps
add
aaa
mov
mov
adc
shl
push
jo
cld
ficom
test
mov
mov
mov
or
and
shr
xchg
cwde
out
imul
(bad)
dec
mov
ret
ficom
fcom
mov
jbe
(bad)
pop
mov
scas
adc
mov
ds
add
xor
ds
mov
(bad)
call
and
loope
nop
push
ja
clc
inc
ret
mov
test
mov
and
outs
(bad)
pop
ud1
jl
(bad)
mov
cmp
aad
cli
mov
shr
xchg
pop
and
(bad)
xor
outs
cwde
scas
pop
or
dec
les
push
xchg
pop
call
sahf
(bad)
cmp
push
jne
pop
addr16
mov
or
popf
retf
cmps
cmc
mov
popa
int
pop
int3
mov
xor
push
xchg
(bad)
psubusb
sbb
push
in
push
xor
adc
int
cmp
ret
mov
in
push
arpl
stc
or
add
xchg
fiadd
jmp
(bad)
push
cmp
in
loope
fiadd
mov
xor
call
mov
push
retf
pop
ja
ja
push
jp
popa
test
ret
pushf
outs
mov
mov
or
leave
xchg
jl
test
loope
aad
es
adc
jg
pop
(bad)
out
push
leave
stos
add
xchg
dec
imul
and
jmp
ja
push
je
cmp
mov
je
pop
xchg
mov
sub
and
cwde
adc
(bad)
repz
pop
enter
les
mov
outs
jns
jp
and
ja
ret
add
cmp
inc
or
cmps
lds
shl
test
fidivr
xor
les
ficom
adc
test
add
fwait
cmp
or
add
add
ror
sub
inc
dec
push
inc
cmps
lods
push
aaa
dec
cdq
jbe
mov
ror
je
mov
div
and
and
ins
retf
or
inc
in
out
push
adc
iret
pop
xor
clc
les
das
dec
aad
mov
or
sub
xor
(bad)
dec
xchg
lods
push
dec
(bad)
dec
add
popa
add
test
jae
xor
jmp
out
ficom
cmp
aam
push
movs
jge
add
cmps
push
movs
(bad)
jp
xadd
mov
mov
cmp
test
aas
xlat
mov
test
mov
pop
shl
test
js
add
lds
sbb
mov
add
push
inc
into
sub
gs
rol
ds
out
xor
lock
or
sub
fnsave
pop
jnp
cmp
out
jge
inc
sbb
adc
lods
and
push
add
and
(bad)
cwde
cmp
aam
es
push
push
or
sbb
fild
sar
hlt
adc
mov
adc
fwait
push
pop
sub
in
pop
sub
sub
jns
iret
xor
xor
jns
and
dec
pushf
test
call
mov
sti
bound
push
sub
dec
loopne
repnz
push
pop
int3
push
jg
jmp
sbb
aas
ret
pop
push
xor
loopne
jge
aaa
push
inc
xor
outs
push
ins
xor
push
mov
sbb
sub
jmp
bnd
in
mov
dec
and
int3
add
loopne
lods
aaa
shl
fdivr
pop
fsubr
(bad)
push
repz
mov
push
cs
mov
mov
fwait
into
movs
lods
jns
mov
jne
push
idiv
fsubr
jmp
mov
aad
cmp
dec
mov
sbb
sbb
in
push
sbb
dec
pop
mov
and
jo
pushf
add
sbb
test
dec
cmp
sbb
mov
movs
cmp
jno
stc
leave
cmc
dec
mov
push
dec
push
xor
scas
retf
ficom
and
movs
mov
push
fidivr
xlat
bound
(bad)
cmps
dec
pop
xlat
(bad)
je
xor
xchg
adc
(bad)
xor
fimul
adc
sti
aas
leave
aaa
(bad)
imul
xchg
out
gs
push
repnz
sub
push
das
mov
pop
mov
mov
jge
bound
mov
jb
jo
iret
(bad)
jmp
ret
inc
or
add
ds
lock
imul
dec
(bad)
loopne
cld
ret
rcr
xor
mov
mov
mov
xlat
jg
dec
mov
or
js
shl
and
in
imul
stos
mov
ret
add
push
out
push
push
add
aaa
mov
or
mov
adc
dec
dec
jecxz
in
pop
lahf
sub
cmp
(bad)
ficom
mov
stos
mov
pcmpgtw
xchg
gs
clc
add
pop
popf
cs
add
cmp
push
pop
and
jle
test
pop
mov
in
mov
(bad)
mov
or
lods
popf
push
dec
lds
pop
scas
lods
test
cld
jbe
stc
inc
out
rol
pop
fidivr
inc
xchg
pop
sub
idiv
ins
inc
lahf
jne
sti
pop
loopne
pop
sar
mov
out
les
jecxz
mov
ror
loopne
clc
call
or
fnstsw
xor
inc
int
cdq
fcom
sahf
dec
add
test
mov
cs
cli
adc
fidivr
call
xchg
cmps
mov
repz
sub
mov
sub
sub
push
xchg
sub
not
cdq
popa
retf
cmp
or
inc
and
xchg
cmp
fnstenv
sub
dec
iret
(bad)
popw
jae
or
dec
aam
xchg
push
rol
pop
pop
ss
dec
fisub
and
cwde
sub
ret
arpl
push
jae
pop
mov
dec
mov
fld
xchg
add
neg
cmp
add
inc
cmp
(bad)
mov
inc
inc
cmp
dec
int
fwait
jmp
mov
sbb
pop
mov
test
clc
inc
pop
out
ret
xor
out
pop
outs
test
daa
inc
fistp
xor
popf
dec
mov
push
mov
and
lock
add
inc
dec
ret
stos
div
jmp
mov
xchg
push
adc
dec
repnz
es
push
cmp
inc
lds
adc
popa
bound
mov
cld
stos
mov
mov
nop
or
mov
(bad)
enter
sbb
and
aaa
test
imul
pusha
push
lahf
imul
stc
or
mov
sbb
xchg
adc
fld
cwde
iret
mov
rol
neg
mov
and
mov
scas
cmp
lods
mov
lods
push
mov
pop
jl
mov
into
in
aam
and
pop
popf
mov
mov
jl
in
jl
(bad)
lea
fidiv
jle
rcr
in
jne
cmps
mov
pop
sbb
adc
imul
fadd
xchg
add
movs
mov
out
pusha
xchg
ret
sahf
aas
rcr
addr16
aaa
pop
sbb
loope
retf
mov
(bad)
xchg
lahf
shl
clc
xchg
pop
lods
pop
pop
(bad)
out
movs
pop
jbe
jmp
cmps
call
int3
mov
pop
jbe
std
xchg
adc
shr
pcmpgtd
idiv
retf
hlt
push
sbb
sbb
dec
ret
xchg
mov
fisubr
pusha
ins
mov
jb
shl
repz
cmc
mov
dec
js
test
call
into
enter
cld
mov
cmp
popa
xchg
test
fsub
retf
pop
mov
jo
dec
(bad)
pop
(bad)
inc
push
fst
sahf
or
mov
add
stc
pop
(bad)
pop
lods
aas
fwait
into
loopne
adc
cmp
mul
int
fidivr
pop
xor
pop
sub
adc
in
push
adc
adc
dec
sub
out
cmp
aam
cli
xchg
pop
out
jmp
cmp
ss
fsub
xor
out
sbb
adc
dec
ror
les
jg
ror
out
lods
idiv
pop
imul
and
dec
inc
pop
xor
(bad)
push
jmp
inc
cmps
mov
pop
sbb
mov
dec
(bad)
pop
in
das
and
and
sbb
sub
xchg
push
xor
xchg
scas
jecxz
push
fmul
cmp
pop
aas
popf
sub
test
arpl
sbb
in
dec
jg
int
xor
test
and
and
cld
aam
mov
test
or
cmp
data16
mov
test
rcr
add
push
or
fidiv
pop
and
stos
mov
arpl
cmps
push
int
or
aas
push
aad
add
push
xor
pop
sub
fisub
fadd
and
repz
das
lea
jg
(bad)
mov
push
daa
mov
mov
psraw
(bad)
ds
bound
or
loop
imul
push
cld
pop
in
bound
dec
jns
lods
icebp
mov
enter
and
out
sbb
dec
inc
mov
add
inc
push
lahf
cmp
mov
and
int
and
mov
cmc
xchg
test
mov
es
adc
(bad)
xchg
shl
fcom
cmp
lock
push
or
(bad)
in
clc
cld
xchg
in
jns
mov
jl
cdq
outs
sbb
xchg
in
data16
jmp
inc
ss
mov
ret
and
hlt
jb
mov
jnp
stos
(bad)
fistp
add
mov
fisub
inc
enter
mov
mov
sbb
dec
lods
sbb
cdq
and
jp
push
in
into
or
inc
mov
dec
mov
dec
dec
mov
aaa
pop
mov
cdq
hlt
(bad)
and
cli
fist
mov
imul
(bad)
in
clc
mov
jb
sti
cmc
push
fcmovnbe
jnp
push
nop
int
xor
jbe
pop
or
mov
ret
fcom
mov
mov
jg
or
sub
ds
push
rcl
add
mov
sbb
test
test
dec
xlat
pop
clc
push
(bad)
sub
int3
mov
call
in
outs
daa
sbb
xchg
push
or
xchg
mov
fsub
gs
leave
or
mov
cmp
pusha
mov
push
mov
push
jb
fidivr
mov
mov
rcl
cmps
mov
mov
mov
cmps
popa
xor
sbb
mov
(bad)
sub
test
sar
out
xor
xchg
(bad)
das
push
outs
ficomp
gs
pop
sub
jbe
jle
stos
mov
sbb
std
ja
fxch
int
xor
mov
aaa
outs
or
push
xchg
nop
xchg
stos
mov
rdtsc
mov
cmp
es
or
lods
ret
sbb
jge
dec
fisttp
push
mov
movs
mov
and
or
retf
adc
mov
into
das
xlat
and
jp
push
sbb
add
ret
sub
movs
outs
dec
pop
cmp
adc
mov
nop
arpl
psrld
(bad)
mov
ror
and
and
xor
push
ror
scas
jae
jnp
xchg
rcl
shl
loopne
stc
add
adc
call
add
stos
bound
es
emms
dec
xor
in
or
xor
add
cld
cmp
sub
gs
movups
fmul
rcl
dec
push
idiv
shr
loopne
inc
out
shl
call
jmp
inc
sti
mov
retf
call
mov
cmp
xor
daa
out
mov
jge
mov
loop
inc
aaa
sbb
jmp
and
arpl
sub
xor
clc
adc
mov
movs
mov
sub
retf
clc
mov
push
xchg
fistp
mov
jg
push
cdq
or
jbe
pop
mov
rol
dec
call
dec
mov
or
fimul
add
in
or
mov
xor
jne
pop
dec
out
mov
xor
mov
das
daa
cmp
push
jno
iret
pushf
mov
jnp
jmp
push
sub
enter
int
jne
jl
iret
and
jp
push
mov
cmp
rcr
mov
dec
fdiv
mov
dec
ret
xchg
pop
xchg
mov
out
mov
out
inc
cli
ins
mov
out
mov
jge
test
xchg
aad
movs
xchg
jmp
data16
jl
mov
aad
inc
imul
or
push
mov
inc
mov
test
or
test
add
push
test
xchg
mov
retf
dec
push
nop
call
(bad)
adc
retf
sbb
das
or
sti
push
nop
mov
ds
or
fld
push
fwait
es
sbb
(bad)
mov
add
(bad)
dec
loopne
lock
jmp
cmc
or
dec
shl
(bad)
repz
adc
xchg
jne
stos
aam
clc
in
(bad)
imul
and
xchg
addr16
es
movs
fwait
scas
or
shl
xchg
inc
(bad)
enter
push
push
lods
int3
ss
cmps
gs
stc
xchg
cs
cdq
xchg
mov
push
shl
fmul
jge
sub
pmuludq
jns
data16
out
jmp
shl
or
ins
push
pop
movs
call
movs
mov
pop
mov
shl
je
sbb
sub
jg
push
bound
out
retf
rol
into
sub
fistp
inc
neg
ficom
loope
bound
pop
or
pop
leave
mov
push
push
add
iret
sbb
not
push
xchg
jb
or
lods
sub
test
mov
jmp
mov
repz
xchg
sti
in
lock
test
jb
push
test
out
icebp
xchg
add
call
mov
jnp
pusha
stc
leave
jge
or
fwait
push
and
aad
push
out
pop
pusha
mov
mov
cdq
adc
jmp
cmps
ja
inc
adc
add
repz
jb
xchg
sub
test
adc
aam
adc
icebp
pop
test
adc
jecxz
scas
inc
sub
jge
in
movs
nop
outs
add
xchg
push
lds
aaa
inc
sbb
push
xchg
jecxz
xor
push
les
inc
cmc
sahf
xor
into
(bad)
xchg
fs
out
stos
mov
and
mov
mov
cld
push
(bad)
mov
stc
aas
xor
mov
pop
jg
data16
jo
(bad)
dec
and
mov
push
loope
cmp
retf
push
and
push
push
and
out
hlt
and
mov
xchg
sub
mov
pop
adc
inc
stos
cmps
pop
dec
and
xor
in
sbb
pop
nop
add
mov
xchg
jge
and
pop
stos
rcl
xor
mov
dec
pushf
sbb
jge
(bad)
ficom
jmp
loope
pop
ss
jne
ror
mov
jns
fidiv
ret
jg
popf
test
in
add
sub
dec
repnz
jbe
sbb
inc
shl
dec
adc
mov
pop
(bad)
adc
sahf
jg
aas
xchg
call
les
add
(bad)
loope
das
jo
add
jbe
into
lods
int
mov
pop
add
or
aam
fcom
xor
sbb
jp
push
jp
(bad)
std
ret
mov
xchg
pop
es
ss
test
pop
sbb
repnz
jp
adc
into
or
push
pop
sub
or
pop
pop
push
adc
dec
push
clc
das
inc
scas
inc
mov
pop
mov
addr16
mov
shl
pop
sub
mov
das
xor
dec
cmp
jne
cdq
fucomp
test
pushfw
jge
popf
adc
dec
loope
add
cdq
into
and
jecxz
xor
pop
push
mov
not
adc
inc
xchg
std
jg
inc
movs
jp
jae
adc
mov
push
sub
pop
fwait
sub
jl
js
hlt
leave
and
lock
(bad)
addr16
pop
xor
pop
cmp
inc
mov
jg
mov
xchg
mov
and
mov
sbb
jmp
push
add
pop
lock
clc
fcom
not
inc
inc
imul
push
xor
mov
dec
mov
int3
or
pusha
jne
lds
retf
sub
fdiv
jle
pop
xchg
shl
push
and
les
xchg
aad
sub
mov
cli
xchg
(bad)
or
ins
out
xor
fadd
lea
mov
and
xor
out
mov
mov
sub
lahf
movs
dec
lds
imul
mov
scas
retf
xor
mov
cmp
test
imul
mov
pop
inc
fwait
pusha
pop
repnz
sub
push
sub
cs
dec
fwait
push
or
ins
cli
cmc
test
mov
hlt
cdq
jns
sar
jb
clc
and
cmovne
inc
es
jle
adc
inc
mov
xor
jno
daa
mov
cmps
stos
stos
pop
int3
call
cmps
arpl
dec
mov
or
xchg
ins
ja
xchg
js
mov
movs
add
test
and
jl
sti
push
inc
test
push
and
nop
mov
mov
les
or
(bad)
sub
int3
mov
popa
jmp
mov
sahf
mov
or
pop
cwde
or
mov
mov
shl
push
outs
rol
cmp
adc
pop
cmp
and
mov
jle
sbb
sub
(bad)
add
fsub
fsubrp
jne
sar
sbb
sbb
imul
mov
sti
into
mov
and
ins
enter
mov
and
daa
pop
mov
and
jo
in
popf
(bad)
push
loopne
jmp
addr16
cmp
xchg
xchg
ins
inc
inc
or
push
or
and
loop
fmul
das
mov
xor
shr
push
inc
jnp
cmp
push
jbe
mov
std
movs
sub
push
lods
and
cmp
(bad)
pop
inc
sahf
retf
cmps
xchg
nop
call
push
pop
or
test
cmp
ret
lods
and
jmp
ins
xchg
jecxz
pushf
ror
out
mov
(bad)
lods
pop
bnd
imul
retf
dec
lock
addr16
int
data16
(bad)
mov
gs
push
mov
mov
adc
mov
repz
dec
fistp
push
lock
mov
mov
call
loop
add
mov
adc
fisttp
movs
cli
mov
cmp
ds
xchg
sbb
repnz
inc
int3
xchg
mov
cmp
pop
out
and
adc
jo
mov
jb
in
or
and
xchg
add
mov
sbb
sahf
xchg
loop
mov
sbb
inc
or
adc
mov
std
mov
push
pop
and
idiv
sub
add
loop
xor
sub
jb
outs
push
pusha
(bad)
dec
ds
daa
mov
repz
push
and
retf
cld
lea
sbb
jg
pop
and
pop
(bad)
scas
push
cdq
enter
inc
mov
and
retf
jmp
pop
push
adc
or
dec
ins
std
inc
sar
cmps
xor
jmp
sbb
adc
sub
mov
add
pop
and
(bad)
xchg
xchg
xor
dec
mov
mov
hlt
fdivr
retf
pop
(bad)
int
inc
sub
and
pop
data16
xor
lods
push
and
mov
jns
mov
mov
leave
je
mov
pop
or
xchg
mov
outs
fnsave
neg
(bad)
xlat
inc
mov
leave
out
fnsave
xor
cmp
pop
jno
out
das
imul
cmp
or
repnz
sbb
jle
bound
jmp
lock
ds
and
sub
jmp
movs
and
(bad)
sub
popf
adc
jno
mov
sti
push
xor
mov
out
pop
mov
stos
jp
enter
out
cmp
jge
pop
loopne
jbe
cmps
scas
call
inc
pop
add
inc
test
jb
imul
mov
xlat
in
mov
jns
inc
in
sar
aam
pop
aam
inc
test
sub
ja
dec
nop
(bad)
pushf
movs
dec
jb
test
repnz
fcomp
sbb
inc
in
std
push
adc
fsubrp
(bad)
cmc
push
in
rcr
pop
sub
dec
push
ficomp
xlat
sub
aas
clc
stos
into
adc
cmp
js
shl
ret
cdq
test
mov
(bad)
push
dec
scas
pushf
jmp
jge
dec
(bad)
aad
push
adc
mov
das
in
xor
adc
outs
push
push
sti
xlat
mov
retf
mov
imul
stos
add
inc
push
xor
nop
mov
cdq
test
adc
dec
int3
mov
mov
push
out
mov
out
in
popf
dec
inc
and
cmp
fcomp
fs
xchg
lods
iret
jg
into
mov
not
retf
push
push
stos
cld
std
test
fadd
ins
lahf
(bad)
mov
push
dec
cmc
ds
jo
xchg
xchg
add
or
add
dec
cwde
xor
std
jnp
scas
in
icebp
jg
jne
xchg
jae
cmp
repz
cmc
movs
lahf
jo
cld
xor
scas
push
adc
dec
pop
(bad)
cmp
pop
jno
mov
imul
mov
cwde
sub
ss
dec
int3
inc
outs
(bad)
mov
mov
mov
pop
aas
push
mov
popa
adc
push
movs
addr16
sbb
xor
pushf
fcom
retf
repnz
mov
test
cmps
imul
popf
sbb
mov
xor
and
lock
sub
xchg
dec
(bad)
xor
js
add
loope
push
inc
mov
add
cmp
psubd
push
psubusw
es
mov
cwde
ja
ins
jl
loopne
rol
(bad)
push
inc
push
mov
mov
inc
push
test
cmp
jp
fld
jmp
icebp
loopne
mov
pop
call
(bad)
call
repnz
inc
push
cld
jecxz
adc
mov
mov
xchg
push
stos
push
inc
jmp
fsubr
pushf
adc
sub
lods
ins
dec
test
loop
jns
repz
cdq
aaa
cmc
pop
cmc
and
push
jg
ret
xchg
das
outs
and
dec
mov
(bad)
push
bound
jle
fadd
sbb
cmps
inc
dec
cmp
push
out
stos
xor
lods
mov
(bad)
movs
cmp
cwde
in
clc
nop
into
movs
repz
jecxz
mov
std
xchg
pop
fwait
das
pop
or
jg
ffree
jg
ins
cmp
sub
test
gs
add
dec
lahf
or
js
cmps
jmp
pop
fsubr
stos
push
xchg
pusha
daa
xor
adc
scas
push
xchg
fsubr
js
jnp
jb
addr16
jo
lahf
pop
cmp
leave
shl
sub
mov
inc
std
inc
push
jnp
cwde
pushf
push
stos
fnstcw
sbb
and
pop
xchg
cmp
ret
add
stc
gs
call
inc
xchg
movs
shl
xor
adc
and
xchg
inc
ja
inc
(bad)
sbb
repnz
fsub
pop
leave
xchg
and
mov
outs
iret
push
or
fstp
cmp
mov
jne
push
mov
cmp
jne
adc
rcr
les
dec
xchg
fist
fisubr
sbb
lods
scas
inc
je
(bad)
push
pop
mov
inc
call
jbe
in
dec
sub
pusha
xrelease
add
mov
imul
add
jmp
dec
or
push
out
cmp
fld
lahf
(bad)
adc
dec
and
ret
push
jne
or
pusha
cld
bound
fld
call
xchg
mov
lea
stos
or
add
ror
push
cmc
movq
(bad)
hlt
out
cdq
mov
lods
outs
sti
xor
mov
sub
shr
sub
cs
dec
pop
imul
imul
jp
call
leave
shr
sub
(bad)
in
jns
stos
adc
les
push
pushf
cmp
inc
sbb
mov
add
retf
cmp
fdiv
inc
not
js
and
cdq
mov
iret
xchg
fcomp
mov
cmps
jno
and
sub
dec
int
pop
push
add
jne
out
xor
daa
mov
mov
mov
repnz
ja
bound
sub
sbb
aam
ins
pop
addr16
scas
push
das
pop
jp
sub
inc
je
and
sbb
jge
mov
fwait
cmp
lea
in
dec
or
or
xchg
rcl
push
adc
shl
cmp
push
jb
jbe
dec
pop
lea
inc
xor
test
fcmovne
mov
scas
jl
dec
stc
pop
push
sbb
pop
inc
mov
lahf
and
stos
xor
in
add
cmp
and
movs
jae
pop
das
mov
adc
in
das
rcl
pop
std
jno
mov
cmp
jne
retf
mov
push
jge
ret
or
ins
arpl
ins
jmp
cli
cmc
dec
pop
call
xchg
int3
add
jmp
in
ss
into
sbb
xlat
enter
push
test
and
and
mov
bound
sbb
jo
dec
mov
or
neg
fcomp
mov
mov
sbb
push
jmp
fisttp
add
loop
int
cdq
push
cmps
and
cli
sub
aaa
mov
xor
pop
fs
push
lahf
and
cs
fwait
or
xchg
xchg
dec
add
mov
lea
pop
push
jae
(bad)
aaa
mov
cdq
out
inc
push
inc
hlt
jno
mov
lea
fsubr
bound
ins
mov
and
adc
or
ja
xchg
sbb
dec
call
ins
mov
mov
pop
pop
add
retf
sbb
lods
cmp
mov
adc
ret
(bad)
mov
in
push
sub
out
jmp
mov
pop
cs
fistp
sub
jmp
dec
and
and
jp
into
cli
gs
inc
jg
outs
and
sub
(bad)
push
test
mov
fadd
aaa
imul
mov
movs
fwait
pminsw
adc
xor
sub
xchg
mov
xchg
test
add
push
out
mov
(bad)
dec
adc
leave
pop
in
dec
sub
stos
add
fwait
lods
popf
in
(bad)
jbe
imul
or
inc
std
fwait
xchg
cmp
mov
jmp
and
push
in
cmp
cmc
inc
xchg
push
dec
pushf
xchg
loopne
ja
mov
outs
call
mov
mov
pop
jae
retf
cld
or
mov
push
js
iret
cmp
shl
fsubr
out
pop
lods
std
cmp
or
sbb
xor
fwait
mov
mov
shl
jge
dec
jl
jne
std
dec
stc
add
sub
push
psubd
push
push
jbe
clc
dec
and
or
pop
sbb
xor
and
lock
nop
mov
cmc
in
pop
inc
and
jno
(bad)
mov
add
and
or
std
cmp
js
jmp
aam
addr16
and
mov
dec
or
push
add
repz
je
loop
mov
inc
dec
inc
or
ret
add
sub
adc
call
inc
mov
into
call
dec
(bad)
jle
push
mov
jbe
jb
mov
xchg
movups
sub
and
xchg
jae
sub
inc
adc
inc
repnz
and
cmc
mov
cmp
int
mov
mov
add
(bad)
out
adc
sbb
jbe
and
push
or
out
xor
pop
inc
lahf
inc
xchg
xchg
sub
iret
in
mov
(bad)
or
add
mov
push
xchg
rol
outs
xchg
cmp
push
movs
xchg
dec
and
cmp
pop
sar
push
inc
adc
or
and
int
jo
dec
test
test
stos
daa
data16
xchg
pop
leave
sub
int3
jb
cmp
adc
sti
aam
pushf
cld
rol
jmp
in
mov
pop
ds
bound
xchg
xor
push
cmps
jbe
ja
mov
in
sti
jno
icebp
cmc
popa
(bad)
cdq
retf
(bad)
pushf
mov
retf
scas
neg
ret
sbb
sub
ror
in
inc
mov
in
iret
and
adc
jb
pop
add
mov
es
sbb
jl
jae
ret
stos
es
test
arpl
pop
daa
mov
scas
fdivr
repnz
stc
in
mov
push
mov
inc
ins
cmc
push
fldcw
into
inc
cmp
in
or
inc
add
adc
mov
xchg
stos
out
cmp
inc
int3
sbb
pusha
mov
push
shl
out
pop
xor
popa
loop
pushf
arpl
das
sub
inc
sbb
bswap
and
ins
jmp
jo
aad
out
imul
or
bound
mov
xchg
dec
js
ss
sbb
xchg
shr
and
int
or
adc
bound
dec
sbb
or
and
push
cs
lds
ins
test
inc
cmps
dec
les
adc
retf
or
sahf
rcl
add
shr
js
adc
xor
push
aad
loope
xchg
std
jmp
movs
adc
jmp
adc
jae
jae
gs
bound
xor
mov
inc
fsub
adc
pop
cmp
test
cmps
daa
fild
retf
in
push
nop
cs
in
mov
jbe
movs
or
cmp
xchg
aas
cmp
xchg
movs
add
nop
jp
fcom
int
xor
stc
test
inc
outs
jmp
popf
test
mov
outs
cdq
test
ds
add
cmps
in
fldenv
push
shl
cmp
push
(bad)
nop
call
unpcklps
push
ins
popa
xchg
sub
test
(bad)
stos
hlt
xor
sbb
and
push
push
movs
imul
(bad)
or
add
sbb
(bad)
adc
or
mov
ud1
mov
cmps
xor
push
ret
sar
pop
ins
xchg
retf
mov
int
mov
repz
sub
push
jecxz
or
add
into
mov
fst
or
mov
dec
daa
dec
imul
xchg
push
aam
and
retf
inc
outs
vpmacsdd
mov
adc
ds
jmp
aam
(bad)
jae
inc
push
cmps
xor
ret
stos
out
mov
push
mov
sbb
sub
mov
scas
mov
mov
movs
and
enter
jmp
sub
push
and
(bad)
jno
sub
(bad)
cdq
pop
test
retf
sub
push
mov
xor
mov
ss
std
into
jl
mov
test
fs
into
pusha
scas
xchg
pop
jbe
push
gs
adc
push
fimul
inc
hlt
sbb
mov
cmc
add
xchg
sub
lods
fistp
shr
out
clc
shr
je
cmp
lods
sahf
mov
fdiv
mov
adc
pop
ret
mov
fsub
mov
inc
in
in
movs
mov
mov
cmp
cld
mov
movs
aaa
mov
add
cs
stos
cdq
inc
aad
aaa
pop
ret
adc
mov
jne
adc
pop
xchg
enter
out
mov
inc
mov
ss
add
xor
sahf
jmp
sar
aam
mov
shl
shl
xor
popa
das
iret
iret
call
or
(bad)
cmp
cli
xlat
lods
sub
test
xlat
pop
push
push
fwait
add
and
and
sbb
ffreep
in
jnp
sbb
sub
jno
test
inc
pop
xchg
aaa
inc
imul
push
nop
in
retf
enter
test
dec
in
jecxz
dec
in
mov
pop
push
outs
push
sar
jns
out
enter
(bad)
int3
shr
stc
xor
cmp
push
(bad)
es
loope
push
clc
sbb
test
popw
mov
stos
and
retf
cld
cmp
mov
(bad)
cdq
push
lahf
call
add
mov
or
cmc
adc
or
mov
movs
add
repnz
imul
out
cli
jp
sub
imul
lods
jne
sub
push
cmps
imul
jl
pop
jmp
test
fidiv
ficom
in
pop
add
sti
add
test
arpl
xchg
or
inc
lods
push
fdivr
xlat
jg
push
ss
dec
mov
test
fisubr
movs
xor
pop
call
lock
scas
xchg
jb
push
ds
jb
xor
cld
mov
daa
xlat
mov
retf
loop
mov
in
pusha
test
pop
jns
int
stos
stos
push
or
(bad)
movs
xor
js
sti
out
retf
not
(bad)
mov
aas
sahf
xchg
pop
adc
mov
mov
lea
push
cmp
add
sub
sub
push
dec
pop
repnz
xchg
iret
adc
cs
sub
dec
adc
out
pop
sar
mov
add
ins
cmps
pushf
add
add
sub
inc
xchg
pop
ins
shr
push
add
test
push
add
pop
out
retf
push
and
loopne
or
mov
aas
imul
(bad)
mov
jle
movs
mov
mov
inc
sahf
mov
mov
cmp
(bad)
shl
mov
xor
cmp
nop
push
rcl
pop
repnz
sbb
jl
jbe
cld
xchg
pop
pop
jle
hlt
adc
sahf
add
mov
cld
jge
cmp
int3
repnz
loope
sbb
out
sahf
and
sti
rol
mov
xchg
pop
xor
xor
sbb
jmp
scas
sub
ins
xchg
lock
out
shr
mov
fcom
inc
out
movs
pop
cmp
jmp
iret
jo
lea
test
xor
sub
mov
add
add
shr
push
mov
pop
sbb
ret
jbe
cmp
leave
add
cwde
js
cdq
test
and
dec
aam
in
mov
adc
call
pop
mov
ds
add
add
jecxz
xor
ins
sbb
xchg
mov
xor
div
xchg
shr
adc
pop
scas
adc
adc
and
jmp
dec
adc
jae
dec
push
(bad)
sub
ja
div
imul
add
retf
jle
mov
aaa
cmp
xor
xchg
and
pop
cmc
pop
aas
idiv
push
mov
js
int3
in
inc
or
shr
mov
retf
jo
sub
hlt
aas
sbb
popa
mov
fild
pop
jns
push
xchg
fidiv
cli
mov
cli
inc
dec
push
ja
sub
cmp
push
pop
and
dec
jnp
sti
(bad)
repz
call
outs
mov
adc
js
xor
dec
sbb
mov
add
pop
pop
sub
push
dec
popf
aaa
pop
mov
pop
pop
xchg
cmp
add
jno
sub
pop
cmp
retf
mov
lds
xor
cwde
xor
out
inc
ret
fmulp
jl
mov
or
jmp
jne
into
inc
je
adc
push
movzx
ficomp
jecxz
jg
les
cmc
loopne
mov
and
sbb
lock
inc
hlt
stos
xor
pop
mov
je
adc
shr
and
or
outs
mov
mov
xrelease
sub
and
mov
sbb
lods
mov
shl
push
jl
lods
cmp
adc
dec
inc
add
push
inc
shr
jno
jno
jmp
je
add
xlat
out
fisub
jno
das
(bad)
mov
aad
call
xor
fnstenv
pushf
int3
ja
mov
stc
in
mov
in
fdiv
aaa
push
repz
lahf
fidiv
inc
inc
outs
dec
test
scas
push
cmps
into
shl
(bad)
scas
mov
(bad)
(bad)
mov
xchg
jbe
jmp
jecxz
imul
and
or
sub
ins
jns
sar
inc
int3
aad
push
dec
xor
imul
xchg
(bad)
inc
jle
(bad)
adc
push
xchg
ins
imul
inc
jp
sti
sub
shr
in
pop
(bad)
pop
adc
push
leave
cmp
aas
scas
scas
mov
add
sbb
add
out
shl
scas
adc
add
idiv
fnstenv
fnstenv
mov
out
adc
cmps
into
xchg
mov
dec
bound
stc
or
fst
xlat
jmp
dec
sar
add
mov
or
or
imul
jae
push
xchg
jp
xor
push
sbb
adc
popa
push
sub
pop
addr16
inc
or
fst
push
or
out
stos
xchg
push
rcl
imul
fwait
or
adc
loop
in
lods
mov
cwde
clc
fadd
loop
push
lods
stos
jne
stos
les
mov
add
sub
add
out
retf
mov
push
lea
fs
sub
pop
ret
add
adc
retf
add
jmp
sbb
in
out
int3
stc
jmp
dec
dec
jmp
mov
stos
cmp
sbb
scas
mov
inc
sbb
add
sbb
add
int3
sti
hlt
ud2
adc
test
xor
test
pop
fsubr
ret
cwde
sbb
mov
mov
mov
(bad)
outs
cwde
into
cmp
inc
pop
cs
xor
ja
adc
mov
movs
adc
or
or
or
ficomp
bound
inc
and
ficom
xor
scas
push
jbe
jnp
sbb
lods
mov
jge
mov
adc
and
mov
add
aaa
sbb
repnz
sbb
jbe
js
cs
mov
ins
xchg
jmp
xchg
in
push
in
cdq
or
push
ja
push
and
iret
aas
call
xchg
ret
jmp
push
jb
mov
test
mov
test
and
mov
push
or
jae
loop
jmp
loopne
fwait
retf
xor
jnp
dec
icebp
aas
ins
mov
ret
(bad)
iret
lahf
in
fcomp
sub
loopne
pushf
outs
clc
pop
jp
push
or
mov
jp
mov
jb
data16
popf
xor
add
movs
pcmpgtw
scas
push
movs
inc
cmps
jbe
mov
(bad)
fdivr
cmp
sbb
add
inc
mov
or
mov
xchg
scas
frstor
in
in
jmp
mov
out
into
pop
int
int
sar
into
cli
mov
sub
push
rcr
ins
loopne
jmp
repz
into
call
and
(bad)
xor
arpl
retf
push
xchg
sub
loopne
aam
mov
or
sti
pop
out
adc
stos
sbb
cs
sahf
loope
sbb
and
dec
pop
cs
jge
lea
mov
arpl
add
cmp
scas
sbb
jns
loope
fcom
adc
lahf
and
mov
fwait
lock
test
stos
out
addr16
jae
add
lock
test
mov
test
jns
popf
(bad)
dec
add
jbe
mov
add
idiv
movs
aas
and
mov
sbb
cwde
push
imul
push
ss
int
out
sub
(bad)
call
aaa
mov
mov
push
pop
ror
int3
ror
mov
mov
pushf
xchg
jo
fwait
outs
(bad)
rol
add
std
xchg
dec
inc
sub
not
ins
fcom
loopne
je
ret
cmp
data16
repnz
adc
pop
in
cmp
mov
adc
jge
xchg
jno
cdq
jnp
mov
movs
cli
call
pusha
jmp
pinsrw
enter
(bad)
xlat
jmp
daa
mov
xlat
movs
add
cdq
xchg
mov
popa
adc
adc
add
pusha
cmp
aad
dec
mov
ja
adc
lds
push
mov
cmps
add
add
cli
sub
cmp
mov
add
pop
cmp
and
(bad)
ss
inc
iret
fxch
mov
inc
pop
pop
cmps
shl
mov
pop
idiv
mov
imul
dec
sbb
repnz
push
js
cmp
jno
ss
xchg
push
fwait
push
call
mov
jl
add
gs
or
adc
adc
lods
bound
push
daa
xchg
push
or
in
test
sbb
test
mov
cld
or
push
push
pop
cmc
loope
aam
jmp
(bad)
popf
mov
ins
push
loop
cmp
out
inc
add
cmp
movs
xor
xor
or
in
rcr
mov
mov
cmp
xchg
fmulp
aas
pusha
and
loopne
test
stos
outs
daa
into
add
inc
mul
mov
cmp
jmp
jno
out
aam
sbb
sub
pop
shl
jg
jg
sti
push
mov
js
mov
ds
or
push
nop
aad
js
adc
ja
fld
cs
repnz
clc
enter
movs
mov
(bad)
out
and
inc
int3
aad
xchg
pop
or
mov
adc
cmp
out
ret
daa
jge
or
stc
push
sar
xchg
loope
pop
dec
mov
data16
xor
push
xchg
xchg
xor
push
rcl
dec
imul
fst
and
adc
test
int3
add
lahf
aad
bound
mov
cld
(bad)
aaa
scas
rol
sbb
fs
sbb
lods
shr
mov
outs
cpuid
mov
test
int
fs
mov
sbb
sbb
push
push
jle
mov
xor
and
pop
icebp
ins
ror
xchg
cmp
mov
sub
in
sbb
push
call
neg
aad
adc
out
sbb
ret
enter
sar
sub
dec
cmc
sbb
ret
mov
mov
mov
cmp
pop
into
cmp
(bad)
nop
hlt
aam
cdq
or
(bad)
in
pop
and
dec
(bad)
and
js
mov
push
push
jno
fsubr
adc
inc
loopne
mov
xchg
pop
jbe
pop
lock
xlat
mov
and
and
(bad)
dec
les
ret
and
enter
neg
fbstp
test
jo
sbb
ror
int
sub
xchg
push
xlat
push
mov
dec
xchg
hlt
(bad)
adc
cli
sbb
ret
adc
mov
aam
shl
pusha
add
mul
jne
jle
aad
xor
addr16
into
mov
fs
out
pop
dec
scas
retf
cmps
test
add
pop
cwde
jo
xor
out
or
(bad)
sbb
mov
jbe
sub
arpl
repnz
iret
dec
push
sbb
and
jecxz
and
lds
add
mov
and
adc
movs
ds
pushf
bound
jmp
cmp
push
dec
push
inc
mov
lock
jb
push
cmp
or
sub
movs
int3
xor
sub
add
and
inc
ss
jns
sbb
test
cmc
jp
mov
outs
mov
cmp
cmc
push
cmc
dec
shl
rol
and
(bad)
xchg
mov
jmp
cmp
sahf
dec
shl
mov
cdq
xchg
mov
dec
sub
lea
mov
pusha
mov
adc
jmp
es
inc
(bad)
call
push
jge
sbb
mov
(bad)
mov
clc
mov
mul
xor
mov
push
stos
xor
inc
repz
in
mov
xor
mov
mov
add
jp
sub
or
xor
shr
lods
out
pop
dec
mov
(bad)
shl
ins
mov
sub
jle
inc
cld
repnz
or
icebp
cmp
adc
sahf
cmp
cmp
jg
movs
or
push
add
leave
or
adc
inc
call
and
inc
into
aad
xchg
mov
call
aaa
sub
mov
dec
push
mov
(bad)
popa
push
aad
inc
shl
adc
lods
mov
imul
test
add
sub
mov
jbe
add
inc
push
ja
jg
outs
push
sar
cmp
jnp
push
ds
dec
lahf
dec
sbb
movs
rol
mov
push
cmps
dec
inc
les
mov
adc
loop
popa
shr
(bad)
retf
ins
dec
adc
repz
fldcw
movs
add
aam
sub
scas
xchg
adc
mov
adc
mov
jmp
test
lock
xorps
jge
repnz
pop
movs
stos
dec
iret
icebp
or
mov
dec
sub
std
rcl
or
xchg
test
add
push
(bad)
xlat
out
mov
ror
scas
cmp
mov
xchg
test
xor
test
inc
test
in
xchg
lea
jnp
test
shr
in
in
jle
aas
out
sub
mov
aaa
mov
sbb
inc
mov
adc
pop
mov
sub
stc
sub
pop
pop
xchg
lds
enter
jmp
int
dec
shl
jl
mov
sub
fs
not
cmp
mov
jb
sbb
sub
retf
fs
or
or
xchg
adc
sbb
pop
jo
enter
sub
cmp
dec
retf
repz
nop
gs
jne
push
repnz
push
dec
test
push
in
cmp
inc
stc
and
std
and
call
xchg
fadd
jae
cld
mov
fild
pop
loope
mov
push
pop
ret
sub
outs
inc
fist
fwait
gs
ss
dec
fmulp
fnstsw
fs
repnz
daa
jae
iret
or
mov
jne
sub
dec
iret
mov
xor
scas
and
add
pop
adc
dec
repz
xchg
pop
xchg
adc
(bad)
dec
dec
xchg
or
sbb
std
xchg
hlt
jb
cmp
inc
ins
frstor
and
cmovp
stos
imul
sar
sbb
fstp
adc
(bad)
jecxz
add
adc
ficom
ret
loope
outs
xchg
(bad)
iret
push
lds
and
adc
hlt
mov
dec
test
fnstsw
mov
lea
and
add
or
sahf
or
and
pop
add
scas
and
xchg
xor
jl
scas
imul
repz
popf
imul
mov
cli
cmp
dec
(bad)
add
and
push
sub
xchg
pop
inc
adc
enter
sbb
fnstenv
add
loop
pop
add
sub
in
(bad)
ins
xchg
test
push
and
in
mov
xchg
and
rcl
jle
leave
adc
jmp
jg
sahf
mov
imul
ret
fsubr
shr
daa
push
dec
scas
mov
fidiv
pop
mov
add
call
fs
lods
aas
gs
inc
sub
dec
xlat
sbb
sti
pushf
loope
jnp
mov
inc
push
xor
stos
add
fld
std
add
clc
sub
or
aaa
int3
xchg
dec
test
sub
mov
push
cmps
cmps
por
mov
dec
mov
ja
scas
mov
out
test
xchg
iret
ret
cmp
push
mov
repnz
xor
xchg
add
pop
and
inc
out
mov
movs
sahf
sahf
inc
lea
loopne
pop
xlat
cld
shl
test
adc
xchg
mov
je
clc
clc
or
pop
and
out
fsubr
scas
push
shl
ins
das
pop
xor
sbb
pop
push
jle
int3
jns
mov
ins
mov
sub
sbb
(bad)
stc
in
ror
mov
int3
cmp
push
dec
out
and
sbb
(bad)
pushf
jecxz
lds
cmp
mov
arpl
mov
shl
push
xchg
call
add
xchg
mov
and
or
inc
pop
outs
jle
cli
and
jecxz
sbb
or
out
cs
pop
pop
mov
sub
mov
push
shl
pop
mov
cmp
fisub
fs
sbb
out
ss
std
gs
cmp
inc
stc
mov
fistp
jo
daa
dec
xor
push
aas
pop
loop
and
imul
pop
cli
addr16
arpl
inc
sub
mov
cmps
xchg
cmp
sbb
xchg
fild
in
jo
and
test
pusha
not
(bad)
pop
cmp
stos
sub
cmc
popa
addr16
jo
dec
xchg
or
pop
or
data16
and
sub
fwait
rol
lahf
retf
adc
jno
shr
inc
dec
pop
das
nop
inc
imul
sub
mov
sbb
imul
push
call
aam
cmc
jno
out
or
dec
loop
jo
lea
pop
call
movs
clc
mov
out
jno
in
sub
xor
sbb
push
stos
sub
mov
mov
das
loop
into
das
lock
dec
push
mov
mov
add
or
ss
sbb
xchg
daa
sub
pushf
pop
(bad)
(bad)
ins
in
dec
xchg
mov
jp
test
dec
and
div
mov
lea
inc
sub
mov
sbb
jmp
loop
cwde
aam
cdq
jmp
cmp
push
pop
nop
pop
int
repz
ret
nop
cmp
jp
xchg
adc
dec
cld
push
in
aaa
push
jg
imul
mov
mov
sbb
fsub
gs
test
stc
hlt
xor
inc
stos
js
push
xor
pop
sahf
xor
cli
inc
jbe
into
mov
fcmovnb
retf
add
sub
jge
(bad)
push
rcr
ret
scas
push
push
out
fsub
pop
xor
mov
std
push
jmp
pop
push
jecxz
pop
xor
mov
adc
sub
ja
ret
adc
xor
mov
test
in
iret
add
or
sbb
mov
out
sbb
add
not
retf
mov
dec
sbb
cmp
pop
dec
pop
in
jmp
ds
xchg
dec
les
fs
dec
repz
jecxz
fisubr
into
or
xchg
xor
cmp
xor
test
repz
cmps
or
xor
jb
inc
pop
push
jo
ret
xchg
xchg
sbb
inc
xchg
mov
cmp
scas
ds
retf
sbb
clc
lds
mov
adc
not
popf
mov
call
mov
cwde
hlt
dec
icebp
jle
jg
shl
jne
in
mov
push
movs
in
mov
test
inc
xchg
mov
inc
and
loop
cld
mov
mov
(bad)
das
das
cmp
sbb
shl
loope
stos
sub
xchg
dec
and
aam
mov
shr
(bad)
sub
jl
mul
adc
add
mov
ins
loop
aas
movs
push
data16
mov
fild
arpl
mov
add
push
imul
and
hlt
add
stos
jbe
jle
hlt
jns
out
add
leave
dec
xchg
jne
xor
pop
hlt
mov
cmps
inc
and
out
or
int3
iret
pop
imul
addr16
in
ins
in
fdivp
cld
int3
push
or
xchg
cwde
add
inc
pop
leave
les
and
shl
loop
jecxz
mov
mov
xchg
test
and
outs
add
cwde
daa
jmp
sub
mov
lods
sar
inc
fild
loope
xchg
xor
shl
pop
mov
sbb
enter
cli
nop
xchg
or
pop
mov
push
mov
add
xchg
ja
cld
fwait
lods
mov
jmp
stos
js
popf
mov
jns
mov
mov
and
sub
mov
mov
push
mov
add
inc
and
leave
mov
sbb
jge
and
int3
sbb
dec
loopne
(bad)
std
cs
cmp
cdq
ja
push
jp
add
enter
pop
mov
idiv
in
lea
pop
fdivr
mov
in
cli
mov
rol
fadd
adc
mov
dec
adc
mov
xor
mov
ins
shr
inc
lock
mov
sub
cld
daa
scas
add
jnp
pop
sub
push
sbb
pop
call
push
xchg
dec
aam
mov
adc
fst
fprem
mov
and
dec
and
push
and
sbb
out
xchg
pop
sbb
sbb
push
sub
xchg
jno
iret
cmp
stos
push
xchg
inc
aaa
xor
add
cmp
pop
or
xor
mov
jnp
xchg
imul
out
std
jo
sub
icebp
aas
pop
cs
lods
outs
pop
jmp
in
sub
cmp
nop
in
das
xchg
xor
ds
and
mov
retf
stos
outs
xor
cmp
ins
jno
sbb
mov
push
clc
xchg
and
lods
movs
shl
imul
popf
fidivr
loop
popa
arpl
add
dec
push
jb
mov
icebp
out
shl
(bad)
call
arpl
popa
mov
stos
xchg
jg
add
adc
pop
aaa
cld
cwde
adc
ins
inc
(bad)
hlt
xchg
in
lea
cmc
mov
test
xchg
inc
aam
int
movs
test
bound
repnz
add
push
cmp
out
test
jmp
ds
int3
loope
(bad)
call
adc
popa
fcmovnb
icebp
(bad)
fnsetpm(287
cmc
dec
les
cmp
pop
sbb
xor
or
(bad)
jecxz
inc
std
or
pushf
mov
push
mov
test
sbb
xor
dec
mov
in
pop
cmps
inc
pop
jmp
stos
sti
sbb
jo
mov
into
into
xor
movs
mov
addr16
std
xor
pop
pop
ins
cdq
scas
in
sti
inc
jmp
dec
jb
scas
loop
push
loopne
sbb
and
adc
cmp
shr
mov
das
push
stos
rol
nop
inc
mov
(bad)
mov
fisubr
sbb
fidivr
or
fistp
mov
or
xchg
fcomp
call
pop
ror
xor
sub
(bad)
lock
mov
test
xor
xor
ins
pop
push
(bad)
iret
in
xor
push
jge
fld
sbb
stc
sub
xchg
pop
xor
cmp
sbb
push
inc
out
mov
(bad)
cmps
mov
lahf
cld
gs
(bad)
mul
mov
xchg
adc
test
pop
sbb
cdq
jle
xor
cli
scas
into
out
pop
loope
ror
in
adc
or
pop
retf
clc
ss
push
adc
sub
pop
and
inc
push
add
je
ins
jl
(bad)
cmp
(bad)
in
stc
or
rcr
fld
movs
hlt
retf
or
pop
mov
neg
dec
mov
jl
xchg
pop
sbb
sub
or
inc
sub
mov
inc
out
ret
sub
mov
inc
mov
push
cld
sub
in
or
mov
fistp
jmp
add
cli
js
pushf
int
mul
ss
aad
jnp
sub
data16
std
fst
stos
cmp
xor
pop
aaa
inc
push
jno
jecxz
add
mov
scas
mov
ficom
(bad)
pop
ret
jle
rcl
xchg
cmp
out
jmp
push
not
push
lods
jg
lods
addr16
add
mov
sbb
inc
sbb
loopne
xchg
xchg
add
mov
cmp
cld
cdq
sub
shr
xor
adc
loopne
xchg
inc
sbb
push
mov
push
xchg
add
push
(bad)
sub
(bad)
out
push
cmp
xchg
hlt
mov
or
scas
je
and
and
push
pop
fistp
or
adc
es
xor
in
inc
xor
xor
cmp
dec
mov
jnp
mov
test
sub
movs
(bad)
jmp
sbb
bound
xor
mov
ds
jo
pop
mov
lods
cmp
popf
push
cli
frstor
fcom
inc
mov
or
pop
loop
xchg
cmp
push
cmps
fimul
jecxz
test
aaa
add
aam
mov
push
shl
mov
inc
and
mov
sub
adc
push
sub
fmul
dec
out
cmp
pop
push
jne
mov
jne
test
add
test
lahf
xchg
mov
pop
push
(bad)
jl
xchg
scas
jl
add
ficomp
or
lods
les
pop
jne
pop
leave
adc
lods
std
sbb
(bad)
out
jle
push
test
dec
adc
(bad)
leave
push
(bad)
dec
sub
push
and
or
dec
loope
push
fxch
mov
js
cmp
(bad)
mov
and
xchg
fst
cld
gs
mov
movs
fwait
adc
adc
lods
mov
cld
push
sbb
rol
hlt
push
jge
xor
lods
cmps
scas
pop
clc
inc
mov
in
aad
cmc
inc
adc
pop
cmp
cmp
lock
xor
mov
sub
mov
loopne
inc
sbb
mov
jo
inc
retf
ret
call
cmp
jp
dec
sbb
int3
(bad)
mov
push
jb
cmps
push
xor
pop
push
mov
ret
mov
out
int3
std
jg
iret
fmul
adc
ja
xchg
add
test
mov
enter
mov
inc
popa
not
js
in
lahf
test
jmp
mov
and
add
pop
jg
mov
jbe
add
xchg
leave
(bad)
in
ret
sub
ds
fwait
enter
(bad)
mov
push
inc
add
ss
es
(bad)
hlt
cmps
fsub
sub
in
and
push
pushf
sub
sbb
xor
xlat
stc
arpl
sbb
jmp
mov
pop
add
call
(bad)
add
(bad)
dec
stos
mov
popa
sub
xchg
int3
push
sahf
mov
js
repz
push
push
sub
pop
call
or
adc
and
clc
pop
icebp
cmp
mov
jns
cmp
fistp
jnp
pop
xchg
shl
lds
xchg
lahf
and
(bad)
mov
(bad)
push
sub
fnstcw
iret
enter
in
rcr
popa
aam
inc
call
popa
mov
dec
fld
add
leave
add
aad
loopne
xchg
fist
fmul
jecxz
js
bound
int3
mov
mov
cmp
push
and
shl
dec
mov
xchg
addr16
test
loopne
gs
scas
mov
pop
cmp
test
or
mov
sbb
ficomp
int3
stos
adc
add
push
push
push
movs
mov
xor
enter
mov
xor
test
jecxz
rcl
hlt
add
fmulp
int
test
mov
xor
adc
xchg
sti
mov
adc
movs
imul
cli
and
ja
jmp
xchg
inc
(bad)
xor
xlat
repnz
xchg
fisttp
out
jbe
shl
ins
sbb
dec
adc
jne
dec
mov
add
outs
ret
push
adc
fsubr
pop
pop
loope
add
retf
lock
cmp
imul
mov
ss
xor
and
push
mov
mov
cli
dec
mov
into
cmps
(bad)
xor
stos
cld
push
scas
shrd
mov
dec
push
mov
inc
pop
aaa
push
(bad)
arpl
mov
(bad)
cld
mov
sub
iret
cmc
lahf
and
pop
movs
mov
or
fucomip
or
push
sub
xor
(bad)
xor
mov
pop
shl
out
mov
les
stos
or
aaa
ds
mov
leave
retf
dec
inc
mov
mov
pop
scas
fcom
mov
sub
dec
xchg
outs
out
outs
mov
shr
mov
jb
fst
test
inc
lods
adc
movaps
xchg
mov
ss
sub
dec
je
test
xchg
mov
enter
and
dec
xchg
cmp
and
dec
cmp
and
mov
xchg
mov
iret
sub
loopne
test
mov
jle
push
addr16
jecxz
jb
adc
out
fld
adc
test
pusha
jns
sbb
les
outs
int
add
fmul
icebp
inc
dec
mov
pop
daa
adc
clc
lods
lods
push
dec
imul
xor
cld
push
jecxz
fistp
out
pop
int3
retf
dec
inc
mov
pop
es
std
xlat
mov
test
push
push
scas
add
adc
xchg
pop
daa
(bad)
ja
xor
jnp
cmp
dec
ret
inc
les
jo
and
sbb
ins
sub
(bad)
jecxz
lods
or
out
and
gs
xchg
scas
pop
add
pop
bound
aas
leave
es
adc
(bad)
fmul
mov
popf
jg
test
cmp
mov
pop
cwde
mov
fnstenv
cld
cmp
xor
movs
(bad)
add
mov
jo
inc
imul
ds
movs
sub
pop
and
dec
out
ins
shl
xlat
test
dec
sub
mov
popa
push
not
ds
(bad)
jecxz
sub
dec
mov
add
lods
sbb
scas
lods
iret
(bad)
jmp
dec
cmps
jge
xor
jb
nop
out
shr
cmp
sub
lock
push
jl
xchg
jmp
sbb
pop
sbb
push
(bad)
jnp
mov
add
aad
or
aad
clc
sbb
movs
lods
punpckhwd
push
call
dec
cmp
ins
xchg
pushf
jnp
sub
jbe
xchg
mov
pusha
inc
dec
rcr
mov
mov
ror
jmp
dec
or
jmp
pop
scas
add
ins
jp
(bad)
xor
mov
mov
pop
icebp
xor
cmps
test
jle
push
sahf
fisub
mov
add
stc
cwde
or
adc
sbb
push
mov
push
jbe
test
cwde
outs
cmp
test
push
jl
stc
fs
call
pop
sub
mov
add
(bad)
sub
retf
mov
clc
pop
push
jno
pop
push
xchg
xchg
lea
gs
push
or
es
pop
sub
mov
rol
xor
cli
outs
daa
(bad)
push
test
cmp
or
repz
or
adc
(bad)
push
xchg
call
pop
sub
cld
or
mov
shl
ins
mov
or
les
mov
mov
push
jp
aad
sbb
jmp
push
xchg
and
pop
dec
pop
(bad)
(bad)
or
cmps
sar
jo
push
push
jmp
push
gs
test
xchg
push
jle
aam
(bad)
jmp
or
out
mov
cwde
popf
jne
imul
mov
fist
mov
fdiv
pop
imul
popa
pusha
ror
jmp
sar
jmp
shr
mov
mov
sbb
test
fwait
out
push
mov
gs
stos
push
jb
and
lods
jns
pushf
push
out
inc
add
mov
fdivr
pushf
into
and
int3
mov
daa
mov
adc
sbb
stos
inc
push
ficom
(bad)
mov
mov
nop
cmp
bound
mov
loope
and
pop
jo
loop
inc
cmc
fbld
pop
xchg
lahf
mov
dec
clc
push
inc
push
test
cmps
loope
pushf
(bad)
lds
hlt
adc
cld
out
dec
mov
mov
hlt
test
pushf
and
addr16
mov
jns
ror
jns
lds
mov
jbe
pop
inc
stc
fucomip
inc
ficomp
add
push
xchg
icebp
(bad)
xor
fst
mov
fs
fnstcw
pushf
stos
push
cmp
imul
stc
mov
out
(bad)
cmp
jae
or
cwde
sub
add
pop
push
int
outs
jbe
xchg
xor
jp
jae
and
aam
lahf
pop
jnp
mov
and
fsub
test
xchg
aaa
push
sbb
mov
and
and
fwait
push
xchg
dec
sti
push
sub
scas
mov
adc
retf
mov
daa
icebp
xlat
mov
sbb
xchg
mov
jp
in
add
mov
repnz
cmp
push
pop
and
test
mov
xchg
cmp
fucomi
ins
in
and
push
stos
lods
fbstp
dec
out
int
jecxz
xlat
jmp
sub
pop
xor
or
xchg
jno
xor
pop
(bad)
out
in
mov
mov
cli
iret
push
retf
add
mov
mov
and
inc
clc
in
lds
pushf
jle
je
dec
push
pop
sti
aam
lods
inc
xchg
test
pop
pop
aas
push
loope
icebp
cmp
mov
xchg
add
in
into
sar
(bad)
out
sub
push
hlt
sub
scas
cli
add
cwde
and
mov
cmp
mov
xor
je
mov
rcr
mov
fst
sbb
shl
dec
mov
mov
ret
cmp
xchg
inc
js
mov
sbb
mov
out
rol
(bad)
jo
fwait
inc
pop
xchg
adc
fwait
leave
das
je
jge
fwait
jnp
xchg
mov
sub
sbb
jo
lea
in
inc
loope
ficomp
xor
inc
cs
loopne
popa
dec
ss
fist
add
rcl
(bad)
mov
sbb
xchg
mov
adc
or
xor
sub
xor
stc
adc
xchg
lods
rcl
and
adc
test
push
mov
adc
push
nop
mov
cmp
push
pop
push
test
cmp
out
test
mov
mov
fwait
in
sahf
cmps
inc
movs
ret
cmp
sub
inc
aam
fisubr
inc
pop
or
add
inc
jmp
sbb
dec
pop
or
mov
mov
imul
and
fdiv
(bad)
mov
xchg
cmp
mov
addr16
mov
outs
mov
repnz
lock
lods
sub
push
popa
aas
cmp
pop
sbb
push
pusha
shl
sub
jo
dec
mov
lea
pop
add
loopne
mov
imul
pusha
fistp
inc
cs
rol
cmp
jnp
sbb
jns
je
sbb
shl
mov
fs
dec
rcr
mov
or
sub
mov
adc
mov
inc
out
pop
and
push
xor
jp
lods
call
ss
mov
shl
in
push
sub
xchg
inc
xor
loope
pop
ror
mov
imul
and
(bad)
js
dec
pop
(bad)
mov
xchg
xor
mov
push
push
mov
into
test
in
sahf
add
popa
mov
push
pop
sbb
call
push
mov
scas
or
cwde
adc
sar
sbb
mov
je
jecxz
bound
call
out
or
nop
push
mov
bound
jo
mov
adc
push
fldcw
sbb
and
aaa
lods
(bad)
scas
push
pop
add
(bad)
out
lahf
imul
pop
fcmovbe
inc
fcom
pop
fldcw
pushf
sub
pusha
push
jo
ror
add
inc
ss
daa
mov
inc
lock
dec
es
mov
out
or
and
pusha
add
push
and
mov
lock
nop
mov
push
stos
xor
and
loopne
outs
jno
sub
push
cld
cmovae
mov
stos
fnstsw
cmc
arpl
shrd
push
stos
mov
xor
pop
fstp
mov
inc
pop
in
out
dec
mov
push
out
inc
xor
inc
fdivr
std
dec
and
adc
mov
jae
jne
pop
mov
(bad)
jecxz
mov
movs
xor
jmp
mov
add
cld
mov
mul
sub
xlat
inc
inc
or
scas
ror
fidiv
adc
add
inc
mov
dec
mov
dec
push
shl
outs
ret
lds
or
push
ret
dec
popf
fist
imul
push
add
mov
inc
cmp
sub
rcl
inc
sar
jns
loope
(bad)
jno
loopne
fs
jge
jmp
jge
push
ds
enter
lock
mov
sbb
fsubr
out
pushf
out
dec
and
int
jnp
add
(bad)
stc
int3
xor
rcl
les
xchg
add
inc
dec
pop
sub
push
dec
xchg
xchg
imul
adc
out
movs
or
mov
nop
ins
ins
mul
pop
mov
dec
adc
shl
sbb
nop
mov
iret
lds
push
aaa
ret
loope
mov
fstp
int
(bad)
jl
stos
(bad)
mov
in
out
ret
mov
(bad)
movs
retf
xchg
sub
xchg
mov
inc
adc
enter
push
mov
push
popf
sar
mov
push
mov
(bad)
inc
(bad)
ror
ja
jle
xor
clc
cmp
loope
test
dec
es
pop
adc
ficomp
mov
clc
push
jnp
mov
pop
int3
outs
popf
lods
lock
pop
add
or
mov
xchg
(bad)
out
(bad)
xchg
jne
test
jno
stc
cmc
dec
dec
mov
gs
loope
mov
add
xor
pop
cld
jp
sbb
jmp
pop
cld
or
mov
sub
pop
sub
add
call
xlat
bound
adc
les
pop
pop
faddp
push
ret
mov
repnz
mov
fmul
test
sar
in
mov
fistp
jl
and
cli
test
jne
jl
jmp
and
sbb
imul
(bad)
int
ret
mov
inc
enter
in
push
xor
out
fwait
sar
xlat
call
aad
adc
into
cwde
outs
fcom
xchg
call
popf
pop
and
xor
rcr
dec
push
stc
aaa
sub
lea
repz
xchg
leave
inc
int
(bad)
jl
pusha
call
xchg
and
dec
in
lods
ss
add
mov
and
ficomp
je
(bad)
movs
dec
adc
pushf
sub
jbe
mov
adc
fistp
add
jle
cmp
dec
lock
cmp
push
pop
fstp
ficomp
rcl
jg
in
pop
add
sub
ins
pop
(bad)
mov
and
dec
test
imul
rol
cmps
add
arpl
imul
push
pop
(bad)
or
popf
loope
pop
stc
mov
inc
(bad)
out
and
jno
mov
test
inc
(bad)
sub
push
jmp
sbb
mov
test
jl
mov
inc
std
inc
jmp
inc
loop
cmp
imul
movs
cmp
sub
push
mov
xchg
(bad)
jl
inc
xchg
iret
cmp
cmp
scas
adc
dec
popf
jno
test
push
mov
xor
lahf
push
ss
cmc
xchg
imul
cmp
in
jb
minps
jmp
push
movs
call
nop
jl
je
and
xor
jbe
pusha
mov
aas
nop
mov
popa
shl
pop
stos
inc
(bad)
add
xor
shl
stos
inc
not
cmp
adc
pop
popa
aaa
or
sbb
mov
bound
xchg
or
test
(bad)
pop
or
dec
cwde
mov
jno
push
jae
xchg
enter
cmp
packssdw
sub
addr16
aas
sbb
lds
jle
jle
outs
cmp
fld
cmp
aad
mov
mov
inc
in
xchg
(bad)
ja
mov
jecxz
out
pop
and
lods
dec
xchg
shl
xchg
scas
movs
dec
add
(bad)
cld
pop
inc
xchg
mov
aam
mov
and
sbb
add
inc
jo
loope
mov
jecxz
add
xor
dec
mov
push
mov
mov
sbb
pop
shl
jecxz
adc
push
pop
push
clc
xchg
stos
leave
movs
jl
mov
jle
push
clc
jbe
inc
push
out
mov
mov
pop
add
mov
jno
inc
ds
add
icebp
iret
add
sbb
sbb
push
ret
or
mov
xor
xchg
mov
sub
adc
addr16
push
sti
adc
mov
mov
outs
mov
mov
xchg
jmp
aaa
rol
mov
fsubrp
cmp
stos
popa
dec
cdq
mov
mov
repnz
jo
lods
fwait
(bad)
mov
mov
xor
fucomp
mov
add
iret
sbb
mov
adc
sub
ds
or
bound
fcom
repz
inc
adc
daa
scas
mov
cli
xor
iret
inc
pusha
jnp
or
xor
xor
pop
call
call
dec
aam
aaa
adc
push
xchg
and
enter
mov
cli
dec
aas
stc
nop
addr16
idiv
icebp
mov
jmp
popf
lahf
loop
rcl
call
adc
and
jnp
ds
inc
in
or
pop
and
push
stos
mov
cwde
arpl
in
and
ja
add
jne
inc
das
or
jmp
test
inc
xchg
(bad)
xor
aas
inc
inc
mov
enter
inc
sbb
mov
add
cmp
imul
push
inc
push
jp
rcl
repz
imul
inc
lea
outs
(bad)
adc
push
into
mov
aad
or
sub
adc
pop
movs
mov
dec
outs
mov
pop
dec
rsm
aad
outs
fisubr
sbb
xchg
push
sbb
test
ins
sub
cld
xor
idiv
scas
fs
inc
add
in
je
and
imul
lods
add
fs
clc
fld
xchg
(bad)
sub
jae
or
test
mov
inc
mov
hlt
lods
addr16
push
mov
fbld
mov
xor
or
dec
pop
movs
adc
cmovl
(bad)
aam
fmul
push
pop
ins
rcr
and
imul
mov
jno
das
mov
sub
cwde
dec
in
retf
push
sub
jge
pushf
push
adc
mov
mov
aam
ins
rcr
and
adc
outs
popa
add
xchg
push
jb
loopne
outs
jecxz
scas
xchg
xchg
and
in
dec
mov
add
outs
stos
add
test
in
mov
lds
xchg
jmp
test
and
jmp
call
aas
mov
cdq
out
xchg
inc
or
jp
fnstsw
out
jae
repnz
scas
ins
into
aas
cwde
(bad)
or
cs
icebp
enter
jno
inc
mov
ror
popa
jp
mov
lahf
sbb
dec
test
push
cwde
push
mov
cwde
sub
xchg
inc
mov
add
xchg
xor
outs
jae
icebp
mov
dec
leave
out
push
pusha
mul
jnp
or
xchg
lods
retf
(bad)
(bad)
outs
jle
cli
mov
or
jbe
jle
push
sub
fsub
lods
xchg
das
pop
dec
shr
ins
pop
mov
adc
mov
sbb
mov
rcr
add
push
mov
neg
mov
je
ds
dec
adc
arpl
scas
retf
mov
cmps
and
iret
sub
push
pop
xor
nop
loopne
neg
aad
sub
bnd
lea
pushf
mov
(bad)
retf
stos
adc
xchg
and
stos
cld
push
into
ds
test
enter
arpl
cld
repz
cmp
push
inc
mov
int3
clc
loop
pop
aam
pop
pusha
pop
out
dec
or
fsubr
push
xchg
int
enter
loop
neg
xor
xchg
aaa
and
(bad)
dec
fwait
test
sub
dec
xchg
pop
push
loop
jl
test
xchg
(bad)
call
test
leave
mov
jmp
xchg
adc
dec
div
xchg
adc
in
mov
or
mov
out
repz
cmp
dec
or
pop
xchg
adc
push
sar
pop
dec
(bad)
dec
pop
in
(bad)
scas
jo
cli
sub
outs
adc
inc
push
jecxz
and
or
clc
mov
iret
push
pop
(bad)
test
add
shl
xor
and
inc
call
push
addr16
out
sbb
cmp
lods
dec
jp
stos
jbe
mov
or
loope
mov
(bad)
sti
xor
(bad)
aaa
and
push
mov
jle
out
test
dec
aad
pop
xchg
stos
sbb
add
fcom
mov
(bad)
jle
sbb
das
ins
or
sub
sub
inc
push
in
fstp
idiv
push
and
and
mov
lods
cmp
pop
imul
pop
(bad)
fstp
jbe
sbb
dec
retf
inc
icebp
loopne
xchg
pop
cmps
fs
jg
dec
fnsave
or
xor
sbb
jb
ds
jg
clc
aaa
xchg
loop
pop
repnz
loope
ret
std
jae
loopne
mov
mov
enter
cmp
in
retf
in
sub
mov
outs
data16
sbb
add
and
sbb
jns
sbb
sbb
imul
add
jmp
fstp
hlt
cdq
movs
arpl
pop
pop
dec
gs
mov
mov
jae
push
ror
jmp
adc
jns
push
cmp
push
in
pop
dec
mov
adc
sahf
mov
shl
add
popf
pusha
xchg
mov
xor
vdivps
dec
dec
mov
or
sbb
ja
stos
lea
dec
out
loopne
popf
dec
rol
fsub
test
cmps
popa
stos
into
jle
scas
sub
enter
mov
push
out
or
jno
test
mov
sub
push
test
daa
ret
in
jle
(bad)
jge
repnz
popf
inc
jp
cmp
add
or
data16
add
pushf
aas
or
sbb
mov
push
sbb
pop
(bad)
into
fdiv
out
ror
push
adc
fidiv
inc
test
cwde
or
jge
sub
sub
or
adc
enter
xchg
enter
push
(bad)
(bad)
dec
mov
jle
mov
pop
loope
in
call
pop
ss
cli
in
aad
mov
loope
xor
xor
xchg
test
iret
daa
push
mov
cmp
add
call
out
leave
pop
fadd
sub
leave
xchg
in
leave
xchg
xor
mov
shl
daa
mov
mov
push
fistp
in
push
lock
pop
in
and
xor
fld
mov
repz
cmp
pop
sub
sbb
mov
fdiv
xchg
repnz
mov
and
and
inc
iret
pusha
dec
sbb
sub
stos
lods
gs
arpl
xchg
inc
jb
pop
adc
inc
push
sbb
test
(bad)
aad
aas
and
(bad)
mov
stos
repnz
mov
dec
test
push
add
xchg
pusha
fimul
jns
gs
into
iret
ss
sbb
push
cli
cmps
sub
push
loope
xchg
dec
and
sub
rcr
adc
sahf
iret
inc
xchg
popa
daa
or
cmc
sub
lods
xchg
push
mov
sahf
push
stc
sbb
lock
or
fisub
mov
xor
popf
shl
mov
sbb
mov
pop
add
dec
jbe
or
cmc
pop
mov
lds
ins
(bad)
in
mov
repz
ja
int3
hlt
xor
frstor
retf
xor
push
aam
retf
pop
push
inc
sub
jmp
scas
mov
add
mov
sbb
dec
in
test
xor
ja
hlt
mov
and
mov
pusha
jmp
xor
jecxz
xchg
sbb
popa
in
inc
shr
xor
mov
pop
push
call
jne
mov
fnstenv
sub
mov
lods
mov
je
lahf
lods
xor
ret
ins
das
leave
sub
popa
sub
dec
daa
js
mov
pop
jg
jmp
xchg
xchg
call
xchg
mov
mov
inc
push
mov
sbb
into
mov
inc
push
test
out
js
jae
pop
add
jno
jno
in
pusha
cmp
scas
cvtdq2ps
enter
mov
outs
(bad)
mov
mov
lock
pushf
pop
push
fwait
xchg
lahf
adc
aas
inc
adc
loopne
icebp
dec
or
sbb
ins
je
addr16
popf
lea
aas
jmp
push
and
dec
and
mov
jnp
cmc
cwde
gs
mov
fdivr
jl
into
popf
xor
xor
pop
cmp
test
or
out
adc
movs
mov
xor
test
sbb
les
leave
pop
aaa
push
lds
hlt
mov
push
les
loop
push
popa
and
ret
stc
xchg
dec
xor
les
jbe
es
add
cmp
jb
movs
push
lds
mov
mov
sub
loopne
mov
nop
outs
fs
enter
sbb
lahf
xchg
add
add
sbb
xchg
icebp
mov
mov
pop
fiadd
cmps
and
mov
fadd
ja
mov
jg
stos
mov
dec
xchg
popf
add
xchg
xor
and
out
clc
sbb
jne
push
(bad)
ja
xchg
cdq
mov
int3
ror
push
test
(bad)
mov
cmps
xchg
mov
daa
or
sub
sub
push
sub
test
xlat
jbe
inc
jl
adc
ret
stc
loopne
fadd
or
cmp
pop
add
mov
or
rcl
mov
mov
and
out
mov
test
fild
mov
dec
(bad)
mul
mov
push
cli
cmc
pop
lock
jecxz
sub
ins
or
out
pop
jp
or
xlat
sub
push
ds
aaa
xor
(bad)
stos
fidiv
xchg
sbb
or
pop
and
lods
pop
dec
mov
(bad)
fld
cmp
push
lahf
es
mov
addr16
dec
pop
inc
xchg
mov
lds
rcr
(bad)
ret
stc
scas
cs
sbb
ss
scas
movs
sub
in
mov
rep
adc
adc
or
aaa
or
clc
and
inc
add
gs
aam
rol
dec
outs
int3
dec
scas
and
sbb
mov
call
sar
add
pop
or
test
fwait
inc
(bad)
xchg
sahf
cmp
add
fldlg2
dec
(bad)
(bad)
iret
mov
mov
shr
dec
mov
push
cmp
mov
test
retf
add
jmp
jle
xchg
leave
xchg
mov
popa
js
cmp
ficom
adc
cmp
arpl
push
in
idiv
fs
scas
leave
adc
retf
fldenv
jl
jbe
sub
les
inc
xchg
sub
cmp
mov
(bad)
and
push
lods
dec
push
jecxz
mov
pop
sahf
sbb
jecxz
clc
mov
sub
inc
leave
xor
sub
push
retf
stos
xor
call
jbe
inc
std
clc
pop
repz
jae
stos
stos
xor
arpl
call
sbb
push
dec
or
stos
mov
or
movs
nop
stos
sub
sbb
xor
lds
push
fisttp
pop
test
inc
push
ficomp
mov
jge
adc
data16
out
mov
cs
pusha
mov
push
xchg
ja
hlt
mov
pop
movs
mov
sub
dec
mov
(bad)
sbb
pop
mov
in
and
ds
jge
mov
dec
test
lods
(bad)
and
rcr
pop
(bad)
push
imul
or
scas
cmp
scas
add
shl
xchg
cmp
leave
data16
mov
sbb
push
movs
push
(bad)
repnz
cmp
aaa
sbb
cmp
mov
add
ret
vpaddb
test
cmp
imul
cdq
cmp
xor
and
cmp
jns
outs
enter
cld
pop
rcr
jl
(bad)
call
pop
mov
fxch
dec
out
out
in
jnp
popf
jns
push
mov
lds
mov
mov
and
pop
in
mov
scas
and
lahf
dec
jns
jge
and
or
es
pusha
xchg
out
pop
fidiv
and
jae
cmp
cmp
sub
into
ret
scas
inc
sub
sar
jg
adc
jno
mov
add
push
mov
cmp
nop
shl
pop
addr16
leave
rcl
les
mov
arpl
add
(bad)
dec
inc
mov
loope
call
popa
lods
pusha
cbw
and
jne
jae
xchg
and
push
fidivr
xchg
push
ss
mov
pop
sbb
xchg
push
xor
dec
fidivr
push
cmp
hlt
jecxz
inc
dec
je
stos
stos
sub
jns
push
sbb
in
or
out
pop
cmp
or
scas
or
fistp
add
test
xor
aad
cmc
jbe
mov
add
jns
movs
sbb
adc
(bad)
(bad)
ds
lods
xchg
xor
xchg
out
fwait
fwait
add
pmaxsw
pop
in
and
xchg
or
xchg
mov
inc
pop
cmps
jo
adc
or
jne
cmp
scas
fwait
xor
or
pop
pop
and
mov
mov
dec
inc
(bad)
ss
xchg
mov
cdq
retf
or
xor
inc
(bad)
aad
mov
xor
in
mov
push
aam
fisubr
sub
out
repnz
dec
and
imul
adc
inc
and
mov
std
fnstcw
dec
add
retf
cmps
mov
xor
aas
fsub
mov
push
or
ror
aam
dec
cmp
ds
std
jecxz
pop
test
imul
aaa
push
inc
ficom
in
lahf
aas
pushf
movs
rcr
mov
xchg
add
mov
lock
cmp
cmp
aad
imul
popa
dec
sbb
dec
pop
scas
ficomp
call
jo
scas
icebp
inc
call
arpl
fs
pop
push
jo
inc
or
inc
fld
es
cmp
mov
cs
rcr
out
jecxz
jnp
mov
xor
aad
call
daa
cs
and
test
cdq
push
xchg
pop
scas
jmp
loopne
fwait
stos
pop
imul
add
mov
dec
and
and
dec
jno
(bad)
adc
call
xchg
jle
sub
sbb
cwde
jecxz
cmp
sbb
rcr
push
jecxz
xchg
popf
aas
lods
les
mov
stos
sub
out
pop
not
pop
ret
das
xlat
inc
pop
out
(bad)
aam
stos
jnp
mov
push
pop
lods
inc
push
data16
test
cmp
std
cmp
ins
enter
addr16
mov
outs
adc
cmp
cmp
movs
xchg
test
popa
xor
jge
dec
aad
dec
and
leave
pushf
push
inc
mov
(bad)
xor
stos
fcom
hlt
adc
mov
or
sti
aad
xchg
inc
sbb
(bad)
sbb
aad
in
(bad)
mov
pop
in
mov
mov
xor
test
(bad)
jp
inc
mov
lea
cmc
pushw
pop
fst
pop
sub
pop
cli
adc
or
out
push
mov
enter
out
mov
sbb
icebp
mov
jge
lahf
xchg
(bad)
xchg
ins
in
jmp
popa
xor
repz
pop
loopne
push
daa
xchg
pop
push
jae
call
rcl
rcr
call
mov
or
std
mov
aad
outs
inc
loop
dec
loop
inc
cld
gs
sbb
inc
sub
stos
mov
sbb
pusha
stos
pop
sub
(bad)
jle
cmps
test
rcl
or
pop
adc
test
mov
sub
fdiv
mov
dec
jmp
xchg
stos
cld
mov
test
sub
jl
xchg
sbb
mov
fsubr
aad
mov
pop
cmp
xchg
dec
fcmovnbe
sahf
adc
xchg
in
aam
xchg
jo
out
push
mov
mov
cdq
mov
loop
fsub
sahf
adc
gs
jmp
add
enter
mov
inc
and
out
push
stos
call
mov
add
(bad)
xchg
push
push
cmp
jg
cdq
xor
(bad)
ret
inc
lahf
mov
xchg
(bad)
out
adc
mov
or
cmp
mov
xor
fisubr
mov
pop
mov
addr16
adc
loope
xchg
xor
push
add
movs
xchg
push
xchg
mov
frstor
mov
imul
sub
jecxz
xor
(bad)
cwde
mov
jl
push
mov
mov
or
add
inc
loop
inc
mov
aas
xlat
mov
cmps
imul
sub
mov
add
cmp
into
xchg
popf
or
nop
lods
or
outs
les
sbb
add
mov
mov
mov
pop
jge
mov
mov
xor
popa
into
(bad)
or
xor
imul
xchg
ret
cmc
mov
int3
push
test
sbb
pusha
xchg
sub
sub
inc
ss
pop
add
mov
push
mov
xor
dec
pushf
in
sbb
sub
mov
ror
mov
dec
and
lahf
push
cwde
push
cmp
int3
(bad)
cmp
test
push
std
in
jns
loop
or
int
sbb
mov
add
into
push
jae
add
nop
xchg
xchg
retf
loopne
stos
xchg
or
xchg
sub
mov
in
std
xchg
bound
pop
fcomp
fs
cmp
cmp
xor
inc
aad
mov
xor
xor
iret
lahf
addr16
dec
and
pop
fbld
jne
dec
gs
sahf
and
pop
xchg
popa
addr16
mov
xchg
mov
mov
cmp
neg
xchg
cmc
cdq
leave
rcl
pop
jmp
fisttp
es
jb
lock
xor
popf
outs
xchg
mov
cli
xor
or
cdq
dec
add
or
(bad)
pop
push
jne
push
xchg
add
aam
dec
rcr
sub
add
outs
adc
movs
outs
add
mov
pop
cmc
and
push
ss
out
test
test
inc
mov
jp
push
jno
and
rcr
mov
movs
mov
cmps
inc
dec
ds
jns
aam
in
and
ins
cld
cmp
popf
xor
mov
hlt
mov
xor
fdiv
xor
xor
push
into
and
mov
xchg
out
loope
mov
or
jecxz
sbb
fcmovnu
sbb
dec
pop
pop
mov
dec
retf
dec
pop
hlt
push
xor
pop
ds
in
cdq
in
xor
aam
adc
xlat
push
mov
dec
(bad)
mov
pop
mov
cmps
adc
and
jecxz
loop
rcl
call
shl
les
into
shl
shl
push
fsub
add
sub
and
div
cli
pop
mov
xor
aam
out
xchg
icebp
jns
mov
mov
std
shl
adc
or
daa
or
mov
sbb
rol
sub
cdq
imul
aas
mov
add
sahf
push
aam
rcr
fwait
call
mov
or
add
out
xchg
retf
mov
xchg
add
jns
pushf
std
aad
cmps
daa
dec
scas
cmps
inc
xchg
push
rol
and
cmp
push
push
cs
pop
call
dec
sbb
mov
fcomp
pop
(bad)
fs
mul
lahf
cmps
jmp
out
hlt
lea
xor
icebp
push
loope
mul
(bad)
and
fchs
mov
cli
mov
xchg
jnp
in
fisubr
out
daa
dec
adc
outs
push
fst
scas
inc
dec
addr16
mov
(bad)
sub
clc
(bad)
imul
div
push
xchg
xor
cmp
push
jmp
mov
imul
mov
pop
push
or
scas
addr16
cmc
sbb
mov
and
xchg
cli
movs
ret
sub
sbb
pop
aas
dec
test
jl
cmp
and
bound
sub
outs
or
cmp
pop
stc
test
pop
sahf
je
movs
push
fsubr
and
int
pop
sbb
xchg
fst
in
sbb
mov
jl
fisub
lods
mov
ds
xchg
loope
lods
out
sbb
daa
xlat
jne
jb
add
out
jnp
cmps
push
movs
lock
sbb
dec
jl
sub
jge
and
icebp
in
dec
cmps
aam
sbb
mov
jae
(bad)
nop
jmp
(bad)
pop
xchg
push
test
mov
xchg
jge
aam
cmp
or
retf
dec
dec
fidiv
scas
push
test
push
xchg
jecxz
sub
inc
add
das
repnz
div
and
imul
cdq
test
in
push
inc
pop
mov
and
retf
jl
cmp
dec
scas
shl
call
movs
mov
jbe
inc
push
push
ficom
pop
push
xor
mov
repz
repnz
sub
rol
scas
shr
or
ins
pop
clc
inc
std
dec
div
(bad)
outs
lea
add
jp
pop
xchg
jmp
loop
mov
pushf
aaa
ret
fldenv
mov
jmp
mov
stos
mov
pusha
imul
sbb
mov
add
mov
sub
sub
add
test
push
and
retf
push
mul
pop
nop
int3
sub
mov
lea
jge
imul
loopne
cmp
and
xchg
cmps
movs
jns
imul
ret
jne
movntps
xchg
adc
nop
mov
dec
add
cmp
push
jns
data16
out
and
mov
fnstcw
lods
pop
jb
loopne
ror
fdivr
mov
xor
lods
and
push
ret
sbb
loope
pop
push
push
imul
shl
loopne
aas
xchg
push
sahf
popf
xchg
retf
dec
jmp
xor
cmp
jmp
sbb
cmp
gs
mov
push
jp
cld
mov
ins
push
inc
inc
fadd
xchg
aas
mov
mov
test
mov
aam
stos
mov
movs
sti
push
je
mov
movs
mov
test
and
lods
or
jne
cs
jo
push
mov
cwde
ret
jge
imul
mov
loope
arpl
adc
mov
jmp
mov
jno
(bad)
aam
int3
jae
or
xchg
pmaddwd
sti
stos
cmp
fsub
jp
push
lea
fiadd
retf
mov
cmp
push
shl
imul
in
sub
pop
out
mov
sahf
pop
cdq
ret
fs
adc
jl
in
ss
ja
out
(bad)
dec
xchg
push
cs
push
pusha
retf
or
fcmovbe
xor
(bad)
outs
jle
fisttp
sbb
adc
sbb
aas
das
lds
fwait
bound
call
mov
ja
loope
or
test
test
mov
ret
lahf
dec
inc
push
dec
(bad)
(bad)
ins
pop
cmp
dec
ret
aaa
data16
test
into
ins
imul
xchg
add
dec
rol
loop
push
jmp
push
popa
(bad)
xor
ja
xchg
inc
or
cmp
outs
jmp
sahf
dec
pop
mov
mov
sbb
jmp
jnp
mov
and
or
inc
inc
add
dec
push
and
adc
mov
imul
(bad)
lahf
(bad)
sbb
lds
cdq
inc
imul
cmp
adc
lds
xchg
ss
shl
jg
pop
scas
ret
out
es
(bad)
push
mov
or
jl
push
in
or
stos
push
lods
aam
sbb
jle
sahf
mul
mov
xor
ins
loop
cmc
mul
outs
pop
out
pop
cmp
fsubr
mov
pop
jns
ja
aad
mov
loop
inc
in
sub
ds
cmp
dec
xor
pop
mov
jne
(bad)
xor
ins
pop
in
push
ror
cmp
imul
invd
int
push
or
adc
or
ins
bound
inc
mov
adc
push
xor
stos
pop
mov
mov
lods
sar
aaa
and
jmp
aas
out
and
add
sahf
and
jo
push
movs
xchg
add
call
retf
scas
out
sbb
popa
dec
gs
sub
mov
arpl
pop
in
dec
cli
push
inc
sub
add
fsub
xchg
or
retf
stos
push
add
retf
mov
cmp
out
jne
push
(bad)
dec
retf
xchg
(bad)
push
or
mov
fcomip
mov
hlt
jp
pop
cmp
and
nop
nop
and
data16
xchg
out
(bad)
icebp
mov
xchg
xchg
mov
fwait
mov
ins
test
push
and
xchg
shl
(bad)
dec
retf
push
ins
outs
sub
daa
ja
cmp
es
cs
mov
adc
cmp
js
icebp
dec
push
dec
int
jmp
or
sub
xor
pop
fwait
cmp
div
sbb
ret
(bad)
nop
(bad)
je
jmp
xchg
push
call
or
cwde
jge
rol
inc
cmp
mov
jae
or
pop
clc
pop
jae
mov
test
or
int3
jmp
in
adc
shl
add
or
cwde
xchg
or
sbb
jp
ins
(bad)
xchg
movs
ja
cmps
daa
in
xchg
inc
ds
ins
xor
retf
fiadd
cmc
cmp
mov
xchg
xchg
loopne
das
call
dec
xchg
lods
aas
jg
add
and
test
pop
rcl
js
xchg
mov
cmp
sahf
adc
add
mov
(bad)
or
pop
mov
daa
jmp
or
cmp
in
or
mov
bound
sub
add
pop
mov
ins
loopne
in
pushaw
adc
dec
mov
out
cmp
data16
dec
xchg
in
outs
dec
(bad)
and
cwde
push
(bad)
cmp
scas
out
jo
(bad)
mov
movs
dec
cmp
pusha
jecxz
cmp
jns
add
in
scas
dec
lock
repnz
call
jae
push
repnz
icebp
cdq
xor
mov
dec
aaa
jo
mov
and
pop
jae
es
jl
push
or
call
sub
js
cmps
(bad)
mov
xor
out
push
enter
xlat
xor
out
or
xor
pop
jl
(bad)
jecxz
mov
paddsb
add
pop
inc
mov
push
cmp
jge
nop
call
dec
dec
xchg
ror
lahf
arpl
push
shr
push
xlat
(bad)
mov
ss
sub
add
mov
ins
xchg
rcr
dec
push
shl
sub
adc
shl
push
ja
xchg
mov
nop
fisubr
pop
inc
jae
push
out
sbb
out
iret
mov
dec
push
adc
(bad)
int
jno
daa
nop
test
xchg
stos
daa
je
mov
inc
xor
scas
push
inc
dec
adc
adc
pushf
outs
in
ret
cmps
jecxz
sbb
xchg
jle
add
push
adc
mov
ins
cs
shr
repnz
hlt
mov
in
mov
call
pop
test
mov
sbb
push
and
pop
xchg
addr16
cmc
hlt
jno
daa
sar
ficom
and
sbb
ficomp
in
and
pop
adc
ja
imul
retf
dec
mov
mov
fnstcw
mov
sub
push
aaa
mov
loop
aaa
fdiv
inc
mov
cmps
pop
fdiv
call
jge
sbb
mov
cmp
in
loopne
push
outs
call
cs
mov
retf
ficomp
inc
and
(bad)
mov
mov
rol
aas
add
mov
xchg
and
pop
addr16
or
jb
dec
cmps
neg
pop
mov
jmp
inc
mov
int
lock
lock
out
dec
pop
dec
xchg
mov
jle
add
aaa
inc
pop
(bad)
test
xchg
xchg
fwait
iret
jo
jmp
sar
pop
sub
xor
xor
sub
or
call
inc
add
lods
jbe
adc
das
pop
cmp
cmc
add
jno
cmps
fwait
push
push
mov
dec
cs
or
aaa
jne
lea
ret
shr
call
cli
inc
clc
push
jmp
dec
mov
push
clc
enter
or
adc
jmp
lods
test
stos
xchg
jl
test
les
pop
jbe
jmp
sti
jmp
imul
loop
aaa
jg
repz
adc
cmp
mov
into
ret
cmps
cld
push
add
mov
jno
inc
daa
rcr
adc
mov
inc
fs
pop
aaa
dec
dec
inc
jle
repnz
jle
fs
daa
(bad)
xchg
cmp
(bad)
lahf
xchg
jmp
sub
and
out
mov
mov
mov
or
jmp
imul
ins
std
push
std
mov
sub
push
mov
jb
fdivr
or
dec
sub
stc
test
inc
adc
aaa
movs
(bad)
outs
scas
xor
icebp
sub
cmp
loopne
(bad)
fbstp
lods
jnp
dec
jp
sbb
pop
ja
jl
jmp
scas
pushf
loope
or
sub
adc
(bad)
and
data16
lea
(bad)
loope
add
cmps
adc
add
(bad)
div
mov
add
dec
dec
mov
and
pop
pusha
mov
add
ror
fadd
xchg
mov
(bad)
push
xchg
dec
rol
cmp
jbe
mov
xchg
std
mov
xchg
inc
aad
ror
mov
(bad)
mov
or
sub
(bad)
dec
sub
xchg
jo
and
or
mov
and
adc
dec
aaa
push
sub
loopne
and
sahf
lahf
sti
sub
out
dec
lods
jp
or
mov
inc
sub
mov
(bad)
cld
mov
es
sbb
std
lock
jae
dec
jbe
ins
outs
fwait
dec
or
test
hlt
mov
test
add
mov
movs
inc
xor
sbb
adc
das
xchg
jno
int
rcr
inc
scas
in
sbb
sbb
ja
push
xchg
jmp
cmc
and
enter
xchg
pop
ret
ror
cdq
sub
cmps
add
mov
add
(bad)
sti
xchg
(bad)
pop
mov
pop
(bad)
sbb
outs
popf
shl
jmp
mov
push
sbb
jecxz
pop
xor
pop
inc
jmp
repnz
push
pop
in
inc
mov
outs
ds
xor
fs
xor
shr
xor
loope
sti
ds
sahf
push
div
cld
loop
rol
cwde
dec
(bad)
cmp
push
pop
mov
sbb
adc
pusha
ret
push
pop
adc
popf
jecxz
and
inc
fistp
adc
shl
int3
cmp
push
ins
xchg
push
xchg
dec
aaa
mov
mov
dec
mov
repz
inc
addr16
cmp
ret
cli
jo
ret
pop
and
int3
dec
inc
imul
sub
jmp
adc
or
mov
aaa
in
movs
lahf
pop
(bad)
mov
lock
push
es
dec
push
xlat
pop
and
cli
jp
pushf
fisubr
xchg
jge
repnz
fwait
xchg
(bad)
loopne
and
xchg
call
inc
dec
push
lahf
and
dec
lods
mov
or
cwde
and
sbb
pop
pop
xchg
push
std
repz
in
repnz
fimul
mov
call
mov
popa
xor
xlat
push
pop
mov
(bad)
cmps
cmp
mov
mov
and
pop
inc
cmp
dec
cmp
fcom
pop
fs
fwait
jge
stos
xchg
daa
test
push
nop
jns
or
out
cmp
mov
enter
in
or
dec
push
iret
xchg
mov
cmc
test
data16
call
(bad)
adc
call
loop
test
dec
popa
jecxz
inc
jae
xchg
mov
pop
sbb
(bad)
mov
inc
xchg
inc
int3
add
pop
bound
inc
aad
cld
or
fcom
fnstenv
inc
cwde
into
mov
or
cmp
or
je
push
dec
(bad)
mov
daa
stos
inc
ss
mov
cwde
mov
push
sbb
cld
dec
jbe
jle
push
aaa
sbb
popf
cdq
out
push
adc
outs
jge
xchg
xor
fchs
ja
mov
push
inc
xlat
bnd
pop
in
jecxz
mov
inc
out
inc
neg
and
cmp
and
jle
jp
mov
mov
out
jns
inc
xchg
bound
and
mov
test
std
ds
(bad)
lods
jle
or
fstp
xchg
test
add
jmp
out
or
or
js
in
sar
imul
leave
or
lahf
push
mov
pop
jge
or
inc
je
xchg
aam
cmp
fadd
in
cmc
adc
loop
mov
out
ret
jb
loopne
and
enter
rol
sub
jbe
cmc
mov
adc
sub
pusha
cmp
test
add
in
mov
inc
xchg
hlt
cmp
sbb
mov
cli
and
div
out
inc
inc
push
imul
dec
sub
sbb
test
iret
out
push
sbb
sbb
pop
lea
fs
lea
mov
out
imul
mov
add
shl
imul
inc
shl
ret
and
jbe
push
mov
shl
push
xor
mov
pop
ins
adc
dec
out
ins
inc
aas
sar
test
test
leave
xchg
xchg
push
inc
int3
into
push
aaa
sbb
loop
xchg
dec
xchg
aaa
pop
lds
mov
cmp
cmp
add
mov
(bad)
jle
jge
jbe
leave
cmp
icebp
repz
add
xchg
dec
pop
ja
out
mov
mov
out
popf
pop
pop
pop
mov
std
xor
arpl
(bad)
rol
push
pcmpgtd
movs
hlt
out
dec
add
sub
push
or
(bad)
xor
mov
(bad)
dec
mov
outs
repnz
ins
(bad)
sbb
outs
out
mov
test
inc
dec
mov
enter
sub
call
pop
data16
mov
sar
mov
jb
sbb
inc
cmp
hlt
inc
sub
xchg
adc
xchg
(bad)
fwait
imul
push
fimul
shl
sbb
sub
mov
mov
mov
fucom
jp
or
pop
test
imul
mov
cmc
jle
xchg
mov
popa
shl
mov
in
or
push
cmps
lock
mov
xor
not
int
pop
sub
lock
xrelease
pop
mov
cmp
add
xchg
mov
popa
and
cmp
retf
pop
outs
enter
mov
fld
ret
mov
cmp
call
and
jo
add
xor
push
shr
lock
and
pusha
aaa
sbb
in
push
pop
add
aam
jle
lock
sahf
jnp
cmp
xchg
fistp
icebp
sahf
cs
xchg
sub
fidivr
sbb
push
jg
scas
(bad)
je
into
jp
push
add
mov
mov
adc
jp
pop
inc
gs
sub
inc
jb
or
btr
xchg
sub
dec
daa
or
mov
cmp
jcxz
icebp
aaa
jg
adc
leave
in
or
in
sub
retf
add
test
in
mov
out
jns
dec
int
jae
xlat
and
(bad)
push
jmp
push
and
mov
test
mov
clc
pop
xchg
test
pop
out
pusha
(bad)
out
enter
dec
sbb
inc
adc
adc
jne
sar
std
retf
sahf
jbe
add
popa
or
mov
or
ins
dec
xchg
mov
out
imul
pop
pop
mov
xchg
xor
scas
add
push
(bad)
(bad)
loope
adc
pop
pushf
and
retf
fsubp
or
mov
imul
adc
xchg
sub
(bad)
jmp
retf
cmp
ds
mov
xchg
cld
xchg
retf
inc
xor
sbb
js
xchg
or
pop
push
pop
fwait
dec
xchg
xor
rcr
loop
shr
fidiv
movs
adc
push
outs
in
stc
and
push
pop
add
xor
loope
pop
aas
xor
fld
nop
ds
sub
pop
cdq
jno
in
add
adc
jge
pop
dec
push
nop
mov
jl
or
sbb
retf
stos
ja
mov
adc
mov
leave
mov
cli
or
or
int
icebp
js
stc
popa
or
sub
leave
dec
jmp
dec
data16
nop
adc
in
push
jne
or
add
shr
fsubr
xchg
scas
cmp
js
jb
pusha
cmps
mov
xor
xor
push
repz
dec
fidivr
(bad)
mov
inc
sub
aas
sbb
mov
cmc
mov
adc
lods
retf
fist
and
cmp
mov
inc
adc
fcomp
adc
or
pop
dec
add
mov
sub
inc
inc
addr16
xor
cwde
cmps
int
fcom
jb
into
inc
add
xor
adc
mov
add
das
sub
mov
cmp
push
test
ret
sub
ins
rcr
mov
pop
mov
and
mov
cmp
ret
bound
mov
call
bound
push
ror
int3
cmp
out
jle
ss
sbb
add
mov
sbb
div
xor
test
cmp
xchg
call
repnz
dec
call
(bad)
pop
neg
mov
xor
cld
movs
dec
sub
imul
xor
je
fwait
sbb
pusha
cmp
leave
add
xchg
lea
dec
lods
outs
cmps
or
outs
cdq
je
pop
pop
mov
fwait
nop/reserved
fisubr
sbb
dec
push
push
rol
jmp
adc
gs
dec
(bad)
pop
xchg
jge
test
mov
sbb
and
mov
mov
inc
xchg
cmps
and
sbb
fwait
pop
out
mov
push
sahf
ss
(bad)
aaa
mov
and
xchg
repnz
jle
jp
leave
data16
xor
xchg
out
ss
cs
mov
fdivr
dec
mov
and
repz
jnp
aam
jbe
hlt
icebp
loop
(bad)
lock
cmc
stos
jp
cmp
test
xor
fldenv
push
aas
sub
inc
mov
jno
xor
add
js
pushf
and
push
inc
gs
mov
sub
js
ret
rcr
mov
lods
int3
sbb
pop
xor
jb
fisub
mov
jg
cld
loopne
popa
xchg
mov
fsubr
popa
(bad)
ror
xor
mov
popf
push
xor
xor
call
movs
cmp
icebp
in
dec
mov
cmps
test
push
mov
(bad)
push
outs
mov
mov
and
cdq
test
stos
lea
and
cs
fnstsw
mov
fnstsw
loope
jl
adc
jecxz
inc
int3
mov
div
(bad)
cmp
adc
(bad)
cdq
retf
lahf
es
pop
mov
mov
mov
mov
aam
add
es
lds
jmp
test
sbb
mov
dec
fadd
lahf
int
inc
xchg
inc
jmp
jecxz
and
mov
std
arpl
jb
loope
movs
adc
jge
stc
cmp
xchg
adc
not
mov
scas
inc
pop
adc
xchg
jno
shr
xchg
sbb
in
xchg
outs
mov
shl
mov
je
adc
mov
out
cmp
pusha
push
nop
mov
in
push
movs
loop
ss
jl
sub
inc
xlat
cmp
xor
dec
mov
or
mov
popa
pop
sbb
ja
addr16
inc
inc
ins
pop
or
aad
dec
inc
fld
sbb
jns
ss
sub
pop
or
pusha
jbe
xchg
sar
daa
add
pop
sbb
cwde
mov
aad
jl
mov
mov
stos
sbb
retf
jecxz
fadd
or
scas
add
xor
es
in
jmp
(bad)
js
and
cld
iret
std
xchg
stos
sub
movs
jbe
fmul
xchg
(bad)
in
sub
out
stos
xchg
cmp
adc
jg
dec
dec
pop
sbb
or
sbb
outs
or
mov
push
and
mov
in
push
xchg
pop
adc
test
shl
push
out
cmp
out
js
jns
mov
outs
jle
xor
enter
dec
outs
mov
es
add
rol
out
xor
(bad)
or
sub
xor
xor
jo
xchg
icebp
xor
or
push
push
add
mov
cdq
out
and
mov
loop
jmp
or
push
dec
sub
xor
jne
stc
mov
scas
and
xlat
scas
out
push
mov
jo
mov
pushf
stc
xor
loop
dec
int3
push
repz
and
hlt
mov
and
cld
sub
jle
mov
ror
adc
pushf
dec
mov
or
sub
xchg
xor
loope
jmp
cmc
stc
xchg
gs
dec
sub
das
shl
mov
dec
adc
mov
imul
jmp
mov
xor
ror
cmps
adc
outs
adc
test
mov
sbb
stc
mov
(bad)
sbb
cmp
sbb
aas
hlt
(bad)
(bad)
jbe
add
fidiv
aad
pop
dec
xchg
inc
aas
and
sti
aaa
stos
iret
cs
aad
jbe
cmps
and
sahf
mov
nop
adc
and
mov
add
xchg
daa
or
xor
adc
or
test
and
mov
in
mov
mov
ret
inc
inc
ins
sub
sub
jmp
jbe
dec
int3
sub
out
(bad)
loop
lods
jmp
fs
scas
adc
mov
fstp
jecxz
cwde
pop
cdq
inc
xchg
jmp
sahf
jns
(bad)
jnp
adc
and
mov
add
mov
fwait
jle
fnstenv
imul
add
push
mov
push
push
jp
in
adc
in
mov
push
and
add
dec
ret
xlat
sbb
and
adc
adc
popa
scas
mov
push
outs
fucomp
jle
clc
fsubp
mov
(bad)
outs
inc
stos
repnz
push
and
jle
cmp
out
adc
ficomp
xor
int3
fistp
push
jne
(bad)
sub
inc
mov
and
test
inc
(bad)
pop
out
sub
sahf
imul
ret
inc
mov
xor
call
xchg
neg
add
enter
lahf
out
test
retf
add
cmp
push
push
lods
into
(bad)
pusha
daa
out
dec
xchg
mov
imul
push
inc
(bad)
sti
pop
mov
pusha
(bad)
in
das
daa
inc
mov
cmc
in
out
sbb
dec
or
or
jg
dec
xchg
(bad)
loop
xchg
ret
jg
push
jo
inc
scas
daa
push
sbb
xor
add
imul
dec
test
ror
test
sti
adc
mov
add
popa
push
bound
iret
xchg
les
sar
out
mov
int
sbb
pop
xor
pushf
mov
cmc
jb
pop
push
xchg
sbb
mov
sbb
push
add
mov
adc
inc
dec
and
sub
ds
xor
add
sbb
shl
add
std
dec
sbb
xchg
xchg
inc
fisttp
shl
jle
adc
rsqrtps
neg
int3
aaa
pop
jge
repz
mov
(bad)
cmp
daa
into
jae
hlt
xor
xor
scas
pop
push
stos
push
lods
jle
bound
jmp
or
ja
mov
or
lods
push
xor
push
sub
xchg
out
jo
inc
test
xchg
xchg
dec
and
cdq
add
mov
repz
dec
fisub
cld
xor
sub
push
jmp
and
cmp
ja
sbb
mov
cld
cdq
sub
stos
xchg
mov
sub
xchg
pusha
repz
(bad)
jmp
pop
jp
push
shr
mov
jns
aam
push
xor
jecxz
mov
ins
xchg
mov
push
cmp
dec
loope
mov
mov
(bad)
xor
ins
ret
cmp
adc
mov
psubb
cld
xor
cmp
jns
jne
fidivr
popa
mov
pop
out
add
xor
jmp
mov
sub
jl
mov
aam
add
inc
mov
xor
push
jg
es
movs
mov
sbb
ret
test
retf
in
addr16
sub
xchg
(bad)
in
pop
shl
jns
jae
leave
mov
je
je
mov
jecxz
in
jecxz
fadd
pop
fst
inc
xchg
push
leave
ret
xchg
jg
xor
imul
xchg
jecxz
enter
mov
add
pop
iret
in
out
ficomp
inc
push
mov
sub
(bad)
jg
cmp
adc
enter
mov
bound
push
retf
fimul
push
push
adc
aam
enter
xor
push
ds
into
sti
mov
mov
cmp
pop
cmp
fdivr
adc
cld
sbb
adc
in
xchg
push
iret
jmp
mov
adc
in
jne
cwde
sbb
arpl
es
pop
push
pop
inc
inc
in
xor
push
js
xor
or
mov
sbb
jne
icebp
cmp
int
in
ror
sub
mov
jle
or
mov
data16
fidivr
inc
pop
inc
mov
lahf
ret
enter
pop
es
lea
ror
lea
dec
aam
xchg
aam
repz
ins
icebp
mov
xchg
adc
mov
and
je
clc
sar
add
jo
scas
pop
and
jge
mov
xchg
mov
neg
ins
ss
push
loopne
aam
mov
shl
fisubr
iret
lods
adc
inc
or
sbb
pop
cmc
setne
jmp
or
sbb
faddp
idiv
or
xchg
test
jl
and
fsubr
xor
js
pushf
jecxz
dec
lods
push
ss
(bad)
sbb
xchg
dec
cmps
rol
lock
push
add
or
aam
dec
lods
mov
stc
cmp
push
and
mov
je
loope
mov
mov
je
pop
cmp
push
stc
leave
rcr
or
pop
add
xor
cmps
jp
std
bound
cmp
fs
or
fiadd
and
mov
add
cs
pop
inc
aam
retf
dec
mov
jp
sub
je
cmps
ret
inc
sbb
xchg
leave
dec
nop
fwait
ja
push
add
retf
push
pop
loopne
sub
inc
addr16
out
sub
and
pop
xchg
and
add
fsubr
dec
retf
xchg
data16
add
clc
lods
nop
push
xchg
cmp
(bad)
push
repz
jb
lods
out
mov
sub
outs
mov
les
fnsave
cs
mov
inc
leave
stos
(bad)
pushf
shl
adc
adc
cli
cmps
mul
out
dec
xchg
in
push
sub
repnz
push
mov
mov
mov
jnp
(bad)
add
out
(bad)
cmp
and
push
push
xor
push
retf
jmp
fcom
out
movzx
test
mov
clc
lock
shl
push
mov
pop
mov
out
mov
sub
cmp
inc
jae
add
sbb
adc
outs
cwde
inc
or
pushf
pop
sbb
xchg
sbb
jl
dec
dec
jmp
jmp
jb
jmp
fcmovbe
mov
dec
rcr
scas
mov
std
movs
mov
popa
and
call
jno
sbb
das
mov
cmp
and
dec
sbb
repnz
cmp
and
sbb
sbb
inc
shl
rol
(bad)
in
loope
pop
and
std
xor
adc
jecxz
dec
mov
fnsave
mov
mov
push
push
cmp
fs
jbe
cli
push
xchg
or
mov
in
jo
and
adc
jns
sub
sbb
pop
mov
adc
and
push
test
jle
sub
and
jnp
in
je
and
sbb
add
out
imul
push
push
adc
xlat
ds
sbb
mov
cld
loop
mov
out
pop
cdq
and
pop
pusha
push
test
(bad)
popa
xor
into
iret
scas
mul
add
pop
and
dec
sub
sar
push
mov
mov
hlt
pop
xchg
sbb
pop
jne
cmps
shr
xchg
cmps
jnp
cmp
aas
xchg
std
(bad)
hlt
add
mov
lods
nop
(bad)
sbb
in
jmp
mov
or
push
mov
push
mov
and
inc
ja
xchg
in
jle
fs
addr16
sub
jmp
out
lock
mov
mov
push
cwde
ror
dec
and
inc
rol
sub
(bad)
out
ret
aam
mov
call
push
inc
add
iret
div
xlat
enter
out
pusha
push
fs
icebp
xor
mov
mov
pop
hlt
lock
imul
loope
(bad)
jbe
pop
(bad)
and
mov
leave
(bad)
mov
sbb
(bad)
inc
sahf
xor
sbb
and
mov
dec
dec
xchg
mov
fstp
arpl
dec
jno
add
xor
cmp
sar
int
xchg
sub
cmp
sub
jnp
inc
mov
mov
cli
or
rcr
fdivr
les
push
ins
mov
or
stos
mov
enter
add
xlat
(bad)
pop
dec
outs
fbstp
sbb
adc
pop
jbe
sbb
(bad)
jmp
xchg
or
cs
shr
xchg
out
pop
sar
xchg
hlt
fdiv
add
pop
jnp
fwait
cmps
sbb
xor
repz
fmul
add
and
dec
xor
xor
cli
jns
retf
or
push
out
sbb
leave
aaa
dec
xor
pop
and
dec
jns
pop
pop
ins
or
scas
std
pshufw
ror
clc
push
mov
pop
sahf
out
mov
test
ror
cmp
xchg
xor
sbb
nop
inc
loope
(bad)
cmp
xchg
cmp
movs
pop
(bad)
or
pop
int
mov
sub
push
mov
adc
movs
inc
shl
test
mov
fs
sub
push
sub
push
mov
sub
jo
or
mov
shrd
adc
pop
pop
mov
cmp
fstp
jb
jb
inc
int
cmp
pop
xchg
jno
or
inc
es
repnz
cmp
inc
xor
leave
movs
bound
push
in
loope
pop
jle
jg
pusha
gs
pop
jmp
cld
cwde
outs
pop
sub
xchg
jmp
leave
jbe
(bad)
out
xlat
pushf
adc
test
adc
xchg
cdq
mov
fwait
jmp
or
(bad)
jmp
jmp
lods
sub
cmps
fldcw
ret
pop
xor
ret
call
out
shl
jbe
addr16
sbb
mov
jno
nop
xor
add
(bad)
mov
cmp
and
jmp
jle
sub
cmp
inc
ds
dec
mov
jne
and
mov
in
sub
fwait
jne
(bad)
fsubr
push
or
cmp
outs
inc
test
cmp
xor
cld
or
(bad)
cmps
int3
inc
push
std
pop
cmp
jo
sub
out
lahf
rol
jae
sub
dec
es
sar
aas
push
inc
mov
loopne
lods
popf
and
sub
mov
arpl
dec
pop
loope
mov
dec
and
xchg
es
iret
xlat
rol
leave
pop
sbb
(bad)
sbb
push
test
jl
mov
xor
test
fistp
lock
cmp
ror
inc
daa
add
jbe
scas
jns
jecxz
out
in
sub
xor
xchg
xchg
inc
scas
mov
cmc
iret
mov
cmc
arpl
jo
ret
xlat
out
xor
ins
and
jnp
lock
jno
or
or
popa
idiv
fild
jle
mov
xlat
rcr
sbb
or
dec
mov
add
or
je
aaa
sub
xchg
jae
outs
and
mov
retf
(bad)
cli
in
jle
inc
test
xchg
pop
mov
or
cdq
outs
xor
adc
popf
jecxz
lods
xor
sbb
push
sbb
scas
nop
sub
push
push
inc
ds
jge
ror
repnz
xchg
sbb
sub
push
frstor
scas
pop
pop
xor
and
jmp
mov
ret
and
pop
ret
dec
fsubp
leave
xor
jno
push
daa
int
bound
cld
xlat
push
mov
stc
imul
and
adc
adc
dec
and
stos
or
xor
dec
daa
cs
lods
xchg
push
or
mov
ret
mov
xlat
add
hlt
call
jae
arpl
pop
dec
mov
pop
fs
repz
mov
jl
xor
iret
adc
fwait
jl
or
test
mov
inc
inc
les
push
push
test
in
xchg
xor
dec
ror
or
test
jbe
rcl
shl
ins
call
nop
stos
mov
push
nop
sub
cmp
sub
enter
hlt
das
mov
mov
or
add
cdq
fsub
shr
movs
repz
cmp
push
add
loopne
dec
mov
pop
mov
(bad)
cld
jo
