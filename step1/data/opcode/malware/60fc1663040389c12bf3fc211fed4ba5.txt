out
pop
mov
leave
and
fisubr
(bad)
sbb
jp
cmp
adc
cmp
inc
sbb
sbb
cli
inc
jecxz
push
sbb
cdq
je
test
inc
push
cmps
in
jle
hlt
shl
mov
lods
sbb
leave
aad
jmp
or
and
lock
inc
(bad)
jb
add
and
pop
dec
mov
and
xchg
out
movs
out
inc
pshufw
dec
jo
imul
add
sahf
push
lea
or
dec
bound
cwde
mov
sbb
inc
sbb
xlat
mov
movs
into
pop
push
mov
mov
jnp
leave
cld
add
sbb
ror
push
ret
or
mov
leave
and
jp
adc
mov
add
enter
xor
loope
sbb
mov
fst
scas
mov
outs
fdivrp
fldenv
cmp
fdiv
push
pop
or
sahf
push
repnz
in
mov
lods
pop
(bad)
cmp
sub
sub
jae
pop
jge
inc
xchg
sub
push
pop
or
push
mov
popa
cmp
dec
mov
xor
call
sub
dec
fimul
sahf
daa
push
mov
out
cmp
call
(bad)
out
mov
pop
inc
ret
ret
inc
xor
mov
cmps
lahf
mov
cli
dec
xchg
bound
fild
dec
mov
jmp
jl
pop
or
jge
xor
push
push
enter
dec
cmp
inc
adc
add
xchg
(bad)
ficomp
jecxz
jns
cmps
ins
dec
popa
outs
int3
loop
inc
out
and
clc
sahf
or
dec
mov
sub
mov
jecxz
add
adc
mov
out
imul
adc
aam
pop
sbb
(bad)
add
sub
rcr
stc
mov
gs
shl
mov
xchg
xor
shr
dec
push
loop
mov
pop
sub
aas
loop
cdq
jno
mov
ficomp
pusha
test
hlt
ins
sub
retf
out
aad
fnstsw
out
jecxz
ins
je
in
and
sar
(bad)
cli
aas
jle
ret
ss
icebp
cs
sbb
aaa
xchg
int
jg
fwait
sbb
div
icebp
(bad)
or
add
das
rcr
in
test
mov
cli
psllq
lods
out
lods
and
in
jbe
jmp
rol
adc
or
in
and
and
inc
std
xchg
cs
repz
jb
cmp
bnd
push
test
sbb
sbb
fild
or
and
cmp
xor
movs
scas
pop
scas
mov
stos
es
sub
enter
mov
add
xchg
dec
mov
call
mov
ins
mov
(bad)
mov
das
jle
(bad)
pop
xlat
dec
ins
popa
fmul
jne
nop
lea
setae
add
inc
dec
mov
add
inc
fwait
mov
(bad)
out
clc
push
jl
fcom
sar
mov
jns
dec
pop
pop
push
(bad)
lods
js
inc
int3
scas
fmul
test
inc
gs
(bad)
cli
dec
mov
push
pop
cli
aad
icebp
in
push
jnp
cmp
mov
ja
ror
push
pop
ins
push
mov
outs
fisub
add
(bad)
fwait
xor
add
inc
or
xchg
je
sbb
xor
ja
xchg
and
cwde
xor
ss
lahf
data16
ins
js
fimul
ret
xor
jae
es
mov
lea
jp
call
pop
xor
ins
test
xchg
gs
and
dec
out
xchg
push
adc
mov
jne
pop
xor
call
(bad)
jl
mov
pmaddwd
gs
or
xlat
ror
pop
(bad)
mov
cmp
cld
mov
fld
leave
not
lods
ins
ss
lods
jmp
mov
scas
push
xor
ja
aaa
into
gs
sar
push
sbb
dec
add
xchg
lods
mov
mov
sbb
pop
pop
cmp
or
fs
adc
adc
xchg
mov
data16
sub
xchg
inc
dec
add
xchg
fwait
ret
aam
cli
jecxz
(bad)
js
sub
and
adc
out
pop
dec
div
push
cli
pop
pop
add
cmp
popf
into
lock
(bad)
mov
push
shr
adc
cmps
popa
mov
es
(bad)
push
or
(bad)
mov
jbe
jmpw
mov
or
popa
lods
lahf
jns
popa
shr
stos
pushf
jmp
fsub
adc
mov
inc
jnp
lds
pop
hlt
xor
sbb
arpl
or
mov
bound
hlt
ds
iret
cmp
dec
xlat
dec
icebp
xor
and
mov
mov
mov
mov
pusha
(bad)
gs
dec
and
or
xchg
inc
jnp
mov
jmp
mov
clc
xor
clc
leave
push
push
sti
scas
repz
jo
pusha
pushf
loop
arpl
dec
and
data16
test
(bad)
cmp
or
gs
cdq
mov
addr16
push
mov
fstp
div
cwde
fsub
cmp
clc
sti
fmul
imul
call
jl
inc
mov
fwait
movs
aad
push
pop
jae
mov
xor
stos
imul
test
cwde
xchg
int
mov
pushf
xor
fs
aaa
dec
mov
leave
cwde
test
cmps
cmps
ss
and
sbb
cld
loope
push
add
je
hlt
sti
lds
cmps
bound
add
dec
inc
lds
cli
xlat
jge
das
fbld
xchg
les
ror
idiv
inc
fldcw
nop
ja
mov
rcr
or
rol
add
icebp
sub
call
test
mov
push
loop
out
adc
movs
ja
js
sbb
mov
cmp
adc
fucom
xchg
jg
xchg
test
pop
jmp
idiv
test
pop
sbb
cwde
aad
adc
leave
xchg
iret
mov
xor
es
add
mov
jecxz
xor
cmp
add
es
pop
pushw
xchg
ret
icebp
push
(bad)
fimul
mov
sub
sbb
push
in
inc
dec
xor
mov
ins
xor
ret
or
stos
cmps
(bad)
or
inc
sbb
pop
add
mov
ds
inc
jb
fld
adc
push
in
and
cmp
add
pop
out
jle
cmp
sbb
inc
cwde
sub
add
mov
outs
ja
je
jmp
jnp
loopne
pop
xlat
fnstcw
imul
dec
inc
sub
xchg
test
js
jecxz
cmp
xchg
fist
shr
and
stos
aam
je
cdq
jmp
xor
add
dec
mov
(bad)
and
xor
or
(bad)
lea
pop
and
adc
shr
hlt
adc
inc
xchg
add
cdq
out
cli
int
arpl
stos
cmps
sar
mov
cmp
cwde
cli
pavgw
clc
jmp
sar
xor
out
mov
or
xchg
xchg
test
je
stc
add
ins
(bad)
cmp
or
jp
xchg
call
(bad)
ins
xlat
lahf
sub
jecxz
sar
repz
call
repnz
outs
xchg
les
jns
sbb
retf
lock
dec
xchg
add
aas
mov
lock
cld
add
popa
dec
push
xchg
and
dec
push
sbb
imul
cmps
sub
mov
outs
outs
xchg
fisttp
clc
sahf
out
es
fcomp
pop
push
pop
cmp
push
mov
mov
fcmove
jg
xchg
stc
sub
aas
add
add
test
jbe
xchg
xchg
ins
push
cmps
shl
pop
out
pop
jle
test
fld
in
xchg
ins
pop
in
lods
pushf
ins
cdq
ss
iret
pop
in
sub
add
stos
in
ret
inc
addr16
fdivr
jl
call
and
ds
test
add
icebp
or
imul
push
mov
adc
jmp
pushf
cli
bound
es
(bad)
fild
sbb
jb
cmp
int3
mov
cmp
adc
mov
xchg
call
stc
adc
aas
outs
daa
or
mov
retf
or
push
call
inc
pop
stc
xchg
aas
cmp
pop
adc
rcr
int
or
test
add
std
mov
xchg
push
cmp
dec
ret
aaa
rcl
adc
mov
es
call
call
pop
ficom
jg
sar
jl
loope
inc
rcr
loopne
je
inc
out
sbb
sahf
adc
test
icebp
pop
popf
test
push
retf
pushf
dec
call
enter
sub
bound
push
repz
cwde
push
xchg
hlt
mov
scas
ror
xor
push
cli
inc
out
pop
loopne
and
hlt
into
je
or
jecxz
jmp
dec
lods
gs
sub
es
call
adc
mov
cmps
jmp
mov
add
sti
dec
inc
and
xchg
ret
cmc
lods
mov
std
xor
nop
xchg
and
mov
xor
xchg
js
push
dec
cli
mov
mov
dec
or
inc
call
and
fiadd
fbstp
lds
pop
cmp
mov
jbe
xchg
sbb
call
shl
rcl
adc
add
daa
mov
mov
movs
cmp
or
fsub
inc
mov
sbb
movs
mov
loope
adc
jg
mov
mov
xor
push
je
out
dec
pop
cld
sbb
das
mov
popf
inc
stos
mov
repz
out
xchg
and
bound
in
sbb
imul
imul
pusha
mov
xchg
inc
cmp
mov
outs
cmps
std
jno
ds
mov
das
adc
or
inc
jbe
sbb
cwde
pusha
push
dec
icebp
fcmovnu
sub
or
pop
xor
rcl
std
dec
dec
mov
or
shl
push
mov
sbb
mov
arpl
xor
inc
ror
inc
iret
test
cmp
fbstp
cld
jbe
or
sub
aaa
add
jmp
mov
fcom
or
push
mov
mov
mov
shl
xor
sbb
cmp
movs
(bad)
sbb
int3
dec
sbb
int3
fwait
ror
js
pop
imul
fmul
bnd
fiadd
bound
ret
(bad)
iret
imul
dec
adc
(bad)
fisub
bnd
cmc
xchg
push
cmp
scas
mov
xchg
xchg
xor
cmp
popa
add
mov
pop
js
lahf
repz
arpl
nop
hlt
js
rcr
xchg
popa
das
pop
fadd
(bad)
sbb
sub
adc
lds
inc
mov
dec
push
xchg
xchg
xor
outs
mov
adc
push
(bad)
mov
mov
lea
lds
pop
inc
mov
mov
jb
inc
xchg
lods
xchg
add
pop
in
add
add
jb
fwait
es
in
(bad)
gs
xlat
or
sbb
cld
loop
cmps
push
push
dec
jmp
hlt
jl
pop
rep
fstp
(bad)
repz
add
mov
fs
add
std
jbe
pop
pop
lods
jg
push
push
and
add
or
shl
(bad)
sbb
cwde
repnz
push
cmp
sub
pop
loop
jo
(bad)
cmp
ss
mov
ficom
xchg
(bad)
adc
enter
mov
add
add
dec
cmp
retf
sub
cmc
mov
and
mov
imul
dec
in
jecxz
xchg
repz
cmp
jns
movs
pop
cmp
adc
outs
mov
mov
xchg
jg
mov
stos
cmp
cmp
mov
mov
add
retf
(bad)
loop
mov
jmp
(bad)
push
mov
iret
mov
je
mov
push
push
jg
inc
mov
adc
cmp
cdq
neg
and
lahf
pop
and
cs
inc
ins
and
repnz
xchg
movs
test
mov
push
shl
data16
in
cmps
bnd
jmp
mov
scas
into
aam
cwde
mov
sub
int3
iret
icebp
pushf
sbb
inc
or
or
mov
fadd
(bad)
gs
cmps
add
mov
inc
stc
mov
xor
retf
mov
pmulhw
hlt
sahf
shl
pop
dec
add
outs
fisub
xchg
mov
mov
jno
call
loop
mov
ret
sahf
xor
pusha
das
dec
xchg
pop
or
les
add
repz
aas
jnp
repnz
and
push
fidiv
inc
push
sbb
lock
ss
int3
add
push
(bad)
cwde
add
or
lahf
pop
gs
(bad)
out
pop
imul
outs
imul
gs
ret
mov
mul
mov
jmp
mov
fcmovnu
cmp
sahf
popa
cmp
movs
cmp
push
pop
cmp
aad
fldl2e
mov
popa
in
and
push
pop
outs
mov
adc
ss
in
popa
lahf
xor
jecxz
push
mov
shr
xchg
xchg
test
outs
add
cmp
add
dec
out
adc
jbe
test
xor
(bad)
stc
push
jbe
leave
je
ror
mov
outs
add
dec
cmp
or
cmps
mov
shr
xchg
lahf
pusha
push
or
dec
icebp
in
xor
aas
pop
sub
push
or
in
mov
ja
fimul
push
addr16
or
inc
es
sbb
adc
xchg
xchg
cmp
mov
icebp
mov
sti
ins
mov
inc
arpl
in
mov
and
dec
sar
cmps
sbb
(bad)
rcr
xor
xor
mov
lods
push
shrd
xchg
push
loop
jg
fwait
mov
sbb
push
shl
loop
jecxz
jae
push
dec
pop
push
mov
inc
push
popf
fninit
mov
mov
jno
out
dec
fmul
(bad)
cmp
into
lods
enter
jl
fbld
inc
sub
(bad)
pop
sbb
sbb
cld
movs
in
sbb
pop
pop
mov
xchg
push
pop
pop
jmp
fcomp
add
aaa
inc
adc
push
or
jns
or
lea
sbb
dec
es
(bad)
and
push
and
ret
push
mov
cs
jae
dec
inc
clc
(bad)
shl
in
sbb
adc
lds
pop
cmp
jge
sbb
imul
push
mov
mov
sub
pop
repnz
jae
test
out
or
mov
mov
cmc
cmp
loop
and
add
cmp
nop
out
xlat
repnz
jo
adc
jmp
nop
in
stos
dec
add
or
jo
and
neg
sbb
inc
mov
push
es
ja
jp
jae
neg
stc
push
test
adc
pop
dec
pop
jp
stos
fisub
(bad)
jbe
adc
mov
cmp
int
push
loopne
xchg
test
sub
add
ret
mov
aad
adc
les
inc
test
repnz
adc
pop
or
xchg
outs
jne
sub
cmp
test
ins
loope
mov
xor
and
(bad)
mov
mov
push
sub
ins
pop
cmps
xchg
or
(bad)
push
push
lock
rcl
push
sbb
loop
test
adc
outs
push
retf
xchg
fbstp
hlt
push
mov
dec
fistp
and
je
into
das
mov
jns
leave
leave
sti
dec
inc
(bad)
sti
add
xchg
in
iret
stos
adc
sbb
or
add
ja
pop
outs
fwait
pop
push
xor
and
add
pushf
bound
sub
or
sbb
fmul
pmaddwd
ja
jmp
and
test
ins
xchg
inc
jb
or
jns
jmp
daa
xlat
std
pop
mov
inc
test
inc
loop
adc
loop
addr16
aad
cmp
std
mov
in
ins
push
stc
cs
cmp
xlat
addr16
ret
ret
sub
pop
mov
das
in
mov
dec
mov
loope
aas
fdivr
iret
mov
cmp
bound
retf
mov
lock
pop
fmul
sub
leave
and
retf
jge
sbb
rcr
pop
xchg
adc
ins
bound
out
mov
sub
sbb
xchg
mov
mov
dec
cmp
push
and
repnz
out
sub
fsubr
outs
push
clc
arpl
jge
inc
sti
inc
into
inc
jmp
sub
shl
push
pop
xchg
cli
rol
push
sub
inc
int
push
les
jns
sbb
in
xchg
inc
je
jmp
dec
pop
pop
psrlq
dec
sub
add
ror
pusha
pop
scas
and
bound
jle
aas
retf
xor
aaa
int3
stc
aam
test
dec
movs
loop
adc
in
test
out
push
xchg
retf
aam
fst
mov
dec
dec
xor
mov
int3
mov
arpl
and
(bad)
dec
in
(bad)
cwde
or
push
or
inc
jl
movs
(bad)
jae
push
mov
push
popa
in
cmc
and
sbb
js
cmp
std
stos
into
lahf
pop
pop
push
fbstp
stos
push
jnp
rcr
out
mov
ret
push
jne
jb
dec
(bad)
inc
xchg
cmps
into
dec
maskmovq
xchg
xor
fiadd
ins
sub
dec
xchg
pop
out
movs
fmul
or
aaa
pop
rol
fisttp
sub
sub
shl
in
fdivp
push
cdq
push
inc
rcr
cmp
in
cmps
shl
imul
call
inc
fisttp
inc
mov
mov
jg
push
push
ret
pop
in
dec
stos
adc
jnp
dec
test
aaa
mov
xor
(bad)
push
or
js
cmps
jle
xchg
jae
mov
inc
pop
cmp
std
add
cmc
mov
cmc
fidiv
jmp
loope
cmps
jb
jno
mov
jno
inc
(bad)
cs
sbb
call
stc
pop
loopne
mov
fmul
cmp
and
and
jb
outs
add
or
(bad)
ins
ss
inc
cmovae
inc
fidiv
mov
lahf
mov
pop
add
loopne
cmp
push
sub
dec
inc
pushf
mov
ja
int
push
popf
imul
or
aas
scas
mov
shr
lods
imul
cli
fidiv
mov
mov
adc
xchg
jmp
push
dec
std
addr16
aaa
xor
sbb
xlat
ret
or
pushf
aaa
inc
xor
inc
lahf
sbb
mov
jo
mov
ss
xrelease
pop
imul
test
inc
out
dec
jge
mov
jg
enter
frstor
sub
xor
vmovd
push
dec
movs
pushf
arpl
xchg
aad
cld
adc
scas
icebp
popa
jmp
xlat
stc
cmp
retf
mov
and
test
mov
(bad)
mov
xchg
xchg
jns
lahf
repz
gs
and
ror
fnstcw
adc
fsubr
push
mov
scas
inc
out
mov
cs
push
pop
cmps
(bad)
jge
jg
outs
imul
push
inc
fistp
data16
xchg
and
pusha
sti
pop
jp
stc
aaa
adc
cmp
add
sub
mov
std
pop
push
jl
retf
fucomip
in
cmp
je
mov
icebp
(bad)
jl
iret
pop
push
call
push
fcomp
mov
mov
(bad)
mov
aad
leave
mov
xor
jge
shl
(bad)
test
mov
pop
fninit
psllq
push
add
push
je
adc
mov
(bad)
out
push
pop
rcr
outs
pop
popa
add
and
xchg
frstor
push
aas
xchg
mov
add
fwait
xor
and
test
(bad)
push
(bad)
rol
aaa
icebp
push
adc
pop
les
outs
pop
xor
and
jge
ret
aas
daa
inc
test
out
mov
aaa
fcomp
mov
aas
xchg
fild
xchg
test
pop
movs
xor
dec
outs
pop
ret
fidivr
fstp
ja
dec
call
imul
mov
out
popf
mov
push
xchg
out
out
push
pop
and
test
popf
int
clc
sub
or
aas
ret
inc
adc
ror
lahf
add
push
rol
rol
xchg
retf
cli
(bad)
fadd
push
dec
int
stc
mov
xor
std
cmps
mov
movs
scas
mov
or
mov
inc
jmp
push
cmc
lahf
jmp
into
adc
sub
xlat
sbb
jg
lds
dec
mov
add
mov
and
es
out
imul
in
mov
sub
fcom
sahf
les
dec
cmc
imul
xchg
cmc
loope
aaa
or
jns
and
pop
popf
jne
daa
and
out
push
aas
dec
imul
fcom
lock
fdivr
sub
push
clc
jnp
add
jle
pop
aas
int
clc
test
push
mov
in
imul
sub
mov
lea
leave
clc
inc
shl
test
pushf
stc
out
mov
sbb
lods
sub
ret
fdivr
ins
neg
aam
lahf
fs
and
jp
je
aas
dec
out
daa
repnz
pop
xor
stc
jl
pop
dec
sub
lods
es
scas
push
aad
out
mov
and
mov
adc
std
cmc
and
push
push
sub
test
sub
out
jle
lock
jp
xor
jo
retf
sbb
jne
and
sub
lods
push
es
mov
fidiv
ja
icebp
rol
icebp
push
xchg
fs
xchg
push
nop
pop
xchg
aam
out
aaa
fpatan
ret
mov
fwait
icebp
bsr
mov
and
xchg
mov
xchg
rcl
aaa
in
adc
out
or
jb
sbb
data16
inc
add
push
or
jbe
pop
icebp
jg
scas
mov
int3
fadd
fcmovnbe
inc
js
dec
sub
fdivr
fsub
inc
dec
cli
ins
ins
dec
xor
popa
cmps
push
inc
sbb
lock
fwait
push
repz
jbe
nop
jmp
add
inc
stos
dec
pop
fld
popa
dec
(bad)
loop
xor
rcr
mov
lds
cmps
xor
xorps
xchg
retf
test
sbb
push
jbe
xlat
or
loope
aam
mov
inc
sbb
or
stos
mov
int3
mov
pop
pop
and
dec
mov
push
outs
mov
leave
jbe
outs
xor
scas
add
fist
scas
int3
dec
sub
fdivr
jecxz
mov
cmc
(bad)
retf
or
cdq
lods
mov
jg
push
jb
add
mov
aam
jb
cmp
sub
mov
mov
sub
vmovlps
test
rol
(bad)
lods
pop
adc
lock
aas
xchg
xor
dec
mov
jle
xor
(bad)
cmp
sahf
sti
rcr
mov
cli
sbb
adc
inc
xlat
idiv
lahf
icebp
cmps
addr16
mov
push
or
add
ficom
ficomp
sbb
repz
jmp
sub
es
xor
dec
sbb
out
ja
sbb
bound
push
adc
xlat
mov
mov
pop
inc
test
fwait
and
add
aaa
sbb
add
in
mov
aam
inc
sbb
sub
xchg
add
xchg
lods
mov
imul
sbb
ret
fs
aad
or
dec
(bad)
aaa
and
test
jo
and
mov
lahf
loope
jp
push
add
jge
sti
jecxz
mov
add
gs
(bad)
xchg
mov
or
fs
aaa
test
or
cld
out
pop
shr
ss
jecxz
ss
shl
ret
inc
aas
add
push
aam
sub
fadd
inc
popf
adc
aas
mov
jge
stc
sub
cld
jns
pusha
popf
or
aad
fcom
cmp
fidiv
popf
int3
rcr
adc
call
mov
movs
in
into
inc
push
mov
xchg
jge
out
test
pop
pop
pop
ror
mov
std
xchg
xor
in
iret
cmp
sub
push
and
(bad)
outs
xlat
mov
push
fwait
cdq
sub
inc
pop
outs
mov
repnz
int
repnz
add
dec
fucomip
call
mov
movs
aam
ffreep
jns
mov
cmc
gs
xchg
cli
cdq
ds
idiv
ror
arpl
xchg
repnz
pop
push
push
add
es
sub
jg
push
mul
mov
stos
mov
jmp
sub
push
cmp
out
fs
sar
mov
cmp
xor
jl
cwde
test
xchg
or
in
push
jmp
ret
and
cmp
shl
leave
and
mov
push
jge
rcr
adc
push
jle
test
test
xor
loopne
or
call
or
(bad)
cmp
ins
div
jno
lods
adc
mov
mov
jo
inc
inc
xor
fwait
and
xchg
push
xor
mov
ror
enter
(bad)
xlat
fist
sub
jns
test
stos
sub
cmps
add
test
xchg
lods
pop
sub
cmps
mov
sub
cmp
out
in
imul
repz
test
add
adc
ret
pop
xchg
and
push
adc
pushf
fwait
add
std
icebp
sbb
mov
xchg
sahf
popa
in
push
jns
or
cli
mov
cmp
pop
inc
pop
gs
bound
mov
nop
out
ror
test
cmc
ficom
pop
hlt
mov
pop
sbb
jns
add
inc
xchg
stos
mov
iret
sub
pop
push
inc
or
fnstsw
sbb
jbe
jnp
mov
pushf
aam
add
push
push
pop
mov
pop
push
js
jbe
add
inc
pop
xchg
jbe
ja
movs
repnz
shr
add
ins
lahf
cli
jge
pop
ret
pop
adc
ja
inc
and
lock
lahf
shr
dec
sub
jmp
cli
sub
(bad)
shl
jbe
jb
xor
push
shl
cmp
or
(bad)
fld
ret
pop
pop
xor
aam
into
iret
cdq
(bad)
es
and
pop
pusha
pop
jne
adc
inc
add
xchg
and
scas
push
add
add
and
or
cmc
imul
and
cmp
xor
push
mov
call
fild
cs
mov
adc
cmps
cmp
sbb
fucomip
jmp
arpl
call
bound
std
mov
sbb
mov
adc
stos
je
fimul
mov
cmp
cmp
jecxz
xor
ins
mov
ror
xchg
mov
inc
pop
mov
xor
push
pop
out
dec
xchg
jmp
js
(bad)
(bad)
mov
add
mul
push
mov
in
mov
sbb
inc
adc
jmp
mov
pop
es
js
adc
cs
mul
and
or
shl
sub
(bad)
stos
pop
ds
push
ja
loope
jl
xchg
in
adc
cmp
jmp
pusha
popf
daa
ss
add
(bad)
cwde
cmp
add
sbb
or
aam
adc
pop
mov
sub
lods
imul
xchg
lahf
sub
cmc
shr
out
icebp
mov
int
pop
aam
(bad)
jbe
xchg
dec
ja
aas
mov
in
in
std
addr16
dec
push
dec
iret
cmp
mov
scas
in
pop
retf
push
and
adc
mov
mov
jne
push
sub
pushf
push
scas
shr
adc
xchg
cmps
jb
mov
(bad)
repz
popa
jne
inc
fiadd
bswap
jle
fwait
dec
outs
sub
jl
in
out
jmp
hlt
xchg
jl
mov
xor
pusha
lods
pop
adc
fwait
icebp
pop
sahf
pop
mov
aas
mov
addr16
push
and
xchg
cmc
push
outs
xchg
pop
ret
or
sbb
call
inc
ins
in
push
nop
(bad)
xlat
xor
ret
adc
or
adc
sar
movs
cdq
pop
push
mov
(bad)
call
clc
sbb
add
mov
inc
pop
ja
mov
ret
adc
gs
sub
xchg
xor
(bad)
(bad)
movs
jb
mov
pmaddwd
mov
dec
mov
sub
cld
ja
mov
shr
sbb
cli
cmp
outs
xor
xchg
jmp
xchg
mov
inc
xchg
xchg
mov
push
and
out
adc
mov
jns
cmp
out
rcr
xor
push
pmaxub
xchg
addr16
popa
sbb
cmp
jbe
add
xchg
das
clc
fistp
xchg
or
jge
fsubr
lock
push
jle
pop
int3
jge
das
mov
jg
jae
leave
push
rol
(bad)
mov
add
shl
retf
adc
sub
xor
arpl
add
fwait
pop
xor
dec
jb
out
sub
jns
fsub
stos
cmps
ficom
fld
lods
mov
push
sbb
or
(bad)
pop
out
xor
and
adc
lods
push
xor
pop
sbb
mov
sbb
pop
ins
test
outs
add
int3
pusha
pop
push
jecxz
test
or
fdiv
fcomp
bound
mov
mov
push
xchg
fild
dec
arpl
mov
ss
or
imul
pusha
lock
jl
cs
ds
test
imul
dec
cmp
inc
and
dec
in
jbe
mov
es
dec
jae
std
inc
inc
shl
(bad)
jno
std
lock
mov
bound
mov
mov
in
dec
mov
jae
xchg
mov
sub
or
clc
pusha
push
jnp
inc
stos
loope
cmp
nop
ds
jae
nop
(bad)
xor
mov
mov
jb
popf
cmp
stos
xor
or
sbb
xchg
cmp
or
dec
cdq
adc
add
and
out
lods
and
xor
mov
rcl
pop
pop
out
cmp
dec
jl
ss
jg
mov
mov
dec
cli
in
in
mov
cmp
int3
adc
mov
fs
(bad)
or
jmp
jg
push
mov
lds
pop
retf
outs
aam
xchg
or
push
add
nop
xchg
lahf
leave
xchg
adc
mov
push
arpl
xchg
movs
icebp
mul
mov
lock
xchg
xor
dec
add
sub
ins
repz
sub
sbb
scas
xchg
pop
cmp
and
mov
dec
mov
adc
jno
sub
imul
xchg
jg
jg
pop
mov
or
outs
test
jbe
popa
xchg
stos
shr
mov
or
or
(bad)
xchg
rcr
call
jo
sahf
dec
int
jecxz
pusha
adc
call
push
xchg
out
cld
lods
mov
test
dec
dec
clc
das
push
fidiv
pushf
call
sub
sub
mov
rcl
pop
mov
jle
retf
xchg
adc
scas
dec
pop
je
adc
dec
je
ins
in
inc
jl
aad
std
inc
out
push
(bad)
call
leave
inc
mov
and
cld
leave
mov
jg
not
cdq
mov
out
xor
pop
rol
hlt
in
push
push
xor
adc
fisub
jne
mov
xchg
mov
adc
sahf
call
retf
mov
xchg
aam
push
sti
(bad)
les
mov
rol
push
and
lock
loop
xchg
fs
out
in
push
aad
xor
jns
stos
scas
xchg
dec
push
mov
push
jle
(bad)
xor
mov
scas
cmp
push
jae
sbb
imul
push
adc
pop
cld
fdivr
lea
xor
dec
add
sbb
mov
adc
push
das
add
mov
cmps
out
push
adc
dec
xchg
mov
enter
cmps
fidivr
pushf
(bad)
or
test
add
jnp
daa
fisttp
aaa
inc
jne
xlat
out
loop
mov
test
fidivr
sbb
into
aas
(bad)
mov
inc
pushw
pop
add
test
idiv
push
test
repnz
in
mov
adc
mov
sbb
hlt
mov
scas
icebp
cmova
or
xchg
scas
and
jns
ds
jg
dec
in
inc
test
lea
add
mov
sub
aaa
int
(bad)
iret
ja
stos
sub
js
gs
sahf
dec
aaa
sub
inc
xlat
pop
jmp
enter
iret
push
cmp
hlt
(bad)
sub
sbb
sbb
or
adc
daa
je
and
arpl
out
(bad)
pop
call
int3
xchg
mov
sub
xor
clc
lds
arpl
add
js
imul
mov
add
mov
ret
pop
ret
sub
sub
mov
jne
js
sub
std
xor
leave
xor
cld
int
ins
in
call
mov
push
xchg
mov
xor
sbb
adc
sub
adc
jecxz
jecxz
sbb
dec
cmp
popa
push
mov
xor
mov
repz
cmps
adc
icebp
jecxz
sbb
les
es
pop
icebp
popf
leave
pushf
repz
(bad)
inc
and
ficomp
out
push
pusha
sbb
(bad)
mov
aam
xor
jge
je
cmp
dec
mov
adc
mov
adc
je
push
repz
ficomp
in
mov
push
test
sbb
mov
std
cmps
sbb
cli
and
cmp
popa
shr
popa
mov
int
dec
or
adc
push
imul
fwait
pop
iret
ins
leave
push
push
and
push
iret
push
inc
xlat
adc
push
xor
gs
pop
in
clc
mov
sub
or
mov
pop
dec
inc
lea
das
and
lock
sti
test
xchg
clc
cmps
xchg
sbb
add
sub
cmp
pop
inc
pushf
jae
mov
adc
inc
cmp
inc
into
sbb
mov
sti
(bad)
ins
cmps
je
retf
jle
mov
fidivr
mov
dec
push
repz
test
push
pusha
dec
mov
xor
arpl
inc
jae
xchg
mov
aad
and
enter
mov
push
pushf
pop
inc
aad
adc
fdivrp
(bad)
in
mov
pop
test
adc
ins
fadd
mov
mov
test
jo
add
nop
cmp
fldenv
mov
outs
jmp
xor
ffree
add
pop
sbb
mov
mov
enter
(bad)
repnz
and
or
in
das
mov
aas
loope
rcr
mov
cmp
add
lods
and
xor
mov
cld
cmp
scas
xor
xor
push
add
dec
mov
mov
lahf
mov
int
jnp
add
lea
dec
rcl
in
loope
jecxz
cmc
inc
pop
mov
add
sub
add
rcr
and
pop
test
add
xor
out
pop
mov
cmp
xchg
repnz
loopne
cmp
cmp
enter
mov
fcmovnu
lea
clc
pop
into
push
mov
aaa
jp
jmp
dec
push
mov
sbb
adc
adc
xor
and
fbld
dec
xchg
scas
jge
ins
scas
add
fsubr
mov
push
test
pop
das
or
pop
or
imul
mov
int3
mov
xor
pop
in
push
mov
jno
(bad)
fadd
pop
jmp
adc
push
push
mov
pusha
loopne
shl
addr16
leave
gs
cli
fcmovb
sahf
or
cli
mov
scas
ins
out
jmp
xor
arpl
test
mov
mov
(bad)
les
xor
fs
sar
add
lds
and
rol
cs
cmc
test
jnp
lahf
in
mov
js
loop
inc
mov
pop
and
inc
mov
dec
push
or
jae
call
xor
inc
sbb
fs
mov
call
mov
xor
mov
ja
mov
adc
mov
push
test
or
das
enter
jp
fsubr
adc
mov
xor
mov
outs
cmp
or
dec
(bad)
(bad)
out
cwde
push
inc
mov
out
ins
out
mov
inc
xor
out
fadd
(bad)
repz
dec
lds
push
push
mov
add
dec
and
or
(bad)
int3
push
in
bound
dec
jecxz
aam
ja
test
cmc
add
data16
inc
adc
dec
frstor
jge
dec
jbe
in
gs
fistp
xor
jl
shr
dec
shr
out
dec
inc
int
push
daa
sahf
jmp
inc
outs
sbb
add
icebp
add
fwait
mul
lahf
xor
sbb
sbb
fsubr
xor
push
and
es
ja
push
sti
nop
mov
push
rol
test
iret
stos
inc
xchg
std
cmp
mov
adc
xchg
jle
out
int
mov
out
xor
mov
add
jge
xor
out
cmp
or
stc
aad
aad
retf
push
push
xor
jns
lahf
clc
push
or
dec
mov
lods
push
push
xor
inc
push
hlt
mov
pop
jmp
push
imul
mov
mov
adc
stc
rol
gs
cli
mov
xchg
jecxz
mov
jmp
xor
lea
test
jno
lods
inc
jle
ret
(bad)
scas
mov
and
cmps
sahf
pop
das
push
and
imul
pop
pop
sub
mov
int
dec
gs
aam
(bad)
push
jp
test
mov
popa
and
jge
sbb
push
sub
ins
mov
loopne
pop
push
push
sbb
cmp
pop
pop
loopne
or
ficomp
loope
mov
sbb
adc
and
xchg
sbb
ja
xchg
push
jmp
xor
dec
mov
out
into
jae
frndint
jg
mov
xor
repz
outs
cmp
(bad)
and
retf
push
adc
mov
mov
ja
xlat
into
aas
outs
or
mov
adc
gs
fst
(bad)
sub
popf
lods
xlat
dec
aaa
push
std
retf
shr
daa
scas
sar
and
xor
and
sub
mov
out
inc
inc
aaa
ja
inc
cmps
pop
or
loop
xchg
aam
inc
movs
add
mov
dec
pop
lahf
sbb
sti
jnp
lods
sub
retf
shl
lods
add
fimul
retf
xchg
inc
rol
cmp
aam
in
pop
(bad)
cmp
nop
scas
in
cwde
cli
lea
mov
fisubr
cmp
cmc
sub
push
jl
ins
lods
sar
jae
sar
sbb
test
pushf
xor
cmps
adc
xchg
adc
call
inc
inc
dec
jl
jmp
push
xor
pop
xor
inc
inc
push
cmp
lahf
cld
push
pop
ds
mov
aas
xchg
stos
imul
xchg
sub
jmp
mov
adc
mov
ror
ins
sbb
ins
or
out
out
pop
push
xor
jl
(bad)
out
aaa
ins
pop
cmp
ffree
imul
add
jle
dec
jb
sar
jge
and
rcr
or
in
popa
sbb
and
rcl
pop
lods
push
push
add
mov
fsub
stc
shr
scas
repz
out
jg
pop
pushf
xchg
fcomp
sub
adc
xor
and
xor
cmp
sub
cmp
inc
mov
sbb
mov
jnp
xor
xchg
mov
push
push
lds
pop
inc
inc
mov
fsub
outs
and
add
ins
jmp
inc
cmps
mov
js
scas
aaa
cdq
pop
fisubr
pop
sub
adc
mov
pop
shr
aaa
add
(bad)
or
rol
mov
fdiv
or
nop
push
and
mov
test
push
mov
popf
rcpps
test
aas
jle
out
mov
fst
and
ret
cwde
ror
sub
push
sub
test
inc
or
inc
and
xchg
pop
loopne
jb
mov
xlat
in
or
pop
repnz
pop
jmp
push
aas
push
xor
mov
and
sbb
jae
sbb
cmps
lds
mov
dec
inc
jno
mov
mov
jge
test
data16
les
(bad)
jne
inc
inc
imul
cmp
jl
adc
iret
cmp
retf
movs
dec
jne
call
xor
popa
pop
cwde
and
mov
inc
add
js
lods
sub
nop
fistp
lock
mov
out
sub
test
push
retf
out
in
sbb
fisubr
pop
(bad)
xor
inc
loope
out
pop
or
xchg
xor
xor
inc
hlt
or
xchg
iret
aaa
sub
push
mov
mov
ret
sub
addr16
daa
pop
sub
adc
and
lods
outs
pop
or
icebp
jb
and
pop
loop
not
ins
jl
cdq
lods
jb
es
test
dec
jb
inc
aaa
mov
retf
push
add
out
stos
jle
inc
mov
adc
jae
fsubr
cmp
jmp
lea
ja
cwde
jae
in
push
cli
xor
loopne
xchg
mov
bound
push
inc
xor
and
add
(bad)
lea
pop
fisttp
cmc
rcr
cmp
lock
cwde
mov
jno
mov
ja
jno
mov
out
pop
push
push
lea
adc
inc
ret
jne
mov
nop
push
stos
je
inc
fcom
lock
aas
sub
mov
jp
sub
pop
mov
(bad)
fmulp
cwde
sbb
push
sbb
lock
and
mov
sbb
push
jno
in
pushf
cli
rol
in
pop
inc
sar
dec
dec
xchg
js
cmp
lahf
push
sbb
int
push
in
int3
loope
(bad)
and
test
push
xchg
bound
cdq
mov
mov
cmp
aad
adc
(bad)
pop
jmp
mov
mov
jnp
jge
and
xlat
ror
test
imul
mov
xchg
fwait
mov
jge
sbb
xchg
shr
std
sbb
push
das
call
jbe
jbe
inc
jnp
out
call
cmp
lock
js
mov
pop
xor
dec
inc
xor
clc
aad
pop
fcomp
leave
arpl
shr
xor
xor
pop
jg
ins
or
inc
pusha
lods
adc
xchg
outs
clc
inc
das
(bad)
repz
jb
aaa
xchg
mov
xor
sbb
mov
or
sub
mov
rcr
jne
scas
fild
aad
push
or
and
push
sub
gs
or
mov
push
mov
fcom
cmp
pop
dec
aas
pop
test
aam
mov
popa
ret
mov
xor
mov
pop
iret
jnp
sbb
repz
xchg
jns
xchg
or
mov
mov
fmul
sub
xchg
aam
xor
test
cmp
pop
xor
jns
fldcw
ins
mov
sbb
cmps
mov
pop
add
or
les
mov
xchg
stos
xor
lahf
out
push
mov
mov
ficomp
mov
mov
sbb
loope
add
pop
jmp
mov
add
test
sbb
mov
sub
mov
ficomp
sub
pop
mov
cmps
mov
(bad)
sahf
cmc
ins
addr16
sub
mov
mov
aaa
rcl
imul
lods
lods
movs
nop
push
pop
retf
cmp
pop
shl
mov
ss
xor
repnz
(bad)
push
fcomp
lock
and
scas
fild
adc
add
mov
cwde
lahf
inc
cmps
or
lock
ins
cs
push
xlat
dec
push
pop
mov
xor
adc
int3
pop
addr16
pusha
test
std
rcl
pop
push
int
cmp
and
push
stos
and
xor
ja
outs
xchg
(bad)
jb
sub
int3
sub
xor
call
outs
xor
fimul
ins
xchg
int3
imul
rcr
xor
pop
inc
sub
xor
ds
add
jmp
or
inc
(bad)
aad
stos
mov
clc
or
xlat
dec
fldenv
iret
dec
cmps
inc
cmps
adc
sbb
loop
mov
clc
ja
or
cdq
fs
adc
(bad)
mov
into
and
mov
add
int
std
adc
push
jbe
cmc
dec
clc
popa
mov
xchg
xor
jb
ds
imul
jo
sub
js
retf
mov
sub
icebp
and
int3
push
mov
je
std
(bad)
pop
lods
mov
les
(bad)
mov
sbb
xchg
loope
int3
pop
sbb
ins
int
inc
mov
pop
inc
hlt
sbb
mov
mov
push
jmp
fistp
pop
sbb
leave
dec
lock
cmp
aaa
int3
lds
(bad)
fmul
ins
jmp
jg
ins
and
lock
aam
jp
push
jg
push
into
jmp
or
nop
(bad)
sbb
mov
test
mov
outs
dec
add
lea
outs
inc
sbb
std
sub
outs
pop
sbb
pop
fsub
popa
cld
movs
cmp
sub
cmp
and
pop
push
inc
sub
inc
cmp
inc
jecxz
cld
add
leave
popa
rol
rcr
ins
mov
je
and
xlat
mov
(bad)
cwde
ret
inc
movs
push
sub
push
mov
mov
movs
mov
hlt
mov
test
shl
fdivr
int
mov
dec
or
adc
loopne
aaa
xchg
gs
arpl
sbb
mov
inc
es
stos
test
jmp
cmc
and
fsub
pop
push
das
or
std
inc
ins
stos
stc
fiadd
cmp
es
out
fwait
push
aam
daa
lods
jmp
nop
and
push
add
xor
arpl
mov
je
jnp
xor
push
jle
xor
xor
dec
cmp
sub
jg
lea
push
(bad)
xlat
push
mov
sub
and
mov
ret
movs
sbb
inc
cmp
pop
rcl
sbb
xlat
ret
mov
test
imul
stos
enter
lea
pop
cdq
not
inc
icebp
mov
xchg
js
mov
cmp
or
bound
xchg
scas
rcl
push
cmp
popf
popa
lock
das
cmps
add
nop
cld
ins
add
mov
xlat
adc
rcl
mov
mov
sub
jns
in
ficom
xor
adc
xchg
jno
and
mov
cmps
inc
push
add
mov
and
push
adc
cwde
mov
pop
pop
imul
ja
frstor
fwait
cmp
ss
jl
in
xchg
pop
fwait
idiv
cmp
in
push
pop
call
mov
add
(bad)
fwait
dec
mov
fs
and
xor
jg
and
cwde
icebp
mov
jl
xor
mov
sbb
leave
push
push
sub
stos
push
jae
push
scas
push
mov
inc
fbld
xor
and
xchg
pop
inc
repnz
iret
icebp
inc
push
and
xchg
sub
dec
sar
popf
xor
jno
stc
pause
mov
scas
jg
inc
(bad)
mov
leave
(bad)
cmp
loopne
fld
push
inc
arpl
in
push
xor
icebp
js
aaa
push
loop
sbb
es
clc
xchg
push
dec
je
mov
pop
scas
repnz
mov
lahf
out
sub
pop
push
daa
cs
cmp
ficom
mov
mov
fmul
mov
pop
adc
pop
mov
pusha
pop
mov
add
loope
sar
jge
dec
sbb
jl
push
nop
retf
jb
movs
adc
test
mov
fimul
jbe
inc
repnz
daa
sbb
daa
xor
cli
mov
or
cmps
stc
(bad)
add
inc
mul
jle
repz
test
cmp
fs
mov
xlat
cmp
(bad)
fdivr
and
leave
sbb
enter
mov
jmp
jae
cmps
sub
scas
cld
popa
xchg
pop
or
jo
xchg
mov
fdivr
mov
mov
cmp
jne
inc
and
add
lock
dec
adc
gs
pop
retf
push
fsub
nop
cmp
fldcw
popf
ds
xor
movs
pop
mov
dec
retf
cmp
retf
mov
stos
loop
fdivr
adc
pop
in
aaa
or
push
sbb
mov
jne
xlat
in
fs
mov
(bad)
test
loope
enter
out
cmc
xchg
or
out
mov
jnp
xor
sub
jecxz
or
xchg
sub
xchg
dec
pop
sar
mov
test
xor
movs
xchg
cs
jmp
dec
mov
aam
das
fisubr
sub
rol
xchg
pop
mov
jne
or
pop
fstp
adc
ja
push
sbb
push
stos
jae
stos
cmps
xchg
pop
add
hlt
loop
xchg
dec
sub
lock
pop
in
and
popf
hlt
js
dec
xchg
cmp
add
dec
pop
or
ja
f2xm1
aad
ret
cli
sbb
fsubrp
and
retf
mov
push
adc
add
ret
aam
out
xchg
cmc
mov
jbe
sar
mov
je
les
inc
cmc
loop
xor
pushf
sbb
popa
pop
pushf
cmc
cmp
imul
jo
xchg
ss
inc
jmp
pusha
jmp
and
jo
cwde
cmp
popf
dec
(bad)
test
pop
repz
inc
add
jg
test
mov
mov
sar
out
fstp
pop
mov
xlat
(bad)
xchg
js
in
lock
mov
retf
push
or
int
fs
std
adc
inc
scas
into
xchg
(bad)
xchg
cmp
fisttp
dec
fbstp
popa
data16
stos
pop
or
pushf
in
adc
mov
cmp
jecxz
int
xor
push
cmc
stc
leave
jne
mov
ss
push
cmp
jns
jns
sbb
sahf
(bad)
pop
lock
leave
jne
cli
loope
inc
dec
dec
adc
test
adc
sub
popa
dec
pop
xor
fidiv
(bad)
out
jge
iret
jge
cmp
add
iret
out
test
jo
mov
into
sub
loop
pop
loope
and
push
xor
xor
mov
adc
xor
clc
inc
les
retf
mov
popa
fdiv
fistp
xchg
sbb
mov
test
int3
hlt
adc
pop
mov
int
jae
adc
or
fisubr
jnp
inc
mov
lea
lods
dec
lahf
cmps
cmps
repz
ficom
push
outs
sbb
in
jge
aaa
fst
sub
lahf
loop
clc
retf
addr16
loopne
out
out
in
adc
push
in
mov
out
jae
mov
shr
lahf
xor
mov
data16
dec
jle
jl
xor
jmp
fsubr
out
cmps
sbb
std
jmp
xor
es
imul
call
adc
cmp
les
pop
das
mov
cmp
fwait
inc
out
inc
push
hlt
cmp
mov
in
test
jp
jns
cmps
movs
je
dec
repz
rol
xchg
mov
in
pop
cmps
pop
in
push
ror
inc
or
xlat
(bad)
cmp
pop
mov
pop
(bad)
sbb
daa
ja
loopne
ret
sti
mov
repz
jno
or
xchg
xchg
cdq
inc
rcl
and
cli
pusha
inc
xchg
daa
test
ins
xchg
mov
mov
aad
xor
jmp
ficom
stos
add
fcmovnb
dec
out
and
jo
jb
int3
(bad)
fdivr
shl
push
mov
jne
xor
pop
or
fisttp
scas
adc
push
mov
pop
test
fisub
in
push
call
out
imul
fisub
sbb
fdiv
push
les
into
push
imul
and
or
dec
sbb
rcl
lods
mov
xor
js
pop
(bad)
imul
xor
das
rcl
and
xchg
mov
ret
mov
nop
gs
pushf
mov
dec
or
cmc
cmp
mov
and
dec
aad
pop
sub
pop
or
daa
sub
sbb
ss
dec
div
addr16
sub
xlat
lods
in
leave
arpl
mov
in
fldenv
test
sbb
adc
push
leave
into
and
mov
lods
out
xor
loopne
repnz
mov
icebp
or
mov
sbb
cmp
ds
inc
jecxz
jnp
xadd
cmp
cmp
push
mov
inc
pop
mov
call
sbb
cwde
xor
in
xchg
cs
out
add
xchg
add
test
in
ins
mov
mov
je
jno
push
and
out
push
jbe
aam
(bad)
in
movs
xchg
sub
mov
or
loop
ins
mov
sbb
in
movs
sbb
sub
fbld
jle
xor
test
mov
cmps
xchg
adc
inc
lea
ins
sbb
push
ja
lods
int3
push
inc
sbb
push
(bad)
ins
lahf
xchg
xor
call
xor
pop
int3
js
movs
in
mov
add
or
lds
call
mov
bound
add
ficomp
jmp
ret
and
add
cmp
push
sub
imul
xor
pop
imul
sti
adc
jae
daa
push
sbb
sub
mov
sbb
cld
pop
add
es
arpl
jle
dec
mov
and
sub
mov
out
dec
jmp
mov
push
jmp
cld
adc
jge
arpl
jns
movs
and
cmps
mov
jg
(bad)
into
mov
sahf
leave
cmp
xor
jbe
nop
pop
fwait
mov
popf
mov
or
lds
pushf
ja
sar
icebp
aas
inc
je
push
iret
mov
xor
cmp
jge
mov
fist
fs
inc
sar
sub
call
in
ss
and
mov
mov
(bad)
xchg
retf
test
ja
mov
in
or
mov
mov
add
mov
adc
add
push
add
test
cli
aad
cwde
mov
je
cmp
into
movs
xor
xor
(bad)
jns
jge
pop
pop
dec
inc
nop
aaa
jp
xor
mov
ja
xor
lea
neg
shl
push
inc
or
repz
(bad)
and
(bad)
fwait
iret
mov
jmp
test
shl
fistp
je
push
jg
or
push
xchg
punpckldq
test
bound
pop
xlat
mov
aaa
dec
imul
mov
cmp
mov
cs
push
stos
pinsrw
mov
jmp
mov
(bad)
dec
push
fxch
inc
mov
cmp
push
int3
imul
retf
jb
ficomp
xor
mov
dec
imul
pop
inc
lea
push
test
sbb
jne
retf
cmp
fcomp
std
(bad)
cmp
xlat
lock
(bad)
out
xchg
inc
dec
jno
iret
pop
fstp
scas
or
push
sub
jne
mov
inc
scas
or
mov
dec
ja
push
(bad)
mov
inc
arpl
adc
or
push
fwait
fwait
jns
xchg
aas
sub
xchg
mov
loop
mov
push
push
pop
movs
cmps
xchg
pop
add
nop
outs
imul
jo
or
outs
pop
les
dec
retf
push
or
fdiv
sbb
imul
add
sbb
jle
loop
push
sbb
ffreep
add
push
jae
test
push
fstp
std
movs
pop
jg
in
lock
nop
aas
mov
pop
adc
push
cmc
psrld
pop
mov
fld
push
ss
pop
push
scas
or
fs
push
mov
pop
mov
enter
cmp
fdivr
xor
cwde
jmp
and
xor
pop
pop
inc
mov
shr
scas
xlat
call
push
xrelease
stos
retf
cmps
jbe
push
xchg
sub
jmp
jno
je
lods
fs
dec
cld
mov
mov
ins
stos
mov
out
mov
retf
jle
xchg
adc
sub
xchg
popa
add
mov
outs
mov
jmp
popf
outs
int3
sub
jae
in
and
xor
cmc
imul
nop
sbb
dec
bound
cdq
xor
stos
add
aad
push
aad
inc
and
js
out
mov
push
(bad)
mov
sub
outs
push
fst
xor
popa
sub
jno
(bad)
add
in
inc
xchg
cmps
xlat
pop
sbb
xchg
add
push
xchg
in
mov
mov
retf
jp
push
loop
inc
les
and
nop
jp
fbstp
out
mov
push
xor
pushf
mov
or
movs
mov
lods
stos
pop
rcl
not
retf
das
push
repnz
mov
adc
mov
adc
sbb
cmps
cmp
add
mov
and
cli
cmp
jmp
in
out
in
loope
push
pop
jb
das
jge
cwde
adc
icebp
mov
dec
pop
bound
cmp
in
and
pusha
jecxz
and
mov
push
dec
xor
inc
dec
cli
in
mov
enter
cmp
loop
aaa
(bad)
int
leave
xlat
out
shl
int
aad
and
adc
mov
push
das
out
sbb
jo
cmp
arpl
popf
mov
jecxz
rol
sbb
inc
push
aaa
push
inc
ret
dec
jnp
in
test
mov
mov
popa
xor
sbb
mov
mov
daa
imul
sti
(bad)
mov
ja
xchg
es
stc
inc
jb
int
sahf
jb
sbb
cmp
scas
iret
icebp
mov
fstp
pushf
jg
adc
std
fidivr
nop
stos
js
cmps
push
mov
jmp
fbstp
dec
or
es
movs
mov
mov
jmp
jp
pop
fiadd
ret
dec
add
pop
or
pop
cmp
fisub
sub
cmps
dec
out
daa
pop
aaa
lods
call
mov
adc
pushf
lea
retf
sub
mov
mov
sbb
int3
mov
mov
xor
cmp
icebp
ja
and
pop
adc
ins
and
mov
mov
mov
mov
sbb
shr
push
fxch
adc
fmul
ret
es
adc
mov
cli
imul
rol
fwait
lods
dec
stos
ja
repz
sub
or
and
les
jmp
imul
pusha
push
ret
fcomip
xor
adc
mov
ds
dec
leave
pop
mov
and
lea
imul
inc
sub
inc
retf
les
xchg
pop
int
fsub
and
xor
rcl
je
inc
xor
push
les
cs
mov
or
nop
rcr
jbe
dec
add
xor
pop
div
jno
jns
mov
mov
cmp
arpl
xchg
cmp
cmp
fwait
xor
aas
(bad)
ja
jmp
pop
cmps
mov
sbb
sbb
sub
scas
or
push
cli
xchg
xchg
mov
hlt
cmps
iret
adc
in
mov
add
fs
scas
cs
frstor
mov
loop
pop
ds
dec
call
cmc
pop
sub
fst
dec
loope
cmp
adc
or
push
pop
mov
mov
pop
repnz
cmps
and
mov
outs
push
fist
pop
add
loope
sub
cmp
out
mov
lods
mov
movs
pop
cmp
out
clc
adc
xchg
jmp
jmp
mov
adc
jbe
xor
pop
pop
fsub
scas
nop
mov
pop
mov
and
inc
nop
add
jmp
retf
xor
mov
in
xchg
jmp
dec
je
push
add
xor
sahf
cmp
xlat
jbe
rcr
repz
push
hlt
sub
movs
sub
fistp
out
adc
cmp
sub
or
push
cmp
mov
loope
push
scas
mov
aas
and
jo
(bad)
addr16
sub
add
not
(bad)
xor
in
(bad)
sbb
into
jmp
pop
or
mov
call
popa
mov
aas
in
test
sub
dec
stos
mov
cwde
(bad)
out
sub
push
and
pop
arpl
push
test
rcr
mov
lock
cli
dec
(bad)
jmp
add
not
jge
icebp
rcl
inc
leave
test
stos
mov
test
sub
mov
mov
jmp
loopne
mov
sub
mov
inc
test
pop
scas
repz
clc
inc
movs
or
loopne
push
jl
fld
fimul
ror
adc
clc
sub
push
les
inc
mov
ds
outs
pusha
cmp
shl
nop
repz
pop
jl
sti
dec
idiv
xor
sub
push
fwait
pop
pop
pop
pop
fstp
xor
push
repnz
lahf
adc
jg
mov
jne
cmp
sub
pushf
inc
ja
or
daa
dec
cmp
rcl
mov
aad
mov
icebp
ret
xchg
cmps
and
dec
rcl
and
sbb
mov
or
imul
cmp
cdq
push
mov
pop
adc
sub
sbb
clc
fild
jmp
fisttp
mov
ficomp
sti
test
fidiv
out
mov
popf
popa
addr16
cmps
mov
jmp
shl
es
mov
add
dec
xchg
xchg
rcl
and
pop
push
xchg
mov
lods
xor
(bad)
pop
fmul
xchg
(bad)
mov
pop
ja
mov
inc
pop
cmp
fstp
in
dec
jl
jecxz
add
and
sub
pop
jp
popa
sbb
aad
or
ins
loope
gs
push
add
add
jmp
imul
sbb
aad
xchg
pop
shr
in
aaa
xchg
test
push
sub
imul
fisttp
xchg
sub
xor
jbe
xor
(bad)
mov
movs
push
leave
repnz
xchg
nop
pop
fild
dec
aam
adc
mov
addr16
mov
ret
pcmpgtd
dec
inc
pop
test
stos
dec
mov
xchg
mov
cmp
retf
or
xor
jecxz
jle
and
jle
push
movs
clc
aaa
mov
fsub
add
sbb
push
push
pop
and
inc
jno
mov
add
fwait
mov
xor
ret
sbb
push
dec
mov
mov
mov
ja
pushf
sbb
push
xchg
cmp
jae
in
in
dec
pop
loopne
sub
mov
jmp
enter
push
xor
jae
and
scas
outs
aam
xchg
rcr
popf
push
inc
cmc
xor
js
cmps
or
jg
xchg
xchg
jne
imul
dec
sub
jbe
fsub
xchg
test
sub
dec
sub
lods
adc
or
dec
adc
mov
xchg
cmc
inc
pop
sub
push
push
jb
and
sahf
addr16
adc
in
or
xor
push
ins
ret
sub
or
dec
outs
nop
sysret
or
jp
xor
dec
shl
movs
out
cwde
femms
sbb
jno
aaa
sbb
fcmove
xor
std
cmp
pushf
jb
add
pop
aaa
and
cmp
mov
mov
and
jg
adc
pop
fs
xor
push
jb
mov
sub
push
es
scas
outs
cmps
out
arpl
ins
and
xor
iret
inc
div
(bad)
adc
fcmove
in
in
fs
xor
and
sub
imul
iret
jle
mov
ins
out
dec
imul
movs
shl
icebp
test
fs
ss
out
aam
ins
call
ins
out
xor
aas
popf
dec
loopne
nop
xor
fdiv
fdiv
adc
mov
inc
and
dec
(bad)
xchg
push
retf
stos
(bad)
in
les
out
jnp
in
mov
in
inc
pop
call
ja
cmps
hlt
loop
pop
das
stc
pop
not
pop
retf
inc
mov
mov
outs
xor
xor
aad
in
test
cmp
jmp
sub
sbb
cld
xchg
inc
cmp
jl
not
shl
sbb
jg
mov
loopne
lods
lahf
inc
in
xor
sub
outs
jb
loopne
cvtpi2ps
mov
push
neg
mov
dec
mov
dec
dec
lea
fcom
cwde
in
std
dec
clc
cmps
stc
ins
xor
sub
xor
mov
fidivr
add
mov
ret
dec
fmulp
mov
(bad)
outs
inc
or
mov
cmc
push
repz
fistp
out
fucomi
gs
icebp
popa
test
adc
arpl
repz
xchg
push
mov
daa
cwde
mov
jle
push
mov
in
(bad)
or
xor
ret
mov
lods
dec
add
adc
and
xor
adc
inc
push
fs
sbb
nop
mov
pop
xor
jge
push
mov
aas
mov
mov
fs
les
add
adc
push
dec
inc
enter
jo
or
or
and
add
in
pop
xor
and
add
add
movs
push
and
iret
and
mov
inc
(bad)
xor
xchg
pop
pop
pop
mov
mov
mov
xor
sbb
adc
inc
sbb
mov
sub
fiadd
adc
dec
in
xor
add
(bad)
push
cmp
ins
(bad)
pop
ins
cmp
push
(bad)
xor
mov
arpl
(bad)
ds
test
jp
xchg
or
push
mov
sahf
cmp
adc
add
jmp
sbb
sahf
dec
xchg
sar
mov
xchg
push
and
inc
clc
sbb
mov
sub
jne
sti
je
sub
addr16
cmp
adc
mov
jg
cmc
int3
push
push
sub
xchg
mul
inc
mov
adc
(bad)
(bad)
retf
pop
jns
std
cwde
in
out
sub
fistp
adc
xchg
add
ret
xchg
aas
int3
scas
pop
mov
pop
mov
mov
(bad)
outs
cmp
sbb
and
jmp
es
mov
jae
es
test
cld
movs
test
adc
std
sbb
pop
addr16
mov
test
ins
scas
fdivr
xchg
sahf
outs
outs
stos
mov
xchg
loop
call
rcl
fcomp
jns
fs
mov
sbb
xchg
jo
loope
loope
xchg
lds
movs
add
out
(bad)
std
xlat
loop
les
sahf
imul
ret
xor
mov
mov
aad
test
stc
xor
sub
mov
pop
or
dec
add
mov
xchg
mov
outs
shl
clc
das
out
mov
cmp
mov
sub
mov
in
mov
lods
push
pop
les
xor
and
ins
and
sub
scas
dec
out
mov
jae
mov
jmp
sbb
or
dec
pop
ins
arpl
xor
dec
sbb
js
in
pop
and
ror
(bad)
je
mov
inc
gs
or
jmp
adc
das
add
jno
inc
fisub
jl
pop
pop
xor
stos
mov
inc
push
sti
das
pop
inc
dec
popf
jmp
cs
loop
jno
xlat
rcl
fwait
rcr
sbb
out
or
jno
jmp
sbb
into
xor
arpl
sbb
jg
pop
out
mov
jecxz
sbb
or
fmul
shl
iret
jns
pop
fbld
mov
hlt
mov
sbb
jb
repnz
pop
leave
ds
mov
xor
loop
int
into
pop
fs
sbb
retf
xchg
arpl
enter
mov
add
(bad)
les
cld
fsub
xchg
cmp
aas
das
sub
rcl
stos
xchg
jecxz
xor
call
cs
popa
nop
(bad)
dec
lea
lock
mov
lock
adc
dec
ja
cmp
mov
add
std
stc
popa
sahf
cli
cmp
cmps
mov
add
add
arpl
inc
ror
mov
rol
xor
dec
push
add
shl
les
aaa
pop
jno
jno
mov
in
adc
int
in
add
imul
out
xor
xchg
mov
cmps
push
xchg
lds
pop
out
leave
ffree
and
add
cmps
stc
dec
das
fadd
mov
ss
add
xor
add
cmp
cmc
(bad)
cmc
jno
adc
das
mov
xchg
fnstsw
pop
ins
or
movs
(bad)
adc
lds
sub
xor
xor
mov
clc
lea
cwde
cmp
shl
push
sbb
cmp
rol
cmc
sahf
xor
mov
push
aaa
dec
inc
ss
retf
pusha
mov
stc
leave
adc
push
push
mov
ss
xchg
lds
fdiv
dec
jb
pop
pop
pop
sbb
lods
pop
jb
loopne
outs
cdq
outs
mov
add
sub
shl
(bad)
fstp
scas
je
mov
jo
or
xlat
xchg
aam
push
and
jno
sub
push
scas
(bad)
dec
je
cmp
sbb
adc
mov
mov
mov
rol
sub
lods
sbb
and
int
std
aad
outs
add
xchg
sub
ja
sub
sbb
ja
cs
inc
xchg
stos
jns
sar
or
sub
xchg
fld
data16
outs
jns
adc
daa
pop
ds
rcr
xchg
mov
int
pop
mov
mov
rcl
push
sti
dec
pop
mov
add
int3
shl
mov
cmps
sub
xor
fs
sbb
pop
rcr
mov
jnp
aaa
push
cmc
aaa
sbb
fidivr
add
mov
mov
int
ins
jo
inc
xor
or
push
xchg
stos
dec
mov
xor
mov
and
mov
pop
inc
inc
sbb
jae
(bad)
pop
push
inc
pusha
fidivr
nop
popf
loopne
out
mov
iret
adc
push
add
out
lahf
xchg
pop
jo
int3
loop
pop
mov
mov
mov
pop
fst
cmp
mul
add
push
mov
leave
cmp
inc
cmp
push
pop
cmps
push
inc
test
(bad)
das
cmp
pop
mov
mov
inc
leave
leave
pop
xchg
icebp
sub
pop
jp
xor
js
inc
mov
retf
out
repnz
push
and
outs
xor
add
jns
jo
inc
idiv
loop
pop
adc
and
sbb
das
dec
aas
lock
movs
push
adc
retf
cmps
ds
mov
out
add
fwait
outs
pop
xchg
pop
pop
scas
(bad)
push
ss
stos
stos
lea
test
jecxz
xchg
xchg
repnz
std
lods
fdiv
xchg
mov
iret
jl
outs
mov
pop
lea
xchg
jo
cli
sbb
xlat
clc
jl
shl
xchg
test
dec
sbb
hlt
and
xchg
adc
popf
push
jmp
ja
pusha
push
jg
xadd
sub
(bad)
sahf
cmp
push
fnsave
leave
push
mov
or
daa
add
mov
dec
mov
(bad)
hlt
test
dec
fmul
daa
cmps
fidivr
icebp
ja
rcl
push
jbe
(bad)
div
jmp
pop
jg
mov
inc
jb
jl
or
jle
gs
or
xchg
mov
inc
cmp
stc
or
fwait
xor
mov
in
push
out
stc
sbb
jne
xchg
jp
jnp
add
pop
cmp
jg
cmc
popa
xchg
fdiv
or
fisubr
ds
cs
pop
mov
into
nop
fwait
sub
dec
mov
ja
pop
mov
mov
dec
jecxz
mov
push
and
jp
push
jmp
xchg
shl
xchg
hlt
mov
mov
add
sbb
adc
or
mov
jp
in
jmp
add
mov
jle
mov
dec
(bad)
dec
icebp
jge
pop
mov
aam
clc
pusha
movs
imul
jecxz
aam
inc
sbb
or
jno
fadd
xlat
daa
fisttp
jl
out
jl
push
je
mov
sar
push
inc
scas
xor
retf
repnz
xchg
inc
mov
std
sbb
cli
inc
gs
jbe
push
adc
pop
jne
dec
mov
repnz
loop
fidiv
mov
call
enter
mov
or
pop
int3
sub
sbb
add
and
xchg
pop
mov
in
in
stc
mov
adc
xchg
repnz
mov
data16
jmp
in
into
aaa
clc
ror
stc
xchg
call
lock
les
push
arpl
test
sbb
mov
push
or
mov
cs
jae
adc
arpl
sbb
or
pop
mul
retf
(bad)
not
ret
sbb
cmps
retf
mov
pop
gs
js
sti
test
movs
das
ins
mov
enter
fsubr
int
fsub
add
test
cmps
test
add
inc
ret
and
sub
(bad)
jmp
cmp
dec
in
repnz
mov
xor
fadd
jp
adc
push
aas
mov
adc
ror
repnz
jmp
hlt
jmp
in
pop
fidiv
push
shl
and
(bad)
jno
adc
sbb
aam
sbb
std
pop
dec
scas
push
mov
stc
scas
or
dec
xchg
xor
adc
mov
cmc
mov
lods
call
icebp
mov
sbb
mov
in
lods
mov
sbb
jns
outs
sbb
xor
fld
mov
hlt
sbb
nop
inc
mov
lea
cld
mov
mov
xchg
sub
imul
mov
in
mov
jmp
xor
push
cld
jne
xor
jg
shl
lock
ficom
xchg
mov
and
and
push
mov
mov
fisttp
or
jecxz
jb
jo
xchg
ja
into
loope
aaa
test
pop
stos
stos
push
and
push
daa
scas
out
movs
dec
dec
and
inc
pop
add
push
in
imul
cmps
adc
arpl
sub
add
retf
(bad)
jmp
retf
icebp
les
out
dec
adc
jg
mov
cmp
repz
leave
js
inc
cmp
ret
ins
dec
adc
mov
in
mov
inc
outs
repnz
pop
sbb
or
push
fnstenv
sbb
jne
xchg
frstor
imul
add
cmp
test
not
mov
inc
sbb
dec
(bad)
js
push
adc
inc
mov
nop
mov
push
jne
outs
push
inc
loop
xor
push
inc
mov
pop
(bad)
mov
mov
mov
movs
push
jno
ds
das
ja
pop
cmp
retf
(bad)
rcr
stos
retf
or
cwde
outs
cwde
mov
adc
or
stc
push
add
mov
leave
xchg
mov
lock
xchg
cmp
aaa
mov
dec
mov
mov
push
add
sahf
push
repz
push
adc
or
in
call
loope
or
jl
push
mov
sar
dec
jmp
xchg
sub
in
jbe
push
(bad)
dec
movs
cmp
mov
jmp
push
mov
push
mov
sbb
into
sahf
je
cmps
rol
lahf
xlat
addr16
ret
xor
popa
mov
shl
dec
add
or
pop
call
daa
xchg
cwde
dec
(bad)
stc
test
cs
pop
in
fbld
xchg
mov
adc
jge
pop
mov
dec
jmp
cs
add
and
imul
test
dec
call
in
fnstsw
mov
jno
ja
retf
mov
mov
mov
sub
cmp
outs
clc
out
xor
add
dec
sbb
inc
jb
js
pop
ins
mov
lahf
movs
aas
aam
pop
add
add
jmp
and
fucomi
cdq
xor
add
cmp
jbe
pop
popf
mov
xlat
push
mov
test
mov
ins
inc
pop
and
mov
lahf
ret
cmc
add
jmp
addr16
fld
xchg
repnz
in
test
sub
mov
idiv
fsubr
out
test
mov
(bad)
(bad)
fadd
sub
test
aad
(bad)
pop
imul
cmc
push
cmp
mov
pop
aam
je
repz
push
or
lods
ins
mov
mov
rol
xchg
lahf
loop
retfw
addr16
mov
cmp
mov
mov
ss
(bad)
fild
shl
xchg
ds
xchg
div
fisubr
add
xor
sub
and
icebp
xor
call
mov
push
nop
mov
push
leave
into
ds
jle
jmp
data16
outs
add
mov
inc
jns
push
es
popa
pop
in
push
push
jmp
outs
pop
ror
imul
call
jg
inc
movs
sbb
(bad)
aad
adc
scas
jo
mov
mov
je
adc
adc
xchg
outs
sbb
or
jg
cmp
mov
jbe
shl
sar
out
inc
mov
mov
mov
push
rcl
mov
sbb
or
and
mov
std
push
mov
inc
dec
pop
sahf
mov
pop
sbb
xor
cmc
gs
push
jno
xor
add
jnp
sub
pushf
stc
mov
pop
stos
call
movs
repnz
sti
es
dec
pushf
rcr
shr
jg
mov
test
jp
(bad)
push
mov
fisttp
sub
js
es
lock
(bad)
and
cmps
sbb
std
inc
cli
ret
pop
push
or
xchg
movs
in
fld
inc
jp
ficom
and
aam
test
push
aad
(bad)
out
arpl
clc
sbb
and
cmp
sub
jp
pusha
(bad)
dec
push
cmp
pop
ins
or
es
dec
lahf
or
mov
mul
add
mov
inc
sbb
push
retf
or
add
inc
shl
sbb
loop
test
sub
loope
sti
or
retf
and
push
push
mov
(bad)
(bad)
mov
pop
dec
inc
cmp
xlat
jmp
inc
test
inc
pop
in
aad
add
enter
sub
xchg
test
out
sti
push
add
imul
aam
sbb
add
dec
shl
cwde
aas
pop
mov
aam
cmp
mov
pop
cmp
cmp
adc
adc
mov
jl
pop
pop
adc
push
not
rcr
repz
mov
popf
xor
retf
fcom
stos
fistp
mov
sbb
cmps
add
sbb
mov
mov
adc
push
stos
push
xor
xchg
sbb
ds
sub
or
in
xor
out
inc
sbb
add
and
daa
inc
ins
mov
aas
push
pop
fsubr
add
mov
repnz
ss
mov
push
cmp
mov
pop
add
pop
push
jl
mov
xchg
mov
mov
test
mov
jno
xor
inc
or
or
scas
test
jne
mov
inc
mov
mov
mov
push
xchg
mov
shl
arpl
sub
jmp
(bad)
lods
dec
shl
mov
jne
sahf
iret
pop
or
dec
fidiv
pop
jl
je
repz
sub
sahf
int
sbb
add
jbe
fs
xchg
dec
push
pop
stos
aam
lods
xor
fst
or
jae
and
ja
sub
test
or
xchg
fcmove
repz
pop
jnp
ja
xor
adc
and
inc
lea
mov
outs
into
jns
and
cmc
icebp
adc
in
es
cli
into
out
mov
lahf
fwait
and
xchg
call
lds
dec
jae
shr
mov
cmp
(bad)
cmp
aad
retf
movs
shl
adc
jl
out
aam
loop
mov
xlat
loopne
jb
pop
sub
push
inc
into
ins
adc
into
ins
or
pop
rcl
scas
push
in
pop
loopne
jne
mov
xchg
loopne
fwait
inc
jno
xchg
call
dec
outs
jns
js
dec
jmp
sub
mov
mov
lods
cmp
dec
adc
cld
dec
nop
in
pusha
fxam
sub
(bad)
jne
inc
mov
or
hlt
add
sub
push
and
stc
rcr
cmp
and
scas
mov
mov
sub
mov
fwait
(bad)
test
or
sub
pause
xchg
inc
mov
cli
fcomp
imul
add
in
pop
dec
clc
add
lahf
rcl
push
hlt
(bad)
jecxz
dec
leave
mov
lods
out
dec
or
je
and
and
push
add
data16
push
adc
mov
mov
out
mov
or
lods
call
pop
retf
dec
out
xlat
jl
mov
ss
add
sbb
div
lds
sbb
jae
ss
sub
(bad)
jmp
loopne
pop
ins
xor
loop
xchg
adc
xchg
rcl
pop
sar
and
loop
dec
pop
cdq
sub
inc
aam
movs
cmp
stos
and
shr
push
xchg
cmp
enter
sbb
jmp
xchg
mov
mov
dec
inc
lods
popa
jle
enter
pushf
pop
mov
sahf
lahf
push
mov
ret
pushf
or
jnp
test
js
pop
sub
fidiv
and
jno
adc
in
sbb
cmp
sub
nop
or
sar
mov
push
fld
pop
nop
jae
call
or
inc
clc
adc
pop
add
pop
loopne
sbb
jno
mov
loop
inc
push
pop
mov
imul
dec
push
call
fsub
clc
retf
ds
sub
add
add
or
sbb
mov
retf
aaa
cli
mov
add
and
lahf
popf
aaa
ret
movs
adc
push
(bad)
aam
je
push
push
push
add
ret
ins
mov
mov
adc
pop
ss
xor
push
adc
inc
rcl
jge
ss
jo
js
lods
cmp
test
mov
dec
movs
mov
in
ret
adc
add
mov
rcr
rol
in
ins
mov
cmps
xor
jae
ja
repz
xchg
es
and
mov
dec
inc
jns
arpl
and
adc
(bad)
or
cwde
push
mov
test
pop
jge
fst
and
add
jo
sbb
xor
dec
mov
sar
pop
add
push
test
mov
xchg
mov
movs
out
outs
or
lea
xchg
pop
mov
bound
fdiv
sahf
mov
sbb
inc
aad
ss
xor
into
xor
shl
pop
dec
cmp
jnp
jmp
fdivr
lock
add
xchg
sbb
sbb
xchg
inc
or
js
xlat
jmp
inc
in
pop
dec
pushf
test
pusha
leave
xor
das
or
sub
mov
cmp
push
mov
loop
mov
fstp
fcomp
jnp
and
sbb
xchg
inc
cld
push
mov
stc
pop
mov
pushf
test
jo
das
sub
scas
jnp
xchg
ret
dec
imul
push
stos
mov
adc
xchg
jbe
pusha
or
pop
jo
stos
sbb
jp
dec
mov
xchg
mov
xor
lock
cmps
inc
cmps
fnstenv
mov
add
mov
add
hlt
or
sbb
add
aad
dec
mov
sti
out
mov
(bad)
frstor
inc
inc
xor
xchg
pushf
jbe
dec
push
push
mov
imul
pop
inc
xor
scas
pop
gs
add
pop
or
sub
xor
ret
sbb
mov
pop
and
test
enter
sbb
in
add
cmp
adc
icebp
ins
sti
mov
mov
sub
in
sub
lods
mov
jmp
aas
and
movs
mov
nop
or
iret
cmps
push
pop
add
(bad)
push
in
sahf
loope
mov
pop
push
xor
(bad)
jne
ret
mov
repz
jmp
pushf
enter
mov
cmp
in
push
test
cmp
or
test
mov
fisttp
mov
xor
imul
mov
add
fisttp
shr
fwait
popa
aad
sbb
sub
jmp
cmp
into
jge
mov
dec
push
daa
mov
sub
dec
mov
xchg
(bad)
xchg
stos
sub
cdq
cmps
or
push
push
mov
and
and
frstor
enter
stc
pusha
lahf
icebp
jp
pop
adc
sbb
xlat
push
and
scas
cs
fld
ror
push
pop
fist
js
inc
test
sti
lea
push
jmp
mov
cmp
mov
or
push
sbb
mov
(bad)
sbb
(bad)
retf
test
mov
dec
movs
jecxz
hlt
sbb
pop
xchg
and
cmp
lahf
cmp
test
(bad)
xlat
lock
es
inc
push
mov
retf
rcr
inc
cmp
(bad)
dec
nop
lahf
and
sbb
pop
adc
push
dec
sahf
(bad)
out
sbb
push
cmp
repz
fld
mov
fwait
in
add
cmp
xlat
sub
xor
mov
ret
pop
ja
jmp
and
mov
sub
adc
fs
div
xchg
(bad)
inc
ficomp
xchg
mov
and
je
test
dec
call
sbb
jmp
mov
cs
mov
fcomp
cmps
imul
(bad)
push
movs
and
mov
mov
lahf
jbe
movs
jge
js
xor
add
lods
sar
pusha
sub
or
call
push
retf
lahf
lea
push
xchg
xlat
mov
dec
aaa
scas
push
jge
fild
(bad)
cmps
movs
push
test
xor
mov
cld
repnz
pop
add
push
adc
cmps
jp
jmp
mov
mov
repnz
mov
jmp
mov
in
jg
fstp
push
shl
call
fsubr
push
sbb
and
fnstsw
or
mov
ficomp
je
lea
jl
in
lea
ds
xchg
adc
sti
push
scas
dec
or
shl
fwait
clc
sub
adc
cmp
fstp
xchg
pushf
xchg
arpl
and
rcr
and
ror
sahf
movs
fsubp
xor
mov
adc
mov
jb
and
mov
lahf
lods
xor
div
popf
sub
repz
in
in
mov
or
or
jmp
mov
cmp
(bad)
aad
sahf
pop
add
ins
xlat
cmp
arpl
sub
lds
icebp
lods
and
dec
mov
das
mov
imul
jb
int3
or
mov
fstp
cmps
js
push
jge
jnp
add
sub
in
mov
jp
lds
cs
outs
or
xchg
jl
fsub
sar
xchg
lods
repz
add
loope
xor
pop
inc
xchg
cmp
lahf
ret
pop
out
retf
in
jb
retf
pop
(bad)
jecxz
fistp
pop
sub
lds
(bad)
mul
retf
icebp
stos
addr16
cmp
stos
push
add
fistp
pop
inc
pop
shl
jle
inc
stc
imul
push
xchg
add
shl
rol
adc
or
jg
xor
add
cmp
jecxz
dec
mov
out
enter
movs
mov
mul
xor
(bad)
xor
inc
stos
dec
inc
(bad)
dec
loop
(bad)
xor
jns
dec
push
dec
push
mov
xchg
(bad)
lock
in
mov
adc
mov
jne
cwde
cwde
jne
add
gs
mov
scas
or
jb
push
mov
xor
xchg
adc
rol
inc
fisubr
call
in
test
mov
rcl
dec
or
stc
mov
(bad)
int3
lds
mov
push
int
jne
dec
or
add
cwde
push
das
cdq
mov
push
xor
(bad)
dec
and
movs
in
pop
jae
sahf
sub
inc
gs
cli
rol
pop
lahf
mov
gs
hlt
nop
ror
ror
xchg
add
inc
jecxz
sub
dec
imul
mov
arpl
mov
popa
cmp
dec
iret
mov
sti
aaa
push
mov
mov
arpl
pop
mov
jne
je
(bad)
ins
mov
cdq
pop
jae
aam
dec
jmp
dec
dec
add
inc
ret
inc
and
fidiv
mov
or
inc
xchg
mov
xchg
jecxz
inc
clc
into
cmp
and
dec
retf
mov
jle
ds
dec
inc
test
clc
adc
cmp
inc
mov
inc
push
sbb
in
inc
in
test
jle
into
mov
inc
push
sti
and
popf
inc
jo
mov
fldcw
gs
and
scas
sbb
or
aaa
jp
mov
(bad)
jmp
push
dec
xchg
test
inc
dec
push
das
in
push
dec
test
and
lahf
and
sub
cmp
lahf
ja
jae
pop
aas
sub
mov
adc
icebp
mov
inc
aam
jno
push
jns
jae
sbb
push
jmp
jb
stos
jb
pusha
dec
inc
test
and
xchg
imul
cmp
into
enter
cmps
push
xchg
movs
sbb
outs
dec
sbb
pop
fwait
sub
or
imul
jmp
or
xor
fisubr
push
xor
or
lods
mov
shl
sti
sbb
mov
cmps
lea
jg
xor
or
mov
pop
pop
pop
add
ja
add
xchg
xchg
das
loop
test
daa
add
int
inc
or
into
or
xor
mov
stc
xchg
jmp
add
in
cld
add
loopne
outs
in
retf
mov
repz
adc
jg
jge
sbb
jle
dec
test
fsubr
ds
fnstenv
test
cs
sub
push
lods
sub
retf
int
jno
add
pop
pop
aam
call
stos
push
sub
std
aaa
jne
and
nop
dec
aam
mov
or
daa
sbb
bswap
or
je
in
jmp
mov
pop
mov
lds
mov
sbb
mov
out
nop
dec
cdq
mov
sbb
sbb
mov
push
mul
xor
or
mov
pop
jmp
add
(bad)
and
in
inc
adc
dec
sub
mov
in
push
lahf
ja
lock
mov
fisubr
sahf
xchg
xor
adc
unpcklps
xor
popa
pusha
jnp
pop
fwait
jle
add
iret
enter
add
movs
loop
sub
icebp
outs
shr
cmp
ja
add
sub
and
add
sub
xchg
sub
cmp
out
adc
push
movs
(bad)
xor
cli
jae
enter
out
add
cmp
pusha
lds
les
stos
sub
(bad)
jmp
push
lahf
shl
fs
jo
stos
and
(bad)
fidiv
cld
cmp
xchg
or
xor
sbb
aad
stos
inc
ins
sub
adc
fstp
addr16
call
out
lds
stc
fst
fstp
mov
pop
inc
adc
out
xlat
stc
rcr
aaa
ds
or
pusha
jg
lods
cli
adc
jge
sub
daa
ins
loop
out
stos
pop
cmp
xor
xor
dec
push
add
push
jmp
sbb
outs
ret
cmp
pop
stos
or
imul
cmps
aam
iret
mov
xor
lea
and
popa
mov
sub
int
jnp
and
repz
mov
lods
ret
imul
into
jo
inc
xchg
push
mov
(bad)
std
imul
pusha
fs
shl
adc
ret
out
(bad)
sahf
lods
mov
dec
jle
mov
div
or
cmp
push
pop
in
icebp
and
(bad)
xchg
rcr
pop
bound
cli
out
xchg
cmp
xor
fistp
sbb
dec
adc
mov
fidiv
mov
into
ret
xchg
mov
jne
cwde
cld
jns
mov
pop
jnp
sbb
(bad)
or
fwait
cmp
cld
and
add
or
xchg
mov
pushf
test
lds
mov
pop
add
popf
add
out
ins
ins
xchg
push
cwde
xchg
outs
or
mov
pop
js
movs
or
lock
in
dec
les
sbb
movs
dec
popf
enter
stos
or
push
xchg
pop
mov
mov
sti
xchg
out
or
call
mov
and
xor
push
js
imul
jg
add
cmp
lock
sub
and
add
nop
inc
ret
pop
ffree
jno
shl
sbb
popf
push
sbb
or
retf
sbb
ds
leave
mov
fwait
loop
inc
jg
movs
mov
pushf
idiv
iret
xchg
add
test
pop
xchg
imul
adc
pop
jmp
mov
mov
pop
xchg
call
data16
xor
cwde
js
xchg
test
jnp
fisub
sbb
sub
leave
sbb
or
pop
call
xor
ror
dec
push
loop
out
inc
add
enter
mov
push
lea
fcomp
hlt
pop
xor
test
out
out
or
sbb
cs
mov
inc
or
mov
lods
out
inc
cwde
inc
adc
mov
call
movs
jmp
inc
pop
pop
jl
ror
lods
and
adc
les
xchg
xchg
aaa
loop
test
ret
mov
nop
mov
inc
push
inc
xor
scas
push
add
cmp
mov
inc
or
ss
(bad)
pop
add
mov
stos
mov
ds
jbe
xchg
xor
or
gs
dec
das
popf
jo
loop
mov
mov
dec
fist
stos
pop
push
jae
or
push
mov
out
or
loopne
mov
add
sub
adc
mov
add
dec
xchg
sbb
or
dec
push
jp
xchg
mov
int
add
dec
dec
loop
shr
(bad)
int
inc
sbb
sub
cwde
repz
push
ror
and
jmp
sub
retf
int3
cmp
dec
jne
in
lds
int
icebp
ror
add
je
in
repnz
dec
call
cld
cld
int3
inc
push
shl
sbb
inc
add
repnz
aaa
ins
jnp
xchg
lea
xor
jmp
stos
jae
shr
adc
bound
xchg
or
add
out
in
mov
dec
mov
js
sbb
adc
push
or
out
imul
push
adc
push
xchg
sbb
clc
dec
(bad)
pop
rcl
push
je
icebp
pop
pop
sti
ja
xor
pop
sub
add
aam
popf
fs
jle
in
ret
rcr
mov
push
mov
cmp
jmp
xor
mov
mov
clc
repz
add
(bad)
push
dec
lods
ret
inc
popf
cmp
mov
loopne
or
stc
add
and
leave
pop
in
into
xchg
scas
popf
(bad)
rcl
xchg
in
cli
xor
and
xor
stos
aaa
loopne
dec
adc
(bad)
pop
je
pusha
retf
in
or
(bad)
stos
jle
mov
sub
popa
cdq
jg
xchg
retf
imul
out
push
xchg
neg
adc
js
(bad)
pop
addr16
mov
std
jge
outs
test
repnz
call
sahf
rol
fist
dec
aas
or
test
(bad)
ret
xlat
xchg
es
in
mov
std
cmp
dec
mov
scas
push
ret
jne
mov
jl
fstp
sub
push
adc
jae
pop
retf
add
jns
lea
xchg
xchg
ss
(bad)
aad
add
cmp
xor
pop
xchg
xchg
and
dec
xchg
sbb
mov
push
pop
add
scas
push
arpl
out
mov
dec
xor
adc
xchg
loope
daa
jmp
shr
sub
sub
push
notrack
rcl
jmp
pop
pop
je
call
(bad)
mov
jnp
and
inc
(bad)
ins
scas
push
movs
mov
sbb
mov
hlt
inc
jp
sub
push
push
call
push
xchg
inc
and
mov
shl
aad
mov
inc
imul
call
idiv
push
lock
inc
pusha
jns
aaa
adc
out
jmp
add
xchg
into
sbb
and
add
stos
pop
stc
and
fcomip
int3
and
sub
fs
btc
pusha
sbb
cmp
push
adc
test
mov
jne
jbe
dec
dec
cmp
and
pushf
and
xor
adc
fist
inc
in
xor
add
or
mov
out
mov
pop
inc
adc
push
mov
cmp
xor
or
aam
mov
push
inc
fisubr
jbe
jmp
xor
push
popf
mov
cwde
arpl
ror
adc
das
add
pop
outs
or
js
xchg
cwde
cmp
(bad)
or
ins
mov
retf
clc
fcomp
in
xchg
loop
int3
cmp
fcomp
mul
pop
inc
fcmovnbe
dec
pop
mov
bts
(bad)
ins
mov
scas
(bad)
push
push
push
neg
add
hlt
adc
retf
cdq
add
leavew
sub
lock
sti
pop
fstp
mul
fdivrp
out
ret
jae
mov
xor
or
adc
sub
sub
adc
pushf
rcl
scas
(bad)
xor
jns
bound
fwait
mov
cmp
jecxz
sbb
mov
sbb
inc
mov
dec
retf
dec
inc
xor
rcl
lahf
(bad)
jmp
aad
popa
fs
pcmpgtb
sub
dec
add
pushf
ror
in
out
push
lods
xor
mov
daa
pop
xor
mov
(bad)
or
adc
mov
dec
nop
aaa
adc
retf
pushf
mov
and
sbb
int
adc
jbe
push
xchg
in
imul
dec
inc
or
mov
inc
xor
enter
out
sbb
imul
or
xor
lods
cwde
dec
pop
rol
mov
or
mov
in
push
ror
cmp
cwde
push
scas
pushf
inc
icebp
and
in
shl
add
daa
stos
aad
sub
gs
in
data16
or
ret
jle
test
xchg
jbe
inc
repz
cmp
sub
lock
cwde
loope
(bad)
je
push
pop
push
cdq
(bad)
sbb
(bad)
loopne
aam
xchg
jp
ss
pop
retf
cmp
(bad)
push
(bad)
cli
push
mov
aaa
xchg
jl
jmp
(bad)
lea
mov
out
hlt
xor
mov
adc
cld
dec
or
fwait
out
and
imul
pusha
data16
xor
mov
sti
rep
push
rol
mov
mov
aas
xchg
iret
mov
dec
mov
in
mov
push
pusha
pop
sbb
mov
cmp
or
out
adc
inc
out
mov
dec
add
pop
pop
jmp
or
in
mov
pop
mov
fs
push
pop
xor
mov
push
fcmovnb
jmp
in
jg
sahf
sbb
aam
lods
adc
ret
mov
stos
fs
aad
movs
scas
xor
retf
fistp
out
and
and
movs
push
mov
nop
dec
add
scas
es
call
adc
mov
and
inc
add
mov
push
adc
shl
mov
(bad)
arpl
push
adc
jns
ja
aas
ins
leave
xchg
dec
sub
xor
sub
in
dec
scas
sbb
pop
sti
(bad)
out
inc
sub
or
push
rcr
test
lods
push
mov
shl
stc
pop
mov
inc
test
and
out
adc
inc
push
mov
int
pushf
scas
outs
jge
div
popa
sub
xchg
cmp
pop
or
or
xor
pusha
jbe
fwait
sub
gs
mov
and
mov
sbb
dec
mov
fwait
scas
rcl
mov
repz
cli
adc
inc
mov
xchg
popf
ret
stos
je
test
fwait
aad
pop
pop
jl
int
jg
mov
add
fcomp
mov
ins
pop
pop
sub
jle
add
cmp
inc
mov
imul
ret
and
nop
dec
scas
push
adc
jne
loopne
sub
pop
and
push
jbe
aaa
(bad)
aad
dec
push
push
movs
psrlw
shl
out
test
cmps
mov
sbb
in
cmp
adc
and
jae
adc
pop
in
inc
(bad)
pop
fdivr
cwde
shr
adc
movs
fucom
cs
jb
jnp
dec
popa
sub
push
dec
fisub
mov
add
vsqrtsd
xchg
cmp
fcom
push
pop
ins
push
cs
sub
loopne
mov
xchg
add
inc
sbb
ret
push
push
inc
nop
add
sbb
mov
aaa
jae
jo
adc
dec
nop
cmp
dec
out
push
sub
test
sbb
div
dec
or
jns
out
sub
aas
ja
push
mov
adc
or
push
popa
cli
pushf
loop
jnp
mov
(bad)
fs
popf
popa
mov
bound
adc
fdivr
push
and
into
xchg
jmp
call
xchg
sti
dec
xchg
scas
jb
loop
jmp
and
push
inc
jb
xchg
mov
sbb
ror
shl
and
inc
add
jno
call
fscale
fbstp
stc
call
aam
or
shr
mov
retf
push
and
mov
adc
xchg
mov
out
stc
sbb
push
and
fwait
sub
mov
scas
inc
or
pop
into
ret
or
jmp
enter
xor
jmp
mov
int
lods
push
push
and
cmc
arpl
mov
call
or
xchg
cli
mov
stos
push
mov
cdq
js
fbstp
jns
add
and
call
cmc
lds
sub
adc
mov
sti
imul
mov
out
add
cmps
pop
cs
es
sub
inc
sbb
add
lods
xchg
jle
or
xor
mov
jg
mov
fistp
imul
nop
xchg
mov
inc
(bad)
dec
adc
xchg
imul
cmp
pop
and
loop
fimul
(bad)
ja
sbb
daa
fsub
cmp
mov
jmp
bound
pop
jmp
jbe
sub
mov
ss
int3
rcl
arpl
out
(bad)
add
arpl
enter
sbb
nop
popf
xchg
xchg
popa
sti
sub
stos
mov
xor
sbb
pushf
pushf
jmp
cmps
adc
lds
and
xor
or
test
fnstenv
mov
icebp
imul
out
push
and
sbb
jo
shl
fisttp
ficom
push
fcmovnu
mov
adc
mov
cmp
adc
es
or
pop
xchg
push
scas
hlt
jle
sub
or
or
push
add
adc
ret
(bad)
dec
fisub
rcr
jp
adc
pop
aad
leave
cmps
sub
mov
pop
add
pop
inc
rol
imul
add
in
daa
lahf
mov
mov
push
pop
mov
and
mov
sub
and
pop
mov
mov
push
xor
cs
(bad)
out
(bad)
sbb
push
xchg
test
imul
out
test
ds
and
and
jmp
mov
xchg
push
xor
push
outs
jns
inc
arpl
push
xor
mov
ret
lods
gs
and
out
es
and
pop
mov
add
inc
mov
add
mov
push
je
call
retf
imul
jbe
dec
inc
loop
outs
sub
pop
fbstp
in
and
(bad)
std
cs
xlat
cwde
out
sbb
xor
mov
pop
xchg
pop
cmp
or
jle
mov
mov
add
mov
jno
sub
mov
push
rcl
xlat
cmc
outs
or
sub
cmp
xchg
mov
lods
dec
aaa
out
pusha
jbe
jle
ror
out
repnz
mov
(bad)
mov
and
cld
inc
in
pop
or
ror
rcl
enter
pop
push
pop
int3
ins
jmp
out
ins
xchg
out
and
call
push
or
sti
xor
pop
pop
shl
dec
cmp
jmp
dec
aas
inc
jle
daa
or
ins
xor
dec
mov
cli
int3
jmp
sbb
dec
sub
sbb
push
cmc
dec
push
ret
jno
mov
call
imul
pop
loope
clc
fs
push
jb
das
pop
jp
xor
cmp
and
in
call
add
sar
cs
stos
(bad)
cmp
rol
pop
mov
arpl
sub
sub
push
push
pop
ror
fcom
push
and
xor
inc
ss
iret
push
mov
in
sub
daa
mov
(bad)
sahf
inc
adc
mov
cli
push
mov
aad
in
sub
imul
out
jnp
xor
daa
xor
pop
rcl
cmp
daa
add
and
sbb
adc
dec
push
adc
shl
cmp
push
(bad)
jae
shl
les
dec
ss
das
xchg
push
pop
cmp
mov
push
inc
mov
add
xchg
icebp
das
cmps
aaa
cmp
xor
ret
mov
aaa
es
add
ja
es
fcomi
inc
rol
inc
and
(bad)
mov
add
ds
jbe
sub
mov
cld
xchg
inc
sbb
ins
neg
hlt
bound
mov
jp
sub
xchg
mov
push
shr
jmp
sub
jle
inc
pop
cs
mov
inc
aam
add
push
das
mov
es
and
sahf
mov
mov
jbe
fs
cwde
out
fdivr
mov
or
popa
and
mov
mov
add
ja
cmp
movs
iret
push
mov
(bad)
imul
call
xchg
and
jle
sti
xor
jnp
out
les
dec
js
loopne
and
leave
pop
xchg
cmps
inc
mov
std
lock
dec
add
xchg
push
ficom
clc
pop
sbb
sbb
cmp
movs
push
xchg
add
jbe
loop
push
mov
inc
ds
jne
or
cmp
ja
cmp
(bad)
(bad)
or
arpl
stos
xchg
xchg
cld
pushf
add
enter
fisttp
leave
add
pusha
push
and
and
mov
in
shl
in
inc
pop
shl
jbe
pop
(bad)
ror
mov
bound
mov
(bad)
push
icebp
in
jno
call
mov
mov
or
aam
cmp
sahf
jp
pop
fdiv
fnstcw
mov
lea
nop
dec
dec
adc
enter
in
pop
cwde
xchg
(bad)
lock
out
jge
repnz
pusha
repz
cmp
outs
stos
(bad)
jecxz
sti
sahf
mov
pop
sbb
(bad)
(bad)
movs
push
mov
fsub
push
cmp
jnp
daa
jnp
int
sub
adc
call
movs
mov
dec
leave
repnz
inc
mov
ins
sbb
sbb
nop
inc
mov
push
stc
push
cwde
pop
rcl
mov
outs
dec
(bad)
adc
inc
push
out
outs
gs
scas
mov
jge
retf
push
mov
jle
pop
inc
dec
fmulp
xchg
lahf
sub
cli
loope
imul
jae
mov
pop
pop
mov
xchg
jl
retf
arpl
addr16
pop
js
inc
in
inc
ins
test
(bad)
leave
int
xchg
adc
mov
scas
ret
(bad)
mov
int3
xlat
jmp
sbb
mov
daa
and
lods
mov
(bad)
jb
ds
push
(bad)
xor
or
out
adc
adc
loope
jns
js
push
jmp
jb
xchg
mov
in
inc
btc
xor
sub
(bad)
mov
mov
cmc
lods
pop
lock
les
xchg
pop
je
add
adc
mov
ins
mov
pusha
add
cmovne
nop
lahf
push
shl
jmp
(bad)
fist
cmp
mov
inc
xchg
sub
js
rcl
je
out
pop
mov
or
inc
xor
pop
pop
xchg
fmulp
pop
loope
mov
in
ins
call
cmps
jmp
jmp
(bad)
pop
push
cld
fdiv
cmc
mov
leave
inc
jnp
add
jmp
cdq
loope
outs
into
stos
cmp
out
add
aaa
iret
and
inc
adc
sbb
xor
push
and
loope
loope
hlt
pop
cmp
push
das
sahf
daa
mov
(bad)
xchg
sti
data16
adc
repnz
cmps
cld
mov
mov
mov
xchg
int
mov
xchg
xor
jb
enter
(bad)
cli
imul
and
in
fdiv
retf
push
jmp
jle
jg
pop
icebp
xchg
(bad)
(bad)
dec
std
cmps
in
enter
mov
or
popf
push
dec
(bad)
dec
pop
das
xchg
jmp
pop
xor
in
inc
xchg
mov
jnp
loope
push
lds
shl
xchg
icebp
push
test
jbe
jmp
inc
data16
test
retf
aas
push
mov
mov
and
data16
fwait
sub
add
xor
dec
mov
into
and
jo
push
cmp
dec
out
xchg
les
pop
mov
(bad)
mov
outs
xor
pop
adc
ins
push
push
push
mov
mov
outs
sbb
xchg
leave
cdq
int3
dec
test
loop
dec
jg
mov
xchg
add
call
mov
mov
cs
push
sub
aaa
mov
shl
jecxz
imul
retf
(bad)
jecxz
adc
mov
mov
adc
ins
test
mov
addr16
pop
push
pop
cmp
xchg
lods
xchg
es
and
sub
fidivr
int
popf
mov
xor
(bad)
jge
cwde
add
iret
idiv
mov
in
out
ss
(bad)
xlat
fcom
movs
mov
push
cmp
leave
cmp
jecxz
inc
or
mov
cmp
xchg
dec
jl
xor
loop
jo
xchg
inc
inc
xor
xlat
nop
test
out
mov
mov
pop
ins
cmp
jae
sub
arpl
outs
add
or
in
pop
enter
adc
inc
pop
xor
popf
xchg
hlt
jnp
outs
and
dec
test
ins
sub
out
inc
cmp
jne
js
sub
jae
movs
leave
xor
xchg
xchg
mov
xchg
pop
and
and
mov
ror
std
enter
add
hlt
jae
pop
scas
leave
popf
add
stos
gs
ds
pushf
cmps
pushf
call
jp
lods
xlat
or
(bad)
gs
add
sbb
shr
cs
xchg
icebp
push
int3
shrd
stc
push
jmp
mov
test
clc
jge
add
lods
dec
movs
outs
jg
aam
add
cli
xchg
cs
cmps
(bad)
push
int3
nop
mov
pop
jo
xor
dec
adc
out
fild
xchg
jle
pop
cwde
into
mov
cmc
pop
call
hlt
adc
pop
in
call
test
jbe
aaa
mov
(bad)
xchg
nop
mov
mov
push
cmp
push
adc
out
xchg
mov
dec
or
ins
xchg
mov
xchg
dec
push
sub
ret
inc
cmps
ds
pop
cmp
jge
sti
aaa
xchg
pop
or
jno
pushf
add
enter
out
(bad)
fmul
mov
xchg
fmul
sub
pushf
popf
xchg
mov
aas
(bad)
cmp
fsubr
and
stos
mov
adc
lahf
stos
cmc
lods
inc
retf
(bad)
jbe
aaa
cmp
mov
arpl
and
mov
shl
or
in
test
(bad)
sbb
shl
add
pop
push
sbb
cmp
dec
cmp
add
jp
scas
es
int
ss
sbb
pop
arpl
bound
adc
mov
into
call
pusha
dec
and
jmp
adc
jnp
inc
add
mov
cdq
fcom
jmp
cmp
adc
ss
loope
sub
push
aad
mov
xor
dec
hlt
adc
popf
mov
push
sbb
jle
les
retf
jecxz
sub
scas
dec
mov
rcr
stos
sbb
test
inc
(bad)
sbb
inc
cwde
inc
pop
leave
out
push
sub
call
outs
fadd
popf
repnz
adc
xchg
sbb
pop
mov
imul
adc
popf
sbb
cli
xor
pop
cwde
mov
or
lahf
test
add
loope
add
push
mov
mov
jmp
sbb
shl
mov
imul
dec
xlat
es
stos
xchg
stc
arpl
hlt
pop
jbe
inc
inc
mov
adc
aad
daa
xchg
dec
je
aam
repnz
jmp
addr16
pop
mov
inc
lock
sti
ins
jle
imul
div
jmp
pop
add
lds
jbe
pop
add
scas
repz
inc
push
mov
into
sbb
pop
mov
call
fxch
jg
xor
daa
xor
cmp
jo
pop
sub
das
shr
loop
xchg
push
pop
cmps
aam
cmp
xchg
jl
cmp
sbb
cmp
fs
fwait
adc
and
fcmove
xor
lea
int3
lock
inc
(bad)
cmp
fist
mov
jmp
scas
jle
(bad)
fmul
js
fldlg2
ss
pop
xchg
cmp
xor
jle
popf
(bad)
mov
lea
adc
jns
pop
dec
stc
sbb
mov
out
and
cli
push
push
stos
aam
ds
mov
imul
push
pop
shr
cld
aaa
test
add
icebp
or
xor
(bad)
jge
(bad)
icebp
mov
and
jmp
xor
cld
mov
cmp
mov
cli
imul
or
pop
jnp
mov
and
mov
jg
repz
inc
push
iret
in
lds
cmp
push
call
iret
sbb
mov
and
dec
and
cmp
in
icebp
mov
and
fmul
and
cmovs
ds
and
ficomp
call
xlat
or
ins
xchg
out
cmps
jb
call
or
push
ins
sbb
rcl
add
addr16
std
fcomp
out
pop
pushf
lds
aaa
jge
push
and
ret
xchg
mov
outs
call
dec
and
cmp
mov
mov
sub
or
pop
sbb
in
mov
sbb
iret
out
mov
jns
sti
mov
push
frstor
sar
mov
push
not
test
(bad)
add
sub
jge
xchg
push
loop
jge
js
std
push
xchg
arpl
cmp
jne
inc
push
in
xchg
sub
repz
cmp
and
pop
(bad)
dec
and
aas
js
dec
mov
pop
inc
jne
(bad)
cld
or
jae
jmp
fidiv
xor
fsubr
pop
clc
jle
addr16
xchg
daa
and
in
xchg
pop
aad
(bad)
ror
inc
jge
xor
sub
mov
pop
pop
frstor
pop
adc
int3
test
(bad)
jne
or
cmp
das
inc
test
mov
inc
mov
xchg
(bad)
mov
mov
cmp
stos
pop
in
mov
popa
push
cmp
test
scas
mov
pop
mov
dec
pop
and
shl
jle
jno
test
cmp
xor
ins
arpl
cmp
sub
cmp
or
mov
lea
fnstsw
retf
outs
mov
cmps
test
addr16
popa
fild
rol
adc
fs
xor
ja
xchg
je
out
cmp
xor
cmp
xchg
adc
shl
out
inc
fnstsw
mov
xor
jg
pop
inc
add
pop
adc
mov
mov
loop
inc
(bad)
movs
mov
mov
push
leave
jmp
push
in
xchg
mov
mov
jg
jns
js
mov
icebp
or
hlt
push
add
mov
mov
add
mov
scas
bound
jnp
add
xchg
dec
cmc
sahf
mov
or
stos
xchg
fld
pop
inc
push
popf
ror
cmps
xor
retf
aam
sub
data16
into
fnstenv
retf
aad
cmp
repnz
mov
sar
inc
outs
inc
jne
jo
adc
jnp
shr
iret
adc
mov
retf
dec
sbb
lahf
push
inc
mov
adc
fwait
or
mov
adc
pusha
stos
js
aas
jnp
xor
mov
push
cmp
cs
pop
gs
lahf
cmp
mov
stos
fwait
pushf
ret
dec
rol
sbb
pop
add
push
pop
clc
jp
shl
sub
retf
lahf
add
sub
sar
pop
mov
nop
mov
(bad)
out
int3
(bad)
xchg
arpl
push
hlt
cmps
pop
adc
lods
lds
sbb
test
lods
cld
dec
adc
or
repz
in
sub
addr16
ja
lods
rcr
imul
lds
repz
and
aaa
xchg
mov
pop
mov
mov
fwait
push
dec
ret
cwde
out
out
cli
imul
ficom
(bad)
mov
mov
sbb
sbb
jg
mov
xchg
loope
xchg
cmps
ret
cmps
or
test
pop
cmp
int3
cld
and
dec
mov
lock
int3
mov
je
(bad)
repnz
pop
ret
fild
cmp
lea
inc
(bad)
jo
fs
xor
dec
test
jecxz
mov
mov
sbb
adc
mov
sbb
scas
xor
adc
ret
dec
cs
pop
push
add
rcr
icebp
jo
pop
ror
jmp
adc
add
mov
enter
dec
mov
sub
popa
jae
mov
sbb
aam
sub
nop
jbe
(bad)
mov
iret
out
in
in
and
add
mov
or
sub
retf
iret
add
fidiv
sub
fwait
mov
xchg
push
xchg
xchg
xor
and
cli
xor
test
ds
imul
leave
push
jne
ffree
pop
shr
mov
jecxz
pop
repnz
js
mov
jmp
sbb
in
pop
les
inc
je
in
mov
mov
fild
test
imul
push
pop
cmp
push
ds
fwait
add
imul
or
(bad)
ss
fimul
js
mov
call
stc
scas
jmp
icebp
(bad)
cmp
add
leave
pushf
ds
mov
xchg
mov
scas
add
retf
retf
mov
add
(bad)
in
das
adc
and
test
xor
sar
mov
sbb
mov
(bad)
cmp
pop
test
pushf
jnp
and
jmp
add
shl
push
clc
sar
mov
and
in
dec
inc
xchg
add
stos
xchg
xor
loop
mov
sahf
xor
imul
gs
sbb
sbb
mov
sub
or
mov
sbb
aas
xchg
out
std
aam
mov
scas
or
les
(bad)
xchg
cmps
jbe
aam
mov
pusha
movs
call
cwde
sbb
sub
stc
gs
sbb
inc
jp
fimul
push
test
push
dec
mov
scas
jge
pop
mov
and
mov
cmp
jb
iret
sbb
stc
sbb
aaa
mov
sbb
out
cmp
gs
fst
and
aaa
inc
test
loopne
inc
neg
in
out
dec
jmp
imul
hlt
mov
ins
cmp
test
nop
push
adc
bound
lea
ds
test
lock
ja
xchg
les
xchg
icebp
pop
add
(bad)
and
sub
or
sub
arpl
sub
mov
mov
ret
add
mov
mov
push
gs
into
fld
pop
nop
pop
mov
nop
shl
sbb
sbb
outs
jmp
or
je
xchg
dec
mov
jle
shr
cmp
lahf
mov
cld
mov
sub
repnz
mov
cld
xchg
jmp
mov
inc
push
sbb
sbb
push
cmp
(bad)
(bad)
stc
jle
push
cli
outs
hlt
pop
aad
dec
mov
mov
mov
mov
sbb
dec
cmps
mov
cli
sahf
sub
mov
dec
imul
jp
jmp
pop
pop
adc
push
inc
es
sbb
sub
cdq
loop
pop
push
cmp
sub
(bad)
(bad)
pop
jnp
mov
adc
mov
and
adc
inc
mov
push
rcl
xlat
cmp
mov
mov
scas
mov
popa
test
stos
cmps
fwait
rcl
xchg
test
xchg
or
sbb
lahf
(bad)
cmc
jnp
dec
je
dec
in
in
inc
imul
push
shl
push
div
icebp
dec
inc
adc
stos
int3
or
push
lods
sub
sub
shl
retf
jae
jl
pop
pop
push
mov
inc
xor
pop
or
pop
inc
(bad)
sub
add
jmp
loopne
fwait
and
dec
jo
fadd
imul
jecxz
repz
sub
icebp
ins
cmp
push
xor
jnp
push
cli
pop
retf
test
and
sub
push
add
cmp
mov
pop
cmp
shl
mov
daa
arpl
cmp
icebp
dec
jnp
stos
mov
adc
movs
push
test
pop
xchg
push
xor
add
popf
push
sbb
out
lods
jo
xlat
dec
sbb
cmps
movs
outs
lahf
mov
js
hlt
jl
jge
inc
mov
mov
add
dec
fwait
mov
nop
inc
and
(bad)
xchg
rcl
frstor
jno
sub
cld
out
inc
mov
xor
or
(bad)
cli
sti
test
or
pusha
jmp
inc
popa
les
dec
mov
jb
aaa
xchg
push
jl
jae
mov
push
xor
xchg
jmp
cdq
jb
fistp
xchg
fidiv
sub
inc
mov
gs
pop
and
push
bound
push
jnp
dec
xor
stos
leave
pop
xor
adc
mov
in
adc
jns
test
push
cmp
lahf
and
(bad)
stos
jae
mov
scas
dec
dec
es
mov
mov
je
call
in
shl
fadd
sub
fisttp
xchg
xchg
out
push
adc
push
(bad)
call
lods
mov
pusha
jp
fldl2t
xor
mov
mov
add
adc
lahf
lock
pop
inc
jne
xor
into
xchg
inc
popa
mov
(bad)
push
(bad)
js
dec
pop
inc
test
dec
stos
out
cmps
(bad)
in
fst
int
(bad)
int
leave
repz
xchg
int
lods
or
add
inc
sahf
cmps
inc
jnp
fld
push
movs
jp
or
add
xor
add
test
adc
shl
sbb
daa
xchg
in
repnz
bound
popa
cmps
mov
cmp
dec
and
adc
dec
dec
ror
mov
repnz
popa
scas
test
dec
ins
mul
hlt
jp
or
cdq
xchg
jle
jae
inc
out
jno
cmps
mov
(bad)
test
xchg
xchg
cld
popf
and
lock
mov
out
push
shl
push
movs
jg
cld
adc
clc
loop
cli
mov
lods
das
cmp
or
loope
sti
mov
lds
push
mov
xor
adc
movs
sbb
jbe
in
iret
ret
gs
mov
push
retf
pop
test
sub
mov
movs
xor
test
out
pop
mov
loop
xor
hlt
adc
mov
cmp
mov
movs
cbw
push
xchg
inc
mov
call
mov
add
sub
cdq
ficom
mov
jns
dec
mov
fmul
add
aad
push
sar
adc
(bad)
ds
sbb
xlat
(bad)
scas
imul
movs
mov
xchg
push
jmp
pop
pop
div
mov
out
sub
retf
dec
add
dec
test
sub
aam
lds
or
fistp
or
dec
fwait
movs
mov
mov
mov
push
jmp
jbe
sub
mov
(bad)
call
or
sub
test
jae
sahf
push
fdivr
adc
(bad)
nop
adc
add
or
mov
mov
inc
call
int3
popa
add
dec
jg
dec
push
les
sbb
adc
lahf
clc
in
sbb
out
sub
sbb
icebp
outs
adc
cmps
xchg
dec
sbb
push
xchg
mov
cmp
cmp
shr
jo
push
and
adc
gs
loopne
retf
adc
(bad)
mov
jmp
fsub
dec
in
add
xor
push
iret
dec
stc
call
std
lods
shl
imul
mov
das
or
xor
enter
rol
leave
xchg
jmp
mov
jecxz
or
and
jo
adc
stos
sbb
popa
mov
or
xchg
pushf
mov
add
pop
mov
xchg
sbb
and
in
add
jmp
pusha
jg
push
xor
jne
pusha
movs
jle
setbe
push
inc
outs
mov
mov
not
xchg
push
lods
inc
push
call
in
mov
cmps
stos
test
lahf
or
push
mov
call
inc
ret
loope
xrelease
out
xor
jmp
out
mov
sub
jmp
push
cmc
mov
mov
int
mov
dec
mov
mov
or
cdq
into
in
les
fcomp
inc
fnstsw
inc
loopne
std
jp
sub
or
shl
div
outs
in
mov
xor
add
cwde
xor
fdiv
mov
push
xchg
and
fiadd
mov
(bad)
inc
loop
add
aas
sub
push
xchg
mul
stc
pop
outs
and
mov
stos
adc
lods
inc
xor
cdq
fdiv
shr
jle
add
mov
push
nop
out
mov
mov
out
(bad)
lods
xchg
mov
xchg
mov
aam
test
gs
adc
imul
adc
push
mov
inc
lock
jo
jb
cdq
rcl
inc
cmc
mov
jae
enter
inc
xchg
jnp
sub
lds
mov
sub
repnz
xchg
rcr
pusha
or
rcr
inc
(bad)
call
xchg
xchg
dec
dec
jmp
inc
jmp
mov
enter
jae
and
mov
test
pop
out
nop
pop
inc
and
imul
xchg
sub
jnp
sub
sbb
lock
gs
stc
push
jae
mov
call
xchg
fmul
ret
icebp
mov
bound
inc
stos
mov
push
sbb
pop
adc
or
xchg
mov
mov
push
stos
fwait
jle
stos
int
or
cmp
(bad)
icebp
push
push
pop
das
cmp
test
das
sbb
(bad)
jecxz
aas
push
fsubp
das
xchg
xor
inc
xor
cli
cmps
imul
and
add
rcr
mov
push
in
(bad)
xor
lahf
(bad)
int
popf
push
mov
pushf
push
ficom
pop
call
dec
push
push
sbb
ss
je
xchg
push
jne
or
mul
mov
je
sub
call
pop
pop
arpl
mov
loope
js
(bad)
(bad)
fadd
pop
mov
retf
dec
cmp
std
sbb
out
fst
cmp
pop
(bad)
mov
fnsave
mov
mov
mov
cmp
ret
mov
push
inc
inc
icebp
cmps
addr16
sti
sub
inc
jns
retf
ins
add
fwait
hlt
xchg
xor
adc
adc
cmp
push
dec
rol
sub
mov
(bad)
cs
ins
out
pusha
xor
mov
into
push
shr
mov
scas
jp
imul
cmp
rep
fnstenv
xor
inc
jno
retf
jg
loope
dec
jp
std
clc
jmp
mov
xor
(bad)
out
mov
hlt
aaa
enter
ins
xor
popa
add
lea
or
mov
(bad)
(bad)
jmp
push
shl
mov
scas
test
hlt
out
stos
movs
call
mov
and
or
inc
mov
mov
add
push
scas
inc
fdiv
stc
xchg
clc
pop
xor
jne
sub
int
mov
inc
in
jb
cld
and
jmp
(bad)
xor
push
movs
in
test
adc
jo
les
fnsave
pusha
rcl
pusha
leave
mov
out
adc
lea
cmp
sbb
idiv
sub
icebp
imul
icebp
mov
ret
jno
pusha
call
(bad)
push
movq
push
xor
push
popf
hlt
jge
loop
mov
dec
mov
adc
in
sub
icebp
(bad)
stc
pop
sbb
xchg
ss
mov
loopne
clc
movs
idiv
fist
leave
jl
pop
setbe
lds
or
mov
nop
gs
inc
or
retf
cli
call
push
dec
pusha
or
or
jmp
inc
arpl
mov
dec
mov
inc
test
xchg
mov
repnz
aaa
push
sub
fcom
test
stc
push
in
or
idiv
inc
or
cmp
mov
imul
adc
repnz
(bad)
outs
icebp
shl
je
add
mov
add
mov
dec
mov
adc
fcomp
mov
jg
cmp
das
cmp
je
cmps
retf
into
push
dec
aad
push
test
loope
inc
rol
(bad)
adc
stos
ror
(bad)
xor
mov
ror
mul
lods
lods
push
cdq
or
xor
jmp
sbb
leave
(bad)
mov
icebp
jno
adc
add
pop
jecxz
jle
mov
mov
adc
cdq
fbld
push
mov
push
pop
mov
int3
push
add
add
leave
test
and
dec
pop
dec
bound
push
sbb
stos
dec
(bad)
jbe
sub
jne
rcr
repnz
hlt
jns
lea
cld
fs
inc
jp
aaa
cdq
lds
movs
or
or
mov
aaa
adc
mov
daa
bound
jecxz
or
fst
shl
ficom
mov
aam
test
mov
iret
jg
sbb
add
adc
mov
rcl
test
adc
(bad)
imul
loope
sub
xlat
mov
mov
push
fnsave
sbb
fs
mov
loope
xchg
cmps
mov
sub
addr16
lds
pop
call
dec
mov
addr16
mov
pop
retf
jb
jae
retf
push
ret
in
mov
call
or
lods
movs
ds
dec
adc
(bad)
outs
add
jg
cwde
int
cmc
pop
je
jae
or
mov
mov
jb
jg
cdq
cmc
xchg
pop
sub
add
aas
std
jl
dec
adc
or
add
mov
je
inc
aad
aaa
add
and
xchg
repz
cli
fadd
mov
mov
cmps
outs
js
mov
rcl
push
jp
adc
inc
in
test
or
imul
add
or
xlat
add
out
into
add
loopne
push
popa
not
std
jmp
push
xchg
push
es
shr
cmps
inc
sub
push
xadd
aam
ins
(bad)
ss
int3
sbb
call
test
sbb
xor
or
pop
mov
push
enter
mul
jmp
stos
xor
out
xchg
or
lock
inc
cli
xchg
clc
test
xor
push
mov
add
test
sbb
pushf
add
cld
push
out
leave
pop
sub
gs
adc
add
lock
add
(bad)
mov
test
movs
mov
sub
cmp
add
(bad)
fs
pusha
lds
cmp
popa
loop
xchg
sti
jns
ficomp
xchg
or
loop
mov
pop
aas
push
cwd
ins
inc
imul
inc
clc
scas
pop
add
test
mov
icebp
scas
xchg
add
mov
das
jp
cmp
dec
mov
test
mov
ja
cmp
ja
(bad)
cmps
loopne
push
stc
loope
test
mov
pop
frstor
(bad)
sbb
enter
jge
add
(bad)
scas
xor
adc
sub
fistp
cmps
mov
push
call
sbb
jbe
lahf
xchg
imul
xor
xchg
loop
sbb
adc
stc
test
call
pop
fst
mov
cdq
inc
pusha
push
or
mov
mov
mov
or
test
sar
sbb
or
dec
or
fcmovu
or
pop
xchg
out
lods
add
jnp
call
pop
ins
lods
push
iret
clc
fidivr
mov
sbb
mov
xor
add
dec
jns
imul
sub
dec
lds
xchg
sub
push
es
cld
cmp
jns
addr16
arpl
call
inc
push
dec
or
pop
mov
push
xor
xor
lock
jl
mov
pop
daa
jne
add
pop
xlat
cmp
aaa
test
mov
rol
push
nop
nop
mov
jge
jg
out
mov
or
shr
imul
add
hlt
push
inc
mov
xchg
in
ret
xor
add
adc
sub
adc
(bad)
cmp
mov
push
fdivr
lods
inc
hlt
push
push
out
ins
mov
mov
sub
mov
(bad)
and
jnp
leave
nop
lods
inc
push
adc
stos
shl
in
pop
jge
xlat
dec
je
bound
pop
jl
push
mov
je
fs
stos
dec
jle
test
cld
pop
or
jo
stos
push
stc
jns
jge
dec
(bad)
pop
pusha
jne
sbb
mov
aam
cmp
xor
fisub
(bad)
popa
std
dec
out
test
(bad)
lock
add
xchg
inc
mov
stos
cmp
outs
sbb
idiv
dec
dec
cld
pop
les
movs
cmps
test
mov
ja
rcr
xchg
inc
push
fst
xchg
es
add
imul
and
loop
or
push
jg
push
stos
cmp
jbe
repnz
push
push
adc
mov
arpl
icebp
jl
jl
cmps
add
cmc
mov
fdiv
test
pop
fst
xor
sub
pop
xchg
sub
sbb
scas
jo
out
inc
pop
out
cwde
and
xchg
stc
sub
(bad)
hlt
mov
cmps
push
stc
aam
mov
repnz
push
neg
push
push
call
and
sub
sbb
stos
shr
les
sbb
pop
leave
mov
cmp
(bad)
lock
in
les
test
cmp
dec
cmp
dec
jo
jl
cmp
sub
pop
mov
int
sub
cwde
(bad)
cmp
mov
xchg
jecxz
and
fidiv
pop
xor
sbb
iret
dec
cwde
sub
imul
out
repz
in
mov
sbb
call
aas
sti
shl
test
les
retf
mov
cli
mov
mov
aaa
inc
push
mov
cmp
jmp
and
or
xor
or
movs
xchg
sub
out
mov
cld
mov
sub
icebp
sub
ja
add
mov
xor
push
jecxz
retf
pop
push
cmps
xor
xor
fdivrp
rcl
xor
sbb
xor
std
jmp
xor
and
out
daa
cmp
sti
mov
mov
paddw
adc
add
mov
leave
xor
imul
push
xor
xlat
inc
aam
pop
mov
imul
aaa
sar
xor
scas
loopne
lahf
sbb
mov
mov
add
sbb
sti
mov
xchg
nop
push
scas
nop
mov
in
test
out
aaa
hlt
sub
jno
icebp
bound
sbb
or
add
imul
mov
pop
pop
lahf
les
fs
push
jo
fwait
xchg
adc
jecxz
pop
repnz
ror
inc
daa
pop
mov
inc
push
mov
and
(bad)
pop
stos
xor
jmp
dec
iret
cmp
sbb
int
mov
mov
or
(bad)
in
outs
push
jb
cld
retw
mov
sbb
inc
add
lods
out
xor
xor
std
push
cmp
fsubr
rcl
aad
mov
jb
ret
std
push
sub
mov
aam
gs
and
mov
pop
pop
sahf
aam
push
mov
lea
fmul
cmps
lods
jg
jmp
add
icebp
and
scas
pcmpgtw
and
dec
mov
lahf
pop
inc
mov
xchg
aas
fs
aaa
mov
cmps
je
ins
cmp
mov
mov
or
push
dec
iret
push
pop
popa
test
mov
in
xchg
test
cdq
movs
lea
fs
sub
data16
and
mov
pop
pop
or
shr
mov
fnstsw
fwait
das
enter
nop
test
adc
scas
sub
and
push
mov
dec
fisttp
cmc
test
pusha
mov
test
jle
shld
lods
or
leave
jp
xlat
(bad)
sub
mov
sbb
mov
dec
jne
cwde
imul
imul
mov
or
loopne
mov
pop
lds
stos
movs
jnp
jne
jmp
sub
addr16
inc
sbb
shl
shld
test
call
dec
(bad)
adc
xchg
push
std
test
das
adc
fsub
sbb
stos
push
or
add
adc
(bad)
rcl
sar
ins
ror
mov
in
cmp
jp
lock
mov
loopne
mov
mov
xchg
mov
or
push
dec
xchg
jbe
xchg
test
push
push
mov
pop
loop
nop
mov
call
daa
in
das
push
(bad)
sbb
bound
jbe
lods
js
push
mov
mov
pop
xor
loope
in
fidiv
sti
add
xor
mov
push
jb
aam
inc
adc
sub
push
jns
jnp
mov
fisubr
ds
fist
in
pop
rcr
or
das
icebp
rcl
xor
add
ins
push
mov
push
jecxz
adc
cmps
icebp
sbb
pop
dec
sbb
frstor
not
inc
dec
xor
fild
test
xchg
into
fidivr
or
lods
jmp
call
push
jle
sub
pop
or
xlat
fidiv
popf
aas
fild
mov
fistp
cs
jno
pop
adc
aaa
add
outs
adc
inc
repz
xchg
test
xor
int
dec
(bad)
lahf
enter
cmp
es
(bad)
xlat
neg
fsub
or
push
or
lods
mov
push
xchg
inc
int
push
mov
pop
bound
jecxz
arpl
leave
pop
popf
pop
call
mov
mov
xchg
or
sbb
mov
ds
imul
aad
xor
enter
out
add
sub
push
idiv
shl
push
adc
mov
push
lods
push
ror
arpl
xor
inc
setle
adc
mov
push
xchg
cdq
daa
xchg
jge
out
cli
or
cmp
mov
jp
bound
inc
lods
xchg
aaa
push
cwde
pusha
cs
mov
xor
dec
and
jg
push
jb
inc
es
cmp
mov
jne
mov
jns
dec
movs
das
sbb
mov
movs
pop
sub
or
jge
jmp
dec
or
fisttp
loop
jb
es
lock
ss
test
outs
xchg
jnp
out
lea
fmul
cmp
enter
out
repnz
pop
push
pushf
cmc
jmp
mov
out
mov
mov
out
(bad)
not
xchg
push
pop
mov
inc
fistp
ror
outs
aam
in
push
pop
std
jmp
adc
movs
imul
(bad)
ds
xor
addr16
jmp
cwde
mov
stos
inc
sub
pushf
leave
xlat
fwait
test
add
arpl
mov
clc
pop
mov
cld
xchg
(bad)
adc
dec
jl
loop
les
dec
lods
retf
xor
pushf
pop
jnp
or
hlt
or
push
lds
call
mov
sti
scas
test
inc
pop
pop
xchg
cwde
(bad)
push
mov
push
adc
dec
jp
adc
int
dec
dec
aaa
push
jmp
mov
jge
stos
and
cmp
push
mov
jge
cli
adc
inc
montmul
cmps
xchg
mov
or
push
cmp
jae
xor
or
(bad)
setns
mov
xchg
adc
pop
test
push
push
and
xor
xor
push
fdiv
mov
jmp
bound
into
fcom
enter
icebp
out
dec
shl
stc
call
cmp
adc
push
cmc
dec
push
test
(bad)
stc
adc
or
jmp
ins
std
repnz
nop
mov
in
fimul
sbb
std
jo
or
lahf
mov
test
and
outs
stos
std
in
add
lea
jl
and
out
sub
sub
mov
xchg
or
push
shr
(bad)
mov
and
sti
mov
jbe
outs
mov
mov
or
mov
adc
adc
mov
fs
aaa
popf
pop
icebp
in
add
out
xchg
pop
in
in
pusha
and
xchg
push
cmp
cmp
add
jnp
pop
les
icebp
xor
repz
ror
rcr
push
dec
arpl
dec
sbb
jo
std
imul
dec
sbb
mov
mov
or
or
mov
xor
cwde
and
lock
imul
xchg
or
shl
inc
sbb
ja
das
pop
mov
scas
jae
push
lds
xor
movs
push
popa
add
hlt
stos
test
xchg
push
xor
pop
cmps
inc
push
cmp
pop
pop
stos
sar
xchg
call
ret
mov
popa
js
and
dec
aas
cmp
jnp
mov
dec
ficomp
push
jecxz
iret
sub
push
es
aas
les
je
mov
xchg
jp
dec
es
cwde
mov
sub
adc
cld
addr16
cmc
rcr
je
mov
lods
cmp
inc
sub
dec
sub
add
push
inc
mov
shl
out
sub
leave
js
leave
repnz
lahf
or
xchg
das
push
les
jne
or
fcomp
in
sub
sahf
(bad)
out
cmp
daa
add
cmp
lea
push
xor
(bad)
out
xor
mov
cmps
cs
dec
adc
(bad)
cmp
mov
jmp
cdq
adc
jo
mov
mov
mov
in
sbb
or
inc
idiv
adc
push
in
sahf
push
jno
mov
add
jle
movs
xchg
cmp
call
sbb
mov
mov
(bad)
popa
in
es
adc
adc
push
aam
and
pop
dec
outs
cli
icebp
repnz
add
in
arpl
xchg
mov
xor
out
xchg
push
mov
mov
hlt
cwde
es
add
xchg
sbb
inc
ret
sti
inc
ret
aaa
xor
xor
sbb
mov
out
stc
into
dec
inc
(bad)
xchg
jbe
repnz
js
popa
ret
mul
xchg
mov
rol
or
es
in
call
push
jne
je
mov
imul
in
pop
dec
aaa
clc
scas
(bad)
pop
inc
test
(bad)
(bad)
out
inc
mov
lods
pushf
mov
and
fnsave
cs
push
cli
movs
cdq
outs
jmp
stos
jmp
pop
xor
pop
stos
mov
adc
stos
(bad)
sti
into
arpl
rol
out
sbb
test
fsubr
xchg
test
or
mov
adc
gs
lods
aad
mov
or
xlat
mov
and
call
call
iret
test
enter
inc
fdiv
hlt
or
daa
cmps
jo
or
call
xchg
loope
call
xchg
mov
leave
scas
(bad)
test
outs
add
lock
inc
jne
jb
adc
enter
pusha
or
or
lock
popa
or
cmp
dec
leave
sub
xchg
push
(bad)
adc
xchg
retf
aam
icebp
sar
fs
push
and
mov
mov
addr16
icebp
ret
push
inc
inc
jl
xor
loop
imul
fst
sahf
adc
rcpps
loop
push
shl
sub
test
cmp
int
sti
dec
out
mov
int3
xchg
ret
mov
push
jl
push
das
mov
dec
div
xor
retf
mov
pop
loop
xchg
mov
into
and
lods
add
in
pop
add
cmps
dec
ja
pop
test
pop
jae
fisubr
add
or
popa
pusha
shl
push
into
ins
jbe
xor
push
lods
mov
nop
cdq
ret
fnstsw
cdq
out
adc
mov
cdq
mov
jmp
jns
mov
jecxz
inc
jg
mov
jnp
scas
push
jp
add
xor
cmps
mov
jo
fsubr
jecxz
xchg
add
icebp
or
sbb
ffree
out
aas
push
xchg
sbb
xor
addr16
sbb
jo
fisubr
inc
test
xor
mov
add
push
push
bound
call
cmps
push
lods
sbb
pusha
pop
xchg
retf
sub
shl
push
(bad)
rcr
icebp
lea
and
(bad)
jmp
xchg
fadd
mov
mov
imul
sti
repz
xor
stc
aas
and
icebp
pop
mov
ud2
cmp
fsubr
icebp
jns
loop
inc
jmp
in
arpl
ret
xchg
and
sbb
cmp
and
daa
inc
int
lods
mov
shl
add
mov
inc
into
jmp
xor
fs
mov
xor
jl
mov
dec
xor
cmp
shl
daa
xor
inc
pslld
retf
xchg
(bad)
mov
inc
sub
jl
add
icebp
jo
and
sbb
fadd
retf
push
and
ficomp
pop
add
imul
(bad)
jae
xor
inc
or
or
sbb
or
mov
push
and
leave
pop
mov
mov
pop
sbb
mov
add
sub
les
xor
sub
add
push
das
(bad)
lods
mov
movs
repz
aad
add
or
ja
xchg
cmc
mov
fidivr
in
push
shr
mov
iret
movs
sub
jb
fs
leave
stos
sbb
adc
and
sbb
das
gs
retf
adc
div
and
pop
adc
jne
sub
push
sub
fwait
sub
sar
out
(bad)
fidivr
push
add
mov
dec
push
leave
jmp
pop
mov
lock
xchg
pusha
sar
jo
mov
loopne
aam
(bad)
(bad)
fdiv
leave
out
fisubr
lock
xchg
dec
sub
and
push
cmp
mov
bound
xor
test
mov
xchg
enter
xor
sub
cmp
mov
jns
push
cmp
add
in
or
retf
mov
push
jmp
ret
stc
iret
mov
dec
popf
es
push
jge
pop
cmp
add
jbe
stos
pop
xchg
ror
add
ins
dec
loopne
daa
movs
sbb
imul
sub
adc
jbe
xor
imul
shl
pop
daa
out
outs
xchg
and
inc
mov
pop
push
cmp
dec
icebp
movs
sbb
push
clc
test
cmp
mov
idiv
(bad)
das
cs
sbb
fwait
loop
pushf
fnsave
mov
mov
repz
fimul
fs
cmp
xor
jl
mov
inc
sbb
mov
xor
(bad)
fnsave
iret
jb
inc
add
fld
lods
push
mov
pop
mov
ftst
mov
popa
cs
pop
jb
inc
pop
lds
xchg
mov
jge
enter
std
xor
inc
out
xchg
and
pusha
xchg
push
int
lods
adc
and
push
dec
mov
enter
fucomi
vsqrtps
and
inc
xlat
adc
dec
rcr
(bad)
inc
mov
retf
mov
mov
xor
mov
test
sub
(bad)
out
imul
cmp
jae
sbb
shl
ja
push
xchg
mov
push
fnstcw
dec
xor
adc
test
cwde
mov
xchg
pop
psrlq
xchg
and
pop
icebp
mov
jge
call
jmp
adc
out
clc
inc
out
pop
mov
bound
jbe
out
test
clc
pop
jo
loopne
outs
add
xchg
pop
test
and
mov
ja
bound
out
or
sub
xchg
jmp
jp
call
or
xor
retf
stc
unpcklps
push
cs
aad
gs
jp
clc
pop
pop
mov
cs
(bad)
aas
das
shl
mov
jne
jns
ret
cdq
or
outs
xchg
dec
mov
jg
arpl
lea
jb
test
jg
or
cmp
(bad)
out
repnz
fs
in
pop
fucomip
sar
les
xchg
movaps
fisttp
add
idiv
out
xor
addr16
sbb
loop
mov
stos
daa
add
cmovne
and
add
fidiv
movs
ins
cmps
ins
out
lock
adc
push
fadd
sub
xchg
scas
je
push
jb
ret
sar
fdivr
and
add
and
(bad)
sbb
inc
pop
mov
xlat
dec
mov
out
jl
jl
test
retf
cmp
fld
lods
into
inc
sub
add
mov
gs
fstp
jg
call
jecxz
sbb
mov
lods
xchg
sub
push
out
pop
hlt
cmps
mov
pop
arpl
popf
and
cli
sbb
xchg
sbb
jns
jg
mov
sub
cli
icebp
and
dec
xor
hlt
test
xchg
fstp
mov
aad
adc
out
xor
cs
jg
lock
jp
mov
hlt
mov
jmp
inc
ss
cmps
push
inc
adc
mov
mov
dec
arpl
push
mov
add
and
cmps
sbb
cmp
jb
stc
push
inc
adc
jl
sub
imul
cdq
loope
leave
adc
mov
into
jns
adc
int
repnz
xchg
sub
test
xor
fld
shl
std
mov
mov
mov
test
lds
push
rol
jne
mov
lods
imul
mov
mov
sbb
arpl
xor
imul
cmp
and
imul
in
(bad)
xchg
loopne
xlat
int3
sbb
inc
sub
dec
add
fiadd
dec
cs
in
jmp
mov
iret
jb
repnz
fs
mov
(bad)
daa
mov
push
add
lods
add
leave
popa
sti
frstor
data16
(bad)
jmp
or
xor
or
xchg
rol
and
push
inc
loopne
dec
cmp
jo
mov
mov
sub
fistp
push
inc
in
sub
sar
add
push
repnz
cmps
hlt
or
sbb
add
inc
stos
xchg
arpl
cmp
dec
push
popa
or
jno
sbb
dec
in
mov
mov
mov
mov
js
(bad)
cmp
push
inc
xchg
lea
or
aaa
add
ins
mov
add
dec
cmps
(bad)
xchg
lock
jg
outs
sub
leave
adc
into
in
jb
inc
fisttp
adc
cdq
sub
jns
jno
cmp
and
es
mov
inc
xor
aad
outs
xor
addr16
cli
cmp
push
dec
and
jp
sbb
xor
lock
pop
cmp
stos
push
dec
in
outs
aam
mov
and
repnz
push
push
mov
lea
loop
push
outs
sar
jnp
dec
inc
push
in
popa
inc
sbb
sub
test
mov
mov
sbb
test
mov
cld
and
adc
xor
cmp
xchg
in
cmps
mov
dec
clc
or
nop
dec
pcmpgtd
xor
and
adc
in
push
ror
sub
arpl
sbb
and
(bad)
icebp
or
je
fld
pop
ins
lds
pop
lds
int
pop
movs
xchg
pop
in
retf
in
dec
pop
dec
mov
mov
jne
push
test
cmp
je
adc
mov
push
xor
or
jle
or
cmp
mul
inc
rol
push
xor
fld
loope
cmp
inc
sub
shl
push
mov
pop
jns
sub
xor
jo
enter
test
pop
scas
pop
idiv
push
push
inc
in
imul
paddw
retf
pop
lods
into
push
lahf
adc
dec
fisttp
push
jnp
dec
test
or
aam
and
aad
cmc
mov
aam
lahf
add
repnz
mov
inc
loopne
(bad)
(bad)
aam
(bad)
leave
aaa
or
mov
in
dec
mov
scas
fild
test
icebp
jo
mov
push
cwde
add
add
aad
add
push
push
jo
scas
in
(bad)
fldcw
and
shr
ss
sbb
addr16
out
mov
mov
or
xchg
popf
sbb
cld
hlt
mov
stos
mov
or
mov
cmp
das
es
aaa
mov
cdq
movs
jge
out
gs
stc
cmp
and
dec
inc
push
gs
sub
(bad)
rol
fisubr
imul
jmp
pusha
xchg
pushf
xor
adc
add
bound
adc
mov
xor
cmp
sbb
stos
test
cmps
mov
sbb
cmp
jmp
mov
inc
cmc
sbb
sbb
mov
cwde
mov
jle
xor
or
cli
jae
sub
daa
cs
push
test
icebp
dec
sub
stc
and
xlat
push
pop
and
mov
xor
call
mov
sbb
push
outs
or
les
mov
sbb
pop
loop
xor
pop
cs
fmul
outs
loop
cmp
add
cmp
iret
in
scas
mov
ins
cmp
js
mov
call
and
mov
inc
sbb
(bad)
daa
(bad)
xchg
mov
sub
je
stc
jo
xchg
ins
cmp
add
and
retf
pop
mov
xchg
cld
or
pop
shr
mov
adc
mov
aaa
sub
mov
cmp
adc
adc
iret
and
sti
dec
pop
and
loopne
or
push
ror
test
or
loop
push
adc
int3
sub
int3
xchg
xor
lods
mov
pop
jae
aad
fcomp
mov
pop
push
je
mov
xchg
mov
mov
pop
lock
jns
and
push
jae
leave
fadd
sbb
jo
(bad)
and
hlt
out
sub
cmps
sub
cmp
mov
mov
aas
mov
leave
xor
cmp
xor
jecxz
add
repz
xor
shl
xchg
ins
movs
dec
lods
push
push
ja
aam
pop
mov
aas
dec
sub
call
rol
jmp
test
gs
sbb
(bad)
jecxz
cmp
cmp
xchg
or
out
imul
push
xor
jg
es
inc
inc
pop
(bad)
sbb
popa
retf
mov
fcomp
test
ficom
sbb
or
or
pop
mov
xor
pop
cli
ss
inc
mov
(bad)
mov
push
fmulp
loop
fsub
mov
push
cdq
scas
xor
xchg
test
fstp
mov
pop
idiv
cmps
adc
daa
jecxz
retf
test
push
pop
jo
sub
gs
mov
jp
pop
jge
sub
jnp
push
sbb
jg
adc
mov
cmc
mov
ss
ins
mov
aaa
pop
push
pop
sbb
push
xor
xor
jb
jge
push
add
add
push
sbb
cdq
cmp
fisubr
jo
shl
fisubr
fimul
aad
stos
xor
and
fiadd
out
add
cmp
loopne
lds
pop
aaa
jb
call
or
jle
adc
add
data16
aaa
add
inc
jle
dec
mov
inc
pusha
outs
das
out
cs
ins
xchg
and
cmps
jbe
popf
xor
ror
(bad)
adc
retf
iret
adc
add
xchg
sub
jbe
clc
repnz
jle
lea
mov
mov
mov
addr16
add
sub
(bad)
jmp
pop
xchg
cld
stos
lds
pop
xchg
mov
inc
xchg
push
adc
push
ins
into
int3
(bad)
mov
(bad)
adc
inc
jmp
and
daa
jb
dec
fs
loope
movs
xor
imul
sub
inc
out
mov
ror
sbb
dec
ins
imul
lods
fadd
loope
mov
and
xchg
push
inc
out
xor
jmp
icebp
adc
ret
jbe
(bad)
into
(bad)
push
mov
xchg
lock
or
jl
fadd
(bad)
aad
ror
(bad)
ja
daa
or
dec
inc
xchg
mov
xchg
arpl
bound
ss
loop
add
mov
xor
pop
add
cmp
fwait
cmp
retf
push
xchg
fdiv
stos
cwde
addr16
pop
jmp
gs
call
mov
popf
push
stos
js
pop
jnp
mov
or
mov
int3
sti
imul
push
pop
dec
jnp
ins
cmps
les
or
imul
dec
je
sbb
mov
popf
lods
pushf
cmc
xlat
mov
cdq
adc
and
ror
xor
push
out
aaa
dec
aad
mov
cwde
pusha
sub
mov
mov
in
and
and
aas
dec
fisttp
mov
pop
aas
lods
cmp
rcl
sbb
out
mov
test
and
cmp
icebp
mov
or
in
test
aad
push
in
add
mov
es
test
dec
call
lods
lock
repz
ror
push
dec
cli
clc
mov
mov
jne
add
popa
movs
push
push
adc
xchg
add
es
into
icebp
add
dec
or
sahf
fwait
mov
fwait
in
cs
and
pop
(bad)
aas
mov
jo
pop
jmp
cmp
cmp
xchg
xchg
test
push
outs
je
mov
dec
and
jnp
sbb
je
out
jle
movs
loope
popf
ret
inc
cmp
and
into
jbe
adc
jns
mov
push
shr
inc
aaa
xor
xchg
mov
push
cmps
lds
std
dec
mov
stos
fisub
xchg
mov
pusha
jbe
lahf
push
shl
addr16
addr16
xchg
sbb
mov
jne
imul
popa
xor
mov
add
push
xor
inc
jno
mov
mov
jo
(bad)
es
pop
add
push
pusha
sbb
movs
pop
mov
xchg
mov
out
pop
sub
out
and
mov
and
inc
out
lea
push
sahf
or
ret
add
mov
xor
jb
xchg
sbb
mov
cmp
jg
jae
mov
je
xchg
add
das
push
mov
enter
cmp
push
jno
sbb
ret
push
outs
scas
pop
push
gs
fxch
shr
cmp
add
adc
jecxz
mov
leave
rcr
neg
mov
lahf
mov
jnp
mov
mov
mov
push
shl
inc
scas
xchg
js
cmp
inc
fsubr
mov
mov
in
(bad)
es
ds
sub
nop
data16
out
ss
pop
daa
push
dec
jmp
rol
adc
repnz
mov
adc
or
icebp
pop
stos
ficomp
retf
jne
mov
bound
xchg
pop
shr
add
fbstp
cmc
adc
fwait
cmp
loopne
sbb
mov
jg
lds
in
cwde
adc
or
add
cmp
jmp
lea
movs
push
jno
shl
dec
pop
iret
stc
test
adc
add
orps
popf
inc
sahf
in
ficom
ins
cmps
pushf
out
loope
fcmovne
dec
dec
xchg
loopne
retf
xchg
mov
jb
ja
imul
in
(bad)
ror
adc
adc
xchg
in
mov
push
jge
ror
or
outs
mov
push
sub
hlt
and
sbb
mov
sub
xchg
out
gs
in
cmps
xchg
iret
cmp
shr
dec
in
(bad)
jbe
xchg
xor
add
jmp
movs
fisubr
fnsave
pop
push
push
pop
add
mov
aas
pop
inc
clc
loop
adc
ds
sti
int
jae
pop
scas
mov
mov
(bad)
lds
out
push
cld
mov
and
jp
pusha
push
ret
pop
out
shl
(bad)
push
xor
stos
push
add
fsubr
arpl
xchg
push
push
push
cld
mov
rol
jle
inc
push
or
mov
cmps
pop
add
and
mov
jge
cwde
mov
push
test
push
sub
enter
cmp
movs
mov
clc
jbe
lea
jg
aad
cmp
jg
cmp
and
pop
xchg
es
dec
popf
xchg
mov
loopne
xchg
arpl
add
push
pop
stos
xor
fadd
int
sub
int3
mov
cwde
stos
sbb
cmp
mov
xchg
stc
data16
(bad)
fld
scas
cwde
repnz
jp
cmp
jno
xchg
and
mov
sbb
ret
daa
mov
ss
mov
xor
dec
addr16
jb
jecxz
mov
nop
push
imul
sub
sbb
add
cmp
lahf
nop
pop
fs
push
es
inc
ds
or
adc
js
inc
int3
not
(bad)
mov
pop
repnz
adc
out
pop
loope
not
mov
inc
cmp
or
jp
dec
ins
inc
add
pop
mov
movs
jle
jecxz
xchg
aam
popa
jge
mov
mov
shr
int
inc
inc
jb
(bad)
mov
xor
hlt
lahf
shl
ja
fsub
enter
js
mov
and
jbe
loope
mov
test
ja
(bad)
stc
or
cmps
cmp
and
test
imul
pop
dec
movs
mov
scas
push
cmp
ret
add
shr
mov
mov
retf
sub
es
mov
sti
mov
pop
rcr
repnz
mov
xor
js
pop
cmps
mov
out
push
mov
or
loop
add
mov
cwde
sbb
pop
scas
push
sbb
xor
ret
adc
mov
into
mov
cld
rcl
adc
and
inc
loopne
sbb
mov
pushf
inc
je
or
xor
mov
paddusb
and
xchg
pop
and
scas
xchg
and
sub
int
mov
jge
xor
je
or
xchg
sbb
xchg
dec
stos
inc
mov
pop
dec
jp
leave
loopne
nop
shr
arpl
jmp
mov
inc
fadd
xor
lock
mov
inc
inc
pushf
shl
jmp
jnp
scas
lods
(bad)
sub
xor
cmp
popf
jg
pop
(bad)
mov
cmp
pop
fld
ret
lahf
call
xchg
test
sub
ret
jnp
push
push
dec
pop
es
bound
(bad)
push
stos
int
fwait
fwait
or
push
jno
mov
cmp
in
(bad)
dec
xor
mov
addr16
adc
push
stos
xlat
mov
pushf
iret
mov
sbb
mov
pop
inc
adc
sbb
fs
sahf
rol
mov
das
sub
bound
jmp
inc
sub
push
les
sbb
(bad)
aam
call
jnp
fs
pop
stos
xchg
sahf
out
and
inc
outs
jno
jnp
loope
fs
cmp
pop
lods
jl
cmp
sbb
dec
xor
xor
dec
iret
test
shr
jge
or
das
xchg
jbe
int
mov
push
push
ror
test
leave
call
cmp
lahf
fwait
in
out
xor
xchg
adc
dec
(bad)
cld
out
shl
dec
(bad)
xor
(bad)
aam
add
push
stc
ss
scas
shl
ds
ret
xchg
pop
sub
ds
mov
push
loope
sbb
add
or
imul
test
cld
popa
rcl
iret
in
cmps
add
movs
fbstp
enter
adc
jbe
rol
dec
fcmovb
fwait
js
jo
mov
push
retf
push
rcr
jnp
adc
mov
sbb
dec
add
push
dec
outs
mov
sbb
shr
(bad)
sub
imul
jmp
sti
xor
ins
cmp
jne
pop
ds
call
ins
fidivr
pop
cmp
xchg
aas
imul
ret
pop
mov
cmp
repz
push
xchg
pop
cwde
pop
fiadd
sar
mov
ror
out
(bad)
xchg
xchg
sub
(bad)
std
xor
mov
(bad)
movs
lods
cmp
adc
jns
push
fild
sahf
and
add
scas
fild
pop
das
fwait
dec
cmp
hlt
gs
ja
sub
xor
jb
psraw
test
rol
daa
pop
jge
xor
xchg
out
sub
rcl
push
mov
mov
pop
sbb
pop
dec
add
ins
in
xor
lahf
push
sub
cmp
and
mov
scas
mov
cmps
repz
xchg
xor
call
movs
loopne
sub
in
mov
dec
movs
or
mov
movs
stos
call
ss
mov
adc
iret
sar
out
lea
mov
push
fs
pop
out
js
push
je
mov
jns
mov
cmp
dec
stc
sar
iret
mov
add
cvtps2pi
adc
inc
out
adc
stos
push
jne
popf
pop
inc
aam
lods
cdq
lods
(bad)
cli
jg
sub
in
scas
cmp
add
test
(bad)
loopne
pop
das
cs
rcr
dec
inc
popa
jp
jmp
jecxz
cmp
in
out
test
clc
pop
or
mov
cmp
mov
dec
or
xchg
dec
pop
fcom
lds
jbe
iret
pop
adc
xchg
out
add
nop
cmc
jecxz
dec
sbb
xchg
inc
or
mov
jnp
and
sbb
(bad)
in
ins
add
call
pushf
repnz
imul
retf
icebp
push
sbb
push
jmp
loope
or
gs
popf
cs
stos
mov
imul
and
xchg
fst
nop
lahf
sar
or
stos
xor
rcl
ins
cmc
inc
add
push
xor
dec
mov
mov
retf
adc
push
sti
xchg
xor
inc
mov
stc
hlt
dec
dec
stos
or
push
lea
adc
or
sub
jge
scas
ja
jp
imul
ins
inc
mov
inc
push
sub
(bad)
data16
xor
cli
loopne
test
mov
(bad)
mov
call
pop
cdq
jbe
xor
push
ret
inc
adc
repz
fwait
adc
inc
adc
push
pushf
xor
cmp
inc
test
sbb
hlt
push
ret
dec
int
mov
ror
pop
or
xchg
add
xchg
leave
ins
dec
scas
cmp
out
mov
dec
jnp
jmp
lea
adc
rcr
mov
outs
and
add
mov
shl
ins
mov
cmp
push
ficom
scas
push
into
loop
pop
fmul
pop
push
xor
xor
mov
add
clc
pop
lea
mov
mov
add
add
jge
add
inc
or
push
adc
or
ror
jae
dec
adc
xor
or
jle
ss
xchg
inc
inc
push
or
add
std
dec
or
add
inc
fs
jge
jae
mov
sub
out
adc
sahf
pop
adc
jmp
(bad)
mov
test
or
ja
sar
cmc
sbb
xor
push
(bad)
fistp
sbb
loope
fnstenv
xchg
shl
ret
and
and
(bad)
cmp
cmp
pop
and
sbb
jmp
xor
mov
add
movs
imul
inc
in
arpl
movs
shl
and
ins
sar
xchg
push
xchg
hlt
mov
add
sbb
or
rcr
push
jnp
mov
or
xor
fdivr
out
jnp
cmp
pop
mov
mov
lods
das
cmp
add
or
mov
xchg
sbb
icebp
jne
sbb
cmp
stos
(bad)
arpl
(bad)
cmc
std
push
jmp
sbb
xchg
add
fistp
xchg
inc
cmp
sbb
jp
cmc
sbb
mov
jg
aas
mov
dec
cs
xchg
and
stos
test
popf
push
and
out
inc
pop
dec
mov
out
sbb
xchg
jmp
adc
bound
aas
mov
cld
mov
cld
dec
push
push
sti
mov
cwde
addr16
movs
inc
test
test
sbb
in
bound
xchg
test
add
xor
movs
out
jnp
push
push
pop
aad
jmp
aam
scas
ds
pop
add
rcr
dec
push
mov
pop
sub
(bad)
loope
xchg
sub
and
lahf
rol
mov
dec
imul
and
gs
rol
mov
ja
retf
cdq
ss
adc
jg
push
ror
adc
add
push
inc
xchg
fmul
add
mov
mov
and
sar
add
(bad)
call
(bad)
jmp
inc
pop
lahf
repnz
iret
mov
mov
mov
add
mov
fistp
pop
out
rol
pop
test
fdiv
movs
xchg
movs
mov
rcl
push
shl
sub
pop
pop
stc
jnp
jbe
adc
out
es
xchg
enter
push
int3
ds
mov
ins
adc
jb
xor
mov
jl
push
pop
out
(bad)
enter
mov
dec
adc
pop
bound
hlt
cld
loopne
loop
pop
mov
popa
inc
loope
in
in
ficom
shl
sub
sbb
test
pop
cmp
sbb
push
mov
gs
xchg
ja
out
add
popf
lahf
ins
and
imul
inc
inc
or
and
(bad)
in
(bad)
mov
mov
fwait
out
jle
sbb
(bad)
(bad)
retf
or
or
or
or
push
push
sub
adc
out
jnp
aaa
mov
(bad)
jmp
or
mov
pop
sbb
out
jno
and
mov
call
into
cld
test
push
and
jnp
sbb
cmps
fisttp
jle
mov
(bad)
or
and
pop
stc
scas
pop
xor
pop
and
xchg
aam
clc
stos
adc
xor
push
arpl
xchg
shl
sub
mov
not
xchg
mov
pop
xor
jo
gs
inc
daa
dec
or
pusha
sbb
mov
cmp
mov
jns
pop
shr
add
iret
movs
je
inc
inc
fisubr
test
sbb
push
aad
and
mov
and
push
jmp
not
mov
xchg
mov
jmp
add
sbb
retf
jle
mov
pop
xchg
not
and
pop
push
js
fisub
add
cmps
int
mov
imul
jmp
popf
or
ss
push
inc
cmp
sbb
loop
and
jbe
xor
add
in
out
cmps
xchg
pop
sub
push
jp
fstp
sub
sub
adc
(bad)
lds
mov
retf
cmp
fbstp
out
xor
call
ins
adc
sbb
popa
data16
lds
outs
lahf
xchg
clc
push
out
daa
pop
ins
retf
pop
daa
fistp
imul
dec
inc
jmp
push
xchg
icebp
mov
loope
in
addr16
pop
inc
ror
cwde
mov
adc
jl
scas
ds
push
xor
rcl
popf
jbe
xchg
jg
lods
popa
sbb
addr16
add
neg
hlt
push
or
push
movs
mov
xchg
aaa
adc
cmp
or
adc
mov
pop
sub
cmp
pop
cmp
repz
dec
lds
shr
dec
repnz
pop
outs
sbb
inc
mov
int3
jne
xchg
imul
and
jbe
ret
imul
movs
sbb
fldenv
cmps
arpl
sub
xchg
loopne
lahf
loopne
adc
je
add
cmps
sub
js
sahf
nop
pop
cmp
mov
cmps
movs
psraw
fstp
push
imul
outs
sub
out
or
cmc
ror
lds
mov
lock
push
push
add
adc
sbb
(bad)
pop
jmp
add
daa
adc
aam
pop
(bad)
cwde
push
jne
jnp
push
mov
adc
jmp
(bad)
int
std
push
push
pop
jecxz
xor
mov
pop
ins
pop
cmps
(bad)
mov
jge
rcl
pop
and
loop
dec
dec
push
imul
daa
or
fcomi
outs
dec
rcr
add
cmp
jmp
mov
ins
cmps
fwait
int
in
xor
jle
inc
add
(bad)
icebp
mov
sub
sbb
mov
or
jb
test
cmp
pop
xor
inc
rcr
xchg
ja
adc
(bad)
loopne
xchg
pop
stc
aaa
push
sub
push
inc
mov
jnp
sub
nop
(bad)
mov
call
pop
push
mov
mov
xor
mov
(bad)
bound
jp
ret
cs
fdiv
iret
js
xor
lock
dec
stos
and
mov
scas
xor
mov
push
icebp
lods
je
ins
stos
lea
in
fld
in
inc
lods
pop
pop
dec
jo
in
je
xchg
leave
inc
dec
lods
jle
test
mov
and
(bad)
(bad)
stos
mov
mov
push
mov
scas
xor
adc
jnp
xchg
cmc
pop
popf
stc
ins
jno
inc
bnd
test
cmp
imul
(bad)
xchg
neg
mov
dec
mov
rcl
jne
(bad)
dec
sahf
inc
and
in
popa
add
fs
mov
cmp
cld
mov
loopne
xchg
into
neg
repnz
and
outs
(bad)
xchg
movs
adc
adc
in
aad
or
test
out
mov
jns
in
sbb
push
xchg
(bad)
xor
sub
cmp
mov
jp
push
jae
fmul
data16
mov
mov
pop
in
mov
xor
and
out
push
clc
sub
dec
xor
in
nop
add
loopne
out
sub
cmp
xchg
push
je
ins
dec
sub
mov
into
adc
cs
popa
bound
xor
inc
pushf
dec
dec
into
add
add
int
ret
cmp
jne
sbb
ja
(bad)
push
add
dec
je
xor
mov
rcr
xchg
pop
mov
scas
call
out
leave
iret
outs
mov
cdq
push
xor
cmps
mov
rol
pusha
cld
cmp
mov
and
jbe
push
add
mov
mov
gs
daa
out
(bad)
lock
push
ret
jne
or
inc
mov
scas
pop
cmp
xchg
push
shl
test
mov
dec
arpl
jge
and
inc
cmps
test
xchg
xor
cmp
rcl
(bad)
jmp
out
(bad)
call
adc
jb
add
jbe
mov
inc
repnz
mov
or
adc
mov
fisubr
sub
out
jb
ret
test
je
inc
mov
jecxz
xchg
cli
jl
sub
sbb
rol
cmp
inc
dec
and
retf
adc
ins
je
lods
adc
cmp
nop
xor
cmp
xchg
push
inc
shr
mov
and
fisttp
popa
sti
or
cs
xor
mov
adc
mov
xchg
rcr
rcr
jno
mov
add
push
pop
cmp
dec
hlt
retf
ror
addr16
and
fld
sub
call
pop
repnz
icebp
pushf
jo
sbb
out
or
in
test
push
sbb
mov
dec
loope
mov
add
fldcw
addr16
scas
mov
in
push
fdivr
test
or
inc
cmps
mov
xchg
inc
test
mov
push
xor
push
les
inc
stos
stos
clc
and
sub
mov
mov
sub
inc
xchg
jge
jnp
push
add
xlat
repz
mov
int3
pop
jle
fist
aas
mov
pop
or
nop
retf
(bad)
nop
leave
push
retf
movs
ins
test
mov
lock
xor
pop
pusha
aaa
mov
dec
pop
scas
adc
sub
neg
jmp
scas
xchg
pop
sar
pop
lods
mov
lods
shr
stc
test
addr16
arpl
xchg
cwde
cdq
and
mov
popf
xor
call
rol
inc
cmp
xchg
cmc
mov
lods
out
outs
fdivr
std
addr16
pop
aad
jecxz
xor
nop
push
mov
xchg
push
inc
pop
test
cwde
fidivr
jnp
ins
cmp
jo
shr
xlat
push
xor
mov
pop
loope
push
mov
gs
loopne
xchg
fdivr
ret
mov
scas
jns
mov
popa
call
idiv
pop
mov
jle
test
mov
add
adc
cmc
in
loope
out
jmp
adc
cli
sbb
cmp
test
mov
sub
and
ja
or
fsub
mov
test
fadd
cmps
inc
mov
fwait
cmove
cwde
loop
or
ds
into
shl
aas
fcomp
addr16
push
adc
ja
je
adc
loop
sub
test
mov
outs
mov
inc
xchg
pop
and
inc
mov
adc
repz
pop
adc
dec
cmp
cmp
adc
sub
push
les
out
test
xlat
sub
mul
adc
(bad)
pushf
pop
repz
lahf
mov
test
rcl
add
mov
in
lea
loopne
xchg
arpl
popf
xor
in
call
lds
inc
push
fisttp
pop
xchg
jg
mov
icebp
mov
or
xchg
lods
mov
test
lods
das
and
pop
enter
sub
sbb
clc
xor
sbb
and
(bad)
sbb
scas
rcr
call
xchg
aas
inc
lock
fcom
xchg
dec
add
stos
aaa
scas
je
mov
pop
xor
lock
hlt
mov
fistp
add
aaa
pop
xor
adc
call
xchg
push
dec
adc
add
jne
cmp
or
(bad)
sbb
mul
mov
pop
push
aas
int
js
mov
mov
mov
test
outs
cmc
jmp
loop
clc
hlt
in
push
data16
fimul
inc
sbb
mov
(bad)
sbb
push
push
push
cs
cmc
pop
mov
fmul
push
cmp
mov
lods
test
xchg
pop
popf
cdq
int
pop
in
ror
mov
mov
push
enter
xor
xchg
lods
mov
je
leave
inc
ins
in
ja
and
ror
mov
push
movs
dec
jge
pop
cmp
ret
hlt
pop
mov
lea
adc
jo
cmp
jne
cs
jl
ss
or
mov
jbe
or
inc
loopne
jno
or
xor
rol
(bad)
cmp
fdivr
push
xor
mov
sar
stc
push
lods
or
lods
(bad)
adc
icebp
xor
aas
sbb
mov
loope
cmp
out
into
pop
pop
stos
sub
push
push
pusha
mov
mov
into
ja
and
cmp
dec
lds
(bad)
ins
adc
mov
or
jnp
jmp
out
mov
icebp
stos
std
ins
push
cmovge
inc
xor
jmp
shr
popf
mov
dec
push
ins
mov
stos
sar
or
mov
sub
jne
dec
rol
scas
xchg
cli
jl
sub
retf
fstp
rol
jns
jmp
mov
mov
mov
dec
mov
mov
or
mov
das
jmp
fbstp
aas
aad
cmp
ror
lahf
pop
aad
(bad)
enter
xor
mov
ret
hlt
ror
mov
test
shl
add
aaa
rcl
out
into
sbb
stos
cld
iret
movs
inc
mov
jp
jg
loop
or
cmp
lods
es
pop
int3
xchg
cmp
test
xor
cmp
inc
not
xor
xlat
cmps
xchg
pusha
hlt
in
xchg
push
cmp
rol
js
mov
or
idiv
inc
arpl
repnz
xchg
retf
call
loope
pop
(bad)
mov
icebp
cs
cld
sbb
iret
cwde
mov
push
or
inc
hlt
lds
mov
mov
loop
cmp
xchg
popf
(bad)
mov
push
jecxz
call
mov
or
movs
adc
std
ja
cmp
sbb
mov
repnz
test
add
pop
stos
dec
push
(bad)
retf
add
jle
dec
aaa
dec
xchg
add
cmp
(bad)
pop
inc
repnz
(bad)
and
lods
lods
cmp
imul
mov
sbb
xor
retf
lock
ds
out
sub
adc
fidiv
outs
mov
movs
imul
add
xor
push
iret
div
xor
(bad)
fnclex
jge
cmp
jle
mov
jne
std
push
mov
inc
xor
push
inc
add
add
js
lods
cmps
push
shr
(bad)
mov
in
retf
ret
pop
mov
sar
push
inc
or
inc
popf
in
xchg
fadd
xchg
bound
pop
dec
sti
ficomp
sbb
mov
loopne
test
adc
mov
cmp
movs
cmp
stos
adc
cdq
pop
jmp
loope
lock
lods
iret
shl
test
(bad)
cmc
jp
(bad)
addr16
xchg
fld
cmc
mov
jp
ins
adc
mov
dec
sub
test
rcl
adc
ret
xor
cmp
cmp
pop
cmp
mov
dec
inc
int3
fisubr
(bad)
call
sbb
dec
loopne
pop
pop
mov
test
sahf
adc
ret
xchg
cld
retf
mov
fdivr
test
mov
mov
add
add
bound
gs
test
mov
cwde
iret
ret
pop
jecxz
push
(bad)
jmp
loop
ret
push
or
shl
lock
sahf
loopne
ret
and
lahf
cmc
mov
popf
jns
or
(bad)
adc
mov
cli
mov
xor
je
jne
stc
rol
(bad)
scas
add
loope
iret
mov
jnp
xchg
inc
cmp
push
cmp
mov
retf
mov
rcl
jle
dec
jo
jmp
aaa
cmps
pop
push
(bad)
pop
push
movs
pop
sbb
fwait
loope
jmp
popa
mov
adc
test
call
aaa
loop
pop
shl
loop
ins
outs
lock
mov
inc
inc
std
call
repz
pop
xchg
dec
movs
xor
xor
mov
dec
mov
adc
mov
je
inc
daa
xchg
mov
pop
and
jnp
cmps
ss
nop
and
xor
adc
inc
fadd
dec
out
jmp
fnstcw
and
xor
adc
sar
push
sub
pop
and
add
jb
dec
fdivr
push
sub
shl
clc
cmp
mov
outs
xor
push
dec
icebp
jg
fs
arpl
push
test
xor
in
jbe
xchg
xchg
and
aam
jae
inc
mov
(bad)
out
fcom
mov
or
pushf
cmp
mov
(bad)
sbb
nop
adc
cmps
push
mov
enter
add
sub
rcl
dec
shr
stc
dec
scas
in
outs
inc
sbb
sub
push
jmp
xor
cwde
xor
pop
(bad)
or
add
xchg
pop
inc
(bad)
ins
or
cmp
aas
pop
stos
adc
test
xor
data16
in
mov
push
rcl
aaa
and
outs
dec
jmp
pshufw
add
inc
retf
dec
mul
push
xor
mov
nop
or
jmp
adc
fistp
rcr
xor
addr16
rcl
mov
out
xchg
sbb
add
lea
mov
add
daa
cs
hlt
adc
aaa
push
pop
inc
push
test
cld
leave
sub
dec
or
mov
stos
mov
adc
jmp
call
lods
and
(bad)
fsubr
mov
dec
inc
fbstp
neg
fsubr
mov
cmp
push
in
and
mov
shl
sahf
cmc
sbb
jmp
rcl
loope
enter
pop
retf
std
scas
in
lea
aad
ds
fimul
(bad)
jne
ins
retf
inc
pop
cmp
mov
pop
aam
repnz
imul
stos
xor
add
jno
xlat
pusha
fimul
jns
or
lods
fidivr
cs
xchg
inc
into
mov
lods
xchg
add
xchg
ret
cmps
test
or
xchg
das
adc
mov
ja
pop
mov
loope
mov
cli
xor
xlat
hlt
or
ret
mov
inc
add
cs
xor
sub
cli
xor
out
inc
or
cdq
clc
mov
aad
and
shl
push
icebp
cmps
loope
xchg
mov
fcom
add
repz
movlps
cmps
jns
in
fldlg2
fild
icebp
(bad)
xchg
pop
pop
xor
call
les
addr16
or
and
loope
data16
mov
ins
sbb
out
push
iret
jns
cdq
push
add
or
jo
jecxz
pop
dec
sar
stc
push
je
sbb
aas
gs
not
xlat
add
pop
mov
push
push
jo
push
inc
or
movs
sbb
and
aaa
mov
xchg
xchg
cld
xchg
sub
jnp
icebp
movs
sahf
jmp
cmp
mov
cmp
mov
jl
in
out
mov
adc
setns
fbstp
aaa
(bad)
mov
jge
cmps
adc
scas
sti
push
stos
or
fnsave
retf
clc
mov
movs
outs
push
cmp
inc
sbb
jae
js
push
inc
aaa
into
pusha
aas
cmp
inc
push
(bad)
push
jno
sahf
sub
add
ret
dec
pusha
add
(bad)
pusha
jo
add
push
test
xor
out
stos
fwait
pop
or
and
fcomp
sar
xor
mov
xchg
or
(bad)
sbb
out
sti
mov
jg
sar
sub
aam
cs
retf
faddp
mov
(bad)
cld
pop
shl
out
adc
mov
inc
(bad)
aaa
xor
jb
fnstcw
add
inc
cld
loopne
jns
pusha
pop
pusha
push
shl
sti
imul
adc
cwde
xchg
in
fisub
ret
les
cmp
dec
mov
ins
aam
mov
and
mov
ins
aaa
shr
mov
push
nop
mov
or
(bad)
push
jp
lods
and
sbb
fwait
push
mov
xchg
jl
inc
sub
ss
sbb
popa
sbb
sub
jb
jno
xlat
xchg
pop
or
cmp
shl
jp
inc
aaa
cmps
or
push
pop
ds
sbb
outs
inc
cdq
les
add
pop
fisttp
inc
jmp
add
jge
dec
jmp
test
add
test
adc
pop
test
(bad)
out
out
adc
sub
sbb
repnz
mov
sbb
fmul
mov
inc
push
popa
or
mov
mov
bound
imul
out
and
nop
into
repz
push
sub
retf
sub
cli
or
cld
xor
or
rcl
dec
jecxz
mov
call
sbb
adc
sbb
outs
mov
xor
icebp
aas
mov
call
xchg
cmp
mov
in
ins
mov
jbe
jo
sub
test
sbb
outs
inc
into
push
adc
inc
add
pop
xor
mov
js
ret
jns
xchg
dec
scas
leave
xor
out
inc
les
inc
dec
push
xchg
iret
add
xor
jo
push
mov
in
push
cs
dec
adc
sub
fsubr
imul
(bad)
int3
mov
out
mov
pop
leave
jmp
push
mov
pop
inc
push
pushf
pop
inc
adc
push
xor
(bad)
push
scas
mov
or
push
sbb
inc
test
mov
mov
mov
(bad)
aam
popa
les
xchg
xchg
aam
adc
fwait
jb
cdq
sub
add
ret
mov
dec
punpckhwd
dec
cld
out
xchg
and
pop
cwde
nop
test
sub
rol
push
nop
aam
sbb
aad
gs
lea
add
add
retf
xchg
loope
lods
(bad)
xor
jge
mov
add
inc
mov
loop
pusha
dec
cmp
nop
ss
adc
mov
inc
loope
mov
xchg
mov
arpl
std
xchg
sbb
and
cmp
push
je
test
jnp
push
add
pop
cmp
mov
loop
or
cmps
mov
std
cwde
push
icebp
or
and
mov
inc
test
dec
sub
pop
pop
sub
push
js
nop
sbb
adc
icebp
push
mov
mov
sub
iret
test
jne
fild
jecxz
dec
push
xchg
ins
push
shl
xchg
xlat
mov
mov
sub
or
arpl
inc
stos
ja
iret
inc
test
cld
push
daa
mov
cmc
push
push
xor
sub
les
jle
das
and
push
cmp
fidiv
mov
dec
dec
mov
mov
sub
aam
jg
push
xchg
push
fcom
sub
loope
aad
ins
add
xor
cmp
xchg
and
push
cdq
mov
or
bound
gs
int
pminub
fdivp
adc
call
xchg
adc
arpl
pop
push
repnz
sbb
cmps
push
mov
int
adc
inc
xchg
push
mov
push
cmps
shl
fsqrt
fist
fwait
jl
mov
add
fsubrp
test
push
mov
or
cdq
iret
cs
sbb
aaa
setge
cmp
shl
add
mov
into
xor
jns
sub
ret
rcr
not
mov
mov
and
add
sbb
(bad)
ins
out
enter
loope
push
mov
pop
mov
cmc
push
js
mov
push
lahf
pop
push
cmp
jno
dec
out
dec
adc
scas
gs
cwde
lods
sub
xlat
sbb
int3
rcr
inc
pop
sub
push
jno
add
jo
mov
in
add
lods
shr
xor
fistp
add
adc
push
jno
xchg
mov
out
retf
lods
cld
adc
pop
rcl
push
or
in
call
sbb
lods
aad
mov
fstp
add
ds
bound
int
retf
retf
xchg
shr
in
test
adc
ror
sub
add
loope
repnz
adc
xor
lods
sub
pop
sbb
jo
cmp
cmps
pop
fadd
sbb
fwait
sub
xchg
add
mov
or
mov
and
in
fidivr
addr16
shl
lods
jle
test
ss
mov
in
mov
sbb
push
sub
pop
mov
in
enter
push
repz
push
out
push
pop
jo
push
push
mov
jne
fsubr
test
sti
dec
rcr
je
mov
cmc
add
jbe
jecxz
add
cmps
mov
rcr
sahf
pop
and
jle
xchg
cmps
in
enter
ss
mov
mov
jnp
mov
fsubp
fcmovnbe
sub
loopne
jae
push
xor
add
scas
repz
jns
sar
push
jno
sub
andnps
add
movs
dec
icebp
jb
fs
mov
inc
xor
sar
and
nop
sub
jbe
and
xor
inc
outs
xchg
ja
xchg
jmp
stos
pop
ins
push
xor
ds
(bad)
(bad)
jge
daa
aas
pop
daa
mov
xor
mov
cmp
je
add
(bad)
cmc
pop
(bad)
je
push
ror
cld
cmps
call
jns
scas
je
ds
cli
push
leave
mov
sub
pop
push
daa
aad
loope
xchg
adc
ficomp
lea
push
add
loope
inc
ins
(bad)
xchg
fcom
pop
add
stc
cmp
fadd
or
add
cdq
push
xchg
push
popa
lahf
jae
pop
(bad)
int3
aas
mov
pop
fiadd
pop
dec
aaa
add
push
inc
pop
(bad)
(bad)
sbb
mov
std
lds
pushf
js
push
or
lea
push
cs
jb
add
stc
jnp
push
stos
fwait
dec
fisttp
call
pop
movs
lods
and
jbe
xor
stc
cmps
ins
dec
adc
sub
out
in
xlat
rcr
cmp
ins
add
jne
in
push
(bad)
int3
pop
pop
jno
jmp
outs
cmp
jo
xchg
sbb
retf
mul
add
lods
lods
push
rcr
repnz
test
push
aam
lock
outs
or
fnstcw
pop
and
in
xor
cmp
inc
jno
loopne
(bad)
xchg
test
cmp
jno
arpl
push
not
xchg
test
mov
jns
mov
xchg
mov
mov
sub
cld
jge
les
leave
movs
into
adc
out
aaa
mov
arpl
imul
pop
fldcw
loop
leave
mov
scas
xchg
in
cmp
adc
jne
nop
popa
mov
hlt
pop
inc
pop
ds
adc
stos
nop
mov
mov
add
cmps
jns
mov
test
cli
mov
mov
in
in
in
ror
dec
int
sbb
push
test
push
dec
test
pop
inc
jno
mov
xlat
lods
pop
cmps
test
jmp
jecxz
bound
in
sbb
add
or
or
push
adc
sahf
push
icebp
mov
arpl
pop
push
jbe
int
adc
rcl
test
or
dec
(bad)
sbb
mov
push
jmp
cmp
or
dec
daa
push
aam
bound
nop
popf
cmp
outs
scas
mov
cmps
xor
sub
pop
cmp
mov
xor
popa
aam
dec
adc
shl
in
cld
mov
idiv
mov
pop
or
add
or
pop
inc
add
sbb
icebp
push
mov
jne
xchg
mov
stos
cmp
sub
(bad)
xor
jno
mov
addr16
sbb
rol
nop
mov
push
xchg
(bad)
ds
sbb
mov
ins
int
arpl
in
scas
(bad)
or
sbb
in
mov
jmp
(bad)
cdq
je
int3
cli
pop
lods
pop
mov
push
adc
inc
neg
mov
fsub
mov
pop
pop
test
das
pop
push
cdq
iret
pop
and
jb
bsf
cmc
mov
(bad)
repz
nop
in
ret
sub
push
out
pop
scas
mov
dec
arpl
inc
inc
sub
lods
push
xchg
jecxz
add
psubq
and
sub
mov
xchg
inc
shr
cmp
out
mov
add
popf
xchg
and
xchg
adc
mov
mov
xor
jl
cs
and
add
mov
stos
jmp
push
or
(bad)
push
mov
neg
les
(bad)
ins
pop
adc
xlat
ss
repnz
jns
ds
push
add
ss
xchg
test
push
pushf
and
xchg
xchg
mov
loope
in
shl
pop
(bad)
mov
inc
retf
(bad)
pop
outs
dec
shl
call
pop
imul
std
and
xchg
loopne
cmc
push
sahf
add
xor
cdq
outs
xchg
ja
xchg
stos
sub
into
inc
mov
xchg
enter
pop
scas
add
nop
mov
bound
scas
sbb
in
shr
rcr
inc
push
movs
pop
add
rcr
mov
jle
cmps
jae
fdecstp
std
mov
jae
out
pop
cwde
ds
jmp
nop
arpl
mov
out
sub
xchg
test
aam
mul
jle
cwde
mov
call
mov
pop
xlat
pusha
test
pop
mov
icebp
cli
(bad)
movs
xchg
int
aad
movs
xor
cmps
adc
push
xchg
test
pop
loop
jp
test
ja
ja
pop
cmc
mov
xchg
cmc
pop
bound
xchg
or
and
mov
popa
ror
ret
sbb
cmc
fisub
dec
mov
inc
sub
adc
mov
push
daa
push
js
fnstcw
cmovb
jg
sbb
sub
out
cwde
pushf
jnp
int
push
or
sub
xor
loop
add
xchg
sbb
and
arpl
push
popa
push
shl
xor
cmps
cmp
out
add
aaa
inc
jle
jb
out
es
cmp
ja
popf
fs
(bad)
int
add
pop
sbb
push
in
(bad)
shl
inc
add
lds
cld
xchg
xchg
cmp
aad
aas
int3
ss
lods
iret
outs
test
xchg
stos
dec
push
inc
cmps
aad
aad
je
mov
dec
jg
nop
jle
dec
adc
ins
cmps
cmc
push
xor
xor
push
adc
mov
cdq
jb
cmc
iret
popf
aad
(bad)
pop
dec
or
xchg
sub
ins
mov
jb
out
sub
popa
call
dec
call
push
sahf
out
cmc
xchg
mov
fst
(bad)
(bad)
sbb
fst
sti
pusha
push
out
mov
retf
cmp
jns
dec
je
loope
cld
mov
lods
imul
dec
icebp
or
xchg
cmps
dec
rcl
mov
ds
in
pop
sbb
xor
mov
mov
jo
mov
call
sub
adc
pop
aas
mov
jno
sar
repnz
pop
call
out
(bad)
int
shl
shr
sub
sub
pop
test
xchg
push
sub
jns
dec
fdivr
mov
arpl
cmp
or
push
cmp
bswap
adc
and
mov
cmp
lods
sahf
cmp
push
je
dec
mov
sbb
xchg
popf
js
aam
xor
fs
dec
adc
mov
(bad)
test
outs
iret
xchg
std
cli
jns
xchg
sbb
mov
pop
xchg
jl
(bad)
jg
and
aad
jae
addr16
inc
imul
fsubr
pop
sub
cwde
pop
std
mov
dec
test
mov
and
sbb
jne
pop
in
mov
mov
movups
in
loope
fwait
imul
inc
fs
scas
mov
(bad)
mov
js
dec
rol
loope
push
pop
jnp
aaa
mov
mov
leave
dec
jns
mov
sub
cwde
fnstsw
xchg
add
sub
fisub
popf
mov
loop
xor
mov
les
(bad)
add
cmp
ret
mov
stos
shr
pop
sub
(bad)
cmps
mov
push
mov
cmp
jge
sub
pusha
ror
push
jmp
clc
lds
lea
sub
pop
ss
fild
and
daa
cmp
mov
(bad)
ins
dec
mov
les
cmc
dec
and
or
push
inc
sub
and
adc
mov
hlt
jge
popf
jl
and
ins
ret
mov
in
loope
dec
fwait
adc
pop
pop
fmul
cwde
dec
add
mov
sbb
pop
test
adc
sahf
cmp
(bad)
mov
jl
and
das
sbb
imul
push
cmps
xchg
loopne
cmp
jno
test
xlat
data16
sti
cs
popf
aam
sub
mov
imul
xchg
lds
push
mov
mov
mov
mov
imul
(bad)
pop
or
pop
clc
fild
mov
jnp
in
xchg
jb
inc
mov
mov
push
or
aam
push
pop
js
out
(bad)
retf
or
sbb
lods
aas
cdq
in
aas
push
mov
ins
pop
int
addr16
test
in
jnp
leave
ins
mov
xchg
jbe
inc
xor
cmp
push
mov
pop
adc
and
jle
and
arpl
inc
or
push
sub
xor
not
pop
cs
iret
movs
ins
sti
inc
fisub
dec
inc
add
icebp
mov
xlat
scas
push
or
movs
je
xchg
dec
cmp
in
pushf
das
adc
xchg
jmp
mov
pop
sbb
sub
push
sub
outs
cmp
add
inc
jnp
and
cmps
dec
mov
in
add
mov
repnz
push
xchg
jle
(bad)
mov
jnp
adc
sub
jno
pop
test
(bad)
shl
mov
jge
add
std
push
out
add
xor
out
repnz
jae
sub
pop
sbb
pop
xor
push
xlat
xlat
pop
mov
mov
pop
mov
xchg
push
mov
sbb
lods
(bad)
push
sbb
aaa
cmps
lock
lods
cmc
add
lea
push
(bad)
retf
imul
sahf
cld
mov
mov
dec
or
inc
jno
cld
xlat
loope
cmps
mov
punpcklwd
xor
add
pop
retf
xchg
cmp
xchg
cmp
leave
pusha
push
jbe
mov
or
push
rcr
dec
pop
xor
sbb
ja
jmp
data16
sbb
pop
push
idiv
mov
xor
sub
mov
out
call
bound
and
and
out
je
outs
pop
mov
xchg
mov
repnz
out
cmovno
test
ret
in
shr
push
out
jno
cmp
fninit
call
jo
(bad)
lock
ja
loope
xor
repz
test
or
into
fucom
add
cld
in
jmp
cmp
sahf
inc
cmps
cmps
fwait
ds
xchg
sbb
adc
sbb
sbb
mov
sahf
cwde
lock
(bad)
(bad)
add
add
inc
sub
vmwrite
jbe
das
pushf
cmp
in
data16
mov
dec
mov
pop
test
jbe
fxch
push
sbb
mov
pop
clc
pop
push
xchg
shr
ret
sahf
mov
xor
ror
dec
ds
js
(bad)
fwait
or
inc
retf
jne
cld
inc
pop
dec
and
out
mov
xchg
pop
lds
sub
or
int
js
dec
retf
pop
push
xchg
inc
mov
inc
and
lea
push
and
push
sub
(bad)
dec
into
xchg
jmp
push
mov
and
jnp
cdq
lahf
je
dec
xor
rcl
adc
pop
inc
inc
sar
gs
push
dec
jg
jbe
bound
fs
inc
mov
mov
adc
xchg
aaa
in
jae
sbb
sbb
add
push
mov
into
js
fst
cli
stos
pushf
push
pusha
push
push
icebp
pop
stc
mov
push
mov
adc
stc
mov
jb
dec
add
push
ret
cmp
sub
retf
aad
and
sub
repz
sti
mov
sbb
or
xor
add
add
out
inc
jp
out
dec
pop
fist
dec
pop
adc
bound
cdq
cwde
xchg
(bad)
mov
inc
fwait
cmp
and
jmp
enter
cmps
retf
shr
clc
stc
adc
repnz
and
arpl
retf
pop
add
sbb
jle
sbb
mov
inc
jecxz
add
pop
jne
pop
inc
mov
test
popf
push
or
mov
adc
fucompp
sbb
xlat
sub
dec
push
hlt
pop
xchg
cmp
cmc
imul
and
push
and
xchg
jg
push
sub
into
int
and
adc
loop
in
sub
aam
mov
push
xchg
fst
scas
push
(bad)
aas
dec
mov
or
cmps
test
inc
dec
jle
sahf
dec
cdq
shl
cs
sti
dec
loopne
mov
xor
add
movs
sub
pop
and
push
jae
mov
movs
in
fwait
or
add
adc
pop
lods
les
jnp
mov
scas
and
mov
lea
ins
push
or
pusha
stos
fiadd
loop
imul
push
inc
xchg
or
fucomip
stc
mov
ds
in
mov
xor
fsubr
in
loop
push
and
pop
push
(bad)
je
or
mov
pushf
leave
jae
rol
mov
out
pop
cdq
mov
out
jecxz
jle
imul
jg
push
test
pusha
adc
push
xchg
and
fwait
addr16
jmp
xor
cmp
mov
rol
xchg
push
(bad)
and
stos
push
inc
ds
mov
cwde
rcr
shr
inc
fld
mov
push
or
(bad)
outs
push
lea
sub
cli
adc
(bad)
ins
fisubr
(bad)
mov
or
dec
xchg
sbb
mov
xor
mov
mov
or
lods
(bad)
inc
push
sub
pop
stc
arpl
and
pop
scas
xor
jb
jo
dec
(bad)
repz
push
jecxz
push
jmp
xchg
imul
mov
push
(bad)
jecxz
mov
mov
sub
aad
cwde
pop
pop
push
and
stos
outs
enter
push
(bad)
push
scas
mov
sbb
lds
adc
inc
inc
imul
adc
sbb
sub
push
mov
push
js
push
pusha
jle
push
xchg
mov
stos
push
add
nop
sbb
cmp
ins
xor
cmps
(bad)
dec
sub
shl
je
iret
mov
sub
stos
(bad)
mov
aaa
scas
loopne
xor
(bad)
out
jge
mov
mov
xor
mov
sbb
jb
in
sbb
mov
sbb
mov
dec
xor
lods
ficomp
ins
retf
ins
sub
jbe
sub
cmp
jbe
fist
add
and
ror
stos
shr
pop
dec
ins
jne
add
push
cmp
rcr
xchg
(bad)
stos
xlat
mov
jmp
xchg
and
cmp
add
sbb
hlt
scas
test
mov
jecxz
out
jl
movs
mov
popa
xchg
dec
add
mov
sti
mov
cmp
fs
pop
nop
xchg
or
call
stc
imul
shr
shr
outs
add
xor
push
dec
pop
(bad)
int3
jb
cmp
jmp
rcl
clc
je
popa
xchg
inc
cs
aaa
es
xchg
mov
inc
mov
mov
sub
cmps
cmc
and
xor
ds
ja
or
pop
sub
xor
cmps
(bad)
and
xor
mov
sub
adc
pop
icebp
dec
push
jnp
xchg
lods
inc
das
out
ss
gs
mov
cmp
jo
fld
mov
lods
sahf
in
aad
xchg
jmp
sbb
sbb
xchg
leave
add
xor
cmp
cmps
add
test
enter
loop
inc
out
push
fwait
scas
aas
test
sar
or
xchg
dec
jbe
push
out
adc
mov
jecxz
inc
cmp
cmp
adc
test
dec
in
aaa
in
cmc
dec
mov
ret
or
(bad)
scas
sar
leave
enter
pushf
movs
fsubr
das
lea
or
(bad)
dec
ss
gs
in
ins
int3
pop
jecxz
jg
lock
mov
out
add
pop
(bad)
int
retf
add
cmp
xor
push
es
jb
pop
test
inc
out
arpl
imul
in
pushf
sbb
sbb
aam
aam
imul
mov
jns
inc
mov
sahf
jmp
push
jmp
int
jg
dec
jg
mov
mov
ror
in
aaa
mov
arpl
cmps
adc
lds
iret
mov
ss
pop
test
hlt
sti
xlat
mov
push
addr16
fisubr
aaa
jle
rol
xor
sub
imul
mov
inc
jmp
mov
int3
cmp
sub
cmp
cwde
cmp
imul
adc
in
inc
mov
adc
mov
lea
xor
mov
cmp
jg
dec
mov
or
pop
in
clc
dec
pop
enter
sub
cdq
push
in
mov
dec
mov
sbb
nop
lea
push
xchg
xchg
call
fwait
cdq
pop
or
les
cmp
mov
lahf
push
push
mov
retf
out
and
imul
jo
gs
push
push
pop
mov
pop
xchg
mov
ret
pop
adc
and
push
sbb
push
(bad)
mov
test
cmp
aaa
and
daa
outs
add
xchg
push
mov
push
xchg
or
sahf
mov
aaa
inc
sub
sub
into
xchg
jl
mov
fwait
sbb
push
or
or
stc
pop
ror
jnp
and
test
jnp
and
icebp
sahf
mov
std
call
data16
cld
or
dec
jb
sbb
lea
xchg
iret
xor
loop
sbb
ins
pushf
sub
lock
stos
sbb
icebp
pminsw
daa
lods
add
mov
dec
mov
in
sub
jbe
mov
cmp
pop
push
pushf
fs
(bad)
mov
pop
pop
sbb
mov
frstor
inc
xchg
in
or
fwait
adc
mov
or
xchg
pop
lods
out
retf
cmp
xor
das
cmp
mov
or
pop
jae
mov
scas
jg
xchg
stos
adc
xchg
mov
repz
mov
inc
cwde
sti
or
ret
sub
jmp
pusha
cwde
pop
in
mov
inc
adc
aam
in
fsub
mov
inc
xor
inc
and
jno
cmp
add
aas
mov
aaa
aad
mov
and
push
or
inc
mov
adc
adc
mov
psubw
retf
test
cmc
sub
pop
ret
mov
ret
sbb
inc
js
ins
sbb
gs
mov
push
test
and
and
xor
jns
mov
push
jle
test
lea
int
repnz
cmp
xchg
and
push
mov
fidivr
mov
and
gs
(bad)
cmp
sahf
pop
sub
lods
ror
out
mov
inc
addr16
mul
sbb
dec
inc
mov
js
mov
cmp
pop
cmp
ins
pushf
in
or
add
aas
repnz
aad
push
sbb
inc
dec
stc
in
pop
jno
mov
push
mov
jae
push
sahf
cmps
sub
daa
mov
in
mov
and
push
jo
sbb
icebp
rcr
xchg
sub
jo
int3
fiadd
stc
mov
call
push
pop
out
pusha
inc
mov
pop
jnp
or
push
outs
shld
xchg
out
sbb
xor
push
xchg
mov
adc
mov
retf
cmp
inc
mov
arpl
and
mov
call
xchg
imul
(bad)
imul
mov
rcl
jle
mov
mov
outs
ins
push
jmp
out
es
lods
jmp
call
cmc
push
fidivr
stos
xor
xor
pop
cs
mov
fdiv
into
xor
imul
dec
or
dec
scas
xor
pop
test
push
popa
imul
fs
test
jecxz
mov
movs
mov
clc
sub
xchg
aaa
jmp
push
repz
bound
jmp
pushf
mov
in
dec
mov
repnz
sbb
es
jecxz
pop
push
pop
ror
inc
in
xchg
add
push
loopne
dec
mov
das
outs
and
mov
adc
add
icebp
lahf
loopne
fsub
jae
(bad)
mov
fcom
stos
cmp
inc
outs
popa
mov
sub
je
lods
fidivr
and
adc
or
add
sti
ja
ficomp
(bad)
xlat
jmp
scas
ror
daa
in
jle
adc
adc
ret
mov
dec
out
fbstp
in
test
int
fucomi
jl
and
outs
hlt
dec
movs
ds
clc
xchg
mov
dec
or
mov
outs
mov
pop
or
enter
stos
ret
fdiv
jb
jp
xchg
jl
sub
mov
cmp
and
add
push
fadd
call
imul
pop
aas
in
jecxz
(bad)
lock
popf
jmp
mov
out
icebp
fisub
es
mov
sbb
pop
mov
or
inc
pop
sbb
mov
mov
mov
pusha
mov
add
icebp
jl
adc
loopne
aaa
mov
and
ret
aam
dec
clc
int
movs
pop
add
sub
cmps
js
lods
shr
test
or
retf
adc
fstp
sub
fwait
lahf
jb
cmp
rol
aad
cmp
jl
mov
cdq
jge
ja
test
in
inc
lea
rcl
lods
aad
aad
cwde
xor
xor
or
cmova
mov
and
aas
mov
lds
fisttp
mov
fstp
mov
add
sub
stc
and
cmp
and
sti
mov
lods
sbb
daa
jl
or
add
cmp
inc
pusha
hlt
mov
pop
mov
pushf
aad
jno
call
stos
sbb
sti
jmp
test
int
mov
je
in
jae
mov
lock
push
sbb
xchg
mov
(bad)
sbb
test
and
cmp
aad
sbb
xchg
jle
sub
scas
movs
cmp
pusha
pop
sbb
cdq
shl
(bad)
jp
inc
repnz
mov
or
sbb
pop
aaa
and
or
loope
les
lods
dec
jg
ret
test
push
fcmovne
push
adc
dec
iret
cmp
pusha
rcr
aam
arpl
lahf
mov
push
adc
mov
call
ficom
adc
inc
push
icebp
push
stc
mov
ror
test
in
sub
sub
cmc
push
jle
in
lods
lods
std
and
add
sti
or
and
cmp
jecxz
and
xor
pop
sbb
cmp
fiadd
pop
fnstcw
jmp
ret
lea
inc
cmc
jg
or
out
scas
nop
mov
and
repnz
jl
out
ror
cmp
in
mov
loopne
loope
adc
cmp
scas
(bad)
jno
mov
pop
add
push
cmp
int3
or
ins
ret
cmp
je
inc
movs
into
stc
scas
fist
add
call
add
test
scas
or
sub
sub
pop
cmp
xor
(bad)
fidiv
mov
and
inc
retf
sub
cmc
dec
xor
int
mov
in
(bad)
aad
imul
ins
test
mov
lahf
or
or
add
mov
pop
clc
sbb
xchg
mov
aam
pusha
shl
(bad)
push
add
xlat
rep
or
outs
pushf
test
mov
aam
in
pop
mov
inc
mov
and
fdiv
cmps
sbb
lds
inc
inc
gs
cld
ret
out
popf
sbb
rol
ror
mov
(bad)
or
cmp
fwait
pusha
retf
pop
cmc
lock
cld
xchg
cmp
push
push
test
repz
push
push
push
jnp
mov
push
xor
(bad)
and
xchg
retf
pop
sub
je
ds
add
dec
inc
sbb
lahf
fs
test
pop
out
and
or
(bad)
call
mov
mov
sub
fisttp
cmp
popf
mov
in
xchg
dec
data16
push
imul
scas
jmp
xor
in
mov
mov
stos
test
pusha
xchg
mov
cwde
cmp
cmp
dec
int
mov
enter
hlt
mov
sbb
mov
jp
push
jne
sub
pushf
aam
pop
mov
icebp
mov
imul
loop
sbb
rcr
xchg
mov
mul
stc
add
push
sbb
(bad)
pop
mov
sar
jae
mov
test
outs
in
(bad)
mov
push
sahf
mov
sub
call
inc
(bad)
ins
cmp
rdmsr
pop
dec
push
out
imul
jl
pop
pusha
pop
(bad)
pop
aas
mov
xor
call
xchg
jmp
push
mov
xor
lods
stc
pop
sub
and
out
mov
cmp
add
test
sar
xchg
sbb
sbb
xchg
or
adc
(bad)
mov
xchg
test
mov
xchg
jnp
push
fcmovu
movs
dec
movs
int3
xor
adc
mov
aaa
adc
jae
cmps
add
sub
loopne
ds
jae
or
in
jg
cmc
shl
outs
and
pop
cmp
add
test
fisub
push
nop
addr16
cmp
mov
push
jge
xchg
dec
adc
sahf
mov
popf
jae
add
das
dec
aaa
mov
rcr
imul
sbb
jbe
mov
hlt
xchg
lahf
mov
in
and
popa
push
mov
sti
dec
push
fild
(bad)
imul
and
adc
xor
cwde
mov
scas
(bad)
loop
loope
xchg
test
inc
popf
xor
fisubr
cmp
mov
retf
xor
cmps
arpl
lods
xchg
push
adc
lock
and
leave
fbstp
jbe
pop
ja
mov
pop
int
push
lods
arpl
dec
jmp
mov
pop
sub
adc
mov
jmp
inc
xchg
ror
aaa
mov
shl
cwde
jbe
mov
add
cld
pop
push
out
mov
mov
lea
fisubr
or
push
push
jle
(bad)
smsw
xchg
sub
cmp
ss
cmp
xchg
push
gs
inc
add
aaa
dec
jp
ds
int
in
inc
jne
dec
and
lods
pop
add
pusha
gs
mov
ins
sbb
cmp
jle
pusha
leave
fistp
daa
mov
inc
fsub
into
ss
xor
test
ror
sahf
mov
cld
cmp
ficomp
sahf
sti
xchg
pop
dec
movs
jnp
mov
sbb
pusha
shr
gs
sbb
add
int
pop
push
sbb
das
xchg
and
mov
mov
lods
popf
jl
xlat
jmp
cmp
dec
mov
icebp
mov
adc
ret
xchg
push
cmc
xor
repz
push
pop
mov
sbb
retf
dec
xchg
cmp
xor
es
xlat
xchg
xchg
jns
fldcw
movs
not
icebp
(bad)
out
es
mov
(bad)
(bad)
call
ffreep
xchg
jg
cmp
dec
mov
inc
fist
add
add
dec
sub
sbb
test
sub
push
push
dec
mov
lock
arpl
jg
fisttp
(bad)
aad
addr16
and
push
jecxz
in
dec
jae
jp
fidiv
xchg
xor
mov
xchg
pop
(bad)
lahf
jbe
test
inc
pop
mov
mov
add
push
sbb
pop
xchg
ja
leave
adc
sbb
sub
int3
push
inc
and
adc
cmp
mov
into
and
movs
adc
aas
mov
dec
in
retf
xchg
out
(bad)
mov
add
call
push
jnp
aas
mov
stos
mov
xor
mov
inc
or
xor
outs
lods
jns
mov
(bad)
mov
mov
push
(bad)
std
call
push
repz
add
xchg
inc
aas
cmp
jmp
mov
mov
(bad)
(bad)
xor
mov
inc
add
call
mov
jbe
icebp
push
push
mov
xor
in
xor
outs
ret
pop
in
xchg
add
xor
xchg
pop
and
mov
test
cmc
cmc
jg
ror
loopne
mov
mov
mov
add
out
(bad)
inc
sbb
test
and
xor
cmp
mov
inc
leave
adc
(bad)
(bad)
pop
dec
mov
(bad)
push
loope
adc
das
cmovne
iret
lods
lea
xchg
aas
sar
xor
mov
jecxz
inc
daa
push
cmp
mov
sbb
shr
jmp
ss
rcr
xchg
mov
inc
add
add
xlat
pusha
pop
push
cmps
mov
xchg
mov
icebp
daa
mov
addr16
xchg
into
push
arpl
fnstenv
(bad)
push
sbb
xchg
aas
aas
push
xor
cld
fst
pop
xchg
jmp
inc
bound
dec
test
ins
sub
test
jne
pop
adc
xor
mov
repnz
sbb
test
mov
and
gs
cdq
(bad)
(bad)
add
pusha
mov
(bad)
loop
xchg
fidiv
enter
movs
cwde
cwde
pop
xor
jnp
mov
push
inc
push
xor
push
loope
ins
cmp
jmp
xor
cmp
adc
inc
cmp
ret
stos
or
cmp
sub
xlat
loop
data16
aam
es
mov
sub
gs
(bad)
(bad)
(bad)
pop
retf
loope
jl
popa
jmp
mov
test
mov
cmc
mov
mov
and
rcl
enter
jecxz
pop
inc
sub
sahf
mov
sub
or
sbb
mov
push
arpl
lahf
retf
cmp
pop
hlt
bound
(bad)
sbb
dec
mov
stc
stos
idiv
adc
sub
and
xchg
leave
aas
sbb
int3
(bad)
jno
inc
lahf
test
call
xlat
arpl
sbb
jnp
rol
xor
sti
shl
sub
out
cmp
mov
xor
loope
mov
popa
fisub
stos
leave
sbb
mov
addr16
adc
shl
ja
push
mov
cwde
add
add
fadd
jle
jnp
retf
or
inc
repz
pop
retf
movups
sbb
cli
and
cmp
test
jae
outs
stos
fs
push
xchg
mov
or
jp
push
rol
sbb
repz
push
mov
aad
jle
xor
ins
dec
and
push
mov
fwait
lods
sar
sti
mov
pop
xor
(bad)
aam
and
les
mov
clc
xor
adc
(bad)
lds
retf
dec
sbb
or
(bad)
mov
xor
mov
sub
sbb
repz
repz
xchg
push
jmp
dec
jns
pop
mov
push
nop
cmps
popa
jno
in
pushf
adc
(bad)
inc
nop
add
inc
inc
ds
and
(bad)
fisttp
mov
mov
inc
std
xor
xor
cmp
test
dec
push
adc
xor
inc
jecxz
call
out
sub
dec
xchg
ss
or
pusha
jp
leave
mov
and
jno
pop
int
(bad)
ja
cmp
jmp
mov
call
add
mov
lahf
mov
(bad)
sbb
enter
push
sbb
lock
rol
gs
add
cmp
sbb
in
enter
lahf
xlat
movs
sub
enter
push
scas
mov
movs
fnstenv
aas
push
rcr
cmp
pop
ficomp
fsub
and
dec
pop
cmps
out
mul
rcl
adc
(bad)
jg
(bad)
fld
cmp
sub
or
ror
dec
ins
mov
cwde
cld
shl
push
pop
or
cld
cli
inc
(bad)
ret
jmp
adc
adc
lock
pushf
jb
shl
movs
cdq
xchg
iret
gs
push
dec
push
js
call
jl
test
fimul
mov
pushf
push
mov
ds
push
aad
pop
inc
and
cld
dec
dec
jecxz
xor
xchg
mov
fld
pop
pop
fbld
xor
js
pop
mov
(bad)
add
add
cmp
mov
enter
jmp
jle
fdivp
lahf
mov
shl
xor
ins
aam
adc
mov
out
test
std
jbe
ins
jno
(bad)
int
fs
test
push
pop
cmps
icebp
or
push
ins
repnz
inc
add
lods
jmp
push
mov
xor
popa
fld
inc
icebp
xor
and
xor
std
out
push
scas
mov
mov
test
push
mov
jnp
push
hlt
mov
test
inc
mov
pop
pop
mov
test
jmp
sbb
fiadd
cdq
sub
cmp
ror
mov
ret
jno
cmp
in
jp
and
out
mov
sub
lock
xchg
mov
mov
(bad)
push
xchg
sub
mov
jge
(bad)
jns
mov
dec
scas
imul
sub
jb
mov
cmps
loope
enter
or
jne
xor
out
shl
jle
scas
fistp
xor
or
push
or
cmc
test
nop
mov
mov
jbe
jmp
adc
sub
ins
iret
lock
fdivr
test
mov
imul
xchg
or
lahf
idiv
in
repz
daa
lods
addr16
das
dec
int3
enter
jge
pop
retf
sub
ds
gs
adc
xor
fwait
arpl
retf
push
inc
dec
retf
mov
add
nop
popf
push
sahf
stc
jno
mov
aaa
in
lods
dec
test
popf
xchg
push
in
dec
(bad)
cmp
pop
xchg
hlt
push
in
sbb
pminsw
jae
xor
mov
cmp
push
shl
loope
cmp
das
scas
imul
sbb
xchg
xchg
icebp
mov
mov
dec
test
mov
icebp
mov
stc
js
dec
push
test
fild
xchg
rcl
imul
ds
pop
pusha
or
aam
mov
xor
mov
bound
pop
pop
or
and
sete
xchg
scas
adc
pop
jmp
repz
mov
or
xor
pusha
stos
mov
xor
push
or
cmp
(bad)
into
jmp
cmovg
xchg
ficom
aad
test
fstp
ins
jg
fstp
jno
popf
xlat
inc
cmps
mov
movs
les
(bad)
jne
or
mov
sbb
mov
and
sub
sub
jns
(bad)
add
lock
stos
dec
rcr
sub
repnz
test
(bad)
cmp
outs
ins
pop
cld
jmp
jmp
and
dec
mov
sbb
aaa
xchg
xchg
movs
nop
icebp
adc
and
lods
(bad)
mov
add
pop
lods
shl
stos
sub
pop
jmp
jl
xchg
retf
adc
jp
push
push
add
push
jb
adc
push
jns
adc
mov
int
ret
mov
inc
leave
xchg
push
test
popa
and
inc
jl
add
mov
aad
jo
mov
xor
icebp
bound
cld
push
jb
xchg
ret
cli
les
fild
test
push
jg
mov
ins
fist
sahf
jl
out
dec
dec
adc
inc
fidivr
jae
aad
in
dec
adc
and
inc
rcl
mov
je
xchg
adc
jmp
push
shl
xchg
and
mov
pop
pop
dec
cdq
and
push
mov
cmp
mov
mov
cmp
sub
sbb
cdq
add
push
aad
scas
shl
inc
xchg
call
sbb
xlat
pop
push
jge
cmp
loopne
outs
and
cmp
clc
mov
mov
and
jg
push
sbb
hlt
lods
add
sub
cmp
mov
mov
and
pop
mov
sbb
mov
add
pusha
pop
rcr
push
mov
sar
cmp
xchg
mov
sbb
rol
push
cdq
and
inc
test
pop
test
pop
jo
pop
out
cmp
mov
mov
adc
jb
aas
(bad)
cmps
sahf
mov
jmp
sar
test
push
fs
mov
pop
mov
jno
jae
call
jmp
or
ds
aad
adc
test
push
pop
call
in
call
retf
xor
and
enter
inc
call
fcomi
adc
push
repz
mov
imul
fwait
ret
lods
add
cwde
pop
and
mov
gs
mov
daa
in
or
mov
js
in
clc
retf
sbb
or
dec
aaa
arpl
dec
jp
cmp
jne
jae
jbe
jae
inc
sar
push
push
lds
push
cmps
and
pop
data16
xor
cld
lods
stos
jg
pop
les
cmp
movs
jge
sar
out
or
cli
sbb
call
adc
nop
scas
push
jns
mov
xchg
sub
pop
outs
test
(bad)
jb
cmp
jo
xor
and
dec
aad
dec
jmp
ds
test
xor
(bad)
push
enter
or
js
xor
fdiv
cwde
inc
arpl
jno
ss
mov
rcl
in
scas
dec
sti
jle
cmp
(bad)
adc
out
sub
dec
gs
sub
or
sub
(bad)
xchg
shl
sub
adc
in
dec
jb
dec
push
dec
repnz
jne
sbb
add
data16
retf
push
ret
push
push
sbb
pop
adc
xor
mov
mov
inc
xchg
dec
fisubr
aas
ret
retf
xchg
pushf
pushf
aas
ror
scas
dec
cmp
lea
(bad)
or
mov
call
adc
retf
test
je
dec
sbb
push
test
shld
lock
fadd
xchg
mov
mov
fiadd
pop
cmp
(bad)
mov
or
pop
inc
imul
into
ss
cmps
mov
adc
into
test
cmp
add
or
mov
push
(bad)
ss
movs
(bad)
pop
and
sbb
bound
aam
sti
xchg
fs
jnp
xchg
sbb
xchg
in
out
lods
imul
jb
cmps
inc
jmp
stos
xor
jb
push
sub
xchg
fstp
mov
jno
jns
loopne
je
xchg
out
(bad)
adc
aas
pushf
stos
ja
mov
push
xchg
gs
adc
mov
(bad)
ror
adc
push
pop
pusha
sub
and
mov
adc
jp
lea
ins
pop
lock
mov
fxam
test
dec
loopne
mov
xor
xlat
sbb
adc
dec
into
shl
jp
jb
cmp
mov
dec
ret
cmp
out
(bad)
test
xor
stc
lods
add
aam
inc
and
xor
out
xor
les
mul
fucomp
out
into
into
retf
adc
popf
add
das
cmp
jmp
test
popf
adc
cmp
mov
in
push
js
jns
lock
jae
mov
fsubr
shr
or
add
xchg
sbb
arpl
les
pushf
sbb
fmul
push
inc
out
xlat
(bad)
icebp
outs
rcr
scas
inc
pop
jnp
ret
test
cs
cmp
push
test
mov
mov
push
loopne
popf
pop
pop
shl
ret
or
ret
sub
cmp
add
mov
xchg
or
shr
repnz
mov
(bad)
gs
or
nop
cli
out
enter
in
test
ss
dec
and
mov
enter
sbb
mov
sbb
pop
call
sub
movs
test
popf
test
fdiv
xor
sub
mov
adc
jg
add
retf
scas
pop
cli
mov
mov
push
cmp
jle
jle
and
xor
push
push
pushf
mov
out
inc
rol
mov
xchg
(bad)
xchg
xchg
retf
aas
scas
cmp
mov
mov
adc
lods
mov
pop
in
in
or
mov
je
inc
and
or
xor
ss
adc
cmp
jb
push
loope
pop
and
adc
mov
ret
adc
fild
xor
jle
and
movs
call
dec
mov
outs
loope
iret
dec
and
adc
shl
repnz
mov
ins
xchg
xor
(bad)
sbb
fst
repnz
ret
ret
push
pusha
sbb
mov
(bad)
ins
dec
push
or
iret
(bad)
aas
push
sub
imul
add
aaa
jl
test
fbstp
ins
pop
jbe
(bad)
js
mov
fadd
ins
nop
data16
xor
adc
mov
je
test
aam
cmp
not
jb
cmp
add
ficom
xchg
jno
adc
loop
retf
pop
xchg
dec
or
fdiv
jmp
xchg
je
into
(bad)
sti
mov
jb
jb
je
in
movs
inc
dec
int
repz
jge
cs
mov
sbb
cmp
xor
pop
push
pusha
jl
out
pop
dec
rcl
jl
mov
mov
mov
aad
shr
dec
lods
add
call
push
add
mov
xlat
and
mov
out
inc
inc
in
mov
xchg
xlat
or
sbb
ds
cmp
push
push
push
sbb
leave
mov
mov
shr
ss
jle
movs
jmp
cmp
les
repz
push
dec
enter
in
push
stc
mov
mov
xor
mov
sub
gs
xchg
xchg
pop
(bad)
test
cmp
popa
mov
xchg
inc
test
or
clc
xor
(bad)
out
mov
xchg
inc
sbb
dec
ret
out
mov
jmp
xchg
fstenv
jp
shl
mov
push
xchg
pop
sbb
pop
imul
addr16
cmp
pop
les
mov
bnd
scas
scas
out
out
int
cmp
in
stos
aas
xchg
pop
jnp
add
leave
ja
call
retf
cdq
addr16
mov
inc
lods
xchg
popa
sar
fs
call
popa
cld
pop
imul
inc
fs
cmp
fs
jne
daa
scas
retf
inc
mov
jns
enter
int
out
imul
and
mov
sub
cld
and
(bad)
push
add
fidivr
fild
lahf
jl
and
shl
mov
xchg
call
push
addr16
sub
imul
and
add
ds
pop
xor
sub
push
(bad)
enter
push
sahf
pusha
or
(bad)
addr16
daa
lock
out
cmovnp
pop
jae
cmp
aam
pop
mov
hlt
add
ret
gs
retf
jecxz
ror
lahf
mov
in
push
in
daa
out
mov
mov
xor
mov
ins
dec
add
mov
add
jge
arpl
mov
xchg
sbb
inc
pop
loop
loopne
fld
inc
out
(bad)
xchg
xchg
aad
push
imul
sub
imul
in
mov
(bad)
xchg
js
mov
mov
and
aas
aam
das
stos
sbb
(bad)
ror
lds
dec
adc
mov
(bad)
clc
fs
mov
imul
or
mov
in
and
jmp
or
adc
arpl
scas
cld
ret
popa
retf
inc
adc
repnz
sub
call
push
xchg
out
adc
jle
mov
fstp
dec
push
fimul
ret
int
outs
enter
and
jecxz
push
and
mov
jae
adc
imul
in
clc
mov
xor
test
imul
inc
and
es
outs
(bad)
sbb
xchg
shr
xor
jg
daa
cwde
call
xchg
clc
repz
retf
daa
jae
mov
mov
inc
mov
scas
dec
mov
pop
or
imul
lods
test
push
mov
stos
push
xor
jbe
xor
pop
mov
test
xchg
ror
dec
cwde
ret
mov
xchg
xor
(bad)
loope
lea
adc
das
adc
mov
test
outs
xor
inc
aad
fisubr
(bad)
out
jnp
mov
pop
inc
xor
xchg
retf
popf
inc
arpl
pop
fwait
leave
icebp
aad
sub
mov
xor
xchg
and
rol
cmp
sbb
add
cld
xchg
iret
stos
jo
mov
jbe
xor
add
inc
daa
movs
ins
fidivr
mov
jge
xor
test
stc
and
inc
dec
jo
loopne
cs
mov
test
cmp
sti
jb
mov
nop
mov
outs
loopne
pop
popf
loop
fadd
loope
daa
int
stc
pop
xor
or
das
mov
repz
leave
sub
mov
aaa
push
add
mov
das
sub
(bad)
retf
adc
sbb
int
mov
sbb
jbe
xor
adc
dec
retf
shr
jo
ds
push
int
out
fwait
cmps
mov
and
dec
jmp
and
jle
movs
dec
xchg
movs
sub
sub
aas
mov
enter
retf
xor
cmp
popa
sub
xlat
push
pop
out
adc
inc
fsub
mov
aaa
inc
cmps
jg
xor
stos
add
cmp
sar
popf
pop
shr
sbb
(bad)
cmp
cmp
xchg
fimul
clc
sbb
jns
push
mov
(bad)
push
jns
repnz
imul
outs
and
aas
ins
cmp
pop
push
add
cmp
mov
sbb
jl
xchg
pop
mov
clts
or
push
and
sub
jo
pop
fwait
inc
xchg
clc
(bad)
scas
call
sbb
call
stc
jbe
mov
jnp
mov
pop
pop
test
aad
and
ins
ret
out
mov
sbb
or
or
dec
icebp
push
push
jle
icebp
call
out
xor
into
cmps
cmps
rol
dec
mov
adc
(bad)
retf
pop
das
(bad)
xchg
mov
and
leave
icebp
mov
xchg
mov
jge
in
mov
lock
pop
dec
mov
mov
fadd
push
or
fmul
fisubr
je
add
add
mov
xchg
pop
sahf
int3
ret
pop
fild
mov
shl
adc
jg
jge
jns
xchg
mov
movs
sbb
jmp
xchg
icebp
neg
sbb
inc
repz
push
adc
inc
inc
outs
xchg
sub
addr16
bound
adc
iret
mov
push
in
cdq
push
adc
and
bsr
repnz
pushf
ror
inc
mov
mov
std
mov
jecxz
pop
mov
fsubr
mov
cli
inc
jl
cmpxchg
lahf
dec
or
xchg
call
add
adc
mov
push
(bad)
dec
(bad)
sti
mov
add
ret
div
cs
sbb
dec
mov
loopne
or
mov
sbb
sub
and
and
push
cwde
xchg
scas
je
dec
imul
inc
(bad)
adc
stos
mov
lahf
jo
pusha
js
(bad)
adc
repz
push
shl
popf
mov
cmp
inc
cdq
leave
inc
arpl
sbb
jnp
ins
mov
xchg
rcr
fcom
jnp
cmp
shl
xchg
or
les
xchg
pop
xchg
inc
retf
out
jb
or
cdq
iret
shl
les
test
sar
and
mov
jno
clc
fidiv
add
push
pop
ds
cmp
jno
inc
shl
sub
push
mov
popf
xchg
je
mov
movs
outs
jns
jmp
xchg
adc
pop
jl
lds
cld
push
fdivr
mov
jle
sub
popf
adc
xchg
inc
sub
jle
adc
mov
mov
pop
sahf
call
push
adc
loope
pop
and
xor
push
daa
fstp
dec
fld
pop
push
sti
fcmovbe
xor
ret
aad
push
idiv
ins
xchg
in
fucomi
xchg
jecxz
test
and
leave
call
test
not
(bad)
in
mov
int
hlt
sub
cs
arpl
xchg
ja
das
inc
dec
ja
xor
jbe
or
mov
xor
adc
adc
pop
add
loopne
aam
mov
sbb
cmp
or
xor
fwait
div
xchg
jp
retf
into
inc
mov
mov
outs
loope
and
mov
sbb
jns
push
stc
arpl
je
adc
jg
add
push
pop
jecxz
enter
(bad)
jg
enter
call
pop
adc
jecxz
jmp
push
add
inc
mov
sub
retf
add
mov
mov
out
enter
fisub
lods
xor
(bad)
jb
loope
cs
lock
jo
cmp
push
retf
xchg
xor
xor
(bad)
nop
fldenv
outs
xor
inc
cmp
adc
fisub
call
and
movs
fs
dec
stos
mov
repz
push
std
imul
mov
enter
rsqrtps
imul
cmps
lock
xor
mov
sar
sbb
jmp
rcr
mov
mov
jnp
adc
sar
push
xor
sub
clc
popf
xchg
adc
movs
stos
lds
into
cld
sub
jbe
cmp
and
lds
mov
sbb
xchg
xchg
push
dec
mov
mov
popa
sbb
xchg
ret
jns
add
jmp
mov
aas
inc
retf
inc
jnp
inc
gs
inc
cdq
mov
fwait
adc
pop
jle
push
outs
sbb
mov
sub
mov
pop
and
jno
xchg
in
(bad)
retf
xor
pop
jmp
adc
fucomip
push
(bad)
mov
mov
mov
adc
in
or
xchg
ins
push
xchg
sub
fwait
pusha
call
sbb
arpl
jb
arpl
daa
in
push
retf
(bad)
inc
inc
in
jbe
cmp
mov
push
and
inc
div
in
test
inc
lea
xchg
xor
unpckhps
stos
mov
xchg
ds
push
scas
cs
ror
sahf
ins
ins
scas
out
xor
loopne
int3
push
inc
rcr
inc
pop
cdq
cmp
jo
lds
punpckhbw
(bad)
mov
or
scas
sar
ficom
mov
xchg
xor
ss
jp
popf
mul
mov
daa
inc
outs
test
mov
mov
mov
sbb
in
xlat
push
sub
lahf
jno
sbb
daa
call
jae
inc
das
mov
jne
sbb
mov
loop
fist
shl
sbb
scas
jmp
aad
jg
pop
mov
(bad)
bnd
das
mov
sub
jne
in
sub
sub
inc
sub
push
test
jge
or
cmp
std
pop
sbb
lahf
adc
pop
cs
pop
cdq
cmp
shl
push
shl
arpl
xchg
pop
test
or
sahf
rol
inc
pop
data16
mov
scas
pop
inc
data16
fadd
mov
mov
jmp
adc
cld
in
xchg
xchg
mov
push
sbb
fbld
repz
js
mov
sbb
mov
mov
sub
lods
pop
add
or
push
push
add
push
and
inc
add
pop
xor
das
dec
cwde
jmp
mov
dec
lods
xlat
and
and
fbld
pushf
aad
idiv
sub
bound
icebp
repz
pop
or
(bad)
jne
ja
sub
lock
inc
mov
mov
daa
push
sub
jb
push
jmp
sub
scas
sbb
ficom
or
ins
inc
or
pop
outs
or
aam
inc
ret
mov
xchg
and
out
push
adc
test
test
adc
push
gs
dec
(bad)
adc
mov
pop
outs
jle
jbe
push
repz
fidiv
adc
adc
pop
add
pop
add
movntq
jle
pop
adc
mov
xchg
xchg
sub
leave
fcom
out
les
xor
push
adc
cmc
adc
pusha
push
mov
push
cmp
stos
push
into
popa
push
je
in
lahf
cwde
cli
aam
fs
lea
(bad)
adc
mov
mov
shl
mov
sub
push
dec
pop
xchg
mov
pop
pop
ja
pop
call
jl
mov
inc
jnp
xchg
mov
clc
jl
rol
iret
adc
xchg
fcmovnb
mov
cwde
dec
pop
pop
js
pop
fs
jnp
inc
push
scas
leave
shr
stc
pushf
dec
jne
add
mov
push
pop
rcl
inc
mov
mov
push
push
sbb
ins
jbe
adc
and
inc
stos
mov
jno
pop
fs
fs
stos
mov
inc
xchg
mov
jbe
repnz
or
call
fwait
into
outs
xor
repz
imul
adc
ror
daa
mov
je
call
dec
and
mov
jecxz
push
(bad)
mov
call
push
mov
daa
xchg
aas
cmps
inc
dec
movs
push
dec
pop
dec
hlt
das
dec
mov
fcomp
mov
sbb
dec
in
(bad)
jo
xor
sub
ins
(bad)
xor
test
xchg
xchg
mov
cmp
pop
stos
mov
xchg
outs
xchg
in
or
(bad)
and
sub
push
jle
fdiv
je
daa
cmp
push
cmp
out
push
add
adc
pop
xchg
in
or
mov
mov
sahf
push
and
sub
scas
sar
std
out
ds
aaa
and
add
fst
(bad)
out
xchg
idiv
jge
fimul
or
xchg
cmps
(bad)
sbb
repnz
ret
jne
cmps
sar
mov
inc
inc
les
xchg
sub
cmc
std
lds
fist
stc
adc
mov
dec
(bad)
sbb
push
fs
pop
ins
cmps
(bad)
ror
rcl
jo
(bad)
out
mov
sbb
cmp
retf
(bad)
jno
bound
and
mov
mov
sbb
and
cs
dec
and
cmp
xor
mov
xchg
(bad)
aaa
mov
fadd
in
xor
sbb
and
dec
(bad)
mov
cmp
mov
into
iret
sub
test
pop
div
mov
sbb
(bad)
les
aas
mov
xor
fldenv
xor
pop
dec
mov
(bad)
xor
dec
jnp
lea
mov
movs
push
sub
ins
pop
pop
add
in
jnp
cs
es
mov
test
pop
test
lods
dec
shl
imul
or
inc
cmp
sub
bound
xchg
cmc
lods
mov
out
lock
stc
das
stos
adc
test
add
inc
adc
lea
pop
xor
add
stos
mov
shr
dec
pop
mov
jb
mov
sbb
mov
mov
mov
cmp
xchg
mov
in
dec
shl
in
cmp
adc
pop
inc
les
test
movs
jl
xor
jle
xchg
jmp
fnstcw
pop
stos
push
ins
scas
clc
inc
daa
aaa
mov
xchg
cld
mov
fcmove
jae
jecxz
lahf
sub
xor
xchg
sar
xchg
jge
scas
fwait
out
or
pop
mov
adc
xor
mov
ds
mov
dec
(bad)
lock
xchg
push
out
das
pop
dec
sar
cmp
mov
adc
add
xchg
in
dec
fdivr
xor
dec
jp
push
ds
fsub
mov
mov
popf
mov
icebp
cdq
call
inc
repnz
xchg
adc
mov
loope
inc
sub
jge
mov
popf
fwait
pop
mov
repnz
aaa
call
jbe
(bad)
cmc
(bad)
retf
jmp
mov
and
jb
xor
lock
adc
cmp
mov
mov
outs
pop
xchg
lock
dec
ja
mov
lods
add
in
pop
pushf
pop
test
icebp
sub
in
test
cmp
lea
push
and
or
xchg
mov
rcr
push
btc
enter
jae
shl
pop
cmp
xlat
pop
adc
pushf
jge
cmps
inc
jbe
push
sbb
adc
ror
imul
gs
(bad)
dec
(bad)
repnz
push
push
(bad)
imul
mov
movs
ds
xor
fld
pop
std
imul
loop
sti
ret
loope
dec
arpl
ror
pushf
pop
push
(bad)
in
mov
push
das
jmp
sub
stc
stc
jp
add
cdq
dec
xchg
cld
xchg
add
adc
push
and
retf
arpl
cld
mov
jb
adc
fidiv
dec
adc
fld
ins
ror
xor
(bad)
jne
add
sub
neg
mov
in
test
or
test
ror
scas
out
mov
dec
div
and
(bad)
mov
lock
adc
pusha
pop
mov
mov
push
jb
add
lods
out
jmp
adc
sbb
repz
paddsb
sub
inc
jmp
pusha
mov
push
pop
xchg
or
dec
fild
mov
(bad)
pusha
lea
push
xchg
jp
test
sahf
clc
test
cmps
pop
adc
movs
sub
adc
mov
test
push
jmp
push
mov
mov
lods
and
xor
ja
and
dec
mov
cmps
icebp
cmp
scas
mov
add
sbb
rol
pop
sar
mov
mov
inc
push
rol
mov
clc
and
or
xchg
dec
xchg
and
sti
(bad)
call
cmp
mov
ds
sub
xchg
retf
jns
add
xchg
lea
cmp
lods
xchg
xchg
in
inc
mov
dec
jecxz
icebp
out
pop
lds
(bad)
mov
mov
ret
jne
jns
fild
adc
and
icebp
in
mov
add
jbe
pop
lds
ret
movs
jno
imul
sub
fneni(8087
xchg
mov
dec
cld
mov
pusha
test
mov
mov
mov
add
push
pop
inc
stos
mov
popf
mov
or
(bad)
mov
mov
ins
neg
pusha
pop
mov
test
cmp
fdivr
xchg
rol
push
mov
pop
fisttp
cdq
add
enter
push
and
daa
(bad)
sahf
add
ds
(bad)
dec
pop
add
loopne
fsub
and
xchg
scas
dec
arpl
adc
or
adc
xchg
loop
jp
cmps
lahf
dec
mov
out
(bad)
jo
or
xchg
dec
loopne
jo
xchg
movs
ins
mov
addr16
or
repz
push
mov
and
jecxz
dec
dec
xor
sub
cmps
fnsave
xor
add
clc
mov
lahf
scas
out
adc
inc
dec
aam
xchg
(bad)
loopne
mov
pop
inc
xchg
(bad)
cmps
jmp
jecxz
ret
pshufw
mov
scas
mov
stc
movs
in
sub
sub
(bad)
out
mov
and
ds
dec
xor
inc
adc
inc
pushf
mov
icebp
push
jg
daa
(bad)
imul
xchg
arpl
inc
or
xor
or
jnp
clc
repz
test
or
sbb
sub
push
push
or
dec
push
mov
xchg
cmp
test
pop
mov
jecxz
fwait
lock
outs
in
push
sbb
xor
xlat
push
outs
xor
mov
pop
pop
push
push
ret
sbb
ffree
jl
repnz
fnstsw
cmp
in
cmp
rcl
sub
popf
push
in
fidivr
out
sub
xor
sub
stos
xor
cmp
(bad)
repnz
pop
xchg
sbb
add
mov
cmp
xor
dec
cmp
jp
jp
pushf
and
aaa
push
cdq
inc
inc
and
cmp
add
sub
lahf
sbb
mov
pushf
cmp
lahf
cmp
lea
mov
and
fmul
int
fstp
enter
aaa
mov
cmps
ds
fmul
aaa
mov
out
pop
inc
sbb
sbb
into
push
div
test
cmp
ret
mov
test
jo
pop
mov
mov
(bad)
mov
(bad)
mov
ss
or
mov
es
(bad)
mov
(bad)
cmc
add
and
icebp
sbb
or
xchg
jg
xlat
push
jb
test
test
xor
add
push
push
adc
jmp
mov
dec
pop
mov
leave
hlt
movs
std
fild
mov
mov
ss
mov
pop
ja
lock
iret
cmc
call
in
repz
adc
cmp
popa
je
nop
and
xchg
or
les
mov
add
push
ud1
sbb
gs
push
das
addr16
mov
xchg
mov
pop
and
mov
(bad)
dec
push
fsubp
mov
popa
dec
jmp
iret
xchg
addr16
lods
pop
inc
mov
cdq
xlat
imul
cmps
out
scas
push
cld
push
stc
lds
xchg
ins
mov
adc
(bad)
dec
add
push
jne
rcr
lahf
and
test
jg
lahf
setbe
aad
or
inc
mov
inc
cmp
call
inc
pop
int
fisubr
mov
mov
test
xchg
xchg
fcomp
pop
pop
lods
adc
pop
inc
loopne
stc
and
std
xchg
repnz
pop
sub
iret
lock
sbb
mov
(bad)
mov
fwait
fwait
xor
push
jecxz
lods
sub
inc
or
pop
pop
xor
rcl
sbb
mov
pop
ror
ss
add
test
cmp
adc
mov
(bad)
xchg
xchg
(bad)
push
repz
sahf
mov
test
adc
icebp
mov
push
mov
mov
xor
sub
push
and
cmp
idiv
xlat
mov
retf
ds
pop
mov
inc
adc
xchg
outs
xchg
fidivr
daa
cmp
je
(bad)
arpl
adc
shr
repz
or
cmp
xchg
shl
fcmovne
in
es
push
pop
mov
mov
adc
sbb
cwde
sahf
les
xor
out
imul
inc
cs
mov
mov
out
mov
aaa
push
sub
gs
call
aaa
loop
(bad)
dec
call
jns
(bad)
inc
daa
xchg
ret
mov
bound
fld
arpl
repnz
clc
xchg
cmovl
fnstcw
arpl
ror
lahf
frstor
jg
add
(bad)
test
mov
(bad)
in
jne
mov
sahf
outs
test
(bad)
fs
mov
push
xchg
mov
repnz
aaa
loopne
nop
mov
jne
cwde
add
iret
mov
outs
cmps
out
or
dec
test
imul
das
dec
inc
and
push
cdq
clc
out
sbb
idiv
xchg
pushf
loope
push
push
retf
aam
jl
(bad)
and
sub
xchg
and
jle
mov
scas
lods
call
lahf
cmp
pop
adc
mov
hlt
popf
and
call
and
inc
aam
icebp
fwait
lahf
rcr
mov
xor
sub
sub
xchg
push
cmps
dec
and
xchg
test
cmp
addr16
cmp
mov
addr16
sub
dec
data16
aam
mov
jmp
outs
ss
inc
fwait
jns
jp
sti
sub
cld
mov
test
sbb
jle
adc
add
call
out
js
mov
xchg
fild
dec
(bad)
js
mov
push
cmc
ror
sub
test
dec
rcr
jg
mov
shr
cs
mov
push
test
enter
or
scas
add
(bad)
(bad)
sub
out
std
mov
cmp
mov
ins
ror
and
movs
fnstenv
mov
xor
adc
imul
sbb
icebp
sub
adc
push
icebp
mov
cmp
call
push
dec
jmp
popa
fsub
and
sub
(bad)
fucom
aam
xchg
pop
or
sub
aad
xor
mov
out
popf
cld
mov
cs
div
inc
xor
aas
xchg
xor
loope
mov
pushf
mov
jmp
mov
movs
cwde
jmp
outs
adc
or
popf
mov
in
leave
inc
sub
retf
pop
test
rcr
mov
dec
popa
retf
pusha
sbb
xchg
inc
hlt
cmp
push
xchg
rol
xchg
xchg
adc
loop
inc
pop
pop
push
xlat
enter
and
sbb
mov
add
jg
repz
inc
sar
outs
sub
push
xlat
sbb
lea
stos
aas
mul
cdq
fwait
xor
adc
xor
jnp
pop
lahf
pop
pusha
jecxz
mov
push
add
mov
pop
movs
mov
ins
adc
adc
iret
test
xchg
push
enter
dec
cmps
gs
add
adc
shl
popa
mov
mov
dec
add
sar
clc
jl
hlt
pop
cmp
test
add
jnp
bound
sbb
nop
int3
dec
mov
stos
adc
test
daa
sub
and
hlt
mov
mov
dec
pop
cmc
je
push
loopne
dec
arpl
ins
xor
add
cmp
jl
xchg
mov
jmp
imul
test
(bad)
cmps
rol
lahf
inc
xor
ror
cmp
jo
rcr
loopne
pop
push
xchg
iret
ret
movs
(bad)
scas
pushf
sbb
dec
loopne
jmp
mov
sub
test
sbb
in
or
pop
sbb
mov
xor
cmp
(bad)
push
add
xchg
gs
xlat
inc
repnz
out
dec
lods
nop
rcl
sbb
inc
mov
cmp
or
cli
push
inc
mov
scas
fs
pushf
test
inc
mov
aad
mov
adc
lods
sub
xor
jg
shl
pop
pop
in
mov
mov
dec
outs
pushf
cmp
scas
mov
fldenv
sbb
jmp
lock
in
adc
adc
inc
cmp
out
(bad)
call
loopne
mov
test
xlat
push
mov
sub
dec
call
loopne
in
pushf
sub
adc
retf
push
xchg
popa
dec
mov
dec
mov
mov
sub
dec
push
xlat
inc
xchg
jge
push
fstp
jmp
and
adc
pushf
(bad)
push
sub
cmp
test
pop
imul
fsub
test
or
push
scas
jno
jmp
sub
fmul
cmp
dec
in
test
mov
mov
loope
xor
pop
inc
add
sbb
xor
fild
mov
cmp
mov
(bad)
fimul
fldcw
loop
mov
imul
and
clc
in
lods
rol
retf
sub
mov
mov
dec
push
fcmovnb
popf
sbb
fmul
cmp
ss
xchg
sbb
jg
pop
lahf
std
mov
adc
mov
sti
inc
and
dec
mov
bound
lahf
sbb
cmp
aaa
pop
(bad)
adc
sbb
inc
jb
int3
mov
outs
or
icebp
jae
sbb
stc
pop
test
and
(bad)
mov
inc
cmp
loop
add
pop
sbb
movs
call
hlt
sbb
fnstsw
stc
loope
jge
cwde
pusha
adc
dec
les
or
xor
fs
ja
sub
mov
mov
fbld
dec
sub
sbb
jb
mov
test
fidivr
add
mov
mov
dec
loope
xchg
sub
xor
rcr
mov
dec
outs
inc
push
push
enter
pop
fistp
dec
cwde
in
imul
test
mul
cmp
out
dec
push
lea
mov
(bad)
scas
mov
sub
mov
mov
push
fs
mov
retf
add
enter
add
cmp
and
out
aam
add
test
mov
dec
pop
icebp
leave
jno
and
jno
inc
fdiv
lock
out
mov
sub
inc
push
xchg
adc
call
mov
push
fistp
sbb
retf
in
rcr
jno
sahf
ret
mov
lahf
div
xor
mov
inc
push
ds
add
js
pop
retf
xchg
add
jecxz
xor
inc
adc
arpl
jge
adc
cmps
mov
fimul
ret
(bad)
aam
inc
sub
sahf
aam
xchg
in
push
mov
dec
jl
ror
add
clc
div
test
mov
adc
mov
sub
out
ret
icebp
and
pop
mov
ss
scas
or
movups
enter
and
jle
stos
xchg
fadd
in
out
sub
mov
jnp
leave
mov
push
pop
jmp
cld
stos
(bad)
mov
push
pop
sti
(bad)
xor
cmp
clc
aaa
and
mov
mov
lods
jae
pop
neg
pop
xlat
xlat
test
mov
and
ror
enter
push
cli
shl
bndstx
mov
adc
rol
mov
cmps
push
imul
dec
movs
adc
and
push
jo
repnz
(bad)
call
push
mov
loopne
cmp
test
inc
test
gs
mov
xchg
cdq
adc
push
sub
jp
bnd
push
dec
adc
int3
adc
pop
in
or
sub
inc
imul
push
push
jge
cmp
std
sub
cmp
sub
push
mov
jno
(bad)
je
mov
xchg
test
repnz
dec
iret
xchg
add
out
xor
imul
(bad)
gs
mov
push
loopne
aas
aaa
mov
test
fnstcw
clc
xor
jae
scas
shl
inc
mov
mov
stos
mov
ins
(bad)
xchg
inc
retf
push
adc
pop
dec
sub
mov
fdivr
stc
pop
out
sub
gs
inc
test
or
imul
jl
icebp
cmc
leave
data16
int
push
aas
fwait
bound
retf
mov
inc
adc
aas
xchg
push
jmp
push
packssdw
pop
mov
sbb
lahf
sar
mov
cli
jnp
fsub
adc
sub
daa
pushf
push
(bad)
(bad)
into
jns
inc
in
imul
mov
push
sti
fiadd
pop
xchg
jne
pop
jb
push
fs
adc
ucomiss
inc
pop
je
or
mov
sub
dec
mov
mov
jge
dec
push
xor
mov
rcl
and
mov
add
test
movs
mov
adc
loope
mov
adc
pop
ins
(bad)
div
jns
test
hlt
sbb
movs
repnz
inc
das
movs
inc
jb
inc
pop
push
icebp
xchg
pop
pushf
mov
es
pop
cli
ins
cmp
sub
scas
inc
jl
pushf
mov
pop
jmp
xor
scas
and
adc
pop
jle
mov
jle
cmc
and
cli
xlat
fimul
dec
je
mov
push
mov
sti
sub
rcr
movs
fs
mov
loopne
movs
push
dec
xor
push
aas
stc
add
jb
or
sbb
in
in
jmp
or
mov
jb
fistp
xchg
push
adc
push
lds
sub
jbe
jmp
cmp
or
push
pop
push
fnsave
cld
lock
jle
in
dec
pushf
sti
jns
or
js
scas
in
or
mov
xlat
fs
mov
xchg
fdivr
jle
sahf
outs
mov
push
aaa
mov
lahf
iret
inc
dec
push
jl
test
add
jmp
jle
stc
add
or
add
add
test
movs
xchg
rcl
xchg
mov
sub
sbb
xchg
int3
mov
pushf
push
sti
imul
sbb
js
add
aam
cmp
cmp
sbb
mov
mov
ds
inc
js
cmp
adc
mov
bound
pop
(bad)
xchg
repnz
sub
shl
push
cmp
loop
and
fs
push
push
es
push
xchg
gs
adc
arpl
xchg
loope
lea
call
das
pop
xchg
dec
jo
adc
xchg
inc
sub
pop
(bad)
test
sub
adc
not
sub
loopne
(bad)
pop
ds
mul
jmp
ins
jmp
popf
movs
movs
mov
add
mov
mul
and
sub
stos
out
xchg
cmp
xchg
loope
and
mov
popf
fwait
out
rcr
std
into
mov
imul
adc
mov
mov
or
mov
dec
or
ret
pop
inc
sub
dec
add
in
fist
inc
pop
ja
xchg
xor
dec
shl
xor
sbb
mov
fdiv
daa
jo
xor
push
ins
adc
out
cli
or
and
mov
(bad)
xlat
xor
scas
sub
cwde
xor
jbe
icebp
jno
js
cli
and
pop
movs
nop
sub
mov
add
ja
aad
inc
pop
addr16
in
push
rcl
je
cli
push
push
xchg
jp
mov
cdq
pop
and
push
xchg
cmp
loope
inc
mov
adc
ja
scas
mov
inc
loope
cli
fdiv
retf
mov
or
xor
add
xlat
cmp
push
fimul
sub
pop
aam
push
mov
test
scas
pop
arpl
inc
sub
shl
inc
ins
fcmovnb
sbb
iret
inc
loop
jg
adc
jbe
(bad)
fadd
xor
mov
sbb
arpl
out
jo
ins
shr
scas
mov
jmp
sbb
or
pxor
inc
jb
aad
or
cmps
mov
sbb
pop
push
gs
cmp
mov
stc
out
sbb
sub
push
or
pop
xor
dec
sahf
fstp
out
loope
lahf
pop
retf
icebp
xlat
rcr
mov
cmp
iret
ins
dec
fs
xlat
aaa
xchg
outs
pop
imul
test
cmc
repz
sbb
add
sbb
leave
push
js
mov
pusha
jo
sar
push
and
add
jmp
inc
jmp
add
lods
enter
clc
ds
leave
pop
pop
push
cs
pop
(bad)
cmps
xor
lahf
(bad)
(bad)
xor
push
ins
repnz
and
pop
xchg
pop
mov
xchg
or
push
xchg
(bad)
aam
mov
inc
cmps
sub
fist
lods
xor
dec
sub
cmp
mov
mov
dec
lods
or
mov
aad
cld
cld
add
daa
jg
mov
fistp
dec
icebp
adc
dec
cli
mov
lea
xlat
movs
cdq
(bad)
pusha
ss
jp
cmp
popf
fcomp
inc
mov
aad
pusha
sbb
pusha
in
scas
push
or
pop
sbb
mov
pop
fwait
test
imul
or
test
inc
jg
(bad)
push
xor
mov
pushf
popa
lahf
mov
push
outs
mov
bound
cmp
or
iret
dec
jp
add
test
aas
aaa
sbb
cdq
adc
pop
loopne
in
sbb
push
ins
js
and
sub
repz
call
hlt
pop
hlt
cld
add
jns
push
xor
mov
stos
mov
push
mov
push
jo
dec
push
xchg
cld
or
push
pop
fnstcw
icebp
xchg
mov
jge
pop
mul
aam
inc
cmp
out
pop
lea
or
rol
pop
add
out
(bad)
lock
(bad)
mov
jecxz
xor
loope
movs
addr16
xor
jns
imul
and
and
dec
lods
dec
call
enter
(bad)
iret
or
cmp
int3
push
repnz
pop
imul
sub
cmps
out
(bad)
lahf
shl
aad
adc
and
jmp
sar
pushf
pop
xor
call
mov
cdq
sub
jo
cmc
call
cmp
add
sub
sbb
lods
xor
jmp
pop
not
and
and
pop
pop
jmp
sub
lds
adc
inc
mov
pop
repz
and
cmp
xor
retf
mov
add
jbe
popa
and
push
mov
jl
je
sub
inc
or
in
sub
jmp
fwait
enter
out
loop
(bad)
jmp
jecxz
xchg
inc
or
mov
and
jbe
push
sbb
sub
ds
cmp
ja
jno
pop
cmp
mov
mov
xor
lods
dec
sbb
dec
sti
push
ret
call
push
push
in
adc
jl
(bad)
mov
mov
in
gs
imul
inc
int
pop
iret
cwde
mov
push
sbb
rcl
loope
mov
std
push
and
adc
or
imul
xor
nop
cmp
mov
mov
or
xchg
adc
pop
bound
xlat
push
push
lods
mov
scas
(bad)
fidiv
push
mov
aaa
xchg
mov
in
lock
fs
xor
sahf
mov
mov
retf
jge
hlt
lods
xor
iret
gs
(bad)
sbb
mov
cmp
(bad)
and
sahf
outs
repz
inc
sahf
push
and
retf
xchg
stos
lock
mov
std
pop
das
mov
test
imul
fs
shl
fidivr
mov
xor
fisub
or
shl
(bad)
jae
sub
dec
pushf
mov
jecxz
adc
jg
sbb
mov
movs
sub
sar
inc
xor
jmp
or
jp
stos
int
iret
xor
sbb
not
or
repz
mov
xor
rcl
xchg
je
in
in
xlat
or
(bad)
push
add
cs
pop
std
xchg
adc
lods
cmp
sahf
fs
push
lods
movs
pop
dec
mov
mov
or
arpl
cmps
in
adc
inc
fwait
out
xchg
pop
push
and
ret
das
repnz
lea
push
repnz
dec
sahf
inc
add
repz
int3
sbb
shl
adc
test
pop
call
mov
lock
mov
(bad)
mov
shl
sti
les
je
mov
pop
push
cld
mov
jle
ss
dec
and
inc
jmp
fwait
rcl
ins
xor
enter
sub
outs
adc
push
pop
jl
(bad)
jl
cmp
sub
jecxz
int
scas
lods
outs
arpl
repz
inc
movs
in
int3
ja
hlt
pop
xor
mov
sub
mov
sbb
(bad)
dec
retf
and
in
(bad)
call
xor
inc
sbb
xchg
or
or
imul
cmp
in
xor
fild
nop
pop
mov
ja
xor
mov
dec
mov
inc
pop
mov
mov
sub
pushf
dec
xor
nop
cmps
pop
mov
jp
cmp
xor
jmp
dec
and
xchg
push
mov
test
sub
inc
popf
pop
cmp
jp
inc
fdivr
add
mov
movs
mov
fcom
clc
jecxz
mov
hlt
xchg
push
jo
rol
mov
in
(bad)
xchg
inc
or
mov
add
or
cmp
rcr
int3
or
arpl
mov
pop
add
adc
test
add
lahf
jp
jbe
or
std
cmp
popf
cwde
mov
fistp
push
push
lahf
ins
rol
sbb
cs
in
jl
xchg
pop
adc
sub
arpl
xor
das
mov
cmp
jmp
dec
les
inc
loope
rcl
movs
fwait
shr
(bad)
mov
out
xor
fist
in
scas
pop
test
int
mov
sub
dec
mov
jae
pop
shld
cmp
push
and
lea
pop
push
mov
cmp
stos
jp
lahf
(bad)
jmp
sub
inc
out
push
xchg
pop
add
rcr
jecxz
outs
mov
xor
pusha
lods
inc
push
cld
cmp
adc
sub
cmp
imul
xor
test
es
in
and
xor
jle
lods
cmp
mov
dec
call
jl
jg
push
mov
sbb
call
cmp
mov
mov
fs
and
xor
or
hlt
push
jmp
inc
ror
fidivr
adc
outs
dec
jne
dec
int
sub
call
cmp
push
adc
test
xchg
aas
sti
xchg
sub
je
jecxz
adc
mov
repnz
popa
push
jns
push
(bad)
sbb
ret
push
mov
movs
ds
test
cmp
pop
xor
xchg
and
imul
(bad)
out
push
xor
dec
mov
mov
shl
pushf
addr16
xor
pop
sub
xor
mov
mov
in
out
xor
fimul
inc
jnp
sti
lods
test
push
xchg
icebp
int3
or
shl
call
jecxz
sti
fdivrp
cwde
dec
add
in
adc
leave
adc
push
lds
scas
icebp
mov
adc
mov
add
stos
mov
ror
stos
in
add
ror
addr16
iret
shl
cmp
movs
mov
pop
stos
jg
and
mov
es
bound
inc
or
(bad)
fcomp
test
scas
lds
out
push
das
sub
cs
dec
aam
(bad)
cmc
fsubr
mov
leave
pop
or
push
scas
popf
push
xchg
jmp
(bad)
push
cli
sti
out
inc
add
retf
repz
jo
inc
jmp
mov
in
push
cmp
or
dec
test
loop
sub
pop
ss
imul
push
int3
pop
mov
jge
call
les
repnz
ins
retf
sti
(bad)
aam
jecxz
addr16
arpl
idiv
dec
imul
mov
loope
sbb
test
push
(bad)
pop
loop
sub
arpl
cwde
or
loopne
jmp
xchg
out
nop
pushf
lds
pushf
pusha
(bad)
xchg
out
aad
cmp
pop
adc
(bad)
out
jo
in
fist
bound
mov
mov
mov
add
dec
xchg
lods
cwde
cmps
jmp
sti
adc
imul
mov
push
push
cmps
push
lock
inc
dec
and
scas
mov
or
push
sbb
dec
mov
inc
test
stc
clc
or
pop
call
iret
mov
dec
mov
(bad)
jo
cmp
mov
push
dec
cdq
mov
cld
mov
sub
imul
mov
jmp
ja
shr
xor
ss
int
pop
pop
daa
mov
hlt
(bad)
je
(bad)
or
pushf
ins
inc
in
dec
xchg
sbb
in
movs
jg
pop
je
retf
mov
push
rcr
arpl
ficomp
cmps
outs
dec
lahf
cwde
lods
jmp
shl
or
jecxz
jae
retf
mov
inc
mov
pop
out
xchg
mov
lock
sub
jge
clc
mov
mov
lds
mov
hlt
mov
mov
fidiv
bound
dec
test
in
(bad)
inc
sub
cmps
xchg
pop
xor
xor
sub
jmp
in
mov
test
jl
push
sub
cmps
pushf
or
mov
shl
and
(bad)
cdq
cmp
hlt
(bad)
retf
fcomp
ficom
(bad)
mov
push
push
psubusb
shr
popa
test
jno
(bad)
div
(bad)
cs
mov
out
xlat
push
popa
sub
nop
push
scas
pop
arpl
inc
dec
pushf
cmc
xchg
stc
cmps
inc
ja
cmp
hlt
jmp
(bad)
hlt
fbld
in
cmc
and
add
lea
xchg
aad
jne
sub
pop
dec
aaa
cmp
and
sbb
mov
call
mov
stos
mov
ja
gs
adc
rcl
and
mov
imul
cmc
daa
sbb
ret
loopne
mov
call
or
pop
cmp
out
cmp
inc
mov
cmp
or
add
(bad)
les
sub
loope
aas
add
jne
xchg
or
icebp
add
xor
out
inc
(bad)
or
jae
xor
cli
mov
mov
test
ins
adc
sbb
inc
mov
les
and
(bad)
(bad)
das
(bad)
xchg
mov
jnp
and
pop
jno
js
in
fs
lock
loopne
idiv
add
fnstenv
fldenv
mov
sub
mov
mov
adc
retf
push
jmp
and
jbe
cmp
push
sub
pop
lods
mov
iret
sbb
xchg
mov
movs
into
mov
jns
add
pop
push
bnd
ins
aaa
inc
retf
mov
int
cmp
jp
retf
(bad)
imul
mov
cmp
and
lock
push
not
stos
dec
jp
jl
jg
ss
inc
fs
shl
cli
call
cmp
in
dec
mov
fs
mov
gs
pusha
push
or
dec
imul
cmp
lahf
and
sub
cmp
ds
cmp
outs
icebp
dec
mov
sbb
push
test
dec
and
dec
jns
je
(bad)
xlat
rcr
add
fs
test
shl
cwde
xchg
push
mov
mov
cs
sbb
loopne
push
ret
loope
out
mov
jecxz
cmps
rcl
sub
xchg
and
jp
(bad)
fmul
test
and
or
das
sbb
pushf
ja
ins
ja
fadd
pop
jae
jmp
rol
sbb
mov
jne
jmp
push
das
mov
mov
jne
out
inc
and
xchg
enter
xchg
add
test
aaa
ror
ret
mov
ret
inc
push
mov
lock
pop
clc
xor
inc
loopne
cmp
mov
inc
xchg
out
fmul
mov
in
sbb
scas
mov
idiv
push
xchg
shr
and
leave
adc
push
movs
dec
test
xor
in
mov
xchg
mov
into
loop
enter
lods
push
(bad)
fstp
push
push
jns
cld
popf
dec
mov
cmp
pop
add
adc
xchg
mov
jl
mov
jno
push
dec
adc
rcr
(bad)
imul
pop
jge
fiadd
out
push
adc
mov
out
mov
dec
sbb
std
inc
xor
push
push
cwde
mov
jne
jne
inc
lahf
retf
gs
ja
out
out
mov
cs
xchg
scas
jl
add
scas
xor
mov
cmps
mov
shr
sbb
scas
jl
(bad)
xor
add
add
fdivr
cmp
mov
lods
inc
cmps
push
mov
xor
jns
adc
mov
add
pushf
mov
inc
les
scas
in
fstp
pushf
outs
out
outs
std
pop
neg
aam
mov
sub
pusha
and
cmp
push
inc
jl
xchg
add
add
mov
adc
cs
mov
mov
mov
cmps
jne
ds
push
push
jge
mov
cmp
pop
les
add
not
cmps
xor
cli
jge
sbb
jecxz
gs
sbb
and
movs
pop
bound
(bad)
fbstp
sbb
mov
push
pop
sbb
xchg
rcl
push
aad
mul
or
jg
and
mov
inc
es
sub
jb
cmc
daa
fs
mov
mov
jecxz
push
mov
test
adc
std
sbb
xchg
mov
retf
push
sub
xchg
cli
or
xlat
sbb
setne
xor
add
test
and
and
add
call
stos
fsubr
pop
inc
stos
mov
xchg
add
retf
mov
dec
xor
xchg
packsswb
jbe
mov
cmp
mov
mov
mov
and
movs
rol
(bad)
shl
out
pop
bound
jmp
sbb
ins
mov
cmps
stc
retf
popf
repnz
push
add
and
enter
inc
mov
int
jge
shl
int3
enter
shl
xor
leave
cmp
pop
pop
inc
xor
push
lods
cmps
mov
ins
xor
into
xchg
mov
aad
push
add
dec
jae
ja
imul
in
add
out
mov
iret
jnp
mov
popf
push
fst
jbe
les
jnp
sub
neg
cs
into
jmp
and
sub
adc
jge
mov
ret
jno
inc
cmp
and
mov
call
int
xchg
jbe
cmps
push
jge
dec
loope
sub
mov
dec
imul
sbb
inc
gs
stos
cmc
shl
ja
pop
and
or
les
dec
sbb
adc
adc
inc
mov
gs
cmps
imul
cld
cmp
mov
or
jno
cmp
mov
and
push
cs
(bad)
push
jp
xor
pop
sub
xor
add
ud1
inc
jecxz
push
daa
imul
movs
jg
jnp
pusha
sub
out
adc
xor
and
xchg
clc
sbb
movs
sahf
mov
push
outs
stos
fbstp
fidivr
in
ins
hlt
popf
(bad)
in
add
lahf
fs
and
call
popf
cwde
add
mov
mov
cwde
xor
mov
pop
mov
or
mov
ret
or
mov
mov
mov
fwait
aas
les
mov
mov
mov
pop
cmp
fwait
push
fld
bound
retf
and
rol
fcom
sbb
sbb
ficom
aam
sub
push
js
mov
and
mov
outs
pop
scas
pop
cmp
pop
mov
or
mov
jecxz
cmp
scas
cmovbe
neg
push
test
xor
dec
jb
fs
ror
es
outs
(bad)
xchg
xchg
pop
js
inc
fidiv
sti
push
adc
cli
jb
xor
rol
dec
stc
jp
mov
adc
xchg
dec
jmp
dec
ds
and
jne
xchg
(bad)
clc
jne
push
mov
into
cmps
ss
cld
and
iret
dec
cmp
xor
in
popf
mov
jae
xchg
adc
dec
push
arpl
repz
repnz
and
ins
aad
jbe
imul
lods
cmp
lock
push
(bad)
push
ss
test
xchg
xchg
and
pop
cmp
cmp
(bad)
movs
jmp
rol
mov
dec
jo
in
mov
pop
jge
push
pop
scas
dec
adc
mov
dec
ret
xor
xchg
mov
retf
mov
add
into
xchg
xchg
enter
nop
inc
loope
push
(bad)
dec
add
(bad)
(bad)
outs
leave
scas
cwde
and
fidivr
outs
daa
mov
scas
loop
movs
popf
jo
lea
push
xor
movs
push
mov
test
out
xor
lock
out
arpl
push
push
arpl
or
pop
jge
or
ret
lds
movs
(bad)
or
cmp
push
dec
lahf
into
ficom
pop
out
cdq
cmp
shl
sbb
stos
cmp
outs
call
retf
aaa
sbb
mov
(bad)
arpl
dec
cmps
fist
data16
mov
mov
in
push
push
or
(bad)
call
movs
dec
ret
repnz
(bad)
js
dec
int3
xor
mov
inc
jge
fsub
mov
pop
aad
sub
test
sub
scas
(bad)
aad
adc
(bad)
xor
pushf
mov
xchg
jbe
outs
fcmovnu
pop
fs
in
daa
jmp
mov
push
rcr
into
outs
xchg
jle
mov
popa
pop
inc
or
ins
repnz
clc
xor
inc
jne
adc
test
xor
aas
add
rcl
mov
sbb
sub
and
loop
and
jae
cmp
cmp
movs
loop
and
cmc
jo
mov
sbb
ja
xchg
cmp
js
rol
pop
adc
push
xchg
pop
mov
dec
jne
cdq
cmps
or
das
adc
or
lods
push
popa
mov
pop
xchg
aad
(bad)
mov
sub
push
(bad)
mov
sub
mov
es
test
or
adc
push
aad
push
pop
cs
push
cmp
sbb
aam
mov
scas
dec
mov
ins
arpl
(bad)
ficom
lods
lock
jmp
jne
js
mov
mov
and
mul
repnz
xchg
jae
xchg
mov
or
mov
jg
sub
repnz
add
aad
mov
dec
aaa
jecxz
data16
cli
xchg
mov
jno
cmp
sub
cld
inc
pop
jge
or
cmc
mov
sub
cmp
mov
int3
sbb
inc
in
dec
test
gs
jo
or
jecxz
dec
mov
push
aaa
or
mov
sbb
mov
mov
sub
add
out
pop
jo
fs
or
mov
sub
adc
pop
mul
test
push
mov
stos
bound
popa
(bad)
(bad)
jle
adc
xor
int
loopne
mov
adc
pop
jnp
outs
sub
jmp
cmp
or
dec
shl
test
jbe
lds
es
pop
mov
aas
jle
mov
fldenv
in
dec
push
imul
add
repz
jo
xchg
sub
push
test
jge
icebp
and
cmp
push
mov
icebp
xor
dec
ss
hlt
fwait
and
lods
mov
adc
nop
inc
sti
push
or
rol
mov
inc
shl
in
jmp
cmp
cld
xchg
mov
xor
pop
or
lods
or
adc
dec
ins
movs
xor
sbb
push
mov
repz
sub
loop
dec
(bad)
in
pop
stos
mov
and
std
in
scas
in
hlt
pop
lahf
div
in
cs
jecxz
sti
pop
ret
ss
mov
pushf
lea
or
aam
cmp
lods
bswap
adc
and
pop
lods
out
dec
loop
push
fadd
les
ret
imul
mov
dec
repnz
aas
adc
mov
ret
ds
into
in
push
pushf
sub
icebp
jmp
rol
and
pop
fucomip
add
or
rcl
jns
fs
gs
fwait
dec
jo
out
mov
sbb
jmp
lds
int
pop
jns
fild
scas
call
aas
mov
call
mov
xchg
or
add
sbb
les
inc
mov
jmp
(bad)
xor
xchg
cmp
pop
(bad)
pop
lahf
fld
hlt
(bad)
cs
jge
call
cmp
add
popa
imul
mov
jge
dec
cmp
jecxz
imul
out
mov
ret
and
add
inc
ds
push
test
inc
bound
add
sbb
out
iret
je
imul
mov
or
lahf
in
push
cwde
frstor
push
sti
push
mov
(bad)
pop
dec
jae
inc
sbb
cmp
mov
loope
in
jns
outs
(bad)
pushf
xchg
sub
mov
fisubr
fnsave
lods
xor
into
imul
inc
pushf
cld
mov
xchg
leave
test
sbb
out
xor
sbb
cmp
xor
hlt
mov
sub
adc
or
pop
retf
and
jl
(bad)
jl
jnp
js
stos
push
popa
call
xchg
scas
push
xchg
and
cmp
push
lods
loope
xor
and
in
imul
in
add
loopne
push
pop
out
jno
icebp
sub
xchg
pop
pop
mov
push
xchg
or
jne
jmp
dec
(bad)
pop
and
inc
mov
dec
lock
adc
mov
loop
push
repz
fldenv
stos
repz
mov
dec
(bad)
pop
xchg
pusha
ret
ficom
sbb
push
mov
adc
iret
or
and
pop
jno
loopne
(bad)
sahf
lock
mov
jne
mov
in
(bad)
sbb
and
leave
out
pop
push
mov
mov
jge
int3
push
cmp
jg
out
call
sbb
popf
adc
jne
je
out
test
mov
pop
pop
mov
ror
and
adc
push
or
mov
clc
dec
pop
xchg
inc
in
sahf
shl
adc
iret
xor
mov
sbb
fcmovnb
gs
mov
ins
and
jmp
push
sar
imul
test
mov
jp
sbb
cmp
dec
in
sub
jp
shr
add
dec
outs
fst
cs
cmps
xor
mov
inc
mov
push
pusha
aaa
mov
or
(bad)
push
xor
int
retf
adc
dec
push
in
in
fs
arpl
dec
dec
push
cmp
jmp
push
push
mov
lods
add
mov
popf
pop
arpl
and
or
ja
xchg
jnp
cmp
enter
jmp
bound
leave
cmc
popf
imul
test
jge
movs
mov
loop
dec
cmc
push
cld
mov
mov
dec
enter
and
push
xor
imul
xchg
sbb
inc
xor
xchg
pop
sti
cmp
push
dec
mov
aas
xor
aas
add
pop
jae
pop
loope
lahf
xor
and
pop
cdq
dec
or
aaa
push
sbb
cmp
es
int3
push
cli
int
xor
leave
mov
cwde
adc
cmp
stos
jbe
lahf
js
jle
data16
arpl
jge
dec
push
clc
push
(bad)
(bad)
out
pop
or
je
mov
xchg
rcr
xchg
gs
sub
push
dec
jb
mov
or
clc
repz
test
pop
adc
and
iret
jbe
call
mov
int
xor
inc
test
mov
dec
stc
std
pop
push
inc
mov
jge
loop
sbb
mov
sub
mov
pop
mov
inc
imul
jnp
imul
aas
shl
mul
push
aaa
sub
add
popf
push
xchg
stos
xlat
add
xlat
cld
repnz
cli
ss
mov
sub
jne
leave
mov
jecxz
dec
rcr
dec
sti
ds
cmp
call
lock
(bad)
or
mov
(bad)
xchg
jg
mov
dec
and
cmc
div
outs
dec
std
mov
mov
jp
stc
outs
and
cdq
dec
daa
movs
lea
into
xchg
mov
cdq
push
pop
jge
(bad)
mov
pop
enter
cmp
push
sbb
mov
pushf
lods
popa
adc
(bad)
fld
fs
pop
cmp
lds
loopne
cmp
cmp
out
or
scas
repnz
movs
mov
imul
pop
in
jmp
jb
repnz
dec
sahf
xlat
imul
jmp
jmp
sbb
shr
mov
add
retf
push
mov
sbb
push
(bad)
pop
adc
pop
loop
adc
inc
jmp
ror
icebp
je
push
ss
pop
(bad)
mov
mov
pop
hlt
repz
mov
dec
mov
xchg
test
jo
pop
push
sahf
clc
retf
out
mov
jecxz
fadd
out
je
sbb
xor
mov
sbb
push
sub
into
lock
inc
mov
fmul
jmp
sbb
or
or
sbb
cmp
xlat
xor
jae
mov
scas
arpl
fst
jb
dec
retf
xchg
in
ror
(bad)
pop
push
pop
jp
nop
sub
inc
sbb
rcr
and
inc
jmp
loop
xor
test
push
xchg
jge
push
xor
pop
sub
es
clc
sbb
jnp
inc
mov
sbb
int
cmps
lds
mov
stos
xchg
cmc
pop
je
cmp
loopne
cmp
out
and
and
outs
jns
hlt
mov
xchg
movups
add
sub
jnp
stos
scas
mov
lea
mov
mov
push
in
fsubr
push
adc
in
sub
or
push
xchg
(bad)
xlat
popa
stos
xchg
aas
leave
(bad)
in
sub
adc
sar
cmp
mov
popf
call
xchg
pop
pop
lea
or
pop
ret
or
call
mov
in
jae
pop
scas
xor
sub
xchg
data16
outs
jle
or
clc
bound
shl
loope
adc
jg
pop
out
xchg
pop
sub
enter
push
inc
lods
push
pop
jbe
or
push
retf
imul
cmp
mov
ret
inc
adc
push
inc
xchg
push
and
mov
inc
mov
imul
test
dec
test
mov
ds
out
add
pushf
(bad)
pop
sti
jp
pop
inc
sbb
cmp
pop
cmps
sbb
xchg
xor
and
in
push
scas
xor
mov
inc
(bad)
xchg
cmp
arpl
stos
loopne
in
ret
pop
in
fs
and
mov
fs
imul
xchg
sub
lahf
dec
pop
les
in
add
es
mov
add
jle
inc
lods
jmp
mov
mov
outs
je
jle
push
push
loopne
sub
push
pop
test
inc
inc
stos
push
and
pop
sub
mov
or
scas
out
test
xlat
or
out
loope
jmp
push
sahf
movs
popa
jg
cmps
inc
add
cmp
in
xor
xchg
jo
xchg
push
fsub
inc
out
pusha
call
xchg
jmp
scas
push
test
pop
sbb
dec
loop
or
push
add
popa
stos
dec
and
and
aam
and
cmp
mov
retf
adc
test
push
sbb
movs
pop
in
dec
adc
fs
in
out
add
jmp
sbb
sbb
jbe
pushf
inc
pop
and
jmp
pop
jge
call
mul
popf
dec
stc
lods
inc
push
push
jnp
mov
inc
cs
add
cmc
lea
inc
mov
call
sub
mov
mov
xchg
push
push
ds
(bad)
inc
sub
aaa
xlat
cmp
fwait
dec
ins
fs
jp
mov
jae
ss
dec
dec
pop
push
mov
push
adc
fs
fstp
loop
xchg
ins
mov
outs
popa
xor
xchg
pop
push
shr
lods
inc
dec
retf
xchg
add
mov
pop
ror
push
ins
push
cmc
sbb
add
add
ss
xchg
outs
or
adc
cli
mov
int
ja
out
cli
jmp
or
(bad)
sbb
add
fst
shl
outs
inc
push
cmp
push
xchg
sub
and
jns
ja
in
add
sbb
lods
mov
fild
cmp
sbb
mov
mov
shl
arpl
in
sbb
pop
arpl
mov
sti
sbb
shl
lods
jg
sbb
rol
pop
nop
in
cmp
in
pop
ds
mov
out
inc
pop
jle
inc
clc
pop
(bad)
adc
dec
xchg
push
test
add
mov
ja
fimul
mov
sub
sub
repz
mov
push
sub
jns
mov
mov
cmc
mov
inc
adc
fwait
aad
in
xchg
iret
(bad)
popf
cs
pop
(bad)
mov
stos
aam
fwait
std
inc
sbb
push
cld
fidiv
push
xor
add
push
lahf
mov
mov
pop
movs
(bad)
mov
bound
imul
(bad)
cli
jb
xchg
(bad)
out
aam
pop
das
or
(bad)
push
data16
xchg
jle
push
mov
retf
(bad)
jne
clc
bound
inc
mul
enter
fwait
sbb
sbb
mov
cmp
(bad)
pusha
sti
cld
data16
imul
jg
add
mov
push
adc
scas
or
aam
icebp
jmp
out
push
dec
adc
mov
xor
cmp
adc
clc
hlt
and
div
xchg
xchg
retf
test
mov
cli
enter
pop
cmc
fisubr
add
dec
jp
sar
fwait
pop
sbb
es
dec
fs
lock
int
hlt
mov
sbb
jmp
mov
xchg
sub
inc
pop
sbb
adc
and
aad
imul
xchg
push
loop
adc
das
or
mov
pushf
int
adc
push
push
xchg
sbb
push
aad
sub
dec
pop
xchg
mov
sbb
and
cmp
call
mov
scas
call
xlat
(bad)
aaa
fisubr
adc
mov
call
test
pop
add
ret
bound
pop
jb
out
add
les
jns
pop
dec
in
iret
rcr
push
xchg
inc
scas
mov
inc
shl
in
addr16
dec
pop
push
ds
scas
pop
add
inc
(bad)
pop
sbb
loop
mov
dec
inc
pop
mov
add
fistp
movs
in
mov
pop
mov
(bad)
not
fnstcw
nop
push
test
xchg
in
inc
js
scas
jmp
imul
cmc
or
popa
dec
pusha
inc
dec
jns
mov
jb
ficom
sar
xchg
mov
movs
push
push
retf
call
mov
add
iret
ss
ret
sbb
jb
pop
loop
mov
mov
out
and
lea
cmp
mul
xor
fsub
push
mov
pop
inc
imul
or
pop
mov
push
ret
push
adc
fs
jne
and
jge
scas
or
test
pop
jle
sbb
pop
and
inc
or
pop
adc
retf
neg
adc
xor
pop
repnz
jnp
aam
ret
in
xchg
xchg
xchg
cli
out
pop
jbe
dec
mov
dec
call
mov
mov
jge
(bad)
mov
mov
mov
or
das
mov
mov
jae
int
iret
pop
rol
dec
sub
stos
xor
int3
add
imul
xor
shl
imul
stc
leave
pop
dec
jbe
dec
sti
mov
mov
in
adc
dec
test
popa
ret
xchg
cdq
sti
xchg
pop
outs
push
aam
movs
inc
mov
push
inc
(bad)
mov
in
test
(bad)
pop
xchg
jg
jbe
movs
and
(bad)
retf
mov
adc
dec
dec
mov
test
ds
pop
or
mov
test
mov
test
xchg
cmp
cmps
xchg
and
mov
fistp
adc
sub
mov
xor
jne
imul
cdq
or
push
mov
cs
dec
aam
call
adc
add
mov
test
js
or
xchg
stc
leave
or
push
arpl
jg
or
into
addr16
sub
inc
mov
push
xor
leave
sub
out
fs
retf
imul
push
jmp
and
retf
push
inc
xchg
and
test
stc
bound
adc
scas
out
sbb
fst
xor
mov
pop
aaa
adc
push
ins
mov
movs
(bad)
ds
ds
pop
or
push
mov
fldz
das
repz
aas
sar
and
(bad)
ret
push
fsubr
inc
mov
jmp
call
ret
jae
sub
cmp
mov
movs
mov
lock
pop
fmul
stos
cs
and
xor
adc
mov
das
dec
mov
inc
out
lahf
sub
loop
fmul
push
mov
pop
in
mov
mov
(bad)
(bad)
in
pushf
nop
cdq
sar
pushf
pop
and
test
sti
retf
adc
data16
(bad)
push
data16
inc
les
dec
mov
das
sbb
mov
repz
mov
mov
pop
fisubr
leave
jno
lahf
into
sub
out
xchg
add
mov
mov
data16
movs
lods
jp
cld
cmp
push
addr16
sub
inc
enter
pop
adc
and
and
aad
add
loop
dec
outs
pop
sub
sub
cmp
sahf
push
inc
repnz
imul
leave
fistp
sub
xchg
dec
mov
jnp
xor
(bad)
in
cli
rcr
dec
aaa
and
repnz
pusha
add
lods
jnp
ins
xchg
jmp
pop
ret
ins
movs
push
stos
arpl
sahf
mov
mov
mov
pop
fs
jge
cmp
jecxz
lods
clc
cmp
out
fisub
mov
pop
mov
push
mov
xor
repz
cld
fist
mov
(bad)
and
les
xor
mov
adc
fs
jns
test
shr
inc
popf
sbb
out
cmps
cwde
fistp
mov
adc
mov
or
ss
(bad)
shl
out
stos
iret
jle
mov
adc
push
sub
lahf
push
mov
movs
lahf
mov
add
push
aam
mov
bnd
lock
mov
(bad)
mov
cmp
push
(bad)
mov
or
mov
test
adc
dec
jge
test
push
jg
add
je
(bad)
out
mov
(bad)
in
jno
push
jmp
call
lock
add
jno
jne
(bad)
jp
mov
add
mov
dec
outs
fstp
add
fs
int3
iret
scas
xor
std
add
retf
mov
je
pop
push
inc
stos
aas
stos
or
mov
fcmovnu
adc
mov
es
aam
shr
xchg
retfw
sti
stos
sub
pop
mov
das
fidivr
les
in
leave
mov
loopne
adc
mov
retf
add
std
sub
cmp
or
dec
mov
movs
inc
or
iret
dec
popa
arpl
push
icebp
data16
jg
jo
cmp
cmps
sub
and
xor
and
inc
cmp
mov
loop
sar
push
jecxz
outs
cmp
pushf
push
aas
xor
rcr
retf
mov
ss
addr16
imul
sub
jmp
outs
sbb
leave
call
rol
sahf
lea
xor
daa
sbb
cmps
out
xchg
lahf
movs
popa
aad
pop
push
push
cmps
mov
mov
push
pop
mov
cli
popf
aaa
jno
sbb
fs
(bad)
fsub
outs
je
data16
sub
stos
test
and
mov
inc
stc
jmp
es
inc
in
push
sub
mov
jbe
inc
pop
sub
ja
pop
or
cs
ins
data16
lds
imul
dec
push
ret
xchg
pop
and
cmp
addr16
and
pop
dec
pop
je
add
movs
or
and
adc
mov
arpl
dec
leave
or
mov
jmp
fild
icebp
(bad)
ror
loop
int3
in
in
cmc
mov
fwait
(bad)
sub
and
(bad)
xchg
int3
sub
(bad)
fld
push
sti
push
sub
xchg
imul
push
xchg
push
jno
sbb
retf
push
sub
(bad)
mov
fst
jb
mov
(bad)
xor
scas
cwde
aam
(bad)
(bad)
scas
and
imul
inc
pop
sti
mov
mov
sahf
fcomp
mov
popa
sbb
neg
hlt
mov
cmp
(bad)
call
adc
aaa
cdq
mov
or
xor
or
cmp
jp
add
push
pushf
leave
push
dec
int3
jbe
or
int3
lods
jg
xchg
arpl
mov
inc
xchg
pop
xchg
dec
retf
mov
and
out
sbb
gs
loope
mov
jnp
xor
(bad)
retf
inc
lds
test
sub
jmp
jnp
icebp
adc
push
out
jne
mov
les
imul
cwde
call
(bad)
xchg
ror
mov
cmps
aas
daa
add
repz
mov
sahf
mov
outs
lds
push
and
lods
pmulhuw
stos
xor
jecxz
in
jl
int
xchg
jns
(bad)
push
pop
lock
inc
lahf
ds
adc
fcomp
jno
repz
and
jecxz
mov
add
je
neg
sar
xchg
lods
xor
pop
mov
jp
arpl
(bad)
xor
or
pop
mov
add
ds
mov
out
sbb
push
push
ror
aas
xchg
cmp
push
test
jle
sub
mov
jo
fbstp
mov
fistp
cmp
cmps
mov
adc
sub
mov
xor
test
add
int3
fucomi
rcr
scas
lods
or
test
dec
mov
ffreep
bound
lea
mov
xor
inc
nop
sub
(bad)
jg
call
xor
jae
jne
push
jne
and
lods
mov
ja
in
sbb
pop
add
js
cmp
ds
stc
repnz
dec
cmp
retf
rol
xchg
out
sti
inc
dec
pinsrw
jmp
inc
iret
add
scas
pop
fs
mov
push
jl
xchg
xor
cdq
sub
or
jne
jb
inc
mov
dec
cmp
out
dec
fdivr
push
(bad)
ins
cmp
dec
mov
idiv
scas
mov
idiv
or
push
clc
adc
dec
fucomp
pop
stc
fstp
sub
mov
test
jns
das
mov
dec
popa
int3
arpl
add
rcr
sbb
mov
adc
pop
mov
xor
mov
call
ds
pop
pop
jb
mov
shr
and
sub
push
push
mov
psubsw
fwait
ror
xor
int
xor
pop
cwde
add
jbe
mov
loop
imul
out
retf
stos
jnp
xchg
js
cmps
adc
jl
mov
inc
jmp
test
sbb
jnp
dec
stc
in
mov
jbe
sbb
and
jne
rcl
out
scas
popf
inc
add
movs
mov
cwde
add
and
or
inc
lods
mov
cmp
nop
dec
push
inc
cmp
inc
xchg
jae
pop
shr
ret
inc
scas
mov
xor
add
mov
pop
repz
ins
arpl
lds
pop
adc
jns
daa
push
das
fistp
pop
mov
jae
out
jns
repz
jle
retf
adc
pop
and
in
or
jmp
jne
xor
jo
jmp
lods
cmps
scas
xchg
jmp
jb
es
les
mov
ja
add
jnp
add
inc
fwait
fwait
outs
iret
in
push
inc
push
sbb
sub
fst
adc
mov
adc
dec
imul
xor
sub
add
fidiv
cwde
inc
(bad)
popa
test
inc
loop
xor
dec
imul
sbb
ins
inc
in
jecxz
add
cmp
add
ret
rcl
fiadd
sti
or
jae
push
cmp
out
shr
sar
mov
jmp
xchg
xlat
sub
fidiv
sbb
inc
scas
(bad)
sbb
rcr
ss
ja
ja
shl
pusha
push
sar
push
sbb
fcom
ds
lods
and
std
mov
dec
dec
mov
retf
sub
fstp
dec
and
pop
sub
test
je
xchg
pop
addr16
fwait
adc
dec
ret
mov
and
sar
pop
out
adc
sbb
sti
popf
xor
add
sub
repz
or
sbb
cmp
inc
inc
mov
sub
ret
sub
mov
mov
mov
adc
inc
cmp
fidivr
and
dec
mov
jns
sub
push
push
ret
js
cmp
sub
push
mov
lods
jno
jp
repnz
adc
aad
dec
out
lods
mov
sahf
sbb
js
scas
vpsllw
pop
data16
movs
test
int
pushf
pshufw
push
adc
xchg
iret
repz
js
xchg
sbb
aaa
lods
xchg
pop
les
xchg
push
pop
or
lods
add
pusha
jecxz
jecxz
jae
mov
in
es
inc
loope
fwait
loopne
ds
sbb
add
push
mov
adc
sub
test
lahf
dec
sahf
out
(bad)
adc
or
sub
sub
mov
xchg
adc
push
xchg
cmp
out
rol
pop
retf
dec
popa
dec
sbb
xchg
mov
cdq
sahf
jns
or
jae
movs
dec
bound
mov
sub
xor
pop
test
jbe
and
mov
sbb
setle
inc
jnp
and
mov
hlt
sub
sub
into
cmp
push
jmp
mov
inc
xor
add
cli
les
or
mov
mov
push
push
mov
pop
rol
out
mov
aad
retf
mov
cmp
mov
dec
pop
cmp
jmp
push
(bad)
dec
int3
and
mov
in
xchg
mov
inc
shr
mov
xlat
hlt
psllq
xchg
jp
call
data16
call
pop
push
in
(bad)
jnp
scas
sar
sub
neg
fnsave
mov
(bad)
fisttp
popf
or
ror
add
lods
cld
aaa
bound
repz
adc
(bad)
mov
fimul
sub
jno
add
push
and
xor
dec
(bad)
setge
and
cwde
inc
addr16
push
imul
add
movs
xchg
pop
push
lods
in
call
jnp
ds
test
cld
pop
in
int
or
jp
push
sbb
sbb
dec
dec
mov
adc
repz
imul
repnz
jp
movs
sbb
aaa
pop
hlt
inc
movs
sub
mov
adc
imul
div
jg
inc
jae
mov
mov
es
addr16
sbb
stos
mov
mov
inc
daa
into
ret
cmp
call
mov
adc
int
mov
pop
dec
push
jp
add
inc
inc
out
xchg
push
jns
mov
dec
test
out
xchg
xor
add
ret
xor
jns
pop
mov
idiv
cmc
mov
jb
adc
aad
pop
jno
arpl
dec
(bad)
cmp
dec
mov
fisttp
dec
cdq
rcl
or
lock
sti
pop
int
aas
data16
mov
add
clc
lahf
dec
xchg
test
adc
test
stc
arpl
out
test
cmp
fnsave
dec
push
ret
push
mov
lds
adc
mov
sub
sub
out
outs
retf
and
fdivr
push
fld
xor
sub
leave
scas
pop
imul
xor
pop
or
loop
jno
jno
loopne
out
aam
cwde
dec
cs
mul
dec
ds
mov
mov
and
mov
bound
or
mov
ins
mov
jnp
es
sbb
call
sar
jne
aad
xchg
adc
retf
out
sub
mov
(bad)
stc
jp
jge
cmp
rcr
call
pop
dec
sbb
jmp
cli
jns
pop
mov
gs
or
inc
mov
sub
cmps
sub
xor
cld
ror
adc
add
stos
aam
fiadd
aad
nop
ret
mov
call
lods
leave
int
sbb
mov
test
and
mov
(bad)
xlat
mov
mov
mov
ret
scas
movs
mov
je
test
jae
cmp
mov
xor
push
adc
loope
daa
dec
jbe
in
repz
or
(bad)
mov
or
repz
test
push
xor
into
call
inc
cdq
scas
jge
imul
daa
push
mov
adc
push
mov
mov
sti
dec
xlat
add
loop
jg
add
inc
sub
int3
push
xchg
pop
adc
or
sub
retf
cmp
jae
push
xor
cmp
xor
mov
mov
dec
cmps
setle
sar
cmc
gs
inc
adc
imul
dec
clc
push
(bad)
mov
sbb
push
and
xchg
popf
std
mov
push
push
retf
and
cmp
shr
xor
test
out
xchg
push
arpl
jl
dec
mov
ds
or
cmp
add
aam
inc
mov
repnz
sub
push
(bad)
mov
and
in
and
pop
cmp
jbe
popf
push
add
je
xor
outs
pop
cmps
and
sti
or
dec
xor
adc
gs
aad
dec
jle
in
adc
cmp
sub
out
dec
dec
cmps
es
inc
retf
daa
sahf
inc
movs
into
pop
push
jno
xchg
dec
es
(bad)
daa
xchg
idiv
jmp
les
add
mov
mov
in
push
push
test
lods
and
dec
xor
loop
mov
retf
pop
or
pop
mov
push
rcr
popf
pop
push
xor
mov
xor
add
and
je
out
add
mov
sbb
aad
repnz
ror
inc
dec
popa
cmp
movs
adc
data16
wbinvd
cwde
pop
rcl
mov
fwait
mov
enter
jg
xchg
int3
gs
sbb
xchg
xor
mov
sbb
je
repz
push
cmp
(bad)
mov
mov
or
mov
cli
adc
lds
xor
jae
out
js
ins
test
out
pusha
mov
xchg
aam
imul
ret
cmc
cs
inc
ins
das
adc
bound
push
icebp
pop
and
addr16
fbld
test
cwde
jbe
or
pop
movs
sbb
sar
rol
fstp
xchg
leave
loopne
scas
push
rcl
sbb
inc
cld
push
push
data16
mov
mov
imul
mov
sub
lods
xor
std
jno
icebp
dec
lds
jb
xchg
jge
mov
ret
mov
ds
adc
jno
jg
add
packsswb
fiadd
ss
push
sub
xor
jp
jno
mov
cli
and
sub
lea
dec
mov
aad
mov
adc
or
push
cmps
xchg
dec
cmc
test
fdiv
jbe
arpl
cmp
sbb
fst
mov
test
xor
vminps
cld
push
fldcw
(bad)
jmp
mov
jecxz
aam
jp
xor
out
call
dec
outs
xchg
or
add
or
pop
psrad
dec
in
adc
push
icebp
sub
push
add
in
adc
mov
pop
in
fistp
mov
push
neg
mov
jg
push
adc
ins
aad
inc
xor
xchg
enter
jle
push
loopne
sub
jmp
mov
int3
aas
ins
adc
loopne
mov
out
xor
xchg
jmp
popa
test
jp
rcl
pop
arpl
jp
scas
sbb
int3
adc
addr16
xor
mov
mov
jmp
(bad)
fist
scas
xor
add
(bad)
push
xchg
cwde
push
aam
sbb
push
aaa
out
push
mov
popf
movs
pop
jmp
xchg
stc
neg
popf
fwait
mov
xchg
inc
sbb
leave
inc
push
clc
push
inc
loop
mov
add
sbb
repnz
push
(bad)
dec
cmp
push
mov
mov
les
ror
lea
and
pushf
mov
mov
pushf
cld
lods
cmps
xchg
test
mov
xor
out
and
adc
xchg
mov
push
and
mov
imul
mov
outs
je
mov
int3
pusha
dec
fidiv
fchs
pop
loop
pop
aaa
in
aam
mov
push
mov
cmps
pop
xor
push
fwait
cwde
lods
sbb
iret
or
pop
pop
sbb
repz
lds
xchg
enter
fimul
inc
fisub
add
fsub
mov
stos
and
jns
sti
lds
ror
xor
fucomp
inc
loope
ins
aas
pop
mov
repnz
jne
xchg
test
adc
popf
inc
in
pop
jle
test
nop
ficomp
popf
ds
push
outs
addr16
xor
stos
and
push
lahf
ror
int
jmp
repnz
rol
jge
jns
push
aad
pop
shl
inc
movs
rcr
fnstcw
jae
sbb
arpl
mov
pop
adc
lods
retf
pusha
mov
jo
cmps
(bad)
mov
jno
pop
in
retf
dec
shl
dec
add
pop
push
fld
rcr
xchg
call
int3
push
inc
xchg
push
mov
aaa
ret
pop
mov
push
sub
popf
mov
cmp
pop
pop
out
jg
in
inc
jle
neg
dec
(bad)
mov
mov
dec
push
sub
cmp
jg
xchg
xchg
mov
xlat
sti
gs
and
xor
push
ins
xor
shr
push
retf
inc
loope
mov
mov
(bad)
stc
cmp
push
push
cmp
add
cvtpi2ps
xchg
into
adc
adc
out
pop
es
fnsave
leave
into
clc
inc
adc
div
push
fs
adc
add
add
mov
adc
fmul
sub
cli
sub
lea
pop
push
mov
cmp
jp
xlat
pusha
imul
(bad)
cmps
jge
add
or
and
int
and
push
adc
out
dec
mov
dec
push
jno
loop
lahf
push
mov
repz
inc
cmps
add
(bad)
pop
lock
push
adc
mov
push
out
adc
dec
cdq
cmp
jns
rcr
addr16
es
mov
movs
lea
sbb
add
and
mov
shl
es
test
ins
test
or
loop
add
call
cmp
mov
sbb
xchg
xchg
push
test
xor
mov
sbb
jo
mov
dec
(bad)
ins
rol
mov
inc
pop
sar
(bad)
push
cwde
mov
dec
jbe
push
xchg
or
fs
vcmpsd
xchg
stc
jo
ss
push
cwde
loopne
out
mov
pop
inc
inc
mov
das
pop
adc
sub
(bad)
int3
fst
bound
pop
cmp
xor
loope
cli
fst
shl
adc
push
into
cmps
mov
ja
aam
ins
sub
lahf
pop
adc
and
pushf
cwde
sbb
(bad)
mov
jne
sub
aas
icebp
xor
cs
jne
test
cmp
inc
popa
(bad)
sbb
stc
push
push
call
rcr
rcl
or
test
stc
test
mov
je
mov
out
pusha
jl
popa
enter
dec
imul
xor
and
pop
jecxz
outs
push
jne
sbb
jns
jecxz
lds
leave
cmp
test
daa
jb
jbe
jbe
dec
mov
(bad)
mov
mov
cmp
jecxz
mov
dec
dec
and
push
fxch
mov
pop
into
lea
ja
jge
xchg
repz
call
xor
dec
inc
push
daa
or
dec
xor
push
jae
das
sbb
ret
fwait
gs
pop
scas
adc
stos
jl
test
add
scas
test
punpckhbw
retf
out
lods
mov
dec
loope
inc
add
xor
lahf
in
mov
cld
in
ins
mov
lea
sub
jecxz
lods
jmp
pop
inc
xchg
and
xchg
call
(bad)
out
aad
fidivr
mov
pop
in
sbb
xchg
mov
jb
pusha
cmp
pop
and
data16
xchg
adc
js
push
dec
(bad)
fstp
sub
mov
je
cmp
mov
(bad)
jp
add
mov
leave
jecxz
fisttp
mov
mov
movs
jmp
mov
sub
out
dec
into
das
sbb
popa
push
sbb
lock
imul
imul
add
into
jmp
push
sub
mov
or
retf
out
sbb
mov
lods
mov
jg
sbb
xchg
mov
and
jae
mov
lods
sahf
cmp
ret
loope
cvtdq2ps
shl
jne
cmp
or
loopne
cld
push
popf
mov
je
or
jge
and
in
jp
ret
adc
mov
scas
add
mov
and
mov
push
sub
hlt
(bad)
in
in
and
adc
mov
push
inc
xchg
pop
aad
rcl
pop
or
fdiv
dec
lods
sub
dec
lock
movs
inc
retf
xchg
pop
pop
fs
mov
sbb
in
clc
popf
sbb
jae
xchg
add
sub
sub
cmp
jg
push
sub
fs
in
into
inc
in
arpl
sub
loopne
dec
push
leave
es
stos
mov
clc
bound
sbb
aam
pop
jo
jne
pop
xchg
mov
movs
xor
adc
jl
aam
inc
mov
imul
cmp
(bad)
xchg
rcl
std
adc
test
fist
cdq
inc
jns
mov
imul
loopne
aad
sbb
lods
mov
popf
or
out
mov
fmul
mov
add
das
arpl
inc
call
clc
outs
add
js
test
cli
push
call
call
call
inc
push
mov
pusha
inc
cmp
xchg
mov
into
mov
push
call
pop
loop
mov
popa
push
das
imul
push
imul
cmp
fbstp
loope
ret
mov
call
jb
adc
xchg
lea
mov
pop
add
cmp
mov
adc
push
xchg
dec
lods
les
mov
jo
xchg
mov
sub
jne
mov
sahf
mov
icebp
fbstp
ins
nop
je
rol
rep
popf
fld
cmp
das
mov
sbb
and
or
cmp
xor
in
pop
stos
(bad)
arpl
imul
jmp
fwait
daa
aad
sahf
push
and
pop
sbb
rcl
adc
loopne
rol
mov
fwait
jbe
xchg
icebp
shr
ret
jmp
xor
popa
push
cs
adc
pop
xor
ja
cmp
xor
jne
cwde
aad
aaa
mov
mov
jno
iret
xor
and
jl
sub
dec
sbb
push
ror
addr16
push
loopne
in
sbb
add
cli
inc
xchg
sahf
mov
jmp
pop
mov
mov
stos
loope
mov
inc
out
mov
push
inc
test
adc
rcr
fs
sub
sar
pushf
into
scas
arpl
xchg
and
and
scas
pop
sbb
fild
loopne
mov
dec
(bad)
push
daa
cmp
fdivr
call
nop
fisub
shl
int3
sti
mov
test
pop
(bad)
mov
popa
jmp
in
mov
outs
sahf
lods
and
scas
pop
(bad)
js
jne
and
cs
paddusb
fnstsw
popa
(bad)
ja
ret
or
sti
aad
(bad)
jle
in
mov
mov
test
xchg
sub
sbb
xchg
jns
adc
(bad)
mov
push
mov
cmp
mov
test
mov
and
pop
icebp
cmc
xchg
mov
(bad)
fdivr
dec
jecxz
ret
xor
js
or
jecxz
and
xor
vmwrite
add
pop
inc
fwait
jg
adc
cmps
fsubrp
add
pusha
pop
ja
jle
add
out
shl
sub
mov
icebp
in
or
(bad)
cmp
shr
and
mov
gs
mov
and
lds
push
sub
into
jp
loop
aas
in
cs
jg
clc
and
sti
jnp
js
pushf
or
mov
outs
stos
jl
mov
mov
or
xor
scas
and
cmp
push
cmp
dec
sbb
dec
xchg
les
mov
or
call
xor
aaa
mov
mov
scas
jb
xchg
cmp
inc
enter
lods
retf
cmps
xchg
outs
movs
mov
jg
xchg
mov
mov
mov
jnp
fbld
jp
adc
retf
xlat
leave
out
push
jecxz
push
jae
or
pusha
fild
movs
movs
gs
stos
fstp
adc
mov
adc
test
js
into
jmp
fiadd
or
mov
es
adc
nop
push
inc
fdivr
and
data16
lea
or
movs
aad
push
aaa
cwde
xchg
cmp
scas
xchg
sbb
ins
pop
(bad)
or
lds
out
popf
sbb
fs
pop
push
sar
cmp
pop
dec
in
sbb
test
push
out
push
test
cmp
sbb
jmp
retf
(bad)
inc
js
sub
mov
loop
and
xchg
mov
or
cmp
or
push
sub
in
hlt
mov
clc
movs
push
fsubr
and
ja
addr16
inc
test
imul
mul
mov
movs
outs
in
jmp
(bad)
test
add
mov
jle
sub
ret
aas
cs
iret
sbb
leave
(bad)
cmp
add
cmp
stos
test
jmp
leave
cli
sbb
push
mov
je
lods
fcmovnu
fcom
mov
and
push
sub
lds
enter
and
sub
sub
cmp
mov
out
dec
rol
xor
nop
fidiv
sbb
adc
xchg
add
clc
push
ror
cdq
retf
mov
push
nop
scas
sub
mov
inc
neg
mov
pop
(bad)
scas
(bad)
retf
sti
jns
jg
push
add
sub
adc
dec
repnz
xchg
add
jecxz
test
movs
dec
mov
pop
or
and
shl
inc
sub
hlt
lods
adc
xchg
ds
stos
neg
test
js
mov
sahf
fnsave
rcr
iret
shl
ja
imul
xchg
push
xchg
loop
cs
xor
cmc
push
aad
or
add
push
xlat
mov
ins
cmc
clc
ret
jae
pop
xchg
push
push
xor
cli
mov
cld
cmp
stc
loope
ds
into
and
mov
pop
and
push
fnstsw
outs
div
xor
bnd
mov
sbb
loope
ins
pop
mul
mov
in
jl
sahf
ins
outs
jle
jmp
mov
sbb
jmp
inc
mov
mov
sbb
mov
mov
ret
push
rcl
lods
adc
ror
lods
rcr
add
push
imul
jmp
jmp
sub
sar
sub
or
inc
lock
adc
test
pop
iret
xchg
dec
stc
test
pop
arpl
push
mov
std
icebp
ret
sub
and
xchg
repnz
jmp
xor
jge
ja
and
daa
mov
jns
sbb
dec
sbb
mov
aam
add
call
es
mov
fsubp
aad
jmp
mov
sahf
rcl
dec
mov
aam
xchg
jl
imul
stos
mov
shl
clc
mov
pop
sub
add
imul
jbe
stos
movs
add
sub
fmul
cmp
pop
mov
call
in
jmp
call
adc
lea
cmp
mov
inc
jb
push
dec
adc
xor
xchg
mov
xor
mov
sub
lods
sahf
shl
jae
pop
pop
push
lahf
mov
movs
ins
xor
in
lahf
xchg
add
daa
push
cmp
jne
mov
test
mov
xchg
xor
mov
sub
adc
in
fcmovbe
sub
fld
jo
data16
inc
mov
fwait
jle
xchg
rcr
dec
outs
imul
shl
and
xchg
cmp
xor
cmp
push
pop
ret
(bad)
dec
(bad)
je
data16
xor
(bad)
fiadd
outs
xchg
int3
inc
cmp
arpl
dec
push
cmps
ret
in
push
stc
dec
mov
push
inc
push
and
jo
cmp
sbb
pop
fcomp
or
mov
sub
push
(bad)
aam
lahf
(bad)
int3
sbb
mov
push
jno
rcr
pop
rcr
mov
push
dec
dec
adc
and
jnp
and
mov
xchg
mov
fidiv
xor
std
push
sbb
pop
test
sbb
xchg
jle
pop
out
movs
pop
(bad)
adc
sub
and
fnstsw
xchg
add
lods
in
ds
sub
xchg
xchg
cmps
push
mov
pop
ror
push
xchg
sub
dec
or
jp
ror
pushf
xor
or
push
addr16
call
je
push
daa
mov
cwde
pop
push
fwait
out
mov
mov
adc
mov
xchg
je
push
add
test
dec
outs
das
pop
xchg
pop
pop
loope
pop
dec
pop
stc
call
mul
aad
frstor
and
(bad)
jge
test
xchg
pop
mov
imul
loope
cld
sbb
mov
or
jmp
mov
or
mov
xchg
loopne
mov
push
cli
sbb
push
leave
out
pop
mov
mov
std
retf
lods
inc
add
or
shl
(bad)
lahf
fadd
jmp
xlat
in
loope
dec
ins
into
bound
pusha
nop
repz
rcr
sub
lea
sub
loop
mov
and
js
mov
mov
adc
(bad)
adc
add
mov
cmp
(bad)
sbb
jo
retf
add
fwait
mov
fstp
(bad)
mov
fadd
(bad)
out
jmp
push
gs
add
data16
call
lahf
inc
xchg
movs
inc
outs
pop
ds
outs
in
mov
dec
(bad)
push
fwait
div
je
mov
mov
sub
lods
push
jle
shl
push
out
inc
push
or
jecxz
in
aad
xor
ret
dec
jg
add
call
cmps
push
retf
addr16
fnstcw
xchg
mov
cmc
mov
mov
(bad)
shr
xor
enter
sahf
in
test
std
cmc
int3
xor
outs
inc
xor
add
sub
in
mov
xor
push
scas
aas
or
dec
pop
ror
scas
outs
aas
test
push
xchg
rcr
imul
addr16
mov
ret
in
lds
cmps
pop
out
je
or
aad
bound
pop
cdq
xchg
xchg
jle
addr16
div
dec
xor
mov
retf
or
inc
xor
pop
stc
cmp
push
inc
jmp
sub
test
out
rcl
sahf
add
imul
(bad)
jmp
xor
lods
repnz
fbld
test
inc
in
xor
stos
add
pop
inc
sbb
clc
jnp
sub
(bad)
mov
mov
cmps
adc
gs
ror
inc
pop
(bad)
xchg
ja
jp
sbb
push
and
loopne
jmp
inc
loop
mov
inc
sbb
int3
comiss
arpl
lock
cli
push
ror
iret
mov
mov
inc
pop
add
mov
setp
adc
inc
mov
push
imul
loopne
lods
dec
sub
sub
(bad)
and
jp
mov
inc
mov
retf
ss
and
mov
adc
repz
cmps
pop
jo
test
add
shl
and
or
jo
sbb
arpl
mov
push
or
jle
ss
jmp
xchg
inc
inc
and
xchg
jne
les
xlat
cmps
cs
cli
dec
(bad)
fst
fcmovnu
cmp
ret
test
pop
dec
es
mov
dec
jmp
leave
dec
fld
push
lds
add
retf
jns
adc
pushf
add
dec
sbb
or
int3
xchg
dec
enter
fsub
adc
shl
mov
mov
ds
out
mov
jnp
pop
clc
xor
sub
push
adc
stc
mov
pop
jb
retf
mov
outs
div
pusha
sub
or
test
xor
add
add
mov
popa
and
dec
cmp
pop
aam
push
nop
and
mov
(bad)
aas
jg
in
dec
xchg
jne
clc
mov
mov
adc
loopne
(bad)
jmp
xor
xchg
and
or
cli
mov
int3
xchg
xchg
pop
das
adc
shl
pop
sub
mov
mov
mov
cld
jle
xchg
and
jmp
mov
xchg
mov
mov
pop
sub
jnp
jae
mov
adc
push
popf
mov
pop
call
sub
fistp
jecxz
movs
inc
stos
mov
and
xor
pop
jecxz
xchg
stc
mov
adc
loopne
and
addr16
xchg
repz
add
cmp
std
shr
test
inc
push
push
sub
and
movs
test
shr
and
les
jmp
repnz
and
mov
fs
mov
fistp
and
cli
push
ins
icebp
mov
add
je
push
div
outs
lods
or
(bad)
push
xchg
fcmovne
or
loop
adc
int3
inc
mov
retf
xchg
ds
movs
in
cld
stos
mov
in
mov
cmc
or
icebp
loopne
and
je
aad
mov
sbb
addr16
and
ret
cli
adc
or
das
pushf
adc
movs
icebp
push
not
pop
dec
cli
or
jecxz
loopne
inc
or
pop
xor
aaa
sti
outs
loopne
ret
xor
mov
gs
bound
pop
scas
loope
les
(bad)
fadd
fadd
into
bound
ja
sub
mov
enter
clc
xor
pop
ins
inc
retf
pop
outs
dec
in
sub
cmc
push
dec
fist
mov
stos
ins
xchg
stos
adc
add
mov
neg
adc
cmp
pusha
hlt
jne
cmp
dec
and
rol
jecxz
sbb
cmp
xchg
mov
loop
jae
dec
icebp
mov
add
test
(bad)
in
(bad)
cmp
out
stc
and
ret
dec
out
test
popf
inc
shr
sbb
cmps
xchg
mov
imul
aad
and
mov
(bad)
cmc
jp
dec
mov
addr16
pusha
xchg
xchg
iret
sbb
pop
outs
pop
loopne
dec
xchg
fwait
sub
leave
xor
enter
inc
push
sbb
xor
movs
mov
inc
mov
mov
or
pop
mov
xor
data16
loop
nop
stos
lock
pop
clc
gs
ss
xchg
xor
and
jne
mov
(bad)
retf
aad
cmps
out
inc
adc
dec
daa
retf
test
and
lahf
push
rcl
mov
xchg
sbb
call
sbb
fnop
in
ficom
inc
pusha
pop
mov
xchg
fstp
xchg
mov
mov
call
push
int
mov
sahf
dec
cdq
fwait
lock
adc
sahf
call
push
js
sbb
stc
fwait
mov
mov
int3
jb
dec
push
cmp
test
shl
inc
stos
movs
shl
fmul
cmp
ret
xor
call
aaa
or
or
and
ins
shr
mov
fidiv
jb
mov
pusha
jle
sti
test
in
out
sbb
movs
sbb
cmp
or
sti
cwde
push
in
addr16
cld
out
gs
mov
loope
fdivr
shl
xchg
call
sub
shl
out
mov
in
mul
cld
xchg
sub
sub
not
jo
dec
sahf
add
loopne
scas
call
push
sbb
fucomp
mov
ss
push
ror
push
or
test
mov
xchg
cmp
sbb
leave
call
pushf
fwait
push
nop
imul
mov
sub
push
mov
in
add
std
cli
add
sbb
mov
ret
mov
inc
push
(bad)
adc
dec
stos
or
xchg
adc
xchg
mov
cmc
dec
or
push
mov
test
dec
imul
cmp
push
lahf
push
sti
add
(bad)
bound
jecxz
loopne
popf
push
int
mov
pop
xchg
dec
jp
repz
push
fistp
mov
fdivr
je
or
xchg
sub
aas
test
out
(bad)
jae
adc
dec
mov
enter
imul
mov
inc
rcl
fwait
mov
(bad)
cmp
(bad)
int3
cmp
sub
xchg
jo
rcr
lock
push
dec
inc
sbb
iret
mov
mov
add
mov
lea
rcl
ret
retf
shl
dec
(bad)
out
sub
xchg
outs
daa
push
mov
dec
loope
test
xchg
mov
lods
sub
call
sar
add
out
enter
pop
dec
imul
push
aas
imul
inc
movs
cld
lds
cmp
(bad)
sub
outs
sbb
add
pop
aad
repnz
ds
mov
imul
inc
add
out
mov
ficom
inc
xlat
adc
add
sbb
out
imul
pop
sbb
icebp
inc
mov
add
sbb
test
pop
retf
test
fld
inc
xchg
pusha
jp
xchg
movs
test
cmp
sbb
pop
push
push
fnsave
xor
sbb
mov
adc
jecxz
arpl
cli
test
shr
mov
retf
aad
or
lea
in
nop
jle
xchg
les
gs
mov
mov
int3
imul
loop
ins
mov
cmc
fadd
mov
call
xlat
jg
add
add
xchg
test
push
jg
(bad)
jmp
push
mov
leave
cld
xchg
jecxz
and
xchg
lea
mov
push
into
push
scas
popa
(bad)
adc
jge
lods
push
mov
sbb
xchg
shr
sbb
dec
mov
out
repz
mov
in
ins
adc
retf
in
xor
mov
hlt
cmp
ja
scas
sub
dec
xor
push
loop
dec
sti
inc
mov
icebp
addr16
retf
sub
cmp
xor
sbb
aad
mov
xor
ret
pusha
rcr
mov
pop
xor
mov
push
call
popa
sti
int
pop
add
jle
fwait
cmp
test
retf
je
aam
lea
or
shl
adc
sub
jbe
fld
ds
inc
mov
(bad)
pop
rol
jae
cmp
clc
cs
out
or
lock
and
inc
shl
je
add
cmp
sbb
cmps
xchg
int
xchg
out
aad
inc
stos
or
fsubr
sbb
mov
sbb
test
cmp
(bad)
je
lock
jle
outs
cmp
jb
and
push
mov
mov
sbb
pop
mov
jns
or
dec
jnp
xor
pop
dec
shl
in
xchg
push
iret
xchg
mov
vmovq
pop
push
fadd
cmp
sbb
dec
adc
or
stos
into
push
jmp
jae
cmps
and
imul
data16
jnp
pusha
push
(bad)
je
lahf
mov
pop
mov
(bad)
push
push
ins
fsubr
adc
aad
sub
push
pop
add
push
(bad)
and
in
push
ins
mov
loopne
je
stos
and
out
mov
push
mov
or
jmp
xchg
iret
or
jl
pop
imul
add
jns
dec
in
ss
ret
add
pop
add
inc
and
pop
ins
jp
out
mov
fimul
mov
xchg
je
sbb
(bad)
stos
add
fbld
pop
xor
(bad)
lahf
out
sub
dec
(bad)
push
inc
cmp
adc
pop
inc
push
jle
jmp
dec
test
call
sub
jbe
or
push
es
sbb
fwait
int3
movs
fwait
les
add
push
jle
in
xor
aaa
inc
dec
jns
daa
push
mov
repz
mov
and
mov
loope
push
loope
pop
rcl
pop
xchg
sub
pop
(bad)
pushf
pop
ss
mov
push
dec
dec
sbb
inc
repz
mov
push
in
in
(bad)
std
test
stos
aad
jae
xor
enter
scas
bound
nop
rol
dec
ret
pop
xor
pop
xchg
shr
push
xor
in
rol
cmc
push
aaa
pop
sub
repz
mov
or
dec
mov
ds
or
lods
repz
push
pop
sbb
in
cmps
ds
lods
outs
pop
jle
fldenv
push
test
pushf
int
cmp
idiv
sbb
push
hlt
dec
xchg
and
nop
shl
inc
jnp
push
mov
aas
mov
xchg
test
mov
mov
aas
nop
fwait
mov
add
sbb
inc
mov
pusha
sbb
push
(bad)
(bad)
enter
pop
dec
mov
xlat
or
fmul
mov
leave
pop
outs
sbb
jle
jb
sahf
sub
pop
sub
call
sbb
cwde
xchg
fdivr
ficom
mov
fs
adc
stos
jl
cli
into
push
pop
push
and
test
retf
ja
jge
jns
jecxz
dec
lea
pop
jb
ret
pop
pop
adc
sti
ins
xor
or
mov
cmp
dec
jbe
cld
xchg
xchg
movs
mov
rcl
test
lds
mov
jbe
ja
jmp
mov
push
call
loopne
jns
es
pop
stos
sub
add
mov
int
jp
pop
repnz
ror
xchg
adc
mov
loope
inc
mov
push
cmp
inc
xor
stos
inc
adc
mov
(bad)
(bad)
popa
stos
and
ror
mov
jbe
xchg
iret
fcmovu
add
imul
add
mov
inc
movs
or
sbb
inc
cmp
pop
retf
cmps
cmp
mov
rol
fistp
rcl
xchg
je
cs
sbb
dec
lods
lods
mov
cwde
jne
cmp
cmp
or
push
and
stos
sub
cmp
add
xor
push
adc
sahf
xchg
jne
out
push
sbb
shl
mov
push
push
and
pushf
fs
pop
into
add
aas
mov
fld
cmp
mov
call
pop
movs
sti
xor
xchg
mov
push
ins
push
rol
mov
mov
dec
std
xchg
mov
and
xchg
out
ins
fdivr
mov
mov
lds
dec
pop
xor
std
test
xchg
dec
test
ret
jne
pusha
ficom
or
pop
push
pop
push
jb
xor
fwait
inc
icebp
loop
imul
mov
cmp
and
(bad)
ret
push
outs
lahf
cmp
and
pop
pop
sub
jmp
adc
call
cmps
out
arpl
cmp
js
cmp
sub
or
lock
js
fmul
into
or
out
add
syscall
bound
adc
mov
repz
(bad)
retf
or
shl
jecxz
jle
nop
or
cmc
sub
cs
mov
outs
ret
adc
in
jno
cmps
jns
imul
dec
cmp
nop
ror
icebp
jge
add
addr16
sbb
inc
aaa
jnp
stos
shr
push
lods
les
mov
and
dec
mov
pop
stos
dec
xor
fwait
shl
das
jbe
sahf
lea
mov
lods
mov
test
movs
pop
ins
cmp
or
adc
sub
test
mov
add
mov
mov
pop
inc
dec
adc
inc
std
mov
bound
in
dec
iret
dec
cmps
fild
pop
push
lds
aad
in
scas
dec
jp
repnz
and
sbb
imul
add
mov
fnsave
icebp
or
sbb
sbb
lock
sbb
jle
xor
imul
mov
cdq
xchg
jb
push
jmp
xor
mov
push
fldenv
popa
add
outs
jge
(bad)
xor
or
ss
dec
fiadd
push
jg
(bad)
mov
and
mov
fimul
mov
test
push
inc
fldcw
push
std
sbb
cmp
xchg
pop
loopne
pop
mov
mov
neg
cmp
pusha
dec
mov
out
mov
mov
and
sbb
ja
and
mov
and
or
pop
push
mov
clc
shl
js
mov
(bad)
and
ja
jo
ficom
pop
pushf
sub
aas
sub
(bad)
push
sub
das
aad
cmp
xchg
imul
add
lahf
xchg
in
and
out
xchg
xor
xchg
movs
fcom
in
rcl
enter
and
push
hlt
pop
jl
iret
(bad)
push
push
add
pop
adc
jmp
pop
or
cmc
mov
int3
in
inc
add
es
js
loope
lea
adc
fisttp
cmps
inc
push
add
jecxz
icebp
aam
out
fisubr
je
and
jmp
and
mov
clc
and
mov
test
and
sbb
xlat
bound
test
sub
pop
mov
imul
xchg
dec
mov
lock
pop
dec
jno
and
dec
push
jge
cmc
aaa
xor
cmp
fwait
sub
je
mov
or
(bad)
sbb
mov
jmp
into
mov
call
and
and
inc
add
xor
sbb
fidiv
ja
xchg
mov
and
and
cs
movs
das
call
(bad)
mov
aaa
jl
repz
xor
nop
retf
mov
sbb
das
inc
mov
iret
call
xchg
nop
(bad)
jge
hlt
cmp
mov
xor
stc
adc
inc
ins
cmps
pop
lahf
rol
sti
jecxz
jno
shl
jg
jp
je
test
mov
leave
mov
mov
arpl
cli
or
push
xor
push
cdq
lahf
mov
and
sar
(bad)
test
jg
adc
add
loopne
out
push
mov
pop
xchg
pop
cld
inc
movs
mov
loope
xlat
sbb
jns
push
rcl
outs
inc
aaa
jbe
xor
test
and
daa
add
(bad)
sbb
or
cmp
lds
inc
pop
mov
scas
dec
xor
or
test
xchg
adc
ss
movs
inc
sub
jo
jo
mov
jp
mov
ss
xor
mov
in
mov
sar
lods
mov
into
in
inc
xor
loopne
mov
test
in
adc
out
stc
arpl
cmp
cld
jg
and
or
stos
sbb
cmp
push
test
push
adc
jmp
clc
jle
jmp
into
fistp
dec
fwait
or
sbb
mov
mov
push
(bad)
dec
push
dec
sub
retf
mov
jmp
mov
adc
retf
mov
(bad)
fld
(bad)
pop
or
add
lds
sub
outs
outs
mov
pop
adc
cs
loope
sub
nop
mov
dec
dec
aam
jmp
out
loope
lea
popa
adc
mov
div
mov
mov
jg
pop
mov
in
xor
aas
jp
mov
ins
or
sahf
pop
xor
pop
adc
adc
aas
sbb
sbb
push
je
test
sub
js
xchg
pop
add
fwait
data16
push
jle
int3
adc
jg
imul
enter
and
aad
xor
popf
or
jle
jl
movs
push
ins
aas
addr16
jle
add
repnz
add
jo
push
pop
dec
retf
xor
push
sahf
aad
cdq
push
loope
imul
dec
cli
mov
enter
add
pop
(bad)
push
fsubr
lods
xor
movs
fisub
add
dec
ds
adc
pop
repnz
popa
cmc
into
into
call
fcmovnbe
cmps
sub
iret
inc
push
xchg
sar
push
fs
mov
or
push
xacquire
inc
fucomp
ret
dec
in
sub
and
sub
repz
lea
gs
jmp
ss
out
sub
mov
cmp
popf
std
(bad)
mov
fcmovnbe
call
aaa
jge
mov
fcmovnbe
cli
add
push
jns
cdq
push
out
push
stos
mov
ficomp
pop
fcmovnb
stc
cmp
push
fbstp
int3
in
adc
sub
and
push
sti
pop
push
mov
aaa
mov
pop
cld
sub
or
cwde
sbb
test
ror
mov
jmp
aas
cli
mov
push
pushf
out
lods
out
sar
add
cli
pop
xchg
int3
(bad)
call
es
test
fcmove
pushf
mov
out
or
adc
cmp
test
stos
repnz
clc
fsubr
loope
rcl
xor
xor
enter
and
cli
ror
mov
cdq
jmp
sub
dec
into
shl
mov
ficom
jmp
std
leave
inc
sbb
or
(bad)
icebp
mov
popa
xor
inc
mov
add
loopne
ret
inc
xchg
repz
fadd
iret
inc
call
adc
test
je
adc
add
cmps
daa
retf
imul
mov
cs
jl
mov
in
pusha
mov
xchg
cmp
fisubr
shl
sbb
idiv
pop
add
and
push
xchg
mov
sub
mov
adc
ror
xchg
cmc
popa
pop
mov
fs
lock
ins
pop
or
cld
icebp
in
xor
ins
xchg
xlat
push
inc
and
pop
sbb
addr16
mov
inc
sub
cmc
xor
lock
or
stos
out
js
or
xchg
push
retf
xor
jbe
mov
outs
jmp
bound
and
rol
mov
pop
lods
inc
adc
iret
je
jle
inc
push
sbb
(bad)
xchg
fsub
mov
jae
aas
jne
lds
mov
mov
movs
bound
jns
adc
ins
sahf
leave
push
(bad)
jno
imul
xor
pop
jmp
cwde
or
mov
imul
(bad)
movs
cli
inc
ins
adc
xlat
out
xchg
pop
mov
arpl
mov
pop
sti
iret
mov
add
cmp
jbe
and
outs
lods
aaa
inc
pop
adc
loope
out
dec
jmp
das
loop
inc
out
out
out
fidivr
sar
(bad)
shr
jge
adc
sbb
repz
pop
cli
into
cmps
cmp
out
cmp
in
test
in
add
fild
xor
loope
pop
adc
lds
jo
mov
push
dec
lds
mov
shr
push
int3
push
bound
mov
pop
cwde
xlat
pusha
clc
inc
dec
pop
inc
data16
add
movs
adc
neg
mov
push
loope
cmp
mov
sub
push
push
cwde
add
jmp
sub
outs
xchg
pop
jns
push
dec
cmp
call
or
push
ficomp
mov
add
mov
adc
sbb
mov
xchg
adc
and
xchg
xchg
jns
fdiv
int
std
dec
xchg
shl
aaa
sti
jp
or
jb
sub
lock
mov
inc
xor
das
inc
out
les
test
sbb
push
or
repnz
mov
loopne
mov
pop
popa
and
pop
adc
repz
outs
sub
push
int
mov
retf
movs
xor
into
(bad)
(bad)
cmp
pop
(bad)
out
mov
dec
mov
sub
ja
clc
push
pop
mov
dec
sub
(bad)
push
sahf
lds
jo
sub
mov
xchg
lock
cmp
pop
add
ja
dec
xlat
xor
(bad)
adc
mov
pop
mov
data16
push
sbb
in
pop
add
movs
(bad)
sub
cmps
cmc
ss
add
jmp
dec
inc
popf
push
outs
push
jecxz
ffree
add
mov
pop
inc
xor
cli
xchg
popa
pusha
push
dec
or
out
pop
add
cmc
cwde
push
call
loop
fs
mov
scas
xchg
mov
stc
fdiv
or
inc
test
jmp
fcom
loopne
add
inc
dec
rcr
rcl
push
pop
xchg
xchg
inc
lahf
or
jmp
aaa
mov
jmp
pop
ds
push
xchg
or
and
adc
ret
cmp
push
mov
push
jmp
aaa
sub
inc
mov
xor
cmps
cmp
push
nop
jns
and
pop
daa
(bad)
(bad)
stc
jbe
call
push
js
pop
leave
add
ins
repnz
jge
xor
mov
or
xchg
lods
jbe
std
cs
imul
push
xor
mov
jno
jle
cs
movs
fadd
in
(bad)
push
or
push
out
adc
pop
jle
rcl
pop
loopne
inc
int3
jle
mov
neg
cmps
loopne
mov
imul
xchg
inc
fisubr
icebp
inc
enter
lods
xchg
fcom
sbb
xchg
in
mov
(bad)
mov
rcr
repz
and
lock
int3
ret
xor
in
aas
mov
gs
sub
jbe
pop
xchg
jne
std
scas
mov
cmp
mov
cwde
xchg
inc
add
and
ret
add
in
fidiv
loope
rcr
inc
xchg
rcl
pop
jle
xor
sub
fdivrp
scas
dec
add
push
or
dec
adc
cs
jl
or
push
mov
jg
ds
mov
push
icebp
pop
add
repz
loopne
test
ss
loope
leave
ins
mov
cwde
mov
push
bound
xchg
sub
punpckhbw
fdiv
mov
in
mov
push
fs
dec
jae
not
push
sub
cdq
shl
push
xor
das
inc
pushf
retf
inc
xchg
sbb
adc
inc
dec
idiv
mov
lods
in
xor
jge
mov
xor
pop
lock
xchg
add
cwde
dec
jbe
nop
out
aad
cmp
adc
mov
dec
xor
fnsave
or
adc
and
or
sub
cdq
(bad)
fldcw
adc
sub
add
call
xor
clc
sub
add
sub
dec
jb
and
std
stos
mov
cwde
adc
daa
ins
fs
pop
mov
sbb
push
jmp
ins
test
loope
nop
xchg
out
stc
xor
into
pop
push
(bad)
nop
mov
jecxz
pushf
int
call
and
cmp
or
or
jo
std
sub
inc
inc
mov
pop
and
(bad)
xor
out
and
mov
add
retf
inc
push
sbb
jb
mul
push
pop
aaa
popa
adc
xor
fmul
outs
jbe
mov
lahf
and
or
push
push
jge
push
lods
adc
std
test
lock
mov
or
xor
pop
out
and
or
pop
push
loopne
adc
sbb
loop
jmp
lea
push
jo
ins
idiv
xchg
push
cwde
outs
sub
adc
jb
adc
in
xchg
xor
pushf
and
mov
(bad)
stc
lock
and
xor
outs
jbe
mov
push
cmps
scas
pop
jge
popa
movs
jns
push
adc
mov
(bad)
clc
cwde
cmp
mov
xchg
rol
iret
push
fnstcw
call
test
pop
or
repnz
mov
pushf
xchg
or
loop
jmp
xchg
(bad)
aad
xor
add
pop
sahf
std
mov
(bad)
adc
mov
mov
xchg
or
jnp
add
cmp
mov
ret
out
xor
xor
pop
jns
adc
fidivr
xor
push
clc
sbb
push
mov
clc
loopne
outs
rol
das
push
xchg
repz
vcvtsd2ss
xor
ja
adc
call
push
fidiv
sar
jo
loop
fisttp
jg
inc
lds
mov
mov
push
ror
fadd
dec
xchg
mov
cmps
stc
push
cmp
mov
mov
mov
lea
jmp
adc
inc
sub
mov
jnp
ins
pop
(bad)
mov
lods
bound
lahf
push
movs
inc
push
hlt
call
or
xchg
fadd
jne
ins
ds
sbb
es
into
dec
fistp
pop
xchg
cmp
mov
aam
test
mov
xlat
mov
mov
rcl
xchg
xchg
aad
or
xchg
call
das
retf
test
jl
pop
sahf
movs
cwde
rcr
sub
imul
fld
push
outs
ret
jns
push
retf
mov
sbb
cmp
(bad)
ficomp
(bad)
sti
outs
sbb
mov
popa
(bad)
jmp
mov
sbb
fidivr
xor
mov
lock
icebp
xchg
jecxz
mov
xchg
lods
adc
sahf
fwait
out
xchg
or
and
mov
or
repnz
pop
jb
in
call
push
add
inc
mov
jo
push
pusha
dec
pop
xchg
cmc
cs
or
sub
mov
fucomi
bound
ror
ss
es
(bad)
lds
xor
or
or
xor
pop
adc
sbb
dec
scas
test
add
and
or
fwait
retf
mov
xor
or
jge
push
addr16
pop
and
retf
dec
fist
push
jne
pop
std
in
fadd
xchg
lods
aaa
add
push
lock
jmp
fldenv
mov
adc
push
inc
aaa
push
sub
push
cmps
and
scas
and
mov
je
lds
xlat
sbb
test
cmps
sbb
iret
mov
sbb
test
mov
call
movs
dec
cld
mov
mov
cmps
cmps
cwde
ss
add
sbb
sar
dec
xchg
sbb
sub
jg
out
pop
loop
shr
mov
pop
aas
or
out
mov
jp
or
adc
jno
jae
fld
shl
jecxz
lods
add
rcl
inc
and
pop
outs
lods
mov
call
test
sbb
inc
xchg
and
push
pop
or
mov
out
jno
repz
push
xor
and
test
das
dec
test
imul
dec
test
inc
aam
in
inc
sbb
pusha
ds
xor
loop
jmp
out
jge
call
cmps
out
test
dec
loop
xor
(bad)
faddp
fist
dec
adc
push
jns
out
push
pop
test
dec
mov
stos
ret
(bad)
push
pop
add
add
fwait
bound
(bad)
xor
mov
ins
mov
jae
dec
ret
nop
push
mov
cmp
ret
les
test
pushf
outs
in
or
mov
lock
test
inc
or
lahf
mov
jmp
dec
jne
mov
int3
pop
add
dec
rcr
or
inc
or
cmp
les
call
in
pop
sub
sti
popa
dec
in
pushw
xchg
mov
es
retf
mov
dec
stc
mov
in
dec
pop
je
popf
sti
scas
fimul
repnz
push
popf
jns
or
jnp
ret
retf
rol
sahf
(bad)
lea
adc
jae
adc
pop
lahf
jnp
je
sbb
cmps
data16
push
loope
and
and
and
or
pop
mov
nop
fs
or
mov
les
shl
xchg
arpl
mov
mov
mov
call
sti
lock
jg
fisttp
imul
into
jb
adc
pop
mov
shl
dec
pop
cmp
sub
add
dec
sbb
aas
and
and
cmps
js
(bad)
pushf
jmp
push
inc
enter
(bad)
out
mov
mov
into
(bad)
jg
fsubp
adc
cmp
popf
xchg
lds
outs
imul
div
sti
jmp
(bad)
push
std
pop
or
fs
inc
pop
(bad)
arpl
inc
iret
sub
loopne
ja
mov
(bad)
je
add
xlat
fninit
cmp
xor
mov
sub
mov
mov
or
lock
fs
lea
jg
sar
push
shr
retf
and
mov
call
sahf
aad
mov
adc
push
mov
and
daa
lods
data16
xlat
xor
adc
mov
push
or
lods
pop
clc
fld
jge
call
test
in
and
loopne
mov
pop
inc
xchg
pop
lds
and
cdq
jle
adc
xchg
jo
mov
add
packuswb
test
leave
popf
clc
ret
out
push
mov
dec
push
mov
cmovnp
pop
inc
xlat
(bad)
mov
mov
sahf
and
cdq
sbb
fwait
xor
pusha
pusha
dec
jle
add
imul
inc
test
rcr
hlt
rcl
jle
jnp
movnti
out
inc
mov
icebp
xor
and
add
pop
gs
dec
xchg
stos
je
sar
pop
sbb
dec
mov
jl
add
js
popf
test
cmc
and
and
lods
xor
dec
shl
sbb
cmp
rcr
out
dec
push
cmp
fidiv
cdq
in
and
out
and
pop
in
clc
(bad)
xchg
aaa
test
dec
loopne
add
mov
xchg
adc
and
pop
add
jge
mov
repnz
and
call
inc
ins
popa
dec
(bad)
jb
fnstcw
mov
lods
je
std
push
shl
mov
aad
add
fs
ss
mov
loopne
test
in
xor
xor
add
or
leave
sub
dec
popf
rcl
inc
pop
les
adc
mov
rcl
retf
fadd
pop
sti
add
fisubr
push
mov
mov
push
popf
shl
lods
fimul
repz
pop
mov
sbb
adc
xchg
enter
ret
lock
movsx
out
push
pop
mov
inc
push
jle
in
pusha
push
(bad)
sbb
or
sbb
mov
pop
cmp
cmc
fcmovnbe
ror
push
or
imul
repnz
pop
push
fwait
sbb
adc
xchg
mov
jecxz
and
jl
mov
mov
mov
sbb
mov
fdivr
out
pop
xor
cmp
mov
and
mov
or
cmp
stos
push
in
ja
lahf
mov
xchg
add
sbb
jo
lods
loop
push
and
and
mov
loop
xchg
add
daa
iret
mov
mov
or
(bad)
bound
jae
enter
sub
pop
fbstp
jne
mov
pop
retf
jge
dec
fsub
inc
push
add
inc
mov
mov
xor
jge
ins
lahf
sbb
gs
retf
je
call
adc
(bad)
das
daa
das
cld
jno
jp
movs
leave
test
xchg
fiadd
call
test
inc
dec
sbb
mov
or
push
out
stos
mov
int3
sbb
push
mov
jnp
or
gs
dec
popa
call
add
sbb
pop
neg
prefetchw
sub
mov
jmp
mov
bound
pop
dec
(bad)
or
cmc
out
push
mov
movs
dec
jne
pop
cmp
inc
dec
dec
xchg
cli
jnp
adc
(bad)
scas
daa
mov
(bad)
mov
pop
bound
dec
cwde
test
loopne
adc
cdq
sub
cwde
push
mov
lea
pop
stos
adc
sbb
mov
sub
or
xor
inc
pop
lock
cld
mov
cmp
or
jmp
out
xchg
dec
js
xlat
mov
jg
mov
mov
cld
mov
jp
push
add
pop
popa
(bad)
jg
dec
and
push
push
lods
adc
or
inc
adc
jl
jb
add
mov
mov
dec
adc
mov
js
pusha
pop
ss
xlat
scas
jmp
outs
pop
ins
mov
xchg
popf
sub
lock
xor
and
xor
cmps
push
out
cmp
cdq
inc
jg
inc
jne
pusha
fwait
cs
ins
add
test
push
scas
outs
jno
shr
jne
ret
adc
push
movs
inc
ss
adc
push
pop
inc
fwait
iret
(bad)
icebp
stc
jle
cmp
cwde
enter
cwde
mov
ficom
dec
or
jo
pushf
ins
popf
sub
mov
aad
les
(bad)
lds
xchg
add
xor
pop
dec
lds
fsincos
pop
outs
dec
sub
mov
inc
daa
stos
dec
push
jmp
mov
repnz
test
sub
jg
cmp
rol
adc
into
not
fild
dec
add
inc
pop
inc
jb
adc
sahf
xchg
xor
mov
cli
jmp
xchg
inc
loopne
mul
pop
and
mov
es
xchg
js
dec
jbe
ins
adc
sub
push
js
inc
fisubr
push
(bad)
ror
add
in
sub
popf
cmp
or
jbe
xchg
or
mov
fnstsw
adc
iret
sub
xor
imul
xchg
xor
cmp
adc
cmps
fs
repnz
cmp
out
jb
cmp
jae
xchg
lods
push
lahf
or
push
pop
sbb
call
add
out
adc
sti
loope
dec
icebp
push
pop
mov
rcl
mov
lods
cmp
push
xchg
imul
jb
xor
mov
loop
add
push
xchg
mov
lea
loop
jb
pop
cmp
sbb
or
jnp
cmp
ss
addr16
ror
xchg
xor
jnp
add
push
fimul
add
dec
push
xor
cmps
inc
ficomp
loopne
mov
icebp
scas
xor
hlt
aas
mov
je
mov
(bad)
es
sub
imul
jge
lods
mov
ror
mov
fwait
nop
fmul
xor
inc
add
bound
lods
cdq
in
jb
jmp
mov
jbe
fistp
sbb
xlat
mov
mov
scas
push
push
movs
ret
adc
ret
inc
lods
xor
nop
ins
jmp
jnp
or
or
repz
dec
leave
jno
mov
cmp
or
mov
xlat
push
fwait
or
jo
xor
fisttp
push
gs
sbb
dec
imul
push
xchg
and
and
cs
xchg
ret
ds
mov
cmps
sub
test
push
cli
pop
mov
cdq
and
das
test
std
pop
out
ss
pop
xchg
sbb
loopne
test
pop
fstp
inc
mov
push
jl
add
add
aam
inc
add
stos
add
pop
and
xor
mov
ins
push
adc
cdq
(bad)
mov
lock
cmp
scas
sbb
jl
ror
icebp
sbb
fldenv
dec
add
fiadd
repnz
pop
and
popa
into
stc
xlat
fucomip
sub
xlat
or
push
fst
xchg
jp
adc
ja
cli
inc
int
retf
jbe
pusha
dec
lahf
loopne
mov
jge
add
push
stc
call
inc
mov
bound
test
adc
push
test
setbe
mov
stc
lods
xchg
ror
push
rcr
in
push
je
sahf
jne
dec
jmp
dec
imul
sbb
xor
xchg
sahf
dec
cmp
inc
cwde
js
mov
outs
mov
adc
frstor
les
pop
inc
dec
xor
fidivr
cli
mov
jmp
fidiv
xor
push
add
push
pushf
popa
dec
fild
inc
lods
hlt
jo
sbb
jne
addr16
in
popf
xchg
sahf
push
dec
cwde
mov
in
push
popa
cwde
add
or
xchg
lock
stos
retf
sar
mov
xchg
mov
js
es
lods
mov
fs
aad
or
cld
inc
cmp
add
cmp
jmp
call
sar
out
(bad)
dec
add
inc
pop
adc
es
imul
jle
daa
(bad)
in
rcl
retf
int3
pusha
call
aad
mov
aam
fbld
les
push
inc
sbb
pushf
xchg
test
retf
fs
jne
(bad)
push
dec
mov
imul
lea
lds
push
or
shr
xor
sub
pop
daa
das
push
push
adc
aas
mov
and
sub
dec
scas
adc
sbb
aaa
imul
jge
and
adc
nop
icebp
mov
jmp
cmps
sub
aam
out
cmps
adc
sub
les
pushf
ret
enter
and
lods
out
scas
mov
js
jmp
fwait
in
dec
scas
out
fld
xchg
pop
outs
sub
push
iret
rol
rcr
dec
mov
inc
cmp
bound
mov
scas
sbb
push
retf
push
popa
daa
popf
adc
fmul
inc
jne
xchg
push
pusha
push
mov
outs
(bad)
outs
lds
mov
mov
leave
and
sub
xchg
pop
shl
jle
inc
mov
out
fwait
inc
mov
jb
mov
pop
jle
retf
stc
sbb
pop
sbb
les
adc
pusha
sub
fwait
repnz
and
nop
push
or
in
jmp
out
(bad)
(bad)
ret
pop
pop
hlt
in
dec
lock
xor
pusha
test
fimul
shr
xbegin
shl
inc
pop
loope
in
xlat
mov
inc
out
(bad)
movs
cmp
imul
jle
push
lods
inc
imul
dec
pop
adc
call
or
or
sbb
loope
pop
fwait
loopne
les
push
stos
mov
clc
mov
fcmove
in
mov
lahf
pop
dec
sbb
xchg
(bad)
mov
pop
mov
pop
test
mov
push
iret
inc
sub
movs
inc
fisttp
push
pop
das
popf
loopne
or
add
push
dec
movs
in
and
in
push
ret
cmp
cmp
call
and
xchg
inc
jecxz
enter
mov
adc
fnstsw
cmp
leave
jno
inc
xchg
mov
pop
es
adc
addr16
test
loop
jmp
jae
xor
mov
fst
lds
loope
adc
stc
cmp
sar
loop
cs
cs
mov
sbb
jnp
pop
cwde
mov
test
adc
jecxz
xor
xor
shl
retf
mov
pop
dec
(bad)
mov
inc
cmp
outs
mov
sti
imul
pop
nop
add
int3
retf
add
fld
lods
mov
cmp
out
or
sbb
cmps
repz
push
sbb
xchg
push
inc
rcl
push
dec
call
mov
(bad)
out
mov
movs
adc
pop
repnz
inc
ins
pusha
cwde
xor
and
sub
mov
pop
mov
sub
adc
pop
rol
ins
test
jne
or
idiv
in
push
dec
fsub
pop
and
mov
jge
cmp
js
pop
leave
or
lea
and
cdq
(bad)
sbb
fmulp
sub
sub
adc
pop
fldcw
pop
ret
push
mov
cmp
(bad)
lods
addr16
adc
arpl
into
xchg
mov
ja
mov
js
add
leave
je
mov
mov
cmp
mov
or
das
add
dec
pop
lods
or
pop
cld
mov
gs
add
mov
imul
daa
xchg
das
stos
push
test
mov
xchg
push
mov
fiadd
mov
(bad)
sbb
xor
push
scas
or
outs
dec
push
mov
stos
add
adc
movd
inc
sub
sbb
push
popa
push
or
aaa
or
cmp
call
les
xchg
fs
jmp
jecxz
and
shl
addr16
aad
jp
repz
or
jnp
ret
inc
dec
mov
cmp
and
xor
mov
mov
mov
adc
xchg
retf
mov
ja
sbb
repz
xor
mov
lods
xor
adc
inc
bound
mov
jnp
out
add
jge
inc
fisttp
icebp
mov
or
jae
mov
pop
fmul
inc
lahf
add
(bad)
ins
out
push
dec
push
add
or
test
xor
repz
sub
les
dec
cmp
test
sysenter
mov
sub
and
inc
pmaxsw
xchg
aam
imul
mov
sbb
ja
dec
cmps
mov
test
adc
add
shl
ss
pop
cmps
mov
imul
mov
sub
bound
push
push
into
or
and
jo
and
dec
sbb
push
mov
push
hlt
cmps
adc
les
inc
cmp
jp
leave
inc
popa
rcl
mov
or
cmps
push
iret
push
ret
repnz
cmps
ins
jno
adc
jbe
fidiv
mov
test
rol
adc
or
push
fdivr
adc
or
movs
popa
mov
sub
push
or
(bad)
add
stc
sbb
mov
dec
cmps
xchg
adc
and
call
sub
sub
inc
js
arpl
or
je
inc
pop
and
adc
out
out
add
sub
mov
jmp
imul
lea
mov
das
mov
rcr
or
es
push
lahf
repz
adc
in
sbb
imul
cmp
je
jl
daa
inc
xchg
in
jle
pop
inc
jp
dec
lods
loopne
popa
bound
inc
or
neg
mov
mov
xlat
jmp
fs
mov
imul
or
cs
and
nop
mov
xchg
in
cmps
std
(bad)
pop
and
mov
inc
rol
add
mov
nop
(bad)
adc
adc
out
pop
sub
scas
out
jl
sbb
xlat
loopne
xor
nop
neg
mov
call
arpl
cmps
sub
sub
mov
mov
or
lods
adc
jo
in
dec
shl
xchg
fistp
and
dec
jge
out
jge
jmp
out
mov
mov
mov
mov
sbb
mov
xchg
mov
aad
mov
lds
xlat
dec
iret
pop
data16
cmp
sub
jno
js
mov
stos
inc
mov
dec
sti
fild
cwde
out
vpcmpeqd
iret
cmps
cli
stos
or
mov
mov
jnp
mov
mov
jge
das
fdiv
jnp
mov
xor
ja
or
mov
add
and
int3
in
inc
mov
adc
fisub
ds
inc
xchg
sahf
(bad)
jb
das
or
daa
push
mov
sar
pop
pop
mov
in
shl
jbe
xchg
sbb
mov
imul
adc
in
mul
mov
ins
sub
add
push
dec
mov
mov
sbb
test
rol
xor
fistp
je
push
out
scas
arpl
jnp
test
jg
lock
scas
pushf
mov
cmp
(bad)
movs
jo
loope
pop
mov
xor
aas
repz
and
imul
and
mov
arpl
mov
out
fnstsw
adc
daa
(bad)
js
mov
jne
test
pop
imul
and
test
repz
xchg
repnz
ja
adc
sbb
test
das
adc
ret
jg
arpl
lods
adc
sub
xlat
test
mov
sbb
or
mov
enter
and
lea
cmp
mov
int3
adc
jo
add
or
(bad)
mov
aad
or
jbe
push
outs
jmp
fidivr
movs
sti
mov
ret
movs
es
pop
test
xor
call
xchg
pop
fild
(bad)
mov
aaa
nop
xor
les
inc
jno
repz
outs
sub
cli
adc
mov
cmp
mov
daa
aas
ja
inc
in
mov
cmc
in
int3
push
out
bound
dec
jecxz
cmp
add
xchg
inc
popf
push
mov
inc
add
mov
and
xchg
dec
sub
imul
neg
iret
sar
push
adc
mov
mov
mov
neg
jl
adc
retf
dec
(bad)
(bad)
or
imul
sbb
lods
aaa
(bad)
out
mov
or
imul
cmps
call
in
(bad)
setp
pop
mov
test
adc
dec
je
inc
mov
jle
scas
xor
mov
arpl
cmp
push
arpl
add
aaa
push
lea
or
mov
push
xchg
aad
xor
jb
jnp
mov
js
xor
in
(bad)
(bad)
stos
(bad)
scas
stos
add
jno
sub
test
mov
xchg
adc
sar
fs
push
fwait
pop
pop
and
into
(bad)
fmul
jmp
dec
cmp
js
(bad)
aad
and
inc
std
inc
call
mov
mov
jecxz
mov
xchg
jo
stc
mov
ja
and
int
in
out
out
mov
mov
mov
ja
cmc
push
mov
rcr
icebp
sahf
inc
sub
bound
test
add
push
aas
push
mov
jecxz
stc
test
loop
pop
aam
stc
ffree
into
jecxz
and
(bad)
outs
xor
adc
dec
sahf
cmp
jns
mov
xor
mov
dec
xlat
mov
adc
ret
sbb
xchg
mov
pushf
ss
sub
jg
mov
sar
retf
mov
jno
push
and
pusha
dec
xchg
sub
mov
std
add
mov
(bad)
mov
call
mov
popf
push
push
(bad)
jmp
cdq
jns
fdivp
inc
lea
add
push
lods
jge
jl
outs
adc
cmp
mov
callw
jb
(bad)
mov
xchg
jp
adc
mov
sar
lods
sbb
cdq
jl
out
sub
leave
in
push
mov
mov
xchg
jle
or
dec
in
enter
int3
adc
(bad)
rol
fmul
mov
mov
xlat
mov
mov
ret
js
sbb
int3
inc
push
fisubr
daa
loope
jmp
jecxz
test
adc
sub
xor
or
add
pop
dec
xchg
pop
xor
xor
jl
lods
js
(bad)
cmc
cld
popa
addr16
pop
addr16
pop
cmp
push
in
(bad)
cdq
inc
or
cld
mov
fxch
cmps
mov
add
push
xor
xorps
retf
fchs
dec
std
pop
call
test
or
mov
dec
iret
jmp
ins
repz
push
(bad)
pushf
push
(bad)
cmc
xchg
mov
push
pop
enter
add
pop
pop
(bad)
imul
add
dec
fimul
cmp
mov
push
aad
cld
je
ja
in
cmp
in
mov
pop
push
pop
add
into
pop
sub
sbb
rcl
jo
push
jmp
adc
sbb
xor
pop
xchg
repz
(bad)
lods
dec
cmp
pop
mov
mov
xchg
cwde
add
(bad)
sbb
pop
push
clc
push
and
add
and
xor
out
sbb
rcr
nop
rcl
xor
(bad)
dec
xchg
enter
dec
pop
push
div
sub
inc
inc
sub
test
das
rol
mov
movs
cmp
mov
and
arpl
cmp
pop
cmp
movs
fidiv
and
push
pop
jno
sub
popf
aad
cs
jb
mov
dec
pop
movs
imul
aam
icebp
xchg
loop
or
push
or
jae
push
das
add
add
cmp
sub
dec
(bad)
scas
fs
dec
ss
adc
sub
je
push
inc
das
gs
mov
sub
inc
test
pop
scas
xor
cmp
fs
cmp
push
cmc
adc
mov
mov
pop
pop
loopne
loop
mov
adc
add
in
mov
jnp
sbb
lods
iret
loop
pop
stos
inc
sahf
inc
lea
xor
fwait
pop
retf
and
cvtpi2ps
mov
xor
add
push
ins
or
add
and
mov
add
enter
pop
mov
cmps
sub
xchg
popa
sti
into
mov
push
mov
pop
into
mov
ret
cmp
(bad)
and
rcr
cmp
pushf
pop
push
mov
sbb
adc
in
cmps
sub
pushf
(bad)
enter
mov
cld
xchg
push
add
xchg
enter
(bad)
mov
pop
loope
mov
(bad)
das
jae
shl
aam
mov
sbb
jmp
push
movs
mov
xor
or
adc
push
or
aas
cmc
sti
and
mov
push
aaa
sbb
rol
jno
adc
out
loope
lea
xor
mov
jo
adc
aaa
adc
es
imul
sahf
in
and
fisttp
cld
xor
pop
jbe
mov
imul
movs
shr
aad
in
pop
mov
inc
aam
cmc
enter
push
test
sti
dec
add
mov
mov
mov
pop
enter
pop
mov
scas
stos
psubusb
or
or
cmps
lea
sbb
jmp
cmp
enter
push
add
xchg
cli
pop
jnp
(bad)
nop
call
sbb
sti
bound
adc
gs
ja
leave
sti
imul
loopne
fimul
inc
add
fsubr
mov
inc
xchg
fbld
push
addr16
add
adc
and
xor
push
inc
(bad)
xor
xor
rol
addr16
call
cmp
xlat
fs
ss
enter
fidiv
mov
dec
inc
loopne
sub
sbb
in
jo
mov
rcr
stc
cmp
(bad)
mov
add
ret
mul
sbb
int
xchg
mov
imul
or
dec
dec
xlat
jns
int3
or
jne
js
in
ins
repnz
ins
jmp
leave
in
push
sub
fbstp
pop
fistp
(bad)
xor
mov
mov
lds
enter
enter
sbb
(bad)
call
or
fsub
lods
lds
aam
popf
outs
lods
sar
sub
pusha
lock
mov
xor
mov
and
pushf
fs
push
sub
push
imul
stc
pop
lea
xchg
call
xor
pop
push
xor
cmps
add
jbe
xchg
pop
pop
sbb
and
call
in
pop
xchg
push
cli
and
ja
ret
rcr
stos
adc
and
sbb
stos
pop
(bad)
mov
dec
xor
adc
push
popf
and
call
mov
push
adc
js
leave
push
mov
push
adc
neg
add
test
imul
inc
cli
int
cli
dec
dec
sbb
lea
sbb
add
mov
add
cld
and
push
sbb
adc
dec
or
or
(bad)
iret
repnz
xor
hlt
push
xor
retf
fild
mov
mov
xor
jne
fisub
xchg
(bad)
cmps
call
add
and
mov
test
cmps
bound
sbb
jge
push
cwde
(bad)
(bad)
hlt
jbe
mov
push
fwait
sub
sar
out
cmp
add
mov
sub
sub
mov
sahf
pop
test
int
in
sti
xchg
in
cmp
lock
lock
mov
pop
scas
mov
mov
popf
mov
pop
pop
and
in
cli
lods
mov
add
adc
data16
push
mov
xchg
mov
jnp
nop
pop
add
dec
loope
enter
jp
jle
push
jae
mov
adc
rol
ins
xor
dec
(bad)
xlat
dec
dec
push
mov
and
rcr
(bad)
and
addr16
xor
loopne
aad
inc
cmp
pop
(bad)
jae
out
inc
in
fcomip
rcr
jno
dec
adc
out
mov
ficomp
jns
shr
and
aad
sub
dec
dec
mov
pop
xchg
sbb
jle
scas
and
jp
je
or
mov
es
xchg
mov
loopne
fnsave
jl
ins
pop
push
mov
enter
call
pop
jmp
call
mov
in
mov
cmps
mov
je
adc
imul
jnp
fsub
inc
adc
sbb
das
cs
popa
push
fsubr
stos
ja
jle
pop
mov
dec
int
or
fisub
ret
sbb
or
ror
jbe
mov
mov
outs
out
imul
outs
pop
jp
test
repnz
bound
lahf
sahf
ret
push
cmc
add
inc
cld
and
or
icebp
in
icebp
fild
cmp
sbb
push
outs
cwde
ss
mov
jmp
mov
mov
icebp
pop
xchg
sahf
inc
add
pushf
ret
sbb
loop
push
jp
pop
jb
iret
mov
jle
sbb
(bad)
popa
adc
inc
repz
(bad)
cli
cmp
add
addr16
rol
sub
scas
hlt
in
xor
mov
cmp
push
sbb
arpl
cmp
data16
push
addr16
xor
jmp
dec
fbstp
cmp
js
ja
sbb
movs
and
aas
(bad)
push
stos
pop
inc
std
mov
push
xchg
test
lods
sub
enter
sbb
xchg
inc
adc
(bad)
jg
and
push
mov
push
test
jmp
stos
outs
scas
push
stc
xchg
mov
rcl
imul
shl
mov
addr16
add
fidivr
adc
nop
mov
mov
pop
jbe
test
pop
mov
or
inc
push
out
movs
add
mov
scas
jbe
(bad)
icebp
retf
arpl
inc
pop
sub
gs
stc
faddp
rcl
xor
shl
cld
mov
inc
cmp
dec
ja
test
ja
retf
jae
mov
add
aam
adc
movs
mov
sub
push
dec
(bad)
(bad)
lods
imul
lock
mov
jns
pop
and
imul
jo
add
fsub
push
and
mov
sub
mov
lock
cmp
inc
clc
in
add
ss
mov
jmp
neg
test
fs
aad
clc
sbb
jno
mov
add
cdq
aas
mov
jl
arpl
sub
fist
push
ret
adc
mov
xor
inc
outs
loop
xchg
push
sub
imul
fs
shr
xor
xchg
pushf
div
ss
or
(bad)
hlt
push
icebp
es
dec
fadd
xchg
adc
out
jo
and
jmp
scas
or
outs
popf
jge
and
sub
sbb
jp
test
fpatan
sar
xchg
pop
mov
inc
dec
cmps
cmp
dec
xchg
mov
movs
popa
loopne
shl
dec
fidivr
mov
or
jo
jno
mov
in
cmp
mov
fwait
xor
inc
hlt
or
repnz
xchg
dec
lea
movs
ja
or
fisttp
xor
popa
imul
pop
dec
xchg
fidivr
or
jmp
repz
aad
popa
arpl
jge
and
and
out
jmp
xor
inc
xor
jg
neg
sub
push
loopne
inc
push
and
push
test
lea
jle
shl
sahf
adc
fisubr
movs
into
xor
sbb
inc
sbb
std
mov
xor
pop
cmps
data16
mov
shl
fisubr
(bad)
clc
in
sub
xor
mov
ins
jp
push
stc
jo
xor
mov
into
add
pop
inc
std
mov
mov
movs
push
xchg
cmp
popa
pop
cld
xchg
inc
sbb
cmp
xlat
inc
mov
jne
pop
rcl
lds
pop
in
popf
mov
pop
inc
popf
xor
outs
ins
outs
daa
es
sbb
or
cld
in
xor
das
dec
inc
into
loopne
jmp
lods
sahf
sub
mov
jle
and
mov
mov
mov
out
int
fwait
neg
icebp
fist
mov
test
xor
in
daa
(bad)
(bad)
mov
neg
push
inc
push
push
fsubr
dec
xchg
jmp
or
and
in
add
sub
xchg
dec
sub
(bad)
mov
gs
pop
mov
pop
gs
lods
test
xchg
in
mov
out
push
ror
or
xchg
adc
shl
test
push
cmp
cli
or
jmp
es
adc
jecxz
sbb
into
movs
imul
rcr
fs
or
mov
sahf
lds
or
mov
mov
adc
ja
dec
daa
push
adc
mov
mov
sbb
repnz
push
retf
jmp
pusha
rcl
in
cmps
mov
movs
inc
sub
mov
int
mov
gs
cmp
lods
in
mul
pop
ror
cld
pop
pop
stos
cmp
inc
xchg
jne
pop
or
jbe
mov
or
mov
push
or
out
adc
sbb
(bad)
shl
fnsave
or
xchg
ret
inc
mov
shl
inc
repnz
xchg
sahf
adc
das
push
leave
mov
jge
outs
call
loopne
popa
loopne
inc
data16
inc
pop
out
fwait
sub
dec
inc
stos
push
or
inc
fwait
mov
ins
or
push
sub
inc
adc
ror
sub
repz
xor
das
in
mov
add
or
adc
jmp
data16
repz
iret
clc
jno
mov
retf
xchg
add
pop
stc
cmps
cs
xor
ret
dec
mov
sbb
nop
call
push
inc
mov
add
enter
jb
push
xchg
leave
xor
dec
dec
out
mov
mov
and
nop
arpl
or
jb
stc
icebp
fdivr
jb
fwait
imul
and
push
jp
pop
inc
mov
pop
mov
pop
xchg
popf
add
xchg
ins
mov
inc
pop
jae
outs
lea
mov
leave
mov
fsub
mov
out
dec
mov
mov
add
pusha
push
mov
pop
das
mov
xchg
jmp
dec
pusha
cmp
cmp
jle
imul
std
scas
add
jno
sbb
mov
pusha
cmp
daa
adc
push
in
imul
add
nop
addr16
add
ret
movs
cli
idiv
inc
fwait
xchg
jo
dec
out
mov
xchg
dec
xor
and
dec
inc
sti
dec
fstp
mov
aaa
pushw
iret
jle
dec
(bad)
sbb
(bad)
pop
jle
test
pop
or
mov
call
mov
jge
xchg
push
push
dec
addr16
sub
sbb
xor
pop
xchg
ja
push
xchg
add
mov
and
cmp
pop
push
or
inc
inc
xor
xor
cwde
rcr
jbe
outs
mov
movs
jbe
test
rcl
add
addr16
adc
shr
mov
xor
xlat
or
jmp
jmp
inc
test
xor
xchg
arpl
adc
arpl
fwait
add
sar
adc
push
in
mov
into
dec
stos
sub
pop
adc
or
cmps
jle
sbb
addr16
aam
(bad)
dec
nop
ficom
push
sahf
ret
sub
push
rcl
sbb
pop
cmp
jmp
jp
retf
fbld
add
(bad)
out
hlt
and
xchg
(bad)
jmp
lods
int3
les
bound
adc
mov
or
jmp
mov
cmps
fbld
bound
mul
cmp
outs
movs
stos
jecxz
popf
mov
xchg
jno
adc
xor
shr
in
int
mov
stos
mov
cli
mov
push
add
gs
call
jb
jb
sbb
inc
fld
dec
pusha
daa
fisubr
clc
iret
mov
push
ret
outs
mov
iret
dec
push
dec
sub
push
xor
inc
loopne
arpl
jg
xor
or
inc
xchg
stc
pop
xchg
test
repz
inc
mov
cs
cmp
es
sbb
popf
fld
je
shl
sub
aaa
ins
xchg
cdq
fdiv
rol
dec
or
sub
xchg
cmp
add
out
xchg
pop
aaa
sbb
xchg
in
jmp
cmp
dec
mov
inc
pop
mov
lock
aam
shl
call
mov
in
adc
sti
imul
push
mov
xchg
fild
fdivr
jae
add
mov
idiv
sbb
xchg
repz
(bad)
jmp
push
dec
clc
jp
add
push
mov
das
inc
div
adc
push
mov
jno
(bad)
out
ja
mov
ja
mov
mov
outs
dec
jno
adc
or
in
into
mov
mov
inc
hlt
out
mov
ret
cli
mov
mov
into
cdq
add
pop
push
inc
and
loop
(bad)
pop
test
pop
mov
(bad)
xlat
popa
sbb
aaa
fsub
daa
adc
es
mov
mov
call
fucom
out
xlat
hlt
(bad)
adc
js
sbb
pop
mov
and
add
xchg
jl
idiv
(bad)
icebp
xor
or
cmp
xlat
push
sub
lds
cmp
or
adc
inc
push
(bad)
or
and
cli
dec
in
aas
adc
adc
je
and
ror
xlat
cld
or
jge
dec
fdiv
cwde
add
dec
jb
mov
jge
push
jnp
sub
cmp
dec
daa
and
push
xlat
pop
lods
mov
add
loop
in
(bad)
add
inc
and
psllw
sti
or
fidiv
inc
rcr
addr16
dec
bound
fcom
push
fmulp
neg
lods
cwde
mov
add
(bad)
jmp
jnp
jl
test
f2xm1
pop
lods
std
pop
dec
add
fdivr
lahf
and
call
fdiv
inc
fbstp
jmp
jge
ins
cmp
icebp
xchg
lock
and
clc
xor
int
gs
shl
lahf
push
(bad)
loop
in
pop
inc
ficom
add
jnp
retf
loopne
jb
push
pop
sub
into
push
imul
loop
outs
push
xor
sub
jg
cmp
cli
repz
add
or
cmp
fdiv
push
movs
ds
inc
inc
cmp
xchg
jmp
sub
sub
and
xlat
pop
std
and
push
or
in
cwde
adc
jmp
mov
aaa
mov
leave
repz
cmp
popf
xor
xchg
xchg
sbb
scas
lahf
lds
cmp
std
xor
push
fcomp
clc
popa
mov
push
inc
sar
mov
or
test
in
xor
pop
fwait
adc
iret
rol
adc
imul
popf
jg
cmp
outs
mov
jl
inc
mov
dec
cld
cmp
outs
cdq
mov
test
pop
imul
adc
mov
hlt
jnp
fstp
mov
loop
shr
sub
or
pop
sub
cdq
dec
aad
inc
rcl
aad
jg
push
adc
rol
fcmovb
in
dec
xor
sub
loope
mov
leave
add
fisttp
sahf
or
adc
out
out
sbb
sbb
enter
nop
ret
mov
shl
inc
test
sbb
daa
loopne
daa
adc
mov
mov
cmp
sbb
aaa
aaa
sub
pusha
fidiv
sbb
dec
cmp
sbb
jl
mov
scas
mov
call
(bad)
or
jg
loop
sti
push
mov
inc
add
mov
and
xchg
cmps
movhps
out
ds
sub
or
movs
gs
xor
sbb
les
sahf
cmp
push
aaa
and
jae
xor
in
xor
jge
int
movs
repnz
fwait
aas
xchg
and
bound
xor
or
das
fild
push
sar
fimul
lahf
xchg
jae
sub
mov
jle
jge
mov
add
jecxz
test
test
push
xor
nop
add
lea
out
scas
xor
mov
jnp
out
push
aad
sbb
adc
lea
jp
sub
popa
add
sbb
sahf
test
inc
cmp
and
xchg
cli
loopne
(bad)
push
popa
dec
adc
mov
dec
arpl
es
movs
dec
cld
(bad)
loop
jecxz
scas
push
mov
mov
test
arpl
pop
pop
je
stos
lock
and
jp
or
sar
call
jle
cmps
stos
hlt
xchg
xor
push
or
inc
std
cld
push
(bad)
rcl
test
jne
adc
sub
int3
int3
cdq
retf
xchg
dec
mov
pop
mov
mov
test
push
movs
loope
pop
inc
out
gs
pop
jnp
pushf
inc
cli
push
jnp
(bad)
mov
in
pop
test
cli
aad
es
add
iret
daa
xchg
adc
dec
aaa
ror
pop
sub
push
adc
inc
(bad)
daa
mov
shl
mov
(bad)
mov
pop
sub
out
sub
lods
xor
xlat
mov
cmps
xchg
adc
inc
cmps
pop
sbb
inc
jns
mov
and
leave
(bad)
(bad)
mov
cmp
outs
cmp
fwait
cdq
movs
sbb
xchg
out
jno
iret
cld
xor
pop
cmp
sbb
data16
cmp
aam
std
jns
xor
cli
push
cs
jmp
sbb
(bad)
mov
push
and
jo
xlat
jg
into
add
loope
push
sbb
push
sbb
and
ss
jne
fistp
hlt
int
test
imul
xchg
mov
ja
mul
mov
(bad)
dec
mov
inc
rol
rol
adc
jbe
jmp
xor
pop
stos
into
out
ds
and
mov
into
shl
xchg
sub
jg
xor
call
adc
mov
call
repz
hlt
lods
jno
ror
mov
cwde
or
mov
outs
cmp
sub
daa
cmp
sub
mov
popa
pop
jp
in
sub
mov
or
push
cmp
cmp
xchg
(bad)
loop
mov
ins
cwde
mul
loope
push
dec
mov
test
ror
xchg
xchg
sbb
pop
fs
ret
jo
ss
sbb
jmp
pop
inc
push
(bad)
(bad)
add
push
shr
push
push
inc
mov
ja
inc
iret
and
movs
lea
jae
(bad)
cmp
xchg
or
in
sub
adc
inc
mov
add
aad
pop
push
test
cmps
push
mov
mov
xchg
es
sbb
dec
jle
inc
or
ja
mov
leave
jmp
sbb
jbe
fmul
adc
cwde
jo
mov
dec
cmc
lods
cmps
xor
xchg
jnp
pop
lods
pop
jle
sub
addr16
aaa
mov
shl
xor
or
(bad)
or
in
stos
mov
or
outs
in
jg
xor
retf
mov
xchg
jae
cmp
cmp
dec
xor
fld
push
xchg
call
and
mov
xor
test
or
mov
call
mov
dec
dec
adc
test
dec
lock
and
mov
mov
rcr
inc
test
mov
cwde
in
sbb
fimul
std
out
sub
shl
call
popf
ins
retf
pop
adc
fist
retf
rcl
mov
outs
dec
push
pop
(bad)
dec
and
mov
mov
push
loope
xchg
dec
push
test
ins
ins
test
ja
xor
mov
test
pop
jl
les
xor
mov
pop
cdq
pop
mov
dec
jae
jne
es
pop
xor
or
outs
in
loopne
cli
add
cli
and
ins
cmp
cdq
adc
sti
mov
jmp
stc
in
sar
aaa
into
and
(bad)
ins
mul
jecxz
and
cdq
add
stos
pop
fsubr
in
ret
jl
ds
mov
adc
fcmovbe
mov
popf
pop
pop
pushf
popa
pop
push
push
jo
imul
aas
xor
movs
mov
inc
repz
mov
shr
mov
jg
(bad)
push
dec
lock
jmp
into
sbb
mov
dec
cmp
fisttp
push
mov
mov
cmp
das
pusha
xchg
xchg
inc
pop
pop
arpl
mov
inc
jp
mov
mov
aas
leave
dec
mov
mov
jnp
scas
int
icebp
dec
call
loop
mov
lahf
out
or
outs
fnstenv
mov
rol
iret
dec
dec
jl
inc
sub
stc
jp
popa
cmps
(bad)
mov
aam
cdq
lods
test
sub
cmps
mov
sub
jne
repnz
mov
add
pop
dec
xchg
lds
out
mov
ja
push
retf
cmps
adc
stos
fcomi
(bad)
pop
shr
mov
xchg
push
add
xor
(bad)
jb
out
cmp
mov
jno
cmp
rcr
pop
lods
or
push
jp
test
ja
retf
inc
push
dec
shl
inc
or
cmp
jne
mov
iret
scas
cmp
adc
stc
(bad)
not
ds
adc
cld
mov
jge
cmp
mov
or
sti
and
cwde
sub
or
shl
lahf
mov
movs
adc
inc
jnp
push
cmp
into
add
or
ins
add
ja
(bad)
mov
gs
sub
not
jo
jecxz
add
push
and
mov
push
add
adc
mov
fld
das
out
mov
in
fnstcw
push
daa
sub
push
lods
or
xor
(bad)
into
or
lahf
mov
dec
test
cmps
and
popa
xor
repnz
pushf
gs
movs
mov
in
js
js
dec
mov
cmp
aad
mov
cmp
enter
stos
cmp
push
push
pop
xlat
push
mov
dec
add
pop
push
les
mov
inc
add
or
xlat
out
fnstcw
xor
out
adc
xchg
imul
imul
ss
fisub
movs
js
mov
add
mov
jecxz
xchg
rcr
enter
or
pop
sub
and
push
pop
cmps
mov
mov
inc
rol
loope
cmp
outs
in
or
xor
lds
push
add
loopne
sub
out
leave
mov
pop
fimul
inc
jmp
fldenv
sub
stos
es
sub
add
dec
out
call
mov
dec
mov
lods
mov
mov
push
sub
xchg
and
rcr
or
sbb
imul
lods
pop
cmps
jp
in
es
add
inc
outs
cmp
xchg
imul
mov
dec
test
sub
fcomp
(bad)
data16
jp
into
test
sub
or
pop
mov
xchg
cmps
xlat
or
pusha
icebp
pop
jno
call
mov
sub
fimul
mov
inc
daa
pop
xlat
xchg
hlt
ficom
mov
pop
mov
jbe
fnsave
adc
hlt
mov
pop
sub
mov
inc
(bad)
dec
jp
jo
loop
retf
repz
lock
dec
pusha
push
test
xchg
shl
(bad)
pusha
pop
cmp
xchg
xor
add
imul
mov
sbb
test
inc
lods
inc
pop
sbb
repnz
push
popa
cdq
js
in
or
into
cdq
xor
adc
xchg
sub
mov
push
and
xlat
jmp
and
in
fs
(bad)
mov
and
pop
mov
push
or
and
mov
movq
idiv
xchg
cs
rcr
out
aaa
pop
pop
outs
sbb
push
out
cmc
stos
cmp
aaa
pop
xor
pusha
xor
adc
sti
cmps
dec
syscall
sahf
imul
sub
fistp
ret
fcomp
sub
ror
inc
xchg
test
out
sar
stos
sbb
adc
fwait
loopne
mov
jge
test
jo
jno
icebp
xchg
push
aaa
or
push
cmp
loop
mov
sahf
int3
jo
mov
sbb
int
mov
in
fdivr
jae
xor
inc
mov
or
sub
inc
sbb
loopne
rcr
shl
nop
mov
pop
inc
outs
mov
mov
ficomp
xor
sbb
test
mov
push
pop
cwde
out
out
ret
xor
mov
arpl
xchg
jle
icebp
mov
outs
ja
or
dec
movs
pop
jbe
jno
outs
dec
(bad)
je
xor
add
fwait
repz
cs
(bad)
jp
jnp
test
pop
add
add
xor
cmp
icebp
mov
out
outs
lahf
cdq
lods
leave
add
push
dec
pop
jne
cmp
(bad)
jae
call
fist
jno
rol
jp
add
ins
mov
or
or
jmp
pop
leave
mov
push
push
add
jmp
xor
pop
push
pop
ins
ds
loope
je
push
call
mov
inc
inc
and
pop
popf
jo
dec
(bad)
jb
mov
add
jp
out
xchg
mov
jns
xchg
and
mov
pop
cmc
inc
mov
shl
jge
ins
and
or
aaa
fbstp
inc
test
dec
pop
push
mov
fsubr
enter
iret
fsub
fucom
push
int
lods
and
jl
push
popa
aaa
enter
mov
sahf
and
int3
add
adc
jg
jb
cwde
mov
jmp
inc
loopne
cwde
or
add
lds
lods
sahf
sbb
imul
(bad)
add
inc
mov
xchg
add
jo
sub
xor
mov
call
lods
adc
inc
fdivr
sub
nop
icebp
jge
in
and
mov
mov
aam
pop
or
loope
stos
and
idiv
pop
in
scas
sub
lods
jmp
test
pushf
ror
(bad)
pop
add
pop
xchg
scas
aas
lods
test
push
pop
jg
pushf
ins
mov
inc
scas
add
xchg
dec
sbb
aad
cli
mov
pop
jmp
mov
enter
pop
sbb
retf
pop
sub
xor
mul
mov
mov
xchg
ss
push
loope
je
add
cmp
test
mov
in
jo
dec
out
out
or
inc
pop
mov
fisttp
popf
ret
mov
ja
dec
add
jg
mov
pop
sub
or
jge
add
pop
sub
call
(bad)
mul
test
dec
int3
pop
div
js
sbb
jbe
test
sar
sub
xor
adc
retf
cmp
lods
pop
pop
fist
sbb
push
aam
mov
or
pop
push
mov
aas
cmp
std
mov
dec
shr
mov
cmc
push
sub
sbb
lahf
mov
dec
inc
ror
or
inc
loopne
and
(bad)
and
add
icebp
sub
cmp
hlt
pop
cmp
fild
dec
dec
scas
std
movs
inc
jbe
nop
mov
jns
sub
pop
shr
jg
push
mov
test
inc
cmp
jle
adc
lods
cli
or
ss
add
(bad)
xchg
jne
lock
xchg
loope
ins
sti
imul
fsub
add
xchg
(bad)
and
or
inc
into
or
xor
shl
test
mul
jbe
fcmovnb
inc
rcr
les
pop
adc
xlat
mov
call
xlat
sbb
adc
sbb
inc
shl
loope
call
lods
xchg
cmp
leave
je
mov
xor
push
bound
fnstsw
stc
cmp
cmp
add
int3
sbb
and
mov
mov
xor
xchg
test
push
and
jnp
inc
adc
add
push
jp
jbe
iret
mov
imul
in
cmp
mov
cmc
movs
mov
mov
mov
inc
mov
pop
bound
mul
add
sahf
les
imul
jge
ficom
psubusw
jbe
inc
xor
call
ret
or
mov
sub
mov
pusha
sbb
mov
les
lods
add
push
icebp
lods
popf
leave
leave
and
mov
xor
das
shl
loope
cli
hlt
fs
add
inc
jle
jge
pop
push
jl
outs
lds
cmc
pop
std
das
idiv
push
push
stos
cs
in
mov
sahf
sbb
hlt
add
cmp
lods
das
pop
cld
std
mov
adc
aad
dec
xchg
jns
jle
jae
fistp
sub
push
jae
xchg
je
pop
jp
inc
sub
cmp
and
div
mov
push
bound
aas
gs
pop
sahf
or
jb
lea
xlat
sbb
pop
retf
mov
mov
or
sub
lds
sti
test
(bad)
scas
mov
ret
bound
scas
mov
push
inc
push
sbb
movs
dec
dec
inc
mov
hlt
aaa
pop
sub
adc
cli
pop
xchg
sub
mov
push
mov
sub
push
or
push
hlt
and
mov
jae
push
adc
pusha
cmp
sbb
mov
and
aam
movs
inc
mov
les
sbb
xor
in
ret
jae
aas
push
cmc
movs
mov
cmp
test
and
(bad)
repz
cmc
inc
mov
inc
inc
push
add
jns
icebp
aam
and
jl
cdq
imul
push
scas
loope
lods
shr
pop
pop
cwde
adc
cmp
aas
call
inc
mov
sub
push
jp
jno
sbb
loopne
adc
mov
cmp
js
and
pop
jecxz
inc
mov
pop
fcmovne
adc
cmp
xchg
mov
aam
stc
push
mov
sub
(bad)
mov
add
mov
int
shl
dec
inc
fild
xor
(bad)
xchg
sti
jle
push
lock
xchg
js
xchg
dec
fs
lahf
int3
or
lods
aam
and
cld
aaa
pop
jns
mov
pop
mov
inc
sub
fcmovnu
mov
in
loop
ins
fdiv
pop
pop
pop
push
movsx
jno
xchg
and
jnp
xor
ret
es
push
pop
loope
xor
jmp
js
out
or
mov
(bad)
xor
es
fisttp
leave
out
jno
dec
stos
inc
and
lods
call
mov
in
push
adc
or
enter
mov
mov
cmp
cmps
out
lock
lods
popa
inc
stos
sub
xchg
dec
int3
fwait
add
and
adc
sbb
sbb
cmp
inc
jbe
lahf
adc
mov
mov
(bad)
fiadd
and
xor
fcmovne
mov
xchg
popa
daa
je
and
inc
ret
(bad)
mov
sub
les
aas
cs
(bad)
icebp
jp
in
mov
out
pop
sub
jno
jmp
xchg
sbb
push
repz
pop
fdivr
scas
je
lahf
mov
xor
ret
icebp
mov
xchg
dec
xor
jmp
cmp
jge
enter
jo
dec
or
xchg
(bad)
pop
int
xchg
clc
test
(bad)
mov
cmp
movs
movs
retf
push
stc
pop
add
xchg
jae
scas
cmp
mov
jo
mov
movs
addr16
pop
xchg
pusha
aam
ret
sub
clc
fdiv
ins
daa
dec
pop
out
cmp
xor
jmp
or
loopne
sub
fcom
enter
mov
loopne
jmp
xchg
inc
int3
sbb
fisubr
push
jns
ds
sub
add
or
pop
mov
test
repz
mov
int3
mov
neg
(bad)
fisttp
enter
aas
add
test
test
xchg
mov
repz
sub
inc
(bad)
sub
cwde
jnp
leave
mov
jmp
sbb
fdivrp
sbb
(bad)
test
push
inc
fs
push
jne
fst
imul
and
dec
popf
inc
jo
dec
fucomp
inc
jp
mov
push
push
sub
cli
ja
call
add
test
in
jge
push
pop
push
pushf
adc
wrmsr
adc
mov
push
inc
push
lods
aas
and
retf
push
bnd
xor
jmp
add
or
mul
cmp
inc
(bad)
nop
mov
adc
ins
mov
enter
mov
retf
and
and
mov
add
pusha
mov
lds
imul
push
cmp
sbb
das
dec
mov
jb
adc
adc
push
les
jnp
inc
inc
xchg
jle
loope
pop
mov
pushf
popf
xchg
or
sar
xchg
xor
inc
push
ret
mov
out
pop
outs
jae
sbb
(bad)
jnp
stos
inc
test
fsub
mov
ins
ret
repnz
cmps
jecxz
int
pop
pusha
pop
xchg
sbb
lahf
pop
lods
inc
dec
mov
leave
dec
push
lahf
mov
inc
mov
jge
adc
push
mov
cmp
sbb
and
rcr
(bad)
xchg
jmp
adc
leave
out
mov
and
outs
sbb
imul
inc
out
and
in
in
cmps
push
aas
push
pop
fistp
push
mov
outs
xor
pop
mov
clc
leave
jne
adc
push
bound
ins
xor
js
pop
dec
enter
sbb
(bad)
in
jno
int
adc
clc
and
or
pop
ja
sub
sbb
(bad)
cs
sub
ret
sbb
and
mov
push
mov
std
lds
jge
sbb
inc
inc
cs
pop
scas
push
fcomp
cmp
jmp
sub
(bad)
call
push
fwait
cdq
push
jo
rcr
pop
or
pop
ja
push
dec
(bad)
cld
mov
cwde
xor
jns
cmps
stos
add
push
mov
rcl
repz
ret
lock
push
cmp
pop
inc
or
and
push
xor
mov
fisttp
enter
mov
in
outs
retf
push
jae
push
loop
sub
fidiv
sub
adc
cs
iret
dec
fst
cli
sub
test
xchg
iret
out
(bad)
lods
retf
mov
dec
icebp
outs
mov
test
mov
jnp
fiadd
and
sar
jbe
xchg
add
retf
ins
into
scas
jbe
jp
push
icebp
push
jmp
ss
jge
push
repz
adc
icebp
add
cmp
or
lods
jnp
(bad)
add
inc
dec
jns
sub
mov
setns
test
aaa
mov
dec
(bad)
sbb
mov
daa
jg
pushf
inc
rcl
out
int3
movs
jae
not
retf
out
push
pop
out
iret
popf
ja
mov
add
push
iret
mov
ret
out
aam
mov
mov
cs
mov
mov
adc
mov
mov
inc
mov
jmp
test
dec
push
pop
push
or
mov
mov
call
xor
xchg
movs
or
leave
add
push
scas
(bad)
stc
lahf
inc
sbb
push
aam
push
cli
popa
bound
leave
test
adc
and
mov
cmp
loop
ss
inc
jmp
push
sbb
mov
adc
movs
sub
or
xchg
mov
inc
push
out
int
rcr
loopne
ja
push
or
sti
cmc
aaa
ret
int3
mov
test
rcr
rcr
sahf
sti
xchg
loopne
sub
ficom
loope
(bad)
jg
hlt
adc
in
adc
mov
popa
push
xchg
mov
xor
shld
dec
mov
(bad)
(bad)
jbe
dec
adc
and
push
cli
retf
sub
test
dec
inc
sbb
out
jbe
mov
cmp
ja
cmp
int
push
mov
adc
jge
js
pop
add
jmp
jmp
jmp
xchg
mov
in
or
xchg
popa
mov
ja
add
dec
jnp
or
cmp
and
popf
pop
daa
jecxz
mov
das
aad
cmp
fisub
push
xor
mov
loope
fisubr
scas
dec
push
sub
dec
or
and
mov
jbe
popa
lahf
idiv
inc
xchg
int3
fld
(bad)
mov
sahf
dec
dec
push
xor
inc
xchg
inc
mov
cmc
(bad)
shl
pop
cmp
pop
fbld
ins
adc
jae
les
sub
push
cmp
or
lds
pop
ret
shr
jmp
pop
dec
div
mov
loope
cwde
in
std
sar
es
push
sub
jge
sub
in
cmp
sbb
sub
stc
dec
mov
lods
push
aad
cli
int
fstp
dec
mov
rcl
jae
sbb
hlt
adc
jmp
mov
xchg
fcom
adc
adc
sub
pop
daa
cmp
(bad)
push
ins
mov
sar
addr16
shr
sub
xor
mov
or
or
adc
loope
jmp
stos
movs
push
ss
leave
test
ds
outs
jle
jne
sbb
scas
add
add
xor
sahf
mov
jbe
sub
push
push
fcomi
int3
das
movs
dec
jno
call
movs
push
pop
xor
hlt
imul
sbb
push
push
cmp
outs
test
xchg
outs
out
mov
push
or
mov
(bad)
pop
pop
mov
push
cmp
or
(bad)
test
push
mov
push
leave
jns
cdq
sbb
(bad)
pop
sbb
sub
mov
loop
out
pop
iret
add
pusha
push
jnp
xor
lahf
cmp
push
xchg
ins
or
int
mov
add
add
dec
pop
retf
dec
shr
push
mov
add
arpl
or
jns
mov
mov
sub
cmps
leave
mov
mul
retf
ret
sub
sbb
je
ja
or
in
ss
enter
add
push
icebp
pop
fstp
inc
jmp
adc
ins
inc
js
inc
cmp
cmp
and
(bad)
dec
nop
mov
sahf
call
pop
(bad)
clc
test
adc
sub
push
es
mov
or
push
mov
test
out
gs
rcl
pop
dec
mov
ror
adc
mov
mov
xor
cmp
shr
cli
inc
icebp
sbb
outs
jmp
xchg
inc
cmp
enter
adc
clc
adc
lods
in
push
jns
fisubr
push
xchg
fidiv
ds
sbb
inc
cmp
and
enter
frstor
fwait
out
loop
out
test
stos
pop
pop
je
push
mov
lds
xchg
int
mov
jl
fcmovnu
mov
sbb
arpl
mov
mov
ss
iret
push
(bad)
(bad)
sub
jmp
inc
push
das
xor
inc
repnz
loop
shl
(bad)
loop
cmp
inc
xchg
fsubr
adc
cmp
stos
fisttp
mov
sub
dec
jle
movs
repnz
mov
sbb
and
jnp
adc
in
pop
add
mov
jmp
rcr
jmp
(bad)
into
aam
aaa
mov
gs
cs
adc
mov
stos
pop
cdq
jno
mov
(bad)
mov
(bad)
pop
adc
push
sbb
iret
or
gs
scas
and
pop
inc
inc
test
sti
sub
ret
pop
repz
xor
mov
scas
jge
shl
push
inc
enter
add
loopne
cli
pop
jge
sub
(bad)
test
fnstcw
ja
call
aad
and
out
push
cmp
push
call
jecxz
retf
xchg
jae
cmps
inc
iret
sub
and
dec
cmp
mov
dec
dec
dec
(bad)
mov
iret
cld
jl
push
mov
ins
mov
and
out
mov
push
or
inc
mov
inc
cdq
das
inc
test
call
movs
mov
mov
popf
and
dec
hlt
cmp
or
js
xchg
sub
pop
xor
(bad)
and
loop
pop
cmc
xchg
retf
fcomp
jae
test
lock
xor
loop
fmul
sub
jecxz
xchg
sti
fneni(8087
mov
leave
pop
lea
jge
xor
(bad)
div
rol
mov
add
inc
mov
or
inc
cmp
imul
cmps
or
arpl
mov
mov
rcr
xchg
jbe
movs
scas
dec
lods
add
neg
(bad)
sub
sub
sbb
inc
mov
xchg
mov
mov
je
outs
out
inc
mov
push
xchg
push
mov
jae
xchg
ja
repnz
dec
mov
cwde
std
popa
mov
mov
xor
mov
into
scas
jge
cmps
dec
cld
mov
stos
cmp
adc
mov
mov
fcmovb
les
aam
fwait
add
imul
dec
ror
add
push
lds
mov
inc
icebp
dec
test
fcomip
add
addr16
out
xor
icebp
sbb
mov
sub
push
cli
(bad)
mov
add
push
imul
(bad)
mov
pop
dec
and
fdivp
bound
loop
popf
jmp
sub
jp
adc
mov
push
test
inc
push
dec
mov
adc
bound
rcr
cmc
lahf
xor
ret
call
mov
jns
add
les
mov
mov
dec
out
cmps
jns
je
mov
mov
dec
test
dec
sbb
dec
nop
inc
popf
add
aas
test
jmp
int
mov
sbb
xor
xor
movs
fnsave
(bad)
ins
sub
jmp
sub
mov
inc
cdq
cmps
enter
stos
mov
out
fild
pop
(bad)
sub
repnz
std
daa
out
daa
popf
or
jae
xchg
in
in
jp
dec
add
mov
cmp
loop
ret
mov
mov
daa
add
cmps
inc
das
adc
mov
sub
and
in
xlat
mov
test
cmp
mov
jge
xchg
mov
add
push
aam
pop
inc
dec
es
in
pop
inc
sbb
fistp
mov
cmps
adc
add
mov
xor
cld
scas
pop
nop
test
leave
push
out
jb
and
sbb
and
out
mov
out
stc
(bad)
(bad)
cmps
dec
imul
inc
mov
push
push
nop
clc
fidiv
or
jmp
sahf
xchg
ins
jae
pop
cmc
jl
cmp
sti
sub
ficom
jmp
and
daa
or
mov
call
into
popf
jb
inc
add
sbb
push
add
adc
mov
dec
ds
(bad)
fistp
jb
mov
dec
leave
imul
mov
xchg
push
mul
or
mov
pop
jbe
push
cdq
xchg
test
dec
add
jge
sar
repnz
in
dec
mov
dec
shr
or
jle
adc
mov
mov
aam
ret
call
hlt
and
jle
in
(bad)
pop
add
js
mov
mov
int3
loopne
adc
xchg
adc
dec
std
pop
mov
icebp
(bad)
push
pop
in
mov
in
lds
(bad)
fdiv
loope
xor
adc
iret
mov
fmul
shr
pop
xor
mov
scas
pusha
dec
mov
in
jno
stos
popa
imul
repz
and
ins
sub
repnz
stos
xor
mov
adc
push
push
lods
mov
and
hlt
repnz
jnp
shl
add
pop
pop
xor
fst
popf
sub
adc
dec
inc
cmc
fcom
(bad)
mov
adc
adc
das
push
cmp
sti
jecxz
imul
mov
cs
clc
rcr
aam
das
push
xchg
ret
xchg
add
in
popa
jmp
addr16
ds
xor
sar
jbe
mov
scas
scas
stos
stc
and
es
or
sub
les
rol
and
sbb
(bad)
xchg
(bad)
not
add
ins
aas
jecxz
push
enter
test
mov
mov
adc
xchg
fwait
add
test
adc
(bad)
pop
in
fmul
jmp
repz
mov
sbb
imul
push
rcl
fs
mov
xor
pop
add
add
jno
or
ret
pop
sub
inc
add
add
(bad)
movs
fdivr
(bad)
fdiv
ret
scas
aad
fiadd
fcom
sti
imul
xchg
dec
aas
pop
and
or
fidiv
cmp
(bad)
adc
scas
push
mov
dec
hlt
mov
add
mov
xor
push
stos
scas
or
bnd
aaa
mov
mov
cmc
pop
jnp
or
sub
aaa
mov
(bad)
loopne
pop
fs
nop
scas
hlt
lods
adc
push
mov
and
xlat
jecxz
mov
mov
mov
mov
dec
subps
test
push
mov
adc
ret
mov
ins
ds
dec
push
or
mov
aad
jno
in
inc
push
fisubr
sar
dec
sbb
loope
fdivr
mov
lods
xchg
inc
push
dec
mov
and
pop
add
imul
mov
out
hlt
aas
les
in
scas
cmp
test
jecxz
jnp
stc
pop
cmp
mov
inc
xor
sti
cmp
fwait
cmp
in
push
dec
shl
and
mov
test
jl
xor
dec
cs
add
mov
shl
push
mov
call
mov
iret
dec
sbb
fdiv
push
je
mov
sbb
sbb
mov
call
mov
inc
es
ret
scas
sbb
ins
inc
mov
daa
xor
leave
movs
inc
xchg
cmp
test
in
sbb
call
fwait
adc
ja
push
and
pop
mov
lahf
test
call
icebp
adc
das
and
cmc
sub
push
xor
mov
add
pop
popa
adc
adc
jne
inc
addr16
xchg
mov
adc
test
dec
movs
fnstenv
inc
(bad)
and
dec
int3
jne
xchg
repnz
leave
mov
je
add
inc
lock
shr
test
xchg
rcr
(bad)
jnp
sub
cmc
sbb
(bad)
mov
add
ins
nop
pop
jp
add
push
jge
and
sub
xor
dec
div
mov
sbb
inc
jns
dec
xor
add
cmc
lock
mov
xchg
push
popa
cmp
clc
add
lock
xchg
mov
mov
pop
pop
push
stos
pop
addr16
les
cdq
mov
xchg
inc
(bad)
stos
call
cmp
outs
rcr
and
dec
xchg
cs
je
push
repnz
ds
ds
stos
add
sbb
enter
mov
mov
call
mov
lahf
sbb
idiv
fimul
push
das
ret
xchg
pushw
bound
xchg
test
es
scas
add
inc
sbb
(bad)
add
test
scas
mov
inc
jns
int3
sahf
and
imul
adc
pusha
sbb
cmps
hlt
int3
jo
aas
out
dec
sahf
xchg
pop
call
leave
xchg
add
outs
or
mov
pop
mov
icebp
push
and
and
test
pop
mov
movs
adc
rcr
push
push
lods
das
jb
xor
movs
mov
sbb
push
pop
ret
lods
scas
sub
push
jno
jb
jno
iret
cmps
mov
rol
mov
push
lea
cld
sub
bswap
int
jge
pushf
or
xlat
fsubr
les
inc
xchg
push
out
pop
out
xchg
out
popa
sub
mov
arpl
sub
aad
popf
sbb
imul
lea
add
mov
dec
add
sub
pop
add
in
cmps
sbb
sub
das
dec
lock
in
ja
call
and
or
cmp
sub
mov
rcl
sbb
pushf
xor
cmp
and
inc
(bad)
in
out
jbe
test
push
xlat
or
xchg
xchg
pop
mov
retf
int3
mov
sti
gs
shl
push
dec
loopne
adc
das
out
xor
into
cmp
inc
les
lods
in
(bad)
dec
iret
dec
sub
es
jl
xor
les
retw
mov
sahf
mov
jmp
and
jle
pop
in
fistp
mov
mov
in
and
push
xchg
in
cmps
jp
in
ret
aam
jl
sbb
push
mov
cli
and
jne
hlt
imul
add
or
xchg
dec
sub
enter
sti
and
les
sub
ss
mov
js
sar
jle
push
and
sub
add
xchg
cmp
xor
inc
loopne
js
pop
retf
dec
sub
leave
push
test
jnp
(bad)
xchg
aas
xchg
jo
push
add
inc
fild
mov
pop
je
out
lahf
mov
xchg
out
stos
mov
cmp
jb
or
stos
ficomp
adc
addr16
ret
jbe
add
jns
or
pop
popf
push
(bad)
adc
adc
dec
xchg
or
aam
jecxz
adc
and
(bad)
dec
retf
push
out
jmp
adc
stos
ins
cmps
xchg
add
scas
(bad)
mov
or
cld
cs
sub
add
sbb
call
dec
inc
in
ins
cmp
adc
arpl
or
and
or
jno
add
mov
adc
adc
pop
(bad)
dec
rcr
das
stc
push
cmc
mov
sbb
mov
or
retf
inc
xchg
call
push
fmul
push
mov
scas
pop
push
inc
test
test
dec
add
inc
les
imul
jmp
pop
adc
inc
std
in
lods
sbb
retf
cmp
fnstsw
(bad)
(bad)
jo
out
cmps
dec
xchg
sbb
iret
fisttp
imul
push
xchg
inc
and
test
rcr
das
xchg
xor
mov
push
mov
rcl
(bad)
xchg
ret
mov
js
cld
neg
mov
mov
mov
outs
push
cmp
jns
mov
loop
popf
cmc
(bad)
mov
jp
or
aad
repnz
push
mov
dec
jg
jl
mov
adc
mov
dec
in
movs
stc
xchg
out
cmp
lods
mov
nop
pop
push
ficom
and
aaa
ja
pop
jo
push
mov
jae
aaa
pop
les
aaa
cmc
pop
repz
scas
mov
dec
push
dec
pop
pop
stc
cld
xlat
mov
add
mov
call
cmp
fisub
cmp
xchg
adc
cmp
stos
retf
mov
sbb
scas
mov
pusha
mov
pop
push
test
add
(bad)
in
xchg
mov
js
push
out
inc
test
les
xor
mov
pop
pop
jae
mov
pop
lahf
mov
pop
ss
mov
int3
dec
cmp
jae
call
mov
stos
xchg
jle
adc
das
sbb
adc
push
cmp
mov
out
push
xor
mov
pushf
mov
inc
movs
xchg
adc
mov
test
push
push
(bad)
call
rcl
pop
dec
shl
fcom
push
sub
xchg
xor
dec
xor
add
(bad)
mov
and
sub
lahf
hlt
stos
fs
xchg
aam
inc
lods
ror
dec
fwait
mul
mov
lahf
jo
add
mov
int
mov
pushf
adc
xchg
out
add
mov
shr
js
and
pop
fucomp
out
mov
loop
sub
inc
lock
jl
pop
into
push
enter
divps
pop
out
xchg
aaa
xchg
or
rol
das
out
out
jg
push
ins
das
fld
outs
jno
mov
mov
mov
pop
xor
popf
push
xor
retf
cli
cwde
enter
cmc
inc
jmp
ds
out
and
daa
add
imul
jmp
sub
leave
xlat
popa
pushf
pop
cld
or
retf
mov
cmc
icebp
icebp
call
jmp
in
cld
addr16
adc
adc
movs
jns
or
enter
mov
stc
call
leave
mov
xor
(bad)
mov
mov
jg
mov
adc
retf
dec
dec
xor
inc
mov
sbb
pop
mov
out
xor
call
test
push
jno
sahf
sar
ds
movs
xchg
dec
cmps
inc
rcl
pushw
xchg
test
xor
adc
mov
mov
test
fidivr
outs
mov
ins
fxch
nop
xchg
or
and
mov
xchg
inc
or
push
das
or
mov
sub
jg
xor
cmp
xchg
push
pop
aam
mov
jmp
aad
test
mov
std
into
sub
std
stos
or
mov
jo
(bad)
out
stos
inc
rcl
xor
hlt
mov
jb
or
ins
dec
mov
lds
jbe
sub
jmp
jmp
cmps
icebp
jmp
std
mov
pop
push
jmp
inc
jmp
fucomi
test
out
in
or
push
push
shl
xor
xor
or
pop
int
cdq
and
cmp
jne
sar
addr16
std
fidivr
ss
and
jl
test
jl
popa
push
jbe
cld
dec
aam
sub
dec
sub
xchg
pop
jmp
xor
out
retf
nop
pop
bound
sbb
jne
inc
pop
jge
pause
xor
push
xor
adc
jge
dec
pop
jo
clts
lock
pop
push
out
push
test
fwait
arpl
loopne
push
stos
and
or
pushf
data16
cli
add
stos
mov
sbb
cli
mov
cmp
jnp
inc
enter
cmp
call
imul
out
arpl
mov
push
dec
mov
repz
addr16
sub
out
push
idiv
push
push
repnz
add
xor
push
mov
jbe
pop
iret
in
sub
retf
ds
inc
dec
push
jle
fmul
addr16
and
push
fild
push
and
dec
or
movs
call
add
outs
adc
mov
lods
adc
pop
retf
and
mov
ret
push
iret
dec
test
pop
les
push
and
adc
stc
(bad)
ins
mov
lea
fbstp
xchg
add
ss
dec
push
lock
fiadd
inc
(bad)
cmps
out
lds
(bad)
xchg
sub
pushf
sub
xchg
gs
movs
or
mov
add
inc
outs
dec
fnstsw
sar
aaa
push
(bad)
data16
mov
fmul
dec
shl
and
cld
data16
pusha
dec
sub
pop
fdiv
dec
out
int
and
retf
lods
mov
not
lahf
push
push
push
repz
xchg
sti
js
push
pop
sub
fistp
fistp
outs
ds
popf
xor
inc
adc
adc
xchg
pop
shl
sbb
push
push
out
xchg
call
pop
cld
(bad)
enter
es
mov
sti
retf
dec
jne
pop
loop
jle
or
push
sub
dec
jmp
pop
jecxz
ss
je
lods
ss
fmul
pop
add
arpl
jbe
pop
mov
pop
(bad)
inc
ja
int
inc
stc
enter
xchg
jmp
adc
leave
fnop
retf
sbb
(bad)
xlat
gs
xor
aad
xor
push
(bad)
std
cmc
xchg
jp
sbb
adc
neg
or
cmp
fisttp
mov
repnz
push
pop
cmp
(bad)
fcomi
adc
add
imul
xchg
scas
icebp
sar
jge
fdiv
jmp
xchg
jl
mov
cmp
jle
or
jmp
es
or
sub
sbb
ss
cs
dec
icebp
jnp
push
sahf
jno
mov
jmp
inc
fs
shl
outs
or
(bad)
cmp
mov
ins
sbb
aas
sbb
jmp
mov
jns
cmps
mov
inc
inc
pusha
mov
retf
in
out
aaa
ffree
mov
in
pop
pop
ins
pushf
stos
pop
xchg
retf
pop
mov
or
push
test
adc
call
outs
jmp
call
cdq
int3
jge
outs
mov
nop
mov
scas
retf
in
and
fwait
stos
cmp
dec
scas
lea
and
dec
call
pusha
pop
jne
jns
pop
fild
sete
popa
or
fstp
adc
dec
ja
adc
cmc
shl
shl
leave
pop
mov
(bad)
pushf
out
sub
jecxz
inc
mov
call
das
xor
pop
xchg
fmul
xchg
jecxz
cmp
push
imul
adc
ja
(bad)
mov
sub
xchg
imul
(bad)
fidiv
sub
cmp
data16
dec
mov
lock
push
movs
dec
call
popa
cmp
jne
mov
cmc
jg
inc
aad
loope
sbb
push
repz
dec
das
or
inc
dec
stos
adc
dec
mov
out
das
in
mov
shr
fdiv
mov
vpaddsb
sub
jbe
icebp
pusha
mov
mov
inc
scas
in
scas
mov
mov
(bad)
addr16
out
inc
lock
cdq
leave
mov
out
in
sbb
inc
cmp
in
shr
adc
xor
cmp
loopne
icebp
cmp
clc
pusha
call
aas
jecxz
dec
stos
rcl
xchg
ss
push
inc
xchg
mov
sbb
push
ja
or
xor
outs
sti
add
sub
xchg
bound
ds
inc
push
push
xchg
sti
(bad)
mov
inc
mov
out
loopne
stc
cmp
addr16
dec
cli
stos
sbb
gs
push
mov
mov
mov
and
jle
mov
je
aam
cmps
iret
retf
inc
jb
leave
dec
es
popf
loopne
xor
lds
push
ins
and
fwait
test
push
sbb
jno
fsub
sbb
ret
(bad)
mov
lods
repnz
stos
and
xchg
std
sbb
pop
xchg
mov
cmp
mov
shr
ja
shr
out
lods
leave
jp
jo
dec
pusha
push
mov
shr
add
push
loope
mov
mov
ins
cmp
and
sub
aas
stc
rcl
bound
nop
mov
and
mov
mov
addr16
pop
mov
addr16
sub
in
push
repz
xchg
cmp
pop
cs
jle
in
cwde
test
sub
retf
adc
movs
mov
xor
xchg
fild
in
push
jl
mov
sbb
mov
sub
cmp
test
mov
cmps
sub
out
pop
push
mov
aam
(bad)
xor
sub
and
sub
pop
stos
movs
add
in
popa
cwde
jge
(bad)
out
pop
es
sbb
mov
imul
shr
xchg
fbstp
nop
icebp
clc
outs
retf
ins
and
mov
je
mov
ins
icebp
cli
inc
shl
push
inc
xor
mov
mov
mov
jns
mov
js
sbb
outs
lods
out
out
fwait
sbb
xor
adc
pop
bound
imul
or
inc
stc
pop
add
js
bound
nop
mov
cmp
or
jnp
in
leave
push
cmps
retf
pop
js
add
cld
inc
mov
je
mov
fwait
shl
mov
inc
dec
push
or
inc
inc
iret
mov
lods
inc
sti
push
les
shl
cld
inc
leave
pop
or
fld
test
or
loop
movs
xor
fdivr
icebp
aaa
xor
xchg
xor
push
pop
loope
test
jmp
adc
icebp
movs
fbstp
mov
pop
popf
xor
in
and
and
scas
xchg
sar
ja
dec
cmp
neg
pushf
sbb
out
sub
xor
mov
inc
sbb
inc
jle
cmp
les
shl
int3
(bad)
xchg
sub
push
xor
pop
mov
push
repnz
test
shl
ins
sbb
(bad)
repnz
movs
xor
cs
repz
jp
adc
loopne
(bad)
test
retf
xchg
push
and
fmulp
pop
jmp
jbe
adc
dec
out
movs
rol
jo
(bad)
xor
adc
sbb
cwde
lea
mov
xlat
lods
mov
sti
cmp
ret
jbe
sbb
in
sbb
ja
in
loope
stos
xchg
sub
and
mov
ret
mov
dec
or
loop
out
lods
add
outs
stos
dec
adc
add
jno
aad
lahf
xor
adc
jle
leave
mul
dec
push
aad
mov
(bad)
call
cs
int3
fistp
fstp
jp
cld
inc
pop
mov
ret
cmps
iret
xor
jno
arpl
retf
cmp
pop
icebp
jns
ficomp
jb
jp
imul
jl
sbb
(bad)
call
and
pop
mov
daa
inc
test
arpl
mov
jmp
mov
xchg
pop
retf
mov
bound
xor
nop
popf
outs
jl
sub
rcl
mov
mov
nop
dec
ja
jbe
scas
cmps
adc
inc
xor
test
stc
jmp
inc
fcomp
popa
(bad)
push
call
int3
stos
movs
(bad)
cwde
sub
mov
push
jnp
cmp
xchg
xor
inc
xor
test
xor
adc
call
imul
daa
outs
mov
out
lods
lock
enter
fdiv
sub
dec
xor
movs
aaa
sub
push
xlat
popa
jno
lods
scas
mov
rcl
int3
or
add
hlt
dec
sbb
mov
daa
jmp
push
push
mov
(bad)
test
dec
push
or
push
jo
cmps
push
sub
ins
ins
push
es
mov
cmp
movs
out
xlat
daa
mov
xor
into
mov
sbb
inc
xchg
mov
push
sbb
cmc
out
call
jo
out
hlt
push
adc
inc
icebp
mov
jle
cmp
scas
push
neg
fwait
adc
add
mov
repnz
jmp
or
mov
adc
jnp
es
cmp
pop
inc
inc
(bad)
push
pop
iret
loop
scas
cmps
mov
sar
lods
push
and
js
fst
fisttp
aaa
(bad)
(bad)
inc
mov
mov
mov
pop
xorps
ins
adc
mov
sbb
mul
xchg
cld
cmps
(bad)
clc
cmp
jo
jp
ja
inc
fst
jl
fnstenv
xchg
sub
cmp
lods
hlt
call
push
out
jae
cmp
clc
pop
jno
pushf
aam
pop
(bad)
adc
cmp
test
ins
inc
sub
sub
mov
and
retf
push
std
loopne
adc
rol
hlt
loop
loop
pop
cmps
mov
push
js
out
add
lahf
retf
stos
inc
out
test
add
dec
cmp
aaa
inc
fild
pop
cmps
pop
dec
or
adc
xcrypt-cfb
cmps
movs
gs
cwde
push
sbb
(bad)
hlt
jg
fs
jecxz
mov
test
retf
inc
lahf
ror
mov
and
rcr
pop
mov
cs
adc
jg
rol
stos
mov
pop
sub
mov
loope
xchg
xchg
inc
in
mov
les
cmp
or
or
pop
cmp
sbb
xchg
mov
and
and
inc
repz
mov
xor
jge
sbb
movs
inc
jl
bound
xchg
ret
jne
in
test
and
adc
and
pop
sub
mov
aas
xlat
(bad)
jp
sti
cld
pop
(bad)
xchg
and
lds
xor
mov
das
xchg
bound
gs
dec
push
retf
rcr
call
push
xor
imul
(bad)
mov
ret
test
(bad)
xchg
imul
loope
fst
dec
and
pop
(bad)
data16
adc
(bad)
dec
mov
push
div
push
pop
push
mov
sub
cmp
imul
pusha
xor
jmp
xchg
popf
cmps
outs
clc
push
pop
fnstenv
cwde
jle
dec
(bad)
sbb
bound
dec
loop
(bad)
into
shl
pop
sahf
(bad)
sub
pop
jne
pop
and
mov
dec
add
inc
repz
shl
and
cmp
add
neg
cmc
sbb
or
mov
push
mov
sar
mov
(bad)
push
sahf
mov
or
call
push
add
retf
or
cs
and
jg
call
xchg
shl
out
leave
xor
and
dec
or
arpl
push
repz
lea
aad
xor
retf
mov
gs
cmp
mov
jbe
push
pusha
or
xchg
push
push
shl
xchg
shr
imul
pop
fiadd
push
lods
aam
mov
scas
shr
dec
push
push
les
xor
xchg
int3
mov
sbb
or
lods
std
jo
mov
test
jmp
cmp
adc
cmps
pusha
or
inc
or
jecxz
test
jle
pop
or
xor
inc
sub
dec
mov
ss
adc
sahf
je
jns
lods
mov
loop
xor
jb
retf
jbe
add
sub
test
out
jb
sub
ins
enter
pop
sub
cwde
loope
popf
ret
mov
xchg
adc
shr
scas
movs
mov
fsubr
inc
aaa
pop
xchg
jmp
hlt
lahf
dec
sahf
sysexit
mov
mov
fadd
je
and
shl
add
adc
xchg
cmp
stos
jbe
mov
push
loope
scas
inc
retf
push
ret
inc
push
xlat
mov
aaa
es
out
arpl
xor
daa
push
adc
fdivr
sbb
std
iret
rcr
cmps
pop
sub
rcl
jmp
sbb
stos
or
sub
push
and
ss
daa
fisttp
and
xchg
lods
repnz
push
popf
mov
hlt
mov
out
sahf
fsubrp
mov
jmp
push
fld
das
add
xchg
mov
(bad)
not
ret
je
add
mov
adc
jp
push
jns
bound
(bad)
ins
cdq
sar
push
aad
int
js
jmp
ss
imul
mov
inc
or
xor
es
add
in
test
mov
mov
lahf
dec
repz
loopne
mov
mov
push
sub
or
retf
int3
xor
sbb
mov
and
xchg
ja
arpl
pop
cmps
dec
mov
sub
aas
sti
loop
inc
in
in
fst
jbe
mov
sbb
loopne
mov
fcomip
fstp
es
mov
rcr
push
mov
inc
jg
or
lea
cmp
push
ret
dec
mov
retf
push
iret
or
bound
nop
push
or
pop
push
xor
dec
call
cmp
imul
pop
adc
lahf
cwde
dec
xchg
cmps
out
mov
jmp
mov
in
hlt
xor
or
cwde
leave
scas
mov
and
cmp
rcl
lods
sbb
outs
xlat
stc
pusha
xor
(bad)
sub
jl
ss
dec
ficom
push
jmp
cs
out
xchg
sahf
stos
sbb
scas
jne
int
push
mov
adc
std
imul
sub
inc
call
or
dec
push
pop
ror
and
int3
jnp
cmp
cwde
add
movs
mov
jmp
imul
ror
push
int
cmps
xlat
into
fisub
jl
sbb
cmp
add
xchg
cmp
pop
js
add
pop
inc
(bad)
(bad)
inc
je
xor
and
push
dec
popf
pop
sub
push
sub
cmp
lods
movs
and
xor
xor
arpl
or
aad
mov
mov
aas
mov
cmp
out
cmp
pop
or
jno
xlat
hlt
add
test
cmp
aas
and
sub
mov
jecxz
inc
mov
mov
(bad)
nop
sub
mov
push
fdivr
das
inc
imul
in
dec
cmps
push
out
ret
les
inc
lds
sub
pusha
pop
loopne
fistp
sbb
pop
sub
pop
push
push
addr16
pop
xor
sub
pop
lock
jg
jp
push
dec
cs
jg
and
or
int
outs
xor
mov
dec
cmps
dec
lods
inc
pop
sbb
rcr
lock
mov
mov
cli
mov
sbb
rcr
das
(bad)
test
push
rcl
cmp
adc
push
repnz
or
(bad)
lods
pop
dec
outs
jecxz
adc
inc
cli
xchg
push
sub
jl
cli
fild
in
jle
jge
(bad)
hlt
mov
(bad)
dec
pop
dec
test
dec
aam
or
sbb
fwait
lock
mov
adc
sbb
pushf
jecxz
aad
into
loopne
div
cld
cmp
nop
add
push
mov
ud0
mov
fdiv
scas
js
pop
pop
mov
or
push
push
jns
jecxz
sub
cmps
xchg
cmp
sub
mov
add
fistp
scas
adc
lahf
aad
inc
dec
dec
pop
xor
xchg
mov
adc
fst
push
js
cdq
sbb
mov
inc
jns
popa
stc
out
cli
or
in
mov
mov
(bad)
and
sbb
mov
in
cmp
adc
mov
xchg
shl
or
cmp
pushf
das
mov
xor
mov
int3
push
xor
push
das
sub
and
mov
sbb
(bad)
cmc
jp
mov
and
inc
mov
push
arpl
nop
aam
jge
or
xchg
scas
aad
adc
sub
(bad)
lods
gs
sbb
les
(bad)
and
xchg
mov
add
in
in
dec
fcomi
pop
iret
test
xchg
popa
mov
ins
std
in
dec
push
popf
add
sub
and
jl
mov
and
rcr
pop
mov
jge
pushf
push
stc
inc
xchg
pop
cmc
xor
je
sahf
stos
cld
es
pusha
add
push
cs
ins
loope
lea
fcomp
ins
mov
mov
clc
std
pop
add
sbb
sar
sti
(bad)
xor
icebp
into
das
rep
xor
fwait
mov
push
bnd
pop
in
cmps
popa
(bad)
stc
jp
pusha
push
fsubp
test
retf
or
adc
sub
repz
test
icebp
sbb
push
adc
mov
arpl
mov
test
and
cmp
sub
xchg
je
push
add
xor
pushf
movs
mov
dec
fwait
or
pop
sub
inc
xor
push
push
sub
push
pop
movs
mov
xor
mov
dec
test
and
lods
pushf
rcr
fdivr
inc
push
xchg
cwde
mov
inc
inc
cmc
daa
pop
xor
test
test
lea
outs
ds
xchg
jae
push
mov
btc
out
mov
loope
xor
dec
shl
sti
mov
pop
fsave
pop
or
or
movs
pop
shl
mov
adc
dec
in
mul
inc
int3
sub
mov
push
add
imul
push
shl
imul
jecxz
enter
xor
pusha
aad
fcomi
xchg
repz
jo
adc
dec
lock
std
leave
jg
xchg
sub
and
pop
xlat
loopne
stc
sbb
cmp
loope
adc
mov
or
mov
and
(bad)
aaa
fsubr
xchg
xlat
fldenv
cli
mov
dec
mov
mov
dec
pop
je
inc
cmp
mov
add
stc
aaa
fistp
push
out
mov
mov
aaa
stos
jl
add
jg
xchg
cmp
enter
test
mov
push
add
push
fist
push
or
aaa
jno
add
pusha
mov
push
lahf
push
mov
cmp
xlat
sbb
arpl
leave
adc
(bad)
push
pop
or
loopne
leave
jno
xchg
mov
or
sub
outs
jne
(bad)
xadd
cmp
mov
mov
cdq
dec
fadd
xchg
mov
mov
lock
scas
movs
mov
fs
dec
jecxz
jecxz
and
jmp
into
int3
ss
mov
push
shl
inc
cwde
mov
mov
mov
sti
ficom
pushf
inc
inc
and
xchg
pop
adc
test
dec
jns
les
sub
sbb
jg
out
lea
stc
inc
mov
packuswb
pop
push
sub
sub
out
mov
popa
pop
stc
repnz
push
int
push
es
leave
push
je
fnstenv
xor
out
xor
adc
shl
inc
cmp
out
fwait
xchg
xor
xor
aad
outs
movs
loop
mov
and
out
or
int
fld
jg
addr16
in
xchg
add
sbb
mov
jmp
enter
pop
xchg
push
call
add
loop
aad
in
bound
jne
pop
inc
lock
mov
lds
inc
mov
xor
or
sbb
dec
dec
(bad)
leave
mov
pushf
xchg
mov
jns
sti
jmp
in
and
(bad)
cmp
je
or
and
out
cmp
mov
popa
jg
std
xor
cmp
shl
xor
popf
sti
fwait
and
cmc
rcl
add
in
adc
cmps
or
cmp
daa
test
mov
xor
repnz
mov
fisub
jno
pop
inc
mov
lock
jb
sub
and
inc
into
gs
ds
or
adc
retf
jnp
je
push
jge
push
aaa
mov
clc
mov
cwde
out
neg
xlat
out
out
ds
xchg
sbb
sbb
pusha
cli
dec
int3
leave
xchg
out
retf
mov
out
mov
push
and
or
bound
push
add
mov
mov
or
out
cmp
fs
cdq
dec
dec
and
sub
int
xlat
(bad)
aad
outs
sub
cdq
sbb
add
inc
cmps
jmp
or
nop
dec
push
ins
xor
cmp
nop
jnp
(bad)
mov
jle
dec
sub
jno
push
lods
mov
push
mov
push
or
add
je
(bad)
mov
out
js
(bad)
call
sti
jo
cmp
sub
or
dec
jmp
jg
dec
aam
test
movs
cwde
xchg
pop
pcmpeqd
aaa
idiv
dec
adc
sub
xor
jb
nop
jle
int3
outs
imul
mov
rcr
adc
imul
mov
sahf
jnp
scas
loopne
imul
js
mov
inc
mov
push
pop
adc
inc
jmp
cmc
in
mov
scas
outs
neg
movs
adc
sti
dec
das
ret
jmp
xor
repnz
les
and
push
fnstenv
test
rol
sub
jnp
lods
add
mov
paddd
je
gs
xchg
jmp
xor
loopne
popa
jg
mov
fst
mov
sbb
add
and
idiv
gs
add
add
loop
ins
nop
in
adc
add
cld
out
push
xor
ret
aam
cmp
clc
out
cmp
dec
sahf
and
ss
bound
jecxz
hlt
cld
adc
or
rcr
sub
arpl
(bad)
adc
or
pop
(bad)
call
and
jmp
push
outs
hlt
rol
cmp
aaa
popf
xor
sbb
and
jbe
mov
ja
bound
inc
repz
neg
in
or
inc
cmps
mov
shr
lods
add
adc
jp
std
js
imul
loope
movs
jne
ret
or
cmp
sub
sbb
pop
jnp
pushf
xchg
mov
hlt
cld
inc
xor
(bad)
out
lds
out
mov
cwde
clc
jecxz
fsubr
jp
fwait
ror
fwait
and
iret
cmp
jae
mul
je
rcl
xchg
ficom
rcr
lahf
mov
cdq
pushf
call
(bad)
add
mov
inc
(bad)
cwde
jg
in
call
daa
mov
lea
dec
mov
(bad)
ins
jecxz
sub
ret
add
fist
adc
pop
jb
daa
(bad)
sub
imul
sub
cdq
lods
or
and
inc
mov
movs
outs
mov
repnz
push
lods
stos
jmp
test
neg
jge
sar
ins
fld
outs
add
ja
pusha
and
fisttp
jnp
push
jge
inc
dec
xor
sub
enter
cmp
sub
test
xchg
movs
mov
mov
push
mov
sbb
shr
lods
push
cmp
cld
mov
jmp
jmp
jp
mov
push
xchg
pop
and
lahf
(bad)
int3
daa
jge
outs
xchg
pushf
sbb
stos
dec
sbb
cdq
cmps
imul
push
push
cmp
fild
(bad)
pop
out
sub
sub
pop
xchg
jmp
popf
push
pop
push
and
dec
lds
and
out
ins
mov
ficom
and
xchg
cs
cmp
fwait
sub
inc
pop
inc
je
aam
outs
push
mov
xchg
add
dec
pop
jmp
adc
mov
clc
je
xlat
arpl
xchg
inc
int3
cli
test
pop
add
ins
fiadd
push
ins
push
rcl
fwait
pop
push
and
rcl
jb
sahf
in
jle
inc
mov
hlt
ds
or
mov
cmp
lds
or
hlt
stos
cmp
scas
mov
je
add
mov
enter
sub
icebp
outs
out
sub
mov
or
jo
outs
sbb
test
cmp
cmp
lahf
or
test
xor
sbb
enter
and
into
repnz
enter
inc
adc
clc
call
dec
push
loope
lods
aam
xlat
cmps
icebp
ror
and
adc
and
int
cli
mov
(bad)
lahf
sbb
fst
adc
sbb
mov
stos
test
xchg
dec
mov
ins
jmp
leave
xor
inc
test
sub
stos
enter
inc
(bad)
cwde
in
jae
xchg
xchg
ins
jp
jg
pop
mov
mov
sbb
mov
mov
xlat
not
mov
mov
(bad)
sbb
adc
add
outs
gs
sahf
test
push
push
in
adc
lods
push
sub
icebp
mov
xor
inc
and
and
jmp
xchg
xor
das
mov
or
in
test
jg
add
int3
stos
mov
mov
jecxz
jns
test
mov
adc
mov
push
adc
mov
mov
pusha
clc
push
loopne
shl
arpl
in
std
scas
cmps
fcom
enter
sbb
in
in
cmps
sar
or
push
xchg
sbb
mov
add
fstp
shl
je
push
dec
sub
or
test
sahf
out
fidivr
imul
mov
jmp
jno
cld
fs
in
imul
in
ror
test
aaa
and
pause
add
cli
test
add
sbb
add
hlt
mov
enter
mov
hlt
push
dec
pusha
pop
fcmovbe
cmp
xchg
mov
ja
push
pop
fdiv
pushf
in
mov
mov
sub
and
das
cmc
ror
pop
(bad)
cmp
mov
cli
lock
cmp
test
mov
add
icebp
cmp
outs
icebp
ds
fadd
imul
or
pop
add
push
mov
mov
xchg
jns
(bad)
retf
ds
out
stc
rcl
nop
ins
lods
inc
inc
push
cmps
movs
push
and
mov
(bad)
fidiv
mov
mov
mov
jecxz
rcl
dec
xchg
jle
outs
stos
popf
push
sbb
sbb
mov
fisub
idiv
xchg
pop
rol
mov
dec
inc
sti
or
loopne
push
mov
mov
in
and
sub
add
cmp
mov
out
inc
inc
inc
(bad)
movs
and
scas
inc
les
enter
repz
and
test
lods
mov
xchg
ror
xchg
xchg
mov
inc
in
jne
arpl
push
into
sahf
shl
pop
daa
pop
push
inc
inc
push
mov
inc
dec
jb
xchg
jecxz
xor
clc
repnz
sbb
rol
call
aam
loop
into
(bad)
mov
loopne
ror
icebp
inc
jno
mov
jbe
add
mov
out
jns
push
mov
test
or
sti
enter
cmps
jmp
bound
iret
rcr
int
iret
mov
adc
mov
fs
int3
push
dec
(bad)
mov
rol
pop
test
push
fnsave
stos
jb
xchg
iret
fdivp
fwait
cmp
mov
xor
jne
push
movs
mov
mov
jl
into
iret
ror
jno
ret
cmp
jecxz
pushf
cli
pop
dec
push
adc
adc
test
ss
jae
jmp
cmp
lds
dec
cli
push
pusha
mov
mov
in
jae
xor
add
mov
imul
xchg
aam
cmps
shr
cmp
pop
xchg
popf
pusha
push
add
inc
xor
gs
dec
or
sub
(bad)
fild
mov
dec
push
pop
xlat
(bad)
out
cmp
jns
cld
push
call
stos
mov
xchg
jg
shl
std
(bad)
test
data16
in
xchg
ja
jno
add
xchg
dec
dec
mov
jne
out
into
mov
mov
outs
retf
adc
(bad)
mov
out
and
push
jecxz
jo
push
xlat
mov
sahf
add
pop
inc
sbb
add
retf
daa
sub
enter
punpckhbw
out
and
and
rcr
(bad)
sub
adc
enter
push
out
fmul
fadd
mov
mov
popa
and
mov
push
test
xchg
mov
std
in
scas
mov
sbb
retf
ds
fcmovnu
push
in
aas
jge
push
jl
js
sub
stos
dec
push
in
inc
int3
(bad)
(bad)
out
sub
clc
and
sub
jno
or
(bad)
cmps
loope
data16
xchg
xchg
pop
xor
lods
ins
add
or
mov
cmp
lds
pop
sub
stos
lock
nop
pcmpeqb
es
jecxz
(bad)
stos
cmp
cwde
inc
add
outs
call
aad
imul
int3
cmc
sub
(bad)
inc
sar
daa
pop
add
inc
push
and
mov
xor
(bad)
aaa
mov
jg
retf
mov
add
fsub
retf
pop
outs
or
jo
cwde
sbb
cmps
lods
xor
xor
jae
cmovno
lock
in
cmp
lock
scas
xchg
push
jecxz
rcl
sub
fyl2xp1
sahf
and
or
daa
dec
sub
shr
stos
test
push
not
and
adc
adc
or
jl
lods
sub
push
jle
push
inc
sbb
mov
jg
sub
add
test
pop
into
cmps
dec
pop
cs
in
ins
jbe
pop
sbb
and
mov
pushf
dec
and
jnp
push
nop
push
(bad)
xor
imul
loope
mov
iret
(bad)
push
mov
scas
mov
sbb
sub
loope
call
pop
enter
mov
ja
lods
dec
lock
das
fiadd
adc
ins
push
mov
lods
(bad)
out
mov
mov
mov
xchg
pop
imul
cmp
pop
stc
sbb
push
add
or
test
je
imul
stos
jp
jge
call
or
mov
loope
mov
cmps
int3
and
pop
test
xor
jne
lods
dec
push
add
xchg
push
xchg
jae
(bad)
(bad)
call
test
add
cli
ins
dec
mov
xor
xor
nop
ret
sub
jno
(bad)
loopne
fprem
jl
mov
ins
xor
xchg
(bad)
arpl
push
(bad)
dec
cmp
adc
jb
cmp
mov
inc
lods
pop
loop
xor
pop
jae
les
dec
pop
mov
inc
(bad)
pop
xchg
aaa
(bad)
leave
movs
fsub
mov
gs
push
std
adc
cmp
call
xchg
sbb
xor
xchg
movs
add
jo
add
fs
daa
push
and
cmp
sbb
and
sbb
xor
fs
inc
ja
or
loopne
mov
ds
dec
data16
cwde
sbb
fmulp
rcl
xor
sbb
lods
movs
mov
xor
add
das
adc
cmp
push
or
cmps
mov
xchg
or
inc
dec
sbb
add
sub
ins
sti
mov
fldenv
outs
sbb
aaa
or
xor
sub
enter
jo
sahf
jns
inc
ja
cmp
mov
lods
sub
lds
xlat
fbstp
cmp
jbe
cmp
fmul
test
or
stos
popa
fucomip
fld
mov
(bad)
outs
and
rcl
jle
sar
adc
lods
or
ficom
loope
sbb
pop
jmp
(bad)
dec
dec
sbb
addr16
ds
cmp
cli
sbb
fcom
jb
push
outs
push
sbb
dec
sahf
xor
dec
(bad)
push
inc
aad
rcr
gs
aaa
xchg
in
pop
xor
sbb
sub
or
imul
ins
test
pop
add
rcl
push
xor
push
imul
jae
xor
mov
sub
add
and
sbb
ins
and
cmps
mov
cmp
mov
repz
push
in
cmp
xchg
std
add
xlat
ret
jbe
pusha
push
sbb
jb
iret
inc
aam
add
in
shl
jp
ret
out
mov
pop
(bad)
stos
jns
je
out
or
cmovne
mov
sub
sar
mov
jno
fninit
bound
lahf
inc
add
popf
cmp
es
sub
inc
fs
lds
mov
jecxz
xor
cli
in
or
clc
sar
mov
sub
add
daa
jbe
(bad)
cmp
xor
enter
pop
jnp
sbb
fmul
and
mov
fadd
aaa
out
mov
lock
cmovnp
or
jne
outs
lock
mov
lock
sub
leave
mov
inc
xchg
cli
or
(bad)
stc
jl
bound
cld
mov
mov
cmp
bound
das
push
iret
ja
sahf
loop
int3
rcl
popf
stos
mov
xor
push
add
and
stos
pop
mov
ins
jb
scas
jmp
push
push
mov
xchg
inc
repz
movs
jge
fnclex
jp
xor
lock
jle
sub
lahf
jne
mov
fcom
mov
fwait
movs
rcr
mov
adc
and
sub
pop
cmp
in
test
and
mov
out
pop
jns
push
sar
sbb
sbb
sub
fmul
pop
dec
(bad)
cmp
icebp
jl
jge
outs
jb
mov
adc
test
add
adc
or
push
call
mov
inc
fstp
in
shl
xchg
mov
pop
sbb
sti
sub
jae
mov
test
mov
sbb
xchg
adc
pop
mov
xchg
add
(bad)
mov
not
mov
cmps
ficomp
popf
mov
je
cs
lods
fcomi
lahf
mov
add
loope
(bad)
mov
pop
ret
out
test
lods
pop
add
imul
cmps
add
rcl
xor
lods
lahf
inc
mov
(bad)
add
push
xchg
jae
es
jae
clc
mov
jne
push
fstp
ds
pop
mov
lods
mov
repnz
ds
add
push
lea
(bad)
jne
dec
bound
hlt
pop
xchg
cmp
inc
jmp
mov
rcl
les
add
jnp
std
or
adc
sub
adc
out
sub
out
(bad)
lods
nop
lods
adc
sbb
imul
fsub
sbb
mov
out
call
shl
out
(bad)
xchg
cwde
add
call
clc
mov
or
mov
jno
and
and
popf
jl
sbb
cmp
into
ss
sbb
dec
cmp
cmp
mov
rol
add
ret
rcl
adc
dec
std
sahf
retf
fstp
clc
mov
ret
stos
or
sub
mov
into
add
and
dec
and
pop
add
call
pop
pop
jecxz
inc
movs
xchg
int3
out
dec
loope
sub
mov
mov
leave
bound
and
test
(bad)
jge
xor
inc
sbb
jle
mov
repnz
repnz
push
mov
jle
rcr
push
in
cmps
push
push
test
mov
daa
cmc
jmp
push
sti
aam
push
mov
ss
adc
out
int3
xlat
outs
imul
mov
and
sbb
fbstp
mov
push
out
(bad)
fisttp
sbb
pop
adc
dec
inc
rcl
cmp
in
push
xchg
addr16
cmps
repnz
or
adc
adc
mov
or
jnp
jp
cmps
test
icebp
jmp
mov
ret
mov
cli
xor
add
mov
sub
and
call
mov
mov
xchg
inc
clc
jle
ds
xchg
and
jecxz
pop
arpl
mov
leave
jge
adc
clc
inc
dec
push
movs
push
sar
xchg
jmp
shr
fcmovnbe
in
sti
add
out
outs
mov
jmp
mov
mov
cmp
outs
sub
mov
pop
jmp
or
repz
nop
adc
adc
push
cmps
(bad)
mov
ins
cmps
in
jecxz
loop
mov
or
jle
push
or
adc
push
push
call
xor
in
dec
jns
das
movs
xchg
repnz
leave
cmp
add
aas
call
aad
movs
test
push
out
jbe
enter
into
(bad)
push
mov
mov
xor
cmp
pop
jmp
fcmovu
out
bound
xchg
aam
pusha
fwait
sbb
and
test
retf
jno
and
mov
imul
out
leave
(bad)
or
push
retf
(bad)
fstp
fiadd
inc
pop
in
fwait
sub
mov
out
out
mov
mov
push
ret
adc
sub
adc
mov
ret
and
sbb
push
xchg
test
dec
xlat
and
hlt
xchg
cmp
push
pop
cwde
and
int3
int
cli
cmp
scas
xchg
fwait
sub
scas
daa
int
pop
xor
js
push
iret
jmp
std
push
into
ss
xlat
ins
jecxz
mov
push
sbb
les
jae
fstp
adc
out
xchg
out
out
fnstcw
pop
popf
in
fisttp
inc
cs
addr16
sub
jnp
and
push
pop
mov
sbb
ret
push
das
xchg
or
push
jmp
es
mov
dec
adc
adc
mov
popf
dec
or
or
arpl
sbb
pop
inc
pusha
imul
sub
jnp
movs
and
and
aaa
and
aad
mov
dec
sbb
xor
in
ret
addr16
popf
sub
retf
popf
aad
ja
inc
loop
push
xor
mov
ja
xchg
inc
mov
scas
sar
push
pop
sub
inc
mov
adc
test
aaa
les
mov
pop
fucomip
xor
and
push
jae
ret
lock
ja
cmc
repz
jge
push
stos
and
mov
cwde
idiv
cmp
inc
bound
sub
fild
mov
outs
inc
push
loopne
clc
sub
cwde
stc
inc
dec
sub
bound
and
adc
sahf
adc
loop
es
push
test
xchg
rcr
fcomi
(bad)
xlat
stos
inc
and
sbb
xor
stc
ss
cmp
lods
scas
cmps
and
mov
xchg
xor
(bad)
adc
inc
pop
push
mov
adc
call
ret
dec
pop
push
movs
add
add
fs
(bad)
(bad)
ror
sbb
xor
shl
pop
loopne
jb
dec
sbb
(bad)
sbb
ins
mov
jae
adc
(bad)
aam
cmp
xchg
mov
inc
dec
sub
pop
(bad)
xchg
aam
ss
in
jae
cs
cmp
mov
push
jl
xchg
outs
sahf
daa
adc
dec
pop
add
inc
dec
fistp
es
retf
int
gs
mov
xchg
mov
int3
adc
outs
aam
sub
ror
or
mov
imul
movs
rcr
jns
adc
test
ins
pop
leave
retf
nop
fisttp
adc
lods
rcr
test
pop
out
sub
fistp
frstor
dec
mov
inc
dec
hlt
jae
push
inc
in
pop
push
repnz
clc
cmc
jne
dec
repz
cs
aas
stos
clc
mov
daa
pop
test
and
jno
and
pop
out
repz
ror
cmp
dec
(bad)
cs
(bad)
shr
xor
ret
outs
cld
inc
adc
test
inc
loop
push
cld
add
mov
fwait
ret
push
imul
pop
add
sbb
lods
jmp
xlat
imul
into
sub
aas
xor
mov
arpl
sbb
in
mov
or
and
xchg
ja
fnstcw
xor
xor
stc
push
jle
aad
leave
out
nop
out
inc
xor
add
sbb
dec
aaa
enter
sub
mov
mov
sbb
lods
adc
fnstenv
dec
cli
pop
arpl
inc
popa
(bad)
push
mov
pop
inc
cmc
dec
jae
stos
inc
arpl
inc
outs
js
call
jo
ror
adc
stc
pop
in
sbb
push
push
clc
lods
adc
ins
and
test
sub
outs
xchg
loope
pop
test
es
add
jo
shl
cmp
stos
hlt
aas
sbb
or
jmp
xlat
repnz
repz
and
push
jae
sub
mov
jbe
and
add
cmp
ins
pop
fmul
fsubr
(bad)
in
out
cmps
enter
in
jne
(bad)
mov
pop
(bad)
mov
dec
out
pop
cmp
xchg
mov
xchg
frstor
mov
fwait
push
outs
aam
into
in
jecxz
push
and
mov
sahf
jbe
out
push
lods
pushf
imul
adc
jae
jo
into
jo
rcl
mov
into
sub
lea
int
sub
dec
inc
(bad)
mov
in
cmp
gs
adc
mov
jmp
xchg
add
sbb
loope
mov
dec
test
jno
lods
adc
lea
add
sbb
gs
mov
arpl
push
dec
and
or
and
xlat
push
cmc
outs
rcr
lods
adc
loop
xchg
imul
sub
mov
add
or
lahf
fs
and
jl
jmp
jmp
inc
dec
int3
pop
cmp
mov
out
fcom
div
inc
aaa
loop
push
call
xor
xchg
out
push
jl
pop
mov
enter
loope
test
mov
das
inc
inc
mov
fs
fst
pop
pop
pushf
inc
and
leave
out
or
xor
push
jns
nop
fcomp
rol
sub
lahf
(bad)
cs
loop
add
sub
push
(bad)
sar
aaa
shl
cmps
mov
sub
push
shr
in
shr
pop
clc
mov
dec
mov
out
inc
xchg
aad
std
jnp
jl
ins
pop
and
ja
cmp
(bad)
fs
sti
cmc
pop
leave
cmps
loopne
je
out
js
mov
int3
hlt
cmp
or
dec
sbb
gs
xor
or
int3
stc
dec
adc
mov
xchg
fucomi
adc
arpl
adc
jo
push
ret
jecxz
jnp
mov
repz
and
sbb
and
cmps
repnz
mov
inc
mov
inc
mov
neg
pop
add
push
mov
and
inc
push
gs
cs
xchg
cmp
out
inc
mov
pop
pop
pushf
and
dec
imul
and
and
jbe
fld
std
jecxz
mov
sub
in
into
push
cwde
push
je
fistp
mov
add
repz
jae
cwde
xor
push
out
popf
cdq
sub
(bad)
jmp
mov
fild
cmp
jne
push
in
or
add
adc
or
sub
jmp
add
arpl
and
outs
cld
test
cmp
pop
stos
adc
fwait
imul
out
push
cld
dec
popa
mov
stos
sti
pop
retf
jl
adc
and
and
lods
xor
xchg
add
scas
mov
fimul
pop
cs
loope
pop
in
mov
in
pop
shl
sbb
jno
or
push
sbb
adc
pop
repnz
push
in
push
xchg
mov
inc
push
jae
and
fidivr
int
shl
dec
xchg
(bad)
adc
adc
shr
jge
fidivr
into
lods
arpl
adc
pushf
mov
adc
mov
fs
jns
sub
push
cs
xchg
iret
iret
lods
or
xor
fidiv
adc
dec
cmp
adc
retf
mov
add
sub
retf
cmp
gs
(bad)
data16
repnz
pop
jb
test
mov
sahf
enter
pop
mov
mov
pop
push
ins
clc
shl
push
fisttp
sub
rol
pop
std
stos
mov
mov
(bad)
fwait
jne
loop
inc
pop
mov
retf
hlt
xchg
cmc
push
sbb
push
clc
add
call
stc
outs
push
inc
xchg
mov
push
dec
mov
cmps
mov
xor
push
stc
rcr
div
push
adc
ret
in
std
adc
les
and
pop
mov
cwde
lahf
sbb
push
bound
add
push
inc
inc
fs
xor
mov
out
iret
(bad)
or
add
hlt
and
inc
loop
cmp
sbb
adc
(bad)
cmc
in
push
shl
ds
sbb
cmps
pop
jle
jge
push
push
mov
fnstenv
jle
sahf
mov
call
cmp
mov
int3
in
es
jmp
adc
std
sub
inc
(bad)
jmp
sar
cmp
add
(bad)
scas
pop
add
mov
xor
dec
idiv
jmp
call
pop
arpl
(bad)
mov
sbb
hlt
aam
hlt
(bad)
xchg
dec
sub
jp
jmp
ins
mov
xchg
jmp
jne
fild
(bad)
mov
or
ja
jnp
scas
cmp
loopne
jp
push
pop
push
jb
cmc
xchg
outs
xor
lods
cmp
imul
ret
pop
jne
cmp
in
mov
jmp
nop
and
sub
cmp
je
movs
test
push
fldcw
daa
leave
xchg
jb
sub
repnz
cmc
or
out
xor
push
hlt
push
arpl
je
in
fs
jae
sti
pusha
pop
bound
push
mov
or
das
push
popa
xchg
jnp
in
mov
lods
xor
imul
jno
mov
int3
test
push
daa
and
(bad)
(bad)
scas
push
xchg
es
bound
sbb
loopne
scas
in
pop
je
ins
dec
mov
fidivr
js
ins
enter
movs
rcl
lods
xchg
sbb
aad
cwde
pop
jge
cmp
rol
retf
stos
mov
inc
nop
pop
out
sbb
jle
arpl
dec
inc
loope
pop
xchg
push
les
xchg
sbb
inc
bound
(bad)
in
inc
pop
mov
pop
je
jne
lods
mov
shl
inc
pop
call
mov
aad
push
xchg
mov
add
icebp
scas
and
push
mov
outs
pop
outs
lea
rol
mov
xchg
adc
lods
ret
dec
out
mov
jb
int
loope
sbb
sete
lods
loopne
imul
mov
ror
out
add
sub
push
dec
out
test
mov
cmp
shl
mov
and
ins
dec
mov
pop
fiadd
sub
push
mov
sub
mov
xor
jo
or
ret
aam
jns
data16
sbb
xchg
inc
cmp
dec
js
xchg
fsubr
and
cmp
mov
aas
xrelease
icebp
test
fsubr
outs
ins
add
loope
or
mov
fnsave
mov
and
and
out
div
repz
fwait
xor
pop
mov
sub
in
inc
pop
xchg
das
leave
(bad)
dec
push
nop
cld
adc
dec
das
jo
std
iret
nop
aad
mov
mov
mov
and
xor
inc
pusha
mov
mov
and
pop
mov
cmp
ins
add
sub
mov
shl
sub
xchg
gs
mov
push
aad
adc
mov
pop
push
inc
jb
cmp
ficom
(bad)
in
xchg
push
inc
ins
dec
(bad)
sbb
push
(bad)
push
(bad)
xor
sbb
hlt
mov
xchg
mov
aad
pop
call
push
cmp
loop
jmp
jb
pop
xchg
pop
div
in
xchg
inc
sbb
aam
leave
sub
scas
into
lods
jmp
sub
scas
jle
(bad)
mov
aam
pop
cmc
jb
cmc
sti
inc
inc
xchg
pop
mov
ins
add
test
push
sub
ins
clc
rcr
xchg
mov
mov
inc
adc
das
and
div
test
cli
shl
dec
mov
mov
stos
dec
popf
int3
mov
mov
test
mov
out
shl
aaa
jl
call
ficom
jle
lods
inc
adc
movs
xor
pushf
mul
inc
shl
push
test
clc
xor
es
in
psllq
ins
test
jecxz
ins
and
scas
retf
pushf
jg
inc
lea
xlat
cmp
mov
mov
nop
xchg
pop
push
call
fcomp
cli
daa
inc
inc
xor
push
movs
pop
add
push
arpl
mov
and
(bad)
aas
dec
xchg
xchg
sub
aad
gs
enter
ret
dec
hlt
stc
mov
bnd
and
dec
ss
(bad)
cli
ja
js
ins
cmps
(bad)
imul
mov
and
int3
pop
xlat
pusha
aas
shr
lods
or
test
loope
fisubr
clc
adc
and
cmc
pop
xor
dec
imul
push
push
push
cmp
push
dec
or
xor
and
sahf
sub
stos
mov
nop
push
iret
sbb
ret
mov
pop
into
dec
xchg
jo
or
dec
add
and
cs
(bad)
(bad)
popa
or
add
in
scas
mov
mov
or
push
clc
pop
xchg
pop
ret
xchg
sbb
or
shr
(bad)
jb
or
imul
call
clc
cmp
in
jnp
mov
in
leave
adc
mov
out
push
out
ret
ror
add
mov
adc
fcmove
ret
push
push
cmps
inc
fsubr
loop
cmps
sub
ret
jns
stos
and
stos
jbe
push
shl
cwde
icebp
shl
fwait
dec
or
sub
aad
jmp
dec
inc
xor
stos
inc
repnz
cmc
aad
ds
sbb
outs
and
daa
mov
cmc
jae
jg
pop
push
fld
out
adc
jnp
adc
dec
xchg
les
xchg
fs
retf
jge
jl
xor
add
pusha
xor
cdq
(bad)
sbb
ror
sbb
xor
sbb
xchg
addr16
jmp
xchg
mov
mov
fmul
cmps
mov
sbb
adc
push
mov
jns
cmp
mov
mov
movs
stc
fs
mov
push
jae
repnz
iret
addr16
into
dec
add
aas
mov
clc
retf
mov
pushf
xchg
cwde
xchg
xchg
dec
cmp
mov
cli
es
movs
sub
mov
dec
pop
scas
add
sub
hlt
dec
pop
push
rcr
or
cmc
ficom
(bad)
es
mov
lahf
mov
jge
pop
add
dec
je
pop
test
jl
in
stos
or
add
push
lods
lahf
loope
mov
ins
test
dec
hlt
mov
sub
cmc
mov
jno
fisub
(bad)
pop
rol
sbb
dec
push
push
push
lea
shl
and
jo
jae
addr16
pop
push
sub
fidivr
sub
push
sbb
cmp
dec
pop
(bad)
cld
imul
ja
loopne
add
mov
xbegin
fist
push
in
jnp
daa
ror
push
push
fs
dec
icebp
xor
pop
jae
or
adc
push
fcmovb
mov
push
fist
ss
and
jbe
cmp
lods
rcl
cli
gs
xlat
test
retf
mov
imul
test
popa
clc
mov
inc
cdq
in
jg
mov
out
loope
xchg
fisttp
cmp
lods
jno
aaa
push
clc
sub
je
jmp
inc
mov
inc
cmp
call
ja
das
jb
jae
icebp
and
or
fcomp
cwde
stos
loopne
fs
(bad)
xor
sbb
stc
neg
vmovaps
mov
rcr
xor
shl
sub
pop
sbb
adc
shr
xlat
adc
pop
shr
xchg
lahf
sbb
into
mov
int3
xor
std
(bad)
aad
mov
fadd
les
and
push
xchg
test
sbb
sbb
push
adc
adc
js
mov
or
adc
iret
scas
lahf
mov
jmp
sub
int
popf
sub
test
xlat
inc
es
jbe
(bad)
and
xchg
push
dec
cmp
sub
cmp
push
dec
test
mov
ret
ss
sti
mov
jo
xchg
jecxz
and
adc
dec
iret
retf
mov
xor
sbb
test
sbb
test
ss
cld
mov
xchg
jae
pop
ret
sub
(bad)
and
push
xor
loopne
test
mov
jmp
int
xchg
lods
push
not
mov
out
scas
mov
scas
push
xor
pop
enter
shl
and
fwait
adc
jae
std
nop
inc
pop
push
ss
cmp
sub
jecxz
sar
pop
mov
aad
mov
iret
aaa
jno
jge
cmp
mov
or
adc
mul
ins
repz
mov
adc
mov
cwde
pushf
pop
sub
sahf
jl
jbe
inc
aam
adc
mov
cs
and
(bad)
push
pop
ret
out
cmp
scas
jecxz
int3
or
pushf
mov
or
cld
(bad)
outs
dec
sub
xchg
sbb
aaa
sbb
and
xor
fsub
push
arpl
mov
popa
fnstsw
jnp
xor
shl
and
cmps
mov
or
out
dec
push
mov
sbb
pop
ins
imul
mov
movs
push
pop
femms
and
inc
imul
jmp
int
rcr
movs
xor
(bad)
lea
adc
xor
adc
icebp
mov
call
push
call
popf
push
sahf
and
jbe
push
cli
and
(bad)
call
rcl
xor
rcl
xchg
rcr
inc
arpl
cli
lods
pusha
jl
add
cli
(bad)
and
(bad)
psraw
dec
addr16
jle
ins
ins
sub
add
sbb
hlt
adc
jo
cmp
clc
ficom
arpl
xor
pop
neg
mov
ja
hlt
mov
xchg
adc
fisub
pop
into
dec
cmp
or
jns
push
ins
xlat
(bad)
repnz
fist
(bad)
std
call
xchg
loopne
mov
movs
mov
or
ins
div
imul
adc
jnp
lock
cmp
mov
(bad)
into
mov
or
push
(bad)
loope
call
lock
popf
bswap
addr16
pop
adc
and
daa
cli
fistp
movs
sbb
sar
(bad)
push
push
xchg
xor
xor
jmp
fstp
sub
pop
ss
data16
mov
in
popa
mov
dec
pushf
add
stos
mov
in
xor
dec
mov
push
sbb
mov
sbb
and
out
jno
or
cdq
xchg
aad
mov
das
cmp
test
js
pop
ds
sub
or
lea
jmp
add
clc
inc
mov
push
loop
leave
loop
and
mov
mov
popa
sbb
mul
fisub
push
jecxz
or
mov
xchg
cdq
jecxz
xor
add
mov
(bad)
jno
iret
cdq
pop
adc
test
js
ret
inc
pop
mov
add
cmps
fnstcw
lods
jmp
and
and
sub
add
int
inc
and
push
jecxz
clc
and
mov
cwde
nop
or
mov
ds
sbb
aam
adc
std
inc
popf
mov
dec
ja
sub
sbb
mov
(bad)
jl
retf
cmp
sub
mov
ja
lds
scas
mov
pushf
ja
cwde
add
into
es
out
add
in
jp
and
addr16
sub
mov
sub
leave
aas
aam
mov
ins
icebp
jae
and
adc
jg
add
mov
add
jae
data16
xor
or
jecxz
sub
push
int
xchg
icebp
in
js
pop
loope
push
xchg
cmp
call
into
mov
repnz
push
lock
lods
mov
mov
pop
(bad)
cmps
sub
pop
add
in
inc
shl
sbb
mov
sub
not
sub
dec
fisttp
jg
mov
add
jge
inc
ret
push
jmp
rcr
dec
pusha
sub
jecxz
popa
loopne
adc
loopne
test
push
push
push
and
dec
xchg
stos
aam
lods
jo
sub
push
sub
sbb
aaa
and
loopne
dec
std
cmc
loop
fbld
sbb
mov
pop
cmp
xchg
fcmovne
not
pop
paddusw
sub
xor
and
test
jae
mov
imul
(bad)
push
imul
pop
pop
sub
lahf
xor
mov
leave
cmp
push
ret
mov
or
pop
sbb
mov
test
add
sbb
mov
stc
mov
adc
xchg
mov
std
sub
push
add
push
or
mov
mov
sar
push
loop
jnp
data16
ret
std
dec
pushf
jno
ret
not
xchg
xchg
inc
sbb
nop
or
test
push
arpl
mov
loop
mov
mov
(bad)
xor
add
jmp
cmp
leave
ficomp
aaa
adc
dec
push
std
ja
cld
icebp
imul
dec
sbb
shl
cwde
mov
les
(bad)
mov
call
jno
aaa
repz
psadbw
mov
mov
leave
or
cmp
data16
cmp
mov
adc
adc
repnz
push
xor
add
cwde
fdivr
sub
pop
les
popf
outs
repnz
test
mov
out
mov
pop
mov
xor
jg
ss
lods
repnz
retf
sbb
sub
gs
cdq
pop
xor
mov
jbe
cmp
cmc
arpl
adc
sahf
sub
lock
and
sub
data16
arpl
cmp
std
scas
mov
add
stos
loope
fild
push
mov
cmp
into
and
adc
sub
mov
sbb
repz
les
jmp
xchg
push
cdq
cmp
fwait
mov
jle
jecxz
ins
xchg
lock
fld
xchg
jbe
int
dec
add
fstp
adc
jne
sbb
fld
test
dec
sbb
dec
retf
call
xlat
retf
jbe
pop
dec
adc
lds
stos
ja
es
or
aaa
mov
ret
rol
shl
jge
cld
jmp
popa
dec
pop
fnstcw
stos
jmp
and
add
pop
add
jmp
mov
xchg
cli
ret
jl
dec
fild
jne
mov
rcl
add
test
js
retf
or
les
sub
xor
fwait
and
add
xchg
adc
or
jbe
fistp
repnz
lods
xchg
pop
and
and
jl
repnz
inc
and
aas
sbb
pop
jp
push
push
add
xor
je
inc
adc
gs
xchg
xchg
cmp
rol
test
bound
(bad)
pop
iret
add
sbb
ins
pop
fadd
push
xchg
ret
stos
sub
cmp
clc
mov
add
test
pop
xchg
pop
shr
push
sub
pop
paddsw
mov
jecxz
imul
sbb
cmp
das
jae
cmc
xchg
out
xchg
sbb
inc
fmul
add
mov
mov
xchg
jge
xchg
add
test
movs
cmp
into
jne
lds
(bad)
inc
push
fmul
dec
adc
movs
sbb
enter
cmps
jae
add
mov
int3
ror
pop
mov
leave
or
mov
ss
int3
gs
dec
mov
xor
cmp
aam
icebp
cmp
test
mov
mov
js
imul
sub
xor
dec
sub
sbb
cmp
cmp
jae
push
ins
xor
cmps
shl
xchg
fist
adc
(bad)
xor
fwait
sti
mov
mov
lods
iret
mov
mov
in
imul
dec
ror
inc
add
mov
jo
adc
jmp
push
xchg
jo
cmp
fucomip
cmp
out
pop
int
pop
cs
jle
push
add
xchg
mov
cdq
and
jg
xchg
loopne
cld
push
call
fst
cmc
pop
pop
xor
mov
push
push
popf
mov
pop
js
pop
in
sub
call
xchg
nop
mov
mov
and
jg
xor
rcr
in
mov
xor
dec
jp
jl
pop
adc
push
inc
sub
imul
dec
cld
imul
fwait
mov
je
xchg
jns
sub
loop
dec
loope
jns
out
xchg
popf
and
jb
dec
retf
mov
mov
pop
in
xchg
test
lock
mov
fisttp
shl
mov
adc
push
call
xlat
cmp
mov
mov
je
add
jae
push
mov
xchg
imul
loopne
adc
retf
jl
sar
mov
jge
adc
ins
call
and
lods
lahf
or
xchg
popa
in
cdq
mov
cmc
aad
addr16
xchg
pushf
cmp
dec
pop
int3
dec
inc
out
inc
push
movs
cdq
bswap
push
add
shl
in
push
xlat
sbb
mov
add
jb
add
mov
and
or
cmp
adc
dec
movs
mov
scas
sub
jle
gs
jmp
pusha
jl
inc
mov
fdivr
push
shl
pop
push
xor
fwait
jo
std
scas
xchg
jmp
and
cmp
dec
xchg
in
mov
out
sbb
or
mov
push
mov
pushf
outs
rcl
or
fbld
xlat
sar
sbb
ret
or
retf
mov
int
test
lods
cwde
jle
stc
push
sbb
cdq
cwde
cs
add
retf
(bad)
out
add
arpl
lds
and
and
push
frstor
jle
sbb
mov
and
xchg
inc
js
movs
sbb
sbb
and
stos
fimul
pop
sub
mov
sbb
pop
sub
sub
ja
pop
push
gs
xchg
lds
sub
repnz
pop
or
hlt
dec
mov
icebp
(bad)
dec
cs
xchg
ins
(bad)
retf
and
inc
jecxz
das
and
mov
push
lods
mov
cmp
sahf
out
mov
mov
or
into
outs
lock
adc
cmp
scas
mov
push
ds
dec
fild
aam
cld
xor
mov
cmps
nop
test
test
jg
fbstp
jnp
daa
cli
(bad)
xchg
jmp
shl
arpl
xchg
out
pop
push
outs
inc
mov
adc
push
js
stos
bound
dec
and
jb
dec
jl
scas
fimul
push
mov
js
sbb
in
adc
sub
in
mov
stos
lods
stos
inc
mov
dec
cmp
cmp
pop
inc
out
cmps
sbb
mov
push
mov
iret
dec
xor
(bad)
repnz
adc
pop
bound
mov
ja
enter
xchg
sub
xchg
cmps
jmp
test
frstor
ins
mov
or
push
retf
add
push
popa
xor
jne
push
shr
stos
(bad)
not
jl
clc
or
icebp
mov
dec
dec
out
jmp
scas
jbe
pop
ja
sub
and
fwait
out
jno
int
add
xchg
or
cvttps2pi
or
or
xchg
das
inc
sub
dec
test
push
mov
jp
test
mov
push
or
jge
push
xor
jmp
clc
outs
jo
inc
pop
jg
bound
fsubr
aaa
addr16
or
sub
pop
in
sub
jle
nop
xor
push
mov
mov
daa
mov
loopne
es
in
and
cmps
jae
mov
jnp
std
ds
mov
popf
jns
loop
cld
or
scas
xchg
pop
mov
adc
jb
aam
stos
es
pusha
retf
mov
psubb
fwait
push
push
or
jmp
stos
sub
aas
mov
or
pop
push
cmc
mov
xchg
pusha
fistp
mov
cmp
test
in
pop
vunpcklps
cwde
test
push
jns
pop
xor
daa
imul
xor
and
mov
fdiv
sbb
mov
fisubr
dec
jl
aad
sbb
mov
inc
sub
pop
int3
xor
int
std
dec
popf
ret
push
in
fs
add
leave
or
push
movs
xor
xor
das
xchg
test
lods
xchg
test
(bad)
cmp
je
xor
rcr
dec
jmp
imul
xor
sahf
sbb
xchg
ficomp
mov
inc
ror
int3
adc
jg
lods
push
xor
xchg
out
inc
cmp
push
mov
xchg
cwde
jg
aas
sbb
dec
sub
jle
int3
mov
or
out
xlat
arpl
adc
push
cld
int3
cmp
xchg
(bad)
jno
test
pop
adc
lods
test
dec
or
cmp
and
fsub
pop
sbb
mov
(bad)
or
rcr
and
mov
jno
(bad)
and
xor
add
mov
dec
ret
or
dec
loope
xor
pusha
inc
pop
cmp
mov
int
gs
xchg
cmp
rcr
cmp
lods
add
mov
mov
je
jbe
stos
push
add
repz
sub
cli
and
xchg
in
mov
xchg
stos
xor
pop
retf
in
into
jmp
aas
retf
int3
leave
sub
fcmove
and
pop
mov
pop
add
into
jb
repz
fsubr
jb
cs
pop
dec
jnp
mov
ror
mov
(bad)
sbb
aam
mov
add
push
mov
test
scas
lea
int3
fld
cmps
ror
mov
aas
movs
xor
in
lods
jnp
push
adc
mov
push
dec
push
or
leave
adc
mov
shl
xchg
movs
mov
mov
rcr
setle
leave
dec
dec
push
jle
cmp
movs
stos
jb
lock
jmp
daa
sub
ret
xor
jns
ret
cs
not
lahf
cmp
jno
repnz
mov
xchg
fdivp
outs
lea
jae
xchg
xlat
push
xchg
push
cmps
imul
or
add
fsub
jmp
or
in
dec
jg
test
ds
jl
(bad)
fsubr
add
pusha
bound
xor
cld
jp
fimul
mov
loop
xor
and
push
mov
jae
inc
xchg
sti
scas
shr
sti
(bad)
out
mov
xchg
sar
lods
ins
add
fld
test
cmc
xor
add
mov
lea
dec
xchg
sub
(bad)
cmp
(bad)
add
cmp
mov
pushf
jge
shl
jae
sbb
or
and
push
rcr
pusha
cmps
and
stos
push
push
mov
jae
mov
jg
call
test
into
jmp
mov
mov
inc
aad
push
nop
sti
fwait
sub
add
shl
xchg
js
xchg
mov
imul
sahf
cmp
push
ss
aaa
retf
pop
aaa
dec
dec
rcr
mov
mov
mov
bound
xor
or
xacquire
lds
nop
loopne
mov
jmp
push
dec
pop
xor
rcr
imul
inc
call
or
repnz
sub
mov
adc
in
sahf
sub
fwait
lock
inc
addr16
ins
into
ret
xchg
aas
mov
mov
popf
icebp
sub
movs
mov
fst
shr
mov
cmc
cmc
sbb
mov
sti
xor
dec
scas
cmp
inc
fild
push
out
jne
sub
js
das
jg
sub
in
in
jmp
or
int
dec
mov
cmp
push
add
aad
or
cmp
std
movs
mov
hlt
fistp
xchg
jp
pop
in
call
hlt
sbb
int
retf
xor
ret
dec
push
xchg
jb
imul
addr16
enter
pop
xor
push
ret
nop
sti
fucomi
push
mov
xor
outs
ret
not
scas
add
clc
ja
mov
rol
sbb
sbb
mov
sbb
fwait
mov
sbb
fsub
jp
pusha
mov
add
jmp
in
(bad)
mov
test
scas
xor
addr16
xor
or
cdq
xchg
arpl
movs
pushf
fidiv
xchg
sbb
sub
sub
xor
inc
iret
aas
xchg
movs
scas
(bad)
not
adc
jbe
(bad)
es
movs
ss
setae
or
scas
inc
push
retf
mov
outs
call
and
inc
(bad)
adc
stos
jne
fld
cs
xlat
inc
jb
cmps
jp
push
pop
jo
pusha
jg
rcr
and
icebp
int
movs
dec
and
(bad)
jmp
fist
pop
dec
ss
out
jmp
cmp
xchg
nop
sub
pop
or
xchg
xchg
aam
fcomp
cmp
mov
pop
test
or
setb
sbb
jnp
mov
enter
hlt
pop
(bad)
inc
jmp
jl
das
test
inc
push
rol
cld
test
outs
xor
arpl
les
cmc
lea
loope
sahf
cmc
lods
ja
aas
push
enter
(bad)
imul
dec
or
daa
push
dec
rcr
or
fwait
fs
sbb
loop
xor
mov
sub
ja
lods
pop
dec
xchg
xchg
push
pushf
aaa
int3
call
mov
add
lea
pop
dec
fld
mov
or
test
mul
das
jae
adc
das
or
xchg
(bad)
jb
aad
pop
inc
or
shl
outs
gs
lods
xchg
dec
(bad)
push
ficomp
lahf
sbb
test
in
mov
mov
fcomp
or
in
cmp
cmp
inc
xchg
lea
mov
test
cmp
add
dec
jnp
retf
idiv
popa
dec
mov
outs
xchg
pop
retf
inc
sbb
ins
in
jp
(bad)
inc
fs
fld
sbb
or
ret
adc
icebp
jnp
ret
mov
push
pop
inc
ds
pop
cmp
mov
xlat
ja
nop
mov
pop
repnz
push
bound
stos
cmp
push
sahf
cwde
adc
xchg
push
inc
adc
pop
mov
xchg
(bad)
loop
mov
mov
push
ds
jmp
sbb
mov
dec
in
mov
mov
(bad)
mov
mov
cdq
les
ret
nop
sbb
pop
dec
retf
jg
cmp
add
pushf
int3
dec
push
sbb
(bad)
pop
(bad)
and
scas
dec
pop
sbb
cmp
mov
inc
inc
arpl
cmp
nop
in
sti
outs
out
push
cmp
fisub
jno
or
jmp
cmps
add
ret
ss
js
pop
test
retf
dec
out
jp
imul
repnz
pusha
popf
dec
pushf
adc
iret
lds
clc
mov
mov
icebp
mov
ret
mov
push
int
int3
add
mov
push
add
or
sub
leave
mov
cmp
adc
push
xor
call
leave
int
cmp
sub
adc
clc
repz
shr
jb
stos
add
pop
mov
scas
or
movs
retf
hlt
and
js
call
psrad
dec
(bad)
push
(bad)
enter
inc
retf
xor
aas
into
adc
and
out
lods
add
test
mov
rcl
iret
in
push
pop
push
jle
mov
mov
cmc
adc
or
sbb
out
in
adc
fst
outs
xor
fld
fs
fild
in
jo
arpl
sbb
mov
bound
jle
repz
leave
xchg
mov
mov
sub
and
imul
mov
movs
lods
xor
fdiv
retf
std
test
push
or
out
fld
sub
cmp
in
aaa
shr
cmps
dec
mov
scas
jb
lds
fmul
mov
add
fbld
push
pop
cmp
cmc
ins
xchg
mov
add
mov
in
mov
(bad)
inc
pop
push
sahf
mul
sbb
retf
cs
cdq
push
mov
mov
lods
sub
xor
sbb
fdivrp
cmp
mov
je
push
mov
arpl
fwait
(bad)
fisttp
pop
(bad)
lea
cmp
mov
lods
jle
push
cmp
or
jne
or
mov
cmp
mov
jae
cmp
int
std
dec
mov
stos
add
dec
pop
and
adc
fidiv
jp
mov
jg
push
mov
lods
cmp
loope
push
adc
and
dec
std
lods
loopne
cmp
push
fwait
cmp
inc
(bad)
shl
adc
push
inc
and
ud2
sbb
test
int
lock
and
movs
mov
fdivr
jnp
jb
or
pop
mov
nop
cmps
pop
or
mov
mov
jle
or
mov
test
pop
jae
imul
loope
inc
shl
in
and
push
jmp
call
mov
js
test
sbb
or
push
pminsw
shr
jp
and
mov
sbb
fimul
test
jp
pop
sub
daa
icebp
out
push
mov
ror
and
pop
in
xor
aam
push
call
jo
adc
mov
js
inc
inc
mov
jne
stos
dec
ja
cmps
(bad)
jno
or
pop
rep
mov
push
sub
sbb
cdq
les
scas
movs
cld
push
in
movs
sbb
rcl
in
cdq
xchg
and
call
or
or
jp
inc
ror
jmp
loope
repz
mov
fsubp
lea
leave
pop
sub
cmp
bound
mov
mov
pushf
test
sub
lods
data16
adc
jnp
inc
dec
dec
or
aaa
mov
(bad)
and
rcr
enter
fwait
mov
or
pop
jo
loop
inc
or
pop
jecxz
sbb
pop
dec
loope
loop
dec
push
gs
sar
test
aaa
aad
jg
mov
xchg
or
arpl
sar
(bad)
adc
jle
add
je
push
loopne
aaa
adc
icebp
jecxz
nop
jp
dec
dec
mov
movs
popa
mov
je
mov
jmp
int3
sub
fs
leave
mov
pop
adc
pop
test
repnz
jp
mov
lahf
mov
mov
stc
add
mov
cmp
dec
fnstenv
adc
mov
adc
hlt
mov
outs
aam
or
pop
cmc
inc
test
push
dec
dec
add
mov
cdq
push
push
js
sbb
(bad)
cmp
xchg
push
cmps
pop
cmc
or
aas
(bad)
repnz
fwait
dec
xchg
jbe
mov
xor
lods
mov
inc
test
adc
loope
test
fisubr
sub
sub
dec
push
xor
in
cli
push
cmc
and
and
mov
mov
hlt
pop
add
and
cwde
cmps
add
aad
sbb
lfs
dec
inc
xchg
xor
xchg
cli
outs
adc
dec
and
lock
mov
icebp
iret
push
cmp
xor
pop
je
outs
popa
popa
or
lds
pusha
jp
lea
mov
xchg
push
jae
sub
aas
lods
mov
lahf
fst
push
jp
stos
sub
leave
sub
rol
push
jmp
add
lods
ds
rol
fwait
pusha
xchg
push
popf
add
fsubr
fldcw
jp
out
mov
scas
stos
cmp
and
or
stc
jmp
mov
das
aas
rcl
sub
adc
repnz
inc
call
retf
pop
xchg
in
sbb
add
bound
imul
cdq
pop
int3
pop
push
inc
mov
retf
mov
es
xchg
xlat
push
data16
cmps
push
jns
sti
(bad)
mov
jl
sub
das
cmp
pop
in
leave
adc
push
jecxz
xor
das
pushf
iret
add
arpl
bound
rcl
out
inc
lea
jle
cmps
xchg
call
cdq
inc
adc
cmp
loopne
sbb
aaa
sbb
lea
pushf
in
rcl
repz
js
jge
pop
pusha
mov
in
imul
cmp
dec
leave
mov
sahf
xchg
inc
mov
pop
push
imul
cmc
mov
rcl
sbb
jl
or
repz
mov
push
in
xor
adc
dec
adc
xchg
add
icebp
jl
jge
and
sub
inc
(bad)
sub
(bad)
(bad)
pop
or
ins
pushf
mov
xor
loope
repnz
push
adc
imul
mov
add
adc
sub
(bad)
pop
ja
xor
dec
inc
and
cmps
iret
lock
add
mov
ret
lahf
idiv
push
push
mov
lods
pop
mov
mov
loopne
sar
mov
jle
lods
dec
jne
mov
aad
data16
sub
lds
or
or
jl
inc
and
cs
cwde
adc
lds
movs
inc
fdiv
sahf
xchg
cmc
push
xor
gs
mov
cmp
sbb
cmp
push
test
stos
aas
jae
add
adc
inc
shr
bound
jmp
pop
cld
sub
iret
jg
inc
and
(bad)
mov
fisttp
adc
arpl
xchg
movs
inc
and
rcl
imul
imul
jl
arpl
xchg
das
vmovhpd
mov
and
nop
imul
cmp
aam
ss
dec
jno
mov
psubq
jae
add
popa
enter
add
shl
add
jnp
int3
or
adc
jno
int3
ret
jne
sbb
leave
popa
jl
mov
mov
and
(bad)
call
xor
dec
stos
rcr
test
loop
fwait
sti
aad
add
xchg
inc
pop
push
nop
jno
das
adc
in
lds
lods
and
xchg
xor
xchg
pop
pop
mov
(bad)
sbb
bnd
sub
jno
jmp
mov
pop
mov
push
xor
fs
push
jp
cmp
xor
inc
mov
add
mov
push
push
mov
fisubr
(bad)
aaa
jge
push
cmp
(bad)
push
call
xacquire
push
push
or
or
jmp
sub
push
int3
ss
mov
int3
and
pop
(bad)
jnp
lods
mov
cmp
jns
gs
ins
dec
(bad)
in
pushf
enter
retf
popf
add
or
pop
xchg
or
sahf
mul
inc
mov
or
movs
loope
cld
add
inc
xlat
mov
lods
je
shr
xchg
into
push
outs
popa
lods
dec
out
dec
mov
sbb
cmp
(bad)
retf
inc
sub
or
xchg
mov
push
test
test
lods
mov
jno
push
jle
and
add
xchg
push
push
adc
ret
loop
movs
loopne
lea
mov
outs
xchg
dec
cmc
push
pop
(bad)
inc
test
pusha
lods
popf
xchg
push
mov
fs
inc
shl
lds
call
push
inc
cmp
or
jno
add
sub
ins
retf
adc
pop
mov
push
jnp
data16
shl
xor
or
jge
add
jb
rol
sub
cmp
std
sbb
and
jnp
ds
jmp
bound
fdivr
sbb
add
leave
add
pop
cld
adc
xchg
std
pop
pushf
(bad)
mov
pop
mov
cld
jns
outs
ror
and
ins
int3
jge
jmp
mov
xchg
pop
xlat
ins
and
popf
xchg
fwait
xchg
dec
dec
fcomp
shl
ds
cs
xchg
in
test
mov
sahf
push
dec
fild
mov
sub
adc
and
mov
dec
stos
into
pop
retf
pop
mov
lea
mov
push
sbb
fxtract
aad
add
adc
adc
pushf
dec
loope
jecxz
xor
enter
fs
js
(bad)
sbb
dec
lock
fs
icebp
xchg
fimul
ja
popf
push
push
sbb
mov
cmp
mov
cmp
adc
icebp
jle
gs
lds
adc
mov
lds
inc
jmp
call
leave
enter
pop
mov
outs
inc
inc
jnp
sbb
in
add
or
inc
mov
cmp
push
xchg
and
out
js
push
adc
sub
or
cmps
pusha
loopne
retf
xchg
xchg
adc
out
jns
in
ins
add
cmp
mov
aam
cmc
loopne
popf
sbb
xchg
fnstenv
mov
sbb
push
xchg
stos
jmp
popf
pop
js
jb
adc
test
clc
or
aas
cmp
xchg
popa
push
pop
rol
in
jno
fidiv
or
das
fcom
lea
inc
or
lahf
or
movs
cmp
aam
jae
(bad)
enter
js
int
adc
push
push
inc
adc
push
mov
jmp
inc
ds
sbb
not
cs
push
xchg
mov
add
inc
out
es
mov
outs
in
jecxz
movs
pop
sbb
pop
push
xchg
jmp
(bad)
cmp
xor
gs
shl
sahf
pop
adc
or
pop
fimul
(bad)
cld
pop
mov
popf
and
dec
mov
sub
xlat
xchg
push
xor
inc
xchg
div
jg
test
xor
add
aas
push
xchg
sub
in
sbb
sub
loopne
and
test
outs
mov
dec
push
div
fisubr
popf
data16
inc
mov
push
xchg
shr
(bad)
xor
mov
xor
pop
scas
sub
imul
scas
cmp
leave
pushf
shl
xchg
daa
jge
inc
mov
jecxz
neg
and
data16
mov
or
cmp
push
push
inc
sub
xor
jbe
rcl
adc
ins
es
push
ss
pop
jge
xlat
push
mov
push
pop
imul
dec
clc
or
xchg
dec
aas
enter
xchg
neg
shr
pop
popf
ficom
(bad)
pop
jmp
jge
call
cmp
and
or
movs
rcr
lock
shl
aas
sub
mov
es
fild
inc
mov
add
jecxz
pop
xchg
adc
dec
sti
int
sbb
xchg
mov
jnp
sub
mov
xchg
rcl
mov
sbb
repnz
popf
mov
mov
hlt
arpl
cmp
push
sbb
outs
out
dec
mov
inc
retf
mov
and
cmp
cmp
mov
cmp
pop
outs
bound
dec
jle
scas
sbb
sub
das
inc
jl
retf
add
mov
jno
and
push
in
jb
pop
jae
pushf
mov
pop
stos
pop
inc
mov
popf
mov
pop
hlt
mov
lock
pop
pop
enter
mov
jp
data16
cmp
hlt
push
jo
(bad)
hlt
sbb
clc
lock
bnd
sbb
iret
arpl
jp
out
fmul
inc
sub
sti
push
cmps
movs
mov
xor
mov
xor
scas
ds
jnp
pop
pop
sbb
lock
adc
jp
dec
movs
and
add
popf
jp
aad
adc
scas
add
mov
push
jge
in
int
add
fidivr
jle
fcomp
xor
cmp
jno
cmp
movs
pusha
cmp
mov
cmp
mov
cmp
mov
sub
pop
in
ret
test
push
mov
mov
cli
add
adc
xor
popa
inc
push
leave
add
jge
push
mov
outs
inc
inc
out
ds
fisttp
mov
pop
div
scas
in
inc
lods
fistp
inc
inc
call
push
add
scas
scas
mov
div
das
pop
stc
xor
aam
push
arpl
jp
loope
bound
sahf
or
jb
jmp
push
out
cs
retf
push
push
dec
xchg
ret
(bad)
lods
xor
add
test
mov
push
xchg
pop
scas
jecxz
(bad)
(bad)
in
sub
cdq
xor
push
mov
lds
sti
(bad)
je
ins
pop
and
int
nop
in
mov
xlat
(bad)
pop
mov
sub
call
push
(bad)
jmp
push
sub
adc
jno
ins
xor
mov
js
jb
clc
or
sub
out
mov
ins
inc
lea
mov
repz
mov
inc
loop
jl
xchg
inc
sbb
repnz
and
cmp
sbb
sbb
fldenv
lods
pop
push
test
or
(bad)
fidivr
push
push
ss
cdq
cmp
sub
retf
cmp
jmp
add
arpl
pop
pop
add
dec
int
mov
dec
js
shl
jnp
(bad)
loope
add
add
into
and
(bad)
out
xor
jp
clc
repz
xchg
shl
jo
sar
sahf
daa
shr
mov
inc
mov
mov
stc
dec
cmp
lahf
aam
jle
pop
std
jae
mov
sbb
cs
mov
mov
jnp
sub
aaa
pusha
lods
inc
ror
std
shr
or
int
(bad)
mov
cs
bound
add
int
mov
sahf
cmp
mov
mov
out
xchg
xor
aad
pop
call
outs
pop
mov
(bad)
xor
adc
xchg
xchg
ins
mov
adc
daa
push
push
in
lds
std
sbb
lea
ja
mov
shr
jo
fld
repz
adc
xchg
lock
push
hlt
in
retf
or
and
inc
push
pop
adc
adc
into
dec
in
aam
inc
cmp
popf
ds
mov
adc
sbb
sti
lock
cwde
ss
fcmovnbe
imul
sbb
xor
test
out
in
pop
pop
addr16
std
cdq
aam
hlt
adc
gs
pop
push
cmp
and
sbb
arpl
ins
sbb
jle
pop
sbb
sub
jno
ds
inc
stc
sub
mov
inc
cmps
test
cmp
inc
jb
gs
imul
jmp
or
and
mov
dec
int3
addr16
and
adc
pop
imul
lea
je
aas
xor
dec
dec
cwde
mov
sbb
or
sbb
dec
stos
mov
lock
or
xor
jo
je
and
pop
pushf
jle
adc
push
cmps
cld
retf
push
xchg
sub
adc
inc
lds
dec
dec
shr
test
nop
jge
std
mov
and
mov
sar
mov
xlat
sub
pop
dec
or
push
cdq
arpl
push
mov
sti
inc
enter
(bad)
retf
jns
arpl
cmp
addr16
(bad)
aam
pop
jge
mov
or
cmps
mov
fst
pop
push
in
dec
mov
sbb
sti
cmp
gs
cli
mov
adc
leave
movs
out
cdq
mov
test
mov
jae
jne
fld
aam
dec
inc
(bad)
and
mov
inc
dec
popf
xor
cmp
xchg
repnz
xchg
scas
scas
mov
inc
mov
cmps
outs
les
mov
or
mov
imul
xchg
imul
mov
mov
and
dec
adc
retf
inc
mov
add
mov
cmps
rol
push
mov
or
lods
cmps
xchg
test
inc
je
mov
inc
or
pop
and
cmp
jbe
mov
sbb
ret
xlat
xchg
sbb
and
arpl
mov
jmp
in
mov
arpl
enter
into
in
inc
lar
mov
sub
test
cmp
out
call
xor
mov
(bad)
mov
jo
(bad)
ret
popa
sahf
sub
int
or
jno
push
outs
xor
cmc
loope
pop
adc
test
cli
hlt
ret
popa
cwde
in
mov
cmp
jmp
mov
ja
or
and
lods
stos
(bad)
cli
mov
loop
imul
jge
addr16
xchg
scas
xlat
xchg
cli
sub
xchg
xor
scas
jne
xchg
push
dec
pop
fdiv
ret
scas
mov
jae
xchg
push
inc
popa
test
xchg
stos
push
(bad)
stos
fucomip
fdivr
mov
pop
and
sbb
test
mov
mov
lock
dec
fcmovnb
aas
fcomp
mov
jle
inc
pop
loope
iret
sbb
repnz
jo
outs
repnz
pop
shr
rcl
add
adc
sub
jecxz
in
stc
mov
adc
mov
arpl
pop
es
add
cwde
or
xor
test
out
loope
pop
and
adc
mov
mov
mov
sti
pop
mov
inc
mov
cmps
inc
aad
mov
adc
sub
int3
out
pop
inc
shl
aaa
(bad)
inc
into
pop
fs
outs
mov
mov
dec
sbb
mov
div
and
push
shl
push
scas
mov
xor
push
pushf
or
pop
pop
sbb
sub
movs
ds
clc
push
neg
mov
ins
inc
pop
mov
or
or
sub
imul
jle
inc
aad
inc
cli
stc
clc
ins
daa
test
mov
test
in
jns
jne
fisubr
push
mov
hlt
jo
scas
test
(bad)
and
inc
pop
pop
test
sbb
sub
jne
(bad)
mov
adc
mov
test
arpl
lea
jl
shl
cmp
jo
mov
test
mov
cmp
mov
clc
arpl
nop
loopne
aad
inc
pop
inc
sbb
shl
xor
or
pop
and
out
fsubr
mov
adc
push
les
cdq
daa
hlt
jge
mov
cld
pushf
popa
loop
aaa
aaa
add
data16
jb
icebp
inc
repz
inc
and
mov
hlt
mov
xor
mov
add
jg
mov
sub
fistp
xchg
dec
push
lods
inc
xchg
mov
test
mov
and
cmps
aas
push
jns
aas
iret
icebp
es
jae
jnp
push
add
or
sbb
daa
fimul
dec
test
retf
movs
lea
lahf
push
fcmovb
inc
dec
xor
mov
sub
mov
or
fs
add
sbb
mov
icebp
rcr
xor
add
jbe
les
xor
imul
sahf
loopne
ror
sbb
out
in
mov
adc
add
sub
xor
adc
cdq
jb
jmp
jl
out
mov
fstp
fisubr
jle
lahf
es
dec
lea
mov
div
out
lods
fwait
add
push
inc
sbb
(bad)
data16
pop
pop
xchg
adc
push
and
ss
mov
scas
jno
xor
loop
jmp
(bad)
push
inc
outs
cmp
inc
int
dec
stos
mov
lahf
push
sub
mov
push
push
enter
push
sbb
and
xor
and
sub
pushf
mov
mov
mov
cli
idiv
cmc
fisttp
jno
sbb
rcr
jl
xchg
sbb
push
int3
cmp
push
ja
or
cmps
ins
pusha
mov
xor
inc
inc
cdq
and
xchg
lahf
(bad)
call
jecxz
pushf
sti
retf
test
xchg
ret
mov
aad
(bad)
push
cmp
pop
cmp
lock
outs
push
mov
scas
test
xchg
loopne
repnz
sub
mov
lods
out
stos
or
in
aam
mov
js
xchg
sbb
loop
xchg
stc
sbb
mov
call
add
sbb
clc
popa
aam
dec
outs
or
jecxz
dec
mov
mov
in
jae
push
pushf
xchg
jle
sub
fstp
xchg
out
jle
or
mov
mov
movs
sub
movlps
mov
aas
cmp
and
pop
push
(bad)
scas
pop
test
adc
jnp
fnstsw
jl
nop
sub
popa
(bad)
nop
dec
int
jnp
mov
mov
sub
call
adc
loope
and
pop
or
cmp
shl
es
push
adc
fwait
mov
mov
jg
mov
into
fs
cld
fidivr
mov
and
in
mov
loop
sar
pop
stc
repnz
fst
dec
xor
inc
or
daa
mov
js
push
imul
in
mov
jecxz
loopne
out
cmc
or
jg
jge
pop
int
addr16
push
push
inc
pop
pop
xchg
dec
cmp
add
fisub
pop
and
and
lods
sahf
push
outs
nop
pop
mov
or
sbb
mov
int
and
mov
mov
dec
sbb
xor
in
rcl
fstp
push
ds
mov
int
jg
adc
aam
xchg
mov
mov
repnz
mov
iret
xor
xchg
pop
das
and
popf
adc
cmp
cmp
int3
test
mov
cmps
xor
test
sbb
outs
out
dec
xchg
mov
lock
movs
enter
cwde
iret
stos
test
pushf
and
leave
sbb
mov
add
jmp
ss
pusha
mov
mov
add
jmp
inc
es
xor
mov
push
xchg
scas
pop
test
fcmove
jo
mov
mov
mov
imul
adc
daa
jg
xchg
icebp
cmp
aam
(bad)
stos
jge
inc
sub
adc
imul
xor
adc
hlt
aas
cmps
and
xor
xlat
fsub
scas
adc
clc
xor
or
pop
mul
or
cmp
ins
rcr
iret
out
inc
clc
push
inc
inc
mov
aaa
sahf
sbb
das
and
fdivp
jmp
outs
add
xor
bswap
sahf
and
pushf
jne
push
ds
rol
das
pusha
stos
jmp
adc
imul
mov
scas
ret
jno
pop
mov
sbb
out
repz
jne
(bad)
lock
xor
mov
push
call
(bad)
int
ret
add
loop
stos
sbb
sub
mov
retf
mov
add
shl
lods
scas
inc
inc
aam
jbe
loop
leave
inc
sbb
leave
fs
mov
movs
ret
xor
mov
movs
leave
inc
push
call
sub
jns
mov
lods
das
mov
cmp
into
ins
pop
(bad)
mov
or
das
mov
clc
xor
cmc
and
inc
pop
fisub
ins
shl
or
mov
cs
jns
loop
sub
lods
pop
mov
xlat
sub
add
stos
jmp
fnstenv
sub
adc
loopne
mov
shl
(bad)
cmps
cmps
and
lahf
mov
xlat
mov
jnp
(bad)
in
(bad)
out
inc
outs
mov
add
cs
and
and
shl
arpl
in
ja
jo
mov
scas
das
fld
adc
out
push
(bad)
dec
ror
mov
xchg
in
ds
imul
sar
ja
sub
jg
(bad)
ret
sbb
xor
sahf
stos
loope
fcom
mov
call
iret
outs
push
pop
add
ins
mov
push
in
ds
enter
cmps
scas
jle
stos
push
cdq
and
in
xchg
inc
xchg
xor
out
arpl
rcr
imul
shl
pop
(bad)
fwait
test
out
stc
nop
add
mov
push
enter
ret
ja
clc
test
outs
iret
mov
lock
scas
sbb
popa
mov
mov
xlat
loop
loopne
js
mov
inc
shl
xchg
(bad)
fld
iret
fdivr
or
fiadd
pop
mov
jecxz
sub
imul
add
pop
int3
pushf
pop
shl
clc
xor
mov
lods
cmp
mov
dec
inc
in
clc
pushf
sahf
shr
mov
out
or
iret
push
dec
jmp
das
mov
popf
test
inc
sub
push
sub
jo
sti
jecxz
and
xor
and
pushf
pop
mov
in
(bad)
sub
loopne
sub
les
mov
and
pop
cmp
xlat
dec
cs
cmc
mov
push
retf
dec
shr
xchg
xor
retf
pop
xchg
pop
jae
cld
rcl
outs
sub
sbb
stc
mov
jecxz
jne
iret
push
(bad)
adc
in
mov
ins
mov
ret
mov
jp
sbb
cld
punpcklbw
loopne
pop
lock
cmp
add
xchg
adc
mov
popa
push
inc
jg
jge
hlt
jae
jae
inc
mov
adc
dec
xchg
das
fs
std
outs
into
neg
cmps
cmps
cli
dec
mov
mov
test
xor
inc
mov
call
mov
adc
ret
push
add
sub
jnp
in
test
dec
and
sub
pop
ds
mov
movs
mov
pushf
adc
inc
xor
or
int
pushf
vpmacsdql
inc
cli
adc
jmp
in
shr
retf
and
inc
cmp
xor
stc
(bad)
test
imul
retf
push
cmp
ret
out
rcl
addr16
aaa
add
rcl
add
lods
imul
jae
mov
scas
add
aaa
std
test
enter
or
cli
pushf
push
outs
shl
leave
add
sti
jp
mov
and
nop
sub
frndint
retf
sbb
cs
leave
nop
popf
mov
sub
cld
loop
jbe
js
sbb
scas
push
ins
fsubr
pop
mov
sub
xchg
jle
iret
and
ins
fwait
out
out
or
(bad)
rep
ss
mov
adc
add
es
xor
movs
adc
jge
stos
cmp
retf
sub
xchg
pop
add
arpl
push
mov
int3
mov
repnz
mov
lahf
mov
mov
cdq
mov
mov
cld
dec
dec
enter
jge
dec
xlat
add
and
aas
add
ret
and
push
inc
cld
lock
or
(bad)
xchg
push
jp
inc
cmp
and
push
in
scas
lds
push
fnsave
popf
pop
push
enter
out
mul
nop
jge
push
mov
adc
ja
sbb
outs
dec
cdq
movs
and
mov
shl
xchg
daa
dec
push
in
cmps
mov
cdq
jb
cld
popa
jns
ins
jae
aaa
or
mov
and
fs
(bad)
add
push
push
sub
stos
int3
sahf
ins
and
adc
imul
xchg
mov
dec
jnp
and
lahf
jl
inc
push
pop
sar
scas
mov
lods
gs
popa
in
fnstcw
hlt
addr16
into
gs
ins
inc
scas
or
or
inc
sub
push
xor
fadd
addr16
inc
xor
jmp
cwde
outs
imul
bound
pop
and
mov
pop
mov
shl
fcomp
cmp
mov
jp
or
mov
mov
outs
add
xchg
mov
pop
cmp
xchg
xchg
inc
loope
aaa
popa
jle
mov
xchg
stos
cs
mov
pop
cmp
pushf
push
and
popf
pop
jge
lea
inc
sbb
imul
shl
cmps
xor
aas
jno
adc
xor
add
pop
out
rol
xchg
sub
arpl
add
dec
jbe
mov
test
fwait
ror
adc
rcr
ficom
xchg
aas
and
sbb
mul
mov
adc
dec
int3
add
or
rcr
inc
fucomp
xchg
ret
mov
mov
jne
push
or
sbb
aas
ret
mov
and
icebp
push
inc
test
stc
movs
call
shl
pop
clc
jb
imul
outs
mov
push
pusha
mov
sbb
cmp
xchg
dec
jp
jmp
inc
xchg
sub
adc
rol
in
popf
int
mov
mov
int
or
sbb
(bad)
or
jno
push
and
pop
cmp
outs
and
fstp
popf
das
scas
fwait
call
test
jo
cmp
not
jns
add
addr16
adc
cmc
(bad)
(bad)
imul
jbe
cmp
jmp
and
scas
cld
sub
mul
push
dec
push
mov
add
xchg
dec
movs
fs
cmp
sbb
xor
mov
(bad)
out
(bad)
push
add
xchg
dec
(bad)
jl
inc
or
ja
push
sub
pop
leave
fld
jecxz
sbb
idiv
jae
mov
xchg
jns
std
or
inc
fwait
push
fcomip
cmp
sbb
push
lea
or
push
out
xor
(bad)
sub
lods
xor
push
cmp
jae
pop
xchg
in
xchg
xchg
xor
add
repnz
test
pop
mov
mov
test
mov
pop
xchg
and
cld
xchg
and
mov
push
cld
sub
mov
outs
shr
popf
pop
sub
shr
movs
fisub
sub
lea
lds
mov
dec
dec
mov
repnz
xor
cli
pop
inc
stos
cmp
pop
cmp
push
xor
lea
push
or
jno
add
gs
mov
jg
jl
jle
adc
add
popf
in
and
add
test
mov
dec
mov
xor
dec
ficomp
outs
aas
mov
cmp
mov
push
out
xchg
fdivrp
or
adc
mov
xor
movs
lods
stos
mov
in
pushf
jae
scas
lahf
or
pop
shr
pop
xor
stos
adc
out
jne
push
cmp
or
ins
fwait
aam
fist
and
xor
sti
mov
repz
jle
pop
sahf
ins
or
arpl
stos
mul
mov
and
xor
loope
mov
jb
pop
popa
scas
out
leave
(bad)
adc
nop
int
lahf
outs
and
sub
into
push
aad
and
pop
jbe
ror
cmp
cmps
inc
test
nop
add
pop
xchg
cld
fstp
(bad)
(bad)
das
call
add
mov
jge
xor
sub
cmp
imul
jno
mov
mov
cli
test
inc
pusha
test
and
imul
hlt
scas
pusha
dec
jle
loop
xlat
adc
mov
or
jmp
jmp
fist
pop
inc
jbe
add
aas
inc
out
cmp
out
mov
mov
imul
(bad)
(bad)
push
dec
pop
and
out
test
push
xchg
adc
cmp
xchg
fstp
sub
leave
repz
fnstsw
ja
daa
cmp
movs
xor
ret
je
movs
dec
jo
cld
mov
jmp
xchg
fcomip
hlt
leave
mov
add
hlt
xchg
fwait
or
fbld
cmc
(bad)
push
mov
adc
fcmove
movs
add
fistp
cmp
dec
retf
(bad)
mov
pop
jp
lods
xor
sbb
aad
or
jl
ficom
jge
(bad)
jns
mov
xchg
sub
pop
and
jo
mov
int3
push
add
ss
xchg
and
rol
push
jmp
or
pop
dec
cmc
jmp
dec
int3
sbb
push
mov
out
ret
aad
jmp
aam
add
test
ja
cli
inc
lea
dec
xor
call
dec
mov
test
sbb
je
jns
mov
sbb
daa
mov
stos
movs
and
rcr
sub
pusha
in
push
lods
mov
jns
xchg
push
(bad)
cmc
aas
aas
or
out
(bad)
outs
repnz
add
fimul
inc
aaa
cmp
mov
sar
stos
push
xchg
and
fisttp
fstp
repnz
dec
pop
into
sbb
fld
lods
push
jo
jne
inc
inc
jge
cmp
mov
popf
pop
pop
and
mov
mov
xor
mov
cdq
ins
pop
int3
jmp
push
ja
sbb
cmps
mov
jge
int
nop
adc
leave
sub
enter
mov
das
cmps
imul
sbb
add
xchg
add
mov
pop
push
mov
jge
neg
loop
lahf
sub
xor
pop
sub
sbb
push
(bad)
add
xchg
test
sub
adc
in
cdq
mov
pusha
shl
mov
neg
shr
jp
mov
outs
int3
mov
push
or
sbb
sbb
dec
ret
fmul
xor
inc
cmp
sub
pop
mov
pusha
cmc
mov
cmp
in
je
aam
rol
or
sbb
maskmovq
jg
test
mov
icebp
pusha
fadd
dec
jmp
in
std
fdivr
les
retf
dec
or
inc
fimul
inc
ins
int
retf
out
movs
not
xchg
mov
fimul
jle
out
dec
push
pop
shl
xlat
sub
imul
mov
enter
sub
adc
inc
or
ret
mov
loopne
mov
dec
lods
dec
inc
in
test
mov
shr
mov
fs
push
lahf
mov
jmp
jns
cdq
lea
xor
sbb
add
pop
mov
add
pop
adc
shr
dec
push
stos
fwait
push
push
adc
sub
or
lds
mov
pop
mov
sub
cld
repnz
sub
pop
or
mov
push
aas
sbb
cwde
and
push
xor
adc
dec
(bad)
pop
gs
in
iret
inc
or
and
mov
cmp
sar
repz
out
push
pop
pop
lods
xchg
pushf
add
jl
adc
(bad)
cmp
inc
or
or
jo
icebp
jbe
retf
inc
push
hlt
push
xchg
push
nop
(bad)
jo
lods
cmp
or
cmp
mov
rcr
loopne
fsubr
jl
push
push
mov
clc
pop
pop
jge
aas
and
scas
mov
nop
mov
frstpm(287
retf
push
sbb
dec
inc
icebp
push
sbb
movs
in
adc
cmps
repz
mov
sbb
or
cmps
or
and
fs
pop
sub
dec
pop
pop
xor
mov
adc
leave
push
dec
mov
xor
push
pop
mov
or
mov
fcmovu
daa
sbb
(bad)
push
cmp
lea
add
push
int3
pop
add
jl
pop
dec
jnp
push
in
add
std
push
(bad)
fnstcw
mov
das
push
pop
cmps
cmps
cld
push
jl
dec
sub
addr16
xor
js
xchg
add
rcr
cmp
sub
sbb
jbe
lds
xchg
gs
daa
adc
jb
daa
sahf
fs
aad
cmp
jp
adc
inc
aas
test
cmp
int3
repz
fdivr
stos
jns
pop
mov
and
lock
and
nop
scas
and
dec
or
jmp
mov
stc
mov
sti
inc
outs
push
out
mov
inc
mov
mov
mov
rcl
lock
imul
cmps
mov
add
sti
pop
inc
ret
push
sbb
adc
nop
aaa
arpl
mov
mov
or
sbb
inc
xor
xchg
bound
jmp
xor
adc
hlt
push
dec
dec
js
inc
xchg
xor
ds
xchg
sub
(bad)
pop
(bad)
cli
cld
cdq
xchg
daa
and
cmp
sti
ret
enter
push
mov
loopne
fld
bound
xchg
pop
sti
xchg
lahf
pop
mov
inc
lds
jecxz
push
test
cmp
mov
out
add
out
mov
dec
inc
test
bound
std
out
dec
sbb
hlt
mov
add
adc
push
adc
pop
xchg
neg
add
sub
in
test
mov
mov
jbe
xor
mov
push
mov
pop
adc
mov
adc
sbb
mov
add
fcomp
imul
jne
retf
xor
jecxz
(bad)
clc
push
xor
cmc
push
mov
and
fbld
mov
cmp
pop
stos
add
dec
popa
dec
or
movs
ja
mov
in
mov
outs
stc
cwde
cmp
pop
inc
test
inc
and
cmp
(bad)
bnd
in
pop
pop
stc
mov
sbb
adc
imul
adc
hlt
jg
mov
ror
test
test
fcomp
mov
stos
je
mov
push
push
out
add
rcr
sbb
movs
ss
mov
scas
mov
(bad)
pop
jno
mov
jo
loope
cmps
in
sbb
mov
inc
or
lods
stos
out
movs
sbb
dec
leave
test
call
push
sbb
ss
or
xor
and
push
jmp
ja
fadd
mov
mov
out
js
(bad)
out
cdq
mov
mov
or
mov
xchg
jge
mov
(bad)
jmp
test
mov
das
call
outs
or
or
cdq
sar
outs
add
loopne
xchg
xor
adc
xchg
mov
arpl
scas
pop
cmp
lock
movs
dec
cdq
lds
ret
xchg
sahf
or
jl
mov
xor
mov
cmp
pop
in
pusha
mov
repnz
jge
jl
dec
pop
sbb
lods
xor
test
jo
adc
mov
mov
stos
sub
ss
xor
add
out
mov
mov
in
aad
xchg
ss
scas
loopne
ins
adc
call
jno
mov
das
cld
jle
stos
jne
call
ret
jl
and
jecxz
jl
mov
movs
and
pop
mov
movs
iret
rcl
dec
call
call
scas
jb
ret
mov
hlt
cli
jmp
nop
je
inc
mov
in
sbb
dec
out
shl
xor
addr16
xchg
(bad)
adc
mov
jl
jecxz
lock
push
dec
or
xchg
inc
mov
xor
xchg
and
and
mov
fwait
inc
xor
dec
js
stos
pop
or
mov
or
xor
or
inc
pop
push
jecxz
xchg
ds
into
push
(bad)
cdq
out
mov
outs
jo
js
push
pop
push
rcr
xchg
mov
add
or
in
cmps
push
ficomp
pushf
mov
cmps
or
jmp
out
je
jecxz
sbb
mov
imul
fcmovnbe
std
push
xchg
mov
sub
cli
sbb
rcl
in
call
push
xor
and
dec
popa
jnp
and
cdq
bound
pop
retf
das
push
xor
jp
jmp
cld
cwde
add
daa
(bad)
ins
and
aaa
repz
xor
out
jbe
cwde
cmp
fisttp
sbb
retf
mov
sahf
jmp
add
out
add
retf
push
push
(bad)
and
jb
inc
pop
dec
xchg
sbb
pop
aam
jbe
or
sub
loope
jp
add
and
add
popf
dec
mov
test
adc
int
dec
test
(bad)
sahf
push
dec
pop
div
icebp
cld
add
dec
lods
and
fstp
jnp
int3
jno
pop
sbb
test
dec
or
xchg
sti
cmp
add
xchg
clc
pusha
into
and
cli
jecxz
psrld
jne
call
ret
or
(bad)
ins
pop
dec
mov
scas
pop
dec
xchg
addr16
xchg
popf
mov
int3
sub
dec
push
ds
jb
test
bsf
clc
jmp
loopne
cmp
in
push
adc
xor
scas
xor
pop
scas
push
push
and
fdiv
ror
push
fwait
inc
stos
jo
cmp
test
aam
cmp
out
int3
bound
mov
and
adc
and
cmps
data16
cmps
(bad)
pop
aad
dec
ins
std
int
sbb
mov
xor
xchg
into
bound
pop
jns
bound
std
jmp
test
fcmovu
daa
call
aad
pop
xchg
mov
loopne
cmc
das
(bad)
pop
push
in
inc
dec
and
dec
push
and
jmp
sbb
sub
jo
sub
aam
add
mov
cdq
enter
imul
add
icebp
fwait
es
xchg
xchg
xor
pop
pop
shr
sbb
push
pop
or
imul
and
xor
inc
sub
imul
xchg
adc
loope
imul
sub
aad
jnp
test
push
xchg
mov
dec
sbb
repnz
scas
clc
loope
and
push
jne
gs
mov
arpl
mov
xor
push
dec
stos
cmp
jmp
push
(bad)
inc
jae
xlat
push
fstp
ins
pushf
sahf
lea
sbb
(bad)
jmp
adc
sbb
aaa
fdivr
push
xchg
lods
dec
inc
retf
mov
jnp
xor
sbb
fstp
mov
jg
xchg
mov
add
sbb
jbe
mov
shl
cmps
mov
sbb
shl
sub
sbb
sub
adc
dec
(bad)
cmp
mov
(bad)
loope
lea
int
jge
hlt
pop
push
and
hlt
das
(bad)
iret
mov
mov
mov
cmp
push
mov
add
mov
and
jg
aad
sbb
icebp
cmp
in
fadd
mov
push
outs
mov
mov
fs
xchg
mov
cmps
inc
jmp
in
jge
(bad)
lods
mov
jbe
sbb
aaa
ficom
mov
ret
mov
(bad)
ja
imul
push
pop
outs
xchg
sbb
and
dec
lods
xor
test
inc
push
mov
xchg
inc
pop
dec
imul
outs
adc
imul
int
sbb
xchg
outs
inc
pop
and
sub
push
jle
add
dec
data16
dec
jmp
sar
xor
test
ins
into
dec
xchg
popf
or
jo
cmp
pop
rcr
imul
and
fist
mov
push
pop
pop
dec
xchg
mov
fs
fisttp
sbb
mov
call
add
jl
dec
push
lods
out
jo
mov
es
inc
mov
jp
and
test
in
test
pop
xchg
xor
push
cmp
mov
inc
iret
(bad)
jnp
repz
jecxz
mov
data16
jmp
jno
cbw
push
push
inc
push
pop
ja
sti
rol
fidiv
shl
sub
sbb
xor
jns
push
pop
sbb
jmp
jb
pop
pop
sahf
xchg
sub
lods
fwait
cmp
jnp
mov
nop
mov
fcomip
mov
lds
(bad)
pop
cmc
popf
mov
dec
ins
xchg
push
fist
xchg
into
push
iretw
mov
lods
call
ret
jle
loopne
xor
fnstcw
repz
inc
hlt
daa
jno
data16
clc
and
and
add
sub
and
loope
mov
(bad)
add
fbstp
jg
add
int
push
push
mov
and
mov
jg
xor
lock
int3
push
scas
mov
pop
xor
sub
jbe
leave
cwde
rol
xchg
jecxz
cmp
movs
cmps
push
mov
shl
pop
test
xor
(bad)
mov
mov
push
cld
ret
in
push
nop
xchg
int
stc
int3
fsub
int
test
lahf
add
add
repz
sar
retf
movs
push
pop
cmps
xchg
mov
lds
stos
(bad)
xlat
retf
add
sub
fwait
mov
test
outs
adc
mov
cmps
mov
sbb
mov
ja
fcom
rol
mov
out
popf
bound
out
inc
ins
popa
and
out
ins
xchg
xor
mov
mov
and
push
int3
jle
mov
ds
cdq
out
mov
ret
test
scas
add
jl
cld
mov
mov
stos
add
pop
fwait
dec
cdq
pop
or
push
inc
rcl
lods
add
(bad)
arpl
and
jge
pusha
dec
pop
mov
movs
adc
mov
jnp
shl
or
in
js
iret
add
ja
or
lea
mov
jno
xchg
xchg
shl
adc
jle
sub
xchg
add
imul
lods
sti
cmp
push
ds
mov
adc
in
(bad)
sbb
call
or
mov
inc
movs
or
out
sbb
adc
jmp
inc
xor
lea
mov
dec
inc
pop
mov
test
push
adc
pop
inc
call
push
mov
mov
or
inc
fcmovnbe
iret
cwde
les
cwde
ss
xchg
mov
jg
pushf
mov
ret
pop
sbb
add
add
jbe
pop
imul
js
jae
retf
mov
jp
mov
xchg
out
jmp
or
pusha
mov
int
popf
cld
rol
jmp
mov
xor
outs
xlat
xor
das
cmp
data16
in
std
mul
jg
cmp
cmp
inc
or
adc
lds
sub
popf
inc
and
in
push
sub
test
jmp
(bad)
rol
mov
jb
push
sub
scas
jmp
frstor
add
push
jecxz
add
movs
adc
add
xchg
(bad)
aad
icebp
pop
xlat
lea
cmps
push
jnp
outs
hlt
cld
sbb
js
mov
mov
stc
retf
dec
mov
lods
cmps
dec
push
(bad)
adc
jle
int
jge
pop
cld
mov
in
dec
push
adc
dec
call
cs
setae
call
and
or
dec
cmp
xchg
inc
inc
cmp
xchg
push
lea
mov
sbb
cmp
cwde
js
(bad)
mov
xlat
hlt
mov
cmp
inc
pushf
xchg
mov
inc
jnp
(bad)
fwait
fwait
mov
ret
pop
mov
iret
fldenv
repz
pop
frstor
repz
(bad)
(bad)
into
cmp
or
out
ss
adc
arpl
push
pop
scas
mov
loop
push
cmp
popa
jo
mov
and
or
push
jns
xor
repnz
shl
inc
sbb
sbb
out
dec
repnz
scas
imul
push
jmp
stc
call
cmp
popf
pop
pusha
test
cdq
jns
test
faddp
xchg
fucom
mov
mov
xor
push
mov
sahf
leave
or
imul
stos
lods
xlat
xchg
movs
outs
or
aaa
sub
mov
repz
lahf
repz
adc
retf
(bad)
(bad)
jecxz
ss
sar
xchg
pop
mov
or
fisub
rcl
sbb
sub
popf
sub
push
or
xchg
cmp
fwait
push
sar
je
push
push
stos
jecxz
or
mov
xchg
out
xchg
cli
jnp
add
cmps
mov
add
dec
aaa
cmps
sub
inc
mov
iret
push
js
cmc
iret
sub
jmp
leave
mov
std
or
inc
adc
cmp
aas
adc
and
sbb
xor
push
sbb
outs
daa
sar
call
inc
push
sub
dec
cmp
jne
jo
(bad)
lods
cdq
mov
xchg
adc
cmp
mov
popf
lods
pop
mov
ficomp
int
xchg
xchg
in
aad
fldcw
sub
and
mov
push
imul
lods
icebp
aad
jmp
(bad)
push
pop
imul
mov
in
add
mov
xor
mov
enter
inc
retf
seto
mov
icebp
jns
fsubr
xor
fbstp
xchg
xchg
xchg
jno
(bad)
jg
mov
loopne
div
mov
sbb
add
sbb
sub
ss
push
xchg
stos
addr16
sub
rsm
sti
retf
dec
sbb
pop
rcl
xor
test
fisub
dec
mov
cmp
or
inc
xor
fiadd
inc
sub
adc
into
pop
adc
xor
or
cmp
ja
jle
inc
fnsave
mov
scas
adc
(bad)
push
pop
xlat
imul
fs
shl
test
xor
aaa
xchg
(bad)
div
dec
shr
mov
out
in
pop
retf
in
push
jmp
jg
jbe
or
mov
jg
mov
pop
sbb
shr
iret
jmp
call
mov
idiv
jge
aas
call
dec
push
sub
mov
test
(bad)
push
scas
dec
mov
mov
mov
rcr
jg
in
nop
imul
fs
imul
add
aas
fld
mov
jmp
mov
or
in
leave
mov
popa
sub
shl
xchg
sbb
mov
and
jmp
(bad)
outs
leave
test
push
cmp
xor
jns
int3
push
xor
dec
das
and
aaa
test
mov
add
int
cmp
pop
xchg
mov
mov
test
ins
and
(bad)
loop
add
stos
mov
gs
rcl
jo
in
mov
sbb
call
mov
hlt
retf
mov
nop
call
adc
or
hlt
mov
jo
call
pop
inc
dec
mov
push
jae
ret
push
xchg
sbb
lods
xor
xor
add
push
je
fistp
pop
out
or
mov
cmp
test
ror
xchg
inc
adc
mov
cld
out
data16
popa
stc
std
mov
adc
leave
sti
push
xchg
cli
cmp
repnz
std
loope
das
add
pop
adc
xlat
push
xor
inc
dec
xor
adc
std
xchg
pop
push
mov
ins
mov
scas
repz
push
xor
cmps
lock
lea
scas
(bad)
or
fbstp
or
add
mov
dec
mulps
xor
mov
and
repnz
popf
call
fisub
ins
mov
add
push
push
xchg
popa
mov
dec
fdiv
xchg
mov
cmp
jmp
pop
imul
movs
cdq
xor
jge
pushf
fimul
jne
jg
ins
mov
cmp
xor
add
mov
cmp
ficomp
push
jnp
lds
xchg
clc
in
push
aaa
cmps
dec
repz
fbld
inc
pushf
mov
out
mov
pop
shl
sbb
lahf
add
xchg
mov
loopne
add
sbb
mov
xor
add
or
inc
mov
dec
pop
loope
out
sbb
jmp
xor
pop
aad
test
add
fiadd
xchg
div
mov
pop
mov
lock
xchg
pop
(bad)
in
or
(bad)
jne
enter
mov
fild
fcom
addr16
dec
das
js
sbb
shr
outs
sub
fsubr
xchg
and
mov
int3
ficomp
and
jecxz
(bad)
scas
cmp
arpl
pop
or
push
adc
cmc
faddp
inc
test
test
cmp
scas
dec
mov
stc
aaa
nop
or
sbb
sbb
mov
cmp
sbb
cli
xchg
cmp
fdivr
adc
inc
addr16
mov
push
dec
mov
out
dec
push
in
mov
xor
add
jae
loopne
repz
test
sub
and
inc
mov
out
cli
mov
scas
mov
shr
jp
repz
xchg
mov
cmp
mov
mov
sbb
popf
xchg
mov
stc
cld
retf
pop
pop
ret
dec
neg
loop
rcr
loope
xor
xlat
jl
pop
sub
and
mov
adc
mov
mov
mul
and
and
xor
sub
and
push
mov
rcr
inc
bound
cmps
jmp
out
and
jmp
sbb
les
cmp
and
lods
xlat
call
mov
sbb
fidivr
mov
cmp
pop
sti
push
add
jmp
cmc
xchg
sbb
cmp
mov
mov
sar
out
pop
in
add
mov
(bad)
mov
mov
clc
ja
jmp
fistp
cmp
ret
sbb
adc
add
xor
dec
sbb
loope
pop
add
cwde
pop
xor
addr16
cld
(bad)
xor
loopne
ds
mov
and
stos
ds
in
outs
nop
mov
push
jns
ins
loop
(bad)
iret
xchg
add
jl
jge
movs
sbb
or
bound
adc
xor
iret
div
mov
sbb
ins
inc
jbe
cwde
cmp
mov
rcl
iret
shl
mov
in
mov
sbb
jnp
push
adc
dec
nop
cli
(bad)
nop
in
sbb
mov
xchg
jno
dec
fnstsw
std
les
aam
push
xor
push
cmp
pop
dec
lahf
ficom
sub
fs
push
ds
(bad)
imul
sbb
aas
push
xor
outs
(bad)
xor
repnz
mov
mov
or
retf
push
xchg
or
cli
call
cs
xor
cmp
sub
loopne
push
(bad)
(bad)
aad
les
sbb
xchg
bound
test
push
xor
inc
cli
or
jnp
cmp
test
jg
mov
push
loopne
mov
shl
pop
stos
sbb
sti
sub
and
scas
cmp
mov
dec
enter
mov
out
xor
call
push
pushf
mov
mov
aas
repnz
cmp
fcom
out
push
and
xlat
fld
and
(bad)
cs
cld
adc
retf
sub
add
push
sub
leave
hlt
dec
mov
ret
pop
and
call
mov
push
sub
andnps
call
push
or
jge
or
and
ret
pop
stc
aaa
jl
push
pop
and
adc
cli
cmp
cmp
sti
sub
or
(bad)
jge
je
pop
mov
jmp
(bad)
shl
add
jo
arpl
push
(bad)
push
iret
fbld
pop
(bad)
pushf
add
mov
mov
rcl
adc
adc
mov
jmp
mov
sbb
and
mov
outs
xor
lds
pop
xchg
out
lods
fdivr
xchg
hlt
xchg
xchg
test
movs
aas
fsubr
add
aaa
sar
add
out
dec
pop
ret
lds
mov
(bad)
jno
cmc
mov
(bad)
hlt
sub
pop
aam
lea
cmp
in
mov
std
add
and
mov
outs
ret
pop
out
mov
loopne
(bad)
cwde
cmps
sub
lods
jle
jnp
dec
popf
sub
stos
sbb
xchg
jns
push
mov
dec
inc
xchg
dec
push
icebp
pop
mov
or
pusha
fcmovb
cmp
and
cwde
mov
daa
jne
nop
push
push
shr
dec
pusha
xor
sub
jbe
rcr
enter
push
cmp
js
aad
mov
add
mov
xchg
add
mov
movs
add
addr16
add
and
leave
cmps
clc
in
imul
sub
pop
pusha
cmps
test
test
fisubr
cdq
aaa
das
xchg
jmp
ins
pop
sti
int3
or
cmp
mov
mov
push
clc
call
dec
loopne
cmp
in
push
sub
out
pop
mov
push
inc
imul
(bad)
out
adc
clc
movs
sti
mov
pop
xchg
shl
sub
mov
mov
popa
dec
adc
and
push
mov
adc
xchg
or
fs
movs
or
jae
xor
pop
leave
add
adc
xor
adc
xchg
mov
add
inc
ret
xchg
shr
(bad)
jg
into
mov
jmp
sahf
aas
mov
push
ins
mov
scas
lods
push
xchg
push
test
sbb
mov
mov
mov
or
mov
rol
jecxz
nop
out
mov
jns
pop
jmp
test
lock
xchg
les
adc
fild
inc
pop
mov
add
imul
mov
ss
add
iret
mul
outs
scas
call
push
mov
mov
js
add
jp
popa
outs
int3
leave
fisub
push
sti
dec
daa
mov
nop
in
mov
mov
xor
(bad)
add
repnz
jl
jle
ds
push
xor
iret
dec
xchg
mov
neg
pop
xbegin
mov
pop
not
outs
push
(bad)
fsubrp
add
add
and
imul
xchg
call
sbb
push
mov
mov
movs
shr
rcl
cmps
dec
cli
mov
ds
call
cmps
test
mov
ror
jbe
sub
out
in
or
jbe
mov
sub
mov
cmp
add
add
jmp
or
mov
adc
stos
data16
leave
sub
xor
xchg
xchg
test
jo
lods
in
and
xor
fsubr
xor
push
out
fist
sbb
test
cs
and
(bad)
xor
push
cmp
jb
mov
xrstor
pop
ret
lds
cmp
imul
pop
xchg
cmc
jmp
movs
mov
icebp
cli
ret
and
inc
push
cs
dec
add
call
dec
or
cmc
ficomp
das
cmp
mov
jns
popf
mov
adc
add
push
push
push
ret
ins
ss
pop
outs
mov
test
add
push
push
aam
stos
test
xchg
mov
mov
(bad)
push
imul
fmul
mov
lods
pop
jbe
enter
(bad)
xlat
pop
ja
rcl
cmc
cmp
je
pop
imul
loopne
cmp
push
retf
retf
and
dec
dec
jae
or
test
inc
cs
les
adc
push
cld
sub
inc
ins
call
push
mov
mov
inc
dec
call
mov
jo
iret
out
dec
pop
jg
imul
adc
and
jge
ins
stos
jno
mov
cmc
push
dec
dec
das
jmp
xchg
arpl
mov
lods
or
fcmovnbe
jb
inc
jmp
rcr
sar
mov
scas
mov
stos
leave
sbb
xchg
dec
scas
mov
push
repnz
jne
dec
mov
cdq
test
dec
or
and
icebp
jge
add
repnz
cmp
popa
dec
cmp
mov
jno
jl
and
push
into
pop
xlat
mov
(bad)
push
test
repnz
repz
mov
pop
xchg
(bad)
rcl
fs
scas
jae
out
lods
adc
stos
dec
adc
js
js
sub
sbb
push
ja
push
pminsw
lahf
xchg
mov
xchg
jecxz
push
cmp
or
add
dec
mov
jo
pop
mov
xor
iret
mov
(bad)
sub
sbb
xchg
(bad)
int
mov
pop
adc
add
pop
mov
mov
movs
push
cmp
jl
dec
xor
inc
xchg
out
out
or
sbb
mov
and
jecxz
adc
nop
push
scas
mov
push
dec
mov
mov
pop
inc
pop
hlt
lock
cmovs
add
fsub
cmp
in
add
pop
icebp
jae
cmps
push
pushf
nop
arpl
jne
add
arpl
pop
adc
loop
nop
or
mov
(bad)
jmp
dec
jge
div
and
movzx
pop
pop
dec
fwait
jecxz
inc
cli
pushf
dec
inc
push
xchg
pushf
mov
jge
jmp
mov
ret
and
push
xchg
xor
push
inc
pusha
mov
pop
mov
jo
ja
or
add
into
sbb
ins
rcr
rcl
sbb
push
cs
xor
xor
scas
xchg
mov
pushf
leave
or
mov
nop
fsubr
xchg
imul
xchg
cmps
repnz
mov
into
fst
cmp
outs
mov
sbb
cmp
xor
daa
pop
xor
sub
jmp
in
cmp
jo
test
ds
or
xchg
out
daa
cli
mov
inc
pop
ins
push
ds
jmp
xchg
mov
(bad)
adc
stos
inc
clc
movs
mov
jge
mov
ror
push
bound
sbb
fistp
mov
sub
repz
hlt
jbe
je
lahf
pusha
inc
push
fs
ss
(bad)
aaa
xlat
das
pop
mov
adc
or
adc
js
outs
es
xchg
xchg
inc
jbe
iret
add
call
fistp
push
xchg
jne
daa
and
sub
(bad)
and
mov
nop
xchg
aam
cmp
shl
add
in
rcr
inc
add
not
retf
lea
jmp
rol
cmp
cld
pusha
call
jb
cmp
sbb
dec
in
sub
or
(bad)
bound
outs
loopne
cmp
and
movs
mov
clc
dec
test
retf
aad
lea
ins
rcl
outs
movs
mov
inc
cmp
jne
push
inc
adc
dec
mov
adc
cmp
mul
or
cmp
test
cdq
jae
sub
sub
sbb
xchg
jl
pop
xor
push
sbb
pusha
push
cdq
ins
(bad)
out
push
pushf
mov
sub
repnz
push
rcl
cdq
pop
mov
add
pop
sub
xlat
pop
inc
mov
dec
sub
icebp
xchg
jb
out
xor
mov
pop
push
dec
mov
(bad)
popa
sbb
adc
fmul
inc
pop
pop
repnz
pop
test
rcl
lock
in
dec
inc
idiv
cld
clc
mov
imul
(bad)
rcr
add
push
frstor
cmc
xor
movs
shl
push
das
lock
cld
inc
test
nop
stc
scas
mov
jl
pop
xlat
sub
stc
inc
(bad)
mov
inc
jmp
pop
pop
sti
adc
push
inc
add
jb
icebp
imul
adc
mov
pop
inc
imul
mov
lahf
outs
rol
arpl
push
inc
int
cmp
lea
js
scas
adc
push
mov
inc
inc
adc
movs
mov
dec
dec
and
sti
ret
in
js
ja
add
jb
pop
movs
and
les
pop
das
(bad)
jecxz
xchg
in
fcom
test
popf
inc
add
iret
push
dec
(bad)
sbb
pop
sub
mov
les
mov
loopne
jle
popa
mov
jg
cmp
gs
rcr
push
adc
sbb
int3
or
jb
ficom
mov
sbb
or
nop
lock
xchg
fs
jae
cmp
es
icebp
sub
ins
cmp
(bad)
int
sub
out
sbb
cli
mov
xor
xchg
ja
sbb
in
cmp
and
lea
(bad)
mov
cli
addr16
out
mov
push
jl
out
fistp
pop
fadd
pusha
mov
add
xchg
sbb
fsub
cmps
inc
inc
jnp
xchg
mov
xor
mov
dec
mov
jle
add
jo
mov
push
lds
dec
call
or
and
push
popa
cmp
xor
jecxz
in
adc
call
jbe
fild
addr16
shr
mov
ins
in
mov
fldenv
cwde
sub
retf
inc
xor
adc
(bad)
test
enter
std
jb
cli
test
pop
mov
cs
stc
dec
adc
adc
mov
xchg
mov
inc
in
adc
outs
jmp
add
(bad)
mov
sbb
in
ss
push
not
cdq
cmp
scas
loop
adc
pop
xlat
or
mov
push
lock
daa
and
fidivr
cmps
in
fcom
adc
pop
iret
xchg
cmps
adc
retf
mov
dec
es
cs
or
jge
cmp
ret
xor
movs
mov
inc
dec
iret
fs
dec
mov
gs
fcmovne
popa
ret
add
test
xor
mov
aas
add
bound
cmp
inc
and
mov
ret
(bad)
cwde
cmp
in
test
sti
out
jmp
mov
repz
dec
sbb
inc
or
mov
inc
retf
js
loope
push
sbb
or
mov
mov
pop
pop
sub
add
jmp
pop
(bad)
shl
mov
sahf
sbb
xchg
inc
pop
pop
aad
push
les
push
in
js
adc
movs
mov
sti
sti
pushf
not
xor
xchg
jl
das
mov
gs
mov
test
sub
mov
dec
pop
cmp
stc
test
setge
sti
pushf
mov
mov
mov
call
push
ins
cmp
adc
xlat
or
es
out
lods
sub
icebp
sbb
and
(bad)
push
pusha
test
(bad)
call
ret
cdq
aas
popf
jnp
and
test
outs
lock
and
xchg
loope
jge
ret
inc
or
pop
push
cmp
and
das
adc
test
sbb
rol
popf
and
cmps
mov
sti
fwait
cs
xor
cmc
jb
inc
icebp
inc
xor
js
stos
mov
mov
test
sahf
scas
adc
jbe
stos
sbb
out
lds
iret
mov
lods
int3
pop
jl
mov
fild
adc
repnz
test
jecxz
cmps
sub
or
inc
jo
mov
cmp
jmp
fs
push
mov
xchg
jp
sub
cs
sbb
rol
push
cmp
cmps
cwde
fistp
fld
loopne
push
popf
div
arpl
aas
pop
mov
or
or
cmp
imul
stc
jno
sub
sti
mov
sbb
clc
mov
pushf
scas
add
adc
push
sti
rol
xor
cwde
adc
test
add
or
or
mov
cmp
and
addr16
mov
std
sbb
mov
rol
lock
pop
push
adc
loopne
push
adc
(bad)
aad
mov
xchg
inc
(bad)
fs
popf
daa
xchg
vmovd
inc
aad
(bad)
push
mov
js
frstor
call
popa
imul
and
mov
test
js
xchg
test
or
call
push
jl
sti
scas
fstp
cmp
outs
sub
sub
and
inc
mov
cmps
dec
sub
das
push
mov
fadd
jnp
or
in
sub
sbb
lahf
pop
imul
xchg
push
leave
mov
out
mov
cdq
pop
daa
adc
(bad)
out
dec
cmp
cmp
sahf
nop
popf
out
mov
and
push
push
xor
inc
xlat
xlat
ror
dec
imul
adc
dec
cmp
pop
or
std
xchg
jp
imul
mov
out
sbb
jne
ins
xor
shr
pop
xchg
jl
lods
sub
movs
rol
leave
out
adc
jecxz
ror
xchg
retf
stos
cs
jp
popa
imul
int
rol
sbb
(bad)
out
stos
inc
into
cmps
sbb
aaa
mov
movs
mov
or
popf
push
xlat
stc
mov
push
div
dec
push
sub
push
jne
and
xchg
test
aam
or
mov
es
adc
jmp
mov
test
sbb
cmp
mov
jbe
shr
dec
in
cmp
and
lods
test
cdq
sar
movs
in
cmp
fistp
loop
adc
cwde
sub
outs
shl
xor
lods
or
sbb
hlt
cld
les
loopne
mov
xchg
sahf
stos
jge
mov
jmp
push
sahf
sub
ror
test
aas
nop
add
fsubr
repnz
retf
inc
cmps
(bad)
data16
outs
xlat
stc
mov
inc
pushf
lods
and
jmp
cmc
in
add
sbb
stos
sbb
cmp
dec
test
lahf
jne
adc
mov
sahf
mov
into
lds
jnp
mov
mov
and
call
mov
stos
lds
ret
pop
in
lods
jecxz
ret
daa
xchg
push
test
aaa
pushf
lods
push
pop
enter
cs
cmp
push
out
pusha
sbb
jns
ret
ror
out
mov
call
add
loope
add
mov
out
outs
mov
or
cmp
push
retf
and
xor
idiv
mov
inc
lods
mov
xor
push
jb
or
lds
(bad)
dec
cmp
mov
push
pop
mov
call
sbb
loop
sub
pop
pop
pushf
hlt
fstp
cld
loop
aas
mov
pop
fist
mov
jmp
push
aas
cmp
mov
pop
push
dec
mov
dec
xchg
mov
(bad)
std
cmc
fnstenv
bound
inc
push
je
into
loop
outs
ss
imul
sbb
clc
and
xchg
push
cwde
or
pop
ja
imul
pop
pop
(bad)
mov
sbb
push
xchg
add
sub
aaa
lds
xor
xor
dec
pop
loope
sub
movs
jnp
mov
mov
mov
jge
fcomp
dec
popa
popa
stos
push
in
push
or
pop
ins
push
pop
pop
push
adc
gs
ret
push
push
int
inc
iret
and
ror
(bad)
push
cli
and
inc
rcr
xor
mov
sub
das
jmp
fcomp
popf
mov
add
rol
loopne
imul
push
aas
cmps
pop
sbb
pushf
dec
dec
jmp
fwait
mov
call
add
and
mov
mov
sub
clc
adc
ret
repz
mov
arpl
cs
lods
and
fadd
pop
mov
inc
xchg
adc
mov
inc
jle
jle
jmp
and
movs
adc
vmovd
adc
aaa
retf
or
sbb
nop
and
ss
jns
into
adc
fptan
enter
ja
fst
lods
push
xchg
mov
mov
push
mov
das
jle
jp
shr
or
int3
sub
(bad)
cs
stos
mov
movs
cli
ds
mov
std
sub
mov
fnstcw
and
sub
mov
in
dec
mov
js
aaa
test
out
inc
(bad)
rcl
push
add
fnstenv
add
stos
sbb
cmp
mov
test
mov
cmp
ins
in
fdiv
sahf
inc
mov
mov
std
jp
shr
or
sahf
cmp
xchg
mov
push
out
call
cdq
int3
fwait
jae
push
push
dec
test
ja
xchg
or
aas
inc
icebp
mov
mov
int
retfw
add
mov
arpl
or
ss
sub
inc
inc
inc
add
mov
fld1
mov
add
std
or
dec
fdivr
jle
adc
dec
cs
mov
jbe
mov
xlat
sub
(bad)
jmp
mov
jg
jae
push
sahf
inc
dec
into
das
shr
aas
push
cmp
mov
je
into
cmc
pop
dec
mov
pop
mov
fbld
pop
mov
loope
jg
cmps
cmps
inc
add
iret
inc
lea
or
ds
mov
(bad)
fwait
lds
or
daa
ror
cli
sar
pusha
jle
mov
out
js
pop
movs
in
and
push
in
stc
or
dec
xor
lock
pop
add
mov
push
bound
movs
adc
jo
rol
into
scas
scas
pop
dec
and
into
not
mov
cmp
xchg
xor
inc
or
and
scas
into
pop
out
jmp
or
shr
adc
mov
lds
sbb
loop
dec
mov
fnsave
inc
retf
push
cdq
inc
or
arpl
or
jg
ret
test
cmp
test
sbb
call
iret
xchg
inc
cmp
pop
mov
repz
stos
fisub
jns
idiv
jne
int3
dec
mov
or
push
imul
push
in
fisubr
jge
jno
inc
cli
mov
push
pop
stos
out
int3
adc
stos
stc
or
mov
retf
mov
clc
sahf
outs
and
mov
jmp
mov
out
clc
in
fwait
or
aas
(bad)
push
push
clc
dec
xlat
inc
xor
sahf
sub
aas
add
xchg
cwde
push
call
sti
mov
cmp
movs
repnz
mov
ss
cmc
push
xchg
mov
mov
fdiv
pop
and
iret
ss
ret
push
mov
dec
(bad)
jo
fs
les
push
jecxz
movs
push
xchg
fidivr
fild
xchg
jne
adc
lds
mov
push
mov
jmp
push
fbstp
fdiv
mov
adc
sbb
inc
push
lds
test
fcmovnu
movs
int
mov
pop
test
ficomp
push
push
or
and
cmps
inc
xchg
adc
jge
sbb
call
mov
adc
inc
xor
sub
js
fucomip
int
adc
or
and
icebp
sbb
lock
inc
jns
cli
mov
push
clc
dec
dec
popa
mov
sahf
add
mov
xchg
cld
popf
mov
fs
cmps
pop
inc
xor
sbb
ror
jb
mov
cld
call
rol
ror
or
cmp
(bad)
(bad)
(bad)
mov
or
in
iret
stc
and
inc
cmp
pop
popf
gs
xchg
jmp
dec
ins
mov
pop
popf
jp
jg
lods
stos
jnp
or
mov
sbb
mov
xor
xchg
xchg
lea
and
in
jbe
pop
popa
push
sub
(bad)
sub
idiv
pop
popa
inc
stc
popa
xchg
inc
call
rcl
jae
dec
popf
inc
(bad)
hlt
popa
pop
xlat
sub
mov
mov
lods
push
scas
pop
outs
jbe
cld
mov
lods
sub
jne
adc
sbb
add
leave
pop
sub
aas
mov
push
inc
ds
adc
push
lock
fs
dec
fwait
and
lock
stos
mov
pop
sahf
lods
and
movs
mov
cmps
inc
in
(bad)
mov
xchg
mov
lods
fisttp
add
rol
loopne
ror
popf
push
mov
addr16
push
pop
fadd
fwait
inc
dec
adc
pop
loop
adc
fs
xchg
mov
add
push
std
fmul
and
(bad)
cmp
call
xor
xchg
xor
push
call
inc
call
mov
or
call
or
add
push
pop
ror
daa
dec
lock
aad
hlt
adc
hlt
sub
xchg
adc
add
das
inc
cli
pop
in
xchg
add
and
fs
shl
popf
daa
pusha
xchg
cld
stos
movs
pop
movs
test
fldcw
repz
sti
cmc
xlat
mov
ja
cmps
popf
dec
or
mov
inc
dec
mov
inc
mov
rcl
sbb
ficom
iret
sbb
daa
fcmovbe
out
outs
jle
xor
push
js
jne
xor
js
nop
stos
xor
(bad)
repnz
cmp
push
mov
(bad)
adc
push
les
mov
xor
js
and
pusha
xchg
push
add
jb
in
(bad)
leavew
int
jae
dec
es
sbb
adc
mov
xlat
and
push
std
mov
clc
mov
pop
mov
out
jne
push
fxch
fsub
fcmovbe
dec
pop
movs
or
inc
sub
enter
sub
xchg
pusha
leave
add
fwait
push
jp
xchg
ds
test
xchg
xchg
fadd
cmc
mov
(bad)
je
or
(bad)
mov
ret
dec
add
dec
ror
(bad)
mov
fwait
jnp
daa
outs
push
es
icebp
aas
jp
aam
lods
pop
in
or
dec
int
sbb
push
jno
sub
sub
cld
push
fs
daa
(bad)
aaa
inc
and
(bad)
ins
(bad)
bound
fdiv
add
in
sub
pop
loop
icebp
pop
pop
cmc
mov
movd
rcl
je
and
in
and
rcr
adc
shr
pop
add
mov
cmp
in
dec
mov
and
dec
sub
cmp
xchg
and
adc
jo
adc
push
mov
call
out
ret
imul
movq
cmps
pop
retf
and
jns
lods
cmp
or
stc
mov
bound
mov
cmp
adc
mov
clc
mov
pusha
cmp
lods
es
movs
mov
pop
push
aad
into
push
out
jge
inc
pop
jmp
scas
cdq
sar
or
and
ins
jae
adc
in
mov
mov
dec
inc
xchg
clc
mov
(bad)
repnz
mov
and
xchg
imul
xor
pop
fild
cwde
adc
cs
fnsave
mov
sbb
adc
bound
scas
pop
std
add
leave
pop
mov
pop
(bad)
std
adc
es
das
imul
sub
push
xchg
loope
jb
test
inc
jg
cmp
pop
pusha
(bad)
ror
or
mov
push
enter
mov
test
nop
out
or
xchg
sbb
jp
cmp
(bad)
in
retf
shr
sar
repnz
xor
mov
retf
jnp
mov
or
sbb
xchg
icebp
mov
addr16
cld
cwde
movs
dec
sub
add
cdq
arpl
ret
push
xor
pushf
out
int
int3
sub
and
add
push
arpl
add
test
lods
and
mov
mov
in
ds
xchg
vucomisd
push
retf
dec
shl
loopne
mov
add
jg
rcl
test
mov
adc
jp
pop
dec
gs
pop
stos
adc
loop
jle
in
imul
xchg
outs
push
jns
(bad)
mov
mov
clc
je
mov
out
xlat
mov
dec
out
stc
idiv
cld
push
sbb
shr
push
out
mov
ffree
cmp
xchg
call
loope
mov
call
mov
(bad)
ins
cli
cmp
add
std
fld
dec
into
out
push
pop
cmps
cmc
push
cmp
stos
jl
sub
pop
popf
xor
add
iret
and
dec
or
mov
and
test
jmp
scas
jno
fsubr
into
dec
rcr
cmps
packuswb
arpl
mov
retf
test
xor
mov
outs
stc
out
mov
or
enter
or
mov
add
(bad)
ins
mov
cmps
scas
rcr
xlat
in
push
call
lods
cli
out
mul
fs
mov
clc
add
xor
(bad)
es
xor
push
xchg
lock
or
loop
das
cmps
sbb
jb
in
jb
push
adc
mov
imul
adc
mov
mov
mov
mov
sub
in
xchg
ins
idiv
fild
cmp
(bad)
mov
test
adc
ja
inc
dec
out
pop
cmp
repz
repz
daa
mov
int3
pop
or
dec
and
mov
pop
ds
dec
dec
out
fisub
fs
hlt
and
sub
dec
aad
sub
add
shr
push
pop
ss
xchg
xor
dec
mov
js
vmovsldup
sub
and
sub
or
or
push
mov
and
push
xchg
js
mov
pushf
xchg
mov
mov
mov
push
(bad)
aas
lods
mov
fimul
mov
adc
aam
jmp
add
jns
stc
icebp
inc
inc
daa
adc
pop
pop
push
xchg
mov
imul
mov
(bad)
add
retf
aad
xchg
sub
sub
jp
cmp
jl
sub
fidiv
fs
fistp
jle
mov
std
sub
dec
loop
xchg
pusha
cmp
dec
sbb
mov
ins
outs
push
outs
popf
push
test
(bad)
fistp
xchg
mov
xor
out
add
xchg
xor
and
loopne
int
sbb
test
call
xor
stos
(bad)
scas
loope
lea
jns
nop
int3
adc
setle
sbb
jge
shr
hlt
dec
retf
(bad)
or
push
ret
ins
leave
sahf
xchg
mov
pop
(bad)
mov
sub
and
jb
adc
mov
pop
xchg
in
xchg
ja
out
mov
shl
jo
test
mov
cmp
ins
(bad)
leave
clc
pop
leave
mov
pop
xor
test
sahf
jl
and
cmps
xchg
out
arpl
xchg
and
sub
outs
call
push
call
inc
outs
clc
adc
adc
lods
jl
xor
xchg
and
pop
outs
xor
pop
js
mov
aaa
inc
sub
sub
into
inc
xor
shl
xchg
mov
es
push
sub
xchg
push
ins
cwde
icebp
je
imul
sti
into
sub
xchg
mov
xchg
stos
cmp
stc
xor
add
lea
mov
outs
cld
rcl
(bad)
add
jge
jo
ret
xor
inc
mov
lods
pop
call
pop
jp
adc
push
ss
add
and
repnz
gs
jl
xor
sub
inc
lock
mov
mov
cs
mov
div
js
shl
loop
repz
lods
mov
or
jae
pop
jne
popa
aad
add
and
jno
mov
lods
loopne
pop
jmp
mov
pop
loopne
mov
push
icebp
xor
(bad)
rol
sub
mov
ret
fcmove
inc
push
jmp
mov
dec
test
mov
jmp
sub
inc
popf
and
call
lock
jb
sub
dec
xor
pop
or
mov
mov
int
xlat
mov
mov
lock
popa
jno
and
stos
push
dec
ins
xchg
jmp
jae
inc
rcl
stc
js
movs
mov
sub
push
cmp
ret
xchg
out
rcl
(bad)
iret
inc
(bad)
jmp
xor
dec
add
cmp
cmps
sub
or
mov
out
jecxz
dec
clc
call
cmp
adc
jno
outs
jl
mov
dec
dec
pop
inc
mov
(bad)
or
jne
and
imul
pop
fld
pop
jmp
das
arpl
push
dec
sbb
loope
pop
ror
outs
inc
push
sbb
bnd
add
inc
ficom
outs
push
xchg
repz
and
or
xor
xor
ins
(bad)
in
fucomp
(bad)
aas
pop
adc
dec
dec
push
lea
in
push
pop
pop
dec
lock
sbb
and
sar
bswap
jae
inc
inc
imul
scas
adc
idiv
sbb
inc
inc
pop
pop
pusha
jb
sub
scas
xchg
jmp
and
mov
mov
adc
ret
enter
sahf
call
mov
in
xor
cdq
sub
cli
push
ret
xor
jae
pop
into
call
add
pop
jmp
xchg
or
dec
scas
pop
mov
mov
sub
in
add
(bad)
rol
pushf
mov
xor
jae
fcmovbe
xchg
aaa
loopne
sahf
test
fsubr
mov
add
jl
ja
inc
mov
rcl
jno
inc
or
push
xchg
cld
lock
push
mov
(bad)
data16
push
or
das
pop
sbb
es
fist
clc
clc
mov
(bad)
(bad)
jg
stos
sbb
pop
mov
and
sbb
repz
sbb
mov
jb
out
sub
clc
iret
dec
add
add
movs
(bad)
jmp
ins
rcl
rcr
retf
in
dec
sub
ret
retf
lods
imul
jbe
xchg
inc
mov
movs
js
rcl
adc
adc
js
cmp
or
and
inc
inc
lods
mov
inc
ins
retf
pop
out
xor
sbb
ins
add
iret
inc
fyl2xp1
retf
cmp
inc
pop
push
and
push
jnp
fisubr
icebp
leave
pop
ret
mov
out
ror
fadd
(bad)
nop
loope
cmps
push
fimul
les
test
in
jne
dec
in
mov
gs
push
in
or
pop
add
adc
push
fadd
cmps
cmps
lds
pop
sahf
fwait
push
lahf
jns
mov
hlt
mov
out
and
add
sbb
cmp
int
add
xchg
adc
loopne
mov
sub
aam
push
adc
or
sub
rcl
cli
push
outs
pop
xor
in
call
jo
dec
(bad)
in
jg
(bad)
jl
test
in
pop
arpl
sub
fldl2t
mov
pop
sub
cmp
add
mov
(bad)
cmp
call
in
imul
adc
xchg
sti
stos
xor
int3
(bad)
or
add
xchg
xchg
sbb
or
dec
sbb
mov
out
mov
pop
inc
push
mov
mov
mov
mov
jbe
shl
push
push
les
retf
std
xchg
lods
mov
pop
sub
adc
cmp
into
imul
into
addr16
jmp
das
and
stos
imul
adc
add
ds
jb
cmps
cmp
or
loope
mov
and
xchg
pop
jle
pop
jne
jno
pop
(bad)
mov
adc
stc
jno
push
lahf
ss
inc
adc
sbb
iret
mov
lds
aam
(bad)
or
daa
or
stc
pop
and
arpl
xor
mov
fxch
mov
push
jmp
dec
fild
fstp
dec
in
shl
adc
jnp
pushf
aas
mov
sti
adc
std
scas
icebp
cs
les
dec
push
loop
jge
pop
daa
not
add
xor
cld
retf
push
xor
ret
add
push
xchg
pop
gs
fsub
xchg
lods
jmp
rol
mov
ins
xchg
push
test
inc
mov
dec
sub
pop
jl
pop
loopne
adc
sub
dec
adc
ss
lea
scas
dec
sbb
test
jno
jmp
mov
mov
sbb
inc
fcomip
dec
mov
push
mov
sbb
outs
pop
cmp
push
mov
test
ins
dec
jmp
retf
ds
cmps
out
cdq
adc
jp
push
(bad)
pop
mov
or
sbb
(bad)
xchg
xchg
mov
shl
mov
mov
sub
cmc
sub
add
lds
jo
add
(bad)
in
cmp
in
or
mov
jo
dec
inc
outs
add
mov
add
shl
push
mov
sub
add
int
xor
mov
push
loopne
mov
popf
mov
repnz
(bad)
enter
jbe
mov
cmp
sti
popf
popf
dec
bound
aas
and
or
jmp
cmps
sub
sbb
jo
push
fidiv
push
jmp
and
mov
jp
or
shr
mov
push
mov
and
int
inc
idiv
hlt
sbb
cs
fnstenv
aad
shl
inc
(bad)
stos
mov
fld
and
cmp
cwde
dec
push
pop
(bad)
jbe
dec
das
xchg
not
xor
test
lahf
xchg
scas
xchg
xchg
cmp
shl
xchg
aaa
jae
push
mov
outs
fwait
popa
stc
aad
popa
sbb
xor
or
scas
xor
pop
int
cmp
inc
add
addr16
jmp
sbb
inc
cmp
test
dec
rcr
(bad)
fidivr
lods
aad
cmp
outs
fnstenv
(bad)
call
push
pop
les
sub
dec
pop
jg
pop
xor
lds
retf
mov
stos
fidivr
push
pop
cmp
fsubp
lods
fimul
and
in
dec
jp
arpl
xor
fsubr
test
test
and
out
outs
(bad)
push
inc
rol
div
jmp
(bad)
ds
mov
ja
lods
cmc
mov
add
cmp
popa
or
cmp
and
xor
push
cwde
and
mov
jg
popa
out
stos
std
rol
movs
xor
fstp
pusha
jb
or
inc
xchg
out
pushf
arpl
ret
inc
ret
fcomp
mov
adc
stos
out
retf
xchg
and
ja
add
jle
inc
adc
fist
sub
fsubr
arpl
(bad)
push
sbb
or
cmp
inc
mov
inc
or
jno
xchg
repnz
sub
loopne
ret
sbb
dec
mov
sahf
test
cmp
inc
and
mov
xchg
push
data16
or
aas
mov
xchg
jmp
inc
jns
cld
push
fwait
lods
xor
push
leave
shl
ins
dec
sub
cld
int3
push
mov
adc
aam
in
pop
mov
mov
popf
int
loop
jp
or
xchg
aad
scas
xchg
push
inc
ins
lds
inc
rol
push
aaa
sub
mov
jge
fld
dec
xor
(bad)
outs
adc
xchg
mov
movs
lods
std
mov
retf
inc
ins
cmp
add
test
(bad)
dec
iret
cwde
mov
dec
xchg
add
cmp
arpl
inc
inc
mov
jne
cmc
jae
sar
jmp
fisubr
push
adc
adc
cld
je
jge
mov
jb
mov
cmp
sbb
xor
and
lahf
mov
sahf
mov
mov
mov
mov
xor
enter
cmps
jo
inc
test
hlt
mov
adc
jle
dec
lock
rcl
pop
adc
aam
mov
dec
test
adc
or
movs
mov
repz
fidiv
dec
push
jg
pop
jge
rol
mov
sub
or
fisub
sar
jmp
shr
jp
sub
(bad)
out
pop
xchg
jno
(bad)
add
imul
mov
mov
das
repz
ins
repnz
pop
push
fs
das
cmps
loopne
and
or
cmp
mov
lods
ror
sbb
mov
xlat
dec
mov
mov
mov
mov
enter
and
pop
dec
(bad)
cmp
cmp
xchg
arpl
addr16
push
sar
xor
cwde
inc
loopne
cmp
aas
movs
xchg
data16
jle
cdq
shl
jnp
enter
inc
std
clc
rcr
lods
sbb
mov
in
sbb
(bad)
stc
sahf
xchg
jno
pop
(bad)
data16
xchg
sub
sbb
shl
or
enter
ds
repz
and
mov
mov
sti
cwde
sub
dec
jle
pop
test
cmp
or
aas
sbb
in
xor
or
cmp
inc
cdq
mov
pusha
out
adc
adc
jge
mov
fwait
int3
push
lahf
inc
aaa
xlat
leave
ret
cmp
xor
adc
test
aad
mov
popf
jmp
xchg
xchg
stc
xchg
push
popa
fcom
or
sub
pop
push
mov
xlat
adc
lods
or
push
mov
xor
jnp
xchg
and
mov
movs
lds
in
mov
add
std
mov
stos
sahf
sub
(bad)
repz
xor
jmp
and
and
das
xchg
out
cmps
sub
mov
movs
js
js
pop
mov
test
cs
mov
ins
xor
out
ret
int
push
int
inc
lds
je
aam
jno
call
jg
imul
out
cmps
xor
add
inc
and
pop
nop
pop
daa
xor
mov
adc
mov
mov
inc
sbb
fdivr
rcl
sahf
repnz
into
xor
stos
jne
(bad)
loopne
sub
cmp
jg
and
dec
out
sahf
rol
push
dec
cmp
dec
jns
jne
sub
lock
lea
xchg
out
sar
std
mov
push
sub
iret
mov
loop
pop
pop
mov
sar
cmps
and
sbb
enter
sahf
push
jge
push
cdq
and
fsubrp
inc
lahf
(bad)
dec
sub
adc
pop
test
dec
js
or
adc
xchg
push
jle
repnz
loopne
xchg
test
push
sub
iret
mov
lahf
test
mov
jne
rol
out
aaa
ret
bound
cmp
cld
mov
mov
js
and
push
adc
(bad)
add
mov
test
mov
xchg
pop
jnp
int3
enter
je
outs
call
jg
in
xor
jb
pop
test
out
popf
cmp
inc
jecxz
jmp
add
out
dec
mov
ins
adc
popf
or
pop
mov
popf
(bad)
aaa
mov
xchg
fwait
sbb
push
cmps
mov
and
inc
addr16
rcl
cli
mov
pop
xchg
mov
lods
mov
hlt
(bad)
jb
dec
xor
inc
mov
cld
scas
pop
jmp
jecxz
mov
mov
enter
cmps
fwait
push
adc
xchg
rcr
(bad)
ds
sub
dec
inc
ret
jg
(bad)
retf
pop
mov
popf
imul
or
jmp
push
push
mov
cs
outs
imul
jbe
in
adc
fdivr
sub
sar
mov
or
stc
cld
outs
add
loopne
(bad)
or
sub
pop
or
cmp
push
(bad)
fsub
pop
rcl
dec
lods
cmp
idiv
movs
jno
jbe
add
cmp
jl
push
cmps
and
bnd
jbe
repnz
mov
mov
imul
and
stos
int
iret
add
fcom
and
stos
inc
jecxz
mov
out
xchg
lods
out
push
scas
xchg
xchg
dec
jecxz
imul
jle
out
fiadd
ins
mov
mov
test
push
test
sub
sub
clc
test
pop
lods
retf
mov
or
jno
pop
xchg
cmp
jne
xchg
push
mov
jp
xor
aas
icebp
sbb
push
inc
add
std
mov
fld
cmps
dec
xor
in
inc
pop
fst
dec
call
adc
xchg
shl
jb
jmp
add
xchg
loope
call
(bad)
(bad)
jmp
in
xor
int
pop
pop
bswap
adc
mov
mul
pop
mov
sbb
sub
outs
push
mov
int3
sbb
dec
sbb
neg
jne
hlt
ins
dec
jmp
fld
dec
sbb
fadd
test
or
les
popa
inc
jnp
cs
or
and
sbb
arpl
dec
xor
(bad)
stc
and
in
mov
movs
aaa
jnp
test
and
inc
dec
ins
adc
jbe
out
scas
das
ret
pop
inc
std
jb
adc
jmp
ret
ror
cmp
sub
mov
xchg
bound
inc
xor
inc
loop
test
dec
out
or
xchg
add
mov
mov
xor
mov
ret
outs
and
shr
stc
pop
cmc
mov
and
sahf
imul
mov
cmc
or
mov
push
push
cmps
and
clc
fstp
add
fwait
leave
test
adc
mov
add
xchg
fmul
pop
retf
sub
ds
out
aas
fdiv
adc
mov
jne
pop
jae
push
adc
add
test
cmc
push
retf
mov
aaa
imul
push
retf
cmp
jge
xor
in
aas
int3
js
hlt
cwde
xor
adc
test
adc
push
adc
leave
int
stos
loopne
ins
xor
sbb
mov
cli
inc
pop
(bad)
cdq
mov
adc
ret
test
xlat
pop
push
hlt
inc
sub
std
push
cs
outs
xlat
mov
or
lahf
cmps
mov
xchg
mov
fldenv
push
sbb
into
jb
jo
fbld
je
fild
icebp
lods
inc
rcl
add
imul
lahf
pop
(bad)
popf
cmp
mov
push
or
cmp
outs
inc
inc
mov
fwait
mov
sti
add
sub
pop
push
div
dec
lea
xor
xchg
clc
imul
or
ror
sbb
adc
cmp
mov
std
popf
ss
add
jbe
mov
outs
mov
dec
rol
rol
or
cwde
mov
lds
fnstenv
xor
or
pop
adc
xchg
cwde
gs
push
imul
cmp
and
idiv
pop
pop
outs
loope
push
jmp
lea
adc
dec
sbb
rcr
jns
aam
mov
into
and
sub
jmp
stos
or
cdq
ds
mov
stc
mov
and
popa
nop
(bad)
jge
imul
movs
or
jne
in
jae
gs
std
push
xor
push
js
mov
and
pusha
aas
or
inc
adc
cwde
loop
sub
or
xchg
xchg
aas
fs
pop
sbb
adc
aam
cs
adc
jne
call
xchg
xor
aaa
adc
(bad)
lahf
mov
jle
pop
adc
bound
in
push
mov
enter
pop
push
clc
pop
dec
xchg
out
je
push
push
sbb
mov
or
jb
addr16
mov
cmps
test
rcr
pop
cmps
jp
sub
mov
ret
mov
ret
aad
cli
pop
fsub
aas
fild
and
imul
xor
mov
aam
and
test
pop
jp
jbe
lahf
aad
pop
retf
or
mov
pusha
mov
add
iret
les
jns
add
push
stos
xor
jno
mov
ins
dec
pop
fcmovnbe
sbb
mov
int3
in
das
fcmovne
jno
mov
and
shr
hlt
push
sbb
test
xchg
fistp
add
sbb
inc
and
icebp
jne
push
cmp
mov
xor
mov
lahf
mov
adc
ss
out
jmp
cwde
mov
(bad)
pop
into
sub
dec
adc
aad
jl
call
into
inc
stos
jge
adc
xor
jecxz
sub
sub
js
mul
call
es
cs
mov
stos
shr
push
nop
ss
imul
xchg
jecxz
icebp
xor
inc
adc
call
and
add
fsubp
sar
das
or
movs
out
repz
xchg
mov
mov
mov
sti
in
or
pop
pop
popa
xchg
pop
clc
mov
mov
in
scas
fst
mov
icebp
out
cmp
cs
pop
jmp
jecxz
in
push
dec
xchg
fsub
sbb
mul
movups
ja
inc
mov
repnz
pop
or
xor
inc
adc
imul
ins
add
or
scas
dec
pop
sahf
jmp
mov
mov
sbb
xor
push
push
mov
mov
xor
mov
inc
dec
es
(bad)
dec
mov
fnsave
push
jmp
sbb
ret
ror
fistp
jp
aam
int
pop
fsubr
add
sar
imul
jns
or
(bad)
sbb
pusha
ss
mov
cwde
inc
std
inc
xchg
test
sbb
pushf
pop
inc
jnp
xor
cmc
dec
pop
mov
and
add
ins
cmc
std
imul
lods
int
xor
faddp
ins
mov
imul
push
int
pop
cmp
out
push
xchg
fs
loopne
mov
cmp
xor
pop
int3
jae
rcr
add
ds
sbb
test
inc
inc
adc
and
push
inc
dec
js
pushf
retf
push
pop
dec
out
mov
or
mov
dec
jmp
outs
and
push
cmc
xor
jmp
into
(bad)
gs
call
mov
sub
repnz
sub
das
push
mov
sbb
xchg
in
xor
outs
cmp
push
push
outs
mov
add
in
sbb
je
cmps
mov
and
cs
mov
test
lea
ror
adc
js
enter
and
or
imul
inc
pop
in
push
adc
pop
addr16
jnp
scas
add
push
popf
mov
inc
inc
lahf
pop
dec
loop
mov
cwde
arpl
div
fdivr
sbb
fstp
rcl
or
xchg
div
cwde
ja
or
test
sbb
retf
xor
test
mov
cmp
fcomp
nop
ins
mov
xchg
sub
pop
stc
cmps
push
mov
scas
mov
pop
sub
jnp
sti
jb
or
add
xchg
ret
lds
mov
imul
xor
xlat
aas
add
retf
jns
repz
arpl
inc
or
xor
int3
mov
xor
aad
adc
lock
jae
fucomi
in
mov
xchg
jno
fs
into
mov
enter
cli
xor
mov
mov
(bad)
femms
xchg
in
cmp
jns
lods
and
and
movs
add
rcr
mov
fs
pop
call
and
lods
loopne
scas
aad
mov
lods
push
inc
lds
pop
js
cmp
mov
xchg
out
xor
(bad)
loope
mov
cmc
out
call
xor
es
adc
pushf
icebp
mov
pop
jae
mov
or
xor
aaa
push
(bad)
pop
cmps
and
inc
sub
out
mov
and
mov
jl
xchg
cmp
lock
inc
sub
ins
add
stc
mov
mov
into
jbe
out
neg
adc
xchg
cmp
cmp
or
ret
jl
push
lods
jae
cmp
cmc
jb
sar
call
jno
jl
xchg
dec
push
sbb
pop
cwde
cmps
adc
lock
push
jns
jg
inc
mov
jns
sub
lahf
jns
xor
cmp
sub
mov
mov
test
mov
test
ret
aas
and
(bad)
fsub
xor
xor
pop
test
ret
push
mov
push
aad
push
int
xor
into
test
pop
pop
cmp
fs
xchg
push
lahf
das
retf
fisubr
pop
cmp
push
icebp
xchg
jmp
fadd
gs
imul
inc
mov
dec
shl
(bad)
sti
xchg
mov
xchg
pop
mov
out
jge
outs
sbb
inc
pop
out
pusha
mov
mov
push
(bad)
mov
inc
cmps
test
retf
push
sahf
(bad)
das
push
out
mov
jmp
imul
jl
jp
hlt
stc
stc
imul
adc
das
lea
hlt
retw
sbb
loope
out
cs
push
cmp
mov
in
test
push
add
mov
imul
mov
in
outs
xchg
adc
icebp
scas
xor
arpl
xor
inc
mov
sbb
add
je
and
hlt
or
mov
sub
mov
cmps
adc
dec
fisub
dec
test
mov
dec
pop
sbb
fisub
bound
ss
mov
scas
into
or
gs
mov
ret
cmp
push
inc
ins
jmp
push
es
(bad)
ror
mov
sti
xchg
shl
jmp
pop
jb
push
ins
xchg
cmp
push
aas
ror
mov
sub
pop
adc
jnp
in
test
sub
fidivr
lods
sbb
jl
push
or
mov
arpl
mov
data16
sti
mov
mov
jge
lock
and
nop
jb
js
xchg
mov
xchg
mov
xchg
inc
cmps
push
scas
xor
rcr
cs
inc
mov
push
pop
dec
mov
sub
retf
mov
imul
add
std
mov
dec
jbe
imul
sub
repz
cmps
hlt
pop
mov
imul
jne
scas
xchg
lods
and
mov
xchg
test
imul
cmps
out
shl
adc
add
pop
and
cmp
ret
dec
xchg
movs
lods
retf
mov
(bad)
aaa
pop
das
xchg
and
push
fnsave
and
push
xchg
loope
or
dec
xor
ja
sbb
das
add
push
inc
movs
in
imul
sbb
dec
stos
test
cmps
dec
dec
lods
mov
fadd
shl
pop
adc
or
inc
cmp
mov
int
xchg
std
sub
xchg
mov
and
jmp
mov
js
push
popa
arpl
xor
adc
mov
(bad)
cwde
ret
pop
mov
jp
cmp
jl
cmp
call
add
sub
mov
xor
imul
cs
push
jecxz
(bad)
out
mov
dec
out
pop
mov
imul
lods
cdq
ret
icebp
push
mov
pop
stos
imul
cli
jae
cmp
pop
push
adc
pop
cdq
xchg
shl
lea
aad
pop
sbb
(bad)
xchg
sbb
mov
mov
aam
aad
out
jno
enter
or
mov
fcomp
call
stos
xor
xchg
pop
push
or
push
mov
retf
cmp
mov
mov
xchg
or
cs
or
fisttp
sub
bnd
jl
sub
out
aam
mov
ret
les
in
cdq
(bad)
sbb
jbe
int3
xrelease
sti
add
(bad)
clc
jno
adc
out
xchg
cli
lea
nop
nop
push
fild
les
jp
adc
or
inc
inc
addr16
push
sub
inc
mov
pop
repz
cmps
mov
mov
pushf
dec
and
sar
leave
retf
loopne
inc
aas
hlt
cmp
push
and
dec
pop
pop
or
retf
cmc
sub
(bad)
sub
add
in
repz
std
sub
test
stc
push
dec
mov
pusha
arpl
add
retf
mov
inc
cvtps2pd
clc
in
std
adc
adc
or
add
call
inc
fild
cld
pop
leave
aam
cmp
iret
mov
or
add
fwait
loop
shr
das
ds
fdivr
xchg
in
sub
inc
mov
fmulp
jmp
or
call
loopne
scas
mov
pop
mov
repz
or
mul
cmp
test
xchg
pop
test
mov
xchg
or
jno
xor
aaa
outs
stos
jg
daa
jecxz
(bad)
pusha
mov
(bad)
cmp
sbb
ret
icebp
pushf
dec
add
rol
mov
addr16
ins
adc
lea
mov
(bad)
fst
mov
inc
repz
bound
adc
cmp
fst
and
pop
in
xchg
push
movs
ja
pop
push
jl
xor
and
jno
mov
fwait
ror
sbb
sti
or
jmp
test
or
loope
les
xchg
call
dec
loopne
mov
or
or
outs
mov
pop
mov
mov
lods
das
out
ss
in
ret
(bad)
ret
or
mov
push
sbb
loop
adc
retf
dec
add
mov
(bad)
push
xor
test
in
mov
adc
push
pop
sbb
push
push
push
sbb
and
in
add
xor
xchg
sbb
adc
shl
sub
sahf
psubsw
cs
mov
popf
or
shr
test
adc
imul
out
push
test
mov
dec
jnp
rcr
dec
mov
test
rcl
or
mov
lds
popa
je
cmp
push
and
pushf
ins
sub
xchg
and
repz
xor
clc
xchg
loop
mov
push
stos
cwde
ins
xor
idiv
and
cmp
inc
jmp
icebp
out
stos
dec
adc
test
in
xor
xchg
outs
mov
jp
xor
xor
enter
jmp
ja
xchg
loope
lock
dec
hlt
xchg
and
push
pop
test
adc
xchg
lods
pusha
jno
sti
in
int
mov
cmp
or
and
mov
bound
push
retf
jbe
aad
pop
mov
ficom
aad
and
retf
fstp
push
fistp
movs
pop
int
cs
fldcw
push
xor
rcr
(bad)
adc
dec
fs
add
aad
mov
sbb
inc
push
es
jmp
es
or
je
jnp
add
mov
push
or
shl
dec
and
push
clc
cmp
pop
(bad)
dec
enter
push
loopne
fimul
mov
cmp
dec
cmp
aas
mov
jnp
adc
jnp
xor
call
sbb
push
jmp
or
gs
push
fnsave
hlt
xchg
cmp
addr16
jae
xchg
cwde
jae
dec
sbb
ficom
call
in
mov
pop
inc
xchg
hlt
inc
hlt
cmps
mov
mov
enter
xor
push
add
sbb
leave
add
add
add
popa
sbb
mov
(bad)
into
popf
push
test
fcomp
cmp
push
shl
xor
adc
sbb
test
data16
jbe
outs
fisttp
stos
inc
add
cmc
ins
inc
pop
push
cmp
inc
xor
push
sub
(bad)
out
loope
cmp
retf
or
push
not
loope
hlt
cmp
xor
and
push
fwait
pop
jecxz
ror
inc
enter
cli
xchg
imul
(bad)
data16
push
(bad)
not
mov
inc
adc
ficomp
(bad)
mov
jbe
mov
call
mov
mov
aaa
aad
xchg
iret
leave
push
mov
mov
les
imul
js
daa
aam
icebp
(bad)
shl
dec
jp
fucomp
(bad)
cmc
test
loop
out
pop
sar
sbb
adc
in
std
push
adc
xchg
mov
ror
daa
xor
lods
je
xchg
mov
fdivp
jecxz
int
fmul
xchg
test
out
(bad)
adc
outs
ins
xor
push
xchg
or
push
int
cmps
sbb
nop
xchg
test
sub
sub
popa
pop
shl
adc
lea
fcmovbe
sbb
jne
and
push
icebp
sbb
out
xchg
(bad)
(bad)
in
mov
arpl
out
inc
mov
out
jge
mov
outs
loope
ret
mov
pushf
out
and
not
or
xchg
ret
push
lds
call
pop
iret
push
add
imul
xchg
add
adc
adc
loope
adc
ror
ja
mov
ins
jge
repnz
call
add
ror
test
lea
sub
pop
sar
je
mov
scas
aas
adc
mov
sub
out
or
sahf
cld
and
and
and
jno
sbb
add
pop
mov
arpl
sar
push
dec
pop
fisttp
mov
gs
mov
ret
jp
sbb
movs
test
mov
(bad)
inc
shl
jle
aas
mov
sub
adc
cmp
(bad)
mov
adc
pushf
rcr
in
mov
movs
stos
mov
cmp
ficom
rcl
in
lods
cld
push
sub
adc
jae
lods
push
fcmove
retf
cli
call
mov
mov
mov
ret
in
xor
pusha
icebp
jle
jge
cli
in
add
mov
push
mov
dec
xchg
cmp
std
sbb
sub
lds
xchg
adc
(bad)
(bad)
shr
pop
xor
inc
inc
fisub
push
or
inc
sbb
sub
dec
cmp
rol
and
mov
test
inc
ficomp
mov
jns
push
imul
clc
add
leave
pushf
mov
aaa
adc
jnp
sub
out
xchg
jg
inc
pop
test
add
neg
dec
push
pop
mov
push
lock
fwait
pop
sub
pop
mov
loope
jmp
xchg
inc
lea
inc
int3
sub
retf
aas
dec
cdq
pop
imul
mov
int3
call
push
push
adc
(bad)
pop
and
add
retf
xor
jmp
cmp
xchg
jae
pop
sti
pop
or
mov
xchg
lahf
lods
mov
clc
xchg
cmps
dec
xor
push
fcomp
mov
gs
das
call
xchg
inc
cmp
mov
repnz
pop
mov
mov
and
xchg
test
push
idiv
inc
mov
dec
das
push
and
xchg
push
test
mov
sbb
push
add
and
fs
mov
cmp
dec
xchg
(bad)
xor
jns
fs
push
out
pushf
jg
mov
dec
test
and
sbb
mov
pop
sub
mov
sbb
push
test
cmps
push
in
adc
dec
push
adc
add
ins
loop
mov
(bad)
push
call
pushf
inc
(bad)
je
and
and
cmc
fyl2xp1
ins
push
push
xor
cmp
sub
push
iret
test
int3
cmp
sbb
add
fs
fdiv
lods
pop
sbb
xchg
test
adc
data16
loope
add
aas
dec
xor
int
mov
sub
js
sahf
mov
sbb
in
(bad)
dec
dec
sar
repz
lock
pop
sbb
retf
or
cdq
inc
sbb
dec
fisubr
jp
adc
es
ror
retf
es
(bad)
movs
xchg
imul
xchg
cmp
push
pop
push
lods
es
shl
cli
mov
or
data16
add
push
lods
sbb
fidiv
shr
xor
fs
cmp
and
loope
rcr
and
push
or
mov
test
push
sbb
loop
add
je
mov
jb
push
loop
je
test
inc
mov
cmp
mov
xor
data16
jbe
fcmovne
push
pop
test
mov
(bad)
in
(bad)
xchg
and
shl
stos
std
out
shr
add
xchg
std
mov
out
dec
fsubr
xor
dec
mov
jne
push
xchg
sub
(bad)
repz
jl
add
std
xchg
mov
xchg
ins
fidiv
push
ja
dec
jp
fwait
dec
(bad)
imul
gs
test
ror
pop
out
xchg
adc
(bad)
(bad)
cli
add
sbb
repz
(bad)
into
dec
in
jle
ins
sub
pop
mov
pextrw
jp
cld
push
mov
outs
mov
adc
pop
or
hlt
jo
push
xor
and
rcl
iret
adc
(bad)
ja
or
mov
pop
jmp
dec
(bad)
mov
mov
jnp
dec
adc
cmp
int
lock
imul
xor
popa
add
pop
in
in
push
(bad)
pop
and
jns
(bad)
pop
out
xchg
sbb
les
aas
pop
cmp
cli
(bad)
movs
push
(bad)
pop
cmp
outs
repz
scas
mov
je
mov
call
es
dec
jge
(bad)
mov
and
call
inc
(bad)
scas
xor
in
jecxz
div
and
ss
aaa
aaa
lds
inc
mov
sub
dec
add
add
(bad)
pop
gs
add
sub
push
dec
stc
mov
inc
xor
and
xchg
jnp
add
or
in
addr16
adc
xchg
in
adc
ret
fild
adc
and
push
outs
push
pop
xor
sbb
rol
jg
mov
lds
(bad)
loop
mov
xchg
jle
jecxz
jns
test
push
bound
retf
fwait
outs
jno
mov
fcmove
outs
adc
aam
sub
sbb
ins
sub
sbb
addr16
pop
push
into
cli
mov
dec
sub
jg
mov
lock
fstp
ror
lods
test
adc
sbb
cmp
xchg
add
cmps
stos
cmp
pop
jo
movs
loopne
aam
add
into
iret
(bad)
sbb
addr16
lods
inc
mov
cld
sub
push
or
jle
and
adc
cmp
sub
jge
fisttp
mov
scas
mov
or
inc
fcom
pop
jg
ds
aad
fsubr
mov
in
push
sub
shl
xchg
jge
or
pop
into
sub
arpl
stos
jp
test
iret
stos
mov
cmp
push
mov
push
dec
popa
add
lods
aam
pop
jmp
xchg
mov
push
inc
test
xchg
mov
add
ins
jnp
push
cmp
clc
fnstcw
fwait
lea
int
fcmove
adc
or
repz
pop
test
lods
popa
mov
sbb
jmp
(bad)
lods
and
(bad)
fstp
pop
cmc
shrd
push
repnz
js
mov
pop
in
or
fimul
xchg
mov
push
das
int3
cmp
test
sub
mov
sub
or
(bad)
push
shr
popf
mov
je
or
pop
mov
out
xor
sbb
xlat
cmps
pop
xchg
sbb
or
mov
addr16
loope
fld
loop
fucomi
lahf
adc
in
or
pop
xor
xlat
ins
cmp
leave
sub
add
pop
xchg
cli
outs
int
lods
loopne
mov
mov
(bad)
push
nop
aad
pop
xor
ror
test
pop
and
inc
dec
fs
xchg
std
xchg
je
arpl
bound
xchg
sub
ds
mov
xchg
shl
ds
sbb
xor
cmp
in
rcr
stos
loop
test
enter
fnstenv
enter
fst
ds
or
mov
jl
pop
in
js
aad
add
leave
xchg
add
dec
cmps
out
xchg
xor
xor
out
push
in
cmp
js
out
sbb
div
pusha
call
adc
outs
repz
dec
push
jmp
enter
mov
cwde
mov
test
mov
sub
mov
es
ret
std
sub
fadd
stc
xchg
fs
popa
adc
cmp
dec
xor
xchg
test
lahf
mov
aam
stos
pusha
stos
pop
pop
rcl
(bad)
stc
(bad)
push
push
cmc
mov
cmps
hlt
or
das
ins
pop
xchg
jge
rcl
and
pop
addr16
jmp
sbb
je
vpshaw
repnz
inc
mov
ins
adc
enter
out
push
push
sub
lds
push
or
jns
sub
in
add
push
mov
lods
aaa
cdq
add
mov
dec
shr
cwde
(bad)
cdq
je
adc
retf
outs
push
jo
pop
outs
fmul
ins
pop
fs
pop
cmps
dec
nop
push
xchg
mov
lock
daa
sbb
mov
mov
call
ret
test
data16
popa
push
std
arpl
addr16
ret
adc
lahf
or
and
xchg
(bad)
dec
call
stc
shr
jge
cmp
inc
imul
sbb
push
xor
mov
cwde
add
xlat
fiadd
addr16
pop
adc
sub
jbe
mov
inc
stos
in
jecxz
adc
push
push
xchg
or
test
jno
ja
adc
push
dec
xchg
mov
(bad)
repz
loopne
sar
or
pop
fucom
shl
push
js
and
call
inc
xchg
pop
jmp
mov
mov
sbb
jle
movs
fdiv
mov
addr16
add
mov
call
dec
sbb
pop
stos
es
dec
popf
loope
(bad)
xchg
cdq
js
inc
xchg
add
fist
mov
mov
cld
popa
mov
pushf
push
or
add
pop
call
and
pop
mov
pop
cmp
retf
inc
cmps
aam
movs
daa
pop
mov
pop
mov
out
daa
and
push
cmps
dec
mov
jnp
or
mov
jnp
ret
int
leave
movs
sti
out
mov
icebp
sbb
imul
retf
(bad)
inc
gs
ds
push
stos
fiadd
or
lods
push
jne
div
clc
add
jb
xor
and
push
lahf
push
aas
ret
inc
pop
call
fcomp
push
mov
mov
cdq
push
pop
add
and
rcl
or
dec
dec
pusha
in
cld
inc
mov
(bad)
call
jp
jno
popf
jg
mov
pop
adc
push
dec
pop
or
test
pop
add
or
fldenv
das
mov
xor
fstp
jno
xor
retf
pop
cmp
xlat
push
aad
popf
inc
dec
adc
mov
imul
enter
mov
inc
nop
call
pop
pusha
cli
or
or
sti
in
add
cmps
mov
cmp
push
jo
rol
(bad)
test
push
push
jno
jl
repz
xchg
adc
mov
je
cld
mov
jl
(bad)
mov
loope
adc
fisub
dec
mov
loope
mov
push
pop
test
pushf
test
addr16
test
fnstenv
idiv
fcomp
dec
pop
pushf
std
pop
in
jb
mov
bound
pushf
mov
lock
push
out
or
xchg
mov
add
repz
inc
sbb
call
adc
aad
mov
call
push
dec
mov
stc
jmp
imul
leave
lahf
in
call
push
dec
(bad)
js
aad
inc
aaa
outs
rcl
stos
lea
mov
or
sub
ja
dec
push
das
(bad)
jmpw
lds
cmp
mov
call
sbb
add
outs
pop
push
xchg
jnp
pop
sub
inc
jbe
push
in
xchg
repz
aam
mov
mov
adc
fdivr
xor
loop
fisttp
add
pop
pop
mov
xchg
sbb
(bad)
test
or
(bad)
push
fdivr
cmp
sahf
lock
push
cdq
adc
sub
dec
and
jge
(bad)
jmp
not
mov
hlt
jo
lea
sub
cmc
add
add
mov
push
in
stos
xor
mov
popa
int
jle
sti
and
xor
cmp
sahf
pop
sub
mov
sbb
addr16
adc
add
add
out
push
sti
ret
cmp
xor
gs
cmc
xchg
mov
mov
mov
lods
or
inc
dec
xchg
sahf
jle
ds
sbb
adc
punpckhbw
and
fist
shl
es
and
xor
mov
adc
mov
push
cli
ror
mov
mov
mov
(bad)
dec
repz
jno
dec
xchg
push
mov
jnp
std
mov
scas
and
cmc
fwait
in
xchg
and
and
mov
cmp
inc
dec
out
adc
or
std
jle
xor
mov
jne
outs
es
xor
fidivr
or
mov
and
push
in
sub
push
test
ja
add
mov
jmp
sub
test
fs
pop
cdq
push
inc
push
or
mov
shr
dec
dec
stos
int
test
xlat
pusha
jg
push
dec
push
lock
pop
push
sti
test
cs
xchg
nop
dec
inc
adc
push
inc
sbb
xor
cmp
ds
and
sbb
div
int
jge
and
movs
and
(bad)
push
ja
dec
in
add
test
hlt
and
jb
test
mov
pop
mov
mov
arpl
daa
push
dec
cmp
(bad)
mov
cs
or
lock
ins
mov
or
or
and
dec
jle
test
jl
sbb
es
jnp
jle
sub
les
jns
imul
loope
add
shl
movs
into
add
in
cdq
movs
inc
out
xchg
stc
push
push
adc
fbstp
inc
sub
mov
mov
push
cmp
js
aaa
aam
daa
repz
adc
inc
ret
dec
and
pop
push
sbb
mov
cmp
std
ror
hlt
icebp
mov
enter
stos
xor
fistp
adc
sub
iret
cmp
push
fimul
push
adc
xchg
pusha
clc
xor
add
adc
fwait
mov
push
dec
imul
ret
xor
pop
xchg
pop
daa
sar
mov
fldcw
or
mov
mov
inc
sub
outs
pop
test
jno
push
sbb
(bad)
data16
repnz
fs
mov
dec
jp
stos
sub
adc
and
xor
dec
lahf
sbb
cld
pushf
lods
add
es
mov
adc
les
shl
js
mov
xlat
mov
icebp
jp
rcr
dec
jge
xor
sbb
xchg
imul
xchg
xchg
or
test
nop
movs
xchg
cmp
pop
and
push
mov
push
(bad)
std
rcr
aaa
mov
cwde
sub
in
fucomip
mov
jmp
pusha
or
mov
ins
cmp
mov
mov
daa
dec
jle
fiadd
add
mov
mov
cmp
add
pusha
fsub
in
mov
adc
xchg
push
and
daa
pop
xchg
shl
dec
mov
hlt
or
mov
lods
xchg
mov
fcom
xchg
push
cmp
shl
mov
adc
ins
cwde
lock
lods
jle
jge
push
xchg
pop
add
pushf
dec
fmul
scas
or
inc
sub
sub
add
pushf
imul
jge
daa
mov
imul
sbb
dec
xchg
pop
jmp
sbb
xchg
push
mov
push
mov
mov
add
jne
jp
pop
daa
jno
jecxz
cmps
imul
nop
pusha
cmp
(bad)
out
adc
inc
mov
pop
add
mov
xchg
mov
imul
mov
push
addr16
push
mov
sub
imul
cmp
int3
dec
(bad)
dec
dec
or
and
in
popf
(bad)
jmp
aad
ficom
mov
or
mov
mov
test
pop
push
jmp
xchg
inc
jb
adc
bnd
int3
mov
bound
outs
xor
mov
in
inc
push
cmp
cmc
cld
aad
push
dec
jb
lods
sbb
xchg
sahf
push
sub
sub
pop
lds
ds
aad
jnp
xchg
and
inc
adc
pop
inc
das
fwait
dec
scas
xchg
and
or
jge
in
lea
sub
jle
mov
lahf
hlt
push
cmps
mov
jb
mov
and
dec
call
jecxz
push
cli
jne
or
add
lds
lods
test
jmp
fadd
mov
dec
(bad)
sub
out
rol
add
xor
int
je
ins
stos
xchg
and
xlat
fcom
sub
popf
cmp
sahf
daa
push
ds
fisubr
repnz
mov
test
dec
jno
push
sbb
shr
dec
(bad)
clc
scas
lods
ret
test
inc
cld
mov
adc
adc
popf
imul
mov
or
pop
bound
or
jb
in
mov
cmp
gs
xchg
arpl
pop
lock
xchg
pop
pop
pop
jb
mov
imul
or
jge
push
ret
add
fistp
aaa
xchg
xor
imul
enter
xor
daa
push
aaa
ins
sub
cmp
jne
enter
sbb
dec
push
mov
cmc
xor
cdq
shl
xor
fstp
bound
ret
inc
and
xor
ret
jp
cmps
hlt
(bad)
jbe
xchg
pop
mov
aad
jnp
mov
cmp
cdq
push
mov
fwait
imul
leave
adc
mov
xchg
pop
pop
xor
movs
mov
pop
mov
fs
xchg
and
fld
xchg
cld
mov
cmps
test
sbb
hlt
scas
ror
retf
stos
inc
test
out
aam
xor
mov
mov
retf
push
shl
inc
or
cmp
es
push
push
jmp
std
repnz
sbb
push
mov
mov
loop
cmc
popf
call
xchg
and
ret
mov
test
inc
ss
push
fwait
add
(bad)
(bad)
and
dec
push
test
xchg
sar
imul
imul
xchg
in
aas
pop
xchg
mov
movs
cs
mov
rcl
shl
daa
xor
xchg
cld
iret
mov
jle
loop
aaa
cmp
enter
jg
out
jle
add
je
mov
mov
xchg
shr
cmp
loope
pop
jmp
mov
sub
inc
mov
outs
xor
jle
stos
out
add
and
mov
enter
je
dec
mov
fisttp
(bad)
adc
std
dec
cdq
mov
sbb
stos
test
push
mov
fsubr
lods
mov
mov
mov
mov
mul
dec
cmp
imul
push
imul
mov
jmp
push
sub
outs
pop
cs
and
inc
jmp
(bad)
out
shl
std
pop
xchg
movs
cmp
cld
mov
pop
ja
cmp
mov
in
sub
mov
add
fs
mov
sbb
cmps
jne
pop
and
mov
dec
xchg
mov
jmp
dec
cs
mov
gs
xor
cmps
aas
sbb
lds
call
pop
xchg
fadd
add
iret
and
jo
stc
je
inc
ja
sbb
pop
jbe
(bad)
xchg
mov
fucom
loopne
dec
sbb
mov
add
or
cdq
fs
xor
cmp
in
add
push
push
sub
mov
and
mov
ja
sti
or
xchg
movs
xchg
xlat
mov
xor
imul
icebp
ja
data16
mov
xchg
clc
xchg
test
repnz
or
inc
hlt
inc
mov
and
mov
mov
or
push
xor
call
pop
jno
and
loope
aam
cld
xchg
addr16
inc
mov
mov
mov
lods
inc
sub
xchg
stc
push
les
scas
sub
mov
sbb
cwde
xchg
adc
add
in
and
xchg
in
dec
mov
xchg
inc
lods
test
add
ret
lea
imul
inc
mov
(bad)
out
mov
outs
jb
mov
shl
stos
jo
pop
mov
mov
or
jo
sbb
cmps
int3
clc
push
call
pop
and
sti
jp
lea
into
mov
shr
mov
xor
adc
ret
or
pop
mov
jecxz
sub
daa
sub
inc
icebp
outs
or
test
xchg
cmp
adc
add
lahf
push
(bad)
fcomp
inc
movs
(bad)
rcl
xchg
gs
sbb
cmp
lahf
ss
add
add
pop
and
cmp
stos
and
cmp
mov
sar
mov
or
int3
test
jns
repz
test
inc
ds
and
dec
cld
ret
or
mov
cmp
jo
lods
mov
dec
jo
jecxz
xor
loope
imul
pop
mov
pop
mov
and
push
out
in
and
push
push
push
cmp
push
cmps
or
data16
dec
adc
lahf
fld
ror
mov
outs
push
or
push
fidivr
(bad)
xchg
lods
sbb
data16
iret
lods
or
int3
fdivr
pusha
sub
das
inc
sar
jecxz
(bad)
cmp
mov
sub
fcom
cmp
xchg
mov
jne
ss
mov
and
mov
inc
push
aad
idiv
(bad)
enter
fistp
call
xchg
jg
xchg
fucomip
cld
ds
jmp
xlat
in
cmp
jl
push
mov
mov
(bad)
inc
mov
in
mov
add
cdq
add
gs
icebp
ins
push
dec
push
cmp
jo
sub
cmc
fstp
lods
jecxz
ret
add
rol
ror
or
dec
pop
mul
ds
pop
dec
dec
lods
push
outs
ja
jb
addr16
rcr
ins
repz
lea
mov
or
and
mov
xchg
shr
xlat
jbe
push
or
retf
ins
mov
cmps
scas
or
fstp
clc
cmps
xor
(bad)
jmp
dec
xchg
mov
fwait
adc
in
or
fwait
loope
dec
mov
inc
inc
js
fsubr
or
in
sbb
add
push
mov
inc
data16
sahf
ret
pop
push
jns
inc
xlat
sbb
mov
jmp
cmp
adc
clc
enter
inc
jno
out
xor
cs
xor
push
jo
jbe
cld
das
arpl
jl
pusha
add
mov
pop
lock
call
and
push
das
dec
ret
shl
dec
mov
mov
mov
into
pop
pop
mov
fiadd
jp
out
cmp
ja
push
rol
daa
hlt
lahf
fld
lds
pop
sub
popf
loopne
jmp
pop
xchg
mov
cld
mov
jg
test
mul
cmp
rcr
mov
retf
add
rol
lea
in
mov
or
sub
cld
loope
or
pop
and
mov
xchg
lods
mov
stos
jae
inc
dec
mov
jbe
shr
(bad)
pop
push
imul
mov
mov
jg
mov
test
out
addr16
adc
das
inc
or
inc
sub
lods
or
pop
or
ins
nop
fwait
stc
aaa
or
xor
pop
shl
enter
cs
stos
dec
jecxz
jle
icebp
or
leave
shl
jmp
cld
jmp
fcomp
fistp
jno
xchg
cld
cmp
stos
js
jae
sub
dec
aaa
ja
fs
in
cs
sub
std
cli
div
jno
xor
xor
lea
int3
mov
ret
outs
mov
sbb
cmp
xor
sub
lods
lods
je
popf
ins
inc
nop
sbb
out
inc
mov
mov
inc
test
or
dec
test
mov
inc
in
mov
xchg
jns
mov
scas
and
sbb
inc
imul
jns
jmp
or
and
jmp
(bad)
into
and
add
or
xchg
test
call
sbb
cmp
ins
push
int3
jmp
jg
cs
dec
repz
es
push
xor
or
mov
fucomp
xchg
jb
mov
cmp
pusha
push
add
jb
sbb
push
pop
cwde
sbb
jns
dec
dec
sbb
dec
pop
shl
add
iret
(bad)
adc
test
xchg
dec
push
and
mov
ret
xchg
xor
jecxz
sub
cli
mov
test
inc
or
movs
(bad)
imul
push
pop
mov
(bad)
mov
mov
mov
pusha
cmp
call
scas
add
(bad)
xor
repz
in
daa
iret
mov
pop
test
icebp
inc
ss
mov
jo
mov
jnp
jbe
jno
ja
push
xor
nop
sbb
pop
js
ins
mov
push
das
xor
lock
inc
mov
scas
jl
fidivr
stos
mov
into
cmp
xchg
outs
add
dec
adc
sub
jns
(bad)
lock
imul
inc
pop
fisubr
xchg
dec
(bad)
xchg
mov
fistp
inc
add
call
data16
fs
loope
(bad)
and
mov
enter
movs
dec
fld
in
add
in
fild
sub
test
fdivr
mov
push
push
xor
or
pop
push
pop
jle
add
sub
or
dec
or
out
sti
dec
add
xor
sar
jb
stc
lea
and
gs
sub
add
neg
sub
js
aaa
loopne
push
xor
jle
pop
mov
mov
mov
scas
pusha
xlat
in
dec
clc
mov
or
adc
in
sbb
jbe
popf
pop
jg
cli
je
push
sub
ja
fist
add
add
(bad)
mov
lods
cmps
outs
imul
aas
add
jecxz
fadd
mul
jmp
and
imul
xlat
push
xchg
mov
xchg
mul
xor
daa
das
adc
xor
je
pop
xor
ret
xchg
clc
mov
fs
add
cmps
sbb
out
xchg
jg
in
sub
into
sbb
add
lahf
mov
mov
test
jae
add
fbstp
sbb
jecxz
cmp
mov
dec
inc
mov
gs
xchg
xor
mov
mov
and
stos
cld
inc
ds
xchg
mov
xchg
(bad)
sahf
pop
pushf
lods
imul
stc
das
in
xor
jns
cmps
mov
xchg
aas
das
ret
(bad)
inc
mov
adc
pushf
jo
shr
stos
lods
fst
iret
sub
sti
movs
inc
enter
stos
mov
bound
or
adc
jbe
inc
pushf
push
out
mov
sub
jb
loopne
fisttp
mov
popf
jne
adc
sbb
xchg
cmp
pop
inc
pop
mov
pop
addr16
xchg
popf
mov
loop
pop
inc
jns
push
mov
enter
loopne
sbb
call
loope
aaa
or
xchg
dec
push
test
cmp
sbb
iret
push
xor
inc
lock
sub
imul
xchg
test
xchg
fistp
jmp
cdq
mov
arpl
cmp
mov
mov
xor
mov
push
shr
(bad)
mov
out
xchg
fisttp
mov
sbb
shr
jp
dec
sub
xlat
stos
(bad)
xchg
hlt
loop
(bad)
cli
cmp
lahf
or
fwait
mov
imul
adc
or
repz
mov
mov
push
and
inc
xchg
inc
repz
imul
adc
pop
stc
in
cmp
fstp
push
xchg
cmp
sub
clc
pop
sbb
mov
bound
nop
sub
movs
inc
sbb
jns
ins
jne
fistp
je
adc
push
inc
add
push
jo
out
jmp
(bad)
movs
and
retf
mov
push
in
scas
push
push
cli
ins
sbb
cmp
xchg
cmp
xchg
std
add
(bad)
je
popa
bound
or
cwde
dec
adc
mov
xchg
add
mov
mov
loop
les
inc
jne
cmp
retf
dec
fdivp
das
dec
mov
in
in
mov
outs
xchg
sar
mov
pop
pop
leave
fild
cmp
dec
sub
xchg
movs
test
dec
push
imul
out
and
adc
jle
pop
pop
ficomp
or
pop
outs
dec
std
sbb
les
push
cwde
or
adc
inc
ins
outs
ins
sbb
jnp
fs
jmp
clc
jbe
icebp
xor
sub
test
sbb
mov
loopne
sub
push
outs
xor
(bad)
mov
retf
jge
icebp
(bad)
fisub
hlt
call
mov
cmp
sbb
dec
jp
js
add
mov
mov
jae
pop
sub
inc
xchg
cmc
xchg
icebp
lods
std
mov
add
mov
xchg
xor
into
int
xor
push
popa
mov
push
xor
cmp
jp
add
gs
es
jae
test
mov
stos
mov
and
inc
sub
daa
pop
es
mov
dec
dec
sbb
mov
pop
inc
jl
add
jae
movs
dec
test
rcr
dec
dec
rcl
cmp
dec
adc
inc
ins
cmps
xor
or
repz
pop
fnsave
inc
leave
clc
dec
adc
or
mov
mov
sub
mov
inc
cmp
inc
mov
push
out
dec
sbb
stc
adc
dec
int3
add
push
adc
xchg
jmp
dec
push
cli
jo
push
jb
jl
in
mov
call
mov
cmp
adc
imul
lea
and
sub
jp
inc
fbstp
mov
ins
jmp
repz
sbb
imul
push
sbb
mov
sbb
inc
inc
sti
mov
xchg
test
jl
fsubr
xchg
std
push
fidivr
in
loop
cmp
retf
aad
(bad)
xchg
mov
add
cmp
mov
out
sti
jl
and
in
in
add
ret
jne
inc
cmc
and
jbe
jb
in
xor
stos
pop
cli
jecxz
ins
mov
div
pop
fst
lock
aaa
daa
mov
out
jmp
jo
dec
and
leave
sar
pusha
sti
mov
enter
add
inc
mov
mov
jle
push
movs
pop
ret
js
and
scas
mov
and
movs
inc
jecxz
push
lods
mov
mov
aam
inc
sub
popf
sub
jp
add
dec
push
scas
scas
inc
call
popf
mov
and
call
push
and
push
or
int
pop
jl
xchg
push
stos
mov
(bad)
and
sub
sub
repz
dec
jne
mov
nop
jns
aam
dec
leave
lods
xchg
cmp
inc
mov
outs
jne
add
dec
and
xchg
inc
pop
cmp
xor
jge
ins
push
push
jb
imul
ret
pop
cmc
arpl
je
mov
jns
test
rcr
push
or
sbb
shr
lods
mov
lds
outs
push
sbb
(bad)
call
inc
aad
jno
les
pop
pushf
shl
in
push
adc
mov
stos
shl
adc
cmc
shr
test
test
lock
jmp
jns
fcmovne
mov
push
add
clc
pop
mov
loopne
into
push
test
punpckldq
fcom
dec
test
jge
imul
ins
sar
push
inc
sbb
ja
sti
cmc
int3
fdiv
and
int3
cs
fwait
test
cmc
dec
inc
mov
mov
xor
jmp
stos
add
lea
pop
cmps
pop
adc
push
loopne
jge
or
push
std
into
push
push
lods
test
push
and
dec
adc
jmp
mov
or
aas
into
inc
push
mov
or
mov
mov
mul
dec
dec
aad
pcmpeqd
sbb
lahf
imul
mov
outs
pushf
push
and
nop
mov
adc
movs
xchg
sbb
adc
dec
dec
leave
(bad)
inc
shl
(bad)
cmp
ins
in
ss
ret
popf
outs
push
lea
call
sti
and
maskmovq
neg
shl
jns
scas
test
test
adc
nop
cmp
mov
lock
(bad)
int3
pop
lds
cwde
cmp
add
jnp
out
cmp
push
sub
push
imul
sti
dec
mov
xchg
addr16
jb
cmp
shl
mov
es
pop
imul
mov
daa
jne
arpl
pop
sub
out
jae
xchg
and
cs
jl
test
cs
(bad)
sub
retf
jge
dec
xchg
cwde
leave
pop
xchg
cmc
xor
dec
push
push
fistp
cmp
jo
push
scas
imul
cmps
(bad)
fcmovbe
mov
js
fdivr
dec
into
pop
leave
xchg
lods
mov
std
ja
xchg
or
xchg
cmps
jp
xchg
loopne
mov
sar
loope
retf
adc
out
xchg
push
fidivr
push
ret
lods
test
sahf
clc
cwde
cmovno
aaa
in
fnstenv
or
vmread
adc
scas
mov
pop
xchg
cmps
push
iret
add
push
lock
das
in
jge
mov
js
jle
out
fdiv
gs
fild
jge
pop
(bad)
fs
jb
pop
mov
das
jmp
cmp
sbb
clc
mov
hlt
cwd
adc
dec
movs
movs
fild
sub
fwait
push
dec
out
(bad)
sti
xlat
or
cmp
mov
mov
(bad)
push
xor
je
mov
fs
mov
sbb
push
and
jno
ds
repz
test
iret
push
mov
std
dec
fcomp
mov
(bad)
mov
xchg
loop
mov
aam
frstor
dec
sub
loop
cmp
push
sbb
push
jp
sbb
mov
dec
mov
mov
add
hlt
and
test
into
sub
out
pop
out
dec
cmp
and
mov
adc
or
out
xchg
jo
ja
xchg
idiv
or
inc
call
push
or
add
sub
aas
jmp
sub
setge
jg
popa
iret
mov
sub
xor
and
mov
fs
jle
jl
pop
stc
dec
iret
sti
out
arpl
mov
xor
scas
cmp
pop
mov
xor
pop
aad
push
imul
into
cs
mov
daa
jae
pushf
xchg
out
cmp
retf
sub
ficom
add
mov
mov
stos
sbb
loop
rcr
cmps
jmp
(bad)
clc
mov
shr
stc
fsub
push
and
rcl
pop
sbb
retf
sti
cli
gs
sti
xchg
push
xchg
pop
mov
pop
adc
mov
retf
clc
and
mov
mov
leave
sti
ins
jge
adc
rcr
imul
aad
das
mov
add
dec
aad
(bad)
out
ret
sahf
ror
push
jo
and
fisubr
cmp
cmps
ins
pop
bound
cmp
aam
mov
lock
nop
fs
sti
cmps
rcr
in
stos
jb
not
cdq
mov
push
and
sub
call
popf
cli
inc
(bad)
pop
and
xchg
cdq
adc
and
inc
xor
pop
mov
sti
jmp
sub
adc
jne
cmps
and
pop
test
outs
fwait
daa
lahf
lea
or
xlat
not
test
test
push
add
hlt
ins
push
xor
aam
ret
push
pop
pop
jecxz
mov
mov
mov
dec
arpl
repz
jl
mov
xor
stos
dec
out
jg
fist
or
int
dec
jp
cdq
add
xlat
mov
(bad)
(bad)
jmp
mov
pushf
jl
sti
ret
retf
(bad)
mov
mov
cmps
jecxz
cdq
dec
xchg
add
pusha
in
and
test
out
dec
jo
jmp
inc
jp
or
dec
jle
in
jb
xchg
dec
retf
rcr
movs
adc
fist
outs
xchg
pop
(bad)
je
std
sub
dec
xchg
fisttp
cmp
or
stos
fiadd
mov
clc
rol
jge
adc
push
and
xchg
push
cmp
cli
in
push
cli
pushf
addr16
fs
std
shl
adc
ja
daa
mov
push
jae
ja
or
into
aad
inc
call
clc
xchg
sub
ins
jle
rcl
iret
xchg
cmp
adc
in
adc
cmp
push
and
rcl
mov
pusha
and
xor
and
stos
nop
jno
call
push
ins
add
ins
push
and
jno
xchg
xlat
sbb
sbb
int
xchg
lock
and
mov
or
imul
fld
adc
xchg
jns
test
and
jmp
sub
jo
adc
mov
sbb
cdq
fidiv
inc
stc
push
int3
or
add
idiv
inc
psllw
inc
test
xor
(bad)
ficom
icebp
fs
test
gs
scas
mov
daa
call
jns
ins
adc
adc
inc
addr16
cli
xchg
mov
test
jle
fisttp
and
pop
jg
sbb
repnz
clc
or
aaa
aaa
add
jecxz
sbb
and
add
sub
mov
ds
or
xor
(bad)
call
les
cmp
sbb
cmc
xchg
sbb
ror
stc
push
mov
jne
loop
ret
dec
or
cld
mov
mov
nop
sbb
jmp
sbb
inc
mov
aad
push
outs
js
hlt
mov
test
cmps
rcl
add
xchg
cs
daa
pop
push
data16
dec
ds
cwde
jp
mov
cmp
xchg
jmp
sbb
out
imul
push
addr16
jmp
adc
mov
cmps
data16
or
push
and
dec
icebp
inc
shl
gs
dec
dec
and
stos
xchg
xor
sbb
mov
sahf
(bad)
scas
or
sbb
mov
push
xchg
rcl
imul
pop
xchg
out
mov
inc
mov
mov
std
adc
(bad)
popa
xchg
icebp
nop
adc
aad
mov
js
mov
adc
movs
sti
mov
icebp
test
icebp
pushf
mov
xchg
dec
jno
sbb
push
mov
es
retf
mov
daa
sub
pop
data16
push
imul
mov
pop
call
mov
mov
in
popa
(bad)
push
stos
aam
mul
sub
sub
int3
(bad)
xchg
sub
xchg
jnp
xchg
in
retf
sub
addr16
xchg
push
aas
inc
xchg
cli
sub
dec
pop
push
sub
test
loopne
add
or
inc
xor
sbb
cmp
and
stos
mov
pop
push
and
loope
push
int
xor
int3
push
xor
mov
xor
pop
and
(bad)
mov
cs
vmwrite
mov
jbe
add
sar
mov
repz
push
jne
aaa
push
in
jmp
(bad)
push
call
mov
dec
cli
xor
pop
pop
call
push
and
jge
pop
jno
dec
and
xchg
iret
inc
mov
xchg
scas
mov
xor
shl
das
sbb
iret
mov
lahf
repz
dec
fs
mov
xchg
jne
scas
mov
push
imul
or
mov
adc
cld
arpl
imul
or
retf
popa
icebp
retf
pop
inc
adc
add
sbb
push
xor
test
aas
test
xchg
and
mov
enter
push
and
xor
and
sbb
xchg
or
pop
add
sbb
cmp
jmp
and
xlat
ins
cwde
xchg
pop
ficom
inc
loopne
imul
dec
(bad)
push
adc
mov
ins
scas
inc
pop
sub
jne
icebp
addr16
mov
push
mov
jb
sar
ins
sahf
mov
inc
sub
push
xchg
cmp
inc
cli
cmp
mov
loope
aas
adc
xchg
iret
fild
pop
cwde
ss
mov
mov
sub
push
pop
mov
xlat
popf
mov
sbb
pop
jns
sti
xchg
test
inc
movs
dec
push
xchg
fcomp
pop
(bad)
cmps
aas
js
mov
sub
xor
sbb
movs
ret
(bad)
sub
push
popa
jg
mov
pop
sti
aad
out
dec
push
stc
add
loopne
stc
or
pop
mov
shr
push
es
dec
jl
fiadd
bound
imul
mov
push
fbld
xchg
inc
jne
fstp
bound
test
mov
jge
inc
add
out
adc
inc
and
jmp
ins
jb
js
and
ret
rcl
test
mov
push
and
lahf
in
xchg
popa
int
jmp
pop
leave
mov
dec
inc
repnz
call
test
stos
inc
lods
pop
xor
pop
pusha
sbb
fwait
hlt
mov
ins
sbb
xor
clc
clc
ds
pop
shl
jmp
add
gs
dec
sti
jns
mov
mov
cli
jns
cwde
sbb
out
add
add
mov
(bad)
mov
mov
adc
push
mov
push
mov
mov
fidivr
and
es
xor
and
and
jmp
repz
ror
adc
sub
ret
mov
ins
icebp
jmp
pop
jb
(bad)
sub
and
cwde
xlat
or
enter
xchg
mov
ficom
test
test
lods
lods
mov
inc
jmp
arpl
inc
jg
ds
jmp
sbb
xor
enter
jl
adc
fcomp
cdq
popa
push
sahf
call
ret
inc
sbb
push
push
ffreep
and
cmp
retf
jp
pushf
dec
push
loope
(bad)
push
cmp
(bad)
mov
pop
jno
retf
rol
cmp
inc
fcom
push
push
or
shl
daa
movs
fs
aam
mov
jne
xchg
pop
(bad)
es
push
sub
(bad)
jge
test
push
dec
ins
jnp
ret
sbb
mov
cmps
nop
out
ret
mov
pop
pop
repz
push
nop
push
movs
das
and
pop
into
fcom
push
scas
int3
and
sti
jp
dec
push
js
jmp
and
xor
jbe
icebp
add
(bad)
and
sub
pop
xor
into
pop
xchg
mov
cmps
and
shr
es
and
(bad)
out
shl
jle
adc
cwde
adc
(bad)
scas
scas
lea
or
mov
push
cmp
mov
lock
sub
popf
in
add
ror
(bad)
push
push
scas
xor
int
cmp
or
sub
xor
sbb
fldcw
repnz
ret
aad
sub
out
pop
pop
icebp
and
push
sbb
iret
enter
mov
rol
out
push
add
pcmpeqd
or
repz
imul
xchg
sti
out
inc
leave
in
mov
jge
mov
cli
mov
jne
aam
mov
lahf
jmp
pop
mov
pop
test
mov
cs
xlat
std
iret
jge
push
sar
jns
int
cmp
mov
push
ss
in
cmp
mov
cmps
or
inc
sbb
je
daa
or
aaa
push
sbb
imul
push
out
pop
pop
fwait
add
cmc
jb
cli
in
push
cmc
push
sbb
sub
sub
xchg
lahf
mov
arpl
mov
mov
arpl
loopne
fdivr
cdq
je
daa
scas
add
fcomp
mov
in
mov
jp
jge
jg
(bad)
or
xchg
xchg
mov
stc
mov
into
xlat
mov
mov
jo
out
adc
mov
or
test
dec
mov
sub
cmp
mov
jecxz
outs
jmp
pusha
ins
call
fiadd
xor
cs
add
jmp
xchg
add
cmps
cmp
and
loopne
and
inc
mov
pop
test
(bad)
push
pop
add
and
pop
cmc
imul
fsub
es
(bad)
cmp
ins
std
sub
das
not
daa
dec
jns
arpl
push
mov
pusha
dec
push
push
jne
aam
daa
movs
jg
inc
add
and
enter
(bad)
or
int3
clc
ins
iret
gs
outs
inc
add
das
fstp
mov
frstor
jg
arpl
(bad)
lds
dec
or
and
push
xchg
xchg
outs
and
mov
in
mov
jecxz
stos
adc
dec
lahf
inc
jb
loop
dec
mov
adc
add
jmp
lock
pop
pop
and
sti
aas
retf
push
bound
test
lods
mov
push
sbb
daa
mov
cmovb
outs
aaa
es
pusha
ss
sbb
pop
mov
sbb
not
mov
mov
sahf
push
pop
xchg
addr16
rol
dec
stos
jl
cdq
dec
aam
xchg
ror
pop
jl
(bad)
sar
int3
jecxz
cmp
scas
and
in
hlt
jmp
in
xor
jne
xor
mov
xor
inc
cwde
and
dec
jne
fist
test
in
or
or
arpl
push
jb
aas
loope
shl
or
icebp
jmp
sub
stos
test
cld
pop
rcr
dec
xchg
cs
dec
dec
dec
push
bound
fstp
inc
ja
or
push
repnz
cmp
add
inc
or
loop
mov
add
addr16
add
jmp
loopne
mov
jne
push
je
fisttp
pushf
int3
and
lds
and
fld
xchg
ret
shl
adc
push
fsubr
cmp
jecxz
mov
loop
test
ret
jle
add
push
adc
aaa
not
repz
sbb
or
and
cmp
or
sahf
aad
push
frstor
mov
adc
lds
pop
jnp
and
cmp
scas
shl
add
mov
retf
xchg
push
cdq
pop
je
(bad)
mov
lahf
test
mov
popf
cmp
fs
idiv
adc
and
dec
adc
and
and
repnz
mov
xor
push
stc
push
je
adc
jmp
xchg
test
shr
pop
xchg
fstp
fs
sbb
or
ss
cli
bound
inc
retf
inc
stos
jbe
pop
imul
cmp
push
cmps
mov
jle
outs
and
jbe
pusha
pop
mov
(bad)
retf
or
mov
repz
push
mov
mov
pusha
dec
inc
addr16
or
pop
stc
cli
sbb
in
jno
scas
call
mov
shl
(bad)
repz
jbe
and
inc
enter
ds
mov
xchg
xor
fs
daa
pop
ins
std
adc
sub
or
sbb
fstp
inc
not
fucomip
pop
inc
in
in
cmc
add
push
dec
add
cmp
mov
adc
mul
jg
jg
shl
pop
in
jne
sti
and
int
and
xchg
and
fwait
adc
push
lods
cmp
outs
daa
les
push
mov
adc
adc
mov
ret
(bad)
xchg
add
in
out
jle
push
sbb
ja
dec
and
je
iret
xlat
dec
test
stc
jp
xchg
xor
push
into
mov
bound
dec
cmp
xchg
pop
stos
fmul
repnz
sub
pushf
xchg
imul
sbb
pop
(bad)
xlat
je
sbb
pop
(bad)
ins
sbb
loop
and
cs
jbe
mov
repz
test
sbb
jns
cmp
xchg
inc
bound
(bad)
(bad)
mov
add
push
cmps
inc
xor
ja
call
add
jae
not
xlat
movd
lock
es
cdq
lahf
jns
iret
(bad)
outs
adc
inc
into
neg
mov
adc
mov
fcomp
inc
mov
out
or
adc
(bad)
shl
cli
movs
xchg
retf
(bad)
or
mov
data16
pusha
jmp
inc
mov
enter
push
sub
adc
adc
scas
popf
mov
dec
into
mov
mov
sbb
shl
scas
add
test
pusha
mov
cmps
jno
imul
ror
push
pop
ss
add
out
repz
mov
imul
(bad)
js
push
xor
cmp
(bad)
or
add
mov
adc
addr16
mov
push
or
sbb
pop
int
shr
xchg
call
cld
mov
sahf
popa
ror
cli
addr16
push
rcl
jle
and
mov
mov
or
cld
loope
xor
mov
adc
ret
mov
aam
or
aad
retf
nop
cmps
mov
outs
mov
pop
xor
repz
mov
les
pop
xor
push
fcmovb
dec
shr
pop
repz
mov
addr16
fstp
xor
lock
jmp
push
add
sub
mov
popa
out
mov
aaa
pop
xchg
push
fs
ret
adc
mov
add
jmp
mov
out
xchg
xchg
fdiv
and
adc
xor
ja
sti
es
sahf
jb
loopne
movs
push
lds
ficomp
cmp
pop
imul
data16
xor
dec
lods
inc
fld
ror
mov
adc
inc
xchg
rol
cli
mov
inc
jmp
(bad)
mov
call
retf
or
nop
neg
call
pop
iret
cmp
ds
leave
neg
mov
imul
stos
sbb
mov
loopne
pop
jno
pop
ds
jle
jp
lahf
mov
cmps
stos
loop
in
mov
movs
shl
rol
cmps
ins
cs
cmp
call
jmp
pusha
rcr
cmp
add
mov
sub
sub
push
movs
mov
xchg
lock
mov
mov
mov
dec
ja
cwde
mov
mov
adc
lea
add
pop
in
data16
fimul
pop
push
fsub
sub
and
stos
cmp
sbb
add
fcomip
sub
stos
adc
out
test
out
xor
clc
pop
pop
mov
(bad)
adc
(bad)
shl
das
pop
cmp
arpl
dec
xor
dec
xor
xchg
mov
div
movs
nop
ror
jle
div
lahf
pop
dec
push
and
ret
jne
xchg
sahf
or
sub
inc
dec
and
dec
aad
sbb
add
pop
test
adc
mov
sub
lahf
ficomp
pop
fldl2t
add
mov
xchg
and
rcr
or
jbe
icebp
mov
mov
jns
fxch
mov
outs
sahf
sub
sbb
(bad)
out
loopne
retf
ret
cwde
mov
(bad)
jae
mov
mov
inc
mov
imul
mov
ret
lods
les
fmul
in
push
xor
add
hlt
pusha
inc
push
cmps
int3
sub
mov
xchg
addr16
icebp
jmp
mov
or
mov
xchg
pop
xchg
scas
aas
mov
xchg
je
or
push
jmp
shl
and
mov
or
imul
pop
inc
(bad)
mov
add
fs
inc
and
mov
push
idiv
test
outs
loopne
cmps
outs
jmp
mov
outs
rcl
js
sbb
pop
pop
clc
jmp
sbb
or
pushf
jg
mov
or
or
(bad)
add
xchg
into
ds
mov
in
es
les
push
or
mov
add
or
aaa
sbb
sub
jmp
bound
push
clc
loope
xchg
adc
lods
jns
outs
ins
neg
mov
sbb
fadd
mov
imul
inc
sbb
dec
or
pop
push
(bad)
jmp
xor
sahf
xchg
cmc
les
pop
addr16
dec
es
aam
sub
jecxz
cmc
fimul
int
pop
arpl
push
ins
ja
mov
lea
jne
cwde
jmp
(bad)
pop
or
mov
test
repnz
or
xor
(bad)
dec
dec
jmp
sbb
pop
xchg
add
jge
mov
xor
add
out
and
retf
fiadd
inc
mov
mov
add
jno
dec
ds
outs
aam
jg
adc
sbb
xchg
jp
in
lock
into
in
or
test
pop
fild
push
mov
inc
not
test
popa
in
hlt
mov
fdivrp
xor
imul
fadd
push
xor
sub
push
adc
pushf
and
add
ja
fst
cmp
sbb
aaa
add
ret
pusha
xor
sub
pop
dec
(bad)
leave
and
pop
sbb
inc
maskmovq
mul
fdiv
push
test
retf
mov
sub
jne
fidiv
jge
imul
inc
test
stos
adc
sub
sahf
add
or
pop
sbb
sub
sub
dec
sbb
jmp
push
test
(bad)
add
push
rol
dec
icebp
and
sbb
jge
dec
inc
sbb
sbb
push
jmp
mov
fs
cdq
and
(bad)
xchg
and
nop
xchg
fisttp
cdq
in
gs
xor
out
fs
gs
and
xchg
iret
xchg
push
fistp
sbb
sbb
enter
sub
fcomp
mov
or
mov
int
or
(bad)
push
loope
sub
lock
inc
add
cdq
mov
pushf
add
mov
mov
call
call
lods
into
sar
pusha
adc
ret
(bad)
je
vpunpckhqdq
and
out
mov
xchg
(bad)
repz
stos
sbb
jmp
loop
jecxz
xor
xor
dec
ja
mov
aad
movs
sbb
ja
loope
out
hlt
sub
xlat
sbb
test
test
sbb
adc
lods
retf
daa
mov
jmp
shr
out
adc
mov
lds
xchg
xchg
imul
inc
ds
fdiv
in
sbb
das
jbe
inc
cli
ss
es
jecxz
aad
imul
mov
add
(bad)
push
mov
adc
test
cwde
test
dec
ficomp
enter
mov
shl
movs
stc
cmp
out
sets
(bad)
into
data16
xlat
dec
or
outs
outs
pop
or
enter
aaa
movs
pushf
xchg
jp
mov
out
cmc
pop
outs
movs
cmp
ror
inc
shr
in
outs
ret
mov
fs
sub
mov
jbe
sti
mov
mov
fstp
repnz
std
outs
mov
mov
rol
dec
xchg
or
ficomp
out
hlt
xor
adc
dec
stos
cmp
inc
sbb
test
xor
cmp
leave
bound
or
xor
pop
dec
hlt
push
cli
(bad)
cli
repz
ret
cmp
adc
sub
ret
inc
fwait
mov
mov
test
imul
shl
shl
out
or
push
bound
sub
out
in
retf
cmp
shl
adc
cmp
imul
pop
daa
int
sbb
jo
data16
xchg
jle
aad
cmp
imul
call
or
(bad)
not
retf
int3
cli
pop
frstor
loopne
gs
push
sbb
jg
inc
mov
mov
add
sub
inc
not
into
mov
xor
shr
sub
cmp
lea
cmp
paddq
sub
scas
sti
je
test
xchg
push
popa
mov
push
mov
(bad)
in
leave
gs
movs
jb
imul
jmp
std
pop
pop
shl
cs
sbb
add
rol
dec
cmps
fistp
mov
pop
pop
sub
jle
imul
dec
jno
clc
mov
pop
inc
cmp
xchg
int
mov
cmps
adc
mov
mov
xor
test
inc
jb
adc
or
sbb
add
xor
jae
aas
pop
mov
jns
retf
stos
inc
mov
sub
sub
jmp
pop
shl
aaa
push
fptan
xor
cdq
std
int
sbb
pop
in
es
xchg
inc
into
mov
push
call
imul
stos
jmp
xchg
bound
std
and
ss
(bad)
arpl
xor
cmps
loope
ja
cmp
xor
fwait
mov
dec
arpl
push
push
rol
fldcw
push
(bad)
repz
jge
ret
sahf
dec
retfw
mov
jp
mov
jo
jp
xchg
jge
pop
push
pop
xor
xor
fcomp
push
inc
test
fcom
cmp
mov
scas
jle
mov
xchg
shr
adc
into
bound
adc
idiv
daa
outs
sub
and
sbb
pop
sbb
repnz
repnz
popf
dec
cmps
in
adc
push
cmp
in
cmps
hlt
pop
xchg
enter
sbb
mov
mov
or
pusha
sbb
mov
cmp
xlat
mov
bswap
pop
add
inc
pop
outs
pop
jg
ds
cmps
loope
pop
or
push
dec
xor
xchg
push
sbb
mov
fild
aas
stos
pop
and
jnp
cli
add
pop
in
jl
dec
outs
fisttp
stc
cli
cdq
pushf
dec
repz
aaa
mov
xchg
xchg
pusha
push
mov
iret
xchg
adc
inc
retf
fucomp
adc
xor
jne
out
call
mov
unpckhps
mov
ins
pop
aaa
sub
mov
out
push
fmul
mov
mov
call
mov
pop
cmp
(bad)
jmp
push
adc
xchg
push
call
jp
fdiv
mov
retf
xor
or
mov
jmp
jb
inc
jmp
(bad)
in
pop
jne
and
add
fucomip
fs
(bad)
das
icebp
sbb
inc
mov
dec
mov
sar
lods
dec
and
clc
sbb
(bad)
ja
sahf
out
xchg
rol
xor
cmp
jmp
shr
stc
and
add
xor
pusha
inc
mov
test
leave
mov
pop
pop
sbb
popa
in
add
stc
fwait
ret
jbe
rcr
adc
pop
and
xchg
mov
mov
fsubr
out
cmp
jnp
movs
imul
push
dec
add
pop
mov
pop
push
mov
sub
daa
imul
sbb
push
xchg
scas
jmp
or
lods
call
mov
push
or
clc
inc
mov
dec
je
outs
popf
outs
bound
xchg
jp
cdq
frstpm(287
inc
imul
in
and
call
mov
pop
sbb
sbb
enter
fs
jmp
leave
or
enter
xor
and
in
and
mov
scas
ja
arpl
mov
(bad)
mov
dec
and
xor
cmp
mov
cs
and
jecxz
out
mov
lds
mov
mov
pop
test
std
jns
cmc
inc
cvtpi2ps
mov
fsub
(bad)
or
in
ror
mov
nop
cmc
popa
jge
push
dec
pop
lods
loop
jmp
xchg
shl
xchg
xchg
cmp
and
dec
sbb
add
cmps
stos
ins
aaa
adc
sbb
xor
(bad)
cmp
loope
imul
outs
xchg
and
shl
jl
stc
fabs
cdq
mov
pop
xchg
out
xchg
pusha
jbe
les
push
xlat
inc
cmp
mov
iret
mov
mov
cld
sub
jnp
popa
mov
sub
(bad)
in
xchg
call
jae
mov
scas
xlat
cmp
lods
das
jbe
lods
inc
sbb
hlt
cmps
mov
or
push
mov
add
test
test
adc
into
mov
daa
mov
mov
cmp
sbb
in
dec
imul
popa
inc
add
fld
ret
das
add
test
popf
gs
loop
inc
adc
lods
popa
icebp
adc
imul
xlat
loop
arpl
cmp
push
mov
in
fistp
nop
and
popf
pop
shl
cmp
test
adc
fs
lods
inc
test
ret
mov
push
iret
mov
mov
fwait
test
push
aam
cmp
or
daa
movs
and
cmp
lods
dec
(bad)
fcom
fs
xor
sbb
mov
xchg
cmp
imul
fst
push
or
rcr
movs
mov
mov
sahf
jae
cmps
pop
mov
dec
inc
sub
xor
rcl
cs
cmp
jbe
ficom
xor
xchg
dec
cmp
icebp
mov
aam
cmps
add
shl
cmps
dec
and
pop
adc
add
sbb
retf
(bad)
mov
aas
int
xor
test
lea
or
mov
repz
scas
xchg
jnp
bnd
add
mov
std
test
push
sub
dec
leave
cmp
add
fs
jb
mov
dec
pop
jp
inc
mov
pop
ret
cmp
pop
sub
dec
(bad)
aam
lods
adc
aas
mov
std
sbb
gs
int3
push
add
inc
(bad)
enter
aad
mov
std
dec
mov
fisub
xchg
add
add
inc
xchg
mov
inc
call
xor
stos
ins
fisttp
repz
push
nop
pop
or
test
aaa
rcl
mov
hlt
jmp
and
mov
inc
sbb
xchg
mov
pop
mov
enter
mov
xlat
cmp
cld
push
adc
ror
fldenv
loopne
ins
out
sub
idiv
cld
add
sub
lods
cmp
aas
pop
jg
ins
push
jmp
fimul
jae
push
inc
or
mov
jbe
xor
dec
ds
fcomp
or
adc
sbb
and
enter
mov
push
pusha
dec
sbb
and
push
push
fwait
inc
lahf
inc
std
push
repz
lea
loope
add
retf
add
cld
jmp
es
add
or
repz
pop
xor
ret
cmp
repnz
loop
in
sub
adc
xor
(bad)
cdq
aam
pushf
jmp
cmp
test
and
mov
cmps
mov
pop
pop
leave
xchg
pop
adc
sub
or
mul
and
lds
or
lds
xchg
adc
icebp
mov
jno
inc
cdq
cmp
fwait
mov
pop
jmp
scas
pop
or
mov
jo
out
jge
test
add
mov
dec
ret
or
dec
ss
pop
xchg
test
sub
push
pop
sahf
ret
cdq
hlt
xchg
outs
jae
and
test
or
pushf
dec
jns
mov
adc
out
inc
scas
leave
cmp
and
fist
cmp
xchg
in
aaa
adc
pop
xor
adc
dec
cmp
das
xchg
sub
inc
fist
mov
jmp
jmp
fs
push
push
nop
movs
movs
imul
in
fmulp
imul
push
mov
and
lds
ss
data16
and
or
cld
cmp
pop
xchg
ins
clc
fimul
dec
fild
mov
xlat
or
loope
dec
stc
nop
jnp
mov
jg
adc
fist
xor
mov
and
ret
pushf
pop
(bad)
and
mov
mov
in
jo
test
ret
call
add
movs
pop
push
jle
push
out
xchg
adc
adc
and
stos
xchg
out
sub
jmp
int3
repnz
(bad)
retf
es
cdq
movs
sahf
dec
and
push
or
cmp
jo
pop
fimul
test
leave
push
jl
icebp
jb
push
jns
fadd
xchg
adc
fist
jp
stos
xchg
xchg
mov
in
dec
pop
cmp
vmovaps
jb
out
mov
add
push
das
pop
cmc
pop
cmc
movs
xchg
add
inc
ins
mov
test
inc
paddq
xchg
cmps
test
push
ds
loop
xor
adc
lods
xchg
mov
(bad)
pop
rcl
mov
cmp
retf
ds
mov
sub
movs
xor
cmp
push
pop
lock
jno
jecxz
stc
stos
adc
dec
outs
sahf
xchg
pop
je
imul
jmp
outs
xor
or
(bad)
pop
clc
sbb
xor
cwde
movs
call
and
aam
adc
pop
shr
push
jg
int
hlt
cmp
fistp
aaa
xor
sub
rol
jp
iret
jne
sub
or
sbb
loop
popa
xchg
push
cmp
repnz
and
xchg
jg
je
dec
cmp
sub
jnp
pop
loopne
and
cmp
mov
leave
dec
cli
mov
mov
jo
mov
pop
movs
jo
and
add
arpl
retf
jl
mov
enter
lahf
mov
sub
xchg
(bad)
rcr
pop
in
ret
push
xchg
push
mov
and
cmps
mov
fisub
add
pusha
iret
scas
std
in
xchg
bound
push
dec
add
jp
xchg
test
fisub
xchg
dec
je
mov
jbe
mov
pop
fwait
mov
pop
ds
jae
sbb
add
or
sbb
rol
push
enter
dec
in
rcl
repz
test
aad
ins
daa
aam
sbb
and
mov
lock
xchg
jae
pop
sub
push
into
mov
mov
cmps
dec
shl
retf
xor
es
ror
xor
sub
push
jae
inc
dec
scas
adc
dec
sub
mov
scas
mov
retf
test
mov
cmp
mov
ins
cwde
(bad)
in
leave
movs
pop
add
dec
lods
popa
shr
aas
xor
je
or
push
pop
mov
dec
mov
or
(bad)
cli
cmp
cmp
mov
xlat
and
iret
std
outs
not
push
shl
les
clc
cmp
rol
mov
mov
aam
jl
jno
adc
lock
dec
cdq
into
cmp
xchg
cld
jle
and
int3
sbb
aas
mov
lock
jge
js
adc
mov
cmp
stos
outs
test
mov
dec
xor
repnz
add
cmps
pop
pop
stos
mov
sbb
and
mov
xchg
push
mov
popf
call
sar
lock
fwait
ins
aad
fcom
push
dec
mov
add
(bad)
inc
add
push
push
hlt
mov
xor
stos
mov
dec
cs
(bad)
adc
leave
sbb
xor
pop
cli
scas
addr16
push
mov
fwait
mov
fcom
shl
mov
adc
ins
cdq
cdq
pmullw
sub
daa
enter
adc
pusha
data16
push
mov
or
fistp
adc
push
ds
cmp
dec
mov
loopne
(bad)
push
mul
sub
ror
(bad)
dec
setne
or
addr16
pusha
xchg
cmp
and
pop
int
push
mov
pop
mov
in
and
jecxz
pop
out
push
sub
mul
sub
leave
(bad)
xor
push
neg
inc
or
mov
push
mov
iret
xchg
imul
and
sbb
mov
jae
ss
pushw
or
jmp
sub
fmul
adc
mov
fwait
test
or
sbb
enter
cmp
inc
adc
test
push
sbb
cld
mov
iret
push
push
int3
scas
pop
mov
jns
inc
outs
arpl
int3
adc
cmp
out
pusha
mov
leave
mov
and
inc
and
push
xor
aas
lds
(bad)
xchg
mov
and
add
adc
push
outs
jnp
imul
out
movs
and
cdq
lea
int3
cmp
(bad)
ins
mov
dec
test
pop
pop
sar
sbb
push
cwde
call
push
aam
std
nop
test
add
arpl
mov
ror
repnz
(bad)
mov
ds
(bad)
pop
xor
xlat
cwde
xor
nop
les
sub
out
xor
inc
ins
jg
ins
nop
test
sub
mov
adc
push
lahf
int3
movs
dec
push
outs
stc
or
outs
jne
jo
inc
or
cmp
les
lds
repz
(bad)
xchg
fld
jbe
call
cmp
lods
jp
mov
xlat
dec
push
dec
sub
inc
mov
and
sbb
std
in
ror
scas
cmp
ror
jle
mov
xrelease
fdivr
sbb
data16
cld
xor
or
pop
(bad)
mov
cmp
or
cmp
pop
xchg
sub
xor
sub
mov
call
nop
xchg
push
jne
call
cs
mov
xor
aad
and
dec
push
push
sbb
mov
pop
mov
cmps
(bad)
sbb
lods
scas
daa
sar
inc
jl
jns
mov
inc
outs
add
div
mov
adc
leave
inc
inc
cmp
ss
or
int3
sub
leave
les
jne
xchg
repz
in
sbb
mov
pop
xchg
sbb
sub
pop
retf
inc
add
popf
aad
aas
xchg
loopne
and
or
clc
imul
mov
dec
xchg
(bad)
daa
inc
jmp
shl
bound
cld
pop
cmp
fcmovu
push
imul
fist
sbb
jne
jo
shr
shl
mov
cmp
inc
lock
repz
shl
pop
into
add
stos
ud0
hlt
sbb
dec
mov
jae
mov
mov
retf
sub
or
lods
shl
(bad)
(bad)
stos
jne
sub
call
fnstcw
jg
xchg
pop
mov
bound
mov
fist
and
cmp
icebp
js
rol
fwait
loopne
test
and
pop
and
pop
dec
mov
mov
pop
repz
add
dec
and
sub
push
aaa
mov
xor
and
loopne
inc
loop
pop
test
ror
sub
and
les
sahf
or
xchg
xchg
fild
frstor
cmps
adc
xchg
sub
sbb
or
iret
popf
aam
push
cmp
dec
lea
shr
jg
xor
(bad)
mov
cmp
adc
dec
outs
js
sar
scas
xchg
scas
sub
adc
inc
sbb
cmp
and
inc
xlat
(bad)
xchg
xchg
cmp
pop
ds
lds
jmp
mov
lods
push
adc
mov
pusha
mov
(bad)
cld
sub
je
fisubr
std
jl
arpl
std
mov
cmps
jg
imul
into
hlt
out
shl
punpckhwd
add
xchg
sub
and
loope
and
adc
in
int3
enter
sahf
sbb
ror
fwait
mov
std
rcr
popa
sbb
add
loopne
cmp
cwde
jb
jmp
popf
outs
stos
add
imul
pop
dec
enter
(bad)
adc
jnp
dec
loope
or
sbb
inc
mov
cli
mov
mov
inc
ds
dec
inc
icebp
adc
mov
fdivr
pushf
out
cmps
mov
daa
cdq
mov
ins
inc
cmp
int
mov
mov
add
and
pop
dec
xor
shl
lahf
iret
mov
mov
push
icebp
inc
(bad)
mov
jne
cmp
mov
cdq
mov
repz
and
cdq
inc
xchg
aas
mov
lods
or
xchg
es
imul
push
mov
aas
je
mov
daa
dec
call
ror
scas
and
fld
in
push
jb
push
sub
push
in
mov
clc
mov
add
push
das
leave
test
call
mov
mov
push
std
mov
push
sub
mov
pop
sbb
cli
arpl
ret
sbb
and
xchg
mov
movs
cmp
cmp
rol
jecxz
push
retf
daa
(bad)
ror
sub
jne
mov
loop
(bad)
cmp
in
rol
or
push
pop
sbb
xor
and
out
cmp
inc
sub
repnz
dec
mov
jne
push
lds
(bad)
fist
dec
xor
mov
rol
movs
cmc
add
inc
inc
pop
push
mov
(bad)
xchg
xchg
loop
out
jle
xchg
push
movs
dec
adc
jb
dec
xor
jmp
or
add
std
cmc
nop
fcomp
shr
(bad)
push
and
into
mov
xor
into
sub
icebp
or
test
icebp
bound
std
adc
jno
sbb
(bad)
pop
cdq
dec
aas
rcl
add
or
test
ins
in
(bad)
xchg
xchg
out
aam
sbb
bound
aas
fwait
xor
jne
daa
dec
adc
rcl
cmp
add
jecxz
inc
test
std
lahf
fdivr
int3
cmc
adc
and
aam
xor
xor
mov
inc
or
into
push
inc
jmp
mov
inc
les
cmps
sbb
cmc
mov
pop
push
add
or
jno
fst
loopne
xor
push
cmp
out
or
mov
sub
out
ins
enter
sbb
mov
loope
and
sub
cmp
mov
jns
mov
inc
push
pop
adc
(bad)
mov
outs
mov
mov
xor
jle
fwait
sbb
ja
mov
xchg
and
adc
jmp
fwait
xchg
push
retf
iret
clc
rcl
pop
sub
pop
lea
(bad)
pop
outs
aam
jo
adc
test
cmp
sub
sub
mov
sub
rcl
inc
push
mov
cmp
cs
mov
inc
lds
call
mov
(bad)
pop
dec
jnp
jne
pusha
xchg
jle
add
xchg
inc
xor
inc
test
(bad)
xchg
scas
and
push
vpsubw
repnz
daa
push
and
shr
clc
in
ret
pop
push
xchg
sub
frstor
out
int
cmp
ret
loop
imul
xchg
and
out
add
cdq
mov
call
jecxz
je
sbb
jae
(bad)
push
lock
in
sbb
fcomip
jl
pop
mov
repz
ss
ins
push
nop
sub
inc
dec
cmc
shl
cmp
cmp
push
dec
push
out
add
nop
fnsave
or
lods
cmp
jae
mov
xchg
(bad)
(bad)
ins
push
es
jmp
add
lock
sbb
nop
mov
jo
je
popf
sbb
in
xchg
xchg
(bad)
clc
cdq
pop
push
aas
loope
adc
cmc
test
push
push
pmaddwd
test
push
cdq
sub
dec
aas
in
cmp
int3
mov
xor
or
jmp
mov
pop
sbb
dec
fist
add
cli
jns
mov
cmp
cwde
mov
adc
rcl
dec
outs
outs
out
jmp
add
mov
rcr
inc
mov
mov
xor
push
cmc
adc
pop
dec
aaa
int3
add
iret
xor
cmp
xchg
jle
sub
cmp
pop
dec
mov
mov
jge
outs
push
and
mov
or
pop
fwait
sub
pop
std
mov
lods
in
iret
int3
jmp
stc
cwde
aad
test
mov
inc
dec
cdq
pop
call
enter
loopne
jmp
xor
mov
cli
call
imul
test
add
pop
ins
fsub
sbb
je
fs
xor
dec
sbb
dec
push
sti
mul
dec
cmp
pop
pushf
or
jge
loope
push
and
push
and
fnstcw
aam
dec
sbb
add
and
test
push
pop
lds
adc
(bad)
or
pop
push
and
jne
push
sub
pop
ret
rcl
push
scas
add
adc
or
add
jmp
inc
cli
mov
shl
sbb
ds
mov
inc
scas
test
test
add
icebp
movs
push
test
add
xchg
add
gs
data16
outs
mov
in
and
dec
or
lea
inc
call
repnz
bound
out
sbb
rol
jb
add
aaa
dec
xor
sahf
mov
stc
ja
jbe
ret
arpl
pop
std
jmp
movs
xchg
outs
lods
aam
daa
push
cmp
(bad)
popf
outs
inc
mov
adc
jae
test
jle
mov
in
loope
test
push
inc
push
jg
jo
push
neg
adc
cmps
sub
ds
sbb
pop
icebp
stos
dec
push
aad
div
ins
ins
movs
xor
fadd
jge
mov
call
pop
mov
cmc
cld
test
adc
xor
cmp
jmp
lods
leave
and
jo
push
ss
or
inc
add
je
js
push
aas
out
aaa
idiv
les
jg
push
imul
mov
cmp
ja
int
popf
sub
inc
jp
ror
sbb
dec
addr16
push
jno
xlat
in
lock
mov
sbb
inc
mov
cmp
xor
cli
xchg
stc
cmc
inc
cmp
cwde
xchg
sub
mov
cmp
push
xchg
aad
std
jns
movs
or
push
aaa
out
(bad)
xor
add
popa
mov
cdq
popf
(bad)
pop
test
jne
pusha
jbe
(bad)
int
xor
jle
push
clc
les
retf
fcom
jmp
jecxz
xor
cs
push
lods
loopne
aad
add
jg
jns
xchg
jb
mov
push
ret
inc
jecxz
mov
cmp
push
inc
push
mov
pop
das
shr
xor
mov
and
add
sar
in
inc
add
call
xchg
stos
imul
mov
es
stos
mov
bound
jg
movs
inc
dec
lahf
push
out
enter
xor
inc
out
add
sbb
jo
and
and
pop
test
inc
mov
clc
mov
movs
shl
scas
dec
mov
jl
(bad)
aad
mov
adc
mov
js
push
sahf
xchg
add
pop
ret
mov
test
xchg
inc
jns
push
or
test
jge
inc
aas
push
(bad)
sbb
arpl
ja
sbb
push
retf
pop
adc
sbb
(bad)
push
cdq
addr16
jmp
mov
sahf
(bad)
push
push
movs
sub
add
popf
push
or
jbe
nop
xor
adc
xchg
push
jno
push
inc
xchg
push
jl
rcr
stos
jecxz
pusha
lds
js
cwde
cs
lea
cwde
dec
popf
lea
(bad)
fnstsw
adc
in
or
or
adc
stos
cmp
xchg
(bad)
jmp
call
fdiv
mov
mov
out
dec
xchg
(bad)
mov
cmp
sub
push
ucomiss
sbb
pusha
ret
fstp
mov
mov
loop
scas
out
push
mov
sbb
bnd
fisubr
mov
retf
add
inc
push
xchg
cmps
xchg
enter
xor
fdiv
test
ins
cmp
adc
iret
push
mov
shr
or
and
mov
xchg
outs
inc
and
stos
mov
dec
xor
dec
cmp
movs
icebp
sub
cld
shl
mov
lods
mov
xchg
lock
adc
add
jne
retf
(bad)
pop
push
lahf
arpl
fcom
add
sbb
xor
jbe
mov
ret
jmp
popf
test
jo
jmp
loopne
cld
scas
rcl
dec
push
shl
add
xor
fstp
les
dec
repz
mov
icebp
(bad)
ins
mov
mov
jp
rcr
js
sub
inc
bound
adc
jle
cld
loopne
aas
lds
pop
test
jg
clc
clc
mov
mov
rol
lods
in
and
into
out
sub
mov
jp
jo
outs
mov
repnz
or
and
mov
mov
lods
(bad)
or
lea
sub
shl
xchg
or
pop
shl
and
add
ins
clc
loopne
inc
(bad)
xchg
xchg
lods
push
or
gs
imul
cwde
sbb
sub
and
cmp
adc
jae
inc
in
xchg
mov
fiadd
out
jmp
add
rcr
stos
loop
xor
adc
iret
daa
mov
fstp
int
cdq
hlt
push
test
cdq
sar
push
inc
pop
jmp
xlat
lods
pop
(bad)
and
push
ins
cs
inc
nop
pop
jg
inc
cmp
mov
sub
test
sahf
ret
cwde
adc
pop
push
aaa
dec
pop
(bad)
popf
jg
dec
mov
cmp
inc
mov
lods
push
fs
popa
pop
ss
ja
pop
fs
cmp
test
dec
loope
js
mov
mov
in
hlt
(bad)
jmp
gs
jp
iret
packuswb
pusha
jle
xor
push
in
sub
cwde
shr
mov
aam
push
aaa
mov
mov
xchg
dec
out
mov
pop
push
mov
js
fisub
sbb
xchg
enter
bound
xor
dec
bound
or
cld
mov
cmovns
mov
sub
sub
(bad)
fistp
jae
mov
xchg
dec
xor
adc
(bad)
hlt
imul
imul
mov
jge
dec
int
enter
mov
iret
clc
xchg
cld
and
hlt
cli
fs
cmps
xchg
pop
adc
dec
es
loope
stos
ds
rol
movs
mov
jle
jbe
int3
out
mov
call
pop
outs
sbb
jmp
mov
outs
pop
into
mov
mov
add
js
jb
iret
cmps
mov
add
mov
inc
shr
xor
xor
bound
test
mov
dec
or
clc
imul
mov
test
fcomp
add
and
test
inc
sti
cdq
test
push
repnz
(bad)
cld
push
pop
xchg
sahf
out
out
cmp
sbb
or
lahf
mov
dec
pusha
pop
sub
ds
inc
pusha
or
xor
xchg
imul
loop
(bad)
cmps
push
out
(bad)
fidiv
xchg
cmp
movs
cwde
test
adc
dec
test
dec
rcl
cwde
lods
loop
and
retf
add
clc
sub
mov
inc
ds
mov
out
sub
shl
out
shr
pop
lods
int3
add
call
or
add
lock
loope
(bad)
dec
jmp
jg
sbb
xchg
sbb
mov
out
xchg
punpcklwd
sahf
or
jg
sahf
adc
shl
mov
push
inc
add
aad
pushf
in
push
stc
jae
mov
cmp
xor
jg
xchg
xchg
js
sub
pop
inc
xlat
add
in
push
cmc
cwde
dec
or
dec
es
out
mov
arpl
hlt
gs
sub
adc
mov
out
jg
mov
ss
out
js
mov
mov
push
push
adc
mov
(bad)
adc
outs
push
dec
xor
cmps
xchg
arpl
mov
shl
fist
repz
inc
cmc
ja
pop
inc
sub
iret
or
mov
adc
pop
mov
test
inc
js
repnz
sbb
and
and
test
sub
push
ret
gs
pop
ja
rcl
pop
pop
pop
cld
cmp
xchg
mov
fcom
fsub
jae
aaa
mov
clc
hlt
enter
jecxz
mov
adc
mov
adc
mov
out
sbb
xchg
cli
adc
push
push
jmp
inc
pop
mov
xchg
fisttp
div
jae
out
clc
jo
jge
or
mov
stos
mov
sub
push
sbb
rcr
add
or
popa
ins
push
inc
and
(bad)
data16
std
fs
push
push
jmp
fdiv
xor
out
mov
leave
xor
jecxz
pop
iret
mov
je
iretw
and
adc
loopne
pop
and
test
inc
outs
push
fadd
les
sbb
mov
ins
loop
call
and
mov
xchg
lea
into
lods
pop
das
cmp
sub
into
xor
lahf
dec
add
mov
inc
and
aad
sti
std
mov
or
pop
add
hlt
pop
inc
ins
shl
push
sbb
rol
and
shr
lods
data16
retf
repnz
dec
push
push
adc
pop
or
sub
jecxz
push
dec
aaa
cmc
or
hlt
addr16
loop
or
cmc
pushf
xchg
jne
lahf
mov
pop
adc
mov
int
mov
sbb
popa
lds
pop
std
xlat
retf
mov
mov
and
inc
in
lahf
nop
sti
inc
mov
dec
stos
hlt
add
popf
movs
pop
sbb
mov
push
std
repz
enter
pop
push
xlat
pop
(bad)
sub
sub
loopne
pop
mov
cmp
push
test
addr16
jg
repnz
in
std
dec
gs
xchg
movs
sahf
xchg
clc
jae
aad
mov
mov
jae
ret
movs
dec
push
(bad)
sub
push
nop
pop
adc
ins
add
pop
push
fst
and
sbb
loope
int
retf
cld
dec
ss
jo
push
mov
cmps
xchg
push
add
pop
cwde
adc
test
retf
mov
in
or
nop
or
mov
enter
daa
jecxz
std
push
outs
aam
into
mov
loope
cmp
(bad)
in
mov
xchg
xchg
ins
push
pop
cwde
sti
les
out
or
mov
clc
jae
or
adc
int
mov
mov
push
sub
gs
push
pop
dec
arpl
jp
sysenter
pop
add
int3
shl
aam
and
mov
bound
pop
leave
cmps
mov
push
add
xchg
adc
icebp
retf
dec
gs
mov
rol
push
mov
mov
mov
push
test
std
xchg
mov
cmp
cmps
fmul
fwait
push
ret
(bad)
(bad)
pusha
repz
add
push
push
mov
and
add
adc
jne
mov
mov
jp
push
pop
retf
mov
xchg
push
es
push
jp
pop
push
adc
cli
adc
xchg
cwde
cs
jmp
push
cwde
inc
clc
push
js
xchg
inc
repz
push
adc
jle
mov
push
mov
(bad)
xchg
jns
call
jnp
mov
add
jmp
into
and
loopne
jae
aas
inc
nop
jo
mov
adc
xor
pop
inc
xor
xchg
push
dec
ja
xor
clts
xchg
and
and
lods
push
pop
inc
test
push
in
test
xor
or
mov
aam
inc
out
push
arpl
inc
out
out
pop
cmova
fwait
ins
mov
stos
inc
pop
adc
(bad)
les
mov
dec
cdq
push
jecxz
hlt
fild
ror
inc
inc
cli
cmp
test
pop
and
dec
add
test
dec
lea
add
pop
mov
idiv
jns
jge
js
bound
dec
jb
inc
stc
clc
repnz
push
das
sub
in
repnz
popa
dec
in
jecxz
xor
sbb
fwait
jnp
into
sub
outs
jge
mov
and
push
add
jmp
pop
push
mov
cmps
lods
retf
ss
retf
jno
pushw
(bad)
sub
push
pop
lahf
jecxz
outs
jbe
pusha
push
(bad)
sub
push
lods
pop
jae
inc
movs
and
test
jno
leave
enter
mov
stos
sbb
aam
or
dec
mov
or
mov
lahf
inc
fisttp
push
hlt
pop
inc
push
movs
shl
jno
retf
(bad)
pop
scas
mov
and
fdivr
cmc
loop
mov
ds
rcl
mov
aam
retf
or
adc
movups
lods
ret
push
jmp
or
ror
aam
ds
xor
int
pop
mov
pop
in
test
out
cwde
mov
mov
cdq
xchg
sbb
pusha
neg
mov
fsubr
pop
dec
movs
pushf
and
mov
inc
xor
mov
jmp
pop
add
cmp
inc
inc
hlt
ret
xlat
push
arpl
adc
dec
repnz
add
mov
loope
enter
sbb
mov
in
xor
clc
sbb
mov
movs
xchg
nop
sub
sbb
leave
clc
rol
mov
mov
data16
mov
adc
outs
sub
test
aaa
jle
xor
mov
nop
push
jns
das
cld
retf
mov
jecxz
xchg
pop
pop
mov
dec
add
jbe
aam
dec
sub
daa
rol
xchg
jae
leave
retf
lock
(bad)
test
(bad)
loop
hlt
(bad)
test
pop
xor
in
out
mov
xor
mov
ins
fcmovu
adc
pusha
movs
loop
aas
mov
fld
xlat
lods
jns
fimul
adc
popf
or
push
gs
sbb
imul
sti
or
neg
int3
jno
mov
jbe
jns
xchg
stos
jb
enter
loope
xchg
and
inc
pushf
ror
enter
ja
je
mov
or
mov
fwait
ds
xor
xor
add
cdq
dec
sub
fwait
(bad)
out
dec
ret
movs
repnz
pop
inc
lahf
jmp
xchg
xor
inc
jmp
arpl
lea
jmp
and
stos
adc
pusha
mov
bound
xchg
movs
sub
or
mov
mov
cmp
mul
and
mov
retf
xchg
out
outs
mov
push
mov
or
jecxz
mov
retf
sbb
add
movs
sbb
add
and
mov
nop
ret
mov
push
(bad)
adc
xor
mov
aas
push
jl
jmp
imul
outs
jmp
jecxz
and
loopne
mov
pop
imul
mov
rcr
nop
pop
ud0
xchg
cmp
push
lods
or
(bad)
cmp
dec
int
pop
mov
stc
sub
fiadd
add
adc
std
pop
or
mov
push
jmp
ds
int3
inc
adc
inc
push
mov
or
and
imul
cs
cmp
sub
loopne
cdq
cmp
pop
and
fsub
and
std
xor
cs
cmps
test
fild
sub
out
xchg
jle
dec
sbb
popa
cmps
push
test
rcr
or
popf
push
fadd
sbb
lods
mov
or
int3
rol
rol
(bad)
push
call
call
or
push
stos
and
js
or
into
xor
nop
mov
mov
leave
and
or
loope
push
dec
arpl
div
movs
mov
loopne
adc
adc
es
jmp
mov
repnz
xchg
lea
push
movs
into
int
mov
xchg
pop
lds
dec
in
adc
pop
adc
sub
mov
or
dec
(bad)
in
fs
pop
pusha
or
or
mov
push
xor
nop
dec
(bad)
ret
inc
jle
loope
das
in
stos
sub
add
xor
sbb
push
mov
cmps
ret
xchg
in
mov
and
push
add
mov
out
pop
pushf
scas
mov
cs
add
repnz
scas
sti
push
and
mov
out
push
(bad)
mov
jmp
mov
out
aam
cmp
adc
jmp
pop
adc
scas
mov
lds
pop
xor
xlat
in
dec
mov
dec
leave
mov
dec
shl
and
aam
movs
ret
shl
rcr
stos
dec
addr16
sbb
adc
mov
and
mov
cs
xor
mov
ins
ror
inc
aad
stc
push
xchg
push
test
int3
dec
fisub
gs
adc
(bad)
jmp
stos
enter
loop
cmp
aam
pop
push
ret
int
cmc
dec
adc
dec
jge
inc
aad
test
pop
lods
sub
lahf
mov
pop
jno
mov
push
popa
push
dec
mov
mov
out
jno
inc
sub
ficomp
je
and
xor
push
lsl
push
sub
xor
mov
fld
mov
mov
mov
cmps
jmp
xchg
popf
xchg
imul
int3
movs
dec
cmp
mov
in
mov
cmc
cmps
pushf
out
ja
or
outs
mov
ins
xor
rep
xor
jnp
sub
mov
in
test
mov
cli
cmp
add
dec
ret
inc
pop
into
pop
dec
or
xchg
inc
movs
icebp
xchg
or
or
test
shr
pop
jno
retf
xchg
sbb
stc
in
arpl
gs
push
sbb
adc
fs
movs
stos
and
push
push
retf
stos
call
icebp
retf
shl
mov
fldcw
sar
inc
sub
ins
sbb
movs
mov
mov
cwde
adc
inc
(bad)
mov
cmc
bound
outs
les
jl
in
sbb
stc
xor
and
xchg
add
cld
das
push
jge
nop
lods
retf
xlat
push
jmp
jno
pop
add
dec
retf
adc
stos
in
jg
in
fs
rcl
add
(bad)
std
dec
ss
mov
xchg
mov
mov
and
or
(bad)
mov
push
ins
shl
mov
popa
(bad)
ficom
cmp
pop
or
jge
sti
cmp
into
mov
int3
outs
jne
je
and
inc
mov
jae
push
pop
jmp
ins
xlat
adc
sub
jmp
push
sbb
icebp
(bad)
jno
jecxz
fisub
shr
pop
mov
in
(bad)
xchg
jne
pop
or
sub
or
aam
mov
or
(bad)
int3
jge
int
pminsw
je
mov
mov
repnz
lea
mov
fidiv
pop
cdq
or
mov
repnz
adc
(bad)
xchg
jge
push
ds
sbb
cwde
mov
add
pusha
jbe
add
lea
in
in
mov
pop
fs
xchg
xchg
je
movs
fldenv
pushf
jg
dec
mov
cmps
test
loop
shl
push
sbb
or
add
pop
mov
jmp
mov
add
ja
add
inc
movs
sub
loope
xor
std
daa
cmc
mov
inc
(bad)
or
adc
in
xchg
sbb
test
mov
xor
or
nop
jb
mov
mov
mov
inc
or
jns
out
cld
(bad)
xchg
push
sub
push
lock
lods
imul
cmp
mov
addr16
xor
inc
xchg
and
sbb
stc
push
cmps
add
push
cmp
jmp
popf
fwait
dec
cmp
sub
xchg
das
sbb
stos
and
sbb
in
mov
mov
mov
cmps
and
adc
cmps
xchg
movs
fnstsw
stos
inc
rcl
inc
pop
mov
scas
pop
pushf
mov
sub
xchg
push
xabort
(bad)
aaa
je
sahf
push
xor
pop
inc
jno
push
retf
jnp
and
aas
ins
neg
sbb
test
pcmpgtd
mov
inc
call
jle
je
inc
jb
xchg
rcl
add
pop
lahf
and
test
mov
inc
adc
mov
push
or
xchg
fwait
call
test
jne
cli
test
xchg
mov
(bad)
jmp
mov
cmp
xchg
and
(bad)
jae
(bad)
mov
(bad)
in
(bad)
mov
adc
adc
push
cmps
mov
xchg
aas
push
ret
fcom
(bad)
sub
out
pop
cmp
aas
cwde
pop
fmulp
data16
sti
mov
jne
in
pop
xchg
test
sub
cmps
jne
les
pop
sub
add
lds
add
in
pop
retf
retf
adc
jbe
test
mov
cmp
addr16
in
mov
stos
mov
fistp
iret
ret
pushf
add
xor
pop
dec
xchg
pop
sub
pop
add
mov
data16
xsha1
or
mov
dec
xor
inc
not
dec
mov
scas
lods
sbb
(bad)
jecxz
das
inc
jl
xchg
repnz
loop
cmps
sub
cmp
shl
and
mul
xor
pushf
lds
pop
xor
rol
ret
ss
pop
dec
lahf
jmp
mov
rol
int
sub
push
mov
cmp
adc
stos
and
mov
ins
pop
idiv
shl
mov
cmp
lahf
je
cmp
push
gs
movs
sbb
lods
(bad)
mov
movs
sbb
xchg
inc
push
mov
add
fisub
(bad)
mov
xchg
jae
push
cmp
sbb
stos
or
sti
xchg
in
je
push
movs
fsub
retf
outs
jo
inc
mov
mov
into
int
cwde
hlt
imul
add
test
add
adc
(bad)
scas
test
or
mov
jns
loope
xor
out
sub
sahf
movs
push
js
xor
test
xchg
jl
imul
push
add
adc
inc
ja
push
cmc
out
cmp
pop
inc
push
popa
adc
div
(bad)
(bad)
jno
mov
cmp
ret
mov
jp
pop
loopne
jno
leave
pop
sbb
mov
jne
addr16
fisttp
imul
mov
and
sbb
inc
jmp
add
inc
dec
sahf
pop
jns
lahf
cwde
cmp
and
and
xchg
jp
mov
xchg
int3
pop
iret
das
xchg
mov
outs
inc
cmps
dec
and
bound
mov
movs
adc
cmps
pop
mov
mov
push
mov
in
jmp
jo
shl
fld
js
fadd
mov
jno
mov
inc
iret
data16
imul
xor
add
xchg
dec
ficom
inc
cwde
or
es
xor
mov
call
cwde
je
aad
outs
popf
jmp
and
dec
in
sub
fisub
in
xchg
xlat
hlt
dec
enter
dec
or
inc
cmp
stc
sub
mov
sar
call
pop
mov
add
sub
jno
dec
mov
repz
inc
in
fstp
mov
jnp
enter
gs
fldcw
adc
cdq
ret
adc
mov
cmp
pop
idiv
jae
test
mov
xor
xchg
mov
xor
adc
ja
sti
imul
inc
loop
adc
xchg
sti
mov
aad
inc
adc
xor
adc
cmp
mov
dec
shr
call
leave
cld
adc
dec
push
and
sar
pop
fidiv
dec
jbe
inc
ds
pushf
cmp
push
arpl
mov
fdivp
inc
loopne
push
dec
mov
xor
push
xchg
arpl
ret
dec
cwde
in
and
xchg
mov
mov
div
push
cli
pop
test
jl
mov
shl
jmp
in
nop
ds
jbe
out
dec
ror
out
movsx
adc
push
jb
xchg
mov
push
cdq
cmps
mov
(bad)
and
push
or
pop
sbb
jle
mov
fld
mov
das
mov
lods
and
ja
cli
loope
aaa
in
sti
outs
xor
popf
or
adc
sbb
mov
cdq
xor
pop
mov
outs
mov
pop
scas
movs
in
mov
movs
call
int
jmp
jae
mov
and
adc
jns
inc
xchg
mov
int
hlt
es
lods
and
push
pop
into
cmps
adc
gs
mov
or
mov
xchg
push
pop
cwde
in
jg
icebp
and
out
sub
int
xor
shl
out
adc
pop
and
out
and
cld
in
or
dec
(bad)
mov
cmps
cmps
xor
cmp
or
bound
(bad)
shl
xor
gs
mov
arpl
push
xor
les
addr16
je
mov
and
dec
icebp
adc
cld
stc
(bad)
xchg
mov
pop
pop
in
inc
loopne
dec
fdivr
test
adc
mov
or
mov
aas
xchg
mov
push
sub
arpl
pop
sub
and
add
or
retf
stos
call
call
mov
push
inc
pop
jo
pusha
call
(bad)
inc
jg
mov
pop
push
popa
aad
nop
test
js
jge
ins
push
out
js
mov
jp
out
push
push
inc
fs
pop
fld
push
sbb
jo
add
pop
push
loopne
sbb
pop
xchg
jp
jmp
daa
ds
dec
cmps
enter
movs
push
(bad)
(bad)
(bad)
and
xlat
das
inc
cmpxchg
test
mov
push
pusha
push
inc
push
idiv
call
movs
out
or
and
imul
neg
pusha
sbb
lahf
ficomp
xchg
and
sub
cld
add
xor
int
adc
push
fs
mov
jp
jb
mov
(bad)
jno
mov
mov
ds
sub
xchg
daa
ins
mov
add
inc
mov
ror
mov
pop
pop
aam
sbb
fst
out
outs
sti
fisub
movs
test
ret
sub
push
and
add
or
arpl
jbe
xlat
xchg
push
cmps
push
movs
nop
enter
xchg
inc
in
mov
or
mov
adc
out
(bad)
xor
aam
mov
mov
(bad)
sbb
out
test
stos
sub
pop
out
sbb
icebp
adc
fstp
fidivr
push
mov
mov
cmps
lods
fsub
pop
adc
mul
pop
out
in
sahf
shr
or
inc
in
fcmovu
dec
jmp
and
mov
scas
add
mov
and
out
sbb
dec
add
jle
pusha
xor
adc
xchg
adc
in
ja
lea
sbb
push
(bad)
and
iret
(bad)
sbb
cmc
das
sbb
je
cmp
ficom
fistp
mov
int3
and
out
inc
jle
aaa
lahf
pushf
and
xlat
push
sbb
or
sar
out
js
inc
loop
jg
push
movs
jnp
enter
jns
leave
mov
xor
mov
xlat
es
inc
jp
imul
xchg
cmp
mov
int
sbb
ins
and
pop
call
dec
xchg
ret
adc
pop
dec
or
dec
iret
clc
pop
iret
test
push
dec
rcl
cdq
mov
pop
jg
pop
mov
lea
jmp
mov
mov
repnz
icebp
sub
sar
repnz
(bad)
mov
fwait
es
enter
aas
mov
pop
mov
adc
lods
test
adc
and
lds
xor
pop
mov
dec
aas
xlat
or
int
xchg
int3
xchg
(bad)
icebp
retf
dec
into
int
sub
dec
sahf
lods
mov
cmp
push
adc
sbb
sub
jo
fs
repz
(bad)
push
stos
add
rcl
ins
and
dec
jo
push
mov
in
xchg
xor
mov
cmp
call
je
push
int
js
call
pop
xor
popf
mov
sahf
imul
stos
loop
or
add
adc
jne
push
popf
addr16
cwde
jecxz
add
push
mov
stc
es
adc
out
stos
xor
outs
pop
lahf
leave
mov
je
pop
sahf
jns
in
mov
pop
cmp
loop
mov
push
or
enter
and
sub
repz
popa
add
or
popa
inc
call
mov
adc
neg
dec
mov
stos
neg
cmps
and
xlat
push
jo
jecxz
add
je
(bad)
daa
xor
push
cli
je
enter
sbb
xchg
bound
pop
pop
xchg
scas
retf
mov
(bad)
call
mov
imul
dec
pushf
aas
and
mov
dec
fild
cmp
pop
push
adc
push
ss
ror
jnp
jne
scas
mov
cmp
test
rcr
inc
in
popf
(bad)
adc
aad
(bad)
into
retf
test
cs
shr
icebp
cmp
dec
dec
xor
iret
mov
add
xor
xor
clc
push
xchg
pop
jmp
rcl
lock
shr
mov
std
rcr
call
mov
mov
mov
push
arpl
sbb
test
pop
cmp
or
ins
jno
xor
fistp
dec
in
add
int
iret
sub
int
mov
in
add
bound
clc
enter
xchg
add
outs
into
jle
shl
popf
js
adc
les
fsubr
mov
mov
movs
add
test
xchg
push
push
jne
test
ret
jns
dec
sahf
dec
pop
jns
adc
mov
ss
push
mov
sbb
stc
retf
and
icebp
cmps
pop
dec
stos
xchg
pop
in
jns
pop
lods
fwait
cmps
int3
mov
ror
popa
push
and
mov
pushf
sahf
xchg
sub
jp
or
movs
out
mov
cmc
retf
cmps
dec
sub
sub
scas
pop
jecxz
pop
mov
mov
jne
in
outs
sub
adc
sbb
js
dec
mov
sahf
(bad)
dec
stc
stc
ins
inc
pop
shl
ins
push
loope
pop
mov
mov
imul
dec
and
mov
cld
out
jno
stos
add
ins
pop
mov
adc
dec
adc
jmp
stos
pop
mov
xchg
ja
popf
test
adc
inc
mov
mov
jecxz
mov
add
in
ds
(bad)
cmps
sbb
xor
imul
xchg
test
shl
xor
cmp
shl
pop
mov
mov
mov
iret
dec
mov
xchg
loopne
fdiv
xor
cdq
lds
xchg
aaa
mov
sub
cmps
jl
dec
neg
cmp
bound
dec
inc
or
repz
movs
dec
mov
das
dec
and
mov
adc
addr16
adc
jae
mov
(bad)
xlat
or
mov
mov
sahf
dec
cmp
jmp
lods
xor
imul
nop
ffree
lock
sub
jl
mov
mov
in
js
jmp
std
scas
push
jp
pusha
push
fwait
inc
repnz
jmp
push
fist
mov
pushf
out
bound
add
adc
cmp
les
int3
mov
gs
ss
pop
popf
mov
fld
sub
inc
sub
ja
outs
sub
sar
jns
mov
cmp
push
loope
test
mov
dec
xchg
jg
aad
icebp
sub
xchg
test
(bad)
daa
jg
adc
xchg
call
mov
push
imul
fsubp
xchg
sbb
inc
repnz
aam
ror
stos
retf
aad
lods
loope
push
stc
ins
dec
loop
mov
add
cmp
push
push
pushf
adc
fidivr
pop
dec
pushw
rol
scas
es
cmp
mov
in
sbb
sbb
stos
adc
shl
fcmove
mov
push
and
cli
test
adc
jne
and
pop
clc
into
stos
pop
xchg
je
jnp
adc
xchg
cmp
(bad)
pop
call
cmps
xrelease
int3
clc
sub
mov
popa
xchg
jmp
int3
out
int3
test
push
push
in
jne
and
inc
mov
lds
(bad)
or
dec
jno
jge
inc
cdq
or
sub
out
sbb
int3
jle
int
inc
cld
fcmovnbe
sahf
cmp
repnz
stc
dec
pushw
fild
inc
mov
mov
lds
gs
fwait
xor
push
pop
retf
pop
ror
and
cld
and
fiadd
sub
add
es
lahf
mov
cmps
sbb
cli
sbb
cmp
shr
push
fstp
call
inc
outs
jb
push
fld
(bad)
out
jl
and
or
cdq
popf
cld
add
movs
jbe
js
stc
loopne
es
aam
adc
jge
push
jae
ds
jo
out
(bad)
xchg
inc
or
pushf
add
out
pop
enter
sbb
fnsave
cmp
inc
mov
sbb
inc
pop
sub
cli
mov
sbb
mov
ins
scas
sbb
xor
inc
ret
xchg
dec
push
neg
std
push
ins
shr
add
jmp
mov
cdq
ret
push
or
test
mov
ja
out
retf
(bad)
jge
cmc
sbb
fild
cmp
imul
pop
or
out
outs
(bad)
jge
xor
add
cmp
mov
pop
mov
mul
js
stc
addr16
mov
jns
bound
(bad)
push
arpl
popa
or
lock
int
mov
clc
addr16
add
lods
nop
sub
adc
cli
mov
mov
add
pushf
cmc
test
adc
xchg
(bad)
fimul
jbe
and
adc
push
(bad)
aam
pop
xor
pop
xchg
in
cmp
fst
mov
inc
add
adc
jo
xchg
push
scas
jns
out
je
and
xchg
mov
mov
fst
leave
jp
mov
les
setbe
mov
aam
xor
int
and
jge
mov
popa
mov
ss
js
mov
fldcw
rcr
pop
in
sbb
and
mov
sub
pushf
lock
aaa
fnstsw
xor
pop
sti
bnd
push
xor
mov
pop
push
pop
ret
gs
or
shl
(bad)
loop
imul
(bad)
ins
jbe
aad
or
stos
pop
cmp
xlat
inc
hlt
into
add
push
mov
xor
aam
sub
and
ror
movs
push
repnz
(bad)
ret
mov
inc
arpl
out
adc
addr16
cmc
enter
retf
cmp
push
out
add
xor
iret
jg
cld
sar
inc
adc
xor
xchg
or
popf
xor
(bad)
mov
inc
and
add
mov
and
es
fwait
mov
into
adc
cld
add
pop
stc
mov
js
adc
xor
(bad)
push
fucomp
and
inc
in
movs
mov
fninit
sub
mov
ret
das
and
pusha
mov
cmp
jmp
dec
stos
mov
add
inc
js
mov
adc
pop
lods
lahf
in
xchg
loope
and
nop
jl
sbb
mov
xor
adc
mov
mov
and
lock
pop
mov
push
xchg
dec
adc
add
pop
xchg
sub
xor
outs
inc
sbb
scas
xchg
jns
lods
add
aam
test
sub
pop
xor
jns
and
out
push
or
loope
adc
shl
aaa
add
mov
jns
sub
xchg
adc
scas
pop
pop
sbb
mov
sub
out
icebp
mov
and
retf
adc
int
push
pop
or
js
jmp
arpl
adc
inc
adc
ins
clc
pop
in
xor
outs
jno
inc
stc
pop
sar
adc
div
sub
inc
push
repz
xchg
repnz
lock
out
inc
dec
xor
sub
jne
nop
test
jge
dec
fs
int3
fdiv
addr16
(bad)
out
pop
jno
xor
test
xchg
call
xor
adc
pusha
loopne
jo
dec
nop
enter
jb
addr16
jmp
call
mov
xor
dec
add
push
fwait
(bad)
cmp
je
(bad)
retf
(bad)
push
out
mov
sbb
inc
outs
(bad)
das
ror
pusha
xor
pop
call
sbb
jbe
loope
call
xchg
ror
cmp
push
push
inc
scas
inc
std
sahf
(bad)
daa
cmp
imul
inc
jmp
push
add
in
loop
imul
in
inc
(bad)
movs
das
test
mov
mov
xor
cmc
stos
pop
adc
xchg
out
pop
jle
das
adc
mov
xor
and
add
call
adc
pop
sub
fs
xchg
sahf
jnp
not
push
mov
cmp
hlt
add
lods
mov
rcl
mov
cmp
cdq
dec
push
inc
test
push
les
pop
loopne
repnz
xchg
jns
sbb
arpl
mov
fnstcw
sub
mov
mov
gs
loope
movs
es
add
dec
and
loopne
cmp
retf
sub
inc
or
xchg
fwait
push
pusha
jge
add
add
and
sub
out
jecxz
fwait
ds
push
dec
lods
and
ficom
or
imul
mov
ja
(bad)
aam
push
repnz
sub
sub
stc
add
bound
cld
dec
sbb
mov
add
mov
adc
cmp
mov
rcl
add
sub
mov
mov
in
mov
xor
sti
cmp
call
mov
test
push
push
pop
inc
push
dec
fs
jl
pop
popf
les
dec
jb
fstp
pop
dec
and
hlt
pop
retf
xor
pop
mov
inc
mov
and
sbb
dec
aas
and
nop
add
xor
mov
add
jle
jbe
lea
dec
mov
lea
jge
gs
mov
mov
inc
push
mov
(bad)
fist
inc
ret
in
mov
out
call
pop
mov
ror
lods
jbe
loopne
pop
xlat
sti
push
xlat
jbe
mov
or
test
out
gs
cmp
dec
dec
mov
fld
fistp
and
mov
jp
adc
cmp
and
cmp
in
out
repz
xor
imul
dec
adc
xchg
sar
push
sahf
lds
aam
(bad)
call
lock
add
jnp
sbb
test
repnz
mov
sub
cmps
xor
aad
ror
call
pop
pop
stos
js
and
aaa
pop
cmp
push
shl
jmp
mov
or
stos
sub
ins
ret
mov
addr16
mov
mov
clc
mov
push
inc
aaa
imul
clc
adc
xor
mov
enter
or
sbb
pop
addr16
inc
pop
jns
out
retf
dec
cmp
or
xchg
xor
in
outs
cdq
sub
fcom
xor
jbe
add
mov
ins
pop
jl
or
mov
xor
xchg
xchg
mov
icebp
mov
cld
mov
sub
movs
lahf
(bad)
fst
f2xm1
sbb
xchg
xor
(bad)
xor
pop
bound
mov
or
xor
aam
add
xchg
in
repz
adc
or
lahf
lds
inc
shl
xchg
push
xchg
retf
aad
imul
cwde
mov
dec
cmp
sub
das
arpl
cmp
cmp
repz
pusha
lods
jo
xchg
add
sbb
push
mov
jae
mov
jns
fmul
mov
cmp
mov
sub
push
fcomp
lea
xchg
sub
ror
jnp
sti
fist
dec
lds
(bad)
xchg
imul
mov
fild
mov
xchg
cmp
out
mov
mov
adc
mov
loop
xor
push
sbb
mov
or
ja
jle
sti
jnp
jmp
jmp
add
or
(bad)
pop
cmp
stos
pop
in
(bad)
pop
mov
mov
jge
mov
jle
in
dec
jae
es
add
mov
(bad)
xchg
stos
fcomp
mov
fisttp
add
adc
mov
jae
pushf
gs
shl
xor
(bad)
adc
push
mov
jecxz
je
js
pushf
and
call
adc
dec
shl
clc
sub
xor
cmp
jmp
mov
nop
pop
(bad)
dec
retf
push
jmp
mov
jb
sub
loopne
mov
and
sbb
bsf
popf
outs
add
push
and
popa
xchg
add
xchg
mov
push
or
mov
cmp
pop
dec
and
jmp
ss
test
cmp
jg
mov
xchg
fmul
into
movs
mov
fimul
jmp
or
adc
inc
dec
mov
cmp
aas
jb
push
pop
fs
mov
xor
shl
fisttp
scas
or
sahf
ins
call
jle
xchg
out
pop
and
push
fdivr
stos
iret
pop
jae
jmp
jmp
ficomp
and
jo
mov
fsub
rcl
jmp
mov
sub
aad
mov
sbb
pop
fld
shl
movs
outs
xchg
cmp
dec
mov
ss
mov
cmp
mov
cmp
add
jecxz
jnp
in
dec
mov
push
jbe
lahf
scas
loopne
xor
cdq
idiv
or
inc
pop
shr
xchg
sbb
ins
xchg
les
cmp
dec
outs
cmc
cwde
dec
or
xor
je
or
(bad)
jecxz
sahf
data16
fmulp
loopne
adc
(bad)
jns
sub
clc
push
add
mov
adc
and
or
pop
dec
icebp
pop
into
jle
mov
mov
adc
and
enter
cmp
jecxz
sbb
mov
aad
rcl
sub
xchg
mov
int
(bad)
or
dec
ret
xchg
outs
inc
dec
or
xchg
mov
sahf
shl
pop
sahf
das
arpl
pop
ss
push
jmp
pop
mov
jnp
repz
or
sub
sar
inc
mov
jle
fstp
mov
(bad)
sbb
mov
test
test
jl
mov
inc
xchg
mov
xor
inc
les
ins
inc
mov
cmps
sbb
pop
xor
inc
gs
lods
lock
(bad)
adc
and
aaa
cmc
loope
in
movs
je
jecxz
inc
or
mov
adc
retf
or
out
jo
sub
add
jmp
sbb
mov
sub
dec
jge
mov
aas
mov
cmp
push
lds
push
addr16
push
rcl
inc
mov
mov
push
icebp
retf
aam
push
mov
mov
push
cdq
jge
test
retf
scas
test
dec
sahf
sbb
out
loop
add
sbb
and
fmul
dec
dec
iret
xor
mov
cli
xor
pusha
mov
xchg
adc
test
push
sbb
(bad)
jns
pop
pop
sbb
pop
or
jp
jle
cwde
ret
sub
lods
int3
fistp
or
out
lea
jmp
mov
add
fsubp
add
loop
test
xchg
mov
nop
jmp
lea
lea
les
mov
iret
shl
jmp
jno
std
cld
sub
or
or
push
xchg
test
imul
and
retf
pushf
mov
pop
xlat
ja
inc
jp
mov
call
mov
xor
and
jo
and
test
inc
inc
push
xchg
aam
mov
sbb
push
ret
cmp
and
mov
mov
fidivr
add
movs
retf
ds
arpl
mov
cmp
jl
sbb
mov
pop
jecxz
mov
xor
pop
fsub
xchg
push
mov
mov
jmp
in
push
jecxz
or
movs
push
dec
and
xor
pop
push
dec
cmp
push
hlt
or
out
push
sar
int3
sbb
cmp
pop
das
cmp
sbb
push
aas
sbb
add
inc
popa
adc
inc
stos
jmp
push
mov
and
and
cmp
push
cmp
retf
icebp
sti
jmp
push
cmp
adc
push
mov
bound
enter
mov
bound
(bad)
aam
xor
mov
fist
in
ins
es
sbb
dec
(bad)
cmp
sbb
jnp
rcr
push
jno
add
mov
gs
mov
std
xchg
div
or
xor
inc
cmp
neg
lds
mov
mov
inc
push
shl
mov
cmp
gs
mov
jle
rol
cli
inc
dec
(bad)
mov
ja
iret
jb
pop
dec
and
sub
pop
xor
adc
popf
jmp
jae
mov
popf
dec
(bad)
and
shl
inc
mov
sub
push
mov
or
stos
imul
icebp
lods
cmp
int3
jne
out
fnstsw
call
mov
mov
js
jl
jp
(bad)
mov
ficom
dec
jae
popa
bound
cmp
dec
mov
mov
(bad)
cmp
mov
xchg
adc
fsub
cmp
lods
jbe
leave
mov
jo
xchg
jne
int3
mov
aam
cmp
cmp
mov
lahf
dec
pop
sbb
scas
and
mul
pushf
pop
adc
and
dec
fnstcw
sbb
sbb
aam
mov
retf
jp
add
dec
ins
das
lahf
mov
das
pop
xor
jmp
into
scas
outs
(bad)
xchg
mov
dec
inc
(bad)
sbb
pop
mov
pop
call
inc
sbb
fldenv
dec
in
(bad)
sbb
mov
retf
and
loop
out
cmp
mov
jae
lods
push
call
cmps
mov
cs
jmp
repnz
jbe
lahf
sbb
js
sbb
jno
jle
je
(bad)
test
adc
loopne
sti
sbb
xlat
cli
mov
sub
aaa
fnsave
xor
push
xor
adc
sub
(bad)
jnp
jmp
popf
sub
stos
leave
add
pop
retf
rcl
xor
sbb
add
daa
push
cmc
aam
daa
sub
mov
xchg
aas
jmp
mov
mov
ja
test
shl
push
sbb
test
xchg
retf
shl
push
mov
ja
sub
outs
mov
sub
sub
repnz
jne
and
sbb
sub
or
les
jmp
cmp
or
xchg
cdq
and
pushf
adc
and
and
in
arpl
or
or
jno
push
iret
movs
out
call
jecxz
or
sbb
jne
imul
and
jmp
popa
retf
leave
sbb
push
or
out
dec
out
push
popa
sbb
xchg
nop
pop
mov
fdiv
outs
retf
es
(bad)
loope
jecxz
mov
lods
xor
test
rol
or
mov
sbb
dec
push
dec
jmp
data16
std
mov
std
jae
imul
cmps
jb
push
out
xor
ja
xor
xchg
adc
xor
fisttp
xor
loopne
nop
test
or
jmp
lock
sti
cli
in
xchg
ds
es
cmc
add
and
icebp
pusha
jns
dec
stos
clc
addr16
cmps
mov
ins
scas
popa
xchg
and
stos
cs
sub
pop
mov
sahf
jecxz
fs
leave
daa
ss
mov
js
ss
or
call
mov
sbb
fwait
xor
xor
les
pop
cmp
sub
cmp
ffree
test
mov
mov
and
jno
cmps
sbb
mov
mov
add
fadd
inc
mov
xchg
ds
fwait
in
fstp
les
xchg
les
std
lods
js
sbb
cmp
inc
fimul
push
adc
(bad)
out
jle
cs
fst
inc
mov
jae
out
sbb
sar
icebp
icebp
and
arpl
sub
outs
pop
jmp
dec
adc
push
pminsw
mov
fs
bound
xor
je
fistp
xchg
ss
clc
call
movs
and
and
fldcw
dec
xchg
fisubr
aaa
xor
xchg
inc
pop
dec
push
jo
icebp
daa
lods
push
mov
fild
and
push
adc
jnp
dec
test
mov
scas
add
cld
adc
loopne
cmp
cmp
xchg
push
sub
jmp
mov
and
ins
dec
aas
mov
shl
add
jmp
inc
dec
jnp
das
and
xor
cmp
(bad)
mov
xchg
adc
push
dec
mov
and
pop
enter
sbb
jns
add
loopne
mov
mov
leave
bound
jg
pop
fistp
cmp
dec
movs
mov
clc
mov
(bad)
lds
repz
rcl
adc
and
push
cmps
data16
out
mov
out
lods
sub
ja
inc
xchg
inc
sahf
call
bound
leave
dec
dec
adc
push
and
or
rcl
lahf
imul
jmp
scas
pop
nop
xor
fidivr
sub
out
push
pop
jo
cwde
sbb
jnp
mov
or
loop
sahf
mov
lahf
and
loopne
and
ror
in
push
ins
inc
xor
add
mov
mov
and
mov
mov
mov
cdq
enter
xor
pop
fwait
int
aam
adc
fst
mov
scas
arpl
or
jl
cmp
bound
fsubr
ss
repz
sbb
xchg
inc
data16
pop
mov
dec
push
and
(bad)
mov
leave
outs
and
adc
imul
in
mov
jo
pop
clc
ja
test
jnp
maskmovq
cdq
call
rcr
jle
xor
(bad)
cld
xchg
cmp
dec
inc
xchg
push
and
in
mov
clc
mov
jo
adc
cmps
mov
(bad)
vpshld
stos
pop
es
or
cmc
inc
mov
inc
jnp
mov
(bad)
aas
leave
mov
or
das
xor
test
mov
fdiv
(bad)
aad
pushf
jno
mov
add
sbb
xor
dec
cmp
aad
ins
int
xchg
xor
and
jo
jb
popf
imul
mov
mov
jnp
sub
test
jmp
push
jg
cmp
xor
fucomi
sub
dec
xchg
mov
push
xchg
jmp
aaa
inc
or
dec
pop
jge
scas
ins
mov
mov
lds
xor
xor
cmps
stos
sbb
add
xlat
sbb
ds
retf
stc
xchg
js
(bad)
jl
call
dec
ins
ja
add
push
ins
jl
call
jle
ja
iret
clc
into
nop
fwait
push
jae
gs
cdq
into
push
aaa
push
(bad)
repz
cwde
pop
push
test
and
xchg
int3
jns
mov
xchg
inc
mov
mov
gs
mov
inc
sub
in
jg
call
jb
(bad)
adc
cwde
rcl
sub
or
add
jecxz
cmp
cmps
dec
fs
(bad)
xor
pop
nop
or
mov
out
fcomip
sets
sbb
pop
call
xor
div
cmps
test
jmp
sbb
dec
push
mov
adc
fisttp
scas
jl
mov
mov
movs
jno
pop
aad
enter
aad
dec
pop
shr
push
or
inc
push
jmp
jp
cmp
repnz
jbe
test
and
or
fistp
lock
xor
dec
dec
xchg
icebp
mov
pusha
(bad)
fisub
xchg
and
add
inc
mov
movs
ror
mov
mov
xor
push
cmp
push
inc
push
xchg
mov
mov
mov
js
popf
sbb
test
imul
stc
jo
in
adc
sbb
mov
cwde
call
push
push
inc
pop
push
popa
adc
adc
jmp
add
lods
out
jecxz
push
add
(bad)
mov
cmp
jle
repz
push
call
ret
cld
cmc
sbb
cmp
outs
push
in
jno
retf
adc
adc
push
adc
xchg
sbb
cmp
mov
mov
shr
xchg
sahf
xchg
mov
das
pop
cmc
sub
adc
xchg
mov
call
nop
and
gs
popf
je
loope
cs
jo
sub
fist
ja
push
xor
dec
int
mov
addr16
bnd
mov
or
pushf
or
and
shr
xchg
mov
imul
out
xchg
sbb
xor
mov
add
push
rol
jae
pop
(bad)
push
ss
or
repnz
cmps
ret
fwait
dec
call
(bad)
int3
ror
and
xor
xor
and
retf
mov
sub
sbb
dec
xchg
aaa
je
mov
xor
outs
dec
pop
popa
inc
gs
sub
shl
mov
xchg
jp
cmp
mov
das
test
inc
aaa
ret
push
fadd
xor
push
mov
sub
clc
not
push
lds
sbb
jns
jbe
cwde
out
test
aaa
pop
xchg
sub
retf
mov
pop
sub
enter
jnp
dec
ja
cmp
(bad)
in
sahf
cmp
jle
icebp
sub
pop
sub
add
in
push
add
and
lahf
call
mov
cmp
iret
push
mov
jno
xchg
cld
adc
clc
jl
shr
add
and
je
xor
loopne
jbe
cs
xchg
sub
shl
outs
addr16
inc
mov
loope
adc
scas
mov
jge
aam
cdq
sar
or
and
movs
in
shl
cdq
data16
(bad)
dec
inc
loop
adc
sub
mul
add
add
fwait
imul
div
in
dec
and
and
les
xchg
push
cli
mov
div
int
pop
pushf
daa
lahf
and
(bad)
jge
aam
sbb
xor
xchg
cmp
out
ja
xchg
ret
mov
jb
pop
retf
xor
sar
sbb
retf
xor
gs
imul
ds
shl
je
loop
arpl
cmp
js
shl
dec
(bad)
xchg
add
iret
bound
xchg
loope
daa
push
cmp
inc
dec
cmp
dec
je
mov
adc
jg
js
mov
enter
push
lods
add
out
sub
xor
push
adc
xor
or
and
push
jb
sar
std
jmp
jns
int3
jne
push
cmp
test
or
mov
mov
xchg
pop
shr
out
xor
cdq
gs
push
add
daa
jle
cs
pop
cld
mov
pop
test
fsubr
jmp
pop
and
ret
cmp
and
ret
test
xchg
cmps
(bad)
int
jne
mov
xchg
and
fbstp
pop
xchg
jg
ins
loopne
test
cmp
mov
nop
dec
or
popa
add
arpl
ret
leave
jp
nop
mov
test
arpl
fucomp
mov
mov
mov
cld
(bad)
lock
mov
sub
les
mov
int
sbb
or
shr
js
clc
cmp
mov
push
jl
popa
sbb
cmp
js
xor
adc
lahf
sar
dec
xchg
xchg
out
sbb
mov
sub
cld
(bad)
in
imul
jmp
push
fisttp
add
mov
(bad)
dec
test
push
cmp
sub
inc
ins
je
cmp
call
cdq
mov
inc
ret
add
cli
adc
dec
aam
pop
in
xlat
movs
xor
inc
adc
ins
sbb
(bad)
jnp
jns
lock
dec
arpl
jmp
rol
repnz
push
fisttp
cmovg
push
(bad)
nop
fimul
lea
adc
push
in
aad
jo
mov
inc
pop
(bad)
iret
jbe
inc
xchg
fst
cmp
mov
push
in
hlt
xchg
mov
xchg
or
mul
xchg
lahf
loope
test
push
ins
pop
mov
add
call
adc
(bad)
pop
cmp
sub
(bad)
cld
je
add
xchg
xchg
es
sub
retf
int
cmp
arpl
sbb
jmp
ja
sub
mov
and
cmp
call
iret
in
mov
int
mov
sub
test
mov
shr
inc
test
dec
and
push
or
rcl
cmp
jne
sbb
cdq
jbe
outs
mov
jmp
ins
and
and
sbb
lea
mov
inc
mov
mov
(bad)
push
push
and
or
inc
stos
push
sub
xor
in
jbe
mov
dec
iret
mov
cli
popa
out
scas
inc
jl
fimul
pop
lods
xchg
rcl
ror
popf
(bad)
xchg
out
push
dec
idiv
icebp
cmp
push
mov
adc
or
inc
dec
sbb
jb
popf
jl
dec
xor
or
sbb
jnp
jle
sub
or
or
xchg
jge
cmp
sysenter
add
aad
dec
sub
push
xchg
xchg
add
and
imul
mov
jle
scas
lock
into
ds
inc
sti
addr16
pop
test
push
jle
and
stos
and
test
out
push
or
inc
imul
clc
test
dec
lods
add
or
jnp
push
jnp
mov
cmps
xchg
or
fwait
ror
je
aas
jmp
(bad)
sub
mov
je
cmp
test
add
(bad)
inc
fistp
les
mov
in
sub
cmp
push
es
sar
pop
push
or
jae
pop
in
shl
test
mov
push
fndisi(8087
stos
ffreep
jmp
test
lock
jmp
push
jg
or
sub
sub
mov
test
mov
mov
jmp
(bad)
outs
js
fild
cmc
ret
lahf
mov
mov
mov
jns
inc
pop
out
daa
(bad)
and
jae
popa
xor
pop
add
fldcw
into
inc
xor
cmp
ret
mov
inc
jo
jmp
loope
inc
or
mov
mov
test
inc
iret
push
out
sub
jecxz
mov
scas
jb
int3
adc
or
push
pop
mov
mov
neg
imul
ror
jo
mov
sti
movs
jno
fnstsw
aam
ss
ror
ss
ds
xchg
mov
dec
retf
in
imul
sahf
fist
push
xchg
sbb
add
test
jmp
pop
pop
in
in
out
bnd
cmps
rol
in
popf
add
pop
out
add
sbb
or
bound
ret
jmp
mov
cs
je
push
inc
fyl2x
mov
xchg
xor
fbstp
pop
popa
sub
mov
push
push
lds
pop
std
ret
aad
(bad)
xlat
jmp
std
maxps
fisttp
dec
jge
data16
fnsave
mov
aad
push
add
push
pop
es
dec
pusha
out
jg
cdq
push
push
push
inc
movs
jp
test
stos
outs
stos
dec
rcl
mov
adc
out
push
je
mov
jns
sbb
xor
pop
bound
fidiv
shr
rol
or
aad
popf
outs
cmps
or
in
fsubrp
ins
pop
pop
outs
sbb
dec
cli
cmp
call
popa
or
pop
mov
mov
push
jae
test
mov
jge
pop
aaa
shl
mov
xor
inc
dec
dec
stos
or
mov
xchg
mov
add
pop
data16
jle
sar
cmp
jbe
dec
into
cmps
data16
cli
and
outs
sub
lahf
loop
int
enter
sub
test
daa
sub
iret
mov
push
in
popa
mov
inc
xchg
loope
aad
ja
and
fnop
mov
mov
add
call
stos
in
pop
arpl
shl
dec
adc
add
xor
cmp
aas
cmp
iret
xchg
ret
cmps
bound
fs
mov
idiv
shr
ret
lea
inc
fs
mov
jge
(bad)
loope
add
push
xor
mov
ret
(bad)
push
retf
and
xor
fmul
push
je
enter
int3
add
movs
dec
jmp
sub
adc
test
adc
icebp
imul
mov
lea
cmp
inc
cmps
inc
fsubr
pop
jns
in
call
pop
dec
cs
add
jae
(bad)
into
rcr
or
mov
stos
dec
iret
scas
imul
sbb
out
mov
aam
xor
mov
mov
add
test
out
and
dec
pushf
mov
mov
cmp
dec
inc
adc
adc
xorps
ds
jne
ds
outs
repz
and
push
push
and
les
mov
sbb
or
repnz
sar
test
jl
mov
fs
std
jle
scas
jmp
lea
shl
mov
mov
call
lock
push
sbb
leave
stos
adc
stos
xchg
pop
das
les
add
inc
je
std
sbb
ficomp
hlt
dec
out
add
cmp
and
fist
xor
ins
sahf
(bad)
mov
out
sbb
cli
test
push
ret
pop
inc
mov
fdivr
jecxz
ds
jo
sti
push
rol
mov
cmps
stos
iret
pop
or
and
std
aas
sahf
jmp
aaa
out
xchg
es
out
jae
div
mov
mov
fisttp
js
loop
cwde
shr
shr
mov
nop
cmp
stos
call
jp
mov
push
fnstcw
push
ret
pop
js
pop
mov
(bad)
or
and
sub
outs
por
icebp
push
and
xor
and
mov
dec
xchg
jle
mov
inc
ss
test
les
outs
jne
mov
call
inc
mov
inc
lds
addr16
mov
aas
fsubr
pushw
xor
movs
and
xchg
sub
movs
addr16
add
jb
leave
aas
pop
mov
leave
imul
adc
xbegin
out
hlt
mov
out
into
adc
or
adc
adc
jmp
shl
(bad)
mov
add
xor
fisttp
out
mov
add
xor
in
imul
fistp
fwait
retf
jns
pop
dec
sbb
jns
xor
div
xchg
js
pop
sub
in
imul
dec
stos
(bad)
pushf
sbb
sbb
jge
(bad)
ja
pop
and
add
hlt
test
rol
je
aad
sti
adc
pop
xchg
cld
adc
iret
lods
aam
mov
enter
jmp
lods
cli
jecxz
push
and
or
push
or
mov
outs
xor
add
arpl
or
fisub
sti
imul
push
scas
sub
(bad)
pop
adc
push
int
xchg
jl
lea
cld
xchg
jbe
push
ret
adc
test
call
mov
ret
fcomp
push
jb
jne
sbb
fst
cld
in
sub
lock
pop
mov
cmps
out
fsubrp
inc
xchg
cmps
cld
mov
dec
cmp
jbe
mov
mov
jne
cs
xchg
cwde
cmps
adc
test
nop
lods
out
inc
inc
(bad)
lock
loop
ins
dec
pushf
call
mov
push
(bad)
sbb
cmp
xor
fsub
neg
pop
pop
jmp
cs
or
shl
cmps
sub
lock
das
or
xchg
jmp
fdivr
pusha
pop
bound
inc
(bad)
xor
gs
jp
push
fisub
lods
or
fdiv
lds
imul
fbstp
rcl
mov
and
inc
and
shl
dec
test
push
and
cmp
push
or
jge
dec
adc
loopne
psubw
add
jmp
lods
cmps
mov
mov
cld
imul
push
test
fmul
xlat
xchg
sahf
fld
dec
mov
pusha
arpl
dec
pop
jb
bound
outs
js
icebp
xor
jae
inc
adc
or
cmp
dec
xchg
out
sbb
sub
hlt
jo
adc
mov
or
dec
inc
inc
adc
sub
int3
inc
push
mov
xor
sub
ins
dec
lock
aam
cs
shl
jo
stos
sbb
lds
(bad)
jecxz
enter
mov
gs
rcl
loop
hlt
sub
mov
ins
xchg
xor
pop
jmp
inc
push
out
mul
rcr
call
mov
fisttp
xlat
pop
sbb
xchg
stos
(bad)
les
sbb
ins
aad
ins
test
cmp
scas
int
add
pop
sub
es
mov
add
out
xchg
jno
adc
cs
mov
mov
jge
xlat
jbe
sub
outs
clc
or
aad
xor
mov
sti
push
hlt
mov
sti
mov
or
mov
(bad)
mov
cld
jmp
inc
add
push
mov
mov
mov
in
push
jno
hlt
add
xchg
cwde
out
dec
lods
gs
cmp
or
adc
cli
sti
cmp
inc
mov
movs
ins
imul
addr16
jecxz
pushf
cld
mov
(bad)
sub
pop
cmp
sar
xor
pop
cmp
shl
cwde
outs
es
xchg
(bad)
cmp
aas
adc
mov
nop
mov
xchg
mov
out
mov
popa
push
mov
retf
dec
mov
pop
pop
movs
pop
imul
data16
dec
push
pop
cmc
daa
(bad)
sub
loopne
in
dec
mov
push
popa
adc
jnp
inc
xchg
mov
dec
mov
dec
mov
jne
inc
scas
mov
div
xchg
aaa
jo
(bad)
gs
data16
mov
push
stc
sar
add
in
bound
aad
push
inc
push
fldenv
xchg
jl
mov
ins
jecxz
and
sub
les
cmp
or
test
cli
sahf
mov
push
movs
ja
outs
es
lahf
pop
or
ret
aaa
fcomp
test
(bad)
cmp
mov
xor
and
in
mov
daa
xchg
adc
(bad)
mov
movs
or
ins
and
push
inc
fimul
jl
cmp
adc
pop
shl
xor
outs
mov
retf
arpl
adc
pop
movs
inc
sub
stc
push
stos
xchg
xlat
cdq
mov
jg
mov
sbb
cmp
xor
sahf
mov
jge
sub
add
adc
repnz
sub
out
into
stos
sub
and
movs
push
inc
mov
or
std
lock
out
mov
cs
imul
add
or
ins
mov
int
pusha
ror
pop
xor
mov
(bad)
mov
movs
push
fwait
out
add
jns
lods
test
cmps
sbb
fmul
loope
mov
lahf
clc
push
imul
daa
cmps
pop
pop
pop
pop
or
ficom
test
mov
cwde
je
test
lds
scas
pop
mov
gs
xor
movs
std
mov
push
fs
hlt
outs
pop
sbb
ret
mov
xchg
xchg
xlat
jl
data16
dec
leave
pop
cld
xor
jle
pushf
pop
aam
xchg
adc
or
and
adc
xchg
xor
and
clc
movs
cmp
fwait
out
es
mov
push
push
xor
mov
sub
mov
retf
adc
push
mov
cmp
pop
jmp
enter
rcpps
adc
jne
arpl
push
scas
adc
add
into
repnz
pop
add
mov
cmp
out
std
aas
mov
call
mov
mov
adc
push
lods
jmp
imul
sub
jle
pusha
adc
and
inc
sbb
fistp
pop
push
jb
mov
in
sub
ins
mov
es
jmp
and
jmp
mov
mov
jbe
int3
cmc
mov
cmp
scas
sti
dec
xor
ror
popf
rcl
jne
or
ret
sub
in
dec
(bad)
fsubp
ins
ret
mov
push
sub
pushf
mov
add
add
cmp
add
sbb
sbb
imul
mul
dec
stos
jno
pop
dec
push
leave
repz
sub
pop
xor
sub
stos
outs
pusha
iret
xor
jno
data16
movs
pop
add
clc
pop
push
sbb
xchg
xor
lods
xchg
pmaddwd
jecxz
pop
sub
jae
pop
dec
jmp
pop
test
mov
sub
xchg
out
gs
push
shr
mov
push
mov
fiadd
sbb
jmp
or
mov
lea
xchg
mov
mov
xor
es
aas
xor
sbb
cmp
mov
or
mov
jle
ins
pushf
and
cld
and
lds
enter
adc
pop
mov
cmp
jle
xor
xor
xchg
push
push
fwait
sahf
xchg
outs
sbb
fmul
sbb
pop
mov
lock
addr16
mov
(bad)
loope
adc
scas
ficom
mov
lea
cwde
icebp
scas
jae
scas
aas
neg
fadd
cmp
enter
ss
inc
pusha
pushf
push
pop
inc
cmp
mov
cmp
and
adc
mov
xchg
cmps
push
pop
push
pusha
mov
iret
sbb
cmp
mov
xchg
mov
pop
mov
cmp
ins
inc
repnz
pop
in
xor
push
xchg
es
sub
inc
fdiv
pop
fs
shl
data16
mov
xchg
jle
jp
enter
dec
xchg
pop
std
(bad)
mov
les
in
cmp
inc
jae
and
test
xor
movs
inc
stc
mov
into
inc
add
pop
inc
or
loopne
pop
dec
das
mov
fidiv
inc
fcomp
or
xor
xchg
in
jecxz
lahf
ror
int
inc
pop
ror
iret
in
and
mov
lahf
mov
clc
sub
cmps
mov
jg
daa
das
jg
sbb
jmp
pushf
xchg
iret
int3
add
mov
pop
push
fsub
push
add
xor
mov
popa
mov
aam
push
dec
scas
or
dec
lea
stos
inc
mov
mov
pop
retf
sbb
xor
mov
sub
mov
popa
call
fld
retf
jo
ss
ja
sbb
(bad)
shr
pushf
xchg
pop
jle
jo
hlt
mov
inc
shl
je
(bad)
mov
into
sbb
iret
gs
mov
dec
and
fnstenv
test
mov
iret
(bad)
mov
(bad)
loop
shl
inc
xchg
out
push
lods
or
fwait
inc
add
sbb
adc
in
lahf
push
cmp
(bad)
loopne
addr16
add
lods
adc
pusha
imul
xor
xchg
adc
out
shr
fdivr
out
pop
jnp
pop
jmp
out
pop
daa
lds
dec
mov
or
frstor
pop
cmp
mov
cli
aam
sub
inc
cmc
and
mov
xchg
mov
mov
add
jecxz
lea
ds
scas
and
dec
aam
and
mov
scas
in
cmp
sub
cmp
fld
mov
sar
or
push
mov
movs
fs
out
ret
movs
mov
sub
int3
pop
addr16
cmps
and
ja
and
add
xlat
jmp
adc
inc
xchg
int
mov
mov
cmp
aad
out
mov
cwde
mov
in
inc
mov
xchg
adc
and
xchg
popf
rcr
pop
jne
int3
sbb
and
jo
inc
cwde
lods
mov
jne
mov
data16
sub
cmp
rol
lods
mov
rcr
mov
pop
sub
mov
jl
mov
loop
cwde
sub
cmp
shr
cmp
sub
mov
outs
stc
mov
aas
pop
in
xor
aad
call
sahf
jne
ror
gs
rcl
jecxz
shl
mov
icebp
ret
mov
test
cs
jne
test
lods
ret
inc
js
add
add
or
adc
mov
js
xchg
pop
mov
psrld
aaa
sub
fmul
inc
sub
adc
xchg
ret
sub
push
outs
das
aad
fisttp
pushf
mov
je
stos
mov
mov
enter
add
jbe
arpl
js
dec
push
mov
stc
jno
adc
adc
mov
xchg
cmp
lds
out
sar
(bad)
push
(bad)
fadd
jnp
cmp
dec
lahf
ja
mov
or
inc
dec
push
xchg
fmul
push
fist
push
jg
fnstsw
retf
add
cwde
sub
aad
pushf
and
nop
(bad)
fucomip
mov
xchg
pop
inc
lock
xchg
xor
sbb
out
jecxz
sub
push
add
mov
jl
jae
pop
adc
call
mov
cmps
mov
pop
lock
out
mov
xchg
sub
int
sbb
test
and
inc
sbb
pushf
es
cli
jno
xor
jecxz
lahf
shr
outs
test
mov
cmp
mov
sbb
imul
pop
stc
aam
pop
fbstp
add
(bad)
aad
imul
das
mov
sub
mov
test
in
xchg
push
mov
arpl
pop
int
push
mov
add
dec
xadd
dec
mov
fstp
mov
dec
mov
cmp
dec
test
fisub
push
bound
in
mov
aad
xor
push
adc
scas
or
loop
mov
scas
cmps
add
aam
dec
and
inc
loopne
cmps
repnz
mov
mov
or
add
cmp
shl
xchg
push
and
ror
or
sbb
in
xor
mov
ja
mov
mov
xchg
inc
xor
lahf
jl
ins
data16
or
ss
adc
inc
sbb
sub
(bad)
and
repz
popf
sub
enter
cwde
sub
out
xor
xchg
(bad)
xchg
out
lock
(bad)
jae
xchg
jge
mov
movs
fistp
push
jae
ins
(bad)
(bad)
in
xor
or
push
or
sub
call
sub
pop
and
mov
mov
aaa
mov
mov
and
outs
enter
loope
mov
les
sbb
(bad)
outs
xchg
repz
cmp
sub
xor
aas
(bad)
jp
cmp
or
scas
xchg
loope
sbb
lds
push
fld
scas
(bad)
xlat
or
push
jp
scas
iret
xchg
add
call
lods
fld
daa
int
pop
mov
jp
icebp
xor
jge
jbe
xchg
sub
lea
push
ret
fild
arpl
lock
jg
imul
mov
dec
add
adc
sub
fistp
stos
es
xchg
mov
dec
xor
push
sahf
inc
jp
(bad)
mov
bound
ins
xchg
push
and
pop
cmp
pop
cmp
cmp
jmp
jmp
in
mov
data16
cmp
xlat
int
lock
pusha
sbb
int
pop
adc
ret
loop
ins
mov
call
and
cmp
rcr
arpl
or
mov
mov
cwde
jle
loope
fmul
(bad)
cmp
or
sbb
jle
aam
jne
xlat
repz
sbb
adc
inc
jl
adc
jg
add
jecxz
lea
pop
mov
sahf
jnp
cli
sahf
mov
cmps
xor
adc
push
xchg
(bad)
dec
cli
(bad)
ror
mov
sbb
repnz
mov
or
lods
push
xor
leave
or
mul
or
mov
push
pusha
call
loop
mov
icebp
dec
xor
test
iret
mov
in
mov
push
mov
scas
mov
cmp
rep
or
mov
or
scas
cmp
icebp
pusha
fcom
in
out
movs
push
inc
sub
ret
xchg
sar
js
ins
retf
test
emms
sbb
add
rol
inc
lods
xor
push
push
xchg
jne
add
pop
arpl
pop
dec
cmp
mov
shl
out
add
push
mov
mov
cli
mov
and
nop
pop
cmp
mov
jns
cwde
(bad)
mov
cmp
dec
xor
mov
cmp
sti
and
sbb
fdivr
xor
rol
pop
push
push
jns
cmps
and
data16
cmp
sbb
test
jl
add
repnz
pusha
ds
mov
mov
sub
outs
addr16
mov
(bad)
lock
and
sub
out
or
xor
or
pop
push
scas
dec
sti
sbb
shr
or
mov
jb
xchg
fmul
push
mov
cmp
jmp
mov
imul
int
es
and
dec
xchg
sbb
or
xchg
mov
pop
aad
push
adc
cmp
push
out
xchg
push
in
or
repnz
scas
push
mov
(bad)
jbe
mov
push
mov
xor
ins
cmps
xchg
sub
sub
inc
lods
ror
xchg
jne
xor
add
test
mov
fcom
test
mov
xor
and
add
dec
jae
cmp
push
call
inc
cli
ja
ja
retf
nop
cli
(bad)
pop
fiadd
xchg
sbb
loopne
enter
and
lods
ror
xchg
cmp
xchg
movs
aas
in
and
sbb
pop
aaa
mov
test
(bad)
leave
jo
aas
jle
cmp
fsub
xchg
mov
xchg
(bad)
mov
call
in
push
pushf
push
xchg
ffree
sti
push
fild
or
mov
arpl
add
aaa
imul
(bad)
gs
fstp
cmp
jmp
not
mov
imul
sbb
dec
sbb
sbb
je
dec
sbb
jecxz
lods
or
mov
call
jbe
data16
mov
(bad)
les
xor
icebp
xchg
aas
pop
cmp
(bad)
loopne
fidivr
imul
sar
mov
cmp
test
pop
stc
ins
xor
push
fsub
icebp
inc
mov
lock
cmp
push
jg
sub
jae
mov
loop
fisubr
mov
xchg
je
ins
out
sahf
dec
mov
inc
ds
sbb
xlat
mov
mov
jns
push
mov
push
xor
xor
jbe
int
pop
add
mov
inc
cs
xchg
repnz
adc
push
jnp
ds
ror
bsf
pop
sub
push
add
dec
aaa
jne
movs
and
cmps
adc
loope
popa
xchg
es
push
js
pop
outs
push
sub
add
jae
mov
mov
or
jnp
pop
or
gs
jns
loop
jecxz
pop
mov
shl
cwde
fisttp
icebp
push
mov
shr
cmps
stos
sbb
cmovno
iret
adc
test
(bad)
loop
mov
lods
dec
sbb
lahf
rcr
cld
lock
and
push
mov
div
daa
(bad)
sub
jl
(bad)
enter
pop
in
out
xlat
pop
lock
retf
push
(bad)
xor
sahf
js
mov
cmp
repnz
and
xchg
push
push
adc
ds
add
mov
jg
push
mov
enter
pop
pop
loope
pop
mov
cmp
mov
push
test
fdivr
jmp
pop
pop
jbe
dec
outs
test
pop
sti
(bad)
xlat
ss
cmp
jg
cdq
in
cwde
adc
addr16
pop
push
(bad)
cmps
xor
xor
mov
push
ins
clc
stc
dec
stos
pop
shr
test
hlt
xor
sub
pop
or
lea
xchg
push
inc
sbb
stos
jae
pop
movs
dec
dec
and
sbb
test
pushf
rol
adc
sub
mov
das
fwait
pop
int
loopne
pop
adc
lods
test
xor
xchg
push
xchg
pop
mov
sbb
jmp
scas
push
std
stos
clc
icebp
and
dec
mov
retf
sbb
imul
in
jmp
or
hlt
imul
inc
cmp
sub
xchg
aad
mov
loop
sbb
sahf
pop
lock
xchg
jmp
push
xor
(bad)
pushf
dec
lock
push
xchg
xchg
or
leave
xchg
dec
xor
mov
lds
jbe
popa
nop
mov
nop
push
mov
or
inc
push
stos
cmps
movs
cmp
pop
or
cli
(bad)
ja
retf
jbe
push
and
sub
adc
mov
int
in
xchg
sub
cmp
lods
mov
or
lahf
jbe
cmc
jl
sub
shr
mov
mov
(bad)
cmp
lds
imul
xchg
pop
inc
shl
mov
clc
cmp
cli
loopne
add
movs
sbb
pop
shl
xchg
or
test
mov
ins
icebp
xchg
hlt
push
or
retf
loop
add
push
cwde
xchg
mov
xchg
call
fnsave
pop
repnz
icebp
in
inc
leave
popa
lea
jp
test
lahf
dec
pop
sbb
sub
inc
dec
adc
push
xchg
cmp
jmp
cmp
jno
and
sbb
mov
enter
cdq
push
sbb
fwait
das
ret
stos
out
sbb
pop
push
pop
movs
(bad)
addr16
xchg
cmp
aad
enter
mov
cmp
gs
push
jmp
add
retf
adc
cmp
sub
jecxz
mov
dec
jl
jnp
jl
pop
mov
pop
push
cdq
repnz
rcr
add
stos
(bad)
(bad)
push
pop
ss
push
sti
(bad)
into
add
nop
sar
mov
inc
mov
push
mov
popa
lods
sbb
xor
repnz
js
jmp
mov
adc
mov
(bad)
fld
std
xchg
and
cmc
sbb
shl
stos
js
mov
dec
add
push
cld
stos
call
int3
pushw
das
mov
cmp
jnp
push
repnz
or
(bad)
fidiv
add
out
add
aam
dec
stos
sub
fisub
sti
xchg
xor
lock
and
int3
sbb
xchg
or
jp
daa
and
lock
in
mov
shr
xchg
adc
fisubr
adc
mov
inc
or
imul
out
pop
xor
or
mov
sti
fisttp
cs
adc
cwde
fiadd
shl
aas
adc
pop
loop
inc
add
cmp
xchg
mov
bound
movs
cdq
cmp
xchg
arpl
or
sti
inc
repnz
sbb
out
mov
ret
pop
imul
call
jmp
pop
outs
into
leave
pop
xchg
or
stc
in
mov
dec
push
mov
not
xchg
std
mov
ds
popa
(bad)
cmp
jmp
in
mov
ret
pop
ret
dec
fisub
imul
jle
movs
dec
cmp
mov
inc
outs
pop
rol
add
pop
test
mov
jmp
pushf
sti
daa
jae
xor
mov
mov
mov
in
fdiv
dec
daa
mov
xchg
repz
adc
mov
and
lock
add
xchg
pop
inc
js
jge
adc
loopne
retf
popf
jne
ss
imul
or
test
sbb
jae
mov
aas
sbb
push
mov
lock
out
inc
cmps
dec
mov
dec
or
in
or
and
fsub
jne
sub
neg
mov
fisubr
lods
aad
mov
test
mov
push
add
pop
xchg
push
pop
push
cmp
pop
mov
push
push
dec
(bad)
xchg
sahf
mov
mov
xchg
repz
std
shr
sti
aaa
xchg
sbb
cmp
or
sbb
mov
shr
add
dec
leave
retfw
lahf
lahf
(bad)
mov
lea
(bad)
pop
sbb
pop
scas
bound
test
lods
push
add
mov
push
fwait
sti
in
(bad)
jo
jmp
mov
aad
jns
call
sub
push
sahf
lahf
int3
in
ret
lea
ret
mov
jge
dec
add
(bad)
mov
mov
push
add
popa
dec
fs
cmps
xchg
pop
push
xchg
mov
into
test
mov
into
push
mov
jno
bound
fldcw
in
or
sti
icebp
jns
and
nop
add
outs
mov
push
ret
jle
fwait
push
nop
imul
inc
fs
mov
loope
in
dec
pop
repnz
push
cmps
cmc
push
int3
loop
jle
push
sbb
push
xchg
add
inc
xor
and
mov
cdq
rcr
(bad)
scas
push
push
cld
mov
push
js
(bad)
arpl
cmps
jl
les
leave
pop
fsubr
std
lods
cdq
leave
(bad)
jnp
adc
cmp
xchg
inc
sbb
bound
or
xor
pop
popf
xchg
or
pop
pop
mov
push
aas
retf
inc
and
pop
or
or
out
popa
inc
dec
or
add
add
sbb
loopne
xor
pop
mov
sbb
sbb
aas
mov
ins
adc
cmp
icebp
and
pop
push
ja
test
dec
out
cmps
(bad)
ds
ja
jecxz
stos
add
push
push
sbb
push
icebp
push
sbb
aas
gs
ficomp
adc
xor
dec
cmp
scas
adc
xor
or
lahf
arpl
rcl
sub
aaa
mov
inc
out
mov
xchg
pop
jb
add
int
adc
fadd
popa
xor
xchg
nop
push
lods
or
xor
rcr
ja
push
sahf
xor
push
xchg
imul
inc
sbb
mov
nop
out
jl
jno
mov
ds
adc
inc
jmp
(bad)
pop
scas
scas
les
fistp
cmp
inc
dec
push
in
push
jb
inc
aam
sub
mov
fwait
sub
cwde
lods
mov
add
push
out
clc
bound
test
cmp
fs
cmp
sbb
adc
sbb
and
repz
test
out
jbe
jno
out
pop
dec
mov
or
dec
sar
cs
pop
pop
push
add
add
ret
xor
fwait
mov
mov
or
clc
addr16
int3
dec
retf
xor
adc
(bad)
mov
or
or
sub
call
jl
sub
and
sbb
mov
xchg
icebp
cwde
(bad)
ret
and
clc
xchg
jae
jb
fnstcw
and
stos
cmps
mov
dec
mov
fwait
pop
lahf
sbb
ret
xor
add
cdq
scas
dec
or
nop
inc
jmp
or
xor
mov
mov
inc
shr
dec
mov
call
mov
pop
dec
mov
ins
cmp
sub
dec
jbe
dec
add
addr16
je
sub
sbb
icebp
push
jb
out
xlat
cld
iret
jae
lock
or
pop
mov
fist
jle
in
mov
inc
mov
pop
hlt
inc
stos
out
loope
mov
jno
pop
daa
lock
push
push
mov
cmp
jmp
xchg
xchg
inc
cmps
fiadd
cld
ror
dec
cld
pop
das
adc
lds
mov
out
lock
out
loope
not
arpl
les
imul
adc
push
(bad)
fsubr
fnstsw
adc
dec
push
jnp
pusha
jnp
shl
outs
add
mov
stos
mov
(bad)
push
movs
jno
stos
(bad)
mov
lea
(bad)
gs
mov
aas
jo
jmp
das
inc
addr16
inc
pop
mov
arpl
pop
int
inc
cmps
dec
clc
mov
rcr
mov
or
push
or
ins
call
dec
rcr
cld
inc
jge
cs
adc
xchg
ret
jp
xchg
mov
inc
cmp
mov
mov
jne
jae
sti
mov
test
fst
pop
rcl
xor
cli
dec
in
dec
xchg
jl
pop
sub
or
scas
jmp
sub
mov
(bad)
xor
sub
sbb
jp
mov
add
loopne
sbb
stc
and
call
jmp
mov
cld
xor
push
dec
adc
jmp
out
ins
push
jbe
and
fcomp
xor
cmp
je
cmps
sub
inc
retf
clc
icebp
jmp
call
or
pushf
fidivr
sub
mov
das
sti
cmc
inc
push
mov
add
out
dec
fs
test
fild
cmc
lock
xchg
leave
sbb
mov
jl
fbld
cmps
xchg
lods
mov
xor
push
jns
sub
call
cld
xchg
push
pop
lahf
dec
(bad)
or
addr16
add
pop
jb
sbb
ds
inc
imul
(bad)
int3
jg
scas
jno
icebp
mov
dec
xor
xlat
mov
push
(bad)
test
mov
adc
inc
out
mov
jmp
mov
mov
shl
fidiv
(bad)
sub
adc
push
cmp
rol
cmp
mov
xor
jo
fcom
adc
add
inc
dec
inc
cmp
inc
sub
ret
cli
cmp
lock
add
push
dec
retf
push
fld
or
out
cmp
cmc
test
mov
ror
jne
jecxz
fld
pop
retf
loop
sti
repz
xchg
inc
ror
xor
dec
sub
sub
outs
inc
mov
jne
push
div
sub
push
or
jmp
test
aas
gs
int3
xor
xor
pop
mov
mov
and
xor
pop
int3
gs
mov
sbb
jo
jnp
nop
mov
in
jb
pop
adc
out
outs
scas
repnz
push
test
mov
enter
je
stos
mov
sub
icebp
mov
fs
xchg
and
xchg
in
pop
adc
mov
pushf
push
add
(bad)
ds
cmp
pop
pop
push
pop
ret
sbb
arpl
shl
xchg
adc
popa
sub
xchg
icebp
mov
sbb
push
js
dec
test
pop
fwait
sbb
jmp
push
and
dec
mov
sbb
cwd
loop
pop
jg
inc
push
adc
and
ss
inc
int
test
sub
mov
and
imul
or
out
bound
daa
cmps
hlt
push
cmp
stos
jns
out
adc
shr
dec
cmc
mov
jns
sub
in
cmps
jmp
fsubr
adc
outs
imul
and
mov
rcl
jnp
idiv
mov
or
sar
test
lods
mov
dec
add
dec
ret
cdq
std
in
cmp
pop
mov
jbe
(bad)
shr
aaa
sub
push
cmc
xor
sbb
cmp
inc
sub
mov
cmp
push
push
lock
push
or
add
hlt
inc
xor
mov
adc
xchg
xor
push
aas
cld
xor
lods
out
js
push
sbb
adc
mov
adc
lods
cmp
sbb
and
or
imul
or
xor
jo
jb
jge
jnp
cmp
cmp
mov
cmc
cmps
imul
xchg
je
shl
jmp
push
mov
je
xor
movs
cmps
mov
sar
fadd
mov
push
outs
imul
push
push
idiv
mov
loop
add
rcr
mov
mov
xor
jmp
std
call
mov
mov
movs
sar
pop
sbb
scas
sbb
retf
int
inc
pop
test
loopne
cmps
xor
mov
adc
mov
int
mov
jge
lock
push
add
stc
js
(bad)
ret
fucomip
jmp
hlt
fwait
add
(bad)
(bad)
outs
pop
repz
aas
inc
push
or
jns
xchg
lea
dec
jmp
lods
fld
and
push
sahf
add
out
dec
pop
push
fwait
stos
jne
(bad)
push
and
out
mov
cmps
fidivr
ja
xlat
cli
push
sar
xchg
scas
xchg
push
dec
fcom
retf
pop
and
mov
addr16
add
inc
std
xor
retf
ret
aaa
jb
add
je
inc
pop
jbe
in
enter
(bad)
(bad)
sub
enter
test
aaa
and
cmc
shr
jge
clc
add
repz
xchg
(bad)
rcl
or
pop
jmp
fadd
sbb
std
inc
cmps
dec
or
mov
or
jge
mov
xchg
js
xor
adc
jg
sbb
cmp
and
and
ret
xor
in
adc
mov
out
lock
add
pop
xchg
repz
sub
stos
pop
jecxz
scas
cmp
hlt
jo
xchg
push
ins
mov
iret
mov
xchg
add
stos
cmp
mov
clc
mov
cmp
stos
jmp
inc
adc
add
add
call
mov
cs
jg
mov
outs
pop
in
push
loop
jnp
imul
fstp
outs
mov
sti
ret
push
scas
retf
nop
(bad)
fist
cmp
add
fstp
inc
jge
cmps
cli
repz
daa
push
enter
movs
imul
in
dec
int3
daa
retf
out
push
stc
and
pop
xor
stc
jmp
xchg
or
adc
pop
sub
mov
jb
in
jmp
mov
popa
ins
cmc
jecxz
or
movs
sub
call
push
lods
sti
call
xlat
in
or
pop
sahf
push
sub
pop
xchg
mov
sub
mov
push
fisttp
stos
shl
neg
leave
repnz
cmp
mov
cmp
aam
add
jmp
jp
adc
js
jge
mov
mov
outs
fstp
dec
stos
int3
cmp
jecxz
xchg
pushf
sahf
jge
test
pop
xchg
scas
push
xchg
lds
inc
cli
sub
mov
inc
aas
mov
jbe
jbe
lods
not
fucomp
aas
stos
dec
(bad)
stc
fimul
stc
hlt
push
repz
pop
ja
jecxz
push
sbb
and
arpl
push
fist
xchg
hlt
sahf
adc
sbb
jb
fwait
and
aas
jo
cld
ds
inc
ins
cmp
jnp
repnz
and
add
jno
int
fnsave
adc
repz
mov
dec
test
arpl
xor
mov
inc
push
es
out
cmp
pop
call
dec
xchg
add
(bad)
push
loop
dec
cmp
and
add
xchg
inc
out
daa
fimul
(bad)
jl
push
retf
mov
in
push
xchg
or
dec
xor
fisttp
sub
jne
(bad)
sub
xchg
les
test
cs
mov
adc
aaa
mov
jmp
scas
js
mov
push
rsm
sbb
fcom
push
mov
(bad)
stos
mov
sbb
retf
mov
and
adc
hlt
hlt
xor
lock
outs
loopne
out
repz
mov
rcl
mov
or
and
cli
popf
inc
sub
sub
push
mov
loope
mov
ret
fstp
out
clc
cdq
icebp
mov
fisttp
loopne
xor
xchg
add
xlat
pushf
add
test
dec
mov
xchg
xchg
add
dec
pop
icebp
and
xchg
xchg
ret
sar
fisttp
mov
mov
inc
(bad)
inc
add
jb
fs
repnz
ficomp
pop
lock
in
movs
cwde
loope
(bad)
adc
sti
aad
nop
mov
jl
inc
pop
and
es
sbb
inc
push
jns
into
test
adc
sub
mov
shl
mov
mov
scas
jge
jns
imul
mov
cmps
add
inc
movs
cmp
pop
mov
jl
repz
mov
or
jl
aaa
inc
call
mov
call
or
mov
jp
shl
lods
mov
enter
mov
fwait
out
mov
xor
out
cld
lahf
cmp
call
repz
shl
fcmovne
sbb
fidiv
enter
cmps
cmp
scas
adc
sub
(bad)
aam
(bad)
fist
fidivr
outs
popa
xor
jmp
ds
push
(bad)
cli
mov
cmp
in
mov
pop
push
retf
shl
xchg
add
lock
jp
xor
call
ss
sub
xchg
je
jg
add
icebp
mov
cdq
xor
dec
int
cli
xchg
arpl
ret
add
ss
ins
xlat
mov
inc
cmps
call
mov
mov
daa
add
mov
jns
add
and
jne
sbb
int
imul
popa
nop
and
movs
test
cdq
ins
stos
mov
dec
or
cmp
fldenv
mov
jne
retf
lock
sar
cmp
ror
cs
hlt
sbb
into
mov
cmp
jp
jmp
and
jne
lods
retf
sub
lods
ds
movs
enter
sub
add
and
add
scas
jbe
fistp
mov
or
sbb
pop
cdq
mov
xor
in
leave
arpl
sbb
stc
dec
push
add
xchg
test
push
and
out
in
data16
adc
xchg
mov
bound
xor
push
cmp
mov
test
das
push
dec
shr
cmc
in
mov
and
push
int3
inc
dec
lock
mov
xlat
rcl
and
push
sbb
imul
sub
(bad)
lods
ss
cdq
jne
mov
cmp
pop
stc
ja
das
test
ds
pop
add
add
mov
test
ret
mov
stos
or
pop
jmp
cmp
fbstp
xchg
jb
lods
pop
rcl
or
sub
xor
sbb
mov
aad
or
ret
push
sahf
add
mov
xor
or
cmps
pop
repz
sub
sahf
pop
fiadd
icebp
int3
loope
call
div
mov
mov
mov
sub
jbe
ja
xor
pop
jmp
(bad)
mov
lods
outs
jb
daa
jo
cmp
pop
mov
movs
mov
and
dec
sub
dec
push
xchg
lock
fdivr
jbe
iret
inc
rcr
or
push
ss
icebp
or
cs
loopne
push
mov
test
fs
inc
xchg
retf
dec
add
out
push
dec
jbe
dec
es
add
or
cmp
fs
xor
jge
mov
test
sub
nop
int
nop
in
xor
jmp
adc
mov
or
and
inc
stc
adc
and
ins
test
push
sub
aas
test
push
mov
adc
shl
sbb
arpl
or
(bad)
jmp
push
loop
jo
cmp
xchg
das
xchg
mov
mov
and
loopne
fnstsw
lea
(bad)
adc
leave
dec
and
cmp
icebp
mov
cmp
fwait
pop
push
mov
or
xor
sub
enter
rol
nop
ss
ret
lea
outs
loope
fnstenv
into
into
(bad)
or
(bad)
pop
mov
stos
push
inc
jbe
ja
xor
in
mov
mov
es
xchg
xor
iret
int
popa
sub
lods
dec
repnz
xchg
jbe
out
mov
pop
jae
es
pusha
xchg
xchg
jg
rcl
xchg
in
xlat
pushf
xchg
mov
sbb
rcl
dec
aaa
sub
or
inc
cwde
jl
pop
mov
push
aad
dec
cwde
xor
jg
add
cmp
in
pop
or
imul
xchg
ds
sbb
lods
ss
and
cmp
jmp
push
aas
mov
dec
dec
ja
outs
mov
gs
inc
in
lock
mov
or
cmp
jae
push
jbe
mov
push
ror
adc
jecxz
out
jb
std
(bad)
rol
popa
jno
arpl
adc
js
cs
dec
add
popf
mov
fisubr
test
push
jmp
pop
cmp
adc
out
mov
out
cmp
or
cmp
pop
pushf
jle
push
rcl
sbb
add
daa
xchg
stos
fs
xor
loop
pop
dec
add
(bad)
rol
shr
push
fmul
mov
cmps
dec
xchg
xchg
inc
mov
bound
in
hlt
in
popa
outs
jl
cmps
jge
or
and
data16
push
push
xchg
popf
add
aam
and
jns
xchg
(bad)
fnstcw
(bad)
jge
ret
loop
faddp
xor
mov
and
loop
lahf
pop
jno
mov
mov
xor
jo
dec
es
(bad)
mov
out
xlat
inc
and
(bad)
loop
sub
and
sbb
push
adc
xchg
push
mov
sbb
cmp
xor
idiv
sbb
(bad)
xlat
sbb
xchg
out
std
add
repz
or
shl
mov
inc
call
(bad)
sar
mov
lds
xchg
and
push
out
scas
push
mov
lea
fimul
hlt
lods
enter
or
icebp
cmp
push
cmc
(bad)
jae
or
sbb
retf
(bad)
push
out
fld
ja
jl
test
and
cwde
arpl
(bad)
mov
bound
pusha
inc
hlt
pop
pushf
dec
mov
lods
cmp
cmp
out
push
inc
ss
out
dec
nop
cmp
ins
cmp
cmp
xor
inc
in
in
push
bound
lahf
jl
std
mov
stos
inc
cmc
test
idiv
xchg
xchg
push
adc
inc
xchg
dec
push
ins
rcl
aad
jge
ret
repz
ja
das
fs
(bad)
xchg
sub
mov
adc
lods
mov
or
loopne
jecxz
dec
push
mov
stos
push
sub
add
sbb
mov
inc
inc
dec
cld
xchg
pushf
outs
xchg
cmp
jl
and
outs
push
add
pop
inc
xchg
mov
add
mov
sub
sub
mov
add
into
(bad)
mov
repnz
jbe
js
xchg
outs
mov
sbb
imul
in
inc
xor
dec
sub
or
jmp
pusha
in
dec
std
mov
int3
pop
cdq
call
cvtps2pi
out
ja
inc
mov
sbb
idiv
cmp
jnp
and
faddp
das
sub
add
mov
or
cmp
adc
inc
push
xor
dec
in
scas
push
aad
jmp
cmps
stos
daa
fisub
lds
call
frstor
sbb
xor
or
fsubr
adc
ds
add
adc
dec
mov
pop
push
ja
and
fild
pop
test
addr16
inc
movs
mov
mov
mov
pop
dec
ds
mov
jb
adc
(bad)
xor
hlt
and
repnz
clc
leave
lea
aaa
dec
mov
dec
in
sub
inc
outs
lahf
push
sbb
mov
cmp
and
or
arpl
jns
nop
inc
(bad)
in
pusha
adc
cmps
gs
xor
cmp
push
jmp
nop
pop
out
cmps
mov
mov
xchg
ror
xchg
loope
mov
mov
leave
push
cdq
out
mov
push
(bad)
in
loope
call
mov
popf
mov
jg
jno
aas
call
(bad)
push
ss
in
pop
enter
push
mov
mov
les
mov
clc
shl
call
sbb
sbb
push
or
adc
movs
xor
push
or
(bad)
in
sub
or
lds
call
push
loop
call
scas
or
scas
push
aad
mov
mov
push
cwde
mul
add
mov
jp
stos
shl
call
ss
lods
add
retf
test
mov
(bad)
sub
xchg
mov
or
in
test
mov
mov
fcom
xor
xchg
lods
cdq
sub
call
push
cwde
call
das
nop
js
retf
push
jb
jg
sbb
in
sbb
mov
lahf
xchg
push
pop
mov
ins
stc
add
add
scas
test
ins
cmp
sahf
cmp
rol
pop
popa
pop
sub
(bad)
pushf
leave
sub
pop
fcomp
add
jmp
test
and
mov
sar
popf
push
and
js
in
int3
mov
fnstsw
lods
ds
sahf
fmul
push
stos
imul
ds
scas
push
xchg
sahf
aas
dec
fs
int
(bad)
int
dec
jg
adc
push
loope
and
dec
retf
push
push
cmp
sbb
push
and
cli
test
js
xchg
fwait
jmp
add
pushf
aaa
sbb
push
and
jmp
sbb
addr16
or
mov
pop
xor
adc
and
cmp
mov
out
fsub
ds
push
and
int3
pop
sbb
or
bound
popa
and
cdq
sti
loopne
sar
aam
and
je
cmp
push
or
pop
xlat
scas
xor
into
test
fwait
paddb
jmp
in
xchg
or
push
or
cmps
add
repz
mov
int
dec
dec
data16
and
mov
into
bound
movs
dec
ins
pop
popa
pop
jecxz
popf
les
xor
lahf
push
sbb
jg
adc
or
jmp
je
pop
pusha
jno
mov
sbb
dec
aad
dec
mov
push
inc
rol
pop
ret
cmps
loopne
sahf
inc
xor
movs
iret
pushf
pop
mov
or
cld
stos
pop
outs
mov
xchg
mov
push
sahf
sbb
loop
ja
jmp
ja
jle
cmp
sar
add
mov
hlt
nop
push
fisubr
in
ins
in
push
bound
cdq
movs
dec
or
int
sti
daa
push
adc
fnsave
mov
bound
mov
movs
outs
lods
xor
jge
mov
movs
fist
pop
lock
sbb
not
outs
pusha
clc
sbb
mov
pushf
sub
pop
jg
cmp
and
jmp
sub
outs
jg
push
loop
fisub
add
cwde
mov
pop
cmp
inc
adc
sub
adc
outs
or
pop
xchg
out
jg
sar
xchg
ficomp
addr16
add
jb
lahf
je
and
in
into
mov
ret
cmps
inc
mov
xlat
and
inc
jae
fild
pop
push
mov
xor
mov
addr16
mov
icebp
and
repz
cmp
push
lods
xor
aas
test
xor
adc
cld
mov
cwde
add
movs
call
inc
sub
mov
xchg
inc
add
enter
sbb
(bad)
scas
dec
inc
call
sbb
test
mov
pop
test
int
mov
mov
ja
ret
or
data16
ins
aas
add
mov
cmp
xor
inc
ret
into
cmp
jno
mov
sub
cmc
jns
mov
rol
hlt
xor
in
cmp
iret
cmps
sub
ret
xchg
jl
(bad)
and
in
jae
sahf
icebp
jmp
dec
ja
inc
fistp
cmps
jae
in
adc
and
mov
or
in
mov
inc
shl
or
mov
leave
inc
bound
xchg
cmp
mov
sub
sub
int3
inc
cmps
mov
jnp
mov
jbe
inc
jp
enter
in
adc
inc
and
jbe
or
sub
pop
jbe
sub
dec
pop
(bad)
fcom
ss
xchg
retf
lea
jmp
aas
mov
int3
jmp
stc
es
adc
sbb
xor
lods
mov
clc
sbb
stos
lea
cs
lahf
dec
mov
(bad)
mov
ret
popa
cs
inc
xchg
adc
or
int
xchg
icebp
mov
mov
dec
ret
ret
cmp
test
adc
sub
mov
data16
pop
jmp
inc
xor
movs
cmps
(bad)
mov
aas
push
dec
push
fstp
sub
call
mov
mov
push
sub
xchg
inc
inc
xchg
adc
in
fcmovnu
mov
bound
imul
pop
xchg
(bad)
mov
out
aam
xor
stc
fucomi
mov
add
push
xchg
jp
xchg
mov
out
sahf
(bad)
mov
mov
jbe
fiadd
enter
xchg
inc
pop
icebp
loopne
lods
ret
fcom
jecxz
mov
mov
mov
jnp
idiv
inc
sti
adc
push
mov
cmp
pop
mov
rcr
fadd
pop
imul
add
fbld
mov
ss
pop
fsub
mov
or
xchg
add
fcom
and
jle
mov
inc
call
cmp
sub
xor
mov
shl
in
arpl
adc
cdq
aaa
les
sbb
inc
pop
ror
pusha
dec
test
adc
imul
call
jl
xchg
sub
cmp
push
pusha
div
stc
cdq
aad
cs
das
rcl
dec
je
jne
cwde
add
ja
or
fs
int
xlat
mov
clc
add
or
jno
adc
pop
sbb
rcl
inc
pop
sbb
adc
xchg
push
std
jnp
pop
fs
push
mov
xchg
sub
xor
add
fcom
retf
in
add
pop
test
push
lods
fcom
push
jne
test
dec
xlat
adc
aad
cld
and
jle
stc
enter
mov
pop
xchg
mov
clc
inc
or
and
inc
lds
in
push
retf
sbb
in
or
sbb
ror
cmc
pop
and
inc
or
sbb
xchg
fisttp
fld
popf
jae
xchg
lock
dec
dec
or
mov
ins
jge
xchg
xchg
call
imul
in
in
adc
cmc
icebp
mov
loopne
sbb
xor
mov
sahf
or
neg
jbe
sub
sub
test
adc
xor
inc
inc
pop
aas
inc
mov
adc
sbb
xor
stos
loope
fstp
fs
pop
cli
xor
inc
in
pop
sbb
push
adc
push
lea
cwde
pop
mov
jle
push
ror
sub
and
mov
push
ss
loope
dec
inc
sub
inc
cmps
mov
jmp
mul
sbb
(bad)
push
cdq
mov
cmp
add
pop
fld
into
cmp
and
inc
mov
test
rcl
cdq
gs
repz
cdq
fwait
inc
test
jp
mov
add
dec
xor
mov
xor
jecxz
idiv
rcl
sub
fucomip
ins
jb
data16
dec
scas
xchg
jno
jmp
(bad)
(bad)
mov
cmp
push
popa
aaa
lahf
inc
ins
xchg
push
adc
inc
jp
(bad)
pop
or
js
cmp
loopne
aad
pop
ret
mov
add
jbe
out
pop
cmp
mov
adc
ret
jnp
fst
xchg
fs
lds
loope
and
clc
mov
mov
jb
sub
(bad)
sbb
js
js
xlat
mov
out
pop
mov
(bad)
mov
mov
fst
loope
jbe
xchg
jo
pop
and
test
test
mov
sahf
retf
lods
pop
push
mov
clc
popf
aas
pop
call
xor
loopne
(bad)
push
xchg
imul
jae
dec
iret
push
dec
jne
xchg
enter
sbb
mov
pusha
pop
inc
leave
sub
jmp
bnd
and
ins
jb
imul
cmp
cld
retf
sub
cmps
fyl2xp1
pop
inc
idiv
push
add
adc
cmp
and
pop
stos
shl
mov
retf
pop
call
lods
jno
scas
outs
jecxz
arpl
jb
pop
dec
sub
jbe
mov
add
loop
dec
or
scas
xchg
int3
fsub
hlt
jl
pop
pop
mov
clc
mov
popa
aaa
and
es
mov
xor
pop
jnp
fcomp
jne
pop
add
jnp
xchg
or
xchg
cwde
fnstcw
stc
inc
out
mov
adc
add
jno
lock
call
xor
cmc
(bad)
pop
(bad)
shl
(bad)
sti
sbb
mov
iret
call
sbb
mov
pushf
stos
xchg
jae
fmul
mov
jg
scas
and
mov
add
push
push
inc
cmps
mov
sub
ret
xor
fistp
mov
mov
fisttp
cmc
xchg
inc
sbb
ret
push
ror
cdq
xchg
push
dec
imul
mov
into
cmp
dec
mov
inc
adc
enter
or
retf
and
imul
xor
out
sub
cmp
xchg
shl
pop
cs
loope
mov
(bad)
fld
push
bound
rol
dec
mov
jmp
dec
cwde
add
clc
cmp
push
mov
jno
sbb
sub
sub
repnz
push
or
jo
addr16
push
push
sbb
sub
in
adc
call
ins
fmul
movs
add
sub
sub
aam
les
imul
cmps
ja
fldenv
or
int3
hlt
sbb
repz
cld
icebp
xor
out
dec
cmp
sbb
int
jmp
sbb
push
sub
(bad)
sbb
sbb
fdivr
(bad)
lds
aam
cli
cli
xor
mov
add
stc
sub
jne
mov
adc
cld
cli
out
or
xchg
out
fstp
test
aam
inc
push
fidiv
inc
loope
and
mov
imul
in
cmps
add
mov
jecxz
mov
pop
mov
mov
(bad)
les
arpl
addr16
sbb
push
fs
movs
adc
mov
cmp
(bad)
lods
or
or
in
(bad)
fdiv
retf
loope
in
or
sbb
inc
or
pop
int3
imul
loopne
dec
jp
ds
pop
sbb
lahf
push
jle
popa
outs
imul
or
das
sti
mov
sub
adc
inc
mov
pop
push
add
jae
push
inc
push
sbb
mov
scas
push
sahf
ret
test
cmps
int3
jo
nop
pop
pop
add
addr16
dec
pop
mov
or
frstor
loopne
mov
and
push
inc
sbb
outs
iret
push
daa
(bad)
jg
loopne
mov
ins
dec
jbe
jae
or
jg
imul
(bad)
sbb
push
mov
daa
repnz
xor
mov
inc
add
dec
xchg
(bad)
aaa
rcl
sub
enter
mov
cmps
iret
lock
lods
xchg
ja
xchg
rcl
jns
loop
xchg
movs
and
xor
xchg
cmp
mul
lods
cdq
sar
mov
rcr
cmp
add
or
cmp
add
movs
xchg
add
mov
inc
xchg
movs
int
stos
in
div
mov
xchg
outs
inc
jmp
sbb
or
into
jne
ins
popa
pop
push
int
scas
stos
into
jo
ror
cli
lahf
inc
mov
xchg
adc
inc
call
fsub
in
or
dec
jae
clc
and
mov
xlat
jns
mov
cmp
jp
mov
imul
cdq
xchg
jge
pop
nop
adc
paddsw
test
test
jecxz
xor
mov
and
imul
mov
jno
inc
idiv
push
jo
(bad)
xlat
jne
xchg
sub
int
push
mov
cmc
add
mov
xchg
jae
cmps
add
mov
push
jmp
test
cmps
test
les
mov
(bad)
jecxz
push
push
and
adc
mov
jnp
adc
in
mov
lea
push
lods
mov
inc
int
inc
(bad)
icebp
dec
retf
mov
adc
xor
mov
imul
sub
sub
mov
lahf
xchg
jne
jmp
mov
mov
clc
mov
sbb
stc
cmp
fisttp
(bad)
cli
fs
jb
lds
leave
inc
ds
inc
push
push
jno
in
frstor
sub
ins
dec
(bad)
cld
sbb
test
push
stos
imul
pop
pcmpeqd
sub
sbb
outs
hlt
scas
int3
sbb
jg
add
mov
push
mov
fisub
mov
aam
sbb
mov
fidivr
fisttp
movs
das
loop
push
inc
inc
cmc
test
iret
xchg
cmp
iret
in
and
test
jle
push
jbe
dec
push
std
add
mov
jns
or
ds
xchg
mov
dec
pop
mov
xchg
dec
jp
pushf
lock
(bad)
test
test
cld
lods
adc
stos
dec
lods
and
jnp
shr
dec
cmp
dec
cmp
lock
scas
pop
dec
sahf
pop
adc
icebp
dec
mov
icebp
or
div
jnp
mov
lods
clc
sbb
jns
aam
sbb
sbb
xchg
mov
pop
add
push
(bad)
cmp
sub
ror
pop
mov
and
mov
int3
leave
lss
inc
loop
ror
jnp
or
stos
dec
idiv
fld
popf
mov
add
jmp
in
pop
sbb
iret
fld
daa
mov
cs
push
jo
sub
sub
xchg
inc
xor
repz
xchg
fwait
shr
jp
enter
call
inc
dec
stos
out
cmc
std
das
jp
ficomp
jb
sub
mov
pop
outs
ret
js
add
mov
call
mov
mov
movs
movs
pop
add
aas
xor
xor
ja
movs
push
sbb
(bad)
test
cwde
sub
pop
mov
push
icebp
fstp
xor
fld
int
into
or
dec
cmp
mov
pop
ret
outs
mov
or
dec
xchg
dec
push
(bad)
push
das
xor
pop
addr16
push
and
mov
mov
sbb
addr16
gs
dec
mov
push
lods
mov
lock
repnz
lahf
je
mov
int3
dec
pop
sti
in
push
das
fidiv
adc
popf
nop
enter
sub
(bad)
stos
(bad)
jmp
jle
rcr
repz
push
add
rcr
jg
push
sar
mov
pop
retf
inc
mov
mov
ret
inc
add
sbb
inc
clc
in
popa
hlt
adc
inc
xor
icebp
xor
push
lahf
iret
adc
call
jmp
out
into
mov
cli
or
dec
mov
into
sbb
stos
jle
xchg
sbb
rcl
les
and
sbb
xchg
inc
test
xchg
xor
ret
mov
jb
call
pop
icebp
addr16
call
add
imul
xor
mov
rcl
fidiv
dec
push
sbb
mov
dec
and
push
mov
sub
leave
and
mov
jp
and
sbb
fucomip
fcom
pop
mov
outs
push
add
cli
ss
cs
mov
leave
mov
sub
jle
iret
and
stc
mov
xor
cmc
shr
sbb
xchg
clc
retf
rcl
fcomp
mov
sub
jne
in
mov
ss
sbb
add
mov
mov
cmp
shr
sbb
jge
adc
sub
adc
mov
out
(bad)
cld
pop
ret
js
loopne
mov
cli
je
sub
imul
jmp
cmp
bound
fistp
jg
and
stos
jnp
mov
fld
push
xor
or
jecxz
mov
jl
pop
xchg
nop
ins
popf
xchg
cdq
push
mov
cmp
out
test
jl
cmp
movs
mov
cmp
clc
xchg
lock
mov
(bad)
adc
mov
ds
out
(bad)
sub
stos
adc
ds
out
int
das
sar
mov
mov
call
pop
cmps
jae
call
or
jmp
adc
fidiv
mov
mov
pusha
add
sbb
jo
sbb
jne
xlat
and
test
mov
cs
cld
scas
retf
jg
cmps
aas
ror
pop
out
ja
lock
inc
popa
stos
je
xchg
mov
jbe
cli
push
mov
push
out
mov
sti
or
jle
retf
mov
aaa
dec
test
or
push
xchg
push
das
or
pop
not
jp
cmp
cmps
loop
xor
cmc
btc
mov
lds
in
jne
and
idiv
shl
xchg
pop
outs
jne
nop
cmp
push
adc
jnp
mov
test
inc
out
xor
xchg
aad
daa
mov
add
stos
lahf
mov
dec
push
adc
loopne
mov
jl
push
les
or
jb
xchg
pushf
clc
mov
add
jg
fmul
out
les
mov
hlt
call
enter
mov
test
xchg
inc
xor
mov
add
sbb
mov
push
(bad)
cmp
sbb
and
scas
push
jmp
ins
and
paddw
rcr
in
or
movs
push
xchg
call
lds
cld
pop
scas
or
fsub
out
loop
jl
arpl
adc
stc
or
lods
and
scas
adc
es
pushf
in
add
stc
retf
sub
mov
xor
jae
scas
xor
test
mov
or
lods
mov
sbb
scas
xchg
mov
push
enter
xor
popf
push
and
xor
shl
and
push
rcl
and
dec
cs
pop
daa
and
jle
and
inc
and
les
ret
das
aam
dec
dec
arpl
retf
retf
cwde
inc
je
jae
inc
dec
loop
or
cmps
jp
xor
mov
pop
inc
mov
adc
xchg
pop
jp
idiv
es
in
shl
out
popa
xchg
(bad)
sbb
rep
jp
mov
pop
sbb
mov
pop
outs
cmp
push
jge
loope
add
or
jle
fs
ds
xchg
or
and
inc
cmp
push
jb
inc
cs
or
retf
and
inc
mov
lea
clc
cmp
mov
icebp
push
or
in
xchg
(bad)
pushf
jo
loope
fs
mov
add
mov
ins
ins
cs
loope
je
daa
sub
out
push
(bad)
out
push
jecxz
add
es
cmc
aad
ret
ds
jns
mov
xchg
test
and
rcr
in
xchg
call
scas
fwait
(bad)
push
mov
xchg
sub
mov
fbld
dec
mov
ja
mov
movs
jmp
popa
into
arpl
pop
adc
inc
cmp
jmp
pop
cs
lods
mov
lods
pop
sub
dec
adc
push
push
jnp
pop
and
std
cld
stos
out
xchg
mov
mov
arpl
icebp
mov
out
inc
mov
mov
xchg
imul
pop
mov
aas
(bad)
daa
and
cmp
aam
lds
xor
pop
xor
inc
sar
aas
fistp
shl
ss
popa
call
mov
(bad)
inc
cdq
ins
cmp
mov
ins
xchg
rcr
imul
bswap
int
ins
test
cmp
pop
cli
cmp
aas
enter
xchg
call
adc
push
inc
mul
sub
pop
loop
mov
retf
pop
or
pop
retf
xchg
fsubr
xchg
fadd
cwde
mov
adc
or
xor
or
push
mov
aaa
inc
jmp
loopne
dec
clc
cmp
(bad)
iret
enter
ja
gs
mov
ds
les
test
icebp
sar
dec
mov
mov
adc
jge
and
jmp
or
aas
mov
adc
dec
clc
leave
adc
pop
dec
ins
mov
inc
movs
xchg
xchg
dec
lods
and
mov
mov
test
popa
sbb
shl
sub
cld
iret
sbb
mov
lea
or
test
cmp
mov
aad
pop
outs
jno
xor
cmp
mov
push
in
jg
lods
mov
mov
(bad)
js
mov
add
int3
dec
add
or
dec
in
data16
(bad)
stos
fbld
push
push
push
(bad)
and
cmp
xor
pop
mov
mov
sub
cmp
loopne
fcomip
xchg
xchg
pop
in
cld
cmp
jne
add
(bad)
jecxz
mov
cmps
rcr
sub
xor
add
jbe
jl
inc
add
sbb
jb
jns
xchg
inc
sbb
aaa
ret
push
xor
fdiv
popa
pop
retf
or
cmps
sub
fimul
gs
add
aad
inc
jge
mov
mov
mov
and
aad
sahf
icebp
int
outs
repnz
sbb
lock
sub
jmp
sub
pop
(bad)
sbb
xchg
out
cdq
repz
je
inc
xchg
cs
dec
jbe
push
mov
ins
test
ins
jg
mov
cmp
add
dec
ja
pop
dec
loop
add
not
xchg
mov
enter
enter
inc
or
xchg
test
sbb
xchg
jno
out
sub
or
xor
fs
mov
mov
in
jle
je
dec
push
dec
scas
cmp
stos
sar
ret
pop
and
cld
xchg
scas
and
push
bound
dec
mov
xchg
(bad)
sahf
(bad)
add
mov
sub
pop
fld
jg
xchg
cmp
mov
add
or
sahf
and
fcmovnu
mov
pop
or
pop
in
jns
xlat
mov
xchg
pop
pop
push
sub
mov
pop
xchg
cmp
addr16
inc
retf
cmps
xchg
jmp
dec
aaa
in
idiv
and
mov
and
aaa
cmp
ret
stos
mov
xchg
clc
xchg
icebp
iret
adc
adc
jl
and
dec
add
add
ret
pop
pop
sbb
xchg
inc
push
jnp
rcr
or
lahf
jb
loop
adc
push
sbb
sar
pop
adc
xchg
and
pop
jecxz
cwde
jmp
pop
std
adc
mov
inc
ins
push
fdiv
not
mov
icebp
clc
movs
mov
xchg
test
loop
inc
sub
sbb
or
xor
mov
xor
push
xchg
pop
mov
movs
jnp
mov
shl
cmp
adc
fwait
adc
sub
enter
or
sar
xchg
adc
sbb
jno
dec
jbe
call
ins
add
adc
(bad)
outs
mov
and
aas
or
xchg
ss
rcl
fiadd
xchg
xor
aaa
call
popa
add
(bad)
aad
push
cmps
pop
ja
fst
enter
inc
dec
xor
test
xchg
cmp
jae
fmul
add
das
push
or
xchg
(bad)
pushf
les
sbb
mov
in
pop
xor
sub
mov
mov
(bad)
fs
aaa
sti
movs
cmp
sbb
cmp
(bad)
xor
add
(bad)
call
inc
xchg
dec
or
jne
lods
dec
cmp
or
hlt
jmp
push
sbb
pushf
and
cvtps2pi
stc
inc
mov
ja
int3
sub
cmps
rol
sar
daa
sbb
xchg
(bad)
in
rol
add
call
rol
jp
ds
mov
xchg
leave
mov
adc
mov
cld
lds
popa
scas
cdq
inc
xor
in
and
adc
dec
adc
jecxz
sbb
dec
or
push
add
add
or
retf
shl
inc
aam
and
ror
popa
inc
inc
cmp
inc
call
icebp
mov
aam
jnp
jp
push
jne
cs
mov
das
test
push
mov
xchg
xor
xor
add
adc
fild
xor
cmp
scas
mov
cmps
sbb
sub
mov
and
add
arpl
mov
int3
jle
test
shl
xchg
cmp
push
jl
neg
lods
pop
(bad)
sub
sar
rol
add
xchg
fld
add
(bad)
jg
adc
mov
fsubr
lods
in
ss
mov
and
adc
cmp
mov
jg
add
pop
dec
dec
sub
mov
pop
fistp
mov
mov
and
push
test
and
sahf
outs
std
push
mov
mov
aam
loop
jmp
pop
push
and
push
dec
push
xor
adc
xor
imul
jb
mov
clc
mov
mov
sbb
add
xchg
retf
mov
shl
sub
data16
mov
pop
mov
sub
arpl
popf
and
cwde
and
mov
enter
rol
push
cmps
mov
inc
xchg
inc
jp
pop
pop
movs
stos
pop
nop
test
cwde
sbb
scas
lea
sub
pop
inc
mov
into
sub
test
mov
push
sbb
ret
mov
shr
jecxz
(bad)
(bad)
mov
cmc
cdq
ret
(bad)
sub
lods
add
inc
pop
jmp
inc
dec
pop
dec
pop
pop
aas
push
cmp
cmp
pop
jno
pop
ret
dec
mov
mov
(bad)
sbb
test
add
imul
clc
dec
div
mov
sbb
fild
jne
jmp
sbb
(bad)
mov
pop
lods
inc
int
ins
push
lods
xchg
vmovntpd
inc
add
sti
not
mov
mov
pushf
jle
(bad)
shr
lea
test
inc
push
loope
jb
sub
outs
sbb
(bad)
cdq
mov
dec
push
lods
sbb
dec
adc
jp
sub
leave
or
adc
stos
(bad)
in
sti
fidivr
rcr
(bad)
push
jne
mov
imul
pop
and
out
test
fstp
and
cmps
jmp
fs
arpl
xchg
sub
push
xchg
popa
adc
(bad)
ins
mov
cld
pop
ret
fsubr
xchg
adc
fsub
dec
jb
pop
or
jle
mov
aas
pop
xchg
int
aad
and
mov
in
push
sbb
es
mov
mov
rol
sub
fbstp
and
mov
mov
push
in
jmp
clc
jg
addr16
xchg
(bad)
push
pop
pop
in
pop
fld
ficom
pop
inc
xchg
xchg
sub
xor
leave
pop
mov
lea
inc
add
jns
iret
ret
sbb
add
imul
dec
sub
sub
push
bnd
mov
fiadd
pop
div
pusha
push
mov
dec
out
mov
mov
pop
pop
dec
(bad)
icebp
xchg
adc
pop
adc
sub
mov
push
xchg
push
imul
in
mov
repnz
add
push
sub
test
dec
push
jnp
out
shl
jg
mov
mov
fist
lock
add
push
dec
add
jmp
ror
les
jg
xchg
and
mov
loop
add
ret
sub
and
scas
and
sbb
xor
add
pop
out
scas
stos
(bad)
jmp
sbb
fwait
hlt
cmp
mov
cmp
cmps
arpl
shl
movs
cmps
mov
lahf
jle
dec
pop
scas
stos
mov
mov
sub
push
cmp
push
or
lock
and
std
dec
fwait
ins
lock
call
test
jnp
mov
dec
cmp
adc
lods
pop
mov
shl
add
mov
sub
or
sahf
iret
test
add
(bad)
icebp
cmc
out
enter
fsubr
xchg
xchg
xchg
shl
stos
and
jne
bound
push
ins
(bad)
pop
cmps
lods
inc
and
xor
mov
in
mov
loop
push
jne
mov
inc
jge
push
adc
xor
push
add
cmp
pop
or
jl
pop
or
xchg
mov
dec
cmp
cmp
mov
pop
pop
out
sbb
and
stos
inc
addr16
pop
push
(bad)
in
ins
mov
jg
sub
pop
out
retf
xchg
xor
imul
(bad)
inc
cmc
or
cs
fcmovu
adc
dec
or
and
sbb
jno
pop
xchg
repnz
inc
pop
mov
push
movs
fst
dec
xchg
in
jbe
xchg
pop
es
(bad)
mov
cmp
movs
cs
xchg
out
cmp
les
mov
loop
pop
inc
jmp
sub
pop
push
test
mov
(bad)
lahf
cdq
in
dec
outs
aaa
cmps
hlt
mov
pop
fwait
xchg
jg
ficomp
jbe
xor
or
scas
movs
push
mov
pop
jbe
mov
xchg
mov
pop
repz
jnp
pop
sub
gs
inc
jbe
add
cmps
lahf
mov
mov
(bad)
(bad)
push
adc
shr
adc
rol
pushaw
push
(bad)
push
int3
mov
fild
in
mov
ret
fisttp
jl
pmaddwd
loop
stos
aas
mov
inc
adc
out
and
mov
xlat
aam
mov
xchg
xchg
push
xor
cdq
bound
jge
or
(bad)
scas
cmp
sbb
add
jg
push
and
xchg
cmp
movs
xchg
clc
or
jnp
cmp
xchg
test
push
xor
sub
js
xchg
jnp
in
pop
outs
inc
fbstp
dec
retf
adc
cmp
test
cdq
jge
shr
scas
cli
lods
add
xchg
std
mov
dec
retf
jecxz
adc
push
lods
mov
adc
inc
mov
sbb
push
jns
in
jecxz
push
sub
(bad)
in
in
in
inc
lahf
outs
push
jae
and
call
adc
aad
in
pop
xchg
mov
outs
ret
sub
add
mov
sub
(bad)
loopne
leave
scas
repnz
ret
push
and
or
out
ins
out
mov
and
sahf
cdq
arpl
rcl
and
in
fsubrp
sub
push
lahf
test
das
aas
fdivr
push
int3
addr16
and
sbb
rcr
sub
push
movs
adc
(bad)
jp
and
and
dec
pop
dec
fld
ret
and
loope
jmp
dec
mov
addr16
dec
inc
lods
movs
or
push
fcmovnbe
mov
popa
sti
dec
adc
dec
gs
cmp
xor
mov
shl
or
sar
shr
js
les
fsubr
fs
shl
cmp
enter
loopne
aas
repz
sbb
fdivr
push
pop
mov
push
or
adc
mov
push
ret
iret
sahf
mov
push
inc
pop
cld
fwait
pop
bound
push
push
ret
inc
test
(bad)
shr
test
shr
add
adc
fst
cmp
stc
sub
or
sub
test
lods
push
mov
push
adc
adc
xchg
add
jnp
and
leave
xchg
xchg
out
fwait
jecxz
or
adc
nop
out
imul
dec
cmp
cmp
stos
test
cmp
mov
mov
aas
rcl
adc
sub
mov
call
mov
xor
std
push
std
js
(bad)
fmul
pop
in
neg
jge
inc
jmp
test
push
adc
or
lahf
mov
mov
mov
lahf
in
leave
imul
inc
push
xchg
xor
cmp
sub
loope
imul
inc
imul
stos
mov
push
not
inc
les
jmp
cmps
and
ins
mov
fld
push
dec
or
jg
stc
leave
fbstp
lahf
inc
xor
or
inc
pop
jno
lock
(bad)
lods
pop
push
shl
inc
mov
lock
adc
add
mov
xlat
add
rcr
mov
(bad)
icebp
fisubr
(bad)
dec
sbb
js
inc
int
stos
(bad)
loop
cwde
fistp
nop
mov
jbe
cs
popf
iret
sub
inc
scas
xchg
retf
movs
pushf
dec
fucomip
mov
daa
mov
(bad)
aad
mov
jmp
pop
cli
or
push
or
test
pop
mov
test
mov
fcom
rcl
add
test
mov
ds
mov
lahf
call
cmps
or
adc
pop
retf
daa
adc
retf
adc
wrmsr
cmp
mov
ror
stc
cmc
shl
cmp
mov
int3
adc
jbe
mov
scas
xchg
nop
dec
pusha
ja
sbb
out
loop
and
xor
add
push
ins
cmc
cmp
stos
jl
sub
adc
scas
push
cmp
mov
fdiv
pop
scas
mov
movs
xor
cmp
push
sbb
inc
push
fbstp
jmp
leave
mov
adc
xchg
daa
pop
movs
out
or
mov
sub
push
sbb
xchg
ror
jmp
adc
cs
sub
pop
cmps
and
lock
mov
sar
cwde
xor
sbb
cmp
mov
cmp
jne
pop
dec
(bad)
mov
mov
cmp
mov
lahf
fdivr
ins
push
xlat
rcl
aam
add
les
scas
adc
mov
addr16
stos
hlt
add
sbb
inc
outs
fdivrp
out
sbb
imul
movs
cmp
cld
and
mov
jg
dec
xchg
repz
fxch
call
cmp
popa
and
xor
push
sbb
shr
cld
mov
fsub
mov
adc
cwde
mov
aaa
inc
sbb
sub
pop
scas
inc
in
std
leave
mov
shr
hlt
xchg
outs
xchg
and
push
mov
pop
jmp
add
adc
push
or
xchg
fmulp
or
pop
rcl
addr16
sbb
repnz
xor
fwait
sbb
pop
mov
or
dec
add
xchg
push
sbb
lea
cld
push
fidiv
imul
inc
dec
shl
sbb
mov
into
pop
iret
std
inc
xchg
cmp
out
fistp
clc
lods
dec
and
out
or
fsubr
cmp
or
out
loop
pop
dec
jmp
sub
adc
mov
in
fdiv
push
xor
dec
xchg
jae
pop
aaa
addr16
mov
push
fstp
or
in
cld
sbb
ret
sti
es
pop
dec
outs
fwait
mov
daa
call
outs
ror
jo
fsubp
add
in
inc
call
ins
mul
and
mov
jo
out
dec
repnz
cld
je
mov
rcl
push
mov
push
sahf
jne
jae
sbb
and
xchg
(bad)
xchg
pushf
xchg
mov
arpl
sub
jecxz
and
mov
jne
jge
(bad)
xor
scas
cmp
dec
bound
out
cdq
test
xchg
adc
sbb
mov
cmps
inc
test
lea
sti
push
fldenv
pushf
mul
(bad)
lahf
jmp
add
fld
out
jle
imul
not
fdiv
jne
scas
out
mov
into
cs
mov
add
repz
mov
dec
cmps
mov
sbb
adc
pusha
ja
les
daa
lea
test
jg
in
jae
out
movs
movs
loope
add
ret
fucom
add
fld
lahf
or
pop
xchg
fisttp
pop
fs
jno
and
push
push
ss
bound
mov
stos
jnp
mov
mov
popf
xor
pusha
add
cdq
es
les
nop
icebp
stc
and
push
xchg
es
push
das
inc
mov
pop
call
push
sbb
add
pop
icebp
(bad)
adc
mov
fld
xchg
popa
loope
ret
inc
pop
imul
js
je
pop
aas
cmp
jns
push
cwde
lock
xor
xchg
outs
push
pop
icebp
mov
hlt
popw
jge
sar
fcomp
mov
arpl
mov
mov
push
add
clc
mov
pusha
push
retf
outs
scas
jge
sbb
dec
fs
pop
sub
shr
leave
mov
mov
cmp
bound
push
clc
mov
test
fisub
mov
mov
ins
loopne
cmp
fnsave
cmp
dec
sub
aad
add
in
and
fcmovbe
pop
pushf
scas
cmp
sub
imul
pop
mov
pop
sbb
add
sbb
lea
aam
or
addr16
sub
pop
cmc
stc
test
jmp
cmp
shl
iret
mov
les
adc
or
push
paddd
jb
fcomi
xor
cmps
sbb
ss
cwde
or
fsubr
pop
enter
ins
jb
or
stc
rcr
pop
jg
out
ss
or
and
std
dec
cmc
jp
into
shr
jne
lods
mov
pop
sbb
or
fcomp
daa
sar
popf
fsub
xor
push
pop
push
dec
or
int
imul
(bad)
or
add
inc
fsubr
clc
(bad)
addr16
mov
dec
test
sub
dec
or
stc
aaa
js
mov
lea
jae
adc
dec
push
(bad)
jp
sbb
adc
nop
rcl
adc
(bad)
cld
retf
ins
xchg
add
inc
mov
and
lds
jne
out
pop
mov
lods
enter
pop
mov
cmps
adc
cmp
popa
ret
or
(bad)
fadd
cs
icebp
mov
cmp
dec
jp
xchg
mov
sub
js
lea
add
stos
mov
retf
jmp
mov
mov
xchg
mov
adc
out
inc
addr16
dec
dec
jmp
mov
arpl
xor
xor
mov
icebp
fcom
lahf
mov
xor
popf
shl
imul
mov
out
dec
repnz
paddusb
arpl
push
push
mov
mov
inc
movs
mov
in
call
lock
mov
vpmadcswd
pop
pop
loope
ins
push
mov
pop
(bad)
dec
cdq
dec
adc
push
frstpm(287
fwait
ja
clc
in
pop
imul
jae
pop
push
stc
sbb
jne
pop
cld
cs
fxam
jg
cmp
int3
sub
js
adc
neg
(bad)
aam
sar
call
push
xor
mov
push
sub
mov
scas
xchg
ds
pop
pop
pop
mov
mov
hlt
xor
(bad)
push
data16
lods
fisub
mov
les
inc
(bad)
ins
dec
push
scas
jb
mov
arpl
imul
adc
out
mov
jno
lds
push
xchg
inc
daa
ins
pop
into
cmp
les
pop
lahf
cmp
or
xchg
int3
push
icebp
dec
sbb
std
ds
pop
mov
ss
push
or
jmp
test
adc
(bad)
gs
and
test
out
mov
loopne
shl
mov
repz
jb
mov
xor
repz
sti
(bad)
jbe
xor
imul
inc
mov
sub
inc
pop
repnz
out
(bad)
shl
loopne
pop
cli
and
rcr
pushf
xchg
sbb
mov
xchg
in
add
adc
(bad)
enter
out
cwde
xchg
inc
in
das
push
mov
mov
mov
fnsave
lea
js
mov
les
adc
jae
and
sub
mov
cli
sbb
lea
xchg
into
push
push
jno
cmc
push
push
hlt
mov
sbb
and
fsub
jb
mov
push
test
xchg
push
mov
xchg
clc
inc
fwait
cmps
xor
pop
mul
lds
cwde
mov
or
test
mov
add
pop
nop
xchg
lock
outs
adc
inc
inc
es
inc
inc
mov
gs
inc
es
cmp
imul
push
inc
int3
xchg
call
pop
adc
xchg
xchg
sbb
xchg
push
lods
movs
arpl
out
cdq
and
adc
jmp
pusha
cwde
cmp
test
mov
fwait
in
dec
or
mov
fldenv
lock
shl
jb
inc
pop
ss
ret
mov
inc
push
je
aam
mov
or
fild
cmps
fwait
sbb
and
fmul
ja
ror
(bad)
mov
inc
lds
data16
and
pop
sbb
fisttp
ror
ins
add
jo
loop
scas
cmp
(bad)
mov
dec
push
jg
out
xor
adc
movntq
xchg
jle
stos
jmp
in
push
in
aaa
daa
and
lods
adc
jne
xchg
ror
adc
add
jge
sbb
adc
mov
shl
pop
cmp
inc
jns
mov
pop
sar
mov
mov
sbb
stos
cmps
mov
push
std
cli
daa
js
ficom
retf
pop
outs
dec
jno
stc
ret
jno
mul
jcxz
push
push
leave
add
icebp
adc
mov
xor
test
mov
add
sbb
adc
ins
mov
xchg
jge
pusha
mov
bound
push
xchg
pusha
mov
inc
or
popf
aaa
test
sbb
cmp
push
push
or
sar
and
les
push
ss
mov
add
imul
neg
sub
sbb
icebp
jb
sbb
int
sub
hlt
mov
mov
retf
cmp
in
sub
loopne
inc
or
sbb
sub
push
dec
call
or
push
sub
lea
into
je
aaa
je
push
sbb
fiadd
xor
ss
movs
test
jmp
pop
out
xchg
scas
xor
mov
pop
shl
outs
and
sahf
pop
gs
xor
sbb
cmp
inc
test
push
mov
jb
mov
cs
outs
add
out
bound
inc
adc
xlat
push
cld
mov
xor
in
dec
inc
add
es
enter
or
pusha
mov
jmp
sbb
(bad)
sub
mov
xor
iret
jecxz
in
rcl
fwait
gs
retf
sub
in
mov
add
loope
arpl
pop
setge
mov
xchg
cmp
ror
shl
sub
or
mov
movs
test
push
test
stc
movs
daa
retf
enter
sub
dec
(bad)
rcr
pop
int
jle
mov
cmp
jo
pop
ss
mov
call
dec
inc
or
push
adc
sti
popa
dec
enter
and
xor
adc
sbb
movs
adc
arpl
dec
or
mul
pop
adc
addr16
lds
add
popa
or
pop
or
push
lock
push
lods
add
inc
inc
pop
stos
cmp
lea
clc
add
add
mov
jne
retf
adc
sbb
or
cmp
xchg
inc
sub
movs
sub
xor
mov
dec
out
mov
movs
repz
fwait
or
mov
mov
ret
bound
hlt
mov
jne
dec
out
pop
adc
fldenv
sub
fcmovb
int
xlat
iretw
pop
loopne
adc
dec
and
xchg
xchg
cmp
sbb
inc
std
sbb
cmp
xchg
mov
or
loop
movs
xchg
call
mov
or
test
aas
dec
sub
mov
cmc
mov
call
or
push
ds
pop
int3
cmc
into
and
push
xor
sbb
mov
cli
out
cdq
ret
mov
arpl
fisub
bnd
hlt
call
cwde
(bad)
je
lods
adc
adc
idiv
and
adc
das
gs
jle
and
xchg
pop
into
imul
test
adc
sbb
mov
xchg
add
mov
xor
sbb
movs
mov
and
or
rcr
sub
movs
pop
sbb
add
push
arpl
adc
fs
or
es
js
mov
js
fwait
or
pop
mov
(bad)
in
loope
sbb
push
jo
test
push
ret
jl
mov
call
xchg
inc
pop
or
leave
(bad)
push
and
(bad)
nop
out
xlat
cmp
test
clc
cmp
sahf
dec
call
ss
rcr
and
in
or
popf
stos
push
aam
imul
cli
pop
sbb
inc
std
mov
jno
xor
pop
stos
mov
or
arpl
scas
jne
dec
in
fmulp
inc
fsubr
repz
push
xchg
dec
mov
or
rcr
add
dec
sub
shl
push
mov
mov
aaa
mov
push
lods
pop
inc
call
jns
sbb
push
outs
std
dec
mov
mov
div
fsubr
xchg
daa
xor
popf
icebp
lahf
dec
fisubr
sub
push
mov
pop
sbb
ins
xchg
in
sub
aaa
jl
mov
inc
inc
lds
jmp
mov
mov
icebp
jmp
sbb
fidiv
ror
test
out
pop
aad
mov
nop
mov
jle
or
mov
push
mov
dec
adc
mov
dec
loope
add
pop
(bad)
fnstenv
xor
ret
push
xor
cmp
(bad)
xor
xlat
movs
mov
ret
xchg
xor
pop
std
pop
and
jge
and
pop
rol
fistp
popf
leave
dec
mov
in
(bad)
out
stc
inc
sub
adc
nop
pop
xor
adc
dec
arpl
std
ja
add
sub
push
pop
mov
mov
icebp
mov
icebp
aas
cs
repz
(bad)
outs
ret
test
sbb
jecxz
ror
lock
cld
cmps
pushf
je
xor
fcomp
cmc
pop
jns
stos
sbb
mov
sbb
cmp
jnp
in
mov
dec
shr
push
stos
ret
cmc
sbb
out
fmul
jnp
mov
fcomip
into
das
fist
rcr
jno
stc
iret
enter
push
mov
dec
gs
(bad)
fdiv
and
cmc
inc
repnz
fisttp
sub
int
lods
and
mov
and
fwait
jne
jbe
sti
inc
call
popf
mov
inc
jmp
jge
xchg
lock
je
(bad)
jmp
fst
cmp
push
pop
(bad)
jb
mov
xchg
push
clflush
das
inc
call
push
aas
dec
sbb
and
int3
mov
jp
sub
add
adc
jmp
test
aas
sub
call
icebp
xchg
push
mov
leave
js
xor
fmul
jae
xchg
xchg
jne
icebp
(bad)
idiv
icebp
scas
lock
daa
retf
sub
(bad)
clc
add
ss
lods
paddusb
dec
rcr
into
mov
shl
sub
cmp
jne
jle
fnstenv
(bad)
xchg
(bad)
sub
loop
cmp
arpl
test
or
aas
stos
loope
push
jge
pop
push
ss
test
sti
push
dec
push
mov
mov
aas
sub
sbb
rcr
popf
aad
and
jno
jmp
pop
shr
xchg
inc
pop
scas
out
dec
pop
pop
mov
push
sub
fxch
pop
or
push
adc
or
fsubr
dec
xchg
movs
sti
mov
xchg
mov
lahf
gs
sub
xchg
lahf
adc
jg
mov
mov
repnz
mov
mov
mov
in
not
rcl
stos
mov
mul
dec
mov
mov
mov
adc
mov
sub
dec
add
dec
lods
daa
adc
dec
xlat
push
cwde
(bad)
ret
mov
jge
cli
lea
test
jl
xlat
add
mov
iret
addr16
retf
or
sub
mov
popf
pop
mul
inc
fidivr
xchg
movs
jmp
add
xor
xor
mov
mov
fs
loopne
xchg
and
aam
jmp
push
mov
sub
das
ins
aad
dec
push
cmp
sub
inc
sti
adc
jmp
leave
mov
pop
fstp
mov
and
inc
popf
loope
movs
push
sub
pusha
xor
cs
mov
in
fcomp
in
jno
je
and
adc
jp
cmps
mov
push
cmp
pop
push
stos
sar
cwde
call
data16
xchg
mov
push
or
dec
in
xchg
sub
pop
xchg
sub
pop
pushf
je
mov
into
push
xchg
addr16
adc
xor
enter
jne
cld
mov
ror
cmp
call
pop
inc
jmp
sub
xor
je
fucom
fmul
cwde
fbstp
repnz
mov
mov
fistp
and
jg
cmp
push
fadd
bound
push
mov
jl
(bad)
jmp
dec
sbb
lea
(bad)
js
mov
(bad)
dec
(bad)
mov
into
cwde
adc
in
push
xor
(bad)
mov
out
xchg
xchg
pop
add
aam
mov
test
sub
clc
(bad)
cmp
sbb
add
jp
push
mov
fidivr
mov
jmp
add
inc
xor
gs
imul
cmp
cmp
inc
clc
in
aam
xor
ja
repnz
fstp
ins
sub
mov
cmp
stos
inc
pop
aam
test
daa
jae
sub
inc
push
jo
push
mov
xor
cmc
lods
cmp
loop
js
retf
icebp
retf
shl
sbb
mov
lods
push
aam
ror
dec
mov
or
hlt
push
scas
imul
xchg
cs
rcr
mov
in
(bad)
and
cmp
jp
(bad)
pop
hlt
adc
lea
setle
and
ins
adc
aas
ja
sti
inc
xor
and
adc
mov
in
aad
sti
cmps
stos
sbb
dec
ret
jg
lea
and
mov
cmc
loopne
push
sbb
sub
mov
mov
push
pop
out
div
pop
push
sahf
jo
popa
xchg
inc
aaa
jne
enter
movs
imul
dec
and
scas
cmp
inc
les
push
adc
int3
(bad)
fisubr
(bad)
dec
int3
mov
imul
rcr
shl
sbb
push
ss
pop
es
in
imul
(bad)
jne
pop
retf
outs
dec
mov
in
mov
js
in
cmps
push
out
loop
ret
or
rcl
movs
mov
ins
test
mov
or
or
shl
enter
enter
(bad)
and
dec
sar
je
cmc
mov
ror
adc
adc
icebp
arpl
out
sahf
jne
pop
enter
mov
nop
stc
mov
call
rcl
jle
mov
scas
xchg
push
jmp
arpl
cli
sbb
mov
inc
mov
int3
xor
mov
hlt
int
fisubr
xchg
in
jno
push
movs
and
sti
mov
push
mov
mov
dec
fmul
sbb
scas
imul
int
sub
rcl
pop
sahf
adc
inc
test
inc
sti
xor
xor
inc
cmps
test
jmp
popa
and
fisubr
inc
call
adc
jg
outs
test
lock
in
push
ss
jae
ss
push
fs
xor
mov
les
push
push
outs
in
pop
outs
jbe
mov
sbb
(bad)
(bad)
shl
or
shr
xor
shl
xor
int
repnz
mov
jl
inc
jge
jne
dec
retf
f2xm1
fidiv
xor
mov
out
pop
call
mov
test
lods
xchg
mov
jmp
fmulp
cmp
mov
inc
mov
cwde
mov
adc
stos
in
enter
lahf
test
jne
add
push
(bad)
pop
cmps
cdq
dec
mov
int3
lods
fsubr
sub
je
xor
(bad)
loope
icebp
loop
dec
sti
mov
adc
pop
nop
repnz
push
pop
imul
or
pushf
repnz
fdiv
fdiv
push
jns
test
pop
mov
sar
int
xor
mov
and
cmp
and
sbb
loopne
imul
rcl
scas
xor
fs
jo
pop
jmp
dec
(bad)
aam
cld
hlt
sbb
aaa
or
push
mov
sub
sti
sbb
adc
scas
mov
push
xor
popa
jno
or
pop
pusha
sub
pop
pop
add
xor
xchg
push
dec
scas
sbb
int
test
inc
iret
sub
je
cdq
cwde
fistp
arpl
sub
mov
call
push
sub
imul
mov
out
inc
ret
sub
add
data16
ja
ret
mov
mov
cmp
popa
sub
gs
sbb
cdq
daa
mov
pop
nop
or
mov
push
aam
test
and
sahf
test
in
mov
dec
cdq
es
jne
(bad)
sti
cld
lahf
or
mov
lahf
xlat
xor
jmp
inc
and
mov
inc
retf
jle
push
xchg
sub
sar
push
adc
in
pop
mov
(bad)
addr16
stos
or
int
fdiv
fisttp
or
or
sbb
addr16
jb
cwde
int3
add
(bad)
push
xor
mov
mov
pop
sub
div
call
imul
lods
(bad)
in
xchg
push
pushf
pop
rcr
xor
fsubr
fisttp
push
loope
dec
clc
mov
sub
scas
mov
sbb
or
cwde
fcomp
ret
aas
pop
sbb
or
and
pusha
popa
cwde
sar
inc
cmp
xchg
inc
push
cmp
sbb
outs
pop
outs
retf
inc
jmp
in
lods
jge
hlt
iret
push
jp
mov
jo
add
addr16
(bad)
pop
cmp
mov
or
adc
call
push
xchg
inc
out
push
imul
cmp
fwait
int
lock
push
rcr
inc
push
scas
inc
adc
retf
aas
mov
mov
ds
push
loope
out
adc
pop
jp
cmc
movs
sub
shr
sub
clc
mov
test
(bad)
je
xchg
dec
jmp
daa
push
push
int3
out
ins
xchg
push
push
scas
test
adc
sbb
retf
test
icebp
and
adc
mov
cmp
aam
leave
jmp
cmp
ins
push
jne
cmp
hlt
bound
jle
out
out
jge
outs
pusha
or
pop
popa
inc
std
sub
jl
xor
xor
or
(bad)
int
pop
dec
jne
fwait
or
or
loope
push
loope
cld
aas
xor
xchg
xchg
(bad)
std
clc
inc
pop
retf
ds
pushf
and
mov
and
ja
int3
jl
mov
inc
inc
add
and
repnz
movs
sbb
ss
inc
fwait
jg
in
(bad)
lock
add
jmp
xchg
fs
and
and
loop
or
pop
mul
sub
jno
outs
les
sub
loopne
lock
jae
sub
pop
mov
out
fmul
jno
inc
cld
dec
fwait
push
push
jae
xor
or
lock
stc
jmp
loopne
sbb
inc
jb
iret
data16
push
pop
jns
push
inc
dec
mov
fimul
mov
(bad)
mov
ficomp
push
popf
jge
jmp
dec
into
nop
sub
mov
in
jmp
pop
add
mov
rcr
mov
cmp
loopne
call
mov
sbb
jecxz
jecxz
pop
adc
fs
mov
ds
clc
or
push
loop
sahf
mov
sbb
mov
push
sbb
pop
lods
ins
fucompp
push
test
sub
jne
inc
jmp
stos
iret
out
dec
jne
xlat
or
outs
add
xor
loopne
loopne
int3
adc
sub
sub
add
in
mov
xor
shr
pop
mov
sub
xchg
pop
pop
nop
pop
mov
or
push
sbb
ins
xor
(bad)
js
je
cdq
dec
sub
cmp
cmp
push
xlat
jmp
or
push
sub
fwait
ret
aas
mov
mov
mov
movs
dec
mov
jae
lock
iret
mov
pushf
jl
popa
(bad)
lea
dec
nop
xor
leave
cmp
push
mov
inc
xchg
lock
mov
jns
test
xchg
xor
add
mov
and
xor
lods
push
inc
sbb
inc
mov
nop
add
dec
ror
icebp
int3
inc
jbe
jmp
dec
icebp
movs
pusha
fldenv
pop
and
dec
add
stos
std
adc
cmp
je
out
jns
push
sahf
sbb
test
mov
mov
movs
outs
pop
cld
push
push
and
inc
or
leave
scas
add
aaa
outs
and
imul
mov
sub
sub
pop
xchg
jns
and
pusha
adc
push
scas
sar
inc
cmp
add
lea
pop
and
loopne
and
add
cwde
aam
ret
arpl
mov
cmp
push
adc
movs
lock
xchg
outs
aas
(bad)
xchg
xor
aas
lods
bound
pop
test
inc
fisubr
fadd
inc
call
jge
push
inc
or
sub
jae
mov
stc
lahf
imul
add
dec
dec
lods
cwde
movs
pop
jbe
xchg
fs
je
cmp
pop
add
(bad)
call
xor
and
mov
pop
mov
fistp
mov
push
or
cmc
addr16
jg
mov
cwde
scas
inc
inc
inc
cmp
mov
add
add
and
or
mov
int3
js
dec
scas
test
popa
xor
(bad)
fldcw
jo
jnp
inc
mov
(bad)
cmc
faddp
xchg
ins
ins
xchg
xchg
repz
in
aaa
das
jnp
sbb
repnz
inc
cmps
add
xchg
popa
jo
jp
xchg
imul
outs
jnp
inc
push
cmp
jae
pop
mov
sub
(bad)
clc
dec
inc
sub
sti
or
or
addr16
clc
retf
adc
xchg
inc
retf
movs
popf
bound
mov
outs
ret
pushf
js
jo
cli
ret
arpl
bound
mov
add
dec
mov
ins
fdivr
shl
cld
cmp
mov
int3
mov
sub
push
mov
pusha
shr
xor
dec
mov
fidivr
jae
div
fisttp
mov
mov
pop
ja
cwde
push
mov
or
dec
sub
add
pop
and
stc
sub
sub
sar
jg
and
arpl
cmp
mov
retf
mov
pop
dec
loopne
gs
and
jmp
fidiv
and
jmp
nop
and
in
jle
jns
movs
jmp
pop
xor
das
movs
jnp
inc
jbe
popf
xlat
xchg
mov
mov
fidivr
sti
adc
mov
pop
fucomi
popa
jl
push
out
mov
lahf
or
ins
cmps
xor
and
leave
fld
dec
mov
sub
xchg
dec
cmps
jp
neg
sub
mov
daa
inc
xchg
or
outs
pop
pop
aam
xchg
inc
jge
bswap
cmp
inc
loope
popa
jecxz
xor
cld
pop
fisttp
inc
jg
sbb
int
lods
or
sahf
out
cmps
adc
mov
je
shr
mov
adc
cmp
aas
setnp
xor
rcl
xor
pop
xor
sbb
mov
mov
pushf
(bad)
test
or
jbe
je
cmp
inc
sti
xchg
mov
jb
cld
call
adc
xlat
adc
(bad)
cmp
xor
in
mov
jns
add
mov
iret
out
out
rcl
inc
call
add
adc
(bad)
xchg
in
(bad)
ds
stos
outs
inc
popa
mov
pusha
add
cmp
fs
pop
xchg
mov
test
pop
cmc
inc
xor
jne
sbb
movs
mov
sub
jb
jl
mov
icebp
bound
fst
or
add
lock
push
inc
sbb
movlps
out
add
inc
loopne
sub
(bad)
shl
mov
add
mov
pusha
adc
xchg
jl
outs
scas
mov
retf
xchg
pusha
add
adc
adc
hlt
sub
xor
add
add
mov
test
test
scas
repnz
cmp
dec
ins
ins
inc
inc
fmul
fcmovnb
fadd
inc
jp
mov
mov
push
add
jmp
mov
call
sbb
mov
push
mov
dec
pop
push
push
out
fimul
mov
fsubr
mov
sbb
push
cmp
int3
clc
push
sub
mov
clc
fisubr
bnd
mov
rcl
mov
push
(bad)
jne
xchg
mov
mov
fld
test
cmps
mov
cmp
mov
mov
jg
add
stos
jno
cmps
or
inc
pop
pop
adc
cmp
(bad)
sbb
jp
lds
cmp
test
arpl
ins
gs
lahf
imul
mov
fs
out
loop
jae
rol
mov
cmp
xchg
inc
iret
push
aam
and
(bad)
(bad)
push
out
jle
lds
out
sbb
cs
pop
jne
mov
ja
mov
jp
enter
and
pop
mov
fsubr
sbb
imul
pop
mov
xor
mov
cmp
xor
mov
pop
inc
or
xlat
mov
push
push
inc
mov
and
pop
scas
xchg
and
push
shl
not
xchg
or
daa
cld
mov
mov
jbe
popa
push
sub
dec
inc
icebp
mov
and
push
xor
test
in
out
cmp
jl
inc
ret
jge
fnstenv
imul
int3
mov
sahf
inc
retf
out
(bad)
std
or
push
es
lea
xchg
mov
lods
mov
repnz
mov
jge
or
push
push
mov
lods
(bad)
jo
push
into
add
mov
call
test
lds
cdq
cmps
sbb
shl
and
xor
rol
test
es
inc
movs
mov
mov
mov
jp
jg
pushf
push
xchg
inc
xor
(bad)
pop
dec
(bad)
jecxz
adc
shl
daa
adc
jo
mov
lock
jle
cdq
faddp
inc
ins
or
test
(bad)
inc
mov
xchg
mov
add
into
dec
xchg
xchg
retf
add
imul
fild
call
sub
add
cmps
out
cs
mov
pop
xchg
cmp
aas
mov
dec
mov
loop
ret
mov
outs
add
cli
nop/reserved
popf
sbb
dec
scas
stos
push
push
sub
pushf
dec
pop
loope
fidivr
dec
pushf
sub
and
mov
in
mov
lods
in
cmp
(bad)
cmp
inc
and
fsub
lahf
outs
mov
arpl
loope
fdivp
xchg
cmps
xlat
scas
arpl
(bad)
std
leave
or
movs
add
and
mov
(bad)
jnp
add
and
dec
sbb
pop
add
pop
outs
(bad)
mov
or
sub
add
cld
dec
or
mov
div
jmp
out
cmp
cmp
in
mov
mov
out
imul
out
es
inc
mov
or
xchg
pushf
jge
sti
mov
mov
or
repz
or
add
xchg
mov
cmp
ret
xor
mov
xchg
int
xlat
and
push
jae
mov
jns
mov
cmp
push
mov
mov
adc
mov
sub
stos
xor
in
xchg
cmp
gs
sbb
fdiv
push
inc
inc
outs
pop
fldl2e
sbb
popf
dec
jno
fstp
cld
aas
xchg
inc
(bad)
mov
stc
dec
in
mov
jecxz
adc
(bad)
call
test
stc
daa
sbb
xchg
mov
scas
mov
ds
in
jg
jl
mov
push
cmp
mov
push
lea
das
outs
add
rol
xchg
jns
idiv
add
in
jbe
out
inc
sub
push
imul
inc
out
ficomp
sbb
mov
ins
xlat
mov
dec
push
jne
lds
loopne
(bad)
xchg
movs
les
dec
dec
test
sub
xor
shr
sub
enter
pop
popa
pop
pushf
ret
fmul
cmps
(bad)
push
test
adc
pushf
push
inc
dec
and
mov
cmp
xor
jmp
mov
jnp
leave
neg
adc
call
outs
es
inc
inc
lods
daa
ss
sbb
or
pop
jp
push
adc
sbb
out
cld
shl
jb
out
dec
dec
call
mov
out
sub
(bad)
mov
arpl
shl
dec
hlt
mov
lods
xchg
push
cld
cdq
jno
push
jmp
push
xchg
repnz
movs
shr
or
mov
cmp
out
or
push
sbb
popf
and
mov
lahf
retfw
pop
(bad)
fwait
icebp
ss
scas
repnz
cli
and
loop
push
mov
test
rcl
xor
add
rcr
or
sub
ret
sub
pushf
inc
ins
jmp
das
das
add
sbb
retf
(bad)
dec
inc
mov
dec
les
mov
movs
sbb
xchg
retf
sbb
das
mov
idiv
out
ins
push
pop
fadd
ret
mov
adc
(bad)
outs
pushf
or
cmp
mov
jg
mov
mov
dec
pop
les
out
pop
ret
jnp
fistp
sub
popf
pushf
dec
int
mov
dec
repz
cmp
jle
retf
xor
cmp
inc
cdq
addr16
sbb
push
sbb
movs
mov
xchg
loopne
rcr
push
test
daa
or
mov
test
fwait
or
push
dec
xchg
and
cwde
test
dec
or
or
adc
or
pop
aam
test
outs
ins
pop
mov
scas
dec
dec
cld
fiadd
inc
push
mov
sti
arpl
mov
push
daa
xchg
retf
fstp
sbb
cs
pushf
mov
stc
cs
pop
call
test
xchg
call
pusha
mov
sbb
sahf
bound
mov
add
clc
ins
push
test
add
dec
pop
adc
jp
and
imul
fsubr
pop
push
retf
ret
xchg
iret
jg
xchg
rol
jae
ret
popf
push
push
and
dec
test
mov
ins
psubq
or
dec
loop
and
adc
dec
inc
clc
cmp
pop
add
sub
cmps
stos
and
adc
cmp
call
mov
jmp
cmps
push
push
(bad)
imul
scas
in
scas
out
mov
ss
dec
ins
gs
and
rcl
mov
out
cmp
inc
dec
pusha
je
fsubrp
mov
adc
iret
mov
call
ficom
pop
push
xbegin
je
mov
outs
not
aaa
mov
out
out
int
jno
and
mov
inc
jp
call
loope
xlat
or
shl
jp
push
ret
sub
cmp
mov
or
retf
pop
icebp
xchg
stos
sbb
cmp
aaa
adc
fucom
jmp
pop
lds
push
mov
aam
mov
mov
out
push
mov
xchg
pop
hlt
(bad)
popf
xchg
sub
clc
jmp
mov
jecxz
sar
mov
cmp
jmp
cwde
jl
push
lods
stos
dec
dec
xchg
(bad)
sbb
das
or
ja
sbb
xchg
jae
or
xor
dec
ss
inc
mov
add
mov
pop
fwait
or
xchg
cmp
inc
xchg
int3
mov
out
aad
arpl
stos
sbb
mov
lods
jo
out
xlat
xchg
push
mov
mov
std
inc
mov
sahf
std
jbe
(bad)
in
bound
jnp
sub
dec
test
add
imul
aas
inc
and
and
iret
pop
fs
dec
sbb
add
push
inc
jno
mov
mov
push
and
aaa
mov
mov
jmp
pop
aad
inc
fwait
adc
mov
sub
push
pop
sar
cmps
mov
pop
mov
sub
jb
cmp
movs
fwait
mov
shl
imul
sbb
loopne
dec
and
push
inc
adc
std
sbb
lock
mov
mov
mov
cld
mov
mov
sti
add
add
pop
adc
fst
cmps
xor
mov
ins
data16
stos
adc
push
bnd
adc
dec
in
std
not
(bad)
or
cs
std
cmp
jo
lods
lea
scas
inc
ds
cmp
stos
(bad)
mov
pop
mov
aam
mov
imul
int3
jg
mov
xchg
push
pop
shl
and
cmp
test
(bad)
in
icebp
out
cmp
add
jns
(bad)
mov
lods
cmp
(bad)
push
xlat
mov
imul
xor
test
adc
ret
in
stos
add
in
lahf
in
into
push
test
lahf
xchg
enter
or
js
std
movs
test
push
fldcw
ret
dec
mov
ret
xchg
jp
outs
sbb
sbb
fs
dec
adc
dec
cmp
jae
dec
leave
dec
add
ret
push
inc
mov
push
lods
sbb
mov
mov
pop
pushf
popa
jne
xchg
push
jns
sub
ins
fucomi
cld
dec
adc
loopne
(bad)
sti
in
mov
push
popf
sub
pop
mov
xchg
add
ins
int
loope
loope
push
popf
mov
or
imul
repnz
std
or
jp
fld
push
clc
mov
aas
or
pop
ds
out
sub
push
mov
ins
mov
into
mov
cdq
repz
aam
pop
add
and
cs
addr16
xor
bound
dec
cmc
xor
adc
jge
fwait
(bad)
scas
cs
cwde
dec
call
pop
mov
std
idiv
into
ss
les
call
fldcw
mov
or
mov
mov
ins
inc
xor
push
je
je
lock
cmp
cli
daa
imul
repz
dec
hlt
sub
cmp
lock
xchg
in
adc
lahf
hlt
push
mov
and
retf
out
test
adc
jbe
mov
cmp
repnz
js
scas
sbb
or
jl
ja
adc
mov
push
out
mov
xchg
sub
jmp
pop
(bad)
cmps
cmp
les
dec
fdivr
icebp
fsubr
or
jmp
popf
gs
jno
(bad)
test
pop
pusha
push
mov
enter
lods
in
adc
mov
add
cmp
shl
and
xlat
vmovhps
mov
xchg
retf
jg
ja
popf
or
cmp
jecxz
add
int
add
lods
jmp
pop
inc
out
jg
int
ret
dec
mov
call
ins
cld
jle
js
lock
test
fs
nop
out
sbb
pop
add
mov
imul
dec
mov
inc
mov
pop
push
ret
test
dec
sub
hlt
mov
cld
push
stos
sbb
push
data16
xchg
mov
pop
dec
jg
inc
aad
shl
sbb
sub
fisttp
sahf
sub
test
jmp
retf
push
dec
mov
adc
div
or
and
outs
mov
inc
pop
es
clc
(bad)
jge
xor
sub
repnz
ja
xchg
lods
add
daa
pop
ins
fs
cli
sbb
sub
ret
adc
(bad)
jnp
inc
add
pop
add
loop
(bad)
mul
add
push
lods
out
adc
mov
inc
lods
jl
cmp
push
inc
jg
xor
adc
(bad)
sbb
mov
scas
xchg
push
imul
or
xchg
jge
dec
iret
or
into
dec
push
ficom
cld
cld
inc
test
mov
outs
sti
(bad)
mov
shl
call
test
xchg
sbb
stos
push
and
lahf
sbb
or
xchg
inc
mov
(bad)
pop
pusha
repnz
enter
push
(bad)
pop
outs
shr
sub
mov
jo
aam
leave
fstp
in
xlat
add
cmp
mov
mov
jecxz
ja
push
mov
xchg
push
xchg
iret
xor
xor
jge
push
inc
mov
cmp
pop
pop
cmp
movs
mov
mov
call
(bad)
in
pop
inc
jg
mov
inc
push
xchg
add
out
je
(bad)
clc
shl
xor
in
push
cdq
sub
jp
addr16
mov
sbb
push
jbe
and
cmp
and
(bad)
jl
xrstors
hlt
cmps
cs
or
mov
xchg
jecxz
addr16
xor
movs
push
mov
jmp
sub
push
aas
fdivr
retf
pop
xlat
scas
js
pusha
mov
jg
mov
mov
cmp
mov
out
jge
xchg
fisttp
mov
ss
rcl
ja
sub
dec
and
inc
adc
inc
sub
pop
std
mov
cdq
sub
pusha
out
fldl2e
mov
bnd
inc
(bad)
jo
mov
sti
out
dec
adc
(bad)
adc
enter
fidivr
into
cmp
icebp
lods
data16
cmps
imul
iret
aaa
fdiv
add
mov
xor
sub
mov
push
xchg
lds
mov
movs
mov
ror
not
push
inc
ret
sub
ins
call
cmp
je
fidiv
mov
into
bound
pop
dec
push
cmc
call
loop
lea
xchg
and
dec
lds
fldenv
jg
sub
daa
jecxz
sub
pop
jmp
stc
cmp
sub
adc
pusha
mov
cmp
outs
ret
sti
inc
push
xor
pusha
imul
xchg
inc
adc
jb
cmc
js
sahf
ret
mov
sub
test
aaa
push
aaa
xchg
sti
iret
xchg
mov
pop
jbe
aam
cmp
sub
call
enter
add
bound
mov
int
cmp
mov
inc
and
cmc
push
gs
jns
retf
pop
leave
adc
loop
je
jge
retf
jo
and
add
xchg
cmp
mov
cmp
add
push
in
cdq
lods
mov
inc
aaa
les
inc
ins
cmp
mov
loope
mov
rcl
xor
sub
push
ins
add
stos
jge
pusha
fdiv
in
dec
cwde
out
push
iret
call
push
cmps
ret
pop
loope
pushf
sub
shl
jg
neg
dec
xor
push
arpl
xchg
neg
enter
sti
xchg
test
inc
jmp
xor
xor
sbb
fwait
scas
pop
repz
lods
mov
xor
push
jp
jnp
inc
retf
xor
pop
das
imul
inc
test
cmp
xchg
sahf
cmps
jle
jb
jle
pop
push
mov
xor
loopne
sbb
add
outs
push
jno
gs
outs
ins
mov
inc
pop
mov
inc
jecxz
outs
jp
test
popa
pop
(bad)
push
xchg
push
mov
push
cmp
inc
cdq
shl
pop
xor
push
mov
inc
push
mov
lahf
sub
pop
popf
out
push
xor
xor
lea
cmp
dec
sub
jne
cmp
lahf
jmp
jno
jmp
fbld
push
pop
out
mov
pushf
out
push
dec
test
adc
ins
cmps
xchg
mov
into
jmp
or
scas
inc
sbb
push
pop
test
inc
add
les
js
outs
cmp
push
jnp
or
out
or
pop
ror
out
cbw
dec
rol
and
fidivr
jmp
(bad)
mov
aas
int3
jp
mov
outs
and
pushf
inc
(bad)
sbb
jecxz
stos
fdiv
cmp
std
jnp
fidiv
arpl
pop
pushf
scas
pusha
cmps
pop
xchg
pop
cmps
push
outs
call
add
jae
dec
leave
pop
and
push
stos
retf
jg
dec
xchg
cmp
inc
scas
xchg
(bad)
test
fidivr
popf
and
loop
cmp
xchg
pop
or
mov
fisubr
pushf
jge
shl
mov
dec
cmp
xchg
ret
inc
add
mov
hlt
mov
pop
popa
add
xchg
leave
scas
and
cli
inc
ss
xchg
in
rol
fucom
sub
jbe
cmp
lock
add
(bad)
in
sub
pop
std
dec
xchg
movs
cmp
mov
mov
cdq
and
ins
cmp
ret
ficom
fnstcw
scas
dec
mov
int3
jbe
and
sbb
dec
leave
pop
pop
push
ret
inc
hlt
sub
mov
js
test
pop
inc
lahf
xlat
in
aaa
in
rcl
dec
es
nop
inc
sti
sub
mov
retf
pop
int3
cdq
mov
iret
mov
inc
int
mov
cmps
fimul
call
and
cmp
cdq
loop
push
push
out
lds
fs
sub
ds
push
fsincos
std
pop
and
out
test
dec
or
ins
fsub
cmps
pop
out
fld
adc
xchg
and
jp
inc
mov
adc
daa
mov
jmp
popf
iret
cmps
cld
cli
loope
mov
sar
jmp
iret
pop
pop
shl
in
clc
int3
add
cmc
rol
mov
mov
cmps
clc
mov
(bad)
ror
xor
push
repnz
sbb
sahf
inc
mov
add
sti
test
push
test
and
cli
cmp
jmp
jge
pop
pop
xor
inc
je
outs
jmp
lahf
out
test
test
xor
outs
mov
inc
xchg
pop
dec
jmp
lods
arpl
xor
movs
pop
popf
aam
cmp
lock
fmulp
les
je
aaa
(bad)
stos
adc
inc
pop
sar
jae
dec
jmp
in
pause
cld
mov
or
int
adc
xchg
scas
and
adc
xor
icebp
fdiv
mov
inc
icebp
xchg
xlat
dec
outs
loope
push
jae
and
popa
mov
das
jl
lods
pop
jg
mov
sub
jmp
movs
or
mov
out
out
push
rcpps
int
sti
mov
js
xor
sub
mov
lea
lock
cwde
mov
jne
adc
es
pop
sbb
cli
ss
(bad)
pusha
(bad)
cmc
pop
loope
call
pushf
push
shl
pop
dec
fadd
xor
shl
ficomp
bound
mov
lds
cmp
mov
xchg
retf
cld
inc
mov
gs
test
pop
test
dec
outs
push
adc
jle
cmp
inc
int3
xor
cwde
int3
call
inc
loop
out
add
bound
js
sti
jne
mov
pop
sbb
fist
xchg
fbld
or
mov
fsubr
dec
sbb
fwait
popa
xor
dec
push
sub
repnz
cmp
mov
jnp
outs
out
pusha
sbb
xor
test
stc
scas
pop
shl
xlat
dec
xchg
shr
dec
mov
adc
mov
jae
jae
ja
inc
fidivr
inc
(bad)
jmp
movs
mov
dec
fisub
retf
movs
mov
outs
mov
imul
imul
mov
in
popf
out
ins
sbb
out
dec
adc
cdq
cmp
shl
inc
outs
jmp
xor
(bad)
inc
sahf
dec
adc
sbb
pop
adc
(bad)
popf
in
pop
adc
inc
add
inc
xchg
std
test
adc
cwde
pusha
loope
fild
enter
jb
(bad)
int
xor
fsubp
daa
xchg
jns
dec
(bad)
cdq
or
xchg
aaa
and
mov
in
dec
dec
and
dec
add
ja
cwde
stos
cdq
and
pop
ds
es
inc
mov
fidiv
js
mov
rcr
out
mov
cmps
pop
jle
pop
shr
fist
rol
pop
fisubr
mov
mov
out
ss
loopne
mov
fimul
loop
mov
leave
js
mov
test
lds
and
mov
nop
cmp
out
aaa
aaa
adc
ficom
mov
cmc
adc
iret
imul
ins
fist
test
in
stc
test
mov
popa
rcr
mov
sub
add
jnp
int3
add
cmc
mov
(bad)
sti
cwde
ins
cld
inc
jnp
sub
(bad)
sub
mov
(bad)
mov
xchg
daa
stos
cmps
xchg
push
mov
dec
mov
lahf
adc
push
inc
adc
add
arpl
jecxz
clc
mov
dec
inc
movs
sbb
cmp
vpavgb
push
mov
sub
sub
adc
mul
xchg
xor
or
push
repnz
push
hlt
push
xchg
repnz
loopne
scas
dec
aas
call
push
jg
xor
movs
std
adc
push
sbb
ss
xlat
mov
je
push
popa
repz
xchg
or
ds
pushf
xchg
ret
add
mov
daa
xchg
adc
xchg
dec
or
mov
push
adc
aas
imul
loop
xchg
fisttp
xchg
dec
call
clc
pop
push
xor
inc
scas
push
lds
jb
mov
and
rcr
jno
shl
sbb
fisubr
iret
and
jmp
ins
lods
mov
mov
mov
gs
or
call
(bad)
pop
xchg
mov
fwait
and
sti
addr16
add
mov
out
iret
(bad)
push
frstor
loop
push
mov
mov
aad
aad
ror
push
pop
repz
cmps
push
jmp
mov
mov
cdq
call
dec
cs
push
aaa
or
sbb
out
pop
stos
(bad)
jb
jo
push
push
fwait
push
push
xchg
movs
mov
fwait
out
pop
xchg
sbb
repnz
cmp
or
nop
sub
jae
fisub
add
ins
jmp
or
shr
cmp
(bad)
in
repnz
dec
icebp
scas
push
sbb
push
pop
(bad)
out
aam
fnstenv
cmp
inc
jns
repnz
xor
sub
mov
aaa
in
ss
mov
ss
dec
aas
mov
pop
popf
sbb
sub
inc
xchg
jmp
push
movs
das
jo
mov
mov
inc
push
sub
loop
ss
out
adc
dec
sbb
push
dec
(bad)
mov
pop
movs
sbb
out
push
pop
outs
inc
dec
fadd
xchg
pop
test
(bad)
adc
cmp
xchg
movs
xchg
les
sub
push
mov
cs
out
xchg
add
popa
cmps
iret
cmps
movs
and
fwait
rol
fisub
pusha
xor
fwait
xchg
fcomp
loope
fs
add
loopne
test
xor
pop
gs
mov
dec
dec
fsubrp
rcr
sbb
jmp
pop
in
scas
mov
inc
add
add
sub
ss
dec
mov
lock
mov
into
das
stos
ror
pushf
or
cwde
scas
and
loopne
push
fwait
push
cwde
jae
aaa
inc
mov
push
cmp
iret
sar
arpl
push
sti
je
sub
fidiv
cmp
ins
jl
add
jb
cmp
add
mov
xor
pop
mov
sub
leave
lahf
mov
sbb
push
fisttp
push
(bad)
cmp
fistp
push
jb
(bad)
nop
leave
push
das
xor
push
outs
fcmovnbe
sbb
push
(bad)
pop
nop
jmp
fadd
jecxz
xor
cmp
fnstsw
test
mov
sub
mov
jb
add
push
ins
stos
xchg
ret
stos
enter
into
ss
into
pop
jmp
fist
cmp
div
rol
mov
(bad)
cmp
xchg
stos
xchg
push
inc
add
xchg
cld
fisttp
cmps
inc
(bad)
mov
movs
addr16
fmul
xor
pop
sbb
xchg
mov
out
cli
lea
xchg
xchg
sbb
stos
mov
jp
push
cmps
test
int3
(bad)
out
jl
sub
pushf
mov
retf
aas
mov
enter
add
jbe
clc
jge
icebp
leave
ret
pop
cmp
cwde
jno
mov
jecxz
inc
loopne
in
pop
and
addr16
pop
mov
dec
pop
or
mov
(bad)
fnclex
pop
mov
outs
pop
jo
retf
in
adc
enter
mov
fist
ins
loopne
js
lods
inc
hlt
add
dec
dec
xchg
ret
fwait
push
pop
jae
xor
out
fucomp
retf
repnz
push
lea
push
xchg
and
je
dec
push
cmps
push
mov
push
icebp
repz
mov
pop
mov
xchg
pop
cmp
das
pop
mov
pop
inc
stos
mov
daa
push
sub
xor
mov
rol
inc
push
adc
mov
sbb
push
jnp
jnp
pushf
lods
mov
clts
push
dec
jo
add
in
dec
sahf
aam
repnz
mov
sbb
js
stos
mov
dec
mov
(bad)
fistp
push
dec
or
fwait
out
mov
aad
sbb
mov
ror
pop
jnp
test
call
pop
jp
mov
mov
test
add
int3
push
in
clc
sti
mov
inc
inc
sub
fld
push
sbb
or
mov
sbb
mov
pop
and
jae
xor
push
out
pop
jne
aaa
sbb
out
push
rcl
ficomp
test
in
mov
loopne
jp
dec
xor
test
imul
inc
shr
bound
sub
lock
xchg
icebp
mov
add
shl
or
repnz
dec
stc
xor
jb
mov
push
mov
(bad)
outs
dec
sbb
or
jge
shl
jne
and
mov
mov
pop
cwde
pop
mov
fwait
test
pop
sub
mov
aad
and
and
and
test
and
cmc
jge
ror
in
rcr
fistp
inc
sub
push
xchg
ins
push
adc
mov
inc
scas
xlat
enter
dec
sahf
pushf
jo
jno
hlt
shl
mov
dec
call
movs
(bad)
mov
xchg
movs
xor
dec
adc
mov
fnstenv
cli
push
or
adc
dec
xchg
movs
sub
call
in
mov
cmp
ret
inc
(bad)
stos
pop
sti
bound
retf
bound
inc
pop
xor
dec
cdq
cmc
jg
mov
push
int3
ins
mov
cmps
mov
cmps
mov
movs
into
and
xchg
inc
fld
xchg
inc
adc
dec
inc
shl
dec
push
or
jne
jl
lods
mov
xor
inc
iret
jo
inc
cld
inc
cdq
pop
dec
xchg
int3
cmps
xor
std
out
leave
leave
cld
not
adc
out
mov
add
in
inc
mov
data16
in
add
push
xchg
sbb
fidiv
jle
pop
(bad)
aas
add
ficomp
retf
inc
cdq
cs
xchg
mov
je
cmp
adc
test
call
dec
test
inc
jae
rol
pop
cmp
lods
(bad)
arpl
data16
pop
aas
enter
mov
sar
mov
mov
and
repz
in
cmp
nop
scas
js
add
scas
sub
and
pushf
xchg
sahf
push
push
enter
pop
xlat
and
je
imul
enter
xchg
inc
pop
lods
cmc
out
xchg
xlat
xchg
mov
shl
jmp
dec
cs
shl
lods
clc
bound
or
ss
and
xor
add
push
pop
inc
ret
jbe
mov
cmp
inc
cmp
sub
loopne
inc
jns
jmp
scas
(bad)
or
mov
(bad)
dec
add
cmp
daa
repz
(bad)
sub
ret
cmovne
mov
cwde
fistp
or
jge
scas
sti
cs
jnp
push
call
mov
mov
int
cwde
scas
dec
(bad)
jmp
inc
popa
and
sbb
dec
in
sub
test
mov
xlat
jle
sub
mov
xor
fiadd
ja
(bad)
adc
mov
(bad)
lods
cmp
mov
xor
pushf
jl
test
pop
gs
popa
pop
xor
pop
aas
inc
jo
sti
mov
(bad)
lods
add
sbb
pop
idiv
xor
pop
rol
sbb
push
imul
and
sub
std
sar
outs
mov
or
aad
outs
xor
push
call
mov
js
mov
int
cmp
mov
shr
jbe
adc
stos
push
in
popf
cmp
fisubr
test
test
lods
lods
addr16
push
lods
mov
cmp
(bad)
fst
push
int
inc
push
inc
ds
rcr
xchg
push
(bad)
sahf
adc
in
push
xor
mov
imul
(bad)
nop
rcl
retf
or
sub
jne
clc
jnp
mov
add
fs
retf
jg
ins
mov
add
inc
cdq
mov
and
mov
addr16
dec
aam
movs
outs
cld
loope
mov
mov
xchg
(bad)
cld
mov
xchg
mov
daa
sbb
adc
or
shl
inc
jb
fdiv
sar
adc
xchg
loope
mov
outs
push
push
scas
inc
movs
arpl
push
xor
mov
aam
fisubr
neg
outs
movs
adc
aam
inc
mov
div
pop
retf
test
inc
dec
outs
loope
jns
lods
mov
call
pop
cmp
adc
test
test
pusha
ds
jo
inc
cmps
adc
data16
dec
cmp
ins
xchg
aas
xor
push
adc
dec
fstp
popf
nop
mov
addr16
rol
jmp
arpl
and
in
sbb
cmp
jbe
sub
(bad)
scas
pop
mov
jb
cld
cdq
jnp
sbb
jecxz
stos
test
push
sub
pusha
jp
mov
mov
scas
out
sub
mov
aam
(bad)
test
jmp
std
ins
jne
mov
lahf
(bad)
aam
cmps
xor
stos
jmp
jp
int
out
push
icebp
push
in
sub
add
ret
xor
lock
inc
push
xchg
xor
xchg
mov
push
add
dec
xlat
dec
popf
fisttp
push
pop
retf
idiv
mov
xchg
stos
inc
in
lods
and
gs
sub
imul
or
push
test
aas
jecxz
adc
jp
xchg
push
and
and
loopne
mov
cld
mov
xor
push
add
dec
adc
push
and
loop
mov
(bad)
push
push
sbb
cmp
xchg
icebp
mov
(bad)
mov
xor
imul
mov
mov
adc
or
mov
inc
dec
inc
add
sbb
leave
ss
addr16
lods
xor
inc
je
sbb
lea
std
ret
retf
sub
sbb
and
inc
push
addr16
cmc
cld
es
jecxz
bound
mov
test
aaa
lahf
jb
(bad)
xchg
push
inc
mov
imul
shl
xor
xor
loop
adc
ja
push
push
push
mov
iretw
pushf
mov
scas
mov
not
fcom
arpl
adc
es
sbb
ins
shl
and
(bad)
inc
call
adc
xchg
stos
jbe
mov
rol
adc
rcl
(bad)
dec
push
mov
mov
lahf
cmp
dec
add
push
and
mov
ror
(bad)
ins
ins
retf
mov
outs
jne
daa
mov
push
dec
arpl
adc
push
add
sub
in
xlat
ror
jbe
retf
jnp
dec
out
pop
mov
scas
xor
mov
pop
in
inc
and
cdq
jmp
sahf
(bad)
iret
inc
test
add
es
sbb
fxch
xor
or
shl
xchg
jmp
jg
das
mov
(bad)
push
dec
(bad)
cli
xor
pop
or
and
icebp
mov
nop
dec
cmp
jmp
or
in
cli
je
inc
add
enter
inc
mov
pop
pop
cmc
cmc
xchg
mov
sub
or
xor
test
aaa
add
out
mov
dec
sub
jbe
movs
push
arpl
mov
xchg
lds
div
data16
dec
push
add
xchg
popa
inc
xor
add
fwait
inc
movs
test
aas
fs
in
sbb
(bad)
mov
lgs
mov
sub
fnstenv
add
je
jmp
addr16
jbe
and
cwde
dec
xor
rol
dec
push
test
add
cmp
sbb
jmp
xchg
xor
rcr
arpl
test
mov
shl
jne
sbb
aam
adc
jle
cmp
mov
push
pop
add
add
jno
and
sbb
test
cmp
popa
rcr
in
pop
out
je
cmc
sub
push
add
mov
or
mov
sbb
add
es
jmp
arpl
daa
iret
mov
xor
mov
xchg
mov
inc
imul
sub
pop
add
sbb
pmulhw
xor
or
fucomp
inc
test
push
into
jo
pop
cmp
outs
mov
ds
or
out
jb
daa
pop
aam
lods
fistp
push
popf
mov
mov
inc
ins
inc
adc
cs
xor
movs
popa
add
mov
mov
jnp
cmps
xchg
push
mov
push
clc
and
fbstp
aam
cmps
lahf
nop
movs
and
stos
(bad)
psubusb
mov
imul
mov
jmp
test
inc
mov
cmp
sbb
mov
(bad)
out
xchg
test
jp
iret
push
xor
dec
push
fmul
call
dec
cmps
mov
movs
fwait
jge
inc
mov
mov
push
cdq
cli
test
outs
aad
mov
mov
and
xchg
cmps
xor
pushf
stos
out
ins
or
mov
lock
lahf
mov
sbb
pop
out
pop
jecxz
xchg
inc
je
push
sbb
out
cmps
mov
aas
cmp
pop
pop
sbb
pusha
push
clc
(bad)
pushf
adc
imul
and
pop
(bad)
out
and
sahf
mov
mov
cwde
mov
imul
mov
movs
jae
or
and
inc
cmps
lds
jg
dec
adc
add
iret
je
data16
or
retf
push
cld
and
nop
call
sub
push
fiadd
jb
jle
mov
cmp
cmps
(bad)
ins
push
pop
pop
(bad)
jl
enter
xchg
fild
push
sub
aam
push
cdq
sbb
adc
mov
stc
jmp
sub
push
inc
ret
mov
add
inc
xchg
div
repz
push
ins
push
addr16
in
test
outs
jecxz
enter
movs
xchg
mov
int3
jnp
out
jecxz
inc
mov
scas
and
std
fld
push
xor
loope
in
iret
test
fiadd
outs
pop
mov
xor
js
mov
repz
pop
out
add
mov
shl
adc
add
jmp
arpl
fisubr
jae
mov
jge
sub
push
out
xchg
pop
lods
into
shl
or
repz
fst
adc
repnz
push
or
pop
and
inc
aaa
iret
je
push
add
shl
and
(bad)
mov
dec
mov
lods
lea
out
mov
inc
add
inc
mov
xchg
in
jbe
call
pop
inc
xor
pop
mov
push
cld
mov
pop
aas
push
imul
in
xor
jnp
xor
xor
adc
iret
out
sbb
mov
xchg
mov
mov
dec
lock
pop
mov
jmp
(bad)
add
arpl
stc
fldcw
fstp
cmp
xor
repz
dec
nop
div
xchg
and
call
adc
dec
dec
dec
and
jbe
(bad)
push
dec
movs
jmp
lea
or
xchg
call
fst
add
add
repz
retf
call
push
jle
mov
or
cld
mov
inc
jnp
scas
fsub
jbe
push
pop
hlt
xchg
movs
jmp
aaa
dec
dec
inc
mov
dec
scas
ficom
in
pop
add
aaa
and
icebp
dec
xor
xor
aam
pop
mov
push
or
test
imul
add
(bad)
mov
pop
imul
push
into
inc
adc
pop
outs
(bad)
out
mov
popf
lea
add
inc
fidivr
lahf
mov
adc
mov
cmp
inc
cmps
test
loop
dec
mov
call
xor
push
jns
xor
nop
or
sahf
mov
ret
das
jecxz
add
repnz
xchg
shr
jle
inc
nop
inc
or
mov
sti
imul
inc
pop
pop
ss
inc
mov
mov
cli
(bad)
outs
imul
neg
enter
jge
fsub
cmp
xchg
std
call
mov
hlt
shl
shl
loopne
xchg
loope
mov
loope
test
stc
adc
faddp
adc
adc
sub
cld
mov
push
fsubr
jmp
push
push
call
psrad
retf
dec
pusha
iret
stc
sbb
pop
test
adc
lock
xchg
inc
test
iret
push
cmovno
nop
adc
adc
or
jnp
jmp
inc
call
mov
js
xor
(bad)
ins
mov
ret
int
(bad)
mov
inc
pop
js
fild
xchg
push
nop
adc
cmps
ja
loop
push
ror
xchg
aaa
mov
and
out
jae
(bad)
test
jp
lahf
push
(bad)
nop
add
mov
xchg
data16
pop
jo
and
fistp
hlt
lahf
das
(bad)
fistp
outs
cwde
cld
push
out
dec
lahf
scas
dec
mov
(bad)
xor
out
bnd
in
(bad)
jl
cmp
xchg
jne
jbe
shl
jae
out
outs
cli
sub
inc
sbb
mov
test
or
sub
xor
cmp
and
or
push
mov
rcr
inc
ret
inc
lock
sbb
or
aam
outs
cmp
or
fs
sbb
retf
test
pop
inc
fsub
loop
or
enter
mov
outs
aad
mov
lds
cmp
mov
jp
push
lahf
aaa
xor
idiv
lods
jecxz
test
inc
mov
mov
repz
pop
aam
push
jmp
clc
(bad)
es
mov
xor
cmp
dec
mul
add
ins
sbb
sub
in
cmp
out
mul
(bad)
pop
les
fdivr
jnp
pop
cs
push
(bad)
pop
lods
les
jl
popa
mov
pop
lock
cmp
pop
sub
mov
mov
(bad)
sbb
add
push
pop
je
pushf
sub
cmps
cld
sub
ins
pop
dec
test
xor
in
loope
or
js
fmul
inc
mov
dec
mul
out
imul
retf
(bad)
ds
stc
inc
std
out
mov
or
es
ja
jmp
adc
pop
(bad)
imul
push
sbb
das
lock
loope
or
mov
and
pop
in
mov
out
addr16
sbb
sbb
cwde
mov
inc
rcl
sar
hlt
outs
pop
addr16
stos
loopne
popa
es
mov
pop
mov
jl
in
inc
ret
inc
add
arpl
shl
stc
fsubr
dec
ja
icebp
movs
jl
shl
std
mov
xor
dec
cld
clc
jb
cmp
add
fstp
ds
jno
cwde
out
sbb
mov
xchg
scas
pop
sahf
cld
add
cmps
jns
nop
cmps
pushf
sti
xor
add
pop
shl
ds
ja
xlat
scas
sbb
cmps
mov
addr16
adc
aad
call
and
mov
push
mov
imul
test
mov
test
sub
mov
xor
jmp
push
inc
xchg
in
mov
mov
add
cld
xor
and
push
sti
mov
adc
int
add
cmp
call
pushf
dec
inc
and
bound
xchg
jmp
jnp
xor
clc
into
mov
mov
std
and
pcmpeqd
cmps
pop
cmps
dec
into
pop
jbe
popa
imul
mov
xchg
aad
iret
es
(bad)
cmc
into
sub
daa
in
cmp
ret
sar
jo
cmp
test
mov
sbb
pop
fdivr
das
pop
(bad)
sub
out
mov
push
hlt
add
lock
pop
dec
adc
push
mov
fmul
pop
dec
push
aas
cld
inc
mov
pop
sub
inc
ror
cmp
cmc
test
ja
and
add
fisttp
add
nop
pop
cmp
mov
mov
imul
pop
shl
jmp
cmp
movs
shr
xchg
aad
aam
mov
scas
sub
jmp
in
ins
or
add
cmps
iret
adc
sahf
jmp
cmp
or
lods
mov
or
xor
pop
(bad)
xchg
test
ins
cld
pop
sar
sbb
and
jns
lea
outs
pop
adc
test
push
int3
movs
jle
mov
nop
jmp
sub
inc
enter
(bad)
jb
ret
mov
retf
or
sub
push
scas
cmp
icebp
mov
xchg
(bad)
iret
or
sub
and
(bad)
jmp
or
jge
(bad)
(bad)
fld
into
aam
jmp
cdq
xor
sbb
sub
cmps
cmp
nop
in
cmp
inc
ror
enter
jno
sar
stos
sbb
cmps
mov
(bad)
lahf
fucomp
or
jb
xor
sub
mov
and
dec
pop
es
call
ja
adc
or
inc
into
movs
sbb
stos
clc
jne
cdq
xchg
ret
cld
inc
scas
cmps
stc
adc
test
mov
sbb
adc
push
inc
(bad)
daa
cmp
es
or
sub
inc
jmp
js
cmp
or
shl
js
gs
inc
shl
dec
push
or
dec
popf
movs
sub
lea
lods
lods
pop
jo
stos
loope
stos
popa
sbb
rcr
cmps
cmc
out
das
jecxz
sub
mov
aas
or
ret
fwait
push
rcr
xor
pushf
cmp
sub
dec
pop
cdq
cmp
bound
dec
fld
(bad)
push
cdq
movs
fbstp
or
xchg
daa
adc
pop
popf
sbb
sbb
hlt
dec
scas
ror
jp
popf
int
mov
popf
sbb
jo
add
lea
or
push
adc
and
stos
xchg
fisttp
mov
out
and
pop
adc
(bad)
aas
add
xchg
aas
enter
inc
add
jle
push
pop
in
jecxz
imul
fwait
cld
outs
dec
es
out
cli
add
xchg
(bad)
test
cmp
in
fs
xchg
sbb
into
lods
retf
fbstp
aam
repz
fld
(bad)
jmp
bound
dec
loopne
add
sbb
std
bound
stc
out
pop
xchg
bound
push
sbb
nop
adc
scas
cmps
mov
push
cmp
xchg
mov
adc
xchg
lods
mov
test
aad
mov
push
in
into
scas
add
jecxz
lds
stc
les
rcl
xor
inc
mov
outs
add
add
mov
sbb
in
pop
call
retf
(bad)
js
loope
repz
mov
test
es
mov
jne
shl
jo
add
(bad)
fistp
jge
mov
test
(bad)
dec
jge
jns
pushf
iret
call
loop
ja
ret
loop
cmp
xchg
imul
pop
aas
imul
int3
rcl
sti
pop
pop
je
ret
jb
sahf
test
sbb
aas
bound
adc
pop
push
xlat
and
sub
outs
sbb
xor
hlt
and
add
add
pop
in
imul
pop
popa
hlt
cdq
mov
dec
scas
lahf
retf
psadbw
cdq
(bad)
(bad)
js
call
pop
mov
loope
add
xor
dec
inc
movs
mov
mov
xchg
pop
retf
mov
mov
xchg
scas
data16
in
in
add
sub
pusha
mov
js
mov
add
sti
xchg
ss
pop
xchg
and
dec
daa
jo
cli
(bad)
cmp
lock
sub
or
test
(bad)
(bad)
sub
mov
mov
test
add
sub
ja
push
sti
mov
repz
(bad)
pusha
lods
movs
dec
dec
adc
shl
xchg
pop
movs
loope
xchg
push
mov
cwde
cwde
sbb
jmp
mov
jns
add
stc
push
jb
mov
xchg
daa
pop
or
mov
mov
push
test
(bad)
aad
lock
inc
mov
and
movs
mov
iret
ret
(bad)
push
mov
retf
rcl
inc
or
jge
fidiv
and
rol
mov
and
mov
mov
ins
sbb
fisub
sub
(bad)
dec
int3
jle
sbb
mov
movs
jmp
sahf
call
(bad)
push
movs
push
imul
fldenv
xchg
ror
push
xor
push
out
repz
imul
sub
push
aas
imul
daa
les
das
data16
aad
push
cmp
inc
mov
cmp
fiadd
lock
icebp
ficom
pushf
lods
repnz
jnp
popf
pop
push
mov
in
shr
(bad)
in
cmp
push
push
movs
add
in
(bad)
and
int3
int3
mov
dec
lahf
push
pop
sub
jns
inc
fstp
mov
mov
or
addr16
sub
pop
int
cmp
fyl2x
adc
cmp
xchg
sub
sub
sub
mov
add
les
xor
sbb
inc
jmp
stc
sub
in
adc
hlt
cmp
imul
inc
cmc
pushf
and
sub
inc
xor
jb
push
xchg
cmp
mov
jecxz
xor
xchg
dec
or
cmps
stos
push
xchg
scas
(bad)
je
or
sbb
movs
jmp
shr
retf
lahf
xor
lahf
(bad)
xor
stc
sub
or
pop
outs
push
out
icebp
arpl
fcom
cmp
ror
lea
jnp
in
jge
inc
or
push
push
sahf
pop
jecxz
movs
pop
stc
mov
add
sub
and
jecxz
rcr
dec
(bad)
mov
outs
dec
and
stc
push
push
push
pop
push
adc
out
sub
scas
arpl
push
push
lahf
dec
cmp
dec
pop
jp
xchg
xor
mov
rol
fcomp
mov
ins
sti
lea
jbe
stos
mov
cdq
push
cmp
dec
jne
scas
pop
out
xor
sbb
jl
dec
or
dec
shl
shl
aaa
or
mov
cmp
inc
jmp
inc
hlt
mov
or
mov
inc
push
xchg
pop
push
mov
inc
xchg
adc
jbe
je
fnsave
addr16
test
push
adc
mov
scas
adc
out
or
mov
adc
push
test
sbb
mov
push
jecxz
adc
sub
int
sbb
shr
dec
dec
out
movs
push
scas
xchg
jo
mov
cmp
cs
or
inc
retf
cld
add
xchg
mov
(bad)
into
sub
(bad)
or
xchg
aaa
adc
test
jg
leave
les
jne
(bad)
enter
adc
retf
(bad)
fisttp
repz
(bad)
scas
sbb
xchg
jmp
lahf
fistp
push
sbb
jle
clc
inc
in
and
xor
ret
cdq
mov
fist
sub
xchg
out
adc
mov
les
addr16
mov
mov
mov
cmp
jmp
sbb
push
int3
sbb
jb
retf
fcomip
mov
mov
mov
push
mov
dec
sbb
cmps
dec
jecxz
scas
(bad)
mov
ja
mov
dec
push
jno
add
imul
dec
jecxz
scas
xchg
sub
pop
cmp
mov
repnz
and
test
mov
dec
int3
mov
ror
pop
je
or
sahf
jecxz
call
sar
jae
ret
xor
popa
(bad)
fisttp
mov
push
(bad)
adc
sub
push
xor
jmp
cmp
xor
cmp
or
and
or
(bad)
(bad)
out
mov
cmps
mov
jg
mov
and
lea
push
fwait
fs
ins
leave
(bad)
push
xchg
xchg
push
lahf
mov
int
mov
mov
push
add
test
in
ins
call
add
in
sbb
loop
sbb
rcr
xor
sub
(bad)
mov
jbe
repnz
movs
jmp
sbb
ror
inc
test
fsub
pop
push
clc
mov
xchg
out
jb
cli
leave
mov
fisttp
rcl
jg
out
sar
and
jno
inc
xchg
mov
sbb
and
mov
pusha
pop
jo
or
xchg
mov
cmp
ss
pusha
dec
adc
cdq
(bad)
mov
js
push
imul
mov
dec
cmp
stos
xchg
mov
pop
in
xchg
and
add
mov
sbb
data16
push
fiadd
add
(bad)
mov
mov
and
stos
xchg
cmc
and
out
enter
jnp
inc
cmp
fptan
add
fild
repnz
fcomp
fdivr
jecxz
inc
daa
cld
inc
inc
pop
or
push
cmp
cmp
lock
xor
inc
mov
clc
inc
cmp
ret
push
or
clc
aaa
repnz
mov
push
and
jo
arpl
push
xlat
loop
aam
jge
mov
std
aaa
ins
push
ds
movs
in
adc
pop
xor
scas
in
sub
sbb
inc
rcr
aaa
or
or
mov
and
push
call
add
dec
add
mov
retf
xor
adc
int3
add
data16
and
in
cli
sti
sbb
call
fcomp
cwde
jge
push
pop
scas
push
leave
inc
popa
call
xchg
or
xchg
enter
es
arpl
push
push
sbb
imul
stc
shl
or
ret
in
jae
mov
or
cmc
dec
popa
clc
bound
outs
mov
pop
lds
pop
ds
movs
push
pop
movs
sbb
ss
sub
loopne
mov
les
aad
dec
or
shl
ret
pop
pop
push
sbb
pop
in
div
pop
and
imul
(bad)
mov
fisttp
xchg
mov
loopne
cmc
xchg
pop
sahf
fisubr
add
xchg
add
push
jp
fucom
out
pop
cld
loopne
xchg
das
push
(bad)
out
jne
jb
xchg
adc
or
nop
and
xor
lods
or
sub
xor
lea
cmc
inc
add
push
mov
fdivrp
test
dec
inc
cli
sbb
gs
das
dec
ds
push
aaa
mov
xlat
retf
scas
in
(bad)
mov
mov
cmp
retf
movs
scas
cwde
xor
arpl
dec
inc
aam
fdivr
imul
outs
out
sub
and
imul
jnp
push
sub
push
ja
pop
lods
xlat
cli
inc
jo
dec
es
push
or
cmp
jecxz
mov
cmp
dec
xlat
mov
sub
adc
mov
retf
sub
ficomp
mov
pop
(bad)
fcompp
xor
scas
push
cmp
cmps
rol
adc
cmp
arpl
das
fs
rcr
dec
dec
mov
and
mov
cmp
in
out
push
test
cld
ret
sub
movs
(bad)
into
clc
jae
xchg
lahf
mov
xor
xchg
jae
pop
sbb
pop
mov
inc
and
mov
ja
jmp
pop
into
dec
push
pop
gs
mov
fsubrp
ret
aas
loop
clc
stos
pop
mov
dec
pop
mov
push
(bad)
jo
jl
in
imul
imul
arpl
mov
sar
out
inc
pop
rcr
outs
mov
adc
pop
ins
jo
inc
shr
lods
call
repnz
add
jle
test
movs
mov
xlat
and
or
sbb
inc
push
arpl
pop
pop
ja
cmp
mov
enter
inc
and
mov
sub
daa
pop
out
dec
sub
stos
jg
stos
cmp
push
shr
jae
out
and
lahf
mov
stos
and
xchg
pop
push
pop
or
xchg
fs
adc
rol
xchg
sbb
mov
jae
loop
(bad)
(bad)
mov
or
outs
mov
pop
ins
xchg
jo
sbb
push
stos
jnp
mov
and
cmps
pop
cmp
rol
cwde
fiadd
or
std
test
cmp
(bad)
mov
push
mov
retf
out
mov
sti
in
mov
fcom
or
hlt
xor
cld
pop
pop
fstp
daa
fsubp
ds
ficom
sub
test
rol
inc
add
getsec
cmp
pop
push
and
jp
mov
or
pop
shl
loopne
cli
test
xchg
xchg
ficomp
pushf
rcl
pop
inc
xchg
mov
mov
push
jmp
das
push
add
fist
mov
lea
out
out
mov
icebp
retf
add
bound
xchg
mov
fbstp
repz
sub
pop
jl
add
cdq
sbb
sahf
retf
or
jb
mov
stos
mov
cmps
ins
mov
jae
(bad)
push
jns
test
shl
mov
out
sti
nop
and
fsub
xchg
and
add
mov
add
mov
popf
clc
loop
retf
add
sub
int
ror
cmp
inc
add
dec
adc
mov
mov
jp
into
test
ret
jmp
jge
mov
clc
xor
rol
data16
adc
add
mov
in
jmp
xchg
mov
mov
clc
xchg
lds
retf
push
(bad)
not
repnz
inc
iret
not
xchg
sbb
ins
arpl
outs
fwait
mov
das
pop
mov
pop
(bad)
pop
aaa
test
ret
imul
rcl
cmp
aas
fstp
mov
and
addr16
pop
cmp
dec
shl
inc
xlat
mov
jmp
inc
cs
(bad)
and
sub
sbb
inc
cmp
push
mov
cld
dec
cmp
retf
sbb
sub
xchg
cmp
pop
jecxz
pushf
movs
stos
ja
push
pushf
adc
push
psllq
mov
hlt
sub
aaa
push
xchg
test
mov
mov
outs
repz
call
loop
mov
adc
jmp
and
and
pusha
push
(bad)
xchg
das
jmp
push
inc
mov
mov
inc
xchg
das
jb
ins
adc
icebp
sub
loop
dec
daa
cmps
lahf
mov
popf
push
xor
mov
lods
mov
and
xor
les
and
shl
pusha
int
popa
(bad)
fsub
ret
lock
jl
imul
mov
inc
jnp
shr
pop
sbb
shl
vpmaxub
cmp
rcr
push
xchg
jp
pop
inc
sahf
sub
retf
pop
mov
ds
and
jnp
(bad)
push
out
xor
stc
mov
pop
into
loope
(bad)
dec
cmp
and
cwde
and
or
lods
mov
mov
sbb
push
and
mov
test
shr
in
popf
adc
push
call
daa
jge
adc
push
(bad)
pop
cmps
les
inc
call
push
mov
mov
inc
(bad)
jecxz
add
pop
mov
jae
mov
aaa
xchg
and
pop
push
push
add
jp
mov
jp
cmp
out
fucomp
cs
push
out
ficom
mov
les
jmp
and
fwait
lods
cmps
xor
test
mov
sbb
in
mov
mov
pop
xchg
inc
shl
jg
mov
pop
pop
or
push
jne
pop
and
adc
adc
fcomi
xchg
pop
retf
mov
scas
ins
loope
cmp
out
in
push
or
dec
test
loop
mov
test
mov
shr
jno
mov
mov
movs
dec
xor
pushf
adc
add
rcl
xchg
jbe
inc
jns
dec
repnz
gs
sbb
push
mov
inc
pop
sar
movq
sub
mov
aad
popf
mov
sahf
xor
add
jle
jns
mov
xchg
arpl
and
loopne
pop
or
pop
mov
inc
pop
es
jne
mov
leave
xchg
push
inc
xchg
dec
push
mov
outs
fld
imul
ins
jo
or
pop
dec
xchg
mov
mov
rcl
xor
xchg
je
mov
aad
enter
lods
cwde
gs
aam
pop
(bad)
movs
cmp
xchg
(bad)
(bad)
cmp
mov
(bad)
fimul
bound
cmp
xor
xchg
mov
xchg
lods
fldcw
cmp
fadd
mov
inc
xchg
mov
cli
or
aaa
(bad)
jmp
push
push
add
adc
xor
(bad)
and
test
int3
ds
out
mov
xchg
outs
jae
pop
fistp
or
call
add
cdq
outs
xor
mov
loop
adc
cs
out
out
adc
dec
cwde
mov
xchg
(bad)
lahf
fwait
loop
xchg
das
adc
cmp
adc
sbb
in
mov
jmp
shr
fadd
clc
xor
jne
inc
retf
or
xor
sti
dec
pop
rcr
push
xchg
lea
clc
leave
cmc
dec
mov
retf
adc
jae
adc
into
push
push
mov
neg
mov
fbstp
fisub
or
fbld
or
sub
lea
(bad)
(bad)
xchg
inc
icebp
jle
(bad)
adc
inc
sbb
cdq
cmps
mov
daa
mov
sbb
data16
inc
or
sub
shl
mov
or
xchg
jmp
and
mov
and
sbb
shl
inc
or
mov
call
retf
rcr
ss
cmp
popf
sub
aaa
gs
call
(bad)
fucomp
xchg
aam
mov
xor
mov
pop
rcl
mov
pop
neg
or
mov
ja
or
pop
fucomp
movs
dec
or
mov
inc
xchg
jae
stc
inc
or
or
icebp
fstp
test
es
sahf
jge
pop
fwait
inc
jg
adc
in
and
add
dec
iret
(bad)
dec
call
dec
dec
adc
ret
fiadd
sbb
(bad)
repz
aam
scas
retf
std
aam
mov
sbb
sub
mov
sbb
out
mov
and
inc
jnp
cmp
stc
jo
xchg
mov
test
out
ds
xchg
xor
cli
test
and
sti
out
test
pop
rcr
gs
xchg
out
push
enter
js
mov
pop
aam
and
sbb
cmp
(bad)
imul
mov
inc
call
mov
xchg
add
mov
icebp
mov
dec
(bad)
sbb
mov
fs
mov
adc
or
js
mov
push
xor
jle
or
xchg
mov
std
pop
sbb
dec
sbb
jmp
sbb
add
(bad)
scas
inc
sub
repnz
cmp
pop
or
jl
test
sbb
(bad)
cmps
enter
or
(bad)
push
inc
int3
lahf
rcl
pop
sub
pop
pop
xchg
cmp
fidivr
mov
pop
jge
jb
retf
add
or
xchg
in
loopne
bound
pop
xchg
scas
pop
xor
das
das
push
push
jmp
mov
aad
mov
sbb
or
xchg
push
rcr
adc
dec
add
fdivp
ss
int3
stos
inc
repnz
inc
xchg
cmp
jle
in
scas
es
push
sar
push
push
dec
pop
sbb
movs
pop
xchg
jecxz
int
aaa
mov
pop
push
imul
dec
and
out
test
mov
ficomp
add
jmp
std
cdq
retf
rcr
js
mov
sub
sub
(bad)
fmul
jne
push
push
lods
jo
loope
add
cmp
call
dec
inc
xor
push
pop
push
mov
dec
xchg
sbb
pop
retf
inc
add
and
xor
test
sub
fcmovnbe
bound
or
push
int3
test
sbb
xchg
daa
xor
ror
jo
mov
cmps
leave
les
cld
sbb
out
mov
out
cld
addr16
sti
sub
retf
cmp
out
(bad)
cdq
and
lahf
rcr
jmp
mov
call
jmpw
ds
sbb
mov
fnstcw
mov
jle
enter
rcr
xor
adc
fist
nop
bound
jecxz
mov
sub
iret
out
xchg
xchg
sub
fnsave
xlat
sbb
repz
fistp
out
mov
dec
and
and
mov
sub
xor
or
daa
cmp
sbb
sbb
shl
pop
pushf
cmps
imul
pop
pop
inc
jecxz
mov
mov
jb
fcmovnb
scas
add
xor
push
jnp
out
push
mov
leave
fnstenv
add
daa
into
jne
mov
sbb
imul
rcr
ss
mov
xor
iret
fcom
ret
dec
in
mov
inc
aad
sub
fwait
mov
xchg
inc
sub
setb
jle
xchg
mov
mov
xchg
xor
cld
jnp
fidiv
div
pop
mov
xor
mov
fnstcw
sbb
outs
cmps
or
adc
adc
dec
xor
jmp
adc
mul
fdivr
mov
mov
das
call
xor
shl
pop
inc
cmc
lock
stos
lock
inc
jns
jmp
cld
pop
stc
and
sbb
ds
retf
test
ss
mov
fs
ja
mov
sti
inc
inc
mov
cmp
ins
mov
movs
xor
inc
push
pusha
cmps
jl
mov
sub
mov
mov
stos
dec
test
fwait
js
xor
cmps
pop
movs
adc
jae
sar
sbb
push
test
sub
sub
add
mov
les
sub
jns
bound
popa
xor
outs
ja
pop
sbb
push
fst
fs
jno
aaa
push
(bad)
test
pop
and
mov
scas
imul
iret
hlt
xchg
les
push
fsub
mov
(bad)
push
icebp
xor
dec
mov
push
scas
pmulhuw
jmp
cmp
push
shl
pop
jno
push
and
sbb
xchg
push
mov
loope
or
xchg
stos
add
cmps
cmp
hlt
and
and
or
inc
mov
shr
cmp
out
jnp
popa
outs
jl
xchg
push
mov
fisubr
push
in
push
(bad)
fwait
fwait
xchg
out
in
leave
cwde
dec
or
sbb
cmps
push
aam
ficomp
mov
ss
mov
push
push
movs
dec
pop
xchg
jne
mov
in
jp
fnstsw
arpl
(bad)
adc
in
outs
push
add
(bad)
(bad)
fimul
movs
jmp
(bad)
xor
pushf
inc
mov
(bad)
xchg
and
mov
and
cmc
xabort
int3
sub
cmps
leave
push
push
xchg
xlat
mov
in
cmc
shl
add
das
rol
rcr
jmp
mov
dec
call
inc
xchg
or
push
and
outs
sbb
or
adc
xchg
cwde
dec
call
and
in
dec
cmp
loope
lea
iret
xor
and
dec
cmp
cmp
outs
mov
mov
push
xchg
xchg
cmp
stc
fild
nop
add
push
test
push
js
jle
retf
mov
xor
arpl
push
jae
push
push
jle
or
leave
popw
xchg
dec
sbb
sysexit
fs
es
js
or
mov
pushf
dec
(bad)
retf
adc
daa
xor
cmp
(bad)
mov
push
out
add
mov
stc
push
lahf
pop
in
imul
adc
jnp
out
les
mov
scas
ins
mov
repnz
dec
(bad)
jmp
imul
call
and
add
dec
jg
sub
ret
jecxz
cmp
jl
push
int3
mov
xor
add
iret
adc
test
sahf
icebp
mov
dec
jno
in
push
les
cmc
pop
lahf
inc
jbe
inc
xchg
xchg
push
sti
sbb
fwait
in
mov
stos
push
into
sub
add
int3
loope
xor
mov
add
inc
push
jne
adc
fisub
inc
es
hlt
mov
push
fisub
lea
mov
lea
jmp
sbb
ds
rol
xor
and
rol
pop
ja
push
and
stos
movs
jne
in
shr
mov
push
mov
retf
mov
(bad)
cmp
xlat
push
in
shl
and
aam
lods
ss
dec
ds
cmps
cmp
cdq
daa
xchg
daa
call
and
ins
and
push
(bad)
xor
not
jo
retf
sar
xor
out
idiv
ss
sub
daa
lods
mov
push
fst
aaa
pushf
pop
adc
xor
(bad)
scas
mov
push
lea
inc
jmp
inc
stos
add
dec
jmp
mov
pop
loope
push
xchg
pop
push
push
push
jmp
int3
dec
addr16
mov
and
sbb
call
imul
mov
cmps
mov
xchg
mov
addr16
(bad)
rcl
push
ret
adc
and
lock
out
sbb
pop
push
rcl
or
push
in
mov
adc
enter
adc
mov
out
mov
or
ja
in
adc
dec
fmul
clc
mov
dec
std
retf
pop
lods
popa
cmp
je
jns
in
iret
int3
fnstcw
repz
jge
jmp
cli
mov
mov
add
in
mov
rcr
and
mov
test
sub
mov
call
and
push
sbb
(bad)
jnp
or
es
dec
inc
ficom
sbb
xchg
dec
pop
push
fstp
sbb
push
test
cmp
iret
xchg
rol
fwait
inc
sub
stos
aas
push
jl
adc
into
push
adc
jmp
iret
mov
mov
addr16
fadd
in
jl
jmp
pop
and
lods
popa
xor
(bad)
cmp
or
lds
or
adc
cmps
outs
mov
mov
ret
push
in
or
mov
sti
sti
fdiv
adc
sub
jg
and
lea
jp
cdq
add
xchg
dec
mov
mov
lds
push
in
jmp
test
call
jmp
scas
gs
cmp
and
jmp
pop
test
mov
je
push
cmps
dec
ds
pop
rol
inc
push
lea
mov
cmp
in
push
outs
cli
mov
lods
dec
xchg
jbe
in
imul
scas
xchg
ja
sub
test
push
ja
adc
mov
popf
mov
mov
enter
xlat
les
int
mov
pop
xor
retf
jp
loop
shl
mov
mov
int3
fsub
stc
cmps
jl
adc
pop
and
bound
shr
cmp
call
sbb
mov
repz
jbe
inc
inc
int3
dec
xchg
(bad)
dec
sub
xor
xchg
jmp
rep
in
jle
and
popf
push
out
sbb
arpl
cdq
dec
scas
xchg
out
(bad)
repnz
mov
dec
and
mov
sub
lock
sbb
sbb
jb
(bad)
jle
pop
aaa
loop
aaa
adc
sbb
xor
mov
mov
xchg
cmps
and
pop
lea
retf
ret
lahf
pop
cld
lock
imul
add
into
push
cmp
aas
loopne
inc
loop
ins
cdq
xlat
in
cli
xchg
xchg
jge
popf
fs
scas
arpl
fldcw
int
pop
mov
cmp
push
and
dec
inc
inc
arpl
mov
xor
gs
or
jnp
les
dec
cmps
addr16
nop
sub
and
test
mov
lods
in
inc
pusha
mov
xor
mov
push
inc
push
mov
inc
sti
dec
mov
and
cwde
ins
sub
shl
in
adc
packssdw
sbb
outs
add
fstp
mov
mov
pop
fcomip
movs
sub
xchg
xchg
dec
and
dec
jg
inc
dec
pop
push
cmp
mov
dec
popf
repz
repnz
outs
xor
sub
push
inc
xchg
mov
addr16
mov
scas
jae
add
int3
ret
or
enter
outs
push
and
jae
mov
nop
arpl
imul
xor
cwde
xlat
retf
xor
data16
xchg
fs
pop
dec
movs
mov
xchg
mov
mov
shl
xor
dec
in
push
(bad)
mov
inc
or
mov
rcr
inc
mov
dec
or
lahf
and
cmps
fstp
aaa
mov
outs
inc
nop
loope
jbe
in
push
add
cwde
jle
clc
xchg
stc
mov
add
adc
jbe
and
in
or
data16
mov
jg
les
xchg
ja
inc
inc
mov
ficom
push
test
movs
xor
adc
mov
push
jbe
mov
idiv
or
dec
mov
out
clc
and
cmc
mov
and
inc
push
pop
add
mov
shl
pop
add
(bad)
mov
bound
mov
and
out
adc
pop
test
dec
fmul
adc
cmp
mov
inc
mov
inc
shr
scas
or
mov
movs
jb
sar
js
test
cs
repz
pop
xor
out
mov
mov
add
and
out
ss
add
xor
or
jl
xor
out
push
cmp
das
retf
cmc
test
out
xor
sbb
stos
ss
stos
fdivrp
pop
xor
int
jne
jmp
call
fwait
mov
ror
les
sbb
add
mov
das
add
xor
cmps
lahf
adc
faddp
lahf
sbb
pop
push
pop
popf
adc
repnz
xor
adc
or
call
addr16
or
or
and
fwait
add
xor
dec
int
adc
push
movs
pop
outs
mov
cli
jo
rcr
xchg
push
lock
xchg
ins
mov
cmp
adc
push
fidivr
(bad)
hlt
sbb
out
jg
or
mov
ins
repnz
gs
push
dec
jecxz
stos
xchg
int
lock
dec
push
and
fsubr
sbb
dec
sub
in
jnp
mov
sbb
dec
das
adc
mov
das
mov
aam
js
cwde
jge
and
aad
scas
aaa
loope
pop
sbb
bound
ror
ss
inc
call
mov
repz
stc
into
mov
bound
mul
sbb
dec
push
adc
dec
stos
cld
xlat
push
mov
xchg
in
and
ret
xchg
add
push
adc
mov
xchg
scas
jge
aaa
mov
mov
lods
outs
imul
sti
fsub
movs
arpl
jbe
cmp
imul
(bad)
jnp
and
mov
dec
fs
in
pop
push
pop
jb
jno
jo
mov
ret
fs
icebp
ss
xor
lds
inc
ja
push
fnstenv
adc
in
push
in
add
cli
push
xchg
sub
mov
mov
adc
xchg
sub
sbb
cmp
or
scas
loop
sbb
adc
in
dec
and
pop
cwde
xchg
jmp
jo
push
test
push
or
dec
inc
add
pushf
xor
pusha
mov
mov
jp
sbb
ficom
call
(bad)
sbb
mov
call
loopne
sub
cdq
push
mov
jl
(bad)
div
xor
mov
push
jl
fisubr
or
jno
inc
sub
add
ins
aam
mov
pop
or
mov
rol
cmp
outs
out
pop
push
out
bound
imul
mov
sbb
xchg
and
mov
cmps
(bad)
repz
repnz
sbb
fisubr
inc
xor
xchg
pop
repnz
jns
pop
or
movs
in
pop
mov
pop
pop
fld
inc
mov
adc
es
lods
push
push
jno
es
and
mov
mov
mov
pop
jmp
bound
or
nop
mov
jle
mov
(bad)
stc
cmp
shr
xor
push
leave
pop
nop
pop
jmp
in
adc
lahf
aad
scas
js
cmp
add
push
dec
mov
mov
inc
jmp
fidiv
dec
int
jmp
inc
sub
lods
push
inc
push
dec
cmp
add
rol
(bad)
out
xor
btr
inc
mov
clc
mov
test
retf
mov
or
jmp
or
jp
mov
pop
xchg
push
rol
pusha
imul
cmp
jns
lods
cmc
mov
div
or
xor
fld
(bad)
fstp
call
or
jmp
and
es
add
xchg
fist
lods
push
clc
pushf
xchg
or
and
jae
das
and
test
or
(bad)
dec
call
inc
call
mov
cmp
cmps
add
(bad)
cmp
out
in
stos
lahf
adc
ret
mov
lock
fcomp
and
loope
push
rcl
mov
or
adc
dec
aas
aas
cmp
sahf
mov
jo
fcomp
push
adc
enter
mov
mov
outs
push
daa
es
icebp
mov
(bad)
out
push
push
loop
cmps
lods
lods
inc
fwait
rcr
cs
sub
(bad)
dec
in
cmps
mov
and
sub
int
out
jae
movs
je
xor
pop
sub
pop
inc
dec
mov
or
and
in
jl
ds
or
push
rol
clc
mov
push
gs
adc
push
addr16
int
in
pop
jl
or
push
push
jecxz
sbb
add
(bad)
pop
cs
shr
jecxz
mov
into
adc
imul
aam
inc
mov
xchg
push
sub
and
js
add
fnsave
sub
adc
test
cmp
bound
aad
jecxz
push
fwait
cwde
inc
mov
jge
xchg
cdq
js
in
sti
call
cli
mov
xor
mov
std
retf
xchg
and
sbb
jmp
shl
inc
fstp
call
push
inc
ds
adc
inc
xor
dec
rol
(bad)
in
(bad)
dec
dec
jle
xchg
push
xchg
inc
mov
inc
ja
into
or
ret
out
pop
rol
pusha
fnstenv
xchg
push
mov
add
sub
stos
seto
sub
mov
jns
sub
das
jns
fidiv
inc
cmps
test
adc
mov
jge
sar
fld
jmp
cld
mov
sub
pop
jo
ins
jns
loopne
lods
shl
jge
or
arpl
pop
mov
ret
ror
lds
jnp
cmp
call
es
clc
scas
in
ror
dec
scas
xchg
add
mov
ins
add
bound
xchg
cmp
add
sub
mov
retf
js
loope
xor
xchg
inc
test
xor
imul
in
dec
xor
rcl
sbb
or
jns
sar
pop
fistp
je
cmc
jb
pop
push
mov
push
addr16
cdq
pop
call
pop
sbb
mov
popf
lahf
xchg
mov
xor
inc
jmp
pusha
int
push
aaa
sti
xor
sbb
or
fdivrp
pop
je
icebp
imul
mov
cli
call
adc
ja
movs
inc
(bad)
cmp
mov
xchg
lds
push
mov
shl
and
mov
pshufw
fsincos
je
out
ror
lods
lds
std
(bad)
mov
es
icebp
les
xchg
sbb
pop
test
leave
pop
xor
xlat
aad
ret
into
jmp
push
cmp
and
(bad)
and
out
sbb
dec
and
jecxz
dec
movs
adc
add
(bad)
movs
inc
fcomi
adc
push
xchg
push
das
dec
pop
test
sbb
cmps
sub
push
and
xor
fs
jl
popf
int3
test
call
lea
mov
(bad)
je
fdiv
pop
inc
pop
int3
jecxz
scas
mov
mov
ins
fwait
mov
pop
scas
cmps
xchg
add
pop
mov
sbb
movs
popa
mov
sar
in
fdivr
std
test
cmp
call
outs
mov
sbb
jne
add
dec
pop
sub
pop
xchg
pop
imul
pushf
jge
fisub
pop
xor
call
mov
xchg
mov
pop
mov
mov
mov
fs
test
push
aas
xchg
jecxz
xchg
push
sti
push
test
shr
or
aas
cmp
clc
test
dec
push
xchg
stos
sahf
int3
push
adc
push
xchg
hlt
fucomip
jbe
mov
inc
sti
arpl
fsubr
pushf
ja
ins
xchg
xor
ins
sbb
cmp
push
and
mov
mov
dec
adc
push
lock
or
xchg
add
sbb
lock
adc
mov
cld
mov
jne
add
fsubr
cmc
test
mov
(bad)
test
jo
push
(bad)
fwait
push
in
mov
push
ror
xlat
fidivr
clc
outs
cmp
fldcw
ins
mov
cmp
imul
loope
lahf
(bad)
pop
cmc
push
es
ds
lea
push
scas
mov
popa
xchg
leave
lahf
or
js
push
in
fs
lea
sub
out
adc
jecxz
not
mov
add
fsub
add
xchg
cmps
lea
ret
ins
outs
sbb
rcl
add
std
ins
rcl
stos
ins
sbb
icebp
and
push
das
popa
add
pop
mov
pusha
test
dec
dec
cdq
adc
jp
cmp
fcom
ins
mov
popa
xor
adc
or
bound
rcr
jmpw
dec
rol
push
xor
dec
or
stc
outs
pop
xor
ret
push
popf
test
sti
or
and
aad
in
mov
lahf
mov
cmp
dec
aaa
sub
cmp
mov
xor
jecxz
pop
sub
mov
xchg
sbb
jmp
sub
xchg
jg
cmp
add
shl
push
sahf
shl
out
test
mov
popf
clc
das
arpl
aaa
in
sbb
and
cs
mov
dec
(bad)
rcr
sbb
enter
or
mov
sbb
mov
inc
mov
cmp
dec
(bad)
sti
push
inc
or
pop
in
adc
jnp
mov
aas
dec
cmp
daa
loopne
and
add
test
adc
sub
mov
jns
addr16
outs
aaa
mov
je
dec
scas
icebp
cmp
pusha
add
sbb
imul
lahf
push
xchg
fisttp
(bad)
push
and
dec
pop
or
push
mov
out
push
mov
fild
xor
push
scas
add
mov
outs
mov
push
cmp
sbb
ret
or
jecxz
mov
push
out
and
icebp
pop
sub
retf
dec
in
push
cs
xor
cs
cld
add
(bad)
mov
pop
(bad)
mov
xor
sub
add
or
hlt
cmp
push
std
js
test
mov
inc
pushf
jge
cs
mov
xchg
(bad)
call
pushf
jg
xchg
mov
shl
cmp
cld
dec
cli
popa
mov
adc
sbb
outs
sub
mov
jl
xchg
mov
hlt
dec
jecxz
add
ret
aam
mov
in
sub
fsubr
xor
stos
iret
push
rol
ds
or
xor
neg
add
in
loop
jnp
mov
mov
cmc
push
xchg
(bad)
lods
mov
sbb
push
push
js
xchg
sahf
(bad)
jno
(bad)
push
ja
gs
jno
ins
call
push
in
(bad)
cmp
retf
das
push
in
push
sub
repnz
mov
cmp
sbb
sub
push
retf
lahf
and
jp
stos
inc
shl
mov
clc
stc
jp
add
jmp
cmp
xor
out
push
iret
test
mov
mov
jp
rol
mov
dec
inc
xchg
aad
idiv
xor
sub
xchg
xchg
ret
adc
std
xchg
aas
(bad)
lods
fdivr
js
xlat
faddp
pop
or
pushf
out
call
ss
iret
dec
lea
inc
jp
pop
push
pop
enter
movs
sbb
lock
(bad)
lds
bound
cld
shl
cdq
push
push
adc
dec
sub
fndisi(8087
xchg
pop
xchg
xor
movs
mov
cdq
adc
and
mov
jo
repz
push
cmp
or
pop
arpl
shl
lea
xchg
sbb
lds
pop
inc
push
pushf
sbb
cwde
ds
paddw
push
add
fstp
shl
push
mov
ja
or
and
les
and
push
test
xchg
dec
adc
add
ror
xor
push
out
das
repz
adc
hlt
repnz
loope
push
xchg
inc
pop
scas
in
icebp
jae
loop
jg
add
xchg
adc
sbb
shl
push
mov
xchg
pop
cs
in
std
fstp
sbb
xchg
add
shl
ret
test
movs
jge
pop
rcr
ret
xor
fld
shr
or
inc
setns
fstp
xchg
xor
sahf
aad
retf
cs
ficomp
jb
in
xchg
or
scas
rcl
jns
loopne
retf
int3
cmp
add
repnz
mov
fidivr
stos
repnz
data16
test
in
xor
push
das
jmp
mov
mov
ja
(bad)
aad
mov
jp
pop
mov
jle
inc
frstor
iret
and
dec
movs
inc
shr
daa
into
push
dec
push
(bad)
push
xchg
push
adc
test
pop
gs
jbe
cmp
outs
mov
add
xor
lods
pop
adc
stos
call
lock
fist
test
test
push
imul
pop
push
vmovhps
xor
or
loopne
shr
cmp
adc
ja
jg
pusha
push
scas
in
mov
rcr
popf
and
mov
loope
dec
movs
cmp
mov
lods
lea
fmul
(bad)
xor
mov
push
daa
test
jl
push
fild
xchg
aas
xor
retf
or
sbb
stos
scas
iret
shr
sub
jecxz
dec
dec
test
outs
cmp
and
push
fstp
cs
movs
retf
dec
in
ds
push
mov
cmc
mov
inc
(bad)
js
inc
lods
inc
mov
sub
cmp
scas
int
adc
pop
test
pop
cmp
scas
cmps
loopne
lock
sub
dec
jecxz
jecxz
dec
pop
push
ins
xchg
leave
sub
xchg
cmp
mov
pop
fsub
adc
adc
cmp
pop
cwde
cmc
dec
jl
adc
mov
dec
push
mov
mov
and
push
fld
dec
pop
repz
arpl
cmps
jge
dec
dec
test
jae
into
or
sbb
shr
fst
pop
push
lea
loope
sub
mov
dec
add
lahf
mov
(bad)
adc
aam
lods
pop
jmp
rol
fnstsw
test
pop
mov
jp
(bad)
test
into
loope
in
sbb
(bad)
cmp
xchg
test
sub
in
cmps
jb
xchg
sub
dec
add
test
mov
lods
cs
into
in
sub
adc
add
push
jp
dec
stos
int
fld
mov
mov
mov
xchg
jno
(bad)
xchg
call
enter
ror
sub
imul
sahf
inc
dec
test
dec
je
imul
fild
sti
mov
int3
inc
lock
push
cmp
out
xor
loop
scas
push
mov
mov
adc
pop
sar
cmps
sbb
xchg
jecxz
jg
fcomp
adc
dec
or
(bad)
adc
sub
cdq
push
(bad)
sbb
hlt
mov
ficom
cmp
scas
mov
sbb
and
dec
fcmovnb
scas
sbb
mov
outs
push
test
lock
add
cmp
mov
nop
sub
push
scas
add
rcr
test
aas
sbb
mov
xchg
(bad)
and
push
pop
mov
jo
sub
mov
(bad)
in
ins
leave
push
fld
(bad)
ins
sbb
je
repz
hlt
inc
cs
xor
xor
mov
(bad)
mov
sbb
and
retf
add
add
sub
or
bound
xor
sub
push
xchg
xor
sub
hlt
adc
repnz
fnstcw
or
jl
sar
cmps
adc
push
inc
mov
pop
adc
retf
and
(bad)
dec
jb
jbe
in
cmp
stos
pop
lds
imul
inc
sub
push
enter
jl
cmc
in
mov
push
sub
cmc
pop
cmc
cmp
test
fldcw
adc
inc
outs
es
push
inc
stos
pop
push
arpl
adc
outs
mov
hlt
shl
fsubrp
mov
cmp
sub
mov
jb
out
retf
push
das
cld
dec
icebp
outs
mov
clc
(bad)
pusha
repz
scas
and
dec
lahf
xor
test
push
cmp
jnp
lds
popa
jl
fisub
test
push
fisub
mov
retf
cmp
sar
movs
ins
jg
mov
jle
mov
addr16
fnstsw
ja
add
mov
pop
iret
mov
cwde
push
pop
pop
rcr
lea
pop
pop
xchg
xchg
or
sub
test
push
cmp
push
cmp
add
inc
cmp
pop
ss
repz
cld
fiadd
xor
add
(bad)
pop
mov
push
mov
sub
adc
dec
cmps
push
xor
imul
or
scas
shl
enter
inc
imul
push
jno
nop
push
(bad)
cmp
xlat
mov
add
dec
sahf
popa
mov
mov
sbb
cld
(bad)
mov
ds
imul
out
mov
mov
ins
scas
cmp
retf
add
rol
aam
dec
dec
gs
out
aad
mov
fnstsw
jne
cmp
push
ret
pushf
sbb
rcr
jmp
sub
dec
cli
in
int3
jns
add
cmps
xor
jae
daa
and
imul
adc
scas
mov
and
or
pop
js
or
add
mov
fiadd
and
pop
es
xor
inc
daa
(bad)
jae
ins
push
mov
pop
sbb
aas
xor
into
sbb
sub
xor
xor
arpl
inc
mov
sub
ds
cwde
stc
cld
mov
push
pop
mov
dec
ds
stc
mov
cmc
mov
xlat
dec
pop
lea
xlat
pop
repz
sub
shl
jb
pusha
fisubr
push
fnstsw
pop
push
mov
pop
push
cmp
xlat
jbe
sbb
iret
xchg
push
fcmovnbe
hlt
sub
(bad)
sbb
and
xor
adc
pop
(bad)
fadd
fwait
sbb
inc
cmp
cmp
pop
jle
sbb
add
call
jge
mov
sub
dec
call
out
imul
cmc
cmp
push
cmp
xchg
div
xchg
test
ja
aas
stos
not
mov
sar
icebp
test
sbb
repz
push
xchg
ror
cdq
pop
cmp
mov
popa
or
or
jae
mov
cld
call
and
pop
mov
sti
jmp
inc
stos
or
hlt
out
dec
clc
push
mov
ficomp
add
xchg
xchg
in
sub
data16
xchg
pop
je
retf
mov
xor
das
cmp
push
clc
es
push
fidivr
push
js
out
mov
stos
shl
movs
jl
xor
adc
jae
push
aaa
sub
sbb
cmp
mov
in
daa
loopne
scas
lock
test
xor
or
fwait
jl
push
into
mov
dec
out
int3
mov
rcr
jg
mov
cmp
mov
inc
fldcw
ja
push
jo
ret
cmp
lods
enter
clc
outs
fld
xor
data16
ficomp
ins
daa
lock
mov
mov
push
fidiv
push
std
(bad)
icebp
adc
mov
adc
jmp
fsubr
mov
out
adc
and
adc
jle
fld
shr
ret
pop
dec
bound
push
push
mov
pop
sbb
inc
dec
ja
pminsw
pop
repz
scas
dec
les
addr16
mov
mov
lods
addr16
inc
jge
js
and
and
and
add
mov
jae
push
xlat
arpl
not
movntps
shl
fsubr
push
mov
mov
inc
rcl
fs
jecxz
test
jl
or
addr16
pop
push
ins
mov
sbb
nop
sar
pop
mov
retf
sub
pop
inc
jecxz
pop
js
mov
cwde
lock
sub
pop
xor
dec
mov
pusha
and
ja
(bad)
iret
or
int
mov
push
mov
lahf
or
mov
sub
clc
mov
dec
xchg
adc
jmp
add
sbb
push
pop
not
imul
push
repnz
sub
push
cmc
shl
pop
aas
ins
leave
nop
lea
leave
les
pop
aas
fwait
in
sbb
sbb
sub
mov
jmp
push
push
pop
inc
push
dec
retf
repnz
xor
push
cmps
dec
and
aaa
(bad)
add
scas
or
pop
and
pop
mov
test
aad
cmovbe
jne
scas
dec
rcr
pop
mov
aad
movs
fisttp
mov
push
stc
inc
(bad)
add
mov
mov
inc
leave
fldenv
pop
cmp
(bad)
xchg
push
outs
fisttp
ror
ins
mov
push
aad
inc
push
int3
xor
xchg
dec
stc
mov
inc
gs
pop
scas
(bad)
inc
adc
jns
mov
xor
icebp
pop
push
dec
ja
jno
xchg
nop
aas
or
ret
ret
repz
sbb
out
push
ins
ss
lock
and
inc
push
movs
dec
dec
xchg
pop
fidivr
mov
adc
invd
adc
mov
jge
or
in
in
out
popa
out
jle
repnz
mov
ins
out
test
bound
inc
jecxz
scas
mov
out
ins
sub
push
adc
cmp
mov
mov
cs
sbb
dec
xor
and
aam
xor
jecxz
lock
retf
or
mov
cdq
xchg
clc
ins
and
jne
sub
test
sub
das
mov
in
je
dec
pop
push
cmp
daa
jge
mov
aam
imul
(bad)
jmp
fisttp
or
sub
add
retf
cmp
inc
or
cmp
or
ss
xor
jle
bound
pop
pop
pop
cmc
sub
mov
add
in
bound
xchg
es
pop
pop
mov
mov
xchg
or
and
test
cdq
cwde
imul
jl
(bad)
cli
push
inc
and
pop
inc
inc
test
loope
mov
pop
lods
mov
sar
clc
retf
scas
pop
mov
sahf
push
pop
add
mov
and
aam
stc
cmp
adc
xchg
js
xor
in
out
test
adc
and
pop
mov
js
aam
pop
inc
pop
xchg
jnp
cli
int
inc
and
push
rcr
outs
push
loopne
and
imul
add
int3
data16
push
sub
pushf
dec
mov
popa
shr
std
retf
push
mov
aam
(bad)
in
cmp
mov
bound
dec
push
mov
ds
mov
in
mov
leave
cmps
or
pop
or
in
sbb
inc
mov
jns
push
fimul
add
cmp
inc
stc
jecxz
mov
inc
rcl
pusha
dec
fisub
xor
cs
fadd
pushf
push
lea
xor
mov
xor
pop
cmc
xchg
push
xor
or
scas
mov
movs
xchg
int3
or
push
xlat
pop
call
mov
pop
xor
mov
mov
in
and
cmp
xchg
call
and
add
lock
out
adc
ins
xchg
cmp
jo
fadd
cmps
cli
rcl
inc
pop
inc
dec
adc
ja
ins
cmc
je
xor
dec
sti
mov
out
daa
and
not
shl
scas
ret
pop
ins
pop
push
test
inc
add
cdq
call
scas
dec
sbb
vcvttpd2dq
add
fdivr
xchg
dec
xchg
sar
sub
dec
adc
icebp
cmp
aam
or
cmp
jge
retf
icebp
jecxz
xchg
adc
or
(bad)
fld
mov
xor
adc
jb
arpl
sar
ja
cmp
dec
inc
imul
jnp
fst
imul
dec
fwait
data16
add
pop
push
push
adc
retf
inc
js
mov
icebp
and
shl
push
inc
mov
inc
mov
ret
loop
lahf
cmp
dec
and
inc
add
dec
jnp
xchg
shl
jmp
xchg
das
out
mov
jns
mov
rcr
push
and
movs
mov
xor
repz
cmp
mov
sbb
pop
mov
jb
out
fld
or
pop
dec
xchg
loopne
jle
adc
das
ja
retf
xchg
cmps
sbb
push
fwait
xor
sbb
js
cdq
adc
add
test
imul
mov
ss
jp
mov
pop
xor
push
mov
dec
ret
push
leave
sahf
(bad)
mul
xchg
mov
and
pop
repnz
and
jo
sti
shl
pop
outs
sahf
add
mov
or
pop
stc
popa
dec
and
push
xchg
mov
pop
inc
push
lods
cmp
(bad)
cld
sbb
xor
inc
sub
pusha
push
mov
out
in
jne
sub
push
push
sub
ret
inc
(bad)
push
pop
pop
test
jle
(bad)
and
adc
sbb
pop
push
lea
loop
push
pop
inc
(bad)
rcr
add
and
jge
push
xchg
out
or
not
aad
lods
pop
dec
dec
cli
mov
dec
fs
imul
cmp
add
movs
leave
pop
scas
popf
ins
mov
adc
inc
xchg
mov
push
jmp
fistp
cmp
cdq
clc
cmc
out
stc
popf
test
push
mov
stc
push
test
inc
nop
fiadd
adc
push
mov
dec
jge
jge
push
push
retf
(bad)
lea
sub
call
cmps
mov
jmp
mov
sbb
pop
out
pop
ins
(bad)
out
data16
ds
leave
fcomp
test
out
cs
mov
ins
jle
pushf
jo
mov
mov
xchg
xor
(bad)
imul
add
mov
fstp
lock
adc
push
push
jecxz
mov
sahf
je
and
cld
cmps
test
cwde
mov
inc
shl
stos
and
mov
in
popa
pop
fidiv
(bad)
in
sbb
test
(bad)
push
stos
aam
dec
mov
les
es
test
or
mov
movs
sub
leave
pop
cmps
or
sub
ins
push
inc
xlat
mov
mov
sbb
rol
sbb
lods
dec
fsubr
(bad)
out
fbstp
push
jl
xchg
in
rcl
inc
and
push
sbb
dec
js
mov
popf
and
rcl
and
in
aaa
mov
dec
mov
add
test
dec
cmp
mov
xchg
pusha
xchg
sti
mov
dec
lds
fcom
popf
(bad)
mov
and
iret
mov
mov
out
out
mov
js
lds
mov
cmc
cld
xchg
jne
(bad)
leave
out
xchg
(bad)
cmps
and
jbe
sub
xlat
jmp
mov
adc
mov
loop
and
mov
call
fidiv
shr
jns
push
dec
xchg
inc
add
inc
lods
fisubr
inc
outs
adc
clc
fisttp
imul
je
iret
cmp
sub
pop
inc
inc
mov
pushf
xchg
jp
test
cld
or
adc
ds
mov
mul
pop
mov
push
jecxz
jnp
push
jl
sub
jge
inc
add
mov
mov
jb
xor
fisttp
lods
lahf
mov
stos
scas
jae
outs
mov
jne
jne
cwde
xor
ret
(bad)
lock
sub
(bad)
jmp
fbld
mov
cli
in
sub
mov
imul
push
push
xor
jge
dec
jne
or
loope
stc
jge
ret
push
xchg
sbb
jle
xor
fadd
test
xchg
push
xchg
dec
xchg
fstp
scas
dec
data16
xor
push
jns
and
cmp
(bad)
mov
stc
mov
outs
sub
leave
retf
test
dec
jmp
sbb
push
dec
cmp
nop
ja
not
jne
sub
fist
mov
js
push
sub
inc
push
sahf
xor
mov
inc
xor
sbb
jp
xchg
aam
loop
mov
mov
or
inc
adc
out
adc
lock
shl
scas
mov
nop
sub
rcr
lock
cmp
int3
mov
add
add
push
and
adc
push
iret
repnz
loope
shl
fdiv
into
adc
fidiv
out
push
call
sub
push
push
add
pop
push
stos
dec
xchg
jmp
pusha
jp
or
std
rol
ja
add
jae
loope
test
(bad)
adc
dec
or
mov
repz
retf
mov
in
mov
or
dec
je
mov
mov
sahf
nop
jmp
fsub
mov
sub
mov
xchg
inc
jae
xor
setbe
cmp
mov
call
or
xor
(bad)
mov
mov
mov
push
ret
(bad)
lahf
in
jl
add
in
push
rcl
and
xchg
mov
mov
sbb
jmp
(bad)
fst
add
out
ret
inc
daa
sar
sbb
adc
icebp
jo
das
cmp
pop
cmps
xchg
inc
scas
mov
jae
fnsave
nop
(bad)
(bad)
push
jge
xchg
pop
ror
pusha
dec
jge
mov
ret
dec
jge
adc
test
push
loop
loope
pusha
sub
movs
push
ret
jb
sbb
sub
cmp
add
push
mov
(bad)
pop
or
pop
enter
cli
or
inc
mov
push
movs
xor
ss
add
popf
(bad)
mov
fdiv
adc
sbb
and
repnz
sub
cld
scas
loopne
lods
push
es
add
pop
loopne
xor
test
(bad)
jnp
inc
mov
mov
jecxz
pop
sub
mov
outs
fdiv
push
push
push
data16
inc
push
leave
or
scas
ret
xlat
in
bound
cmps
cld
adc
cmp
push
dec
(bad)
and
add
mov
and
xor
sub
fnstsw
arpl
push
mov
adc
es
xor
lahf
add
dec
into
sbb
pop
addr16
(bad)
xchg
dec
fild
mov
push
xchg
loop
mov
mov
ja
pop
jp
je
in
inc
sub
xchg
fsubr
out
or
push
mov
mov
in
xchg
test
ror
pop
fchs
stos
scas
dec
inc
jmp
jecxz
xchg
lods
sub
and
in
xchg
mov
mov
bound
pop
xchg
lea
dec
cmps
in
xor
pop
call
jmp
inc
mov
mov
movs
and
shr
fistp
adc
push
icebp
in
inc
mov
push
inc
dec
sub
xchg
not
adc
mov
sub
or
jl
sub
movs
es
ja
xchg
in
daa
pop
xchg
cmp
cmps
mov
cli
popa
lea
lods
jle
xor
inc
ins
pop
ds
inc
xchg
ins
ret
mov
add
repz
shl
push
ror
pop
sbb
xchg
(bad)
or
dec
push
mov
daa
(bad)
fidiv
inc
neg
push
pusha
pop
mov
jmp
bound
sti
sbb
inc
and
mov
push
mov
call
mov
out
cmps
jne
or
test
data16
sub
pop
jns
scas
jl
push
dec
imul
jmp
mov
mov
xchg
dec
cmp
test
xchg
inc
push
sar
aad
and
cmp
(bad)
xchg
push
sbb
retf
scas
or
mov
mov
sar
or
scas
outs
jp
and
out
loopne
add
jbe
jne
mov
call
pop
cmp
pop
push
jg
mov
mov
das
sub
retf
ret
mov
mov
retf
fwait
rcl
sub
adc
jmp
jl
repnz
pop
cmp
or
mov
fucomp
xlat
xchg
movs
dec
rcl
(bad)
adc
inc
push
mov
repnz
and
fcmovnu
push
mov
rcr
mov
arpl
stos
sub
cmp
cmp
sub
sub
leave
sbb
lahf
or
pop
jle
mov
adc
cld
and
adc
rcr
dec
imul
adc
pop
xchg
cdq
jge
mov
out
jo
jmp
in
dec
fmul
add
adc
ror
imul
stos
test
and
aas
inc
cmp
jge
test
inc
sbb
cmp
pop
or
fimul
cwde
cld
ffree
or
ffreep
ins
(bad)
lods
push
jns
and
lods
adc
push
test
ja
rcr
aaa
clc
mov
or
call
and
add
xor
hlt
loop
mov
cld
adc
dec
jmp
mov
sub
inc
mov
aad
add
inc
test
or
in
into
stc
hlt
pop
xor
mov
or
or
sbb
ins
adc
mov
cwde
call
(bad)
test
cmp
pop
ja
lds
das
fidivr
sub
cmp
add
pop
(bad)
and
mov
retf
(bad)
jne
lods
fbstp
push
pop
loope
push
test
jne
int3
mov
int
push
inc
lock
or
rol
pop
sbb
xchg
xor
and
rcr
push
fdivr
push
push
mov
cli
es
sbb
push
sbb
push
popf
jnp
test
push
test
out
adc
jle
adc
or
pop
or
jge
add
xor
pushf
sbb
cwde
add
loop
adc
and
sbb
loop
sub
sar
lea
mov
sub
jno
mov
mov
mov
adc
push
add
arpl
fcomp
das
fdivr
sbb
fidivr
dec
mov
jecxz
sub
adc
pop
push
iret
jns
retf
(bad)
push
inc
adc
stos
movs
into
pusha
jo
push
fstp
push
sub
dec
pop
push
enter
mov
sbb
(bad)
mov
push
dec
push
cmp
pusha
jmp
cmp
fisttp
push
inc
int
xor
cmp
jnp
fisttp
int3
retf
rcr
jbe
retf
adc
dec
dec
lea
cwde
sub
out
(bad)
movs
or
cmp
push
outs
jno
dec
pop
mov
mov
sbb
out
aad
repz
mov
popa
iret
call
jns
cmc
pop
imul
pushf
ret
fadd
adc
mov
inc
mov
or
mov
data16
pop
hlt
enter
out
fadd
mov
pop
jae
dec
lods
test
sub
(bad)
lods
aaa
test
imul
cli
outs
add
fld
es
repnz
add
mov
mov
ss
jmp
dec
add
xor
jp
lds
pop
add
or
push
and
mov
xor
sar
cdq
ret
cmps
sar
pop
mov
sbb
and
sub
inc
out
or
sahf
dec
pop
pop
cli
mov
pop
add
mov
add
hlt
ja
cwde
or
fs
mov
jns
xchg
sub
ds
fldcw
imul
push
rol
in
retf
xchg
xchg
movs
nop
or
movs
sbb
shl
or
(bad)
pop
mov
jge
mov
add
call
pop
sbb
sub
and
clc
ss
icebp
stc
mov
add
xchg
inc
ss
jp
ret
jle
or
cmp
sahf
add
inc
fidivr
enter
or
xchg
mov
push
or
(bad)
xchg
add
push
xlat
adc
xlat
lods
(bad)
dec
scas
cmc
rol
out
popf
in
call
je
pop
aad
rcr
xor
popa
rcl
mov
ret
push
in
push
xchg
inc
mov
sbb
and
adc
mov
sbb
ficomp
aad
jecxz
in
nop
sar
sti
dec
jg
pop
inc
ficomp
add
cmc
call
cli
mov
mov
dec
or
pop
movs
mov
stc
test
sbb
nop
adc
popa
aaa
outs
pop
movs
mov
sub
leave
out
out
lods
out
les
ins
cmps
push
loope
and
xchg
nop
sbb
sbb
ins
xchg
pop
cmp
std
div
out
inc
lods
jle
sub
mov
jb
mov
push
inc
lock
mov
jmp
pop
jecxz
or
scas
add
mov
push
aaa
cdq
pop
sbb
and
loop
mov
inc
jecxz
(bad)
iret
gs
enter
fsub
adc
or
cld
out
add
and
inc
test
cwde
rcl
cld
add
movs
das
nop
inc
adc
loope
xor
mov
cmp
test
jmp
adc
bound
xor
rcl
(bad)
test
out
sub
mov
mov
sbb
iret
xor
test
clc
push
test
or
ss
in
push
in
fmul
mov
inc
adc
(bad)
sub
arpl
or
xchg
mov
adc
cmp
and
sar
xor
sahf
fs
(bad)
mov
arpl
pop
(bad)
adc
push
pop
stos
dec
or
(bad)
jbe
stc
hlt
push
loopne
aaa
lea
pop
jecxz
mov
cs
and
sahf
sub
ins
pop
test
movs
xor
call
or
mov
shr
(bad)
hlt
cli
es
push
mov
xchg
ret
ds
(bad)
stos
stos
call
hlt
mov
movs
sbb
or
into
jmp
dec
pop
add
lock
and
pop
jne
cs
adc
push
scas
cld
sub
sbb
in
cmp
cmp
hlt
in
xor
xor
leave
mov
ins
push
int
mov
mov
dec
outs
pop
jg
sbb
fs
push
loopne
sbb
add
sar
dec
jmp
ret
cwde
pop
scas
xor
xchg
mov
mov
ja
jmp
lock
xor
jg
adc
or
cmps
or
jae
pop
push
pop
mov
rol
ja
mov
popf
add
mov
sub
and
push
les
and
jb
mov
cmp
xor
rcr
je
dec
xchg
mov
xor
sbb
dec
div
mov
test
(bad)
popa
inc
(bad)
mov
mul
xchg
or
xlat
adc
mov
ja
xor
ins
div
(bad)
xchg
pop
(bad)
stc
retf
push
dec
inc
(bad)
mov
push
dec
in
out
leave
pop
imul
cs
fdivr
cmp
mov
(bad)
fld
aam
(bad)
pop
cmp
fmul
adc
xor
repnz
sub
adc
in
call
(bad)
ror
stos
ret
addr16
retf
inc
outs
xchg
sub
xchg
mov
lods
rcl
stos
inc
je
js
(bad)
shl
ss
repnz
mov
lea
movs
loopne
ret
inc
out
mov
dec
ret
aas
dec
mov
lock
jae
jecxz
xor
pop
stos
arpl
sbb
(bad)
in
inc
mov
sar
cmp
cmc
(bad)
daa
in
out
xlat
xchg
aaa
rcl
or
lahf
fs
add
mov
cs
pop
in
retf
enter
sub
sub
or
and
movs
cli
jnp
call
xor
cmp
xchg
iret
xor
shr
cmps
retf
dec
inc
cmps
or
test
push
inc
xor
stc
into
in
mov
add
xor
enter
das
out
mov
xor
mov
test
sub
je
dec
jo
xlat
mov
aad
or
mov
add
ds
in
shl
mov
shr
inc
outs
sub
dec
stc
inc
push
(bad)
fidiv
push
ins
lock
gs
dec
pusha
stc
jmp
pushf
add
jno
pop
pop
es
inc
mov
inc
or
push
jb
mov
in
add
and
loope
mov
pop
nop
adc
outs
repnz
dec
(bad)
mov
int
pop
or
sub
jne
js
mov
(bad)
push
cli
popf
mov
inc
(bad)
mov
adc
cmp
jb
shl
je
test
sub
pop
bt
lods
mov
cmp
stc
cmp
stos
sub
imul
jmp
imul
mov
fstp
aam
fisubr
jge
cdq
xchg
(bad)
pop
rol
(bad)
adc
push
sub
cmp
cmp
int3
dec
sbb
loope
out
faddp
enter
aas
and
mov
int3
sub
push
outs
xchg
push
cmp
mov
xchg
mov
in
or
jmp
cmps
cmps
pop
in
call
out
push
loope
test
mov
in
nop
ficom
gs
or
and
or
in
sbb
adc
lods
push
mov
fiadd
pop
outs
jnp
mov
mov
mov
stos
(bad)
lds
cmp
stos
inc
mov
jbe
jns
scas
jbe
push
add
sub
push
into
pop
pop
out
jg
scas
std
ror
mov
xchg
add
fcom
push
sbb
mov
daa
int
or
jns
sar
xchg
mov
push
xchg
outs
jns
adc
sub
sub
rcl
sub
xor
stos
cmp
dec
inc
mov
dec
push
dec
jo
(bad)
pop
hlt
gs
loopne
cmp
inc
sbb
fstp
xchg
mov
aaa
iret
mov
sub
test
js
xchg
loop
push
xchg
mov
nop
fnstenv
fmul
loop
fs
xchg
pop
icebp
inc
sahf
movs
stos
gs
dec
into
cmps
rol
xchg
pop
jmp
push
add
push
or
out
lods
jg
test
retf
jmp
in
dec
adc
dec
mov
adc
xchg
or
aas
sub
call
fs
xor
inc
xor
xor
cld
mov
das
xchg
mov
mov
inc
jno
mov
xor
sbb
pop
mov
into
mov
sub
jo
das
lea
popa
adc
or
push
movs
arpl
fadd
mov
mov
inc
ret
addr16
lods
adc
cmp
push
mov
loope
enter
mov
mov
sbb
enter
adc
pop
mov
rcl
jb
xchg
dec
neg
std
and
test
jb
pop
push
dec
daa
and
pop
xchg
popa
cmc
mov
imul
mov
mov
inc
stos
push
scas
mov
mov
icebp
nop
aad
adc
pop
(bad)
call
nop
lahf
mov
(bad)
jo
jns
jmp
fst
sub
fs
mov
pop
jl
es
push
stc
popf
stos
push
ficom
adc
mov
or
dec
pop
jge
push
fisub
dec
xchg
cmp
sbb
add
push
sub
loop
ins
xor
test
arpl
push
jne
and
xor
dec
inc
xchg
cmp
mov
jle
push
xchg
rol
xor
sbb
in
das
fwait
or
mov
inc
out
sti
xchg
loope
pushf
aad
ja
int
cwde
inc
cmps
retf
pop
(bad)
cld
into
fwait
hlt
je
test
popa
mov
mov
mov
cdq
iret
cmps
adc
aas
inc
jnp
retf
cmp
aaa
jg
not
inc
pop
or
clc
fld
xor
aam
or
pop
push
ret
dec
pop
test
xor
or
les
icebp
push
movaps
sar
ja
into
sar
pop
mov
pusha
ins
data16
lods
sbb
inc
pop
shr
dec
div
ds
imul
mov
jo
imul
dec
mov
repz
pop
sahf
mov
jg
inc
cmp
or
xor
jns
xchg
xchg
push
icebp
inc
push
mov
jbe
pop
retf
xchg
cwde
mov
xchg
or
cmp
hlt
sbb
js
retf
cmp
cmp
enter
mov
sti
xchg
jae
jecxz
xchg
test
mov
in
pop
xor
movs
jp
pushf
into
inc
(bad)
popf
arpl
cmp
retf
adc
dec
bound
popa
jle
dec
mov
lds
lea
(bad)
sbb
int
inc
xor
sbb
mov
dec
in
out
or
iret
xor
daa
and
inc
imul
push
popa
inc
sbb
js
xor
mov
mov
(bad)
fbstp
xchg
adc
or
push
pusha
fisubr
and
imul
and
dec
add
add
enter
adc
add
push
inc
imul
adc
xor
int
cmp
addr16
mov
stos
jmp
xor
xchg
mov
shl
add
sbb
pop
jb
fcomip
fdivrp
imul
mov
sbb
jmp
scas
sti
xor
fidivr
jmp
dec
jmp
in
adc
stc
pop
lea
pop
out
icebp
push
mov
mov
xor
cmps
push
pop
(bad)
jne
popf
xchg
shl
je
push
mov
dec
(bad)
(bad)
xor
mov
xlat
outs
cmp
aas
in
push
add
repnz
enter
lds
push
mov
aaa
dec
repz
mov
(bad)
cmps
sub
ins
sub
in
xlat
pop
into
mov
hlt
cmc
in
mov
gs
adc
fwait
and
mul
mov
les
icebp
int
cs
push
(bad)
jg
inc
retf
in
in
and
int
loope
pop
imul
pop
inc
mov
in
popf
xchg
hlt
jbe
add
or
xor
xchg
cmp
pop
repnz
rcl
shl
cli
test
test
daa
xchg
leave
lea
fild
mov
xlat
pop
icebp
and
add
xor
mov
jnp
clc
sub
test
sti
jmp
stos
or
or
dec
push
push
fnsave
adc
inc
rcr
sbb
sub
or
jg
xchg
jmp
pop
aaa
pop
ins
and
es
sahf
fwait
movs
mov
jmp
mov
jecxz
add
mov
(bad)
movs
fdiv
ds
xchg
cdq
push
adc
jbe
inc
jns
dec
mov
mov
push
movs
pop
or
xor
adc
(bad)
and
lock
xchg
into
rcl
mul
xor
cmp
mov
idiv
inc
push
xchg
pop
jns
push
jmp
fidivr
imul
push
push
xor
mov
inc
mov
shl
inc
cmp
aas
retf
inc
cli
retf
jl
mov
test
add
lods
push
mov
test
outs
out
or
fsubrp
xchg
mov
pop
shr
in
sbb
or
xchg
add
xlat
fild
or
int3
ds
cmp
pop
inc
std
sahf
xchg
arpl
ror
sti
inc
test
mov
das
mov
mov
scas
ror
push
xor
in
aaa
cmp
adc
sbb
add
imul
or
mov
push
imul
mov
out
and
dec
inc
jg
push
push
mov
mov
jmp
iret
fstp
stos
xor
mov
gs
mov
xchg
xor
adc
jb
inc
out
sbb
imul
mov
xor
test
sbb
sub
adc
xchg
out
push
mov
imul
stos
sub
pop
ss
push
dec
pushf
jge
stos
stos
stc
popa
xchg
cmp
fsubr
loopne
push
aam
mov
ss
add
xchg
mov
pusha
sbb
jo
ret
cmp
stos
xlat
neg
adc
(bad)
xchg
jecxz
pop
xor
sbb
cdq
popa
sahf
push
into
adc
pop
es
jge
sub
mov
aad
and
ficomp
mov
clc
in
leave
into
aaa
aad
and
mov
mov
add
xchg
les
aam
sahf
add
inc
jp
clc
dec
mov
fimul
std
or
(bad)
adc
call
rol
int3
cli
sti
call
xchg
test
not
add
imul
mov
mov
leave
cmp
push
movs
loop
ja
xchg
push
jge
add
enter
pop
push
dec
sbb
xchg
mov
cmp
push
xchg
pusha
jge
push
mov
in
aad
(bad)
in
jns
pushw
jns
cli
mov
in
test
dec
icebp
jecxz
mov
fsubr
and
cld
iret
movs
xchg
dec
movs
sahf
test
gs
div
jo
gs
mov
rol
xchg
retf
cmps
test
xor
dec
cs
cmps
xor
ret
mov
cdq
loopne
in
mov
sbb
or
add
(bad)
scas
imul
xchg
fbstp
out
ror
fwait
sbb
fwait
pop
loopne
mov
jg
test
xchg
stc
mov
in
and
fs
mov
mov
lds
enter
sub
sub
dec
scas
pandn
jns
cmp
arpl
mov
out
mov
inc
and
pop
(bad)
cli
mov
jo
in
adc
sbb
fs
sbb
sti
cs
pop
xchg
jecxz
call
lds
aas
fadd
retf
test
out
mov
les
mov
stos
push
xor
sbb
jbe
out
fcomip
and
mov
mov
or
cwde
mov
daa
in
scas
xlat
sbb
scas
movs
inc
(bad)
sub
xchg
pop
adc
lahf
jae
mov
xor
push
jmp
xor
add
sub
mov
fs
and
mov
mov
dec
add
inc
aas
leave
aaa
add
mov
cmp
jle
scas
movs
jo
cdq
(bad)
test
inc
aad
daa
arpl
cli
pop
cdq
and
out
sub
aas
fist
dec
loope
jae
mov
xchg
(bad)
and
pop
dec
cmp
pop
lea
xor
fist
lods
or
pop
add
pop
mov
mov
in
mov
gs
xor
jp
(bad)
jmp
mov
add
mov
mov
mov
push
mov
jbe
lods
adc
and
lea
data16
xchg
xchg
cwde
fwait
add
jle
push
(bad)
xchg
add
push
jl
int
daa
jp
out
jnp
mov
adc
push
popa
mov
arpl
addr16
sub
rcr
(bad)
dec
shr
test
add
popa
movs
jbe
lea
sbb
mov
loop
ins
or
js
fist
cmp
in
sub
hlt
idiv
xor
stc
cli
pusha
jnp
das
adc
ins
in
xor
xchg
add
int3
sbb
xor
sbb
shl
jl
jg
pop
test
pop
ret
push
adc
inc
in
dec
mov
outs
loopne
std
or
inc
cdq
jmp
fucomi
shl
push
and
leave
jle
xchg
pop
test
pusha
clc
sub
and
leave
neg
or
movs
repz
or
sub
inc
jmp
inc
out
in
pusha
add
and
inc
ins
imul
or
call
test
inc
mov
add
push
int3
ds
add
(bad)
mov
cmp
sbb
cld
ins
sub
idiv
dec
hlt
cmp
stos
dec
pop
icebp
jns
test
rol
jecxz
(bad)
xor
adc
sbb
imul
or
(bad)
xchg
pop
aas
js
call
xor
push
mov
in
out
mov
iret
stos
xchg
aam
inc
push
xor
es
adc
mov
push
outs
(bad)
xor
cmps
std
or
(bad)
(bad)
ret
or
push
sbb
fld
icebp
lock
iret
das
out
xlat
dec
lock
pusha
imul
xchg
or
ss
push
push
push
inc
mov
jge
jns
lock
ret
mov
test
loope
cmp
les
loope
cs
loope
mov
mov
out
jle
mov
xor
popa
or
(bad)
jle
std
add
rcr
je
in
out
pop
mov
push
loope
mov
pop
movs
cmp
mov
cmps
and
scas
repnz
xchg
xbegin
xor
stos
shr
in
add
xchg
jno
outs
(bad)
xchg
cwde
or
add
xchg
sub
repnz
dec
fisttp
cmps
xchg
and
hlt
xchg
test
xor
xchg
sti
cmp
cmps
(bad)
(bad)
push
pop
add
mov
xor
sbb
jl
cmp
or
out
jns
push
dec
cmp
xlat
mov
in
cdq
int3
shl
mov
and
mov
ins
nop
es
dec
stc
mov
add
or
rcr
pushf
(bad)
dec
dec
cmp
push
lea
jae
lods
and
cmp
iret
shl
das
retf
push
ins
dec
inc
aad
pusha
test
aaa
sbb
adc
mov
push
dec
outs
jmp
mov
xchg
mov
sbb
xchg
aad
inc
adc
bound
add
pop
pop
stos
dec
add
add
inc
adc
fdivr
test
leave
popf
mov
test
adc
inc
cmps
loope
or
fs
cmp
mov
ffreep
pop
in
dec
(bad)
pop
adc
sahf
ret
jae
push
dec
or
lahf
xchg
inc
pop
nop
enter
retf
in
and
(bad)
les
(bad)
sbb
aad
jp
mov
test
xchg
retf
aaa
imul
ja
push
xchg
sar
jo
jmp
repnz
xlat
repz
mov
out
out
aas
(bad)
in
in
ins
push
mov
pop
jae
jp
adc
sbb
dec
or
fs
hlt
add
jno
inc
(bad)
xor
sti
xchg
mov
sbb
(bad)
ss
cmp
cmp
popf
test
cmp
int3
adc
or
(bad)
not
mov
adc
addr16
cwde
mov
push
dec
xor
jns
(bad)
mov
mov
das
jno
test
ret
dec
jb
repnz
lock
pop
sar
and
xchg
push
fadd
clc
pushf
mov
aaa
mov
repz
pushf
pop
cmp
ret
repz
xor
fiadd
fwait
mov
lahf
xchg
(bad)
pop
xor
push
pop
sub
mov
cmp
test
xchg
push
jb
add
icebp
add
leave
scas
mov
mov
out
and
ret
neg
mov
adc
and
add
dec
jo
(bad)
pop
mov
test
cmc
mov
ret
ret
(bad)
fnstsw
leave
rcr
mov
bound
out
or
sbb
fbstp
rol
push
lock
mov
cli
mov
xor
movs
jecxz
push
out
jmp
dec
sahf
or
adc
adc
enter
outs
jmp
lods
xchg
test
fisttp
push
xor
push
pop
sbb
mov
imul
ss
and
pop
mov
lock
mov
pushf
push
jl
dec
paddusw
fwait
scas
push
ins
rcr
fs
mov
add
dec
xchg
xchg
adc
mov
jle
neg
push
addr16
lods
xor
std
add
dec
aas
daa
sar
imul
(bad)
fistp
push
and
xor
cwde
or
cmp
jae
jmp
mov
mov
jmp
mov
mov
xor
mov
(bad)
push
add
dec
sbb
ss
retf
cli
and
pop
call
push
fimul
mov
bound
xor
aad
arpl
jne
xor
xlat
xchg
hlt
out
or
in
inc
sub
mov
sub
hlt
push
mov
jno
mov
lock
repz
ins
call
sub
mov
jb
xchg
dec
add
inc
(bad)
adc
fdiv
js
fld
aad
int3
inc
mov
add
mov
adc
iret
dec
sub
pop
shl
jb
arpl
sbb
xchg
adc
bound
cmc
mov
inc
in
cmps
cdq
loopne
inc
add
jmp
cdq
stos
pop
popa
jbe
loopne
in
dec
ret
mov
movs
dec
dec
fistp
pop
sar
es
call
or
or
test
cli
inc
jg
ret
sub
xor
leave
cmps
cmp
mov
push
shl
loopne
fwait
hlt
push
dec
inc
cmp
inc
retf
cwde
pop
or
cld
adc
jg
imul
aam
xchg
pusha
mov
and
cdq
dec
loop
dec
dec
test
add
popf
jo
mov
cdq
sar
xor
mov
mov
sbb
sbb
es
push
loop
call
ss
stc
mov
jnp
movs
cli
retf
xchg
out
imul
add
lods
fld
push
fdiv
or
test
xor
adc
shl
xchg
fidivr
add
mov
popf
int3
inc
movs
xchg
mov
xchg
mov
lods
and
fidiv
dec
jb
pop
das
mov
ret
cmp
and
xlat
out
sar
outs
repz
cdq
push
fbld
and
add
sub
inc
repnz
xor
out
jnp
imul
pop
rcr
imul
cmc
mov
and
xor
ud0
mov
add
in
cs
ds
repnz
push
lahf
or
and
call
dec
pop
shl
mov
imul
loopne
aas
mov
inc
adc
xchg
jmp
mov
ret
jg
pop
call
push
inc
sahf
mov
inc
fwait
aas
xchg
cmp
sar
enter
pusha
movs
mov
pop
fcom
cmp
mov
sub
adc
iret
fwait
retf
in
mov
adc
cli
dec
out
inc
repz
out
cdq
add
mov
adc
test
mov
stos
popf
ins
(bad)
xchg
sahf
cmp
ins
dec
and
mov
mov
nop
(bad)
adc
add
dec
inc
test
jle
push
bound
ins
ds
jne
iret
pop
lea
and
fadd
aas
mov
pop
(bad)
enter
mov
hlt
movs
sbb
lods
out
cmc
das
les
mov
or
les
je
pop
jle
and
ss
aam
jl
add
fisubr
cmps
in
das
push
fisubr
leave
(bad)
jmp
xlat
jge
mov
in
out
mov
sbb
mov
nop
ja
ud2
and
dec
xor
and
mov
add
dec
imul
enter
aas
pop
stc
stos
popa
xlat
popf
jo
jno
jo
push
jno
popf
jns
jg
pop
dec
mov
xor
xor
bsr
ss
inc
scas
and
scas
adc
lods
mov
adc
xchg
sub
gs
dec
xchg
lods
adc
int3
mov
push
xor
lock
sti
ror
adc
jo
lahf
or
fstp
inc
outs
cwde
or
or
sbb
mov
dec
mov
mov
rol
call
lock
popa
das
arpl
mov
fldenv
jge
add
mov
push
imul
sti
mov
lock
aam
and
pop
mov
cmp
sbb
cwde
lock
sbb
push
xchg
dec
lea
lock
mov
inc
mov
outs
loop
add
pop
je
test
dec
dec
cwde
add
xor
dec
sub
test
pop
imul
and
push
dec
enter
push
test
fadd
pop
js
inc
cmp
sahf
jmp
clc
sbb
fnstcw
add
ds
mov
enter
movs
ja
sub
retf
imul
icebp
or
pusha
xor
inc
inc
jp
dec
xchg
imul
jg
xchg
dec
cld
(bad)
int3
pop
xchg
pop
fxtract
loopne
xor
or
gs
pop
inc
cwde
mov
mov
jb
pop
cld
cmp
cmp
out
pop
addr16
xchg
inc
and
data16
jmp
fld
popa
daa
call
fwait
inc
int
or
popf
push
scas
out
popf
adc
push
adc
js
rol
xchg
mov
pushf
add
pop
xchg
mov
mov
mov
dec
call
pop
push
add
xor
mov
jmp
sbb
push
stc
retf
adc
xor
dec
data16
or
mov
mov
and
in
std
out
(bad)
mov
in
mov
loop
sub
mov
push
push
mov
mov
ret
test
mov
cmp
and
cmp
cmp
jmp
leave
cdq
mov
stc
xchg
xchg
rcl
or
sub
adc
mul
ror
stc
shr
sbb
sbb
ror
pop
pop
xlat
imul
lahf
ror
aaa
cmp
stc
push
pusha
pop
jg
aas
jo
cmp
sahf
mov
push
cmps
jecxz
ret
out
fcom
test
jmp
pop
jae
add
loopne
and
ins
and
xchg
scas
outs
mov
in
(bad)
test
pop
sub
mov
mov
frstpm(287
xor
mov
jnp
push
add
ds
pop
lahf
(bad)
(bad)
ins
or
and
cli
scas
inc
gs
imul
fdivr
mov
ss
pop
std
jo
jmp
push
and
push
pop
in
(bad)
jmp
cmp
imul
pop
mov
xor
jo
and
xchg
pop
pop
mov
jb
jmp
sub
nop
stc
mov
xchg
jbe
fisttp
dec
shl
sbb
jbe
sahf
adc
in
jae
jmp
cmps
test
mov
xchg
and
shl
jle
mov
sub
and
push
sbb
js
shr
mov
dec
ja
cwde
rcl
cmp
mov
or
inc
ins
inc
js
cmp
cmp
add
dec
cmp
(bad)
cmp
jmp
dec
movs
pop
rcr
adc
in
gs
and
dec
fstp
xor
ja
adc
dec
rcl
sbb
sti
push
or
test
dec
jns
lods
(bad)
outs
xor
in
imul
pop
xlat
iret
jnp
inc
mov
nop
aam
pop
adc
xchg
adc
pop
sbb
out
sub
inc
fnsave
shl
inc
pop
int
cmps
icebp
pusha
(bad)
mov
(bad)
or
and
xchg
(bad)
mov
xchg
mov
cmp
rcl
jne
test
inc
or
jecxz
loope
jns
ds
clc
retf
imul
dec
ins
repnz
mov
push
jnp
scas
jmp
repnz
adc
jno
sbb
jmp
ror
in
xchg
imul
push
jl
push
or
add
and
push
(bad)
sar
pop
fwait
cmp
(bad)
mov
mov
mov
sub
pop
hlt
imul
call
loop
aad
jmp
fdivr
(bad)
push
push
adc
enter
test
xor
and
aad
add
shl
xchg
out
nop
(bad)
xchg
inc
cli
ins
mov
sbb
sbb
arpl
mov
fidiv
imul
aas
fcomp
mov
in
sub
stos
adc
and
nop
jmp
(bad)
ss
fisttp
adc
aad
xchg
xor
cld
leave
retf
xor
imul
jo
jbe
add
loopne
test
je
mov
fcmove
cdq
ret
inc
or
or
push
inc
push
nop
test
pop
jg
into
push
add
and
sub
imul
cmp
push
retf
xor
call
and
xchg
pop
mov
mov
push
call
ins
xor
(bad)
data16
mov
dec
sti
mov
inc
sahf
cmp
jle
out
dec
(bad)
and
(bad)
mov
ret
and
fsubr
scas
cmps
dec
mov
nop
mov
leave
popa
dec
div
aad
and
dec
loope
fucomi
mov
mov
jbe
mov
xchg
jae
dec
xchg
aad
dec
fcom
test
inc
cdq
out
out
out
cmps
lea
add
dec
sbb
(bad)
daa
inc
cld
call
sti
(bad)
and
dec
push
push
pop
pusha
dec
push
call
(bad)
mov
cmp
sub
ret
into
pop
sbb
jnp
xchg
push
xchg
out
test
or
or
mov
in
loop
jo
jp
mov
mov
mov
or
std
repnz
(bad)
ja
xchg
jge
call
add
test
xchg
js
es
hlt
in
lea
push
out
clc
inc
pop
adc
sbb
popa
loop
rol
push
mov
int
and
fmul
pop
cmp
je
sub
jns
loop
mov
imul
mov
rol
sub
dec
push
sub
or
(bad)
pushf
mov
mov
xchg
add
test
(bad)
push
cmps
xchg
push
(bad)
ins
mov
or
std
xchg
hlt
adc
cmp
dec
bound
mov
into
mov
or
dec
push
push
adc
xchg
ja
mov
cwde
dec
adc
add
sbb
pushf
(bad)
retf
add
pop
jp
mov
std
(bad)
push
es
inc
hlt
cmp
vmovdqa
lea
cmc
sbb
and
xor
lea
jl
lods
and
test
and
inc
mov
aam
jle
jo
in
arpl
or
pop
adc
push
fwait
inc
rcr
pop
(bad)
mov
inc
dec
(bad)
jp
jne
pop
push
pop
jge
cmps
push
jbe
and
sub
cld
lds
iret
mul
push
mov
ficom
jge
push
outs
hlt
ror
repnz
sbb
inc
add
cmp
xchg
ret
xor
sbb
xor
or
out
iret
(bad)
mov
ss
(bad)
jns
arpl
call
test
repnz
cdq
gs
mov
inc
push
lock
pop
call
push
xor
(bad)
xlat
pop
cmp
icebp
inc
sbb
push
fild
enter
mov
mov
cmp
out
loopne
jmp
jmp
jmp
and
loop
adc
inc
out
icebp
adc
adc
adc
cmps
sti
(bad)
push
fstp
jmp
pop
mov
(bad)
xor
push
push
daa
xchg
add
sub
mov
jns
sbb
sub
js
js
mov
sbb
cmp
in
jp
loopne
out
sbb
mov
dec
xlat
fstp
sahf
xor
mov
cmps
ret
movs
or
push
cld
out
xchg
inc
sub
mov
jp
and
sbb
retf
xchg
inc
in
dec
mov
(bad)
or
popa
dec
stos
mov
inc
test
pusha
add
sub
push
mov
xchg
ins
fs
movs
or
ins
ins
rcl
jle
in
lock
jmp
push
test
(bad)
js
(bad)
cli
(bad)
test
mov
pop
bound
cwde
mov
lds
adc
adc
cmp
fdiv
adc
pop
in
mov
pop
sub
adc
movs
xchg
iret
mov
hlt
push
loop
ins
(bad)
jns
sub
fnsave
sahf
xor
or
push
fisubr
dec
jmp
jbe
popa
xor
add
dec
idiv
mov
mov
iret
inc
daa
ret
xor
and
out
fisub
ja
cmp
adc
in
cmps
aad
push
arpl
pop
push
xchg
mov
call
cmp
sub
icebp
xchg
jmp
inc
xchg
xor
inc
xchg
xlat
arpl
jl
push
in
loop
xor
(bad)
imul
pop
iret
addr16
lods
push
(bad)
sub
xlat
(bad)
adc
or
es
enter
mov
cmp
movs
xor
adc
fild
mov
dec
into
sbb
xor
(bad)
xor
sahf
xchg
popa
ror
xchg
mov
and
pushf
imul
jns
jp
pop
cld
mov
enter
ds
pop
leave
repnz
mov
ss
ja
shr
aad
(bad)
sahf
push
cwde
inc
arpl
fiadd
sbb
and
sbb
sub
int3
mov
sub
adc
xchg
pushf
movs
sub
shr
adc
call
loop
sub
sub
inc
std
fidiv
adc
cmp
outs
aad
pushf
jg
(bad)
addps
push
sti
xchg
xor
fwait
xor
add
outs
xor
sub
sbb
jo
stc
adc
inc
cmp
out
cs
push
dec
setb
pop
mov
adc
xchg
push
dec
dec
ficom
loopne
js
test
icebp
adc
pop
pop
dec
xor
xchg
xchg
in
jbe
stc
pop
scas
enter
jmp
mov
dec
add
push
xor
out
mov
movs
sbb
imul
or
test
mov
in
or
xor
div
cs
push
pop
or
cmp
dec
movs
push
js
in
pop
push
xor
cwde
adc
arpl
scas
out
(bad)
adc
push
cmps
in
(bad)
test
push
xchg
mov
fsubr
sbb
ret
out
mov
cmps
ret
pushf
shl
pop
cwde
jg
addr16
rcl
sub
sub
sbb
not
pop
mov
dec
addr16
pop
lods
jb
call
mov
jge
dec
jle
sbb
inc
leave
imul
loopne
or
fisttp
adc
ret
sbb
clc
cmp
mov
jg
aad
xor
loope
mov
push
outs
clc
idiv
add
and
add
ffreep
rcr
inc
int
ins
ret
or
in
fild
retf
push
scas
les
or
ins
iret
and
adc
xchg
inc
cmp
and
pop
push
adc
test
cmp
sbb
mov
mov
inc
test
pop
mov
aam
iret
xchg
icebp
dec
pushf
aam
fmul
arpl
retf
shr
outs
idiv
xor
dec
loope
es
or
das
or
(bad)
cli
sub
inc
es
pop
imul
sbb
leave
xor
ja
mov
fadd
retf
movs
ror
inc
cmp
mov
dec
ror
jecxz
popa
hlt
mov
push
mov
addr16
or
std
fwait
mov
gs
cmps
movs
popa
les
aas
out
sub
sbb
and
sahf
stos
popa
imul
add
int3
fdivr
push
cmp
jno
mov
mov
icebp
scas
fstp
std
dec
fldcw
ficom
int
imul
lds
cdq
or
jp
mov
inc
icebp
rcr
adc
adc
jl
adc
and
pop
mov
je
out
cmc
das
sub
pop
bound
aaa
pushf
dec
push
mov
sbb
xchg
das
sbb
imul
jmp
mov
jl
push
inc
bound
pop
outs
and
in
sbb
mov
jg
inc
or
rcr
data16
ins
mov
rol
(bad)
jns
mov
mov
jbe
or
pop
xor
es
rcl
inc
movs
add
mov
test
xor
dec
ds
mov
xlat
stc
jb
xchg
jmp
in
(bad)
xor
inc
mov
imul
aam
aaa
ins
push
(bad)
mul
push
cmp
xor
and
cwde
xchg
ds
mov
sub
aam
repnz
clc
add
dec
imul
cli
pop
data16
sbb
adc
mov
cmps
or
test
(bad)
jl
ins
jns
cmc
xor
and
(bad)
push
in
jae
pop
pushf
add
fsub
jo
or
stc
xchg
mov
mov
xor
dec
push
xlat
(bad)
push
(bad)
sub
mov
cmc
addr16
xchg
cdq
mov
xlat
aaa
icebp
loope
pop
mov
test
add
jmp
test
fdivr
test
xchg
popf
hlt
or
sbb
jmp
repz
push
dec
jb
add
test
push
shl
push
aad
sub
xchg
cmc
pusha
xor
pop
and
pop
xlat
sub
in
push
mov
pop
call
sbb
pop
fsubr
xchg
dec
cmp
loop
clc
mov
cmp
pop
fs
(bad)
inc
xchg
push
adc
add
pop
add
sbb
sbb
sbb
cmps
sbb
mov
mov
daa
pop
pop
mov
outs
aaa
pop
sbb
js
fs
mov
in
stos
jae
and
loope
cmp
mov
and
fld
ja
clc
shl
jl
ret
dec
push
cmp
mov
xor
xchg
cmp
stos
sub
cld
fwait
test
js
fwait
xchg
and
ds
or
fiadd
enter
daa
sbb
call
vhsubpd
aaa
mov
movs
scas
outs
ret
test
popf
stos
fdivr
(bad)
(bad)
dec
hlt
adc
stos
mov
dec
xor
dec
ja
cld
inc
outs
inc
pop
xlat
add
mov
xchg
jp
ss
retf
mov
dec
aas
mov
mov
repnz
(bad)
mov
and
shl
dec
ins
push
sub
ror
sub
lds
test
pop
xor
inc
sub
into
pop
dec
nop
and
mov
mov
adc
(bad)
or
sbb
mov
test
enter
nop
mov
in
mov
jecxz
std
loop
stc
inc
addr16
jb
mov
xor
int
arpl
sbb
scas
dec
pop
xor
mov
sahf
push
stos
mov
add
jmp
rcl
cmp
mov
add
inc
test
imul
test
adc
mov
xchg
test
les
sub
aam
and
out
repz
jge
inc
iret
mov
js
adc
inc
cmp
test
(bad)
add
scas
push
les
in
or
in
inc
or
gs
dec
sahf
rol
cwde
rcr
leave
pop
(bad)
xchg
sbb
icebp
jne
adc
xor
xor
cmp
(bad)
sahf
xor
bound
push
and
fwait
test
std
jns
mov
cli
mov
js
or
mov
movs
mov
fs
mov
hlt
mov
push
sti
jge
push
cs
xchg
or
push
adc
sbb
dec
inc
push
cmp
cdq
fld
mov
pop
cli
test
xor
cwde
xchg
mov
mov
lods
out
cmp
and
push
into
inc
in
mov
pushw
sub
xor
jmp
add
retf
dec
test
pushf
add
dec
add
loop
enter
ficom
cmps
lods
lea
sti
xor
aam
movs
and
daa
xchg
or
clc
and
sbb
sti
ret
push
fnstenv
push
push
pushf
jmp
dec
cli
sahf
into
pop
cmp
add
or
sub
xchg
sbb
dec
inc
les
pop
jbe
imul
pop
ds
in
cwde
push
inc
mov
(bad)
dec
mov
pop
sti
pop
and
cwde
xlat
adc
in
lahf
add
pop
mov
mov
and
and
ret
in
out
jmp
neg
movs
fisub
mov
repnz
in
repnz
add
mov
mov
lea
cmc
mov
cmp
packuswb
and
ficomp
add
fstp
xchg
mov
pop
dec
jmp
shl
idiv
jecxz
or
cdq
sbb
sub
jge
test
push
dec
test
ret
xor
xchg
mov
sbb
imul
jle
xor
and
xchg
and
inc
in
jnp
test
mov
jecxz
test
mov
les
lods
mov
(bad)
enter
and
lea
cmp
cmp
xor
addr16
std
scas
jmp
jle
push
mov
mov
xor
mov
lock
repnz
test
int
push
bound
cwde
fisttp
test
xlat
int3
mov
xchg
xchg
jae
sub
jg
jnp
loopne
test
inc
mov
pop
imul
lods
and
dec
retf
mov
sub
adc
lods
lods
retf
and
mov
mov
jl
mov
arpl
adc
pop
jae
jbe
in
sub
in
(bad)
mov
enter
out
dec
test
and
mov
or
loope
push
jbe
jb
retf
gs
fisub
sti
int3
(bad)
clc
or
xor
mov
test
jno
outs
(bad)
push
mov
retf
push
sub
add
mov
cmp
sub
lock
sbb
mov
mov
jo
(bad)
iret
mov
popf
dec
xor
mov
push
stos
xor
cmp
dec
(bad)
cmp
rol
test
into
jg
jmp
fwait
adc
and
loope
(bad)
lock
rol
cwde
xchg
dec
jns
xor
mov
pop
xlat
sub
jl
mov
jns
fldenv
mov
repnz
fs
jg
mov
mov
pop
outs
ins
ss
in
jo
xchg
inc
and
xchg
repz
(bad)
fisubr
loop
adc
aas
hlt
dec
inc
lock
jmp
ins
ficom
sub
(bad)
scas
std
mov
popf
shr
mov
and
jl
add
fnstcw
or
push
ss
or
xor
bound
inc
jns
retf
pop
cmp
dec
lahf
mov
out
arpl
pop
bound
jns
mov
lods
test
cdq
test
jne
test
scas
out
inc
pushf
dec
or
ja
inc
push
test
jbe
(bad)
sbb
adc
in
push
hlt
aam
inc
bndstx
sbb
pop
sahf
ss
or
pop
leave
movs
rcr
jp
ja
ror
xor
or
aas
shl
pop
bndldx
lods
sbb
popa
cdq
lahf
test
sahf
lods
int
inc
data16
dec
pop
sbb
and
inc
nop
mov
inc
xor
outs
out
cdq
inc
loope
stos
call
push
xchg
xor
mov
movs
xchg
push
fldenv
in
push
jg
and
xchg
mov
mov
xor
mov
or
pop
inc
fistp
shl
inc
lods
fdivp
mul
push
call
dec
out
daa
movs
mov
inc
pop
cmps
fs
push
pop
mov
inc
scas
or
mov
xchg
push
lea
pusha
das
add
nop
sub
push
rcr
imul
and
mov
dec
xchg
imul
lahf
add
ds
mov
mov
test
mov
push
xor
std
mov
pop
(bad)
pushf
add
call
dec
adc
inc
cli
sahf
out
pop
cdq
fdivr
lock
rcr
rcl
enter
mov
in
add
cmps
test
pop
pop
repz
int3
mov
iret
jne
movs
call
fisttp
iret
or
xor
(bad)
pop
xchg
lock
sbb
call
sbb
xor
addr16
lds
es
outs
addr16
aad
out
push
sub
add
aam
inc
xchg
jle
dec
mov
mov
sbb
or
mov
and
add
fdiv
xchg
cli
data16
adc
jp
nop
add
adc
mov
mov
fs
call
cmc
push
ins
jne
lahf
cmp
mov
ja
jecxz
icebp
test
and
push
aad
add
retf
loop
fs
pusha
mov
and
(bad)
cmp
movs
and
stos
arpl
mov
dec
les
cmps
(bad)
mov
mov
push
mov
or
cld
pop
and
ins
cmp
mov
imul
test
js
stc
sub
cmp
mov
mov
add
and
pop
push
push
push
cmps
cmp
cmps
cmp
push
inc
dec
(bad)
pop
pop
or
pusha
xchg
push
stc
mov
cmp
adc
add
lods
jb
neg
push
not
mov
(bad)
cmp
fwait
div
add
pop
sbb
xor
shl
lods
and
cmps
jmp
adc
movs
dec
jmp
stc
sub
retf
xchg
xchg
fcmovu
xchg
dec
das
xchg
mov
pop
xchg
ret
out
mov
iret
fst
or
push
cmps
leave
mov
ds
and
mov
mov
iret
inc
sbb
fs
sbb
ret
arpl
sub
mov
lds
gs
sub
test
jle
mov
repnz
sti
out
fidivr
fadd
es
or
div
inc
int3
push
sbb
sub
mov
outs
mov
push
inc
nop
ins
push
loope
stos
inc
aas
lock
(bad)
push
clc
push
mov
lock
mov
adc
sahf
inc
sahf
(bad)
mov
and
add
test
push
add
pop
js
ja
(bad)
mov
jl
aas
cmp
popa
or
and
out
mov
(bad)
pop
je
dec
or
or
xchg
adc
loop
inc
hlt
mov
stos
loopne
addr16
push
lea
adc
jmp
xchg
fcom
mov
jb
cmp
xlat
shl
cmp
mov
ret
rcl
bound
sahf
pushf
lock
lock
mov
and
jg
adc
mov
retf
mov
or
jae
test
sbb
cld
stc
sub
std
dec
fsubr
out
cdq
mov
jmp
iret
fdiv
data16
or
stos
test
mov
xor
bound
push
loop
in
cs
fwait
mov
dec
or
rol
mov
and
loop
add
(bad)
mov
mov
out
cmp
mov
mov
xchg
jnp
jg
or
sub
int3
sti
cmps
xor
aad
adc
and
and
cmc
ret
cmc
or
jle
stc
push
inc
jl
in
jns
cmps
in
pop
jmp
lods
xchg
loope
mov
cmp
cmp
adc
xor
and
dec
ror
nop
or
into
mov
dec
fild
outs
dec
or
mov
fisubr
imul
jmp
cmps
and
pop
push
mov
cmp
jmp
jl
mov
sbb
psraw
add
aaa
mov
xor
mov
xchg
push
xor
xchg
test
pop
push
pusha
pop
push
ss
mov
and
or
push
gs
neg
mov
jbe
mov
jg
jl
mov
cmp
clc
mov
xor
shl
popf
bound
pop
dec
div
in
popaw
push
enter
dec
push
sbb
add
jbe
in
mov
clc
sub
call
push
mov
xor
imul
call
push
pushf
pushf
pop
enter
jge
jno
inc
ss
mov
cwde
test
mov
jge
sbb
mov
sbb
jg
aas
mov
pusha
or
shr
ret
add
or
(bad)
inc
adc
push
cmps
and
pop
iret
mov
imul
cmps
(bad)
jmp
pop
add
sub
mov
dec
aam
addr16
lods
test
or
dec
cmps
dec
stos
mov
lods
sub
inc
gs
call
inc
inc
nop
push
dec
cdq
push
sbb
sar
cmp
sub
push
cdq
and
out
mov
xchg
addr16
adc
jbe
mov
aad
sbb
adc
dec
push
and
shr
stc
imul
cld
push
pop
inc
or
lods
sbb
call
dec
adc
push
dec
mov
pop
call
xor
pop
cld
and
shl
cmc
jge
and
test
ret
jae
jo
out
imul
fsub
mov
sbb
out
sahf
jge
dec
sbb
dec
push
mov
push
fstp
ins
push
mov
xor
cmp
dec
adc
mov
jp
inc
into
push
imul
sub
jge
fbld
fdivr
mov
pop
pop
ins
retf
push
iret
dec
gs
add
xchg
adc
fcmovu
push
sbb
xchg
call
jns
movs
in
in
in
xchg
jg
pop
iret
out
jl
push
xor
or
mov
fbstp
pop
jns
jmp
jl
xchg
dec
test
test
mov
outs
fbld
pop
sub
daa
xor
ja
loope
scas
adc
fst
xchg
jp
bnd
(bad)
push
sub
fdivr
pop
xchg
push
lahf
and
dec
retf
adc
sub
lods
pop
add
and
out
stos
push
sahf
mov
cmp
bound
mov
sahf
inc
lods
dec
xor
push
fild
cmp
jb
je
pop
push
add
outs
pop
jp
push
dec
imul
pop
adc
inc
jnp
sahf
sbb
movs
ss
in
bound
adc
sbb
fidiv
push
xchg
enter
mov
sahf
jmp
mov
xchg
mov
jo
mov
ja
sbb
rol
xchg
ins
lods
std
sbb
cmp
lea
or
fmul
cmp
(bad)
pushf
push
aas
xchg
or
fisubr
das
xchg
out
loope
fld
jbe
mov
and
and
pop
cmps
loopne
inc
pop
(bad)
adc
mov
out
shl
mov
leave
popf
pop
cmp
outs
ins
scas
adc
jno
shr
and
(bad)
adc
pop
mov
(bad)
movs
je
dec
push
adc
sub
dec
mov
push
sub
mov
pop
push
les
ins
ret
lock
hlt
pop
popf
mov
sub
push
inc
(bad)
xchg
inc
lea
push
sub
xchg
call
clc
fild
push
test
sti
sbb
aam
mov
push
dec
push
aam
jnp
mov
retf
jo
jg
inc
sub
xchg
sub
mov
push
into
ins
adc
outs
cmp
sub
aam
push
sbb
pop
dec
retf
jo
and
test
adc
loopne
mov
(bad)
idiv
push
call
loope
mov
jl
rol
das
arpl
cmp
stos
or
sbb
mov
or
ret
je
and
outs
enter
mov
xchg
inc
fwait
jge
jne
cmp
mov
xor
out
push
push
pusha
lock
pop
jno
call
pop
sar
push
inc
adc
jmp
test
xor
dec
or
mov
xchg
out
test
mov
das
jnp
sub
push
hlt
es
jge
clc
lahf
xor
scas
aad
in
or
inc
iret
call
mov
aam
add
retf
std
or
or
nop
xor
loope
sub
(bad)
out
mov
outs
sbb
inc
push
ins
sbb
clc
jbe
loopne
cmp
mov
pop
inc
int3
out
mov
cmp
sub
push
sbb
add
xlat
test
mov
ret
cwde
ins
jmp
jmp
cli
in
scas
cmp
dec
popf
pop
out
push
mov
das
jo
push
xor
lock
mov
les
mov
adc
clc
(bad)
clc
(bad)
into
(bad)
ins
add
dec
cmp
ror
add
sar
imul
nop
aam
outs
cmp
call
mov
(bad)
and
in
push
add
hlt
out
ss
cmp
push
cld
clc
jb
xchg
rcr
xor
aas
dec
adc
(bad)
std
into
dec
cs
rol
jmp
fucomip
inc
mov
shl
sub
outs
shr
lods
mov
popf
lock
cmp
aam
mov
cmp
ret
dec
inc
adc
cmp
add
inc
sub
ja
mov
bound
push
loopne
cs
loopne
sbb
out
sbb
addr16
mov
test
js
repnz
cmps
sub
imul
sub
jbe
int3
or
movs
sub
pop
(bad)
bound
out
(bad)
xchg
aad
ds
push
js
sub
push
pop
lea
or
and
dec
xchg
add
jecxz
mov
popf
(bad)
mov
aaa
xor
into
jp
loope
cdq
adc
push
cmc
inc
ficomp
or
cmp
scas
test
xor
arpl
sub
pop
ret
aam
jmp
jno
enter
push
scas
loopne
add
sbb
and
cmp
mov
das
rcl
xor
xchg
mov
pop
or
sub
adc
push
or
ins
test
mov
cmp
lea
sub
ins
(bad)
mov
sub
xchg
dec
out
loop
test
int3
imul
inc
xor
mov
in
aad
(bad)
jnp
fldenv
test
xor
pop
mov
stos
js
xor
mov
std
aad
ret
xor
ret
inc
hlt
(bad)
loope
das
ins
lods
xchg
add
dec
sbb
cmc
cmp
cmp
cmps
dec
jmp
cld
repnz
jo
in
or
stos
das
pushf
or
inc
sub
mov
mov
in
loopne
mov
or
shl
cli
adc
mov
cmp
std
add
inc
test
fdivr
or
imul
lods
mov
sbb
loop
fsubr
repz
lods
mov
sti
enter
or
fwait
xor
mov
sbb
(bad)
cmp
inc
add
out
mov
jge
xchg
into
fidiv
dec
dec
div
mov
je
loopne
bound
popf
and
mov
jg
mov
retf
js
mov
sub
jp
push
int
xchg
cmp
addr16
mov
imul
mov
push
sar
dec
lds
nop
test
sub
cmp
xchg
fwait
sub
lahf
pop
pop
(bad)
jmp
push
add
mov
mov
in
ret
push
jmp
push
sub
pop
into
in
int3
ret
sbb
push
xchg
adc
sbb
sbb
fcom
pop
inc
mov
dec
xchg
fisttp
in
inc
sub
jp
sub
aas
push
push
pop
pop
(bad)
call
mov
ficomp
adc
in
inc
sahf
or
vpsllw
gs
mov
rol
ffreep
mov
outs
test
and
dec
aas
cmps
pop
aad
bound
sbb
inc
aaa
xchg
out
daa
and
xor
mov
mov
aas
jne
lods
inc
repnz
not
enter
mov
jne
in
or
xor
jp
mov
ret
jnp
mov
xor
test
cmp
push
or
push
(bad)
cmc
bound
(bad)
lods
imul
clc
sbb
cmovns
push
dec
pop
jmp
pop
test
adc
pop
fnstenv
leave
jno
icebp
test
sub
pop
in
push
aaa
mov
jmp
cli
pop
pop
sbb
bound
mov
inc
cmp
sbb
inc
add
mov
sub
add
movs
scas
inc
dec
outs
cdq
mov
push
pop
cld
jl
shl
xchg
inc
xlat
jg
call
pop
push
lock
jle
cmp
sbb
mov
lahf
cdq
jle
std
cmp
retf
jnp
out
in
in
pushf
das
push
out
fincstp
int
imul
not
lods
xchg
cwde
xor
inc
cmp
mov
arpl
mov
jl
mov
(bad)
ret
adc
cwde
call
fs
sahf
sub
add
push
inc
jmp
mov
xlat
or
sbb
stos
xor
mov
fucom
sti
xchg
xchg
dec
ds
ja
sbb
or
out
imul
xchg
push
fs
fisttp
sahf
jle
mov
in
jnp
sub
aad
pop
stos
dec
aad
repnz
push
inc
outs
fist
mov
xchg
add
rcl
xor
or
push
in
scas
or
into
xchg
fisubr
pop
sub
stos
mov
mov
adc
mov
jno
jb
push
jno
icebp
dec
iret
add
mov
mov
scas
cmp
in
stos
js
mov
xchg
in
push
cmp
inc
shl
mov
repnz
out
sbb
jmp
ins
(bad)
mov
das
xor
sub
and
retf
jne
rcr
push
gs
ja
fidivr
pop
mov
add
push
test
sar
into
mov
xor
cmp
iret
sbb
movzx
push
sbb
fidivr
or
sahf
push
div
and
std
mov
xor
add
push
xchg
lds
inc
and
or
ja
loope
cwde
xchg
ficom
outs
rcr
pushf
dec
popa
movs
movs
mov
ffreep
cwde
cmp
cmp
(bad)
pop
aam
xchg
aas
or
inc
jmp
shr
xor
scas
adc
mov
dec
popf
mov
adc
repnz
mov
nop
cmp
and
adc
sar
dec
mov
mov
push
add
push
fcomp
push
ins
cwde
mov
mov
fwait
pop
dec
pushf
fsub
sbb
push
in
mov
pop
aad
leave
cwde
or
xlat
sub
ficom
out
xchg
add
mov
cmp
retf
inc
ins
mov
ins
pop
lea
xchg
jbe
loop
ss
out
test
dec
ror
(bad)
jns
mov
(bad)
test
fst
cmc
push
sbb
in
or
and
xlat
add
nop
ret
lods
mov
sub
mov
xor
(bad)
aaa
and
xor
cld
loopne
and
mov
jo
loopne
repnz
pop
inc
or
test
leave
mov
out
cmp
xchg
mov
fisttp
retf
dec
and
int3
xor
push
repnz
data16
mov
faddp
(bad)
mov
lods
mov
(bad)
cwde
add
mov
xchg
add
adc
shl
test
add
cmc
shr
pusha
das
nop
call
out
xchg
cmps
mov
mov
dec
movs
ins
or
popf
or
sub
mov
nop
outs
or
fsub
loopne
icebp
cld
pop
mov
fistp
inc
call
cmp
(bad)
pop
push
mov
in
lods
push
push
jae
cs
sub
jbe
sub
push
nop
nop
pslld
repz
loope
push
pushf
cmp
cmp
hlt
mov
dec
or
sbb
mov
xor
ss
scas
pop
call
loope
cmp
mov
neg
pop
mov
or
or
xchg
fst
adc
int
and
xor
push
mov
in
push
test
xchg
aam
outs
and
sbb
cdq
cmp
int3
idiv
adc
(bad)
loope
jne
pop
pop
and
xor
and
jae
sti
imul
cmp
test
sub
xor
mov
xchg
inc
jmp
loopne
stc
push
and
sahf
sub
bound
mov
(bad)
retf
test
jnp
nop
inc
jle
jb
jns
ror
add
out
mov
jbe
(bad)
dec
add
sbb
iret
xor
clc
push
sti
and
(bad)
mov
mov
or
sahf
push
cld
rcl
jp
sbb
icebp
dec
pop
add
cmps
std
ds
rol
mov
ret
mov
mov
cld
data16
push
or
cli
pop
xor
xor
xchg
and
push
inc
aam
add
fild
dec
pop
(bad)
or
hlt
xchg
and
cs
pop
sub
mov
dec
push
out
jo
adc
repnz
repz
push
out
(bad)
icebp
retf
mov
and
pop
inc
loop
(bad)
icebp
lds
clc
add
nop
sbb
inc
(bad)
jnp
mov
cdq
pop
sbb
(bad)
gs
or
out
sub
jmp
icebp
pusha
mov
dec
xchg
xor
inc
fdiv
adc
repz
cwde
adc
jb
jmp
aas
ins
jb
jle
xchg
lahf
aaa
and
fadd
or
rcl
mov
push
push
shl
jp
aas
xor
xchg
mov
mov
cmps
icebp
jmp
mov
bound
popa
test
mov
test
xchg
xlat
jb
movs
scas
ror
rol
mov
pushf
or
mov
push
cmc
jecxz
retf
push
jge
jge
or
repnz
mov
dec
and
out
(bad)
cmc
xchg
mov
jb
pop
sti
add
ror
add
or
mov
aaa
jg
int
dec
hlt
fadd
jne
mov
push
pushf
loope
sbb
in
xchg
mov
inc
sub
(bad)
popf
rcr
aas
pop
ja
cmps
and
aam
dec
inc
fcom
mov
inc
mov
fdiv
push
bound
fnstcw
dec
sbb
call
xchg
shr
xor
sub
popf
sub
fs
into
jg
pop
leave
dec
xchg
(bad)
clc
fmul
jae
push
ins
into
or
push
stc
push
daa
adc
cli
test
mov
lahf
sbb
and
jo
lds
pushf
ret
movs
cwde
je
sbb
inc
sbb
and
pop
lahf
out
dec
jae
push
mov
add
push
fisub
xchg
imul
sbb
push
xchg
fs
pop
sbb
jmp
jmp
or
daa
es
cmps
fist
cmp
dec
push
hlt
or
push
mov
ins
in
mov
jl
in
mov
call
icebp
es
cs
in
jecxz
repnz
mov
mov
sub
in
push
mov
add
mov
cmc
inc
sub
int3
mov
aad
xchg
cmp
(bad)
dec
sub
ja
(bad)
xchg
adc
or
xor
daa
sahf
(bad)
sbb
jmp
xchg
add
pop
push
test
cdq
repnz
dec
loop
mov
dec
cwde
in
scas
shr
mov
sbb
mov
push
pop
mov
inc
dec
cmp
and
fst
mov
mov
bound
out
push
dec
mov
xchg
(bad)
xor
xchg
xor
popa
into
out
pop
stos
pop
or
fisub
ins
out
inc
aad
sti
pop
jnp
or
sub
std
repnz
movs
pop
(bad)
stc
scas
fwait
test
push
push
imul
daa
dec
mov
xchg
sbb
cmps
push
(bad)
pusha
inc
jne
add
frstor
clc
jle
ficom
in
addr16
mov
das
sub
mov
sub
xor
mov
or
xor
shl
sub
mov
aas
(bad)
mov
push
movs
shl
sahf
lds
mov
cdq
rol
jge
pop
push
stos
mov
ds
fnstcw
pop
test
dec
out
push
(bad)
jecxz
cmp
movs
in
mov
and
out
inc
loope
and
pop
(bad)
icebp
fadd
mov
dec
int3
ss
pusha
mov
aaa
push
jp
cmps
scas
inc
call
xchg
xchg
movs
xchg
lock
imul
xor
cmp
xchg
iret
mov
pop
addr16
and
jne
pop
cmc
push
out
mov
xchg
dec
js
push
ds
push
inc
pop
and
div
add
fnstcw
sub
mov
rol
popw
(bad)
dec
cld
jg
mov
(bad)
bound
cmc
or
xlat
repz
push
jo
in
outs
pop
jo
dec
fwait
push
inc
pop
(bad)
mov
je
xchg
pusha
retf
mov
xor
jnp
jmp
jae
sahf
test
or
cmp
jns
xor
je
repz
movs
mov
xor
add
push
pop
mul
movs
rcr
clc
jb
mov
xor
xchg
aam
in
mov
jge
std
sbb
aas
nop
dec
mov
dec
fsub
repnz
xor
ds
xchg
iret
movs
ins
icebp
fwait
mov
xchg
mov
cmps
xor
aad
(bad)
hlt
movs
imul
cmp
pusha
rcr
(bad)
jmp
js
xor
and
inc
push
jmp
lahf
mov
sbb
div
out
xchg
ficomp
inc
loope
cmps
cmp
cdq
repz
jle
and
dec
push
addr16
cmp
or
icebp
das
cs
and
pushf
sub
in
ror
es
xor
mov
dec
inc
movs
mov
or
xchg
pop
xor
loop
sub
xchg
bound
fyl2xp1
fstp
not
sbb
push
ret
sbb
mov
cli
mov
jo
xchg
idiv
pop
pop
cmp
test
push
mov
icebp
fcomp
addr16
pushf
mov
adc
sbb
mov
jge
xor
inc
xchg
sar
out
push
std
imul
jns
pop
loopne
mov
retf
test
fsub
sub
pop
pop
les
cmp
mov
pop
push
dec
es
fild
cmp
sbb
icebp
test
(bad)
xor
mov
cmc
clc
sub
movs
xchg
imul
mov
scas
add
or
pop
ret
mov
add
inc
inc
popf
xor
jmp
inc
mov
and
(bad)
push
in
ins
jno
fist
sbb
sbb
sbb
xchg
bound
xchg
push
lods
and
or
push
push
xchg
jl
mov
and
sbb
jns
mov
dec
dec
daa
push
dec
and
or
in
fidivr
xchg
mov
add
pop
pop
in
in
xchg
sbb
fisttp
mov
dec
(bad)
xlat
add
or
pop
std
and
test
pop
xchg
dec
cmps
aam
pop
xor
sbb
inc
jo
test
inc
pop
jg
scas
int3
push
pop
mov
inc
aad
gs
retf
xchg
push
clc
test
xor
iret
xchg
xchg
ja
ret
and
mov
dec
dec
sti
adc
add
sub
mov
fwait
ins
jne
pop
mov
pop
les
pop
sub
out
add
rcr
test
sbb
fisttp
mov
adc
mov
arpl
cmp
fsubr
or
and
aaa
fisubr
ds
inc
pop
xchg
sub
and
rcl
out
pop
ficomp
xchg
push
or
push
aas
sub
xlat
inc
add
or
xchg
push
int
pop
aad
(bad)
jo
xchg
pop
and
jns
loope
stc
or
sbb
retf
inc
jle
pop
sti
cmp
mov
jg
inc
push
pop
mov
push
dec
and
or
ds
arpl
add
ja
test
(bad)
fadd
cmps
xchg
cmps
jo
mov
mov
mov
or
sub
or
sbb
sub
popa
inc
sub
xor
lock
inc
xchg
jnp
cdq
ficom
sar
out
loop
mov
inc
sbb
sub
repnz
dec
mov
lea
fcomp
aaa
(bad)
mov
mov
mov
(bad)
cmp
out
pop
out
and
mov
fistp
ss
sub
pop
sub
add
daa
fsub
dec
int
gs
pop
mov
or
ror
or
jmp
mov
jle
xlat
cwde
adc
or
cwde
pop
sbb
mov
inc
push
les
mov
pop
adc
pusha
xor
hlt
and
ins
xor
loopne
jb
pop
pop
and
popf
out
(bad)
jnp
mov
lods
ret
(bad)
pop
cmp
xchg
repnz
cmp
out
jecxz
mov
(bad)
or
ss
das
mov
inc
push
xlat
(bad)
jbe
sti
cmp
push
push
jg
pushf
in
pop
mov
inc
sbb
popa
fist
jno
jnp
dec
js
fidiv
push
into
or
out
mov
xchg
dec
inc
sub
test
add
adc
enter
jecxz
jge
addr16
les
push
adc
xchg
aad
inc
les
mov
call
sbb
pusha
jns
ss
xchg
out
add
xchg
cmp
int
test
mul
push
sbb
call
cmp
rol
sahf
les
xchg
inc
sub
fs
xchg
scas
scas
mov
jmp
xchg
add
test
aas
(bad)
rcl
xchg
popa
imul
dec
retf
cld
jno
and
jecxz
jle
nop
sbb
inc
aas
sbb
inc
mov
(bad)
sub
push
mov
sub
inc
ror
js
fidiv
cmp
neg
jo
ja
mov
jb
sbb
or
push
adc
adc
dec
cmp
jl
sbb
retf
mov
pop
xlat
pushf
and
mov
rcr
enter
mov
jl
fadd
test
xchg
sbb
sahf
mov
mov
and
mov
(bad)
adc
test
scas
ret
inc
xlat
mov
sbb
sar
push
push
pop
rol
(bad)
test
jae
jmp
or
mov
and
fild
sub
dec
pop
inc
(bad)
int3
push
mov
push
dec
mov
jo
gs
add
aad
enter
mov
leave
xor
fs
lods
or
int
gs
add
pushf
les
mov
mov
popa
int3
daa
mov
push
or
adc
pop
sbb
sub
sub
outs
sbb
stos
fdivp
xchg
arpl
sti
ins
xchg
pop
loop
sub
cmp
mov
fwait
xor
sbb
fwait
into
xchg
pop
mov
cmp
pop
add
adc
(bad)
mov
mov
fnsave
mov
mov
mov
pop
sub
mov
add
retf
in
imul
mov
dec
push
repz
xlat
dec
dec
aam
push
bound
and
xor
push
adc
data16
push
out
aam
daa
aad
add
(bad)
mov
into
push
ja
into
pushf
bound
jbe
push
cwde
(bad)
mov
retf
sbb
jp
je
or
inc
mov
arpl
imul
bound
and
call
cmps
lahf
fcmovnbe
repz
test
out
sbb
lea
push
jns
jns
push
pop
cmps
enter
dec
cdq
dec
int
(bad)
jae
fnstcw
adc
pop
jo
add
mov
adc
xchg
xchg
rcr
inc
aaa
adc
call
rcl
mov
jl
gs
out
mov
sbb
adc
lock
repnz
out
adc
push
stos
icebp
xchg
out
loopne
xchg
ficomp
jg
je
mov
lods
and
jecxz
ror
out
mov
sub
mov
and
mov
pop
mov
test
shufps
xchg
les
cmp
rol
push
mov
sub
shr
in
sar
(bad)
imul
pusha
pop
cmc
inc
bswap
rep
and
stos
mov
ins
out
push
dec
aaa
mov
and
mov
mov
sbb
and
and
xor
movs
and
adc
add
arpl
test
loopne
xchg
push
and
push
addr16
rcl
cli
movs
(bad)
hlt
sub
dec
mov
cwde
and
mov
add
cmp
lods
lock
push
pop
dec
lods
fisub
stos
movs
call
out
pop
cmps
push
sub
lahf
enter
mov
adc
movs
xchg
adc
mov
mov
mov
xor
or
jle
out
out
cmp
xchg
hlt
stc
xor
sbb
or
in
int3
imul
out
shr
fisttp
mov
xor
pop
(bad)
xchg
int3
cmp
jmp
sahf
or
push
mov
aaa
repz
cmps
push
(bad)
adc
push
adc
jle
popa
or
sahf
repnz
aas
test
jmp
push
adc
enter
cli
int
or
sub
dec
sub
arpl
adc
xchg
adc
xchg
repnz
mov
xor
xchg
push
hlt
mov
pop
ds
pop
icebp
clc
test
into
pop
mov
pop
bound
dec
aas
retf
clc
lds
popf
popf
sub
and
mov
adc
ja
rcr
cmp
or
mov
dec
and
xchg
inc
ficom
add
mov
vcvttps2dq
jp
add
sub
retf
sub
leave
fsub
xchg
jg
push
ins
adc
inc
fiadd
sbb
sahf
add
mov
add
mov
xor
ret
dec
les
pop
mov
xor
inc
fcom
repnz
icebp
and
shl
or
xchg
shl
adc
mov
adc
pop
mov
xlat
sub
xor
fimul
(bad)
mov
test
sbb
aaa
stos
out
pop
frstor
sub
adc
enter
and
push
mov
test
cld
sbb
jp
cmc
dec
fs
in
mov
jae
out
les
and
jl
mov
arpl
std
pop
movs
add
clc
out
fwait
ins
inc
jmp
fld
push
or
sar
daa
push
cld
(bad)
adc
repnz
push
jbe
in
pop
sbb
mov
jne
pop
push
out
adc
xor
gs
add
in
mov
lods
imul
lods
push
add
push
and
jns
xlat
jns
pop
mov
sbb
nop
sbb
in
cmp
js
dec
adc
xchg
idiv
add
popf
sub
xor
sbb
add
ja
mov
daa
scas
push
ins
and
call
sub
clc
push
test
push
repz
cmp
jp
lods
ja
int
loop
push
(bad)
push
hlt
dec
and
xchg
in
xchg
imul
sbb
aaa
mov
xchg
movs
leave
or
fsub
cdq
jbe
inc
std
pop
dec
cli
test
sbb
out
scas
cld
cdq
mov
adc
dec
cmp
push
mov
push
cwde
adc
and
xchg
mov
ja
dec
fwait
jecxz
cdq
add
js
in
stos
sub
dec
test
jnp
ret
(bad)
les
or
push
in
and
mov
jae
dec
xor
adc
cdq
cwde
inc
pushf
fisubr
les
sahf
(bad)
ror
pop
ror
jle
jp
rol
shr
mov
clc
and
scas
sahf
mov
imul
aas
jmp
xchg
loope
adc
jbe
aaa
mov
adc
sbb
clc
fisub
jb
loopne
dec
cmps
mov
pop
xor
daa
iret
add
jg
and
cmp
cmp
or
shl
data16
addr16
jmp
test
push
cdq
adc
inc
inc
mov
sub
sub
push
sub
mov
call
pop
push
or
cmp
jp
test
xlat
or
fcomp
jne
ret
sub
cdq
jns
ins
loope
dec
mov
mov
push
pop
call
fdivr
cmps
sub
outs
sub
test
inc
cmp
jnp
mov
dec
push
jae
jo
adc
mov
cmps
push
adc
mov
fsubr
cmc
into
jmp
or
mov
scas
or
inc
movs
sbb
pop
popa
pop
add
hlt
push
sbb
sub
xor
or
movs
push
mov
xchg
loopne
dec
fld
je
mov
in
fdivr
pop
pop
jbe
cmc
or
in
pop
jnp
fcomp
icebp
(bad)
or
xor
push
arpl
in
je
inc
pop
das
test
mov
xchg
inc
(bad)
jp
adc
fiadd
fbstp
dec
add
jno
jl
popf
push
int
aaa
push
fcomp
xchg
scas
inc
xor
popa
jo
fmul
inc
mov
push
xor
cmp
lds
ss
lds
pop
dec
xor
sub
push
or
mov
xor
in
outs
or
ja
xor
es
mov
or
jae
mov
(bad)
or
jne
movs
fcmovbe
aas
(bad)
pop
rcr
test
xchg
xchg
movs
jbe
pop
or
call
div
addr16
test
adc
xor
push
cmc
mov
jecxz
ins
mov
retf
int3
popf
dec
mov
mov
mov
adc
mov
push
pusha
xchg
xlat
shr
int3
cmps
shl
add
dec
pop
cld
and
sti
ss
jmp
sbb
into
mov
jmp
mov
sbb
push
jns
fnsetpm(287
inc
sahf
inc
adc
dec
dec
repz
pushf
ss
(bad)
dec
inc
imul
retf
dec
(bad)
mov
rcr
addr16
fs
cmps
mov
mov
cmp
push
mov
pop
xor
frstor
test
inc
dec
int3
mov
xor
call
and
loopne
or
test
mov
je
add
dec
add
pop
jp
in
outs
push
call
fldenv
push
out
rcr
ror
je
xor
imul
xchg
xor
adc
add
stc
lods
xchg
add
adc
ss
adc
jl
add
test
retf
push
(bad)
mov
into
add
sbb
xchg
jmp
mov
leave
loope
lds
cmp
(bad)
lods
outs
cmovl
in
mov
and
das
xchg
or
das
cmp
outs
mov
mov
mov
fbstp
out
push
iret
push
pop
rcl
mov
outs
mov
push
mov
or
fisttp
sub
xor
mov
sbb
enter
cwde
push
lds
int
rcpps
dec
(bad)
sbb
or
xor
fld
in
jl
jbe
xchg
jl
scas
inc
fisubr
or
or
xlat
xor
ins
xchg
shl
add
fs
int
and
inc
cdq
sub
push
jne
adc
clc
sub
dec
outs
fucomip
xchg
mov
and
or
cmp
(bad)
push
int3
sub
pop
jecxz
movs
dec
ror
mov
loop
push
fcmovne
lods
inc
pop
pop
and
aas
pop
pop
sbb
mov
int3
ror
adc
lock
xchg
inc
popf
out
dec
dec
xchg
bound
jno
icebp
lds
test
sbb
stos
push
inc
sti
jl
pop
add
std
iret
xchg
mov
mov
iret
xor
cmps
sbb
cwde
pop
es
push
add
nop
mov
mov
adc
into
mov
mov
jmp
leave
or
je
pop
(bad)
sub
dec
out
push
or
cli
adc
ror
sbb
call
pusha
xchg
sti
xor
out
cdq
dec
into
repz
addr16
inc
mov
inc
sub
(bad)
mov
dec
call
mov
pop
or
test
inc
mov
fwait
popa
out
mov
call
jo
add
leave
mov
xor
lea
add
jge
out
sbb
(bad)
lea
pusha
push
inc
mov
dec
das
aas
stos
adc
pop
sub
lea
adc
add
clc
add
adc
sti
movs
cmp
sub
push
inc
js
or
mov
test
ja
cld
jmp
xchg
(bad)
hlt
jns
scas
cs
xor
lds
pop
repnz
pop
xlat
sbb
lahf
mov
push
fs
sub
popa
sub
or
mov
push
pop
lock
mov
push
out
and
xor
or
leave
outs
pop
and
ja
popa
dec
es
stc
jo
and
in
mov
add
jns
xor
aaa
bound
push
es
loopne
ins
pushf
add
out
ror
xchg
cvtps2pd
dec
xor
outs
cmps
push
push
fsub
mov
add
imul
in
pop
cmp
stos
pop
sub
sbb
repnz
xchg
pop
mov
cli
fwait
(bad)
pop
jbe
in
xor
fadd
xchg
cmp
jno
sar
je
les
out
test
fldenv
push
dec
scas
jle
inc
push
pop
xchg
mov
hlt
test
test
gs
hlt
outs
enter
push
arpl
push
jno
jp
call
and
push
adc
pop
stos
and
pop
pop
cmp
dec
test
mov
popf
xor
jo
mov
mov
push
mov
or
lock
jl
pop
mov
mov
bound
mov
in
add
jmp
fild
dec
jnp
repnz
fld
ret
adc
mov
mov
mov
aas
leave
and
scas
addr16
dec
xchg
sub
fucom
outs
mov
sbb
mov
jp
xor
fadd
sbb
cli
mov
test
inc
pop
or
dec
mov
std
add
mov
aas
adc
xchg
leave
daa
aad
dec
or
loope
das
add
push
repnz
shl
cmp
(bad)
cmp
pusha
and
push
repz
cmp
inc
sar
retf
retf
adc
xchg
xor
xor
mov
arpl
add
jne
daa
sub
mov
pop
mov
rcl
mov
not
ja
mov
std
dec
add
xchg
push
imul
lock
jl
pop
ret
aam
jp
and
add
xor
pop
(bad)
(bad)
les
xchg
mov
imul
jne
ret
push
mov
add
lds
xor
aam
out
mov
sbb
pop
inc
cmp
inc
jl
jne
leave
mov
loopne
lahf
or
fld
mov
or
pop
scas
std
pop
imul
xchg
ins
dec
es
and
shl
cdq
cli
xchg
mov
adc
inc
xchg
xchg
xor
push
js
or
push
outs
dec
cmc
add
inc
cmc
js
stos
lahf
xchg
ret
test
cdq
neg
sub
xchg
outs
inc
stos
jp
adc
loopne
(bad)
aas
push
fcomp
lahf
mov
(bad)
in
dec
ds
ret
ds
lds
lea
repz
or
scas
xor
xchg
adc
and
ins
repnz
and
dec
iret
pop
adc
(bad)
sbb
loopne
xchg
out
jp
fs
lds
or
movs
sbb
jmp
mov
aas
test
jne
repnz
add
loop
mov
add
fild
test
xor
rcr
test
iret
adc
adc
and
adc
out
imul
pop
stos
inc
call
ja
ss
aad
pushf
xor
push
sub
mov
movs
jmp
call
fbld
ror
jnp
sub
movs
push
sbb
cmc
xor
mov
and
ror
sbb
int3
pop
mov
hlt
mov
test
mov
sahf
test
pop
sbb
test
fldcw
add
cmp
sub
cmps
adc
scas
adc
fsubr
inc
out
pop
push
aaa
iret
retf
outs
outs
stos
nop
cmps
int
or
enter
cwde
sbb
(bad)
cmc
dec
xchg
retf
or
in
push
push
pop
or
leave
rol
mov
jno
fld
push
jae
adc
mov
in
dec
cli
dec
mov
test
sar
mov
mov
fcom
out
pop
outs
mov
scas
push
gs
mov
xchg
ds
ds
retf
mov
xor
inc
pop
cmp
cdq
nop
jbe
and
fiadd
cmp
mov
and
dec
dec
loopne
out
ins
jo
mov
inc
stos
xchg
jg
xor
mov
shl
stc
mov
shl
mov
mov
gs
and
jno
cmp
ss
mov
mov
mov
lock
in
push
xchg
push
inc
lea
fucomi
pop
mov
dec
mov
fs
loop
cmp
sbb
pop
stos
jae
cmp
adc
inc
aas
jo
jmp
pop
xlat
loope
xchg
and
adc
cli
loop
repz
and
pusha
adc
push
gs
xor
adc
jge
or
xchg
mov
jb
cdq
add
xchg
cli
(bad)
shl
enter
xlat
xchg
lods
(bad)
jle
jmp
repz
cmps
push
ds
pop
sub
lods
jmp
cmp
sub
sub
jmp
les
sub
jbe
aaa
mov
loope
mov
fisub
push
lahf
mov
mov
clc
je
xor
ins
mov
rol
pop
das
mov
mov
push
mov
cmp
xchg
push
jns
dec
or
cmp
retf
test
call
daa
jp
scas
les
inc
push
lds
jnp
addr16
or
int3
mov
sbb
xor
sar
dec
sbb
lahf
adc
xchg
xor
addr16
ja
das
or
and
inc
add
retf
adc
js
sbb
mov
mov
mov
dec
fistp
xor
adc
imul
fwait
inc
inc
inc
mov
loope
repnz
in
stos
add
pop
call
push
sbb
ja
jo
rol
clc
mov
push
push
fs
(bad)
xor
jb
sub
add
sub
out
sub
push
push
pop
push
pop
sub
cdq
mov
mov
push
mov
xor
xchg
jae
dec
das
(bad)
pop
test
out
push
mov
pop
mov
fisttp
push
pop
xchg
lock
cmp
sub
pop
int
inc
jge
cmp
add
push
pop
(bad)
gs
cmp
call
repz
pop
mov
enter
inc
cmps
push
stos
push
and
retf
inc
ins
adc
data16
dec
(bad)
and
shl
lahf
jb
(bad)
cmps
add
retf
cmp
or
sahf
mov
fbld
or
test
cmp
push
mov
stos
pop
(bad)
jne
sub
imul
and
pop
pushf
es
push
neg
movs
mov
cwde
stos
dec
push
xlat
fcom
rcr
daa
(bad)
aad
lahf
pop
cmc
xlat
jmp
push
inc
pushf
and
mov
out
push
or
cwde
sub
test
sbb
icebp
cld
pop
pop
xor
data16
xchg
dec
mov
ins
mov
xor
out
jge
popa
mov
gs
xchg
push
aaa
xchg
mov
pop
int3
pop
mov
lds
cmps
or
test
push
jne
add
sbb
dec
pop
pop
mov
jp
fwait
jg
mov
test
aas
push
add
mov
test
cmp
and
mov
cmp
lahf
add
dec
jmp
sub
push
pop
jmp
shr
cmp
stos
push
dec
mov
or
ror
scas
add
ins
out
sbb
fild
int3
out
push
push
int3
mov
fsub
scas
pop
jnp
ret
sbb
dec
cmp
dec
pushf
mov
sub
xchg
push
or
push
or
movs
and
ret
mov
mov
inc
mov
push
jo
add
jp
sub
jns
or
sbb
mov
sbb
addr16
dec
repz
pop
mov
leave
shr
call
fwait
shr
les
imul
push
sbb
enter
js
or
rcl
cmps
in
push
fdiv
(bad)
aad
rcr
mov
ret
in
test
cmp
xor
addr16
sub
cmp
nop
sbb
and
add
pop
lock
adc
fst
movs
xlat
scas
mov
or
mov
lea
stos
hlt
test
mov
out
js
je
jmp
xor
push
das
les
int
rol
stos
jecxz
push
mov
pushf
call
fs
push
xchg
mov
xchg
sbb
icebp
or
je
rcl
in
ja
repz
or
or
int
sub
(bad)
xor
movs
les
or
jp
ins
inc
gs
dec
jnp
inc
mov
or
fwait
jb
inc
pop
(bad)
shl
sub
mov
inc
pop
enter
cdq
in
pop
push
retf
(bad)
in
sar
mov
mov
test
jge
ins
adc
mov
or
repnz
addr16
adc
mov
inc
sbb
inc
int3
jge
pop
ror
jg
stc
mov
mov
sub
xchg
test
int
mov
sbb
repnz
pop
stc
mov
dec
cmp
pop
xchg
jb
imul
jmp
sub
push
jno
cmp
jmp
addr16
fadd
cmp
dec
ins
test
popf
jae
pop
sbb
mov
sub
pop
push
pop
jle
xchg
xor
xor
lds
inc
shl
ret
xor
mov
mov
add
inc
pop
sbb
icebp
cld
mov
push
mov
jo
sahf
test
test
das
fdiv
int3
adc
push
xchg
xchg
cmp
pushf
out
add
or
jl
inc
jbe
jl
cmps
sub
fwait
repnz
pop
sbb
mov
fimul
pop
lods
jmp
sbb
mov
loop
test
test
fcom
lods
aad
cmp
cmp
mov
movs
lods
and
cwde
test
xor
add
inc
mov
jmp
call
cwde
inc
cmp
cld
mov
cmp
inc
push
sbb
data16
add
icebp
cmp
(bad)
mov
test
(bad)
(bad)
sbb
inc
mov
repz
je
xchg
outs
ror
gs
loopne
add
xchg
daa
stos
xchg
movs
jne
xor
gs
adc
sbb
push
or
inc
test
pop
cmp
sub
xchg
das
mov
sub
rol
aaa
enter
fs
dec
add
mov
or
adc
sahf
sbb
ds
or
(bad)
cld
and
mov
add
inc
loop
fwait
clc
std
cwde
mov
nop
or
popa
xchg
xor
xor
and
stc
jae
aas
jb
cmp
test
fiadd
xchg
jo
inc
scas
jmp
mov
(bad)
out
mov
and
push
pop
push
cmp
retf
jmp
shr
dec
cmp
pop
dec
shl
pop
mov
cmp
adc
idiv
push
jle
push
mov
sar
sbb
je
dec
ins
inc
sub
mov
and
push
fistp
and
movs
test
mov
adc
push
inc
mov
mov
jmp
ret
dec
cmp
inc
cmps
cs
in
out
movs
pusha
mul
pop
sbb
sbb
(bad)
std
into
adc
shl
or
jge
and
ror
pushf
and
mov
and
mov
jb
pop
into
sub
mov
adc
jg
nop
add
test
pop
mov
iret
xchg
call
add
shl
test
sbb
jbe
pop
mov
dec
or
and
cmps
test
cmp
cmp
leave
jmp
jo
or
and
ss
mov
cld
dec
inc
movs
cmp
popa
mov
imul
cmp
(bad)
push
jno
xor
xchg
mov
out
push
mov
out
lds
sar
sub
loope
das
cmp
cmc
jp
add
enter
dec
inc
jns
out
(bad)
lahf
push
push
jae
cmp
pop
mov
pop
clc
dec
rcr
add
pusha
bound
dec
ret
fidivr
inc
data16
lods
jbe
in
xchg
mov
pop
mov
add
in
cmp
push
or
inc
in
jne
jle
sub
cld
pop
cmp
sbb
imul
movs
in
mov
imul
test
mov
mov
sbb
sbb
das
(bad)
adc
(bad)
repnz
sub
fimul
movs
mov
cmps
mov
mov
cmps
jl
pop
xchg
pop
jno
aad
add
adc
mov
hlt
mov
lahf
ret
mov
rcr
inc
mov
in
lods
add
cli
mov
loope
in
push
ss
enter
cmc
(bad)
in
push
aaa
nop
jno
jns
mov
sbb
inc
sbb
dec
ins
repz
ret
add
jg
pop
mov
dec
out
push
or
loope
ret
mov
out
fld
jns
sti
les
add
push
xlat
or
inc
dec
jbe
cmp
in
mov
enter
retf
inc
fmul
jb
sbb
ds
cmc
pop
add
cli
inc
dec
ret
loopne
xchg
jnp
and
sbb
cmp
cmp
cmp
stos
iret
mov
sbb
pop
int3
mov
cmp
outs
add
cli
cmp
mov
dec
and
fwait
popa
std
imul
test
retf
cli
pop
jmp
data16
fwait
sbb
dec
lahf
mov
xor
cdq
neg
(bad)
int3
lods
scas
xor
dec
xor
lea
xor
and
movs
scas
cmp
add
fldcw
and
mov
pop
stc
div
aas
xor
pop
dec
out
mov
xchg
sbb
jg
lock
xchg
imul
jl
mov
pop
xor
dec
inc
cmp
sahf
mov
cmp
(bad)
cmp
or
pop
in
sbb
and
inc
sar
inc
mov
out
xchg
ret
hlt
arpl
inc
leave
push
out
maxps
jmp
shl
movs
into
jp
scas
jbe
int
sbb
cwde
push
fdiv
jecxz
jp
sbb
cmp
inc
push
mov
mov
mov
retf
push
int
sti
mov
adc
shl
mov
ds
aam
fist
lods
arpl
repz
push
inc
imul
fadd
mov
xor
movs
mov
mov
jbe
outs
mov
popa
pop
pop
js
jo
xchg
inc
fisubr
rol
stos
adc
fisubr
in
dec
addr16
test
(bad)
jno
aaa
xor
mov
dec
stos
jbe
sahf
daa
cs
in
adc
add
jb
neg
leave
imul
iret
add
dec
jmp
out
test
mov
add
push
sub
or
or
or
call
inc
pop
sti
mov
(bad)
mov
stos
inc
inc
xchg
jl
repnz
les
jnp
imul
jmp
push
arpl
sub
sbb
clc
jbe
into
hlt
or
test
cmp
test
xor
inc
inc
or
inc
add
js
iret
fist
sahf
mov
xor
mov
(bad)
int
pop
mov
xchg
cmp
call
retf
aad
popa
jbe
shl
dec
outs
sub
pusha
dec
ret
jbe
cs
xchg
sub
push
imul
pushf
inc
cmps
adc
jb
cmp
and
jmp
inc
and
js
xor
pop
dec
loop
xlat
fnstenv
pop
std
hlt
scas
mov
div
fs
mov
retf
popa
push
repz
mov
repz
out
mov
pop
and
pop
scas
mov
movs
lock
lods
shr
jecxz
mov
aad
sub
mov
cwde
idiv
jmp
aaa
shl
out
pop
iret
ins
ror
frndint
dec
stos
inc
test
int
jge
add
mov
sbb
sub
test
out
xchg
movs
push
retf
jb
jae
pop
pop
add
(bad)
push
enter
stos
daa
icebp
or
xchg
cli
inc
enter
imul
adc
xor
stc
fsubr
and
jno
xchg
push
imul
shl
in
repnz
adc
pop
sbb
in
nop
aam
jge
pop
dec
sub
mov
xor
push
mov
mov
test
jmp
dec
stc
pop
bswap
pop
xor
push
rcr
push
cmp
cdq
cmps
sub
loope
jno
ret
add
in
pusha
cmp
shl
scas
pop
out
popa
aad
sbb
leave
jmp
dec
push
push
mov
add
add
pop
loope
fwait
mov
mov
cmp
cmp
sbb
fistp
fcom
je
loope
rcl
pushf
adc
sbb
sbb
outs
retf
pop
jmp
or
sbb
int3
mov
adc
fnstsw
add
adc
dec
pop
sub
jl
or
dec
sub
out
push
test
dec
xchg
mov
or
xchg
bswap
pop
or
pushf
xchg
xor
fstp
mov
fsubp
stc
cmp
sbb
fldenv
(bad)
or
enter
(bad)
or
and
push
jo
(bad)
arpl
int
mov
sub
xlat
mov
jnp
dec
mov
push
adc
js
aas
stos
cwde
dec
jg
jmp
sub
iret
icebp
xchg
push
call
xchg
inc
lock
mov
mov
lods
test
lea
cmp
stos
xor
sbb
loope
aad
jbe
push
fnstenv
movs
js
aad
ret
mov
ret
xchg
(bad)
aam
or
ds
call
push
mov
add
jl
cdq
test
dec
sub
dec
and
test
dec
pop
repz
or
push
das
cmc
jne
adc
popa
les
(bad)
adc
add
add
and
nop
dec
pop
sub
mov
push
sub
xchg
and
push
dec
lods
pop
(bad)
in
and
daa
pop
ss
mov
movs
sub
out
fwait
push
pop
push
sub
mov
cmp
jmp
gs
xor
xchg
xlat
jg
(bad)
push
mov
lahf
inc
retf
fld
push
ss
sti
sahf
rcr
jbe
inc
loope
push
xor
jle
sbb
mov
pop
shl
loop
pushf
add
mov
mov
sbb
dec
pop
sar
xchg
inc
shl
jnp
sar
pop
daa
movs
push
sbb
push
pop
stos
daa
in
adc
cmp
lahf
mov
push
loop
ds
jmp
movs
pop
mov
movs
xchg
push
int
cmc
jle
call
sub
mov
out
push
ret
retf
fs
nop
sbb
sar
mov
mov
ins
daa
or
inc
xor
inc
xchg
mov
pop
mov
js
adc
xor
adc
adc
js
mov
jg
push
adc
xchg
push
out
sbb
pusha
imul
xchg
lea
pop
jae
out
pop
mov
xchg
mov
jecxz
inc
mov
add
mov
add
ds
xchg
inc
jge
jbe
pop
int
loope
sti
jo
or
sbb
sahf
add
and
sbb
in
jns
(bad)
jmp
pop
sbb
stc
and
jmp
call
jo
pop
cs
rcr
daa
sbb
cwde
xchg
push
fild
mov
cld
inc
adc
test
mov
push
push
jmp
ret
sar
xor
mov
gs
rcl
pop
pop
xor
xor
leave
sbb
mov
popa
nop
pop
jmp
mov
jg
pop
lods
add
mov
sub
test
cmp
arpl
inc
xor
fild
sbb
ror
loope
dec
dec
xchg
dec
movs
sub
or
jne
add
iret
ins
xor
bound
test
xor
mov
arpl
mov
inc
dec
stc
call
int
int
loop
fldenv
enter
dec
adc
jge
imul
stc
add
and
fimul
clc
inc
mov
lahf
out
scas
fimul
outs
jle
arpl
inc
xchg
mov
push
adc
push
mov
sub
aas
xor
retf
xchg
add
jmp
mov
pop
adc
push
cmp
jnp
outs
popf
jne
xor
lahf
xor
push
fnstsw
jns
mov
sar
xor
jno
fsub
arpl
popa
stos
sub
push
mov
add
jl
jge
in
xchg
jmp
sbb
mov
data16
adc
xchg
(bad)
nop
or
push
or
cmc
adc
mov
pop
add
inc
sahf
xor
push
fsubrp
aas
or
in
xor
or
pop
lods
das
popf
ja
push
and
xchg
push
pop
mov
ins
repz
or
jb
daa
leave
jo
push
into
int
in
sub
cmp
pop
pop
push
nop
rcr
push
mov
sub
jae
sub
adc
xchg
enter
mov
mov
adc
das
stos
adc
sbb
ins
test
cmp
mov
dec
xchg
mov
gs
int3
dec
pop
dec
movs
mov
test
cmp
movs
push
pop
xchg
sahf
dec
and
out
bound
outs
imul
fs
sbb
and
scas
dec
cmc
leave
aam
or
sub
imul
push
push
mov
bound
fnstenv
popa
ss
sbb
je
fisub
push
add
enter
sbb
xchg
mov
dec
xor
(bad)
stc
cs
push
in
out
fs
push
mov
add
and
cmp
inc
in
add
mov
push
xor
jecxz
mov
jp
(bad)
cli
or
mov
pop
les
fnstcw
ret
dec
xchg
mov
cwde
ffreep
cbw
push
sub
jae
xchg
enter
xchg
mov
jnp
inc
xchg
in
inc
sbb
sahf
xchg
leave
int
fimul
sbb
xchg
adc
outs
or
or
enter
cdq
dec
xor
inc
cmps
dec
pop
pushf
add
outs
xor
call
jnp
mov
add
xchg
adc
sub
hlt
aad
bound
inc
out
leave
cs
fsubp
mov
and
dec
dec
pusha
pop
mov
ret
out
not
pop
push
or
sbb
push
xchg
jnp
aad
pusha
sub
push
sti
cmps
sub
dec
dec
stos
jne
dec
cdq
mov
sar
(bad)
das
inc
mov
adc
xor
or
pop
pop
cld
bound
gs
int
hlt
pop
pop
inc
cmp
inc
fst
or
outs
ins
jno
inc
iret
cmovbe
out
add
aaa
inc
adc
outs
shr
or
mov
addr16
inc
out
sbb
xor
sub
bound
popa
pop
in
outs
push
dec
xchg
mov
cmps
sti
cdq
xchg
pop
dec
fadd
xchg
mov
mov
and
retf
inc
sub
cmp
data16
outs
adc
push
adc
xor
and
jnp
ins
mov
sbb
aaa
xchg
fs
mov
xor
push
ret
scas
outs
outs
adc
adc
or
mov
addr16
clc
mov
or
js
int3
and
sub
push
cmp
shr
fistp
or
inc
popf
into
call
imul
adc
cmp
scas
aas
jnp
cmp
mov
jecxz
out
fsub
jae
mov
(bad)
stos
or
mov
inc
ror
push
lods
loop
in
jbe
xor
xor
fbstp
or
jl
xchg
jp
mov
cmp
push
shufps
sbb
jmp
push
pop
fadd
add
cmp
inc
inc
pop
and
js
and
mov
dec
(bad)
mov
push
pop
adc
in
stos
jae
push
daa
bound
and
dec
push
test
aaa
sbb
enter
xor
(bad)
sbb
mov
dec
lea
xor
repnz
addr16
and
pop
sub
jg
cmps
aas
retf
jmp
push
push
jbe
push
(bad)
cmp
adc
mov
cdq
aaa
call
shr
and
sbb
test
das
scas
jmp
xor
aam
xor
aas
outs
mov
or
jmp
mov
ja
push
or
ficom
test
arpl
add
and
scas
test
push
inc
das
jmp
sahf
dec
pop
call
add
mov
adc
pop
push
mov
xor
scas
retf
or
mov
dec
xchg
xor
les
or
lea
jl
loopne
out
push
bound
mov
ret
mov
jae
sbb
pop
test
leave
stos
or
and
inc
cmp
mov
xor
lock
push
or
cmc
icebp
sti
mov
shl
fimul
stc
and
mov
mov
adc
jmp
into
pop
out
cmc
inc
pop
cmp
jg
(bad)
into
cmovb
scas
cmp
retf
data16
(bad)
jmp
jno
dec
ins
inc
jge
inc
push
iret
shl
(bad)
out
in
xchg
gs
mov
(bad)
inc
inc
jmp
push
cmp
jo
sbb
mov
jp
(bad)
(bad)
mov
lea
into
cmps
fucomip
mov
push
mov
pop
adc
icebp
push
addr16
jmp
push
dec
ret
xlat
jge
sbb
inc
mov
and
adc
aam
or
popf
cmp
jg
and
xchg
inc
adc
pop
mov
scas
aas
push
sub
and
adc
jmp
out
test
jmp
ss
imul
adc
popf
push
pop
xchg
or
or
dec
test
ja
fwait
(bad)
push
cmp
mov
into
mov
jns
js
sub
pop
daa
pusha
iret
dec
js
xor
aaa
inc
test
sub
jb
jmp
out
inc
mov
out
cwde
pusha
mov
(bad)
je
inc
imul
fild
mov
(bad)
jae
cdq
into
or
outs
fwait
mov
dec
sbb
or
js
add
(bad)
mov
shl
or
loopne
adc
scas
mov
jmp
sbb
or
test
and
out
adc
retf
sbb
mov
xor
pop
sub
adc
lods
in
cmp
sbb
aad
mov
and
or
or
pushf
pop
push
sub
dec
and
push
xchg
sar
repnz
lahf
pop
retf
xor
xchg
jmp
push
repz
xor
mov
adc
inc
ror
(bad)
cli
xchg
sti
daa
call
mov
fnstsw
pop
sbb
cwde
jmp
adc
repnz
or
xchg
enter
jmp
adc
addr16
ja
ror
or
add
and
popf
jno
sbb
in
xor
pop
ins
ins
pop
clc
mov
(bad)
mov
sahf
xor
call
lahf
dec
pusha
dec
pop
xchg
sub
inc
and
inc
retf
cs
sti
movs
inc
test
add
dec
push
mov
xchg
sub
sti
mov
xchg
jle
clc
sahf
xchg
add
sbb
sahf
adc
sub
add
stos
add
je
popa
or
sbb
imul
test
fist
cdq
mov
cmp
adc
add
mov
stos
retf
int
mov
jne
pop
ss
jbe
pop
sub
repz
adc
push
adc
adc
cdq
jmp
call
jae
aam
in
inc
outs
adc
popf
adc
test
sbb
out
dec
add
jae
pop
out
inc
movs
sbb
cwde
pop
jbe
xchg
das
cmp
mov
fdivr
mov
add
test
and
fldl2t
inc
sub
into
out
into
cmp
jp
or
pop
fwait
jno
sbb
(bad)
adc
inc
xchg
ret
xchg
cmp
(bad)
test
(bad)
and
and
int3
inc
cmp
movs
adc
daa
fst
jae
lods
pop
not
mov
add
cmps
inc
push
jmp
xchg
xchg
test
sar
mov
test
sbb
add
inc
mov
or
imul
nop
punpckldq
and
stos
xor
aas
out
mov
out
mov
scas
in
or
cmps
pop
adc
push
out
mov
(bad)
mov
cmc
sbb
and
cld
out
mov
dec
xchg
dec
stos
or
int
dec
or
test
(bad)
std
int3
daa
pop
(bad)
and
arpl
pop
ins
adc
outs
fidiv
jecxz
and
stos
or
push
and
pop
jge
inc
cmp
jmp
mov
mov
add
jge
xor
shr
jns
sbb
ret
mov
xlat
cmp
or
pop
mov
xor
pop
inc
and
not
sbb
dec
je
dec
lea
(bad)
retf
xor
lahf
sbb
xor
retf
mov
adc
push
(bad)
fnsave
mov
xchg
daa
cwde
lock
dec
aas
jb
jmp
or
push
dec
mov
outs
fisubr
fdivr
ss
mov
clc
pop
stos
js
ins
pushf
add
mov
ja
jmp
dec
repnz
mov
fcom
cmp
cmp
iret
dec
neg
test
fwait
xchg
mov
inc
cmp
fisub
adc
inc
jge
rcr
retf
mov
mov
arpl
xchg
jmp
or
xor
add
mov
loop
sti
mov
gs
icebp
repnz
mov
retf
in
push
cdq
pop
cmp
adc
fidivr
sar
movs
mov
mov
cli
repnz
stc
cmp
daa
add
lock
repz
jecxz
or
dec
stos
push
leave
pop
jo
mov
mov
mov
retf
repz
and
mov
mov
mov
dec
pop
test
outs
mov
adc
out
sub
add
addr16
push
mov
pop
jle
loop
jle
inc
mov
jmp
mov
mov
sbb
rcl
test
ss
cwde
out
in
push
je
shl
inc
dec
(bad)
test
iret
mov
in
jmp
adc
mov
arpl
rol
retf
fstp
xor
aad
mov
dec
cmp
mov
sbb
loope
ror
add
lods
in
neg
scas
mov
mov
mov
pop
shl
imul
sub
ss
clc
jns
rcr
add
mov
add
inc
pop
ins
push
cmp
ret
cmps
push
cdq
shr
arpl
out
adc
aad
xchg
inc
dec
xor
(bad)
icebp
enter
(bad)
push
out
dec
pop
leave
xchg
stos
adc
loopne
repz
xchg
aas
aaa
icebp
or
stos
call
retf
pop
xchg
(bad)
jge
in
ja
daa
adc
cmova
add
imul
and
and
mov
push
xor
test
cmp
adc
and
loopne
fnsave
out
jae
mov
jle
lea
push
icebp
retf
mov
pop
or
cmp
loopne
dec
sbb
mov
ret
dec
cmp
adc
lahf
frstor
in
shr
or
mov
rol
push
xchg
es
mov
adc
jo
sbb
call
std
lea
(bad)
sahf
fstp
loop
repz
push
into
mov
repnz
gs
dec
cmp
mov
les
mov
pusha
adc
inc
out
repnz
js
xchg
or
push
outs
inc
test
imul
aas
xchg
cmp
fidivr
cmp
popw
outs
add
(bad)
hlt
daa
jmp
sbb
sbb
mov
jp
or
pop
sbb
sar
add
das
pop
pop
fcmove
add
add
pop
xchg
ret
sub
mov
jns
jne
test
pop
mov
pop
stos
test
jle
out
scas
mov
mov
jne
inc
cmp
inc
daa
jecxz
std
into
add
dec
cmp
pop
add
mov
push
pop
dec
pop
sar
sub
cs
jmp
jb
adc
cli
adc
ins
in
loope
loopne
cwde
call
push
and
push
xchg
(bad)
popf
sti
lods
push
cmp
push
fdiv
add
mov
std
mov
pop
cmps
sub
push
inc
xor
push
rcl
push
pop
pop
sar
movs
test
sub
mov
pop
fwait
and
gs
jne
mov
idiv
rol
push
sbb
ret
sbb
cmp
inc
rcl
add
cmps
jne
jmp
hlt
jnp
js
mov
in
test
pushf
jmp
or
in
push
sbb
leave
xchg
xchg
clc
stc
jl
stc
xor
(bad)
push
sub
mov
xor
enter
adc
xchg
lds
aas
jne
adc
stc
and
fistp
mov
mov
es
sbb
inc
jl
test
movq
dec
mov
lds
jo
(bad)
imul
dec
jno
dec
add
(bad)
cdq
ror
out
out
inc
int3
xchg
scas
les
xor
fstp
cmp
in
imul
(bad)
xor
xor
xchg
cs
jmp
xor
cli
sbb
lahf
and
add
xor
repz
lahf
push
xor
cmp
repz
lock
dec
push
movntq
aam
arpl
mov
rcr
jae
sub
mov
fmul
into
cmp
push
repz
icebp
push
push
cmp
jb
pop
or
daa
pop
mov
bound
xchg
(bad)
mov
pop
jp
cmps
in
sub
dec
and
mov
xor
jmp
inc
xchg
stc
xchg
add
repz
mov
xor
cdq
jae
movs
mov
fadd
adc
and
push
push
or
(bad)
or
or
cmp
mov
xchg
ret
nop
sar
adc
cmp
fs
aad
daa
xor
loop
mov
sub
xchg
dec
cmc
popf
dec
add
push
pop
xchg
clc
clc
mov
(bad)
and
jne
pop
jmp
movs
enter
cld
fcomp
mov
and
mov
pop
inc
rcr
mov
fstp
ror
out
mov
ds
outs
add
out
repnz
and
ds
in
jmp
and
ror
stos
mov
sbb
adc
xor
outs
sbb
int
outs
cmp
xlat
sahf
sub
movs
out
repnz
lods
std
lods
iret
and
mov
or
shl
and
xor
jo
daa
leave
adc
adc
xchg
ins
rol
jmp
mov
push
mov
out
add
loopne
inc
lock
mov
xchg
cmps
lods
and
mov
push
test
rcr
jb
(bad)
adc
xlat
xor
pop
(bad)
sar
xor
or
or
xor
mov
mov
lds
pushf
xor
xchg
daa
mov
enter
fdiv
push
inc
cmps
inc
ss
inc
cdq
fxch
pop
loop
pop
leave
js
nop
daa
adc
sbb
push
ja
int
fcom
jg
call
data16
inc
and
ret
adc
(bad)
pusha
pop
fadd
xchg
cmps
dec
jae
sub
dec
cmp
shr
pop
hlt
push
inc
stos
adc
rol
mul
dec
pop
arpl
xor
jmp
test
test
mov
dec
fwait
pop
add
mov
sbb
mov
ins
cmp
es
(bad)
or
das
stos
int3
popf
pushf
adc
dec
adc
aam
xor
fldlg2
cmp
adc
adc
inc
hlt
loopne
aaa
mov
inc
and
pop
xchg
xchg
leave
mov
adc
jb
xor
aam
cmp
add
sbb
sbb
in
jmp
repz
pop
or
pop
lea
outs
push
adc
push
outs
xchg
inc
neg
or
dec
out
xor
hlt
mov
inc
push
rcr
stos
mov
bound
add
pop
and
aad
scas
mov
dec
js
neg
inc
hlt
or
jno
inc
mov
nop
pop
add
jmp
pop
out
int
pop
xchg
xchg
not
jp
fisub
sbb
lea
std
push
rol
cmp
div
mov
adc
dec
mov
fsubp
push
and
les
pop
mov
leave
imul
scas
mov
mov
jae
mov
shl
xchg
adc
xchg
lahf
ins
mov
lock
fdiv
ins
idiv
imul
push
mov
inc
cmps
xchg
and
push
push
sbb
rcl
call
fwait
mov
cli
mov
ret
mov
retf
push
pop
sub
in
movs
imul
inc
add
adc
add
int3
or
dec
mov
adc
inc
(bad)
cmp
fild
pop
or
or
out
cld
stos
rol
loopne
mov
(bad)
fstp
push
add
or
aas
ss
push
push
mov
mov
jge
retf
ficomp
adc
in
inc
pop
pushf
sbb
adc
xor
jne
xlat
adc
sbb
dec
cld
mov
call
xchg
mov
add
cmps
add
mov
jl
lods
cmp
into
or
cmp
sti
jno
push
addr16
hlt
imul
push
retf
ss
pop
xor
scas
rol
adc
jle
pop
mov
lods
push
mov
fdiv
ins
(bad)
push
mov
mov
addr16
push
xchg
nop
lods
nop
cmp
sahf
dec
std
mov
or
mov
rol
jo
in
jp
mov
dec
mov
sahf
or
add
xchg
shr
mov
into
ja
push
lods
sub
add
ins
stos
addr16
arpl
icebp
addr16
xchg
mov
(bad)
iret
lock
call
cli
push
pop
adc
pop
pop
(bad)
hlt
movs
(bad)
shl
fstp
mov
shl
sar
and
dec
mov
cld
mov
out
call
(bad)
jl
daa
mov
retf
xchg
push
shl
test
imul
das
mov
retf
fwait
xor
push
pop
sub
add
push
lock
sub
jns
mov
push
shr
mov
std
arpl
cmc
movs
call
sbb
leave
sahf
adc
outs
jns
xor
in
imul
jge
outs
mul
div
jb
(bad)
bound
cdq
dec
dec
loop
fist
sub
fsub
push
(bad)
fidivr
cld
jnp
mov
cmps
xchg
popf
mov
sbb
fwait
xor
aas
mov
fcmove
xor
dec
fistp
(bad)
addr16
jmp
test
pop
retf
pop
or
std
aaa
xlat
jp
mov
dec
dec
sbb
or
push
ins
push
aaa
sub
gs
stos
fist
loope
fnstcw
mov
sbb
mov
push
sub
in
je
lds
sub
loope
mov
jg
call
pop
cmps
adc
mov
pushf
xor
pop
call
mov
push
clc
pushf
xor
mov
(bad)
jl
nop
cmp
jmp
aam
mov
pushf
call
adc
xchg
repnz
pop
mov
(bad)
into
aas
das
in
fstp
add
test
movs
cmp
aad
xor
adc
pop
ins
jg
pop
sbb
mov
es
retf
imul
cld
int3
fimul
pop
cld
fs
in
sbb
mov
addr16
lea
sahf
add
movs
iret
inc
pop
jmp
(bad)
push
jae
nop
(bad)
enter
and
sub
cmp
movs
in
rcr
adc
xor
fimul
mov
cmp
sbb
in
sbb
aaa
mov
sub
or
jae
pop
pop
dec
cld
nop
stc
xchg
inc
dec
xchg
aas
sub
push
ja
ror
inc
je
nop
xor
sbb
sbb
and
and
push
pop
adc
call
add
sbb
add
push
xlat
push
sub
push
movs
mov
and
add
sub
js
icebp
(bad)
das
aad
pop
mov
mov
jle
add
iret
sbb
mov
mov
mov
in
dec
lahf
call
pop
adc
ss
rol
aad
std
cld
sbb
mov
aad
shl
cmc
push
mov
sbb
iret
sub
loop
jne
cmp
jge
popf
pop
pop
je
mov
jae
es
and
ror
(bad)
pop
into
cld
test
xchg
mov
in
jnp
leave
sbb
mov
jle
add
xor
pushf
rol
int
ins
popf
icebp
mov
sub
adc
sub
pop
mov
out
mov
adc
mov
mov
or
int
pop
or
in
idiv
and
imul
mov
adc
cli
arpl
sub
loopne
push
shr
icebp
sub
xor
lahf
(bad)
lea
mul
imul
jp
rcl
retf
dec
mov
bound
fst
lods
sbb
enter
pusha
cmps
not
sbb
sbb
mov
shl
jb
cmc
retf
mov
retf
mov
movs
sbb
movaps
jg
call
jle
adc
repnz
inc
popf
lds
mov
jl
cld
adc
and
rcr
jae
push
mov
jecxz
sbb
mov
jmp
push
aaa
loope
dec
call
je
fnsave
bound
test
mov
loopne
xor
out
pop
lods
pop
sti
mov
enter
ret
ins
into
stc
es
je
xor
add
jne
inc
cs
xchg
lahf
inc
outs
push
jo
es
outs
push
fcmovu
mov
add
aaa
xchg
(bad)
pop
mov
xchg
sub
mov
adc
inc
dec
pop
mov
daa
cmps
inc
dec
xor
lods
imul
push
fs
push
ja
mov
inc
or
adc
enter
stc
inc
hlt
jle
scas
in
sbb
in
popf
and
mov
loopne
clts
cli
outs
repnz
out
push
push
lahf
sub
cmp
sbb
call
nop
cld
mov
lahf
into
(bad)
(bad)
push
ins
mov
mov
(bad)
jmp
pop
loope
push
push
and
clc
aad
test
stos
jb
(bad)
aas
ds
ret
call
(bad)
and
add
sti
sti
js
pop
and
pop
int
imul
lahf
or
xchg
jp
xchg
sbb
dec
pop
cwde
push
xchg
loop
dec
or
and
out
pop
popf
fcom
jecxz
leave
in
push
jno
pop
cld
lods
adc
cs
mov
mov
mov
cmps
icebp
sub
int3
or
test
les
das
jno
dec
dec
sbb
test
inc
push
xchg
ret
je
call
ds
leave
mov
jo
mov
mov
out
dec
gs
stc
ss
cmp
and
and
ficomp
inc
mov
lock
cs
aad
mov
daa
sar
xor
inc
les
int
push
xchg
scas
dec
sbb
or
pop
rol
add
aaa
icebp
loope
pop
push
mov
pop
xchg
jnp
fwait
out
mov
fist
adc
jle
cdq
in
mov
movs
inc
pop
cli
sub
inc
iret
out
mov
jne
movsx
aad
adc
dec
int3
mov
jnp
xchg
aam
sub
repz
ret
push
cmp
jmp
sbb
sar
xlat
push
or
pop
retf
mov
mov
xor
test
pop
js
out
imul
push
bnd
jp
pop
mov
and
jne
imul
fimul
pop
je
adc
hlt
xchg
clc
call
ins
xchg
or
xor
jb
jne
cmp
jo
scas
sub
mov
jg
mov
addr16
stc
(bad)
mov
jmp
out
pop
sub
jno
es
add
sbb
enter
sahf
aad
fiadd
and
inc
jo
sub
out
sbb
xchg
cli
cmp
stos
push
jno
cld
dec
inc
mov
jle
outs
call
call
pop
pop
mov
xor
fisubr
add
(bad)
cwde
adc
sub
jle
or
leave
push
and
rol
sbb
aad
movs
(bad)
scas
repz
ja
xchg
lahf
xor
jnp
xchg
popf
mov
lods
jmp
arpl
lods
cmp
ret
(bad)
popa
cmc
adc
sub
push
push
mov
jmp
shl
loop
aas
dec
pop
stos
clc
dec
pop
sub
shr
and
dec
cli
mov
push
adc
xchg
rcr
push
cmp
(bad)
loopne
jecxz
cmp
lock
in
pop
aad
pop
(bad)
push
mov
icebp
enter
sbb
sti
outs
inc
dec
pop
inc
jb
or
push
jge
push
mov
and
dec
ficomp
sbb
cmps
push
mov
aas
mov
or
push
sub
loope
adc
enter
mov
adc
dec
sbb
sti
repz
push
push
es
ins
or
push
adc
lods
int
jg
pop
(bad)
or
pop
xchg
sbb
jbe
stc
daa
test
mov
(bad)
leave
jne
repnz
lahf
dec
mov
sub
ins
mov
iret
mov
and
ds
fld
dec
push
jb
fwait
add
cs
ret
dec
clc
jle
pusha
gs
dec
sub
jl
mov
mov
push
xchg
movs
mov
test
int3
sub
dec
pop
pop
jnp
cdq
xchg
mov
jl
mov
hlt
test
inc
pop
test
loop
lods
pop
stos
and
ins
mov
mov
and
nop
fidiv
push
push
scas
cmp
mov
mov
cwde
repnz
in
inc
add
in
xor
mov
mov
das
loope
int3
enter
stos
aad
sbb
mov
pop
adc
loope
setge
retfw
lock
loopne
cwde
(bad)
std
in
stos
and
pop
mov
call
mov
sub
mov
dec
jno
scas
sar
pop
fistp
sub
push
test
or
push
mov
sbb
movs
icebp
cmp
in
adc
ror
mov
fimul
push
movs
cli
arpl
push
daa
xchg
jmp
in
lahf
xor
rcl
and
or
jle
fst
ss
pop
inc
imul
lds
aaa
in
push
pop
jmp
pop
fsub
daa
inc
das
pop
les
add
push
test
(bad)
mov
inc
dec
xor
icebp
call
into
push
imul
cmp
jb
pop
lea
les
xor
(bad)
fadd
xor
push
xor
push
mov
fucomip
xor
and
stos
arpl
icebp
(bad)
push
out
ss
in
imul
or
xchg
inc
cli
dec
cmp
test
xchg
adc
dec
test
cwde
mov
lea
std
jmp
in
ret
das
jl
retf
and
call
and
fld
fdiv
mov
adc
inc
movs
mov
aaa
add
sar
cld
outs
out
and
push
dec
test
xchg
push
inc
fcmovnu
and
ins
rcr
sbb
jle
sub
cmp
aam
mov
out
inc
fst
cmp
rcr
bound
daa
mov
pop
sub
cmp
or
mov
or
imul
enter
xchg
xor
stos
rcr
dec
in
retf
call
mov
push
push
arpl
imul
mov
fdivr
inc
lods
mov
ins
pop
mov
arpl
mov
dec
lods
(bad)
ror
pop
sbb
jg
std
loope
arpl
cmp
inc
das
scas
cmps
jecxz
xor
sar
push
dec
add
xorps
sahf
jle
(bad)
mov
xchg
and
push
sbb
jbe
scas
cmps
adc
cmp
xor
or
or
rol
fcomp
pusha
dec
ret
adc
retf
xchg
jb
and
sub
fwait
pop
cld
outs
pop
sar
outs
sub
test
fsubr
xchg
test
mov
sub
push
rol
(bad)
jp
push
xchg
dec
mov
out
sahf
mov
gs
push
cmps
mov
dec
outs
cmc
mov
ret
push
or
add
cmp
clc
adc
and
cmp
add
cmp
stc
fisub
movs
shl
jne
and
data16
or
mov
repnz
or
add
mov
or
arpl
cmp
rcr
dec
or
xlat
sti
test
iret
ds
in
add
inc
or
inc
(bad)
cmp
jno
out
test
lds
das
pop
push
xor
jmp
imul
(bad)
ins
jge
adc
or
add
cmp
not
mov
ror
mov
xlat
cld
dec
imul
das
mov
in
dec
xchg
pop
mov
push
xchg
mov
mov
test
rcl
jmp
sbb
(bad)
adc
add
shr
ret
dec
pop
ja
ins
movs
rol
dec
out
enter
nop
out
fst
mov
loop
test
mov
lods
xor
inc
xchg
xchg
inc
or
and
mov
dec
adc
mov
inc
mov
stc
sahf
test
sar
clc
jmp
cdq
inc
sub
out
pop
stos
bound
fistp
sbb
or
ja
cli
pop
and
cld
shl
fild
cmp
lahf
mov
es
test
cmps
out
inc
jmp
enter
rcr
test
jecxz
and
movs
sbb
cli
ret
out
ficomp
and
mov
daa
xor
inc
mov
ja
cmp
ror
out
dec
sub
push
add
mov
and
js
aaa
xlat
shr
outs
jb
(bad)
sahf
xor
(bad)
das
cmps
daa
sub
sub
mov
pop
aad
push
mov
sub
mov
add
cmp
jecxz
clc
lds
mov
out
test
or
mov
mov
xchg
nop
pop
lahf
jl
imul
fadd
loop
xchg
mov
jnp
sbb
cwde
adc
int
push
ja
adc
jecxz
pop
inc
popa
into
and
sbb
fs
icebp
cmp
xchg
test
(bad)
pop
push
push
iret
pusha
sbb
push
sbb
xlat
imul
jne
push
xor
ss
pop
xchg
in
sbb
por
scas
push
inc
mov
retf
adc
outs
mov
push
aaa
imul
js
xchg
ja
pop
loope
jg
(bad)
adc
shr
mov
xor
jo
ret
mov
or
aas
xor
sbb
shr
mov
mov
push
(bad)
push
mov
and
ds
test
scas
mov
gs
jmp
ins
(bad)
pop
sub
scas
push
ficomp
mov
lea
push
xchg
rcl
add
inc
scas
(bad)
in
stc
mov
cmp
mov
xor
sahf
in
cdq
sti
mov
daa
mov
nop
sti
and
adc
test
jne
je
jae
call
shl
dec
adc
pop
(bad)
inc
push
imul
fbstp
(bad)
xchg
inc
movs
repnz
and
test
adc
dec
mov
push
(bad)
xchg
or
inc
jecxz
and
push
cld
fistp
add
xor
push
and
jmp
test
mov
xchg
jbe
mov
rol
pushf
ss
(bad)
test
sbb
bound
add
jecxz
inc
pop
out
mov
add
int3
icebp
fild
pop
in
mov
sti
and
addr16
add
xor
inc
movs
xor
cmp
repz
sub
mov
aad
xchg
sbb
test
sub
ret
jbe
call
(bad)
fiadd
mov
repz
push
out
mov
xchg
fldcw
push
sar
inc
test
add
in
dec
mov
and
rcl
xchg
adc
popf
ror
sti
mov
not
lea
sub
clc
cdq
xor
pop
hlt
mov
sub
mov
lods
sahf
add
ror
or
xchg
cmp
in
icebp
in
loop
jecxz
fdivr
push
mov
pop
add
xchg
out
enter
push
sbb
rcl
jo
sti
loope
sub
movs
test
sbb
jmp
mov
push
sub
cs
icebp
pusha
in
aas
popa
xor
bound
fcmovnu
xchg
or
cld
outs
sub
xor
or
mov
mov
inc
icebp
cmp
idiv
gs
(bad)
gs
out
pop
xor
daa
jb
sbb
mov
jg
mov
mov
js
push
int3
lock
out
test
out
push
shr
inc
(bad)
gs
outs
and
ins
jbe
cmps
sti
aaa
cmps
jecxz
pop
jbe
pop
(bad)
std
fnstsw
xlat
mov
sub
ror
imul
daa
cmps
mov
out
jp
mov
xor
shl
cmp
pop
sti
add
(bad)
stos
jg
push
mov
pop
cmp
fcmovne
mov
dec
stos
push
mov
xchg
leave
add
and
out
lods
outs
(bad)
cmp
fld
cld
dec
loop
je
call
lea
xchg
out
mov
adc
es
jbe
mov
(bad)
nop
xor
fwait
ins
loopne
out
ficom
dec
pop
fistp
es
xchg
cmp
mov
jmp
aam
js
inc
fidiv
push
or
test
cmps
shl
shr
shl
mov
sbb
cli
xchg
inc
cwde
pop
ds
cmps
lods
xchg
pop
call
cmp
in
cmps
pop
mov
add
and
push
in
xor
xchg
dec
ror
and
sub
xchg
sahf
inc
mov
mov
dec
mov
ss
pop
je
call
into
sub
(bad)
aas
cld
mov
mov
gs
mov
mov
lds
cmps
inc
jb
and
test
pop
mov
pushf
les
arpl
shl
lods
enter
test
dec
mov
xrstors
xchg
sub
or
cdq
stc
jmp
enter
or
pop
add
test
sub
imul
cmp
jne
mov
test
or
bound
push
xchg
out
movs
icebp
pop
call
xor
cld
pop
in
inc
pop
dec
jns
call
call
add
cs
rcr
push
sub
and
lods
adc
mov
cdq
ficom
push
pop
mov
xor
xchg
pop
mov
fisttp
in
mov
inc
repnz
fwait
dec
lods
sbb
ja
test
cmps
dec
pop
scas
add
mov
lahf
test
add
loopne
imul
and
mov
xchg
jl
ret
int
fwait
(bad)
icebp
pop
addr16
mov
push
(bad)
movs
(bad)
inc
aam
ret
pop
adc
sub
and
pop
mov
in
and
push
xchg
or
and
mov
(bad)
add
mov
xor
mov
scas
push
or
add
mov
mov
popf
jg
cmp
(bad)
jmp
and
out
out
dec
inc
push
(bad)
data16
xor
das
sub
add
mov
fild
je
or
cdq
add
pop
xchg
test
sub
loope
or
mov
in
cmovge
and
xor
pop
push
lock
(bad)
idiv
loopne
sbb
pusha
je
pusha
lds
push
inc
in
scas
pop
sbb
and
retf
fwait
nop
sbb
(bad)
repnz
add
push
scas
push
xor
dec
jmp
push
stc
int3
push
jo
jl
cmp
cli
fist
mov
pop
mov
cwde
enter
and
mov
inc
xchg
jne
(bad)
pop
sbb
adc
dec
cmp
std
inc
mov
and
idiv
loopne
push
mov
ins
adc
xchg
enter
loop
cmp
ror
inc
mov
lds
mov
add
sub
pop
rcl
sbb
je
gs
outs
jnp
lods
dec
cmp
sub
or
dec
adc
shl
sbb
movs
outs
pusha
push
fadd
out
ins
xchg
and
pop
mov
push
xchg
sbb
cmp
ret
jbe
das
mov
mov
hlt
sbb
out
in
into
mov
mov
xchg
and
repz
ss
in
stos
sti
mov
call
lods
repnz
xchg
dec
fcom
mov
les
mov
out
test
jecxz
xchg
sub
(bad)
stc
pop
or
inc
ds
das
cmps
jmp
ja
enter
sbb
test
xchg
int3
rcl
add
(bad)
in
and
mov
pop
imul
xchg
jne
cmp
loop
(bad)
mov
cmps
xor
cmp
push
inc
cmp
inc
pusha
inc
ficomp
xor
lahf
xchg
cmc
stos
xor
add
arpl
shl
cmp
(bad)
lock
jmp
punpckhdq
imul
adc
inc
jnp
sti
push
sbb
pop
pop
fs
xchg
xor
xchg
jae
push
or
(bad)
ds
cmp
push
sub
shl
inc
ins
cmp
inc
mov
call
pop
in
xlat
or
sahf
adc
pop
(bad)
in
inc
fld
je
int3
inc
adc
fsubr
les
(bad)
test
inc
in
pop
push
sbb
dec
push
lods
out
pop
test
jg
mov
movs
cs
repz
pop
lea
xor
dec
dec
movs
cli
das
pusha
sbb
hlt
fisttp
hlt
jp
mov
fimul
ds
xchg
jmp
and
xor
(bad)
and
or
cs
mov
mov
outs
mov
fld
dec
xor
mov
rol
sub
pushw
lods
dec
test
cld
push
ja
ror
mov
call
xchg
movs
loop
fcmovne
lock
ins
inc
sub
ret
inc
shr
shl
sbb
dec
adc
adc
sar
jmp
ds
inc
daa
call
popa
shl
loope
dec
push
mov
jl
(bad)
clc
mov
mov
out
in
dec
inc
fcomi
dec
ret
mov
or
mov
sub
repnz
ret
pop
fcomp
dec
js
mov
jmp
ins
repnz
ret
adc
mov
addr16
popf
daa
stos
mov
xchg
jecxz
dec
les
cmp
cdq
ret
dec
adc
cmps
call
inc
or
mov
imul
xlat
jl
lods
out
mov
into
pop
sub
cmp
xor
mov
mov
imul
mov
mov
ins
pop
ds
lea
xchg
(bad)
pop
jne
jno
jb
mov
mov
adc
xchg
data16
pop
daa
add
jl
dec
retf
popa
(bad)
xor
mov
arpl
cld
sub
sub
xor
adc
ins
mov
push
lea
outs
ret
popa
jg
xchg
imul
ja
aas
jecxz
jmp
and
outs
(bad)
sahf
addr16
mov
rcr
mov
fstp
sub
inc
jg
iret
push
sub
mov
fdiv
jae
push
repz
mov
in
lea
cmp
ins
iret
aam
push
adc
jmp
jle
xchg
cli
sahf
js
arpl
rcr
sub
call
mov
fild
add
fstp
sbb
out
pop
loop
xchg
out
xchg
dec
cmc
mov
jne
jbe
rol
jns
cwde
aas
mov
dec
cmp
xchg
lock
xor
ja
xor
out
sub
mov
loop
adc
xor
jecxz
add
cmp
adc
xchg
cmc
sbb
int3
add
inc
mov
scas
int
call
lahf
xchg
jl
and
scas
mov
push
mov
test
sub
dec
stc
(bad)
clc
pop
gs
mov
xchg
sub
and
(bad)
cmp
(bad)
leave
js
cmp
add
popa
pop
(bad)
mov
outs
sar
nop
sbb
mov
adc
test
test
das
cmps
xchg
ins
xchg
xchg
aam
(bad)
sbb
movaps
js
lock
repz
loopne
mov
lods
jno
add
push
jmp
sub
jne
into
je
pushf
mov
lods
mov
ror
pop
in
aad
rcl
mov
sbb
cmp
mul
inc
or
or
mov
mov
dec
dec
xchg
jl
lods
ja
pop
ret
imul
xchg
popf
pushf
rcl
add
mov
mov
jae
lods
iret
sar
pop
xchg
push
inc
(bad)
in
cmp
test
bnd
outs
dec
nop
mov
mov
mov
stc
mov
stc
or
popf
pop
sbb
xor
mov
or
cmp
test
imul
(bad)
loope
ror
pop
popf
rol
clc
jnp
retf
imul
cmp
sbb
adc
fisub
fcmovnu
push
mov
pop
mov
sbb
push
add
jge
and
mov
scas
pop
ret
popa
adc
cmps
lahf
ret
popa
mov
push
in
xor
add
xlat
inc
cli
ins
xor
push
shl
fucom
(bad)
neg
mov
fnstcw
jmp
in
mov
mov
mov
fucomi
mov
add
int3
mov
dec
cmp
mov
shr
mov
bnd
test
dec
test
push
adc
stos
and
nop
leave
and
lds
mov
mov
test
mov
jns
jle
das
pusha
sbb
fild
pop
fcmovb
mov
scas
adc
inc
jl
stos
mov
gs
movs
cdq
inc
cdq
ss
mov
fwait
dec
(bad)
mov
scas
ins
cwde
mov
dec
and
jl
jmp
sti
mov
inc
sahf
or
test
js
mov
jne
andps
adc
inc
cmp
repnz
jae
dec
xchg
retf
push
loop
and
aas
adc
jb
push
sub
mov
push
ins
jo
lahf
xchg
and
pop
xchg
mov
enter
jbe
push
adc
ins
clc
rol
stos
jl
aam
or
and
xchg
ins
xchg
add
xor
(bad)
cmc
int
pop
sti
mov
ret
jbe
loopne
jbe
(bad)
inc
in
inc
ret
sub
inc
sti
pop
out
push
rcl
les
mov
popa
mov
or
call
xchg
xchg
push
leave
call
cmp
scas
aam
mov
cmps
add
xchg
or
les
cmps
pop
imul
cmps
cmp
pop
pusha
cli
xchg
inc
dec
scas
mov
pop
sar
sti
push
repnz
stos
add
or
adc
xchg
xchg
(bad)
cmp
xor
xlat
push
jl
jp
mov
or
retf
test
je
jmp
and
aaa
fs
bound
ds
sbb
(bad)
aaa
xchg
sub
stos
push
add
jae
mov
div
adc
std
xor
ds
das
sbb
cmp
aaa
cld
(bad)
mov
dec
addr16
jmp
les
and
jle
push
and
loopne
clc
shl
xor
scas
pop
ds
mov
rol
scas
loop
mov
shr
(bad)
cmp
ss
lock
hlt
inc
leave
imul
daa
sub
sub
push
ss
xchg
push
dec
or
mov
in
gs
and
retf
xor
mov
inc
add
push
inc
push
call
inc
out
cmp
ss
pextrw
or
iret
clc
ss
je
loope
push
cmp
mov
add
data16
add
inc
pop
mov
retf
and
mov
sub
mov
push
scas
inc
iret
rol
sub
shl
cdq
and
push
sar
jo
sub
mov
mov
(bad)
out
mov
fsubp
fwait
inc
mov
data16
adc
and
repnz
sti
xor
dec
mov
or
pop
mov
inc
gs
cwde
arpl
adc
inc
mov
scas
push
push
and
cld
fisubr
xor
fmul
rol
jmp
sub
mov
xor
cli
clc
mov
nop
repz
rcl
popa
add
pop
pop
jnp
(bad)
fld
and
mov
pop
jmp
int3
sub
das
or
push
repnz
fist
or
out
fcomi
mov
outs
adc
push
sbb
and
xchg
icebp
xchg
test
add
mov
add
add
push
and
out
jge
dec
aas
jl
or
xor
daa
ret
sbb
out
fst
cmp
movs
mov
xchg
push
mov
std
xor
add
and
sub
sbb
aaa
pop
stos
mov
stos
push
lahf
cmp
cwde
cmp
mov
fstp
ror
xchg
mov
dec
dec
je
mov
push
(bad)
fdivr
loop
jp
push
sub
add
movs
pop
dec
jbe
les
inc
jle
test
inc
pop
pop
fmul
xor
push
mov
arpl
int
in
add
std
test
xchg
jg
std
cmp
arpl
or
rcr
and
cs
and
aas
jae
jns
push
adc
jecxz
repnz
dec
mov
jns
mov
loopne
and
out
inc
enter
inc
dec
adc
sti
push
outs
jl
add
pushf
inc
cmps
arpl
test
and
cmps
push
imul
mov
int
inc
retf
loopne
aad
mov
imul
(bad)
iret
mov
popf
inc
psubsb
rol
mov
mov
pushf
xchg
dec
in
or
cmp
(bad)
cli
into
mov
in
xor
sahf
bound
mov
inc
call
test
repnz
jecxz
out
fdiv
pop
jmp
test
loop
or
jbe
push
ficom
ins
adc
dec
imul
repnz
clc
or
mov
adc
jl
fsubr
movs
(bad)
adc
push
sbb
outs
ret
dec
xor
push
shl
loope
mov
inc
outs
data16
push
push
inc
cmp
fist
push
es
mov
movs
inc
iret
cmps
inc
cmp
sub
fwait
repz
sub
mov
arpl
pop
and
and
pop
pop
add
daa
shr
sub
pop
in
enter
inc
mov
cld
aam
imul
jns
fdivrp
(bad)
jne
cli
pop
cs
sti
inc
push
push
mov
ins
pop
mov
fwait
mov
xor
mov
inc
repz
pop
xor
jae
not
lahf
mov
or
jg
adc
mov
and
mov
call
test
or
xchg
or
scas
pop
or
adc
(bad)
or
xchg
imul
dec
les
lds
dec
shl
(bad)
ret
inc
sub
shl
push
push
fcmovnu
bound
mov
into
or
inc
shr
and
jns
mov
cmps
dec
fiadd
push
fwait
pusha
stc
retf
or
dec
add
mov
sbb
cmp
je
ret
stc
inc
js
call
sahf
idiv
dec
adc
jns
xchg
adc
or
mov
cld
adc
cmp
test
std
sbb
loop
sbb
pop
sbb
dec
cmp
sbb
jae
jle
and
sbb
mov
push
cmps
xor
cmp
mov
dec
fstp
push
pop
(bad)
and
jg
push
(bad)
mul
sbb
pop
mul
mov
daa
sti
dec
(bad)
stc
leave
fs
mov
jmp
cmp
shr
fidiv
and
(bad)
iret
mov
jmp
or
in
jae
xchg
mov
(bad)
sub
jnp
clc
(bad)
ror
js
cmc
sbb
adc
fisttp
push
sub
lds
push
xor
(bad)
add
scas
hlt
xchg
std
xchg
fadd
sub
add
ins
dec
mov
mov
sbb
inc
loop
mov
fwait
mov
pop
rcl
sahf
adc
outs
sub
lock
ins
jge
pop
gs
ja
mov
test
inc
mov
fadd
dec
pop
ja
push
inc
pop
aad
into
push
loop
inc
in
out
dec
(bad)
mov
add
rol
inc
call
pop
adc
sti
sbb
fild
xor
hlt
jne
cld
mov
jno
and
std
addr16
ins
inc
popa
cdq
mov
xchg
popf
mov
mov
or
mov
jbe
cmps
les
out
fbld
cmp
mov
test
pop
in
daa
sub
fs
jp
jbe
cld
loope
mov
icebp
fucomp
sbb
adc
stos
push
scas
in
mov
not
imul
adc
add
ja
mov
mov
jbe
or
das
and
sub
repnz
or
pop
daa
fcom
push
cmps
add
pushf
stos
(bad)
push
ret
pop
xchg
lock
add
dec
dec
push
mov
call
aas
inc
call
je
adc
adc
jg
movs
mov
mov
xchg
aaa
add
xor
dec
es
out
push
adc
(bad)
lea
xchg
arpl
js
ds
gs
repz
or
and
inc
cwde
movs
cmp
mov
dec
push
push
popw
push
movs
cmc
cmp
fbstp
pushf
jp
clc
imul
xchg
popf
push
jl
popf
push
cli
rol
gs
cmp
mov
cmc
cli
rcr
cld
mov
dec
fwait
dec
jno
cmp
inc
mov
aas
mov
cwde
lods
adc
sbb
cmp
jl
mov
mov
lods
repz
or
push
pavgw
ins
push
adc
jmp
mov
jge
pushf
cs
out
jle
idiv
loop
pcmpgtd
mov
lahf
repz
(bad)
jbe
mov
pusha
into
push
inc
push
inc
inc
frstor
into
repz
or
ds
loop
fld
jne
test
mov
loope
dec
sbb
sbb
outs
popf
inc
jmp
mov
fsub
icebp
dec
repz
out
inc
sbb
fidiv
test
pop
pop
je
popf
xlat
pop
push
dec
addr16
nop
mov
jg
sbb
fistp
adc
aad
mov
fnsave
pop
and
int3
xor
push
jmp
fsubr
dec
sahf
fdivrp
ret
ins
jmp
xor
lods
pushf
xor
push
(bad)
pop
sti
jbe
and
push
test
cmc
xor
add
test
mov
ins
popf
or
or
sti
pop
rol
cmp
or
js
xor
add
je
mov
mul
add
shr
add
bt
iret
loope
call
mov
adc
scas
(bad)
or
mov
dec
dec
sbb
mov
int
lds
les
jb
cmp
mov
cs
or
jb
jmp
imul
sub
es
iret
addr16
mov
call
test
add
ds
shl
loopne
xchg
outs
out
mov
leave
mov
enter
ja
fsubr
stc
ss
sub
mov
dec
(bad)
or
push
cmp
daa
push
out
jno
lods
cmps
fst
push
enter
fbld
fist
push
iret
aam
push
fmulp
scas
icebp
jge
icebp
rcl
movs
icebp
or
cwde
jb
inc
inc
and
rol
scas
arpl
hlt
or
push
mov
sahf
cld
jmp
loope
inc
jb
adc
cmp
adc
xor
and
xchg
inc
xchg
ret
cdq
hlt
test
data16
mov
and
rol
dec
shl
push
loopne
mov
add
jg
in
push
pop
push
ins
jmp
push
or
pop
and
mov
or
cmp
nop
add
data16
icebp
mov
or
outs
imul
adc
lods
dec
push
cmps
ins
sub
test
adc
call
mov
mov
xchg
sahf
xor
cmc
loope
inc
push
retf
aas
in
pop
stos
dec
jp
and
movs
jnp
dec
or
mov
jnp
stos
pop
pop
pusha
xchg
imul
imul
mov
out
lea
(bad)
jbe
ins
jmp
jmp
out
mov
out
xor
sbb
adc
inc
pop
(bad)
fdivrp
adc
cdq
psubusb
repnz
(bad)
in
cli
xchg
nop
mov
mov
xor
inc
push
mov
(bad)
lock
ret
js
clc
sbb
fist
cld
cmc
sub
ins
rol
mov
push
cmp
inc
xchg
or
test
cmc
xchg
xchg
inc
pop
fwait
test
cwde
pop
je
jle
xabort
fucom
sti
push
adc
lds
pop
pop
xchg
mov
in
pop
test
sub
mov
mov
cmp
std
or
lds
ror
popf
hlt
fs
je
lahf
push
pop
fldcw
xchg
test
mov
push
or
mov
cmp
movs
cs
push
add
and
or
pop
and
cmps
jmp
mov
(bad)
dec
xor
add
add
xchg
mov
outs
pmuludq
test
inc
xchg
pop
loopne
(bad)
pop
xchg
dec
je
retf
icebp
in
rcl
cwde
pop
dec
xchg
xor
xchg
sar
stos
(bad)
jmp
xchg
inc
in
and
cmp
in
test
cmp
and
cmps
dec
std
(bad)
fimul
stos
xchg
mov
jge
(bad)
into
test
loope
and
in
mov
cmps
call
push
aaa
nop
hlt
imul
cwde
mov
pop
xchg
cmp
inc
cli
pusha
scas
jns
dec
jmp
mov
scas
fstp
xchg
stc
mov
ficom
int3
iret
jge
jbe
sbb
inc
rol
fs
sbb
push
fild
icebp
jmp
gs
mov
cmps
adc
adc
dec
fadd
(bad)
shl
out
sar
retf
movs
pushf
push
imul
fsubr
pushf
mov
(bad)
adc
dec
or
mov
shl
jne
jae
mov
pop
or
bound
rol
popa
jge
stc
xchg
lock
and
adc
lods
mov
xchg
mov
adc
pusha
or
push
aas
fnstsw
cmps
lds
loop
ins
add
jno
mov
dec
push
push
aas
jg
jb
les
lods
movs
mov
xchg
out
leave
sbb
ins
retf
das
icebp
jnp
cmp
jle
mov
or
mov
xlat
add
push
pop
add
adc
adc
test
mov
or
mov
mov
aas
pop
pop
mov
imul
adc
adc
xchg
or
sub
jae
xchg
aam
jge
sbb
pop
sub
mov
(bad)
xchg
adc
mov
jae
loopne
xchg
pop
mov
daa
or
jne
cld
mov
jmp
nop
push
cmp
jne
mov
pop
loope
jle
sub
mov
test
add
push
pop
sar
adc
push
add
int3
pop
jno
mov
test
outs
xchg
icebp
mov
cmp
sub
cmp
ss
ja
mov
in
ins
sbb
cli
xchg
push
lods
pop
retf
ins
xchg
ds
jl
loop
add
inc
push
sahf
mov
mov
jo
test
mov
jge
call
imul
inc
(bad)
(bad)
mov
daa
pushf
xor
sbb
lods
(bad)
cmp
push
pop
in
xchg
das
inc
mov
arpl
sbb
stc
out
call
retf
cmc
xor
daa
xlat
push
adc
shr
inc
(bad)
addr16
bound
cli
imul
pop
daa
mov
mov
hlt
sub
jecxz
jnp
out
cmp
adc
cmp
cwde
push
loopne
loope
shr
mov
arpl
movs
or
cmp
rol
pop
cmp
repnz
sbb
push
lods
adc
push
das
mov
xchg
xchg
ins
arpl
cmp
jae
mov
or
in
and
add
adc
dec
cmp
ins
sub
fst
adc
leave
sbb
mov
or
push
xor
(bad)
push
mov
ret
aaa
dec
or
lock
cmp
sbb
jbe
into
push
das
cmp
push
test
dec
jne
retf
(bad)
sbb
jle
imul
cs
dec
rcr
jb
arpl
or
movs
inc
sti
in
sbb
shl
pop
jl
dec
sub
and
adc
push
mov
mov
add
and
retf
or
xchg
mov
pop
aaa
sbb
iret
or
pop
es
fisttp
pusha
ja
cs
test
and
jmp
sub
sub
sub
mov
arpl
push
cmp
jecxz
cld
jbe
sbb
mov
xchg
adc
inc
popa
cld
icebp
mov
jnp
outs
and
or
xchg
xor
lods
ins
mov
xor
jmp
stos
mov
push
cmp
cli
dec
aam
neg
into
mov
pop
jns
test
mov
mov
lods
lods
xor
arpl
iret
and
cmps
adc
ror
lds
jnp
ret
xchg
daa
pop
scas
or
jns
in
mov
xchg
inc
pop
add
scas
jecxz
out
or
outs
and
cs
pop
xor
scas
shr
mov
inc
out
fs
mov
popa
push
add
rcr
sbb
pop
jae
jecxz
xchg
or
cli
sbb
jl
ins
mov
inc
mov
fsubr
leave
mov
fyl2xp1
cdq
stos
jle
sbb
cld
inc
inc
and
bound
xor
xor
out
mov
retf
mov
xor
cmp
loopne
aad
(bad)
mov
adc
push
mov
cld
jmp
std
jmp
xor
repz
jbe
or
fisub
test
push
adc
popf
je
mov
lea
add
and
test
cmp
cmps
fdivr
fcomip
(bad)
std
jbe
inc
or
mov
xchg
or
stos
fcom
imul
imul
jg
ror
fwait
pop
out
or
jne
dec
cld
xor
gs
mov
xchg
mov
push
xchg
adc
xchg
shl
cmp
pop
icebp
(bad)
mov
xchg
das
push
stos
dec
aaa
cmc
or
push
inc
stos
dec
retf
xor
mov
or
sub
mov
mov
rol
xor
shl
dec
mov
cs
leave
pop
mov
shl
mov
sbb
xchg
test
rcr
inc
jno
cmp
loope
mov
dec
xchg
mov
je
xor
mov
popa
push
adc
scas
jnp
test
pop
enter
test
(bad)
jmp
or
cdq
ficom
pop
inc
sub
jg
div
repz
popa
add
cdq
mov
mov
jbe
ret
pusha
sahf
ret
xchg
leave
cmps
and
call
jo
xchg
shl
dec
not
movs
add
cmps
mov
inc
push
adc
inc
add
in
in
dec
add
sub
in
push
mov
cmp
add
cmp
test
jo
es
jg
shr
cmp
jo
cmp
mov
jle
push
xchg
stc
mov
cmc
inc
mov
push
dec
iret
sub
add
push
mov
repz
pop
shr
pop
mov
(bad)
xchg
(bad)
icebp
mov
lds
mov
or
mov
adc
pop
push
push
inc
jb
jge
push
fisubr
call
xor
das
mov
loope
idiv
sbb
inc
mov
fwait
dec
mov
dec
repz
popf
sub
pop
pop
or
outs
jge
lods
imul
mov
jmp
xchg
es
push
mov
jp
jbe
(bad)
div
popfw
pop
nop
add
mov
arpl
in
xor
cmp
mov
lock
push
mov
clc
pusha
inc
push
ret
jmp
std
ret
call
cwde
je
sub
lods
cdq
cmps
jbe
cmps
sub
loope
push
adc
aad
test
shr
cmp
mov
or
mov
jp
adc
int
les
push
and
imul
dec
jno
les
stos
mov
mov
cwde
popf
repz
ret
xchg
and
or
shr
jno
inc
jecxz
popa
shr
out
sub
fmul
lea
int3
aaa
jmp
shr
xchg
and
lds
add
xchg
aad
jbe
fwait
retf
adc
push
sbb
xchg
xchg
push
(bad)
and
rcr
push
pop
xor
dec
xchg
pop
and
lods
imul
fdiv
lea
das
and
sbb
xor
lds
push
dec
in
or
xchg
push
test
cmp
adc
lods
lahf
sbb
mov
sbb
inc
addr16
push
dec
mov
dec
repz
jo
cmp
mov
pop
retf
or
push
lea
mov
sbb
aas
icebp
adc
test
cmc
dec
daa
cmp
(bad)
call
jg
fcompp
int3
xor
cmp
cmps
in
loop
sub
sub
inc
dec
mov
lds
mov
stos
mov
xchg
aad
add
jmp
mov
fisttp
mov
shr
daa
das
mov
jp
xchg
fwait
rcr
pop
movs
jecxz
pop
sahf
adc
xor
mov
adc
push
xchg
scas
add
add
cmp
ret
imul
inc
sub
gs
mov
xor
imul
stc
outs
outs
clc
mov
pusha
(bad)
jmp
inc
in
push
sub
add
out
lock
stc
jl
in
mov
data16
and
jg
add
test
mov
or
pop
pushf
sbb
sub
es
movs
cld
xchg
sub
pop
jmp
mov
adc
mov
push
jle
pop
xchg
add
xchg
cmp
and
das
imul
adc
xor
mov
and
mov
push
pop
push
xchg
fidiv
movs
or
das
mov
xor
xor
jg
pop
dec
mov
or
add
mov
(bad)
fimul
push
mov
out
cmc
ins
or
movs
fiadd
push
jmp
sbb
push
add
movs
cmp
inc
minps
mov
loop
shl
out
ja
fstp
push
repnz
push
mov
xchg
fild
mov
mul
push
mov
iret
(bad)
inc
mov
cmp
out
mov
push
scas
pop
sub
inc
push
int3
mov
or
and
ret
leave
(bad)
lea
imul
ds
sbb
pop
gs
ret
jne
mov
push
rol
inc
js
pop
mov
retf
mov
jmp
adc
push
stc
or
cdq
push
fnstcw
ins
test
pop
dec
and
cwde
add
pushf
enter
pop
xor
and
push
dec
in
test
and
ins
inc
ins
xchg
ins
daa
cmps
imul
adc
cmp
cmp
fs
jbe
ja
fild
xchg
push
mov
out
cdq
mov
out
mov
enter
popa
popa
call
and
inc
mov
cs
jp
or
lods
iret
loope
inc
mov
je
(bad)
ss
pusha
mov
jbe
lock
cli
mov
aaa
mov
repnz
pop
push
aas
std
jns
xor
aas
nop
bound
add
ret
stc
outs
mov
add
push
sbb
fsub
add
ror
and
xchg
ja
aas
jecxz
pop
dec
push
pop
out
rcr
scas
pop
neg
sbb
or
or
mov
ja
jge
add
das
inc
sbb
inc
fsub
mov
fidiv
ja
inc
popa
retf
adc
xchg
push
add
bnd
xor
xchg
inc
pop
cmp
sub
out
fsub
aaa
fs
mov
add
dec
leave
in
jb
test
movs
js
xchg
jo
mov
pop
sbb
cmp
cmp
sub
jno
pop
push
outs
add
xor
xchg
je
or
out
lods
rcl
fadd
out
sub
xchg
dec
jne
sub
mov
add
inc
stc
jmp
test
lea
stos
gs
stc
test
ja
js
xor
push
pop
test
ret
cmp
in
xor
iret
int
add
xchg
shr
out
push
jne
fdivr
stos
dec
test
mul
mov
inc
push
aas
cmp
add
icebp
push
sar
imul
dec
cmc
dec
out
dec
inc
and
stc
mov
push
shl
xchg
jg
lahf
xlat
mov
(bad)
push
jb
sbb
stos
xor
sbb
(bad)
aas
jmp
repnz
xor
pop
test
sub
fdivp
lds
nop
sub
pop
pop
xor
fbld
in
and
xchg
mov
adc
pop
push
mov
inc
icebp
mov
es
mov
dec
adc
dec
(bad)
jmp
rcl
sar
sti
rol
pop
mov
lods
push
jnp
inc
pop
cmp
sub
pop
loopne
jp
mov
push
ss
aam
add
dec
shl
ja
cdq
sub
push
adc
xchg
fwait
outs
ins
(bad)
aam
cmps
adc
xor
cdq
sbb
ins
adc
cmc
mov
iret
int
mov
inc
pop
or
xor
xchg
mov
fwait
jle
idiv
mov
inc
or
imul
cmp
dec
addr16
xor
jl
es
mov
ret
or
and
xor
(bad)
mov
aam
stos
data16
cmp
(bad)
jecxz
aas
les
xor
pusha
rcl
shr
push
pop
shl
test
push
adc
mov
stos
cmp
adc
scas
cs
jmp
jns
fsub
push
adc
jbe
xchg
jo
loop
cmps
popf
cdq
xchg
inc
add
push
ftst
sub
outs
(bad)
cmps
mov
xchg
xchg
mov
jmp
out
and
scas
jg
movs
jns
adc
cli
(bad)
or
push
stc
sub
imul
push
adc
ret
cli
cmp
pop
sahf
outs
inc
fnstsw
cmp
(bad)
rol
in
repnz
dec
fcomp
test
sar
imul
add
xchg
pop
inc
and
mov
arpl
inc
jns
daa
mov
ja
int
sbb
push
es
popa
cdq
into
test
lods
or
call
pop
pop
jns
mov
cmp
cli
push
add
in
sbb
aad
cwde
movs
pop
test
call
in
mov
test
adc
je
inc
mov
xor
adc
sub
push
sbb
and
push
jmp
fdivp
sbb
mov
retf
xor
hlt
stos
lods
pop
pop
ret
jmp
jge
dec
mov
jp
adc
int3
leave
add
push
ret
and
jle
pop
xchg
out
(bad)
aaa
ret
fiadd
inc
clc
add
dec
les
mov
gs
(bad)
daa
ret
out
xor
sbb
(bad)
mov
pushf
test
xor
repnz
sysexit
daa
mov
adc
cdq
mov
das
xchg
add
jnp
daa
sar
test
and
pop
xchg
scas
loope
lea
packssdw
adc
(bad)
clc
jno
ins
iret
lods
cmp
gs
clc
add
push
out
xor
xor
xor
inc
push
nop
add
jl
mov
rcl
push
push
cdq
gs
sbb
scas
inc
inc
xor
pop
movs
test
adc
(bad)
fsub
aaa
cmp
ret
mov
inc
lock
add
push
fldenv
inc
outs
sahf
cmc
scas
rcr
in
scas
fadd
pop
mov
pop
add
pop
pop
not
and
sbb
push
pop
sbb
add
lods
data16
loope
jb
inc
mov
lahf
mov
enter
lahf
xor
jp
les
and
test
(bad)
mov
std
inc
adc
xchg
xchg
lods
es
xor
fs
cmp
mov
cmp
mov
cli
jnp
sub
mov
push
add
add
sbb
jge
sar
std
pop
mov
cs
add
jbe
pop
stos
push
ror
xchg
push
(bad)
aad
mov
int3
outs
test
sub
pop
out
xor
push
into
inc
push
aad
xchg
push
pushf
outs
jne
in
scas
(bad)
stos
nop
lds
stc
shr
test
inc
cmps
push
xor
ror
aas
pusha
pop
rol
mov
psubsb
dec
test
in
dec
aaa
inc
sbb
ret
jne
ja
jmp
adc
add
fs
jno
mov
sub
mov
stos
in
or
rol
mov
shl
jg
and
mov
mov
rcl
cmps
inc
shl
and
xchg
fadd
and
add
outs
mov
mov
loopne
mov
add
pushf
mov
mov
mov
sbb
retf
icebp
repz
test
xor
fistp
lock
retf
jp
(bad)
lds
retf
ret
push
sti
push
add
pop
repnz
add
or
mov
sub
jno
jo
cmp
jp
push
dec
ins
pop
lock
into
sbb
mov
dec
cs
in
jns
sbb
pop
pop
and
fisttp
and
mov
out
jbe
xor
mov
push
call
cmp
cmp
std
xchg
dec
std
dec
xchg
nop
das
pop
sub
add
push
fstp
sbb
mov
ins
cs
pushf
out
pop
xchg
loopne
sub
push
mov
(bad)
mov
xchg
retf
test
int
xchg
(bad)
mov
clc
cmp
push
sbb
mov
sub
and
sub
jmp
push
ss
inc
mov
xor
cmp
jmp
inc
fdiv
stc
int3
data16
and
add
outs
mov
je
test
adc
push
aam
pop
in
dec
test
and
out
push
mov
ret
push
sbb
shl
test
ret
add
pop
mov
xchg
mov
in
test
xchg
xor
xor
push
lahf
cmp
stos
dec
add
xchg
add
jns
(bad)
pusha
dec
mov
inc
pop
aam
sub
out
rcr
sar
pop
jl
xor
cmc
aam
mov
push
test
jno
add
jecxz
push
mov
aam
pop
xchg
stos
(bad)
repnz
jo
pop
inc
(bad)
cmp
addr16
mov
fadd
fs
or
sub
dec
pop
out
cmps
mov
xchg
out
jle
shr
scas
frstor
stc
sti
xchg
push
inc
(bad)
jle
je
jp
or
jl
neg
(bad)
je
adc
jge
fimul
test
or
mul
jmp
xor
and
(bad)
mov
sub
retf
aas
ds
stc
into
cmp
mov
mov
(bad)
add
pop
out
mov
sbb
retf
push
stc
ss
or
mov
jmp
in
add
jbe
(bad)
xor
cwde
push
inc
push
add
inc
mov
cdq
dec
popf
in
ret
pop
or
cmp
sbb
adc
das
lods
adc
test
adc
or
ins
jmp
and
pop
data16
pop
sub
daa
jmp
in
dec
inc
add
pop
imul
sub
cdq
push
loopne
cmpxchg
into
jbe
xchg
mov
pop
bound
mov
sub
es
add
cwde
in
add
add
xchg
test
ficomp
mov
out
xchg
mov
mov
mov
fs
(bad)
enter
jno
inc
xchg
bound
hlt
sub
mov
pop
jnp
sahf
mov
inc
(bad)
or
push
mov
mov
pop
mov
adc
mov
sti
fld
lds
dec
jbe
shl
push
mov
mov
fimul
jecxz
das
pop
cmp
retf
jne
push
daa
es
jmp
rol
mov
sub
mov
mov
dec
aaa
gs
pop
(bad)
repz
(bad)
pop
ins
stos
sub
pusha
xor
ds
xchg
in
jmp
add
inc
dec
lds
lods
mov
imul
clc
fsubr
jp
in
jae
in
add
xchg
(bad)
in
push
(bad)
and
pop
test
cmp
(bad)
outs
mov
adc
mov
rcl
mov
out
rol
lods
in
add
xor
xor
mov
inc
pop
imul
jmp
pop
push
pop
adc
cmp
daa
jl
sbb
sbb
hlt
repz
sbb
cmps
fidivr
out
jne
jbe
mov
rep
pop
sahf
out
les
pop
pop
cmp
adc
ins
ja
jnp
pop
out
pop
xor
sbb
sar
jmp
push
(bad)
lock
cmp
mov
sub
mov
mov
pop
fdiv
dec
mov
sti
mov
or
out
sbb
out
(bad)
jmp
(bad)
imul
popa
clc
or
fnstcw
fisttp
in
add
xchg
loope
cmp
aas
and
mov
cmp
sbb
jl
mov
cmp
mov
popa
inc
xor
sahf
inc
imul
adc
mov
dec
loopne
fstp
cmp
and
mov
cmp
adc
mov
outs
loope
dec
into
ss
pusha
adc
int
push
retf
or
jno
mov
adc
push
int3
iret
push
add
jbe
jno
fist
sub
pushf
sbb
ret
jmp
and
cmc
pop
test
push
mov
aad
bound
sti
iret
or
test
jo
call
adc
inc
nop
sbb
ins
mov
push
xlat
dec
cs
movs
cmp
inc
sar
cmovbe
xchg
mov
fistp
sbb
pop
aam
les
lock
mov
inc
bound
cmp
sbb
mov
rcl
ins
dec
rcl
clc
jno
jg
mov
(bad)
push
dec
push
jne
test
adc
cli
out
into
idiv
dec
mov
dec
mov
shl
ja
stos
push
aas
ficomp
fadd
jb
lahf
jp
das
add
arpl
hlt
outs
(bad)
cmc
jmp
movs
mov
movs
loop
test
frstor
and
das
adc
dec
vcmpps
jbe
xchg
ret
addr16
jnp
ret
leave
lods
sti
cmp
ret
pop
sub
sar
xchg
mov
adc
inc
xor
xor
mov
xor
mov
mov
fwait
std
inc
retf
mov
pop
sahf
lahf
and
mov
and
push
sub
or
pop
adc
and
sbb
cmp
stc
pavgb
rol
test
adc
daa
pop
adc
shr
jecxz
or
push
jecxz
test
scas
lea
cwde
add
sub
adc
test
fucomi
mov
mov
shr
mov
sub
jg
sub
inc
sti
cmp
lds
stos
das
movs
mov
aas
cmp
popf
loop
cmp
fwait
sbb
es
mov
add
js
dec
sbb
dec
push
cmp
ficomp
sub
in
ss
mov
jecxz
cmp
arpl
pop
and
and
jae
cmps
sbb
pop
sub
or
out
test
xor
test
mov
test
adc
xlat
test
mov
das
jp
sbb
xchg
add
arpl
(bad)
push
pop
pusha
fwait
jno
fwait
cmp
push
push
xor
loope
call
dec
or
outs
call
add
inc
xor
mov
ret
pop
mov
sub
std
daa
mov
retf
adc
bnd
inc
add
fisttp
xor
sti
mov
sbb
fistp
mov
inc
cmp
inc
fs
test
push
jmp
cmp
and
jmp
in
aad
mov
inc
mul
sbb
int
push
cld
dec
std
xor
test
mov
cmps
mov
push
fld
mov
imul
cmp
mov
in
jecxz
and
push
imul
call
add
bound
pushw
movs
cs
or
lea
ror
sbb
mov
adc
jbe
and
cmp
mov
mov
fcomp
xchg
outs
and
lock
out
mov
out
outs
ja
jmp
jno
in
lahf
pusha
xchg
sbb
movs
stos
inc
xchg
xchg
in
or
mov
leave
xchg
sbb
fbld
push
shr
sub
push
bound
xchg
loopne
mov
mov
push
or
bound
sub
mov
dec
sbb
mov
jno
jmp
mov
mov
mov
push
imul
call
into
mov
push
cmps
and
add
dec
(bad)
xor
mov
jbe
xor
psubusw
mov
jmp
cmc
pop
lods
jo
and
je
gs
inc
movs
sbb
lods
sar
mov
xchg
mov
(bad)
adc
or
add
ds
lds
in
shr
sar
cmp
pop
ins
adc
hlt
addr16
ret
jno
sub
(bad)
jbe
dec
in
jne
push
stos
add
sbb
adc
mov
test
push
sub
ins
fwait
scas
adc
daa
mov
adc
jmp
xlat
clc
ins
xchg
aas
sub
clc
(bad)
xor
jp
mov
aad
mov
sub
fcmovnbe
inc
mov
adc
ret
mov
pusha
jnp
push
out
mov
das
xchg
and
jo
mov
std
cmp
mov
inc
nop
pop
aam
mov
jae
dec
pop
retf
stos
pop
pop
inc
jg
jns
mov
sbb
in
fcomp
test
std
push
jnp
outs
and
shr
iret
pop
inc
ror
arpl
add
ror
adc
xor
add
inc
loope
dec
sub
and
hlt
dec
mov
and
mov
daa
retf
sbb
retf
lds
jp
jmp
push
xchg
std
xchg
repnz
ret
sub
xor
xor
data16
cmc
sub
loopne
mov
jb
push
mov
arpl
inc
fcom
bound
jbe
aam
retf
mov
imul
movsx
call
jnp
push
dec
pop
rol
stc
in
icebp
mov
aad
test
push
mov
pop
xor
jmp
nop
inc
pop
stos
daa
and
adc
lods
shl
sbb
xchg
daa
(bad)
out
in
inc
gs
stos
mov
icebp
inc
sbb
jmp
inc
xchg
xor
idiv
dec
jo
loope
dec
idiv
in
mov
or
movs
jmp
xchg
sub
repz
pusha
push
jge
cmps
mov
xor
sub
ffree
mov
outs
rol
rcl
mov
popa
and
test
sahf
fs
and
out
cmc
inc
mov
nop
xchg
cmp
int3
add
retf
js
scas
inc
and
mov
sbb
push
jle
retf
int
dec
inc
sbb
movs
call
inc
in
mov
out
sub
(bad)
mov
sar
add
xchg
jne
shl
fbstp
pop
adc
lea
je
adc
dec
pop
(bad)
add
fbld
ja
cld
js
shl
shl
retf
das
fidiv
test
mov
mov
sub
test
adc
sbb
mov
repnz
in
sbb
iret
adc
or
cmp
sub
ja
push
jp
dec
das
fisubr
inc
and
push
or
out
neg
pop
pop
add
(bad)
mov
gs
lds
xchg
sbb
(bad)
adc
pop
popaw
aam
mov
inc
pop
xchg
hlt
xor
imul
lods
ss
xchg
cmp
rcr
push
ins
pop
jmp
into
bound
xlat
lahf
sub
push
push
cmps
inc
imul
scas
ss
fucomp
inc
or
loope
and
push
add
iret
int3
in
xchg
cmp
push
sbb
inc
(bad)
mov
sub
test
cmp
xchg
adc
mov
in
ds
or
or
in
jo
dec
pop
add
jne
in
push
loopne
sbb
xchg
int
cmp
je
and
xor
lods
dec
cmp
cdq
inc
sub
icebp
cs
enter
(bad)
shr
ss
jl
add
mov
or
fadd
enter
mov
inc
push
push
outs
daa
sub
push
fcom
pushf
jle
cdq
mov
mov
jg
arpl
mov
ins
aas
movs
loop
or
repnz
in
sbb
xor
and
ds
repnz
fst
push
mov
ins
xor
loope
out
int
xor
pop
daa
adc
mov
call
push
cmp
jmp
cmps
mov
(bad)
or
push
jno
enter
popa
jno
dec
push
cmp
jae
mov
jmp
or
test
and
jmp
jge
jo
push
stos
mov
inc
pop
and
fnstenv
pop
mov
rcr
xchg
in
xchg
mov
fsub
and
cmp
or
loope
inc
add
mov
jne
mov
outs
jne
fist
adc
and
out
add
inc
leave
pop
jne
shl
iret
dec
fstp
mov
movs
jecxz
shr
inc
pop
repz
aas
jmp
adc
mov
fcomp
cmps
lahf
pop
jle
jnp
fmul
dec
inc
push
ins
arpl
aam
ins
popa
fs
pop
xor
push
std
dec
jbe
dec
xchg
arpl
mov
jbe
pop
test
sbb
and
rol
test
repnz
jmp
sub
mov
adc
mov
retf
dec
imul
outs
and
cwde
test
(bad)
jmp
ss
pop
test
ins
adc
xchg
mov
mov
mov
movs
pop
sahf
mov
mov
test
xchg
and
pushf
int
mov
fnsave
gs
sbb
movs
and
jmp
push
je
dec
cmp
push
xchg
xor
repz
imul
mov
xchg
in
mov
sub
jns
mov
lahf
fsub
hlt
or
pop
lds
imul
bound
inc
xlat
adc
data16
sar
push
adc
jo
push
cmp
mov
aaa
int
dec
pusha
dec
fadd
xchg
dec
popa
xchg
inc
sbb
rcl
and
inc
(bad)
lea
adc
xor
ds
fs
inc
fidiv
pop
repnz
imul
sbb
loopne
jo
clc
dec
test
dec
xchg
(bad)
pop
test
(bad)
add
pop
jns
push
jmp
movs
clc
mov
stos
ret
xor
lea
jnp
mov
mov
add
pop
lods
aad
pop
cli
pop
or
out
cmp
jecxz
sbb
inc
cli
jge
icebp
dec
sti
test
repz
(bad)
fs
fild
mov
enter
push
xchg
or
fs
xchg
or
js
idiv
int
and
nop
jns
xchg
push
mov
and
icebp
dec
cmp
int3
mov
inc
movs
pop
sub
cmp
mov
pop
xchg
mov
js
mov
push
jmp
pop
push
scas
add
inc
dec
in
test
jbe
jae
jnp
js
movs
fadd
int3
pushf
add
push
jno
sbb
push
pop
and
mov
xor
das
xchg
dec
fnstenv
lahf
pop
push
xchg
xor
pop
xor
sub
cdq
push
push
mov
add
pop
hlt
jnp
clc
ds
ret
out
xchg
jle
jbe
jnp
shl
inc
adc
fcmovne
xchg
push
repnz
lock
ss
lock
fbld
xchg
je
bound
ret
imul
push
icebp
rcl
inc
mov
xchg
pop
int
lds
int
mov
cmp
rcr
bnd
js
and
push
mov
imul
inc
sbb
imul
daa
pop
adc
scas
jmp
push
xchg
dec
pop
jns
xor
push
inc
xor
sub
scas
jae
es
sbb
cmp
cwde
(bad)
(bad)
test
in
sahf
pop
(bad)
xchg
cmp
stos
ins
pop
cdq
mov
fisub
stos
int3
pop
push
jge
or
jle
nop
jl
mov
add
pop
hlt
aam
std
add
ss
ds
mov
inc
inc
ins
test
loop
loopne
sbb
jp
outs
in
lock
gs
js
jno
xor
sub
into
out
adc
and
mov
mov
fs
mov
bound
xor
push
mov
repz
sub
or
pushf
sahf
xchg
inc
shl
mov
popa
pop
imul
(bad)
in
shl
mov
dec
movs
lea
sbb
in
dec
adc
lods
es
enter
(bad)
xchg
daa
iret
jns
pop
mov
fidiv
inc
mov
lods
daa
mov
js
xor
outs
xchg
pop
jne
sub
retf
call
rcr
pop
inc
sbb
fdivr
mov
retf
cdq
xchg
outs
enter
ret
call
es
je
pop
in
out
fld
movs
mov
ficomp
sbb
call
cmp
retf
sbb
in
add
cmps
cmp
movs
dec
lds
and
es
pop
push
inc
push
or
or
jl
ret
push
fwait
retf
adc
ret
cdq
adc
sub
pop
rol
ds
add
xchg
xor
add
push
sub
sbb
jg
fidivr
outs
aaa
ret
ins
mov
adc
dec
mov
inc
ds
sti
cmps
repnz
pop
es
mov
mov
pop
retf
dec
xchg
and
bound
mov
lea
jns
jmp
mov
and
imul
xchg
out
push
inc
and
test
add
or
cdq
cmc
repnz
out
dec
jle
push
jp
cmps
mov
mov
xor
sbb
sub
outs
jp
jmp
in
or
pop
lahf
or
in
push
mov
xchg
cmp
test
loop
pop
lds
cdq
cwde
and
int
cmps
sub
pop
xchg
popa
ror
xor
xor
jno
ins
fs
xor
or
(bad)
and
retf
mov
cwde
ins
push
cwde
test
xor
mov
pop
or
popa
rol
sub
jmp
fild
or
shl
repnz
aad
cmps
jmp
push
ret
pop
scas
std
mov
push
jmp
dec
addr16
retf
mov
lea
call
js
pop
jae
jge
cmp
jge
scas
xor
cmc
sbb
aam
jle
inc
pop
inc
call
int3
dec
mov
push
out
retf
jle
and
bt
dec
or
pop
retf
mov
cmps
adc
push
pop
inc
sub
push
ins
icebp
imul
cmp
mov
sbb
pop
popf
dec
clc
mov
mov
mov
cli
mov
push
inc
xlat
jge
mov
dec
cwde
jmp
lods
fwait
pop
inc
xor
fs
mov
out
into
jmp
jle
pop
jo
jae
lea
repnz
and
mov
lods
mov
jae
xor
push
sbb
cdq
xchg
mov
pop
mov
test
mov
mov
cmp
in
cs
mov
push
ins
shr
xor
ret
mov
(bad)
lea
(bad)
call
push
mov
movs
xchg
lods
mov
jmp
gs
inc
jne
das
sub
jnp
xor
xor
jle
call
push
jmp
xlat
stos
arpl
lock
out
inc
jl
pop
cmps
call
inc
mov
inc
jo
in
std
test
jp
es
mul
push
xchg
out
ja
repz
sbb
add
jle
cs
jnp
sub
push
mov
xchg
mov
mov
sub
xor
and
lods
fwait
or
cdq
sbb
outs
pop
mov
fnstcw
fnstenv
dec
out
shl
pop
mov
cmp
cmp
push
mov
aas
enter
(bad)
ins
imul
pop
out
add
dec
sbb
not
neg
stos
test
pop
mov
ins
(bad)
sub
cmp
add
sbb
dec
rcr
lahf
pop
cld
push
test
xchg
gs
adc
imul
stos
ins
add
nop
ficom
inc
xchg
jg
(bad)
sbb
mov
sub
jmp
cld
xchg
lock
das
jl
imul
movs
and
bound
or
cmps
js
test
(bad)
fbstp
jne
pop
xor
dec
pop
xchg
test
jns
out
add
es
fwait
imul
mov
mov
ficom
(bad)
cli
or
jmp
cmp
dec
cmp
mov
repnz
test
mov
push
mov
dec
inc
(bad)
sti
jns
jge
fwait
mov
test
imul
iret
push
cli
dec
ror
jge
test
shr
mov
jae
add
sbb
mov
in
imul
add
xor
and
jmp
and
and
rcr
jmp
loope
in
repz
sub
jns
int
out
movs
mov
repz
hlt
mov
shr
jmp
test
cld
push
iret
je
lds
add
sbb
mov
push
jmp
or
add
jae
pop
std
in
push
or
or
pop
addr16
mov
popa
jl
test
push
adc
mov
clts
mov
sub
xchg
bswap
and
in
jle
inc
sbb
out
inc
pushf
push
scas
add
push
fnstsw
cmp
jae
mov
gs
out
pop
lock
push
ja
bound
or
scas
sub
jo
mov
pop
jae
mov
add
std
sub
pop
sub
ins
or
leave
int
xor
jg
fs
xor
pushf
and
inc
pop
push
frstor
in
jp
sub
cmp
sub
(bad)
test
and
test
adc
inc
ret
leave
(bad)
lods
pop
fild
call
jo
jnp
fsub
jb
popa
fild
addr16
inc
jge
push
(bad)
(bad)
(bad)
les
xor
sub
fwait
pop
mov
pop
jno
aaa
add
xchg
(bad)
sar
lea
das
leave
ins
int3
sbb
push
push
add
ja
ss
js
movs
sub
fcom
(bad)
cmps
push
add
into
in
inc
stos
pop
test
cmp
inc
and
dec
daa
into
mov
jmp
pusha
shr
push
(bad)
(bad)
(bad)
jl
mov
xor
mov
jo
lods
jbe
and
mov
push
inc
aas
test
or
(bad)
data16
xor
out
aas
es
and
add
aad
and
jne
sbb
scas
test
sub
xchg
jns
cmp
das
cmp
leave
mov
xchg
outs
sti
sbb
pushf
fdivp
cwde
addr16
mov
(bad)
mov
sub
push
int
cmp
ret
xchg
test
push
mov
ds
mov
ficomp
xchg
call
dec
jg
sti
or
pandn
jl
mov
data16
or
or
adc
pop
int3
mov
sahf
stc
lods
inc
inc
xchg
xchg
add
push
jg
ja
inc
jns
adc
cmp
repz
dec
cmp
xchg
or
imul
sbb
pop
rol
xchg
jecxz
stmxcsr
mov
gs
popf
add
pop
daa
xor
mov
jnp
mov
sub
push
and
nop
push
in
xchg
mov
fcomp
jnp
ror
cmps
sub
dec
xchg
and
call
sbb
add
push
jmp
outs
test
out
cmp
retf
lds
mov
cmp
pop
inc
es
mov
push
fisub
es
and
push
ins
ror
push
cwde
jae
push
cmp
imul
rcl
sbb
ds
mov
jg
mov
mov
test
fsub
push
or
push
fiadd
std
hlt
sti
imul
push
into
adc
cmp
nop
pop
div
push
stos
pop
in
or
dec
pusha
cs
mov
inc
scas
imul
mov
mov
add
xor
repnz
xlat
xor
adc
push
inc
mov
(bad)
ja
into
jae
out
das
fcomip
std
xor
jo
aaa
push
jmp
adc
imul
test
iret
push
inc
push
ja
ret
mov
int3
mov
xchg
or
ss
outs
xchg
or
inc
ret
push
ds
aas
ins
xchg
outs
aam
mov
je
movs
and
xor
scas
adc
ret
xchg
add
mov
xrelease
dec
lods
movs
mov
push
pop
push
sbb
sbb
imul
sbb
sbb
les
sub
iret
and
or
mov
pop
std
js
(bad)
add
ja
and
cli
or
fwait
mov
fmul
and
add
(bad)
dec
les
sub
repnz
mov
hlt
lds
in
sbb
outs
adc
push
je
aad
ins
pushf
sbb
mov
xchg
in
push
mov
add
cmp
sahf
push
pmuludq
xchg
cmp
fsubr
mov
jp
mov
mov
add
int
xchg
mov
pop
sbb
push
push
adc
add
lods
push
push
jmp
inc
add
dec
inc
xchg
cmp
ret
push
add
xchg
daa
pop
test
lods
xchg
cmp
and
(bad)
mov
aam
sub
push
cmps
les
addr16
cdq
outs
(bad)
xchg
test
icebp
pop
sbb
das
iret
int3
mov
pop
dec
pop
repz
xchg
mov
xor
inc
sbb
add
shl
pop
fneni(8087
sbb
pop
sub
or
pop
cmp
clc
aaa
(bad)
movs
sub
mov
mov
and
pop
cld
mov
push
outs
es
mov
pop
pop
jecxz
neg
pusha
cmp
ret
jl
mov
hlt
dec
jnp
dec
xor
pop
aam
jmp
mov
imul
inc
sbb
lock
inc
mov
lahf
mov
pusha
div
es
xchg
stos
out
jl
popa
in
sti
mov
call
jp
gs
aaa
or
jbe
mov
mov
out
jmp
dec
sahf
icebp
in
inc
pop
add
push
pushf
and
jecxz
push
js
stos
lods
and
int
arpl
push
sti
sahf
iret
imul
fs
jo
pusha
mov
and
jb
pop
push
inc
inc
mov
ret
mov
adc
(bad)
repz
ins
cdq
lds
scas
dec
or
or
lock
mov
call
pop
out
sub
adc
jmp
js
es
push
adc
(bad)
sbb
stos
rol
pop
repz
(bad)
xor
fdecstp
imul
loope
aad
cmp
jp
dec
jmp
dec
pop
mov
push
mul
sub
pop
cmp
push
pop
in
shl
add
inc
add
mov
popf
pop
inc
jecxz
xor
leave
mov
shl
push
cmp
pushw
jg
cwde
cmc
and
lds
int3
outs
sbb
sbb
repz
sbb
push
pop
pop
stos
aas
daa
gs
xchg
xchg
iret
jmp
push
jle
or
sub
retf
stos
(bad)
jp
aad
pop
mul
ss
adc
or
shr
aas
mov
mov
iret
and
inc
or
mov
adc
data16
fistp
or
pop
xchg
lea
xchg
retf
fwait
hlt
jmp
adc
jg
xchg
cmp
imul
mov
es
push
mov
mov
scas
xor
pop
call
jecxz
and
imul
xor
adc
daa
inc
dec
sbb
add
and
and
push
js
jmp
in
adc
sub
jno
sub
push
sti
cmc
xor
dec
aaa
xchg
out
aas
out
mov
mov
inc
dec
(bad)
cmc
(bad)
data16
inc
xchg
xor
movs
and
fistp
lea
es
nop
or
rcr
pop
cmps
and
push
adc
dec
(bad)
pop
lahf
fwait
mov
fild
dec
dec
ja
sub
hlt
xor
test
xor
add
das
push
ins
mov
xor
sti
mov
adc
mov
clc
inc
mov
sbb
shr
ficom
movs
and
and
sbb
push
push
mov
pushf
adc
into
cs
movs
cwde
dec
cmp
xor
lea
fidiv
leave
cmp
loop
pop
adc
mov
push
sar
sbb
int
cli
outs
cs
fisubr
mov
jp
(bad)
xchg
in
ret
mov
hlt
into
scas
aas
adc
and
sub
pop
jne
cdq
xor
mov
and
stc
sti
imul
aas
sub
jne
fdivp
cwde
aaa
std
push
cld
(bad)
out
push
xlat
jne
in
shl
mov
out
fs
(bad)
xchg
sub
mov
push
mov
push
stc
push
fnstenv
outs
lock
(bad)
repnz
lods
xchg
jp
sbb
retf
jmp
xchg
(bad)
fiadd
pop
xchg
lock
pop
xchg
jns
adc
jae
(bad)
push
mov
and
sbb
lods
pop
jg
test
cmp
(bad)
int
xor
lods
sub
std
inc
data16
mov
fist
sbb
fcmovbe
lock
jbe
loope
xor
movs
(bad)
shr
rcl
sbb
outs
cmps
cmps
push
call
dec
outs
jns
jg
push
mov
adc
push
dec
pop
cmc
(bad)
stos
repz
and
in
aaa
les
mov
xchg
cmp
mov
callw
jmp
int3
dec
or
mov
xor
daa
push
sbb
sub
into
lods
test
leave
cli
mov
xor
mov
xor
cmp
cmp
xlat
gs
mov
cmps
popf
push
test
fiadd
out
mov
in
add
push
jle
test
jmp
(bad)
mov
mov
rol
sub
or
add
leave
xchg
ds
push
scas
scas
add
test
(bad)
or
xchg
mov
fdiv
adc
loopne
mov
int
mov
mov
push
sbb
or
cwde
popf
inc
lods
les
mov
ret
in
pop
rol
push
push
jmp
shr
repz
sub
or
xor
arpl
jge
test
cmp
or
out
or
cld
inc
stc
jb
dec
cwde
cwde
dec
pop
in
lea
fistp
loopne
inc
shl
fidivr
xchg
mov
xor
(bad)
sbb
ret
sahf
repz
pop
mov
imul
cmp
pop
je
mov
sbb
pop
ins
neg
dec
hlt
js
jno
jo
xor
mov
xor
pop
inc
or
dec
sub
out
pop
xlat
jmp
jle
mov
(bad)
icebp
retf
push
jo
and
out
scas
scas
jb
cmp
sub
add
aaa
and
cmc
mov
into
mov
or
mov
pop
(bad)
jno
sbb
loop
call
enter
in
shl
sbb
mov
lds
inc
push
push
pop
shl
loope
movs
adc
in
jl
xchg
push
frstor
add
lods
scas
adc
mov
push
mov
push
sahf
or
ficom
dec
sbb
inc
jg
call
mov
mov
mov
dec
sbb
in
inc
in
jge
movs
inc
lods
fsub
sub
repnz
pop
xchg
sub
ret
mov
test
sub
or
mov
or
fs
mov
shl
mov
ins
js
(bad)
sti
inc
push
mov
dec
push
and
mov
cmp
jmp
loope
push
addr16
inc
out
mov
mov
test
fdiv
(bad)
aad
or
sbb
push
add
and
inc
push
jae
retf
(bad)
lods
jge
push
add
mov
retf
arpl
push
xor
in
and
mov
mov
ds
(bad)
shr
push
icebp
mov
scas
ror
pop
call
xor
jmp
pop
cmp
in
mov
ror
sbb
adc
cmp
arpl
mov
xchg
fistp
dec
inc
push
add
sbb
das
mov
add
stos
out
sub
sub
jle
push
enter
fisub
int3
mov
add
cwde
and
pop
and
mov
xor
(bad)
xchg
ja
lea
jae
div
sti
clc
pop
lea
xchg
gs
push
jmp
neg
lods
dec
jno
ror
mov
jp
mov
lods
jbe
lahf
push
out
daa
xor
jne
call
test
cdq
or
or
push
pop
aaa
jbe
sahf
mov
stos
in
mov
xchg
cld
push
js
cmp
mov
xchg
pop
test
hlt
cwde
mov
push
push
popf
sub
jecxz
xor
nop
mov
sbb
ins
sbb
inc
sahf
(bad)
iret
cwde
cmp
sub
add
call
fdivr
cmp
lahf
and
(bad)
imul
push
mov
in
jecxz
das
mov
sub
enter
loop
xlat
add
dec
sahf
dec
push
neg
xor
shr
inc
stc
push
fsubr
push
and
iret
test
aas
jne
cmp
lds
mov
pop
pop
and
rcl
js
imul
pop
adc
fisttp
jg
and
jbe
cdq
movs
push
xchg
(bad)
lock
cmps
adc
xchg
mov
out
in
sbb
mov
test
xor
scas
jns
ins
sub
test
ins
and
mov
fiadd
out
and
call
mov
shl
aam
push
pop
inc
movs
enter
mov
or
sub
push
dec
enter
pop
(bad)
dec
pop
imul
push
fbstp
xchg
fwait
test
iret
sub
cdq
test
popf
push
sbb
(bad)
jge
dec
imul
adc
cli
(bad)
fidiv
cmp
(bad)
push
xor
repz
mov
jg
or
inc
xchg
or
addr16
hlt
sub
mov
cwde
adc
repnz
adc
mov
xor
inc
or
fdivr
int3
jmp
stos
(bad)
mov
sub
shl
xlat
icebp
repz
xor
retf
or
mov
pop
sub
inc
or
pop
mul
scas
adc
mov
in
push
ret
push
mov
repz
fdivrp
xlat
js
cwde
push
mov
test
lods
jmp
mov
cmps
push
stos
mov
mov
(bad)
push
mov
pop
jbe
inc
ret
jmp
cmc
mov
iret
mov
sbb
push
push
push
push
xchg
mov
in
inc
inc
sub
jmp
push
les
call
mov
in
jno
addr16
dec
sub
in
ror
pop
daa
(bad)
paddq
out
nop
dec
pop
dec
cmp
ja
inc
cmp
dec
aam
aad
mov
inc
and
inc
nop
movs
cli
push
mov
push
add
add
rcl
daa
retf
mov
rcr
mov
sub
push
in
and
add
push
pop
lds
cmp
repz
ja
mov
ja
(bad)
shl
xor
hlt
inc
push
mov
aam
leave
mov
jg
cld
outs
repz
add
jnp
push
mov
or
xchg
outs
std
data16
cmp
xchg
cli
fistp
jg
lea
loopne
xor
fs
scas
cmc
fbld
xlat
xlat
shr
scas
test
leave
popa
aaa
cmps
ret
dec
cmp
lods
into
jle
scas
mov
sahf
in
push
dec
pop
or
pop
push
aad
xor
out
int3
pop
lods
push
(bad)
mov
inc
sub
sahf
jp
cli
jmp
das
pop
mov
dec
mov
out
push
push
xor
outs
fstp
loope
inc
sti
mov
push
inc
mov
adc
add
mov
sbb
sub
dec
xor
mov
aad
mov
mov
xchg
cmp
jo
cmps
mov
add
dec
imul
test
pop
test
arpl
dec
cmps
fnstenv
or
(bad)
leave
rol
aaa
ret
pop
lock
movs
ins
inc
rcr
push
mov
stos
in
jle
cmp
sti
hlt
scas
jecxz
std
lods
rep
pop
sbb
mov
jle
iret
leave
jecxz
sbb
inc
shl
cmps
push
test
sbb
adc
ror
inc
xor
ret
mov
or
into
fninit
pop
mov
sbb
cdq
int
mov
xor
adc
inc
xchg
aas
dec
and
cwde
mov
dec
(bad)
leave
dec
ret
dec
mov
inc
mov
fcmovne
inc
icebp
jp
test
repnz
stc
aas
sbb
pushf
add
sub
test
call
neg
mov
jp
sbb
and
xor
lea
addr16
pushf
mov
xor
test
pushf
push
xor
repz
es
nop
or
sti
jge
cvtps2pd
mov
push
sar
leave
push
xchg
inc
outs
cdq
mov
inc
mov
cmp
sub
les
mov
mov
scas
or
gs
or
pop
sbb
fwait
add
shr
sar
shl
repnz
dec
cmp
cmp
jmp
lods
or
bound
hlt
sbb
fucom
xor
dec
cmp
cmps
(bad)
aam
cmps
scas
jns
mov
xchg
test
inc
(bad)
xor
ss
cdq
inc
aad
stos
js
fidiv
mov
test
inc
jge
fcomp
add
loop
cld
push
stos
fisub
ror
jbe
(bad)
mov
mov
std
pop
lea
jno
push
cmp
xlat
xchg
int3
inc
popa
jg
mov
into
push
sub
xor
add
jo
mov
or
push
ja
leave
sbb
xor
bnd
ins
mov
lods
rcl
and
std
cs
cmps
jg
mov
std
push
test
xchg
adc
lock
jns
adc
pop
mov
dec
shl
test
xchg
xchg
in
push
mov
(bad)
add
rcr
jae
xor
fsubr
stos
lods
or
loop
dec
lods
pop
inc
imul
sub
idiv
xor
push
jle
in
test
sar
push
mov
jne
dec
in
imul
stos
or
sub
xchg
or
inc
ret
mov
out
mov
repnz
retf
mov
jnp
sub
mov
cmps
push
and
and
sbb
arpl
jae
ffree
mov
inc
pop
dec
pop
(bad)
push
and
mov
xchg
arpl
rcr
not
xor
inc
mov
test
cmc
mov
lods
mov
cmp
push
ds
push
mov
(bad)
fst
fstp
and
mov
adc
push
pop
push
stc
int
movs
inc
sbb
dec
mov
dec
sub
push
push
add
xchg
add
jne
xor
pop
sub
mov
xchg
jb
jo
ja
sub
repz
mov
in
popf
cmp
dec
(bad)
repnz
inc
mov
cmp
or
sbb
dec
xchg
adc
rol
sub
jp
aaa
adc
jle
cmps
(bad)
sub
cmp
mov
les
lea
scas
dec
pop
jmp
movs
push
cmp
xchg
xchg
jno
dec
adc
lahf
scas
mov
fucomp
fld
xchg
repnz
xbegin
neg
sti
jno
sub
fs
jae
push
(bad)
add
mov
and
mov
dec
cmp
mov
(bad)
pop
jecxz
in
and
mov
add
hlt
mov
sbb
dec
mov
xlat
gs
out
xchg
outs
xor
ror
xchg
mov
sub
outs
sub
jle
xor
dec
adc
lahf
add
cmps
add
sbb
call
pop
stos
xor
xchg
enter
dec
dec
ja
ss
inc
out
imul
inc
imul
pop
mov
jae
add
call
jecxz
adc
jne
cwde
push
add
into
and
or
addr16
out
mov
test
mov
sub
out
mov
and
xlat
stc
xchg
xchg
test
fwait
sbb
fstp
cmp
cmp
(bad)
adc
add
cmp
dec
mov
add
fdiv
cmp
xor
popa
and
test
push
sbb
sbb
in
test
mov
xor
(bad)
movs
dec
pop
mov
push
loop
pop
cmp
push
retf
call
les
(bad)
and
cmps
mov
and
ret
xor
adc
adc
and
xlat
xchg
push
out
dec
ins
sbb
mov
cmp
shl
mov
mov
test
mov
push
jmp
xchg
jne
add
add
mov
fimul
outs
sub
rcr
repnz
adc
sbb
pop
cmp
(bad)
jle
and
ja
out
mov
call
xor
sbb
cli
mov
xchg
out
and
pop
fcomp
cld
addr16
or
push
xchg
dec
mov
pop
jecxz
retf
xchg
or
inc
out
mov
stos
xor
mov
js
sub
fs
pushf
mov
fwait
mov
shr
(bad)
fadd
(bad)
outs
ins
pop
daa
mov
lds
mov
cmps
retf
cmp
ja
shl
fild
fldlg2
adc
mov
cmp
mov
inc
push
mov
mov
jmp
adc
movs
(bad)
addr16
fimul
sub
retf
ror
call
mov
cmp
movs
push
out
fwait
pop
sbb
sub
xor
xor
mov
nop
push
stos
sub
and
jl
or
addr16
fiadd
xchg
ds
push
xor
cmp
or
ret
or
shl
mov
or
inc
pushf
push
and
add
mov
ret
inc
inc
aas
mov
call
sub
repz
jecxz
sbb
inc
mov
das
inc
pushf
jg
rcl
push
dec
xchg
cdq
mov
fsubr
mov
cmp
popf
cs
jmp
xchg
adc
daa
xchg
(bad)
jmp
mov
cdq
inc
enter
push
std
push
popa
mov
outs
in
or
inc
cs
jmp
inc
mov
ror
or
outs
retf
push
call
std
jl
cdq
xor
jnp
xchg
adc
aaa
cmp
inc
sub
jg
es
adc
push
mov
shl
imul
jmp
mov
add
popa
mov
xor
or
cbw
jmp
fsub
push
test
aas
inc
mov
pop
xor
mov
in
xchg
xchg
inc
xchg
std
je
addr16
sbb
dec
xor
sar
repz
inc
call
(bad)
daa
in
aaa
jbe
in
je
iret
cdq
xchg
mov
sbb
xor
in
pushf
(bad)
retf
dec
inc
push
push
xchg
ins
cmp
pop
sub
dec
cmp
jo
xor
add
adc
sub
add
ss
scas
div
aaa
dec
sbb
sub
call
les
out
xor
inc
inc
pop
dec
lock
xchg
pop
sub
sti
xor
pop
jns
or
dec
inc
sub
inc
ret
icebp
aam
xchg
test
cmp
sbb
in
ds
sub
mov
pop
pop
add
ja
mov
test
ror
and
xlat
outs
mov
pop
push
push
xchg
add
and
inc
adc
dec
das
imul
fidivr
cmp
add
sbb
lds
push
mov
mov
mov
jle
in
and
popa
mov
pop
xchg
xor
rol
mov
jns
dec
dec
jb
sahf
hlt
stos
cmp
cmps
imul
outs
pushf
stos
mov
dec
mov
mov
stos
inc
sahf
test
xchg
in
xor
push
arpl
call
lods
push
bound
pop
in
iret
stc
jbe
repnz
mov
(bad)
fsub
mov
xor
add
push
call
lods
xchg
mov
and
push
fdiv
and
cmp
xor
int
lahf
push
sbb
mov
ins
loopne
cmc
or
and
movs
sar
or
jmp
xchg
cmp
xchg
test
gs
iret
push
push
mov
iret
mov
(bad)
cli
jo
cs
dec
jbe
addr16
stos
(bad)
xchg
jb
push
sti
js
cmp
pop
lock
repnz
js
inc
pop
and
mov
pop
mov
addr16
iret
lds
pop
ror
inc
cmp
(bad)
das
out
cmp
push
pop
(bad)
inc
mov
(bad)
jg
or
scas
jp
(bad)
inc
fidiv
cwde
bound
das
arpl
into
add
data16
outs
rol
cmp
cli
ret
mov
sar
pop
push
stos
or
rcl
sub
stos
jmp
fst
cmp
repnz
xchg
imul
nop
dec
sub
fadd
or
mov
xchg
xor
cwde
jl
lds
rcl
lahf
mov
xor
iret
mov
xchg
push
sub
push
in
inc
jecxz
int
jns
cmp
push
jo
scas
inc
inc
inc
es
mov
pop
fmul
clc
and
mov
es
xchg
fwait
enter
fs
or
or
pop
cwde
mov
push
mov
sub
iret
sbb
inc
add
mov
fldcw
mov
xlat
div
jb
mov
arpl
in
dec
mov
and
mov
mov
ins
push
test
icebp
cmp
add
add
gs
jns
pop
pop
cmp
jo
fsubr
push
sbb
push
add
adc
xchg
mov
pushf
lahf
hlt
mov
push
out
xor
sub
cs
xor
loop
xchg
pop
push
pop
retf
(bad)
pop
icebp
js
rcl
fcmovnu
adc
outs
or
push
mov
mov
out
adc
(bad)
aas
enter
mov
(bad)
aam
mov
inc
add
jp
aad
jne
push
sbb
in
rcl
enter
push
nop
pop
sbb
sbb
ss
in
jae
lods
stc
int
and
mov
mov
xor
xor
xchg
mov
shl
shl
sbb
out
je
addr16
ret
ins
jmp
repz
out
mov
sub
neg
mov
arpl
and
inc
shl
int
add
inc
nop
cli
aas
loop
ins
es
shl
lods
xchg
cld
jmp
push
pop
add
adc
cld
xor
mov
test
jno
int3
test
(bad)
jae
out
hlt
mov
imul
jb
cli
mov
imul
xor
addr16
push
ins
loopne
sbb
sub
add
(bad)
push
xchg
stos
retf
sub
inc
out
adc
xchg
xor
out
fs
mov
dec
or
sbb
adc
out
xchg
pop
push
nop
mov
leave
xlat
mov
loopne
fld
rcr
enter
mov
gs
mov
mov
rcr
pop
jmp
mov
hlt
and
out
cmp
mov
call
add
dec
inc
enter
sub
inc
fistp
pop
or
sti
cld
adc
std
or
hlt
movs
retf
add
neg
dec
xchg
cmp
and
sub
js
pop
les
mov
fiadd
push
push
and
dec
test
adc
hlt
shl
int3
iret
push
inc
push
cmp
(bad)
pop
mov
lods
push
mov
lahf
(bad)
es
hlt
jnp
cmp
outs
rcr
ror
cli
sub
mov
dec
push
jmp
mov
cmps
pop
ret
inc
push
loopne
dec
adc
dec
mov
gs
xlat
in
in
(bad)
sub
xor
xor
jl
lods
xchg
jmp
mov
dec
stos
cmp
xchg
out
fimul
jmp
shr
in
mov
xor
dec
sub
or
js
rcr
out
push
fldenv
add
cmc
pop
imul
sbb
in
jmp
(bad)
cmc
pop
ss
mov
pop
psllq
pop
ds
jmp
imul
sbb
mov
jns
mov
or
mov
or
cmp
inc
jno
cmc
lods
popa
aaa
mov
loopne
sub
into
pusha
imul
dec
ins
loope
mov
shl
xchg
push
mov
lahf
mov
(bad)
xchg
repnz
or
dec
es
imul
stc
sub
je
inc
pop
mov
xor
int
popf
cmp
mov
push
je
jnp
iret
ds
pop
pop
aas
pushf
mov
in
cmp
iret
je
cli
idiv
les
(bad)
mov
and
mov
push
pushf
mov
or
fstp
retf
mov
xor
push
xor
pop
xchg
push
aas
rol
push
stos
adc
pop
and
pop
mov
mov
and
cmp
sub
fld
cwde
xor
out
jle
out
sahf
aaa
cmp
add
lock
inc
popa
jmp
dec
mov
lods
sbb
push
jmp
iret
jo
aad
fldcw
movs
jb
mov
adc
mov
ror
movs
or
mov
sbb
std
add
xor
add
and
dec
outs
mov
xor
jp
dec
mov
sti
pop
push
adc
cmps
jb
arpl
push
xchg
cmp
(bad)
gs
adc
pop
fsubr
sbb
push
lahf
push
push
mov
pop
shl
ja
xchg
xchg
sub
repz
(bad)
pop
aad
out
neg
add
jne
test
dec
adc
das
aad
stos
push
push
push
ins
jle
(bad)
mov
dec
inc
test
fisub
mov
add
xchg
sub
fidivr
inc
or
mov
sub
adc
and
inc
fild
mov
xchg
scas
adc
es
loopne
jnp
cmp
mov
test
and
call
pop
adc
push
pop
mov
pop
jnp
fwait
sbb
sub
ins
mov
push
loop
add
fs
jbe
std
inc
out
pop
pop
xchg
cmp
and
ret
bound
cmp
xchg
add
jmp
sahf
adc
xor
(bad)
jecxz
push
jle
mov
sbb
mov
jmp
mul
inc
stos
and
cmp
jae
or
xchg
ficomp
add
xchg
adc
pop
out
mov
stc
std
adc
cmc
jp
in
or
call
loope
mov
cmp
push
(bad)
add
ja
scas
(bad)
push
pop
retf
arpl
clc
icebp
movs
sbb
and
and
cwde
pop
data16
pusha
sub
mov
(bad)
ds
cmps
ins
clc
sbb
leave
cdq
pop
jmp
or
fisttp
xchg
xchg
popf
or
jl
xor
ja
fnsave
das
sbb
mov
mov
les
test
add
data16
js
out
dec
jge
adc
or
scas
loopne
jmp
out
mov
leave
dec
retf
call
test
mov
xlat
jge
scas
call
and
dec
(bad)
leave
call
or
pop
pop
aas
loopne
cmp
pop
xchg
ds
movs
lock
retf
mov
add
pop
mov
jl
push
(bad)
ficom
xor
mov
mov
inc
hlt
inc
push
into
push
les
mov
out
or
mov
xchg
loop
or
cmp
dec
mov
repz
ja
dec
jp
ins
imul
idiv
cwde
push
sbb
int3
mov
loop
aad
rep
dec
add
xor
loope
fidivr
repz
fidivr
jo
and
adc
pop
std
inc
add
push
mov
add
stos
call
mov
aam
push
test
adc
push
rcl
or
fistp
fs
xor
icebp
push
inc
mov
sub
out
out
mov
mov
arpl
fild
loop
inc
sbb
ret
sahf
les
jno
aaa
nop
fs
(bad)
in
and
js
(bad)
arpl
ds
addr16
popf
fcom
(bad)
cs
pop
daa
jbe
pop
mov
add
cmp
and
retf
repz
ins
ins
fs
pop
mov
test
or
jnp
jmp
ret
xchg
call
addr16
add
or
adc
mov
bound
shl
add
not
xchg
jb
fcom
repz
outs
dec
test
cmp
mov
inc
test
pushf
test
cmp
sub
aad
(bad)
daa
in
adc
pop
lds
popa
lods
xchg
scas
pop
push
test
(bad)
inc
rcr
add
mov
xor
lods
inc
sub
add
xchg
sub
movs
inc
mov
mov
xor
ja
out
dec
aad
mov
xchg
ret
inc
sti
xor
pop
xor
lea
xor
lahf
test
je
dec
sar
jge
sub
popa
add
push
ss
jle
or
xor
push
lahf
dec
mov
pusha
push
xlat
and
xor
nop
xchg
inc
xchg
repz
fwait
movs
fidiv
xor
lahf
cmps
xchg
aad
and
push
push
mov
xor
and
jmp
movs
adc
retf
cmp
mov
jp
ins
in
mov
sub
mov
jae
das
scas
fnstsw
fidivr
sub
int
ss
sbb
sbb
mov
fwait
jge
popf
shl
lods
cwde
push
in
not
into
mov
xchg
out
jbe
lea
test
(bad)
je
mov
lds
add
xchg
(bad)
mov
mov
xchg
or
sub
adc
or
mov
push
pop
push
xchg
(bad)
lods
pop
pop
ds
mov
out
mov
pop
mov
xchg
movs
pusha
pop
clc
sub
loop
and
add
imul
inc
sbb
lds
(bad)
aam
int3
in
cmp
les
mov
rcl
loope
cmp
cmc
into
fxch
push
push
xchg
xchg
mov
mov
xchg
push
mov
inc
fidivr
push
xor
addr16
adc
sub
popf
arpl
mov
fild
cmp
jmp
adc
out
or
adc
fmul
shr
popf
scas
pop
lea
pop
cmps
lock
cmp
and
ins
mov
pop
pop
dec
or
and
pushf
ficomp
leave
div
add
or
addr16
cmp
and
xor
xchg
cwde
je
mov
pop
inc
and
dec
cmps
push
sar
shr
push
dec
adc
mov
adc
push
add
xor
sbb
stc
sub
idiv
dec
and
xchg
mov
dec
push
test
mov
push
loopne
fwait
push
fld
mov
mov
sti
sar
js
pop
jo
aad
jge
lods
movntps
sub
iret
daa
dec
mov
xchg
aas
xchg
dec
adc
nop
test
sub
sbb
xchg
mov
jecxz
mov
cwde
add
push
add
retf
push
sub
nop
mov
xor
sbb
je
in
ja
push
or
xchg
jl
lahf
ja
inc
outs
mov
cld
dec
add
cdq
pushf
(bad)
cld
cmp
loop
jmp
pop
cmps
in
retf
scas
xchg
sbb
pop
pop
pop
push
lahf
sub
and
push
xor
in
inc
leave
ret
or
jbe
inc
ins
xlat
mov
retf
jne
xchg
pop
or
jecxz
push
dec
test
cld
add
popa
mov
cmp
cmp
jg
les
sub
push
fstp
cs
push
jle
jnp
jle
mov
mov
cmc
aam
mov
sbb
ins
or
push
mov
test
dec
xor
aaa
pop
jmp
lahf
mov
jne
imul
sub
mov
stc
push
les
jg
mov
xchg
add
inc
push
fisub
add
dec
scas
rcr
sti
push
push
push
ret
gs
xchg
adc
ins
mov
dec
daa
dec
pusha
popf
mov
in
adc
in
sub
(bad)
out
mov
mov
pusha
or
cmp
mov
push
ins
inc
ss
rcl
sbb
(bad)
mov
sbb
int3
(bad)
repnz
or
and
cmp
mov
test
cmp
push
data16
sbb
fistp
jnp
xor
loop
out
dec
jge
mov
add
cmp
adc
inc
clc
push
ret
scas
loopne
ds
aaa
std
pop
sbb
fnstcw
jbe
pop
ins
sbb
aad
lods
pushf
lods
scas
jbe
add
fcmovbe
daa
xor
sbb
adc
dec
jno
adc
sub
sbb
cmp
addr16
es
cmp
sub
xor
outs
es
shl
repz
jmp
dec
lock
(bad)
sbb
adc
or
sub
mov
mov
and
fdiv
mov
mov
jle
rol
fadd
loope
cmps
dec
mov
stc
jns
xor
fild
sbb
repz
jbe
(bad)
jbe
pop
xchg
iret
dec
lahf
xor
test
inc
sub
outs
pusha
push
lahf
scas
inc
mov
xor
and
or
jns
or
cmp
dec
pop
sub
shl
push
lock
fcom
stos
hlt
xor
pop
jnp
shr
in
add
sbb
(bad)
cwde
and
fbld
fisubr
jb
sbb
inc
fsubr
stos
das
mul
cdq
inc
mov
sub
mov
pop
xchg
aas
repz
imul
mov
cmp
or
adc
pop
test
fwait
or
rol
adc
xor
mov
(bad)
mov
hlt
fs
or
cmps
dec
sub
pop
or
add
je
arpl
pop
cmps
jmp
cmp
daa
push
stos
ss
loop
ins
out
in
ret
sar
mov
mov
adc
loop
mov
sub
mov
fwait
pop
pop
out
mov
pop
call
ins
push
xchg
mov
arpl
fsub
das
push
sbb
jae
or
dec
and
and
ss
pop
cmp
push
int3
dec
pop
cmp
cmp
cmps
in
push
push
xlat
das
inc
pop
addr16
aam
push
mov
fwait
pop
pop
jae
sahf
push
es
bound
cmps
imul
fimul
push
adc
fnstcw
aad
sbb
in
dec
sub
pop
dec
retf
(bad)
and
pop
mov
lahf
sahf
xor
mov
gs
scas
test
mov
push
inc
jb
adc
jecxz
out
in
pop
and
mov
jle
inc
pop
dec
mov
aam
out
sbb
call
sbb
mov
push
xchg
int3
into
pop
add
mov
dec
mov
je
sub
gs
lock
mov
(bad)
xor
sbb
test
inc
add
les
cs
push
push
xor
sub
out
mov
rcr
jge
(bad)
mov
dec
imul
cwde
push
dec
xchg
adc
fild
ret
dec
sar
sub
cmp
retf
jne
xor
adc
in
or
cmps
mov
gs
mov
scas
hlt
dec
sbb
into
or
mov
aas
mov
dec
cwde
cmps
jge
rep
cdq
aas
pmullw
jne
dec
in
adc
dec
iret
mov
fnstsw
pop
movs
mov
sub
ss
mov
xor
mov
cmp
sub
enter
inc
adc
nop
cmp
mov
fld
dec
sbb
inc
iret
mov
add
push
xchg
repz
icebp
(bad)
push
stc
mov
mov
ja
int
and
aas
xchg
mov
cmp
(bad)
imul
dec
movs
push
test
push
sub
xor
hlt
int3
mov
mov
cmc
push
mov
lahf
jge
jmp
pushf
outs
rcl
add
cli
gs
mov
stc
movs
nop
sub
ss
or
bound
dec
stos
inc
or
sbb
mov
popa
dec
pop
jbe
jmp
cmp
mov
test
lock
xchg
icebp
mov
inc
push
sbb
repz
pop
ins
sar
int
jns
sub
scas
bound
enter
inc
mov
add
in
jbe
mov
les
or
pop
and
push
jl
and
pop
and
out
xchg
repnz
dec
in
cmc
push
sub
push
or
jecxz
jg
int
lahf
fisttp
lock
ins
sbb
or
sub
xlat
adc
push
push
dec
jbe
xor
jg
stos
loop
xchg
lea
pop
or
cmp
fwait
fwait
scas
int
ret
out
jge
lahf
call
(bad)
xchg
ins
mov
fld
sub
xor
rcr
sub
xchg
add
mov
cld
fwait
push
scas
(bad)
(bad)
sbb
imul
or
xchg
int
adc
test
test
cdq
fs
fwait
push
pop
psubq
push
mov
stos
fld
repnz
lahf
mov
push
adc
or
mov
icebp
push
inc
cmp
popa
outs
mov
fld
dec
push
or
das
pusha
xor
scas
fs
push
mov
imul
aaa
add
and
dec
sub
bound
cmp
mov
icebp
sbb
lods
sbb
popa
popa
fild
inc
push
or
(bad)
mov
lock
dec
cmps
push
xchg
pop
or
stos
sub
jne
sbb
ja
test
cmps
test
clc
xchg
mov
cmp
scas
aas
ret
dec
dec
pushf
dec
(bad)
fnstcw
scas
adc
mov
sub
ds
lahf
or
lds
ss
fsubr
int3
(bad)
push
ins
jnp
sbb
arpl
ss
fsub
push
leave
pop
cmps
mov
outs
dec
ss
or
jmp
xchg
xor
xchg
mov
leave
fidiv
or
mov
or
lds
out
xlat
cs
jns
jge
or
sub
movs
lock
pusha
push
je
fisttp
push
ja
sbb
jge
ss
cld
mov
hlt
or
sbb
mov
push
int
sub
fild
imul
(bad)
cmp
fs
mov
dec
ins
inc
ins
retf
sub
retf
ins
and
loopne
dec
rol
pop
call
fiadd
pushf
mov
outs
test
mov
push
pop
pop
jnp
dec
ror
cmp
push
je
and
mov
icebp
ret
mov
sub
fmul
dec
pusha
jmp
(bad)
aad
test
mov
jbe
iret
sbb
inc
pusha
pop
sbb
loopne
mov
sub
not
add
pop
stos
dec
sahf
ja
xor
out
or
ffreep
stos
sbb
jecxz
shl
hlt
outs
std
cld
bound
cmps
push
(bad)
out
push
cwde
aam
sahf
dec
fistp
pusha
push
sbb
add
xor
jge
rol
jg
fsub
dec
pop
jecxz
and
int
sub
dec
sbb
push
push
sar
mov
sbb
adc
outs
and
cmp
inc
(bad)
sbb
loop
mov
outs
std
pusha
and
dec
int
shl
(bad)
(bad)
std
bound
lock
jmp
jns
push
xchg
inc
sub
mov
in
and
mov
adc
mov
add
(bad)
cmp
retf
(bad)
and
add
movs
(bad)
inc
xor
cdq
dec
mov
jge
push
pop
dec
ficom
xor
sbb
or
mov
cmp
adc
ins
and
cdq
or
test
dec
imul
sar
cmc
sbb
arpl
in
loopne
cli
sbb
push
xchg
(bad)
mov
cmps
out
imul
push
xor
sar
cwde
mov
push
mov
inc
lds
fistp
cmp
cmp
je
mov
mov
ins
mov
loop
sbb
ror
dec
xor
jo
imul
jmp
mov
js
iret
pop
and
sahf
push
and
pushf
nop
fwait
xlat
pop
xor
mov
push
btr
push
cs
and
pop
ret
mov
mov
xor
jmp
xchg
aam
pop
es
push
sar
adc
adc
or
mov
sub
fiadd
push
adc
xchg
ficom
(bad)
aas
fstp
push
mov
sbb
popa
cs
inc
push
mov
es
xchg
hlt
push
mov
jo
mov
jle
gs
into
mov
sbb
ret
jle
and
pop
shr
mov
dec
mov
push
(bad)
sbb
jmp
adc
cmps
jo
ja
xchg
mov
aad
aaa
jnp
pop
jns
repz
mov
push
pop
push
aad
in
enter
rcr
fsubr
into
sbb
or
pop
mov
and
mov
pop
test
jge
sub
les
pop
aam
sbb
sar
xor
xchg
mov
mov
lea
jb
mov
and
pop
dec
ror
fwait
stc
mov
xchg
jo
push
push
cwde
jg
shl
mov
push
mov
inc
jnp
cmp
imul
inc
aam
xor
les
loope
(bad)
and
in
adc
cs
adc
lock
cmp
dec
adc
jmp
xchg
arpl
fwait
pop
(bad)
rol
aas
xchg
xor
enter
pinsrw
not
pop
mov
sbb
push
mov
scas
mov
sub
push
add
sbb
je
repz
sub
int
pop
push
ins
sub
push
leave
sbb
(bad)
jecxz
xlat
stos
and
and
jne
and
in
xchg
mov
cdq
cwde
pop
dec
jmp
loop
inc
shl
mov
repnz
ret
loop
mov
lods
test
jmp
push
fs
aas
mov
push
dec
or
cmp
test
add
add
adc
adc
or
jno
push
fcomi
dec
xchg
popa
(bad)
jmp
xchg
xchg
movhps
mov
xor
pusha
fdivr
call
jne
push
push
loope
xor
lods
mov
fist
pop
pop
popf
fimul
push
shr
mov
cld
xor
out
call
xchg
cdq
movs
mov
push
outs
fist
cwde
push
cmp
retf
pop
and
outs
mov
push
and
push
sub
fild
mov
or
rol
lea
test
imul
rol
jbe
or
test
leave
xlat
cmps
fucomi
call
data16
movs
ja
repnz
rcl
inc
ins
xchg
arpl
in
(bad)
(bad)
nop
jno
mov
xchg
mov
fsubrp
outs
ss
or
mov
or
lods
ins
push
(bad)
lahf
mov
jnp
vprotq
ins
fld
push
push
sbb
fsubr
hlt
test
fcmove
and
(bad)
sbb
mov
pop
fld
cmp
add
ds
iret
bound
sub
ror
shl
retf
add
pop
jnp
cmc
sbb
xchg
ds
push
jnp
and
jl
call
jb
imul
sbb
fwait
jnp
push
in
pop
scas
pop
and
mov
sub
jle
fnstenv
xor
loopne
xor
adc
rcr
dec
add
jb
jg
mov
rcl
sub
inc
in
pop
inc
stos
ficom
inc
add
frstor
mov
adc
add
out
jp
rcl
push
out
sub
stc
idiv
scas
mov
ds
loopne
adc
dec
push
pop
adc
pop
add
(bad)
push
jge
mov
xor
ins
mov
aas
and
lea
dec
scas
stos
test
xor
repz
pop
xlat
push
retf
jecxz
lods
mov
and
pop
mov
pusha
rol
push
mov
pop
sub
ror
adc
adc
jbe
or
out
xchg
and
aam
dec
shr
sbb
jp
loopne
addr16
(bad)
push
sbb
mov
(bad)
jmp
loope
ret
fst
sti
xor
or
retf
dec
mov
fadd
and
inc
imul
fs
xchg
push
mov
ret
inc
add
div
adc
dec
call
xchg
pop
loopne
dec
aaa
fistp
fimul
(bad)
mov
pop
dec
mov
cdq
cli
xchg
mov
jg
call
xchg
inc
add
inc
mov
aad
ret
jle
cld
aam
push
retf
stos
or
leave
fcom
jmp
cmp
inc
sbb
(bad)
mov
fs
nop
xchg
ins
pop
dec
neg
sub
repz
mov
cmp
cmp
jle
(bad)
icebp
xor
sbb
fdiv
scas
cmps
mov
mov
inc
mov
mov
mov
jno
or
iret
xchg
cmps
das
push
mov
add
sub
lods
xor
cmp
pop
cmps
cs
out
mov
shl
or
add
dec
push
pop
xrelease
or
stc
pop
in
cmp
cdq
ds
xor
stos
(bad)
xor
adc
test
lock
aad
test
mov
mov
adc
out
movs
sbb
cld
cmp
outs
fistp
jp
in
sbb
mov
(bad)
xor
icebp
ret
or
pushf
xor
dec
mov
test
or
rcl
retf
clc
cld
mov
sahf
icebp
jnp
fwait
xor
fdivr
adc
cmp
pop
nop
jns
ffreep
cmps
xor
jl
stc
mov
xchg
sahf
dec
gs
pop
out
fnsave
and
xchg
jae
mov
test
add
fs
lahf
inc
add
sub
push
ret
mov
fcom
mov
call
adc
adc
(bad)
out
jb
jb
mov
dec
ror
xor
cmp
adc
js
pop
add
div
jnp
pop
xlat
adc
xor
cmps
xchg
test
int3
cmp
cmc
sub
mov
mov
push
stc
test
iret
cmp
inc
push
mov
or
or
pushf
dec
and
in
xchg
cmp
jmp
mov
stos
sub
test
cmp
movs
pop
clc
pop
mov
cmp
movs
push
mov
loopne
aad
fcmovbe
fwait
mov
xor
jecxz
jmp
mov
fdivrp
mov
mov
imul
jecxz
mov
cmp
xchg
jnp
scas
aaa
and
js
cmp
arpl
retf
in
nop
mov
pop
loope
dec
xor
sbb
pop
add
leave
repz
sbb
ret
stos
pop
(bad)
fwait
cmp
and
repnz
xchg
aaa
or
inc
mov
inc
fdiv
lahf
mov
gs
xor
jae
jne
outs
out
movs
lahf
mov
and
cmp
mov
push
mov
sbb
movs
sti
dec
ins
add
cmp
xchg
repnz
mov
call
data16
fild
sub
ins
mov
idiv
ficomp
sub
sbb
cmc
les
not
sbb
cmp
ds
pop
mov
pop
sti
call
sar
fadd
or
test
jp
stc
hlt
xchg
aaa
pop
xchg
sub
lods
cmc
xchg
adc
mov
mov
and
jge
rcr
test
xchg
cmps
fsubp
ss
push
and
not
and
push
mov
sbb
fisubr
inc
xlat
mov
sahf
mov
daa
mov
mov
cmp
or
pop
sbb
dec
xor
mov
int3
or
sbb
pop
xchg
loop
rcr
(bad)
retf
push
lea
mov
out
ins
mov
xchg
xor
inc
jmp
or
(bad)
shr
int3
mov
test
loope
test
cwde
cli
pop
mov
sar
loopne
sbb
push
adc
cmc
into
gs
push
fiadd
sbb
and
xor
and
sub
sub
or
lods
(bad)
push
mov
push
(bad)
mov
lds
cmp
ffree
or
aad
cmps
inc
inc
jbe
and
sub
add
or
sar
push
dec
jns
mov
shl
int
shl
or
stc
pop
xchg
lods
jmp
fs
jbe
and
adc
fldcw
test
xchg
lahf
cdq
mov
mov
xor
movs
mov
mov
push
leave
out
test
adc
xchg
cdq
or
aas
js
pop
adc
neg
aas
sti
les
fimul
jmp
and
jge
test
repnz
add
xor
fnstcw
sub
repnz
int3
cmp
icebp
mov
mov
repz
lds
cs
daa
or
jmp
mov
loopne
es
mov
fisubr
enter
cld
mov
stos
retf
fmul
fcomp
rol
mov
dec
mov
mov
push
std
xchg
leave
inc
aas
ds
add
or
adc
scas
add
and
mov
lock
jmp
les
call
addr16
xor
add
pop
push
inc
jns
mov
sbb
imul
xor
fdiv
sbb
mov
stos
cmp
mov
lea
cmc
xchg
dec
and
in
push
xchg
fmul
fst
test
mov
pushf
pusha
mov
mov
inc
dec
mov
imul
adc
inc
cwde
sub
mov
sbb
dec
dec
scas
les
mov
stos
je
int3
xor
aad
add
and
shr
clc
pop
bnd
push
scas
stc
ins
adc
scas
scas
repnz
mov
outs
mov
xor
clc
mov
jns
jbe
mov
loop
leave
out
pop
sar
mov
pop
into
fdiv
out
push
mov
cmp
cmps
cdq
cmp
add
xchg
mov
jne
aaa
fnstcw
neg
stos
nop
pop
std
mov
jb
cmp
cmp
hlt
dec
pop
movs
push
lods
push
arpl
mov
cmps
aas
xor
movs
(bad)
retf
jo
xchg
call
xor
enter
mov
pushf
xchg
and
dec
pop
pop
xor
lock
mov
fdivrp
(bad)
adc
sbb
aam
imul
stos
pop
aam
leave
cmp
cdq
std
fist
push
push
shl
push
test
mov
retf
test
into
enter
dec
cmps
xchg
jnp
xor
sar
add
out
test
mov
in
mov
das
fld
inc
test
(bad)
retf
or
jecxz
in
xchg
call
call
mov
lock
movs
dec
or
shl
and
stos
add
jns
fisubr
push
push
aam
in
in
and
fadd
adc
sbb
jmp
mov
sbb
mov
pop
mov
add
leave
dec
inc
ja
in
hlt
adc
mov
pop
add
pop
or
sbb
mov
call
nop
cld
cmp
adc
(bad)
(bad)
(bad)
dec
push
call
mov
ja
out
jne
pushf
in
xor
xor
aad
inc
fst
ror
pusha
call
das
xchg
out
in
dec
rcr
inc
shr
(bad)
ds
ja
inc
cmp
or
repnz
jg
push
jge
clc
pop
cmps
and
mov
ret
dec
mov
mov
mov
nop
sbb
dec
mov
mov
icebp
es
push
fisub
das
jp
movs
lahf
mov
mov
(bad)
jl
ret
lahf
jne
add
xchg
inc
mov
ror
ficom
sahf
loop
jmp
pusha
xor
inc
mov
mov
dec
jl
cmp
push
adc
push
repz
lds
(bad)
out
adc
push
cmp
push
sahf
in
and
ror
xchg
movs
and
fist
inc
add
(bad)
(bad)
nop
jnp
sub
int
mov
mov
xor
idiv
rcr
lock
aas
sub
xchg
pusha
ins
nop
push
bound
test
jp
test
sub
stos
mov
cwde
mov
jg
shr
jns
scas
sbb
mov
clc
pop
sbb
jl
dec
xchg
or
mov
int
test
fsub
xchg
and
pusha
nop
shr
cmp
and
(bad)
out
cmps
push
pop
lahf
xlat
jmp
xor
sbb
out
outs
dec
(bad)
push
std
sbb
jl
and
in
sahf
adc
and
aad
or
jmp
push
fdiv
cmc
cdq
pop
add
outs
pop
scas
outs
mov
outs
lods
loope
push
xor
sbb
cld
(bad)
(bad)
leave
(bad)
xchg
dec
outs
xor
nop
rcl
call
fst
sbb
arpl
mov
movs
adc
mov
adc
mov
(bad)
fldcw
dec
(bad)
dec
push
sub
mov
inc
jmp
jmp
popa
inc
imul
(bad)
lock
add
je
cmps
jle
pop
dec
sub
xchg
inc
mov
out
mov
sub
push
and
mov
mov
or
mov
lahf
dec
iret
mov
sbb
test
and
bound
mov
xor
pop
add
test
js
mov
jb
pop
(bad)
std
xchg
das
adc
mov
lahf
jb
add
push
push
data16
mov
push
inc
sub
dec
enter
sub
ss
and
or
and
inc
fcmovbe
jo
pusha
enter
pop
fsubr
sub
and
dec
retf
or
dec
dec
lahf
loopne
sub
pop
mov
call
cmp
stos
retf
mov
ss
jno
popf
cmps
loope
mov
cmp
adc
test
data16
cmp
jmp
cmp
lea
gs
mov
and
mov
xchg
in
ss
lahf
mov
inc
ficomp
sbb
pop
push
aad
mov
xchg
mov
mov
adc
das
outs
mov
nop
add
xlat
jae
sbb
xchg
jne
mov
adc
cmps
mov
push
push
(bad)
out
(bad)
in
and
push
add
push
in
cmp
repnz
xchg
out
div
push
(bad)
out
jmp
jg
add
jle
add
add
aam
sub
(bad)
retf
xchg
ficom
xor
and
stos
dec
data16
push
out
out
enter
imul
push
inc
push
xor
adc
sub
push
jne
mov
dec
adc
push
test
mov
stos
ins
pop
shl
push
loop
in
in
into
fisub
mov
push
sub
mov
sti
repnz
or
rcl
aam
in
aaa
add
and
or
mov
xor
scas
adc
push
movs
aas
mov
sbb
stos
fnstcw
and
fidiv
or
inc
nop
sahf
test
hlt
ins
dec
dec
adc
xor
lods
mov
mov
jle
push
pop
shl
push
jl
mov
int
cwde
in
addr16
add
addr16
jle
icebp
mov
fsubr
sbb
imul
jmp
ins
std
aad
out
(bad)
daa
mov
sbb
retf
outs
push
mov
sub
adc
loope
xchg
lods
sub
mov
mov
std
out
in
lds
jnp
adc
ins
mov
cmp
xor
xor
les
lds
dec
int
sub
retf
out
cli
repnz
sbb
jne
fwait
or
stc
xor
nop
stc
loopne
sahf
jo
mov
mov
invd
bound
mov
bound
call
dec
jge
ds
outs
je
sub
aaa
int
pop
xchg
(bad)
out
inc
nop
ins
ss
leave
cmp
xchg
xor
sub
cmp
icebp
xor
mov
push
leave
xchg
retf
std
ins
mov
xchg
and
pop
and
fsub
addr16
lea
lock
movs
cmp
stc
add
dec
sbb
adc
push
xlat
pop
test
cwde
fistp
xchg
dec
dec
and
ins
xchg
movs
shl
fisttp
pop
sti
xchg
push
add
adc
shl
in
imul
cmps
push
cmp
(bad)
xchg
mov
repz
in
mov
cmps
add
movs
mov
dec
jl
sub
and
enter
jl
or
ds
loope
sub
push
and
scas
dec
ror
dec
adc
push
xchg
sub
mov
mov
cmp
test
ins
cmp
test
mov
sub
add
mov
out
cmc
mov
mov
and
fwait
(bad)
enter
jne
retf
scas
xor
pop
out
ins
out
lahf
and
jge
pop
dec
data16
mov
dec
xchg
lock
dec
add
cmps
mov
mov
cwde
xor
ja
out
leave
inc
cmp
xchg
out
dec
push
or
dec
mov
imul
(bad)
cwde
pop
push
sub
inc
xlat
cld
cmps
in
push
fxch
mov
push
mov
icebp
aam
mov
cmp
int3
js
call
mov
movs
mov
push
loopne
cmp
jmp
jecxz
mov
cmp
ror
mov
push
jae
cdq
fidivr
imul
cmp
jbe
fsubr
loope
mov
adc
mov
imul
mov
int3
dec
fidivr
sbb
mov
iret
mov
rcl
or
pop
bound
sbb
ds
adc
pushf
inc
xchg
cs
adc
sbb
hlt
movs
cmps
cli
xchg
cld
fwait
add
adc
loopne
das
into
iret
jne
imul
mov
sbb
sub
cmps
fiadd
adc
inc
dec
and
(bad)
cld
out
popf
popf
jge
jecxz
gs
hlt
mov
lea
imul
adc
pop
jns
sbb
inc
(bad)
push
mov
cwde
repz
clc
call
push
out
sub
pop
ret
lahf
call
add
mov
adc
pop
add
or
test
mov
xor
cmps
aam
inc
mov
repz
ret
xor
ficom
not
test
daa
ror
lods
xor
test
sub
pushf
xor
cdq
inc
sar
bound
arpl
xchg
pmovmskb
jns
add
adc
jmp
and
inc
ins
pop
lea
and
xchg
and
ret
in
jle
adc
pop
shl
out
stos
imul
stos
or
addr16
mov
inc
ror
scas
jbe
fistp
xlat
cmp
loope
(bad)
jae
ffreep
out
cdq
push
jmp
or
mov
xor
or
stc
popa
push
sbb
push
aam
mov
inc
or
sbb
push
pop
sub
shr
div
sbb
push
xchg
and
popf
test
fstp
mov
jp
fild
sbb
sbb
mov
xchg
push
daa
popa
add
out
adc
(bad)
dec
rcl
xchg
adc
addr16
push
adc
cmp
push
cmps
clc
sbb
sti
test
xor
xor
jmp
add
sbb
mov
call
call
xor
mov
jae
xor
cmp
mov
xchg
ins
pop
cld
in
jno
sub
int3
jecxz
xlat
add
mov
ds
pop
sbb
(bad)
popf
or
arpl
push
repz
or
inc
stos
or
icebp
rol
fisub
sbb
mov
xchg
inc
mov
pop
into
jecxz
js
clc
out
loop
(bad)
sub
sub
or
mov
fistp
or
mov
sub
popa
add
cmc
sbb
push
out
xchg
or
or
loope
inc
push
and
inc
jbe
mov
out
push
jns
dec
jle
(bad)
es
push
test
(bad)
sub
sub
cmovl
xchg
dec
pushf
mov
jno
loopne
(bad)
(bad)
push
cmc
mov
mov
fld
loope
pusha
xor
sbb
loope
adc
imul
inc
jb
jmp
shr
mov
das
paddsw
sub
xchg
push
fwait
sub
mov
loope
xchg
push
loopne
mov
mov
movs
sub
cmp
push
lods
and
loop
mov
ins
(bad)
call
adc
push
or
outs
loop
jmp
sub
cmps
xchg
mov
or
mov
or
add
add
ins
push
test
in
inc
std
(bad)
jo
xchg
test
or
mov
adc
mov
shl
addr16
out
cmp
push
loop
push
stos
repnz
clc
in
xlat
push
dec
lods
inc
xor
xor
mov
or
shl
mov
adc
or
mov
jo
lock
into
jb
ss
loopne
sti
mov
inc
jmp
stos
aas
repz
loopne
mov
movs
sub
mov
jmp
add
jecxz
loope
pop
sti
mov
xchg
jns
cmp
int3
adc
mov
inc
cdq
aam
inc
mov
sub
loop
dec
xchg
nop
jmp
int
fild
out
sub
mov
add
icebp
xor
inc
shr
xor
mov
repz
push
sub
scas
push
je
lea
test
mov
push
leave
push
aaa
fchs
shl
jno
mov
rcr
data16
dec
mov
mov
sbb
addr16
sbb
xor
pop
mov
inc
pop
sti
mov
(bad)
add
dec
test
bound
push
dec
add
rol
and
into
pop
xchg
sub
sub
xchg
and
add
dec
(bad)
cmp
in
out
ret
fstp
scas
in
mov
mov
arpl
dec
xchg
shl
loope
push
scas
in
and
mov
mov
rol
adc
cmp
xchg
sbb
std
sbb
outs
js
aas
cmps
inc
mov
stos
pusha
data16
ror
fs
in
stos
mov
push
jbe
std
pop
adc
sub
stc
(bad)
and
aas
cmps
xchg
lods
inc
sbb
out
rol
and
xchg
cmps
fcomp
lahf
cmp
mul
or
mov
inc
shl
cld
rol
cwde
out
xor
xor
dec
inc
neg
jle
or
xchg
pop
add
dec
push
dec
gs
jp
rcr
xchg
hlt
jbe
inc
cwde
(bad)
mov
sub
popa
lahf
fmul
sbb
lods
sbb
pop
gs
jle
or
mov
add
pop
mov
and
rcr
outs
sub
(bad)
ins
loop
cmps
ret
adc
dec
xchg
add
movs
sbb
call
jge
pop
or
sub
popf
push
out
mov
out
fst
in
push
call
and
dec
inc
clc
sahf
mov
fwait
jb
pop
mov
adc
adc
mov
xchg
call
xchg
lods
loop
or
dec
retf
jno
or
jne
xchg
fmul
jecxz
add
mov
sbb
sub
rol
sub
inc
xchg
test
sub
mov
fcom
jno
sbb
mov
arpl
popf
fs
fiadd
lods
es
sub
push
lods
stos
sar
mov
jg
pop
and
sti
jno
aaa
lock
in
in
loopne
gs
call
mov
and
and
scas
jmp
clc
adc
data16
mov
mov
xchg
inc
mov
xor
or
inc
pop
xor
mov
rol
rol
xor
mov
pusha
stos
and
cmp
loopne
nop
les
sub
fwait
pop
inc
inc
rol
or
out
inc
daa
lahf
loope
fstp
xchg
fucom
mov
test
(bad)
inc
(bad)
test
mov
fimul
pop
popf
pusha
inc
dec
scas
xchg
jg
rol
fdiv
jle
lds
inc
stos
je
add
or
and
clc
xchg
mov
push
das
leave
hlt
mov
jae
or
(bad)
fld
test
lods
repz
or
fidivr
cmp
xchg
bound
push
inc
mov
int3
jmp
mov
or
add
adc
mov
ins
push
jno
nop
sbb
data16
push
adc
or
xor
leave
xor
jmp
lds
mov
movs
or
push
xlat
jbe
lods
jle
mov
cld
je
mov
dec
dec
mov
bound
movs
pop
push
mov
ror
or
stos
cmps
fimul
stc
xchg
retf
mov
movs
cmps
es
int3
stos
push
mov
leave
imul
(bad)
loopne
loop
lods
(bad)
mov
cdq
dec
stos
cmp
adc
inc
in
std
mov
lods
push
(bad)
aam
sbb
xor
call
mov
data16
push
push
ret
sub
test
dec
rol
jge
xchg
addr16
xor
cdq
popf
pop
push
cld
xchg
shl
pop
bound
imul
pop
dec
bound
int3
jg
mov
and
inc
sti
pop
inc
sub
loopne
lock
add
mov
lods
mov
mov
xlat
pop
xchg
test
scas
mov
adc
ret
sub
lods
daa
ds
loope
push
adc
inc
mov
retf
xor
jno
jge
pop
test
mov
leave
(bad)
enter
sbb
(bad)
out
aaa
jae
mov
pushf
enter
addr16
icebp
or
mov
imul
int
dec
js
mov
dec
sub
pop
pop
out
test
jnp
rol
repz
pop
clc
fsubrp
in
and
and
adc
int
xor
cmc
sbb
sti
data16
fmul
pop
stos
mov
outs
data16
aaa
js
pop
test
(bad)
out
mov
sahf
mov
xchg
jle
inc
or
jmp
int3
out
(bad)
and
sub
push
(bad)
mov
bound
mov
(bad)
jmp
(bad)
cmp
push
(bad)
pop
jmp
(bad)
(bad)
ins
xor
out
xchg
test
push
jmp
imul
imul
imul
clc
dec
or
mov
pop
adc
sbb
adc
jle
dec
popf
std
mov
ror
ret
dec
xchg
jmp
out
imul
or
mov
add
in
(bad)
push
jp
pop
(bad)
cmps
jne
dec
fidiv
test
sub
cmp
test
sahf
mov
adc
pop
jge
pop
or
mov
dec
xchg
inc
pop
(bad)
sbb
xchg
jo
mov
cmp
fcomp
loope
pop
adc
jl
mov
movs
push
cmp
je
int
push
sbb
test
mov
jp
cmp
jl
movs
outs
jb
sub
push
inc
mov
mov
sbb
imul
outs
daa
dec
inc
outs
push
cmp
and
sbb
sub
idiv
in
push
sub
fwait
cmp
test
aaa
push
nop
adc
dec
icebp
test
cmp
in
cmps
dec
cmc
dec
out
sub
out
hlt
or
xlat
pop
pusha
xchg
push
outs
aas
shl
pusha
inc
pop
xchg
or
cdq
push
mov
cmp
sahf
fs
mov
sub
fstp
add
retf
lods
cmc
push
shl
push
ins
cmp
nop
ds
fsubr
mov
xor
xlat
loope
vshufpd
mov
enter
push
jb
adc
pshufw
ins
sbb
aas
fbld
test
sbb
push
ins
push
cdq
mov
sbb
scas
mov
push
test
imul
mov
dec
call
jg
mov
cmp
jb
inc
push
xchg
sub
pop
addr16
sub
scas
leave
jns
sub
inc
sub
inc
(bad)
rcr
loop
dec
pop
out
clc
and
mov
jbe
and
and
cmp
cli
retf
(bad)
mov
popa
pop
mov
dec
sbb
jmp
pop
aam
dec
in
cmc
jmp
sahf
repz
std
or
jae
jg
(bad)
repnz
jns
aad
pop
arpl
xchg
movs
shr
pop
cld
out
xor
in
adc
xchg
sub
call
cmp
or
out
(bad)
cmc
fnstcw
xor
(bad)
ficomp
mov
inc
push
cmc
pushf
pop
push
mov
jbe
mov
and
cmp
and
jne
dec
or
jns
sub
mov
sbb
push
mov
and
mov
and
cld
jb
add
mov
fstp
add
pushf
dec
iret
js
adc
mov
mov
mov
sub
stos
popa
push
mov
das
adc
(bad)
std
call
inc
neg
in
popf
in
or
out
(bad)
dec
jg
imul
into
scas
add
stos
add
inc
lds
jp
xor
into
mov
jge
cmp
jb
pushf
jl
fwait
add
xchg
jb
test
std
mov
or
mov
out
pop
push
das
data16
push
daa
sub
xchg
mov
clc
mov
add
mov
cmp
xor
mov
int
add
sbb
in
and
cmps
sbb
jno
mov
das
retf
dec
xchg
aam
sbb
loope
cmp
cs
cmp
mov
jmp
loop
jecxz
js
inc
cmps
xchg
inc
cmp
lock
add
xchg
ins
aas
cmp
adc
mov
lods
add
(bad)
lods
push
push
xchg
and
fldenv
mov
ins
dec
jae
pop
(bad)
add
cmps
test
inc
pop
xlat
mov
inc
iret
data16
dec
mov
xor
inc
das
pop
and
fist
and
mov
push
mov
pop
jecxz
in
add
(bad)
lods
cmc
cmps
(bad)
fwait
sub
sub
jno
mov
mov
sar
dec
jo
rol
les
std
mov
shl
jmp
sub
mov
xchg
push
dec
and
enter
mov
call
out
rol
mov
not
xor
ins
xor
test
mov
sahf
and
push
fisttp
add
loopne
fnsave
add
push
push
shl
out
les
or
enter
mov
repnz
stos
call
dec
ins
fisttp
dec
pop
addr16
inc
out
push
arpl
leave
fidivr
stos
leave
mov
test
mov
scas
hlt
jle
lea
aam
adc
xor
mov
jo
(bad)
jns
xor
adc
(bad)
mov
pop
jecxz
xor
es
push
out
dec
adc
mov
dec
xchg
popf
mov
push
dec
movs
lods
pop
shr
test
div
pop
stos
jae
cmps
int3
dec
cli
dec
push
mov
mov
mov
inc
pop
out
(bad)
aad
mov
(bad)
jne
mov
inc
hlt
rcr
sbb
subps
xchg
pop
sahf
test
fnsave
inc
fs
(bad)
int3
shr
aam
mov
in
cmp
jge
int3
sbb
sbb
outs
(bad)
mov
js
nop
xor
inc
enter
jo
adc
inc
mov
out
jg
pop
mov
out
aas
scas
repnz
ins
adc
cmp
in
sbb
sbb
cmp
call
loopne
push
ror
mov
cmp
dec
dec
push
sbb
fld
sbb
bound
nop
sub
in
out
mov
mov
fidivr
shr
mov
jnp
push
scas
and
xchg
add
out
scas
and
ror
add
sahf
bound
pusha
ins
(bad)
cmp
or
xor
adc
mov
sub
sbb
aaa
int3
loop
add
pop
int3
xlat
fstp
cwde
sub
fs
aas
ret
xchg
lock
pop
xchg
pop
jo
rcl
mov
xchg
xchg
shr
loopne
push
mov
jnp
imul
cld
add
lock
mov
sub
or
inc
imul
(bad)
cmps
mov
outs
sbb
mov
jg
xor
out
in
fs
mov
cld
lea
pushf
jmp
push
mov
(bad)
cmp
mov
call
mov
dec
pop
sub
mov
mov
je
sub
dec
jl
in
pop
int3
jbe
inc
jns
scas
inc
scas
das
les
repz
loop
jmp
pop
cmp
cmp
(bad)
xor
les
fucomp
mov
dec
or
xor
cmp
mov
int
(bad)
inc
test
mov
add
pop
xchg
fstp
mov
cmp
out
sub
fnstenv
div
aas
sar
repz
dec
cld
jns
scas
cdq
inc
push
es
and
call
xchg
mov
jbe
addr16
lods
in
cmp
cmp
jne
repz
sbb
and
cmp
push
sbb
lods
pop
mov
jne
mov
lods
xchg
(bad)
mov
outs
dec
ins
mov
out
daa
add
mov
call
into
imul
cmp
dec
mov
rcl
ficom
sub
and
call
or
sti
jmp
add
out
pop
pop
cmp
push
dec
stc
xor
leave
pop
dec
jp
in
jae
outs
pop
xchg
or
or
push
lods
daa
loopne
imul
xor
dec
fistp
in
fwait
jmp
sub
inc
outs
sbb
sub
sti
hlt
outs
add
out
fsubrp
mov
push
dec
push
jecxz
cmp
or
push
ins
pop
mov
cmp
sti
out
xchg
pop
lahf
add
pop
retf
stos
jb
cmps
ss
or
mov
stos
mov
inc
add
push
ror
jmp
rcr
jge
add
sbb
push
mov
xchg
out
idiv
pop
pop
movs
aam
test
adc
mov
jnp
fstp
xchg
add
rcr
fisubr
cmp
mov
pusha
std
xor
push
xchg
sub
add
xchg
in
popf
adc
or
sub
into
xor
cmp
jbe
inc
jecxz
sbb
sbb
and
jne
xlat
scas
popa
push
pop
inc
fsubr
push
out
jmp
pop
mov
pop
and
(bad)
imul
pop
inc
jp
into
and
ins
sub
jmp
outs
loopne
mov
mov
imul
stos
xchg
pop
aas
adc
sub
push
mov
outs
aam
inc
fisttp
or
fisttp
add
pop
pop
jae
ins
ret
inc
mov
inc
xor
into
das
test
push
mov
test
test
cmp
jl
clc
dec
sub
or
xchg
icebp
loop
in
in
sbb
sbb
xlat
mov
addr16
or
scas
aam
lea
ret
jl
mov
(bad)
iret
or
stc
js
adc
mov
les
push
push
push
pop
push
add
fwait
adc
call
mov
cmps
adc
dec
aas
(bad)
push
outs
ja
rol
ins
bound
ss
aam
push
stc
or
jmp
shl
(bad)
out
les
lds
jbe
jns
push
or
ins
daa
cdq
sub
scas
clc
cli
aaa
dec
mov
repnz
xor
sar
in
xchg
or
repnz
add
inc
shl
dec
lahf
je
cmp
(bad)
fdiv
push
clc
loope
(bad)
cli
jmp
jno
mov
mov
int3
into
mov
add
sar
fisubr
mov
mov
js
addr16
ror
adc
mov
bound
mov
cld
mov
shl
je
jmp
rcl
hlt
inc
xor
pop
push
pop
xlat
in
ins
mov
(bad)
jbe
xchg
pop
inc
dec
jne
imul
xchg
ins
jp
cmp
mov
rol
lock
retf
(bad)
iret
cld
stos
sar
sbb
sar
es
dec
cwde
out
popf
ins
xchg
retf
fwait
pop
in
mov
(bad)
into
test
das
daa
xor
ins
cmp
mov
dec
and
ins
mov
sbb
mov
pop
pop
mov
in
mov
out
shl
pop
jns
and
mov
nop
push
call
add
cld
sbb
inc
out
cld
cs
aam
xor
xor
adc
add
jmp
push
repz
cmp
pop
cmp
sbb
mov
mov
(bad)
jb
cmp
int
nop
icebp
repnz
arpl
jmp
xchg
sub
mov
rcr
(bad)
xchg
jns
fwait
loopne
dec
sbb
call
sbb
push
dec
movs
pop
pusha
mov
or
xlat
loope
retfw
adc
retf
adc
cmp
push
clc
jl
pop
cs
add
sbb
sub
out
in
xor
jmp
mov
or
pop
adc
push
and
cmps
movs
xor
ja
loopne
inc
push
or
xor
test
push
fidiv
arpl
cld
push
sbb
inc
jecxz
push
sub
gs
mov
clc
and
in
sbb
outs
dec
loope
cmp
je
inc
mov
mov
lods
mov
mov
dec
pop
and
loope
popf
scas
or
jmp
push
cmc
jp
jle
ficom
popa
and
call
lds
mov
cmp
xor
sub
push
cmps
inc
nop
sbb
js
mov
inc
inc
push
add
xlat
push
xchg
in
pop
xchg
lods
mov
sbb
add
ror
jmp
dec
xchg
rcl
(bad)
fisub
(bad)
mov
mov
ds
sbb
je
xor
dec
mov
adc
mov
mov
push
xchg
and
dec
pop
xchg
xor
pop
dec
scas
push
aad
pushf
cmp
in
sub
pusha
inc
out
sbb
xlat
popa
push
sub
sar
leave
jmp
cmps
test
push
pop
push
or
and
mov
push
scas
adc
fadd
mov
push
ret
adc
lods
test
in
shr
push
pushf
jg
jp
xlat
daa
jmp
pop
add
loop
imul
loope
cmps
mov
es
push
jnp
pop
ins
inc
jnp
xsha1
cmps
jae
mov
jecxz
pusha
xchg
sub
cmp
xchg
call
dec
mov
es
pop
cwde
cwde
loopne
jae
hlt
shr
xchg
addr16
ret
stos
push
imul
fidivr
pop
cwde
and
mov
or
js
add
mov
sbb
sub
aas
rcr
in
rcr
imul
pop
jmp
int3
pop
jo
adc
and
sub
pop
xor
or
and
aad
pop
push
std
inc
ss
adc
pop
mov
jbe
push
push
stc
mov
cmp
mov
repnz
sub
pop
sbb
fdivr
inc
adc
adc
mov
mov
inc
xchg
sub
pop
jle
inc
mov
loopne
mov
mov
mov
xchg
in
je
sub
mov
into
aaa
xchg
neg
adc
jo
hlt
movs
push
jae
sub
stc
adc
xchg
in
lods
(bad)
bound
arpl
dec
daa
fcomip
inc
push
lods
test
push
adc
outs
cdq
je
into
push
sbb
pop
stos
and
int
sbb
push
in
vaddsd
aad
cli
in
lods
test
(bad)
mov
ds
idiv
movs
jecxz
daa
jno
in
fisub
lea
or
mov
mov
add
addr16
pop
loopne
sub
cmp
dec
imul
out
ret
jmp
inc
shl
mov
push
das
and
and
jl
(bad)
dec
enter
addr16
sub
inc
dec
xchg
cwde
pop
(bad)
push
or
or
nop
or
xor
push
lods
inc
xlat
or
les
jae
cmp
dec
movs
add
movs
sbb
add
jo
outs
ja
sub
sub
out
mov
sbb
je
dec
adc
push
pop
jnp
sub
inc
repz
mov
jmp
arpl
icebp
sub
test
addr16
fadd
mov
adc
shl
or
inc
(bad)
jp
inc
aam
js
out
mov
jo
clc
fdivr
test
inc
mov
xchg
lds
mov
jb
outs
js
pop
movs
ret
aad
and
pop
cwde
sahf
add
int3
shl
xchg
gs
sbb
loopne
xchg
sub
push
daa
out
repz
mov
aam
adc
dec
mov
or
repnz
xor
cdq
or
inc
and
aam
cmps
addr16
js
sbb
in
gs
mov
mov
adc
push
add
nop
push
jb
test
adc
stc
nop
cmp
and
mov
cmp
ret
aas
lds
mov
mov
fisubr
popf
scas
and
bound
(bad)
js
mov
cli
push
(bad)
mov
test
sub
test
in
sahf
xchg
and
loope
xor
aaa
add
mov
mov
imul
xor
dec
lea
xchg
pop
or
dec
pop
xor
scas
pop
iret
in
loopne
je
adc
sub
pop
aad
jmp
mov
xor
not
add
sar
mov
mov
pop
pop
mov
mov
xchg
clc
sti
mov
sub
das
cmp
jo
loop
aam
pop
stos
jmp
retf
pusha
mov
popf
pop
iret
xchg
(bad)
imul
xor
movs
nop
mul
xlat
jo
xchg
jecxz
jecxz
xchg
dec
pop
and
cmp
out
or
lock
cmps
push
div
cmp
lock
dec
adc
repz
fidivr
movs
movs
rcl
or
cmp
xchg
fwait
mov
mov
sbb
mov
push
test
pop
xchg
lahf
(bad)
cmp
and
loopne
cmp
sbb
mov
(bad)
lahf
loope
push
jecxz
sub
inc
ret
daa
mov
push
mov
jmp
les
or
cli
mov
outs
jmp
xor
cmp
(bad)
jnp
aad
and
je
(bad)
mov
and
dec
dec
lock
shl
inc
push
lds
out
mov
scas
mov
ins
jo
popf
pop
cmps
dec
sar
pop
data16
and
addr16
scas
es
push
mov
ret
mov
jno
mov
out
jne
jb
jno
mov
mov
or
ret
mov
fisub
fwait
aam
xchg
inc
pushf
cwde
cmc
dec
jle
adc
adc
out
sub
sub
sub
idiv
lock
push
movs
hlt
fnsave
pop
mov
repnz
or
mov
ror
add
jge
push
pop
inc
mov
and
lods
and
stos
cmc
add
cmc
ror
pushf
adc
and
(bad)
mov
sub
out
mov
(bad)
in
retf
mov
pop
add
movs
loopne
div
movs
test
and
xor
aas
sub
nop
lahf
xor
int
gs
xchg
jp
push
retf
bound
xchg
jl
mov
mov
rol
jae
mov
adc
mul
sub
fwait
add
pop
test
loopne
out
pmuludq
lea
rcl
adc
jnp
jg
mov
in
out
test
cmp
sub
aas
mov
add
xor
es
sub
stos
outs
adc
sbb
cmp
test
push
mov
adc
add
in
jp
or
fucomi
jnp
out
out
mov
jbe
sbb
cpuid
sub
out
pop
mov
sub
ret
jmp
stos
and
dec
shr
jmp
xor
in
sbb
(bad)
mov
inc
and
adc
jmp
fbstp
mov
push
sbb
mov
push
inc
sub
sbb
pusha
and
mov
sub
ds
addr16
loopne
ret
adc
pop
icebp
idiv
es
adc
mov
sbb
fnstsw
ins
xor
cwde
add
push
xchg
ficomp
in
xchg
adc
ins
es
(bad)
stc
mov
rcl
or
les
ss
popa
int
mov
mov
cli
ss
push
cli
(bad)
rol
mov
dec
and
dec
push
dec
push
push
neg
repnz
mov
je
sbb
dec
adc
movs
mov
mov
mov
jle
xor
mov
sub
cld
inc
(bad)
in
test
sub
retf
out
jns
sbb
ins
sub
xlat
adc
cmc
stos
mov
push
int
dec
sbb
jae
xor
mov
pop
jp
fistp
pop
shr
xor
rcr
js
pop
xchg
in
lods
cs
data16
or
or
fidiv
cmp
push
ins
push
push
rcl
add
add
xlat
sub
jae
jne
sar
mov
mov
sub
push
shr
or
(bad)
push
dec
ret
pop
cmp
cdq
sbb
sahf
inc
imul
sbb
test
dec
jne
xor
cld
fild
hlt
not
xor
sbb
movs
(bad)
outs
mov
jmp
retf
cdq
xor
repnz
dec
iret
sbb
xchg
push
push
sub
loope
jle
bswap
cmp
inc
add
clc
xchg
cmp
icebp
push
not
mov
pop
mov
sub
add
in
les
cmp
call
shl
push
and
cmp
retf
fstp
daa
scas
mov
inc
fcom
mov
lds
icebp
xchg
ja
push
jmp
xor
lds
adc
cmp
std
(bad)
jge
in
mov
in
sar
sti
popf
clc
ror
fild
jge
pop
les
fdiv
and
jnp
out
add
mov
ret
adc
mov
xor
mov
test
cld
push
push
shr
repz
(bad)
into
pop
jl
and
(bad)
and
mov
nop
stos
movs
jle
and
(bad)
jle
enter
and
test
xor
enter
icebp
xchg
(bad)
sub
mov
pop
pop
popf
adc
fidivr
std
aam
dec
je
adc
and
arpl
bnd
lahf
mov
cmp
pop
cmps
lods
and
call
add
cdq
jb
shl
and
int
call
int3
cld
xchg
sahf
enter
adc
dec
xor
ret
out
scas
pop
mov
cmp
mov
scas
fdivr
adc
popf
sar
gs
add
pusha
and
inc
sbb
push
jnp
popa
iret
push
lods
movs
out
fidiv
jnp
pusha
inc
pop
and
movs
xor
(bad)
mov
(bad)
ret
loope
lea
lea
frstor
sub
shl
out
add
inc
out
pop
push
xchg
inc
scas
rcr
xor
int3
xchg
lock
hlt
pusha
loope
pop
sahf
dec
sub
add
fiadd
aaa
ror
or
xor
movs
sub
mov
test
and
aam
xchg
stos
popa
and
adc
sub
loop
cmp
mov
fisub
jo
sub
ret
mov
push
leave
xchg
test
(bad)
jne
mov
js
cmp
std
inc
lods
lds
dec
or
leave
xlat
dec
mov
jns
(bad)
cmp
sbb
jne
stos
movs
sub
jne
ficomp
test
data16
fcomp
push
lods
ss
sbb
ficomp
push
dec
xchg
xor
inc
push
mov
mov
loope
mov
mov
adc
sub
repnz
enter
fmul
push
ret
mov
stos
sbb
xor
xchg
ds
into
push
icebp
sbb
arpl
(bad)
ret
in
jl
js
or
dec
rcr
mov
xchg
std
push
call
lods
hlt
sub
scas
fcmovbe
gs
push
dec
jg
mov
out
imul
sbb
jmp
(bad)
fwait
xlat
mov
push
push
add
xchg
cmp
mov
xor
stc
sar
sbb
cmc
inc
cmp
daa
or
pop
or
into
cld
push
push
sbb
cmp
jno
sahf
xchg
cmp
div
ja
or
inc
repz
mov
pop
test
(bad)
cmp
mov
pushf
sub
jg
adc
add
adc
xor
mov
jno
mov
pop
sti
out
push
xchg
or
dec
imul
cdq
xor
and
call
mov
xchg
xor
xor
dec
ficom
cmp
xchg
repz
mov
into
inc
xchg
(bad)
iret
xor
mov
push
fisub
jns
iret
loop
movs
or
sub
pop
sub
loop
repz
xor
jo
cmp
sbb
inc
jmp
(bad)
xor
je
jo
and
stos
jl
test
mov
add
add
push
jno
test
cs
lock
out
fistp
icebp
mov
dec
rcl
ja
stos
fsubr
loop
sub
cdq
mov
test
stc
fsub
(bad)
or
cdq
add
cmp
pop
push
xor
nop
jne
test
inc
hlt
mov
repnz
mov
xor
fild
or
les
xchg
std
js
cmps
fprem
into
cmp
in
sbb
popa
mov
(bad)
loopne
and
ret
or
and
push
test
(bad)
out
js
stos
mov
mov
and
ja
ja
inc
cmp
repnz
jmp
dec
daa
loope
adc
iret
pushf
stos
movs
mov
mov
iret
mov
add
arpl
inc
xlat
and
or
mov
sti
mov
loop
sbb
stos
ins
(bad)
jecxz
xor
xchg
outs
cdq
pop
mov
adc
mov
repnz
loope
push
imul
es
ret
and
sub
sbb
repnz
cmps
cmp
retf
jnp
and
xchg
in
cs
adc
push
(bad)
xor
mov
sub
lea
mov
sub
pop
int
imul
in
cmps
movs
ret
push
pop
mov
sar
jne
ficomp
popf
addr16
jno
and
sti
js
push
(bad)
push
data16
sub
inc
ror
jp
outs
std
adc
mov
xchg
mov
mov
xchg
stos
or
adc
in
adc
xchg
inc
cs
out
sbb
(bad)
push
cwde
(bad)
cdq
dec
push
jecxz
cs
add
call
adc
mov
push
xor
pop
add
inc
call
sbb
sbb
out
scas
shl
mov
or
outs
arpl
or
jo
fild
xor
mov
pop
fst
cmp
add
jmp
popa
pop
ds
jl
sbb
mov
mov
imul
sub
ins
rcl
dec
adc
xchg
movs
test
(bad)
xchg
scas
addr16
sub
mov
cdq
inc
cmps
lock
ja
int
repnz
jmp
and
loop
shl
push
mov
not
rcr
pop
push
ret
int3
dec
jb
cli
shl
fdivr
in
mov
lds
jge
push
repnz
pop
xor
lods
daa
pop
dec
dec
fisub
jmp
dec
jg
xor
mov
rol
outs
mov
cmc
adc
pop
test
mov
cmp
dec
push
and
iret
bound
push
int
out
pop
std
mov
mov
movs
lds
cs
pop
and
sub
mov
repz
or
outs
scas
bnd
movs
jae
or
in
mov
inc
push
data16
lods
adc
jmp
pop
sub
aaa
je
fadd
xor
push
adc
fs
mov
or
inc
mov
stos
sub
jl
pop
xor
jle
xchg
dec
lods
xor
int3
repnz
inc
ret
xor
das
out
jmp
rol
xor
or
retf
mov
or
(bad)
xchg
retf
xchg
mov
mov
mov
mov
call
push
test
fcom
ja
push
shl
jecxz
inc
mov
dec
hlt
push
push
(bad)
mov
mov
cwde
sahf
pop
sub
cmps
xchg
or
push
imul
xchg
adc
ins
sbb
cwde
test
aas
rcr
into
test
inc
cs
pushf
aad
btc
pop
add
aad
fcomp
fst
cmp
int
mov
popf
in
dec
mov
mov
movs
or
aaa
(bad)
sub
out
int
and
ins
pop
inc
stos
leave
stos
popw
repnz
fadd
inc
mov
mov
push
push
mov
dec
mov
loopne
fstp
je
scas
inc
mov
(bad)
adc
or
test
cmp
cmp
jp
addr16
mov
loope
arpl
retf
cmp
ins
jb
or
cdq
popf
push
add
jns
ret
dec
xor
fmul
(bad)
mov
mov
inc
jae
loopne
inc
outs
pop
int3
and
icebp
jb
push
inc
pusha
jmp
xor
icebp
(bad)
sub
ret
jne
das
shl
jle
test
test
dec
or
pushf
loope
mov
mov
push
pop
and
and
and
int3
dec
inc
mov
es
sbb
stos
into
stos
aaa
mov
call
ins
bound
pop
xor
movs
lods
test
(bad)
sti
xchg
pop
jecxz
push
add
sbb
aas
aad
ret
test
repz
cwde
test
int
loope
adc
fldz
and
xchg
mov
sub
sub
pusha
retf
or
xor
sub
mov
icebp
or
inc
push
stc
push
dec
xchg
mov
jecxz
lds
push
inc
sub
ret
mov
out
jle
sub
rol
sub
jl
int3
inc
xor
or
mov
imul
ja
hlt
ins
imul
je
add
mov
es
dec
xchg
xchg
pop
pop
sub
ror
shl
sti
repnz
mov
ins
mov
jo
mov
inc
jmp
jecxz
sbb
pusha
in
pop
inc
mov
dec
fs
mov
mov
pop
retf
xchg
push
pusha
ret
adc
in
mov
xchg
mul
(bad)
cmp
enter
aaa
xchg
and
call
jecxz
int3
(bad)
out
jmp
inc
cmps
sbb
pop
add
add
jbe
mov
movs
mov
mov
mov
pop
sub
popf
ja
lods
vmovmskpd
or
es
dec
sbb
(bad)
or
les
shr
jp
sbb
xchg
mov
push
jl
mov
jbe
pop
outs
aam
mov
adc
dec
cmp
das
xchg
mov
mov
shl
enter
dec
pushf
cdq
data16
adc
(bad)
jg
add
add
data16
jecxz
movs
jmpw
leave
cmps
movs
sahf
not
sbb
jg
sbb
mov
mov
aas
pushf
dec
sub
(bad)
movs
loop
icebp
lea
push
shl
adc
cwde
push
cmc
jno
and
adc
loopne
dec
jnp
lods
adc
jne
cli
xor
jne
sar
xlat
jmp
stos
xor
dec
sahf
sbb
lock
fist
add
add
inc
pusha
ffree
mov
jb
mov
or
xor
jecxz
cmc
fmul
pop
and
div
frstor
mov
movs
jns
in
sti
sbb
repnz
(bad)
pop
std
xor
scas
xchg
pop
add
ins
scas
jmp
ins
inc
jge
jae
popf
mov
jg
aas
es
and
push
(bad)
in
mov
xor
mov
push
xchg
pop
(bad)
mov
repz
mov
pop
dec
sar
sub
xchg
test
adc
js
jo
lods
jle
push
pop
or
sbb
sar
cmps
mov
icebp
das
mov
clc
and
out
outs
jmp
cmp
leave
inc
shl
pop
jmp
pushf
cmps
leave
mov
sub
dec
cmp
adc
inc
cdq
clc
mov
test
cmp
pand
js
jge
add
jne
pop
jg
sbb
data16
dec
and
xchg
pop
sub
or
shr
iret
xchg
xor
retf
ret
jbe
add
xchg
adc
and
push
xlat
pusha
jge
add
test
jg
xchg
adc
fisttp
in
fiadd
movs
jmp
ins
push
push
fwait
int
mov
call
mov
movs
cmps
jmp
fwait
mov
sub
push
movs
xchg
push
stos
mov
push
mov
jb
push
imul
ret
dec
add
or
stos
clc
or
(bad)
div
cld
pop
fistp
fisub
jp
das
mov
adc
pushf
add
(bad)
xchg
mov
xchg
scas
pop
nop
sbb
aaa
pop
push
leave
enter
xor
sbb
fwait
or
stc
pop
imul
xchg
lods
in
dec
retf
xchg
repz
jp
(bad)
into
add
and
(bad)
jne
or
pushf
ror
lock
imul
xchg
jo
test
nop
(bad)
sub
and
or
cmp
or
rol
sbb
rcr
fimul
out
lahf
call
push
in
mov
int3
das
sti
cmp
(bad)
imul
add
mov
in
outs
ins
ins
sub
sub
das
fsub
push
cmp
je
aam
jp
(bad)
jb
call
nop
scas
cmp
ror
enter
xor
mul
outs
aas
sub
and
add
push
inc
ins
cmp
mov
inc
inc
(bad)
mov
rol
cmp
mov
test
mov
repz
jmp
out
jnp
sub
outs
fist
daa
dec
push
pop
call
in
pusha
sub
loop
in
mov
cmp
add
ret
jno
outs
addr16
repnz
repz
mov
adc
popf
rcl
loop
icebp
sub
jecxz
popf
enter
in
push
leave
loopne
mov
mov
push
aad
imul
adc
adc
jl
mov
push
add
jnp
loope
jp
mov
jmp
and
repnz
clc
call
adc
push
fwait
mov
adc
sbb
jecxz
sbb
mov
in
xchg
jns
mov
sub
adc
inc
jge
cs
xor
mov
fild
outs
lods
mov
mov
mov
ss
mov
pop
ja
and
mov
dec
mov
push
neg
rol
xchg
js
scas
adc
or
mov
test
jge
xlat
sub
lods
mov
add
shl
mov
into
mov
jecxz
xchg
mov
fidivr
mov
mov
pop
imul
dec
cmps
enter
popf
ins
cmp
shl
dec
add
or
(bad)
sar
(bad)
ret
out
das
or
fnsave
test
jno
outs
lea
inc
frstor
in
aam
cld
push
mov
xor
call
test
push
cld
sbb
mov
mov
loop
dec
iret
push
mov
xchg
mov
jg
shl
call
mov
fsub
adc
rol
pop
push
xlat
push
mov
mov
or
push
and
dec
ret
adc
and
mov
mov
xchg
les
or
(bad)
adc
and
or
jmp
cmp
shl
clc
mov
loopne
sub
sub
test
shl
in
les
cmp
pop
push
mov
aaa
xchg
inc
cmp
mov
lods
jnp
fwait
pop
sub
bound
sub
and
pop
mov
fs
push
sub
pushf
(bad)
btr
jmp
nop
push
and
sbb
repnz
cs
cli
push
outs
sub
(bad)
lahf
cmp
sub
push
inc
cmp
aas
adc
es
dec
push
jnp
ret
popa
pop
and
push
test
inc
cwde
mov
and
aas
test
inc
ins
push
dec
sbb
sti
cmp
(bad)
cmp
pop
ins
xchg
push
in
test
add
loop
arpl
jp
addr16
cmc
test
add
es
jnp
cvtps2pi
pushf
xchg
or
mov
add
adc
rcl
mov
push
jmp
xor
sub
jno
sub
out
pop
lock
cmc
call
and
sbb
sub
push
int3
pop
add
fidiv
push
xor
add
mov
add
or
es
xchg
(bad)
stc
inc
lock
jae
ins
les
dec
xchg
std
xchg
xor
fcmovb
mov
pop
nop
pop
and
push
jle
arpl
and
fwait
cmp
mov
leave
sbb
loope
(bad)
retf
scas
and
add
push
cdq
jp
mov
out
dec
push
add
sti
sub
mov
mov
xchg
cmp
pop
adc
xchg
jb
bound
dec
xchg
addr16
retf
add
cmp
lea
add
aas
repnz
dec
sub
sub
jmp
retf
and
fsub
shr
mov
cmp
or
out
sub
jmp
xor
jno
cs
mov
push
data16
cld
jns
jne
fucomip
pop
mov
in
rol
dec
adc
scas
dec
sbb
test
or
or
arpl
or
adc
shr
out
shl
push
mov
inc
add
cli
jle
hlt
pop
inc
ds
mov
aas
(bad)
mov
push
lock
(bad)
adc
aas
stos
aam
mov
les
jne
popf
loope
jo
pop
mov
scas
inc
dec
sub
stos
stos
pop
xchg
mov
inc
pusha
or
cmp
add
mov
mov
sub
sahf
push
imul
lods
icebp
in
popf
add
pusha
inc
lods
add
jnp
mov
inc
push
xchg
call
pop
scas
jbe
jge
jmp
jecxz
shl
cmps
das
push
xor
pop
pop
mov
(bad)
sbb
dec
cs
mov
lods
ins
cli
daa
mov
dec
mov
lods
or
sub
dec
mov
(bad)
test
test
jp
jge
cli
mov
ret
push
stos
jg
xlat
es
stc
(bad)
add
(bad)
fwait
add
adc
jbe
ret
jo
test
loop
cmp
sub
aam
xlat
mul
dec
rol
das
mov
mov
pop
jmp
aaa
fxch
mov
sub
test
retf
daa
xor
adc
bnd
sub
push
push
aam
xchg
sub
out
jge
fisub
das
test
aam
call
push
fst
cmps
and
add
xchg
retf
sub
bound
hlt
out
ss
pop
pop
mov
jns
sbb
ins
div
inc
sub
sub
push
stos
aaa
push
dec
xor
xchg
(bad)
push
cmp
jmp
or
adc
hlt
in
xlat
jne
int
outs
mul
cmova
xor
es
(bad)
movs
xchg
stos
js
arpl
mov
or
xlat
or
out
out
scas
or
dec
btr
mov
(bad)
lahf
clc
jecxz
std
pop
rcr
ficomp
or
dec
add
cmp
xchg
cmp
pop
mov
pop
(bad)
pop
test
enter
aaa
mov
sbb
lods
cwde
cmp
xchg
fucom
jmp
xchg
lods
mov
addr16
je
xor
push
imul
hlt
jae
cmc
jo
out
scas
mov
cmp
jne
add
inc
ret
pop
pop
cmp
cmps
in
pop
fcmovbe
std
inc
sar
push
adc
mov
push
xor
xor
test
mov
frstor
pop
inc
sar
gs
test
mov
fistp
shl
pop
je
inc
test
mov
jo
ins
and
es
aam
mov
add
cmp
es
inc
aam
jge
xchg
push
nop
cmp
mov
cmps
push
dec
in
or
xchg
cmp
fxch
(bad)
ss
or
div
cld
in
loop
in
mov
pusha
push
aad
nop
aas
(bad)
cdq
sbb
pop
enter
dec
add
dec
into
sahf
pop
mov
(bad)
fnstsw
(bad)
repz
leave
jg
lds
lock
js
cmc
dec
dec
icebp
adc
adc
sub
arpl
in
push
jae
sar
call
push
adc
scas
cmp
xor
icebp
ss
sahf
shl
mov
cmp
imul
lock
sub
std
sbb
mov
push
push
inc
mov
repz
ror
add
out
xchg
ins
mov
mov
pop
jo
sbb
pop
pop
xor
sub
mov
jge
sub
jb
mov
mov
aaa
js
xchg
hlt
pop
adc
clc
sub
dec
mov
(bad)
cmp
call
cmps
push
imul
adc
sub
inc
call
inc
retf
jb
cwde
ins
adc
repnz
inc
sbb
movs
test
cwde
push
lods
stc
retf
cli
sbb
arpl
push
adc
stos
fcom
inc
popf
(bad)
adc
pop
mov
sub
sar
scas
jne
mov
xchg
jle
pop
jo
adc
in
mov
clc
push
jle
mov
inc
mov
xchg
mov
fld
stc
movs
mov
mov
pop
jns
jle
cs
mov
in
scas
sub
push
out
jns
add
(bad)
(bad)
(bad)
jne
sub
jecxz
mov
mov
(bad)
cli
mov
jno
inc
lds
outs
sub
out
inc
pop
and
clc
adc
call
cmp
in
adc
cmps
ins
jle
cmp
push
mov
add
mov
stc
into
mov
jmp
add
in
shl
arpl
cmp
mov
fnstcw
cmp
movs
pop
jecxz
test
pop
in
out
sar
mov
je
std
sbb
push
sub
ret
push
dec
test
stc
aad
jg
or
cmp
scas
inc
int
ret
outs
mov
sub
test
gs
loop
repz
fld
movs
int
xchg
sub
sub
push
repz
cmc
scas
leave
(bad)
lods
xchg
cmp
cmps
dec
leave
clc
mov
inc
adc
call
mov
and
sub
adc
mov
sub
pop
ins
mov
adc
int
les
imul
dec
xor
and
out
sub
jmp
fisttp
sub
push
mov
or
sbb
(bad)
loop
fistp
push
sbb
add
push
scas
mov
enter
ret
(bad)
div
(bad)
xchg
mov
aam
mov
ret
jae
mov
mov
ret
addr16
test
rol
sbb
push
pop
xor
jae
fs
popf
push
adc
jle
mov
aaa
adc
stos
add
xchg
push
lds
cvtps2pd
push
lds
inc
in
xor
cmp
repnz
add
pop
adc
add
test
add
mov
mov
dec
fwait
aad
mov
sbb
aaa
imul
and
pop
xchg
jae
movs
adc
pop
aad
mov
(bad)
xchg
sub
sub
xchg
repnz
pop
push
leave
cmp
xor
push
dec
je
xchg
jmp
dec
or
repnz
push
push
test
mov
rol
sbb
aas
pop
lods
loop
cdq
loopne
ins
arpl
mov
fwait
cmc
dec
aaa
add
pop
imul
inc
cmp
lahf
imul
addr16
dec
aas
mov
nop
adc
adc
data16
jmp
test
xor
movs
stos
fsub
out
loop
gs
dec
ja
mov
cs
mov
in
inc
aad
stc
inc
xchg
cmp
cmp
mov
pushf
xor
in
jbe
test
pop
sbb
shl
in
xchg
fwait
sub
fild
loop
(bad)
test
and
sbb
gs
push
mul
dec
mov
ret
dec
adc
cld
and
push
movs
aam
in
adc
(bad)
mov
xor
mov
mov
sbb
js
mov
jge
inc
icebp
mov
lds
mov
adc
test
xchg
bound
sub
cli
inc
stc
fnstsw
idiv
arpl
(bad)
jb
push
ds
add
push
std
imul
mov
ret
dec
pop
pushf
retf
into
inc
push
rcr
push
icebp
sbb
push
add
les
fcom
pop
pop
sbb
adc
lea
and
jae
aad
and
repz
ins
adc
xor
xor
add
loop
pushf
sub
out
hlt
out
call
ss
inc
sti
jbe
repz
dec
ja
inc
aas
cmps
add
mov
push
jne
ror
dec
xchg
cdq
mov
fmulp
add
pop
outs
xlat
dec
outs
or
js
push
pusha
xchg
lock
sbb
dec
std
dec
call
dec
pop
pushf
movs
jmp
loopne
push
test
xor
mov
jae
adc
or
sbb
iret
sbb
int3
jle
sub
pop
aaa
jno
or
in
sbb
(bad)
mov
in
dec
inc
addr16
jb
out
sub
outs
ret
scas
mov
mov
call
cmp
mov
mov
sub
xor
idiv
cmp
in
pop
xchg
in
sbb
mov
push
std
push
sub
aam
test
aas
std
mov
daa
(bad)
dec
lahf
adc
add
lahf
ret
mov
add
loope
aaa
cwde
cmc
pop
frstor
pop
xchg
mov
mov
pop
or
pushf
int
not
pop
cmps
mov
outs
inc
int3
inc
inc
sub
es
push
mov
aas
out
loope
mov
pop
in
out
push
out
xchg
out
call
mov
jns
shr
mov
jo
mov
jns
sub
(bad)
mov
popa
adc
test
push
mov
and
dec
data16
xor
inc
mov
shl
mov
outs
and
fdiv
and
add
mov
xchg
mov
sar
dec
mov
in
std
mov
pop
push
outs
push
mov
sub
mov
mov
mov
test
aad
pop
mov
xchg
sub
fadd
cmp
jnp
fld
mov
sti
int3
inc
push
cdq
aam
out
out
push
pop
xchg
lods
mov
nop
add
shl
and
outs
inc
and
jbe
jo
pusha
stc
je
mov
mov
sub
in
push
jae
je
mov
cmp
in
in
mov
adc
cdq
ds
mov
in
xchg
sbb
out
lds
pop
dec
ja
dec
adc
clc
pop
adc
das
out
ins
jno
sbb
mov
sub
and
les
cmp
mov
popa
dec
ins
and
test
pop
daa
scas
imul
mov
pop
js
xchg
fld
cmp
les
cmps
inc
adc
fwait
xchg
sahf
xchg
cmp
repz
cmp
sbb
imul
or
pop
das
jmp
add
jo
dec
mov
xor
push
cs
fwait
add
dec
jae
and
inc
cmp
mov
adc
mov
nop
adc
jno
push
(bad)
(bad)
pop
bnd
jno
aad
jnp
stos
sahf
popa
nop
mov
add
movs
push
pop
cs
push
fs
mov
cld
fsub
push
sbb
nop
sahf
aas
outs
es
cmp
adc
sub
nop
dec
hlt
jb
jp
or
call
mov
inc
in
add
inc
and
sar
mov
lds
push
jns
std
cmp
mov
retf
in
out
pop
push
add
push
adc
jecxz
popa
mov
fs
mov
or
aam
shl
dec
(bad)
imul
and
(bad)
into
aas
aaa
pop
fs
cmp
arpl
jecxz
jae
in
sub
mov
(bad)
jmp
test
inc
daa
pushf
into
jno
pop
stos
and
adc
mov
and
rep
popa
in
mov
dec
lds
clc
sub
xchg
jnp
nop
xchg
hlt
jae
mov
mov
cmps
bound
sub
test
add
test
sbb
xor
or
xor
ss
in
lahf
retf
add
adc
mov
out
adc
adc
cmp
mov
push
out
xchg
inc
sbb
mov
scas
call
cmp
or
enter
retf
test
and
jae
js
ds
fucom
dec
jns
pop
mov
(bad)
repz
cmps
popf
mov
int
aaa
fs
xor
pop
jmp
xlat
fcmove
(bad)
mov
mov
data16
out
or
sub
push
pushf
aaa
sub
stc
mov
push
dec
hlt
add
stos
jnp
scas
shr
cmp
andnps
jne
retf
adc
int3
out
inc
dec
mov
mov
ss
inc
xchg
icebp
cmp
xchg
sbb
dec
mov
xor
(bad)
push
pop
cdq
inc
add
test
fwait
das
adc
dec
push
in
xchg
pushf
jns
dec
mov
pop
in
push
dec
scas
and
call
popa
stos
dec
adc
into
jmp
shl
ss
aad
inc
into
pop
mov
cmp
pop
or
add
test
aas
pop
pop
cmps
test
push
push
jne
(bad)
mov
jns
fsub
rcr
pop
push
adc
push
mov
adc
lods
jmp
mov
cmps
jg
cmp
mov
dec
fsubr
popa
nop
cld
adc
loop
cmps
cs
(bad)
and
stos
sbb
mov
add
cdq
and
push
stos
cmps
lods
or
mov
repz
fwait
pop
inc
or
test
stos
pop
jle
adc
(bad)
adc
mov
mov
ror
fcom
push
fwait
ss
in
pop
or
stos
test
sbb
test
and
iret
les
pop
mov
cli
stos
test
push
(bad)
mov
adc
ret
jge
push
add
add
aas
(bad)
xchg
sub
or
retf
push
pop
loope
dec
fdiv
pushf
ficom
xor
and
test
mov
lods
or
fwait
mov
dec
stos
das
lods
push
inc
outs
int3
ds
sub
and
mov
cmp
(bad)
push
mov
outs
ror
pop
test
in
sub
mov
and
pop
(bad)
sbb
mov
cmp
jl
aas
cwde
cld
xor
loope
jp
nop
or
xchg
and
movs
push
xchg
push
aam
or
rol
xchg
inc
(bad)
and
xchg
stc
jmp
add
js
adc
mov
pop
lods
call
push
push
sbb
fidiv
ds
(bad)
cmp
inc
adc
and
push
fs
test
or
aas
sub
jecxz
pop
fisubr
and
daa
push
push
or
ret
movntq
shl
out
fimul
cmp
fimul
add
inc
stos
xchg
push
test
xor
jge
cmp
push
data16
int
(bad)
pop
push
and
mov
outs
add
fcomp
sbb
shl
xchg
into
xor
jbe
pusha
pop
test
xadd
out
in
popf
sub
outs
inc
ret
in
adc
cwde
popf
icebp
iret
mov
loopne
out
in
jge
std
cs
fld
aaa
mov
dec
outs
mov
out
mov
pop
mov
test
mov
ror
jns
mov
aaa
xor
add
add
ror
imul
lahf
clc
cmp
xchg
mov
jge
mov
jl
jbe
cld
adc
jo
dec
pop
mov
mov
pop
mov
push
sub
or
or
aad
stos
jg
mov
cmc
loopne
and
lods
retf
jnp
mov
pop
push
inc
sbb
jecxz
push
mov
adc
and
pop
scas
push
vmovsldup
es
push
pop
mov
mov
jmp
and
adc
and
jns
ret
pop
gs
mov
pop
cmp
jle
mov
and
(bad)
xchg
scas
adc
jnp
cmp
mov
addr16
and
sbb
aas
aaa
inc
inc
cmp
mov
pushf
mov
push
or
xchg
fwait
cld
adc
or
fmul
jne
dec
imul
mov
dec
and
test
dec
das
sub
in
cs
sub
lds
call
out
loope
sub
out
push
jbe
pusha
xchg
and
xchg
cmp
add
retf
or
loopne
fisttp
jo
cmp
cwde
pop
sbb
shl
ret
int3
mov
rcr
movsx
loope
scas
mov
or
xor
gs
adc
jmp
push
sub
cmp
lods
gs
pushf
add
sub
dec
and
xor
cmps
shr
fidivr
jne
cmp
stos
pushf
in
jecxz
mov
or
fnstsw
jno
mov
cmps
sub
pusha
xlat
xor
idiv
pop
jbe
jl
mov
and
inc
cmp
mov
sbb
xchg
push
and
jmp
xchg
ins
jbe
call
pop
xor
push
sub
adc
pop
shl
pop
inc
call
mov
xor
xor
jmp
dec
xlat
and
add
lock
mov
inc
ret
or
icebp
arpl
mov
aaa
pop
dec
add
and
and
movs
xchg
out
sbb
sub
hlt
adc
mov
in
mov
add
enter
and
or
ret
jmp
xor
rep
mov
(bad)
cmp
xchg
sahf
fisub
ins
dec
pop
pop
jns
inc
push
shr
sbb
sahf
sub
cld
mov
data16
and
test
ss
and
mov
jns
add
in
cmps
cwde
mov
cli
xchg
popa
mov
sub
push
out
push
sbb
mov
test
mov
das
iret
adc
inc
out
div
sub
fwait
lds
mov
imul
ds
add
jns
inc
scas
jno
daa
push
and
sub
mov
(bad)
push
in
sub
pop
dec
and
sbb
test
add
imul
pop
jecxz
adc
cmps
aas
lahf
cmp
inc
xlat
retf
cmps
or
stos
mov
pop
outs
push
mov
retf
fadd
ss
and
lods
ds
xlat
xor
pop
fcmovne
mov
xor
pop
outs
test
addr16
push
in
and
ja
and
mov
push
push
xor
outs
test
int
js
push
fimul
cdq
out
inc
inc
test
cmps
and
loopne
int3
dec
jp
not
mov
dec
jb
fcomp
pop
retf
std
xor
imul
mov
aaa
jns
jne
outs
test
stos
nop
mov
sub
push
sbb
jp
mov
pop
push
lds
xor
adc
dec
les
(bad)
mov
push
xchg
rcl
ss
pop
int3
inc
rcr
leave
mov
mov
loopne
je
push
fs
fidivr
jb
pop
push
xchg
repnz
sbb
sbb
ins
xchg
loopne
dec
lahf
fld
pushf
retf
out
outs
das
gs
pop
inc
xor
mov
cli
xor
iret
movs
jne
cmp
nop
lds
sbb
outs
es
out
jge
xchg
jmp
inc
rol
inc
outs
test
fild
repz
mov
mov
pop
dec
lea
cmc
pop
div
jg
dec
ret
js
rcl
xchg
stos
sar
jmp
cmp
xor
dec
add
push
push
sub
mov
pop
not
add
arpl
push
out
sub
mov
int3
push
mov
push
xor
and
aas
mov
sahf
addr16
cmps
cwde
pop
xchg
aaa
movs
or
jl
stc
xor
pop
(bad)
retf
push
(bad)
pop
push
shl
popf
mov
mov
mov
xchg
rol
cdq
mov
mov
mov
pop
or
or
fisub
push
leave
cmp
inc
test
cld
jnp
pusha
sbb
mov
fistp
in
or
(bad)
sub
(bad)
sbb
xor
adc
jne
stos
in
push
mov
ret
inc
pop
push
fs
xchg
into
mov
mov
ja
inc
or
popa
das
pop
aaa
lods
into
loop
sub
clc
lahf
std
xor
call
mov
mov
dec
clc
fstp
or
xchg
adc
sub
sahf
(bad)
repnz
sahf
imul
imul
push
xor
inc
ror
xor
fbstp
pop
pusha
js
ror
sub
lock
ret
and
mov
add
imul
pop
push
js
lahf
jmp
test
jmp
mov
mov
adc
mov
ficom
xchg
mov
inc
or
cmps
mov
pushf
mov
arpl
call
jo
xchg
popw
or
imul
icebp
loop
out
daa
fucomp
adc
dec
inc
cdq
mov
push
nop
mov
nop
cs
dec
nop
ins
bsf
push
and
retf
repz
stos
sub
leave
xchg
push
(bad)
jbe
mov
jmp
xor
mov
xchg
dec
inc
(bad)
mov
pop
cdq
data16
ds
mov
mov
loopne
adc
xchg
into
mov
fiadd
jmp
push
xchg
cmp
aas
sbb
jae
retf
fwait
inc
clc
mov
(bad)
pop
push
adc
ret
jo
adc
mov
arpl
int
mul
inc
int3
sti
mov
clc
add
scas
cmp
pop
mov
pop
cmp
add
dec
cmp
pop
push
push
in
lods
fs
dec
imul
or
mov
mov
xchg
xchg
fcmovnb
jae
xchg
inc
pop
imul
inc
add
int3
add
xchg
(bad)
mov
bound
popa
ffreep
out
jg
(bad)
popa
sti
jp
jno
pop
and
lock
jb
push
mov
icebp
cmp
dec
sti
hlt
push
enter
imul
inc
cs
bound
fnsave
test
js
dec
ja
cmp
cmp
test
scas
add
dec
loope
lods
movs
outs
fwait
ja
pop
add
aam
and
je
cmp
add
sbb
sbb
aad
lock
sub
cmp
fadd
cmps
push
xor
mov
mov
push
popf
pushf
sbb
repnz
hlt
jecxz
inc
xor
mov
or
and
or
in
and
pop
push
dec
xor
(bad)
xor
mov
push
dec
jno
sub
(bad)
sbb
and
ja
inc
inc
or
cld
cmps
or
jecxz
or
push
add
idiv
hlt
add
xchg
test
enter
push
push
sbb
retf
adc
jle
icebp
push
enter
xor
jno
mov
aam
xor
xor
int
add
cmp
push
jp
mov
sar
or
je
push
mov
mov
aas
bnd
ins
movs
fadd
jno
scas
scas
fstp
sbb
mov
test
hlt
jae
repnz
loope
inc
pop
sub
out
cs
aaa
popf
test
pop
dec
inc
mov
inc
les
and
aam
push
(bad)
out
cmp
mov
popa
sbb
ja
in
sub
out
mov
dec
xor
push
mov
sar
or
jns
mov
repz
dec
jnp
xchg
repz
jmp
std
or
xor
adc
loope
sub
aaa
jmp
and
mov
imul
mov
shl
jno
pop
shl
cs
stc
pop
pushw
das
and
mov
xchg
jecxz
pop
xor
movs
pop
ins
sbb
test
jle
fwait
jmp
fiadd
pop
mov
ds
and
dec
cmp
jnp
pop
arpl
dec
(bad)
fidivr
(bad)
or
xchg
or
add
sti
shl
and
out
retf
adc
or
lods
repnz
pop
mov
jae
es
or
cmps
(bad)
es
ja
pusha
fwait
sbb
hlt
fnsave
xor
add
xchg
ins
or
mov
jbe
mov
cmps
mov
(bad)
cmps
and
int
and
xor
jbe
and
lea
cmp
shr
mov
aas
mov
jmp
js
imul
inc
or
(bad)
fild
cmp
xor
push
test
adc
pop
pop
scas
into
fisub
pop
mov
xchg
push
in
cmp
mov
xchg
sbb
mov
int
dec
adc
cdq
call
idiv
mov
aam
cmp
and
cmp
lock
xor
cmp
pop
mov
xchg
inc
mov
cmp
push
dec
jg
retf
test
xchg
in
mov
into
daa
add
icebp
clc
js
pop
and
jmpw
push
sbb
mov
es
mov
cli
and
mov
mov
or
dec
xor
je
loope
sbb
jnp
mov
xchg
stc
lods
mov
in
mov
xchg
mov
fisttp
dec
ins
mov
mov
fidiv
xor
mov
add
mov
es
sahf
dec
mov
nop
(bad)
test
jne
into
(bad)
dec
and
pop
xor
(bad)
cmps
or
daa
and
fistp
rol
mov
push
lods
je
js
xchg
dec
cmp
cdq
pop
daa
mov
cmp
imul
loopne
dec
or
pop
retf
(bad)
fld
cmp
xchg
cmps
push
cdq
sub
or
adc
fwait
dec
xor
leave
push
call
jns
sub
fcmovnbe
ja
ins
push
lock
adc
mov
add
les
imul
ja
fisttp
jno
xchg
sub
cmp
cmp
mov
push
idiv
push
clc
xlat
test
mov
stos
dec
dec
sub
cli
add
fidivr
adc
lods
sbb
stos
mov
cdq
fnstcw
(bad)
jmp
or
xlat
out
push
adc
add
in
xchg
jmp
sub
imul
mov
pop
jp
pmuludq
lea
inc
adc
add
cmc
in
push
ja
inc
aas
dec
dec
and
and
or
rcl
xlat
enter
jmp
dec
lds
dec
lods
ret
popa
pop
fs
inc
adc
(bad)
test
jae
das
push
pushf
mov
mov
icebp
cmp
lea
jp
retf
mov
cdq
mov
inc
lods
jno
aaa
push
sub
sub
jb
push
test
fs
popf
cmps
repz
push
retf
or
mov
in
or
mov
mov
sub
aad
xchg
mul
xor
xor
loope
mov
xchg
loope
push
mov
jbe
inc
inc
mov
jge
jecxz
(bad)
rcl
mov
jle
in
sti
dec
xchg
cmc
jbe
pop
sub
push
push
jl
and
out
xor
inc
mov
out
scas
ret
push
enter
aad
inc
jns
dec
mov
dec
jb
jecxz
jne
fcom
adc
xchg
inc
es
dec
fmul
frstor
or
mov
ins
or
test
xor
or
and
sbb
sar
push
xor
mov
in
cmps
mov
sub
mov
(bad)
rol
js
sbb
push
rol
stos
jle
bound
sbb
outs
mov
or
int
aaa
fwait
lods
pop
sbb
sbb
mov
push
inc
outs
mov
jp
test
or
int3
call
mov
push
xor
ret
cmp
out
(bad)
in
fist
sbb
cmc
(bad)
mov
add
fcmovu
jge
(bad)
mov
xor
inc
daa
adc
ins
daa
xor
cmc
xchg
inc
xor
stos
or
push
scas
pushf
ins
inc
in
lock
ret
jmp
fistp
lods
pushw
jge
inc
cs
cmp
mov
cmp
jne
pusha
xchg
scas
ret
or
dec
sbb
push
cmp
push
jp
pop
pop
inc
dec
out
mov
inc
adc
jmp
fidivr
push
inc
jmp
push
dec
sub
(bad)
fdivr
mov
out
in
das
mov
rol
mov
xor
fs
mov
out
out
sub
mov
mov
mov
out
jbe
sub
add
(bad)
retf
and
pusha
inc
es
lea
mov
sahf
sbb
fidiv
sub
push
add
aam
add
sbb
lods
cwde
sub
mov
sbb
xor
and
pop
or
mov
das
mov
lods
mov
adc
mov
movs
fs
jmp
popf
call
je
shl
fmulp
test
xor
pusha
xchg
outs
mov
xchg
pusha
inc
aad
jecxz
into
or
push
or
enter
sbb
cs
sar
jecxz
or
sub
je
rol
add
(bad)
fadd
xchg
push
in
jg
dec
mov
and
es
out
out
or
retf
cmc
daa
loopne
fidivr
sahf
xchg
adc
dec
(bad)
fsubr
in
loope
inc
ret
pusha
xlat
fstp
cdq
push
fcom
pop
xchg
das
inc
fs
dec
out
nop
xchg
cmps
dec
fld
mov
jne
lds
sub
mov
ins
(bad)
call
fsubr
setge
cmp
fisttp
cmc
enter
push
jnp
ret
push
and
sub
rcl
mov
jle
sub
xchg
mov
jo
mov
mov
pop
fld
push
leave
cld
pop
and
push
ss
push
dec
stos
repnz
cmps
pop
movs
xor
jb
retf
out
add
xor
cmp
mov
repz
test
movs
xor
aas
mov
ret
aaa
daa
cmps
scas
jge
ds
in
leave
retf
lea
fsub
(bad)
fnstenv
and
test
scas
bound
ja
mov
stos
push
dec
pop
ret
stos
fldcw
cli
lock
mov
movs
or
sbb
cmp
je
xchg
jbe
mov
fimul
popf
retf
push
hlt
push
jnp
push
fwait
cdq
nop
xlat
or
jp
xchg
xor
jg
shr
clc
lahf
jmp
inc
popa
jns
lods
and
outs
cmp
mov
sub
cs
push
sub
xor
and
push
inc
pop
or
lds
add
repz
cmp
clc
mov
push
aaa
fmul
lahf
sbb
lahf
xchg
out
test
test
enter
mov
(bad)
xor
lock
pop
mov
mov
sbb
xor
jne
sar
mov
mov
and
sbb
jecxz
and
or
idiv
inc
movs
stc
call
cmp
mov
inc
sbb
jp
push
mov
sub
push
sbb
adc
ret
jecxz
mov
ss
ja
pop
inc
push
addr16
fdivr
push
sahf
inc
aad
fisubr
js
fst
fs
std
jne
les
or
(bad)
mov
inc
cmp
inc
add
cmp
mov
test
or
xor
adc
enter
inc
or
add
push
inc
mov
movs
sbb
loopne
mov
mov
lods
fwait
xor
push
sahf
sbb
test
adc
xor
mov
dec
mov
je
lods
scas
sbb
xor
mov
repz
jmp
aaa
jmp
xchg
fadd
lock
es
test
and
push
push
sub
in
inc
xchg
in
enter
push
and
and
cmp
mov
ja
cs
push
mov
jb
in
xor
push
jp
lock
xor
sbb
push
sbb
rol
fistp
push
mov
icebp
jno
inc
lods
xchg
mov
fs
xchg
pushf
dec
dec
pop
aad
int3
out
clc
pcmpeqw
fistp
inc
lahf
cmps
add
sti
dec
or
xchg
daa
xchg
fwait
push
cmp
adc
stos
hlt
inc
mov
sbb
push
shl
sub
jne
inc
mov
add
scas
pop
int
js
mov
jl
push
(bad)
jl
xor
push
retf
(bad)
mov
bound
push
dec
sub
idiv
out
inc
out
and
inc
cmp
pop
pop
test
sbb
cwde
repnz
arpl
sar
test
push
in
push
cmps
int3
rcl
xor
hlt
sub
fisttp
in
in
add
loope
or
(bad)
fcmovu
push
cmp
push
push
push
into
or
xor
jo
and
sub
movs
pop
(bad)
stc
pop
mov
retf
fs
fs
arpl
das
mov
dec
mov
out
stos
(bad)
pop
xorps
(bad)
call
mov
iret
inc
mov
jno
test
xor
jge
mov
and
adc
add
shr
mov
xor
das
push
or
(bad)
jmp
daa
add
shl
mov
das
mov
jns
pop
or
retf
add
sbb
aas
pop
movs
dec
aas
bound
out
push
and
loop
jmp
test
aaa
jns
jo
and
(bad)
fild
ret
pop
dec
hlt
jecxz
(bad)
out
sub
jp
call
sub
jl
test
ror
jnp
ret
cmps
cmovs
retf
sar
retf
mov
dec
and
mov
mov
lock
clc
fcomip
outs
loope
mov
enter
jne
cmp
and
ja
movs
dec
sub
mov
cmp
pop
and
arpl
outs
push
cmp
jmp
and
out
iret
(bad)
mov
out
bound
aam
adc
test
imul
std
pand
ja
int3
into
les
inc
jmp
push
add
fidiv
pop
push
mov
sahf
lds
adc
mov
sbb
aas
add
sbb
retf
and
shr
xchg
clc
dec
fs
cmps
xchg
stos
stc
push
mov
mov
mov
mov
test
sub
lea
imul
adc
cmps
ja
icebp
mov
int
fsub
pop
sub
movs
bswap
push
stos
mov
inc
cwde
scas
out
shr
loopne
aad
jecxz
and
lods
in
jge
cmp
out
mov
out
outs
(bad)
xlat
mov
test
cmp
enter
pushf
cmps
mov
jbe
jmp
es
outs
cdq
in
xor
das
or
scas
cdq
outs
test
push
mov
jmp
aam
add
xchg
repz
je
lea
addr16
in
and
call
dec
push
mov
pop
inc
push
jb
stos
sbb
and
jae
xor
mov
cwde
in
add
int3
xchg
xlat
adc
in
pop
(bad)
repz
adc
in
push
stos
and
xor
and
cmps
mov
add
xchg
ret
(bad)
imul
sbb
add
xchg
(bad)
pop
fidivr
out
mov
pop
das
fiadd
xchg
inc
xchg
add
pop
dec
rcl
sbb
std
jle
test
add
mov
cmps
mov
aas
mov
add
sub
scas
adc
jo
and
sbb
xchg
inc
call
cli
jnp
cmp
sbb
cmp
lock
mov
bound
adc
mov
cmc
iret
sbb
adc
jb
cmp
icebp
loopne
mov
out
lock
jl
out
mov
sbb
cmp
xchg
dec
jge
dec
cmps
add
add
or
cmp
jecxz
and
aaa
(bad)
jmp
int3
int3
ret
ret
popa
pop
js
in
fistp
xor
imul
mov
(bad)
loop
pop
and
mov
push
(bad)
int3
std
(bad)
ds
out
jmp
mov
inc
cmp
xor
and
adc
sbb
inc
idiv
xor
sahf
fadd
test
push
cmp
mov
lahf
xchg
mov
and
and
sbb
inc
movs
imul
mov
loopne
data16
jb
test
sbb
mov
add
mov
mov
aad
loope
cmp
mov
xor
or
dec
and
into
mov
fwait
js
(bad)
ja
sub
fisttp
je
pop
iret
popa
sub
retf
test
cdq
scas
dec
and
imul
adc
lock
jmp
mov
jbe
or
das
pop
xchg
add
popa
(bad)
lock
in
add
inc
enter
jne
stos
int3
add
sbb
pop
jne
add
pop
xor
mov
jp
int
mov
leave
imul
cld
js
jmp
xchg
out
mov
(bad)
in
pop
retf
ror
enter
not
call
pop
jbe
mov
dec
sahf
bound
scas
jo
clts
(bad)
mov
ret
or
cs
out
in
mov
xchg
adc
out
push
push
bnd
mov
push
sbb
push
jge
popa
or
hlt
or
fstp
dec
loop
add
fisttp
loopne
jb
sbb
addr16
dec
lea
pop
push
mov
pop
popf
mov
bound
or
sbb
dec
push
mov
inc
push
js
inc
xchg
gs
or
test
cld
dec
out
xor
xor
mov
mov
lds
add
and
leave
add
in
js
lahf
or
xchg
test
fwait
xchg
ficom
jnp
scas
jb
push
sbb
add
sub
dec
sbb
pop
mov
sbb
gs
sar
adc
mov
call
mov
or
push
in
jae
and
xchg
icebp
fsubr
int
sub
ins
push
fisttp
inc
mov
pop
js
xchg
enter
(bad)
imul
xchg
jle
jle
jecxz
lods
xlat
sub
push
mov
mov
sbb
jo
(bad)
fidivr
jp
pop
cdq
or
jmp
mov
mov
pop
dec
fcomip
in
add
(bad)
out
shl
movs
in
aam
xor
aaa
aam
test
call
pop
mov
pop
sub
jae
outs
xor
cmp
stos
xlat
mov
pop
pushf
adc
scas
cwde
shl
mov
cld
push
in
mov
jl
ins
mov
mov
(bad)
pop
mov
cmps
pop
aad
mov
iret
(bad)
ins
jp
pop
iret
aad
js
jno
aas
cmp
sbb
data16
mov
cmps
dec
cmp
movs
adc
into
xchg
mov
dec
dec
call
lock
lds
call
lods
into
adc
into
(bad)
int3
push
data16
add
push
mov
add
xchg
pop
fcom
push
xor
test
inc
data16
sub
xchg
xchg
jo
in
dec
inc
stos
sbb
xchg
jbe
nop
int
sub
sbb
out
mov
movs
sub
outs
cwde
(bad)
lods
inc
inc
mov
je
jl
push
ja
mov
sub
test
popa
ret
xchg
push
jecxz
or
dec
push
pop
out
mov
add
shr
add
xor
aad
arpl
(bad)
xchg
retf
adc
cmp
push
mov
aad
popf
retf
xchg
xchg
add
ds
cmp
cmc
gs
popf
pop
jne
sub
in
jne
jg
xor
or
pop
dec
(bad)
pop
and
enter
push
cmp
pop
add
push
push
fild
out
ror
aaa
xor
inc
test
mov
data16
cld
inc
retf
mov
gs
(bad)
pop
test
mov
push
mov
pop
adc
fmul
clc
mov
push
dec
or
aas
pop
pop
jno
and
aad
or
lods
test
ret
dec
movs
imul
jg
ins
daa
retf
aam
icebp
mov
mov
jno
not
push
push
inc
sub
scas
adc
mov
je
stc
push
test
dec
cmp
sub
jae
mov
je
jmp
and
lods
inc
cld
jecxz
test
imul
mov
(bad)
popa
fld
ins
and
jne
adc
jecxz
xor
and
aas
fs
mov
cmp
dec
or
ds
fistp
inc
lock
mov
jg
cmp
lods
pop
cmps
lock
cmps
fldcw
(bad)
jo
lahf
out
stos
das
aam
fnstsw
sub
and
sbb
aad
iret
iret
sub
lea
jmp
and
pop
and
cli
lods
nop
daa
outs
jbe
fwait
(bad)
pop
mov
into
movs
int3
nop
xlat
jo
jne
cmc
jns
cmp
inc
imul
jo
icebp
jnp
jb
jp
ja
or
out
ret
test
pop
or
add
aad
aad
int
call
and
push
and
retf
push
jno
xor
xchg
adc
(bad)
jnp
mov
repnz
out
rcl
fnsave
test
jmp
add
loope
xchg
test
xchg
stc
and
inc
arpl
mov
call
push
mov
mov
sbb
xchg
inc
add
cmp
mov
sub
and
aaa
mov
hlt
pop
inc
and
mov
sub
movs
sbb
dec
retf
out
daa
out
rol
jecxz
(bad)
jg
cmp
icebp
fidiv
xlat
iret
or
cld
xchg
or
adc
jg
aad
nop
dec
lea
jb
dec
lods
loope
mov
outs
ds
cmp
test
scas
fs
jmp
cld
cmp
pop
sub
xlat
or
cmp
mov
push
xchg
inc
pusha
dec
sar
sub
jmp
pop
mov
and
pop
xor
pop
lds
adc
test
outs
jbe
xchg
jb
xchg
and
pop
xor
or
push
sahf
repnz
xchg
mov
aad
add
pop
rol
dec
dec
or
jne
inc
jge
adc
mov
add
call
sbb
movs
test
or
in
inc
movs
shl
loopne
xchg
test
mov
dec
rcl
je
stos
adc
or
ins
(bad)
xor
sub
imul
test
hlt
ins
cwde
test
xor
push
mov
dec
sahf
(bad)
pop
icebp
sub
pop
and
sahf
mov
jge
lods
test
stos
push
add
push
jg
outs
daa
add
mov
push
adc
push
xchg
gs
adc
and
nop
mov
jns
shl
outs
inc
add
add
imul
pop
sbb
aam
cmps
lahf
in
mov
cmps
xchg
mov
sub
fs
fld
test
mov
or
jnp
mov
mov
and
cmps
sub
bound
mov
sub
gs
xor
movs
cdq
sbb
out
ja
(bad)
mov
sbb
ret
scas
aad
and
adc
adc
stc
test
cmp
mov
push
int
loop
add
shl
fnstsw
fdivr
fld
xor
cmp
xchg
(bad)
int3
xlat
sub
mov
xor
scas
pusha
in
mov
out
aam
aam
popf
pop
call
lods
add
cmps
cmc
cmovs
lahf
mov
ins
mov
inc
std
push
fnstcw
dec
xchg
push
fldenv
or
cmp
dec
sub
xchg
mov
out
pop
in
ret
scas
or
cs
adc
aad
(bad)
mov
and
mov
in
mov
icebp
(bad)
test
ficom
adc
jnp
or
jb
nop
pop
adc
xlat
loop
fnsave
cwde
in
je
and
icebp
arpl
cmp
repnz
xchg
sbb
sar
mov
adc
(bad)
pop
(bad)
add
jmp
stos
arpl
sub
neg
retf
aam
mov
mov
or
pop
dec
in
push
in
mov
cmp
in
in
stos
jmp
cld
test
mov
mov
ins
test
int3
popf
gs
jle
cmp
int
lods
jp
jb
ins
movs
int
imul
sti
not
call
popf
lahf
jmp
dec
mov
stos
push
push
jmp
xchg
std
ins
test
xchg
in
pop
ja
mov
cmps
adc
test
aas
pop
mov
inc
xor
sbb
add
xor
mov
es
out
adc
cmp
inc
mov
or
add
retf
mov
xor
ds
dec
or
out
cwde
mov
cmps
stos
pop
cmp
jge
push
xchg
cmp
test
pop
loopne
shl
sbb
iret
or
inc
pop
dec
imul
push
test
pusha
mov
out
dec
push
mov
push
adc
stos
jno
mov
call
cdq
inc
mov
push
push
inc
movs
dec
call
xchg
push
inc
push
cmp
pushf
push
ds
pop
fld
xchg
mov
in
in
add
sub
adc
test
pop
scas
enter
and
hlt
jae
fldcw
sub
sbb
jo
retf
push
fimul
dec
mov
add
push
lods
sub
out
lea
mov
mov
sub
xchg
ins
ficomp
mov
mov
mov
jne
stc
xlat
and
pop
int3
int
dec
js
aad
jb
ret
push
push
jne
add
xor
sbb
or
mov
fisub
scas
test
cmp
xchg
ds
cmp
in
sub
mov
fbstp
fs
hlt
sbb
aaa
adc
mov
dec
ins
push
rcl
and
inc
push
(bad)
movs
mov
int
cs
(bad)
retf
jnp
in
out
cmp
adc
sub
mov
cmp
dec
pop
xchg
mov
mov
push
sub
mov
dec
cld
xor
out
jnp
adc
ret
retf
mov
push
shr
cmp
test
push
stos
ret
loop
push
jge
xchg
aam
add
sbb
add
adc
mov
pop
call
aad
int3
sbb
scas
test
sbb
push
push
sahf
iret
clc
call
bound
rcl
test
shl
lods
les
cdq
pop
pop
dec
mov
mov
push
mov
mov
ins
sub
sub
loope
sbb
std
sbb
ins
inc
inc
add
or
jbe
jmp
(bad)
sub
repz
ins
stos
push
sbb
add
movs
mov
iret
xor
mov
sub
adc
ret
add
mov
and
cs
sub
jbe
js
aas
dec
je
dec
inc
push
or
cs
fs
das
leave
xchg
icebp
mov
push
fs
dec
dec
cli
mov
or
in
ins
arpl
lods
and
pop
nop
les
fs
lods
inc
dec
test
enter
sbb
rcr
fnstcw
jbe
jo
add
in
sub
xchg
pop
jmp
mov
jg
in
cdq
xchg
in
stos
addr16
into
in
cmova
jne
and
pop
xchg
or
hlt
push
sbb
ss
scas
ja
inc
popf
pop
call
pop
cmp
mov
mov
pop
test
and
je
pop
xlat
ins
mov
adc
pop
jl
cmp
call
mov
jb
jns
inc
mov
or
mov
mov
xchg
repnz
sar
cld
and
ss
mov
xchg
add
xor
add
mov
movs
jl
fstp
mov
ficom
or
es
fnstenv
popa
sub
mov
sub
mov
arpl
into
dec
js
mov
adc
cmc
and
ins
(bad)
in
or
mov
xlat
mov
dec
lahf
(bad)
sub
(bad)
ret
xor
repnz
fwait
xor
xchg
fldcw
jl
adc
pop
sub
lock
inc
leave
lahf
mov
test
sub
lods
mov
sub
pushf
and
mov
cmp
sbb
and
and
inc
jmp
xchg
ror
add
push
fld
push
dec
mov
in
hlt
xor
jl
xchg
jg
(bad)
fdiv
push
xor
adc
cld
fild
int
sti
mov
aas
jp
dec
and
push
cli
(bad)
mov
lods
hlt
in
mov
xchg
cmc
mov
out
push
jne
popf
outs
jo
xchg
aas
cs
(bad)
in
and
call
pop
cmps
cmp
(bad)
cli
adc
xor
jno
mov
fdiv
add
jmp
into
lods
or
je
pop
ins
test
mov
jns
pop
addr16
arpl
inc
sbb
fs
rol
pushf
sbb
rcr
xor
or
jo
lods
or
dec
cmp
or
das
and
cmp
xor
jae
cmp
jmp
rol
int
jl
inc
mov
(bad)
cmps
cmp
fmul
pop
inc
dec
mov
es
js
(bad)
pop
test
aam
and
mov
retf
pop
rcl
sbb
pop
jb
ss
dec
js
jno
xchg
je
out
imul
lea
scas
repz
aad
dec
adc
(bad)
out
push
adc
ja
fwait
test
jg
cmp
or
sbb
sti
sbb
push
ret
mov
sbb
cmp
ror
xchg
mov
inc
ins
nop
(bad)
jge
inc
and
fwait
rcr
add
sbb
adc
mov
xchg
xchg
dec
sbb
in
sbb
stc
add
nop
aas
popf
mov
or
cli
pop
pop
sub
std
or
sbb
bound
pop
xor
fmul
jno
fwait
or
pop
int3
xor
inc
sbb
imul
aas
(bad)
and
dec
xchg
repz
sahf
data16
dec
cmp
mov
int
push
setg
fild
ror
push
movs
mov
add
pop
mov
or
(bad)
pushf
jle
shl
cdq
ds
pop
js
xchg
dec
bound
lods
in
sbb
in
dec
sahf
mov
les
sbb
mov
movs
inc
inc
pop
xchg
popf
cld
lods
call
push
jne
cmp
adc
into
outs
cmc
lahf
xor
fdiv
cmp
push
cmp
mov
test
and
iret
xlat
sub
inc
cmp
lahf
pop
pop
inc
and
cmp
adc
fcom
jg
push
cmp
out
xor
push
and
xchg
jae
pushf
fisub
or
xor
into
mov
jp
pop
pop
push
imul
or
cmp
push
jge
imul
aam
or
lahf
icebp
xor
cdq
mov
jmp
cmp
outs
jge
sub
dec
leave
push
int3
jecxz
xchg
mov
mov
fst
and
jge
arpl
(bad)
popa
mov
das
add
mov
imul
fsin
fs
mov
cmp
out
(bad)
icebp
xor
arpl
cmp
jbe
dec
test
out
inc
dec
out
into
loop
mov
push
cld
idiv
inc
sbb
cmc
jbe
loop
enter
sbb
imul
in
jbe
dec
mov
xlat
jo
jl
popa
jno
inc
loopne
lock
iret
dec
sub
test
inc
lods
mov
repnz
pop
mov
push
ins
xchg
popa
iret
xchg
aad
lock
(bad)
sbb
popf
clc
mov
in
sbb
je
push
call
dec
mov
inc
nop
fsub
mov
dec
addr16
cld
mov
pop
adc
loope
rol
(bad)
fistp
mov
and
fmul
dec
pop
sbb
sub
fistp
mov
xor
sti
and
packsswb
fistp
push
mov
mov
jne
jg
sbb
shr
mov
lock
xor
cli
cmps
mov
shl
cdq
aas
fild
mov
push
jl
mov
out
xor
ja
shr
cmp
test
jg
outs
sbb
inc
xchg
mov
cmp
pop
push
cmps
fs
imul
mov
pop
dec
jnp
(bad)
fst
xor
cwde
cs
push
mov
retf
(bad)
and
pop
cmps
out
sub
inc
lods
repnz
shl
dec
imul
xchg
xor
es
repnz
ins
sub
in
pop
jmp
cmp
mov
pop
mov
dec
not
rcr
push
iret
call
or
stos
hlt
and
sub
out
cmps
pop
pop
lds
mov
or
call
lahf
cli
xchg
sbb
jl
push
data16
and
inc
f2xm1
sub
cmp
pop
sahf
xchg
lock
sub
inc
pop
jmp
aam
in
push
ins
inc
jle
mov
dec
iret
pop
dec
jnp
(bad)
fild
jmp
out
inc
daa
xor
push
sti
dec
sbb
sbb
push
sub
mov
popa
mov
lea
sbb
sub
sti
jns
inc
int
stc
adc
lahf
repz
mov
inc
idiv
test
clc
icebp
jnp
inc
(bad)
ror
in
adc
xchg
mov
or
sbb
add
dec
pushf
loope
pusha
pushf
addr16
mov
imul
push
and
scas
cmp
xor
scas
jae
mul
mov
pop
popa
out
xchg
or
loop
ja
movs
mov
sub
jmp
pop
or
fstp
xchg
dec
ret
nop
adc
inc
sub
ret
xchg
dec
sti
imul
fdiv
or
enter
outs
add
cmp
mov
mov
ja
imul
mov
cmp
rcl
add
push
popa
sbb
cmps
mov
cmp
inc
add
cmp
adc
pushf
fimul
stos
pop
add
(bad)
les
adc
mov
inc
dec
mov
mov
push
sbb
mov
nop
fsubp
add
inc
mul
or
sti
in
xor
retf
je
nop
sub
mov
cwde
mov
and
movs
sbb
loope
adc
push
mov
test
mov
push
adc
into
(bad)
mov
cdq
fldcw
cmp
in
xchg
aaa
hlt
out
popa
int
(bad)
lds
sub
leave
adc
xchg
mov
adc
and
jge
lods
cmp
ja
adc
jo
xor
cmp
ftst
pop
push
fsub
fyl2x
pop
mov
fsubr
sbb
push
out
ins
das
sbb
ror
les
arpl
test
xchg
mov
sub
add
pop
inc
inc
xor
jmp
add
js
pop
add
mov
jecxz
ret
aad
add
push
sub
sbb
add
test
arpl
jo
mov
fdiv
fisub
push
cmc
out
mov
stos
(bad)
ss
outs
cdq
hlt
imul
test
ss
mov
sub
mov
inc
jmp
movs
dec
and
(bad)
nop
mov
(bad)
div
mov
jns
fisub
xchg
jne
dec
jge
push
into
imul
outs
idiv
push
pop
pop
(bad)
(bad)
shr
dec
stos
in
inc
test
outs
xchg
sbb
ins
xchg
cli
fist
mov
adc
add
inc
out
jmp
and
and
mov
and
rcr
jl
(bad)
jo
xchg
gs
loop
sbb
jns
cmp
ror
test
or
push
pushf
xchg
in
dec
and
mov
pop
jb
(bad)
mov
rol
mov
cwde
cli
push
jmp
jp
out
pushf
pop
movs
jge
iret
push
xlat
stc
fstp
test
dec
into
mov
pop
shr
adc
fmulp
dec
les
mov
cmps
sbb
movs
cmps
inc
cmp
loope
loopne
imul
ins
in
shl
or
mov
add
retf
pop
hlt
xchg
rcl
jns
inc
std
rcl
outs
push
inc
sbb
fld
pusha
xor
mov
or
push
shl
in
stos
sbb
aas
pop
(bad)
lods
jmp
mov
push
mov
mov
adc
repnz
icebp
sti
or
inc
and
shl
int
xchg
test
repnz
add
call
xchg
scas
stos
mov
(bad)
mov
pop
add
mov
pop
pusha
jp
test
inc
clc
push
jns
adc
in
aas
nop
aam
mov
dec
jno
or
xor
stc
mov
push
cmps
cmp
cmp
xor
fstp
call
outs
sub
sub
sub
movs
dec
pusha
xor
xor
ins
data16
and
ror
and
push
les
or
mov
outs
ss
cmp
cs
xchg
mov
pop
aam
add
(bad)
xor
lahf
mov
mov
jnp
div
clc
xchg
les
mov
movs
adc
ss
aad
in
sbb
arpl
sub
clc
push
ins
mov
or
or
sub
sub
out
frstor
jmp
in
mov
pop
mov
mov
outs
imul
dec
inc
aaa
inc
push
popa
mov
add
fwait
out
mov
jl
jle
push
inc
iret
mov
out
mov
inc
mov
jmp
jb
inc
push
adc
lock
jne
imul
dec
jbe
mov
push
mov
lods
mov
xor
adc
lahf
add
mov
push
(bad)
stos
and
jecxz
xor
jmp
retf
fwait
mov
mov
jns
cmp
call
test
sub
loope
inc
call
fmul
pop
push
(bad)
in
pop
pop
sahf
dec
movs
fistp
movs
data16
rcr
shl
outs
test
aas
(bad)
jmp
pop
dec
imul
and
dec
push
cmp
mov
sub
pop
push
(bad)
sub
pop
fwait
into
repz
inc
push
push
shl
mov
add
jp
dec
das
push
inc
and
or
pop
sbb
int3
mov
jo
test
repnz
jno
inc
lods
(bad)
push
fld
mov
test
or
push
mov
retf
inc
jg
mov
retf
outs
push
cmp
pusha
(bad)
fadd
sbb
iret
inc
pop
popf
mov
(bad)
rcl
dec
shr
mov
ins
shr
mov
daa
pop
xchg
sub
adc
and
and
cdq
or
jmp
inc
cld
inc
dec
jnp
popa
lods
ja
test
or
fiadd
xor
clc
cmp
jb
fnsave
inc
push
or
hlt
lock
and
out
movs
cdq
or
cli
rol
mov
sub
retf
push
(bad)
sub
xchg
sub
mov
mov
repnz
sub
movd
aas
clc
aas
pop
add
xlat
das
pop
cs
cmp
icebp
pop
sub
scas
ins
stos
popa
xor
mov
pushf
ins
fiadd
jmp
test
or
fidiv
jns
scas
test
ss
dec
fmul
cmp
or
repz
fucomp
sbb
cmp
cwde
aam
push
cmp
mov
aad
das
adc
out
lahf
xor
adc
leave
scas
std
nop
rol
fdiv
cmp
ror
push
idiv
mov
lahf
mov
adc
pop
push
dec
movs
or
adc
arpl
fs
push
pop
mov
mov
and
add
pop
ja
sbb
mov
dec
sub
popa
fcmovnu
(bad)
push
retf
pusha
xchg
or
cmp
sbb
cwde
sbb
int
inc
jne
push
fwait
gs
das
xchg
sub
or
mov
(bad)
pminub
jo
ret
bound
shr
xor
stc
shr
mov
inc
jnp
mov
dec
and
lahf
ret
fstp
out
mov
mov
dec
dec
clc
mov
and
and
mov
loop
pop
pusha
pop
popf
inc
mov
inc
cs
ror
mov
popf
add
stos
jle
pushf
ret
sbb
dec
fisttp
xchg
cmp
pop
xchg
test
cmp
adc
rcr
mov
mov
xchg
or
dec
xor
mov
inc
outs
movs
adc
xor
or
mov
add
jbe
lods
sbb
cld
pop
cs
sbb
mov
sti
retf
test
addr16
push
fcmovnb
sub
push
imul
cli
dec
sbb
jp
movs
push
and
lock
push
jg
cmps
popa
push
xchg
ss
ins
(bad)
push
mov
xchg
(bad)
ret
imul
test
cli
jge
out
mov
ret
ins
inc
aas
jecxz
cmp
in
fs
xchg
test
inc
imul
int
mov
adc
cmps
jmp
stos
dec
mov
repz
popa
aad
adc
out
xchg
mov
cmp
push
adc
(bad)
and
pop
and
movsx
jno
xor
jp
dec
sub
mov
loope
inc
adc
mov
mov
dec
call
cmp
fisttp
in
mov
cli
xchg
repz
pop
jle
push
dec
and
jp
adc
icebp
(bad)
inc
fwait
sub
mov
ds
jns
es
jb
test
aad
mov
push
leave
cli
rep
les
div
ja
movs
(bad)
scas
jg
fmul
push
jne
jnp
fistp
ins
xchg
mov
ins
sub
(bad)
jne
add
jl
cmp
mov
adc
stc
cmps
push
xor
movs
jl
and
inc
cmp
ret
sahf
xor
jp
pop
iret
or
inc
outs
mov
out
(bad)
xor
push
jmp
repz
arpl
test
mov
inc
sub
imul
test
int
out
mov
xor
arpl
in
dec
mov
pop
mov
lods
xchg
fst
or
and
into
test
lds
mov
mov
in
cwde
adc
popa
sbb
(bad)
repnz
clc
into
outs
in
dec
out
pop
adc
mov
cdq
cmps
jecxz
lahf
sub
and
push
mov
dec
mov
cmc
or
push
xchg
pushf
and
adc
adc
mov
cmps
icebp
pop
xchg
push
dec
mov
mov
sub
xlat
in
xchg
and
fidivr
mov
arpl
cmpxchg
int
adc
fcomip
jle
sbb
and
pop
mov
or
xchg
mov
mov
sub
pop
jle
sbb
arpl
xor
or
into
in
cmps
int3
or
jl
cmp
mov
test
pop
lods
mov
sub
mov
lds
mov
inc
bound
add
pop
popf
(bad)
js
sub
sbb
cmp
bnd
movs
jmp
aas
sub
loopne
jae
pop
iret
aad
aad
and
sbb
push
test
push
into
sbb
out
nop
mov
out
or
call
call
pop
xor
ins
jmp
xor
push
hlt
fbstp
mov
mov
and
push
jg
lock
jo
outs
jmp
test
xor
scas
cmp
enter
or
adc
scas
mov
test
jne
or
sub
inc
dec
xchg
(bad)
dec
mov
xchg
movs
inc
out
in
icebp
pusha
add
std
mov
(bad)
ds
popa
xchg
enter
mov
dec
add
fadd
in
and
aam
leave
or
bound
mov
js
in
clc
nop
or
push
imul
jg
sar
lea
sub
sub
sti
lods
inc
push
out
bnd
sbb
sar
sub
and
lods
sub
out
jns
mov
mov
mov
out
jno
fidiv
test
(bad)
test
adc
inc
mov
fmul
stos
gs
add
mov
std
pop
add
mov
jmp
pop
push
stos
jnp
mov
fbstp
(bad)
jbe
in
scas
sub
dec
es
add
mov
(bad)
into
jmp
retf
shl
test
ja
adc
js
push
pop
inc
sub
inc
cdq
and
jge
sub
mov
cli
fs
sub
add
mov
xchg
aaa
out
fadd
outs
mov
push
not
in
lock
(bad)
int3
push
nop
jne
aaa
pusha
adc
dec
push
push
push
lahf
push
jmp
arpl
or
repz
xchg
stos
add
xchg
nop
inc
dec
call
call
jl
xchg
inc
pop
add
sbb
add
xlat
shl
mov
out
or
inc
movs
jp
sub
jns
jno
pop
out
call
push
mov
enter
das
lods
xchg
sub
test
scas
jnp
add
movs
and
rcr
(bad)
cmps
adc
loopne
mov
mov
mov
std
int
sahf
or
jg
imul
push
loop
add
sub
add
pop
and
ficomp
outs
lock
lahf
mov
mov
xchg
imul
push
push
stc
pusha
mov
mov
stos
cwde
stos
mov
and
retf
icebp
inc
mov
loope
pop
xchg
push
mov
adc
mov
mov
enter
sub
add
cs
retf
arpl
xchg
inc
dec
lea
cmp
dec
pop
lods
add
xchg
pop
or
fstp
xchg
jecxz
ret
test
push
cld
jmp
cli
add
lods
pop
inc
fistp
adc
sar
jge
outs
sub
pop
movs
xor
pop
adc
hlt
cmp
enter
cmp
and
or
adc
pop
jb
or
mov
test
and
jnp
xchg
dec
cli
sub
push
push
je
icebp
cwde
leave
dec
fist
fnstenv
jp
jecxz
or
fld
ins
lahf
or
xchg
arpl
iret
mov
movs
cmp
xchg
xchg
inc
repz
fnstenv
lods
into
pushf
cmp
cmps
push
repz
ins
out
enter
sbb
retf
mov
xor
outs
fwait
adc
adc
and
out
test
(bad)
adc
inc
mov
aaa
pop
pusha
enter
leave
pushf
cli
mov
mov
jb
xor
xchg
sar
pushf
mov
push
xchg
add
push
mov
xchg
jmp
aad
sub
jge
movs
rcl
xchg
inc
jge
imul
sbb
loope
mul
dec
mov
(bad)
movs
push
icebp
dec
arpl
mov
pop
jb
ret
push
mov
cmp
leave
retf
jle
mov
add
or
fmul
repz
enter
mov
inc
xchg
mov
ss
and
xchg
(bad)
push
dec
and
lds
pop
mov
mov
inc
push
aaa
or
inc
retf
dec
jge
add
mov
mov
rcr
call
movs
outs
aad
pop
push
dec
fisttp
jns
(bad)
gs
inc
mov
jae
and
mov
ja
cdq
mov
lock
xchg
push
cwde
xor
lods
xor
(bad)
or
push
pop
jno
das
sub
scas
aad
jns
jecxz
sub
movs
sahf
xor
stos
mov
push
and
mov
ds
cmp
add
sbb
pushf
cmps
scas
test
jae
dec
xor
xlat
xor
mov
and
cmp
and
pop
sbb
adc
fstp
(bad)
jae
leave
pop
enter
std
cwde
ror
mov
xchg
push
out
aam
xor
lea
pop
or
jge
pop
aam
dec
sub
jb
or
push
bound
jb
push
or
inc
push
pop
lea
and
and
pusha
jmp
cmc
push
lahf
es
in
or
pushf
pop
outs
sub
pop
add
jbe
inc
sti
repnz
enter
adc
movs
fbstp
mov
pop
and
(bad)
arpl
adc
stos
mov
ret
inc
adc
fcom
dec
ret
out
ins
rcr
inc
or
(bad)
idiv
add
xor
jge
pop
into
mul
mov
mov
mov
cmp
jmp
mov
js
mov
cwde
test
ror
sub
stos
call
loopne
xchg
(bad)
mov
ror
xchg
outs
adc
mov
mov
xchg
and
pop
sbb
std
cmc
sub
mov
test
sbb
(bad)
not
inc
ret
and
scas
mov
loop
inc
mov
dec
cdq
xor
neg
inc
inc
cmp
into
xchg
push
cmp
inc
mov
cwde
cmp
(bad)
std
and
cmp
out
inc
jle
adc
js
xchg
outs
jl
int3
(bad)
fistp
ds
dec
adc
in
sub
gs
shr
sub
repnz
push
fisubr
push
scas
(bad)
cmp
mov
cmc
scas
cwde
mov
jge
dec
in
xor
push
fcom
pusha
pop
test
jae
jns
enter
iret
pop
imul
pusha
sahf
xchg
mov
inc
adc
or
shl
test
pop
(bad)
push
jae
pop
mov
dec
sbb
test
test
enter
push
adc
in
mov
sbb
add
pop
mov
push
in
push
and
lods
cwde
shl
push
or
cmp
in
into
sbb
retf
popa
xor
and
das
xchg
(bad)
fs
je
fstp
rcl
lea
inc
imul
sbb
repnz
outs
mov
test
jle
scas
shl
iret
in
push
neg
(bad)
mov
mov
adc
pop
add
cmp
div
adc
in
pop
ret
mov
out
dec
std
pushf
stc
fwait
jge
pop
aam
cmp
je
push
in
xchg
mov
push
adc
push
mov
cs
ds
icebp
cmp
push
push
fdiv
mov
cmova
int3
mov
popa
mov
adc
cli
scas
fcmovu
xor
and
outs
mov
neg
mul
or
sbb
add
out
stos
mov
add
jle
add
xchg
mov
inc
inc
call
inc
adc
mov
and
jbe
lods
mov
outs
push
cmp
addr16
cs
das
test
cwde
fstp
dec
mov
das
add
int3
push
addr16
in
xor
loope
push
mov
(bad)
mov
dec
retf
into
fmul
int3
jmp
push
ret
ins
pop
push
retf
pop
sub
hlt
pusha
js
leave
faddp
call
ret
into
mov
fistp
inc
imul
push
jle
lods
call
inc
retf
xchg
cmp
lahf
test
icebp
stos
dec
push
mov
xor
push
dec
mov
movs
ja
fdiv
xchg
jb
jns
lock
stos
in
dec
lea
(bad)
push
aam
xor
imul
xlat
pop
arpl
pop
and
call
pop
dec
sub
call
mov
mov
shl
or
leave
xor
pop
lods
retf
dec
xchg
(bad)
stc
stos
(bad)
scas
jmp
push
imul
ror
setp
xlat
and
je
add
or
loop
stc
fucomip
add
outs
enter
shl
(bad)
stos
idiv
test
imul
cmp
and
xor
mov
addr16
dec
adc
cmp
mov
jecxz
das
shl
les
enter
loope
dec
lds
call
inc
xor
sub
clc
adc
mov
mov
enter
jmp
mov
aas
push
or
sub
fwait
xchg
adc
pop
fdivr
jb
sub
xor
push
clc
push
(bad)
retf
sbb
lahf
pop
test
push
jl
leave
call
mov
cmp
xchg
das
xchg
push
add
movs
mov
sbb
adc
lods
jns
repz
hlt
stc
nop
ficom
shr
jae
mov
push
push
jecxz
or
dec
push
enter
aad
xor
cmp
xor
jge
pop
jmp
sbb
jmp
inc
push
pop
adc
xchg
dec
inc
cmp
ret
ja
int3
pusha
dec
push
int
pop
xor
(bad)
mov
inc
div
adc
adc
ret
ja
inc
leave
sub
push
push
xchg
dec
out
xchg
test
sbb
push
mov
movs
mov
(bad)
nop
outs
jle
retf
xchg
in
inc
inc
jbe
jne
loopne
adc
add
xchg
(bad)
jnp
or
aad
or
mov
sets
lea
pop
mov
shl
mov
push
add
loop
cmp
or
mov
sbb
adc
adc
or
pop
out
je
pop
lods
out
mov
jl
dec
int
stc
pop
fnsave
push
dec
sbb
mov
jmp
sub
test
imul
lea
cmp
mov
xchg
imul
pcmpgtd
aam
push
lods
ins
fsubr
cli
dec
rol
loopne
xchg
push
mov
jle
jge
outs
xor
cdq
nop
fisubr
mov
scas
push
xor
lods
mov
mov
jp
and
jp
inc
mov
loope
ss
adc
cmc
dec
loope
jmp
cdq
repnz
ret
inc
sub
das
mov
popf
imul
adc
dec
push
shl
sar
sub
(bad)
jae
cwde
retf
std
lods
inc
ins
inc
fwait
loopne
push
xor
adc
dec
or
xor
add
jo
sub
inc
xor
sub
push
jno
and
int
das
pusha
jno
cdq
mov
cmps
jae
dec
mov
jmp
sub
or
sti
jg
daa
jg
xor
jb
cmp
cmps
cld
mov
cmp
xchg
pop
fistp
jle
jns
ins
xor
dec
popf
mov
pop
dec
icebp
or
dec
mov
repz
mov
test
add
inc
(bad)
(bad)
push
sub
inc
(bad)
loop
or
sub
fistp
cli
pop
dec
add
enter
mov
pop
mov
ja
pop
push
leave
call
inc
(bad)
dec
pop
loope
cs
adc
and
data16
pop
pop
mov
js
out
das
cmp
mov
call
pop
sti
ss
aad
xchg
sub
es
dec
or
xchg
or
xor
mov
ror
inc
rcr
dec
ficomp
pop
cdq
fisubr
xchg
(bad)
cli
scas
enter
dec
ja
call
jecxz
loopne
jo
inc
fisubr
mov
ins
push
cmps
mov
(bad)
adc
jmp
mov
sti
ror
loopne
sahf
repnz
or
sub
cmps
sub
data16
push
xor
xchg
js
jmp
js
and
mov
int
sbb
sub
mov
sub
pusha
mov
mov
test
out
mov
pusha
loopne
mov
cmp
sbb
push
mov
mov
jns
xor
ficom
add
fiadd
pop
dec
or
(bad)
sub
mov
shl
sbb
cmp
ins
rcl
in
call
dec
outs
shl
jmp
adc
in
and
les
or
loope
sbb
and
lods
jge
mov
ret
or
mov
mov
call
aaa
aaa
je
dec
daa
leave
test
adc
in
mov
lea
cs
cmc
dec
js
imul
cmps
cld
push
push
cmp
jo
xchg
push
mov
xor
out
pop
mov
stos
ret
aaa
lds
lods
movs
sbb
push
scas
xlat
xchg
adc
push
inc
out
imul
fcom
dec
and
ins
cmp
sbb
sub
jle
xor
(bad)
cmc
add
push
hlt
imul
xchg
repz
(bad)
(bad)
adc
jae
mov
cmps
movs
dec
loope
pop
dec
push
sub
stos
sbb
push
aam
sub
mov
dec
mov
dec
jo
or
sub
and
test
out
and
xlat
test
xchg
mov
out
shl
mov
and
fiadd
sub
and
into
bound
lahf
push
imul
push
lds
shl
jg
cwde
dec
jns
ins
and
inc
cs
(bad)
push
jmp
clc
mov
jae
mov
stos
dec
sub
and
repnz
pop
dec
cmp
mov
lahf
jns
ficom
sub
push
mov
xor
in
in
(bad)
scas
jmp
dec
in
lods
add
sbb
lds
mov
jp
cdq
addr16
cmps
in
sbb
mov
xchg
xchg
push
movs
pop
out
sbb
add
mov
xchg
and
mov
call
adc
dec
add
cpuid
jmp
push
je
shl
fistp
fisttp
pop
or
mov
jns
xor
rcr
dec
sbb
dec
add
add
adc
or
sbb
and
ror
push
enter
xchg
(bad)
lea
das
push
xchg
(bad)
jne
(bad)
out
fadd
and
std
data16
xor
xchg
not
jge
xchg
cmp
pop
(bad)
add
retf
and
xor
sub
jmp
das
pop
cmp
movs
es
or
cmps
rcr
dec
loopne
jno
sbb
dec
imul
js
test
cmps
cwde
iret
push
icebp
mov
nop
pusha
adc
fs
clc
outs
repnz
fxtract
call
inc
sub
push
sub
js
sbb
arpl
jo
pop
inc
cdq
cmp
lds
pop
inc
cs
dec
inc
mul
sub
daa
mov
add
mov
lock
mul
xor
sub
call
push
or
test
dec
dec
pop
(bad)
mov
test
cwde
mov
cmp
lock
lods
nop
cmp
ret
rcl
retf
adc
cmps
pop
shl
inc
lods
retf
sub
gs
xchg
pop
cmp
push
mov
or
in
mov
arpl
or
call
cmc
jge
pop
retf
out
dec
adc
xlat
fsubr
add
sbb
(bad)
ja
mov
dec
mov
jbe
fmul
mov
aaa
js
fadd
cwde
es
dec
jne
dec
xchg
mov
ret
mov
adc
xor
in
mov
mov
sbb
sub
mov
cli
call
and
imul
icebp
add
mov
mov
aas
arpl
retf
cmps
cwde
inc
into
mov
and
cmps
mov
push
add
jl
xchg
mov
xchg
push
add
jle
ss
and
les
clc
push
cmp
(bad)
or
dec
xchg
out
bound
das
not
sahf
ja
ret
mov
test
aam
adc
repz
ror
xchg
outs
mov
and
dec
pop
std
and
loop
inc
jae
push
or
shl
retf
movs
sbb
mov
mov
push
inc
mov
sbb
dec
inc
pop
test
mov
push
pop
cli
scas
dec
push
cdq
call
mov
jp
int
and
pop
push
jno
mov
lock
dec
sbb
add
in
je
push
les
(bad)
cli
push
movs
stc
fdiv
jge
dec
add
and
scas
add
and
push
fwait
pop
cmp
adc
movs
dec
out
sbb
movs
sbb
sub
test
mov
push
adc
(bad)
mov
dec
nop
test
sub
mov
push
cmps
sub
ins
test
in
push
push
jge
xor
jns
shr
les
adc
pop
jmp
pop
push
jno
mov
cli
pop
xchg
imul
and
repz
mov
int3
jle
fistp
jge
mov
jne
jno
ror
cld
adc
and
pop
add
push
js
retf
fstp
xchg
lods
mov
inc
loop
jb
fsubr
loop
mov
xchg
and
fcomp
jne
pop
pushf
outs
pop
clc
inc
daa
sub
retf
or
imul
or
mov
fld
dec
es
ins
stos
stos
fstp
mov
test
sbb
fist
or
inc
retf
sub
adc
jne
ins
push
jae
push
out
xchg
adc
jnp
inc
shl
dec
rcl
jmp
or
out
jp
push
ror
shl
shl
inc
stc
sub
dec
movs
and
int
sbb
adc
and
xor
(bad)
in
or
out
daa
cwde
hlt
dec
push
dec
dec
dec
in
jp
fdivr
mov
and
popa
cmps
sbb
cmp
xchg
sub
test
or
cwde
cmp
or
nop
and
(bad)
and
cli
mov
add
push
int3
std
cdq
movs
add
xor
je
test
retf
cmp
xchg
push
dec
cwde
and
pop
inc
(bad)
(bad)
idiv
ds
adc
mov
lods
(bad)
xor
sbb
(bad)
data16
inc
mov
jg
mov
data16
xor
mov
xchg
push
je
sbb
xor
lea
dec
js
fs
mov
movs
fisttp
mov
stos
or
sub
mov
aaa
dec
mov
div
mov
test
and
xor
(bad)
ins
push
cmp
pop
jg
imul
pop
sub
test
xchg
mov
sbb
jno
js
cmps
leave
stos
dec
sbb
add
xor
and
dec
pop
ret
iret
sbb
push
(bad)
call
enter
xor
test
lock
aad
sub
adc
sbb
fst
adc
(bad)
adc
mov
arpl
std
cmp
mov
data16
call
cmc
cmp
mov
out
ss
pop
push
mov
cmp
mov
clc
mov
xchg
sub
icebp
inc
ret
jg
sbb
stos
jecxz
fs
out
mov
inc
loopne
je
push
or
mov
xchg
mov
in
(bad)
and
dec
fwait
lea
adc
jle
mov
mov
test
and
popf
and
loop
ins
mov
popa
or
scas
mov
in
mov
cmp
pushf
xor
dec
jns
jg
push
mov
(bad)
and
xlat
dec
mov
add
mov
pushf
push
mov
es
retf
or
(bad)
lods
add
test
mov
es
xor
mov
repz
iret
(bad)
imul
(bad)
inc
sti
push
nop
lea
mov
test
jmp
mov
push
pop
sti
loop
fyl2x
push
test
jge
dec
ins
pop
sbb
add
mov
test
test
outs
je
ret
stc
into
punpckldq
ins
and
sub
adc
adc
pop
test
push
ficomp
retf
int3
clc
mov
fsub
xor
call
inc
div
js
mov
cmp
jbe
cli
sub
sbb
test
adc
repz
mov
add
add
imul
dec
ins
in
ds
and
dec
stos
pop
iret
xchg
popf
jnp
xabort
push
and
xchg
in
mov
cmp
inc
push
lock
les
push
jmp
and
mov
outs
cmp
shl
jecxz
(bad)
xor
jmp
sbb
movs
lds
mov
outs
leave
push
fimul
inc
sbb
ins
cmp
enter
dec
lods
bound
jo
test
imul
cmp
mov
rcl
or
mov
push
fnstcw
add
pop
sbb
sub
add
loopne
adc
out
mov
cld
(bad)
xor
pop
sbb
(bad)
sti
and
sub
sub
cmp
sub
inc
mov
test
mov
add
sbb
xchg
(bad)
jle
mov
cmp
repnz
dec
sub
mov
push
dec
jg
jg
aas
sub
pushf
nop
retf
retf
or
inc
push
nop
push
mov
stc
dec
(bad)
outs
fnstcw
ins
fistp
lock
les
(bad)
jns
jmp
ret
pop
dec
inc
call
xchg
cmc
lock
xchg
push
adc
push
sar
mov
out
sbb
adc
add
sahf
test
test
sbb
xor
imul
popf
mov
inc
mov
pop
xchg
fcomp
and
pop
js
scas
(bad)
sub
scas
or
loope
mov
mov
imul
sbb
jbe
and
and
loopne
test
fwait
sahf
pop
sub
adc
adc
sub
out
enter
mov
imul
test
add
test
mov
(bad)
fwait
js
xchg
rcl
push
xor
pop
sub
or
arpl
sbb
ja
dec
(bad)
std
jno
lahf
jmp
ret
cwde
pushf
cmps
push
es
(bad)
in
ins
lds
test
cwde
push
jp
mov
out
jns
mov
fimul
cmp
inc
ss
add
aas
pusha
jbe
and
xchg
dec
adc
cdq
cld
sub
xor
outs
cld
adc
mov
push
inc
in
fwait
hlt
pusha
(bad)
aam
dec
pop
push
rol
lock
jmp
in
dec
push
adc
cwde
js
mov
bound
jmp
in
jle
xor
in
mov
push
or
cli
hlt
not
imul
pop
push
mov
out
inc
mov
dec
jae
jnp
js
ins
repz
adc
stos
ret
cld
les
cld
push
push
popf
cdq
jge
mov
jecxz
add
es
mov
push
(bad)
retf
sbb
adc
xchg
mov
loop
and
xchg
daa
mov
js
mov
cmp
inc
cmps
pop
cmp
xchg
repz
sbb
cmp
dec
call
les
add
jmp
pushf
(bad)
xchg
xchg
es
xchg
(bad)
xchg
int3
les
jbe
popf
push
dec
cmp
adc
mov
cmp
sbb
in
inc
jmp
jge
lea
(bad)
push
arpl
mov
sub
test
lods
out
inc
xor
call
xor
outs
cmps
mov
dec
repnz
test
enter
dec
push
dec
mov
out
aad
pop
into
pop
ficomp
cld
imul
jnp
jmp
cmp
jecxz
mov
sbb
inc
imul
adc
sti
cmp
mov
cmp
call
ins
xchg
retf
dec
dec
imul
push
mov
leave
sbb
and
sub
jl
icebp
and
add
and
adc
imul
mov
mov
push
in
mul
push
jns
add
xchg
int
(bad)
(bad)
das
aad
retf
jb
xchg
cmps
mov
or
adc
mov
cmp
or
and
dec
shl
mov
cmps
jle
dec
das
pop
jo
mov
push
add
inc
push
fwait
(bad)
cmps
or
jnp
sahf
jg
sbb
inc
sub
fstp
push
(bad)
data16
je
fadd
sbb
and
cwde
mov
cli
fidiv
stos
aad
das
push
jmp
mov
jle
test
sbb
shr
pop
aaa
inc
dec
mov
mov
adc
push
dec
xchg
mov
sub
or
and
out
push
int
rol
sbb
cwde
fiadd
mov
push
jmp
fistp
fs
mov
mov
in
jb
in
sub
add
(bad)
outs
ror
scas
fwait
movs
sbb
aad
jo
ds
loope
pop
xchg
jbe
add
and
dec
cmp
call
add
(bad)
movs
rcr
punpckldq
jmp
fucomi
dec
scas
xchg
lods
jge
xor
mov
ds
dec
push
mov
mov
cli
dec
mov
in
add
adc
out
js
adc
mov
jg
loop
cmps
push
adc
pop
cmp
sti
push
pop
out
(bad)
ffree
js
mov
or
jl
dec
dec
fdiv
stos
sub
cli
xchg
dec
stos
fdivr
ret
jg
xchg
stos
pop
stos
call
jbe
in
push
jg
(bad)
test
and
sbb
(bad)
and
mov
sub
shr
jb
jae
mov
cmp
cmps
mov
mov
push
outs
fiadd
sub
test
dec
fadd
xchg
out
out
mov
aas
mov
loop
adc
cmp
rcl
out
pop
add
imul
push
inc
adc
test
sbb
xchg
pop
es
dec
sub
inc
inc
dec
xor
and
daa
jne
leave
test
mov
mov
idiv
shl
inc
aas
xor
(bad)
adc
cmp
stos
or
loop
mov
sar
xchg
aas
or
aaa
pusha
es
loop
repz
mov
movs
inc
push
sbb
inc
outs
js
loop
push
int
loope
in
ins
mov
adc
in
and
cld
push
jno
ret
ja
add
push
mov
inc
mov
fstp
je
dec
inc
jp
js
or
cwde
sub
jnp
loopne
(bad)
jmp
adc
mov
rcl
cld
sahf
jle
fwait
and
fbld
sahf
sar
dec
pop
jmp
nop
lods
fistp
daa
lock
cmp
mov
sbb
pop
and
and
cli
add
jle
aas
(bad)
sbb
ror
rcl
push
mov
into
jmp
popa
inc
push
push
jno
and
popa
popa
add
sub
fs
mov
sbb
xor
enter
retf
jb
sbb
pusha
les
ret
repnz
sbb
jmp
or
in
mov
and
fs
sbb
xchg
mov
add
lahf
xor
sbb
ins
jno
push
fs
stos
jmp
inc
popa
in
das
adc
cs
inc
outs
or
lods
jb
sar
mov
daa
mov
jp
std
test
add
mov
ficomp
push
les
or
lods
push
mov
mov
mov
sti
cmps
js
or
xlat
mov
ror
cmp
xchg
ins
mov
xlat
aaa
xlat
cmp
mov
add
or
xchg
xchg
(bad)
scas
mov
gs
fsub
cwde
sub
out
jmp
dec
push
out
fwait
sbb
mov
(bad)
jae
(bad)
adc
out
je
loopne
cmps
push
ds
mov
scas
add
cs
imul
fild
ins
aam
ds
ins
mov
and
mov
int3
ret
stc
fadd
jb
xor
out
call
jne
stc
ins
pop
add
xchg
sub
(bad)
jg
add
ds
mov
fxrstor
lock
ins
sub
or
dec
adc
add
mov
sbb
in
sbb
arpl
loop
cld
lahf
jecxz
jmp
dec
(bad)
out
test
cdq
pop
sbb
cs
cli
hlt
mov
adc
aad
popa
(bad)
xchg
fmul
xor
js
add
mov
out
push
lock
scas
sbb
pop
fst
lds
xor
inc
mov
pop
frstor
mov
jmp
push
jae
test
ss
mov
repz
rcl
jb
xchg
idiv
mov
adc
and
and
add
aas
leave
jmp
popa
xchg
xor
pop
loop
sub
rcl
xor
call
fs
mov
inc
dec
mov
repnz
fcmovb
cmc
shr
mov
and
std
mov
fsubr
clc
test
cdq
or
imul
xchg
push
fcomp
adc
fs
clc
push
jo
or
test
jp
in
iret
lea
cld
adc
cmc
jns
push
int3
clc
pop
hlt
lock
pop
sahf
pop
jecxz
es
cmp
movs
adc
cmps
pop
ret
leave
lods
scas
sar
nop
or
cli
sub
adc
les
cdq
jno
mov
popf
inc
mov
in
mov
aam
not
cmc
fs
or
stos
mov
ss
into
pop
xchg
pop
push
aaa
or
fbstp
mov
ss
inc
xchg
dec
adc
addr16
aad
jg
xlat
xchg
cmp
mov
or
add
fadd
retfw
mov
adc
pop
or
aad
stc
jp
scas
push
out
mov
(bad)
push
cmp
jne
mov
in
sbb
mov
retf
inc
cmp
adc
mov
jg
xchg
outs
jg
aam
imul
call
xor
repz
adc
es
iret
movs
sub
jle
or
and
jae
test
mov
add
fwait
out
inc
rcl
mov
gs
or
pushf
bound
ficomp
mov
mov
push
in
loope
test
inc
out
mov
sbb
stos
jg
adc
jne
loopne
cli
xchg
sahf
mov
sbb
and
xchg
cmp
inc
dec
add
inc
lods
pop
aas
jns
xor
pop
push
jnp
rcr
sysret
(bad)
loopne
mov
retf
xor
sbb
fdivp
aam
and
fnstenv
pop
push
or
cwde
sbb
ret
inc
or
es
fwait
mov
xlat
in
inc
jmp
shr
mov
loope
push
and
mov
js
xchg
sbb
rol
test
retf
aaa
xchg
rcl
lods
ret
mov
add
push
dec
lds
mov
lods
sub
addr16
xchg
cmp
mov
nop
in
push
retf
jmp
fisub
xor
pop
bound
push
xor
or
pop
mov
and
and
xor
pop
cmp
and
mov
cmc
scas
popa
loope
xchg
adc
pop
or
xchg
and
neg
and
adc
pushf
xchg
aad
(bad)
xchg
pop
mov
stos
xchg
xchg
mov
dec
mov
push
pop
lds
rol
push
add
inc
push
dec
inc
sub
jl
xchg
pushf
loope
mov
dec
lods
fmul
pop
add
call
imul
adc
aam
shl
movs
mov
scas
adc
or
ds
mov
xchg
sti
push
pop
mov
cmp
cdq
test
je
push
xor
add
in
xor
ficom
call
ss
sti
(bad)
xchg
icebp
mul
jnp
in
pop
mov
nop
sti
mov
and
jnp
in
pop
mov
fistp
repnz
jo
test
int
sbb
jle
mov
cdq
cmp
enter
ins
jg
int3
mov
arpl
cs
(bad)
and
cmp
enter
aaa
movs
add
(bad)
test
cli
sahf
xchg
fs
ret
jmp
fldenv
push
sbb
xchg
call
xchg
mov
pop
push
jp
cs
inc
popf
adc
inc
stc
xlat
mov
cs
aaa
jb
or
mov
or
cmp
cli
stos
ret
xor
pusha
jb
aas
cmp
rcr
pop
fs
xchg
jb
mov
rol
outs
into
mov
sbb
cmp
xchg
shl
cmovne
pop
xor
cmp
push
in
add
and
movs
inc
stos
inc
jns
jne
mov
dec
mov
(bad)
fdivp
shl
dec
iret
add
cmps
cdq
les
push
jmp
sbb
fcmovnu
adc
xor
adc
add
mov
push
mov
cld
add
mov
sbb
sahf
cli
adc
xchg
and
hlt
rcr
jb
ins
lods
jbe
cmps
pop
inc
xor
enter
shl
push
fcomp
sahf
fld
out
cwde
jne
in
adc
test
cmp
(bad)
xchg
fwait
sub
fdiv
imul
sbb
(bad)
movq
sub
xor
cmp
mov
push
fisttp
adc
xor
stos
sub
mov
inc
daa
xchg
add
cmc
or
jo
call
jmp
je
daa
in
jmp
cmc
(bad)
mov
jg
retf
cmp
mov
mov
mov
and
mov
and
mov
inc
xchg
loope
mov
pusha
xchg
sub
adc
adc
jns
mov
push
mov
dec
test
dec
cmps
dec
rcl
inc
shl
push
pop
js
push
adc
loop
adc
ss
add
sbb
sbb
cli
sbb
cmp
sbb
cdq
fild
ins
jbe
test
or
into
inc
adc
dec
fistp
jbe
rol
adc
mov
cwde
repz
out
inc
cmp
push
outs
or
cld
jae
adc
mov
jne
mov
xor
push
sub
ret
enter
je
add
adc
add
jge
pusha
(bad)
hlt
adc
mov
pmaddwd
add
shl
jmp
xchg
lds
lods
or
pushf
mov
test
and
fdivr
pminsw
xchg
(bad)
data16
push
lahf
call
xor
movs
adc
mov
xchg
das
dec
(bad)
pop
jmp
xchg
inc
xor
cdq
shl
pushf
or
xchg
dec
or
imul
push
lds
ror
daa
scas
xor
std
das
les
xchg
xchg
out
cmp
or
aam
dec
jecxz
(bad)
int3
xchg
xchg
retf
retf
add
add
sub
ret
sbb
stos
xor
mov
or
fbld
inc
repz
pop
lahf
out
arpl
dec
dec
aad
mov
rcr
gs
xchg
sbb
outs
push
enter
ins
xchg
pop
data16
and
frstor
sbb
mov
push
pop
push
nop
ds
in
jle
jns
cdq
icebp
xlat
mov
rcl
pop
fsubr
pop
aas
cdq
add
cmp
xor
mov
dec
clc
call
push
xor
dec
sub
(bad)
or
js
adc
xchg
cld
jmp
fstp
out
xchg
test
retf
out
fist
dec
test
mov
dec
and
movs
xor
push
test
mov
stos
stos
jae
stos
add
fisub
mov
das
pop
(bad)
pop
lahf
pop
ss
inc
pop
and
out
ins
and
sbb
dec
jns
out
rcr
cmp
dec
test
loope
(bad)
pop
and
(bad)
jb
pop
std
ficomp
mov
push
sub
pop
shl
xor
pop
test
test
jmp
ficom
or
cmc
icebp
aas
test
xchg
retf
dec
cmp
gs
retf
mov
dec
or
mov
stos
test
loopne
inc
xor
mov
push
lock
pop
inc
(bad)
lods
and
xor
das
jmp
inc
sbb
(bad)
ja
inc
cwde
hlt
gs
xchg
xchg
sbb
sbb
fstp
icebp
fs
call
fs
pushf
int3
loope
enter
pop
cmp
sbb
out
sbb
inc
mov
dec
pop
dec
mov
aam
pop
inc
aas
out
jl
sbb
scas
call
fcom
adc
mov
inc
pop
mov
scas
mov
es
or
mov
aas
sub
in
into
movs
nop
into
int
cmc
popa
and
or
push
push
fwait
int
push
(bad)
mov
or
cmp
addr16
add
fld
scas
add
add
sbb
sbb
iret
mov
inc
and
xchg
xchg
cmp
mov
cmp
add
add
ret
jno
xor
jb
or
mov
ficom
je
in
(bad)
add
jl
cmps
idiv
jae
xor
add
shl
in
icebp
(bad)
mov
mov
and
(bad)
lea
pop
repz
mov
pop
ins
inc
jne
or
dec
addr16
mov
or
pop
push
pop
jmp
int3
push
pop
lods
lea
in
(bad)
shl
test
test
out
ds
or
les
cmp
es
ds
fsubr
lods
cmc
cmp
out
in
or
les
mov
cli
out
or
dec
xchg
js
mov
out
mov
aas
ret
imul
aad
push
aam
xchg
mov
lods
leave
mov
(bad)
out
jmp
hlt
push
retf
stos
xchg
out
repnz
js
ins
rcl
pop
pop
sub
maskmovq
cmps
xor
in
(bad)
pop
fwait
in
mov
inc
xor
inc
test
daa
ror
mov
test
scas
mov
sar
dec
mov
retf
repnz
js
push
cwde
and
mov
or
ins
xchg
sub
jp
stos
sub
pop
int
or
mov
out
jns
arpl
lock
lods
sbb
fdivr
fisttp
cmc
je
in
pusha
xchg
lods
ficomp
push
shl
(bad)
jns
cmp
retf
nop
or
es
add
cmc
pop
stc
lods
test
cmp
aad
push
mov
rcr
or
mov
test
cmps
mov
xchg
mov
sar
dec
cmp
sbb
inc
pop
mov
loope
sti
push
sbb
mov
and
and
nop
mov
lock
pop
ret
push
in
push
cmp
mov
dec
dec
jae
push
push
add
iret
add
dec
push
push
xchg
cmc
jge
lock
cli
cmc
aam
xor
ins
mov
adc
lahf
imul
pop
hlt
mov
pop
aas
sahf
jne
mov
and
inc
cwde
sbb
mov
lahf
push
stos
or
xor
not
push
mov
jecxz
sub
rol
mov
cmp
add
jmp
mov
shl
sbb
xchg
pop
pop
cmps
nop
aaa
adc
mov
mov
repz
lock
mov
aaa
mov
stos
ret
scas
mov
mov
out
and
pop
or
mov
mov
cmp
adc
xchg
xchg
mov
sbb
push
cmp
cwde
(bad)
pop
xor
mov
pop
mov
dec
mov
nop
push
lea
pop
push
(bad)
loop
mov
fild
cwde
xchg
out
dec
and
jns
data16
xchg
inc
mov
jae
add
ins
daa
mov
mov
jl
out
cmc
pushf
jmp
test
xchg
shr
dec
jb
es
sub
sti
push
in
ss
cmp
mov
pop
add
popf
add
pop
jl
lea
push
jle
test
xor
and
retf
fistp
lock
jmp
mov
std
aad
call
movs
jne
mov
mov
lahf
pop
rol
add
(bad)
or
mov
bound
clc
mov
out
cmps
movs
lds
push
js
stc
pop
in
jp
dec
or
retf
test
outs
arpl
sbb
xchg
push
mov
ficom
retf
inc
mov
(bad)
xchg
pop
sbb
int3
out
pop
jmp
fisub
cmp
push
dec
imul
cmp
jg
push
cmp
icebp
pop
sbb
and
jns
test
fnstcw
cmps
(bad)
imul
or
push
(bad)
nop
jle
test
ins
in
inc
cmp
lea
dec
mov
or
mov
into
mov
pop
aad
add
dec
jne
bound
(bad)
fmul
mov
mov
add
cmp
fwait
jne
shl
push
cmp
(bad)
xchg
daa
adc
sub
xor
enter
jp
and
pop
push
cld
data16
bound
xchg
jmp
daa
div
leave
xor
dec
pop
sbb
dec
jne
inc
push
xor
mov
cwde
mov
push
dec
and
mov
push
daa
dec
inc
xchg
mov
adc
stos
or
out
and
popf
xchg
xor
sbb
les
(bad)
into
push
(bad)
mov
inc
mov
push
push
adc
ds
loopne
mov
scas
xchg
std
int3
fisttp
into
and
popf
add
jmp
add
adc
jp
mov
mov
dec
neg
mov
icebp
sub
(bad)
jge
pushf
mov
add
or
inc
push
test
push
sbb
push
sub
lods
xchg
xchg
adc
movs
pop
scas
ss
xor
jg
shl
imul
xchg
js
aad
nop
(bad)
js
cmc
xrelease
pop
adc
xor
retf
hlt
rcl
xor
xlat
inc
(bad)
lds
and
pop
pop
fisttp
mov
jno
ror
fiadd
xchg
neg
mov
shr
or
inc
xchg
fild
mov
cmp
test
add
mov
pop
add
in
scas
sbb
push
pop
mov
push
push
mov
jmp
(bad)
pusha
xchg
(bad)
jmp
cmp
(bad)
mov
push
jg
mov
sub
xor
push
mov
xlat
push
rcl
push
push
lahf
push
in
aad
sub
int
add
test
mov
loopne
adc
call
and
mov
(bad)
rcl
adc
xor
cmp
sub
test
mov
pop
mov
xor
stos
cmc
and
xchg
pop
and
call
dec
test
xlat
lods
sti
iret
inc
cmp
jbe
push
mov
ror
cmp
cmp
add
not
outs
nop
cdq
add
aad
cmp
dec
psubusb
push
ret
push
hlt
mov
aad
sbb
imul
sbb
mov
push
mov
mov
inc
in
ret
rcr
pop
mov
and
stos
dec
pushf
adc
jnp
movs
pop
dec
inc
add
out
cmps
jo
aas
push
mov
adc
aad
push
add
movs
fild
icebp
inc
mov
jo
mov
cmp
mov
sbb
in
mov
cmps
cmp
jnp
ins
add
sbb
pop
sub
call
mov
inc
and
pusha
addr16
movs
xchg
rcl
jle
jb
push
cmp
(bad)
mov
dec
pop
pop
sbb
ja
(bad)
mov
(bad)
js
lahf
hlt
pop
adc
aas
adc
fwait
bound
mov
call
lock
add
dec
int
xor
push
dec
(bad)
fs
mov
inc
mov
lahf
lods
jbe
mov
xchg
fstp
mov
(bad)
inc
add
out
cmp
sub
pop
and
int3
xchg
jne
adc
je
imul
xor
imul
mov
add
adc
jmp
jbe
test
sub
lahf
adc
and
cmp
jge
mov
stos
retf
or
pop
adc
inc
out
xor
sub
sub
(bad)
out
sbb
cmp
out
xor
es
mov
jbe
mov
mov
dec
jo
pop
sbb
jp
mov
sbb
adc
or
sbb
push
pop
ins
jg
mov
loopne
inc
sub
inc
xor
je
pushf
inc
cmp
mov
inc
sub
pusha
mov
in
adc
rol
inc
mov
sub
and
inc
push
mov
push
jmp
in
sub
or
pusha
push
jecxz
lods
jle
xor
cmp
sub
data16
or
sbb
push
jno
jge
test
pop
push
fstp
jo
or
and
fucomip
sub
inc
(bad)
ins
imul
ins
ja
add
adc
or
ins
xchg
retf
cmp
push
xchg
jge
shl
stc
add
lods
push
jle
fnstenv
push
popa
add
cmps
daa
mov
or
mov
mov
call
stos
scas
ins
xchg
xor
sub
mov
(bad)
call
sbb
mov
and
arpl
mov
fnstenv
sbb
sbb
shl
test
sub
pop
pop
cmp
test
call
mov
inc
sub
les
xchg
imul
pop
sbb
mov
jmp
ret
ja
fist
dec
mov
(bad)
mov
cmc
xor
adc
leave
push
cmp
pop
xchg
jmp
cdq
sub
cli
rol
(bad)
cmps
(bad)
xor
imul
add
inc
push
leave
inc
retf
mov
mov
pusha
inc
nop
in
movs
pop
inc
xor
mov
sub
std
sub
push
push
inc
fdiv
ror
call
(bad)
mov
movs
repnz
fnstcw
pusha
mov
mov
stc
dec
pop
mov
pop
(bad)
mov
sub
jp
int
push
xchg
in
or
call
xchg
std
rol
jl
adc
cwde
mov
hlt
shl
mov
mov
mov
cmc
test
sbb
lods
enter
and
ret
das
push
cmp
inc
retf
mov
aad
jae
fdivr
sbb
jmp
sub
jge
mov
and
popa
imul
jae
inc
and
in
sbb
pop
repnz
cmp
mov
(bad)
sub
mov
cmps
stc
int
(bad)
loope
jae
xchg
into
sub
cmp
push
out
mov
sbb
mov
cmps
pop
pop
and
mov
push
pop
sbb
cld
push
sbb
sbb
or
mov
push
sub
call
cli
pop
(bad)
xchg
pop
lahf
mov
xchg
cmps
push
jb
repz
add
add
dec
int
mov
sub
imul
dec
dec
adc
xchg
repnz
iret
sub
inc
(bad)
mov
stc
leave
daa
test
pop
jb
test
xchg
dec
repz
mov
sbb
push
dec
sar
sahf
call
push
dec
cmp
inc
mov
popa
and
mov
xchg
xchg
xor
xchg
je
mov
pop
popa
and
cwde
mov
dec
pop
sar
in
mov
cli
xchg
call
pop
ds
bound
adc
jne
lods
adc
cmp
enter
popa
iret
ror
sbb
sbb
push
call
adc
mov
outs
icebp
mov
test
cmp
mov
push
xchg
lds
ja
xor
stos
push
mov
sub
cwde
ja
sub
push
mov
inc
jl
xor
inc
mov
cmp
xlat
nop
adc
sahf
xchg
int
cmp
adc
sti
cld
jne
enter
addr16
movs
out
out
nop
int
jb
cmps
fld
push
fmulp
pusha
fdiv
or
(bad)
mov
stos
xchg
dec
sti
rcl
jb
retf
scas
je
dec
cmc
shl
dec
xchg
ror
or
xchg
xsavec
out
shl
int
shl
leave
or
jmp
out
retf
fnstsw
lock
std
movs
ret
ins
cmp
imul
cmps
lods
iret
xlat
fs
add
test
jbe
pop
jmp
sbb
mov
jl
popa
or
arpl
push
sub
xor
ret
push
clc
sbb
cmp
repz
mov
nop
pop
or
push
and
xchg
cmp
pop
and
ss
mov
(bad)
cdq
les
mov
out
or
xchg
lds
sti
inc
in
push
mov
in
inc
jb
adc
fist
mov
imul
dec
pushf
inc
sbb
cmc
adc
aam
xchg
pop
mov
push
data16
fadd
jo
xchg
test
push
mov
dec
(bad)
adc
push
and
movs
adc
ficom
mov
adc
push
push
push
jle
dec
and
scas
push
cmps
jb
stc
xchg
arpl
add
hlt
dec
mov
sub
les
mov
push
or
js
mov
cmovb
xor
mov
mov
mov
fadd
ins
sbb
push
jmp
iret
mov
mov
imul
add
pop
scas
jge
nop
std
push
int3
sbb
mov
loopne
adc
add
dec
cmc
(bad)
jb
(bad)
jno
in
xchg
jmp
aad
jb
mov
shl
xor
mov
dec
push
addr16
fnsave
in
adc
push
into
call
pop
pushf
rcr
pop
mov
add
sti
fld
lock
add
lea
xchg
jmp
cmp
lods
and
xlat
add
inc
mov
sub
sub
aas
cli
cmps
mov
loopne
mov
pop
cs
jb
call
aaa
xor
inc
sbb
push
lock
mov
inc
rcl
sbb
mov
inc
out
lods
retf
dec
mov
ud1
xlat
push
mov
test
popa
cmp
add
sub
push
es
inc
or
rcl
fisttp
sbb
mov
fcomp
dec
mov
and
pop
push
bound
imul
hlt
sub
sbb
jbe
fwait
and
hlt
(bad)
or
mov
stc
leave
sub
push
adc
lods
iret
jp
ins
mov
jns
out
test
in
and
(bad)
jbe
dec
inc
and
adc
fdivr
retf
add
cmc
jge
(bad)
loop
fisttp
out
call
cli
hlt
popf
inc
lods
xor
cmps
(bad)
dec
inc
retf
div
sub
pslld
add
enter
cmp
adc
ds
cmp
cmp
pop
and
dec
xchg
repnz
jbe
ja
mov
pop
jo
(bad)
fidiv
dec
(bad)
addr16
(bad)
out
pop
xor
pop
jns
repz
sub
adc
cmp
adc
in
ret
int3
push
outs
je
push
push
sbb
push
inc
call
add
or
out
mov
dec
adc
loop
dec
sbb
inc
inc
xchg
bound
lea
test
inc
call
outs
dec
shl
sub
cmp
inc
push
div
(bad)
cmp
dec
jnp
lods
ss
les
sbb
add
jb
push
jmp
outs
mov
mov
mov
sbb
mov
in
jo
sub
jl
or
inc
and
mul
inc
fwait
xchg
out
sub
(bad)
fidivr
arpl
or
inc
lods
daa
or
jmp
inc
(bad)
loop
xor
ret
push
inc
test
into
sbb
fldenv
shl
(bad)
jp
mov
or
mov
aaa
mov
sbb
mov
test
(bad)
mov
jmp
mov
cmp
shr
lock
xchg
ds
clc
mov
iret
out
sahf
lea
cmp
pop
mov
imul
neg
arpl
fst
mov
mov
xor
shr
ds
pop
push
xlat
cdq
xlat
or
adc
rcl
sbb
xlat
fcmovb
push
jno
inc
icebp
pop
pop
mov
fcmovbe
test
jmp
jns
xchg
or
push
int
push
fimul
nop
loopne
jl
fs
xchg
call
cmc
pop
dec
push
mov
inc
fwait
cld
push
ss
xor
sub
adc
movs
jnp
sbb
inc
xchg
mov
leave
sbb
xlat
xor
mov
push
js
inc
xchg
dec
mov
inc
push
dec
mov
int
jle
pop
lods
stos
inc
mov
out
dec
fstp
addr16
xor
xor
push
cli
mov
jo
dec
mov
sbb
and
adc
mov
mov
mov
stos
cmp
iret
or
xor
shl
sbb
nop
pushf
jnp
imul
adc
out
jle
jmp
out
xchg
scas
push
inc
cmp
aas
sub
push
enter
push
shl
popf
xor
inc
dec
sub
jno
or
nop
dec
xchg
iret
ror
test
cwde
mov
push
pop
shl
repnz
cmp
cmp
push
bound
adc
mov
sbb
cwde
imul
shl
(bad)
and
(bad)
mov
call
jne
stc
xchg
push
(bad)
adc
adc
jp
das
lea
push
jle
xchg
test
jle
stos
(bad)
mov
loop
push
sahf
iret
push
retf
clc
nop
aas
jno
xor
ret
jno
fs
fcmove
mov
adc
sbb
sbb
ins
fisub
mov
loop
out
pop
jno
sub
shl
jbe
jnp
repnz
sub
xchg
sbb
repz
jmp
cmp
pop
adc
inc
stc
mov
test
xchg
jg
xor
add
out
inc
rcl
int
mov
pop
fwait
push
push
pop
jne
or
xchg
jle
js
mov
mov
mov
out
push
pop
das
not
les
sub
aad
and
nop
ins
mov
mov
pop
add
and
inc
sbb
test
in
out
mov
dec
test
push
sbb
pop
jae
movs
call
xlat
mov
lock
sub
sbb
movs
xchg
pop
lods
fisubr
fbstp
lahf
loopne
repz
and
add
jae
pop
and
sti
dec
fldenv
push
fisttp
call
jae
lahf
sub
loopne
cmp
je
aaa
enter
xchg
xor
stos
jmp
nop
or
or
test
inc
jb
jb
add
out
push
stos
loop
and
unpckhps
clc
sbb
call
cli
jg
inc
scas
and
dec
inc
jmp
jns
sbb
adc
stos
ss
repz
push
and
(bad)
ins
mov
test
mov
jmp
hlt
fs
addr16
mov
je
mov
mov
repz
fdiv
je
outs
sub
push
dec
enter
in
scas
loop
xchg
push
pop
fbld
mov
and
pop
mul
shr
dec
and
cmc
mov
ins
mov
or
fistp
push
jae
stos
ret
jle
sub
adc
cwde
push
jp
push
test
je
dec
imul
inc
popa
mov
out
xor
mov
jo
sub
jmp
cmp
jo
(bad)
cld
fmul
push
pause
aad
gs
push
jge
and
mov
push
adc
and
cmp
dec
mov
in
js
popf
mov
push
ret
sti
xor
mov
cmp
jb
mov
sub
mov
jmp
fld
(bad)
sbb
fsubr
xchg
fnsave
xlat
inc
adc
outs
mov
pop
hlt
les
mov
(bad)
sbb
push
icebp
push
(bad)
mov
add
mov
jb
bound
movs
cli
clc
fwait
mov
(bad)
pop
jecxz
ins
pop
and
in
push
adc
xor
sub
adc
mov
or
add
call
test
jmp
int
sbb
sub
arpl
gs
jns
adc
dec
sti
cs
cmp
or
in
pop
nop
push
fld
and
aad
arpl
mov
outs
movs
and
jmp
lea
fwait
xchg
adc
push
aaa
mov
(bad)
adc
pushf
je
xchg
ret
test
xlat
out
sbb
dec
mov
out
adc
jno
dec
ins
jno
cmc
cmc
xchg
mov
mov
stc
adc
les
in
mov
pop
retf
pop
loope
mov
cmp
xor
or
jge
in
dec
xchg
mov
cld
push
add
and
outs
jo
loop
push
in
cmp
cmp
nop
xor
mov
call
inc
hlt
adc
or
fdivr
xlat
loopne
and
or
xor
imul
sbb
(bad)
in
icebp
push
(bad)
cdq
push
xor
shl
int
neg
mov
lea
out
sub
movs
mov
(bad)
sbb
jmp
scas
out
scas
push
or
test
sar
mov
std
imul
bound
cdq
fild
adc
mov
sysenter
mov
js
into
test
inc
push
mov
cld
ror
inc
ja
jnp
mov
xor
mov
mov
cmps
and
mov
and
jne
inc
sub
jns
mov
push
lock
ret
adc
jecxz
adc
and
sub
jmp
and
cmp
fmul
and
add
stos
int3
push
hlt
hlt
adc
xchg
and
xchg
and
pop
and
mov
jg
call
repnz
jmp
movs
xchg
aad
(bad)
cmp
mov
add
icebp
pop
and
and
jle
fcmovu
sub
inc
and
adc
mov
and
push
jne
mov
pop
fist
mov
sbb
ins
adc
cs
add
pop
and
ficomp
xchg
or
pop
mov
push
daa
popa
lods
int
fistp
sti
shl
sar
test
cmp
push
in
sub
ror
out
push
stos
cs
adc
fwait
mov
mov
and
hlt
fwait
xor
adc
call
mov
pop
rcr
jb
inc
or
icebp
push
xlat
ja
xchg
inc
inc
xlat
push
pop
outs
xchg
xchg
and
mov
adc
cmp
sbb
jo
add
xchg
push
mov
test
xlat
mov
dec
mov
daa
test
xchg
jo
ins
cmp
das
xor
fdivp
dec
mov
mov
push
iret
xchg
sub
xchg
jge
mov
jb
mov
ror
repz
cmp
xor
jp
lods
leave
cs
inc
fs
pop
retf
div
(bad)
mov
cmp
retf
inc
dec
fstp
or
cmp
mov
push
sti
mov
call
mov
adc
or
xchg
repnz
les
dec
(bad)
lock
in
sub
cmps
adc
cwde
retf
lea
ds
push
aam
leave
push
jo
mov
inc
sub
lock
push
repnz
or
xor
clc
nop
(bad)
iret
fs
add
je
mov
jo
lahf
sbb
jno
(bad)
test
xor
pop
or
rcr
in
push
stc
movs
mov
push
retf
(bad)
adc
int
mov
mov
or
aas
int3
sub
sub
xchg
push
or
repnz
pop
add
pop
inc
inc
xchg
stos
(bad)
rol
cmp
jle
mov
mov
push
mov
fmul
fwait
pusha
mov
add
aam
aas
jnp
retf
test
fwait
pusha
add
fwait
jmp
jmp
dec
(bad)
aas
fsub
das
fstp
jmp
fwait
or
jae
pop
leave
push
outs
aaa
and
dec
jle
adc
push
(bad)
shl
xor
and
sti
jb
add
or
retf
rcl
xchg
mov
sbb
fld
pop
clc
lods
test
in
popf
pop
cmp
and
cs
fsub
(bad)
(bad)
cmc
fst
inc
sahf
scas
popf
shl
into
push
push
pop
or
push
in
or
mov
sbb
(bad)
xor
adc
lahf
jns
sbb
inc
lods
add
dec
vpshufbitqmb
jecxz
dec
fsub
out
mov
pop
fdivr
je
in
in
adc
jge
push
inc
pop
pop
ret
(bad)
outs
frstor
je
dec
pop
add
movs
inc
xchg
ret
cmp
mov
xlat
outs
xor
ss
jno
jnp
pop
in
stos
iret
xor
add
scas
out
mov
mov
add
jecxz
push
mov
jge
mov
mov
xor
xor
push
pop
xor
push
mov
inc
or
push
push
or
test
mov
leave
adc
rcr
xchg
jp
(bad)
pusha
sub
and
mov
(bad)
sti
push
aaa
bound
and
mov
jnp
out
jecxz
hlt
ins
mov
jmp
test
repnz
sub
ror
push
ret
mov
xchg
or
call
sar
cmp
jae
push
repnz
mov
ror
(bad)
xor
jae
sbb
int
mov
xor
inc
or
add
dec
mov
and
loop
jl
std
ret
(bad)
mov
pop
(bad)
pop
movs
jmp
test
or
int3
mov
pop
iret
loopne
fld
stos
dec
mov
jns
ret
cmc
retf
stos
std
inc
mov
stos
fld
jbe
mov
pop
jg
pop
xchg
cmp
add
test
and
(bad)
cmp
or
div
dec
jo
outs
in
sub
mov
lds
pop
sbb
or
add
cmc
movs
sbb
sub
ds
xor
out
push
inc
fdiv
out
inc
mov
pop
(bad)
out
xchg
(bad)
push
mov
mov
movs
jns
add
loop
iret
mov
ds
(bad)
push
loope
inc
inc
fs
arpl
push
mov
sub
in
lods
adc
stos
lods
sbb
clc
xor
(bad)
jmp
mov
arpl
cmp
mov
aad
inc
adc
inc
push
inc
sub
outs
scas
gs
(bad)
lods
sbb
jo
mov
mov
nop
push
jbe
test
sub
loopne
cmp
xor
adc
fwait
scas
js
and
inc
and
push
push
xor
jge
std
mov
sbb
cmp
stos
dec
pusha
and
dec
loop
and
loop
(bad)
cmp
mov
inc
mov
push
fist
pop
aam
enter
out
jnp
stos
push
add
or
aas
sub
fld
ret
pop
sub
(bad)
cld
push
and
pop
mov
cmp
clc
cmps
mov
fwait
xchg
xchg
loop
mov
mov
test
stos
or
jmp
mov
loopne
cmps
div
addr16
dec
daa
mov
xor
mov
out
sahf
cdq
dec
int3
icebp
jge
out
lds
(bad)
jmp
dec
jo
jbe
mov
mov
mov
dec
push
out
paddusb
out
add
aas
sbb
lods
and
out
push
inc
sbb
adc
rcl
and
mov
sub
lea
mov
mov
cmps
fsub
jno
rcl
scas
push
das
lock
xor
push
inc
pop
push
outs
xchg
mov
dec
and
jge
test
push
in
pop
ds
push
aas
cmp
rcr
jae
icebp
imul
dec
fwait
push
popa
gs
add
retf
div
cmps
repz
ja
ins
xchg
xchg
cmc
and
sbb
dec
adc
in
add
push
les
(bad)
push
sar
and
pop
rcr
jae
mov
jge
fist
inc
cmp
inc
adc
adc
xor
xchg
pop
push
mov
cmp
cwde
mov
mov
popa
mov
test
ficom
adc
int
stos
lock
je
fs
inc
ret
xchg
mov
jecxz
fild
add
mov
xor
mov
cmp
cmc
ins
out
jg
sbb
mov
sahf
xor
mov
test
add
sub
cmc
cmp
out
ret
aam
sti
mov
xchg
push
lods
and
bound
mov
out
nop
outs
inc
push
fild
pop
int
push
cmps
fbstp
cli
test
jle
jb
clc
aam
sub
psubw
popw
jge
imul
(bad)
xor
xchg
sub
adc
pop
pop
inc
add
mov
cmp
test
inc
inc
add
jae
popa
or
and
inc
or
pop
in
and
push
adc
neg
imul
ins
in
aam
inc
mov
sub
sub
fmul
and
(bad)
ret
mov
stos
jae
lock
pop
sahf
jmp
push
cmc
mov
or
xor
jo
and
ror
push
mov
repz
pop
jo
adc
and
and
add
enter
enter
arpl
or
fsubr
sub
mov
adc
shl
inc
lahf
ins
enter
mov
push
mul
and
adc
xor
add
add
jl
imul
xchg
cmp
loopne
mov
lods
jecxz
test
inc
adc
fdivr
jmp
pop
icebp
xchg
sbb
movs
jnp
xchg
xor
mov
mov
(bad)
xor
dec
leave
int
jnp
and
scas
dec
and
outs
cmps
stc
ret
jbe
jae
cmp
push
scas
jmp
inc
jmp
call
nop
xchg
adc
add
enter
jne
ss
ror
xor
out
ret
inc
cmp
lods
mov
cli
setno
int
sub
sbb
cmp
mov
pop
cli
pushf
data16
jnp
or
ret
sub
js
call
and
cld
test
jno
inc
out
mov
fwait
and
ds
cmp
(bad)
sub
sbb
mov
shl
ja
adc
test
(bad)
jmp
push
dec
mov
pop
(bad)
mul
pop
(bad)
ficom
scas
xor
test
sbb
mov
(bad)
popf
sub
cmp
scas
in
cs
mov
das
add
cmps
xchg
jmp
adc
bound
mov
add
mov
test
mov
and
popa
dec
jmp
push
inc
pop
jns
cmp
cmp
and
loopne
fs
les
and
aam
dec
sub
pop
popf
cmp
fst
dec
daa
out
dec
ins
xchg
add
cmps
sbb
out
add
inc
inc
ins
jo
xor
sub
add
cmc
enter
addr16
(bad)
mov
xchg
pop
(bad)
add
push
push
sbb
retf
mov
cs
adc
movs
xor
push
pop
pusha
call
adc
sar
adc
inc
movs
movs
aam
movs
xchg
cmp
(bad)
jmp
adc
mov
or
mov
enter
mov
pusha
scas
or
addr16
and
mov
cmp
xchg
add
iret
rol
mov
js
or
(bad)
pop
js
mov
pop
je
xor
xchg
jne
push
sub
inc
retf
repz
aaa
test
int
adc
std
adc
rcr
retf
jnp
fsubr
sbb
cli
rol
cmovle
fimul
xchg
jne
pop
arpl
shl
outs
arpl
pop
iret
pop
and
fmul
xor
icebp
sub
add
sbb
sub
test
mov
shl
mov
(bad)
jecxz
add
aam
(bad)
xor
iret
(bad)
retf
inc
cmp
data16
mov
pop
xchg
mov
xchg
movs
cwde
add
adc
stc
pushf
imul
push
lods
shr
fist
das
xor
sbb
jp
popf
pop
or
and
loope
xor
icebp
mov
jmp
jmp
outs
les
ror
and
xor
cmp
out
nop
test
mov
mov
ins
les
jo
in
fidivr
popa
js
sar
enter
aad
out
or
xor
shl
shl
cmp
dec
xor
outs
inc
fsubr
cli
pushw
fldcw
xchg
mov
or
cdq
int
stos
sub
in
frstor
mov
in
sbb
imul
push
adc
aaa
fadd
fnsave
cli
outs
mov
cld
call
add
and
sbb
push
shl
outs
shl
sbb
outs
cmp
jnp
(bad)
cld
xchg
arpl
ja
or
out
cmps
and
sti
cmp
mov
ficom
mov
fdiv
pop
adc
sbb
push
loopne
inc
ffreep
mov
retf
stos
xchg
xlat
and
in
jg
dec
call
shr
sahf
dec
cmp
sub
in
ror
scas
outs
pop
sbb
jl
inc
jne
in
popa
fbld
(bad)
aas
sbb
stos
scas
retf
mov
aam
push
shl
push
imul
and
in
pop
xchg
fs
or
in
or
fs
int3
test
jecxz
mov
jne
popa
mov
and
and
out
repz
xor
ror
ret
jge
pop
xchg
xchg
mov
icebp
and
mov
pushf
inc
push
cmp
mov
pop
inc
adc
repnz
mov
pusha
pop
(bad)
outs
push
int3
sbb
jno
xchg
add
sub
sbb
ja
daa
sbb
ficom
daa
fcomp
pop
push
outs
ins
inc
add
add
mov
pop
xor
test
call
movs
es
xor
movups
add
push
sbb
mov
inc
pop
out
loope
pop
je
pop
xor
leave
mov
stos
stos
rcl
ins
jmp
mov
dec
out
mov
ss
shl
add
ins
xchg
mov
inc
(bad)
aam
pop
jl
frstor
jo
cli
and
pop
arpl
out
cli
arpl
pop
clc
sbb
pop
mov
sbb
jmp
outs
or
adc
outs
pop
push
xlat
ficom
les
(bad)
jmp
addr16
xchg
xchg
sbb
xor
shl
(bad)
stos
pop
mov
mov
cmc
test
in
inc
in
arpl
or
jecxz
loope
jmp
fmul
arpl
test
or
push
dec
pop
shl
out
add
gs
pop
ins
shr
sahf
add
mov
popa
ins
mov
(bad)
pushf
xchg
dec
mov
aaa
pop
xchg
js
sbb
dec
jb
xor
jbe
dec
xchg
loopne
jnp
pop
sahf
sbb
(bad)
in
shr
mov
jg
xchg
xchg
sar
or
andnps
sbb
rol
jb
data16
pop
push
cld
cmp
nop
mov
xchg
inc
pop
sahf
std
lahf
xchg
add
repz
icebp
xor
push
inc
cld
hlt
div
add
xchg
clc
cmp
pop
sbb
dec
aad
mov
mul
add
mov
mov
popf
xchg
adc
movs
xor
test
test
inc
loope
popf
shr
sub
cli
sub
push
jmp
pop
das
std
add
int
and
jbe
test
mov
gs
jl
das
imul
mov
cli
loopne
(bad)
aad
sbb
je
fisubr
or
add
fwait
inc
dec
mov
jg
dec
mov
xor
mov
pop
inc
retf
mov
push
ja
add
test
add
(bad)
aaa
mov
pop
jo
mov
iret
sub
ss
jge
adc
dec
sar
(bad)
(bad)
dec
xor
aad
(bad)
mov
pop
mov
inc
jl
in
dec
fucomi
lods
dec
icebp
cmp
cmp
in
mov
fsub
dec
test
pop
in
jle
call
cmp
pop
arpl
ins
mov
cld
jnp
leave
outs
cmc
ins
fcomp
xor
sbb
sub
fidivr
and
lds
dec
inc
cli
mov
or
cmps
xchg
lods
sbb
test
jno
push
push
shr
ja
int3
push
mov
xchg
mov
adc
mov
jno
mov
movs
stc
and
fs
jnp
out
inc
stc
add
sar
mov
push
pushf
push
enter
in
adc
dec
adc
sbb
cmp
nop
push
add
mov
add
mov
inc
xchg
loopne
test
xchg
popf
or
enter
or
mov
mov
inc
dec
(bad)
retf
test
jne
pushf
in
xlat
adc
push
inc
movs
push
cwd
inc
xor
add
sub
push
cmps
scas
push
lods
jmp
loop
xor
fidivr
xchg
jnp
and
stc
or
jbe
xchg
gs
call
mov
dec
ret
mov
std
inc
inc
test
inc
xor
loop
shl
adc
mov
int3
cmps
neg
iret
bound
add
dec
and
cmp
out
jp
cli
scas
mov
jnp
fmul
das
cmps
xchg
mov
aas
or
(bad)
cmp
pop
xor
aam
scas
xor
push
jae
jecxz
mov
test
xor
mov
sub
cmp
push
xchg
loop
in
push
push
lock
(bad)
jae
jae
jmp
mov
xchg
stc
rcr
jbe
inc
mov
loope
push
push
lock
dec
(bad)
jbe
ret
lock
xchg
mov
mov
push
inc
xor
inc
mov
jp
aaa
jno
sub
addr16
jmp
xchg
in
ror
cwde
sti
mov
jge
fld
fistp
outs
cdq
mov
retf
ds
ret
push
mov
repnz
sub
adc
xor
jmp
jmp
mov
out
jle
inc
call
mov
rol
mov
bound
test
stos
je
in
test
cmp
xchg
add
fwait
pop
repnz
scas
add
dec
jmp
popa
cmp
mov
sub
lods
retf
sub
jo
lock
pop
fcmovbe
jne
popf
mov
das
mov
popf
jns
inc
dec
adc
outs
fidivr
mov
aas
jge
push
fdivr
push
sub
scas
retf
inc
lods
and
ins
pop
xchg
cmp
xchg
jmp
push
push
int3
jl
pop
push
das
mov
jmp
adc
mov
cmp
lods
sub
add
ins
xor
ins
pusha
jbe
aaa
out
fistp
pop
mov
test
pop
inc
fwait
cmps
idiv
pop
jg
fisttp
and
xchg
loopne
jl
jl
test
ret
sub
je
inc
ins
fwait
xor
je
jae
jge
in
test
fnstsw
dec
popf
not
rcr
pop
fimul
dec
(bad)
dec
cmova
fstp
aas
or
sbb
add
lods
add
push
icebp
jae
je
lods
push
retf
xchg
neg
or
dec
pop
push
mov
sbb
xor
call
xchg
or
cmp
lods
(bad)
adc
and
mov
outs
push
out
imul
jmp
mov
dec
test
mov
shr
cwde
mov
xor
sbb
mov
jl
inc
jmp
jbe
les
outs
daa
jecxz
icebp
pushf
stos
scas
repnz
data16
scas
jecxz
push
in
adc
mov
and
sbb
ins
adc
inc
dec
cmp
test
lds
gs
mov
mov
aaa
stos
push
es
mov
push
and
sbb
js
movs
push
inc
xor
inc
push
jns
cmp
lds
fnstsw
stos
fmul
(bad)
push
shl
retf
push
(bad)
jge
sub
test
and
add
cmp
ins
jmp
stos
mov
or
add
adc
in
adc
fstp
sub
loop
mov
pop
jae
mov
mov
repnz
mov
in
das
inc
clc
jl
add
push
mov
mov
mov
popa
push
adc
cmc
jb
scas
sti
dec
pop
out
fs
push
push
jb
and
call
mov
cmp
pop
mov
push
mov
popa
cs
aad
add
outs
test
jbe
xor
ins
jae
nop
sbb
inc
push
rol
mov
pop
int3
sub
xchg
scas
jmp
mov
adc
adc
ins
jp
mov
or
nop
pop
push
xchg
add
xor
push
xchg
dec
(bad)
aam
mov
movs
mov
cmp
xchg
dec
push
retf
movs
imul
pop
retf
inc
popf
push
rcl
pop
shl
add
and
ss
stc
add
push
arpl
enter
movs
outs
cld
mov
adc
daa
xchg
xchg
jp
sub
pop
jnp
push
xchg
adc
ins
sar
jnp
(bad)
pop
mov
jno
and
test
mov
mov
lds
mov
xlat
jmp
mov
xor
cmc
or
ss
and
mov
dec
mov
mov
cmp
mov
sub
iret
(bad)
movs
sti
xchg
pop
dec
xchg
jbe
pop
mov
xor
mov
aad
push
adc
ins
mov
cmps
loope
pop
dec
dec
icebp
sub
dec
ficom
ss
xor
add
in
(bad)
ja
pop
adc
dec
rcr
lock
(bad)
jo
cmp
mov
or
or
jle
jno
push
mov
jmp
mov
in
add
(bad)
push
push
mov
mov
jae
or
(bad)
adc
sbb
call
call
mov
jmp
outs
sbb
loope
push
xor
jl
out
inc
cli
jnp
sbb
ds
sub
cmp
adc
lock
push
call
mov
mov
mov
ret
push
inc
jbe
std
icebp
retf
test
repz
inc
aas
and
mov
(bad)
rcr
sub
pop
mov
test
loope
sbb
pop
cli
fisttp
cli
cmp
rcr
cdq
cs
lock
int
jecxz
mov
std
cmp
retf
pop
sub
or
cmps
gs
pop
hlt
jnp
fs
pop
push
push
push
ds
mov
jp
das
imul
call
enter
ret
clc
or
pop
add
dec
jg
fwait
xchg
push
repz
jle
add
or
lods
jp
addr16
push
shr
ds
sbb
(bad)
call
fistp
ins
or
jbe
pop
dec
das
jne
add
ret
fs
mov
outs
xor
push
fbld
movs
dec
int3
mov
out
scas
jmp
call
pushf
cmp
(bad)
test
jmp
mov
dec
outs
inc
lea
adc
inc
arpl
dec
add
add
xor
out
fs
(bad)
out
dec
pop
sti
and
sbb
int
lods
jne
(bad)
ins
jae
das
cli
movs
add
jne
jp
out
cmc
imul
aaa
xchg
add
stos
and
and
cli
jmp
xchg
mov
push
(bad)
int3
add
push
pop
stos
ds
cmp
out
mov
outs
pop
inc
popa
xor
and
xchg
ja
test
jmp
push
add
aam
fdiv
mov
inc
mov
into
dec
dec
loopne
mov
or
cld
fst
dec
retf
movs
dec
call
stos
nop
into
xor
sub
ss
mov
nop
inc
mov
mov
xchg
mov
aad
sbb
in
push
in
fimul
jmp
inc
fild
int3
mov
mov
sbb
imul
stos
adc
jnp
enter
pop
test
fwait
mov
xor
sbb
out
icebp
test
in
pop
cmp
or
fidivr
push
xchg
icebp
inc
mov
popa
push
lods
fdiv
es
lock
cmp
jecxz
dec
push
iret
popf
outs
add
and
mov
shl
mov
jb
ror
dec
repz
outs
test
adc
in
bswap
fwait
(bad)
sbb
xchg
(bad)
cmp
mov
hlt
rcr
inc
aas
inc
hlt
clc
push
pop
jo
push
bnd
xchg
movs
fldcw
aaa
div
push
mov
outs
xchg
movs
jbe
or
dec
cdq
ror
gs
cmps
clc
jp
xor
sub
or
loope
dec
mov
mov
test
rcr
scas
movs
push
mov
clc
dec
stc
adc
ret
jno
js
mov
xchg
fsubr
sbb
sub
sbb
into
outs
inc
out
mov
ins
mov
push
xchg
ret
test
cmp
cli
or
fadd
movs
arpl
mov
cmp
fimul
xor
(bad)
lahf
pop
mov
jns
jns
xor
push
xor
jmp
jle
repnz
std
mov
inc
rol
sub
out
inc
and
mov
cmps
ss
cmps
out
mov
mov
fdiv
xchg
dec
and
leave
(bad)
out
in
cmp
sub
pop
inc
and
or
mov
retf
outs
and
jbe
lods
(bad)
cmc
mov
add
sbb
and
shl
pop
push
(bad)
and
and
xlat
sub
and
mov
inc
wrmsr
out
sbb
inc
xchg
lods
adc
ds
out
lahf
jne
sbb
ja
cmp
jmp
test
test
iret
retf
scas
fstp
mov
dec
push
push
icebp
dec
mov
rcl
es
push
cmp
mov
xor
loopne
push
shl
jne
mov
fstp
je
push
jmp
push
mov
and
arpl
lods
inc
das
mov
mov
mov
repz
pop
mov
fisubr
out
ret
repz
jp
jmp
pop
or
jp
push
push
push
sub
aas
dec
add
(bad)
repz
pushf
dec
test
daa
mov
fiadd
sbb
pop
outs
xor
loopne
sbb
mov
imul
sbb
push
adc
or
mov
out
in
inc
popf
call
or
mov
ja
push
inc
out
sub
sbb
jmp
test
dec
and
sti
dec
cmp
sbb
pop
mov
and
cli
icebp
out
lods
out
mov
fst
push
ss
or
adc
add
fistp
jle
adc
out
pop
hlt
ret
mov
stos
push
iret
sti
sbb
in
shl
dec
or
ficom
and
mov
sub
(bad)
mov
rcr
fcom
cmp
rcr
mov
scas
push
popa
fdivr
nop
xor
bound
push
xor
ins
fnstenv
xchg
xor
icebp
gs
xchg
imul
cmps
ret
mov
xlat
push
clc
or
add
jp
rcr
mov
pop
mov
call
or
call
dec
(bad)
shr
retf
shl
dec
push
cmps
fidivr
xrelease
jg
xchg
inc
sbb
push
adc
add
jbe
cmc
scas
dec
call
(bad)
pop
mov
(bad)
dec
inc
xchg
std
or
sbb
dec
adc
jnp
jno
inc
xchg
inc
inc
aam
inc
cmp
inc
xchg
mov
sub
dec
aas
adc
push
push
and
mov
push
xor
rol
daa
push
retf
out
push
push
addr16
add
inc
and
call
push
cdq
jge
adc
push
mov
push
retf
or
into
cli
out
in
push
push
jae
stos
mov
clc
adc
cmp
dec
jns
mov
sbb
adc
fld
bound
adc
repz
pop
rcl
mov
fimul
jo
adc
dec
lods
sbb
int3
jnp
repz
dec
pop
out
jae
ins
stos
add
addr16
in
xor
xor
cmp
add
imul
cmp
inc
mov
daa
mov
ds
add
ins
out
(bad)
in
pop
out
sbb
jbe
jb
xchg
and
inc
sub
aas
mov
add
aad
inc
(bad)
jmp
add
xchg
loope
jo
jl
fiadd
push
bound
and
pop
test
rcl
push
inc
outs
mov
outs
pop
dec
imul
(bad)
je
in
jp
mov
fwait
mov
xor
mov
jne
cmp
add
adc
sbb
xchg
(bad)
cmc
mov
retf
or
jmp
add
daa
js
adc
test
shl
aad
out
sub
sub
in
mov
or
ds
aaa
movs
pop
lods
popa
mov
or
pop
xor
push
jmp
adc
or
cmp
cmp
call
pop
inc
mov
ins
xchg
or
adc
xor
stos
retf
dec
xlat
retf
pop
frstor
lods
cmp
ins
rcl
sub
dec
call
cmps
hlt
pop
loope
or
lahf
mov
test
mov
ja
dec
add
fst
pop
cmp
or
lds
or
addr16
mov
push
push
mov
push
inc
je
imul
shl
loopne
jnp
and
inc
cmp
leave
inc
and
sbb
sbb
and
mul
fsubrp
pop
rcr
xchg
dec
gs
fidivr
sub
arpl
adc
ja
xchg
lods
dec
xor
and
push
push
out
jecxz
test
cmp
and
xor
(bad)
mov
repnz
leave
dec
jl
adc
iret
pop
fwait
pop
pop
sti
dec
push
add
test
adc
mov
push
dec
and
vmovshdup
push
pop
pop
sub
mov
mov
dec
push
inc
std
jb
je
mov
shl
sub
cmp
xchg
gs
and
mov
push
shr
and
and
jmp
xchg
sbb
cmp
dec
shl
cmp
cdq
xor
std
xchg
mov
loop
je
pop
mov
jo
push
jp
cmp
lea
add
or
push
(bad)
sub
fnsave
cmps
and
cmp
xor
out
mov
and
test
cdq
adc
sar
mov
test
sti
cmp
out
aam
pusha
sbb
das
mov
cld
jl
or
ja
jae
xor
add
mov
mov
fstp
fcomp
dec
sub
jmp
pop
call
add
cwde
sub
mov
jnp
imul
mov
aad
jne
popf
and
jne
cmps
bound
jmp
mov
mov
adc
jle
sub
out
sbb
xchg
fs
arpl
call
dec
cwde
rol
mov
push
mov
pop
pop
add
aad
cld
rsqrtps
xchg
test
(bad)
stos
jp
xchg
(bad)
aam
aam
test
mov
and
adc
jbe
sbb
xor
imul
repz
mov
enter
cmp
aas
sub
sbb
xchg
mov
ficomp
(bad)
test
push
ficomp
inc
gs
das
mov
push
xchg
std
popf
sub
cmp
fisub
mov
lods
adc
jg
enter
xchg
cdq
xchg
push
shl
test
add
dec
jmp
mov
out
fld
inc
push
jge
popa
mov
jl
jbe
movs
or
xchg
dec
jmp
fscale
aas
sub
cwde
test
jp
je
loope
sub
adc
sahf
inc
mov
shl
ins
(bad)
ja
inc
adc
mov
adc
mov
inc
dec
outs
outs
rol
movs
xchg
sbb
or
mov
lods
pop
mov
mov
call
gs
in
jmp
sbb
fwait
pop
dec
pop
inc
sub
pop
jecxz
push
jmp
push
adc
fimul
push
pusha
jae
sbb
daa
push
adc
xchg
jecxz
dec
lea
jbe
call
mov
mov
jle
div
ss
cli
and
jbe
ins
mov
sysexit
cmp
cli
and
xchg
test
loop
mov
or
test
imul
pop
and
iret
fbld
push
inc
xchg
mov
mov
jo
in
call
cmp
sub
jge
daa
adc
jb
adc
jecxz
xor
push
ja
outs
and
dec
pop
mov
and
cmp
fs
jns
jecxz
repz
and
push
and
das
push
(bad)
cli
add
pusha
push
test
inc
das
int
fild
fild
push
jmp
jns
scas
dec
sub
shl
pop
jns
(bad)
adc
push
rcr
int
aaa
pop
adc
lods
out
(bad)
mov
arpl
xchg
idiv
dec
mov
sti
ror
pusha
cs
popf
aad
int
call
or
pop
not
movs
xor
mov
xor
shl
pop
icebp
pop
je
movs
xor
mov
push
jl
add
imul
mov
jb
(bad)
movs
pop
imul
dec
into
jne
add
repnz
xchg
movs
inc
mov
add
adc
jge
icebp
mov
or
mov
mov
je
add
sbb
add
sar
ss
fs
repnz
loopne
mov
jge
std
adc
sbb
imul
fwait
add
ins
pushf
arpl
dec
push
push
push
fcomip
icebp
iret
popa
push
add
movs
push
or
mov
int3
sbb
xchg
xchg
mov
lahf
mov
out
xchg
lahf
ficom
cmps
mov
stos
mov
leave
add
stos
stos
pop
std
add
jg
aam
jae
mov
mov
les
inc
call
dec
sub
xchg
jno
aam
xor
arpl
rcl
push
xchg
mov
adc
adc
jecxz
std
or
and
cmp
fs
mov
jno
jb
mov
ins
mov
jae
and
mov
mov
sub
ins
aaa
cmp
cmps
mov
mov
mov
inc
call
pop
(bad)
stc
sub
lods
cmp
xlat
mov
cmp
or
in
popa
rol
mov
test
add
mov
push
das
mov
cmp
mov
iret
into
(bad)
imul
js
test
and
gs
xchg
movs
pop
ins
cmp
cmp
addr16
cld
in
in
xchg
neg
bound
sbb
jb
aam
sub
stos
cmps
mul
(bad)
(bad)
std
mov
mov
outs
out
and
pop
or
xchg
xchg
cwde
(bad)
std
je
mov
call
and
inc
daa
fidiv
jecxz
addr16
dec
test
push
lahf
pop
mov
cli
call
stc
jns
shl
out
test
lods
sbb
sbb
xchg
xchg
test
add
pop
push
jmp
lea
or
push
shl
push
and
sub
pop
fdiv
adc
jg
jns
and
pop
out
mov
icebp
jmp
ss
retf
jns
jnp
lar
adc
(bad)
mov
inc
leave
cmc
mov
push
cld
call
add
pavgw
jns
push
xor
adc
cmps
mov
(bad)
retf
mov
or
mov
iret
js
jmp
cdq
adc
pop
out
ja
jmp
outs
fistp
pop
dec
inc
mov
jne
jb
ja
xchg
imul
mov
out
mov
xchg
imul
adc
rcl
xchg
nop
push
lock
sub
lds
xchg
aam
popf
outs
fst
and
in
xor
pop
(bad)
and
and
adc
mov
outs
scas
loop
cmps
xor
lahf
shr
or
aad
and
popf
cmc
mov
inc
in
ror
std
cdq
mov
movs
mov
pop
fwait
cwde
mov
push
test
das
sbb
dec
ret
mov
push
mov
scas
push
int3
pop
ins
jmp
sbb
cmp
mov
repz
cli
xor
push
mov
mov
outs
test
and
(bad)
push
xor
popa
inc
or
mov
lock
add
ss
outs
inc
movs
or
push
xor
mov
retf
in
adc
mov
mov
(bad)
cmp
movs
adc
push
nop
pop
inc
aas
mov
inc
fcomp
push
cmp
shrd
mov
cmp
adc
or
mov
loop
dec
data16
call
es
and
js
dec
inc
dec
mov
xchg
repnz
int3
popa
mov
and
pop
jg
pushf
xchg
or
imul
mov
(bad)
loop
je
sub
icebp
jmp
or
(bad)
mov
ror
pop
adc
loop
rcl
loopne
xor
xchg
adc
and
push
sub
clc
pop
(bad)
mov
cmc
adc
inc
cmp
pushf
test
fwait
add
ret
out
lds
jnp
div
xor
div
inc
lock
cs
mov
pop
ja
call
pop
js
ja
and
mov
loope
adc
in
jb
mov
pop
jmp
mov
mov
xchg
xor
fidiv
adc
mov
test
dec
sar
xchg
(bad)
sub
cmp
mov
mov
call
and
xor
mov
cmc
outs
test
jl
mov
dec
sbb
add
(bad)
jmp
pop
sbb
call
mov
je
dec
je
adc
cmp
pop
xchg
js
push
sbb
cmp
add
sbb
and
adc
lahf
jle
js
adc
cmp
and
loopne
mov
jae
imul
jne
adc
mov
scas
loopne
xchg
cwde
and
jl
add
mov
clts
(bad)
xor
mov
cmp
cs
jb
dec
cmp
out
movs
xor
sbb
(bad)
sub
stos
iret
in
inc
lock
mov
gs
dec
loop
cmps
jno
sub
cs
retf
add
addr16
sbb
cmps
or
movd
jmp
push
jle
scas
inc
pusha
mov
cmp
fidiv
jmp
xchg
or
ja
cmc
add
test
sbb
xor
cwde
adc
fst
xor
jb
or
cmp
fwait
or
sbb
les
cld
dec
xchg
scas
gs
das
out
cmps
ss
in
push
ins
add
leave
repnz
out
or
jne
mul
loope
xchg
ja
fwait
mov
push
and
push
arpl
push
jmp
or
mov
lods
jmp
stos
jmp
inc
add
in
pop
cmp
movs
repnz
sbb
stos
push
mov
jns
adc
push
scas
sbb
xor
xor
ins
jl
pop
mov
adc
or
push
xor
mov
push
pop
cmp
add
fs
and
add
mov
je
jmp
mov
movs
int3
push
into
test
pop
in
jns
clc
fidivr
cwde
xor
icebp
test
add
mov
add
mov
pusha
lods
stc
mov
adc
push
popf
push
test
sub
jns
sar
add
fcmovu
push
sub
fxam
xor
mov
sub
call
out
call
xor
push
xchg
jl
in
sub
pop
popa
(bad)
sahf
xchg
cdq
cli
mov
sti
test
rcl
pop
fnstcw
jg
leave
mov
outs
aas
pop
cmps
cmps
xchg
aas
cmp
movs
cmps
xor
cwde
and
mov
jle
dec
outs
adc
fcmovne
std
mov
pop
adc
push
scas
out
pop
cmp
pop
add
cld
loopne
adc
xor
jo
inc
or
lahf
mov
hlt
out
mov
add
rol
sahf
adc
add
cmp
sar
mov
lds
cmps
loope
inc
pop
loop
aas
sub
ins
(bad)
ins
add
jmp
movs
imul
shl
pop
inc
push
cwde
bnd
push
push
sub
mov
scas
dec
test
cmp
or
push
leave
pop
xor
mov
push
rcr
mov
es
adc
push
cmps
cmps
pop
push
stos
cmp
mul
push
mov
and
bound
dec
int
cmps
popa
ds
pop
pop
sub
xchg
stos
jno
fld
aad
outs
mov
addr16
(bad)
sbb
rcr
mov
cli
mov
or
enter
sub
and
add
outs
cmp
jl
dec
shl
mov
push
(bad)
xor
mov
std
sti
sub
loope
jb
fsubr
cmc
adc
mov
jge
mov
scas
or
mov
adc
adc
jecxz
inc
hlt
and
data16
mov
test
inc
xchg
inc
pop
inc
and
and
out
mov
adc
sti
push
popf
test
dec
cmp
sahf
pusha
aas
mov
mov
mov
jecxz
retf
scas
pop
jl
push
sti
adc
in
dec
les
cmp
and
jns
test
or
sahf
pop
daa
enter
idiv
(bad)
mov
sbb
inc
es
xor
inc
sbb
pop
(bad)
mov
in
mov
and
sbb
movs
nop
sub
mov
jae
xchg
push
in
push
mov
jmp
add
pop
scas
mov
ins
cmp
out
dec
int
jns
mov
adc
clc
in
push
xchg
mov
call
mov
scas
cld
jns
stos
or
adc
push
ret
adc
xchg
imul
add
fimul
jns
inc
pop
pop
test
and
in
lds
pop
movs
fwait
dec
mov
dec
in
retf
push
je
cdq
scas
jno
test
cmp
mov
daa
push
ficomp
push
enter
fcmovb
mov
sub
fisub
(bad)
cmp
jl
test
aad
movs
and
js
outs
or
mov
mov
in
mov
ja
add
imul
and
mov
jge
xor
mov
mov
or
xor
hlt
dec
xchg
into
lods
loop
cdq
add
sub
cmp
sub
mov
mov
(bad)
mov
add
sub
adc
mov
pop
loopne
jae
inc
inc
ja
sti
outs
sub
rcr
fcmove
inc
sbb
cld
(bad)
dec
in
lods
movs
enter
mov
popa
jne
cmp
mov
je
jmp
inc
xor
lods
xchg
pop
test
(bad)
sbb
lods
int
adc
and
fs
loope
jp
adc
rol
xchg
cmp
xchg
adc
mov
xchg
lea
je
cmp
ret
mov
call
jmp
add
jns
loop
or
jno
xchg
dec
test
inc
mov
xor
retf
add
test
(bad)
xchg
fs
(bad)
mov
jmp
xchg
adc
inc
cld
jecxz
jne
adc
xor
jnp
fs
ins
(bad)
push
lahf
push
push
mul
sub
adc
push
push
mov
mov
mov
inc
xchg
push
ja
jg
rcr
in
and
jmp
mov
ror
js
fiadd
in
cmps
ins
mov
sbb
bnd
lock
push
push
sub
sar
add
and
sbb
mov
inc
ins
xchg
test
dec
test
retf
inc
or
cmp
or
mov
int
sbb
pop
cld
xlat
pusha
mov
jno
jbe
add
rol
pop
retf
loope
mov
jns
ret
fisttp
sbb
out
dec
repnz
push
dec
pop
ins
scas
dec
ins
leave
lods
cdq
dec
lock
inc
mov
and
push
xchg
push
rol
push
dec
stc
mov
push
lock
loop
dec
out
dec
aam
push
je
inc
jmp
test
leave
inc
and
loope
(bad)
(bad)
stos
mov
or
mov
or
adc
mov
jmp
mov
jle
scas
jmp
lea
in
jle
adc
cmp
pop
gs
movs
bound
imul
jbe
pop
xchg
(bad)
sbb
cs
mov
push
out
das
sbb
lds
cmp
aad
(bad)
xchg
pop
xchg
shr
inc
hlt
sbb
pop
xor
icebp
cs
mov
and
in
jo
gs
in
mov
xor
call
shr
sub
xchg
jno
mov
jns
loopne
inc
rcr
pop
push
or
je
jnp
out
scas
adc
mov
ins
aaa
(bad)
(bad)
cmp
inc
jl
mov
mov
mov
(bad)
inc
and
sub
or
setle
push
mov
dec
in
das
mov
mov
in
retf
cmp
or
push
adc
iret
scas
push
sbb
or
push
icebp
lahf
je
stos
jg
sti
jno
xchg
cs
or
out
mov
cwde
jmp
ja
or
push
jl
imul
jo
repnz
or
cmp
xchg
cmps
inc
mov
sbb
pop
xchg
fyl2x
in
pop
add
mov
dec
fistp
out
xchg
mov
vxorpd
add
mov
pop
int3
lahf
aam
(bad)
dec
lds
retf
xor
pop
(bad)
retf
fdiv
ins
inc
aam
daa
ins
into
or
dec
xchg
add
push
ret
push
leave
in
scas
cwde
jg
jno
retf
mov
ins
dec
xor
retf
adc
pop
dec
(bad)
out
adc
ret
cld
xchg
test
leave
fwait
mov
(bad)
aam
sahf
jnp
cmp
dec
into
test
xchg
test
pop
aad
scas
shl
mov
xor
jns
aas
push
rcl
mov
out
and
jae
mov
in
int3
pop
cmc
sbb
inc
ss
out
or
aaa
fs
jge
push
mov
mov
add
rcr
jae
int3
sti
into
xchg
movs
mov
dec
dec
sbb
xchg
(bad)
loop
in
movs
inc
mov
and
cmp
push
hlt
hlt
rcl
mov
(bad)
(bad)
jne
pushf
xchg
cmp
in
dec
adc
mov
jg
repz
mov
mov
push
inc
sub
popa
sub
sar
mov
ins
popf
(bad)
out
inc
push
popf
push
div
repz
xor
jge
aad
outs
jmp
push
dec
pop
inc
jne
or
xor
adc
out
in
mov
mov
dec
fimul
push
sbb
mov
jecxz
fld
mov
das
adc
mov
adc
enter
in
pop
adc
loope
xor
mov
cmc
mov
sar
cmp
inc
(bad)
lods
mov
stc
or
xor
sub
sti
cmp
out
push
pop
call
mov
stc
scas
pop
inc
inc
xor
xor
in
leave
xchg
movs
lea
in
std
in
cmp
inc
les
loopne
test
out
out
jmp
fs
movs
dec
mov
fmul
xor
daa
and
ja
cli
popa
xchg
pop
jge
sub
out
pop
mov
adc
or
cs
imul
cmp
jmp
xor
cmp
imul
sti
ret
cwde
jns
sti
fld
aaa
les
inc
pop
ror
add
dec
jmp
inc
in
xchg
in
mov
pop
cmpxchg
jl
jl
fsub
mov
fwait
cmp
imul
xchg
or
push
push
loopne
pop
xchg
jns
sub
push
std
test
fmul
iret
mov
mov
popa
scas
pusha
mov
mov
mov
mov
inc
push
test
fs
or
jecxz
jno
int
or
je
cmp
cld
push
hlt
fwait
pop
pop
cmps
shl
add
aas
ret
add
call
into
dec
retf
mov
dec
fcomp
xchg
imul
adc
test
pop
mov
xchg
adc
adc
jmp
pop
inc
aad
sbb
lods
xrelease
scas
or
pop
hlt
(bad)
(bad)
mov
adc
mov
imul
call
xor
neg
enter
pop
xchg
pop
maxps
call
cmps
dec
ins
xor
ret
lods
push
mov
cld
or
lahf
fsubr
mov
sub
xor
mov
test
aaa
or
inc
jns
jl
inc
mov
popf
cmp
ins
inc
push
fist
and
fs
scas
push
xchg
outs
and
push
out
and
cmp
mov
xor
(bad)
and
push
push
dec
push
adc
nop
cmp
cli
scas
(bad)
daa
icebp
(bad)
jo
aad
sahf
or
push
mov
cmp
jns
mov
test
nop
fimul
fisub
or
das
pop
inc
push
jg
fld
inc
subps
inc
mov
je
out
jns
and
pop
rol
sub
hlt
or
mov
je
cmp
mov
add
arpl
js
sti
mov
mov
(bad)
aaa
inc
out
pop
int3
or
and
mov
xchg
fs
push
cmp
pop
jne
sbb
sahf
cmp
jmp
push
xor
xchg
hlt
retf
inc
mov
loope
push
or
imul
pusha
jmp
mov
mul
fs
dec
push
push
jb
fstp
sbb
outs
retf
push
cmp
cmp
hlt
je
out
xchg
mov
mov
mov
sub
aad
mov
add
(bad)
pusha
jmp
or
repz
xor
call
sar
test
(bad)
mov
xchg
sbb
jo
and
das
adc
ror
sub
ss
iret
fcmovb
ret
scas
xor
shl
dec
jbe
sahf
in
mov
ret
sti
lea
push
inc
bound
jbe
pinsrw
fdivr
sbb
stc
xor
push
sub
xchg
call
dec
outs
aad
and
cdq
add
repz
mov
pop
inc
loop
cmp
or
cmc
mov
imul
push
mov
mov
mov
rcl
adc
ds
push
(bad)
add
into
dec
int
call
movs
aas
mov
pop
div
push
(bad)
stos
test
jno
or
dec
ins
mov
fnstenv
xchg
jmp
adc
repz
mov
stos
stc
push
jecxz
jecxz
popf
pusha
ja
inc
pop
and
jbe
push
or
fadd
and
pop
pusha
pop
sbb
add
lea
sbb
out
jmp
in
enter
xor
in
xchg
sub
sahf
adc
ret
xor
ja
call
cmps
enter
push
repnz
sbb
test
scas
push
adc
aas
div
outs
push
lds
sub
fisttp
cs
mov
jl
popf
dec
push
test
ins
(bad)
sub
mov
enter
push
jle
pop
xor
repnz
lahf
ja
xchg
adc
test
inc
mov
scas
sub
loopne
int3
push
ret
lahf
or
cmps
nop
lock
mov
aas
add
push
aam
mov
(bad)
sti
hlt
inc
rol
daa
adc
jl
xchg
pop
jns
rol
push
pop
cmps
mov
arpl
adc
fmul
cmps
adc
adc
adc
xor
adc
mov
scas
push
not
xchg
das
jmp
adc
fcmovnu
retf
mov
push
(bad)
leave
xchg
hlt
mov
and
xchg
add
dec
test
pop
gs
pop
sub
sub
ss
xlat
or
jb
inc
in
push
lds
(bad)
inc
ja
and
ds
push
arpl
mov
sbb
add
ins
into
rcr
cwde
mov
mov
repnz
xor
imul
cwde
xor
and
ins
movs
movs
sub
jge
jae
mov
cwde
mov
aam
dec
aam
dec
pop
dec
aam
mov
aad
shl
mov
mov
sar
inc
pop
or
out
inc
cld
arpl
mov
nop
ret
mov
mov
xchg
jle
xchg
sbb
push
ins
out
js
dec
retf
fwait
jecxz
gs
repnz
ret
test
cs
mov
xor
inc
add
or
pop
inc
cmp
xchg
inc
cmp
and
and
sub
xchg
leave
arpl
stos
adc
xchg
mov
add
movs
popa
popa
idiv
jmp
sbb
pushf
(bad)
clc
test
dec
out
js
mov
cdq
mov
retf
sub
retf
inc
adc
loope
repnz
cmps
add
imul
push
fldenv
movs
je
jp
enter
shl
dec
call
jo
imul
test
stos
xor
in
jnp
jle
retf
cmc
jg
sbb
mov
push
popf
test
or
fld
fdivp
mov
dec
jbe
push
pop
aaa
cmp
jp
fs
or
lahf
pop
inc
dec
bound
cmp
add
push
test
mov
push
fs
mov
lea
cmps
mov
shl
sub
ret
arpl
fst
xor
mov
in
mov
out
push
aaa
xchg
js
loope
jmp
test
pop
pop
mov
sub
inc
add
out
cwde
js
addr16
inc
repz
not
mov
into
retf
or
xor
mov
call
inc
and
(bad)
sbb
in
jecxz
push
xchg
ja
fisub
xor
sub
pop
cli
leave
push
jbe
jns
in
(bad)
lea
push
ja
xor
into
fisttp
hlt
div
add
das
movs
test
int3
jne
cmp
(bad)
bound
fadd
jp
mov
push
sub
pop
pop
pop
cmp
(bad)
pop
or
xchg
cmp
sbb
fst
lds
mov
cld
sub
or
mov
test
sub
nop
mov
outs
in
fild
xchg
aas
jle
mov
jecxz
mov
in
sub
xchg
(bad)
pop
adc
imul
out
mov
or
xchg
test
dec
cli
push
fst
xor
(bad)
jmp
test
dec
push
cmps
or
mov
or
fst
cmp
pop
xchg
sub
fstp
xlat
int
jnp
out
repnz
mov
mov
clc
xor
add
sub
xchg
or
(bad)
pop
gs
push
repz
movs
cmc
neg
jle
sbb
sbb
mov
or
push
mov
jb
mov
xlat
loopne
ret
pop
mov
sbb
lahf
push
test
ins
push
jno
cmp
or
call
in
test
mov
dec
jle
cwde
inc
shl
aad
add
addr16
sbb
(bad)
and
data16
bound
sub
(bad)
add
mov
call
aam
mov
out
icebp
iret
repz
push
retf
sbb
repnz
mov
jl
or
in
movs
cli
dec
sub
xor
lods
ja
mov
inc
and
stos
lea
xor
xchg
cwde
jmp
jne
xor
int
icebp
les
pop
jae
inc
sbb
gs
dec
out
fisttp
mov
xchg
inc
call
xor
lods
push
push
or
push
or
pusha
out
mov
test
cld
sbb
xor
stos
or
dec
fisttp
pop
xchg
out
call
ror
sahf
bound
sub
cmps
xor
xor
call
add
dec
and
imul
clc
adc
jl
push
push
in
test
mov
enter
cmp
rol
lds
or
scas
fistp
mov
loop
pop
mov
jns
sbb
pop
scas
sub
inc
mov
sub
pop
jns
movs
in
mov
shl
cld
test
scas
test
xchg
dec
stos
mov
aas
outs
xor
lea
ins
add
hlt
or
jecxz
push
xor
xor
sub
mov
dec
call
bound
or
mov
int
stos
pop
jg
xor
ins
pop
lods
or
cmp
push
neg
fisttp
mov
aad
sbb
jmp
or
mov
jge
mov
call
out
clc
cmp
cli
mov
clc
push
leave
sub
outs
aam
add
inc
inc
jmp
pop
call
mov
pusha
mov
cmp
jbe
jecxz
(bad)
pop
clc
(bad)
out
xor
and
xchg
ss
scas
xchg
mov
pop
in
dec
shl
jae
and
mov
js
and
sbb
call
shl
movs
fnsave
adc
xor
jg
call
mov
and
popf
push
mov
push
push
sbb
cmp
pop
movs
fld
sbb
movs
enter
test
out
aam
sub
or
mov
xchg
xor
or
sub
sbb
loope
je
or
push
xchg
push
lods
cmps
int3
adc
aad
imul
or
(bad)
dec
jmp
add
xchg
sub
cmp
jp
aam
pop
in
pop
into
push
mov
out
add
cmps
xchg
xchg
mov
cs
hlt
sub
add
retf
sub
iret
mov
cmp
inc
std
adc
xchg
enter
ja
add
pop
pusha
scas
dec
leave
inc
push
imul
cwde
jl
or
(bad)
fmul
xchg
sbb
test
cwde
fisttp
xor
dec
sbb
cli
sub
pop
daa
inc
sub
mov
ins
push
(bad)
adc
sbb
add
(bad)
xchg
arpl
adc
mov
fcomp
push
cld
retf
and
pop
(bad)
mov
xchg
fwait
ds
sub
js
jecxz
fstp
pop
and
sub
jl
rol
pop
in
inc
mov
loopne
sbb
lods
mov
dec
add
idiv
loopne
test
in
jnp
dec
lods
dec
hlt
cdq
fcom
dec
lahf
int
adc
dec
dec
cmp
dec
mov
inc
std
sbb
fstp
fnstenv
cmps
or
jmp
pop
stos
push
and
nop
sub
loop
aad
stc
js
shl
repnz
(bad)
cmps
jo
(bad)
mov
loope
mov
and
test
movs
xchg
adc
push
movs
mov
scas
icebp
inc
in
cdq
push
fisubr
rep
adc
jbe
lds
or
(bad)
outs
mov
std
sub
lea
add
dec
push
jns
jmp
fisub
xor
cmp
sub
mov
(bad)
pusha
call
dec
repnz
mov
inc
daa
cdq
add
pop
xor
pop
add
mov
loope
jo
cmc
xchg
mov
fdivr
inc
inc
test
lods
div
inc
and
cmps
adc
scas
jecxz
pop
clc
out
gs
test
mov
lods
sub
pop
sar
fs
movs
neg
and
sbb
xor
inc
and
lods
es
push
int
add
mov
ret
(bad)
pop
jmp
nop
out
repnz
mov
es
lea
movs
xchg
push
mov
adc
popa
push
xchg
or
push
fdiv
mov
fiadd
cmp
repz
pop
and
jns
pop
(bad)
ins
dec
test
fidiv
jns
mov
adc
jno
arpl
mov
cmp
stos
gs
fs
aaa
pop
mov
and
sub
dec
cs
adc
pop
cmp
cmp
addr16
repz
rcl
sub
mov
lods
adc
movs
cmp
xchg
dec
push
cmps
xor
pop
popa
ins
call
sti
mov
mov
fnstsw
mov
xor
cmps
lods
jmp
push
bound
jmp
inc
sbb
cmp
ffree
ss
loop
int3
sbb
sub
sbb
pop
in
cld
iret
mov
jns
(bad)
loope
xchg
sub
into
icebp
or
mov
adc
rcl
push
retf
arpl
pusha
ret
sbb
or
mov
leave
add
lock
in
mov
test
push
daa
jbe
xor
popa
pop
dec
xor
xor
ins
mov
mov
pop
int
mov
sbb
lds
jae
push
cmp
jmp
pop
add
js
xchg
retf
ret
dec
scas
pop
test
les
xchg
xchg
imul
push
ret
repz
inc
jo
stos
adc
ins
js
cmp
mov
jb
call
mov
adc
sbb
mov
into
or
loop
(bad)
cmp
test
retf
int3
cmp
in
xor
outs
sub
ret
xor
into
out
test
das
lds
mov
fwait
loop
push
add
pop
loopne
test
js
in
(bad)
sbb
xchg
add
enter
arpl
xor
or
icebp
dec
pop
out
(bad)
rcr
mov
test
mov
inc
inc
test
cli
mov
addr16
ss
fcmovbe
das
jge
fld
js
adc
cmp
lods
xor
cmp
mov
xor
mov
les
and
push
out
add
mov
mov
inc
test
and
int3
inc
stc
cmp
sbb
(bad)
mov
shl
out
jne
scas
mov
ins
in
adc
int3
movs
ds
add
pop
jmp
pop
sub
jl
or
repz
mov
movs
sbb
mov
addr16
call
sub
enter
ins
sbb
cld
jecxz
(bad)
push
pop
sub
xchg
jmp
mov
cmp
sub
pop
and
sbb
es
cmps
scas
lds
or
test
ret
xchg
bound
loope
arpl
fdiv
call
add
xor
cmp
js
jno
mov
or
(bad)
stos
cdq
and
and
movs
or
sbb
jge
aaa
fcom
fstp
les
sbb
push
sbb
lods
mov
jbe
clc
mov
lahf
xchg
jp
loop
out
shl
cmps
cmps
(bad)
jecxz
fcomip
adc
rol
inc
lods
inc
add
aaa
dec
cli
push
lds
push
mov
retf
call
out
lods
sub
cmp
inc
jmp
in
call
inc
jmp
int
mov
pop
and
sbb
mov
jmp
inc
adc
push
mov
cmp
in
call
cmp
ret
inc
mov
out
call
fsubr
or
cmp
sbb
es
sar
sar
pop
jnp
pop
inc
cld
or
retf
sahf
jb
xchg
shl
add
mov
cmp
sub
ficomp
div
pop
jg
jecxz
fsubr
push
xchg
and
fwait
dec
mov
lock
or
in
rcl
out
mov
cmp
mov
mov
imul
add
push
fild
add
or
adc
ror
or
adc
int3
sti
mov
call
and
cmp
inc
mov
retf
gs
popa
out
push
pop
xchg
or
dec
xor
fwait
dec
mov
ds
in
or
push
add
or
xchg
inc
sub
mov
xor
fcomp
pop
dec
popa
jl
mov
cmp
gs
or
xor
cmp
mov
push
adc
imul
cwde
push
scas
add
adc
add
inc
add
test
mov
jmp
xchg
inc
push
cmp
pop
test
or
push
repnz
retf
fisttp
retf
adc
test
cmc
std
out
repz
jnp
in
daa
push
jle
xchg
mov
out
inc
cmp
dec
ds
loopne
add
xchg
mov
jbe
sbb
xchg
mov
pop
push
sahf
out
adc
add
pop
mov
in
cld
iret
add
pop
push
jne
lds
mov
mov
pop
mov
shl
jp
push
xchg
xchg
(bad)
jnp
push
xor
mov
fisubr
and
(bad)
out
and
loopne
or
xchg
icebp
fbstp
addr16
pushf
push
xchg
cmp
cmp
jbe
pop
mov
xchg
sti
movs
pusha
pusha
bound
inc
loope
int
mov
cmps
mov
cmp
movs
jno
jle
imul
out
push
in
xchg
iret
jp
jg
push
dec
outs
(bad)
inc
shl
lds
adc
repnz
je
rcl
stos
sbb
aaa
pusha
repz
(bad)
dec
fidivr
push
and
xor
and
cmps
xlat
nop
mov
cdq
jnp
jmp
ror
pop
push
adc
sub
mov
dec
add
adc
fistp
push
mov
clc
stc
int
hlt
mov
in
inc
xchg
(bad)
sahf
inc
into
pop
repz
daa
mov
and
cmp
arpl
or
push
mov
or
repz
mov
ds
sahf
push
pop
add
sub
sub
nop
pop
(bad)
pushf
stc
cwde
mov
mov
cmp
(bad)
clc
adc
mov
mov
mov
or
movs
cmp
lods
xchg
call
ret
mov
inc
cdq
enter
(bad)
cmp
xchg
jmp
jmp
xchg
inc
cld
xor
daa
jecxz
cld
sbb
icebp
cmps
dec
enter
scas
xchg
arpl
jno
mov
loope
jecxz
movs
in
call
xchg
push
jae
adc
sub
loope
in
out
add
xchg
sub
call
clc
jns
mov
mov
dec
xchg
enter
(bad)
mov
loop
push
sbb
push
fdivr
mov
rol
rcr
test
fiadd
mov
int3
inc
or
jle
fwait
aam
movs
inc
pop
or
push
into
cmps
jle
jb
jp
fwait
pop
pop
sub
mov
in
aaa
lods
sbb
sbb
in
out
sbb
jp
push
inc
std
add
jno
sbb
inc
mov
stos
inc
dec
out
ret
fistp
jno
int
(bad)
mov
cmovae
add
outs
mov
xchg
call
mov
mov
lock
(bad)
push
cmps
push
shl
xchg
rcl
adc
and
jmp
inc
mov
xchg
add
in
test
pop
addr16
fwait
mov
pusha
inc
ss
jl
aaa
mov
test
cld
fsubr
adc
jmp
fdiv
rol
out
sar
mov
adc
jbe
daa
pop
push
mov
ds
inc
repnz
scas
cdq
das
cdq
(bad)
imul
and
add
sbb
and
or
sti
adc
frstor
cdq
int3
jecxz
dec
push
push
push
mov
das
inc
enter
dec
imul
xor
ins
inc
out
mov
push
ror
jp
stc
into
cmp
sahf
jl
mov
mov
ret
aaa
ret
(bad)
shl
pop
ret
cmc
add
push
sbb
inc
ss
inc
stos
imul
inc
mov
adc
call
push
sahf
out
(bad)
int3
mov
rol
rcl
inc
mov
push
xchg
test
add
int3
add
out
sbb
das
loope
push
pop
or
mov
jns
mov
scas
movs
mov
sub
sub
rcl
cdq
jge
movs
test
dec
iret
repz
jmp
xor
out
fldcw
(bad)
not
rcl
nop
pop
imul
mov
shl
cmp
mov
fst
sub
enter
stos
in
sbb
jl
cbw
dec
fwait
cmp
out
dec
sub
fidivr
add
xor
sti
retf
(bad)
retf
test
dec
push
pusha
or
sti
jecxz
xor
test
and
xlat
push
test
pop
push
test
xor
imul
jbe
call
and
pop
inc
lds
cmp
pop
adc
pop
test
cmc
mov
iret
bound
shr
jno
adc
cmp
mov
cdq
stos
(bad)
cmps
xchg
jo
in
xlat
fs
dec
fldcw
(bad)
retf
loope
enter
jns
push
mov
dec
sub
mov
push
out
jp
ja
inc
sbb
aad
call
je
add
out
mov
push
xor
out
xor
dec
jo
inc
sub
fs
ror
data16
(bad)
arpl
lahf
or
xchg
sbb
test
in
leave
sub
ds
mov
movs
cmp
dec
sub
ins
pop
fild
cmp
cmps
and
xchg
xchg
stc
mov
clc
ss
mov
xchg
mov
(bad)
dec
pop
cdq
pop
cmp
or
rdpmc
xor
(bad)
(bad)
push
rcl
mov
sub
fisubr
(bad)
sbb
inc
cmp
les
add
sub
outs
pop
pop
sub
imul
sub
xchg
mov
ins
cmps
mov
call
iret
sub
stc
retf
jbe
sbb
push
in
jae
(bad)
cmp
cmps
adc
aad
add
push
push
clc
jge
rcl
(bad)
jae
add
rcl
adc
add
retf
xchg
cwde
sub
loope
por
lods
push
mov
mov
sbb
ficom
inc
fucomp
mov
push
ins
jns
xchg
sub
(bad)
retf
sti
xchg
fcomp
cs
adc
repz
fadd
stos
inc
stc
mov
pop
and
loopne
mov
dec
xchg
stos
dec
push
out
retf
aad
jg
cmps
(bad)
mov
das
ss
mov
jb
jno
cmp
xchg
push
adc
push
das
xor
or
adc
jno
xor
leave
imul
push
or
adc
sub
out
(bad)
stos
and
cmp
iret
xchg
and
lahf
cmps
adc
mov
ins
push
mov
stos
out
mov
aad
mov
mov
xor
cli
pop
fdivr
jne
les
je
gs
xor
lock
pop
jp
fadd
(bad)
mov
repz
pop
out
mov
retf
arpl
inc
mul
jo
mov
push
imul
pop
mov
add
in
sub
adc
push
xor
xchg
xchg
jmp
push
rcr
stos
imul
rcr
and
and
ret
xchg
mov
and
cmp
mov
ror
push
call
imul
jge
retf
dec
js
aas
add
mov
cwde
movs
mov
dec
pop
cdq
mov
mov
movs
das
add
xchg
push
adc
adc
cs
pop
cmp
pusha
mov
call
or
mov
jecxz
push
loop
fstp
dec
mov
mov
mov
stc
fistp
icebp
popaw
xchg
ror
adc
cmp
in
or
outs
cmp
inc
push
sub
outs
jbe
jecxz
mov
test
sbb
test
adc
jno
xchg
add
jb
in
daa
fidivr
xchg
adc
(bad)
scas
cmp
xchg
aaa
and
dec
push
inc
inc
ret
xchg
mov
or
aaa
sahf
pop
mov
movs
sahf
test
cld
add
test
frstor
xchg
or
imul
mov
dec
add
xlat
xchg
arpl
pop
and
mov
fsub
cwde
mov
and
add
ror
in
in
jne
scas
in
fucomip
dec
xor
push
cmp
add
movs
cdq
jl
loop
test
in
es
mov
add
js
scas
adc
sar
pop
pop
fild
dec
mov
pop
or
xchg
rol
ja
push
dec
js
std
pop
and
xchg
loop
std
dec
out
push
test
js
inc
sbb
mov
imul
mov
scas
sahf
popa
xor
pop
aas
repnz
enter
inc
addr16
jne
and
or
ret
test
and
and
(bad)
repnz
xor
dec
and
fwait
out
xchg
bt
es
xor
mov
or
jg
aas
sbb
dec
inc
in
push
je
daa
and
inc
sar
dec
jae
cmc
minps
repz
inc
jne
es
mov
mov
dec
(bad)
jmp
pushf
jne
out
cwde
jecxz
popa
clc
sbb
movs
dec
(bad)
bound
cmp
push
mov
add
ja
and
mov
fstp
push
adc
mov
pop
mov
(bad)
mov
pushf
jl
repnz
cmp
mov
cmp
or
sub
jge
mov
ss
retf
fwait
mov
xor
xchg
loope
dec
cmp
dec
fstp
mov
fwait
(bad)
in
add
hlt
ficom
call
idiv
hlt
or
mov
mov
or
(bad)
adc
imul
in
shl
inc
push
and
aam
in
shl
or
out
inc
adc
jnp
aad
mov
test
fbstp
aad
push
pop
or
cmp
mov
in
nop
into
int3
cmc
mov
ret
push
sub
add
daa
stos
pop
push
dec
push
mov
pop
test
div
mov
dec
mov
inc
fs
neg
xor
mov
and
inc
fucomp
sar
enter
mov
out
xchg
sbb
mov
repnz
das
xchg
jae
or
(bad)
imul
outs
loope
xchg
fadd
fisttp
ds
btr
(bad)
add
pop
fadd
mov
icebp
inc
add
out
sbb
push
inc
jmp
sub
mov
fwait
xchg
cmps
call
int
adc
pop
push
or
test
xchg
jp
lods
add
adc
cs
adc
pushf
and
sub
test
or
sahf
add
je
hlt
and
scas
mov
push
js
push
xor
js
arpl
ss
movs
out
leave
mov
cmp
sub
cmp
xchg
push
ja
fcomp
mov
mov
adc
adc
pop
mov
(bad)
in
aas
and
ja
adc
push
dec
jge
pop
and
enter
cwde
ds
jo
imul
pop
stos
int3
fs
hlt
leave
push
mov
xor
sahf
aas
loop
push
sbb
sbb
in
frstor
dec
imul
nop
adc
loope
jg
repz
ror
cs
fdiv
or
jb
(bad)
imul
int3
cmp
xchg
push
jb
mov
js
inc
pop
inc
xlat
xchg
stc
(bad)
push
xchg
popa
pop
cmp
pop
es
pop
iret
scas
xor
cdq
rcr
add
in
test
or
dec
test
cmp
xor
aam
mov
(bad)
and
cmp
std
loope
cmp
jecxz
pop
cmps
fwait
repz
mov
bound
iret
popf
das
push
and
loopne
outs
push
lods
and
cdq
or
in
cli
aas
or
sub
je
test
or
pop
mov
popf
xchg
inc
(bad)
out
(bad)
lahf
pop
and
int3
ret
adc
jp
push
sbb
and
scas
sbb
pop
sub
jmp
xchg
or
dec
ret
out
jp
xchg
(bad)
jae
mov
jle
jae
pop
add
pushf
fsub
sbb
pop
push
out
not
jnp
jecxz
ret
pop
push
rcl
aaa
pop
mov
mov
nop
mov
jmp
mov
sub
imul
sahf
dec
sub
mov
int
xchg
and
fst
mov
sub
test
int
xor
fidiv
adc
jns
call
inc
xchg
pop
cmp
scas
les
icebp
add
add
jb
xchg
iret
(bad)
mov
xchg
out
scas
stos
rcl
inc
(bad)
jbe
xor
sbb
outs
sub
lahf
mov
in
je
mov
imul
jne
push
mov
enter
or
test
mov
mov
mov
dec
mov
jns
call
or
nop
sub
push
pop
inc
dec
mov
test
mov
xchg
jle
push
push
shl
pop
ss
aaa
(bad)
cmp
fld
fs
mov
dec
loopne
sub
das
push
add
xor
loopne
push
push
(bad)
pop
std
jns
mov
stos
or
movs
arpl
icebp
xor
mov
jmp
or
mov
mov
out
pushf
lods
(bad)
cmp
mov
call
xchg
in
loope
rcl
pop
cmp
push
sbb
jle
loope
bound
ins
adc
stos
test
xlat
dec
stos
cmp
popa
dec
mov
or
(bad)
pop
mov
imul
xor
div
in
(bad)
fcmovnb
cmps
mov
shl
mov
loopne
lock
push
(bad)
mov
sbb
repnz
sub
retf
test
loopne
ret
sti
movs
outs
xchg
xor
aas
sbb
adc
dec
aas
sub
imul
and
sbb
add
xor
jl
(bad)
sahf
lea
test
shl
cmp
(bad)
sahf
dec
jg
iret
xor
outs
cmps
adc
sub
cwde
push
dec
adc
mov
lahf
cmp
jae
out
dec
xor
cld
fstp
fadd
adc
sub
add
mov
cmp
and
mov
mov
inc
cs
pop
or
xchg
arpl
xor
mov
push
pop
mov
or
sar
popa
add
loopne
mov
into
add
ins
fld
push
sbb
(bad)
fisttp
imul
ds
mov
jo
test
shr
mov
jp
or
(bad)
pop
popf
dec
fwait
mov
xor
mov
(bad)
iret
inc
aad
xchg
push
shr
mov
xchg
or
sbb
addr16
dec
xor
dec
jae
add
jae
icebp
cmp
push
mov
add
or
lahf
xlat
and
mov
cmp
mov
(bad)
jno
pop
imul
or
push
leave
scas
pop
xchg
(bad)
cmps
xchg
sti
jge
addr16
mov
pop
sbb
add
shl
and
sbb
dec
mov
scas
pushf
push
mov
pop
cmps
sbb
lods
jmp
mov
loopne
clc
cmp
xchg
loop
pop
or
adc
cmps
mov
rcl
push
sbb
sar
mov
xchg
stos
lods
add
out
xchg
ret
jle
mov
xchg
cld
pushf
imul
pop
push
gs
jge
mov
mov
sahf
or
loopne
cld
jg
sub
adc
and
dec
loopne
dec
jne
test
jno
sahf
cli
addr16
enter
cmp
mov
xchg
mov
xchg
aad
cwde
pusha
in
pop
fild
icebp
jb
es
nop
push
popf
mov
in
ss
push
pushf
jns
inc
dec
or
xchg
das
jns
jnp
adc
call
push
gs
movs
in
or
mov
test
sbb
sbb
xchg
push
jb
into
leave
pop
add
(bad)
out
cmp
jae
rol
push
iret
jae
xchg
mov
jl
pop
xchg
in
icebp
cmp
xchg
les
fstp
inc
out
add
std
iret
adc
mov
retf
stos
test
jnp
sbb
or
xor
mov
out
and
pop
push
mov
sbb
jo
dec
(bad)
adc
pop
push
lahf
or
mov
pop
push
rcl
sbb
sar
daa
or
jmp
add
sar
fs
and
out
dec
fild
or
cmp
push
arpl
call
mov
cmps
or
out
sub
cmp
leave
lea
or
ins
sbb
mov
fs
shl
mov
push
pop
call
add
or
and
test
cmp
std
add
mov
call
shr
or
(bad)
sbb
and
lahf
mov
jmp
jl
rcr
lock
push
ja
imul
adc
adc
sub
js
xchg
push
out
jmp
jne
bound
popf
retf
icebp
push
mov
aad
leave
inc
xchg
push
and
mov
movs
and
fmulp
dec
pusha
sub
mov
fsubr
push
jp
dec
dec
cmp
mov
bound
test
movntq
cli
out
pop
ret
jo
or
stos
pop
mov
sar
gs
mov
pop
shl
and
test
add
pop
or
and
dec
sub
and
mov
add
rcl
cmp
xor
or
pop
cmp
push
mov
repz
sbb
inc
out
loope
and
loope
cld
data16
push
jns
pop
or
inc
or
pop
pop
sub
cmc
adc
ret
sub
inc
jl
popa
or
mov
dec
enter
repnz
dec
push
mov
add
jl
sahf
loope
push
cmp
pop
enter
adc
jnp
mov
sub
mov
jbe
pop
adc
inc
aam
mov
xor
pop
mov
jge
pop
ret
mov
and
or
bound
cld
pop
rol
enter
std
inc
jo
sbb
adc
and
loop
jnp
ja
adc
inc
test
xchg
and
ret
out
mov
lods
in
sahf
xchg
jo
or
(bad)
adc
pop
call
aas
rcr
scas
or
mov
adc
mov
mov
sub
fisubr
enter
gs
push
mov
fld
scas
push
loopne
and
mov
scas
mov
sub
fs
cwde
cwde
pop
push
nop
xchg
and
fdiv
jmp
pop
mov
in
or
pop
push
test
mov
mov
ficom
ret
dec
inc
mov
xchg
test
xchg
scas
ja
dec
arpl
jne
or
pop
popf
nop
ins
in
sub
clc
mov
fsub
outs
fild
sahf
aam
jp
popa
inc
pop
hlt
jb
loope
jge
adc
into
int3
jne
xchg
ffreep
mov
(bad)
cli
movs
cld
xchg
sub
or
call
cmc
adc
cmps
into
adc
xchg
cmp
xchg
into
xor
in
sti
(bad)
or
inc
xchg
std
in
cs
xchg
dec
mov
cmp
cmp
mov
arpl
xchg
or
jl
stos
jp
cli
add
cli
lahf
jnp
lock
mov
mov
jns
fsubrp
frstor
mov
push
pusha
cmps
ror
jmp
data16
dec
adc
add
je
jmp
xor
sbb
pop
adc
mov
mov
fistp
cmps
mov
loope
ret
arpl
jmp
(bad)
mov
je
adc
test
les
cmps
mov
aas
xchg
fiadd
and
sub
jbe
imul
mov
push
mov
push
push
mov
gs
or
adc
iret
loope
push
inc
adc
daa
retf
int
popa
lahf
aad
in
pushf
sub
les
adc
or
push
ror
and
jmp
xchg
push
mov
icebp
xchg
cmp
das
xchg
not
jbe
shr
push
add
push
add
cmp
outs
cmp
cmps
mov
fadd
xchg
adc
mov
add
mov
cwde
imul
test
cwde
movs
xor
add
push
sub
or
sub
dec
test
ror
mov
mov
xchg
dec
ja
xchg
sub
push
leave
dec
and
mov
dec
scas
stos
outs
std
in
arpl
bound
lock
fisub
bound
xchg
inc
(bad)
sti
xchg
jmp
mov
sub
(bad)
dec
mov
mov
mov
hlt
arpl
mov
pcmpeqw
pop
jp
iret
inc
dec
sbb
adc
mov
outs
push
data16
ret
ja
imul
or
cmp
je
daa
add
adc
movs
addr16
loop
je
(bad)
loopne
cmp
adc
hlt
adc
in
fst
cvttps2pi
push
push
shl
repz
add
or
seto
pusha
pop
or
jmp
sbb
fsubrp
std
dec
dec
pop
sub
neg
push
retf
dec
lock
push
mov
jae
into
cwde
dec
sub
fiadd
std
sbb
cli
ins
push
mov
add
mov
shr
jp
push
(bad)
fidiv
sbb
cmc
sbb
ja
adc
and
xor
fcom
div
aaa
(bad)
pop
lds
sub
cld
or
int3
add
push
fcom
inc
retf
dec
leave
sub
imul
mov
push
fstp
bound
xor
xor
cmp
jg
fild
sbb
push
mov
out
rcr
in
ins
imul
sub
repz
test
icebp
mov
push
sub
push
out
es
jp
(bad)
int3
aam
pop
mov
call
jne
inc
fist
inc
inc
inc
(bad)
xchg
inc
adc
retf
les
adc
fcmovu
sbb
mov
in
cwde
aad
ffreep
ins
push
daa
cmps
push
inc
push
mov
xor
les
(bad)
mov
(bad)
jnp
stos
jecxz
sar
push
shr
ret
cmp
into
dec
jae
inc
call
and
hlt
aaa
mov
lea
test
xor
push
std
test
addr16
les
call
inc
int3
imul
data16
out
jno
mov
into
aam
shl
mov
xchg
mov
test
inc
cmp
sbb
lock
push
movs
imul
push
dec
cmp
les
test
and
stos
mov
arpl
std
push
jmp
push
loop
movs
shl
shl
mov
xor
jle
or
fcmovb
leave
dec
daa
push
mov
or
xchg
imul
pop
pop
mov
dec
stc
cmp
rol
and
scas
jbe
push
fs
call
cwde
inc
sbb
shr
mov
imul
jne
inc
out
xchg
addr16
jecxz
ss
push
inc
nop
jmp
call
ja
ja
push
not
test
fdivr
or
xchg
or
pop
inc
mov
or
icebp
cdq
mov
sub
bound
clc
ror
test
test
dec
fs
jo
cmps
cmp
rol
xchg
jmp
mov
repz
sub
dec
sub
retf
cmps
and
stc
repnz
in
sbb
add
test
into
add
mov
repz
jae
jnp
sbb
push
xchg
mov
das
mov
xchg
jp
clc
dec
ror
lds
int
mov
cmps
xchg
ja
mov
sbb
cmp
aas
dec
push
scas
enter
add
retf
xchg
call
cmp
pushf
inc
xor
jns
scas
sub
inc
cmc
xor
imul
test
out
mov
in
dec
mov
scas
scas
lahf
ins
movs
xor
jno
jae
les
xor
and
loop
in
cmp
movs
retf
scas
mov
push
fldcw
sub
test
cwde
test
stos
shr
or
(bad)
test
mov
pop
sub
ret
sbb
call
sbb
sub
cmp
imul
(bad)
mov
mov
cmp
aas
aas
mov
mov
aaa
ror
out
mov
sub
cmp
std
hlt
(bad)
jecxz
mov
cmp
push
xchg
fild
xchg
fcomp
sub
in
push
xor
mov
mov
inc
push
dec
xchg
pop
add
push
push
arpl
pop
dec
daa
sbb
fnstcw
push
mov
xor
push
sbb
dec
jge
sahf
mov
dec
pop
ret
pop
and
ret
xchg
xlat
ss
cmps
sbb
or
jo
xor
dec
jle
ins
dec
dec
dec
cmps
test
adc
mov
push
outs
repz
enter
call
lea
ret
and
in
or
sahf
nop
rcr
popf
clc
cs
movs
add
or
mov
popa
sub
sub
lahf
sub
mov
cdq
add
mov
lods
retf
outs
fs
data16
inc
xor
scas
and
pop
xchg
xor
lods
test
repnz
inc
sti
lds
arpl
add
mov
retf
js
sbb
shl
retf
push
push
sub
stos
pop
add
dec
repnz
jne
pop
jnp
cmp
mov
mov
push
retf
pop
mov
push
cmp
inc
leave
loop
jne
les
jecxz
sbb
sbb
fcmove
loope
dec
xchg
inc
idiv
mov
aam
sbb
jge
dec
xor
jbe
in
leave
xchg
mov
daa
push
mov
aam
lds
inc
lods
das
fmul
scas
arpl
mov
cmp
or
ss
popf
aas
fwait
enter
mov
sub
or
rcl
pop
(bad)
dec
xor
cld
sbb
sbb
xchg
fild
mov
push
repz
mov
adc
xchg
adc
cmp
cmp
lock
sub
xor
icebp
sub
dec
jl
pop
jbe
out
addr16
int
stos
sbb
in
sub
aaa
add
dec
or
pop
repz
cmps
cmp
sbb
jne
iret
or
(bad)
sbb
push
ja
ins
daa
shl
pop
fild
cmps
push
sbb
mov
mov
dec
sub
aaa
xor
mov
pop
sar
jle
mov
fwait
xor
addr16
mov
jg
loopne
dec
mov
inc
test
shr
or
sahf
cmp
ds
add
inc
push
mov
xchg
imul
movs
push
rcl
div
cmps
and
adc
mov
test
xlat
add
pop
pop
inc
ror
int3
add
pusha
cmp
sub
pusha
scas
je
push
cmc
mov
sahf
(bad)
pop
(bad)
or
loop
mov
add
dec
ror
xor
daa
xor
fwait
(bad)
leave
push
lods
and
xchg
stos
mov
inc
neg
push
pop
xor
xor
(bad)
cmp
pop
cmp
xchg
jecxz
repz
sbb
cmp
mov
into
aam
jg
push
addr16
mov
dec
int3
dec
(bad)
loopne
jns
je
xchg
lds
fnstsw
adc
cmp
or
fistp
sbb
fwait
sar
lahf
push
mov
lods
push
mov
in
and
les
jmp
push
sub
sti
ja
mov
mov
imul
or
(bad)
call
mov
dec
lds
add
mov
das
mov
and
mov
or
retf
in
adc
in
mov
adc
and
jae
(bad)
add
xchg
xchg
mov
or
adc
inc
shl
pop
inc
push
jmp
sub
ja
out
fist
test
adc
loop
mov
sbb
mov
cmp
out
test
enter
adc
adc
or
stos
add
daa
ficom
sbb
fdiv
fidiv
dec
data16
inc
dec
dec
xchg
lock
pop
fisubr
mov
js
mov
add
mov
cmp
xor
add
mov
(bad)
pop
addr16
lock
aad
sub
mov
jbe
scas
iret
fisttp
sbb
jae
mov
push
xchg
mov
mov
mov
add
int
fdiv
in
test
lock
jp
mov
loope
imul
dec
sub
stos
lods
imul
out
adc
push
iret
jl
xchg
dec
mov
or
or
scas
js
outs
mov
imul
sbb
mov
rcr
fwait
jbe
neg
or
ds
sbb
add
jp
out
mov
mov
movq
inc
into
leave
jmp
loopne
aad
push
gs
pop
cmp
dec
dec
fdiv
xor
adc
inc
jns
sub
(bad)
jmp
xor
xor
aaa
adc
xor
cmp
nop
imul
aam
or
jne
movs
cmps
mov
add
xchg
outs
rol
push
shr
push
mov
cli
lods
sub
push
adc
movs
cmc
adc
mov
packssdw
mov
shl
jb
sti
test
xor
ds
xchg
shr
mov
inc
vmwrite
xchg
leave
sub
push
cmps
mov
jnp
and
loop
dec
je
push
hlt
xchg
or
jne
cli
dec
xchg
and
xor
aaa
or
jmp
test
cmp
cmps
and
fs
mov
lds
call
hlt
xor
repz
cmc
jmp
adc
addr16
xor
fst
dec
(bad)
sar
retf
jbe
outs
imul
and
adc
lahf
or
aad
(bad)
hlt
loop
sub
pop
add
imul
(bad)
lds
pushf
mov
adc
into
mov
cmp
xlat
stc
cmp
ins
call
sar
mov
movs
and
rcr
dec
into
inc
cmp
lea
jle
loop
inc
cld
dec
ficomp
int
int
lods
cs
xchg
in
pop
cli
enter
mov
inc
(bad)
ret
stos
push
pop
push
mov
jae
adc
ds
mov
imul
pop
sbb
xlat
mov
fst
xor
pop
imul
mov
push
cmp
mov
dec
stos
lahf
loope
cmp
sbb
sti
in
pop
jge
imul
sbb
repz
mov
loope
popf
ror
js
push
daa
imul
xchg
mov
jne
or
xor
in
or
icebp
mov
fcmovnu
(bad)
jo
mov
or
mov
fsubp
push
xchg
call
pop
pop
ins
push
inc
sub
cmp
mov
fdivr
les
push
mov
sahf
sbb
dec
movs
sub
pop
inc
bnd
test
loopne
repz
ins
mov
and
sub
xor
(bad)
sti
pop
or
jg
iret
sti
sub
and
cmp
out
das
jno
xor
(bad)
fimul
xchg
jecxz
jb
pop
fmul
mov
cmp
mov
in
add
push
jns
or
or
mov
push
add
pop
adc
push
add
pop
not
sbb
xor
nop
sahf
cmp
ret
movs
das
mov
mov
add
cs
movs
adc
cmp
push
cmc
sub
pop
adc
shr
adc
cmp
outs
out
mov
jno
fldenv
xor
int3
push
push
fisttp
gs
pop
(bad)
int3
out
mov
jl
lods
test
scas
push
shl
and
inc
aad
loopne
inc
loop
xor
xchg
out
xchg
jno
jae
sub
sub
mov
xor
cmp
clc
sbb
and
mov
fstp
mov
push
cs
inc
dec
pop
adc
xor
or
loope
fs
out
inc
loop
out
cmp
shl
push
lock
or
inc
dec
push
jae
in
adc
cmp
repz
loopne
jbe
xchg
sub
fisub
sbb
repz
imul
cmp
sub
inc
cdq
arpl
mov
jecxz
mov
xchg
xor
jne
sbb
bound
js
repnz
ins
repz
and
mov
mov
push
fild
retf
fnclex
inc
add
repz
mov
xchg
enter
mov
adc
add
retf
jmp
imul
test
mov
sub
xor
popf
cld
and
xor
or
call
cdq
in
lahf
mov
ss
hlt
or
movs
xchg
cs
and
inc
ins
je
mov
cmc
mov
pop
mov
shl
nop
outs
ret
dec
jp
lahf
sti
popa
mov
jb
outs
das
jbe
shr
into
push
lods
inc
sub
mov
loope
push
fisub
dec
xor
std
pop
add
dec
lea
int
out
std
nop
fld
ins
mov
or
xchg
mov
and
cmps
out
or
push
pusha
arpl
(bad)
retf
cmp
bswap
mov
(bad)
adc
daa
mov
loopne
stos
add
pop
fild
dec
add
(bad)
sbb
pop
dec
add
cld
ins
(bad)
jl
xlat
(bad)
jg
or
stc
aad
stos
stc
mov
sub
jmp
cmp
add
mov
inc
(bad)
jmp
dec
jecxz
stc
lahf
jl
jo
push
cmc
ja
push
out
sub
sbb
pop
pop
popa
xor
int3
sub
pop
les
sbb
ins
mov
adc
mov
shl
and
das
lahf
imul
hlt
mov
mov
jecxz
icebp
rol
mov
inc
push
ss
mov
mov
ror
add
inc
mov
mov
jne
icebp
mov
test
pop
(bad)
xchg
xchg
out
sbb
retf
jo
call
popf
push
push
dec
and
ret
and
add
jns
mov
fwait
addr16
test
xchg
sub
gs
cmp
in
(bad)
pop
xchg
sub
xchg
sbb
bound
in
inc
jne
push
xor
div
add
lds
adc
movs
push
dec
mov
jl
xor
stos
(bad)
pop
sub
loope
mov
int3
into
xchg
add
bound
lods
mov
lods
adc
mov
cmp
jne
mov
xchg
leave
dec
dec
lds
mov
xor
hlt
inc
mov
jecxz
mov
pushf
in
movs
(bad)
std
(bad)
aad
dec
aam
xor
xor
fcom
(bad)
repnz
sub
scas
mov
jno
shl
sbb
pop
jl
mov
in
daa
inc
popf
xor
xchg
(bad)
aas
iret
mov
lods
adc
inc
jo
fwait
mov
addr16
loopne
call
mov
mov
push
add
adc
retf
inc
fild
jmp
mov
(bad)
push
inc
jbe
add
xor
mov
and
test
cli
clc
int3
out
into
ins
and
(bad)
imul
xchg
pop
call
sbb
fsub
outs
jecxz
mov
mov
mov
push
push
aas
inc
sbb
iret
pop
jmp
pop
push
in
mov
or
aaa
ja
xchg
push
loope
cmc
push
add
movs
and
mov
pop
sbb
pop
dec
test
ins
and
xor
imul
sbb
push
pop
push
rcl
loope
mov
jl
xor
(bad)
(bad)
loope
ins
mov
sti
aas
daa
jp
mov
(bad)
fwait
js
ins
retf
pop
sub
ds
imul
sbb
mov
push
or
mov
add
cmp
movs
adc
dec
mov
imul
add
int
pop
pop
fnstsw
icebp
jmp
pop
or
inc
and
or
mov
(bad)
fcom
mov
cmp
xchg
xor
pop
jp
stc
sbb
jb
stos
add
adc
mov
or
aam
test
out
pusha
mov
jo
fbld
jp
std
(bad)
enter
in
cmp
adc
mov
test
push
xchg
mov
jae
mov
xchg
out
pop
ins
daa
enter
mov
adc
inc
in
nop
sbb
mov
pop
and
ret
mov
imul
sahf
scas
inc
push
mov
pop
adc
jmp
ss
jge
jne
or
jge
gs
repz
jmp
ret
sbb
jge
sbb
out
imul
cdq
pop
repz
dec
lock
ror
adc
mov
ins
pop
ja
outs
cwde
push
fst
cmp
call
das
adc
xchg
push
les
xchg
enter
clc
fldcw
xor
xchg
xor
fidivr
lds
push
es
pop
sub
(bad)
or
mov
mov
xchg
adc
loop
xchg
sbb
scas
jl
xor
adc
mov
pop
mov
lods
(bad)
xchg
rol
outs
mov
push
in
xchg
cmps
xchg
xor
int3
mov
sub
inc
or
(bad)
cmps
or
cdq
dec
cmc
adc
aam
lds
(bad)
out
fnsave
pop
fsqrt
push
sbb
dec
jb
iret
pop
retf
push
ins
in
mov
and
pop
sub
fimul
iret
pop
jnp
jb
push
mov
cdq
repz
add
mov
mov
scas
(bad)
jle
scas
pop
enter
jnp
mov
inc
mov
mov
sub
retf
or
stc
cmps
mov
mov
sbb
call
inc
shl
cmp
inc
ins
pop
add
shl
dec
sbb
movs
data16
call
push
or
mov
push
fisub
jnp
sub
rol
mov
shl
bound
(bad)
loop
stos
fstp
inc
retf
mov
pop
icebp
pop
sti
sbb
sub
and
cwde
jp
stos
jge
in
pop
push
fiadd
xchg
dec
sub
stos
add
pop
daa
cmps
jmp
sbb
ins
test
fisttp
inc
mov
imul
xor
jbe
imul
dec
jle
xor
mov
sub
out
fsub
inc
fldcw
add
cmps
loop
rcr
jbe
xrelease
cmp
mov
jmp
out
xor
sub
(bad)
outs
inc
mov
aaa
cmc
stos
mov
ja
jmp
add
(bad)
pushf
dec
xor
jp
repnz
inc
dec
cmps
cmps
pop
frstor
mov
pop
pop
and
cld
icebp
(bad)
mov
push
sbb
int3
jmp
mov
mov
pop
sti
and
cmp
pop
hlt
mov
push
xchg
push
xchg
ins
in
call
pop
jp
enter
sbb
jp
and
out
ins
sub
cmps
mov
jmp
push
dec
inc
fimul
cmps
outs
jmp
xor
adc
adc
or
ds
adc
push
stos
dec
sbb
lock
rcr
adc
pop
aad
std
icebp
cmp
mov
jecxz
mov
jno
retf
sbb
mov
leave
xor
sar
sub
shl
movs
outs
pop
mov
jle
fchs
pop
out
adc
stc
inc
sub
xor
cmp
push
fbld
jg
inc
arpl
outs
jecxz
jae
xchg
inc
adc
movsx
hlt
adc
pop
adc
(bad)
dec
inc
std
sub
mov
shl
fs
pop
test
fdiv
icebp
das
inc
or
and
push
sbb
mov
pop
mov
data16
xchg
and
mov
and
fst
pop
into
iret
data16
gs
xchg
mov
and
and
jecxz
xor
fwait
pushf
in
hlt
fisubr
pushf
loopne
ds
adc
and
cli
mov
int3
(bad)
clc
inc
ret
aam
mov
mov
psubw
mov
mov
hlt
mov
mov
das
pop
and
mov
pop
pop
dec
out
jmp
mov
cwde
mov
inc
dec
lods
in
add
mov
shl
mov
and
outs
xor
adc
sbb
movs
movs
neg
fdiv
dec
loopne
inc
repnz
cmp
stos
sub
sub
jne
and
pop
mov
sbb
xor
repz
rol
aaa
(bad)
jmp
(bad)
pop
aaa
xor
scas
(bad)
movs
das
cmp
dec
(bad)
lds
dec
add
mov
sti
(bad)
lahf
addr16
cld
push
mov
out
mov
ja
hlt
add
mov
push
pop
jmp
add
sub
out
xchg
retf
mov
jp
and
daa
sub
lea
fadd
and
xor
xor
fldcw
mov
cwde
xlat
retf
fist
mov
mov
dec
sar
xor
(bad)
imul
mov
cmp
jae
dec
and
cmp
and
aaa
retf
retf
cli
repz
ins
jb
fstp
cwde
pop
xchg
dec
cmp
cdq
xor
mov
loopne
xchg
mov
cs
das
rol
iret
or
or
popf
cmp
fisttp
sub
cmc
test
aas
dec
mov
fcmovnu
pop
mov
outs
mov
mov
mov
sahf
es
mov
and
ret
jecxz
lock
mov
ficomp
adc
xchg
push
std
cli
dec
popf
inc
jle
xchg
jnp
test
sbb
mov
sahf
scas
test
mov
sub
ins
jnp
jl
in
ss
mov
adc
mov
outs
repz
push
nop
xchg
xchg
stos
push
in
and
mov
jmp
cld
hlt
sar
vpshlb
xor
loopne
inc
dec
mov
stos
fild
les
test
fisub
test
mov
aam
and
in
movs
shl
mov
lahf
mov
add
(bad)
pop
push
stc
and
jb
je
mov
push
addr16
add
lock
iret
jns
dec
push
(bad)
loopne
and
test
inc
mov
retf
retf
adc
data16
push
aam
add
jns
sbb
cld
(bad)
int3
and
cmp
mov
test
jmp
fiadd
xchg
ror
mov
scas
imul
cmp
mov
dec
xor
sar
xor
arpl
push
pop
test
fst
pop
out
cld
loop
or
and
inc
into
dec
adc
mov
icebp
push
jle
jnp
(bad)
stos
pop
adc
push
out
sbb
xchg
pushf
in
xor
push
xchg
xor
xor
bnd
push
or
mov
sahf
sub
dec
out
scas
aad
call
and
inc
sbb
ins
mov
jns
xor
fisub
sti
sub
mov
sbb
adc
data16
xor
test
movs
aam
inc
clc
adc
test
sar
pusha
cmp
int
jo
pop
sahf
(bad)
sub
mov
xlat
scas
jle
mov
jle
push
sti
dec
(bad)
shl
jnp
pop
push
cmp
outs
push
clc
(bad)
mov
popf
shl
loope
shl
xchg
jl
cmp
dec
add
mov
sti
enter
mov
mov
imul
push
in
es
movs
das
add
lds
in
or
pop
xor
mov
call
or
idiv
jg
sub
push
hlt
fmul
dec
mov
mov
sub
mov
inc
ficom
jmp
pusha
mov
nop
add
inc
jge
pusha
mov
es
shr
and
icebp
push
aam
add
mov
repz
mov
dec
sub
out
sbb
test
dec
sti
jge
adc
mov
aas
cmps
dec
movs
aam
inc
enter
mov
xchg
std
cmps
icebp
cwde
aad
je
push
mov
mov
xchg
xchg
bound
mov
in
pop
jle
sti
pop
pop
hlt
test
pop
mov
xchg
xchg
imul
cmps
(bad)
std
xchg
mov
sbb
test
sti
pop
rcl
xchg
mov
fdivr
call
mov
addr16
pop
pop
(bad)
fisub
xchg
mov
pop
cmps
daa
je
mov
xor
xchg
sar
out
dec
mov
daa
adc
push
bound
dec
(bad)
das
mov
inc
ins
and
pop
push
pushf
out
pop
xor
mov
inc
jg
lods
xor
push
test
out
(bad)
aaa
or
scas
movs
pusha
push
out
test
cwde
jns
cs
fcmovb
ja
mov
in
ss
ss
xchg
sbb
mov
jle
(bad)
shr
out
int3
imul
shl
out
xchg
sti
shl
jne
fisttp
inc
cmc
push
xor
shl
jl
inc
popa
cld
ins
xchg
mov
or
popf
sub
stos
outs
mov
loope
sub
jo
aam
xchg
int
add
pushf
pop
xchg
push
std
push
test
sub
dec
test
lods
(bad)
icebp
push
sbb
das
repnz
mov
pop
mov
cld
fisttp
dec
mov
sbb
cmps
enter
sbb
jo
ret
lea
mov
call
mov
jecxz
in
or
mov
sub
cld
lea
aad
(bad)
dec
pop
mov
jecxz
push
push
sub
mov
cmp
push
xchg
clc
xchg
jl
imul
sub
and
cli
jle
inc
pop
push
jmp
outs
push
jns
and
and
(bad)
cmp
ret
cmp
inc
test
stc
mov
ja
add
push
call
daa
jae
shl
and
push
xor
push
xchg
out
jne
mov
xchg
cmp
pop
or
ror
sub
sub
out
push
idiv
retf
push
pop
push
int
xor
fcom
push
js
test
scas
leave
test
mov
fmul
mov
loope
inc
mov
popf
addr16
lahf
jns
adc
in
mov
xor
jne
mul
push
push
push
jge
mov
sti
cwde
cmp
xchg
mov
jns
shr
jle
xchg
lds
arpl
pusha
fstp
and
imul
push
mov
cmp
data16
mov
into
(bad)
repz
fld
imul
mov
ret
pop
and
sti
popf
nop
fnsave
into
mov
cmp
adc
int3
dec
daa
sub
call
and
cmp
retf
adc
jbe
jnp
jno
mov
jle
jno
sbb
mov
in
scas
fst
fbstp
repz
aaa
adc
leave
push
repz
cmc
xchg
das
pusha
rcr
out
jl
hlt
outs
push
adc
pop
les
and
popf
fdivrp
push
clc
mov
pushf
sub
imul
inc
arpl
xchg
lahf
dec
std
jmp
in
pop
cmp
sbb
fstp
xchg
call
mov
mov
pop
dec
sbb
xchg
adc
int3
xchg
scas
sbb
out
and
xchg
sahf
cmp
dec
cmps
jecxz
lock
push
retf
ins
mov
loope
jb
sbb
fmul
(bad)
ss
mov
out
dec
cli
es
int3
aam
push
xlat
pop
div
mov
inc
jbe
jecxz
jmp
aam
les
repnz
mov
sub
into
adc
lea
ins
push
ror
pushf
pop
inc
ja
pop
cli
cmp
xor
cmp
xor
jne
dec
aaa
call
das
cli
inc
fsub
lock
fcomp
pop
out
xor
frstor
mov
bound
dec
aaa
addr16
lahf
pop
mov
aam
cwde
pop
mul
neg
pop
enter
scas
out
mov
sar
mov
cdq
add
js
dec
sub
enter
or
ins
lock
int
sub
fiadd
add
pop
mov
hlt
xor
dec
sub
and
xchg
sbb
mov
int
div
iret
xchg
(bad)
outs
mov
push
jle
sbb
outs
ror
js
das
cmc
stos
push
push
retf
test
push
stos
push
dec
shr
pop
adc
movs
cmp
test
aad
in
icebp
neg
lahf
fisttp
mov
cwde
mov
dec
cs
or
loop
dec
fcomp
push
(bad)
int
lods
pop
and
jne
sub
or
test
inc
pop
push
xor
iret
mov
idiv
loope
push
xchg
and
dec
cmp
jnp
push
std
adc
mov
pop
xchg
jmp
cmp
cmp
pop
outs
xor
lods
icebp
ret
call
push
dec
mov
jge
jp
cwde
adc
jmp
adc
fwait
cmp
add
outs
fwait
mov
and
pop
push
mov
cmps
fwait
sar
loopne
clc
shl
jne
pop
inc
mov
mov
pop
rol
xchg
js
cmc
imul
test
xor
enter
movhps
enter
jb
scas
test
std
lea
add
outs
sbb
cmp
jge
je
pop
repz
out
inc
hlt
stc
mov
inc
mov
out
les
cdq
sti
mov
mov
jge
daa
stos
cmp
and
das
adc
repnz
push
jbe
push
sahf
xchg
imul
js
call
out
test
jae
lock
nop
movs
out
push
xchg
into
in
inc
retf
dec
mov
add
sar
push
das
and
add
pop
retf
pop
aam
fcomp
retf
xor
push
jge
neg
dec
xchg
xor
xor
icebp
and
xchg
outs
out
push
mov
push
(bad)
(bad)
lds
mov
(bad)
mov
sub
ret
hlt
pop
mov
dec
and
lahf
push
cwde
mov
cmc
enter
cmp
xor
jns
mov
(bad)
jmp
clc
popf
dec
jb
test
cmp
or
push
shl
or
out
inc
pop
xor
mov
dec
adc
mov
pop
xor
cmps
lods
push
neg
sub
lock
test
sub
popa
fldl2e
xlat
inc
jl
push
retf
mov
gs
fcom
sbb
cmc
loop
stos
xor
aaa
push
scas
dec
push
jg
fiadd
mov
xchg
adc
sub
ins
out
icebp
ins
popa
add
mov
lods
sar
mov
repnz
push
les
or
mov
mov
aad
gs
imul
shl
mov
shl
add
lds
mov
inc
out
sub
sub
jo
push
cmp
jp
push
repnz
xor
aad
mov
jns
mov
jb
mov
mov
or
jmp
pushf
mov
hlt
inc
mov
dec
outs
xchg
and
ret
retf
rcr
aas
inc
push
movs
fdivr
cmp
scas
xchg
jbe
mov
inc
(bad)
adc
mov
push
xchg
fmulp
pop
sbb
out
hlt
add
fdiv
data16
shl
loop
sub
ja
cmp
jae
mov
data16
imul
add
jge
imul
cmp
loopne
movs
(bad)
gs
dec
fistp
out
cmp
in
sahf
xlat
push
aaa
xchg
stos
jne
mov
jne
add
(bad)
cmp
int
(bad)
cld
sub
or
and
jne
add
pop
xchg
cmp
and
add
push
mov
sar
mov
add
inc
jbe
stos
ds
inc
inc
es
es
mov
gs
fmul
pop
add
sub
mov
push
lea
call
pop
retf
xor
and
sub
cld
mov
mov
and
mov
jmp
test
icebp
fadd
sub
cdq
add
sahf
xchg
and
add
jmp
call
das
fild
test
idiv
jnp
mov
int3
jecxz
leave
cmp
repz
fwait
adc
mov
jae
sar
outs
(bad)
push
jmp
xchg
in
mov
inc
cmp
mov
sub
shr
cmp
loopne
jbe
popf
je
jmp
add
(bad)
mov
repz
mov
pusha
rcl
mov
int
dec
mov
mov
inc
push
push
push
jl
cwde
fld
rcr
gs
ins
icebp
mov
xchg
jns
aam
loop
pop
or
xor
mov
ds
adc
add
dec
push
xchg
mov
dec
adc
jno
mov
test
mov
cld
repz
pop
cmp
mov
retf
test
add
or
mov
mov
mov
adc
inc
jge
mul
cmp
sub
pop
pop
sub
mov
mov
mov
mov
and
fstp
add
leave
xchg
dec
stos
sub
test
call
loopne
push
or
ret
mov
mov
fistp
mov
in
xchg
fwait
xchg
pushf
in
xor
sub
clc
mov
sub
call
outs
inc
sub
stos
sbb
aaa
sbb
and
outs
push
push
xor
lds
sub
fld
(bad)
push
fcom
and
sbb
sub
mov
mov
(bad)
imul
(bad)
ss
test
mov
scas
mov
dec
iret
inc
shl
and
push
push
sbb
xor
sti
(bad)
cmps
dec
inc
movs
xor
dec
pop
dec
fisub
push
sbb
jmp
sar
dec
xor
inc
push
dec
int
pop
and
(bad)
jae
or
mov
pop
mov
mov
sti
add
sbb
mov
in
pop
mov
and
dec
cmps
xchg
push
test
pushf
lea
cmp
or
(bad)
lds
inc
stos
dec
inc
icebp
sbb
push
cmp
mov
jno
test
in
mov
das
sub
aas
push
ret
lods
mov
bound
xchg
arpl
inc
adc
jo
loopne
mov
fidiv
xlat
ds
aad
mov
cdq
push
or
leave
stos
inc
cmovnp
popa
dec
repz
mov
push
push
and
inc
pop
mov
jne
jbe
xlat
scas
aaa
push
jnp
xchg
push
push
xchg
inc
pushf
adc
repz
and
faddp
jge
sub
inc
data16
xchg
sahf
aad
mov
xor
pop
test
scas
jb
pop
cli
cmp
jae
or
out
ss
pop
mov
and
add
sub
enter
adc
add
xchg
inc
inc
es
xchg
and
jnp
(bad)
in
icebp
das
je
test
shl
inc
icebp
cmp
xor
mov
push
mov
sbb
adc
jo
ss
rcl
ja
out
je
xor
adc
call
daa
aam
and
sbb
push
imul
xor
repz
mov
stc
call
cmp
and
push
(bad)
enter
repz
movs
and
sub
mov
test
and
(bad)
loop
(bad)
(bad)
aad
cmp
mov
add
fadd
shl
sub
aad
scas
sub
mov
lds
icebp
mov
mov
shl
cli
pop
sub
lea
ja
jno
add
mov
xchg
sub
mov
sahf
icebp
inc
push
sub
sbb
push
xchg
xchg
ins
ins
cmp
ins
pop
in
inc
push
inc
in
dec
retf
dec
pushf
in
inc
push
jno
(bad)
call
sub
push
out
sub
sbb
mov
ss
ss
aaa
les
add
sub
in
stc
ds
daa
sbb
sbb
push
clc
repnz
push
jl
fdivp
jge
aaa
fisub
or
jecxz
mov
cmc
verr
js
in
or
push
jb
xlat
add
pop
(bad)
and
out
les
ds
or
jae
and
cmp
dec
js
pop
or
jnp
int
xor
in
sbb
in
das
dec
push
or
pushf
cmp
xchg
push
add
cs
mov
cmps
add
jbe
mov
or
sub
out
into
fwait
in
sub
mov
jp
(bad)
push
in
mov
ret
stc
cs
mov
adc
aam
pop
inc
mov
or
test
jecxz
jle
ins
xor
push
ins
not
jge
adc
loope
data16
mov
(bad)
movs
dec
push
fucomip
add
mov
pop
add
mov
not
add
add
xor
sub
clc
movs
lock
xchg
out
jecxz
dec
push
and
and
cmps
sti
arpl
xchg
or
xor
xor
push
adc
push
mov
stos
inc
jmp
aaa
(bad)
out
inc
jmp
xor
xchg
fiadd
and
xor
shl
jbe
push
sbb
stc
or
sub
fisub
or
ins
sub
or
xchg
push
fnstenv
repnz
stos
jmp
cdq
jo
push
not
bound
xor
pop
nop
mov
cwde
cli
inc
jge
fcomp
mov
jge
in
mov
inc
adc
into
imul
mov
ficom
cmp
cmc
sub
mov
fs
adc
mov
aam
imul
gs
lock
add
jle
popf
in
adc
fs
jmp
mov
movs
cmc
pop
cld
lds
and
jmp
imul
or
mov
xor
mov
call
sub
adc
bound
sbb
push
cli
mov
stos
call
mov
jb
xor
mov
enter
sbb
xchg
push
test
sub
and
mov
xchg
stc
sahf
cmp
sbb
and
sar
out
xor
adc
mov
jmp
sub
cmp
jp
ins
(bad)
in
xchg
inc
lods
call
aaa
(bad)
out
sub
pop
push
sti
ins
inc
ficom
loopne
add
in
iret
mov
xlat
imul
pop
lahf
push
fdiv
lds
paddw
inc
stos
pop
jmp
dec
enter
loopne
outs
imul
test
inc
or
pop
sub
(bad)
push
retf
add
das
out
cwde
fmulp
clc
push
mov
sti
xor
add
(bad)
lock
sbb
and
(bad)
call
jo
jbe
test
and
das
add
cmp
mov
cmp
pop
xchg
sti
jno
js
ja
xor
(bad)
ins
jmp
jge
sub
jl
dec
cmp
xchg
inc
(bad)
addr16
aad
and
add
adc
sahf
imul
jmp
retf
cmc
dec
jmp
mov
adc
lods
rcl
cli
jge
aas
jnp
aas
fucomip
jg
add
push
das
in
enter
pop
mov
cld
jo
and
es
ins
test
iret
int
xchg
adc
(bad)
pop
inc
xchg
out
cmp
outs
cmp
fnstcw
sahf
stc
sbb
repz
mov
mov
movs
xor
aaa
iret
ins
pop
mov
cld
not
jae
pop
xchg
icebp
ror
jge
and
(bad)
xor
mov
or
inc
xchg
popf
daa
call
icebp
push
cmps
mov
sbb
xchg
or
inc
lahf
lds
ja
out
sbb
lea
inc
inc
cmp
pop
mov
pusha
imul
scas
popf
lahf
test
fcmove
mov
mov
jbe
(bad)
(bad)
inc
fld
xor
sub
adc
xor
mov
add
es
mov
adc
ror
js
retf
dec
retf
mov
inc
not
cdq
imul
lods
push
pop
(bad)
cmp
cld
jg
dec
pop
jo
addr16
mov
xor
mov
int
dec
lea
push
xor
and
xor
and
out
jne
xchg
xor
pop
gs
or
lahf
inc
lds
cwde
dec
mov
in
in
int3
shr
sar
jl
gs
xor
mov
retf
cmp
dec
dec
push
pop
pop
inc
retf
clc
ja
mov
imul
out
pop
dec
aas
adc
test
cld
outs
outs
inc
gs
mov
cmp
dec
les
or
sahf
dec
adc
inc
fidivr
mov
mov
push
pop
xchg
sub
cmp
lods
sub
in
mov
neg
or
add
je
test
jmp
ret
adc
outs
ins
shr
ins
nop
xor
xor
retf
loope
data16
(bad)
stos
or
dec
repnz
dec
or
xor
add
(bad)
movs
idiv
cwde
push
xchg
(bad)
jg
loop
sbb
ss
jne
xchg
pop
leave
pop
cmc
mov
fstp
xchg
sti
sub
adc
test
imul
sahf
dec
loop
mov
or
inc
das
mov
mov
popa
lock
mov
push
dec
mov
add
push
jne
pop
(bad)
jmp
jmp
lods
xchg
cmp
and
bound
and
repnz
shr
push
pop
push
inc
ja
push
sbb
and
sti
xor
sti
xor
or
bound
popa
jg
adc
mov
loopne
gs
loop
ss
inc
jl
lahf
cmp
mov
nop
pop
add
xor
mov
dec
scas
out
jecxz
dec
inc
or
lea
jg
into
cwde
fidivr
lahf
data16
call
dec
mov
fist
xchg
ret
jbe
ja
leave
cmp
lods
fist
xor
add
xchg
fnstsw
(bad)
fldcw
stos
test
addr16
push
test
fcmovnbe
add
in
out
push
or
sub
pop
ins
aam
push
retf
add
popf
sub
div
jecxz
add
mul
add
mov
adc
xchg
pop
shl
sar
adc
sub
bound
xor
ret
arpl
ja
pop
fsub
inc
call
mov
